and
mov
cmp
mov
or
sub
add
mov
or
dec
rol
xor
and
xor
popa
and
aaa
inc
xor
dec
pop
dec
jb
jecxz
pop
mov
icebp
cmp
into
mov
push
ss
dec
ret
adc
xlat
mov
mov
cld
inc
jns
aad
jb
sar
push
neg
mov
sub
mov
adc
ins
lea
pop
mov
pop
xor
clc
mov
pop
cdq
add
and
jo
xchg
rcr
leave
sub
cmp
pop
mov
mov
not
cmp
mov
mov
iret
mov
stc
in
cld
(bad)
jle
add
add
or
xor
out
or
out
pop
dec
or
jmp
mov
fwait
sbb
push
inc
test
pop
pop
sbb
sbb
jb
mov
retf
xchg
pop
les
xor
pop
mov
mov
lods
sbb
(bad)
sbb
pushf
cmp
lahf
lds
fs
dec
fwait
or
or
and
inc
jle
and
cmp
push
leave
data16
add
bound
ins
or
cmp
das
inc
or
daa
or
adc
jle
mov
int
jmp
lods
ret
sub
xor
fdiv
push
push
bound
jno
enter
mov
or
dec
sub
retf
stos
add
ret
cmp
clts
mov
aaa
sbb
aam
gs
jle
fsubr
xchg
pop
into
out
test
or
add
inc
sub
cmp
les
sub
xchg
mov
mov
sub
mov
push
pop
push
xchg
mov
mov
jns
shr
ja
aas
or
icebp
test
sbb
(bad)
pop
inc
pop
loop
outs
or
mov
sbb
sub
or
adc
dec
mov
test
scas
mov
test
or
test
test
lods
mov
and
fs
push
movs
inc
cli
fst
xchg
dec
(bad)
nop
and
das
jo
cmp
sub
sbb
sub
xor
sahf
out
fnstcw
sbb
outs
fisub
in
add
gs
push
sbb
out
popa
dec
xchg
repnz
mov
jmp
sub
mov
dec
clc
aaa
add
bound
xor
mov
push
jl
push
and
xor
lds
test
add
sub
sahf
retf
pop
lea
test
inc
movs
push
xor
mov
mov
jne
movs
arpl
mov
into
dec
fistp
xchg
cs
cmp
(bad)
mov
pop
fldcw
xchg
and
add
fmul
dec
test
rol
arpl
or
ret
lahf
or
sub
adc
addr16
loope
mov
(bad)
lahf
xchg
test
lds
push
out
mov
fstp
int3
xor
pop
lods
sbb
(bad)
out
(bad)
cli
add
fiadd
jb
imul
rcl
and
ror
scas
mov
hlt
out
mov
or
xlat
stos
shl
adc
lods
ret
ins
adc
or
add
cwde
push
shl
mov
or
stos
cmp
in
pop
into
sub
sub
into
jecxz
jbe
push
adc
sbb
lds
enter
stos
es
sbb
pop
cwde
sbb
adc
idiv
push
(bad)
into
xchg
pop
cs
shl
and
outs
(bad)
push
jne
aas
(bad)
and
jmp
movs
pop
sub
in
mov
and
add
fs
iret
and
adc
inc
out
pop
int3
mov
rcr
push
add
or
fcmovbe
xor
ss
mov
stos
sbb
test
push
push
cmp
pusha
mov
pop
cdq
adc
adc
mov
in
push
add
mov
fimul
popa
push
fimul
int
pop
sahf
lods
mov
xor
(bad)
(bad)
sub
stos
jo
push
cmp
inc
mov
fwait
arpl
push
sub
pop
mov
sub
aaa
inc
add
push
cmps
cmp
jmp
sbb
adc
fs
mov
test
fidivr
lahf
push
shl
(bad)
aad
ins
jbe
sub
lahf
dec
iret
pop
adc
inc
sub
into
mov
cwde
fadd
pop
mov
pop
cld
repz
les
inc
or
aam
push
lea
sar
lea
sub
scas
cmps
mov
mov
mov
adc
adc
je
outs
in
mov
inc
fcomi
stos
and
mul
mov
leave
and
int
cmp
mov
sbb
inc
xor
sbb
(bad)
pop
lahf
ins
gs
pusha
pop
add
adc
cmp
push
sar
rcl
adc
xchg
std
popa
xchg
inc
popf
sub
sti
loop
cdq
jp
pop
push
shl
push
fcomp
mov
das
xchg
fs
sbb
dec
mov
cwde
xor
jb
int3
pop
outs
mov
ins
cmp
(bad)
aad
lds
icebp
ds
cld
(bad)
xchg
xchg
test
(bad)
nop
ret
(bad)
or
xor
push
push
cmp
out
cmps
dec
lods
shl
ss
aas
call
xor
iret
(bad)
movs
gs
clc
cmps
sub
inc
sub
(bad)
sbb
sub
dec
fwait
lea
movs
les
call
and
pop
pop
and
cli
neg
iret
icebp
pop
pop
(bad)
mov
xor
xchg
adc
cwde
iret
(bad)
cmp
dec
adc
retf
fdiv
ficom
sar
mov
cmps
pushf
xchg
jno
dec
(bad)
jae
and
dec
push
push
arpl
sbb
sbb
add
mov
cwde
not
mov
adc
sbb
xchg
shr
pop
aaa
(bad)
leave
cmp
jbe
fdivr
call
cmp
test
mov
fs
or
adc
jle
pop
lods
out
pop
sti
mov
pop
out
test
push
xchg
dec
jns
in
mov
hlt
lock
inc
lahf
dec
enter
iret
adc
adc
and
and
xor
add
jne
pop
pushf
pop
add
sar
and
outs
xchg
outs
and
rcl
mov
adc
xor
jno
fcomip
mov
add
mov
dec
cmp
xor
jmp
xchg
adc
in
imul
rcl
fidivr
ins
cmp
push
xor
mov
imul
cli
call
xchg
stc
bound
sahf
sub
int
pop
into
mov
enter
out
mov
pop
outs
std
add
mov
adc
jmp
mov
nop
mov
pop
fnstenv
bound
jae
cli
stos
dec
sub
lea
jle
xchg
pop
mov
aad
lds
enter
push
mov
dec
sub
jae
mov
jno
and
dec
jmp
retf
(bad)
jbe
pop
dec
mov
cli
lds
sti
and
push
jl
fldcw
ja
pop
jle
fist
push
out
sahf
ret
sub
push
fs
xor
jbe
clc
cwde
cmp
stc
xchg
push
aam
loopne
or
ins
xchg
push
(bad)
adc
std
push
xchg
mov
popa
mov
out
inc
cld
sub
jmp
fst
xchg
pop
or
arpl
das
push
test
ds
and
xor
scas
push
jno
clc
push
jbe
sbb
test
std
pop
push
jmp
imul
mov
adc
(bad)
sbb
xor
clc
add
cmps
sub
cmp
sbb
mov
aad
pop
jmp
ins
or
jmp
mov
mov
xchg
fisubr
jge
fimul
test
push
ficom
shl
in
xchg
dec
cmps
mov
mov
bswap
mov
mov
lds
or
xchg
arpl
les
inc
inc
dec
js
gs
fst
shl
movs
pop
pop
xchg
ror
es
sbb
repnz
cmps
pop
std
dec
xor
repnz
dec
outs
jns
sbb
cmc
sahf
repz
mov
out
call
jbe
jne
popa
mov
push
in
mov
sub
xchg
in
push
pop
mov
lods
in
js
pop
cdq
out
pusha
mov
fisub
inc
mov
arpl
in
or
sbb
push
out
cmc
bound
(bad)
div
sub
dec
retf
loopne
mov
popa
mov
std
xchg
je
shr
movs
jl
lods
sub
pop
xor
cmp
push
cdq
fsubr
(bad)
adc
clc
(bad)
mov
cli
mov
xchg
push
mul
hlt
cmp
repnz
and
iret
popa
ret
cli
jp
or
pop
xchg
shl
in
movs
fisub
loop
lock
retf
call
cmp
jnp
ss
jb
pop
pushf
jp
jbe
mov
jns
push
out
mov
popa
pop
sbb
and
jp
push
movs
xor
addr16
dec
test
ds
ret
arpl
in
popa
shr
(bad)
adc
popa
movs
jmp
js
xor
out
adc
jae
mov
test
inc
loopne
cmp
sub
cmp
stc
retf
push
dec
push
adc
rol
push
movs
mov
scas
sti
je
pop
aas
sub
sub
inc
aas
pop
sub
pcmpeqb
cmp
and
hlt
dec
sub
push
fwait
std
jae
(bad)
mov
ret
pusha
push
loop
or
std
arpl
sbb
ret
test
fs
add
and
mov
pop
mov
inc
inc
lock
inc
scas
out
call
test
or
div
clc
jecxz
movs
and
lea
enter
adc
dec
inc
pop
inc
in
jns
gs
adc
xor
pop
sub
mov
inc
xchg
jmp
push
fld
call
jo
jne
pop
push
shl
push
mov
and
push
add
jmp
fadd
imul
add
fst
sub
leave
(bad)
lds
mov
jl
xor
outs
mov
ss
clc
cmp
and
jns
fcomi
test
sub
stos
pushf
mul
push
imul
stos
xor
mov
js
xchg
xor
imul
mov
sub
fmul
lds
hlt
mov
pop
outs
mov
push
dec
fwait
adc
jne
(bad)
xor
jg
in
push
pop
into
sbb
ja
daa
adc
in
mov
lea
cwde
js
in
arpl
in
pop
ins
mov
jmp
dec
jnp
pop
call
jle
cmp
int
mov
mov
fsincos
fstp
sbb
mov
cmp
fist
dec
mov
xchg
mov
jne
dec
push
inc
stc
dec
jno
jae
in
mov
jmp
mov
rcl
outs
popf
sbb
and
enter
pop
test
(bad)
fwait
arpl
mov
jae
popf
sbb
(bad)
clc
ficom
mov
inc
xor
xor
test
test
(bad)
add
mov
push
mov
pusha
into
jle
arpl
jle
idiv
cli
xchg
sub
inc
pop
int
clc
ficomp
mov
mov
push
out
fimul
clc
xchg
test
retf
das
jle
mov
gs
dec
cld
fldcw
cld
retf
shl
dec
push
ins
imul
jp
xor
ss
ret
xchg
sub
mov
mov
out
int3
les
dec
mov
pop
std
xor
call
mov
cmp
jbe
jmp
mov
(bad)
fnsave
das
pop
js
lods
mov
out
sub
jecxz
rol
mov
retf
(bad)
test
sub
(bad)
ins
sub
aam
scas
xlat
xchg
call
aas
retf
sub
nop
rcr
pop
add
adc
arpl
ins
or
push
sub
jo
jb
lea
ror
jb
sbb
bound
add
push
jmp
rcr
adc
sbb
dec
xchg
out
les
xor
(bad)
(bad)
xchg
fs
into
stc
fisub
ret
test
and
movs
lahf
add
adc
pop
movs
adc
out
add
dec
adc
(bad)
push
add
fistp
add
mov
or
sbb
hlt
xchg
xor
inc
ds
ja
cmp
dec
dec
xor
mov
mov
push
dec
cdq
sbb
cmps
lahf
cld
jle
and
mov
mov
mov
adc
je
out
(bad)
shl
jmp
pop
cmp
enter
ss
cmps
push
out
xlat
adc
in
push
mov
call
jmp
ret
imul
add
mov
rcl
adc
cdq
adc
cld
scas
sbb
mov
mov
pushf
jae
xor
test
xchg
fldenv
pop
hlt
add
sbb
push
ror
pop
inc
mov
sti
xchg
dec
adc
fisttp
gs
imul
in
stos
es
imul
push
mov
mov
sbb
es
loop
scas
pop
fs
push
sar
fidiv
jmp
ret
(bad)
ds
icebp
sahf
mov
repnz
sub
pop
mov
pushf
imul
jecxz
vmptrst
lahf
mov
int
jp
popa
sbb
or
lods
call
enter
mov
loop
mov
es
mov
jo
sbb
mul
outs
sbb
cli
push
or
jecxz
out
aaa
xchg
or
inc
adc
cmp
pop
adc
(bad)
(bad)
fimul
out
dec
mov
js
cmp
or
xchg
fild
cmps
pop
dec
scas
mov
push
push
and
push
xchg
sbb
les
loop
fs
out
mov
dec
scas
cld
lds
mov
inc
sub
xor
cmc
mov
icebp
out
icebp
push
fst
loope
je
or
loope
inc
jg
rol
add
and
not
or
inc
pop
inc
movs
int
or
lds
push
nop
dec
in
xchg
mov
sbb
adc
mov
jns
(bad)
pop
imul
mov
xor
aaa
cs
movs
add
in
ins
lods
pop
(bad)
pusha
xor
mov
clc
daa
add
test
loop
ds
jno
cli
sahf
nop
mov
cmp
mov
fisttp
sub
adc
xor
mov
ret
cmp
mov
aam
mov
test
test
repnz
adc
ror
pop
ins
bnd
sti
aaa
and
shl
std
gs
and
inc
popf
loopne
mov
inc
scas
out
dec
ss
xchg
mov
dec
xlat
icebp
and
cmp
jecxz
push
inc
mov
movs
iret
test
push
inc
test
push
push
mov
xor
nop
scas
cmp
cmp
imul
out
int3
push
dec
cdq
dec
xlat
fbstp
in
jmp
jbe
mov
pop
cmps
mov
fwait
repnz
push
test
inc
out
jne
pop
mov
pop
xchg
or
mov
add
aaa
cli
hlt
aaa
into
sbb
imul
(bad)
enter
lea
mov
mov
mov
loop
ret
(bad)
ret
or
in
lods
imul
fwait
(bad)
mov
dec
data16
or
xor
jecxz
or
ins
inc
mov
sub
xor
push
mov
pushf
sbb
into
jecxz
ja
inc
lds
push
sbb
pcmpeqd
push
cld
gs
inc
cmp
int
pusha
js
retf
cdq
add
jo
stos
mov
(bad)
je
and
rol
xchg
sar
dec
dec
popa
pop
jns
jle
pop
jae
jmp
gs
pop
sub
cs
rol
dec
sub
xlat
xchg
(bad)
add
dec
stos
mov
pop
inc
cmps
fdiv
outs
jmp
mov
xor
fldcw
mov
data16
(bad)
outs
jle
imul
ret
push
pop
add
retf
jne
add
jae
jmp
mov
cmp
jecxz
push
and
push
jmp
cmp
push
and
jns
int
cdq
mov
inc
dec
test
add
movs
(bad)
cmc
mov
push
inc
std
jmp
mov
nop
and
jl
fadd
dec
in
mov
clc
and
push
mov
mov
adc
cmovno
repnz
jge
xchg
mov
and
sbb
xchg
dec
retf
and
push
scas
int3
in
mov
push
and
mov
push
mov
push
sub
lods
xchg
push
(bad)
sbb
fnstenv
inc
mov
sbb
imul
xchg
arpl
pop
inc
mov
es
mov
pop
jb
pop
fdivrp
cmp
call
dec
push
or
stos
ja
inc
fcom
sbb
add
out
nop
inc
xchg
xor
mov
mov
outs
loope
retf
cmp
jo
xor
in
xor
fistp
fcmovnbe
mov
lock
call
js
pushf
fld
lods
sub
add
sbb
sbb
icebp
bound
adc
repnz
or
mov
mov
mov
and
nop
test
(bad)
aad
mov
mov
inc
or
dec
rcr
(bad)
push
enter
enter
cmps
into
sahf
push
sub
rcr
lods
cdq
aaa
cmp
lock
push
inc
out
dec
fcmovnb
daa
pop
jmp
and
push
mov
iret
stos
pop
xor
lock
xchg
add
scas
mov
mov
jge
add
xor
xchg
in
jo
mov
cli
inc
je
(bad)
cmc
pusha
das
cdq
jg
push
dec
mov
sub
cmps
adc
ror
adc
lods
mov
rcl
fwait
jmp
inc
sub
xor
mov
enter
inc
repnz
and
dec
cdq
int
les
clc
add
and
dec
movs
sub
push
and
je
sbb
mov
or
xchg
dec
das
call
jae
pusha
aas
sbb
fs
add
sar
gs
xchg
jbe
add
push
inc
pop
out
jl
pop
call
je
jnp
adc
and
sub
pop
hlt
fwait
(bad)
fnsave
shl
mov
hlt
loopne
ins
jbe
daa
ss
mov
dec
cs
sti
sbb
sub
push
cmp
adc
inc
cli
daa
inc
cmp
cmp
ror
add
ds
jmp
fnstsw
xchg
xor
jbe
clc
lahf
dec
inc
cwde
push
or
inc
fwait
sub
cmp
pop
outs
push
cwde
xor
das
or
enter
(bad)
mov
mov
push
push
sub
mov
iret
adc
daa
popa
iret
inc
loope
push
sub
jo
push
sub
pop
and
js
bound
jo
jne
aaa
push
ja
cld
retf
push
fidiv
xor
cmp
in
rol
sub
ss
adc
sbb
and
dec
sub
nop
mov
test
test
add
cmp
mov
mov
cmps
retf
ja
lock
push
mov
inc
xchg
in
movs
(bad)
out
ret
dec
push
pop
push
movs
imul
xchg
(bad)
inc
cmc
push
outs
pop
mov
in
xor
or
mov
cmp
push
adc
sbb
into
sub
pushf
ja
sub
xchg
mov
rol
(bad)
push
sbb
mov
loope
out
dec
sub
aam
mov
in
in
or
pop
push
sub
aad
mov
sub
cmp
or
dec
dec
mov
cmp
lods
ficom
clc
or
and
push
sub
and
out
inc
aas
lds
(bad)
mov
pop
or
iret
outs
sbb
mov
jl
rcr
xchg
out
fld
fisttp
jb
and
jle
or
cmp
(bad)
call
and
and
mov
push
es
outs
aam
outs
adc
into
das
test
call
ficomp
ins
movs
ds
cmps
pop
mov
shr
xchg
jne
jnp
cmps
mov
pop
inc
mov
(bad)
out
sub
jnp
imul
ds
xchg
shl
enter
iret
rcl
jle
cmp
(bad)
das
add
push
or
in
or
xchg
cwde
sahf
test
jge
pshufw
mov
jge
inc
fdiv
mov
xor
cmp
arpl
xchg
in
mov
jno
mov
jo
jne
aam
sahf
loope
adc
jo
mov
jo
stos
push
fwait
test
push
fmul
in
rol
cmp
mov
iret
mov
shl
xor
int
sar
mov
inc
push
and
cli
adc
or
pop
or
sar
popf
xchg
fdivr
mov
add
mov
push
lods
mov
inc
stos
in
popf
(bad)
pop
and
call
fwait
call
sbb
rcl
xchg
fwait
mov
push
jge
push
fwait
sub
dec
and
stos
movhps
daa
xlat
jl
jp
mov
cdq
je
aaa
push
or
call
pop
sbb
shl
xor
jb
adc
or
dec
jp
inc
and
push
rcl
inc
(bad)
xor
(bad)
dec
in
inc
xchg
cdq
ins
pusha
and
and
xlat
or
ret
mov
call
data16
imul
lods
js
sub
vpshufbitqmb
mov
jecxz
add
iret
shl
(bad)
rcl
sar
retf
out
repz
push
push
pop
mov
and
mov
movs
add
pop
jo
cmc
js
test
adc
repnz
(bad)
cmp
retf
pop
jecxz
out
push
ret
movs
icebp
dec
pop
adc
daa
call
aas
es
xchg
cvtps2pi
xor
push
repz
fistp
inc
pop
popa
cmp
(bad)
push
and
pop
jp
scas
pop
shl
jp
pop
stos
scas
pop
add
push
cmp
(bad)
push
sbb
sahf
sbb
push
(bad)
aad
imul
fwait
mov
rcl
mov
push
fdiv
ds
sahf
pop
(bad)
(bad)
sbb
mov
fld
cmp
ins
(bad)
cwde
push
adc
test
cmp
adc
pop
rol
ss
ss
mov
mov
out
bnd
xchg
xor
push
push
push
sar
outs
or
and
xchg
pop
in
stc
int
hlt
xor
xchg
cmps
(bad)
xchg
not
sbb
lods
shl
ja
pop
movq
xchg
icebp
hlt
pop
cmp
loopne
push
test
outs
enter
mov
loope
mov
js
jns
mov
inc
clc
js
jl
xchg
test
add
or
add
cs
lock
std
repz
das
and
(bad)
popf
and
out
jmp
lock
lock
push
repz
loope
test
add
push
sub
pop
dec
loop
lahf
call
cmp
xchg
loopne
rol
push
pop
inc
retf
sub
into
xchg
mov
mov
in
add
jmp
push
push
xchg
iret
add
and
bound
rol
inc
mov
cmp
rol
(bad)
orps
sub
inc
sub
mov
out
push
dec
inc
mov
scas
inc
mov
cmovno
jg
jno
into
cli
add
xchg
pop
js
ds
mov
dec
retf
push
xor
imul
cmps
loope
popf
or
and
pusha
outs
jle
out
sbb
iret
push
rol
retf
jno
sahf
sub
inc
xchg
jo
jecxz
fstp
fild
jge
xor
jp
test
out
out
js
mov
dec
mov
dec
in
push
pop
jno
add
jge
jecxz
popf
push
mov
scas
dec
mov
es
ds
ins
stos
pop
jo
dec
cld
stos
pop
sbb
or
pop
jne
adc
inc
pop
inc
aas
fisttp
pop
and
or
adc
rcr
fwait
jo
hlt
ja
mov
jge
jge
hlt
push
fldenv
out
js
sbb
dec
cmc
out
or
mov
xor
dec
stos
cmp
pop
jmp
jae
or
in
dec
retf
jge
(bad)
ficomp
push
cs
mov
cld
loope
mov
fild
xor
hlt
test
inc
mov
sub
xchg
jns
xchg
rcr
mov
adc
fistp
out
mov
cmps
jb
xlat
inc
lahf
and
push
arpl
add
jbe
and
add
fldenv
outs
mov
mov
mov
push
mov
push
cmps
out
bound
sbb
hlt
push
fsubr
or
ret
cmps
addr16
stc
loope
in
loop
hlt
hlt
mov
in
mov
fucomp
aad
scas
(bad)
jmp
add
sbb
ja
cdq
xchg
adc
aam
sub
sbb
imul
in
pushf
arpl
xchg
inc
test
ja
stos
(bad)
xlat
rcl
call
in
dec
test
mov
gs
dec
dec
mov
push
inc
cli
sbb
test
and
jle
dec
stos
jg
mov
(bad)
(bad)
clc
mov
repnz
pop
sbb
sbb
scas
mov
jnp
add
mov
pop
aas
ins
fist
push
push
jb
cdq
xchg
and
or
fdivr
ss
mov
or
clc
dec
push
add
pop
loopne
mov
add
pop
test
or
sub
les
pop
imul
jg
add
pusha
push
popf
das
in
lds
mov
sbb
xchg
pop
stos
mov
aad
cld
xor
data16
push
call
stc
(bad)
leave
loopne
lds
add
push
sub
hlt
adc
mov
int
dec
sahf
pop
push
and
jo
pop
dec
and
js
fild
shl
popa
and
pushf
jp
stc
push
(bad)
adc
add
or
mov
jmp
loope
push
mov
inc
inc
imul
stos
cmp
out
xor
add
xor
pop
fwait
std
out
rol
loope
adc
inc
mov
xchg
or
push
inc
mov
inc
jns
test
mov
inc
mov
lods
repz
jns
loopne
sub
adc
mov
out
fldenv
and
fidivr
add
add
(bad)
(bad)
mov
xchg
jle
(bad)
mov
cmp
inc
jle
mov
mov
ins
imul
push
sub
mov
jnp
mov
in
and
jecxz
sar
mov
fwait
lods
mov
jns
pusha
adc
adc
pusha
and
dec
jb
shr
dec
in
fldl2e
call
out
(bad)
jmp
pusha
inc
pop
ret
in
mov
ror
rol
stos
fild
int3
test
in
jg
sbb
adc
jns
pop
push
mov
dec
dec
fadd
clc
cmp
or
and
add
mov
and
dec
stc
(bad)
pop
std
out
sub
daa
pushf
scas
ss
cmp
clc
fcom
aad
xor
and
jo
xchg
push
data16
dec
jmp
daa
jecxz
icebp
in
cmps
data16
add
mov
fisub
sub
out
arpl
or
int3
test
adc
sub
jp
inc
jmp
push
add
je
add
xchg
mov
popf
ret
cmp
and
pop
mov
pop
pop
add
sub
idiv
mov
aas
mov
mov
jecxz
dec
adc
icebp
leave
jno
icebp
xchg
in
je
mov
scas
or
mov
inc
pop
adc
xchg
mov
push
js
aas
cmp
jae
scas
cmovae
cmp
leave
call
xlat
ins
lea
inc
int
into
test
lods
mov
cwde
mov
pop
fld
in
mov
mov
pmaxsw
idiv
jge
mov
test
dec
pusha
icebp
and
(bad)
xchg
loope
fbstp
nop
push
xchg
jge
stos
fsub
mov
les
xchg
pop
sub
enter
int3
dec
das
push
jmp
push
cld
mov
and
(bad)
mov
out
gs
test
(bad)
pop
mov
(bad)
add
pop
jp
mov
inc
adc
adc
xor
push
xor
xchg
xchg
push
retf
call
or
js
push
out
ficom
movs
cmp
stc
movs
cs
dec
aad
fcomp
lds
jae
or
lods
pop
push
mov
mov
stc
call
fwait
cmps
push
out
fs
pop
xchg
sar
or
inc
sbb
jne
out
test
jl
pushf
fld
mov
sar
inc
jle
in
cmp
fsubr
and
jns
fs
or
shr
mov
mov
jbe
(bad)
hlt
sbb
leave
shr
jne
xlat
lahf
(bad)
imul
xchg
and
mov
mov
ins
gs
sub
and
mov
data16
adc
push
enter
popf
xchg
mov
movs
pop
mov
jbe
(bad)
es
jecxz
int
mov
jo
add
ror
dec
mov
inc
xchg
hlt
loop
rol
ss
pop
ss
jl
call
sahf
or
xcrypt-cfb
cmps
es
lahf
add
push
mov
jle
mov
xchg
fmul
not
push
xor
dec
pop
add
aad
addr16
out
add
add
sbb
mov
push
sbb
lds
lea
test
stos
pop
sbb
mul
jmp
jmp
pusha
test
daa
xchg
into
(bad)
das
push
cmp
aas
xchg
cs
test
sbb
cmp
pop
and
js
les
inc
fwait
int3
cmps
test
adc
push
cmp
pushf
cmp
jne
(bad)
pusha
xchg
adc
jb
popa
cmp
(bad)
jp
or
and
inc
pop
mov
pop
outs
push
test
dec
(bad)
jmp
or
out
dec
adc
mov
out
inc
or
int
call
jno
inc
pop
push
mov
fisub
mov
mov
mov
pushf
add
adc
ins
jge
fstp
xchg
jns
retf
xchg
or
das
xor
std
ins
rcr
mov
add
aad
les
pop
pop
xlat
test
repz
nop
in
aaa
ret
mov
lds
mov
dec
stos
gs
sub
cmp
jl
leave
xor
jne
fcomp
out
imul
arpl
or
shr
push
pusha
(bad)
into
jnp
push
and
mov
cmp
adc
sub
pop
fwait
dec
mov
fs
enter
xchg
arpl
cwde
sub
sub
or
cdq
call
add
cmp
(bad)
rcl
pusha
dec
dec
xor
imul
sar
push
inc
mov
lods
es
ror
daa
cwde
push
pop
pusha
dec
mov
nop
mov
push
pusha
mov
xchg
xor
cwde
fld
pop
outs
hlt
ds
cld
cmp
dec
leave
je
ss
sahf
adc
fsubr
jno
xchg
push
jbe
xchg
jp
mov
pop
repz
and
aaa
hlt
rol
aad
pop
lds
adc
inc
jge
mov
pop
push
fcomip
sahf
push
iret
lock
leave
repnz
(bad)
dec
adc
add
sub
clc
fdivr
lahf
mov
call
inc
retf
mov
push
dec
out
mov
retf
lds
retf
fcmovne
loopne
lock
(bad)
push
out
mov
je
aad
or
sub
inc
pop
push
inc
(bad)
inc
mov
adc
out
dec
(bad)
(bad)
add
cmp
mov
xchg
pop
push
mov
mov
fistp
add
loope
(bad)
rol
ins
xchg
push
mov
pop
mov
lock
cmps
dec
imul
or
inc
aam
scas
mov
dec
mov
jge
cmp
sbb
sar
adc
ror
inc
ds
ret
mov
popf
inc
repnz
and
pushf
in
out
je
xchg
inc
sub
pop
mov
pop
ds
stos
repz
clc
jmp
stc
mov
(bad)
out
add
fstp
sub
push
xchg
mov
add
sub
faddp
cli
jns
jmp
es
push
or
fisub
(bad)
sahf
pop
loopne
fcmovne
(bad)
push
mov
mov
jecxz
retf
xchg
loop
cli
cmc
xor
ja
jg
movs
lea
jae
sub
or
xor
aad
jmp
mov
pop
outs
xchg
pushf
(bad)
in
fisub
adc
sub
in
inc
cmp
xor
mov
jo
mov
push
cmc
popf
pop
mov
mov
pop
cmc
push
and
sub
mov
ret
and
xchg
iret
sbb
xchg
mov
inc
lods
push
xor
psrlw
aam
mov
test
push
sbb
xchg
pop
cld
rcl
or
or
outs
xchg
loope
mov
and
lods
std
jo
outs
imul
add
adc
jnp
and
(bad)
push
jg
sub
outs
lods
sahf
test
xchg
jl
adc
add
push
inc
pop
int3
adc
and
add
mov
daa
xchg
scas
sbb
data16
mov
pop
ins
inc
cmp
movs
stc
stos
pop
imul
xchg
fwait
(bad)
out
sbb
inc
sbb
fwait
inc
xchg
pop
pop
add
or
cmp
pop
mov
addr16
cmp
pop
fldcw
cmp
adc
pop
inc
pop
bound
out
mov
pop
movs
dec
aad
iret
mov
push
xchg
xchg
inc
sub
retf
mov
xchg
xchg
mov
mul
xchg
cmp
clc
cmps
jmp
push
or
repz
or
pop
dec
lock
rol
pop
je
shr
sbb
xchg
xor
adc
mov
fsub
xchg
dec
push
clc
mov
hlt
aaa
retf
xor
dec
jns
scas
xchg
xor
xor
jbe
jno
sub
xchg
mov
aaa
mov
push
not
or
loop
dec
cmps
loope
cmp
sub
ja
fnsave
pop
inc
in
test
and
and
cdq
dec
(bad)
push
adc
ins
pop
(bad)
jns
push
sbb
sahf
xor
xlat
es
pop
jp
add
push
fstp
je
test
stos
addr16
jns
sahf
(bad)
jno
fwait
and
jns
pop
sti
ja
ret
mov
dec
cmp
mov
test
aam
push
inc
add
sar
test
(bad)
int
push
push
frstor
test
jns
ror
aad
in
push
fist
mov
bound
hlt
or
pop
js
adc
ficom
cmp
push
and
into
cmps
int
sbb
cmp
not
(bad)
and
mov
cld
ss
sar
mov
cmp
cmp
out
mov
int
dec
sbb
push
sahf
repz
jb
fidiv
fld
mov
in
daa
iret
adc
xor
repnz
daa
or
inc
je
mov
sbb
or
mov
add
adc
jge
push
lods
fild
(bad)
loope
pop
add
push
(bad)
loop
mov
loopne
in
mov
es
call
lahf
in
dec
out
push
sbb
cmp
arpl
cmp
jg
dec
inc
nop
mov
ins
fcmovnu
mov
nop
call
mov
add
lock
xchg
or
pop
xchg
or
ins
xchg
xor
xchg
inc
stos
jno
repz
pushf
dec
fs
in
xor
jl
inc
push
fmul
adc
mov
jmp
movs
js
shr
xchg
mov
stos
push
xchg
out
into
jo
loope
cmps
jp
mov
push
jp
or
es
rcl
xor
xor
mov
fcomp
or
inc
push
sbb
(bad)
fstp
jae
sar
pop
idiv
mov
jl
imul
pop
into
popf
popf
hlt
out
rcr
(bad)
(bad)
clc
stos
inc
push
and
dec
idiv
jmp
xor
jp
xchg
xchg
sbb
jle
mov
mov
push
add
or
cmp
jle
shl
cmps
stc
mov
pop
cwde
les
mov
jno
xor
and
ret
xor
pop
sub
sahf
loope
pop
push
call
adc
in
and
adc
adc
std
jl
cs
shl
je
jo
stos
push
movs
rol
mov
push
or
popa
and
outs
push
call
push
popf
sub
mov
fld
push
xchg
xor
jbe
adc
sub
ins
push
pop
or
lods
push
adc
adc
in
aaa
out
or
ins
fisub
mov
jne
xchg
retf
shl
iret
rcl
pop
dec
aas
retf
in
mov
cli
dec
sar
cmp
lods
aam
out
hlt
mov
test
jl
push
aas
sbb
xchg
imul
mov
mov
outs
push
(bad)
gs
xchg
(bad)
cmp
retf
push
inc
and
jbe
add
xor
movs
xchg
shr
out
jmp
popa
movs
outs
pop
xchg
pop
dec
adc
cmc
adc
mov
inc
add
in
les
(bad)
and
in
mov
sahf
or
mov
iret
and
xchg
pop
cwde
mov
xchg
sub
sahf
and
ret
xor
cmps
gs
pop
(bad)
ds
retf
lea
mov
add
inc
ret
retf
add
push
dec
push
sbb
mov
fstp
jg
sahf
jno
rcl
imul
sbb
adc
int
(bad)
or
dec
das
mov
and
fist
cmp
add
add
xor
sub
es
int3
in
(bad)
pop
mov
dec
(bad)
sub
lock
ds
sbb
cmp
popa
cmps
loop
lahf
add
sbb
or
adc
push
sub
sbb
and
lods
mov
push
aam
mov
pop
mov
cwde
push
in
sti
inc
sar
popa
dec
outs
addr16
or
mov
mov
adc
mov
ficomp
jbe
inc
in
gs
repnz
sbb
mov
jb
mov
xchg
mov
and
sub
pop
shr
popf
enter
cs
cmp
and
or
test
add
ss
mov
loopne
(bad)
aaa
jbe
cli
fwait
jmp
pop
retf
dec
vrsqrtss
mov
mov
lea
add
jns
je
xor
fimul
inc
mov
add
pop
test
aad
jle
add
cmp
fild
(bad)
jecxz
xchg
nop
mov
push
rcr
push
in
lods
sbb
jg
sub
mov
call
call
ret
sahf
ret
xor
sahf
xor
or
rol
sub
jle
and
mov
stc
or
pusha
lods
inc
jle
ja
hlt
cmp
adc
xor
xor
out
setae
mov
add
sub
rcl
push
mov
pop
scas
or
retf
mov
shr
mov
and
push
(bad)
push
cwde
cli
(bad)
js
in
cli
fst
cld
dec
sub
mov
test
sub
xchg
inc
cwde
inc
outs
push
mov
ret
mov
mov
rcr
fwait
cmp
jo
sahf
ror
dec
pop
push
call
pop
sbb
std
mov
ja
mov
dec
push
cmp
pop
sbb
jl
xchg
jmp
cmp
pop
jg
ror
dec
ins
cmps
cmp
adc
add
xchg
dec
pop
test
dec
(bad)
pop
dec
xlat
xchg
arpl
enter
cwde
xchg
add
push
xchg
add
iret
xor
pop
sub
inc
dec
bound
sub
imul
call
pusha
jmp
sub
mov
xor
push
retf
cmp
dec
(bad)
pop
aad
mov
(bad)
jmp
aas
xchg
mov
retf
out
stc
cmp
push
add
pushf
loope
mov
(bad)
jl
mov
sbb
pusha
jnp
je
dec
jnp
cs
push
ret
loope
mov
jg
sbb
adc
sub
popa
mov
ud1
repz
mov
xchg
ins
fsub
xchg
stos
fwait
rcr
push
pop
or
mov
sub
xor
mov
in
mov
sub
and
push
add
dec
out
pop
out
outs
or
pop
rol
not
add
clc
ret
or
dec
fistp
sub
stos
ror
sub
lods
add
fbstp
enter
je
mov
dec
pusha
out
mov
out
jbe
pop
test
mov
sub
add
(bad)
jns
fist
push
test
mov
pop
cmpxchg
mov
aaa
aas
and
rol
dec
aaa
inc
inc
push
lea
hlt
ret
push
push
call
mov
mov
bound
outs
call
mov
adc
scas
pop
les
sbb
push
ins
jle
and
in
sahf
or
loop
sti
ds
aaa
rcr
aas
push
dec
mov
neg
add
cwde
in
xchg
sub
and
cmps
mov
mov
xchg
pop
push
ds
pop
shr
pop
mov
repz
call
xchg
sbb
std
mov
xor
mov
call
in
and
sub
adc
test
and
inc
push
push
(bad)
jge
shr
push
push
and
mov
mov
sbb
xlat
retf
imul
sub
aas
xor
dec
cvtdq2ps
sar
bound
add
lahf
fisub
xorps
lahf
xor
sar
loope
dec
movs
cmps
arpl
clc
iret
lea
cmp
scas
jge
inc
and
outs
(bad)
ds
add
daa
inc
mov
dec
icebp
push
sub
pop
stc
sbb
xchg
popa
nop
movs
xor
leave
out
fs
movntq
out
add
and
dec
es
cs
cmp
jmp
or
mov
pop
jge
call
adc
adc
push
dec
cmc
enter
add
cmp
cli
lahf
idiv
push
adc
add
ss
adc
cmps
cs
sbb
sti
xchg
es
iret
sbb
sub
sbb
jg
ins
and
jbe
cmps
push
sbb
xchg
push
ret
push
pop
and
cld
lahf
jnp
xchg
pushf
pop
dec
pop
push
add
pushf
ins
rcl
outs
dec
sub
xor
sub
lea
push
push
xchg
cmp
repnz
push
(bad)
mov
rcl
cmp
push
mov
cmp
out
push
jmp
aam
shr
stos
sbb
shl
fsubr
mov
sub
movs
add
loopne
or
xchg
push
inc
jno
(bad)
xor
or
add
cmp
add
push
add
sub
dec
(bad)
movs
into
loop
fst
push
xchg
inc
movs
(bad)
in
xchg
test
outs
or
in
cmp
xchg
mov
pop
jns
add
sar
les
dec
push
or
push
xchg
int3
(bad)
adc
jl
movs
xchg
rol
call
test
out
rcr
mov
mov
(bad)
fs
fs
mov
ins
ds
aam
and
fnsave
and
mov
aad
adc
adc
fld
arpl
arpl
bound
pop
xchg
add
push
jo
rcl
sbb
icebp
enter
or
add
fwait
pop
mov
jb
stos
sub
dec
mov
jo
mov
fcmove
pop
sar
and
loope
rcr
dec
cld
ins
and
xor
push
iret
mov
sbb
push
paddsw
into
test
mov
mov
dec
push
(bad)
add
loop
(bad)
sub
(bad)
arpl
cmp
call
movs
xor
mov
gs
xchg
in
adc
sub
xchg
pop
mov
imul
aas
cmp
rcl
int
(bad)
dec
pushf
mov
push
js
push
push
movs
sub
sub
mov
pushf
jmp
popa
sub
call
push
push
or
push
in
push
js
xor
ss
cmps
sbb
lahf
hlt
imul
jge
leave
nop
ss
or
repnz
pop
mov
adc
or
mov
daa
cwde
sub
call
shr
rcl
aaa
push
jmp
adc
xor
cld
xchg
aad
sti
nop
and
push
push
imul
clc
mov
fstp
cmp
xchg
outs
ja
pop
jo
vpcomb
xchg
pmaxsw
add
mov
call
daa
push
cwde
cdq
pop
mov
std
mov
test
stos
xchg
ss
imul
(bad)
pop
jle
fbstp
clc
xchg
mov
lahf
mov
cmp
shl
jbe
imul
into
test
or
(bad)
and
jecxz
pop
clc
sti
leave
sbb
dec
cmp
fisttp
push
(bad)
in
mov
pop
xchg
mov
mov
jns
push
in
sbb
xchg
jmp
or
dec
pop
fbstp
loope
in
addr16
iret
cmp
ret
pop
shl
push
jmp
repnz
test
xchg
aam
lea
sub
pop
xchg
mov
cmp
pop
fwait
jbe
jnp
test
adc
push
push
cmp
je
outs
mov
cmp
xchg
outs
cli
push
cs
lods
ret
mov
mov
scas
js
and
out
repz
and
cmp
in
fprem1
pop
cwde
aaa
pop
mul
push
adc
stc
ficom
mov
cmp
jge
mov
sub
pop
sub
sbb
jbe
dec
dec
and
sbb
dec
test
sbb
sbb
adc
xor
arpl
sti
adc
push
movs
daa
mov
dec
mov
jmp
mov
push
jbe
and
out
outs
xor
and
pop
adc
shl
repnz
xchg
xor
adc
cmps
repnz
gs
sub
mov
jge
and
cmp
sbb
lea
ret
(bad)
adc
test
out
hlt
cmp
or
add
retf
dec
add
xchg
dec
scas
into
adc
mov
out
inc
les
xchg
xchg
sbb
enter
mov
xor
div
mov
inc
inc
repz
fwait
in
nop
stc
jge
out
test
dec
popa
xor
xor
pushw
ficomp
std
mov
es
cli
xchg
inc
adc
push
fiadd
mov
xchg
inc
cmp
(bad)
(bad)
jmp
push
hlt
sub
mov
ja
push
lods
ficomp
gs
dec
mov
ins
xchg
xor
or
jp
pop
(bad)
mov
sti
loop
fs
push
repz
jg
ret
test
mov
idiv
aad
mov
aad
je
mov
sti
sbb
stos
or
adc
pop
or
in
pop
shl
jl
dec
shl
ret
je
jmp
cs
push
adc
arpl
pop
jmp
(bad)
out
jo
pushf
shl
jb
addr16
ds
jmp
xor
dec
test
out
pushf
jecxz
jae
pushf
movs
adc
es
pop
rep
cmp
add
js
pop
(bad)
sub
push
jno
mov
(bad)
(bad)
ror
popa
sub
mov
retf
ja
js
pop
mov
ins
ss
cwde
fst
lods
jl
aad
jbe
add
adc
jae
rcr
xor
fs
dec
std
in
movs
add
jmp
dec
mov
sbb
lods
(bad)
jge
inc
xchg
push
jno
stos
pop
sahf
push
loopne
cmc
test
nop
or
cwde
mov
or
js
fcom
sbb
rdpmc
imul
xor
call
inc
jmp
adc
mov
push
cmc
add
mov
imul
jecxz
cmp
cmp
push
pop
mov
pop
rcr
sbb
xchg
sub
dec
sub
iret
fistp
enter
push
mov
cmp
fwait
push
shl
(bad)
fwait
adc
pop
gs
in
mov
out
xchg
std
push
jae
add
in
(bad)
out
loop
scas
mov
movs
mov
(bad)
in
lds
aad
cs
cmp
dec
out
jmp
or
dec
movs
sar
adc
mov
call
rcl
hlt
in
push
mov
std
enter
mov
push
daa
(bad)
pop
pop
jge
push
sbb
cmps
sub
call
test
clc
int3
mov
arpl
sbb
outs
dec
and
jmp
fcom
mov
jmp
(bad)
jle
and
jns
xchg
add
scas
mov
je
xchg
loop
jns
mov
push
lahf
test
sti
or
push
push
(bad)
xchg
fs
xor
sbb
gs
icebp
in
fcomp
sti
test
add
push
enter
push
sti
dec
and
sbb
test
sti
add
jle
lds
or
pop
cwde
jo
fs
jmp
out
fmul
mov
cwde
sahf
xor
push
cdq
xor
arpl
stos
mov
sahf
jmp
daa
sbb
fucom
js
add
mov
ins
fnsave
xor
call
pop
(bad)
data16
pop
sbb
xor
(bad)
cli
jge
xchg
daa
inc
xchg
push
pop
cli
mov
sub
jmp
test
mov
and
scas
jns
lods
pop
repz
(bad)
nop
mov
enter
fiadd
dec
das
push
cmp
jb
jne
daa
and
xchg
call
outs
int3
cwde
mov
xchg
(bad)
enter
xor
jae
jle
popf
jmp
aad
int
out
cmc
pusha
outs
int3
rol
arpl
push
push
div
dec
inc
shl
jb
mov
add
stc
retf
adc
loope
imul
sbb
adc
test
push
or
sbb
xchg
ror
xor
push
mov
stc
or
stc
fsubr
popa
ficomp
add
cmp
jge
xchg
test
jo
test
ss
test
jae
shr
xchg
pusha
cmp
scas
dec
fdivr
xchg
and
fist
sub
scas
movs
fcomi
or
push
stc
js
add
jo
dec
mov
push
in
and
push
xor
call
test
leave
push
out
sub
push
in
mov
outs
jno
xor
aas
jbe
sahf
jle
or
dec
add
mov
xor
out
inc
bound
ja
ror
mov
mov
inc
inc
mov
mov
mov
hlt
movs
ins
add
arpl
xor
mov
and
lock
or
pusha
push
test
in
and
xchg
cmp
(bad)
mov
fmul
test
jae
push
(bad)
mov
add
dec
je
jecxz
dec
lods
dec
inc
fiadd
cmp
js
mov
loopne
dec
mov
jmp
sub
enter
and
add
and
mov
retf
ss
or
xor
imul
jns
inc
jno
pop
imul
and
(bad)
jne
out
test
jl
iret
sub
lods
fwait
lock
sub
adc
retf
mov
jge
mov
out
xor
fbstp
sqrtps
mov
push
pushf
adc
out
xchg
add
(bad)
mov
inc
js
xor
cli
add
add
dec
pop
add
mov
cld
outs
fidivr
mov
cmp
(bad)
sti
fs
cmp
and
ins
lds
and
push
xlat
push
jae
ja
mov
(bad)
xchg
shl
push
scas
inc
ins
add
ja
mov
out
in
mov
call
pop
cdq
lods
fcom
sub
mov
xor
add
iret
aaa
or
jle
mov
or
xchg
mov
std
or
add
pop
loop
sar
sbb
out
or
dec
in
ins
lock
push
sbb
imul
hlt
adc
pop
mov
ja
or
repz
mov
mov
lds
neg
int3
or
add
xor
xchg
push
cwde
or
inc
xchg
pop
xor
xor
push
sti
mov
mov
in
push
xchg
add
sub
sub
cmp
mov
sbb
int
movs
push
inc
stos
adc
push
mov
cmc
cld
movs
xchg
outs
push
mov
sub
arpl
outs
movmskps
push
lahf
imul
pop
add
icebp
icebp
(bad)
ins
inc
push
mov
jmp
push
popf
mov
retf
mov
mov
repnz
jmp
fdiv
inc
shl
sub
test
fdivr
outs
add
lea
mov
ret
rcr
icebp
ret
data16
push
pusha
leave
add
jb
mov
int
call
sub
out
shl
and
xchg
sub
fnsave
es
and
pop
stos
push
aad
inc
cmp
inc
inc
gs
add
outs
(bad)
cmp
push
jmp
inc
imul
or
mov
push
clc
xchg
xor
lock
mov
sub
mov
fdiv
pushf
pusha
or
push
in
mov
cdq
in
jle
or
or
pop
das
adc
pushf
(bad)
mov
inc
push
in
lahf
mov
jbe
mov
sti
loop
xchg
sub
inc
cwde
data16
push
push
mov
dec
cli
repnz
mov
repz
aam
xchg
dec
sbb
aad
pusha
mov
mov
addr16
mov
and
leave
ja
cmps
clc
xchg
dec
push
push
call
cmp
fwait
in
pushf
pusha
out
add
into
inc
out
test
cmp
imul
in
punpckhwd
mov
and
call
fisubr
out
cmp
adc
mov
add
pop
xor
test
sar
pop
aas
or
int3
lds
jmp
hlt
imul
xchg
jns
cmps
lahf
jge
popa
xchg
repnz
dec
inc
jmp
imul
cli
xchg
fisub
out
xchg
xor
js
inc
cwde
jno
adc
hlt
mov
mov
sub
sbb
jg
mov
add
fidiv
pop
ret
fild
jns
jl
bound
mov
push
repnz
inc
iret
(bad)
jno
clc
ss
xor
lock
xor
pop
outs
push
adc
faddp
je
inc
fsubr
push
call
sahf
aad
test
adc
mov
retf
es
add
push
adc
dec
retf
pop
xchg
and
inc
push
shl
or
ss
and
inc
push
dec
xor
pop
jne
or
jg
sub
inc
pop
es
add
lock
mov
lea
push
ret
mov
jbe
(bad)
lahf
cmp
pop
xchg
repz
retf
jno
imul
xor
shl
bound
mov
xchg
(bad)
frstor
fistp
inc
call
xchg
xchg
pop
test
mov
ss
in
sahf
jl
int
xchg
repz
in
mov
inc
daa
cmc
cmp
repz
mov
push
aas
in
shl
or
mov
ins
call
call
mov
lahf
lods
shl
jl
ror
sahf
aas
mov
loop
push
(bad)
mov
leave
stc
xor
lock
sub
rol
mov
ret
test
sahf
aaa
or
mov
loope
adc
jecxz
fldcw
fsubr
cmp
shl
mov
retf
jp
cmp
inc
out
jmp
icebp
out
movs
loope
repnz
loope
add
dec
inc
(bad)
push
test
mov
mov
and
pop
push
std
push
loope
jne
test
mov
mov
jno
fisub
js
hlt
mov
mov
mov
and
aam
sahf
pop
and
jne
sbb
push
xor
sbb
dec
rcr
cli
jl
and
jle
mov
mov
adc
mov
retf
pop
dec
repz
jmp
test
cld
cwde
test
cmp
in
int3
retf
or
retf
pop
stos
aad
mov
xlat
mov
outs
in
push
jecxz
aaa
sar
pop
shl
out
jl
adc
add
jmp
pop
cmp
dec
jmp
xlat
mov
outs
or
inc
mov
scas
add
cmp
loop
pop
jae
xchg
lods
xor
std
mov
xlat
sti
inc
mov
pop
pop
jmp
or
xor
mov
mov
ins
add
leave
jno
movs
int
mov
pop
ret
push
shl
inc
call
or
lods
(bad)
xchg
addr16
ds
and
rcr
mov
stos
call
mov
ins
push
jns
ja
(bad)
jbe
in
cmp
pop
or
movs
movs
xchg
ins
scas
adc
fwait
xchg
fisub
mov
pop
or
in
leave
bound
xchg
aas
or
hlt
push
retf
mov
sbb
push
push
popa
xor
push
pop
popa
jmp
push
in
call
jnp
jl
xchg
pop
xor
pop
dec
add
(bad)
fnstenv
ret
fld
jb
push
pop
jnp
xchg
je
push
fnstenv
pop
fld
in
pop
mov
jbe
fst
cmp
mov
shr
and
call
dec
mov
dec
push
(bad)
mov
mov
cmps
fst
in
in
nop
repz
popf
dec
out
das
fyl2x
cmp
dec
bound
loop
shl
jae
push
addr16
stos
dec
test
mov
or
pop
push
lods
jae
aam
movs
das
sbb
stos
test
sub
dec
mov
fist
push
mov
out
inc
and
pop
cdq
or
cwde
imul
or
jecxz
ret
lds
daa
cmps
mov
test
movs
je
(bad)
sbb
nop
push
and
mov
pop
sbb
dec
fisttp
xlat
jecxz
pop
pop
dec
lds
mov
lock
imul
sar
in
mov
add
sbb
pop
pop
sti
(bad)
call
mov
sub
dec
ret
(bad)
jb
movs
shl
adc
call
popa
les
jno
sbb
sbb
lahf
mov
xor
mov
ins
(bad)
in
add
(bad)
stos
pop
jne
jle
outs
push
mov
xor
test
push
sub
lods
add
sbb
mov
add
sbb
jmp
mov
dec
mov
scas
movs
inc
pop
mov
push
or
mov
leave
lds
sbb
or
bound
push
imul
test
fsubr
icebp
(bad)
xor
xor
lods
push
push
cmp
cdq
pusha
dec
adc
enter
ds
aaa
xchg
(bad)
jecxz
dec
fimul
fwait
mov
dec
push
test
outs
call
inc
push
cmps
dec
repz
sub
xchg
in
sbb
and
dec
pop
xor
cmp
jb
bound
mov
in
call
pop
pop
adc
ins
fsubr
mov
ret
popa
fisubr
je
ficom
xor
ds
out
mul
mov
jmp
push
sti
pop
aad
into
sbb
inc
push
pop
jecxz
push
mov
inc
sub
jbe
mov
iretw
repnz
imul
sti
cwde
push
adc
int3
push
std
call
push
movs
or
sbb
jmp
call
push
or
nop
pop
out
test
es
push
not
dec
cli
jl
in
inc
int
sub
ins
pop
cmps
xchg
mov
add
es
push
ret
lahf
fist
mov
lea
mov
add
es
cmc
ror
add
pushf
adc
xor
push
push
cmp
inc
in
push
mov
mov
pusha
outs
cdq
add
inc
xor
xchg
(bad)
pop
loope
das
mov
retf
xchg
xor
or
in
pop
mov
push
inc
fsub
xor
into
cmp
and
cmp
(bad)
sbb
pop
jae
pushf
les
jo
adc
cdq
jae
mov
sub
inc
loope
jmp
call
int3
xor
fmul
sub
sub
xor
imul
int
mov
test
(bad)
icebp
mov
sbb
iret
pop
push
jmp
dec
pop
ror
enter
fcomp
int
xor
leave
ret
sahf
jmp
dec
pop
jl
fdivr
inc
hlt
fs
mov
mov
repz
push
fldenv
dec
xchg
pop
lods
dec
mov
or
arpl
aaa
repnz
or
mov
hlt
mov
cmp
mov
push
mov
in
push
into
pop
fimul
arpl
and
push
mov
je
stos
xchg
sub
push
aam
jnp
addr16
adc
mov
pop
mov
xor
retf
mov
cli
iret
mov
repz
cmp
pushf
pop
iret
or
dec
xchg
sti
fdivr
dec
cwde
je
cmps
jge
nop
cmp
inc
(bad)
push
jecxz
mov
mov
clc
fdiv
aad
retf
mov
leave
jno
fsubr
mov
mov
(bad)
pop
dec
or
loope
aam
inc
je
mov
mov
leave
add
(bad)
ds
adc
repnz
pop
inc
fcomp
sub
push
aas
inc
xor
jnp
test
lock
out
sbb
mov
cmp
pusha
cmp
xchg
jecxz
bound
mov
daa
(bad)
jne
jne
jecxz
xchg
clc
mov
lds
adc
dec
out
fdivrp
mov
std
dec
jle
rol
out
arpl
in
out
xchg
mov
pop
mov
push
call
push
adc
adc
or
sti
or
movs
jnp
push
or
in
add
sub
stos
js
popf
adc
mov
push
fsubr
push
retf
mov
sub
mov
loopne
add
adc
out
retf
jno
xchg
jmp
test
jl
cdq
push
mov
lock
add
inc
pop
mov
stos
mov
neg
sar
jge
shr
mov
pop
ds
popf
dec
xor
xchg
mov
push
enter
hlt
add
sub
cmps
aaa
(bad)
mov
cmc
sub
dec
xor
add
cli
mov
or
fld
cmp
out
mov
leave
xchg
and
test
hlt
icebp
pop
pop
fmul
push
div
mov
xchg
sub
je
jns
mov
mov
pop
xor
pusha
inc
pop
xchg
in
in
jmp
fucom
outs
push
ins
cmp
rol
cmp
cmp
es
add
cwde
pop
ds
test
sbb
in
ins
fwait
mov
inc
arpl
sti
ss
xchg
mov
xchg
fcom
add
pop
loopne
sbb
scas
push
sub
cmp
mov
ror
ret
rol
sub
pop
mov
mov
test
push
popa
ins
aaa
dec
xchg
pop
sbb
pop
movs
push
ss
in
or
fwait
mov
xchg
jmp
or
xchg
mov
mov
and
mov
xor
pop
pop
cmps
xor
stos
inc
jne
in
pop
gs
xchg
idiv
test
fldl2e
stc
and
sbb
dec
mov
sbb
shl
in
fs
xor
fistp
and
aad
mov
sub
ds
sbb
xchg
cmp
mov
aaa
sub
arpl
push
ret
loope
xchg
shr
retf
sub
imul
lods
pushf
lods
in
enter
dec
into
cmp
dec
sub
and
test
or
fistp
pop
scas
sub
xchg
or
inc
mov
aas
pop
mov
daa
std
call
int3
or
stos
sub
clc
pop
mov
mov
mov
xchg
or
stos
(bad)
ret
retf
outs
(bad)
and
jo
add
ror
lock
inc
sbb
loop
inc
mov
mov
pop
int
pushf
jp
and
fdiv
loopne
nop
or
lds
das
cmp
jle
es
jo
xchg
jmp
es
cmc
pop
sar
jmp
jecxz
mov
cmp
jnp
fnsave
stos
or
add
xor
mov
add
cmp
sbb
pop
pushf
imul
dec
push
es
sub
xchg
cwde
adc
jb
sbb
pusha
and
mov
out
call
into
in
sub
sbb
pop
adc
xor
or
sbb
in
mov
je
inc
adc
mov
cmp
daa
pushf
add
cs
aas
fidivr
jp
(bad)
outs
test
inc
pop
cs
xchg
mov
lods
dec
shl
jmp
jge
test
jae
or
aas
mov
sub
and
xor
pop
dec
xor
dec
pop
push
mov
xor
xchg
mov
aad
outs
sub
fwait
cmps
hlt
push
cmp
popf
add
push
adc
sub
test
adc
mov
(bad)
sub
cmp
fimul
out
pop
pop
inc
outs
cmp
es
inc
inc
sti
(bad)
out
mov
mov
movs
pop
sub
addr16
test
push
xlat
cmps
cmps
dec
pop
(bad)
bswap
jp
leave
mov
popa
adc
mov
xchg
imul
enter
jg
jmp
xchg
xor
or
mov
jb
sti
jmp
mov
add
jne
scas
cmp
or
popa
arpl
std
test
sub
or
jnp
js
jbe
adc
xor
popf
cmp
cdq
inc
(bad)
xchg
mov
pop
loop
mov
mov
ins
fcom
fdiv
mov
sbb
lods
aas
rol
leave
mov
jp
cmp
imul
dec
cmp
lods
push
xchg
xchg
hlt
fisttp
fdiv
stc
out
not
sti
xchg
jecxz
outs
xchg
into
mov
cwde
test
mov
das
and
mov
(bad)
mov
mov
pop
xchg
mov
fisttp
mov
mov
pop
lahf
and
idiv
inc
push
pop
sbb
fnstenv
inc
mov
mov
pushf
and
add
ins
sub
or
sub
cmp
mov
push
test
pop
cmp
rol
js
enter
jae
push
test
mov
adc
xlat
cmp
jno
js
dec
xlat
push
scas
xchg
mov
xchg
push
push
jecxz
shl
fcmovb
xchg
dec
test
inc
or
jnp
or
in
push
mov
xlat
push
pop
jno
push
dec
inc
push
push
ss
movs
push
or
popa
and
ss
out
mov
ret
test
inc
nop
sti
mov
shr
dec
or
mov
push
inc
sbb
retf
jne
bound
push
cmps
es
aaa
inc
push
pop
js
xchg
retf
mov
sbb
mov
xchg
arpl
or
in
cmp
in
mov
aaa
mov
mov
dec
in
and
dec
les
les
xchg
fsubr
cmp
lea
xchg
aaa
mov
(bad)
sbb
call
les
pop
repz
inc
mov
cmp
pop
and
imul
dec
icebp
bound
mov
pop
mov
(bad)
movs
(bad)
mov
xor
fdiv
mov
or
mov
inc
xor
test
jl
jmp
imul
xchg
mov
repnz
inc
jns
hlt
outs
pop
loopne
cmp
sbb
inc
ret
dec
lock
jbe
xchg
out
fnstcw
jmp
mov
test
(bad)
aad
shl
out
jns
loope
add
aas
call
je
rcr
xor
cmp
cmp
add
dec
into
fisttp
or
mov
aam
ficom
not
xor
pop
fist
outs
adc
in
leave
lahf
or
lahf
xor
out
in
js
mov
imul
sbb
xchg
pop
or
lock
fst
mov
daa
dec
shl
jo
or
mov
cmp
ds
sbb
(bad)
push
scas
dec
push
ret
xlat
mov
jle
(bad)
xchg
inc
rcl
test
jg
push
(bad)
xchg
cmp
mov
or
dec
cmc
jl
adc
ret
sbb
das
and
cdq
iret
xor
jo
icebp
pop
cmps
mov
add
rol
sub
push
xor
push
push
fwait
or
xor
cmp
inc
enter
or
cli
pop
cmp
adc
sub
or
adc
mov
sub
pop
jmp
jno
add
scas
fsubr
xchg
and
dec
or
pop
cmps
and
les
cmp
in
mov
test
push
in
stos
cmovne
(bad)
dec
add
out
mul
mov
idiv
xchg
pop
jmp
retf
pushf
and
dec
mov
scas
cmp
repz
and
scas
lock
adc
xlat
jo
scas
jg
adc
sub
(bad)
gs
and
imul
push
lahf
jne
lds
(bad)
xor
push
xchg
jge
mov
sub
std
or
push
outs
sbb
and
sbb
push
ret
lea
jbe
inc
jg
or
or
fucomi
adc
adc
lods
addr16
(bad)
pop
call
fwait
dec
or
sub
rcl
(bad)
jmp
das
lahf
mov
cld
cmp
jl
cmp
xor
dec
fs
inc
jne
aas
xlat
pshufw
sub
setae
push
(bad)
jbe
icebp
lahf
sbb
cs
add
pop
icebp
mov
(bad)
cmp
cmp
mov
idiv
addr16
cdq
rcl
add
sbb
std
push
enter
clc
int
imul
mov
clc
mov
sar
in
sub
jno
sar
pop
sbb
jle
sahf
(bad)
cmc
shr
das
jecxz
adc
iret
sbb
mov
js
stos
cs
or
cmp
dec
(bad)
jne
shl
xchg
inc
scas
dec
aas
pop
adc
stos
not
inc
ffree
daa
daa
fnstcw
push
stc
data16
div
jg
stc
add
cdq
clc
sub
xchg
jecxz
sbb
add
dec
mov
lock
outs
and
test
fdivr
mov
cmp
jle
mov
xor
ins
push
dec
iret
cmc
cmps
push
cmp
adc
mov
mov
mov
fwait
push
enter
inc
and
and
jecxz
cmc
iret
retf
scas
cmp
je
jge
das
aad
std
rcl
sub
outs
gs
jmp
pop
xchg
cmp
out
outs
push
sbb
loop
xor
mov
cmps
inc
cmp
(bad)
cmp
arpl
aaa
lahf
push
cld
cld
add
push
or
jne
sub
(bad)
fmul
shl
pop
stos
std
sub
ret
(bad)
pop
out
mov
jbe
add
jmp
inc
adc
clc
pusha
test
into
addr16
(bad)
je
lahf
or
push
mov
enter
push
jmp
jg
cmp
test
(bad)
nop
pop
jno
outs
adc
retf
sbb
fist
scas
mov
pop
sti
pop
xlat
jge
popf
cmp
and
ret
push
imul
clc
cmp
clc
in
push
xchg
jbe
pop
popa
jl
dec
(bad)
daa
and
jecxz
outs
out
push
aad
in
scas
or
xor
jl
mov
popa
or
xor
test
scas
sub
inc
in
leave
jmp
jmp
and
cmp
ins
lods
dec
call
in
icebp
sbb
std
loopne
pusha
stos
mov
pop
sar
and
(bad)
lock
jg
inc
mov
rcr
pop
retf
add
aad
push
leave
cli
xchg
fcom
sbb
lds
cmp
imul
jmp
cmc
dec
adc
fwait
push
mov
les
jo
push
and
arpl
std
xor
and
mov
sub
mov
cmp
stc
sti
add
mov
aas
enter
std
mov
push
leave
hlt
arpl
mov
scas
outs
ss
push
sbb
jl
and
or
sti
shr
mov
jge
sbb
adc
sahf
push
or
shr
jnp
movs
retf
and
mov
arpl
popa
push
mov
xor
pop
je
pop
dec
jnp
push
mov
aam
test
popa
jp
mov
lahf
std
mov
pop
sbb
xchg
jmp
pop
es
mov
xchg
mov
in
ud0
and
xchg
inc
aaa
js
inc
mov
or
sub
sub
push
xchg
or
adc
adc
push
cmps
fiadd
ins
adc
inc
ins
mov
push
add
inc
dec
fmul
adc
loop
cmp
cmp
imul
inc
jnp
and
adc
es
or
inc
sub
cwde
cdq
call
push
shl
iret
cmps
test
mov
shr
call
mov
push
add
js
add
pusha
pop
xor
pop
pop
or
inc
cmp
pop
bnd
fdiv
into
jp
ret
cmp
jmp
idiv
scas
sti
jmp
addr16
mul
pop
add
js
cmp
cmps
push
mov
fisub
mov
push
fisubr
push
fsub
loop
adc
mov
aad
data16
adc
lea
cmp
retf
xor
mov
repnz
xor
dec
or
pop
int
retf
cmp
and
sti
dec
pop
ins
push
push
mov
or
jns
test
aaa
xchg
pop
adc
push
pop
out
cmp
cs
gs
inc
mov
cli
adc
out
sub
push
arpl
sbb
out
rcl
inc
push
add
sub
fmul
xlat
cld
jge
fs
jno
jp
mov
(bad)
pop
push
pop
sub
add
add
(bad)
push
cmp
adc
sub
test
int
repz
dec
std
mov
push
mov
(bad)
dec
repnz
adc
aad
cld
push
cmp
ins
push
repz
xor
pop
adc
adc
sbb
or
xlat
pop
push
cld
vpmacssdd
ficom
pop
cs
sti
push
(bad)
scas
enter
scas
jp
adc
call
xchg
sar
arpl
cdq
ins
adc
jp
stos
ucomiss
div
scas
inc
stc
les
mov
jmp
jbe
dec
push
(bad)
addr16
call
adc
bound
dec
mov
mov
ins
call
jecxz
imul
mov
fisttp
jne
(bad)
sub
idiv
push
cld
sahf
stos
inc
dec
xor
into
arpl
push
pop
or
sbb
mov
fadd
(bad)
sub
dec
mul
cs
mov
mov
pop
or
sub
mov
xchg
mov
(bad)
(bad)
scas
inc
mov
ret
xor
or
cs
dec
hlt
loop
ficom
mov
dec
loope
shl
jo
cmps
push
pop
sbb
inc
fisttp
adc
dec
jecxz
in
movs
or
pop
pushf
jecxz
dec
lock
pop
mov
imul
dec
mov
xor
pop
inc
shl
jecxz
fwait
xor
fldenv
mov
repnz
div
cmp
(bad)
clc
and
retf
in
mov
mov
push
xchg
repz
add
dec
dec
push
cmp
mov
and
shr
jp
xor
dec
push
imul
xchg
sbb
and
cmp
gs
adc
fiadd
push
xor
mov
cmp
pop
movs
fild
adc
mov
or
ja
push
lahf
lods
pop
icebp
js
sbb
icebp
jg
mov
and
mov
sahf
fistp
iret
lods
cmp
in
js
mov
scas
pop
enter
mov
repz
ficom
nop
xchg
jae
repz
xchg
cmp
sbb
add
and
dec
push
test
add
adc
inc
out
jae
sbb
jmp
cli
jl
(bad)
sbb
enter
inc
lods
sbb
pop
ucomiss
push
dec
fdiv
sar
inc
int
ret
sar
jg
dec
push
xor
repz
mov
(bad)
jne
loop
imul
movd
popa
sti
(bad)
xchg
adc
sbb
cwde
push
mov
orps
sub
dec
adc
or
xchg
mul
in
jmp
ss
fwait
loopne
dec
xlat
sub
movs
in
mov
add
fst
cmp
sub
mov
mov
movs
imul
cmp
call
add
mov
pushf
inc
(bad)
shr
jno
loopne
fbstp
cmp
cdq
div
cli
and
scas
in
push
movs
push
fcom
lods
dec
ds
push
ret
stos
xchg
mov
mov
sbb
jno
outs
lock
ins
jp
xchg
into
push
cmc
add
mov
je
ins
daa
jl
mov
push
dec
mov
add
pop
sbb
xor
or
out
sbb
push
sbb
add
mov
cmps
out
scas
mov
pop
jns
pop
loop
rcl
sub
jns
dec
out
inc
mov
shl
cmp
add
sbb
ret
fistp
cli
push
(bad)
sbb
aaa
fistp
test
adc
mov
bound
mov
ror
mov
sar
pop
inc
imul
test
xor
cwde
ins
mov
xlat
pop
jne
mov
mov
push
pushf
sbb
es
jnp
dec
nop
mov
repnz
add
pop
loopne
pop
push
pop
dec
sub
cmc
pop
mov
cmc
dec
sbb
mov
movs
cwde
cmps
pop
push
test
test
les
cmc
pop
aaa
mov
outs
fcmovb
sbb
(bad)
dec
cmp
sti
add
push
jns
gs
retf
pop
jmp
ror
(bad)
dec
or
mov
push
sahf
push
movs
fabs
rol
fidiv
dec
pop
mov
test
and
push
leave
out
das
mov
ds
pushf
xchg
stos
xadd
mov
xchg
xchg
jg
loopne
fidivr
xor
pop
fnsetpm(287
inc
inc
test
push
and
cs
(bad)
bound
hlt
mov
aas
inc
or
test
jnp
je
cmp
dec
js
sbb
cmp
lock
pop
xchg
pop
scas
fdiv
push
popa
add
in
int
sub
stos
and
or
mov
xor
push
shl
ret
dec
push
or
movs
jp
imul
int3
mov
cmps
pop
push
cmp
dec
into
cmp
fimul
imul
ficom
xchg
xor
fstp
test
outs
xor
dec
retf
imul
lds
sar
or
mul
pop
jae
repnz
pop
out
in
jns
adc
in
idiv
mov
or
xor
pop
mov
out
jle
mov
lock
mov
jp
xchg
in
sbb
pop
inc
enter
pusha
dec
out
jnp
ja
mov
cwde
adc
mov
pop
inc
retf
dec
rcr
sbb
jns
adc
dec
xlat
xor
sub
dec
ret
test
not
sbb
adc
xchg
pop
xor
or
mov
repnz
sub
mov
adc
stos
loope
jecxz
iret
push
hlt
or
push
data16
push
mov
test
adc
xor
xor
and
mov
adc
in
shl
inc
repnz
push
xchg
push
test
adc
clc
jle
test
lds
loop
scas
out
dec
pushf
cmp
cmc
mov
mov
int3
mov
mov
mov
pop
mov
out
movzx
push
aad
mov
sbb
sub
pop
sub
out
add
pop
jp
je
ja
mov
ss
icebp
call
addr16
pop
mov
sbb
or
sub
mov
shl
mov
mov
neg
xor
push
jb
push
pop
xchg
pop
(bad)
loopne
std
daa
push
in
mov
cmp
es
(bad)
or
inc
outs
inc
jbe
cli
xor
cli
popf
loopne
(bad)
sub
adc
sub
jo
retf
dec
cdq
sbb
dec
xor
jge
aas
jp
dec
js
mov
movs
test
sub
or
sti
out
sbb
bound
pop
jl
rcr
jle
(bad)
xchg
push
sub
add
jecxz
xchg
push
mov
cdq
test
call
xchg
inc
xor
jo
test
pop
mov
jmp
outs
scas
dec
push
fmul
push
fistp
mov
fild
das
dec
rcpps
and
cmp
mov
cmc
add
out
and
jg
xlat
mov
mov
jmp
clc
iret
test
jg
push
jnp
cmc
mov
in
and
sub
jle
mov
cmp
add
int3
cmps
stos
jecxz
imul
jno
fucomi
jbe
call
cmp
xchg
mov
xchg
mov
jmp
or
mov
inc
dec
or
adc
xchg
(bad)
xor
push
push
pop
rcl
mov
add
data16
cmps
(bad)
adc
ins
lods
push
pop
cmps
ret
lahf
dec
outs
sti
pop
rcr
loope
inc
nop
fild
icebp
add
pushf
sar
sbb
ins
clc
sbb
pushf
mov
pop
or
js
jl
(bad)
fldcw
jns
xchg
pop
lods
ror
xor
stc
ror
dec
loope
lock
inc
xor
scas
icebp
cmp
xchg
inc
in
icebp
in
sbb
outs
enter
repnz
xlat
ss
popa
in
stos
sbb
fwait
scas
arpl
inc
not
outs
mov
hlt
iret
jne
ja
cmc
sub
jb
push
scas
xlat
pusha
fld
push
lods
pop
sub
push
push
ret
ret
les
jmp
ins
jmp
(bad)
xor
(bad)
jl
out
mov
pop
in
jge
clc
ja
fcomp
jne
mov
sub
adc
iret
xchg
mov
xor
mov
push
adc
aas
mov
(bad)
push
rcr
and
aas
pop
hlt
das
inc
jmp
mov
jl
push
mov
xor
aam
push
das
adc
loopne
jmp
jne
jge
xlat
das
push
cmp
rcr
iret
aam
out
xchg
ret
jnp
mov
xchg
cmps
add
push
clc
jl
mov
ss
stos
pop
or
test
sbb
aad
or
adc
xchg
std
xchg
xor
in
sub
imul
into
or
jno
push
in
cmp
jne
xbegin
xchg
rcl
pop
loop
adc
call
outs
mov
jmp
cs
cdq
pusha
mov
jnp
retf
stos
cmps
movs
retf
test
and
test
in
xlat
push
fsubr
sbb
pop
imul
ror
test
mov
out
adc
call
outs
out
lea
mov
push
inc
les
mov
pop
push
and
bound
sbb
pop
and
xor
out
int
pop
loope
push
push
add
ficomp
adc
inc
xlat
jmp
mov
and
add
iret
pop
jne
(bad)
enter
cmc
call
inc
bound
icebp
fisubr
mov
popf
lds
inc
inc
or
test
pop
test
mov
dec
mov
add
fisttp
mov
jge
pop
xchg
addr16
mov
out
jg
push
ins
mov
stos
rcl
sysexit
jle
xchg
sbb
mov
test
adc
dec
cmps
ja
pop
xor
repnz
push
cdq
into
bnd
and
in
xchg
pop
mov
push
movs
push
arpl
js
arpl
sbb
ficom
cmps
sub
sub
push
cmp
or
dec
cmps
cmp
mov
push
bound
mov
mov
(bad)
pop
outs
scas
in
cli
imul
sub
(bad)
outs
(bad)
dec
jg
xchg
jae
daa
imul
mov
jns
fisub
or
mov
jmp
xor
dec
mov
push
jle
sub
scas
mov
dec
pop
fwait
test
popf
mov
mov
or
dec
daa
es
mov
data16
xchg
pop
cld
movs
(bad)
sbb
inc
pop
add
xchg
cs
mov
sbb
sbb
fcmovb
add
cwde
in
fwait
test
aaa
sti
inc
jecxz
jnp
cmc
pop
jecxz
sti
outs
icebp
add
jge
xor
jge
jmp
push
sub
rcl
fld
pop
(bad)
(bad)
std
ins
fadd
aaa
hlt
mov
sub
mov
adc
jno
mov
dec
and
sub
in
dec
jns
cwde
fs
jle
xor
loopne
xchg
out
shr
mov
mov
and
sbb
pop
xchg
cli
pop
jo
jg
lock
cmp
inc
sbb
dec
push
stos
mov
pop
or
rcr
retf
jmp
cmps
dec
add
stos
adc
repnz
mov
push
adc
aas
mov
ret
lock
or
scas
xor
sub
stc
in
jle
inc
mul
jns
xor
pop
popf
and
jns
mov
ret
jmp
xchg
pop
iret
call
push
(bad)
bnd
shl
aad
stos
and
loope
inc
mov
mov
in
lahf
stc
clc
mov
imul
sbb
test
mov
std
aas
or
loopne
mov
jns
movs
ret
icebp
cld
dec
aam
cmps
add
mov
sbb
mov
sbb
xchg
in
pop
loop
cmp
fdivrp
popa
dec
jmp
inc
mov
jae
mov
and
(bad)
nop
pop
stc
retf
mov
mov
lods
jl
popf
jp
ja
or
jbe
inc
ja
push
ret
and
xchg
cli
fwait
mov
movs
xor
cdq
retf
jno
(bad)
popf
adc
mov
push
and
adc
retf
xchg
mov
fwait
sub
shl
sub
jne
rol
shr
xor
loop
jbe
push
dec
addr16
jnp
mov
add
sub
xchg
pushf
sbb
ds
rcr
cmp
cmps
sub
or
jmp
in
dec
xlat
test
add
push
adc
mov
cmp
mov
mov
lock
in
cmp
mov
into
sbb
cmp
push
loop
outs
mov
loopne
push
inc
inc
jae
fdivr
add
or
inc
and
cmps
sahf
inc
jp
dec
movs
or
jo
sbb
cmp
loop
pop
mov
sub
mov
and
dec
pop
mov
push
ret
lods
(bad)
jecxz
retf
retf
(bad)
cmc
out
lahf
jge
or
push
stos
cmp
pop
out
mov
ror
imul
out
sub
cmp
cmp
jae
jmp
mov
pop
xor
jne
mov
div
mov
clc
dec
xor
fld
adc
mov
aas
cmps
push
popa
adc
test
mov
pop
mov
fxtract
inc
or
repnz
lds
or
add
(bad)
scas
mov
into
pushf
(bad)
dec
scas
daa
das
mov
mov
test
sbb
mov
pop
in
imul
loope
adc
scas
jle
or
mov
sar
cmp
pop
xor
enter
(bad)
push
dec
push
adc
mov
mov
cli
fsubr
(bad)
scas
test
stos
mov
adc
and
cmc
fmul
fistp
dec
(bad)
pop
(bad)
outs
cmc
repz
cwde
gs
retf
push
(bad)
shr
mov
adc
dec
(bad)
jle
mov
shl
xor
inc
(bad)
pop
ret
sbb
outs
cmp
call
sub
pop
mov
and
stc
outs
adc
cs
pop
add
mov
mov
dec
cli
xchg
sar
jl
mov
mov
repz
int3
pop
sub
fsubr
lahf
mov
xchg
int
xchg
sub
pop
test
cmps
add
dec
(bad)
cs
xor
sti
mov
ret
mov
mov
enter
and
ins
dec
sbb
fisub
pop
sub
mov
or
lahf
pop
lahf
xchg
push
loop
push
add
jecxz
inc
jne
mov
in
add
sbb
jp
mov
or
cdq
mov
in
(bad)
cld
stos
cmps
or
nop
mov
mov
add
dec
cmps
out
pusha
in
jno
and
mov
or
icebp
mov
jle
jecxz
lea
adc
inc
mov
push
in
cpuid
sbb
mov
int3
je
xchg
push
push
cmp
inc
xchg
(bad)
les
imul
push
jbe
les
fstp
das
or
sbb
scas
adc
xor
(bad)
adc
ss
in
mov
je
or
movs
mov
cs
ins
push
gs
outs
cli
lahf
or
pop
push
and
mov
mov
addr16
dec
shl
xchg
aaa
test
push
mov
adc
(bad)
push
dec
sub
sar
mov
daa
cs
dec
stc
rcl
or
dec
push
mul
popa
pop
jge
mov
pop
pop
push
xchg
xor
pop
mov
xchg
jecxz
pop
shl
fild
outs
mov
popa
enter
push
fucomp
fstp
or
add
push
out
scas
pop
mov
push
nop
ret
sbb
ret
jno
cli
test
inc
jge
ja
test
mov
and
arpl
arpl
pushf
dec
inc
add
adc
gs
fnstcw
and
mov
in
add
(bad)
in
rcl
pop
cwde
mov
or
push
nop
sub
jg
and
add
xor
pop
inc
cmc
jo
cmps
or
into
sbb
stc
sbb
pushf
cdq
dec
into
and
lods
push
outs
push
out
test
jg
or
pop
jmp
add
loope
xchg
push
add
test
cli
sbb
in
push
aam
jecxz
inc
mov
stc
in
or
adc
push
shr
sub
in
jmp
push
in
stos
sti
ins
loopne
mov
(bad)
and
cs
inc
xor
jle
repz
sub
or
aam
inc
shl
mov
inc
add
and
pushf
push
jmp
repz
xchg
ret
jge
sub
pop
push
jle
xor
fidiv
js
test
or
and
jge
mov
cmps
pop
enter
in
out
mov
push
dec
inc
mov
outs
mov
leave
mov
or
mov
or
push
addr16
mov
jns
mov
mov
inc
cmc
jmp
sub
cld
or
lods
mov
sbb
push
pushf
inc
cmps
loop
test
je
mov
add
sbb
sbb
std
dec
repnz
jp
rcl
clc
adc
int
mov
popf
out
mov
xchg
test
inc
push
data16
call
pop
loop
jno
outs
ficom
mov
sub
ficomp
retf
arpl
xor
lods
retf
fwait
mov
(bad)
out
cmc
imul
mov
dec
pop
push
das
cmp
addr16
push
fcom
adc
xchg
je
pop
xor
cwde
push
fs
in
sub
push
lea
inc
sbb
sahf
push
rcl
sbb
bound
xchg
xchg
es
push
mov
arpl
fdivr
jp
jp
push
stos
arpl
push
aaa
popf
nop
call
mov
outs
enter
popa
pop
mov
ret
jmp
and
adc
ror
in
push
xor
stos
rcr
sbb
or
(bad)
xor
repz
mov
jns
xor
push
push
dec
xor
mov
scas
dec
cs
and
inc
(bad)
mov
inc
push
jecxz
fidiv
lds
test
call
(bad)
sbb
push
inc
push
repz
jmp
jp
inc
add
loope
loopne
pop
sub
mov
xor
dec
mul
jg
gs
or
and
les
mov
inc
mov
pop
pop
add
movs
pop
shl
(bad)
sbb
fwait
push
and
dec
fsub
retf
pop
sub
xor
pop
or
cmc
xlat
ds
sub
cs
(bad)
lock
or
pop
mov
int
jecxz
out
ja
test
jnp
into
push
imul
ins
outs
ds
aas
jbe
nop
sahf
outs
js
mov
add
das
gs
in
sub
xor
jnp
rcr
es
popa
jo
(bad)
arpl
stc
repz
jg
xor
cmp
add
mov
and
hlt
cmp
jns
fimul
repnz
daa
add
dec
adc
cmp
pusha
adc
jbe
popf
sub
int3
lds
cli
jge
xlat
mov
movs
loopne
and
enter
lods
imul
outs
pop
stc
repnz
dec
je
rcl
mov
jno
jmp
xor
in
mov
into
and
inc
cwde
mov
push
call
and
mov
jg
sbb
dec
cld
call
cdq
(bad)
adc
push
pop
inc
adc
int3
aad
cmps
dec
retf
call
mov
and
icebp
adc
sub
stc
leave
sub
sub
mov
ds
std
fnstenv
add
and
call
dec
test
pop
pop
add
(bad)
stos
pop
cmp
out
stos
pop
add
xchg
test
sub
mov
jg
pop
not
push
xchg
jl
call
mov
jecxz
(bad)
mov
sbb
sbb
jae
sbb
pop
loopne
loope
in
mov
inc
jns
imul
fimul
inc
scas
pop
ss
mov
and
popa
jle
hlt
jno
push
jne
mov
rol
popf
bound
mov
sbb
dec
jmp
adc
pop
div
add
icebp
and
xchg
sub
dec
inc
mov
test
xor
pop
hlt
or
inc
mov
out
out
xlat
sbb
ret
scas
add
inc
in
pop
(bad)
cmps
je
imul
xor
mov
imul
jne
or
pop
or
fdivr
leave
and
adc
sub
cmp
fsub
inc
dec
sub
mov
mov
imul
repz
loopne
adc
push
and
(bad)
loop
outs
adc
adc
jmp
mov
inc
out
push
inc
or
cld
adc
daa
push
sbb
mov
and
cmp
rcl
nop
adc
int
int3
cmp
add
lods
(bad)
xor
and
xor
(bad)
jno
sbb
and
jne
jg
ins
aas
xchg
js
pusha
cwde
adc
(bad)
stc
fdivrp
mov
sub
in
xchg
icebp
cmp
ret
push
jge
xchg
out
stos
inc
push
dec
mov
sub
icebp
cld
sub
daa
or
dec
(bad)
cmp
enter
pop
aaa
dec
xor
stos
mov
test
jle
lea
cmps
loopne
outs
popf
dec
add
sahf
inc
add
xor
mov
mov
imul
mov
shl
mov
test
push
out
xchg
sbb
mov
in
lahf
fcomp
push
dec
pushf
sub
(bad)
cmp
xchg
and
pop
xchg
inc
jne
jl
icebp
cdq
mov
les
stos
js
stos
sbb
push
fs
outs
ffreep
jp
jne
fnstsw
ss
popf
inc
iret
adc
and
mov
into
dec
jb
in
aad
aad
ror
das
or
or
adc
cdq
mov
lahf
mov
or
and
push
jmp
or
xor
enter
and
popf
popa
test
inc
cmps
push
cmp
call
mov
dec
jne
pop
xchg
jmp
sub
fbstp
jb
fnstcw
jmp
or
xor
and
dec
clc
cmps
inc
inc
dec
adc
mov
lea
sub
inc
cs
lods
dec
outs
std
adc
ins
pushf
xchg
mov
add
or
(bad)
pusha
(bad)
pop
fcmove
movs
cmps
add
xor
and
jb
pop
jmp
outs
fwait
retf
push
lock
scas
sub
pop
push
hlt
das
das
(bad)
das
cmc
mov
test
(bad)
repz
dec
fistp
xlat
jno
ins
lea
sbb
lods
xlat
pop
lods
int3
loopne
inc
dec
ja
mov
fsub
(bad)
cld
xchg
mov
mov
repz
scas
adc
retf
jb
sar
pusha
xchg
sub
jns
push
fadd
cmp
int
pop
jae
mov
fcomp
dec
stos
jb
xor
xor
and
pusha
xlat
xlat
test
jo
leave
movs
rcl
mov
push
ficom
push
jle
bound
mov
sub
pop
mov
pop
mov
movs
xor
jle
sbb
data16
fsubr
mov
pop
(bad)
daa
mov
(bad)
(bad)
test
push
xchg
call
fdivrp
shr
retf
jns
outs
add
jae
mov
je
clc
cmp
jb
ja
dec
lds
bound
add
mov
(bad)
ficom
dec
dec
cli
sahf
xchg
pop
mov
jns
fwait
mov
dec
fistp
outs
pushf
(bad)
jmp
or
mov
stos
(bad)
sbb
adc
jnp
mov
(bad)
adc
sbb
or
jmp
popa
or
jg
jmp
sub
sbb
cmp
push
adc
jno
mov
shl
or
mov
repnz
mov
cld
dec
lds
jle
arpl
and
sbb
data16
stc
sub
out
jnp
call
addr16
in
test
add
inc
sti
scas
jg
fnsave
mov
outs
popf
push
fimul
test
lock
xchg
ds
loope
and
cmp
ficom
jbe
ins
mov
lahf
dec
mov
mov
mov
outs
aaa
leave
pop
mov
dec
jmp
out
or
(bad)
retf
iret
leave
dec
cmp
ss
adc
out
inc
inc
outs
iret
mov
outs
mov
cmp
lods
and
out
sbb
xchg
xlat
push
sbb
mov
and
jle
fisubr
inc
lea
daa
mov
xchg
jg
and
cmps
mov
pop
inc
mov
stc
pop
push
pop
std
adc
dec
in
sbb
imul
dec
out
sub
imul
int
push
xchg
dec
fsubr
leave
arpl
xor
pop
xor
push
or
mov
jno
ss
clc
shl
xor
and
icebp
cmps
out
and
aam
jmp
jmp
test
ds
xor
pop
cld
and
repnz
mov
sar
inc
adc
lods
ret
jae
loope
mov
jbe
outs
lods
(bad)
in
movs
test
setae
adc
inc
fs
pop
mov
sbb
dec
daa
xor
add
pop
cld
sub
ins
and
ror
lea
aaa
adc
jmp
es
sbb
xchg
cmp
je
cmp
add
test
jge
mov
pusha
gs
lods
xor
mov
inc
sbb
xchg
popf
daa
cli
mov
loop
jl
adc
test
push
nop
xchg
sub
jl
icebp
pop
jl
add
lods
adc
adc
ror
repnz
sub
leave
mov
mov
mov
out
les
and
push
xchg
add
rol
xor
mov
dec
outs
xchg
int3
retf
xchg
mov
sub
iret
les
ror
scas
xor
mov
shr
cmp
mov
adc
push
xchg
jne
push
jbe
aam
hlt
cdq
jae
xchg
fs
sti
add
jle
push
mov
retf
xor
mov
mov
jle
jns
add
arpl
cld
xor
mov
inc
pop
mov
add
outs
xor
cdq
add
xor
pop
cdq
pop
les
pop
mov
xchg
xchg
push
jmp
mov
sahf
push
push
or
fbstp
fnstsw
daa
push
mov
or
popf
icebp
dec
ror
aad
seto
(bad)
mov
or
loop
xchg
retf
je
ins
and
cwde
cmc
push
out
xor
shr
pusha
ret
imul
cs
push
push
ror
inc
dec
or
(bad)
push
cs
mov
sbb
xor
ja
shr
or
adc
and
aam
retf
mov
inc
ret
inc
lods
scas
test
inc
test
test
xor
(bad)
cli
ss
loopne
push
push
aad
shl
mov
mov
outs
jmp
(bad)
xchg
xlat
pop
push
(bad)
cld
aas
addr16
pop
jns
push
bound
jmp
jne
inc
clc
test
into
mov
xor
ja
add
mov
sbb
stos
or
int
sub
sub
das
shl
sti
add
ja
cmp
fwait
and
cmp
and
out
clc
xchg
repz
test
outs
pop
add
jmp
inc
xchg
jp
lahf
(bad)
push
cs
std
jge
xor
in
sub
xchg
test
pop
call
clc
inc
loop
js
and
fs
sti
xor
dec
jl
xor
sub
mov
cmps
cmp
sbb
test
mov
int3
rcr
push
test
mov
mov
mov
push
repnz
es
lods
lds
dec
and
mov
sbb
xor
cmp
lahf
hlt
arpl
jle
lods
movs
jo
push
test
call
pop
nop
outs
mov
out
sbb
xor
xchg
or
gs
push
push
jl
pop
push
xchg
pop
in
dec
xchg
adc
gs
mov
int
daa
jle
sbb
cmps
pop
xor
dec
icebp
fisub
stos
nop
clc
(bad)
std
out
mov
mov
mov
adc
(bad)
jb
cmp
outs
sub
iret
out
pusha
or
mov
sahf
into
jno
sub
and
repz
pop
and
loop
fwait
popf
sub
shl
xchg
imul
push
push
pop
cmps
sub
xchg
push
aad
stos
inc
pusha
aas
nop
test
nop
lock
test
mov
push
fs
cmp
popf
test
jg
fst
add
int
mov
out
fisttp
or
xchg
mov
mov
leave
fbstp
sbb
mov
adc
mov
dec
sub
sahf
in
push
adc
scas
push
fidivr
test
mov
mov
xlat
out
out
lds
stos
stos
dec
dec
retf
push
dec
pop
jb
mov
xchg
push
push
sub
outs
retf
add
cld
xchg
pop
mov
shl
inc
xor
fwait
sub
add
cmc
sub
dec
sar
pop
mov
bound
icebp
stos
mov
ret
dec
imul
rcl
dec
xchg
adc
repnz
repz
lea
xchg
inc
mov
sub
mov
ds
cmp
loope
push
or
hlt
pop
rcl
add
test
or
imul
push
pop
in
in
shrd
jp
fwait
jmp
pop
mov
pop
mov
lahf
test
push
cmps
push
test
repnz
mov
stos
test
sub
(bad)
ret
adc
movs
cmc
ret
mov
pushf
mov
outs
sub
test
mov
popa
push
gs
pop
mov
push
ins
ins
push
xor
cmc
mov
adc
jae
xor
push
ss
movs
push
cmp
and
icebp
mov
mov
cwde
add
test
into
retf
push
dec
addr16
hlt
gs
push
cli
scas
pop
mov
ins
dec
fs
popa
push
adc
fstp
in
test
test
imul
jmp
sbb
cmc
test
jmp
leave
call
je
push
cmps
xor
or
jb
pop
mov
mov
sahf
cmps
int3
hlt
fdivr
xor
sbb
xlat
repz
les
xor
mov
out
(bad)
retf
sbb
dec
pop
arpl
add
dec
retf
or
mov
movs
mov
(bad)
aam
mov
jp
sub
cmc
dec
cmps
sub
in
cs
xor
out
fs
push
sar
jne
or
xor
add
mov
cs
fsub
sub
cs
push
jne
imul
xchg
jbe
dec
pop
mov
mov
lea
out
push
mov
jo
loop
mov
sub
loopne
push
xchg
inc
push
jmp
sub
fwait
aas
or
xor
aam
mov
cmc
mov
and
xchg
cs
stos
mov
jle
not
ja
inc
aaa
cmp
lds
cld
mov
mul
xor
aas
lods
mov
cmp
fldenv
sub
push
iret
and
and
fimul
fiadd
mov
test
sub
adc
cmp
(bad)
pushf
sub
push
xchg
jne
call
jne
(bad)
or
dec
out
aad
adc
or
xor
int3
push
sub
push
inc
add
shl
adc
mov
pop
shr
cmp
es
(bad)
int
dec
mov
xchg
aas
clc
and
(bad)
call
movs
fs
fcomp
cmp
sbb
movs
push
adc
push
sub
call
xlat
sbb
mov
dec
dec
fidivr
or
mov
or
int3
sbb
mov
jbe
dec
and
leave
fwait
scas
fldcw
ds
dec
jle
shl
push
sbb
aas
sub
fsub
shl
mov
jno
xor
packssdw
adc
xor
dec
enter
dec
fsub
fs
mov
(bad)
jmp
icebp
mov
lods
(bad)
pop
ja
mov
hlt
xchg
js
sti
loop
(bad)
mov
nop
inc
(bad)
call
mov
and
pop
cmp
dec
std
xor
pop
sub
retf
call
jmp
push
movs
and
icebp
mov
pop
xchg
mov
sbb
mov
jae
sub
push
xchg
mov
pop
push
inc
xor
jg
aas
xchg
cmps
aas
data16
sbb
in
(bad)
push
lahf
mov
sti
and
pop
mov
xchg
add
mov
pop
fidiv
out
ds
shl
repz
cld
leave
push
push
pop
(bad)
call
pop
sub
les
mov
out
fst
mov
dec
fisub
test
fwait
mov
(bad)
je
test
fisttp
fild
(bad)
icebp
ror
sub
ja
xor
into
mov
stos
sub
xor
mov
push
lods
(bad)
mov
xchg
push
xchg
sbb
cmp
imul
stc
fiadd
sbb
(bad)
gs
scas
lods
stos
and
sub
dec
adc
xor
data16
scas
cli
iret
test
pop
test
cwde
iret
(bad)
mov
push
sub
or
cdq
inc
addr16
sbb
outs
sbb
(bad)
inc
and
in
sbb
in
xchg
inc
cmp
outs
sub
loope
mov
sbb
clc
outs
cld
loope
pop
shr
arpl
push
(bad)
retf
mov
mov
jl
and
hlt
push
fsub
mov
dec
cmp
inc
and
dec
xor
push
lods
jmp
cmps
mov
fidiv
jecxz
rol
div
mov
push
aad
cwde
add
pop
pop
jmp
push
push
arpl
test
aas
mov
loop
push
pop
in
mov
xor
movs
mov
in
dec
mov
cwde
jb
repz
jmp
push
push
outs
movs
push
dec
std
dec
push
shl
js
adc
sub
dec
dec
push
pop
jmp
cwde
or
outs
sbb
jmp
cmps
xor
lahf
mov
popa
jecxz
dec
aam
pop
fadd
scas
and
jmp
cmp
or
add
jo
add
mov
xor
xchg
push
inc
mov
mov
aam
shr
add
out
lea
movs
test
and
cmp
data16
pop
test
and
inc
add
fwait
(bad)
pop
cmp
sub
test
lahf
sti
xor
add
(bad)
icebp
adc
inc
hlt
mov
sub
sbb
pop
sbb
cmps
pop
ds
fiadd
out
test
sub
inc
or
push
add
mov
add
inc
and
adc
jp
xor
enter
pop
push
jo
nop
pop
add
push
loopne
add
shl
add
lock
gs
or
pop
add
ror
inc
mov
xor
or
scas
pop
jg
retf
jp
lods
std
sub
int
loopne
or
adc
movs
test
sub
inc
or
push
add
mov
add
inc
and
adc
out
inc
out
inc
jns
rcr
push
add
sbb
push
shr
test
mov
cwde
sub
mov
bound
add
mov
inc
sub
test
inc
mov
mov
ret
jbe
mov
add
test
sub
dec
or
push
or
adc
sub
and
jne
outs
push
xchg
sti
sar
adc
jo
nop
pop
or
jge
inc
sub
sub
jg
dec
pop
add
sbb
pop
or
fcomp
(bad)
push
and
mov
sbb
add
sub
lock
add
or
push
inc
mov
mov
xor
add
sbb
mov
hlt
push
pusha
in
nop
mov
loopne
and
ins
push
loopne
sub
jg
dec
pop
add
sbb
pop
or
fcomp
(bad)
push
and
mov
sbb
rol
xchg
push
inc
cmp
stc
repz
jo
add
nop
movs
add
or
push
add
mov
add
inc
and
adc
jp
xor
enter
push
jo
add
mov
mov
adc
mov
mov
sub
jl
sahf
jle
mov
cwde
sub
mov
bound
add
pop
sbb
nop
sbb
add
sub
cmp
inc
dec
or
ret
push
mov
cs
pop
dec
jo
jbe
jne
mov
loope
aam
adc
mov
push
dec
sub
je
xor
adc
sbb
sbb
push
mov
push
jbe
stc
push
mov
adc
inc
xlat
and
arpl
iret
jecxz
jmp
cmps
sbb
cmp
mov
or
jmp
pop
and
push
ret
int3
gs
ret
mov
adc
adc
cmp
adc
cmp
in
mov
xor
pop
jnp
push
xor
jns
into
jle
(bad)
push
lock
mov
mov
xor
std
sbb
mov
retf
xor
dec
scas
lock
jmp
mov
sti
xchg
fbld
aaa
xor
test
pusha
adc
add
je
mov
sbb
enter
in
pop
xorps
outs
cs
gs
enter
push
inc
in
movs
xor
ss
sti
adc
jecxz
pop
dec
inc
ja
mov
(bad)
adc
(bad)
mov
adc
sbb
hlt
pop
daa
cmp
xlat
cmp
fldln2
and
jb
in
rcr
fs
pop
push
jge
dec
mov
or
xchg
shl
push
xor
ja
jno
sub
aad
call
mov
cdq
aam
sbb
repnz
jmp
xchg
or
in
scas
repnz
jmp
lock
xchg
sub
lock
xor
sbb
bound
pop
mov
add
xchg
xlat
popf
das
jge
cmp
pop
aaa
(bad)
pop
nop
mov
and
adc
test
sub
jl
sub
pop
mov
imul
fsqrt
std
cmps
cli
loope
pushf
retf
mov
mov
pshufw
pop
int3
push
jnp
and
sbb
sbb
cmps
mov
jbe
adc
aas
shl
retf
dec
imul
es
jmp
test
repz
test
push
daa
out
popaw
dec
out
div
mov
mov
xor
sti
out
repz
in
das
ins
aaa
(bad)
hlt
mov
or
inc
fwait
jle
inc
sbb
push
std
div
push
(bad)
out
aaa
loope
es
cmp
hlt
pop
and
sub
mov
xor
lahf
mov
test
addr16
pop
inc
ins
cld
std
pop
out
scas
mov
add
jge
push
inc
xor
cmp
and
call
push
ret
aam
add
fstp
push
xchg
pushf
pop
mov
jbe
(bad)
es
mov
pop
push
not
push
inc
pop
(bad)
cli
xchg
(bad)
lock
div
ds
into
pop
xor
ins
pop
pushf
sbb
cld
sub
outs
(bad)
jp
jae
(bad)
and
icebp
daa
stc
pop
push
and
push
sbb
out
sbb
push
push
inc
loop
mov
sub
lock
xchg
jno
jl
add
mul
clc
jo
rol
push
or
(bad)
sbb
mov
ffree
js
in
loope
push
neg
call
mov
shl
test
enter
add
jnp
jp
pop
push
mov
fadd
into
sbb
ret
fadd
add
mov
sar
fimul
fisttp
dec
sbb
jg
cmp
add
pop
out
pop
out
xchg
push
lods
ss
cmc
xor
test
xchg
xor
rol
inc
std
sbb
test
cmps
pop
jo
inc
cli
shr
shl
push
or
adc
add
dec
sub
push
or
xchg
or
add
pop
cmp
imul
sub
push
inc
xchg
sbb
push
movaps
push
sub
loopne
or
and
sbb
mov
mov
jo
and
pusha
fmul
push
inc
rcr
pop
and
sub
xchg
xor
inc
popf
xchg
ror
inc
ds
xor
rol
or
pop
or
cmp
gs
or
xor
int3
xor
sbb
xor
pop
mov
test
pop
xchg
iret
je
pop
push
stos
icebp
gs
call
jo
sub
cmp
xchg
xor
js
mov
pop
jecxz
stc
into
popa
cwde
out
lods
mov
fisubr
out
xor
mov
clc
repz
or
ja
into
repz
out
jnp
inc
jmp
call
lahf
sbb
sub
push
cmp
xchg
cmp
mov
sub
xchg
mov
inc
jb
mov
(bad)
push
arpl
nop
in
call
imul
cli
xchg
ins
cmp
fwait
idiv
or
dec
jmp
lahf
pop
lahf
pop
lahf
pop
lahf
pop
lahf
pop
lahf
pop
lahf
pop
lahf
pop
std
je
cmp
push
inc
and
mov
add
or
jp
jmp
push
rcr
jl
fcomp
loopne
lods
add
push
adc
xor
xchg
jb
push
mov
fsub
xor
in
xor
sub
push
adc
les
add
jno
into
pop
fcom
mov
xchg
jbe
mov
pop
or
popa
push
and
and
(bad)
fsubrp
loope
pop
outs
pop
jae
jne
in
inc
in
mov
repnz
push
mov
and
test
push
pusha
test
ins
jecxz
call
cdq
addr16
into
lds
sub
pop
in
mov
mov
mov
out
iret
scas
ret
or
fist
out
mul
jne
outs
or
aaa
adc
pop
call
sub
out
lahf
cmp
sar
pop
ja
out
dec
mov
je
in
mov
sbb
test
sbb
fadd
loope
jae
push
push
dec
addr16
scas
cwde
stc
(bad)
loopne
adc
sub
adc
xchg
inc
gs
aam
mov
jae
jbe
xchg
and
sbb
pushf
call
sbb
push
lea
call
call
imul
or
pop
jecxz
dec
push
mov
jns
loope
push
dec
mov
jno
add
add
ss
push
or
addr16
jo
inc
mov
or
dec
add
mov
test
push
lods
xlat
add
jp
pop
push
pop
imul
lods
sbb
loopne
push
ret
bnd
mov
rcl
ss
stos
fwait
xchg
and
or
addr16
ficomp
test
ror
sbb
hlt
ins
out
adc
in
push
(bad)
and
and
movs
jb
push
fs
jns
inc
jb
lds
imul
retf
mov
mov
dec
bound
inc
(bad)
clc
les
addr16
xor
mov
xor
sbb
pop
ficomp
mov
ret
sub
and
inc
out
cmps
pop
ss
pop
xor
xchg
fst
push
repz
ja
push
jg
sub
xchg
mov
mov
jl
push
adc
inc
inc
push
inc
sub
xchg
add
outs
jne
inc
mov
bound
adc
jae
adc
sub
pop
rcl
loop
lahf
jmp
ja
mov
mov
lahf
mov
mov
dec
repz
fsubr
push
mov
ja
and
out
ficomp
popa
jb
fst
jmp
(bad)
push
mov
je
test
enter
and
(bad)
push
in
test
jno
xchg
jp
xchg
push
mov
ja
mov
and
(bad)
adc
sub
mov
out
retf
mov
arpl
mov
xchg
les
mov
jb
fmul
loop
cmp
ror
ficom
stos
sub
retf
jmp
or
jno
data16
pop
nop
xor
xor
push
sbb
rcr
push
sbb
or
mov
ins
add
xchg
fs
ret
mov
inc
into
fmul
sbb
and
pop
jbe
inc
imul
leave
sbb
xor
std
cmp
fdiv
shl
jl
jl
push
add
cmp
mov
call
aad
js
ins
in
inc
ficomp
retf
jmp
jae
fwait
inc
stos
inc
mov
mov
in
mov
pop
mov
adc
adc
shl
imul
xchg
lds
inc
push
add
les
add
jno
dec
jae
and
dec
xlat
fldenv
jne
jle
cli
pop
lea
fstp
or
add
pop
push
sub
pop
iret
push
mov
push
pop
movs
retf
iret
adc
aam
stos
xor
jne
sbb
fwait
add
cdq
in
lds
xchg
into
lods
std
adc
nop
push
lds
and
dec
sbb
xor
mov
push
loopne
in
dec
or
ds
aad
cmp
jge
and
push
mov
adc
repz
iret
and
dec
add
out
cs
(bad)
pop
xchg
pop
sahf
dec
cmp
lds
(bad)
mov
loop
xchg
push
mov
out
or
mov
pop
xchg
lods
fcom
mov
sub
movs
daa
data16
mov
mov
mov
mov
mov
adc
jnp
cs
xchg
pop
cdq
inc
stos
dec
or
jae
adc
sub
pop
and
sbb
mov
ret
and
in
or
mov
ins
pop
ins
rcl
pusha
ror
leave
adc
and
dec
inc
das
sti
fwait
xlat
enter
retf
push
stos
xor
out
div
nop
imul
fstp
rdmsr
das
mov
pop
ds
ret
mov
mov
add
dec
xchg
stc
inc
rol
xchg
sbb
or
dec
sbb
aaa
and
push
sti
push
and
adc
jecxz
lock
adc
xor
sbb
rcl
(bad)
or
ins
push
mov
push
push
adc
retf
or
sub
jbe
ror
std
mov
fs
rcr
pop
adc
or
push
test
sbb
stc
shr
stc
bswap
cdq
test
jns
jge
bound
sub
test
pop
and
test
cwde
mov
sub
adc
sbb
pop
mov
mov
dec
shl
inc
add
add
or
repz
fstp
shr
push
xchg
add
mov
int
pusha
mov
push
add
in
cwde
dec
mov
data16
cwde
inc
fbstp
push
repnz
sub
and
and
dec
dec
dec
xchg
cmps
(bad)
lods
and
cwde
pop
xchg
repnz
sub
iret
push
adc
mov
popf
sub
and
pop
pop
int3
stos
xor
xlat
xor
cmp
push
and
bound
or
fnstsw
xchg
daa
pop
jecxz
fwait
jl
xor
mov
call
and
hlt
into
dec
pop
movs
mov
out
pop
xor
xchg
push
shl
add
fsubr
nop
inc
or
mov
fwait
cwde
and
xchg
dec
pop
out
ret
mov
loope
mov
mov
in
ins
test
mov
mov
lahf
jp
lock
ret
sub
stos
push
jne
int
adc
out
inc
nop
and
imul
mov
xchg
pop
push
mov
ins
mov
mov
lock
mov
sub
clc
mov
push
sub
fdiv
push
(bad)
jnp
js
mov
mov
inc
scas
retf
jb
adc
inc
mov
xchg
xor
int
or
(bad)
inc
sahf
pop
cmps
jmp
jl
xor
inc
and
mov
sub
xchg
sub
es
imul
lea
push
test
mov
pop
sbb
(bad)
inc
in
arpl
sbb
and
cld
dec
pop
iret
stos
adc
popa
cmp
ficomp
adc
sahf
xchg
mov
cdq
lea
fdivr
xor
dec
pop
xchg
popa
jp
sbb
nop
(bad)
ficom
ret
mov
dec
idiv
mov
aad
xchg
ds
(bad)
int3
call
sub
jle
mov
cli
mov
adc
adc
mov
nop
stos
xchg
nop
xor
mov
cmp
inc
push
loope
or
mov
ins
pop
add
cmp
rcl
into
int3
ror
repnz
out
sub
stc
(bad)
jb
ret
xor
test
pop
inc
outs
scas
xchg
pop
pop
or
stos
lods
imul
shr
and
or
test
xchg
dec
sub
push
iret
lock
inc
xchg
int
mov
hlt
sbb
xchg
push
in
mov
dec
jbe
xor
(bad)
cdq
icebp
and
out
fidivr
xchg
leave
outs
retf
hlt
call
xchg
and
and
push
inc
popf
xchg
xor
test
pop
add
and
call
add
ret
imul
inc
jb
xchg
xchg
adc
pop
mov
in
lods
push
pop
inc
sar
jmp
mov
cmp
add
daa
fstp
retf
mov
mov
das
xchg
jb
pop
sbb
bound
xchg
sub
ins
mov
and
pop
jbe
and
addr16
cmc
mov
adc
xchg
mov
(bad)
es
or
and
movs
mov
or
mov
push
add
dec
jl
jmp
xlat
push
xor
cmp
and
sub
or
sahf
mov
test
adc
in
pusha
sbb
add
pushf
sbb
cld
sub
std
jb
sbb
mov
push
push
jno
xchg
or
stos
shl
and
jbe
icebp
mov
dec
or
cmp
mov
pop
retf
adc
cwde
jo
sbb
pushf
(bad)
(bad)
pop
lods
or
aas
mov
xchg
int3
pop
out
stc
into
mov
test
imul
es
mov
aas
outs
sub
push
enter
in
ins
bound
int3
gs
cmps
cmp
xchg
and
retf
movlpd
ja
(bad)
aam
shr
and
cmp
iret
xchg
and
stc
nop
test
xor
(bad)
mov
ror
cwde
mov
sub
clc
and
psrlw
jne
aas
mov
aam
pop
fistp
out
movs
mov
pop
mov
xchg
mov
cmps
xlat
hlt
jl
retf
sub
cmps
dec
ja
sub
mov
int
ret
and
inc
dec
daa
pop
or
pop
test
cli
in
stos
dec
adc
inc
nop
adc
dec
das
add
pop
push
and
jns
xor
stos
bound
inc
and
aad
inc
mov
jmp
aaa
es
adc
sub
mov
stos
xchg
sub
sub
dec
inc
pop
push
mov
xchg
push
pop
aas
stc
js
retf
pop
dec
ss
push
cmp
sti
xchg
call
test
push
in
jl
push
cs
mov
jnp
movs
popf
add
push
pop
cld
cdq
movs
adc
mov
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jg
adc
loopne
pop
les
mov
push
imul
or
cmp
mov
nop
jmp
cmp
test
dec
pop
or
xchg
or
and
dec
push
jl
jp
test
stos
mov
js
xchg
test
jmp
pop
mov
sbb
adc
push
jmp
gs
adc
js
sub
pop
adc
push
add
out
lods
sub
test
inc
daa
add
xor
fs
cmc
das
sub
push
cmp
xor
add
loope
and
jae
pop
mov
inc
mov
xchg
les
dec
cmps
mov
cmp
or
pop
nop
and
and
dec
adc
adc
cmps
stos
pusha
xchg
and
cs
sbb
push
test
(bad)
std
mov
inc
pop
cmp
lods
jae
stc
xchg
xchg
mov
xchg
cmp
call
dec
ss
lea
pop
pop
jg
add
pop
mov
test
mov
sub
sub
jecxz
int3
in
(bad)
sar
adc
and
test
leave
in
sub
pop
idiv
push
mov
movs
fsubr
(bad)
jl
cmps
jns
push
mov
call
bnd
jge
mov
mov
int3
repnz
xor
daa
ficomp
stos
std
into
add
sub
pusha
or
jns
dec
cli
out
adc
xor
or
in
(bad)
mov
push
mov
push
push
or
push
(bad)
pop
repnz
call
adc
rcr
xchg
adc
daa
leave
mov
sub
xor
popf
jl
in
xor
sahf
xchg
iret
cmp
add
fdiv
mov
cwde
cmps
test
sub
inc
pop
add
adc
or
xor
div
xchg
push
out
aam
jecxz
pop
js
jo
ins
das
mov
rcr
dec
mov
pop
(bad)
sbb
int
xchg
mov
movs
inc
jmp
xor
rcr
push
shl
stos
mov
inc
xlat
imul
int
sahf
fld
repnz
sub
jne
push
and
push
cli
pop
out
dec
xor
ss
inc
pop
nop
dec
add
sar
inc
pushf
int3
dec
cmp
ficom
dec
and
adc
adc
add
or
mov
fs
add
sub
shl
push
dec
je
mov
xor
rcl
push
dec
stos
popa
adc
outs
jbe
xor
fwait
xor
lock
pop
and
and
add
and
dec
(bad)
fcmovbe
rcl
(bad)
(bad)
and
cwde
inc
xor
mov
xchg
das
ret
and
ret
stos
fild
and
loope
icebp
sub
adc
js
arpl
mov
fnop
pop
cmp
push
jp
mov
and
add
and
add
cld
and
xchg
inc
pop
in
mov
sti
mov
push
stos
mov
aas
scas
pop
popf
xchg
(bad)
shr
call
xlat
add
mov
mov
fidivr
mov
jns
lahf
pop
push
push
js
imul
icebp
sbb
fidiv
sti
push
adc
xchg
out
(bad)
xor
mov
xchg
enter
push
cmp
mov
cmp
not
retf
fstp
stos
xadd
lods
outs
nop
mov
fcom
xchg
stos
cli
sti
push
movs
cmc
cmp
mov
aas
mul
push
dec
xchg
lock
lods
lahf
mov
xchg
jp
js
int3
push
mov
mov
lahf
push
jmp
in
ror
and
jbe
add
push
dec
gs
dec
outs
popa
movs
(bad)
dec
call
adc
pop
scas
sahf
lods
mov
int
imul
fbld
test
adc
jo
sub
(bad)
mov
data16
mov
out
jle
xchg
hlt
pop
xor
ret
lock
call
dec
jno
mov
(bad)
xchg
gs
add
in
jg
std
mov
mov
cmp
stos
clc
jne
jno
scas
in
mov
xor
outs
push
fild
jmp
inc
je
(bad)
sub
pushf
std
stos
cmps
fcmovu
xor
jnp
sub
cli
(bad)
dec
mov
jmp
mov
push
or
mov
jmp
push
repz
push
out
add
pop
jle
mov
pop
in
xchg
mov
js
and
pop
sub
cmp
cld
xchg
in
or
ror
or
retf
pop
xor
mov
mov
dec
adc
inc
mov
out
xchg
inc
cmc
pop
pop
mov
mov
mov
fcmovnb
call
mov
arpl
repz
mov
fidivr
jle
mov
lea
dec
sub
movs
outs
call
mov
dec
je
sub
dec
pop
pop
push
mov
dec
addr16
mov
lds
arpl
retf
sub
shr
sub
rcr
dec
mov
ret
cmp
jae
sbb
test
(bad)
(bad)
(bad)
jae
(bad)
in
cwde
inc
pop
test
cwde
nop
or
jbe
aam
push
pop
adc
cmp
xlat
and
loopne
dec
bound
sbb
sbb
ret
fiadd
mov
and
fsubr
ret
pop
lds
push
lods
lea
mov
inc
mov
test
or
mov
test
loope
sub
inc
mov
mov
cmp
out
shl
mov
adc
out
arpl
mov
inc
bound
dec
ins
iret
(bad)
cld
cs
stc
adc
js
cmp
dec
push
mov
add
leave
stc
adc
(bad)
jb
(bad)
ins
xor
jbe
adc
ins
mov
imul
mov
in
push
outs
in
cmp
cmp
ret
xchg
iret
leave
dec
aam
xor
jb
ret
sti
push
xchg
pop
sbb
inc
jg
shr
dec
repz
lds
cdq
xchg
stos
fwait
push
fstp
fsub
js
sbb
rcr
mov
xchg
mov
pop
mov
mov
inc
pop
(bad)
ins
rcl
ja
imul
fsubp
out
sub
push
mov
loopne
jne
(bad)
js
mov
addr16
sbb
cmps
sbb
dec
xor
xor
push
test
xor
xchg
jmp
ins
(bad)
outs
dec
add
js
ror
jmp
mov
div
cmp
inc
pop
dec
cwde
mov
stos
retf
popa
aad
popf
and
sub
mov
pop
clc
inc
fstp
ss
shr
xchg
jp
sbb
xor
dec
out
sar
jns
dec
dec
aas
bound
cld
call
pusha
imul
jb
or
movs
nop
xchg
sub
cs
cld
mov
in
and
cmp
push
sbb
mov
jns
jno
and
ins
xor
stos
xor
adc
mov
sub
stos
movs
add
inc
push
xor
mov
arpl
cmc
pop
cli
scas
aad
mov
adc
ins
mov
loopne
fst
or
into
sbb
stos
out
jmp
xor
enter
(bad)
movs
sub
sbb
or
mov
dec
data16
sub
cmp
push
ins
in
mov
jnp
xor
fisub
jmp
les
clc
repnz
fiadd
jo
pusha
std
xchg
cld
inc
das
ret
xchg
sbb
push
pop
mov
mov
outs
repnz
lahf
cmp
push
ss
inc
cmps
jecxz
dec
std
and
cld
push
jnp
push
xor
mov
pop
test
out
call
xchg
sbb
sub
adc
in
jns
fdiv
inc
fild
shl
mov
mov
outs
lods
or
mov
mov
sbb
fwait
ins
js
xchg
pushf
sahf
sub
mov
jmp
sbb
cmp
mov
jmp
xchg
jg
jmp
jp
jbe
xlat
sub
ja
(bad)
mov
pop
push
sub
pop
cld
push
push
cld
pop
mov
dec
das
cmps
cld
push
pop
add
mov
adc
fsub
popa
test
daa
push
xor
test
cdq
(bad)
inc
cmp
xchg
cli
sar
frstpm(287
adc
daa
xchg
adc
xor
dec
xor
jnp
cs
xor
nop
mov
ins
daa
repnz
and
xor
sub
enter
lods
sti
retf
les
aad
jp
cmp
(bad)
dec
adc
cwde
mov
nop
into
jle
mov
and
xlat
inc
sbb
xor
int
cld
sub
dec
xor
jno
(bad)
(bad)
call
movs
push
cmc
sbb
sbb
pop
inc
inc
neg
dec
sub
push
jmp
or
push
xor
ins
sub
ds
imul
sub
xor
cwde
mov
pop
jmp
js
nop
push
pop
ret
cmp
addr16
test
pop
fsub
xor
clc
test
mov
pop
push
push
rcl
clc
jmp
in
adc
adc
adc
jbe
mov
aam
adc
fdiv
sar
mov
pop
cmp
xchg
pop
sub
mov
mov
pop
pop
or
jnp
and
les
jbe
cld
jae
(bad)
push
daa
inc
aam
mov
jb
pop
pop
stos
popa
dec
pop
push
inc
sub
leave
and
sahf
fld
pop
mov
inc
test
stos
into
xchg
jmp
xor
inc
pop
push
(bad)
add
push
jbe
imul
sbb
movs
ret
inc
cmps
push
push
outs
push
and
and
sbb
stos
jne
add
popf
mov
popf
cmps
mov
push
ins
clc
(bad)
push
stc
or
stos
add
icebp
and
fistp
xchg
dec
jp
mov
jp
xor
out
mov
loop
or
xor
add
or
sub
loope
ret
sbb
in
dec
inc
js
adc
adc
lods
add
or
jnp
adc
or
shr
retf
inc
stos
sti
dec
inc
inc
aad
dec
dec
movs
add
jns
push
(bad)
stos
push
cmp
sub
xchg
rol
cmp
out
mov
cli
push
fild
jle
cli
and
push
mov
and
pop
pop
outs
lods
push
ret
mov
jge
adc
adc
jecxz
aaa
push
xchg
test
pop
das
adc
push
ins
stos
jno
mov
fs
mov
shl
ret
fst
sbb
out
mov
aas
add
jns
lods
je
push
retf
icebp
or
xchg
sub
repnz
sub
aas
out
adc
test
xchg
pusha
inc
bound
mov
mov
mov
and
(bad)
outs
or
mov
mov
cdq
adc
loope
mov
mov
jle
push
std
xchg
push
ss
inc
retf
add
xor
xadd
jmp
add
and
xchg
movs
pop
sbb
and
stos
or
adc
shl
xor
sbb
dec
push
and
ins
pop
pop
in
stos
dec
jmp
aaa
xchg
push
lods
enter
or
fld
mov
or
jecxz
xchg
fidiv
push
jg
daa
or
cmp
mov
ficom
xor
inc
adc
mov
mov
call
or
dec
jne
(bad)
int
mov
ror
retf
rcr
sub
repnz
xchg
push
mov
add
rcr
retf
aas
add
popf
jno
mov
add
js
fidivr
cmp
sbb
cld
cmps
and
aad
dec
mul
leave
inc
ficomp
imul
inc
xchg
push
sbb
dec
push
dec
retf
sar
lods
jo
inc
xchg
les
adc
pop
aad
test
ja
jns
ss
(bad)
dec
cmp
mov
sbb
and
or
cli
mov
cwde
fld
dec
hlt
iret
test
inc
sahf
lods
test
lods
adc
sbb
not
call
test
aam
(bad)
mov
mov
xor
sbb
ficomp
lods
inc
popf
fild
fistp
imul
imul
or
les
mov
push
sub
bswap
jmp
ret
fisttp
xor
mov
cmps
mov
test
mov
mov
cdq
adc
push
call
call
jnp
push
push
ins
xchg
loop
push
loope
scas
cmps
lds
ins
mov
jl
fdivr
fst
jg
ficom
pop
push
ss
push
mov
inc
cmps
xlat
dec
(bad)
out
in
shl
add
fwait
gs
sti
mov
jp
mov
shl
inc
out
es
ficom
movs
in
arpl
gs
mov
scas
xchg
fwait
repnz
push
mov
xor
(bad)
(bad)
xor
jge
imul
or
sub
fcomp
cmp
nop
or
push
dec
fcmovnb
gs
mov
gs
add
imul
aad
inc
sub
stc
popf
rcl
jo
cdq
jo
push
jle
mov
mov
mov
scas
mov
fistp
sti
jnp
push
ret
dec
sbb
fisub
pop
gs
stos
outs
sbb
push
fimul
and
in
jb
push
das
shl
popa
adc
fwait
(bad)
retf
shr
or
mov
retf
cmps
xchg
les
je
mov
jae
add
push
dec
js
dec
fprem1
mov
sbb
loop
std
inc
pop
dec
stos
cmps
adc
jp
push
pusha
cmp
and
rcl
xor
retf
movs
push
outs
call
movs
daa
(bad)
stos
push
out
jle
push
adc
scas
sub
js
leave
pop
js
adc
and
adc
call
mov
cmc
fdivr
inc
cmp
mov
mov
fadd
dec
mov
jb
jns
mov
imul
mov
mov
fistp
push
(bad)
adc
sub
dec
inc
jmp
sti
out
loop
js
pop
js
sti
push
push
(bad)
movs
lds
mov
dec
lahf
adc
mov
push
or
std
mov
pushf
pop
cmp
std
addr16
or
jne
call
cmp
mov
inc
test
fs
mov
sbb
data16
push
daa
cdq
shl
add
mov
xchg
sti
mov
fst
pop
mov
jmp
mov
jl
dec
shl
xchg
jge
out
mov
jle
loop
or
mov
jmp
ja
xor
jmp
sti
mov
repnz
stos
es
xlat
jle
cmp
mov
cs
and
mov
mov
xor
je
dec
adc
mov
and
push
scas
mov
dec
hlt
pop
push
cmp
test
test
jo
test
mov
hlt
jmp
das
and
jnp
jge
inc
jno
mov
imul
sahf
pop
popf
inc
enter
call
lahf
push
out
sub
daa
and
jle
(bad)
push
fistp
bound
dec
cmp
cli
into
cmp
push
xchg
sti
jb
test
dec
mov
adc
ja
mov
lds
push
jl
fadd
cld
pop
scas
mov
jae
mov
mov
fistp
lods
and
fnop
pop
inc
je
jg
enter
in
sbb
je
clc
scas
ds
fwait
ja
ins
and
add
dec
stos
pushf
aad
push
pop
mov
movs
mov
stc
push
inc
push
popf
test
mov
lods
inc
cmc
enter
mov
pop
mov
mov
ins
and
push
das
cmp
pop
mov
inc
bnd
test
add
loopne
pusha
inc
or
sbb
mov
add
sbb
pop
mov
ja
fmul
pusha
cld
add
mov
lods
fnstsw
call
sub
test
pop
inc
shl
sub
push
jns
sub
push
inc
test
jg
ret
push
in
outs
jmp
dec
dec
pop
mov
retf
stc
and
rcl
ret
xchg
std
mov
push
jne
call
cmp
mov
call
sub
cs
out
movs
jecxz
pusha
lock
mov
(bad)
icebp
sbb
mov
call
adc
xor
ins
mov
(bad)
push
xor
push
mov
mov
mov
mov
loope
xchg
xor
std
inc
call
dec
and
ret
jg
inc
callw
into
sub
pop
rcl
dec
ret
mov
mov
or
sbb
mov
xor
stos
leave
shl
or
sbb
sub
mov
(bad)
into
xor
jge
pop
jnp
or
dec
xchg
sbb
mov
in
das
test
cmp
bound
cdq
mov
jo
in
call
dec
mov
mov
inc
imul
mov
sar
int
cmps
jp
ins
adc
pop
xor
pop
into
arpl
xor
jne
or
popa
fbld
cmp
jo
xor
mov
inc
rcl
adc
les
fild
push
rcl
imul
fwait
mov
pop
ja
add
rcr
jb
inc
outs
repz
fld
in
sbb
cmc
repnz
(bad)
fild
dec
stos
int3
xor
fistp
outs
push
out
xchg
cmps
inc
in
cmps
or
sbb
mov
imul
ret
sub
pop
enter
loopne
rol
rol
into
ret
retf
jnp
pusha
loopne
lahf
add
pusha
int3
mov
xlat
add
cmp
iret
add
mov
loope
mov
xor
sbb
xor
rol
rcr
dec
mov
and
(bad)
mov
nop
outs
and
pushf
sub
push
mov
mov
out
(bad)
mov
dec
xor
call
jg
sbb
mov
pop
inc
inc
cmp
jns
test
imul
pop
dec
mov
jae
adc
cld
or
ret
iret
mov
ja
xchg
dec
and
inc
cmp
fisttp
into
bound
push
adc
aaa
push
xlat
(bad)
shl
jno
pop
into
push
jbe
pop
fnstsw
sbb
scas
jae
mov
sbb
(bad)
or
mov
cmp
retf
inc
cmp
and
sbb
adc
jbe
fstp
or
or
lea
dec
sbb
fwait
sbb
push
int
sbb
cmp
dec
in
mov
inc
sbb
scas
push
in
xor
cmp
and
push
inc
adc
lock
in
mov
int
push
cld
jbe
xchg
clc
shl
sub
out
out
jp
sbb
push
cmp
dec
xor
sbb
cli
cmp
add
outs
stc
sbb
das
into
mov
push
jns
(bad)
js
stos
imul
inc
leave
test
out
imul
jb
aaa
jnp
adc
bound
jnp
std
dec
inc
(bad)
adc
out
je
pop
mov
repnz
arpl
xor
adc
add
xchg
mov
sti
loopne
imul
sub
int3
sbb
adc
jmp
ss
xchg
sub
mov
dec
and
clc
daa
lahf
pop
(bad)
sbb
push
push
mov
mov
mov
fwait
call
in
mov
mov
imul
out
inc
mov
fdiv
enter
mov
sahf
jno
xor
into
cmp
(bad)
push
dec
data16
sub
push
in
ins
jns
mov
scas
sub
xchg
cmp
push
loop
inc
jbe
(bad)
rcl
mov
mov
shl
pop
inc
aam
adc
mov
adc
xlat
in
out
cld
pop
dec
mov
fisubr
cs
adc
out
inc
push
test
jbe
mov
sbb
xchg
hlt
jecxz
(bad)
dec
or
js
dec
fmul
jns
js
dec
adc
cdq
jmp
shl
pop
xor
int
push
aas
and
popf
push
repz
sahf
cmps
ficom
enter
mul
call
int
stc
xchg
pop
and
sub
pop
das
push
dec
shl
cmp
add
je
cli
hlt
aam
ds
or
fdiv
rol
cdq
pop
repnz
inc
or
sub
mov
out
(bad)
mov
scas
and
test
stos
in
xor
mov
xor
outs
add
adc
retf
pop
cli
out
int3
xchg
scas
aad
fadd
ja
jg
xlat
inc
push
rol
jno
lock
jb
arpl
dec
sahf
retf
int3
xchg
dec
mov
jmp
in
rol
test
movs
fsubr
mov
fnstenv
dec
arpl
out
fld
or
outs
add
or
(bad)
fidiv
je
aaa
repnz
into
ds
lods
xlat
int
int
or
fnstsw
mov
inc
aad
cld
cmc
push
std
std
jmp
pop
cmp
frstor
cdq
call
mov
shr
push
scas
xor
adc
dec
fldcw
jp
sti
das
iret
jp
test
xchg
lahf
pop
movs
cmps
mov
fistp
icebp
push
push
jle
pusha
push
addr16
std
xor
sbb
dec
or
push
fidiv
sbb
test
add
or
scas
sbb
imul
shl
int
push
out
bound
adc
clc
rcl
sbb
or
lock
xor
outs
cdq
imul
push
adc
sub
mov
in
rep
icebp
sbb
mov
jne
aad
(bad)
stc
call
dec
xchg
std
or
in
sub
std
ret
int
xlat
pop
adc
into
stc
cmps
and
fsub
mov
into
inc
xor
lea
vxorpd
adc
or
adc
call
cmp
jge
jbe
(bad)
fdivp
sbb
les
dec
push
retf
pop
outs
xor
pop
xor
out
jmp
fdivr
retf
mov
and
xchg
daa
fld
or
dec
(bad)
cli
mov
in
mov
xchg
rol
dec
xor
in
pop
ja
aad
int3
sar
mul
repz
mov
mov
ror
pop
aam
adc
aam
jg
xlat
jle
add
mov
push
div
cdq
mov
xchg
pushf
and
dec
data16
dec
mov
sbb
xchg
ret
mov
dec
pminsw
in
es
cmp
(bad)
xchg
loopne
jo
and
jb
and
mov
int
mov
rol
sub
sbb
call
out
cs
sbb
jns
into
pop
xchg
and
sub
mov
sbb
lea
sti
movs
adc
push
adc
and
and
(bad)
mov
test
xor
xchg
js
jecxz
or
dec
dec
shl
and
push
enter
inc
mov
sbb
(bad)
pop
or
push
and
cmp
or
and
adc
cdq
sub
sub
pop
xchg
jp
cmp
fcom
sbb
loopne
dec
add
pushf
jae
sahf
sbb
xor
mov
fist
shl
push
in
out
shl
mov
adc
stc
mov
jb
loop
lahf
neg
scas
jg
fwait
scas
cmp
mov
push
aaa
jge
push
pop
jle
ins
and
imul
push
adc
or
imul
(bad)
xlat
mov
call
jo
sbb
gs
lods
in
dec
inc
aam
mov
jns
fwait
stc
pop
adc
std
sahf
hlt
(bad)
xor
dec
mov
mov
les
dec
ins
call
sbb
cdq
aam
loop
pop
lahf
add
mov
(bad)
push
(bad)
cmps
sbb
xchg
mov
push
ins
cmps
and
or
lahf
xor
iret
xor
dec
add
jne
in
pop
mov
mov
loop
push
enter
xor
cdq
loop
rol
xlat
(bad)
movs
push
jecxz
adc
and
add
jecxz
iret
(bad)
ficomp
xchg
xchg
dec
addr16
fmul
movs
xlat
les
es
add
jg
mov
mov
call
xchg
cmp
push
xchg
cmps
test
pop
in
cwde
stos
mov
jb
cmp
jo
xchg
or
pop
das
pop
mov
cdq
xchg
xor
fwait
sbb
das
jmp
pop
(bad)
mov
(bad)
popa
test
cdq
pusha
jmp
dec
mov
adc
ret
adc
or
stos
cwde
jle
or
out
or
fisub
push
les
fisttp
mov
push
in
mov
mov
jp
xchg
jae
and
out
push
ins
mov
pop
inc
test
ret
iret
js
dec
xor
add
or
inc
(bad)
out
movs
fwait
add
xor
or
adc
xor
mov
inc
js
xor
push
add
jae
jb
leave
push
pop
cmp
adc
adc
adc
or
inc
pop
dec
adc
dec
xchg
add
fs
dec
mov
mov
(bad)
cli
ss
hlt
jp
push
(bad)
adc
and
add
sbb
js
icebp
or
dec
inc
enter
mov
jae
jae
hlt
dec
mov
popa
or
xchg
sub
pop
mov
sub
call
nop
sub
push
cmp
and
jmp
ins
jmp
xor
jecxz
sub
add
xchg
shl
jb
jno
fdiv
retf
(bad)
fsub
and
xor
jo
int
out
(bad)
push
jnp
sti
repz
sti
out
out
inc
jns
pop
mov
fcomip
xor
dec
dec
and
mov
aaa
call
scas
xchg
adc
pop
inc
and
test
ficom
push
sbb
xlat
adc
mov
inc
scas
fiadd
imul
dec
hlt
loop
shl
repz
icebp
mov
jle
add
(bad)
jns
clc
jo
icebp
fcmovb
inc
lea
jge
mov
cmp
dec
jne
mov
lahf
leave
mov
mov
adc
call
scas
fsub
lock
add
jmp
push
sbb
add
dec
sar
and
(bad)
cmp
mov
jl
fdivr
mov
sahf
repnz
cmp
sahf
or
adc
les
push
into
cli
jmp
sahf
mul
pop
inc
pop
cmps
lahf
push
fwait
or
jg
cld
shl
mov
ret
push
popf
bound
inc
sti
mov
ds
stos
outs
fld
fldcw
pop
xchg
aam
mov
fisub
jle
add
fs
xor
fs
rcr
ins
sbb
xchg
cs
dec
push
ins
adc
sbb
std
clc
jle
scas
pop
pop
sub
not
adc
xchg
adc
call
sti
call
arpl
loope
dec
les
push
sbb
xor
repnz
cmp
out
(bad)
aaa
push
push
div
pop
ins
ret
test
or
mov
mov
ins
jno
xor
mov
mov
ds
(bad)
dec
scas
jmp
jl
mov
xor
shl
and
dec
out
jae
retf
mov
push
idiv
mov
sbb
cmp
xchg
inc
aaa
pushf
pop
mov
dec
(bad)
push
cld
inc
cmps
cli
jmp
fst
mov
fist
jmp
fimul
cmp
add
jbe
aam
adc
pop
fdivr
ret
adc
jo
paddsb
cmc
lds
push
ret
mov
mov
mov
fnstcw
ins
mov
lods
(bad)
(bad)
fadd
das
add
or
xor
std
(bad)
sar
mov
and
xchg
jo
add
fimul
and
or
jae
sub
push
rol
pop
cmp
jecxz
inc
or
and
jge
loopne
jmp
repnz
xchg
mov
add
mov
pop
push
fldcw
inc
mul
fild
fs
mov
xchg
call
jae
adc
jns
or
fld
inc
ins
mov
adc
adc
fdivrp
bound
xor
and
fdivr
push
mov
jne
shl
dec
mov
stos
rcl
and
push
into
outs
jae
addr16
pop
mov
neg
test
mov
out
inc
xchg
jnp
in
call
mov
dec
sub
test
mov
(bad)
bound
adc
fidiv
push
lods
xor
and
xchg
addr16
test
in
cmp
inc
add
dec
push
xchg
call
popa
xor
cwde
imul
cmp
xor
pcmpgtw
push
loope
mov
cmp
adc
(bad)
sbb
call
xor
and
dec
mov
(bad)
int
dec
sbb
inc
lds
in
add
sub
cdq
mov
sbb
add
pop
fsub
outs
xchg
inc
xchg
ss
xchg
cli
mov
mov
inc
loope
movs
mov
repz
imul
cld
repnz
jne
mov
jns
fmul
sahf
sti
xor
nop
push
adc
ror
popf
mov
lahf
xor
shl
(bad)
mov
sbb
dec
movs
dec
xchg
mov
xchg
adc
mov
in
popf
inc
cs
jo
and
xor
mov
push
xchg
sub
add
pop
xchg
pop
cmp
cmp
(bad)
ja
mov
sub
popf
mov
mov
test
ret
adc
es
jge
pop
push
scas
push
or
xchg
and
xchg
ficomp
in
imul
stos
daa
and
inc
mov
xor
mov
jne
pushf
les
mov
adc
mov
xor
loope
test
int
mov
sub
test
push
(bad)
pop
adc
sub
push
xor
xchg
push
or
shr
mul
cmps
jns
into
(bad)
xchg
pop
aaa
mov
dec
jle
test
push
sbb
out
mov
cmp
sub
stc
movs
push
add
ds
clc
call
loop
sub
cs
push
sbb
jecxz
fistp
cdq
and
jg
out
push
(bad)
mov
sub
cmc
xlat
adc
mov
ds
stos
and
cmp
mov
mov
jno
mov
out
and
sbb
nop
js
push
add
mov
fidivr
sub
inc
mov
jge
imul
fs
mov
cmp
loope
daa
mov
adc
arpl
sub
or
xchg
sub
ror
and
cmc
jp
data16
adc
sbb
pusha
(bad)
xlat
sbb
out
adc
pop
call
pushf
inc
push
ins
sbb
push
dec
mov
mov
shl
push
and
repnz
cwde
arpl
int3
dec
rcl
fcom
mov
cmp
int3
(bad)
pop
mov
push
add
or
fcmovnb
cmp
dec
xchg
iret
xchg
test
fidiv
jne
call
(bad)
sub
inc
mov
sti
out
xor
or
(bad)
or
ja
sub
push
inc
adc
adc
sub
xor
xor
jb
cmp
dec
in
jmp
shl
pushf
sti
(bad)
xchg
push
aas
scas
xchg
sub
jbe
pop
dec
jnp
int3
not
stos
test
call
sahf
xor
adc
jmp
in
pop
dec
cdq
jle
inc
stos
inc
dec
cwde
fisttp
jg
cmp
es
dec
imul
jns
outs
sub
xchg
ss
(bad)
push
pusha
mov
push
push
test
mov
xchg
push
jo
add
adc
test
fdivr
jmp
cmp
stos
lahf
out
inc
sbb
sub
test
xchg
hlt
stc
xchg
inc
cmp
sar
int
sub
mov
in
int3
sar
add
push
xor
cmp
cmp
outs
mov
ds
sbb
jg
mov
loop
test
sbb
jno
mov
push
jo
idiv
cmps
jle
fadd
ins
add
adc
cmps
push
lock
inc
pop
int
mov
or
lds
imul
mov
loopne
in
sbb
sti
adc
pop
stos
pop
loopne
mov
bound
(bad)
add
sub
cdq
ret
stc
ins
xchg
jns
scas
in
in
stc
jnp
imul
jae
sub
cmp
sbb
sti
adc
adc
push
inc
xor
pusha
mov
les
adc
dec
imul
gs
neg
jno
sbb
cmp
fst
pop
push
adc
rol
out
push
aaa
mov
push
rcl
mov
mov
push
pop
popa
(bad)
mov
mov
test
test
ds
pop
jge
mov
mul
mov
ret
(bad)
int
and
idiv
add
aad
push
push
pop
add
and
iret
lods
jb
jb
adc
cdq
push
sti
add
test
retf
push
fmul
cmps
inc
pop
test
in
dec
lods
mov
mov
and
popf
and
dec
test
push
or
push
call
cmp
and
(bad)
test
retf
rcr
sbb
mov
mov
pop
ds
or
adc
jge
sbb
push
cmp
cmp
xchg
mov
retf
sti
inc
mov
push
in
(bad)
ins
retf
lea
push
sbb
mov
jno
sbb
or
or
aad
xor
cdq
sub
mov
add
idiv
push
fistp
fadd
xor
push
out
sub
mul
or
inc
dec
jo
in
mov
pop
mov
push
je
in
add
push
and
adc
sub
and
mov
inc
mov
mov
add
out
lea
jns
xor
in
lock
jg
push
arpl
pusha
bound
std
das
frstpm(287
add
fsubr
fidivr
jae
mov
push
ds
cmp
inc
xchg
stos
neg
push
movs
scas
cwde
rcl
mov
sbb
pusha
xlat
jno
jge
ja
out
sahf
pop
test
out
sti
sub
mov
pop
pop
daa
and
add
addr16
sahf
mov
sub
scas
sbb
icebp
mov
shl
sub
add
push
push
xchg
lods
ret
cmp
mov
in
sbb
outs
dec
xor
outs
sub
shr
in
jnp
lds
stos
test
shl
rol
push
movs
pop
fst
mov
ror
cmp
ret
mov
mov
mov
stos
ja
cmc
enter
imul
es
out
push
ficom
in
stos
adc
add
inc
pop
inc
lahf
mov
or
mov
(bad)
jnp
scas
daa
fistp
push
fdiv
mov
pop
sbb
sub
or
stos
(bad)
(bad)
sub
in
lock
rol
cmp
and
icebp
jp
ret
adc
sub
cwde
mov
scas
ja
rol
into
xor
pushf
xchg
int3
stos
popa
mov
cwde
je
fwait
movzx
xor
mov
push
mov
push
ss
push
hlt
pop
test
inc
in
sbb
add
jnp
xchg
(bad)
xor
mov
mov
push
mov
or
inc
jns
fs
pop
mov
pushf
mov
sbb
add
jmp
stos
cmps
out
jbe
inc
pop
jnp
lahf
dec
bound
jge
xor
or
ins
add
push
pop
sbb
icebp
cmps
push
sbb
call
adc
sub
push
fimul
(bad)
pop
pop
cmps
adc
cmp
popa
fld
std
add
js
mov
pop
sub
add
arpl
mov
xor
cli
mov
dec
iret
cdq
movs
into
adc
push
mov
sub
mov
pop
rol
cmp
push
xchg
mov
jg
adc
jns
inc
sbb
xor
add
xor
std
div
push
ficomp
inc
mov
loop
pop
jl
pop
push
pop
fscale
jmp
(bad)
aam
sbb
test
loopne
sub
mov
arpl
xor
dec
(bad)
fsubp
mov
mov
pop
sar
sbb
sub
cdq
(bad)
call
cmp
div
imul
mov
push
dec
retf
fmul
xchg
stos
mov
pop
xchg
push
outs
stos
nop
push
dec
imul
and
iret
fdivr
xchg
or
xchg
adc
popa
aaa
pop
sub
repnz
inc
jbe
test
push
in
jb
mov
gs
(bad)
rol
sub
popa
fsubr
mov
int3
jecxz
mov
ficomp
sbb
jns
cli
mov
mov
mov
mov
dec
push
lock
mov
or
mov
pop
sbb
sar
push
sbb
mov
les
xor
in
les
ds
sub
sbb
idiv
out
sub
xor
cmps
imul
xor
ss
jmp
ret
push
test
enterw
xchg
js
test
push
jmp
mov
clc
inc
js
in
mov
and
mov
arpl
sub
in
jns
(bad)
mov
iret
pop
dec
sbb
test
aas
pop
cmps
cld
xchg
add
outs
jmp
ror
lahf
pop
add
xor
inc
mov
mov
xchg
shl
add
push
or
icebp
mov
fwait
or
and
popf
outs
dec
movs
clc
xor
add
clc
mov
shr
lock
rcr
jg
fs
and
cwde
std
ds
cdq
jmp
ss
pop
xchg
jae
mov
pop
into
test
mov
and
ror
fsub
ins
adc
int
enter
inc
test
or
xlat
and
sbb
pop
xor
mov
icebp
xchg
pop
push
pop
inc
idiv
lods
adc
and
sub
rcl
pop
sub
(bad)
jecxz
lock
dec
idiv
cmp
bound
push
mov
dec
leave
dec
call
jp
shr
retf
imul
in
sub
pop
mov
mov
rol
pop
inc
cmc
mov
xor
ds
scas
pop
inc
cld
int
push
(bad)
inc
push
jmp
push
(bad)
pusha
xchg
je
test
cmp
cmps
or
xchg
in
jb
call
sub
addr16
rcr
sti
cmp
pusha
call
into
mov
int3
cmp
add
out
or
cmp
sbb
add
into
popa
clc
lahf
and
fst
nop
push
imul
test
ds
xchg
cmp
inc
gs
clc
repnz
adc
loopne
(bad)
mov
push
jp
(bad)
sbb
repnz
aaa
outs
dec
inc
fucomi
jle
xor
sbb
pop
mov
add
shl
jne
mov
loop
add
loop
ret
dec
cmp
sti
popf
cmp
lock
fadd
jne
cmp
imul
jae
mov
or
or
lods
jmp
add
inc
inc
mov
(bad)
and
fwait
mov
push
push
dec
inc
inc
fnstsw
push
js
dec
ja
dec
stc
fst
jbe
xchg
add
adc
xor
jnp
sub
mov
xor
les
add
mov
sub
mov
pop
cmc
movs
mov
test
xchg
push
dec
int3
push
xor
call
test
aas
fadd
lock
sbb
call
sbb
repz
cli
addr16
fnstcw
pushf
and
fild
pop
or
cmp
jo
dec
clc
xchg
mov
mov
popa
add
xchg
repnz
mov
push
pop
std
adc
scas
hlt
imul
fs
dec
cmp
jle
rcr
ss
fist
sbb
test
xchg
adc
mov
adc
jns
repnz
xchg
sti
add
jnp
dec
sti
xchg
pop
call
push
pusha
ror
push
jbe
faddp
retf
movs
add
sub
mov
adc
fstp
ret
xchg
addr16
(bad)
cdq
into
dec
mov
popa
clc
mov
retf
test
mov
jns
sub
pop
cmp
adc
jns
jno
push
add
out
xor
add
test
repz
mov
or
ficomp
mov
ja
aam
or
push
icebp
out
adc
jo
dec
fidivr
jl
lods
ja
push
mov
es
js
xchg
pop
push
and
imul
js
dec
mov
addr16
push
pop
xlat
push
sub
sar
out
inc
les
pop
xchg
lea
or
add
out
sub
call
sbb
outs
clc
mov
pop
xor
inc
and
fsub
int3
pop
cmp
xor
(bad)
call
pop
jbe
xor
jecxz
out
loope
jb
pop
push
mov
mov
int
lea
xor
inc
repz
retf
jne
ss
lahf
xchg
fcomip
push
push
xor
pop
mov
enter
adc
scas
and
enter
xchg
addr16
mov
and
inc
mov
push
das
out
pop
or
sbb
pop
lods
out
call
jle
push
mov
mov
rcl
pop
jne
cwde
mov
repnz
pop
mov
lds
ins
inc
test
or
(bad)
sahf
xchg
xchg
xor
adc
ins
xchg
cs
xchg
mov
loopne
push
jmp
iret
xchg
mov
arpl
shl
dec
pop
mov
fmul
jecxz
cmps
gs
xor
in
nop
shl
dec
or
or
test
mov
lods
mov
dec
sbb
shr
sub
aas
mov
call
or
add
arpl
clc
jl
dec
mov
cmp
mov
push
pop
and
jecxz
cdq
mov
adc
inc
mov
push
je
call
or
push
pop
mov
cmc
imul
mov
imul
push
dec
mov
pop
pop
sub
adc
pusha
stos
daa
arpl
mov
pop
or
cwde
lock
bsf
mov
mov
dec
inc
pop
or
xchg
(bad)
pop
add
jnp
ins
xchg
adc
cmps
jmp
xor
int
push
add
jmp
hlt
add
push
pusha
rol
fwait
add
call
ins
add
pop
xor
daa
gs
mov
into
dec
sar
nop
call
and
sbb
jne
mov
stos
das
and
and
loop
pop
cli
xchg
and
adc
je
ins
ds
sahf
sahf
(bad)
lea
cmp
jne
inc
arpl
push
inc
bound
pop
int
add
cmp
fidivr
call
cmc
xor
or
test
mov
jg
loope
ins
jbe
mov
dec
xchg
or
xor
pop
mov
fwait
je
push
push
shl
js
jbe
push
sub
repz
jmp
aaa
arpl
cmp
xor
jns
mov
dec
(bad)
call
into
pop
jmp
and
lea
adc
es
cmps
enter
dec
sub
ds
mov
aad
cdq
(bad)
pushf
lea
loopne
mov
or
paddb
pushf
rol
outs
sbb
xor
cmp
and
sbb
jnp
push
add
dec
jle
inc
or
(bad)
cmp
(bad)
in
pop
cwde
nop
cmps
rcl
cmps
sub
lods
sti
add
mov
sub
es
adc
dec
stos
outs
and
xor
movs
push
sbb
std
lods
sbb
jmp
ins
push
jle
push
jnp
inc
ds
(bad)
idiv
xchg
mov
fcomp
mov
lock
test
add
xchg
push
cmp
bound
mov
cdq
neg
cmps
ja
in
test
push
addr16
add
cmp
fisub
mov
xchg
or
sub
js
cs
jg
push
stos
fnstenv
sbb
mov
fcmovnu
jge
out
add
or
or
pop
lods
idiv
cmps
mov
add
loope
bound
icebp
scas
mov
adc
movs
sbb
jne
pop
shl
cld
js
pusha
leave
shl
loope
fstp
or
les
push
mov
retf
mov
movs
iret
sbb
in
pop
int
push
jnp
out
sub
das
push
dec
fs
xor
fwait
rcr
xlat
push
addr16
inc
jg
sbb
or
pop
adc
xchg
shl
out
pusha
or
sbb
cmps
cmps
(bad)
rol
pop
xlat
fwait
into
(bad)
lock
leave
cli
xchg
xchg
(bad)
std
call
(bad)
fadd
fsub
dec
call
inc
addr16
mov
cmp
push
sub
push
je
iret
xor
(bad)
jle
or
fbld
sub
in
push
retf
mov
pushf
cmp
add
xchg
lea
inc
aas
sbb
gs
push
mov
xchg
sbb
scas
mov
cmc
sub
mov
cmps
push
push
call
out
sub
mul
pop
lea
rol
pop
xchg
(bad)
mov
xchg
add
inc
pop
cmc
xor
loop
(bad)
jno
mov
outs
mov
sbb
lahf
test
in
mov
jbe
mov
inc
arpl
das
sbb
in
loop
inc
add
push
lea
out
gs
adc
and
dec
lock
jbe
push
inc
push
cmps
mov
outs
mov
push
fistp
pop
sub
xchg
jae
jb
ins
arpl
arpl
call
fidiv
and
test
rcr
ins
xchg
into
stc
rcl
add
inc
iret
jp
mov
jp
pushf
dec
pop
xchg
xor
adc
cmp
scas
xchg
push
mov
add
cmc
sub
sub
pop
jmp
dec
add
(bad)
mov
shr
stos
movs
jmp
add
sub
xlat
retf
push
push
pop
(bad)
sub
xor
xlat
(bad)
in
add
push
movs
loope
cli
in
es
shr
dec
imul
arpl
arpl
ins
xchg
mov
mov
fdivp
test
sbb
out
mov
call
out
retf
(bad)
or
ins
sub
jge
push
popf
mov
sub
and
int3
ror
pushf
je
adc
sub
sbb
cmp
push
movs
(bad)
rol
movs
ja
iret
fistp
leave
mov
push
retf
lods
sbb
xor
xchg
in
sbb
int3
cmps
jb
mov
aas
mov
push
sbb
jo
cmp
adc
addr16
ins
hlt
in
rol
or
aaa
and
mov
push
pop
imul
data16
in
int3
mov
xor
mov
xor
xor
lods
dec
pop
add
mov
dec
not
jne
cmp
mov
popa
cmp
pop
dec
dec
movs
jmp
jo
adc
sbb
in
xchg
cli
jns
fldcw
sub
aad
adc
fld
dec
fiadd
adc
scas
mov
mov
(bad)
cmp
retf
push
clc
out
xchg
cdq
repnz
in
popa
gs
adc
test
adc
pop
add
mov
outs
test
popf
cmp
mov
test
adc
pop
iret
pop
xor
jbe
sbb
sbb
push
mov
jns
das
and
push
mov
jne
xchg
outs
loopne
dec
in
int3
sub
push
pop
mov
mov
xchg
aam
das
jecxz
jne
jae
mov
nop
rcr
adc
sar
xchg
inc
ins
xor
cmp
push
pop
stc
hlt
into
mov
nop/reserved
adc
pop
daa
repnz
sub
(bad)
push
xor
and
out
cmp
idiv
test
rol
dec
push
pop
lds
or
mov
or
cmc
out
int
pushf
push
out
ss
add
into
cmp
pop
push
pop
test
mov
dec
jns
ret
rol
arpl
push
add
imul
push
nop
adc
sub
cwde
jge
int
and
adc
ror
out
adc
test
sbb
pusha
arpl
cld
test
nop
nop
mov
add
mov
ror
sub
pop
pop
test
test
aad
or
dec
mov
mov
mov
pusha
cmp
jmp
cmp
neg
jmp
je
push
add
jbe
leave
fsub
push
sbb
fbld
push
or
scas
sbb
fidiv
sub
fidiv
sub
mov
loopne
cmp
(bad)
push
pop
aas
push
and
scas
adc
das
xchg
clc
lahf
jno
or
ficom
jge
scas
aas
pop
fbld
out
jmp
out
lock
dec
scas
xchg
ins
mov
pop
leave
mov
jnp
sbb
sbb
and
adc
out
dec
enter
xchg
or
push
rcl
clc
add
mov
mov
inc
xchg
lods
stc
cwde
xchg
xchg
push
mov
test
mov
cmp
mov
xchg
xchg
sub
pop
sti
je
into
push
cmp
sub
(bad)
repz
and
mov
js
hlt
pop
popf
sbb
push
and
pop
jno
maxps
nop
fwait
cld
pop
and
mov
rol
push
mov
retf
sub
scas
and
xchg
nop
or
push
and
out
mov
lahf
clc
arpl
out
in
cmps
aad
sahf
pop
daa
lock
cmp
sbb
test
mov
sbb
frstor
icebp
sub
aaa
mov
and
cmp
xchg
mov
pop
retf
stos
mov
mov
scas
push
mov
fst
lds
mov
int
adc
ins
je
cmp
mov
nop
data16
mov
sub
arpl
xor
xor
ror
jb
push
shr
in
mov
add
lods
jle
scas
pop
push
sti
jg
ror
or
cmc
fidivr
fcmovu
dec
sbb
frndint
into
inc
sbb
stos
imul
mov
cmp
movs
and
call
sahf
cli
dec
stc
inc
push
arpl
xchg
outs
loop
mov
mov
sbb
je
popf
lahf
mov
add
cld
lahf
outs
pop
add
jg
pop
inc
pusha
inc
rcr
cmp
push
and
rcr
jne
mov
inc
mov
dec
pop
inc
and
pushf
adc
cwde
mov
or
push
sub
cmps
xchg
xor
pop
push
pop
fcmovbe
mov
jb
mov
dec
js
rcl
mov
push
add
rcr
dec
xor
ror
sub
xchg
retf
(bad)
int
test
popf
inc
(bad)
push
test
int
add
and
scas
hlt
out
cmp
jmp
mov
lods
xor
test
jg
mov
rcl
jecxz
mov
vmovaps
cmc
test
xchg
pushf
(bad)
pop
call
or
cmp
out
push
xchg
clc
cmps
les
loop
ret
popa
out
popf
fadd
movs
xchg
ins
mov
jb
mov
mov
mov
and
sahf
lods
pop
xor
loope
pop
loopne
jmp
cmp
xor
xlat
xchg
sbb
sub
or
cmp
clc
push
push
movs
fcomp
(bad)
arpl
jnp
sbb
cwde
call
mov
imul
or
push
loope
(bad)
aad
xor
jbe
cmp
imul
push
mov
pusha
push
push
retf
mov
sbb
dec
mov
outs
and
aad
sub
outs
push
ret
pop
fdiv
xor
mov
shl
push
mov
pop
inc
xor
lds
pop
push
sbb
call
jo
jae
fldcw
adc
add
rol
cli
dec
ds
sbb
pop
mov
add
sbb
es
cwde
xchg
inc
push
ds
jno
movs
lods
mov
jg
push
stc
xor
mov
adc
and
shr
ja
mov
xor
xlat
push
sahf
mov
dec
push
push
sub
push
adc
outs
add
mov
(bad)
out
sub
cmp
adc
cmp
or
push
stos
test
mov
push
pop
bound
sub
int
cmp
adc
ror
popa
mov
cs
jae
xor
lods
xchg
adc
mov
fstp
add
out
retf
fisttp
inc
mov
out
lds
adc
add
push
int3
xor
imul
xor
pop
loop
push
push
pop
movs
or
fucomp
fisttp
mov
rcl
push
fs
outs
sbb
push
into
sub
add
jnp
add
retf
cwde
(bad)
jno
mov
pop
and
pop
push
int
loop
mov
fisub
and
mov
int3
movs
mov
mov
mov
jnp
leave
dec
and
push
xchg
les
mov
and
adc
in
mov
jle
adc
sub
or
jb
jb
sbb
data16
bound
neg
int3
sahf
xchg
(bad)
mov
frstor
add
mov
pop
das
je
inc
mov
loop
lea
sub
pop
ret
or
and
loop
out
ret
stos
cli
push
std
aaa
inc
and
sub
sbb
mov
mov
out
jne
or
cmp
test
aam
not
aas
ins
clc
daa
cmc
cmps
dec
or
popa
push
mov
mov
daa
jge
cmps
or
addr16
xchg
push
push
fxtract
scas
cld
shl
mov
repnz
adc
call
adc
jmp
imul
adc
sbb
or
xchg
add
repnz
into
pop
(bad)
mov
pusha
jl
fstp
bound
test
pop
or
iret
nop
lods
out
adc
fld
xor
sub
and
mov
aam
arpl
ficom
enter
sbb
ret
retf
add
jbe
dec
sbb
xor
call
push
jle
dec
xor
fisubr
cmp
push
push
outs
sbb
jmp
(bad)
sar
and
inc
xchg
adc
or
jae
push
jnp
xchg
fld
cmc
adc
push
pusha
sub
xchg
jecxz
in
pop
pop
mov
or
or
retf
ss
push
fisub
ins
jne
fistp
xor
cli
loop
mov
and
minps
(bad)
and
cdq
cwde
outs
mov
(bad)
pop
retf
cmps
outs
xlat
sub
int3
jae
lea
xor
xchg
pop
mov
xchg
or
pushf
call
push
inc
add
test
cmc
jmp
jae
adc
sub
call
add
jns
daa
les
outs
adc
movs
and
cmp
jp
(bad)
jp
sbb
retf
mov
mov
(bad)
or
xor
jle
loope
jno
mov
jo
cmp
sti
cmp
mov
pusha
in
sbb
adc
inc
mov
xchg
lahf
mov
xlat
addr16
int3
add
outs
lods
lea
push
loop
movs
sub
(bad)
jne
out
(bad)
dec
movs
or
or
das
jmp
loop
das
pusha
(bad)
xchg
fidiv
xchg
in
mov
mov
fisttp
inc
cwde
jg
outs
adc
sub
retf
leave
call
pop
popf
jg
cmp
in
retf
cmps
aam
mov
mov
fwait
mov
pop
adc
xlat
jae
jle
xor
jle
xor
jns
jae
movs
mov
mov
inc
add
imul
scas
call
jle
fldcw
sar
mul
mov
or
cmp
into
mov
int
faddp
inc
repnz
fbld
les
addr16
jg
scas
add
enter
push
pop
push
pop
cmp
mov
sub
pop
push
lods
(bad)
pmovmskb
mov
fmul
clc
mov
mov
ins
loope
aas
test
(bad)
xchg
dec
pop
adc
imul
icebp
shr
jl
xchg
stos
or
jno
pop
fbstp
push
pop
cld
inc
push
jecxz
in
retf
jmp
aad
test
push
mov
mov
jo
inc
or
jl
mov
or
mov
cmp
sbb
loop
int3
in
ins
pop
repnz
mov
or
sbb
clc
sub
aad
xlat
fidiv
adc
fimul
cmp
inc
mov
push
data16
jmp
je
sub
aam
dec
mov
cdq
loop
xor
ret
mov
stos
add
mov
mov
xchg
pop
lods
jae
shl
mul
adc
and
ja
in
addr16
push
pop
movs
adc
dec
pop
shl
mov
ror
jg
xor
mov
mov
or
push
mov
cmp
push
retf
mov
inc
mov
ret
ins
pop
inc
pop
fist
pop
ret
enter
mov
adc
xchg
xor
mov
test
inc
jge
xor
das
sbb
ins
aam
stos
sahf
call
jmp
sti
ror
int
mov
int3
jecxz
in
xlat
(bad)
leave
push
mov
jp
int
mul
daa
sub
(bad)
sbb
mov
push
hlt
nop
xchg
dec
imul
push
jecxz
cmps
(bad)
add
pop
popa
pop
ror
pop
int
leave
xchg
cmps
add
dec
sub
or
ds
inc
push
mov
mov
out
jae
adc
jns
sbb
xor
mov
mov
aad
jno
test
lahf
cmp
cli
jmp
loope
pop
mov
sub
sbb
aaa
add
pop
and
das
xor
xor
test
xchg
jnp
loop
leave
shl
xor
push
jp
mov
or
loop
leave
fcomp
xor
jmp
es
je
or
cmove
loop
cmps
xor
in
inc
leave
xor
(bad)
rol
aas
test
mov
in
jno
cmp
sub
push
pop
pusha
ds
ret
mov
xor
je
mov
call
daa
test
xchg
dec
aaa
popa
(bad)
or
mov
fisttp
jmp
lods
imul
inc
sti
stc
jo
dec
mov
fwait
mov
xor
mov
arpl
and
mov
test
xchg
popa
fmul
xor
call
or
call
mov
imul
inc
pop
test
loop
fadd
xlat
iret
sub
div
add
or
loope
dec
xchg
pop
les
xchg
ins
dec
sbb
lods
retf
mov
or
inc
jmp
in
loope
push
movs
xor
stos
int
push
test
xchg
neg
rol
mov
call
jge
ins
add
jmp
xchg
and
jp
js
xor
mov
in
sbb
(bad)
test
stc
jne
mov
pusha
push
lock
int
xchg
sti
dec
inc
inc
fs
lahf
pop
push
ror
dec
imul
pop
sti
into
gs
scas
retf
xor
add
nop
hlt
ins
xor
enter
retf
lods
mov
or
sub
imul
jmp
shr
pop
mov
xor
ja
(bad)
push
fdivp
rcl
sub
fiadd
add
dec
cmc
sub
arpl
mov
jp
mov
(bad)
cwde
jecxz
imul
retf
(bad)
int3
pop
(bad)
mov
sub
sub
xor
push
jecxz
sbb
repnz
test
dec
rcl
sub
sbb
iret
mov
in
movs
sbb
hlt
fld
fld
bound
sbb
lock
sbb
cld
jl
ins
sub
arpl
loopne
fdivr
xchg
in
xchg
jno
shr
mov
jno
movs
pop
icebp
sub
push
ret
jb
mov
mov
push
push
(bad)
and
movs
jb
std
sub
cdq
test
sub
scas
adc
push
sub
daa
inc
cli
pop
cmps
jae
add
fadd
scas
ret
xor
loop
lea
movs
push
fnstenv
jecxz
test
arpl
icebp
sbb
push
cmp
icebp
movs
ret
aaa
mov
test
push
sar
out
mov
inc
pop
ins
call
(bad)
call
arpl
loope
call
inc
aas
jecxz
pushf
ja
aaa
add
xor
ds
loop
pop
push
xchg
(bad)
jecxz
in
(bad)
aas
stos
test
cmp
test
xor
out
jle
adc
retf
jno
inc
xchg
aaa
rol
(bad)
icebp
pusha
mov
jecxz
fidiv
adc
inc
out
cmps
out
fcom
ins
mov
xor
shr
movs
cmc
jecxz
iret
xchg
dec
cmp
int3
out
cli
mov
jecxz
leave
and
ds
cdq
mov
in
inc
in
rol
js
sub
call
ret
sub
iret
arpl
sbb
xchg
inc
mov
or
mov
mov
hlt
sbb
mov
pop
cmp
shr
neg
or
and
and
mov
not
jmp
movs
je
inc
pop
loope
cmps
hlt
fdiv
xchg
sbb
rcl
xor
call
jno
out
lahf
fwait
rcl
bound
mov
ds
xor
in
dec
out
adc
test
aad
sub
loop
data16
xor
int3
cwde
paddsw
cmc
add
outs
push
pop
jg
dec
pop
cmp
aaa
bound
dec
lods
push
sbb
pop
les
xchg
mov
lahf
ins
dec
aaa
psubsw
and
jp
js
leave
mov
test
or
mov
mov
shr
or
cdq
(bad)
dec
or
or
mov
or
das
cld
imul
sahf
lods
pop
jae
call
adc
xlat
loop
jmp
push
fisubr
sub
sahf
popf
aad
(bad)
mov
adc
ss
call
setno
jmp
not
cld
cmp
clc
xchg
in
inc
inc
ja
cmps
pop
ja
add
shr
xor
fcmove
cld
mov
cmp
push
shr
xchg
sti
cmp
addr16
pop
lock
jmp
dec
stos
jb
add
dec
add
sbb
xor
inc
xor
dec
xor
jp
rcr
xchg
or
aas
jno
cld
out
push
mov
ins
xlat
mov
add
sti
mov
xor
mov
push
jnp
adc
push
hlt
lods
daa
aam
inc
pop
je
add
inc
jge
cmp
int3
enter
jbe
mov
outs
sbb
fcom
push
sub
inc
mov
jmp
retf
mov
call
inc
push
push
jns
imul
sub
(bad)
das
sbb
mov
mov
xor
jmp
fadd
and
inc
add
enter
pop
stos
repz
cli
push
aam
ficom
dec
test
into
int3
imul
xchg
js
xchg
push
jae
xor
std
or
mov
mov
pcmpgtb
and
retf
mov
loope
add
lods
cmp
pop
sti
dec
sub
in
jecxz
rcl
aad
push
out
cmp
push
loope
jno
adc
push
aaa
push
movs
inc
xor
add
lock
lods
int
gs
int3
(bad)
pop
mov
test
repnz
cmp
jle
fs
push
lods
popf
cld
imul
pop
mul
js
dec
rcl
sub
xor
push
mov
call
std
xor
sub
push
and
add
mov
mov
dec
push
and
sub
in
mov
shl
xchg
js
std
pop
clc
das
push
addr16
(bad)
clc
pop
fisub
inc
ja
jo
pop
add
mov
sbb
enter
push
fdiv
loopne
(bad)
lock
ret
adc
fist
and
mov
call
push
jo
loop
out
sar
push
mov
and
frstor
cmp
sahf
out
xchg
pusha
xor
pop
ja
iret
aaa
cmp
popa
mov
jns
pop
pop
mov
data16
jnp
fstp
dec
mov
sbb
or
fmul
es
fadd
popa
jnp
pop
movs
int3
xor
pop
addr16
mov
dec
push
scas
push
adc
mov
push
in
jle
xor
lea
dec
movs
call
cmp
rcl
mov
out
rcr
add
aad
pop
fs
mov
mov
mov
push
aam
stc
in
ja
mov
fadd
mov
xor
out
jmp
dec
inc
xchg
(bad)
fs
ror
adc
(bad)
call
jg
push
dec
or
stos
pop
jae
sahf
sub
shl
jae
xor
or
pop
mov
xchg
pop
call
add
sbb
sbb
ret
int
aaa
jp
sbb
iret
loopne
nop
into
xor
sbb
mov
pop
rcl
adc
pop
xchg
in
sar
mov
ror
(bad)
inc
lea
mov
xor
and
jno
jg
push
jp
xor
pop
into
and
pop
mov
fsubr
shl
stos
adc
mov
or
fld
and
and
pop
das
ret
xchg
add
aaa
call
hlt
add
xchg
ss
ds
pop
push
xchg
leave
jo
pop
lea
js
movs
stos
and
cld
int3
jmp
or
ja
loopne
push
push
movs
mov
xchg
daa
adc
xor
cmp
push
push
rcl
xchg
imul
dec
xor
das
jns
cld
dec
sbb
add
sbb
or
test
mov
and
and
add
movs
pop
enter
iret
or
or
(bad)
jmp
test
bound
and
push
fld
push
xchg
int3
xchg
movs
push
push
movs
mov
mov
and
jecxz
jg
pop
mov
and
push
retw
mov
or
sub
frstor
test
inc
aad
outs
fisttp
pushf
ins
mov
ja
lods
stc
int
jge
fucom
ja
jmp
outs
fstp
pop
(bad)
mov
jmp
sub
(bad)
call
mov
in
imul
lock
imul
cmc
sub
mov
sub
out
inc
sub
mov
mov
push
jmp
fmul
movs
clc
not
push
dec
sbb
mov
jno
in
push
leave
xor
movs
gs
out
push
add
push
push
outs
xchg
sub
inc
mov
sub
in
pop
jnp
in
cmps
retf
mov
xchg
ret
fisub
xor
xor
push
clc
out
and
jl
(bad)
jne
or
mov
push
popa
ror
mov
sbb
call
add
adc
shr
call
push
sti
sahf
add
icebp
test
mov
lods
xchg
lock
push
jmp
imul
fcmove
and
jbe
adc
mov
(bad)
sti
inc
and
ds
and
clc
test
inc
repnz
cld
fld
add
pop
mov
rcl
mov
out
xor
cmc
cdq
and
stos
fdiv
pop
pop
fld
fwait
rcl
push
pop
fimul
xchg
iret
mov
add
xchg
cs
mov
jp
mov
dec
mov
loope
repnz
scas
and
pop
dec
cld
pop
cwde
and
ds
dec
fisub
cmc
pop
(bad)
cmp
cmps
out
fcomp
or
fld
push
cdq
cli
dec
or
repz
adc
sbb
mov
jecxz
shl
sub
mov
mov
cs
stc
ror
mov
sbb
out
jge
or
xor
test
mov
pop
mov
aas
cmp
or
add
or
cmp
jne
push
mov
mov
arpl
in
mov
push
shr
sbb
dec
out
les
cmp
sbb
iret
ja
xor
push
dec
push
dec
ret
fst
mov
out
test
rcl
imul
pop
sub
pop
dec
dec
cwde
inc
fiadd
mov
push
in
sub
mov
dec
pop
scas
sub
icebp
fist
lds
mov
inc
imul
adc
add
push
les
dec
les
add
sub
mov
arpl
ins
loopne
stos
sub
push
aas
jmp
dec
adc
mov
inc
sub
repnz
add
add
and
inc
mov
push
inc
pop
adc
in
inc
hlt
inc
sbb
mov
pop
sub
mov
mov
add
mov
enter
cmp
addr16
add
mov
fidiv
dec
(bad)
sub
xor
in
rol
or
push
fistp
xor
mov
test
cmp
and
lods
pop
outs
scas
sub
push
mov
adc
je
sahf
dec
xchg
mov
mov
es
cmp
pop
leave
pop
and
and
pop
int
lds
pushf
shl
jbe
sti
data16
jmp
mov
sbb
xchg
inc
jne
adc
mov
xchg
das
inc
mov
ret
std
mov
mov
dec
xor
add
mov
(bad)
int3
add
pop
jle
ja
add
inc
inc
xlat
mov
dec
mov
out
outs
and
mov
cmp
or
jae
sub
sti
outs
or
lods
ja
pop
bound
pop
fwait
movs
cmovo
push
and
sub
jmp
ror
cmps
dec
pop
aas
icebp
xor
push
sbb
cmps
sub
adc
or
push
adc
lods
push
mov
sbb
mov
(bad)
aaa
mov
jnp
xchg
sub
cmps
bound
dec
or
shr
mov
stos
jp
ficom
dec
push
xchg
test
retf
pop
adc
sub
adc
les
jmp
push
daa
xchg
dec
movs
inc
sub
jl
or
or
push
pop
in
cmp
out
cmps
adc
push
lods
loope
bound
or
cmps
adc
(bad)
aam
push
ins
nop
xor
cwde
pushf
(bad)
xchg
das
retf
fsubrp
xlat
ss
dec
das
and
imul
out
pop
test
add
call
jns
add
dec
jecxz
mov
fcmovu
add
mov
ins
mov
scas
jg
add
cli
pop
xlat
(bad)
sbb
loope
pop
lods
xchg
daa
loop
mov
imul
out
fsubr
fdivr
jmp
dec
jno
sub
clc
fcomp
add
stos
imul
sub
jo
mov
cmps
sbb
je
sub
jno
nop
jp
mov
or
rcl
pop
loop
jne
adc
push
mov
xor
out
dec
mov
add
dec
div
arpl
gs
cmps
stos
cmp
sti
jbe
and
rcl
xor
bound
and
inc
lds
sub
call
mov
das
sub
out
cdq
rcl
setge
xchg
mov
cmc
cmp
mov
fsubr
fxch
jnp
adc
ins
mov
inc
push
ins
and
mov
pop
xlat
xor
push
push
inc
xor
daa
cmp
or
mov
ds
mov
sbb
popf
movs
xchg
push
stos
fstp
xlat
jecxz
and
xchg
jl
jmp
jecxz
sub
jmp
mov
clc
call
(bad)
cmp
(bad)
push
jmp
fdiv
test
cmp
xor
sbb
cs
inc
xchg
lahf
fcmovnu
shr
fdivr
push
adc
shl
mov
test
jne
inc
or
fimul
jo
xor
leave
dec
cmp
cmp
adc
and
(bad)
push
push
mov
xchg
aaa
add
pop
cmp
ins
xor
ss
push
inc
pop
inc
mov
mov
sub
jne
popa
ss
jmp
adc
dec
loopne
jae
xchg
ret
ffree
mov
add
fs
sub
mov
inc
int
fldcw
iret
xor
repnz
scas
and
jae
cwde
sbb
lds
xchg
imul
xchg
sub
cmps
pop
jmp
and
inc
sub
jmp
dec
ja
pushf
mov
popa
pushf
jbe
enter
int3
jp
jp
jmp
cld
dec
scas
cmp
mov
fistp
cmps
xlat
or
fimul
inc
add
call
push
push
mov
pop
inc
scas
ins
mov
xchg
pop
jge
dec
retf
inc
mov
xchg
mov
shl
push
add
or
psrlq
inc
pop
and
xchg
pusha
das
dec
movs
sub
mov
jmp
adc
add
in
iret
out
inc
ror
test
pop
pop
xchg
push
in
cmp
or
xlat
jg
cmp
push
sbb
xor
cwde
dec
std
sub
sub
sub
(bad)
or
das
imul
and
mov
mov
stos
test
mov
sub
test
test
jne
icebp
cli
xor
xchg
add
fcmovu
pop
adc
out
loope
loopne
fsub
aam
xor
jne
xchg
add
enter
push
and
je
pop
rcl
pop
add
or
and
js
or
xor
sub
movs
mov
movs
pop
sbb
stos
sub
add
adc
jge
stos
call
popa
push
test
ins
ja
add
sub
or
sub
inc
xchg
sub
pop
(bad)
xchg
dec
or
adc
cmp
jl
adc
mov
jo
cmp
mov
mov
lea
cmp
daa
stos
inc
shr
mov
cmp
stos
jns
sub
jecxz
cmp
je
stos
mov
pop
jecxz
stos
dec
fbstp
lahf
enter
shr
add
cmps
sub
ins
mov
inc
daa
cs
lods
push
fnsave
dec
sbb
or
int3
xor
mov
xchg
push
pop
xchg
push
pop
mov
es
mov
push
mov
call
xor
(bad)
jo
loope
pop
rcl
xchg
sbb
ins
mov
push
or
push
pusha
daa
mov
fcom
and
out
mov
sub
shr
pop
shl
xor
or
loop
or
int3
xor
mov
repz
sbb
cmp
loope
mov
ins
popf
jbe
pusha
and
(bad)
test
xor
cmc
lds
cs
ins
jbe
cmp
lods
in
(bad)
xchg
adc
fs
pop
aaa
ins
fsubr
sbb
out
pop
leave
ret
push
sub
inc
arpl
fs
mov
jecxz
fidiv
sbb
test
ret
add
loopne
or
or
and
aas
jne
cmps
aas
inc
cmps
push
push
jp
xor
cmp
lds
jmp
inc
xchg
es
mov
iretw
mov
inc
or
lahf
in
xor
aaa
out
fisubr
fdivr
xor
je
xchg
scas
and
mov
hlt
fnstsw
enter
sbb
pop
popf
xchg
std
fucom
outs
jp
lahf
inc
mov
dec
nop
cld
mov
leave
mov
es
in
jno
jo
mov
js
jne
imul
push
clc
push
daa
aam
aam
mov
inc
dec
or
lods
add
(bad)
xor
push
push
pop
out
sbb
inc
pop
dec
fadd
pusha
mov
in
test
cld
jae
or
ret
sub
sbb
dec
mov
sbb
jo
dec
add
mov
sahf
fucomip
out
sbb
pop
retf
ror
mov
inc
mov
out
mov
or
pop
jp
out
nop
(bad)
hlt
fimul
fwait
fwait
aas
fadd
rcr
inc
mov
push
or
jae
movs
xchg
sub
xchg
clc
hlt
ins
cmp
and
fild
inc
mov
sbb
adc
dec
retf
cwde
test
cmc
or
push
pop
pop
in
rol
data16
outs
fcmove
fcom
xchg
push
inc
jnp
xchg
test
in
push
cmp
and
fnsave
cmps
fisttp
call
jae
shr
cmps
add
pop
sti
jge
and
cmp
fmul
push
inc
call
jl
push
bound
xchg
push
inc
and
sbb
data16
fs
dec
cld
rol
push
mov
imul
xor
retf
xchg
fcom
mov
ins
sub
pop
fs
cmp
or
fild
stos
rol
in
mov
out
jae
retw
daa
or
push
push
fcom
movs
pop
sub
jmp
loope
in
xchg
add
add
xor
or
ins
mov
pop
mov
in
jg
jmp
inc
pop
sbb
sahf
cmp
loop
out
add
stc
mov
into
out
jle
xchg
ret
adc
mov
loopne
arpl
data16
std
push
test
sbb
dec
jb
inc
enter
adc
xor
arpl
jbe
aas
fs
mov
mov
sub
jns
stos
pop
and
xchg
sub
test
shl
lahf
mov
add
sub
pusha
sub
pop
pop
shl
nop
sub
or
call
in
jp
or
mov
ret
adc
pop
repz
popa
push
mov
inc
loop
pop
cmps
movs
jg
jo
jle
loop
mov
sub
retf
xor
ja
push
shl
mov
cld
xor
dec
push
inc
ds
push
push
or
adc
retf
jno
mov
repz
inc
and
lods
ret
xor
adc
int3
dec
lods
sbb
jge
pop
jecxz
add
jge
retf
jl
rol
lods
(bad)
fisttp
and
mov
aad
packuswb
retf
jne
aaa
push
rol
or
retf
cs
pop
cs
jp
mov
stc
xlat
ret
push
dec
pushf
cmp
ret
and
int3
jb
jmp
adc
dec
inc
add
jmp
arpl
pop
bound
ss
test
mov
push
cmp
push
mov
out
call
adc
in
movs
adc
addr16
mov
jnp
push
or
inc
movs
jmp
in
in
sbb
out
fst
jnp
sar
mov
clc
adc
add
test
(bad)
pop
mov
inc
cvtps2pd
in
outs
sbb
fimul
or
outs
xor
push
lods
les
jmp
push
mov
aas
cli
stos
mov
push
fcomp
inc
shl
adc
loop
cli
pop
(bad)
cld
cs
xchg
stos
push
xor
xchg
std
fisttp
stc
cli
dec
pop
sahf
retf
fs
mov
pop
repnz
bound
dec
not
xchg
add
sub
push
mov
dec
xchg
jl
(bad)
jge
cmps
bound
aas
or
scas
fcom
sub
push
pop
pushf
lds
fs
xor
dec
add
repz
jle
lods
daa
ficomp
inc
inc
in
test
out
cld
loope
repnz
adc
sar
movs
int3
dec
stos
push
in
sub
push
loopne
mov
stc
or
daa
pop
and
lock
rcr
repz
or
inc
push
(bad)
je
pop
jb
(bad)
fcom
(bad)
and
lahf
mov
dec
gs
xor
push
cmp
add
xchg
test
scas
pop
inc
sbb
push
sub
nop
adc
movs
mov
cmp
pop
pop
dec
iret
stos
ret
mov
jo
pop
retf
adc
cwde
jle
js
test
sub
bound
(bad)
inc
stc
cmp
pop
xor
aad
out
cmp
retf
push
call
xchg
jg
daa
pop
pop
push
inc
outs
out
xlat
inc
pmaddwd
inc
ins
shl
adc
sar
sbb
mov
sub
outs
dec
loopne
add
dec
call
movs
sub
adc
jmp
add
inc
fild
mul
sbb
or
or
xor
push
sbb
sbb
scas
and
push
mov
shl
lods
mov
adc
push
xor
popa
retf
je
and
js
pop
mov
jnp
cwde
outs
imul
or
pop
in
and
mov
mov
mov
psubusw
mov
(bad)
mov
in
not
fistp
jmp
adc
cmp
test
popf
sub
out
gs
dec
jne
jle
int3
fwait
ja
int3
sub
shl
or
ja
push
dec
pop
arpl
xchg
hlt
fcmovbe
xchg
nop
int
dec
xchg
fsubr
fisttp
std
sbb
inc
mov
(bad)
pop
sbb
pusha
ins
cwde
inc
push
adc
sbb
adc
mov
pushf
lods
xor
push
cmp
into
das
or
sub
xchg
loop
xor
mov
xor
ins
mov
mov
ins
or
cmp
cmps
push
and
sub
repnz
into
xlat
sub
or
jo
out
jg
sbb
std
cmp
retf
cmovb
dec
add
idiv
adc
adc
fucom
loop
shr
inc
add
arpl
fild
mov
shl
jbe
and
mov
jno
pop
jne
jp
add
xor
outs
jg
sub
cmp
shl
jg
clc
popa
cli
enter
cmp
mov
bound
add
in
dec
loop
or
jns
mov
jge
mov
xchg
sub
fwait
mov
or
in
cmps
mov
test
je
int
repz
xor
mov
les
pushf
pop
mov
cmp
cmp
nop
jecxz
and
inc
leave
dec
xchg
pop
lea
iret
sbb
jg
cli
xor
xor
dec
scas
shl
pop
cmps
mov
cmp
sub
sbb
movs
add
not
sbb
add
rcl
sbb
call
lds
lock
in
cmp
xchg
aaa
arpl
pop
movs
test
pop
mov
in
mov
fmul
dec
retf
cmc
call
fwait
ror
add
dec
lds
retf
shl
sbb
icebp
outs
xlat
inc
add
xchg
ins
dec
xchg
mov
push
std
jbe
cmp
(bad)
jns
repnz
jp
mov
(bad)
inc
pushf
cmp
mov
inc
movs
push
or
inc
test
cmp
(bad)
sub
adc
mov
(bad)
jmp
cmps
xchg
ja
stc
cmp
or
sahf
lods
das
es
and
int3
dec
stc
mov
popa
(bad)
into
mov
xchg
fs
div
inc
mov
cmp
addr16
xor
dec
out
mov
xor
add
(bad)
aas
ins
jp
fstp
mov
mov
xchg
mov
sbb
sub
in
cmp
xlat
aaa
or
adc
popa
shl
aaa
mov
ins
pop
les
jle
ror
add
call
hlt
call
neg
ins
nop
or
mov
movs
mov
scas
xor
fld
mov
stos
mov
sub
retf
xchg
xchg
daa
arpl
scas
shl
mov
push
jnp
pop
xchg
mov
ins
jmp
mov
mov
shl
xchg
jnp
push
retf
xchg
sub
or
adc
dec
shl
sub
ins
in
imul
mov
and
jg
loop
mov
hlt
or
outs
inc
out
cmp
dec
movs
add
push
mov
aas
sub
out
or
mov
fdivr
bound
rol
xor
fcom
repnz
aad
int
dec
inc
cmp
adc
xchg
lea
mov
sbb
test
aam
gs
jb
icebp
inc
xchg
test
inc
repz
cmp
push
xchg
loope
aaa
cmp
mov
push
jl
fisubr
push
js
pop
and
cmp
mov
movs
loope
pop
aas
outs
cli
push
xchg
mov
xor
lods
sbb
or
out
cmp
loopne
mov
pop
xchg
cmps
pop
dec
retf
test
xchg
es
cmp
pop
cmp
jmp
ror
push
mov
dec
jns
sub
inc
jg
stc
scas
and
mov
bound
imul
cld
xchg
test
aam
and
push
bound
sahf
ret
pop
out
push
or
cmp
xchg
call
sub
mov
inc
stc
xchg
mov
cwde
dec
(bad)
ins
test
xchg
es
adc
dec
push
add
daa
movs
test
aad
push
xchg
mov
mul
popf
or
sub
fsub
rol
mov
stc
inc
inc
sub
cdq
xchg
sub
pop
fild
or
mov
aas
fadd
mov
adc
or
sbb
or
test
mov
mov
push
cmp
sub
mov
mov
mov
out
aas
sbb
je
fdivr
fwait
pop
mov
jns
mov
sbb
jmp
push
mov
jb
mov
xlat
xchg
cli
push
(bad)
in
out
dec
lods
sbb
(bad)
iret
out
dec
stos
scas
shl
jecxz
or
rcl
sub
dec
fisttp
mov
pop
xchg
cmp
xchg
xchg
and
imul
inc
pop
sbb
xchg
and
push
pop
rcl
mov
mov
call
dec
xchg
int
cli
das
cli
je
stos
cli
sub
test
arpl
sub
adc
ins
retf
sbb
sub
std
and
imul
pop
add
aas
cmp
cdq
dec
aaa
pop
and
sub
jmp
xchg
in
sub
fadd
(bad)
adc
std
retf
jnp
ja
sub
adc
iret
push
mov
and
pusha
fldcw
cs
and
retf
(bad)
fist
or
sbb
push
jno
inc
in
out
aaa
lahf
dec
in
aam
shl
ss
or
es
xor
jl
sub
sub
fist
pop
mov
pop
jb
inc
push
add
outs
inc
fwait
dec
push
adc
and
pop
cld
and
mov
(bad)
in
pop
mov
mov
mov
pop
xchg
add
adc
int
into
sbb
push
pop
sti
lahf
fld
in
enter
xor
jbe
xchg
mov
jne
fxch
dec
jne
mov
cli
pop
inc
xor
int
fld
popf
cmp
push
mov
das
pop
ds
es
pop
sub
adc
addr16
ins
stc
fbld
jecxz
mov
dec
lahf
add
stos
push
ins
inc
ja
add
cmp
pop
leave
mov
or
mov
mov
test
sbb
pusha
test
rol
lahf
inc
(bad)
jns
jge
push
jne
jmp
pop
arpl
je
xchg
jmp
xor
push
mov
mov
ror
ror
movs
sbb
cmps
jg
stc
xchg
sub
bound
push
repnz
or
das
mov
xchg
jg
mov
(bad)
and
repz
(bad)
mov
sub
push
dec
xor
mov
push
jno
cs
sub
je
inc
ja
or
push
or
fisubr
cmp
xor
lahf
repnz
movs
outs
push
daa
int
jl
scas
mov
imul
das
fwait
cs
xor
loopne
shl
in
adc
cs
dec
xchg
rcr
mov
push
call
sub
lock
dec
pop
fwait
(bad)
fmul
adc
mov
test
mov
sahf
fdivr
ret
scas
xchg
repz
hlt
jnp
adc
xchg
inc
push
dec
cmp
out
cmp
cdq
daa
out
jo
aad
and
add
call
lahf
sar
jge
ja
in
sahf
or
push
and
xlat
popf
enter
pop
retf
xlat
int
adc
movs
add
jp
jp
sbb
inc
sbb
xor
pop
clc
out
iret
add
(bad)
fdiv
sub
es
sbb
fs
call
jl
add
or
mov
mov
cwde
and
idiv
retf
pusha
adc
xor
jp
out
ds
and
std
retf
inc
pop
popa
adc
imul
push
push
ror
mov
ins
jl
popf
cmp
ret
and
mov
mov
popf
pop
bound
fs
ffreep
add
out
arpl
cmp
mov
aaa
adc
(bad)
cwde
mov
ja
popa
aaa
mov
outs
xchg
outs
mov
sub
movs
nop
jp
pusha
inc
aam
jecxz
adc
push
sub
ins
ror
add
push
hlt
pop
movs
das
mov
cdq
push
js
sub
sub
jmp
inc
js
arpl
cmp
add
and
xchg
xchg
or
lea
lea
fadd
in
and
hlt
mov
out
cli
aad
aas
push
xor
cld
imul
cmp
push
out
ins
adc
sbb
sbb
das
outs
(bad)
lds
outs
push
fadd
jl
mov
std
dec
dec
inc
lock
ins
aaa
pop
jnp
sub
sub
sub
jmp
shl
mov
imul
popa
and
retf
add
push
cmc
push
outs
test
jge
arpl
sbb
pop
and
jno
nop
dec
sub
jp
dec
popa
jbe
lahf
addr16
and
call
mov
mov
(bad)
jo
hlt
xchg
in
aas
fwait
sub
pop
cli
daa
ja
fstp
and
add
lea
(bad)
mov
fnstsw
mov
es
jns
sub
adc
addr16
cmp
scas
add
jmp
push
dec
adc
ret
mov
movs
mov
not
test
lea
loopne
pop
iret
sbb
ins
xchg
and
mov
loop
(bad)
mov
(bad)
in
jnp
out
int
daa
mov
adc
loope
adc
imul
mov
lods
call
mov
int
call
dec
xchg
loopne
sub
pop
fs
sahf
and
jno
cmp
cli
outs
sub
fucomi
push
(bad)
xchg
add
adc
les
div
aas
dec
mov
pop
xchg
das
push
scas
ret
nop
fwait
ror
lods
mov
sbb
push
int
sbb
cld
cmc
and
sub
sahf
int
push
dec
mov
jbe
cmp
jg
sub
jmp
mov
adc
jnp
jmp
ds
dec
leave
or
test
dec
daa
or
adc
js
das
outs
leave
mov
mov
adc
inc
xor
adc
inc
mov
mov
pushf
xchg
jg
js
cmps
mov
in
mov
sbb
scas
retf
lds
setae
cli
sbb
xchg
or
ud1
lods
pop
xlat
daa
and
mov
stos
sbb
add
test
int
sbb
cli
out
jp
clc
hlt
ins
fsubr
idiv
jb
mov
js
jmp
xchg
or
cmp
ja
jl
and
nop
pop
(bad)
xlat
inc
dec
xchg
xchg
and
push
lahf
sbb
and
xchg
popa
rol
jb
retf
jecxz
repnz
xor
(bad)
loopne
pop
inc
cmp
adc
mov
xchg
inc
in
test
clc
or
and
pop
test
jns
dec
cmp
sub
and
inc
xchg
clc
je
and
nop
push
popf
lods
push
call
mov
adc
shl
fidiv
add
push
mov
or
push
push
(bad)
mov
pop
sub
pop
ficom
xchg
data16
xchg
aam
lods
and
jnp
push
sti
fcomp
adc
dec
dec
call
retf
jbe
je
mov
push
xor
repz
jmp
fisttp
idiv
jle
dec
mov
or
icebp
retf
popa
cmps
dec
and
jae
push
and
cmp
jmp
dec
push
cmps
push
int
inc
pop
int3
add
lods
sahf
xor
push
mov
mov
push
mov
ret
out
jl
mov
add
mov
out
enter
dec
inc
arpl
pushf
or
mov
xchg
clc
fimul
cmps
je
xlat
cmp
xchg
imul
fnsave
xchg
add
ins
mov
jge
call
mov
mov
dec
adc
inc
sbb
cmp
js
loop
mov
push
xchg
sub
(bad)
out
sbb
dec
in
push
setno
pop
add
xchg
push
loop
push
xor
push
xor
mov
aas
xor
sbb
loopne
and
lods
cmc
mov
cld
mov
in
or
hlt
and
(bad)
jp
push
fsubr
xor
jo
lock
outs
in
push
xchg
dec
popa
cmp
fisttp
cld
cwde
and
cdq
xlat
mov
push
add
cmp
sti
jle
bound
inc
add
ret
pop
lahf
and
jmp
retf
cmp
mov
mov
mov
das
jp
sbb
dec
in
and
ret
mov
inc
lods
cmc
sar
or
popf
jns
sub
adc
xor
shl
js
and
dec
fisubr
dec
sub
repz
push
jmp
js
xchg
mov
ret
test
pop
scas
ins
adc
or
cli
or
test
cmc
add
mov
sub
scas
xor
pop
sbb
pop
jmp
add
xchg
daa
jl
or
or
daa
pop
xor
mov
dec
sbb
dec
inc
cmp
sub
xchg
hlt
mov
mov
lea
jg
dec
shl
out
jb
sbb
stc
push
and
ins
xchg
jmp
outs
xor
jns
loope
loop
jg
arpl
cmps
popf
ja
pop
push
mov
mov
aas
stc
out
push
xchg
adc
or
call
add
cmp
nop
push
(bad)
jecxz
scas
gs
or
in
jp
(bad)
cmc
mov
push
cwde
dec
mov
cmp
xchg
sti
xchg
or
push
cmps
jmp
pop
jns
es
outs
dec
dec
clc
dec
push
call
imul
js
xor
push
mov
mov
cmps
inc
add
inc
or
jl
arpl
jae
ss
mov
loope
cmp
jnp
ins
push
and
outs
push
xlat
mov
add
retf
scas
mov
push
iret
mov
(bad)
shl
jge
xchg
addr16
push
test
mov
out
sub
out
aaa
lahf
add
mov
cs
das
stos
mov
inc
cli
sbb
jno
pop
(bad)
mov
(bad)
icebp
div
xor
jb
push
dec
mov
iret
fimul
les
jbe
test
cmovns
ret
add
popf
test
sub
lock
sbb
xlat
ins
repnz
in
xor
jmp
loope
sbb
xchg
es
loopne
and
(bad)
push
sahf
sbb
jp
xor
xchg
lock
pop
in
xchg
add
fstp
jbe
push
pop
imul
cwde
arpl
loopne
sbb
add
ret
pop
jb
xor
pop
out
sub
aam
push
popa
out
push
das
inc
fisttp
fcmovnbe
icebp
adc
pop
adc
(bad)
xor
mov
pop
add
aas
into
fs
pop
mov
cmp
jmp
movs
push
leave
pop
jbe
bound
sbb
retf
movs
sub
imul
jae
push
nop
xchg
xchg
inc
xchg
je
mov
loope
push
pop
call
stos
and
shr
fwait
cwde
mov
mov
jo
sub
fdiv
adc
jae
jb
pop
out
in
jns
(bad)
enter
in
std
daa
push
xor
pop
push
pusha
sbb
sbb
or
mov
int3
repz
jns
xchg
nop
or
sub
arpl
xchg
rcl
ds
mov
fst
dec
push
push
and
sbb
xchg
push
add
fstp
retf
or
sub
cmps
rcl
imul
mov
jmp
pusha
push
stc
cmps
dec
xchg
push
sbb
ins
outs
es
jmp
int
rcr
xlat
mov
adc
push
mov
push
stc
loopne
rcl
aam
jbe
mov
xchg
and
ja
movs
dec
adc
out
cs
mov
lods
shl
jmp
int3
pop
push
xchg
xchg
mov
ins
mov
popf
in
xchg
stos
add
push
xor
xor
inc
(bad)
fsub
mov
sub
jns
outs
jbe
add
setbe
mov
inc
in
mov
fld
(bad)
je
sbb
pop
data16
cmp
imul
inc
call
and
push
dec
das
push
pushf
dec
icebp
lods
adc
jl
or
ret
inc
mov
ja
or
shl
das
in
repnz
stc
xor
mov
mov
and
repnz
xchg
bound
pop
push
fiadd
pop
xchg
rcr
jne
or
push
push
jb
add
stos
out
in
cmp
test
in
lds
mov
and
push
ficom
mov
ret
test
push
mov
sbb
mov
push
enter
xlat
xchg
xlat
inc
cwde
or
pushf
mov
fmul
mov
cmp
out
jns
lock
rcl
sbb
ficom
or
xchg
stos
inc
jmp
mov
push
or
retf
aad
popa
push
ret
push
test
push
dec
loope
or
or
stos
jae
mov
or
add
cdq
into
pop
jmp
push
shl
add
das
pop
(bad)
xchg
shr
sbb
mov
push
les
stos
inc
daa
mov
pop
xchg
test
mov
inc
xor
xchg
mov
icebp
das
out
cld
shl
rol
push
inc
mov
rol
retf
in
and
mov
jge
(bad)
popf
clc
sub
ds
out
mov
inc
psrad
and
fwait
jp
daa
into
nop
mov
push
pop
xchg
push
mov
add
test
cld
fld
fwait
int3
cmp
sub
loope
inc
movs
shr
aas
sbb
lods
sahf
into
pop
sbb
adc
and
sbb
sub
mov
pop
sahf
cmp
ret
fninit
and
in
out
cmps
dec
popf
fimul
(bad)
iret
fisubr
inc
jne
(bad)
jg
loope
push
jbe
(bad)
arpl
xchg
lea
mov
add
adc
jle
ret
xor
cmp
test
sub
mov
xor
inc
popa
cmp
jp
cmp
mov
data16
mov
cli
add
rcr
fidivr
loope
push
dec
cmps
ds
jb
push
mov
jno
fnsave
xor
(bad)
jnp
xchg
adc
jle
inc
pop
cmp
push
fisttp
call
or
cmp
aam
inc
inc
pop
popa
mov
or
dec
icebp
(bad)
lea
adc
xchg
lea
xchg
jmp
iret
or
data16
jg
and
adc
pop
push
sbb
mov
mov
lods
rcr
lea
cmps
lods
push
adc
xchg
and
in
jns
mov
jg
mov
mov
dec
int3
stos
and
jns
cmp
jb
pop
push
adc
(bad)
adc
js
push
mov
pop
jbe
mov
(bad)
xor
loopne
shr
sbb
daa
fwait
cmp
mov
and
add
(bad)
repnz
mov
and
pop
aad
das
and
fld
sub
test
in
stos
push
cmps
pusha
add
add
fld
ror
movs
jmp
pop
fist
movs
cdq
ficomp
xchg
loop
stos
into
ror
xchg
aas
and
scas
sbb
loope
adc
and
adc
inc
adc
popf
icebp
or
out
ss
vfmsubadd132ps
dec
inc
dec
adc
dec
mov
add
in
data16
test
push
outs
xor
sub
pop
xchg
or
dec
call
pop
sub
std
pop
fwait
cmp
lods
or
sbb
sbb
inc
sub
mov
jmp
data16
lahf
sysret
int3
jmp
dec
daa
ret
pop
(bad)
cs
xor
aam
fucom
sbb
or
inc
arpl
dec
fadd
jmp
out
xlat
inc
mov
aas
and
add
shr
sbb
or
rcl
clc
pop
or
mov
sbb
and
inc
jecxz
mov
push
push
addr16
into
jae
sbb
jmp
fsubrp
pop
jnp
add
and
push
push
dec
inc
call
xchg
popa
dec
or
push
mov
call
cmps
ja
lock
mov
(bad)
retf
sbb
fcmovne
mov
dec
sbb
mov
adc
xchg
lods
fwait
cs
and
xor
dec
dec
test
adc
(bad)
pop
mov
push
test
xchg
pop
pop
or
push
or
mov
xchg
sbb
cmps
std
or
cmp
sub
push
xchg
or
push
sub
or
jecxz
adc
clc
arpl
cwde
fmul
fwait
sub
push
sub
(bad)
out
imul
mov
test
fiadd
inc
inc
xchg
or
jmp
scas
movs
das
int3
mov
aas
pavgw
jb
jmp
xchg
jge
dec
jge
cmps
jnp
into
mov
fistp
ins
ins
loop
mov
imul
jb
popf
mov
fs
add
ins
jge
sbb
(bad)
(bad)
mov
ins
xchg
sbb
xor
hlt
sbb
mov
repnz
loope
aam
inc
rcr
hlt
shl
inc
shl
and
hlt
leave
jbe
push
jbe
fistp
pop
sar
xchg
std
fs
xchg
loopne
sbb
add
ja
add
sub
mov
shl
xchg
mov
adc
iret
mov
mov
push
popf
cs
and
inc
pop
call
mov
jge
inc
sub
jbe
pop
call
cmc
imul
jns
(bad)
stos
sub
xchg
iret
or
int3
fidivr
and
dec
adc
dec
jo
ficomp
jl
add
addr16
mov
lods
shl
push
stos
sub
inc
mov
hlt
or
leave
sahf
retf
mov
adc
ret
inc
ss
inc
xor
aam
ret
mov
add
jp
or
or
adc
(bad)
mov
mov
jns
jp
inc
pop
pop
stc
lods
lods
pop
ficomp
xor
ss
pop
adc
mov
sbb
adc
scas
jge
xor
jp
and
(bad)
ja
arpl
call
cld
sahf
hlt
pop
stos
test
and
cli
and
sub
loop
hlt
mov
xor
fsub
ret
fst
mov
retf
inc
je
jnp
jl
jecxz
jl
mov
dec
lea
aam
ins
pop
jmp
jnp
test
(bad)
mov
stc
mov
mov
adc
sbb
pop
call
sbb
mov
push
xor
xor
int3
push
mov
adc
add
and
add
mov
push
push
nop
jmp
jle
xchg
push
sbb
sbb
imul
cmp
jl
rcr
or
call
and
or
pop
ja
pop
pushf
hlt
dec
repz
ret
and
adc
or
xor
or
jecxz
dec
pop
fiadd
mov
fcomp
cmp
xchg
mov
dec
or
jecxz
sbb
repnz
mov
inc
fstp
mov
stos
mov
stos
sub
push
sub
aad
loope
mov
push
test
mov
mov
scas
inc
sub
stos
sub
mov
mov
pop
hlt
xchg
movs
adc
add
fiadd
push
or
sub
adc
daa
lock
inc
adc
movs
mov
and
(bad)
fistp
mov
inc
mov
mov
jg
mov
fadd
mov
out
pop
das
mov
sub
mov
daa
aas
or
inc
or
sti
and
fst
(bad)
sub
inc
xchg
mov
mov
sub
fbstp
fistp
mov
jl
cmp
jne
dec
repnz
test
cdq
and
inc
pop
push
sub
cmp
inc
test
and
mov
mov
ss
or
test
xchg
mov
xchg
outs
ret
icebp
sub
adc
cmp
dec
aas
mov
cmp
idiv
enter
add
push
and
in
sbb
and
lds
inc
jno
outs
rol
pop
pop
imul
adc
cmp
jne
outs
xchg
loopne
push
mov
out
cs
ja
sar
sbb
cmp
test
imul
repnz
cmp
syscall
enter
cmp
xchg
dec
inc
leave
xrelease
shl
sbb
cmps
scas
movs
ins
jnp
data16
xor
int
leave
mov
js
jns
push
adc
mov
and
push
stos
leave
aam
mov
fsub
in
icebp
mov
adc
test
aad
in
in
fsubp
mov
mov
sub
in
dec
xor
add
or
adc
lods
cmp
xor
jmp
jmp
jns
ret
mov
dec
mov
mov
into
mov
pushf
mov
call
push
es
inc
cmp
xchg
out
pop
mov
popa
(bad)
xor
fld
hlt
enter
adc
adc
in
lods
les
and
mov
push
or
or
movs
or
bound
inc
sub
adc
idiv
test
fscale
jns
test
push
add
cdq
test
xchg
adc
test
adc
push
pop
xchg
add
pop
mov
xchg
fdivr
fst
sub
or
hlt
cmp
jl
cld
(bad)
in
sub
push
movs
pushf
pop
xor
dec
test
pop
or
jbe
pop
je
stc
push
mov
jge
addr16
xchg
pop
and
cmps
test
pop
sbb
push
pop
mov
xor
ret
sbb
adc
push
pop
xor
scas
outs
ret
out
xchg
mov
mov
sbb
sub
cmps
cmp
loop
mov
sub
test
add
cmc
mov
out
enter
cmp
shr
rol
dec
mov
dec
in
je
std
cmp
(bad)
pop
push
mov
ret
or
sti
rcr
jnp
inc
and
lahf
mov
inc
test
dec
jae
pop
fcomp
sahf
xlat
or
cmp
scas
aaa
cmp
lea
out
shl
int
aam
mov
dec
clc
icebp
fs
jno
popf
ja
dec
fcom
sti
mov
push
outs
ffreep
mov
ret
mov
xchg
popa
dec
inc
add
xor
pop
loop
jne
aam
je
lahf
adc
xor
popf
xchg
pop
inc
outs
jle
mov
es
(bad)
xchg
and
int
pop
pop
push
jbe
aaa
push
cmp
imul
fld
pop
pop
add
and
test
mov
ins
jb
test
cmps
pop
mov
ins
jno
adc
imul
cmp
jp
(bad)
imul
jb
jcxz
sbb
loop
adc
cmp
or
inc
cmps
add
cmp
cmp
mov
jle
icebp
mov
push
cmp
adc
rcl
dec
ja
push
lods
mov
arpl
sub
jecxz
out
repnz
sub
in
into
iret
gs
ja
mov
(bad)
dec
fmul
mov
das
push
ja
push
xchg
leave
xchg
ret
popf
adc
adc
(bad)
test
jo
cmps
lds
fst
dec
stc
aaa
sahf
clc
outs
loopne
vmaxps
lahf
mov
pshufw
popf
fstp
stos
and
ds
inc
cmp
xchg
sbb
xor
outs
jmp
clc
adc
inc
inc
(bad)
mov
mov
xor
(bad)
les
lods
pop
sub
mov
leave
call
jno
add
and
loopne
arpl
adc
shr
icebp
ss
popa
pop
sbb
fmul
test
loopne
jb
sar
loop
ins
pop
xor
dec
inc
popf
sub
call
loop
mov
shl
call
or
les
pushf
add
jnp
or
int
bound
enter
test
add
inc
stos
(bad)
clc
jmp
scas
div
mov
rcr
dec
outs
pop
mov
mov
adc
mov
cmp
js
sar
ret
push
out
imul
pusha
add
ret
(bad)
(bad)
fisub
out
dec
inc
xchg
jmp
mov
test
fmul
arpl
fnstenv
dec
jbe
mov
test
lahf
xchg
xor
scas
fcomp
repnz
sub
mov
bound
inc
enter
pop
inc
jnp
cmc
ins
inc
aam
test
mov
adc
or
call
push
lock
cmovno
imul
mov
mov
inc
int
sub
jnp
cs
dec
and
movs
push
adc
xor
mov
sbb
inc
push
push
ins
shr
adc
adc
paddw
pop
cmps
jns
loopne
or
gs
ret
jle
call
sub
push
push
pop
add
pop
ret
ins
dec
jnp
clc
nop
mov
push
xor
push
ret
repz
nop
cmc
pop
sub
jnp
pop
mov
pusha
pop
sbb
or
xor
cs
mov
call
xchg
jl
repnz
cdq
cmp
dec
aam
cli
stos
jp
outs
test
(bad)
mov
in
mov
outs
out
test
in
xor
mov
aaa
loopne
sbb
adc
xchg
outs
mov
jg
jno
js
outs
xchg
mul
push
sub
add
mov
jp
jns
cmp
test
push
sbb
ins
int3
int3
xor
cwde
mov
mov
or
sbb
cmc
adc
dec
jo
and
mov
retf
xchg
out
mov
test
je
fsub
shr
xor
cdq
adc
stos
mov
outs
popf
xor
xor
sub
retf
pop
lods
push
mov
ds
int
add
movs
inc
dec
push
push
retf
not
imul
mov
fdiv
aas
push
mov
aaa
xchg
dec
dec
test
adc
dec
pop
dec
push
pop
(bad)
pop
adc
retf
add
adc
xor
add
mov
je
daa
xor
sbb
push
add
adc
cmps
pop
and
sub
xchg
test
add
scas
gs
jp
jge
inc
cli
mov
in
jg
add
cmp
cmp
in
xor
xchg
and
xchg
leave
jmp
retf
mov
(bad)
daa
mov
fild
mov
mov
fadd
adc
inc
ss
aad
std
sahf
popa
inc
pop
xchg
jp
popa
sub
shr
mov
add
mov
mov
mov
lds
cmp
std
dec
inc
push
icebp
inc
inc
aaa
stc
add
stos
xchg
pop
sbb
xchg
inc
jg
jp
(bad)
jno
jecxz
std
(bad)
nop
and
bswap
in
loope
arpl
dec
push
xor
jo
mov
ss
pop
loop
mov
nop
inc
imul
or
ficomp
sub
das
fwait
ret
mov
push
xchg
push
xor
sub
lods
xchg
sub
sbb
call
mov
sub
fisttp
rcr
fdivr
mov
mov
cmp
jg
mov
ja
mov
mov
mov
jbe
ins
xchg
add
and
cmp
daa
push
mov
adc
ficomp
(bad)
addr16
fs
cwde
leave
cmp
je
and
adc
mov
bound
mov
stos
sti
icebp
fild
ret
fistp
mov
movs
or
sbb
jle
ret
dec
jle
pop
in
mov
jmp
stc
push
mov
adc
pop
jl
mov
dec
cmp
movs
xchg
shl
fs
inc
and
inc
stc
jecxz
jge
mov
mov
lahf
xchg
xchg
out
or
jno
push
push
into
mov
mov
out
jno
push
ins
clc
xchg
cmp
xor
sbb
jmp
in
in
lock
jmp
js
icebp
mov
pop
ficomp
dec
jmp
loopne
sub
cmp
mov
aaa
rcl
mov
cs
sub
loopne
add
pop
sbb
pop
das
jo
inc
fmul
xchg
sbb
test
pop
sbb
mov
loop
stc
push
xchg
mov
inc
cld
fidivr
out
fldcw
(bad)
jb
mov
inc
fimul
fldenv
inc
rcl
dec
ficomp
and
call
mov
retf
jmp
ret
xor
mov
pusha
pmulhw
movs
loopne
jp
push
dec
sub
sbb
rcr
dec
ins
xchg
call
jne
mov
retf
mov
mov
aad
xor
out
in
xor
sbb
fdivr
repz
cmc
shr
(bad)
fdivr
and
mov
jmp
test
imul
inc
mov
adc
or
es
sbb
outs
sub
data16
push
ja
retf
out
leave
loop
xchg
jne
enter
mov
int
rol
mov
cli
add
adc
push
mov
jmp
and
js
ret
pop
ret
or
push
xlat
add
push
add
mov
sbb
pop
les
xchg
dec
sub
mov
sub
xor
in
fs
ins
sar
xchg
sub
stc
pop
cmp
imul
mov
mov
add
sub
jge
retf
ds
pop
repnz
cmc
xchg
js
push
out
mov
sub
fmul
xchg
xor
adc
hlt
cmp
movs
inc
fdivr
cld
stos
out
jmp
aad
push
imul
mov
xor
mov
xor
dec
xchg
xchg
sti
sbb
sub
or
and
or
mov
stos
push
xchg
adc
and
movs
loope
call
js
cs
adc
retf
mov
mov
adc
mov
es
xchg
add
fucomi
sub
xchg
cli
xchg
ret
mov
jno
or
les
dec
or
gs
sub
adc
enter
jb
add
mov
sub
mov
outs
outs
in
call
jb
jo
dec
retf
sub
mov
bound
sub
xchg
shl
movs
iret
or
test
jecxz
cs
das
pop
push
push
(bad)
aaa
adc
xchg
imul
cld
fstp
sub
pop
repnz
sub
nop
sub
inc
rcl
dec
fdiv
pop
enter
or
mov
ror
addr16
and
xlat
push
jns
or
outs
cmp
mov
fnstsw
jmp
push
in
and
fnstcw
mov
or
cmp
push
and
adc
cs
enter
daa
sti
scas
neg
(bad)
(bad)
mov
jns
dec
jno
shr
js
in
retf
sub
js
pop
mov
sti
push
or
xchg
adc
imul
int3
xor
out
push
and
mul
dec
jne
inc
adc
jg
inc
stc
loop
push
movs
stos
int3
or
xor
movs
dec
jl
cld
neg
shr
mov
fdiv
hlt
mov
pop
cmp
shl
xlat
ficom
xchg
or
enter
sahf
jp
sub
add
push
sub
loop
xchg
and
shl
ret
bound
dec
mov
pop
adc
inc
sub
(bad)
push
mov
out
loop
xchg
xor
cmp
sub
mov
out
clc
loopne
out
push
xlat
inc
cmp
xchg
call
dec
mov
sbb
mov
call
sti
movs
cmp
dec
pop
add
inc
fcom
mov
into
cmp
arpl
es
push
dec
repnz
cs
sbb
gs
mov
pop
or
or
or
sbb
mov
iret
ja
inc
repz
sbb
mov
retf
fnstenv
mov
imul
jmp
mov
jno
std
iret
mov
lea
mov
ins
sub
inc
mov
adc
push
adc
les
inc
jnp
add
rcl
loope
push
adc
icebp
add
add
test
sub
mov
ret
adc
test
les
xor
xchg
shr
mov
sar
mov
inc
inc
xor
sub
cmp
mov
rcl
xchg
out
xor
int
jl
xchg
repz
sahf
mov
aam
call
(bad)
aaa
in
int3
outs
ror
cwde
imul
xchg
inc
arpl
shr
rcr
mov
dec
mov
ja
out
pand
rcl
test
mov
xchg
movs
outs
(bad)
pushf
mov
test
aam
retf
jbe
xor
aas
in
pop
aaa
sahf
test
dec
pop
ret
gs
outs
adc
sti
cld
jo
lahf
aas
mov
movs
sub
cmc
pop
(bad)
dec
addr16
mov
outs
out
cmps
jg
hlt
push
jo
mov
sbb
ud0
dec
mov
adc
pop
inc
call
push
movs
sbb
mov
mov
gs
shl
add
aaa
mov
cwde
inc
mov
mov
aam
add
retf
ins
lds
sbb
pop
add
fs
aas
fdivr
ds
clc
test
push
lds
add
stos
enter
push
enter
test
test
sbb
push
add
mov
mov
lea
add
(bad)
jl
push
(bad)
or
inc
jb
mov
out
add
inc
jg
gs
xor
pop
loop
pop
fcmove
xor
sti
std
push
mov
mov
lock
cld
inc
sub
inc
popa
retf
mov
mov
aas
in
fs
xor
das
add
lock
push
cmp
pop
jle
or
xor
fcomp
cs
call
enter
ret
xor
in
pop
mov
mov
and
sti
cmps
xor
jno
mov
xchg
jns
icebp
std
sbb
call
je
xchg
out
je
and
mov
in
lds
pop
inc
adc
mov
sbb
pop
in
dec
(bad)
sbb
adc
retf
das
pop
jne
adc
cli
lea
scas
popf
mov
inc
pusha
iret
iret
mov
imul
div
out
and
mov
loope
sbb
cmp
in
jae
mov
push
sbb
(bad)
mov
mov
popa
jp
push
ins
hlt
xchg
jge
not
mov
pop
mov
clc
retf
xchg
and
push
stos
out
jmp
outs
fistp
jecxz
gs
popf
mov
xor
inc
jmp
frstor
adc
or
mov
xchg
dec
xchg
mov
xchg
dec
fistp
scas
je
test
pop
pushf
sbb
test
mov
mov
xor
sbb
jb
mov
push
fiadd
fild
movs
xchg
out
mov
inc
bound
push
adc
and
jecxz
mov
cwde
popf
fs
jmp
mov
mov
int
add
cmp
stos
add
loop
ret
mov
sub
scas
mov
xor
popa
arpl
outs
push
icebp
outs
push
sti
push
and
pop
iret
neg
cmp
cwde
lea
fnstenv
scas
push
call
(bad)
imul
out
scas
inc
ins
loop
mov
test
vorps
sar
pop
mul
leave
mov
(bad)
pop
cmps
cli
clc
sahf
xchg
outs
inc
lods
push
(bad)
sbb
imul
fnsave
sub
xchg
fist
clc
mov
mov
ins
out
sbb
pop
jb
cmc
xchg
mov
stos
and
jo
cmp
mov
lods
xchg
imul
hlt
das
jbe
ss
mov
sub
add
dec
sub
aad
adc
sbb
mov
and
or
jmp
inc
sub
mov
add
jg
or
fdiv
ds
test
outs
stos
pop
sub
dec
(bad)
or
jmp
push
inc
and
mov
mov
sbb
aas
inc
ins
int
lods
lods
outs
push
xor
or
ins
out
cmp
jmp
and
xchg
jne
add
sub
dec
and
repnz
jae
test
int
xor
out
pop
sub
retf
mov
gs
cld
cmp
jno
push
push
and
jae
aam
inc
dec
test
pop
or
push
mov
into
test
cwde
test
movs
add
das
cmps
mov
arpl
into
pop
adc
dec
cmp
sub
scas
leave
mov
push
or
xchg
lods
ins
push
pushf
stos
cmps
lahf
in
push
lea
psubq
jb
push
rol
ficom
mov
sub
pop
inc
inc
jl
(bad)
pop
add
adc
iret
(bad)
xor
mov
push
jmp
xchg
mov
(bad)
aaa
dec
sbb
mov
aaa
int
jne
dec
dec
xlat
inc
mov
ds
das
push
movs
fwait
loopne
repz
leave
je
fidiv
and
mov
adc
mov
outs
popf
les
push
ret
adc
mov
loope
or
adc
xchg
push
dec
repnz
out
imul
scas
call
xor
out
das
mov
cmp
push
imul
stc
ins
cmp
call
in
mov
mov
mov
pop
retf
shl
movs
call
sahf
push
retf
jo
adc
stc
(bad)
fisubr
jae
pop
sub
dec
faddp
hlt
mov
inc
xor
aam
loop
retf
dec
shrd
xor
sti
inc
xor
retf
lahf
inc
dec
sub
mov
mov
mov
inc
sahf
xlat
test
or
lahf
sti
inc
xchg
in
fisubr
xchg
aam
pusha
xlat
(bad)
mov
lea
idiv
loope
dec
push
cmp
enter
and
fisub
loop
leave
cs
retf
and
dec
into
std
neg
push
mov
adc
repnz
ror
dec
test
cmp
lahf
xchg
push
pop
dec
cmp
mov
in
inc
movs
(bad)
or
in
dec
cli
and
sbb
push
xchg
mov
pop
repnz
sub
add
out
loopne
xor
imul
push
adc
and
(bad)
adc
jb
inc
dec
dec
bndldx
add
adc
mov
adc
pop
ret
inc
pusha
fs
std
mov
cmc
mov
retf
inc
inc
xchg
loopne
xchg
movs
mov
push
in
clc
or
or
pop
mov
inc
(bad)
or
adc
stos
shr
dec
push
xchg
in
xor
ror
imul
in
clc
pop
inc
pop
ret
mov
mov
sub
aaa
pop
dec
jecxz
push
cmp
in
mov
add
mov
rcr
pop
imul
xchg
push
div
or
sub
je
aam
mov
movs
push
and
fsub
inc
inc
mov
dec
out
cmp
hlt
js
sub
and
pop
mov
inc
push
pop
lods
inc
aad
push
iret
jb
push
lahf
mov
inc
dec
mov
and
pop
cmp
jle
repnz
mov
mov
mov
cwde
clc
cld
xchg
push
pop
xor
daa
pop
rol
cmc
pop
sub
ret
xchg
shl
mov
mov
cmp
(bad)
jno
push
xchg
dec
pop
add
cmp
sbb
inc
jmp
xor
add
cs
inc
sub
je
push
mov
retf
pop
push
imul
pop
ds
add
iret
hlt
lds
pop
cmp
xor
push
adc
ret
in
les
enter
ret
inc
pop
adc
test
add
inc
cmp
pop
cmp
lea
jp
test
(bad)
aam
pop
cli
jp
fistp
push
xchg
mov
scas
cmp
iret
and
lahf
repnz
fistp
hlt
mov
xchg
movs
cmc
cmp
neg
sbb
xchg
sbb
or
jmp
pop
lea
lods
xlat
push
retf
cmp
add
not
retf
arpl
out
sbb
push
and
scas
dec
add
inc
sar
add
cli
dec
jmp
adc
sbb
pop
lods
push
sub
sbb
dec
jp
push
stos
push
jp
inc
dec
aas
and
mov
adc
jbe
test
inc
idiv
add
pop
inc
mov
jl
shr
sub
retf
pop
sub
mov
mov
dec
add
mov
mov
iret
jge
cmc
mov
add
mov
shr
rcr
call
mov
(bad)
push
cmp
dec
loop
adc
icebp
sub
aaa
pop
(bad)
xchg
push
and
shl
jg
sbb
out
int
call
popf
sub
or
push
jne
mov
pop
xor
push
outs
gs
or
movs
lahf
(bad)
sbb
mov
add
repz
fsubr
ja
xor
or
xchg
dec
cld
arpl
sbb
add
mov
lods
dec
mov
ret
inc
xchg
inc
add
or
loop
div
int
pop
fidivr
fistp
and
mov
sbb
movs
push
xchg
push
push
dec
xor
scas
mov
pop
sbb
sar
inc
add
retf
cs
mov
mov
popf
mov
enter
fmul
sub
nop
lods
movs
xchg
mov
jmp
xor
neg
retf
push
sahf
cmp
bound
xor
fwait
cmc
test
jno
popf
ss
leave
or
ins
test
std
push
cld
mov
and
into
cdq
mul
mov
dec
mov
pop
add
xor
pop
out
sbb
push
lea
dec
or
or
(bad)
cmp
outs
lods
push
sbb
ret
mov
nop
lea
dec
lahf
sbb
out
mov
sahf
mov
dec
inc
ret
pop
es
je
cld
fild
test
out
mov
adc
arpl
loope
jnp
test
call
mov
int3
(bad)
out
rcr
addr16
int
cmp
push
mov
and
cld
test
imul
mov
leave
inc
inc
push
mov
ds
mul
retf
xchg
sbb
xchg
arpl
mov
inc
jle
je
call
adc
shl
sbb
push
es
cmp
mov
es
ror
clc
xchg
jo
mov
dec
out
xchg
pop
imul
dec
pop
mov
lds
and
aaa
imul
loopne
shr
jne
xchg
inc
sahf
pop
scas
aaa
fwait
lock
mov
(bad)
xchg
sub
xchg
mov
scas
dec
test
sbb
outs
and
aas
test
outs
out
bound
je
lock
das
push
retf
jnp
fcomp
enter
fnstenv
mov
call
mov
ret
cmp
adc
cs
dec
mov
push
shr
or
sub
test
mov
nop
daa
es
sbb
adc
sbb
mov
lahf
ds
jmp
inc
ins
fild
and
mov
popa
into
xor
in
sub
in
push
and
or
outs
loopne
cmp
xchg
ins
push
push
in
std
loopne
(bad)
imul
lods
mov
mov
adc
stc
sbb
gs
fcomp
fwait
pop
je
cld
push
mov
fwait
into
cmp
ret
imul
jle
dec
ror
inc
retf
adc
mov
repz
sub
les
mov
mov
mov
repz
inc
stc
icebp
daa
adc
add
out
xor
rcl
repnz
inc
pop
cmp
adc
ret
sbb
loop
mov
pop
jb
bnd
add
jno
add
sub
xchg
dec
test
sar
test
fdivr
mov
movs
lahf
add
(bad)
mov
and
mov
pop
daa
jle
stos
bound
mov
and
xor
inc
sub
std
and
push
jno
mov
shl
push
pop
out
push
rcr
test
pop
sbb
(bad)
cmp
dec
push
loop
nop
in
ins
mov
xor
movs
out
aas
fsubr
or
imul
scas
inc
push
jmp
movs
mov
test
mov
call
pop
or
inc
adc
inc
imul
sbb
pusha
(bad)
and
jns
dec
ret
dec
pop
cli
daa
int
bound
cmps
adc
aam
je
push
mov
in
inc
jno
cmps
and
or
xchg
pop
jae
pop
mov
dec
pop
xchg
add
add
lods
rcl
mov
inc
adc
faddp
nop
adc
cmp
cmp
xchg
call
in
add
test
sbb
loope
ret
pop
adc
cmp
mov
mov
mov
pop
daa
add
push
movs
shl
cmp
retf
in
test
cmp
stos
mov
in
cmc
xor
popf
jge
xchg
mov
pop
inc
pop
mov
cmp
ret
lea
ja
jmp
pop
clc
push
fistp
dec
(bad)
ffreep
pop
dec
push
mov
mov
arpl
jne
xchg
nop
or
cmp
add
test
add
ret
dec
cmp
sub
mov
call
ja
nop
lods
sbb
xor
pop
stos
or
popf
outs
cmp
test
push
imul
inc
jmp
inc
cmp
call
mov
sbb
mov
test
outs
sbb
or
mul
hlt
stc
fidivr
repnz
sahf
dec
lods
mov
outs
fnstcw
xor
mov
cmp
mov
xor
xor
ja
sbb
cld
shr
in
aaa
sahf
pusha
push
sti
fwait
(bad)
mov
imul
lods
push
fstp
xchg
and
xor
int3
out
movs
lea
outs
mov
jns
xchg
sbb
je
mov
dec
(bad)
mov
push
je
sbb
pop
push
popf
push
cmps
in
cmp
jb
cli
inc
rol
scas
es
and
es
and
sub
cmp
fst
bound
(bad)
aam
jne
jl
lods
pop
aaa
jg
je
lods
cmp
add
pop
popa
aaa
outs
pop
in
cmp
shr
pusha
clc
or
lock
lahf
mov
xchg
adc
ja
in
dec
cmps
es
sbb
das
mov
int
mov
hlt
push
scas
daa
mov
push
int
adc
ins
mov
(bad)
ret
mov
daa
(bad)
xchg
sbb
call
xchg
xor
push
or
or
xor
ds
push
in
je
push
enter
ds
bnd
push
dec
mov
sbb
cmp
aas
inc
and
mov
jl
mov
add
std
scas
jne
pop
push
adc
in
pop
clc
sbb
mov
loopne
loop
mov
ficom
fnstenv
aad
or
mov
mov
xor
retf
fistp
sahf
mov
mov
out
xchg
mov
and
div
push
jbe
pop
cwde
jecxz
cli
lods
call
enter
call
fwait
(bad)
fst
mov
in
sbb
pop
dec
test
xchg
sub
ins
xchg
mov
rcl
lea
and
ins
pop
dec
and
push
pop
(bad)
outs
test
popf
lea
es
adc
cmp
pop
das
xchg
dec
shl
sbb
dec
(bad)
dec
aad
xchg
mov
xor
int3
adc
mov
dec
adc
xor
sbb
or
stos
jnp
test
sub
test
mov
das
enter
cld
cmp
and
call
outs
movs
(bad)
sbb
adc
jo
jns
xchg
in
jecxz
aad
in
sbb
imul
aad
dec
fwait
sub
push
out
mov
fwait
not
(bad)
je
dec
es
and
cli
int3
pusha
lods
cmp
shr
xor
pop
jle
pop
pop
pop
lods
mov
jbe
and
cwde
push
sbb
push
add
cmp
int3
cmps
xchg
xor
sbb
lock
mov
int3
dec
fwait
pop
test
xchg
mov
retf
or
jmp
pop
dec
enter
pop
leave
push
ja
jns
fwait
push
es
or
push
push
xlat
cmp
out
cmp
aad
inc
out
sahf
push
jns
xor
jo
(bad)
ja
(bad)
retf
repz
push
inc
(bad)
shl
dec
ror
mov
aas
ret
sahf
adc
stos
mov
mov
out
movs
(bad)
adc
cmc
inc
pop
adc
imul
dec
ret
(bad)
div
jbe
enter
ret
sub
push
ret
out
mov
hlt
pop
jns
mov
adc
hlt
popa
out
(bad)
(bad)
bnd
mov
jae
sub
or
or
test
int
pop
(bad)
gs
jnp
gs
dec
xchg
inc
dec
and
jnp
add
push
jns
imul
dec
sahf
cmp
test
cld
es
or
out
sbb
jge
inc
in
retf
dec
mov
xchg
ja
sbb
(bad)
aas
pop
in
mov
pop
jno
ins
ins
ins
adc
inc
(bad)
pop
hlt
xor
jns
push
sub
stos
(bad)
cmp
adc
sub
push
mov
dec
not
add
ins
mov
inc
inc
push
and
push
iret
add
jb
push
sub
xor
sub
and
test
xor
xchg
push
mov
sbb
dec
mov
push
jmp
mov
loop
xabort
mov
dec
fistp
sub
in
sbb
jno
ins
add
lods
rcr
stc
push
sub
pop
sbb
jecxz
test
rcl
xchg
mov
test
mov
xor
dec
shl
add
or
popa
push
or
int3
cmps
fstp
mov
pushf
adc
pusha
sbb
imul
pop
mov
jl
sub
cmp
xchg
fcom
cs
mov
jo
pop
push
cmps
inc
mov
leave
cmps
dec
cmp
push
pop
ins
popf
jecxz
mov
je
pushf
and
scas
loope
inc
call
sbb
stc
and
ja
sub
aad
repz
mov
stos
mov
sub
push
mov
test
outs
mov
xor
and
fsub
sub
push
rol
adc
push
pop
pop
pop
mov
iret
mov
leave
lds
pop
xchg
cdq
and
cmp
pop
lods
inc
js
xchg
dec
test
mov
mov
cmp
or
or
and
leave
clc
mov
dec
pop
mul
or
test
mov
repnz
clc
add
xchg
or
pop
pop
sub
cmps
push
xor
jb
retf
push
pop
dec
cmp
jbe
imul
mov
lods
and
dec
dec
imul
out
arpl
mov
stos
adc
push
mov
dec
or
lods
cli
mov
xor
mov
loopne
jbe
mov
mov
sbb
rol
(bad)
into
cmc
jge
fbld
fcom
sub
icebp
xadd
outs
sub
mov
cmp
jo
xchg
pop
scas
je
(bad)
mov
push
xor
cwde
fadd
jmp
inc
mov
loope
rsqrtps
adc
lods
xchg
es
sub
inc
outs
retf
or
pop
and
jbe
scas
fcmovne
in
int
dec
mov
adc
cmc
popf
dec
mov
cdq
std
sub
ret
fwait
push
adc
xchg
dec
cli
(bad)
jge
lods
sub
ss
data16
or
lahf
jg
ins
cmp
test
sub
icebp
sub
out
pop
cdq
pop
add
je
nop
adc
adc
push
or
xchg
mov
add
sbb
jne
and
adc
xor
jbe
ror
adc
jno
adc
jecxz
(bad)
test
repz
and
cmp
and
mov
ret
jmp
xor
es
pop
mov
mov
cmp
pop
cmp
cmp
repnz
inc
out
not
sub
lds
movs
loopne
sbb
xchg
scas
outs
outs
and
stos
iret
xor
xor
int3
mov
xor
inc
inc
mov
and
push
pop
leave
fist
cmc
pop
mov
inc
call
pop
sbb
shl
pop
cmp
not
sbb
sub
or
retf
or
data16
nop
vaddps
fmulp
mov
int3
sub
xor
adc
sbb
shl
imul
bound
cmp
push
push
xchg
out
pop
movs
push
and
dec
xor
mov
cmp
jp
add
pop
leave
test
push
pushaw
int3
int3
(bad)
jecxz
mul
sub
mov
cli
jmp
jae
outs
aam
test
mov
fild
dec
mov
scas
stos
(bad)
mov
inc
pop
jo
test
push
mov
add
dec
test
inc
jmp
aaa
jae
mov
cwde
cmps
test
and
pop
fldenv
jnp
rcr
lods
cdq
lods
les
pusha
int
aam
mov
jo
xchg
xor
pop
pop
pusha
and
test
nop
xchg
pop
jecxz
adc
push
into
add
jbe
ins
lds
mov
sbb
sub
xor
inc
mov
cmp
push
iret
add
adc
adc
inc
pop
or
mov
mov
xlat
inc
pop
loopne
mov
iret
call
pop
pop
xchg
and
jge
es
or
div
adc
cdq
dec
sub
lods
retf
sbb
mov
pop
and
popa
pop
push
mov
outs
fdiv
push
iret
push
push
push
fimul
movs
xchg
outs
inc
pop
sbb
and
(bad)
repnz
(bad)
cmps
sub
xchg
and
add
pop
cdq
mov
adc
mov
retf
pop
sbb
xor
dec
clc
mov
scas
cmp
add
xchg
add
std
dec
retf
pop
sbb
sub
sub
push
adc
cli
cdq
sbb
inc
mov
cmp
sub
mov
lds
dec
sbb
add
ror
sti
lahf
mov
(bad)
sbb
inc
int3
lahf
dec
sub
mov
fwait
pop
(bad)
jno
daa
jecxz
sahf
cld
retf
inc
push
mov
repz
xchg
cmp
or
cli
sub
xchg
or
clc
jne
dec
push
dec
call
xchg
mov
stos
and
es
cwde
test
fdivr
mov
xlat
retf
test
cld
push
xor
arpl
aas
fstp
outs
sbb
xchg
popa
xchg
pop
xor
cli
push
jg
call
lds
sbb
cmp
aaa
fimul
adc
push
jno
add
sbb
sbb
enter
sub
addr16
fidivr
aas
(bad)
call
sbb
nop
das
imul
push
lock
inc
add
push
(bad)
cmp
jmp
inc
ja
jno
in
ins
xchg
sub
pusha
outs
jmp
and
inc
mul
sbb
leave
repz
jns
fcmovu
popa
push
movs
shr
mov
aaa
fistp
jle
les
xor
test
sub
hlt
cmp
or
push
jp
rcl
loop
push
pop
xchg
lds
mov
(bad)
into
sbb
mov
outs
inc
cmp
stc
mov
mov
adc
jns
imul
iret
repz
fcmovb
inc
xor
xlat
sub
shl
inc
push
test
jo
xchg
inc
div
movs
(bad)
inc
leave
pop
lea
test
cli
call
xor
(bad)
gs
stos
mov
imul
push
inc
and
loopne
clc
out
mov
sub
test
mov
popf
fwait
adc
sub
mov
cld
cmp
cmps
xor
and
push
xchg
push
dec
inc
fwait
cmp
out
mov
adc
xchg
xor
and
imul
and
pop
pmaddwd
push
pop
imul
fimul
or
push
push
xor
push
pop
sub
mov
sti
ins
mov
sub
(bad)
cmp
fnstenv
sar
in
xor
daa
and
movs
push
mov
sahf
es
jg
sbb
sti
cmps
shl
dec
push
movs
push
jecxz
add
out
js
fdiv
or
mov
scas
bnd
or
enter
das
jmp
pop
dec
push
test
je
cmps
push
adc
outs
and
cmp
inc
jmp
cmps
mul
adc
test
enter
push
fdiv
dec
(bad)
or
test
push
push
adc
mov
ja
push
icebp
push
fwait
(bad)
ds
xlat
pop
pop
cmps
arpl
fld
cmc
or
mov
add
add
fimul
test
(bad)
push
test
xor
dec
stos
lods
mov
inc
movs
xchg
pop
cmp
mov
mov
push
out
jl
mov
and
rol
call
test
sbb
mov
mov
sub
imul
into
cmps
int
popf
popa
xchg
cld
in
dec
stc
call
leave
xchg
test
movs
push
pop
jp
out
sub
sahf
cmp
ja
dec
inc
cdq
dec
popa
xchg
pop
sbb
xchg
and
mov
cmp
add
sbb
mov
shl
mov
push
into
hlt
aas
jbe
mov
sbb
adc
outs
cmps
mov
and
loope
jbe
mov
jecxz
sub
xor
out
cmps
jmp
mov
(bad)
adc
cmp
push
shl
lock
cmp
test
daa
mov
je
rcl
je
sub
dec
aaa
ret
push
add
in
push
or
push
dec
xchg
inc
ret
pop
into
mov
les
in
pop
in
cmps
sbb
out
test
jmp
xchg
sub
sar
and
inc
stos
sbb
push
mov
cdq
sub
push
fs
je
lods
mov
mov
pop
dec
retf
mov
rcl
jae
retf
retf
test
mov
mov
enter
in
mov
addr16
loop
test
dec
(bad)
out
mov
xor
mov
aad
pop
sub
jne
jp
adc
mov
test
cmp
inc
xchg
popa
stos
fst
lds
push
ret
xchg
aad
stos
dec
test
adc
popa
pusha
leave
cmp
movs
mov
sbb
pusha
leave
enter
sub
out
sbb
test
(bad)
test
fwait
jge
cmps
pop
cmp
pusha
(bad)
cwde
gs
test
dec
das
dec
sbb
and
lea
jmp
call
sbb
fst
pushf
cmps
xlat
inc
xchg
push
popf
(bad)
and
dec
pop
and
push
not
or
xchg
rcr
inc
stos
lahf
pushf
cmp
js
mov
xchg
test
xchg
pop
dec
into
in
retf
movs
dec
push
(bad)
jge
pop
mov
mov
push
call
jg
aas
pop
pop
dec
sar
test
inc
dec
mov
xrelease
aaa
inc
push
or
and
or
cmp
xchg
add
mov
cmc
std
xor
adc
iret
call
adc
popa
inc
imul
jb
jne
rcr
and
dec
mov
sub
jmp
or
js
pop
xor
push
xlat
mov
sub
cld
or
clc
pop
stos
mov
and
pop
mov
arpl
sbb
loop
cmp
xchg
xlat
mov
lea
mov
mov
xchg
cmp
js
mov
loopne
fiadd
pop
mov
arpl
ret
data16
push
sbb
push
pop
loop
adc
ins
imul
rcr
ror
outs
es
jns
ins
lea
mov
push
xor
(bad)
pop
mov
dec
xor
repz
movs
jmp
test
xchg
out
sahf
loope
ja
scas
pop
(bad)
sbb
lea
pop
xchg
lds
je
sbb
fbld
nop
loop
cmps
dec
adc
fwait
pop
mov
fs
push
jle
and
sbb
stos
mov
adc
in
scas
js
cmc
mov
jg
ret
lahf
push
xor
call
int
imul
jge
jp
aas
inc
and
pop
jl
mov
xchg
and
pop
push
sbb
xor
into
shl
fwait
jle
in
rcl
mov
jae
jae
sbb
fcomip
jmp
wrmsr
iret
mov
mov
clts
scas
jp
into
mov
lahf
mov
lods
mov
ds
pop
scas
mov
cmp
call
lea
sub
fidiv
inc
ret
cmp
inc
add
adc
mov
push
lods
sub
inc
inc
mov
jo
cs
shl
jo
push
fst
inc
sub
call
dec
adc
add
fadd
dec
adc
test
call
xchg
sbb
jecxz
das
and
push
loop
xor
les
and
mov
in
ins
jle
in
and
cmps
stos
fbld
outs
enter
cld
(bad)
or
and
scas
into
inc
pop
les
push
push
mov
daa
jmp
sar
in
mov
outs
dec
(bad)
jmp
dec
sar
cmps
in
data16
dec
bound
cmp
inc
push
daa
lods
mov
cwde
adc
add
clc
fdivr
mov
cmp
jbe
ja
dec
push
pop
xor
adc
push
xchg
lock
das
(bad)
aas
fwait
jmp
arpl
lods
data16
pop
loop
div
popf
loope
jmp
push
(bad)
push
mov
jl
int
push
test
or
mov
jne
push
or
sub
adc
and
adc
shl
enter
pop
gs
scas
jge
or
sbb
inc
loop
sub
outs
cmp
cdq
ins
test
lods
or
scas
xor
inc
xchg
inc
(bad)
sahf
push
clc
sbb
jns
pop
aas
out
lea
(bad)
pop
fbld
push
dec
dec
jne
mov
add
aaa
mov
mov
fldz
push
popa
ret
xlat
inc
push
or
adc
sbb
sub
xlat
lods
add
jp
(bad)
cwde
aaa
push
inc
iret
aad
sahf
fidiv
std
and
fwait
xor
push
loope
xchg
jno
and
test
mov
fucom
adc
or
dec
sub
cmp
das
jle
xchg
mov
(bad)
and
icebp
xchg
pop
push
dec
das
(bad)
xor
(bad)
push
mov
push
addr16
rol
lahf
stc
hlt
stc
push
xchg
jno
mov
dec
adc
and
cmps
popa
shl
mov
pop
xchg
imul
mov
scas
xor
aas
lods
fcom
repnz
mov
(bad)
mov
icebp
and
mov
inc
xchg
jb
jmp
jmp
cli
push
mov
in
into
jne
std
and
bound
fsubr
sub
movs
jg
dec
xor
hlt
je
dec
dec
movs
ins
fcomp
dec
cwde
and
push
loopne
test
or
jno
push
dec
jp
fmul
sar
push
clc
out
pop
mov
adc
js
std
mov
inc
in
dec
push
jmp
jl
(bad)
jmp
lods
popf
xchg
cmps
test
push
inc
push
hlt
sar
scas
xor
adc
repz
fucomp
imul
cli
ins
xor
push
inc
test
xchg
mov
popf
aad
retf
cs
js
dec
in
jp
repz
ret
push
pop
push
in
xlat
cmps
pop
rol
les
mov
cmp
ror
lahf
xchg
mov
rcr
add
ins
out
xchg
mov
jmp
aas
sbb
add
neg
ja
js
(bad)
(bad)
gs
iret
scas
pop
and
xor
sbb
imul
lods
hlt
(bad)
fsub
aaa
jmp
jns
test
jne
iret
or
repz
pop
jp
push
sbb
test
mov
ins
jge
sub
(bad)
into
outs
inc
mov
dec
and
fsub
push
mov
mov
mov
rcr
inc
pop
or
cmc
fcomi
test
pop
ret
hlt
pop
and
icebp
addr16
mov
dec
sub
mov
scas
scas
push
fst
ss
jnp
fbld
(bad)
or
div
outs
in
loop
scas
icebp
(bad)
mov
mov
call
ret
xor
push
ds
sbb
mov
scas
in
daa
cdq
cmp
mov
cld
idiv
leave
jmp
int
add
inc
popf
add
fimul
inc
xor
out
jbe
xor
int
dec
sub
pusha
rep
adc
shl
jecxz
cmp
jns
ficom
aas
mov
mov
imul
shl
xor
jmp
repz
into
pop
fsub
xlat
xor
fwait
jmp
sub
les
pop
jo
test
mov
stos
mov
jp
clc
jb
and
mov
ret
jnp
pusha
sahf
push
jg
dec
push
stos
mov
sbb
sbb
inc
lock
repnz
add
jg
mov
sbb
std
add
daa
mov
fdivr
push
in
xchg
add
or
sbb
dec
pop
repnz
jge
lea
outs
or
(bad)
xchg
jl
icebp
cwde
(bad)
retf
les
repnz
ror
mov
dec
push
call
push
sub
mov
dec
mov
daa
mov
int
test
pushf
je
(bad)
xor
push
sbb
push
pop
and
(bad)
lock
sub
sbb
cmp
dec
idiv
or
sub
push
ja
lea
dec
cdq
aam
lods
mov
lds
mov
pop
adc
and
test
or
nop
pop
jo
es
mov
sub
imul
cmp
and
cmp
push
ja
jmp
adc
pop
and
jno
jmp
stc
ret
sbb
rcr
push
jne
shl
xchg
sbb
mov
pop
rol
xchg
leave
jb
popa
jmp
vmread
les
sbb
mov
cmp
out
mov
in
sbb
xchg
lods
cdq
cmp
movs
(bad)
adc
pop
mov
push
adc
imul
icebp
mov
push
loopne
jmp
mov
cmp
imul
dec
pop
enter
rol
jmp
nop
rol
fsub
in
mov
cdq
icebp
pop
xchg
int
sbb
cld
nop
mov
sti
mov
lock
pop
outs
pop
push
mov
push
sub
add
adc
pop
mov
movs
je
push
aam
sub
leave
inc
lock
ins
cdq
sbb
in
jae
inc
inc
jns
cli
pop
or
hlt
sbb
jo
sbb
stc
bndldx
test
jnp
add
mov
xor
loope
and
dec
imul
fs
push
ins
sbb
push
ss
popf
pop
jbe
popf
retf
sbb
pop
push
leave
mov
xchg
push
mov
out
xchg
scas
mov
sub
jg
idiv
call
out
mov
xchg
add
sbb
cwde
je
xor
sub
mov
bound
adc
ret
jecxz
inc
cmp
ret
mov
(bad)
jns
scas
ins
push
es
push
shr
or
push
mov
adc
int
push
xchg
sbb
cmc
hlt
push
mov
rcr
mov
xor
in
pop
adc
fistp
mov
in
pop
mov
mov
pop
ins
cmps
xchg
test
pop
mov
inc
mov
push
fisttp
je
jp
mov
hlt
xor
mov
nop
ins
int
stc
adc
and
cmp
mov
icebp
fsubr
ds
addr16
call
sbb
shl
out
fcom
pop
add
pop
fwait
mov
fs
push
cmp
addr16
add
int
pop
mov
cmc
dec
hlt
popa
mov
adc
std
inc
mov
cli
push
shl
or
nop
stos
rcl
and
inc
xor
imul
cmps
loopne
jmp
cwde
sar
jl
cmp
cmps
sub
cmp
pop
jecxz
dec
sub
aas
sub
imul
push
pop
add
pop
jmp
popf
mov
repz
sub
and
mov
clc
jns
stos
cli
mov
ds
call
mov
and
loope
xchg
or
push
dec
cmp
or
xor
test
daa
inc
inc
push
adc
inc
rol
or
mov
rcr
jp
jb
mov
push
(bad)
aad
sbb
jb
cmp
add
push
shr
ins
aas
clc
ja
clc
in
shl
sbb
xchg
mov
push
pop
dec
and
cdq
add
xlat
lods
fdiv
sub
sub
inc
mov
into
pusha
push
push
dec
mov
(bad)
adc
or
bound
push
xor
std
call
jge
popf
cld
sbb
(bad)
(bad)
cli
push
add
cmp
je
sti
movq
out
add
sahf
or
jmp
pop
inc
mov
mov
fdiv
hlt
pop
mov
stos
pop
outs
xchg
cmp
daa
sti
dec
call
xchg
xchg
inc
and
outs
jmp
fldenv
lds
loopne
adc
mov
sub
cmp
mov
aam
cmps
les
call
mov
hlt
and
inc
sub
jmp
jae
lea
out
not
pop
cmp
out
cmp
pop
jmp
sub
sub
popa
cli
jnp
mov
lods
sbb
cmp
mov
fdivr
aaa
add
inc
std
mov
pop
push
inc
icebp
lods
and
outs
lock
mov
jno
int3
mov
loopne
je
jo
outs
pop
xor
push
es
mov
inc
inc
ja
inc
cmp
ss
imul
scas
push
stos
mov
sub
add
sub
imul
pop
outs
mov
subps
sahf
fxtract
add
inc
jmp
push
(bad)
mov
out
cld
imul
push
sub
gs
aad
push
adc
mov
sub
gs
leave
out
mov
pop
cdq
aad
pop
lods
outs
jb
retf
cmp
arpl
jmp
iret
xlat
dec
fs
scas
push
rol
aas
scas
into
ret
fmul
mov
inc
imul
adc
shr
push
mulps
es
fisttp
lahf
pop
out
lds
and
push
sbb
pop
mov
cmp
jp
or
addr16
pop
ins
pop
test
sub
fstp
sets
xchg
jb
sbb
imul
sub
add
aam
inc
sub
cmp
out
stos
mov
push
imul
jl
and
dec
and
nop
dec
lahf
dec
shl
xor
or
push
inc
data16
fucomp
outs
stos
out
jne
inc
call
adc
enter
or
xchg
aad
jb
jl
std
data16
js
push
das
pop
adc
data16
and
push
sahf
push
pop
ret
cmps
mov
inc
xchg
xchg
and
jmp
xor
xchg
inc
movs
lods
ret
dec
and
clc
clc
(bad)
arpl
xchg
inc
mov
mov
(bad)
enter
sub
and
sub
adc
inc
repnz
sbb
cmova
sar
outs
lds
jns
and
mov
ja
push
cmps
jle
xchg
inc
jne
in
addr16
nop
(bad)
ror
jmp
add
bswap
adc
mov
adc
out
pop
ss
xchg
data16
push
jl
(bad)
out
outs
and
lds
cmp
adc
lea
mov
ds
dec
add
mov
cwde
rcr
ror
pop
jl
or
out
loope
pop
daa
add
imul
(bad)
jmp
(bad)
out
popf
adc
std
mov
lds
inc
sub
push
test
test
rcl
pop
pop
lods
sub
pop
add
dec
cdq
ins
test
or
sbb
push
int3
cdq
or
ret
sub
cmp
sbb
loopne
inc
xchg
sti
hlt
out
mov
test
jmp
pushf
pop
mov
hlt
jb
imul
mov
test
sbb
bound
(bad)
test
call
cmp
dec
ins
xor
add
fwait
outs
ror
out
test
bound
jl
or
je
stc
xchg
(bad)
dec
pop
data16
dec
loop
sub
mov
pop
xor
fmul
mov
sbb
cmp
push
mov
movs
shld
cdq
add
jecxz
js
out
sub
pop
mov
fwait
pop
sbb
add
cmp
pop
mov
lods
sub
outs
inc
push
addr16
xlat
loop
in
outs
jg
aad
dec
lahf
lahf
dec
jl
push
mov
imul
test
add
nop
add
pop
adc
add
lods
pop
daa
cdq
sbb
shr
cmp
and
addr16
add
xor
mov
sbb
jae
xor
mov
popf
and
enter
stos
imul
sbb
jge
cld
arpl
jmp
hlt
dec
mov
(bad)
ins
jae
or
and
aad
inc
inc
push
es
loope
test
push
jge
push
aaa
inc
loopne
jno
js
sub
rcr
in
hlt
jo
mov
xchg
mov
jns
or
jmp
push
add
and
ja
mov
mov
lahf
inc
gs
aad
pop
or
out
rcl
loope
(bad)
cmp
cld
push
xor
outs
aas
cwde
int
(bad)
and
into
xchg
pop
pop
call
jp
ud2
jge
sbb
xor
or
inc
pushf
mov
lock
dec
aaa
push
cmps
call
cld
test
mov
pushf
and
dec
cmp
jne
ret
movs
push
add
mov
in
rcl
cdq
add
sahf
adc
push
scas
xor
dec
into
inc
aad
and
xor
call
cmps
xchg
(bad)
or
mov
push
enter
ins
repz
pushf
retf
repnz
rcl
scas
retf
aad
xor
jbe
das
dec
push
std
mov
retf
into
imul
aad
mov
dec
imul
in
lea
in
inc
or
mov
xor
push
sahf
mov
xor
mov
cmp
pop
mov
shl
out
or
mov
loop
pop
jnp
and
add
loope
pop
push
call
stos
lods
sbb
and
lods
push
or
pop
xchg
imul
mov
xchg
hlt
or
ja
cwde
sbb
push
pop
adc
jp
ins
ret
or
loope
adc
enter
and
pop
pop
or
add
add
enter
lods
mov
xchg
test
mov
movs
pop
(bad)
pop
mov
jo
dec
jp
sti
ins
and
es
cwde
outs
enter
jno
in
repz
dec
jne
imul
xor
or
clc
add
inc
nop
pushw
or
mov
adc
dec
gs
cmp
js
xchg
cmp
push
cmp
sahf
ret
jno
dec
adc
push
(bad)
xor
mov
push
xor
(bad)
xor
sbb
lock
cmp
mov
fyl2x
leave
dec
mov
in
ins
pop
cmp
jae
test
mov
jg
popa
retf
retf
xor
aaa
sbb
mov
xchg
mov
stc
lea
sub
sub
and
idiv
pop
mov
cmp
aaa
mov
shl
or
dec
xchg
inc
cli
aad
mov
mul
in
mov
(bad)
stos
test
push
or
adc
or
push
inc
sar
push
pop
pop
pusha
data16
fdiv
and
stc
add
jno
ret
sbb
loop
xchg
sub
outs
and
out
std
or
mov
pop
aam
xchg
jne
cmp
fisttp
addr16
jb
or
sahf
xchg
sub
dec
or
xor
mov
movs
jno
pop
xor
pop
stos
rcl
push
cmp
sbb
clc
cmp
cmps
hlt
jl
sub
aas
cmps
sub
jl
xlat
dec
in
mov
fbld
leave
xchg
sub
icebp
loope
ror
lahf
fucom
push
cmp
int
pop
sbb
movs
push
sub
push
sbb
not
mov
xor
std
pop
pop
and
int
popa
adc
mov
jmp
sub
ds
cs
pop
pop
mov
shr
pop
popa
sub
fadd
inc
add
lahf
out
and
test
imul
imul
aam
out
jge
nop
cmps
mul
movs
mov
hlt
and
in
add
jmp
push
fist
popf
(bad)
stc
cmc
sbb
clc
jmp
and
dec
jl
sahf
jnp
sbb
pusha
jnp
mov
xor
push
xchg
add
fsubrp
jmp
jmp
mov
addr16
shl
mov
push
push
lods
imul
popf
pop
sub
es
fwait
and
and
xchg
push
dec
jae
sar
push
leave
test
cmc
cmp
inc
sub
sbb
sub
stos
adc
daa
repz
mov
pop
push
mov
(bad)
mov
imul
xor
mov
out
or
add
add
cmp
nop
cwde
mov
ret
test
into
icebp
xchg
inc
jp
jne
dec
retf
dec
shl
ins
ins
mov
stos
mov
push
jmp
pop
xchg
xchg
cmp
bound
inc
(bad)
and
sub
jp
in
mov
mov
push
(bad)
movs
xor
std
pop
ss
mov
and
in
and
rcl
lahf
add
(bad)
xchg
les
cwde
cmp
cmp
lea
push
ins
push
cli
xor
int3
xchg
and
leave
in
xchg
scas
adc
jl
test
fwait
into
jns
inc
cmps
or
ficom
push
adc
aam
or
stos
out
add
cmps
or
push
int3
(bad)
loopne
adc
push
out
clc
cmp
repz
jl
test
inc
in
in
xor
fisubr
imul
xchg
lea
popf
ins
pushf
push
ss
test
add
jle
xor
sahf
inc
jge
mov
cli
cmp
inc
inc
or
ss
xchg
hlt
out
pusha
aad
mov
push
test
xchg
int
pushf
jae
jbe
xchg
mov
into
cmps
cmp
out
pushf
cli
xor
cs
push
das
mov
test
outs
fstp
(bad)
movhps
cdq
xor
pop
mov
test
fsubr
fist
ja
sti
or
xchg
xchg
push
shr
jb
jmp
out
dec
or
pop
sub
push
sub
push
mov
das
imul
ja
je
cmp
pop
jbe
call
in
daa
jo
out
jge
ror
shr
in
sub
jno
call
lods
ins
jg
jg
pop
js
mov
mov
mov
rcr
fstp
sub
popf
outs
arpl
pop
in
js
inc
(bad)
je
push
test
jmp
and
inc
pop
adc
push
fdivr
popa
jno
sub
stc
push
jl
loope
int
adc
xchg
ins
push
jge
jg
xchg
push
ins
aam
xor
sub
loop
add
(bad)
push
push
xchg
call
jmp
mov
pop
mov
push
movs
xor
jno
movs
call
fdivr
push
inc
mov
xchg
test
cld
push
loopne
cmp
dec
mov
xor
xchg
mov
je
cli
jne
xchg
or
outs
jne
inc
mov
and
and
adc
cdq
jbe
cs
mov
xchg
arpl
xor
cdq
jmp
mov
sbb
push
push
dec
stc
hlt
xchg
add
push
inc
ret
out
popf
sub
out
cmp
daa
dec
or
lds
pop
stos
add
fldenv
sub
lods
sub
test
sub
push
mov
retf
psubw
and
outs
iret
ds
xchg
jno
inc
push
lock
dec
test
aad
and
cmp
imul
shl
stos
scas
push
jmp
shr
dec
xor
mov
jp
sub
fisttp
ins
icebp
adc
aad
out
xor
lods
cmp
std
cmp
rcr
scas
scas
dec
pop
mov
into
icebp
mov
sub
fsubr
ins
clc
add
pop
mov
mov
iret
fs
fidivr
movs
mov
mov
or
js
mov
jg
jbe
jmp
mov
fnsave
xchg
jg
aam
fnstenv
out
movs
iret
pop
add
push
dec
xchg
add
lea
pop
imul
enter
jne
int3
xchg
sbb
cld
push
not
dec
fisub
hlt
outs
dec
lds
xchg
sti
push
loope
sub
test
std
and
inc
std
jno
jmp
mov
inc
(bad)
cmp
pop
mov
jnp
rcr
mov
mov
adc
shl
push
(bad)
cmp
int
jg
xor
aas
std
sbb
inc
sti
dec
push
mov
adc
mov
sub
cwde
push
mov
mov
pop
je
xchg
dec
cdq
div
xor
lahf
dec
and
sar
aad
sbb
jno
inc
inc
dec
and
push
test
sub
and
dec
and
jmp
jmp
into
pop
out
fild
lods
idiv
jg
xor
xor
(bad)
fsub
in
adc
pop
and
mov
lods
ficom
mov
movs
bound
add
and
sbb
aam
fist
adc
imul
and
mov
cmp
aam
mov
repnz
mov
mov
xor
fldpi
repnz
mov
in
imul
addr16
push
sub
lahf
dec
cmp
xchg
jo
outs
jmp
mov
ror
sub
or
add
in
daa
call
aaa
pop
inc
retf
push
jle
push
or
jmp
jl
lods
mov
jmp
test
(bad)
std
xchg
lock
adc
jmp
xor
or
add
jbe
retf
(bad)
mov
cwde
mov
cwde
int
push
mov
sub
push
xchg
push
or
mov
sub
push
in
inc
in
jb
jno
inc
aam
cmps
and
ret
cli
jp
and
inc
ret
mov
out
push
xchg
addr16
adc
(bad)
cdq
push
fldcw
std
add
sbb
jmp
test
mov
pop
retf
shr
dec
aam
movs
dec
mov
mov
shl
dec
movq
dec
push
call
cld
shl
jns
lods
jle
mov
das
fild
clc
adc
and
cmps
clc
add
pop
mov
adc
jmp
jae
mov
jle
sar
aam
scas
jp
xchg
add
pop
(bad)
loopne
inc
gs
in
movs
mov
in
sub
call
xchg
outs
and
(bad)
xchg
jae
je
fwait
mov
iret
push
dec
add
js
xor
popa
sbb
cld
jg
or
mov
not
and
mul
xchg
(bad)
in
fisttp
repz
es
jmp
in
push
mov
xor
pop
or
sbb
lahf
movs
fisub
jns
daa
mov
pop
add
retf
aam
mov
xchg
jnp
dec
(bad)
dec
add
sbb
jb
cs
mov
push
add
sar
mov
mov
adc
(bad)
xrelease
or
shr
jb
jmp
fcom
or
sti
iret
inc
mov
xor
pop
pop
xor
fstp
fwait
ins
inc
or
sub
cmp
push
mov
int3
loope
sub
dec
int
xor
into
mov
fst
lods
add
add
retf
gs
out
push
mov
add
mov
fdivr
mov
cmp
push
pusha
pop
push
(bad)
out
(bad)
mov
lds
outs
cmps
cmp
int
daa
push
outs
out
adc
mov
inc
mov
adc
push
mov
sub
scas
and
(bad)
cdq
outs
and
xor
retf
jg
mov
jl
dec
fdiv
int
daa
or
inc
dec
inc
jno
jg
and
xchg
and
jns
and
das
push
xor
lods
mov
mov
inc
adc
inc
cmps
xchg
cmps
rol
sub
xchg
inc
and
(bad)
push
out
jp
mov
aas
cmc
les
pop
out
sbb
mov
fs
into
mov
and
add
inc
int
xor
cli
adc
push
xchg
push
or
ss
pusha
lock
xchg
repnz
push
sar
mov
fs
jbe
or
les
or
and
inc
addr16
jbe
xor
dec
adc
pop
icebp
sar
mov
mov
jle
cmp
jno
pop
and
test
jae
add
xchg
rcl
inc
iret
stc
adc
sbb
fistp
in
(bad)
jmp
push
movs
mov
clc
scas
pop
cmp
mov
push
sbb
and
adc
inc
adc
hlt
add
sub
ret
mov
inc
jno
inc
cmp
ins
xchg
sbb
jbe
das
nop
imul
add
out
into
test
repnz
and
stos
movs
cs
add
sbb
into
sub
pop
dec
and
or
inc
inc
clc
aam
outs
adc
xor
push
push
fcom
sti
daa
xchg
(bad)
cdq
add
jg
inc
pushf
cmp
sub
sbb
iret
fadd
or
push
hlt
or
jns
push
dec
or
jmp
adc
sbb
jo
mov
jns
repnz
fidiv
pop
sbb
sti
and
add
je
iret
xor
mov
ffreep
mov
aad
dec
pop
cwde
sbb
arpl
or
fstp
lods
inc
inc
mov
sub
sub
fs
es
push
jbe
and
sbb
mov
mov
push
mov
retf
pop
lock
dec
movs
jl
add
cmps
xchg
(bad)
sbb
xchg
cmps
lahf
mov
shl
and
(bad)
mov
xor
jae
adc
enter
sbb
lock
rol
fcomp
arpl
cmovl
mov
mov
dec
out
xor
mov
and
cmps
das
mov
or
mov
and
popf
out
bound
mul
xor
and
in
stc
enter
adc
mov
sbb
cli
(bad)
rol
inc
scas
scas
xlat
cmp
xchg
out
and
xchg
loope
mov
jmp
sbb
xchg
out
hlt
add
adc
scas
arpl
adc
sub
inc
fsubr
fwait
pop
push
in
and
iret
pop
jns
mov
call
pop
xchg
sub
xchg
jmp
js
adc
in
adc
lds
dec
sub
cmp
xchg
inc
or
pop
jmp
mov
inc
sub
lods
mov
mov
sbb
jae
popa
jg
adc
retf
mov
outs
lahf
daa
daa
mov
inc
mov
dec
iret
sbb
adc
ret
imul
fwait
call
stc
js
dec
ret
(bad)
jnp
jno
push
push
sub
inc
and
jmp
es
sbb
(bad)
not
fild
retf
out
je
cmc
xchg
rcr
icebp
cmps
int3
pop
ss
leave
cmp
cmps
cmp
rcl
push
fidiv
inc
mov
(bad)
push
mov
push
cwde
jae
fs
sub
xchg
adc
leave
test
push
xchg
lds
adc
in
arpl
mov
cmp
lods
inc
outs
mov
fstp
jmp
push
sbb
mov
mov
pop
pop
ins
cmp
and
cli
jg
loop
mov
xchg
fild
push
xchg
fild
jp
dec
or
adc
sub
loop
mov
(bad)
stc
scas
(bad)
and
adc
div
dec
xchg
inc
div
mov
pop
(bad)
mov
iret
mov
std
xchg
push
or
rcr
adc
(bad)
es
aad
jo
in
mov
lds
inc
clc
sub
adc
test
jbe
pop
mov
cwde
ins
test
sbb
mov
jb
fisttp
push
mov
pop
mov
cwde
xchg
sub
push
pop
test
xchg
hlt
test
and
pop
imul
lods
shl
jp
add
cmp
fs
sahf
fnstcw
mov
fldcw
adc
jno
stos
outs
cmp
in
test
mov
lods
aam
mov
inc
xor
neg
sub
ss
aad
mov
xchg
xchg
je
(bad)
pop
dec
mov
xchg
fnstenv
dec
xchg
cli
jmp
addr16
push
cmp
jmp
xchg
dec
loope
test
xlat
cdq
hlt
mov
push
stc
mov
adc
test
dec
or
push
jg
test
lahf
add
lea
out
add
push
pop
shl
enter
mov
test
mov
pushf
dec
sub
adc
cmps
mov
adc
repnz
sti
push
and
or
pop
and
jl
pop
pop
or
push
jmp
ins
sub
xor
mov
ss
xor
mov
test
push
gs
and
or
into
lods
clc
ja
or
loope
cmps
push
mov
pop
shl
cld
call
arpl
in
scas
sbb
mov
fnstcw
ds
xor
jb
and
mov
or
outs
rol
jo
stos
aad
loop
inc
cmp
jge
push
outs
call
int3
dec
sub
(bad)
scas
cmp
mov
push
icebp
rol
xor
mov
jmpw
bound
sbb
pop
out
adc
xchg
aaa
aaa
imul
adc
mov
imul
jle
push
les
xchg
mov
aas
pusha
enter
cli
iret
punpckhbw
jg
cmp
push
nop
(bad)
mov
sbb
inc
mov
inc
or
mul
push
inc
inc
sub
dec
xor
push
xchg
or
push
push
sbb
cmps
(bad)
fsubp
retf
outs
es
mov
add
in
jp
sbb
push
mov
retf
aaa
pop
out
xor
adc
fistp
push
popf
inc
enter
jo
inc
nop
mov
jbe
jno
pop
aaa
sti
cmc
arpl
xor
xchg
pop
or
pop
movs
jo
in
popa
stos
xchg
aas
icebp
nop
sub
cmp
sub
pop
fist
and
test
dec
sub
rol
cmps
add
pusha
pushf
sbb
nop
xchg
mov
sub
and
in
mov
cli
cmps
dec
stos
xchg
xchg
jae
mov
rol
cmc
add
sbb
cmps
push
std
aas
packsswb
cmp
mov
addr16
pop
push
stos
stc
xlat
push
loope
mov
call
sbb
xchg
sar
sti
inc
mov
jp
or
mov
pop
or
les
mov
pop
mov
fisubr
(bad)
ds
add
adc
jge
scas
mov
adc
jnp
mul
imul
dec
inc
je
adc
jl
rol
xor
les
cli
mov
popa
retf
int3
pop
(bad)
xchg
std
inc
jl
sbb
outs
sub
(bad)
out
ja
push
push
add
fs
sub
adc
cdq
(bad)
cli
arpl
xchg
retf
dec
add
rcl
and
gs
mov
jmp
xchg
jmp
jmp
adc
loope
xchg
jp
dec
dec
dec
in
jmp
sbb
xor
mov
dec
loopne
sub
xor
and
pop
addr16
(bad)
jae
shl
and
xor
sub
fs
rcr
jl
in
je
xor
dec
jb
out
aas
and
mov
aad
movs
les
push
pop
ins
test
movs
movs
inc
mov
adc
ror
cmp
adc
jae
pop
mov
mov
out
ret
push
in
sub
in
test
jnp
retf
addr16
xor
sbb
outs
adc
xor
sub
push
push
push
loope
or
ss
jnp
sbb
fsubr
ja
es
fs
movs
jbe
adc
add
adc
add
fyl2xp1
into
inc
jmp
scas
dec
lds
xchg
aad
mov
call
lahf
imul
jbe
loopne
loopne
xor
dec
popf
dec
outs
mov
test
inc
push
sub
fmul
add
rcl
and
mov
sbb
fwait
adc
aaa
push
fdivr
sub
jbe
shr
in
jle
push
push
add
push
iret
lds
jle
push
xor
sub
je
es
stos
je
test
jp
pavgw
or
push
sahf
lahf
push
out
cdq
jns
rcr
(bad)
stos
xor
mov
dec
adc
and
or
jo
cmp
rcl
loopne
ror
add
or
in
and
out
xor
clc
fmul
mov
ficomp
stos
and
sub
cmp
loop
iret
push
jmp
(bad)
loopne
fcom
push
sbb
adc
jge
ins
fldcw
or
das
aaa
sbb
dec
adc
adc
dec
ret
mov
jo
pushf
clc
movs
dec
sbb
dec
fimul
mov
pusha
push
jmp
jnp
inc
je
les
mov
xchg
popf
aam
mov
inc
pop
and
jmp
fbld
push
gs
fdivr
and
push
(bad)
mov
aas
xchg
lods
cwde
jmp
shl
xlat
mov
inc
mov
repz
push
mov
jp
jb
mov
mov
mov
cmps
push
outs
add
test
mov
inc
scas
aaa
arpl
lea
stos
clc
mov
sar
stc
(bad)
jmp
push
jmp
cmp
mov
mov
loop
shr
popf
daa
jl
aad
hlt
cmp
add
jle
cmp
outs
mov
es
aad
and
xchg
xor
call
jge
jp
mov
fidivr
sbb
into
xor
inc
call
leave
fmul
aam
xchg
in
and
mov
adc
call
dec
push
popf
mov
xor
mov
and
add
xor
aam
popa
xor
xchg
xchg
pushf
xchg
ret
leave
(bad)
mov
or
inc
jno
pop
sbb
sahf
call
sahf
call
leave
icebp
and
xchg
xchg
adc
push
les
xchg
stc
lea
test
(bad)
and
fnsave
jmp
mov
dec
sbb
push
push
push
inc
jg
lea
les
ja
in
popa
fcom
adc
clc
mov
jg
or
fisttp
jbe
test
leave
loopne
lea
enter
retf
or
and
mov
imul
loopne
adc
retf
fldenv
sahf
push
xchg
aas
inc
cmp
push
cld
fwait
xchg
(bad)
inc
mov
pop
jl
in
dec
mov
pop
fst
cmps
jmp
dec
push
test
icebp
js
sub
fcmovb
and
sub
mov
fist
es
bound
adc
push
xchg
ja
xchg
mov
and
test
jmp
int3
dec
sbb
mov
mov
jns
jo
mov
shr
(bad)
jo
adc
cdq
test
mov
stc
mov
std
das
call
dec
stos
xchg
ins
imul
jge
sbb
push
dec
retf
jle
lahf
pop
xor
jmp
sub
mov
mov
into
push
sub
push
or
adc
es
cmps
movq
and
jbe
mov
push
adc
popf
mov
adc
sbb
in
inc
lods
push
cmp
add
xor
cmp
jne
gs
out
shr
push
fcomp
inc
ins
inc
xor
stos
add
push
push
cmp
sbb
test
add
jecxz
mov
push
iret
sub
mov
and
jnp
call
das
into
div
dec
jge
jmp
int
fsub
mov
fadd
jge
inc
cmc
mov
rol
addr16
jnp
sbb
in
pushf
pushf
jge
inc
xor
fsave
je
out
xchg
je
lea
push
mov
prefetchnta
xchg
std
data16
mov
cmp
fldcw
xor
jecxz
ins
push
sbb
sbb
fst
adc
xchg
das
cs
jo
dec
mov
ins
pop
mov
or
(bad)
aam
mov
push
pop
xchg
call
lea
loopne
out
cmp
mov
or
movs
or
push
cmp
test
pop
sub
mov
inc
xor
xor
cmp
inc
and
nop
jp
sub
push
xchg
inc
mov
mov
repnz
sbb
std
adc
outs
cmp
cmp
pop
mov
cmp
ror
sub
fcmovnb
dec
add
mov
mov
sar
sti
mov
and
outs
sti
add
loope
inc
out
sbb
push
pop
xchg
sub
or
ja
xor
jb
std
mov
push
cmp
das
inc
jno
gs
mov
sbb
popa
pop
xor
test
xlat
mov
and
or
jae
xor
nop
sar
sub
mov
lock
jns
das
ds
cmp
cli
retf
sub
inc
xor
inc
inc
sbb
call
stos
inc
imul
and
dec
(bad)
iret
stc
call
mov
fistp
(bad)
push
inc
icebp
push
cmp
cmp
cs
rol
or
retf
dec
xor
and
fwait
jp
or
sahf
loop
mov
test
js
and
or
(bad)
or
mov
cmp
and
inc
stc
lock
mov
aam
fs
int
nop
and
mov
and
fidiv
and
(bad)
mov
icebp
pop
xchg
test
ins
mov
fwait
cli
jbe
mov
(bad)
out
pop
push
mov
and
cmp
lea
es
mov
push
mov
xor
arpl
maskmovq
sub
es
push
jmp
mov
mov
jbe
stc
push
out
lock
dec
mov
pop
inc
mov
ja
popf
jmp
out
out
and
cmp
pop
cmc
jmp
mov
mov
jge
jl
das
iret
ss
push
push
out
mov
outs
stos
add
icebp
sti
movs
jg
and
dec
dec
(bad)
sbb
inc
outs
xor
xchg
(bad)
mov
test
xor
push
icebp
push
mov
pop
jnp
in
pop
push
(bad)
outs
fadd
jnp
std
int3
lds
jne
inc
in
xchg
sub
adc
retf
rcl
inc
(bad)
jg
mov
imul
out
aaa
std
hlt
aam
fld
xchg
xor
mov
jp
jle
and
pushf
sbb
fcomp
sub
popa
pop
mov
je
push
jbe
xchg
leave
inc
(bad)
aam
fiadd
sbb
mov
xor
stos
or
iret
push
mov
push
das
xchg
ss
fcom
cld
mov
cld
xlat
jmp
leave
rol
sbb
adc
mov
ror
push
call
jnp
aad
sub
xchg
xor
xor
movs
test
pop
retf
fisttp
movsx
imul
inc
not
mov
inc
int
leave
(bad)
repnz
pop
(bad)
out
xchg
into
out
push
inc
std
push
mov
test
jg
popa
adc
jo
and
ret
sub
fisub
cmp
inc
je
test
adc
sbb
mov
inc
movs
xchg
cmp
rcr
inc
fstp
stos
mov
stos
neg
jle
mov
outs
mov
movs
push
ret
imul
dec
cmps
dec
ins
adc
repz
bound
push
mov
fld
dec
call
adc
(bad)
fwait
lods
pop
ror
fnstenv
in
mov
cmp
inc
push
pop
popa
add
aam
cmps
push
sti
sbb
pop
inc
fcmovnb
mov
or
mov
retf
(bad)
adc
sbb
ret
xchg
mov
popf
fsubrp
pop
xlat
dec
pop
call
jbe
lock
mov
ja
dec
int3
loopne
jo
push
mov
cdq
mov
retf
stc
mov
mov
in
cwde
mov
sbb
in
mov
cdq
xor
dec
or
icebp
xor
pushf
cmps
jmp
and
pop
mov
sar
and
popf
pop
stos
stos
aas
movs
fidiv
jne
or
scas
int3
xor
fcmove
out
ins
mov
mov
test
mov
sbb
popa
xor
cmp
add
push
jg
add
shr
into
pop
or
test
fwait
pop
test
(bad)
xor
jl
sub
inc
adc
jnp
jne
movs
cmp
imul
retf
out
mov
lods
pop
dec
add
fisttp
jle
xchg
scas
add
int3
(bad)
into
imul
ror
(bad)
fdivrp
push
push
iret
adc
ret
movs
xor
pcmpeqd
(bad)
stos
pop
cmp
push
inc
cmp
cmp
out
xor
xor
cs
sub
push
sub
mov
jo
and
imul
jp
scas
push
jg
mov
(bad)
mov
inc
ss
jmp
xlat
dec
ins
cmp
sub
(bad)
jnp
push
in
push
jbe
fcomp
and
ss
(bad)
mov
mov
sub
mov
into
mov
xchg
and
pop
adc
in
sub
aaa
mov
aam
xor
inc
into
ins
push
xchg
and
xor
(bad)
xchg
das
(bad)
ins
(bad)
idiv
stc
adc
mov
lds
inc
or
ds
adc
xchg
cmp
outs
pop
xlat
je
dec
xchg
mov
dec
pop
into
sbb
pop
pop
fnstenv
mov
vfmsubadd132pd
adc
sub
mov
adc
add
retf
sbb
adc
nop
int3
stos
dec
xchg
pop
loopne
dec
xor
fst
inc
push
xor
adc
aas
sub
movs
mov
and
or
and
pop
push
shr
cmp
push
sbb
push
in
rcl
pop
add
inc
add
sub
cmp
push
int
out
dec
out
xchg
mov
mov
mov
pop
hlt
push
adc
pop
stc
loope
loope
jge
nop
scas
pop
pop
cld
push
add
pushf
ja
leave
aam
mov
jno
push
es
jne
ja
inc
test
sahf
and
scas
add
fild
and
(bad)
and
xor
dec
ret
sbb
ret
sbb
push
or
xor
dec
mov
push
pushf
into
sbb
test
daa
aaa
xchg
loop
pop
pop
repz
jl
in
cmp
repz
xor
xchg
jge
sub
stos
out
inc
in
sbb
in
mov
lods
js
shl
mov
inc
xor
scas
inc
scas
enter
out
cmp
jne
in
jbe
sbb
push
fnstsw
jbe
scas
mov
or
outs
xchg
or
or
xchg
cmp
(bad)
popa
jge
das
icebp
out
in
out
sbb
mov
pop
imul
rcl
call
mov
push
dec
jnp
pop
push
(bad)
and
imul
or
(bad)
int3
out
cmps
(bad)
mov
std
sub
adc
retf
out
jecxz
movs
adc
jg
or
sub
js
repz
popa
inc
outs
retf
fdivr
mov
fidivr
nop
rcl
push
pop
(bad)
addr16
pop
dec
xchg
mov
mov
mov
fistp
adc
mov
push
fadd
fsub
cs
xor
xor
push
in
out
and
outs
dec
dec
sub
icebp
sub
shr
sub
movs
(bad)
push
jbe
cmp
pop
imul
pusha
push
adc
cli
fstp
mov
dec
std
add
fisttp
out
jnp
dec
(bad)
paddd
adc
call
(bad)
int
xor
adc
pop
test
push
imul
ret
fistp
lods
mov
int
stos
mov
xor
in
push
adc
mov
fistp
sub
call
add
inc
rol
sbb
sbb
sub
outs
out
mov
daa
sbb
ficom
and
mov
popa
test
mov
stos
inc
aas
vmovapd
pop
push
dec
loop
jmp
inc
sub
fcmovnbe
pop
mov
daa
into
(bad)
fisttp
push
pop
jb
cmp
pop
ror
adc
mov
jp
test
push
mov
jmpw
xor
xchg
es
stos
pushf
sbb
sub
not
adc
rcl
mov
adc
sub
xchg
(bad)
sahf
push
add
enter
adc
cld
(bad)
xor
cmp
inc
xchg
add
inc
(bad)
ins
out
idiv
loope
test
shr
fiadd
mov
jmp
add
or
in
dec
cmp
dec
leave
fadd
mov
mov
cdq
mov
outs
in
out
mov
jnp
movs
sub
iret
xor
cmc
fstp
sbb
movs
inc
cli
add
cmp
mov
aas
out
jae
jecxz
mov
(bad)
pop
mov
cmp
stos
inc
pusha
dec
xor
rcr
adc
cmps
int3
jno
inc
daa
push
xchg
and
(bad)
sub
mov
(bad)
or
rol
mov
ret
das
add
or
jns
das
ins
push
fsub
push
(bad)
or
jmp
lock
push
stc
jo
adc
mov
jmp
movs
shr
jb
sbb
adc
cmc
outs
push
mov
idiv
nop
xor
xor
lods
stos
sbb
outs
rcr
xor
push
fs
sti
cmp
sbb
mov
cmps
cmp
and
xchg
ror
mov
paddusb
pusha
cs
xchg
mov
jb
test
or
inc
jecxz
xchg
dec
mov
or
mov
mov
sub
pop
neg
(bad)
loopne
aas
jecxz
loopne
pop
mov
mov
inc
add
ret
fisub
sub
cwde
inc
mov
mov
cmc
fwait
cmp
sahf
cmc
mov
mov
push
dec
arpl
cs
imul
jecxz
call
cmc
icebp
xchg
jmp
cwde
or
pop
mov
pusha
inc
fist
mov
ds
xchg
mov
mov
jle
push
lods
outs
(bad)
fxtract
dec
or
fild
hlt
push
mov
inc
into
jmp
jl
rcl
cli
cld
ret
or
xor
jl
pop
push
stos
fwait
ds
inc
bswap
mov
and
sub
jmp
mov
lea
lods
(bad)
pop
xor
or
adc
push
or
dec
loope
loop
test
jg
adc
ins
rol
mov
sbb
adc
outs
push
movs
(bad)
inc
push
(bad)
mov
and
shl
in
xlat
pop
adc
xor
push
scas
mov
popa
test
jmp
dec
adc
int
mov
bound
cmps
ja
mov
movs
cmps
shl
xchg
and
sahf
outs
int
stc
sbb
nop
lock
and
dec
cld
out
inc
inc
pop
lods
adc
xlat
xchg
rcr
lea
je
xchg
lods
cli
jge
and
popf
imul
in
lds
pop
push
mov
bound
push
icebp
sub
scas
mov
aaa
aad
adc
loop
std
int
clts
test
inc
lahf
je
inc
iret
(bad)
and
or
in
push
neg
icebp
pop
arpl
div
ins
movs
or
cmp
sub
daa
or
popa
add
mov
mov
jne
push
lock
add
mov
sti
push
ret
sbb
ret
sbb
outs
(bad)
cmp
cwde
hlt
popf
lahf
pop
xor
movs
sbb
scas
call
dec
sahf
popa
shl
xchg
push
add
and
ja
push
cmps
sbb
int3
and
and
cmp
cs
mov
sub
bound
lahf
mov
imul
mov
jle
in
cmc
movs
cmp
fdivr
cwde
scas
in
or
jmp
lods
loope
cs
inc
mov
jp
push
repnz
inc
cwde
inc
popf
cmp
mov
mul
xchg
ins
or
or
iret
addr16
jmp
pop
push
and
mov
push
sbb
xor
mov
xchg
xchg
lock
imul
imul
sub
inc
movs
or
mov
ret
adc
cmp
dec
lods
xchg
mov
jo
bswap
shl
repz
daa
pop
fs
mov
ret
cmp
test
inc
pusha
call
and
cmc
push
js
jno
push
dec
pop
adc
inc
jbe
stos
aam
xor
pop
scas
jo
dec
fwait
stos
test
out
sbb
ret
or
pushf
cmp
clc
push
and
mov
add
pop
pop
test
scas
sbb
out
retf
xchg
sbb
sub
enter
loope
shr
mov
adc
mov
inc
jmp
push
xchg
mov
in
inc
aam
ja
mov
in
ja
mov
mov
adc
sub
jle
lea
adc
push
add
imul
dec
(bad)
adc
sbb
retf
mov
push
cli
jmp
repz
in
je
adc
fisttp
aas
push
in
outs
rol
or
sbb
shl
mov
jns
and
mov
add
dec
jl
shr
daa
div
mov
xor
jle
dec
jmp
sub
cmps
repnz
pop
cli
(bad)
rcr
stos
or
inc
and
shl
jp
push
call
mov
xchg
mov
lock
aad
(bad)
xor
adc
adc
adc
adc
and
out
xchg
pusha
ins
jbe
mov
rol
cmp
and
fwait
add
push
scas
dec
xchg
ret
int3
push
aas
loopne
inc
add
fisttp
push
ret
imul
sahf
(bad)
cwde
push
imul
mov
pop
add
jnp
sahf
adc
cmp
adc
not
sub
sti
in
mov
and
sbb
push
cmp
mov
jno
mov
jne
push
bound
jg
push
js
jle
inc
mov
push
mov
cmp
mov
shl
div
mov
mov
push
add
popa
out
mov
mov
or
inc
ret
push
and
repnz
sbb
cdq
mov
pushf
out
fstp
bound
lds
adc
mov
in
adc
pop
stos
ror
lock
test
inc
fcomp
inc
cs
xchg
lds
pop
jae
cwde
(bad)
mov
ins
jo
mov
outs
lods
cmp
push
sub
(bad)
xchg
mov
lods
fstp
imul
pop
jecxz
pop
push
or
inc
xchg
add
pop
push
scas
xchg
mov
add
jmp
dec
pop
iret
es
in
mov
adc
js
out
xor
jne
pop
inc
je
mov
aas
adc
(bad)
in
loope
and
mov
in
lods
enter
adc
jle
dec
dec
mov
lods
jp
jb
mov
out
add
push
stc
not
jbe
fdivr
or
(bad)
repnz
jno
fnsave
mov
xchg
push
out
or
cdq
xchg
mov
aad
and
enter
mov
fwait
mov
xlat
push
aam
add
jl
cmp
sbb
enter
or
jne
ret
gs
dec
fistp
xchg
or
sbb
je
cmp
dec
xor
pop
sub
pop
(bad)
lods
movs
mov
jecxz
out
dec
lahf
mov
inc
icebp
jne
test
xor
cmps
std
push
scas
ins
clc
cmc
es
push
stos
outs
mov
fimul
xlat
cmp
call
mov
jb
jmp
push
rol
cmp
push
out
pop
dec
and
sub
loope
push
(bad)
inc
rcr
add
and
inc
xchg
mov
adc
fld
enter
ss
pop
push
inc
or
mov
mov
and
pop
and
push
fstp
adc
pop
push
ins
and
das
inc
inc
mov
push
mov
xor
dec
xchg
cmp
lock
mov
and
mov
cdq
xlat
aam
in
sbb
adc
fs
and
mov
jb
aaa
inc
jbe
sub
xor
pop
and
mov
scas
inc
push
movs
test
jge
cmp
inc
jecxz
mov
leave
inc
daa
cmp
and
movs
cmp
ret
les
cmp
dec
sar
and
pop
in
sbb
clc
xchg
sar
adc
stos
cmc
jp
sbb
jmp
mov
add
int
cli
clc
jno
push
sahf
leave
dec
ins
xlat
push
stos
inc
mov
adc
cmp
mov
dec
aam
mov
mov
mov
fld
mov
xchg
sbb
pop
jmp
sub
jmp
stos
popf
and
test
retf
dec
(bad)
mov
mov
(bad)
push
(bad)
mov
inc
imul
dec
sbb
mov
icebp
dec
inc
arpl
fisubr
add
jge
clflush
ins
icebp
mov
lock
inc
sub
leave
loopne
jno
add
add
push
jnp
sub
popa
sub
cwde
pop
mov
(bad)
ret
stos
test
ror
mov
std
stos
push
push
lahf
jno
test
sub
stos
nop
add
mov
inc
mov
mov
inc
inc
ret
iret
in
bound
cwde
dec
call
lock
ja
aaa
or
inc
out
int
retf
pop
icebp
dec
pusha
xchg
les
jae
ss
mov
rcr
dec
mov
push
pusha
mov
add
rol
adc
mov
repz
iret
stos
jb
push
mov
imul
std
xor
pop
lock
and
xchg
ins
xchg
xchg
xor
lods
std
daa
fwait
pop
xchg
add
mov
and
pop
push
lock
pop
(bad)
add
dec
aad
test
or
call
loop
xor
ret
adc
ret
pop
mov
adc
int
mov
loop
cmp
es
jl
mov
movs
icebp
out
xchg
pop
inc
cmps
and
mov
xchg
xor
sbb
js
outs
(bad)
jl
(bad)
scas
mov
inc
cmp
dec
stos
or
movs
fiadd
mov
repnz
(bad)
and
add
pop
xchg
(bad)
out
movs
pop
fldcw
dec
(bad)
ins
sub
mov
(bad)
popf
(bad)
lods
scas
cmps
mov
dec
pop
xor
xchg
nop
fsub
enter
xor
or
sub
jnp
mov
and
mov
mov
dec
mov
jns
jo
mov
pop
out
mov
add
mov
lods
jecxz
push
and
add
push
pop
adc
or
lods
mov
adc
and
gs
sub
int
leave
xor
js
retf
pusha
pop
pop
call
pop
mov
hlt
loopne
push
sub
fld
xchg
pop
jne
mov
test
push
sub
lea
aas
lods
xor
ret
adc
cmp
adc
inc
frstor
add
rcr
es
outs
inc
inc
test
bnd
sub
and
dec
sub
stos
xchg
inc
xchg
scas
inc
aas
jae
cs
(bad)
fisub
out
pop
popa
dec
and
pop
in
call
(bad)
xchg
push
dec
xchg
xchg
inc
fs
inc
inc
inc
xchg
sbb
int3
aam
or
sub
(bad)
out
xchg
mov
push
out
popa
lea
sub
call
mov
movs
(bad)
dec
pop
add
call
in
cli
push
fisub
sbb
(bad)
xchg
and
xchg
popa
xchg
xor
dec
addr16
add
mov
inc
sub
dec
les
iret
inc
add
pop
xchg
call
int
int
inc
push
xor
mov
stos
cmps
add
jmp
adc
jg
cs
cmp
add
xor
mov
daa
inc
xor
mov
mov
aaa
rol
int3
call
fldcw
mov
call
popf
sbb
ficom
xchg
sti
test
fst
rcr
pop
mov
jno
leave
out
fld
div
xchg
imul
sub
xlat
sbb
jge
push
fistp
add
xor
or
out
imul
popa
psraw
xchg
dec
out
xchg
lmsw
stos
sar
mov
add
inc
mov
or
jb
xor
xor
mov
and
faddp
out
cdq
dec
mov
fsub
jl
xor
pop
push
adc
pop
dec
mul
push
mov
push
sub
cmp
hlt
and
mov
into
aas
mov
js
xchg
fnsave
outs
xchg
lahf
test
ins
jg
imul
xor
es
sub
pop
xchg
stos
fist
adc
shl
xor
pushf
sbb
scas
adc
or
and
popa
(bad)
xchg
adc
icebp
dec
int3
les
push
arpl
mov
jl
adc
cmps
js
js
bswap
imul
pop
(bad)
leave
cmp
mov
lea
jg
xchg
cmp
sahf
arpl
or
hlt
adc
test
inc
into
mov
push
push
dec
int
dec
xchg
fiadd
xor
pusha
ds
aam
hlt
xchg
cmp
add
sub
and
dec
and
push
jp
je
hlt
inc
and
shr
or
and
dec
push
(bad)
es
ds
jmp
and
(bad)
and
clc
inc
ss
(bad)
std
xchg
push
movs
pusha
or
dec
dec
test
leave
inc
xchg
stos
mov
pop
repnz
call
xor
cmp
push
shl
gs
xchg
test
frstor
xchg
stos
mov
rol
ret
ja
xchg
or
popf
push
sbb
adc
cwde
sbb
movs
rcl
ret
adc
xor
cdq
jmp
fbld
addr16
stos
cmc
int
push
sub
stos
scas
fst
inc
and
lahf
jb
mov
cmp
add
or
jno
mov
pop
call
stc
inc
nop
(bad)
pop
cld
sub
xchg
add
mov
sti
xor
xor
sbb
inc
gs
out
push
call
std
dec
cli
mov
call
xor
in
mov
scas
clc
inc
sbb
pop
int3
outs
mov
mov
popa
pop
sub
jo
adc
test
and
fild
lds
cs
sub
jne
leave
dec
cmp
and
fst
mov
sbb
inc
(bad)
mov
outs
icebp
fs
jmp
lods
lahf
or
push
sbb
adc
(bad)
cs
pop
inc
push
lds
mov
lods
lds
push
leave
add
fcomp
mov
mov
data16
popf
xor
push
mov
lea
out
es
mov
outs
sub
pop
xor
data16
lock
sub
xor
leave
scas
push
cs
arpl
scas
bound
push
data16
lea
sbb
sub
ja
pop
mov
sbb
pop
mov
sub
push
push
nop
inc
jbe
cmp
scas
iret
mov
inc
das
mov
shl
push
push
aaa
push
and
mov
out
xchg
push
ret
and
mov
pop
pushf
push
fsubr
adc
cwde
pushf
in
pop
inc
outs
pop
ins
pop
jmp
stos
push
cld
jmp
cmp
(bad)
cwde
pop
inc
add
jp
aaa
adc
jb
xor
rcl
push
mov
xchg
das
loopne
sub
loope
into
scas
mov
std
pusha
sub
repnz
sub
mov
xchg
or
push
and
push
call
mov
js
in
mov
xchg
je
(bad)
cdq
push
das
neg
jge
inc
push
pusha
sub
inc
mov
fisub
dec
hlt
icebp
or
mov
icebp
(bad)
loope
scas
mov
xchg
jle
jmp
in
mov
rcl
sub
cld
sbb
mov
push
or
jno
test
je
jb
scas
or
mov
ds
adc
in
popa
push
xor
fs
leave
sbb
out
jmp
nop
call
mov
cmp
rcr
arpl
stos
adc
adc
mov
xor
pop
xchg
xchg
out
les
and
lods
and
lods
mov
xchg
mov
es
and
ret
sub
pop
push
aaa
(bad)
push
mov
fnsave
leave
sub
xchg
dec
xchg
xchg
es
daa
popa
pop
pop
lea
pusha
inc
xor
add
shl
mov
mov
inc
scas
lock
div
add
mov
ret
add
pushf
into
mov
sbb
mov
push
repnz
push
push
mov
sub
loope
jl
sub
fiadd
in
ja
or
(bad)
push
pop
ja
pop
movs
mov
xchg
inc
mov
mov
jp
inc
and
xchg
jnp
and
cmp
lods
and
dec
(bad)
clc
adc
enter
xor
js
sbb
push
jae
add
dec
(bad)
sbb
cwde
fcomp
aaa
xchg
retf
rcl
mov
mov
je
rcr
mov
aaa
in
aad
sbb
js
push
mov
cmp
adc
or
test
lods
out
jle
into
jmp
sar
movs
fs
push
mov
sub
jecxz
push
and
sbb
jbe
adc
adc
push
xchg
in
cld
idiv
test
cmp
fdivr
jecxz
ja
mov
push
xchg
and
adc
or
aam
sub
dec
push
dec
in
push
mul
inc
mov
or
inc
dec
aaa
nop
fst
cmp
(bad)
or
ins
xor
nop
mov
sub
scas
sbb
pop
retf
add
aaa
mov
fbstp
dec
pop
mov
mov
push
iret
leave
cmp
daa
xlat
ja
sbb
out
inc
xor
or
outs
or
and
mov
sbb
rcr
xor
push
cmp
add
inc
sub
jge
cld
adc
aaa
out
push
or
js
inc
js
cmps
push
pop
aam
pop
add
ins
shl
xor
sbb
and
jo
shr
mov
mov
rcr
loop
push
jae
cmps
xchg
mov
ret
aam
cmp
pushf
ins
pop
mov
mov
and
imul
xor
sti
imul
fnstcw
or
pusha
inc
sbb
xor
ins
adc
sbb
jns
pop
mov
lea
adc
mov
aas
cwde
(bad)
adc
jno
xchg
cmp
std
call
or
addr16
(bad)
jecxz
mov
xor
inc
sbb
pop
mov
stos
xchg
mov
cmp
push
inc
repnz
add
lods
cmp
mov
hlt
xchg
iret
mov
mov
and
add
or
xchg
sti
mov
fimul
pop
or
pop
fs
jnp
mov
push
jmp
loopne
xor
sahf
mov
push
push
dec
nop
or
mov
leave
shl
cmp
xor
hlt
sub
fwait
scas
in
xchg
or
mov
sbb
lods
(bad)
xor
dec
mov
push
(bad)
lea
rol
int
jge
or
loopne
sahf
repnz
pop
inc
xchg
pop
lahf
sbb
shl
js
mov
sub
jno
fcmovu
ds
and
jne
sahf
pop
int3
jmp
(bad)
pop
scas
mov
test
out
and
and
push
sbb
pop
pop
test
push
add
push
jge
cmp
test
ds
and
popf
pop
push
jb
nop
and
dec
retf
cmps
cmp
jl
add
mov
in
sub
sar
sbb
jae
cmp
jno
xlat
lock
fcom
adc
in
fdiv
lahf
loopne
dec
push
addr16
ficomp
or
clc
std
bound
das
jp
mov
je
add
pop
lods
int
push
xchg
fadd
add
xchg
adc
mul
mov
cmp
loop
(bad)
mov
push
push
ret
addr16
cdq
ins
cmp
stos
(bad)
or
sbb
pop
xchg
xor
cmp
mov
adc
loope
xchg
mov
pushf
mov
mov
dec
pop
shl
movs
mov
sub
cmp
(bad)
jae
mov
or
jmp
aam
mov
inc
mov
jae
cli
xor
push
imul
xor
cmp
jmp
and
sbb
adc
xor
xchg
out
jo
mov
jg
das
mov
or
call
add
xchg
(bad)
mov
dec
pop
lea
and
data16
icebp
dec
mov
push
lods
push
mov
mov
imul
and
imul
lods
push
dec
cmp
or
xchg
jge
jbe
sbb
cmp
xor
xor
addr16
and
ins
jge
cmp
repnz
call
out
fld
dec
in
mov
mov
jo
jae
in
push
fs
and
int
xchg
mov
sti
mov
mov
in
mov
ss
dec
test
push
sub
push
jp
std
(bad)
dec
(bad)
adc
adc
mov
ds
(bad)
mul
in
mov
jne
sub
mov
and
stos
mov
retf
test
and
sub
enter
test
das
ja
das
call
dec
sti
sbb
into
xchg
call
inc
add
or
sub
ret
xor
out
ja
mov
cmp
aam
call
add
mov
je
mov
jno
rol
xchg
cwde
and
lods
leave
push
push
push
xor
or
mov
cmp
div
out
add
inc
and
stos
xor
xchg
bound
int
lea
inc
xlat
shl
int3
gs
sti
pushf
aam
jns
push
enter
(bad)
dec
lods
jns
mov
call
shr
mov
(bad)
enter
ins
fistp
inc
inc
popa
push
adc
add
repz
shl
and
push
scas
in
sbb
in
push
pop
or
sub
fbld
pop
cmp
jg
cmp
pop
fdiv
mov
pop
cs
mov
adc
mov
jmp
push
mov
mov
xchg
dec
push
dec
out
sub
dec
inc
out
repnz
jo
jbe
sub
arpl
lea
mov
leave
inc
adc
test
add
lods
mov
xor
enter
ins
cmp
add
sbb
jle
jge
sbb
adc
xchg
jge
xchg
sahf
punpcklwd
mov
lea
aam
mov
pop
push
fadd
dec
jns
push
call
inc
push
loop
rcl
xchg
fisttp
pop
dec
imul
jecxz
cmp
mov
bound
dec
(bad)
cmc
inc
push
daa
adc
test
push
xchg
push
xchg
test
fstp
imul
jns
sub
pop
sbb
pop
je
pushf
ds
sub
loope
bnd
xor
adc
jmp
and
pop
push
or
js
not
int
shl
jo
dec
dec
jbe
fimul
in
loopne
push
(bad)
mov
movs
cld
and
adc
jne
lods
cmp
inc
(bad)
inc
push
cmc
mov
leave
add
pop
mov
ss
ret
jmp
and
out
int
jo
mov
mov
push
cmps
(bad)
jbe
into
retf
xchg
mov
mov
pop
leave
mov
bound
cs
addr16
mov
add
mov
xor
xor
jbe
dec
or
adc
jmp
or
popa
les
xchg
dec
sahf
idiv
test
fisttp
mov
sbb
iret
jnp
jne
fild
jbe
aam
jb
nop
and
adc
test
sahf
sti
and
xor
es
idiv
ret
mov
mov
fmul
inc
lods
pop
test
and
xchg
jno
ret
jl
jb
(bad)
(bad)
and
xor
push
in
and
(bad)
sub
mov
jns
ret
xor
jle
cli
sbb
fsubr
les
jbe
mov
imul
and
pop
out
fdiv
leave
mov
mov
mov
add
pop
jne
inc
addr16
mov
xchg
jb
aad
and
mov
cmp
inc
adc
dec
jne
or
xor
mov
rcl
gs
cmp
leave
fdiv
cmp
arpl
ins
dec
xchg
sub
jb
repnz
aam
jnp
xor
std
and
popf
cmc
cmp
mov
ror
adc
lods
push
mov
jbe
cmps
in
scas
imul
shl
pop
invd
mov
pop
or
cli
fnsave
retf
lahf
outs
mov
pop
dec
std
in
dec
loop
fsubr
xchg
stc
jo
xchg
and
rcr
out
adc
js
pushf
fisttp
add
int3
cmp
mov
(bad)
call
shr
shr
jns
cs
or
ins
(bad)
outs
push
mul
xchg
push
push
push
mov
loope
aam
dec
dec
dec
retf
clc
(bad)
out
xchg
ret
mov
sbb
dec
sbb
or
das
add
add
xchg
sub
push
stos
jo
int3
ja
out
or
push
add
sbb
add
sub
and
fadd
mov
pop
mov
or
aad
push
mov
out
or
mov
aad
xor
enter
enter
lods
nop
bound
mov
mov
fild
push
jne
int3
push
mov
xor
sahf
mov
mov
ret
sub
adc
pop
(bad)
mul
xor
data16
in
sub
enter
adc
shr
je
push
xor
dec
shl
push
scas
int3
es
lods
mov
repz
out
outs
cwde
inc
(bad)
fstp
dec
and
cmp
fisubr
jae
sub
mov
movs
je
push
daa
outs
jmp
ss
in
ja
inc
add
xchg
js
inc
xchg
shl
sub
retf
cli
add
lods
daa
retf
js
aam
mov
scas
lds
stos
cmp
add
imul
inc
jae
mov
and
dec
lahf
xchg
xor
jl
push
xchg
movs
and
cmp
movs
or
shr
lods
test
movs
pop
rcr
js
rcl
(bad)
jnp
cli
or
dec
mov
sub
outs
fwait
and
dec
inc
pop
inc
pop
test
(bad)
and
fcom
cmp
or
sbb
mov
fld
xchg
pop
mov
cmp
or
sar
lods
mov
aad
movs
mov
mov
out
mov
xchg
popa
jno
sbb
sbb
xor
mov
or
mov
xchg
sub
fwait
pop
cmc
cmp
mov
scas
mov
adc
ds
movs
pop
daa
push
inc
nop
lea
aam
not
pop
and
test
dec
sub
xchg
push
loope
(bad)
shl
(bad)
cli
push
in
hlt
iret
pop
imul
sub
movs
cmp
xchg
mov
inc
in
push
pop
xor
retf
mov
xor
sub
or
xchg
cld
(bad)
fidiv
push
div
mov
xchg
cmc
shr
inc
cld
adc
dec
sbb
add
mov
xchg
sbb
pop
push
push
inc
test
je
inc
mov
stos
xchg
into
xchg
sub
mov
test
pop
and
sbb
push
mov
pop
sub
outs
cs
xchg
aaa
mov
ja
pushf
jbe
loop
sbb
adc
sbb
retf
ret
mov
loop
sub
fimul
jg
xchg
imul
sbb
outs
add
in
adc
jb
mov
pop
sub
and
sbb
ret
repnz
or
push
in
out
add
test
mov
mov
test
push
clc
dec
fst
cmp
jge
pop
outs
test
cmp
shr
repz
cwde
jne
fcmovne
gs
ss
push
pop
mov
in
call
arpl
pop
cmp
rol
or
xchg
leave
lods
jo
mov
push
add
pop
outs
scas
fisttp
stos
and
js
rcl
add
pop
sub
icebp
sub
xor
mov
in
xchg
out
or
and
xor
dec
ror
xor
inc
dec
repnz
arpl
lahf
in
mov
jl
(bad)
loope
mov
je
jmp
push
pop
inc
and
xchg
pop
dec
dec
sub
inc
out
es
das
sub
xchg
mov
dec
or
cdq
js
dec
push
(bad)
neg
cmp
adc
aaa
sbb
popf
fidivr
hlt
out
popf
call
sti
mov
push
add
in
loope
imul
push
xrelease
sub
jae
cmc
and
mov
int
leave
mov
repnz
cmp
adc
mov
sub
mov
or
and
dec
call
mov
mov
das
(bad)
pop
into
inc
mov
sar
popf
imul
hlt
lods
and
into
jle
aas
lahf
pop
sub
xor
cmp
pusha
lds
leave
imul
bound
inc
push
imul
pop
sub
lods
mov
xor
out
ds
in
stos
outs
push
std
dec
or
fisttp
les
les
clc
xchg
jb
push
imul
xchg
cmc
es
or
mov
sahf
jecxz
aam
mov
mov
jno
pop
fs
sbb
loop
dec
pop
sbb
(bad)
mov
scas
or
fistp
sub
or
ins
cmp
pop
ficomp
xchg
jnp
jecxz
push
cmc
stc
jge
pop
push
out
pop
into
rcr
std
pop
sub
fldenv
in
imul
sbb
imul
xor
pop
adc
cmp
inc
mov
rol
nop
das
lods
data16
and
imul
mov
adc
loopne
xor
xchg
pop
jecxz
add
fist
dec
sbb
jp
inc
sahf
adc
pop
fadd
xor
ss
adc
cmp
jmp
add
cmp
mov
cmps
(bad)
icebp
retf
xor
push
movs
dec
out
ss
and
enter
ds
stos
or
push
movs
mov
stos
shl
sub
shl
xchg
aas
cmps
test
enter
ja
adc
fwait
(bad)
jno
xchg
xlat
out
loopne
sbb
xchg
lods
jns
push
sub
mov
retf
lods
enter
pop
add
pop
leave
scas
mov
adc
cli
jae
jp
ds
mov
sbb
aam
dec
sbb
xor
icebp
jg
stc
sub
sbb
aad
xchg
sub
sahf
xchg
cld
retf
test
enter
aaa
icebp
cmp
jg
push
loopne
push
mov
adc
add
inc
imul
mov
pop
mov
neg
or
ins
sbb
iret
or
cmps
repz
dec
enter
out
mov
lock
ins
mov
jle
mov
(bad)
gs
(bad)
imul
xor
or
and
mov
xchg
arpl
mov
dec
sbb
fimul
push
nop
es
and
push
retf
push
fild
mov
mov
sbb
adc
add
sub
in
mov
mov
mov
(bad)
ror
xor
enter
pop
inc
or
sub
adc
jle
mov
dec
(bad)
retf
les
mov
jmp
pop
pop
repz
mov
sub
jae
ja
stos
cmp
out
xlat
fs
dec
cmp
(bad)
mov
pop
das
or
das
jo
stos
cdq
xchg
push
aad
jg
jbe
pushf
daa
pop
(bad)
jecxz
push
ss
adc
cmc
push
sahf
lahf
popf
lar
shl
ja
rcr
cld
int3
lock
push
mov
mov
call
xor
into
sub
ficom
popa
test
in
mov
aaa
mov
add
aam
dec
mov
mov
ret
mov
xor
sub
sub
adc
imul
loope
ss
fisubr
sbb
test
(bad)
aas
ficom
and
cmps
sub
arpl
or
loopne
dec
sub
pusha
mov
cmp
cld
jg
repnz
lods
pop
xchg
xchg
xchg
lahf
cmp
jg
xchg
bound
lock
std
lds
inc
int
rcr
repnz
das
(bad)
mov
cwde
ret
test
retf
xor
imul
and
and
sub
mov
xor
fisub
mov
push
in
hlt
sub
popf
push
mov
ret
inc
daa
es
das
sub
(bad)
lock
in
cmps
cmp
jne
shl
push
pop
or
call
push
popa
push
lods
mov
into
dec
inc
push
outs
fnsave
popf
cld
sbb
cdq
movs
sub
xor
dec
inc
jle
mov
(bad)
rol
out
push
cmp
sahf
mov
ret
icebp
mov
je
(bad)
push
mov
xchg
inc
push
fistp
jb
imul
push
mov
sub
inc
sbb
sbb
daa
in
mov
push
repnz
xor
dec
adc
call
hlt
mov
xchg
test
sahf
push
stos
pop
xlat
pop
fidivr
loope
test
cwde
inc
and
out
shl
(bad)
ins
mov
mov
(bad)
adc
shl
outs
mov
cdq
adc
pop
in
pop
jmp
pop
inc
mov
lock
mov
xor
adc
call
test
pop
je
and
daa
push
inc
fiadd
lods
mov
fistp
sub
mov
pop
mov
inc
je
sar
and
cmp
in
jnp
popf
mov
scas
enter
or
jl
lods
push
push
pop
add
push
pop
jne
jp
adc
push
cmc
sbb
outs
call
sub
pushf
sub
dec
mov
cmp
rol
sub
xchg
mov
fwait
push
shl
je
jns
mov
jmp
imul
test
cmps
or
push
mov
adc
and
sbb
ret
mov
mov
mov
adc
loope
or
and
sub
fst
stos
push
fstp
rcl
call
sub
iret
repnz
xchg
jno
jmp
lahf
popa
sub
mov
cmp
sbb
or
dec
mov
(bad)
adc
imul
adc
push
sub
xchg
adc
jmp
sbb
es
out
jp
(bad)
pop
pop
sub
popa
sub
ins
dec
into
cmp
jne
scas
(bad)
mov
xchg
mov
mov
jmp
jmp
push
sbb
(bad)
or
cwde
fild
sar
jp
and
jle
adc
out
adc
jl
movs
int
pop
push
push
pushf
into
pop
add
(bad)
hlt
jbe
out
rcr
xchg
adc
push
(bad)
mov
mov
sbb
shl
and
test
mov
scas
cmp
fs
dec
test
pop
xor
push
xor
and
fldenv
pop
out
sub
bound
adc
in
imul
mov
sbb
ds
into
jb
cmp
loope
inc
dec
scas
pop
iret
es
jne
adc
fistp
jp
in
fdiv
push
xchg
loope
jle
pop
test
fisttp
mov
in
or
inc
jp
sbb
nop
ret
sbb
cs
sbb
mov
sbb
xchg
jbe
cwde
cmp
ds
inc
fisttp
inc
dec
jge
ficomp
xor
outs
ret
jnp
sbb
cmp
outs
lock
adc
xchg
cmp
mov
mov
fdivr
daa
dec
in
mov
inc
and
out
push
fst
jl
mov
cmp
(bad)
adc
out
jge
cmp
cmps
mov
push
push
in
xor
sbb
scas
out
idiv
sub
pop
sbb
xchg
icebp
xchg
mov
dec
ss
pop
push
ficomp
mov
ins
jmp
fst
outs
jmp
mov
shl
lods
lods
or
sbb
xor
xchg
mov
aam
cwde
cmp
or
out
scas
mov
(bad)
dec
xor
push
int
mov
in
sub
fiadd
stos
jl
push
(bad)
(bad)
jg
test
sub
fild
lods
call
cmps
ins
xchg
fidiv
ins
push
pop
add
ret
ja
and
mov
fdivr
push
test
or
lock
mov
sbb
movs
or
xchg
mov
adc
add
das
push
bound
dec
jno
add
call
pop
and
jge
dec
lds
jl
pop
cli
pusha
dec
daa
jo
and
arpl
dec
fsub
out
adc
jmp
icebp
fnstenv
sub
imul
jnp
lea
gs
inc
mov
les
inc
mov
cmp
jp
and
xor
es
movs
pop
aad
fbld
xor
pop
in
leave
rol
test
es
or
pop
adc
xchg
aam
jl
lods
dec
ins
cmp
into
mov
push
cmc
pop
mov
jmp
imul
fwait
ds
(bad)
retf
sbb
mov
pop
test
sti
mov
inc
and
xor
jns
nop
or
ret
and
(bad)
call
clc
les
push
ror
hlt
sub
or
add
fnstenv
inc
ins
cwde
push
out
or
push
mov
retf
mov
lods
cmp
and
push
mov
outs
and
inc
test
sub
mov
leave
add
mov
int
adc
outs
sbb
sahf
outs
xor
fistp
es
fwait
inc
sub
test
lds
clc
repz
inc
or
jne
push
mov
fld
cs
dec
mov
and
push
(bad)
pop
sahf
fadd
sub
xchg
mov
lahf
xlat
imul
lods
jno
mov
mov
inc
xor
xor
in
outs
pop
(bad)
into
imul
push
mov
cdq
icebp
xchg
dec
mov
mov
pop
(bad)
in
(bad)
fdivr
pusha
pop
push
jmp
or
mov
mov
sub
test
jno
jbe
mov
sbb
xchg
(bad)
in
in
push
or
sar
jno
xchg
fsubr
loopne
jae
mov
mov
inc
retf
je
outs
data16
int
fcmovnu
pop
sbb
lods
out
bound
pushf
cmp
xor
mov
push
movs
dec
push
jge
sbb
lds
xchg
aas
repz
movs
sahf
das
push
stc
not
mov
lahf
js
inc
or
retf
cmps
mul
sbb
in
sbb
mov
inc
out
pop
fist
(bad)
bound
and
ror
sub
cmp
wbinvd
popf
lea
mov
rol
mov
push
sub
aad
cli
mov
dec
inc
aaa
cmp
test
jecxz
(bad)
outs
test
or
cmp
idiv
push
mov
mov
xchg
jne
fimul
into
jo
int3
aaa
aad
stc
mov
in
sub
push
outs
sub
inc
shl
mov
fadd
jne
adc
mov
push
(bad)
jo
and
fcomi
mov
sub
fwait
mov
popa
cmp
pop
push
mov
aam
pushf
jle
or
add
imul
push
pushf
xchg
(bad)
es
aad
(bad)
adc
mov
or
add
jnp
outs
test
add
fcmovb
jns
mov
sbb
mov
icebp
mov
nop
fsub
icebp
push
retf
push
rol
mov
clc
mov
jo
mov
shl
lds
fnstcw
dec
test
repnz
push
ds
rol
call
cs
pusha
mov
pop
mov
int
and
mov
leave
std
xor
mov
add
hlt
into
out
arpl
(bad)
jne
clc
hlt
test
xchg
std
popf
retf
and
hlt
add
popa
xor
fcom
lock
enter
jbe
dec
cmp
and
add
and
test
push
leave
imul
hlt
arpl
jnp
add
inc
repz
and
pop
mov
push
inc
aad
mov
jp
aas
es
int3
cwde
mov
add
inc
hlt
(bad)
sub
push
dec
push
lds
repz
cmps
dec
push
inc
or
fstp
mov
call
sbb
mov
jp
in
(bad)
or
stc
fdiv
xchg
out
xchg
push
stos
pop
mov
jp
mov
into
cmc
jp
or
cdq
pop
add
sti
outs
pop
movs
sub
or
or
xchg
push
mov
mov
jmp
retf
or
and
cmps
push
xchg
jmp
dec
(bad)
imul
xor
sub
xchg
pop
pop
fistp
jmp
in
adc
shl
in
arpl
inc
js
es
out
add
popa
cs
mov
(bad)
mul
mov
in
fstp
add
pop
les
retf
loop
push
push
(bad)
ins
dec
mov
push
(bad)
and
and
xchg
loop
and
movs
add
inc
fnsave
mov
fidivr
cmp
pop
xor
(bad)
popa
and
inc
dec
add
test
(bad)
in
and
fst
ins
fs
imul
mov
(bad)
and
mov
xor
mov
mov
xchg
(bad)
push
push
xor
aam
outs
cmp
mov
inc
jbe
cwde
xor
or
xor
jnp
pop
inc
test
test
mov
xlat
pop
push
pushf
sbb
out
aaa
add
sub
inc
push
fimul
cmp
pop
and
inc
dec
loopne
aad
push
mov
adc
in
ror
ja
and
dec
xchg
imul
inc
adc
inc
dec
xor
popa
jne
or
sbb
in
outs
or
pop
movs
cmc
lea
jmp
out
or
mov
out
add
inc
jae
rcr
push
mul
pop
test
cmps
inc
sahf
or
jecxz
xchg
mov
add
ds
dec
push
or
mov
es
sbb
dec
call
mov
cli
jmp
sahf
or
mov
xchg
cmp
test
or
ret
test
shl
loope
xor
jns
sbb
dec
in
and
mov
push
call
or
pop
ins
das
scas
cmp
jge
jp
loop
jb
test
loopne
sbb
cdq
addr16
(bad)
lock
punpckhdq
ficomp
mov
inc
aam
outs
push
jle
push
xchg
adc
cmp
daa
call
mov
dec
jle
in
cmps
push
pop
mov
out
(bad)
mov
loopne
jae
mov
jbe
mov
rcr
jae
dec
adc
xchg
jnp
xchg
mov
cmps
jg
jmp
in
and
cmp
sbb
and
repz
inc
dec
in
add
ins
cmp
mov
dec
mov
retf
xchg
retf
push
push
mov
lods
xor
int3
sbb
(bad)
sbb
inc
lea
(bad)
out
cmps
je
call
adc
dec
inc
push
mov
sub
inc
push
xchg
push
adc
push
enter
xorps
aas
out
pop
js
xor
xor
mov
nop
and
adc
(bad)
data16
mov
addr16
arpl
and
test
inc
and
mov
fcom
ins
shl
repz
imul
dec
std
add
loope
scas
outs
ret
pop
movs
jne
jmp
sar
or
add
das
les
test
push
xor
sub
jne
test
adc
push
jmp
imul
aas
clc
mov
cmps
xlat
push
(bad)
sti
mov
cmp
sbb
imul
adc
shl
aam
and
jbe
jae
mov
push
pop
jl
ss
mov
adc
ss
inc
test
jmp
push
in
push
mul
nop
(bad)
pop
adc
xor
sbb
(bad)
mov
pop
out
addr16
sbb
cmp
mov
cmp
jp
es
repnz
jns
adc
fisubr
or
lock
push
cmps
add
cwde
push
dec
sub
popf
xlat
jno
lods
adc
jmp
movs
pop
add
popf
dec
repnz
lds
inc
bound
dec
cmp
call
add
inc
jno
and
mov
ins
sti
loop
imul
adc
lods
jo
scas
add
jle
mov
and
cmp
xchg
ds
lds
mov
push
add
out
mov
popf
lock
jge
mov
(bad)
pusha
xor
add
sbb
call
clc
cmps
mov
popf
sub
jno
daa
imul
into
xchg
movs
out
fs
mov
mov
aas
cs
je
sub
jp
adc
xchg
stc
or
ja
loopne
in
mov
xor
cwde
jecxz
cmp
inc
ins
leave
js
stos
ins
fnstenv
stos
fs
cmp
test
std
dec
mov
or
in
mov
pop
mov
jg
inc
test
test
je
fmul
jo
mov
inc
rcl
cmp
call
xor
sbb
mov
push
inc
pop
iret
inc
jbe
loop
popa
in
and
cmp
cmp
adc
jne
mov
neg
test
test
pushf
adc
nop
pop
inc
retf
mov
xor
jo
add
mov
movs
adc
inc
in
jmp
sbb
adc
xchg
mov
cmps
inc
outs
in
adc
in
jg
clc
fidiv
push
dec
lock
lods
shl
int3
mov
jmp
push
(bad)
mov
int3
xor
outs
pop
sub
xor
jne
jo
push
mov
pop
sub
pop
addr16
xchg
sar
mov
test
(bad)
in
xor
adc
cmc
inc
xor
pop
cmp
xchg
enter
out
(bad)
shr
xor
icebp
ror
ins
sbb
out
mov
xchg
stos
mov
les
push
(bad)
sahf
xor
jmp
xor
test
sbb
ja
mov
outs
sub
jbe
fmul
sub
mov
std
sub
push
fs
enter
sub
xor
out
std
cli
xor
adc
jmp
mov
imul
iret
iret
int
rcl
fwait
jno
repz
fdivr
or
sbb
cmc
or
lods
fcmovnbe
mov
pop
inc
inc
les
sti
adc
aas
jne
mov
or
aaa
cmp
inc
in
or
nop
sti
push
mov
sbb
pop
pop
cmc
cmp
(bad)
stc
mov
jbe
outs
call
xlat
pop
daa
jmp
mov
(bad)
pop
inc
push
movs
or
jb
mov
repz
sub
push
(bad)
out
cli
(bad)
fbld
xor
xchg
ss
adc
in
pop
call
test
fadd
pushf
arpl
adc
sub
test
jl
addr16
sub
cld
in
scas
pop
mov
pop
movs
adc
fstp
adc
mov
xor
stc
cli
pop
pop
aad
rcl
push
mov
test
and
test
push
mov
ja
sbb
mov
(bad)
mov
je
jge
repz
fstp
sbb
xor
mul
cli
jmp
outs
aam
je
jnp
(bad)
loope
int
cli
fdiv
sbb
fisubr
cmp
pushf
xor
mov
and
int
add
test
test
int3
imul
xchg
or
add
sub
aad
test
imul
mov
(bad)
leave
pusha
mov
adc
mov
sahf
mov
cmps
pop
outs
xchg
xor
mov
sbb
scas
movs
(bad)
div
sbb
add
out
das
push
loope
mov
imul
sbb
mov
repnz
test
ins
pop
dec
adc
retw
cwde
jo
mov
shl
sub
ret
sbb
les
rcr
imul
mov
jns
in
push
shl
popa
push
jmp
cmc
sbb
ins
fs
in
leave
imul
scas
dec
out
popf
imul
pop
enter
(bad)
push
int3
fcomp
test
dec
mov
mov
jo
ja
jns
cs
add
fsub
push
(bad)
out
cmp
mov
gs
fidiv
test
test
xor
xor
imul
or
repnz
sbb
fwait
(bad)
scas
and
cmps
(bad)
mov
shl
mov
popf
mov
and
ins
popf
sbb
xor
out
inc
or
fnstsw
push
pop
nop
(bad)
scas
nop
mov
jbe
jecxz
ucomiss
push
out
imul
in
or
test
push
je
(bad)
adc
sub
pop
push
add
push
xchg
shr
lock
and
mov
es
gs
movs
xchg
cmc
and
in
fisttp
adc
shr
mov
loopne
mov
out
mov
xor
xchg
pop
mov
out
xchg
mov
fistp
pushf
sub
repnz
sub
ret
cmp
fcomp
push
or
pop
sbb
and
rol
xchg
icebp
pusha
loopne
out
shl
mov
add
ret
lea
push
pop
cmp
add
in
jecxz
inc
imul
mov
fidivr
das
leave
mov
xchg
dec
xor
or
cmp
enter
mov
in
popa
stos
(bad)
jp
jecxz
mov
and
ret
mov
fucomip
rcl
test
aam
movs
ins
xchg
mov
jae
movs
push
outs
xchg
inc
xor
pop
iret
jns
sbb
in
push
inc
push
pop
enter
in
adc
icebp
in
mov
aam
das
mov
xor
aaa
and
jne
arpl
ret
xchg
int
ins
sub
mov
nop
das
fdiv
dec
(bad)
mov
dec
popa
adc
fld
push
and
xor
xchg
fs
dec
daa
pop
mov
or
mov
push
push
jg
push
dec
lods
pop
mov
inc
in
jo
out
push
addr16
dec
in
aad
xchg
xchg
leave
dec
shl
push
in
mov
test
gs
movs
cmps
jbe
or
jp
jnp
ins
pop
nop
cmp
lock
aaa
push
(bad)
cld
xlat
jae
xchg
sbb
mov
sub
sahf
dec
(bad)
out
repnz
push
loop
enter
mov
bound
dec
out
mov
mov
les
push
aam
das
ja
das
jmp
push
outs
repnz
(bad)
shl
sbb
mov
lock
imul
adc
(bad)
mov
pop
cmp
cdq
aaa
cmps
adc
xlat
stos
fmul
push
sub
jbe
push
les
test
clc
cmp
shl
outs
dec
(bad)
jge
push
mov
ss
adc
push
call
push
or
mov
adc
add
mov
cmps
adc
add
or
or
mov
mov
sbb
push
sub
loop
push
or
clc
inc
mov
sbb
(bad)
mov
fstp
dec
enter
ins
pusha
mov
inc
ins
leave
push
ficom
or
dec
cld
data16
(bad)
repnz
in
test
push
xlat
shl
mov
inc
add
pop
push
and
sbb
add
fs
adc
loopne
fadd
cwde
shl
cmc
sbb
cmps
pop
jl
clc
jae
test
shr
push
mov
or
iret
dec
mov
or
dec
call
pop
pop
or
(bad)
adc
cmp
call
push
dec
lahf
js
cmps
and
adc
add
fisub
scas
jae
push
daa
test
xchg
mov
push
rcl
mov
in
pop
dec
inc
retf
outs
ret
inc
cdq
pushf
prefetcht2
adc
int
mov
adc
add
loopne
or
inc
jnp
sub
punpckhwd
prefetcht0
or
sub
sub
pop
push
dec
or
aas
sub
inc
daa
cmps
mov
sbb
aaa
cmc
icebp
xchg
out
inc
bnd
mov
call
inc
sbb
(bad)
cs
mov
or
cwde
outs
lods
hlt
js
loopne
daa
mov
ja
(bad)
popa
loop
xchg
fwait
int3
lds
adc
test
ja
cmp
mov
test
iret
(bad)
iret
dec
mov
jl
push
cdq
popa
xor
mov
mov
ret
call
call
push
push
mov
or
fcomp
adc
push
pop
imul
ret
jb
and
out
icebp
push
sahf
and
out
iret
sub
out
movs
int
(bad)
jcxz
fs
jmp
add
enter
aas
imul
mov
add
inc
sbb
jp
out
mov
mov
and
stos
jno
scas
cmp
sbb
and
mov
aas
add
test
xchg
cmp
hlt
mov
daa
inc
test
outs
xchg
leave
pop
xor
repnz
xor
mov
mov
fxch
dec
adc
dec
add
jle
inc
pop
test
add
clc
inc
add
cdq
scas
add
sub
rcr
mov
nop
cli
arpl
js
mov
jecxz
sbb
shl
xchg
xor
jp
cdq
cmps
pusha
push
jne
leave
or
push
adc
jbe
or
aad
inc
mov
or
fadd
fist
and
inc
dec
pop
es
xor
mov
or
aas
bound
cmp
pop
dec
xlat
bound
xor
pusha
dec
or
leave
mov
or
push
inc
arpl
sbb
or
std
loope
push
push
into
(bad)
cmp
pop
mov
test
dec
arpl
or
sbb
fisubr
xchg
(bad)
sar
icebp
jp
or
sbb
sbb
xor
jle
das
pop
je
call
nop
test
add
loope
loop
aaa
push
add
fstp
clc
pop
imul
mov
jb
lods
mov
lds
nop
add
push
lds
or
repnz
retf
hlt
fld
or
mov
adc
lods
dec
imul
fiadd
jnp
dec
adc
jb
adc
push
add
xchg
arpl
sbb
icebp
(bad)
add
pop
add
inc
stc
popf
mov
mov
enter
rol
outs
sar
fld
in
mov
movs
int
mov
push
imul
xchg
sbb
loopne
mov
inc
jo
out
js
inc
stos
push
inc
enter
dec
jge
xchg
and
or
fwait
test
imul
xchg
(bad)
pop
pop
mov
mov
xor
pop
push
fnstsw
lods
outs
pop
scas
jno
pop
mov
or
jb
lods
fwait
repnz
mov
pop
jle
fwait
js
adc
stc
inc
test
xor
je
stc
das
and
or
les
adc
(bad)
push
ror
fcmovbe
cmp
dec
push
push
xchg
sbb
xchg
clc
cdq
jno
lahf
mov
mov
movs
ffree
fucomp
in
stos
add
jp
ret
add
ret
inc
cmps
test
mov
hlt
retf
dec
fwait
or
sub
loopne
jns
mov
(bad)
xor
adc
mov
or
fcomp
mov
and
pushf
push
mov
sahf
sub
sub
loopne
pop
ja
(bad)
xor
dec
call
lds
lahf
loop
call
test
mov
idiv
cmp
ins
mov
aam
dec
sbb
data16
in
pop
(bad)
lfs
or
sbb
mov
dec
add
aaa
mov
cmp
int3
test
push
pop
sub
lock
loop
xchg
or
add
out
outs
out
sub
bound
sub
mov
jle
pop
mov
retf
push
aaa
mov
aaa
mov
hlt
push
(bad)
jmp
and
data16
mov
sub
mov
popf
fisubr
jns
mov
leave
jo
es
unpckhps
gs
jns
inc
cmc
loop
movs
xor
mov
in
mov
push
outs
movs
jp
and
arpl
out
fimul
bswap
or
jmp
or
test
loopne
and
sub
in
shl
sub
jge
jnp
dec
movs
inc
movs
sbb
fadd
pop
mov
lods
ins
loopne
mov
adc
iret
mov
int
mov
xor
push
fstp
lock
jnp
cmp
icebp
sub
adc
dec
movs
test
or
push
adc
nop
gs
hlt
and
mov
xor
push
xor
mov
add
jae
xchg
pop
mov
or
jle
sar
jmp
idiv
mov
mov
mov
rcr
or
cmps
push
in
imul
pop
sbb
inc
sahf
push
and
push
mov
enter
push
jo
pop
mov
push
xchg
fs
std
ja
cmps
pop
fwait
daa
add
mov
cmp
mov
xchg
test
pushf
arpl
dec
shl
sti
mov
and
fiadd
mov
mov
or
jp
int
in
(bad)
xchg
xchg
cmp
out
xor
and
dec
or
jmp
inc
dec
(bad)
sbb
sbb
int3
std
jmp
not
add
out
jb
inc
pop
mov
sbb
arpl
jae
repnz
jnp
cld
jmp
cli
imul
cmp
pop
lea
push
ja
jg
push
mov
bound
and
sti
dec
xchg
adc
arpl
stc
(bad)
jo
rcl
in
add
dec
add
data16
rcl
popa
(bad)
cld
(bad)
push
cli
pop
xchg
sbb
out
lods
jno
pushf
dec
or
test
ins
in
inc
adc
mov
xchg
shl
or
loope
push
les
mov
jecxz
hlt
std
dec
pop
imul
lock
iret
retf
popa
mov
mov
xor
mov
(bad)
jmp
xor
jg
pushf
mov
loopne
add
push
imul
lods
in
push
stos
out
cmp
f2xm1
stos
lahf
mov
out
mov
dec
xchg
movs
repz
(bad)
xlat
pusha
jae
std
dec
xor
mov
mov
mov
in
mov
outs
mov
dec
jge
(bad)
out
mov
inc
test
fdiv
mov
test
ret
pop
in
mov
aaa
test
ret
shl
test
xchg
sbb
pop
sahf
cmp
outs
loopne
mul
loopne
sahf
das
fiadd
xchg
mov
data16
popf
jecxz
inc
mov
clc
mov
push
aam
push
cli
mov
out
not
test
es
sbb
mov
add
sub
je
mov
in
sbb
out
es
mov
rol
dec
pop
movs
xchg
add
jmp
mov
sub
mov
popf
ds
in
dec
pop
fs
or
pushf
rcr
pop
jbe
sbb
mov
(bad)
jo
std
cmps
hlt
iret
aam
call
rol
add
and
fcomp
pop
jmp
loope
out
aam
out
mov
or
cmp
dec
(bad)
jne
dec
pop
scas
cwde
retfw
or
inc
mov
aaa
jmp
xchg
sub
sbb
loopne
or
pop
loop
xchg
inc
or
and
cmp
jno
and
and
dec
int3
mov
ds
lods
lea
call
push
sub
iret
xchg
ins
pop
nop
ins
mov
mov
add
xor
jmp
fidiv
sti
adc
xchg
aas
(bad)
out
test
cmp
mov
sub
gs
int3
pop
sbb
lds
popa
cs
mov
and
retf
rcl
xchg
mov
dec
movs
fs
push
push
adc
jno
pop
push
neg
fild
add
adc
inc
mov
push
cld
scas
mov
push
test
daa
in
mov
and
mov
(bad)
sahf
push
sub
les
inc
aam
pushf
test
dec
out
imul
pop
jbe
(bad)
popf
add
shl
push
jne
pop
sbb
iret
mov
movs
and
xor
test
(bad)
ins
rcr
mov
and
pop
in
dec
test
mov
inc
pushf
dec
mov
push
mov
aaa
adc
fld
pushf
jg
mov
inc
mov
and
std
jne
int
dec
out
push
clc
js
jecxz
mov
in
arpl
clc
xchg
mov
jbe
scas
adc
mov
fdiv
enter
sti
dec
mov
jge
sub
repnz
or
rep
outs
inc
test
bnd
jbe
or
inc
out
and
cmps
push
retf
push
and
mov
shl
mov
cmp
inc
mov
xor
jmp
sar
mov
dec
jnp
pushf
outs
mov
test
call
mov
frndint
ss
mov
mov
(bad)
outs
jmp
aas
add
bound
leave
in
jno
mov
mov
jb
cmp
jge
in
adc
mov
inc
fnsave
jbe
lds
mov
shl
xchg
test
mov
test
call
movs
pop
ins
outs
or
xor
dec
ror
add
inc
dec
out
pop
mov
xor
cld
fstp
popa
mov
xchg
mov
leave
mov
shr
pop
int
inc
dec
out
xchg
repz
lea
(bad)
sub
jge
(bad)
push
stos
ficomp
dec
mov
xchg
jns
xor
ds
mov
lahf
shr
dec
inc
xchg
(bad)
mov
sar
dec
cmp
pusha
retf
daa
or
movs
jg
addr16
test
int3
lahf
or
xchg
push
mov
shl
xchg
pop
sar
retf
and
xor
stc
cmps
loopne
mov
daa
jp
fcmovnu
jns
out
jmp
nop
inc
out
push
out
imul
jb
push
aaa
cmps
cs
fbstp
repz
ins
mov
pop
cli
or
scas
push
jbe
ffree
xchg
retf
(bad)
int
ficomp
push
pop
sbb
fadd
mov
aas
sub
cld
imul
fs
mov
mov
xor
in
cmp
mov
mov
lahf
fiadd
push
test
inc
pusha
sbb
dec
cmp
out
cmp
mov
mov
cmp
xchg
xchg
loopne
rol
sub
lahf
addr16
jnp
retf
add
sub
sbb
addr16
pop
pop
stos
in
movs
cmps
pop
sbb
repz
push
and
dec
mov
inc
push
ss
ss
pop
cmp
shl
out
(bad)
pop
pushf
loop
int
iret
rcr
cmc
cdq
adc
lahf
inc
xchg
iret
push
jle
out
bound
icebp
popf
dec
in
cmps
push
movs
xchg
sub
sub
dec
dec
sub
adc
retf
aaa
mov
shl
sbb
sub
ds
or
cmp
cmp
rcl
inc
adc
in
pushf
pop
aad
mov
sti
mov
mov
in
sbb
jp
pop
mov
xor
mov
aad
shl
inc
push
mov
pushf
outs
mov
pop
ret
jp
(bad)
push
retf
arpl
jg
dec
mov
std
jns
sar
imul
cmps
cmp
cmps
out
dec
cs
inc
addr16
in
(bad)
adc
movs
and
loope
adc
lods
jmp
test
rcr
mov
mov
div
sti
popa
jno
jmp
jno
push
ficom
jns
adc
adc
push
fxtract
imul
repz
fnstsw
fst
clc
jecxz
retf
adc
dec
ror
fiadd
jmp
jg
pop
cld
push
scas
add
xlat
clc
sahf
stos
sar
psrlq
jp
mov
adc
xor
mov
pop
mov
or
pop
cwde
popa
test
cwde
xor
adc
inc
dec
pop
addr16
ja
adc
xor
imul
movs
inc
jnp
enter
xchg
xor
test
into
inc
xchg
movs
repnz
xchg
out
inc
dec
mov
setno
pop
sbb
pmullw
aaa
scas
dec
fst
or
call
adc
lahf
fiadd
inc
ret
js
adc
jg
inc
ret
dec
sbb
cdq
int3
or
fdiv
pop
(bad)
push
fucomi
scas
mov
popa
sub
fcmovnb
retf
inc
dec
fwait
sbb
inc
or
xchg
mov
stc
and
cmp
rcr
fsubr
aas
xchg
inc
clc
shr
nop
cmp
ret
std
stos
add
leave
inc
pop
lods
or
push
leave
in
loope
dec
and
stos
sub
popf
loop
xchg
mov
jmp
mul
mov
or
fsub
adc
push
mov
xchg
movs
sbb
fyl2xp1
xchg
mov
adc
rcr
dec
and
ror
inc
or
xchg
jge
push
in
in
dec
add
xor
addr16
add
mov
xlat
outs
ja
jno
inc
rol
jns
xchg
add
lds
mul
jae
dec
ror
fwait
jge
pop
sub
popa
dec
push
das
int3
imul
sub
ds
retf
loop
lods
rol
jl
inc
jp
mov
test
pop
mov
arpl
or
pushf
fiadd
and
inc
dec
cwde
cmp
test
shr
add
dec
in
dec
rol
fadd
xchg
xor
xchg
cs
adc
outs
and
mov
lahf
into
int
xchg
es
in
mov
inc
mov
frstor
push
cmps
icebp
dec
push
cmp
adc
mov
in
jmp
pop
jle
inc
pusha
pop
jmp
or
shl
mov
bound
pop
pop
sub
push
push
adc
sub
adc
pop
mov
fmul
jl
or
xor
and
push
jmp
cwde
int3
mov
pop
xchg
cmp
stos
adc
jmp
pusha
adc
adc
push
add
test
pop
and
rcl
add
push
push
or
mov
pop
sbb
push
(bad)
and
sti
push
push
inc
mov
inc
dec
cmps
cmps
mov
add
movs
mov
xchg
fimul
das
push
sub
cmp
xlat
popf
dec
popa
pop
pop
sbb
mov
push
je
sbb
and
and
inc
mov
pop
les
mov
inc
int3
push
pusha
dec
dec
xchg
xor
sbb
arpl
data16
imul
(bad)
add
cmovo
cmp
mov
cwde
mov
(bad)
sti
scas
nop
sbb
jle
push
xchg
(bad)
lea
and
test
fs
nop
aad
mov
lds
movs
mov
cmp
sbb
inc
sub
aam
jg
add
push
std
xchg
leave
mov
xchg
fs
mov
stc
rcl
mov
(bad)
lds
aam
xchg
push
js
inc
jns
jb
mov
jnp
imul
mov
and
stos
jbe
jmp
cmp
xor
out
out
mov
fsqrt
jecxz
pop
pop
leave
or
out
push
jle
div
icebp
les
jle
(bad)
add
in
aas
xor
push
xor
loopne
dec
js
cmp
jae
nop
pop
or
mov
jns
mov
pop
inc
pop
gs
fistp
or
push
call
repz
lock
arpl
icebp
(bad)
fld
les
pusha
out
inc
cmc
shl
test
stos
out
out
mov
push
jns
outs
adc
and
clc
xchg
mov
imul
ins
dec
push
xchg
xchg
(bad)
jne
and
push
cmp
adc
cmp
cmp
sbb
das
mov
(bad)
retf
out
pop
xor
arpl
and
ins
leave
test
jg
mov
jbe
loop
fwait
xchg
call
aam
pop
pop
and
pop
scas
cdq
sub
sub
les
mov
sbb
pop
je
sti
movs
test
adc
sub
rcr
pop
nop
int
imul
xchg
adc
or
and
jmp
inc
push
xlat
pop
loope
adc
js
ins
addr16
lahf
mov
lods
sar
ss
fdiv
push
jnp
pop
mov
out
in
mov
scas
or
mov
xor
popf
fcmovne
sbb
jae
cmc
ret
mov
mov
push
or
jno
lahf
push
iret
shl
and
mov
xor
adc
inc
stos
(bad)
jecxz
sub
rcr
ja
dec
sub
push
mov
push
xrelease
sub
test
xchg
repnz
out
mov
call
pop
jmp
cwde
cmps
push
loopne
and
nop
pop
pop
cmp
pop
cmovno
mov
sub
mov
stc
mov
fsubrp
cmp
jp
fst
mov
ja
test
and
xlat
jp
push
imul
dec
jae
push
mov
mov
jae
push
cmp
jb
call
jl
mov
jns
cwde
addr16
cmp
stos
hlt
ror
pop
mov
pusha
xor
(bad)
or
xchg
daa
xchg
jmp
inc
fwait
jns
xchg
pop
xor
jecxz
pop
sub
dec
ins
loope
jnp
ins
mov
movs
mov
ins
push
cmp
jp
adc
outs
xor
popa
mov
repz
fistp
(bad)
fdivr
lods
or
pop
cdq
loope
arpl
stos
out
dec
ds
lds
xlat
nop
lods
adc
stos
std
(bad)
sti
shr
sti
outs
aas
fwait
out
data16
mov
sbb
arpl
hlt
fdiv
adc
jecxz
push
rcl
jg
add
sbb
cwde
jl
mov
fidivr
jo
ret
fisttp
inc
dec
arpl
xchg
mov
xchg
add
call
sub
or
loope
pcmpeqd
push
dec
sbb
xchg
push
clc
xchg
call
call
adc
pop
adc
pop
mov
retf
dec
sbb
test
(bad)
push
mov
addr16
or
dec
fidivr
sbb
jmp
mov
pop
mov
pop
fmulp
scas
jns
movs
mov
xor
xor
or
xor
(bad)
imul
sbb
sbb
fadd
or
push
pop
fxch
pushw
call
movzx
loope
mov
(bad)
push
mov
cwde
cwde
out
dec
int
xor
xchg
rol
or
test
sahf
cld
imul
or
push
mov
sub
fnstenv
add
iret
out
sbb
mov
sbb
lods
xchg
es
stos
fwait
or
in
(bad)
enter
jge
push
mov
sbb
xor
cmp
sub
pop
xchg
das
dec
jnp
test
inc
adc
add
pop
xor
mov
imul
jmp
xchg
and
stos
int3
lahf
push
sbb
icebp
(bad)
pop
stos
sub
inc
ins
call
inc
cdq
pusha
dec
mov
xchg
ins
xchg
jge
sbb
cmp
test
push
mov
addr16
mov
xchg
idiv
pop
or
sbb
add
and
dec
adc
add
xchg
mov
(bad)
ins
fxam
and
(bad)
out
shl
mov
lods
lock
or
loop
lea
ja
enter
jp
mov
mov
mov
push
ins
mov
push
pusha
dec
adc
or
cmp
sbb
jl
gs
pushf
mov
mov
inc
sub
mov
test
add
add
or
ficomp
mov
clc
pop
push
push
push
(bad)
movs
shl
in
mov
fdiv
jl
mov
jns
mov
fld
mov
xchg
test
jmp
jmp
xor
cmps
daa
test
test
out
dec
imul
cmps
(bad)
adc
mov
push
xchg
jnp
push
test
mov
outs
imul
and
sti
les
les
dec
xchg
xor
sbb
outs
mov
hlt
pusha
pop
iret
ret
lahf
pop
fwait
add
cmp
sbb
hlt
pop
shl
xchg
loop
popa
adc
and
shr
jb
and
movs
jp
mov
in
rcl
(bad)
mov
lahf
or
xor
je
mov
jp
mov
fild
jnp
and
push
outs
dec
das
cmp
mov
inc
fwait
mov
inc
pop
inc
mov
add
sub
loop
pop
jge
aaa
shl
mov
lahf
push
cmp
cdq
in
popf
pop
mov
mov
dec
lahf
add
and
inc
mov
loope
ja
sar
mov
enter
movs
test
cmp
(bad)
call
mov
mov
test
sub
mov
mov
push
push
push
cmc
cmp
push
xchg
dec
dec
and
dec
hlt
pop
fwait
cmp
ins
xchg
loope
repnz
pop
fwait
and
or
in
xor
mov
jb
push
ror
dec
add
mov
repz
jbe
push
aaa
into
ror
arpl
retf
mov
scas
inc
dec
jb
jmp
push
push
xor
movs
jle
push
jge
mov
jmp
cmp
iret
xor
les
daa
iret
mov
jns
outs
jg
mov
or
dec
jmp
or
adc
mov
mov
test
shr
push
sbb
bound
cmp
xchg
popa
scas
push
xchg
pop
in
fwait
mov
loop
push
or
cwde
fsubr
inc
ins
xchg
jecxz
icebp
pop
jne
cmp
pop
or
fistp
sub
arpl
pop
sahf
sti
adc
dec
daa
mov
or
fnstenv
lea
push
pop
cdq
aad
mov
push
jecxz
and
(bad)
int3
cmp
iret
das
mov
mov
dec
jl
mov
dec
movs
jno
fwait
push
jns
ret
and
adc
cmp
rcl
sbb
loop
mov
mov
repnz
not
push
addr16
dec
loopne
mov
outs
fisttp
sub
iret
stos
bound
cld
xlat
sbb
ret
rcl
inc
pushf
data16
loopne
mov
xor
sbb
cmp
jmp
shr
loopne
das
inc
pop
sub
mul
dec
mov
scas
sbb
fisubr
adc
or
sbb
imul
mov
dec
iret
mov
cmc
cmps
cwde
push
add
sbb
mov
inc
test
test
sbb
xor
sub
lahf
jo
push
dec
inc
xor
pop
mov
popf
ja
fcom
mov
stos
jno
outs
push
dec
cli
aam
popf
call
xchg
xor
shr
sbb
push
(bad)
dec
mov
enter
xchg
dec
jo
or
dec
sbb
cli
in
(bad)
(bad)
aad
adc
mov
inc
es
cs
add
pop
and
xchg
mov
lahf
(bad)
int3
in
cmp
fwait
mov
dec
xchg
xchg
sub
dec
pusha
(bad)
xchg
cmps
pop
mov
out
test
cmp
rcr
dec
mov
xor
scas
arpl
jg
push
lods
or
addr16
fwait
in
(bad)
call
nop
jno
xchg
xchg
or
stos
dec
mov
rol
out
ret
mov
or
inc
popa
mul
sbb
or
call
jl
sbb
test
adc
xor
icebp
imul
jb
dec
push
pop
sti
stos
jmp
jns
pushf
mov
and
lds
push
test
jmp
adc
push
cmp
daa
adc
jns
xchg
aaa
mov
push
mov
inc
fdivr
jmp
(bad)
ins
dec
jb
movs
or
sahf
lock
push
dec
inc
sti
inc
push
dec
sub
pop
rcl
retf
fimul
call
test
ret
xor
mov
sbb
pop
add
daa
mov
add
das
aas
(bad)
or
inc
cli
and
dec
lahf
je
jns
xor
push
cmp
not
xchg
dec
aam
sbb
lds
sbb
jmp
jl
mov
fmulp
or
mov
pop
mov
in
(bad)
js
in
lods
out
fisubr
cmp
test
cs
mov
pop
and
adc
jno
imul
ret
cmps
cld
push
inc
stos
hlt
inc
push
fistp
loopne
xchg
dec
dec
popf
xchg
cmp
bound
pop
aas
mov
sub
and
movs
add
nop
into
inc
push
or
pop
add
sbb
jmp
dec
loopne
mov
mov
aaa
mov
fsubr
jl
rep
clc
add
enter
lods
sbb
movs
xchg
in
cli
arpl
inc
(bad)
xchg
adc
pop
mov
xchg
mov
out
fs
and
gs
aas
std
push
cmp
dec
mov
cld
out
mov
adc
stos
sbb
jp
mov
shl
inc
jbe
stc
xchg
popa
xor
jg
and
sbb
pop
test
add
loopne
push
xchg
xchg
(bad)
sub
mov
mov
pop
xor
dec
ret
aas
dec
mov
sbb
mov
pop
push
shr
stc
repnz
lods
aam
(bad)
or
push
jns
and
sbb
das
fnstsw
pop
imul
adc
mov
movs
repz
(bad)
mov
imul
repz
xchg
call
mov
cmps
dec
mov
dec
movs
int3
in
add
outs
xchg
or
and
or
fldcw
mov
cs
pop
std
sbb
stos
inc
mov
and
rcr
sbb
xor
ins
push
pusha
ins
dec
sub
add
div
xchg
jp
cmp
pushf
sbb
cmp
or
test
dec
inc
pop
loop
adc
int
icebp
shl
lods
push
sbb
add
rol
add
pushf
out
lea
fwait
jb
fucomp
(bad)
das
add
cmp
ins
ds
push
cmp
fs
cmps
cmp
dec
cli
jg
sbb
adc
imul
not
retf
stc
js
test
jne
sbb
adc
jne
jmp
iret
mov
pop
(bad)
fdivr
mov
and
jae
dec
inc
xor
add
adc
stc
outs
fcmovne
lods
icebp
outs
gs
fidivr
movs
ins
dec
mov
or
outs
push
fdiv
iret
ret
clc
pop
daa
out
cwde
enter
sti
pop
imul
pop
mov
jmp
pop
pushf
fwait
stc
pop
lea
push
repnz
rol
mov
lds
cmp
sub
push
clc
dec
mov
cmp
cmps
jno
jl
mov
jb
jnp
in
mov
(bad)
das
test
sbb
cli
push
mov
cmp
aaa
mov
fdivr
mov
retf
dec
xchg
or
ficom
mov
jmp
nop
and
xchg
outs
lds
xchg
aam
loopne
test
test
outs
loopne
and
cld
push
fsubr
dec
jae
bound
sahf
push
dec
int3
(bad)
or
ret
push
inc
retf
push
push
jnp
add
ins
iret
imul
jge
jg
dec
mov
cmp
sub
and
add
fucom
xchg
xor
stos
and
push
data16
test
sub
daa
inc
mov
mov
jnp
rcl
cmp
lods
cmp
mov
dec
test
aad
push
cmp
jmp
std
cmc
jp
sub
pop
xchg
cmps
sbb
stos
cmp
popf
xor
es
push
test
jb
mov
scas
cmp
sti
ds
(bad)
jge
add
cs
mov
jg
fnsave
inc
dec
ja
in
or
xchg
push
xchg
mov
mov
mov
mov
xchg
or
jp
jge
sbb
pop
in
scas
iret
or
std
fcomp
fld
cmp
jne
cwde
adc
imul
pusha
xchg
imul
jb
jnp
xchg
or
daa
xor
xor
push
xchg
mov
ror
(bad)
repnz
push
pop
nop
call
xrelease
jge
loopne
cmp
ret
adc
fmul
xor
mov
dec
mov
adc
sbb
rol
inc
fs
fwait
dec
shl
xlat
test
or
pop
mov
retf
test
push
or
sbb
repz
std
dec
fs
lds
(bad)
cmp
clc
fild
in
mov
cld
add
mov
push
push
outs
test
push
mov
xor
pop
ret
xor
dec
xlat
add
mov
aaa
add
ss
mov
int
jle
mov
nop
xor
sub
or
outs
(bad)
mov
or
mov
gs
cmps
sbb
or
mov
push
(bad)
dec
dec
pop
mov
pop
in
out
in
or
lea
ds
mov
or
fs
(bad)
mov
push
scas
test
rol
inc
push
outs
mov
jmp
xchg
ficom
xchg
inc
(bad)
ds
adc
(bad)
pop
mov
imul
ret
jnp
xor
loope
and
adc
idiv
mov
hlt
and
inc
sbb
fwait
imul
pop
fist
dec
daa
iret
mov
popf
jno
cmps
int3
or
jnp
inc
push
xchg
inc
jmp
cmc
mov
or
retf
cmp
es
or
jo
in
int
push
xchg
fist
dec
ins
add
dec
loope
(bad)
(bad)
fsubp
adc
pop
xor
push
loop
loope
int
or
jo
in
in
cmp
pop
cdq
jmp
fild
loope
lahf
jecxz
shr
call
mov
or
psraw
xchg
sbb
cmp
inc
out
mov
dec
dec
(bad)
lock
retf
hlt
hlt
pusha
add
cmc
jo
or
(bad)
rol
ds
ss
addr16
dec
(bad)
inc
xor
sub
loopne
mov
out
jl
jno
fstp
retf
pop
hlt
xchg
mov
stos
movs
jmp
mov
mov
xchg
jge
or
sbb
mul
mov
(bad)
js
push
lahf
mov
pop
cmp
fs
mov
(bad)
mov
cmp
mov
push
dec
cmps
pop
mov
mov
test
cdq
mov
cmp
shr
or
pop
cdq
sahf
mov
jns
mov
into
pop
push
pop
jne
fptan
pusha
stos
mov
xchg
loope
leave
xchg
cld
in
or
pop
lea
cmp
shl
add
gs
mov
jle
cmp
mov
push
stos
sub
push
xchg
jecxz
outs
fcmovne
mov
ins
xchg
(bad)
in
cmp
mov
push
rcr
dec
les
lods
shl
pop
test
into
aas
maskmovq
mov
mov
mov
mov
xchg
aam
jae
push
cmp
adc
and
out
mov
xor
bound
or
cld
out
xor
cli
fiadd
lds
fidivr
or
xor
mov
push
sbb
add
(bad)
push
jo
and
es
ss
aam
mov
call
popf
jg
push
loopne
xor
push
inc
ins
cmp
mov
mov
ret
sbb
sbb
or
sar
and
aas
xlat
sub
pop
jb
jo
push
dec
and
lahf
lea
dec
int3
adc
jmp
retf
mov
dec
or
repnz
test
pop
adc
dec
and
ror
and
scas
mov
sbb
cmp
sahf
adc
repz
scas
leave
pop
push
mov
mov
call
in
sub
call
fwait
ins
in
mov
xchg
jmp
inc
jl
mov
dec
mov
in
popf
jbe
lea
lock
xchg
stc
mov
out
mov
dec
jmp
ins
arpl
aad
push
mov
adc
inc
mov
mov
pop
iret
aaa
lahf
push
loopne
popa
inc
pop
(bad)
push
in
jne
jg
and
out
or
rol
mov
call
jnp
xchg
adc
jmp
mov
cmc
sbb
fistp
sub
int
cmp
jmp
rcl
out
mov
cmp
cmp
pop
pop
xchg
cli
push
test
enter
sti
mov
inc
mov
pop
test
ins
out
pop
mov
(bad)
hlt
outs
xor
std
sbb
pop
mov
inc
ficom
xor
and
stc
push
into
sti
shl
cmp
jp
aam
leave
add
lahf
jle
push
mov
cmp
mov
sbb
mov
enter
mul
cmp
mov
add
test
inc
sbb
imul
mov
fld
fs
mov
in
sbb
jmp
or
daa
jne
lahf
loope
addr16
push
test
mov
(bad)
in
je
sbb
and
(bad)
stos
pop
aad
push
add
dec
lea
out
int
aad
das
(bad)
or
mov
pop
cdq
ret
or
arpl
jb
lock
test
sbb
outs
das
stos
mov
imul
and
iret
pop
test
push
push
xchg
clc
dec
test
cld
mov
mov
sbb
push
jmp
in
repz
test
in
in
in
shl
add
jne
mov
in
inc
pop
outs
into
mov
add
sar
xor
and
imul
jae
cmp
pop
pop
cmp
add
cli
push
jle
leave
pop
jmp
mov
inc
adc
aad
mov
and
sub
mov
push
mov
cli
mul
or
and
mov
xchg
push
stc
push
push
es
xor
movs
push
pop
repz
mov
inc
ror
and
rcl
jbe
aam
stos
xchg
push
movd
inc
(bad)
inc
lods
mov
in
inc
adc
mov
inc
fmul
inc
and
aam
bound
add
or
fdiv
adc
mov
imul
jle
mov
aaa
add
adc
xor
fiadd
fild
cmc
mov
pop
jmp
iret
in
push
sub
retf
and
jnp
and
cmp
stos
or
ret
mov
xchg
add
mov
call
es
add
sbb
xchg
and
inc
dec
sbb
and
mov
xchg
mov
jae
(bad)
(bad)
xor
push
mov
cmp
mov
call
cmps
push
stos
mov
ret
je
mov
inc
add
lds
repnz
dec
mov
pop
sbb
add
mov
push
mov
mov
sar
pop
jmp
and
sub
adc
loopne
xor
scas
pop
adc
adc
or
mov
inc
cmp
(bad)
out
mov
pop
jge
jp
inc
popf
mov
cmc
imul
pop
push
push
xor
(bad)
(bad)
daa
or
std
adc
pop
pop
push
inc
ror
mov
inc
jmp
fimul
inc
inc
jle
mov
es
push
or
jmp
push
pop
dec
les
sbb
daa
adc
dec
or
leave
fmul
lds
sbb
push
out
jbe
xchg
mov
mov
inc
xor
les
loopne
sbb
xchg
pop
xchg
cli
loopne
or
pop
xchg
es
fdiv
mov
push
dec
bound
lds
inc
push
pop
enter
add
arpl
mov
push
cmp
jb
shr
loope
mov
lock
out
test
fsubr
out
inc
mov
or
ja
pop
adc
jmp
and
out
arpl
ja
out
fistp
xor
mov
push
scas
sbb
int
mov
icebp
adc
sbb
scas
out
inc
in
pop
scas
sbb
mov
fwait
mov
pop
test
pop
sbb
and
out
hlt
test
into
xor
pushf
adc
loope
aad
push
cmps
add
push
and
adc
or
sub
jo
pop
jns
jb
jb
push
cld
xchg
and
fcomp
mov
in
cld
or
jle
pop
xchg
scas
fsubrp
cmp
ret
push
mov
xchg
push
or
out
jb
in
jnp
test
mov
(bad)
mov
adc
and
das
iret
and
cmp
mov
and
shr
movs
pop
enter
fld
and
inc
sbb
cmp
cmp
fwait
mov
jmp
adc
inc
cmp
rcr
jnp
repz
push
or
fld
push
and
mov
and
jae
add
(bad)
or
cmp
jae
test
dec
aam
sub
mov
inc
inc
push
pop
jmp
push
fsub
mov
sbb
pop
jnp
and
sahf
icebp
push
adc
sub
or
out
cli
and
cld
dec
xchg
mov
and
fwait
add
sub
scas
dec
sbb
dec
cmp
cmp
bound
mov
(bad)
ror
ja
adc
adc
inc
sahf
sbb
sbb
sub
enter
mov
fsubr
add
adc
or
fnsave
pop
sbb
cmp
and
imul
fisub
dec
xor
out
cmp
aam
sub
adc
add
mov
xchg
xchg
pusha
and
ror
or
xor
cmps
pusha
data16
xor
or
xor
sbb
adc
inc
retf
shl
sbb
inc
jns
pop
sar
ja
sbb
jns
inc
aad
add
in
or
js
and
sbb
jge
movs
outs
sub
xchg
add
aam
cmp
daa
jne
add
mov
(bad)
aas
mov
imul
frstor
mov
jb
lods
repz
jecxz
mov
jo
shr
or
pusha
js
shl
and
fcom
pop
adc
fsqrt
jns
ja
pop
pop
and
push
xchg
push
push
pop
sbb
xor
push
sbb
sub
pop
cli
xchg
les
inc
enter
push
adc
cmp
fild
inc
je
leave
mov
dec
cmp
scas
dec
gs
icebp
pop
dec
dec
push
in
jecxz
iret
fs
push
add
lods
test
sbb
out
adc
cmp
es
test
retf
cmp
cdq
and
dec
cmp
sbb
sar
jmp
inc
not
clc
imul
nop
push
movs
shl
dec
mov
jne
push
mov
pop
stos
pop
retf
pop
cmp
or
mov
jne
repz
jge
ss
sbb
sub
dec
enter
out
mov
and
push
push
clc
fistp
popa
jae
inc
aaa
inc
movs
gs
mov
(bad)
out
inc
movs
mov
dec
jecxz
das
sbb
jle
imul
mov
add
mov
jnp
fldenv
push
lock
ds
nop
in
jb
push
cld
sub
mov
xchg
push
xlat
pusha
inc
inc
dec
hlt
(bad)
cld
cmps
fnstcw
pop
sbb
sub
lea
mov
mov
push
cmp
(bad)
xor
jbe
mov
pop
inc
cmp
ds
scas
and
cli
outs
xor
dec
sub
ss
add
pop
retf
cmp
lea
fild
movs
adc
pop
xchg
cmp
jmp
xchg
fcmovb
pushf
xchg
mov
pop
and
inc
mov
pop
mov
(bad)
push
inc
and
(bad)
cmp
fsub
retf
pusha
cli
jmp
popf
push
push
mov
sbb
imul
add
inc
data16
sub
loope
push
xor
lods
jmp
push
jg
cdq
and
lds
jnp
and
mov
mov
lods
outs
adc
cwde
or
out
cli
and
cld
dec
push
hlt
shl
dec
adc
mov
inc
test
ret
xchg
sbb
xchg
lds
jp
cdq
cmps
fisttp
xor
sbb
test
in
inc
dec
push
lock
mov
adc
ins
pop
jb
lods
xor
movs
adc
shr
inc
sub
xchg
mov
rol
arpl
call
loop
push
test
lock
movs
or
es
call
gs
cmp
inc
jmp
rcl
xor
adc
les
div
push
loop
inc
enter
movs
pusha
sub
ins
xor
xor
shr
mov
cmp
push
in
or
das
pop
cmovo
jae
adc
pop
rol
cli
add
jp
adc
nop
add
pushf
sub
push
scas
(bad)
aad
cmps
mov
xor
adc
add
mov
mov
adc
lods
shl
or
add
fcmovne
leave
mov
or
aam
leave
in
xor
and
pop
lock
loopne
sbb
push
scas
ret
cs
addr16
and
mov
adc
aas
ja
pop
(bad)
cld
jge
jbe
add
cld
and
cwde
or
popf
cmps
aas
dec
lock
arpl
inc
jg
es
adc
add
or
icebp
packsswb
push
push
nop
pop
xchg
sbb
cmps
and
(bad)
out
jnp
popa
cdq
cmps
xchg
aaa
cmp
aaa
movs
ins
iret
out
scas
outs
jno
icebp
int
fdiv
mov
imul
adc
push
fldcw
sti
repz
mov
out
gs
dec
jmp
pop
outs
arpl
lahf
out
aas
mov
in
sub
pop
es
adc
push
(bad)
ja
dec
mov
in
xor
dec
push
ja
(bad)
pop
int3
xchg
shr
rcr
xor
xlat
jnp
pop
pop
jge
cmp
out
pop
xchg
ror
pop
ret
imul
push
outs
jae
xchg
cwde
ja
imul
lock
aas
jg
xchg
inc
cmp
add
out
jmp
lock
mov
cmp
stos
retf
mov
lock
xlat
ret
out
inc
inc
es
xchg
and
sbb
stos
dec
dec
test
push
outs
loop
sbb
sub
mov
int
ins
mov
xchg
cs
aad
outs
push
dec
ins
mov
cmp
mov
push
pop
fdiv
shr
xchg
adc
pop
test
outs
enter
in
call
iret
add
in
cmp
cmps
outs
ds
inc
cdq
stos
jnp
or
iret
xchg
or
imul
sbb
xchg
aaa
leave
cmp
fst
push
idiv
xchg
pop
sub
fld
out
je
aaa
call
adc
cmp
mov
mov
xchg
stos
mov
data16
dec
sahf
push
mov
sub
sub
xchg
leave
and
push
push
retf
mov
addr16
stos
cmp
mov
sub
fcomp
cmp
sub
xchg
lea
xchg
pop
or
ss
test
xor
int
in
add
xchg
cli
add
aaa
pop
into
sub
mov
sar
xchg
hlt
iret
sti
out
retf
fs
jg
push
push
xchg
pop
adc
xlat
sbb
adc
pop
stc
jo
rcr
stc
cs
fist
sbb
push
fisttp
cmps
mov
cli
mov
ficom
int
fdiv
movs
mov
ret
dec
pop
inc
xor
pusha
(bad)
lea
jo
(bad)
out
and
in
imul
(bad)
daa
push
test
ficomp
mov
cdq
jp
xor
add
fs
jg
jmp
and
fsub
stos
ror
shl
push
dec
xor
xchg
sbb
push
mov
mov
in
xchg
inc
outs
or
cmps
ins
sbb
mov
jbe
mov
adc
jae
push
xor
ret
adc
imul
mov
mov
inc
(bad)
jl
sub
pop
and
popa
mov
jp
mov
shr
ret
inc
cmp
pop
test
or
xchg
mov
imul
push
push
mov
in
(bad)
fmul
repnz
rcr
adc
(bad)
jl
call
jge
add
out
icebp
mov
movs
push
stos
push
cmc
xor
mov
gs
cld
lahf
dec
xlat
(bad)
mov
scas
inc
mov
push
in
aad
cmc
in
pop
jb
mov
call
arpl
iret
iret
cld
inc
aam
cmc
or
mov
sti
test
ret
and
movs
mov
xor
cmp
push
lock
xchg
inc
daa
adc
mov
cli
in
movs
inc
fnstsw
xor
push
sub
jecxz
lahf
cmps
and
inc
mov
adc
xor
ret
ins
xchg
test
cli
std
mov
imul
loopne
xchg
jae
mov
pop
jo
lea
jnp
mov
inc
sub
xor
ja
outs
pop
push
outs
imul
jae
inc
mov
dec
push
push
and
cli
lahf
std
bound
test
hlt
mov
imul
js
sub
mov
jle
push
aam
addr16
xor
xor
pop
pushf
cwde
fdivp
out
pop
mov
fsub
xor
stos
out
sub
xor
mov
addr16
test
movs
sub
sbb
leave
inc
mov
mov
es
gs
(bad)
and
mov
pop
push
loope
and
sub
sbb
and
mov
dec
jg
(bad)
jae
add
jo
ds
sahf
jb
inc
pop
mov
dec
ret
loope
inc
xor
arpl
imul
inc
je
in
scas
sub
arpl
std
xchg
xchg
mov
dec
(bad)
fld
lods
add
dec
push
dec
in
jnp
scas
cmp
xchg
mov
(bad)
and
ffreep
div
lods
mov
pop
jnp
ror
icebp
adc
(bad)
js
mov
mov
stos
sub
xor
repnz
mov
cmp
mov
or
inc
das
stc
jg
movs
add
shl
shl
stos
push
imul
sub
ins
push
mov
push
aas
dec
or
or
add
xchg
clc
mov
aas
arpl
jnp
lea
mov
fxch
adc
stos
xchg
push
xor
xor
xchg
shl
retf
aaa
js
xchg
mov
in
fs
sub
mov
repz
push
add
jb
daa
push
cld
(bad)
gs
inc
mov
sbb
int
enter
mov
add
xchg
ficom
sbb
xor
sbb
cmp
mov
ins
dec
jnp
and
repz
xor
cmp
cmp
sar
pop
xchg
xchg
jmp
jmp
xchg
cmps
gs
shl
jecxz
or
mov
sbb
mov
add
in
shl
rcl
push
es
rcl
imul
clc
nop
jmp
test
aas
push
xchg
and
mov
icebp
stos
call
fnstsw
dec
cmp
adc
inc
or
aaa
mov
lock
call
push
cmp
es
xor
addr16
or
mov
push
cli
or
add
int
iret
fist
fstp
or
(bad)
mov
rcl
imul
repnz
dec
mov
jl
and
pop
xchg
xchg
jg
test
sahf
fsubrp
jp
and
xlat
hlt
bound
rcr
and
gs
sbb
lods
rol
(bad)
movs
nop
aam
mov
jb
sbb
push
popa
inc
and
push
dec
push
js
in
es
in
jbe
mov
test
std
dec
pop
add
in
cwde
sar
xchg
mov
fiadd
(bad)
dec
(bad)
mov
or
mov
scas
call
dec
in
mov
scas
adc
ss
xlat
dec
pop
daa
mul
or
data16
out
rcr
push
or
jne
inc
ss
mov
jmp
jbe
movs
jp
ret
mov
lock
lods
xchg
mov
mov
mov
dec
(bad)
out
loope
sub
test
cwde
aad
fstp
retf
jae
and
xchg
xchg
dec
pop
fcomp
and
shl
outs
mov
stc
lea
inc
(bad)
pop
ss
stos
adc
pop
fwait
mov
mov
dec
push
sbb
push
sub
ror
pop
sub
dec
xchg
inc
(bad)
mov
cmp
pusha
int
or
sub
cs
sub
call
xor
icebp
js
jecxz
and
inc
jp
dec
popf
xchg
fwait
stos
and
push
adc
dec
retf
mov
movs
inc
adc
imul
cmp
xchg
shr
sbb
lods
xchg
fisttp
test
xchg
xlat
and
ja
mov
out
adc
gs
push
adc
add
bnd
(bad)
enter
stos
pop
in
xchg
fwait
xchg
sti
xor
jg
in
cld
push
popf
cld
sbb
clc
or
call
(bad)
ficom
xchg
ins
sub
fwait
adc
ss
cmps
xchg
icebp
mov
mov
dec
pop
rol
hlt
jge
lods
pusha
xchg
push
dec
mov
adc
adc
and
fs
mov
popa
cmp
iret
dec
pop
push
test
pop
jne
mov
daa
pusha
add
adc
mov
adc
shl
icebp
dec
xchg
clc
xchg
call
dec
aad
and
jecxz
fwait
sub
fbld
in
mov
leave
shl
and
or
fmul
imul
pop
ins
jnp
push
pop
jg
mov
pop
lods
and
jg
(bad)
sar
adc
sub
lods
mov
pop
into
or
add
mov
or
mov
sbb
imul
out
or
push
or
xchg
xor
(bad)
(bad)
jecxz
jp
mov
pop
and
mov
pop
pusha
int
out
mov
rcl
test
sbb
pop
mov
mov
or
mov
scas
inc
ins
outs
and
daa
dec
retf
mov
ficomp
stc
lock
arpl
test
bound
and
loopne
sub
arpl
rol
adc
pop
imul
push
into
inc
fwait
test
enter
add
cmc
mov
mov
or
popf
sbb
xchg
fs
mov
add
mov
inc
sub
or
and
add
xchg
and
test
dec
in
mov
dec
lock
ret
and
and
pop
push
dec
mov
sub
xchg
or
cmp
ins
mov
mov
scas
(bad)
(bad)
stos
test
add
rcr
mov
xchg
or
mov
out
int
pop
adc
or
shl
jno
dec
loopne
and
in
pop
cs
xlat
mov
or
popf
arpl
mov
ja
pusha
sub
xor
push
outs
sub
retf
stc
dec
(bad)
pop
sub
push
dec
loope
imul
lods
test
adc
retf
dec
ins
scas
stos
sub
or
test
adc
loopne
or
movs
shr
inc
loope
dec
xchg
hlt
les
inc
and
jmp
sbb
inc
xor
loope
ret
push
cmp
aad
fcomp
lock
out
call
retf
xchg
(bad)
in
push
mov
mov
cmc
popa
jge
(bad)
or
mov
repnz
cmp
add
loopne
mov
or
jp
call
cmp
sti
js
in
xchg
xchg
mov
rcr
test
add
sub
shl
ret
test
out
push
cmc
jmp
aad
dec
mov
sbb
fild
cmp
add
jmp
push
pusha
push
mov
adc
pop
stos
arpl
cwde
pop
fwait
outs
inc
sbb
pop
(bad)
sbb
inc
popa
inc
pop
ss
adc
in
call
cmp
pop
stos
sbb
pop
mov
mov
add
add
inc
push
stos
add
lds
loope
repz
sti
inc
jbe
ror
mov
test
mov
ret
out
ret
cld
shl
out
aad
mov
pop
sbb
cmp
push
or
cmc
xor
cmp
mov
bound
test
sahf
int3
sar
lea
fidivr
and
mov
ins
mov
ror
rol
lods
test
aas
push
xor
loopne
test
or
mov
pop
and
lods
pop
cmp
or
xor
push
outs
cmp
call
inc
ss
repz
or
ret
retf
mov
sub
mov
fisub
in
ja
arpl
dec
sbb
push
fcmovu
add
add
mov
call
cmps
jno
scas
xchg
adc
mov
push
ss
jecxz
and
retf
ret
call
jo
add
(bad)
jle
inc
and
imul
imul
ret
out
mov
push
xor
cmps
imul
xchg
ret
xor
cmp
inc
pop
int
(bad)
loope
fisttp
push
rcr
cmp
mov
aas
xchg
lods
mov
jle
in
rcr
push
dec
(bad)
or
adc
cs
dec
in
mov
xchg
icebp
jae
lahf
sub
pop
dec
mov
mov
jg
inc
dec
dec
xor
mov
mov
or
xchg
jns
cmovne
push
sub
push
xchg
sub
push
adc
std
push
jp
popf
int3
sahf
inc
outs
mov
xor
jno
cmp
cmp
outs
inc
daa
dec
mov
or
lds
stos
fld
dec
(bad)
xor
out
dec
xor
add
hlt
jmp
cmps
jmp
cmp
pop
mov
inc
movs
in
das
ja
test
(bad)
sahf
add
loopne
shr
imul
enter
test
mov
scas
int3
les
xchg
loope
xchg
mov
push
or
movs
lods
mov
ins
test
fld
aam
cld
out
mov
fidivr
(bad)
mov
jns
stc
fisttp
inc
ret
adc
sbb
(bad)
ret
mov
(bad)
test
fiadd
jmp
lea
nop
mov
popa
or
mov
sbb
das
movs
mov
movs
push
fwait
lods
stos
xchg
(bad)
and
das
and
adc
pop
ja
jp
xor
and
lds
retf
nop
cmp
in
push
imul
mov
les
mov
es
or
call
pushf
xchg
(bad)
sub
inc
mov
or
shl
test
aad
add
xlat
xor
sub
aas
push
(bad)
xchg
pop
xor
inc
outs
nop
jl
xchg
(bad)
cmp
jbe
cmp
repz
push
sbb
cld
jl
jmp
mov
out
add
je
out
mov
enter
in
mov
cmp
test
mov
xchg
std
aas
and
mov
sahf
add
out
test
dec
outs
xchg
aam
dec
pop
scas
pop
xor
push
pop
out
popf
dec
jp
nop
xchg
lock
(bad)
les
out
adc
add
scas
jge
xor
pop
jo
cmp
cli
add
inc
inc
lea
push
cmps
dec
inc
inc
ror
(bad)
das
pop
outs
and
sub
mov
and
cs
iret
fdiv
ins
push
inc
lock
movs
cmp
jb
xor
or
ret
clc
and
dec
add
cld
iret
test
mov
(bad)
xchg
mul
add
stos
adc
or
cwde
aam
mov
mov
stos
jno
fst
or
xlat
clc
inc
pop
pavgb
int
fwait
imul
pushf
xchg
scas
jecxz
and
ins
and
inc
inc
popa
sbb
inc
inc
mov
jl
repz
push
and
enter
iret
jns
add
jmp
sar
inc
into
enter
jnp
xor
lods
adc
inc
fcomi
mov
push
jle
push
(bad)
(bad)
cmp
jnp
loop
cdq
mov
stc
adc
sbb
sbb
xchg
add
dec
mov
add
hlt
push
push
sub
aam
mov
cwde
jge
or
pusha
jg
cmp
mov
js
imul
sbb
rcl
sub
movs
scas
jl
mov
dec
sbb
je
push
mov
leave
fcom
(bad)
mov
dec
iret
dec
jecxz
jo
dec
imul
pushf
mov
scas
adc
gs
mov
mov
outs
sahf
mov
sbb
and
push
enter
jg
inc
and
jle
shl
sbb
mov
lods
sub
cmp
xchg
push
add
sub
retf
sub
ficomp
jecxz
loop
mov
fsubr
mov
xchg
add
mov
xchg
push
cmp
push
push
mov
pop
ins
adc
cmovnp
adc
push
jno
push
icebp
test
test
repnz
cdq
into
mov
push
data16
pop
adc
nop
and
cmp
cmc
and
mov
mov
cwde
pop
add
dec
sub
dec
iret
pop
iret
adc
sub
dec
adc
fnstenv
jns
xchg
inc
push
xchg
mov
mov
or
jmp
out
adc
xchg
bound
sub
xchg
inc
(bad)
sub
jge
fisub
xlat
sub
mov
rcr
stos
jl
dec
sbb
push
movs
out
retf
adc
mov
push
cmps
dec
popf
out
mov
dec
mov
or
outs
add
add
loopne
xor
or
addr16
movs
dec
shl
cmp
repnz
daa
pushf
neg
stc
pop
loop
dec
call
xchg
lahf
mov
mov
mov
cs
push
nop
add
add
cmp
outs
push
mov
jl
or
or
pusha
ins
outs
or
mov
and
gs
xchg
fisubr
mov
js
dec
cmp
sar
and
aaa
sbb
gs
push
push
and
lds
scas
and
cmp
push
jle
popa
scas
mov
inc
(bad)
mov
inc
addr16
cmp
push
and
sub
enter
pop
add
and
or
dec
or
mov
mov
sub
daa
ftst
xchg
push
retf
dec
inc
push
retf
mov
imul
inc
push
and
dec
lods
dec
js
fwait
gs
scas
xor
fsub
repz
in
inc
mov
sbb
xchg
jne
mov
lahf
mov
inc
stc
cmp
dec
inc
mov
test
test
leave
mov
push
xor
xor
jle
mov
aam
sti
(bad)
ja
fidivr
xchg
inc
popa
loopne
cmp
jb
bound
lock
pop
je
pushf
stos
(bad)
sub
push
pop
pop
cmps
or
clc
fsub
lods
dec
shr
lods
push
pop
push
push
jns
in
(bad)
fnstcw
cld
bound
dec
xor
mov
(bad)
movs
sub
std
(bad)
jae
xor
mov
add
mov
xchg
lea
mov
sub
or
neg
push
addr16
inc
fistp
push
data16
mov
hlt
popf
jle
lods
dec
out
and
fadd
dec
lea
rol
inc
push
fistp
and
xor
or
iret
fistp
pop
icebp
fild
aas
imul
cmp
jge
sbb
out
ins
test
loope
cs
data16
or
retf
sbb
mov
sar
or
xchg
mov
ins
pop
scas
cmc
mov
sbb
ds
aas
cmp
shl
add
cwde
mov
scas
fmul
mov
xchg
test
bound
pop
inc
sbb
in
cmps
int3
arpl
loope
and
adc
cmp
rcl
cmp
std
xchg
pop
dec
das
add
dec
mov
jge
iret
and
xchg
mov
das
or
(bad)
scas
pop
(bad)
out
aaa
fs
popf
mov
push
xor
cmps
push
xlat
jecxz
retf
fs
lods
mov
push
mov
ins
pop
fxch
(bad)
mov
fadd
aad
and
dec
lock
push
les
jbe
(bad)
adc
dec
cwde
(bad)
mov
cmp
pushf
enter
add
xor
jge
out
enter
inc
ret
xchg
adc
jns
mov
mov
shl
pop
and
xchg
xchg
cld
push
loopne
cdq
mov
movs
std
loope
xchg
(bad)
push
inc
adc
jg
cmp
mov
dec
xchg
(bad)
cmps
push
xchg
adc
and
(bad)
or
test
push
test
into
rol
(bad)
sbb
jle
js
cmp
mov
test
ins
sub
push
xor
rcr
mov
addr16
push
in
jl
sbb
mov
mov
imul
adc
int
mov
xor
add
cdq
add
and
jo
ret
or
mov
pop
xchg
out
lods
aaa
inc
dec
sbb
sub
into
dec
jmp
jg
mov
loop
das
jmp
push
push
push
or
sbb
or
mov
jp
fcmovbe
jo
inc
cmp
push
setbe
out
js
ret
dec
xchg
cmc
call
int
fdivr
lahf
imul
adc
popa
leave
cmp
sbb
jmp
icebp
ret
ins
fsub
mov
and
mov
cmc
sbb
sub
dec
fld
js
xchg
cmp
add
add
dec
pop
sahf
jno
fisttp
ins
in
das
int3
push
xchg
outs
sti
inc
xor
aas
sbb
addr16
xchg
inc
push
dec
popf
jne
mov
mov
and
dec
xchg
js
imul
mov
or
inc
sbb
into
inc
or
sbb
(bad)
pop
fdivr
arpl
mov
aaa
pop
dec
mov
into
sub
push
in
pop
or
int
mov
daa
adc
lea
clc
xor
gs
pop
sti
pop
mov
nop
test
jne
xlat
lahf
inc
movs
out
xchg
dec
xor
mov
jns
push
cdq
(bad)
and
out
cmc
or
cmp
dec
movs
inc
ss
xor
stc
sub
lock
adc
inc
pusha
daa
fadd
xchg
cli
add
jmp
jno
cmp
in
(bad)
mov
jmp
sbb
pushf
(bad)
je
shr
(bad)
ins
sbb
test
pushf
test
mov
jl
(bad)
mov
mov
adc
repz
mov
cmps
xchg
rcl
mov
push
shl
fidivr
pop
jmp
inc
cmps
mov
mov
pushf
mov
jg
fidiv
int
fwait
inc
sbb
or
lea
(bad)
jb
mov
xchg
lds
mov
aas
push
(bad)
iret
mov
arpl
int3
retf
xchg
mov
jne
out
push
cdq
mov
outs
enter
into
nop
test
lods
xchg
pop
js
and
arpl
jbe
mov
mov
ja
mov
dec
mov
(bad)
fimul
in
dec
mov
mov
ja
pusha
mov
mov
lods
add
loopne
pop
lea
retf
adc
dec
jecxz
cmp
pmaxsw
lods
xor
or
jle
xchg
imul
jnp
imul
dec
aas
lock
mov
pop
mov
repz
dec
ror
and
mov
dec
jp
jle
ror
push
pop
bound
lea
xchg
and
adc
cdq
or
stos
xchg
bound
fadd
push
or
dec
call
imul
jns
jg
xor
sbb
jg
xor
and
push
xchg
pop
add
ds
and
fs
fbstp
test
jns
adc
sub
mov
or
add
push
or
imul
adc
nop
push
adc
pop
mov
xchg
push
inc
pop
inc
sub
mov
mov
scas
out
ins
xchg
push
(bad)
mov
cmp
ds
(bad)
pop
sbb
mov
jg
scas
test
fs
push
mov
push
jnp
inc
lahf
fnstcw
mov
pop
cli
mov
call
mov
mov
stc
push
stc
loopne
cmps
sub
mov
xchg
popf
mov
(bad)
jmp
shl
imul
fsubp
push
jo
movs
retf
mov
or
sbb
or
paddd
and
adc
sahf
xchg
dec
cli
div
inc
mov
jae
test
inc
pop
ja
int3
gs
xchg
jge
xchg
test
scas
or
movzx
inc
fs
xchg
xchg
lock
xchg
repz
cdq
dec
add
repz
outs
and
in
hlt
jp
or
nop
dec
dec
jb
add
inc
jb
movs
outs
mov
mov
fcmovu
push
inc
push
movs
rcl
xchg
pop
cmp
lahf
cdq
call
leave
xor
xchg
neg
out
or
cmp
out
nop
mov
out
lods
mov
gs
icebp
ficomp
push
and
mov
fs
jmp
cmps
stos
in
call
xchg
shl
pop
int
jp
test
sti
push
int
arpl
cli
imul
inc
dec
jnp
pop
inc
movs
dec
xchg
ficomp
push
ins
enter
int3
(bad)
adc
or
add
fs
xchg
mov
ins
mov
loopne
retf
or
cwde
sub
enter
bound
or
es
je
in
push
fdivr
lea
jle
outs
jp
cs
gs
and
cmc
jle
mov
shl
xor
add
xor
aad
sbb
outs
jmp
iret
xchg
adc
(bad)
lods
stos
xor
and
jmp
repnz
dec
add
scas
and
cmp
mov
and
or
push
sar
jl
call
mov
dec
fdivp
and
int3
inc
mov
sbb
pop
mov
pop
scas
into
lds
das
xchg
mov
ja
add
lahf
dec
sbb
mov
inc
mov
mov
mov
mov
aas
dec
pop
push
dec
xchg
xlat
mov
jmp
xchg
mov
dec
and
mov
jecxz
not
(bad)
sub
into
stos
(bad)
test
cmp
outs
sub
pop
push
dec
out
pop
repnz
xor
loope
sub
inc
das
js
cmp
dec
lea
dec
and
dec
mov
pop
xchg
dec
pop
pop
in
inc
sahf
xor
cwde
inc
es
ss
dec
lock
mov
add
add
mov
ins
add
je
stos
or
xlat
test
icebp
das
inc
jns
retf
push
or
out
or
push
mov
push
xlat
mov
xor
stos
xlat
pop
pusha
mov
mov
or
(bad)
data16
shl
inc
ret
xchg
and
xor
sub
fadd
cmp
outs
cmps
aaa
mov
sub
xor
jecxz
dec
mov
int
imul
scas
int
je
arpl
sbb
or
fwait
out
jmp
data16
shl
data16
fst
in
shr
mov
push
repnz
sub
and
enter
mov
and
js
(bad)
push
fsubr
mov
dec
enter
and
in
dec
xchg
fst
aam
fistp
test
ret
dec
jmp
add
out
push
nop
out
cmp
xchg
cmp
test
and
mov
aaa
es
sub
sub
or
dec
xor
les
pop
(bad)
xchg
rcr
addr16
adc
fisttp
xchg
dec
xchg
cmps
outs
std
jmp
pop
addr16
inc
mov
in
popa
rcl
jg
aam
push
cmp
das
aas
imul
arpl
out
push
outs
mov
in
mov
jo
in
mov
test
cmp
cmp
inc
test
mov
mov
jmp
push
stos
icebp
or
fsub
bound
adc
xchg
mov
in
mov
aas
test
inc
add
mov
mov
jnp
mov
pop
jge
sbb
sub
dec
push
xor
push
sbb
imul
or
cmp
cld
shl
popa
outs
push
dec
popf
or
pop
mov
pop
test
mov
xchg
mov
pop
test
outs
or
adc
scas
cmc
leave
movs
jmp
mov
xor
inc
push
arpl
shr
sub
out
and
sub
jmp
daa
cld
fcmovb
out
mov
ja
cwde
int3
jmp
pop
mov
test
stc
ja
pop
rol
in
stos
xchg
xchg
and
jl
(bad)
std
es
jbe
add
xlat
dec
cld
loopne
xor
adc
adc
scas
mov
mov
shl
sub
ret
pop
dec
pop
sub
push
jb
jl
iret
push
sbb
or
stos
add
and
or
call
add
lods
call
push
in
cs
jnp
cmp
les
bnd
cmp
aam
(bad)
das
neg
sbb
in
add
clc
mov
cmp
mov
icebp
cmps
mov
imul
ror
(bad)
test
mov
or
lahf
cmp
fadd
adc
fcom
jne
pop
popf
stos
sbb
push
inc
or
rol
jmp
pop
mov
dec
mov
jle
push
sahf
sub
or
sbb
stos
int
cmps
mov
call
movs
(bad)
repnz
push
mov
sub
pop
push
mov
mov
pop
xor
jae
sbb
test
inc
nop
mov
sbb
xor
xor
in
xchg
popa
cmp
cs
sub
mov
inc
bound
fwait
xor
adc
test
dec
sub
clc
adc
fwait
or
mov
add
sub
xchg
dec
leave
and
iret
lea
sub
daa
outs
mov
lahf
add
ret
xchg
ins
add
adc
xchg
jae
fmul
or
mov
xor
into
pop
mov
aaa
inc
pushf
and
or
lds
jle
test
(bad)
and
js
jnp
in
add
dec
leave
mov
dec
sbb
jg
idiv
jae
test
aad
jnp
(bad)
fwait
jbe
shl
sbb
in
mov
push
inc
dec
push
loop
lock
movs
(bad)
xchg
mov
js
or
push
mov
xor
adc
mov
add
adc
inc
add
sub
rol
jne
push
push
cmp
daa
(bad)
les
dec
cmps
sub
in
cmp
(bad)
(bad)
iret
pushf
(bad)
fs
bound
call
pusha
loop
test
sbb
(bad)
popa
sbb
es
mov
cmp
sahf
push
daa
nop
out
sbb
fninit
or
fidiv
fdivr
in
mov
mov
or
fstp
call
loope
mov
add
iret
dec
or
push
push
sbb
inc
mov
and
inc
xor
jecxz
cmp
mov
and
pop
popf
cs
rol
ror
cdq
fs
mov
push
aaa
paddsw
ins
jmp
dec
fisttp
repnz
add
jnp
dec
and
jp
cwde
mov
(bad)
xor
dec
lods
or
ror
sahf
pop
jno
adc
retf
adc
cmp
rcr
lds
(bad)
je
push
mov
mov
push
out
and
mov
mov
mov
ret
lods
int
cmp
or
cmp
cmps
mov
js
aaa
and
inc
push
stos
jmp
lods
(bad)
push
fnstsw
pop
mov
stc
shr
inc
xchg
xlat
mov
fadd
and
pop
jmp
repz
aas
stc
push
rcr
pop
xchg
lds
(bad)
sbb
jbe
sbb
scas
sbb
ins
or
cmp
popf
add
dec
push
mov
(bad)
in
dec
mov
sbb
clc
jb
sbb
outs
neg
push
pop
out
xor
(bad)
shr
xor
daa
scas
xchg
fsub
loopne
add
push
das
xor
or
inc
in
cli
ds
jnp
dec
hlt
xor
add
inc
aam
(bad)
movs
in
test
std
(bad)
add
div
loop
test
repnz
arpl
pop
mov
jno
pop
cmps
push
test
jmp
pop
push
sbb
sar
mov
mov
adc
mov
push
or
sar
call
add
jp
mov
xchg
les
arpl
icebp
neg
and
movs
lahf
xchg
ror
xor
mov
sahf
cmp
push
sub
jmp
addr16
adc
mov
fs
imul
mov
outs
add
mov
fsubr
xor
int
dec
out
movs
data16
mov
movs
or
bound
fld
or
mov
mov
cld
push
rcl
aam
xor
ret
lods
dec
dec
jbe
in
cmp
xor
test
mov
test
cmp
leave
mov
(bad)
xchg
dec
fistp
push
(bad)
into
rol
out
jge
ja
in
xchg
clc
mov
push
aam
jne
je
ret
mov
mov
jne
sahf
js
fsubr
pop
loop
neg
cld
shl
xor
shr
xor
clc
repnz
pop
jns
imul
sub
adc
pop
xchg
mov
loope
push
retf
cmp
mov
dec
(bad)
mov
and
lock
jg
(bad)
neg
dec
sti
mov
popf
mov
dec
inc
mov
leave
popf
or
stc
adc
sub
sbb
test
dec
rcr
mov
mov
and
jne
fild
add
je
push
cmp
and
mov
sbb
out
in
add
jmp
mov
sbb
out
xchg
xor
retf
dec
in
jmp
push
mov
les
popf
or
xchg
sub
dec
cmps
jmp
pop
sub
mov
std
std
out
mov
mov
jb
ins
(bad)
add
cwde
stc
and
stos
in
aam
dec
fadd
nop
popf
into
outs
cmc
and
sub
das
out
(bad)
scas
jmp
enter
pusha
outs
mov
movs
adc
cdq
test
pop
or
mov
(bad)
jne
sub
mov
(bad)
inc
frstor
sub
into
dec
into
pop
or
add
cmps
fs
xor
rcr
mov
sub
push
inc
jl
je
arpl
or
test
jge
cmp
and
pop
mov
mov
(bad)
out
xchg
iret
mov
pushw
pop
cld
int3
daa
adc
sahf
xor
dec
test
jl
ret
jmp
jl
sbb
sub
arpl
xor
fsubr
mov
push
popa
ins
lahf
jmp
in
jb
dec
repz
cmp
mov
icebp
aad
dec
stos
arpl
repz
aaa
push
popf
adc
gs
retf
iret
scas
inc
jge
std
mov
cmp
je
(bad)
in
push
lock
shr
dec
scas
lock
ds
or
fcmovnb
in
adc
dec
dec
(bad)
(bad)
sti
mov
neg
mov
pop
test
and
int
sub
sub
add
loopne
fisub
jb
pop
ins
cs
sar
and
mov
lds
pusha
shl
mov
(bad)
int3
mov
pop
xchg
mov
repz
sub
jnp
ds
inc
outs
fwait
call
mov
movs
mov
sub
inc
push
leave
and
stos
pop
enter
les
xchg
mov
pop
add
mov
aaa
daa
pop
fnstenv
xor
daa
mov
and
(bad)
test
sbb
xor
gs
stos
xchg
pusha
mov
pop
add
(bad)
gs
fsub
cli
sar
leave
(bad)
xor
es
inc
ficomp
int
mov
jnp
ins
and
data16
xchg
mov
fadd
repz
shl
psubsw
das
fdiv
mov
movs
adc
xchg
ror
stc
aam
push
and
aaa
mov
and
xchg
cmps
add
pop
fmul
retf
xchg
xchg
(bad)
jnp
in
inc
push
mov
out
test
out
vmwrite
add
push
cmp
xchg
xchg
lahf
push
or
lock
xchg
pop
mov
cmps
leave
shr
adc
push
mov
jmp
ror
and
sub
es
popf
mov
icebp
jle
mov
aad
fstp
into
cmp
lods
sbb
(bad)
jg
cmp
or
and
jnp
mov
retf
ss
push
cmp
inc
(bad)
push
fdivr
cwde
cmp
and
imul
mov
pop
cmp
stos
xor
mov
jecxz
push
dec
iret
xor
cmp
gs
in
call
mul
cwde
movs
pop
mov
or
cmp
sti
xchg
shr
mov
mul
mov
sub
outs
scas
dec
pop
aam
mov
adc
mov
or
jne
fisub
adc
out
cwde
xor
xchg
mov
xchg
(bad)
sbb
rcl
repz
jo
sbb
dec
aaa
movs
(bad)
sti
inc
push
mov
int
pop
in
add
xor
outs
jne
out
mov
call
fidivr
xchg
mov
inc
(bad)
xchg
cmps
xchg
(bad)
push
lods
mov
jmp
in
popf
popa
add
fstp
out
adc
adc
test
pop
ins
jmp
cdq
es
sbb
fsubrp
cli
xchg
jno
sub
not
add
jno
mov
pop
sbb
mov
sbb
dec
adc
inc
aad
movs
retf
pop
or
mov
push
pop
sahf
scas
aas
jmp
and
ja
cmps
sub
(bad)
repz
lahf
call
std
jecxz
or
call
movs
iret
cld
mov
into
inc
(bad)
popf
sar
lods
ret
(bad)
push
xchg
sub
push
clc
in
or
es
lahf
(bad)
(bad)
in
push
cmp
out
xor
das
add
fbstp
arpl
into
fnstsw
cmp
hlt
cmc
xchg
rol
mov
xor
jle
cmps
jb
push
adc
xchg
lea
or
(bad)
push
xchg
aad
and
and
fnstenv
fcom
mov
scas
cwde
or
lahf
mov
mov
dec
sub
or
jb
fs
sub
cmp
cmps
loop
and
add
stc
xchg
push
sbb
imul
and
aam
js
jmp
scas
xchg
lahf
lock
fdivrp
sub
(bad)
xchg
repz
mov
outs
dec
adc
or
es
mov
ins
ja
mov
sub
push
inc
ret
and
gs
data16
jbe
imul
outs
call
es
lods
into
lea
out
xor
cwde
jne
and
sbb
add
pop
pop
adc
into
stc
jmp
or
es
into
xchg
or
jae
neg
pop
jp
and
jns
pop
ds
test
data16
dec
iret
and
fcmovnu
adc
mov
inc
xor
pop
jns
not
daa
xchg
fidivr
movs
or
(bad)
pop
hlt
add
dec
mov
adc
and
push
and
adc
leave
data16
cdq
gs
mov
lock
cmp
in
or
(bad)
mov
push
dec
mov
xor
sub
jge
mov
cdq
and
ret
ret
pop
lods
mov
xor
fadd
and
(bad)
rol
jo
dec
les
fwait
xchg
imul
cmps
pusha
cmp
mov
(bad)
(bad)
lahf
popa
adc
xchg
test
(bad)
fild
movs
inc
jp
cmp
ds
xlat
idiv
std
stc
(bad)
enter
outs
push
xchg
sbb
je
mov
call
rcr
pop
test
pop
shr
stos
jge
call
mov
ret
jmp
(bad)
push
cld
js
xchg
jmp
outs
dec
movs
or
mov
add
arpl
sub
mov
pop
jb
push
(bad)
dec
add
xchg
rcr
mov
movq
add
cmps
mov
sar
mov
loopne
dec
fldenv
fld
mov
daa
fisttp
jmp
daa
jb
hlt
inc
mov
daa
loopne
ins
pushf
cmp
into
fwait
xor
xchg
fstp
mov
pushf
add
mov
sub
cld
fbstp
pop
or
sub
(bad)
sbb
pop
das
inc
jmp
lahf
pop
or
gs
inc
int3
sahf
cmc
dec
sbb
jle
sti
mov
aaa
cmp
xlat
or
popf
pushf
sbb
jge
leave
(bad)
gs
pop
jmp
or
(bad)
retf
es
fiadd
mov
fdivr
push
push
sub
xchg
mov
xchg
pop
mov
cli
jb
mov
cmp
pushf
(bad)
loopne
cmp
call
je
mov
fnsave
ins
or
sar
push
hlt
add
test
inc
aad
add
push
test
aam
in
mov
cmp
xchg
pusha
inc
mov
mov
add
les
add
cmp
adc
pusha
pop
and
repnz
xor
repnz
inc
fiadd
push
jb
nop
mov
push
shl
call
cmc
dec
fcmove
mov
push
rol
add
adc
test
add
mov
xor
sub
push
dec
sub
cmp
lock
cmp
add
pop
rcl
inc
gs
daa
imul
aas
loop
mov
mov
jl
mov
or
mov
fbstp
mov
sahf
lea
jbe
out
stos
adc
mov
out
stos
push
adc
repz
shl
pop
out
pop
icebp
dec
out
jg
cmp
loop
jnp
mov
sub
mul
xor
xor
dec
inc
fdiv
sti
fwait
inc
inc
sbb
cmp
and
mov
mov
xchg
fmul
lahf
(bad)
jnp
and
push
sub
movs
push
add
mov
push
fsub
out
ror
mov
cmc
jmp
xor
retf
xchg
int3
addr16
div
es
mov
sbb
pushf
sti
mov
rcr
xchg
ja
mov
sub
jmp
into
les
xchg
pop
and
dec
jle
mov
and
pop
mov
ins
push
xor
rcl
xchg
add
and
mov
and
or
popa
add
mov
jl
aas
jge
cmp
adc
sub
retf
push
adc
in
cmps
push
clc
scas
mov
mov
popa
out
in
pop
clc
daa
jbe
inc
add
dec
cmp
pop
dec
sahf
adc
push
inc
ja
clc
pop
std
iret
pop
pop
cmps
int3
or
add
add
mov
test
stc
ds
(bad)
sbb
mov
loop
mov
in
cld
mov
mov
sub
pop
out
movs
push
mov
cmp
xlat
xchg
sahf
scas
jp
mov
cmp
xchg
fidivr
cmp
cmp
mov
cdq
xchg
cmp
cmp
ds
in
leave
xor
repnz
out
dec
loope
cmp
in
lahf
dec
jge
repnz
popf
mov
lea
out
mov
mov
jae
rcl
dec
fwait
imul
popf
xor
and
push
or
pusha
pushf
add
cmp
fcmovu
pop
mov
jle
mov
pop
arpl
push
jg
xchg
leave
popf
mov
add
sub
mov
ja
add
mov
ins
pop
lock
push
add
cmps
icebp
jbe
scas
add
xor
mov
js
lahf
jo
cmc
jns
push
xchg
out
or
out
mov
jne
fdiv
loopne
es
mov
nop
cmp
clc
sbb
jb
xchg
pop
add
push
xchg
dec
xlat
inc
ins
in
sbb
xchg
inc
mov
int
or
mov
into
inc
in
mov
nop
push
xchg
outs
or
and
cmp
in
movs
lock
mov
push
jno
je
or
dec
add
mov
stos
push
daa
inc
cmp
ds
cld
jmp
dec
add
xor
cdq
retf
cs
and
loope
enter
stos
retf
cdq
cld
fisub
xchg
retf
mov
push
leave
ret
or
stos
pop
inc
xlat
shl
add
jne
outs
aam
fistp
ror
jmp
movs
hlt
adc
ret
xchg
fdiv
mov
iret
das
lds
sbb
inc
ret
add
jbe
add
add
cmc
cli
mov
aam
cmp
push
and
imul
shl
add
lock
scas
mov
mov
jle
push
sar
mov
leave
sbb
mov
add
cld
(bad)
std
or
mov
cmp
push
inc
sahf
sub
rcl
push
sti
mov
stc
in
push
sbb
movs
and
movs
xchg
mov
xchg
mov
loope
out
mov
cmp
lods
add
inc
call
js
add
dec
out
sub
clc
dec
xor
dec
call
cmp
cmp
fwait
or
pop
test
jecxz
xchg
jns
pop
jmp
mov
adc
inc
leave
or
hlt
adc
popf
iret
add
lds
outs
mov
pop
inc
push
dec
loop
and
or
out
dec
mov
mov
xor
(bad)
pushf
sub
pop
enter
mov
clc
cli
loope
and
add
inc
stc
mov
loopne
sahf
xor
dec
movs
movs
movs
cmp
and
stc
dec
addr16
arpl
inc
loop
ins
xchg
icebp
jp
add
aas
inc
cmp
fidivr
fsubr
adc
add
shl
mov
mov
sbb
add
dec
cs
int
mov
cmp
aad
jl
jb
jle
push
sub
pop
pop
sbb
pop
daa
dec
jecxz
and
loope
in
(bad)
jmp
ret
fisttp
les
cmps
mov
inc
xchg
or
mov
and
arpl
adc
mov
adc
jg
popa
push
int3
retf
pusha
add
add
push
cmp
or
enter
xor
and
cmp
sbb
xchg
or
sbb
sbb
xchg
xchg
or
mov
add
not
add
fiadd
rol
js
push
or
mov
dec
sub
outs
movs
cli
pop
movs
fstp
xchg
(bad)
lds
clc
push
mov
adc
jno
nop
mov
loopne
mov
pushf
push
mov
test
xlat
mov
lahf
or
shr
adc
cmps
xchg
sub
pop
xor
dec
sub
fldenv
mov
(bad)
(bad)
cld
pop
out
neg
fistp
cli
jmp
stc
xlat
pop
ja
sahf
jae
mul
pop
mov
pop
and
add
dec
pop
add
pop
xor
in
movs
dec
gs
push
out
inc
add
mov
mov
dec
into
out
xlat
mov
in
mov
rol
pop
jbe
xchg
push
cmp
mov
loopne
sti
clc
cmp
add
imul
cwde
and
aam
fwait
jle
xor
retf
inc
push
and
fwait
mov
fstp
inc
dec
into
(bad)
stos
jnp
cmp
fisub
add
and
mov
jae
sar
pushf
mov
rol
add
gs
jecxz
mov
sub
xor
inc
xchg
jecxz
jge
sbb
inc
ror
push
frstor
fwait
sub
test
and
and
mov
gs
sub
push
inc
xchg
jmp
pop
mov
imul
push
inc
fs
leave
fs
jno
xor
jno
(bad)
fs
mov
pushf
ror
mov
shr
xchg
in
and
and
and
jns
loope
pop
xlat
scas
pop
mov
mov
scas
mov
add
jmp
jle
loopne
cld
sbb
adc
push
dec
(bad)
push
sub
les
add
mov
rol
sbb
mov
psubw
rcr
in
sub
jnp
sbb
mov
dec
rcl
push
mov
test
sub
ret
xor
fadd
xor
mov
leave
lock
inc
sbb
cmp
dec
and
stc
adc
jnp
jmp
push
ds
mov
(bad)
lock
mov
vcvtsd2ss
aas
and
lods
(bad)
pop
mov
push
push
shl
in
jb
repnz
mov
push
mov
loopne
push
mov
lds
loopne
mov
int
pop
cmp
mov
xchg
ins
or
jne
xchg
(bad)
push
xchg
mov
mov
ja
imul
mov
aad
mov
test
imul
xor
pop
addr16
mov
rcr
pop
mov
xor
stos
arpl
pop
movs
inc
pop
sbb
xor
sub
jae
cmp
ret
jne
push
push
mov
sbb
je
sub
les
cmps
cwde
call
dec
and
mov
adc
xor
pop
popa
xchg
ret
ret
inc
push
xor
xchg
xor
jmp
mov
stc
mov
mov
mov
lahf
adc
cs
pop
dec
pushf
cmp
call
imul
mov
mov
adc
and
fcomp
lds
mov
jbe
dec
add
vpblendd
stos
xlat
lea
ins
into
aas
out
dec
adc
pop
jmp
or
movs
mov
pusha
popa
out
push
mov
xchg
xor
xchg
ins
lds
mov
jb
push
das
mov
adc
xor
mov
xchg
test
and
pop
scas
push
mov
jle
ins
xchg
pop
pop
cli
into
push
aas
dec
add
in
adc
xchg
pop
bound
pusha
jnp
cmps
add
xchg
xor
sub
cmps
xlat
mov
jb
add
pop
add
call
jge
lahf
jl
dec
shl
imul
inc
aaa
push
fnstenv
rcr
dec
mov
add
retf
mov
mov
rcr
push
sub
sub
push
iret
pop
jmp
inc
nop
jge
lods
jns
pop
shl
pop
test
mov
mov
cld
inc
cmc
out
inc
call
push
sbb
lds
inc
xchg
mov
arpl
icebp
inc
inc
arpl
dec
cmps
mov
jne
aaa
sub
loopne
jbe
sub
xchg
fsubr
popf
push
and
jnp
lods
nop
push
(bad)
pop
fimul
retf
or
das
sub
in
push
adc
clc
jno
pop
movs
add
jmp
scas
push
mov
cmp
mov
push
jmp
std
cdq
lods
add
lods
adc
cmps
iret
push
packuswb
pusha
push
or
add
push
sbb
das
push
cmp
test
inc
add
mov
lods
push
adc
dec
and
jmp
dec
pop
pop
adc
jg
adc
jbe
mov
jns
inc
dec
stc
push
in
adc
imul
xor
icebp
push
sub
cmp
and
jno
std
cmp
sub
dec
cmps
lahf
ret
push
(bad)
xchg
xchg
sbb
jb
push
xchg
out
xor
icebp
cmp
sbb
(bad)
lahf
outs
test
xor
mov
sar
jo
enter
push
imul
inc
jg
sbb
jne
xchg
in
or
inc
push
mov
inc
ret
fsub
sar
inc
sbb
xchg
jecxz
sub
xor
add
sub
ret
adc
stos
add
mov
cmps
push
int
sbb
lods
je
ins
jl
push
pop
psrlq
xor
call
aad
dec
adc
mov
pop
or
je
ja
cmp
mul
mov
addr16
test
mov
add
push
std
xor
pop
sub
fbld
xchg
sbb
adc
xchg
mov
test
jne
xchg
ins
or
jne
xchg
(bad)
push
mov
int3
mov
jnp
adc
clc
stos
xchg
mov
lods
test
cmp
in
add
in
mov
ds
pop
push
outs
push
cmp
cmc
(bad)
pop
nop
mov
lods
and
ins
inc
push
fcmovbe
cli
push
js
sub
inc
movs
pop
xchg
fisub
push
mov
dec
int
cld
int
push
dec
pop
inc
imul
dec
jg
cmp
sub
sbb
add
dec
sbb
cmp
mov
into
and
xor
retf
sub
loop
sub
cmp
add
inc
repnz
adc
stos
pusha
call
push
mov
ins
sbb
xchg
mov
(bad)
push
rcr
cmps
add
movs
and
js
add
ins
not
jmp
add
xchg
sbb
push
test
push
add
ds
sbb
or
or
fdivr
test
in
inc
std
add
mov
dec
shr
jno
icebp
loope
fld
fild
ja
push
and
xchg
rcl
mov
ror
push
sub
inc
xchg
test
adc
sub
adc
jae
lahf
cdq
repnz
(bad)
push
loopne
and
sbb
add
mov
or
mov
dec
scas
rsm
imul
sub
sub
xchg
stos
sub
pop
mov
ins
add
adc
das
inc
into
repz
jns
adc
retf
aas
sub
faddp
gs
mov
lahf
mov
dec
mov
leave
out
push
cli
jg
clc
mov
sub
in
and
pop
inc
mov
mov
mov
inc
icebp
xchg
(bad)
call
and
ja
dec
adc
or
out
cmp
inc
cmp
add
pop
xchg
and
jecxz
cld
in
push
in
xchg
and
ins
mov
push
das
adc
cwde
jmp
leave
aam
or
mov
jg
cli
sub
xchg
pop
xchg
fdiv
hlt
sti
arpl
lahf
ror
fs
fdiv
cmp
mov
ds
xchg
js
inc
test
inc
jl
xlat
aas
movs
push
jb
movs
or
loopne
js
and
jb
push
fcmovnbe
sub
leave
popf
imul
idiv
pop
inc
test
and
nop
fidiv
mov
jecxz
into
js
daa
mov
jno
(bad)
in
cmp
jmp
popf
mov
ins
inc
pop
mov
xchg
pop
inc
out
mov
aam
mov
ins
cmp
jmp
xchg
or
(bad)
hlt
sbb
stc
or
ret
scas
stos
ja
punpckhwd
stos
into
jp
sub
sub
rcl
mov
std
in
cmp
cmp
or
in
jno
cmp
loopne
repz
jo
jg
icebp
cmp
jne
and
imul
rol
jmp
iret
outs
sbb
loopne
shl
mov
ret
fsub
mov
loop
mov
sti
push
or
adc
xor
adc
mov
stos
test
cmp
ins
inc
and
pop
scas
push
mov
out
or
mov
mov
out
std
xchg
jecxz
jo
mov
mov
fistp
aad
xlat
pusha
cmps
xor
mov
sbb
sub
aad
add
cmp
and
sbb
ds
mov
shl
arpl
add
retf
mov
lds
add
rcl
js
sbb
lahf
dec
repz
add
(bad)
fmul
jae
retf
push
call
jecxz
jmp
mov
add
fs
adc
fwait
jp
inc
lahf
or
push
in
pop
jl
push
sub
cld
movs
rol
leave
mov
mov
int3
adc
(bad)
jne
dec
into
retf
shr
mov
scas
popf
fisttp
movs
iret
and
loopne
xchg
adc
inc
in
mov
sti
movs
repnz
cmp
enter
pop
pop
dec
ins
shl
jmp
mov
shr
pop
cmp
adc
ret
pushf
inc
lods
jecxz
push
in
cwde
jl
cmps
adc
sub
rol
cmp
movs
sbb
mov
jmp
and
xor
addr16
das
cmc
adc
add
or
mov
ss
sub
xor
inc
jmp
rol
cmp
cli
mov
mov
xchg
test
push
mov
mov
sub
mov
in
stos
cmp
fist
inc
lahf
adc
ja
pop
push
cmp
ins
iret
ds
cmps
pushf
shl
aaa
cld
pop
out
sahf
inc
(bad)
xchg
jmp
rol
mov
shr
inc
fs
fsubrp
shl
jbe
inc
cmp
fnstsw
and
mov
rcl
xor
mov
push
in
gs
mov
out
mov
push
sbb
add
mov
test
cmp
push
adc
jns
rcr
sbb
and
scas
push
mov
jb
fs
jb
aaa
pop
inc
cmc
test
and
arpl
fild
xchg
sbb
repz
mov
jae
xchg
push
mov
out
fdiv
cld
gs
mov
mov
mov
dec
rcr
(bad)
icebp
loope
fld
fild
ja
push
and
xchg
rcl
mov
jmp
sar
stos
xchg
mov
mov
or
and
stos
test
add
in
push
mov
dec
ins
jmp
fcmovnb
and
cld
xor
jmp
call
hlt
inc
jl
jmp
mov
retf
arpl
in
ss
sbb
jb
fisttp
cmp
retf
pusha
cmp
lods
addr16
gs
jmp
pushf
add
pop
xor
enter
cwde
cli
scas
fild
push
inc
xor
cmps
inc
or
adc
mov
loope
fxch
adc
pop
jne
pop
outs
mov
int3
fadd
sub
inc
jne
or
sbb
push
movs
add
je
fbld
xchg
sub
sub
push
xchg
mov
ret
mov
mov
out
cmp
and
jb
sub
pop
jmp
enter
pop
dec
aad
jl
movs
test
push
add
adc
push
pop
cmp
inc
shr
(bad)
xchg
xor
sahf
push
es
mov
gs
les
pop
pop
add
stos
cmp
jo
cmp
sub
or
inc
aad
fmul
xchg
and
jmp
nop
adc
pop
mov
cmp
push
arpl
sbb
mov
push
xor
fsub
inc
movs
outs
push
leave
xchg
add
cmp
cmp
sub
shr
pop
sbb
dec
lds
clc
pop
cmp
pop
xor
jp
xor
or
xor
loopne
in
sbb
mov
dec
sub
pop
inc
fstp
push
xchg
sub
cli
loope
xchg
(bad)
sub
imul
or
stos
and
add
sub
sar
xchg
je
dec
jp
jns
loop
add
xor
mov
repz
inc
int
cmp
into
inc
jnp
pop
out
(bad)
in
sbb
(bad)
out
jmp
mov
mov
test
les
pop
rcl
xchg
rol
sub
movntps
pop
xor
push
data16
ss
stos
std
xchg
in
test
aam
or
mov
pusha
repnz
mov
rcr
sbb
out
push
jg
hlt
int
add
hlt
mov
fwait
int
cmc
pop
fdiv
imul
pop
gs
gs
loop
sub
dec
mov
sub
add
test
dec
and
repnz
jo
mov
cmps
psubw
dec
mov
mov
dec
rcr
mov
sbb
js
or
sub
ret
pop
icebp
test
push
mov
mov
aas
fnstenv
(bad)
popf
das
addr16
push
dec
sahf
push
cmp
xchg
iret
je
ins
xchg
stos
cmp
add
jns
pop
aad
xor
jb
out
jmp
(bad)
pop
retf
push
arpl
repnz
xchg
movs
jb
xchg
(bad)
test
adc
xor
mov
push
(bad)
xor
popf
dec
sbb
xchg
in
sbb
pop
add
test
retf
inc
fidiv
push
je
lods
in
in
(bad)
out
ja
push
std
mov
das
outs
sbb
inc
push
pop
jg
and
pop
jecxz
pop
xchg
or
daa
and
out
(bad)
mov
popa
mov
push
movs
pop
xchg
pop
xor
inc
adc
sbb
or
test
das
bound
repz
aas
daa
cmp
(bad)
js
mov
cli
jmp
loopne
mov
mov
mov
loop
mov
sbb
ret
xor
cmp
fs
(bad)
shl
xlat
jmp
les
fcomp
repnz
aaa
in
popf
imul
adc
in
movs
popf
cwde
aad
inc
std
xlat
xchg
inc
xor
mov
mov
xor
mov
imul
xor
mov
dec
(bad)
not
pusha
aas
repnz
cld
js
lds
outs
push
adc
ret
mov
clc
dec
pop
out
mov
jo
xor
mov
add
inc
lock
clc
mov
xor
and
inc
int
mov
pop
test
xchg
inc
mov
jae
cmp
add
in
cmp
call
repnz
cdq
data16
mov
or
jge
mov
xchg
test
jbe
mov
mov
(bad)
test
outs
adc
push
loope
mov
jo
mov
les
pop
xlat
fnstsw
jge
leave
(bad)
scas
xchg
(bad)
in
sub
inc
adc
jle
arpl
mov
mov
gs
xchg
or
mov
outs
in
int3
mov
loope
xchg
add
fsubr
sti
adc
es
inc
cmps
div
mov
rcr
or
pop
shr
cdq
into
xchg
scas
pop
xor
jecxz
mov
popa
call
xlat
jle
mov
scas
pusha
sub
inc
mov
or
cdq
(bad)
xor
adc
adc
test
shl
or
mov
add
into
hlt
mov
cmps
call
xchg
pushf
xchg
lds
mov
rcr
inc
mov
add
clc
leave
mov
xor
mov
dec
mov
add
sbb
jmp
xchg
loop
ins
xchg
xor
xchg
sbb
je
xor
imul
test
or
adc
ret
popa
leave
xchg
mov
adc
dec
add
dec
in
dec
and
mov
out
sbb
xchg
fstp
lea
les
leave
sub
xchg
dec
scas
popa
cld
js
aaa
push
fnstenv
pop
daa
pop
aad
dec
stc
push
in
push
add
sbb
out
dec
xor
icebp
sbb
imul
test
cld
push
rcl
mov
enter
push
pop
neg
mov
cmp
rol
inc
inc
push
loop
in
shr
xlat
pop
stos
xor
clc
fs
adc
xor
mov
mov
xchg
test
or
aam
jle
xchg
xor
loopne
add
in
mov
sbb
fs
retf
dec
das
sub
adc
add
fidivr
fstp
inc
(bad)
xchg
mov
mov
loop
inc
jecxz
fwait
inc
sbb
fidiv
push
out
xchg
push
mov
data16
sbb
add
(bad)
mov
or
xor
inc
mov
add
dec
adc
mov
aam
lar
push
cmp
ins
jbe
mov
add
or
data16
sub
inc
lods
mov
ins
dec
call
jnp
jbe
arpl
out
xor
ror
retf
jp
out
jb
sbb
in
cmc
addr16
(bad)
leave
push
push
jg
jae
lods
adc
fidiv
fstp
(bad)
in
sub
mov
shr
jae
cmps
inc
shl
bound
imul
xchg
inc
(bad)
cmp
pop
adc
and
inc
jle
push
test
arpl
pop
jae
stc
or
scas
ins
inc
pop
mov
mov
mov
pop
out
inc
pop
bound
dec
mov
xlat
cwde
xchg
in
pop
cmp
cli
cmp
fidivr
xchg
shl
into
ins
loopne
call
cmc
sbb
pop
in
frstor
cmps
push
mov
jns
cmc
js
out
fild
cmp
std
push
jns
in
jb
cdq
push
outs
jo
add
nop
or
arpl
sub
and
jne
shl
stc
dec
mov
imul
ds
sub
push
push
shl
inc
ds
mov
and
mov
jbe
and
xor
cmps
mov
jg
(bad)
loope
loopne
or
std
jne
out
out
outs
sub
int3
dec
pop
xchg
test
rol
test
sbb
cwde
jo
mov
add
jns
pop
pop
(bad)
lock
mov
cmp
jge
das
loopne
dec
icebp
(bad)
das
sub
shl
xor
xchg
xchg
fwait
test
inc
xor
jno
lea
lds
and
xlat
add
add
pop
sahf
(bad)
movs
pop
and
movs
push
aas
push
pop
mov
(bad)
stc
jmp
and
adc
sub
sub
or
push
bound
sub
cs
mov
sahf
int
jae
dec
inc
das
jb
pushf
mov
retf
xor
mov
imul
inc
xor
xchg
mov
dec
sbb
cdq
cmps
adc
mov
adc
pop
iret
popa
fbstp
pop
gs
cmp
int
cmp
xor
jnp
adc
jns
dec
xchg
push
popf
xchg
add
(bad)
adc
mov
repnz
jmp
ss
daa
add
out
in
scas
xchg
mov
mov
jge
stc
je
dec
pop
outs
adc
sub
das
push
cs
cs
cmps
(bad)
or
enter
sbb
push
imul
push
nop
clc
adc
and
dec
es
test
inc
dec
sub
jns
mov
test
test
test
ds
adc
(bad)
jecxz
hlt
pop
push
pushf
mov
xor
mov
int3
adc
push
jbe
pop
dec
shl
xor
lock
stos
shl
adc
fisttp
xchg
xchg
xor
test
push
jns
adc
pushf
les
ja
sbb
and
icebp
sbb
imul
jge
arpl
jge
retf
ja
imul
and
or
add
and
sbb
adc
sbb
test
xchg
adc
iret
mul
jle
cmp
scas
mov
ins
mov
cli
clc
out
push
hlt
dec
loope
or
push
scas
jmp
in
push
mov
clc
(bad)
mov
aad
outs
sub
lods
out
(bad)
jle
push
rcr
in
mov
jbe
cmp
out
add
or
sbb
sub
mov
mov
mov
leave
mov
xchg
sub
add
xor
out
cwde
cmovs
test
outs
and
mov
test
stc
cmc
cmp
cmc
fadd
scas
jmp
call
sub
movs
out
stc
adc
sbb
adc
out
sar
lods
mov
test
outs
ss
jb
js
out
jl
add
xor
clc
jae
(bad)
arpl
mov
sbb
cmp
addr16
inc
lods
out
xchg
push
or
inc
push
imul
sub
sub
lods
jmp
push
jae
xor
or
jmp
stos
or
iret
rcr
idiv
je
loop
icebp
(bad)
loop
mov
imul
jge
and
shr
mov
cmp
push
(bad)
sub
ins
jns
sub
mov
jbe
cmp
adc
mov
call
retf
int
xor
cmp
in
mov
pushf
(bad)
scas
jne
imul
mov
inc
les
mov
shr
psubsw
pop
fs
sbb
sbb
sub
xchg
cmp
sub
sub
inc
and
sahf
idiv
sbb
mul
dec
pop
cmc
inc
fisttp
popf
into
jp
add
and
pop
fiadd
pop
xor
arpl
cmc
and
int3
(bad)
retf
push
and
pusha
jbe
push
cmp
lds
sub
inc
pop
movs
stos
push
mov
fcmovbe
mov
movs
mov
add
movs
fcmove
mov
fwait
mov
mov
or
xor
sbb
and
stos
xchg
xchg
mov
lods
xchg
and
mov
rol
push
push
fcom
stos
aam
push
sbb
ja
jge
cli
mov
mov
pop
cmps
cli
cli
jnp
idiv
loope
cmp
xlat
fsubp
fstp
jae
mov
push
jno
mov
xor
fwait
lods
mov
jns
int3
ja
aaa
cli
lea
pop
icebp
cmp
ins
sbb
iret
adc
inc
push
jo
add
sbb
mov
jo
xchg
pop
dec
test
les
cmp
jno
(bad)
sbb
ins
jo
mov
fs
mov
(bad)
xor
jmp
dec
sbb
add
mov
leave
xor
adc
shl
aaa
icebp
popf
mov
pop
aam
sahf
addr16
jns
(bad)
xor
(bad)
icebp
pop
call
adc
mov
cli
push
cli
sub
fidiv
daa
jmp
(bad)
xlat
jge
clc
or
push
fs
jmp
rcl
aas
cld
mov
mov
inc
mov
jmp
jle
xchg
pcmpgtb
dec
add
add
cmp
sahf
cdq
push
push
or
cli
stos
mov
sbb
adc
and
jno
or
ss
fmulp
mov
scas
jnp
inc
fist
cdq
psrld
lds
es
aam
adc
pop
push
mov
enter
in
mov
mov
arpl
mov
fst
cmp
xor
jl
xchg
repnz
mov
popf
adc
jge
ror
adc
pop
sub
cmps
add
dec
jg
mov
fs
shl
mov
adc
xor
inc
pop
hlt
jp
fist
je
pop
jae
pop
push
popf
xchg
(bad)
shl
or
xor
xchg
inc
(bad)
cmps
movs
add
mov
xchg
push
iret
mov
push
pop
add
adc
inc
test
fisttp
(bad)
jne
imul
sbb
pop
ins
jne
inc
aas
cmp
lea
push
add
mov
push
sti
jecxz
jmp
mov
stc
mov
push
daa
ss
into
and
bound
cmp
inc
popf
mov
mov
and
add
inc
inc
or
push
jae
cmp
mov
push
mov
add
loop
ds
out
add
into
js
(bad)
push
fst
mov
cmp
ins
push
pop
div
jno
mov
cmps
or
fsub
aam
(bad)
mov
out
(bad)
mov
push
mov
rol
xor
cmc
xor
cmp
sub
js
daa
mov
gs
lods
jg
and
push
mov
std
rcl
ficomp
pop
shr
test
sub
or
arpl
pop
(bad)
hlt
add
xchg
aad
loop
add
add
bound
and
dec
xlat
jae
(bad)
iret
xchg
sub
jl
stc
cld
sti
and
xor
mov
pop
cmp
xchg
add
in
inc
or
int
xchg
nop
sbb
cli
jbe
cli
mov
loope
es
add
push
enter
test
in
sbb
fidiv
ret
or
inc
call
int
gs
sbb
xchg
and
xlat
into
test
in
sbb
cwde
cmp
popf
inc
(bad)
data16
pop
mov
pusha
xchg
sahf
xchg
movs
lahf
or
sub
sbb
xor
jo
push
dec
ins
shl
cmp
sbb
mov
or
iretw
je
sbb
inc
and
popf
push
sti
xchg
test
fldcw
jmp
inc
ins
cmp
mov
inc
add
add
pop
and
or
mov
rcr
adc
lea
es
ds
lea
call
xchg
gs
mov
loopne
cmp
dec
xor
aam
ins
cdq
inc
out
popf
scas
jns
add
jge
mov
and
(bad)
dec
cmp
jae
(bad)
or
adc
mov
inc
neg
cld
je
xor
fild
inc
lahf
hlt
xor
ins
mov
rcl
movs
pop
sub
sub
cmp
imul
inc
sub
leave
inc
arpl
leave
arpl
mov
inc
shr
jl
fnsave
aas
out
push
fimul
es
repnz
mov
shr
cmps
scas
pop
push
cmc
ins
call
mov
imul
(bad)
aas
adc
mov
dec
lds
test
push
xor
aas
add
xor
jo
add
pop
dec
movs
stos
out
fild
mov
out
or
loopne
or
push
push
(bad)
ins
popf
mov
mov
xor
pusha
or
fnsave
push
mov
stos
(bad)
fst
imul
enter
sub
jno
ins
push
scas
jo
push
nop
call
pusha
enter
push
pop
iret
aam
cs
push
pop
xor
and
jp
pop
test
cs
mov
and
test
mov
pop
in
mov
(bad)
int3
sub
jg
pop
dec
add
mov
mov
dec
mov
repz
dec
je
sbb
xchg
mov
rcr
sbb
cdq
pop
mov
xor
imul
call
jecxz
out
jo
test
add
test
out
pop
jle
sub
les
mov
popf
popa
cmp
imul
mov
sub
push
clc
add
mov
rcl
in
xor
xor
sub
lds
xor
out
inc
test
hlt
xchg
jns
lods
aad
(bad)
fld
rep
pusha
lea
pop
jle
(bad)
mov
xor
mov
pop
daa
es
(bad)
jnp
(bad)
ins
pop
inc
inc
mov
test
push
push
push
ins
call
idiv
and
push
outs
dec
mov
dec
das
inc
mov
xchg
mov
add
inc
sub
nop
jno
nop
fldcw
rcr
adc
addr16
xor
jp
or
pop
ret
repnz
xor
aas
aam
scas
mov
mov
add
xor
inc
retf
xchg
(bad)
loope
xchg
jns
or
mov
rol
jne
mov
cmp
sahf
(bad)
pop
mov
test
loop
rol
add
inc
jbe
inc
retf
xchg
sub
cmp
add
adc
inc
repz
dec
mov
fsubr
mov
sub
out
jg
xchg
pop
jns
or
stc
add
mov
ret
stos
mov
sbb
pop
lock
cmp
lock
enter
rol
jle
dec
pop
cmp
mov
add
cmps
cmp
and
iret
push
mov
loope
rcr
aas
push
jl
cmc
imul
mov
push
hlt
data16
jmp
stc
fmul
ins
ds
std
sub
std
and
dec
jns
cwde
cld
sub
xor
xchg
lods
jo
mov
cmp
jne
xor
cmp
or
sub
add
adc
sbb
mov
pop
add
cmp
xchg
add
add
retf
sub
ds
(bad)
repnz
jnp
mov
int3
pusha
or
jle
mov
pop
(bad)
cmps
out
push
dec
or
dec
cmp
fwait
enter
cmps
mov
and
adc
(bad)
dec
retf
rcl
jae
push
int3
cs
test
icebp
add
push
ror
data16
loop
xlat
and
adc
jb
call
push
ror
mov
int
inc
sbb
enter
mov
jge
and
ret
or
mov
pop
cwde
xor
aad
es
xchg
loop
mov
dec
cmps
shl
jge
xchg
cld
dec
and
fdiv
daa
fcom
add
inc
dec
retf
adc
mov
mov
push
call
rcl
inc
inc
adc
jl
add
das
pop
sbb
mov
jg
mov
(bad)
loopne
jg
and
jbe
in
(bad)
icebp
pusha
dec
fimul
jl
mov
pop
imul
cmc
scas
shr
test
ja
cmp
mov
outs
les
into
aas
ins
push
lods
pop
mov
inc
lock
fs
ret
jl
sbb
add
retf
sbb
or
xor
shr
push
fisub
inc
jae
sar
je
scas
push
or
loope
pop
and
jb
int
ss
jecxz
push
sahf
or
push
enter
mov
test
(bad)
mov
and
icebp
jmp
hlt
mov
nop
enter
je
imul
push
pop
push
fbld
dec
push
pop
mov
mov
add
cmc
(bad)
adc
mov
mov
ss
retf
and
test
mov
jmpw
addr16
loopne
jmp
push
test
popf
and
adc
dec
into
push
aas
push
xor
ret
call
retf
sbb
jne
mov
in
je
out
sbb
mov
(bad)
and
(bad)
mov
(bad)
(bad)
pop
loope
jae
out
movs
cmp
lock
ret
sbb
jle
std
sub
or
lods
xchg
jge
aam
call
loop
dec
loop
data16
mov
push
xchg
lahf
sbb
in
dec
xchg
lods
push
cmps
cmp
xor
push
mov
sbb
xchg
outs
mov
lock
mov
dec
xchg
iret
cmp
jmp
jno
movs
pop
mov
and
stos
push
adc
stos
mov
fst
dec
cmp
fwait
enter
dec
jnp
test
push
sub
mov
xchg
repnz
mov
cmp
stc
aas
test
jb
sub
xlat
dec
push
pop
push
test
hlt
in
nop
or
adc
sbb
xor
add
mov
mov
add
push
and
data16
icebp
sahf
(bad)
jb
shr
xchg
mov
retf
xor
push
iret
cdq
adc
sbb
dec
mov
out
add
pushf
add
out
lds
or
fld
sub
sahf
stos
cs
push
retf
and
imul
das
jl
bound
jg
and
add
mov
mov
inc
mov
jmp
dec
and
cmp
test
push
cli
pusha
pusha
scas
mov
test
ret
jge
and
xor
mov
jecxz
dec
cwde
loopne
faddp
into
add
add
adc
cmp
dec
dec
and
pop
out
mov
jno
into
cmp
lods
jae
pushf
loop
das
scas
loop
push
mov
fchs
in
pop
hlt
mov
jne
xor
jo
cmp
sub
xor
dec
mov
lahf
out
std
lds
xor
jmp
mov
test
leave
leave
push
adc
popf
shl
fmul
sbb
push
test
ja
jo
in
imul
enter
and
test
shl
aam
jge
jbe
lea
sub
cmp
push
mov
bound
mov
sti
mov
push
sti
sahf
inc
repz
ret
lods
fdivr
jecxz
sbb
mov
shl
inc
retf
popa
div
dec
mov
cmp
dec
add
fidiv
add
sub
pop
int
xor
dec
icebp
pop
stos
icebp
cmps
repz
mov
(bad)
jnp
clc
jae
iret
pop
cmc
(bad)
repnz
out
mov
leave
sar
repz
iret
mov
iret
push
cli
jl
jmp
jns
adc
movq
dec
ja
inc
fisttp
jmp
mov
adc
test
js
fnstenv
or
add
sbb
push
sbb
rcl
xchg
and
or
sub
pop
int3
pusha
or
mov
xchg
fisttp
push
stos
xchg
jp
adc
imul
xor
js
push
and
xchg
adc
dec
retf
cmps
sub
mov
mov
fwait
aad
ret
push
or
mov
pop
jge
nop
pop
mov
(bad)
adc
sub
sub
mov
cmp
hlt
mov
adc
aad
jle
jg
lods
addr16
jle
rcl
clc
pop
adc
jle
stos
sub
(bad)
pop
xchg
inc
and
frstor
push
or
push
ss
fiadd
xor
push
aam
adc
sbb
jl
add
sub
mov
jo
xor
add
jno
mov
aam
mov
pop
sub
popf
adc
sbb
sbb
sbb
adc
and
dec
lock
jmp
cmp
xor
lock
jg
inc
test
hlt
xchg
js
pop
fistp
push
cmps
fst
mov
jo
adc
aam
mov
xor
mov
fcomp
into
movs
int
(bad)
dec
mov
das
sbb
xchg
jp
xor
fist
mov
jge
nop
fwait
iret
jae
in
repnz
pop
sub
sahf
jp
ins
mov
stc
jne
mov
xor
test
or
out
jno
push
and
mov
int3
and
and
jb
movs
aam
int
je
push
cmps
push
mov
add
imul
ins
pop
sti
add
dec
or
sub
ins
mov
fmul
push
dec
test
jle
pop
ins
data16
sbb
ror
push
pop
(bad)
jne
test
shl
shr
mov
ss
std
mov
ja
mov
xor
and
push
jae
jne
add
mov
xchg
inc
int
in
out
pop
sbb
fcmove
or
xor
mov
cmp
sar
push
mov
mov
xchg
lock
std
retf
xchg
mov
into
xor
xchg
mov
jb
in
jb
fistp
(bad)
loopne
cmp
xor
jle
jmp
add
clc
arpl
mov
xor
xchg
dec
push
jle
(bad)
mov
jae
inc
sbb
loop
cmp
mov
cmp
and
imul
sbb
inc
pop
dec
mov
jmp
or
lods
adc
sbb
adc
outs
sahf
mov
shr
push
cmp
mov
cmp
xchg
aas
fisubr
mov
jl
aad
mov
test
mov
or
repnz
pop
sub
iret
and
mov
sbb
stos
sbb
sub
sbb
sbb
test
scas
sub
cmps
xor
int3
lea
cmps
test
push
js
lods
cmps
mov
mov
mov
sbb
xor
ja
clc
pusha
(bad)
aam
xchg
lahf
scas
js
mov
mov
and
out
mov
jg
movs
(bad)
test
lods
mov
adc
icebp
push
popa
push
push
jmp
sub
cdq
inc
jge
(bad)
push
add
ja
inc
mov
bound
inc
lods
loopne
test
or
adc
xchg
out
add
call
clc
or
adc
pushf
adc
mov
sub
adc
test
call
xchg
xchg
push
fwait
shl
mov
xchg
out
push
retf
mov
sbb
dec
mov
into
adc
cmp
sahf
ss
push
aas
adc
and
jg
or
hlt
aas
pusha
push
addr16
inc
adc
inc
push
(bad)
pop
out
aam
cdq
sbb
repnz
mov
inc
cmp
push
loopne
ficom
int
push
ins
jecxz
ins
aaa
or
fstp
lock
pusha
in
adc
mov
sbb
bound
aad
jno
sub
(bad)
cs
pop
adc
jne
es
mov
imul
mov
ins
mov
sbb
test
das
icebp
lds
popa
jno
stc
call
into
mov
or
push
mov
inc
daa
arpl
jb
mov
pushf
dec
sub
sbb
sbb
loop
ins
scas
jb
nop
lods
sub
repnz
test
jmp
js
test
mov
mov
adc
sub
push
fmul
jmp
xor
mov
cmp
pop
cmp
dec
enter
lahf
lea
dec
jnp
cmp
enter
enter
loope
rcr
fwait
iret
call
dec
movs
sti
xor
iret
jl
or
pop
repz
int
dec
mov
jns
jno
adc
(bad)
push
xchg
cmp
fcmovb
mov
in
pop
sub
jge
add
cld
push
call
mov
test
push
sbb
das
ret
sub
pop
loope
or
lds
in
inc
cwde
rcl
div
test
cmp
lock
outs
and
movs
sbb
aad
sbb
xor
pop
jmp
xor
sbb
popa
adc
adc
push
pop
push
test
fimul
xlat
and
loopne
mov
in
xor
repnz
mov
xchg
push
aas
sar
mov
shl
jne
das
loopne
xchg
sub
xor
mov
mov
mov
jno
cmps
pop
xchg
loop
cmp
cdq
inc
div
xchg
xor
mov
cmps
arpl
mov
unpckhps
push
sub
sbb
test
je
pop
popa
cmp
mov
sbb
lods
into
or
in
mov
pop
jp
ror
(bad)
arpl
shl
cmp
int
cwde
sar
sar
cmp
pop
ficom
pop
data16
pop
call
xor
popa
sbb
push
or
test
test
fild
adc
ins
adc
add
fcom
xor
mov
int3
jo
outs
pop
icebp
add
cmp
js
call
adc
(bad)
es
call
jbe
and
outs
and
iret
pop
sub
and
push
xchg
push
inc
push
sbb
push
mov
movs
(bad)
les
sti
mov
jo
push
loopne
inc
stc
lods
pop
or
xor
mov
xlat
inc
dec
js
inc
push
push
out
push
xchg
mov
(bad)
imul
pop
hlt
cmps
(bad)
mov
mov
or
jmp
enter
add
push
test
js
xchg
push
pusha
outs
aad
pop
cli
cwde
in
xchg
sbb
pop
jmp
out
cli
sub
call
pop
push
ja
pop
daa
imul
pop
xlat
cmp
fs
mov
xor
cdq
lods
mov
sub
xor
pop
inc
(bad)
cmp
cmp
cmp
rcr
xchg
fsubr
movs
sub
in
dec
scas
jecxz
fprem
xchg
loop
out
rcr
loop
dec
out
ds
add
xchg
cli
push
loop
push
lds
push
jmp
aas
es
hlt
out
mov
les
int
jnp
out
(bad)
movs
es
mov
mov
movs
push
rcr
fst
jge
fcmovb
pop
iret
ror
or
cld
and
xchg
sbb
shl
jp
mov
adc
das
jbe
push
rcl
adc
add
aas
loop
adc
dec
push
jae
stos
mov
or
sbb
bound
scas
je
and
div
sub
bound
fmul
jns
imul
xor
inc
adc
jp
nop
mov
or
movs
add
sub
xor
jns
pop
movs
arpl
pop
lahf
or
or
or
scas
shl
adc
mov
and
mov
cmp
stos
mov
add
push
int3
mov
mov
in
and
imul
adc
pop
pop
add
ins
les
or
push
xor
mov
pop
jmp
js
adc
jp
inc
fimul
imul
mov
pop
in
lock
or
and
xchg
inc
shl
sbb
add
mov
(bad)
mov
push
not
sbb
jae
nop
rcr
xor
rol
mov
and
sbb
jnp
mov
adc
and
ins
jns
in
daa
aam
int
lds
jecxz
push
aad
sti
dec
sub
addr16
jecxz
jecxz
gs
gs
xchg
cmp
jnp
dec
fimul
les
sub
and
aad
mov
jo
xor
push
pop
add
cs
adc
pop
sbb
cmp
jmp
mov
jb
addr16
fisttp
movs
mov
mov
clc
pop
enter
mov
in
push
xlat
inc
ins
push
lahf
mov
and
jne
std
cmp
les
lds
ja
scas
loopne
nop
pop
lock
cwde
jle
cdq
pusha
cli
cdq
and
sahf
mov
cmp
push
js
outs
mov
adc
fcomp
mov
movs
in
popa
cmp
gs
or
xlat
mov
stos
jg
xlat
push
in
fwait
pop
daa
mov
jno
push
inc
dec
mov
ds
jbe
je
and
out
mov
aad
call
(bad)
iret
sub
add
imul
mov
in
mov
jge
or
and
jp
xor
jns
cmps
mov
jnp
or
in
inc
fisttp
push
xlat
jne
test
clc
dec
jne
fstp
push
jb
add
mov
in
ror
mov
dec
ret
jo
(bad)
jae
jecxz
mov
xchg
gs
push
(bad)
mov
icebp
loope
stc
not
cmp
outs
sub
cdq
mov
inc
test
(bad)
in
add
push
mov
xchg
mov
dec
call
cmp
fwait
jnp
hlt
das
mov
push
lods
leave
pop
push
cmps
repz
out
aaa
sub
das
ror
xor
sub
cmp
or
retf
xchg
bound
pop
call
xchg
sbb
outs
in
shl
pushf
(bad)
sbb
fcmovnu
aad
sub
call
rcr
mov
sub
fldenv
stc
jge
loope
xor
inc
xor
popa
mov
imul
je
xchg
dec
stc
xchg
mov
pop
ja
pop
mov
out
loopne
addr16
test
or
sbb
test
xchg
dec
mov
pop
jmp
sub
jns
ds
lds
int
add
lock
xor
aad
call
cmp
push
pop
rcl
sbb
xor
popa
clc
ds
inc
mov
pusha
iret
pop
popf
popf
lods
mov
mov
and
test
sahf
mov
dec
(bad)
cmp
mov
cmps
imul
popf
and
inc
or
pop
push
xchg
ja
push
data16
cld
mov
sbb
(bad)
data16
pop
cmps
pop
jbe
xor
jno
stos
call
popa
jge
int
push
inc
jo
cld
push
cmp
add
pop
or
push
cli
loop
fist
dec
aad
loopne
addr16
retf
ins
xlat
sub
arpl
mov
call
dec
(bad)
(bad)
push
daa
pop
cmp
in
sub
add
dec
and
cmp
xchg
loop
shl
and
xchg
xor
sub
push
std
les
leave
xchg
mov
das
dec
fcom
repz
sar
ins
ins
inc
push
js
lahf
fsubr
stos
pop
repz
push
add
popf
popf
popf
xchg
add
popa
sar
ss
xchg
sbb
imul
or
mov
dec
inc
add
xlat
and
shl
daa
pop
pop
(bad)
aas
dec
in
xor
lods
sub
adc
xor
jbe
je
dec
dec
pop
mov
repz
sub
dec
repz
and
pushf
jne
mov
mov
test
xlat
xchg
jmp
or
imul
sbb
inc
add
cmp
mov
(bad)
xchg
mov
sbb
cdq
cmps
dec
(bad)
push
or
adc
or
and
sbb
out
add
fistp
pop
imul
test
pop
repz
imul
push
leave
sahf
cmp
scas
jae
pop
dec
xchg
mov
adc
or
cmp
push
pop
aaa
xor
mov
shr
cmp
mov
dec
sahf
add
ret
popf
mov
cmp
shr
jns
popa
es
xchg
pop
imul
jae
sub
push
adc
popf
sbb
jns
ret
retf
fldenv
pop
cmp
jle
mov
add
xchg
pop
in
jnp
fld
aaa
aas
call
test
mov
push
ins
or
int
push
sbb
sub
mov
fdiv
call
and
push
enter
in
mov
ret
push
ss
div
dec
je
fsubr
in
fwait
mov
adc
cli
cdq
inc
ret
sub
pop
sub
and
mov
xchg
xchg
xor
mov
ror
mov
push
or
cmp
aad
imul
pushf
aam
fwait
hlt
adc
cmp
stc
xchg
pop
xchg
push
ins
add
jae
daa
lahf
cmc
push
imul
out
adc
lea
lods
ss
xchg
shl
cdq
jae
cmp
das
xchg
loope
push
sub
add
cs
inc
add
ins
cmc
arpl
mov
loop
and
retf
mov
loope
cmp
mov
inc
lods
sub
mov
movs
ins
adc
dec
mov
fst
(bad)
mov
jae
sub
imul
movs
pop
add
scas
scas
std
jnp
aad
gs
stos
fwait
test
push
pop
(bad)
push
stos
nop
data16
shl
ja
mov
cmp
cdq
popa
adc
cs
(bad)
fidiv
and
push
mov
(bad)
xchg
sub
popf
jno
push
(bad)
mov
xor
in
push
cli
push
imul
push
mov
ret
ins
mov
(bad)
cmp
mov
adc
jecxz
lods
ret
push
leave
inc
ins
add
xor
jb
loop
in
xchg
pusha
jecxz
push
call
rcl
movs
mov
pop
adc
stos
push
stos
leave
pop
or
in
out
mov
pop
jl
xor
sbb
int3
aaa
(bad)
stos
adc
mov
lds
cld
aam
xchg
xchg
les
imul
push
mov
ret
fidivr
rol
sti
gs
pushf
pop
adc
jb
xor
clts
fbstp
xchg
xor
pop
sub
fimul
pop
add
loopne
lods
inc
cmps
lods
adc
mov
add
lods
fimul
pop
es
or
in
xchg
or
icebp
outs
daa
push
retf
imul
int3
sahf
mov
push
jo
or
xchg
aam
mov
add
or
mov
fcmovu
fmul
clc
or
xor
es
cmp
mov
shl
leave
or
jmp
ins
xchg
int
pop
lds
dec
jno
or
and
data16
mov
in
in
mov
scas
call
adc
cmp
cwde
les
call
stos
ins
enter
(bad)
loope
mov
mov
inc
pop
idiv
inc
mov
outs
add
popa
nop
add
add
jne
test
mov
cmp
and
pop
daa
pop
cmp
or
(bad)
add
je
add
or
lock
jns
cmps
scas
mov
loop
ins
jl
repz
cmc
inc
jbe
imul
sub
pop
ss
xchg
imul
sub
fimul
sub
push
sub
jl
aas
jmp
dec
cmp
xor
retf
fs
xchg
mov
js
adc
in
xchg
mov
or
dec
aaa
push
mov
push
and
jb
pop
xlat
pusha
fiadd
pop
lods
mov
shl
mov
adc
hlt
call
pop
pop
push
rcr
push
repz
cmp
movs
pop
xchg
ins
xchg
add
xlat
push
fidivr
in
hlt
(bad)
and
fmul
pop
arpl
aam
cdq
fwait
push
je
mov
in
outs
pop
das
add
aaa
mov
cmp
add
arpl
fucomip
inc
sub
xchg
addr16
or
outs
jnp
inc
aad
pop
mov
outs
push
jbe
call
stos
cmp
mov
xchg
jge
sbb
pop
xor
xchg
mov
dec
fwait
xor
add
fdiv
or
push
pop
fisubr
push
xor
imul
mov
sub
cli
lahf
pusha
sub
mov
inc
xor
add
xchg
dec
xor
fmul
add
mov
(bad)
std
mov
pop
mov
test
out
push
xlat
cmps
iret
cmc
mov
cmp
(bad)
or
jne
in
jge
add
dec
loop
lds
test
push
pop
pop
mov
jecxz
cmp
les
xchg
push
dec
aas
push
loop
fwait
sub
dec
push
shl
lock
pop
data16
daa
ret
add
pop
int
jne
movs
mov
mov
test
pop
(bad)
cwde
imul
movs
shl
scas
jno
jno
lods
sbb
mov
dec
push
fld
out
ss
inc
in
ror
push
ds
mov
repz
push
and
out
dec
iret
inc
dec
in
pop
test
sahf
enter
dec
mov
retf
lods
inc
mov
lods
mov
mov
jne
ror
shr
fimul
mov
xlat
clc
loop
dec
nop
int3
ss
xor
pop
out
ds
ja
fs
das
cvtpi2ps
pushf
jg
inc
jo
xchg
scas
inc
call
popf
mov
inc
int
outs
mov
add
fwait
adc
idiv
fwait
adc
int
into
das
(bad)
lods
mov
fdivr
push
test
cmp
jne
test
mov
jbe
inc
ror
add
pop
jmp
push
pop
mov
push
fdiv
inc
push
sbb
mov
ins
inc
fsubr
mov
adc
dec
mov
jmp
fiadd
mov
gs
addr16
mov
popa
into
clc
sahf
jg
sbb
scas
mov
pop
pop
fisub
xchg
mov
fs
ins
dec
sahf
pop
add
jnp
xlat
dec
push
sub
and
ins
dec
mov
sub
cdq
loop
popa
fmul
pop
mov
add
xchg
adc
or
pop
mov
lods
call
mov
cmps
jg
jnp
(bad)
pop
jns
shl
xchg
push
(bad)
out
mov
std
leave
idiv
in
push
icebp
(bad)
call
jnp
mov
jmp
loop
iret
popa
outs
(bad)
fsubr
ja
inc
push
jmp
inc
arpl
pop
mov
aad
jne
jno
mov
dec
sub
(bad)
stc
xor
cli
cmp
jbe
cdq
sbb
adc
dec
loop
mov
fs
mov
cmp
dec
mov
xor
jb
pop
xchg
movs
ret
imul
pop
mov
and
ror
arpl
add
test
rcr
inc
adc
stos
add
(bad)
es
movs
daa
int3
or
dec
pop
cli
adc
xchg
out
aas
mov
jns
sub
push
daa
gs
cmps
mov
lahf
mov
xor
pushf
mov
inc
dec
dec
adc
int3
cmps
inc
push
movups
cli
pushf
in
cli
repnz
and
sub
push
and
add
sub
mov
push
inc
inc
sub
sub
movs
test
imul
mul
bound
adc
push
daa
mov
and
shr
fst
out
jmp
aaa
clc
adc
and
mov
mov
shl
push
push
es
leave
xchg
out
mov
or
popf
sbb
test
fst
cdq
(bad)
fadd
sbb
xor
jb
fnsave
(bad)
out
jae
out
jmp
in
bound
add
xor
pusha
adc
addr16
(bad)
(bad)
dec
scas
out
repz
aas
jle
repz
pushf
mul
mov
jle
call
movs
pop
retf
ins
jmp
pop
test
lahf
dec
cmp
in
xor
jno
dec
ins
bound
in
mov
mov
mov
pop
(bad)
dec
sti
push
or
cli
inc
or
pop
xchg
(bad)
cmp
mov
test
sub
mov
les
push
sti
pop
daa
and
bound
mov
mov
jp
mov
jle
fsub
jmp
cmps
shr
push
leave
adc
pop
add
cmps
xchg
xchg
push
inc
es
mov
pop
out
sub
(bad)
mov
sub
add
and
or
std
mov
iret
dec
and
out
hlt
(bad)
mov
mov
outs
xchg
push
(bad)
cwde
xchg
mov
dec
mov
sbb
jb
out
jl
xchg
es
add
add
push
mov
mov
add
sub
xor
js
aas
xchg
cmp
xchg
(bad)
neg
jg
pop
shl
sub
inc
jmp
arpl
sbb
inc
frstor
mov
and
cmp
test
jecxz
adc
(bad)
mov
sbb
or
dec
fsubr
pop
adc
cmps
icebp
sbb
cmp
push
repz
(bad)
jg
std
push
bound
pop
jo
movs
mov
jnp
and
test
into
sub
push
repz
xchg
and
ret
sbb
sahf
je
in
mov
mov
inc
es
outs
xchg
mov
hlt
xor
imul
outs
(bad)
and
push
jno
cs
pop
adc
lods
out
xor
mov
mov
das
and
int3
or
popf
adc
push
fisub
pop
cmp
imul
sub
mov
je
test
outs
push
inc
imul
cmps
shr
movs
daa
sub
and
stos
nop
sbb
test
jne
or
push
stos
jbe
mov
sti
mov
sub
cdq
(bad)
mov
mov
dec
stos
punpcklbw
inc
xchg
aam
fcomp
nop
mov
cwde
xor
popf
outs
inc
or
dec
ror
shl
adc
xchg
pushf
inc
imul
jg
ja
sub
out
test
outs
xchg
xor
fldcw
adc
or
test
movs
jmp
sub
enter
or
push
lods
in
xchg
lock
sar
push
inc
sbb
ror
cmp
data16
mov
xchg
fbstp
push
xchg
icebp
mov
push
push
jl
mov
or
sbb
sub
enter
or
inc
(bad)
repz
and
pop
and
dec
call
test
jge
call
sahf
neg
into
adc
sbb
scas
jno
cwde
mov
adc
jnp
dec
ficomp
mov
mov
mov
je
dec
sbb
jns
and
fild
mov
cmp
push
adc
fstp
pop
icebp
sbb
test
mov
pusha
xchg
cmps
jmp
ss
retf
pop
lahf
xchg
dec
cmp
test
xchg
jo
xchg
neg
mov
jge
xlat
sub
and
mov
add
outs
mov
mov
inc
outs
addr16
dec
xchg
and
pop
and
jno
mov
(bad)
(bad)
xchg
inc
push
rcr
push
in
jae
add
dec
and
inc
in
jmp
loop
sub
xor
or
in
sbb
test
jge
call
pop
iret
imul
mov
aam
dec
enter
pop
push
sbb
nop
fs
inc
or
mov
push
aam
mov
sahf
rcr
cli
xchg
fdivr
xchg
sbb
cmp
push
cmp
cmp
cdq
mov
in
js
scas
in
cmc
add
fst
dec
dec
pop
xchg
stos
popa
jns
and
stos
jne
enter
inc
shl
push
mov
mov
sar
sbb
das
int3
pop
sbb
xor
push
mov
mov
lahf
xchg
adc
bound
xchg
pusha
(bad)
sub
adc
pusha
lds
mov
pushf
sbb
popf
xor
aas
movs
int
outs
and
les
cmp
jb
clc
int3
rcl
dec
push
nop
xchg
(bad)
test
pop
out
adc
pop
gs
enter
fdivr
add
bound
jbe
mov
cmp
inc
push
and
hlt
loope
fdivp
sub
jns
push
aam
test
jae
dec
sbb
and
iret
fnstenv
loopne
inc
enter
ins
or
mov
jns
jg
and
lock
cmp
jnp
sbb
shl
bound
dec
adc
fisub
mov
pop
ja
cmps
or
addr16
jp
dec
js
lea
aad
sbb
js
out
fldenv
or
sub
fs
pop
dec
jne
mov
out
jo
inc
pop
rcr
(bad)
vshufps
ins
ret
in
and
cmps
cmp
stos
lock
adc
jae
mov
dec
ror
mov
pop
xor
sub
dec
in
je
mov
ror
adc
sbb
pop
mov
loop
sbb
fcmove
sar
xchg
dec
loope
(bad)
cmp
lods
cmp
sub
push
cld
lea
addr16
cmc
xor
std
dec
jg
test
push
cmp
sub
mov
adc
test
jne
cli
iret
(bad)
xor
xchg
stc
pushf
dec
out
xor
into
mov
lock
dec
popf
add
cmp
adc
adc
pop
in
inc
test
pushf
repz
adc
es
in
mov
xchg
xchg
adc
xchg
cmp
or
pusha
jmp
cwd
(bad)
das
cli
xchg
mov
inc
mov
mov
xlat
imul
or
push
dec
jle
out
(bad)
cmc
push
push
xchg
in
mov
cmp
cmp
(bad)
jp
sub
sub
(bad)
xchg
sbb
add
and
dec
dec
push
jp
ins
jae
lods
xor
stc
fstp
xor
sahf
pop
inc
adc
aaa
test
mov
adc
push
mov
xchg
rcl
lods
dec
and
push
in
rcl
mov
xchg
mov
stos
inc
cdq
lods
fisubr
inc
daa
shr
add
lahf
imul
test
fst
test
dec
mov
add
(bad)
out
sub
retf
pop
mov
and
add
sub
mov
ffreep
mov
nop
ss
call
push
mov
xchg
out
pop
scas
push
pushf
outs
cmp
mov
pop
dec
dec
pop
mov
inc
xchg
xchg
inc
mov
iret
sub
mov
out
mov
fimul
bound
outs
pop
or
jne
(bad)
in
and
sbb
aam
mov
ret
(bad)
jno
add
fadd
sub
daa
hlt
mov
dec
(bad)
in
hlt
loop
aaa
loopne
dec
jne
inc
push
(bad)
mov
das
jg
test
stos
add
mov
add
pusha
icebp
pop
out
hlt
jo
mov
lock
fild
or
xor
data16
jns
xchg
test
mov
jp
push
fs
ret
call
inc
inc
and
cmps
outs
call
cmps
push
mov
mov
aam
mov
stos
retf
and
mov
cmp
sbb
jb
bnd
lea
pop
call
sub
push
aad
out
(bad)
jns
mov
or
in
dec
push
cmps
loope
xchg
push
jne
add
leave
jb
fnstsw
(bad)
ins
adc
mov
call
popa
dec
xchg
popf
fsub
dec
xor
sub
push
loopne
push
push
out
push
rcr
ror
dec
sbb
mov
movs
dec
inc
sbb
mov
repz
push
int3
cmp
in
imul
jecxz
cmp
outs
pop
jp
jbe
push
sar
stos
push
jbe
push
popa
lock
gs
and
dec
mov
or
mov
pop
pop
retf
repnz
test
fisub
mov
cmp
xor
pop
push
sub
or
cdq
(bad)
out
pop
nop
mov
aam
aam
mov
jne
outs
sbb
fbld
sbb
fistp
xchg
mov
scas
jae
xchg
clc
hlt
adc
or
in
jl
push
cmp
xor
(bad)
jo
push
hlt
inc
cwde
lea
add
xchg
jge
imul
xor
mov
mov
xor
enter
xlat
jle
push
hlt
outs
cmps
pop
sub
jmp
pop
jb
xchg
movs
dec
mov
pop
push
ins
clc
pop
pop
sub
push
jae
dec
mov
test
stos
aam
loope
sub
ja
jnp
je
cwde
pop
mov
lock
retf
sub
bound
cmp
outs
jnp
loope
fld
push
std
dec
jne
sbb
fistp
cwde
test
arpl
lods
js
sub
int3
mov
loopne
je
sti
xor
out
inc
xchg
fisubr
enter
scas
repnz
and
shl
cdq
fist
lock
sbb
ss
in
ret
js
retf
push
cmp
fdivr
bswap
xor
pop
mov
jmp
sub
loopne
and
ret
clc
mov
jmp
mov
jno
xor
push
dec
rcl
pop
lods
lods
mov
retf
aam
xchg
lahf
sub
xor
xchg
loope
iret
or
(bad)
mov
repnz
je
push
cdq
aaa
push
cmp
sti
jne
pop
mov
xlat
(bad)
ds
inc
dec
lahf
sbb
or
inc
add
aaa
cmp
jae
xchg
popa
inc
mov
test
cmps
dec
movs
popa
cwde
inc
in
mov
ins
or
push
adc
stc
mov
xchg
pop
sbb
out
add
test
jge
(bad)
xchg
imul
cwde
sub
inc
sti
mov
xchg
push
jmp
fldenv
add
and
out
jp
sub
inc
adc
adc
test
and
dec
pop
mov
or
push
imul
neg
je
mov
stos
sub
push
shr
push
jecxz
mov
gs
imul
mov
xchg
push
xor
rcl
add
pop
call
pop
leave
gs
mov
mov
cmps
mov
test
jo
aaa
cld
dec
stos
test
stc
jp
mov
push
dec
jecxz
xor
jecxz
mov
(bad)
jb
push
pop
or
aas
sbb
imul
inc
nop
les
cld
cs
sti
shl
in
jb
dec
test
stc
xor
das
loop
xchg
add
adc
push
in
aas
mov
loopne
cdq
mov
fidiv
outs
mov
adc
stos
pushf
xor
cmp
movs
sbb
inc
inc
and
hlt
jecxz
cmp
push
test
jns
inc
push
aad
(bad)
xor
fwait
push
int
mov
enter
dec
aam
sub
mov
pop
pop
cmp
mov
hlt
dec
and
ror
fsubr
cmps
test
adc
sbb
or
loope
pop
pop
jnp
pop
xor
rcl
xchg
jns
sbb
out
in
repz
(bad)
or
sub
nop
mov
ja
add
push
jae
push
test
nop
fidiv
mov
push
test
xchg
lods
or
cs
scas
loope
cmp
cld
sbb
aaa
loopne
and
mov
or
(bad)
fimul
outs
ficom
jnp
loop
dec
outs
out
pop
daa
add
(bad)
repz
cmovns
fild
gs
daa
sub
shl
popa
(bad)
loopne
popf
inc
cmp
xchg
loope
or
imul
int
test
icebp
test
jno
xchg
or
stc
mov
dec
pushf
mov
sub
popf
jne
mov
fistp
mov
enter
bound
fadd
jp
mov
mov
pusha
lods
outs
cmp
push
in
mov
mov
loope
ss
cmp
into
add
dec
js
enter
cmc
cmc
outs
adc
xor
int3
stos
es
mov
mov
mov
pop
(bad)
jmp
out
mov
push
push
mov
pop
mov
sar
mov
jae
jle
push
fidivr
pop
in
repz
adc
pop
inc
mov
jne
gs
jl
xchg
xlat
xchg
dec
aaa
mov
or
push
jne
push
xor
fcmovnb
sbb
cmp
or
fdivr
(bad)
sbb
btr
mov
test
mov
sbb
enter
push
adc
mov
pop
push
dec
arpl
xchg
mov
xor
xor
and
(bad)
jg
xchg
push
adc
std
shl
add
daa
fidivr
imul
xchg
sub
jmp
cmp
mov
adc
cmp
adc
or
mov
xchg
add
lea
mov
xor
call
cmp
xchg
cld
xchg
lods
fistp
stos
mov
iret
pop
in
pushf
mov
jecxz
out
in
ins
pop
or
xchg
cs
test
loope
inc
scas
push
enter
aas
fcom
ja
push
xor
adc
in
fwait
iret
in
fimul
in
sub
mov
sar
and
sahf
and
mov
lock
xchg
es
(bad)
jg
jecxz
add
rcr
jne
js
jmp
loop
sub
mov
pop
fist
xor
lea
push
cmp
push
mov
(bad)
sbb
mov
xchg
ins
(bad)
clc
nop
push
push
mov
sub
push
in
xchg
movs
nop
or
xor
sub
cdq
add
in
cmps
mov
xor
fstp
jbe
cdq
jle
cmp
mov
xchg
mov
(bad)
fstp
(bad)
sub
adc
imul
mov
cmps
pop
and
(bad)
rol
sar
retf
fs
cld
adc
fst
cmp
sbb
fucom
lds
pop
pusha
mov
test
mov
mov
repz
(bad)
int3
aam
dec
test
mov
lock
ds
aam
add
and
movs
repnz
sub
cmps
hlt
imul
cmp
(bad)
lds
punpcklwd
jmp
div
mov
call
pop
jns
(bad)
scas
lahf
push
call
pop
nop
mov
push
pushf
sti
inc
mov
jmp
mov
sbb
sbb
push
dec
mov
stos
fisttp
cmps
icebp
pop
jbe
sar
sub
pop
mov
ret
sbb
enter
mov
cdq
ds
inc
pop
popa
cmp
xor
push
mov
and
xor
xor
sbb
lds
xor
xor
movs
rcl
pop
cmp
dec
jl
(bad)
and
dec
enter
test
dec
mov
sbb
xchg
xor
scas
pusha
inc
mov
mov
pushf
ins
popa
imul
jecxz
(bad)
retf
test
sub
lds
jle
lods
jle
mov
loope
add
inc
push
sub
sbb
sub
clc
push
cwde
repz
clc
jle
mov
jp
adc
movs
aas
les
push
clc
pop
push
fistp
test
(bad)
mov
pop
shl
sub
retf
or
dec
jnp
daa
loop
sti
cmp
leave
ins
js
add
adc
sbb
arpl
cmp
es
push
rcr
retf
cmp
push
lods
sub
jmp
mov
dec
popf
mov
sub
cmps
ret
iret
mov
stos
out
xchg
fsubr
sahf
inc
cld
jae
mov
adc
inc
jo
ds
sub
add
mov
jmp
xchg
cmp
xchg
mov
aas
sub
lods
hlt
loopne
mov
aas
dec
cmp
aaa
push
xor
outs
ret
mov
cmp
jbe
xchg
loopne
jp
(bad)
cmp
jnp
imul
xor
mov
int
outs
fsubr
inc
mov
cmp
add
aam
pop
pop
mov
sub
int
fwait
sub
jmp
adc
push
popa
mov
pop
adc
xor
mov
fdivr
pop
sahf
ret
jmp
pop
xor
setb
es
pop
cmps
lods
pop
in
icebp
push
mov
sub
cs
cwde
sub
cwde
pop
daa
sar
jno
loopne
loope
or
leave
ins
xchg
dec
pop
sbb
xchg
ficomp
mov
outs
pop
mov
jecxz
push
pop
jecxz
jne
in
mov
pushf
cmp
leave
jo
or
jp
inc
daa
add
scas
loop
retf
lds
mov
sbb
and
xor
(bad)
push
xor
popf
(bad)
(bad)
fcomp
xchg
mov
test
iret
leave
stc
fwait
test
mov
cmp
jns
mov
jecxz
inc
cmp
inc
xchg
mov
cmp
hlt
push
mov
adc
push
outs
neg
jmp
and
adc
mov
pop
mov
enter
cmp
dec
and
sbb
clc
pop
das
jmp
std
and
or
push
call
xchg
es
retf
jne
sbb
adc
inc
mov
hlt
or
scas
add
sbb
sbb
push
xchg
push
daa
out
sar
call
adc
vpmovmskb
das
pop
jb
xchg
mov
scas
fdiv
movs
scas
jns
dec
mov
pusha
je
pop
mov
jp
cs
cdq
cmp
(bad)
xchg
mov
in
jns
out
adc
jmp
add
dec
fstp
fbstp
js
xchg
or
ds
mov
mov
fwait
ins
rol
cmp
or
fidiv
mov
mov
pop
mov
js
cmps
test
call
call
or
inc
or
or
enter
shr
xor
fist
pop
inc
imul
fisub
into
aam
mov
dec
adc
cdq
mov
arpl
mov
mov
dec
xor
sbb
xchg
ret
mov
cmp
ret
adc
stos
xor
call
fucomp
push
adc
push
aaa
xor
(bad)
dec
fcomp
scas
cli
mov
shl
repz
(bad)
clc
or
xchg
xchg
add
outs
mov
or
push
and
idiv
cwde
cmps
mov
or
adc
push
shr
dec
fwait
in
push
mov
xchg
retf
cmp
imul
ja
pop
into
mov
loop
cmp
lods
ins
push
aam
sti
leave
add
inc
popf
shl
sysenter
pop
xchg
jl
pop
cmp
retf
mov
mov
fisttp
jnp
mov
(bad)
pusha
rol
iret
cmps
or
inc
sub
fwait
cmp
fstp
jnp
dec
bnd
jbe
and
and
ins
mov
aad
ss
jp
in
(bad)
ja
xchg
ds
jmp
jg
lahf
(bad)
repnz
push
ror
movs
out
mov
adc
xchg
adc
outs
pop
cs
jmp
into
je
aad
(bad)
bnd
push
mov
cli
or
test
fldl2t
call
sub
or
pop
mov
xchg
dec
loop
rcl
xchg
pop
test
aad
push
stc
xchg
out
mov
mov
push
lock
shl
xchg
outs
jmp
cmc
popa
inc
cmp
pop
mov
aas
jp
jne
mov
xchg
push
xor
hlt
cmp
lods
pop
inc
cmp
cmp
dec
or
and
scas
sbb
xlat
mov
mov
test
pop
jae
rcl
jne
cmp
push
ret
cli
sahf
fnstcw
int3
jne
mov
lods
loope
push
inc
inc
xor
jle
xchg
jmp
and
cs
js
pop
inc
jle
push
inc
jg
xchg
sti
ja
js
aas
enter
jno
push
adc
adc
mov
mov
lahf
in
pop
xor
mov
ins
pop
cmp
mov
pop
and
cmps
ret
cmp
test
(bad)
jge
das
sbb
pop
adc
xchg
clc
or
fidiv
dec
cmc
test
mov
arpl
and
dec
call
dec
mov
arpl
sahf
xchg
mov
jno
(bad)
inc
dec
cmc
hlt
add
mov
test
(bad)
and
aas
repz
add
in
repnz
push
sbb
lds
ror
test
pop
jmp
shl
or
jmp
inc
mov
pop
repz
loopne
mov
mov
cdq
(bad)
sbb
daa
pop
fst
mov
mov
addr16
sub
cdq
repnz
add
jo
push
cmps
adc
cmp
in
mov
add
movs
(bad)
cmp
cli
out
cmp
pop
(bad)
movaps
aad
rol
jnp
sbb
adc
loopne
jne
push
(bad)
mov
add
movs
js
xchg
and
sbb
jecxz
pushf
push
or
cmp
lea
and
ins
fsubr
jae
push
inc
add
push
xor
mov
popf
mov
imul
(bad)
rcl
in
jmp
call
lods
inc
mov
push
or
sbb
rcr
cmp
movs
(bad)
out
xlat
xchg
(bad)
std
ret
int
jne
pop
icebp
xor
cmp
xchg
loopne
int3
mov
pop
xor
fldcw
dec
cmp
mov
sbb
movs
push
push
cmp
retf
mov
push
(bad)
jmp
(bad)
push
sbb
mov
cmp
repz
mov
adc
adc
push
pop
inc
fst
aad
mov
cli
(bad)
repz
lods
xchg
nop
outs
shr
xor
and
sub
sub
push
std
mov
jb
jo
pop
fcomp
and
sub
mov
daa
lahf
fdiv
fst
fisub
xchg
dec
and
test
inc
in
aam
shl
or
lock
pop
inc
out
retf
xchg
test
mov
xchg
push
movs
mov
stos
push
xor
xchg
out
xlat
je
cmp
mov
fs
lea
jbe
jae
fild
mov
xchg
lods
lds
std
pop
xchg
jbe
mov
pushf
push
movs
mov
popf
cwde
push
mov
inc
mov
inc
or
jno
loope
mov
cmp
lods
lds
ret
push
adc
dec
imul
ret
push
fld
push
movs
(bad)
repnz
sti
sub
repz
and
bound
or
cmp
and
xchg
hlt
je
fimul
mov
movs
cdq
pop
xchg
pop
cmp
add
inc
lds
mov
pop
popf
fcmovnbe
mov
sub
icebp
retf
jmp
jno
js
out
mov
xor
push
aam
push
lahf
ins
and
push
repz
mov
xchg
xchg
xchg
retf
add
pop
imul
test
mov
xlat
mov
pushf
lahf
mov
aam
movs
movs
mov
(bad)
xchg
or
pop
pop
jns
inc
imul
sub
add
sbb
cdq
dec
(bad)
imul
push
in
mov
movs
xchg
iret
push
fwait
and
ret
adc
nop
div
daa
dec
xor
test
mov
(bad)
sahf
sub
dec
into
adc
jle
mov
lds
aad
xor
fcomp
les
push
jbe
push
push
lea
push
sub
js
cmp
inc
cwde
call
adc
addr16
lahf
pop
or
popf
sar
cbw
fwait
popf
inc
inc
jg
ror
pop
loop
loop
inc
add
mov
mov
cmps
cmp
sbb
jns
push
jbe
dec
cmp
sub
jo
pop
push
vmwrite
mov
ficomp
popa
inc
pop
and
cmps
mov
jl
iret
(bad)
pop
push
fcom
adc
retf
scas
adc
mov
loop
add
in
aaa
dec
fbstp
push
cmps
mov
ret
push
aaa
inc
or
(bad)
repz
mov
sbb
call
or
cwde
fadd
ja
mov
bnd
fstp
adc
pop
je
xor
sbb
(bad)
std
adc
pop
inc
mov
xor
mov
add
inc
mov
mov
xor
and
mov
jecxz
hlt
adc
fdiv
aas
das
push
cmp
and
call
popf
lock
or
repnz
popa
sub
ins
ds
mov
clc
xchg
mov
mov
adc
cmc
daa
mov
dec
cmp
cwde
cmp
push
add
push
jle
jg
aam
arpl
cdq
add
dec
hlt
or
xor
call
inc
sbb
lods
test
adc
sub
sub
js
js
cmps
ret
sti
xchg
rcl
retf
arpl
int3
outs
pop
pmuludq
dec
sbb
std
pop
push
sub
push
jbe
call
push
arpl
(bad)
fimul
cli
int3
lods
clc
lods
ret
mov
repnz
aas
jmp
push
sti
dec
(bad)
jl
addr16
fldl2e
sub
test
rcl
bswap
fnstenv
sbb
xchg
(bad)
mov
aam
shl
stos
out
cli
xchg
std
cmps
and
test
cmp
jae
aam
push
cmps
sub
popf
mov
aaa
out
shr
outs
pop
sub
bound
xor
pop
xchg
jb
pop
inc
pop
les
mov
scas
fwait
pop
push
loopne
or
stc
sbb
mov
mov
dec
in
push
cmp
mov
ja
sbb
jns
retf
dec
mov
push
mov
and
xchg
imul
mul
and
inc
stos
neg
xchg
aam
cli
xor
imul
fwait
imul
xor
push
cli
dec
mov
and
and
cmc
dec
ror
rcl
adc
stos
jecxz
jno
rcr
jno
add
inc
int3
xchg
pop
mov
scas
push
push
xor
mov
aad
cld
sub
imul
sub
test
mov
pop
jae
rcr
pop
push
daa
sub
test
sub
in
jp
inc
leave
imul
cmp
lods
stos
sub
adc
jnp
cmp
push
ins
leave
jle
imul
pop
lea
mov
xor
jae
and
jne
pop
pushf
or
mov
push
adc
es
adc
adc
dec
adc
mov
in
retf
cld
lds
rol
aam
xor
mov
bound
sbb
fild
lea
popa
mov
lods
in
dec
adc
stc
fidiv
fistp
mov
iret
test
jmp
mov
sbb
sbb
aam
pop
cmps
pop
test
ret
inc
jge
data16
pop
retf
ja
add
mov
mov
rcl
push
adc
retf
mov
les
cmp
inc
aaa
inc
lods
push
int
sub
sub
pop
push
cmc
das
sar
pushw
xchg
loopne
push
mov
les
cmpxchg
dec
iret
out
and
xchg
icebp
aam
cwde
jae
cmp
or
pop
pop
or
mov
dec
mov
in
sub
icebp
mov
pushf
and
push
(bad)
sub
cs
push
jl
adc
and
adc
xchg
xchg
inc
jmp
enter
add
popa
dec
sub
mov
call
jl
mov
push
pop
mov
(bad)
dec
pop
adc
hlt
push
mov
pop
ret
sbb
jne
xchg
fst
inc
in
js
pusha
fucomi
sbb
mov
loope
jmp
test
sbb
inc
in
mov
ret
mov
mov
cli
add
push
ret
mov
push
push
leave
imul
cmc
bound
inc
cmps
dec
out
pushf
inc
std
sbb
xchg
fidivr
cmps
dec
out
popf
shr
lods
ret
sub
jmp
inc
imul
inc
push
rol
inc
(bad)
arpl
(bad)
mov
xor
cld
fstp
jecxz
out
push
push
inc
dec
dec
imul
xor
cmp
scas
loopne
(bad)
jmp
aad
mov
sbb
mov
cmp
ins
cmps
jge
push
arpl
sbb
lods
mov
mov
ret
icebp
retf
aaa
je
dec
pop
js
retf
mov
dec
fmul
push
clc
or
rcr
cmp
jle
pop
lock
xchg
ja
fistp
lock
jbe
push
xlat
cwde
out
daa
or
mov
inc
mov
pop
div
jbe
and
call
repnz
jge
cli
jns
add
push
dec
lods
add
in
loop
jb
out
xlat
mov
and
adc
repnz
or
test
jmp
inc
aam
aam
mov
sub
or
push
data16
mov
sub
js
test
sbb
daa
je
bound
int3
cmps
in
jle
and
pop
mov
retf
jno
mov
outs
dec
pop
jbe
pop
fild
cs
jno
xchg
pop
scas
mov
dec
outs
lds
jae
sub
and
pop
enter
outs
or
test
xchg
adc
or
jno
dec
pop
pushf
icebp
pushf
mulps
add
xchg
cmp
jg
mov
cmp
ror
js
jg
adc
jb
mov
lahf
(bad)
add
jmp
push
jecxz
std
jg
and
mov
sbb
std
push
dec
ja
aas
jecxz
sbb
sbb
dec
popa
xchg
(bad)
dec
(bad)
dec
jnp
xor
popa
lods
push
mov
jg
add
pop
xchg
or
out
sahf
repnz
inc
arpl
add
and
mov
mov
and
daa
lock
aas
rol
mov
add
and
dec
push
fwait
loopne
sbb
cmp
or
arpl
mov
(bad)
sbb
imul
ds
out
call
mov
mov
or
and
(bad)
mov
retf
sub
or
lods
push
popa
push
clc
push
idiv
les
iret
jmp
adc
xchg
aad
jae
sub
out
and
scas
loop
data16
add
and
mov
jl
add
cmp
or
and
call
fbld
adc
ret
pop
push
outs
mov
bound
ret
cmp
sbb
je
dec
pop
stos
call
or
adc
lods
sbb
out
sub
pop
push
(bad)
pop
fistp
xor
sub
mov
sbb
sbb
jbe
dec
pop
(bad)
and
xchg
dec
or
push
dec
dec
push
test
push
or
inc
test
push
imul
add
dec
sub
or
mov
in
mov
pop
jae
es
call
lods
(bad)
dec
(bad)
mov
add
(bad)
js
pop
xor
lahf
fisubr
mov
sti
nop
mov
loop
dec
inc
out
out
sbb
push
aaa
jne
(bad)
(bad)
or
neg
mov
test
imul
pushf
test
cmps
fprem
(bad)
pop
int3
mov
mov
in
(bad)
push
aam
adc
pop
lock
fistp
jo
dec
xor
dec
inc
mov
lods
loop
ret
mov
xlat
(bad)
rcl
push
outs
xchg
in
and
outs
cmc
(bad)
stc
sbb
sub
pop
in
xchg
aaa
mov
jae
cdq
sbb
pop
jno
rsqrtps
cmovg
lahf
and
mov
in
fmul
(bad)
xchg
not
mov
add
xor
lods
add
mov
mov
rcr
pop
and
cdq
pop
xor
fidivr
pop
jns
frstor
push
bound
fcom
sbb
ss
inc
aad
(bad)
push
mov
(bad)
cmc
inc
jp
mov
mov
mov
mov
add
imul
cmps
std
ret
mov
retf
loopne
je
adc
inc
sbb
mov
or
inc
jge
ss
jge
mov
bound
xchg
jecxz
mov
mov
pusha
push
stos
clc
fnsave
add
pop
gs
shr
mov
xor
add
in
jnp
push
ficom
in
pop
frstor
scas
xor
(bad)
hlt
lods
test
aad
mov
out
dec
xchg
mov
out
enter
cmp
sub
xor
pop
dec
xchg
add
add
mov
adc
stc
leave
or
pop
cwde
jo
and
xchg
and
adc
(bad)
mov
cmps
mov
mov
push
ret
pushf
fmul
jle
jg
xor
inc
in
shl
cmp
or
add
stc
adc
dec
push
cmp
out
fisttp
lea
and
sbb
xor
test
rcl
jmp
enter
adc
std
inc
jns
add
cmp
(bad)
fnstcw
dec
in
push
test
sahf
rcr
ins
mov
add
push
pop
add
dec
dec
fnstsw
cmps
shr
adc
inc
push
adc
loope
popf
pusha
ret
sub
cli
loope
loopne
mov
jmp
push
in
cmps
add
gs
add
mov
inc
mov
jnp
mov
jae
pop
test
xchg
jo
lock
or
rol
in
and
or
adc
sub
arpl
mov
sbb
sub
xor
shr
add
push
gs
pop
mov
call
and
adc
xor
cmc
outs
cwde
repz
movs
jmp
jg
mov
jb
jmp
xor
and
cmp
loopne
in
enter
inc
mov
xchg
sbb
jb
out
int
mov
shl
jae
mov
aas
sbb
dec
mov
aas
repz
jno
mov
in
adc
ror
sub
adc
std
cmps
cli
push
push
jp
shl
ficom
frstor
movs
retf
shl
sub
repnz
adc
or
fisttp
pop
push
inc
int
loop
lods
mov
(bad)
cmp
dec
das
push
fistp
pop
das
adc
or
add
mov
scas
popa
into
xchg
outs
add
repnz
xor
sub
and
mov
fstp
jg
jg
xchg
ret
clc
test
pop
outs
sahf
je
add
adc
call
fldcw
movs
xchg
cmp
(bad)
mov
pop
or
mov
mov
mov
cld
call
ret
aaa
stos
xchg
xchg
fcom
add
push
mov
pop
jp
jl
cwde
movs
(bad)
call
popa
xchg
addr16
rol
lods
sub
jns
xchg
pop
ja
push
and
cmp
mov
(bad)
xor
cmp
outs
dec
lods
test
ins
test
bswap
add
lahf
loope
jnp
inc
sub
xchg
mov
addr16
and
out
xor
daa
pop
das
dec
arpl
stos
jo
push
xchg
je
sub
mov
add
sti
pop
or
sar
icebp
add
push
sbb
mov
rcl
sti
jp
xor
rol
push
jnp
xor
ret
test
xchg
jp
dec
test
(bad)
mov
hlt
popf
mov
es
add
ins
nop
icebp
push
pop
or
cmps
sub
retf
clc
xchg
and
ret
leave
loop
(bad)
je
adc
push
lock
into
out
popa
jmp
add
or
mov
jp
push
fs
ss
outs
xchg
pop
and
or
cmps
bnd
mov
mov
mov
mov
pop
sbb
leave
mov
add
or
sub
call
xor
xchg
or
cli
lods
mov
mov
jmp
cmp
dec
xchg
or
lea
test
push
(bad)
icebp
mov
in
aas
push
pop
pop
imul
(bad)
adc
xchg
xlat
jg
mov
xchg
adc
lds
ds
scas
pop
xchg
or
inc
sbb
sub
gs
sub
xor
inc
(bad)
stc
fcom
nop
cmp
sbb
js
(bad)
jnp
mov
sbb
mov
lods
pop
cwde
jo
ins
test
js
sbb
ins
mov
xchg
jle
mov
sahf
jo
push
imul
mov
inc
cmp
mov
mov
xor
xchg
adc
adc
clc
cmp
into
shr
movs
aam
out
sub
cdq
popa
fadd
cs
fisub
(bad)
add
lahf
cmc
fdivr
mov
test
lds
fild
sbb
inc
inc
jg
mov
mov
retf
sub
mov
mov
push
push
or
push
std
ffreep
xlat
(bad)
jmp
stos
stos
inc
lds
cld
xchg
xchg
repnz
mov
pop
sbb
cmps
les
lea
sti
movups
sti
addr16
push
cmp
js
or
pop
jb
cwde
sub
add
fild
inc
inc
sub
cmp
push
sbb
jb
dec
movs
les
xchg
mov
repz
in
out
adc
lea
dec
fist
test
outs
and
out
xor
outs
inc
fwait
push
es
jge
mov
adc
mov
(bad)
adc
inc
cmp
call
dec
fwait
lods
ffreep
cdq
pop
dec
loope
mov
popa
jbe
arpl
pop
mov
stos
fisttp
push
adc
adc
sub
jns
cmps
test
mov
cmps
sbb
cs
xchg
push
xchg
dec
add
ficomp
mov
xor
sub
iret
mov
movs
int
hlt
psubb
sub
mov
xchg
xor
jge
scas
bound
shl
das
nop
xor
cdq
add
mov
imul
iret
adc
loopne
test
in
push
ret
sub
ds
pop
sahf
movs
sti
lds
mov
ficomp
or
add
lea
retf
push
jmp
cmp
stos
sti
jns
movs
mov
ret
(bad)
xor
(bad)
sahf
data16
aam
or
mov
xor
sbb
stos
push
add
shl
retf
inc
lahf
mov
mov
shl
inc
mov
in
jl
pop
cdq
sub
les
cdq
mov
(bad)
mov
sbb
inc
cmc
pop
cs
jecxz
movs
loop
or
jecxz
mov
and
jns
fdivr
ja
test
sbb
xchg
pop
mov
and
pusha
pushf
test
rcr
xchg
fisubr
loopne
mov
ins
jnp
aad
out
hlt
cmc
std
push
adc
xlat
inc
lock
mov
jg
call
mov
dec
adc
and
push
cmps
inc
push
js
repnz
jno
test
int
retf
xlat
jnp
sub
pop
mov
mov
jbe
es
pop
sti
pop
dec
pushf
leave
pop
dec
jmp
retf
fwait
and
rcl
out
and
mov
movs
aaa
(bad)
xchg
jl
mov
ret
pop
dec
dec
stos
mov
fs
mov
adc
xor
dec
cmps
cs
adc
sbb
pop
sbb
pop
retf
pop
bound
jecxz
inc
int3
call
mov
popf
movs
daa
movs
jno
mov
add
ins
(bad)
mov
sahf
adc
jle
xchg
inc
pop
int3
scas
int
fist
dec
push
fstp
repnz
pop
fild
mov
repz
ror
xchg
adc
pop
rol
mov
loop
inc
xor
mov
call
xchg
or
sub
and
push
push
aas
je
add
(bad)
sub
mov
rol
int
into
add
adc
push
sbb
sbb
ret
xor
inc
dec
push
in
inc
push
inc
sub
sub
mov
mov
sub
jbe
xchg
data16
pop
xchg
jmp
mov
test
and
mov
mov
pop
pop
arpl
and
stos
fsubr
lods
xor
jae
aad
cs
and
out
jb
addr16
outs
js
xchg
lods
stos
loopne
mov
add
push
mov
popa
jmp
std
mov
xchg
popa
cmp
inc
es
xor
std
pusha
adc
lahf
das
mov
dec
jae
adc
push
inc
(bad)
jo
loope
cmp
not
cmc
cmp
mov
cmps
stos
push
fdiv
test
xor
adc
jmp
and
movs
fcom
aas
jnp
test
xor
dec
clc
inc
shl
popf
cmp
mov
cmp
les
mov
xchg
push
sbb
xlat
pusha
add
aas
jmp
mov
add
sub
sti
mov
jns
call
or
push
ret
jne
mov
scas
test
repnz
fstp
cmc
or
pop
xchg
call
and
aam
out
outs
enter
leave
pushf
sbb
in
ins
inc
push
inc
(bad)
mov
mov
std
stos
call
popa
pop
dec
mov
stos
cdq
call
inc
jo
fs
retf
ret
cmp
mov
in
sbb
pop
cmp
sbb
cmp
adc
leave
sub
inc
lahf
out
(bad)
outs
mov
imul
mov
rcr
jb
cmp
adc
js
les
int3
add
pusha
add
push
rcl
xor
inc
inc
xor
sar
cli
ficomp
in
(bad)
adc
repnz
mov
inc
ret
cmp
push
imul
inc
pop
into
in
jne
out
mov
xlat
adc
push
pop
mov
pushf
enter
cmp
cdq
ins
jecxz
icebp
xchg
fwait
xchg
xor
lds
or
sbb
je
push
adc
or
stc
and
popa
pushf
push
push
cmps
das
or
aas
cmp
sti
sbb
pop
fstp
out
add
xchg
xchg
lahf
xchg
xchg
mov
test
inc
sub
into
test
dec
and
aad
and
xor
sub
movs
mov
adc
mov
popa
hlt
pop
ins
mov
pusha
inc
sub
push
sub
fisubr
sub
lods
into
mov
ret
pop
pop
std
jge
mov
stc
bound
int3
addr16
hlt
jns
xchg
push
xchg
hlt
mov
xor
leave
mov
mov
or
xchg
(bad)
cmp
pop
xchg
and
stos
mov
jno
push
jns
xchg
jbe
aaa
js
add
adc
xchg
and
dec
mov
mov
movs
mov
pop
xchg
sub
nop
push
stos
pop
and
gs
push
adc
or
dec
cmps
dec
pop
pop
inc
test
xchg
push
leavew
adc
mov
fld
addr16
idiv
jmp
rcl
dec
outs
lods
dec
mov
mov
xor
fnstcw
or
and
add
cmp
es
add
add
mov
imul
mov
mov
jge
movs
jmp
(bad)
aas
or
(bad)
pop
(bad)
jecxz
mov
mov
out
data16
mov
xchg
mov
popf
pusha
xchg
hlt
jge
or
je
add
call
push
ror
pop
pop
cmp
and
adc
xchg
cmp
push
lods
scas
pop
popf
adc
adc
(bad)
fsubr
dec
mov
lds
sub
leave
test
or
dec
out
cwde
mov
repnz
(bad)
or
(bad)
(bad)
scas
cmp
and
das
icebp
out
je
stc
iret
cmps
ins
ds
cmp
mov
push
mov
sub
retf
test
or
imul
mov
data16
cmp
adc
pop
push
fstp
inc
push
mov
movs
inc
je
sbb
inc
cmp
push
repz
xchg
daa
jmp
aaa
js
add
add
test
push
jle
and
adc
test
lea
out
test
lock
mov
mov
shl
nop
enter
or
lahf
push
retf
and
push
push
scas
ret
mov
pop
in
fs
enter
outs
add
push
push
dec
int3
(bad)
lods
or
xchg
mov
pushf
jnp
ret
add
xchg
lods
xchg
pop
(bad)
ja
shl
inc
jmp
into
push
lock
lods
aam
imul
push
or
test
test
loope
inc
hlt
ss
adc
ror
or
cmp
into
into
push
adc
dec
cwde
shl
mov
or
or
sbb
js
add
xor
lahf
cmp
test
jp
ins
or
and
inc
sub
and
adc
or
stos
jae
(bad)
mov
dec
cmp
dec
stc
ds
retf
xchg
clc
cmp
aam
mov
mov
push
inc
stc
inc
cli
jo
cmp
sub
fadd
test
or
push
loopne
dec
adc
fcmovnb
ret
out
inc
aam
mov
test
dec
ds
cmp
pop
sub
push
sbb
imul
sar
popa
cmc
mov
shr
rcl
out
jmp
cmp
xor
in
add
into
add
addr16
lock
or
out
pop
fisub
ret
ins
dec
cmp
cdq
add
cmp
jae
inc
add
add
shr
add
ret
mov
rcl
pusha
mov
push
stc
popf
add
cmp
add
add
inc
mov
mov
dec
imul
and
xchg
jp
dec
ds
sub
cmps
xchg
cmps
jl
ror
(bad)
aam
(bad)
das
jae
xchg
and
dec
xchg
and
repz
fild
mov
cwde
lock
or
scas
dec
inc
mov
sbb
mov
add
(bad)
mov
sub
pop
jle
inc
inc
fld
dec
inc
(bad)
ret
sbb
(bad)
pop
mov
mov
cli
xchg
push
mov
shl
and
in
shr
pusha
inc
aam
rcr
scas
adc
or
sbb
add
arpl
mov
arpl
inc
push
mov
loop
arpl
aas
adc
and
mov
les
lea
dec
mov
aad
add
inc
xchg
add
mov
mov
inc
push
adc
mov
and
push
call
xchg
fsub
rol
xchg
(bad)
and
cs
adc
push
mov
push
(bad)
mov
sahf
jmp
frstor
scas
loop
add
and
inc
and
mov
inc
(bad)
movs
sbb
adc
or
lea
mov
rcr
and
les
push
or
mov
cs
xor
ins
loop
xchg
sub
or
cmp
adc
adc
push
xor
inc
mov
and
cmp
xchg
adc
jne
sbb
fstp
jp
xchg
cmp
xchg
mov
pop
arpl
mov
sbb
loop
icebp
adc
int
jae
jo
pop
imul
mov
dec
and
inc
push
es
dec
jae
jnp
pop
imul
and
push
xchg
out
stos
in
lods
inc
adc
push
sbb
pop
push
ja
sti
add
add
adc
clc
xchg
add
lea
push
fsubp
jmp
(bad)
pop
pop
sbb
test
dec
dec
mov
cmps
adc
cmp
loope
out
int
test
pop
mov
xchg
sub
call
or
xchg
pop
leave
lods
xchg
rcr
mov
add
pop
in
aad
pusha
fmul
mov
push
cmps
mov
adc
addr16
pushfw
sub
dec
mov
inc
adc
imul
xchg
imul
pop
push
sbb
cmp
scas
mov
or
dec
mov
inc
aas
pop
adc
and
cwde
push
adc
popa
sub
jnp
out
sub
and
int
dec
mov
inc
mov
sub
dec
mov
inc
mov
xor
jo
mov
and
cdq
les
js
jle
lock
fscale
sahf
xchg
mov
faddp
sub
fst
mov
cmps
nop
scas
cmp
dec
inc
and
sti
inc
jecxz
idiv
mov
stos
push
(bad)
popf
inc
addr16
and
adc
jmp
fs
jmp
sub
or
je
(bad)
mov
lea
push
mov
test
cmp
retf
cmp
cwde
jge
xchg
xor
(bad)
push
call
cmp
movs
ret
repz
fcmovb
lea
jae
xchg
mov
fsubr
bound
and
mov
jns
inc
cmp
ror
jecxz
dec
and
out
xchg
add
enter
fldenv
push
ds
gs
cs
test
clc
jle
mov
dec
enter
and
movs
ret
scas
add
sahf
ds
imul
push
cmp
sbb
and
rcr
sbb
fst
inc
in
loop
loope
(bad)
sub
mov
mov
into
mov
(bad)
cmc
out
inc
push
or
mov
and
addr16
cmp
fisttp
leave
in
mov
stos
ins
and
popf
or
adc
jno
imul
in
outs
cmps
popf
push
xor
call
data16
sbb
jno
jmp
jno
out
addr16
cmp
adc
xchg
mov
fwait
(bad)
push
ror
mov
loopne
aas
bound
inc
popa
fadd
std
and
xor
cmp
cli
in
bound
int
adc
out
call
cmps
fiadd
loop
pop
jmp
js
jae
xchg
dec
xchg
inc
(bad)
pop
mov
test
mov
daa
lock
shr
faddp
dec
ins
mov
dec
fcom
adc
sub
sbb
dec
test
mov
lea
fs
sub
test
js
cs
sti
jmp
jmp
jmp
test
clc
lods
dec
inc
jl
xor
xchg
cmp
sub
or
mov
mov
pop
pop
ja
js
leave
stc
push
add
mov
dec
xchg
ja
add
and
int
mov
into
in
adc
and
fsub
cli
cmp
and
xor
adc
mov
iret
cmc
dec
jbe
in
inc
stos
sub
push
fstp
ja
fs
or
add
call
dec
or
data16
pop
dec
fild
inc
(bad)
xor
jge
jmp
adc
and
xchg
aaa
pop
mov
fldenv
int
mov
stos
cld
(bad)
push
int
jmp
clc
loop
inc
inc
lds
(bad)
mov
and
push
fcomi
lock
es
mov
adc
jle
pop
sub
shl
jne
dec
(bad)
push
inc
ja
test
shr
sbb
shl
rcl
or
sahf
getsec
and
pop
or
out
aad
pop
and
in
mov
ffree
pop
dec
ss
out
inc
cmp
in
cmp
bound
mov
stc
pop
fimul
add
push
add
outs
mov
xor
ret
sub
xchg
push
shl
arpl
dec
(bad)
adc
jbe
loope
daa
jg
imul
outs
dec
mov
out
push
xchg
test
inc
lds
jl
std
mov
fnstenv
adc
jae
mov
lods
adc
jmp
loope
dec
mov
in
cwde
push
loopne
loop
aam
ja
enter
inc
nop
rcl
mov
push
rcr
sub
jmp
or
xor
jo
jge
jo
ins
mov
lds
or
dec
adc
enter
addr16
add
adc
sbb
fs
lea
ja
outs
xchg
(bad)
adc
out
sbb
pop
cmp
jmp
sub
mov
and
jge
pop
adc
rcl
pop
in
and
push
jg
and
es
lock
cwde
pop
dec
in
sub
pushf
cdq
aam
xchg
or
inc
and
sahf
mov
repz
cli
sub
and
xor
xor
jno
jmp
cld
call
into
ins
xor
xlat
dec
enter
or
ror
cs
(bad)
int
out
add
cmp
(bad)
mov
(bad)
fsubrp
dec
jl
push
push
dec
sbb
pusha
bound
jns
fadd
dec
scas
xchg
retf
sbb
mov
inc
pop
mov
ds
xchg
aas
retf
pop
scas
icebp
cmp
in
retf
stc
(bad)
jl
push
mov
jmp
dec
and
jl
cmp
mov
jecxz
cmp
xchg
adc
(bad)
repz
out
pushf
pop
jl
das
jmp
pop
(bad)
xchg
xchg
add
into
pop
arpl
sbb
arpl
(bad)
jb
and
adc
sbb
inc
mov
push
jbe
sub
lds
and
std
and
scas
push
push
ret
outs
inc
in
push
jle
(bad)
cs
mov
js
dec
dec
test
push
adc
shl
xor
mov
cli
xchg
call
icebp
ds
pusha
jno
or
sub
sub
adc
dec
jp
add
in
test
cs
aad
sub
jle
mov
dec
nop
into
call
rcl
mov
cmp
xor
test
sub
loope
mov
lock
inc
pop
(bad)
outs
aas
pushf
gs
out
cmp
adc
lds
int
jge
clc
stos
(bad)
dec
ret
push
enter
and
pushf
xchg
xchg
ret
pop
sbb
jo
sbb
xor
sub
sbb
sub
pop
repnz
pop
(bad)
mov
inc
shr
sbb
pusha
fild
popf
mov
mov
(bad)
xchg
sub
mov
sbb
xchg
pusha
and
out
mov
das
iret
in
mov
push
sar
stc
stos
mov
sub
dec
cmp
jmp
mov
mov
pop
dec
(bad)
jl
pop
sub
mov
adc
in
inc
mov
adc
bound
xlat
jg
pop
xor
xor
int3
xor
mov
cs
jbe
(bad)
sub
push
mov
(bad)
mov
jp
ret
pop
rol
pop
push
dec
and
stc
inc
loopne
popa
jbe
or
add
pop
jp
outs
pop
inc
out
pop
in
xor
fwait
int
shl
push
hlt
xchg
jno
shl
aas
pop
or
jmp
addr16
in
mov
stc
movhlps
jmp
pop
sbb
sub
sub
cmp
jbe
jecxz
(bad)
in
imul
cmps
push
call
sbb
test
xchg
in
lods
or
jo
inc
sahf
or
(bad)
fstp
xchg
paddq
test
sbb
sti
sti
dec
add
inc
daa
pop
push
sbb
inc
xchg
or
fstp
pop
pop
idiv
enter
jle
mov
sahf
mov
push
icebp
ret
sbb
mov
(bad)
push
or
xchg
push
out
sub
ret
mov
test
push
jmp
cmp
cmps
add
mov
or
jae
mov
in
add
retf
idiv
out
(bad)
mov
repz
int3
or
lahf
nop
push
aam
popf
shr
adc
mov
scas
addr16
sti
pop
push
fisttp
ret
jge
push
out
mov
icebp
lea
and
pusha
xchg
push
aas
pushf
sub
int
cmp
mov
pop
clc
push
popa
movs
jo
pushf
mov
ja
sub
test
pushf
pop
dec
jge
add
add
ja
mov
out
js
sahf
ror
xchg
cmp
jmp
mov
mov
daa
das
mov
sub
mov
dec
imul
inc
fnstcw
pop
push
(bad)
loop
sub
add
out
sub
xchg
ss
data16
mov
(bad)
pop
and
mov
push
(bad)
jmp
inc
rcr
lea
out
jb
mov
cmps
adc
ins
mov
pushf
mov
dec
mov
sar
push
xchg
cmc
imul
fstp
xchg
in
or
es
repnz
repnz
xor
xor
or
jmp
fdiv
mov
sbb
adc
adc
and
retf
jb
mov
sbb
jmp
cld
xor
cmp
test
aas
or
xchg
sbb
xchg
cmp
xor
inc
dec
jecxz
mov
mov
fs
int3
(bad)
lods
aas
dec
ins
xchg
in
(bad)
sbb
popa
aaa
add
mov
or
xchg
int3
fnstenv
leave
dec
and
mov
jbe
(bad)
mov
jecxz
out
sub
pop
mov
dec
popf
fwait
das
push
cmps
xor
mov
jmp
in
movs
dec
pop
pop
adc
sti
mov
fidivr
jo
std
and
scas
jle
retf
adc
fdiv
hlt
xor
jg
dec
and
icebp
sub
(bad)
dec
add
push
or
pop
shr
sub
dec
sbb
ror
in
mov
push
dec
xor
dec
(bad)
stc
inc
pop
inc
pop
fst
pop
sar
push
jmp
lods
in
bound
cld
imul
mov
sbb
xor
sbb
and
lds
cmc
js
cmp
lods
jle
mov
test
addr16
dec
xchg
and
call
repnz
pushf
adc
pop
pop
inc
xchg
test
pop
xor
and
sbb
aad
icebp
xchg
setp
and
cdq
adc
jmp
leave
mov
jbe
dec
mov
push
push
lods
icebp
jb
sbb
je
test
add
arpl
dec
mov
idiv
or
mov
loopne
pushf
addr16
mov
jmp
in
sub
xchg
es
in
(bad)
lock
scas
add
aaa
fadd
xchg
daa
xor
xor
sbb
jecxz
mov
(bad)
and
xor
clc
or
dec
clc
int
inc
es
or
punpckhbw
sbb
mov
add
lock
mov
pusha
rcl
jp
pop
pop
dec
(bad)
hlt
sbb
cld
shr
push
sub
cmp
adc
out
in
dec
xor
dec
push
dec
pop
outs
mov
cmp
and
dec
aas
(bad)
cmp
cmp
mov
inc
or
pop
xor
sbb
in
repnz
mov
cmp
push
add
add
loope
xchg
fisub
sbb
push
loope
jne
cmp
lods
outs
adc
push
pushf
sbb
dec
sbb
mov
add
fisub
in
and
or
push
test
or
aaa
int
test
leave
jbe
es
adc
jmp
inc
imul
fild
cmps
not
mov
hlt
xchg
or
das
push
movs
enter
(bad)
add
jmp
sbb
mov
call
mov
retf
loope
stos
out
pop
addr16
es
mov
sub
mov
jp
in
cmps
sar
mov
test
dec
dec
sti
test
dec
jbe
repnz
lods
mov
cwde
fstp
nop
mov
out
aam
cmp
retf
(bad)
xlat
dec
sbb
cdq
test
fadd
lock
hlt
push
mov
loop
add
cmc
cmp
xchg
push
sub
ja
cli
popa
xor
movs
gs
outs
ret
xor
push
dec
test
leave
adc
jne
inc
ins
test
xchg
xor
sub
ret
mov
xor
dec
ds
call
pusha
je
retf
inc
call
mov
ret
dec
cmp
push
push
xchg
inc
pop
fidivr
mov
pop
in
fidivr
fld
ret
outs
mov
(bad)
dec
mov
fdivr
jg
cmp
adc
test
mov
mov
sub
test
mov
push
(bad)
and
movs
add
mov
xchg
inc
xor
aad
cmp
and
movs
(bad)
ins
aad
aaa
gs
mov
loope
xchg
jmp
lods
test
mov
ss
or
daa
sbb
jl
or
(bad)
stos
cmp
stos
sub
add
or
xlat
jmp
sahf
pop
and
mov
ins
bound
jbe
cmps
xchg
pop
pop
cld
loopne
arpl
mul
mov
aas
aam
arpl
push
rol
add
mov
lods
or
push
jo
dec
mov
fisubr
sub
xlat
inc
icebp
stos
inc
ds
into
jge
das
test
pop
addr16
push
xlat
and
arpl
into
ins
pop
ins
hlt
cwde
inc
mov
xlat
dec
xor
and
mov
ds
sub
xchg
push
adc
pop
adc
div
pushf
dec
pop
adc
(bad)
and
add
and
mov
pop
fiadd
and
adc
xchg
adc
dec
pop
addr16
push
pop
fimul
mov
or
stc
mov
xor
inc
mov
iret
dec
cld
aad
push
adc
mov
dec
out
sahf
clc
in
int3
inc
or
mov
test
cmps
xchg
in
pop
and
and
sti
sbb
mov
arpl
shl
cmps
dec
mov
std
adc
jmp
jmp
lds
add
pushf
inc
fdiv
cmp
pop
pusha
and
push
xchg
js
mov
cs
(bad)
loope
mov
mov
push
mov
imul
mov
add
dec
pop
test
push
push
inc
jo
cmp
bound
fdivr
pop
xchg
loope
mov
or
add
sub
mov
jmp
(bad)
movs
das
adc
mov
cmp
outs
pop
mov
cmps
jmpw
das
jp
inc
mov
movs
push
push
adc
push
jg
in
pop
cwde
jmp
(bad)
(bad)
hlt
jae
jae
fild
test
xchg
mov
mov
lods
lds
out
push
lods
lahf
sbb
jbe
leave
test
cli
int
cli
xchg
pop
call
xchg
cmp
pop
push
cmp
cmc
mov
add
pop
into
sbb
cmp
and
scas
sahf
dec
mov
scas
(bad)
or
jmp
and
xchg
pop
movs
add
lea
jae
cmp
mov
pavgw
add
jae
ss
or
ret
cmp
test
sbb
(bad)
daa
xchg
mov
add
call
sub
add
or
xor
sub
sub
xor
add
ret
into
xor
mov
movs
and
xchg
popa
and
dec
adc
sub
retf
pop
xchg
int3
pop
or
pop
not
repz
dec
dec
call
imul
rcr
xchg
push
or
xor
loopne
mov
cmp
jmp
adc
inc
mov
jg
adc
adc
dec
jae
hlt
pop
adc
in
cli
test
test
movs
mov
scas
dec
dec
and
in
push
inc
cmp
jecxz
dec
xchg
pop
or
or
jmp
pop
mov
mov
pop
retf
jmp
sub
out
mov
mov
sub
enter
and
movs
div
rcl
inc
or
mov
push
lds
out
inc
es
gs
add
ficomp
xchg
outs
cmps
out
rol
leave
sub
inc
push
pusha
lea
fadd
push
rcr
adc
cli
pusha
out
mov
imul
sbb
and
add
add
cld
cmp
jl
pop
add
xchg
clts
adc
lock
xlat
add
into
push
add
cmp
leave
test
ror
push
sti
xor
(bad)
popa
add
repz
addr16
aas
das
jno
mov
cmp
int
xor
shl
(bad)
mov
leave
ret
mov
(bad)
ss
xchg
xchg
xchg
fs
add
bound
dec
bound
sub
inc
mov
and
and
ins
bound
and
inc
movs
or
xchg
and
and
dec
xchg
pop
and
push
cmp
mov
(bad)
and
dec
and
mov
xor
dec
cmps
sbb
mov
hlt
inc
mov
cmp
or
xor
jno
xchg
xor
xor
pushf
adc
es
cmps
jmp
sbb
es
mov
mov
fcomp
xchg
pushf
les
stc
jl
add
mov
je
popf
test
nop
shr
je
push
dec
nop
push
mov
(bad)
push
adc
mov
(bad)
jmp
inc
nop
mov
xchg
cld
pop
hlt
test
jmp
dec
dec
mov
mov
cmp
push
ja
jg
dec
cmps
nop
imul
scas
mov
and
xchg
movs
and
jae
pop
adc
cmp
mov
xor
lods
push
(bad)
stc
and
in
adc
outs
fwait
gs
int3
ror
mov
rol
inc
sbb
or
jno
jae
adc
and
aad
jl
sbb
mov
imul
cmp
lods
out
(bad)
aad
shl
and
out
test
ret
xor
fs
mov
sub
rcl
push
sahf
xor
cmp
dec
pop
or
xor
jae
push
xlat
outs
add
cld
and
(bad)
enter
jne
je
mov
inc
mov
ins
xchg
and
sub
push
push
int3
sub
std
enter
pushf
pop
inc
fs
das
ins
aad
loop
lods
aad
cdq
pop
retf
and
adc
jnp
idiv
push
stc
test
xor
mov
sti
icebp
mov
fcomp
loopne
mov
(bad)
jl
loop
inc
pop
(bad)
rcl
fcomp
xor
popf
gs
test
lock
sbb
sub
inc
js
test
js
sbb
dec
sub
xchg
xlat
mov
ret
mov
cmps
push
fsubr
ja
dec
aad
jo
mov
xchg
fisub
sbb
mov
sbb
cwde
xor
int
std
call
mov
xor
aam
mov
repnz
push
add
mov
xor
shl
xchg
sub
leave
(bad)
pop
cdq
sbb
sti
in
xor
mov
(bad)
fidiv
mov
gs
es
(bad)
add
cwde
(bad)
ficom
pop
ret
cmp
add
add
(bad)
mov
pop
and
mov
jmp
dec
sbb
(bad)
jmp
mov
sub
mov
int
lds
aaa
push
inc
mov
and
sub
jmp
jecxz
xor
jmp
in
call
lahf
jnp
addr16
test
int3
in
jmp
mov
inc
push
jno
clc
repz
and
hlt
test
pop
mov
lock
(bad)
push
jmp
stos
out
shl
aas
(bad)
in
adc
xchg
jle
pop
sub
sti
xchg
ret
out
loopne
ins
out
out
inc
xchg
into
and
jnp
or
pop
in
or
enter
xchg
mov
aaa
cmps
lods
ror
dec
or
sbb
inc
rol
xchg
dec
push
loop
and
add
aad
xchg
rol
or
fs
arpl
mov
sub
ror
mov
adc
dec
xor
add
retf
sub
mov
xchg
stos
shr
aaa
inc
cld
sub
aaa
ja
adc
sub
sbb
inc
outs
cmp
sar
dec
cmc
xor
call
adc
cmp
push
jle
push
clc
dec
mov
and
in
and
test
pushf
jp
lock
imul
adc
pop
or
stos
add
dec
ret
xor
add
pop
scas
shr
add
enter
sub
push
punpcklwd
sub
retf
or
or
pop
mov
inc
std
repnz
or
sbb
pop
xchg
aas
test
aas
jns
and
xchg
fnsetpm(287
dec
jb
sbb
pop
sub
loop
icebp
daa
cmp
das
repz
adc
pop
add
(bad)
sbb
fadd
mov
push
(bad)
mov
imul
sub
push
loopne
mov
jmp
cmp
frstor
std
out
sub
cdq
mov
xchg
popa
ja
imul
aad
xchg
mov
mov
aaa
sbb
mov
inc
adc
jb
test
mov
push
ret
xor
pusha
out
(bad)
adc
mul
push
int3
jmp
out
cli
dec
xchg
test
dec
mov
retf
fcomi
fisub
ficomp
retf
inc
jb
xor
arpl
fcmovnb
nop
jno
data16
mov
xchg
fwait
and
add
cmp
ins
sub
cmp
and
iret
mov
jecxz
jle
outs
mov
inc
inc
cmp
cmc
nop
out
scas
mov
and
je
cmp
cmp
mov
mov
adc
idiv
int3
xor
and
loopne
lods
xchg
js
inc
js
sbb
and
retf
jecxz
not
js
xchg
mov
cmp
in
cmp
mov
mov
imul
test
inc
int
pop
add
fidiv
repz
lea
xchg
xor
call
sub
imul
test
sub
and
xchg
push
add
out
xor
mov
shr
mov
fs
scas
mov
push
int
fcom
mov
inc
jb
into
dec
sub
dec
daa
mov
int3
push
inc
mov
mov
inc
jne
leave
and
out
or
mov
sub
sbb
sti
sbb
jp
aad
sub
call
push
aad
and
jne
rcr
adc
test
leave
dec
js
jae
pop
pusha
push
int
xor
inc
in
cmp
mov
outs
xchg
cs
dec
xchg
dec
shufps
push
cli
ds
gs
mov
pushf
aad
das
cmps
ret
inc
and
std
arpl
xchg
jg
icebp
sti
jge
faddp
sub
adc
std
jp
test
inc
mov
and
ret
pop
mov
cmp
mov
or
lods
clc
fdivr
adc
sbb
mov
iret
fldcw
je
sbb
dec
repz
movs
pop
ret
and
daa
test
ja
sub
rcr
movs
jge
test
jmp
xchg
es
movs
(bad)
in
neg
jmp
add
retf
add
xchg
push
push
movs
loope
jp
mov
dec
rcl
dec
jnp
mov
pop
jb
in
mov
pop
imul
or
(bad)
shl
(bad)
inc
add
mov
in
pop
aaa
je
test
daa
cwde
xor
je
ins
inc
inc
frndint
and
mov
repz
int
mov
retf
ja
jne
jge
outs
mov
call
psadbw
icebp
mov
xor
sbb
hlt
lock
xchg
jb
cli
xchg
addr16
xchg
push
je
aad
scas
cmp
sti
xchg
ss
xor
dec
jle
xchg
outs
cli
dec
xor
sub
push
or
or
ret
push
mov
push
mov
and
popf
shl
push
mov
jbe
mul
xchg
xlat
pushf
scas
repnz
int
cmp
mov
sar
enter
(bad)
xchg
xor
repnz
pop
xor
pop
fnclex
in
pop
jmp
mov
xchg
mov
and
xchg
leave
push
mov
ja
repnz
std
in
and
loope
cmps
sub
jle
xchg
sub
adc
mov
jmp
dec
xchg
sar
es
jle
dec
dec
mov
or
sub
cdq
outs
enter
sub
cld
test
mul
inc
mov
daa
adc
rol
shl
add
inc
dec
int3
je
xchg
mov
pop
adc
stos
add
loopne
mov
xor
enter
xor
xor
imul
fmul
dec
xchg
popa
inc
daa
retf
movs
mov
cmp
mov
sar
sbb
push
jecxz
retf
mov
inc
mov
mov
imul
mov
push
dec
fnstenv
mov
aad
and
out
mov
fisubr
pop
sbb
jmp
lock
pop
(bad)
rcr
adc
cmps
add
imul
dec
ins
out
dec
jmp
adc
push
call
fstp
push
dec
int3
jle
call
inc
in
mov
pushf
mov
inc
les
scas
cmp
and
scas
sbb
ret
dec
retf
popa
ror
mov
push
fmul
push
fmul
sbb
popa
inc
aad
mov
mov
fs
dec
ret
out
enter
xchg
call
xchg
cdq
cmp
sar
push
in
out
adc
or
xchg
cdq
sbb
cs
mov
outs
inc
ret
adc
test
and
movs
nop
stos
add
xor
stos
lahf
retf
mov
mov
bound
arpl
mov
sub
add
(bad)
inc
mov
add
test
lahf
data16
sti
and
push
inc
dec
out
jle
or
popf
lahf
mov
into
adc
repnz
pop
aaa
shl
inc
cmp
cmc
mov
push
push
push
jp
adc
push
adc
cs
jo
sub
lea
lahf
aad
movs
mov
sub
cmps
fisubr
in
adc
inc
xchg
addr16
mov
(bad)
cli
neg
loope
cmps
lods
jo
mov
lods
ret
adc
xchg
cs
pushf
shr
test
xchg
push
bswap
mov
movs
lds
xchg
push
cmps
xchg
pop
sub
mov
idiv
lods
not
dec
inc
fdivr
sub
adc
icebp
pop
cmp
jbe
mov
into
push
repnz
mov
mov
lock
mul
push
cmp
sub
aas
sahf
dec
fimul
mov
fs
or
mov
xchg
jmp
stc
aad
jnp
pusha
jns
xchg
inc
(bad)
jns
data16
dec
imul
cld
sub
xchg
gs
popf
pop
fdiv
in
push
push
cmp
sub
or
or
jp
call
push
mov
push
pusha
sbb
mov
js
dec
jo
sbb
inc
cli
adc
and
pop
retf
pand
jmp
cmp
or
sahf
fstp
dec
popf
repz
mov
and
mov
rcr
add
add
cs
sti
clc
sub
push
and
(bad)
sub
scas
int
mov
pushf
fistp
pop
sbb
stos
icebp
xchg
adc
arpl
movs
cmp
test
shl
call
mov
jo
xchg
pop
in
pop
arpl
cs
pushf
cmp
jae
mov
or
fwait
call
cmp
sub
jae
mov
stos
cmps
xor
xor
lock
jno
fimul
and
shl
add
inc
and
stos
ins
dec
xor
stos
or
jp
into
aas
enter
scas
adc
xchg
dec
push
inc
cmp
test
mov
out
test
add
push
test
push
inc
pop
adc
lds
ret
push
mov
test
mov
test
or
jle
mov
ret
pop
or
sub
ins
jae
cli
(bad)
xchg
inc
ins
(bad)
inc
dec
in
scas
cmp
adc
sbb
enter
push
jle
jns
xor
sti
fidiv
retf
aam
or
fiadd
sbb
test
imul
push
fist
cmp
adc
push
cmp
sbb
test
pop
pop
icebp
lock
ror
xchg
std
lods
aaa
retf
and
mov
and
pop
sbb
mov
push
test
outs
add
fldcw
sub
push
ja
cmp
dec
dec
shr
lahf
out
xchg
cmps
add
add
inc
or
js
test
add
jb
lock
jae
push
ins
mov
xor
imul
arpl
xchg
mov
and
std
inc
or
daa
jl
push
in
adc
xchg
iret
aaa
sahf
nop
mov
cmp
imul
adc
adc
movs
xchg
pusha
repnz
outs
xchg
das
xchg
push
sub
rep
(bad)
mov
inc
xlat
stc
adc
mov
call
inc
fiadd
fild
or
jmp
push
(bad)
and
sar
in
add
dec
and
ret
xchg
xor
or
pop
jp
cmp
or
cmps
push
mov
and
jp
adc
cli
xchg
xchg
mov
das
jb
js
sub
add
inc
pop
test
pop
cld
lahf
leave
inc
xchg
push
je
pop
push
sub
mov
out
dec
movs
pop
xchg
add
movs
and
or
(bad)
rol
imul
repnz
and
test
in
scas
sahf
add
lock
loope
test
sub
call
inc
and
pop
shl
ja
fisttp
sub
iretw
sbb
lea
scas
js
xor
adc
call
jo
mov
mov
jb
jmp
and
lods
mov
xchg
xchg
loopne
and
mov
inc
repnz
and
or
(bad)
ja
std
jg
iret
push
mov
mov
fidivr
je
cmps
inc
lock
push
mov
lods
push
pop
hlt
out
adc
std
xor
popa
ud1
dec
sbb
or
outs
popa
adc
jmp
not
pop
(bad)
stos
loopne
pusha
mov
adc
(bad)
adc
scas
inc
or
nop
or
mov
fidivr
jmp
mov
add
in
stos
sbb
cs
mov
sqrtps
dec
mov
je
into
pop
jge
xchg
xor
mov
pop
inc
outs
scas
icebp
aam
mov
pop
inc
and
push
mov
aad
cs
push
out
sbb
jmp
cdq
fimul
mov
jle
stos
xchg
sub
(bad)
std
hlt
adc
add
mov
loop
shl
inc
js
(bad)
int
dec
lock
dec
xchg
dec
pop
and
dec
inc
sbb
ficom
cmps
push
cli
add
popa
cli
pop
(bad)
mov
imul
jge
iret
icebp
call
repnz
nop
ror
mov
loopne
push
loop
jp
ret
out
popa
pusha
or
dec
enter
mov
mov
aad
sbb
sub
sar
(bad)
retf
jnp
popa
xor
clc
inc
xchg
loop
in
or
fidivr
or
pop
fldcw
das
or
sbb
xor
cs
pop
daa
xor
or
inc
pop
mov
ja
dec
(bad)
(bad)
hlt
jnp
int
or
mov
add
lods
sbb
mov
push
retf
cs
rep
aad
cli
push
lahf
pop
outs
into
rcl
pop
adc
(bad)
push
mov
jecxz
fisttp
sbb
sbb
scas
or
dec
out
xchg
loopne
aas
shr
mov
scas
lods
cmp
add
jno
push
inc
xor
mov
loopne
or
dec
adc
sub
push
add
cdq
xchg
jmp
mov
out
out
jmp
adc
mov
mov
ss
pop
push
sbb
cmp
mov
jns
shl
nop
mov
mov
cld
mov
jo
test
lods
xchg
jbe
pop
xchg
int
fild
in
cmp
gs
cwde
sub
xchg
push
cwde
push
mov
imul
or
je
xchg
sbb
ret
inc
cmps
pop
fs
pop
xor
adc
loopne
cmp
addr16
jbe
pop
pop
in
enter
dec
cmp
shl
inc
add
mov
ja
pop
push
xlat
test
or
in
inc
lock
add
push
push
or
ds
mov
repz
hlt
push
nop
mov
mov
mov
into
hlt
sahf
adc
ins
and
jp
jo
mov
retf
cmp
mov
stos
push
add
jmp
add
(bad)
or
pop
push
adc
push
fimul
inc
lods
test
or
jp
or
sub
adc
aas
sub
push
aaa
mov
hlt
pop
sbb
fld
test
mov
daa
add
fild
xchg
(bad)
inc
pop
mov
inc
movs
std
in
pushf
ss
(bad)
int
mov
outs
sar
or
cs
push
dec
jmp
test
shl
into
mov
repnz
imul
shr
inc
iret
dec
sub
mov
mov
sub
cmp
dec
adc
and
and
cmp
xchg
jecxz
push
inc
mov
jbe
xor
jl
aaa
mov
nop
int
or
test
(bad)
leave
xchg
fcmovne
xchg
fisub
mov
dec
mov
je
or
loop
add
and
jmp
ins
inc
sbb
xor
mov
cmp
cmp
data16
add
mov
mov
aaa
test
adc
dec
push
xchg
mov
mov
mov
retf
addr16
sub
fld
pop
add
bound
movs
ss
mov
pop
bnd
icebp
scas
cwde
das
sub
les
in
or
mov
add
fwait
leave
rcr
popa
popf
mov
test
stos
and
aaa
cs
int3
bound
mov
jbe
xchg
(bad)
cmp
adc
jb
stos
loop
retf
add
fwait
xor
mov
add
cmp
adc
not
stos
mov
call
pop
lods
pop
test
mov
and
adc
pop
jle
sub
fadd
cmp
fimul
je
js
or
push
idiv
pop
add
fisttp
ja
and
lahf
cmp
aas
cmc
out
inc
scas
std
adc
or
cmp
dec
dec
fsubrp
cmp
jmp
inc
and
mov
fist
mov
jnp
lahf
div
inc
fist
xor
je
push
fsubr
stc
rep
mov
in
(bad)
xchg
mov
dec
popf
cmps
sbb
mov
cmp
cmp
xchg
aad
inc
ss
stc
(bad)
fs
mov
hlt
outs
out
lods
mov
push
mov
dec
cld
scas
mov
mov
popa
sti
add
push
fs
sbb
jg
jecxz
xchg
psrad
dec
add
sub
lods
cmp
in
retf
hlt
inc
adc
retf
repnz
sub
clc
mov
bound
mov
sti
adc
aad
mov
gs
inc
dec
mov
test
cmc
lahf
cmp
aad
div
stos
mov
ret
fsub
sar
popa
not
mov
sahf
mov
cli
add
mov
in
repnz
cmp
mov
call
repz
xor
mov
sub
outs
aas
sbb
xor
push
mov
sbb
and
outs
loopne
jbe
(bad)
cmp
test
ins
add
dec
cld
lock
(bad)
(bad)
push
pop
xor
push
jl
cmp
push
test
fs
ss
iret
cmp
imul
sub
add
inc
scas
pop
push
je
cwde
cmp
mov
mov
mov
dec
ret
mov
hlt
mov
mov
pop
rcr
popa
test
sbb
push
cmp
mov
or
popa
add
aaa
movs
ficom
popa
leave
push
mov
dec
dec
arpl
out
aaa
test
into
ins
and
movs
shr
int3
jecxz
jmp
dec
stos
shl
add
retf
cwde
scas
or
push
push
and
loopne
inc
add
add
pop
add
push
add
add
enter
xchg
adc
or
rol
jecxz
sub
sub
or
sub
push
push
inc
push
pop
push
pop
outs
imul
mov
xor
(bad)
mov
mov
pop
xor
push
xor
mov
imul
cdq
inc
sbb
add
add
hlt
add
mov
jp
call
stc
lods
push
scas
jne
loop
push
cdq
xchg
jge
ja
in
ja
cmp
sbb
dec
xor
daa
adc
fdivrp
idiv
push
adc
and
add
push
or
add
mov
bound
sub
sub
stos
popf
xchg
stos
fadd
pushf
dec
inc
pop
ja
xor
adc
xor
fimul
rcr
and
addr16
pop
(bad)
dec
fcmove
push
test
arpl
dec
dec
out
or
sar
sbb
popa
push
mov
adc
sub
cwde
enter
ret
and
rcl
rol
daa
inc
dec
dec
jge
xor
int3
gs
nop
and
pusha
inc
arpl
and
adc
add
ins
adc
inc
cmp
mov
dec
ret
jbe
sbb
addr16
dec
aad
inc
mov
pushf
clc
inc
dec
inc
rcl
lods
test
mov
loopne
mov
stos
dec
aad
mov
or
mov
lds
pop
retf
mov
push
bnd
arpl
jo
sub
pop
aam
sub
ret
xchg
mov
les
mov
outs
les
jmp
cdq
sbb
sub
pop
pop
test
sub
leave
ror
dec
jecxz
inc
jecxz
loopne
cmp
add
mov
cld
or
and
push
cli
dec
mov
and
enter
mov
out
mov
pusha
data16
inc
movs
sbb
rcl
dec
push
xor
xor
mov
pushf
push
loopne
std
add
adc
sbb
es
enter
leave
cmp
mov
pop
mov
mov
fadd
jge
add
xor
mov
xchg
add
xor
xchg
adc
test
(bad)
int
and
sub
mov
xchg
mov
push
sub
lods
xchg
adc
stos
fcomp
and
mov
ds
lods
js
fsubr
and
or
lds
pop
or
mov
sbb
aad
add
inc
js
push
push
jmp
aam
mov
mov
test
sub
jge
mov
xchg
sub
mov
loope
pop
mov
bound
jle
dec
cmp
xchg
add
mov
dec
into
add
mov
jns
mov
(bad)
jo
pop
hlt
push
data16
adc
add
cmp
lock
arpl
out
shl
sbb
loope
and
movs
jno
out
inc
repnz
xchg
pop
addr16
repnz
dec
stos
add
jns
adc
or
and
mov
ffreep
vmovhlps
bound
cmp
dec
xchg
add
lea
ret
sbb
sub
rol
sar
fidivr
inc
in
or
es
in
mov
mov
jp
pop
xchg
jg
add
add
mov
je
dec
pop
xchg
adc
mov
or
cmp
cmp
bound
push
inc
xchg
push
push
outs
shl
sub
mov
mov
cmp
mov
out
sbb
mov
jmp
or
mov
sub
mov
pop
cmp
xchg
add
ret
adc
les
push
ins
pop
xchg
inc
push
mov
inc
or
xor
sub
pop
sbb
add
add
inc
or
mov
xor
ret
mov
mov
bound
imul
loope
nop
aad
pop
leave
int3
stos
fist
inc
aas
or
int3
in
add
js
popa
cmps
clc
fisttp
mov
xchg
cmp
lds
adc
and
(bad)
aaa
retf
std
adc
lock
pop
mov
test
lock
test
mov
in
pop
mov
xchg
pop
or
rol
imul
xor
cld
cmps
cmp
jp
mov
or
in
pop
pop
pop
xchg
mov
(bad)
adc
cmps
dec
push
jnp
dec
out
cmc
xlat
int
in
sub
icebp
sbb
push
stos
rcl
mov
adc
(bad)
mov
cmps
in
inc
mov
fimul
movs
ror
mov
fs
in
fs
jl
mov
loope
pop
mov
push
sub
cmc
aad
jmp
add
outs
mov
aad
xor
push
out
call
call
das
outs
mov
mov
ins
hlt
xor
mov
jecxz
loopne
ja
repz
cmp
jp
outs
in
push
jl
jno
jns
(bad)
icebp
pavgw
test
push
xchg
mov
push
jecxz
jno
stos
rol
sub
lds
mov
push
mov
(bad)
jecxz
and
pop
push
in
rcr
add
es
adc
and
test
ficom
fld
fnstenv
sbb
jle
adc
push
fidivr
in
stos
in
add
call
test
ror
dec
jns
fisttp
int
inc
bound
loopne
inc
mov
mov
lods
sbb
and
repz
cld
sti
addr16
dec
repz
fwait
push
fistp
(bad)
push
pop
pop
cmp
push
adc
int3
adc
jecxz
outs
adc
outs
dec
(bad)
xchg
sbb
push
cwde
xchg
push
test
mov
sbb
sub
sub
cmc
cld
pop
mov
add
(bad)
je
pusha
jbe
icebp
jecxz
fwait
mov
jnp
cld
call
ret
fadd
sub
test
xchg
mov
(bad)
clc
jnp
fstp
xchg
mov
xchg
mov
pop
pop
test
and
xchg
inc
or
add
push
xchg
push
or
icebp
mov
mov
bound
add
movs
icebp
(bad)
cli
dec
inc
es
or
ret
adc
repnz
mov
cmp
xchg
add
je
add
mov
les
add
pop
push
inc
jb
sub
push
dec
and
fcomp
xchg
inc
add
cmps
mov
add
dec
mov
lods
push
or
or
stos
hlt
test
cmp
or
pop
(bad)
js
test
sar
push
xor
jb
out
ret
cwde
enter
inc
xchg
or
or
add
test
pop
pop
fucomi
adc
es
xor
popa
mov
mov
push
adc
imul
in
(bad)
push
shl
movnti
add
sub
xor
jg
sbb
(bad)
and
sub
or
leave
xchg
pop
mov
push
aad
clc
loope
mov
out
dec
mov
aad
inc
sar
fistp
add
adc
gs
dec
adc
and
stos
adc
cwde
xchg
and
retf
es
frstor
push
fidivr
sti
xor
in
pushf
inc
scas
out
push
and
ret
or
into
sbb
shl
repnz
iret
cli
cmc
and
mov
cmp
ficom
loope
int3
jle
dec
push
shl
or
jbe
or
es
lods
cld
loopne
jle
fist
push
sub
popa
add
sub
inc
jl
cdq
shl
lea
mov
xlat
icebp
pop
std
xchg
jmp
jo
je
retf
movs
stos
shl
jns
push
push
cs
enter
xor
scas
inc
xlat
ja
pop
ss
fs
xor
cdq
fs
push
or
sahf
jecxz
aam
mov
test
dec
inc
rol
mov
cld
enter
rol
jo
sub
dec
iret
imul
jnp
xor
pop
pop
adc
pop
out
sub
arpl
pop
mov
aas
sub
jns
jp
mov
cmps
mov
pop
clc
mov
push
(bad)
int3
in
stos
dec
leave
sub
sub
fs
cdq
neg
outs
jae
cmc
add
test
inc
cmps
clc
jmp
sub
repnz
(bad)
jle
lods
lods
test
push
leave
aam
retf
cdq
xchg
jb
rol
inc
fwait
and
adc
leave
dec
sbb
push
movs
icebp
sbb
mov
adc
push
shl
scas
mov
cmp
sahf
outs
int3
mul
dec
pop
cld
retf
xor
enter
and
pusha
xor
sub
jle
dec
popf
loope
rcl
push
jne
xchg
or
loope
add
xor
popa
pop
lods
pop
or
sbb
movs
outs
jmp
mov
jg
and
sbb
push
pop
retf
rcl
push
pop
retf
sbb
xchg
mov
pushf
mov
add
dec
out
outs
sbb
mov
adc
imul
xlat
xor
cdq
gs
dec
cmps
movs
jbe
fnstenv
or
pop
dec
fldcw
pop
inc
int3
rcr
ja
cdq
push
mov
sub
cmp
test
inc
and
xor
mov
push
pop
in
xchg
int3
lods
dec
adc
sbb
xor
mov
rcr
pop
mov
sbb
out
lea
rcr
pop
push
pusha
jp
push
sbb
je
sub
mov
aas
dec
xchg
(bad)
daa
div
mov
repz
in
dec
push
or
add
jp
inc
imul
sub
cmp
pop
rol
repz
shl
nop
out
or
jl
jecxz
stos
test
cwde
pop
adc
inc
jp
mov
imul
cli
dec
add
jmp
call
dec
pop
xchg
push
daa
loop
iret
lds
dec
sub
fsub
mov
bound
test
cmps
pop
mov
test
jnp
pop
xchg
pop
mov
inc
call
pop
je
mov
mov
dec
adc
imul
loop
test
scas
fsubr
push
enter
sbb
inc
icebp
arpl
pop
push
leave
xchg
lea
push
sbb
ffreep
cmps
dec
xchg
ror
(bad)
ins
repz
cmps
push
mov
push
test
mov
test
mov
xchg
jg
and
mov
js
stc
and
jmp
(bad)
push
ret
push
into
retf
pop
mov
loope
addr16
mov
iret
arpl
stos
das
mov
mov
retf
test
xor
loopne
sub
sbb
and
pop
les
pop
push
test
add
sub
aas
into
data16
cmp
adc
enter
ins
ins
loopne
push
arpl
xor
into
mov
cld
pop
xchg
addr16
inc
mov
cmc
and
inc
repz
cmps
and
fadd
retf
leave
(bad)
mov
cmp
adc
push
(bad)
push
xor
push
cmp
mov
inc
loopne
lock
pop
cmp
stos
out
les
cmp
stos
mov
iret
pop
leave
jnp
jmp
cmp
and
nop
aas
mov
sub
ja
xchg
rcl
call
loopne
xchg
fild
int3
cld
push
sbb
(bad)
cmp
push
in
in
mov
ins
ret
jecxz
pop
repnz
out
pusha
cmp
mov
nop
dec
xor
daa
les
xor
jg
icebp
xchg
ret
mov
xchg
sbb
xor
mov
inc
arpl
cmp
push
cmps
jecxz
or
xchg
leave
jns
mov
push
pop
in
xchg
or
(bad)
test
push
mov
fmul
repnz
dec
jno
xchg
push
lahf
or
lahf
retf
xchg
mov
adc
adc
jmp
push
mov
ins
xchg
sub
stos
pushf
xor
shl
push
test
dec
and
aad
cmp
movs
dec
fstp
loopne
push
ins
xor
mov
or
out
js
and
jp
xor
rcr
dec
out
cmc
dec
movs
cmps
mov
imul
adc
inc
pop
mov
jge
mov
sahf
pop
add
loop
pop
pusha
mov
dec
dec
mov
in
add
neg
popa
js
test
mov
pop
pop
mov
xchg
push
cmp
outs
aam
lahf
inc
xchg
pop
xchg
pop
outs
push
je
xor
mov
sahf
imul
xor
adc
inc
sub
jl
jp
dec
pop
call
fild
sbb
fxch
adc
inc
cli
push
enter
mov
mov
ficom
push
push
inc
push
xchg
push
cmp
dec
ficom
jp
fwait
rep
outs
and
push
push
arpl
popf
nop
aas
push
nop
or
push
stc
mov
sbb
cmp
popa
aam
test
xchg
mov
mov
imul
jmp
push
call
fs
xchg
sub
add
rol
dec
nop
stos
sbb
jecxz
push
aaa
sub
pop
ret
mov
xacquire
ss
push
mov
xlat
inc
mov
call
push
jge
jnp
test
mov
mov
lahf
popf
(bad)
push
jge
mov
aam
xor
outs
pop
dec
mov
mov
movs
(bad)
call
push
sbb
ret
sbb
repnz
adc
outs
and
sbb
jo
mov
push
cmp
xchg
arpl
pop
aaa
inc
mov
in
movlps
(bad)
xchg
nop
add
pop
sub
(bad)
call
nop
dec
dec
or
mov
add
push
ins
or
cmps
sub
add
jmp
add
push
popf
adc
cmp
jmp
or
movs
xchg
aam
enter
add
add
or
cmp
rep
add
popf
lods
aad
inc
es
sbb
add
cmp
mov
inc
sahf
mov
sbb
mov
ss
sub
ins
pop
fld
mov
popa
mov
sbb
push
jo
dec
inc
add
add
jnp
loope
or
mov
ret
sbb
or
add
nop
(bad)
xchg
cmps
sar
iret
aas
cmp
loopne
mov
fld
dec
add
and
dec
mov
shl
test
idiv
jb
lahf
mov
lock
shr
hlt
cs
test
mov
push
or
push
sub
and
out
push
pop
test
mov
cmp
sti
jle
(bad)
aas
dec
and
movs
popf
mov
aad
(bad)
or
push
into
(bad)
ss
jmp
mov
in
scas
fild
mov
xchg
lods
out
mov
ss
or
in
cmp
mov
(bad)
pop
cmp
cmps
sub
xor
inc
cmps
mov
cmps
mov
xor
cli
add
push
stos
mov
mov
or
adc
sti
retf
jg
jnp
and
sub
in
xor
repnz
clc
cmp
xchg
inc
cmp
mov
dec
cmc
sub
shr
int
adc
inc
sbb
jmp
mov
ret
stos
lahf
out
fdivr
lods
jmp
ret
nop
cmp
lds
ins
lahf
shl
out
mov
jg
in
pop
stc
mov
add
mov
push
lods
fmulp
jecxz
sbb
in
jge
(bad)
int
ret
or
mov
inc
cmp
(bad)
mov
pop
je
dec
out
mov
int
pop
aas
xchg
cmp
push
mov
xchg
cli
lea
aad
outs
push
scas
pop
fwait
movs
xchg
int
out
push
nop
mov
inc
fstp
and
scas
jnp
fs
iret
shl
outs
xchg
cmp
pop
mov
ins
pop
out
jg
cmp
xchg
call
jg
icebp
xchg
enter
iret
pop
and
aaa
stos
shl
sub
test
jne
in
jno
xor
mov
stc
adc
ficomp
daa
dec
xchg
sahf
inc
push
and
mov
add
movs
jno
cli
movs
ss
stc
ror
aam
imul
imul
fisttp
xchg
sahf
arpl
out
jecxz
pop
push
je
mov
fs
cmp
scas
fld
mov
mov
scas
push
mov
add
in
call
das
cmp
pop
pop
out
sub
loop
push
mov
cdq
ss
fst
pop
aaa
cmp
repz
add
aaa
and
cmps
pop
jmp
pop
fldenv
cmp
adc
mov
inc
cld
dec
dec
data16
and
mov
pusha
adc
push
pop
ds
sbb
icebp
call
retf
sbb
fadd
xchg
outs
loop
xor
mov
sahf
pop
push
into
jno
je
in
dec
mov
pop
jbe
fmul
fwait
sar
mov
mov
fcomi
cmps
jne
aaa
das
jae
je
sbb
cmp
pushf
les
mov
enter
int
jecxz
fs
hlt
das
jg
mov
push
jbe
jmp
mov
or
mov
or
leave
aad
fidivr
(bad)
dec
(bad)
aas
cmps
and
iret
xchg
jnp
jl
ins
mov
inc
xor
loop
leave
push
stc
dec
stc
xor
loope
inc
jne
mov
fdivr
fld
sar
pop
int
or
jno
jb
std
sub
movs
pop
push
inc
(bad)
ins
into
jne
mov
dec
in
push
mov
mov
(bad)
lods
call
fild
push
mov
loope
pop
rcl
mov
movs
dec
test
sbb
std
fldcw
mov
out
or
inc
pop
cmps
jae
jmp
mov
mov
dec
and
call
(bad)
jae
xchg
xlat
push
xchg
leave
addr16
cmp
dec
mov
mov
push
pop
(bad)
test
mov
ror
hlt
les
addr16
inc
adc
in
add
push
retf
mov
push
inc
lahf
mov
fstp
or
jl
sar
mov
push
inc
jbe
test
in
push
daa
xor
jbe
sbb
mov
fs
les
mov
adc
out
out
ret
push
adc
mov
stos
push
rcl
add
(bad)
jns
gs
pop
clc
cld
adc
rcr
xor
(bad)
(bad)
push
hlt
pop
aad
mov
fs
cmp
rol
xchg
inc
fdiv
and
cmps
mov
aam
ror
dec
popf
por
lds
jmp
mov
lea
add
cmp
in
stos
and
cmp
mov
arpl
mov
sar
add
sbb
fld
out
in
jae
out
scas
mov
icebp
jnp
sbb
sub
fwait
sbb
imul
xlat
mov
jae
outs
pop
dec
push
rol
sub
dec
call
or
in
mov
mov
jecxz
arpl
or
neg
nop
mov
les
cmc
(bad)
stos
sub
mov
loope
loop
pop
aad
nop
int3
jbe
ficom
push
dec
push
pop
cli
pop
push
push
popf
idiv
je
cmp
inc
imul
(bad)
pop
mov
loopne
loop
jbe
leave
xor
adc
call
std
imul
push
repnz
mov
out
sti
jmp
sahf
popf
imul
lds
cmp
cmp
lods
xchg
icebp
rcr
stc
mov
stos
les
movs
sub
sub
push
ror
pcmpgtb
or
(bad)
aas
lds
push
add
inc
dec
inc
jmp
pop
hlt
(bad)
retf
jl
adc
push
(bad)
xor
int
jl
push
pop
imul
push
push
shl
sub
cmp
retf
dec
fmul
lods
cmp
dec
or
lods
clc
lods
xchg
xchg
sbb
or
popf
repnz
je
cmp
jp
in
rcr
bound
fistp
loop
push
aam
cli
sahf
in
fisubr
outs
cmp
mov
sbb
mov
pop
dec
sub
pop
mul
cwde
lock
and
jne
mov
and
enter
xor
cmp
add
stos
(bad)
jmp
mov
push
push
mov
repz
pop
mov
clc
adc
adc
je
xchg
dec
push
cmp
enter
and
outs
lods
mov
add
std
mov
pop
daa
in
jg
int3
ins
(bad)
pop
cmc
call
jno
fcomp
mov
adc
pop
imul
xchg
adc
stos
xor
cmp
ins
mov
adc
call
fldcw
or
fsubr
pop
fstp
pop
je
dec
push
out
mov
sub
dec
dec
loopne
xor
push
ds
inc
pop
pop
mov
add
push
les
inc
or
push
jae
sub
xlat
xchg
(bad)
addr16
xchg
mov
mov
movs
jne
ret
pushf
mov
outs
pop
pop
fs
hlt
mov
out
adc
jl
ret
dec
xor
aas
popf
mov
sub
ffreep
(bad)
xor
mov
(bad)
mov
in
sbb
les
sbb
lods
pusha
adc
xchg
fisubr
dec
mov
pop
pop
mov
and
imul
int
shl
dec
or
and
cld
mov
adc
and
and
jg
push
fwait
push
cmp
sub
test
(bad)
pushf
mov
xor
cli
dec
dec
(bad)
in
stos
ret
sub
jne
cmps
and
push
imul
xlat
loop
xchg
sub
xlat
push
and
sbb
mov
movs
sub
sbb
pop
or
lods
xor
add
or
cmp
and
jp
adc
and
jne
xchg
int
shl
dec
jmp
ret
sbb
sub
cmc
adc
xchg
icebp
(bad)
sbb
mov
ja
xchg
xchg
sub
ins
scas
mov
add
ins
sbb
stos
add
add
or
(bad)
push
inc
test
fcmovnbe
pop
popf
sub
pop
push
jp
and
jbe
add
xchg
add
(bad)
test
sub
movs
lods
aam
scas
ret
pop
cs
add
adc
add
outs
call
fdiv
js
cdq
retf
xchg
push
loopne
sub
lock
xchg
in
dec
int
xchg
pop
jmp
add
xor
and
inc
and
mov
pop
sbb
int
push
cmp
sub
adc
mov
cdq
out
or
call
mov
stos
movs
fdiv
retf
es
popa
mov
push
loopne
and
nop
push
sbb
in
loope
cmps
pop
imul
mov
mov
xor
push
arpl
fdiv
pop
in
aad
dec
sbb
jo
mov
mov
sbb
pop
jne
sub
les
cmp
stos
outs
lods
call
mov
retf
ds
mov
mov
xchg
pop
popf
push
adc
movs
jp
sbb
div
xchg
pop
adc
pusha
ss
and
jbe
adc
nop
adc
mov
leave
dec
out
and
mov
mov
pop
cmp
(bad)
mov
outs
mov
mov
mov
push
and
bound
cmps
cmp
rcl
mov
mov
mov
and
jp
cmp
jge
sbb
lahf
movs
popf
mov
les
ins
arpl
cmp
call
ror
cmc
xchg
xchg
lock
and
inc
push
xlat
retf
lock
adc
mov
fsubp
ds
cmp
inc
movs
(bad)
push
xor
test
dec
and
mov
pop
xchg
sub
lods
mov
lds
inc
jmp
out
and
xchg
fiadd
xchg
retf
jp
cld
xor
(bad)
mov
clc
jecxz
xchg
xchg
jle
mov
les
test
jp
ds
inc
push
mov
push
cmp
pusha
push
push
xchg
and
ins
ret
inc
scas
jo
ins
aam
jge
je
dec
fst
popf
sbb
xchg
or
push
je
movs
or
dec
mov
xchg
(bad)
sahf
xchg
push
gs
dec
add
add
sbb
ja
inc
test
movs
or
push
or
push
stos
jecxz
push
sbb
xor
adc
xchg
and
pusha
xor
cmp
mov
xor
movs
sub
mov
cmps
nop
dec
push
imul
(bad)
imul
mov
pop
inc
inc
lods
push
cmc
mov
addr16
shr
cmp
or
push
xchg
dec
rcr
out
pop
stos
bound
jne
add
or
sbb
ret
inc
xchg
imul
pop
push
mov
les
fcom
and
xchg
lods
cmp
push
dec
add
add
fisttp
sub
adc
sbb
(bad)
(bad)
in
scas
into
add
jp
xor
sbb
int3
stos
jmp
sbb
add
out
push
and
jbe
sbb
sbb
adc
int
jecxz
add
sub
les
xor
call
leave
sar
sbb
push
and
call
fs
mov
stc
mov
inc
sbb
rol
xchg
ins
sar
xchg
cs
or
push
and
jbe
mov
stc
push
int3
call
popa
lds
imul
lock
sub
cld
adc
fdiv
gs
or
fidiv
pusha
clc
mov
(bad)
fstp
jmp
inc
sub
add
hlt
int3
mov
mov
in
ret
mov
and
push
cmp
(bad)
neg
mov
neg
shl
mov
or
xchg
movs
dec
xchg
pop
xor
jbe
out
mov
es
push
xchg
mov
inc
mov
shl
inc
sub
xor
(bad)
addr16
sbb
rcl
inc
and
ss
fimul
sahf
rol
xor
mov
push
push
xchg
fist
push
mov
cmps
loopne
push
push
push
lods
retf
outs
jnp
xor
loopne
rcr
test
jecxz
jle
dec
ss
test
mov
sub
sahf
imul
pop
imul
jo
imul
jecxz
mov
vminps
enter
xchg
ror
(bad)
nop
lods
mov
jmp
add
shl
fwait
inc
pushf
mov
mov
repnz
call
fcmovb
shl
and
sbb
jl
sahf
sahf
mov
sub
daa
cmp
jae
sub
std
add
scas
loop
jecxz
jl
les
mov
ss
pop
nop
pop
sbb
aas
adc
or
pop
or
test
clc
popa
out
or
xadd
lds
les
push
aas
cmp
neg
into
push
add
leave
frstor
or
cmp
inc
xchg
aad
inc
inc
fimul
adc
sbb
pop
xchg
add
adc
or
add
jo
aad
dec
cmc
xor
mov
in
mov
cmps
dec
cmp
popa
mov
imul
inc
push
int3
mov
fnstenv
cmp
mov
adc
push
xor
aad
inc
jb
sub
stos
nop
cmovs
sbb
shr
repnz
xchg
jae
fs
inc
(bad)
cmps
inc
cmp
and
adc
push
and
inc
popf
add
mov
mov
repz
stos
xor
stos
(bad)
xchg
push
dec
cs
sub
mov
in
sbb
adc
shl
sbb
test
and
inc
nop
sbb
(bad)
fsub
fidivr
stos
loope
test
lea
sbb
nop
and
(bad)
pop
adc
cmp
loopne
test
push
push
mov
call
jne
pop
pop
or
and
xchg
pop
test
sbb
dec
pop
sub
mov
out
pushf
dec
mov
hlt
scas
pop
lods
mov
loope
xor
call
or
popa
push
inc
retf
ror
sub
mov
loope
dec
mov
sub
jbe
mov
or
inc
sub
pusha
dec
xchg
cmp
adc
mov
rcl
cli
das
mov
sbb
mov
aad
mov
fwait
dec
sbb
fisubr
xor
ret
mov
fld
ret
jne
outs
mov
arpl
jb
xor
adc
pop
jmp
das
add
mov
fsubr
sub
cmp
mov
mov
or
mul
push
retf
daa
xchg
cli
jp
pop
add
dec
pop
sbb
call
clc
addr16
(bad)
cld
mov
jg
out
pop
out
mov
pop
(bad)
adc
fs
cmp
out
pop
loop
idiv
mov
gs
pop
scas
inc
adc
and
std
jg
ins
sbb
sahf
pop
(bad)
aas
jmp
not
ins
out
jg
xchg
out
sub
mov
test
jae
inc
xchg
mov
or
ss
push
mov
mov
leave
sbb
shl
jmp
int
imul
pop
test
pushf
add
jle
mov
jmp
sub
fcmove
test
mov
xor
(bad)
push
call
fs
mov
xchg
pop
retf
enter
or
xchg
push
fwait
cmp
mov
jno
mov
push
test
inc
retf
jle
inc
pop
(bad)
cmp
imul
push
les
push
dec
(bad)
jns
call
aas
sti
cld
and
cmp
mov
(bad)
mov
sbb
mov
in
clc
test
repz
test
add
jle
ret
pop
mov
inc
push
leave
leave
mov
jnp
jmp
ins
nop
repz
or
call
mov
int
cmp
xor
and
push
clc
lds
clc
mov
je
dec
outs
xchg
xor
int
mov
dec
hlt
pop
pop
data16
cmps
scas
dec
xor
mov
mov
repz
push
mov
fnstcw
adc
push
lods
mov
out
fs
fwait
in
fwait
dec
call
mov
(bad)
mov
ret
into
and
int
ret
mov
dec
call
adc
cwde
stos
shr
inc
(bad)
sub
sub
imul
pusha
dec
dec
rcr
jecxz
jbe
fwait
daa
mul
mov
cli
(bad)
and
or
cld
jmp
pushf
lods
sub
xchg
(bad)
mov
sub
fwait
shr
push
jo
call
aad
fld
stc
scas
(bad)
cs
mov
stos
stos
sahf
imul
jmp
inc
sub
push
cmc
fadd
(bad)
out
stos
jge
ins
fisubr
jae
push
jecxz
jne
push
mov
test
sub
idiv
sub
cli
ins
stc
add
(bad)
jg
pop
aam
mov
adc
inc
mov
les
adc
jmp
int3
jge
xchg
aas
mov
imul
div
pop
leave
jo
out
pop
movs
addr16
daa
cli
or
mul
xchg
cli
adc
and
imul
loope
sub
and
inc
pop
mov
daa
dec
sahf
mov
mov
fwait
pop
mov
push
bound
cmps
ror
jg
jnp
cdq
push
or
xor
cmp
jmp
repz
xor
mov
(bad)
test
mov
mov
ror
rcl
test
sbb
imul
jb
mov
xchg
pop
in
mov
xchg
xchg
push
push
out
add
push
in
cmps
iret
nop
loopne
daa
test
fisubr
sbb
inc
cmps
ins
fisubr
mov
pop
test
pop
rcr
retf
ficomp
push
fistp
in
aad
mov
or
out
clc
test
sub
push
out
(bad)
fimul
aas
jle
fucomip
(bad)
inc
xchg
jge
je
int
shr
mov
pop
ret
mov
test
test
imul
retf
cwd
mov
test
addr16
gs
adc
scas
inc
cwde
sti
inc
cmp
fbstp
js
xor
jmp
fs
call
xchg
in
data16
mov
jnp
pop
jns
mov
jmp
or
or
stos
cdq
adc
out
xchg
cdq
cld
(bad)
or
or
jge
lahf
push
test
sbb
bound
prefetchwt1
or
xor
int
imul
cmps
je
outs
shr
fisubr
ins
ja
mov
into
pop
mov
jno
mov
push
fcmovnu
inc
fs
sub
mov
lods
in
xchg
ret
jne
push
push
loope
mov
outs
scas
rcr
cmp
sbb
nop
lea
jne
jb
fistp
les
xchg
push
iret
loopne
scas
stc
scas
jmp
outs
movs
xchg
xchg
dec
jo
mov
add
ds
cwde
push
inc
test
in
rcl
mov
test
loop
cld
or
imul
mov
movs
call
scas
stc
jle
in
std
push
pop
sahf
lods
push
imul
or
aad
mov
cwde
out
xor
sar
outs
mov
in
xchg
ss
xor
mov
out
dec
das
xor
xchg
sti
push
repz
xchg
adc
pxor
push
xchg
jmp
loop
jo
loopne
int
outs
xchg
mov
cmp
add
repz
repnz
dec
and
xchg
test
mov
or
test
xor
push
ud1
or
xchg
dec
hlt
jb
int
pop
push
sub
ret
retf
nop
cmp
int3
std
and
mov
inc
imul
lock
icebp
push
jb
or
out
retf
mov
call
xchg
push
xor
adc
ror
xor
movs
cli
stc
outs
push
hlt
dec
or
cdq
cli
xchg
lds
clc
dec
mov
popa
(bad)
cmp
push
fnsave
push
cmp
cs
outs
xchg
les
(bad)
out
fnstcw
jne
dec
fs
test
retf
ret
cdq
mov
inc
dec
test
jns
cmp
in
pop
push
pop
in
xchg
les
pop
pop
or
mov
aad
sub
mov
or
xchg
cld
les
jecxz
loop
jp
mov
jmp
pop
xor
lods
std
dec
pop
inc
cs
(bad)
lods
movs
xchg
or
enter
leave
dec
(bad)
fstp
movs
(bad)
es
jl
inc
push
push
fisttp
sub
pop
leave
mov
xor
int3
lahf
jno
sahf
or
dec
(bad)
cmps
add
dec
mov
sub
push
and
or
sbb
out
pop
mov
loop
inc
jl
xchg
fsub
mov
iret
or
mov
xchg
std
dec
std
mov
data16
dec
push
push
lods
es
sti
inc
leave
ret
in
mov
sbb
int3
jle
test
jmp
(bad)
cmp
pop
adc
push
test
cmp
mov
popa
xor
cmp
and
and
int
cmp
jmp
and
cmp
inc
jo
pop
dec
dec
dec
inc
popf
sub
fimul
mov
stos
cmc
mov
cmp
enter
inc
int3
loopne
jnp
mov
sbb
sbb
xor
push
adc
(bad)
dec
sub
aad
push
pop
je
mov
loope
xor
lds
jb
jg
icebp
pop
add
fadd
cmps
fwait
and
cwde
aaa
fcomip
push
and
pop
gs
in
(bad)
icebp
xor
inc
cmp
mov
fsubrp
ror
fild
cmps
adc
add
jno
pop
pusha
mov
dec
dec
mov
pop
mov
mov
push
dec
dec
shr
stos
fcom
and
inc
mov
and
add
ins
jmp
dec
jecxz
jle
ret
mov
jecxz
dec
das
sar
in
call
rol
and
ret
jne
push
jmp
mov
pop
jle
fisub
pop
outs
call
div
inc
jnp
shl
inc
movs
push
cmp
dec
mov
ins
fstp
inc
jmp
jbe
pop
sub
jmp
inc
push
cwde
ret
into
add
mov
jbe
and
fs
xlat
add
jmp
mov
dec
mov
xor
pop
nop
adc
shr
inc
push
adc
and
push
aad
test
mov
les
fiadd
ss
in
fdivr
mul
fadd
mov
outs
push
cli
ds
jp
repnz
cmp
cmp
inc
push
xchg
loop
ss
xor
ins
pop
xchg
and
push
mov
or
sbb
add
push
push
adc
std
pop
nop
inc
mov
adc
xchg
(bad)
shrd
icebp
push
dec
pusha
xchg
in
xor
inc
adc
rcl
fcomp
or
icebp
inc
pop
pusha
pop
inc
mov
cmp
add
pop
and
pop
mov
enter
pop
jne
add
or
xchg
mov
xchg
xchg
cmp
call
sub
adc
sbb
and
mov
xor
inc
jne
scas
dec
inc
rcl
mov
add
mov
popf
push
mov
push
xor
(bad)
fwait
push
loop
add
mov
xor
popf
and
adc
add
add
and
mov
gs
rcl
dec
int3
(bad)
sbb
(bad)
pop
xchg
rcl
dec
gs
mov
adc
or
push
sub
in
and
inc
and
add
fidiv
cmps
syscall
add
pop
test
sbb
dec
pop
sub
mov
mov
(bad)
sti
retf
ds
inc
inc
pop
lods
xchg
(bad)
adc
adc
in
aam
jb
movs
mov
adc
ja
sub
xor
mov
out
clc
xor
pop
pop
sbb
lods
loopne
xchg
xor
cwde
and
icebp
cmp
push
and
aaa
shl
je
mov
sbb
test
cwde
cmp
dec
loope
mov
adc
pop
push
or
or
repz
sub
xor
mov
shr
sub
push
dec
retf
out
push
adc
fcomp
lock
std
mov
int
std
(bad)
cmp
dec
int3
xchg
adc
daa
sar
pop
jne
ins
jmp
out
sub
push
imul
std
push
jmp
imul
into
mov
stc
add
test
jmp
add
push
push
lahf
jmp
dec
shl
adc
in
xchg
and
push
xchg
call
add
sub
fisub
sbb
sub
inc
and
in
xor
fidiv
or
push
mov
mov
rol
inc
sub
mov
ins
inc
call
xor
or
inc
pop
out
(bad)
int
(bad)
adc
aaa
icebp
jl
sub
js
sub
repnz
pushf
mov
fcmovbe
inc
mov
popa
add
sub
or
inc
xor
adc
call
or
pop
dec
mov
push
int
imul
mov
fsub
cmps
in
sti
ss
or
js
lock
dec
loope
loope
mov
fldcw
mov
jmp
mov
add
pusha
and
fistp
ret
fmul
or
movs
aas
sub
jle
or
push
retf
dec
cmp
mov
pushf
inc
iret
jmp
(bad)
rol
sahf
xor
pop
and
adc
das
and
mov
xor
call
neg
push
xchg
sbb
ins
fidivr
into
pop
retf
ret
fcom
outs
push
inc
aam
add
mov
xor
loop
fimul
int3
or
xchg
stc
mul
daa
das
pusha
push
sbb
clc
cmp
xchg
xchg
sbb
scas
mov
or
xchg
or
inc
xor
mov
ja
mov
aas
stc
dec
clc
loopne
arpl
movs
das
lea
push
hlt
cmp
std
sub
adc
inc
push
xchg
cmps
(bad)
sbb
mov
or
fmul
add
mov
shr
test
mov
pop
cmp
cwde
pop
addr16
in
rol
lock
xchg
pop
test
ret
in
inc
out
pop
aad
lea
cmps
push
xor
into
cmp
mov
dec
sbb
push
xchg
mov
jo
jp
or
pop
or
cmps
fiadd
inc
shl
iret
clc
cdq
movs
lods
fst
lock
mov
addr16
sbb
jp
leave
mov
icebp
xor
inc
jnp
add
add
out
rcl
mov
iret
imul
fidivr
mov
sahf
test
push
call
ror
adc
pushf
js
mov
cmp
ror
iret
inc
imul
rol
test
xor
fst
nop
lds
or
sub
call
in
in
adc
pop
sub
in
jl
fnsave
pop
xchg
pop
push
daa
test
push
rcl
cmp
jmp
mov
ret
sbb
fild
inc
cmp
ficomp
mov
push
sahf
add
fs
pop
aad
sbb
cmp
(bad)
or
push
addr16
bound
loopne
push
fisub
sbb
inc
mov
(bad)
jne
stos
cmp
ret
pop
sub
retf
jbe
xchg
cmps
lods
lods
mov
or
cmp
sub
dec
sbb
dec
push
sub
mov
daa
mov
in
shl
jb
popf
call
mov
das
stos
xchg
fimul
(bad)
dec
out
inc
shl
(bad)
mov
mov
xchg
mov
test
gs
outs
gs
repnz
cli
stc
jp
lods
stos
movs
mov
dec
cmp
mov
mov
push
push
sbb
popf
popf
mov
or
ja
cmp
push
pop
(bad)
add
ror
out
push
movs
dec
adc
bound
inc
ja
and
jmp
aam
in
ja
xchg
test
xor
push
inc
or
pop
add
jae
xchg
loope
dec
mov
out
mov
rcr
dec
or
ret
pop
or
pop
call
into
dec
mov
mov
sbb
fwait
sbb
sbb
cmp
sbb
fiadd
pop
pushf
fs
int
dec
mov
and
adc
loopne
sbb
cmps
js
mov
or
cmp
or
jb
xor
fxch
adc
inc
pop
pop
inc
xor
movs
dec
dec
pop
or
adc
add
imul
dec
adc
shl
push
cmps
inc
into
pop
and
(bad)
arpl
repz
jmp
stc
scas
int3
js
scas
int
or
test
sub
in
mov
cmp
sbb
mov
xor
push
leave
stos
dec
add
aas
shl
sbb
mov
pop
retf
mov
add
mov
jbe
xchg
xchg
xor
inc
popa
fdiv
(bad)
aas
jne
pop
adc
popa
out
(bad)
rcr
dec
sbb
fucompp
xor
sub
mov
pop
mov
inc
aad
ins
and
pop
pop
or
push
lock
xchg
inc
mov
push
xor
dec
pop
cs
test
ret
lods
arpl
xor
adc
push
mov
hlt
mov
loope
jae
sbb
sub
jg
pusha
int3
in
inc
inc
jmp
das
popf
and
xor
cmp
adc
(bad)
xchg
ja
dec
lods
stos
in
sbb
stos
sub
(bad)
cmps
push
int
dec
push
arpl
loop
repnz
fmul
(bad)
adc
push
mov
sbb
mov
loop
or
aas
push
out
mov
(bad)
aas
mov
push
or
fsub
inc
jle
and
retf
jmp
aaa
fbstp
xor
cmp
lods
adc
fnsetpm(287
imul
fisttp
mov
ins
scas
xchg
pop
cmps
cld
daa
test
push
dec
(bad)
inc
ror
cmp
sub
and
rol
fs
push
xchg
mov
sub
jmp
stos
sub
std
loope
dec
mov
adc
ds
sub
out
mov
and
loope
sbb
fcomi
test
stos
xchg
or
in
mov
sub
sub
cmp
div
cmp
cli
fwait
pop
push
outs
cld
dec
push
out
push
add
adc
inc
lods
add
adc
jnp
sbb
push
or
loope
cmps
push
adc
out
cmp
jecxz
cmc
sbb
mov
mov
mov
lods
test
jne
cs
movs
mov
xchg
dec
inc
push
inc
arpl
inc
cmps
push
mov
mov
xchg
or
pop
dec
in
mov
fisub
(bad)
xchg
adc
dec
xor
jae
mov
in
mov
or
sti
into
fmul
fdivr
rcr
mov
cmp
(bad)
mov
pop
(bad)
rep
add
cmp
retf
loop
dec
adc
leave
mov
mov
sub
sub
add
sbb
add
imul
add
push
jo
aaa
mov
(bad)
cmc
mov
call
mov
xchg
test
pop
pop
das
mov
pop
das
push
mul
xchg
or
leave
jp
jg
pop
das
sub
pop
das
dec
cmp
inc
sbb
stc
imul
and
mov
std
setae
repnz
fisubr
dec
xlat
adc
in
and
fsubr
les
in
test
mov
nop
inc
repnz
sahf
dec
cli
test
repz
xor
dec
or
mov
cdq
adc
sub
outs
(bad)
inc
mov
mov
ins
cmp
or
mov
push
inc
mov
rcl
std
inc
pop
jb
or
les
and
fld
mov
cmp
test
cdq
mov
or
bound
loope
rol
sbb
inc
dec
jmp
out
in
loopne
mov
or
test
retf
sub
fwait
test
ret
or
retf
push
inc
push
xor
mov
popf
scas
add
dec
mov
and
push
or
test
sub
cmps
rol
inc
cdq
adc
xchg
inc
adc
data16
dec
mov
clc
fwait
dec
sub
or
cmp
mov
js
aaa
xor
push
enter
jle
sub
mov
fs
stos
xor
xchg
imul
mov
(bad)
cmps
mov
mov
icebp
pop
mov
pop
and
ds
sub
fsub
ffreep
(bad)
out
sbb
add
and
mov
mov
(bad)
lds
jg
jp
or
fdivr
test
add
mov
xchg
das
adc
xor
mov
xor
mov
add
jae
out
jnp
rcr
inc
(bad)
shr
sahf
cmps
cmp
adc
jge
mov
lods
mov
or
outs
push
and
int
mov
test
paddd
js
mul
imul
jae
popa
sahf
fld
aam
cmp
aad
xchg
test
cmp
daa
jmp
mov
mov
xchg
mov
jb
cmp
push
loope
push
inc
push
xchg
fcom
das
(bad)
hlt
mov
and
or
gs
inc
mov
jge
bound
and
push
retf
fadd
hlt
mov
test
call
or
or
hlt
add
push
jo
loopne
fidivr
sub
jno
dec
or
sbb
xchg
ds
push
lea
add
sub
xor
push
imul
xor
jb
sbb
repnz
inc
cmpps
or
fist
js
(bad)
movs
cli
push
push
lahf
(bad)
adc
daa
adc
pop
xchg
jmp
scas
lods
clc
jg
scas
stos
in
(bad)
fwait
repnz
inc
test
xchg
xchg
cmp
sub
(bad)
or
inc
in
fcom
scas
xor
push
sbb
cmp
mov
clc
into
add
sub
rcr
dec
outs
cmp
js
xchg
xchg
inc
xor
cmps
dec
aaa
popa
mov
cli
and
sbb
push
or
pop
bound
push
jmp
mov
cmp
arpl
movs
pop
cmc
jl
shr
aam
mov
stc
mov
push
mov
jno
xor
je
ffree
cmps
imul
lds
jl
in
lods
inc
mov
das
and
fcmovu
retf
call
xchg
pop
dec
jne
jbe
adc
test
and
pop
lea
cmps
pop
inc
cwde
jbe
(bad)
adc
and
mov
fdivrp
lods
fidiv
push
(bad)
cmovl
les
xor
add
lods
cmp
cmp
jg
mov
loop
sub
fnsave
cld
fmulp
mov
scas
xchg
scas
ss
jns
xor
in
scas
ds
pop
hlt
push
xor
mov
adc
add
push
adc
sahf
or
outs
ret
aaa
outs
adc
jbe
push
les
popa
ficomp
enter
test
scas
dec
mov
and
bound
in
mov
dec
vfnmsub132ss
or
rcr
setl
adc
sub
ins
sbb
stos
xor
mov
pop
je
movlhps
aad
sbb
in
add
pop
das
jo
nop
lds
mov
repz
jg
mov
inc
and
and
xlat
inc
jae
test
out
cli
mov
mov
enter
mov
out
cmp
in
ret
dec
movs
jecxz
ds
aas
iret
outs
aaa
mov
mov
mov
inc
std
xchg
xor
call
sub
in
inc
(bad)
fdiv
sbb
sub
jne
sbb
xor
pop
fwait
jb
shl
cwde
and
mov
shr
scas
aad
inc
out
mov
jecxz
mov
gs
repnz
and
mov
call
into
call
xchg
leave
sti
dec
cmp
out
xchg
mov
les
aaa
fwait
add
push
les
imul
push
ins
cmp
mov
xor
sbb
mov
push
mov
pop
dec
push
call
cmps
fdivr
push
pop
aas
pop
and
mov
mov
lea
dec
jecxz
jg
add
sub
sbb
xlat
int3
mov
or
mov
xchg
adc
jmp
shld
idiv
stos
sbb
or
jnp
dec
sbb
push
pop
inc
std
scas
bound
in
add
jbe
add
ins
or
add
add
pop
xor
test
xchg
xlat
xchg
jbe
mov
mov
mov
add
cmp
xchg
out
mov
cmp
adc
ins
loop
(bad)
sti
xchg
imul
imul
sbb
outs
aam
and
mov
lods
mov
mov
adc
call
loope
mov
xor
popa
ins
out
leave
mov
push
ret
es
dec
in
dec
jbe
aas
cld
sahf
ds
fsubr
test
adc
lahf
push
bnd
sub
and
movs
xor
enter
stos
lds
scas
xor
stc
sub
pusha
inc
push
fnstsw
cmp
mov
test
inc
dec
xchg
ds
mov
push
mov
mov
adc
into
(bad)
mov
sbb
std
jp
retf
inc
cmp
pusha
mov
push
mov
xlat
movs
pop
mov
and
aam
cmp
test
stc
or
inc
adc
jg
inc
pop
xchg
pop
pop
leave
rcl
jmp
xchg
(bad)
lods
and
pushf
mov
pushf
jmp
push
pop
(bad)
and
inc
dec
aas
and
cmp
out
fisub
pop
mov
aam
aam
or
test
shl
ror
sub
rcl
aas
nop
in
shl
mov
push
lods
ins
sub
push
aam
add
sbb
adc
sub
xor
dec
cs
fwait
dec
sahf
and
ds
cmp
jne
dec
mov
pop
mov
fbld
or
retf
inc
inc
mov
jge
pop
fldenv
fwait
das
dec
jmp
mov
and
mov
and
pushf
mov
pop
add
mov
cli
test
xor
sub
sbb
jne
cs
lea
add
jp
jge
movs
jmp
pop
mov
adc
pop
out
and
xor
fdivr
add
div
in
jle
out
sbb
dec
enter
repnz
jae
xchg
leave
cs
fisttp
mov
fdivrp
mov
push
inc
scas
leave
(bad)
jge
mov
xchg
repnz
call
leave
sahf
xor
popf
shl
adc
ror
imul
rcl
icebp
mov
js
fild
jmp
xrelease
pop
retw
lea
(bad)
out
xchg
sahf
(bad)
rol
(bad)
es
mov
dec
adc
mov
iret
fst
arpl
mov
lods
(bad)
inc
inc
nop
fs
cmps
pop
push
out
xor
xor
jne
cdq
pop
mov
test
pop
mov
in
push
call
adc
mov
add
(bad)
jmp
cmp
sahf
mov
push
bound
inc
jle
imul
push
out
aam
clc
ret
aaa
mov
retf
inc
addr16
shr
out
and
add
ret
push
inc
add
pop
mov
xlat
mov
mov
ds
je
pop
test
mov
mov
test
shr
out
cwde
pop
lahf
test
(bad)
fcom
cdq
fist
out
jle
cli
xor
add
xchg
jnp
mov
inc
add
in
les
or
or
fcmovnu
adc
fisttp
inc
jnp
fist
into
scas
stc
cs
ss
xchg
(bad)
xor
imul
sbb
call
shl
packssdw
icebp
jne
inc
aaa
ds
retf
bound
clc
data16
push
repz
inc
and
mov
mov
jl
and
jge
mov
add
cld
mov
imul
sbb
push
dec
pop
ja
pop
(bad)
imul
lods
inc
popa
add
and
and
arpl
outs
retf
jo
xchg
push
je
jb
mov
(bad)
(bad)
sbb
and
adc
inc
idiv
and
fcomp
shl
stc
ret
sbb
ficomp
push
cmp
(bad)
retf
inc
jle
lods
ins
push
and
mov
iret
sub
mov
cmps
or
cmc
call
and
dec
sub
adc
les
jecxz
mov
jmp
push
mov
xchg
call
push
xchg
int
fdiv
sbb
fdivr
sub
lahf
xor
push
sbb
mov
or
test
mov
sub
mov
mov
push
scas
xchg
shl
dec
or
mov
out
(bad)
loop
sti
movs
aaa
adc
add
push
jnp
test
or
out
ds
into
lods
into
push
clc
stc
cmp
ins
jns
dec
retf
pop
adc
dec
in
test
das
gs
pusha
xchg
dec
nop
hlt
shl
(bad)
fild
and
test
inc
stc
fstp
fisub
cmp
int3
iret
xchg
push
mov
or
es
mov
xor
lods
jo
movs
jmp
aad
pushf
fisubr
jp
mov
leave
cdq
inc
ja
push
jge
mov
mov
sub
jno
jno
rcr
pop
mov
mov
test
mov
sbb
sub
cmovno
shr
into
and
pop
rol
and
dec
push
sub
movs
fxsave
lahf
jge
(bad)
jno
sbb
jmp
jo
scas
mov
push
int
pusha
or
mov
popa
inc
repz
mov
cmp
cmp
jmp
push
enter
jbe
adc
add
or
fwait
pop
adc
adc
rol
jne
shr
ins
jno
bswap
shr
jb
hlt
xor
cmps
mov
(bad)
ret
push
nop
data16
lahf
aas
mov
nop
add
inc
sub
push
std
in
(bad)
je
or
fcomp
fst
pusha
xchg
cmp
pusha
stos
pop
sti
mov
inc
pop
xchg
cmps
movs
adc
jns
push
cdq
mov
retf
test
cwde
push
mov
iret
inc
arpl
push
sbb
lock
inc
sbb
mov
popa
lods
sbb
mov
inc
xchg
xchg
popf
adc
js
fs
xor
mov
xchg
dec
jmp
dec
in
mov
xchg
cmp
jb
mov
pop
mov
inc
test
ret
stos
ss
(bad)
adc
in
gs
mov
(bad)
push
dec
popf
add
pop
pop
sub
mov
inc
les
xchg
test
adc
add
cmp
rol
pop
cmps
call
cmp
or
mov
pop
sub
ror
push
movs
aad
sbb
fmul
mov
xchg
pop
ficom
ds
inc
loope
mov
(bad)
xlat
in
aam
cmc
aaa
or
xor
iret
fisub
mov
push
je
pushf
xchg
and
imul
out
jle
xor
adc
mov
and
xlat
fs
pop
add
aam
call
jae
popa
mov
cwde
push
fdivr
retf
inc
or
clc
int
loop
and
xchg
push
cmc
fcmovb
cmp
lods
fs
xlat
xchg
fs
sub
jmp
adc
inc
pop
xor
imul
into
cmp
nop
shl
inc
(bad)
jmp
xor
cs
test
or
(bad)
mov
test
aam
movs
cmp
jbe
retf
mov
xchg
mov
imul
dec
or
or
inc
and
rol
xor
sub
and
clc
leave
mov
adc
add
test
(bad)
test
dec
imul
das
aam
scas
scas
(bad)
dec
aad
(bad)
mov
pop
mov
mov
sbb
idiv
ins
jne
push
add
fst
xchg
xchg
push
mov
(bad)
mov
push
lea
call
sbb
jno
mov
adc
cdq
sub
pop
(bad)
jge
xchg
scas
mov
jmp
mov
shl
mov
sbb
push
fsubr
jl
cmp
xchg
mov
xchg
cmp
popf
mov
sti
(bad)
aad
cld
call
xchg
inc
pop
mov
bnd
aaa
mov
fs
repz
sub
imul
fucomip
xor
scas
sub
cmp
adc
pop
cld
es
fcomp
and
push
lods
mov
cmp
jbe
out
sbb
push
test
mov
loop
mov
outs
aas
fcomp
sub
dec
xor
pop
dec
jp
xchg
movs
(bad)
jne
or
dec
mov
(bad)
leave
mov
mov
nop
push
pop
and
leave
jecxz
or
lock
xor
movs
mov
mov
add
lahf
pop
xor
jmp
out
js
enter
dec
jb
dec
sbb
out
mov
shl
pop
jmp
sbb
ins
cwde
sub
in
pop
inc
fwait
mov
scas
les
ret
popf
xor
icebp
std
adc
mov
pusha
push
int3
sbb
push
xor
jns
dec
call
pop
(bad)
adc
mov
pop
stos
lahf
mov
sbb
cmp
mov
es
jp
jbe
push
push
in
popa
cmp
or
retf
adc
movnti
push
mov
cmp
mov
mov
dec
add
jnp
mov
cmc
and
pop
test
xor
ret
repz
lahf
add
or
push
repz
inc
fidivr
jmp
test
add
push
push
sti
sahf
lods
push
sub
jecxz
loope
iret
add
pop
push
test
sbb
xor
outs
or
xor
xchg
lds
pop
and
and
xchg
cld
mov
les
das
jae
jge
aas
jae
inc
lea
ret
iret
push
add
loopne
mov
stos
aaa
inc
sub
mul
push
pushf
or
repz
stos
out
add
hlt
xor
mov
(bad)
and
sub
cdq
adc
or
sub
lea
ins
add
xchg
xchg
nop
in
arpl
iret
xchg
sub
aas
push
xchg
mov
xor
sub
push
sub
push
scas
out
sbb
imul
xor
arpl
sbb
popf
fwait
add
xchg
push
push
in
pushf
push
pop
fchs
sbb
jecxz
xor
cli
inc
xchg
inc
xlat
mov
mov
mov
(bad)
dec
or
sbb
pop
dec
in
(bad)
or
je
fcom
or
xor
sahf
shl
test
jmp
lods
push
call
or
ficom
cmp
ret
stc
add
mov
sub
mov
and
sub
sbb
xchg
jl
xor
loope
jmp
pushf
cmp
adc
ret
(bad)
sbb
cmp
cmp
cmp
jnp
mov
fcmovb
je
cmp
or
std
mov
movaps
xchg
add
std
mov
das
or
or
xchg
pop
sbb
sub
ret
pop
fistp
cmp
inc
ror
call
cmp
test
(bad)
dec
stos
mov
imul
cmps
jo
sar
data16
add
ret
test
jbe
cmc
cmps
pop
jge
sbb
imul
jb
dec
cld
out
out
outs
pushf
push
mov
ret
iret
fnsave
imul
xchg
xchg
sbb
xchg
cli
or
cmp
jns
xor
dec
daa
xchg
pop
mov
mov
push
addr16
inc
repz
cmp
sbb
lahf
loop
fldcw
gs
jmp
sti
fimul
dec
cdq
pop
mov
cld
retf
je
cmc
ror
cmp
addr16
retf
aam
lods
sbb
xlat
xchg
repz
xor
sub
dec
ret
test
ds
cmp
popa
retf
mov
push
mov
push
lods
scas
test
push
or
jge
movs
inc
push
inc
sub
setb
mov
(bad)
stc
or
stos
xor
retf
mov
hlt
jne
nop
mov
loopne
out
push
push
sar
call
push
ss
subps
jb
sub
arpl
in
scas
dec
cmps
xor
enter
and
(bad)
lds
and
push
imul
in
js
(bad)
pop
jecxz
mov
xchg
enter
jne
stos
pop
xchg
repnz
jnp
aaa
jb
inc
xlat
dec
loop
movs
and
fwait
sbb
bound
inc
aas
cdq
test
cmp
jg
call
int3
jbe
adc
pop
(bad)
jno
imul
mov
outs
aaa
mov
push
in
jl
pop
push
mov
sub
mov
jge
and
inc
xchg
xchg
fidivr
and
mov
fdivrp
enter
push
jmp
and
(bad)
inc
dec
mov
push
bound
xchg
je
adc
jge
sahf
push
xchg
adc
cmp
ss
xchg
jle
js
adc
(bad)
aam
mov
or
aas
or
icebp
aad
pop
cmp
pop
push
cld
mov
and
lock
ror
sub
nop
(bad)
cmp
mov
jmp
movs
fist
adc
jmp
dec
dec
push
out
xchg
das
(bad)
iret
aam
es
cmp
jo
add
fisubr
or
stos
xor
or
adc
sub
sub
shr
es
cdq
sub
lods
in
adc
xchg
sbb
popf
mov
ror
push
mov
int
loopne
sub
fisttp
cdq
aaa
cmp
sub
retf
push
push
pop
mov
cmps
xchg
xchg
stos
in
shl
in
jg
retf
xor
cmc
cli
fcom
jns
mov
xchg
xchg
ret
sub
and
mov
jmp
pop
sub
inc
sub
xchg
mov
stc
ret
and
cmps
and
pop
lock
leave
jmp
je
jno
mov
xchg
(bad)
push
out
mov
retf
stc
inc
mov
jbe
scas
add
sub
fcmovnb
push
js
test
mov
ins
sub
jmp
xchg
pop
jl
dec
inc
repz
cmp
aaa
or
int3
sub
outs
ins
pop
ret
and
xchg
inc
loopne
je
pop
and
mov
cwde
popf
mov
enter
rcl
sbb
mov
pop
stos
and
out
call
inc
shl
jle
and
mov
icebp
stos
movs
test
push
ds
mov
push
sbb
mov
fiadd
jg
sub
loopne
fwait
jmp
cld
adc
repnz
inc
fist
sahf
sub
add
jmp
jnp
adc
pop
cmp
mov
(bad)
retf
xchg
mov
add
stos
sbb
lods
jmp
cs
aaa
fadd
cdq
(bad)
out
pop
jmp
xor
movs
jno
jge
ins
jge
scas
popf
mov
mov
inc
mov
add
fadd
mov
add
pop
stc
rcr
mov
mov
mov
mov
jmp
nop
mov
sar
add
sar
add
scas
dec
push
jl
inc
inc
push
inc
or
add
ret
fidivr
mov
jb
inc
or
fistp
pop
or
cmc
ss
(bad)
mov
cmps
je
inc
add
out
inc
lahf
out
or
daa
dec
out
mov
xor
cmp
and
icebp
(bad)
addr16
mov
(bad)
fisubr
mov
cmp
jg
push
push
and
jmp
cwde
arpl
popf
shl
inc
xor
adc
push
pop
jnp
inc
mov
jl
enter
or
add
push
sbb
cmp
mov
mov
je
inc
in
jge
mov
ins
std
sub
cld
jno
pop
push
dec
lock
pop
jg
in
rcl
xchg
jb
push
test
stos
mov
loop
fld
jmp
mov
retf
in
dec
and
int3
and
fcmovnbe
fsubr
jb
xchg
lods
mov
jns
ins
repz
mov
in
and
mov
mov
loope
jo
aaa
mov
sbb
sbb
mov
jmp
(bad)
mov
cmps
fsubr
fnstenv
and
push
cmp
push
imul
mov
scas
mov
adc
retf
das
jmp
xlat
nop
sub
mov
scas
div
inc
mov
add
lods
xchg
sub
push
sbb
push
bound
(bad)
repnz
jmp
fwait
xchg
imul
mov
xlat
nop
ret
jns
xor
lock
shl
xlat
jno
outs
cmp
stc
push
pop
ins
or
jns
sti
push
cmp
and
xchg
jmp
cmps
in
popf
aaa
pop
std
and
jno
jge
fimul
xor
ret
cdq
mov
cmps
xor
and
retf
sbb
dec
mov
je
add
push
daa
dec
mov
arpl
jne
push
nop
dec
jnp
(bad)
jp
arpl
mov
mov
mov
aad
sub
dec
inc
lods
push
mov
cld
inc
sub
push
xchg
push
mov
das
gs
xchg
daa
mov
mov
(bad)
push
rcl
sbb
xchg
cmp
into
xchg
sahf
ds
push
imul
jae
mov
pop
xlat
sub
cwde
(bad)
leave
in
push
(bad)
mul
hlt
out
in
and
movs
aas
jmp
jbe
push
enter
jmp
ins
aas
xchg
xchg
mov
or
imul
movs
jl
ret
cdq
sub
adc
jp
pop
push
inc
inc
mov
push
pop
dec
mov
ror
and
setae
or
arpl
sub
cmp
(bad)
and
ins
movs
or
jnp
cli
ret
and
jmp
cmc
in
jno
cld
jne
arpl
(bad)
xor
pop
cmps
pop
stos
cmps
movs
out
and
mov
mov
pop
arpl
js
hlt
scas
push
or
sti
xlat
pop
cmc
push
jmp
in
sbb
pop
push
in
mov
sbb
les
mov
mov
push
pop
sti
lds
loop
repnz
outs
xlat
push
mov
inc
ret
sbb
adc
mov
inc
inc
(bad)
xchg
sbb
frstor
inc
retf
sar
cmp
jo
lods
test
pop
xor
mov
fiadd
imul
dec
push
sub
scas
mov
mov
arpl
adc
xchg
pop
mov
bound
ins
mov
cmps
push
push
mov
push
xchg
leave
push
adc
cmp
cmp
out
aam
mov
es
arpl
stc
mov
and
sub
mov
out
sbb
js
mov
lea
bswap
add
and
in
movs
daa
and
and
(bad)
lods
dec
arpl
push
mov
inc
cmp
jmp
sub
scas
sub
or
xchg
into
xor
sbb
test
mov
jecxz
jb
pop
add
lahf
mov
adc
adc
inc
inc
lds
sbb
popf
or
inc
xchg
inc
mov
call
int3
lods
lods
xchg
pop
pop
sbb
dec
inc
inc
and
mov
push
inc
leave
sub
dec
sahf
dec
popa
add
jbe
cs
sbb
dec
sub
loop
retf
adc
inc
mov
push
pop
retf
push
neg
push
cmp
je
in
lds
add
jno
into
std
gs
mov
movs
add
pop
dec
jl
psubw
dec
mov
mov
in
leave
mov
jbe
push
mov
cmp
les
inc
xchg
sub
jae
test
or
in
shl
inc
xor
mov
mov
mov
add
scas
sbb
imul
es
mov
retf
adc
xchg
pop
mov
cs
dec
out
movs
repz
sbb
sbb
dec
and
mov
dec
dec
fisttp
stos
cmps
dec
stos
arpl
ja
cmp
push
test
xchg
dec
adc
arpl
adc
add
ret
icebp
hlt
xchg
inc
ss
and
loop
sbb
in
ss
iret
retf
mov
push
leave
in
jno
add
ds
(bad)
ins
(bad)
mov
aam
stos
pop
pop
inc
repnz
push
inc
push
sbb
xlat
scas
mov
pop
cmps
pop
into
add
push
inc
out
xor
push
loope
pop
mov
xor
and
add
scas
xor
mov
outs
fstp
lods
jmp
add
pop
(bad)
push
cmps
sub
je
xor
in
jg
ins
call
mov
jnp
(bad)
pushf
xor
or
xchg
dec
or
push
pushf
ret
dec
out
lods
mov
inc
cs
es
pop
lahf
sti
mov
jl
jnp
mov
adc
fucomip
pop
dec
and
and
cli
not
test
xchg
stos
ret
mov
ins
add
and
loopne
add
ret
or
or
in
(bad)
test
(bad)
inc
leave
sbb
sbb
mov
movs
jnp
cmp
and
cli
dec
div
fs
sub
jne
(bad)
scas
inc
and
shr
jg
retf
push
shr
call
retf
imul
fs
imul
aad
fldenv
mov
sbb
in
aam
int
retf
push
dec
jns
mov
(bad)
pop
sub
add
sub
mov
jb
or
arpl
frstor
pop
call
mov
dec
sub
mov
cmp
mov
aas
adc
jae
xor
or
dec
cwde
aas
xor
and
inc
outs
icebp
std
adc
mov
jp
arpl
cmp
jbe
add
gs
clc
out
popa
fld
and
cmp
pop
imul
(bad)
mov
jbe
sbb
xor
cs
sub
pop
lahf
dec
pop
icebp
outs
retf
add
xchg
mov
mov
leave
gs
mov
jmp
xor
mov
outs
mov
ja
ja
daa
mov
arpl
sbb
pop
iret
xchg
and
xchg
inc
bound
jae
mov
push
nop
pusha
(bad)
sub
nop
imul
sbb
aam
cli
push
(bad)
mov
jp
jb
dec
push
movups
mov
pop
fisttp
jge
xor
lahf
jmp
jge
fmul
pop
mov
(bad)
push
sub
sub
fdiv
pop
lock
pushf
jns
add
cdq
or
sbb
adc
outs
mov
das
push
mov
or
aam
call
in
fwait
leave
xchg
add
enter
into
push
ds
mov
ret
cli
pop
fild
jmp
in
mov
or
bound
jg
pop
into
dec
jae
inc
cld
jg
imul
cwde
iret
inc
mov
push
dec
into
sbb
mov
xor
mov
das
push
daa
add
push
cli
int3
pushf
cmp
stos
add
call
xchg
cmps
dec
and
mov
out
or
es
test
mov
daa
push
cmc
pop
retf
cmp
popa
mov
xchg
lods
and
nop
mov
xchg
xchg
movs
idiv
xchg
add
dec
jo
and
aad
pop
xor
jae
js
jbe
sub
outs
xchg
sub
dec
mov
jle
stos
ja
dec
mov
dec
jle
or
das
(bad)
rol
jecxz
xor
fiadd
sbb
pop
out
xlat
lea
xchg
mov
(bad)
sbb
ror
sar
jo
ss
or
(bad)
cmp
mov
ins
rol
sub
jae
mov
jne
or
sub
shl
and
bound
jl
ins
pop
outs
mov
or
xor
dec
dec
or
xor
test
in
cld
lahf
sub
add
xchg
pop
fisub
cmps
add
jne
ds
jge
imul
cmp
jbe
push
sbb
inc
movs
mov
sub
pusha
sbb
pop
xlat
pop
sub
lds
retf
xchg
dec
or
xchg
adc
pusha
mov
fstp
or
cmp
mov
jo
mov
icebp
adc
and
dec
jecxz
sbb
or
and
and
mov
outs
jae
and
push
mov
(bad)
cld
aas
and
(bad)
ins
lock
addr16
xor
jle
dec
test
and
sbb
cmp
hlt
adc
push
mov
jo
nop
push
test
xor
mov
daa
push
sti
popa
sahf
or
inc
or
jo
icebp
jmp
push
jo
mov
xor
add
sub
dec
(bad)
pusha
adc
adc
ret
jae
cmps
ins
mov
inc
or
sbb
(bad)
imul
and
in
and
repnz
(bad)
(bad)
pop
push
jne
cmp
and
fwait
mov
or
push
call
loop
test
sahf
in
or
add
pop
lods
and
mov
(bad)
in
fst
retf
dec
jns
xor
ret
imul
ja
stc
jg
cmp
mov
popa
icebp
ja
sub
push
sbb
inc
or
mov
dec
inc
or
leave
mov
imul
test
xchg
pop
test
sub
hlt
ins
call
mov
mov
or
fstp
mov
mov
mov
imul
or
mov
jnp
push
inc
sub
jbe
or
mov
test
call
jne
aam
cld
test
mov
nop
jle
fisttp
cli
mov
push
cvttps2pi
push
psrlw
push
jle
stos
pop
xlat
lahf
jmp
lea
hlt
shr
in
cli
arpl
add
cdq
pop
clc
fiadd
cmp
sbb
(bad)
cmp
jno
(bad)
pop
sub
add
mov
test
mov
inc
sbb
mov
jne
fwait
call
xor
into
lods
fmul
loopne
sbb
jmp
mov
dec
ja
sbb
or
rcl
mov
lahf
xor
fild
jmp
cmps
push
scas
scas
out
sub
sub
cmp
cmp
mov
mov
mov
hlt
sub
out
jle
stos
ja
and
lea
adc
push
sbb
inc
pop
outs
lods
sbb
mov
adc
and
in
sar
jno
lds
cmp
cmps
mov
cmp
div
mov
pusha
aas
jmp
xor
xchg
outs
shr
popf
xor
jae
call
aad
xor
rol
out
jecxz
jl
mov
inc
fld
mov
pop
enter
jmp
pop
fdivp
nop
loopne
es
add
jecxz
mov
loopne
cmp
cdq
call
xor
xor
xor
xchg
pop
xchg
mov
outs
mov
mov
sub
aad
jae
pop
lea
push
add
sahf
aaa
mov
push
xor
dec
lea
popf
test
in
xor
cld
popf
test
xor
mov
pop
(bad)
lock
or
push
mov
sub
and
addr16
push
or
jno
in
push
daa
jecxz
(bad)
fsubr
pop
cmp
jns
adc
scas
scas
std
inc
adc
stc
inc
cmp
test
or
stos
into
add
mov
sbb
add
fidiv
cld
dec
cmp
jmp
idiv
out
add
dec
in
leave
xor
imul
neg
arpl
inc
(bad)
xchg
sbb
cwde
jl
(bad)
aas
int3
sub
sahf
in
shl
rcl
(bad)
retf
mov
sahf
lahf
xchg
sbb
scas
sbb
retf
sub
inc
mov
add
test
and
test
loop
sub
cmps
inc
(bad)
fld
arpl
or
add
push
and
sub
mov
xor
jp
inc
push
pop
push
repnz
mov
dec
sub
mov
cdq
cmp
nop
jmp
test
jl
xchg
adc
outs
daa
aaa
xchg
pop
pushf
call
in
fidiv
sub
cmp
ds
test
or
call
repnz
cmp
dec
fdivr
inc
outs
mov
aaa
test
add
addr16
push
cmp
push
imul
call
jne
mov
fistp
out
or
lods
test
dec
inc
jnp
jmp
(bad)
mov
inc
test
addr16
inc
or
in
cmp
lock
outs
push
ds
and
jp
ds
mov
mov
add
leave
je
mov
(bad)
ins
jo
jbe
pop
call
scas
add
xor
jmp
or
jmp
addr16
dec
sub
push
es
test
(bad)
movs
aas
pop
scas
leave
les
jp
test
dec
cmp
pusha
push
sub
in
add
sub
std
jl
das
jnp
sub
jne
jns
test
repz
je
jle
mov
fidiv
ins
jb
mov
mov
mov
dec
es
call
jge
xchg
xor
mov
fld
xchg
adc
ficom
jbe
inc
or
inc
xchg
inc
inc
or
and
push
add
mov
fwait
mov
imul
loope
and
outs
icebp
outs
mov
cld
xor
sbb
adc
cmps
test
jg
iret
aas
inc
ret
in
fst
jecxz
xchg
lock
cmc
mov
mov
or
adc
sub
repnz
sti
cmp
retf
xor
mov
pop
scas
cmp
adc
push
pop
cmps
xchg
loope
cmps
cli
ins
iret
mov
aad
inc
les
pop
cmp
adc
sbb
repz
sbb
sub
retf
fsub
adc
int3
js
mov
add
nop
lea
das
dec
fimul
sti
call
mov
and
push
push
in
test
cmp
pop
jp
jns
and
adc
in
push
stos
fucom
xchg
ror
xchg
and
pushf
int3
mov
mov
call
pop
pop
or
or
movs
or
shl
push
jnp
ret
rcr
pop
call
jle
ja
push
sub
shr
push
(bad)
std
xchg
test
retf
std
jl
jge
ret
pop
jae
pop
sti
add
test
pop
aaa
adc
fld
and
inc
jl
ficomp
lahf
xor
in
lds
cdq
sbb
popf
out
ss
sub
sbb
mov
pmulhw
mov
adc
das
mov
je
push
imul
or
inc
and
cld
sub
ret
xchg
xchg
mov
sti
dec
sbb
jge
popf
xor
push
adc
sub
jmp
jns
mov
xchg
push
or
mov
arpl
dec
in
fucomi
xor
(bad)
scas
inc
dec
dec
xchg
ins
ins
dec
push
sub
arpl
(bad)
das
outs
inc
push
rol
push
mov
(bad)
adc
test
and
mov
push
in
retf
jmp
aad
out
repnz
ret
dec
xchg
outs
xchg
mov
mov
jp
dec
jp
xchg
sbb
mov
mov
test
test
push
xor
cmp
aaa
repnz
xchg
add
xchg
sbb
into
daa
mov
rol
fbld
adc
dec
ficomp
inc
or
inc
xor
dec
pushf
int3
mov
gs
sbb
cmp
popa
fisttp
lahf
rcr
mov
and
sahf
cmp
repnz
in
mov
jne
into
cmp
xor
psrlw
stos
adc
inc
and
jg
imul
adc
neg
or
adc
hlt
mov
and
add
mov
and
and
pushf
cmp
and
mov
ret
jmp
pop
std
sar
mov
sbb
rcl
es
mov
in
pop
mov
adc
mov
sbb
pop
pop
mov
sub
sbb
retf
pop
sbb
sub
inc
fidiv
outs
ret
or
push
mov
dec
iret
or
jp
aaa
das
sub
push
aam
xchg
adc
imul
scas
dec
inc
xor
mov
mov
and
mov
scas
push
jmp
lea
mov
inc
dec
mov
cmp
jns
sbb
sbb
ins
or
std
gs
pop
hlt
mov
sahf
mov
sbb
aas
stos
cmp
scas
add
dec
test
retf
ret
xor
test
xchg
lahf
dec
mov
push
push
and
aas
xchg
xchg
enter
pop
mov
adc
call
inc
or
and
mov
dec
stos
in
cmp
cwde
rcl
movs
test
sti
lea
jne
mov
leave
sub
stos
add
dec
aad
daa
jle
mov
out
add
in
sub
pop
jno
ret
jle
cld
iret
ds
add
sbb
pop
or
repnz
hlt
xchg
mul
dec
push
add
addr16
sbb
dec
dec
jae
(bad)
sub
ret
lock
sbb
xor
mov
dec
mov
fdivr
fwait
cli
icebp
pop
dec
mov
lahf
lods
inc
ret
push
ins
sbb
sub
ins
dec
xchg
data16
inc
mov
mov
mov
ror
jmp
inc
sub
daa
mov
jl
aad
sbb
in
call
ss
out
jo
stc
gs
sbb
fs
push
(bad)
in
jbe
in
adc
rcl
loope
push
add
fsub
stos
outs
das
pop
enter
pop
dec
sbb
xor
mov
fucomp
outs
mov
and
or
sti
clc
add
mov
xor
jnp
stos
push
out
mov
in
cmps
loop
inc
sub
adc
jg
push
lahf
and
xchg
loop
cmc
imul
dec
mov
pop
jbe
push
pop
inc
popa
les
pop
popf
(bad)
push
les
add
dec
retf
sub
lea
mov
repnz
push
sub
es
sub
mov
push
add
aad
pop
jne
mov
(bad)
adc
push
(bad)
idiv
test
je
clc
int3
pop
dec
call
and
rcl
adc
push
add
sti
sbb
jns
lahf
xlat
and
data16
ja
int
scas
xchg
or
xor
inc
movsx
push
in
sub
cmp
inc
in
jbe
bound
mov
out
push
push
mov
push
retf
fwait
adc
adc
in
xchg
xchg
jnp
and
mov
xor
dec
or
cmps
test
cmp
jecxz
out
push
jno
fisubr
loope
sbb
into
push
add
adc
sub
inc
shl
add
and
loopne
add
pop
imul
add
push
inc
xchg
shl
and
or
neg
fiadd
in
jne
sbb
rol
test
mov
mov
ins
test
in
fimul
inc
jle
mov
stos
je
scas
xchg
ret
mov
push
sub
sub
aam
xchg
sub
cmp
push
(bad)
je
in
test
nop
push
xchg
jns
js
outs
scas
movs
dec
test
mov
dec
dec
fcom
(bad)
jae
cdq
or
fwait
cmp
xchg
adc
imul
jecxz
sub
and
sar
add
scas
xor
fldenv
cld
rcr
js
mov
not
imul
xchg
movs
jmp
pop
aad
pop
idiv
add
sbb
fild
xlat
fdiv
mov
in
and
dec
lea
mov
loope
jle
jg
and
xor
xchg
jae
push
sub
jmp
out
lahf
aam
dec
jg
out
pop
mov
shl
(bad)
sbb
sbb
jbe
in
mov
jl
pop
and
test
xchg
adc
sti
repnz
cmp
mov
mov
div
jp
dec
xor
(bad)
jno
jle
ins
shl
add
rcr
sar
lods
cmp
inc
mov
jp
push
pop
mov
repz
adc
and
inc
xchg
push
mov
pushf
cmc
int
mov
jmp
cdq
rol
(bad)
or
lods
jp
out
dec
jl
test
lds
clc
mov
and
or
push
mov
dec
scas
jl
test
ds
xor
icebp
mov
lahf
popa
inc
dec
and
sbb
jmp
into
sti
popa
mov
cmp
xor
cs
mov
loopne
movs
xor
cwde
sub
adc
fldcw
dec
fisttp
out
xchg
stc
xchg
(bad)
jns
dec
cmps
ins
mov
(bad)
dec
or
dec
mov
xchg
jne
dec
pop
test
jne
inc
mov
out
popf
adc
jmp
xchg
ja
out
pop
imul
xor
cmp
stos
sbb
aad
mov
(bad)
repnz
(bad)
int3
int3
popa
adc
or
cmps
cmps
in
push
inc
fisub
sahf
mov
stos
int3
stos
dec
out
xchg
lods
inc
jge
test
push
xor
or
mov
arpl
and
adc
lea
xchg
outs
std
ret
sub
dec
or
mov
mov
ins
xchg
jl
(bad)
jne
pop
xchg
fmul
fldcw
sbb
call
aas
jae
leave
xchg
call
push
shr
retf
call
inc
adc
add
mov
test
std
(bad)
mov
fs
pop
cmp
ja
jg
cmc
sbb
xor
push
pop
add
adc
jg
xor
sbb
cmp
(bad)
cmps
adc
std
jne
push
imul
retf
and
int
into
or
pusha
shr
xchg
test
cmps
cmp
jmp
leave
mov
cmp
cwde
xor
into
inc
add
push
mov
xchg
xor
and
(bad)
fnstcw
or
test
dec
push
push
xchg
cmp
push
or
xchg
or
mov
movs
dec
push
outs
pop
call
fisubr
dec
mov
mov
xchg
adc
sar
xor
test
xor
dec
mov
bound
and
inc
adc
adc
mov
lock
loopne
stos
je
ror
sub
ins
mov
je
movlps
ret
sub
jbe
shr
push
fsub
sbb
lods
movs
pop
cli
int
arpl
js
stos
cwde
clc
out
cmp
cwde
lods
mov
xor
pop
or
fmul
push
mov
shl
dec
aam
add
stc
xor
lea
adc
cld
std
mov
mov
repnz
dec
cmp
or
aaa
fsub
fst
or
imul
sbb
in
xor
push
add
dec
and
movs
inc
popf
adc
(bad)
xchg
mov
mov
add
mov
nop
inc
sub
xor
cmp
dec
mov
or
inc
(bad)
sub
shr
aad
sbb
xchg
xchg
dec
and
cli
and
inc
neg
into
leave
jle
dec
jnp
ss
int3
fwait
push
test
jge
sub
jmp
jge
xchg
in
sbb
leave
push
test
nop
cmp
push
xchg
sbb
dec
(bad)
push
sbb
push
rol
and
or
mov
dec
dec
and
xchg
aam
cmps
aam
in
xchg
mov
sub
xchg
cs
and
mov
mov
mov
bound
inc
(bad)
sub
xchg
jns
sbb
jecxz
and
inc
shl
dec
mov
lods
sub
jmp
or
rol
xchg
xchg
jne
and
mov
mov
mov
and
pop
es
or
mov
pop
sub
cmp
adc
xor
mov
iret
out
adc
mov
mov
ror
adc
inc
adc
es
into
pop
cld
leave
imul
sahf
mov
js
je
dec
retf
pop
stos
add
fsubr
pop
and
add
push
inc
mov
or
sbb
outs
inc
add
sbb
mov
dec
sub
adc
bound
inc
adc
les
add
pop
add
fst
sub
ror
xchg
adc
fmul
ret
call
or
int3
mov
cld
dec
adc
adc
jmp
add
js
mov
pop
mov
inc
and
fs
push
repz
sub
pop
add
mov
inc
add
loope
lahf
sbb
call
js
lods
fcomp
adc
lods
jge
imul
or
mov
aam
add
ficomp
sbb
inc
pop
call
iret
int
mov
adc
fbstp
nop
fwait
sbb
mov
xchg
les
test
(bad)
sbb
sub
push
cmps
push
or
cmps
shl
cmp
jge
stos
(bad)
mov
xchg
(bad)
cmp
mov
and
add
loop
test
sub
in
pop
adc
hlt
dec
enter
mov
and
mov
repnz
cmp
test
cmc
jne
movs
(bad)
stc
mov
das
pop
pop
cmp
scas
sar
and
(bad)
ja
inc
sbb
add
call
jle
je
std
push
jl
jp
sahf
or
xchg
jge
or
test
mov
stos
(bad)
inc
mov
loopne
nop
xchg
fst
push
shl
pop
call
call
sub
clc
ret
out
mov
sbb
outs
jno
sub
ds
and
outs
or
pmaxub
fcomp
(bad)
outs
test
out
sub
push
(bad)
adc
jg
push
setnp
ret
and
lock
adc
loope
push
data16
jno
push
inc
xchg
xchg
dec
cmp
loopne
outs
in
jmp
jg
(bad)
jnp
sbb
loope
movs
add
in
mov
shr
push
test
sub
retf
mov
add
push
inc
push
loopne
and
dec
rol
ds
inc
sbb
sub
movs
push
jmp
pop
sbb
mov
sti
(bad)
mov
or
ja
out
sbb
sub
call
lea
out
cld
ins
js
cmc
cmps
mov
pushf
mov
sub
jp
stc
push
add
pop
stos
imul
les
mov
mov
std
retf
push
(bad)
jg
ins
enter
xchg
sahf
js
cmp
aad
cmp
loopne
cmp
imul
inc
add
shr
addr16
ins
adc
xchg
daa
and
xchg
mov
pop
push
cs
cmp
rcl
xchg
loop
push
add
jo
fcmovu
loope
call
adc
add
lea
(bad)
pop
inc
inc
repnz
mov
stos
xor
sub
push
add
xor
movs
jmp
js
loope
hlt
addr16
pop
mov
push
and
lods
add
mov
dec
test
mov
mov
mov
popa
les
call
push
jle
ror
dec
(bad)
aad
out
inc
jae
ds
or
(bad)
xchg
sbb
xchg
aam
retf
add
cmps
cwde
push
leave
data16
mov
xor
dec
in
jmp
adc
or
xchg
pop
retf
push
push
pop
mov
add
pop
pusha
sub
jae
mov
test
mov
out
shl
ins
hlt
mov
stc
xchg
dec
pushf
outs
push
mov
out
mov
adc
and
mov
jl
aad
ror
jns
out
mov
add
cwde
cwde
sub
push
stos
jle
cmps
cld
mov
sbb
cld
test
call
xchg
stos
imul
daa
retf
pop
inc
inc
jmp
aam
inc
test
mov
pop
dec
jno
cmc
int
ds
add
and
xchg
mov
mov
lods
inc
aam
enter
dec
mov
push
cs
add
xor
or
sbb
inc
mov
leave
inc
mov
dec
popa
(bad)
and
or
ret
sbb
cmp
jecxz
push
(bad)
jl
push
fild
sub
mov
outs
mov
and
dec
ret
shl
dec
xlat
scas
fcomp
dec
into
outs
push
out
jl
mov
cmp
dec
cmp
inc
cmp
push
or
cmp
adc
in
adc
adc
into
add
fnstenv
pop
dec
scas
icebp
sub
or
fadd
div
scas
mov
dec
sub
gs
loope
push
test
into
and
adc
push
repnz
fsubr
call
push
dec
jb
inc
stos
das
dec
mov
mov
xor
pop
pop
jmp
ds
cwde
pushf
jmp
or
out
cmp
jb
or
xchg
hlt
cmp
leave
jne
adc
jae
rol
xadd
sub
and
lods
pop
and
inc
repnz
ins
dec
(bad)
stc
xor
(bad)
out
jmp
cmp
mov
xor
and
icebp
ret
ja
icebp
icebp
dec
rol
pop
call
add
and
out
push
cmp
xchg
dec
dec
repz
retf
adc
dec
daa
out
ret
loopne
push
in
sbb
xchg
mov
stc
not
fistp
fist
fcmovb
test
int3
xor
pop
or
cmp
cmp
sbb
inc
sbb
(bad)
push
adc
inc
sbb
push
fcom
popf
iret
pop
xor
dec
ret
sub
(bad)
call
push
mov
mov
pop
xor
sub
jmp
aam
and
(bad)
ins
sti
cmp
movs
mov
mov
cli
shl
std
and
(bad)
fidivr
jo
iret
add
retf
clc
mov
and
cld
pop
add
adc
enter
mov
or
jae
pop
das
dec
xor
mov
mov
inc
outs
lds
mov
cmp
adc
fistp
les
stos
pop
cmps
cli
pop
push
adc
adc
mov
mov
xor
pop
and
std
loop
jnp
sub
ja
push
dec
in
dec
dec
loope
sbb
jae
mov
mov
sbb
inc
pushf
push
ja
or
push
pop
adc
loopne
arpl
push
loop
repz
adc
lahf
enter
sbb
jmp
jg
loop
arpl
xchg
mov
out
cmp
cmp
call
xchg
dec
mov
add
and
dec
xchg
inc
pushf
cmps
sbb
pop
dec
je
popa
jne
cmps
test
adc
ret
sti
dec
pusha
sub
inc
retf
test
dec
dec
push
enter
scas
test
dec
daa
loopne
adc
popa
push
pop
(bad)
popf
pop
xchg
je
leave
cmp
in
(bad)
pop
pop
mov
mov
addr16
(bad)
rcr
retf
mov
pop
xchg
out
jmp
jle
ret
pop
fsubr
mov
mov
jnp
icebp
inc
adc
dec
popf
imul
daa
cld
movs
xchg
sub
cmp
mov
push
pusha
imul
out
cld
das
in
sti
(bad)
fnstsw
sbb
mov
(bad)
xchg
pop
xchg
ret
push
push
mov
fdiv
shr
bound
out
sub
retf
mov
mov
mov
cli
nop
sub
call
xor
jmp
aas
and
popf
and
sub
add
pushf
and
jl
mov
cli
popa
popf
xchg
gs
outs
push
clc
push
mov
into
inc
xchg
xchg
mov
pop
call
(bad)
sub
mov
adc
add
jns
sub
cli
jae
mov
push
inc
sar
inc
out
das
movs
test
hlt
xchg
inc
sti
xchg
sti
ins
outs
adc
dec
cmp
das
(bad)
ror
int
mov
inc
jae
pop
dec
xchg
jne
cmp
dec
sahf
pop
dec
mov
mov
and
pop
cs
cli
ret
ja
xchg
xor
mov
cmp
stc
dec
dec
jecxz
sub
rcl
jbe
mov
adc
lldt
add
les
add
les
pause
fwait
dec
(bad)
and
and
jle
popf
dec
dec
inc
adc
adc
xor
sbb
retf
adc
inc
call
js
call
lds
fadd
xor
mov
rol
(bad)
jnp
push
xor
jl
push
in
sub
mov
mov
add
pop
inc
mov
movs
jb
ins
mov
inc
ret
add
mov
push
or
add
test
inc
xchg
inc
cli
aam
jmp
jne
and
fld
jmp
addr16
movs
add
shl
repnz
push
stc
push
test
jle
inc
(bad)
cmps
cmp
cmps
test
jbe
ins
xchg
or
sbb
sahf
sub
jg
and
cli
(bad)
mov
cmp
adc
or
arpl
dec
in
ins
mov
data16
xor
(bad)
out
xor
(bad)
cld
(bad)
nop
xor
push
retf
ret
lods
jl
iret
mov
pop
daa
add
ja
je
dec
or
pop
into
xchg
mov
mov
les
(bad)
jmp
fcomp
push
fmul
(bad)
addr16
mov
cmp
fldcw
add
mov
sar
inc
and
mov
sub
sahf
add
xchg
in
inc
or
push
jno
call
add
mov
adc
test
cld
ins
idiv
sahf
cld
repnz
cmp
lods
push
fadd
pop
ret
push
mov
hlt
data16
jno
mov
lahf
(bad)
cld
push
pop
sbb
sar
mov
mov
pop
inc
mov
aad
lods
(bad)
call
imul
push
push
enter
mov
mov
mov
hlt
not
mov
aas
push
lea
jmp
cmp
out
lock
add
pop
iret
pop
les
or
out
adc
mov
sub
adc
push
inc
aaa
daa
push
retf
test
out
push
dec
pop
out
pop
lea
out
dec
loop
pop
push
sbb
pop
(bad)
(bad)
arpl
cmp
in
inc
or
or
retf
mov
sbb
jmp
outs
ja
dec
lods
push
and
mov
clc
bound
cmp
mov
mov
xlat
push
lds
xor
xor
xor
movlps
retf
dec
loop
xor
idiv
and
jne
cmp
dec
ret
jno
dec
shr
mov
aam
loopne
rol
dec
dec
mov
vmovss
adc
mov
sub
stos
sub
xchg
push
test
arpl
(bad)
test
push
test
les
test
div
mov
jg
mov
rcr
hlt
(bad)
dec
lods
cmp
stc
mov
and
sahf
inc
loop
cmp
push
lods
xchg
mov
fimul
fild
jns
outs
or
xchg
fs
sbb
shl
cmc
mov
dec
xor
or
pop
jbe
mov
(bad)
fisubr
push
sbb
out
add
sbb
sub
inc
cmps
retf
repz
inc
jmp
sub
fidivr
inc
inc
jp
pop
mov
lahf
and
int3
mov
mov
add
mov
pop
push
ds
pop
inc
mov
repnz
mov
cmp
out
and
sbb
aas
shl
js
or
ret
cmp
gs
jl
ret
enter
gs
(bad)
jmp
cmp
and
cmp
out
cdq
and
xchg
sbb
arpl
arpl
mov
pop
int
test
pusha
js
and
not
dec
fnstsw
inc
pop
aas
adc
(bad)
add
retf
add
add
pop
inc
data16
xor
(bad)
sub
out
arpl
dec
mov
add
std
(bad)
pusha
jb
call
outs
aam
idiv
fild
stc
iret
ror
cmp
adc
xchg
(bad)
mov
imul
stos
rcl
and
dec
cwde
(bad)
stos
int3
fiadd
movs
push
mov
xchg
xor
iret
dec
xchg
ret
push
mov
loopne
fidivr
jg
xchg
pusha
outs
jnp
cwde
pop
vsqrtps
ins
inc
push
jmp
repnz
or
jne
stos
xchg
inc
push
sub
dec
push
(bad)
inc
cwde
cmp
pop
cmp
push
mov
xor
cmc
or
pusha
mov
xor
cmp
(bad)
loop
mov
cmp
push
rcr
out
mov
jg
jne
in
adc
mov
xchg
jae
xor
inc
push
add
add
xor
sub
sub
pop
push
lea
jne
adc
xlat
jmp
xchg
xlat
sbb
ret
and
arpl
mov
inc
mov
shl
mov
mov
lahf
xor
cli
(bad)
inc
leave
enter
sahf
mov
pop
jno
(bad)
pop
dec
xchg
sbb
push
neg
cmp
jb
shl
dec
pop
mov
pop
dec
mov
hlt
(bad)
jb
sbb
adc
or
punpckldq
inc
pop
int
sub
fcomp
(bad)
(bad)
xor
arpl
cmp
xchg
pop
mov
jmp
pusha
or
scas
and
xor
in
into
xor
pop
(bad)
adc
jle
(bad)
and
loop
sahf
push
or
or
jle
movs
jae
dec
rcl
imul
rcr
movntps
push
jle
fstp
xlat
out
retf
xchg
xor
inc
cmp
mov
fisubr
push
inc
sar
pop
jp
psubd
js
jmp
add
or
hlt
push
fcom
ins
in
out
jecxz
mov
mov
cmps
fld
shr
arpl
and
stc
pmaxsw
hlt
mov
test
in
inc
daa
addr16
es
mov
imul
xchg
je
mov
adc
aas
test
cmp
lods
cmc
jns
std
cmps
test
xor
sub
sbb
test
test
ja
push
pusha
inc
(bad)
xor
or
std
xchg
les
xor
xchg
dec
std
imul
inc
rcl
fwait
xor
jbe
xchg
arpl
and
movs
sbb
mov
iret
inc
sti
pop
jmp
call
rcr
cmc
cmc
ret
xor
cmps
inc
sub
jge
lods
ret
push
mov
pop
fld
pop
je
mov
pop
sbb
(bad)
in
aas
sbb
mov
dec
icebp
int
mov
(bad)
jnp
pop
cld
pop
outs
outs
popf
or
cmps
sbb
xchg
push
out
add
retf
test
retf
out
push
dec
add
mov
pop
shl
push
pop
dec
push
jecxz
jecxz
mov
popa
cmp
test
outs
loopne
in
(bad)
ret
fiadd
aam
fidiv
inc
retf
imul
pop
ret
sub
sub
sub
jl
mov
repnz
mov
mov
fld
popa
ffree
pop
jns
push
into
push
pop
bound
pop
adc
fnstsw
aas
add
pop
xchg
popa
ss
xor
mov
pop
adc
lds
pop
mov
pop
(bad)
sbb
sahf
add
xor
loop
cmps
sub
cmp
cmp
pop
push
jbe
jmp
lock
mov
(bad)
movs
cmp
mov
movs
and
mov
xchg
mov
and
xchg
scas
int3
push
sbb
sbb
(bad)
jno
cld
push
iret
adc
cwde
xchg
sahf
mov
push
fsub
push
jo
dec
div
xchg
ins
add
xchg
inc
sub
bound
out
sbb
add
gs
xor
(bad)
mov
push
cmp
leave
jns
das
std
xlat
sbb
xlat
in
(bad)
mov
and
push
jmp
test
cld
mov
aam
dec
loopne
ins
jo
(bad)
mov
lahf
xor
lods
mov
and
cmc
loop
jno
idiv
out
arpl
pop
call
(bad)
jmp
call
nop
int3
sub
fld
adc
push
mov
mov
and
push
inc
xlat
or
arpl
or
mov
cmp
std
sbb
jnp
jns
sbb
cdq
cmovle
push
mov
(bad)
xchg
enter
xor
inc
xor
enter
xor
mov
push
push
popf
mov
leave
xchg
sub
mov
mov
repz
xchg
inc
xchg
xor
lea
sub
iret
adc
mov
stos
xlat
data16
dec
imul
lock
mov
jecxz
pop
(bad)
loopne
dec
test
or
sub
loopne
ss
add
js
jns
int3
cmp
xor
inc
(bad)
mov
dec
jge
mov
xchg
adc
lods
pop
xor
repz
jne
inc
pop
cwde
hlt
mov
push
mov
movs
mov
inc
enter
mov
fild
mov
movs
jbe
or
mov
nop
int3
jp
cmps
cmps
sbb
mov
test
jecxz
loopne
dec
jp
pop
mov
jmp
jle
stos
push
jnp
pop
xlat
aas
xcrypt-cbc
cmps
shl
or
add
push
sbb
xor
pop
nop
and
inc
mov
or
inc
dec
test
pusha
xchg
imul
and
lds
fld
aaa
jmp
(bad)
xchg
push
cmc
fs
and
pusha
fmulp
xlat
push
xor
dec
dec
xchg
pusha
cmps
xchg
sbb
cs
and
fwait
test
add
jmp
push
js
jp
add
pop
or
shl
cmp
dec
mov
jle
lea
cmps
or
xor
in
popf
and
ins
push
or
cs
ins
cwde
fbstp
(bad)
(bad)
mov
lods
(bad)
scas
cli
adc
retf
mov
xchg
add
dec
xchg
icebp
dec
mov
arpl
les
adc
pop
and
aaa
es
mov
jg
pop
cmp
or
push
inc
sub
add
inc
push
mov
lock
and
add
or
inc
push
inc
das
dec
jp
mov
aaa
stc
mul
pusha
dec
test
add
fldcw
imul
in
hlt
movs
out
dec
xchg
mov
pop
jle
xor
test
in
push
call
retf
push
cmp
not
mov
imul
mov
imul
add
retf
jne
pop
into
ret
mov
arpl
mov
inc
push
push
cmp
or
retf
pop
pusha
push
fcomp
mov
adc
mov
add
jl
or
sub
test
add
and
cwde
test
jnp
xchg
ror
test
bound
repnz
sbb
jne
aaa
sar
push
add
adc
jmp
outs
stos
arpl
pop
push
test
nop
pushf
fsub
nop
ror
pop
sub
or
xor
inc
xor
pop
daa
(bad)
sbb
pop
add
push
cmovge
lods
dec
cmps
out
jns
clc
and
mov
outs
dec
pop
out
div
movs
into
sub
mov
pop
pop
enter
xor
pop
fist
cmp
shr
adc
or
cmp
fisub
jmp
sbb
repnz
push
loopne
fnstenv
and
xchg
dec
loope
push
sub
xchg
imul
mov
pop
dec
mov
(bad)
rcl
sbb
or
ja
lds
aam
imul
or
aaa
cs
or
sti
mov
dec
in
dec
lock
add
jnp
(bad)
dec
or
pusha
hlt
jg
push
in
sub
sbb
ret
sub
imul
pop
(bad)
push
data16
stos
cmove
jno
add
pusha
xchg
xlat
pop
add
mov
lods
mov
jns
pushf
or
mov
xchg
and
add
push
xchg
sahf
dec
stos
rcr
pushf
js
rcl
(bad)
jl
and
sub
pushf
or
test
add
sahf
sbb
out
sub
test
jp
(bad)
stc
inc
retf
repz
add
push
mov
jmp
jbe
and
xchg
or
cli
ror
adc
retf
pop
xor
test
and
and
outs
out
and
dec
loope
jge
retf
outs
sub
jae
mov
or
aam
test
or
fs
cdq
fwait
dec
or
or
rcl
rol
arpl
stos
xchg
cmp
cmp
repnz
scas
ds
test
fdiv
add
xor
cmp
mov
enter
dec
mov
ret
add
(bad)
jno
fs
push
cmp
dec
jg
scas
ja
xchg
and
fidivr
jmp
outs
bound
xor
xchg
inc
fisubr
cmp
popa
sbb
lea
rcl
adc
sub
or
test
(bad)
cmp
fwait
push
mov
jo
mov
push
int3
lds
leave
frstor
(bad)
push
fucomp
ficom
pop
(bad)
and
mov
pushf
pop
dec
int
sbb
sub
xor
mov
mul
dec
pop
popa
data16
pop
gs
popf
test
adc
sbb
repnz
stc
xchg
bound
std
mov
xor
sub
or
pop
jne
jp
jmp
jmp
and
and
cmp
or
sti
call
pop
pop
aaa
loopne
icebp
fwait
xchg
push
bound
mov
pop
pop
push
jae
jp
cs
xchg
in
je
pop
scas
jne
repz
in
rol
sbb
pop
out
mov
nop
in
inc
aaa
pushf
test
pop
(bad)
leave
mov
ror
fcomi
les
xchg
data16
jnp
ret
pusha
mov
jp
stos
fdiv
jne
cmp
aas
adc
xlat
pop
sbb
push
movs
add
add
pop
es
test
xchg
outs
xor
inc
jge
inc
dec
inc
ins
jmp
cmp
shl
add
ficomp
(bad)
jmp
sub
pop
aam
xchg
or
inc
jno
mov
loop
xchg
test
push
leave
aas
lea
cli
fbld
jecxz
adc
jae
mov
sub
jecxz
cmp
xor
dec
dec
push
into
lock
(bad)
and
mov
fmul
repz
mov
or
jmp
xor
stos
mov
popa
or
pop
sub
dec
imul
aas
pop
gs
mov
sbb
aaa
mov
test
add
and
xor
mov
clc
pop
mov
jns
jp
lock
pop
shr
out
sub
and
inc
test
fadd
mov
push
cmp
cmps
ins
fistp
je
fmul
cmp
mul
dec
out
pop
jb
pop
js
push
scas
inc
das
pop
xor
mov
pop
mov
std
mov
cdq
push
mov
in
out
js
mov
fisubr
pop
dec
mov
mov
push
inc
sub
out
je
out
jb
mov
push
test
mov
dec
test
jmp
mov
push
xchg
mov
in
mov
sbb
mov
arpl
adc
mov
int
xor
pop
cmc
movs
sahf
xor
jb
aas
mov
not
dec
fistp
ss
jp
cmp
mov
xchg
in
mov
out
add
or
mov
movs
fmul
lea
adc
inc
mov
lahf
mov
xchg
faddp
stc
cmps
push
adc
pop
(bad)
test
add
sub
int
test
xor
xor
xchg
aas
ins
jne
aas
sbb
jl
cmp
(bad)
xchg
sbb
sub
cmp
jcxz
(bad)
data16
mul
mov
(bad)
cmc
mov
test
xchg
push
ins
adc
pop
jnp
mov
pusha
repz
mov
ins
jmp
retf
(bad)
mov
push
pop
pop
xor
adc
add
mov
mov
lahf
js
ja
mov
inc
stos
inc
pop
mov
fdiv
rcl
pop
frstor
xor
or
mov
sub
in
adc
(bad)
jbe
cmps
mov
je
xor
push
imul
xor
push
mov
sub
cmc
daa
mov
sbb
mov
pop
(bad)
xlat
push
dec
adc
aam
jl
mov
sub
shl
es
leave
add
or
inc
pop
ins
xchg
mov
cmp
mov
aam
add
cmp
dec
retf
push
fidiv
arpl
and
sub
jmp
fwait
mov
mov
jb
push
(bad)
jae
push
nop
int3
retf
jae
gs
test
aas
mov
and
adc
jae
jmp
pushf
les
cli
mov
dec
add
retf
dec
jo
push
mov
lea
xchg
out
or
add
in
rol
sbb
in
fld
xor
out
xchg
xor
jle
and
dec
xlat
mov
or
add
cli
cmp
add
and
popa
inc
out
test
xor
and
add
in
jne
jns
and
lahf
push
pop
test
std
sbb
inc
dec
cmp
jge
ret
push
dec
pop
cmp
adc
pusha
mov
or
test
arpl
inc
cmp
and
shr
nop
mov
xor
enter
jbe
jl
lock
data16
adc
loopne
outs
push
mov
dec
std
add
mov
cld
add
sbb
dec
push
jo
mov
ror
jecxz
adc
pop
jnp
lods
or
test
mov
jae
fwait
inc
and
icebp
fs
xor
out
frstor
pushf
inc
mov
stc
imul
mov
jp
retf
aas
cmp
enter
icebp
ds
cmps
adc
test
les
push
push
(bad)
dec
jo
(bad)
nop
push
xor
jge
popf
push
in
enter
mov
hlt
fs
ins
mov
add
inc
xor
push
outs
mov
mov
xor
xchg
mov
out
imul
push
add
adc
adc
icebp
mov
xor
repz
fwait
dec
mov
push
inc
bound
icebp
test
fild
pop
(bad)
fdiv
fdiv
inc
fstp
cld
dec
sti
fcmovnu
adc
add
push
mov
inc
xor
jns
fmulp
dec
inc
fld
or
aas
lods
sti
or
and
ss
scas
jns
mov
mov
stos
inc
xchg
dec
xchg
movs
rcr
add
mov
int
ds
dec
xchg
stos
out
jns
iret
sbb
(bad)
fnsave
jns
imul
in
lods
jp
add
pop
imul
and
nop
fs
push
pop
popf
mov
pop
xchg
sahf
sahf
das
out
and
mov
push
shl
arpl
sbb
push
push
jecxz
fimul
inc
sbb
mov
mov
xchg
mov
mov
sar
xor
fidivr
sub
jns
shr
loop
mov
repnz
loope
les
pop
icebp
mov
and
jne
dec
inc
test
xchg
mov
add
imul
pop
out
inc
repnz
sub
sub
rcr
fcom
sbb
mov
jmp
push
pop
xchg
scas
adc
jge
mov
je
push
neg
ret
xchg
lods
int
cmp
in
sbb
inc
push
call
outs
push
out
fdivr
pop
cmps
add
dec
xchg
ins
inc
adc
add
retf
sbb
inc
and
das
cmps
call
push
(bad)
(bad)
(bad)
sbb
imul
sar
call
outs
push
popa
inc
lds
cmp
int
add
mov
aad
test
mov
adc
clc
mov
pop
aas
push
xadd
cmp
pusha
pop
push
in
sub
fmul
imul
inc
lods
iret
pop
and
jl
iret
lea
addr16
sahf
xor
adc
pop
xor
and
cmp
mov
arpl
enter
fucomp
and
sub
cmps
mov
repz
push
imul
inc
aaa
nop
es
icebp
lods
fwait
mov
cmp
or
mov
call
xchg
pop
mov
cmc
xchg
cmc
sbb
sbb
inc
adc
add
rcl
fwait
jecxz
add
dec
push
add
xor
xchg
test
shl
dec
add
jmp
test
sub
cld
enter
push
inc
mov
sbb
fstp
iret
(bad)
mov
jmp
jbe
es
fwait
dec
daa
sub
out
ja
push
ds
jmp
xchg
outs
(bad)
jns
pusha
retf
ret
jo
daa
jns
nop
cmps
xchg
pop
fadd
jle
out
push
outs
lea
cdq
nop
jno
arpl
add
jo
ror
mov
jnp
(bad)
xchg
sub
xchg
mov
mov
test
hlt
stos
add
shl
nop
sbb
push
jns
mov
and
push
nop
js
ret
mov
in
dec
jge
stc
adc
xchg
shl
ins
popa
cmp
das
xchg
in
(bad)
push
arpl
mov
aad
rol
(bad)
pop
mov
(bad)
ficom
dec
(bad)
xchg
fmul
sbb
inc
ja
push
in
mov
push
imul
gs
adc
pop
push
(bad)
sahf
clc
ficomp
sub
(bad)
or
or
pop
ror
inc
(bad)
stos
mov
adc
dec
loop
push
cmp
and
scas
adc
cmp
(bad)
push
lahf
in
xchg
movs
push
mov
cmp
xchg
movs
mov
fild
mov
jnp
ins
jnp
mov
mov
sbb
rol
sub
icebp
xchg
dec
mov
in
dec
sub
imul
aam
or
cmp
arpl
sub
or
clc
fucomi
js
push
outs
out
imul
add
jnp
adc
sub
mov
jmp
je
outs
and
scas
add
pushf
stos
jp
aad
mov
xchg
cmps
stos
je
icebp
jb
cli
sahf
and
(bad)
addr16
call
jns
and
lock
loopne
loop
inc
xor
rcl
push
es
fucomi
out
jmp
repz
dec
push
or
jmp
sub
and
(bad)
push
sahf
inc
lea
xchg
gs
out
(bad)
pusha
out
inc
push
jno
test
add
push
cmp
xchg
mov
inc
mov
pop
sub
sbb
push
jge
push
adc
or
mov
mov
push
xor
adc
das
fnstenv
push
xchg
push
call
xchg
cmps
inc
cmp
xor
mov
xor
pop
ret
mov
push
lods
fwait
cmp
jnp
ins
(bad)
mov
ins
and
mov
stos
cmp
pop
adc
sbb
lock
jp
sbb
mov
and
(bad)
(bad)
jp
xor
mov
sar
dec
fadd
push
aaa
in
retf
bound
inc
mov
pop
lods
cmp
jo
scas
in
loop
ja
ins
js
loopne
test
dec
(bad)
cmp
or
lea
test
xchg
xor
pop
retf
xchg
jne
sub
mov
imul
and
mov
push
leave
xlat
shl
jo
add
mov
dec
imul
clc
adc
retf
enter
sub
cmps
jne
xor
xor
out
shr
cmp
int
(bad)
cmp
imul
lods
jle
mov
jmp
mov
push
ss
mov
push
xor
add
arpl
rcl
mov
enter
sub
jg
xchg
retf
xchg
xor
push
mov
sub
or
mov
xor
dec
std
push
xlat
rcl
jo
sbb
popa
fld
jp
nop
adc
xchg
sub
inc
icebp
jmp
call
or
repnz
dec
in
ds
popa
rcl
jmp
pop
jg
mov
pop
push
test
xchg
xor
mov
cld
jns
xor
mov
in
dec
jl
addr16
sub
outs
xor
out
stos
push
dec
ret
push
stos
(bad)
int
jmp
je
sub
(bad)
movs
pop
sub
and
and
dec
add
mov
or
arpl
or
sub
or
cli
mov
loopne
push
mov
addr16
shl
imul
cdq
mov
scas
jg
sub
je
pop
jge
mov
test
mov
mov
std
shr
daa
adc
inc
sub
div
xchg
icebp
mov
pop
les
mov
cmp
or
push
int
mov
lock
cmc
mov
push
movs
sub
cmp
(bad)
mov
sbb
int
rcr
(bad)
cwde
test
and
cmp
iret
cmps
mov
out
sbb
or
xchg
or
jbe
inc
shr
jno
in
shl
push
leave
xor
movs
clc
clc
dec
cmps
mov
jb
nop
lods
jo
fmul
jg
xchg
arpl
inc
and
in
sub
loopne
les
fsub
clc
xor
mov
sbb
mov
mov
and
push
mov
cmps
jae
lock
xor
push
pusha
popf
sbb
in
xchg
call
ror
pop
lea
pop
loopne
pop
clc
imul
inc
push
ja
int
pop
push
repnz
lods
into
mov
pop
xchg
xchg
sbb
mov
cld
js
add
jae
and
mov
aam
int3
fstp
xchg
ins
lahf
movs
mov
addr16
mov
mov
je
pusha
jbe
jle
xor
push
and
(bad)
cmp
xor
mov
sub
and
xchg
and
xor
stos
dec
sti
lods
fisub
pushf
ins
fnstsw
cmps
ins
mov
scas
inc
mov
out
mov
pop
pop
int
loope
xor
in
mov
dec
leave
leave
shl
xor
(bad)
int
fstp
sub
stc
and
lahf
loope
jnp
cmp
mov
jnp
pop
cmp
nop
ja
mov
or
xor
das
pop
sbb
jno
mov
fnstsw
xor
das
retfw
outs
jne
or
push
jmp
xor
addr16
jmp
cmc
jae
shr
xchg
test
int3
sbb
push
xchg
xor
lds
sub
jg
mov
or
mov
add
es
dec
xchg
mov
push
scas
lods
lahf
jecxz
(bad)
ficomp
add
jbe
gs
lock
pop
jge
xchg
xor
mov
jb
ror
inc
imul
pop
jmp
ins
pop
cmp
bound
loope
xor
mov
or
and
dec
jle
adc
push
add
movs
cmp
call
in
sar
or
xor
sti
or
inc
call
xchg
in
ja
fidiv
imul
shl
adc
shl
outs
cwde
push
pop
or
cld
adc
and
xchg
mov
cli
mov
add
xor
sbb
(bad)
(bad)
call
retf
xchg
adc
(bad)
out
push
push
sbb
xchg
fwait
cmc
add
xor
mov
cmp
jmp
xor
aam
outs
jmp
sar
shr
je
ret
xor
paddusw
xor
cmp
mov
mov
cmp
sbb
fs
out
cmp
jmp
fisubr
lods
xchg
sbb
jecxz
pusha
test
outs
aaa
lods
fistp
sub
fsubr
cmp
inc
jmp
movs
jmp
xchg
shl
aad
push
imul
cld
int
push
(bad)
sbb
inc
dec
ss
(bad)
fdivp
mov
inc
cmp
loope
shl
xchg
cmc
shl
ror
(bad)
and
mov
std
ret
cmps
cmc
(bad)
xor
cmp
ret
shl
mov
or
xchg
dec
(bad)
jecxz
xchg
sbb
cmp
loope
loope
pop
or
idiv
pop
mov
mov
in
nop
mov
or
xchg
pop
jae
xchg
lahf
test
dec
stc
mov
ins
fistp
and
psllq
fs
mov
add
div
mov
jp
add
add
dec
mov
push
add
and
out
jb
mov
fld
jmp
out
aaa
out
shl
fsub
push
stc
pop
xchg
sbb
and
sbb
cmp
jp
jnp
jnp
jne
sub
shl
retf
xlat
xchg
inc
rcl
int3
add
xor
repnz
jne
shr
cmp
lahf
fst
push
pop
xor
mov
adc
stos
jge
dec
and
jnp
out
jp
mov
pop
jno
adc
or
pop
inc
popf
out
call
sub
xor
sahf
mov
loop
add
push
xchg
js
arpl
cdq
in
call
push
sbb
fwait
call
dec
pop
sub
push
into
mov
dec
push
ss
jg
cs
pop
scas
push
fs
adc
ja
mov
push
push
sbb
cmp
inc
xor
dec
popf
xchg
dec
mov
ret
xor
mov
mov
icebp
mov
mov
cmp
les
or
fistp
ja
test
or
and
jb
scas
fild
pop
pop
fisubr
jno
imul
pop
fcomp
mov
test
rcr
inc
fild
sbb
nop
pop
push
lahf
jle
imul
or
les
mov
(bad)
dec
loop
aad
jmp
jmp
add
pushf
retf
pop
movs
repz
pop
ss
fisubr
sub
cmp
(bad)
xchg
cdq
lahf
rcl
jns
sub
pop
mov
cmp
es
push
fnstcw
movs
aas
imul
xor
fldenv
dec
enter
aas
lods
out
xchg
mov
fnstcw
ins
ds
out
xchg
jo
push
out
scas
cs
je
xchg
jmp
cmp
call
cmps
inc
in
ror
cld
jg
fwait
(bad)
push
mov
fwait
mov
cmp
stos
nop
ss
pop
add
aas
jb
xchg
clc
repnz
add
loope
nop
ins
in
sub
nop
sub
mov
hlt
adc
pushf
push
jmp
inc
fisttp
sbb
ret
xchg
and
xor
dec
and
pause
push
pop
imul
ret
ret
movs
mov
in
jle
pop
popf
mov
daa
outs
aaa
fdivr
adc
dec
push
ja
out
add
sahf
inc
pop
ja
cwde
mov
out
movs
iret
retf
dec
and
ds
pop
sub
push
mov
sti
xchg
jns
fnsave
clc
loope
retf
add
fsub
imul
ret
fisubr
in
jg
mov
outs
push
popa
iret
dec
xor
dec
pop
in
mov
push
jns
mov
stos
inc
shl
popa
cmps
fisttp
fcmovbe
mov
call
push
repz
call
inc
adc
dec
arpl
movs
sub
pushf
push
mov
test
imul
sub
lea
fidiv
inc
push
dec
mov
stos
jl
push
add
call
cmc
cmps
ins
lea
jle
imul
test
jl
add
adc
mov
(bad)
fwait
or
sbb
je
out
and
and
aaa
cmc
xchg
mov
scas
xor
jns
cs
push
jmp
sub
lea
je
scas
repz
jge
push
pop
iret
faddp
adc
pop
push
in
mov
mov
int3
call
inc
xchg
nop
pop
ds
mov
js
stos
jbe
mov
in
jno
xchg
mov
and
or
mov
cmps
push
call
sub
not
imul
push
push
mov
cld
std
dec
inc
jo
call
fiadd
(bad)
iret
sbb
mov
cmp
ja
test
xchg
and
loope
mov
jae
shl
pop
bsf
ins
adc
cdq
ss
mov
les
mov
and
xchg
and
cli
lea
aad
adc
bound
sbb
mov
jne
ror
jg
outs
xchg
xchg
fild
test
push
in
xchg
sub
loope
ss
mov
jb
xor
nop
test
mov
and
pop
mov
retf
mov
repz
jle
in
popf
cmp
shl
xlat
(bad)
add
adc
cmps
cs
repz
xchg
arpl
push
call
mov
pop
cmps
and
xor
xchg
inc
push
push
repnz
sub
xchg
mov
inc
sbb
and
fst
neg
addr16
mov
mov
mov
xchg
and
lods
nop
int3
xchg
adc
stos
push
fisub
cmps
fldcw
push
pop
jbe
inc
adc
cdq
cwde
nop
fisttp
mov
mov
push
mov
or
das
push
pop
adc
dec
adc
test
xchg
cmp
jno
push
jbe
in
rcr
jmp
pusha
cdq
and
dec
mov
push
mov
and
xchg
sbb
cmp
data16
repz
mov
pop
int3
out
out
push
and
xchg
cmp
push
sub
repz
cmp
xchg
jge
fimul
mov
jl
inc
in
cli
cmp
repz
dec
or
iret
aaa
mov
data16
push
popa
arpl
cmp
bound
outs
sub
aaa
adc
shl
lahf
sub
imul
pushf
mov
leave
repnz
push
arpl
mov
fcomp
push
cmp
out
fidivr
popf
(bad)
fisttp
mov
mov
nop
dec
adc
shl
mov
cmp
xor
dec
mov
call
cmp
cmp
cmp
adc
pop
mov
arpl
push
or
movs
dec
cs
xor
cmps
dec
jmp
push
jo
push
outs
xlat
jns
xor
lea
sbb
push
not
add
or
popf
(bad)
xor
push
(bad)
and
push
sbb
jl
sbb
out
popa
push
stos
mov
sub
add
xchg
imul
dec
adc
mov
cmp
cmps
das
cmp
dec
inc
or
push
lea
stos
mov
jne
add
add
dec
lahf
and
stos
test
push
lods
mov
xlat
pop
add
xchg
jbe
mov
shl
mov
(bad)
inc
pop
xchg
stos
scas
xchg
cwde
adc
jno
rcl
mov
jo
xor
push
pop
push
pusha
movs
in
add
mov
inc
jecxz
dec
ror
adc
mov
mov
mov
js
mov
mov
sbb
mov
or
xchg
mov
sub
out
les
sbb
xor
jbe
push
jb
pusha
dec
test
push
shr
ficomp
sub
sbb
sub
dec
or
enter
dec
dec
mov
aam
ss
(bad)
jbe
test
or
xor
add
dec
mov
pop
iret
jne
xchg
out
or
and
lods
call
shr
pop
pusha
hlt
data16
in
or
adc
mov
cmp
inc
mov
movs
neg
lods
(bad)
icebp
add
inc
sub
jnp
scas
xor
outs
pop
mov
xchg
push
daa
movs
call
cmp
scas
lahf
mov
sahf
lahf
jl
retf
(bad)
stos
pop
mov
test
out
adc
inc
sbb
jmp
leave
jmp
mul
jns
mov
test
aas
call
sti
cmc
out
test
mov
leave
fiadd
sub
mov
js
mov
mov
ds
dec
pop
mul
and
mov
push
xchg
rol
stos
mov
adc
call
sti
push
cmp
(bad)
ins
daa
rol
jbe
xor
and
xor
add
cmp
mov
loopne
dec
jl
stos
jns
daa
imul
xlat
lahf
mov
stos
ds
jle
jns
test
dec
ja
mov
(bad)
cmp
sbb
mov
neg
push
sti
sbb
ja
or
es
sub
xor
inc
or
inc
mov
jp
iret
ja
adc
leave
push
sbb
xor
jns
mov
iret
(bad)
sub
sub
xor
pop
cmp
sub
je
cdq
inc
mov
xor
xchg
inc
daa
sub
or
mov
and
in
js
cmp
shr
push
setne
cmps
popf
push
adc
mov
xchg
lods
data16
sti
addr16
adc
mov
or
fwait
lods
add
or
cld
jb
push
(bad)
mov
xchg
sbb
movs
xchg
mov
movs
add
call
jmp
pop
add
lds
jno
dec
sub
imul
jge
fnstsw
cmc
inc
push
fnsave
push
daa
push
ja
and
mov
inc
imul
clc
in
leave
jg
sub
pop
ret
test
dec
xor
xor
ja
std
xor
repnz
mov
scas
cmps
lea
sar
xchg
nop
cwde
adc
jmp
add
cli
add
(bad)
and
test
das
fld
jb
xor
and
mov
add
inc
jp
ins
push
fadd
sub
sbb
sub
into
adc
sar
(bad)
(bad)
or
mov
ins
cmp
call
ds
mov
iret
popf
daa
arpl
jnp
repnz
gs
mov
(bad)
out
je
push
and
adc
and
xchg
xor
leave
xlat
mov
dec
push
repnz
fs
aam
mov
jb
cmp
aam
jmp
addr16
jnp
mov
test
fwait
or
enter
mov
sub
xchg
dec
(bad)
das
xor
repz
jmp
and
sbb
push
pusha
add
fst
push
add
mov
(bad)
loope
mov
sbb
mov
imul
(bad)
or
jecxz
mov
mov
xor
and
in
(bad)
sub
sub
xor
test
(bad)
adc
lods
and
and
mov
push
(bad)
scas
xlat
xor
xor
les
xor
mov
push
mov
mov
js
mov
(bad)
adc
adc
ror
jo
or
sub
pop
mov
js
adc
push
test
cmp
or
xchg
and
mov
test
adc
add
in
and
and
add
pop
dec
aas
cmp
add
fcom
data16
jne
ss
and
cmc
push
jmp
ret
retf
cmp
mov
or
sub
sti
test
mov
lea
aas
fdiv
ret
jbe
pop
test
inc
jmp
xchg
xchg
iret
mov
jecxz
icebp
jle
sub
retf
push
ins
xchg
ins
(bad)
int
mov
inc
mov
sti
push
jmp
gs
pop
fnstcw
push
icebp
xchg
jno
pop
jo
xchg
call
mov
cmps
add
in
push
jge
pop
sbb
sbb
out
or
es
inc
pop
sbb
xor
or
imul
int
loop
and
test
cwde
(bad)
mov
lods
mov
stc
loop
loopne
lahf
test
and
xor
es
add
xchg
leave
std
pop
lahf
mov
pop
xor
fs
cmp
or
xchg
movs
inc
pop
pop
mov
xor
mov
loopne
in
lea
jle
scas
fcom
idiv
movs
js
mov
jmp
in
add
or
sub
std
and
mov
mov
adc
lahf
enter
xchg
scas
and
out
scas
in
pop
into
enter
out
adc
in
fisub
mov
and
div
xor
loopne
test
fsub
in
(bad)
lock
das
pusha
scas
scas
jg
jae
or
(bad)
cmps
aas
in
sub
call
outs
and
xchg
xchg
jns
ss
jle
xchg
in
rol
ss
sub
mov
dec
int
outs
fdivr
in
mov
int3
div
cmp
sti
and
(bad)
adc
test
ret
xor
std
sbb
pop
and
inc
in
shl
jne
fs
inc
cmps
inc
fwait
sub
les
sbb
or
addr16
call
bound
pusha
icebp
fidivr
rcr
cmps
mov
sub
ins
or
push
jecxz
out
add
outs
jmp
and
outs
aam
outs
out
lods
pusha
mov
add
mov
cli
sub
adc
mov
push
cwde
stos
inc
pop
out
push
fwait
loopne
sbb
sub
mov
aaa
xchg
movs
retf
leave
mov
jmp
sbb
cs
in
or
push
dec
enter
mov
pop
stc
pusha
jbe
sbb
sahf
mov
adc
(bad)
jle
test
push
add
call
les
xchg
cmps
lods
sub
mov
test
aaa
push
pushf
pop
pop
xchg
dec
mov
sub
imul
mov
in
mov
sahf
cmp
pop
gs
jmp
xlat
sbb
xchg
ins
fs
cmp
push
sub
ds
mov
sub
(bad)
fimul
jmp
sub
jge
adc
cmp
out
pop
jb
loopne
or
das
jae
lds
out
sar
sub
leave
push
daa
sbb
jl
add
nop
cmps
mov
test
mov
daa
fsubr
(bad)
xchg
adc
stos
lock
call
cmp
mov
shr
jg
fadd
sub
pop
std
push
and
sub
adc
sbb
pop
xchg
inc
sub
pop
call
lods
jne
mov
inc
jge
inc
js
fs
inc
sbb
lods
lea
leave
jp
outs
adc
xchg
cmp
fidiv
sti
imul
and
ror
ret
imul
jl
xchg
xchg
sbb
cmc
leave
retf
and
fs
jo
arpl
jnp
sub
add
pcmpgtw
gs
pop
xchg
sar
mov
rcl
test
das
leave
hlt
sub
out
mov
in
lea
ror
sub
mov
push
and
pop
xor
js
jg
xchg
pop
ins
add
inc
cli
in
xchg
clc
push
popf
jp
outs
lods
sti
rcl
rol
ja
mov
mov
clc
mov
or
das
push
inc
dec
pop
mov
dec
in
retf
mul
pusha
repz
adc
mov
mov
add
xchg
cwde
rcl
inc
lods
bound
mov
dec
or
leave
adc
leave
push
adc
push
cmc
data16
mov
and
jle
jnp
dec
retf
mov
int3
push
fsubr
sbb
jb
jge
(bad)
mov
pop
imul
lds
pop
(bad)
call
sub
outs
shl
lahf
jg
loopne
mov
xchg
std
jmp
sub
out
mov
push
addr16
rol
lea
xor
xlat
xchg
adc
sub
inc
call
enter
xchg
nop
test
add
lods
aam
xor
aam
mov
xor
int3
add
loop
cli
push
xchg
mov
inc
push
push
xor
pop
icebp
loope
sub
dec
inc
pop
cmp
jmp
mov
or
(bad)
and
ds
inc
test
iret
rol
movs
xchg
adc
mov
loopne
lock
aas
xchg
mov
jp
and
pop
pop
cdq
jmp
inc
data16
jge
jle
cmp
mov
in
popw
fild
add
pop
push
nop
add
enter
ins
mov
loopne
push
sbb
cmp
call
mov
aas
frstor
push
adc
ins
push
push
mov
loopne
xor
rcr
stos
mov
(bad)
scas
out
jle
ja
inc
sub
stc
repz
bound
mov
loop
xor
mov
inc
jb
mov
jbe
cli
ss
aaa
push
ret
or
push
jge
mov
test
xor
jae
jnp
and
popa
adc
loope
popa
pop
xchg
iret
arpl
retf
sahf
aad
stos
into
and
and
sub
jno
rcr
stos
das
ret
adc
clc
sbb
shr
lods
sti
shl
fdivr
adc
xor
dec
sub
movs
jb
repnz
jmp
push
jmp
dec
inc
jle
enter
stos
shl
icebp
(bad)
jl
mov
(bad)
out
jp
out
in
enter
jne
cmp
xor
aad
lds
popa
mov
mul
lods
adc
add
pop
and
aad
sub
jmp
ja
nop
jo
adc
shr
xor
fidiv
aas
popa
ds
sbb
mov
cmps
inc
jmp
pop
mov
lahf
xor
lock
cs
int
and
daa
lea
(bad)
jl
test
js
arpl
inc
pop
pusha
popf
sbb
mov
pop
sub
ins
jnp
pop
rcr
scas
es
dec
icebp
out
add
push
(bad)
mov
rep
sub
jns
or
jns
jle
add
repnz
mov
adc
lods
je
pop
mov
jecxz
sub
push
mov
std
mov
iret
pop
ja
jns
stos
sub
add
push
pop
mov
(bad)
sbb
jge
fisttp
lock
xor
cwde
leave
(bad)
stc
lods
je
ins
fild
je
ja
xor
loopne
push
and
jg
es
sbb
repnz
or
push
loop
movs
sbb
sub
scas
mov
(bad)
push
cmp
mov
xchg
fiadd
mov
xor
sahf
loop
add
ret
jae
pop
cli
add
loopne
imul
jg
pop
dec
cmp
ja
add
push
(bad)
cmp
cld
dec
daa
into
and
mov
pop
cwde
stos
or
not
jno
aas
stos
xchg
jne
ja
sbb
fsub
sbb
mov
std
lods
addr16
out
and
xor
fist
sub
iret
iret
dec
mov
jl
test
adc
push
jb
lahf
adc
enter
xchg
out
shl
dec
fldenv
mov
lods
xor
fdiv
sahf
and
sbb
mov
clc
jmp
mov
loope
leave
cmps
pop
adc
and
dec
popf
mov
pusha
loopne
lods
cld
mov
fidivr
out
div
(bad)
test
sti
cli
jg
icebp
add
pushf
(bad)
push
push
sbb
jo
imul
push
ret
jl
mov
add
cmp
int
aas
mov
pop
sub
and
push
dec
sub
popf
lds
movs
stos
fwait
(bad)
jmp
xlat
(bad)
xor
sub
adc
movs
xchg
mov
les
cmp
punpckldq
xor
push
sub
frstor
jmp
push
jae
xor
vzeroupper
aad
sub
ja
pushf
leave
dec
std
lock
push
push
dec
mov
cmp
inc
sbb
stc
fidivr
and
cli
adc
push
shr
aaa
mov
dec
or
out
jo
hlt
xor
and
dec
xchg
jmp
pop
shl
push
call
mov
aad
dec
mov
mov
xchg
sahf
add
repz
lods
inc
dec
xchg
or
cmps
inc
sub
icebp
cwde
or
or
ins
inc
rep
stos
cmp
jns
sbb
mov
jb
rcr
xor
fld
jo
in
inc
(bad)
inc
stos
test
sbb
cmp
outs
mov
sti
xchg
sbb
lds
push
sbb
(bad)
adc
dec
imul
push
pop
cmp
push
sbb
in
loope
ins
in
pop
xor
mov
cmp
mov
das
out
and
das
(bad)
imul
cmps
test
xchg
adc
(bad)
cmp
jmp
and
pop
xchg
pop
mov
cli
sahf
mov
imul
lock
out
ds
iret
jl
out
xchg
jns
xor
inc
mov
clc
hlt
dec
sub
push
mov
or
xor
sub
mov
fiadd
sbb
or
xchg
lods
jmp
adc
sub
jbe
jo
xchg
pop
sbb
repnz
cmp
fnstsw
mov
add
jle
push
cs
sub
cs
das
int3
(bad)
aas
mov
mov
movs
imul
cmps
movs
daa
jge
jmp
frstor
lock
dec
mov
cmps
popf
cwde
out
mov
imul
(bad)
mov
sbb
jbe
jo
stos
jnp
out
outs
repz
xchg
add
xchg
aas
adc
sub
(bad)
(bad)
in
push
or
lods
fdivr
mov
out
movs
ins
mov
push
mov
cmc
out
jo
push
mov
sub
packuswb
mov
push
out
jle
sbb
sbb
add
ins
jmp
cmp
xor
xor
jecxz
cmp
sbb
loop
add
and
sbb
and
jb
add
fnstsw
cli
inc
pop
daa
mov
mov
imul
popf
jge
xchg
mov
jne
rcr
lock
repnz
loopne
sub
daa
or
fist
sahf
mov
jae
imul
xor
mov
icebp
sub
sbb
outs
pop
push
fdivp
in
outs
xlat
sar
scas
inc
ins
inc
sub
sbb
hlt
cld
fmul
mov
in
fidiv
sub
or
jmp
call
and
pop
dec
mov
jb
xchg
push
pop
std
emms
dec
and
sbb
xchg
jl
(bad)
and
mov
sbb
stc
mov
ds
out
ss
fcomi
aad
iret
hlt
rol
dec
std
inc
mov
leave
les
iret
jmp
(bad)
pop
mov
jg
mov
rcl
jne
mov
mov
out
and
mov
inc
out
sbb
cmp
xchg
gs
jge
mov
icebp
or
xbegin
mov
movs
sti
sub
popa
dec
push
pop
push
dec
xor
push
xchg
leave
stos
sub
shl
rol
test
xchg
lahf
aam
add
and
js
inc
ins
jecxz
div
iret
jecxz
jns
js
mov
mov
cmp
(bad)
push
scas
xor
and
fisubr
push
jb
jno
xlat
mov
fcom
pop
aaa
add
mov
ja
js
xlat
jg
dec
imul
in
ret
jno
mov
push
ins
xor
or
into
xchg
pop
sub
movs
mov
movs
das
mov
cmp
sbb
retf
lock
mov
mov
jae
loop
xor
outs
mov
test
loope
push
mov
jo
outs
ja
cmc
jae
cmp
arpl
mov
pop
ds
daa
or
sti
fnsave
ins
dec
mov
ins
add
pop
mov
addr16
arpl
jmp
retf
les
mov
pop
div
std
test
dec
dec
loop
out
sahf
repz
mov
dec
mov
mov
inc
adc
fimul
and
out
adc
mov
std
es
div
sbb
push
inc
stos
arpl
inc
hlt
inc
test
das
aas
leave
ins
ins
or
cmp
pushf
mov
push
neg
xor
movs
push
mov
jle
cmp
cmp
(bad)
jp
adc
mov
pop
or
pop
outs
xchg
stos
adc
pop
and
sbb
cmp
pop
pushf
add
pop
in
cs
mov
je
add
xchg
mov
fcomp
jge
push
fsub
leave
mov
jmp
idiv
out
imul
pop
loop
mov
(bad)
sti
rcr
pop
ja
mov
pop
cwde
out
mov
xchg
fldcw
loope
mov
out
push
sbb
repnz
in
cmps
out
icebp
or
mov
lods
ss
push
jmp
adc
push
es
dec
cdq
and
jbe
sbb
sub
mov
xor
inc
dec
cli
mov
mov
stc
scas
jnp
leave
imul
aaa
mov
out
push
in
pop
sub
xor
das
out
addr16
sahf
jbe
sti
sub
fcomip
push
pushf
cmps
sbb
xor
add
popf
pop
(bad)
jo
arpl
mov
xlat
mov
adc
xchg
imul
in
sbb
inc
ins
or
or
mov
outs
test
xor
push
push
lea
mov
les
cmp
fld
(bad)
dec
xor
es
xchg
jbe
jmp
sub
fcom
pop
sub
cmps
jne
das
and
ss
arpl
out
stc
xchg
jmp
xor
or
imul
jecxz
xchg
sti
jae
inc
ds
cmps
ja
inc
cmc
inc
push
js
or
ss
int
jno
jmp
cld
jb
outs
aas
push
int
jl
cmps
in
lds
(bad)
sbb
jmp
in
fwait
sub
sbb
jne
sar
cmp
mov
adc
xor
inc
mov
lock
out
adc
mov
add
lock
pop
xor
aaa
jne
push
mov
mov
pop
pop
test
jl
arpl
push
cmps
icebp
adc
jno
or
out
aad
xchg
shl
or
fs
test
leave
loopne
loope
sub
fst
(bad)
out
and
push
movs
jnp
mov
out
dec
retf
lock
or
out
mov
dec
xor
std
or
lahf
test
in
ror
jbe
ins
push
shl
sub
and
inc
sbb
dec
lock
sub
out
inc
js
adc
shr
sbb
mov
ja
ror
pop
mov
jp
jmp
mov
mov
sbb
jl
fwait
pop
xlat
pop
fild
pop
in
add
and
imul
ja
mov
mov
xor
cdq
pushf
mov
retf
retf
mov
xchg
and
pop
ins
fdivr
mov
lods
sub
or
out
mov
les
retf
sub
cmps
jnp
jge
iret
or
ds
push
sub
aad
cld
int3
(bad)
push
imul
sub
std
inc
jmp
mov
push
inc
inc
pop
push
dec
les
ror
inc
push
adc
cmp
ja
repnz
test
mov
sub
add
dec
mov
cs
adc
shl
push
call
popw
scas
or
aam
mov
addr16
cli
lahf
cmps
jecxz
sbb
dec
push
fwait
adc
je
mov
enter
dec
sbb
icebp
lods
scas
sbb
dec
xor
sbb
scas
hlt
sub
inc
jle
jl
lahf
cmps
bound
mov
add
outs
mov
inc
mov
add
scas
dec
pop
dec
nop
sar
cmc
mov
mov
aam
mov
in
das
push
pop
and
sub
cmp
aam
inc
jecxz
(bad)
pop
dec
cld
adc
or
and
add
arpl
std
fsub
(bad)
mov
outs
rol
and
cwde
xchg
sbb
xor
ret
ins
jb
stc
pop
mov
leave
sub
popf
jle
fistp
xchg
rcr
or
pop
jecxz
jmp
push
mov
ins
xor
nop
push
sar
xor
mov
popa
and
xchg
xlat
and
mov
loop
pop
dec
or
xchg
jne
xchg
xchg
push
rcr
mov
jmp
cmp
cld
or
(bad)
pop
and
or
push
sbb
ret
in
cdq
push
stc
jns
fsubrp
push
add
push
jne
imul
ins
or
cmp
inc
cmp
in
in
push
std
ror
push
xchg
movs
jp
test
test
xor
mov
mov
aas
adc
xor
mov
icebp
sbb
and
mov
jno
xchg
stos
ficomp
xchg
sub
(bad)
jns
sbb
ins
stos
mov
pop
pop
test
adc
xor
pop
int
and
cwde
loopne
inc
or
mov
jbe
pop
mov
fisub
outs
xor
pop
jmp
enter
(bad)
loope
ret
(bad)
lock
add
adc
rol
repnz
loope
or
loopne
jb
icebp
push
enter
outs
repnz
repnz
inc
jl
call
aas
(bad)
adc
inc
ror
xor
fistp
push
int
inc
ror
cmp
dec
daa
sbb
repz
(bad)
hlt
dec
jns
sub
xor
retf
test
push
push
je
jp
sub
jg
sti
inc
repz
mov
and
cli
mov
push
push
jmp
cmc
in
jmp
(bad)
jl
dec
sbb
test
cmps
jmp
push
mov
div
hlt
inc
push
repz
call
dec
xchg
ds
and
leave
add
mov
lods
popf
mov
jne
xor
ret
out
or
loopne
fadd
arpl
push
xchg
mov
in
ja
in
test
(bad)
add
or
xor
or
scas
add
push
cmp
movs
dec
jno
lods
xchg
cmp
cld
(bad)
repnz
aam
pop
xor
aas
ds
pop
stos
pop
xchg
outs
(bad)
stos
out
xchg
adc
pop
xor
stos
in
sbb
adc
iret
mov
cmc
(bad)
rol
cmp
fdivr
inc
jno
jl
mov
add
mov
mov
lds
stos
and
lods
or
dec
cwde
lods
push
mov
call
sub
shr
jge
jg
movs
jb
(bad)
mov
fdivr
cmp
pusha
mov
adc
jae
loopne
or
cmps
imul
mov
jp
xchg
sbb
jnp
test
ret
or
cld
fimul
test
fadd
nop
call
push
pop
dec
push
int3
xlat
dec
scas
xchg
(bad)
addr16
dec
je
(bad)
mov
xor
imul
(bad)
call
mov
add
data16
sub
sub
push
lock
je
dec
in
fdivr
cmp
cwde
in
cmp
sub
jmp
je
adc
ret
adc
push
fst
sbb
addr16
mov
in
(bad)
(bad)
es
xchg
cmps
iret
js
gs
push
pop
jmp
ror
xchg
jmp
adc
inc
sub
push
inc
mov
jle
into
xchg
xchg
and
out
or
loop
push
adc
jns
jmp
add
jmp
pop
sub
fsincos
dec
cmp
jmp
pop
int
imul
xchg
push
fstp
mov
pop
out
shufps
scas
adc
xor
popa
lahf
stos
mov
jmp
es
push
loopne
mov
or
iret
jmp
dec
jns
popf
(bad)
xchg
scas
adc
(bad)
and
cmp
xor
mov
cmp
loop
mov
adc
jp
jmp
pushf
push
retf
xchg
cdq
sahf
cmp
mov
aam
cdq
popa
fdiv
xchg
fcom
pop
and
mov
iret
adc
aad
imul
inc
popf
aas
loop
push
jmp
fadd
ins
mov
pop
jmp
push
cmp
inc
jge
pusha
jno
addr16
jg
loop
sub
adc
jmp
mov
shl
jmp
pop
push
cmps
das
sub
shl
push
les
mov
sub
call
push
push
push
fcmovnbe
mov
mov
and
mov
mov
leave
aas
mov
iret
aaa
outs
push
jb
stc
adc
leave
scas
(bad)
mov
rcl
pop
push
ror
xchg
sub
test
jg
mov
scas
daa
outs
out
stc
sub
cmps
fbld
shl
stos
add
in
stos
push
mov
outs
adc
dec
leave
push
in
ins
dec
sar
and
ds
jns
mov
mov
fcomip
mov
leave
jge
cmps
dec
pop
ins
std
(bad)
jne
sbb
mov
pop
xchg
hlt
div
lahf
mov
push
movs
mov
ins
test
and
pop
ds
shl
out
adc
sysret
clc
fldenv
shr
jo
icebp
cmp
cld
pop
xchg
hlt
daa
sbb
mov
inc
(bad)
movups
sub
or
or
jae
aad
test
cmp
(bad)
mov
xchg
mov
mov
scas
ins
push
popf
scas
xor
jae
jecxz
fucomp
or
(bad)
addr16
xor
mov
mov
loopne
push
xchg
out
rcl
(bad)
adc
sbb
push
bswap
into
(bad)
inc
mov
test
pop
inc
pop
dec
push
repz
popf
loopne
cvtps2pd
mov
cli
xchg
fidiv
out
stc
or
(bad)
pop
enter
jge
sahf
mov
lods
test
and
pop
mov
sub
movs
dec
and
mov
pop
cmps
mov
push
lea
jge
retf
arpl
(bad)
jle
cli
in
dec
stos
lods
mov
xor
imul
pop
bound
mov
bound
out
stos
stos
int
fsub
push
add
out
hlt
add
xlat
xchg
cmp
retf
(bad)
pop
call
hlt
icebp
call
ficom
arpl
pop
pop
sbb
sub
jno
xchg
mov
(bad)
mov
sub
pop
mov
push
lock
xchg
out
cli
jecxz
call
pop
dec
xor
scas
in
mov
xchg
jecxz
ror
push
mov
cld
pop
scas
or
add
and
call
mov
int
add
fidiv
mov
pop
push
shl
scas
mov
or
xor
(bad)
adc
aas
pop
ja
outs
push
and
inc
mov
pop
movs
out
pop
scas
loope
xor
fadd
sti
sub
mov
or
push
std
xchg
or
into
push
fsub
pop
imul
mov
or
xchg
inc
(bad)
call
shl
xchg
sub
push
xchg
ds
xchg
pop
cwde
xor
lods
xlat
jl
adc
enter
xchg
add
js
mov
popa
loopne
and
mov
inc
inc
in
nop
(bad)
cdq
jmp
xchg
xchg
cmp
sub
dec
dec
retf
lods
sbb
test
inc
cmp
iret
test
xchg
cmovp
or
nop
mov
retf
xor
mov
mov
and
pop
(bad)
leave
ins
inc
sbb
outs
into
jns
mov
mov
popf
fist
xchg
inc
jnp
out
rcr
mov
fwait
retf
mov
nop
in
fdivr
aam
pop
xor
iret
mov
test
outs
inc
inc
push
(bad)
mov
mov
sub
jb
xor
popa
sbb
fisubr
push
add
pop
iret
adc
mov
sbb
outs
mov
or
je
pop
adc
(bad)
fcom
add
out
mov
(bad)
cdq
xor
dec
pop
inc
pop
sub
(bad)
aad
aas
mov
xchg
and
fcomp
lods
mov
nop
add
jle
sub
daa
jae
mov
outs
jbe
mov
jge
add
stos
fsubr
cmp
in
mov
ss
cs
cmp
movs
xor
xor
push
mov
xchg
mov
xchg
pop
js
retf
mov
idiv
adc
jg
jl
nop
sbb
das
push
leave
(bad)
and
pushf
enter
fcom
xor
(bad)
bound
inc
dec
pop
dec
xchg
add
out
popa
data16
pop
stc
push
jge
pop
jno
(bad)
xchg
mov
bound
stos
fisubr
push
pop
ret
loop
(bad)
cmp
dec
xor
jns
push
and
les
mov
nop
pop
in
test
jecxz
pop
jl
or
fmul
js
aas
mov
add
pop
call
repz
add
mov
pop
pop
xor
in
mov
sti
jmp
xor
add
xor
push
sahf
rcl
sub
idiv
or
xor
or
fisttp
or
jne
js
mov
ret
addr16
mov
in
pop
cli
mov
iret
sub
lds
sbb
mov
cmp
mov
xor
dec
pop
cmc
add
arpl
movsx
sub
ret
fsubr
sub
cmps
cwde
jbe
fidiv
mov
mov
bound
mov
ret
and
ins
into
aam
sbb
cmp
addr16
inc
test
sbb
aaa
rol
and
push
test
pushf
dec
sti
xchg
fcmovu
test
mov
mul
imul
push
ss
mov
push
lods
and
pop
int
lahf
mov
jmp
repnz
in
repnz
fistp
pop
jge
out
dec
push
mov
mov
mov
sbb
ror
neg
and
int
mov
inc
or
cmp
repnz
inc
mov
jbe
out
pop
sahf
rol
rol
call
push
mov
popf
inc
scas
xchg
or
add
cmp
scas
fstp
cmps
sbb
sub
mov
loope
shl
pop
push
ret
inc
call
ins
mov
and
sub
push
div
imul
into
rol
pop
and
sbb
adc
mov
mov
test
sbb
inc
(bad)
(bad)
ret
ds
cdq
jge
and
mov
lods
ins
inc
mov
cwde
xor
pop
int
test
push
movs
stc
or
jo
mov
ins
jle
stos
jns
addr16
dec
mov
xchg
jge
pop
idiv
pop
add
vmovlps
movs
adc
push
sahf
test
arpl
scas
mov
jbe
and
sbb
int
add
add
sahf
push
mov
jmp
out
gs
mov
adc
push
inc
add
adc
das
and
clc
sbb
jns
push
inc
(bad)
push
jg
mov
test
scas
jl
jmp
fisub
mov
or
ins
pop
repnz
mov
cwde
loope
push
sbb
shl
in
xchg
jge
test
jmp
neg
push
push
aam
or
(bad)
cmps
add
pop
mov
fmul
int3
pop
int
jmp
inc
xchg
mov
out
inc
aas
cmc
inc
jnp
movs
out
inc
jmp
push
mov
aad
push
mov
jmp
add
pop
push
ficom
shl
pop
sti
mov
mov
inc
xchg
fwait
lea
jecxz
xchg
fisttp
and
daa
pop
or
dec
addr16
enter
jmp
pop
mov
es
ins
and
fst
xchg
pop
and
push
jmp
sbb
pop
and
mov
xchg
cmp
addr16
fsub
cwde
ror
adc
stos
push
fsub
sub
sub
xchg
xchg
mov
lock
push
imul
icebp
sbb
test
sbb
mov
sbb
sub
(bad)
sbb
jmp
jg
pop
xor
(bad)
mov
aam
(bad)
les
dec
fistp
data16
inc
and
add
inc
cmp
add
mov
cdq
sar
cmc
pop
or
cdq
fnstenv
mov
repnz
cmp
xchg
xchg
in
div
sub
xchg
loop
fsubr
call
push
repz
jp
push
lods
jp
aas
shl
pop
lahf
dec
xor
(bad)
int
stc
dec
and
jp
or
mul
popa
dec
test
stc
inc
inc
std
mov
mov
mov
xor
out
dec
je
pushf
sar
jmp
mov
stos
ret
sbb
push
inc
push
loop
sub
and
jg
adc
stc
mov
pop
pusha
fnstcw
test
lea
loope
dec
cmps
dec
jnp
in
jle
and
pop
add
xor
(bad)
shr
pop
ret
loop
in
retf
neg
in
push
jae
lds
fwait
inc
psubq
add
sub
adc
sbb
aam
pushf
ds
xchg
fimul
mov
out
push
jl
or
cmp
inc
and
ss
pop
cmp
mov
punpcklwd
imul
sub
add
ja
xor
or
sub
sub
iret
fdivr
leave
into
loope
jns
dec
sahf
pop
mov
fnsave
mov
jns
lea
out
jp
sar
sub
inc
sub
mov
push
dec
sbb
mov
mov
add
adc
inc
ror
ret
jmp
xor
pop
jb
mov
stos
sar
ja
sub
into
xor
iret
sub
cmp
repz
out
call
sub
in
int3
inc
loopne
sbb
pop
inc
and
lods
popf
inc
fild
leave
dec
scas
hlt
xchg
cmp
xchg
mov
pop
sub
movs
pop
call
inc
ds
lds
(bad)
push
push
sahf
lock
xchg
outs
das
inc
dec
in
sub
mov
or
(bad)
js
or
out
hlt
stos
jb
push
test
add
push
lea
xchg
call
pop
mov
or
ins
push
stos
or
repnz
sub
cmps
(bad)
lods
mov
pop
sub
xchg
shr
test
jne
les
inc
sbb
push
(bad)
adc
sub
fcmovne
je
mov
push
in
push
jae
adc
ss
fmul
add
push
or
retf
clc
push
ret
rcl
hlt
add
sbb
repz
and
inc
xor
hlt
pop
mov
and
mov
test
icebp
(bad)
jb
mov
sbb
adc
dec
inc
cs
mov
jmp
xchg
push
dec
(bad)
fadd
retf
cvttps2pi
add
scas
dec
ja
pop
lahf
or
(bad)
sbb
sub
in
rol
aad
mov
cmp
mov
sbb
aam
mov
pushf
jl
mov
mov
loop
pop
cmps
and
arpl
add
fcmovb
pop
test
(bad)
sbb
inc
pop
fwait
nop
in
and
in
or
arpl
(bad)
mov
ror
jb
add
xchg
dec
cld
mov
push
mov
lea
aad
in
and
push
sub
add
pop
dec
sbb
cdq
rol
xchg
mov
push
test
or
cmps
xchg
xor
loopne
mov
push
adc
fist
adc
jmp
add
or
or
pop
stos
nop
mov
adc
and
pop
dec
fld
and
std
movs
(bad)
and
inc
sbb
dec
pop
aam
xor
rcl
mov
jle
je
pop
dec
mov
popa
retf
cmps
push
adc
mov
aad
xor
add
inc
arpl
dec
xchg
inc
inc
mov
mov
pop
inc
aas
ffree
sar
mov
test
add
imul
loope
fadd
jo
fcom
cmp
push
xor
call
inc
ds
xchg
xor
mov
jo
in
outs
test
add
test
cmps
jp
lock
mov
test
test
fimul
jge
pop
mov
sub
mov
adc
inc
rcr
add
sbb
ret
inc
clc
pop
movs
pop
aas
fst
fild
out
sbb
adc
movlps
inc
add
push
ss
sbb
and
pop
xor
rcl
lock
mov
adc
cmp
out
inc
popf
into
(bad)
js
xor
dec
sub
xchg
pop
rol
cs
lahf
add
lods
in
or
mov
out
pop
or
xor
sbb
data16
enter
cmp
stos
test
or
mov
pop
(bad)
jmp
adc
fadd
je
push
dec
mov
aas
loopne
aad
pop
sbb
cmp
cmp
push
iret
call
enter
pop
cmp
sub
mov
push
ret
or
stos
push
pop
cmc
or
cdq
outs
cmps
imul
push
imul
jnp
mov
pop
add
pop
cmc
test
inc
cmp
enter
rol
ins
pushf
icebp
pop
and
imul
mov
sub
inc
sub
mov
push
push
xor
hlt
jb
cmp
aad
shl
mov
adc
movs
aaa
sub
mov
xor
in
mov
ins
movs
gs
xchg
inc
push
or
xchg
jne
int
fild
dec
out
cmp
les
xchg
fcom
mov
or
add
dec
adc
mov
test
shl
ds
in
popf
jno
stc
add
sub
add
inc
aad
xchg
add
stc
arpl
cwde
outs
xchg
adc
jae
jne
imul
push
jmp
cmp
jbe
ret
call
les
xor
test
and
call
sub
push
jbe
and
jecxz
sbb
out
mov
or
sbb
mov
mov
pushf
sbb
fcomp
mov
shl
add
mov
aad
xchg
xor
sub
push
cmp
jnp
cmp
add
add
loope
inc
dec
ins
movs
cli
add
jmp
aaa
sar
ds
sti
lea
pop
sbb
(bad)
sbb
fimul
mov
outs
push
ja
sbb
pop
cmp
push
pop
jb
and
fldl2t
push
nop
lods
inc
ins
sub
and
enter
cmc
test
icebp
fild
jmp
sub
mov
dec
dec
sub
sub
mov
and
xor
pop
cmp
adc
sbb
sbb
inc
mov
jmp
xchg
ins
lds
push
test
adc
fcmovne
xor
pusha
ins
pop
cmp
push
pop
push
ins
or
jae
ret
shr
jp
inc
mov
mov
pop
mov
pop
fsubr
into
mov
jmp
fwait
pushf
xor
and
std
adc
ins
sub
in
jge
imul
test
(bad)
pop
(bad)
jl
sahf
or
adc
pop
xor
fwait
clc
mov
jp
sub
lods
outs
movs
or
les
adc
sub
jp
jecxz
movs
ror
adc
iret
rol
sbb
sbb
mov
push
fisubr
dec
push
sub
test
in
sahf
cmp
adc
arpl
jmp
mov
xor
mov
scas
call
add
popa
mov
(bad)
push
loop
sub
sbb
lods
push
mov
inc
jbe
push
aaa
imul
enter
mov
dec
mov
push
dec
xchg
lods
(bad)
or
or
leave
jmp
cdq
add
imul
and
jnp
xor
sti
xor
mov
jbe
(bad)
sbb
sbb
pop
dec
dec
sub
dec
adc
jae
fistp
and
sub
xchg
xchg
sub
es
inc
inc
ret
arpl
out
gs
lock
or
sbb
lods
mov
popf
scas
call
and
in
sbb
data16
and
aam
add
xchg
stos
fist
outs
xor
pop
jb
div
shl
js
inc
into
test
ds
xor
mov
outs
xor
ret
inc
out
hlt
(bad)
jnp
jecxz
sub
pop
aaa
lock
cmp
or
stos
(bad)
cmp
je
dec
inc
mov
cmp
sub
les
pop
push
jmp
pop
jno
sub
rcr
inc
adc
sub
dec
mov
add
mov
push
pop
add
cmp
sub
xchg
sub
xchg
stos
leave
pop
push
iret
outs
sub
ins
dec
mov
js
xor
jmp
fadd
cmp
sub
movs
fs
(bad)
fdiv
loopne
pop
int3
inc
mov
movs
leave
and
jno
sub
ret
test
inc
cmc
push
imul
lods
cmps
ror
mov
ds
dec
fsubr
jmp
(bad)
sbb
enter
push
dec
cs
or
icebp
ins
(bad)
jecxz
jbe
arpl
xor
pop
push
jb
sbb
sahf
ss
dec
xor
jmp
cdq
test
or
pop
adc
ret
and
adc
jbe
push
or
(bad)
and
jb
push
nop
popa
fwait
rcl
cmp
xchg
enter
sbb
jle
int3
cdq
xchg
adc
fwait
pop
xchg
cmp
xlat
mul
movsx
fimul
add
lds
adc
cwde
scas
scas
jbe
js
push
cmp
popa
xchg
pop
stos
ins
and
mov
and
leavew
lock
mov
push
mov
enter
fdiv
imul
gs
dec
gs
sbb
cld
jns
out
mov
mov
jge
fistp
fcomi
mov
mov
dec
(bad)
xchg
in
lahf
test
popf
xor
pop
sbb
sbb
bound
lods
(bad)
and
mov
jmp
jg
loopne
shl
xchg
adc
or
mov
cmp
or
std
jmp
ins
dec
mov
leave
stos
adc
repnz
lahf
out
mov
xor
jl
out
push
loop
cmp
lahf
mov
lds
call
add
repnz
adc
in
leave
pop
jp
pop
push
aad
mov
cmp
mov
stc
into
rcl
sbb
xor
mov
inc
jg
and
aas
adc
pop
aas
fcomi
and
pop
sbb
jmp
sub
cmp
ja
mov
aam
push
fbld
and
and
fld
retf
push
and
pop
or
ret
xchg
push
cmps
mov
shl
xchg
scas
ins
lahf
cmp
das
pop
outs
stos
xchg
fnstsw
iret
or
loop
sub
cdq
sub
fst
(bad)
fmul
fld
cwde
dec
cdq
clc
mov
add
xor
dec
xor
sbb
into
fwait
push
dec
dec
pop
dec
cmp
and
sbb
add
and
fistp
dec
or
adc
sbb
sbb
pop
pop
mov
nop
imul
push
or
aam
pop
into
out
(bad)
sti
dec
xchg
sahf
cmp
xchg
mov
cmp
sbb
in
imul
cdq
mov
or
cmp
inc
sbb
pop
inc
xor
ret
fs
shr
sbb
or
sub
mov
inc
mov
pop
jl
fadd
fmul
jl
aad
adc
aaa
fbld
push
je
dec
inc
xor
(bad)
jp
add
and
inc
loopne
daa
cmc
jbe
push
dec
iret
cmp
jmp
push
sbb
popf
std
fdivr
jo
or
leave
rcl
push
dec
or
int
aam
pop
ins
sub
pop
sbb
and
test
in
or
sub
movs
scas
and
rcr
push
(bad)
jns
push
dec
and
lahf
sub
out
add
loopne
ja
in
in
xor
popf
or
gs
sbb
mov
cli
(bad)
mov
mov
imul
(bad)
push
pusha
ins
and
sub
fisubr
ins
add
push
push
retf
pop
xchg
xchg
sbb
data16
mov
xchg
shr
and
push
in
ret
pop
cmp
xchg
je
dec
mov
push
clc
in
ret
aaa
pop
or
mov
dec
ins
or
mov
aad
mov
inc
punpckhdq
inc
nop
imul
inc
(bad)
mov
sti
stc
add
std
fistp
jmp
scas
push
pop
loopne
xchg
lahf
stc
ds
dec
push
stos
jge
or
push
mov
clc
fist
jg
mov
or
ss
int
std
or
mov
jne
mov
adc
cli
and
aam
icebp
inc
movs
add
test
or
mov
inc
(bad)
sub
repz
jecxz
add
sub
inc
pop
rol
inc
fadd
iret
sbb
cmp
call
pop
mov
je
xchg
sub
jle
jo
inc
in
mov
dec
xchg
daa
aad
cwde
fstp
pop
push
(bad)
mov
sbb
push
dec
loop
mov
jl
pop
jge
jo
cdq
push
cmp
mov
and
sbb
popa
xor
loope
(bad)
sub
aas
cmps
aam
push
push
xchg
(bad)
in
jecxz
sbb
add
test
sub
fidiv
ins
and
add
sub
mov
and
jbe
push
addr16
ins
or
loopne
ja
mov
loope
jmp
mov
sub
jl
pop
jbe
sbb
call
cwde
fild
adc
fmul
imul
fidivr
movs
jne
cmp
dec
mov
push
cmp
lods
jge
sbb
xchg
and
cmp
mov
push
call
stos
dec
inc
push
fbld
mov
les
and
into
in
jmp
jmp
adc
push
loopne
fsubrp
push
cli
sub
stos
sbb
cmp
cld
cmp
and
jne
rcr
inc
fcmovnu
lock
data16
stos
mov
(bad)
jecxz
push
cld
ds
lock
loope
push
mov
dec
adc
xor
ret
sub
cmp
cdq
cmp
popa
xor
push
lahf
sbb
lds
push
inc
lahf
sbb
add
mov
jo
int3
fld
aas
sub
xchg
sbb
or
or
push
inc
aam
call
jbe
push
mov
mov
pop
adc
mov
scas
sar
mov
sbb
sbb
adc
pushf
adc
push
repz
(bad)
enter
out
enter
or
fcom
mov
adc
ja
test
dec
push
clc
mov
loope
xor
push
xor
dec
inc
push
mov
or
pop
icebp
jmp
sbb
outs
adc
fwait
push
test
repnz
movs
dec
jb
rol
(bad)
repnz
daa
movs
adc
das
and
xchg
dec
aad
ins
mov
xchg
idiv
sbb
mov
adc
(bad)
jp
cld
cmp
shr
cmps
out
add
test
lds
push
dec
icebp
mov
pusha
mov
cmp
ret
or
xor
out
sbb
mov
shl
push
cmp
or
loopne
dec
mov
pop
or
adc
adc
adc
retf
stos
sar
in
adc
out
clc
ss
idiv
mov
ror
aas
sub
mov
dec
fistp
adc
fs
push
inc
mov
or
pop
and
or
dec
lahf
adc
sbb
cmps
xor
pop
mov
pop
fst
imul
and
outs
mov
fwait
mov
dec
lahf
add
pop
sub
xlat
in
adc
into
lods
or
cld
add
into
mov
loope
jp
mov
mov
loopne
adc
ret
std
add
sub
es
cld
out
xchg
arpl
es
aas
sbb
pop
mov
sbb
and
mov
add
cwde
test
call
xor
bound
fldenv
jbe
add
xor
jno
sub
bound
fs
or
xor
sahf
xchg
mov
call
or
stos
jmp
and
cdq
ror
ins
adc
sbb
ret
inc
call
mov
and
rcl
add
xlat
outs
cwde
dec
inc
sahf
push
pop
xor
jmp
or
fild
adc
adc
les
fcomp
mov
dec
loop
rcr
xchg
push
loope
cmp
int3
and
and
test
dec
push
clc
mov
ret
or
aad
je
not
mov
sub
popa
or
fdiv
aad
dec
sub
jmp
mov
int3
out
iret
sti
int
push
jmp
push
scas
imul
aam
mov
rcl
xor
add
arpl
pop
fsubr
jno
aaa
jns
adc
mov
or
xchg
mov
mov
add
fimul
mov
scas
cmp
mov
cmp
fs
fdivr
mov
icebp
inc
movs
ds
in
aaa
(bad)
test
mov
aas
cdq
push
aas
iret
mov
xchg
mov
add
cmp
push
xchg
xor
fdiv
ins
clc
pusha
lock
loop
mov
pop
arpl
int
js
or
ja
cmps
sar
loope
in
ret
pop
inc
les
je
test
mov
push
clc
neg
sbb
cmps
xor
push
pop
mov
xchg
loope
dec
inc
push
loop
cmp
mov
ins
jno
iret
clc
(bad)
(bad)
jge
imul
and
mov
jae
push
mov
push
cs
sbb
adc
and
adc
cmp
es
add
jmp
pop
icebp
add
fisub
sbb
lods
dec
sbb
into
mov
xlat
mov
dec
sub
jo
sbb
jmp
push
in
sub
sub
xchg
(bad)
or
test
icebp
ret
xor
lahf
popa
xor
sub
in
popa
cmp
fs
out
xor
pop
pop
fwait
push
dec
dec
pop
cmp
add
push
adc
or
add
(bad)
cmp
(bad)
sbb
adc
rcl
test
mov
inc
mov
mov
retf
sbb
sub
pop
daa
and
xor
mov
sti
ins
add
js
shl
pop
pop
movs
sbb
sbb
mov
sub
pop
cmp
pop
fsub
test
clc
loopne
cdq
push
scas
xchg
test
pop
adc
sbb
inc
add
push
aas
or
inc
push
lds
jnp
xchg
and
not
aas
fldcw
js
ret
movs
cwde
cwde
ja
add
stos
inc
f2xm1
in
push
push
adc
or
dec
int
cmp
pop
pop
xor
(bad)
aaa
(bad)
cmp
in
jno
retf
aaa
jge
xor
stos
ret
and
pop
xchg
imul
out
std
test
jl
pop
jmp
adc
popf
jmp
ins
fld
daa
pop
jl
adc
push
push
popa
jmp
loope
mov
test
push
add
ss
pop
jnp
inc
push
inc
and
neg
aaa
(bad)
lods
retf
hlt
sbb
aas
sub
xor
ins
mov
test
icebp
cmp
push
or
xchg
mov
jnp
retf
cdq
inc
xchg
into
es
push
push
mov
add
adc
jmp
and
adc
loope
xor
xchg
sbb
ret
mov
popa
lock
shr
leave
adc
sub
xchg
ror
cwde
mov
jo
les
cs
cwde
push
into
xor
add
or
icebp
jg
inc
les
sti
cmps
mov
jle
(bad)
sbb
jmp
and
jbe
cmp
ret
test
movs
add
mov
add
or
and
sbb
div
and
mov
cs
mov
repnz
adc
das
adc
popa
dec
idiv
push
popa
xor
push
loope
jge
es
xchg
call
sbb
mov
jns
popa
mov
xchg
inc
push
loopne
cmp
cs
push
add
clc
cmp
int
dec
sub
mov
cwde
test
mov
test
pop
sub
test
das
(bad)
lahf
stos
mov
or
mov
lds
or
imul
int
mov
mov
mov
mov
mov
call
rcr
xchg
(bad)
fwait
in
cwde
adc
pop
mov
shl
xchg
adc
jns
or
sub
or
mov
jno
xchg
pop
outs
dec
das
movs
not
test
or
add
push
sbb
inc
ss
xor
sbb
fisttp
je
fst
shr
push
jge
ret
test
loopne
imul
call
xchg
jne
test
and
sub
mov
nop
mov
inc
div
movs
adc
rol
push
int3
sbb
cmp
jl
or
call
out
retf
push
ror
in
cli
or
mov
mov
dec
test
dec
push
clc
mov
jo
cwde
into
aad
sbb
lock
outs
adc
shr
pop
add
mov
repz
mov
out
add
movs
std
call
inc
das
xlat
int
xor
jp
adc
idiv
es
sub
fsubr
jmp
add
jmp
sbb
cmp
jne
sub
fwait
or
into
push
push
daa
adc
mov
xchg
mov
push
or
test
inc
jp
sub
leave
xchg
push
out
xchg
mov
cmp
repnz
push
sar
scas
ins
and
(bad)
sub
pop
dec
ins
dec
add
cwde
scas
add
aas
or
pop
lahf
xchg
xchg
jp
or
movs
inc
jle
sbb
es
cli
loope
sbb
xor
rcl
push
pop
mov
sbb
pop
push
mov
fwait
jmp
mov
cmp
push
or
arpl
das
pop
jle
mov
lea
pop
or
sub
mov
shr
(bad)
jg
cmp
repz
mov
out
out
or
test
push
loopne
test
pop
jmp
ret
jp
addr16
mov
jle
and
xchg
repz
add
(bad)
out
sub
popf
(bad)
cmps
loop
jp
ror
test
push
ja
std
mov
fidiv
mov
mov
bound
bound
dec
jecxz
shl
push
sbb
mov
test
add
xchg
or
sbb
jl
or
cmc
loop
inc
mov
aam
adc
ror
xchg
fisttp
xor
mov
xchg
mov
fmul
xor
daa
cwde
xchg
sbb
pop
jnp
daa
cmp
data16
test
pusha
jmp
jl
(bad)
jns
mov
in
aam
test
(bad)
not
xor
cmc
dec
call
scas
pop
dec
sub
push
add
and
pop
and
cmps
neg
jne
out
cld
imul
arpl
arpl
and
icebp
ds
push
test
pop
jne
mov
sub
shr
pop
jne
in
jno
xchg
mov
fidivr
cmps
aam
loopne
xchg
js
int
push
sti
pop
dec
dec
jecxz
es
ss
test
hlt
test
pop
in
xchg
dec
(bad)
jecxz
dec
ds
call
bound
or
loope
mov
mov
and
out
out
xor
fadd
push
mov
(bad)
test
lea
loop
movs
cmps
mov
jecxz
adc
fild
xor
jle
push
mov
adc
mov
sbb
movs
xchg
or
sti
add
pop
jp
lock
jmp
stc
fmul
rcr
jl
cmpxchg
clc
pop
shl
mov
or
push
mov
sub
shl
loope
push
aam
adc
jg
push
mov
xor
lods
(bad)
jg
fwait
lods
mov
icebp
xor
jmp
(bad)
jg
xor
mov
(bad)
mov
pop
mov
jg
cmp
push
(bad)
imul
fidivr
jae
inc
(bad)
mov
push
cmc
jmp
pop
jbe
push
xor
or
mov
mov
(bad)
in
movs
sub
xor
inc
add
retf
or
push
jbe
inc
dec
int3
(bad)
dec
sub
mov
sub
mov
pusha
push
push
sbb
test
and
or
sbb
rol
jo
lds
and
gs
in
pop
xchg
out
push
mov
in
hlt
int
pushf
cmc
out
push
sub
jbe
cmp
cmp
fsub
out
dec
mov
jo
jp
cmps
out
mov
push
fisub
or
pop
mov
push
pop
mov
mov
mov
mov
pop
mov
(bad)
xchg
loop
cmp
push
push
stos
xchg
mov
call
lds
dec
jg
push
call
push
fabs
iret
stos
test
lahf
mov
fistp
cmp
jae
gs
int3
popf
push
les
pusha
mov
(bad)
clc
in
sub
sub
cmps
push
pusha
dec
lahf
mov
sub
js
or
int3
jmp
hlt
(bad)
push
bound
push
outs
pop
push
scas
mov
pop
enter
add
mov
fldcw
inc
sti
jmp
and
push
pop
inc
into
pop
clc
cld
data16
adc
xor
mov
cmps
std
inc
push
mov
mov
sub
mov
aad
sti
pop
mov
lea
out
mov
stos
inc
rcl
fidivr
jl
clc
xchg
jo
stc
jne
jns
fild
mov
sbb
jne
(bad)
test
fcomp
lods
mov
sbb
cld
cli
adc
or
push
xchg
xchg
(bad)
dec
mov
sbb
sbb
dec
inc
(bad)
call
or
div
test
dec
arpl
sti
cwde
sub
lahf
ret
adc
loop
sbb
fiadd
xchg
jecxz
xchg
cmp
xlat
jmp
cli
fnstcw
je
jae
mov
jo
dec
cmp
popf
lods
(bad)
int
xchg
push
xchg
and
xor
fs
jl
mov
jnp
jl
data16
rcl
and
fcmove
in
cdq
add
push
jl
or
cld
in
mov
adc
xchg
addr16
pop
dec
cmc
rcr
mov
xor
repz
adc
ds
push
imul
sar
loope
jns
shl
jo
dec
jp
and
push
and
push
mov
inc
dec
pop
enter
adc
dec
mov
call
sti
mov
sbb
enter
inc
shl
push
addr16
inc
test
dec
lahf
std
jmp
sbb
dec
aam
pop
jge
ss
mov
mov
rcr
in
mov
arpl
sub
int3
dec
push
pop
xor
add
sbb
xchg
sbb
mov
sub
jmp
std
push
sub
mov
mov
inc
sbb
mov
rcr
jne
cmps
cli
inc
call
dec
pop
dec
mov
xchg
bnd
(bad)
jp
out
rcl
lahf
mov
jmp
popf
push
dec
push
and
jle
jb
lea
hlt
js
outs
add
nop
sub
ss
mov
mov
cdq
in
jmp
push
test
mov
pop
(bad)
retf
xor
inc
inc
xor
stos
lds
nop
cmp
retf
retf
fisubr
fwait
out
sub
das
shl
jno
lods
push
mov
ds
into
add
or
daa
inc
jae
jmp
shr
(bad)
jmp
jl
inc
cmps
(bad)
ror
outs
xor
jb
mov
inc
loop
mov
sbb
pusha
adc
sbb
mov
push
outs
mov
icebp
std
in
adc
in
adc
out
adc
push
ins
jle
loope
lsl
xor
sar
mov
out
jae
push
ficom
cmp
pusha
cmps
ret
and
dec
pop
imul
fs
cld
test
retf
(bad)
dec
mov
popa
mov
cld
rol
aaa
add
add
or
push
sub
loope
(bad)
gs
imul
sti
dec
inc
xchg
cli
fs
imul
cmp
mov
retf
sar
add
jnp
adc
(bad)
dec
shl
iret
push
cmp
pop
scas
mov
hlt
or
inc
push
arpl
test
mov
pop
rol
pop
retf
push
out
test
cmp
dec
mov
out
push
jnp
cmp
fisttp
xor
push
retf
(bad)
xchg
scas
pop
xchg
cdq
out
cmps
jns
leave
mov
not
fwait
sti
aam
fwait
mov
or
stos
cwde
ins
or
cmp
cli
xor
pop
pop
ds
mov
mov
gs
call
scas
sbb
sub
push
add
cmp
mov
and
push
jp
jnp
in
push
fcmovnb
sbb
xchg
mov
lods
out
popf
sbb
sahf
fmul
test
outs
les
retf
(bad)
in
adc
sahf
push
pusha
scas
sub
xor
stc
stos
es
aad
jp
test
xchg
into
or
mov
and
push
or
or
xor
xor
lds
xchg
adc
add
out
lea
das
cmps
int3
retf
(bad)
mov
inc
movs
rol
mov
mov
stc
int3
loope
fcomp
mov
cmps
pop
pop
sbb
adc
mov
mov
std
adc
mov
adc
add
sub
add
inc
or
sub
je
and
mov
inc
sub
pop
dec
mov
gs
or
xchg
test
add
jmp
or
shr
mov
inc
lock
xchg
leave
stc
retf
xchg
fidiv
cmp
sbb
(bad)
hlt
cmps
xchg
enter
jb
fist
ss
ja
popf
mov
neg
and
cmp
xchg
fcomp
sldt
rcr
leave
imul
mov
xchg
ret
stc
jmp
(bad)
inc
(bad)
mov
sahf
mov
out
ss
inc
clc
stos
cmp
stos
inc
in
push
ss
push
pushf
scas
sub
sub
cmps
xchg
push
cmps
xchg
adc
lahf
popa
popf
sbb
in
push
stos
in
push
xlat
in
in
mov
retf
sub
cmp
shr
outs
inc
fst
ret
aaa
or
jmp
(bad)
leave
sbb
mov
or
sbb
imul
fistp
(bad)
cli
test
fimul
imul
push
mov
inc
fbstp
cmp
cmp
je
cli
pop
fwait
cmp
cld
fisttp
dec
sub
adc
outs
pop
jns
cwde
jb
int
arpl
stc
mov
into
adc
xchg
out
cmp
mov
pop
aaa
cmp
dec
ret
push
fwait
push
or
scas
sbb
add
mov
mov
aas
mov
pop
ds
xor
mov
loope
xchg
sbb
or
inc
mov
mov
cmp
inc
inc
xchg
or
jp
pop
push
push
mov
dec
jno
push
jae
sbb
mov
sahf
cmp
test
popf
mov
dec
push
push
mov
sub
fist
mov
mov
les
cmp
aad
fdivr
movs
push
test
sub
push
xor
test
jmp
push
ins
loopne
mov
imul
shr
ror
sbb
cmp
push
pop
call
xchg
fwait
or
xchg
xor
or
(bad)
loopne
(bad)
mov
or
cmp
mov
push
test
out
in
daa
fstp
push
ret
fimul
lea
not
imul
scas
in
(bad)
push
mov
fild
jecxz
inc
pop
xor
inc
sbb
stc
mov
xor
mov
cmp
mov
fstp
xchg
cmp
jo
dec
clc
ficomp
in
retf
addr16
mov
inc
jns
ficomp
retf
push
fldcw
loope
cli
dec
or
or
sub
add
fisub
push
sbb
(bad)
cwde
mov
call
pop
push
pop
cmp
cmc
push
mov
dec
adc
adc
sbb
sbb
scas
mov
repnz
sbb
jmp
mov
popa
dec
cmp
repnz
sbb
dec
mov
les
xchg
pop
jg
push
lds
hlt
out
popa
std
sub
(bad)
into
fucomp
std
mov
xor
dec
pop
cli
ins
xchg
data16
adc
ret
inc
sbb
jo
sbb
lock
sub
(bad)
cld
cmp
bound
and
rcl
out
dec
loopne
xor
in
int3
cmc
es
xchg
or
fnstenv
sub
nop
data16
add
jbe
push
clc
ins
fcomp
stc
mov
iret
dec
ins
pushf
fiadd
das
outs
data16
aaa
xor
outs
mov
std
mov
mov
xchg
jns
or
movs
cmp
repz
paddw
invd
test
jmp
jg
or
test
(bad)
xor
fdivr
sub
lock
sti
cmps
es
pop
push
mov
mov
cmp
mov
mov
and
jne
cmp
xchg
sub
xor
(bad)
or
dec
xchg
push
xchg
ins
mov
xor
adc
xchg
das
popf
push
or
mov
fwait
cmp
ret
cmc
inc
sbb
xchg
leave
aad
dec
jp
push
pushf
mov
pop
and
xchg
pop
push
jae
movs
jp
and
popf
fs
cwde
mov
je
xchg
or
pop
rcr
aam
pushf
and
cmp
ret
ja
pop
cli
imul
ret
loope
ror
out
or
test
arpl
jmp
xor
in
pop
popa
xor
pop
outs
pop
sbb
arpl
mov
dec
fadd
push
inc
jp
inc
addr16
sbb
mov
jnp
adc
sti
jle
call
xor
sub
cdq
sub
adc
xchg
sti
fst
pop
out
movs
in
les
fild
shl
jbe
cli
push
mov
or
pop
xor
mov
mov
mov
pop
xor
push
and
cmp
jg
das
jo
fst
ja
aas
pop
xchg
cmp
fcmovb
jecxz
fwait
icebp
mov
mov
sub
dec
jp
sti
(bad)
dec
into
fild
stc
sub
jo
mov
ret
and
in
adc
in
shl
push
inc
push
cmp
into
pop
repz
push
mov
push
adc
adc
das
jo
ret
bound
sub
cmp
xor
in
inc
cmp
(bad)
movs
sbb
mov
pop
inc
outs
or
rcl
adc
or
and
jno
lds
je
mov
inc
and
adc
dec
mov
stos
into
or
mov
push
std
(bad)
dec
jmp
outs
ret
pop
and
cmp
dec
adc
mov
cld
gs
xor
loopne
adc
add
xchg
fstp
jo
stos
stc
mov
pop
sbb
cld
mov
adc
mov
push
mov
arpl
es
lea
(bad)
xchg
sahf
movs
fstp
push
sahf
(bad)
test
outs
pop
imul
cli
xchg
leave
icebp
cmps
loope
je
xor
dec
fimul
sbb
xchg
xchg
sbb
test
lods
das
xchg
mov
xchg
mov
or
inc
clc
in
mov
adc
out
jl
push
movlps
and
in
mov
and
call
popa
adc
cmps
lds
loope
jne
cmp
xchg
mov
outs
or
sbb
daa
pop
fadd
movs
out
lahf
(bad)
loopne
mov
fidivr
aam
and
mov
cmp
out
pop
and
and
cmp
push
out
inc
cmp
hlt
inc
cmp
fimul
loop
dec
xor
dec
dec
pop
adc
xchg
es
inc
js
rcl
push
movs
daa
sub
adc
adc
in
jge
ret
push
xchg
fwait
cmp
iret
retf
iret
inc
div
dec
adc
sbb
push
or
dec
and
retf
mov
mov
xor
inc
sbb
dec
les
in
add
lods
add
dec
mov
pop
aas
rol
xchg
adc
and
sbb
add
iret
(bad)
mov
jmp
neg
mov
xor
push
dec
jge
xor
jns
cmp
and
dec
jbe
adc
inc
leave
mov
(bad)
or
pushf
mov
xchg
add
aam
mov
idiv
jno
mov
sar
int3
mov
mov
test
popf
js
or
addr16
scas
dec
add
ror
fistp
cmp
std
pop
and
ins
imul
int
scas
sti
shl
mov
xchg
xchg
in
loopne
jne
rcr
jp
mov
rcl
sub
fcmovnu
push
pop
ds
nop
pushf
into
mov
fwait
aad
cs
sbb
pop
sub
lods
stos
stc
repnz
idiv
lds
adc
cmps
push
out
dec
lods
push
mov
ds
iret
and
sub
pop
mov
jge
adc
lock
sbb
dec
mov
pop
sub
in
mov
jnp
fcom
add
rol
adc
cmp
lahf
jge
pushf
jp
or
or
inc
inc
aas
mov
mov
dec
push
mov
popf
adc
mov
xor
and
out
jmp
clc
dec
das
movq
mov
mov
push
test
retf
dec
test
outs
and
ud2
loope
jle
sbb
or
jmp
in
push
(bad)
stos
fnstcw
out
je
mov
add
and
sbb
xchg
stos
jnp
sub
rcl
sti
sub
sub
xchg
adc
sub
xor
movs
cmp
rcl
and
sbb
pop
bound
push
cmps
sahf
xlat
fdivr
jg
xchg
mov
out
cmp
and
div
ja
out
mov
lock
or
pop
mov
add
js
pop
push
test
ins
imul
push
aad
jae
jns
cs
sahf
test
pop
rcl
rcl
ja
push
mov
mov
mov
mov
inc
shr
leave
outs
shl
inc
push
loopne
dec
loop
fs
xchg
or
ror
and
mov
pop
enter
(bad)
loope
sub
cmps
xchg
push
mov
(bad)
pop
or
jbe
aas
loopne
mov
sub
mov
sbb
out
fs
and
jmp
leave
mov
jnp
jbe
aad
mov
mov
ficom
mov
mov
gs
fld
sub
cdq
mov
es
adc
adc
sti
arpl
cdq
push
jbe
loope
cmp
push
scas
xchg
cmp
xchg
sar
repnz
pusha
mov
aas
lds
xchg
pop
sub
shr
add
jl
jno
ja
sbb
mov
call
repz
cmp
fwait
push
or
scas
sbb
dec
pop
mov
(bad)
ins
dec
push
xchg
scas
ins
(bad)
push
mov
shr
sub
leave
mov
ret
in
(bad)
out
daa
movs
sub
xor
js
dec
adc
ins
dec
pop
pop
aad
sub
adc
das
repnz
dec
and
push
sub
cmp
push
dec
test
mov
pop
clc
leave
add
scas
sbb
outs
mov
aas
mov
stos
sbb
sbb
lods
test
popf
ret
ret
push
add
mov
sbb
ss
lods
imul
pop
mov
cmp
ret
mov
or
test
mov
push
inc
jp
mov
mov
aas
mov
cmp
mov
je
and
xchg
out
cs
sahf
leave
push
pop
fidiv
adc
fbstp
les
stos
aas
cld
call
sar
inc
and
and
xor
xor
jo
ror
push
(bad)
and
xchg
dec
xchg
pop
push
pusha
mov
mov
out
ret
icebp
mov
scas
gs
mov
jecxz
push
(bad)
gs
fadd
jb
cmp
adc
inc
sub
and
dec
inc
jecxz
jmp
or
lds
popa
ss
push
fldcw
push
mov
stos
jmp
fcmovbe
out
idiv
and
xor
shl
xchg
rcr
xor
movs
xchg
gs
mov
sbb
outs
sub
push
std
xor
ins
pushf
dec
test
fcomp
push
adc
iret
xor
jp
jmp
mov
test
push
ret
icebp
lds
jb
ds
addr16
lahf
les
ss
out
mov
mov
jmp
in
inc
enter
sub
sbb
pusha
mov
fs
adc
adc
adc
les
push
neg
pop
mov
lock
sbb
fistp
not
cmps
mov
push
push
scas
mov
sar
retf
xor
mov
iret
xor
nop
xchg
mov
mov
int3
js
sbb
pop
gs
outs
jle
test
pop
hlt
jbe
fwait
sbb
pop
push
ss
sub
jns
push
je
es
or
ds
das
and
inc
xor
adc
xor
mov
stos
push
in
enter
cdq
adc
sub
jnp
les
cmovo
hlt
mov
add
lds
push
fisub
call
dec
xor
out
adc
stos
add
repz
fsubr
js
ins
adc
arpl
xchg
dec
jb
scas
pushf
xchg
out
jns
add
popf
(bad)
(bad)
or
movs
dec
mov
(bad)
push
daa
push
lods
jge
std
cmps
xchg
call
int3
sbb
ffree
aad
xor
jmp
cmp
rcl
mov
sbb
leave
std
test
dec
ins
aas
repnz
and
jo
sbb
sub
inc
test
jns
xor
loopne
mov
call
sbb
and
inc
xacquire
sub
pop
dec
aam
push
mov
arpl
xor
test
out
cmp
mov
inc
addr16
ret
out
inc
cs
fnstenv
pusha
imul
xchg
sar
push
cdq
(bad)
sar
out
jle
push
jl
fsub
popa
aam
xchg
sub
lds
push
inc
pop
or
push
int3
and
jnp
adc
and
dec
fimul
mov
call
mov
dec
xchg
sahf
cmp
repz
jge
stos
xchg
int3
xchg
mov
mov
push
in
jo
imul
dec
pop
and
mov
push
imul
js
pop
into
mov
push
(bad)
stc
fwait
pop
xor
mov
test
jmp
jo
inc
clc
sbb
je
stc
jns
int
mov
xchg
xchg
outs
xchg
and
call
mov
jp
jmp
push
jns
fcmovne
xor
add
sub
out
cmp
out
jns
xor
dec
std
xor
push
aaa
push
pop
ror
sar
cmp
minps
xchg
iret
loopne
sub
out
mov
sub
xor
(bad)
cld
ret
mov
xor
outs
out
jae
pop
aam
adc
lds
sbb
inc
cdq
and
(bad)
sbb
mov
rcl
cmp
inc
inc
jle
int
daa
push
pop
jl
mov
mov
ins
xchg
mov
push
push
imul
call
cmp
add
push
stc
cmp
clc
pushf
leave
push
cmp
adc
dec
(bad)
mov
jae
xchg
retf
scas
ficom
retf
mov
add
xor
or
fwait
xor
icebp
jnp
sbb
push
xchg
or
dec
and
mov
cli
hlt
cmc
(bad)
aaa
(bad)
cli
mov
mov
aaa
leave
push
shl
loopne
push
mov
jp
(bad)
xor
mov
pop
daa
cmp
test
gs
jecxz
lods
mov
ret
mov
pop
add
adc
mov
pop
popf
or
ins
or
mov
jmp
retf
fdivrp
lds
cmc
pushf
imul
test
gs
mov
cmp
jg
inc
sub
call
mov
aas
mov
popf
sti
pop
adc
cmc
add
mov
inc
inc
popf
pop
pop
jp
mov
repnz
mov
sub
pop
cmp
in
push
jns
push
dec
jg
pop
xchg
dec
sti
movs
and
repnz
ds
push
dec
arpl
(bad)
arpl
xor
ja
pop
in
inc
dec
cs
loopne
sub
out
mov
mov
lock
pop
ins
js
xor
mov
sbb
dec
repz
lods
pop
mov
outs
sti
sub
test
jns
pop
xchg
div
sar
mov
fwait
mov
jo
test
pop
dec
data16
adc
rcr
sub
pop
and
shr
in
jmp
mov
aaa
mov
adc
popf
inc
pop
outs
imul
pop
cmps
daa
dec
xlat
shr
pusha
(bad)
sub
repnz
sbb
dec
fs
jl
adc
push
cmp
xchg
inc
clc
retf
fnstenv
pop
xor
cmp
dec
mov
add
out
sub
add
test
and
fs
clc
xchg
ja
int3
push
xchg
lahf
ret
(bad)
mov
gs
repz
imul
jge
repz
sbb
sub
add
cld
dec
call
xchg
fidiv
outs
scas
mov
std
jmp
sahf
sar
(bad)
cmp
push
ja
mov
pop
mov
and
ss
rcr
int3
in
out
mov
fwait
push
xchg
mov
push
(bad)
leave
icebp
inc
fisttp
aas
ret
popf
lds
ins
test
push
cwde
mov
xchg
or
push
jp
jge
daa
and
or
push
jno
inc
pop
test
fidivr
mul
mov
add
aam
push
xchg
gs
pop
mov
push
fdivr
xchg
add
xor
xor
add
fcmovb
cmps
sbb
shl
mov
enter
inc
sahf
(bad)
(bad)
mov
mov
fadd
out
pop
jbe
xor
add
out
cwde
sahf
push
dec
out
adc
fnsave
enter
xlat
dec
stos
cwde
mov
movs
pop
mov
loopne
fmul
(bad)
push
popf
and
bound
sahf
pushf
mov
stc
dec
xor
mov
movs
inc
test
push
sub
cwde
ss
cmp
sub
cmp
jge
sahf
mul
int
shl
test
loopne
push
dec
minps
sub
add
or
inc
cs
shl
xchg
or
hlt
adc
sahf
scas
xor
dec
outs
cmps
mov
test
and
icebp
fcomp
(bad)
movs
xchg
int3
nop
(bad)
mov
sbb
mov
cmps
jns
das
(bad)
adc
adc
std
jmp
dec
in
imul
popa
mov
or
push
xchg
mov
in
jmp
mov
rol
sub
inc
ins
sub
in
pop
outs
push
push
mov
scas
hlt
test
aaa
pop
stc
sbb
shl
cmp
push
sub
dec
lods
pop
fst
xlat
(bad)
call
and
in
adc
mov
sbb
mov
stos
repnz
pop
fmul
loopne
je
sahf
mov
xchg
es
dec
scas
dec
in
inc
and
dec
adc
xor
or
dec
inc
adc
(bad)
add
mov
(bad)
ret
mov
mov
inc
out
movs
add
mov
adc
pop
dec
test
pop
jmp
ss
je
mov
push
inc
mov
and
enter
pusha
mov
sbb
xchg
mov
sahf
push
fld
pop
mov
jne
imul
mov
outs
pop
stos
out
ss
mov
cdq
sub
mov
cwde
jg
(bad)
stc
loopne
and
dec
pushf
cld
aaa
inc
shr
pushf
xor
push
imul
imul
and
lods
sub
popf
adc
jno
aam
sbb
scas
cmp
push
cmc
dec
cmps
repz
(bad)
xor
mov
pop
cmp
mov
mov
ds
push
xchg
mov
sbb
cmp
out
dec
xchg
cdq
inc
sub
div
jmp
push
js
mov
je
test
(bad)
inc
add
xchg
xchg
imul
push
loope
xchg
jnp
cmp
pop
cli
aam
shl
mov
outs
xchg
nop
mov
mov
mov
sbb
sub
popf
clc
push
dec
cld
xchg
dec
rcl
inc
pop
mov
lea
xlat
out
nop
int
jmp
hlt
inc
mov
aad
xchg
cwde
aas
nop
outs
icebp
sub
int3
xchg
and
jl
add
movs
jae
mov
outs
jne
js
sbb
or
adc
(bad)
aam
push
outs
add
mov
addr16
pop
fidivr
adc
inc
adc
je
popa
mov
(bad)
cmp
xchg
scas
mov
adc
mov
mov
pop
sar
push
std
xlat
cdq
cld
out
xchg
addr16
sub
adc
and
cmp
div
push
add
push
je
test
(bad)
sub
cmps
dec
inc
sbb
dec
and
daa
pop
inc
inc
aam
outs
lea
(bad)
popa
iret
jae
push
adc
mov
mov
dec
scas
repz
and
xchg
ja
jg
add
das
sub
mov
(bad)
aam
and
push
stos
shl
sub
xor
mov
push
js
int
mov
mul
jne
loop
js
addr16
repnz
repnz
dec
jbe
lods
pop
iret
mov
test
or
repz
iret
push
(bad)
test
sbb
pusha
dec
call
xor
out
rcr
ds
movs
push
ror
(bad)
imul
test
push
sub
movs
int3
in
fs
idiv
push
mov
cld
imul
fcomp
call
sub
adc
popf
cmp
dec
xor
jns
mov
cs
cmc
jmp
fdivr
jmp
mul
in
xchg
dec
jbe
mov
repnz
(bad)
mov
mov
cli
or
sti
in
repz
dec
or
push
icebp
sub
sbb
sbb
cmp
mov
push
jle
mov
outs
data16
cmc
ins
daa
xor
and
dec
jmp
fdiv
mov
inc
push
stos
mov
xor
fbld
hlt
jne
cmp
inc
jge
xor
add
xchg
cmp
in
(bad)
xchg
cld
add
in
sbb
sub
push
test
daa
call
xor
gs
ja
xor
jg
mov
fimul
xor
adc
cdq
jl
jns
cs
add
lods
jge
mov
stos
mov
cmp
mov
test
cmps
or
shr
pop
iret
pop
adc
scas
mov
and
dec
push
into
stos
test
sbb
xor
cmovo
hlt
mov
add
add
test
call
sub
imul
jns
lahf
jno
dec
icebp
cmp
pop
jmp
outs
imul
jmp
call
(bad)
dec
sbb
adc
popf
stc
dec
ins
popf
inc
push
sbb
cmp
jmp
pop
pop
mov
fidivr
inc
popf
mov
or
int
cmp
cmp
imul
inc
sbb
das
push
jp
and
js
lea
and
sbb
lahf
prefetcht1
jecxz
jge
adc
fcmovnu
mov
ficomp
adc
je
call
mov
mov
pop
jns
mov
inc
push
mov
aad
int3
and
cmps
add
mov
push
add
jae
cmp
(bad)
xchg
je
or
int
push
shr
mov
dec
push
pop
or
stos
mov
repz
lock
sbb
mov
test
lea
or
cmp
xchg
pop
sub
in
or
xchg
in
rol
jmp
mov
dec
loope
jae
or
(bad)
leave
push
mov
leave
cmp
dec
dec
mov
imul
test
cwde
xor
sub
inc
inc
test
in
sar
mov
pop
sub
jbe
xor
xor
or
xor
dec
retf
inc
push
xor
daa
xor
adc
cmp
sar
pop
imul
sub
stos
loopne
repnz
or
mov
xlat
mov
jmp
sub
add
ss
outs
add
test
add
ds
or
pop
pop
push
and
nop
add
mov
and
dec
add
std
xchg
dec
xchg
in
dec
push
push
push
push
arpl
pop
push
loop
xchg
outs
sub
xor
bound
out
icebp
into
fisttp
and
xchg
jg
jb
stos
dec
out
sub
cs
lds
inc
xchg
xor
rcl
mov
mov
sbb
lods
(bad)
pop
and
mov
pop
imul
jno
data16
inc
jbe
pop
mov
inc
fcom
and
mov
ja
xor
movs
ins
cwde
aam
addr16
in
imul
pop
or
pop
call
jg
sti
into
jle
test
mov
mov
fistp
mov
add
lahf
mov
stos
or
inc
push
call
mov
pop
enter
(bad)
bnd
mov
shl
adc
cdq
jl
or
mov
dec
and
aam
aam
mov
cmp
inc
(bad)
clc
loop
ins
js
adc
add
mov
lds
fwait
mov
xchg
jp
leave
scas
adc
test
pop
mov
and
iret
sub
sub
sub
pop
dec
hlt
sar
ficomp
ins
out
std
sub
cwde
fist
push
out
cmp
hlt
dec
add
stos
mov
push
adc
icebp
or
nop
adc
dec
jns
jb
jne
xchg
pop
mov
mov
out
aad
int
mov
xchg
sar
fbld
and
sbb
jp
jp
pushf
add
ja
pop
scas
push
and
test
push
dec
sbb
inc
mov
add
xchg
and
mov
sub
in
mov
ja
sti
pop
mov
mov
xchg
jno
jp
pop
sahf
push
and
jge
sbb
scas
jp
mov
cs
loope
xchg
or
add
add
addr16
inc
xchg
mov
cdq
mov
cdq
or
fadd
scas
outs
xchg
jp
sub
mov
pop
rcl
outs
xor
and
out
jnp
and
adc
test
sbb
adc
cmp
add
hlt
jbe
or
outs
sbb
adc
test
jp
cs
lock
xchg
or
add
sub
dec
test
mov
int3
je
adc
(bad)
shl
gs
out
mov
cmps
sahf
push
sub
je
or
fidivr
jmp
and
pop
fwait
retf
aad
pusha
mov
(bad)
push
out
sti
cmp
icebp
sbb
aam
pop
outs
mov
fild
push
or
dec
push
shr
mov
leave
psraw
fs
sti
mov
pop
cmp
clc
xchg
repnz
add
(bad)
in
xor
(bad)
loopne
repnz
sahf
xchg
xchg
je
cmps
jmp
mov
sbb
push
sub
dec
or
out
daa
mov
cld
call
std
fwait
cmps
clc
pop
aas
outs
adc
pop
gs
bound
std
test
call
jmp
test
retf
sub
inc
loop
and
xchg
(bad)
xor
lds
dec
aas
jmp
js
or
in
sub
out
mov
xlat
fstp
xchg
shl
sub
not
iret
sbb
fdivp
or
jb
mul
jp
repnz
dec
mov
dec
(bad)
inc
jmp
push
in
xchg
pushf
fadd
or
and
jmp
imul
adc
adc
sub
(bad)
sub
pop
xchg
call
mov
es
test
mov
pop
lahf
sbb
push
popa
mov
lods
stos
in
and
dec
mov
xor
sbb
pop
(bad)
cmp
es
mov
pop
(bad)
mov
xchg
adc
in
mov
mov
xchg
lds
lock
mov
xor
pop
mov
or
jns
popf
xor
cmp
out
sahf
dec
scas
fwait
aam
sti
jb
push
jmp
aas
test
adc
mov
sbb
sub
mov
pop
inc
push
cmps
sub
adc
or
inc
and
jl
mov
push
lds
cmc
jmp
in
jecxz
(bad)
jg
xor
mov
inc
inc
popf
enter
aas
icebp
xor
cdq
mov
(bad)
pop
mov
mov
shl
mov
je
jle
call
jmp
adc
imul
pop
call
xchg
mov
sbb
das
push
add
push
jno
cmc
mov
fsubr
mov
cmp
ficom
xor
cmp
arpl
adc
test
dec
clc
and
adc
and
xchg
or
int
retf
jne
mov
clc
push
aam
shr
dec
dec
cmp
mov
mov
jmp
sti
fwait
sub
cmp
ret
retf
popf
xor
pop
sbb
pushf
dec
mov
mov
dec
sub
rcl
(bad)
mov
test
pop
sub
scas
add
sub
xor
cmp
ins
mov
pop
and
shl
fiadd
neg
sbb
fnstcw
xlat
sahf
mov
jbe
inc
scas
add
scas
test
sub
rol
push
mov
push
mov
pop
adc
cs
out
ret
mov
sti
sub
call
fist
xchg
mov
dec
sar
mov
mov
xor
mov
mov
jmp
mov
lahf
out
(bad)
aad
test
lds
mov
fs
pop
or
inc
das
mov
mov
retf
in
or
scas
mov
pop
inc
push
call
or
cwde
test
cdq
sub
xor
cmp
and
dec
pop
es
dec
cmps
dec
inc
call
es
and
in
addr16
inc
dec
dec
and
fs
sbb
(bad)
cmp
jg
inc
pop
dec
out
dec
pop
aad
jnp
loop
sub
push
push
mov
test
cmps
out
and
mov
retf
xor
bound
cmp
fist
or
es
jae
mov
test
test
dec
mov
mov
adc
mov
cmp
hlt
jmp
or
and
adc
mov
jbe
mov
fistp
cmc
xor
xchg
dec
retf
push
xor
loop
mov
cmp
idiv
and
jl
retf
idiv
loope
fldcw
call
bnd
xchg
pop
addr16
movs
retf
add
dec
pop
mov
in
sub
into
(bad)
das
aad
popa
sbb
int3
xchg
out
push
xchg
mov
dec
or
pop
add
mov
adc
outs
xlat
inc
xchg
nop
mov
(bad)
cmps
es
mov
cmp
push
test
push
aaa
xor
add
call
cmp
sbb
out
outs
rcr
dec
push
xor
push
mov
jp
lahf
push
retf
xchg
movs
sbb
xchg
(bad)
xor
mov
int3
fwait
test
xchg
cmp
lods
sub
scas
dec
in
or
imul
jno
mov
mov
mov
cmp
cdq
icebp
mov
xor
mov
popa
repz
iret
inc
imul
or
xchg
cmps
inc
fbld
sbb
and
or
pop
sbb
xlat
(bad)
fnstsw
jge
mov
lods
mov
push
out
xchg
sub
mov
fwait
xor
fistp
fsubr
and
out
push
dec
add
push
push
repnz
adc
pop
jno
cmp
sub
mov
add
fs
leave
and
jle
ds
dec
shr
out
(bad)
les
stos
push
xchg
mov
cmp
pop
xor
cwde
pop
enter
scas
xchg
or
xor
aaa
call
mov
ins
mov
cmp
retf
outs
sti
jne
mov
push
sahf
push
call
mov
mov
cmp
xchg
in
(bad)
fild
push
or
outs
lds
nop
inc
adc
xchg
jecxz
idiv
mov
(bad)
arpl
imul
ror
xchg
push
jne
fimul
mov
lock
mov
ret
xchg
jmp
fist
push
mov
and
add
(bad)
addr16
popa
jbe
pop
jae
mov
xlat
movs
je
lea
popa
fcomp
call
call
push
push
xchg
ss
mov
sub
or
push
xchg
mov
lds
(bad)
xor
sbb
mov
jle
mov
addr16
push
jae
sub
cdq
in
in
gs
outs
lock
ja
mov
mov
mov
push
inc
rcr
outs
in
mov
pop
rol
or
rcl
sub
inc
sub
fcmovnu
inc
inc
sti
enter
sbb
push
(bad)
fiadd
jne
jp
(bad)
pop
aam
in
mov
addr16
nop
fsubr
stos
and
sbb
mov
inc
lock
jno
inc
jl
add
or
xor
in
mov
mov
push
adc
loop
pop
out
addr16
ins
mov
aam
inc
les
inc
xchg
out
inc
sub
jb
stos
or
mov
je
movs
sbb
sahf
das
sbb
(bad)
xor
mov
loope
mov
cmps
inc
cmp
xchg
rcr
ins
ds
jb
imul
imul
cmps
inc
cmp
and
pop
fidivr
xchg
adc
pop
aaa
mov
cmc
inc
jecxz
jns
arpl
aaa
mov
dec
or
icebp
test
push
mov
xlat
pop
enter
fstp
mov
sbb
mov
or
mov
loope
(bad)
js
rcr
out
or
mov
jmp
test
test
aam
out
jecxz
mov
push
pop
scas
mov
mov
sub
in
adc
mov
pop
mov
loopne
daa
je
inc
sub
arpl
jns
and
daa
inc
rol
fisub
mov
cmp
(bad)
add
xor
je
in
or
and
sub
ret
xchg
outs
sub
inc
fdivr
mov
dec
addr16
repnz
jmp
inc
pop
sbb
or
and
push
add
and
and
add
out
not
cmp
nop
push
in
cmp
addr16
clc
adc
push
enter
mov
xchg
ds
or
sbb
ret
xchg
or
pop
adc
out
push
aam
mov
out
fmul
push
jmp
ret
push
test
out
cmp
sar
ins
cmp
aas
loopne
call
mov
mov
dec
inc
xor
je
adc
sub
cmc
cmc
jle
adc
sbb
loope
add
mov
popf
std
clc
movs
clc
(bad)
or
pop
adc
add
push
adc
ss
adc
bound
inc
jo
lahf
xor
cmp
sub
iret
(bad)
sbb
mov
or
mov
mov
xor
xor
fwait
add
fstp
fist
ror
dec
mov
inc
cmp
dec
iret
out
shl
or
push
push
fldenv
push
retf
mov
ins
push
(bad)
cld
xchg
push
xchg
pop
mov
adc
scas
std
jbe
rol
mov
dec
(bad)
cmp
add
out
(bad)
sbb
bound
mov
push
shl
aam
cmc
mov
jnp
(bad)
dec
push
mov
dec
fcmovb
mov
and
mov
test
test
push
jl
mov
push
fsub
inc
mov
loopne
sbb
gs
pop
jnp
or
es
fmulp
(bad)
ss
mov
mov
je
cmp
cmps
or
and
cmc
push
pop
jmp
push
dec
and
inc
mov
les
push
cmps
add
or
test
ins
retf
push
jmp
mov
push
rol
call
adc
imul
inc
add
xor
inc
jl
out
sub
sahf
inc
dec
aas
xor
popf
cld
iret
sbb
add
xchg
enter
cmp
inc
mov
jle
mov
ins
dec
sbb
sti
cmc
push
cwde
jo
inc
cmp
fs
cmps
jns
fwait
push
lods
call
imul
push
ins
add
xchg
or
xlat
call
sbb
xor
shl
mov
pop
jp
cwde
mov
cmp
mov
iret
add
lea
xchg
xor
mov
pop
popf
fadd
hlt
xor
jmp
mov
je
sbb
push
retf
loope
push
ja
xor
mov
frstor
imul
loopne
leave
mov
adc
aaa
mov
cdq
mov
sbb
lods
aam
and
enter
scas
inc
call
cmps
mov
loope
into
xor
and
add
fucomp
into
movs
call
es
in
inc
sahf
pop
fstp
cmp
add
ret
jmp
cmps
jmp
or
adc
int3
xchg
fimul
xchg
cmp
mov
lea
xor
inc
push
cmp
dec
fdivr
leave
hlt
mov
(bad)
rcr
rol
cmp
dec
pop
xchg
sahf
stc
test
scas
imul
mov
sti
jb
rcr
and
call
adc
movs
test
je
repz
shl
cmps
xchg
inc
jne
popf
loop
cmpxchg
and
xor
arpl
jae
mov
mul
call
nop
into
push
pusha
in
push
int
push
push
loopne
lds
add
mov
shl
dec
jmp
sub
test
nop
int
mov
mov
out
iret
aas
xor
popf
mov
jo
dec
xchg
or
cmps
icebp
mov
les
das
cmp
dec
cdq
cmp
mov
test
loop
aas
jp
jb
push
push
cmp
cld
fdivr
push
add
enter
sbb
lods
vmaxsd
ret
mov
push
jbe
jecxz
mov
push
mov
jns
and
ins
pop
retf
bound
in
cmp
sbb
lea
fld
cmps
mov
pop
sbb
inc
int3
dec
sbb
pop
jl
scas
jo
sub
adc
pop
inc
sub
ja
push
mov
jmp
lods
sti
mov
and
sti
das
loopne
xchg
mov
(bad)
faddp
mov
jl
adc
xor
ret
mov
pop
cmc
xchg
in
fdivrp
dec
jne
aas
sub
leave
retf
addr16
jmp
or
call
stos
div
mov
or
sbb
stos
stos
push
retf
lds
imul
add
test
je
lds
or
xor
fisubr
sub
add
rol
and
sub
popf
fst
pop
cmp
cmp
push
imul
mov
xor
rcr
mov
(bad)
leave
sub
fsubr
jge
xchg
div
outs
shl
ret
retf
inc
ss
xchg
mov
sub
sub
push
inc
xchg
test
or
fistp
mov
(bad)
call
add
fcomp
les
pop
adc
or
lahf
mov
rcr
pop
out
cld
fs
in
scas
js
mov
xor
inc
cmps
(bad)
ret
(bad)
mov
call
xchg
loop
lock
cmp
loope
fwait
xor
cdq
sub
jae
or
arpl
xor
push
sbb
push
pop
cdq
es
sub
cmp
pop
pop
call
daa
sub
sbb
data16
mov
cs
out
int3
call
aam
mov
(bad)
fst
dec
(bad)
bound
icebp
fsubr
pop
fwait
mov
xchg
push
push
pop
pop
mov
fcom
mov
fs
jp
jns
cmps
mov
push
adc
adc
push
xor
dec
fmul
push
cld
mov
xlat
mov
retf
leave
mov
stos
mov
push
jecxz
mov
mov
dec
bound
mov
cmp
in
sub
push
pop
stos
ret
push
xor
dec
or
jae
mov
aad
leave
fisttp
loope
outs
leave
ja
sbb
and
cdq
sub
push
leave
inc
adc
adc
into
pop
cmp
pop
(bad)
jmp
mov
out
les
pop
test
gs
mov
mov
pop
push
push
push
sub
cmp
mov
inc
fcmovbe
int3
fs
cmp
clc
jo
leave
je
cwde
ja
hlt
xchg
mov
hlt
adc
or
sbb
xor
push
mov
cmp
add
aas
repz
mov
out
lds
jne
jle
xchg
mov
es
nop
sti
adc
and
movs
fmul
mov
push
frstor
test
movs
ins
ds
pop
in
xor
fmul
outs
dec
retf
or
out
xor
movs
imul
bound
dec
xchg
nop
push
out
cs
inc
bound
adc
repnz
(bad)
cmps
pusha
daa
push
cwde
or
rcl
or
mov
hlt
mov
in
sti
(bad)
inc
or
pop
add
sbb
out
pop
outs
or
dec
cmps
add
adc
mov
push
mov
and
lock
lahf
out
inc
cli
mov
sub
pop
mov
cmps
mov
push
(bad)
jecxz
sub
sub
into
popf
in
shr
fs
enter
mov
sbb
in
sbb
mov
(bad)
stc
ret
data16
out
pop
adc
jne
pop
inc
xor
dec
lds
dec
push
popf
stos
adc
mov
add
and
ja
cmps
sbb
dec
loopne
cmp
mul
out
(bad)
cmp
aad
inc
or
xor
mov
cmp
jnp
dec
cmps
cmps
cmps
ds
cmp
clc
mov
xchg
sub
and
fstp
stc
mov
test
gs
xor
inc
sbb
mov
loopne
jbe
enter
jmp
shl
push
neg
jg
movs
cwde
adc
jp
adc
mov
lock
xchg
jg
add
cmp
icebp
push
adc
(bad)
cld
sar
jge
mov
addr16
jmp
rcr
and
shr
mov
sbb
enter
out
outs
pop
dec
test
(bad)
xchg
loope
cld
out
or
mov
jmp
loope
(bad)
sbb
pop
pop
dec
add
retf
adc
xchg
and
xchg
adc
addr16
test
dec
add
loope
jno
rol
(bad)
bound
mov
adc
retf
sub
push
mov
mov
fdiv
xchg
sbb
bound
sbb
jbe
cmp
push
lods
shr
popa
pop
xor
mov
adc
(bad)
lock
dec
xor
cmp
aad
repnz
jecxz
retf
push
xor
call
add
cmps
sti
sub
pop
lods
sbb
mov
dec
shld
mov
xchg
outs
cmp
sub
adc
stc
call
add
or
cmps
sbb
mov
pop
int3
pop
inc
ror
sar
or
test
loope
mov
mov
(bad)
cli
pop
jb
adc
jp
dec
jb
push
xchg
xor
ffree
test
les
stos
in
mov
inc
mov
push
gs
xchg
call
paddsw
jae
test
xchg
lock
cmp
cmc
jns
or
and
add
sbb
sub
out
cmp
iret
pop
(bad)
jecxz
jns
mov
and
inc
cmp
push
(bad)
arpl
mov
mov
dec
outs
or
ds
ja
addr16
mov
outs
sbb
call
sti
cmp
sti
fcmovnbe
cmp
scas
mov
mov
add
xor
aad
add
addr16
ret
xchg
or
xor
sbb
stc
add
sub
and
lock
das
ds
lods
arpl
pop
push
cmp
mov
test
into
adc
or
adc
ds
dec
cmc
mov
cld
lods
outs
inc
push
xor
sub
and
pop
mov
push
add
or
cmp
push
popf
je
fimul
pop
mov
or
adc
shr
push
int3
cmp
pop
je
cmps
int
cs
xor
movs
out
popf
jns
jns
mov
mov
ins
xlat
fxch
hlt
movs
cmp
sti
(bad)
ins
cwde
jno
sub
outs
mov
(bad)
mov
aaa
std
in
sub
adc
inc
add
inc
das
push
addr16
out
imul
mov
xchg
sahf
mov
add
mov
(bad)
(bad)
inc
mov
jl
xchg
add
ror
dec
rcr
and
rcr
pushf
mov
sti
adc
shl
cdq
ja
xor
add
leave
cmc
fist
xchg
jl
mov
call
mov
call
pop
cmc
adc
hlt
mov
int3
(bad)
dec
jmp
mov
jmp
pop
outs
and
mov
xchg
shl
aad
push
and
aad
mov
sbb
mov
shl
pop
pop
and
inc
cld
das
(bad)
xlat
scas
adc
mov
jno
push
mov
inc
sub
and
mov
sahf
push
ror
dec
in
xabort
xchg
mov
pop
pop
adc
inc
stos
ds
sub
cmp
pop
fs
dec
push
push
jl
idiv
pushf
mov
push
ss
xor
inc
fstp
daa
sub
(bad)
loop
add
jmp
push
mov
outs
xchg
sbb
lea
jmp
xor
push
test
cvttps2pi
outs
jns
daa
mov
fwait
xchg
ja
shr
sar
out
cmp
xchg
lods
int
fst
mov
jmp
loop
clc
mov
jbe
adc
jno
cwde
(bad)
pop
mov
ss
pop
(bad)
enter
push
ror
int3
xchg
adc
pop
push
test
inc
in
mov
jno
loop
or
xor
cmp
mov
rol
cmps
outs
hlt
lea
add
jmp
lods
jmp
gs
jmp
leave
adc
mov
sbb
iret
jne
push
push
loopne
stc
jo
add
sti
xchg
call
cli
sbb
cmp
sbb
and
(bad)
cli
cmc
js
cs
xchg
jno
jae
jmp
int3
hlt
xor
pop
jmp
lods
in
shl
xor
or
mov
test
ret
frstor
ins
loopne
loop
popa
icebp
push
cmps
sub
sti
shl
test
mov
shl
retf
jle
bound
shr
cmp
push
or
cmp
and
ror
bound
cld
jnp
jno
enter
cmc
(bad)
pusha
inc
cmp
push
cld
fiadd
fdiv
retf
push
cwde
stos
outs
repnz
and
(bad)
icebp
add
imul
inc
cmp
outs
cdq
push
sbb
mov
jae
std
in
jp
retf
addr16
pop
je
(bad)
cld
jmp
xor
out
sbb
ret
aas
adc
lahf
push
movs
std
dec
dec
out
pop
xor
shr
push
mov
cmc
lods
retf
popa
div
and
sahf
call
and
adc
mov
adc
movs
mov
clc
bound
inc
(bad)
hlt
(bad)
rcl
adc
mov
shl
loopne
outs
jo
cmp
inc
lock
inc
inc
icebp
inc
ret
(bad)
mov
jg
xchg
xlat
adc
in
inc
neg
gs
iret
jnp
(bad)
arpl
xor
icebp
lods
sti
jg
out
iret
aaa
lahf
lea
jg
lea
mov
repnz
cmp
jmp
cmp
sub
repz
jg
fst
mov
jmp
jl
xchg
fisubr
inc
mov
push
pop
ds
mov
inc
and
scas
push
ror
pop
cmp
ror
jmp
jmp
inc
dec
rcr
cmp
and
lods
js
adc
sbb
mov
push
je
inc
sbb
inc
pop
popa
xchg
int
lds
and
fsub
xor
(bad)
ror
ja
in
call
out
js
shl
sub
retf
pop
inc
adc
sti
mov
push
outs
mov
std
in
add
jo
imul
adc
inc
and
ret
jecxz
ds
pop
jnp
gs
ror
stos
pushf
cmp
xchg
fstp
add
xchg
fidiv
aaa
xchg
sub
sar
push
out
in
or
xor
or
scas
shr
(bad)
out
int
repz
daa
int
repz
xor
icebp
ret
xchg
lods
addr16
inc
fs
push
cld
movs
dec
clc
rcl
sub
jae
mov
push
movs
inc
jmp
cdq
fsubr
dec
test
mov
adc
scas
js
loopne
js
stc
jle
push
imul
push
sub
mov
(bad)
(bad)
cmp
push
dec
add
sub
cmp
mov
pop
sbb
mov
in
les
dec
rcl
push
in
mov
outs
retf
sub
mov
loop
dec
bound
pop
sub
push
(bad)
call
adc
aaa
jb
xlat
ja
pop
dec
in
sub
xchg
mov
jno
enter
sbb
ss
daa
ds
imul
out
mov
stc
fs
push
adc
dec
je
ffreep
sahf
dec
and
lock
aam
bound
in
pop
outs
mov
movs
inc
call
mov
push
sbb
mov
adc
push
sahf
imul
jle
mov
and
ins
out
ss
xor
push
sbb
fs
push
pop
(bad)
sar
inc
sub
in
call
daa
pop
sar
ror
sub
mov
push
in
xchg
into
jle
jne
repnz
pop
adc
dec
(bad)
out
and
sbb
pop
push
test
scas
push
sub
movs
movs
push
inc
mov
mov
cmps
ds
jbe
aam
popa
pop
inc
add
cmp
mov
popf
inc
out
jbe
nop
mov
xchg
addr16
inc
inc
cmp
sub
(bad)
cmp
pop
cmp
inc
mov
dec
dec
aas
mov
push
pushf
loopne
out
jle
pop
test
sti
and
sub
inc
cs
movs
mov
pop
lea
adc
or
loopne
cmp
pop
outs
inc
imul
cmp
lahf
stos
sub
cdq
xchg
gs
(bad)
hlt
subps
nop
sbb
cmp
adc
rol
fcom
clc
imul
mov
mov
test
lahf
nop
fbld
aas
leave
mov
add
inc
popf
out
cbw
cs
js
mov
xchg
in
repnz
popa
ret
mov
dec
lock
out
mov
mov
aaa
sub
outs
test
mov
add
xor
test
xor
or
push
xchg
pop
js
out
push
pusha
sbb
cmp
xchg
xchg
aas
dec
sbb
icebp
movs
hlt
sbb
daa
aas
out
aam
cmp
sub
and
cmc
sub
sar
loope
in
or
out
shl
push
nop
xchg
fstp
jae
push
lock
mov
lods
test
jecxz
mov
test
jg
outs
mov
(bad)
div
push
call
xor
mul
mov
sbb
cmp
pop
loopne
shl
loopne
cli
cmps
popf
cmp
das
out
pop
jmp
iret
and
jae
cmp
aam
and
mov
rcl
xor
(bad)
mov
dec
movs
mov
jae
sub
iret
lods
xor
xlat
xlat
push
jl
cwde
sub
xlat
or
(bad)
adc
outs
jnp
adc
or
and
je
mov
cmp
cmps
in
xor
rcr
in
or
jmp
push
dec
call
inc
aas
repz
(bad)
mov
sub
sti
repnz
jecxz
xor
inc
pop
sub
mov
test
jo
daa
cmps
or
mov
nop
mov
pop
mov
pop
ja
fild
test
sub
scas
mov
mov
xor
test
jns
cmp
jne
add
cmp
fisttp
or
add
push
into
jle
in
call
pop
outs
jp
(bad)
inc
add
pop
xchg
xor
pop
test
stos
push
xchg
dec
xchg
stc
(bad)
mov
push
fsubr
fistp
inc
mov
lods
push
push
iret
inc
ds
and
cld
sti
je
ror
int3
loopne
dec
cmps
popf
ds
push
mov
inc
in
xchg
fdivr
cmp
xchg
mov
pop
or
fistp
pop
pushf
repz
jne
xchg
shr
cmc
jbe
lods
dec
lods
and
mov
fsubr
cmps
and
nop
repnz
pushf
ret
push
push
sub
and
adc
gs
iret
(bad)
clc
mov
xlat
por
add
push
cwde
cmp
sbb
mov
retf
movs
imul
jno
imul
ins
out
test
sub
mov
jbe
test
add
jmp
mov
cld
into
stos
aam
fidiv
push
or
push
outs
or
cmps
sar
pusha
jno
scas
das
mov
pop
(bad)
sahf
xchg
sub
adc
and
rol
adc
cmp
jg
sbb
ds
mov
pop
popf
cmp
das
cmp
pop
mov
outs
das
stos
nop
jb
pop
int
mov
or
out
aaa
dec
aaa
mov
dec
or
mov
int
mov
shl
cs
adc
pop
mov
mov
mov
imul
sbb
shl
xor
pop
push
enter
into
mov
jl
inc
aad
xchg
or
mov
sbb
lds
aas
mov
push
adc
adc
out
jb
out
out
add
pop
or
rol
or
mov
cmp
adc
jnp
xor
and
push
sti
nop
test
call
pop
sub
add
aad
ret
and
mov
sub
sbb
mov
pop
dec
loop
rol
jle
sti
popf
arpl
dec
push
nop
loope
out
or
pop
jns
sub
bound
out
cmc
add
ds
jg
sbb
mov
ficomp
or
pop
sub
and
iret
icebp
push
dec
jp
adc
outs
cli
mov
mov
(bad)
test
and
push
ja
mov
sub
or
hlt
icebp
jo
cmp
jge
mov
scas
pop
and
dec
leave
ret
xchg
rcl
stos
inc
ret
push
test
sbb
jmp
je
fcmovnbe
push
int3
mov
ret
inc
xor
dec
jb
hlt
nop
dec
movs
inc
(bad)
shl
mov
xchg
outs
and
mov
(bad)
out
xor
test
sbb
mov
jle
dec
iret
jge
or
mov
mov
sbb
mov
xlat
xor
leave
inc
fcomip
fnstsw
shl
jmp
jne
rcr
std
pop
xor
arpl
jbe
out
mov
mov
mov
lea
test
test
mov
(bad)
shl
inc
shr
mov
mov
pusha
lds
cmc
int3
nop
arpl
inc
push
popf
jmp
push
add
push
xchg
push
fsub
cmp
mov
iret
test
ret
outs
cld
push
adc
mov
mov
inc
fisttp
inc
outs
aas
xchg
sub
dec
(bad)
imul
outs
mov
adc
push
icebp
mov
inc
in
cmp
imul
xchg
scas
call
imul
jmp
wrmsr
mov
hlt
je
(bad)
jmp
push
inc
aas
mov
add
xor
push
mov
sub
mov
stc
mov
cmp
sub
aas
push
add
mov
out
dec
mov
rol
cmp
ret
fchs
mov
mov
(bad)
mov
jae
imul
xlat
rcl
retf
cmp
add
xor
push
hlt
je
mov
xchg
cmc
pop
pop
jnp
sbb
xchg
mov
mov
(bad)
sahf
inc
push
loopne
add
clc
and
iret
cmp
push
mov
outs
les
mov
jae
pushf
mov
cmps
stos
shl
cld
in
xor
stos
and
pop
fsubr
outs
retf
sub
popa
and
cli
pop
inc
or
cmps
stos
fdivr
dec
lahf
cld
mov
jae
push
cmp
(bad)
imul
scas
popa
pop
jp
mov
inc
xchg
lock
das
ins
lods
loop
ss
xchg
adc
push
outs
sbb
pusha
inc
leave
adc
sub
mov
push
leave
fstp
xchg
fiadd
imul
sbb
retf
xchg
test
pop
in
cmp
addr16
or
push
rcl
and
dec
or
mov
push
sub
aaa
xchg
and
jbe
ss
test
jle
cmps
sbb
stc
mov
dec
lds
repnz
out
inc
push
xchg
jmp
sbb
push
stos
jns
sbb
xor
mov
mov
push
and
imul
and
adc
out
or
pop
dec
in
sub
fistp
cmp
sub
cmc
retf
sub
or
aas
adc
int3
popf
dec
sub
cdq
or
nop
and
mov
daa
adc
pop
jmp
ins
fild
pop
mov
sub
xor
rcr
push
sub
pop
sub
sar
mov
mov
std
mov
jl
repz
(bad)
out
and
pusha
out
cmp
mov
sbb
pop
jecxz
loop
fidiv
movs
arpl
mov
push
call
xor
sub
loopne
jmp
ret
hlt
mov
mov
xchg
mov
repz
call
xchg
scas
mov
cmp
push
sbb
jge
sbb
and
stos
sub
mov
leave
scas
xor
jbe
and
imul
sti
shl
mov
bound
jle
adc
jno
into
jae
cli
cwde
and
jbe
daa
scas
push
xchg
push
icebp
xor
in
(bad)
mov
pop
pop
lods
daa
xor
jecxz
ror
repnz
shr
mov
popf
cmc
cwde
popf
jnp
je
jns
test
test
push
jne
jge
dec
shl
lods
jmp
xlat
inc
push
inc
push
add
pop
fbld
cmp
cmp
imul
dec
xor
mov
cli
in
movs
adc
pop
addr16
mov
jmp
adc
add
retf
push
jno
or
out
mov
(bad)
push
daa
mov
loope
test
stos
sbb
mov
sti
adc
shr
dec
adc
mov
sbb
mov
mov
sbb
ret
or
aas
in
xor
xchg
or
cmps
inc
push
hlt
sbb
mov
mov
inc
xor
adc
jg
(bad)
(bad)
out
scas
pop
add
adc
sbb
loopne
sti
jg
je
and
shl
out
xor
mov
pusha
loop
pusha
(bad)
jne
mov
sahf
fsub
jg
test
mov
daa
xchg
daa
pushf
cdq
jl
pop
jae
jo
(bad)
rcr
pop
das
or
aas
mov
or
push
bound
das
mov
lea
cwde
jns
sbb
cmp
retf
cdq
pop
popf
pop
mov
int3
push
test
popf
lahf
mov
fwait
or
clc
and
popf
jge
shl
popa
sub
xchg
repnz
cmps
and
dec
or
mov
iret
fistp
inc
push
xor
out
in
(bad)
push
jecxz
lds
setb
(bad)
in
rcl
repz
or
mov
mov
pop
lds
jmp
xlat
cmp
fdivp
mov
jp
sar
sbb
(bad)
cmp
adc
sahf
sbb
pop
int3
outs
jbe
xor
and
pop
jae
aaa
fcom
jp
add
push
dec
dec
mov
mov
sar
push
push
sub
ret
mov
fst
iret
in
pushf
sbb
sub
call
je
adc
or
jns
cwde
mov
cmps
pop
or
sti
jo
ins
jbe
mov
push
sbb
ins
jne
dec
rcr
or
ins
add
in
or
cmps
add
add
mov
fist
jle
ins
nop
or
aad
pop
cdq
add
mov
bound
in
or
stc
test
mov
loopne
adc
fiadd
and
cwde
dec
dec
enter
les
mov
leave
test
cdq
xor
mov
jp
std
xchg
ds
mov
fnstsw
ror
aad
or
dec
dec
jae
dec
and
sub
iret
mov
out
mov
into
inc
mov
bound
mov
loop
aas
dec
push
xchg
stos
daa
ret
js
cs
retf
out
gs
sbb
in
lea
push
mov
add
popf
mov
mov
fcmovu
push
test
cmc
mov
mov
shl
push
add
mov
movs
idiv
ja
xor
push
sub
mov
lock
adc
clc
push
cmp
push
daa
pop
pop
mov
mov
(bad)
push
rcr
cmps
loopne
int3
ror
icebp
cmp
test
ins
cmps
cmp
jp
pop
test
call
enter
outs
xor
shl
xor
lahf
mov
retf
lods
out
pop
xor
test
jb
pop
dec
ret
jnp
lods
jl
jge
out
ret
(bad)
xor
popf
(bad)
js
inc
in
mov
xchg
sbb
xchg
push
lahf
add
mov
fchs
test
fsub
mov
into
adc
enter
inc
jbe
jg
mov
sbb
xchg
inc
xor
pop
mov
adc
(bad)
gs
pop
int3
mov
(bad)
outs
adc
inc
int3
popf
fistp
mov
xor
icebp
mov
push
mov
popf
hlt
jmp
add
lgs
cld
push
pop
push
(bad)
sahf
cmps
pop
(bad)
daa
out
mov
sbb
or
jp
out
(bad)
xchg
dec
mov
inc
fbstp
mov
dec
sbb
mov
enter
cmps
lock
sbb
xchg
in
fld
mov
and
ds
inc
mov
xor
stc
popa
mov
lahf
shl
lahf
cli
stos
frstor
icebp
iret
xor
mov
idiv
cli
inc
ficomp
ret
imul
xor
loopne
inc
scas
jge
add
adc
lds
dec
sbb
lods
xor
add
pop
lahf
xor
sti
js
out
mov
in
ficomp
jp
mov
cmp
popa
cmp
xor
popa
xchg
sbb
xchg
daa
lock
mov
lods
dec
mov
mov
out
mov
idiv
mov
mov
mov
fwait
mov
in
mov
mov
push
out
(bad)
mov
and
sar
cmp
xor
dec
leave
lock
stos
mov
loope
loopne
dec
(bad)
push
(bad)
sbb
setl
add
mov
add
sbb
and
xchg
xor
inc
push
mov
mov
and
push
mov
popf
mov
sbb
xlat
inc
sahf
xchg
cmp
pop
ss
push
xchg
sub
push
movs
xor
mov
out
dec
adc
pop
adc
pop
add
pop
sub
mov
inc
xchg
pop
sbb
mov
xchg
xchg
sub
je
xchg
mov
jle
adc
jb
jg
sbb
ret
(bad)
std
xor
int
jmp
ret
test
fdivp
sbb
fisub
cwde
pop
retf
push
movs
cmp
loope
xchg
xor
ret
push
(bad)
cmp
push
(bad)
(bad)
ins
cmp
dec
mov
sbb
pusha
imul
push
loop
outs
jne
test
inc
push
clc
dec
add
lock
pop
adc
mov
(bad)
stos
jno
mov
and
arpl
sub
inc
push
and
out
hlt
inc
(bad)
fcmove
cmp
shl
iret
xchg
jb
push
sub
xor
shr
aam
sbb
fbld
jbe
les
jne
add
mov
adc
hlt
push
(bad)
lods
call
sar
and
ficomp
or
out
nop
push
fist
pop
js
push
inc
dec
inc
pushf
leave
jns
sbb
pop
push
or
retf
sub
adc
mov
push
test
push
and
xor
popf
addr16
sbb
dec
cmps
adc
mov
nop
arpl
fdivr
inc
dec
pop
lock
jb
ss
out
and
leave
mov
cmps
pop
jb
or
test
retf
fild
push
lods
mov
or
out
xchg
sub
add
xchg
je
inc
and
push
jmp
dec
mov
mov
and
shl
pop
pop
int3
xor
push
stos
xor
push
psrlw
fsub
aad
stos
or
outs
inc
adc
mov
and
inc
jl
aam
sub
pusha
push
lods
dec
fdivr
jns
mov
out
dec
and
xor
mov
leave
idiv
shl
je
xlat
in
in
retf
push
cs
(bad)
add
pop
not
arpl
hlt
cmp
xchg
xlat
(bad)
jg
adc
jg
inc
or
push
sbb
push
xchg
test
out
repnz
xchg
mov
lock
dec
push
pop
jnp
ret
or
loope
(bad)
mov
inc
push
sbb
lods
enter
aas
int
out
push
xor
mov
sub
call
test
mov
cmp
ret
aam
outs
push
je
pop
push
cmp
lods
mov
push
xchg
add
mov
pop
imul
aad
sbb
cmps
xchg
or
mov
(bad)
adc
in
test
pop
jno
fxch
mov
sbb
inc
push
test
sbb
(bad)
pusha
sti
in
int
popa
sbb
hlt
or
add
mov
in
fwait
mov
cmc
push
in
cmp
in
fdiv
in
mov
mov
sub
int
pop
sbb
add
xor
sbb
and
inc
clc
mov
push
xchg
lahf
push
xor
xor
loop
sbb
popf
or
or
iret
xchg
std
add
pop
test
sub
pop
mov
mov
and
push
xchg
aas
imul
int
or
ret
mov
add
std
jns
cdq
movs
sti
xor
push
push
sbb
std
scas
dec
push
in
pop
lahf
push
mov
jge
std
mov
or
enter
pop
repz
fcmovne
mov
mov
xor
sbb
mov
fiadd
popf
mov
inc
lock
ret
repnz
sbb
pop
and
inc
iret
pop
xchg
lods
mov
cmp
outs
jle
push
sbb
mov
sbb
jnp
sbb
sub
fistp
mov
sbb
(bad)
clc
cmp
ins
fstp
jne
in
sti
iret
mov
add
movs
push
sbb
loop
mov
push
test
push
add
xor
(bad)
fistp
imul
sub
mov
ret
sbb
dec
js
stos
jge
dec
or
int3
retf
(bad)
iret
fsqrt
dec
std
jmp
pop
xchg
daa
out
xchg
cmc
cdq
push
test
sahf
es
jge
pop
pop
out
cs
pop
pop
pop
cwde
mov
or
mov
mov
mov
lock
push
jo
(bad)
nop
push
in
xor
fwait
pop
icebp
in
mov
pop
jae
mov
sub
loop
cdq
shl
out
nop
pop
xchg
dec
iret
sub
div
dec
jne
je
dec
push
clc
sub
mov
push
outs
jle
out
ins
add
repnz
fisub
mov
or
sbb
int
fcom
les
jmp
ret
dec
inc
mov
(bad)
xchg
jo
addr16
sti
and
push
adc
iret
cmp
xchg
sbb
in
mov
cld
push
psubsb
jmp
ret
and
ficomp
push
mov
mov
xchg
stos
adc
or
fwait
mov
mov
sbb
pop
pop
xor
gs
lock
add
dec
inc
mov
mov
inc
nop
xor
or
dec
push
mov
std
and
xchg
add
xor
push
inc
les
popf
xchg
adc
hlt
test
dec
pushf
fs
mov
add
push
ret
fnstenv
mov
mov
aam
adc
out
stc
lahf
into
adc
mov
adc
jmp
or
mov
out
sub
mov
push
popf
out
lods
out
dec
repnz
pop
dec
out
jl
(bad)
jl
cmp
in
jle
jnp
mov
mov
pop
test
ds
dec
cwde
or
iret
jge
out
push
xchg
add
lods
and
stc
shl
imul
mov
data16
jmp
inc
or
retf
inc
sub
jbe
or
mov
mov
(bad)
fcom
push
adc
daa
(bad)
int
inc
sub
xchg
pop
adc
retf
test
(bad)
sub
fisub
enter
(bad)
mov
imul
and
fld
inc
(bad)
sbb
mov
rol
adc
popf
out
inc
sbb
imul
push
mov
test
mov
inc
jg
jne
mov
cmp
dec
dec
lea
dec
mov
pop
mov
mov
push
or
add
jae
mov
rcl
mov
dec
rol
pop
mov
xchg
stos
popf
or
mov
mov
push
mov
jmp
clc
aas
out
pushf
dec
mov
movs
pop
aaa
dec
dec
dec
sbb
(bad)
clc
mov
repz
sbb
test
das
cmp
xor
add
jge
test
mov
jecxz
into
mov
bswap
(bad)
pop
xor
aam
xchg
(bad)
sub
(bad)
(bad)
push
jmp
ret
cmovne
cmp
fs
cdq
jmp
sub
jnp
jmp
arpl
add
jg
xlat
xor
sub
xchg
fld
out
std
es
xlat
sub
(bad)
test
mov
mov
inc
leave
(bad)
sub
imul
loope
sub
sub
arpl
and
pop
mov
loop
call
jp
lock
or
repnz
mov
jge
add
nop
or
sbb
loopne
push
cmp
push
mov
movs
mul
xlat
imul
inc
(bad)
and
ficomp
pop
test
cmps
mov
in
xor
cmp
inc
cmp
xor
mov
jg
sbb
and
adc
or
fldcw
xor
jo
and
jb
sbb
rcl
push
adc
xor
lahf
pop
mov
mov
and
jp
or
sub
test
das
push
iret
mov
(bad)
cmc
add
dec
popa
into
mov
push
mov
out
mov
xchg
mov
cwde
cmp
push
dec
cmp
enter
mov
xor
xchg
push
loop
push
xor
xor
add
jne
mov
xor
shl
and
push
sar
sar
pusha
inc
loopne
mov
cli
dec
xor
mov
mov
xor
repz
mov
std
or
and
inc
(bad)
cmp
xchg
or
(bad)
fnsave
jecxz
or
xchg
pop
mov
div
test
sub
mov
and
(bad)
dec
iret
dec
dec
leave
xor
rol
inc
inc
(bad)
les
inc
dec
(bad)
push
inc
xchg
mov
and
or
xchg
fwait
iret
mov
or
adc
inc
les
and
mov
or
out
dec
enter
cmp
int3
or
xchg
dec
outs
and
push
xor
xlat
mov
ins
hlt
xor
jmp
das
jno
push
add
test
rcl
outs
aaa
rcr
inc
mov
push
sub
movs
push
aas
inc
dec
cmps
mov
add
loope
push
icebp
test
push
stos
mov
dec
inc
pop
inc
ja
xor
out
sbb
bound
dec
popa
xlat
cmps
mov
scas
fmul
ficomp
rcr
push
xor
stos
ror
stos
fwait
inc
dec
sub
push
test
adc
push
cmps
and
rcl
aam
test
(bad)
pop
popf
jb
adc
dec
jnp
cmp
and
mov
add
inc
xchg
les
imul
and
dec
sub
lods
adc
ror
add
add
adc
rcl
les
and
je
fisttp
and
push
pop
arpl
pusha
add
ret
adc
mov
test
push
popf
mov
mov
add
add
add
inc
pop
xchg
pop
fdiv
jmp
jl
arpl
inc
loop
add
cld
push
add
outs
inc
aam
ins
shr
xchg
sbb
jb
(bad)
cld
sub
fld
inc
icebp
xor
push
and
scas
repnz
add
mov
sub
mov
dec
add
inc
pinsrw
push
or
mov
and
stc
lods
enter
aaa
jecxz
push
pushf
movs
pop
dec
xchg
push
push
or
mov
mov
mov
mov
jmp
adc
js
lahf
fwait
mov
xor
ja
sub
fwait
mov
mov
ja
pop
in
xchg
ja
dec
mov
jmp
in
xchg
and
push
sti
mov
sahf
clc
outs
jge
pop
jnp
pop
repz
push
inc
out
int3
or
or
push
or
inc
fimul
inc
pop
aam
dec
cmp
sub
mov
data16
xchg
loopne
hlt
jp
dec
push
outs
out
sub
dec
dec
cmc
push
aas
dec
cmp
mov
in
mov
mov
or
loope
(bad)
xor
xchg
lds
aaa
sub
or
sbb
fmul
adc
xor
and
inc
sahf
pop
outs
add
imul
inc
rol
mov
mov
mov
call
enter
ja
jae
xor
adc
jb
sub
jns
and
xor
and
push
jno
repz
add
pop
hlt
push
aaa
xlat
cs
nop
das
aas
add
and
ror
ins
sub
les
push
out
test
mov
adc
add
adc
retf
mov
and
dec
icebp
nop
dec
movs
and
add
sub
scas
lods
and
mov
fsub
shr
inc
adc
sbb
add
dec
mov
mov
in
dec
pop
add
sub
jmp
sbb
inc
adc
nop
jne
mov
mov
aaa
(bad)
and
and
(bad)
add
xlat
js
xchg
lock
or
pop
test
inc
jmp
or
add
add
leave
mov
ret
test
add
lock
push
push
mov
jne
lods
cmp
add
daa
rcl
daa
pop
scas
add
call
and
mov
adc
mov
retf
out
retf
mov
test
movs
sahf
or
call
ret
loop
sti
xor
mov
into
es
cmps
pop
fstp
xchg
mov
xchg
push
mov
fidivr
bound
cmp
dec
inc
or
pop
or
fnsave
jmp
fld
rcl
adc
cwde
lock
cld
mov
dec
jmp
ss
in
sub
sub
adc
cmp
and
pop
ds
rcl
cmp
or
enter
inc
je
dec
mov
mov
dec
cld
add
popa
lock
jne
sub
jmp
add
xor
or
sbb
call
jmp
pop
out
cmc
or
xor
and
add
mov
push
retf
xor
pop
shr
test
ds
push
dec
ins
inc
fisubr
and
fnsave
cld
rcl
cmps
push
repz
imul
jp
mov
xchg
loop
das
aaa
mov
test
push
xchg
js
xor
xor
mov
cdq
dec
cld
jno
jns
dec
dec
xor
jae
dec
push
lods
test
call
int3
inc
cwde
and
ss
cmp
xchg
mov
inc
and
rcl
adc
push
adc
icebp
mov
movs
push
mov
div
push
pop
(bad)
out
pop
pop
cmp
lods
dec
outs
pop
pusha
iret
stos
and
out
js
nop
sub
push
or
pop
cmps
ss
sbb
push
mov
cs
push
retf
dec
into
pop
push
xchg
inc
pusha
sbb
sub
sbb
xor
adc
adc
add
jo
loopne
ins
pusha
je
cmp
aam
shr
inc
dec
mov
retf
inc
jno
popa
and
add
sar
and
add
js
inc
sar
push
out
dec
inc
ins
mov
(bad)
mov
(bad)
retf
or
push
call
and
xchg
sbb
cmps
xchg
jge
or
and
rcl
lock
add
mov
push
arpl
fisttp
and
dec
scas
or
mov
or
retf
outs
arpl
in
bound
dec
outs
add
(bad)
(bad)
mov
rol
cmc
iret
inc
arpl
add
jge
sbb
push
popf
movs
push
add
sbb
into
sti
push
fcomip
pop
in
xchg
pop
inc
lds
ins
rcl
mov
je
mov
inc
(bad)
inc
cs
jl
js
rol
mov
call
cdq
retf
adc
es
sub
jl
jo
repz
ret
mov
not
push
or
xchg
adc
jae
js
jbe
sar
adc
jne
arpl
cmp
iret
adc
clc
lock
push
xlat
daa
and
sub
mov
add
or
sub
nop
jbe
lds
ror
dec
in
hlt
mov
in
sahf
pop
lahf
imul
fs
int
cmc
imul
clc
and
mov
mov
js
or
mov
mov
sub
mov
mul
pop
adc
add
xchg
push
dec
data16
ret
mov
sub
mov
into
mov
repnz
call
mov
inc
loope
ret
test
rcr
jnp
adc
sar
jg
test
push
scas
into
mov
and
jne
lahf
or
xor
add
mov
xor
pop
pop
pop
adc
sub
daa
sbb
ins
ins
xor
lea
jmp
shr
or
dec
hlt
mov
xor
cmp
fdivr
sub
jecxz
cmp
jbe
push
and
cmp
jnp
das
aam
pushf
test
es
rcl
scas
lahf
push
jl
(bad)
jmp
inc
or
retf
mov
sti
(bad)
jl
push
imul
out
and
dec
ficom
lock
lea
daa
xchg
dec
sahf
or
push
in
repz
lods
cmps
stos
sub
rcr
sub
jle
sbb
loope
dec
sbb
enter
in
test
xchg
cmp
jp
cmp
test
cmc
xor
jge
int3
adc
in
cmps
hlt
fsin
xchg
lods
lahf
jmp
popa
test
mov
scas
es
mov
adc
push
add
fnsave
adc
mov
pushf
(bad)
fiadd
pop
popa
ror
rol
leave
enter
ins
mov
cli
mov
scas
sub
fld
out
or
dec
data16
pop
fs
fdiv
inc
outs
push
add
shl
adc
inc
sub
add
add
adc
jle
xlat
xchg
call
add
mov
int
fisttp
mov
mov
mov
stos
adc
inc
mov
enter
or
neg
add
jle
rol
and
aaa
mov
test
push
movs
mov
dec
and
retf
push
fld
ror
loop
(bad)
mov
inc
sub
adc
push
adc
dec
adc
aaa
call
xor
cwde
pop
inc
call
pop
fistp
daa
cmp
int
xchg
mov
aaa
ficomp
outs
mov
adc
jecxz
pop
push
aam
xchg
fwait
pop
sbb
fstp
and
cmp
xor
push
dec
push
call
mov
xor
ss
sbb
inc
pop
and
sub
jae
jecxz
(bad)
aad
push
gs
mov
test
pop
xchg
jmp
push
imul
dec
xchg
dec
push
arpl
push
add
adc
in
push
sbb
add
into
(bad)
dec
stos
fimul
es
call
jne
push
or
shr
jmp
scas
in
xchg
xor
out
pop
cmp
fxtract
jae
daa
stos
dec
jbe
push
jbe
retf
push
pop
sbb
pop
adc
or
(bad)
mul
inc
ficomp
(bad)
pop
inc
fiadd
mov
out
iret
mov
xchg
popa
in
les
lods
adc
int
(bad)
retf
sbb
push
data16
(bad)
cmp
test
cli
adc
mov
pop
push
ret
(bad)
nop
push
imul
jmp
or
push
add
and
pop
ret
daa
and
jl
js
rcr
fdiv
jle
cld
or
pop
cmp
dec
in
retf
mov
sub
aaa
test
pop
leave
dec
leave
das
mov
stc
cld
or
push
retf
ss
inc
mov
aam
dec
jp
jb
fistp
test
stos
test
cmps
push
mov
lds
call
ret
retf
cmp
adc
aaa
pop
or
adc
sahf
jno
jno
aas
sar
jge
pop
jge
mov
dec
jecxz
xchg
jnp
xor
xchg
sbb
push
adc
cwde
data16
es
pop
xchg
sub
jno
in
inc
mov
dec
shl
loope
loope
or
or
mov
popa
sahf
inc
(bad)
pop
out
pop
jle
mov
adc
loop
out
(bad)
test
and
sub
sbb
mov
test
scas
sar
(bad)
inc
in
and
iret
rcr
fnsave
and
dec
xor
sbb
(bad)
mov
ret
and
arpl
pusha
fsubp
outs
iret
sub
xchg
mov
loop
push
xchg
or
mov
sti
push
loopne
gs
mov
in
pop
out
pop
adc
mov
idiv
test
adc
xchg
pusha
fsub
int
fmul
sbb
ins
adc
mov
mov
mov
fwait
dec
aas
xchg
mov
int3
xchg
push
jge
pop
call
fwait
xchg
imul
call
(bad)
jnp
call
out
jp
sbb
xchg
icebp
lahf
sub
not
iret
(bad)
ins
adc
xor
lock
aam
pop
xor
je
dec
push
pop
into
aad
sti
cmp
mov
jl
shl
(bad)
sub
dec
cmp
(bad)
mov
shl
imul
ds
ins
sub
sub
push
fld
out
fmul
not
pop
call
add
repnz
and
lds
pop
mov
shr
(bad)
outs
cmp
jmp
shr
(bad)
sub
jb
call
daa
mov
sub
xchg
and
adc
bound
cmp
mov
xchg
outs
jp
or
lahf
pushf
jbe
(bad)
dec
jae
ret
fst
and
push
jno
cmp
dec
out
and
push
cs
aad
pop
jae
xchg
fs
idiv
cdq
es
fs
xor
mov
loope
js
in
push
mov
test
lods
sub
enter
mov
or
ds
mov
sub
mov
(bad)
jo
adc
sub
sub
pusha
retf
or
adc
jbe
(bad)
or
jg
stc
pop
bnd
ss
in
jb
fst
cmp
imul
in
mov
jmp
push
sar
bound
or
sub
jno
scas
js
dec
jg
ja
imul
jne
(bad)
iret
addr16
mov
inc
jno
icebp
pop
adc
sti
add
inc
add
(bad)
out
imul
pusha
les
xchg
stc
ins
add
iret
adc
mov
jecxz
inc
arpl
out
mov
mov
or
xor
test
imul
jne
fbld
cmp
scas
mov
push
dec
jp
out
cmp
mov
loop
fistp
push
lods
ja
std
(bad)
xchg
dec
jbe
and
sub
xchg
jns
jmp
cwde
into
inc
aad
clc
push
neg
out
push
call
ds
daa
and
rol
jbe
mov
retf
fwait
mov
push
out
stc
aaa
mov
shl
cmp
icebp
icebp
ret
xchg
pop
pop
cmps
addr16
jbe
mov
jb
aad
popa
jo
push
fbstp
cwde
(bad)
jp
pop
sbb
inc
in
jle
iret
and
pop
(bad)
mov
pop
fisub
xchg
movs
cmp
xchg
and
je
data16
jo
fxch
rcl
popa
in
push
and
(bad)
jle
xchg
adc
repz
in
mov
add
jmp
pop
cmps
push
outs
inc
clc
mov
mov
and
pusha
and
pop
in
mov
shl
test
mov
mov
sar
int3
jge
and
test
push
out
xor
jne
mov
jmp
jbe
mov
clc
imul
cmp
inc
(bad)
retf
aaa
in
dec
fwait
movs
ror
push
stos
ds
add
mov
jmp
les
fwait
jmp
pusha
cld
nop
push
jne
push
bnd
xlat
daa
sub
sbb
push
adc
mov
mov
cmp
in
xchg
aaa
call
sub
in
ret
mov
sub
leave
es
dec
sub
icebp
rcl
mov
data16
cwde
movs
mov
cwde
scas
mov
or
jp
call
(bad)
aaa
data16
xor
in
xchg
and
stos
jl
lds
cmp
inc
or
push
test
fisttp
jbe
repz
cmps
push
arpl
mov
out
xchg
sbb
push
or
sbb
jb
pop
packuswb
and
(bad)
sbb
fistp
and
mov
mov
push
sbb
adc
scas
xlat
jae
rol
jmp
ret
xchg
inc
sbb
nop
xor
sti
popa
xlat
and
stc
dec
mov
sbb
mul
popf
mov
clc
or
out
ss
and
dec
jmp
fstp
out
call
jae
cmc
xor
cmp
dec
jae
imul
dec
cmp
xor
inc
dec
xchg
push
mov
ds
cs
iret
xchg
repnz
inc
scas
xchg
dec
jae
mov
inc
inc
mov
pop
ins
jecxz
cmp
out
(bad)
or
pushf
or
(bad)
js
push
mov
nop
pop
out
jo
repz
mov
in
movs
jb
cmp
cmp
jo
push
out
lea
dec
pushf
cmp
or
sbb
fdiv
data16
pop
push
pop
xchg
mov
cmp
test
dec
inc
mov
into
xchg
pop
pop
cmps
jo
mov
xor
enter
sbb
std
enter
(bad)
or
inc
sub
mov
ds
in
sti
jae
jmp
jbe
into
sbb
lahf
jae
or
jecxz
in
out
movs
jg
cmp
loop
cli
xor
push
jp
pop
(bad)
mov
adc
sub
or
inc
rol
sti
sbb
sub
nop
mov
aad
retf
ficom
xor
inc
std
ins
imul
mov
ds
push
push
call
in
xor
pushf
mov
jmp
adc
sbb
xchg
outs
xchg
icebp
jno
dec
arpl
aad
fnstcw
cmp
jb
jmp
int3
das
add
fxch
mov
push
push
and
xchg
mov
not
jle
out
lock
je
pop
fidiv
mov
lea
test
test
xor
ins
in
mov
jnp
cmp
cld
push
test
icebp
jmp
(bad)
aas
push
imul
pop
das
aas
icebp
mov
pusha
mov
icebp
sbb
aas
aad
clc
cmp
mov
shl
(bad)
dec
lahf
push
sbb
add
movs
(bad)
(bad)
mov
mov
sar
sbb
addr16
aas
dec
adc
inc
cmp
or
pop
xchg
sahf
ins
inc
inc
sub
cmp
mov
xor
jmp
stos
mov
aam
mov
sub
mov
pop
ins
adc
xchg
lea
jmp
mov
xchg
(bad)
lahf
xchg
cmp
cld
jnp
dec
mov
push
sbb
adc
sbb
(bad)
add
or
rcr
int
pop
out
in
(bad)
cmps
xchg
mov
mov
jo
addr16
movs
(bad)
aad
loop
loope
loop
repnz
mov
push
lds
pop
cdq
xchg
push
adc
stos
or
bound
aas
aad
int
popa
dec
fwait
push
push
scas
sub
push
adc
add
pop
aad
sub
rol
mov
push
popa
aad
mov
jnp
lahf
push
and
and
adc
add
inc
inc
ins
ret
dec
enter
mov
pop
cmp
dec
in
sbb
lock
mov
ds
in
inc
push
cmp
push
ror
pop
inc
ror
xchg
mov
push
inc
scas
call
cmp
test
je
clc
ja
sub
cdq
xchg
pop
scas
jecxz
cmp
pop
in
jecxz
cs
dec
outs
cmp
call
cmp
mov
imul
fs
cli
ds
sti
cli
imul
mov
fimul
outs
out
inc
lahf
mov
int
lds
ret
mov
fwait
(bad)
data16
jb
stc
in
mov
stos
sub
mov
inc
in
retf
out
jl
adc
pop
(bad)
push
(bad)
int
xor
lds
or
neg
fiadd
jb
loop
push
xchg
adc
inc
pop
add
sub
(bad)
jle
dec
cmp
sub
and
fwait
retf
sbb
std
push
jg
in
mov
pop
pop
into
sbb
jg
pop
dec
in
xor
sbb
inc
(bad)
jns
fisttp
call
or
repnz
or
mov
mov
xor
pop
fsubr
push
loopne
adc
xchg
jns
xor
fistp
out
xlat
mov
bound
ret
dec
rol
(bad)
sbb
cmp
or
cwde
fwait
jmp
adc
in
call
cli
int3
stos
xor
pop
xor
pop
sub
mov
icebp
ins
inc
jle
test
cmp
cmps
jmp
movd
push
lods
mov
arpl
ins
dec
xor
push
ss
loop
pop
(bad)
in
jmp
test
les
jl
(bad)
ds
imul
xchg
sub
into
mov
test
ret
test
clc
jbe
and
mov
mov
(bad)
std
mov
cwde
push
jecxz
jle
fcom
push
mov
push
jbe
aad
pop
xchg
data16
cld
fst
mov
push
fidivr
fwait
cmps
and
add
bound
aad
mov
jmp
pusha
imul
mov
repnz
test
bound
into
(bad)
sbb
popf
add
retf
ins
mov
test
mov
fstp
xor
lds
fimul
aam
mov
inc
mov
adc
(bad)
ficomp
das
cmp
jno
adc
sub
inc
arpl
jl
mov
ins
and
and
xchg
or
pop
add
retf
call
add
stc
lock
pop
mov
popf
push
cli
iret
mov
mov
in
cli
call
cmp
fucomip
(bad)
enter
cmp
jmp
outs
call
xor
mov
sbb
in
in
out
mov
dec
mov
mov
jl
call
(bad)
dec
ficom
jne
test
hlt
xchg
mov
addr16
sub
and
fimul
xor
jnp
sub
mov
repz
sub
xor
pop
loope
jl
std
test
(bad)
in
and
jo
std
dec
stos
xor
and
push
cwde
scas
out
jmp
aam
sub
not
call
scas
push
in
push
aad
push
sub
ja
sahf
fild
out
xor
out
fadd
ins
jmp
pop
pop
repz
xchg
sub
xchg
mov
fist
sub
outs
(bad)
jno
dec
jg
popa
arpl
adc
ds
push
mov
xor
jle
xor
int
lods
or
mov
jge
call
fisttp
or
and
and
retf
clc
das
mov
(bad)
pushf
data16
loopne
icebp
es
retf
mov
and
outs
ins
inc
test
jl
stos
data16
xchg
xchg
mov
int
aam
push
inc
pop
in
mov
clc
push
mov
mov
jae
pop
lock
mov
sbb
call
cmp
dec
outs
and
cs
jmp
inc
mov
xchg
scas
and
cmp
bound
add
cwde
stos
mov
jge
jle
dec
add
xor
movs
ss
cmp
or
pop
rcr
repz
mov
arpl
loope
mov
inc
movs
test
adc
mov
pop
jle
clc
jg
mov
shr
pusha
pop
xchg
fwait
mov
js
cwde
(bad)
cmps
outs
(bad)
fistp
add
ins
sub
test
dec
out
mov
loop
push
mov
mov
mov
into
jge
into
outs
loope
fs
xchg
cld
xchg
lahf
jmp
dec
repnz
mov
xchg
das
cmp
aas
sbb
ret
clc
mov
jmp
inc
lea
fs
push
sbb
out
add
adc
pop
daa
cmc
repz
add
cmps
das
pop
mov
jns
outs
pop
mov
and
ret
cmp
(bad)
jg
jmp
push
movs
in
int
pop
mov
(bad)
hlt
pop
add
mov
fldenv
mov
dec
dec
xlat
xchg
sbb
mov
push
add
and
mov
inc
aad
dec
int3
cmps
jge
and
mov
or
push
cmp
push
dec
mov
movs
not
push
xchg
pop
std
xchg
inc
pop
cld
outs
pop
addr16
sub
sbb
ret
sti
dec
stos
mov
pushf
adc
fmul
adc
mov
mov
mov
aas
and
iret
adc
test
and
inc
mov
iret
dec
aad
fisttp
xchg
aaa
fmul
stc
adc
aaa
movs
xchg
mov
mov
push
pop
mov
xor
lods
mov
nop
les
in
out
stc
jmp
push
sbb
fdivr
icebp
enter
imul
jl
addr16
das
mov
mov
popf
fcom
jno
aaa
add
neg
test
outs
out
sbb
lahf
pop
push
pop
mov
cwde
mov
jo
push
sub
cmp
xor
mov
xor
les
in
(bad)
mov
imul
fmul
inc
fdivr
pop
mul
jbe
test
jmp
mov
mov
js
imul
mov
lahf
push
clc
cmps
push
jmp
mov
cmp
ss
icebp
loop
stc
ret
enter
mov
ficomp
mov
and
out
sub
inc
cmp
xor
mov
(bad)
shl
lock
mov
push
stos
in
jecxz
jle
addr16
xlat
mov
ror
jo
gs
and
jle
pop
add
cmp
sti
ja
aas
jae
fbld
or
popf
push
xchg
loop
lods
shl
add
stos
imul
cmp
pslld
mov
scas
jns
xor
call
jmp
dec
cwde
leave
inc
in
sar
jp
jns
and
jecxz
mov
imul
sub
(bad)
sahf
mov
pop
or
sub
mov
arpl
adc
jge
xchg
outs
test
jne
stos
cwde
(bad)
int3
out
xor
add
dec
sub
ret
in
data16
movs
std
int3
loop
add
in
clc
pop
mov
leave
xchg
aad
or
mov
lahf
movs
cmp
movs
jg
(bad)
push
mov
pushf
and
mov
je
inc
push
sbb
pushf
mov
aad
call
dec
mov
fild
xor
movs
cmp
cmp
push
int
jb
mov
rcr
jnp
and
mov
mov
adc
add
or
mov
test
test
test
mul
shr
push
mov
inc
cmp
jb
nop
cmp
mov
mov
retf
sti
pop
xchg
ds
ins
cld
js
adc
arpl
jle
jo
outs
gs
mov
pop
mov
inc
(bad)
outs
rcr
pop
fstp
jle
xor
add
movs
mov
mov
xchg
fmul
push
xor
movs
arpl
mov
cld
pop
fisubr
add
and
and
ffreep
test
aad
mov
in
mov
nop
push
push
xor
xlat
inc
pop
iret
call
add
push
mov
bound
jno
(bad)
xchg
inc
test
adc
lock
sbb
mov
cmps
or
adc
jg
hlt
test
inc
(bad)
call
xchg
mov
ficomp
pop
mov
fst
inc
leave
pop
lea
cmp
push
or
daa
cmps
repz
cmp
sub
pop
sti
outs
inc
stc
jmp
cdq
xchg
add
mov
cmc
gs
push
out
cs
scas
movs
inc
js
shr
jo
mov
ja
sub
loope
cwde
dec
mov
stos
inc
lods
sbb
pop
xor
addr16
adc
cli
shl
daa
fcom
jmp
int3
cli
xchg
pop
push
fld
mov
inc
inc
fidiv
stc
xor
loopne
push
je
fcom
jns
cdq
mov
jno
mov
call
popa
or
pop
sub
push
mov
test
std
mov
mov
jge
js
mov
mov
jge
in
xchg
jo
lds
mov
scas
stc
cs
mov
nop
fmul
popa
sahf
lahf
and
stos
add
mov
mov
lahf
call
scas
pop
mov
(bad)
cld
aaa
stc
sub
or
dec
jge
fstp
repnz
mov
scas
sbb
and
rol
xor
jmp
fwait
out
xchg
sbb
pushf
dec
sar
ds
mov
jbe
call
scas
jne
int3
dec
sub
add
aas
mov
or
outs
daa
lods
push
cmp
in
imul
(bad)
in
pop
mov
popf
push
int3
stos
call
mov
jo
pop
mov
jl
sbb
mov
aaa
inc
mov
in
out
cmp
or
mov
dec
dec
xlat
jno
gs
clc
cmc
aas
inc
ja
sti
int
jmp
xor
inc
push
inc
icebp
jl
sahf
dec
xchg
rcr
call
fstp
ret
dec
out
imul
int
lahf
shl
mov
movaps
sub
push
call
fcom
mov
jnp
xchg
pop
leave
test
bound
and
and
test
ins
aaa
popf
jl
pop
mov
pusha
aam
div
ror
ss
push
xchg
ja
pop
inc
(bad)
mov
jg
cdq
das
sub
mov
repnz
dec
jl
mov
xchg
jbe
jmp
mov
aas
enter
aam
mov
xchg
ins
cmc
es
push
mov
scas
bound
jne
vpaddb
jbe
xlat
addr16
into
imul
xchg
cld
in
imul
outs
xchg
or
cmp
jmp
dec
movs
push
in
pushf
out
xor
inc
mov
(bad)
in
sub
daa
mov
inc
pusha
sar
pop
jno
cmp
xchg
ds
xchg
(bad)
shl
retf
rcl
call
dec
mov
pop
ror
mov
or
xchg
xchg
sub
jnp
iret
xchg
out
cmp
mov
pop
mov
clc
ss
lock
mov
shl
je
sbb
out
fmul
leave
mov
inc
jo
mov
sbb
je
cmp
inc
push
cmp
dec
mov
cmp
ret
adc
sbb
outs
xor
pop
add
repnz
push
inc
or
je
test
dec
dec
retf
cmp
and
inc
and
inc
and
data16
push
mov
cmp
and
cmc
adc
and
xchg
pop
or
dec
js
cmp
lods
mov
leave
xchg
ror
add
xor
imul
push
sbb
(bad)
pop
movs
scas
lock
jo
push
sahf
jecxz
iret
ficomp
push
mov
js
retf
mov
mov
ins
pusha
adc
jnp
lods
jmp
push
mov
rcl
inc
shl
dec
(bad)
jle
pop
faddp
outs
sahf
push
push
outs
push
xchg
mov
sub
es
pop
icebp
push
lods
pop
lods
test
mov
sub
fdivr
bound
jecxz
jo
into
fstp
test
sti
aad
repnz
test
mov
iret
aaa
jg
sbb
cmp
out
arpl
adc
(bad)
and
not
bnd
jle
pop
repz
(bad)
dec
jmp
stos
or
fld
dec
inc
js
movs
sbb
push
cmp
jb
inc
imul
cmp
ret
xchg
mul
aaa
mov
sbb
rcr
dec
repz
cld
popf
mov
das
les
cmps
(bad)
sub
movs
jb
std
inc
mov
xor
rcr
cdq
cs
cmp
jp
aaa
mov
inc
adc
mov
aaa
inc
shr
jecxz
pushf
out
enter
xchg
jmp
fmul
repnz
fcmove
mov
xor
sub
xchg
mov
pop
gs
aas
in
(bad)
lahf
or
je
or
in
add
ins
sbb
xchg
push
mov
mov
add
jnp
stos
jnp
xor
(bad)
cmp
cmp
adc
jne
jno
add
icebp
add
push
in
inc
(bad)
sbb
xchg
mov
adc
ffree
push
sub
mov
addr16
cld
sub
pop
stc
xor
pop
pop
repz
inc
xor
dec
clc
mov
addr16
out
cli
sub
sbb
xchg
jns
ds
pop
ror
pop
xchg
mov
rcl
xchg
push
mov
lock
sub
push
add
jp
pop
or
jmp
stos
movs
xor
(bad)
mov
enter
ror
pop
mov
cmp
push
into
(bad)
or
lods
stos
call
(bad)
cmp
mov
ds
loope
test
mov
mov
mov
dec
mov
jmp
aas
pop
jle
sti
rol
outs
sub
sub
cmp
lods
ins
adc
sbb
ret
mov
fimul
cmc
mov
bound
adc
out
in
mov
mov
clc
adc
sbb
sub
mov
sahf
lock
pop
push
inc
pusha
or
lods
jns
push
push
cmps
and
ret
jo
sahf
jecxz
or
pusha
or
push
and
cmp
imul
lahf
cs
xor
push
xchg
fwait
cwde
mov
lods
scas
mov
(bad)
in
pusha
sub
inc
pusha
add
out
and
lock
mov
sbb
in
sahf
ja
adc
or
leave
jno
mov
inc
mov
sbb
fidivr
mov
xor
arpl
xlat
repnz
aad
dec
retf
mov
int3
rol
inc
rol
mov
mov
ins
and
clc
push
sbb
jg
fxch
aaa
or
ja
rcr
cmp
icebp
leave
call
popf
sbb
in
mov
fisubr
in
imul
scas
stc
repz
inc
mov
dec
jl
cmp
lahf
push
pop
call
jg
adc
call
sti
sbb
sbb
dec
aaa
pop
mov
sbb
mov
xchg
into
mov
ret
in
push
les
fild
dec
xchg
std
test
jae
lods
inc
sub
out
outs
clc
xchg
das
js
and
sti
or
les
push
aaa
or
or
jae
movs
(bad)
pusha
dec
cmp
inc
sub
pop
push
mov
xchg
into
dec
lods
(bad)
retf
and
jg
and
pop
mov
outs
xchg
call
dec
xor
fucomp
mov
xor
xchg
fisub
mov
aaa
test
iret
sub
add
push
retf
int
xor
and
inc
out
jl
dec
out
jae
aaa
bound
mov
cmp
leave
mov
iret
mov
mov
xchg
xchg
loopne
mov
cli
pop
push
ds
in
add
or
pop
push
pop
mov
xlat
dec
fcom
mov
sbb
lahf
jmp
outs
dec
push
iret
sub
cmp
pusha
push
mov
lds
scas
(bad)
jne
in
je
jo
arpl
mov
ds
and
jns
sti
or
inc
movs
jbe
sub
fcomp
imul
and
cmp
into
(bad)
mov
pusha
in
pop
gs
iret
jge
xor
movs
(bad)
and
push
(bad)
mov
xor
sbb
push
add
(bad)
out
add
(bad)
cmps
mov
pop
int3
push
je
fisub
lods
in
fstp
pop
add
scas
jmp
mov
out
push
int3
stos
push
int3
xor
aam
push
test
mov
cmp
jecxz
test
and
fnstcw
in
cli
mov
cmp
pop
test
add
fbstp
adc
pop
pop
pop
push
int3
dec
xchg
das
inc
inc
dec
cld
rol
ret
push
mov
lods
cmps
inc
(bad)
dec
icebp
shl
mov
dec
and
adc
sti
dec
(bad)
test
lods
jno
adc
sti
stos
retf
outs
or
mov
mov
mov
adc
mov
shl
dec
mov
ins
in
daa
xchg
cmp
jb
adc
adc
ja
arpl
jbe
dec
lock
movs
ja
push
jle
push
add
test
outs
outs
xchg
mov
push
not
in
xlat
and
jmp
dec
clc
mov
dec
push
mov
fadd
pop
lods
xchg
dec
xor
cmp
jns
dec
mov
in
fwait
jno
dec
ins
jne
pop
test
pop
outs
rcl
fs
dec
lds
xor
add
jo
dec
xor
shl
xchg
in
out
mov
jae
mov
and
sub
in
mov
je
mov
mov
(bad)
jo
shl
xlat
dec
out
daa
jb
popf
add
or
(bad)
push
aad
daa
sbb
inc
dec
movs
test
adc
adc
inc
sub
mov
dec
stos
jl
mov
dec
jmp
jge
(bad)
cmps
stc
loop
div
push
add
cmp
mov
ret
cmp
pop
xchg
push
lods
dec
in
fcmove
popf
les
push
pop
sbb
xchg
jne
dec
lock
aad
mov
push
arpl
push
mov
test
call
jb
neg
out
pusha
lods
mov
inc
cdq
inc
sbb
js
and
add
in
inc
mov
push
dec
imul
outs
call
add
nop
xchg
adc
fs
rcr
in
or
mov
pop
inc
and
push
xor
aad
mov
adc
pop
into
test
mov
add
pop
xor
nop
push
aas
mov
test
xchg
mov
cmp
in
dec
(bad)
sub
fadd
fs
fsub
ins
mov
test
repz
xchg
ins
ins
stos
int
or
(bad)
dec
dec
cmps
jle
ins
aas
push
jmp
(bad)
jmp
cs
mov
fadd
movs
outs
test
xchg
lock
xlat
xchg
xchg
mov
push
and
pusha
lahf
pusha
std
fs
pop
sahf
or
dec
pmulhuw
jo
iret
das
call
dec
out
bound
shr
pop
stos
push
cmps
mov
cmp
in
mov
fcmovne
pop
inc
stc
sub
jle
push
adc
outs
and
push
xchg
outs
lods
cmps
cmp
and
mov
aam
xchg
in
inc
clc
es
test
out
dec
cmp
adc
mov
sub
mov
or
xchg
cmp
sub
nop
test
push
dec
push
xchg
inc
repz
jg
mov
sbb
aad
test
xchg
in
mov
cmp
mov
sub
dec
clc
pop
and
push
jo
add
in
pop
jmp
fmul
mov
and
sbb
retf
(bad)
aam
scas
inc
daa
(bad)
ror
ins
ror
iret
add
lock
clc
repz
pop
inc
sub
mov
sub
cwde
shl
mov
loopne
adc
mov
push
test
movs
adc
mov
movs
jo
sbb
retf
jmp
les
mov
rol
icebp
fwait
adc
cmc
les
jbe
mov
pop
jns
jmp
mov
loopne
sub
inc
jge
add
fisttp
movs
stos
ja
aas
out
xchg
mov
jae
pop
pushf
jg
retf
jmp
inc
dec
ret
adc
or
stc
repz
xchg
cmps
xor
add
inc
out
push
or
push
cld
sbb
xchg
inc
jecxz
cmp
xlat
idiv
push
mov
in
pop
xlat
stc
xchg
in
shr
add
adc
test
test
pop
jmp
test
mov
cmps
and
stos
dec
lds
movs
rcl
sbb
xchg
mov
jbe
mov
and
or
xor
adc
cmp
pop
adc
dec
gs
or
inc
clc
dec
into
cld
mov
adc
js
xchg
cmps
jmp
adc
push
cmps
(bad)
fs
or
xor
rcl
std
into
or
in
lods
add
dec
cmp
movs
mov
adc
and
pushf
data16
xchg
ins
fisttp
fdiv
xchg
pop
scas
outs
push
mov
push
jg
push
pop
add
sbb
add
nop
daa
stos
and
loope
xchg
and
mov
aas
push
and
adc
push
sahf
mov
xor
stos
jae
add
gs
cld
xor
and
movs
mov
imul
inc
push
das
or
(bad)
jl
(bad)
cmovne
sub
retf
imul
or
or
inc
stos
hlt
dec
jg
sub
ret
sbb
adc
cmp
xchg
nop
cld
enter
jl
inc
xlat
pushf
ds
ror
cmp
or
pop
cmps
out
sub
mov
pop
ds
fnstcw
push
adc
inc
adc
mov
push
es
mov
mov
dec
out
jno
int
sar
pop
mov
pop
sbb
add
dec
xchg
xchg
mov
cmps
call
mov
lods
shl
cmps
fld
xchg
or
fs
xor
nop
add
add
out
cmp
mov
addr16
clc
dec
test
pop
jmp
les
sbb
push
stos
jbe
cli
inc
sub
movs
push
fs
dec
xchg
mov
sbb
aas
pop
add
sub
fistp
stc
ret
(bad)
bound
stos
add
cmp
dec
ja
out
repnz
xchg
jecxz
(bad)
push
into
sbb
cmp
jb
imul
jbe
mov
je
pop
sti
adc
test
(bad)
xchg
pop
jb
pushf
sub
jmp
dec
push
or
mov
mov
mov
inc
fnsave
and
sbb
dec
mov
inc
add
or
in
outs
jge
stc
adc
les
mov
push
push
push
ror
and
cli
xchg
push
xor
adc
lods
or
adc
or
dec
outs
mov
inc
mov
pop
test
adc
lods
enter
inc
nop
add
xor
inc
sub
push
(bad)
aam
cwde
jnp
sbb
(bad)
out
aaa
or
cdq
fild
push
or
mov
add
pop
mov
mov
and
inc
out
lea
std
and
push
mov
sahf
rcr
fucomip
pop
sbb
fwait
loopne
std
mov
pop
cdq
in
or
pop
lea
iret
ja
mov
xor
cwde
add
rcr
xor
pop
add
inc
ins
add
jnp
mov
push
mov
iret
jecxz
sti
fstp
fs
mov
fild
mov
mov
shl
dec
and
pop
sub
xchg
mov
adc
sbb
lods
popf
jge
(bad)
je
push
std
inc
dec
jmp
lods
and
mov
mov
es
xor
repnz
loop
in
cmps
xchg
add
mov
rol
or
pop
push
push
push
sbb
rol
or
pop
outs
psubusw
mov
pop
mov
cmp
out
dec
cmp
rol
inc
fiadd
jmp
cmc
loope
adc
mov
sti
add
adc
loopne
ret
fadd
fld
fld
pop
jmp
popa
in
loope
add
mov
cmp
pop
sbb
dec
sbb
xchg
cmp
clc
jnp
jle
aas
dec
push
ret
paddq
out
hlt
add
rcl
std
add
inc
aas
inc
push
scas
push
mov
mov
mov
xchg
push
sbb
rsqrtps
test
pushf
psllq
mov
aad
repz
xchg
push
dec
add
fidiv
jp
pop
scas
mov
mov
sar
dec
pop
hlt
in
outs
inc
push
mov
lea
cmp
stos
in
mov
or
mov
leave
sbb
jg
stos
cs
mov
pop
out
pop
sbb
sbb
rol
mov
mov
jns
cmps
mov
dec
(bad)
mov
mov
loope
(bad)
lods
fisttp
out
and
test
bound
mov
pusha
stos
lods
ret
int3
and
ds
into
or
data16
das
sbb
jbe
and
and
mov
clc
mov
xchg
adc
loope
aaa
movs
jne
mov
xor
test
mov
push
and
add
inc
cmps
cmp
inc
cli
dec
dec
(bad)
mov
int
push
pop
lods
(bad)
mov
in
(bad)
push
mov
dec
add
ds
mov
lods
popf
push
inc
mov
mov
addr16
cdq
cmp
jnp
or
add
mov
js
push
or
or
fistp
mov
push
mov
jge
mov
xchg
sub
in
mov
jge
cmp
mov
xchg
sub
cmps
mov
call
mov
nop
std
dec
cmp
and
jb
dec
(bad)
int
jmp
and
pop
or
rol
cmp
das
mov
mov
packssdw
out
fisttp
sbb
xor
shl
stos
cmps
int3
scas
jne
lods
cmp
les
sar
cmp
js
fs
pop
ins
xor
jl
push
or
push
stos
add
and
sbb
mov
cmc
or
xor
idiv
out
xchg
or
cmp
retf
inc
add
mov
ror
jne
mov
ret
inc
dec
pop
xor
in
dec
push
shl
repz
movs
lahf
cmp
xchg
cs
pop
sbb
in
cld
ss
pop
fmul
cwde
fist
pop
pop
mov
rol
fild
or
sahf
push
or
cmp
or
stc
cmp
ret
shl
mov
add
call
(bad)
stc
mov
xor
pop
out
int3
add
es
push
imul
dec
pop
ret
retf
test
aad
xor
push
and
fwait
push
add
push
into
fwait
pop
pop
cmp
push
sar
push
gs
mov
fcom
gs
call
mov
or
or
xor
scas
mov
fcmovnbe
sub
mov
pop
jmp
in
cwde
xchg
inc
ins
cmps
sub
inc
aaa
inc
add
xor
mov
arpl
cld
cmp
aaa
(bad)
out
jno
mov
cs
push
push
dec
mov
fstp
sti
xchg
in
cli
jmp
idiv
or
cmp
push
sahf
mov
adc
push
jge
adc
mov
iret
pop
and
and
(bad)
xor
pop
xchg
xor
(bad)
mov
xor
or
pop
into
cs
cmp
and
pop
push
rcl
out
mov
rcr
pop
rol
sub
jb
lods
mov
in
mov
jnp
test
(bad)
sub
dec
adc
push
or
jmp
mov
jae
(bad)
lock
cmps
fist
call
jg
out
mov
mov
jb
xor
sub
cdq
dec
inc
js
(bad)
(bad)
outs
lahf
adc
push
retf
(bad)
cmp
inc
cwde
add
imul
or
xchg
dec
(bad)
xor
(bad)
movs
aad
pop
pop
mov
les
call
sub
xor
pop
int3
aas
mov
mov
jmp
lock
add
ins
mov
and
mov
stos
bound
pop
gs
inc
enter
mov
ret
les
mov
(bad)
mov
(bad)
cld
aas
xor
(bad)
fcmovu
xor
int3
fnstsw
mov
sbb
push
in
shr
adc
xchg
or
into
mov
call
xor
push
test
rcl
jno
cmps
ficom
(bad)
mov
mov
fimul
std
mov
in
scas
popa
bound
bound
scas
aad
pop
mov
jmp
icebp
pusha
sub
out
(bad)
lods
mov
loopne
sub
fwait
jnp
or
dec
cld
jb
(bad)
pop
add
sub
repnz
gs
jg
xor
mov
pop
adc
mov
sub
push
mov
icebp
inc
cwde
push
popf
adc
pop
ss
test
popf
pop
fcomip
stc
data16
fucomip
call
jb
pop
iret
gs
sbb
xchg
das
lods
scas
neg
nop
(bad)
mov
xchg
loop
aad
push
push
and
ins
pop
ja
into
(bad)
in
push
push
and
cmp
jle
mov
clc
pop
(bad)
xchg
mov
test
out
cmp
sub
hlt
mov
cmp
push
xchg
retf
sbb
(bad)
or
inc
shr
push
add
out
dec
loope
dec
js
bound
and
push
scas
jge
aas
cwde
dec
push
sub
rdtsc
rcr
push
lds
mov
shl
jo
aad
xor
sub
push
lods
mov
in
adc
std
sub
mov
cmps
xchg
ja
sti
and
fld
mov
or
inc
add
jns
test
loope
(bad)
ror
ins
cmps
nop
das
adc
xchg
fld
fincstp
mov
jns
dec
fisubr
sub
in
icebp
rcr
std
sbb
or
cmp
cld
and
loop
mov
dec
lods
imul
and
movs
rcr
scas
inc
mov
push
pop
push
retf
add
xchg
dec
push
loopne
inc
mov
div
push
in
in
and
stos
shl
inc
les
mov
(bad)
cmc
mov
cmps
ficom
cdq
call
rcr
test
and
xchg
jmp
mov
lods
or
lds
leave
xchg
xor
xor
sub
add
inc
push
call
shl
aam
lds
fimul
cmps
les
sbb
sbb
adc
sbb
int
retf
test
xor
pushf
pop
xor
add
mov
xchg
je
mov
xor
lods
out
xchg
adc
push
idiv
cmc
call
mov
not
jmp
cmp
xchg
fadd
ror
cmps
add
pop
add
stc
sahf
xor
test
retf
and
pop
or
mov
sbb
mov
mov
rol
fisttp
test
add
ja
add
add
jg
push
push
sub
inc
in
sbb
inc
push
inc
xchg
mov
into
enter
inc
call
(bad)
ins
add
cmp
mov
pop
push
and
(bad)
frstor
frstor
hlt
jb
mov
xchg
(bad)
mov
fcom
lock
inc
movs
add
adc
cmps
xlat
(bad)
cmp
iret
push
dec
fimul
jbe
inc
mov
xor
xor
jge
jp
cmc
stc
adc
pop
and
(bad)
mov
icebp
in
fld
leave
ins
call
add
pop
gs
out
xchg
rol
sbb
(bad)
jg
jno
sub
xor
dec
mov
jge
pop
(bad)
out
mov
xor
mov
ss
or
(bad)
shl
shr
into
mov
fist
lods
sbb
stos
jno
lds
cld
outs
mov
inc
and
bnd
xchg
cdq
cs
imul
adc
cwde
adc
(bad)
jecxz
add
sbb
and
pop
and
movs
jo
add
out
push
ds
popf
sub
push
(bad)
cwde
mov
sbb
xchg
mov
jmp
mov
cmp
mov
out
fwait
out
push
mov
cmp
dec
dec
sub
adc
dec
nop
inc
ficom
inc
mov
pusha
arpl
sub
or
mov
cwde
aas
pop
std
aas
xchg
pushf
outs
push
pop
push
ins
mov
ret
out
out
push
das
jbe
jno
fisubr
test
or
sbb
(bad)
mov
push
jne
retf
aas
jno
ins
in
adc
xchg
add
in
push
xlat
pusha
and
and
or
(bad)
fwait
clc
sbb
jne
cmp
dec
xchg
rcl
lock
and
sti
stos
je
mov
mov
or
pop
data16
sub
pushf
outs
movups
jbe
mov
pop
fdiv
in
in
xlat
daa
mov
fs
sahf
dec
pop
pop
xor
shl
mov
xor
mov
xchg
and
mov
imul
push
fidiv
(bad)
ja
or
xlat
in
hlt
data16
pop
mov
repz
nop
jb
xchg
aaa
retf
pop
mov
xchg
bound
(bad)
in
mov
and
mov
pop
ret
push
xor
std
(bad)
out
in
push
push
icebp
(bad)
xor
mov
shl
pop
xchg
pushf
hlt
mov
out
push
adc
nop
push
mov
pusha
scas
cmps
mov
imul
cld
movs
fimul
sub
mov
push
add
je
and
sbb
mov
push
or
add
add
xor
js
and
adc
adc
ss
ss
jmp
xlat
add
into
xor
sub
mov
repz
mov
xchg
je
rcr
dec
sub
fstp
pop
mov
adc
xchg
call
mov
or
xchg
repz
dec
test
out
jmp
cmc
je
xor
xchg
inc
push
adc
test
or
in
inc
sub
mov
push
icebp
adc
pop
sub
add
inc
dec
or
pop
cwde
push
mov
call
jns
mov
push
add
push
xchg
push
cmp
shr
xchg
add
in
cmp
out
in
cmp
stos
or
mov
cmps
push
icebp
sub
mov
add
mov
test
mov
or
mov
mov
mov
cwde
push
mov
loopne
jle
or
loope
jg
out
add
xchg
mov
cmp
cmp
xor
imul
inc
test
sti
sbb
pop
(bad)
mov
scas
(bad)
fwait
loop
es
outs
mov
xor
sar
or
jecxz
xchg
sbb
sbb
mov
loop
lds
mov
fist
(bad)
push
fdiv
addr16
mov
pop
into
clc
ror
loopne
adc
add
mov
fild
ss
mov
mov
fld
jecxz
ret
sbb
cli
pop
jl
sbb
cmp
mov
cdq
and
outs
das
pop
jns
jmp
pop
fidiv
push
stc
push
hlt
fmul
jmp
out
popf
scas
mov
mov
mov
es
fwait
cmc
add
out
push
cmps
neg
or
out
ret
adc
shl
push
aam
mov
(bad)
not
out
or
push
or
stc
mov
mov
sbb
sub
xlat
cli
pushf
mov
cmp
int3
push
scas
mov
add
add
test
cmp
sub
outs
lea
ins
aas
or
cld
cmp
out
enter
sub
stos
cmc
lahf
xchg
cdq
mov
push
cmp
dec
mov
sar
aam
add
icebp
mov
pop
call
cs
xchg
ror
loop
mov
jge
ror
dec
not
out
pop
clc
or
jnp
retf
test
imul
pop
stos
add
das
pop
sub
push
cmp
cmp
push
int3
jne
pop
cmp
add
icebp
int
out
or
mov
push
inc
test
in
xchg
scas
imul
cmp
sub
loope
ins
retf
std
ins
add
sbb
xchg
(bad)
jl
pop
pop
dec
add
sub
js
inc
mov
pop
xchg
dec
dec
lahf
jg
test
pop
aam
int
aad
lea
into
cld
mov
mul
jo
mov
sahf
call
mov
cwde
fstp
cmp
jle
outs
sub
inc
test
mov
pop
sbb
repnz
sub
icebp
repnz
out
adc
aaa
mov
xchg
mov
ror
xchg
aad
adc
or
popa
inc
jns
stc
inc
and
add
in
mov
push
lods
push
add
cmp
out
into
cmps
out
push
fsub
pop
aam
jmp
(bad)
lock
inc
sbb
mov
fcomp
push
fidiv
adc
inc
xor
pop
aaa
lds
xor
clc
mov
imul
jno
jmp
aaa
outs
cdq
iret
push
xor
jle
out
xchg
mov
loope
sbb
jecxz
pop
ffreep
cmp
sub
push
cmp
sti
out
shr
pop
daa
mov
movs
or
xchg
and
arpl
sbb
rol
xchg
arpl
add
xlat
aaa
cld
mov
movhps
out
jb
jl
(bad)
sbb
les
sahf
xor
sub
aam
leave
xor
mov
loop
cmp
pusha
jb
repnz
(bad)
rcr
xor
fs
jecxz
push
outs
sbb
xchg
xchg
int
mov
jae
push
fidivr
stos
xchg
sbb
push
aas
inc
push
pushf
sub
push
mov
add
push
xor
cmp
xor
xchg
gs
cmps
inc
cli
push
xchg
cmp
mov
bound
aas
adc
mov
or
inc
jl
mov
in
sub
shl
xchg
mov
or
mov
mov
shl
mov
(bad)
clc
out
xchg
aad
(bad)
loope
xchg
push
pop
xor
adc
repnz
in
and
jge
push
cld
out
adc
sub
into
icebp
jae
sub
dec
xor
mov
sub
sub
mov
test
(bad)
inc
mov
jnp
icebp
xchg
xchg
fisub
arpl
out
push
add
shr
xchg
das
rcl
fwait
test
cmp
fisub
inc
pop
cmp
movzx
(bad)
jno
mov
fld
arpl
aam
sar
xchg
in
cmp
pusha
add
movs
retf
add
fist
test
imul
adc
xchg
js
nop
iret
sbb
test
or
xor
add
inc
cwde
add
dec
in
and
inc
push
int
or
movs
and
cld
bound
xchg
inc
mov
cld
loope
movs
fwait
push
iret
in
jns
sbb
call
ss
xor
bound
mov
and
cmp
cld
jle
cmp
mov
xchg
inc
outs
and
leave
xchg
in
bound
cs
jl
sub
mov
and
mov
sub
(bad)
fisttp
cmp
pop
mov
test
jge
sbb
and
in
and
cmp
call
cmp
cmp
jle
shl
outs
out
cmps
push
xchg
inc
pop
mov
aad
or
inc
dec
imul
ss
popf
bound
dec
xchg
mov
jmp
test
mov
xchg
popa
jne
jle
test
mul
pop
inc
imul
mov
push
mov
sub
adc
arpl
frstor
sbb
popa
js
fwait
mov
mov
adc
rcr
shl
and
not
in
ret
inc
push
inc
ins
adc
adc
(bad)
cld
out
add
jmp
mov
mov
rcl
mov
rcr
mov
cmp
push
movs
scas
mov
leave
imul
add
dec
xor
mov
rcr
push
xor
movs
adc
aad
xchg
jg
mov
fidivr
ja
jge
sbb
xchg
out
inc
push
add
xlat
imul
sbb
cmps
ret
inc
lods
sub
push
jne
sbb
cli
adc
xor
jecxz
adc
adc
hlt
scas
frstor
(bad)
add
icebp
out
jp
mov
xor
adc
lods
dec
div
fdiv
into
lods
outs
mov
jp
adc
pusha
dec
jns
shl
shl
pop
jo
add
cmp
pusha
loopne
add
iret
jne
sbb
js
jno
push
cmp
fs
fsubr
imul
jne
mov
cs
push
shl
dec
fdivp
in
arpl
xchg
mov
or
fnstenv
and
pusha
mov
jl
inc
dec
push
sub
hlt
(bad)
xor
daa
mov
loopne
std
push
not
adc
jmp
xchg
jecxz
out
movs
and
loopne
jns
mov
fsubr
cs
pusha
or
xchg
jns
bound
or
push
xsaveopt
sub
ud1
pop
mov
dec
push
test
addr16
and
int
add
js
xchg
mov
stos
xchg
mov
(bad)
push
hlt
imul
ror
aad
fsubr
fsub
stos
pop
jl
out
hlt
pop
mov
add
mov
(bad)
in
xor
jb
or
(bad)
ror
mov
mov
dec
adc
jle
xlat
pushf
(bad)
scas
xor
jmp
push
int
inc
into
addr16
mov
add
les
xor
dec
push
jl
jecxz
cmp
jmp
out
jecxz
jb
xor
push
mov
imul
dec
cmp
(bad)
cmp
int
js
pop
mov
cmp
lea
sub
dec
mov
dec
in
ffreep
jnp
cmp
push
sub
push
scas
sbb
pop
(bad)
out
loop
loop
movs
xchg
pop
das
out
jl
mov
ret
out
vmread
fimul
mov
dec
sbb
cmp
push
scas
xchg
fwait
repnz
adc
cdq
adc
cmp
mov
test
sbb
add
js
imul
ret
adc
and
cmp
movs
sti
aam
sub
out
dec
mov
mov
outs
pop
pop
sub
lea
lea
gs
jg
(bad)
ret
arpl
movs
pop
push
cmp
jge
fild
inc
fcom
inc
push
mov
movs
enter
mov
pop
dec
into
ins
lds
and
jmp
pop
lds
xor
cmp
into
xchg
loopne
popf
hlt
sbb
not
shl
or
in
fld
mov
div
sbb
dec
cmp
adc
jo
outs
jns
and
retf
mov
cmp
inc
cmp
push
jmp
adc
mov
mov
fs
fisub
icebp
add
pop
cmc
sub
gs
and
call
sub
rcl
(bad)
jno
lods
(bad)
or
xor
push
fs
jnp
loop
pusha
jle
pop
(bad)
loopne
and
(bad)
std
push
pop
call
std
cwde
adc
jmp
je
test
inc
movs
ror
in
lds
int3
push
mov
in
xor
fdivr
or
fs
out
mov
loop
loopne
sbb
mov
repz
pop
nop
or
fist
add
out
outs
pop
pop
or
mov
sahf
aas
add
push
scas
(bad)
sbb
xchg
(bad)
xor
cs
jne
adc
cmp
mov
iret
mov
adc
mov
fsqrt
call
fsubr
mov
fst
mov
xchg
int
cs
ror
mov
nop
out
mov
fld
add
jg
push
imul
push
ins
sbb
xchg
xchg
add
popa
lods
jnp
(bad)
ror
add
xchg
push
xchg
hlt
add
xor
stos
cmp
jecxz
test
stos
jp
cmp
cmc
lahf
pop
out
hlt
das
pop
or
nop
pop
add
mov
repz
(bad)
jbe
push
mov
addr16
pop
jne
xor
cs
and
std
mov
and
out
cmps
out
(bad)
jmp
fwait
mov
cmp
fiadd
fstp
aas
xchg
enter
inc
mov
mov
xor
mov
jmp
int3
mov
mov
fidivr
mov
into
inc
out
cmp
fild
sub
mov
mov
pop
stos
pop
cmps
in
pop
stos
aam
add
cdq
dec
adc
lods
sti
sbb
add
xor
or
and
dec
adc
call
fsubr
jo
rol
lea
mov
mov
and
ins
loop
jmp
pop
xchg
lods
pop
xchg
pop
out
arpl
shr
push
std
cmp
mov
mov
or
pushf
int3
inc
(bad)
mov
or
lea
xor
and
jecxz
icebp
cld
dec
sub
retf
out
repz
inc
mov
xor
aaa
(bad)
int3
(bad)
out
and
xor
(bad)
loopne
mov
mov
test
mov
lock
inc
arpl
aaa
cmp
stos
(bad)
hlt
jmp
js
inc
sbb
retf
stos
adc
in
cmp
inc
out
test
ret
scas
mov
hlt
rcr
mov
jno
fisub
pusha
adc
inc
pop
(bad)
pop
lahf
test
mov
int
imul
adc
(bad)
jnp
lods
mov
jb
mov
pop
and
jb
imul
push
test
pop
push
push
xor
mov
pop
test
sbb
push
jb
test
pop
cdq
test
into
xor
mov
jae
mov
xchg
push
rol
ret
push
sbb
in
add
daa
cmp
lea
fucomip
fstp
cmp
stc
ins
sbb
sbb
ret
dec
shl
or
mov
add
pop
add
xchg
sti
cmp
loop
mov
xchg
xchg
dec
retf
dec
and
mov
sbb
xchg
jo
ins
xchg
fimul
mov
mov
and
and
cwde
jecxz
neg
cld
or
retf
imul
pop
xlat
xchg
pop
add
dec
pop
push
pop
cwde
pop
and
or
and
jle
fisubr
out
pop
int
and
into
dec
and
push
mov
sti
movs
xchg
out
jecxz
in
jnp
out
mov
arpl
dec
ret
jp
push
arpl
outs
push
jo
and
sti
icebp
inc
stos
movs
lods
aad
inc
mov
sbb
daa
leave
nop
gs
aam
loopne
aaa
ins
or
mov
hlt
arpl
or
xchg
cmp
cdq
xchg
xchg
pop
jmp
sub
xchg
shr
ret
inc
or
iret
mov
daa
add
fmul
ds
pushf
fst
pop
and
in
mov
cli
pusha
mov
or
lahf
sbb
mov
ror
dec
cdq
lods
jae
addr16
int
adc
dec
inc
xchg
jno
sbb
sub
mov
jo
xchg
push
pop
push
fsubp
cmp
stos
gs
clc
imul
stos
mov
cmp
jmp
outs
retf
(bad)
in
push
mov
add
(bad)
jns
clc
fbstp
jo
ja
pushf
xchg
inc
gs
jge
call
(bad)
jg
test
cmps
and
pop
in
mov
sub
adc
push
icebp
dec
xchg
mov
jl
or
repnz
mov
sub
xor
jnp
xor
sbb
shl
imul
in
aas
adc
fld
fisubr
jmp
cmp
outs
popa
enter
sbb
les
mov
mov
ret
jnp
mov
(bad)
mov
mov
loop
push
(bad)
mov
or
retf
mov
sbb
mov
xlat
mov
xchg
cmp
xchg
cwde
mov
stos
icebp
add
sar
and
adc
cmp
push
inc
mov
lock
hlt
jbe
(bad)
scas
lock
lea
pop
and
sahf
adc
pushf
xor
retf
inc
cwde
addr16
sbb
cdq
fisttp
dec
mov
mov
cli
cld
jecxz
cmp
cmp
or
adc
into
mov
mov
inc
push
or
(bad)
enter
push
call
cmp
mov
sub
sbb
or
js
icebp
sub
pop
ins
sbb
sbb
sbb
int
pop
mov
arpl
lock
push
jns
mov
push
in
test
jne
stos
inc
pop
jb
mov
pushf
popa
xchg
jg
aas
fisub
movs
jl
fadd
jbe
in
jge
dec
in
sbb
scas
inc
mov
adc
nop
adc
pop
xor
icebp
outs
cmp
jo
(bad)
pop
retf
push
sti
mov
cwde
jno
xchg
retf
and
outs
sbb
jg
xchg
loope
push
xchg
add
inc
mov
int3
mov
gs
(bad)
or
movs
mov
dec
dec
add
retf
test
mov
or
pop
jle
imul
aaa
ja
ficomp
scas
xchg
mov
sub
sahf
fs
es
loopne
mov
or
jmp
(bad)
and
cmc
cmp
mov
inc
in
push
test
imul
sahf
and
jmp
ja
jae
cmp
sti
jp
or
mov
aaa
pxor
pop
push
cs
add
sbb
aaa
and
imul
pushf
jns
push
add
cld
add
add
retf
or
add
pop
dec
jge
aaa
test
popf
add
xor
sub
hlt
shl
repz
and
xchg
jb
push
lock
mov
stos
pop
and
outs
push
inc
repnz
fild
dec
clc
out
push
jns
adc
and
ret
inc
loope
enter
and
adc
call
test
xchg
lea
dec
dec
imul
loope
pop
jbe
sub
sub
xchg
lea
int
test
jecxz
loope
movs
or
jns
fwait
ror
jo
mov
jns
cmp
pushf
or
xchg
pusha
and
(bad)
sub
xchg
(bad)
ss
test
and
test
sub
mov
adc
xor
mov
es
data16
push
icebp
ror
cmps
jmp
mov
push
sbb
push
clc
sbb
(bad)
pop
inc
mov
stos
cs
fwait
push
sbb
jns
std
pop
or
mov
add
pop
jg
(bad)
xor
push
mov
mov
cmp
out
xor
or
fwait
ss
aas
adc
movs
jecxz
shr
xor
dec
jno
or
mov
repnz
rol
add
dec
rcr
mov
xchg
dec
mov
icebp
add
lahf
outs
mov
push
(bad)
repz
push
push
sbb
shl
xchg
sub
mov
push
js
es
xchg
push
and
mul
ins
inc
mov
and
adc
jo
inc
imul
popf
lods
dec
cmp
xchg
mov
dec
add
and
imul
xor
je
cmp
jge
pop
sbb
pusha
xor
add
out
ins
aas
mov
mov
xor
call
aas
or
push
dec
push
dec
test
inc
jmp
adc
int
daa
adc
cmp
add
jmp
scas
and
iret
push
push
icebp
adc
sub
add
nop
push
sub
aas
pop
xor
cmp
jg
loope
or
inc
jg
cmp
jecxz
aad
pusha
xor
inc
scas
out
clc
dec
push
jnp
iret
mov
adc
xor
cmp
out
push
sub
mov
(bad)
popa
popa
in
rcr
imul
sub
sbb
fstp
xchg
adc
xor
jne
push
dec
cmc
fwait
(bad)
and
fstp
cdq
cmc
sti
sub
retf
sbb
mov
sub
and
int3
push
lock
xchg
rcr
fdiv
repnz
in
fisubr
mov
lea
xchg
aam
out
push
mov
push
outs
jno
dec
mov
jbe
vmovntps
mov
fidivr
outs
aam
xchg
mov
adc
fmul
adc
push
stos
cmp
in
push
and
add
pop
inc
mov
rcl
call
call
mov
inc
mov
xchg
adc
jp
addr16
jg
jmp
mov
mov
sbb
cmp
sub
fyl2x
xor
imul
push
jnp
cs
lahf
pop
aam
jns
or
mov
add
cmp
sub
pop
(bad)
push
sub
test
test
jnp
in
jmp
pop
adc
stc
and
call
or
ins
dec
jle
outs
(bad)
out
dec
sti
fwait
pop
dec
(bad)
cdq
pop
inc
jnp
(bad)
int3
mov
lods
repz
gs
cmc
adc
sbb
mov
and
ret
add
stos
test
rcr
mov
(bad)
jge
cmp
sbb
push
and
ja
outs
and
ret
pushf
push
push
mov
ret
mov
(bad)
cmp
pop
div
mov
cmps
xchg
test
mov
lods
or
das
pop
dec
push
push
add
pop
pusha
jmp
out
call
retf
shl
std
jo
fwait
dec
ja
jecxz
xor
retf
push
dec
mov
das
fld
sub
jecxz
pop
push
int3
int3
or
(bad)
push
ffree
jmp
ja
cwde
mov
dec
add
and
or
cmp
xor
and
inc
retf
inc
test
shr
aas
imul
and
jle
cmps
(bad)
push
fsub
mov
sar
add
mov
in
loope
inc
add
adc
pop
push
test
aaa
jmp
and
rol
outs
(bad)
cld
idiv
or
cmp
(bad)
fistp
imul
push
xchg
repz
test
or
ret
mov
mov
ficom
retf
outs
push
cs
jecxz
mov
jbe
mov
dec
in
dec
test
add
mov
pop
pop
orps
dec
push
sahf
push
cmp
and
mov
xor
xchg
pop
adc
xor
aad
leave
pop
lahf
loop
les
mov
mov
mov
mov
mov
mov
mov
xor
ins
push
jb
xchg
mov
es
mov
sub
and
or
retf
xchg
cmps
and
push
rcl
ja
or
push
out
loop
mov
in
xchg
xor
cmp
retf
cmc
adc
pop
pop
push
es
lahf
stos
xchg
out
or
fwait
adc
jl
in
fs
and
mov
jo
sbb
jne
(bad)
mov
outs
pop
out
fistp
and
clc
ins
test
jge
push
inc
and
pop
mov
mov
xchg
les
fst
ror
test
(bad)
movs
sbb
shl
(bad)
int
dec
adc
ret
cmps
sub
jmp
call
pop
push
sti
pushf
lods
(bad)
aas
fs
jmp
and
pop
sbb
push
imul
scas
test
jge
push
sbb
out
pop
mov
mov
rol
mov
jge
xchg
adc
mov
int3
(bad)
push
inc
mov
dec
cdq
mov
push
pop
int
movs
jb
mov
in
sub
mov
mov
xor
mov
cmp
leave
xchg
jge
sub
nop
popf
ins
jp
push
push
ds
imul
xchg
test
js
adc
inc
aam
repnz
mov
push
fwait
push
push
stc
fs
or
mov
pop
sbb
mov
pop
sbb
cmp
mov
pop
movs
or
inc
add
xlat
inc
rcr
pop
lahf
cmp
lock
inc
movs
mov
adc
push
cmps
or
adc
mov
repnz
rol
inc
lock
mov
sbb
adc
sbb
ret
imul
add
arpl
cmp
mov
outs
jbe
iret
mov
movs
inc
jle
int3
jge
shl
je
loop
cli
out
lods
sbb
rep
out
ror
and
jb
mov
daa
cmc
sub
bnd
cmp
in
bound
pop
ds
clc
ss
sub
mov
lods
pop
mov
out
(bad)
aad
pusha
mov
dec
movs
enter
das
fisub
mov
and
(bad)
cdq
cmp
pop
jp
fstp
dec
lds
xor
cmp
out
loope
jbe
mov
lods
out
and
aam
xchg
fdivrp
cwde
xor
into
dec
(bad)
inc
js
test
and
fsub
push
xor
(bad)
ror
dec
sub
or
mov
(bad)
dec
adc
inc
scas
dec
pop
jno
gs
nop
mov
mov
aad
and
and
fucom
shl
adc
or
sbb
sbb
cmp
cmp
inc
xor
xor
fsubr
inc
lock
and
jl
sub
jmp
lahf
dec
inc
or
or
or
mov
shl
pop
pop
pop
mov
fs
and
sub
cli
mov
(bad)
ins
jl
ins
stc
adc
lods
mov
pop
popa
shl
mov
cwde
dec
shl
jno
jl
lods
jae
pop
(bad)
or
cli
adc
mov
lods
repz
or
mov
mov
jl
jae
or
cwde
(bad)
and
mov
dec
test
mov
add
push
lock
rol
mov
scas
sub
xlat
sub
fldcw
push
ret
mov
stos
or
movs
movs
cmp
mov
ins
xor
movs
adc
mov
xchg
fisttp
xchg
cmovns
nop
mov
lea
xor
fisttp
dec
test
xor
shl
in
push
sbb
ins
sbb
or
pop
and
adc
jo
sub
sub
sub
int3
lods
jno
jl
sub
aaa
fst
shr
loopne
test
lds
sbb
xor
add
ret
shl
and
into
outs
gs
mov
jmp
mov
imul
out
ror
cmc
adc
mov
ja
cmp
inc
call
cmps
or
sar
int
loope
fmul
mov
inc
arpl
push
add
mov
pushfw
sbb
inc
lock
aam
pop
cmp
rol
mov
adc
sbb
xchg
lds
and
jnp
test
and
and
mov
or
inc
cmp
mov
push
mov
loop
and
sbb
push
push
xchg
jmp
mov
aam
or
cmps
sbb
inc
cmp
lock
repnz
push
pop
in
dec
into
dec
jl
push
cmc
cmps
jno
lea
push
les
dec
sub
mov
into
fimul
adc
mov
sahf
sub
outs
pushf
pop
std
sbb
in
pushf
xchg
(bad)
lods
sbb
adc
add
pop
enter
in
dec
lods
(bad)
mov
rol
fcom
cmps
in
imul
mov
or
shr
xor
mov
mov
imul
fwait
mov
adc
xor
dec
inc
xchg
inc
or
dec
mov
psubb
or
rcr
sti
loop
fdivr
xor
push
pop
hlt
out
pop
shl
cdq
leave
fisub
pushf
imul
data16
add
and
jno
mov
push
repz
loope
je
mov
add
imul
xor
inc
cmps
in
jg
icebp
and
adc
push
mov
out
lea
add
(bad)
adc
xchg
push
sub
inc
das
mov
leave
cmc
xchg
into
call
adc
sar
js
imul
(bad)
xor
push
outs
push
jmp
adc
push
sbb
push
xor
sahf
sub
pop
loopne
lahf
mov
mov
adc
mov
mov
adc
fidivr
mov
lock
dec
or
jo
aad
shl
xor
arpl
push
sbb
ins
lods
mov
mov
das
xor
xlat
lods
adc
mov
lock
icebp
mov
cmp
dec
xchg
stos
xchg
xor
aam
test
inc
mov
push
cmp
mov
out
or
mov
inc
xor
add
loopne
inc
ret
gs
(bad)
pop
das
int
call
out
dec
xor
in
lock
sub
adc
and
mov
cdq
aaa
or
or
addr16
sub
mov
inc
fild
cmp
(bad)
mov
daa
loope
xor
or
pop
lock
pop
loope
cdq
sbb
xchg
leave
out
inc
icebp
inc
ret
(bad)
push
out
inc
adc
xchg
push
xor
inc
and
or
mov
add
cld
inc
lahf
xchg
mov
adc
push
or
adc
data16
pop
mov
jmp
int3
clc
bound
or
add
mov
cs
and
ja
jo
int3
cmp
dec
stc
add
bsr
push
dec
or
xor
shr
or
and
jbe
fldenv
mov
es
dec
pop
rol
(bad)
lods
or
fs
or
(bad)
xchg
mov
das
add
sar
stos
mov
int3
jg
(bad)
sbb
cmp
dec
enter
fsubr
dec
push
lods
xor
sbb
fsubrp
adc
adc
outs
outs
push
push
fist
xor
cli
mov
sbb
fnstsw
retf
sbb
(bad)
jbe
out
loopne
jg
std
add
jge
or
or
cmp
fnsave
out
scas
mov
push
call
mov
fidiv
mov
adc
ds
js
mov
adc
mov
jo
gs
outs
xchg
and
lock
pop
sub
dec
out
imul
inc
cld
mov
loopne
push
(bad)
push
test
jmp
outs
and
pushf
mov
or
frstor
xchg
pusha
imul
fs
cmp
adc
add
xchg
mov
push
and
in
mov
clc
and
and
ins
jns
mov
rol
cmp
loop
or
mov
jg
xchg
jle
xor
jle
or
push
pop
sub
jmp
fstp
cmp
in
(bad)
stos
movs
aad
xor
xor
sub
es
call
jle
inc
pusha
es
aaa
or
or
cvtdq2ps
jbe
mov
add
addr16
movs
xchg
mov
pop
pop
inc
mov
sbb
scas
std
loopne
mov
fwait
xor
cmp
mov
aaa
jmp
mov
jl
ret
and
sbb
xor
xchg
loope
mov
mov
add
fimul
mov
jae
jbe
hlt
out
mov
lahf
adc
ftst
cmps
mov
repz
pop
mov
popa
sbb
ja
dec
add
dec
jne
push
sub
cmp
cmps
loope
rcl
push
aaa
into
rcr
mov
and
dec
popa
pop
mov
ret
jge
mov
add
jl
fild
or
xchg
jbe
repz
popa
or
iret
adc
dec
cmps
pop
push
js
xchg
xor
sbb
push
mov
mov
mov
cmp
mov
retf
and
jg
sub
add
loope
les
cwde
mov
adc
xchg
pop
mov
push
jmp
les
dec
push
xlat
or
fcmovb
mov
out
in
repz
in
test
jb
out
jo
test
data16
enter
lods
sub
fcmovne
xchg
daa
(bad)
addr16
cmps
xchg
stc
and
cwde
scas
jae
jbe
pushf
or
xchg
xor
ja
cmp
and
loop
sub
stos
pusha
sar
dec
nop
mov
mov
leave
jle
(bad)
or
jae
shr
pushf
xor
lods
mov
pop
sbb
sbb
sbb
stos
js
jmp
(bad)
shl
and
mov
sub
ins
mov
ret
xor
sti
pop
pop
sbb
fwait
loop
xor
mov
dec
adc
pop
or
jecxz
push
retf
jmp
jns
cwde
loope
in
adc
std
in
jne
test
jmp
mov
shl
pop
in
test
cld
mov
mov
stc
test
icebp
cmps
shl
mov
dec
lahf
cs
add
xrelease
xor
xchg
loopne
and
out
push
or
loop
sub
cwde
mov
push
sub
sbb
mov
in
mov
and
push
cmp
cmp
in
nop
push
mov
jo
pop
outs
xor
jae
sub
dec
inc
fbld
outs
cli
(bad)
push
fcmovnbe
inc
xchg
mov
cmp
or
neg
icebp
or
call
sar
outs
pop
and
pop
xor
dec
mov
push
out
fxch
xor
xor
int
jae
mov
cwde
inc
repnz
adc
in
xor
and
mov
cmp
aaa
and
outs
mov
out
xor
imul
mov
ins
fdivr
mov
(bad)
out
lods
stos
imul
stos
push
xchg
(bad)
stc
pop
pop
jmp
(bad)
mov
mov
addr16
mov
xchg
jae
jg
test
adc
clc
retf
arpl
cmp
fimul
xor
ss
jle
and
(bad)
scas
cmp
lock
xor
and
dec
inc
sub
mov
xor
or
pusha
adc
sub
and
xor
dec
and
hlt
sub
xchg
xchg
inc
stos
xchg
pop
das
shl
jmp
mov
movs
xchg
and
pop
jb
lods
mov
xchg
test
rol
sub
add
retf
dec
dec
xchg
xchg
cmp
jmp
test
or
sub
out
ret
sbb
ins
add
cvtps2pd
xchg
loop
int
mov
in
inc
mov
fist
lods
pop
int
aaa
mov
pop
fucomp
cld
xlat
xchg
std
mov
jbe
(bad)
push
das
imul
inc
out
and
ins
inc
mov
dec
mov
adc
fild
test
int3
stc
clc
pop
je
jge
xor
sbb
pop
jle
pop
fnstsw
jle
mov
out
pushf
sbb
jp
pop
out
cld
imul
adc
loope
sbb
mov
jmp
data16
pop
test
out
xchg
mov
dec
cdq
ret
(bad)
xor
cmc
adc
sub
cdq
outs
xchg
inc
adc
mov
bound
popa
jge
je
ret
sbb
mov
in
jmp
fist
dec
xor
mov
imul
dec
jmp
int
sbb
cmp
push
out
or
xor
retf
lds
mov
mov
cmp
outs
sub
ins
(bad)
jbe
cmp
daa
mov
dec
ins
push
inc
ret
and
mov
fnstcw
fsubr
fist
out
retf
pop
fcomp
test
or
mov
mov
ins
js
xchg
test
jae
cmp
test
push
sbb
and
test
push
sbb
inc
dec
push
push
sbb
cmp
push
retf
popa
mov
mov
or
fsubr
lahf
scas
lea
push
mov
mov
push
cmp
jmp
dec
repz
lods
cld
loopne
mov
mov
mov
pop
cmp
cmp
aam
push
mov
fsub
shr
dec
sahf
mov
inc
adc
xchg
adc
mov
jbe
dec
in
add
add
out
pop
data16
into
les
push
jge
or
sub
add
enter
loop
retf
or
jo
lods
jmp
fsubr
loope
ret
nop
popa
mov
ja
mov
sub
hlt
shr
push
mov
jae
and
es
sbb
jge
popa
movs
mov
push
xchg
sar
outs
aaa
dec
sbb
(bad)
mov
add
adc
stos
dec
data16
jl
push
mov
xor
pop
xor
sub
inc
xchg
pop
nop
fwait
adc
xchg
sub
pushf
xchg
retf
dec
lods
mov
mov
inc
adc
fistp
and
sub
(bad)
jmp
data16
inc
mov
loope
in
stc
sbb
inc
dec
sbb
fwait
scas
cmp
sub
repnz
scas
push
pop
js
sahf
ror
mov
dec
add
rcr
lahf
lods
and
fist
test
sbb
sbb
push
pop
popa
push
push
aas
jg
sbb
das
std
mov
jl
add
mov
loop
xor
out
inc
(bad)
adc
push
imul
adc
xor
movntq
out
gs
movs
ss
js
retf
ficom
sub
test
mov
xor
jno
jb
mov
xchg
rcl
add
adc
jge
retf
gs
push
sar
leave
not
leave
adc
cdq
mov
jb
leave
scas
repnz
pop
dec
cmp
pop
mov
in
cmp
cmp
cmps
mov
(bad)
sar
add
scas
int
aaa
add
lahf
aas
es
ret
inc
mov
gs
push
call
pop
or
(bad)
(bad)
mov
stos
xchg
cmp
dec
push
and
and
sbb
out
hlt
jp
sub
and
jnp
nop
inc
push
jmp
fcom
les
mov
(bad)
mov
mov
push
btc
(bad)
and
cmp
jae
je
adc
xor
jp
cmps
push
clc
inc
jns
lea
mov
aad
scas
ret
xchg
stos
cwde
retf
rep
scas
add
into
lahf
cs
lods
jne
aad
test
inc
mov
outs
leave
ja
cmp
xor
lock
fadd
lods
out
xchg
pop
jmp
mov
lea
in
movs
(bad)
jae
test
sbb
push
sbb
xchg
sbb
jo
(bad)
jno
call
push
cmp
jg
test
pusha
fldz
and
(bad)
jp
jle
and
push
mov
push
cli
aad
xor
pushf
aas
jl
scas
pusha
xor
outs
xchg
xchg
cli
call
shl
cmp
xor
adc
mov
or
ja
push
mov
mov
test
inc
adc
adc
jl
add
pop
jge
and
dec
popf
pop
or
shl
add
jmp
xchg
into
lods
push
(bad)
cwde
add
fnstcw
dec
aad
test
imul
sub
xchg
mov
mov
mov
push
test
in
les
(bad)
mov
cmps
popf
mov
shl
imul
push
ret
test
clc
inc
inc
sahf
fs
pushf
aas
cdq
inc
push
inc
pop
cld
jl
dec
mov
lock
add
dec
adc
pop
inc
arpl
inc
cmp
es
psrld
out
cmp
cmp
mov
xor
cmp
mov
jb
mov
and
mov
pop
out
jno
test
fisub
push
or
lods
cs
sbb
xchg
push
sbb
leave
adc
jne
test
fs
or
adc
mov
fidiv
rcr
xor
pop
stos
xor
stos
push
cmp
dec
popa
push
sbb
cmp
repnz
cmp
iret
dec
jecxz
pop
call
push
cmc
mov
xor
jp
adc
push
pop
pop
inc
(bad)
cmp
add
inc
call
dec
inc
push
add
cmp
imul
jbe
mov
leave
jle
(bad)
div
xchg
test
adc
sbb
outs
dec
mov
icebp
mov
pop
cmp
retf
movs
fisubr
push
mov
or
into
daa
and
sbb
dec
dec
xchg
test
adc
mov
sbb
inc
and
cmp
(bad)
cmp
push
mov
cmps
add
adc
clc
or
sbb
mov
test
cld
fs
mov
int3
es
outs
xchg
sub
add
jg
shl
ret
test
or
inc
add
push
sbb
lahf
xchg
add
inc
fld
shl
adc
(bad)
hlt
mov
push
pop
cmps
push
outs
loop
jno
push
jmp
in
jnp
fist
cld
jmp
lock
pop
int
out
aam
xchg
sar
sbb
loop
or
mov
dec
in
test
xchg
fs
sti
pusha
sbb
bound
pop
xor
push
je
and
xor
aaa
int
jecxz
fmulp
mov
lods
or
pop
adc
in
shl
add
fidivr
popa
not
mov
and
adc
pop
push
dec
inc
shr
mov
add
das
mov
jp
sub
mov
sub
ja
pop
movs
add
add
jnp
and
dec
dec
ret
jmp
cmp
retf
imul
ret
cld
out
hlt
and
sub
outs
dec
and
or
jbe
xchg
mov
mov
outs
adc
or
mov
imul
push
mov
push
icebp
fdivr
cdq
pusha
adc
fbstp
add
and
push
jo
loopne
es
adc
jp
aas
pop
clc
xchg
ds
sub
adc
inc
aas
shl
fwait
add
repnz
push
mov
mov
test
xchg
in
out
neg
push
xchg
jge
sbb
pop
cli
sub
int
ret
or
shl
leave
mov
add
pusha
outs
fstp
adc
aaa
rcr
mov
and
xchg
movs
cmps
fistp
inc
shl
pushf
add
mov
ret
dec
dec
clc
sbb
inc
test
push
sub
mov
xchg
add
lea
xor
dec
pop
jns
add
ss
jl
xchg
xchg
and
(bad)
cmp
mov
pop
sub
mov
add
sub
das
push
sbb
sub
(bad)
popf
sub
jns
pop
loope
cli
enter
retf
and
ss
in
dec
sbb
dec
mov
jno
mov
(bad)
mov
jae
pop
hlt
or
outs
jg
mov
cmp
out
sti
lahf
ret
sahf
xor
inc
dec
xchg
cmp
mov
out
(bad)
popf
sbb
in
aam
aas
mov
popf
loopne
lock
pop
addr16
and
pop
push
outs
scas
movs
cmc
into
js
in
inc
leave
gs
out
(bad)
sub
or
and
xor
out
lahf
cmp
ins
xor
imul
or
pop
pop
mov
adc
test
xchg
dec
stos
pop
mov
scas
mov
mov
mov
aam
(bad)
push
jmp
cdq
sbb
cmp
adc
and
sub
leave
retf
aas
xchg
in
fadd
repz
sbb
(bad)
mov
jbe
adc
and
jecxz
pop
cmp
loop
clc
xchg
pop
jp
jo
jbe
outs
repz
adc
push
cmp
add
cmc
inc
ror
mov
sub
inc
and
movs
inc
lods
xor
aad
call
rcl
mov
fcom
scas
sti
adc
pop
mov
stos
push
jp
mov
inc
jne
or
and
pop
(bad)
popa
cwde
pop
xchg
sbb
push
and
pop
shl
je
mov
nop
pop
xor
iret
pinsrw
arpl
jo
jge
rol
stos
ret
xor
push
int
popa
scas
popf
mov
adc
imul
gs
adc
xor
stos
sbb
jle
cmp
mov
mov
add
(bad)
cwde
test
inc
and
int3
cmp
fiadd
and
daa
or
(bad)
pop
and
cli
test
mov
lea
aas
(bad)
cmp
xchg
inc
shr
jge
xor
mov
loope
je
sbb
jmp
jecxz
ret
imul
jl
mov
scas
pop
dec
mov
xchg
jo
pop
cmp
or
into
loop
jns
xchg
call
test
rcr
or
and
jne
je
stos
xchg
jp
and
jne
and
aad
xor
add
ins
mov
push
popf
data16
or
ret
or
sbb
int3
or
nop
(bad)
mov
aad
pop
sbb
sbb
cld
push
push
repz
push
fst
hlt
mov
clc
adc
pop
jne
shl
add
mov
scas
pop
in
inc
lds
push
jnp
xor
cli
xchg
sbb
lea
pop
rcr
retf
lods
mov
popa
xchg
or
mov
mov
mov
mov
std
loope
add
stos
adc
daa
std
dec
add
sub
mov
sub
cwde
into
out
adc
xchg
mov
repz
or
(bad)
sub
pop
jo
pop
sub
mov
ret
ds
jg
scas
ja
adc
ins
popf
pop
jmp
es
std
sub
lea
out
mov
ss
or
shl
imul
icebp
leave
inc
rol
xor
sbb
xlat
jmp
stos
push
adc
cli
dec
mov
sub
icebp
xor
pop
cmp
loop
xor
mov
(bad)
enter
inc
(bad)
in
bswap
sti
inc
push
pop
push
cmps
sbb
int3
push
push
sub
out
push
adc
aad
jns
imul
iret
sub
sub
sub
mov
adc
sbb
(bad)
cmc
push
test
or
les
inc
mov
aaa
mov
mov
sahf
jmp
pusha
daa
(bad)
fcom
xchg
cdq
je
sub
ins
in
loopne
and
je
cdq
cwde
xchg
adc
mov
ins
popa
xchg
jg
cli
lock
inc
sub
sub
push
in
imul
das
xchg
fwait
push
xchg
ret
inc
loope
enter
dec
jne
cmp
and
ss
cmc
push
or
test
sub
inc
xchg
inc
ret
mov
int3
fiadd
jns
ss
outs
shl
out
ja
add
arpl
pushf
mov
push
stos
ret
and
cld
test
imul
cmp
mov
pop
mov
sbb
xlat
int
adc
hlt
in
add
sbb
push
cmp
mov
pop
pop
adc
mov
adc
imul
shl
fcomp
jmp
xchg
xor
movs
test
or
inc
jecxz
imul
xor
xor
sbb
ds
dec
dec
adc
or
pop
idiv
mov
sbb
stos
movs
jbe
xor
jne
inc
fnstenv
jecxz
pushf
cmp
mov
shl
cmps
lahf
popa
mov
popa
mov
aad
or
scas
pushf
xchg
into
nop
nop
ror
sub
add
loop
pop
dec
loop
loopne
pop
loop
sub
mov
xor
mov
loop
xchg
and
mov
mov
test
aad
shl
fidiv
mov
mov
rcl
xchg
jl
mov
test
jbe
(bad)
xor
scas
jae
add
push
leave
dec
lods
push
xor
rol
lahf
mov
mov
pop
pop
push
addr16
mov
or
rol
push
ret
push
xchg
mov
xor
cld
mov
cmps
gs
jecxz
pusha
out
in
xchg
mov
(bad)
imul
mov
aad
fsubr
sub
pop
retf
xchg
in
outs
rol
sbb
pop
and
push
(bad)
imul
mov
int3
and
pop
addr16
inc
inc
es
jo
aas
add
or
arpl
jnp
mov
mov
mov
aam
dec
dec
arpl
ret
loope
inc
mov
je
inc
and
jmp
push
bound
into
call
and
cdq
dec
sar
inc
out
je
cmp
dec
aaa
or
in
idiv
push
repz
scas
push
in
or
mov
mov
jg
lahf
add
scas
sbb
test
fadd
jge
fisub
ss
movs
or
movs
jg
or
outs
in
cmp
cmp
mov
(bad)
movs
jl
pop
and
xor
and
inc
div
shl
pop
aad
xchg
je
dec
ret
sub
ror
leave
or
mov
inc
push
xlat
fcmovnb
fild
scas
xchg
lock
push
xor
sub
sub
scas
mov
mov
test
cmp
mov
cwde
lods
mov
fld
iret
or
xchg
and
test
adc
retf
xor
out
xchg
jmp
inc
imul
ins
popa
and
jo
jg
and
pop
xor
test
mov
inc
out
dec
lods
outs
(bad)
inc
retf
mov
ret
cmp
push
jno
cs
cmp
popf
fwait
pop
xlat
and
fsubp
test
test
in
arpl
cmps
loop
aam
xchg
adc
jb
mov
adc
gs
add
dec
test
jmp
cmps
or
sub
rol
jge
sbb
xchg
gs
xchg
(bad)
fist
sbb
dec
cld
retf
ins
jno
test
jg
inc
out
aas
mov
pop
jmp
in
push
neg
jo
mov
ins
push
push
jae
shr
sub
dec
and
push
mov
dec
(bad)
or
inc
add
test
sub
dec
inc
or
test
push
xor
push
adc
nop
nop
xlat
stc
in
mov
bound
ss
jmp
inc
sbb
aam
sbb
out
sbb
(bad)
fsub
and
cmp
(bad)
aad
pop
nop
dec
xchg
sbb
add
pop
movs
mov
mov
stos
or
fsub
and
or
bound
cmp
or
mov
add
sbb
push
dec
fwait
test
(bad)
fs
cmp
repz
mov
sub
jns
stos
stos
push
aad
mov
push
aaa
cwde
add
retf
pop
mov
xor
and
popa
sub
xor
stos
sub
aam
dec
xor
push
shl
sub
loopne
mov
cdq
scas
push
(bad)
out
ror
les
cmp
ret
sbb
pop
out
xor
jge
rcr
or
test
inc
cmps
lock
pop
sub
scas
sti
jns
call
bound
pop
loopne
mov
cld
out
or
xor
sbb
in
mov
aam
push
pop
xchg
ins
adc
sbb
push
xor
sub
inc
pop
jb
jmp
movs
mov
push
cs
outs
fistp
fcmovne
or
and
or
sub
lahf
dec
adc
ror
lea
movs
xor
xchg
lods
ret
fwait
adc
fidivr
jge
or
cmp
stos
not
inc
ja
mov
push
(bad)
cs
xchg
mov
adc
lea
push
movs
addr16
pop
cmp
lea
xchg
sub
dec
int
xor
movs
fisub
and
aad
loopne
jmp
fisttp
cmp
jb
or
dec
iret
in
lds
adc
add
xchg
stos
mov
cmp
pop
add
sbb
test
aaa
stos
xlat
push
jecxz
scas
jo
psubusb
aad
dec
loopne
in
dec
dec
imul
fldenv
arpl
sar
ficomp
mov
repnz
mov
mov
jns
iret
sahf
in
sub
jb
je
mov
inc
push
rcr
or
mov
(bad)
js
in
xchg
mov
inc
jmp
dec
mov
jns
cmp
jbe
test
in
cmp
xchg
fisub
adc
dec
xor
fisub
es
test
mov
jno
arpl
add
sub
icebp
jae
inc
sbb
and
or
inc
loope
fld
nop
test
pcmpeqd
cmps
and
sbb
cmp
add
or
inc
dec
sbb
dec
fidivr
fwait
nop
push
inc
aaa
loopne
daa
and
inc
gs
add
aaa
jne
dec
dec
(bad)
nop
push
push
mov
lods
(bad)
aas
jp
in
(bad)
gs
dec
adc
repnz
cmp
push
mov
push
inc
pop
test
xchg
pusha
(bad)
rcl
stos
neg
push
lds
pushf
mov
repnz
adc
aam
mov
jmp
push
call
and
lds
scas
and
xor
sti
mov
inc
shl
adc
repnz
push
pusha
in
ror
call
repnz
jle
sub
popa
cmps
mov
aam
fst
cdq
out
inc
jle
fwait
pusha
sbb
cdq
jns
test
jg
hlt
or
movs
pop
cmps
jmp
adc
xor
inc
mov
shl
xor
sub
lods
push
inc
repz
xor
lds
dec
loope
push
(bad)
pop
add
lds
imul
(bad)
imul
nop
add
dec
cmp
mov
adc
cmp
test
jae
nop
mov
adc
out
cmps
adc
pop
ret
mov
ins
jmp
loope
lods
fisttp
add
fcomi
loope
inc
es
inc
inc
(bad)
sbb
retf
sub
mov
and
xchg
dec
aaa
aam
dec
int3
bswap
pop
jbe
cmp
xchg
les
push
inc
xchg
xchg
lods
and
jg
mov
sbb
inc
mov
mov
and
adc
das
call
xchg
dec
test
xor
mov
or
mov
fdivrp
xchg
scas
sub
xchg
sub
jle
stos
push
adc
out
popf
call
sbb
sbb
pop
mov
leave
xor
pop
daa
xchg
shr
out
cld
loopne
mov
dec
mov
sbb
icebp
jl
jno
xor
or
mov
test
push
scas
dec
dec
xchg
pop
and
aas
aad
pop
jecxz
aas
xor
cmc
jge
or
leave
sub
shld
inc
mov
test
inc
jbe
pop
add
jl
push
pop
and
jo
fcom
sbb
xchg
fidiv
rcl
dec
out
mov
(bad)
xlat
ins
hlt
sbb
inc
xchg
fldenv
inc
and
ins
(bad)
mov
or
mov
out
shl
adc
enter
das
ror
loopne
adc
daa
ror
push
cwde
aad
rcl
mov
jmp
stos
add
add
xor
shl
xchg
mov
jmp
cs
mov
xchg
jns
jp
std
aam
dec
xchg
or
sbb
out
cmps
push
and
inc
inc
adc
push
inc
ja
fst
dec
fiadd
push
retf
mov
pop
dec
mov
lods
mov
fisubr
xchg
mov
scas
xor
mov
(bad)
pop
rcr
loop
mov
inc
push
jle
test
xor
jp
les
retf
movs
movs
call
ins
adc
loopne
xchg
fdiv
pop
inc
ja
cmp
addr16
and
lock
sub
shl
adc
sub
and
mov
loope
inc
retf
cmc
jno
shl
test
or
sahf
cs
inc
jb
fdivr
je
movs
dec
(bad)
cmp
ins
cwde
mov
aad
cs
lods
retf
out
dec
cmp
cmp
bound
xor
jns
or
dec
rcr
fs
inc
into
and
pusha
sahf
ins
sub
mov
jb
fist
push
(bad)
jb
push
ret
popa
push
cmp
rcr
dec
sbb
sbb
gs
or
mov
push
fisub
inc
mov
pusha
(bad)
out
cli
stos
sub
jno
mov
pop
mov
(bad)
pop
rol
lock
sahf
adc
retf
enter
shl
repnz
xchg
in
icebp
jmp
adc
xchg
push
leave
or
add
pop
movs
outs
sbb
stos
icebp
je
stos
fild
into
imul
ret
fstp
jne
lahf
dec
mov
idiv
aad
fsub
cwde
push
lds
(bad)
mov
imul
xchg
sti
xlat
(bad)
xchg
ins
xchg
dec
pop
mov
ret
fwait
out
(bad)
jae
and
ret
retf
loope
outs
sahf
xchg
jns
retf
rdpmc
mov
out
pop
mov
or
jl
jp
xor
dec
outs
sub
push
inc
dec
sbb
movs
and
mov
jle
pop
jg
jmp
jmp
jbe
es
add
sub
scas
scas
(bad)
mov
fcomp
enter
jecxz
sbb
mov
imul
arpl
and
cwde
pusha
mov
pop
aas
std
mov
cmp
je
mov
mov
repz
mov
lds
aaa
jne
adc
inc
jo
rol
popa
test
fcmovbe
aas
sti
nop
mov
mov
jg
pop
mov
xchg
lds
pusha
clc
jmp
jmp
jge
test
push
cli
cdq
dec
adc
les
dec
mov
xor
xor
rcl
pop
sbb
daa
fdiv
leave
sub
rcl
aad
test
pop
loope
cmp
mov
push
arpl
out
push
cli
dec
cmp
sbb
out
xlat
sar
or
repz
adc
(bad)
ins
cdq
sub
gs
ss
outs
xchg
repnz
dec
pop
dec
pop
(bad)
xchg
xchg
loopne
mov
xchg
movs
enter
daa
jg
mov
mov
mov
lock
jne
fs
cmp
mov
fld
push
gs
popf
jae
mov
lods
xchg
push
xchg
or
jb
scas
add
call
in
jl
inc
sub
or
bound
mov
push
adc
test
or
add
cmp
and
pop
sbb
lds
(bad)
pop
stc
mov
sub
mov
jo
jge
cmps
jo
cmp
mov
mov
out
vmovups
ror
call
jmp
mov
adc
(bad)
push
jne
adc
adc
pop
movs
adc
cmp
pusha
sub
push
hlt
adc
call
jae
add
dec
and
xchg
bound
cmp
push
inc
mov
pop
(bad)
inc
inc
xchg
iret
lods
push
mov
repnz
nop
ins
cmps
dec
adc
cli
rcr
mov
inc
xor
adc
dec
mov
fs
mov
sbb
push
ds
sub
mov
cmp
out
das
jecxz
pop
jle
and
adc
ins
shl
in
push
out
leave
push
push
inc
mov
stos
cmp
adc
ret
repz
stos
pop
jmp
movs
popf
dec
pop
dec
push
inc
test
push
outs
or
mov
popf
inc
sub
clc
xlat
jnp
imul
iret
aas
js
cmp
cmc
jge
stos
rcl
iret
mov
xor
dec
js
(bad)
shl
push
retf
jbe
loopne
push
mov
xor
dec
imul
adc
add
mov
cwde
arpl
js
fidivr
aaa
sahf
call
idiv
out
popf
sbb
mov
mov
or
add
fisub
sub
jge
hlt
jp
aam
in
inc
ja
xlat
sbb
mov
aas
xor
jecxz
out
add
loop
call
cli
mov
or
pushf
xchg
mov
loope
sbb
xor
sbb
pop
push
jo
xchg
test
mov
mov
(bad)
sahf
push
dec
addr16
adc
into
fidiv
out
shl
inc
out
retf
fnstenv
mov
cmps
sub
xchg
jle
xor
mov
scas
and
push
xor
ror
neg
mov
movs
adc
ins
sti
out
clc
push
inc
cld
xchg
fwait
adc
push
retf
adc
jne
(bad)
in
xchg
mov
mov
pop
imul
dec
dec
stc
mov
stos
or
out
aam
ja
nop
lods
inc
ja
int
xor
hlt
xchg
adc
inc
inc
inc
nop
sbb
enter
xor
aam
push
hlt
lahf
sub
cmps
hlt
cmp
icebp
push
push
and
push
bound
ud0
pop
ja
pop
sar
lods
jbe
stos
dec
push
inc
repnz
sbb
jb
aas
cmp
mov
push
je
or
sbb
rcr
cmp
sbb
pop
and
neg
cmp
js
shl
sysenter
dec
mov
dec
xlat
ret
(bad)
ins
popf
ins
mov
or
cwde
dec
cmp
rol
in
cwde
out
mov
ss
(bad)
loopne
mov
sub
lea
int
xchg
sbb
imul
pop
adc
push
sub
mov
cmp
loope
(bad)
mov
or
iret
or
mov
pushf
mov
call
int3
mov
adc
or
dec
fcom
popa
fst
dec
mov
lods
sbb
fcomp
pop
into
dec
test
repnz
scas
jbe
das
cld
mov
pop
jg
shl
shl
inc
sahf
push
pop
jae
cmps
fwait
mov
mov
mov
cdq
or
add
add
imul
mov
sbb
cmp
outs
pop
dec
jne
inc
push
jns
adc
jg
call
cdq
pop
sub
cmp
je
lea
and
int3
loopne
test
loope
sbb
xchg
(bad)
mov
pushf
into
sub
mov
inc
retf
jp
aam
(bad)
adc
push
jge
xor
sbb
pop
(bad)
arpl
aad
in
lods
test
xor
movs
inc
mov
adc
out
jg
pop
dec
push
out
mul
(bad)
inc
ss
mov
lock
jl
jbe
lahf
xchg
xchg
ds
test
mov
sti
sbb
jno
mov
pop
rcr
jle
ret
loopne
test
scas
pop
sub
push
mov
push
js
outs
add
inc
or
mov
mov
jb
into
dec
jl
cmps
and
ret
jmp
jecxz
cmps
shl
cs
pop
scas
sti
add
or
icebp
xchg
test
pop
pop
rcl
pop
mov
pop
scas
in
cld
add
out
popa
leave
test
fisubr
jae
cmp
sub
add
es
clc
into
push
pop
jnp
sahf
cdq
mov
push
dec
mov
repnz
fst
push
call
in
iret
dec
ficom
cmps
je
inc
cmp
sub
retf
in
cs
mov
fidiv
adc
imul
push
jmp
inc
cdq
and
(bad)
jge
sbb
adc
es
leave
aad
lahf
inc
imul
das
jle
mov
fstp
sbb
imul
mov
es
aaa
adc
jecxz
loope
out
retf
inc
cmps
dec
jae
test
and
aam
pop
adc
in
adc
mov
std
mov
sti
aad
pop
and
into
lds
shl
cli
jmp
in
into
cdq
imul
sbb
add
pushf
add
push
movs
or
mov
movs
sbb
push
jle
sub
aam
(bad)
outs
push
int3
inc
retf
jecxz
mov
stos
pop
sub
cmp
aas
aam
pop
xchg
dec
int3
mov
dec
lods
mov
aaa
mov
xor
icebp
sub
sbb
fimul
jecxz
fnsave
iret
cmp
xor
fs
popf
pop
xor
mov
dec
retf
or
(bad)
sbb
ss
sahf
(bad)
pushf
repz
xor
retf
cmp
pop
add
mov
ret
xchg
repz
add
ss
mov
dec
mov
jbe
xor
stos
fwait
dec
ja
lds
and
stc
xor
xchg
xlat
cmp
pop
(bad)
out
mov
in
pop
and
imul
jmp
cmp
pop
retf
xchg
jns
loopne
jns
push
inc
push
mov
adc
stc
imul
nop
movs
adc
jle
push
std
xchg
xor
(bad)
bound
call
sbb
jb
popf
mov
(bad)
rcr
jle
sti
repnz
pop
push
pop
mov
cmp
mov
pop
(bad)
inc
test
fdivr
mov
add
rcl
cmc
sahf
repz
inc
or
jmp
mov
stc
shr
mov
pop
add
jae
dec
adc
aas
cmp
hlt
push
pop
int3
jmp
dec
mov
inc
jp
inc
test
aaa
mov
enter
mov
xor
outs
jns
add
add
push
shr
mov
fbstp
movs
psubd
ret
pop
adc
xchg
test
into
popa
sub
ret
nop
adc
imul
pop
mov
stos
call
fist
sub
test
and
pusha
repz
dec
movs
sub
and
stc
fimul
and
xchg
adc
loope
fcmovu
je
add
push
push
out
mov
add
jo
in
pop
imul
xchg
pop
mov
imul
add
xchg
xlat
or
test
dec
jge
ffreep
xchg
mov
cs
sbb
xchg
mov
push
icebp
and
loope
sbb
xor
xchg
stc
mov
dec
push
fwait
dec
je
popf
push
cmp
sbb
jmp
jmp
pop
mov
shr
jo
push
fmul
movs
pop
scas
repz
cwde
das
jp
mov
pop
hlt
(bad)
dec
nop
xor
in
jo
sbb
pop
out
add
and
ja
jb
fstp
add
lea
out
neg
mov
push
aad
or
inc
mov
gs
cmc
pop
push
cwde
inc
dec
lds
xor
sub
repnz
retf
sbb
mov
das
jl
and
std
pop
cmp
xchg
xchg
test
pushf
into
add
xor
mov
mov
bound
lahf
pushf
std
pop
push
push
repnz
fnstcw
lods
jns
or
push
mov
push
lahf
adc
mov
xchg
jo
push
sbb
xchg
mov
push
push
dec
jae
fmul
xchg
xor
or
and
cmp
aad
or
jg
sbb
or
or
in
ins
ja
sub
in
js
dec
dec
mov
xchg
lods
jecxz
lods
aad
lock
cmp
sbb
add
stc
div
clc
and
push
lea
mov
cdq
pop
or
dec
pushf
bound
push
movs
cmp
jl
inc
call
cwde
pop
cmp
add
mov
sbb
pop
(bad)
rcr
adc
ja
(bad)
fild
pop
sub
fst
cmp
add
dec
cmp
(bad)
fdiv
lods
push
sar
inc
jecxz
inc
mov
or
lahf
sbb
mov
and
(bad)
xor
push
cdq
add
mov
cmp
sbb
fidivr
jbe
jle
mov
fistp
test
or
jl
arpl
push
in
lods
ret
shr
pusha
sbb
adc
repz
cmp
or
fs
stc
js
pushf
jno
js
push
into
xor
push
movs
pusha
ins
jo
jg
pop
(bad)
sub
lea
inc
sbb
imul
mov
fcomi
inc
sub
imul
div
out
lds
xchg
pop
shr
inc
cli
test
jle
stos
(bad)
sti
inc
add
push
gs
inc
mov
leave
and
mov
hlt
fistp
mov
xor
lock
mov
lods
arpl
leave
or
fdiv
out
xchg
push
jo
in
or
push
mov
cmp
stos
adc
daa
into
ss
pop
mov
lahf
sbb
dec
jmp
sub
jo
call
adc
inc
mov
iret
push
ss
mov
inc
sbb
sbb
xchg
push
and
leave
xor
icebp
(bad)
lds
lahf
mov
loopne
adc
xchg
leave
sbb
xchg
sub
out
sub
daa
jo
fst
mov
mov
call
push
int
sub
mov
jbe
xor
xchg
fnstcw
mov
and
rep
cmps
and
lea
sbb
stos
push
pop
(bad)
xor
pop
(bad)
mov
push
xchg
out
adc
shr
xchg
inc
pop
fwait
(bad)
loopne
enter
sahf
popf
cdq
pop
(bad)
fdivr
mov
iret
fs
stos
inc
mov
pusha
(bad)
out
out
nop
cmps
dec
mov
mov
mov
cld
jo
push
scas
or
loope
push
mov
mov
and
fs
dec
popa
push
outs
add
retf
lods
enter
fs
shl
enter
into
jb
in
mov
popf
or
inc
fidiv
cmp
push
data16
or
rol
fist
ins
lods
dec
push
ror
cmp
jle
stc
movs
or
sar
jmp
add
arpl
cmp
push
push
lods
sahf
pop
xchg
inc
cmp
aad
call
fstp
inc
popf
pop
fnstcw
in
fwait
mov
(bad)
push
nop
push
push
xor
jo
sub
xor
cdq
jb
mov
push
ja
lds
adc
pop
sub
jae
xor
cmp
inc
xchg
push
imul
into
call
ret
es
dec
xchg
fiadd
call
pop
inc
ja
adc
rol
leave
shr
pop
jmp
pop
gs
inc
dec
mov
jl
inc
cmp
in
sbb
sub
and
push
pop
push
dec
repnz
out
sbb
push
sbb
xor
movs
fwait
cmp
sbb
in
push
push
cdq
ret
adc
mov
or
ins
stc
xor
dec
shl
or
jp
push
sbb
jl
bound
mov
or
mov
and
inc
dec
rol
xor
dec
(bad)
xor
enter
adc
popf
repz
or
mov
fidivr
popfw
add
and
mov
inc
ds
jl
push
sub
dec
jmp
push
mov
(bad)
cmc
inc
cmp
test
and
dec
dec
jnp
push
sub
mov
cmp
mov
(bad)
mov
out
push
push
test
aam
cmp
mov
and
es
dec
xchg
(bad)
mov
xchg
adc
cld
push
mov
lahf
mov
scas
mov
daa
push
call
stc
hlt
addr16
ret
pop
mov
pop
dec
hlt
inc
jl
daa
adc
sub
adc
mov
xor
pop
pop
je
xchg
cmps
mul
push
pop
mov
div
sub
inc
bound
aaa
push
(bad)
je
sbb
push
xchg
and
mov
outs
jne
and
iret
mov
push
and
(bad)
adc
sti
push
sahf
loop
mov
call
sub
jnp
jno
sti
ins
add
bound
push
xchg
push
aaa
pop
aam
mov
ror
in
and
shr
es
icebp
pop
sbb
shr
sbb
popa
jg
loope
adc
push
repz
add
es
je
jne
pop
pusha
ret
mov
mov
and
mov
mov
call
pop
push
adc
pop
dec
pop
fidiv
cld
neg
imul
mov
sub
int3
xchg
cs
cmp
retf
ins
mov
jns
mov
sbb
dec
les
outs
xchg
inc
and
inc
ret
in
movs
dec
imul
movq
pop
fdiv
movs
cmp
stc
xchg
outs
fst
jmp
std
mov
xor
in
pop
xor
adc
or
sbb
pop
cwde
jno
repz
xchg
or
xor
mov
aaa
or
sbb
xchg
mov
in
mov
arpl
mov
jo
lods
(bad)
sbb
xor
(bad)
scas
sbb
fwait
fwait
xor
dec
cdq
mov
and
mov
mov
addr16
stos
div
sub
cs
mov
aam
inc
jle
lock
js
gs
sub
xchg
mov
mov
retf
pop
add
inc
mov
enter
into
outs
cld
sub
jbe
sub
sub
dec
jae
leave
xlat
push
pop
jmp
xchg
call
fisubr
stos
xor
jns
jnp
inc
pop
call
adc
popf
adc
scas
scas
xor
gs
fcomip
arpl
push
out
xchg
inc
inc
loope
in
push
cwde
pop
pop
daa
pop
and
(bad)
mov
ds
sti
aaa
leave
xchg
mov
push
mov
out
test
cld
rcr
les
mov
out
pop
push
fs
add
into
dec
aad
dec
fisub
and
hlt
sbb
lahf
jmp
push
mov
xchg
iret
push
(bad)
int
sub
cmp
retf
mov
dec
(bad)
dec
popf
push
fwait
xchg
jge
mov
mov
xchg
sbb
inc
push
inc
mov
or
imul
in
sbb
push
jmp
iret
fisubr
or
shr
mov
pop
clc
pop
inc
mov
sub
rcr
sahf
push
add
inc
push
mov
(bad)
sub
ret
in
aaa
xchg
cli
sbb
cmp
inc
ja
ins
jmp
cmp
mov
push
test
outs
aad
out
or
test
fistp
fsubr
cdq
pop
out
jne
lods
sar
in
push
adc
outs
pop
mov
mov
push
push
cmp
jnp
pop
mov
das
(bad)
mov
push
retf
fdivr
call
leave
les
or
add
test
cmp
pop
xchg
sbb
lods
pop
dec
imul
arpl
mov
xor
mov
js
lahf
imul
out
loopne
adc
push
jnp
inc
mov
and
(bad)
and
arpl
popf
lods
sbb
or
mov
pushf
stos
cmp
push
xor
shr
or
adc
shr
in
sti
and
push
cld
cwde
dec
pop
jp
xchg
sbb
add
out
lock
out
retf
cmp
mov
add
in
ret
into
cmp
aas
lods
rol
jnp
sub
inc
xor
push
hlt
xchg
mov
sbb
xor
sub
aam
pusha
adc
sbb
out
in
mov
stos
shl
in
adc
jg
push
inc
outs
dec
mov
sbb
mov
and
xchg
xor
dec
inc
add
cli
test
movs
dec
mov
shr
xchg
jp
push
xor
jbe
push
test
pop
fild
rcr
stos
cmp
in
(bad)
jp
pop
lahf
icebp
add
sbb
fild
mov
das
xor
xchg
(bad)
bound
addr16
cli
das
lock
mov
xlat
and
xor
sbb
cmp
loopne
repz
xor
(bad)
add
cmp
dec
adc
in
les
call
test
xor
outs
test
adc
(bad)
sub
ja
sbb
mov
mov
fcomp
es
xchg
jo
pushf
cdq
push
dec
aad
dec
scas
das
jge
js
pushf
pop
inc
push
mov
cmps
add
cmp
ds
loop
adc
add
add
and
jb
loop
cmp
inc
pushf
call
call
outs
je
enter
cmp
(bad)
data16
out
pop
hlt
inc
movs
mov
fnstsw
nop
mov
xor
jnp
hlt
jmp
inc
pop
and
jo
sbb
(bad)
test
outs
xchg
nop
imul
xor
test
shr
mov
xchg
popa
jo
push
mov
xor
(bad)
adc
adc
ins
mov
and
push
or
xlat
test
xchg
pop
test
add
loopne
mov
cld
jmp
sbb
dec
ss
arpl
xchg
mov
sbb
dec
cmp
imul
or
aaa
pushw
nop
push
aas
mov
outs
int3
retf
ss
jnp
or
push
addr16
pop
mov
dec
imul
stos
mov
sbb
jmp
call
inc
lock
div
leave
ja
js
cmp
jbe
adc
movs
inc
shl
pop
loope
in
mov
xchg
sti
pop
fdiv
leave
or
push
pop
(bad)
push
sub
adc
mov
call
out
xchg
mov
in
push
dec
repnz
sub
jmp
fsubr
lds
out
or
movs
out
icebp
cmp
into
ds
mov
mov
jge
call
shl
scas
ret
pushf
jge
jecxz
adc
dec
adc
sub
mul
test
pop
sub
ret
sbb
or
add
mov
rcl
sbb
inc
in
(bad)
in
cli
out
push
push
mov
inc
jo
loope
test
ret
lock
adc
cs
sub
add
imul
or
lods
mov
mov
pop
pop
mov
xchg
mov
adc
or
mov
sbb
adc
aam
fistp
(bad)
jp
and
pop
xchg
xor
and
loop
ror
mov
dec
cs
mov
clc
push
mov
stos
inc
jmp
xor
cli
xchg
rcl
clc
das
jns
push
adc
pushf
and
fsubr
inc
mov
mov
iret
int
(bad)
jmp
std
mov
or
cmp
sub
sbb
retf
std
into
and
jns
ins
mov
push
out
jns
or
ret
or
icebp
sbb
cli
int
xlat
jb
mov
xor
xchg
push
mov
dec
jo
mov
iret
or
in
mov
pop
shl
pop
mov
and
xchg
add
test
into
(bad)
mov
ret
ret
jmp
add
and
cmc
sub
arpl
adc
mov
push
scas
ins
mov
cmp
adc
(bad)
fsub
cld
lds
and
jl
inc
mov
out
iret
mov
cmps
pop
lock
cmp
adc
mov
ja
gs
loope
mov
mov
pop
test
sar
je
pop
test
popa
sti
cmps
mov
mov
push
fcmovb
in
shl
pop
push
pop
lahf
stos
and
inc
xlat
fs
retf
cmc
not
(bad)
ds
data16
push
inc
scas
dec
sbb
ret
pop
in
mov
inc
mov
ja
addr16
push
add
xor
icebp
add
test
div
rcr
in
aad
mov
and
rcl
cmp
sar
or
je
add
cld
mov
int3
sahf
mov
inc
ror
cmp
xor
xchg
jge
inc
iret
or
shl
fst
xchg
sub
mov
movs
and
add
cmc
adc
imul
mov
int3
xchg
inc
lock
jmp
rcr
cmp
jb
push
lods
adc
cmp
add
sbb
push
into
test
fist
xchg
xor
add
jns
test
mov
mov
int3
mov
cs
and
dec
js
cmp
pop
cmp
adc
inc
push
xor
push
adc
mov
test
or
push
add
mov
cmps
stos
sub
and
(bad)
movs
mov
xchg
xor
int3
adc
adc
test
ret
nop
add
sahf
test
dec
mov
test
out
movs
in
test
jmp
test
aaa
in
sbb
dec
or
or
push
add
and
mov
lods
scas
stc
xor
iret
xor
and
int3
pop
nop
sub
(bad)
and
retf
dec
jbe
xor
inc
popa
sbb
jecxz
in
pop
jae
jmp
sbb
jbe
xchg
bnd
cwde
aad
popa
repnz
xchg
jns
add
jmp
push
test
hlt
stos
mov
cmps
imul
adc
jmp
ficom
inc
loop
jle
xchg
pop
into
int
or
cmp
xor
sti
imul
jg
or
ja
pop
outs
sbb
jmp
cmp
jne
dec
jns
cmp
imul
push
pop
clc
ja
add
daa
sub
mov
or
scas
mov
arpl
jecxz
sub
sbb
aas
clc
jbe
add
in
adc
push
pop
xchg
sub
sar
add
in
pop
cmp
ret
mov
pusha
mov
mov
dec
jno
clc
lods
xor
mov
bound
xchg
ficom
shl
pop
mov
add
cmps
mov
int3
xor
test
inc
shl
inc
in
call
das
adc
in
xor
js
cmp
cmps
cdq
(bad)
cli
scas
xor
dec
adc
cmp
sti
jns
jl
sbb
lea
cmc
ret
inc
shl
adc
pop
sub
popf
push
push
cld
ins
movs
call
mov
js
fbstp
fst
retf
inc
div
cmp
jae
xchg
pop
ret
mov
push
fist
lods
xor
jg
mov
fs
clc
pop
test
adc
mov
adc
pop
nop
add
xor
mov
xchg
sbb
fnsave
jp
loopne
and
or
cmp
mov
jae
sbb
mov
add
mov
jmp
jo
inc
push
out
xor
inc
bound
arpl
adc
sbb
stos
or
hlt
int
je
push
cmp
sub
or
enter
(bad)
int
rol
xor
sub
pop
sub
add
int3
rcr
add
xor
(bad)
adc
pop
mov
mov
xchg
sbb
and
(bad)
mov
xchg
mov
cmp
jo
sti
je
std
arpl
jo
add
mov
popf
out
out
jg
stc
inc
or
sub
clc
push
data16
pop
int3
pusha
mov
cs
mov
jno
mov
dec
mov
xchg
push
sub
pop
push
mov
gs
dec
es
and
mov
aad
cwde
cmp
push
push
push
push
push
push
push
push
pop
mov
dec
test
lock
mov
sub
cmp
ins
sbb
pop
lods
xor
jnp
test
pop
add
sti
sti
inc
xor
pop
in
inc
fs
ins
daa
jb
mov
jecxz
popa
call
jg
pusha
shl
jae
sbb
mov
mov
xchg
addr16
sub
inc
jns
fmul
add
leave
dec
pop
jb
jge
daa
out
inc
in
pop
js
sub
mov
retf
and
stos
and
pop
adc
jns
sbb
ret
sbb
stos
or
jne
add
and
ja
inc
cli
aas
cmps
ficom
rcr
mov
inc
push
and
sbb
cld
dec
in
inc
dec
fmul
xor
arpl
cmc
jecxz
mov
mov
push
sar
fst
push
sahf
sbb
and
popa
aad
stos
pop
push
push
mov
fs
arpl
xchg
and
or
call
push
xor
push
push
sbb
imul
pop
cs
sbb
and
ss
fld
push
mov
ds
cmc
pop
add
test
cmp
add
jl
(bad)
adc
ret
pop
jae
dec
push
test
sbb
and
addr16
arpl
popf
lea
jne
jmp
push
mov
arpl
in
adc
sub
dec
mov
xchg
push
in
inc
xor
cmps
push
mov
push
push
xor
stos
xchg
stos
mov
push
dec
jo
mov
mov
or
and
and
inc
push
and
sub
and
(bad)
and
sub
loopne
push
sub
sub
inc
and
mov
sub
and
retf
dec
test
inc
and
sbb
push
inc
mov
mov
jo
mov
nop
and
push
adc
xchg
dec
push
adc
dec
xor
mov
les
cmp
inc
ins
sub
mov
addr16
jl
hlt
aas
mov
popa
lea
in
das
cli
xor
inc
adc
ins
xor
fwait
lahf
push
and
add
xchg
pop
inc
and
xor
cwde
loopne
dec
(bad)
nop
adc
ds
sub
popf
mov
jle
xor
jecxz
nop
fild
(bad)
jae
push
(bad)
mov
out
test
jno
xchg
popf
mov
mov
push
lock
out
mov
push
test
test
(bad)
mov
rol
mov
dec
enter
gs
push
out
mov
mov
inc
sub
pusha
mov
sub
das
or
jge
inc
mov
and
fcom
sbb
adc
into
clc
xor
fs
jnp
(bad)
sub
pop
xchg
add
out
jg
mov
and
pop
push
sub
bound
loopne
das
dec
push
push
sbb
dec
sbb
jmp
pop
pop
ja
jae
not
out
push
nop
push
loopne
cmp
sub
ins
inc
sbb
mov
test
jmp
pushf
xor
arpl
add
jo
push
dec
daa
popf
movs
dec
js
jg
sbb
sub
pop
xor
dec
xchg
movs
fstp
and
outs
jnp
or
inc
fisttp
dec
inc
imul
nop
pop
jne
outs
ss
fiadd
dec
shl
sbb
aad
rol
dec
outs
xor
adc
loope
cdq
sbb
aaa
adc
jnp
imul
jp
test
das
push
xchg
fld
jmp
stc
movs
mov
data16
mov
(bad)
dec
pop
sub
call
cmp
xor
jmp
or
adc
push
jo
cwde
xchg
and
cdq
cmps
shl
icebp
popf
inc
dec
stc
mov
sbb
xchg
pop
js
dec
ss
sub
push
popa
pusha
push
push
and
fcmovbe
vpaddusw
mov
xchg
inc
ret
lds
jno
idiv
lods
sbb
jno
adc
pop
mov
fnstsw
in
cmp
mov
xchg
repz
xchg
xor
aad
ret
jne
test
das
(bad)
mov
shr
into
dec
imul
xor
mov
lahf
mov
xlat
fistp
pop
mov
xchg
fsub
into
push
add
mov
xchg
add
call
leave
test
mov
lods
int3
sbb
push
xor
mov
data16
cmp
ret
int3
popa
ss
dec
mov
ror
push
test
pop
push
(bad)
jmp
or
adc
push
mov
call
sub
pop
add
xor
dec
retf
aam
jnp
pop
or
clc
push
inc
movs
inc
rcr
mov
aam
fs
dec
mov
addr16
jg
neg
repz
or
clc
div
mov
cmp
mov
loope
out
sbb
neg
jbe
call
xor
lahf
adc
jb
mov
mov
dec
mov
push
das
push
inc
pop
loopne
cmp
nop
sub
dec
mov
jo
scas
popa
out
lock
iret
push
leave
mov
pop
mov
es
(bad)
sub
inc
pop
pop
fwait
(bad)
aaa
cmp
xchg
call
mov
ficomp
cdq
xlat
std
xor
sbb
movs
ins
sub
cmp
add
add
out
mov
jg
leave
jle
(bad)
dec
mov
inc
out
lods
jl
or
dec
mov
je
or
cmp
aas
enter
scas
jl
iret
out
push
jmp
popa
and
mov
bnd
sbb
and
jns
pop
cmps
and
iret
ds
inc
xchg
loope
outs
push
out
test
sub
dec
aas
idiv
mov
xor
jmp
ret
sbb
outs
mov
xchg
sub
ret
ret
mov
popf
addr16
push
or
les
cwde
ins
out
lock
retf
sub
jb
and
inc
jmp
call
xor
lds
dec
push
aas
cmp
jle
mov
neg
adc
call
bound
jbe
mov
mov
repnz
fmul
loopne
fdiv
xchg
into
jbe
mov
mov
mov
in
xor
popa
xor
mov
sub
rcl
aam
jmp
cmp
or
xor
sub
lods
test
pop
jb
push
ret
jl
and
sbb
movs
lds
scas
rcr
push
adc
imul
push
dec
push
call
imul
sbb
sbb
jmp
push
jne
imul
xor
jp
test
rcr
sub
stos
retf
scas
int3
mov
or
cmp
pop
out
scas
je
div
lds
gs
es
sbb
popa
repz
scas
stos
leave
imul
in
mov
call
mov
xor
pop
iret
les
stc
imul
cmp
dec
push
sbb
adc
bound
lahf
adc
inc
xlat
mov
sbb
push
dec
dec
pop
jmp
dec
lea
and
test
add
fwait
mov
aaa
xchg
ins
sub
aas
sub
mov
in
dec
push
pushf
test
and
scas
(bad)
and
push
loopne
mov
jo
pop
rol
mov
std
push
pop
push
loop
dec
mov
ja
neg
dec
push
test
jg
cli
aam
scas
jecxz
xchg
dec
mov
adc
lods
outs
fsub
std
sub
sub
stos
xor
(bad)
mov
add
jnp
jle
arpl
and
stos
lods
inc
inc
hlt
mov
mov
btc
sub
xchg
mov
das
inc
out
pop
add
ffree
and
outs
clc
shl
add
imul
sbb
jmp
stc
mov
movs
pop
inc
xchg
inc
mov
jno
call
xlat
fistp
mov
xchg
ins
retf
xor
test
jns
push
fwait
xchg
jb
xchg
sbb
gs
fcmovne
out
ins
rol
push
retf
in
jbe
mov
sbb
enter
ficom
mov
aaa
je
dec
in
ret
add
bound
es
or
xchg
dec
pop
xchg
or
push
push
inc
jmp
mov
add
jp
jnp
pop
dec
mov
dec
test
ins
or
(bad)
mov
popf
cwde
ins
fistp
stc
sbb
adc
lds
sbb
ins
and
ins
div
and
sbb
jl
xor
sbb
aad
lock
arpl
aaa
(bad)
repnz
mov
fisttp
imul
scas
movs
aad
call
hlt
sub
jge
sub
lods
xchg
xlat
icebp
pop
int3
mov
jb
jp
shl
xor
fisttp
cwde
cmps
pop
sbb
fucomi
aad
cmc
push
ins
imul
mov
push
call
fnsave
(bad)
shl
jl
mov
lods
mov
out
popa
or
jp
out
mov
dec
enter
popa
sar
lods
xor
mov
mov
out
sub
mov
fs
out
stc
call
jno
push
pushf
je
shl
push
aaa
rcr
aad
(bad)
js
fcom
mov
pop
push
cmps
rol
add
adc
or
cdq
repnz
pop
mov
jle
mov
pop
ret
es
cs
mov
jnp
dec
leave
jne
xor
dec
ins
retf
or
loopne
hlt
test
xor
icebp
das
shl
jno
xchg
inc
test
add
lock
stc
sub
(bad)
aam
pop
and
adc
sbb
popf
loope
fisttp
iret
dec
jp
xchg
xor
xor
ror
sub
add
int
mov
push
js
inc
sub
and
add
movs
aam
dec
push
jbe
popf
mov
fwait
and
sub
(bad)
or
(bad)
mov
loope
adc
test
out
push
popa
push
push
cli
test
pop
ins
xlat
adc
and
out
adc
shl
pop
push
and
jmp
sti
fdiv
aad
fdivr
scas
jge
pop
sti
enter
xor
jb
sbb
inc
jne
ja
mov
les
push
cmp
jecxz
and
(bad)
pop
mov
arpl
ins
push
and
ss
jne
sbb
rol
jmp
pop
mov
jg
push
mov
xchg
mov
mov
sub
cmp
lods
dec
leave
jo
leave
push
add
pop
icebp
jge
leave
js
adc
je
cmp
or
inc
jecxz
mov
or
stos
daa
pop
fwait
pop
cld
push
mov
icebp
in
push
arpl
sub
cmp
jnp
fisubr
xchg
in
ror
shr
sbb
mov
fimul
imul
cmps
retf
jne
push
dec
in
je
cmc
scas
mov
pop
std
pusha
jecxz
pop
out
int3
test
mov
xor
mov
or
lahf
jmp
ja
or
sti
add
cmp
push
sub
imul
jl
popa
out
aas
and
dec
fld
bnd
cld
xchg
stos
inc
and
(bad)
dec
mov
imul
mov
rol
lds
in
test
xlat
test
call
mov
stos
fiadd
je
loop
(bad)
mul
cwde
in
jle
aad
out
sub
call
sbb
cmps
in
test
cmps
xor
adc
push
stos
xor
in
jo
popa
pop
call
nop
aaa
push
jg
jo
xchg
xchg
cmc
xlat
adc
cli
inc
adc
movntq
dec
in
arpl
mov
stos
cmp
cmp
pop
cmps
sub
iret
mov
mov
xchg
in
xchg
adc
jg
fs
lds
movs
xor
push
lock
sti
or
gs
mov
daa
adc
cmc
imul
mov
or
in
gs
sbb
push
jno
cmc
int3
and
cmp
xchg
dec
mov
ins
xlat
fidivr
test
(bad)
mov
jno
lahf
and
fsubr
jno
jb
rol
repz
xchg
stos
dec
inc
js
test
movs
jno
cli
xlat
pop
mov
pop
and
mov
xor
cmp
mov
(bad)
xchg
inc
pop
pop
test
mov
loopne
movs
pop
aam
ror
cmps
mov
ins
inc
mov
xor
arpl
(bad)
push
jle
dec
ret
ror
sbb
push
in
in
into
push
jno
dec
jle
movs
jp
xor
fcmovne
jmp
xchg
sub
(bad)
xor
lea
jmp
mov
jbe
mov
dec
or
add
aad
mov
(bad)
test
sti
jp
not
out
xlat
jae
jle
call
and
dec
stos
leave
xlat
loop
dec
and
dec
ret
in
call
push
lock
jecxz
lods
(bad)
dec
sbb
cli
sbb
inc
jmp
sub
jmp
add
cld
add
aas
(bad)
and
cdq
sti
add
ret
xchg
call
pop
mov
add
mov
cwde
push
scas
or
aaa
jne
push
pusha
pop
or
mov
adc
pop
arpl
push
(bad)
fwait
mov
push
mov
test
(bad)
bound
imul
daa
dec
cmp
cs
sbb
into
ret
cmp
int3
and
xlat
ins
add
dec
ret
cmp
stc
rol
call
mov
enter
add
test
push
rol
dec
sub
fstp
(bad)
sar
jmp
int3
cmp
cmp
dec
cmp
stos
cmp
and
push
gs
mov
add
call
mov
lods
adc
fwait
jae
ss
jp
push
cld
mov
jmp
outs
add
retf
mov
imul
xchg
stos
aad
std
loopne
dec
lock
xlat
fwait
call
mov
out
push
sub
dec
clc
cwde
ins
pop
jle
add
outs
gs
fadd
xor
sbb
xchg
pop
push
hlt
(bad)
mov
jl
dec
fnstsw
ret
imul
mov
int
mov
aaa
sbb
loope
mov
mov
hlt
sub
pop
cmp
ror
movs
int
les
pop
cmp
push
and
enter
jb
fs
cmps
sbb
ins
push
imul
pop
test
int3
stos
(bad)
push
fisubr
into
nop
jp
mov
out
test
lea
jnp
push
inc
sbb
mov
inc
shr
fmul
dec
cmps
jle
mov
and
(bad)
lods
aam
adc
jmp
ins
dec
lahf
jmp
mov
shl
mov
dec
fnstcw
out
inc
push
sub
xor
not
(bad)
in
sbb
popf
test
ret
not
(bad)
out
ret
or
retf
mov
add
jno
mov
or
push
sahf
mov
mov
dec
int
(bad)
cmp
push
xor
out
div
push
lods
imul
adc
scas
mov
push
mov
xor
xchg
cmps
dec
pop
xchg
mov
cli
inc
loop
iret
daa
jp
idiv
and
stos
repz
cmp
test
cmp
in
sub
lock
stc
mov
jmp
add
jge
jle
retf
xchg
addr16
sub
mov
xchg
pop
jno
mov
adc
dec
dec
xor
movs
or
inc
addr16
xchg
adc
jno
fldcw
cli
dec
lahf
jmp
es
add
es
push
das
repz
sub
xor
dec
jae
js
scas
cs
addr16
xlat
retf
mov
test
sub
jg
ror
fsub
dec
in
lods
out
xchg
ror
loopne
(bad)
icebp
sub
in
push
and
xor
imul
gs
pushf
es
arpl
hlt
rcl
xor
sbb
jb
mov
or
ins
lods
(bad)
clc
lea
neg
or
xchg
or
xor
stc
jne
jae
mov
lods
(bad)
std
bound
mov
lds
push
rcr
xchg
dec
xchg
ret
add
xor
pop
es
repz
rcr
aam
sbb
cld
sbb
xchg
dec
mov
jecxz
cmp
loop
sar
mov
pop
push
or
xlat
data16
push
int3
enter
lea
shr
jmp
les
mov
xor
pop
das
inc
or
sub
leave
adc
mov
jmp
rol
push
add
mov
add
out
inc
jae
les
ret
int3
enter
aaa
xor
xchg
pop
adc
je
cwde
dec
test
fst
fdiv
(bad)
xchg
xchg
pop
xchg
pop
pop
daa
hlt
aad
pushf
lock
lods
fisub
dec
add
mov
test
(bad)
jmp
cmp
inc
pusha
rcr
retf
xor
aad
sbb
test
lods
jne
test
mov
(bad)
pushf
xchg
inc
psrlw
(bad)
sbb
inc
movs
idiv
xchg
fld
aaa
retf
mov
rcr
dec
adc
xor
mov
mov
shl
push
popa
into
mov
mov
dec
adc
mov
fcmovbe
sti
stos
xchg
test
das
or
in
mov
ret
pop
push
inc
ror
movs
pop
pop
jo
lock
stc
xor
sbb
adc
fcmovnb
pushf
repnz
jl
jge
push
bsf
inc
bswap
pop
pop
add
inc
add
push
inc
mov
mov
adc
ror
cwde
jo
mov
push
jge
popf
and
fwait
sub
or
push
shl
(bad)
jmp
addr16
mov
loopne
or
cwde
test
int
mov
in
rol
pop
or
in
push
repz
les
(bad)
mov
xor
call
pushf
mov
pop
fcmovu
imul
cmp
pop
cmc
mov
bound
cmp
jp
lea
inc
sbb
scas
adc
lock
inc
dec
mov
and
movs
add
jp
adc
sbb
xor
jae
cmp
pop
inc
or
mov
cli
outs
pushf
lahf
or
xor
outs
inc
adc
xchg
push
stos
stos
pop
in
xlat
les
(bad)
xor
test
and
(bad)
xor
bound
or
jg
repz
pop
mov
cmp
stos
sub
daa
loop
mov
pusha
inc
pop
cmps
jmp
or
es
pusha
scas
xor
imul
sub
cmp
(bad)
cmp
push
mov
inc
hlt
jo
add
hlt
test
fstp
sub
inc
sbb
sub
adc
lods
adc
pop
in
push
lods
cmps
out
bound
jb
mov
out
and
xchg
inc
in
mov
mov
mov
mov
(bad)
mov
ins
inc
xchg
not
xlat
xchg
lock
xlat
out
scas
shr
jmp
cmp
test
test
outs
cmovae
lock
lahf
mov
jecxz
aam
mov
ror
and
inc
or
arpl
inc
nop
sub
clc
dec
push
xchg
jmp
inc
sub
or
pop
jg
mov
xor
test
jb
shl
imul
add
xor
popa
jae
jp
sbb
mov
xchg
jo
and
outs
stos
loope
shr
xchg
pop
cmps
add
jp
call
pop
cmps
mul
in
xchg
js
ins
repz
cli
lock
adc
adc
leave
loopne
add
or
int3
mov
push
xchg
mov
call
repnz
mov
mov
jecxz
in
fbld
inc
xchg
xchg
jo
dec
nop
xchg
xor
ja
call
in
push
mov
xor
xchg
push
jo
out
pop
push
add
repnz
mov
adc
xchg
in
add
pushw
xchg
or
sbb
out
add
and
in
inc
inc
fimul
or
pusha
jo
xor
gs
and
rcr
dec
scas
mul
dec
int
inc
push
mov
test
sbb
mov
dec
retf
repz
mov
(bad)
jae
mov
cdq
or
cwde
mov
mov
add
adc
(bad)
pop
jb
aaa
xor
in
xchg
push
cmp
sbb
vmovntpd
inc
and
sbb
mov
dec
jb
nop
lods
int3
scas
mov
fs
pop
repnz
pop
stos
xor
and
and
mov
dec
jns
lods
repnz
fwait
aaa
repz
mov
mov
xor
imul
stc
push
fwait
jge
lock
xor
cli
pop
shl
pop
fwait
btr
shl
jae
(bad)
cli
cmp
ins
xchg
sti
inc
or
jg
mov
arpl
sub
push
pop
adc
sub
push
stos
dec
jle
jb
jle
not
outs
dec
in
mov
imul
iret
test
lea
jge
scas
icebp
mov
ret
push
out
dec
ja
push
sub
mov
and
lahf
adc
repnz
xchg
mov
test
fst
mov
lea
jno
fcom
and
dec
iret
jne
(bad)
call
pop
mov
loopne
inc
fdiv
mov
ins
inc
cmp
and
std
jecxz
add
sahf
sub
jmp
mov
maskmovq
mul
mov
inc
idiv
test
add
lea
inc
xor
sub
inc
int3
dec
add
int
adc
std
adc
dec
and
inc
mov
dec
xor
nop
jne
jmp
add
jbe
inc
pop
xor
mov
push
test
pushf
pop
ret
aas
ret
adc
xor
xor
add
leave
jne
push
mov
sbb
xor
mov
aad
jp
cmps
ret
mov
xchg
mov
cmps
ds
inc
cmp
repz
movs
or
jle
std
sbb
les
cmps
ror
xchg
movs
dec
mov
into
popf
push
or
adc
nop
inc
adc
stc
je
mov
inc
lds
pop
call
add
call
rol
pop
cmp
add
jmp
mov
jo
push
mov
push
dec
or
dec
sbb
cmp
pop
or
out
mov
inc
mov
hlt
sar
xchg
repnz
dec
aaa
test
enter
ins
leave
pop
imul
popf
adc
push
popf
test
int3
retf
and
fimul
or
mov
cmp
addr16
and
hlt
std
mov
lock
btc
mov
inc
out
pop
cld
inc
pop
call
call
inc
aas
ds
sub
fld
in
xchg
cdq
and
mov
fs
adc
push
mov
sti
xchg
out
in
push
pop
std
imul
inc
ins
mov
and
fst
xchg
jo
pop
sub
mov
xor
je
nop
adc
mov
jne
pop
mov
mov
or
xlat
sub
shl
add
test
(bad)
scas
mov
or
cmp
jmp
add
or
mov
jecxz
(bad)
out
push
dec
mov
shr
stos
gs
xchg
les
sub
inc
mov
jbe
adc
dec
jg
or
pop
add
mov
cmc
out
cwde
adc
xchg
std
xchg
ret
mov
imul
mov
cld
xchg
movs
aas
nop
call
ftst
xchg
mov
xlat
test
ds
lahf
call
ret
test
mov
push
retf
inc
push
or
repnz
xchg
push
mov
iret
add
ins
aas
jno
cmc
dec
or
add
mov
cdq
jno
sub
and
mov
bound
in
loop
in
lea
(bad)
mov
aad
fld
inc
bnd
rol
inc
pop
cs
xchg
jp
test
jecxz
dec
inc
dec
sbb
push
xlat
stos
cs
pop
mov
jp
dec
push
daa
pop
inc
ins
mov
shr
out
pop
or
test
ror
pop
xchg
imul
in
stc
in
mov
and
nop
mov
movs
aas
test
jmp
sub
xchg
iret
xchg
pusha
mov
sub
sub
mov
and
sbb
mov
sub
mov
add
(bad)
pop
jne
jmp
sub
inc
fsubr
add
mov
jg
out
mov
loop
std
sbb
fisub
jecxz
mov
mov
xor
push
(bad)
pop
inc
in
hlt
movs
cmp
idiv
lahf
sub
xchg
xchg
mov
mov
in
fsubr
xchg
(bad)
mov
xor
sbb
mov
mov
in
jecxz
pop
and
cs
xchg
pusha
lock
jns
jle
pop
inc
cmp
adc
fisubr
pushf
jecxz
pop
bound
ret
cmps
mov
dec
outs
scas
es
cmp
cdq
mov
in
lods
add
cwde
adc
push
repz
dec
mov
mov
lea
and
cmps
pushf
movs
dec
loope
push
ficom
fild
jl
(bad)
shl
popf
outs
mov
xor
push
ins
jle
or
leave
mov
ret
sub
stc
lock
aaa
and
or
fild
fsubr
loope
mov
and
push
aas
add
jl
inc
mov
sar
pop
aaa
xchg
fmulp
shl
or
mov
cld
ins
or
adc
jb
xchg
movs
and
sbb
cwde
nop
xor
lods
mov
sti
push
adc
sbb
cmp
or
jb
mov
sar
mov
sub
adc
fld
inc
rcr
imul
movs
pop
shr
inc
std
mov
cmp
sbb
(bad)
and
mov
outs
ror
mov
fwait
add
xchg
fcmovu
pop
xor
fiadd
xchg
mov
dec
dec
shl
shl
xor
pop
sar
bound
xchg
pop
push
sbb
loopne
fild
adc
clc
inc
pop
pop
mov
pop
sbb
(bad)
xchg
and
and
test
fist
pop
out
mov
xchg
xchg
stos
push
daa
inc
xchg
cmp
dec
test
jmp
xor
cmp
jmp
lds
icebp
mov
sub
dec
inc
mov
jo
enter
xchg
jl
push
popa
push
jmp
pop
cdq
ja
and
mov
dec
push
iret
movs
cmp
push
cmp
inc
inc
outs
or
retf
mov
mov
sbb
adc
imul
fdivr
icebp
mov
cmps
fdiv
xchg
xlat
add
aam
loope
push
(bad)
into
push
sub
daa
fsubr
rol
fs
into
push
mov
adc
fbstp
pop
inc
jp
jmp
ds
push
sub
ja
jo
fldcw
mov
mov
adc
loop
adc
scas
icebp
adc
cmp
fwait
ss
jno
xor
jbe
imul
call
and
xchg
mov
and
stos
stos
cmp
push
mov
test
adc
shl
cs
data16
jl
mov
push
sbb
pop
in
dec
scas
push
inc
enter
fisubr
mov
sbb
adc
jb
mov
pop
(bad)
adc
adc
mov
int
clc
and
in
dec
dec
dec
ja
ret
shr
in
push
or
fs
div
sub
pop
fstp
xlat
loop
test
mov
in
sub
mov
ins
sub
loopne
sar
adc
inc
cwde
mov
push
pop
mov
xchg
xor
xlat
pusha
pushf
sar
push
adc
pop
mov
rcl
punpcklbw
cmp
mov
sbb
stc
or
repnz
int3
sbb
xor
stc
push
sahf
jg
shr
test
bound
sbb
repz
or
adc
aas
push
push
stos
xor
(bad)
pop
test
fldcw
mov
mov
and
push
inc
out
(bad)
push
inc
dec
inc
sub
mov
addr16
and
pop
test
gs
add
ins
sbb
jecxz
(bad)
call
nop
icebp
sti
dec
shl
fimul
jno
fstp
das
inc
test
fs
xchg
(bad)
arpl
mov
inc
sbb
daa
test
adc
ds
jl
rcl
sbb
sti
cmc
jbe
mov
idiv
adc
mov
cld
aas
push
pop
out
fwait
ja
mov
sti
mov
clc
ds
sbb
mov
loope
dec
nop
fcomp
lock
add
cwde
adc
aad
dec
xchg
(bad)
fdiv
lea
push
fwait
push
xchg
sbb
sub
jnp
inc
fdivr
sbb
test
out
sub
out
push
rcl
jno
dec
cmps
je
mov
push
es
iret
test
sub
lock
js
xor
sbb
or
daa
aas
sbb
sar
add
mov
fbld
cmc
inc
jae
lahf
or
xchg
or
shl
sub
stos
sub
lds
ins
pop
in
jmp
jle
mov
pop
mov
push
mov
es
or
xchg
in
inc
sub
std
retf
sub
test
pusha
(bad)
and
fnstenv
aaa
inc
cmc
(bad)
lock
leave
fadd
pop
sub
in
jmp
mov
aas
pop
test
push
mov
fsubrp
pop
mov
aas
and
dec
scas
push
jb
ja
or
and
lods
fadd
fs
push
das
test
repnz
jo
mov
fld
sbb
xlat
mov
iret
outs
je
xor
(bad)
repnz
mov
int3
jmp
(bad)
mov
inc
mov
mov
ret
xor
test
sub
into
(bad)
(bad)
mov
popa
movs
push
push
xchg
sub
mov
cmp
nop
jmp
(bad)
sar
rol
fld
adc
and
movs
cli
cmc
or
push
jb
dec
in
aaa
or
cs
xor
loopne
push
pushf
adc
outs
or
repnz
out
hlt
fld
xor
dec
mov
sub
inc
jle
in
sub
xlat
xlat
loope
mov
xchg
xchg
cli
dec
sbb
mov
xchg
stos
xor
popa
pop
in
mov
push
fistp
add
xor
(bad)
pop
cmp
xchg
push
test
jecxz
into
cmp
lods
or
xor
mov
mov
ds
mov
dec
mov
adc
das
(bad)
push
fcom
imul
add
fcmovnbe
std
fsub
and
(bad)
cli
sbb
push
inc
mov
dec
ins
mov
loop
int
in
inc
inc
fnstenv
(bad)
push
outs
mov
iret
mov
idiv
jns
mov
mov
ror
out
rcl
js
nop
test
inc
add
loop
push
in
inc
cmp
xor
lods
or
sahf
xor
xchg
mov
in
mov
and
mov
into
dec
sbb
test
js
sub
cmp
pop
xchg
mov
js
push
mov
sbb
idiv
(bad)
mov
into
sbb
sub
pop
clc
lock
fadd
test
test
sbb
mov
je
dec
jno
fdiv
xchg
ja
into
mov
ret
inc
int3
int3
scas
call
and
aam
jo
push
jbe
aam
pop
fnstsw
mov
dec
mov
out
in
mov
fstp
jno
loop
xchg
mul
bnd
jae
pop
jmp
lods
je
(bad)
push
lea
leave
ss
and
cmp
popw
js
jne
rcr
retf
pop
fisubr
mov
mov
dec
cmc
or
inc
(bad)
out
push
push
pop
push
movs
lods
cmps
sub
(bad)
call
sbb
inc
lds
lock
cmp
imul
xchg
push
push
addr16
out
mov
mov
xor
rcr
sbb
xchg
rcl
dec
je
cli
pop
in
cmp
cmp
aaa
or
pop
push
mov
adc
(bad)
(bad)
popa
fiadd
dec
out
in
dec
mov
cmp
test
push
in
and
mov
sbb
cmp
sub
movs
fs
push
repz
test
repz
pushf
sbb
hlt
in
aaa
retf
call
xchg
add
cdq
inc
imul
mov
or
or
dec
mov
rol
loop
imul
cmp
pop
shl
sbb
(bad)
cmc
es
cmp
jbe
hlt
fst
adc
cs
mov
or
sbb
xchg
inc
pop
in
fxch
push
sub
push
or
push
lods
xor
mov
cmps
or
dec
xor
cwde
fsubr
xor
shr
(bad)
mov
call
sbb
push
cmp
mov
cmp
mov
arpl
das
call
jb
in
(bad)
and
es
es
stos
jp
mov
or
cli
lahf
and
jp
push
push
mov
adc
push
jo
rcr
mov
pop
or
or
pop
pop
test
(bad)
push
clc
inc
pop
jmp
lea
pop
(bad)
dec
imul
mov
jbe
(bad)
cmps
iret
dec
sbb
pop
stc
xchg
hlt
jo
inc
jo
pop
outs
xchg
(bad)
ins
adc
mov
icebp
lea
mov
and
rcl
mov
in
dec
xchg
shr
pop
cmps
lods
pop
arpl
push
cs
adc
fistp
pop
pop
adc
mov
cmps
test
push
add
and
fdiv
call
cmps
or
mov
pop
xchg
std
jno
adc
jns
push
test
jmp
push
xchg
pop
(bad)
inc
movs
(bad)
stc
hlt
bound
push
add
sub
je
gs
cmps
mov
fwait
cmp
push
push
in
push
and
mov
ins
push
test
pusha
pop
test
rol
push
mov
dec
enter
push
loopne
or
shl
cmp
mov
add
loopne
sbb
cwde
xchg
dec
push
mov
out
xchg
sar
mov
xchg
add
movs
stos
add
outs
lock
or
je
push
das
stos
ret
pop
adc
out
stos
jnp
pop
ficomp
adc
rcr
shl
inc
loopne
mov
js
(bad)
out
mov
sahf
loopne
daa
push
loope
shl
adc
lea
sar
in
add
scas
mul
mov
movs
pop
pop
ins
scas
fstp
xchg
jp
jo
or
(bad)
(bad)
jecxz
dec
es
(bad)
lods
mov
mov
cmc
pop
add
imul
mov
sbb
loope
ret
out
push
jb
jo
cmc
scas
sbb
(bad)
ja
ret
mov
scas
lock
mov
jecxz
daa
je
inc
and
out
js
enter
or
fnsave
fmul
xor
inc
into
retf
push
xor
add
sub
jns
xor
and
repz
loopne
icebp
pop
mov
fcomp
ss
pop
stc
mov
(bad)
sbb
retf
ja
(bad)
jmp
pop
fild
sub
mov
(bad)
test
(bad)
cmp
mov
icebp
loopne
cmps
cmp
imul
mov
cmps
test
mov
push
test
inc
ud1
aam
js
cmp
hlt
popa
enter
pop
nop
sbb
adc
mov
and
jno
mov
cmps
cmp
dec
and
jnp
mov
fs
loop
jecxz
jno
jno
jno
cmp
into
xor
push
pop
sbb
outs
jno
inc
repz
push
inc
repz
jle
adc
nop
bswap
add
sar
adc
enter
mov
pop
cvttps2pi
in
push
add
pop
adc
and
loopne
and
cmp
adc
cmp
push
inc
bswap
add
add
add
into
popa
push
sar
or
cld
mov
lods
xor
dec
mov
or
push
adc
sub
add
nop
es
test
mov
test
xchg
sub
ss
push
cmp
cmps
and
and
cli
repnz
in
jecxz
mov
or
mov
dec
into
sub
aas
jl
cmp
mov
ins
or
sbb
iret
pop
xor
lods
cdq
mov
out
and
mov
mov
add
jmp
call
mov
dec
pop
cmp
mov
xor
hlt
mov
fwait
pop
or
inc
les
imul
mov
das
sbb
sub
aas
stc
ins
aad
mov
ss
hlt
in
call
jmp
mov
iret
dec
sti
movs
movs
pop
ret
mov
sbb
fdivr
sub
int3
xor
mov
pop
sbb
dec
ins
mov
scas
cmp
mov
mov
shl
pop
pop
jb
movs
and
mov
mov
(bad)
add
inc
sub
xor
pop
sbb
jg
je
jecxz
js
push
call
lods
xchg
outs
iret
inc
mov
pop
int
jbe
gs
ins
mov
inc
mov
xor
cmps
popa
inc
sbb
push
jle
xchg
push
(bad)
ret
int3
xchg
jbe
ins
pop
nop
jl
mov
cmps
loop
stos
popf
mov
shl
cld
imul
mov
and
add
jmp
je
outs
fistp
mov
outs
push
sub
inc
mov
ret
aaa
cmp
call
es
dec
fidiv
and
adc
xor
push
adc
mov
aam
int
ins
xor
pop
jp
cmc
add
cmp
mov
xor
imul
loop
mov
je
add
(bad)
leave
pop
test
(bad)
shl
int3
pop
jb
cs
lahf
xchg
movs
cmp
movs
pop
xor
mov
sbb
fidivr
adc
push
push
inc
imul
retf
out
movs
sub
push
shr
push
add
imul
or
pop
add
jae
int3
retf
sbb
sub
pop
push
jl
mov
pop
ret
dec
outs
iret
or
push
sbb
or
fbstp
mov
cmp
cs
into
sub
add
in
loope
js
sub
inc
and
nop
jp
mov
hlt
cwde
xlat
adc
dec
dec
xchg
push
and
lahf
ficom
and
iret
ins
or
mov
icebp
sub
or
cmp
adc
aaa
int3
dec
movs
cmp
inc
cmp
cmc
outs
into
mul
mov
int
ja
jae
aas
mov
add
js
mov
sub
jg
mov
push
sub
xchg
xchg
(bad)
adc
or
cwde
or
in
push
mov
inc
inc
in
push
adc
or
outs
mov
xor
scas
outs
out
xchg
mov
fdivr
outs
fst
test
inc
inc
(bad)
cmps
inc
push
pop
mov
mov
and
ror
xor
or
ja
cmp
adc
cmp
xchg
mov
(bad)
mov
xchg
ins
cmp
shl
sub
push
sar
push
out
jle
and
je
out
jns
adc
inc
xor
mov
cld
js
or
clc
ret
mov
and
adc
(bad)
push
mov
movs
xor
push
fs
loopne
cmp
aaa
ror
mov
sbb
mov
add
popa
jmp
adc
xchg
or
sub
pop
xor
push
bsr
mov
jp
ins
loope
or
xor
or
cmp
repnz
loop
mov
mov
mov
cmp
ror
movs
jmp
jae
out
jmp
ret
movs
xchg
mov
fdiv
sti
mov
ret
ret
ss
xlat
inc
sbb
sub
cmp
test
dec
xchg
ja
shl
pop
(bad)
lea
push
pop
xchg
pop
sti
pop
push
sti
cli
fld
fucomp
xchg
xchg
pop
addr16
arpl
push
cmp
xor
sbb
inc
mov
or
and
mov
add
ja
scas
shl
add
jbe
sub
stos
and
ffreep
adc
frstor
fwait
test
push
arpl
cmp
add
movs
call
(bad)
stos
(bad)
fmul
push
mov
jmp
cmp
cs
daa
test
push
jl
add
in
and
dec
jg
mov
mov
sbb
inc
hlt
fsub
or
mov
js
sti
mov
xor
rol
mov
sbb
cmp
dec
ret
add
inc
dec
adc
call
call
stos
js
dec
dec
jmp
mov
ror
mov
call
imul
xchg
mov
jo
xchg
jecxz
xlat
mov
popa
push
test
push
data16
sbb
test
cld
call
(bad)
ds
or
sub
ret
ins
and
add
aaa
add
adc
loopne
cmp
and
std
es
push
cmps
call
jne
jbe
cs
pop
cmp
ds
add
loop
mov
mov
sbb
jmp
sbb
int
in
xchg
iret
popf
cdq
mov
add
jmp
add
inc
mov
sub
sar
jns
cmc
in
aaa
mov
add
gs
icebp
cmps
cmc
sahf
jns
lods
mov
jns
and
xchg
addr16
xchg
je
mov
inc
dec
out
pop
push
xlat
adc
nop
inc
xor
icebp
loop
call
adc
(bad)
inc
cmp
or
cmp
sbb
or
xor
push
mov
dec
shl
jmp
sub
dec
fdivr
retf
popa
imul
cdq
xor
fst
jae
jge
imul
adc
(bad)
out
and
push
les
stc
movs
stos
xor
ss
mov
push
int3
movs
cmps
lea
pop
in
xchg
aaa
mov
outs
push
cld
je
add
cdq
iret
mov
jle
call
icebp
mov
pop
sub
jp
jg
mov
pop
pop
cmps
pop
push
jbe
mov
mov
mov
or
retf
add
adc
repnz
mov
adc
ret
add
sub
mov
inc
jmp
mov
enter
imul
cmp
jno
push
adc
sbb
or
mov
jbe
or
push
inc
adc
clc
retf
icebp
xor
jo
mov
ret
rol
not
jo
fstp
outs
ds
jb
mov
jl
ins
imul
pop
sbb
cmp
es
push
dec
fiadd
or
push
add
sbb
or
cmp
sahf
push
push
frstor
inc
aad
outs
rol
fnstsw
push
pop
dec
add
repz
cmp
mov
xlat
iret
test
loope
mov
or
mov
in
sbb
adc
out
(bad)
dec
add
cdq
mov
lock
mov
sbb
dec
inc
shr
xchg
sbb
and
and
dec
add
dec
scas
lds
dec
int
inc
leave
jb
outs
lods
mov
push
cwd
mov
cwde
xor
pop
arpl
push
in
jnp
inc
adc
and
push
jp
cmc
out
out
ja
sti
cmp
xchg
call
imul
mov
adc
or
xchg
inc
mov
lock
int
push
jbe
loopne
ss
pushf
fild
mov
fucomip
rol
mov
idiv
stos
mov
mov
cli
(bad)
int
xchg
jl
mov
mov
sbb
ror
addr16
jle
iret
(bad)
cwde
or
mov
sub
pusha
jbe
(bad)
jmp
jge
dec
outs
das
inc
add
retf
sbb
pop
iret
test
jge
mov
dec
lock
push
sub
sbb
adc
sbb
jg
add
sub
pushf
add
fsubr
sub
mov
ss
jae
jns
shl
js
leave
mul
sti
or
dec
shl
shr
shl
rcl
xor
adc
fmul
mov
ret
cdq
or
push
ins
sub
jae
js
lahf
int
dec
pop
inc
sub
mov
je
call
cmp
push
stos
cmp
push
sub
fwait
mov
jmp
test
sub
imul
mov
scas
jle
dec
jne
xchg
mov
popa
pop
push
fldcw
cli
xor
mov
pop
adc
les
rcr
inc
mov
dec
xchg
mov
int3
stos
loopne
mov
xor
mov
dec
loop
fadd
and
retf
sbb
dec
mov
sub
and
daa
jmp
mov
arpl
in
xchg
pop
adc
mov
jbe
retf
aam
xchg
jno
psrlq
mov
dec
mov
aas
stos
ret
test
push
call
dec
add
jnp
or
inc
es
fld
mov
adc
sar
(bad)
pop
push
retf
je
addr16
pop
jecxz
imul
xor
aad
std
pop
test
push
cmp
jae
cmps
in
mov
mov
dec
cmps
pop
in
mov
aam
les
aad
xchg
ja
push
nop
adc
int3
push
pop
call
dec
cmc
push
cwde
jae
std
pusha
push
add
aam
or
std
cmp
jnp
add
fbld
xchg
shr
xor
xchg
bound
sub
imul
je
xor
loope
jle
imul
test
and
push
and
and
xor
push
retf
xchg
outs
jle
sbb
cmp
mov
ins
(bad)
xchg
mov
lds
pop
dec
jp
(bad)
dec
pop
mov
sbb
imul
(bad)
out
add
pop
fmul
push
rcr
into
jp
lods
push
or
int3
jo
sub
icebp
enter
es
xor
(bad)
jae
xor
mov
pop
mov
sub
and
in
add
add
cmps
addr16
jo
test
and
dec
adc
adc
adc
xor
adc
movs
add
rol
inc
sar
bound
retf
or
inc
add
xchg
daa
push
test
inc
push
xor
mov
arpl
fistp
pop
mov
jmp
into
mov
inc
push
xchg
pushf
adc
movs
test
gs
jbe
xor
sbb
(bad)
in
pop
maxps
inc
aad
seta
fwait
add
pop
and
mov
xor
mov
cli
push
add
or
retf
out
add
adc
arpl
dec
and
dec
inc
nop
jg
or
cmp
inc
stos
daa
xor
add
xor
or
shl
or
fld
pop
cmc
and
xchg
aam
in
sbb
xor
dec
push
and
xchg
movs
sbb
(bad)
outs
data16
outs
add
adc
jp
add
xor
shl
xlat
jge
mov
mov
pop
movs
retf
sub
sub
retw
dec
sbb
xor
mov
xchg
inc
xchg
lods
(bad)
out
int3
fisttp
xchg
jp
pop
dec
sbb
mov
adc
xchg
sub
mov
dec
mov
pop
adc
lods
in
movs
or
xchg
xor
inc
hlt
in
mov
add
xchg
push
rcl
(bad)
jle
push
pop
lds
adc
add
sahf
mov
xor
lds
cwde
xor
rcl
sub
cmps
add
pop
inc
retf
hlt
xor
shl
sbb
push
in
cmc
bound
sub
into
xor
mov
fisub
push
iret
movs
aas
nop
clc
ror
and
rcl
add
xchg
jne
out
es
jbe
jle
std
cmc
jne
adc
cmovno
pop
into
cmc
call
push
fistp
xchg
push
mov
sahf
mov
rol
mov
sub
dec
int
popf
jmp
loopne
mov
std
jp
nop
int
lds
scas
(bad)
int
push
mov
in
xor
loope
bound
jmp
inc
xor
sbb
mov
dec
cmc
iret
pusha
out
dec
shr
(bad)
mov
adc
arpl
ret
(bad)
(bad)
sub
jne
xor
inc
jb
leave
sbb
stos
shr
xchg
fadd
sub
rol
xchg
xor
pushf
mov
xchg
data16
je
ret
xor
jmp
clc
repnz
daa
inc
fld
mov
or
into
cmp
xchg
mov
mov
aas
lds
in
(bad)
repnz
scas
stos
call
pusha
std
sbb
(bad)
push
add
pushf
ja
or
(bad)
pop
cdq
outs
xor
imul
pop
out
sub
fimul
cli
(bad)
push
es
loope
xchg
lods
aad
mov
dec
popa
mov
stc
dec
aas
cmp
mov
xchg
dec
mov
dec
or
(bad)
test
movs
cli
ret
sub
sub
jp
cs
cmps
gs
mov
xor
(bad)
lock
cmp
mov
cmps
outs
xchg
jmp
mov
out
push
add
or
and
sub
cmps
sbb
scas
sti
cmp
pop
cmp
out
mov
jecxz
pushf
sub
mov
clc
inc
pop
and
cmp
hlt
call
push
scas
push
mul
imul
je
int3
jp
fwait
je
inc
push
jne
into
out
stos
test
fimul
into
jp
sbb
inc
cmps
pop
mov
in
cmp
jmp
xchg
mov
js
sub
pop
fcomp
pop
cwde
push
imul
and
aaa
push
add
push
push
mov
loop
pop
les
cmp
nop
(bad)
gs
(bad)
jp
and
les
stos
or
and
inc
int3
movs
mov
mov
push
pop
mov
test
push
ds
int
iret
pusha
sub
jmp
lods
dec
scas
sub
mov
jns
mov
imul
into
fcomp
xchg
fmul
outs
retf
adc
fst
push
jp
out
test
in
movs
enter
mov
jnp
mov
add
mov
movs
mov
jmp
out
fisttp
add
add
gs
jmp
sub
cmps
pop
mov
xor
jb
sub
xchg
mov
pusha
xchg
sbb
jge
cmps
movs
in
mov
ret
cld
push
mov
cmp
dec
fidiv
add
daa
sub
dec
sbb
jg
scas
ficom
aam
inc
push
xor
sbb
and
out
push
xor
retf
push
sbb
test
mov
xchg
cmp
movs
loopne
(bad)
pop
cwde
xor
loopne
jb
das
(bad)
out
(bad)
lahf
std
sub
inc
cli
sub
test
ror
jnp
or
nop
cdq
pop
test
mov
and
dec
pushf
aas
outs
(bad)
sub
adc
aad
jb
mov
mov
cmps
int
xlat
or
test
popa
sub
les
out
scas
add
dec
add
add
sti
aam
mov
xchg
xor
add
jb
push
adc
add
stos
inc
pop
jg
popf
and
dec
setne
aad
xchg
(bad)
dec
or
pop
jae
sti
mov
dec
out
mov
cwde
mov
sub
jbe
out
xchg
data16
test
popa
clc
xchg
scas
mov
in
inc
and
aas
fs
add
adc
cld
ret
cmc
mov
push
daa
enter
fdiv
int
sbb
mov
cs
fwait
lock
add
mov
jnp
sar
nop
out
push
mov
clc
lods
mov
push
sar
imul
xor
sbb
je
sub
fs
lds
fisttp
xor
xchg
push
mov
ret
mov
outs
adc
or
adc
out
js
shl
xor
popa
adc
cwde
fidiv
scas
sub
sub
bsr
push
shl
loop
and
daa
mov
stos
push
cmp
imul
xchg
push
fmulp
cmps
cmps
into
mov
daa
pop
pop
shr
ins
and
mov
jg
pop
and
stos
in
loopne
inc
je
data16
test
dec
dec
or
mov
jmp
pop
pop
jmp
fld
sbb
je
mov
or
gs
not
cmp
fwait
mov
jge
and
fst
cmc
sub
ja
or
and
mov
mov
leave
je
push
(bad)
sahf
scas
test
mov
sbb
mov
mov
fs
dec
or
mov
in
(bad)
sti
inc
push
jg
popa
into
cmp
mov
retf
fwait
popf
mul
mov
sub
xchg
jle
out
mov
jmp
jg
popf
mov
add
fld
dec
sar
out
jmp
mov
push
stos
sbb
ins
fstp
dec
call
sub
dec
xor
jne
cmps
and
out
imul
mul
or
mov
inc
outs
xchg
in
inc
jo
dec
xor
adc
xor
movs
dec
mov
lds
scas
adc
push
addr16
stc
add
inc
(bad)
sbb
ins
into
(bad)
call
xor
and
adc
out
outs
je
dec
sub
pop
xchg
pop
pop
stos
mov
push
shl
push
retf
ins
pop
(bad)
lahf
les
jmp
sbb
xor
(bad)
js
cmp
ss
cld
xchg
mov
in
das
stos
outs
cs
cmp
add
mov
push
mov
xchg
es
shl
rep
inc
sbb
pop
outs
call
imul
movs
shl
add
mov
das
fiadd
bnd
sbb
dec
lahf
push
cli
pop
sar
mov
sub
dec
mov
cmp
pop
push
out
jnp
mov
adc
add
mov
stos
inc
jmp
out
mov
mov
push
push
repnz
add
mov
outs
rcr
std
rcl
xchg
jp
(bad)
scas
pop
sar
cmps
das
imul
rol
inc
xchg
mov
jl
clc
jno
outs
jmp
clc
cli
xchg
push
mov
pop
or
push
rcl
and
mov
(bad)
jbe
dec
sahf
neg
add
jle
int
mov
add
lea
(bad)
dec
xchg
and
cmp
mov
xlat
sbb
dec
js
mov
stos
jno
or
jae
dec
pusha
jge
fild
pop
pop
mov
(bad)
adc
pop
leave
xchg
cmc
sub
dec
inc
sub
pusha
pop
fcmove
pop
movs
stos
retf
mov
out
stc
scas
mov
pop
add
stos
scas
repnz
push
retf
dec
mov
xchg
dec
sbb
imul
pop
push
push
fcom
cmc
addr16
int3
es
push
xchg
aas
sbb
pop
pop
shl
shl
and
sub
jbe
jne
int
ins
div
pop
inc
push
push
fnstsw
inc
mov
cmc
(bad)
sbb
movs
imul
push
rcr
movs
inc
mov
hlt
(bad)
sbb
out
add
(bad)
xchg
(bad)
pop
push
push
in
sub
ins
sub
ja
nop
cmc
sub
aaa
in
sbb
jmp
fs
mov
or
add
cs
scas
repz
push
xlat
jmp
jae
push
dec
sub
leave
inc
ret
xor
movs
pop
cmps
or
mov
cmp
push
jge
fdiv
mov
mul
jmp
dec
jmp
xchg
pop
mov
fidivr
mov
xchg
xor
jae
xchg
pop
fwait
mov
jnp
xchg
mov
push
push
retf
(bad)
int3
rcr
imul
xchg
test
pop
(bad)
xchg
call
mov
mov
ret
jecxz
in
adc
stos
push
mov
jge
cmps
out
pop
sbb
inc
or
aam
xor
pop
mov
cmp
adc
jmp
test
setne
cmp
sub
test
nop
or
adc
jg
sbb
sbb
sbb
xor
(bad)
movs
mov
out
push
xchg
(bad)
push
push
nop
fs
xchg
lea
repnz
pop
mov
dec
xor
mov
test
xchg
push
icebp
pusha
dec
fild
shl
and
add
outs
mov
jmp
dec
in
into
imul
scas
ins
movs
mov
test
xchg
jo
mov
pop
mov
nop
push
pushf
xchg
mov
xor
xchg
pop
push
or
cmps
repz
dec
scas
mov
test
(bad)
add
inc
mov
cli
adc
push
mov
loopne
jo
movs
xlat
sub
xchg
stos
outs
cs
adc
xchg
stos
cld
fmul
in
sub
mov
scas
leave
xor
sub
fcmovbe
movs
xchg
sbb
imul
inc
inc
iret
ins
stos
or
(bad)
mov
xchg
cld
int3
call
lds
repnz
in
js
jge
int3
jge
test
sub
loop
pop
fisubr
push
inc
fcmovb
aaa
cli
fisub
xchg
push
fild
xchg
jnp
dec
ss
repnz
mov
jae
fs
retf
push
loope
imul
pop
xchg
fistp
fs
aad
fild
xchg
mov
lods
mov
(bad)
(bad)
sti
xor
es
sbb
jns
dec
jg
xor
(bad)
fisub
jno
mov
mov
ins
mov
and
neg
push
xchg
js
or
sbb
mov
ja
sub
cdq
push
mov
(bad)
popa
cmp
cmps
mov
mov
add
jmp
mov
jae
xor
mov
mov
xchg
mov
and
mov
adc
rol
lahf
arpl
data16
pop
adc
adc
ds
(bad)
or
pop
(bad)
es
movs
push
push
std
mov
je
aaa
dec
push
outs
or
repnz
clc
jnp
cmp
jp
xchg
pop
std
push
ret
push
inc
sbb
loop
and
out
(bad)
mov
mov
jne
fist
inc
js
cwde
mov
rol
test
rcl
jb
fucomi
adc
sahf
dec
mov
pusha
in
cmp
and
push
mov
ret
sub
jmp
xchg
arpl
push
repnz
push
popf
ret
ss
ins
repnz
mov
jmp
add
int
jp
sub
ret
or
push
or
inc
push
retf
adc
mov
mov
dec
or
mov
mov
sub
dec
je
pop
pop
das
(bad)
fs
sbb
enter
imul
adc
pop
gs
cmps
jp
into
xor
out
inc
retf
cmc
std
pushf
(bad)
and
or
cmp
pop
pop
jae
mov
stos
pop
pmaddwd
in
pop
nop
pop
gs
lea
push
push
out
mov
mov
fdivr
cmps
mov
jl
frstor
push
stos
js
push
fistp
cwde
scas
inc
cmps
jge
push
in
mov
call
dec
push
xor
in
cmps
(bad)
neg
lahf
and
xchg
adc
daa
inc
sub
or
add
ins
inc
data16
push
stc
mov
xchg
addr16
data16
ins
ja
xchg
notrack
mov
daa
jne
adc
pushf
(bad)
jmp
lea
xchg
mov
(bad)
inc
push
mov
push
ret
test
adc
sbb
daa
aas
sar
cli
cli
aad
movs
cmp
in
stos
fisub
cmp
adc
inc
cmps
sbb
outs
rcl
out
inc
push
and
mov
rcl
push
mov
mov
not
popa
and
or
out
inc
sub
jbe
enter
or
iret
ret
jo
jmp
rcr
xchg
cwde
xlat
sub
inc
sbb
sub
add
pop
test
inc
aam
(bad)
sbb
loop
imul
cmovo
mul
(bad)
repz
(bad)
ins
mov
stc
stos
test
dec
mov
jg
adc
cld
xchg
mov
nop
jg
int3
adc
pop
test
jns
addr16
xor
fcmovnu
cmps
test
je
(bad)
cmp
pop
scas
movs
and
mov
fsub
shr
inc
ror
arpl
mov
mov
enter
inc
ja
nop
sbb
xchg
in
jmp
movs
pop
and
and
cmp
push
xchg
mov
adc
or
or
sub
mov
(bad)
jmp
jp
inc
cmc
outs
or
lods
js
std
repz
xchg
lock
stos
sub
xchg
jns
int
cwde
fisttp
lea
out
sar
xchg
fld
out
inc
mov
mov
adc
push
stc
pop
in
and
rcr
mov
mov
jl
std
js
dec
imul
add
das
cmp
sub
pop
ror
fst
inc
mov
rcl
push
sub
mov
cdq
xchg
sub
xchg
mov
scas
pop
pusha
les
xchg
jecxz
add
pop
jecxz
cwde
mov
xlat
cmp
stos
movsx
add
movs
jl
pop
or
dec
mov
push
xor
fsubr
adc
xchg
mov
sbb
jno
stc
jne
dec
cmps
iret
cmps
jnp
cwde
inc
mov
ret
int
sbb
fst
pop
dec
and
cmp
inc
jp
pop
push
stos
pop
push
lds
enter
dec
aam
push
cmps
lods
xor
loope
in
outs
push
pop
sbb
xchg
sub
stos
inc
mov
mov
mov
jbe
sbb
out
sub
aas
ss
adc
les
dec
fidivr
into
out
mov
outs
xchg
(bad)
popa
sub
das
aas
mov
xlat
mov
mov
mov
test
mov
xchg
or
je
aas
mov
mov
push
jp
ficomp
shl
mov
jae
mov
adc
outs
iret
stos
or
out
(bad)
stc
cdq
in
sbb
push
adc
inc
and
dec
imul
push
inc
cmc
push
js
mov
jge
pop
cmp
dec
outs
jb
pop
pop
cld
repz
outs
mov
dec
push
cmp
retf
loop
nop
mov
fild
fwait
stos
jns
pop
xor
cmps
out
push
out
push
sub
mov
scas
pop
aam
fist
stos
mov
sub
jnp
mov
lock
ret
push
mov
mov
fnstcw
aam
fwait
ins
xlat
cwde
movs
(bad)
out
arpl
das
mov
data16
in
xor
xor
xor
cmp
and
int3
dec
test
jecxz
inc
bound
test
jno
push
adc
nop
or
mov
fxch
inc
(bad)
adc
dec
xlat
push
lahf
push
in
and
fnstenv
and
mov
xchg
dec
and
out
jmp
popa
mov
cmp
les
mov
inc
mov
in
mov
ja
push
mov
xchg
pushf
jle
dec
pop
or
and
pop
mov
mov
jl
jno
add
xchg
cmp
mov
mov
adc
pop
cmp
xchg
jmp
xlat
fnstcw
es
add
mov
stos
loopne
icebp
in
enter
dec
pop
dec
jb
or
jne
adc
rcl
or
pop
dec
mov
lock
stc
lods
cmps
inc
xchg
adc
aam
jle
push
xor
add
adc
pop
mov
pop
movs
mov
adc
js
push
mov
jns
or
inc
xchg
adc
xchg
xlat
(bad)
repnz
xchg
adc
daa
pop
xchg
in
sbb
inc
mov
ficom
lahf
pusha
sbb
push
sub
sub
daa
es
call
xor
adc
cmps
cmc
lds
iret
je
ins
and
mov
sbb
imul
sti
jae
xchg
and
aad
push
into
(bad)
pop
vsqrtsd
out
ror
rcr
js
retf
sub
or
sub
popa
das
sbb
ins
and
push
sub
popa
inc
xor
xor
mov
ret
or
repz
sbb
test
pop
mov
les
mov
aam
sbb
bound
add
adc
lea
mov
jecxz
mov
ret
xchg
inc
and
mov
sahf
jno
call
push
loopne
ins
imul
xor
sbb
call
inc
add
fyl2xp1
aas
xor
cld
je
hlt
hlt
ret
ror
mov
mov
into
jp
iret
jns
push
std
(bad)
ret
daa
jae
leave
cli
push
stos
das
mov
ss
mov
fwait
pop
cs
jo
add
sbb
pop
jecxz
imul
adc
add
pushf
inc
rol
fwait
adc
and
loopne
call
xchg
test
es
mov
push
(bad)
outs
retf
mov
dec
ret
daa
mov
scas
hlt
xchg
or
std
ds
sbb
sub
in
call
push
dec
jmp
loopne
dec
pushf
movs
add
jp
mov
dec
mov
inc
int3
push
jbe
or
pop
pusha
or
lock
inc
test
mov
inc
popf
aad
mov
pop
mov
mov
out
jb
scas
jne
push
jle
cmp
imul
jae
push
add
pushf
mov
stos
mov
leave
mov
xchg
sar
frstor
iret
xlat
stos
pop
inc
mov
xchg
icebp
dec
mov
fnstsw
psrad
push
push
adc
hlt
pusha
rcl
fisttp
and
stc
add
jp
inc
test
mov
ins
and
lods
(bad)
out
lds
and
inc
fdivr
jp
bound
xchg
clc
bound
mov
xlat
in
cmp
lds
dec
icebp
mov
dec
retf
mov
cli
xchg
add
sub
popf
xchg
cmp
mul
and
push
cmc
rcr
xor
mov
test
adc
push
mov
pushf
and
pusha
enter
or
pop
imul
(bad)
js
jl
loop
(bad)
lea
sbb
lds
inc
fnstenv
pop
mov
mov
mov
push
add
int3
adc
rcr
ror
cmp
or
mov
xchg
cmp
dec
and
push
push
daa
ror
xchg
in
mov
or
jbe
in
dec
stos
pop
mov
call
xchg
adc
xchg
cwde
pop
popf
mov
jl
xor
xor
push
test
cli
xor
pop
cwde
ja
mov
data16
or
enter
jmp
sub
retf
and
in
daa
push
(bad)
test
xchg
stos
pop
pop
inc
dec
pop
inc
jbe
mov
and
aaa
int
sbb
mov
jne
adc
jmp
ins
test
aad
pop
in
and
aam
jecxz
sbb
sahf
cmp
push
bound
imul
rcl
and
lea
(bad)
aam
or
mov
in
fidiv
jae
mov
xchg
push
jecxz
mov
add
(bad)
mov
std
fistp
mov
(bad)
in
jg
imul
push
stos
xchg
cmps
add
cmp
pop
cmp
mov
adc
jbe
repnz
fild
test
sub
mov
push
jle
test
xor
add
dec
in
icebp
push
repz
cmp
xchg
adc
push
ret
xor
adc
mov
jg
ins
push
mov
sbb
stos
and
repz
rcl
repnz
js
rcr
mov
and
out
sbb
jmp
dec
mov
fpatan
fsubr
xor
dec
inc
inc
and
and
add
push
add
jp
call
add
jmp
cmp
js
ds
out
sbb
ja
lahf
call
lahf
bound
inc
dec
pop
cmc
in
stc
dec
int
shl
mov
cmp
dec
popa
ins
mov
push
mov
(bad)
sahf
cmp
ins
or
or
aaa
push
mov
xor
int
jl
(bad)
popf
xchg
push
sbb
fsubrp
fst
mov
test
fistp
jl
int
push
arpl
mov
mov
pusha
cmp
dec
sub
cld
cmps
jne
clc
adc
cmp
push
pop
pop
and
aas
shr
je
js
cmp
inc
out
shl
xor
bswap
das
pop
ds
push
fild
repnz
adc
push
test
mov
xor
outs
lock
popa
add
sbb
xchg
sti
cli
into
sbb
ds
sti
mov
push
fist
jmp
inc
push
out
dec
and
loop
fist
jmp
jne
push
int3
push
cli
mov
ja
scas
sub
jp
(bad)
mov
mov
retf
pop
push
les
into
sar
pop
xchg
test
jbe
push
jne
jne
dec
test
adc
dec
test
ror
add
mov
add
jg
fstp
mov
push
(bad)
pusha
sbb
xor
es
inc
inc
aas
mov
and
xchg
stos
dec
and
lahf
js
sbb
leave
dec
or
stc
jl
mov
jmp
aad
add
int3
cdq
lds
aaa
ins
dec
mov
push
inc
test
ins
mov
sar
or
sahf
jae
movs
fdivp
retf
xor
sbb
ja
and
hlt
and
(bad)
mov
sbb
(bad)
scas
popf
mov
pop
in
loope
inc
xlat
add
mov
test
jb
repnz
rcr
adc
(bad)
sub
iret
cmp
ret
cmps
js
sbb
jl
add
pop
cwde
inc
mov
and
hlt
in
cmp
nop
xor
xor
fistp
jnp
fcom
icebp
adc
mov
fidivr
push
imul
arpl
mov
xchg
push
test
iret
mov
hlt
mov
xchg
dec
push
sbb
mov
imul
das
and
jmp
dec
sub
mov
popf
mov
xor
or
pusha
pop
jns
aaa
lock
cmp
push
mov
sub
repz
rcl
and
lea
pop
xor
cmp
push
jmp
ror
inc
pop
lds
push
mov
call
add
scas
inc
in
mov
xchg
xchg
dec
inc
movs
mov
jl
jg
xor
loope
push
out
cmp
scas
js
xchg
cli
pop
cmc
jo
or
push
adc
sahf
adc
popf
test
xor
rcl
fist
fcomp
push
ins
fs
mul
jno
stos
sbb
or
test
xor
popa
leave
mov
outs
dec
inc
xchg
imul
fs
in
jb
inc
push
mov
jmp
shr
xlat
sbb
(bad)
dec
dec
xchg
ds
aad
push
ins
mov
cmp
popf
into
test
push
and
fisttp
into
xchg
sub
lods
pusha
dec
jp
push
jg
add
lods
xchg
(bad)
shr
cdq
cmp
mov
iret
mov
dec
lods
sub
pop
sub
and
shl
adc
mov
dec
je
outs
push
test
xchg
mov
mov
sbb
fistp
(bad)
repnz
jmp
pop
push
xchg
(bad)
hlt
mov
mov
nop
dec
or
and
pop
pop
inc
inc
loopne
out
cmp
pop
ficomp
outs
xor
xor
daa
adc
pop
das
(bad)
loopne
fwait
push
sbb
mov
sti
gs
sbb
ds
cmp
fwait
mov
fwait
mov
adc
loopne
add
or
pop
mov
sbb
dec
aam
and
pop
cmps
adc
daa
in
ins
jl
add
jecxz
or
test
pusha
out
or
or
rol
ret
mov
pop
stos
leave
mov
adc
pop
cmp
dec
sbb
sub
js
and
int3
sbb
fldcw
cmp
add
push
nop
aad
rcr
inc
pop
sahf
cmp
test
sbb
ret
pop
mov
sub
and
adc
in
stc
mov
pusha
jns
sub
inc
aas
jnp
and
mov
mov
sar
cmp
add
ret
cmps
cmp
icebp
leave
call
jl
cmp
mov
mov
adc
and
or
xor
sar
not
mov
cmp
clc
inc
xchg
sub
jb
push
dec
push
stc
sbb
popa
scas
dec
mov
out
je
(bad)
sbb
addr16
fcmove
lahf
sbb
movs
int
out
pop
fwait
outs
mov
sbb
jg
fidiv
xor
push
das
js
lds
or
dec
jmp
sbb
fidivr
lea
pop
mov
adc
fmul
cli
mov
mov
pop
loope
rol
push
inc
xchg
sbb
or
enter
out
add
nop
test
(bad)
adc
or
mov
out
pop
ins
push
push
in
inc
mov
outs
add
add
push
in
or
push
rol
call
cmp
mov
dec
cmp
jns
and
pop
shl
adc
mov
jmp
jno
fwait
pop
(bad)
scas
int
push
xlat
hlt
cmp
out
(bad)
sar
and
arpl
jno
jmp
ss
xchg
loope
sbb
pop
sub
leave
push
push
test
jae
xchg
xlat
mov
xor
push
nop
push
test
jecxz
cmp
sbb
ds
iret
inc
sub
enter
mov
je
int
aas
push
sahf
push
imul
mul
ja
mov
fimul
xchg
fstp
daa
(bad)
xor
pusha
pop
(bad)
inc
inc
inc
stc
ret
fnstenv
mov
jbe
in
daa
test
or
mov
not
(bad)
sub
xchg
ins
push
dec
mov
push
retf
rcl
push
pop
and
add
and
push
cmps
push
fnsave
pop
cdq
cmp
push
cmps
jnp
push
cmps
and
inc
jns
stc
scas
das
xchg
clc
jecxz
sub
mov
cmps
out
pop
add
cmps
xchg
pop
fbld
mov
pop
ja
sbb
test
jb
imul
and
outs
retf
enter
(bad)
push
dec
pusha
das
outs
hlt
adc
jae
inc
(bad)
pop
jne
retf
into
popa
xor
data16
cmp
fstp
xchg
or
rcr
mov
add
in
xchg
hlt
mov
shl
seta
adc
not
pop
mov
add
loope
cdq
mov
mov
xchg
push
dec
aaa
ins
xchg
jg
mov
or
push
jne
shl
push
add
out
and
sub
clc
inc
sbb
or
lahf
or
sbb
jo
cmps
xchg
adc
scas
or
retf
xor
cmp
in
push
push
les
push
inc
pop
sub
cwde
jge
xchg
mov
dec
ja
and
or
scas
adc
pop
adc
jno
cmps
movs
inc
mov
bound
xlat
inc
adc
pop
adc
xlat
mov
gs
xchg
adc
neg
xor
stos
dec
inc
adc
fsubr
mul
or
jno
retf
cmp
and
fistp
fcomi
call
adc
std
clc
or
xchg
in
aad
fnstenv
or
(bad)
ins
mov
xchg
lahf
shr
mov
pop
aaa
ss
push
arpl
lea
cmp
jecxz
inc
out
cmp
pcmpgtw
add
jecxz
out
and
mul
push
lock
sbb
(bad)
test
and
pop
popf
ins
ret
test
mov
adc
in
mul
inc
nop
jge
ins
push
mov
cmps
or
push
add
inc
pop
int
adc
add
dec
sbb
dec
pop
sbb
bound
jnp
cmp
pop
out
push
sub
and
pop
fnstsw
lods
test
pop
loope
fs
mov
cwde
shr
ins
test
stc
push
js
aam
and
push
xor
add
mov
or
cdq
mov
fs
sub
xor
sbb
mov
out
(bad)
cmps
pop
cdq
jge
rol
xchg
xchg
lock
movs
sub
push
xchg
stos
pop
aas
sub
test
xchg
imul
adc
sub
cmp
xlat
stos
inc
cmp
inc
out
(bad)
xor
jbe
mov
xchg
inc
(bad)
outs
or
xor
cmp
test
sahf
mov
dec
jl
push
inc
imul
sbb
jge
add
or
pop
arpl
ror
sbb
xchg
bound
ja
inc
mov
stc
pop
mov
xchg
mov
js
pop
sub
sbb
ins
sbb
push
xchg
mov
mov
cmps
push
test
popa
inc
push
shr
addr16
ret
push
cmp
fdivr
cmp
not
mov
mov
mov
inc
imul
mov
fdivr
ficom
cmps
jno
lods
shr
cmp
inc
aad
xor
mov
repz
adc
fistp
jmp
mov
cmp
leave
jbe
cwde
shl
fs
sub
mov
sub
test
fcomp
arpl
mov
(bad)
fist
(bad)
sub
jl
cli
int3
les
call
pop
loop
and
arpl
mov
mov
mov
nop
rcl
ror
jl
into
in
jmp
lods
arpl
cs
ror
push
sbb
add
(bad)
xchg
ds
adc
xchg
xor
cwde
mov
mov
enter
pop
(bad)
rcr
mov
pop
shr
pop
nop
or
xchg
mov
stc
or
repnz
and
test
mov
mov
cdq
mov
out
ja
out
out
je
xor
inc
mov
adc
jb
dec
dec
enter
jle
stc
inc
fsub
push
jno
adc
clc
sbb
pop
repnz
lods
jo
jno
and
call
jmp
adc
pop
int
push
and
imul
leave
add
leave
inc
inc
aaa
cmp
mov
mov
dec
call
push
mov
sub
sbb
call
inc
mov
jns
sub
or
add
icebp
and
cmp
sub
bound
dec
(bad)
add
pusha
xlat
jb
add
call
add
stos
and
rol
and
mov
and
mov
dec
cmp
js
xor
jne
fdiv
jmp
in
fimul
add
mov
retf
test
jl
or
inc
cmp
mov
lds
daa
call
push
fimul
xor
in
shr
(bad)
adc
add
xor
pusha
movs
xor
ja
mov
add
lods
push
hlt
xor
in
sbb
and
pop
stos
arpl
mov
cwde
add
addr16
jne
pop
movs
jne
sbb
retf
in
aas
dec
sbb
test
jne
sar
dec
mov
les
bound
leave
ret
ret
mov
in
xchg
fldenv
int
xchg
js
mov
adc
loopne
pusha
into
repz
stc
das
lods
loopne
loopne
inc
stos
jns
jo
int
xor
stc
aaa
xor
pushf
aas
mov
mov
les
push
pop
push
iret
xor
dec
pop
xchg
mov
xchg
fldcw
jnp
xor
scas
stc
ret
inc
jecxz
dec
dec
gs
cmp
je
mov
pop
pusha
dec
and
repz
xchg
(bad)
out
push
xchg
cmp
lods
(bad)
js
daa
lahf
cld
adc
and
inc
cmp
and
jmp
xchg
push
fnstsw
dec
mov
and
sbb
and
iret
icebp
bound
sub
sti
fldenv
adc
adc
test
sbb
fdiv
outs
nop
and
ret
movaps
por
or
add
neg
gs
addr16
bound
mov
dec
ficom
add
mov
test
lods
sbb
mov
lea
xchg
xchg
or
mov
dec
into
test
xor
jo
pop
inc
(bad)
pop
(bad)
sub
sbb
lds
mov
cdq
push
sbb
fimul
adc
dec
sbb
mov
adc
imul
ret
mov
lods
inc
loopne
sahf
std
add
and
or
mov
rcl
add
aad
sub
mov
popa
pushf
xchg
push
call
imul
xchg
stos
xor
and
out
push
bound
enter
xor
add
xlat
cmp
aam
dec
out
cmp
xchg
jae
dec
and
sub
sbb
sbb
shr
in
popf
pop
or
mov
cmp
adc
ss
int3
adc
xor
push
sti
bound
dec
sbb
hlt
or
dec
mov
push
in
and
push
scas
aaa
jmp
dec
ret
call
cli
addr16
mov
les
add
fistp
add
sbb
stos
js
mov
test
mov
rcl
or
test
jb
sbb
adc
pop
jnp
mov
add
or
fstp
xchg
movs
inc
or
nop
or
stos
adc
mov
push
stos
jbe
dec
pop
mul
fild
mov
aad
inc
pop
mul
in
cld
jb
clc
cli
mov
cmp
stos
pop
cmps
adc
mov
jmp
sahf
mov
(bad)
sahf
add
mov
mov
sub
xchg
sub
and
loope
pusha
cdq
sbb
xor
mov
mov
sbb
push
dec
xchg
daa
mov
ins
(bad)
pop
xchg
add
(bad)
push
push
or
xchg
jg
rcr
nop
loopne
mov
aaa
and
push
repz
rcl
inc
cmps
into
jmp
neg
dec
dec
test
stos
jmp
scas
or
jecxz
cld
mov
aam
mov
ins
adc
mov
dec
adc
xchg
repnz
xlat
cdq
or
mov
push
iret
gs
adc
xor
xchg
mov
das
es
xchg
pop
dec
push
mov
imul
jge
cdq
cmps
cmps
out
lods
mov
iret
jns
push
cmp
sbb
daa
and
inc
sbb
inc
add
inc
and
adc
cmp
test
cmp
(bad)
sub
add
mov
mov
inc
jmp
pusha
and
ss
test
hlt
mov
and
inc
push
mov
sti
mov
sete
pop
push
es
dec
push
call
imul
clc
test
loopne
js
push
scas
(bad)
xor
dec
mov
sbb
adc
or
sub
mov
push
jge
push
pop
add
pusha
pop
xor
mov
sbb
stc
pop
dec
test
loopne
mov
sbb
cmp
shr
daa
or
aad
dec
dec
out
icebp
mov
inc
jno
fisttp
pushf
cmc
mov
and
mov
in
sbb
sub
xchg
pop
add
fs
ficom
sub
mov
popf
pop
mov
dec
movs
test
and
mov
fbld
jmp
shl
outs
dec
jmp
adc
adc
xchg
inc
arpl
mov
cmp
inc
xchg
jmp
jno
adc
(bad)
sub
in
jg
loopne
bound
jbe
or
mov
fcomp
gs
fist
sbb
xchg
cli
xchg
mov
cmp
and
int
adc
or
mov
aaa
mov
adc
test
push
sbb
pusha
call
rol
jns
push
cmp
dec
xchg
sbb
mov
or
das
movs
mov
xchg
pop
jb
mov
mov
xchg
dec
and
and
sbb
rcr
inc
xor
mov
outs
mov
jnp
sub
pop
iret
and
cs
(bad)
hlt
jecxz
enter
pop
push
sbb
or
inc
sbb
int3
stc
xchg
push
nop
add
(bad)
pop
inc
pop
jmp
rcl
jp
xchg
add
scas
es
and
mov
loope
xchg
cmp
jp
jl
scas
sub
xchg
mov
clc
mov
push
mov
in
and
pop
xchg
and
sar
xor
ds
adc
fcmovne
mov
les
xchg
test
xchg
mov
pop
sub
repnz
jmp
fist
add
mov
in
cmp
or
popa
dec
pop
(bad)
js
je
pop
adc
out
fsub
and
loop
nop
rep
push
push
arpl
retf
int
sahf
or
test
rcr
rol
jl
repnz
sub
pusha
mov
jbe
out
jnp
sbb
mov
cmps
cmp
adc
das
pusha
sub
sub
push
(bad)
lods
add
dec
mov
popa
frstor
inc
(bad)
push
pusha
lds
cld
fisttp
ret
pop
sub
por
aaa
add
icebp
mov
xor
lds
and
shl
cli
aaa
inc
and
rol
mov
out
mov
xlat
adc
(bad)
fisttp
div
(bad)
sub
addr16
jp
dec
retf
sbb
pop
mov
mov
loope
mov
test
inc
sbb
jg
xchg
xchg
pop
ret
test
xchg
inc
dec
sub
or
mov
dec
jo
int3
sub
sub
dec
pop
cmp
jg
dec
je
(bad)
shr
add
imul
cmps
xor
cmps
cmps
ins
dec
lods
lock
mov
cmp
aam
sti
ins
js
xor
inc
ja
aad
call
pop
ss
clc
push
pop
dec
xchg
or
push
jnp
xchg
test
xor
jbe
mov
pop
fisub
pushf
xor
add
sbb
rcl
inc
bound
mov
fstp
dec
push
sbb
stc
lds
mov
(bad)
mov
shl
pop
add
je
sbb
adc
ja
mov
xor
mov
dec
mov
sti
sbb
adc
ret
retf
jbe
jl
mov
das
or
pusha
inc
xor
cmp
push
leave
mov
xchg
and
sar
jo
sahf
imul
fmul
fdivr
inc
pop
jns
out
in
mov
leave
movs
jmp
ret
lods
jle
jno
repnz
rcl
mov
mov
inc
dec
and
push
movs
shr
arpl
xchg
and
sbb
xor
call
ret
dec
dec
inc
adc
sub
mov
jns
jns
push
jle
pop
lds
int
hlt
push
jb
dec
aam
pop
push
cmp
cmp
push
sar
sbb
lds
fcmovnbe
inc
test
cli
add
and
iret
rcl
aaa
cmp
and
dec
mov
or
adc
xor
js
addr16
and
xchg
adc
adc
popa
fimul
mov
je
jmp
mov
repnz
push
iret
(bad)
mov
sti
enter
adc
mov
mov
int3
mov
dec
lods
shl
sbb
adc
movs
cld
cmp
hlt
ret
ins
jmp
adc
inc
sar
cmps
jle
popa
movs
stos
jne
data16
aas
mov
test
hlt
fwait
addr16
adc
test
cmps
mov
lods
xor
adc
pop
dec
cdq
nop
mov
sbb
call
sub
cmp
pushf
imul
(bad)
mov
push
out
inc
push
adc
retfw
cmps
mov
xor
int3
push
lahf
pop
jns
imul
inc
cwde
cwde
cmp
cld
cld
es
fisub
js
and
std
fnstsw
cmp
shl
mov
in
popf
enter
lods
lods
dec
push
mov
lods
pop
jo
add
xchg
pop
call
cmps
add
loopne
aad
popf
mov
fild
mov
popf
and
(bad)
repnz
sbb
adc
aas
mov
xor
xor
leave
mov
std
cmp
fbld
jp
movs
in
loope
rcl
int
inc
mov
dec
mov
fs
sub
or
xchg
push
mov
test
setp
jb
adc
in
sbb
imul
adc
inc
cmp
mov
loopne
das
inc
sar
ret
nop
pop
mov
jae
scas
das
fiadd
arpl
xlat
cmp
adc
xor
cmp
loop
jmp
data16
push
loopne
push
and
push
mov
data16
fsubr
mul
js
xor
xor
(bad)
cmp
stos
(bad)
jne
stos
mov
xchg
push
xchg
cmp
out
sbb
lock
mov
pop
mov
mov
pop
or
sub
mov
out
es
jmp
jecxz
(bad)
icebp
xor
xchg
jns
stos
sub
inc
push
mov
sub
mov
mov
mov
int
adc
int3
mov
xchg
xchg
sub
leave
push
sub
and
test
nop
push
jo
pusha
enter
push
sbb
loop
inc
test
int3
fbld
sbb
fcom
pushf
out
inc
icebp
dec
adc
sbb
imul
pop
shl
pop
fldenv
and
add
ds
dec
movs
mov
fisttp
ja
pop
(bad)
(bad)
fucomp
fnstsw
push
fadd
sub
or
mov
int
ficom
sahf
stos
out
sbb
addr16
sub
or
add
pop
out
movs
neg
push
push
hlt
fnstcw
jle
dec
das
xor
jae
pop
jle
int3
sbb
outs
je
cdq
cwde
mov
pop
in
js
bound
daa
aad
cmp
mov
out
ds
mov
scas
stos
ss
sti
xor
mov
sub
jb
rcl
adc
pop
ficom
jbe
mov
and
mov
repnz
cmp
sbb
cmp
or
ficom
cmps
mov
fsubr
cmp
call
xor
js
push
mov
sub
ins
adc
inc
mov
into
pop
xor
iret
xor
fldenv
and
pushf
(bad)
sbb
push
inc
mov
dec
daa
div
lds
outs
rcl
pop
test
push
jl
pop
ja
ss
pop
gs
adc
cmc
mov
sub
inc
mov
stos
and
jbe
lahf
sub
sbb
in
jmp
jmp
stos
test
out
jecxz
ret
loopne
pusha
jge
js
outs
sbb
mov
sub
dec
(bad)
inc
dec
rol
mov
test
xor
aad
stos
xor
leave
push
mov
call
popa
lods
jbe
sahf
mov
xchg
(bad)
call
pushf
ds
cld
inc
push
pop
sub
mov
and
movs
ror
shl
xchg
mov
rcl
dec
mov
mov
pusha
fsub
mov
imul
mov
mov
pop
xor
and
mov
popf
dec
ss
pop
rcl
ror
addr16
jno
dec
sti
out
mov
or
icebp
mov
nop
xchg
es
adc
pop
adc
(bad)
pop
add
xchg
xchg
sub
imul
jmp
inc
mov
out
loop
outs
jl
imul
je
or
int
or
nop
les
fdivr
adc
jnp
cmps
bound
push
add
(bad)
rcr
sbb
or
outs
iret
aaa
ja
lods
icebp
xor
add
xor
ja
scas
popf
xchg
popf
push
neg
pop
push
rcr
mov
pop
popa
and
and
dec
and
ror
inc
xchg
(bad)
sub
mov
in
inc
pop
hlt
fidivr
push
or
mov
sbb
icebp
or
xor
jb
(bad)
jl
fldcw
xchg
aam
imul
int
lea
jecxz
pushf
nop
mov
adc
xchg
fwait
das
xchg
lods
ret
push
sahf
inc
lock
dec
pop
mov
mov
dec
cwde
push
push
dec
(bad)
scas
iret
clc
inc
or
mov
ret
xchg
dec
loopne
(bad)
stc
in
scas
add
(bad)
movs
sti
sub
and
push
icebp
iret
loopne
pop
idiv
xchg
mov
mov
fdivr
enter
jnp
scas
stos
ins
pop
icebp
jbe
pop
xchg
mov
fs
jns
mov
adc
mov
mov
movs
inc
sbb
or
inc
adc
cmps
or
out
mov
sbb
push
mov
sbb
add
xor
mov
jnp
leave
dec
adc
imul
or
inc
jmp
cmp
mov
adc
xor
ror
imul
je
xor
leave
loope
pop
scas
out
psrld
or
push
lahf
inc
mov
lods
neg
sub
cmp
cmc
popa
and
fs
rol
cmc
shr
xchg
(bad)
mov
jecxz
test
jmp
sar
pop
mov
xchg
rol
or
cmc
sbb
outs
push
mov
std
addr16
jmp
push
mov
push
sahf
jle
test
xchg
int
or
push
dec
pop
mov
cmc
pop
jmp
inc
push
sub
push
and
mov
xor
clc
fnsave
daa
mov
outs
or
xchg
mov
mov
out
xor
dec
sbb
pop
loopne
pushf
and
leave
dec
mov
push
or
lods
cmp
(bad)
call
cwde
sbb
add
sti
retf
cmp
or
in
fstp
mov
xlat
idiv
adc
sbb
loopne
icebp
mov
xchg
ret
xchg
test
pop
adc
mov
(bad)
icebp
and
js
jae
xor
neg
jmp
and
xor
push
outs
xor
adc
out
cmps
call
pop
sahf
xor
pop
popa
mov
mov
pop
xchg
dec
mov
lods
xor
das
mov
std
fs
outs
adc
test
add
lods
mov
ror
pusha
add
adc
and
sbb
clc
neg
cld
xchg
cmp
jnp
ss
sub
push
mov
inc
sbb
mov
ins
mov
lea
cdq
addr16
inc
add
add
int
and
aas
xchg
sub
and
mov
mov
hlt
jl
fdiv
ins
pop
ins
lock
jbe
retf
imul
xchg
scas
(bad)
sub
das
jne
pop
imul
mov
xchg
mov
mov
mov
ror
popa
xlat
jle
(bad)
ror
mov
push
pop
pop
out
pop
add
test
ret
jge
pop
inc
into
pop
mov
add
and
fistp
aaa
arpl
push
dec
shl
jo
cs
shl
ds
stos
fwait
or
cmp
sub
mov
sub
arpl
ins
add
stos
(bad)
ins
clc
pusha
ss
fsub
inc
(bad)
xchg
mov
cmps
mov
add
rcr
mov
movs
sbb
jmp
xchg
imul
jo
push
call
jg
cmp
jmp
sbb
inc
test
fs
mov
xor
out
mov
stc
xchg
(bad)
arpl
cmp
les
jbe
mov
ret
and
push
mov
lock
call
scas
movs
sbb
cdq
sar
adc
stc
push
and
mov
aaa
or
call
adc
lods
retf
pop
pop
hlt
or
add
and
fisttp
idiv
call
push
cmp
ss
cmp
retf
xor
xor
and
add
sub
das
es
and
push
dec
push
ret
test
push
and
push
(bad)
and
dec
fidivr
cmps
out
dec
xchg
push
jmp
cld
mov
or
jl
clc
mov
add
std
push
pop
or
jmp
xchg
setnp
sbb
into
xchg
pop
int
icebp
push
dec
lahf
xchg
ja
inc
and
inc
je
and
dec
leave
repz
push
repnz
mov
test
inc
adc
dec
jb
mov
adc
in
mov
mov
aaa
lock
jp
sbb
sub
stos
nop
rcr
mov
ror
cmps
xchg
out
sbb
cmp
stos
jmp
jae
les
dec
mov
lods
jmp
jbe
mov
mov
out
cli
xor
cs
sbb
mov
js
pop
pushf
into
retf
(bad)
pop
call
shl
fcomp
add
cmc
push
ss
or
(bad)
jno
jns
xchg
xor
xlat
icebp
ins
repnz
sbb
mov
repz
fdiv
push
xor
sbb
aad
inc
and
mov
scas
fist
in
push
xchg
xchg
aas
add
ja
imul
xchg
add
push
jns
fmul
xchg
pop
mov
and
leave
mov
lahf
cld
push
xor
lods
adc
inc
adc
mov
xor
test
xor
dec
or
pop
ja
aas
in
stos
pop
add
popf
or
fldcw
or
ds
lods
xchg
ins
sar
cmp
push
sbb
sbb
sub
pushf
int3
nop
imul
shl
and
(bad)
sub
jp
mov
mov
mov
inc
xchg
push
mov
fsubp
out
test
mov
cmp
mov
dec
ror
sub
jg
rcl
(bad)
mov
inc
and
xor
mov
loop
rol
imul
inc
cs
sub
rcr
scas
push
inc
xchg
cld
bound
loop
(bad)
(bad)
push
fisttp
adc
push
int3
sub
loope
pop
push
inc
out
sub
push
mov
dec
clc
dec
mov
es
mov
jl
pop
jl
les
mov
enter
cmp
mov
movs
(bad)
jmp
rol
vmread
test
fstp
mov
loope
dec
inc
loope
ja
xor
cmp
jp
sub
jb
lods
mov
push
in
imul
dec
pop
lods
int3
xor
add
jne
add
mov
test
push
pop
adc
cmp
scas
shl
pushf
int3
das
ret
xor
cmps
popa
cmp
ds
js
sbb
cmp
xchg
jmp
mov
das
cli
pop
ss
jns
cmp
adc
sub
mov
outs
leave
and
pusha
ret
push
pop
and
ds
aaa
ins
dec
mov
mov
xchg
sub
push
daa
pushf
push
mov
addr16
mov
int3
xor
inc
or
cmps
sahf
pushf
push
add
xchg
in
sbb
push
dec
and
xor
xor
pop
push
clc
fcmovbe
dec
repz
or
jle
pop
sahf
fldcw
ret
loopne
xchg
pop
je
or
xchg
push
fwait
cmp
pop
(bad)
mov
push
and
fsincos
cmp
loope
inc
mov
push
repz
push
mov
inc
add
mov
fcmovb
adc
mov
rol
cmp
adc
or
test
out
imul
inc
repz
xchg
mov
ror
hlt
test
daa
sub
(bad)
mov
cli
inc
sub
fadd
ret
sbb
fwait
dec
lods
lahf
movs
aam
out
adc
leave
ret
and
loop
push
(bad)
mov
jle
cmp
loope
(bad)
nop
(bad)
(bad)
aad
or
fwait
jg
mov
mov
mov
or
je
adc
pusha
sbb
pop
sub
aad
out
retf
mov
out
and
shl
mov
xchg
ror
xchg
in
movs
sar
shl
cmps
mov
inc
in
mov
mov
aas
xchg
sub
loop
je
inc
push
and
add
inc
mov
in
enter
and
xor
dec
clc
dec
pop
in
mov
mov
je
sub
lods
cld
mov
push
outs
dec
mov
inc
mov
bound
cmp
mov
shl
lahf
xchg
jmp
test
push
mov
dec
adc
stos
rol
ds
sahf
dec
adc
pop
int
lods
xor
clc
push
sar
mul
jns
add
mov
pop
xor
push
mov
loopne
ins
fld
adc
adc
popa
mov
jecxz
cmp
cmp
in
dec
pop
push
and
lods
fist
xchg
jg
or
bound
ds
int
lods
es
lea
ret
sbb
add
pop
ja
outs
fdiv
add
mov
mov
push
xchg
mov
out
or
iret
dec
pushf
stos
xchg
pop
pop
popf
cs
inc
inc
xchg
and
push
jbe
aam
jp
xchg
xchg
and
popf
mov
cwde
ins
adc
inc
sbb
pop
sbb
cmps
arpl
pop
or
retf
mov
mov
or
add
dec
hlt
cmps
adc
out
add
addr16
imul
mov
sbb
fcomp
xor
mov
or
sti
push
fnstcw
loopne
shl
sub
cmp
push
mov
ret
pusha
jnp
fisttp
mov
aas
(bad)
out
push
out
xor
mov
xor
ins
xchg
jnp
mov
inc
fld
dec
push
add
add
mov
icebp
xchg
mov
adc
(bad)
adc
and
enter
jge
or
xor
pop
shl
pop
cwde
cmp
(bad)
adc
movs
icebp
push
jae
jo
mov
aaa
mov
mov
push
mov
mov
xchg
cmps
lea
mov
movs
lods
ret
gs
daa
and
pop
mov
imul
mov
imul
shl
mov
icebp
outs
pop
inc
dec
pop
mul
fistp
(bad)
push
data16
stos
ins
pop
pop
(bad)
call
ja
and
cmp
fmul
dec
sbb
iret
test
jmp
xchg
repz
cld
jg
push
inc
imul
sbb
cmp
mov
and
xor
addr16
push
pop
push
dec
or
aas
(bad)
stos
aaa
sar
xor
jg
outs
sub
das
ja
ins
movs
pop
adc
ins
xchg
shl
mov
(bad)
jo
mov
xchg
scas
pop
(bad)
loope
and
mov
adc
xchg
dec
cmp
call
and
mov
dec
or
add
add
mov
ins
int
xor
mov
ins
test
int
or
jl
inc
das
push
arpl
adc
add
jo
outs
lock
dec
daa
and
rol
xchg
sub
cmp
js
adc
aaa
sbb
dec
mov
icebp
mov
push
lods
inc
pop
mov
xchg
push
outs
xor
push
adc
adc
dec
data16
push
or
ins
inc
clc
je
pop
fadd
or
ret
inc
fnstsw
jmp
adc
pop
mov
inc
ret
icebp
adc
daa
xor
push
mov
add
dec
fldpi
setne
mov
add
dec
xchg
push
push
rcl
add
push
inc
mov
xchg
xchg
pop
jmp
mov
stc
pop
mov
sub
xchg
and
inc
js
jg
mov
cmp
jne
mov
outs
xor
pushf
pop
cmp
xchg
stos
push
or
push
pop
cmps
cdq
movs
call
mov
cmp
aaa
xor
xchg
iret
in
jno
lods
jmp
sbb
mov
in
rol
push
adc
and
push
jecxz
and
pop
fbstp
or
or
test
pop
cdq
xor
call
jb
stos
cmp
pop
cwde
sbb
adc
das
ins
and
push
mov
mov
les
inc
jbe
cs
dec
inc
xchg
mov
aam
sub
int3
in
xchg
call
outs
lock
call
outs
call
pop
xchg
div
int
mov
or
in
sub
lock
mov
jb
sahf
sbb
imul
loope
ins
imul
or
pop
test
(bad)
addr16
enter
imul
test
aad
mov
pop
sub
daa
nop
js
sar
pop
jno
jl
sbb
sub
add
std
mov
sub
pop
mov
and
cmp
dec
push
jne
or
or
psrld
fsub
push
xchg
out
xor
mov
sub
add
fld
stc
imul
fwait
lods
mov
push
pop
jle
inc
mov
add
ja
sub
mov
jl
call
sbb
fisttp
sub
cmps
scas
call
test
addr16
sbb
xchg
xchg
mov
ret
jl
cmps
mov
sub
push
aaa
pop
and
xchg
push
ret
jl
(bad)
push
jbe
fidiv
mov
popa
adc
ja
xor
int3
fsubr
jle
push
sub
jno
xchg
jg
sbb
sbb
mov
mov
jmp
ds
inc
and
into
leave
jo
in
cmp
shl
mov
or
or
test
xchg
pop
out
xchg
cwde
bound
pop
or
cmp
dec
in
fnstsw
stc
lods
je
inc
jns
push
mov
stos
mov
push
jno
jg
lea
push
mov
and
dec
cmp
adc
xrelease
xchg
rcr
sahf
fcmovnb
ins
mov
std
xchg
mov
mov
push
shl
inc
inc
(bad)
out
add
inc
sar
mov
icebp
inc
imul
inc
adc
sub
mov
and
popa
jl
movs
push
ins
jmp
(bad)
mov
gs
sbb
mov
xor
xchg
push
ja
inc
aad
ins
push
je
sbb
cmp
inc
cwde
enter
add
inc
adc
(bad)
mov
outs
add
inc
mov
cli
inc
xchg
and
adc
adc
stc
jbe
adc
idiv
test
push
int
adc
sahf
sti
cmp
or
repnz
cmps
mov
mov
push
jle
or
and
dec
es
ja
inc
add
pushf
frstor
mov
xor
(bad)
mov
test
fs
es
add
push
or
cmps
movs
es
add
mov
push
aam
inc
add
push
ins
pop
adc
int3
sub
add
out
imul
mov
xor
movs
xor
mov
adc
in
push
pop
cdq
sbb
push
(bad)
out
xor
push
out
cld
(bad)
cmp
je
push
out
sub
push
popf
(bad)
stos
inc
and
dec
mov
test
pop
add
xchg
dec
sub
mov
push
or
xchg
sahf
adc
mov
push
lods
out
and
adc
(bad)
in
and
sub
pop
xchg
add
pushf
mov
in
repz
aam
shl
and
xor
cdq
enter
push
int3
movs
fs
inc
sbb
mov
dec
dec
call
push
push
xchg
scas
jnp
or
cmp
cmp
neg
popa
ret
cld
push
aam
(bad)
jae
leave
inc
js
fist
into
fwait
test
lea
pushw
(bad)
xor
mov
call
ja
push
dec
call
stc
jecxz
jb
aaa
pop
mov
repz
das
out
popf
sbb
lock
xlat
and
sbb
dec
push
fs
hlt
arpl
adc
xchg
std
push
pop
minps
scas
shr
cwde
mov
or
inc
int3
cmp
stos
and
ret
push
push
mov
xchg
outs
mov
sub
arpl
add
jnp
add
fs
push
xor
inc
pop
fstp
fmulp
sti
or
jmp
cmps
mov
(bad)
sahf
aaa
dec
cmp
dec
mov
push
adc
in
(bad)
das
faddp
or
lods
adc
mov
push
mov
cmp
xor
addr16
mov
test
sub
addr16
mov
repz
ja
xor
dec
fisubr
and
fsubr
jle
aad
in
je
cwde
or
inc
aad
xchg
popf
sub
out
mov
ins
dec
jns
xor
mov
mov
mov
mov
lahf
shr
loopne
test
imul
sub
push
mov
(bad)
sbb
std
repnz
sub
inc
jno
dec
jns
fdivr
dec
scas
loop
dec
or
out
dec
jmp
dec
imul
lahf
aad
dec
mov
addr16
gs
xor
mov
dec
xor
mov
gs
push
ret
or
jbe
outs
push
test
push
and
sti
jbe
cmp
xor
in
dec
(bad)
es
sub
pop
jno
inc
dec
sbb
std
sub
or
mov
lods
xor
dec
or
inc
je
xchg
and
sbb
add
add
aam
mov
jmp
push
or
mov
sbb
aad
repz
retf
cld
jnp
dec
scas
in
(bad)
jae
jns
pop
jb
out
inc
mov
xchg
(bad)
mov
inc
mov
dec
inc
jecxz
dec
jne
push
jmp
ins
inc
and
dec
lods
lahf
rsqrtps
or
cli
out
mov
scas
add
mov
in
cmp
repnz
mov
pop
loopne
push
leave
jae
inc
stos
xchg
pop
mov
int3
inc
jne
mov
add
or
std
or
or
lds
pop
repnz
enter
pop
js
sub
je
push
test
outs
add
pop
push
pop
cmp
cmc
sbb
xlat
sub
mov
jno
pop
push
inc
adc
nop
xor
pop
xchg
jecxz
nop
call
mov
adc
scas
ficom
lahf
shr
dec
cmc
call
(bad)
and
(bad)
ins
inc
div
lea
scas
je
cmp
rol
les
test
int
add
xlat
jg
rol
adc
xlat
stos
xor
repz
and
sbb
adc
pop
lock
mov
jge
xchg
fcom
inc
inc
ficomp
sahf
dec
hlt
dec
loopne
mov
inc
(bad)
clc
movs
adc
movs
sar
inc
call
into
and
imul
or
stc
shl
int
lods
in
push
imul
mov
push
fst
inc
push
dec
and
mov
xor
(bad)
and
push
es
sub
lock
pushf
popa
psubsw
int
cmp
cmp
popf
jb
stc
mov
push
adc
test
(bad)
mov
bound
push
pop
dec
es
jb
pop
xor
cwde
sar
jp
scas
cmp
mov
imul
mov
leave
push
es
add
fidivr
icebp
or
lahf
aaa
out
stos
mov
inc
sbb
inc
add
xor
test
clc
cmc
out
push
cmp
retf
fnstcw
push
dec
xor
sahf
inc
pop
pop
adc
add
popf
call
out
call
out
lods
fisub
call
jmp
xor
mov
leave
nop
retf
dec
xor
(bad)
dec
jmp
aad
jmp
(bad)
repz
mov
pop
pop
and
inc
aas
and
test
pop
sbb
dec
outs
cli
or
shr
xchg
lock
xor
in
test
or
das
jo
mov
lock
jmp
cmp
in
sbb
fbld
mov
add
push
aam
push
movs
push
data16
ins
xor
dec
and
outs
rcr
fwait
leave
xchg
rcl
inc
fnstsw
mov
cmp
xchg
imul
sub
das
pop
int
fs
sbb
js
stos
add
add
setb
loopne
push
gs
cli
fisttp
xchg
and
sahf
sar
rcl
jg
(bad)
call
rcl
mov
sbb
push
sar
imul
retf
fwait
pop
in
es
jmp
inc
ss
inc
arpl
into
mov
add
outs
inc
pop
scas
mov
xchg
mov
xor
xor
das
mov
cmp
sbb
pop
xor
push
data16
xchg
and
ror
gs
lahf
or
jg
mov
inc
bound
fcom
add
loope
das
mov
mov
je
push
xor
or
mov
js
mov
sub
pusha
repnz
add
dec
sbb
jno
or
leave
aas
adc
hlt
sub
cli
sbb
fdivp
push
sbb
pop
outs
push
add
loop
mov
mov
add
movs
add
sbb
dec
sub
fs
sub
sbb
shr
std
add
(bad)
stos
add
or
push
shl
mov
mov
fsubrp
shl
xchg
sahf
mov
fistp
add
inc
mov
cld
inc
xchg
bound
in
out
jmp
xchg
xchg
mov
xor
out
inc
cmp
and
mov
inc
repz
mov
mov
retf
and
adc
stos
movs
std
ins
lds
bound
sti
mov
mov
pop
das
mov
add
lods
retf
mov
test
lods
outs
gs
stos
xchg
out
mov
push
xchg
push
xchg
(bad)
pop
in
pop
repz
and
push
jne
cmps
cmp
cdq
or
cmp
je
mov
fwait
xchg
loop
dec
or
rol
sub
iret
or
adc
ins
jns
test
(bad)
ins
jg
cmc
in
mov
test
sahf
shr
jp
adc
idiv
cmps
dec
pushf
pop
fistp
mov
push
jae
das
mov
cmp
or
cmp
push
into
aam
jnp
sub
inc
movs
cmc
lahf
outs
rcl
push
scas
xor
cmp
imul
inc
dec
sbb
adc
and
out
out
pop
out
ins
aaa
out
cwde
sub
out
ins
sub
jl
or
dec
js
addr16
cmps
(bad)
mov
mov
sub
ret
and
mov
adc
lea
push
ds
push
les
add
sub
jne
in
pop
fistp
xor
fsub
xor
(bad)
lahf
pop
push
dec
add
inc
cmp
and
inc
sbb
gs
inc
ss
ror
push
sub
pop
xor
adc
pop
mov
push
inc
or
cmp
cdq
sbb
hlt
xor
mov
xor
pushf
jo
push
lahf
sub
ins
dec
inc
les
out
xchg
sub
stos
shl
mov
std
xchg
ficomp
lods
sub
shr
out
cdq
sti
in
iret
test
cdq
xchg
xchg
ret
cmp
icebp
sub
jg
in
jmp
add
xor
and
lock
cmps
mov
test
in
ja
adc
(bad)
cmp
add
repz
cmp
and
sbb
sub
pop
jne
xor
cmps
inc
ret
pushf
mov
jecxz
adc
xor
pop
dec
inc
outs
adc
shr
xchg
dec
rcr
(bad)
mov
mov
sbb
pop
je
scas
push
les
lods
ins
dec
sub
fisubr
lahf
or
(bad)
imul
dec
mov
push
jns
or
adc
ss
mov
sbb
stos
pop
in
push
push
loope
mov
lahf
add
mov
and
push
lea
adc
jge
imul
jg
fs
cmp
xor
sub
fisttp
cmc
mov
ret
or
xor
leave
cli
push
push
add
inc
stos
retf
dec
sbb
jle
dec
sub
(bad)
in
cmp
or
pop
jecxz
bound
retf
shr
push
inc
or
jne
and
scas
into
nop
jmp
xlat
out
in
adc
ja
pop
mov
push
scas
imul
ja
imul
fcmove
xchg
push
ins
adc
add
xchg
jge
je
push
inc
(bad)
fwait
shr
pop
out
inc
push
cmps
push
jmp
jp
dec
pop
loopne
add
cmp
cmps
xor
or
mov
mov
add
test
sub
xchg
or
js
dec
call
jno
cmp
mov
add
mov
jne
dec
shl
sbb
fs
inc
xor
sub
into
inc
and
xchg
aad
mov
mov
jo
add
outs
cli
add
cmps
loopne
repz
fucom
pop
push
xchg
dec
int3
scas
xor
ret
mov
inc
test
je
cmp
sub
jg
cmp
cs
shl
inc
push
pop
retf
sbb
cmp
mov
adc
dec
pop
inc
mov
adc
mov
xchg
sub
daa
xor
movs
aam
jmp
(bad)
fldl2e
push
inc
out
adc
mov
sbb
mov
gs
aad
test
inc
shl
stos
call
xchg
xchg
mov
data16
push
mov
xor
out
xchg
mov
mov
pop
jmp
in
aad
mov
outs
call
pop
mov
repz
clc
and
icebp
pop
(bad)
mov
inc
inc
fs
mov
push
imul
xchg
or
int
movs
sub
pushf
inc
push
lods
sub
cmp
(bad)
dec
pop
jl
das
ret
push
or
jge
xor
mov
leave
outs
dec
test
dec
mov
pop
not
sti
div
mov
ins
js
add
int3
shr
icebp
sub
ficomp
jo
or
sub
mov
daa
vmread
mov
jne
test
sbb
sub
data16
retf
jb
sub
adc
xchg
mov
fst
sahf
dec
iret
(bad)
dec
repnz
int3
jo
adc
fisubr
push
outs
cmps
aam
adc
mov
loope
dec
aaa
or
or
sub
in
mov
sub
adc
mov
test
mov
xor
jmp
fist
jp
xchg
push
jnp
rol
(bad)
call
mov
xchg
push
imul
mov
ins
cmc
sbb
mov
xchg
sbb
nop
xor
gs
inc
or
xor
out
stos
mov
sub
pushf
cld
sbb
pop
js
pop
test
fsub
xchg
mov
dec
xchg
push
imul
mov
shl
cs
pop
stos
pop
inc
pop
push
sbb
das
mov
adc
sub
je
idiv
sub
pop
ret
fidiv
push
enter
and
arpl
movs
clc
cmp
xor
jo
dec
cmp
xchg
sub
mov
mov
fistp
xchg
xchg
popa
cmc
mov
xor
(bad)
int
rcl
jnp
push
jne
pop
push
sub
sbb
dec
push
mov
ret
mov
jge
movs
and
test
xchg
mov
mov
dec
mov
jb
sbb
and
inc
or
jle
push
xchg
test
jecxz
pushf
sub
xchg
das
je
call
jmp
or
adc
out
lods
push
pop
xor
or
add
mov
repnz
test
mov
ror
add
push
pop
loop
pusha
popa
lods
adc
aaa
jae
and
dec
jno
mov
mov
push
inc
aaa
cmc
jge
lahf
cmp
and
cmp
sub
int3
mov
dec
and
test
iret
xchg
dec
xchg
aad
or
int
icebp
xor
out
dec
in
dec
inc
dec
dec
or
(bad)
cli
cwde
xchg
cmps
push
jmp
xchg
jno
cmp
push
jl
into
sahf
ss
mov
call
ds
int
add
inc
lahf
addr16
cmc
mov
imul
jge
mov
inc
cmc
mov
jmp
shl
inc
jp
mov
cmp
pop
and
call
int3
loopne
cwde
push
or
sahf
sub
mov
sub
mov
push
imul
test
mov
add
ss
pop
es
int
sbb
ffree
imul
and
(bad)
xchg
dec
lea
in
dec
cmp
(bad)
cld
inc
push
adc
pop
lods
sub
xor
pop
fs
push
arpl
(bad)
stc
pop
shl
xchg
push
test
stos
jp
sbb
xor
add
cld
xchg
in
pop
lock
stos
mov
xchg
int
jp
mov
nop
mov
jg
fadd
gs
push
movs
test
inc
push
mov
movs
into
imul
mov
mov
push
sbb
pop
mov
bound
mov
mov
inc
mov
xchg
test
test
xlat
ret
out
pop
fnstcw
ret
lea
jne
fcmovb
adc
cwde
inc
daa
popa
loopne
push
xor
xlat
or
xor
ja
push
jmp
mov
loop
arpl
and
or
jmp
xor
or
das
aaa
sbb
push
mov
fild
es
(bad)
repnz
jp
adc
jb
mov
jns
mov
scas
xor
jns
fidivr
mov
(bad)
adc
add
movs
mov
into
outs
mov
les
pop
push
mov
push
inc
stos
test
in
or
sar
fidiv
jnp
jno
mov
dec
mov
cwde
popa
hlt
(bad)
mov
sahf
jns
repz
fmul
dec
adc
int3
push
xor
pop
sub
xchg
punpckhdq
mov
mov
push
adc
cwde
je
ja
mov
sti
dec
jmp
mov
pushf
lods
xlat
adc
xor
cmps
cld
xor
and
stos
and
push
cmp
add
push
jbe
stos
jb
lods
xchg
js
mov
stc
bound
(bad)
sub
xor
and
jmp
fs
call
cmp
and
test
sub
icebp
cmps
xchg
cs
jno
or
xchg
ror
cwde
cdq
cmp
adc
lea
leave
adc
add
dec
sub
jbe
mov
push
and
loop
lea
ins
inc
add
sbb
popf
pusha
out
int
fsub
dec
lahf
mov
clc
lock
push
imul
xchg
mov
cmp
and
lods
out
mov
adc
jle
ret
loop
dec
pop
cmps
push
out
daa
inc
in
addr16
enter
std
add
ret
sbb
add
repnz
cld
les
pop
jb
vpaddb
pop
jecxz
test
mov
push
mov
pop
xchg
adc
jmp
rol
pushf
xlat
inc
test
ret
daa
adc
cwde
sub
mov
push
test
or
push
call
xor
mov
inc
test
jmp
xlat
inc
outs
out
xor
or
pop
inc
cmp
dec
repz
in
sub
dec
imul
jmp
test
xchg
ins
add
ja
fwait
push
cdq
xchg
and
add
ret
xchg
mov
paddsw
mov
cld
pusha
push
sub
sbb
out
loop
dec
mov
out
nop
mov
repz
mov
push
fstp
inc
adc
jmp
sub
test
ret
ins
cdq
movs
or
sub
jecxz
cmp
or
jmp
idiv
leave
add
rcr
fdiv
jge
fs
mov
data16
repz
stos
pop
daa
ds
aad
sbb
es
aas
sti
ja
test
mov
stos
scas
dec
dec
jp
jbe
arpl
jp
pop
mov
std
mov
hlt
xchg
shl
leave
jae
inc
aam
and
xchg
push
adc
xor
adc
jo
repnz
pop
sub
mov
daa
hlt
pop
and
fwait
xor
jge
stc
mov
xchg
and
lods
or
or
inc
xchg
add
push
pusha
cmp
inc
inc
inc
jnp
xor
xchg
xor
aad
add
inc
pusha
jnp
dec
or
mov
mov
out
outs
test
outs
shl
fcmovb
dec
test
in
pop
sar
ins
add
mov
xor
xor
call
mov
addr16
loope
ret
test
inc
pop
fld
jno
mov
in
cmc
xor
cmc
out
shl
inc
mov
cwde
sub
bound
push
or
leave
sbb
shl
ret
outs
fbstp
inc
(bad)
adc
cmp
and
(bad)
xor
dec
out
imul
push
mov
sbb
pop
fimul
push
ret
loop
loop
test
jo
into
int3
in
lea
ss
xchg
sub
dec
pop
push
jge
inc
xchg
mov
sub
or
mov
mov
cmp
fnstsw
ror
xchg
(bad)
xor
pusha
xchg
fdiv
push
jge
xor
mov
fisubr
lock
out
cli
aaa
pop
imul
add
xor
cmp
mov
mov
bound
push
adc
add
push
sub
daa
mov
ror
stos
movs
in
sub
repz
pop
in
mov
out
cmp
and
mov
loop
ficom
push
aaa
sbb
test
adc
(bad)
enter
pop
shld
mov
mov
mov
arpl
pop
or
aad
push
inc
cmp
push
mov
xchg
iret
xchg
test
jge
cdq
dec
test
mov
shl
in
enter
pop
movs
mov
cmps
rcr
aaa
cmp
sbb
or
cmp
es
push
mov
push
pushf
test
aas
lea
cdq
out
jbe
aam
pushf
pushf
lods
add
lock
das
dec
push
mov
(bad)
mov
xchg
or
out
mov
popf
xor
sbb
mov
scas
and
rol
mov
pop
test
cmps
aam
and
pop
push
push
pop
(bad)
mov
dec
ret
(bad)
sbb
and
jle
xlat
mov
add
mov
enter
push
test
movs
mov
sub
rcl
ret
mov
fbstp
gs
pop
sbb
add
mov
ins
jae
nop
ss
cmp
jns
xchg
mov
mov
and
gs
or
adc
fld
mov
mov
mov
jbe
add
add
inc
sahf
mov
test
dec
cld
mov
loope
xor
enter
shl
retf
rcl
test
and
mov
fs
aas
cdq
pop
inc
sbb
ja
adc
inc
adc
push
pop
mov
jge
inc
pop
and
xor
xlat
les
lock
mov
aaa
int
lock
fcomp
pop
add
cli
inc
sbb
push
loopne
mov
adc
sahf
imul
mov
(bad)
pop
es
push
sbb
ret
adc
imul
jp
cdq
addr16
into
adc
enter
adc
or
xor
shl
cmp
mov
or
adc
out
sbb
cmp
imul
dec
jge
(bad)
add
pop
pop
sbb
sahf
pop
inc
in
iret
mov
or
cs
adc
test
rol
cmp
inc
fadd
call
jmp
enter
wbinvd
in
and
cmp
pop
into
add
dec
inc
jne
repz
push
js
xor
icebp
pushf
jb
cli
test
push
(bad)
test
loopne
cmps
test
mov
sbb
pop
pop
(bad)
or
popf
mov
ins
inc
repz
inc
pop
mov
ret
mov
(bad)
cmp
fcom
nop
bnd
push
push
fst
stos
retf
add
xor
xor
add
rcr
enter
addr16
fsub
push
jp
fdivrp
lods
mov
mov
push
lds
push
std
inc
fidivr
mov
test
sub
pushf
and
pop
mov
add
dec
cwde
test
jg
xlat
jecxz
sub
js
retf
lahf
ror
inc
dec
jmp
pop
push
call
(bad)
mov
stos
add
cs
push
pop
and
popf
push
mov
pop
mov
push
bound
add
test
test
xchg
cli
cmp
retf
mov
lds
hlt
dec
enter
sahf
div
iret
push
mov
scas
pushf
mov
daa
das
jnp
pop
sub
cs
movs
push
arpl
pushf
aad
mov
xchg
xchg
mov
jmp
(bad)
mov
mov
stos
ins
xor
stos
jl
jae
movs
mov
inc
mov
cmps
adc
mov
sahf
xchg
out
retf
lahf
sahf
enter
xor
sub
xchg
clc
pop
loop
data16
int3
clc
ss
pop
push
iret
fcmovnbe
ds
cdq
xchg
aad
or
mov
(bad)
das
in
mov
hlt
xchg
daa
xor
xchg
mov
jno
shr
jmp
and
sub
push
cmp
xor
sub
inc
pop
ss
dec
iret
popf
sbb
and
les
push
rol
xchg
ins
xchg
cmps
and
out
retf
ror
cdq
lds
jmp
push
jp
out
pop
push
outs
test
mov
(bad)
jmp
popa
or
test
ret
and
arpl
int3
fild
into
sbb
mov
pop
push
bound
ja
xor
mov
adc
call
js
sti
rcl
dec
mov
dec
pop
movs
(bad)
iret
jle
add
les
xchg
adc
call
mov
sbb
stc
jno
inc
jg
in
mov
lea
cs
imul
and
inc
jecxz
pop
pop
lea
sub
mov
or
inc
lods
lahf
cmp
push
fcmovnbe
cmp
sbb
jo
hlt
pop
fs
fsubr
push
shr
lds
jmp
adc
daa
mov
fisubr
mov
(bad)
or
cmp
xor
and
leave
(bad)
repz
fld1
adc
cmp
jle
movups
and
leave
mov
jmp
inc
mov
inc
ins
jo
dec
and
push
pop
and
mov
pop
(bad)
sub
aas
pusha
gs
(bad)
stc
mov
mov
popf
fxch
pushf
pop
es
jg
xchg
lock
cmp
pop
jns
xor
mov
dec
into
xor
inc
ret
inc
or
and
pushf
lods
(bad)
jmp
push
imul
imul
test
mov
aad
scas
adc
sbb
bnd
push
mov
mov
inc
loopne
cmp
mov
jb
ficom
sti
mov
mov
mov
lods
retf
test
fldcw
and
cmp
cmp
idiv
stos
fcom
mov
fsub
mov
sbb
pop
push
inc
or
hlt
outs
les
in
jno
inc
(bad)
bnd
dec
pop
sub
fwait
or
(bad)
lds
xchg
push
fistp
push
push
rep
xor
sbb
cwde
xlat
mov
pop
mov
cmp
dec
or
or
sbb
xrelease
cmps
inc
mov
jno
xchg
push
jmp
sbb
out
nop
inc
add
(bad)
mov
shl
les
out
push
iret
outs
mov
cmp
(bad)
in
shl
xchg
sbb
sub
ins
or
(bad)
loopne
jo
std
int
mov
mov
movs
cs
ret
in
out
or
mov
jp
fs
push
loopne
sbb
cmp
jns
in
jl
lods
push
ins
cmps
jmp
aas
out
retf
test
mov
(bad)
imul
out
pop
mov
add
cwde
sbb
dec
or
mov
lods
ja
jbe
lods
nop
or
inc
jle
loop
add
ret
cmc
jnp
adc
mov
jle
ffreep
xchg
daa
(bad)
out
popa
ins
jmp
cdq
add
mov
nop
push
add
adc
call
lea
sahf
scas
and
movs
xchg
hlt
xor
xchg
xchg
in
retf
std
adc
sub
std
shl
and
sbb
push
add
cmc
in
mov
jg
bound
lods
dec
cmp
mov
fadd
inc
jle
push
mul
fisubr
ficomp
das
xor
xchg
xchg
sti
mov
xchg
jmp
mov
sub
shr
push
push
dec
shl
imul
into
sahf
push
(bad)
bound
sbb
mov
push
je
(bad)
clc
sbb
test
dec
xlat
out
rol
jo
xchg
dec
repnz
mov
inc
mov
jp
(bad)
fbstp
jb
loopne
mov
fild
xchg
push
lahf
fstp
fst
pop
xchg
mov
test
aad
std
ret
mov
mov
into
inc
cmp
jecxz
and
inc
outs
scas
mov
and
xchg
jb
popa
das
pop
cmp
push
rcr
jnp
cwde
jb
dec
outs
sub
fcomp
sahf
mov
cmps
pop
xor
mov
sub
cwde
pop
(bad)
aaa
out
dec
inc
loopne
add
into
imul
dec
dec
mov
sub
pop
xor
push
cdq
cmp
imul
hlt
cmps
xlat
push
adc
add
xchg
or
inc
xor
in
inc
lea
cmp
daa
in
out
push
sbb
push
add
leave
xchg
movs
mov
inc
(bad)
aas
xchg
or
push
sub
test
lods
lea
out
mov
cld
stos
mov
pop
jae
sub
ret
lock
imul
add
xchg
jge
cmp
push
xlat
push
cmc
sbb
cmp
xor
sbb
jbe
xor
sbb
rep
inc
mov
inc
xchg
fnsave
add
pop
xor
push
or
sub
or
ins
in
bound
mov
jo
xor
mov
daa
retf
stc
and
pop
test
daa
icebp
ja
cmps
pop
jmp
clc
xchg
inc
out
xchg
jne
adc
inc
out
outs
jne
or
mov
and
outs
mov
cmc
movs
ja
pop
pop
mov
retf
mov
les
addr16
sbb
shl
inc
push
(bad)
sub
mov
or
fidivr
leave
inc
inc
inc
mov
sub
in
adc
test
fadd
xchg
mov
test
test
mov
lds
fs
aad
pusha
push
cdq
popf
sti
jns
add
outs
mov
dec
mov
cwde
cmp
retf
cmp
sub
pop
outs
ins
cli
pop
add
(bad)
push
mov
add
out
bt
(bad)
fnstsw
add
jp
pop
cdq
jg
xor
sub
sub
mov
scas
dec
popf
jge
push
xor
repnz
mov
test
dec
cs
icebp
add
sub
inc
cs
inc
clc
or
(bad)
daa
jle
mov
sub
loopne
inc
mov
addr16
je
inc
jb
pop
imul
popf
xlat
test
mov
adc
jge
sub
jbe
xchg
lock
fdivr
lea
arpl
mov
cli
cmp
(bad)
jecxz
fst
jae
xor
mov
int3
mov
jle
pushf
ret
cmp
enter
jmp
pusha
js
jmp
adc
stos
jmp
and
out
adc
ja
mov
(bad)
sbb
gs
push
icebp
and
sbb
idiv
add
imul
inc
lahf
mov
cmp
adc
adc
call
push
lock
scas
adc
push
out
enter
and
push
lds
sbb
int
mov
xchg
pusha
sbb
jb
mov
dec
xor
cmps
pop
and
outs
mov
adc
xchg
ret
adc
fistp
cmc
rol
enter
js
das
cmps
scas
ja
std
push
jmp
dec
pop
push
stos
nop
aam
and
pop
and
inc
ret
sub
cdq
push
pop
enter
and
pop
xor
inc
or
nop
mov
out
mov
jle
mov
xor
mov
cmp
in
mov
jp
dec
inc
fucomip
je
int
pushf
pop
jge
std
and
xor
sub
aam
data16
in
in
out
hlt
fldcw
sub
cmp
xchg
cmps
sar
cmc
lea
pop
movs
les
enter
int3
adc
push
mov
test
daa
cdq
push
cld
imul
pop
jge
aas
push
in
xchg
jmp
mov
jmp
out
xor
outs
pusha
dec
ins
pop
mov
push
cmp
push
iret
in
xchg
cmps
ins
test
out
(bad)
adc
sbb
mov
icebp
cmp
pop
fcmovnb
cmp
out
push
mov
mov
sub
retf
xchg
inc
jbe
jp
and
jb
neg
out
xor
jle
es
xchg
lods
push
fistp
adc
xchg
jge
inc
cwde
cld
les
test
jne
retf
and
jno
pop
lds
mov
jmp
sub
sub
test
stc
jns
and
rcr
fcmovu
push
push
or
sar
test
fcomp
out
and
(bad)
in
mov
jle
call
sbb
arpl
adc
add
xchg
push
cwde
popf
mov
sbb
into
lods
sbb
sbb
push
inc
test
ds
arpl
pushf
adc
movs
push
movs
rol
mov
cmp
in
cli
inc
pop
push
jae
js
icebp
in
cmp
cdq
lods
sub
mov
shl
int
inc
call
pop
cmp
push
loope
test
out
in
pop
(bad)
lea
bound
(bad)
(bad)
out
inc
mov
repz
inc
nop
xor
fadd
or
mov
dec
inc
sahf
push
sti
xor
ds
jmp
push
push
ins
popf
cmp
adc
retf
push
ret
std
xchg
iret
loop
shl
mov
jns
dec
mov
bnd
lahf
(bad)
fbstp
jecxz
jbe
xchg
cld
and
iret
pop
cmp
jmp
push
cmp
xchg
dec
cmp
out
stc
mov
push
push
enter
retf
push
fiadd
(bad)
clc
pop
push
jmp
inc
fs
pop
arpl
sub
xor
add
nop
and
pop
fld
arpl
push
int
dec
ret
fisub
xor
xchg
out
enter
or
jno
aaa
xor
pop
or
jnp
jecxz
sar
out
jmp
sbb
ss
push
dec
xor
aam
adc
pop
xchg
cmps
mov
stos
mov
mov
or
jns
ins
movups
das
sbb
js
out
push
push
xchg
xlat
lods
dec
(bad)
dec
cs
dec
xchg
loope
xchg
sub
ins
adc
sbb
inc
stos
cmp
mov
nop
inc
cs
or
test
or
xor
test
mov
out
outs
scas
xor
ins
sahf
ret
fs
adc
aad
ret
rcr
jg
loope
pushf
adc
mov
mov
jnp
icebp
lahf
add
adc
(bad)
shr
inc
mov
sbb
sub
popf
mov
pop
les
xor
sar
cli
push
jne
xor
cmp
push
push
hlt
pop
push
popf
ficomp
cli
out
(bad)
mov
add
iret
pop
and
add
lea
shl
cmp
pop
enter
imul
cmp
or
dec
rcl
lock
dec
adc
and
jmp
rcl
push
shl
cmc
sbb
xchg
jg
sub
sub
js
imul
lea
mov
and
jp
xchg
pop
dec
push
rcl
aam
scas
mov
xor
into
out
mov
pop
mov
nop
in
shl
imul
cs
int
jge
mov
les
xchg
or
and
fstp
pop
xchg
in
pop
pop
adc
jmp
pop
sbb
adc
retf
jmp
iret
mov
xor
mov
sbb
add
(bad)
stos
or
cwde
in
mov
jb
mov
stos
cdq
outs
mov
hlt
sub
(bad)
pop
(bad)
lods
push
push
and
(bad)
dec
inc
push
pop
and
div
mov
mov
and
jge
push
addr16
(bad)
jmp
adc
push
xor
mov
out
shl
loope
cmp
dec
inc
loopne
popa
ret
idiv
dec
jp
and
and
test
(bad)
out
pusha
ror
stos
les
fisubr
push
push
xor
mov
jmp
neg
ins
add
repz
cmp
add
pop
mov
mov
sbb
jo
cmps
add
xchg
imul
push
pop
(bad)
xor
mov
xlat
pop
out
mov
idiv
sub
ds
shl
jmp
aas
call
push
imul
movs
stos
test
loop
dec
inc
inc
pop
add
(bad)
cmps
cwde
dec
mov
mov
push
pop
pushf
test
dec
out
sub
pusha
addr16
aaa
into
leave
jmp
js
xlat
xchg
sub
push
sar
cmps
pop
inc
retf
repz
fcmovu
adc
pop
cmp
jg
lock
ins
mov
inc
imul
ja
jns
inc
popa
lods
or
jb
test
and
into
mov
sbb
loopne
jne
cli
cld
push
popf
pop
and
cmps
gs
push
sub
cs
imul
inc
pushf
push
add
mov
(bad)
div
sub
push
dec
xor
xlat
daa
aad
ret
into
ficom
dec
or
ficomp
(bad)
pop
loope
retf
mov
call
push
je
pop
pusha
ss
in
jl
inc
in
or
adc
adc
es
mov
arpl
je
jo
ins
mov
sbb
jle
mov
retf
xchg
ds
adc
xor
lahf
push
sbb
out
push
mov
and
test
jb
mov
add
mov
sti
das
add
xchg
pop
xchg
cmp
movs
inc
pop
and
(bad)
jae
xchg
fild
out
mov
push
and
mov
jmp
int
mov
retf
cdq
int
aad
lds
out
lock
jl
out
add
out
pusha
fst
mov
add
push
dec
cmp
dec
fistp
(bad)
mov
push
pop
cli
add
rcr
ja
mov
(bad)
enter
not
(bad)
fcom
loop
sub
es
adc
leave
jbe
(bad)
xor
xchg
cmp
sti
test
int3
jno
daa
dec
arpl
cs
xor
jae
test
sbb
stos
xor
xchg
retf
jp
scas
inc
sub
rol
int3
dec
std
and
adc
lea
out
mov
call
mov
mov
call
push
repz
sti
shl
sbb
mov
outs
mov
add
ja
cld
mov
sahf
adc
xchg
rcl
ins
pop
xchg
fs
and
mov
adc
lock
pop
test
push
inc
in
cli
jno
sbb
mov
test
xchg
js
into
les
sbb
in
xchg
fdiv
cmp
stos
adc
push
pop
xchg
adc
(bad)
xchg
push
cs
cmp
jne
lock
push
in
mov
push
jbe
xchg
jbe
mov
test
test
push
xchg
dec
cdq
dec
test
int3
and
test
mov
test
rcr
rol
jp
nop
pop
push
jle
mov
sub
pop
jnp
mov
in
lds
lds
add
mov
js
arpl
cmp
in
in
pushf
inc
in
or
or
dec
pop
pop
mov
fucomi
outs
or
mov
mov
and
push
fwait
and
imul
popa
xlat
test
push
rol
dec
unpcklps
out
inc
xor
pusha
push
dec
dec
sub
(bad)
push
pop
movs
dec
jmp
sub
mov
les
cmc
sub
push
pop
pop
enter
adc
inc
int3
jo
xor
dec
mov
fadd
stos
mov
ins
inc
int
jl
pop
push
out
dec
sbb
xor
aam
nop
sbb
mov
mov
jmp
nop
mov
pusha
mov
cmc
dec
popf
xor
js
call
mov
inc
push
push
mov
in
fcmovnbe
mov
push
iret
mov
movs
jae
in
frstor
sub
or
test
cmp
jnp
xor
sub
call
adc
sahf
scas
data16
test
xor
js
cld
mov
xor
jnp
push
jmp
mov
neg
outs
pop
jnp
add
icebp
ret
cli
mov
test
loopne
push
repnz
sub
sub
hlt
mov
jmp
adc
int
inc
in
sub
cmps
cmp
jno
(bad)
pop
push
(bad)
arpl
sahf
daa
push
int
cs
push
dec
(bad)
mov
lods
sbb
mov
pushf
hlt
ins
pop
js
ins
test
jmp
sub
bswap
cdq
push
and
js
lods
imul
xor
push
lahf
iret
add
adc
mov
mov
fld
mov
mov
out
push
lea
fcom
mov
call
dec
lahf
dec
cmps
enter
pop
dec
push
das
je
sub
dec
xor
mov
mov
xor
sahf
loop
out
jbe
push
or
mov
popa
(bad)
push
pop
mov
ret
repz
sbb
mov
xchg
fcomp
movs
sub
inc
xor
inc
iret
cld
imul
sbb
cmp
cmc
jns
sar
pop
mov
jecxz
test
popf
fs
sub
sahf
adc
add
popf
add
jo
or
in
push
sbb
cmp
cmps
jae
jns
in
push
retf
cs
add
mov
fisttp
aam
addr16
sub
(bad)
retf
or
mov
jne
cmc
jl
push
sub
jne
int3
push
mov
jmp
call
xchg
cli
test
fmul
bound
loope
cmp
jb
addr16
pusha
inc
into
mov
and
xor
loope
sbb
sbb
or
js
dec
sbb
std
clc
mov
dec
jmp
(bad)
shl
mov
and
cmp
cmp
jbe
test
cmps
xchg
xchg
daa
sar
fnstenv
cdq
std
sbb
inc
or
jmp
pop
dec
mov
faddp
pop
cli
in
jb
adc
movs
inc
and
daa
in
out
or
mov
jb
test
mov
repz
adc
adc
sbb
mov
mov
aad
mul
inc
push
mov
adc
mov
or
idiv
fs
xchg
jp
inc
xchg
dec
or
add
xor
push
cmp
push
stos
cli
test
lahf
fadd
mov
mov
dec
es
into
mov
scas
mov
retf
sub
ins
mov
cmps
std
sub
popf
pop
inc
inc
(bad)
and
xchg
adc
mov
mov
call
les
lods
dec
mov
rcr
aas
out
ins
xor
bnd
(bad)
jmp
mul
aas
es
pusha
push
les
xchg
and
inc
push
out
mov
jle
xchg
inc
sub
add
cmp
(bad)
retf
adc
movs
out
cs
cmp
pop
shl
in
shl
xor
data16
jb
pop
in
adc
cmp
cli
arpl
aad
in
jecxz
dec
add
in
mov
clc
lahf
js
cmp
shr
adc
sti
in
pop
imul
push
ret
xchg
sbb
xor
scas
dec
pop
vmwrite
adc
out
cmp
lahf
add
pop
cmps
loope
(bad)
pop
psrld
xor
mov
add
mov
(bad)
and
xchg
sbb
xchg
mov
mov
mov
and
(bad)
out
into
dec
add
sub
dec
pushf
out
mov
cdq
jl
mov
pop
rol
test
jo
xchg
xchg
mov
cmp
loopne
dec
xor
(bad)
sub
movs
(bad)
sahf
sub
pop
sub
lea
jmp
push
es
mov
loope
inc
cmc
jne
addr16
and
mov
fucom
mov
(bad)
mov
lahf
ret
jge
hlt
and
or
mov
jecxz
adc
adc
cs
das
das
cld
cwde
mov
adc
in
or
div
(bad)
dec
cmp
cmp
dec
or
pop
push
rol
jmp
into
aaa
add
inc
xor
jge
ret
ror
mov
cmps
add
jo
shr
pop
loopne
rcr
pusha
das
enter
(bad)
dec
out
jbe
lods
inc
cmp
into
es
loop
jns
jbe
or
call
xlat
das
popf
mov
(bad)
hlt
loopne
cmp
sub
sub
dec
int
xor
test
sub
mov
das
and
ds
jle
test
mov
jg
dec
xor
dec
arpl
je
neg
cmp
call
jne
fwait
jb
add
(bad)
and
xlat
(bad)
fld
xor
in
std
sbb
fidiv
or
test
mov
in
call
pop
fist
pop
push
(bad)
sbb
mov
sub
sub
push
loop
fidiv
dec
sahf
mov
dec
sbb
xchg
cmp
sub
cmp
mov
adc
mov
sub
in
sub
sbb
shr
mov
out
jmp
test
movs
std
pusha
(bad)
pop
scas
sub
neg
iret
dec
dec
repz
sbb
das
jns
add
sahf
dec
pop
sub
and
dec
cmp
leave
or
dec
lods
aas
xchg
and
mov
ins
out
in
push
cdq
stos
jle
jno
loope
jne
dec
xchg
pop
or
add
sub
or
out
stos
scas
mov
(bad)
cmp
pop
test
repnz
ins
rcr
sbb
sbb
cmp
(bad)
retf
fsubr
xor
std
push
mov
outs
pusha
sub
dec
mov
repz
daa
cmp
shl
mov
xor
or
fwait
xor
(bad)
lods
nop
inc
popa
shr
push
or
push
mov
xor
jg
pop
or
mov
(bad)
cmps
jmp
sub
cmc
jge
aam
inc
push
sbb
(bad)
ficom
data16
jno
cmps
pop
mov
sbb
psllw
inc
movs
sub
adc
ja
aaa
addr16
int
shl
rol
add
pop
movs
data16
aad
mov
das
sti
(bad)
int3
pop
jmp
push
sub
sar
loope
retf
jle
add
fcmovnu
add
ficomp
sti
rol
aad
test
(bad)
jle
cmp
or
sub
je
inc
outs
ror
fcmovb
pop
ret
retf
and
push
xor
sbb
cmps
push
xor
push
cmp
ja
in
push
push
inc
jle
push
mov
out
jns
inc
push
loopne
cmp
push
jmp
cmp
shr
cmp
inc
jbe
ins
inc
cmp
push
mov
add
fidiv
or
jno
inc
(bad)
dec
jo
lahf
mov
lods
pop
xchg
out
cmps
xchg
inc
jno
enter
sub
in
lods
jae
mov
test
sti
push
jp
in
and
mov
hlt
inc
js
inc
mov
push
retf
or
xor
retf
xlat
push
ins
or
and
sub
ret
jno
call
shr
cmps
ja
cs
dec
and
and
or
std
(bad)
cmps
xchg
scas
jo
and
dec
adc
pop
mov
add
xor
aam
pop
mov
out
mov
call
ins
jno
add
arpl
mov
pop
mov
lods
ret
cmc
mov
mov
add
mov
sbb
idiv
mov
xchg
fs
fidivr
je
in
bound
test
mov
cmp
mov
outs
int
and
imul
pop
sub
mov
mov
aam
lea
fidiv
data16
cmp
mov
add
sbb
lahf
mov
outs
adc
mov
jmp
pusha
cmp
jp
adc
sub
pop
jmp
pop
and
and
push
xchg
fadd
imul
stc
xchg
out
test
test
loopne
xchg
mov
push
and
mov
mov
jl
in
fsubrp
mov
out
jns
out
jmp
popa
xchg
ds
add
call
add
leave
sbb
(bad)
jge
cmps
or
inc
stc
test
pop
pop
xor
ret
aam
xchg
pop
test
fistp
xchg
jne
movs
lds
add
mov
dec
and
jns
add
sbb
or
sbb
mov
ja
sar
dec
xor
push
mov
sbb
sbb
mov
iret
push
mov
adc
fisub
adc
pushf
mov
push
shl
dec
or
push
fild
xor
adc
and
sbb
je
xchg
mov
xchg
cmp
fsincos
push
aas
aad
fist
int3
repnz
jo
dec
jnp
and
int3
xor
inc
dec
lea
mov
fadd
add
sbb
mov
sub
mov
adc
enter
jmp
rcl
(bad)
push
das
imul
sahf
nop
ja
xor
xchg
das
test
pop
push
and
sub
test
mov
xchg
add
repnz
fcomp
push
in
xor
dec
adc
cli
mov
jle
push
loopne
mov
je
fdivr
jl
add
jb
movs
mov
gs
add
pop
cdq
jbe
out
add
cld
mov
popa
loope
rol
add
movs
adc
icebp
pop
mov
push
in
popa
adc
cmps
inc
int3
push
xchg
lods
loop
add
dec
and
mov
mov
xor
in
add
nop
pop
pop
pop
mov
adc
pushw
sub
dec
ds
jle
daa
jns
(bad)
ins
retf
cmovno
adc
aad
and
outs
add
ror
or
sbb
lea
adc
sub
add
es
push
cmc
ins
jl
pop
imul
xor
outs
mov
dec
fnstcw
cmps
push
push
mov
iretw
adc
fisub
push
and
xor
rcr
iret
sbb
fsubp
xchg
leave
sti
fwait
and
aaa
out
jae
xchg
mov
loop
inc
mov
adc
cmp
pop
pop
loopne
outs
push
fwait
pop
aas
out
xor
jae
jp
int3
and
mov
shl
daa
sub
lods
test
xchg
xchg
pop
cmp
cmps
stos
sbb
push
mov
iret
aad
xor
imul
(bad)
bound
adc
ins
ss
cmp
das
dec
or
dec
xor
dec
stos
loope
or
or
xor
test
cmps
jge
jg
sub
ss
adc
jmp
and
js
mov
xor
cmp
retf
aad
sub
mov
clc
xchg
loope
or
std
jle
sar
loop
jg
push
dec
jns
ds
lds
and
sub
adc
mov
jge
movs
add
adc
cmp
pop
(bad)
int3
inc
sar
mov
in
push
leave
xor
leave
ins
cld
xchg
inc
dec
fdivr
or
mov
je
inc
loopne
retf
add
jecxz
movntps
pushf
lock
inc
inc
lods
xchg
sti
in
cmc
jle
js
pop
sbb
pop
iret
sbb
sub
push
push
and
into
aam
jle
std
add
and
test
(bad)
xor
mov
outs
rol
in
mov
sbb
shr
pop
xlat
into
mov
and
xchg
clc
inc
cli
js
sub
pop
sub
xor
dec
mov
retf
mov
sbb
or
xchg
push
mov
mov
mov
inc
fwait
mov
dec
je
call
sbb
leave
push
xor
jne
or
fistp
aas
movs
loop
dec
mov
mov
call
lods
xor
pop
shr
sub
jg
daa
fcmovne
dec
sbb
out
hlt
sub
pop
int
mov
test
xor
cmc
push
fstp
mov
movs
movs
inc
dec
fstp
in
mov
call
add
ror
add
repnz
sub
aas
add
pop
sub
mov
les
fisubr
pop
cwde
js
xor
stos
repz
pop
popf
ds
es
xchg
sub
fcomp
aas
test
retf
jmp
push
cmp
imul
or
pop
jge
and
xchg
iret
jecxz
inc
cmp
scas
lods
rol
and
stc
fwait
movs
xchg
fs
mov
jge
xchg
push
cwde
mov
sub
test
mov
iret
and
and
sbb
jo
mov
aas
int3
cmp
mov
bound
stc
push
ins
mov
mov
jmp
mov
mov
nop
loop
mov
push
and
xchg
add
(bad)
or
xchg
(bad)
inc
scas
scas
dec
pop
inc
scas
push
mov
pop
jno
and
std
xor
pop
out
and
xchg
add
mov
stos
adc
and
adc
pushf
ror
sbb
icebp
ds
mov
or
mov
test
pop
into
iret
in
sbb
push
pop
mov
cmp
mov
jp
jecxz
clc
xchg
sub
mov
(bad)
jns
lock
xchg
lds
pop
aad
push
sbb
jecxz
movs
mov
aam
retf
add
push
mov
outs
adc
ins
leave
adc
out
stc
adc
int3
repz
mov
movs
dec
fadd
ins
pop
and
gs
lods
lds
cmp
or
pusha
mov
sub
pop
fbstp
sbb
jecxz
add
dec
inc
mov
ds
mov
es
imul
lods
retf
movs
test
je
jmp
rol
and
and
in
repnz
dec
or
arpl
inc
pop
nop
jg
sbb
mov
rcr
sbb
test
cmp
rcl
pop
jp
into
shrd
addr16
sahf
pop
ins
jo
cmc
sub
mov
mov
mov
mov
add
into
in
mov
mov
(bad)
or
and
or
sbb
mov
xchg
sahf
fimul
ror
add
scas
stos
jmp
inc
(bad)
int
sub
enter
stc
les
dec
xor
inc
inc
(bad)
pusha
dec
push
fimul
xchg
push
and
ror
mov
mov
jge
jo
jge
loopne
outs
jbe
das
out
xchg
(bad)
mov
jge
ds
pop
ja
(bad)
cmp
xchg
dec
(bad)
lods
test
xor
push
repnz
les
sbb
xchg
daa
jns
add
movd
mov
push
sbb
loope
mov
or
repnz
int
jae
imul
pusha
imul
stos
idiv
lahf
mov
xchg
aas
push
sub
push
jp
fst
add
(bad)
push
pop
inc
mov
push
pop
mov
or
rcr
cmp
mov
popf
sahf
cld
inc
push
out
fist
jne
mov
dec
push
movs
mov
mov
push
or
(bad)
adc
jl
sub
dec
test
(bad)
aas
xchg
popa
or
aad
repz
in
inc
sbb
fild
inc
imul
pop
enter
push
stc
sub
sbb
cld
mov
sbb
mov
lods
addr16
sbb
or
xor
es
aam
je
movs
int3
pop
xor
mov
xchg
jno
xchg
pop
pop
out
mov
fs
lock
iret
nop
pop
push
and
pop
daa
pop
dec
inc
ds
aam
jl
jg
jno
jno
jne
sub
test
xlat
outs
cmp
adc
popf
adc
xchg
push
mov
or
adc
fxch
dec
mov
inc
fcmovnbe
xchg
mov
pop
out
leave
adc
(bad)
jnp
lods
xlat
out
inc
shr
xor
cmp
(bad)
jge
clc
loopne
pop
test
out
test
jae
cs
bound
or
vpaddusb
je
leave
ss
loopne
test
call
pop
ja
std
fadd
movs
sbb
mov
jl
dec
dec
inc
dec
popa
mov
inc
or
push
sbb
ins
and
inc
int3
popf
jmp
sar
bound
or
ins
pop
ja
adc
mov
arpl
popf
mov
xor
push
xor
jns
(bad)
cli
(bad)
jns
add
repz
or
sti
aad
ins
mov
pop
or
mov
pop
mov
je
enter
and
aam
gs
and
mov
imul
dec
movs
mov
xor
mov
outs
jl
not
push
inc
push
popa
mov
and
lock
mov
clc
out
fwait
loop
mov
out
xor
ret
sub
mov
push
test
fs
out
nop
mov
ja
or
imul
inc
lds
icebp
fucom
popf
mov
fiadd
cmp
ss
loope
push
sti
test
cmp
je
mov
mov
fwait
aas
adc
cmp
jge
stos
fisttp
popf
sbb
mov
sub
xchg
in
sub
(bad)
dec
pop
and
cmp
jge
lods
leave
in
adc
(bad)
mov
aam
jg
scas
sar
(bad)
popa
jno
mov
pop
repz
pop
call
es
test
jo
clc
enter
outs
and
retf
mov
jp
inc
mov
mov
sub
int
hlt
mov
sbb
call
adc
(bad)
hlt
jae
push
cmc
inc
popa
cmp
outs
movs
mov
adc
add
mov
push
dec
dec
inc
sti
outs
push
call
stos
addr16
stos
and
add
in
push
sbb
stos
inc
int
popa
jns
adc
mov
add
pop
sbb
data16
fcom
lods
(bad)
data16
pop
and
xor
dec
inc
enter
inc
jg
lods
scas
gs
lods
stos
sbb
mov
adc
enter
daa
retf
shr
pop
iret
ret
out
jbe
cmp
mov
push
jmp
pushf
cmps
test
sub
ja
aaa
fisttp
call
pop
sub
sbb
xor
add
jnp
sub
imul
(bad)
je
mov
dec
ror
mov
test
and
push
mov
dec
xor
inc
xchg
fnstenv
daa
mov
mov
mov
xchg
push
inc
jo
aas
iret
dec
mov
jle
cmps
xlat
jo
outs
bound
xor
lods
adc
retf
push
movs
sbb
pop
pop
sub
jg
aaa
leave
or
dec
push
xor
jmp
push
mov
xchg
fisub
push
(bad)
jecxz
fdivr
push
xchg
xchg
rol
imul
adc
mov
jg
mov
mov
stc
punpckhwd
sbb
xchg
jne
ja
dec
pusha
mov
sbb
das
retf
popa
lds
call
shr
scas
fild
dec
data16
xrelease
pop
out
dec
int
stos
mov
mov
test
mov
sub
pop
test
add
push
add
mov
jno
jmp
dec
mov
scas
xchg
mov
dec
repnz
leave
fmul
pusha
lods
ins
cmp
xor
enter
lea
xchg
pushf
arpl
inc
movs
cmp
js
std
or
pop
in
adc
sahf
and
movs
sbb
push
xchg
add
xor
or
pop
ret
inc
push
jp
cmp
pushf
xor
fs
cmps
mov
inc
retf
xor
jb
in
inc
dec
fincstp
popf
pushf
sub
or
retf
pop
(bad)
in
dec
les
retf
lock
lahf
mov
fdivr
or
dec
cmc
dec
fcmovnbe
inc
mov
mov
xor
inc
clc
ret
lods
xchg
xchg
jecxz
and
imul
push
cdq
xchg
and
fst
(bad)
pushf
mov
pop
ja
shl
loopne
cmp
xor
mov
test
sbb
cmps
jg
sbb
cmp
add
test
add
pop
pop
arpl
inc
inc
ret
mov
or
popf
adc
fsubr
retf
add
fcmovu
imul
cmp
shl
add
inc
cmp
mov
push
imul
jns
cmc
mov
inc
sbb
push
and
(bad)
inc
mov
int3
adc
out
cld
mov
popa
jl
test
mov
jns
test
mov
dec
push
jg
sub
aas
(bad)
in
adc
and
cmp
inc
lods
scas
lock
push
movs
mov
stos
pop
mov
inc
out
aas
push
repnz
pusha
xor
dec
out
stc
push
pushf
das
fs
test
out
sti
cmp
sbb
sbb
mov
js
sub
adc
xchg
aaa
imul
pop
(bad)
xchg
cmp
xor
inc
ret
cmp
lock
out
call
jnp
or
stos
fs
mov
mov
xor
jns
stc
mov
jae
sub
sub
sbb
jmp
das
push
push
fucomp
fwait
inc
lods
shr
in
push
lds
dec
add
or
popa
inc
aaa
push
lods
fcom
jge
or
scas
dec
in
inc
and
ins
mov
iret
push
xchg
packssdw
add
sar
sub
lods
mul
sub
and
movs
sbb
cs
mov
loope
or
pop
lahf
xor
out
lds
sbb
jno
ror
in
neg
stos
and
jbe
mov
mov
inc
sub
adc
push
or
jl
push
je
cld
push
cmp
arpl
adc
sub
in
mov
rol
in
mov
stos
jmp
in
movs
dec
mov
jp
outs
adc
gs
into
(bad)
scas
retf
scas
jb
adc
in
xor
fistp
cmps
das
add
or
imul
out
mov
xor
mov
xor
outs
fcmovnb
sub
jle
aam
(bad)
push
movs
pop
xchg
lahf
aas
dec
(bad)
mov
cwde
pop
xchg
mov
(bad)
lahf
ret
into
repnz
or
aad
nop
adc
mov
sahf
xor
mov
or
and
fwait
test
movs
scas
test
add
mov
xlat
push
jle
imul
test
xor
jb
cmps
imul
retf
fucomi
sar
aaa
adc
mov
pop
mov
adc
or
movs
jp
inc
das
test
repnz
rol
xchg
sub
mov
adc
push
repnz
inc
sti
mov
mov
lahf
sbb
jae
pop
jl
mov
inc
mov
ds
push
inc
scas
aas
pop
lock
mov
scas
adc
dec
cmps
mov
and
push
loop
sbb
fwait
lea
stos
out
mov
adc
fs
push
pop
mov
push
ss
adc
adc
or
out
in
mov
inc
fstp
xlat
test
test
mov
cwde
push
push
xchg
or
dec
retf
ins
je
mov
out
sbb
adc
fs
xchg
fwait
imul
mov
xchg
test
mov
dec
cs
cli
adc
(bad)
cmp
xchg
and
in
pusha
xchg
xor
jmp
push
je
xor
jo
jmp
inc
add
fcom
or
mov
les
add
pop
mov
loopne
or
movs
stos
pop
inc
adc
inc
jecxz
or
push
cmp
adc
scas
push
adc
sub
sub
fisubr
inc
inc
jno
mov
cmp
sub
inc
and
xchg
mov
outs
dec
xor
adc
push
shr
or
xchg
and
or
stos
inc
and
hlt
out
pop
lock
inc
inc
inc
mov
retf
pushf
imul
bound
into
cmp
les
xor
nop
out
stos
add
adc
xchg
dec
fldcw
pop
xchg
sbb
inc
adc
mov
lock
loopne
pop
jmp
movs
inc
xchg
mov
inc
subps
pop
mov
jle
pushf
adc
mov
push
mov
pusha
inc
loop
pop
sub
adc
cmp
push
mov
jp
cwde
test
into
js
xchg
push
lds
lods
mov
fs
xor
or
xchg
addr16
xchg
jg
cmps
push
sbb
cdq
out
clc
cmp
jae
add
xor
cwde
fbld
jne
jbe
jge
mov
je
jmp
mov
jne
add
fbstp
jae
and
aad
jbe
mov
adc
mov
and
gs
mov
leave
aam
mov
sub
retf
jae
aam
xor
popf
dec
lods
mov
dec
dec
daa
ret
adc
outs
sub
retf
xchg
rol
pop
nop
xchg
ret
sbb
xor
add
and
jl
dec
bound
jns
and
bound
mov
and
mov
adc
mov
xchg
and
xor
movs
pop
rcl
not
int
gs
xor
sti
fcom
push
push
mov
aas
mov
pushf
arpl
sbb
outs
mov
nop
jp
cmp
daa
push
cmp
mov
and
push
into
xchg
lock
ror
ds
cmc
mov
(bad)
loope
sbb
(bad)
(bad)
mov
imul
dec
sub
jg
daa
leave
sub
mov
cdq
xor
xor
and
mov
retf
mov
sahf
inc
push
in
test
movs
sub
xchg
test
addr16
out
fbld
inc
sbb
jnp
adc
sub
cmc
(bad)
sar
test
xchg
and
pop
jle
mov
or
sbb
sbb
ror
pushf
dec
xor
inc
sbb
aad
mov
cmp
jecxz
and
out
or
sbb
fcmovnb
inc
stc
pop
lea
push
fsubr
dec
adc
loop
lock
out
pop
sbb
sbb
dec
jns
gs
pop
sbb
popf
shl
pop
mov
mov
push
sub
repz
mov
push
and
mov
je
ins
rol
and
cmc
push
ret
and
sbb
mov
push
adc
push
stos
mov
sbb
in
jmp
in
vcmpsd
int
ja
fldcw
and
das
not
int3
jno
lahf
or
mov
and
push
dec
fld
movs
jno
sub
sbb
pop
pop
push
pop
ret
mov
test
movs
push
arpl
pop
jnp
cmp
xchg
push
lods
pop
fnstenv
call
jge
add
jl
and
rcl
mov
mov
gs
jne
mov
in
jo
mov
pop
mov
(bad)
icebp
in
jmp
xor
das
out
js
jnp
jge
inc
stc
fimul
lds
stc
push
shl
fnsave
lods
daa
rcl
sbb
cdq
cmp
mov
add
ja
sub
push
push
xchg
sub
mov
push
pusha
sbb
pop
dec
push
icebp
sahf
mov
sub
and
xor
(bad)
nop
adc
daa
std
push
mov
mov
mov
sbb
mov
sti
inc
enter
mov
mov
ins
xor
add
add
mov
enter
xchg
addr16
or
sub
mov
add
dec
imul
addr16
lea
or
mov
pop
fimul
ins
xchg
scas
sub
push
mov
je
aas
add
cmp
ret
mov
fsub
retf
sub
clc
shl
hlt
gs
jle
push
mov
shr
nop
rcr
jno
pop
or
sbb
mov
pop
xchg
adc
mov
fsub
call
shr
retf
sub
and
jb
mov
scas
imul
mov
mov
and
sub
xchg
jno
jg
dec
jne
sub
and
fstp
fst
and
push
in
and
cmps
push
mov
sub
push
aad
or
out
mov
adc
add
das
arpl
push
jns
ror
mov
xchg
mov
mov
mov
push
gs
jmp
or
xchg
outs
sub
cdq
inc
inc
int
(bad)
mov
push
imul
sub
mov
clc
imul
add
and
and
movs
icebp
cmp
les
data16
fwait
lock
lods
dec
lea
lock
xlat
xlat
fwait
in
mov
mov
repnz
retf
adc
or
in
stc
js
or
adc
sbb
dec
(bad)
ss
adc
add
cwde
inc
mov
shr
test
in
call
xor
or
cmp
mov
out
cld
popa
lahf
dec
and
jp
adc
mov
mov
and
push
xor
sbb
iret
in
jle
and
dec
repnz
xor
push
aaa
gs
and
ss
pop
retf
test
pop
pop
je
push
clc
cmp
pop
cmp
inc
repnz
popa
jne
push
fs
rcl
xchg
jl
(bad)
fbstp
cld
push
sub
pop
add
aam
cmp
mov
(bad)
jp
ins
hlt
neg
jo
and
iret
push
push
(bad)
aas
aaa
aad
or
sahf
push
loopne
into
or
test
adc
jge
cwde
xor
push
call
movs
jg
adc
in
pop
sbb
pusha
in
xchg
(bad)
cld
mov
leave
aam
rcr
rcl
mov
mov
inc
cli
mov
add
aas
pop
sub
jno
imul
jns
or
sbb
xor
sub
retf
push
test
movs
cmp
enter
sbb
aad
push
pop
pop
iret
fbstp
jge
adc
or
xlat
jle
rol
ret
test
cmps
xchg
fld
popf
in
popw
inc
call
popf
repz
popa
pop
or
and
pushf
or
xchg
fistp
dec
inc
sub
or
sub
call
sub
fsub
ret
inc
sbb
dec
fs
dec
(bad)
stc
push
aaa
jmp
and
sbb
mov
mov
sbb
es
cmc
xchg
add
jecxz
pop
stc
mov
aam
sbb
cdq
lds
ja
mov
pop
push
call
cmp
mov
cs
les
push
mov
arpl
adc
test
cmc
arpl
inc
push
push
in
push
repnz
ror
call
aam
sub
jmp
mov
loop
hlt
pop
in
pop
push
jnp
cdq
sbb
jge
and
loopne
push
cmc
add
frstor
cmc
mov
mov
and
add
mov
mov
retf
or
test
and
or
push
push
sub
push
jae
sbb
call
cmp
sahf
and
xchg
call
xchg
out
mov
loope
icebp
or
inc
xor
lds
cmp
retf
pop
es
inc
add
sti
data16
mov
push
int3
loopne
cmp
inc
fstp
cmp
or
xor
sub
repnz
fcom
movs
ret
and
out
retf
ss
or
rcr
pop
jge
es
not
dec
sub
sub
inc
or
jno
test
jnp
mov
mov
push
jnp
add
dec
and
add
or
pop
sbb
adc
test
not
or
gs
shl
js
and
shr
loope
push
gs
jg
lock
mov
cmps
test
mov
cdq
in
outs
retf
xchg
or
addr16
or
mov
pop
xor
loope
inc
xor
daa
mov
mov
add
cwde
lods
mov
loopne
add
ins
xor
dec
pop
inc
sub
or
and
or
pop
push
aam
push
push
push
sub
js
outs
sub
sub
inc
xchg
stos
sub
lds
popa
retf
movs
rol
shl
jg
cmc
xor
or
fisub
lea
xor
dec
(bad)
aas
inc
jle
xlat
loop
nop
out
adc
pop
dec
mov
clc
hlt
sub
inc
jp
jae
(bad)
cmp
movs
xor
mov
dec
addr16
pop
ficom
aas
mov
fadd
xchg
inc
(bad)
in
cmp
ror
rcr
mov
sahf
popf
jno
pop
sbb
lock
and
test
in
int3
mov
aaa
and
aam
mov
arpl
aas
mov
mov
push
rol
pushf
sbb
push
cmp
sbb
lea
sbb
mov
stos
jne
mov
xchg
(bad)
sahf
push
jmp
add
je
aad
test
hlt
neg
push
push
lock
or
and
sbb
mov
scas
xlat
mov
fsubr
or
adc
jp
retf
(bad)
mov
outs
arpl
jno
push
cmp
adc
mov
neg
cmps
mov
les
xor
ss
loope
lahf
(bad)
jmp
pop
cld
jns
mov
imul
ror
aad
shl
dec
test
add
fldln2
jp
inc
(bad)
loope
jl
test
inc
lock
cmp
mov
les
jmp
(bad)
xorps
fistp
movs
xchg
imul
jmp
xchg
xchg
xchg
mov
test
dec
xor
leave
mov
pop
pop
scas
mov
cmps
pop
bndstx
call
outs
push
xor
pop
cmp
int3
popa
fisub
loope
jns
scas
mov
jne
fs
ss
pop
nop
rcl
cmp
bound
xchg
push
out
lahf
ret
xchg
ss
je
cmp
add
int
add
xchg
push
loope
mov
ss
add
xchg
ins
dec
addr16
int
jl
xchg
add
icebp
add
adc
jl
adc
pop
xlat
xlat
pusha
daa
mov
nop
test
loope
js
pop
lds
(bad)
sub
jne
cmc
mov
xchg
sbb
cmp
cmp
fs
dec
pop
stc
in
je
mov
push
movs
mov
stos
push
sub
jecxz
inc
les
xchg
(bad)
call
mov
inc
dec
cmps
in
lds
xchg
ret
imul
gs
jp
sub
sub
add
push
and
add
lods
mov
imul
ret
std
xchg
rcr
inc
(bad)
xor
xchg
std
mov
mov
test
mov
arpl
mov
lds
pop
imul
fidivr
mov
imul
sub
sub
dec
xchg
dec
cmps
mov
mov
jae
jns
add
mov
xchg
les
jmp
leave
cli
(bad)
mov
iret
enter
in
xchg
cmp
outs
adc
lods
push
xor
ins
jbe
mov
push
jmp
stos
rol
mov
popf
sbb
push
ja
imul
test
sahf
mov
pop
cmp
and
and
add
mov
leave
inc
lock
inc
mov
or
pushf
pop
adc
xchg
sbb
and
push
fxch
push
pushf
add
pop
adc
stc
jecxz
ds
jbe
popa
mov
test
jmp
dec
ret
pop
pop
mov
arpl
or
sub
push
sub
sub
jl
outs
dec
xor
or
loope
add
and
call
mov
imul
sub
aaa
cmp
sbb
push
add
retf
inc
or
push
xchg
ror
adc
movs
pop
dec
pop
inc
jo
test
gs
sub
and
fabs
sub
pop
mov
scas
(bad)
(bad)
fisub
retf
xchg
mov
or
ror
call
fild
movs
and
fisub
push
cld
and
popf
gs
std
ltr
or
jecxz
dec
sub
shl
ds
push
xor
(bad)
retf
sub
test
xchg
fiadd
das
xlat
popf
hlt
mov
push
cmp
inc
inc
pop
push
pop
aad
mov
bound
in
(bad)
js
dec
jge
xor
je
jmp
cdq
pop
or
add
div
push
add
mov
adc
xor
pushf
jl
inc
or
xchg
sub
pop
add
mov
inc
add
pushf
sbb
lods
not
movs
pop
test
ror
adc
call
push
adc
inc
and
inc
add
(bad)
(bad)
sub
test
cmc
(bad)
retf
jmp
mov
(bad)
jmp
retf
inc
(bad)
cld
cld
adc
je
and
pop
pop
jg
shl
xchg
lods
xor
outs
or
das
jle
cwde
mov
mov
xor
pop
div
in
xlat
mov
fidiv
addr16
pcmpgtd
pushf
adc
xor
mov
mov
out
or
or
mov
dec
xchg
and
sbb
cli
mov
(bad)
fcomp
xor
jp
ins
dec
imul
in
mov
jae
sahf
mov
popa
aam
adc
sbb
add
sbb
lea
mov
mov
jnp
fwait
push
push
pmulhw
shl
ss
push
lea
test
cmp
xchg
leave
lds
std
mov
or
add
gs
int
cmp
inc
sbb
fs
xchg
test
push
and
cmp
xchg
dec
sub
iret
xor
fistp
adc
cmp
shl
icebp
lods
inc
sub
jle
push
mov
push
aaa
rcl
nop
loope
cmp
enter
inc
sub
fdivr
test
inc
(bad)
xlat
addr16
xchg
enter
xor
mov
icebp
into
and
pop
fwait
mul
lods
imul
jle
and
xchg
dec
push
jl
(bad)
jl
mov
mov
out
mov
and
shl
aaa
xchg
sub
sbb
and
aad
in
sub
movs
lods
sub
inc
mov
call
push
mul
adc
dec
retf
adc
ins
and
xchg
and
add
addr16
ds
and
and
cs
and
add
cmps
mov
mov
fadd
mov
cmp
repz
loope
pop
mov
ja
shl
repz
mov
daa
or
sub
sub
jmp
push
mov
mov
jg
inc
mov
xchg
pusha
mov
sbb
inc
xor
call
enter
mov
adc
shl
adc
mov
push
sub
ss
outs
dec
push
inc
xchg
dec
mov
adc
inc
inc
fadd
xor
or
adc
mov
sbb
test
addr16
cmps
sbb
push
js
fild
or
xchg
push
in
retf
test
adc
and
dec
in
add
sbb
neg
sub
in
pop
push
lahf
or
jb
xchg
xchg
into
push
xchg
cmp
mov
push
mov
fs
cdq
xor
push
outs
scas
retf
mov
loopne
out
out
mov
add
cmps
lea
and
or
sahf
(bad)
out
mov
jge
cld
cmc
aas
jg
lock
pop
xor
dec
into
movs
xchg
dec
sar
les
xor
xor
sub
cwde
(bad)
mov
lock
arpl
cmps
mov
fld
pop
mov
cmp
repz
shr
shl
add
push
or
int
pusha
mov
fnstenv
ret
add
shl
inc
cs
adc
mov
sub
shr
jg
std
into
(bad)
fist
call
imul
sub
cli
cmps
sub
mov
loop
jmp
inc
retf
jl
pop
sbb
mov
adc
movhps
icebp
lahf
xor
std
or
jno
sbb
pop
iret
lahf
and
ss
(bad)
int3
mov
ja
jl
rol
out
lds
mov
popf
cmp
jecxz
fcomp
aas
mov
push
cmp
fst
pop
cmp
adc
mov
xchg
push
popf
lea
add
push
pop
pop
adc
inc
xor
loopne
adc
scas
mov
sub
clc
call
adc
pop
pushf
enter
call
sub
or
pop
in
jmp
test
xchg
push
inc
jle
dec
fist
jge
mov
and
add
mov
dec
inc
dec
mov
cmp
out
or
push
pop
sbb
cld
xchg
xchg
push
std
fdiv
mov
shl
outs
sbb
adc
jmp
sub
test
and
or
xor
clc
xchg
aaa
mov
(bad)
in
lods
pop
mov
movs
rcr
jo
or
daa
sub
aaa
clc
(bad)
jg
stos
(bad)
fsub
retf
iret
and
cmp
jecxz
inc
call
xchg
jnp
fs
fsub
sub
(bad)
jg
xor
aas
ffree
enter
repnz
inc
push
popa
mov
fstp
std
or
jbe
shr
jae
not
(bad)
jge
mov
adc
js
daa
nop
rcl
lea
js
push
aam
fiadd
xor
fisub
xchg
hlt
out
cmp
shl
fs
imul
(bad)
xchg
aas
sar
outs
mov
pusha
fiadd
mov
jecxz
fs
rep
xor
inc
jl
push
jno
stos
jnp
fdiv
push
fist
out
add
jb
nop
jge
lea
and
add
jne
inc
add
cmp
int
xchg
sbb
dec
fld
or
sbb
inc
int
lods
(bad)
jb
movs
xor
or
cwde
cmp
pop
fisttp
int3
mov
xchg
pop
push
push
jge
and
mov
lahf
mov
test
sti
mov
mov
mov
xchg
fdiv
scas
pop
mov
cmp
inc
(bad)
out
mov
push
ret
(bad)
in
dec
aas
hlt
xchg
fiadd
adc
jmp
xchg
leave
cmps
frndint
sbb
scas
mov
mov
xor
cmp
xchg
(bad)
es
push
xchg
enter
fldcw
jle
jae
mov
add
jb
mov
xor
rcr
cmp
out
cmp
jnp
jne
iret
test
fistp
jno
push
sub
dec
arpl
ins
clc
jmp
outs
jne
in
in
loopne
in
adc
sahf
pop
jge
sbb
fnstenv
jle
ror
ret
mov
xchg
stc
sub
inc
xchg
aad
in
adc
loope
retf
mov
and
aaa
imul
pop
push
push
push
scas
shr
inc
lss
fxch
cmc
sbb
sti
cmp
dec
jl
bnd
mov
aaa
aaa
std
leave
xchg
in
scas
stc
lea
jg
loop
test
and
sahf
mov
dec
pop
xchg
cmps
sbb
je
sbb
adc
outs
sbb
out
pop
adc
fs
xchg
xchg
jbe
(bad)
imul
ins
fdivr
fisubr
sbb
or
retf
adc
popf
and
fdivr
sar
xor
cmp
fwait
add
pop
aad
jns
push
(bad)
rol
sahf
movs
xor
(bad)
test
int
jne
cmp
xchg
sbb
dec
push
lods
push
xchg
lock
fwait
cmp
adc
cmp
jns
sub
dec
bound
push
call
mov
cmc
or
nop
fcomp
jo
xor
jno
pop
leave
stos
push
ins
xchg
push
pop
mov
fwait
in
pushf
cmp
adc
adc
pop
aaa
jbe
movs
cmc
jnp
movs
fcom
lods
aad
clc
mov
cmps
cmp
popa
dec
pop
push
std
loope
mov
loop
mov
dec
lods
shl
out
pop
xchg
mov
mov
mov
cmc
fld
adc
ins
sar
test
pop
cmp
mov
hlt
jl
aad
xor
int3
lds
pop
push
sub
dec
retf
cmp
cmc
leave
les
gs
cmp
sbb
leave
sar
fisttp
int3
ret
and
(bad)
(bad)
xchg
ficom
gs
(bad)
push
mov
rol
pop
(bad)
adc
imul
jb
or
inc
bound
stc
jmp
dec
or
xlat
cmp
fsubr
xor
sbb
jmp
sbb
xor
out
addr16
pop
aas
push
je
fstp
adc
mov
push
add
jge
scas
test
or
mov
adc
jnp
sbb
fist
push
das
loop
mov
and
das
push
clc
stc
mov
(bad)
sbb
outs
pop
hlt
jmp
cmp
test
lock
test
add
lds
adc
xor
inc
push
xor
push
add
cmp
ins
sti
stos
or
cmp
inc
add
cwde
movs
test
jb
mov
dec
jo
push
arpl
imul
and
push
and
add
dec
mov
loopne
adc
mov
jb
out
cmps
sbb
test
daa
xchg
cli
cmps
fsub
mov
mov
cmps
or
xchg
sbb
pop
sahf
loop
pop
xor
sti
and
dec
mov
sub
dec
xor
mov
data16
jmp
js
and
outs
adc
pop
aad
in
inc
inc
and
lock
adc
adc
test
push
jle
stos
sub
inc
add
pop
cmp
mov
xor
push
mov
and
xchg
add
and
ss
test
loop
xchg
dec
jg
or
push
cmp
mov
and
enter
inc
add
daa
inc
imul
mov
adc
or
mov
inc
or
inc
jmp
pop
int
call
not
mov
mov
add
dec
pop
jb
retf
adc
push
xor
js
jb
dec
nop
jae
push
jmp
in
enter
add
mov
add
js
and
add
adc
add
mov
jae
in
out
repnz
add
popa
pop
xchg
mov
and
scas
cmp
dec
test
retf
inc
or
in
mov
and
leave
rcr
and
mov
cmp
shr
pusha
lods
arpl
push
adc
adc
(bad)
(bad)
es
cmp
xchg
add
inc
add
jmp
lods
pop
sbb
mov
loope
dec
lods
into
dec
jns
cwde
ds
inc
fst
and
inc
push
xor
jno
jne
mov
ret
jb
adc
push
pop
add
xor
xchg
and
xor
imul
add
pop
or
xor
push
fadd
test
pop
adc
nop
add
lock
repnz
push
xor
xchg
sub
xor
xor
or
sbb
sub
cld
mov
pusha
xchg
in
iret
inc
inc
push
mov
ss
cld
pop
sub
jo
dec
jmp
dec
dec
push
(bad)
push
pop
enter
cmp
icebp
rol
mov
mov
fldenv
sub
push
sbb
dec
fwait
xchg
xchg
(bad)
fidiv
mov
pop
push
jmp
sub
xor
sub
in
dec
sub
das
jmp
out
or
dec
cwde
enter
sti
outs
xor
dec
dec
movs
es
mov
in
mov
dec
cmp
jo
(bad)
push
div
pop
inc
mov
out
neg
xchg
cmps
inc
push
cwde
mov
inc
jmp
jmp
ds
push
test
rdmsr
pop
cmp
cld
or
in
mov
out
pop
fs
mov
retf
in
and
sub
movs
inc
(bad)
in
pop
jne
ins
and
inc
push
stc
sub
mov
mov
xor
outs
hlt
add
sar
cdq
rcr
retf
lods
aas
adc
jecxz
cmp
gs
ins
(bad)
cld
or
xor
cmp
shl
(bad)
xlat
sub
and
jl
mov
(bad)
ins
das
mov
out
pop
in
(bad)
dec
mov
inc
lock
outs
mov
jno
sub
or
push
ins
push
scas
loope
outs
int3
or
(bad)
in
push
into
cmp
fidiv
jo
jg
and
(bad)
movs
xchg
lahf
rol
inc
sbb
xchg
mov
add
adc
and
and
fs
cdq
xor
mov
xchg
scas
jp
imul
popf
loop
jae
push
push
sub
loop
les
pushf
mov
mov
dec
das
push
xor
jle
iret
mov
mov
jp
(bad)
and
js
inc
sbb
dec
sub
mov
cli
out
mov
mov
iret
lods
popf
or
adc
or
pushf
cmp
mov
stc
mov
pop
out
sub
aas
ds
add
arpl
push
cwde
xor
repnz
int
pushf
push
pop
cmps
aas
pop
jb
scas
cmp
(bad)
leave
mov
scas
mov
fs
adc
out
cmp
fcomp
enter
setne
cs
sub
test
inc
jno
and
jno
movs
mov
mov
push
icebp
mov
pop
xor
sbb
mov
sbb
sub
pop
push
test
or
jo
pop
cmp
jp
add
(bad)
sub
mov
mov
inc
push
imul
fldcw
pop
test
hlt
adc
push
repnz
add
in
or
inc
add
adc
adc
push
addr16
icebp
xor
fld
sbb
pop
xchg
add
adc
mov
xchg
repnz
and
xor
and
ret
push
mov
add
ret
(bad)
jae
jb
push
cld
push
jmp
cmp
jae
movs
xchg
jno
jno
nop
fucomp
sbb
cmp
xchg
jl
mov
clc
push
cld
fldenv
or
ret
jp
xor
push
rcl
mov
pop
mov
push
mov
je
xor
cwde
push
dec
es
retf
push
xchg
mov
dec
mov
xlat
mov
fmul
shl
(bad)
pop
rol
(bad)
int3
jmp
mov
ds
pushf
imul
outs
cli
js
fdiv
mov
xchg
out
xchg
arpl
shl
xchg
movs
out
(bad)
cdq
out
out
in
jmp
jg
imul
inc
(bad)
loope
jbe
test
int
leave
xchg
jge
lock
test
push
xchg
xor
lahf
fcom
or
mov
xor
jne
sub
adc
mov
cmps
ins
(bad)
scas
inc
or
and
cmp
out
cwde
loope
xchg
aaa
out
or
mov
sbb
cld
outs
cmp
int
mov
inc
jle
int
xor
inc
imul
jl
aad
lods
pop
std
mov
fcom
adc
pop
xchg
mov
in
in
shl
(bad)
fisttp
test
iret
in
dec
push
sub
mov
inc
xor
fnsave
xor
fld
push
inc
mov
pop
sbb
es
aaa
pop
mov
(bad)
fsubr
mov
push
out
out
clc
inc
xor
fild
cmp
mov
ins
dec
fdiv
jge
and
jae
sbb
sub
test
shr
ss
int3
les
dec
dec
aam
nop
mov
ds
pop
adc
js
pop
and
jo
hlt
outs
test
imul
je
pop
sti
pop
gs
sbb
dec
cmp
xchg
lea
jns
sahf
or
xor
ds
sub
call
mov
fadd
ss
cld
in
(bad)
or
sub
aas
cmp
jo
add
adc
adc
mov
add
test
mov
rep
sbb
push
ins
out
aam
outs
aaa
sbb
ret
mov
enter
mov
cwde
repz
cmp
aas
es
pop
jo
jp
sbb
and
daa
or
jbe
push
xchg
test
push
mov
sub
fisttp
mov
shl
adc
cmps
xor
rcr
mov
into
outs
movs
jae
ins
cld
xchg
mov
mov
ja
mov
test
fwait
mov
aaa
and
mov
push
sub
inc
lds
jo
cmc
(bad)
imul
or
jmp
pop
dec
js
inc
shl
or
and
loope
unpcklps
inc
and
dec
lods
sbb
leave
movhps
cmp
jo
imul
xchg
cs
and
dec
fdiv
mov
mov
loopne
xchg
movs
test
adc
or
push
stos
mov
or
sbb
movd
jns
inc
and
dec
(bad)
test
(bad)
xor
cmp
(bad)
mov
and
or
mov
push
mov
dec
mov
sub
test
and
mov
xor
shl
xchg
cmp
repnz
lahf
pop
inc
xchg
cmp
cmp
push
mul
push
sub
and
lock
cmp
imul
and
cmp
and
jecxz
fcmove
pop
jns
in
ss
ret
cmp
push
sub
daa
jno
push
dec
in
mov
(bad)
shl
xchg
sub
push
jmp
sub
add
test
retf
pop
add
mov
bound
shl
add
adc
mov
test
sar
daa
sahf
xchg
mulps
retf
ret
shl
or
pop
adc
mov
pop
sub
and
xor
loope
inc
push
mov
enter
clc
push
stc
mov
xor
sub
int3
add
xor
das
and
ins
or
shl
retf
in
popf
add
xchg
push
ror
daa
xchg
sbb
data16
or
cwde
sub
fild
popf
loope
test
mov
mov
xchg
gs
shl
and
xchg
retf
enter
inc
pop
nop
push
(bad)
or
loop
xchg
mov
bound
sub
xor
test
mov
(bad)
jp
and
dec
inc
jns
js
cmp
sti
xor
and
jge
ret
mov
xchg
mov
scas
sahf
lock
nop
or
and
dec
out
popa
mov
sub
jbe
cmp
popf
push
cmp
cdq
loope
ret
inc
cwd
iret
outs
in
pusha
out
inc
fnstsw
test
aas
adc
fisttp
mov
lods
mov
jb
dec
int
cmp
retf
fs
ret
xor
repz
push
aas
xor
dec
cwde
xor
push
push
xor
pop
jge
xchg
dec
fs
jge
inc
sub
mov
bound
dec
jns
lods
int3
jae
(bad)
jecxz
out
rcl
xchg
cmp
icebp
mov
add
mov
pushf
loopne
stos
push
mov
xor
(bad)
fild
mov
cmp
xchg
and
stc
enter
(bad)
and
jmp
aas
stos
pushf
mov
cmp
sti
push
lods
sbb
add
push
cmp
movs
iret
mov
and
mov
test
dec
jbe
pop
test
xchg
mov
rol
add
pop
add
psrlw
sub
stc
pop
into
sub
sbb
sub
dec
loope
popa
adc
aad
call
lods
sub
jg
mov
push
push
fadd
cmp
cmp
rol
mov
or
in
or
ret
and
jb
pop
into
test
mov
and
push
mov
xor
push
mov
popf
jo
pop
cmc
aas
popf
leave
ret
vsubps
mov
hlt
daa
cmps
mov
pop
sbb
mov
test
inc
adc
repnz
push
xor
mov
cmp
addr16
push
push
jnp
fiadd
stc
dec
scas
inc
test
movntq
mov
pusha
lea
jmp
fimul
dec
push
data16
in
daa
sbb
adc
jecxz
lahf
mov
call
sbb
dec
add
fnstenv
es
aad
ror
retf
or
mov
int3
fwait
inc
mov
js
jns
clc
fst
push
and
sub
push
mov
xchg
stos
ror
mov
dec
and
inc
push
push
jp
jo
inc
sbb
inc
sbb
or
jne
int3
jge
test
push
adc
fwait
scas
mov
sbb
mov
mov
jae
mov
push
cmps
sbb
dec
lods
enter
mov
je
cdq
movs
aad
adc
jp
pop
mov
(bad)
mov
and
and
mov
loope
sbb
(bad)
shl
add
mov
adc
lods
pop
inc
xchg
arpl
fild
mov
fnstenv
jns
mov
sub
add
arpl
add
mov
je
push
ss
pop
les
sub
call
(bad)
(bad)
stos
in
add
push
ja
adc
mov
jno
arpl
jg
out
cli
repz
and
cmp
xchg
cs
test
sub
jmp
and
adc
xchg
dec
cmp
retf
push
wbinvd
outs
sti
(bad)
jle
cmp
(bad)
mov
xchg
inc
not
lods
pop
xor
test
imul
fnsave
cmp
sub
sbb
imul
sub
popa
sbb
dec
adc
in
pusha
xchg
xor
jmp
nop
inc
out
in
shl
call
jg
sub
lea
mov
xchg
cmp
inc
inc
outs
pop
icebp
retf
jb
xchg
jae
mov
repz
fst
push
pushf
cmp
jae
leave
lock
sub
and
gs
xchg
mov
adc
test
sar
pop
sbb
ins
adc
in
fs
xchg
adc
ret
or
pop
cmp
mov
mov
jmp
xor
dec
xchg
push
sub
shl
out
cmp
jle
shr
push
retf
cmp
(bad)
mov
in
jg
out
xchg
jne
fdivr
fnsave
mov
movs
or
in
ins
call
pusha
add
shl
xchg
pop
(bad)
inc
test
rcl
repnz
jmp
and
scas
fbld
aas
scas
hlt
fldcw
sbb
frstpm(287
adc
test
(bad)
movs
sbb
and
fisttp
mov
es
xor
jb
out
jbe
cmp
(bad)
jle
pop
cld
ds
adc
in
das
ja
leave
sbb
aaa
fwait
scas
ins
jae
in
sbb
xor
or
jmp
out
adc
jo
push
inc
or
ret
dec
sbb
sub
ficomp
icebp
adc
dec
xor
add
adc
loope
in
or
pop
mov
fcom
inc
mov
push
cwde
sub
xchg
icebp
and
push
fs
cmp
stos
aas
mov
rol
jmp
leave
jmp
xor
push
vmread
jp
inc
shl
sub
aaa
(bad)
xor
ret
sub
pop
adc
call
dec
jbe
ss
daa
fidivr
movs
sbb
mov
pop
gs
or
and
sub
ss
sbb
sbb
sbb
xor
lahf
xor
cmp
xchg
cmp
cmp
mov
add
xchg
call
jp
rcl
sbb
xchg
inc
fldcw
(bad)
push
outs
xchg
xchg
pusha
outs
int3
cmp
in
inc
adc
inc
mov
lock
jo
cmc
xor
ret
(bad)
out
or
fidiv
mov
in
xor
shr
inc
mov
or
push
xor
mov
add
inc
or
add
mov
xor
repnz
ds
lock
mov
inc
call
aas
xor
pop
sbb
pop
lds
lock
adc
sbb
xor
imul
mov
adc
call
mov
push
or
rol
lods
and
mov
add
adc
mov
jno
ror
or
dec
fsub
push
hlt
push
cmp
push
in
icebp
or
test
les
xchg
mov
mov
fist
test
and
sbb
sub
jmp
jmp
adc
and
rcl
xor
aaa
fimul
ins
outs
in
clc
aam
es
pusha
mov
retf
movs
hlt
push
sbb
daa
mov
cmp
inc
jmp
repnz
rol
sbb
pop
push
int3
out
loop
and
dec
fmul
pop
int3
xor
cli
call
std
mov
cmp
retf
jnp
or
cwde
fcomip
mov
icebp
cmp
xchg
outs
rol
imul
in
xchg
or
mov
adc
movs
aas
enter
sti
xchg
mov
cmps
xchg
and
jmp
mul
jmp
adc
mov
clc
add
sbb
int
dec
push
adc
mov
add
pop
mov
rcl
mov
popa
mov
mov
cmp
pop
adc
sub
pop
(bad)
retf
icebp
sahf
cmp
scas
outs
dec
cmp
aaa
dec
sbb
hlt
adc
mov
lods
add
test
adc
dec
mov
fidivr
add
fld
dec
pop
js
fnstcw
(bad)
retf
and
and
stos
mov
sub
fwait
out
push
je
add
sti
sbb
pop
loopne
(bad)
jg
popa
sub
jecxz
sub
rcr
sbb
jae
cs
dec
js
aam
or
xor
in
jns
data16
not
aam
sub
iret
mov
xor
mov
movs
test
pop
dec
ja
int
jecxz
xchg
mov
pop
das
inc
inc
or
dec
mov
cmp
arpl
ss
mov
ret
test
ror
cmp
iret
sar
shl
cld
pop
or
sbb
dec
pop
or
lods
sbb
mov
test
sub
sar
mov
dec
push
imul
movs
iret
cmc
in
(bad)
aad
cwde
test
or
js
aas
or
jns
outs
mov
test
push
push
imul
out
xchg
test
cmp
cdq
xchg
aaa
cmc
repz
push
leave
fstp
test
lea
and
or
jmp
fwait
mov
ds
sub
gs
jmp
cmp
out
loop
or
adc
pop
lea
aaa
sub
inc
inc
dec
jno
mov
dec
jne
push
out
dec
mov
adc
cwde
jmp
dec
call
xor
mov
test
jb
pop
sbb
mov
nop
xchg
stos
pop
mov
mov
pop
dec
mov
lock
ror
xchg
xchg
sub
cmp
adc
jmp
mov
mov
lock
add
mov
jecxz
test
jbe
(bad)
sahf
push
pushf
adc
jg
pop
hlt
sub
jmp
mov
pop
jg
or
cmp
retf
(bad)
pop
push
or
ret
outs
mov
and
cmp
pop
or
jo
(bad)
in
cmp
mov
(bad)
and
pop
fimul
push
dec
dec
mov
cmp
movs
mov
mov
fwait
lods
and
push
inc
sbb
pop
push
repnz
lods
daa
imul
in
(bad)
fst
jbe
push
cdq
mov
mov
jmp
ins
xor
cli
pusha
push
inc
jae
loope
push
sub
cmp
mov
outs
jbe
ds
popf
imul
pop
rcl
imul
add
enter
mov
xchg
mov
mov
leave
xor
test
push
jo
add
mov
imul
sub
jo
pop
and
mov
push
jns
or
pop
mov
fisttp
cmp
xchg
adc
jl
inc
ret
stos
sti
mov
and
adc
jbe
and
inc
pop
jbe
add
mov
push
sub
mov
retf
pop
or
test
ds
adc
dec
mov
and
mov
jmp
mov
sbb
pop
dec
pop
popa
push
punpckhbw
ins
nop
pop
sub
and
jle
pop
ja
xchg
and
jbe
sbb
sti
sbb
push
or
add
jb
cmc
int3
inc
aad
cmp
push
xchg
mov
inc
xor
fst
sbb
adc
in
int
mov
add
mov
sub
sub
push
das
sub
push
inc
mov
adc
or
push
inc
out
and
loopne
shl
icebp
in
inc
int3
cmp
sbb
adc
js
and
adc
add
enter
pusha
or
arpl
out
cmc
ins
shr
xchg
fsubrp
xchg
mov
outs
add
fbld
sti
add
scas
cdq
addr16
imul
push
pop
inc
jnp
and
xchg
jmp
mov
call
push
sbb
sbb
jp
cmc
inc
pop
test
xchg
mov
mov
adc
enter
scas
int3
push
cmp
dec
shl
adc
sub
outs
dec
xchg
fiadd
sti
add
pop
mov
in
mov
je
dec
stc
out
sar
test
mov
je
cmp
pop
rol
inc
gs
pop
xchg
test
fiadd
mov
fild
enter
push
stc
out
xchg
aaa
jbe
js
rol
movs
or
pop
mov
movs
sbb
jmp
into
sbb
iret
loopne
jb
loope
jecxz
pop
stos
xchg
(bad)
or
push
fsubr
sub
and
nop
aaa
pop
inc
jecxz
xchg
cs
add
and
(bad)
sar
stos
mov
lods
sbb
cmp
xchg
pop
test
pop
mov
jne
and
popa
mov
int3
adc
xor
dec
movs
(bad)
popf
or
xor
out
in
add
adc
pop
xchg
(bad)
mov
or
mov
retf
retf
inc
cmp
mov
sub
lods
loope
cmps
imul
dec
add
pop
push
push
sub
bound
inc
ret
daa
aam
retf
xchg
popa
movs
pop
xchg
push
cmps
aam
mov
clc
into
adc
dec
mov
push
out
iret
stc
mov
add
scas
push
push
addps
arpl
pop
mov
js
or
mov
mov
adc
vcomisd
xchg
xor
xchg
in
call
inc
pop
das
adc
push
or
xor
add
ret
push
js
imul
inc
fcmovnb
lahf
push
das
and
sub
fadd
retf
leave
(bad)
cli
scas
sub
outs
icebp
cmp
jns
cwde
push
pushw
jmp
xor
xor
mov
mov
aas
shrd
or
adc
inc
aad
sub
test
push
xchg
addr16
or
test
adc
jp
cmps
mov
je
call
pop
retf
pop
sbb
(bad)
push
mov
xor
mov
add
popa
mov
xchg
fcmovu
fadd
aaa
add
inc
jae
dec
lock
mov
sub
or
loopne
pop
xlat
push
gs
cmp
loope
fs
and
xor
sbb
inc
xor
xor
inc
pop
push
mov
aam
xchg
add
mov
repnz
les
adc
or
push
adc
mov
jns
hlt
movs
test
add
jbe
or
xor
gs
dec
fisttp
mov
sub
mov
shl
xchg
mov
(bad)
icebp
sar
push
adc
xchg
ja
ins
inc
jo
add
jp
push
sub
ret
hlt
cmps
cwde
xchg
xchg
fist
push
jb
xor
dec
xchg
sbb
or
inc
movs
mov
cmp
mov
jl
mov
mov
push
xlat
sbb
xor
outs
cmps
sub
mov
lods
mov
mov
xchg
jne
mov
mov
and
push
xlat
pop
mov
arpl
sar
add
sbb
iret
push
xchg
movs
stc
and
addr16
adc
xchg
or
xlat
js
dec
pushf
mov
les
(bad)
fwait
daa
xchg
addr16
(bad)
mov
xchg
jmp
lahf
push
fndisi(8087
jne
stos
xor
es
imul
ins
xchg
push
das
dec
pushf
pop
arpl
aad
call
aad
aaa
xor
addr16
(bad)
push
(bad)
mov
retf
sub
leave
inc
inc
test
sbb
sub
cmps
mov
cmps
idiv
and
aaa
sub
adc
push
sbb
out
pop
adc
mov
and
mov
int3
icebp
test
pop
sbb
and
cmps
addr16
jecxz
add
ss
jg
rol
test
std
and
popf
add
jl
pop
(bad)
fwait
mov
push
jbe
cld
sbb
ins
cmp
add
(bad)
popa
mul
sub
rcl
cmp
pop
(bad)
loopne
pop
jb
adc
push
pop
jo
sub
es
cmp
mov
sbb
call
sbb
push
data16
test
inc
pop
rcr
mov
xchg
jne
cs
(bad)
ror
mov
jb
xor
jl
and
cmp
into
sub
jecxz
mov
xor
inc
sbb
ficom
push
dec
sbb
sub
aas
adc
retf
or
mov
xchg
stc
dec
pop
outs
fst
and
lock
lock
jbe
sbb
loop
ret
dec
jp
daa
sub
(bad)
ror
jmp
pop
(bad)
shl
adc
mov
cmp
(bad)
sar
loope
cmp
and
pop
lods
sar
jb
std
mov
dec
and
aaa
cmp
sbb
mov
movs
out
sbb
push
jecxz
pop
in
shl
(bad)
and
pop
xor
(bad)
xlat
movs
pop
mov
or
inc
cmc
mov
mov
mov
in
fdiv
adc
scas
scas
js
cmp
popf
sahf
cmp
jne
sbb
xchg
mov
inc
in
in
push
jne
call
jle
dec
xchg
pushf
fmul
pop
into
fcom
push
pop
fnstcw
and
(bad)
aaa
or
jmp
call
push
mov
icebp
pushf
repnz
mov
pop
jp
jns
repz
pop
(bad)
jl
out
sub
ins
push
(bad)
mov
sbb
test
mov
adc
jbe
push
mov
jecxz
jne
aam
mov
adc
adc
jmp
sub
sbb
jne
test
xor
push
(bad)
fnstsw
inc
mov
adc
das
int
jbe
xchg
mov
push
pusha
push
xchg
repnz
sub
ret
xchg
mov
or
inc
stos
in
push
dec
outs
sbb
dec
mov
or
cmp
retf
push
pop
push
(bad)
jo
shl
dec
std
imul
add
adc
jne
pop
mov
in
scas
leave
push
jnp
nop
xchg
pop
mov
jne
test
jb
inc
push
punpckhdq
adc
dec
xor
xchg
(bad)
cld
lahf
mov
call
mov
jmp
mov
or
fst
dec
imul
daa
pop
mov
(bad)
xchg
adc
dec
mov
enter
mov
sub
sti
lea
movs
mov
hlt
jge
scas
jnp
pop
xor
add
cmp
mov
push
shr
mov
fwait
lods
rcr
sbb
jo
fs
shr
jmp
test
mov
jb
adc
pushf
aad
xlat
push
push
pushf
xor
dec
shl
mov
inc
sub
lds
das
jbe
push
mov
jmp
mov
push
sbb
push
push
mov
push
jmp
sbb
mov
lds
dec
add
pop
in
jmp
dec
ret
xor
pop
int3
mov
fld
pusha
mul
pop
jo
pop
scas
or
dec
imul
xor
pop
stc
neg
ja
fnstcw
pop
fstp
push
cli
push
fadd
and
(bad)
call
aam
cmc
shl
and
mov
jl
popa
or
jecxz
jmp
inc
sti
scas
clc
fmul
jmp
hlt
xchg
sar
ja
cmp
test
mov
inc
jp
adc
aas
(bad)
mov
mov
dec
push
sti
out
push
mov
loopne
mov
retf
cli
fisubr
push
cli
movs
lock
dec
push
cmp
mov
scas
sahf
mov
jg
out
and
daa
mov
cmp
es
shl
and
rcl
mov
scas
mov
lahf
aam
jmp
add
pmulhw
sahf
movs
in
stos
(bad)
into
sti
fdivr
xchg
int
into
pushw
pop
stos
scas
out
test
pop
aam
xor
fstp
xchg
xor
je
add
fsubr
cmc
das
test
leave
movs
or
aaa
lahf
cmc
xchg
sahf
ss
test
jno
mov
(bad)
mul
inc
pop
push
mov
dec
je
ds
sti
cdq
icebp
scas
xchg
out
addr16
retf
shl
xor
hlt
shr
nop
pop
fucomi
(bad)
sbb
int3
adc
push
test
and
pop
mov
fdiv
pop
aam
js
dec
cmp
xor
mov
stos
add
mov
in
outs
dec
cmc
xchg
imul
push
test
in
enter
lods
cmc
lds
lds
enter
nop
cmp
clc
in
(bad)
pop
in
loop
mov
mov
mul
scas
sbb
fcom
in
mov
imul
ins
fnstsw
sbb
jecxz
hlt
or
cli
mov
push
ins
xchg
jno
(bad)
fiadd
pushw
mov
inc
mov
pop
mov
data16
xchg
jne
push
jbe
adc
pop
xlat
out
push
sbb
pop
push
call
xchg
xor
in
jno
mov
test
sar
xchg
iret
push
mov
cld
inc
fwait
mov
adc
push
ret
xor
cmp
fs
retf
jecxz
stos
dec
jnp
cdq
es
adc
xor
mov
pop
test
jle
(bad)
push
fsub
test
scas
mov
xchg
xor
in
and
sub
pop
sub
mov
popa
fadd
cmp
cmp
mov
repz
fidivr
ja
dec
aas
mov
or
mov
or
dec
xor
lods
fnstsw
mov
xchg
fs
and
div
mov
inc
adc
aam
mov
or
loop
xchg
lods
cwde
sbb
cmp
xchg
jo
xchg
jl
repnz
dec
into
inc
adc
stos
adc
pop
call
jns
shr
mov
xor
js
iret
mov
mov
repz
cwde
push
mov
outs
dec
(bad)
adc
daa
fisub
ret
jno
cmp
mov
stos
mov
stos
add
inc
in
repz
pop
pushf
jg
mov
mov
xor
mov
not
adc
int3
and
loopne
das
push
xchg
lods
dec
inc
(bad)
int3
xchg
xor
sti
adc
push
and
in
adc
push
dec
xor
mov
mov
inc
pop
jl
fild
cmp
sahf
int3
cmps
stos
mov
pop
cs
pop
(bad)
out
(bad)
mov
jae
movs
jb
mov
stos
js
mov
xchg
sbb
clc
inc
xchg
(bad)
test
rcr
(bad)
cmps
sub
stc
or
imul
pop
fisub
xor
xchg
sub
mov
jge
aad
sub
je
push
mov
cmc
adc
mov
lock
push
in
push
xchg
lods
lock
mov
and
and
mov
lods
push
sub
gs
sub
inc
ins
and
aad
sbb
xchg
mov
adc
aaa
jae
ja
mov
pop
cmps
inc
lods
mov
test
xchg
and
iret
ud0
jo
jb
fdiv
jno
mov
inc
mov
ins
mov
std
jns
pop
xor
mov
push
fist
xchg
mov
mov
xor
popf
cdq
repnz
gs
mov
dec
mov
fbstp
js
and
lds
(bad)
jmp
adc
add
xchg
outs
xor
pop
xchg
cmp
pushf
mov
jns
out
stos
in
dec
js
pop
repnz
cli
cdq
fdiv
sbb
xor
lods
je
xchg
(bad)
mov
stos
sub
pop
es
adc
push
out
dec
sub
and
jge
push
lods
fiadd
sub
or
or
inc
lds
mov
mov
cwde
icebp
sub
jo
aam
push
sub
popa
(bad)
cmps
pop
shl
dec
arpl
xlat
test
or
cli
ss
mul
aaa
lods
and
int3
js
mov
cmps
dec
pop
call
xor
mov
sbb
jns
and
pop
aaa
jo
mov
bound
add
cld
xlat
ins
inc
ins
xlat
stos
in
retf
inc
dec
pushw
aad
mov
out
and
mov
stos
es
sbb
cdq
pop
xchg
movs
jne
bound
cdq
pop
or
ret
push
test
sub
jle
inc
(bad)
scas
xchg
outs
outs
jmp
cmc
mov
jmp
imul
mov
push
cmp
lods
ss
pop
bound
push
std
ins
imul
jmp
maxps
daa
aad
(bad)
js
into
in
jge
adc
or
mov
das
ror
pop
into
ins
bound
xor
ss
loopne
pop
(bad)
push
sub
mov
test
push
mov
jle
lods
add
shl
jge
iret
jo
je
xor
(bad)
inc
or
imul
xor
cmp
cmc
and
pusha
sub
jmp
ss
popf
adc
aaa
mov
std
repnz
add
xchg
sbb
xor
mov
out
inc
push
in
out
cld
mov
jmp
jge
xchg
lds
and
pop
frstor
mov
dec
icebp
addr16
dec
xor
(bad)
lods
cmc
push
mov
push
jnp
and
xchg
or
cs
std
push
and
loop
mov
mov
stc
jle
add
imul
pop
push
jnp
(bad)
fnstsw
pusha
push
icebp
or
adc
ret
mov
popf
popa
(bad)
popa
imul
xchg
cld
push
mov
imul
jo
mov
mov
ret
imul
sbb
(bad)
jg
mov
xchg
mov
jmp
jns
adc
aaa
in
xchg
dec
pop
mov
movs
sbb
xor
mov
jl
icebp
imul
add
jp
or
add
xor
sbb
mov
push
imul
out
add
(bad)
data16
gs
ficom
pop
pop
fs
lock
outs
ficomp
ins
fist
sub
in
mov
push
aad
cmp
push
cmp
scas
loopne
mov
push
bound
xlat
out
mov
jmp
in
inc
pop
(bad)
add
sub
mov
jl
sub
ror
add
ja
xor
loop
(bad)
mov
lods
sbb
and
fprem
adc
dec
lods
test
movs
cvtdq2ps
popa
pusha
or
mov
in
in
push
stos
mov
cli
pop
cmp
and
jle
(bad)
in
lds
mov
cmp
and
push
ror
add
js
push
in
lea
mov
cmps
loope
dec
fidiv
add
mov
xor
inc
sub
adc
ss
adc
in
mov
test
fdivr
sbb
add
cli
mov
cmp
sub
retf
sbb
pop
out
mov
jecxz
(bad)
fiadd
fisub
sbb
add
and
test
mov
adc
sbb
mov
in
hlt
aaa
std
mov
or
neg
cmp
push
adc
es
xchg
cdq
pop
test
mov
add
retf
clc
fidivr
jmp
mov
jne
out
or
inc
add
dec
cmc
mov
mov
or
jno
pop
std
pop
imul
pop
out
jl
je
mov
lock
mov
pusha
jmp
fs
fisub
xchg
shl
xchg
dec
hlt
ins
dec
jecxz
pop
in
push
mov
mov
das
xor
cmp
adc
ins
movs
mov
stos
push
loope
add
or
add
pop
or
leave
lock
daa
hlt
lods
push
mov
daa
or
sub
cdq
jecxz
pop
mov
jecxz
rol
dec
xchg
pushf
xchg
mov
xchg
in
cmp
jmp
xor
mov
xchg
ds
fistp
push
push
dec
icebp
mov
xor
loop
mov
fist
fmul
imul
aam
std
imul
or
jnp
mov
stc
fs
sub
sti
enter
mov
cld
cmp
jnp
mov
inc
es
fsubr
daa
jbe
cmp
lods
repz
sub
or
or
sub
push
fcomp
(bad)
xchg
ret
iret
ds
outs
(bad)
sar
ffreep
sbb
push
mov
adc
mov
ror
cmp
scas
mov
sub
cld
test
jne
mov
pushf
jecxz
xor
mov
jb
aam
xor
add
xor
cli
rol
xchg
out
dec
dec
aaa
mov
mov
test
xchg
ds
icebp
mov
mov
pop
rol
xchg
sar
aaa
setle
cdq
cld
lea
test
sti
xor
cmp
xor
xchg
mov
sub
and
scas
test
push
mov
outs
sbb
stos
push
inc
sub
jp
adc
pop
inc
sti
mov
mov
in
inc
jbe
mov
cmp
xchg
repz
push
aam
aad
adc
xor
xchg
pop
pop
clc
mov
test
push
scas
lds
push
xchg
mov
cmp
inc
loope
adc
test
cmp
add
in
jecxz
mov
and
sub
and
sub
xor
add
pusha
jb
arpl
ficom
shl
mov
je
push
jge
sahf
aad
enter
mov
sbb
lods
div
inc
mov
mov
cmp
xchg
aaa
(bad)
jge
cmc
mov
addr16
mov
shl
sbb
outs
int3
pop
(bad)
jae
aaa
je
and
test
xor
dec
pop
mov
sbb
pcmpgtd
add
in
cld
fisttp
in
mov
or
mov
cdq
fwait
cwde
sub
fwait
mov
mov
nop
push
cmps
outs
mov
and
cmp
test
sar
je
div
jle
in
shr
and
frstor
or
cmc
sahf
data16
repnz
jbe
iret
sbb
jae
inc
iret
test
(bad)
rcr
repz
sbb
mov
or
fcom
sbb
pushf
jmp
icebp
push
or
pop
mov
cmp
push
loop
jo
fwait
loop
sbb
imul
aad
ror
jp
jmp
xor
jns
add
lea
std
add
adc
and
leave
push
sahf
pop
jb
xor
add
test
xchg
cmc
fldcw
add
sub
add
cs
xor
sub
fst
sbb
mov
std
xor
retf
jb
ins
cmp
scas
mov
pop
lahf
jne
fnstsw
std
bound
dec
cmp
in
repnz
fwait
in
aam
and
gs
mov
mov
mov
add
in
in
or
mov
addr16
lods
cmp
xchg
mov
cmp
jns
sbb
push
adc
cmp
(bad)
clc
fwait
inc
sbb
cmps
sub
sub
pop
retf
test
pop
fxam
fwait
adc
shr
stos
push
and
mov
pop
push
stos
call
jb
repz
or
jne
scas
jae
pop
jae
xchg
mov
arpl
mov
pop
mov
push
cld
pop
adc
xchg
inc
mov
ret
add
or
push
cdq
pop
jns
jne
sub
je
dec
cmp
call
jmp
aam
imul
fist
into
ds
jg
push
retf
cld
test
fld
dec
leave
dec
inc
jmp
pop
xchg
or
add
imul
pop
adc
or
inc
in
ins
das
fadd
xchg
mov
push
mov
pop
or
(bad)
mov
xchg
pop
dec
call
xor
out
ret
mov
ret
cmps
push
es
outs
jle
sbb
jge
and
and
pop
dec
lds
xchg
das
test
scas
imul
pop
repnz
sbb
mov
imul
pop
imul
call
jnp
cmc
mov
or
in
pop
int3
push
cmps
cmp
mov
hlt
loopne
jp
push
repz
test
adc
pop
mov
jp
in
xchg
aaa
lock
mov
push
test
mov
inc
js
cld
mov
dec
cs
mov
mov
xchg
dec
imul
popa
mov
in
xor
test
dec
pop
pop
push
xlat
cmp
lods
arpl
mov
mov
mov
jg
mov
(bad)
addr16
pop
movs
add
int3
adc
loopne
fnstenv
inc
ins
and
out
mov
or
test
mov
pop
ins
dec
ret
pop
jmp
cmp
int3
xchg
push
out
dec
mov
dec
dec
cmp
cdq
nop
(bad)
shr
and
pop
adc
popa
cmp
outs
pop
add
in
xor
out
mov
cwde
adc
cs
bound
mov
jmp
stc
mov
jp
mov
popa
and
neg
iret
sbb
mov
loopne
mov
into
push
inc
aaa
jns
test
pushf
cmp
arpl
repz
loopne
fwait
jo
add
das
mov
daa
jecxz
int3
aam
ins
cmp
fisubr
jg
pushf
repnz
adc
jo
shr
fiadd
pop
out
arpl
fst
add
cli
hlt
scas
into
sub
cmp
jge
je
mov
test
(bad)
mov
cli
in
sub
repz
movs
sbb
lods
jo
mov
stos
rcr
pop
out
and
ja
cmps
and
pop
adc
pop
je
movs
rcr
lahf
cmp
or
pusha
ror
add
and
pop
scas
sub
mov
push
mov
pop
adc
pusha
rcr
psubb
inc
call
mov
nop
and
jne
mov
dec
pop
std
and
mov
rcl
jb
arpl
pop
or
fsub
iret
mov
add
or
jne
in
or
ins
inc
push
adc
daa
clc
lods
inc
mov
adc
dec
daa
loope
xchg
xor
mov
(bad)
popf
fwait
call
xor
retf
aaa
and
imul
add
and
aaa
rdpmc
jge
add
retf
inc
inc
mov
ins
pop
cmc
ret
push
mov
jmp
mov
add
into
jne
adc
imul
xchg
mov
adc
sahf
jmp
shl
aad
stos
in
adc
aas
or
test
mov
pop
sahf
fwait
pop
mov
mov
pop
stc
xchg
cmps
xor
add
rcl
mov
sub
(bad)
(bad)
sub
inc
add
inc
push
shl
mov
jecxz
adc
ds
out
add
ds
ret
into
pop
add
dec
ins
mov
mov
lods
out
cld
mov
inc
ret
loope
test
int
push
je
xlat
mov
adc
xor
jns
jl
imul
push
adc
lahf
xor
int
lods
dec
pop
daa
sti
mov
or
xor
push
add
mov
fdivrp
cdq
mov
jmp
mov
repnz
stos
mov
jl
jmp
(bad)
fmul
xor
xor
aad
imul
jle
lea
mov
lds
adc
loopne
iret
sbb
push
ins
push
jo
pop
cdq
mov
mov
pusha
je
cmc
cli
sbb
xchg
dec
cmp
fstp
add
jne
and
mov
adc
es
push
cmp
mov
sbb
xchg
popf
ins
sub
and
cmps
jmp
rol
push
push
sbb
dec
sbb
mov
jbe
retf
dec
push
mov
mov
sbb
ror
sub
movs
sbb
int
xchg
lods
pusha
pop
aaa
or
jnp
adc
ror
les
push
mov
aas
xor
adc
aas
jmp
add
ja
call
movs
cmp
mov
into
push
test
out
aaa
(bad)
fisttp
ror
in
in
in
dec
frstor
push
mov
jne
push
xchg
scas
stos
add
out
test
xchg
sbb
dec
popf
inc
adc
aas
lock
jns
repz
ins
(bad)
in
ret
repnz
and
loop
lahf
int3
push
sbb
push
xchg
popa
aaa
aaa
stos
arpl
int3
xchg
and
pop
ret
push
(bad)
jecxz
xchg
inc
inc
push
xchg
ds
sub
in
rcr
shl
cdq
lods
bound
mov
jecxz
movs
push
or
ins
rcl
sub
adc
jecxz
jp
mov
test
jb
jecxz
paddb
and
mov
pop
lods
jmp
fnclex
mov
fcomi
or
mov
mov
cmps
xlat
push
repnz
fs
repnz
frstor
add
jb
mov
adc
sub
inc
inc
aam
in
mov
imul
dec
cmp
jb
pop
push
mov
loop
mov
std
imul
rcl
mov
cmp
shr
bound
movs
in
lea
movs
mul
mov
aad
aad
int
in
enter
mov
dec
lods
(bad)
or
jmp
sub
dec
xor
inc
aad
les
mov
addr16
scas
ins
jnp
daa
inc
or
(bad)
scas
or
sub
fsubr
push
icebp
and
sbb
mov
cmp
enter
pop
push
jne
pop
cmp
(bad)
cmp
(bad)
jnp
xor
mov
loope
fs
js
sbb
outs
loop
(bad)
retf
mov
inc
test
jl
mov
movs
add
ret
add
xchg
pop
xor
(bad)
push
push
cmc
adc
dec
push
jbe
aaa
jb
xchg
loopne
rcr
jle
add
into
pop
jbe
mov
inc
(bad)
dec
hlt
pushf
(bad)
fs
cmp
repnz
mov
mov
add
ficomp
scas
mov
adc
mov
xor
adc
(bad)
mov
push
sub
in
js
xor
int3
mov
into
in
inc
mov
push
add
sbb
xlat
xchg
mov
pop
retf
lods
out
add
iret
jbe
mov
push
repz
mov
adc
add
pop
(bad)
ins
out
rcl
sub
pop
dec
xchg
push
jge
loop
xor
popf
adc
sub
bndldx
add
xchg
pop
ret
fwait
mov
rol
pop
xor
xor
push
pop
jmp
ins
push
call
pop
and
sub
sbb
jbe
pop
ins
dec
mov
pusha
mov
js
mov
clc
mov
aaa
test
es
jp
loope
push
retf
mov
sbb
shl
fsubr
cmp
or
xor
push
xor
pop
jecxz
sbb
pop
cmp
mov
test
mov
test
and
xor
fs
cmp
inc
aad
stc
ds
pop
sbb
cwde
mov
xchg
mov
cmp
inc
cmp
sub
leave
out
shl
add
les
xchg
inc
or
retf
(bad)
(bad)
mov
and
fcmove
xlat
cmp
fwait
jmp
lods
mov
jb
dec
(bad)
lods
int
outs
inc
or
pop
aad
cmp
xchg
pop
mov
stos
push
mov
sub
dec
idiv
shl
sbb
mov
iret
out
xchg
add
sti
shr
pop
fs
jge
push
out
cmp
das
mov
sbb
rep
dec
shl
sub
in
dec
stos
and
repz
jg
dec
add
cmp
pop
fucomip
sbb
imul
pop
imul
jnp
(bad)
(bad)
mov
push
in
jnp
je
jne
icebp
ds
repnz
jg
arpl
jbe
jmp
aam
mov
sub
adc
mov
push
sbb
push
and
popf
adc
ss
outs
xor
add
add
repnz
mov
mov
and
sti
imul
cld
xor
std
out
std
daa
mov
mov
adc
xor
test
inc
(bad)
icebp
clc
push
pushf
aam
pop
adc
inc
int
push
nop
ins
out
in
out
cmp
cmp
mov
retf
pop
add
sahf
js
jno
hlt
loope
sbb
gs
lds
outs
cs
lahf
mov
sbb
mov
into
mov
dec
mov
out
mov
xor
or
xor
jmp
jp
push
rol
retf
adc
and
mov
sahf
fmul
mov
mov
scas
in
leave
repnz
mov
nop
mov
mov
sbb
(bad)
loopne
fist
fxch
sbb
lds
outs
comiss
in
xchg
test
inc
call
mov
jmp
xchg
shr
retf
pop
sar
inc
sti
cli
sti
add
aam
add
cmps
xchg
xchg
ret
sar
add
dec
xchg
and
(bad)
xchg
(bad)
cmp
arpl
outs
or
int
ins
sbb
sbb
jnp
jne
sbb
imul
dec
or
sub
pop
and
call
ret
pop
shr
cmc
(bad)
xchg
or
xchg
out
loop
es
xchg
sti
cmps
sub
xchg
mov
cmp
popf
jns
pop
int
fstp
dec
jmp
int
cmp
sub
pop
cmp
sbb
push
aam
and
xchg
cmc
jbe
and
stos
dec
clc
sbb
add
push
mov
scas
and
push
ret
mov
repz
in
add
int
jp
sti
out
push
xor
js
pop
out
je
sub
sahf
lds
stc
pop
mov
xor
popf
movs
cmp
pop
inc
repz
xchg
xor
adc
int
shr
sti
sahf
add
bound
jmp
pusha
and
and
inc
(bad)
mov
pop
outs
jg
xor
xchg
or
ds
mov
jns
iret
jae
outs
xchg
adc
cmp
sar
dec
hlt
lods
mov
sbb
mov
imul
push
cmp
(bad)
mov
and
mov
dec
mov
sbb
cmp
push
mov
pop
cmp
pop
dec
push
push
jecxz
mov
mov
sub
xor
or
cld
lea
cmp
sbb
mov
clc
xlat
mov
inc
out
push
sbb
loop
das
add
mov
add
xchg
call
icebp
fstp
pop
push
clc
mov
push
jne
bnd
rol
push
shl
cs
in
stos
dec
dec
inc
pop
sub
mov
arpl
mov
call
cmp
outs
dec
xor
popf
mov
or
sub
aaa
addr16
jmp
push
ds
cwde
fstp
push
mov
jbe
fld
push
cmc
jne
adc
push
ret
push
test
push
gs
lea
test
cwde
mov
mov
sub
inc
inc
jmp
push
push
pop
mov
inc
jns
test
sbb
repnz
sar
sub
jbe
inc
inc
pushf
je
or
imul
dec
loope
dec
shl
sub
popa
es
push
dec
not
lods
movs
cmps
shl
gs
(bad)
out
mov
sub
leave
inc
scas
inc
push
lods
xor
jns
xchg
mov
push
mov
repz
jb
lds
scas
dec
hlt
adc
pop
int
test
out
inc
(bad)
int
in
outs
pop
jmp
jo
push
test
mov
call
iret
or
shl
cmp
std
retf
addr16
or
pop
scas
dec
inc
and
mov
mov
jge
es
push
xchg
sbb
mov
inc
xchg
mov
sbb
mov
sub
leave
bound
cmps
cwde
test
add
subps
movs
fld
lods
inc
dec
aam
xor
repnz
jmp
sbb
call
jge
out
xor
and
inc
retf
out
mov
out
jl
sahf
jns
jbe
icebp
aaa
xchg
or
arpl
mov
dec
pop
fwait
inc
cwde
stos
call
pop
push
popf
pop
mov
popw
pop
mov
push
cmp
inc
mov
mov
adc
rcr
push
adc
sub
adc
inc
pop
fmul
cld
movs
dec
outs
push
retf
xchg
cmp
sahf
(bad)
push
xchg
addr16
push
mov
int3
xchg
xor
(bad)
dec
pop
mov
and
push
cmp
or
mov
ret
dec
add
jbe
and
mov
bound
or
enter
sub
mov
ror
mov
or
imul
stos
mov
shr
out
fistp
add
out
pop
xchg
jbe
pop
fs
mul
sub
jmp
sbb
mov
xchg
pop
lds
ins
sub
into
test
push
lahf
out
arpl
cmp
push
fxch
hlt
retf
cmp
add
rcr
sti
inc
or
cmp
pop
sbb
repz
cwde
mov
loope
stc
in
sub
shl
xor
shr
adc
jecxz
movs
movs
bnd
jb
mov
fldenv
cld
test
push
sbb
loopne
mov
(bad)
inc
push
shl
jmp
and
push
adc
icebp
mov
or
rcl
pop
in
into
(bad)
shl
loope
popa
inc
fimul
imul
jno
xchg
dec
in
jle
dec
mov
repnz
adc
inc
xchg
lods
jb
das
in
cmp
mov
sub
cmps
in
imul
lock
aam
pop
xchg
inc
mul
mov
fiadd
and
movs
fs
mov
test
sbb
xchg
push
fisubr
jp
pop
rep
jl
xor
dec
mov
scas
imul
cmps
mov
mov
sbb
js
mov
mov
xchg
mov
and
xchg
mov
ins
add
dec
jns
push
rcr
xor
or
cmp
sbb
xor
dec
adc
sbb
sub
or
jmp
jmp
dec
je
or
call
inc
dec
inc
nop
sub
and
mov
pop
lock
ror
mov
mov
xchg
ss
int3
aam
sbb
jnp
in
jge
pusha
jmp
std
adc
sub
arpl
retf
adc
test
add
pop
jmp
pop
push
xchg
push
adc
mov
add
push
mul
mov
sahf
mov
retf
push
jecxz
mov
dec
xchg
mov
call
retf
xchg
dec
inc
(bad)
mov
jbe
fidivr
stos
stos
test
hlt
cmps
sti
xchg
mov
add
xchg
and
cmp
pop
inc
mov
jle
rcr
inc
stos
dec
pop
imul
loope
adc
add
dec
icebp
and
enter
push
mov
mov
fstp
ret
daa
call
stc
or
mov
sbb
inc
imul
in
pop
cld
add
mov
mov
fs
mov
dec
or
or
xchg
adc
ins
add
(bad)
push
ins
push
add
ja
push
cmp
lods
rol
mov
jmp
sub
xor
test
pop
push
loope
aam
adc
sbb
mov
xchg
push
aad
sub
lods
sub
sub
(bad)
fimul
cmp
mov
fxch
jmp
add
shl
loop
inc
(bad)
jmp
jge
ds
out
lock
in
jmp
ret
add
enter
cmp
inc
push
iret
jge
push
retf
mov
dec
xchg
adc
cmp
jnp
mov
fiadd
enter
stc
mov
inc
clc
mov
jno
ret
mov
push
jno
pop
shl
jb
scas
adc
into
jbe
outs
xchg
xchg
adc
push
push
xor
push
jecxz
push
idiv
push
push
test
test
cmp
and
sbb
xor
addr16
jae
pop
jae
sti
add
stos
add
sub
mov
in
sbb
test
jne
(bad)
xchg
jp
or
xor
adc
mov
xchg
std
mov
call
fmul
cmp
push
lock
scas
jecxz
out
imul
xchg
sub
add
or
fld
xor
(bad)
fcmovu
leave
and
(bad)
mov
lods
loope
ds
xchg
movs
dec
mov
sub
mov
inc
ss
push
add
inc
daa
movs
rep
jne
call
ret
adc
nop
test
fcmovnbe
sti
outs
mov
xchg
cmc
inc
mov
jg
nop
mov
fucomi
dec
imul
es
dec
sub
jo
mov
mov
pop
mov
xlat
cmps
sub
mov
popf
fld
mov
cmp
mov
xchg
(bad)
mov
and
outs
in
jne
push
push
pop
outs
cmc
in
inc
ds
mov
jl
cwde
cmp
jmp
std
dec
pop
jp
mov
stos
idiv
pop
(bad)
sbb
fadd
mov
fild
push
dec
or
cmp
cs
cmps
repz
(bad)
jl
pop
mov
jnp
aad
xor
cmps
fwait
inc
ins
sub
pop
pusha
xchg
cmp
push
jge
test
xchg
ins
shl
arpl
dec
jl
ds
shl
pop
or
push
out
retf
lods
mov
adc
jbe
jge
sub
pop
pop
ins
pop
scas
addr16
dec
(bad)
fsubr
into
mov
jnp
xchg
in
jecxz
clc
jg
or
ret
jo
fnsave
stc
pop
sub
pop
pusha
jb
cmp
adc
jecxz
xchg
icebp
sti
add
pop
pop
push
jnp
outs
sbb
xor
sub
pop
xor
popa
push
int3
fild
jne
ror
mov
and
popa
je
xor
ja
(bad)
adc
cmps
mov
or
iret
cmp
shl
sbb
mov
dec
sub
jns
lods
mov
sub
adc
sbb
imul
out
inc
and
movs
adc
icebp
test
sbb
sbb
or
mov
cli
jl
mov
xor
mov
jle
int
int3
jns
sbb
jl
std
pop
jb
movs
not
jmp
sti
adc
or
stc
dec
fcomp
mov
retf
push
sbb
add
mov
cmp
scas
ins
add
mov
mov
fld
or
es
jge
xchg
dec
jp
popf
xor
mov
pop
xor
jb
aas
xlat
xor
or
test
pop
pop
xchg
daa
mov
pusha
cmps
xor
jecxz
cld
hlt
into
cdq
or
push
dec
jnp
(bad)
out
cmovl
daa
fcom
call
push
and
icebp
jg
push
cld
mov
test
sub
loop
ror
bound
pop
adc
enter
rol
cmp
sbb
inc
mov
adc
cmp
data16
xchg
jp
fwait
mov
es
jp
jnp
mov
xchg
addr16
inc
or
je
jo
xchg
shl
imul
inc
mov
test
or
cmps
rol
hlt
xor
imul
aaa
xor
sub
mov
dec
rcl
jmp
jno
lock
out
aam
loopne
test
sti
sbb
sahf
pushf
xchg
inc
int3
mov
push
cmps
stos
jmp
pop
xchg
outs
mov
adc
(bad)
in
push
(bad)
dec
jb
xor
js
iret
test
xchg
cmps
mov
scas
fist
imul
jmp
xor
push
loope
stos
sti
xor
popfw
inc
popf
adc
sub
mov
int
jo
call
les
stos
mov
lock
pop
test
mov
lock
xor
repnz
xchg
lahf
popf
arpl
jmp
add
inc
sti
pop
ret
inc
ins
jmp
ja
and
cs
xlat
xchg
out
mov
xchg
sub
cwde
stos
sub
scas
add
sbb
(bad)
push
mov
xchg
pop
mov
out
push
jecxz
shl
jo
shl
dec
sar
daa
jmp
or
push
pop
nop
ficom
test
test
into
scas
mov
xor
loop
or
jmp
pop
jmp
push
int3
pop
mov
stc
cmp
adc
mov
enter
retf
push
dec
pop
mov
(bad)
leave
jle
or
xor
adc
icebp
jmp
test
sub
mov
pop
aad
(bad)
in
sub
aaa
addr16
jg
rcr
pop
pushf
ja
jl
sbb
or
hlt
dec
xor
lahf
mov
int
jge
pop
pop
mov
imul
adc
aas
pop
sub
repnz
jecxz
or
iret
cmp
lock
stc
inc
div
lods
push
jmp
test
call
dec
push
inc
test
or
stos
pop
inc
sub
lock
jmp
adc
ss
xchg
ret
push
mov
das
aas
xor
adc
nop
dec
ja
xchg
jge
ins
mov
ja
xor
popa
pushf
add
sbb
shl
pop
in
(bad)
aas
sbb
rol
mov
mov
aas
xchg
pop
(bad)
loopne
inc
cmp
(bad)
sbb
outs
push
test
pop
add
scas
arpl
scas
pop
or
add
(bad)
pusha
mov
pop
mov
cmp
jae
mov
inc
aaa
in
jb
xor
adc
cmp
je
cmp
inc
scas
fs
cmps
or
shr
push
xchg
jb
cmp
mov
shl
mov
and
nop
ficomp
mov
loopne
call
mov
lds
enter
loopne
(bad)
mov
mov
pop
je
bound
ret
(bad)
fdivp
xor
xchg
dec
mov
imul
sahf
sbb
push
test
gs
js
cwde
movs
in
push
stos
push
dec
in
out
pop
(bad)
or
jg
mov
or
or
pop
ins
shl
popf
pop
xchg
add
push
nop
ins
or
jo
jno
mov
iret
and
nop
mov
cmp
push
sbb
or
xchg
mov
imul
jl
das
dec
sbb
mov
push
in
ins
retf
je
adc
aad
mov
adc
neg
mov
cmp
inc
and
mov
dec
pop
mov
icebp
call
stc
outs
fistp
std
in
(bad)
arpl
mov
adc
push
and
push
mov
xor
mov
ins
or
inc
movs
mov
fiadd
dec
(bad)
adc
cli
xchg
(bad)
xor
pop
ror
aaa
ins
mov
sub
ins
xchg
retf
push
addr16
sbb
(bad)
pop
lods
or
xchg
xor
pop
push
test
mov
lea
dec
mov
popf
jno
jle
jae
cdq
je
faddp
mov
pop
fcmove
das
push
jmp
mov
cmps
or
mov
movs
mov
stos
ret
dec
es
and
(bad)
stc
imul
fsubr
pcmpeqw
push
call
sbb
dec
or
xchg
cmp
pop
or
inc
ret
jmp
aam
jecxz
mov
pushf
mov
dec
mov
enter
adc
xchg
cmp
push
pop
jecxz
inc
or
mov
das
fnstsw
mov
cmps
sbb
test
and
ret
inc
mov
mov
in
mov
push
test
push
jo
cmp
(bad)
test
xor
pop
fisub
in
ins
add
cli
xchg
cli
cmp
stc
mov
mov
pop
lods
out
sti
xor
cdq
test
loope
ds
sub
loopne
das
das
cmp
and
mov
mov
call
jmp
xor
mov
int
sub
std
pushf
in
pop
out
pop
xchg
cwde
push
daa
into
xlat
mov
jne
mov
sti
(bad)
js
mov
out
add
jnp
sbb
jg
movs
jne
out
add
mov
test
js
and
lahf
xchg
aad
scas
hlt
mov
add
sbb
push
in
sahf
pop
push
sti
adc
mov
inc
shl
push
xchg
inc
inc
leave
mov
arpl
add
scas
jmp
jg
iret
imul
sahf
sbb
pop
mov
rcr
inc
scas
inc
cmp
lock
enter
xor
imul
into
mov
pop
adc
inc
sbb
xor
dec
into
inc
aas
ret
ja
sub
jno
je
stos
jmp
mov
mov
xchg
fisubr
(bad)
popa
fcmovb
rcr
js
jbe
mov
rcr
dec
jle
cmp
cmp
sub
addr16
aam
int3
repz
rcr
or
dec
push
pop
dec
inc
jns
fucomip
mov
(bad)
cdq
xor
neg
xlat
lods
fwait
(bad)
jmp
jg
mov
retf
or
(bad)
test
out
xchg
ret
pop
dec
mov
xchg
imul
jecxz
fld
mov
xchg
push
aaa
js
xchg
out
int
movs
pop
iret
outs
or
or
or
sbb
das
pop
adc
cld
stos
mov
xor
and
jecxz
int
cli
push
imul
(bad)
retf
jmp
sbb
fstp
call
mov
call
push
ret
cmp
mov
mov
rcr
aad
ins
hlt
test
lahf
mov
std
fisttp
pop
lock
inc
test
pop
jmp
or
adc
daa
into
test
sub
mov
popa
sub
add
push
lds
cld
jmp
scas
sub
xor
inc
mov
test
fwait
mov
rcr
loop
pop
jg
in
fimul
push
out
pop
popf
and
sbb
and
sbb
mov
fwait
xor
ss
inc
lods
sub
pop
lods
pop
sbb
dec
mov
bound
loope
pusha
xchg
jle
pop
sub
or
push
add
pop
into
scas
xchg
xchg
push
add
push
or
in
inc
fisub
retf
rcl
mov
stos
retf
outs
mov
mov
push
ficom
jp
mov
inc
jmp
inc
pop
xor
jno
mov
mov
pop
dec
add
xchg
gs
adc
xchg
cs
jmp
jb
xor
or
sub
jge
ja
pop
das
or
add
jp
mov
or
xchg
mov
mov
mov
push
iret
ret
and
sbb
mov
(bad)
mov
pusha
mov
out
dec
in
mov
data16
or
iret
inc
dec
push
inc
popa
loope
bswap
int3
jp
inc
xor
jg
(bad)
sbb
pop
test
sbb
stos
xchg
mov
inc
push
lock
cmp
lea
or
inc
pop
xchg
je
sub
push
fsubr
mov
pusha
cwde
xchg
fadd
push
aaa
aad
pop
leave
imul
ss
mov
sub
push
mov
mov
jno
cmp
xor
push
mov
repz
or
xchg
or
repnz
int3
jle
dec
add
inc
imul
sub
add
sub
ins
inc
test
fcom
inc
xor
mov
xchg
pop
nop
xchg
lods
inc
add
cli
dec
out
popf
stos
pop
pop
and
je
fldenv
push
adc
mov
test
imul
add
das
xor
or
and
xchg
add
dec
test
sbb
mov
cmp
jns
or
push
fistp
push
pop
repnz
xor
lea
lahf
or
add
mov
mov
jmp
adc
dec
jmp
jmp
xchg
das
scas
mov
test
xor
lock
dec
xchg
scas
cs
cdq
dec
hlt
sbb
ins
jle
dec
xchg
push
mov
inc
push
pop
adc
xchg
outs
pop
jb
sbb
xchg
(bad)
dec
add
shl
imul
adc
mov
adc
jmp
or
fs
test
fdiv
into
push
sub
in
adc
pop
pop
adc
mov
pop
adc
call
mov
push
or
and
inc
and
push
xor
retf
mov
and
cli
out
xchg
pop
fld
and
and
mov
scas
inc
iret
inc
ins
neg
adc
cdq
mov
jmp
xlat
and
ja
mov
(bad)
push
stos
(bad)
sub
pushaw
cmc
or
xchg
ss
test
inc
jmp
mov
ja
outs
mov
and
ret
inc
lahf
mov
lods
jns
sub
xchg
loop
out
outs
pop
lods
jge
sub
cmp
fadd
iret
mov
xchg
mov
loope
xchg
or
pop
fisub
scas
mov
jmp
sub
sahf
mov
hlt
shl
jge
xchg
fsubp
shrd
out
pop
cmp
outs
sub
movs
dec
test
fdivr
sub
adc
imul
push
fisub
jp
push
push
pop
out
mov
pop
pop
pop
(bad)
out
push
push
mov
push
mov
sbb
popa
movlps
jmp
out
enter
dec
ss
mov
ret
mov
mov
scas
mov
jge
sar
push
cmp
jl
mov
xchg
mov
add
push
ins
jns
xchg
or
dec
arpl
(bad)
add
mov
icebp
inc
adc
out
xchg
mov
jns
lods
rcl
cmps
jp
add
sahf
add
inc
add
dec
pop
add
popa
das
inc
(bad)
(bad)
out
cmc
xchg
ret
cmp
mov
push
bound
add
xor
sub
pop
stc
shr
mov
pop
sbb
bound
mov
inc
leave
lea
and
dec
icebp
fisub
jae
sbb
test
xor
cmps
neg
cmp
jne
dec
add
imul
jne
xchg
and
dec
daa
dec
inc
or
ret
repnz
fs
gs
dec
xor
pop
scas
or
addr16
hlt
sbb
dec
or
add
pushf
sub
aas
cmp
fcomp
mov
adc
cmp
inc
push
dec
xor
push
dec
adc
mov
fld
ret
(bad)
cmc
push
and
lahf
mov
xor
sbb
sub
cld
clc
adc
mov
dec
cmp
or
push
mov
cmp
dec
pop
mov
jno
cmc
sub
test
push
or
jmp
mov
push
stc
or
into
dec
pop
or
mov
fisub
addr16
xchg
cmps
rep
jnp
sub
sbb
mov
arpl
inc
xor
cs
jmp
icebp
(bad)
lock
adc
add
int
or
dec
lods
repnz
jmp
aaa
push
jnp
inc
les
stos
jns
xor
cli
jno
xor
add
xor
and
sahf
xor
ds
jecxz
fwait
pop
int
in
push
mov
mov
ja
cdq
xchg
push
add
pusha
je
retf
sbb
arpl
add
mov
ins
das
jae
out
in
hlt
push
outs
inc
xor
test
and
psubd
sub
mov
mov
pop
call
add
add
pop
mov
or
cmp
xor
push
nop
jle
out
pop
mov
sbb
shl
cs
push
es
push
call
test
jg
or
jo
cmp
mov
idiv
out
push
fs
or
push
mov
repnz
push
xchg
mov
adc
div
call
lds
rcr
add
add
popf
push
lock
movs
fsub
cmp
gs
outs
and
xor
lahf
and
lock
das
out
call
int3
addr16
mov
dec
outs
(bad)
cmp
sbb
push
cmp
inc
mov
sub
push
ret
ret
add
sbb
cmp
or
jae
test
(bad)
(bad)
ret
fmul
push
xchg
aam
data16
in
fidivr
jbe
add
adc
pop
inc
rcr
lea
and
in
out
rol
sbb
repnz
lds
sbb
cmps
xchg
mov
(bad)
aam
sub
daa
inc
(bad)
fimul
(bad)
hlt
out
sbb
mov
mov
mov
lock
lods
fisub
inc
push
popa
lahf
stc
sbb
div
mov
mov
dec
stc
and
mov
sbb
loope
sbb
aad
loopne
push
jmp
out
pop
jecxz
inc
push
loop
cmps
xor
call
repz
aad
inc
int
push
push
xchg
push
jmp
(bad)
jbe
dec
in
sub
imul
adc
sbb
mov
xchg
imul
cld
add
mov
sub
dec
cs
inc
in
add
clc
aaa
sbb
fstp
xchg
or
pop
cmp
xor
push
out
pop
jne
push
dec
push
sbb
stc
inc
fdiv
fstp
repnz
sub
xchg
cmp
out
inc
jge
and
mov
test
pop
and
fidivr
xor
add
popf
sahf
inc
fild
xchg
hlt
pop
rol
(bad)
movs
addr16
adc
cs
lds
out
test
jl
pop
loop
ret
sbb
xlat
mov
push
ss
xor
shr
and
mov
cmp
push
fild
jae
lods
or
xor
mov
mul
push
cmp
dec
pop
pop
mov
out
sbb
das
sbb
sbb
xor
and
inc
push
lea
aam
popf
cs
mov
fwait
(bad)
out
mov
loop
or
or
shl
adc
pop
fwait
or
push
cmp
ret
pop
adc
scas
xchg
xchg
stos
sbb
adc
cmp
popa
jae
(bad)
mov
movs
mov
call
inc
and
jae
cli
mov
test
arpl
jae
pop
sbb
cmp
push
mov
gs
push
mov
pop
add
mov
ret
push
ror
xchg
jae
mov
xor
push
and
add
retf
xchg
jle
loope
cs
aam
jecxz
xor
xor
dec
mov
int3
jl
push
xchg
cmp
pop
dec
xchg
jbe
ret
mov
pop
ret
and
mov
out
cmp
mov
sbb
xchg
popa
mov
cmc
lock
sbb
push
movs
(bad)
pusha
sub
push
pop
jp
or
imul
mov
push
sub
stos
jb
ror
xchg
out
in
shr
add
cmp
add
mov
inc
mov
stos
fcmovne
or
mov
inc
stos
repnz
add
add
lahf
fst
imul
mov
js
mov
cmp
dec
hlt
jns
fs
fistp
mov
mov
pop
push
mov
scas
clc
lea
retf
add
jo
jecxz
(bad)
addr16
icebp
jmp
pop
xchg
stos
aad
push
aaa
loope
lea
nop
into
push
(bad)
cld
lock
and
sbb
push
bound
test
dec
add
and
and
outs
push
mov
ins
or
sub
jmp
adc
jle
popf
ss
dec
cmc
test
imul
sbb
adc
push
mov
mov
xchg
(bad)
mov
mov
and
sbb
cmp
push
cmp
fwait
cmp
lock
ficomp
or
jge
mov
popf
imul
repz
shl
mov
add
cmps
repnz
adc
sub
ins
(bad)
test
test
dec
getsec
xor
and
adc
add
(bad)
stos
aam
pop
jb
cmps
xchg
aad
sub
test
adc
adc
and
push
add
push
(bad)
jge
xchg
test
sbb
mov
jae
not
int
lahf
sub
xchg
imul
cli
ja
xlat
js
jl
push
in
lock
aas
test
int
aaa
jmp
jge
sbb
aam
jns
or
mov
data16
pop
xchg
add
fiadd
into
pop
mov
sar
and
dec
pusha
sub
call
add
push
or
(bad)
and
je
mov
jle
jle
out
out
sub
scas
mov
imul
stc
dec
dec
fsub
cld
or
pop
pop
adc
shl
mov
scas
mov
enter
test
or
add
fild
das
add
nop
push
mov
xchg
and
inc
push
xchg
lock
adc
sub
pop
ins
ja
mov
dec
mov
loopne
cmp
into
pop
fimul
bound
adc
adc
dec
mov
pop
xor
lods
fild
movs
and
or
mov
(bad)
lock
nop
ds
das
xchg
aad
mov
add
shr
stos
or
push
fdivr
movs
jg
js
sbb
mov
push
push
mov
popa
scas
mov
sub
(bad)
aas
adc
mov
push
dec
jmp
jo
adc
inc
push
cdq
jne
or
xor
mov
in
(bad)
sbb
xor
repz
icebp
test
and
jae
push
(bad)
sub
idiv
retf
sbb
mov
or
fmul
lds
fldenv
jae
xchg
icebp
cli
jmp
fs
mov
in
mov
mov
ret
and
dec
das
fnstcw
xchg
imul
inc
and
loop
jo
mov
mov
arpl
cmp
cld
jb
sbb
or
mov
ja
mov
mov
or
add
push
pop
sub
hlt
push
stos
in
xchg
ret
push
int3
inc
out
mov
popf
das
cmc
cmp
pop
rol
sbb
aas
push
mov
and
(bad)
jae
mov
lods
mov
and
mov
jl
mov
dec
xlat
fisttp
mov
cmps
dec
push
pop
and
jl
pop
pop
ficom
outs
stos
mov
jg
dec
loop
ins
(bad)
xchg
and
stc
jno
nop
sub
movs
dec
mov
scas
in
cwde
stos
cmp
mov
jno
pop
fsub
ficomp
mov
dec
dec
mov
loop
popa
sti
test
enter
movs
popa
xchg
jmp
sub
cmp
push
mov
jne
xchg
pop
leave
(bad)
pop
les
mov
adc
out
pop
and
mov
jbe
and
sti
ror
xchg
add
add
pop
in
jmp
sbb
inc
dec
mov
cmp
shl
mov
mov
scas
int
call
xor
cmp
and
rcr
test
xchg
outs
pop
jns
jecxz
mov
fmul
xor
adc
sbb
in
adc
lds
and
movs
cmp
mov
sub
pop
test
mov
in
pushf
cmp
nop
cmp
and
ret
adc
pop
mov
cmp
fnsave
jnp
add
in
and
cmp
imul
xor
in
pop
jg
out
cmp
inc
mov
mov
xchg
out
lahf
enter
dec
stos
jle
xchg
test
in
and
jl
pcmpeqd
ins
jb
sub
or
nop
fldlg2
mov
cmp
ins
push
xchg
mov
mov
mov
shl
(bad)
lea
push
xchg
aad
jae
cli
nop
pop
mov
inc
sbb
sar
shr
sbb
imul
icebp
popf
mov
fldenv
mov
call
sub
(bad)
stos
test
shl
aas
scas
sub
test
fbstp
sbb
dec
imul
dec
fild
xchg
pop
aam
mov
enter
inc
add
mov
sti
pop
sbb
xchg
in
mov
in
xor
test
jns
mov
inc
push
sub
push
mov
pop
or
cmp
mov
adc
aas
push
and
rol
lahf
(bad)
pop
or
mov
outs
aad
jno
sbb
loopne
lock
test
mov
jne
ss
lock
pop
or
mov
shl
imul
xchg
xor
add
daa
push
(bad)
scas
mov
jno
jmp
jns
mov
dec
loope
xor
rcr
and
cmps
jl
dec
cmps
add
jne
jmp
pop
mov
sub
sbb
sbb
out
retf
jmp
test
(bad)
cmp
xor
pop
sbb
(bad)
lds
cmp
nop
jne
sub
bound
mov
loop
xor
movs
(bad)
sar
div
pop
add
or
das
mov
sahf
or
xchg
pop
jecxz
dec
cli
fiadd
inc
fidivr
mov
sub
dec
(bad)
xchg
cs
jmp
mov
test
in
enter
adc
lds
cmc
mov
imul
adc
loopne
iret
jb
xor
mov
jp
cmp
stos
hlt
nop
push
mov
clc
mov
push
sub
pop
add
inc
xchg
pop
mov
in
pop
xchg
icebp
icebp
mov
loopne
sub
xor
add
and
mov
cmps
mov
arpl
ret
pop
lea
pop
xor
xor
sbb
xchg
test
in
dec
pop
fsubr
stc
cmp
mov
pop
shld
call
out
out
sbb
pop
jne
popa
in
lock
test
stos
les
fstp
add
pop
pop
jecxz
sbb
push
inc
ret
dec
or
pop
xchg
mov
in
sbb
xor
lahf
sbb
nop
lahf
cmps
xlat
mov
(bad)
push
or
and
jmp
sub
sbb
sbb
retf
in
sub
jae
xor
mov
xor
hlt
ins
clc
sbb
cli
and
mov
jns
je
lock
push
pop
pop
in
xchg
fsubrp
in
mov
push
and
xchg
rcr
test
xchg
xchg
test
addr16
sub
stos
cmp
xor
mov
xor
imul
adc
push
sub
jnp
test
popf
rol
lods
lds
pusha
fst
lahf
adc
jno
rol
push
cli
xor
mov
mov
xchg
iret
sbb
retf
cmps
sbb
popf
(bad)
mov
shl
mov
loop
lods
mov
jae
popa
repnz
loop
stos
hlt
mov
dec
jge
int
clc
push
jo
mul
adc
ins
or
xchg
jg
or
in
and
mov
mov
aas
outs
fwait
repz
inc
ss
jl
pop
outs
push
jg
pop
stos
(bad)
cmps
or
sbb
in
push
xor
lods
add
out
mov
cmp
or
push
push
pop
stos
xchg
ins
das
outs
dec
call
jo
pusha
sbb
jnp
jp
sbb
pop
aas
imul
lea
imul
sti
push
or
sbb
mov
jg
cmps
sub
cmp
push
dec
sub
jecxz
out
ret
fld
push
mov
xchg
xchg
jmp
and
movs
xlat
bound
mov
test
jp
adc
(bad)
mov
in
sahf
push
xchg
mov
inc
rcr
jmp
div
cmp
xchg
mov
jbe
mov
clc
inc
sbb
into
ret
iret
inc
lds
push
dec
aad
sbb
arpl
inc
sub
cmp
out
pop
or
mov
stos
jmp
dec
lock
scas
aad
test
test
(bad)
push
sbb
fs
sub
js
pop
fistp
dec
imul
inc
out
xchg
push
sbb
jnp
push
enter
add
add
push
stos
out
adc
mov
repnz
cmp
adc
pop
int
loope
jae
int3
add
pop
add
stos
retf
jbe
mov
ret
xchg
inc
mov
sub
push
jb
ins
push
and
mov
test
pusha
pop
and
push
aas
ret
cmp
adc
sbb
and
stos
les
xchg
and
cmp
std
pop
dec
add
add
mov
inc
and
xchg
or
pop
or
or
stos
rcr
sbb
repnz
loope
dec
mov
dec
dec
dec
(bad)
adc
(bad)
cmp
or
(bad)
lock
mul
or
push
mov
jae
cld
call
repz
xor
xchg
cli
jae
mov
stc
mov
push
pop
test
and
mov
or
push
pusha
xor
add
(bad)
cmp
jo
(bad)
xor
push
jae
dec
shl
add
cdq
mov
stos
cwde
test
push
in
pop
push
ja
outs
pop
push
and
and
mov
xchg
pushf
repz
jmp
sbb
cmps
outs
(bad)
call
lea
idiv
sti
in
sti
xchg
neg
cwde
aaa
mov
aad
adc
sbb
cli
js
js
repnz
and
jmp
mov
inc
sub
xor
cwde
adc
in
cmp
(bad)
lods
bound
sub
iret
jg
inc
or
popf
mov
lahf
jle
mov
sti
daa
dec
loope
or
mov
leave
int
xor
sub
sahf
jns
jg
jecxz
xchg
xlat
mov
std
in
pop
movs
outs
or
(bad)
in
cmc
jo
movs
test
xchg
pop
les
xrelease
cmp
mov
scas
pop
mov
out
fs
xor
mov
shr
push
xor
jl
push
mov
inc
and
(bad)
enter
(bad)
in
mov
pusha
iret
adc
out
pop
push
jmp
(bad)
out
(bad)
sbb
mov
in
cmp
inc
and
in
adc
xor
nop
ret
xchg
dec
push
cmp
movs
jno
xchg
rol
loop
sbb
jecxz
mov
add
pop
jge
xor
clc
test
mov
fwait
out
test
test
fisttp
setno
mov
lock
test
jmp
int3
outs
loop
xor
mov
sub
push
push
js
clc
and
sbb
(bad)
pop
mov
adc
jp
ret
xchg
mov
add
push
adc
into
dec
lock
fiadd
fcom
sbb
push
jno
or
in
cs
in
repz
jl
test
mul
enter
cli
inc
pop
leave
mov
out
rcr
outs
rol
mov
rol
ret
adc
jne
jbe
push
(bad)
sub
mov
ficom
lods
mov
shl
pop
in
(bad)
adc
call
add
cld
mov
rcr
mov
add
jnp
or
jl
xchg
fcom
mov
or
not
mov
(bad)
aam
mov
jp
dec
(bad)
inc
in
mov
std
push
mov
cmp
scas
retf
mov
push
push
test
inc
mov
pmaxsw
jg
arpl
adc
aad
xchg
sub
add
xor
or
sar
bound
out
dec
pop
(bad)
daa
dec
dec
aad
jb
xchg
neg
setge
and
jne
lahf
imul
adc
dec
xchg
shl
test
popf
jo
movs
xchg
mov
mov
fwait
and
push
fdiv
sti
inc
call
(bad)
jmp
fs
jns
sahf
jl
mov
pop
sbb
mov
and
cld
xchg
addr16
into
pusha
pop
in
mov
aam
dec
dec
mov
rcr
cmp
call
pop
mov
fisub
retf
inc
jo
xor
sub
xor
jecxz
std
pop
mul
dec
cmps
jae
pushf
lock
xor
dec
sar
out
lahf
cmp
scas
adc
and
pop
cld
into
sbb
pop
addr16
stc
mov
jno
sub
nop
push
(bad)
popa
push
out
int3
int
repnz
mov
(bad)
lods
mov
les
arpl
dec
push
and
fwait
and
or
push
fisub
sbb
push
stos
and
push
xor
mov
or
mov
jmp
push
adc
imul
in
push
aaa
rcr
mov
mov
adc
inc
out
mov
aas
xor
sub
in
loopne
imul
bound
sti
bound
scas
push
in
xchg
pop
loopne
ficom
push
jge
retf
sbb
dec
ror
or
xor
sbb
sbb
cmps
cmc
jg
test
jns
mov
sbb
call
push
add
xor
loopne
sub
mov
or
hlt
sbb
push
in
cmp
test
mov
or
inc
mov
jge
cmp
sbb
push
inc
ror
setne
nop
fdivr
out
das
push
cmp
outs
arpl
fs
gs
pop
inc
hlt
bound
push
out
inc
add
mov
xor
add
or
adc
retf
aaa
sub
xlat
cmps
push
(bad)
or
retf
out
fmul
neg
pop
scas
retf
pop
fldenv
mov
cmp
pop
dec
sahf
mov
inc
xor
jae
push
cmp
mov
out
cmp
or
inc
jns
fs
scas
iret
jge
aas
mov
movs
and
dec
retf
adc
inc
sbb
jecxz
icebp
mov
inc
inc
adc
push
sub
sar
jl
push
fistp
xor
add
aas
test
imul
test
or
mov
push
mov
xchg
call
sub
(bad)
dec
arpl
inc
add
pop
js
lea
repnz
cmps
aaa
test
adc
fst
arpl
jno
inc
mov
outs
jge
sub
cs
cmp
in
mov
jne
pop
and
dec
pop
cli
pop
sbb
xor
not
popf
js
and
jmp
pop
and
les
jp
lods
push
push
inc
sub
xor
cld
sar
jl
daa
xchg
fimul
and
jmp
adc
mov
push
cmps
push
push
cmp
xor
(bad)
mov
data16
dec
adc
mov
icebp
adc
dec
pop
jl
movs
ja
out
and
es
imul
inc
sub
bound
jp
sub
ds
sbb
jmp
mov
add
pop
test
test
fimul
shr
add
stc
adc
frstor
pop
mov
adc
mov
add
aam
push
lds
rcr
daa
jo
mov
cmp
mov
or
nop
or
sbb
mov
sahf
(bad)
cmp
mov
(bad)
into
call
or
jne
sub
dec
loopne
jl
jge
pop
sbb
test
aaa
mov
fidiv
ret
inc
mov
mov
out
jbe
lds
xchg
dec
push
lahf
fidiv
and
stos
add
fidivr
ret
mov
imul
push
pop
sub
(bad)
call
inc
sbb
jbe
enter
rol
xchg
jge
mov
retf
xor
fmul
xlat
cmp
mov
addr16
mov
push
in
in
xor
ds
or
mov
das
dec
jmp
in
movs
xchg
data16
jmp
xor
xchg
fiadd
cmp
or
imul
pop
or
aam
retf
mov
sbb
push
or
add
outs
mov
and
dec
in
dec
adc
dec
mov
dec
pop
mov
xchg
inc
(bad)
xchg
push
xchg
push
pop
mov
pop
fs
mov
repnz
cmp
data16
push
sbb
and
hlt
and
fst
cld
mov
add
pusha
lods
fsubp
sbb
test
aas
popf
mov
enter
xor
pusha
test
jmp
pop
fdivrp
mov
dec
sti
out
je
push
push
mov
fwait
push
inc
and
adc
adc
push
loopne
sar
retf
lea
jb
test
out
dec
inc
popf
in
(bad)
int3
loopne
(bad)
jb
test
cmps
ret
cmc
mov
jnp
pop
sti
call
daa
outs
jae
sub
(bad)
outs
push
test
jns
push
out
cmc
in
cmp
retf
pop
mov
inc
sub
mov
daa
ja
push
repz
stos
xchg
dec
and
jp
inc
sbb
out
jl
mov
xchg
xor
mov
cmc
cmps
aad
imul
mov
push
jg
enter
mov
loope
adc
dec
cmp
adc
xchg
popf
(bad)
dec
pop
push
mov
lods
rcl
add
into
sbb
mov
or
in
frstor
stos
or
(bad)
dec
scas
adc
jb
das
and
int
push
pop
loope
aad
aam
test
sahf
dec
lods
mov
out
movs
sub
and
lea
mov
stc
cmc
xchg
cmps
mov
js
call
cmp
cmp
push
mov
clc
in
imul
nop
aad
mov
shl
ret
adc
mov
ficomp
mov
and
test
xor
sub
dec
sar
or
xchg
xor
je
sahf
push
outs
pop
out
aaa
or
sbb
div
repnz
push
sub
lahf
xor
daa
movs
pusha
xor
mov
pop
push
push
xor
xchg
js
cmp
(bad)
and
nop
scas
mov
sahf
gs
popa
xchg
xchg
jge
bound
sahf
mov
xchg
ret
mov
xchg
fdivp
cwde
popw
pusha
daa
adc
inc
mov
pop
push
fs
and
xchg
pop
outs
xchg
pop
rol
and
push
push
push
pop
dec
and
and
fsub
fistp
push
ret
cmp
hlt
pop
cmps
dec
xchg
adc
jnp
adc
test
mov
adc
adc
xchg
jp
movs
jns
mov
nop
nop
ret
rcr
iret
pop
test
dec
popf
test
pop
sbb
aas
jnp
rcl
xor
jo
loop
adc
das
inc
jo
pop
jmp
xor
xor
lock
mov
mov
out
pop
and
cmp
out
movs
xor
and
xor
(bad)
add
pop
sub
sub
xlat
cli
or
xchg
mov
sub
fsubr
jmp
out
xor
pop
scas
jl
pushf
inc
aad
sub
jle
mov
pop
jecxz
lods
test
outs
xchg
xor
imul
ins
loopne
pop
or
push
repnz
retf
icebp
outs
mov
out
dec
mov
jmp
neg
xchg
cmps
movs
push
lahf
and
dec
cmp
push
iret
inc
icebp
ja
xchg
mov
cmps
sbb
cmp
ja
cmp
scas
rcl
data16
pop
sub
mov
repnz
mov
cmp
sub
stc
xchg
sti
add
retf
repz
adc
mov
icebp
or
inc
pop
in
mov
leave
jp
das
div
sti
sar
cdq
adc
pop
(bad)
popf
or
loope
sbb
repz
push
pop
jl
mov
cmp
pop
stos
sbb
pop
out
rol
mov
dec
pop
iret
push
call
xchg
mov
inc
push
movs
lods
or
dec
jp
and
ss
add
dec
scas
mov
inc
fistp
repnz
sahf
lods
and
div
mov
aaa
dec
mov
adc
aas
sahf
and
push
sti
push
scas
pop
jmp
cmp
idiv
aas
mov
dec
call
inc
femms
sbb
cmc
cmc
inc
dec
aas
mov
mov
pop
mov
sbb
mov
pop
mov
sbb
daa
jmp
ffreep
mov
(bad)
add
push
jmp
mov
daa
clc
dec
sub
arpl
cwde
div
int3
sub
or
inc
push
fild
jnp
sub
xor
or
stos
sub
pop
scas
fist
std
ds
ror
push
pop
aas
or
jmp
add
clc
push
rcl
out
xchg
mov
enter
mov
xor
out
fstp
and
int3
add
mov
xchg
ja
sub
cmp
out
mov
mov
not
sbb
mov
jns
jp
add
push
lock
inc
pop
dec
shl
push
mov
imul
xchg
rcr
xchg
dec
lds
stc
inc
add
xor
lahf
(bad)
test
outs
sbb
pop
test
mov
cmps
push
ds
inc
mov
aad
jmp
jmp
push
mov
jle
fidivr
in
stc
jo
jmp
(bad)
sub
adc
js
xlat
(bad)
(bad)
fcmovbe
cdq
push
dec
and
aad
stos
repnz
addr16
iret
pop
push
(bad)
cmc
test
cli
ss
test
das
jmp
push
or
in
(bad)
es
dec
jecxz
movs
mov
shl
inc
rcr
mov
outs
jo
add
jns
sbb
push
(bad)
dec
adc
ins
mov
icebp
push
addr16
sub
inc
sar
jl
rcr
adc
pop
and
inc
out
push
push
(bad)
push
ja
jns
jg
lahf
lahf
int3
push
xor
sti
sbb
nop
mov
or
sub
or
dec
jge
or
jl
sub
cmps
sub
shl
in
jmp
out
xchg
pop
ficomp
cld
leave
mov
fwait
push
lock
pop
test
sbb
lea
sub
mov
sub
scas
loop
lods
into
jae
mov
push
lods
mov
mov
inc
(bad)
push
lds
xchg
mov
jle
mov
cdq
(bad)
je
retf
and
movs
pop
test
int
mov
sti
add
cmp
cmp
sar
gs
push
pop
imul
xchg
fs
cwde
int
hlt
clc
fdivr
and
jno
imul
(bad)
cmp
aas
imul
jmp
movs
sub
pop
fldenv
ja
jge
mov
cmc
dec
leave
adc
out
stc
pushf
mov
xchg
jle
hlt
aas
xchg
or
shr
fcom
daa
mov
add
pop
dec
dec
cmp
daa
push
push
int
jmp
retf
pop
pop
(bad)
xor
(bad)
and
dec
fdivrp
popf
inc
xchg
xchg
mov
inc
cmp
add
sub
pop
add
lahf
ins
or
adc
inc
cmc
fistp
ins
push
rcl
mov
ins
scas
sbb
xchg
sub
ja
xchg
pop
mov
sbb
out
adc
push
and
mov
inc
cdq
push
mov
dec
cmps
inc
or
push
cmp
call
mov
jge
adc
retf
inc
cmps
xchg
pop
adc
shr
mov
cmp
jmp
daa
mov
fsubr
mov
(bad)
push
push
mov
cmps
neg
mov
pop
ds
inc
pop
addr16
outs
and
daa
cwde
sub
lds
jmp
xchg
jmp
dec
aad
adc
push
cld
cs
clc
mov
loope
mov
sbb
out
stos
shr
scas
mov
push
ins
pop
push
mov
iret
retf
xchg
test
and
loopne
adc
(bad)
clc
inc
mov
arpl
cmp
outs
add
xor
xchg
xor
std
jp
test
mov
sti
push
mov
ins
test
es
or
es
call
pop
push
imul
jg
mov
frstor
nop
cmp
jle
cmc
popf
arpl
pop
dec
cmp
(bad)
mov
clc
es
(bad)
add
pusha
pop
add
lea
push
pop
push
sub
imul
mov
xchg
push
jp
shl
aam
call
inc
clc
jns
sbb
xchg
xor
push
xchg
out
push
(bad)
mov
push
xchg
or
pop
mov
ret
ficomp
add
add
fld
inc
pop
push
mov
mov
scas
jp
(bad)
test
(bad)
nop
push
jmp
ins
addr16
cmp
pushf
jo
xchg
push
push
repz
es
ins
std
cld
mov
imul
mov
mov
jge
lea
ror
imul
pop
and
pop
(bad)
mov
mov
sbb
mov
xchg
xor
adc
pop
sbb
jno
leave
adc
sub
dec
jle
jle
pop
mov
clc
and
das
sbb
cwde
push
bswap
imul
mov
outs
pop
into
sti
jle
cmp
sbb
jo
mov
hlt
pushf
stos
mov
inc
arpl
xlat
test
mov
push
ret
add
addr16
cmps
cdq
outs
test
jns
sub
push
scas
fiadd
pop
adc
dec
adc
ror
cmp
shl
cmp
test
mov
adc
jmp
xor
iret
add
fwait
dec
(bad)
jns
in
rol
stc
dec
idiv
jmp
mov
je
cmp
mov
ficomp
sub
iret
mov
popa
cdq
push
cmp
mov
sbb
push
je
lods
in
dec
cdq
cmp
xchg
adc
int
mov
add
push
or
icebp
and
cmp
(bad)
imul
jnp
lea
and
cmp
(bad)
xor
mov
jge
lahf
mov
add
out
xchg
pop
aad
imul
neg
ret
and
sbb
xor
jnp
fisubr
(bad)
mov
fwait
addr16
xor
xor
add
xchg
push
pop
(bad)
or
mov
call
inc
jnp
inc
pop
push
jle
aam
imul
or
and
mov
into
lds
inc
jle
cmps
pop
pop
out
xchg
lods
inc
jecxz
lods
sbb
or
jne
cmc
retf
jbe
sbb
xchg
mov
cli
scas
mov
imul
push
or
addr16
cmp
dec
sar
out
inc
shr
hlt
and
lahf
add
adc
rol
fwait
jnp
ficom
outs
popa
stc
shl
and
push
in
shl
xchg
push
xor
pop
sbb
cmp
cmp
add
pop
or
cmovge
test
push
mov
ins
(bad)
(bad)
lock
sahf
push
xor
lock
sbb
and
mov
fiadd
in
mov
aam
sbb
pop
jl
push
mov
movs
add
(bad)
push
aad
retf
cli
cmp
sub
sahf
test
fwait
pop
xor
daa
mov
lods
xchg
dec
jae
inc
mov
hlt
add
jo
adc
dec
lock
mov
jecxz
pop
jae
cmps
cmp
jle
int3
aam
mov
aas
inc
sbb
pop
push
call
push
movs
out
test
mov
and
pop
add
pop
lock
je
jne
push
lds
and
in
jg
aam
fnsave
leave
mov
fadd
in
mov
jb
or
mov
enter
xchg
xor
lock
jecxz
and
cwde
jp
xchg
mov
push
pop
pop
sbb
xchg
jecxz
cs
push
cmc
jge
cmp
les
inc
jbe
jnp
jns
fiadd
mov
cdq
das
out
dec
jmp
enter
fld
imul
nop
stc
outs
jo
std
push
jno
pop
mov
cld
or
loope
sbb
push
mov
inc
mov
xlat
xor
nop
pop
aad
pop
fmul
rcl
(bad)
xchg
pop
(bad)
jmp
push
sbb
xchg
fnsave
repz
lock
mov
loope
mov
mov
addr16
fisub
lds
stos
jl
mov
mov
dec
in
lods
and
jp
das
xor
fwait
push
xchg
push
fld
popf
add
stos
and
push
and
jbe
scas
inc
mov
pop
hlt
pop
dec
dec
mov
aas
aas
pop
pop
ja
fsubr
add
fsubr
fisub
arpl
retf
push
hlt
nop
cmc
sub
cdq
mov
icebp
aaa
iret
dec
pop
sub
test
(bad)
add
xchg
and
pop
sub
cmp
push
inc
sbb
(bad)
cmp
xor
jbe
cmp
js
dec
jbe
(bad)
push
out
stos
mov
popf
je
jmp
out
fisubr
(bad)
ror
cdq
push
xor
pop
loop
jmp
inc
pop
sbb
jno
pcmpgtb
jmp
cmc
adc
cmp
push
xchg
or
cli
pushf
xor
cmp
repz
and
sub
cmp
stc
xor
jp
stos
call
mov
xor
pop
mov
ds
daa
inc
or
jb
(bad)
push
mov
imul
pusha
fdivr
sub
cmp
xchg
dec
mov
inc
mov
dec
mov
mov
iret
mov
popa
dec
xor
retf
jge
lods
add
xor
xor
and
imul
add
push
xor
(bad)
fmul
lods
retf
push
(bad)
aad
in
xor
xchg
add
jl
movs
in
or
adc
or
mov
das
mov
mov
fidiv
(bad)
data16
rcl
or
pop
mov
adc
data16
dec
inc
jle
cmps
ret
outs
or
sbb
or
push
cmp
inc
or
into
test
leave
je
jg
or
out
push
push
pop
xor
adc
aad
cmp
in
adc
cmp
jo
sub
mov
sbb
aad
jge
shl
fadd
mov
retf
mov
mov
lea
out
fiadd
arpl
cmc
mov
inc
out
js
dec
std
xor
dec
add
cmps
mov
test
inc
mov
das
arpl
int
sub
and
sbb
mov
js
and
cmp
hlt
or
mov
ja
adc
out
mov
cmp
mov
ins
xchg
dec
int3
pop
sbb
sub
mov
or
mov
pusha
mov
sub
fdiv
xor
cmps
mov
sti
mov
sti
lds
aaa
pop
in
int3
xor
adc
jge
loop
jl
add
rcl
jmp
push
jmp
mov
sbb
sub
inc
les
pop
lea
add
ror
lods
int3
loop
xor
add
add
popa
sub
mov
pop
fidiv
es
cmps
jg
int
cmp
mov
mov
push
adc
cmc
add
stos
and
call
push
repz
cmp
mov
cmp
mov
and
ror
loopne
jne
popa
stc
loope
stos
mov
js
ficom
xchg
int3
aad
pop
aam
or
gs
cs
js
cmps
les
and
retf
add
ja
mov
pusha
popa
sub
test
xor
call
inc
dec
ret
xchg
add
loopne
or
cmp
mov
sub
push
and
adc
or
fxch
push
jne
sar
sub
les
hlt
test
outs
into
xchg
ret
jo
add
in
jae
jo
dec
div
add
dec
fidivr
xor
test
out
sbb
xchg
addr16
add
add
mov
jecxz
inc
or
xchg
cmp
loope
test
data16
mov
cmp
idiv
stc
mov
cli
scas
bound
mov
aam
aad
fistp
adc
lock
mov
es
mov
mov
rol
mov
inc
jge
ja
mov
push
fst
xlat
sub
cmps
jmp
xor
out
(bad)
xor
pop
pusha
pop
pop
out
rcl
pop
xor
into
lods
scas
or
sbb
lods
mov
xchg
stc
call
adc
bound
es
and
sbb
retf
mov
loope
(bad)
push
test
or
sub
nop
mov
stos
pop
popf
dec
dec
pop
fs
mov
add
daa
aam
shl
or
push
sub
mov
cwde
fnstsw
aas
stos
cld
dec
lds
jb
jmp
xchg
adc
aaa
dec
sub
push
jecxz
jl
cmp
pop
test
in
outs
js
mov
mov
dec
out
push
xor
mov
icebp
std
xor
mov
xor
add
adc
xchg
aad
mov
pop
mov
imul
mov
ins
jle
in
fisttp
rcl
jge
dec
push
pusha
cmp
mov
or
pop
and
sar
movs
repnz
pop
push
adc
js
add
jmp
(bad)
pop
sti
hlt
dec
ror
xchg
(bad)
ins
add
stos
stos
mov
pop
pop
or
mov
jge
cmps
add
mov
sub
gs
push
scas
das
and
jp
mov
dec
loop
push
add
gs
adc
pop
in
outs
lahf
and
jg
dec
rol
lea
pop
(bad)
mov
icebp
xchg
mov
pop
data16
mov
jp
sbb
stos
xchg
stos
push
movs
xchg
lea
or
cmc
in
mov
jl
fbld
sbb
cmps
xlat
pop
imul
(bad)
xor
mov
aam
inc
retf
adc
hlt
cmp
xchg
addr16
fimul
pop
es
or
xor
push
mov
aad
inc
cmp
and
cmp
fs
mov
retf
pop
stc
mov
pop
mov
xchg
das
rol
(bad)
jg
push
cmps
int
je
sub
hlt
sub
sbb
popf
inc
jp
inc
popa
imul
in
xchg
rol
sti
and
scas
push
dec
lods
frstor
idiv
icebp
lahf
in
cmp
add
aam
repnz
sbb
lds
mov
mov
and
jno
xchg
mov
sbb
retf
push
out
fcom
xor
retf
aas
in
pushf
stos
xor
add
fcomp
and
push
(bad)
mov
mov
jns
mov
xchg
mov
mov
shl
dec
fadd
push
xchg
mov
xor
repnz
jl
retf
sub
fnop
push
call
aad
pop
pop
inc
and
mov
mov
lods
lods
movs
aas
out
nop
add
push
call
fsubr
mov
and
aam
mov
call
pop
sub
fldenv
add
sbb
xchg
mov
jns
mov
dec
pusha
retf
push
das
(bad)
je
scas
iret
dec
push
mov
xchg
sahf
ja
pop
daa
lea
cdq
gs
xchg
jmp
sub
mov
pop
jne
sahf
dec
or
sbb
outs
ret
lahf
in
inc
cs
inc
adc
out
int
jg
jp
jmp
inc
inc
out
adc
arpl
into
jbe
xor
dec
ret
sti
xchg
enter
xchg
mov
fisub
xchg
xor
cmps
sti
pusha
scas
mov
jo
rol
out
ficomp
mov
jbe
mov
bound
es
sbb
pusha
in
movs
jne
mov
pop
push
rcr
jmp
enter
add
imul
loopne
inc
ja
xchg
mov
or
movs
lods
push
xor
mov
jae
push
(bad)
les
sti
hlt
or
mov
sub
loopne
or
xor
cwde
lds
xor
mov
push
adc
out
stc
xlat
js
enter
fwait
push
sahf
mov
inc
pop
jle
ins
das
test
mov
pusha
push
(bad)
call
sar
mov
bound
adc
neg
xor
dec
or
movs
push
fwait
je
mov
call
int
(bad)
fistp
add
mov
xor
out
fcomp
inc
je
adc
xchg
adc
push
xchg
xor
je
enter
inc
(bad)
imul
push
jmp
push
xor
mov
sbb
mov
sahf
cmp
and
imul
mov
mov
add
xor
dec
lds
fs
cmp
fist
mov
pop
mov
aam
mov
inc
mov
jecxz
xor
leave
xchg
xchg
and
rol
je
ins
int
fneni(8087
xchg
push
inc
shl
mov
ja
ror
dec
scas
loopne
push
ret
jno
inc
sti
xchg
(bad)
dec
inc
inc
std
ss
mov
jmp
into
scas
push
push
fsubr
push
into
popa
or
sbb
mov
(bad)
popf
lea
mov
jno
int3
adc
adc
ja
call
lock
xor
mov
jne
imul
fsubr
push
jmp
pusha
mov
or
adc
mov
inc
cmp
loop
cmps
jb
stc
out
inc
loop
xchg
and
ins
lock
pop
xchg
cwde
push
pop
push
add
dec
xor
sub
out
jmp
stc
add
and
sub
add
gs
clc
jmp
mov
sbb
sti
xchg
adc
adc
jp
jo
cmps
pop
stos
mov
push
mov
iret
aas
aam
cmp
sub
movs
cmp
mov
mov
(bad)
xor
add
dec
ins
mov
xor
call
rol
mov
clc
or
inc
outs
icebp
or
fisttp
ror
rsqrtps
fs
dec
popa
outs
pop
rcl
retf
les
mov
test
cmps
arpl
cdq
mov
int
sub
xor
rcr
inc
test
nop
mov
and
jo
xor
pop
push
movs
and
aad
ret
sbb
jle
gs
mov
inc
outs
int
xchg
inc
ins
mov
jmp
sub
adc
add
sbb
lock
inc
or
jl
nop
ret
dec
outs
or
pop
cmp
inc
mov
test
adc
push
popa
test
sbb
(bad)
hlt
nop
fist
adc
fild
pusha
mov
fcmovne
or
pop
adc
xrelease
xlat
dec
outs
bound
add
cmp
hlt
pop
enter
mov
or
or
in
push
mov
or
or
and
aam
retf
aam
adc
xor
out
and
inc
mov
mov
popa
add
dec
movs
ror
or
mov
push
mov
stc
and
lods
jnp
call
push
push
gs
sub
push
inc
int3
mov
mov
xor
ja
lods
push
leave
or
ret
pop
mov
mov
ins
cdq
lock
pop
add
adc
or
push
jle
sub
add
aad
enter
pop
packuswb
mov
mov
jnp
jg
jbe
inc
or
and
sub
pop
pop
pop
xor
loope
outs
es
or
adc
push
sub
mov
repz
push
add
xlat
xor
xor
cld
cmps
xchg
or
and
jb
xchg
(bad)
cdq
sti
mov
cdq
xor
xor
imul
mov
add
push
stos
and
ret
jge
add
out
push
pop
push
cmp
stc
pop
pop
shr
mov
cmp
in
stos
jl
outs
xor
dec
push
dec
inc
ja
outs
xor
push
adc
cmp
and
mov
test
aam
inc
pop
sub
ins
shl
lock
sub
lods
in
addr16
xchg
(bad)
cld
stos
aaa
mov
jge
test
adc
sbb
rol
int3
cmp
es
jae
and
sar
sbb
push
(bad)
outs
jl
jge
lds
jnp
xchg
mov
out
cmp
fidiv
sbb
jg
call
mov
mov
test
or
cmp
push
dec
and
ror
xchg
pop
loop
(bad)
mov
mov
sbb
stos
jmp
fnsave
inc
cmps
fst
das
es
mov
adc
xor
dec
int3
fisttp
cmp
out
(bad)
cld
or
mov
repnz
cmp
xchg
xchg
xchg
or
xor
sbb
cli
out
daa
or
scas
int
bnd
ins
mov
push
cwde
mov
repnz
aad
into
sub
ret
cld
and
dec
fnstcw
adc
xor
sub
jl
or
inc
stos
sub
iret
jecxz
sub
add
ja
loopne
and
retf
loope
icebp
mov
mov
pop
adc
mov
mov
inc
cmp
xor
pop
pusha
mov
or
scas
and
nop
or
push
aas
xor
ret
push
dec
sub
xchg
push
push
out
xchg
push
dec
ds
js
(bad)
sbb
and
cmp
push
jg
mov
mov
pusha
xor
aaa
(bad)
pop
adc
or
adc
stos
outs
mov
call
cld
xor
(bad)
daa
das
mov
test
sbb
ss
call
and
jmp
push
cmp
push
and
loope
push
cmc
scas
loop
mov
mov
xchg
out
lahf
add
push
aam
sar
ret
loopne
mov
push
add
aam
das
pop
loope
test
(bad)
sahf
mov
xor
mov
xchg
retf
aas
hlt
jg
jmp
mov
xor
push
mov
pop
push
ins
lock
xchg
retf
sub
in
fidivr
jg
out
ins
or
(bad)
out
movs
test
xchg
scas
mov
fild
mov
scas
loop
loope
push
jae
in
pop
jns
pop
pusha
ret
mov
sub
or
scas
aaa
cmc
test
test
in
popf
cmps
adc
jo
adc
xor
cmp
sbb
loop
dec
imul
or
pop
rcr
pop
cmp
push
int3
xlat
push
pop
std
outs
dec
fst
mov
aam
jecxz
outs
imul
js
inc
cmc
cmps
dec
xchg
mov
sbb
mov
(bad)
mov
das
pop
push
sbb
mov
mov
and
push
(bad)
jle
call
inc
cmp
or
and
mov
mov
div
inc
dec
in
mov
int3
mov
aad
mov
push
xchg
fwait
xor
aad
jae
int
fst
int
inc
cmp
jge
xor
push
xchg
cmp
cmp
mov
and
sbb
mov
push
mov
xchg
scas
push
sub
lahf
in
xchg
test
and
out
stos
call
pusha
gs
push
fimul
in
and
push
mov
cld
lods
pusha
les
push
cs
shl
addr16
mov
(bad)
and
nop
push
jmp
cmps
xor
xor
je
int3
sbb
jp
mov
sbb
mov
test
sbb
xchg
sbb
inc
cli
out
popa
xor
sti
out
dec
cmp
or
mov
cdq
sbb
xor
and
(bad)
int
mov
lock
lea
std
clc
jb
out
jmp
rcl
std
jle
addr16
inc
sbb
jo
sti
push
leave
jl
xchg
xor
xchg
dec
jnp
sub
xchg
jns
add
sub
xor
shl
call
mov
sbb
pop
pop
mov
repz
and
mov
loope
push
stc
jnp
cmp
das
ficomp
add
dec
add
movs
fs
jmp
movs
cld
mov
or
cmp
mov
pop
jecxz
sti
cmp
xlat
shl
cmp
xchg
inc
popf
mov
push
or
sub
lea
lahf
fs
push
sbb
xchg
scas
fistp
lds
cmps
out
mov
bound
std
movs
int
and
retf
lds
xchg
sbb
add
jge
inc
or
mov
add
jle
int
sub
add
ror
mov
imul
pop
mov
pop
in
in
js
cmps
(bad)
sti
and
into
popw
mov
xor
into
stos
xchg
mov
xchg
xchg
dec
aam
movs
inc
sbb
retf
pushf
push
push
lods
imul
sbb
dec
imul
cmps
mov
fsub
sbb
pop
pop
mov
repnz
lods
icebp
mov
add
cmps
xor
jnp
pop
ds
pop
test
pushf
(bad)
(bad)
aam
ret
dec
leave
fld
mov
les
sbb
lods
test
ins
and
jle
mov
add
and
add
cmp
stc
loope
mov
mov
cmp
retf
std
jo
mul
inc
pusha
cmp
clc
aas
shl
pop
and
cmp
jg
in
lods
cmc
lods
xchg
icebp
(bad)
mov
dec
arpl
mov
int
jmp
jl
xchg
loopne
adc
jae
add
add
pusha
jmp
loop
dec
push
arpl
int3
sahf
mov
pop
cdq
jecxz
jg
and
xchg
ds
push
fsubr
aam
jns
adc
scas
pop
inc
test
jge
ror
in
mov
jae
lea
pand
mov
outs
mov
pop
pop
jp
mov
inc
lods
jge
xor
jmp
pop
jb
sub
xchg
fs
test
or
ss
add
adc
jl
mov
jl
imul
fs
and
call
push
mov
mul
or
sbb
cmp
je
shl
xchg
sbb
dec
mov
test
cmps
test
add
ficom
out
sub
cmp
pop
xchg
into
(bad)
out
sbb
ins
jo
clc
sbb
adc
add
nop
dec
test
in
xchg
mov
pop
or
fs
(bad)
outs
scas
mov
enter
xchg
mov
les
lock
and
mov
mov
mov
xor
retf
jno
adc
xchg
sar
daa
mov
xchg
xchg
cdq
cwde
mov
ins
sbb
push
sbb
test
sub
cs
sbb
rcl
push
or
mov
inc
add
in
lods
cmc
adc
pop
and
in
imul
push
(bad)
cli
data16
adc
mov
mov
mov
bound
jnp
jp
lea
clc
xchg
xchg
out
or
mov
pop
popa
mov
bound
push
ja
and
aaa
test
inc
jecxz
pop
test
cs
(bad)
xor
sbb
neg
cli
sub
jnp
ins
add
lock
ja
or
jno
sub
(bad)
icebp
fnsave
sub
push
leave
or
jp
pusha
add
daa
bound
loop
iret
and
xchg
pop
adc
(bad)
fcmovu
addr16
jle
es
dec
test
pop
fs
pop
push
rcr
mov
mov
xor
push
loopne
adc
cmps
cmp
(bad)
push
inc
cmp
xchg
pop
js
xor
cmp
fcmovnb
jne
aaa
loope
pop
mov
mov
stc
adc
int
sub
add
test
push
arpl
sti
or
and
and
jns
cmc
cli
(bad)
out
push
pop
sub
and
es
mov
push
fcmovne
xor
push
adc
xor
mov
shl
stc
adc
sbb
mov
or
lahf
lds
push
cmc
pushf
jp
dec
xchg
call
(bad)
jns
ja
lahf
mov
rcr
dec
leave
push
jbe
adc
js
jl
dec
lds
and
lods
jl
js
mov
push
enter
jnp
bound
mov
lods
jbe
lods
push
(bad)
fcmovnb
jnp
sbb
cmps
arpl
pop
sbb
fisttp
mov
push
and
xlat
add
push
or
adc
sub
outs
push
fbstp
fs
shl
and
jne
pop
and
xchg
jb
out
mov
je
xchg
int
dec
arpl
call
retf
adc
in
pop
lea
cdq
mov
and
out
in
jmp
dec
cmp
adc
es
dec
stos
push
cmp
aaa
lods
imul
mov
mov
scas
pop
and
dec
fisttp
call
sbb
push
lahf
xchg
ins
ins
or
xchg
adc
je
addr16
mov
xchg
test
pop
and
not
xor
and
into
dec
movs
jmp
es
sar
pop
mov
or
mov
adc
inc
sub
nop
xor
pop
mov
and
test
push
mov
test
pop
cmps
movs
cld
pop
outs
les
cmps
xchg
(bad)
xor
jbe
iret
push
les
xchg
add
mov
ror
xchg
xchg
or
loopne
aas
push
(bad)
jl
arpl
mov
inc
or
gs
outs
mov
sbb
es
lea
mov
mov
mov
xchg
inc
test
push
jl
sahf
mov
mov
mov
inc
adc
into
stos
daa
sbb
add
pusha
inc
push
ja
mov
dec
xchg
pop
add
sbb
dec
out
or
sbb
push
xchg
adc
cmps
push
imul
leave
adc
in
jbe
ret
enter
push
popf
add
adc
sbb
fild
cli
clc
mov
or
jbe
out
adc
sbb
leave
sub
sub
imul
push
push
sub
scas
push
and
clc
sub
and
add
inc
and
xchg
jne
xchg
fs
xchg
test
movs
pop
push
ss
fimul
aaa
jp
sbb
enter
push
shl
ficomp
fwait
xchg
adc
cli
and
xchg
adc
loope
sub
mov
sub
cs
push
int3
cwde
xor
mov
sub
xchg
movs
bound
mov
push
int
inc
mov
sub
push
test
adc
mov
shr
sub
cmps
mov
addr16
lock
xchg
dec
sub
fwait
data16
icebp
sub
movs
pop
add
push
ja
sar
push
repnz
jg
sub
icebp
jno
imul
sbb
jno
and
xlat
(bad)
mov
mov
data16
shl
enter
xor
sbb
mov
cwde
movs
test
in
hlt
dec
(bad)
add
(bad)
leave
mov
scas
dec
jbe
outs
addr16
addr16
movs
fcmovbe
mov
add
imul
cdq
sub
in
scas
sbb
adc
sbb
sbb
sub
gs
xchg
dec
push
stos
mov
cmps
in
in
pop
sar
mov
push
adc
popa
pop
mov
pop
dec
std
xchg
xchg
leave
jns
cdq
fild
mov
(bad)
mov
repnz
outs
mov
out
xlat
sub
inc
daa
jnp
xchg
xchg
inc
aad
rcl
ja
retf
outs
jl
add
repnz
popf
rcl
loop
ret
cmp
mov
es
pop
pop
cdq
add
push
clc
cmps
push
or
sub
stc
xchg
mov
xor
inc
push
push
das
test
dec
xchg
or
mov
mov
adc
or
mov
sbb
jbe
fucom
aam
lds
leave
lea
adc
mov
movs
inc
cmp
test
push
mov
in
xchg
add
lock
sti
pop
nop
push
mov
ret
pop
jl
mov
xchg
pop
push
dec
mov
outs
and
in
in
aas
adc
out
mov
xor
sub
jo
call
(bad)
inc
mov
inc
jb
push
test
mov
rcr
sub
retf
stc
in
test
xchg
test
test
xchg
sub
inc
xchg
xor
sub
in
sub
dec
mov
hlt
ret
jne
dec
sbb
pop
pop
cld
sti
xor
mov
cmp
adc
clc
mov
call
jbe
add
lea
push
cmp
xor
mov
pusha
xor
loopne
fcom
mov
pop
pop
inc
push
int3
xchg
xchg
pop
push
sub
lock
jne
gs
mov
mov
aam
mov
(bad)
lea
mov
(bad)
std
out
mov
lods
inc
test
fnstsw
aad
dec
mov
mov
dec
xchg
test
and
inc
or
test
and
add
shl
inc
mov
cmps
stos
xchg
mov
inc
and
ss
push
lds
xchg
sbb
xchg
nop
dec
xchg
xor
test
div
sub
jne
mov
loope
or
add
mov
sub
mov
imul
cmp
mov
mov
adc
nop
and
dec
or
cmp
sub
adc
or
mov
adc
cmp
ja
jnp
push
(bad)
rcr
cmps
push
rol
stos
cmp
call
std
fiadd
ins
jmp
aas
mov
sub
adc
and
push
or
add
scas
xchg
jbe
and
jae
add
sbb
sbb
lods
int3
sbb
mov
push
xor
inc
rcr
fcomp
popa
pop
inc
ud2
cmps
pushf
in
pop
lahf
mov
push
call
xchg
lods
jb
arpl
nop
xchg
jo
sub
enter
push
dec
xchg
add
sub
fdivr
cmp
xchg
and
leave
pop
mov
popa
cmp
jmp
call
xlat
or
enter
pop
(bad)
pop
mov
ss
cli
dec
inc
movs
fisttp
fiadd
push
sub
xor
add
pusha
cmp
add
mov
dec
mov
jne
inc
inc
sbb
pop
(bad)
push
mov
popf
mov
gs
jb
sub
sbb
pushf
lds
test
aas
popa
daa
inc
jae
sub
pushf
and
or
mov
cmp
cs
in
push
aaa
sub
sub
jns
leave
add
popf
push
mov
push
xor
(bad)
jmp
loope
pop
inc
out
(bad)
pop
shl
xor
pusha
nop
and
test
xchg
pop
push
movs
pop
cmp
push
cli
or
cmp
adc
enter
aam
cmp
lods
push
cdq
daa
mov
mov
loopne
mov
sub
dec
sbb
dec
sub
mov
push
and
call
out
in
sbb
add
sub
fwait
and
ss
cmps
jle
push
les
sbb
add
mov
out
out
jge
mov
xor
dec
mov
dec
scas
arpl
push
mov
iret
popf
sub
js
test
js
fsubr
jmp
mov
(bad)
arpl
push
xchg
mov
loop
push
cmps
(bad)
mov
add
jp
aam
scas
aas
idiv
ret
dec
mov
arpl
stos
xchg
sahf
mov
(bad)
ins
mov
mov
sbb
in
sbb
and
adc
arpl
bound
inc
shl
and
fst
loop
dec
or
sub
dec
mov
xchg
lods
movs
gs
pop
push
aad
push
pop
pop
sub
jne
jnp
mov
xchg
adc
fisub
sub
mov
enter
sub
cmps
dec
cwde
dec
push
xchg
test
or
mov
dec
(bad)
jnp
cmp
jnp
xor
ins
fimul
adc
in
inc
loopne
push
in
and
dec
popf
call
mov
pop
sbb
fs
test
arpl
fwait
aas
jne
test
fstp
mov
jecxz
mov
push
fist
ss
imul
or
cs
lea
int3
mov
sub
xchg
ret
jmp
retf
fcomip
jne
and
int3
mov
stos
call
cmp
jle
mov
clc
pop
(bad)
in
movs
adc
mov
jne
adc
les
xchg
test
inc
dec
add
or
push
mov
loope
adc
mov
push
rcl
fdiv
inc
fs
cld
xor
push
sar
imul
lods
lock
repnz
stos
mov
sahf
std
dec
sahf
sti
inc
inc
leave
mov
call
outs
dec
arpl
test
mov
(bad)
jmp
or
fidiv
pshufw
pop
mov
push
test
popa
add
sbb
js
out
sbb
fcomp
jmp
and
sahf
adc
outs
xchg
faddp
movs
cmc
xchg
adc
adc
(bad)
sub
mov
mov
sahf
jmp
jb
or
jg
push
mov
lds
xchg
int
sub
aaa
jne
push
leave
mov
rol
(bad)
aam
test
(bad)
push
rcr
fisttp
inc
cmc
inc
sbb
inc
and
cmps
dec
push
mov
ror
icebp
sti
ss
fist
(bad)
adc
nop
jbe
js
into
jp
test
mov
cs
scas
mov
xchg
enter
xchg
inc
xor
pop
xchg
adc
les
adc
and
xlat
cmp
std
mov
push
rcl
xchg
adc
aas
xchg
inc
and
mov
dec
ror
call
mov
push
sbb
mov
popa
int
xchg
fistp
jne
mov
repnz
xchg
xchg
jmp
and
inc
rol
js
rcl
out
sti
rcl
mov
(bad)
inc
xor
pop
enter
cmp
xchg
push
add
out
cli
in
rol
aas
sbb
and
jae
mov
repnz
add
stos
pop
cwde
js
jg
dec
fmul
fsubr
jbe
sahf
mov
push
(bad)
out
ret
add
mov
sub
loope
inc
inc
pop
inc
pop
out
mov
pop
and
inc
xor
inc
xchg
imul
cmps
cmp
pop
push
adc
and
pop
ret
inc
dec
dec
std
jmp
sbb
cmp
(bad)
xor
aas
inc
pop
add
addr16
nop
sub
(bad)
ins
inc
xchg
push
mov
adc
cmp
ins
mov
xchg
inc
inc
dec
in
lock
cmps
icebp
ss
sbb
daa
shl
loope
cs
es
push
pushf
ret
clc
repz
mov
ss
sbb
jo
das
xchg
stc
xor
mov
xchg
cld
xor
sbb
push
stos
push
test
xchg
not
mov
out
cmp
lods
cmc
inc
dec
arpl
outs
ror
mov
repz
dec
(bad)
mov
arpl
add
pop
je
jle
adc
pop
sbb
jmp
cmps
(bad)
xlat
xor
and
pusha
and
mov
push
dec
cmp
push
mov
ret
dec
adc
pop
dec
jg
sti
bound
inc
mov
or
mov
(bad)
adc
sub
cwde
inc
popf
sub
movs
jecxz
repz
sbb
loope
xor
pop
sub
cli
xchg
fcompp
mov
dec
adc
adc
fisubr
in
scas
push
sbb
dec
xor
test
fucom
pushf
rcr
push
fxch
pusha
cwde
cmp
dec
pop
mov
or
les
nop
cmp
sbb
inc
movs
pop
mov
xor
adc
ds
xor
inc
movs
dec
mov
repnz
inc
add
push
sub
xchg
mov
mov
imul
mov
pop
data16
fcomp
ffreep
arpl
inc
sbb
xchg
jo
pop
push
xchg
loop
mov
dec
aaa
mov
popf
inc
and
outs
cli
daa
fisttp
shl
dec
mov
movs
sub
mov
or
adc
adc
inc
sahf
stc
adc
les
int
sub
sub
and
adc
push
mov
push
fidivr
out
pop
mov
sub
dec
push
movs
ins
repz
lds
out
in
push
stos
jg
ret
dec
rol
mov
push
mov
sti
pop
test
mov
dec
dec
shr
int
add
(bad)
adc
sahf
push
adc
and
rol
xchg
jae
mov
and
loope
scas
push
adc
xlat
dec
sbb
ficomp
pop
ins
iret
push
push
cli
jg
adc
mov
cld
imul
pushf
and
adc
xor
mov
cld
ret
pop
scas
jmp
imul
cmp
pop
ss
out
lods
stos
mov
repnz
enter
lahf
hlt
mov
das
jmp
shl
gs
inc
xchg
scas
icebp
push
(bad)
ja
fcomi
enter
jl
push
cwde
cs
mov
dec
or
push
fldenv
push
ficomp
or
fadd
pop
xchg
or
movs
movs
xlat
sub
inc
daa
data16
lods
and
add
(bad)
dec
adc
loopne
inc
sbb
adc
sub
push
xor
mov
fldenv
rcr
sbb
push
dec
in
push
add
sbb
mov
fcmovne
arpl
xor
jo
(bad)
retf
js
loope
in
sbb
fmul
and
loop
enter
and
jmp
and
jns
pop
rcr
xchg
mov
inc
loop
and
inc
pop
push
mov
push
mov
push
xor
retf
sti
ret
loope
icebp
sar
movs
sti
inc
je
cmp
pop
pop
mov
xor
jmp
(bad)
movs
and
ins
(bad)
shl
sbb
int3
xor
pop
jno
fisttp
fcomp
dec
or
xchg
mov
mov
push
or
nop
xchg
das
not
retf
mov
mov
inc
es
adc
sbb
mov
lahf
dec
xor
jns
call
xchg
cs
ins
sub
jb
push
xlat
retf
cli
cs
sbb
fistp
aaa
shl
in
ror
add
inc
clc
sub
and
xor
mov
out
mov
xor
fnsave
xchg
bound
movs
popa
mov
and
repnz
(bad)
in
test
outs
xchg
fnstcw
adc
and
jo
int
jecxz
fldcw
add
or
inc
enter
imul
imul
xor
lods
xor
pusha
push
std
xchg
jecxz
mov
xchg
clc
movs
pmaxsw
add
es
push
push
ins
jg
push
adc
xchg
ins
xchg
or
and
in
and
sbb
xor
ins
add
rcl
fwait
inc
add
xchg
push
stc
sub
adc
sti
xor
inc
fcmovnbe
fisub
aaa
or
push
sbb
xchg
clc
imul
call
call
outs
pop
popf
mov
mov
(bad)
pop
(bad)
cmp
fwait
xor
arpl
movs
adc
popf
mov
shl
sbb
add
pop
jmp
mov
mov
pop
lahf
or
fwait
add
fsub
imul
dec
in
and
sbb
mov
mov
xchg
cmp
sbb
dec
in
cdq
adc
sahf
sbb
and
ja
add
sub
in
dec
add
mov
in
dec
ret
or
fs
push
retf
xor
out
aas
scas
pop
xor
pop
call
out
leave
or
fxch
bnd
push
jnp
dec
out
sbb
fist
(bad)
sti
lods
out
cmp
mov
(bad)
pusha
repz
ja
call
ror
das
fisub
(bad)
cdq
addr16
xchg
arpl
jmp
pop
retf
jbe
aad
hlt
xchg
jle
idiv
push
adc
mov
fild
or
mov
fisubr
sub
fisub
mov
in
lock
stc
jbe
sub
mov
ficom
xor
jg
adc
jne
jmp
mov
jno
mov
mov
(bad)
aas
int
push
bound
sub
lods
and
int3
lock
ja
xlat
lea
movs
or
dec
sub
in
(bad)
dec
mov
fs
rol
xor
addr16
scas
scas
cmp
sbb
shr
push
jae
ds
stc
out
(bad)
test
cmp
push
nop
outs
or
arpl
mov
jl
lock
clc
add
xchg
sahf
sub
test
add
rol
cmp
and
imul
rol
ins
mov
cmc
jno
dec
ret
shl
inc
push
inc
cmp
mov
pop
imul
dec
ins
cmp
mov
cwde
lods
lahf
push
je
(bad)
jmp
std
and
aas
outs
pop
stos
push
fidivr
call
jge
movs
or
js
pop
or
aas
xlat
push
mov
sub
movs
or
dec
cmps
mov
movntq
out
cmp
dec
pop
retf
mov
jl
and
jae
scas
jbe
push
lds
mov
sbb
out
pushf
dec
push
push
mov
inc
pop
jge
xor
inc
aas
push
pop
icebp
mov
and
cld
push
shl
pop
mov
clc
fadd
or
lods
jg
mov
cdq
mov
test
aad
add
sahf
in
mov
test
fadd
xchg
mov
xchg
addr16
mov
das
mov
fstp
jl
arpl
das
adc
xchg
(bad)
hlt
out
idiv
xchg
adc
add
icebp
in
mov
xor
jle
cli
mov
push
js
leave
xchg
dec
outs
mov
xchg
mov
adc
mov
xchg
ds
mov
imul
stos
mov
stc
fwait
pop
dec
cmp
push
lock
cmp
push
or
shl
aam
adc
mov
mov
leave
imul
fdiv
dec
cmp
cmp
sub
sub
imul
addr16
push
ror
push
push
lock
sahf
movs
and
add
xchg
cmp
dec
cmp
iret
pop
lock
pop
xor
out
xor
push
inc
inc
jg
jmp
adc
add
sbb
nop
mov
push
out
mov
sub
xchg
loop
sub
aaa
ins
lea
adc
fldcw
leave
jmp
mov
push
addr16
adc
pop
pop
push
cmp
fs
xchg
inc
fucomi
stc
xor
gs
(bad)
cmp
imul
and
mov
dec
push
sbb
cmp
push
sbb
jle
inc
inc
not
push
addr16
mov
push
push
mov
in
loopne
jl
shr
sbb
movs
jle
mov
push
or
push
movs
jo
retf
je
nop
jg
jo
inc
adc
mov
mov
xchg
data16
fnstsw
mov
sub
pop
xchg
mov
in
scas
cmp
xchg
das
cwde
sti
hlt
ins
(bad)
enter
and
xchg
loopne
mov
rol
xchg
aaa
xlat
mov
mov
push
jmp
ror
push
cmps
fist
imul
stc
jg
cld
jo
subps
xchg
cwde
cmp
es
sbb
dec
push
cwde
cmp
mov
repnz
in
pop
pop
xor
dec
sbb
push
aam
in
aas
(bad)
sahf
fdiv
pushf
xor
add
fcomp
imul
sahf
in
pop
pop
xchg
fstp
fisub
sub
xchg
and
cmp
sbb
rcl
jmp
xchg
bound
xor
push
mov
inc
in
cmp
wrmsr
or
stc
bound
movs
std
xchg
pusha
mov
stc
jmp
jmp
imul
cmp
xchg
jns
icebp
mov
in
jp
adc
pushf
xor
push
xchg
mov
pop
pushf
call
clc
sbb
je
pop
pop
scas
mov
jp
hlt
loop
adc
enter
inc
shl
hlt
fimul
fmul
movs
test
cmp
movs
xchg
dec
or
xchg
jmp
mov
push
cmp
mov
into
add
and
rol
jle
or
lahf
out
aas
sub
sub
add
pop
fcomi
jns
cmp
outs
gs
dec
push
push
mov
cs
jle
or
outs
pop
jo
lock
(bad)
or
jge
or
mov
cmps
mov
mov
add
cmp
adc
mov
outs
mov
stos
stc
xor
cmp
sub
dec
cmp
adc
push
ffree
pop
mov
jg
clc
lock
cli
mov
dec
sahf
jbe
(bad)
std
xchg
(bad)
cmp
push
mov
sti
nop
test
cli
aaa
sahf
pop
or
mov
stc
dec
or
xchg
mov
fiadd
and
data16
test
mov
retf
clc
mov
movs
rol
cld
push
adc
push
mov
and
jle
cld
jmp
bound
cld
lahf
adc
loope
adc
add
bound
jle
dec
loop
pop
lahf
stos
pop
fldenv
inc
(bad)
retf
add
lods
sbb
fmul
mov
out
ja
push
sub
and
ja
cs
add
jo
dec
mov
(bad)
sub
in
cmp
mov
cmps
mov
fmul
sbb
inc
add
xchg
rol
pop
fild
xchg
aas
cmp
cmp
push
inc
dec
jp
out
lock
dec
hlt
(bad)
jmp
xchg
jmp
(bad)
adc
dec
clc
pusha
loop
sahf
sub
ins
jnp
and
dec
mov
fcomp
jo
nop
and
and
xlat
pop
cli
arpl
or
dec
or
add
ins
pop
xor
test
mov
out
outs
dec
icebp
mov
out
sbb
cmp
mov
js
shr
xlat
jmp
cs
sub
and
retf
fwait
xlat
in
mov
js
test
mov
mov
or
sub
outs
div
xchg
call
push
mov
repnz
in
push
test
call
pop
xchg
scas
test
pop
ret
and
stc
imul
cli
cs
mov
jle
in
push
cmp
and
sbb
xor
stc
rcr
imul
push
ss
leave
xor
retf
mov
ins
cwde
pop
pushw
lahf
(bad)
sbb
in
sbb
imul
cmp
es
adc
out
bnd
add
mov
push
and
sub
(bad)
fs
jl
daa
push
cmps
aad
es
fcom
xchg
jo
jbe
dec
fs
(bad)
dec
adc
mov
cdq
adc
mov
and
data16
fistp
call
xchg
push
outs
daa
daa
xor
inc
pushf
sub
hlt
push
pop
imul
dec
call
or
sub
push
ret
jg
add
xchg
push
jo
mov
hlt
int
in
js
outs
loop
jmp
ins
push
in
jmp
xchg
xchg
and
data16
push
aam
push
mov
inc
jbe
inc
inc
add
hlt
fiadd
mov
iret
mov
cmps
(bad)
call
ins
fist
dec
ror
std
xchg
xor
mov
ds
(bad)
lods
pop
aas
inc
mov
jmp
push
adc
push
fs
cmc
cmp
add
jnp
cmps
cwde
xor
pushf
daa
pop
leave
fisttp
mov
push
sbb
pop
popa
push
ja
into
mov
cli
lea
sar
dec
cdq
sub
or
inc
adc
xchg
xor
mov
xchg
mov
and
lock
sub
push
cmp
repz
mov
inc
add
adc
push
jnp
jb
push
push
mov
jl
pop
xor
mov
jno
mov
loopne
sub
inc
cmp
neg
mov
test
push
ja
xchg
test
mov
hlt
mov
je
out
sub
(bad)
xchg
nop
push
int
fidivr
xor
outs
js
jne
mov
adc
xor
lock
std
xor
and
loopne
xor
xlat
dec
fbstp
jae
dec
jbe
pop
(bad)
aam
out
xchg
js
push
jl
mov
add
in
adc
sbb
in
(bad)
xor
leave
ds
shr
jmp
jbe
cmp
jnp
scas
les
(bad)
aas
aaa
js
cs
push
in
movs
cmp
pop
mov
ja
popf
cmp
(bad)
inc
pushw
movs
add
jl
mov
leave
lods
xchg
into
xchg
add
and
dec
icebp
push
in
jmp
in
mov
mov
jb
int3
(bad)
leave
dec
out
mov
out
and
fsub
sahf
inc
gs
lea
mov
adc
xchg
(bad)
jp
add
push
neg
movs
out
pushf
cwde
adc
add
push
stc
add
sbb
mov
js
js
scas
jmp
xchg
fmul
sbb
adc
aam
mov
mov
pop
add
call
push
fmulp
or
dec
lock
mov
gs
neg
fidivr
inc
cmp
daa
test
xor
push
adc
push
popa
push
dec
jo
int
hlt
scas
dec
xchg
cmp
dec
les
stos
mov
rcl
xor
jge
dec
sub
cmp
rol
stos
repz
(bad)
shr
sbb
(bad)
sbb
in
jle
sti
or
push
adc
call
test
and
or
inc
and
inc
std
test
repz
or
xlat
dec
(bad)
test
xor
xchg
pop
xchg
enter
outs
or
push
das
jb
stos
arpl
jae
std
dec
xchg
jp
pop
mov
jmp
mov
aam
es
mov
out
fidivr
sbb
loopne
xor
aaa
retf
xchg
ss
loopne
cmp
inc
(bad)
aad
retf
inc
or
hlt
rcl
out
cdq
nop
add
xor
mov
cmp
cmp
xor
dec
mov
dec
inc
add
jmp
inc
mov
stos
cmc
in
stos
cmc
(bad)
repz
push
adc
cmc
outs
or
pop
push
test
fidivr
jmp
xchg
scas
dec
test
mov
sub
push
xchg
lock
or
sub
mov
ret
imul
jl
es
pop
mov
push
jnp
aad
inc
xor
mov
test
push
or
mov
movs
and
push
add
retf
pop
mov
pushf
aam
jnp
shl
adc
jmp
pop
inc
inc
into
lock
fisub
out
mov
movs
call
psubb
inc
lods
mov
dec
sbb
das
movs
pop
xor
retf
call
jne
mov
xchg
xchg
or
mov
ss
xor
stos
fistp
nop
mov
into
popf
int3
cmps
cmp
push
jns
or
mov
outs
push
mov
out
icebp
jne
fild
aam
jmp
mov
retf
push
rcl
cld
repnz
stos
add
and
(bad)
mov
pop
xchg
and
adc
mov
aaa
jne
cmp
popa
ret
jns
stos
push
jg
cmp
popa
cmp
inc
pop
mov
mov
fdivr
pop
jae
aad
cmp
fidivr
dec
xlat
or
das
xchg
loop
mov
pop
mov
jg
adc
aas
enter
inc
pop
dec
lea
mov
pop
dec
aaa
cmp
in
loope
out
mov
inc
mov
call
cmps
ret
std
inc
dec
ja
push
add
nop
sar
loop
test
mov
(bad)
out
into
retf
mov
sub
cmp
push
jge
outs
fsubr
xchg
ds
imul
add
movs
(bad)
addr16
ss
xor
sub
mov
in
sti
mov
or
cmc
mov
fstp
retf
pop
inc
call
and
scas
sub
ss
cmp
js
sub
mov
imul
add
sti
popf
aad
pushf
fdiv
into
cdq
jnp
(bad)
xchg
dec
pop
setae
imul
lahf
mov
outs
aam
stos
repz
lods
fst
clc
sbb
jno
cdq
adc
dec
imul
neg
xor
test
xor
inc
xor
push
pushf
dec
in
push
cmp
jns
out
imul
fucom
mov
(bad)
xchg
inc
adc
pop
jmp
xlat
fwait
js
test
push
jp
mov
sti
clc
mov
adc
in
mov
pop
sub
dec
xor
cs
pop
mov
outs
std
jp
scas
push
hlt
pusha
ror
sbb
pop
call
int
push
xor
aas
js
mov
add
stos
dec
lock
div
jp
out
clc
not
push
ret
jmp
mov
cmp
xor
ds
adc
or
out
bswap
lahf
stc
imul
add
push
aad
add
xchg
xchg
jmp
mov
test
xchg
cmc
cmp
fistp
and
add
dec
fadd
cmp
icebp
das
pop
jbe
imul
fidivr
mov
mov
leave
adc
into
leave
cli
and
jb
jns
jae
mov
sti
dec
mov
loope
nop
xor
mov
popa
push
cli
je
loope
test
dec
adc
js
arpl
jecxz
sub
test
cli
(bad)
leave
mov
push
loopne
aam
add
pop
mov
push
aad
push
jmp
xor
out
ja
lds
in
sbb
mov
xchg
push
(bad)
sbb
xchg
mov
mov
lahf
sub
add
xor
pop
mov
icebp
fisub
test
push
push
mov
xor
repz
push
push
out
push
mov
stos
in
and
sbb
test
stos
icebp
mov
or
mov
mov
pop
cmp
add
mov
inc
out
xor
lods
push
inc
(bad)
in
push
iret
and
pop
pop
xchg
int
out
cmp
add
aaa
sti
dec
add
icebp
jmp
pop
sbb
sub
shr
call
mov
shl
dec
pop
repnz
jecxz
lods
xlat
test
pop
adc
cmps
adc
push
xlat
lds
jb
push
pop
cs
loopne
cs
jno
jle
ficom
stos
ds
shl
cmc
push
dec
scas
xchg
jge
sub
jmp
ret
rcl
dec
jbe
pop
std
xchg
mov
lock
sbb
mov
cmp
lock
mov
or
pop
or
jle
sti
fld
push
aam
sbb
ins
popa
in
cmps
repz
mov
test
xor
jp
pop
movs
push
scas
pop
xlat
mov
sti
sbb
jmp
xor
dec
fwait
add
cmp
sub
mov
jg
mov
sbb
sbb
retf
call
pop
cmp
dec
imul
iret
in
xor
jmp
test
sub
xor
sbb
push
cmp
in
popa
jno
sahf
fist
jmp
sbb
in
cmp
mov
test
inc
xchg
lahf
xor
call
cmp
cmp
inc
movs
cmp
ret
mov
aad
retf
push
lock
push
retf
dec
or
stos
xor
jp
cmp
stc
mov
mov
hlt
div
mov
aad
adc
mov
sub
pop
sbb
stc
sub
inc
loope
jns
mov
push
sbb
or
lods
int3
cmc
add
cmp
xor
pop
call
jmp
xor
(bad)
scas
dec
xchg
adc
mov
loop
pop
xchg
jns
aaa
fild
ja
scas
or
outs
jns
fnstenvw
add
and
xchg
fmul
shr
xchg
cmps
pop
ret
pop
cmp
sar
mov
or
cwde
and
sbb
std
loopne
sbb
add
xchg
or
imul
sbb
jmp
ficom
mov
or
inc
test
loope
jp
xor
inc
mov
test
addr16
sub
in
mov
sahf
jae
cdq
add
inc
adc
inc
push
lar
mov
cmps
repnz
imul
fmul
sub
fild
or
dec
test
ins
movs
or
test
mov
loope
or
xchg
cmps
test
(bad)
aad
or
mov
xor
mov
push
push
(bad)
jnp
fmul
push
retf
retf
jmp
push
and
sbb
fdivr
dec
loop
jne
pop
push
dec
mov
inc
ins
or
into
sti
adc
cmc
pop
sub
jo
out
jnp
pop
mov
ret
push
and
and
adc
and
mov
push
fwait
cmp
inc
popf
lods
fadd
mov
outs
int
lahf
fild
jno
retf
stos
test
mov
in
xlat
fcmovbe
mov
jae
test
sub
fisttp
outs
repz
aad
nop
cmp
jl
jnp
addr16
ds
and
mov
xor
jns
and
mov
shl
xchg
xlat
test
in
or
out
shr
sar
jge
fldenv
lods
sahf
jecxz
cld
mov
out
jne
mov
and
fucomip
mov
push
jmp
jmp
xor
xchg
call
xchg
sar
arpl
out
fsubrp
xor
push
inc
sbb
pop
fsubr
adc
xor
pop
out
ds
popa
push
enter
mov
popf
and
xchg
out
in
leave
data16
les
push
sub
pop
jmp
jbe
sub
mov
int3
dec
test
and
cmp
daa
adc
pop
stos
pop
cmp
push
jbe
popf
loop
adc
fsubr
sti
xor
dec
fnstcw
cmc
shr
or
cmp
cs
lods
sbb
push
int
retf
or
add
clc
jno
or
xor
lods
xlat
call
shr
mov
ret
scas
inc
mov
sub
cmps
rcr
or
dec
ds
push
repnz
movs
or
popa
mov
cmp
lahf
sub
adc
push
rol
add
jbe
cmp
loopne
dec
mov
jecxz
repnz
(bad)
mov
mov
or
call
pop
sub
jg
push
mov
inc
sub
inc
mov
add
lods
in
or
inc
jl
out
dec
cli
jno
inc
xchg
cli
or
repz
jbe
mov
push
jge
jmp
xor
arpl
fist
or
and
call
out
(bad)
es
xchg
pop
pop
adc
push
repnz
mov
iret
(bad)
mov
frstor
cmc
jno
fisttp
jecxz
lods
cs
jae
add
xor
mov
cld
xchg
nop
sub
dec
rol
bound
daa
xchg
add
mov
jns
or
test
inc
mov
xor
xor
mov
mov
pop
dec
mov
push
aad
push
add
push
lahf
mov
scas
jp
js
pop
dec
xchg
lea
sbb
cmp
call
pop
cmp
sahf
mov
ins
sub
sti
(bad)
data16
cmp
ja
addr16
inc
add
xor
int3
fistp
jge
je
addr16
imul
mov
inc
(bad)
arpl
test
adc
outs
out
out
outs
ret
loop
inc
xchg
popa
std
mov
aas
sbb
jns
mov
sbb
ss
int3
sbb
ret
jnp
mov
xor
dec
xchg
cwde
lods
sahf
test
push
add
xor
xchg
inc
sub
inc
aad
fld
and
fnstenv
clc
cmp
xlat
aas
sbb
(bad)
push
dec
movs
inc
(bad)
std
(bad)
aad
jmp
jp
sbb
popa
jge
inc
mov
loop
test
loop
add
rcr
jl
push
sbb
dec
ins
and
add
cmp
adc
mov
pop
mov
mov
rcr
push
mov
mov
ins
mov
mov
push
fmul
mov
das
push
shl
sar
pop
lods
repz
sbb
inc
inc
mov
or
leave
and
xchg
or
jmp
mov
imul
adc
fcmovbe
adc
xor
repnz
or
in
add
in
ror
movs
dec
imul
add
sti
sti
daa
add
push
xchg
sub
icebp
add
arpl
xchg
jge
mov
sar
enter
pop
rol
dec
dec
pushf
stos
pop
fdiv
push
mov
dec
aaa
adc
jp
and
and
lahf
je
jp
push
bound
adc
xchg
int3
out
pop
push
inc
inc
mov
adc
(bad)
ins
inc
or
cs
int
pop
mov
cmps
add
in
imul
xchg
fisub
mov
sbb
xchg
sti
mov
pushf
mov
out
dec
mov
mov
and
gs
add
adc
adc
xor
cmc
mov
xor
lods
fnstsw
std
in
mov
jmp
pop
mov
mov
mov
aaa
loopne
jp
push
adc
or
xor
add
pop
popa
add
pop
dec
jecxz
into
mov
cli
xchg
mov
pop
xor
sbb
imul
out
into
pushf
mov
fwait
mov
cmp
data16
mov
leave
ficom
mov
jl
sbb
gs
and
sti
xchg
mov
out
xor
loope
pop
lock
pop
cmp
out
or
cmp
fdiv
das
push
dec
push
mov
and
aam
mov
iret
push
cwde
js
loop
pop
cmps
mov
lds
test
adc
jecxz
stos
jno
xchg
and
stc
pop
sbb
outs
mov
mov
les
ins
je
push
mov
enter
and
push
jle
push
cmp
test
add
or
(bad)
ins
rol
imul
loope
in
push
std
push
xor
xchg
and
mov
mov
or
loopne
clc
in
jl
rcl
jbe
sahf
dec
xchg
push
test
add
lahf
cmp
lahf
ds
pop
or
inc
inc
(bad)
adc
inc
or
pop
sbb
and
in
and
pop
or
(bad)
retf
dec
les
nop
std
inc
push
js
enter
fmulp
sahf
mov
inc
dec
and
jmp
or
adc
or
xor
cs
test
lea
jbe
add
jg
call
mov
iret
cmp
xor
pop
es
mov
aad
dec
xchg
inc
add
movs
sub
popf
retf
js
pop
sub
xor
aam
pop
aam
push
and
sbb
(bad)
fwait
(bad)
xchg
data16
(bad)
aam
icebp
imul
fsub
lods
mov
fild
ss
and
stc
add
test
xlat
lock
lods
lods
pop
retf
and
mov
ret
out
push
mov
mul
add
sub
xchg
lods
jl
dec
cmp
test
arpl
adc
and
dec
cwde
fwait
test
stos
push
rol
mov
ss
cmp
mov
xor
cmp
dec
push
hlt
ss
mov
jmp
popa
or
cmp
add
xor
rol
test
retf
sub
sbb
jbe
xor
call
frstor
inc
dec
inc
xchg
cmp
sbb
(bad)
ds
arpl
aad
dec
fcomp
(bad)
bound
inc
nop
iret
xchg
shr
and
cs
ss
pop
lea
dec
fisubr
or
cmp
fsub
add
pop
sub
sub
dec
adc
es
into
mov
cmp
(bad)
es
cmp
scas
mov
fld
mov
ss
jg
xor
aad
add
(bad)
xlat
mov
jg
int3
lock
mov
mov
push
stc
push
rol
sub
sub
hlt
and
or
inc
aas
inc
xor
push
scas
in
mov
add
into
adc
into
inc
mov
lods
ds
jbe
movs
xchg
xor
sbb
pusha
push
imul
aad
cmp
imul
xor
sbb
ja
aad
jnp
cld
xchg
aas
lea
and
push
leave
leave
push
cmp
(bad)
push
ins
pusha
and
lods
ins
out
nop
jg
jmp
jmp
inc
cmc
rcr
or
xchg
retf
scas
mov
sahf
daa
sub
inc
mov
cwde
fimul
fwait
mov
mov
pop
push
xchg
rol
test
sbb
mov
js
pop
fsubr
hlt
dec
sub
ins
stos
call
pop
sub
aam
add
test
scas
push
clc
ss
jae
adc
cmp
in
sub
lock
xchg
call
cmp
adc
push
mov
mov
aas
mov
stos
jno
pop
xor
cmp
(bad)
pushf
popa
lahf
fs
xchg
sti
dec
cmps
xor
add
scas
stos
sub
ds
jae
ins
pop
mov
add
mov
or
push
into
or
bound
arpl
cmp
pop
and
test
jle
mov
or
adc
xchg
loopne
es
sub
sbb
add
sti
cdq
mov
xor
in
jns
add
pop
jbe
les
pop
push
outs
leave
int
and
(bad)
push
aaa
pop
lods
inc
repz
rcl
shl
lods
jo
sub
cmc
test
(bad)
movs
or
mov
aad
pop
cmp
mov
pop
rcr
cmp
push
push
(bad)
outs
or
adc
out
xchg
sbb
inc
call
pop
sbb
and
sub
bound
das
mov
fs
les
loopne
cld
pop
ret
dec
inc
push
lods
xchg
ret
je
jge
xor
call
push
mov
pop
adc
jbe
aaa
cmps
nop
iret
inc
adc
xchg
adc
clc
push
push
sub
bswap
xorps
leave
sbb
pop
mov
fst
dec
mov
ror
cdq
jae
sub
movs
std
sahf
loopne
and
call
lahf
iret
cmp
mov
sti
repnz
mov
enter
pop
push
push
xchg
mov
pop
stc
mov
(bad)
and
add
sahf
pusha
mov
popa
cwde
mov
xchg
sbb
mov
(bad)
rcl
dec
cli
shl
add
scas
mov
hlt
je
dec
(bad)
in
mov
outs
dec
sar
int
cmp
adc
and
lahf
imul
inc
je
mov
jp
fwait
xlat
pop
pusha
scas
sub
jecxz
pop
pop
or
jl
out
sbb
imul
popa
jbe
or
add
(bad)
fadd
mov
js
xor
les
cmp
ret
(bad)
dec
push
mov
xchg
xor
mov
push
sbb
(bad)
aad
ss
mov
xchg
cdq
add
out
push
mov
sub
imul
test
sub
mov
call
sub
mov
mov
or
jo
int
pop
pop
adc
and
sbb
(bad)
pop
mov
fsub
sub
sbb
and
dec
test
mov
push
xor
popf
xor
lods
push
loopne
pop
lahf
xchg
fistp
ss
jmp
push
dec
sti
push
clc
int
pop
in
stos
cmc
arpl
and
jmp
adc
sahf
in
push
fist
or
push
stos
repnz
jge
call
(bad)
mov
xchg
mov
fnstsw
lods
rol
push
cmps
jo
dec
and
outs
mov
out
push
sar
(bad)
xchg
pop
mov
or
ins
adc
cwde
mov
push
jle
scas
vpermilpd
jmp
adc
push
adc
js
fmul
jge
mov
retf
test
mov
dec
or
inc
test
mov
rcl
mov
xlat
inc
gs
inc
sbb
clc
sti
stos
ds
in
lock
into
mov
adc
ins
sbb
cwde
(bad)
popa
jl
inc
xor
dec
aaa
hlt
dec
xchg
fst
ja
add
push
mov
out
mov
mov
int3
ja
sbb
out
jle
sub
mov
test
(bad)
and
data16
mov
mov
out
fisubr
xchg
mov
ss
cmp
sbb
push
adc
sar
pop
pop
cmps
xlat
dec
pushf
pop
push
sbb
push
(bad)
mov
cmp
cmp
sub
imul
scas
outs
shr
mov
sbb
into
nop
adc
sub
adc
movs
stos
int
icebp
cmp
jp
pop
jmp
or
int3
xor
sbb
push
jg
in
rol
repnz
xor
mov
or
cmp
mov
repnz
addr16
stos
fldcw
jmp
sbb
inc
out
cmp
jl
pop
cs
inc
or
cmp
inc
mov
jnp
pop
dec
jb
add
outs
retf
sbb
push
pop
or
xor
cmp
cmps
jmp
ret
ss
enter
or
mov
shl
fsub
int3
pop
inc
nop
mov
icebp
add
lea
mov
xchg
fcmovb
push
mov
scas
inc
outs
loopne
add
pushf
xchg
ss
shr
pop
xchg
les
pop
call
shr
movs
scas
lods
fdiv
pop
mov
mov
inc
lea
cs
sbb
pop
or
adc
data16
and
cmc
movs
int3
xlat
movs
sbb
push
fstp
sub
mov
push
sub
mov
push
sbb
pop
in
and
imul
rol
xchg
addr16
mov
dec
das
or
test
call
xchg
mov
(bad)
js
aas
lods
iret
jbe
inc
nop
xlat
adc
or
test
std
xchg
jmp
pop
pushf
adc
xchg
in
xchg
(bad)
mov
jmp
in
ret
call
lock
xor
shl
sub
or
stos
cmp
add
aad
pop
test
stos
mov
fistp
pop
mov
lock
jge
and
adc
scas
cmp
or
je
or
push
loope
icebp
lds
data16
ret
popa
movs
pop
push
cmp
sahf
cdq
cmp
in
out
push
fcom
arpl
jb
retf
mov
push
stos
in
dec
cmp
out
mov
fimul
dec
mov
inc
pop
or
xlat
and
jge
fxch
sbb
gs
jmp
xchg
shl
test
bound
ins
inc
lea
add
inc
aad
leave
sbb
shl
mov
add
adc
int3
pop
sbb
sbb
xor
adc
aam
imul
sub
add
cs
arpl
mov
ins
fdivr
sbb
push
push
nop
movs
call
jmp
jmp
adc
jmp
gs
icebp
jnp
push
cmp
jmp
jle
push
xchg
iret
stc
xor
add
cmp
test
sub
fnstsw
jno
loop
push
push
adc
jae
es
ins
addr16
sbb
jp
aam
mov
pop
sbb
jo
lods
in
rcr
es
xor
cmps
jno
xchg
push
arpl
scas
fwait
push
jmp
mov
in
or
ret
js
(bad)
xor
mov
mov
cmp
add
push
mov
jne
inc
jecxz
lea
and
int
push
sub
push
cmp
pop
imul
cmp
inc
cdq
dec
js
xchg
pop
sbb
ds
and
aad
daa
dec
dec
pop
sub
and
mov
test
jmp
inc
lds
jns
xor
mov
popa
(bad)
les
and
sar
call
pushf
pop
shr
scas
pushf
imul
das
add
daa
in
cmp
cmp
cmp
sub
add
push
sti
xor
outs
jl
mov
vmovaps
aas
leave
stos
mov
scas
adc
fidivr
cmp
dec
adc
call
out
aaa
out
dec
mov
jo
out
mov
mov
out
bound
xchg
loop
(bad)
adc
push
adc
inc
fwait
sti
push
imul
dec
xor
add
and
mov
jmp
lock
(bad)
pusha
jp
dec
mov
and
or
mov
adc
pop
xchg
ja
jne
je
retf
cmp
pop
and
pop
mov
dec
scas
popa
and
loopne
xchg
fild
and
jg
loope
add
fld
xor
cmp
inc
mov
dec
ja
mov
imul
mov
mul
pop
ficomp
cmp
leave
test
mov
rol
xchg
scas
sbb
xor
cmps
mov
jle
push
enter
or
add
dec
(bad)
out
pop
clc
push
dec
sbb
and
daa
inc
and
jl
push
cmp
sbb
push
call
dec
adc
ins
imul
imul
xchg
retf
ins
fisttp
fdivr
in
retf
les
xchg
enter
push
xchg
inc
mov
mov
dec
cmps
pop
shl
xchg
jo
fwait
jl
jne
or
push
out
mov
mov
in
ss
xchg
lock
test
int3
nop
out
jmp
and
es
inc
adc
fisub
jbe
or
aaa
icebp
les
js
mov
fstp
sub
ins
(bad)
inc
jo
sbb
mov
ins
cmps
dec
pop
out
sbb
(bad)
sub
and
shl
fmul
int3
(bad)
popf
xchg
xchg
rcl
push
jg
(bad)
sub
push
(bad)
mov
or
mov
xor
dec
push
int
aaa
or
pop
mov
sub
lahf
inc
or
add
and
in
mov
sbb
adc
fisttp
push
daa
push
push
pop
aas
add
xchg
mov
movs
cld
loope
rol
fcomip
ret
loopne
jg
xchg
call
addr16
aad
and
push
repnz
xchg
(bad)
sbb
mov
inc
xchg
mov
fstp
retf
pusha
cmp
ror
fistp
icebp
push
xchg
(bad)
popf
das
iret
test
dec
mov
push
retf
push
sbb
(bad)
(bad)
push
xor
or
pop
sub
and
mov
out
xchg
call
pop
nop
push
pop
cwde
(bad)
mov
xor
fld
sub
mov
bound
dec
xor
cld
push
mov
cmp
sub
cmp
jmp
movs
or
mov
pop
sbb
ret
jne
inc
fwait
bound
popa
(bad)
loop
aaa
fisub
clc
dec
mov
gs
fbld
sub
out
addr16
jge
lock
push
js
mov
sub
fbld
xchg
fdiv
adc
pop
xor
(bad)
bound
inc
push
push
lea
cmp
or
in
or
or
or
mov
lds
jl
xchg
in
mov
out
dec
jle
jnp
fucomp
call
push
fild
or
inc
or
sbb
dec
stos
sbb
in
inc
(bad)
das
ret
loopne
div
les
mov
adc
push
lods
push
push
test
push
gs
inc
cld
xchg
(bad)
sbb
cld
pop
sti
and
sbb
mov
ins
ins
imul
ror
mov
pushf
mov
lds
lea
icebp
xor
or
dec
int
push
lods
mov
xchg
push
sub
xchg
fwait
into
push
cmp
lahf
jmp
or
ss
fs
sbb
cdq
xlat
cs
in
pop
mov
pop
inc
add
inc
sahf
pop
scas
mov
test
xchg
mov
mov
push
mov
ret
inc
xchg
jno
pop
mov
xor
in
mov
fdiv
push
cmps
mov
mov
adc
cld
pop
outs
les
sub
loope
aam
adc
cmps
jl
add
jg
fld
xchg
mov
pop
and
push
adc
and
push
pop
xchg
enter
push
sub
rcr
mov
nop
fcomp
pop
push
or
add
shl
sbb
je
push
stc
mov
or
(bad)
(bad)
mov
mov
mov
out
sbb
jle
sbb
fbld
fld
mov
aas
cmp
popa
sub
bnd
add
lods
xchg
dec
push
push
aaa
sbb
loope
xchg
adc
mov
jae
sub
call
repz
cmp
xchg
and
retf
push
jge
dec
rdmsr
(bad)
mov
or
inc
sbb
push
mov
enter
dec
rol
fwait
dec
and
lea
movs
inc
mov
(bad)
sub
in
icebp
pusha
sub
xlat
add
cmp
ss
ss
je
push
sbb
inc
pop
xor
cmp
jecxz
push
loope
xchg
imul
inc
and
pop
retf
into
outs
xchg
dec
sub
push
je
mov
inc
js
icebp
ret
sbb
aad
fldcw
sub
mov
push
xchg
mov
pop
and
fdivr
sahf
xchg
xchg
push
lds
push
iret
jle
iret
inc
aam
fs
ss
dec
clc
cwde
lods
adc
ja
push
mov
mov
repnz
addr16
lods
dec
pop
adc
or
cs
cdq
pop
cdq
push
or
jo
dec
and
cmp
scas
std
sbb
fmul
adc
pop
xor
jg
sub
cmps
(bad)
adc
dec
dec
aam
fwait
popa
pop
push
fadd
xor
ds
xchg
push
es
jge
cmp
rol
sbb
rcr
pop
dec
outs
ss
aaa
cmp
movs
mov
sub
mul
cmp
popf
push
mov
dec
retf
inc
inc
out
(bad)
cld
clc
fs
mov
stos
in
sub
dec
add
sbb
inc
mov
dec
aad
aaa
retf
jmp
pop
call
stos
hlt
aam
rcl
xor
out
test
inc
in
inc
adc
lds
cmp
ins
popa
retf
dec
in
fwait
pop
cmp
inc
cld
fsubr
fstp
(bad)
xlat
lods
sub
je
ds
or
movs
add
add
shr
or
mov
xchg
mov
sub
jns
(bad)
xor
fld
or
popf
fst
outs
in
mov
mov
frstor
ret
add
iret
rcl
retf
jmp
sub
cwde
lods
sbb
push
outs
call
ss
adc
sbb
fstp
pop
adc
push
ficomp
mov
mov
test
pop
loop
(bad)
pop
or
rol
movs
cmp
aam
pop
outs
add
jecxz
pop
jmp
jae
test
dec
ret
push
xor
sbb
sub
add
cmp
dec
jnp
aad
xchg
imul
and
repnz
js
jo
ss
imul
ins
icebp
add
sub
push
dec
pop
add
dec
movs
adc
test
mov
jne
mov
loop
add
xor
cmp
sahf
mov
or
movs
xchg
pop
mov
pop
sbb
sbb
xchg
pop
ret
jbe
push
je
std
fdivr
xor
in
add
fld
jns
aas
pop
repz
icebp
and
inc
fild
ror
out
ret
mov
lods
adc
add
test
mov
add
call
dec
and
lods
test
shr
cmp
xor
xchg
inc
dec
xchg
leave
xchg
push
jmp
out
fdivp
xlat
fs
push
jp
xchg
jmp
popa
cmp
mov
pushf
cld
addr16
xchg
mov
lahf
pop
jge
aad
cmp
or
mov
cmp
shr
jno
jnp
lods
sub
inc
ja
pop
xor
jp
dec
mov
mov
cmp
sar
out
jnp
cmp
les
daa
mov
jne
retf
push
gs
xor
pushf
xor
movs
fst
push
cmps
stos
bound
and
xor
es
loop
xor
and
fwait
movs
in
adc
je
push
popf
jns
pop
xlat
jl
dec
pop
pop
sbb
pop
test
out
jo
mov
inc
mov
xor
xchg
ret
cmc
dec
push
cmps
sti
fs
test
sti
jg
pusha
ds
mov
imul
retf
outs
retf
(bad)
jle
mov
cmp
xchg
add
adc
and
out
sub
pop
push
jg
test
mov
mov
in
ret
repnz
stos
jne
test
test
ja
bound
cdq
cwde
jae
daa
push
sub
mov
aam
loop
fdiv
cld
data16
or
sub
pop
je
dec
cwde
(bad)
sub
nop
xor
mov
mov
push
jno
bound
xchg
xchg
or
ds
test
out
shr
repnz
pop
push
mov
jp
jb
das
cmp
in
jo
bound
mov
dec
xor
aam
addr16
mov
icebp
mov
inc
sub
and
cmps
sub
movs
adc
ror
jmp
pop
jmp
inc
pop
cmps
pop
pop
cmovbe
and
xchg
ror
jg
mov
inc
fsub
xor
scas
lock
sub
adc
mov
inc
and
push
test
fsub
es
dec
idiv
xchg
shl
imul
jge
push
jp
scas
jno
pop
pop
push
inc
adc
(bad)
cdq
test
movs
int3
pusha
das
into
fcomp
xor
sbb
neg
or
cdq
(bad)
push
and
es
out
or
daa
xor
jne
xor
fwait
or
sub
jle
out
enter
fadd
ja
ret
jmp
mov
jl
int3
int3
fisttp
cmp
outs
push
lahf
ror
cmc
xchg
pop
xchg
sub
mov
lss
and
int
fisubr
mov
push
mov
mov
ret
and
push
mov
add
and
pop
jnp
sub
jo
stc
in
ret
sub
push
adc
loopne
out
in
adc
rol
enter
into
mov
cmps
mov
add
and
in
dec
(bad)
inc
shl
add
fwait
xor
jne
fcmovne
jno
retf
xchg
pop
xor
shr
(bad)
in
jno
movs
icebp
or
fcom
lahf
icebp
and
add
shl
xchg
pop
(bad)
mov
xchg
je
push
sub
and
call
push
sbb
sub
je
imul
cs
sbb
and
xchg
sub
mov
jo
mov
pop
jecxz
(bad)
jo
stos
xchg
pop
rol
jb
or
call
movs
(bad)
div
ja
bound
add
or
das
retf
push
pop
adc
or
pop
pop
bound
cmp
into
js
mov
xor
inc
or
push
ds
test
xchg
popa
cmp
dec
rol
xchg
push
call
or
adc
push
scas
inc
jo
sbb
fst
and
mul
lea
fisub
mov
sbb
adc
out
push
mov
iret
call
mov
sti
and
sub
fstp
nop
add
sub
out
(bad)
stc
jmp
mov
scas
test
sub
cdq
add
cmps
and
and
(bad)
push
add
mov
push
nop
rcl
inc
mov
cmps
sub
test
lods
call
mov
aam
pop
sub
lods
div
push
out
mov
fdivr
push
sti
loopne
cli
add
sbb
aad
fstp
cmp
sub
xor
or
cdq
cdq
(bad)
fisub
js
in
(bad)
cmp
jmp
push
add
cmp
mov
je
mov
mov
aaa
inc
cmc
jb
int
inc
mov
cmp
leave
mov
aad
add
je
and
dec
and
adc
mov
push
cdq
retf
and
xchg
dec
jmp
cmps
push
enter
cmc
scas
and
fdivr
mov
mov
xchg
dec
push
xor
xchg
je
mov
cmps
inc
push
jbe
ret
xor
push
mov
pop
test
sub
movs
cdq
and
stos
mov
ins
cs
sar
xchg
loopne
mov
data16
je
push
nop
call
inc
int3
sbb
in
or
push
mov
(bad)
in
and
push
pop
retf
int3
ret
int3
cmp
add
pop
cmps
pop
push
and
pusha
sub
jecxz
nop
dec
push
xor
add
or
mov
sub
aas
jo
jne
push
loopne
pusha
xchg
and
adc
fs
sbb
push
sub
jg
repz
mov
jmp
mov
lds
adc
(bad)
and
push
cld
int3
or
je
mov
mov
das
inc
test
add
cmp
and
or
xchg
movs
push
movs
sbb
mov
jns
mov
add
pop
jb
inc
out
and
push
repnz
or
push
inc
xor
nop
adc
cmp
or
mov
adc
ss
nop
mov
xchg
dec
cld
mov
cld
cmp
in
mov
inc
xchg
sbb
push
jecxz
fcomp
xor
out
push
div
mov
cmp
aaa
and
adc
adc
dec
push
daa
sub
lock
xor
xor
jmp
add
jg
pop
(bad)
jns
push
pop
(bad)
leave
jg
jge
jg
xor
mov
push
dec
jbe
aas
ja
clc
add
cli
cmp
pop
sahf
dec
dec
jle
mov
sbb
loop
mov
jo
mov
push
jns
jae
add
sahf
dec
je
scas
mov
sub
les
pop
inc
out
cdq
imul
sub
lods
das
jmp
pop
(bad)
sbb
int3
retf
das
(bad)
adc
mov
sbb
es
cmp
xchg
sbb
mov
xlat
dec
mov
cmps
push
add
leave
push
sbb
cli
mov
les
or
mov
sub
jp
push
pop
out
inc
iret
int
test
adc
sti
xor
pop
rcl
es
inc
sub
sbb
cmp
dec
dec
jp
pop
mov
inc
push
int3
and
push
jmp
xor
data16
inc
call
inc
mov
add
sub
(bad)
xchg
fisub
mov
call
xchg
xchg
and
xor
stos
and
gs
xchg
imul
les
push
sub
movs
cwde
push
retf
xchg
pop
pop
push
mov
push
jno
jg
test
xor
clc
mov
inc
fadd
ret
push
int
call
mov
or
ins
fnstsw
addr16
and
mov
ins
mov
pop
mov
jbe
icebp
lock
dec
int
inc
movs
scas
test
sub
(bad)
bound
mov
pusha
xchg
lock
mov
or
cmp
cmps
xchg
stos
mov
push
je
ja
mov
jmp
mov
inc
cdq
xor
push
xchg
adc
dec
mov
call
mov
out
retf
aas
ficom
push
aam
pop
xchg
gs
out
ret
inc
fld
pop
sbb
xor
loope
popf
cmp
mov
xchg
mov
push
jmp
popf
or
jb
ror
cdq
sbb
mov
mov
pop
ret
(bad)
pop
test
adc
stos
cs
and
adc
xchg
stos
mov
retf
into
or
das
fs
cmp
add
add
or
sbb
in
inc
leave
ins
sbb
push
dec
test
jo
icebp
lea
inc
mov
stos
lods
sub
cdq
sub
xchg
adc
jl
mov
rol
ins
mov
pop
retf
stos
in
ss
in
aaa
jl
jl
mov
mov
leave
cmp
out
lds
addr16
adc
mov
pop
and
and
pxor
sub
adc
inc
shl
ret
sbb
test
loop
xor
jmp
cmp
les
shl
xlat
cli
inc
icebp
add
jmp
pusha
sub
into
xor
int3
int3
int
and
or
and
mov
(bad)
jno
sub
xor
imul
inc
jp
cdq
xchg
imul
mov
(bad)
retf
push
jno
test
sti
rcl
fs
scas
int
inc
scas
mov
in
lea
bound
or
in
call
jae
sub
xchg
cmp
lds
mov
mov
xchg
push
aam
movs
adc
cmp
rol
popa
retf
and
jb
pushf
mov
adc
sub
or
movs
movs
mov
test
mov
sahf
cmps
add
out
stos
xor
jmp
push
inc
pop
imul
in
mov
xor
in
int
push
mov
out
lahf
imul
mov
add
sbb
call
mov
inc
mov
and
fsubr
inc
sbb
inc
inc
sar
and
cdq
xchg
mov
xor
pop
jmp
in
xchg
inc
ins
div
fcom
retf
stos
lods
fstp
or
inc
push
and
scas
scas
inc
adc
push
dec
rcr
(bad)
xlat
(bad)
loope
pop
sbb
stos
xchg
outs
adc
cmp
dec
add
ror
and
pushf
adc
push
xchg
loop
scas
ss
pushf
inc
mov
jecxz
pop
cld
or
and
xlat
add
add
sub
mov
push
sub
or
and
into
sbb
mov
cdq
adc
dec
outs
in
sti
or
or
daa
ss
adc
call
out
xchg
adc
adc
and
aas
dec
pop
or
and
cmp
cmp
and
fst
inc
mov
pop
push
mov
xchg
mov
je
jecxz
adc
pop
adc
fcom
shl
and
pushf
leave
xchg
sub
xlat
out
cmp
xchg
sub
out
pop
jns
fsubr
cmp
call
(bad)
sbb
jmp
adc
out
fs
and
pop
addr16
push
fadd
inc
movs
sbb
loop
jno
or
xchg
xor
and
es
gs
sub
test
loopne
inc
movs
adc
pop
dec
push
aaa
mov
es
loop
dec
test
aam
mov
adc
test
mov
jb
aad
pushf
enter
shl
ror
push
dec
cmps
xchg
pop
(bad)
lock
mov
mov
inc
cmp
ror
in
shl
sub
popa
bound
bound
xor
cmc
adc
xchg
pusha
dec
bound
mov
cmp
gs
inc
jmp
out
and
add
(bad)
fsub
or
xchg
mov
add
retf
push
mov
daa
icebp
jae
push
xchg
pop
sub
dec
xchg
adc
ret
add
icebp
fld
(bad)
repz
jmp
aaa
add
dec
jne
xor
jmp
mov
fwait
and
cpuid
adc
xor
in
mov
sub
push
adc
and
or
mov
sub
xchg
mov
sahf
jb
push
cwde
(bad)
(bad)
add
cwde
pop
cmps
mov
xor
inc
jmp
mov
int3
mov
pop
(bad)
and
push
leave
ins
xor
nop
ret
mov
into
inc
imul
xchg
mov
jnp
pop
shl
dec
mov
imul
sbb
shl
and
fdiv
rcl
loope
test
sub
popa
sahf
mov
out
pop
fstp
and
sub
into
sbb
call
mov
nop
mov
pop
sbb
out
(bad)
pop
push
daa
loopne
ja
cmp
mov
dec
sub
adc
sub
sub
loopne
mov
add
shr
mov
xor
sub
and
sbb
aad
repnz
sub
out
pop
pop
in
call
out
mov
cmp
pop
(bad)
(bad)
test
retf
add
aaa
sbb
sub
daa
inc
in
out
and
jle
sub
push
je
mov
or
sub
add
xor
push
push
iret
outs
and
aad
push
xchg
or
outs
adc
cmp
mov
or
jb
xor
dec
mov
enter
ja
cwde
or
jnp
cmps
ret
arpl
sub
out
ins
fcom
and
jg
std
aaa
push
in
xchg
mov
mov
int
jge
mov
cdq
pop
(bad)
jecxz
adc
xchg
in
xchg
inc
push
xor
cmp
xor
cld
test
cwde
cmp
jbe
cmp
dec
call
dec
ficom
aam
es
aam
ret
out
leave
adc
xchg
push
mov
jp
(bad)
(bad)
xor
ins
add
aad
pop
fnstenv
and
nop
lock
sbb
jmp
scas
dec
mov
scas
sub
fs
sub
test
ret
cmps
cs
mov
jbe
xor
sahf
push
push
paddq
shr
add
adc
xchg
cmc
stos
gs
push
pop
adc
pusha
sub
cdq
les
shl
xor
fwait
xchg
xor
xchg
scas
and
sbb
push
cmc
imul
data16
out
int
cmp
ins
add
aas
mov
hlt
ficomp
xchg
pop
xor
std
cdq
data16
or
fild
aad
add
(bad)
push
xchg
adc
xor
fisttp
ins
mov
scas
mov
and
push
and
mov
pop
dec
clc
out
and
hlt
call
pop
sub
xchg
mov
mov
popa
std
xchg
(bad)
inc
mov
shl
dec
jmp
clc
pop
test
mov
add
mov
sar
mov
clc
cmps
ret
fsubr
jb
push
lods
into
inc
add
fiadd
adc
iret
and
jnp
push
call
ins
(bad)
inc
adc
ja
aam
xchg
jl
or
mov
jo
(bad)
pop
adc
rol
sti
adc
jecxz
sti
inc
pop
pop
cmp
cmps
mov
jb
push
clc
rcr
pop
mov
mov
mov
jmp
in
lds
dec
out
loop
xchg
ret
and
mov
dec
jecxz
cmp
sbb
mov
adc
ret
xor
add
mov
je
cmc
test
call
bound
(bad)
test
xor
sbb
(bad)
cmp
ss
and
jnp
lds
jp
daa
sbb
fisttp
xchg
cdq
cmps
add
mov
jecxz
test
xor
sub
xchg
or
(bad)
cdq
add
add
fwait
cmp
mov
add
and
retf
sbb
ret
or
or
xchg
fidivr
or
xchg
or
jb
cmp
dec
sub
sub
jl
sub
xchg
xor
arpl
ret
mov
jp
movs
ret
mov
adc
cli
pusha
and
xchg
and
pop
xor
push
cdq
sub
je
mov
mov
or
jnp
and
adc
enter
inc
jl
mov
and
mov
add
cmp
add
cwde
pop
mov
mov
jmp
popf
xchg
mov
jne
(bad)
fldcw
movs
(bad)
xchg
xor
pop
dec
stc
adc
imul
fbstp
mov
rcl
inc
shl
cmc
pop
cmps
cmp
repz
repnz
mov
dec
(bad)
mov
lods
push
add
aaa
or
ja
jg
push
pop
in
xor
mov
sbb
adc
cmps
mov
stos
mov
js
scas
sub
xor
xchg
popa
mov
xor
imul
ss
jp
aaa
jle
cmp
into
sahf
int
shl
fs
ins
test
pop
hlt
or
pop
mov
fist
jmp
mov
xor
jl
sti
cmp
lods
cmp
(bad)
mov
dec
jmp
sbb
(bad)
cli
xchg
inc
mov
idiv
jbe
lahf
or
test
adc
mov
shl
sbb
push
inc
(bad)
mov
popf
xchg
shr
test
ins
fsubr
icebp
pop
sub
in
ins
jl
lahf
out
and
cmc
jg
cmp
test
ins
jg
jno
cmps
sub
and
and
and
stos
push
enter
add
mov
and
mov
pop
mov
pop
dec
pop
and
imul
sbb
int
pop
aad
enter
cmc
pusha
jb
jbe
pop
pop
pop
and
sar
sbb
add
pop
cld
push
pop
pop
pop
and
cmp
cmp
jl
das
scas
adc
push
inc
jo
pop
or
arpl
es
add
sbb
dec
pop
das
mov
xchg
xchg
out
jge
sbb
stos
daa
inc
jne
sbb
fst
in
inc
in
xchg
cmp
sbb
imul
mov
add
pusha
in
dec
sar
sub
inc
mov
push
mov
sub
loopne
jle
xchg
add
pop
and
jb
pushf
inc
jge
sbb
cs
mov
jbe
ror
cwde
cmp
cmp
jae
pop
lock
dec
movs
fcom
aam
leave
inc
pushf
add
mov
stos
add
mov
xlat
imul
dec
push
lods
mov
dec
push
test
inc
mov
dec
in
aaa
add
push
pop
test
sar
dec
fs
cmp
mov
mov
and
mov
jecxz
cmp
cmp
mov
aaa
lock
lahf
mov
sti
jmp
sub
cld
xchg
popa
mov
daa
cmp
lahf
cld
retf
jecxz
aaa
cli
pop
and
ret
mov
inc
neg
dec
xor
push
out
mov
mov
jns
xchg
scas
fimul
fstp
enter
inc
lea
adc
ficomp
fisub
jbe
clc
add
pop
stos
push
dec
and
test
cli
add
outs
push
and
push
out
pop
or
les
mov
push
aas
std
xor
mov
and
xchg
enter
inc
jbe
std
(bad)
mov
mov
mov
mov
(bad)
int
sbb
push
out
sub
ror
(bad)
in
(bad)
out
push
xor
popf
dec
inc
xchg
out
in
pslld
test
sub
or
dec
into
adc
inc
jae
or
pusha
into
ins
sub
xchg
push
jb
xchg
mov
mov
retf
and
arpl
lea
test
outs
inc
in
mov
xchg
nop
sbb
push
out
push
(bad)
or
or
sahf
xor
scas
mov
dec
jb
mov
fist
sbb
xchg
pop
int
pushf
mov
jno
or
and
xchg
cmp
cmp
shl
(bad)
inc
mov
xchg
arpl
dec
mov
mov
lds
ret
iret
jae
pusha
xor
imul
test
scas
adc
nop
inc
or
adc
and
loope
dec
ins
mov
jne
and
mov
out
xchg
sahf
sar
jo
retf
gs
push
mov
and
sbb
pop
sub
xchg
mov
xchg
call
dec
add
mov
and
sub
leave
mov
retf
jl
jmp
or
imul
cmp
outs
stc
loopne
sahf
mov
sub
push
inc
aaa
ins
or
test
and
sbb
push
mov
pusha
push
div
jb
(bad)
popf
mov
xlat
lods
in
sub
xchg
push
mov
jbe
dec
add
push
std
mov
adc
mov
jge
push
add
inc
or
sub
push
lods
add
xchg
inc
mov
push
cli
jo
push
jmp
ins
cli
xor
mov
gs
es
adc
lock
outs
cdq
dec
inc
test
pop
jmp
adc
lds
sbb
jbe
mov
(bad)
fstp
mov
rol
(bad)
enter
jne
sahf
movs
cmp
out
add
das
jle
or
and
inc
mov
inc
or
cmp
jg
sub
cmp
cli
fstp
fdiv
sub
mov
inc
dec
cli
push
daa
xor
jmp
je
iret
push
cmps
loopne
xchg
add
test
in
jo
mov
push
or
das
push
push
add
cs
rol
or
imul
popa
retf
cdq
rol
xchg
mov
xlat
sar
pop
jns
fwait
enter
sub
jns
ret
mov
xchg
mov
lds
lods
mov
cmp
jp
mov
xchg
mov
adc
adc
and
lods
lahf
xchg
js
pop
std
pop
push
adc
hlt
das
test
jae
mov
mov
xor
jo
cmp
push
iret
clc
ins
and
and
fbld
pop
cs
enter
fst
icebp
inc
cmp
ins
cmps
stos
pop
shl
xlat
add
loope
sbb
cmps
xchg
mov
sub
pop
sbb
call
jae
xor
xlat
or
jnp
ins
inc
lahf
rcr
in
scas
lahf
retf
ins
imul
ins
mov
idiv
mov
mov
push
(bad)
and
push
dec
mov
inc
xchg
xchg
jl
repnz
imul
movs
bnd
xor
pop
dec
lahf
or
stc
pop
pop
or
bound
push
shl
stos
inc
mov
sahf
sub
js
hlt
lods
xchg
jp
push
lahf
and
mov
loope
add
ficomp
and
push
jl
adc
sar
out
stc
mov
sub
je
mul
imul
mov
fs
enter
stos
sub
ss
jbe
out
fld
stos
xchg
pop
inc
cmp
and
jns
popf
ins
(bad)
pop
jp
cld
das
mov
or
sbb
pop
cmp
xor
imul
mov
push
push
cmp
xor
dec
mov
inc
cmp
out
cmps
nop
dec
cmp
lahf
outs
cmp
retf
pop
mov
hlt
mov
sub
imul
cmps
sub
sbb
aas
out
(bad)
mov
ret
and
add
jns
arpl
cmps
and
shl
fwait
mov
fs
ins
and
shr
jnp
sbb
push
jmp
push
mov
fs
fidivr
sar
sbb
js
dec
(bad)
test
pushf
or
xchg
jmp
sbb
and
xor
mov
(bad)
fcmove
data16
add
(bad)
cli
int
test
loopne
or
jae
pop
je
and
call
push
lahf
jp
sub
jecxz
rcr
fmul
push
or
sbb
or
mov
repnz
dec
mov
ins
lods
cmc
add
inc
sbb
aad
ret
inc
pop
jae
mov
push
fldenv
xor
rol
sti
and
arpl
sbb
cli
lahf
push
aas
xchg
jmp
jo
(bad)
jmp
inc
mov
imul
sub
outs
mov
aam
jns
ficomp
cmps
pop
jnp
sub
enter
int3
sbb
and
sbb
sub
mov
movs
cwde
cmp
push
jbe
jmp
js
popa
mov
fdivrp
dec
repnz
adc
ja
push
imul
push
sub
(bad)
jle
mov
lock
push
pop
test
je
sbb
sub
(bad)
xchg
lea
idiv
cmp
out
ret
jmp
dec
jle
and
ret
sti
enter
sub
inc
mov
rcr
push
test
retf
ja
cwde
in
add
mov
out
imul
cmps
lock
xchg
mov
adc
push
pop
retf
push
cmp
sub
(bad)
enter
push
and
mov
int
aad
xchg
mov
jmp
pop
xchg
cmps
sar
fdivr
mov
dec
fidiv
inc
ins
jns
xor
mov
xor
(bad)
jmp
fldln2
in
pop
mov
inc
push
sahf
xchg
mov
mov
stc
jb
mov
add
or
sbb
retf
loop
sbb
push
xor
gs
pop
sub
aas
cmps
test
jmp
jge
pop
or
xchg
int3
in
imul
repz
xchg
(bad)
test
cwde
mov
sub
sub
ja
frstor
sbb
call
jle
xor
div
movs
sub
cmp
aam
cs
jno
jae
pop
xor
fnstenv
ja
in
mov
jae
cmp
mov
fmul
fmul
fxch
cld
xchg
data16
retf
cmp
cmp
mov
mov
cmp
cmp
fistp
dec
arpl
scas
arpl
mov
lods
xchg
or
push
sub
mov
push
aas
push
std
repnz
(bad)
shl
sub
outs
dec
mov
in
push
xchg
sub
dec
inc
ds
jmp
mov
xchg
and
ret
int
push
mov
leave
jp
dec
loope
std
bound
setl
imul
into
aad
scas
mov
cdq
out
mov
sbb
jne
sbb
scas
dec
push
leave
es
xor
sbb
mov
data16
jg
push
cmp
mov
shl
mov
dec
mov
inc
mov
test
outs
fiadd
xchg
jno
cli
retf
cmp
shld
xchg
xor
pop
aad
ret
in
ds
dec
inc
dec
push
and
scas
jmp
jmp
xor
imul
jb
or
ds
sub
mov
popa
xchg
cld
repnz
push
or
and
jb
xor
mov
inc
dec
cmc
or
shl
mov
lea
mov
dec
das
das
pop
xchg
mov
pusha
in
(bad)
out
adc
aad
rcl
inc
inc
jae
pushf
sahf
jns
dec
mov
push
dec
mov
mov
in
cdq
cmp
mov
int3
mov
pop
inc
ins
icebp
jp
dec
cmps
jno
jmp
and
mov
into
mov
lock
(bad)
aas
imul
bound
(bad)
nop
jp
jne
add
adc
repnz
leave
sub
fild
jle
dec
sti
add
movs
mov
sbb
xlat
test
and
out
xor
arpl
(bad)
adc
int
xchg
ins
int
sbb
bnd
mov
rcr
shr
dec
sub
jle
ins
ret
mov
mov
cwde
pop
out
and
and
dec
inc
jge
std
lock
jne
mov
mov
lds
aas
loope
xchg
pop
sbb
and
adc
push
fisubr
mov
enter
and
lock
arpl
adc
and
push
aaa
shld
(bad)
mov
leave
repnz
mul
call
xor
dec
ror
fld
hlt
aaa
mov
rcr
pop
sbb
mov
fcom
jmp
and
inc
imul
xchg
push
cmp
shr
mov
cmp
in
ins
popa
ss
adc
jmp
xor
js
add
movs
repnz
jg
xor
xor
cmp
js
xchg
inc
mov
and
in
sbb
push
cmp
outs
not
xchg
test
xor
ins
push
mov
dec
push
loopne
out
push
rcl
jbe
jne
cmp
sbb
rcr
xor
xchg
mov
ss
pop
dec
push
cmps
push
loopne
sbb
add
sti
iret
in
mul
jg
outs
rcl
sbb
nop
or
adc
xor
shr
jmp
rol
and
mov
pop
dec
mov
idiv
js
out
push
mov
xor
jno
ss
xchg
dec
clc
add
(bad)
jo
mov
jg
push
popa
sub
test
scas
retf
mov
dec
add
xor
jp
mov
jb
fwait
cmp
cmp
sbb
jle
pop
pop
push
aaa
and
cmp
fadd
dec
into
xchg
xor
sbb
pop
lods
test
fldenv
fiadd
sbb
adc
outs
adc
push
fimul
call
outs
in
push
cmc
pop
cmp
jecxz
push
cld
pop
stos
inc
xor
(bad)
ficom
lds
and
movs
dec
push
add
jae
pop
shl
sbb
add
outs
cwde
sub
popf
xor
imul
xor
out
test
adc
(bad)
out
inc
mov
mov
push
pop
jmp
mov
je
leave
loop
out
cdq
(bad)
xor
shl
enter
jecxz
sub
dec
xchg
adc
mov
popf
call
add
inc
inc
sub
sti
add
cli
cli
out
adc
jg
ret
aam
jl
mov
push
ja
data16
stos
pop
or
push
fs
aaa
(bad)
jno
dec
dec
jle
fisttp
pop
sti
repz
fmul
aas
imul
cmps
in
(bad)
repz
fimul
aas
lods
lahf
mov
into
and
xchg
and
iret
icebp
ins
xor
out
or
out
in
imul
(bad)
repz
mov
jp
out
push
shr
pop
aaa
sbb
movs
mov
ret
xchg
or
pop
cdq
imul
pusha
inc
push
not
in
fcmovu
(bad)
gs
in
mov
mov
xchg
retf
popa
dec
push
lods
cmps
mov
mov
jo
jb
hlt
pop
dec
call
adc
push
sub
jnp
pop
push
and
xor
jmp
in
dec
je
fwait
mov
push
fld
ret
add
mov
adc
push
lahf
stos
iret
xchg
xor
pop
sbb
pop
movs
addr16
scas
cmp
xchg
mov
les
fstp
stos
pop
leave
sub
sti
jecxz
push
mov
dec
call
mov
pop
adc
pop
add
xchg
cdq
mov
inc
mov
jnp
aaa
call
push
imul
jmp
cmp
ss
push
mov
xor
mov
bound
into
xchg
mov
cmp
sbb
out
js
lea
fidivr
dec
dec
movs
xor
ss
jnp
push
pop
lds
ins
mov
cmps
das
lahf
rcl
xor
lahf
out
out
cmp
test
enter
shl
out
inc
lods
nop
cmp
cmps
js
movs
add
and
pop
jp
xchg
ja
movs
or
sub
or
ss
fwait
in
mov
adc
inc
jle
dec
mov
cmp
sbb
retf
adc
loop
scas
in
inc
fild
in
enter
(bad)
or
mov
mov
jns
xchg
hlt
mov
dec
cmps
jl
jae
out
xor
into
js
xchg
(bad)
sti
popa
cdq
ret
xchg
(bad)
push
push
mov
sbb
sar
xchg
sbb
sbb
sbb
data16
int
das
fadd
out
add
int
xchg
push
js
jmp
std
mov
lahf
xchg
sbb
adc
lods
std
xchg
daa
xchg
push
popf
stos
sub
add
test
rcr
cmp
call
je
sub
xchg
lock
fistp
or
cli
sub
int3
mov
add
mov
scas
xor
in
xchg
out
sub
stc
sti
call
aas
and
adc
and
imul
pop
add
sbb
inc
cmps
mov
mov
jb
xchg
lahf
out
cmps
sbb
xchg
push
frstor
call
sub
movs
push
and
pop
lea
cs
mov
pop
push
ja
lock
xor
mov
imul
fisttp
or
clc
push
scas
icebp
mov
sbb
dec
mov
add
mov
nop
add
lods
out
jno
jecxz
xchg
inc
loope
lea
aam
jg
mov
mov
mov
mov
inc
into
dec
push
mov
gs
out
xor
aas
into
cmp
jno
push
pushf
jmp
sbb
mov
repnz
xor
enter
mov
mov
(bad)
repz
inc
xchg
pop
sub
and
shl
mov
mov
jl
pop
aam
lods
in
mov
cwde
ja
xor
xchg
mov
xor
mov
clc
lahf
icebp
call
xchg
adc
xor
sbb
mov
sub
pop
and
call
pop
jbe
clc
mov
loope
js
leave
jmp
cmp
adc
mov
js
pop
mov
data16
es
or
mov
pop
mov
ins
scas
fild
mov
cmp
ins
jno
pop
lock
pop
inc
jbe
call
inc
lods
mov
pop
repz
imul
adc
enter
pop
adc
dec
xor
es
cli
or
scas
enter
aam
fwait
(bad)
pop
sahf
cmovbe
(bad)
out
push
xor
mov
enter
sbb
push
call
dec
sub
pop
les
jle
inc
jmp
pop
mov
(bad)
repz
pop
mov
cmps
aas
fbld
add
dec
in
jge
and
pop
ret
dec
out
ror
sub
ins
scas
pop
(bad)
cmp
(bad)
iret
nop
mul
repz
into
sahf
lods
jb
dec
or
sbb
mov
adc
test
fwait
jmp
add
fnstcw
mov
mov
pop
mov
fldenv
test
cwde
add
je
loopne
and
or
sub
xchg
ja
in
push
jbe
std
xchg
shr
push
(bad)
(bad)
div
mov
ja
dec
add
call
stos
(bad)
loopne
fwait
or
neg
mov
(bad)
scas
out
sub
out
jmp
neg
jae
inc
cld
or
adc
cmp
and
in
retf
aam
inc
bound
retf
mov
cmps
pop
fist
or
out
rcl
or
sbb
scas
stc
inc
xchg
xorps
cmps
cmp
aas
add
mov
fs
test
pop
cmp
lahf
mov
in
loope
lahf
out
lea
fild
cmp
lds
mov
pop
(bad)
repz
mov
sbb
dec
inc
and
jnp
jb
out
inc
sbb
sbb
mov
inc
clc
in
xor
adc
aam
push
add
std
mov
pop
mov
shl
jne
pop
cmc
scas
fild
mov
arpl
adc
es
daa
jmp
int
cmp
popf
mov
test
or
sub
jmp
aad
mov
jle
push
loopne
mov
std
xor
push
pop
ret
mov
mov
or
xor
aaa
out
cld
scas
cld
leave
sbb
pcmpeqd
pop
gs
scas
xchg
imul
push
cdq
out
mov
rcl
fist
dec
outs
fisttp
stos
jae
pop
mov
pop
push
xor
and
inc
mov
mov
pop
jbe
(bad)
sub
jl
jg
cmovnp
outs
shl
ds
ret
int
out
or
iret
movs
fwait
retf
push
adc
xchg
adc
sub
or
jae
cmps
rol
lock
in
scas
mov
test
mov
sub
dec
jge
push
mov
push
push
fwait
cmc
or
jnp
adc
fisubr
or
mov
and
or
outs
push
xchg
push
cmc
cdq
dec
mov
pop
add
popf
clc
push
imul
pop
jbe
movs
shr
jle
cmps
std
xor
cmp
and
stos
mov
xchg
sbb
sub
js
inc
scas
mov
adc
mov
and
mov
adc
mov
fadd
adc
lods
cmps
pop
(bad)
(bad)
je
pop
(bad)
mov
jne
jl
mov
push
std
(bad)
dec
push
ror
int
lods
dec
loope
loope
add
popf
test
dec
ret
adc
jo
cmp
fldcw
jmp
mov
and
imul
repz
hlt
xchg
std
aam
xchg
aas
xor
mov
pop
and
mov
fimul
cld
and
(bad)
fidivr
aas
fwait
pop
mov
and
xor
pop
mov
ds
test
ret
stc
lahf
mov
aas
aas
push
aas
mov
int3
cld
pop
cmp
add
and
std
sbb
mov
jmp
mov
(bad)
aam
stos
aad
or
lea
minps
adc
fadd
dec
xor
xchg
cmp
xor
cld
push
dec
fs
and
and
js
test
fwait
pusha
sub
or
add
push
adc
test
fsubr
pop
inc
inc
movs
or
popf
and
mov
mov
jge
inc
cmps
jo
adc
mov
fcomp
ins
dec
xchg
add
es
pop
mov
xchg
sub
retf
dec
movs
adc
and
retf
sub
jl
mov
sub
out
cmps
dec
add
test
rcr
test
nop
sbb
shl
dec
push
push
adc
and
movs
lds
push
rcr
lods
cmps
loope
cmp
push
lock
xlat
(bad)
xchg
dec
repz
out
sbb
les
xor
cmp
pop
mov
cld
mov
(bad)
jae
sbb
push
adc
xchg
xlat
xchg
repz
jo
test
aad
and
aad
test
loop
pusha
fidiv
bound
out
(bad)
cdq
fcmovu
scas
into
push
push
js
loopne
mov
jmp
cmps
mov
adc
div
pop
pop
cs
out
dec
mov
inc
cmp
pop
sbb
repnz
out
jle
lahf
in
xchg
fld
outs
(bad)
loope
addr16
cdq
sbb
sbb
sbb
mov
lahf
loop
daa
mov
(bad)
je
mov
push
les
movs
sti
mov
fild
sbb
in
sbb
pushf
jl
xor
jae
mov
sahf
or
hlt
pop
aaa
stos
(bad)
mov
aad
add
cld
popa
sub
or
adc
rcr
icebp
and
leave
(bad)
and
jae
clc
pop
jbe
xchg
add
movs
lahf
or
sahf
or
(bad)
and
jmp
mov
inc
fld
and
(bad)
imul
mov
pop
pop
lods
out
enter
push
cdq
fidivr
int3
scas
mov
and
fcos
fiadd
pusha
mov
aaa
mov
shl
div
aam
jne
sahf
inc
mov
inc
imul
or
push
movs
push
iret
enter
or
xchg
jp
jge
aam
and
push
xor
std
call
inc
xchg
(bad)
lahf
xchg
add
loopne
fcmovnbe
pop
ins
je
pop
cmp
dec
sti
cmps
int
add
pop
(bad)
xor
in
cdq
push
out
and
push
pusha
mov
dec
dec
or
gs
popa
leave
out
movs
fldenv
popf
clc
arpl
dec
sti
mov
scas
mov
lods
fdiv
jne
xlat
jnp
test
out
clc
(bad)
in
int
(bad)
sub
pop
cmp
xchg
xor
fwait
ret
push
adc
lods
js
mov
fwait
inc
ja
or
data16
out
test
sbb
add
retf
ins
mov
test
mov
jno
sub
inc
jg
aad
pop
push
jp
xchg
push
repz
ds
add
loop
cli
adc
push
push
lea
sub
icebp
pusha
sub
shl
adc
xor
movs
in
inc
pop
or
mov
js
or
outs
pop
scas
data16
add
popa
in
sbb
frndint
mov
xor
push
neg
es
in
in
cmps
aam
push
xchg
jmp
jnp
jae
mov
ror
dec
je
dec
clc
mov
pusha
mov
loopne
bound
movs
pop
adc
xchg
(bad)
fild
cdq
mov
in
movs
mov
xor
and
jo
cmps
cmp
neg
cmp
jno
(bad)
sbb
out
jns
cmp
mov
int3
dec
dec
or
xchg
js
mov
ss
inc
rcr
lods
push
mov
ins
in
cmp
sbb
lea
fistp
mov
in
push
fnstsw
inc
arpl
mov
pop
sbb
pop
xchg
adc
dec
xchg
jns
push
mov
xor
outs
stos
ins
pusha
mov
fdivr
xor
mov
int
or
test
jb
dec
stos
mov
inc
add
sub
push
jno
add
mov
imul
sbb
movs
add
outs
xchg
add
push
jno
mov
jmp
sub
xor
adc
dec
and
jle
mov
mov
adc
add
sub
rcl
cdq
xor
mov
cmp
mov
pop
loope
test
outs
cmp
pop
inc
add
dec
add
pusha
rcr
pop
jnp
inc
mov
add
push
hlt
add
push
into
loope
mov
jl
lahf
or
cwde
dec
pushf
cmc
jge
test
cmp
cmp
and
push
addr16
out
movs
icebp
in
repz
xchg
xchg
test
movs
mov
ret
(bad)
repz
push
ja
ds
ret
mov
rcr
test
movs
ds
mov
lock
fimul
pop
mov
in
or
div
out
leave
or
dec
lds
inc
push
mov
or
sbb
and
mov
mov
dec
and
into
jl
cmp
scas
jnp
fs
pop
cmps
mov
jbe
cmp
out
cmp
mov
sar
mov
add
stos
cli
add
retf
aad
cmp
mov
mov
sbb
test
add
mov
push
in
(bad)
cdq
mov
(bad)
imul
cmc
adc
jge
mov
xor
daa
mov
aas
loope
jne
adc
or
call
pop
mov
add
sbb
mov
mov
ins
ds
or
cmp
xchg
lods
add
inc
mov
movs
push
xchg
mov
dec
out
push
mov
movs
(bad)
adc
xchg
rcl
inc
pop
xchg
mov
(bad)
cmp
out
in
sub
into
and
push
dec
cmc
pop
int
(bad)
cwde
movs
iret
and
data16
ret
popf
mov
loopne
mov
xchg
adc
mov
pop
cmp
lahf
fmul
mov
cmp
jge
js
retf
iret
icebp
inc
je
jo
bound
xchg
repnz
adc
jnp
pusha
pop
mov
fcmove
and
mov
es
mov
jge
lock
repnz
jl
jg
popa
in
sub
add
jp
iret
inc
mov
sbb
test
pop
jecxz
jecxz
push
jae
xchg
pop
xor
cmp
xchg
hlt
add
(bad)
lea
mov
mov
and
pop
cs
sti
mov
pop
dec
pop
add
arpl
push
mov
lds
push
xchg
mov
sub
jle
jne
sub
dec
sub
in
inc
pop
cmp
push
daa
xchg
jg
mov
aad
xchg
cmps
push
pop
xor
in
mov
or
adc
mov
dec
sub
inc
xor
int
cwde
clc
cmp
pop
add
das
jmp
cmp
mov
push
fadd
jl
stos
mov
ror
aaa
iret
jp
mov
ror
ss
and
fwait
mov
dec
push
sub
xor
popf
inc
cmps
out
das
(bad)
xor
cld
jns
add
jo
lahf
nop
rcl
into
adc
arpl
in
mov
mov
gs
or
and
sbb
mov
lds
data16
or
push
mov
mov
out
pop
lods
loope
(bad)
mov
(bad)
dec
pusha
call
or
out
(bad)
loope
sti
enter
add
scas
or
add
or
inc
ret
sbb
jo
mov
jecxz
outs
add
inc
out
test
fwait
mov
mov
cwde
mov
fwait
xchg
daa
sub
iret
push
xchg
popa
lahf
bound
(bad)
aam
arpl
inc
out
dec
push
push
out
cld
shr
scas
fcomp
jb
dec
outs
add
xchg
mov
stc
jb
jl
push
sbb
ss
xchg
frndint
mov
jmp
xor
iret
mov
inc
sbb
sbb
(bad)
and
fadd
retf
dec
jbe
out
dec
push
cmc
out
pop
fistp
cmps
jecxz
pop
arpl
addr16
jmp
das
enter
cmp
xor
pop
pop
xchg
jle
fs
addr16
mov
cmps
cld
stos
add
inc
jae
imul
fidiv
adc
cmp
bound
jecxz
cmp
out
cmp
add
cmps
adc
and
sbb
mov
mov
sub
mov
push
out
mov
sub
add
(bad)
sahf
sbb
mov
jne
sub
push
push
sahf
jbe
push
test
jne
push
or
cmps
ds
mov
jns
fisubr
push
out
and
mov
sar
fwait
pop
repz
sbb
push
mov
in
cmps
xchg
nop
pop
int3
cmp
sbb
jo
test
imul
enter
fstp
xor
in
movs
jns
xlat
cmp
cld
inc
jno
ds
stos
mov
xor
xor
xlat
stc
sbb
ror
and
ret
dec
fxch
mov
mov
je
mov
jl
or
xchg
inc
pop
add
mov
je
lahf
cmp
je
scas
fst
in
scas
stos
int3
into
daa
xlat
fisubr
xor
pop
jb
fcomp
ficom
call
xchg
sbb
mov
mov
push
xor
add
mov
mov
lock
cdq
popa
mov
cli
jle
loope
stos
mov
aad
fwait
mov
jo
sbb
xchg
dec
js
out
xchg
imul
cmp
stos
(bad)
sub
dec
mov
mov
test
jnp
(bad)
adc
das
(bad)
dec
popf
lock
mov
and
sbb
sub
mov
mov
xchg
je
gs
inc
in
sbb
in
lods
fild
push
push
push
or
xchg
mov
aad
aam
pop
(bad)
add
fmul
lds
outs
stos
pop
mov
bound
movs
in
loop
loop
scas
push
pushf
iret
test
add
adc
xchg
jmp
nop
hlt
dec
sub
jge
push
sahf
xchg
mov
cmp
repnz
pop
aam
loop
dec
sbb
popa
mov
mov
aaa
cmp
sbb
adc
or
xchg
or
jg
xchg
loopne
adc
imul
dec
(bad)
repz
dec
mov
int3
pusha
jno
or
mov
addr16
jne
xor
pop
aam
mov
sub
lods
and
adc
into
cdq
or
mov
arpl
dec
pop
fdiv
and
jl
jl
jmp
loop
pop
push
ret
adc
ror
ret
scas
sub
das
aad
test
test
xchg
mov
scas
push
pop
and
pop
fldcw
into
mov
in
ret
mov
jae
dec
cmp
shl
int
xor
jg
xchg
cwde
mov
call
(bad)
xchg
loope
sar
pop
xor
pop
fdiv
or
sbb
sar
xor
in
pop
pop
nop
outs
movs
add
shrd
add
xor
pusha
sbb
call
not
(bad)
mov
inc
idiv
arpl
loopne
and
imul
pop
pop
xchg
out
adc
mov
ja
push
mov
xchg
push
repz
int
enter
rcl
out
xchg
arpl
mov
sbb
(bad)
xor
or
cli
(bad)
int3
imul
push
dec
mov
sbb
js
(bad)
fadd
xor
outs
push
push
js
movs
xchg
pop
jb
add
push
add
push
jo
adc
mov
cmp
sbb
dec
leave
pop
jl
or
fwait
xchg
movs
test
in
pop
mov
in
aam
ret
retf
dec
and
pop
int
inc
pusha
inc
imul
movs
add
mov
test
hlt
sub
or
icebp
aaa
movs
and
inc
add
xor
mov
popf
(bad)
mov
push
jle
in
sub
sbb
and
inc
ror
mov
(bad)
loopne
mov
fild
sahf
xchg
outs
not
pusha
or
jae
dec
push
addr16
xor
rcl
in
ins
lahf
add
repz
adc
fcom
test
push
mov
inc
leave
pop
ror
lahf
scas
stos
aam
rcl
retf
stos
pop
mul
add
bound
adc
pusha
sbb
add
sar
setge
imul
mov
mov
add
mov
out
dec
xor
in
pop
mov
mov
and
int3
outs
and
int
sub
in
sub
outs
push
rol
in
pop
rcl
jle
test
inc
leave
cmp
das
pop
test
out
push
adc
popa
mov
xlat
addr16
pop
ror
add
lods
mov
xchg
popa
xchg
retf
sbb
sub
fidiv
adc
xor
(bad)
mov
rcl
fnsave
ret
push
int
push
jne
daa
leave
xchg
mov
add
and
jbe
(bad)
or
xor
(bad)
push
adc
call
inc
call
adc
mov
inc
inc
mov
jns
out
fsub
mov
lds
int
inc
pop
stc
sti
aaa
nop
pop
sahf
adc
adc
std
ror
icebp
nop
inc
push
repz
aaa
push
enter
add
inc
sub
test
sub
push
xchg
add
xchg
je
(bad)
sub
loope
push
arpl
push
fst
pop
jb
jp
xor
int3
lods
jae
xchg
xchg
xchg
retf
mov
sub
test
or
retf
or
inc
sub
xor
not
cmp
jmp
sub
stc
int3
icebp
scas
fwait
xchg
call
call
imul
sub
ret
sbb
mov
pop
lahf
adc
imul
cmp
cmp
xchg
dec
ds
in
mov
enter
aaa
mov
cmps
out
sub
mov
call
fld
adc
in
or
imul
das
mov
cmp
mov
pop
fdiv
je
in
mov
pop
inc
push
push
or
adc
js
call
mov
gs
mov
cmp
in
mov
retf
cmp
adc
addr16
aam
jo
aad
imul
and
(bad)
lahf
cmp
scas
(bad)
xor
in
enter
push
test
or
movs
add
aas
add
in
adc
fld
test
mov
pop
outs
and
sub
into
xor
sub
sub
(bad)
xor
xor
repnz
mov
mov
popf
ror
aam
loopne
test
cwde
push
or
push
jnp
add
xchg
dec
enter
gs
or
pop
mov
cmps
pop
cmp
jmp
add
adc
xchg
(bad)
imul
dec
push
daa
outs
sbb
ins
inc
fincstp
add
xchg
data16
push
loopne
push
shr
in
sbb
push
lods
sbb
outs
(bad)
repz
outs
and
mov
xchg
hlt
add
push
jnp
mov
lahf
pop
push
mov
dec
stos
outs
int3
cld
mov
sub
cmps
jne
loop
push
shl
cld
inc
inc
mov
adc
test
sbb
fadd
add
dec
inc
xchg
or
sbb
ss
sbb
sbb
imul
fwait
pop
pop
rcl
add
outs
inc
jno
rcl
and
adc
pushf
out
jmp
mov
push
and
in
adc
test
pop
mov
jb
mov
or
cdq
js
inc
pop
(bad)
out
je
sbb
jo
jae
dec
gs
inc
mov
and
fnstenv
jecxz
aam
sub
xor
scas
sar
scas
pop
movs
retf
sub
call
aad
cmp
or
or
inc
nop
lods
lea
(bad)
fcomip
iret
sub
inc
sbb
xor
popf
xrelease
add
push
push
ins
adc
add
ror
int
inc
pushf
ret
mov
hlt
inc
das
pop
and
mov
(bad)
fimul
in
dec
sub
cmp
jl
adc
inc
xchg
add
pop
cmp
in
addr16
in
mov
mov
addr16
adc
push
jbe
(bad)
mov
mov
pusha
repz
add
aas
int
mov
repz
xor
mov
mov
xchg
aas
inc
cmp
lods
inc
inc
dec
lock
pop
or
stos
das
lahf
cmp
mov
pop
lods
fst
cs
jl
out
or
ja
mov
mov
pop
imul
stos
out
and
sbb
sbb
mov
and
in
jb
push
xlat
adc
clc
ds
into
inc
inc
jge
or
imul
xor
leave
or
clc
xor
and
ror
fcom
lds
sub
push
inc
pop
popa
cs
(bad)
ins
and
sbb
into
or
cdq
popa
add
adc
cld
cdq
cs
data16
jo
and
pop
movs
or
ins
sub
test
inc
stc
or
push
loopne
fsubr
popf
mov
xor
add
call
mov
movs
mov
fdivr
xor
pop
jecxz
push
call
dec
into
je
mov
fs
push
fwait
mov
(bad)
fisub
test
jge
fisttp
js
fmul
mov
sbb
and
push
and
dec
arpl
push
ins
ins
gs
imul
mov
ret
sub
push
cmp
mov
cmp
(bad)
fisttp
sub
mov
sbb
fstp
movs
push
dec
xor
stos
cmp
fisubr
arpl
mov
dec
and
adc
iret
repz
xchg
inc
add
xor
call
adc
shr
test
popf
push
xor
xor
sbb
push
sbb
call
pusha
pop
loope
sbb
pop
add
mov
movs
dec
jge
mov
(bad)
lds
mov
cmps
dec
xchg
cmps
mov
xor
add
push
sub
inc
loop
mov
je
or
repnz
inc
or
sbb
(bad)
adc
pop
mov
xchg
sti
cvtps2pi
sti
sahf
cwde
(bad)
(bad)
aad
pop
or
mov
sub
ins
add
hlt
xchg
or
repz
nop
jmp
adc
outs
dec
arpl
sub
shl
paddsw
or
cmp
or
in
sbb
popf
daa
cdq
daa
push
shl
gs
repz
popa
cmp
pop
lea
sub
movs
shr
add
mov
ins
cmps
dec
push
pop
in
test
mov
mov
push
ficom
(bad)
push
sub
mov
push
nop
cmps
adc
in
movs
xor
jmp
inc
dec
nop
sub
xchg
or
mov
out
inc
adc
mov
out
cs
cwde
lock
popa
and
repz
call
cmp
sbb
mov
mov
or
or
sub
pop
inc
sub
mov
cld
pop
jge
or
adc
mov
fimul
arpl
popf
xor
fcmovnbe
aad
mov
sub
jg
jno
inc
mov
into
lahf
push
jmp
adc
jb
sub
imul
xor
jns
rcl
cmc
test
in
in
(bad)
(bad)
in
cmps
mov
outs
movs
jp
pop
inc
aam
ror
(bad)
jmp
(bad)
fld
ins
mov
pop
gs
bound
scas
stos
lea
pop
shr
addr16
mov
shr
dec
es
in
mov
xchg
jge
jmp
int3
jno
push
or
lds
push
int3
inc
add
jae
int
fisubr
push
fwait
push
sbb
adc
pushf
fidiv
sub
es
jl
out
stc
sahf
mov
cmp
popf
hlt
xchg
push
les
sbb
neg
mov
pusha
js
mov
aaa
push
sbb
add
jno
xchg
sub
fild
pusha
pop
and
mov
imul
imul
int3
(bad)
clc
jmp
cli
add
xor
fisubr
dec
mov
xchg
(bad)
mov
jg
push
sub
mov
sbb
cmp
push
push
out
scas
imul
or
dec
pop
dec
or
imul
sub
rcr
(bad)
jecxz
mov
(bad)
adc
fldcw
xor
sbb
xor
int
jecxz
mov
cmp
icebp
jae
xchg
repnz
loope
inc
add
fmul
jns
push
cmp
xor
xor
enter
mov
rcl
push
lods
sub
add
shl
mov
inc
and
pop
jno
call
pusha
pop
inc
repnz
bswap
cld
fldcw
retf
dec
pop
and
lea
leave
mov
cmp
inc
cdq
fist
mov
shl
sahf
cs
sub
mov
mov
js
arpl
pop
imul
fwait
iret
inc
jo
push
pop
xlat
push
js
pop
cdq
jmp
(bad)
mov
add
push
cmc
jb
xchg
fwait
imul
add
mov
push
and
aad
pop
sbb
cmc
push
mov
xlat
or
pop
add
sbb
xchg
add
ds
imul
outs
stos
sbb
lods
data16
push
mov
mov
xor
cs
pop
scas
cmps
or
ficom
fistp
inc
inc
icebp
add
push
lods
lock
arpl
mov
dec
xchg
loop
adc
hlt
js
movs
jmp
push
push
cmp
test
cmp
(bad)
mov
mov
dec
pop
mov
in
ret
mov
and
and
in
loope
mov
xor
nop
imul
cdq
pusha
cld
dec
push
repz
popf
pop
leave
repz
sar
bound
adc
cmp
sub
pop
pop
jb
xchg
imul
push
jle
or
imul
imul
xchg
out
cmp
sbb
or
test
stc
cld
jmp
jmp
jo
(bad)
xor
add
xchg
lahf
es
mov
sbb
aaa
and
das
mov
(bad)
in
icebp
mov
js
xor
dec
push
push
inc
mov
lods
xchg
dec
sbb
lahf
cmp
jmp
aaa
(bad)
push
inc
mov
lods
(bad)
icebp
in
inc
and
inc
ins
test
hlt
pop
in
pop
and
xor
adc
xchg
bound
jo
pop
inc
add
popf
in
sub
dec
repz
jns
scas
outs
in
movs
lds
jns
ins
sub
mov
aaa
(bad)
xchg
xor
add
mov
mov
xchg
rcr
(bad)
rol
xlat
popa
scas
sub
xor
and
js
sbb
mov
mov
pop
sbb
movs
push
fimul
mov
(bad)
js
in
push
ss
adc
clc
stos
test
aaa
jmp
mov
mov
dec
rcl
jae
xor
mov
cmp
loope
fcomi
test
cmpxchg
pushf
mov
cmps
lds
cli
push
ret
inc
in
and
mov
add
mov
jns
and
out
cdq
enter
out
jmp
inc
aad
sbb
mov
ins
not
icebp
hlt
xchg
sbb
or
fwait
lods
into
les
and
sbb
or
lods
scas
pop
sub
lods
aam
jecxz
fidivr
xor
fsubr
pop
cld
dec
cmps
test
inc
ret
into
mov
mov
mov
ja
adc
add
dec
popf
mov
int3
ins
xchg
es
jno
cld
lds
cmp
mov
push
adc
sbb
mov
dec
xchg
retf
sahf
sub
scas
xchg
mov
or
shl
mov
cmp
repz
rol
sahf
ja
jmp
mov
mov
pop
sahf
xchg
inc
push
xchg
add
sub
dec
add
out
test
fpatan
xchg
jmp
and
jbe
jnp
pop
fcom
pop
mov
int
loop
adc
fwait
mov
cmp
addr16
adc
inc
cmp
xor
jb
mov
cwde
dec
cmp
dec
dec
or
ja
cmps
jl
popf
std
sub
popf
(bad)
cs
pushf
jo
add
popa
xchg
xor
js
mov
or
mov
lea
xchg
mov
add
xor
dec
dec
adc
ins
pop
pop
jmp
aaa
or
lds
addr16
outs
sub
(bad)
mov
jge
or
movs
adc
pop
jne
add
repz
inc
ror
sbb
push
test
sbb
test
mov
dec
sbb
and
jg
lahf
jecxz
ror
xchg
mov
(bad)
adc
jecxz
mov
add
jmp
push
movs
mov
and
daa
pop
daa
jae
xor
daa
pusha
es
pop
cmps
push
inc
lea
sahf
nop
inc
addr16
je
call
jecxz
mov
loop
inc
sbb
add
pop
adc
in
gs
addr16
mov
cs
sbb
mov
push
xchg
jle
inc
dec
scas
stos
adc
pop
retf
sub
add
push
mov
or
and
add
sub
fisttp
jae
or
mov
inc
xchg
adc
mov
sub
xchg
mov
ror
jg
adc
mov
sub
call
rcr
cmc
and
call
ret
pop
xchg
mov
hlt
mov
jp
cdq
in
push
sbb
rcl
mov
and
shl
push
dec
cwde
push
test
aas
sbb
ret
enter
and
cwde
retf
or
xchg
data16
pop
dec
dec
adc
out
mov
ins
push
add
sub
cmc
and
shl
sahf
sahf
mov
arpl
push
mov
push
mov
aam
repz
lock
imul
mov
cdq
and
fiadd
cdq
mov
xor
(bad)
cmp
mov
add
fs
mov
xchg
ret
pop
mov
jle
sub
out
cmp
aaa
mov
cld
sar
scas
jecxz
rcl
test
(bad)
xor
or
mov
add
rcl
sub
mov
not
push
xchg
or
sbb
int3
xchg
fs
lods
add
or
sub
dec
lahf
pop
mov
push
std
and
inc
(bad)
iret
(bad)
sbb
mov
cmp
dec
ss
jp
jmp
or
sbb
lahf
fmul
adc
add
dec
cmp
push
stos
loopne
aas
xchg
and
add
and
pop
xchg
mov
mov
aad
test
mov
es
cs
inc
test
cmp
pop
push
in
jne
shl
out
jae
add
jl
loopne
popf
pop
or
cmp
jl
jp
stc
and
cmp
sbb
pop
inc
inc
sbb
xlat
mov
retf
pop
faddp
outs
xor
jnp
dec
stos
rcr
loop
aaa
sbb
xchg
inc
into
lahf
fcomp
in
pop
lds
xor
pop
out
cmp
lods
fcmovb
xlat
test
xchg
or
imul
sub
daa
lock
jns
mov
xchg
push
call
pop
xchg
sar
cmp
enter
mov
inc
call
das
lods
dec
mov
(bad)
sub
inc
pop
jecxz
and
retf
lea
push
mov
add
int
mov
nop
repnz
dec
adc
jbe
retf
xor
mov
pusha
out
test
push
dec
jmp
jmp
adc
mov
fsub
idiv
ja
es
ficom
repnz
sub
and
jno
push
cmps
inc
push
ins
mov
pop
out
bound
cmp
popf
rcr
test
mov
jbe
not
inc
movs
dec
movs
sahf
adc
fmul
xchg
daa
inc
jge
pop
es
sbb
retf
adc
es
in
rol
sub
(bad)
jge
out
fdiv
sbb
adc
push
je
sbb
das
fwait
les
cmp
das
repnz
ret
sub
push
repnz
icebp
test
stc
inc
add
gs
sub
pop
push
int
xchg
pop
add
sbb
in
imul
inc
scas
fmul
xor
call
inc
cmp
mov
xor
inc
xchg
in
and
jns
xor
add
mov
cmp
add
xor
sub
call
lods
sub
(bad)
neg
mov
mov
pop
dec
inc
inc
dec
pop
mov
jmp
or
retf
arpl
fwait
test
xor
push
mov
(bad)
jo
add
xlat
retf
stc
jbe
push
xchg
lods
push
pop
or
sbb
sbb
retf
or
dec
adc
push
pop
or
loopne
jle
fucomp
mov
out
fcomp
call
out
lods
pop
xchg
dec
mov
pushf
jne
arpl
push
rol
mov
clc
out
sub
mov
adc
xor
mov
mov
jmp
fisub
fiadd
or
ins
push
adc
in
les
cmps
mov
sub
mov
lock
sub
dec
aaa
sti
mov
loopne
fs
jle
jecxz
pop
mov
cmp
xchg
(bad)
repz
mov
out
or
mov
xor
aas
pop
jmp
adc
xchg
dec
popa
ss
ret
adc
and
push
push
jb
push
cmp
jmp
pop
stos
popf
mov
adc
clc
sub
inc
cmc
sbb
mov
push
or
mov
add
jo
sbb
fs
aaa
and
add
adc
je
pop
ret
clc
loopne
or
jnp
(bad)
mov
sub
sub
sbb
or
jl
leave
mov
add
or
lgs
jae
cmovae
retf
pushf
dec
ja
inc
inc
or
sbb
mov
add
int3
and
push
push
mov
push
aaa
in
outs
adc
scas
push
mov
add
(bad)
into
xor
jmp
mov
outs
push
pusha
test
int
cs
adc
repnz
cdq
int
imul
enter
test
imul
push
push
dec
sub
or
out
popf
pop
jbe
pop
adc
daa
loopne
inc
add
xchg
pusha
or
lock
call
repz
sub
push
xchg
call
sub
and
dec
lahf
and
daa
fs
jl
sub
dec
adc
leave
shl
adc
push
outs
in
adc
mov
xchg
mov
push
dec
jae
xchg
stos
xchg
push
daa
rol
lods
add
ficom
add
push
sub
push
cmps
inc
add
push
adc
add
pusha
out
leave
in
arpl
xchg
xchg
mov
fnstcw
cmp
arpl
mov
mov
retf
xchg
bswap
stos
test
push
fcmovu
cdq
cmc
jo
inc
fcom
add
nop
sbb
pop
push
(bad)
mov
outs
popa
sbb
(bad)
sbb
(bad)
jo
in
xchg
lds
adc
cmp
in
mov
inc
jl
or
lock
addr16
jnp
shl
pop
mov
pop
cmc
mov
xchg
mov
xchg
fidiv
js
xor
add
mov
js
retf
sub
xchg
ror
sbb
mov
xchg
pop
in
or
in
addr16
pusha
xchg
xchg
loop
data16
pop
sub
test
add
sub
add
push
sbb
into
rcr
pop
adc
int3
pop
jns
leave
sbb
mov
stos
cwde
mov
jmp
test
adc
pop
push
out
xor
shr
mov
adc
sub
push
sbb
iret
fwait
(bad)
out
mov
cmovb
and
or
adc
jp
int3
js
mov
ret
or
pop
neg
and
jns
dec
into
dec
sub
xor
mov
leave
out
or
ins
aas
in
lahf
jmp
lock
outs
bound
mov
sbb
movs
fmul
test
add
xlat
add
push
movs
jmp
shl
fimul
loope
aas
ret
mov
fcmovu
int
lea
in
out
ja
cmp
(bad)
rcr
daa
cmp
fiadd
jle
call
adc
fistp
in
imul
aam
pop
cmp
popa
dec
jbe
adc
jo
je
inc
(bad)
sbb
outs
inc
sbb
mov
fadd
fldenv
push
add
(bad)
test
push
xchg
xchg
pop
les
jge
stc
dec
adc
mov
js
gs
add
je
push
dec
lea
fcomi
cmp
mov
cmc
dec
xchg
dec
enter
mov
scas
sbb
pusha
loop
dec
inc
jp
ins
lea
dec
dec
das
sbb
jmp
ds
dec
jl
imul
jp
imul
mov
ss
retf
addr16
inc
ins
pop
fisttp
repz
xlat
lock
scas
icebp
sbb
leave
shl
pop
imul
xor
jae
sub
sub
imul
imul
push
and
mov
jae
pusha
(bad)
mov
stc
stos
jge
mov
mov
outs
(bad)
mov
jle
sbb
movs
ins
push
scas
stc
sub
out
ret
mov
pop
jmp
fstp
and
xchg
cmp
pop
stc
xchg
ds
jle
adc
jno
imul
bound
out
icebp
add
dec
out
xchg
imul
adc
cmps
fs
pop
adc
jmp
sub
test
int
nop
loope
test
bound
test
fild
aam
inc
call
sub
bound
js
pop
scas
cdq
sub
cwde
lods
add
and
scas
push
lds
pop
fnstsw
xor
aam
dec
jnp
fcom
cmp
xchg
pop
data16
jp
mov
sahf
xlat
mov
or
out
fmul
jle
pop
int
cli
pop
xchg
or
sti
int3
jp
std
mov
dec
fiadd
lock
inc
mov
lea
push
sub
sbb
shr
ror
fwait
cld
lea
in
mov
inc
pop
nop
loope
mov
mov
inc
addr16
icebp
push
icebp
arpl
and
pop
es
push
pop
mov
xchg
inc
neg
lds
arpl
xchg
lods
(bad)
xchg
pause
fistp
(bad)
test
xor
ins
popf
retf
daa
mov
pop
(bad)
jge
js
jne
or
popa
outs
jl
mov
push
and
icebp
into
sti
sub
out
arpl
adc
mov
or
pushf
mov
jmp
lea
arpl
movs
mov
xchg
in
jl
add
stos
mov
jo
pop
push
pop
fsubr
push
xlat
inc
mov
cld
outs
adc
addr16
fist
push
cld
mov
mov
pop
outs
es
loopne
dec
cmp
cld
imul
jle
into
repz
xlat
adc
sub
mov
out
(bad)
xchg
jmp
mov
mov
loop
scas
rol
addr16
aam
ja
repnz
jg
stos
cdq
clc
push
jnp
xlat
dec
jle
cdq
mov
add
jecxz
pop
jae
jge
je
(bad)
jb
pop
add
mov
dec
fs
dec
cld
bnd
(bad)
sbb
xor
retf
pop
data16
pushf
aas
retf
sub
push
dec
mov
mov
jns
sti
adc
xor
cdq
scas
int
test
pushf
add
xor
jge
pop
xchg
or
jge
repz
outs
jbe
cmp
enter
add
and
fstp
cdq
adc
dec
(bad)
push
aam
div
inc
jge
lock
cld
ret
fstp
aaa
in
jge
mov
xor
push
push
add
popa
xchg
je
sti
cmova
mov
pop
xchg
and
mov
cmps
dec
sbb
std
(bad)
jg
and
xor
dec
cmp
or
leave
cmp
loop
in
cmps
sub
adc
add
push
div
into
jno
push
jmp
mov
ja
mov
pusha
call
(bad)
dec
push
mov
mov
jno
push
push
outs
mov
push
xchg
aad
aad
stc
inc
push
stos
push
dec
jl
push
in
jg
mov
mov
fnstenv
jo
pop
cmc
dec
mul
inc
into
gs
and
outs
bound
xchg
adc
jmp
shr
scas
loop
outs
ret
(bad)
mov
nop
and
dec
not
and
inc
sahf
jmp
lods
mov
aas
gs
clc
add
(bad)
jno
neg
and
jge
(bad)
pop
data16
fist
(bad)
xchg
sahf
out
mov
mov
and
jge
pop
mov
cwde
enter
xchg
jbe
sar
outs
daa
xchg
fisub
xchg
idiv
ds
xor
scas
sahf
cwde
das
pushf
in
xor
sub
push
adc
mov
xchg
shl
sbb
xchg
sub
jns
scas
in
push
mov
push
add
jge
jmp
stos
push
fwait
xchg
cmp
xchg
std
xor
cdq
inc
(bad)
adc
dec
jbe
imul
loope
int
icebp
jle
adc
sbb
pop
lahf
pop
adc
(bad)
cld
lods
jns
in
pop
inc
inc
popf
in
cmp
fisubr
cli
aaa
mov
pop
inc
fcmovnu
repnz
mov
int
mov
es
ja
push
pushf
xchg
cmp
mov
pop
int3
sti
cmps
cwde
aaa
(bad)
add
bound
div
in
lods
ficom
cmp
int3
jg
mov
outs
aas
sub
(bad)
js
(bad)
out
movsx
jmp
mov
mov
test
mov
xor
inc
in
fs
test
push
(bad)
sbb
or
(bad)
mov
(bad)
pop
dec
and
jnp
cs
leave
scas
fsubr
mov
loop
call
fdiv
mov
mov
gs
outs
mov
mov
cmps
sbb
push
xchg
stc
imul
jecxz
sti
fcmovnbe
xlat
pop
pop
addr16
lea
cli
push
aam
mov
fbstp
sahf
inc
push
in
inc
lea
fist
je
mov
fbstp
sub
xchg
jmp
fidivr
cs
jae
(bad)
test
mov
rol
mov
mov
cmc
ja
mov
aaa
cli
into
push
adc
mov
loope
imul
dec
cmp
inc
mov
ss
out
test
dec
outs
jmp
(bad)
xlat
bnd
lods
or
pushf
mov
das
mov
imul
jnp
push
mov
movs
(bad)
fst
test
and
mov
jae
(bad)
pop
in
jle
es
mov
cdq
call
pop
out
mov
fsub
add
retf
scas
cmp
push
scas
xor
enter
pusha
gs
popf
pmaxub
pop
ja
out
pop
fstp
inc
out
mov
cwde
adc
xchg
aad
jle
int3
scas
mov
imul
lock
dec
and
aam
xchg
xor
loopne
xlat
push
(bad)
cwde
jne
xchg
out
cli
xchg
arpl
mov
int
test
fcom
in
out
xchg
stos
mov
imul
push
bound
xor
mov
jle
pop
nop
lock
fsub
mov
loopne
in
fs
call
or
stos
mov
stos
out
dec
daa
in
cmp
jmp
ds
xor
in
arpl
push
jmp
aad
aas
hlt
test
retf
jne
imul
cmp
dec
sub
pop
imul
das
mov
aam
int3
call
xchg
dec
xor
push
sahf
hlt
scas
cmps
cmps
mov
loop
fwait
xor
jecxz
loop
fstp
repz
jl
jbe
and
xchg
and
ins
jmp
out
push
rcl
das
push
xor
mov
repnz
inc
mov
arpl
push
call
int3
pop
xor
fild
cmp
pop
sbb
dec
aas
mov
push
cli
add
push
fs
fcom
jo
cld
out
fnstenv
test
iret
aas
push
add
(bad)
or
xor
fiadd
sahf
adc
xchg
jp
jno
cmc
add
inc
retf
call
loop
mov
je
hlt
pop
adc
dec
push
mov
(bad)
cmp
cdq
jg
(bad)
out
xor
mov
adc
aam
pop
cli
call
sub
xchg
dec
and
lock
frstor
aam
mov
sub
cmps
pop
xor
jle
mov
xor
mov
inc
out
sub
and
lea
pop
shl
push
push
shr
jb
jo
xor
push
mov
push
ja
inc
push
push
mov
mov
mov
mov
inc
inc
test
lds
retf
or
or
xor
fwait
pop
adc
sar
out
mov
sbb
mov
jl
in
enter
loop
inc
jbe
pop
add
sar
inc
lea
mov
out
cld
sbb
xchg
jo
jecxz
int
stos
aad
pushf
sub
stos
popf
xchg
es
inc
jge
mov
xor
jl
pop
mov
xor
cdq
(bad)
scas
cs
imul
sub
inc
xor
or
push
cmp
(bad)
retf
ror
out
mov
ja
not
imul
stos
cmp
jg
test
jp
ins
ret
adc
cwde
mov
out
fdiv
test
retf
or
ins
enter
(bad)
sahf
pop
inc
rcl
and
xchg
and
mov
jmp
int3
xchg
ficomp
pop
dec
test
and
cwde
and
and
sub
sbb
push
gs
adc
out
and
cmc
dec
call
mov
sbb
adc
cwde
inc
push
push
pop
and
and
push
adc
push
add
test
adc
out
push
push
cmp
xchg
cld
push
enter
sbb
sti
mov
fwait
lock
xor
xchg
int3
fstp
je
and
sub
mov
mov
fcom
mov
test
in
test
out
shl
out
daa
cmp
retf
das
test
pop
in
out
movs
jae
xlat
cmpps
cmp
cld
iret
pop
ret
push
mov
test
enter
adc
es
pop
add
pop
cmp
int3
fsubr
jg
dec
loope
sbb
stc
mul
add
data16
sub
pop
cdq
inc
daa
scas
jmp
repz
(bad)
mov
push
inc
cwde
test
sub
(bad)
xchg
test
out
mov
mov
loope
fdivr
loopne
out
cmp
jl
add
jmp
(bad)
cmps
push
pusha
enter
std
scas
fnstenv
(bad)
retf
xor
cmps
aas
add
jecxz
pop
test
or
sahf
pop
jae
shl
cmp
dec
stos
(bad)
xor
dec
cmps
sbb
out
imul
sub
cmps
push
mov
fmul
adc
inc
nop
adc
cmp
jl
jne
cdq
pop
or
ror
(bad)
clc
inc
pushf
jo
arpl
(bad)
(bad)
rcl
out
in
ja
cmp
and
jbe
xchg
jns
mov
jmp
add
xor
shl
inc
push
push
out
jmp
dec
cmp
push
cli
jecxz
mov
leave
xchg
mov
jmp
push
pop
jmp
jne
sub
rol
add
cli
pop
test
push
dec
repz
mov
xchg
add
pop
jl
or
mov
rcl
add
add
inc
mov
pop
jl
jbe
pop
push
inc
cmp
pop
mov
push
mov
popf
imul
lock
gs
test
sti
int
imul
cld
xchg
jnp
movs
xchg
or
dec
jmp
inc
mov
je
jns
cmp
push
mov
scas
stos
out
arpl
dec
jno
and
and
test
shl
pusha
hlt
je
xchg
pop
jnp
inc
push
cmp
xchg
pop
add
pop
sbb
inc
mov
mov
mov
rcr
sbb
or
xchg
aad
cdq
data16
ss
push
es
mov
cs
dec
scas
cmp
cdq
(bad)
int
xchg
xchg
fadd
pop
xor
sub
xor
call
(bad)
push
das
(bad)
sbb
xor
dec
sub
gs
movs
in
sub
fld
xor
in
inc
cld
fwait
push
repz
in
les
mov
fstp
mov
mov
dec
lods
js
mov
les
sub
enter
inc
mov
xchg
mov
sub
mov
sub
test
fmul
inc
mov
stos
cs
add
jb
cli
mov
or
(bad)
fwait
or
xchg
pop
sub
in
cmp
jo
aam
and
sbb
dec
add
fwait
xchg
push
fld
xchg
pop
push
(bad)
jle
fwait
mov
mov
test
or
cdq
mov
pusha
push
xchg
aaa
aad
sbb
dec
adc
push
aaa
jmp
inc
repz
mov
add
push
ins
mov
fistp
dec
mov
arpl
xor
aad
popf
push
ins
enter
pop
scas
mov
mov
add
mov
and
dec
add
sub
xchg
js
sub
cmp
inc
cdq
jmp
and
mov
data16
lock
(bad)
aad
push
pop
sbb
push
sbb
imul
ins
mov
inc
push
sbb
mov
dec
rol
mov
cwde
cmps
jns
pop
push
add
lds
mov
int
jo
push
cli
mov
je
pop
pushf
test
xchg
in
addr16
mov
scas
stos
add
movs
push
in
loopne
js
call
cwde
pop
or
repz
and
inc
xchg
test
and
and
lods
test
(bad)
xor
lods
test
xchg
imul
(bad)
iret
outs
mov
mov
lock
mov
shr
mov
xchg
popa
int3
mov
test
xchg
mov
lock
mov
movs
sub
mov
xchg
mov
addr16
imul
in
add
or
xchg
dec
outs
ins
in
and
xchg
and
dec
inc
dec
outs
idiv
test
call
fsub
mov
or
and
and
dec
fs
rcl
cmp
jnp
cwde
or
jne
call
cdq
repnz
or
lods
xchg
or
mov
mov
lahf
pop
mov
loopne
test
loopne
or
pop
repz
(bad)
(bad)
dec
mov
mov
mov
(bad)
in
prefetcht1
push
jnp
fisttp
dec
mov
(bad)
retf
sahf
xchg
enter
or
add
xor
pusha
jp
mov
jbe
dec
push
dec
mov
push
and
sub
ss
test
cdq
cmp
fs
or
push
and
inc
push
psadbw
xchg
add
test
shr
add
arpl
mov
mov
mov
xchg
in
lock
push
ror
cdq
or
popf
ins
pop
add
cs
add
adc
and
outs
dec
dec
loope
cmp
jmp
or
ja
retf
push
rcl
adc
sbb
add
(bad)
pusha
mov
add
(bad)
inc
enter
jo
xchg
or
or
and
imul
lods
ret
dec
leave
ss
dec
test
mov
(bad)
adc
mov
stc
stos
leave
pop
sbb
popa
xor
in
loop
mov
add
add
mov
cs
pop
adc
mov
das
(bad)
and
xor
and
bound
and
xor
mov
es
pusha
mov
xor
xor
in
popaw
repz
je
mov
or
(bad)
int3
push
inc
xchg
nop
inc
(bad)
int3
rol
int
xor
call
setnp
ins
mov
arpl
inc
sbb
inc
lds
mov
mov
xchg
jbe
and
retf
or
mov
in
or
mov
jno
sub
and
push
push
jle
cmp
jns
out
or
mov
lock
push
inc
or
xor
inc
adc
mov
xchg
lds
call
jb
sub
in
iret
xor
xchg
mov
or
jg
xor
and
push
cwde
sbb
adc
ror
or
aas
cmp
cli
lahf
adc
sub
sub
xchg
pop
xchg
push
leave
and
and
and
adc
addr16
les
ds
xchg
ins
jbe
push
pop
gs
cmc
fsub
adc
xchg
test
mov
xchg
inc
xor
outs
in
das
push
pusha
ins
imul
jnp
call
imul
psubw
out
test
ins
pop
inc
stos
jns
adc
shr
push
repnz
sbb
movs
jo
jmp
inc
es
sub
xchg
jo
cmp
and
xchg
or
ins
jmp
aad
addr16
and
neg
or
imul
sbb
icebp
xor
xchg
sub
pop
push
mov
popa
mov
push
scas
pop
xchg
or
ins
inc
cli
(bad)
idiv
mov
inc
dec
push
and
bound
dec
sub
xchg
mov
sub
pusha
cmps
xor
rcr
fsubr
or
pop
popa
inc
fs
or
rol
cmp
push
sbb
in
cmp
inc
rcr
lea
mov
pop
(bad)
hlt
pop
out
jl
mov
push
movs
sbb
ins
and
adc
add
sbb
or
mov
dec
mov
and
and
arpl
and
mov
hlt
lods
pop
ret
(bad)
js
rol
push
movhps
clc
push
inc
push
sub
xchg
add
dec
push
mov
inc
pop
add
popa
add
mov
inc
stos
sar
or
pop
repz
cdq
into
mov
ds
mov
lods
fisttp
jp
sbb
sub
call
push
(bad)
in
fiadd
and
pop
ds
push
jo
xor
inc
xchg
push
add
mov
cmps
mov
fchs
pop
mov
dec
adc
(bad)
cld
xor
(bad)
pop
lods
call
les
das
mov
xchg
pusha
dec
cmc
pop
xchg
jae
dec
and
sbb
push
or
sub
inc
dec
inc
loope
stos
dec
stos
fisub
loop
mov
and
test
inc
push
dec
mov
mov
jbe
cdq
ins
daa
inc
cmp
inc
mov
and
jl
sub
and
pushf
mov
frstor
jp
mov
sub
enter
fwait
dec
std
sub
jne
xchg
add
lds
xor
fs
xor
ret
add
sub
mov
dec
fld
fld
rcr
aaa
popa
inc
in
cvtps2pd
push
fld
mov
mov
push
in
xchg
push
inc
clc
fs
xor
inc
cmp
mov
call
sub
fcmovnb
sbb
aam
enter
shl
sbb
iret
xchg
cmp
aam
call
call
or
jae
sub
mov
push
pop
in
cs
push
mov
(bad)
outs
lods
sub
mov
push
push
pop
test
xchg
outs
mov
mov
cli
sbb
sub
sti
sbb
jbe
ss
mov
sub
xor
stos
cmc
pop
dec
fcmovne
icebp
in
bound
ror
out
out
sti
dec
or
daa
push
and
dec
pop
aaa
jbe
(bad)
repnz
call
jp
sbb
icebp
pop
mov
leave
cmps
xor
aam
aad
inc
popf
pop
fdiv
int
cmc
push
xor
js
ficom
mov
mov
inc
lds
mov
cmps
push
pop
cmp
(bad)
hlt
and
iret
dec
push
mov
dec
hlt
(bad)
xor
aaa
popa
jo
lods
xlat
scas
cmps
stos
mov
adc
add
sub
fcmovne
xor
mov
lods
lock
fscale
push
cld
push
rol
stc
push
enter
dec
repnz
mov
xchg
cmp
pop
inc
clc
mov
jecxz
mov
fmul
(bad)
adc
int3
or
dec
rep
xor
inc
sub
dec
(bad)
enter
les
pop
retf
enter
add
aad
enter
xlat
enter
and
loope
jle
push
mov
add
xchg
sbb
pop
cdq
fisub
(bad)
pop
pop
ret
repnz
and
int
enter
or
or
in
shr
push
pop
enter
sub
leave
test
loope
pop
xor
scas
out
fstp
retf
nop
xchg
and
sub
jno
push
pop
outs
data16
dec
sub
cdq
dec
mov
mov
push
sub
mov
out
nop
xchg
xchg
or
dec
xchg
push
test
mov
mov
in
lock
mov
test
scas
mov
mov
mov
neg
sub
icebp
cmp
out
xor
dec
sub
mov
jb
xchg
mov
out
adc
sub
aam
cmps
dec
in
inc
pop
(bad)
fs
cmc
jno
(bad)
repz
fdiv
stos
dec
stos
push
sbb
stos
daa
and
mov
push
daa
push
inc
loop
sub
imul
dec
rol
xor
jge
cmp
scas
mul
pop
sub
sbb
adc
mov
or
scas
es
stos
push
and
popf
inc
mov
push
jae
mov
cmps
das
arpl
mov
pop
ficom
inc
aad
inc
icebp
cmp
shr
(bad)
hlt
sti
rcr
mov
pop
or
outs
dec
out
sbb
and
cli
sbb
(bad)
repnz
jns
cdq
pop
jecxz
xor
dec
out
loop
inc
ffree
mov
sbb
outs
(bad)
pushf
mov
hlt
mov
cli
push
push
repz
sar
(bad)
mov
sar
dec
pushf
rcr
fldcw
outs
xor
and
dec
push
(bad)
leave
aad
(bad)
jbe
icebp
adc
out
add
inc
mov
hlt
sub
jg
idiv
in
mov
xchg
mov
test
imul
cwde
jae
es
(bad)
mov
push
movs
not
xchg
adc
xor
jnp
mov
retf
imul
fwait
sub
inc
shl
cmp
jecxz
sar
ins
repz
dec
push
es
test
xchg
xor
cmp
sub
lods
dec
int
xor
test
xor
sar
loop
daa
sbb
inc
cmovne
call
outs
and
test
hlt
les
or
sbb
push
dec
call
xchg
jo
push
or
sbb
xor
and
push
test
std
xchg
fsubr
dec
cmp
push
and
pop
or
pop
shl
inc
out
dec
dec
and
mov
adc
mov
pop
mov
add
pop
pop
popa
pop
ins
jne
test
ret
les
xor
mov
xchg
imul
push
or
in
(bad)
sbb
and
mov
sbb
imul
xlat
leave
lea
in
pushf
xor
push
ds
fwait
sahf
jb
out
pushf
or
ds
rol
outs
pop
call
bound
scas
iret
lods
xor
mov
sti
out
cs
test
push
nop
jle
pop
fstp
int
imul
sbb
jae
int3
add
stos
xor
pop
in
sti
pop
mov
ret
(bad)
cld
xor
and
mov
jmp
idiv
cmps
ss
cmc
dec
stc
mov
push
pop
cld
xor
mov
add
or
dec
pop
mov
push
mov
push
(bad)
sbb
lds
mov
rcr
or
(bad)
aaa
out
ret
dec
clc
addr16
fsubr
sbb
jmp
jecxz
arpl
leave
cmps
dec
mov
jae
mov
pop
(bad)
mov
or
out
push
retf
imul
test
xor
sub
push
push
jbe
mov
pushf
daa
scas
or
movs
mov
pavgw
imul
cmp
pop
mov
dec
jmp
stos
ror
pavgw
jmp
fisubr
movs
mov
mov
aam
cmp
sub
cmc
in
in
jmp
mov
lea
ins
or
das
mov
shr
dec
mov
aas
push
mov
clc
enter
scas
xor
xchg
jmp
jne
(bad)
mov
xchg
mov
push
dec
retf
add
adc
pop
jnp
dec
sbb
pop
and
test
and
and
adc
stos
cmps
jg
push
loop
dec
addr16
inc
pop
lea
sbb
xor
call
mov
test
pusha
xchg
xchg
mov
ins
adc
inc
hlt
push
dec
(bad)
sub
stos
lock
std
mov
pop
pop
clc
mov
push
mov
mov
aaa
iret
fmulp
imul
mov
sbb
sti
fmul
out
aad
sub
mov
sbb
shl
ret
arpl
xchg
lea
jmp
cmc
mov
push
(bad)
es
stc
cwde
retf
cmps
inc
sbb
push
ja
not
cmp
jns
adc
and
js
(bad)
cld
inc
bnd
jmp
jmp
lods
test
or
popa
jo
mov
(bad)
fcmovnu
js
sub
ficom
in
pop
aas
mov
(bad)
arpl
test
mov
enter
xor
std
and
dec
jmp
jle
iret
adc
mov
call
movs
popa
das
call
jmp
ja
ins
scas
or
cmp
fptan
and
dec
pusha
pop
dec
cmps
stos
rcl
cmc
loope
xor
and
ins
into
xchg
xchg
(bad)
std
mov
cmps
call
dec
(bad)
jge
in
int3
jge
call
jl
xchg
sahf
pop
cld
xchg
add
bound
(bad)
pop
jne
add
adc
sbb
dec
jecxz
das
inc
cmp
aad
dec
xchg
jmp
sti
in
cld
mov
nop
jecxz
cwde
int3
mov
es
cli
adc
fs
idiv
jo
sub
in
xor
sar
and
jbe
fwait
movs
adc
(bad)
fs
cmp
mov
imul
cdq
sub
cwde
xor
test
xor
push
aad
cmc
mov
adc
xor
xor
(bad)
ud0
xor
das
mov
dec
push
cmp
cmp
mov
jo
and
pop
jmp
adc
dec
inc
sti
hlt
(bad)
clc
sub
pop
sbb
jmp
jno
scas
hlt
aad
mov
sub
nop
inc
mov
hlt
bound
ret
cld
mov
popf
rol
test
xchg
scas
and
jae
jp
in
fldcw
sbb
sahf
and
inc
cmp
(bad)
in
mov
ffreep
aas
fmul
add
shr
(bad)
xchg
call
push
cmp
push
inc
cmp
pop
xchg
jb
aad
sub
fdiv
add
fst
outs
mov
mov
stos
ror
pmulhw
pop
and
aaa
xchg
jg
pop
cmp
mov
cmp
jae
jns
enter
adc
xor
mov
popa
cmc
xor
aam
ja
imul
push
xor
std
loopne
ret
xchg
fcomp
into
mov
sbb
xchg
adc
push
fldenv
cmps
enter
dec
pop
icebp
fist
scas
or
jbe
ss
jnp
loopne
rol
inc
add
out
xchg
jg
imul
repnz
pop
xchg
repnz
into
loop
xor
and
push
scas
movs
dec
and
scas
cmp
jp
(bad)
jb
cmc
ja
jp
mov
arpl
ret
test
jo
xchg
jp
xlat
call
movs
ror
loopne
or
push
and
jg
pop
jg
xchg
xchg
and
hlt
add
xchg
ins
and
fsubr
inc
add
adc
pop
inc
(bad)
xor
(bad)
div
inc
xchg
add
and
fsub
cmp
ds
shl
loop
add
aaa
jp
mov
push
shl
outs
neg
inc
mov
fild
mov
rcl
mov
jmp
ss
adc
leave
outs
cli
les
dec
mov
inc
cmp
in
pop
push
inc
cmp
ins
aas
mov
in
out
jo
sub
pop
cmp
jnp
hlt
or
xchg
mov
xchg
push
aas
and
dec
ds
xor
cmp
(bad)
mov
add
push
ret
leave
add
inc
adc
push
aaa
(bad)
mov
push
jl
cmp
jg
jno
adc
jg
int3
xchg
jge
in
iret
xchg
adc
or
mov
hlt
jbe
sbb
jp
(bad)
daa
dec
and
gs
stc
in
inc
xor
loope
jo
mov
std
sub
fbstp
mov
push
in
ss
dec
rcr
out
cs
ret
out
leave
dec
(bad)
pop
or
outs
jge
adc
scas
jne
mov
loop
fidiv
sub
inc
xlat
push
sub
sbb
or
mov
jno
sub
icebp
add
jne
add
clc
sub
add
psrld
outs
cmp
pop
sbb
or
sbb
push
xor
jge
add
xchg
les
add
loopne
xchg
pop
xlat
dec
mov
scas
jbe
mov
xchg
or
sar
sub
sbb
aaa
mov
jle
mov
lds
pop
dec
pop
cld
lock
jp
inc
dec
adc
sbb
inc
xchg
test
jnp
jl
pushf
enter
inc
call
lea
fnstsw
pop
push
adc
aas
popa
mov
mov
out
mov
cmp
jle
sub
nop
dec
inc
clc
cld
stos
jmp
mov
and
add
pop
xchg
mov
inc
pop
aas
xchg
jnp
stc
sbb
in
push
jecxz
sub
cmps
inc
inc
inc
dec
cmp
aas
cmp
or
cmps
xchg
pushf
rcl
std
fs
rcr
sbb
pusha
outs
cmps
pop
inc
iret
or
mov
ret
(bad)
imul
mov
add
mul
ss
sub
cmp
inc
sub
jmp
push
sbb
adc
xchg
jbe
or
ds
cmps
push
mov
daa
daa
adc
mov
bound
pop
icebp
sbb
or
sub
fucomip
cmp
ins
jbe
div
outs
in
xor
cmp
repz
and
out
idiv
sbb
jp
mov
iret
ret
inc
xor
loopne
test
sub
int3
dec
scas
and
push
cmp
push
fsub
sub
mov
enter
out
pop
sbb
adc
pusha
jne
sub
push
jb
pop
push
imul
mov
and
sti
and
mov
in
and
lds
fwait
push
mov
mov
dec
lea
repz
jmp
pop
push
dec
sub
imul
lock
xchg
push
mov
mov
xchg
xchg
sbb
lock
inc
pop
ss
adc
mov
sahf
pop
sbb
outs
popa
xor
dec
jmp
hlt
les
loope
xor
cdq
je
xchg
or
xchg
fcomp
inc
sub
sbb
pop
xchg
mov
frstor
leave
adc
stos
push
inc
mov
(bad)
popa
shr
repnz
out
push
adc
jl
dec
ret
ss
sub
call
inc
ins
aam
jmp
int3
pop
into
xor
imul
pusha
cmp
mov
dec
jmp
scas
xchg
leave
or
sti
shl
cmc
std
in
fidivr
push
test
in
dec
(bad)
jns
out
test
gs
xor
clc
jns
or
xchg
lock
push
sbb
push
scas
xor
xchg
fs
outs
push
inc
push
sub
dec
(bad)
push
loopne
mov
popa
inc
popa
in
jp
ins
dec
das
xchg
xchg
test
jge
cli
int3
pushf
sub
not
sub
sahf
mov
cld
in
inc
daa
aas
movs
push
push
jge
mov
out
into
clc
jle
shl
retf
ja
mov
jno
xchg
push
add
cmp
xor
mov
fcomp
nop
mov
add
or
sar
pop
cld
sahf
call
shr
inc
leave
cmp
dec
popf
inc
dec
lea
popf
inc
shl
inc
fmul
cmp
xchg
das
or
xchg
inc
lock
inc
xchg
lahf
mov
fbld
aaa
push
nop
stos
jne
mov
ret
push
std
jg
out
dec
js
pop
out
xor
add
sub
cmp
imul
pop
enter
rcr
jmp
sar
loopne
inc
push
ss
je
cld
jb
das
dec
xchg
in
sub
cdq
mov
pushf
xchg
jecxz
out
xchg
or
scas
out
sahf
add
and
stos
jp
add
ja
imul
xchg
jl
(bad)
dec
(bad)
popa
mov
in
hlt
pop
ja
(bad)
test
shr
mov
out
cmp
daa
stc
jne
add
sar
add
add
test
inc
in
jne
enter
jo
(bad)
xchg
das
lahf
leave
jno
sahf
cld
cmp
out
mov
push
pop
les
out
xlat
inc
or
(bad)
mov
mov
fwait
push
mov
out
je
mov
dec
jmp
adc
fcmovne
(bad)
mov
cmps
(bad)
jno
dec
lds
xchg
ret
aas
shl
call
jno
sub
std
push
movs
sub
sar
or
retf
imul
mov
nop
jae
jecxz
jo
fwait
mov
adc
daa
adc
pop
jecxz
mov
aad
xor
jbe
dec
mov
add
ins
jg
shl
int
ja
adc
ja
xor
push
shl
loope
sub
jg
movs
popf
push
sbb
(bad)
xchg
(bad)
push
daa
cmp
leave
adc
les
xchg
ins
inc
mov
push
add
fcomp
movs
or
sbb
in
cli
jl
dec
movs
jmp
not
cmp
xor
xlat
outs
add
mul
adc
cli
dec
mov
mov
mov
scas
fcom
je
sub
xchg
jo
mov
fs
fwait
or
cmc
sub
ror
inc
shl
mov
sub
das
dec
jno
cmp
cmps
mov
jecxz
sbb
ret
or
push
mov
call
or
in
mov
ret
fsubr
clc
mov
in
mov
sbb
movs
jo
inc
or
xor
adc
loopne
icebp
stos
xchg
ins
in
mov
(bad)
das
dec
ret
and
daa
sub
or
nop
dec
aas
mov
loopne
stos
pusha
outs
movs
dec
inc
psrad
sbb
dec
call
jae
lahf
cld
ret
pop
mov
outs
mov
leave
sbb
out
cli
mov
je
in
and
int
test
xor
mov
repz
jmp
addr16
hlt
pop
and
inc
sbb
adc
mov
xor
and
rol
sbb
pop
push
cmps
out
adc
test
xor
and
int3
mov
inc
bound
rcr
adc
popa
scas
jmp
sub
cmp
in
and
js
adc
xchg
fisubr
sub
mov
ret
inc
fs
add
in
loop
pop
cmp
fsubr
in
push
punpcklbw
mov
hlt
lea
loope
mov
add
and
in
adc
fstp
push
das
mov
jo
push
imul
sbb
xchg
out
aam
push
xor
pop
cmps
add
fist
js
outs
push
and
jecxz
sbb
cdq
xor
aas
xor
(bad)
and
and
cmp
or
xor
sub
in
sahf
add
xor
and
inc
sub
js
push
loope
push
cmp
into
jge
test
loop
popa
gs
mov
sti
inc
mov
pop
push
xchg
fistp
je
std
icebp
sbb
add
es
cmc
ss
and
lods
cmp
push
jb
push
xlat
jb
jno
lods
ja
push
repz
popa
adc
jnp
cld
cdq
pop
aad
fisttp
and
fist
mov
inc
jmp
scas
sbb
fisubr
aaa
inc
scas
cdq
sub
inc
test
and
jl
jb
jl
scas
(bad)
(bad)
inc
jmp
mov
inc
out
pop
jl
jae
lods
pop
(bad)
or
push
push
add
(bad)
daa
jb
fnstsw
jl
add
(bad)
xor
jl
sub
pop
mov
inc
push
mov
jnp
xchg
(bad)
push
out
test
adc
mov
lods
call
hlt
sahf
adc
push
cs
lds
test
iret
call
jb
xlat
or
jmp
jp
xor
and
pop
mov
or
hlt
mov
sub
mov
js
cmp
or
adc
mov
dec
in
ss
jmp
jp
pop
js
jnp
mov
pop
in
(bad)
(bad)
mov
mov
mov
loop
add
shl
call
xchg
aaa
movs
outs
sub
fsubr
jl
jno
cmp
jg
cmp
loope
fld
xchg
xchg
dec
sti
lods
(bad)
fstp
sbb
xor
sbb
cld
jbe
xor
ds
adc
ds
sbb
jp
sub
imul
je
aam
lea
not
cdq
aad
popf
das
addr16
into
loope
push
mov
in
mov
int
fstp
dec
jbe
or
movs
and
jle
mov
rcr
ja
shr
jb
jp
mov
dec
(bad)
mov
loope
es
test
and
sub
lds
push
aam
pop
scas
sbb
ret
pop
xor
cli
inc
push
xor
mov
inc
xchg
adc
adc
xchg
fist
aas
pop
jne
jbe
je
imul
xchg
mov
push
retf
sbb
pushf
dec
gs
fistp
outs
add
mov
ins
(bad)
(bad)
or
in
std
(bad)
pop
rcr
or
rcl
lahf
push
call
or
dec
enter
inc
(bad)
xchg
not
cdq
pop
mov
or
xchg
enter
inc
scas
(bad)
repnz
and
ins
pushf
fcom
and
pop
mov
in
out
cmp
or
or
or
cmp
jmp
pop
sti
push
test
jmp
mov
out
iret
add
pusha
add
dec
mov
mov
cmc
shl
cmp
call
pop
test
push
fwait
or
shr
and
jnp
dec
jmp
jp
popa
xchg
out
fldenv
cs
adc
xchg
and
aaa
jecxz
jl
cmc
out
mov
adc
in
adc
jb
pop
or
mul
aam
outs
pop
sub
or
mov
fstp
push
pushf
adc
movs
jnp
xchg
cli
and
xchg
(bad)
aad
sbb
cmps
das
jne
(bad)
adc
cmp
dec
rol
xchg
lea
frstor
aas
mov
xchg
jmp
mov
nop
addr16
sbb
fadd
mov
mov
and
lahf
lods
out
sbb
and
dec
retf
lds
je
jg
leave
leave
dec
fs
imul
enter
mov
and
adc
mov
inc
add
mov
mov
or
mov
into
(bad)
clc
and
call
stos
jbe
mov
adc
jmp
adc
test
add
cmp
add
xlat
mov
pop
xchg
mov
mov
mov
iret
lods
in
pop
sar
clc
pop
ror
in
mov
retf
idiv
(bad)
or
cmp
xchg
sub
popf
xchg
out
dec
sbb
in
jmp
lds
jmp
pop
int
sahf
sub
push
mov
inc
cmp
pop
sti
hlt
mov
stos
call
and
mov
sbb
fwait
popf
dec
push
sbb
jmp
sub
mov
fdivr
inc
cmp
xchg
mov
outs
fs
daa
cli
in
and
inc
sar
inc
mov
aas
xchg
loop
and
add
or
push
sbb
dec
aad
fild
stc
mov
jnp
imul
mov
inc
fld
jbe
jge
xchg
shl
aas
ret
into
inc
adc
mov
pop
movs
pop
clc
rcl
fwait
repnz
sbb
cmc
mov
ins
(bad)
mov
(bad)
sbb
or
adc
sub
push
dec
xchg
fwait
and
adc
(bad)
fmul
mov
dec
fwait
sbb
fidiv
sub
adc
(bad)
mov
outs
mov
mov
push
into
push
cmp
lods
mov
ret
jmp
jge
mov
xor
jmp
aam
jg
push
dec
jb
jmp
ror
push
(bad)
popf
pop
mov
cld
pop
ss
cmp
lea
ja
jbe
xor
or
lahf
xlat
jmp
jmp
jo
out
jge
jmp
jbe
cdq
lods
daa
push
push
mov
test
mov
stc
mov
jle
aaa
movs
rcl
sbb
pop
cmps
mov
pop
aas
push
movs
loop
pop
xor
stos
aaa
test
fisubr
std
cs
sub
cmp
xor
pop
repnz
jnp
ror
mov
inc
retf
jmp
hlt
pop
ins
xchg
xlat
cmp
cmp
dec
jg
pushf
pop
shl
aas
xor
mov
mov
mov
mov
cdq
push
loopne
mov
std
mov
test
mov
push
aaa
js
out
cmp
mov
add
das
pop
cmp
pushf
mov
fwait
nop
xor
imul
lods
das
adc
in
xor
push
inc
mov
jne
cmp
fmul
push
push
rol
mov
rol
dec
or
mov
out
jmp
(bad)
scas
cmc
inc
dec
into
ja
xchg
jecxz
mov
cmp
icebp
mov
fild
adc
inc
lahf
jae
call
cmps
mov
ins
sub
jno
ret
or
lods
xchg
data16
lods
xor
add
inc
iret
nop
lock
icebp
mov
jmp
(bad)
and
fcomp
jmp
push
push
sbb
pop
mov
push
adc
lods
jg
and
and
in
push
push
xchg
add
inc
(bad)
fidivr
mov
push
jae
xchg
loopne
jns
jge
clc
jno
xchg
test
jecxz
popf
xor
sbb
mov
and
imul
sbb
pop
in
sbb
ja
mov
xlat
cmp
daa
mov
dec
mov
daa
pop
es
lock
lea
je
xchg
mov
scas
mov
sub
push
cld
je
repnz
in
lock
sbb
mov
clc
xor
rcpps
ret
call
sti
adc
test
lods
or
in
fyl2xp1
out
push
xchg
(bad)
mov
xor
push
aam
es
sub
and
out
in
adc
mov
mov
mov
jne
mov
div
pop
leave
out
push
xchg
mov
xchg
lds
jb
xchg
or
push
call
sbb
jp
lods
es
push
sahf
fsubr
mov
add
hlt
mov
pop
rcr
out
retf
mov
mov
out
cmp
sub
fwait
jmp
add
sti
(bad)
mov
shl
jmp
aam
ins
dec
sbb
cmp
fisub
inc
je
mov
pushf
or
mov
dec
adc
push
jmp
inc
mov
adc
fnstenv
stos
xor
popf
cmp
xor
imul
fs
inc
mov
test
and
daa
je
test
pop
jp
push
(bad)
sub
ret
add
in
dec
or
pop
(bad)
std
imul
sbb
jg
pop
mov
xlat
pop
iret
call
mov
cmp
imul
xlat
jbe
int
inc
pop
pop
inc
inc
neg
xlat
ficom
cdq
cld
push
dec
pop
inc
lods
or
xor
xchg
icebp
sub
jne
dec
pop
iret
bound
popf
rcl
or
loope
push
xor
push
sbb
mov
mov
xchg
dec
mov
pop
(bad)
dec
fisttp
mov
dec
push
xchg
add
jno
and
(bad)
xor
jl
loop
push
ret
stos
jnp
cmp
aad
es
out
push
xor
rcr
loop
mov
std
ins
hlt
out
std
push
fwait
sub
xchg
push
jne
dec
into
daa
test
cdq
push
xchg
jmp
mov
test
cmc
in
and
and
mov
add
cmp
shl
mov
ret
sbb
(bad)
fs
xchg
sub
das
mov
xlat
mov
iret
mov
sbb
fidiv
fbstp
xchg
cwde
test
pop
repz
jne
repnz
pop
pop
xor
test
btc
ja
hlt
mov
sub
cmp
div
cmc
xor
push
shl
ins
xor
add
jmp
xchg
inc
xchg
push
jmp
xor
mov
gs
pop
mov
xchg
mov
(bad)
xchg
int3
cli
hlt
ins
push
push
imul
ss
pop
inc
mov
push
mov
or
jmp
sbb
in
jne
or
lods
sahf
push
and
xchg
cdq
xchg
dec
lea
imul
popf
xlat
adc
lock
xchg
add
(bad)
xchg
push
fistp
fdivr
push
xchg
xchg
xchg
or
call
sub
addr16
outs
jbe
mov
xchg
inc
repz
fstp
jno
xchg
mov
mov
mov
sub
mov
fidiv
cwde
xor
push
mov
movs
mov
loope
rcl
(bad)
movs
int
inc
push
scas
movs
or
retf
mov
cwde
call
mov
pop
jecxz
cmps
push
lds
fbstp
and
jo
loope
scas
imul
das
outs
cmp
imul
retf
test
ins
outs
pop
inc
push
mov
sbb
xchg
mov
mov
test
mov
pop
shr
gs
daa
mov
pop
neg
js
mov
fldcw
dec
cli
xor
xchg
(bad)
aaa
cmp
aas
inc
aad
sbb
mov
mov
jecxz
mov
xchg
mov
pop
repz
out
aaa
push
pusha
lock
sub
dec
or
sbb
sub
jnp
inc
adc
sbb
xchg
clc
in
sahf
inc
fnstenv
adc
dec
push
mov
mov
or
pop
ss
xor
outs
mov
cmp
jge
mov
cmp
es
jl
xchg
push
cs
in
or
push
sbb
js
mov
inc
xchg
xor
fs
adc
sbb
dec
loopne
out
xchg
into
pop
mov
dec
loop
inc
int3
pushf
arpl
and
jmp
das
jno
lock
(bad)
retf
cmp
cwde
test
daa
and
inc
push
(bad)
mov
push
adc
sbb
popf
ret
lods
and
int3
ins
call
mov
xchg
mov
and
add
pop
aad
fsubr
sub
push
mov
out
or
rcr
pop
adc
pushf
pop
cwde
in
inc
out
push
(bad)
add
adc
(bad)
cmc
cmp
mov
sbb
inc
or
lahf
mov
sub
inc
add
icebp
into
jge
in
jge
int
inc
imul
pop
pop
inc
push
or
sbb
inc
stos
jmp
retf
shl
mov
lods
rcr
aam
xchg
jmp
push
aas
je
jge
rcl
cmp
aam
sbb
pop
mov
test
sub
ja
call
or
sti
scas
mov
mov
sbb
retf
or
in
call
dec
int
push
cmp
push
scas
fnsave
add
(bad)
xor
xchg
clc
shr
cmc
pushf
rol
(bad)
stc
push
lea
xor
ret
(bad)
iret
push
shr
mov
jne
fild
cs
sub
pop
jne
popa
ins
popf
cli
das
sbb
fnstenv
xlat
or
int
jne
sti
into
mov
mov
dec
xchg
pop
inc
sub
mov
(bad)
add
idiv
push
inc
xchg
mov
out
push
adc
call
loope
cs
push
sbb
out
dec
cld
cmp
jecxz
rol
mov
enter
jmp
clc
outs
dec
jns
pop
(bad)
out
cld
out
pop
sub
test
xchg
fcomp
add
mov
jmp
bound
cld
imul
jle
lds
mov
ret
dec
and
xchg
cmp
int3
call
push
movs
mov
lahf
jg
lods
test
stos
test
push
xor
cmp
mov
std
sub
mov
xchg
lods
jg
sbb
lods
mov
das
sbb
sbb
ficomp
dec
push
(bad)
sub
push
xchg
or
dec
or
or
out
pop
cdq
fwait
adc
das
int
dec
mov
mov
(bad)
push
movs
jge
sub
fsubr
arpl
sahf
push
push
rcr
push
aam
mov
push
cmps
ja
sbb
jmp
in
adc
push
std
cmp
imul
push
pop
lds
sbb
mov
cmp
jg
xor
xchg
fcomp
mov
rcr
add
lods
jnp
shl
add
(bad)
xchg
out
les
push
cmps
and
int
add
push
and
test
adc
daa
retf
push
adc
dec
xor
retf
add
frndint
(bad)
mov
mov
(bad)
bound
bound
push
movs
push
xchg
sub
cld
push
mov
dec
mov
cmp
dec
cld
inc
mov
std
mov
fld
gs
sub
icebp
dec
push
xchg
jns
sub
repz
inc
adc
inc
stos
(bad)
call
and
add
cmps
ret
(bad)
or
bound
mov
jo
and
pushf
hlt
fcomp
jo
push
jo
sbb
imul
pmulhw
sbb
ja
lods
mov
pop
das
std
or
daa
push
jns
mov
push
dec
shl
sbb
ins
sti
fcmove
in
fstp
(bad)
and
xor
pop
pushf
int3
xchg
cmp
push
scas
loopne
dec
sub
out
or
cmp
dec
mov
popf
dec
lock
cmp
bound
mov
push
xchg
nop
push
imul
add
xor
dec
cld
sub
aaa
hlt
aad
mov
stos
fisttp
inc
clc
or
retf
retf
cmp
mov
shl
jecxz
and
aam
push
arpl
lahf
inc
pop
jno
inc
dec
mov
inc
shl
or
jmp
out
xchg
xchg
call
rol
inc
mov
jg
movntps
xor
aam
in
mov
sti
jle
sbb
mov
and
and
loopne
add
mov
popf
lods
ss
in
popa
fs
call
dec
mov
repz
adc
das
imul
jmp
push
push
inc
repnz
xor
pop
sub
cmps
test
xor
pop
sbb
clc
movs
and
add
adc
sub
adc
push
pop
xchg
inc
xchg
(bad)
sbb
cmp
push
sub
push
mov
das
sbb
pop
mov
out
jmp
in
bound
cmp
sub
push
je
sub
lods
lea
push
sbb
bound
sub
xchg
dec
call
push
mov
gs
mov
jo
int
repnz
xor
mul
push
outs
iret
add
jp
scas
shl
fld
dec
cmp
push
test
iret
frstor
dec
ror
jg
not
push
pushf
or
ror
xchg
push
dec
cwde
mov
mov
jmp
pop
div
cmp
xor
mov
ja
sti
mov
mov
mov
xchg
mov
in
int3
test
xchg
or
mov
xor
sbb
lock
add
inc
jo
aad
add
push
loop
mov
dec
push
push
cmc
inc
sub
cli
push
pop
push
adc
shl
add
add
dec
retf
cwde
or
and
sbb
push
pushf
out
into
jle
jmp
cmp
bswap
lods
ins
mov
xor
xchg
xchg
xchg
lds
xchg
push
xlat
and
mov
or
into
push
dec
cli
(bad)
sub
xchg
xchg
cs
sub
(bad)
lahf
sub
mov
shl
jne
xchg
pop
pop
cmps
leave
jle
pop
gs
shl
xor
fld
(bad)
outs
dec
ins
xchg
and
test
fnstenv
dec
lea
jle
(bad)
ins
jmp
sti
jmp
stc
fistp
jge
xlat
pop
jne
sahf
jns
cmp
pop
mov
inc
cmp
enter
imul
or
add
fsubr
movs
out
test
or
mov
and
arpl
fidivr
hlt
dec
xor
imul
jmp
mov
and
dec
and
ins
push
comiss
adc
sahf
mov
ins
movs
shl
dec
cld
and
test
enter
and
adc
and
outs
stos
and
jge
iret
mov
jp
ror
sub
mov
in
jbe
xchg
inc
pop
mov
mov
call
xchg
das
add
dec
jmp
dec
mov
(bad)
dec
dec
dec
dec
xor
push
jbe
and
cmp
sbb
imul
adc
sub
or
inc
or
mov
sub
add
xor
mov
mov
iret
(bad)
int3
iret
aaa
inc
(bad)
repz
movs
lahf
outs
adc
js
cmp
push
pusha
mov
pop
lods
and
add
jle
dec
fst
aas
jg
mov
jae
imul
jns
adc
movs
xchg
popf
adc
and
and
(bad)
fdivp
fs
arpl
rcr
(bad)
push
adc
sbb
sub
cwde
dec
sub
rcr
add
mov
jmp
push
rcr
jl
ja
(bad)
add
inc
cli
pop
out
push
mov
cmc
or
xchg
pop
add
xchg
adc
int3
fimul
and
loop
stos
loope
xor
popa
xchg
mov
ins
or
adc
pusha
mov
push
bound
sub
iret
fstp
loop
into
dec
adc
jae
outs
pop
fdiv
xor
add
cmc
mov
push
dec
cmp
dec
imul
int
pushf
sub
push
adc
shl
stos
or
xchg
leave
fcom
dec
pop
xchg
jno
xchg
and
nop
cmp
xchg
mov
mov
fild
mov
inc
dec
xor
fidiv
scas
xchg
cwde
xchg
popf
cmc
ds
push
jno
lea
mov
cwde
out
hlt
mov
mov
stos
mov
(bad)
lea
pop
mov
mov
pop
and
pushf
inc
in
outs
fistp
dec
xor
xor
or
mov
xor
and
lea
adc
ss
jmp
jl
es
imul
lods
(bad)
daa
bound
push
or
adc
push
div
lods
fs
xchg
push
push
adc
sbb
mov
inc
xlat
retf
ins
pop
sub
or
or
push
out
xor
popa
pop
mov
dec
div
inc
lock
test
lea
push
xor
lahf
xor
sub
hlt
outs
sub
hlt
mov
jmp
jl
adc
inc
cld
xor
lds
(bad)
aas
ja
dec
iret
inc
dec
cmp
pop
mov
(bad)
xchg
xchg
imul
push
push
xchg
mov
sbb
cmp
pop
pop
leave
js
fadd
shl
xchg
pop
mov
ja
scas
sti
retf
test
inc
xchg
jmp
jle
shl
push
push
mov
and
lock
pop
lods
sub
test
cmp
scas
out
loope
pop
jp
pop
in
xor
ins
mov
sub
lods
cmps
aad
and
sbb
and
jnp
mov
shr
inc
pop
pop
movs
add
xor
sub
fisub
stc
movs
out
mov
pop
jno
loope
xor
or
or
pop
(bad)
inc
push
int3
fwait
jp
adc
jl
imul
cmp
dec
fistp
dec
sub
movs
sahf
scas
test
push
dec
int3
xchg
lahf
int
fdiv
pushf
sub
nop
push
xchg
shl
push
and
cmp
mov
cdq
jns
cmps
dec
or
aad
repz
or
rcl
adc
inc
mov
mov
les
rcr
jno
popa
(bad)
jns
push
xchg
aas
inc
fild
scas
push
xchg
pop
inc
inc
(bad)
jmp
jns
out
in
rcr
shr
stos
mov
pop
aas
or
fist
imul
cmp
sbb
test
sbb
cmp
pop
out
mov
push
test
outs
jmp
jns
sbb
ss
ret
push
leave
mov
lods
je
das
ds
lods
push
lods
sub
clc
das
out
push
xor
xchg
adc
cmc
retf
push
lods
ret
retf
enter
lea
je
jmp
cwde
(bad)
ins
pop
iret
movs
cmp
push
mov
sub
outs
int
fcom
cmp
cmp
xchg
jmp
adc
jmp
add
bound
mov
fs
hlt
lock
fadd
add
leave
repz
fwait
in
jge
je
mov
mov
shl
push
cmc
push
adc
sbb
je
lods
jge
aad
or
cli
in
ja
mov
lahf
cmp
fs
outs
and
push
cmp
sub
mov
add
out
idiv
jo
push
add
pop
les
mov
push
sar
loope
(bad)
(bad)
scas
jnp
cmp
call
adc
sub
pop
or
cli
push
mov
jo
inc
mov
repnz
add
outs
into
mov
xchg
jne
dec
loopne
loopne
sar
lahf
out
inc
fmul
fisttp
push
cmp
(bad)
shl
pop
jp
push
daa
dec
outs
cli
adc
out
call
stos
fst
pop
cmp
pop
loope
xchg
aaa
div
(bad)
push
mov
movs
pop
inc
daa
inc
repz
sub
mov
adc
sub
pop
stos
lock
outs
or
int
aas
pop
aas
aas
sbb
neg
xor
xchg
or
dec
popa
mov
imul
es
jb
data16
adc
push
scas
dec
jecxz
jb
rol
into
fs
push
or
aaa
xchg
inc
shl
imul
daa
adc
je
retf
aas
add
pusha
popf
cld
adc
sbb
pop
sub
lock
leave
or
in
cli
push
imul
pop
sbb
push
and
mov
sub
call
mov
xor
xchg
out
div
or
dec
int3
ret
jle
cmc
ins
popf
(bad)
cmp
scas
jo
mov
arpl
scas
lea
mov
fld
push
mov
xchg
mov
je
or
pop
fucomp
sbb
and
cmps
dec
cs
mov
adc
imul
out
test
sub
stos
rcr
cdq
js
xchg
(bad)
xor
aad
pusha
inc
and
xchg
mov
cmp
lds
jecxz
ds
jecxz
pop
aas
test
idiv
inc
xor
push
adc
sub
mov
sub
add
sti
jb
clc
inc
pop
call
std
ret
sbb
dec
dec
das
inc
out
push
fstp
add
call
in
cli
lds
add
outs
fistp
mov
retf
das
and
inc
pushf
in
jno
(bad)
jnp
(bad)
adc
xchg
pop
mov
pop
mov
daa
test
adc
data16
push
std
iret
lock
daa
sbb
js
cmps
inc
test
jmp
mov
out
xchg
xchg
add
(bad)
ja
and
retf
js
sbb
mov
mov
inc
inc
mov
and
fimul
stc
mov
xchg
jle
std
int3
inc
sti
rcr
xor
mov
cmp
cmp
js
loopne
mov
xchg
mov
in
rol
stc
mov
sub
scas
in
out
mov
stc
cwde
pop
fwait
inc
sbb
cmc
outs
sub
rcr
ficomp
jns
shl
imul
inc
mov
xchg
scas
aam
adc
and
jne
sub
or
adc
xor
(bad)
push
jno
cmp
aad
aam
adc
xor
std
pop
inc
cmp
pop
rol
lock
jb
and
lds
bound
sahf
sub
cmc
mov
(bad)
in
jb
and
(bad)
xchg
xlat
or
scas
or
std
shl
push
sbb
sbb
adc
sbb
je
jns
repz
ret
cmp
sar
ja
scas
jb
push
jp
dec
dec
fsub
xchg
movs
jmp
outs
shr
imul
sti
and
lock
push
les
in
(bad)
loop
sahf
test
ret
hlt
nop
or
std
sahf
fistp
lods
shr
fidivr
or
mov
arpl
inc
rcl
(bad)
aam
cdq
jbe
cmp
addr16
mov
cmp
loope
rcl
cwde
cmp
test
fucomi
mov
fiadd
jge
mov
mov
iret
out
xor
movs
(bad)
mov
loopne
imul
xchg
retf
ins
push
loop
xchg
fstp
add
cmp
(bad)
adc
dec
inc
cs
mov
dec
mov
stc
pop
call
sar
inc
mov
rol
jns
jnp
mov
ins
js
cwde
test
xchg
inc
daa
or
mov
test
addr16
sbb
aaa
ret
movs
pop
(bad)
retf
or
sub
les
mov
dec
div
xchg
jl
out
cmps
xor
jmp
shr
gs
cdq
cwde
cli
icebp
or
xchg
jmp
cmp
jecxz
mov
and
pop
push
scas
dec
loop
addr16
add
jle
loop
mov
rcr
clc
adc
sbb
jl
ret
rcr
add
jmp
mov
mov
in
mov
pop
in
bound
nop
xchg
dec
push
mov
lods
and
pop
mov
pop
repnz
in
stos
ficom
rcl
push
fnsave
cmp
mov
(bad)
jecxz
xor
loop
pop
push
xor
pop
mov
stc
les
je
pop
xor
jae
movs
pop
hlt
xchg
xchg
je
outs
pop
adc
shl
add
dec
(bad)
lock
rol
stc
xor
fisttp
ffree
out
das
push
xchg
and
pushf
sahf
pop
(bad)
fimul
ins
add
mov
mov
pop
arpl
loopne
das
add
lods
pop
mov
mov
dec
mov
dec
inc
iret
(bad)
xor
shl
sbb
sub
adc
jmp
rcr
cmps
call
pop
pop
in
xchg
xor
sub
aaa
popa
jg
jp
lock
pop
or
int
lahf
adc
outs
jecxz
nop
jne
dec
push
ds
sub
dec
push
mov
out
add
push
push
xor
adc
shr
add
and
cmp
fsub
push
add
jle
rol
inc
repz
bnd
sub
outs
xchg
adc
mov
data16
das
mov
in
cmc
je
sahf
jno
sbb
hlt
adc
xor
cmc
jle
inc
out
jno
out
cmc
popa
or
ins
sub
adc
rcl
out
das
mov
movs
sbb
jo
in
xchg
push
push
push
ror
mov
jo
test
popa
jae
(bad)
xchg
jae
in
or
iret
daa
xchg
dec
sub
or
sub
fist
sti
repz
sub
retf
mov
dec
push
out
xor
mov
mov
(bad)
pop
or
neg
nop
out
mov
inc
jmp
fucomp
ja
fst
mov
lock
dec
push
mov
add
mov
lods
add
add
xlat
add
sbb
sahf
add
push
push
retf
repnz
adc
popa
push
shl
dec
xor
retf
lds
mov
jg
xor
and
push
rcr
pop
jmp
fcomp
ss
add
xchg
sahf
inc
cli
aam
enter
sub
dec
jg
nop
mov
retf
xor
call
cld
cld
and
dec
push
dec
push
and
fldcw
dec
push
adc
adc
loopne
pop
loop
fld
mov
ds
in
jno
jne
push
pop
fisttp
xchg
popa
out
sti
popf
stos
das
inc
dec
sub
add
outs
mov
cmp
sub
fwait
xchg
inc
ja
out
dec
sar
mov
(bad)
cli
pusha
aad
xor
mov
ss
pop
sbb
cmps
clc
call
add
mov
fwait
push
(bad)
imul
test
stc
sbb
es
ror
xchg
push
les
jl
imul
mov
std
std
cwde
cmp
loopne
pop
mov
xor
scas
int3
mov
test
and
mov
dec
jle
stos
sbb
stos
jmp
test
iret
sub
and
xor
inc
mov
jge
ktestb
pop
push
add
push
jae
dec
xor
xchg
outs
and
nop
int
fwait
mov
stc
xlat
push
inc
jmp
dec
retf
les
nop
ds
ja
jg
fild
(bad)
les
fstp
lods
add
pop
cdq
mov
inc
sbb
stos
lds
sahf
popf
add
loopne
dec
pushf
aas
popf
and
mov
lods
ficom
and
jp
js
xlat
(bad)
out
enter
lea
mov
shl
lock
(bad)
stos
jnp
test
or
mov
dec
jmp
mov
push
popa
jmp
mov
inc
add
cwde
xchg
lock
adc
(bad)
in
push
mov
js
clc
pusha
xchg
outs
test
pushf
fdiv
retf
out
jmp
aas
addr16
xchg
jl
popf
jbe
fmul
mov
xchg
mov
or
mov
loopne
leave
sub
mov
add
push
pop
add
pop
das
pusha
cmc
dec
add
f2xm1
ja
sahf
pop
inc
sahf
jb
cmc
xchg
out
cmp
xchg
mov
push
loop
mov
loopne
or
and
call
xlat
fild
cli
or
sub
das
div
(bad)
and
lock
xchg
std
mov
mov
dec
(bad)
cmc
or
push
add
mov
leave
and
xor
into
call
js
xor
movs
shr
not
movs
cli
js
pop
sub
push
jns
getsec
xchg
mov
shl
mov
jnp
pop
push
mov
pop
rcl
pop
cld
outs
sbb
test
mov
cmp
sub
ins
xor
loopne
dec
pop
out
mov
adc
test
and
mov
int
fcmovne
cmp
ret
push
fnstsw
imul
dec
jae
adc
pop
xlat
arpl
add
test
ds
out
push
jb
jns
sub
ins
loop
mov
sub
xchg
test
ret
or
clc
inc
ffree
std
mov
cmp
dec
bound
mov
sub
and
lahf
int3
test
push
add
adc
mov
jb
jl
rcl
leave
and
cmp
sbb
sbb
mov
stos
adc
mov
shr
test
ds
loop
repnz
jbe
jnp
add
dec
repz
jmp
add
enter
dec
js
hlt
rol
rcl
inc
fmulp
pop
mov
inc
aas
loopne
cmp
sub
sub
sbb
cli
std
pop
loopne
adc
add
sbb
xor
mov
add
mov
data16
mov
retf
sbb
cmp
xchg
cmps
(bad)
rcl
leave
in
inc
mov
in
xchg
bound
mov
sbb
in
sub
data16
or
ss
test
into
cwde
or
sub
fcmovnb
mov
jnp
mov
or
popf
repz
or
mov
dec
xor
scas
adc
test
mov
sub
and
movs
int
test
xor
fisub
sub
mov
and
cmp
pop
ss
movaps
inc
xor
or
enter
dec
lock
fldcw
inc
jbe
dec
test
jmp
rol
pusha
push
inc
sub
xchg
cmp
mov
dec
pop
in
jmp
aaa
push
inc
jle
xchg
mov
xchg
js
mov
add
mov
xor
push
stos
cmp
mov
adc
jo
pop
repz
movs
xchg
stc
xchg
xor
sar
hlt
xchg
push
cmp
out
xadd
xor
les
lods
sub
jp
popa
xor
jmp
aaa
push
and
retf
dec
xchg
add
leave
sub
ins
sub
imul
pop
add
pop
mov
inc
cmp
test
icebp
jp
test
call
push
lea
mov
dec
cmp
lds
pop
hlt
jno
inc
xchg
sbb
fxtract
jo
(bad)
popa
dec
das
xchg
add
popf
scas
mov
movs
retf
add
xchg
aad
or
in
test
lods
mov
and
lea
mov
xchg
sub
cdq
dec
inc
jbe
dec
mov
jmp
xor
sub
xchg
cmp
mov
dec
pop
fld
push
add
sub
arpl
dec
not
neg
sub
push
jp
pop
div
sbb
pop
pop
push
leave
imul
add
fwait
add
in
pop
push
iret
sbb
(bad)
mov
les
and
int3
rol
push
shr
mov
inc
shl
pop
jecxz
ss
rcl
mov
xchg
cmp
sbb
sub
sub
adc
dec
dec
jp
mov
mov
sbb
jbe
push
in
mov
push
add
sub
cmps
push
rol
xor
dec
enter
addr16
retf
dec
out
leave
arpl
arpl
cmp
fwait
dec
fwait
and
xor
movs
xor
mov
lods
dec
add
dec
jno
stos
xor
mov
dec
int
jns
sub
jae
sbb
retf
dec
push
rol
adc
sbb
sub
dec
call
icebp
fild
imul
out
in
jo
es
jmp
repnz
lahf
into
clc
scas
pop
or
je
aam
pop
and
push
cmp
dec
ss
retf
pop
adc
pop
int
cmp
mov
dec
and
sub
jg
rcr
pop
je
sti
sub
cmp
stos
imul
div
pop
fcom
imul
add
xor
(bad)
adc
push
in
mov
in
mov
(bad)
push
(bad)
jp
in
adc
push
loop
mov
arpl
sbb
in
push
sbb
jne
ficom
mov
out
dec
arpl
sbb
imul
fsubr
call
mov
dec
rol
lods
lods
and
cmp
ins
leave
movs
call
rcr
and
ret
pop
popf
sub
mov
jmp
mov
and
das
js
js
bound
outs
mov
pop
pop
inc
mov
add
test
cmp
add
popf
leave
mov
lea
cmp
mov
cdq
cmps
and
push
xchg
fs
xchg
cs
or
cmp
adc
fbld
mov
or
jge
jle
hlt
add
add
dec
daa
out
mov
sbb
xchg
xor
ins
in
ror
xor
ja
je
pop
out
ror
push
pop
stc
pop
dec
dec
mov
or
outs
aad
add
retf
std
or
or
leave
jecxz
call
cwde
fnsave
inc
mov
mov
lods
fcomp
aaa
add
inc
out
xor
adc
and
dec
fisttp
fistp
aas
movs
sbb
jge
and
mov
pop
and
stos
test
std
and
adc
mov
push
mov
inc
outs
retf
scas
cmp
adc
enter
sub
push
push
lea
cmp
dec
mov
dec
inc
jno
sbb
dec
mov
xchg
std
nop
stos
inc
test
jo
fldcw
inc
jbe
dec
xchg
or
inc
xchg
call
inc
sub
test
mov
inc
(bad)
xor
iret
jmp
cmp
sbb
inc
sub
aam
in
mov
test
dec
je
stos
bound
mov
pop
fisub
push
scas
and
sbb
mov
pop
dec
mov
pop
int
es
cmp
inc
in
sub
int
jnp
sub
and
hlt
xchg
sbb
clc
es
aas
fs
lea
or
mov
add
cmp
imul
push
mov
out
cmp
add
cli
xor
stos
sar
data16
mov
sbb
pusha
or
movs
mov
fiadd
pop
es
cdq
sbb
daa
dec
sbb
(bad)
pop
cs
or
mov
xchg
fld
mov
iret
call
push
pop
push
mov
ins
and
iret
mov
fbld
addr16
inc
sub
sbb
aam
jae
and
out
and
sub
dec
mov
mov
lahf
lea
xor
jmp
popf
fst
loopne
push
mov
jecxz
add
sub
dec
mov
fimul
inc
sbb
in
sub
cmp
sub
dec
add
sahf
mov
xor
adc
jbe
in
stc
add
in
das
fild
cmp
nop
div
pop
in
sbb
cmp
inc
pop
mulps
pop
xchg
xchg
hlt
sbb
outs
stos
mov
jo
test
sub
or
adc
or
dec
shld
leave
in
adc
sub
outs
push
fnstsw
ss
aaa
sbb
xchg
xor
push
adc
rcl
push
fst
div
lea
arpl
in
sti
cmp
lock
dec
cmps
mov
cmp
xchg
shr
int
imul
retf
pusha
add
sub
xchg
je
inc
add
push
inc
pop
sub
jb
jb
or
jmp
add
jno
sbb
xchg
push
inc
mov
test
sub
nop
or
inc
mov
mov
and
nop
nop
and
rol
ror
or
inc
xlat
into
aas
mov
sahf
push
sbb
xlat
ja
cmp
dec
cmp
mov
ror
data16
cmp
out
data16
sub
shr
push
adc
call
adc
pop
ins
inc
push
fwait
xor
mov
mov
retf
push
stos
fidiv
jmp
scas
pop
mov
lods
mov
mov
rcl
lods
call
retf
outs
lods
mov
mov
inc
shr
ja
jnp
lahf
jle
(bad)
sti
sahf
jns
fidivr
mov
out
lahf
mov
(bad)
cmc
arpl
enter
push
and
sub
add
dec
xor
add
mov
pusha
pop
add
jmp
cmp
sub
es
shl
push
xchg
ss
pop
dec
popa
je
mov
or
and
or
or
retf
mov
xchg
push
test
hlt
mov
xchg
jg
pop
jne
stos
xchg
sbb
add
push
cmp
push
mov
mov
push
lods
movs
jae
mov
mov
or
ins
cmp
mov
pop
xchg
shr
or
mov
rcr
cwde
je
xchg
inc
dec
jbe
or
je
aad
das
lea
mov
ret
loopne
push
mov
push
mov
test
imul
fidiv
loop
pop
or
mov
fidivr
push
lahf
in
shr
mov
aad
cwde
xor
loope
jl
mov
fwait
int
in
leave
and
add
sub
and
jns
cdq
into
adc
out
sbb
ret
sub
retf
lock
mov
pop
in
ret
test
mov
adc
mov
popa
pop
inc
sti
sub
dec
aad
loop
cli
mov
hlt
mov
jge
jg
dec
ja
pushf
sahf
inc
push
push
push
ffreep
cmp
sbb
inc
push
dec
scas
and
stos
pop
dec
cld
xor
outs
lds
out
jne
xchg
stos
call
dec
popf
call
jbe
in
dec
mov
inc
cmp
dec
add
imul
shl
int
adc
jg
jl
retf
mov
rol
ins
mov
dec
jmp
or
ja
stos
inc
ins
jge
add
(bad)
sub
sub
in
ins
stos
ret
movs
into
stc
pop
cmp
dec
sbb
imul
and
cmc
adc
test
or
lea
cmp
out
in
and
add
and
xchg
push
inc
xchg
jno
or
fdivr
pop
js
mov
out
sub
cmp
cmp
icebp
xchg
pop
cdq
lahf
jle
lods
jbe
mov
mov
sbb
push
sbb
aad
sbb
adc
mov
aas
stos
push
xchg
jmp
popa
jmp
call
icebp
call
ds
fcmovne
pop
ret
stc
mov
popf
out
fs
or
call
sbb
add
call
cmp
cmp
lods
and
sub
fmul
outs
scas
add
out
mov
cmp
cwde
popa
pop
lods
ret
jo
dec
cs
mov
cmp
ret
lock
mov
sub
aas
daa
dec
dec
and
out
je
xchg
rcr
outs
lahf
push
call
mov
cli
dec
lock
xor
out
mov
cmp
fucom
(bad)
mov
outs
mov
cs
cmps
push
adc
inc
xor
retf
xchg
(bad)
bound
sbb
out
and
call
in
clc
movs
mov
inc
mov
hlt
out
xchg
mov
stc
daa
xchg
sbb
add
cld
lock
dec
stos
lds
mov
xlat
mov
cmp
inc
(bad)
push
xchg
mov
jne
sar
movs
add
pop
adc
ins
sub
int3
mov
data16
aaa
das
bound
jnp
xchg
sahf
mov
repz
(bad)
out
push
dec
dec
cmps
dec
out
(bad)
and
std
xor
mov
xchg
shl
xchg
pop
in
inc
icebp
mov
mov
or
sti
iret
mov
leave
cld
adc
xchg
jns
sbb
fisttp
jns
adc
sub
pop
lods
inc
pop
shl
cs
iret
sbb
push
test
je
push
jmp
or
add
ja
and
dec
pushf
out
dec
add
or
rcr
inc
add
jg
adc
sub
adc
in
dec
mov
clc
fwait
dec
jns
mov
cmps
(bad)
jmp
adc
lahf
fisttp
adc
add
into
inc
inc
mov
in
and
push
popa
cmp
push
xor
rcr
aam
push
stos
jae
add
fist
ret
sbb
xchg
gs
mov
xchg
sub
lock
sbb
sbb
mov
jno
mov
adc
pop
inc
mov
xor
cmp
or
pop
in
dec
add
jnp
adc
mov
sub
push
or
jg
xchg
jmp
sbb
xchg
icebp
jmp
rcl
jns
jnp
add
pop
push
dec
scas
fsub
sbb
retf
xchg
ins
int
retf
jno
popa
add
cmp
jbe
or
cmp
in
or
aam
ret
ins
dec
dec
pop
ja
ins
ss
push
sbb
in
or
popf
les
ficom
or
imul
repz
out
xor
xchg
xchg
pop
mov
les
sub
push
aas
aam
and
movs
retf
inc
mov
cdq
pusha
cmps
enter
cmp
dec
jae
add
adc
adc
mov
or
pop
clc
scas
aad
call
fcmovnu
stos
jmp
and
mov
mov
das
mov
push
test
nop
sbb
leave
mov
shr
mov
adc
pop
lds
pop
pop
inc
push
cs
mov
xchg
fwait
stos
ja
stos
aad
xchg
cdq
jmp
dec
pop
fcomi
cdq
pop
daa
stc
mov
nop
pop
jp
ror
dec
(bad)
jne
and
push
fcmove
out
xchg
jne
das
pop
nop
ss
ror
retf
xor
add
iret
pushf
ret
or
inc
mov
iret
xchg
xor
das
sub
dec
cmp
adc
rol
repnz
xchg
imul
cmps
add
fisub
push
hlt
push
mov
ja
repz
pop
mov
sub
xor
ins
rcr
cmp
jmp
jae
scas
pop
enter
adc
out
jo
or
push
loop
(bad)
jmp
and
(bad)
in
shl
adc
cmc
popa
fimul
(bad)
xchg
jle
sub
mov
xchg
sar
aaa
cmp
dec
(bad)
push
dec
or
retf
or
mov
bound
xchg
mov
mov
in
shl
mov
pop
shr
call
sbb
(bad)
(bad)
in
stc
jmp
and
xchg
adc
loopne
mov
push
in
ffree
mov
loopne
repnz
sub
dec
sbb
movaps
es
nop
xor
aad
retf
fidiv
or
mov
and
fst
test
lock
mov
imul
fs
mov
pop
repz
mov
jl
(bad)
in
mov
sub
push
add
mov
push
push
jg
sbb
push
test
ins
xchg
not
fcomi
or
lea
out
std
ret
pop
mov
or
scas
adc
and
outs
cmp
push
movs
jb
sbb
jbe
mov
scas
sahf
adc
call
ret
dec
stc
mov
test
(bad)
(bad)
(bad)
mov
jno
lods
xchg
test
cmps
ss
mov
cmp
rcr
test
inc
mov
cmp
mov
(bad)
jae
pop
ja
mov
jo
rol
mov
or
adc
pop
inc
xchg
sub
aaa
pusha
jg
sub
xchg
mov
not
fucomp
sub
ins
cmp
ja
mov
adc
out
dec
fistp
ss
jp
jmp
or
outs
and
ror
inc
mov
ror
mov
jae
jl
jne
mov
mov
fwait
shr
adc
or
adc
or
lods
movs
jl
loopne
lods
rsm
fimul
jo
sub
mov
xor
cmp
pop
sbb
adc
adc
js
je
ins
pop
dec
lods
cld
cmp
xlat
and
(bad)
cld
and
xor
mov
add
test
sub
or
adc
(bad)
repz
pop
out
pusha
dec
clc
pusha
mov
test
lods
in
lods
sti
push
mov
or
pop
push
and
sub
add
xchg
mov
dec
xor
inc
mov
add
cs
in
dec
dec
push
loop
adc
jno
imul
shr
mov
or
pop
in
xor
das
sar
and
or
in
aaa
cmp
jne
jnp
adc
cmp
dec
jae
inc
aad
push
sub
inc
icebp
aas
xlat
xor
imul
jg
movs
xlat
push
shl
shr
ret
mov
sbb
das
mov
adc
adc
fsub
daa
sub
cmps
pop
lahf
fistp
out
cmp
imul
movs
in
(bad)
mov
lock
test
and
out
test
arpl
repz
mov
test
clc
mov
add
sbb
popf
ror
inc
scas
sar
call
jb
mov
cmp
sbb
outs
push
jnp
lock
or
cmp
movs
jb
pop
push
outs
mov
ss
jnp
dec
push
sbb
jae
pop
jnp
call
popf
pop
scas
and
ret
neg
xchg
adc
pop
jno
hlt
xchg
cs
imul
cmp
idiv
retf
in
and
daa
xlat
loopne
sbb
sbb
int
and
pop
addr16
out
pop
xchg
psllw
cmp
jp
ret
ret
stos
popa
xor
(bad)
bound
fbstp
cmp
fs
cmp
ss
mov
adc
adc
dec
xchg
push
sahf
jmp
or
mov
sbb
fistp
movs
es
mov
fsubrp
repz
pop
(bad)
retf
int3
pop
xchg
inc
push
scas
pop
sbb
(bad)
ds
jmp
je
jb
imul
jns
xchg
cmp
adc
ss
lods
fisubr
mov
pandn
sub
scas
test
mov
xchg
jg
jl
outs
mov
shl
test
call
aam
sub
movs
aaa
fidivr
out
lock
sub
cs
inc
pop
inc
loopne
out
sub
(bad)
jmp
xchg
xor
xchg
nop
out
jbe
cli
mov
aas
shl
clc
ja
xchg
cmp
inc
das
xchg
inc
dec
xchg
jecxz
daa
inc
xchg
out
je
in
call
out
pop
shr
in
daa
add
pushf
mov
push
lock
clc
mov
mov
call
jle
fmulp
test
(bad)
lahf
jle
test
popf
lds
mov
inc
dec
sbb
mov
outs
aas
mov
jmp
jg
push
mov
lahf
std
out
paddsb
outs
aas
stos
loope
and
out
int3
jno
xchg
lahf
repz
in
jle
into
push
cs
out
das
lahf
inc
or
push
iret
(bad)
sbb
fbstp
nop
jl
pop
call
pop
cmp
pop
jg
in
dec
add
sbb
shl
cmp
in
popa
stos
cli
(bad)
clc
dec
vfrczss
leave
out
dec
retf
out
pop
not
(bad)
out
sub
scas
add
sbb
pushf
xchg
xlat
std
add
loop
cs
stos
das
mov
adc
cs
js
mov
sti
and
xchg
xor
jno
and
and
stos
jge
dec
pusha
sti
lea
pop
jp
test
mov
ret
repz
push
adc
mov
cwde
loop
xor
and
mov
scas
xor
mov
and
cmp
(bad)
mov
jp
retf
bnd
push
rol
inc
ins
cli
mov
fdivr
mov
aam
jp
imul
mov
adc
jmp
xchg
dec
sub
icebp
or
cmp
cld
inc
int3
movs
repnz
stos
inc
cwde
pop
(bad)
popa
xchg
cs
popf
and
jl
mov
arpl
or
pop
mov
cld
inc
push
cmps
xchg
pop
or
mov
push
cmps
cmp
xchg
pop
mov
ins
xchg
sbb
mov
psrld
rcl
xor
aam
lods
push
fs
pop
movs
test
inc
pop
aam
out
dec
mov
out
jmp
(bad)
(bad)
add
cld
(bad)
lods
push
outs
push
cmp
and
jle
jo
jmp
stos
call
div
pop
movs
fstp
sbb
adc
test
in
dec
enter
pop
push
paddusw
xchg
out
inc
(bad)
scas
lock
sbb
mov
(bad)
sub
or
int
dec
bound
jl
and
mov
in
leave
jp
(bad)
and
repnz
and
ret
mov
or
test
inc
int
movs
pusha
xchg
addr16
and
inc
pop
loopne
or
pop
cmps
add
data16
and
ds
fimul
shl
mov
dec
jns
mov
push
jge
or
sti
mov
aaa
into
push
dec
fisub
pop
(bad)
fs
lea
movs
xchg
add
out
ins
adc
movs
les
and
mov
mov
or
retf
cmp
inc
fdiv
inc
push
inc
push
jp
fild
(bad)
xchg
inc
ins
iret
mov
mov
add
add
sub
cmovge
dec
cli
scas
mov
dec
mov
ins
inc
retf
jb
outs
addr16
es
out
mov
cwde
mov
loop
shl
mov
dec
push
es
mov
mov
ss
or
mov
mov
pop
or
cmp
(bad)
jecxz
cmps
xchg
xor
xor
lods
int
imul
mov
out
std
sub
mov
and
sar
push
mov
push
sbb
adc
lods
(bad)
cmp
std
add
mov
stos
movs
or
lahf
mov
adc
test
outs
es
dec
rol
outs
mov
inc
push
popf
xor
push
pop
and
data16
frstor
popa
dec
pop
cmp
adc
push
cmp
out
nop
xchg
fs
jae
cwde
mov
call
and
push
xor
inc
adc
ds
not
jb
mov
sbb
test
mov
ins
jmp
pop
cmp
cld
and
and
fbld
jne
push
imul
or
rcl
add
inc
and
popf
inc
adc
retf
and
movs
pop
inc
dec
mov
mov
pop
mov
inc
(bad)
mov
fxch
adc
adc
(bad)
adc
pop
movs
gs
dec
dec
jp
adc
test
cld
push
mov
inc
idiv
test
jg
dec
fs
(bad)
mov
pop
push
and
cmp
sti
cmp
dec
jmp
nop
mov
das
retf
jns
sub
mov
and
cld
sti
dec
cmp
push
retf
mov
sub
jno
add
fistp
or
cli
xor
and
mov
lahf
push
stos
xchg
push
lods
cli
jmp
mov
ins
je
pop
inc
xchg
xlat
dec
mov
call
pop
repnz
push
or
sub
popa
and
fmul
dec
adc
and
cdq
or
(bad)
mov
or
pop
gs
adc
ds
mov
jmp
ss
jmp
lods
cmp
pop
add
cmp
mov
and
cmp
es
into
or
push
sbb
out
dec
scas
loopne
adc
test
xchg
xor
test
adc
fisubr
ds
cld
test
mov
cmp
retf
and
cmp
stos
or
inc
xor
std
dec
cwde
push
xor
push
jp
mov
add
xchg
mov
(bad)
or
shr
imul
mov
jae
mov
push
lea
clc
ret
cwde
mov
ins
mov
xlat
daa
(bad)
ins
xchg
cdq
daa
(bad)
movs
inc
jns
outs
call
call
shl
out
(bad)
div
leave
cmp
sub
fwait
scas
lock
mov
pop
mov
push
mov
sbb
les
pushf
adc
push
pop
ins
arpl
ret
sub
push
mov
inc
push
popf
push
jb
sbb
xor
push
movs
lods
cmp
and
jae
dec
mov
jns
mov
sar
sub
test
imul
mov
xchg
jle
retf
adc
loop
cmp
in
loope
push
mov
xchg
pop
shl
aaa
push
jp
jo
(bad)
shl
cdq
mov
int
mov
mov
jne
dec
xchg
jb
out
fsub
(bad)
adc
test
cmps
dec
into
lahf
mov
pop
jbe
xor
adc
int3
mov
ins
xchg
jo
dec
fistp
mov
and
and
push
fs
mov
ror
lock
mov
in
loopne
xchg
jbe
xchg
movs
rcr
(bad)
ret
js
cdq
iret
mov
ins
popf
dec
fild
jg
ss
popf
mov
sub
xlat
adc
mov
ds
push
jg
jmp
push
pusha
out
cli
shl
loop
sub
xchg
sub
sbb
and
out
adc
fimul
adc
aaa
mov
shr
inc
adc
sysenter
xchg
out
pop
outs
cdq
sub
call
ret
lds
aas
inc
out
dec
daa
das
mov
dec
inc
in
out
jae
(bad)
in
cmps
fcom
mov
gs
test
sub
enter
push
pop
dec
cmps
fcomp
jl
lds
addr16
ds
mov
repnz
jecxz
mov
retf
mov
lods
jns
push
pusha
ins
and
sbb
pop
push
dec
dec
pop
adc
bound
cli
test
xor
cwde
js
fwait
jmp
and
enter
test
pop
out
push
cmc
jecxz
push
mov
stos
cmp
retf
xor
xchg
into
xchg
(bad)
dec
arpl
outs
pop
sahf
loop
sbb
movs
mov
retf
pusha
ds
mov
add
inc
push
pop
lods
es
mov
sbb
das
sub
ins
das
and
je
mov
cmp
ficomp
mov
iret
inc
mov
stos
imul
out
sub
push
lea
push
imul
mov
mov
push
int
xor
adc
stos
es
sbb
int3
mov
push
and
rcl
jl
sub
scas
arpl
jecxz
hlt
repnz
mov
lock
adc
and
call
fwait
(bad)
adc
rcl
shr
mov
mov
xchg
adc
xor
jno
icebp
adc
push
adc
call
lahf
(bad)
aas
jae
test
mov
push
pop
and
cmps
ret
icebp
dec
movs
aam
sub
jle
pop
retf
pushf
in
mov
daa
xor
ror
pop
and
mov
inc
dec
xchg
inc
push
retf
sbb
jmp
push
inc
jne
mov
cmc
or
mov
xchg
retf
out
dec
add
mov
jno
push
lahf
fimul
pop
mov
add
ins
imul
xlat
nop
pop
push
jmp
movs
mov
int
test
sub
pop
pop
mov
gs
dec
leave
inc
add
test
pusha
inc
xchg
dec
out
push
fs
mov
fsubr
pop
leave
test
sbb
add
and
loope
sbb
push
jecxz
(bad)
mov
retf
in
xchg
daa
inc
out
daa
(bad)
adc
add
sbb
sti
pop
je
(bad)
mov
scas
mov
stc
sbb
bound
mov
lods
ins
xlat
retf
mov
xchg
pop
sar
in
push
call
pushf
fdivr
jp
aam
pushf
mov
jns
jge
mov
ss
sbb
jae
jl
popf
jl
adc
sub
jmp
or
out
in
push
ror
cld
xchg
rol
out
sbb
xor
clc
mov
imul
ret
sbb
call
add
inc
ins
cmc
rcl
mov
pop
add
inc
dec
adc
loopne
pop
or
adc
or
retf
ror
sbb
lods
push
mov
in
cmc
clc
mov
in
and
fstp
in
outs
scas
xor
xchg
adc
xchg
add
imul
jno
dec
sti
mov
mov
out
xor
push
jns
mov
inc
mov
stos
int3
inc
jno
xor
cdq
out
xlat
and
inc
test
outs
push
mov
sti
out
in
xchg
cli
jae
cmps
bound
arpl
sbb
iret
outs
adc
cmc
icebp
mov
mov
ins
mov
lods
es
mov
adc
gs
shl
cmps
sbb
rcr
xchg
sub
xchg
int3
jle
out
sbb
adc
into
movs
sbb
ins
add
shr
dec
or
int
ins
xchg
mov
inc
jmp
(bad)
lds
pop
out
sub
mov
or
je
mov
loope
cwde
mov
outs
xchg
rol
shr
lods
fistp
cmp
pop
jns
xor
pop
sbb
scas
adc
adc
cmp
add
pop
push
pop
xor
jno
xchg
adc
inc
and
adc
sbb
sbb
mov
stos
cmp
xor
dec
or
push
cmp
pushf
test
jmp
mov
and
push
or
jecxz
jge
fsubr
jg
and
ja
addr16
add
stos
xchg
enter
sub
test
mov
add
add
xchg
push
add
dec
or
or
ror
outs
and
and
and
jmp
dec
inc
stos
sub
adc
addr16
or
add
adc
sub
pop
psubusb
out
dec
loopne
hlt
lods
fiadd
jg
aaa
call
xlat
retf
scas
pushf
popf
fistp
ins
nop
sub
mov
fwait
pop
sub
pop
test
or
aaa
mov
mov
les
sbb
push
or
popa
cmp
or
or
cbw
cmp
in
jb
out
int3
push
jge
test
jp
mov
call
rol
mov
add
fmul
mov
inc
stc
xchg
jg
adc
jge
in
cmp
pop
call
inc
xor
adc
inc
or
mov
and
xor
adc
mov
inc
or
cmp
xchg
cmps
pop
xor
push
push
not
mov
push
shl
dec
nop
cmp
xor
jmp
xchg
fild
bound
push
mov
movs
mov
movs
(bad)
push
popf
push
cli
daa
(bad)
xor
inc
inc
xchg
mov
dec
enter
push
mov
fistp
xlat
mov
lods
daa
jb
sbb
pusha
ficomp
and
retf
mov
mov
dec
mov
pop
out
shl
and
popa
mov
in
popf
sub
inc
stc
in
mov
adc
in
inc
pop
(bad)
ja
xor
cmp
bound
and
mov
mov
sbb
xlat
or
(bad)
xor
cmp
mov
cmp
and
jnp
xor
cli
mov
out
sahf
and
dec
test
into
test
shl
pop
aaa
dec
(bad)
lds
aad
sub
popa
pop
jae
inc
xchg
loop
adc
xor
adc
xchg
and
and
ss
jae
ins
xchg
sub
loope
pop
popw
or
and
div
mov
shr
scas
jmp
mov
jg
xchg
mov
ret
jmp
into
xchg
push
jo
out
inc
out
or
sbb
fst
pop
push
pop
jbe
jl
sub
bound
std
fsqrt
repz
add
cmp
int3
(bad)
inc
out
pop
in
fstp
pop
fimul
cmp
mov
loope
retf
lahf
movs
ds
cli
scas
hlt
push
iret
pop
fmulp
add
jae
iret
sub
outs
pusha
cmp
js
test
leave
mov
mov
lock
mov
xchg
sbb
add
cmp
cmp
xchg
loopne
lock
sub
bound
out
mov
dec
inc
das
add
sbb
lea
arpl
out
inc
lock
add
sbb
loopne
ins
in
les
fcom
rcl
add
adc
mov
xchg
dec
loopne
dec
add
outs
cs
pop
add
push
repnz
and
cli
sub
jmp
into
jno
fidivr
outs
xor
jae
sbb
pop
lods
inc
sbb
adc
push
stc
in
push
mov
call
jnp
icebp
lods
je
mov
les
xor
ds
push
test
push
adc
dec
mov
pop
test
sbb
and
add
sbb
xchg
mov
cmp
loope
sbb
push
push
jp
data16
and
jle
inc
fidivr
dec
call
es
sar
sub
clc
lods
clc
clc
fs
cmps
scas
popa
mov
repnz
stos
cmp
int
or
sub
aas
fldcw
xchg
stos
sbb
push
outs
inc
test
or
mov
aam
inc
mov
loop
mov
stos
pop
push
fisttp
jl
movs
stos
in
jmp
stos
ins
add
xchg
jns
mov
push
xchg
or
js
pop
fbld
in
pop
int3
add
xor
cwde
imul
jnp
jecxz
ja
aaa
mov
adc
cmp
jb
mov
mov
sub
sbb
xlat
or
adc
pop
mov
jge
jmp
aad
jmp
lods
mov
lods
mov
loop
push
ins
jp
test
sub
mov
lock
and
ja
lds
pop
mov
lods
add
sub
push
jg
in
lods
mov
pop
nop
enter
and
inc
mov
sahf
mov
out
into
je
pop
stc
xor
push
push
clc
jle
sbb
inc
not
jo
out
(bad)
je
cmp
xchg
xlat
jne
mov
outs
push
push
xchg
fdiv
push
test
fwait
jl
xchg
and
xor
loope
(bad)
xchg
loopne
hlt
push
cmp
jo
shl
cmc
fsub
push
les
xchg
int3
cmp
jns
adc
stos
imul
jl
in
mov
pop
jnp
pop
(bad)
lahf
add
mov
aaa
push
inc
sahf
dec
out
pop
sub
(bad)
into
pop
sbb
inc
ret
sbb
jge
clc
jae
arpl
pop
cmp
ds
rol
pop
add
jp
mov
mov
lahf
ror
cwde
mov
jns
push
in
ins
and
loopne
jo
stos
mov
mov
inc
ins
dec
stos
out
nop
movs
rcl
ret
mov
xor
loope
mov
and
push
sbb
mov
mov
cvtdq2ps
bound
xchg
xchg
mov
or
mov
push
mov
dec
ficom
jbe
adc
mov
lds
cmp
lea
inc
or
ror
retf
std
dec
ja
mov
ds
mov
push
iret
enter
xchg
mov
scas
pop
js
mov
adc
jo
in
hlt
clc
stos
cdq
call
or
cdq
jno
dec
out
and
scas
fs
shl
(bad)
sbb
sbb
dec
daa
cmp
jl
int3
pop
dec
and
jb
inc
jb
inc
xchg
fdiv
movs
repnz
jp
push
sbb
mov
inc
outs
dec
jne
(bad)
stc
hlt
inc
adc
call
add
leave
lahf
hlt
rol
jg
jmp
fsubr
mov
dec
push
or
in
xor
int3
and
mov
dec
cmp
les
(bad)
stc
cmps
push
mov
add
xchg
loope
and
mov
mov
into
ins
mov
scas
into
push
out
addr16
sbb
iret
mov
pop
cmps
stos
push
cmp
xchg
cmp
jb
dec
add
ret
push
repnz
sub
add
jg
bound
push
mov
xor
loopne
jle
sbb
mov
xchg
rcl
xchg
inc
mov
push
cmps
sub
ja
(bad)
ss
cmp
sahf
jbe
mov
adc
mov
jge
in
loop
aaa
mov
es
(bad)
fistp
(bad)
mov
xchg
jle
imul
jge
xchg
jl
stos
stos
jne
dec
cmp
xor
out
mov
sbb
stc
inc
jae
shl
mov
(bad)
jp
ds
inc
mov
and
js
lds
jmp
mov
mov
push
mov
fistp
push
jl
fisubr
data16
xor
add
mov
cmps
out
sub
daa
push
ins
loopne
arpl
inc
fnstcw
adc
inc
mov
mov
push
jl
cmc
jg
push
dec
mov
mov
and
jnp
push
push
jae
fnstsw
mov
adc
add
push
add
clc
mov
dec
out
test
lock
push
adc
mov
sti
(bad)
inc
and
leave
ja
in
sub
mov
jmp
adc
and
test
rcl
inc
sbb
loop
inc
pop
outs
and
add
sti
mov
outs
or
adc
test
mov
int3
sbb
adc
cld
or
sub
sub
loopne
dec
popf
daa
add
lahf
js
and
jge
mov
push
and
sbb
xor
sbb
pop
mov
es
xchg
mov
lock
movs
jecxz
ror
jno
ret
data16
and
pop
pop
sbb
xchg
sbb
xor
cmp
cmps
xor
(bad)
xchg
loopne
push
jns
cli
jg
sbb
pop
adc
jl
push
inc
pop
nop
retf
retf
mov
cmp
jo
out
arpl
sti
add
(bad)
pop
call
mov
add
ror
adc
repz
in
jmp
jno
add
inc
sbb
loopne
ins
ret
ror
dec
push
jo
ss
nop
push
mov
int
fsub
jmp
les
iret
inc
xchg
nop
(bad)
lea
inc
mov
cmp
(bad)
pop
leave
stc
mov
jns
mov
push
scas
adc
xor
leave
fwait
imul
pushf
int3
or
(bad)
xor
mov
daa
mov
call
arpl
shr
push
mov
jb
test
ja
cmp
jmp
(bad)
bound
mov
in
pop
shr
in
mov
jecxz
push
test
inc
dec
pusha
rcr
cld
pop
aaa
dec
icebp
scas
cmp
popa
mov
mov
in
jnp
pop
(bad)
retf
fwait
push
adc
jge
fcomp
mov
fwait
stc
mov
fimul
push
mov
lea
out
push
jmp
xlat
cmp
dec
jg
js
add
pop
pop
int
loopne
adc
stos
push
int
scas
cmp
mov
xor
iret
loopne
adc
imul
hlt
in
dec
inc
xchg
lock
sbb
inc
in
add
(bad)
mov
aam
push
and
test
movs
arpl
out
inc
lock
jb
adc
dec
lock
les
fiadd
cmp
enter
fadd
sub
xchg
in
pop
cmps
adc
mov
cli
fwait
ret
push
daa
mov
and
inc
and
hlt
push
mov
out
push
(bad)
fmul
pop
leave
test
lods
push
mov
or
hlt
inc
mov
inc
sbb
and
sub
aas
fimul
movs
add
inc
aad
and
or
xchg
mov
push
lock
sub
sub
sbb
sbb
dec
nop
pusha
push
scas
inc
ja
mov
fld
cmp
lahf
inc
adc
inc
xchg
xchg
ror
xor
in
push
push
dec
retf
jle
cld
icebp
int3
mov
ffree
gs
adc
mov
jmp
call
call
std
add
in
sti
jbe
scas
mul
add
xchg
loope
retf
add
add
sub
(bad)
rol
jg
dec
and
mov
mov
pop
push
aaa
xor
mov
or
mov
arpl
sub
ficom
inc
fisub
xor
mov
bnd
(bad)
mov
inc
bswap
lods
ss
ss
sbb
mov
lea
movs
fisub
xlat
ss
rol
int3
ds
mov
outs
addr16
jle
nop
in
pop
and
sub
pushf
ret
push
mov
pop
dec
push
jo
or
add
outs
or
mov
bnd
and
inc
out
jb
add
mov
jae
inc
cmp
cmp
fst
in
(bad)
jno
les
and
sbb
call
js
int
je
out
out
fxch
fwait
jge
shl
jmp
pop
stos
jnp
ins
mov
in
cld
mul
fwait
fs
mov
cmp
xchg
repz
arpl
std
jmp
icebp
iret
fs
push
jns
mov
loopne
jle
dec
jg
mov
enter
jecxz
and
cmp
inc
lahf
mov
in
std
aaa
inc
stc
mov
inc
ins
adc
xchg
dec
mov
js
pop
cmp
lahf
shl
cwde
mov
jns
xlat
in
sbb
add
pop
xlat
mov
mov
and
dec
jle
mov
(bad)
pop
ret
add
pop
push
les
clc
cmp
xlat
push
pop
retf
das
add
mov
mov
aam
and
adc
push
movs
pop
dec
mov
or
icebp
add
pop
lock
daa
fist
push
js
pop
add
out
outs
dec
inc
adc
js
lahf
inc
dec
das
fst
mov
(bad)
fs
repz
cmp
nop
and
cwde
and
xchg
push
add
jmp
push
cmp
xor
add
and
addr16
pop
nop
and
dec
inc
aad
cs
dec
nop
mov
pop
sbb
xchg
dec
add
enter
jle
movs
nop
xchg
lds
push
sahf
dec
scas
push
shl
jmp
sahf
sbb
sub
push
cwde
(bad)
adc
sbb
iret
mov
and
adc
xor
cmp
lahf
fidiv
sub
jp
mov
inc
popf
iret
or
pusha
xor
call
or
scas
xchg
inc
ja
push
fisttp
fcom
xchg
xchg
mov
push
loopne
stos
cli
ret
sti
xchg
push
sub
movs
xlat
lods
adc
jo
jbe
lea
pop
push
adc
xor
out
push
pop
cmp
mov
mov
aaa
js
test
jg
xor
cmp
and
adc
push
adc
sub
mov
mov
jmp
ret
ret
test
nop
popf
pop
mov
ins
call
fdivr
das
push
fld
test
(bad)
(bad)
into
sahf
jmp
int
pop
(bad)
fild
or
sbb
aaa
cmc
mov
test
pop
jge
xchg
mov
test
lahf
add
adc
nop
pop
fidivr
xchg
cs
inc
cmp
dec
ret
ficom
test
ja
cmp
push
retf
jmp
rol
das
xchg
jmp
lahf
test
push
xchg
ss
jmp
mov
into
pusha
rcr
lahf
inc
adc
ins
cmp
cmp
or
push
outs
sub
cli
scas
dec
ins
mov
jno
add
cs
fadd
stc
and
push
mov
fidivr
clc
ret
cli
mov
test
out
iret
ret
jg
jge
stos
ss
add
dec
icebp
subps
adc
jmp
ret
inc
and
lahf
push
cmps
cli
fcomi
xchg
shl
xchg
daa
mov
mov
xor
cmp
js
sub
sub
ret
stc
mov
add
xor
or
(bad)
push
mov
adc
retf
xchg
out
jp
adc
scas
add
dec
test
jb
loope
daa
hlt
stos
sub
inc
dec
je
(bad)
leave
int3
adc
lock
js
xchg
cmp
cs
xchg
xor
pop
fimul
mov
and
jg
mov
push
pop
and
mov
push
icebp
push
push
mov
or
jmp
push
cmp
push
add
dec
or
dec
out
and
jnp
push
jmp
push
mov
or
push
in
or
nop
push
icebp
fdiv
(bad)
and
das
js
daa
enter
mov
jb
call
inc
shl
jmp
cmp
(bad)
(bad)
mov
xchg
cs
xchg
out
add
pop
rol
jmp
push
arpl
shl
dec
xchg
les
jge
pop
ins
ins
sub
sbb
jns
add
and
imul
pop
(bad)
lock
mov
jbe
sbb
pop
bound
dec
or
or
gs
cli
jns
and
call
mov
ins
push
(bad)
retf
loop
inc
cmc
cmps
cmp
ror
(bad)
call
cmc
in
in
mov
aas
mov
ret
sbb
sub
inc
mov
and
stos
ins
inc
mov
mov
push
inc
xor
or
(bad)
dec
mov
nop
fcmove
inc
mov
mov
pop
(bad)
jle
xlat
jno
adc
sbb
repnz
inc
leave
inc
iret
pop
shr
jbe
arpl
mov
mov
adc
cmp
pop
loopne
dec
adc
loop
int
(bad)
call
imul
loop
mov
add
sub
mov
jmp
call
fwait
sub
xor
dec
inc
bound
sbb
sbb
out
lods
xlat
cs
int3
adc
jmp
ja
jae
jns
movs
cmp
inc
sbb
xlat
xor
jp
jnp
lods
push
loopne
ins
cmp
pushf
mov
popf
jmp
sbb
jle
std
adc
dec
xchg
repz
in
(bad)
cld
inc
outs
(bad)
mul
out
xchg
ds
fdivr
repnz
pop
std
sub
pop
in
mov
mov
ja
fld
mov
repz
inc
jo
sub
xor
jg
and
arpl
mov
repz
scas
and
outs
inc
dec
rcr
jb
xchg
cmp
jbe
inc
cmps
shl
imul
mov
mov
and
rcr
mov
xor
and
sub
xchg
jns
xchg
cmp
pop
dec
loop
add
sbb
add
ss
je
je
ret
ret
fiadd
call
daa
mov
or
fnstcw
lods
pop
popf
stos
jae
or
ror
sub
mov
mov
and
adc
jp
inc
jnp
and
mov
and
int3
lods
(bad)
add
ins
inc
jno
dec
out
and
loop
push
lods
shl
js
out
jl
sbb
sbb
leave
daa
or
adc
rcr
mov
and
and
push
shl
jmp
sahf
sub
push
jg
xor
and
loopne
or
int
inc
add
xor
neg
and
mov
push
ret
jbe
pop
outs
jb
jmp
fild
and
jge
imul
lods
xor
inc
cdq
into
xor
lods
push
mov
sbb
sub
test
arpl
mov
addr16
shr
fld
pop
imul
or
push
cmp
cmp
sub
inc
xor
mov
or
jl
adc
sub
shr
push
retf
push
push
(bad)
jb
cmp
xor
or
test
push
mov
adc
jo
bound
pop
cdq
mov
jae
or
mov
mov
adc
dec
cmp
iret
imul
inc
fiadd
push
mov
pop
arpl
das
js
test
bnd
in
push
loop
cmp
dec
mov
dec
mov
xchg
jmp
rcl
ror
add
js
leave
mov
push
jge
mov
mov
sbb
(bad)
ss
xor
lahf
clc
out
dec
(bad)
pop
loopne
scas
icebp
setne
aas
push
or
pop
jmp
js
int3
cld
jns
adc
out
repz
fimul
lahf
movs
cmp
in
cmps
loope
sar
nop
repz
data16
movs
loope
ret
or
cmc
cmp
sbb
sub
pop
sbb
mov
sbb
dec
scas
push
pop
in
mov
test
dec
push
push
inc
adc
arpl
add
pop
or
(bad)
or
mov
pop
push
cmp
hlt
aas
pop
and
sub
push
ret
sub
xchg
lea
dec
sub
out
cmps
mov
xor
call
inc
xchg
dec
fiadd
rcr
mov
fcomp
adc
and
cmp
jo
in
add
xor
sub
pop
inc
add
push
mov
inc
(bad)
out
push
icebp
push
call
ss
mov
mov
sbb
push
cmc
add
and
cmp
jmp
mov
std
dec
das
rol
adc
sub
nop
adc
jp
xchg
cmp
push
cmp
movs
lods
hlt
sahf
sub
nop
arpl
pop
xchg
push
stc
popf
shl
jmp
cli
and
xor
or
stos
sub
test
xchg
aam
daa
jb
xlat
gs
pop
mov
cmp
loopne
jb
es
inc
sbb
dec
cmp
mov
adc
fadd
int3
xchg
outs
(bad)
aad
test
out
mov
push
inc
popf
push
cmps
mov
movs
push
pop
ret
pop
mov
jp
jecxz
sub
and
loop
mov
(bad)
adc
xchg
mov
jbe
sub
xor
mov
cmps
xchg
lods
aad
fs
jmp
dec
out
push
jmp
rcl
fst
leave
jbe
inc
(bad)
sub
jp
ja
inc
or
fimul
outs
jo
in
(bad)
add
sbb
aam
and
fistp
(bad)
aad
xchg
push
pusha
fwait
push
lea
ins
push
retf
das
xor
pop
xor
loopne
push
xor
loope
push
mov
icebp
cdq
fbld
dec
(bad)
jmp
ss
scas
lock
push
movs
jle
out
popf
pop
dec
add
push
cmps
push
dec
jnp
mov
test
sub
mov
stos
scas
xor
fcmovnbe
mov
sbb
pop
(bad)
fs
cmps
push
mov
imul
xchg
pop
mov
outs
es
aaa
mov
cdq
and
popf
dec
scas
adc
push
mov
sub
test
and
stos
pop
xchg
cmp
jo
dec
pop
push
cmp
idiv
dec
ins
push
jmp
out
in
leave
mov
or
mul
hlt
mov
icebp
call
movs
jecxz
outs
cmp
sti
inc
shl
rcl
adc
js
cs
fisttp
lea
xchg
mov
mov
mov
mov
mov
xchg
loopne
dec
mov
cdq
js
(bad)
ins
lods
(bad)
lea
cmp
pushf
lods
(bad)
pop
retf
dec
jg
sub
aad
or
(bad)
push
add
cmp
xchg
lods
and
pop
jl
(bad)
int
xlat
ins
jae
repnz
mov
sbb
cmp
mov
cwde
icebp
cmp
fild
(bad)
fidivr
pop
sbb
mov
jbe
dec
imul
es
js
in
test
sbb
ror
add
jl
es
cmp
push
inc
icebp
aad
out
mov
scas
mov
inc
pop
ins
mov
jnp
sbb
xor
push
int
fwait
jb
mov
xchg
mov
aas
call
sub
out
fidivr
xchg
jno
lock
out
mov
jne
sub
mov
dec
mov
jle
movs
lods
xchg
fld
xchg
dec
fwait
stos
sbb
frstor
push
xor
lods
sbb
mov
stos
(bad)
outs
mov
arpl
push
and
mov
cmp
ins
repz
les
cmp
pop
retf
jl
jbe
jns
(bad)
lods
push
add
mov
jbe
sbb
push
cld
iret
test
cwde
push
int
xor
cmp
mov
dec
jp
sbb
pusha
daa
mov
sub
sahf
and
mov
jne
outs
push
xchg
fdiv
es
fcom
sub
pop
jns
loope
adc
cmps
pop
stos
xor
inc
std
push
leave
jge
sub
loope
pop
into
fidivr
mov
push
mov
cli
pop
das
xchg
jae
sub
inc
push
pop
outs
fidivr
inc
cmp
pusha
(bad)
(bad)
sub
jmp
sbb
and
fsub
push
aaa
(bad)
loope
xor
sub
ja
addr16
lods
cmp
pusha
cli
in
inc
pop
jl
cmp
add
stos
out
popf
push
push
mov
xchg
push
retf
out
leave
xor
out
int3
sahf
xchg
or
pop
or
ja
add
jmp
and
sub
sub
test
in
int3
add
dec
lods
sti
cmp
xor
push
mov
clc
dec
rcl
jge
add
push
push
fld
and
test
dec
dec
leave
mov
push
hlt
dec
push
jmp
pop
inc
mov
aam
in
ret
stc
inc
dec
out
int
jmp
pop
test
fst
(bad)
icebp
call
fisttp
mov
mov
dec
xor
pusha
push
pop
mov
adc
hlt
sub
cmp
or
lods
adc
mov
retf
ficomp
nop
test
adc
nop
fabs
fwait
xor
dec
imul
xchg
mov
jp
xor
pshufw
pop
out
mov
and
repnz
fisub
std
jne
sti
xchg
mov
mov
adc
or
inc
(bad)
jecxz
push
xor
push
stos
test
fwait
cld
mov
mov
jns
inc
and
xor
je
mov
pop
jg
js
mov
push
cmp
mov
mov
imul
xlat
mov
nop
pop
adc
sub
inc
jae
dec
dec
jnp
aas
mov
cmp
or
(bad)
mov
shl
jb
sbb
pusha
shl
ror
out
ds
psubq
loop
push
out
test
stos
push
idiv
out
lods
pop
nop
xor
inc
mov
fcom
outs
enter
jbe
or
test
pop
push
xchg
push
je
sub
add
test
xor
js
(bad)
push
mov
jmp
push
sub
(bad)
push
cld
add
ret
jmp
jl
je
pop
scas
scas
add
mov
pop
mov
mov
or
rcr
sti
scas
cmp
add
fnstcw
dec
popf
push
in
gs
pop
cwde
cmc
lods
xchg
les
and
xchg
inc
and
sar
mov
or
dec
fcmove
dec
pop
das
jmp
mov
and
xor
fwait
mov
lea
cmp
and
push
and
(bad)
pushf
push
test
jge
(bad)
dec
push
sbb
or
je
(bad)
retf
mov
sbb
cmc
pop
psubw
mov
push
cli
mov
inc
push
push
adc
loop
push
aam
int
or
xchg
mov
les
sbb
sub
inc
mov
xor
push
inc
in
sub
rcl
cmp
fisub
neg
pop
aas
xchg
fwait
push
ins
xchg
popf
sbb
cld
or
or
and
test
fild
scas
xor
mov
(bad)
stos
je
add
sub
adc
push
ret
jne
fbstp
mov
cs
movs
dec
daa
lea
push
mov
enter
jge
popa
pop
iret
mov
(bad)
retf
test
push
fs
sbb
aaa
ins
addr16
pop
inc
mov
pusha
dec
mov
push
icebp
or
adc
mov
outs
(bad)
push
ins
out
sbb
xor
dec
dec
or
mov
push
jmp
or
pushf
fs
in
dec
mov
ret
retf
xor
(bad)
cli
mov
ret
dec
adc
hlt
inc
sti
push
mov
cmp
mov
xlat
push
(bad)
mov
sub
sahf
and
pop
pop
push
dec
icebp
cmp
inc
xchg
data16
push
jae
sbb
mov
loope
sbb
xchg
push
inc
dec
pushf
dec
enter
sub
dec
xchg
dec
jecxz
dec
int3
cdq
mov
imul
addr16
fistp
mov
push
mov
cli
mov
pop
push
test
inc
ret
das
mov
cdq
fwait
sub
adc
dec
push
(bad)
xchg
(bad)
ret
xor
add
gs
nop
jbe
sbb
sub
ins
test
xor
loope
mul
xchg
cmp
int3
std
pusha
mov
aad
mov
out
mov
add
stc
imul
ss
pop
jmp
js
push
ja
jecxz
fist
dec
fbld
ds
js
sbb
mov
cmps
(bad)
sbb
into
ins
scas
into
pop
mov
xor
xor
cmp
loope
lea
mov
aaa
stos
xor
and
jmp
ror
nop
mov
pop
cs
dec
push
or
rcr
push
leave
xchg
push
inc
pop
and
push
cmc
cmps
scas
jp
inc
out
and
xchg
mov
adc
not
stc
stc
repnz
push
enter
mov
cmp
shl
mov
pop
or
into
jb
rcl
arpl
pop
jne
dec
xor
and
lods
scas
(bad)
adc
scas
iret
xor
fnstcw
adc
sub
jbe
sbb
aaa
sub
mov
pop
push
test
rcl
xor
inc
jne
jns
mov
push
adc
mov
and
cli
pushf
add
stos
es
pushf
sbb
pop
out
xor
or
jae
mov
ret
dec
inc
inc
pop
xlat
dec
inc
pop
mov
into
(bad)
hlt
add
es
aam
(bad)
fcom
adc
jmp
aam
xor
jg
cmc
mov
repnz
cmp
adc
daa
scas
sahf
clc
mov
sahf
rcr
jne
mov
mov
or
lahf
scas
xor
into
popa
ins
and
sub
add
mov
cs
push
inc
xchg
lods
xor
retf
lahf
iret
inc
pop
adc
dec
(bad)
fisubr
stc
cmp
ret
push
jmp
jp
mov
aad
pop
rcl
adc
xlat
cmp
mov
and
fld
rcr
jmp
add
and
addr16
and
lock
sbb
cmc
sub
xor
popa
adc
cs
or
aas
sti
mov
enter
in
inc
jge
ss
or
jl
scas
stc
fwait
stos
test
retf
mov
pop
fst
jns
add
retf
push
add
inc
inc
add
sub
and
jns
sub
dec
sbb
mov
or
sbb
imul
push
test
test
adc
push
dec
fidiv
push
retf
inc
addr16
test
(bad)
sub
xchg
jg
retf
stos
cwde
int
out
dec
adc
dec
xchg
push
dec
sbb
outs
xchg
and
jno
mov
and
xor
fcmove
inc
mov
add
mov
xor
jnp
push
xlat
dec
mov
outs
mov
sbb
mov
jae
retf
mov
mov
xchg
inc
cmps
bound
pop
and
pop
pop
xor
jae
push
fcmove
shl
fsubp
int
mov
out
cld
out
mov
out
cmp
out
sahf
cld
repz
repz
jns
sti
iret
lahf
cmp
add
shl
mov
or
dec
sar
jns
inc
jge
pop
fisubr
das
(bad)
push
adc
mul
jmp
add
rol
int
jmp
stc
sub
sbb
sub
in
ror
icebp
(bad)
data16
jmp
fld
(bad)
mov
mov
jno
inc
mov
(bad)
nop
icebp
inc
pop
dec
call
cmp
(bad)
or
cld
aam
lea
pop
sub
scas
push
inc
cmc
and
aam
jecxz
sti
bnd
shl
outs
lock
ins
aaa
lods
int
pop
mov
pop
enter
inc
xchg
or
jmp
sbb
inc
idiv
aam
nop
in
jns
xchg
or
cs
int3
xor
push
mov
ins
(bad)
jmp
daa
aaa
js
push
(bad)
mov
xchg
test
jge
xchg
xchg
lds
loopne
cdq
add
sub
lds
push
rcl
pop
int3
add
sub
mov
stos
xchg
push
mov
aam
mov
arpl
daa
mov
pop
mov
imul
lds
call
test
xor
jmp
mov
fcom
xor
jbe
popf
sbb
out
fadd
or
iret
adc
retf
jnp
ret
mov
xor
or
cdq
pop
xchg
cmp
push
xchg
add
inc
lock
cmc
push
(bad)
sbb
outs
pop
jp
and
dec
fsubr
(bad)
imul
test
ss
in
inc
mov
rcl
test
rcr
inc
scas
mov
and
mov
ds
push
mov
mov
or
ja
cli
test
outs
xchg
sub
cmps
cmp
add
(bad)
daa
ins
aad
loopne
(bad)
popf
or
dec
push
mov
ins
push
mov
cmp
fadd
pop
push
shl
sti
mov
xchg
pusha
add
rcl
mov
test
sub
dec
and
lods
adc
(bad)
retf
xchg
sub
jo
mov
test
imul
fdivr
xchg
(bad)
repnz
(bad)
sti
dec
les
cmp
aas
jae
mov
sbb
clc
rol
sbb
inc
pop
push
pop
adc
cmps
and
lods
rol
add
lea
xor
out
outs
mov
or
cmp
mov
push
jns
dec
xor
cmp
lds
and
scas
jmp
jae
jns
fnstcw
inc
test
mov
mov
adc
adc
xchg
sub
and
adc
inc
addr16
ja
ins
add
call
xchg
rcr
bound
in
xlat
daa
inc
jp
inc
jge
push
out
add
push
adc
xlat
mov
jp
fwait
hlt
sub
daa
arpl
dec
iret
int
xchg
or
rcl
pop
adc
mov
leave
xchg
inc
push
push
pusha
enter
icebp
retf
ja
nop
int3
jbe
sbb
popa
dec
jmp
mov
call
jnp
mov
xchg
cs
das
xchg
jo
mov
inc
in
jo
fbstp
mov
sahf
fimul
push
dec
cmp
ins
popf
fdivr
movs
movs
xchg
and
(bad)
loope
movs
mov
or
in
aaa
jo
cwde
or
(bad)
loope
or
pop
sub
repz
push
mov
mov
iret
mov
icebp
pop
or
pop
mov
daa
rcl
ds
sub
xor
movs
sub
jle
xchg
pop
mov
cmp
lds
in
cmp
xchg
cmp
cmp
xor
push
add
je
mov
pop
mov
mov
dec
in
call
push
add
add
out
lahf
mov
fimul
es
cmps
xor
dec
adc
and
push
les
lea
rcl
ds
dec
mov
mov
ds
stos
ret
pop
imul
fdivr
int
frstor
lods
xchg
push
pop
les
or
scas
js
out
iret
push
sbb
lds
lea
mov
shl
push
loop
loopne
int3
inc
xchg
iret
jg
in
nop
jnp
lods
mov
push
jmp
mov
dec
sub
push
jne
outs
jle
and
xor
nop
stos
mov
fs
lds
pusha
stc
cmp
cdq
sbb
out
jns
ror
inc
fldcw
js
jbe
imul
jp
leave
(bad)
loopne
pop
fisubr
mov
add
sub
mul
sub
lods
out
jp
jns
stos
data16
pop
retf
add
js
int
cmp
cmp
or
shr
or
jno
pop
in
dec
and
mov
call
lea
retf
push
or
jge
sub
add
out
sti
mov
mov
aad
lock
test
add
xchg
addr16
sbb
or
dec
xor
pop
mov
enter
test
adc
inc
test
in
pop
mov
jge
jns
test
push
pop
dec
lahf
lea
xchg
mov
stc
add
mov
pop
pop
arpl
ins
loope
mov
jle
adc
ds
test
and
inc
sbb
rcl
inc
jmp
and
add
cwde
or
rol
(bad)
stc
rcl
mov
retf
aas
nop
into
mov
jae
sub
push
jle
sub
push
cmp
fimul
dec
or
jecxz
add
cs
add
sbb
sub
icebp
sbb
mov
repz
ja
test
(bad)
pop
je
test
aad
test
mov
mov
xchg
adc
push
pop
cmp
lods
mov
or
or
push
inc
xchg
jae
ss
xor
rcr
je
push
dec
in
repz
pop
into
and
mov
clc
or
add
test
movs
test
inc
adc
lods
bound
pop
and
add
hlt
push
or
sbb
mul
popf
pop
inc
sbb
arpl
add
mov
mov
mov
je
test
pop
data16
mov
xor
retf
xor
push
nop
pop
add
mov
rcr
xor
mov
stos
pop
scas
lods
test
add
(bad)
mov
cmc
in
in
add
aas
out
mov
push
cmp
mov
test
xor
dec
fiadd
dec
dec
sub
xchg
sub
add
add
jns
icebp
mov
xchg
xchg
ror
sbb
or
xor
cmp
shl
mov
imul
sub
add
popa
fisttp
rcl
imul
adc
inc
or
dec
adc
popf
call
adc
add
and
add
sub
xor
fnstsw
or
test
and
pop
in
pop
dec
jmp
test
sbb
add
xchg
add
cmp
retf
add
cdq
xor
mov
les
and
mov
add
push
jecxz
lods
jmp
jne
aam
push
push
(bad)
xchg
int
inc
mov
stos
and
adc
jecxz
add
les
or
lock
add
sbb
sub
xor
int3
cmp
add
aas
dec
into
adc
sbb
adc
test
sub
xchg
dec
sub
in
stos
xchg
adc
mov
outs
inc
sbb
pusha
retf
inc
xlat
std
in
dec
inc
sbb
adc
pusha
adc
push
inc
xchg
or
int3
add
push
jecxz
sub
and
fnstenv
rcr
pop
movs
jg
ret
cmp
push
das
loope
lods
jne
(bad)
xchg
inc
mov
adc
outs
dec
mov
add
rcr
loopne
jl
rcl
inc
mov
movs
(bad)
cs
jns
mov
adc
mov
and
fcom
cmp
cmps
dec
inc
add
mov
retf
inc
jp
aas
bound
rol
pop
jg
sbb
sub
das
hlt
and
mov
mov
addr16
test
push
cmps
push
fcomp
mov
or
or
movs
data16
add
loope
push
in
mov
pop
push
rol
dec
dec
sbb
jo
pop
das
hlt
dec
sbb
xchg
jnp
pushf
jecxz
adc
or
dec
xor
sub
scas
xor
inc
dec
or
or
adc
pop
mov
push
cmps
and
iret
and
retf
adc
mov
lock
outs
or
into
jp
outs
aaa
sub
cdq
cli
ss
push
popf
pop
jne
dec
movs
add
push
push
lahf
mov
jb
adc
and
mov
nop
jmp
out
jmp
das
int3
cmp
cli
out
sti
dec
add
pop
imul
out
mov
jnp
mov
jmp
xor
push
or
lods
mov
sbb
test
leave
mov
or
push
xchg
ror
jecxz
lods
xchg
das
dec
add
pop
fs
pop
mov
jns
dec
cmp
(bad)
into
xchg
mov
mov
or
push
cmp
fcomp
dec
cmp
fistp
mov
rol
mov
pop
sub
cmp
jmp
dec
add
dec
fwait
shr
jae
xchg
aam
cmp
xor
mov
sub
lahf
in
(bad)
ja
popf
clc
jae
(bad)
cmp
femms
dec
cdq
fsubrp
gs
nop
xor
ins
sbb
push
jb
mov
mov
pop
or
retf
repnz
jge
xchg
(bad)
jp
adc
cmc
dec
popf
icebp
and
sahf
adc
jns
push
fcmove
cmp
sub
in
ss
sub
cmc
pop
or
std
in
retf
dec
js
inc
pop
pop
pop
icebp
mov
stos
xchg
adc
fwait
pop
jns
mov
cmps
mov
and
iret
inc
lds
adc
(bad)
scas
lds
aad
movs
push
sub
stos
jp
cmp
and
push
mov
scas
dec
sbb
mov
sub
xor
push
jo
push
push
push
push
pop
clc
out
ret
ret
inc
and
(bad)
sub
gs
cmp
fst
push
jno
push
inc
adc
cdq
or
jnp
repnz
movs
adc
stc
push
xchg
stc
ret
push
in
push
retf
pop
pop
dec
arpl
pusha
fwait
push
push
out
out
movs
mov
xor
fcmovnbe
cmp
xchg
dec
inc
cmp
nop
mov
pop
push
or
mov
add
push
dec
pop
ins
xchg
repnz
push
inc
cs
rol
adc
movs
scas
inc
(bad)
adc
iret
dec
repz
rcr
sub
pop
xor
ss
add
int3
retf
test
and
lock
fnstcw
jecxz
sbb
sbb
fsub
pusha
sub
xor
cmp
mov
int3
je
jmp
push
xchg
outs
in
jb
int3
hlt
lods
pop
mov
sahf
mov
ret
stc
jmp
xchg
cmp
les
ror
aas
cmp
sub
daa
pop
daa
xor
(bad)
icebp
add
mov
mov
and
scas
cmp
fcmove
out
mov
cli
and
iret
mov
xchg
mov
mov
cli
inc
movs
not
ds
mov
in
push
daa
das
aam
ror
cmp
into
nop
cli
icebp
adc
or
iret
push
das
in
sub
sub
inc
inc
mov
vunpcklps
aas
sbb
out
or
and
sub
and
and
xchg
lock
rcr
jno
inc
lahf
popf
(bad)
cld
dec
mov
(bad)
pop
mov
pop
mov
(bad)
fdivr
xor
jnp
call
ficomp
inc
sbb
fisubr
gs
xlat
mov
jae
lahf
into
lds
add
int
pushf
inc
imul
cwde
std
cmp
cli
shl
pop
pop
inc
pop
je
inc
jecxz
sbb
mov
(bad)
cmp
scas
inc
pop
out
loope
loop
jg
stc
mov
add
aas
into
add
xchg
prefetcht1
sub
out
loopne
and
jmp
arpl
mov
push
aam
add
addr16
pusha
mov
icebp
sbb
loope
mov
hlt
das
push
sbb
push
sub
push
test
and
sahf
jmp
loope
xchg
leave
cs
jbe
jg
mov
cmps
dec
pop
sbb
cmp
arpl
jns
pop
mov
jge
inc
ret
sbb
outs
arpl
push
fistp
mov
mov
(bad)
mov
or
pop
(bad)
or
lock
out
js
dec
je
loope
and
add
cmp
inc
jmp
jne
inc
aaa
inc
popf
sti
pop
pop
stos
addr16
adc
mov
jmp
mov
(bad)
mov
ja
popa
(bad)
mov
sti
pop
mov
dec
mov
sub
js
mov
test
push
sub
sbb
or
mov
fmul
ds
fistp
xchg
retf
mov
xchg
out
scas
nop
popa
jge
jp
push
sti
into
xchg
xchg
push
jle
cmp
rcl
cmp
mov
outs
pop
rdpmc
test
sbb
test
leave
(bad)
div
jp
sub
mov
jbe
inc
xor
jle
dec
xchg
lock
icebp
sti
icebp
xchg
mov
cmp
out
jecxz
rol
enter
icebp
popf
pop
fucomip
movs
or
(bad)
or
and
arpl
inc
and
call
fnsave
aam
and
sub
aad
cs
ins
mov
sub
lods
imul
retf
jbe
push
(bad)
cmp
mov
mov
xchg
mov
mov
add
jnp
inc
ins
ret
inc
cmc
and
ficom
fidiv
clc
retf
arpl
xor
jmp
add
test
stos
out
call
pop
xchg
mov
(bad)
in
mov
xchg
pop
frstor
ins
pop
push
(bad)
out
icebp
(bad)
pusha
cmp
arpl
arpl
or
int3
inc
sbb
repz
or
stos
sub
mov
(bad)
pop
adc
inc
push
cmp
inc
jb
push
fld
jno
clc
repz
xor
pop
push
clc
test
movs
inc
and
cdq
add
pop
dec
jecxz
sub
fstp
mov
outs
(bad)
ins
inc
movs
cmp
iret
mov
(bad)
jge
cmp
xchg
mov
add
out
sti
jge
fld
xchg
push
cmp
shr
xor
call
jno
gs
sbb
ror
aas
xor
mov
mov
and
test
int3
or
jecxz
inc
mov
ins
add
sti
sub
scas
sub
cmp
push
in
xchg
(bad)
jg
lods
xor
mov
add
mov
ror
fmul
cmps
movs
fsubr
mov
out
test
jmp
push
dec
adc
jmp
ret
push
loop
fcmovnu
or
inc
push
into
(bad)
lds
js
out
call
adc
fsub
iret
dec
(bad)
inc
jmp
adc
scas
ret
dec
loopne
lea
popa
inc
std
mov
pop
pop
add
loope
mov
cmc
repz
inc
aas
fidiv
lock
xchg
push
xchg
fcmove
(bad)
imul
cmps
outs
out
pop
sbb
pop
add
dec
ret
call
call
push
aas
cs
sub
(bad)
call
sbb
dec
mov
and
ret
xchg
fld
test
imul
pop
test
loop
movs
sbb
pop
out
cmp
shl
ins
mov
xchg
sbb
and
leavew
dec
test
mov
lods
xor
repz
dec
mov
or
push
je
js
jmp
pop
xchg
leave
pop
mov
rcr
(bad)
in
into
xchg
jnp
out
ins
xor
mov
popa
jmp
jmp
cdq
add
les
jnp
js
jle
cdq
dec
adc
adc
shl
push
dec
mov
movs
data16
add
call
das
push
pop
jae
bound
lds
cmps
fisttp
ja
cli
mov
add
mov
cld
daa
mov
out
and
sbb
aas
cli
dec
cs
sub
mov
movs
cmp
mov
clc
iret
pusha
mov
fist
sbb
jge
jp
sbb
outs
lahf
xchg
or
mov
mov
rcl
ffree
lods
pop
sub
bound
lods
cs
es
sbb
fwait
and
leave
jmp
sub
in
shl
xor
pop
pop
jbe
jecxz
cmp
pop
xor
movs
std
(bad)
hlt
pop
les
rcl
push
pushf
call
(bad)
mov
shl
outs
(bad)
jp
out
shl
lods
inc
aaa
scas
das
sbb
movs
idiv
fs
pop
in
scas
and
aas
pop
int3
daa
(bad)
cmps
cmp
add
xor
dec
stos
adc
cmp
call
(bad)
adc
sbb
inc
dec
mov
push
mov
inc
lods
xor
stc
adc
sbb
mov
inc
jns
and
ss
test
ror
popf
sbb
rcr
bnd
jmp
loopne
dec
sar
mov
sahf
xchg
jge
cmp
cli
test
mov
ret
add
lds
mov
mov
sbb
int
ret
loopne
jb
xor
mov
scas
push
or
pop
push
call
fcmovne
xor
out
rol
adc
dec
jg
dec
sub
push
rcr
shl
mov
add
mov
push
push
mov
dec
sub
jmp
pop
fnstenv
pop
sar
lahf
aaa
mov
sbb
loop
jge
push
inc
out
cld
(bad)
arpl
sahf
sub
rol
sub
shr
sub
mov
mov
int
cmc
rcl
jne
cmp
xchg
leave
push
cwde
pop
addr16
jl
add
sub
push
jmp
sbb
xchg
jl
cmp
mov
in
cmp
out
inc
fucomip
add
fwait
push
jne
mov
pop
ss
cmp
shl
jns
fnstcw
and
sti
jnp
in
xor
popa
add
(bad)
sti
enter
adc
mov
and
fdivr
not
fisub
je
inc
std
(bad)
or
push
or
xor
test
dec
inc
cs
dec
add
sbb
ret
jg
mov
or
mov
sub
arpl
dec
loop
xlat
cli
sar
xor
ret
or
shl
adc
cdq
xchg
jmp
xlat
adc
int3
sahf
gs
mov
popa
pop
cdq
or
inc
mov
push
cmc
lock
jnp
xchg
adc
inc
push
inc
lock
lods
scas
xor
aad
push
jecxz
in
gs
rcr
mov
out
adc
test
jb
icebp
push
jmp
leave
call
cmp
repnz
sar
int
cmp
aaa
pop
out
xchg
not
test
pop
js
not
hlt
xor
sub
cmp
imul
add
dec
inc
(bad)
out
xor
out
jle
mov
sub
call
mov
clc
dec
aam
cdq
das
aad
or
push
push
clc
cmp
outs
and
lahf
(bad)
mov
out
mov
adc
test
sbb
adc
mov
fs
cmp
or
out
dec
jne
sbb
push
sahf
loope
js
pop
mov
push
test
gs
out
sti
mov
mov
imul
mov
imul
ror
fild
pop
retf
inc
push
lock
(bad)
mov
fs
adc
sbb
loopne
enter
inc
fisttp
call
std
mov
push
mov
mov
or
or
sti
scas
cmc
loope
mov
sub
rcl
mov
ss
mov
mov
mov
aas
push
push
pop
pop
jecxz
jp
jo
xchg
cmp
jp
jns
or
dec
mov
cli
dec
popf
lods
shr
sub
xor
sub
and
das
mov
inc
(bad)
hlt
mov
cdq
hlt
into
or
dec
adc
pop
loopne
fwait
push
fdivr
test
ss
push
or
cwde
push
pop
dec
in
mov
ror
xchg
and
mov
pop
push
and
cli
hlt
mov
jp
or
test
aam
ins
add
scas
mov
or
dec
xchg
cli
outs
mov
pop
lahf
in
mov
jo
sbb
dec
dec
js
rcr
mov
ret
dec
leave
mov
lds
sub
mov
adc
mov
data16
clc
cmp
add
push
ins
out
or
pop
aad
jp
retf
pusha
sub
and
dec
push
imul
retf
jb
cmps
(bad)
push
daa
cmp
retf
xchg
cmp
mov
loope
aad
inc
pop
pop
mov
sub
lock
cmps
test
pusha
add
jo
imul
movs
cmp
dec
inc
ds
push
xor
outs
test
es
and
sub
or
daa
mov
mov
imul
aaa
sub
loop
into
shr
mov
and
shl
mov
sub
stos
cs
xor
mov
xchg
cld
cmp
sbb
or
mov
xor
jne
mov
js
mov
dec
and
popf
(bad)
mov
pop
int
adc
lahf
mov
xrelease
mov
test
mov
cmovge
in
in
push
cmp
retf
mov
mov
mov
fld
iret
xchg
stc
mov
ins
jge
dec
inc
ja
jle
fs
or
xchg
sysexit
gs
scas
xchg
or
xchg
or
scas
cmp
mov
inc
lahf
mov
inc
fld
jae
xchg
fdiv
in
ja
mov
jo
cmp
movs
inc
int3
mov
mov
lods
lods
imul
je
inc
mov
cdq
add
push
nop
and
push
push
add
lahf
inc
sahf
mov
push
ins
push
cmp
aad
sub
ret
mov
ins
pop
fist
jle
xchg
imul
stos
mov
sub
adc
cmp
std
jl
inc
cmp
fs
jno
rcr
sub
movs
fwait
sbb
and
sbb
stos
outs
or
int3
stos
inc
xor
cmp
ins
(bad)
movs
or
lahf
or
out
mov
ins
fsubrp
pop
mov
movs
ret
popf
ret
adc
lahf
cs
mov
xor
or
imul
pop
adc
lds
pop
into
cmp
mov
cld
adc
xchg
mov
adc
cld
test
clc
call
mov
jns
push
test
lock
hlt
imul
loope
mov
or
(bad)
lahf
pop
scas
push
gs
mov
push
shl
sub
or
push
lock
retf
jae
lock
and
cli
(bad)
add
adc
inc
lds
(bad)
xlat
lahf
xchg
aaa
xor
mov
jecxz
inc
adc
sub
pop
mov
sbb
jl
add
push
dec
push
push
xchg
(bad)
daa
or
xchg
(bad)
sti
jl
ja
adc
jp
xlat
adc
xor
cmp
pop
ins
inc
outs
loop
int
mov
mov
(bad)
idiv
sbb
shl
imul
adc
in
fmul
fs
movs
pusha
mov
(bad)
cmc
sbb
or
repz
stos
xchg
in
cmp
jg
ins
jne
or
dec
lods
movhps
mov
add
call
add
mov
inc
and
test
pusha
(bad)
leave
and
fdivr
daa
shr
xor
call
jg
and
or
mov
xor
sub
adc
cmps
ja
or
pushf
test
dec
or
mov
into
xchg
push
pop
mov
xchg
inc
ss
mul
xor
lods
ds
retf
ins
pop
and
push
mov
mov
jmp
scas
xchg
or
inc
jl
cmp
ret
push
cmp
cmc
loopne
mul
push
mov
mov
adc
mov
ins
fadd
rol
xor
imul
shl
add
push
sub
xchg
cmps
or
daa
mov
rcr
leave
cmps
pop
pop
cmc
mov
(bad)
test
adc
(bad)
out
mov
lods
inc
or
mov
nop
(bad)
and
lds
packssdw
jmp
stos
add
mov
sbb
mov
call
in
cmp
mov
mov
adc
xchg
das
mov
jmp
mov
ror
fnstcw
sbb
stc
sbb
mov
jbe
fcom
fwait
test
xor
iret
pop
stc
cld
loop
cs
jge
dec
jp
add
mov
inc
fs
mov
ror
or
sbb
xchg
push
adc
mov
dec
xchg
pop
mov
test
test
jns
ja
mov
mov
push
and
loop
add
ins
test
sbb
stos
mov
push
fs
in
xor
(bad)
sbb
out
mov
jmp
inc
cmps
loopne
mov
inc
add
and
(bad)
push
shl
and
pop
mov
sub
(bad)
sti
and
loop
in
in
inc
fnstsw
sbb
jo
in
mov
sub
cwde
cmps
push
sbb
cmp
outs
jmp
cli
jg
mov
outs
cmc
mov
es
adc
pop
sti
lahf
fnstenv
mov
sbb
jns
sar
std
and
int
pop
and
ins
div
sar
rcl
retf
and
lahf
dec
js
ins
imul
movs
lods
pop
mov
jmp
lds
dec
jmp
push
mov
pop
test
xchg
xchg
es
xchg
inc
stos
shl
jne
pop
mov
push
push
xor
(bad)
cmp
loopne
mov
out
andps
retf
pop
add
rcr
add
sub
mov
push
sbb
fldenv
mov
jge
outs
jne
rcr
add
icebp
adc
pop
mov
aad
xchg
xor
xchg
jnp
jl
ss
jmp
add
sti
sub
retf
retf
jecxz
add
es
sub
mov
lahf
mov
hlt
pop
in
aaa
popa
btc
lea
sub
int3
lock
in
lods
sahf
lds
sahf
ret
push
shl
imul
neg
mov
bound
lds
add
stos
popf
mov
outs
jae
push
int
jnp
xchg
jmp
mov
jae
xchg
and
sti
push
popf
cmp
push
in
jg
and
(bad)
fwait
int3
jno
mov
fisttp
nop
loop
rcl
pop
(bad)
int3
cwde
loopne
sbb
cli
inc
bound
pop
add
jo
pusha
or
sub
pop
loop
cli
jmp
pop
addr16
cdq
int3
jbe
xor
push
jno
ret
pop
jecxz
in
imul
test
cdq
cmps
(bad)
out
into
sbb
push
cmp
das
jno
out
and
imul
into
in
clc
rcr
out
jmp
repnz
dec
in
xor
fdiv
cwde
les
xor
jno
pop
push
inc
jns
neg
or
gs
test
push
mov
lock
mov
std
push
push
push
push
xor
or
mov
test
xor
or
mov
xchg
dec
mov
sub
push
or
rcl
cwde
dec
add
psllw
and
sbb
rol
or
and
jge
pop
push
xlat
ss
ja
pop
dec
and
jecxz
and
std
jns
jbe
and
test
push
jb
imul
jo
add
in
fst
jmp
aam
mov
aam
adc
sub
ja
mov
aas
outs
jle
push
(bad)
push
and
out
dec
cmps
clc
push
cmp
scas
inc
test
adc
inc
mov
cs
imul
call
push
ret
xchg
or
int
dec
scas
sub
div
mov
int3
add
push
lods
xchg
(bad)
mov
mov
mov
sub
test
add
and
mov
xchg
les
test
xlat
fadd
cmp
movs
outs
shr
sar
dec
shr
test
pop
popa
retf
imul
jns
imul
les
imul
add
and
add
aad
cmps
sbb
ficom
push
push
mov
mov
xchg
pushf
repnz
inc
lods
daa
(bad)
test
adc
mov
leave
shr
add
outs
call
adc
mov
ret
ds
jmp
in
stos
sub
rol
adc
inc
stos
out
add
in
jb
pop
push
pop
inc
std
in
jb
inc
sahf
test
out
adc
popf
test
dec
sar
retf
lods
(bad)
pop
rcl
xchg
bound
not
sbb
xlat
mov
add
push
jp
xchg
adc
stos
lock
pop
movs
neg
pusha
jbe
push
call
lods
cmp
pop
mov
sbb
inc
into
ja
ret
shl
sub
call
dec
popa
jae
push
retf
cli
fstp
ss
ret
inc
adc
xlat
leave
lds
or
fs
mov
dec
mov
and
or
cwde
ror
loope
or
mov
jmp
dec
dec
sbb
inc
mov
les
push
jnp
dec
push
call
stos
out
aad
and
lds
pop
leave
xchg
xchg
mov
jb
sub
cmps
inc
sub
sub
(bad)
jle
add
xchg
cmps
cld
pop
(bad)
jno
push
out
push
jg
pop
cmps
sub
mov
aad
lock
jp
xchg
mov
nop
add
cmp
das
mov
dec
add
sti
dec
sti
dec
call
inc
ret
call
pushf
mov
jecxz
xchg
das
mov
and
lock
jae
sbb
pop
push
mov
pop
jecxz
pop
mov
stc
call
push
ret
(bad)
das
push
add
or
fwait
mov
cmps
jb
inc
sahf
out
ja
adc
inc
dec
sbb
lds
and
mov
cmp
stos
cmp
cmp
add
sbb
jno
aam
add
pop
sub
jnp
push
test
leave
(bad)
daa
or
std
mov
adc
mov
aaa
pop
(bad)
sbb
ja
xchg
popa
ds
test
push
inc
cmp
and
push
jmp
fstp
pusha
adc
or
cmps
fcmove
mov
push
and
test
jmp
xor
sub
out
and
(bad)
stos
push
ret
(bad)
mov
mov
mov
mov
mov
aad
mov
cmp
outs
inc
adc
pop
sub
xchg
lods
xchg
fild
sub
loopne
fcom
js
test
adc
sbb
outs
pop
fsub
(bad)
daa
fmul
aas
pop
retf
in
nop
jecxz
jl
popf
xchg
pop
mov
pop
in
mov
rcr
mov
jb
mov
movs
gs
adc
jne
sahf
nop
gs
mov
add
mov
pop
out
(bad)
mov
inc
xor
mov
push
inc
adc
cmp
pop
retf
aam
mov
cmp
in
and
iret
push
mov
mov
sbb
test
jmp
mov
xor
or
sub
xor
vaddsd
pop
mov
sbb
aaa
cmp
adc
xchg
movs
xlat
mov
jp
jmp
aaa
cmps
jmp
jb
repz
popf
mov
jl
xor
sub
test
cli
sbb
sbb
adc
jg
mov
mov
jns
cwde
pop
add
imul
bound
mov
outs
or
cmp
xchg
nop
repz
into
pop
(bad)
sub
pop
stc
out
int
jnp
jbe
div
mov
dec
xchg
pop
xchg
(bad)
rol
aad
stos
lea
in
sub
(bad)
test
ins
jle
xor
add
fwait
sti
pop
not
rcl
in
adc
dec
imul
out
in
mov
loopne
dec
add
or
add
xlat
jns
in
cmps
(bad)
jno
aaa
push
jbe
jle
jle
in
std
mov
and
and
int
add
icebp
pop
iret
not
mov
scas
ja
test
stc
xchg
aaa
movs
imul
jl
out
imul
pop
stc
inc
call
fsubr
loopne
push
call
gs
and
and
daa
jns
aas
cmp
jl
cmp
pop
jo
mov
stos
inc
aaa
and
shl
test
xchg
test
jne
pop
pop
daa
pop
or
pushf
pop
int
xchg
dec
fldcw
sti
int3
retf
and
push
ror
(bad)
loope
cmp
(bad)
icebp
mov
jb
xchg
outs
mov
ret
repnz
mov
cwde
sar
adc
in
loop
cmps
inc
cwde
push
jmp
jo
outs
hlt
xchg
fdiv
pop
mov
cmp
jb
jmp
push
pop
or
push
mov
xchg
std
xchg
mov
into
(bad)
cs
xchg
mov
push
cli
add
pusha
jmp
repnz
and
dec
call
loope
lea
fisub
sahf
mov
inc
int
mov
std
cmc
mov
add
pop
retf
test
dec
push
xchg
retf
shl
or
mov
mov
xchg
repz
scas
icebp
into
dec
cmp
pop
push
jo
fnstenv
pop
jnp
sar
push
aam
xchg
addr16
leave
iret
and
adc
not
xchg
add
push
xchg
cdq
hlt
add
ja
mov
(bad)
fnsave
dec
or
jae
mov
jmp
sti
rcl
icebp
mov
repz
mov
cmp
aad
sub
loope
int
or
arpl
xchg
xchg
fld
stos
daa
es
jno
cmp
fisub
pop
sub
and
push
popa
add
ja
jnp
xor
inc
add
jnp
popa
test
mov
idiv
mov
pop
pop
arpl
scas
clc
jb
lahf
loope
adc
mov
and
movs
push
pop
push
mov
std
jmp
std
loopne
cmps
push
scas
jl
and
imul
sbb
cmc
sbb
adc
retf
fld
call
jp
or
shl
stc
mov
inc
clc
add
jmp
mov
mov
jge
ret
or
test
lahf
call
iret
stos
adc
push
or
xor
mov
adc
xchg
inc
lods
xchg
popa
push
(bad)
in
fnstsw
imul
loop
in
paddq
das
xchg
das
sbb
cmp
jae
push
jmp
add
mov
neg
test
movs
mov
fdivr
into
mov
adc
jnp
pop
mov
pop
jecxz
ret
fiadd
sub
xor
jl
out
scas
shr
out
jmp
inc
push
out
imul
xchg
xlat
(bad)
fsub
push
ins
div
cwde
repnz
jle
lea
push
repz
pop
pop
push
fsub
cmp
jmp
in
daa
sbb
xchg
not
xor
das
push
call
dec
fcmovnbe
fs
out
xchg
rcr
adc
xchg
fimul
shl
jmp
fdivp
js
mov
ret
sub
pop
push
and
mov
jmp
and
push
jp
mov
imul
fs
jns
add
xor
or
scas
and
inc
mov
xchg
stos
cmp
cmc
dec
pop
cmps
sub
(bad)
pop
fstp
push
mov
xor
inc
xor
(bad)
sti
mov
mov
mov
xchg
data16
pop
mov
inc
mov
push
(bad)
pusha
dec
mov
jns
(bad)
mov
xchg
inc
in
in
mov
not
mov
stos
add
rcl
imul
imul
sub
mov
cld
sub
icebp
or
push
jecxz
das
sub
mov
(bad)
pop
add
cli
inc
lahf
mov
enter
push
push
add
out
cli
(bad)
(bad)
jge
mov
lahf
mov
popf
popf
out
mov
repnz
mov
out
call
stc
jmp
jb
cmp
xchg
mov
mov
cld
movs
pop
add
in
enter
mov
or
fdiv
mov
jg
into
inc
mov
gs
cmp
fimul
in
jg
in
mov
jno
retf
mov
fbstp
or
xchg
adc
sbb
dec
in
add
jno
aam
retf
push
inc
and
fdiv
pop
pop
stc
stos
inc
mov
daa
retf
out
lahf
pop
mov
push
lods
icebp
xor
xlat
mov
iret
imul
lock
jno
pshufw
arpl
xchg
push
es
std
xchg
scas
scas
mov
lds
lahf
les
and
into
in
cmp
jl
(bad)
sbb
call
lahf
out
call
inc
jmp
pushf
shl
xchg
aas
xchg
sub
(bad)
loopne
(bad)
and
jg
imul
lods
push
dec
jge
hlt
stos
dec
out
loop
adc
scas
push
pop
mov
mov
popa
add
jge
xchg
ss
mov
fsubr
push
sti
mov
cmp
jo
jo
outs
xlat
in
add
mov
ds
mov
sbb
mov
mov
inc
fs
ja
data16
add
push
jge
gs
mov
xlat
adc
push
pop
cmp
(bad)
out
(bad)
cld
fdivr
xor
bound
jg
movs
mov
(bad)
lock
icebp
(bad)
fst
(bad)
iret
(bad)
mov
scas
dec
data16
aas
sbb
mov
or
cmp
je
es
idiv
lahf
dec
test
in
mov
cmp
lock
(bad)
gs
adc
xor
test
pop
lahf
arpl
ins
inc
fst
xchg
int
aam
aaa
jmp
(bad)
imul
dec
je
adc
adc
jge
inc
sbb
dec
sub
push
stos
and
test
rcl
jmp
cmp
fcomp
xor
lods
pop
xchg
jg
dec
ja
fwait
xor
dec
repnz
int
aaa
popa
sar
jb
pop
sahf
jg
lds
aam
mov
fistp
xor
xchg
cmp
in
retf
loopne
jb
enter
stos
inc
inc
mov
and
push
mov
xor
push
fnstsw
int
jle
cmps
jmp
mov
jo
test
fsub
dec
push
fdivr
bound
shl
mov
aaa
gs
frstor
out
aas
cwde
call
push
ds
add
les
push
mov
xchg
cmp
mov
pusha
loop
jae
hlt
push
(bad)
(bad)
mov
cs
ins
pop
imul
mov
enter
imul
and
jnp
or
xor
sbb
in
jmp
jo
imul
mov
sub
out
adc
mov
shr
mov
rol
push
jp
out
fcom
fdiv
lds
je
retf
jnp
shl
xchg
movs
mov
push
sub
and
mov
dec
mov
sar
inc
push
(bad)
cli
mov
hlt
daa
sar
sbb
ret
sub
addr16
adc
xchg
idiv
out
sub
lods
bound
jle
iret
sub
add
inc
jae
sbb
cs
pop
mov
or
sub
aas
shl
pop
arpl
jno
int3
dec
cmc
sar
xchg
clc
xlat
arpl
ret
imul
mov
adc
or
test
mov
lds
push
mov
or
imul
mov
xchg
fcomip
fisttp
stos
push
mov
(bad)
xor
xor
aad
jle
sub
in
out
cld
sub
cmp
mov
fwait
xchg
jb
pop
pop
mov
jmp
sub
or
test
test
mov
out
jecxz
jg
sbb
lods
fstp
mov
dec
retf
jmp
enter
pop
outs
shl
push
aam
in
mov
pushf
outs
outs
xor
adc
lods
mov
mov
ss
mov
ja
lea
mov
les
fidivr
cmp
jecxz
mov
or
mov
xlat
outs
test
jne
jmp
retf
and
xchg
inc
jb
shl
add
movs
fmul
dec
inc
mov
or
sub
jo
mov
(bad)
loop
mov
adc
cmp
movs
xor
int3
jle
pop
inc
loop
xchg
(bad)
int
dec
into
pop
mov
jo
xchg
aaa
push
inc
xor
xchg
imul
push
popa
adc
es
xchg
stos
inc
pop
icebp
fcmovnb
mov
inc
out
outs
cmp
inc
sbb
cmp
dec
cmp
gs
lds
dec
(bad)
xor
push
push
push
mov
mov
mov
das
jns
cmp
retf
dec
cld
aam
pop
cmps
add
adc
scas
lods
cli
in
and
imul
xchg
outs
pop
sbb
and
mov
pop
popa
lahf
cmp
ret
fisub
aas
cmps
inc
in
pop
jge
ins
cmp
imul
fnstcw
add
mov
dec
adc
mov
adc
gs
mov
in
push
mov
push
push
adc
mov
movs
int
jg
xor
mov
inc
loop
adc
(bad)
sar
dec
(bad)
fild
stc
mov
dec
xchg
ss
jle
rcr
mov
inc
scas
pusha
je
cmps
dec
mov
dec
sub
scas
ja
js
movs
push
(bad)
xchg
mov
jge
test
jg
hlt
and
stos
ror
mov
and
dec
ja
adc
mov
(bad)
test
xchg
or
daa
outs
adc
dec
mov
stos
ror
cmp
stc
hlt
les
das
mov
fst
jle
retf
push
xor
mov
les
iret
rol
mov
test
pop
in
xchg
mov
sbb
pop
cmp
scas
scas
std
push
lods
jmp
sbb
dec
xchg
mov
pop
mov
retf
(bad)
and
or
xchg
or
sub
enter
or
jg
repz
cdq
shl
xchg
aam
sti
add
jae
mov
mov
dec
jecxz
dec
loopne
jmp
ins
xor
js
je
mov
inc
std
fs
inc
out
xchg
push
lock
outs
push
inc
ins
scas
fild
push
loope
lahf
or
adc
and
mul
aad
sub
jmp
cmps
inc
mov
pavgb
dec
pop
xchg
push
sahf
outs
inc
and
outs
(bad)
jae
retf
pusha
dec
mov
xchg
mov
pop
cdq
icebp
jb
mov
and
jmp
inc
in
adc
popa
dec
sbb
cld
mov
pop
(bad)
bound
and
fcmovnu
loope
lods
sahf
inc
sahf
ret
data16
push
enter
cli
push
sub
pop
cmp
cmp
xchg
and
inc
repz
(bad)
daa
out
jle
in
ja
loopne
enter
and
adc
mov
jbe
cmp
lds
xor
inc
arpl
cmp
test
adc
fsubr
adc
push
mov
add
dec
and
ja
gs
std
jmp
ds
dec
jbe
(bad)
pop
into
popf
ja
arpl
retf
popf
xor
jmp
dec
sub
vcomiss
inc
dec
xor
xchg
dec
pop
call
xor
xchg
mov
ins
in
call
mov
fs
cmps
jo
push
xchg
aaa
inc
and
pop
nop
ss
stc
inc
loop
inc
mov
mov
outs
lahf
into
push
outs
or
rol
rol
inc
cdq
test
cmp
xchg
test
push
fsub
or
int3
ror
dec
packsswb
or
or
in
jno
shl
and
dec
imul
cmps
and
cs
mov
lea
scas
mov
hlt
inc
push
addr16
mov
retf
xor
inc
lock
pop
pop
pop
jmp
inc
push
jg
pop
data16
shr
dec
dec
cli
xor
push
xchg
dec
pop
push
iret
cmps
pop
cmps
lds
xor
aaa
pop
jae
out
jo
dec
cmp
into
push
loope
push
jle
std
lods
inc
ret
pop
popa
shl
cli
outs
add
imul
mov
cmp
mov
add
jg
gs
inc
(bad)
imul
xchg
mov
mov
nop
into
push
sub
sbb
push
nop
in
mov
out
xor
jo
jnp
sub
adc
cmp
dec
out
xor
(bad)
dec
ret
pop
out
jnp
mov
sbb
repz
sbb
fs
sub
imul
dec
stos
push
add
mov
sti
dec
push
leave
arpl
cmps
mov
mov
dec
mov
or
or
(bad)
mov
inc
shl
push
fisub
mov
push
fnstenv
add
inc
dec
dec
pop
dec
push
adc
cs
add
pusha
pop
mov
mov
mov
fild
les
leave
inc
cdq
and
dec
loopne
pop
jg
lods
mov
dec
jnp
fs
xor
sub
mov
std
lahf
(bad)
xor
ret
movs
lahf
fs
das
shr
or
aad
fldcw
ja
lea
fild
inc
fwait
mov
icebp
adc
stos
lea
cs
mov
repz
fwait
jle
pop
hlt
cmc
mov
pop
cmc
xor
movs
test
mov
out
and
xchg
sbb
outs
(bad)
(bad)
adc
sar
cmp
xlat
(bad)
adc
out
inc
cmp
jne
in
into
cmp
imul
jne
xor
jmp
out
xor
dec
sub
test
mov
add
inc
push
jg
xchg
dec
add
test
add
aad
xchg
push
jp
inc
out
inc
outs
mov
cmp
mov
xchg
test
test
lahf
pushf
pop
inc
jge
mov
add
in
cmp
jecxz
inc
cmp
mov
jge
std
aam
bswap
out
adc
mov
add
push
sbb
or
adc
retf
sub
sbb
scas
inc
xchg
loop
popf
inc
xchg
mov
cmp
add
cmc
mov
add
and
xor
or
xchg
ins
jmp
or
aas
jg
mov
inc
dec
outs
add
ja
int
and
jp
mov
xchg
ins
pop
xchg
loope
mov
dec
add
hlt
inc
cmp
fwait
scas
push
or
push
out
sbb
sub
mov
(bad)
mov
mov
in
jmp
mov
fwait
mov
xchg
xlat
imul
mov
rol
sub
xchg
jmp
jecxz
bound
cli
lods
pushf
adc
sbb
inc
sti
jg
adc
pop
push
mov
outs
jp
cmp
(bad)
and
or
imul
movs
and
daa
shl
jno
mov
add
icebp
in
test
(bad)
movs
push
pop
dec
imul
(bad)
mov
add
sub
mov
xor
test
dec
ret
add
je
es
sbb
fld
xchg
inc
push
and
push
sbb
shr
pushf
popa
lds
mov
or
mov
pop
sbb
out
aaa
adc
je
into
adc
adc
pop
dec
mov
fstp
repnz
sub
pop
(bad)
or
mov
mov
das
sbb
xchg
push
pop
cmp
sub
es
jge
loopne
dec
lods
call
cmp
(bad)
inc
rcr
fucom
rol
mov
inc
and
jbe
lds
dec
push
inc
iret
add
repz
cli
aam
sub
mov
inc
mov
adc
adc
push
out
stos
cld
daa
xchg
jp
lea
sbb
dec
sbb
xor
outs
add
mov
repnz
in
shl
repz
out
dec
mov
pop
sbb
dec
ins
imul
aas
sbb
add
sbb
dec
sahf
xor
sub
xchg
and
add
dec
dec
push
xor
lahf
xor
retf
repnz
mov
sub
jno
mov
les
cld
pusha
icebp
add
mov
sbb
pop
sbb
adc
mov
cld
sar
mov
retf
sbb
cmp
mov
mov
mov
outs
push
call
aad
(bad)
sub
jmp
fwait
int
retf
cmp
call
lds
mov
push
imul
je
mov
xchg
push
lahf
pop
je
and
loope
into
add
movs
inc
stc
add
xchg
mov
out
and
(bad)
clc
fisttp
div
arpl
cmp
and
jecxz
dec
add
mov
not
xchg
arpl
inc
fstp
xlat
scas
sahf
int
dec
push
leave
xchg
pop
cdq
hlt
jmp
dec
push
movs
(bad)
loop
push
loopne
pop
mov
or
ins
bound
cmp
jae
test
test
sub
mov
fdivr
(bad)
sbb
stos
xor
js
stos
sub
xchg
pop
jo
pop
sar
sbb
jp
or
frstpm(287
loope
aad
mov
inc
jo
cmp
jbe
push
js
cmp
xchg
push
scas
mov
xchg
call
cmc
clc
sbb
xor
mov
jecxz
mov
test
sti
pop
cmp
add
sbb
sub
fdiv
inc
jecxz
dec
push
jl
cmp
dec
push
cmc
clc
push
cmps
and
out
test
jns
retf
jecxz
shr
fldenv
rol
ins
mov
mov
retf
sahf
xor
imul
add
ret
scas
popa
mov
loop
cmp
pop
imul
idiv
icebp
xchg
add
int
rol
aaa
lods
fadd
sar
and
cli
es
stc
dec
inc
ror
xchg
aam
push
dec
mov
or
sbb
add
jb
add
push
lock
push
leave
xor
(bad)
xchg
sub
lods
das
lods
cli
mov
push
mov
xchg
(bad)
push
push
fcmovne
mov
call
mov
mov
pop
add
mov
inc
repnz
movs
dec
js
rol
sahf
mov
sub
(bad)
push
ja
xor
dec
push
in
(bad)
leave
inc
les
icebp
or
into
pop
(bad)
inc
icebp
and
jb
fcmovb
cli
mov
aaa
push
cmovae
ins
mov
adc
dec
adc
fimul
dec
pop
adc
push
jmp
sub
out
fs
shl
push
mov
arpl
movs
sub
sbb
xor
dec
jp
dec
les
imul
cmp
lahf
sbb
add
(bad)
jmp
sub
sbb
and
fnstenv
out
and
mov
lods
outs
in
pop
and
jne
lods
(bad)
sub
(bad)
lds
push
enter
push
movs
fwait
push
cmps
out
dec
push
pop
std
add
adc
push
aad
pop
sbb
ret
imul
bound
mov
mov
adc
movs
mov
mov
cmp
(bad)
fbstp
std
jnp
sbb
pop
(bad)
outs
out
popf
cdq
loopne
clc
out
vpand
sub
xchg
nop
ret
stos
aaa
sub
pusha
js
push
mov
fcomp
add
add
push
cmp
icebp
dec
jno
(bad)
fwait
jb
aaa
mov
mov
iret
shl
jno
jo
push
dec
in
jne
rcr
iret
jne
pop
push
sub
mov
imul
std
jecxz
pop
das
and
sti
add
lock
sub
mov
push
mov
dec
xor
dec
ds
cmp
mov
xchg
pop
mov
mov
scas
lahf
gs
cmps
sub
dec
ffreep
add
shr
push
inc
test
sub
push
push
jmp
clc
in
in
and
into
sub
cmps
int3
sahf
push
adc
std
jge
inc
sub
mov
mov
mov
sub
inc
bound
mov
add
fnstenv
add
in
cld
jo
lods
add
or
outs
jo
push
push
addr16
movntq
jb
mov
mov
pop
leave
out
jle
jnp
rcl
or
call
push
sti
aad
fucom
pusha
ds
pop
pop
mov
push
mov
call
rol
ins
imul
in
jl
pop
mov
fwait
or
pop
je
adc
scas
fisttp
cmps
fild
(bad)
fisttp
pusha
dec
add
retf
pop
inc
mov
sbb
(bad)
lods
xor
cld
push
mov
mov
mov
aaa
inc
in
mov
mov
adc
dec
bswap
xor
cmps
mov
xchg
sbb
mov
pop
sti
in
imul
mov
outs
xlat
(bad)
sbb
rcl
jne
mov
adc
inc
or
inc
push
in
test
cmp
popf
jne
cwde
push
in
pop
dec
ins
frstor
cmc
out
lods
xchg
(bad)
test
(bad)
hlt
jle
nop
and
xchg
add
mov
das
cwde
cmp
or
mov
cmp
rdmsr
fcom
ds
aas
sbb
(bad)
sbb
sbb
cmps
pop
jo
mov
dec
les
rol
cli
rcr
out
pop
jo
cwde
pop
ja
cwde
or
rcr
pop
bound
cli
(bad)
fsubp
mov
push
xchg
sti
sti
movs
arpl
mov
add
push
inc
dec
mov
call
movs
xchg
mov
push
sub
daa
aaa
(bad)
in
pop
cdq
add
in
sub
imul
mov
jl
cmp
xchg
pop
test
in
or
inc
in
dec
adc
cmps
test
fistp
mov
loop
cld
out
stos
int3
sbb
das
adc
imul
cmp
mov
inc
scas
inc
rol
ja
mov
push
dec
sti
iret
aas
(bad)
xor
addr16
jmp
add
popa
jl
iret
div
inc
and
push
addr16
ins
repnz
add
cmp
jl
das
mov
sub
into
dec
or
jge
ins
nop
aaa
pushf
bound
mov
je
rol
cmps
mov
inc
or
mov
aad
repz
pop
je
ret
pop
fwait
int
push
mov
fadd
sub
sub
xchg
or
(bad)
cli
cmc
xor
cmp
scas
scas
adc
out
xchg
je
stc
outs
push
es
sub
daa
push
add
clc
call
cmp
xchg
ins
adc
idiv
retf
js
mov
retf
mov
dec
test
stos
lods
push
add
sub
sub
jecxz
pop
loopne
sub
out
sub
bound
cmp
push
aaa
iret
sub
sahf
test
dec
lea
add
pop
adc
and
push
xlat
loopne
jmp
stos
xchg
mov
push
sti
inc
cmp
push
arpl
xor
mov
sbb
out
out
jecxz
adc
mov
(bad)
cmp
test
push
(bad)
shl
repnz
imul
dec
aaa
push
cdq
jns
stos
xchg
mov
xchg
loop
sbb
sbb
jge
stc
js
or
mov
(bad)
add
enter
enter
fadd
pop
push
inc
fisubr
jle
ins
dec
mul
ja
jb
push
and
sub
les
scas
mov
into
push
sub
lods
ror
aam
ss
pop
adc
sub
adc
sbb
fist
pop
punpckhdq
call
xchg
push
ja
aam
ja
into
out
inc
shl
and
dec
sbb
push
lods
xchg
push
int
or
lds
pop
inc
pusha
(bad)
dec
adc
push
adc
arpl
cld
shl
add
pusha
jmp
addr16
mov
movs
jmp
xchg
stos
nop
test
in
pop
les
mov
push
dec
fcomi
cmp
and
add
nop
into
rcr
fst
int3
sbb
int3
and
jns
call
dec
mov
pop
dec
mov
mov
xor
lods
mov
imul
lahf
sub
arpl
mov
movs
(bad)
fcomp
out
mov
mov
ins
mov
push
(bad)
push
inc
rcr
shl
jmp
sub
cwde
xor
pop
mov
sbb
mov
imul
or
mov
xor
jmp
mov
stos
sub
(bad)
arpl
dec
(bad)
mov
mov
jmp
out
in
test
push
mov
outs
push
sub
and
popf
and
jns
xchg
mov
rcl
and
or
jge
jae
dec
sbb
fnsave
aaa
(bad)
cs
test
push
push
or
sysenter
sub
and
xor
cld
fisubr
push
lds
scas
aad
das
test
mov
pusha
fstp
ja
or
fld
frstpm(287
fwait
call
and
cmp
bound
sbb
fwait
retf
mov
test
aad
in
pop
stos
xor
inc
ins
aam
adc
inc
pop
test
fwait
add
cwde
retf
sub
sub
icebp
call
cmp
movs
and
in
push
xor
inc
movs
ret
stos
retf
hlt
push
pop
pop
cwde
call
inc
mov
jg
jp
mov
xor
lahf
int
xor
lods
sbb
(bad)
mov
push
or
push
push
int3
lahf
or
out
dec
mov
pop
cmps
cmp
shl
test
xchg
call
loop
retf
imul
and
test
sub
mov
jo
xchg
cld
sub
or
mov
div
xchg
mov
add
mov
xor
cld
shl
scas
aas
sub
mov
add
(bad)
sub
sbb
mov
idiv
inc
popa
inc
mov
ins
adc
sub
mov
sub
pop
and
add
jl
or
aaa
mov
or
inc
jmp
ja
inc
and
cmp
pop
xchg
cmp
dec
mov
stos
inc
push
mov
mov
loope
push
sti
mov
inc
int3
pop
(bad)
and
loopne
inc
mov
push
iret
leave
mov
clc
pop
(bad)
sahf
jmp
jge
pop
or
xor
inc
arpl
or
or
sahf
pop
xor
retf
xchg
xor
mov
arpl
jne
loope
aaa
call
push
mov
(bad)
or
cmp
ret
into
push
fild
std
pop
mov
imul
cmc
sar
mov
xor
inc
mov
adc
and
cli
scas
(bad)
ret
cs
and
dec
mov
push
adc
popf
xchg
cdq
mov
sbb
rol
in
imul
int3
push
adc
pusha
xchg
lods
jo
test
(bad)
js
mul
pop
sub
xor
or
enter
sub
div
xchg
sbb
cmp
pop
sbb
jp
leave
dec
(bad)
fwait
leave
dec
and
dec
push
pop
(bad)
fistp
adc
add
mov
cmc
xor
das
xchg
outs
sahf
push
or
stos
pop
mov
ins
dec
adc
jo
lds
(bad)
jmp
scas
ja
cwde
(bad)
test
xchg
test
or
inc
add
sub
dec
xor
in
out
shld
call
div
bound
shl
aam
adc
test
aam
loopne
sub
cmc
sub
aas
fisubr
cdq
and
outs
outs
gs
push
pusha
jge
icebp
jge
add
cmp
test
xor
pusha
add
inc
hlt
and
js
add
xor
rcr
mov
stos
movs
mov
push
fst
push
push
mov
stos
mov
push
xchg
sub
pinsrw
xchg
movs
pop
dec
cmp
push
push
retf
dec
xchg
push
adc
daa
mov
push
ins
mov
test
repz
or
movs
and
(bad)
jnp
(bad)
stc
push
int
aas
mov
lock
ror
mov
(bad)
sbb
pop
dec
in
(bad)
push
movs
cmp
lds
shl
mov
cmp
fisttp
neg
sub
leave
jg
xchg
jecxz
mov
xchg
xchg
add
jmp
(bad)
inc
sahf
mov
stos
ins
push
neg
fisub
jmp
loope
sti
popa
push
out
icebp
(bad)
mov
jle
and
stos
loopne
push
loop
sar
sub
ret
sbb
mov
pop
stc
cmp
outs
pop
out
bound
sar
sub
enter
(bad)
xor
ja
dec
pusha
pushw
jbe
out
lahf
cli
retf
test
lock
lods
jmp
and
jle
in
pop
das
retf
pop
mov
adc
mov
icebp
jmp
or
int
dec
dec
out
ror
rcl
sub
adc
ret
sub
stos
shl
jns
cmp
aaa
xor
sub
shl
ins
xchg
(bad)
inc
adc
js
cmp
inc
lods
sar
mov
sbb
add
js
xor
das
push
imul
mov
mov
push
inc
pop
in
add
sub
call
dec
adc
pop
sub
hlt
jo
pushf
jb
pop
xor
jle
inc
adc
or
jg
dec
dec
into
daa
ja
or
out
add
dec
clc
aad
pop
addr16
outs
stos
push
pop
or
jnp
outs
fdivr
mov
aad
sbb
popa
outs
push
xchg
push
inc
pop
dec
push
cmps
pop
imul
retf
inc
test
adc
fst
(bad)
les
sub
dec
xchg
xor
pop
mov
sahf
rcl
dec
fdivr
(bad)
mov
jne
test
xchg
pop
mov
cmps
jge
push
adc
dec
add
inc
gs
popa
pop
dec
imul
mov
cmp
push
mov
fwait
lods
pushf
sbb
sub
out
(bad)
arpl
adc
shl
xchg
push
fld
pop
ret
mov
sub
dec
mov
push
pop
and
cmp
cmps
and
xor
dec
or
shl
sbb
dec
xor
adc
test
ins
mov
(bad)
mov
xor
fisttp
and
dec
xor
cmps
ins
(bad)
call
into
mov
sub
push
sbb
push
fsubr
mov
push
inc
sbb
xlat
sub
test
nop
sahf
pop
out
aad
pop
clc
fiadd
xchg
retf
das
dec
retf
xchg
jle
retf
jne
idiv
dec
sbb
stos
cmp
push
(bad)
in
mov
cmp
je
pop
cmps
add
enter
xchg
inc
jno
fwait
jns
cmp
ins
bound
icebp
icebp
aaa
and
inc
test
jae
ins
xchg
ret
(bad)
ja
pop
enter
jecxz
leave
rcl
sub
pusha
test
mov
add
popf
mov
mov
loope
mov
(bad)
xor
call
pop
inc
in
add
dec
adc
ret
sbb
(bad)
sub
ret
mov
ror
cmp
jo
cmps
xchg
imul
ja
inc
outs
call
pop
mov
mov
inc
retf
jmp
xchg
cmp
sbb
xchg
adc
cld
push
mov
dec
retf
pop
cwde
jge
retf
scas
(bad)
jns
mov
imul
adc
jle
xlat
mov
or
daa
ror
fdiv
xchg
push
add
pop
xlat
or
out
adc
xor
(bad)
fcomi
add
mov
mov
mov
fild
(bad)
icebp
mov
cmp
out
rcr
or
daa
xchg
sub
and
fdivr
xchg
or
push
fild
cmp
das
js
outs
jbe
xor
sub
xchg
test
cmp
add
pop
cmp
sub
jne
(bad)
jmp
leave
pop
xor
inc
adc
pmulhuw
mov
paddsb
push
and
mov
movs
mov
jnp
mov
ins
bound
out
jnp
cli
fidiv
xor
call
jecxz
and
call
adc
je
or
mov
or
cmps
imul
dec
inc
fs
cmps
push
push
xchg
leave
sub
jbe
sbb
fwait
call
or
fmul
xchg
je
push
adc
or
pop
or
push
pop
sbb
pop
or
(bad)
mov
mov
pop
out
(bad)
jl
out
fbld
jge
shr
mov
gs
cli
add
mov
adc
sbb
arpl
mov
out
int3
dec
ja
and
inc
jns
push
mov
aas
xchg
dec
rcl
push
in
xor
lea
cmp
ret
in
rcr
test
and
mov
retf
ret
(bad)
arpl
mov
xor
dec
bswap
add
je
mov
rcl
dec
xor
adc
cmc
sub
int
push
adc
shl
mov
test
xchg
adc
add
cmp
dec
xor
mov
cmp
cmp
rol
mov
or
stos
sti
aad
psubb
fist
and
mov
jns
je
mov
mov
hlt
mov
fistp
hlt
in
mov
sbb
dec
xor
in
sbb
mov
cmps
(bad)
mov
push
dec
ins
inc
outs
xor
xchg
add
lods
mov
mov
cdq
or
mov
inc
outs
rcl
sbb
test
mov
rol
lock
lds
pop
inc
stos
mov
dec
inc
push
mov
inc
pop
or
movs
adc
pushf
neg
push
mov
or
enter
mov
mov
stc
push
jnp
out
mov
inc
and
cdq
xchg
out
sub
in
sbb
mov
mov
neg
(bad)
fstp
add
lahf
push
push
daa
in
(bad)
aam
ins
rol
js
fstp
xchg
mov
cdq
mov
xor
fistp
add
cmps
mov
push
shl
or
add
sbb
fs
adc
sbb
cmp
mov
pop
jle
into
pop
repnz
mov
imul
xchg
adc
pop
sbb
mov
adc
call
in
jb
sahf
pop
in
(bad)
sti
int
(bad)
mov
jno
and
rcl
mov
jecxz
xchg
ret
add
pop
cmps
and
retf
xchg
cdq
fs
sbb
adc
lods
shl
jns
scas
and
test
enter
pop
scas
or
mov
push
gs
out
or
add
cs
mov
test
dec
mov
hlt
jbe
cmp
cs
mov
sbb
addr16
dec
pushf
stos
or
xchg
xchg
lods
sbb
sub
add
cmp
scas
mov
popa
mov
dec
in
jns
outs
pop
je
cmp
add
pop
dec
std
mov
jp
jns
popa
popf
jb
sbb
pop
dec
jp
test
xor
or
fwait
sbb
push
adc
push
and
push
je
cmp
je
pop
mov
and
mov
inc
(bad)
imul
push
mov
inc
sub
arpl
or
fild
into
dec
test
xchg
inc
outs
mov
jno
sti
movs
xchg
in
jb
inc
cmp
pop
and
int
add
push
test
and
(bad)
push
leave
cmp
inc
rcr
mov
fwait
add
pop
push
jp
cwde
dec
loop
xor
aam
fcomp
jne
xor
xor
mov
xor
idiv
add
nop
and
data16
cdq
adc
fldcw
sub
push
push
iret
sahf
or
jge
call
add
pop
add
sbb
pop
jne
xor
inc
add
jge
mov
int3
mov
loope
cmp
mov
mov
fmul
mov
jmp
in
jo
mov
(bad)
jnp
xlat
(bad)
cmp
retf
repz
sub
xchg
and
test
add
jl
ret
das
adc
inc
sbb
call
xchg
dec
rcr
iret
jg
fldcw
xor
xor
or
leave
dec
xchg
mov
les
es
xor
js
cld
xor
int
addr16
xchg
loope
test
pop
fadd
std
xor
cli
ins
mov
and
add
hlt
jg
das
shl
call
jp
pop
cmp
add
dec
dec
fild
das
iret
rcl
or
xchg
(bad)
xchg
(bad)
cmp
xchg
sub
jo
(bad)
dec
je
cwde
sbb
mov
std
test
pop
dec
jo
mov
ss
in
in
inc
mov
cmp
sbb
pop
push
nop
pop
sub
neg
es
mov
mov
rcl
cmps
retf
retf
pushf
out
push
cld
push
mov
call
and
shr
xchg
sub
pop
sub
iret
sahf
and
sub
into
out
jb
rdpmc
loopne
ds
test
hlt
push
sbb
jl
mov
shl
sbb
and
cmp
shr
push
out
cmp
pop
rcl
test
repz
fdiv
cmp
int
mov
xor
out
xor
mov
inc
out
ror
pop
loop
jg
adc
loope
ret
es
pop
ficom
jbe
lock
std
stc
inc
lods
sub
nop
add
jno
les
dec
mov
cmps
bnd
pushf
outs
outs
adc
(bad)
jle
and
fs
mov
(bad)
sar
or
mov
dec
inc
xchg
xchg
in
cwde
mov
cli
xor
into
pop
aam
(bad)
pusha
mov
jl
sbb
addr16
ficomp
sbb
loope
mov
adc
dec
mov
aaa
and
sbb
scas
mov
push
cmp
bound
cli
sub
cs
fs
(bad)
or
ja
iret
idiv
or
or
xchg
mov
bound
scas
xchg
sub
icebp
xor
cs
popf
or
test
lahf
test
push
pusha
push
sbb
push
push
pop
xor
frstor
mov
jmp
pop
xchg
movs
clc
push
pop
mov
fnstenv
cli
or
retf
clc
rcl
int
dec
lods
push
shl
repz
jno
jo
outs
and
jecxz
(bad)
jl
test
add
in
ret
and
push
movs
dec
ffree
jns
xchg
mov
call
add
mov
xchg
xlat
mov
sub
sar
xchg
pop
mov
jge
aaa
push
repnz
fs
jo
cmp
cmp
push
mov
ds
mov
jb
cwde
(bad)
aas
mov
cmp
xchg
or
(bad)
stc
xchg
mov
push
imul
pop
sub
(bad)
popf
xchg
dec
mov
mov
mov
dec
dec
in
cmp
pop
(bad)
call
and
xor
(bad)
outs
ja
inc
mov
inc
fnstsw
xchg
mov
mov
out
call
jge
pop
cmp
jmp
sar
mov
sahf
mov
lahf
or
cld
inc
mov
call
call
int3
lahf
(bad)
xor
retf
(bad)
xor
xchg
and
popf
push
mov
cs
and
shl
popf
retf
ds
shl
pop
lock
push
fdivrp
mov
lea
in
outs
add
jb
mov
pop
xor
pushf
sti
repz
mov
xchg
jne
push
pop
sub
xor
inc
pop
adc
inc
sbb
xor
mov
mov
jge
or
add
and
jmp
dec
fst
addr16
dec
loope
nop
ss
jne
or
jae
pop
scas
jmp
ins
(bad)
adc
cmps
adc
movs
call
inc
int
pop
cmps
xor
pop
xchg
scas
xchg
mov
xchg
ret
hlt
sbb
cmp
add
cmps
fisub
enter
bound
cmp
lods
sub
(bad)
repz
add
pop
inc
bound
scas
ds
push
outs
xlat
mov
xlat
lahf
sub
cmp
xor
mov
sbb
shr
dec
les
and
push
sbb
cmps
sbb
mov
pop
pop
fisubr
mov
dec
movs
repnz
pop
xchg
jbe
push
adc
in
je
dec
cmps
mov
daa
loopne
inc
(bad)
mov
xchg
stc
push
repnz
jo
fisubr
movs
mov
mov
lock
test
icebp
je
rcr
cld
or
cmp
add
outs
xor
lahf
xchg
out
test
inc
xchg
dec
adc
mov
outs
xor
fwait
dec
jnp
mov
push
(bad)
aas
add
push
pusha
pop
mov
pop
push
cmps
out
leave
mov
test
mov
lea
aaa
dec
imul
repz
xlat
sbb
cmc
jb
cmps
out
ins
retf
push
add
xor
xchg
mov
(bad)
sbb
popa
add
xlat
ret
imul
or
cmp
(bad)
inc
jg
movs
pop
ret
jle
sub
outs
mov
pop
clc
mov
jle
ret
das
lock
std
call
pop
pop
or
mov
movs
jmp
ror
pop
adc
dec
ins
pop
aaa
out
aaa
mov
jle
retf
dec
pop
hlt
xor
pop
add
cmp
xor
in
popf
sub
mov
loope
cwde
xor
outs
scas
fcomp
clc
push
jo
dec
repnz
inc
pusha
pop
sub
dec
movs
push
rol
jne
fiadd
mov
mov
xor
add
test
xchg
daa
inc
jp
(bad)
(bad)
sti
test
imul
and
sbb
loop
mov
mov
outs
mov
sbb
inc
xlat
test
fnstsw
mov
jno
mov
scas
mov
mov
xchg
or
shl
in
cmp
cmp
adc
repnz
push
arpl
fxch
cmp
outs
dec
jle
mov
es
sub
pusha
or
shl
pop
fbstp
push
std
arpl
nop
lock
ja
sbb
lds
mov
in
push
mov
stos
stc
pop
xchg
int
xchg
and
test
xchg
push
dec
sub
mov
xchg
retf
hlt
je
push
mov
ss
and
dec
aam
jno
out
aaa
stc
pusha
jmp
loop
xchg
jmp
in
pop
stc
mov
lods
retf
or
xchg
mov
mov
mov
mov
addr16
dec
cmps
in
je
aad
aas
mov
sbb
add
sub
pop
mov
ror
rcr
pop
lods
test
in
call
pop
mov
fwait
sub
jae
adc
(bad)
bound
mov
mov
rcr
stos
cdq
push
iret
aas
cs
in
adc
add
add
retf
outs
or
sbb
inc
dec
ins
(bad)
xlat
cmp
fsubr
xor
pushf
adc
retf
or
imul
cli
sbb
cmp
dec
inc
and
ret
push
mov
fs
imul
cmp
dec
xchg
sub
inc
iret
int3
cs
dec
repnz
scas
pop
push
lock
pushf
mov
rcl
cwde
adc
mov
xchg
scas
pop
mov
fisttp
mov
ret
call
jle
dec
push
shl
cmc
push
mov
mov
push
mov
sub
cmp
das
sub
pop
inc
lahf
push
pop
out
dec
into
test
jno
jecxz
inc
adc
cld
mov
xchg
fcom
aam
in
bound
push
fldcw
push
cmp
cmps
adc
xchg
pop
jmp
pop
cdq
dec
sub
mov
je
retf
or
xor
jg
adc
mov
sub
stos
push
pop
out
movs
mov
fwait
cmps
cmp
fwait
je
hlt
and
or
and
in
add
mov
add
pop
in
add
in
call
stos
les
inc
mov
pop
popa
ja
ja
xchg
ret
mov
movs
inc
jmp
sub
in
shl
icebp
leave
ins
xchg
xlat
pop
jp
cli
ins
push
rcl
test
mov
jbe
movs
push
xchg
xor
movs
mov
cmps
push
aad
mov
pop
in
push
pop
clc
outs
add
(bad)
(bad)
call
cmp
addr16
loope
jnp
not
int
(bad)
adc
and
and
jae
cmp
inc
pop
pop
cmp
or
jl
jb
dec
jg
jmp
bound
or
push
sub
arpl
es
push
ret
pop
xor
and
sbb
jns
mov
jbe
cmps
movs
idiv
push
fwait
mov
fldenv
in
jb
or
mov
mov
fwait
out
ret
push
das
and
push
mov
push
xor
out
outs
aam
adc
xor
leavew
or
pusha
cli
jle
imul
aaa
push
call
push
push
into
fisttp
inc
xlat
lea
movs
inc
mov
lods
inc
in
shr
mov
into
pop
adc
push
xlat
cmp
and
inc
repz
cwde
mov
in
adc
push
adc
loope
cli
stos
mov
popf
dec
mov
es
call
not
adc
xchg
out
out
dec
data16
test
inc
push
(bad)
lea
pop
data16
dec
xchg
xchg
lock
dec
inc
leave
sbb
popf
sbb
clc
add
and
repnz
adc
mov
sub
adc
(bad)
cli
xor
nop
arpl
mov
push
mov
xchg
mov
xchg
jle
and
sbb
or
mov
mov
addr16
mov
push
hlt
ins
mov
xor
dec
fiadd
test
fnstsw
pop
add
jo
xchg
cmps
shl
pop
imul
bound
or
rol
std
pop
retf
cli
in
push
push
sbb
fld
adc
jg
sbb
jbe
adc
push
cmps
ret
jmp
and
push
sub
mov
mov
xlat
jecxz
leave
dec
mov
dec
in
sbb
inc
rcr
imul
aaa
ins
sti
push
mov
pop
sbb
outs
xor
pop
push
imul
loope
js
mov
or
xor
sahf
sub
mov
sbb
mov
fwait
jge
xchg
jge
push
push
je
arpl
sti
retf
imul
xor
leavew
loopne
xcrypt-ofb
cmps
stos
xlat
out
iret
(bad)
adc
cmp
sbb
mov
hlt
and
add
fistp
mov
cmp
sbb
jp
jmp
rdpmc
adc
mov
inc
icebp
or
sti
shl
xor
push
sub
jp
sub
test
jmp
jp
inc
shl
arpl
dec
je
mov
(bad)
mov
add
mov
stos
or
lea
xor
push
cmps
add
push
jl
popa
lahf
and
and
sub
popa
popf
scas
xor
movs
add
out
call
ret
or
hlt
inc
movs
add
sbb
pop
xchg
sub
sbb
xchg
iret
xchg
pusha
shr
pop
jg
ins
dec
mov
leave
inc
push
aaa
mov
pop
pop
nop
scas
mov
mov
xor
sub
xchg
xchg
lea
mov
stc
ins
and
jg
push
lods
out
icebp
sbb
dec
sbb
mov
cmc
ja
fstp
xlat
or
stos
mov
lahf
mov
push
mov
iret
cdq
js
xchg
cwde
je
clc
call
mov
test
cwde
or
dec
xor
mov
inc
cmp
mov
fisub
cmovge
pop
outs
cmps
test
sahf
push
xlat
dec
fst
clc
test
push
add
or
into
nop
mov
mov
jmp
adc
loop
lods
sub
(bad)
fadd
xchg
pop
push
xor
ror
xchg
push
and
js
fidiv
adc
jp
mov
sahf
sub
mov
push
mov
movs
in
pop
or
icebp
xor
(bad)
fnstsw
popf
shl
rol
mov
pusha
das
jmp
pop
xchg
mov
or
clc
push
or
ins
(bad)
push
mov
lock
pop
mov
push
push
jl
jae
mov
dec
cwde
cli
lods
sub
mov
clc
nop
(bad)
jecxz
mov
arpl
arpl
stos
repnz
loope
inc
pop
lea
test
xchg
or
adc
enter
and
icebp
sbb
sub
mov
pusha
shl
sbb
jmp
mov
es
mov
movs
xrelease
or
mov
sbb
push
add
jmp
jp
out
or
mov
iret
cmp
mov
dec
in
dec
jne
sbb
retf
jmp
xor
pop
push
jmp
test
xor
hlt
aam
gs
push
aam
jg
ins
das
jne
sbb
mov
jne
sbb
sar
lea
neg
sbb
fs
xchg
mov
std
jecxz
fmul
je
inc
int
and
mov
in
xor
jg
dec
pop
fcomp
fndisi(8087
inc
push
(bad)
jg
jno
sahf
mov
xor
cmp
mov
xor
fwait
in
outs
pop
xchg
ret
jmp
adc
imul
or
dec
es
cmc
add
mov
sub
je
mov
and
jns
rdmsr
jecxz
adc
cmps
pop
les
pushf
push
hlt
dec
xchg
or
adc
push
stos
lahf
cs
add
inc
mov
mov
push
sahf
ins
scas
lds
call
push
sub
dec
add
pop
or
movs
sub
jl
std
jle
or
dec
(bad)
mov
pop
xchg
xor
stos
sbb
push
popf
movs
in
jno
cwde
xchg
pop
popa
sbb
and
movs
push
test
mov
cmps
je
jb
add
mov
loop
add
fwait
jne
dec
call
xor
cwde
cmp
mov
cmp
sar
inc
fwait
cmp
adc
inc
rcr
sub
inc
mov
inc
mov
int3
inc
cmp
dec
ss
arpl
sbb
or
(bad)
xor
lods
ds
aas
or
mov
adc
xor
cmp
retf
arpl
push
shr
cmp
outs
out
cmps
fdivr
rol
pop
lahf
fdivr
dec
mov
sub
aas
neg
mov
std
daa
or
mov
jg
bound
lahf
or
push
pmullw
xchg
cmp
outs
mov
daa
outs
jmp
jmp
bound
neg
outs
test
in
fucom
test
loop
mov
mov
push
lods
lods
mov
cmp
mov
sbb
jno
cmps
xchg
clc
out
pop
ds
in
jbe
sub
mov
inc
push
or
jne
sub
ds
out
cmp
shl
enter
mov
jge
lods
rol
rol
lds
xor
cmp
mov
aad
pop
int3
mov
out
mov
xor
pop
jl
leave
bound
mov
daa
or
fwait
sti
sbb
sbb
imul
mov
lahf
add
mov
xor
rcr
or
mov
add
stos
call
stos
fcmove
out
daa
stos
sbb
movs
imul
and
aad
ret
mov
test
mov
and
dec
xchg
pop
mov
pop
mov
test
mov
dec
cmps
add
jmp
ffreep
adc
pop
daa
rcr
in
fidivr
push
adc
mov
cmp
cmps
std
xor
mov
cwde
jg
jmp
and
rcr
push
inc
dec
mov
ins
in
test
sbb
and
fsubr
test
sbb
ins
aas
std
inc
ret
mov
int
and
lahf
mov
mov
cdq
repnz
nop
iret
loope
jae
in
jo
test
sub
and
jmp
loope
lods
sbb
sbb
push
pop
ins
xor
xor
xchg
cwde
test
cmp
adc
leave
jmp
js
aas
(bad)
inc
add
xchg
sub
add
call
int
repz
push
out
push
addr16
sub
mov
fsubr
aam
jecxz
cmc
xor
aas
mov
outs
aam
test
fwait
rcr
sub
mov
xor
outs
int
inc
cli
pop
les
shl
push
mov
xchg
mov
jl
out
(bad)
imul
shl
outs
jb
fdiv
ins
pop
pop
push
repz
push
ss
push
test
js
retf
je
std
icebp
add
std
cmp
mov
cmp
mov
mov
push
inc
pop
addr16
sbb
aas
mov
push
stc
push
les
mov
ds
jb
loop
test
dec
hlt
mul
loope
or
pop
and
rcl
enter
pop
push
or
fcmove
pop
out
mov
out
into
je
xchg
gs
stos
mov
mov
inc
push
in
cmp
(bad)
sbb
mov
fild
sbb
add
mov
lds
fwait
cmp
repnz
loop
xlat
adc
jle
(bad)
xchg
mov
xchg
or
ds
sub
xor
js
ret
push
popa
push
xchg
cld
loope
sahf
imul
push
loope
movs
inc
cmp
mov
frstor
sbb
icebp
jbe
(bad)
sub
or
daa
jbe
lds
cld
ja
div
or
nop
add
xlat
dec
repnz
sub
das
mov
push
popf
jge
inc
push
pop
jns
add
lea
adc
(bad)
xchg
mov
dec
jmp
out
jp
stc
adc
add
sub
test
jo
arpl
adc
and
or
cwde
mov
sub
pop
add
dec
adc
dec
es
or
add
mov
mov
xor
jp
call
mov
inc
int
inc
xor
gs
das
pop
push
retf
sbb
push
iret
and
mov
mov
dec
fild
lds
or
ds
jg
cmps
popa
inc
movs
mov
jge
ret
push
test
adc
test
xchg
sbb
cld
xchg
out
rol
clc
xchg
in
lea
test
mov
mov
push
lahf
adc
fstp
popf
lock
loope
out
xchg
jle
mov
push
idiv
jne
mov
cs
rcr
push
pusha
xor
pop
(bad)
sahf
sbb
add
mov
loopne
leave
ja
(bad)
leave
(bad)
jmp
ins
retf
and
sbb
std
daa
mov
loopne
ins
mul
jp
mov
xchg
test
rcl
add
push
retf
inc
shl
push
ret
dec
or
daa
add
fldpi
mov
adc
mov
popf
sar
xchg
sbb
pop
and
push
je
das
fcomp
push
and
sti
or
popa
ret
xor
idiv
repz
pop
sbb
lods
push
add
sti
aas
push
xchg
cmp
adc
mov
sbb
bound
xchg
inc
mov
xchg
mov
(bad)
rol
hlt
ss
and
icebp
pop
int3
sub
mov
leave
stos
(bad)
add
xor
pop
in
dec
xor
fst
mov
out
test
inc
fs
dec
cli
add
or
inc
lods
repnz
inc
js
jmp
fist
jp
jmp
add
lods
pop
arpl
add
rcl
adc
mov
int3
sub
jl
int
pop
mov
mov
scas
retf
push
movs
popa
xchg
rol
inc
pushf
setno
int
ins
movs
(bad)
aad
sub
or
pop
stos
rcr
pop
movs
std
sbb
lods
mov
jge
inc
shr
call
ja
hlt
lahf
xchg
add
pop
nop
movs
adc
push
fst
fs
bound
loopne
scas
rcr
inc
cmps
shl
in
mov
mov
out
mov
ja
cmp
loopne
pop
adc
movs
inc
jmp
inc
jo
lock
and
push
inc
shl
and
gs
shl
mov
inc
sub
loop
cli
xchg
jmp
movs
xchg
test
inc
and
in
sbb
dec
push
xchg
jp
cs
xchg
pop
mov
ret
or
clc
push
stos
adc
(bad)
sbb
pop
add
pop
sub
inc
push
cwde
in
or
xor
add
rol
adc
js
pusha
stos
add
cmps
call
mov
and
fisub
pusha
add
fsubr
jne
cmp
push
cmp
adc
or
and
xor
push
mov
add
mov
push
cmp
bnd
out
retf
cmps
jecxz
stc
xor
pop
mov
push
inc
fwait
data16
pop
xor
fcom
cwde
fnstcw
mov
jp
jmp
sbb
scas
fldcw
mov
addr16
scas
(bad)
scas
cmp
loop
xlat
out
sbb
js
ret
inc
nop
div
cmps
push
ins
dec
sti
adc
adc
fiadd
fs
xlat
xchg
mov
push
into
hlt
xrelease
into
sub
mov
sub
jae
fistp
out
push
mov
imul
mov
mov
jge
xor
mov
push
pop
test
mov
adc
ins
dec
out
fwait
mov
inc
dec
jg
add
push
aad
idiv
stos
mov
daa
pop
icebp
adc
and
mov
pushf
ins
sub
pop
jne
lods
and
xor
js
pop
arpl
or
pop
and
mov
dec
ds
jmp
xor
addr16
add
cmc
shl
push
mov
aaa
cld
dec
dec
xor
cmp
fist
add
sbb
rcl
mov
pop
mov
xor
loop
mov
dec
jecxz
sbb
pop
mov
push
cdq
xor
scas
vcvtpd2ps
push
fwait
sbb
and
jns
test
cmp
or
xor
xchg
fisttp
test
hlt
mov
ja
inc
call
dec
and
cs
jnp
div
xor
(bad)
cmp
shl
and
les
popa
les
and
adc
and
movs
cmp
sub
cmp
xor
mov
jg
das
out
movs
and
arpl
mov
mov
pop
push
test
(bad)
shl
fld
or
pushf
scas
shl
xchg
cwde
sbb
inc
fcmovne
in
jp
cmp
jbe
pop
xchg
sub
(bad)
repz
jae
and
adc
inc
loope
fcomp
and
mov
repnz
jae
test
mov
sub
pushf
fisubr
jo
movs
cmp
jne
xor
mov
outs
jno
int
setns
(bad)
rol
mov
iret
mov
retf
fisttp
dec
xchg
in
cmp
mov
fucomi
fcom
bound
cs
sti
mov
inc
push
pop
std
pop
dec
idiv
push
cmps
mov
push
out
ror
and
ja
xchg
(bad)
jns
adc
movs
pop
xchg
imul
mov
cmp
xlat
or
retf
mov
xor
mov
mov
lods
aad
fcmovnb
in
fild
sbb
mov
cld
int3
sbb
cld
cs
and
sbb
test
sbb
ss
clc
mov
mov
and
pop
fcmovne
sbb
ficomp
and
sub
pop
(bad)
in
pop
or
div
les
jecxz
fwait
aaa
cmp
jnp
test
xlat
cli
dec
popf
mov
mov
(bad)
dec
add
pop
mov
jns
pop
(bad)
pushf
arpl
mov
xchg
cmp
ja
xlat
cmp
repnz
cmp
adc
add
xchg
pop
push
nop
fimul
mov
fisttp
stos
test
lods
stc
stos
adc
sub
cdq
fnstcw
shl
inc
dec
mov
into
fs
shr
jmp
loop
sbb
add
and
pop
jle
sub
pusha
xchg
cmp
mov
push
mov
popf
iret
xor
inc
adc
cmp
xchg
fld
rol
int3
and
and
rcl
scas
jns
inc
or
mov
stos
mov
jg
enter
mov
stos
pop
and
mov
sbb
sbb
jo
cwde
outs
add
loope
inc
in
in
inc
sti
sar
jo
xchg
ret
adc
mov
mov
mov
(bad)
sbb
xchg
add
inc
or
adc
inc
xor
out
sbb
cmps
inc
into
mov
mov
pop
test
int
add
cs
inc
xchg
retf
xchg
jae
scas
inc
nop
fld
fidiv
ss
in
enter
jo
push
(bad)
clc
call
sbb
lock
push
mov
imul
enter
fwait
mov
dec
dec
xchg
gs
mov
vcvtss2sd
mov
mov
pop
adc
stos
aam
pop
pop
xchg
movs
jp
out
jne
xchg
sahf
mov
mov
and
mov
(bad)
popa
scas
jbe
js
inc
clc
mov
gs
cli
mov
dec
test
jmp
test
dec
adc
mov
push
mov
test
and
movs
ret
and
aam
aad
mov
pushf
retf
xchg
jmp
fdivrp
call
fsub
cmp
aas
sbb
out
push
fld
xchg
inc
inc
add
mov
mov
aad
xor
sbb
xlat
adc
out
sbb
dec
test
call
aas
fwait
and
push
and
ins
xchg
or
jb
push
pop
pop
jo
add
mov
pushf
mov
in
xchg
xchg
mov
ja
jns
not
sbb
lods
sbb
and
popa
jno
aam
or
adc
or
les
daa
xchg
fisttp
pop
fwait
and
retf
jnp
mov
sub
(bad)
xor
call
in
pusha
nop
jnp
push
int3
mov
adc
xor
cmp
ret
or
pusha
xor
loop
gs
xlat
pop
dec
(bad)
xor
push
cmp
dec
inc
mov
sbb
mov
into
xlat
nop/reserved
mov
cmp
loop
fisub
cld
mov
leave
ret
sub
cdq
adc
and
xchg
das
jne
jge
mov
cdq
jle
push
sbb
xchg
sbb
mov
dec
int3
cmp
sbb
das
cmp
test
icebp
and
jb
push
mov
and
add
test
ror
and
ins
les
int
les
mov
mov
ins
imul
inc
bound
jp
xchg
data16
or
int
inc
xchg
pop
bound
imul
dec
cmp
aas
repnz
test
pop
pop
mov
aaa
xchg
mov
adc
jne
mov
iret
cmps
jmp
fidiv
imul
out
in
or
pushf
call
out
inc
jge
and
in
popf
sbb
fisttp
cmc
int3
test
sti
jecxz
into
mov
out
daa
in
push
ss
xor
mov
mov
sti
je
cmc
test
adc
dec
mov
retf
jecxz
pop
inc
inc
pop
pop
push
adc
mov
out
sbb
bound
out
or
ret
fptan
and
in
dec
mov
imul
je
out
dec
pop
jl
sbb
stos
cmp
sbb
mov
adc
not
retf
rol
add
lods
adc
or
rcr
mov
pusha
xor
retf
or
add
add
fld
xchg
jecxz
in
push
pop
add
push
mov
xchg
imul
pop
cmp
enter
inc
lods
add
sub
test
adc
sub
ss
jp
xor
loopne
cmp
mov
nop
jle
es
sbb
add
add
sbb
dec
mov
loopne
sub
xor
jns
jmp
ins
inc
inc
aam
in
out
and
cmovb
push
or
mov
xor
out
ret
mov
call
nop
mov
gs
push
cmp
lahf
pop
pop
(bad)
mov
lock
sbb
ins
adc
and
or
push
aam
and
add
dec
inc
xor
adc
mov
xor
outs
xchg
xor
jae
dec
mov
cmp
les
leave
rol
sbb
rcr
retf
dec
sbb
inc
push
and
aaa
pusha
ds
push
inc
cdq
or
shr
cmps
fmul
in
out
bound
mov
push
and
rcr
mov
loop
sub
sbb
pop
sar
jno
cmp
inc
and
add
gs
xlat
push
popf
sbb
std
xchg
addr16
mov
xchg
addr16
in
ficomp
sub
jo
shl
outs
adc
dec
jo
int3
je
retf
jmp
push
movs
repz
cmc
mov
mov
push
repz
xor
aaa
addr16
sti
mov
jge
cli
xor
(bad)
call
out
and
xor
jl
aas
jmp
jl
xchg
push
pop
and
or
retf
out
cmps
daa
or
int3
idiv
push
xchg
fwait
loop
aas
int3
ret
jecxz
lea
rcl
push
add
sub
aam
mov
dec
pop
adc
lds
xor
das
scas
aas
push
loop
rol
sahf
sub
in
push
mov
outs
fisttp
sub
lods
add
mov
fisttp
jne
dec
fnstsw
imul
lods
js
stos
ss
ins
xchg
mov
mov
cli
adc
iret
pop
outs
dec
adc
inc
cmp
dec
shl
aaa
push
or
out
jne
cs
sti
loop
sbb
aam
popf
in
fcom
sub
cmp
jne
dec
in
sbb
stos
inc
aas
pop
icebp
jle
(bad)
pushf
push
fsub
sbb
mov
xchg
in
mov
mov
jns
adc
xor
cmp
push
mov
rcr
mov
test
(bad)
hlt
or
adc
in
add
test
aaa
cmp
cmp
xchg
outs
or
(bad)
nop
lock
sbb
call
test
xchg
xchg
out
xchg
xlat
xlat
pushw
mov
stos
outs
adc
cmp
ins
push
dec
std
inc
mov
adc
div
bound
idiv
pop
pushf
push
clc
cmp
cld
jg
sub
mov
scas
outs
or
(bad)
rcl
adc
bound
rol
test
aas
lods
add
arpl
sbb
or
jne
adc
push
xchg
xchg
sahf
jns
xchg
ret
add
out
pop
clc
lea
dec
mov
sub
(bad)
sub
sbb
outs
faddp
inc
adc
rcl
inc
clc
add
push
or
cs
xchg
jbe
sahf
cmp
sub
inc
jmp
nop
jmp
mov
(bad)
aas
jmp
es
pop
or
or
aas
into
and
dec
jmp
outs
shr
rcr
dec
clc
mov
pop
jnp
bound
mov
pusha
mov
mov
jg
xlat
scas
mov
adc
repz
in
ret
sub
stos
stos
mov
arpl
popa
push
loope
sbb
mov
cli
add
rol
out
xor
mov
sbb
das
jae
xor
dec
xchg
push
(bad)
(bad)
sub
sub
out
call
inc
loope
sub
mov
jae
push
add
rol
scas
or
je
and
push
mov
iret
push
jbe
popf
add
hlt
inc
dec
repnz
rcl
test
add
push
(bad)
leave
cdq
pop
test
push
repz
iret
mov
jmp
addr16
(bad)
rcr
cli
push
inc
mov
imul
pop
push
xlat
push
aaa
lds
add
pop
xlat
pusha
outs
out
mov
and
pop
and
mov
jno
mov
or
loop
mov
mov
jmp
xor
lods
cmp
cmp
mov
movs
ins
jle
shr
xchg
gs
jge
xchg
fwait
jae
fiadd
repz
jp
fiadd
in
cs
popf
push
inc
fld
scas
adc
pushf
hlt
fisttp
mov
add
je
popa
pusha
lods
or
shl
mov
sahf
gs
lds
aaa
cdq
jae
mov
(bad)
outs
mov
and
xor
inc
outs
push
pop
pop
sbb
cmp
fwait
mov
hlt
pop
xor
call
mov
sbb
sbb
fisubr
std
add
mov
push
cmc
mov
push
mov
lock
sbb
loopne
mov
sub
adc
xor
out
push
scas
push
push
dec
sbb
dec
test
pushf
sub
mov
dec
push
loope
sbb
outs
loop
cmp
fnstsw
add
ret
or
lea
push
cmp
popa
xchg
imul
xor
js
out
and
pop
fdivr
mov
mov
or
push
and
(bad)
call
add
movs
xchg
add
gs
leave
xchg
rcl
fs
jmp
jecxz
aas
call
push
mov
add
jmp
inc
and
or
ss
jl
cmp
cli
ret
out
cli
mov
jnp
pop
add
jb
aam
mov
add
push
xor
mov
stos
ror
sbb
mov
cmps
(bad)
cmc
mov
xor
rcr
loopne
pop
lock
rol
pop
add
dec
pop
pushf
outs
mov
sbb
dec
es
shl
das
and
and
lock
add
push
cmp
sbb
jg
jecxz
xchg
retf
mov
int
jl
call
cmps
mov
aam
xchg
lea
cmps
aas
(bad)
jo
jecxz
repnz
test
aam
stos
mov
pop
push
loop
sbb
(bad)
imul
stc
(bad)
sti
mov
fbstp
mov
sbb
out
jmp
int3
loope
cmp
adc
(bad)
pop
cdq
and
popa
dec
test
push
inc
pop
xchg
push
dec
lock
mov
gs
pop
or
outs
add
xchg
cmp
leave
test
js
push
or
int
inc
pop
mov
or
cmp
bswap
cmp
mov
jo
js
nop
mov
push
ins
outs
aaa
leave
(bad)
icebp
loope
scas
sbb
lods
daa
jno
neg
xor
mov
jecxz
inc
popa
sbb
sub
mov
mov
dec
ins
ins
outs
stc
(bad)
stc
mov
(bad)
mov
scas
popf
(bad)
in
sub
sar
pop
cmp
dec
jmp
and
js
add
repnz
shl
xor
cmp
lods
xor
les
sbb
sub
mov
mov
or
dec
scas
mov
loop
push
das
enter
sbb
mov
lock
mov
mov
sbb
test
nop
mov
jecxz
inc
bound
mul
iret
push
xchg
(bad)
pop
mov
mov
mov
cmp
lock
inc
fcmovnu
xchg
shl
inc
mov
ret
push
mov
inc
rcl
pop
or
scas
jb
pop
ja
test
push
cdq
int3
cmp
sbb
jnp
or
jl
dec
mov
retf
sub
je
push
in
xchg
not
inc
inc
xchg
or
(bad)
dec
mov
loopne
mov
fsubr
fs
pop
pop
es
stos
jp
out
repnz
in
cmp
mov
retf
or
in
rcl
push
mov
inc
xor
repz
cdq
push
jg
or
sahf
inc
push
xchg
xor
ror
inc
mov
nop
fs
shl
jg
imul
xchg
jbe
cmc
push
jmp
movs
push
fsubr
jnp
adc
into
adc
out
jl
(bad)
cmp
outs
shl
jmp
ss
fsubr
cmp
dec
push
push
ins
mov
pop
dec
lock
inc
fwait
dec
cmps
jne
adc
xor
dec
ret
test
stos
movs
pop
jne
jp
out
arpl
push
or
add
dec
and
aaa
addr16
pop
fstp
adc
jge
fsqrt
sti
popf
mov
or
add
pop
sbb
jno
add
pop
idiv
add
inc
and
jge
mov
sbb
dec
gs
or
lods
mov
xchg
pusha
fild
inc
jl
retf
(bad)
cmps
(bad)
retf
ficom
sub
inc
inc
push
cmp
sub
imul
sub
popa
xchg
xchg
adc
rcl
repnz
inc
jbe
fimul
or
pop
cdq
(bad)
xlat
pop
pop
fldcw
sbb
ret
xchg
jns
lods
sbb
jo
dec
jge
mov
retf
add
inc
ss
xor
push
sahf
mov
push
enter
dec
jge
and
psubb
xchg
cmp
dec
pop
cwde
call
jmp
sbb
pop
push
mov
lds
stc
fwait
add
arpl
mov
stos
cwde
jp
lock
dec
dec
dec
dec
or
push
or
fwait
cwde
lock
daa
inc
or
and
sbb
out
lahf
inc
bswap
xor
(bad)
xor
add
nop
add
test
addr16
xor
push
pop
ret
shl
dec
arpl
movs
cwde
sahf
sbb
or
sub
repnz
or
ins
aas
cs
test
fs
cmp
ficomp
or
pop
add
mov
push
std
or
sbb
mov
mov
sbb
fdivr
into
xchg
adc
mov
outs
xor
scas
fnsave
or
cs
cmps
push
jo
lds
mov
or
dec
movs
les
mov
mov
dec
mov
test
ror
mov
test
mov
scas
pop
int
pop
sti
arpl
ja
fwait
out
daa
inc
ss
cwde
fsub
aaa
cmp
(bad)
in
lahf
arpl
jle
sbb
ret
cmp
lds
dec
movs
(bad)
(bad)
push
out
(bad)
imul
repnz
mov
ins
add
sub
pop
es
add
clc
scas
out
and
int3
repz
xchg
push
outs
mov
in
jp
cmp
(bad)
inc
retf
cmps
cdq
push
xor
push
jecxz
data16
cmp
adc
mov
out
fldenv
mov
pop
cmp
imul
fistp
std
ret
popf
fwait
jmp
sti
jno
ror
stos
popf
fld
mov
fcom
mov
dec
loopne
xor
ins
or
leave
icebp
jno
in
pop
data16
pop
push
pushf
clc
push
in
mov
cmp
mov
inc
and
xchg
adc
(bad)
ja
or
hlt
adc
xor
gs
lea
or
sbb
fidivr
xchg
push
or
repz
xor
sub
(bad)
fwait
cmp
xor
cmp
(bad)
sub
movs
cmp
cmc
test
mov
out
push
imul
inc
loope
(bad)
mov
fwait
inc
aam
fisub
fsubr
pusha
ja
addr16
retf
dec
jl
dec
popa
loopne
iret
dec
add
sub
jmp
cld
push
imul
cmp
push
sti
(bad)
cmp
cmp
mov
rcr
addr16
mov
lahf
scas
adc
jnp
(bad)
call
mov
ins
popa
mov
mul
or
ret
mov
mov
inc
and
repnz
lahf
mov
pop
fsubr
gs
push
jecxz
pop
cdq
movs
jl
sbb
movs
aam
into
fucomi
lock
arpl
cli
adc
inc
inc
rcr
rol
repz
push
pop
jg
mov
jo
pusha
sbb
retf
rol
dec
adc
pusha
sahf
add
lods
pop
sub
ja
mov
ss
jge
js
cmp
je
mov
cmp
shr
pop
add
or
mov
add
sbb
and
sbb
add
and
mov
cmps
dec
cmp
or
iret
and
pop
jnp
sub
sbb
aad
fdiv
xchg
dec
out
out
inc
lods
loope
sub
mov
pop
das
cmp
scas
mov
push
cmps
das
loopne
mov
daa
or
sbb
sbb
jbe
movs
xrelease
inc
push
pushf
loope
sub
aaa
push
(bad)
cmp
popf
jo
dec
cmc
icebp
das
hlt
ss
loope
pop
std
sub
jl
(bad)
leave
cmp
xor
call
aad
inc
or
lock
fchs
in
popf
cdq
test
xchg
pop
xor
retf
sbb
movs
movs
mov
inc
xchg
pop
inc
sbb
push
sbb
movs
mov
sub
jno
call
cld
sbb
test
mov
sar
dec
xchg
ja
lods
xchg
mov
inc
xchg
cli
push
jge
xchg
ja
add
pop
das
je
mov
enter
sbb
push
clc
aam
jp
repnz
mov
sbb
stc
push
xchg
cmp
pop
pop
popa
mov
out
sub
adc
push
rol
pop
popf
pop
cwde
in
push
out
sub
pop
adc
xchg
jge
push
push
rcr
out
add
es
sub
mov
push
mov
and
into
aam
cmp
dec
push
(bad)
fstp
mov
jp
mov
call
mov
mov
dec
(bad)
sar
xor
scas
lods
aaa
push
icebp
aaa
cwde
or
call
fidiv
(bad)
movs
xchg
push
(bad)
push
in
jno
mov
(bad)
sar
fild
xchg
retf
fs
xchg
cmp
dec
sub
popf
xchg
cmps
imul
mov
shl
cmps
dec
cmp
sahf
xor
imul
mov
cs
pop
cmp
imul
aad
xchg
dec
mov
pop
daa
ja
test
dec
cmp
mov
icebp
pop
es
sub
jne
adc
fbstp
aam
in
hlt
inc
sbb
jbe
fdiv
sbb
jns
ror
outs
cmp
inc
mov
pop
(bad)
dec
cli
mov
adc
dec
test
pop
mul
es
lock
mov
jmp
xor
mov
sub
mov
(bad)
cmp
cmp
ins
and
push
sti
mov
mov
or
mov
dec
push
out
add
iret
dec
inc
adc
lock
in
mov
scas
cmp
pusha
(bad)
cmps
and
inc
test
xchg
stc
xchg
jae
add
or
jbe
pop
ins
dec
fsub
iret
push
xchg
in
cmps
push
enter
enter
cs
mov
pop
xor
push
retf
mov
repnz
add
jl
stc
adc
imul
fcomp
inc
adc
xor
lods
push
add
in
loope
(bad)
leave
fimul
sahf
sub
mov
jbe
popf
jmp
loopne
mov
mov
out
aaa
es
aam
push
and
push
inc
cmps
push
ins
mov
jbe
retf
imul
fldcw
movs
pop
mov
gs
sub
cmp
inc
aas
pop
push
and
jecxz
fwait
inc
cli
dec
sar
fisubr
inc
pop
and
imul
adc
mov
fiadd
mov
adc
shl
push
popf
cmc
pusha
out
or
adc
fisttp
mov
pusha
mov
cwde
lds
lahf
bound
scas
clc
mov
jo
push
nop
loopne
xchg
std
movs
jmp
cld
mov
pop
cmp
jl
not
jae
push
shl
sub
test
push
pop
stos
ror
xchg
call
stos
aad
sar
adc
in
sub
adc
std
sti
ffreep
mov
mov
imul
std
popf
ds
adc
and
inc
pop
inc
mov
pusha
jae
sub
dec
add
movs
lods
pop
mov
(bad)
adc
pop
leave
outs
adc
rcl
fcomp
lods
je
addr16
push
es
xlat
jl
adc
rcl
test
pusha
add
add
das
or
jbe
ss
cdq
cmps
push
stos
out
rcl
aam
popa
inc
sahf
jmp
jecxz
movs
xchg
dec
mov
ins
(bad)
out
dec
push
(bad)
fstp
sbb
outs
clc
(bad)
gs
ror
push
push
test
jb
push
jmp
(bad)
(bad)
cmps
pop
push
loope
(bad)
mov
jno
pop
sub
xor
push
cmp
cmps
test
pop
mov
sbb
push
lahf
arpl
bound
movs
fsub
fs
dec
inc
dec
mov
pop
inc
scas
jmp
mov
outs
dec
add
pop
mov
add
push
jle
icebp
push
xchg
(bad)
fdiv
icebp
paddq
cwde
xor
fisub
or
sub
scas
aad
shl
add
outs
xor
in
dec
inc
inc
(bad)
out
lods
ret
mov
jno
iret
mov
cmp
(bad)
(bad)
and
fidivr
push
fwait
push
push
mov
and
loopne
sahf
inc
sub
loope
pop
and
dec
std
iret
icebp
dec
repz
jecxz
add
psllw
xchg
cli
lock
push
push
retf
pop
jmp
jmp
rcl
or
cs
or
jbe
mov
pusha
push
dec
ja
loopne
xor
call
jl
imul
ss
sbb
jge
(bad)
mov
mov
mov
ficomp
pop
call
cmp
or
push
push
push
iret
inc
dec
mov
out
cs
xchg
jbe
cmp
lods
push
dec
xor
adc
out
stc
jbe
(bad)
jmp
xor
fs
test
mov
stos
inc
xor
push
adc
xor
mov
pop
hlt
xchg
and
dec
ret
mov
and
out
dec
mov
xchg
cmps
mov
lods
jle
push
jmp
ds
pop
adc
push
sbb
cmp
or
mov
pusha
imul
adc
sub
jbe
cmps
gs
cmp
dec
call
xchg
outs
dec
sar
fbstp
arpl
xor
mov
inc
scas
bound
mov
cmp
in
pop
cdq
mov
add
xchg
mov
pop
mov
jbe
jno
xchg
xchg
lods
dec
jmp
add
mov
mov
inc
ds
lock
push
jmp
out
inc
mov
arpl
jmp
mov
cdq
mov
jle
pop
cdq
(bad)
call
pop
inc
pushf
push
or
lahf
sbb
shl
or
pop
mul
jbe
sbb
bound
or
jo
arpl
hlt
retf
inc
pop
lock
pop
xor
js
pop
mov
cmp
dec
jge
lods
int3
inc
popf
das
mov
test
and
movs
adc
(bad)
cmp
xor
and
mov
jmp
outs
xor
dec
xor
(bad)
fistp
ret
xor
adc
or
xchg
pop
xor
pop
sbb
lods
stc
push
inc
push
mov
inc
retf
add
push
popaw
inc
stc
ins
mov
leave
xor
or
aaa
outs
mov
std
and
jmp
cmp
or
inc
push
shl
scas
push
(bad)
cmp
movs
dec
push
mov
movs
ins
cmp
call
mov
and
je
(bad)
mov
adc
mov
push
xchg
dec
arpl
sub
inc
test
fdiv
cmp
cli
push
loopne
sbb
lods
cmp
dec
imul
xchg
inc
xchg
lods
pop
bound
mov
lods
cmp
pop
mov
les
(bad)
adc
jae
sbb
outs
push
stc
sti
(bad)
xchg
dec
pop
pop
push
stos
xor
push
lods
test
sahf
xchg
(bad)
pop
lods
out
cmp
mov
jb
inc
pop
into
push
push
mov
loopne
arpl
jns
stc
push
fstp
mov
test
imul
lock
arpl
ss
mov
xor
xchg
call
adc
jns
and
pop
mov
clc
cmp
lock
ds
js
rcl
ins
xchg
xlat
out
and
or
ins
xor
inc
out
inc
call
out
jle
(bad)
outs
movs
outs
mov
fcomp
pop
jmp
xchg
sub
cld
int3
nop
pop
mov
fiadd
mov
adc
jb
adc
call
dec
pop
pop
shr
xor
sub
mov
in
push
(bad)
jno
mov
sub
push
loope
xchg
mov
add
add
inc
add
xchg
js
repnz
repnz
movs
nop
gs
aaa
call
sbb
icebp
xchg
push
mov
sbb
int
adc
repz
(bad)
std
retf
clc
or
inc
and
out
retf
push
movs
jge
push
iret
push
pop
sub
push
mov
pop
test
add
retf
cmps
cmp
cwde
push
or
mov
mov
in
gs
mov
xor
es
mov
popf
and
sub
fwait
inc
shr
nop
ret
test
pop
movs
push
inc
mov
out
les
sahf
sbb
cld
icebp
frstor
or
cmps
test
jbe
xchg
pop
stos
mov
xchg
loopne
mov
or
cmps
popa
mov
mov
iret
dec
add
cmp
push
jo
xrelease
mov
das
fsub
out
iret
add
in
adc
stos
pcmpeqd
cmp
dec
push
in
(bad)
(bad)
arpl
(bad)
fs
pop
(bad)
jno
aad
fxch
jmp
and
cmp
mov
sub
mov
cmp
sbb
shl
aad
add
jno
pop
mov
(bad)
jge
push
xchg
cmp
push
or
and
or
outs
ja
dec
xchg
xchg
popa
jmp
iret
xchg
mov
or
hlt
js
adc
lods
mov
push
push
ficomp
not
pusha
pop
int3
pop
xchg
mov
inc
hlt
pushf
cli
jbe
jmp
enter
mov
hlt
push
icebp
adc
xor
and
push
call
sbb
push
fs
xor
mov
pop
mov
push
test
out
jp
sub
pop
je
mov
push
cmc
sahf
shl
add
mov
xchg
shr
dec
mov
cmps
add
inc
pop
mov
mov
addr16
jg
jg
or
xchg
push
and
sahf
adc
sub
std
mov
hlt
mov
les
in
adc
sahf
cmp
dec
mov
push
cld
mov
repnz
je
push
xchg
pop
jp
call
mov
cmp
jo
fisttp
push
adc
dec
lods
inc
test
gs
in
mov
clc
jge
jl
stc
push
mov
fldenv
jae
imul
adc
ds
ret
repz
ror
sbb
lahf
cmovs
rcl
mov
dec
repnz
div
mul
hlt
sbb
scas
jne
in
or
lahf
lds
rcl
jmp
lds
lods
cmp
fadd
pop
jecxz
je
jp
aam
shl
xchg
push
movs
aas
arpl
jl
ss
rcl
cmps
cmp
(bad)
mov
stos
cmp
test
les
cdq
pop
movntq
mov
and
loope
test
dec
mov
xchg
xchg
cli
cwde
icebp
outs
bound
adc
mov
nop
sub
dec
lock
pop
ror
aam
push
adc
std
stc
add
cmp
sbb
xchg
dec
mov
push
jbe
pop
mov
sub
jle
aas
sbb
cli
(bad)
fiadd
pop
cmp
sar
pop
push
fnstsw
outs
mov
adc
sbb
pop
outs
loope
fcmovnb
out
xchg
fadd
sbb
jp
mov
rcr
jo
aad
(bad)
xlat
dec
jb
inc
and
aad
fst
aam
out
clc
sahf
xor
rcr
iret
sub
lock
test
mov
retf
jmp
xor
ds
inc
dec
shr
cmc
call
inc
adc
cmp
jbe
hlt
ret
mov
inc
cmp
fcomp
jge
jae
sub
fdivr
aam
sub
push
jmp
mov
ds
scas
and
arpl
ret
inc
jg
xor
stc
inc
mov
sub
cmps
scas
add
pop
cmp
in
ins
imul
cmps
sub
retf
aas
movs
jne
jl
scas
nop
xchg
mov
fidivr
sub
add
push
ja
retf
dec
adc
pop
or
dec
push
int
jae
movs
jmp
fs
loope
ja
ja
adc
shl
push
mov
mov
es
scas
sbb
stos
movs
inc
push
(bad)
data16
cmp
jno
pop
pushf
mov
push
lods
add
mov
fst
add
cli
push
inc
sbb
mov
push
or
adc
add
adc
add
ret
and
div
fcomp
call
or
test
lods
dec
fs
push
jmp
movs
enter
mov
aas
outs
adc
xchg
dec
jmp
jg
jne
nop
xor
or
xlat
das
cdq
bound
retf
cmps
inc
bound
ins
adc
test
push
jns
pop
or
xchg
out
shl
mov
jb
out
sub
neg
push
cld
xchg
ret
out
jp
adc
cwde
sbb
mov
adc
gs
add
movs
pop
push
mov
out
jne
mov
jbe
add
mov
test
xor
data16
(bad)
hlt
mov
js
ds
shl
lock
pop
retf
stos
push
(bad)
pop
push
pop
pop
movs
in
rcr
pop
jp
call
cld
inc
enter
lods
lods
js
lods
dec
iret
jmp
(bad)
push
outs
cld
adc
stc
mov
imul
gs
cld
imul
(bad)
les
and
fucomip
(bad)
mov
mov
call
pop
call
pop
pop
adc
aas
js
add
fs
dec
ret
and
lahf
adc
aas
push
mov
mov
add
or
mov
aad
out
aaa
or
inc
sti
jmp
inc
cli
sbb
xchg
jmp
call
gs
add
(bad)
(bad)
cli
std
add
and
xchg
and
cmp
and
gs
mov
sti
lea
dec
(bad)
push
out
in
das
adc
sti
hlt
lahf
pop
mov
jb
das
push
cmp
xchg
mov
into
idiv
or
pop
dec
cmp
inc
adc
pop
shr
stc
jmp
in
sub
dec
xor
or
retf
inc
push
sbb
es
adc
pop
adc
gs
push
arpl
daa
icebp
xor
jnp
add
jno
call
add
out
rol
fsubr
sbb
xor
cwde
or
outs
jmp
mov
sub
mov
imul
sub
mov
and
movs
ficom
mov
dec
mov
stos
mov
pop
inc
dec
mul
add
test
or
inc
or
xlat
cdq
fsubr
(bad)
sti
mul
mov
jo
xchg
sar
cmp
(bad)
fisttp
cmc
in
dec
xchg
cmp
cmp
repnz
mov
push
and
imul
mov
jb
fsub
xchg
inc
inc
mov
mov
ins
(bad)
(bad)
cmc
test
pusha
push
mov
sbb
xor
pusha
sub
lahf
stos
out
dec
in
and
xchg
mov
adc
and
mov
js
sti
out
movs
inc
push
xor
push
push
dec
adc
mov
loopne
xchg
aad
fwait
ja
mov
xlat
ins
gs
(bad)
pushf
cmps
jle
jmp
xor
mov
lea
push
jo
test
adc
cld
nop
ret
int
mov
xchg
push
mov
aam
push
daa
sahf
pop
and
xor
mov
push
mov
push
lahf
(bad)
xchg
test
add
dec
and
je
push
scas
jg
ror
push
push
xchg
add
mov
fisttp
pop
sub
int3
sti
mov
dec
fisub
pop
icebp
loope
push
movs
push
push
cld
jo
xchg
and
sbb
loopne
test
xchg
cmp
gs
sbb
icebp
cmc
out
cmps
stos
test
or
test
jecxz
push
rcr
mov
and
mov
popf
icebp
jb
pop
jae
repnz
(bad)
fwait
arpl
xchg
adc
xchg
sub
fprem1
push
or
pop
sbb
jl
retf
mov
and
hlt
rol
and
shl
inc
or
push
scas
ins
adc
or
adc
mov
cmp
adc
jmp
inc
mov
adc
gs
stos
mov
xor
dec
pop
jnp
jmp
mov
mov
mov
or
call
(bad)
xor
or
jmp
fstp
push
dec
adc
mov
or
loope
add
icebp
pop
scas
test
ins
jnp
cmp
jl
push
das
cld
pop
dec
xchg
pop
jmp
scas
ins
xchg
stc
dec
fdiv
retf
pusha
lods
push
and
sbb
gs
les
fst
shl
jp
ret
ret
or
nop
shl
lahf
cdq
aam
and
mov
jecxz
rol
imul
neg
push
in
cdq
push
fisubr
call
hlt
stos
repz
ficom
adc
cli
xor
pop
xchg
adc
loop
adc
or
adc
fsubr
leave
div
xor
popf
mov
mov
lea
and
retf
xor
(bad)
aaa
jg
dec
mov
popa
cmp
pop
pop
rcpps
cmp
loopne
dec
cld
shl
sub
push
je
sub
mov
and
mov
in
xor
sbb
adc
iret
xchg
into
mov
add
ror
push
out
cli
mov
pop
or
pop
mov
outs
jnp
xchg
mov
cmp
ja
sbb
dec
jmp
fstp
add
cmp
cmp
mov
push
inc
scas
lods
ins
je
into
or
cld
or
add
and
not
xor
or
push
pop
xchg
clc
imul
out
cmp
dec
not
test
adc
jp
out
ror
movs
or
fwait
xor
mov
sbb
icebp
cmps
out
dec
xchg
popa
push
test
jno
pop
or
fmul
lock
les
and
into
mov
lahf
mov
lock
repz
push
sbb
xlat
push
sahf
add
push
iret
inc
pop
loope
nop
cmp
sahf
out
mov
pop
ret
popf
dec
sti
mov
xor
xor
pop
pop
jae
dec
mov
mov
xchg
and
(bad)
add
pop
lahf
xor
mov
cmp
call
pop
enter
fist
mov
daa
mov
inc
xchg
fmul
pop
(bad)
mov
jmp
popf
dec
inc
into
inc
jle
cwde
stos
xchg
xor
idiv
cmp
lahf
cmp
loopne
adc
sti
mov
mov
mov
cld
in
jne
test
out
mov
and
cmp
add
inc
call
fst
clc
mov
push
mov
or
call
les
sbb
jb
jo
or
es
xchg
xchg
ja
mov
sub
xchg
dec
xchg
das
inc
int
mov
ss
movs
dec
jae
jmp
xchg
sbb
dec
or
or
loop
mov
sub
mov
dec
pusha
bound
test
inc
adc
xor
inc
icebp
ins
mov
ret
sar
jbe
ja
mov
xchg
xchg
and
fcom
stos
adc
enter
inc
mov
and
push
repz
mov
jl
push
cmps
pop
jmp
gs
xor
in
pushf
jecxz
xor
ror
cs
clc
or
cmp
ss
mov
and
xor
in
jp
stos
shr
ds
outs
ins
add
leave
ror
or
add
adc
and
or
xchg
pop
sbb
jno
icebp
ins
add
or
inc
xor
mov
leave
fs
loopne
call
scas
lods
cmps
sub
popa
loope
and
daa
or
mov
addr16
jo
retf
add
in
out
stos
mov
or
arpl
push
add
cmp
adc
xor
xchg
mov
mov
(bad)
rcr
movsx
mov
jno
pop
outs
clc
sar
(bad)
pop
js
xor
shr
jae
pop
repz
out
(bad)
mov
and
push
cmp
xor
loope
mov
rcr
adc
or
pop
popf
jbe
sbb
mov
cmp
js
push
sahf
push
std
mov
and
xchg
je
mov
loopne
push
or
test
(bad)
pop
xchg
mov
push
jge
int
push
mov
lods
jmp
imul
jno
cld
sub
xlat
push
lock
imul
or
pop
imul
or
xchg
inc
add
ins
xchg
mov
inc
and
movs
xchg
mov
into
out
inc
mov
mul
in
mov
mov
cdq
pop
xor
cmc
js
mov
into
mov
and
push
and
imul
cmp
mov
and
ja
dec
cs
inc
and
mov
push
fwait
adc
cmp
xlat
jecxz
int3
sub
cmc
sub
or
push
mov
test
fisttp
push
jge
sub
xchg
and
push
xor
push
enter
mov
sbb
inc
cld
pop
jno
push
jp
xor
jae
lods
nop
stc
and
jl
dec
jb
mov
in
mov
sbb
(bad)
ss
and
sub
test
loope
cwde
out
sub
jne
adc
(bad)
fsub
jne
clc
inc
test
dec
adc
pop
adc
xlat
xor
inc
and
dec
outs
loopne
xchg
jp
fcomi
inc
test
ins
push
adc
das
loop
mov
pop
xchg
stos
mov
push
into
cmp
jg
(bad)
int
xchg
sbb
add
mov
cmp
adc
inc
stc
outs
inc
xchg
push
aam
movs
jge
movs
fwait
mov
pop
and
add
ins
ficom
jmp
sbb
int
loope
test
out
mov
push
adc
std
les
xor
cmc
mov
inc
movs
stos
and
xor
pop
or
(bad)
jl
enter
pop
or
iret
iret
pop
cmp
(bad)
loopne
jns
jg
mov
lock
fsubp
scas
pop
cmp
jmp
or
gs
loop
sbb
xor
shl
call
mov
xchg
xchg
push
icebp
fnsave
int
test
pop
xchg
shl
mov
in
mov
pop
jecxz
sar
repnz
and
jb
adc
cmp
(bad)
xor
pop
cmp
leave
push
or
dec
push
fisub
or
mov
push
ficom
dec
stos
adc
sub
sbb
cmp
cmc
mov
xchg
sub
or
mov
cmp
data16
les
mov
dec
mov
pop
pop
iret
cmp
cmp
jg
cdq
pop
push
sti
mov
push
or
lods
sbb
push
test
ret
test
dec
push
xor
js
sbb
in
add
(bad)
jns
and
jns
mov
push
shl
push
mov
repz
nop
xchg
std
xchg
scas
popf
(bad)
xchg
sub
dec
mov
dec
jns
mov
mov
fwait
add
pusha
dec
xor
rcr
daa
push
scas
jmp
frstor
xchg
adc
or
mov
enter
out
retf
mov
in
clc
(bad)
(bad)
shl
lods
jnp
fcomip
jae
cwde
lock
push
pop
mov
aam
js
sub
mov
mul
xchg
push
inc
ins
fist
mov
std
dec
inc
sbb
pop
stos
mov
sbb
or
loop
sub
lds
push
(bad)
pop
iret
cli
mov
mov
or
jge
(bad)
or
retf
int
call
inc
fdivr
xchg
lods
and
add
xchg
push
cwde
rol
push
and
inc
ss
movs
arpl
push
mov
inc
push
rcl
xchg
sti
sbb
out
mov
loop
(bad)
jmp
cmp
xor
push
and
das
sub
jle
or
xor
call
call
pushf
aam
(bad)
add
ret
inc
mov
mov
adc
addr16
xchg
mov
aaa
push
sub
sub
cli
imul
sub
mov
and
sub
jecxz
sub
jae
dec
(bad)
or
adc
aad
xor
or
dec
mov
xor
ret
inc
xchg
xchg
shr
or
jo
stos
pop
mov
jl
cmp
mov
pop
scas
imul
cmp
ret
sti
sub
fcom
jns
cld
out
out
ins
cmp
inc
and
leave
(bad)
xlat
int
push
loop
stos
aam
inc
push
xor
add
add
and
mov
lods
mov
sub
or
add
push
jnp
and
ret
sbb
xor
fimul
fld
xor
fistp
xor
or
add
cwde
test
dec
xor
arpl
dec
sub
dec
pop
cli
cdq
push
out
(bad)
in
hlt
sahf
frstor
mov
mov
cmp
sbb
dec
push
xor
jmp
in
loope
inc
dec
xor
(bad)
ficomp
ret
mov
inc
dec
loope
or
sub
test
(bad)
enter
sub
adc
(bad)
mov
dec
gs
jo
mov
pushf
fld
xor
pop
outs
pop
test
add
jp
mov
mov
mov
mov
js
jecxz
add
test
neg
ss
addr16
imul
add
push
mov
into
push
aam
xchg
adc
outs
call
push
jge
in
cld
in
je
add
push
sahf
cmp
pop
jge
add
adc
fisub
xor
popa
das
fstp
lods
and
push
repz
inc
loop
sub
xlat
test
xor
clc
nop
in
adc
lods
jmp
fsub
cmp
loop
sbb
fild
jno
leave
stc
aaa
stos
dec
inc
inc
sub
xchg
lods
jge
pusha
pop
sbb
add
inc
pop
jb
ficom
pop
scas
iret
push
fistp
shr
mov
rep
cli
test
jb
mov
cmps
not
outs
cs
sbb
xchg
mov
inc
sub
lahf
mov
in
add
push
pop
shl
mov
adc
(bad)
hlt
sbb
xchg
push
dec
repz
inc
or
mov
push
pop
ja
test
pop
nop
(bad)
arpl
add
out
dec
lea
sub
stos
(bad)
lds
stos
fld
or
int3
or
(bad)
not
dec
retf
push
pop
lock
xchg
int
xor
xchg
cmc
dec
or
mov
aaa
adc
mov
pop
cmp
outs
loope
(bad)
pop
les
pop
mov
fsub
add
pop
sbb
or
mov
shl
ret
push
loopne
movs
pop
and
mov
test
mov
cmps
sub
arpl
fs
sar
jl
add
dec
jb
jmp
pop
cmps
push
loope
mov
sbb
clc
lods
push
xlat
or
push
xchg
add
aam
inc
outs
or
inc
icebp
cmp
xchg
cmps
pop
pushf
cli
outs
mov
icebp
mov
daa
push
jae
mov
fst
aaa
fwait
arpl
push
pop
jb
out
jne
mov
nop
cld
sbb
das
xchg
sub
mov
cmps
sbb
int3
xor
into
test
(bad)
lea
jmp
daa
call
inc
movs
sbb
and
scas
jno
lds
dec
out
and
sub
dec
jnp
out
cmp
mov
popf
adc
jae
jne
cmp
cld
pcmpeqw
adc
rcl
mov
add
or
dec
xchg
dec
xchg
out
repz
mov
xor
xor
add
sbb
push
push
ret
mov
push
test
jmp
sub
bound
outs
out
xchg
test
mov
mov
jnp
ins
add
xor
in
aam
fucom
and
out
jb
stos
jmp
lock
jecxz
jge
fistp
xchg
rol
mov
comiss
push
test
rol
jne
lods
call
xchg
cs
out
xchg
and
repnz
rol
lock
sahf
fwait
pop
or
int3
adc
or
pushf
icebp
xchg
push
push
cmps
mov
pop
xor
lods
mov
push
in
adc
and
jo
jne
test
push
cmp
and
dec
test
cdq
mov
dec
cld
imul
into
cs
xor
and
push
test
in
(bad)
push
stos
cmps
aaa
(bad)
lahf
das
popa
dec
in
shl
movs
xchg
cs
inc
pushf
fidivr
inc
jno
(bad)
cmp
mov
mov
sbb
daa
loop
pusha
push
sbb
jge
popa
leave
and
fistp
sub
or
dec
jb
mov
add
dec
push
popa
or
ret
(bad)
cmc
cmps
loopne
jnp
fs
sbb
inc
mov
neg
mov
inc
inc
pop
test
pushf
mov
lea
loop
cmp
test
pop
in
stos
ret
enter
add
cld
inc
lea
cmp
(bad)
fucomi
or
mov
jmp
cmp
repnz
aam
xchg
cld
ds
sbb
mov
mov
pop
dec
push
arpl
mov
dec
mov
daa
push
push
sub
(bad)
out
in
loope
mov
pusha
and
imul
stos
(bad)
xor
pusha
inc
jno
push
sub
imul
push
dec
ret
int
cmps
ins
mov
jmp
xor
mov
add
int3
cmp
cmp
(bad)
pop
cmp
test
inc
retf
movs
pop
add
retf
popf
pop
cmps
inc
xlat
loopne
mov
add
mov
sti
adc
push
aaa
and
popf
sub
mov
cmc
fs
mov
ret
push
cmp
fs
fstp
mov
or
mov
(bad)
sbb
scas
xor
pop
out
ja
or
and
jp
sbb
cmp
push
loop
dec
out
xchg
div
stos
sub
test
icebp
in
mov
div
dec
push
fbld
jns
and
jb
mov
(bad)
fsub
rcl
data16
lods
jbe
outs
(bad)
sbb
into
inc
mov
in
xor
test
cmps
dec
retf
or
fwait
mov
xor
sbb
fstp
push
scas
(bad)
cli
pop
pop
adc
add
rcr
mov
test
inc
test
leave
cli
out
pop
xchg
push
addr16
push
pop
jno
stos
lods
xor
inc
in
cmps
mov
adc
sub
retf
lock
xchg
adc
cdq
dec
lods
sbb
jmp
push
sbb
push
adc
js
imul
in
cmp
mov
or
sbb
mov
jmp
and
inc
mov
sbb
cmp
outs
int3
sub
xlat
xor
(bad)
adc
push
lods
sub
mov
out
shr
repnz
sbb
es
nop
mov
ret
mov
mov
stos
xchg
jmp
sbb
frstor
adc
inc
shl
movs
dec
sbb
scas
jle
int3
jnp
test
data16
xchg
adc
sbb
jecxz
mov
repz
adc
xorps
mov
jmp
not
jg
shl
xchg
cmp
jo
repnz
iret
pop
sbb
push
pop
mov
add
jmp
adc
pop
add
sbb
xchg
jle
mov
inc
cmp
mov
dec
pop
mov
shl
out
and
icebp
push
je
pusha
mov
pushf
ds
outs
add
or
(bad)
out
movs
jmp
mov
lock
stc
dec
and
cmp
lods
sbb
xor
cwde
xchg
mov
(bad)
shl
sub
push
mov
loope
mov
jne
cli
mov
pop
fdivr
into
mov
sub
dec
out
int3
popf
(bad)
push
cmc
inc
cmp
fisttp
push
int
test
daa
ins
mov
ret
xor
rol
lock
push
shl
add
push
mov
add
std
jmp
mov
push
and
mov
stos
stc
mov
push
jl
and
jns
(bad)
js
add
stos
call
cmp
ficom
jne
mov
pop
(bad)
frstor
ret
stc
cs
rcr
aad
fs
dec
in
push
adc
add
or
inc
das
test
leave
daa
stos
fmul
jmp
push
out
test
repz
push
push
lds
scas
mov
out
movs
shl
pop
mov
mov
mov
stos
fcomp
xchg
xor
mov
sbb
clc
push
pop
cmps
mov
mov
mov
ins
nop
stos
sbb
daa
and
mov
xchg
inc
sub
or
into
in
jno
mov
cmps
inc
out
rcl
sbb
clc
imul
push
movs
xchg
fld
sti
and
xchg
push
xor
int3
test
in
and
inc
pop
push
pop
jne
mov
sti
cmps
mov
(bad)
leave
jecxz
ret
fnstsw
idiv
call
gs
mov
(bad)
dec
into
xor
shl
test
mov
inc
(bad)
jmp
cmp
aas
cmp
xchg
mov
jmp
inc
leave
and
stc
cmps
imul
push
dec
out
jb
sbb
ins
xchg
retf
cmp
cld
adc
cmc
add
cmp
rcr
mov
push
mov
cmp
mov
inc
jmp
popf
sub
mov
adc
lahf
fs
push
adc
or
xor
retf
add
mov
dec
stos
sar
jecxz
in
mov
jle
or
ret
jmp
test
cmp
addr16
pop
fmul
mov
mov
stos
fdivp
mov
push
dec
ret
xchg
out
dec
jbe
push
add
adc
mov
cmp
rcr
mov
inc
cwde
xacquire
int3
pop
ss
retf
pusha
mov
adc
xor
scas
les
xor
jne
sub
inc
lods
cld
call
ins
das
je
sti
xchg
jnp
daa
or
jle
test
push
lods
push
imul
fsubr
inc
jno
jns
lea
inc
xor
xor
xor
adc
mov
imul
fld
pusha
cld
add
pop
iret
and
mov
pop
lahf
xchg
mov
dec
and
test
fstp
add
movs
mov
jl
in
loopne
pop
aam
jecxz
cmp
mov
and
pop
xchg
jmp
pusha
pop
xor
push
jae
dec
cli
popf
lahf
pop
(bad)
int
daa
xor
inc
mov
aas
sbb
cld
dec
add
cmp
test
and
xchg
xor
or
outs
jge
push
xor
sbb
cmc
push
dec
push
cmps
add
cdq
push
arpl
sahf
cmp
push
(bad)
push
or
popa
aad
(bad)
ficom
hlt
fidivr
popa
test
adc
mov
(bad)
cmp
xchg
ds
popa
mov
addr16
jo
mov
pop
push
ja
ret
sub
out
sti
dec
inc
add
mov
stos
jge
pusha
dec
push
hlt
gs
cmc
cwde
lock
push
pop
pop
sub
fdiv
arpl
cld
mov
stos
rcr
mov
cs
sti
jmp
xor
out
movs
fistp
aaa
hlt
push
pop
cmp
int
movs
inc
ins
sub
mov
adc
iret
xchg
scas
mov
add
and
fsub
dec
adc
and
and
xlat
je
movs
cwde
jo
rcr
bnd
jge
clc
jae
fsubr
adc
fs
nop
cld
leave
xchg
xchg
sub
pop
cwde
call
cmps
test
js
je
mov
out
aas
retf
ja
jne
mov
lahf
adc
into
and
xchg
jbe
push
call
inc
mov
xor
mov
stc
clc
dec
cvtdq2ps
mov
push
mov
ja
into
lock
data16
cwde
and
(bad)
fstp
mov
shr
lock
(bad)
sub
jge
mov
fist
cmps
movs
in
movs
xchg
mov
xor
arpl
lods
in
(bad)
fdiv
leave
xchg
cmps
inc
mov
push
xchg
xchg
mov
or
addr16
fs
mov
mov
jne
pop
dec
xchg
inc
out
cmc
jp
call
data16
ror
mov
pusha
sti
(bad)
sbb
push
mov
push
sbb
sub
sub
jmp
mov
mov
hlt
xchg
cmp
xchg
push
mov
mov
leave
lods
jmp
(bad)
out
fisttp
mov
jp
pop
or
sti
inc
stos
push
int3
push
leave
hlt
mov
xchg
and
aas
fcom
outs
gs
xor
cmp
sete
inc
mov
mov
xchg
aam
sbb
ja
es
cmc
or
fsub
mov
push
movs
mov
mov
dec
mov
popa
les
push
lods
je
jae
mov
xor
iret
sub
adc
xchg
dec
mov
and
push
xor
xor
pushf
int3
popf
inc
nop
xchg
push
or
test
imul
(bad)
cld
(bad)
repz
or
add
aas
dec
xor
fiadd
(bad)
out
js
pinsrw
pop
or
iret
xchg
xchg
cmps
mov
jo
aam
adc
aaa
jmp
mov
jp
mov
xor
sbb
inc
leave
fisubr
leave
test
imul
jge
aaa
xor
fnstcw
and
ficom
add
cdq
lods
or
cdq
stos
sub
push
cs
retf
imul
addr16
out
add
fst
dec
mov
xchg
aam
movs
or
(bad)
mov
push
sbb
xor
and
iret
and
inc
cs
inc
adc
stos
pushf
mov
loope
sub
lods
hlt
imul
adc
fs
sbb
dec
lods
mov
gs
pop
push
sbb
(bad)
jmp
out
mov
jp
jmp
push
jbe
shl
clc
retf
jno
aas
into
push
adc
xchg
dec
pop
jno
push
daa
fs
push
std
push
mov
and
ja
sbb
fild
jne
sbb
pop
je
lahf
mov
jle
aaa
bound
outs
inc
dec
repnz
mov
lea
xchg
pusha
bound
mov
push
sar
mov
fst
mov
movs
test
inc
mov
jno
dec
mov
loop
test
shr
cwde
sub
sbb
arpl
imul
and
hlt
push
test
jmp
add
popf
rep
mov
ret
ss
sbb
mov
inc
movs
sti
retf
xchg
cmps
in
rol
and
into
and
loop
ffree
outs
int3
les
pop
jns
movs
push
ror
cmp
sti
mov
or
mov
ret
inc
xchg
imul
xor
(bad)
jmp
div
fwait
(bad)
cs
push
mov
dec
mov
scas
add
shl
cmp
sbb
mov
cmp
loopne
mov
lahf
cmp
jo
push
stos
movs
mov
sti
pop
sub
xchg
mov
lea
jg
jle
mov
push
jle
(bad)
xchg
int
mov
(bad)
adc
mov
jg
cdq
imul
mov
jmp
popa
fwait
je
cdq
retf
popf
neg
jmp
adc
or
pop
push
arpl
daa
inc
je
dec
ins
and
push
(bad)
pop
cdq
fild
sub
test
movs
xchg
int
jg
mov
out
inc
ins
mov
and
dec
fwait
aam
and
dec
dec
jp
jb
test
dec
xchg
jmp
dec
xchg
lea
fdiv
push
mov
pop
xchg
bound
dec
fnstcw
out
adc
sub
aad
xchg
push
cmp
stos
les
(bad)
pop
stos
test
or
cmp
(bad)
adc
xor
movs
jnp
std
xchg
lock
setg
mov
sub
mov
sahf
mov
rcl
mov
nop
rol
std
jmp
cmp
sbb
push
push
out
retf
sar
aam
fistp
mov
out
adc
mov
pop
in
idiv
pop
fstp
daa
lahf
test
pop
adc
cmp
mov
adc
mov
sbb
sbb
pop
push
outs
rol
pop
cli
cmp
or
jmp
mov
(bad)
and
xchg
or
stc
push
(bad)
cmps
jmp
push
cld
aad
ret
vpaddusb
(bad)
in
seto
pop
fnsave
mov
pop
pop
pop
pop
xor
push
movs
mov
call
loop
and
inc
cmp
arpl
add
or
cmps
sbb
push
lods
and
add
stos
icebp
push
adc
dec
pop
sub
and
test
push
inc
shl
jge
dec
dec
push
push
ror
pop
or
je
repnz
shl
and
arpl
xor
ins
mov
xchg
jb
inc
or
aad
lea
hlt
fsubr
test
mov
mov
add
add
and
in
jne
adc
adc
jb
mov
scas
popa
fistp
in
jmp
mov
xor
loope
add
or
mov
mov
adc
sub
ja
movups
in
test
dec
rol
in
mov
sub
mov
add
mov
mov
mov
sub
xchg
dec
imul
push
cmp
lahf
stos
call
lock
jge
inc
test
inc
inc
xchg
mov
popa
mov
call
das
or
adc
and
xor
sti
sub
and
mov
daa
push
cli
jp
pop
enter
mov
xchg
dec
data16
fist
inc
movs
sub
cmp
xor
mov
aam
(bad)
mov
fisubr
jg
pushw
dec
sub
std
jmp
mov
jo
sbb
push
cmp
ins
int3
leave
cmp
xor
es
or
mov
out
mov
and
out
adc
in
in
mov
das
and
es
into
retf
dec
lds
fild
nop
pusha
jmp
xlat
icebp
hlt
push
cwde
es
in
sub
cld
ss
test
mov
mov
or
jmp
(bad)
jmp
retf
add
cmp
sub
pop
sbb
out
imul
cmp
dec
mov
cmp
adc
pop
pop
xor
adc
jle
jbe
mov
sbb
sbb
fstp
fmul
add
fs
retf
pop
mov
fdivr
pop
cs
mov
test
lods
ins
hlt
lahf
mov
xchg
add
int
lahf
sbb
mov
xor
or
inc
xlat
inc
aad
xor
adc
enter
adc
lds
xor
ret
adc
in
cld
sbb
(bad)
adc
adc
stos
push
sbb
inc
add
repz
data16
imul
cmc
(bad)
pushf
add
add
inc
or
push
shr
js
mov
test
xor
push
stc
lea
out
pop
push
movs
pop
inc
repnz
dec
xchg
pushf
jae
outs
jnp
not
movs
add
div
das
mov
loopne
sbb
mov
add
cmp
mov
scas
das
fmul
jb
xor
test
push
or
cli
call
push
imul
mov
cmp
test
stc
cmp
jae
sub
scas
call
fistp
ins
adc
sbb
lock
and
mov
cs
popf
mov
mul
pop
(bad)
mov
inc
mov
in
mov
cmp
and
xlat
cld
fcmovbe
dec
outs
mov
call
aad
retf
mov
or
jae
call
xor
(bad)
neg
test
in
ret
or
jg
fmul
sbb
xor
jl
push
(bad)
lock
div
in
not
scas
mov
and
push
fmul
mov
pop
cmp
mov
gs
jp
test
or
repnz
pusha
xor
jmp
mov
aam
imul
jne
test
rcl
inc
push
es
adc
and
pop
xchg
dec
pop
or
test
cmps
or
popa
sahf
or
push
jmp
or
sub
add
cmp
push
shl
cld
ds
stos
out
ds
(bad)
js
pop
sbb
and
fs
mov
mov
adc
pop
ror
inc
cmp
adc
daa
sbb
xchg
mov
pop
ds
test
pop
push
sub
sub
loop
mov
pop
mov
inc
test
jno
cmp
pop
xchg
scas
cmp
jns
mov
or
stc
pop
adc
sbb
clc
in
jmp
add
dec
lds
xchg
jl
hlt
cld
cmp
cmp
push
cmps
add
in
sbb
outs
jae
xor
mov
(bad)
out
inc
fucomi
mov
popf
aam
not
inc
(bad)
aad
jp
rcl
outs
dec
aam
je
ja
push
mov
lahf
shl
movs
mov
dec
pop
inc
inc
dec
rcr
jmp
jg
mov
bound
jmp
add
in
stc
cld
pop
neg
int3
adc
adc
mov
retf
add
fidiv
mov
or
(bad)
daa
jg
fcomp
cmp
sbb
in
and
jl
add
pop
xor
mov
fiadd
cmps
ret
std
add
sbb
inc
lea
rcl
mov
cdq
sub
cmps
mov
jle
or
push
cmp
pop
cmp
add
fs
push
rcr
mov
adc
rdtsc
or
mov
sbb
dec
jo
das
jae
push
pop
mov
adc
and
leave
(bad)
jnp
inc
inc
xchg
addr16
neg
xor
jnp
repnz
dec
mov
lods
pop
lods
inc
test
scas
mov
adc
inc
loop
jmp
mov
mov
daa
fcmovu
sti
bound
pop
in
mov
mov
or
mov
inc
repz
hlt
(bad)
mov
test
clc
es
xor
and
add
mov
ds
add
or
es
lea
ins
std
pop
mov
mov
je
test
adc
cmp
jg
es
add
cmp
into
adc
pop
inc
mov
jp
dec
popf
sbb
out
aad
daa
cmps
clc
xchg
lahf
or
cmps
test
xchg
cli
pop
ins
and
cdq
sbb
(bad)
pop
mov
xlat
mov
xchg
pop
xor
cmps
loope
push
jae
mov
jmp
adc
adc
in
push
push
jmp
sub
(bad)
fcmovne
adc
dec
shl
dec
push
loope
adc
ret
test
cmc
or
mov
bnd
rep
mov
pop
mov
lock
jl
aad
pusha
and
pop
jg
rcr
sub
out
dec
dec
pop
or
into
sbb
out
rcl
mov
fsubr
jg
add
add
ja
mov
test
dec
movs
in
mov
xor
fstp
leave
push
(bad)
scas
mov
ror
pusha
mov
in
jne
cmp
mov
das
shl
(bad)
adc
pop
push
jo
sub
scas
je
mov
inc
cmp
pop
sub
mov
inc
mov
ins
cli
push
sar
jbe
mov
fsub
fild
out
push
loop
mov
xchg
fcmovu
inc
(bad)
test
xor
pop
xlat
mov
pop
push
mov
imul
or
mov
and
fidivr
push
das
std
in
dec
pop
and
cli
mov
arpl
fidiv
pop
in
push
mov
je
jge
jns
aad
or
stos
and
jle
scas
push
adc
inc
sti
mov
stc
iret
add
ss
pop
int
mov
leave
retf
cmp
mov
push
dec
adc
pushf
popf
push
xchg
add
xor
cmp
movs
mov
add
pop
inc
fimul
xor
and
mov
pop
imul
hlt
gs
retf
mov
push
cld
pop
and
jg
sub
mov
repnz
sub
push
or
sbb
les
inc
xchg
sar
cmp
add
jns
je
jae
xchg
dec
mov
sub
sbb
mov
in
mov
cld
jp
std
pop
aas
push
adc
jl
add
call
idiv
sbb
xchg
test
mov
adc
dec
fbstp
in
pop
sahf
dec
addr16
lods
xchg
pop
sub
jb
xchg
inc
dec
push
int
test
in
cli
ficomp
cmc
jnp
sub
fld
adc
int
outs
lods
mov
enter
cmps
fwait
stc
and
pop
jne
aas
imul
cwde
jne
(bad)
push
test
jmp
imul
jmp
jbe
js
xlat
push
jnp
movs
jno
sub
sbb
iret
add
add
cmps
dec
mov
fcom
retf
mov
test
cmp
dec
jg
out
cmps
pop
cmp
mov
mov
xor
lea
jg
(bad)
xor
and
pand
rcr
iret
les
add
sbb
pusha
lock
rcr
xor
jnp
sub
and
xor
xchg
or
jns
sub
dec
and
data16
cmps
push
and
mov
jmp
cdq
call
push
sub
or
lods
inc
inc
lods
pop
outs
ror
pop
mov
ror
lahf
pop
(bad)
out
enter
test
xchg
cmp
rol
mov
jb
cmp
and
and
xchg
in
jo
and
mov
pop
jns
pop
mov
enter
orps
jle
pushf
sub
push
inc
jb
add
jmp
shr
jno
ret
inc
dec
sar
xor
push
mov
xchg
mov
mov
or
ret
push
clc
test
xor
pop
data16
sub
loope
ja
push
pop
inc
ret
(bad)
and
or
and
xchg
scas
adc
in
or
xor
leave
test
outs
push
outs
adc
add
bound
sub
pop
pop
jnp
mov
push
outs
jp
ror
scas
xor
retf
mov
push
push
stos
cmp
shr
std
xchg
jp
dec
mov
aam
sar
and
je
mov
rcr
shl
mov
push
popf
xchg
rcl
xor
fnstenv
test
jmp
inc
repz
push
movs
add
loope
push
pop
push
inc
add
mov
adc
inc
push
(bad)
mov
cmps
out
jle
aad
mov
sar
stos
xor
jno
jbe
or
jmp
mov
(bad)
loope
xor
mov
push
jno
dec
test
in
shl
push
stos
add
and
aam
imul
pop
sahf
cli
les
in
xlat
mov
es
ins
push
jl
xchg
leave
test
out
cli
mov
mov
mov
jg
mov
out
inc
dec
mov
mov
fisub
jg
pusha
sbb
in
jbe
out
dec
(bad)
inc
enter
movs
xor
jbe
xlat
or
push
cdq
pop
mov
icebp
mov
push
dec
loop
mov
pop
gs
pop
inc
xchg
or
cmp
mov
les
neg
cli
ret
add
xor
rol
sub
icebp
push
push
xchg
js
in
in
push
push
sub
icebp
xchg
dec
mov
dec
ins
repnz
sub
popa
mov
jb
cdq
arpl
mov
xchg
pushf
mov
adc
fimul
dec
jne
dec
add
mov
pop
repnz
jno
leave
fwait
cmp
sbb
int3
test
mov
inc
adc
(bad)
inc
int
fstp
pop
popa
or
pushf
jg
add
popf
dec
ds
pop
cmp
or
cmp
dec
cdq
leave
xchg
add
ror
push
ss
mov
iret
pop
pop
and
sar
pop
xlat
push
js
mul
cmp
push
push
bound
loop
shl
fldcw
(bad)
rcr
mov
int
stos
jae
(bad)
scas
sbb
xchg
xchg
sti
daa
push
fmul
sahf
repz
fwait
dec
call
cmp
xchg
xlat
retf
repnz
das
mov
jge
sbb
xchg
shl
(bad)
inc
bnd
fist
ins
push
or
push
mov
dec
fcmovb
mov
add
jp
fsubr
iret
mov
mov
das
sti
jb
dec
test
emms
retf
fsubrp
inc
or
pop
add
fndisi(8087
sbb
sbb
movs
dec
and
xor
test
sbb
jle
sahf
pop
loop
push
(bad)
(bad)
xor
or
out
lock
jg
neg
mov
cmp
stos
fisubr
dec
mov
sbb
pop
imul
xchg
push
fcom
add
call
imul
fldenv
popa
fwait
xchg
cmp
mov
add
out
mov
xchg
and
out
adc
push
dec
and
int
mov
ret
add
cmp
xor
or
push
jns
inc
hlt
and
dec
inc
ins
(bad)
ins
inc
test
test
int
xor
add
ins
popf
mov
mov
movs
out
mov
push
pop
jmp
imul
push
ficom
xchg
lods
and
lods
out
add
pop
push
loope
pusha
pop
retf
shl
jle
sbb
or
mov
rcl
cmc
push
test
jns
out
pop
sahf
lock
imul
jnp
test
xor
and
out
sbb
out
mov
cmp
sbb
sub
popf
jl
mov
outs
mov
nop
jmp
dec
and
out
mov
push
mov
cmp
stc
xchg
mov
loopne
iret
(bad)
jnp
clc
popf
mov
xchg
stc
in
jge
aas
or
mov
aas
cld
pop
sub
rdtsc
in
out
nop
data16
mov
jae
and
scas
dec
int3
nop
push
adc
add
aaa
hlt
or
mov
popa
jns
inc
jbe
jmp
cmp
add
cmp
push
push
rcl
xchg
dec
or
(bad)
xchg
out
shr
test
loopne
inc
hlt
xchg
jae
mov
cmp
dec
mov
sbb
cmps
sahf
test
fcmove
or
and
mov
xor
mov
push
or
xchg
stc
(bad)
sub
push
data16
sbb
fstp
fstp
jle
fnstenv
push
adc
pop
mov
xchg
adc
or
hlt
out
in
shr
mov
aad
ror
jl
retf
mov
xchg
mov
pop
mov
sets
loopne
jp
hlt
stos
jnp
cs
ss
psllw
ror
aad
out
jne
pop
jo
jnp
hlt
mov
imul
(bad)
lock
fwait
inc
daa
pop
pop
icebp
inc
(bad)
mov
dec
mov
ins
stc
mov
sbb
sub
sbb
sub
push
mov
or
ins
xchg
mov
icebp
jnp
cmp
push
je
stos
add
icebp
repnz
cld
inc
repz
es
mov
sbb
popf
scas
sar
push
ja
mov
jle
mov
fisubr
jmp
jo
out
(bad)
std
jmp
sbb
cdq
movs
fsub
clc
in
mov
adc
sti
cdq
or
scas
adc
loopne
and
jnp
add
xchg
lods
lea
mov
stos
sub
jmp
inc
ret
pop
in
popf
fdivr
enter
push
jg
pop
cdq
mov
sub
mov
and
adc
push
push
cmp
fidivr
stc
retf
mov
repz
gs
aam
les
mov
sbb
push
jp
sbb
callw
inc
jb
sti
xchg
xchg
leave
jns
dec
sub
sub
mov
lods
or
push
dec
mov
rol
out
mov
(bad)
jmp
shl
jbe
mov
out
ins
ror
mov
(bad)
pop
nop
sbb
push
pop
sub
inc
icebp
or
(bad)
(bad)
mov
outs
adc
xor
mov
mov
out
adc
ret
ds
pop
ja
or
mov
xchg
outs
loop
pushf
cmp
in
arpl
add
les
jae
popfw
cmc
mov
dec
hlt
mov
loop
jne
pop
ins
call
jbe
les
jne
dec
pop
jmp
pusha
(bad)
push
xor
push
mov
das
jns
pop
je
dec
js
jnp
ins
test
mov
inc
ins
xor
in
mov
rcl
pop
jns
icebp
mov
popa
xchg
jae
data16
pop
cld
stos
mov
sbb
push
adc
loope
inc
push
hlt
test
ins
outs
test
mov
inc
mov
js
xchg
outs
gs
fisubr
scas
cmp
out
push
mov
nop
cs
pop
es
jno
mov
les
xchg
fsub
jnp
clc
or
arpl
mov
stos
mov
cld
hlt
cmp
das
icebp
push
retf
clc
lods
out
or
aad
pop
fwait
and
or
dec
aad
dec
jle
mov
dec
sub
mov
aam
lea
cmc
pop
xchg
pop
dec
cmp
xor
mov
cmp
in
mov
sbb
or
add
pusha
mov
lods
jmpw
add
xchg
out
inc
pop
aam
and
pop
sub
add
add
and
mov
int
mov
mov
jns
dec
test
cmp
leave
xor
jle
popf
addr16
push
lock
sbb
loopne
hlt
imul
xchg
frstor
fild
fcom
je
inc
add
iret
loopne
not
jb
mov
mov
mov
push
inc
repz
xor
repnz
enter
push
icebp
jecxz
in
pop
aad
pushf
add
push
adc
or
pop
out
adc
int
dec
shl
xor
out
fs
js
shl
mov
cmp
dec
movs
pop
inc
inc
sti
pop
jne
xchg
ss
sub
retf
aaa
pop
movs
movhps
fdivr
cmps
in
jo
cmp
shl
sub
xor
push
and
xchg
pop
sbb
das
mov
sub
jmp
dec
push
lock
xchg
ret
and
loop
in
in
mov
pop
and
jmp
jp
pop
jmp
rcl
cmp
aad
sub
jb
sbb
xchg
mov
(bad)
repnz
imul
fbld
sub
push
ficom
xchg
xchg
ss
addr16
jg
mov
ins
sbb
xor
sbb
sub
in
cmp
(bad)
adc
jnp
cmp
out
(bad)
jl
shl
inc
inc
xchg
fwait
sub
mov
xlat
scas
gs
pop
mov
xor
fdivr
mov
pop
mov
dec
push
mov
add
and
ret
ins
into
mov
mov
push
cdq
into
in
frstor
inc
jmp
lds
cmp
in
sbb
retf
pop
push
test
jmp
dec
out
cmp
mov
xchg
xchg
sbb
loopne
out
outs
iret
ss
cmp
fild
pop
pop
adc
jge
cli
fnsave
dec
(bad)
aas
(bad)
add
rol
loopne
aad
movs
xor
xor
out
push
dec
push
(bad)
and
and
xor
aam
jge
mov
pushf
into
ds
repnz
dec
fs
inc
aaa
das
pop
sbb
icebp
nop
fmul
push
movs
aam
mov
jge
push
retf
aaa
mov
inc
sub
retf
out
hlt
aaa
dec
mov
fs
call
jae
cmp
sbb
cld
or
inc
call
jae
sbb
sbb
jmp
or
push
fimul
outs
fld
cdq
in
aam
add
dec
movs
jp
das
adc
(bad)
test
fs
scas
in
inc
push
loopne
ja
jns
jecxz
jnp
push
dec
fst
jmp
xor
push
dec
mov
dec
sar
enter
test
imul
bound
and
mov
inc
mov
jmp
pop
mov
xor
js
cmp
pop
mov
lea
push
dec
loop
jb
daa
sub
stc
sub
mov
xchg
push
jg
loopne
sub
mov
and
pop
dec
fdiv
shl
or
fwait
test
or
std
hlt
cwde
data16
in
push
sar
shl
push
mov
aaa
repz
cmps
cwde
push
repz
dec
call
xchg
or
add
mov
test
mov
repnz
movs
mov
sub
pushw
and
dec
test
sub
pop
inc
xchg
lahf
js
jmp
sahf
bound
or
sbb
adc
jmp
loop
enter
inc
jmp
adc
mov
cld
daa
push
fcomi
inc
sbb
sbb
popa
mov
clc
(bad)
push
gs
retf
mov
or
xor
or
mov
bnd
stos
je
xchg
(bad)
mov
fxch
mov
ss
xor
sub
add
pop
lods
xchg
pop
mov
push
loope
fisubr
hlt
addr16
ret
sub
adc
clc
xor
out
adc
jnp
jg
movs
je
xor
(bad)
lahf
mov
and
into
inc
jecxz
mov
enter
push
dec
xlat
dec
pop
pop
sub
lds
xor
lds
icebp
pop
fst
xor
add
push
mov
xor
ret
pop
repnz
fistp
in
xchg
inc
xor
shl
mov
jmp
out
cmps
dec
add
pop
stos
dec
mov
jmp
inc
aam
cmp
mov
mov
lock
ds
stc
adc
dec
adc
jge
sbb
pop
mov
dec
test
or
ret
shl
mov
aam
push
jnp
ss
jp
jo
movs
mov
ficom
pop
ins
cmp
popa
shr
retf
lods
scas
sbb
push
outs
dec
sbb
cmp
out
hlt
dec
mov
dec
jmp
ret
cmp
and
mov
cmp
or
push
pop
cmp
xor
lods
in
jp
sub
fsubr
mov
and
scas
test
jge
dec
jp
call
sub
cmp
dec
ja
mov
addr16
test
sbb
repnz
fld
xor
xchg
addr16
in
addr16
pop
lds
cli
mov
fwait
loopne
lahf
xor
imul
cmp
icebp
stos
adc
jb
jne
ret
xchg
bound
aas
add
cmps
into
mov
push
hlt
mov
inc
lea
mov
jle
clc
bnd
or
in
repz
cwde
xor
cmp
adc
mov
lods
dec
iret
ret
fld
fstp
add
movs
fdiv
mov
jecxz
adc
lock
adc
int
or
popf
jle
sub
shl
icebp
xchg
sub
loop
mov
xor
jmp
or
das
lods
pop
popf
aam
das
inc
in
xchg
ja
or
push
stc
jp
add
daa
int
cmp
xchg
add
sbb
inc
dec
or
pop
xchg
bound
movs
call
and
inc
lahf
jnp
je
out
cli
mov
mov
adc
out
les
(bad)
cmc
sbb
out
jns
call
push
push
gs
daa
sbb
movs
pop
jl
test
iret
nop
test
mov
cwde
or
sbb
mov
push
aas
icebp
jbe
jecxz
(bad)
aas
nop
retf
scas
mov
xor
popf
and
cmps
cs
and
push
xor
mov
imul
ja
pop
jl
das
pop
icebp
sub
repz
mov
test
add
mov
xor
push
dec
stc
pop
call
cmp
stos
sub
jp
fdivr
mov
adc
or
mov
sub
bound
or
ja
outs
xor
out
bnd
xchg
neg
inc
leave
lds
and
stc
call
ja
xchg
hlt
sub
(bad)
rcl
ror
push
xchg
xor
dec
jge
or
push
xchg
cmps
sbb
pushf
leave
shl
inc
gs
dec
inc
fisttp
gs
ret
sbb
pop
ins
ins
shl
sub
imul
mov
loopne
cmp
adc
fisttp
mov
repz
(bad)
adc
mov
ret
jns
(bad)
or
adc
fwait
inc
mov
adc
mul
lea
call
imul
xchg
outs
hlt
mov
cmps
scas
or
jecxz
or
xchg
cmps
adc
mov
xor
cli
sbb
daa
inc
cmp
inc
pop
mov
out
cmp
push
cmp
fidiv
push
(bad)
xor
mov
or
pop
jp
inc
int
and
ret
or
cmp
jg
ret
adc
(bad)
ins
retf
ds
mov
mov
rcl
pop
loopne
push
mov
in
or
mov
add
mov
out
jg
fidivr
push
inc
pushf
out
jmp
or
pop
jmp
idiv
dec
inc
aam
sub
jmp
cmp
scas
into
gs
sbb
mov
sub
mov
sub
or
push
repnz
sbb
jle
(bad)
push
mov
in
push
push
xchg
mov
mov
dec
xchg
idiv
jge
test
adc
xlat
aad
movs
imul
icebp
retf
sbb
cs
int3
adc
sub
adc
push
test
int3
jmp
or
mov
adc
and
mov
int
test
addr16
retfw
repnz
clc
adc
dec
das
out
out
inc
xchg
cmp
push
push
mov
mov
sti
das
inc
cli
addr16
fild
inc
jg
ins
inc
in
(bad)
mov
dec
and
xchg
hlt
sbb
fldenv
jns
sahf
add
pop
sti
enter
jb
test
hlt
and
mov
jg
push
arpl
jl
loopne
or
ror
cmp
aad
xchg
mov
aam
in
jns
mov
sbb
jmp
or
test
out
ror
retf
mov
outs
dec
or
xchg
lods
sbb
imul
out
test
daa
cmp
lahf
les
out
fdivp
into
pop
in
aad
aas
inc
xor
nop
jnp
dec
xlat
nop
xor
pusha
jmp
xchg
push
and
loope
add
repnz
loope
lds
dec
rol
fidiv
lods
push
ret
shl
mov
or
test
mov
push
enter
xchg
daa
pop
imul
in
or
jge
sbb
scas
sbb
pop
cmp
inc
loope
inc
pop
or
cs
push
mov
test
mov
sub
sub
out
scas
push
or
jmp
pop
jmp
push
aas
lods
jno
adc
push
add
jecxz
arpl
test
jnp
mov
jmp
pop
sub
iret
pop
and
outs
mov
in
mov
cmps
mov
push
mov
and
adc
inc
or
jnp
mov
sub
mov
dec
add
push
jp
jl
or
inc
cwde
repnz
sbb
mov
cwde
inc
jbe
rcl
aam
scas
test
cmps
shl
push
mov
cmc
ffreep
mov
in
push
mov
pop
dec
sbb
retf
push
push
repz
mov
pop
inc
mov
cmp
in
pop
sub
mov
movs
xlat
fcmove
jo
retf
adc
add
loop
retf
jo
sub
xor
cmps
in
push
push
pop
call
scas
or
mov
pushf
pop
frstor
mov
xchg
addr16
std
cdq
lea
test
pop
sar
mov
cmp
cmp
cdq
inc
sbb
push
jmp
stc
adc
ret
mov
ja
inc
or
cmps
sub
aaa
mov
sub
push
rol
loope
repnz
mov
retf
test
punpckldq
enter
sbb
sbb
push
in
sar
pop
pop
call
sbb
cdq
popa
call
mov
xchg
loope
or
shl
jnp
push
jle
and
or
jns
movs
sub
lock
call
dec
jmp
add
ret
arpl
mov
iret
mov
repnz
lds
clc
popa
pop
xchg
and
mov
jle
and
aam
dec
push
xor
or
mov
jmp
xlat
(bad)
movs
xor
jmp
pop
or
xchg
add
cmp
movs
mov
dec
repz
jle
dec
xchg
popa
ins
mov
cld
imul
and
jle
mov
adc
cmp
pop
xchg
adc
enter
mov
shl
arpl
test
sub
xchg
or
and
xchg
push
xchg
and
ds
cmps
dec
sbb
in
bound
fwait
(bad)
std
jmp
jl
xchg
fsub
rol
mov
cmp
inc
out
mov
sub
pushf
inc
adc
mov
pushf
movs
and
int
mov
xor
jne
push
or
or
adc
mov
jae
stos
jg
ffree
aaa
inc
xchg
or
psubsw
fwait
xor
jl
fldcw
call
fld
pop
sahf
adc
aam
jmp
loop
fisub
push
jp
sbb
lds
retf
daa
adc
add
push
adc
jb
das
std
ret
rcl
add
(bad)
fisttp
ja
jo
or
xor
mov
hlt
fs
jmp
add
jbe
aam
jge
out
and
hlt
clc
mov
mov
xor
mov
fucomip
xchg
xchg
mov
adc
jmp
xor
loope
scas
das
mov
and
sbb
cld
test
test
mov
push
sbb
jb
mov
xchg
dec
xchg
add
popa
cwde
mov
ins
inc
xchg
dec
pop
jmp
pop
inc
sbb
shl
daa
fpatan
nop
aad
or
or
fsubr
out
ins
out
jmp
fcom
jmp
pop
imul
xchg
push
cmp
repz
pop
out
ds
dec
cmp
data16
push
dec
je
mov
fsub
or
(bad)
cmp
xchg
loope
inc
cmp
push
cmp
xchg
test
pop
pop
mov
inc
stos
call
aas
jmp
cmp
sub
mov
in
scas
sbb
push
stc
and
shl
fidivr
and
hlt
fld
push
sub
mov
ret
nop
adc
xchg
jmp
shl
ins
rcr
ret
mov
loope
push
in
not
in
inc
cdq
jb
inc
out
pop
lods
fs
outs
retf
(bad)
xchg
xchg
jmp
push
aam
ss
xlat
retf
inc
sbb
and
jmp
cmp
mov
jae
call
jnp
mov
cdq
sbb
mov
xlat
cmp
pop
fmul
addr16
jmp
pop
cmp
xcrypt-ofb
cmps
ins
sbb
movs
std
gs
and
adc
ins
repz
ret
adc
icebp
inc
push
xor
mov
lock
mov
lods
xchg
jp
add
(bad)
sbb
adc
xor
pop
es
xor
imul
std
or
add
mov
ins
std
fcomp
xor
in
sbb
adc
mov
xor
std
mov
mov
stc
shr
js
jge
push
sub
mov
cmp
pusha
fwait
or
mov
loop
daa
add
outs
or
and
jno
cmp
aam
xchg
push
sub
sub
pop
pop
pop
ret
repz
test
(bad)
mov
add
mov
adc
xchg
scas
aam
cmps
lods
pop
mov
and
(bad)
sbb
push
or
cmps
retf
popa
sbb
push
push
pop
mov
mov
mov
dec
jne
xchg
xor
sbb
xchg
pop
cmp
lock
sub
in
int3
(bad)
mov
movs
push
pop
mov
movs
lahf
loopne
adc
push
rol
test
push
popf
jmp
pop
mov
outs
int3
adc
push
test
(bad)
mov
aam
cmc
sbb
inc
mov
pop
mul
stos
push
sti
mov
mov
mov
int3
es
fdiv
(bad)
int
out
jecxz
mov
out
enter
in
(bad)
sbb
ja
push
int3
fisttp
outs
repnz
stos
dec
cli
lds
mov
jne
dec
inc
inc
push
stos
jns
or
xchg
mov
movs
cmp
mov
enter
adc
sar
or
(bad)
pop
or
inc
cmps
pand
lods
jmp
jmp
pop
inc
push
das
aam
push
xor
ds
imul
push
out
inc
dec
rol
js
and
push
lds
sub
push
out
mov
jne
push
imul
test
xlat
cmc
retf
mov
outs
nop
dec
and
pusha
aam
jns
xor
jmp
xor
cmp
or
xchg
hlt
mov
stos
push
loope
jnp
sti
dec
int3
test
stos
mov
push
pop
xor
cli
in
test
jae
dec
mov
dec
popa
inc
dec
cmp
ror
sbb
fisubr
push
push
adc
(bad)
pusha
dec
xchg
ud1
pop
dec
cmps
shr
jmp
mov
mov
in
repnz
das
mov
jmp
mov
pop
leave
mov
loope
and
out
(bad)
nop
popa
loopne
arpl
adc
stos
loope
mov
or
jecxz
mov
lock
mov
fsubr
xchg
xchg
xor
dec
(bad)
sbb
jmp
add
mov
mov
mov
retf
mov
push
add
sbb
popf
push
pop
(bad)
lock
stos
out
test
push
mov
int3
shr
sbb
test
retf
hlt
cmps
sbb
icebp
cwde
cmps
lods
or
cmps
out
sbb
inc
or
outs
hlt
(bad)
pop
jp
sub
mov
mov
loop
sbb
dec
mov
loop
sub
fbld
movs
xor
jne
pop
enter
xlat
test
pop
(bad)
call
out
mov
shl
call
arpl
pop
cmp
cmp
mov
xor
ror
pop
(bad)
cdq
pushf
scas
mov
aaa
fnsave
lods
rol
dec
lea
push
mov
cvtpi2ps
ret
sahf
sbb
clc
data16
xchg
jne
push
pop
lods
push
mov
loope
lods
(bad)
loopne
or
cmp
ficom
xor
add
cmp
sbb
addr16
aam
(bad)
xor
mov
and
push
fldcw
adc
repnz
push
xchg
and
pop
jecxz
repnz
fdiv
nop
adc
fcomp
xor
mov
in
mov
xchg
div
std
sub
imul
outs
lahf
jmp
aam
fld
outs
mov
in
sub
xor
out
inc
mov
adc
(bad)
fsubr
mov
xlat
cmp
xor
stc
je
cmps
and
les
arpl
gs
stos
xor
stos
test
xor
bound
call
jae
cld
test
pop
ds
or
pop
pop
bound
xchg
retf
outs
aad
xchg
ss
sub
push
shl
mov
dec
jae
cmp
aas
and
outs
mov
int3
mov
sbb
enter
jmp
cmp
cmp
(bad)
and
xlat
sar
retf
js
or
jae
mov
scas
jae
and
call
jle
pop
sar
dec
mov
call
cmc
das
(bad)
fidivr
pushf
stos
out
ds
jle
push
pop
fwait
(bad)
fcom
shr
test
(bad)
lock
mov
and
cdq
scas
addr16
enter
es
sub
hlt
and
push
call
gs
movs
mov
pop
movs
cmp
outs
mov
mov
lds
cmp
jl
mov
and
ret
push
dec
sbb
add
enter
imul
cli
inc
(bad)
mov
add
and
fwait
mov
jo
jnp
sbb
inc
mov
sub
or
jge
mov
test
pop
outs
push
mov
rol
xchg
test
inc
sub
add
inc
ficomp
enter
mov
add
call
sahf
(bad)
pushf
jo
xor
shr
xchg
fpatan
stos
pop
mov
pop
push
sbb
push
fcom
mov
cwde
jno
or
sbb
out
(bad)
push
xor
add
rcr
enter
in
daa
out
enter
jl
shr
std
and
stc
inc
data16
add
retf
add
retf
fsub
xor
lds
std
cdq
pop
xchg
mov
cmp
push
xchg
jmp
add
push
pop
xchg
dec
push
dec
fisubr
fidiv
jg
mov
inc
dec
(bad)
mov
ins
std
sbb
jo
retf
sub
outs
(bad)
cmps
xor
pop
xlat
jge
cmp
test
fcom
push
das
mov
xchg
(bad)
leave
sti
inc
inc
mov
pop
mov
paddusb
or
mov
jo
push
gs
scas
hlt
test
movs
in
push
stos
arpl
vandnps
push
(bad)
mov
mov
retf
imul
cmp
ss
sbb
adc
jae
ins
cmp
stos
out
pusha
dec
pop
ins
test
pop
push
retf
loop
cwde
jl
aaa
mov
repz
fild
add
xchg
call
in
jnp
jae
pushf
mov
sar
sub
xchg
mov
cld
aam
aam
push
cs
jecxz
lds
add
icebp
mov
mov
sub
ret
aas
push
adc
or
into
lods
push
int3
(bad)
cmps
cmp
pop
sbb
mov
dec
and
ret
ss
sub
imul
sub
(bad)
and
das
mov
push
pop
movs
fadd
xchg
push
mov
mov
push
push
jmp
pop
cmp
enter
xor
sbb
mov
lock
mov
pop
xor
push
lahf
mov
mov
cmp
popa
test
rcl
cmp
mov
xor
pushw
cmp
mov
jmp
push
(bad)
gs
mov
fwait
push
in
data16
and
scas
aad
mov
ud0
push
mov
adc
inc
movs
add
xor
mov
cmp
dec
leave
sub
cs
and
pop
adc
or
ja
xor
fmul
mov
jne
shl
and
lods
sub
ss
push
mov
scas
or
cs
ds
mov
mov
in
and
aas
cmp
jp
retf
adc
inc
xor
and
jnp
fs
jbe
push
push
pop
pop
int
mov
retf
inc
repnz
js
stc
movs
dec
stc
cs
inc
push
xor
mov
ficom
test
sbb
aaa
in
pop
out
mov
fbstp
dec
push
push
jmp
(bad)
stos
cmp
call
adc
cs
mov
mov
pushf
pop
sbb
clc
hlt
xchg
inc
inc
cmp
imul
cmp
pop
mov
(bad)
cli
sar
int
enter
push
inc
pop
push
ret
gs
inc
and
ja
jns
sbb
retf
sub
or
cdq
inc
xor
xlat
retf
das
das
mov
dec
jge
pop
aad
into
clc
fs
jecxz
jo
push
inc
inc
sbb
mov
add
push
pop
enter
mov
pushf
ins
into
dec
jecxz
out
das
or
pop
sbb
test
aam
xor
sub
pop
cdq
and
iret
mov
fwait
xchg
lds
xchg
xchg
jae
or
jo
inc
or
jbe
das
daa
cmps
jge
dec
dec
enter
pushf
shl
movs
ja
pop
mov
adc
xlat
and
test
rcl
adc
sub
test
sub
mov
mov
cwde
in
or
addr16
enter
sti
in
outs
jmp
mov
xchg
pop
xchg
pop
jno
xor
sbb
pop
fs
out
push
pop
mov
pop
jns
rcr
fwait
mov
ds
aas
int
les
lock
dec
push
fmul
cmp
pusha
mov
xchg
in
add
push
scas
std
ret
jmp
test
(bad)
hlt
xor
sbb
dec
mov
pop
push
pop
(bad)
pop
or
push
adc
cwde
fsub
mov
and
lock
lock
in
and
aad
dec
mov
not
mov
dec
xchg
lods
mov
ja
rcr
and
repz
mov
pop
mov
pop
mov
push
or
pop
jmp
sub
out
adc
sub
inc
ds
je
mov
mov
sbb
xchg
fwait
test
ror
push
sbb
icebp
test
jmp
jmp
loope
stc
faddp
js
mul
sbb
(bad)
loope
shr
outs
lods
jo
pushf
xchg
int
loope
outs
scas
xchg
mov
test
xchg
cmps
cld
scas
aaa
(bad)
jmp
dec
sub
cmp
mov
inc
pop
dec
pop
aad
mov
cli
sbb
xchg
inc
sbb
push
mov
push
fsubr
nop
add
gs
ds
aaa
xor
retf
mov
jb
popf
push
retf
mov
mov
iret
pop
ss
mov
mov
fiadd
and
fs
jno
mov
jge
enter
xor
sub
cli
and
inc
or
push
test
cld
cdq
cmp
ret
ret
iret
adc
pop
int3
bound
xchg
shl
retf
lods
add
mov
js
daa
popa
jmp
stc
clc
lahf
imul
adc
les
push
or
clc
cmp
pop
jge
xor
aaa
or
inc
(bad)
mov
popa
add
pop
std
mov
sar
bound
jge
mov
mov
jl
pop
cmp
icebp
xor
js
xchg
xchg
ret
add
mov
or
sub
jmp
bound
ret
bound
addr16
movs
dec
mov
pop
movs
shl
js
mov
int3
sahf
jae
test
xor
xchg
and
add
daa
sar
xchg
idiv
test
pop
adc
cmp
div
stc
jmp
out
sti
call
inc
push
movs
enter
call
push
jmp
mov
ret
inc
xchg
fnstenv
pop
fisub
dec
and
cmp
movs
enter
jbe
fistp
fcmovnu
fild
in
fisttp
(bad)
mov
cmp
cld
cmp
arpl
adc
mov
xchg
(bad)
icebp
out
xchg
lea
cmp
out
test
cld
das
and
lahf
mul
cld
sti
(bad)
aas
psllq
movs
out
mov
popw
pop
and
mov
jo
jmp
adc
mov
xor
mov
clc
ret
rcl
or
data16
call
cmps
movq
adc
lea
mov
std
test
add
jae
psubsb
pop
and
aaa
inc
lods
inc
cmp
sbb
aam
push
xchg
pop
mov
or
outs
jne
dec
sbb
mov
push
jae
add
idiv
jg
jo
jecxz
addr16
popf
cld
xor
popf
jbe
neg
enter
push
jbe
int3
shr
stc
adc
les
iret
sbb
shr
(bad)
pop
pop
xchg
dec
push
cmp
dec
(bad)
ja
cmp
xchg
add
sbb
leave
and
xor
sub
sub
inc
xchg
bound
lock
xchg
into
lock
mov
ret
popf
pop
in
sub
ffreep
cdq
pop
mov
imul
inc
fadd
jnp
movs
retf
(bad)
adc
pusha
call
pusha
fsub
mov
add
outs
adc
iret
stos
sbb
in
pop
xor
and
add
jg
shl
or
jb
bound
dec
enter
and
sar
mov
cmps
out
mov
scas
xchg
jnp
scas
dec
scas
mov
jae
ret
(bad)
ficomp
imul
movs
rol
adc
(bad)
clc
mov
int3
sub
cmps
jb
in
xchg
scas
outs
xchg
ja
add
xchg
call
inc
(bad)
dec
fwait
and
ss
shr
test
mov
fdivrp
cmc
(bad)
push
ret
bound
mov
clc
and
mov
sub
xlat
jmp
js
loop
stc
neg
adc
ror
ds
in
ret
cld
or
mov
xchg
xor
jbe
sbb
inc
lock
fiadd
ficom
xor
mov
stc
cmp
in
fadd
jns
push
nop
xlat
data16
rcl
push
push
xchg
pop
pop
rol
daa
xchg
fadd
popf
inc
leave
cwde
inc
aaa
in
sub
inc
ret
stos
mov
in
aad
iret
jnp
and
push
adc
pop
cmp
lock
mov
adc
and
jle
outs
idiv
pop
mov
ds
inc
bnd
mov
pop
cmp
jge
es
jo
mov
pop
dec
mov
cmp
popf
rcr
fcomip
add
in
xchg
fisttp
xchg
sub
call
or
adc
add
js
xchg
mov
mov
adc
test
fistp
sub
mov
mov
in
mov
xchg
push
movs
add
xchg
test
data16
mov
out
inc
fbstp
ret
(bad)
lahf
mov
cld
add
and
popa
into
sub
lods
pop
mov
adc
jbe
jb
sub
cmp
repnz
xchg
fnstenv
adc
cmps
xchg
push
cmp
cdq
ss
fstp
cmp
cmp
into
jp
enter
aas
xor
xchg
clc
loopne
clc
jge
imul
jae
or
add
push
push
xchg
mov
cli
jne
pop
and
mov
jb
mov
inc
pop
push
cmp
dec
mov
push
mov
xor
jb
arpl
arpl
cmp
xchg
icebp
jns
xchg
dec
hlt
bound
and
lods
add
mov
(bad)
mov
cmp
pop
pop
mov
pop
mov
sub
xchg
jle
movs
cdq
dec
mov
cmp
dec
hlt
leave
pop
mov
nop
loopne
and
or
into
mov
sbb
(bad)
ror
push
jl
inc
les
pop
jmp
popa
xor
(bad)
mov
cwde
aam
out
dec
push
mov
jge
js
and
int3
dec
mov
shl
push
dec
aam
sub
push
xor
data16
shl
jb
sahf
loop
mov
test
ins
adc
dec
or
xor
xor
in
push
movs
test
push
call
pop
sar
and
mov
xor
cli
shr
shl
xor
cmp
ds
dec
pop
sbb
xchg
into
sub
loope
cmp
fist
xchg
xchg
xor
(bad)
clc
dec
ds
mov
cmp
jl
adc
inc
dec
jl
mov
pop
(bad)
das
inc
out
mov
xchg
jle
mov
cmc
jb
ins
cmp
loop
test
test
test
sub
retf
jnp
call
xor
test
mov
cld
mov
fwait
cld
sub
pop
test
mov
rcr
sbb
(bad)
cld
cli
in
mov
pop
sbb
mov
dec
in
xchg
lods
mov
call
lahf
mov
jp
aaa
mov
dec
ret
mov
fidivr
call
mov
btc
je
mov
in
or
inc
push
dec
add
fwait
stos
xchg
in
pop
loop
shr
mul
clc
mov
out
pop
add
in
mov
push
push
mov
and
pop
arpl
mov
xchg
call
jo
lods
(bad)
ret
div
pop
scas
repz
sbb
add
test
mov
pop
push
test
repnz
lods
scas
lods
js
add
pop
adc
mov
(bad)
ins
fmul
mov
mov
jmp
lock
pop
jno
dec
cs
push
adc
xor
sub
jo
pop
imul
aam
jge
in
push
out
loop
and
add
nop
rcr
int3
push
shl
lock
cli
mov
popf
out
pop
xchg
mov
ds
ja
adc
ins
pop
shl
mov
push
mov
mov
hlt
out
pop
mov
fwait
das
movs
inc
and
dec
cmp
xor
adc
lds
pop
jo
pop
retf
scas
inc
sub
(bad)
rcr
js
repz
pop
sub
fucomi
or
dec
imul
imul
adc
inc
pop
mov
and
js
mov
jb
xchg
xchg
mov
xchg
popa
push
or
sbb
mov
jbe
sti
mov
cmps
(bad)
in
push
ret
jbe
cmp
fwait
cmp
pop
push
pusha
les
arpl
cmp
popf
outs
adc
push
dec
in
mov
addr16
inc
pop
cld
push
je
or
cmp
or
out
push
sbb
lock
(bad)
mov
daa
xchg
not
inc
jne
cdq
test
js
inc
xlat
jnp
lods
cli
xchg
jnp
mov
dec
ret
pop
push
push
outs
lock
or
and
mov
stos
dec
aam
out
cmp
xor
mov
das
fdiv
inc
mov
stos
inc
mov
mov
ja
movs
sub
lods
test
xchg
cmp
mov
cmp
mov
jmp
mov
out
xchg
fst
cmp
jbe
aad
int3
cmp
cmps
cli
push
or
cdq
(bad)
mov
imul
cli
ja
jmp
dec
mov
xor
sub
mov
mov
sbb
xchg
cmps
and
data16
inc
cmp
loopne
xor
loopne
inc
mov
inc
cmp
mov
loopne
fcom
pop
push
sub
mov
xchg
or
sub
inc
and
scas
sub
mov
lods
mov
pop
dec
cmps
add
inc
mov
and
dec
retf
push
lahf
add
mov
and
jne
std
inc
in
and
stos
daa
push
imul
les
xchg
je
pop
rcr
fwait
dec
jns
outs
jmp
mov
movs
lods
add
loop
xchg
movs
push
xchg
scas
mov
in
xchg
inc
push
test
inc
pop
iret
push
push
jno
push
or
popf
or
sub
add
mov
mov
xchg
shr
cld
into
inc
daa
gs
xor
hlt
add
jg
adc
call
pop
jl
repnz
mov
sahf
xor
dec
xchg
or
mov
outs
aad
daa
pop
imul
and
(bad)
shl
cwde
(bad)
jo
ins
push
std
movs
cmc
rcr
mov
test
shl
shr
loope
rol
adc
mov
inc
call
sbb
and
or
xchg
xchg
cmc
sbb
mov
mov
fld
jmp
jnp
out
adc
fstp
(bad)
mov
movs
ds
dec
cmp
scas
lods
retf
jg
or
adc
xchg
dec
fisubr
sbb
aam
jecxz
rcr
int
lods
mov
xlat
add
jmp
retf
xor
mov
push
sub
aas
(bad)
das
jmp
and
fwait
cmp
dec
xchg
mov
data16
pop
jbe
inc
aaa
mov
mov
lods
and
pop
in
aad
sub
shl
ja
mov
xlat
lds
popa
and
test
xchg
mov
push
out
sbb
or
add
adc
mov
sbb
retf
aaa
dec
push
outs
xor
cs
mov
adc
dec
push
jne
stos
push
nop
add
fmul
in
repnz
js
(bad)
adc
jl
pop
(bad)
in
std
lods
add
mov
(bad)
je
dec
sbb
enter
jge
retf
(bad)
div
out
test
jmp
es
adc
push
mov
pop
jp
xor
fwait
or
mov
data16
and
rcl
(bad)
(bad)
xor
retf
and
and
loope
ds
or
loop
ss
imul
das
mov
mov
xor
mov
retf
fild
cmp
test
mov
(bad)
and
call
sub
jae
inc
movs
mov
lods
jb
popf
test
pop
daa
test
or
imul
mov
sbb
shr
test
dec
pop
and
ins
inc
stc
ds
mov
and
xor
and
adc
out
mov
leave
pop
fwait
sbb
mov
ins
lods
jae
mov
lock
xchg
jmp
shr
mov
out
cmp
std
outs
imul
inc
mov
add
jmp
mov
xor
repnz
sahf
pusha
or
pop
mov
cwde
(bad)
pop
stos
ins
pop
sti
xchg
pop
scas
out
imul
daa
outs
sub
add
mov
icebp
push
mov
outs
sbb
sti
je
mov
xor
sbb
daa
cmp
dec
cdq
les
jecxz
cmps
inc
jge
icebp
sbb
jecxz
sbb
jmp
shl
icebp
sub
xor
sub
int
xor
pop
pusha
cwde
fsubr
into
out
imul
pusha
ins
sub
addr16
daa
fistp
pop
jne
mov
sbb
stos
leave
pop
lahf
inc
fist
mov
fdivr
adc
cmps
pop
and
pop
loop
push
imul
push
and
push
arpl
adc
mov
xor
cmp
push
aam
(bad)
jp
inc
jmp
jg
aaa
xadd
mov
sahf
icebp
clc
(bad)
jo
lods
cmp
sbb
and
jmp
xchg
fsubr
xor
pop
cmps
call
cmps
push
in
push
push
jmp
xchg
shl
or
(bad)
dec
adc
lock
das
inc
sahf
adc
shl
inc
mov
xchg
nop
icebp
arpl
or
sbb
mov
shr
jne
mov
mov
xchg
xlat
lahf
mov
push
clc
add
xchg
pop
out
mov
sub
sbb
repz
icebp
das
dec
mov
add
movs
div
enter
mov
dec
dec
stos
scas
leave
xor
fisubr
arpl
fistp
push
movq
pop
cwde
(bad)
dec
repnz
clc
push
ldmxcsr
push
data16
rol
dec
dec
push
mov
and
mov
dec
scas
push
jp
mov
pop
pop
mov
loope
movs
push
fidiv
dec
add
aas
cwde
dec
cmp
adc
add
push
dec
scas
mov
ret
movs
cmp
mov
aam
dec
fcom
mov
push
int3
in
mov
push
mov
or
pop
mov
in
adc
imul
mov
out
in
cwde
out
pop
leave
cmc
cmp
not
adc
push
popa
sbb
pop
out
sub
stc
sbb
pop
jg
inc
push
lods
sub
gs
inc
cmps
cmps
imul
mov
add
(bad)
cld
cmp
and
imul
pop
pusha
dec
inc
mov
mov
scas
shl
mov
sub
fwait
and
repnz
out
or
sub
mov
add
fidivr
inc
xchg
loope
data16
jne
push
fbstp
or
or
call
mov
mov
imul
rcl
sub
int
in
pop
pushf
sahf
mov
int3
sti
into
cmp
jp
cli
retf
push
nop
int3
frstor
test
shr
fwait
data16
outs
jle
inc
int
mov
mov
daa
stc
mov
fmulp
in
fistp
cdq
jecxz
jbe
fstp
retf
inc
xor
inc
dec
pop
test
xor
stos
lahf
lock
pushf
pop
std
pop
jmp
das
lds
dec
mov
imul
call
and
int
loopne
jne
add
or
stos
add
dec
cmp
je
pusha
aad
dec
mov
jmp
in
jle
add
in
xor
dec
pushf
mov
ds
div
xchg
xchg
gs
scas
retf
and
jns
movs
jns
jge
push
and
pop
jl
fdivr
xor
xchg
imul
cmps
cmp
push
pop
loop
nop
add
cmps
hlt
les
fwait
xchg
(bad)
add
mov
mov
inc
push
lods
pop
xor
mov
pop
not
jne
mov
jg
sub
test
fidivr
lds
xchg
je
clc
(bad)
dec
mov
scas
jp
scas
fs
jecxz
test
mov
jge
jo
pop
mov
mov
add
dec
(bad)
jns
sub
pop
sar
shld
imul
sbb
inc
dec
inc
jle
lods
cmps
arpl
xor
dec
rol
pop
fxch
add
dec
dec
mov
int
xchg
sbb
(bad)
dec
call
cmp
xor
dec
(bad)
out
jno
mov
push
dec
or
cmp
inc
pushf
test
retf
xor
mov
retf
test
ret
rol
pop
push
push
pop
call
fdiv
sbb
fst
fwait
cmc
mov
in
push
cs
cld
or
repnz
and
stos
ja
mov
data16
shl
aas
lahf
data16
mov
dec
std
inc
(bad)
test
pop
sub
call
dec
aad
push
das
fucom
xor
adc
cmps
push
lock
enter
pop
(bad)
mov
hlt
sub
cmp
sub
mov
sub
fbstp
mov
xchg
aad
xlat
repz
push
call
hlt
and
cli
cmps
sti
ret
push
and
addr16
arpl
lods
in
in
movs
out
cs
pop
add
test
xchg
mov
add
into
ret
add
sbb
inc
inc
shl
sbb
outs
retf
sti
ret
mov
push
fs
popa
scas
sbb
rcr
pop
in
aas
xchg
imul
popa
add
dec
call
scas
pop
lods
repnz
(bad)
mov
mov
xchg
push
es
lock
jb
cdq
outs
dec
test
inc
rol
ret
sub
cli
cmp
add
fild
das
add
fld
mov
cdq
dec
or
psubusb
and
add
fucompp
mov
jmp
mov
and
lods
add
push
mov
sbb
mov
aad
scas
or
inc
mov
pushf
enter
cs
mov
movs
loop
inc
mov
mov
mov
iret
ss
sub
in
fiadd
hlt
mov
fld
and
mov
(bad)
stc
and
jl
je
lock
mov
loope
mov
add
xor
dec
and
mov
and
pop
and
ret
add
mov
outs
call
add
inc
std
int
dec
lock
xchg
and
xor
ret
dec
mov
adc
imul
mov
inc
jnp
ja
std
pop
lea
jg
and
js
push
aaa
xchg
adc
mov
scas
mov
aam
cwde
test
icebp
scas
lock
out
dec
jl
dec
repnz
and
shl
sbb
fisttp
test
fcom
jge
or
xchg
aam
test
aaa
in
push
aas
fwait
mov
ins
das
adc
aaa
pop
outs
dec
(bad)
adc
mov
cli
push
sbb
or
lock
hlt
jge
mov
inc
lahf
sahf
pop
out
loopne
add
cwde
push
frndint
sbb
add
inc
in
xor
push
sahf
mov
aaa
imul
add
push
pop
enter
pop
lods
scas
adc
hlt
stos
jnp
jl
dec
pop
cs
cmc
jmp
dec
cdq
sbb
xchg
jns
mov
and
in
cli
xchg
adc
int3
pop
jle
push
mov
inc
lock
adc
mov
mov
sub
mov
adc
mov
mov
stos
push
daa
mov
aad
bound
imul
mov
push
add
dec
adc
push
cmp
ds
inc
fbstp
fwait
xor
xchg
push
lea
pop
sbb
sub
or
mov
adc
in
inc
inc
xchg
and
not
and
push
popf
lds
(bad)
icebp
inc
and
(bad)
nop
sar
jne
cld
fnstcw
dec
mov
into
pop
ret
sti
repz
jp
imul
pop
jae
cmp
shr
push
push
push
and
inc
push
and
dec
mov
cli
ret
inc
pop
sub
fsubr
hlt
or
dec
mov
and
cmc
lods
popf
jno
imul
aaa
sbb
daa
sbb
push
dec
lahf
and
cmp
enter
repnz
not
push
rcr
jno
test
mov
jmp
loopne
mov
lahf
cmp
or
jge
aaa
and
cli
inc
stos
ja
imul
(bad)
pushf
push
and
or
pop
fidiv
add
jmp
out
outs
cld
je
mov
xchg
pop
outs
pop
jb
sub
ret
in
addr16
jmp
into
sub
inc
repz
xchg
mov
xchg
sbb
(bad)
and
jp
sub
and
ins
pop
lods
out
pop
mov
pop
fisttp
jnp
loop
jl
jnp
fwait
ret
xchg
mov
repz
into
(bad)
das
cmc
cmp
xor
das
sbb
or
aam
adc
repnz
lahf
sbb
pop
lahf
ins
and
lea
mov
imul
inc
push
or
daa
add
cdq
mov
add
ds
push
mov
mov
imul
mov
mov
stos
iret
xor
inc
pusha
or
mov
data16
dec
mov
sbb
or
cmps
or
push
gs
dec
push
rol
xor
daa
xchg
mov
xchg
loopne
add
sahf
fist
adc
fs
sbb
xchg
adc
out
popa
cmp
xchg
xchg
scas
adc
out
pusha
call
and
mov
outs
gs
fs
fld
mov
(bad)
std
gs
mov
jnp
mov
push
xchg
mov
xchg
add
out
cli
pop
jns
cmp
mov
outs
push
push
dec
fwait
cmps
dec
pop
sti
(bad)
push
fadd
or
daa
pop
push
jbe
bound
add
lds
push
popf
test
adc
jbe
inc
ins
cli
ret
daa
sub
sub
xchg
or
scas
cmp
movs
jle
xchg
test
inc
cmp
add
test
mov
push
sub
aas
xor
inc
jns
dec
inc
jne
or
dec
clc
out
jne
and
jecxz
cmps
mov
inc
push
dec
mov
inc
mov
in
dec
dec
pop
push
fsub
retf
cmp
dec
mov
mov
(bad)
jmp
fistp
stc
into
push
out
shl
jmp
xor
adc
ret
rol
jp
mov
mov
cmove
and
repz
mov
outs
jae
sub
jnp
(bad)
enter
stos
add
iret
lahf
sub
cmp
adc
jmp
push
jbe
pop
sbb
pop
popa
and
adc
inc
sub
push
mov
inc
pop
popf
mov
mov
scas
je
inc
pop
push
mov
mov
pop
inc
jmp
add
cmp
dec
and
push
add
jmp
or
xchg
pop
pop
daa
rcl
fcomp
movs
lods
inc
test
ss
lods
lds
sbb
inc
mov
imul
retf
call
sub
ins
add
lea
test
mov
xchg
mov
aad
fwait
lahf
fwait
dec
enter
ror
xor
aad
icebp
aad
and
ret
cmps
jp
inc
mov
shl
jmp
sbb
sahf
imul
or
jle
aam
bnd
mov
pop
lock
int3
out
rcr
cmc
pop
outs
in
jns
cmps
fisttp
xchg
rol
xor
icebp
xlat
add
ins
dec
rcl
outs
push
inc
mov
adc
mov
fmul
out
imul
ins
xchg
adc
cmp
jb
aas
push
adc
jmp
cmp
mov
mov
stos
stos
xchg
adc
stos
imul
std
sbb
mov
cli
frstor
loop
or
cli
cmp
cmp
int3
jne
test
inc
fs
and
test
pop
inc
test
stc
jbe
push
cmp
xor
into
mov
lods
sbb
sub
cs
(bad)
scas
mov
adc
aad
ins
inc
sub
mov
mov
inc
xchg
shl
int3
inc
mov
out
xor
xchg
jb
push
movs
jp
mov
out
xor
retf
mov
dec
jno
dec
jo
cmp
rcl
sub
lds
std
cmp
push
mov
aaa
jno
fs
into
mov
loope
inc
mov
cs
je
daa
fnstenv
jmp
adc
dec
sbb
rcr
inc
inc
push
dec
jmp
aaa
cs
mov
sahf
call
bound
cdq
and
adc
and
xchg
inc
cmp
add
dec
or
pop
test
stos
call
nop
add
into
loope
dec
push
mov
stos
ins
sti
add
shl
mov
xchg
mov
jns
fdivr
retf
aaa
mov
jb
jnp
sar
adc
sub
mov
daa
jg
add
in
push
inc
mov
adc
mov
fld
scas
fidivr
mov
lock
mov
mov
ffree
test
jle
adc
dec
sbb
ret
nop
fwait
and
(bad)
cmp
icebp
outs
jo
daa
scas
dec
jno
push
outs
int
xchg
fdiv
mov
xchg
fwait
pop
mov
xchg
je
and
mov
ret
ja
(bad)
mov
xchg
pop
cmp
loop
sbb
popf
jge
test
sub
stos
pop
arpl
mov
dec
adc
ds
mul
dec
xchg
fucomp
adc
xchg
rcr
out
sub
mov
sbb
and
cmps
jno
ja
jmp
dec
mov
sbb
outs
or
pop
fsubr
push
xlat
mov
jecxz
mov
xchg
xlat
loop
popa
mov
jge
jge
xor
dec
out
xlat
xor
fcom
push
jl
or
mov
(bad)
repnz
outs
ins
pop
fnstsw
jns
fsub
(bad)
cmp
pop
pop
add
sbb
retf
push
push
enter
dec
xchg
cdq
push
or
test
pop
jb
xchg
push
mov
mov
mov
jb
cmps
lock
add
inc
ins
sbb
mov
xor
lock
out
adc
in
sbb
or
and
loopne
xchg
push
retf
xor
and
cli
jge
add
retf
rol
jle
adc
sbb
jae
leave
pop
loope
inc
add
ja
(bad)
add
jae
cmp
pop
and
ins
add
inc
int
jmp
mov
cld
mov
dec
dec
and
cmp
jne
jmp
inc
sti
xchg
rol
mov
inc
jl
jb
stos
adc
mov
or
aaa
jno
daa
pop
push
pop
(bad)
fisttp
nop
repnz
lea
jl
sub
pop
xor
dec
rcl
push
test
fist
into
retf
fdivr
pop
and
xor
fs
daa
pop
dec
test
push
xchg
add
mov
dec
int3
push
mov
jae
push
repz
mov
ret
dec
push
shr
rcl
add
cs
push
fldenv
sar
mov
outs
add
mov
inc
fwait
inc
clc
ja
sub
mov
popa
es
dec
pop
sub
jge
and
inc
cdq
adc
xchg
mov
arpl
addr16
mov
jle
xor
call
xchg
mov
xchg
cli
mov
das
add
jle
sti
and
jno
push
aas
cli
out
xchg
xor
aad
and
mov
jge
xor
push
mov
fbstp
shl
sar
dec
ss
bound
cmc
jno
jbe
out
and
pop
push
cli
pop
jno
dec
in
ret
shr
xor
imul
mov
hlt
inc
pop
mov
dec
mov
imul
sub
ja
call
int3
sub
in
add
aas
sub
xchg
sahf
loopne
inc
push
pextrw
mov
pop
es
or
repnz
xchg
cmp
jb
ds
inc
sub
lds
push
jno
sbb
movs
or
push
sar
popf
lock
or
pop
add
or
retf
or
int
daa
sub
xchg
adc
ss
ret
pop
and
(bad)
test
ret
in
test
fcomip
xchg
jbe
icebp
or
pushf
pop
sbb
test
push
pop
fwait
sub
add
(bad)
outs
test
jmp
mov
rcr
sub
mov
add
pop
lds
idiv
jmp
ret
push
ret
lea
fisub
mov
cmps
xor
mov
stc
fs
sub
pushf
in
movs
stos
lahf
fs
cmp
cmc
xlat
xchg
dec
push
aaa
cmp
sub
xor
xor
ins
into
jmp
add
outs
(bad)
int3
mov
xchg
ss
outs
mov
sti
ror
outs
jae
jmp
test
add
push
add
js
popa
fwait
jecxz
loopne
inc
jmp
je
aad
push
add
xor
pop
dec
or
enter
arpl
mov
pop
pushf
and
mov
inc
cmp
sahf
mov
mov
icebp
jo
mov
jmp
cmp
push
daa
sub
mov
add
xor
popaw
je
imul
xchg
fld
push
outs
pop
ins
jmp
add
or
inc
dec
(bad)
(bad)
or
mov
mov
sbb
ret
mov
fwait
inc
pop
mov
aam
and
mov
mov
jne
lea
loope
sub
sbb
clc
jae
inc
sub
mov
fadd
jnp
push
pushf
lods
dec
xor
les
sub
aad
sbb
inc
cdq
popf
popf
cmps
jns
xchg
inc
mov
out
retf
test
cmp
fiadd
mov
mov
in
adc
in
dec
sbb
and
scas
ror
xor
inc
test
outs
aaa
cmp
add
push
jg
arpl
icebp
pop
les
xor
pop
jmp
lahf
(bad)
not
sbb
adc
add
xor
pop
inc
mov
jl
pop
jl
adc
add
pop
test
add
or
lea
push
xchg
imul
hlt
ret
xchg
mov
xlat
fs
stos
xchg
jbe
dec
dec
rcr
inc
enter
pop
pop
inc
push
pop
mov
ins
add
outs
sub
sub
sti
imul
jmp
(bad)
dec
shl
sbb
dec
frstor
cmc
movs
and
jp
push
jne
idiv
rcl
xchg
pop
je
enter
push
and
scas
or
pusha
push
mov
xor
push
cwde
push
pop
add
xchg
bound
jo
bound
jb
add
push
dec
hlt
aam
inc
jno
and
ret
js
aam
pop
outs
cmc
dec
js
jmp
sbb
xor
cli
add
cmp
add
sbb
pop
mov
int3
fs
fsubr
rol
call
pop
push
leave
inc
xor
add
sub
in
jmp
sub
xchg
xor
popf
(bad)
jecxz
jle
shl
push
in
fsub
xchg
int
idiv
dec
sbb
ret
sub
add
sub
xor
xchg
add
mov
repz
sbb
cld
jle
outs
nop
push
or
call
jno
xor
out
and
adc
sbb
aam
xor
(bad)
mov
(bad)
sub
loope
dec
adc
mov
adc
pop
lods
js
in
inc
push
hlt
sbb
pop
sbb
in
outs
mov
pop
mov
add
adc
or
mov
sbb
fs
js
mov
inc
enter
imul
aaa
mov
fild
hlt
loope
(bad)
popf
clc
mul
movs
sbb
ret
vpmulhw
shl
mov
inc
imul
cmp
icebp
and
ss
push
stc
(bad)
mov
mov
jge
out
add
jmp
dec
sbb
or
(bad)
in
mov
jl
je
out
outs
repnz
mov
adc
popa
jns
jnp
not
xor
adc
cmp
imul
test
into
adc
sbb
sbb
sbb
push
in
xor
fs
inc
adc
(bad)
xor
jnp
sbb
jge
sbb
sar
inc
aaa
mov
push
cmp
adc
or
inc
sti
jmp
shl
fwait
inc
sub
(bad)
cmp
cmp
jp
aam
inc
movs
ins
fs
xor
mov
js
cmp
push
jge
sbb
push
xchg
imul
shr
inc
mov
cs
in
pop
inc
inc
popa
out
lock
mov
cmp
test
(bad)
call
ja
rol
adc
mov
xchg
lods
cli
daa
xlat
and
push
loope
out
int
sub
mov
rcr
iret
clc
pop
and
cmp
stos
icebp
adc
es
and
(bad)
adc
push
fist
ret
les
(bad)
or
retf
stos
push
jge
pop
int3
js
imul
mov
int
add
mov
mov
xlat
mov
dec
push
std
pop
push
push
aad
mov
xor
push
sahf
dec
adc
ret
daa
test
mov
(bad)
(bad)
cld
mov
jo
shl
mov
pushf
addr16
ret
mov
lods
pop
add
xor
jnp
mov
sbb
sbb
sub
cld
pop
mov
pop
retf
xlat
sbb
pop
ins
cmp
in
fs
test
jmp
jb
mov
jmp
icebp
jle
jg
add
mov
lds
and
fdiv
xchg
lods
sub
or
adc
pop
and
sbb
in
call
stc
jo
xor
pop
es
push
lods
in
push
test
inc
(bad)
faddp
movs
push
cmp
mov
loop
clc
icebp
mov
cmps
jmp
lds
jo
test
xor
repnz
iret
sub
inc
mov
cmps
out
cdq
sbb
dec
xchg
daa
add
icebp
mov
int
xchg
movs
sbb
xchg
mov
sbb
mov
cdq
ret
pop
pop
mov
sub
mov
call
push
ret
cmp
scas
ja
sar
ins
cmp
jb
fist
push
mov
(bad)
hlt
push
mov
add
jno
xor
mul
cmp
stos
mov
out
dec
fcomp
mov
daa
mov
add
in
test
inc
aaa
call
shr
fdiv
in
sub
push
cs
out
mov
call
mov
fcomp
dec
dec
mov
mov
mov
pop
popf
in
out
push
xor
push
in
fst
push
xor
jo
xchg
pop
retf
mov
inc
es
adc
daa
fsubrp
shl
ja
push
aad
popf
ja
dec
push
jl
loopne
arpl
jecxz
adc
mov
addr16
jnp
jecxz
scas
xor
add
pop
sbb
cmp
mov
stc
inc
push
mov
adc
inc
xor
push
lds
and
xchg
adc
and
in
sbb
cmp
mov
sbb
sub
jbe
loopne
scas
mov
or
rol
test
fdiv
push
loopne
xor
pop
jmp
arpl
xchg
icebp
cmps
pop
out
neg
dec
sub
into
adc
add
adc
mov
push
dec
mov
pop
mov
mov
out
inc
push
and
pop
ret
lock
retf
sbb
jmp
scas
in
dec
push
sti
pusha
pop
out
jns
add
test
daa
push
in
idiv
fcom
jl
cmps
mov
ss
xor
lahf
sbb
and
fisttp
mov
mov
jmp
xor
loope
or
nop
loope
inc
aas
dec
cmp
mov
jb
imul
mov
and
mov
stc
in
xchg
adc
stos
scas
out
ins
mov
outs
gs
lds
or
dec
sbb
dec
lods
inc
inc
cmp
and
push
add
pop
pop
xchg
cmp
cmps
jmp
loope
lods
mov
or
das
xchg
jae
pop
imul
ja
dec
jg
mov
xchg
jbe
cmp
dec
jmp
stc
imul
jecxz
mov
mov
stos
mov
mov
sub
mov
xlat
cmp
rcr
cmp
lahf
sbb
in
add
dec
pop
fcmovb
cmp
jnp
loopne
push
in
and
and
or
add
cmc
lods
or
test
add
scas
lods
rcr
dec
pop
cwde
inc
cmp
mov
ror
inc
pusha
sahf
add
pop
jno
or
retf
mov
hlt
retf
fcom
mov
push
test
pop
and
cmp
mov
mov
gs
sub
xchg
and
fldenv
jg
nop
dec
int
sbb
cmp
push
in
push
mov
adc
dec
sbb
xor
shr
xchg
into
test
mov
cdq
mov
mov
outs
adc
hlt
dec
push
jne
in
jno
shl
(bad)
shl
jmp
je
repz
sub
lea
fadd
sbb
jmp
not
push
cmps
sub
ins
xchg
xchg
dec
std
pop
or
jecxz
mov
inc
sub
les
ins
rcl
out
jmp
(bad)
stos
call
or
cmp
jecxz
repnz
ror
out
(bad)
out
mov
jl
arpl
test
std
stos
adc
pop
xor
inc
or
addr16
xor
movs
ret
ror
sub
mov
sar
xchg
adc
lods
cmp
mov
push
jle
push
imul
loope
rol
mov
popa
idiv
dec
and
or
dec
mov
add
rcr
into
test
out
mov
into
repnz
sbb
jmp
push
sbb
cmps
sbb
fwait
out
adc
in
es
jmp
test
movs
pop
fisub
xor
cdq
ret
ja
cmp
jne
add
cmp
gs
pop
leave
popa
adc
js
jl
iret
(bad)
xchg
aas
out
jg
leave
pop
mov
inc
js
sbb
test
mov
call
sub
movs
sbb
add
and
jmp
mov
mov
cli
addr16
adc
xchg
std
sub
das
xchg
out
out
dec
lods
adc
gs
jbe
scas
adc
cmp
ins
aaa
in
mov
in
test
test
mov
cli
mov
inc
out
rcr
pop
test
jb
retf
jecxz
mov
rcr
inc
add
pop
pop
mov
xchg
jecxz
pop
pop
xchg
in
mov
iret
das
pop
enter
ja
sbb
mov
test
sub
outs
fbstp
sbb
inc
adc
dec
add
and
mov
pop
(bad)
inc
out
and
(bad)
fist
adc
adc
dec
fisttp
add
jmp
mov
pop
adc
cmp
pop
shl
adc
mov
xor
popa
jns
daa
shl
and
jle
aam
fild
std
push
imul
pop
shl
mov
arpl
add
sub
pop
push
push
cmp
xor
push
jecxz
nop
sbb
sbb
jne
xlat
loopne
ins
adc
add
test
pop
lea
mov
jge
data16
or
pop
shl
retf
sbb
scas
daa
sbb
icebp
inc
push
push
ss
jmp
mov
les
mov
rol
les
lds
fld
int
mov
xchg
loopne
iret
push
mov
loope
jbe
and
retw
test
sub
scas
pusha
and
test
iret
xchg
ss
adc
mov
stos
cmp
int
imul
shl
pop
outs
push
cmp
cli
ffreep
dec
pop
xchg
fcomp
and
popa
fs
jge
mov
mov
ret
sbb
pop
scas
retf
fldenv
loope
add
cmp
ret
data16
lock
pop
retf
(bad)
lods
pop
sub
ror
addr16
lds
call
jmp
mov
push
or
cmc
mov
mov
jae
adc
leave
cmp
mov
das
daa
out
aad
jnp
pop
xchg
pop
mov
scas
pop
cmp
mov
xchg
or
mov
std
adc
mov
rcr
mov
jbe
xor
in
fwait
aas
or
push
pop
in
and
call
cdq
(bad)
adc
outs
js
mov
ins
or
jle
loop
(bad)
into
pop
scas
stos
mov
ss
gs
mov
sub
or
fwait
and
sar
add
and
jns
jns
call
bound
(bad)
push
add
dec
call
in
fsubp
aad
xor
repz
xchg
and
dec
adc
pop
outs
int
dec
xor
gs
in
shl
mov
inc
inc
jge
call
iret
or
and
and
cmp
repnz
add
xchg
leave
adc
adc
add
jne
mov
and
and
mov
adc
(bad)
jbe
cmps
push
mov
icebp
xchg
xchg
inc
adc
bound
cmps
ds
es
repnz
xor
and
sub
jge
fs
xor
pop
je
outs
retf
push
pop
sbb
add
loop
fld
jge
xchg
inc
jecxz
retf
test
mov
sub
and
test
and
(bad)
frstor
faddp
dec
shr
and
call
lods
sbb
retf
jb
xor
inc
adc
loop
cmps
sbb
push
dec
xchg
xor
stos
jno
mov
pushf
mov
dec
push
mov
push
mov
and
push
xchg
or
xchg
je
xchg
in
out
pop
and
xor
xchg
fs
dec
arpl
push
push
xlat
adc
daa
test
repnz
jo
movs
jg
pop
cmp
sbb
stos
mov
cmp
imul
lds
pop
pop
and
cs
leave
jo
jmp
outs
mov
in
mov
maskmovq
mul
mov
enter
cmps
adc
jge
jo
bound
js
adc
add
inc
sbb
aaa
cwde
(bad)
or
call
pop
inc
loopne
addr16
xor
xchg
(bad)
js
daa
cli
pop
mov
jo
inc
adc
jns
jne
cmp
fsub
imul
jo
ds
fwait
mov
into
sub
inc
addr16
in
sbb
mov
popa
clc
and
cdq
imul
or
push
push
mov
call
ins
int
int3
or
stc
out
in
scas
cmp
in
lock
adc
mov
inc
shl
push
leave
retf
sub
and
mov
and
dec
xor
xchg
cwde
mov
pop
ins
dec
pop
push
ret
jl
sahf
sub
ds
jp
mov
fwait
jle
retf
(bad)
daa
cmps
xchg
and
lods
inc
jo
ins
mov
xor
xchg
mov
cs
add
pop
mov
sbb
sbb
call
dec
mov
push
mov
mov
lock
arpl
in
pusha
cmp
lods
pop
js
cmps
lods
jns
mov
shl
repz
out
gs
add
mov
xchg
loop
imul
in
xor
clc
inc
pushf
movs
mov
out
push
mov
es
xor
int
pop
xor
cld
retf
outs
pop
inc
adc
outs
cmp
jl
push
push
ror
mov
dec
(bad)
push
pop
cmp
pop
and
das
outs
dec
dec
arpl
push
movs
aas
pusha
xchg
stc
bound
pop
call
mov
xchg
xchg
push
jl
sbb
xchg
xchg
jecxz
cmp
aad
test
js
mov
mov
hlt
(bad)
loop
push
(bad)
shr
sub
pop
out
xor
jmp
jecxz
(bad)
jle
sub
retf
(bad)
mov
mov
mov
adc
mov
pop
ds
sbb
sbb
mov
enter
mov
cwde
jecxz
xchg
xor
inc
or
mov
or
outs
retf
clc
cwde
std
xchg
and
mov
movs
mov
push
pop
lahf
mov
mov
push
dec
ins
in
jne
jno
test
aaa
mov
adc
icebp
mov
pushf
jmp
push
es
cli
stc
cmp
lods
dec
push
shl
inc
sbb
ror
sub
pop
pop
dec
or
hlt
repnz
push
aad
sbb
add
ret
cmp
pop
lea
cmps
stc
cdq
inc
jl
test
mov
cmps
mov
hlt
ins
jns
fiadd
jns
pop
pushf
ja
and
xor
push
data16
sar
fisttp
(bad)
stc
cdq
pop
push
dec
jecxz
mov
xor
nop
fild
add
aas
mov
(bad)
aam
add
mov
fiadd
inc
mov
lods
stos
xchg
dec
(bad)
xor
sti
test
push
inc
inc
jae
lock
inc
push
push
mov
vmwrite
outs
sbb
data16
hlt
test
pop
mov
xor
std
(bad)
shl
out
clc
jb
pushf
sar
push
int3
sbb
adc
pop
stos
scas
pusha
fidivr
pushf
push
push
int
mov
mov
push
add
arpl
sahf
retf
stos
in
ds
in
into
push
mov
pop
test
int
mov
push
jg
inc
jmp
mov
imul
mov
clc
lahf
cwde
xlat
and
cmps
fnstsw
inc
pop
sbb
ficom
cwde
(bad)
hlt
mov
addr16
lods
sbb
add
adc
jmp
fwait
ja
loope
add
(bad)
out
jo
jge
pop
lods
lahf
imul
je
(bad)
pop
hlt
ins
inc
fs
xor
pop
sbb
hlt
out
push
ja
adc
mov
push
push
jmp
mov
pop
outs
stos
fwait
jnp
pop
jg
repz
or
div
jno
sub
and
(bad)
mov
pop
sbb
sbb
inc
and
movs
adc
call
inc
sbb
stos
add
or
mov
mov
leave
add
add
mov
mov
sbb
jle
clc
pop
or
cmp
push
(bad)
sub
pop
test
and
stos
repnz
mov
fs
adc
mov
repz
pop
std
rcr
jmp
test
cmp
mov
mov
push
ret
mov
aas
mov
es
dec
cmp
jmp
mov
xchg
dec
inc
add
stos
mov
sbb
in
sub
(bad)
clc
xchg
cli
mov
ins
adc
aas
(bad)
rcr
out
js
mov
cld
xor
mov
scas
push
(bad)
adc
cmc
jmp
lahf
js
jl
xchg
daa
arpl
stos
arpl
jb
sbb
mov
inc
fwait
cmp
loopne
jmp
into
inc
sub
or
das
pop
pop
jl
pusha
fs
xor
dec
ds
push
ins
xchg
mov
push
pop
aad
xchg
jno
jno
mov
aaa
push
cmp
mov
pop
sbb
or
arpl
push
adc
xchg
lahf
mov
div
loop
jg
or
ja
movs
push
and
outs
or
ret
movs
dec
mov
mov
xor
cmp
xchg
mov
shld
movs
jb
lahf
retf
lods
clc
call
clc
leave
jl
ret
cmp
test
test
mov
sbb
push
cmp
dec
sbb
mov
sub
popa
push
rcr
cmp
ins
adc
mov
push
push
js
adc
mov
sbb
call
sub
jnp
jp
push
pop
sub
push
or
push
and
mov
test
ins
jno
aad
popf
cmc
and
mov
or
adc
xchg
pop
ret
adc
dec
stos
icebp
adc
adc
outs
sbb
mov
adc
sub
and
mov
xchg
loopne
(bad)
int
mov
sar
fwait
sbb
repnz
jae
aas
add
out
ds
cmps
push
cmp
jae
add
loopne
or
loopne
add
test
and
mov
aaa
mov
sbb
std
cmp
push
push
push
jbe
das
push
jmp
and
add
and
cmp
adc
test
mov
inc
dec
into
aam
ret
sbb
push
and
imul
mov
pop
or
test
std
cmp
(bad)
jnp
data16
mov
dec
clc
pop
(bad)
lahf
inc
pop
int3
fcomip
mov
sbb
jge
cmovg
pop
cli
ret
out
movs
cmc
fninit
call
mov
clc
jle
xchg
std
mov
or
rol
xlat
clc
xchg
pop
loop
push
jae
jb
inc
popa
movs
out
sbb
test
cmc
dec
push
pop
lds
cmp
sbb
cmp
ins
jmp
jg
loopne
add
add
xor
or
scas
movs
mov
icebp
push
xor
and
lods
jecxz
(bad)
cmps
cs
inc
call
dec
int
and
lods
cmps
popf
jnp
ror
fisubr
xor
sti
jmp
loopne
nop
test
scas
mov
(bad)
sub
jae
into
inc
xchg
(bad)
dec
mov
jge
jl
lods
push
mov
int
lods
es
mov
jecxz
inc
out
inc
jg
ror
adc
cmps
mov
pop
xor
pop
sahf
into
mov
stos
dec
sub
cwde
lods
lahf
(bad)
neg
in
loope
bound
add
les
sbb
mov
dec
pop
add
shl
pop
lahf
mul
inc
(bad)
(bad)
sbb
cmc
pop
pop
adc
cmp
fdivr
mov
ja
imul
loope
push
xor
sbb
outs
inc
fs
ret
jnp
dec
mov
dec
jnp
test
pop
add
ss
es
add
das
push
lods
pop
push
push
cld
jo
push
mov
(bad)
adc
and
(bad)
out
sti
push
(bad)
sbb
int
cmp
push
mov
neg
mov
bnd
lods
jo
out
sbb
lds
sbb
xor
cmp
(bad)
lods
pusha
push
fnstsw
or
lds
loop
or
push
jg
sub
stos
repz
mov
sbb
jae
xchg
xor
loope
ins
shl
(bad)
sub
jmp
cmp
out
jg
imul
stos
or
sbb
add
(bad)
cmp
test
rcr
dec
rol
scas
aam
enter
dec
sbb
xor
cmp
ins
xchg
repz
jmp
int3
loopne
ds
xor
shl
mov
mov
arpl
daa
fmul
sub
cdq
mov
fs
popa
add
in
and
cwde
mov
fnsave
sbb
jbe
(bad)
cdq
ret
into
push
xchg
and
clc
jmp
adc
aam
mov
dec
xor
or
stos
sub
mov
mov
cmp
cwde
(bad)
mov
add
jecxz
popf
jns
push
or
cmp
js
dec
mov
icebp
xor
ficomp
js
in
adc
das
jbe
nop
cmc
pop
aas
add
jne
mov
jg
lock
out
dec
nop
fidiv
std
xor
loope
into
push
nop
sbb
xchg
jns
addr16
add
rcr
xchg
xchg
je
bound
jmp
inc
cmc
jl
cld
das
repnz
sub
mov
jmp
call
retf
mov
fmul
loope
fild
sbb
ror
test
jno
jno
cli
ret
or
out
fiadd
cld
dec
cmp
leave
movs
cwde
pop
dec
sub
ins
gs
call
xchg
xchg
cwde
jl
xor
jg
js
popf
aas
cwde
push
xchg
icebp
loope
idiv
fadd
xlat
sub
push
dec
sbb
mov
push
ss
xchg
sub
jo
and
cmp
(bad)
ins
ficom
daa
mov
push
or
ss
push
push
cmp
mov
sub
adc
retf
xchg
fld
std
mov
sbb
imul
pop
ds
imul
mov
je
mov
hlt
xor
mov
cmp
(bad)
adc
mov
jb
cli
inc
mov
dec
test
test
pusha
mov
pop
test
lock
sbb
es
shl
imul
lea
fisttp
sub
xor
dec
enter
jmp
xchg
or
imul
xchg
aad
popf
imul
xor
call
pusha
and
popa
cmc
retf
loope
inc
sub
movs
mov
call
(bad)
into
dec
push
lea
dec
imul
pop
push
sar
mov
xchg
ins
push
out
add
pmaddwd
clc
and
mov
mov
push
fadd
mov
out
mov
pop
test
pop
xor
jl
cmc
iret
ins
push
nop
inc
cmp
ins
fsubr
cs
test
jns
das
jge
in
xchg
add
push
and
jne
pop
cli
inc
ret
lea
push
adc
dec
rcl
dec
aad
jae
shl
(bad)
out
js
or
xchg
pop
sub
test
daa
mov
lahf
xor
mov
fisub
sub
pushf
jmp
shr
popf
or
jo
or
pop
mov
push
sub
movs
out
je
cmps
je
jecxz
aam
mov
dec
sti
cmp
dec
fwait
mov
adc
push
sar
mov
aas
xchg
pop
mov
adc
push
jns
mov
lods
jge
cmps
jecxz
out
stos
mov
into
adc
push
cmp
fcomp
movs
fst
je
int
cmp
push
mov
xor
dec
test
adc
adc
hlt
dec
(bad)
in
mov
or
add
mul
cdq
pop
jg
pop
push
mov
or
push
and
sbb
xor
xchg
inc
cmp
cmp
dec
imul
outs
add
dec
popa
loopne
mov
fisub
dec
popa
movs
ja
out
mov
nop
test
in
test
and
mov
jne
jecxz
mov
aam
hlt
popa
stos
mov
nop
jge
cmps
(bad)
scas
jb
sbb
push
mov
xor
icebp
mov
jecxz
pop
add
xor
hlt
std
mov
ins
pop
xchg
loop
inc
xchg
xchg
pop
ror
inc
pop
xor
adc
ret
jp
mov
ja
ficom
imul
push
rcr
dec
adc
and
aas
lahf
push
stos
jno
div
rol
stos
xor
mov
xor
ret
fimul
lahf
xor
outs
std
jbe
mov
dec
mov
arpl
cmp
pop
pop
loop
sar
cmp
imul
retf
pop
mov
stc
rcr
mov
inc
sbb
dec
out
inc
jge
jecxz
sbb
call
lock
or
sahf
mov
push
adc
ret
mov
retf
mov
pop
or
push
add
cs
ins
in
cmp
or
push
pop
adc
loope
and
add
add
cmp
aam
or
xchg
fsubr
mov
scas
(bad)
in
lock
arpl
jo
ins
adc
adc
(bad)
repz
or
stos
inc
mov
movs
xor
loopne
rcr
dec
loope
dec
dec
xor
sub
jge
mov
push
in
imul
mov
mov
ret
retf
push
xor
push
fdivr
cmp
in
mov
mov
dec
aad
jp
mov
fwait
shl
(bad)
stos
jmp
jge
xor
sbb
gs
or
adc
pop
in
xchg
aam
mov
push
cmp
jnp
jno
scas
or
and
dec
inc
scas
loop
jne
dec
call
mov
mov
out
inc
(bad)
scas
and
repz
xchg
mov
inc
prefetcht2
sbb
mov
jmp
jnp
jmp
cs
cmp
test
xor
jl
daa
jl
mov
int3
sub
jae
adc
ret
pop
(bad)
stos
push
fld
rol
and
in
pusha
dec
mov
stc
call
addr16
(bad)
xlat
fistp
outs
mov
push
jb
jb
(bad)
fdivr
bound
mov
repnz
mov
stos
mov
push
es
and
mov
or
ror
out
pop
mov
rcr
push
dec
jmp
sub
icebp
add
jne
add
xchg
jbe
mov
ins
test
mov
test
jl
pop
sub
std
mov
lea
movs
push
jp
(bad)
jbe
xor
imul
sbb
sub
xchg
out
popf
mov
cmc
push
adc
sub
cld
jnp
add
sbb
cdq
xor
lock
mov
or
push
(bad)
dec
mov
and
xor
js
pop
mov
dec
cmp
test
nop
adc
shl
pop
pop
js
nop
loopne
and
hlt
sub
or
popf
push
aam
or
dec
mov
mov
adc
or
ficomp
jge
or
sbb
mov
arpl
stc
out
push
gs
inc
cmp
fmul
jmp
cmp
movs
jmp
sbb
push
and
imul
call
cli
daa
popf
mov
je
or
and
sbb
push
xor
inc
stos
jmp
and
dec
cmps
lock
push
iret
mov
push
adc
fdivr
and
pop
dec
push
xor
repnz
and
xor
test
mov
ja
jae
sub
imul
mov
sub
xor
jl
xchg
sbb
mov
add
shl
inc
mov
lahf
(bad)
fiadd
sahf
icebp
ret
ffree
stc
mov
stc
dec
push
scas
retf
jmp
inc
cli
adc
pop
mov
push
push
xchg
movs
in
cmps
test
in
out
es
fdivr
fld
fimul
arpl
cmp
ja
and
mov
mov
sbb
in
cmp
inc
and
cmps
push
jle
xchg
adc
test
sub
xor
fmul
or
mov
imul
push
fistp
out
aaa
xor
sbb
mov
fdiv
xchg
xchg
repz
push
inc
loopne
(bad)
jns
sub
stc
inc
lods
xor
dec
fdivr
sbb
popf
lahf
jle
ins
ret
or
push
cmp
icebp
jne
jmp
and
mov
pusha
or
xchg
lahf
cmp
out
mov
fs
jbe
clc
cmp
pop
jecxz
f2xm1
scas
cdq
push
int
outs
ss
call
inc
fisub
mov
dec
aas
ins
inc
add
jb
(bad)
leave
shr
fadd
stos
mov
jg
sbb
in
or
mov
mov
pushf
push
jbe
out
js
or
in
test
pushf
neg
aam
fmul
mov
sbb
xchg
pop
mov
imul
aam
test
xchg
(bad)
xchg
mov
les
fisttp
mov
push
clc
fidivr
lock
or
pop
xchg
fbld
jne
sbb
add
and
adc
out
pop
jg
pop
pushf
pushf
sti
aam
loop
imul
retf
nop
sub
sub
mov
pop
repnz
pop
fistp
jmp
jg
adc
pop
or
add
dec
or
call
sub
add
shl
adc
stos
and
xchg
fadd
xlat
leave
cmp
add
fsub
aam
jle
or
aas
cmp
in
dec
or
sbb
int
adc
xchg
xor
scas
iret
fst
xchg
out
mov
(bad)
xlat
dec
push
(bad)
jno
aam
cwde
mov
xchg
dec
or
lods
sbb
jo
pushf
fdiv
push
pusha
shr
push
mov
push
int3
mov
enter
inc
stos
loopne
popf
push
or
fs
aad
cmp
inc
pusha
xchg
xchg
mov
and
rol
(bad)
push
add
sub
cmp
je
mov
sub
mov
movs
or
aaa
repnz
push
icebp
ss
or
loopne
mov
xchg
cmp
jmp
outs
sbb
mov
popf
inc
pop
fnstsw
mov
fbstp
push
push
das
imul
das
mov
and
inc
bound
scas
pop
adc
sar
xor
(bad)
(bad)
add
xor
ja
push
repnz
sbb
adc
pop
fstp
(bad)
sbb
xor
dec
mov
retf
xchg
add
aam
xchg
pop
push
scas
mov
or
mov
(bad)
add
push
mov
es
or
imul
pushf
adc
fisubr
pushf
ret
pop
pop
in
pop
int3
push
inc
mov
and
fdivr
popa
mov
and
or
or
push
push
pop
cmp
xchg
dec
bound
pop
std
mov
loope
mov
xor
pop
outs
pusha
(bad)
xchg
adc
inc
out
call
cmps
pushf
in
mov
mov
cmp
imul
inc
jge
out
xchg
jae
jno
sbb
les
iret
cmp
push
outs
xor
dec
add
pop
int
or
push
jl
mov
into
adc
shr
(bad)
cs
inc
add
loop
and
cmp
mov
mov
push
stc
mov
movs
push
jle
and
mov
xchg
or
call
push
cli
aam
scas
in
pop
or
pop
mov
xor
pop
fimul
leave
inc
daa
or
shl
xor
xor
jo
or
adc
xlat
xchg
add
fisubr
(bad)
jne
add
sub
out
or
stos
and
sbb
jle
mov
adc
and
pusha
(bad)
xchg
push
xchg
xchg
(bad)
loopne
dec
pop
add
mov
into
push
sub
xor
call
dec
ss
in
push
test
or
and
jge
dec
and
cmp
mov
inc
jbe
dec
fnsave
xor
or
arpl
out
(bad)
in
push
addr16
xor
add
adc
stos
or
pop
out
inc
sbb
pusha
xchg
fisttp
lahf
sbb
sub
je
sbb
pop
inc
imul
jl
pop
add
mov
adc
test
inc
fldenv
es
push
sti
(bad)
pop
sbb
mul
out
lods
xor
mov
pop
aas
xor
ret
adc
xor
cs
inc
dec
mov
xor
(bad)
dec
xchg
test
ds
cmp
jb
hlt
sub
push
jecxz
lock
xor
mov
(bad)
and
add
xor
and
lea
inc
xchg
dec
jge
or
inc
(bad)
retf
aas
out
aam
lahf
jb
addr16
movs
adc
pop
lods
or
leave
(bad)
sub
(bad)
add
cdq
sub
xchg
shl
inc
mov
imul
jnp
in
aaa
loope
int3
xor
int3
mov
jp
jmp
dec
sahf
(bad)
jnp
jge
inc
ss
(bad)
imul
out
imul
jmp
pop
dec
xor
in
dec
adc
mov
adc
adc
mov
ds
(bad)
cmps
pshufw
cmp
xchg
scas
mov
inc
retf
test
inc
xor
aam
xchg
dec
mov
nop
sahf
out
push
js
mov
pop
jecxz
jp
fst
(bad)
fnstsw
popf
(bad)
jmp
jmp
es
pop
cmc
mov
jecxz
dec
aas
cmp
repnz
ret
inc
pop
cmp
inc
(bad)
and
(bad)
leave
mov
jns
repz
loopne
imul
sub
movs
inc
add
sub
int3
shr
shr
sbb
pop
shl
int
shr
lds
sbb
mov
fwait
or
mov
mov
adc
lods
mov
jge
enter
fisub
or
mov
sbb
imul
and
and
inc
xchg
push
mov
pop
mov
out
out
scas
xchg
xchg
rcl
mov
jo
xor
mov
ins
sar
sti
loopne
ret
rol
in
fsub
ds
aas
fild
inc
cld
jmp
mov
mov
popf
jno
sbb
sbb
neg
pusha
cmp
push
cmc
pop
(bad)
cmps
xor
mov
pop
xor
push
adc
fs
ins
or
cmp
addr16
push
push
mov
inc
lods
test
mov
cli
pop
jnp
mov
lea
adc
mov
dec
popa
popa
xchg
aam
fs
push
shl
cmps
aas
xor
xor
push
pop
mov
jnp
mov
sbb
xor
cmp
retf
pop
or
sbb
or
xor
mov
dec
xor
movs
mov
out
cmps
and
mov
fwait
retf
dec
movs
clc
mov
inc
imul
cwde
cli
cli
scas
mov
gs
outs
nop
(bad)
mov
inc
faddp
popf
push
mov
leave
(bad)
jns
xor
enter
das
or
es
push
ins
dec
dec
and
mov
adc
mov
cmp
lods
hlt
add
test
push
adc
mov
jg
loope
fimul
cmps
mov
(bad)
mov
pop
mov
jmp
ficom
fisttp
cmp
cmp
mov
xor
mov
mov
push
jecxz
fidiv
sahf
loop
popf
shr
loope
jge
dec
(bad)
test
stc
ficom
push
adc
(bad)
cli
fcom
stos
in
mov
xchg
ins
jl
pop
call
clc
ss
icebp
cdq
jle
clc
cmp
imul
in
pop
fdiv
push
mov
cld
mov
sbb
pushf
jb
in
(bad)
iret
lahf
ins
sbb
ss
dec
adc
cmp
scas
jmp
cdq
xlat
ficom
cmp
jecxz
and
jecxz
stos
pop
sbb
dec
xor
or
dec
test
mov
cmp
mov
test
in
lea
pusha
pop
rcl
cmp
lds
neg
xor
hlt
cmp
aaa
lods
pop
sub
imul
sub
cmp
lea
bound
or
fidiv
xchg
push
sbb
jno
mov
push
test
push
inc
das
(bad)
rol
ds
test
mov
leave
(bad)
jecxz
add
clc
imul
inc
jb
pop
mov
mov
mov
icebp
mov
das
adc
pop
pop
adc
mov
xchg
adc
sub
icebp
xchg
push
call
mov
mov
push
retf
pop
mov
jno
sub
mov
inc
sub
add
and
pushf
xchg
push
adc
mov
cmp
adc
in
cmc
xchg
sbb
adc
clc
retf
das
mov
cmp
into
popa
mov
dec
adc
xor
shr
or
jmp
sar
sub
pushf
les
(bad)
(bad)
mov
and
mov
mov
xchg
addr16
jl
jnp
jmp
shr
in
adc
fs
fld
sub
push
add
cmp
add
retf
jbe
sbb
xor
jae
jo
scas
pushf
jae
ins
dec
pop
jp
jmp
push
fcom
push
push
call
enter
and
fadd
je
cmp
call
in
mov
mov
lods
(bad)
xor
mov
mov
ds
outs
sub
js
or
jo
or
sub
and
cmp
cmp
adc
(bad)
enter
movs
cmps
cmp
clc
lds
repz
sahf
ret
enter
mov
push
icebp
dec
out
xor
call
inc
int3
sub
jbe
enter
cwde
ror
xor
sbb
addr16
mov
and
or
inc
int3
stc
pushf
cmp
mov
out
stos
icebp
fst
inc
(bad)
inc
mov
xchg
push
lahf
push
not
mov
loop
adc
xor
rep
fimul
out
mov
ja
repnz
std
leave
dec
(bad)
dec
retf
(bad)
fnsave
pushf
inc
mov
pop
repz
and
inc
movs
sahf
and
icebp
popa
call
cmp
sahf
dec
aam
push
out
push
imul
cdq
jp
xor
in
xchg
scas
sbb
or
fsub
adc
xchg
mov
jne
arpl
push
push
lds
sbb
sub
stos
(bad)
(bad)
outs
xlat
jl
cmp
push
xchg
push
or
leave
lea
test
shl
jae
ret
pop
xchg
pop
sub
out
adc
fstp
pop
les
test
adc
xor
ffreep
push
sub
jae
push
sahf
hlt
test
hlt
sbb
jl
stc
and
jge
stos
ret
cmps
or
dec
sbb
push
push
or
movs
std
clc
fsub
push
movs
es
jle
xlat
mov
xchg
mov
mov
xchg
inc
jecxz
xor
mov
pop
cmp
outs
(bad)
call
loope
sbb
push
push
fnstsw
add
and
mov
int3
out
gs
cli
or
in
jge
sub
push
add
xchg
xlat
mov
mov
retf
push
and
adc
xlat
mov
test
push
dec
mov
test
xchg
or
xchg
sub
test
vpaddb
cmc
in
into
les
mov
xor
ds
dec
push
loopne
shl
push
std
add
(bad)
movs
aaa
ds
je
retf
std
mov
xor
xor
lods
movs
ror
mov
add
xor
xchg
nop
jb
mov
aam
cs
adc
add
jmp
fisubr
andnps
out
dec
fwait
jne
sar
es
fisttp
or
mov
scas
push
mov
xor
test
inc
mov
pop
inc
ret
dec
test
and
repz
jno
cmps
or
sbb
mov
repnz
inc
sub
jnp
and
das
jns
inc
inc
cmc
mov
sub
cmp
jl
cmp
repz
adc
jno
lahf
imul
(bad)
xlat
repnz
pop
sub
lods
add
(bad)
cli
add
pusha
push
test
mov
fist
mov
push
mov
ins
or
push
or
dec
loope
cmp
sbb
add
in
shr
dec
adc
and
sbb
push
pop
pop
nop
cmp
sbb
xlat
fucomip
cld
mov
pop
std
cwde
in
push
cmp
pop
ins
or
(bad)
mov
repz
pop
dec
setl
iret
cmp
jecxz
sbb
leave
pop
sbb
push
mov
jne
pop
test
sub
dec
test
push
out
ins
lock
push
shr
lods
adc
jbe
adc
push
push
add
in
push
sbb
loope
xchg
inc
xchg
jae
pop
inc
lahf
jbe
mov
mov
mov
and
jg
cmps
stos
cmp
adc
mov
rcr
icebp
mov
mov
dec
adc
inc
repnz
mov
or
dec
jb
rcr
fiadd
adc
sti
clc
sub
sbb
sub
icebp
imul
cli
imul
ins
sub
in
popf
aad
in
mov
and
stc
jmp
adc
xor
xor
cs
push
mov
adc
fld
mov
cmp
jne
test
out
repnz
lods
pop
cmp
fidivr
cmp
mov
ror
lea
sbb
leave
add
ins
test
adc
mov
mov
loop
mov
jl
mov
add
ins
cmps
jb
or
loope
jp
inc
leave
mov
sbb
mov
sbb
out
pop
and
xlat
arpl
sbb
sub
lock
sbb
aas
mov
sbb
les
sbb
sub
ds
xchg
pusha
mov
push
ret
aad
out
jns
les
imul
pusha
xchg
xor
or
into
dec
ins
inc
mov
pusha
and
cmp
enter
pop
fbld
clc
pushf
loopne
xor
out
pop
xchg
jg
neg
addr16
retf
fs
jo
out
hlt
bound
int
xor
adc
pop
xchg
gs
adc
jae
jae
js
mov
xor
ss
addr16
jns
mov
popa
arpl
xchg
mov
pop
cmp
mov
mov
and
push
inc
pop
fsubr
fisub
aad
imul
cmp
outs
fild
xchg
dec
mov
imul
(bad)
mov
ds
push
stos
test
inc
sub
into
leave
cmp
or
mov
xchg
or
(bad)
dec
pop
iret
ror
ror
mov
scas
add
imul
mov
in
inc
jg
xor
pushf
shr
adc
mov
out
mov
lea
data16
(bad)
fisttp
cmps
jne
inc
jmp
push
lds
out
mov
lods
sub
enter
inc
cmp
mov
ins
cmp
cmp
cmp
push
sbb
jg
cwde
es
inc
in
or
jne
add
dec
out
sub
xchg
push
in
not
push
ret
jno
dec
sub
jp
imul
mov
aas
cmc
push
fwait
mov
add
add
add
or
lods
mov
sub
kmovb
nop
xor
sbb
retf
and
iret
mov
xchg
xchg
push
sbb
scas
inc
test
fst
mov
ins
adc
fisubr
push
aas
add
mov
add
mov
push
imul
jae
mov
push
push
or
pop
mov
adc
inc
test
dec
mov
add
push
mov
xchg
mov
mov
mov
sub
xchg
ror
jo
xor
mov
and
retf
stos
imul
rcr
inc
int
ins
int3
setae
repz
push
inc
jbe
push
and
test
inc
jb
bsr
cmp
sub
push
enter
das
mov
push
mov
xchg
mul
jge
int3
inc
cmp
inc
cli
push
clc
test
dec
bound
sub
leave
push
mov
jmp
sub
mov
ins
ins
inc
pop
jne
lock
pop
sti
mov
xchg
(bad)
sbb
jno
into
and
mov
fild
fmul
xor
mov
loope
jle
inc
cdq
xchg
adc
in
loopne
push
xchg
xor
mov
mov
stc
sbb
shl
dec
add
aaa
push
and
push
jp
ins
dec
inc
cld
mov
and
enter
gs
repz
int
daa
cmp
jns
jno
mov
ss
into
ins
fld
jl
pop
fwait
pop
cdq
add
repz
dec
and
pushf
push
dec
clc
call
and
push
cmc
icebp
mov
int3
out
lods
jl
imul
pop
dec
pop
fdivr
add
pushf
dec
mov
(bad)
push
xchg
loope
into
pop
xchg
or
daa
ins
jo
inc
icebp
push
push
cdq
je
dec
push
ss
pop
pop
dec
cmp
outs
mov
sub
sbb
int
jmp
xchg
scas
daa
add
add
adc
lods
or
aam
ret
nop
popa
mov
retf
sub
cmc
xchg
xor
jo
dec
out
paddsb
sbb
int3
in
or
xchg
adc
out
les
jmp
(bad)
(bad)
cmp
int
xor
mov
aad
mov
pop
das
bound
aaa
push
retf
push
dec
xchg
cmp
test
jns
pop
push
dec
ja
pop
stc
cmp
jns
jmp
fdivrp
ret
sbb
or
(bad)
mov
dec
ret
sub
or
shl
xor
stos
popf
mov
daa
clc
mov
push
shl
ret
dec
mov
adc
inc
(bad)
mov
push
aam
pop
inc
hlt
pop
sub
push
cmp
sub
je
call
call
dec
cs
leave
cmp
bound
jb
mov
mov
jmp
out
cld
fs
fdiv
jmp
xchg
das
repz
adc
xsha256
cmps
adc
pop
mov
je
lods
xor
test
sub
sbb
push
mov
shr
dec
mov
sbb
adc
aas
jge
lds
(bad)
enter
les
xchg
xor
pop
adc
dec
test
pushf
mov
rcl
call
or
sti
adc
adc
jp
inc
inc
out
dec
dec
mov
mov
arpl
push
xchg
lds
jle
fstp
out
ins
sub
je
mov
test
dec
pop
cmps
lods
push
cmp
es
test
loopne
mov
mov
aas
mov
es
and
cdq
repnz
cmps
sub
ss
xchg
push
push
push
pop
and
xchg
bound
push
mov
fwait
push
iret
sub
stos
fld
stc
jg
test
mov
outs
pushf
repz
add
in
loopne
div
cmp
icebp
add
push
fs
xlat
mov
cs
add
das
in
inc
outs
xchg
add
pop
jg
scas
dec
pop
xchg
mov
xor
popa
(bad)
pusha
and
popa
cmp
jne
call
and
cld
sbb
add
lahf
stos
ss
inc
mov
pop
jp
movs
in
and
xchg
mov
push
fldcw
inc
aad
iret
aad
push
jae
mov
mov
retf
clc
shl
mov
sbb
pop
or
push
das
mov
cld
jae
adc
pop
adc
ja
cmp
push
into
je
in
jmp
add
js
je
add
adc
xor
sti
xchg
pushw
cs
lods
popf
dec
and
imul
sbb
aam
xchg
sbb
adc
xchg
jne
mov
in
jge
lahf
dec
inc
fdivr
xchg
inc
push
test
sub
jno
push
push
mov
jno
out
mov
and
pop
dec
push
imul
call
mov
ins
sti
mov
jb
jne
imul
push
mov
mov
xchg
ins
mov
ja
aas
mov
jg
out
leave
cmp
cli
xchg
add
jg
and
push
push
hlt
mov
xchg
push
mov
jmp
call
push
repnz
adc
xor
mov
les
fidiv
push
cmp
repz
int3
call
mov
push
sti
push
xor
sub
pop
and
nop
xchg
or
inc
shl
in
call
dec
or
sub
movs
push
sbb
out
xchg
xor
cld
mov
cld
ds
js
xchg
push
test
imul
add
jp
pop
movs
lahf
mov
sar
mov
movs
or
jmp
sbb
nop
fstp
or
and
mov
adc
fidivr
mov
xor
icebp
dec
fisub
jne
xchg
pushf
jp
cmp
hlt
mov
outs
fwait
in
xor
sub
push
mov
dec
jmp
aam
mov
xchg
fs
adc
xor
in
cmp
inc
jne
dec
jecxz
dec
or
cmps
mov
cmc
fdivr
fs
call
sub
ror
rcr
movs
pop
std
bound
xor
ror
mov
sbb
inc
movs
movs
es
call
(bad)
xchg
cmp
in
cwde
(bad)
mov
imul
shr
retf
gs
add
(bad)
test
pop
outs
or
aam
ins
sti
dec
adc
js
sbb
inc
ins
jle
into
jle
fmul
cmps
into
popf
aam
add
and
cmps
or
aam
adc
jno
inc
push
push
int3
(bad)
in
leave
hlt
push
fisttp
shl
mov
dec
mov
jne
gs
repnz
inc
inc
xor
xor
rcl
pop
jnp
mov
jge
(bad)
fmul
rcr
mov
int3
sub
jo
xchg
push
in
jmp
pop
mov
adc
cmp
retf
cmp
scas
stc
jmp
and
or
mov
sti
or
dec
push
sahf
jb
mov
popa
sub
test
fisub
dec
cmp
jnp
cmc
stos
icebp
mov
inc
test
rol
adc
cmp
pop
out
stc
ds
(bad)
out
call
inc
(bad)
fidivr
into
cmp
out
inc
les
dec
(bad)
push
push
test
scas
push
out
rcr
out
push
stos
sub
outs
add
lods
lods
cmp
idiv
fdiv
sub
mov
imul
xchg
xchg
xchg
data16
add
jnp
enter
adc
mov
ds
mov
mov
scas
jle
fst
dec
retf
add
out
mov
push
je
loop
inc
mov
xor
rol
fistp
(bad)
push
xchg
ss
and
fidiv
add
adc
push
stc
fdivr
movs
sti
dec
dec
inc
xor
outs
lahf
pmulhw
leave
in
add
and
xor
lock
sub
dec
dec
jns
dec
mov
cmp
sbb
dec
inc
add
repz
pushf
test
dec
lock
outs
pop
sbb
repz
test
pop
and
das
daa
sub
and
sbb
fimul
pop
ins
rep
(bad)
and
std
inc
fbld
sti
fdiv
les
or
xchg
mov
lea
cmps
jge
inc
mov
(bad)
(bad)
cmp
and
cmp
dec
(bad)
xchg
or
xchg
sub
and
sub
push
leave
dec
mov
pop
jge
sbb
xlat
add
enter
sub
and
xchg
and
out
mov
sub
mov
sar
(bad)
daa
xor
cld
sub
xchg
and
xor
or
bound
push
xchg
xchg
xchg
cli
ja
mov
jecxz
adc
push
adc
mov
aam
aaa
jae
ror
add
cmp
mov
xor
jno
xchg
out
mov
test
imul
out
mov
or
fst
pusha
jno
jnp
mov
push
mov
push
push
stc
or
fistp
mov
add
stos
nop
sbb
outs
(bad)
jb
aad
jl
shr
lods
add
dec
lods
loop
cmp
mov
add
adc
test
fsubr
xor
in
push
sti
call
xor
pop
js
aas
mov
mov
(bad)
jmp
fcmovne
fs
test
xchg
mov
movs
cmp
pop
mov
stos
mov
cld
cmps
push
int3
inc
dec
jo
fwait
scas
out
int
jp
(bad)
sbb
and
add
cmps
fisubr
add
test
lods
test
leave
add
fcmovu
pop
mov
mov
ins
push
and
dec
data16
pop
pop
mov
fistp
inc
shr
mov
push
cmp
or
faddp
aam
stos
cmp
jno
push
mov
mov
fsub
sbb
push
imul
clc
dec
xchg
add
idiv
addr16
bound
mov
stos
fs
imul
mov
test
jnp
jns
xor
and
adc
jmp
xchg
cld
jbe
leave
xchg
cmps
loopne
pop
ficomp
out
cmps
bound
aam
das
pop
dec
pop
jmp
xlat
rcr
pop
sar
stc
xchg
std
repz
cmc
push
ja
dec
sti
adc
mov
adc
or
test
stos
mov
jne
movs
mov
and
mov
push
sub
jns
mov
aaa
popa
ss
cwde
push
(bad)
div
jb
nop
jmp
stos
inc
mov
inc
add
mov
loopne
fld
das
pop
ss
push
stos
aas
call
or
cmp
les
ss
jle
inc
mov
adc
adc
outs
push
ins
mov
movs
test
push
dec
xor
and
mov
cdq
xor
iret
and
mul
shl
call
pop
out
pop
xchg
xlat
pop
into
fmul
jo
add
test
mov
xor
or
lods
add
inc
ja
dec
outs
icebp
mul
jmp
in
pushf
sbb
scas
jno
sub
cmp
repnz
cs
std
retf
dec
(bad)
mov
push
push
cs
lods
(bad)
fsubr
mov
cs
xchg
sbb
sar
int3
call
cmp
lahf
xchg
sbb
fs
dec
das
push
xchg
loopne
jge
rcl
inc
outs
es
sar
retf
test
inc
jmp
jne
and
(bad)
jge
mov
fist
sbb
sbb
add
jno
nop
xor
outs
and
sub
dec
or
sbb
in
cmp
push
fcomp
push
or
in
pop
ror
in
sub
jecxz
xchg
aas
xor
mov
jb
sub
int
jno
push
(bad)
stos
xor
add
dec
and
push
and
ins
test
push
in
bnd
mov
mov
bound
fwait
(bad)
add
and
and
dec
fwait
push
daa
or
and
xor
icebp
call
ror
out
sub
mov
imul
ss
mov
push
addr16
mov
cmps
fmulp
mov
xor
stos
sub
lods
scas
sub
inc
stos
sub
dec
pop
inc
mov
fsubrp
nop
in
aas
js
xchg
shl
dec
add
sti
mov
ss
mov
(bad)
xor
mov
or
(bad)
mov
jg
adc
pop
shl
xchg
inc
imul
or
dec
movs
sbb
pop
popf
push
sub
push
jo
cld
xor
icebp
inc
inc
inc
test
push
xor
out
mov
fiadd
pushf
jne
xor
cmp
cs
icebp
mov
ror
out
adc
mov
jg
imul
push
inc
psadbw
call
out
dec
out
(bad)
or
fmul
add
jns
das
xor
aam
pop
shl
mov
(bad)
mov
xchg
pop
std
push
xor
repnz
xor
push
push
int
fist
out
push
pop
lods
push
ss
leave
mov
sbb
loop
pop
push
jle
addr16
or
cmc
push
aas
xor
cld
dec
pop
xchg
pop
mov
enter
cli
(bad)
in
addr16
ins
inc
inc
sbb
adc
sub
push
ins
ror
push
mov
jecxz
ins
mov
mov
into
loop
mov
movs
mov
push
mov
push
movs
xor
and
sub
mov
fdivp
lahf
dec
xchg
out
sbb
add
cmp
nop
test
lods
jo
xchg
test
retf
mov
mov
ins
cmps
sub
dec
(bad)
je
push
mov
fwait
dec
out
daa
repnz
jge
lahf
jmp
dec
sbb
sbb
stc
aad
fild
into
(bad)
mov
adc
mov
mov
loope
adc
push
stos
(bad)
jb
cmc
jo
inc
shl
ret
test
jne
xlat
data16
mov
(bad)
cmp
mov
pop
int3
cmp
aaa
stc
scas
add
test
sti
scas
xchg
iret
mov
clc
jecxz
pop
mov
sahf
out
(bad)
push
je
cld
adc
repz
add
xor
add
fldenv
(bad)
xor
int
cmp
push
adc
daa
push
popa
lods
ret
jb
bound
ror
into
je
jmp
sbb
stos
scas
push
inc
movs
jecxz
sub
mov
mov
data16
rcr
ret
xor
fmulp
cwde
cmp
movs
or
or
sbb
push
or
pop
scas
mov
xchg
repnz
lahf
push
(bad)
nop
das
int3
add
pop
in
mov
jne
ins
xor
push
add
inc
push
out
jl
dec
popa
(bad)
jmp
mov
in
clc
sbb
fs
pop
stc
pop
sahf
push
popf
test
dec
scas
pop
and
push
shr
rol
aad
push
ss
sub
neg
dec
sub
xchg
imul
gs
out
add
mov
movs
cmp
dec
push
outs
cmp
add
xchg
mov
int3
xor
cwde
fiadd
or
mov
mov
pop
push
inc
xor
sar
inc
pop
xchg
fadd
jmp
inc
push
leave
sbb
fwait
or
repz
sub
inc
jp
nop
jae
mov
dec
popa
mov
push
mov
cdq
sub
movs
or
daa
mov
mov
lock
push
aam
lods
das
(bad)
fisubr
mov
mov
lock
or
or
dec
push
mov
cld
or
pop
pop
hlt
inc
xchg
outs
rcl
ret
push
add
add
mov
mov
inc
pop
ror
sahf
xor
add
inc
jo
xor
jo
enter
ins
xor
shl
push
and
mov
push
rcr
cld
pop
dec
jo
cmp
(bad)
cld
mov
push
es
or
jb
test
and
pop
and
add
or
test
jmp
mov
mov
ret
pop
pop
pushf
pop
pop
mov
cmp
test
inc
sbb
movs
sbb
(bad)
outs
ss
shr
add
jnp
or
int
movs
push
pusha
push
mov
dec
inc
outs
sbb
int
icebp
ficom
xchg
cmp
xchg
xor
xor
add
mov
cmp
test
mov
test
rcl
xor
dec
adc
xor
adc
adc
inc
outs
cwde
cmp
mov
jge
inc
jns
push
iret
bound
cli
jle
jp
jl
outs
add
icebp
das
cmovno
cmp
jae
test
mov
iret
mov
call
sbb
ret
jl
ins
sar
ins
or
jmp
std
(bad)
jnp
pop
jns
(bad)
sub
in
push
mov
add
xor
jmp
jl
imul
and
xor
pop
daa
push
imul
jae
xor
xchg
bound
in
es
sub
xor
leave
dec
outs
leave
or
(bad)
inc
xchg
mov
and
out
sub
scas
scas
in
sub
mov
ror
ss
add
ins
pop
jmp
mov
scas
mov
aad
inc
adc
cmc
pop
and
out
inc
jne
push
jecxz
fs
fld
xchg
push
out
shr
out
pop
inc
fs
sbb
add
or
or
sub
loopne
jg
ror
shr
pop
xor
pop
xchg
daa
addr16
push
adc
mov
push
std
mov
sub
jp
mov
or
sti
int3
or
mov
jl
add
mov
xchg
rol
dec
fidiv
jmp
dec
dec
and
push
xchg
fistp
dec
push
test
cmp
lea
imul
iret
and
(bad)
mov
(bad)
out
cs
mov
mov
ret
jmp
ficomp
jns
sub
push
fidiv
stc
jecxz
jp
pop
mov
jmp
retf
mul
mov
arpl
leave
out
test
sbb
add
call
push
mov
(bad)
nop
ds
scas
push
xor
pop
or
(bad)
fwait
in
add
xchg
iret
mov
jne
cmp
push
xchg
xlat
dec
mov
fisttp
xor
(bad)
ss
bound
jno
cmp
cmp
dec
inc
xor
push
xchg
pushf
xchg
ins
shl
imul
jae
(bad)
adc
push
not
movs
fcomi
cwde
push
test
cld
call
cdq
test
pop
and
call
scas
jge
(bad)
cwde
or
dec
mov
push
and
lock
and
test
rol
inc
adc
jle
xchg
sub
mov
lahf
or
mov
dec
ins
push
mov
in
data16
jne
ds
lds
add
sub
sub
push
or
push
pop
not
movs
outs
pop
and
push
call
fucomp
sbb
clc
cmps
ret
sbb
addr16
(bad)
aas
push
gs
rcr
lahf
push
retf
dec
daa
mov
cmp
data16
(bad)
and
mov
jo
jo
dec
(bad)
push
js
call
loope
sbb
cmp
inc
cwde
mov
and
inc
add
xchg
call
fsub
(bad)
(bad)
in
jmp
ret
mov
pop
dec
daa
lds
mov
aas
sbb
pop
sahf
sar
ins
pop
sub
sti
lds
cli
jns
inc
pop
push
rol
mov
dec
sbb
in
xor
pop
dec
mov
ins
mov
mul
cwde
mov
outs
test
repz
stc
jnp
jno
pop
or
and
loopne
mov
mov
retf
xchg
sbb
movs
dec
jl
dec
sub
loope
inc
push
arpl
add
in
sub
mov
shr
out
jmp
dec
inc
cmp
aaa
cmp
enter
jae
and
mov
pop
mov
inc
popa
pop
jbe
(bad)
xor
fs
movs
mov
jo
xchg
add
fbld
data16
inc
sbb
inc
add
ror
nop
rol
pop
inc
or
xlat
pop
xchg
mov
jg
(bad)
div
add
test
(bad)
cmp
mov
xchg
adc
pushf
and
sub
test
push
test
add
fsubr
repnz
sbb
push
out
out
je
mov
popa
dec
iret
fwait
fwait
stos
nop
ss
cmp
xor
pop
shl
pop
clc
adc
push
sbb
push
cmp
push
repz
ins
sub
cmp
lds
daa
cmps
not
add
xchg
pop
mov
(bad)
cld
fsubr
int
sub
fadd
mov
push
lock
sbb
push
cli
xor
mov
xchg
fistp
dec
loope
(bad)
leave
sti
sub
push
dec
js
cdq
mov
mov
fidivr
lock
mov
xchg
adc
addr16
data16
(bad)
push
aaa
in
and
arpl
icebp
je
xor
lods
loop
(bad)
and
ja
lahf
inc
jp
je
xlat
mov
fwait
inc
fldcw
shr
push
cwde
cmps
mov
loope
xchg
ret
test
or
adc
jmp
mov
repz
and
cmp
push
mov
mov
pop
inc
adc
test
dec
fwait
out
jae
leave
jecxz
fucomip
movs
dec
mov
push
test
loop
fwait
popf
in
arpl
ins
mov
shr
(bad)
out
ret
xor
xor
sbb
xchg
fidiv
sbb
aaa
xor
(bad)
hlt
dec
push
ins
inc
mov
ror
movs
call
pop
jae
or
mov
pop
xor
sub
push
inc
inc
(bad)
sbb
data16
movs
gs
rol
ins
push
hlt
cmp
xchg
dec
lahf
mov
xchg
sbb
dec
and
sub
mov
out
fdiv
cdq
add
pop
mov
idiv
ja
add
scas
lods
jb
fisttp
fs
sub
retf
sub
in
jne
fisub
pop
push
in
mov
fmul
pop
and
outs
fcmovnu
dec
cwde
mov
add
call
cmp
sbb
mov
popf
jmp
mov
test
ins
iret
mov
jecxz
jecxz
into
loopne
add
outs
cmp
cmp
push
popf
fwait
(bad)
lahf
or
call
mov
in
ficomp
in
sbb
push
gs
xchg
dec
lods
sub
(bad)
fbld
sub
push
push
in
sub
stc
or
xchg
add
out
movs
xchg
stos
and
pusha
mov
mov
sbb
stc
inc
dec
stos
mov
pop
sar
ret
mov
(bad)
jae
int
sbb
clc
sub
add
ror
loope
inc
int3
in
aam
push
fdivr
mov
xchg
xchg
dec
push
int3
sbb
jecxz
jb
int
pusha
test
aaa
push
ficom
add
(bad)
cmp
js
mov
jl
jae
das
lods
adc
in
xchg
push
aas
pushf
mov
push
jecxz
xlat
sbb
imul
mov
mov
icebp
mov
mov
inc
jecxz
popa
push
pop
das
in
add
dec
and
or
mov
xor
mov
sbb
mov
adc
retf
sahf
(bad)
mov
mov
mov
adc
std
repnz
sub
es
xor
data16
mov
mov
sbb
mov
push
cli
(bad)
mov
adc
mov
cmpxchg
xchg
cmp
pop
mov
(bad)
dec
(bad)
rep
dec
pop
lahf
gs
outs
pop
mov
out
pop
or
sub
pop
scas
mov
ror
push
das
pop
push
mov
push
add
sub
jle
(bad)
retf
cld
cmp
pop
push
xor
clc
std
iret
hlt
push
ja
fst
inc
push
or
adc
xor
fidiv
div
sub
ss
push
lods
sub
or
adc
idiv
fs
int3
call
jne
jbe
inc
in
retf
repnz
cmps
pop
mov
lods
fwait
adc
cli
mov
inc
pop
and
mov
push
adc
xchg
push
jmp
outs
inc
jl
enter
ss
pop
clc
aas
loopne
cmp
mov
sub
mov
add
jns
call
or
or
dec
mov
add
jecxz
jge
das
cmp
arpl
call
loope
mov
mov
imul
lods
out
or
sbb
(bad)
jge
xchg
shl
sub
dec
in
nop
sub
retf
mov
pop
ret
sbb
mov
(bad)
adc
push
sar
sub
add
enter
jo
ret
and
dec
pop
fisubr
sub
push
xor
adc
adc
xchg
fwait
(bad)
inc
test
inc
in
mov
pusha
cdq
xchg
lock
mov
ror
add
xchg
pusha
cmp
xchg
mov
sub
add
fs
push
add
xchg
pusha
add
or
dec
dec
sub
idiv
jle
and
aaa
inc
mov
mov
ss
fsub
pusha
mov
dec
push
unpckhps
(bad)
int
or
adc
adc
dec
add
or
in
fstp
ins
fisub
int
or
xor
cdq
dec
fcom
fnstenv
arpl
or
jo
pop
add
lods
pop
ror
or
mov
lock
ins
add
mov
repnz
mov
push
out
jb
int
call
aam
test
xchg
mov
and
les
js
outs
cmp
adc
jp
movs
fisttp
ins
jo
mov
ins
test
adc
xchg
aas
iret
div
out
popf
xchg
pushf
mov
pop
mov
mov
jno
push
cmp
or
ja
fild
mov
and
and
mov
jne
ins
and
dec
cmc
or
test
repnz
push
inc
nop
xor
and
mov
popf
icebp
jle
rcl
sub
stos
mov
ficom
jg
mov
dec
jge
and
jecxz
cmps
fsubr
cli
or
pushf
rcr
shl
mov
stc
push
inc
mov
call
cwde
addr16
add
and
mov
jmp
fist
push
pop
ja
inc
mov
mov
sub
cmps
pop
stc
mov
mov
pop
pop
add
mov
cmp
mov
xor
pusha
xchg
inc
cmp
nop
enter
jns
dec
mov
mov
jge
mov
mov
repz
in
aas
mov
ror
sub
sahf
pop
jge
(bad)
or
in
xchg
jne
test
cmc
test
lea
cs
sbb
rcr
lahf
iret
adc
jbe
add
jnp
ret
into
mov
sub
mov
pop
jb
add
jmp
retf
cmp
inc
popf
xchg
and
push
jo
sti
mov
fmul
add
add
jle
xchg
ret
vpcmpeqb
scas
scas
pop
pop
(bad)
jmp
adc
pop
ficom
xor
and
out
cmp
les
cmp
enter
jo
xor
mov
aad
dec
stc
xlat
xchg
push
(bad)
mov
cmps
cmp
jge
push
sti
jne
mov
jns
jp
das
inc
mov
fist
jecxz
int
pop
mov
mov
in
stos
fidiv
ds
rol
sbb
xchg
(bad)
popf
cli
loope
outs
ret
push
add
add
pop
(bad)
leave
mov
adc
mov
and
inc
das
or
div
neg
in
aam
and
retf
xchg
call
adc
les
imul
mov
aas
dec
es
sar
inc
test
dec
arpl
inc
sub
stos
push
xor
jmp
lods
add
or
pop
xor
jne
lds
dec
inc
cmp
jg
inc
leave
fistp
test
mov
xor
bound
dec
xchg
jmp
inc
xchg
dec
jge
mov
adc
sahf
adc
dec
imul
and
sbb
call
fwait
retf
(bad)
push
jp
sub
push
(bad)
cli
inc
sub
das
bound
popa
cli
aas
push
rcl
add
push
inc
dec
mov
mov
xor
sbb
inc
jo
ret
std
mov
fnstcw
adc
mov
xchg
mov
out
dec
std
stos
(bad)
test
icebp
es
in
push
add
ret
stos
test
add
ss
inc
stos
and
inc
jge
repz
adc
outs
push
pop
or
fcomp
pop
inc
push
pop
stc
pop
and
pop
dec
rcl
ins
jp
push
(bad)
jnp
add
cmps
pop
pop
sbb
inc
imul
es
ins
jnp
stc
int3
pop
xchg
gs
dec
xchg
aad
ins
dec
and
sub
xor
fild
sub
push
inc
jmp
cmp
jmp
sbb
or
jno
pop
movs
mov
cmp
add
or
addr16
ins
out
sbb
(bad)
fimul
sbb
icebp
loop
fldenv
daa
ins
dec
fidivr
cmp
pop
aas
sub
popa
cmc
call
inc
test
adc
adc
jmp
scas
aaa
mov
dec
add
or
popf
inc
xor
sub
enter
jae
add
add
or
mov
stos
add
and
mov
and
popf
fbstp
mov
clc
scas
bound
pop
sbb
xor
cmps
add
loope
push
in
sbb
dec
add
xchg
outs
neg
xor
call
jb
or
sahf
repz
dec
push
clc
out
cmps
std
sub
fs
(bad)
(bad)
fidivr
xchg
rcr
cmps
ror
adc
or
arpl
adc
jg
sub
ficom
sub
cmp
pop
pop
cmp
mov
std
ins
mov
sbb
push
mov
stos
shl
cmp
das
retf
jnp
inc
enter
xor
movs
push
fwait
pop
ins
(bad)
call
inc
bound
es
adc
ret
(bad)
cmp
addr16
xor
into
push
xor
jb
inc
int3
and
dec
sbb
push
xchg
mov
mov
enter
jae
inc
imul
cdq
ror
je
sbb
in
pop
push
push
ja
dec
cmp
pusha
retf
or
inc
rol
cmp
mov
sub
ret
and
outs
lds
ins
or
and
or
shl
loope
jbe
xor
das
mov
mov
or
sub
imul
iret
push
jmp
mov
lods
push
aam
dec
inc
rol
nop
hlt
mov
inc
out
fisubr
test
mov
dec
daa
and
and
cmp
sbb
push
mov
arpl
mov
mul
shl
ficomp
cmp
add
daa
fnsave
je
outs
pop
sub
and
dec
add
jmp
xchg
xchg
fadd
je
fsubr
ins
pop
and
leave
cld
adc
xlat
sbb
inc
xor
jge
adc
pop
idiv
ins
jmp
pusha
jnp
inc
ss
into
push
xchg
xchg
push
repz
fsub
(bad)
ret
lods
stc
daa
push
enter
clc
mov
ret
shl
call
je
fldenv
pop
push
stc
sub
loopne
cmp
sub
retf
scas
or
repnz
in
js
cmp
es
(bad)
loope
lock
sti
xor
jns
fadd
jp
out
add
jg
pop
call
sbb
sahf
mov
add
aam
mov
stos
sbb
retf
test
sub
xchg
shr
pop
xchg
mov
push
jnp
cmp
aas
sahf
mov
shrd
es
adc
cmp
mov
and
mov
sbb
cld
test
push
fldenv
(bad)
push
or
jo
or
cmp
mov
sub
xchg
pop
sub
movs
cdq
(bad)
pop
sub
push
ins
jo
jecxz
sahf
movs
ret
rcl
push
shl
or
and
sbb
add
test
call
rol
rol
push
add
push
test
sub
cmp
push
mov
mov
and
gs
out
loop
(bad)
test
enter
cmc
jne
pushf
pop
push
inc
iret
test
icebp
iret
out
loope
xor
mov
cvtps2pi
push
ja
push
xor
adc
rcr
sbb
lods
xor
sbb
mov
(bad)
jg
jne
push
pop
xchg
(bad)
inc
xchg
pop
fistp
outs
test
loope
out
dec
int
test
inc
push
arpl
aam
mov
xor
lds
jno
in
out
add
fisttp
sub
std
(bad)
push
adc
cmps
pop
add
add
xchg
mov
mov
stc
mov
out
in
jae
hlt
sti
jno
dec
xor
push
hlt
sub
sbb
pop
sbb
or
test
ret
sub
or
movs
jbe
sbb
gs
xchg
pop
das
adc
xchg
or
je
cs
fs
pusha
adc
mov
sub
cs
out
and
xlat
arpl
mov
jge
out
aam
dec
sbb
xlat
adc
shl
fucom
sbb
inc
mov
fcom
jo
pop
fchs
xchg
add
aas
jecxz
fdiv
imul
and
aas
mov
div
jmp
icebp
dec
push
jecxz
loope
and
daa
rol
sbb
inc
mov
outs
in
std
jnp
repz
out
mov
xlat
add
mov
or
cmc
cmc
sbb
les
in
mov
push
or
xor
or
dec
xor
mov
jne
sub
cmp
pop
push
add
fistp
aaa
outs
or
mov
and
push
xor
cs
sub
push
add
pusha
arpl
sub
push
or
inc
pop
add
xchg
ja
hlt
adc
mov
mov
jo
or
xchg
xchg
sbb
cld
in
mov
lods
push
add
and
or
add
and
or
add
or
and
mov
inc
std
mov
sti
pop
adc
lock
les
sub
jmp
fsub
inc
dec
jmp
pop
jl
fmul
mov
hlt
adc
outs
stos
popa
lock
ds
or
sbb
mov
push
aas
xchg
and
movs
test
enter
(bad)
rol
push
imul
mov
cwde
loopne
cmc
xchg
inc
push
adc
cli
inc
jnp
out
adc
in
dec
dec
mov
and
jns
call
cmp
retf
and
mov
cmp
es
lods
ja
shr
icebp
pop
out
push
inc
adc
pop
cmp
add
mov
adc
or
jb
int
call
loope
cmp
std
ret
jmp
pop
std
(bad)
mov
pop
or
sahf
sub
or
xchg
call
dec
jg
fcom
sub
and
arpl
xchg
xor
and
mov
sahf
adc
gs
sti
mov
mov
outs
lock
fadd
pusha
add
pusha
or
(bad)
imul
inc
pop
jae
sbb
ret
mov
(bad)
push
pop
clc
sub
xor
or
xchg
lock
ret
fstp
push
push
ret
xlat
push
iret
jno
cmp
loopne
sub
or
mov
xlat
inc
pop
add
adc
add
add
mov
cmp
scas
dec
cwde
cmp
pop
xchg
push
mov
fdiv
stos
xchg
inc
outs
out
inc
adc
(bad)
ja
sbb
pop
idiv
mov
idiv
idiv
ret
mov
xor
loop
pop
add
neg
ror
lods
inc
lds
fcom
es
dec
push
jmp
movs
js
rcl
fcomp
dec
lods
mov
add
add
mov
(bad)
dec
and
js
jge
pop
sub
cmc
push
push
and
dec
test
ss
dec
retfw
jle
nop
pop
retf
fs
lahf
ja
inc
mov
fild
test
repz
xor
jne
frstor
cmp
xchg
pushf
in
out
mov
pop
mov
ja
lea
js
sbb
sahf
aam
scas
mov
xchg
std
mov
and
add
adc
lods
adc
add
sub
mov
std
xchg
mov
cmp
movs
leave
mov
pop
shl
inc
gs
inc
or
nop
jnp
xor
inc
test
and
gs
fsub
cdq
ffreep
jbe
pushf
push
fisttp
test
les
cmp
shr
(bad)
enter
add
push
add
sbb
xchg
add
test
push
xchg
mov
call
inc
lods
ror
mov
add
in
ins
dec
push
xchg
fcom
or
gs
mov
je
jmp
aam
pop
out
mov
jge
lahf
pop
jmp
imul
movs
test
dec
fs
mov
xchg
stos
(bad)
test
daa
push
sub
addr16
dec
dec
mov
push
fs
push
vucomiss
xchg
mov
addr16
mov
mov
mov
mov
and
pusha
not
fidiv
ror
jae
dec
ret
movs
cmp
jmp
out
push
mov
imul
mov
mov
inc
ret
daa
inc
cmp
stos
in
cdq
pop
mov
outs
(bad)
jge
rep
jnp
sbb
and
pop
es
lods
repnz
icebp
fstp
leave
mov
xchg
ss
pushf
outs
es
stos
fiadd
ins
or
pop
addr16
aaa
push
mov
stc
pop
mov
inc
jbe
cmp
mov
jo
js
cmp
sti
retf
in
test
cmp
ja
call
and
mov
xchg
lods
int
inc
pop
jmp
je
sub
inc
imul
ins
push
aad
pusha
and
add
and
xlat
pop
sbb
outs
mov
inc
and
or
xor
scas
or
xor
ds
sub
clc
imul
push
push
mov
aaa
jle
adc
cdq
hlt
aas
repz
push
sbb
sbb
retf
add
fcmovnu
mov
lea
add
adc
or
jle
pop
sbb
xor
and
add
mov
inc
inc
or
add
pop
adc
sub
sar
sti
jne
mov
ret
mov
inc
inc
or
or
int3
rol
call
test
add
test
xor
mov
cmps
and
inc
cmp
and
push
sub
loop
ins
test
cmp
bound
mov
push
shl
or
test
scas
lods
leave
cmp
mov
cdq
mov
(bad)
add
mov
push
je
popf
out
sbb
sub
fcomp
mov
sbb
mov
dec
xor
loope
or
lea
push
shl
inc
test
pop
mov
out
call
jmp
cmps
out
out
sub
jne
ror
xchg
mov
ss
in
dec
loop
les
test
mov
ret
pop
add
push
xchg
in
adc
call
mov
popa
or
hlt
cmp
push
adc
sbb
jno
dec
push
dec
out
and
cmp
and
xchg
out
call
sbb
mov
outs
push
pop
ret
aaa
test
or
or
jmp
cmp
fdivr
xchg
loop
pop
mov
add
push
cmp
popf
mov
(bad)
ss
mov
pop
pop
lock
aam
shr
test
pop
arpl
xor
dec
sbb
xchg
in
js
fisttp
jg
add
xchg
lahf
xchg
mov
jns
icebp
push
clc
fs
cmp
arpl
dec
or
cld
daa
imul
cmp
adc
mov
adc
call
rcr
or
sub
sbb
fdivr
scas
jno
cmp
lahf
test
or
sub
inc
and
lock
stos
test
push
cli
fstp
dec
xor
daa
cmp
imul
xchg
mov
(bad)
cmp
je
les
push
jge
add
jle
sbb
cld
out
xchg
jae
popa
xor
sbb
adc
daa
out
fadd
inc
out
repnz
dec
mov
mov
or
push
sbb
in
lods
mov
xchg
inc
aaa
punpcklwd
mov
sbb
and
(bad)
into
rol
mov
int3
loop
mov
test
cs
xor
push
or
or
pusha
arpl
cdq
(bad)
test
or
fdiv
mov
and
ins
ja
es
push
add
jmp
push
adc
add
inc
add
(bad)
sar
xchg
and
add
add
int3
retf
mov
adc
lock
mov
and
fld
pop
cmp
push
or
mov
or
add
cmp
mov
or
sar
pop
test
rol
dec
sahf
int
jbe
jl
jle
and
hlt
jg
daa
(bad)
cmp
mov
and
adc
pop
call
add
push
inc
xlat
ss
add
adc
add
sbb
test
mov
inc
(bad)
test
fldenv
pop
xor
loopne
pop
es
fimul
sahf
pop
ja
inc
imul
pop
fldl2e
(bad)
out
jle
(bad)
add
sbb
jp
mov
push
(bad)
push
ficomp
mov
dec
retf
fcom
clc
mov
arpl
loope
push
rcr
push
arpl
lock
js
adc
sbb
lock
stos
enter
lock
bound
add
fs
nop
add
jb
lds
out
mov
rcl
call
scas
movs
jae
mov
or
sub
sti
data16
cli
sub
xor
fisttp
cli
in
dec
mov
in
pop
fbstp
pop
std
mov
or
and
idiv
call
xchg
dec
(bad)
pushf
cmps
xchg
in
fdiv
jle
adc
and
sahf
(bad)
fnstenv
(bad)
cmp
sbb
push
cmp
jmp
lock
push
in
inc
jo
pushf
pop
adc
xor
int3
jge
mov
dec
aam
call
in
lock
dec
push
xlat
das
xor
repnz
shl
fbstp
mov
mov
(bad)
jo
stos
xchg
adc
lods
pop
call
int
mov
pop
out
adc
arpl
scas
and
adc
out
mov
call
xchg
mov
and
ja
xor
pusha
push
sub
sub
push
pop
fxch
adc
add
adc
jecxz
adc
inc
sbb
xchg
fsubr
mov
push
enter
adc
xor
jge
fs
jbe
test
inc
mov
or
pop
xchg
and
loop
adc
or
sub
jno
mov
dec
nop
sub
sbb
pop
fsub
pop
adc
push
push
add
push
add
aaa
jo
ficom
dec
aam
ds
xor
fcmovnb
ficom
dec
add
add
add
cmp
inc
add
add
fnstenv
push
and
push
es
jns
test
inc
cs
popf
mov
add
test
test
add
cmp
sbb
mov
arpl
es
mov
xchg
xor
xor
add
mov
or
inc
xchg
ins
or
xor
xchg
adc
loop
and
push
mov
popa
div
into
enter
inc
bound
popa
add
sbb
sbb
mov
adc
push
xor
push
xor
mov
je
shl
add
pop
js
call
shl
adc
mov
xchg
and
sbb
sbb
cmp
add
call
call
mov
sub
sub
inc
xchg
ror
xor
inc
xchg
jae
test
(bad)
repz
arpl
cmp
inc
retf
sbb
inc
push
mov
fmul
in
inc
(bad)
cmp
mov
rcl
mov
push
in
lods
lock
fcmove
mov
stc
adc
sahf
icebp
xor
repnz
cli
push
ret
cli
rcl
cli
into
inc
and
jmp
add
enter
lods
cmp
clc
push
loop
enter
movs
fdivp
cmps
lods
sbb
retf
imul
mov
mov
in
or
cdq
aad
sub
jecxz
jp
inc
lds
in
add
and
jle
in
jmp
cdq
test
test
cwde
sbb
cmp
add
jge
shl
push
dec
scas
sub
mul
mov
inc
jmp
and
jl
cld
inc
loope
je
push
xchg
or
arpl
(bad)
retf
mov
gs
in
sbb
not
fldcw
jae
sub
cmp
(bad)
push
pop
adc
push
fs
mov
mov
loop
lahf
adc
or
xlat
pop
jo
xor
ja
pop
sub
push
or
or
ret
mov
adc
inc
(bad)
mov
cmp
(bad)
jb
movs
mov
mov
daa
mov
mov
xchg
mov
inc
int3
sbb
inc
jne
lods
shr
cmp
mov
aad
popf
ins
inc
(bad)
fdiv
jl
das
aad
mov
rcr
xor
int
loopne
mov
jns
or
sbb
push
pop
adc
cmps
mov
in
mov
mov
cmc
dec
inc
mov
push
ror
outs
pop
jbe
lods
clc
mov
cmc
lods
out
gs
test
xor
in
cdq
test
mov
movs
mov
fs
lahf
cmc
mov
retf
pop
jno
mov
jmp
or
outs
xlat
cs
mov
inc
shl
into
sbb
js
mov
arpl
push
leave
dec
adc
les
dec
mov
adc
ins
popf
xlat
repz
or
xchg
pop
(bad)
stos
pop
push
mov
xor
and
in
fnstsw
mov
mov
mov
stc
shr
jne
div
xchg
push
jle
pusha
pop
jge
adc
mov
sub
out
mov
sbb
fidivr
sar
test
movs
push
in
dec
cmp
test
inc
jp
inc
imul
rcr
ficom
or
ficomp
xchg
ret
aad
icebp
rol
pop
push
add
nop
retf
mov
adc
push
in
pushf
bound
into
pop
adc
sbb
sub
addr16
xor
sbb
dec
mov
stos
jne
test
and
mov
and
adc
leave
(bad)
out
sub
jne
push
cmp
ret
cmp
ins
out
les
xor
pop
push
ficom
jl
aas
xchg
cwde
xor
pop
ret
sbb
and
xor
mov
retf
arpl
mov
sahf
(bad)
mov
fstp
ins
pop
add
xor
inc
out
push
cdq
sub
shr
add
jne
out
cs
popa
inc
or
sbb
add
xchg
and
imul
or
mul
int3
xchg
(bad)
pop
loop
sbb
shr
js
stos
neg
ins
add
jmp
sub
sbb
imul
lock
ds
or
xchg
int3
xlat
mov
xor
jno
ja
push
jl
imul
jmp
out
sbb
clc
jg
mov
popa
nop
sub
mov
cdq
setle
outs
push
jmp
stos
push
push
inc
jge
imul
sti
cmp
xor
data16
pushf
jb
dec
popa
retf
lods
ror
pop
repz
or
sbb
jmp
sbb
call
mov
jno
retf
cmc
movs
dec
test
dec
test
movs
ins
arpl
in
js
add
dec
ins
dec
dec
push
dec
mov
push
xchg
cdq
sti
push
fst
icebp
push
and
leave
mov
xlat
push
and
fcom
addr16
sqrtps
shl
test
mov
and
fdiv
sti
sar
dec
add
(bad)
pop
xor
mov
call
cdq
shr
les
aad
add
cmc
int
mov
mov
and
clc
xchg
jge
cmps
mov
pushf
mov
call
dec
jmp
pusha
(bad)
jbe
sar
adc
rol
sbb
inc
mov
pop
mov
adc
imul
jae
icebp
shl
scas
mov
cld
cdq
leave
fild
jmp
in
pop
inc
in
cmp
push
movs
adc
shl
cdq
aad
rcl
mov
jns
ror
or
fcomp
xor
test
jnp
ss
dec
movs
and
addr16
or
(bad)
or
mov
or
adc
les
leave
repz
fstp
icebp
lods
mov
dec
adc
fcmovnu
pushf
sub
and
xchg
pop
cmp
cmps
test
and
data16
jae
xor
push
loope
imul
inc
rcr
popa
pop
mov
lahf
jg
and
jg
push
(bad)
jp
cmp
sbb
pop
ret
js
jg
push
cmp
movs
mov
jmp
stos
mov
cli
push
outs
ins
pushf
add
(bad)
sub
hlt
cmp
cmp
rol
shl
scas
mov
mov
outs
sub
xchg
push
movhps
jle
stc
(bad)
cld
sbb
ss
cmp
outs
pushf
pop
cmp
mov
ror
adc
cmc
enter
sub
ins
into
jns
push
je
pop
and
mov
add
jmp
sbb
pusha
add
ins
pop
rcl
cld
mov
pop
xor
retf
fidivr
icebp
xor
call
ror
out
retf
sbb
js
dec
sar
and
pop
sub
fstp
cvtps2pi
int3
hlt
mov
add
movs
lahf
or
je
cmps
in
dec
push
cmps
fadd
inc
mov
cwde
clc
imul
addr16
dec
les
test
repnz
div
es
into
or
aas
pop
mov
les
ss
jb
aam
inc
sbb
enter
and
adc
stos
mov
sbb
hlt
movd
ficomp
fbstp
lahf
dec
sbb
adc
out
nop
aam
sub
outs
mov
cdq
call
hlt
cli
outs
sub
retf
xor
xlat
idiv
aam
das
(bad)
jp
loop
dec
jae
sbb
mov
and
pop
or
daa
mov
test
xor
mov
sub
lds
sub
push
enter
jmp
jecxz
or
dec
setns
pop
retf
mov
jp
std
jbe
out
mov
jl
mov
push
inc
not
aas
shl
imul
adc
sbb
adc
push
mov
iret
call
cmps
xlat
loopne
mov
clc
aas
push
call
dec
sub
xor
pop
ret
(bad)
cmp
mov
xor
xchg
xchg
xor
pop
jecxz
sub
xor
sbb
shl
and
enter
shl
std
add
hlt
xchg
mov
shr
xor
pop
or
jbe
ins
xchg
(bad)
fstp
pop
mov
test
hlt
mov
push
add
jbe
rol
add
test
push
mov
push
retf
add
dec
cmps
push
leave
push
xchg
fwait
adc
xchg
and
sti
cmp
ins
push
test
sub
cmp
cmp
(bad)
mov
loop
pop
in
xchg
adc
mov
xor
(bad)
out
push
(bad)
cld
jnp
pop
sbb
into
and
push
test
sbb
or
mov
mov
mov
call
dec
pop
pop
jle
jbe
bound
jecxz
inc
rcl
popf
(bad)
pop
jnp
jmp
xchg
into
dec
pop
stc
jmp
sbb
xor
push
fidivr
mov
pop
pusha
pop
jb
jae
sbb
mov
adc
rcl
punpckhdq
lock
js
test
adc
aas
mov
sub
aaa
bound
aaa
jns
inc
test
popf
xchg
dec
cli
cmp
outs
mov
cmp
fld
fld
daa
outs
gs
scas
xlat
icebp
(bad)
jl
cdq
mov
jno
(bad)
inc
out
sub
cmp
mov
clc
iret
mov
test
neg
xchg
dec
ja
push
sub
cmp
xchg
mov
fcom
jle
aad
(bad)
stos
sub
outs
aaa
jmp
rcl
mov
imul
loopne
fist
push
push
mov
jnp
sub
mov
xchg
in
ja
icebp
(bad)
repz
jb
(bad)
pusha
aad
icebp
push
loope
cmps
imul
dec
mov
bnd
or
repz
lock
out
arpl
inc
out
shr
xchg
jno
jmp
mov
cmp
xor
pop
pop
ss
mov
mov
fisttp
sbb
xchg
mov
xchg
adc
neg
or
inc
cmp
jle
enter
cmp
out
icebp
cmp
gs
mov
inc
mov
aad
test
xor
mov
xchg
aad
das
xchg
in
mov
adc
xchg
aad
mov
scas
fs
fwait
in
ret
xchg
inc
daa
or
vpaddd
sbb
and
popa
call
lds
pop
and
div
out
adc
repz
xor
pop
and
add
(bad)
sti
cmp
test
dec
aad
sbb
in
xor
icebp
cmp
loop
aam
and
cmp
dec
dec
ret
lahf
pop
std
mov
jae
pop
mov
mov
std
mov
cmp
mov
xor
or
pop
xchg
mov
iret
js
in
add
jne
rol
pop
and
ds
pusha
pop
loopne
fstp
xchg
mov
inc
outs
popf
push
xor
mov
ja
enter
fdiv
sbb
test
sbb
outs
sbb
sub
and
adc
mov
sub
jae
cli
outs
add
jl
movs
pop
sbb
pop
add
mov
pop
dec
sbb
or
test
(bad)
sbb
jbe
cmc
mov
mov
mov
fdiv
and
xchg
jns
inc
sbb
push
iret
inc
clc
aaa
mov
fld
dec
das
lock
or
or
stos
sub
push
jle
lea
pop
pop
jns
push
jl
nop
out
and
inc
int
push
iret
mov
pushf
inc
imul
and
sub
and
xor
lods
idiv
xor
xor
(bad)
push
addr16
sbb
push
push
movaps
add
test
mov
dec
fs
mov
and
pop
in
add
dec
in
ret
or
inc
(bad)
out
jo
fisubr
or
movs
mov
cli
rcl
or
sbb
idiv
jg
and
fs
pop
cmp
lds
xor
call
cmp
(bad)
fs
pop
jmp
jecxz
push
aam
or
mov
inc
xchg
ins
sub
sub
xchg
jle
cwde
mov
fsubr
sub
mov
lods
xchg
push
in
xchg
icebp
add
cmps
movs
aaa
pop
xor
inc
shl
push
fisub
test
adc
leave
sub
and
pop
mov
push
dec
pop
mov
fs
mov
sbb
xchg
int3
mov
push
sbb
pop
adc
xchg
fist
xchg
dec
xchg
adc
add
movs
push
in
jmp
sub
dec
loop
iret
mov
iret
out
cld
pop
xchg
mov
mov
mov
movs
jecxz
popf
sub
xchg
ins
mov
outs
aad
push
push
add
das
fiadd
mov
sbb
pop
jb
cli
mov
scas
mov
jno
das
xchg
int3
jmp
push
adc
(bad)
std
fnstsw
int
jp
cmc
jmp
jne
push
jbe
fld
mov
into
stc
fnstenv
std
imul
push
jae
mov
(bad)
or
into
fxch
mov
xchg
jmp
jecxz
movs
mov
daa
repnz
retf
push
sub
fbld
ds
or
or
pop
int
jl
sbb
xchg
push
(bad)
dec
mov
add
movs
mov
mov
mov
dec
cs
scas
or
pusha
mov
pop
jge
popf
or
cmp
dec
and
int
xchg
push
test
retf
cmp
push
into
stos
mov
push
jp
jne
out
loope
sbb
and
dec
cmc
out
and
xchg
jb
iret
int
jns
push
scas
das
xor
jmp
and
or
pop
into
and
outs
pop
jmp
push
sbb
rol
push
cmp
adc
sub
pop
out
scas
arpl
cmp
pop
xor
lds
mov
add
out
fild
fbstp
outs
ins
dec
ins
sub
xchg
mov
repnz
or
sbb
xchg
jae
inc
lahf
in
push
ins
sub
push
movs
cmp
jecxz
pop
mov
inc
(bad)
in
push
enter
cmps
dec
xchg
mov
xlat
dec
mov
push
loop
sub
or
int
lahf
sbb
jl
jnp
or
mov
lods
xchg
xor
jl
xor
bound
or
sbb
lea
in
scas
mov
jo
jmp
fist
push
(bad)
stos
push
pop
arpl
test
es
pop
push
pop
xchg
ret
xor
cli
mov
std
fld
test
sbb
(bad)
mov
icebp
push
out
mov
js
retf
add
jnp
pop
adc
fldlg2
cmp
sub
mov
adc
cmp
xor
add
stos
xchg
cmp
cld
or
inc
or
aas
sbb
int3
sbb
xor
xor
sbb
dec
sbb
aas
and
pop
dec
test
dec
fmul
repz
mov
jmp
jp
popa
jp
lds
repz
and
jno
(bad)
pop
inc
imul
xchg
mov
dec
cmp
jmp
pop
dec
sub
pminsw
shr
xor
and
push
dec
sbb
retf
or
in
in
push
aas
sub
and
pop
call
fcomp
outs
sub
shl
inc
in
and
xor
lea
fdivr
(bad)
ss
fnstsw
repnz
sar
out
aam
adc
int3
dec
mov
and
ins
loop
and
(bad)
outs
push
scas
add
dec
in
hlt
mov
jle
nop
xchg
jno
pop
in
or
sar
out
ret
mov
mov
jnp
fs
imul
adc
pop
out
xchg
and
test
lods
mov
rcr
mov
inc
lds
(bad)
scas
adc
push
pop
(bad)
dec
dec
imul
sbb
inc
test
and
or
dec
fidivr
std
mov
iret
loope
repz
adc
iret
mov
std
or
rol
inc
mov
mov
and
cmc
pop
int3
sub
xchg
leave
jmp
out
push
fmul
fcomip
jb
pusha
pop
inc
popa
leave
push
fiadd
int3
pop
fisttp
xchg
in
pop
sti
fbld
mov
and
rcl
test
sbb
add
popf
dec
loopne
or
sbb
aam
bound
and
xlat
stos
outs
jns
int
mov
jl
or
rcl
xor
adc
mov
xchg
int
xchg
add
and
add
adc
lds
xchg
pusha
adc
dec
and
aas
loop
ret
stos
cmp
frstor
mov
add
mov
aaa
cmc
cld
or
xchg
pop
jno
dec
out
ds
int3
push
sti
push
xchg
dec
lahf
pop
fiadd
dec
pushf
jae
ins
sbb
mov
mov
sub
icebp
cmp
inc
shr
mov
call
(bad)
hlt
mov
imul
cs
push
and
(bad)
jo
jbe
pop
jecxz
sbb
push
daa
fld
adc
int3
sub
jb
adc
popf
mov
test
retf
and
sbb
sub
inc
mov
std
pushf
iret
icebp
mov
sbb
sbb
(bad)
mov
into
and
jle
push
mov
int
mov
fadd
lea
xor
out
retf
ins
imul
scas
addr16
test
test
push
push
shr
in
add
into
lods
call
sbb
sbb
mov
sbb
call
cmp
mov
mov
popa
mov
add
push
shr
lds
in
jl
xor
cmp
push
sbb
es
inc
retf
mov
pop
xor
repz
ins
push
add
jge
mov
int3
ficomp
push
push
and
xchg
mov
aad
cli
pop
jle
inc
add
aad
jg
cdq
dec
mul
aam
sti
lods
jmp
push
mov
inc
imul
sbb
fcomp
xor
mov
out
mov
adc
adc
push
push
je
cmp
aam
push
add
add
imul
xchg
pop
jle
pop
and
out
inc
neg
lds
ins
cmp
cmc
std
pushf
adc
jns
(bad)
xor
inc
mov
sub
sub
fild
xchg
xchg
mov
push
sub
jmp
xchg
adc
pop
rol
rol
inc
mov
mov
inc
stos
sbb
fbstp
pop
adc
add
mov
pop
fucomp
jl
imul
xchg
(bad)
jp
inc
(bad)
xor
inc
mov
(bad)
cmp
adc
dec
jg
mov
cmps
mov
inc
sub
push
jno
xor
in
mov
cmc
sub
(bad)
push
ins
mov
sub
mov
fcomp
out
lods
push
in
jg
movs
addr16
lock
jnp
test
leave
pop
xchg
ror
and
push
movs
mov
sub
aas
lds
xchg
jno
xor
xchg
sub
lds
xor
inc
mov
popf
xor
push
in
pushf
dec
out
jmp
movs
xchg
cs
sbb
add
pop
lods
sub
gs
mov
bound
sbb
cmp
cs
mov
sub
out
loopne
in
xchg
out
inc
popa
clc
pop
out
jecxz
adc
in
imul
xor
pop
dec
test
cmp
je
retf
mov
cmps
pushf
dec
sti
pushf
dec
pop
add
imul
loop
(bad)
pop
xor
add
out
sub
inc
imul
sahf
jmp
out
and
push
push
outs
(bad)
imul
jecxz
outs
mov
sar
xchg
sbb
jmp
mov
jmp
jbe
popf
hlt
adc
push
pop
add
mov
jmp
rol
dec
and
out
into
rcr
(bad)
mov
gs
in
aad
mov
sbb
mov
or
adc
repnz
fmul
ins
cmp
dec
in
add
fnstenv
jg
sbb
mov
cdq
push
jnp
lds
mov
add
dec
es
mov
out
aaa
push
addr16
rcl
cmp
mul
retf
out
cld
lods
mov
mov
sub
xchg
cwde
sub
mov
das
ds
dec
mov
in
les
in
mov
out
into
arpl
cld
arpl
jae
(bad)
pop
dec
add
out
mov
loop
fbld
retf
sbb
orps
or
dec
adc
pusha
pop
and
mov
or
mov
into
hlt
mov
jne
push
loopne
mov
neg
outs
addr16
(bad)
jo
ins
mov
fisub
xor
mov
adc
xor
sub
ins
push
std
push
movs
add
retf
lock
shl
es
call
mov
cmp
jle
icebp
push
clc
dec
arpl
add
mov
and
and
and
inc
and
sub
mov
mov
xor
leave
xchg
(bad)
hlt
adc
xlat
les
pop
lods
mov
jl
js
sub
dec
jno
scas
(bad)
push
cmps
push
xchg
mov
bound
xor
push
(bad)
dec
xor
add
mov
shr
sub
mov
scas
cmovs
jns
inc
fidiv
adc
adc
ins
retf
push
mov
and
mov
push
cmc
sbb
ret
mov
push
rcl
sub
out
mov
xor
into
jmp
add
clc
std
test
addr16
inc
fwait
or
int3
or
scas
sub
ret
sbb
jmp
movs
or
push
lds
jno
data16
push
jne
in
xchg
push
aas
mov
mov
push
(bad)
(bad)
push
retf
jns
pop
xor
mov
xchg
test
or
mov
hlt
mov
push
ret
jnp
jae
push
mov
shr
pop
and
jecxz
dec
jmp
add
cmp
push
xchg
add
in
pop
sbb
out
pop
data16
mov
xlat
push
aam
hlt
std
sbb
mov
sub
out
jp
fisub
pop
(bad)
repz
outs
xor
pop
lock
les
test
push
fs
ds
rol
mov
jmp
mov
sub
sub
inc
mov
push
and
jle
jb
adc
aaa
push
pop
and
mov
sub
sub
inc
fst
jnp
outs
mov
sar
xor
mov
cmp
mov
outs
mov
and
cli
lahf
jp
inc
je
cli
push
fistp
lods
or
ret
pop
inc
cs
fld
loopne
pop
shl
inc
sub
xchg
bsr
cmps
xor
fdiv
out
cmp
ds
mov
xchg
popf
sahf
fwait
pop
scas
mov
adc
xlat
dec
test
sbb
stc
dec
and
and
mov
xchg
mov
mov
(bad)
fsub
mov
(bad)
jmp
inc
fldenv
mov
out
pop
repz
mov
mov
js
or
mov
and
lahf
hlt
add
loope
mov
(bad)
jp
mov
ja
or
fiadd
jg
pop
or
xchg
(bad)
adc
dec
mov
xor
out
addr16
mov
mov
test
push
hlt
clc
js
add
or
mov
das
jbe
and
popf
out
xchg
cmp
inc
fistp
retf
dec
mov
lods
pop
sbb
xor
xchg
dec
jge
adc
jg
push
inc
idiv
cmps
mov
sar
mov
aad
jns
adc
mov
push
scas
std
pop
cmp
call
dec
pop
push
hlt
add
mov
sbb
jae
mov
mov
nop
pop
jb
push
jle
in
or
imul
mov
not
inc
aaa
repnz
int3
sbb
loopne
das
bound
ret
rcr
fstp
mov
pop
int3
dec
jne
pop
mov
or
dec
sbb
xchg
imul
xchg
pop
call
sub
mov
in
mov
stc
test
popf
shl
xchg
(bad)
lods
sbb
lods
xor
icebp
jp
mov
jnp
dec
idiv
repz
mov
push
cmp
mov
fwait
mov
out
sbb
sub
iret
or
add
ror
jmp
cli
(bad)
push
dec
repnz
int3
(bad)
jg
pop
dec
test
fwait
jae
bound
mov
lods
std
bound
sub
push
xor
cmp
jge
stc
mov
xlat
addr16
rol
sti
xchg
leave
sbb
jle
and
clc
mov
call
xchg
pop
xchg
test
imul
and
inc
idiv
add
mov
fstp
rep
rcl
mov
ja
jl
add
pop
jno
jge
cld
mov
(bad)
sbb
add
jg
arpl
test
aam
mov
arpl
dec
popf
addr16
in
(bad)
jno
std
push
mov
test
pop
mov
xor
scas
outs
and
jo
out
push
jmp
shr
and
fs
daa
xchg
mov
mov
aad
xchg
inc
push
push
mov
cmp
dec
sbb
lea
into
sub
mov
adc
jmp
cmp
retf
or
jl
cs
jmp
sbb
add
mov
scas
arpl
inc
popa
jmp
pusha
and
scas
cmc
ja
xor
push
mov
and
addr16
mov
inc
mov
(bad)
xor
les
mov
movs
aaa
inc
push
adc
scas
sub
inc
aam
rcl
(bad)
sbb
scas
sbb
fnstenv
mov
(bad)
loop
xchg
or
mov
xchg
pop
sub
or
pop
sub
scas
jns
or
lods
pop
cli
push
push
outs
cld
int
push
pop
pop
call
or
pop
shl
jmp
fwait
addr16
mov
fisub
add
jnp
cdq
retf
mov
aam
inc
xor
mov
jp
push
je
(bad)
loope
mov
mov
rol
fld
cs
dec
ja
bound
jmp
jns
inc
fcom
div
push
and
pop
jb
lock
aaa
mov
sub
iret
ret
mov
loop
aam
fistp
or
lahf
jge
push
dec
fisttp
push
pusha
push
inc
push
aam
add
pop
pop
movs
xchg
retf
and
pop
jg
fs
add
or
push
nop
test
imul
out
repz
nop
fs
inc
rol
jg
aad
enter
and
rol
lods
xchg
(bad)
or
popa
dec
jnp
ds
scas
or
mov
push
xor
xor
jle
push
std
push
leave
add
fnsave
leave
cli
outs
xor
jg
mov
(bad)
push
popf
out
push
adc
retf
mov
shr
call
xor
repnz
cmovns
sbb
pop
cmps
mov
inc
jmp
loop
mov
mov
out
retf
stc
jl
shl
xchg
xor
test
ds
lahf
push
push
dec
movs
aam
dec
and
sub
shr
cld
in
in
rcl
dec
fwait
mov
dec
mov
ror
xor
push
xor
pop
sub
cmp
loopne
pop
pop
jo
dec
push
mov
mov
ror
test
dec
add
popf
fdivr
ret
sub
pop
dec
out
and
xor
mov
vpslld
movs
adc
adc
and
je
jne
out
xchg
mov
xchg
cmc
dec
fnstsw
jns
sub
dec
add
add
or
cdq
mov
(bad)
repnz
dec
push
dec
inc
xor
pop
jmp
jo
xchg
or
and
xchg
mov
cli
adc
xchg
fs
mov
shr
push
fcmove
dec
icebp
std
add
jl
dec
or
cld
dec
sbb
ss
or
dec
jae
xchg
push
clc
cmc
cmp
xchg
pop
mov
cmps
pop
arpl
imul
xor
call
adc
push
pop
xchg
pusha
xchg
inc
xor
sub
sub
mov
ror
xchg
ins
xchg
pusha
jle
dec
cmp
sub
mov
gs
or
sbb
mov
rol
test
enter
inc
push
pop
mov
stc
aad
xchg
jmp
std
clc
sbb
fadd
icebp
lds
ja
mov
jp
push
scas
fld
test
lds
pop
adc
inc
push
xchg
sub
xchg
push
repnz
lds
aas
(bad)
cld
pop
lods
movs
repz
mov
in
add
bound
outs
jae
adc
pop
(bad)
shl
daa
lods
sti
push
mov
repnz
in
mov
push
push
pop
and
inc
mov
push
leave
sub
dec
in
xor
pop
pop
and
pop
popf
push
dec
add
(bad)
out
int
jmp
shr
idiv
ins
push
sub
xor
pop
ins
hlt
lods
daa
loope
and
out
inc
(bad)
aam
dec
cmp
inc
sub
mov
mov
sar
adc
mov
push
xor
movs
push
movs
cmp
sbb
sub
dec
loop
std
add
push
stos
(bad)
jmp
lods
pop
xor
sub
mov
int3
sub
(bad)
clc
xchg
enter
aad
dec
xchg
inc
sub
dec
stc
xor
cdq
sti
jae
fxam
push
and
dec
out
mov
aas
pop
test
fsub
adc
call
test
(bad)
sub
xor
fst
inc
and
dec
into
mov
test
inc
outs
test
push
mov
cmp
mov
nop
out
call
mov
inc
xchg
arpl
add
add
(bad)
loop
test
pushf
(bad)
push
mov
xchg
cwde
jno
enter
xor
push
sahf
adc
pop
or
retf
pop
mov
xor
cdq
inc
in
cmc
popf
sbb
cmp
clc
and
iret
fidivr
xchg
sbb
add
enter
pop
mov
mov
jg
mov
xor
jmp
xchg
call
xchg
push
dec
in
(bad)
pushf
jo
sbb
cmp
nop
jae
xchg
add
xor
scas
cmps
fist
cmc
mov
add
and
dec
or
mov
and
loopne
lea
push
ret
and
and
sbb
mov
jne
imul
sub
popa
es
xor
pop
xchg
fimul
xchg
cmp
push
push
jle
sbb
inc
dec
std
adc
cdq
scas
mov
sbb
pop
push
sbb
(bad)
mov
fist
fscale
inc
push
sbb
in
rcr
loopne
dec
ror
and
cmp
xor
loopne
fimul
xlat
gs
in
mov
cmp
push
mov
(bad)
cmp
stos
push
popa
pushf
jecxz
xor
xchg
push
loopne
pop
xchg
lock
adc
call
out
inc
rcl
xchg
xor
fidivr
outs
add
mov
leave
xchg
adc
mov
into
stos
inc
clc
fcmovne
and
neg
dec
mov
jns
mov
fwait
inc
popa
inc
cmc
adc
sbb
xor
popf
xchg
(bad)
jae
imul
imul
xor
lea
sub
aam
ins
mov
pushf
pop
icebp
imul
jbe
bound
cmp
dec
sbb
xchg
movs
ret
mov
shr
jl
repnz
jle
xor
fst
dec
outs
mov
jns
or
add
aaa
jmp
scas
add
dec
clc
iret
adc
jg
(bad)
sbb
rcr
in
pop
inc
or
pop
adc
je
jno
or
mov
jnp
xchg
call
pop
movs
xchg
add
call
adc
(bad)
jmp
dec
mov
adc
xlat
jnp
pop
cmp
lods
add
push
xchg
xor
aas
retf
test
sbb
adc
mov
popf
in
add
(bad)
loopne
(bad)
scas
or
enter
xchg
jnp
jp
call
loope
adc
jl
repz
aas
outs
lock
sahf
xor
movs
adc
lds
rol
mov
call
xchg
out
sbb
dec
ror
fs
dec
mov
mov
pop
xor
xchg
push
out
js
dec
pushf
sbb
fdivr
or
push
hlt
mov
mov
inc
ss
pop
in
xchg
cmps
pop
lods
adc
js
pusha
aam
jl
mov
(bad)
pop
jp
retf
mov
ficomp
in
cmp
int3
jnp
mov
cmc
jnp
mov
inc
leave
cmp
retf
call
mov
pop
aaa
push
and
fst
(bad)
call
out
mov
push
addr16
hlt
sbb
or
or
test
push
test
or
dec
xchg
lea
pop
mov
push
push
and
loopne
adc
test
cmp
(bad)
call
sub
mov
ins
xchg
lods
push
push
sbb
inc
add
push
dec
cmp
sub
push
or
neg
cmp
pop
fs
jecxz
cwde
sahf
cli
dec
push
rcl
adc
mov
mov
(bad)
mov
mov
mov
lock
or
push
add
pop
pop
loope
mov
leave
push
popa
mov
test
lods
popa
sbb
inc
jp
jbe
mov
in
sub
stos
jmp
repz
sahf
xor
inc
pop
add
dec
sbb
push
stos
adc
mov
popf
dec
mov
rol
mov
push
add
xor
sbb
(bad)
add
nop
cmp
test
out
je
cmp
stos
(bad)
mov
mov
push
pop
add
or
sbb
adc
inc
shl
ins
xchg
lods
adc
xor
pop
(bad)
push
inc
sar
jnp
and
mov
daa
into
les
fistp
retf
fwait
ins
xchg
or
mov
inc
int
adc
adc
push
cdq
sbb
jne
jmp
shl
(bad)
pop
popa
push
psubsw
add
neg
xor
aad
jnp
adc
inc
and
adc
iret
shl
mov
xchg
ror
leave
in
shl
xor
jmp
pop
call
js
mov
add
jbe
and
retf
in
sar
mov
jb
dec
int
loop
push
fxtract
push
arpl
dec
sti
sbb
dec
cmp
sub
out
cmp
cwde
xchg
mov
retf
lods
push
aas
or
mov
cmp
mov
ins
mov
pop
aas
dec
inc
fiadd
imul
cmp
movs
mov
xadd
mov
push
andps
out
sbb
aam
mov
sti
dec
and
sbb
hlt
xor
mov
sub
mov
fcomp
pop
push
lods
rcr
loope
fmul
inc
pop
push
sub
adc
sbb
dec
xchg
jg
sub
stos
mov
dec
aam
sbb
sub
shl
sub
rcl
and
stos
movs
mov
rcl
jne
add
push
clc
movs
rcl
sub
das
sbb
xor
mov
pop
test
rol
lock
jne
hlt
sbb
popa
stos
mov
(bad)
scas
or
push
nop
ror
test
aad
cmp
addr16
inc
jp
iret
test
icebp
sbb
push
outs
push
mov
cmps
sbb
cli
sbb
xor
adc
pushf
fsubr
adc
cmc
xor
pop
or
gs
mov
xor
mov
iret
xchg
inc
xchg
(bad)
xor
dec
call
inc
or
rol
fadd
cdq
retf
in
xlat
jne
add
icebp
out
inc
lock
cmp
inc
mov
fnstcw
in
jmp
add
iret
mov
rcr
mov
pop
ret
jbe
jmp
mov
aas
and
inc
cmp
push
inc
into
iret
outs
addr16
inc
(bad)
cmp
cmp
loopne
mov
xchg
or
push
lahf
arpl
addr16
lock
neg
(bad)
jle
ja
dec
daa
lods
mov
xchg
sahf
cmps
pop
xchg
arpl
add
lea
add
leave
xor
test
pop
das
jbe
push
mov
fild
xor
fcomp
inc
mov
es
push
push
sub
fdivr
lds
pop
mov
call
das
int3
inc
push
fmul
cmps
aam
lods
xchg
or
cld
jle
iret
dec
pop
cmps
mov
cs
mov
dec
mov
xor
in
into
xor
pop
cmp
cmps
pop
scas
inc
cmp
ror
das
dec
inc
lods
and
xchg
jp
data16
cmp
fwait
cmp
push
xchg
inc
add
popa
out
inc
pop
push
jp
cmp
xor
sub
xchg
aam
push
xchg
jl
inc
add
sub
cmps
jp
pusha
fxch
push
jmp
retf
cli
sar
xchg
mov
mov
push
gs
fs
fisub
pop
lock
pop
and
mov
mov
imul
aas
in
mov
sbb
scas
or
popf
jns
xchg
dec
iret
in
shl
in
(bad)
mov
cmp
mov
(bad)
call
mov
mov
sbb
and
sub
adc
ret
in
adc
mov
cwde
mov
(bad)
sbb
pop
ror
push
dec
push
retf
gs
in
sbb
in
outs
adc
ret
sub
pop
pop
jmp
mov
movs
pop
imul
movntq
sahf
adc
jbe
xor
test
inc
fist
ret
jmp
jne
sub
shl
push
mov
sub
(bad)
fwait
scas
int
and
enter
cmc
mov
fdivp
arpl
xchg
aaa
nop
cmp
imul
jg
and
ret
sub
je
mov
add
ret
mov
push
aas
add
xor
and
add
outs
ficomp
mov
or
xchg
ss
pop
jae
cs
movs
rcr
adc
inc
inc
test
ror
xor
loope
xor
inc
(bad)
ficomp
pusha
add
xor
fcomi
fld
repz
movs
rcr
mov
aaa
sub
pop
leave
and
mov
sub
aam
cs
test
xchg
xlat
ja
rol
mov
sysenter
add
xchg
bnd
cld
jb
hlt
cmp
add
pushf
(bad)
test
test
test
out
xor
mov
or
test
imul
pop
dec
scas
mov
jge
pop
mov
mov
sbb
xchg
sysexit
ror
add
adc
sar
je
dec
cld
jno
and
jmp
and
stc
fdiv
or
sub
mov
sbb
inc
jne
mov
mov
mov
xchg
popa
dec
aas
push
xchg
pop
ja
ds
aad
arpl
xchg
(bad)
sti
cmp
push
pop
ss
in
lds
sbb
je
(bad)
mov
lods
adc
enter
movs
push
loope
stos
jmp
lods
mov
test
add
cmp
adc
push
(bad)
scas
imul
hlt
xor
inc
fld
(bad)
movs
push
or
inc
test
fadd
push
mov
jmp
cmc
mov
sar
cmc
and
in
xlat
cmps
stos
xor
sbb
add
(bad)
hlt
loop
xchg
loop
pcmpgtw
nop
dec
outs
aam
scas
loop
clc
jo
dec
fdiv
int3
push
mov
dec
loope
out
cwde
add
outs
cmp
or
mov
pop
xchg
shr
sub
pop
js
(bad)
test
rcr
mov
scas
add
stos
xchg
fwait
test
jae
sub
jg
mov
aam
aaa
mov
push
mov
dec
mov
xor
jmp
cs
ss
sar
cli
jg
push
std
mov
fcmovu
sub
xchg
adc
push
sbb
mov
push
adc
lods
mov
lods
shl
sub
xor
sub
mov
pop
std
jg
les
fs
add
scas
ja
cmp
lods
xchg
fnsave
sub
dec
pushf
out
inc
push
xlat
pop
xchg
in
push
in
sbb
lods
out
xchg
pop
call
arpl
add
xchg
pop
pop
das
sub
es
out
dec
je
add
lods
and
sub
mov
imul
punpckldq
sar
repnz
xor
cmp
jno
mov
add
aaa
jbe
sub
mov
lahf
or
mov
and
rcl
pop
mov
and
ficom
outs
call
popf
adc
sub
js
sbb
xor
xchg
loope
inc
into
xor
push
xchg
ret
imul
mov
mov
dec
mov
movs
retf
fistp
cmc
mov
sub
pop
pushf
adc
aas
pop
lds
nop
arpl
cmps
and
push
cld
adc
ret
xlat
ins
test
xor
pop
cmc
add
mov
add
jo
ret
dec
add
mov
mov
add
and
dec
rcr
and
push
jno
addr16
daa
mov
pop
pop
iret
in
inc
push
and
mov
and
mov
out
fistp
es
ss
(bad)
jns
mov
in
push
rol
jge
out
scas
(bad)
jmp
mov
cs
jae
xor
test
sti
adc
imul
add
xor
lods
add
push
and
push
add
sbb
xor
test
cmp
sbb
pop
xor
ja
mov
add
in
xchg
add
sti
(bad)
arpl
add
dec
outs
movs
or
cmp
sbb
ins
shl
dec
adc
or
sbb
mov
mov
jge
jno
push
jle
or
test
cmp
cmp
dec
xor
sbb
je
cmp
mov
fld
sbb
pop
or
icebp
or
(bad)
cli
mov
sar
sar
fiadd
scas
sbb
push
inc
fwait
sub
sahf
sti
xchg
xor
pop
inc
fstp
mov
and
sub
pop
sti
push
cmc
xor
in
adc
push
push
adc
gs
(bad)
sar
test
lahf
mov
cwde
jb
out
out
popa
jp
pop
cmc
leave
xlat
ins
dec
pop
sbb
inc
or
pusha
push
cmp
adc
movs
xor
fsin
hlt
push
cmp
or
aaa
into
jle
ffreep
jmp
retf
pushf
dec
stos
and
sbb
inc
sahf
daa
push
add
mov
xor
pop
xor
jae
pop
mov
sbb
pushf
retf
adc
pop
sbb
sub
(bad)
sbb
adc
out
or
cmp
popa
pop
sbb
fstp
mov
mov
mov
aaa
and
mov
fcmovnbe
stc
sbb
call
scas
jo
(bad)
outs
add
(bad)
in
add
imul
jno
add
cwde
(bad)
jo
(bad)
mov
push
popf
add
mov
lods
popa
xchg
mov
gs
enter
jge
popa
sub
cmp
int3
dec
add
imul
cdq
mov
leave
add
stos
jecxz
out
ret
retf
pop
xor
mov
push
mov
cmp
pop
test
stos
sub
outs
daa
movs
jmp
mov
dec
dec
cmc
xchg
xchg
ja
pop
fs
stos
pop
(bad)
mov
mov
movs
mov
xor
xor
lea
pusha
sub
sub
pop
xor
lds
outs
inc
lds
inc
call
sbb
fmul
dec
mov
and
xor
jmp
popf
das
arpl
mov
mov
icebp
lock
movs
push
cmp
repnz
dec
xchg
sbb
add
mov
push
mov
xor
add
ret
sub
jmp
(bad)
shr
adc
push
mov
out
fiadd
inc
icebp
fs
push
cmp
out
sahf
xor
xlat
add
adc
stos
push
fild
mov
fucomi
imul
inc
loopne
(bad)
adc
dec
xor
xor
dec
inc
jg
out
dec
gs
cwde
mov
das
les
dec
or
aaa
cmp
xchg
pusha
pusha
mov
enter
loopne
xchg
adc
sbb
addr16
jb
gs
xor
adc
clc
jl
sub
xlat
pop
(bad)
int
xlat
pop
push
ret
sbb
mov
ret
sub
out
mov
ds
arpl
sub
mov
popf
adc
push
sbb
iret
leave
enter
add
mov
add
sbb
rcl
stc
enter
sbb
jne
xor
adc
mov
jmp
mov
add
loope
and
dec
mov
sbb
adc
xchg
jbe
stos
mov
jnp
test
xor
cli
pop
pop
inc
loope
pop
retf
ret
std
lods
push
cmps
inc
das
sbb
mov
cli
inc
jno
adc
loope
sub
fwait
dec
cmp
xor
fwait
into
imul
xchg
mov
cmp
sub
dec
out
inc
ret
sbb
ficomp
cmc
outs
lods
inc
cli
mov
sub
clc
mov
jbe
xor
mov
pop
shr
or
mov
es
or
std
sbb
mov
inc
add
dec
icebp
mov
or
and
inc
xor
call
inc
xchg
jo
ds
dec
mov
dec
cwde
add
add
fdivr
push
mov
xor
ds
xor
lock
retf
pop
add
cmc
ret
cld
hlt
sub
mov
xchg
iret
(bad)
(bad)
pop
cwde
mov
push
and
push
test
add
scas
mov
psrad
loopne
jmp
cmp
test
in
or
mul
test
ds
dec
mov
jo
jmp
push
sbb
push
cld
cmp
mov
jmp
adc
arpl
xor
ds
xor
xchg
jge
imul
push
leave
mov
jno
xchg
aaa
mov
fisub
mov
dec
xor
adc
xchg
xor
aam
stos
push
pop
sub
ja
arpl
mov
outs
adc
cmp
sbb
ins
enter
mov
mov
push
daa
push
(bad)
and
inc
mov
cdq
and
add
in
pop
dec
data16
outs
cmp
call
pop
ins
xchg
mov
or
fstp
clc
inc
pop
rcl
add
imul
test
outs
test
mov
xor
jne
dec
or
dec
retf
data16
pop
scas
and
imul
test
jno
hlt
push
scas
push
ins
(bad)
mov
mov
mov
mov
pop
imul
xor
adc
mov
out
fdiv
xchg
ret
inc
sbb
inc
int
jge
aad
ss
pop
push
and
lds
mov
mov
mov
mov
or
and
push
les
das
pop
inc
mov
cmp
lods
sbb
push
in
pop
ss
add
fsubrp
and
xchg
ja
mov
fistp
pusha
jo
mov
mov
loopne
fwait
ds
es
inc
int3
jmp
int3
mov
mov
inc
stos
loop
adc
test
mov
push
sub
cs
stos
sbb
cmp
xchg
push
push
mov
add
(bad)
xchg
hlt
push
test
das
pop
call
or
les
cld
jb
mov
inc
sub
fnstenv
mov
push
test
cmp
xor
mov
pop
imul
dec
mov
cmp
cwde
or
cdq
sbb
pop
mov
jo
pop
pop
mov
shl
pop
pop
sbb
mov
xchg
dec
test
jnp
mov
push
data16
pop
jnp
pusha
and
push
sub
test
lods
test
mov
cmp
cdq
int3
add
push
sbb
neg
or
test
lods
call
sbb
adc
int
ins
sub
mov
call
mov
lds
out
outs
fisttp
adc
repnz
mov
sar
and
dec
mov
or
mov
ficomp
jbe
jbe
into
or
xlat
add
stc
adc
sbb
cmp
(bad)
xchg
adc
mov
xchg
jns
sbb
repz
and
push
gs
dec
lahf
lds
mov
lods
dec
or
jae
xchg
and
mov
mov
sti
jge
pusha
movs
cmp
inc
nop
xor
loope
ds
dec
pop
daa
dec
inc
xor
ins
(bad)
push
sti
jnp
sbb
mov
inc
sbb
hlt
in
lods
sbb
(bad)
and
movs
dec
sbb
xchg
cmp
in
push
mov
fsub
test
push
data16
adc
iret
and
mov
retf
add
adc
out
jns
pop
mov
jmp
jae
das
daa
and
stc
adc
mov
sub
push
xlat
fdiv
and
outs
daa
pop
ss
lock
push
outs
scas
lods
mov
sub
mul
pop
das
cmovne
mov
clc
push
arpl
mov
cli
jns
icebp
movs
sbb
and
xchg
(bad)
pusha
addr16
lea
daa
add
rcl
and
movs
popf
sub
ret
(bad)
add
jns
in
push
(bad)
inc
mov
loope
stos
test
mov
add
iret
adc
daa
mov
aam
pop
js
mov
mov
adc
iret
test
aas
dec
inc
fdivr
adc
sti
add
ret
jo
cmps
pusha
add
rcr
cwde
push
sbb
es
and
fsub
jecxz
inc
dec
nop
adc
call
loop
aad
pusha
and
in
inc
rcl
adc
lea
mov
inc
outs
mov
xchg
shl
jbe
sbb
add
fwait
mov
mov
mov
pop
ins
and
popa
add
in
inc
mov
fadd
inc
mov
add
dec
imul
(bad)
shl
xchg
inc
inc
sub
pop
xchg
inc
in
enter
inc
mov
push
or
test
inc
push
mov
or
mov
mov
stc
aas
push
mov
add
mov
pop
int3
addr16
or
mov
in
mov
stos
cdq
cs
mov
inc
mov
mov
mov
adc
in
jge
call
jge
sbb
mov
arpl
mov
pop
sub
daa
push
enter
jle
mov
ins
pop
dec
xchg
aad
das
add
retf
or
es
imul
(bad)
dec
jae
loop
fs
xchg
cld
sub
jge
xor
mov
addr16
add
out
mov
mov
imul
add
mov
fstp
cwde
pop
jmp
shl
int
or
mov
push
lods
cld
cdq
push
data16
dec
fucom
xchg
mov
stc
push
test
or
dec
in
das
in
xchg
or
lods
xchg
ins
sti
jge
aaa
mov
inc
dec
push
dec
nop
movs
pop
mov
mov
imul
xlat
xor
test
and
int3
(bad)
iret
fisub
ins
enter
imul
xlat
sub
mov
jmp
(bad)
or
movs
mov
cmp
call
arpl
retf
pop
push
jp
ins
in
iret
int
cmp
fdiv
lods
ret
cmps
xchg
dec
and
xor
mov
lea
jb
data16
inc
or
push
int3
sar
inc
cmp
fninit
or
xchg
out
push
push
xchg
mov
scas
loopne
jle
mov
leave
movs
fs
popa
pop
addr16
jl
mov
dec
push
mov
sbb
push
outs
mov
push
inc
cdq
sbb
ds
pop
lods
je
sub
out
and
div
lods
jnp
xchg
cmp
jmp
cmps
adc
jo
fild
inc
fbstp
enter
add
int3
inc
cmp
push
or
push
inc
dec
imul
jbe
movs
inc
and
pop
in
call
test
test
leave
inc
push
and
cdq
fisttp
cmp
xchg
adc
ins
mov
mov
or
sbb
mov
xchg
int
psubq
cwde
jno
mov
push
int
adc
ror
ret
pop
pop
mov
inc
sbb
lahf
gs
sbb
js
outs
outs
pop
mov
inc
lods
cmp
pop
xor
mov
mov
cmps
mov
loope
mov
stc
ss
pop
sub
cmc
xor
add
add
out
(bad)
ss
dec
aam
xor
test
gs
sub
sbb
test
mov
ror
outs
arpl
push
in
mov
arpl
sbb
jo
and
pop
cdq
fdiv
ror
sbb
pop
cmp
sub
xor
push
test
add
sub
cmp
add
dec
push
and
in
loop
cmps
jl
cwde
push
xor
adc
xchg
push
adc
and
mov
sbb
inc
adc
mov
xor
cld
add
call
and
pop
cmps
fmul
inc
addr16
gs
pop
and
test
lea
dec
div
cmp
out
mov
pop
mov
mov
sbb
cmps
cmp
test
test
xchg
rcr
sbb
dec
popa
push
ins
and
popf
popf
icebp
xchg
int
or
adc
push
(bad)
push
je
sub
(bad)
pop
dec
mov
sbb
push
pop
mov
lea
cmps
pop
and
push
and
(bad)
scas
cwde
fidiv
push
push
sub
xchg
add
arpl
cmp
add
or
pop
xchg
aad
add
loopne
jmp
in
imul
call
add
loope
mov
push
shr
inc
xor
out
imul
outs
mov
mov
mov
ja
xchg
in
push
sbb
in
sbb
mov
rcr
jecxz
test
xchg
fisub
jmp
ss
scas
jg
das
sub
inc
(bad)
mov
jbe
jae
mov
xchg
sub
shr
scas
push
cmp
push
mov
icebp
xor
lahf
div
jecxz
(bad)
sbb
pushf
sub
nop
into
inc
pop
cmp
dec
sbb
ret
jmp
xor
xor
outs
sub
inc
stos
sub
fwait
aas
sbb
or
imul
in
pop
dec
mov
mov
rcr
(bad)
jo
sahf
scas
xchg
inc
sahf
or
mul
and
mov
ins
iret
cmps
leave
cli
fwait
and
jmp
(bad)
fs
fild
(bad)
in
jmp
nop
stc
cmp
shr
adc
rcr
or
push
in
push
fisubr
movq
mov
pop
imul
xchg
sbb
xchg
mov
mov
and
mov
ret
retf
jae
scas
outs
call
sbb
xchg
pop
cmp
call
fisubr
cld
cmp
xor
push
stos
xor
stos
or
pop
dec
ins
jp
scas
sahf
loope
inc
popf
stos
cmp
inc
dec
mov
sbb
push
cmp
xchg
hlt
fadd
mov
sub
test
aas
lods
(bad)
es
push
cmp
std
mov
out
sbb
iret
imul
arpl
popf
ins
std
jmp
daa
stos
movs
ins
in
pop
dec
xor
test
ret
push
cmc
xchg
repz
xor
ins
and
sahf
jns
mov
nop
fnstcw
add
pushf
mov
lods
(bad)
retf
jae
push
cmp
inc
aaa
scas
mov
dec
icebp
cmp
loop
adc
cwde
test
and
or
adc
xor
mov
adc
cwde
test
and
or
adc
xor
mov
adc
cwde
test
and
or
adc
xor
mov
adc
cwde
test
and
or
adc
xor
mov
adc
cwde
test
and
movs
inc
sub
push
push
jge
sti
push
or
sbb
fwait
fs
mov
stos
cmp
in
int
jg
movs
call
sub
loop
ret
mov
das
mov
mov
not
leave
test
sub
sbb
sub
repnz
fcom
data16
clc
push
add
add
sub
push
ja
or
inc
test
and
outs
cmc
std
jb
xor
inc
scas
mov
or
xchg
xor
inc
outs
ret
aad
jp
ss
xchg
lahf
xchg
xchg
pop
lods
mov
jno
jge
arpl
xor
or
retf
mov
fsub
jne
adc
inc
xor
bnd
cld
adc
jns
adc
pop
mov
(bad)
cli
mov
hlt
out
jmp
int3
xchg
pop
test
test
dec
gs
std
sahf
fs
pop
cli
inc
and
stc
xlat
fild
mov
retf
sub
sti
dec
cwde
jg
add
mov
cmp
lahf
mov
in
aas
cmps
pop
repnz
mov
fwait
cmp
mov
and
mov
sbb
sub
xchg
aaa
inc
inc
pusha
xchg
iret
push
cmp
stos
les
inc
pusha
ins
adc
lods
out
ror
daa
(bad)
sub
push
in
pop
xor
lock
iret
or
pop
sub
ja
nop
fisubr
sti
neg
loopne
lahf
xor
out
cmp
test
add
push
rcr
int3
xchg
test
retf
xchg
xchg
cmp
fs
cmp
daa
push
adc
mov
push
jl
imul
mul
cmp
push
loop
ret
retf
jb
xchg
add
push
push
inc
fwait
inc
add
add
out
jmp
arpl
popf
je
pushf
mov
(bad)
(bad)
es
xor
push
jmp
mov
or
push
xchg
movs
pop
cdq
stos
or
inc
push
add
mov
ja
and
mov
aad
pop
cmps
rcl
mov
pop
pop
test
mov
imul
jo
mov
jle
out
mov
cmc
jno
adc
mov
iret
mov
dec
xchg
cmp
and
(bad)
in
ss
test
retf
test
ins
cmps
dec
jg
xchg
xor
mov
int
retf
cmp
fbstp
dec
idiv
cmp
scas
pop
sub
test
mov
pop
sbb
iret
jns
js
not
fadd
into
push
cmps
shl
in
xor
test
(bad)
lock
sub
cmp
call
rol
and
idiv
out
dec
adc
mov
aaa
test
enter
out
push
in
mov
jae
dec
loop
sub
aas
cmps
cmps
neg
imul
or
js
in
das
mov
test
adc
stos
cmp
test
(bad)
sbb
cmc
xor
daa
imul
cmp
and
jle
add
sub
std
mov
push
adc
cmp
sbb
je
cmps
mov
jg
jo
jae
js
pusha
xlat
out
xor
call
les
sbb
xchg
inc
pop
lods
and
and
mov
fld
pop
pop
xor
cld
icebp
xor
mov
pushf
dec
sub
mov
les
push
inc
out
(bad)
(bad)
adc
push
das
icebp
mov
movs
(bad)
cmp
ret
arpl
push
(bad)
icebp
jno
ins
pushf
mov
ret
test
fsub
mov
dec
jecxz
mov
xor
sub
cmp
cmc
lds
or
sbb
sahf
and
out
mov
(bad)
xlat
test
jmp
sub
aas
mov
inc
ror
adc
aas
loop
fisub
dec
mov
jbe
(bad)
cmp
retf
pop
jnp
inc
imul
cmp
add
mov
leave
fsub
arpl
outs
aaa
test
lds
push
push
rcr
loop
lods
int3
jb
lods
xor
mov
cmc
sub
into
or
clc
repnz
call
in
add
xor
fnstsw
fld
push
and
dec
mov
mov
mov
pop
dec
push
mov
test
scas
sub
js
or
(bad)
fisubr
out
test
test
xor
xchg
jo
inc
mov
mov
mov
jns
jmp
mov
and
and
idiv
popf
adc
fistp
pop
nop
mov
xchg
jp
clc
push
mov
call
shl
add
push
fucom
leave
lahf
or
mov
jecxz
push
pusha
jg
jnp
outs
or
inc
stos
pop
sub
add
push
movs
ins
pop
sub
jbe
in
lock
movs
loop
xor
shl
or
(bad)
jbe
push
xchg
inc
call
repz
clc
push
nop
icebp
jle
adc
or
and
jp
mov
fdivr
xchg
cmp
and
or
jo
fucomi
xchg
in
lea
call
push
or
or
sub
jbe
pop
or
jmp
jbe
(bad)
icebp
scas
xor
xchg
arpl
mov
enter
xchg
loop
xor
mov
fiadd
mov
pop
mov
jle
js
nop
inc
test
adc
push
scas
adc
cmp
dec
aad
rcl
mov
cmp
push
stc
inc
loop
stos
mov
sbb
clc
icebp
ins
loop
sbb
je
jno
jp
xchg
cdq
or
pop
movnti
pop
je
out
loope
popf
adc
add
int3
(bad)
lock
xchg
jbe
add
fistp
push
sahf
frstor
cwde
call
sub
push
stos
mov
mov
and
jb
popf
(bad)
mov
pop
mov
(bad)
mov
mov
mov
xlat
fstp
lods
jns
cmp
mov
mov
(bad)
retf
test
jecxz
push
fdiv
ins
js
dec
jmp
mov
(bad)
dec
mov
and
ins
repz
sbb
ss
cmp
rol
adc
fisub
mov
ds
pop
out
inc
aad
shl
mov
(bad)
adc
sub
jno
out
pop
in
imul
in
mov
sbb
cmp
jle
out
mov
inc
std
hlt
pop
xlat
ret
mov
test
in
adc
push
ret
push
test
mov
cmp
inc
inc
jmp
mov
stos
sub
sub
push
push
loope
cmp
xchg
adc
add
daa
adc
mov
push
push
pop
(bad)
shl
fnstsw
add
fxch
lahf
jb
push
popf
mov
ds
cs
inc
pop
lea
xor
ret
adc
fucomp
mov
ins
dec
daa
jecxz
mov
in
mov
mov
lods
sub
fmulp
lahf
sbb
xchg
jo
push
loopne
xor
outs
test
es
mov
into
outs
in
out
dec
scas
arpl
jne
mov
fdivr
pop
(bad)
adc
push
ins
aaa
cmp
adc
jle
rcr
int
mov
xor
std
jmp
mov
adc
sbb
push
lods
fs
xchg
inc
xor
jne
scas
sub
add
mov
inc
popa
mov
idiv
push
sbb
push
xchg
push
out
into
sbb
rol
cmps
and
call
push
xlat
dec
jne
(bad)
ins
shl
imul
mov
outs
mov
loopne
jae
lods
fcmovnbe
mov
outs
mov
sub
jmp
ins
dec
pop
bswap
clc
mov
jo
rcl
or
dec
ins
aas
jne
inc
add
aad
cmp
movs
or
movs
xor
push
bnd
shl
push
call
and
mov
xchg
or
jb
inc
or
mov
in
mov
push
loop
mov
inc
inc
mov
out
pop
jno
fild
or
dec
aam
pop
mov
(bad)
hlt
pop
or
push
cmp
iret
in
das
daa
cld
pop
and
aad
sar
fcomp
xor
dec
adc
inc
push
mov
or
jecxz
aas
adc
push
dec
cdq
in
jbe
sbb
je
push
mov
movs
cmp
aaa
fwait
(bad)
pop
lea
loopne
popa
inc
sti
pop
jae
fwait
pushf
lea
fdiv
cwde
push
mov
pop
ins
aam
mov
fcmovu
pusha
or
or
and
ss
mov
inc
aam
popf
in
push
jnp
sub
jno
cwde
sub
xchg
mov
cmp
cwde
(bad)
mov
loop
cmps
js
xor
mov
mov
cmp
jmp
cmp
jge
(bad)
xchg
cmps
fs
mov
(bad)
dec
out
mov
jns
xor
add
mov
push
xor
sub
pushw
cmp
daa
and
rcl
inc
rol
push
mov
test
mov
adc
xor
or
fldenv
dec
xchg
leave
in
lds
nop
inc
stos
shl
arpl
mov
dec
into
inc
mov
ds
sub
fs
sbb
cmps
aas
das
sbb
jmp
sbb
adc
and
xchg
pop
out
push
adc
adc
xchg
pop
dec
das
sub
inc
jp
test
dec
mov
sbb
retf
mov
cmps
cmp
adc
and
fsub
push
scas
or
jns
xor
aaa
fadd
adc
enter
push
mov
mov
jo
jae
ins
enter
rol
mov
cmp
xchg
mov
out
sbb
adc
fldenv
or
fidiv
test
std
or
xchg
dec
movs
sbb
inc
aas
arpl
push
ins
clc
cmp
in
fsub
cwde
xchg
mov
arpl
int
outs
mov
iret
nop
in
sti
loop
mov
sbb
sti
movs
in
in
fdiv
jo
mov
stos
test
sub
adc
or
fnstcw
out
jge
fwait
cmp
hlt
fdiv
xor
fwait
imul
neg
lahf
mov
jge
xchg
add
and
or
cmp
xor
mul
add
xor
mov
push
xor
pavgb
mov
movs
adc
fwait
test
fwait
jl
shl
js
ins
fdivr
enter
ror
jmp
sbb
popa
sti
jmp
sbb
pop
aas
inc
jae
xchg
(bad)
xlat
xlat
mov
mov
(bad)
aas
jne
cmps
leave
mov
in
ins
push
scas
cmp
jne
cdq
add
arpl
sub
pop
xchg
xlat
call
mov
pop
rcr
dec
cld
cmp
fs
jbe
xor
add
fidivr
inc
and
daa
sbb
cmp
dec
pop
enter
lods
lods
jb
sbb
lds
cmp
mov
mov
mov
jmp
outs
repz
sbb
sub
inc
xlat
sub
out
std
push
mov
into
add
mov
inc
arpl
mov
cli
sbb
add
js
jnp
cld
cmp
jmp
adc
cmps
(bad)
in
mov
sub
mov
adc
fwait
in
ror
retf
and
mov
xchg
inc
inc
push
cwde
jns
std
loope
pop
call
add
push
xchg
pusha
js
inc
sti
pop
icebp
mov
enter
pop
(bad)
sbb
(bad)
mov
les
or
movs
cwde
mov
dec
adc
add
mov
sub
xchg
cmp
push
sbb
cld
ror
pop
jno
jl
push
push
sub
push
push
mov
das
push
stc
or
int
cwde
cmp
push
fs
arpl
pop
enter
jecxz
sub
int3
lock
leave
test
xchg
dec
arpl
ror
addr16
popa
mov
nop
dec
movs
ret
mov
mov
inc
imul
in
(bad)
cmc
jle
mov
jne
mov
outs
push
push
and
cmc
inc
ret
mov
push
push
out
mov
dec
shl
imul
lods
mov
ds
sub
rol
repz
call
aas
pop
aad
lods
push
jle
arpl
or
data16
inc
ret
add
xor
dec
sar
adc
mov
test
mov
adc
ret
push
(bad)
xor
ret
and
mov
ins
mov
in
into
in
and
fabs
cdq
js
cmp
or
mov
jl
lds
retf
inc
(bad)
or
jbe
pop
jae
pop
adc
ins
cmps
xor
mov
sub
mov
xor
scas
loope
hlt
and
pop
int3
push
fnsave
cmp
xchg
adc
mov
or
push
dec
in
in
mov
fs
adc
into
inc
and
repz
and
mov
test
pop
mov
dec
mov
dec
pop
lock
inc
xor
pop
push
popf
or
(bad)
pop
xchg
dec
xchg
movs
out
aam
addr16
retf
shl
imul
jns
sbb
imul
ror
add
and
loop
sti
dec
mov
mov
sbb
ret
int
into
imul
cmp
addr16
rcr
xlat
repz
or
sbb
xchg
das
mov
stos
das
pop
inc
push
jp
or
adc
and
call
scas
fist
dec
lock
enter
xor
outs
xor
scas
xchg
in
into
inc
dec
xlat
adc
push
lds
sub
pop
fdivr
fiadd
aam
(bad)
int3
bound
mov
retf
fcmovbe
pop
pop
shl
mov
push
push
repz
push
cmp
dec
xchg
xor
mov
in
mov
jmp
icebp
jbe
aam
in
lods
adc
cmp
mov
pop
dec
xor
or
in
mov
out
into
into
mov
mov
add
into
bound
shr
push
sub
ret
and
sbb
cmp
inc
jmp
sub
dec
addr16
sbb
fadd
addr16
sahf
jnp
(bad)
mov
add
dec
lods
dec
cmps
jno
or
add
adc
cmp
sbb
dec
or
ret
sub
push
add
out
arpl
adc
loop
and
fs
sbb
int
pop
shl
and
int
add
sar
mov
sub
xchg
adc
pop
or
retf
adc
mov
xor
inc
jne
jmp
jge
jmp
hlt
and
jg
cmp
sar
and
dec
inc
idiv
push
iret
fisub
leave
stos
icebp
mov
arpl
into
stos
call
cmp
inc
in
push
or
pop
dec
inc
retf
fidiv
jp
aaa
and
cs
call
mov
mov
(bad)
aas
repz
jg
xchg
adc
dec
retf
pop
scas
cmp
clc
xor
in
inc
and
mov
fcomip
call
fucomp
dec
and
fucomip
loopne
loop
scas
popf
into
jge
aam
add
(bad)
imul
sbb
sub
cmps
cmp
les
into
cmp
mov
xchg
jmp
repnz
dec
leave
push
mov
leave
(bad)
es
repnz
and
fsubr
das
popf
fstp
shl
add
pop
cld
icebp
fnstenv
xlat
rcl
jae
lea
das
dec
lods
int3
xchg
or
and
dec
sbb
jae
jg
sub
aaa
test
stc
stos
add
sbb
out
mov
mov
scas
cbw
cld
inc
pop
sti
inc
mov
icebp
pop
int
(bad)
cmps
enter
ja
jp
adc
push
mov
cmps
out
pop
push
jns
cli
jo
test
push
pop
mov
dec
jno
jle
sbb
inc
mov
into
mov
fs
sbb
xor
xchg
scas
fadd
fimul
leave
xchg
mov
scas
movs
add
mov
mov
push
pop
push
inc
int3
in
ins
out
fsubr
and
daa
mov
retf
mov
cdq
outs
cmp
xchg
pop
push
push
mov
or
and
lock
push
dec
in
mov
jle
stos
into
mov
ins
jo
fcom
(bad)
out
xchg
mov
sbb
xchg
adc
int3
inc
lahf
inc
add
pop
cmp
cmp
jae
push
fbstp
shl
gs
jnp
in
test
int3
ror
or
sbb
jecxz
out
and
aas
scas
repz
in
ret
jbe
push
ja
aas
add
push
arpl
mov
enter
cwde
jle
inc
es
movs
mov
dec
pushf
ja
push
scas
push
lock
aam
fcomp
push
in
mov
imul
or
jne
jl
dec
iret
and
jl
aas
jle
(bad)
or
mov
int
scas
in
mov
push
(bad)
and
cmc
xchg
jnp
out
arpl
xchg
repz
cli
retf
cdq
movs
mov
call
pop
lock
mov
jg
mov
das
cmp
adc
sbb
xor
add
sti
adc
jmp
lods
push
and
mov
into
add
test
outs
out
sar
cmp
outs
sbb
das
jp
adc
cmps
ins
ins
mov
lea
or
mov
ret
fwait
jmp
xor
mov
aad
loopne
cs
bound
pop
out
cmp
pop
sbb
test
or
mov
ins
aam
jge
pop
and
in
mov
push
adc
jl
movs
cli
and
jl
xchg
jne
xchg
out
lds
rcr
iret
popf
(bad)
cmp
pop
cmps
cmp
out
stos
lods
scas
(bad)
jg
mov
ficomp
dec
inc
xor
loopne
fs
dec
add
mov
mov
in
stc
add
or
fpatan
push
dec
mov
pop
or
loop
sbb
jno
mov
movs
inc
mov
icebp
(bad)
leave
jecxz
pop
outs
or
jne
movs
xchg
mov
out
in
mov
clc
pop
(bad)
adc
(bad)
rcr
nop
push
nop
pop
in
jmp
in
hlt
xchg
fistp
mov
arpl
fild
shl
shl
rcr
push
mov
sub
pop
add
add
imul
cs
cmps
inc
or
lahf
cmc
aam
inc
out
or
out
mov
mov
dec
call
or
ds
sub
push
ss
in
push
sub
and
mov
fstp
mov
std
jg
fst
xor
stc
test
xchg
bound
fdiv
add
hlt
inc
(bad)
mov
lahf
arpl
sbb
dec
push
xor
cmps
push
pusha
ret
inc
adc
ss
push
push
inc
mov
cmp
mov
inc
shl
dec
fst
jnp
dec
adc
dec
imul
aaa
pop
imul
cmp
cmc
mov
and
push
scas
fidiv
and
push
neg
dec
call
repnz
cli
into
gs
aaa
in
pop
push
mov
jno
stc
in
jno
in
mov
inc
jns
jg
mov
shl
pop
popa
push
inc
lahf
or
test
sub
fsub
or
push
scas
je
mov
xchg
popa
dec
cmp
lahf
or
mov
mov
aas
test
cmp
push
iret
retf
cdq
aaa
sbb
rol
out
xor
push
sbb
mov
adc
xor
ret
into
xor
test
jmp
mov
jg
ja
pusha
mov
jge
sub
pop
ss
adc
push
mov
shl
shl
cmp
repnz
add
cmc
pop
in
mov
hlt
ds
sbb
lds
sub
push
and
adc
xchg
addr16
inc
shufps
dec
aam
movs
jb
push
pop
and
nop
sub
xchg
inc
add
cmps
xchg
adc
inc
mov
outs
or
fs
scas
sbb
sub
mov
cmp
inc
lock
mov
cmp
(bad)
in
mov
jne
lods
loope
iret
mov
jno
clc
jecxz
movs
aad
mov
add
or
in
mov
jmp
inc
xor
cmp
jmp
cs
stc
in
aaa
pop
xor
cli
inc
jbe
mov
cli
pusha
std
sub
jns
cmp
cs
pop
cli
jbe
ds
mov
pop
adc
sub
data16
popf
cld
mov
inc
and
dec
aam
dec
fcmovne
aad
nop
inc
jl
xor
pusha
rcl
(bad)
sub
scas
or
or
stos
test
dec
xor
sub
cmp
dec
in
stos
jno
sahf
imul
aas
ret
xchg
push
loop
sbb
call
inc
por
sbb
ror
jmp
pop
mov
sub
sub
arpl
(bad)
cmp
cmp
fimul
leave
cmp
dec
das
(bad)
sub
pop
adc
stos
xchg
sub
lea
sub
jmp
push
addr16
neg
cmps
jmp
lods
pushf
imul
and
in
ins
iret
jmp
and
cmc
dec
ins
std
fwait
jns
adc
sbb
test
nop
pop
xchg
inc
fsub
lahf
sahf
cld
mov
dec
pusha
cmp
sub
imul
retf
or
jle
cwde
jne
and
pop
test
stc
fisub
push
pop
jae
cmp
fsub
adc
mov
(bad)
idiv
fwait
bound
mov
mov
test
and
sub
and
inc
inc
and
push
popf
stc
push
xlat
pop
mov
fcom
imul
mov
sbb
call
pop
and
in
or
imul
sub
push
in
cmp
jg
cmp
push
dec
jmp
outs
fsubr
cwde
in
inc
fcomp
shl
push
dec
sbb
clc
cs
fnsave
fmul
cmp
int3
bound
clc
fbstp
fadd
mov
cmc
imul
and
(bad)
aad
sbb
xor
cmp
test
add
retf
inc
shl
sub
ror
mov
sub
out
and
mov
stos
pop
mov
inc
(bad)
stos
shr
inc
shl
retf
movs
jns
push
xor
dec
jp
add
cdq
inc
out
ins
mov
je
ja
test
add
lahf
xor
pop
cli
sub
mov
inc
aam
aas
nop
mov
cli
aad
mul
push
lds
loopne
pop
mov
sar
and
test
mov
add
stos
mov
sbb
and
adc
sbb
push
arpl
push
xor
push
jno
icebp
int3
and
push
adc
sub
push
dec
sbb
pop
jns
or
pop
jmp
sub
pop
hlt
cmc
mov
(bad)
bound
fist
cmp
je
push
or
data16
dec
jne
and
push
push
push
push
or
mov
xchg
and
push
sbb
mov
repnz
mov
pop
dec
shl
outs
jp
mov
sub
adc
aam
xlat
or
pop
ret
mov
mov
adc
sub
test
dec
or
xchg
push
ins
push
outs
fdivr
cmps
test
nop
push
outs
daa
adc
sahf
adc
add
cmp
mov
push
xchg
push
push
gs
push
or
mov
pop
fs
sbb
mov
retf
bound
push
test
jbe
sub
in
cmp
sbb
push
add
add
adc
and
add
inc
add
mov
nop
mov
xor
mov
pop
retf
xor
dec
add
push
cmp
adc
dec
test
inc
mov
dec
jnp
div
inc
gs
adc
dec
and
dec
add
sbb
sub
adc
jnp
jl
push
xor
push
jbe
pop
jne
popf
jmp
lods
push
outs
mov
xchg
hlt
jp
jg
out
in
adc
retf
ror
loop
enter
mov
dec
ja
aas
out
aaa
xchg
sbb
pop
pusha
mov
(bad)
sbb
movs
xchg
movs
or
leave
ss
lahf
fwait
dec
xchg
cmp
ficomp
lods
mov
sti
add
xor
lods
and
jmp
jge
loope
cmp
lods
jl
jbe
bound
and
mov
mov
stos
jne
mul
or
fcom
xchg
cld
fisubr
(bad)
and
sbb
fld
or
mov
xchg
cli
in
jns
jmp
inc
enter
cs
nop
and
pop
mov
je
jno
sbb
mov
sbb
into
sub
arpl
hlt
xor
fidivr
mov
pushf
xchg
sti
xor
dec
fisttp
pop
mov
out
mov
aas
pop
js
cli
outs
inc
mov
movs
ret
aam
mov
les
jmp
in
div
pop
pop
int3
jnp
inc
cmp
ret
xor
aas
push
dec
inc
out
add
xchg
loop
mov
dec
in
and
cli
loop
fxam
dec
mov
pop
imul
fild
mov
mov
adc
mov
jge
lock
inc
icebp
mov
call
fs
loope
push
xchg
int3
and
fnsetpm(287
or
mov
pop
outs
jl
daa
and
retf
add
adc
aas
push
jmp
(bad)
jl
sub
jecxz
pop
inc
lock
xchg
mov
(bad)
movs
fld
popa
stc
inc
daa
xor
and
int3
ins
call
mov
mov
push
xor
ret
jge
pop
mov
bound
sbb
dec
fdiv
das
(bad)
push
dec
and
xchg
pop
mov
dec
push
push
lahf
sar
and
xchg
fistp
xor
pop
push
inc
out
cmp
mov
movaps
mov
add
mov
cmp
inc
les
rol
or
out
cmp
mov
nop
mov
imul
in
mov
data16
cmp
mov
pop
or
fs
stos
fistp
cmp
push
pop
iret
mov
mov
mov
test
mov
mov
sar
and
test
(bad)
(bad)
ss
xor
dec
(bad)
cmp
jge
add
int3
lea
loope
ja
(bad)
pop
ficomp
pop
repz
sbb
or
and
jo
adc
inc
(bad)
mov
and
pop
iret
xor
add
(bad)
push
add
cmps
pop
or
test
adc
xor
nop
xor
out
xlat
test
into
cmp
lahf
add
sar
push
scas
mov
push
ds
inc
mov
xchg
xchg
fimul
cs
inc
dec
pop
xchg
and
fild
ret
test
fidiv
sar
mov
mov
sbb
out
dec
and
stos
dec
in
mov
mov
into
ret
cwde
push
fidiv
popf
xchg
mov
mov
push
retf
ins
test
xor
mov
adc
loop
retf
lds
in
ret
sub
jp
shr
cmp
mov
fstp
into
xor
ins
sti
aas
stos
js
frstor
punpcklbw
push
sub
sbb
jp
std
aam
jmp
add
or
(bad)
imul
xor
mov
in
xchg
jp
into
call
inc
push
jbe
xlat
idiv
cmps
push
fadd
pop
neg
pop
fsubr
lods
add
inc
clc
jmp
stos
push
jle
mov
(bad)
loop
repz
shr
imul
sub
faddp
xchg
arpl
mov
jmp
cld
push
jno
ret
xchg
adc
addr16
punpckhwd
push
in
mov
data16
test
imul
popa
ret
jmp
frstor
inc
repnz
jnp
test
cmc
mov
rcr
adc
mov
daa
fmul
push
sbb
in
leave
xchg
iret
mov
mov
fsub
and
stc
inc
scas
sbb
call
fadd
and
xor
aas
imul
mov
and
sbb
ret
test
pop
pop
rcr
xor
(bad)
mov
mov
and
add
addr16
push
repz
mov
shl
sbb
fwait
xchg
in
mov
in
xchg
jbe
pop
test
outs
push
fild
addr16
les
mov
test
pusha
or
xchg
clc
sbb
xor
adc
movs
add
dec
mov
call
mov
jecxz
dec
push
aam
push
into
call
mov
add
into
lea
std
out
sbb
mov
popf
or
cmp
sbb
in
sub
mov
fst
test
dec
pop
loope
jns
ja
in
call
movnti
sbb
add
xlat
sahf
adc
mov
xchg
jno
mov
mov
xchg
ins
fcmovnb
stos
or
cmps
adc
int3
les
adc
xchg
out
dec
cmp
shl
mov
jge
ret
pusha
or
out
aam
jmp
(bad)
jle
rol
imul
cwde
mov
idiv
sbb
in
mov
aaa
int
sbb
and
sahf
sbb
xor
inc
rol
mov
add
aaa
dec
in
xchg
test
daa
pop
jecxz
jb
cli
mov
xor
xor
push
sti
dec
das
jnp
sbb
mov
add
sbb
js
inc
je
add
and
mov
jns
popa
jb
std
fild
dec
inc
add
push
cmc
and
jg
push
aam
jmp
ficom
add
in
cli
neg
pop
or
dec
neg
push
mov
xor
and
test
pop
jmp
pop
sub
lahf
adc
(bad)
xlat
xchg
mov
fwait
out
aad
lods
fld
(bad)
jo
mov
mov
out
add
and
dec
and
jmp
pop
div
xchg
ficomp
hlt
cmp
mov
mov
aam
adc
and
js
int3
pop
inc
call
or
(bad)
jnp
push
mov
cmp
jg
adc
clc
jns
mov
loopne
jae
pop
cmp
inc
mov
sti
shr
outs
inc
cmovb
jbe
ret
or
jmp
lahf
adc
retf
js
(bad)
in
repz
mov
push
sahf
mov
xchg
fdivr
(bad)
cmc
sbb
test
mov
je
cmp
inc
bound
mov
jecxz
out
lock
jne
add
leave
sub
lds
cli
xor
push
dec
stc
jmp
ds
out
cmp
aaa
jnp
stos
aas
fcomip
and
jecxz
or
dec
xor
cld
pop
div
pop
dec
(bad)
ja
dec
sub
pop
and
xchg
sub
mov
rcr
movs
repnz
gs
test
jne
adc
push
push
inc
pop
push
mov
sub
ja
and
shl
xchg
outs
jl
dec
or
inc
std
cld
rcr
push
and
jl
ret
popf
rol
mov
xor
stc
daa
sar
iret
cli
das
dec
mov
fsubr
leave
out
inc
test
ins
mov
xor
inc
pusha
sbb
sbb
retf
call
fild
push
hlt
and
cmp
dec
adc
outs
mov
sbb
add
scas
aam
jbe
push
lea
pusha
mov
xor
mov
push
jg
ja
xchg
ja
dec
adc
bound
inc
sub
arpl
push
hlt
addr16
movs
jb
(bad)
xchg
cmps
and
dec
test
inc
jae
xchg
mov
mov
and
push
bound
fcmovnbe
cmp
cmp
ror
es
lds
into
js
cmps
fmul
adc
not
add
cld
ds
jle
xchg
test
xchg
cmps
push
stos
in
jl
repz
div
push
stos
jmp
adc
sub
or
or
mov
enter
mov
cli
push
sahf
je
mov
mov
enter
jbe
inc
(bad)
add
addr16
sti
add
repnz
push
repz
fsub
mov
sbb
jmp
mov
fisubr
cmp
mov
sub
xchg
scas
shrd
jmp
stc
jmp
xlat
sbb
and
sub
mov
mov
loopne
scas
ins
cmp
ja
rcr
shl
mov
aas
leave
aas
mov
xor
pop
scas
sub
xchg
cdq
mov
and
sbb
aas
daa
imul
jp
fwait
call
jne
jae
fidivr
imul
or
push
test
dec
push
(bad)
in
xor
dec
les
in
mov
xchg
test
adc
arpl
adc
pop
dec
mov
sub
and
dec
jb
fistp
sti
(bad)
call
jmp
rol
(bad)
cld
sbb
push
xchg
je
push
std
test
fist
ds
pop
mov
pop
sahf
jp
ins
adc
pusha
dec
pop
scas
retf
adc
outs
ret
push
pusha
cmc
pop
stos
(bad)
popa
xlat
shl
inc
scas
jb
sub
cmc
fwait
push
push
jmp
xor
xchg
and
aaa
fs
push
sub
clc
test
pop
sub
dec
retf
adc
int3
dec
mov
fistp
pop
mul
pop
sbb
cmp
in
cmc
or
cmp
add
mov
std
test
mov
in
es
add
add
or
inc
and
cmp
stc
mov
jmp
dec
aaa
std
add
push
addr16
test
ds
inc
loope
mov
pop
call
adc
pop
popf
xor
fsub
retf
(bad)
rcr
jecxz
xchg
cmp
les
stos
cdq
xor
sbb
lahf
(bad)
fdivr
mov
ins
mov
sub
pop
lea
lods
add
aad
cmp
dec
push
(bad)
loop
sbb
ret
out
cld
xchg
or
loop
in
pop
inc
fstp
pop
xchg
stc
rcr
cli
mov
out
aaa
jns
ds
imul
out
movs
push
and
sbb
dec
lock
lock
push
sbb
call
je
arpl
jnp
ror
enter
jecxz
mov
repnz
lds
arpl
hlt
pop
mov
pop
loope
or
dec
out
sbb
aas
push
xchg
xor
fadd
adc
or
adc
sub
inc
or
icebp
inc
xchg
clc
pop
lods
pop
es
out
cmps
push
ds
neg
and
stos
scas
and
jmp
(bad)
shl
repnz
jmp
dec
jle
test
jne
out
pusha
sub
jg
jnp
mov
inc
sub
mov
cmp
(bad)
pusha
mov
push
nop
xchg
leave
jnp
push
pop
inc
inc
mov
into
sbb
inc
xor
mov
imul
scas
ins
retf
push
mov
data16
inc
loopne
(bad)
jmp
push
jae
pop
pop
cmps
call
int3
push
data16
jmp
push
(bad)
rol
jp
push
popa
not
imul
das
and
mov
ret
test
imul
stc
imul
and
xor
outs
push
scas
dec
jmp
bound
jle
into
mov
mov
test
mov
sub
out
out
bound
mov
jp
pop
dec
mov
sar
add
cmps
(bad)
cmps
(bad)
stc
ret
adc
jmp
cwde
hlt
adc
xchg
pop
in
mov
sub
mov
inc
js
adc
leave
add
xor
push
aaa
jo
fdivr
fcomp
mov
cmc
dec
push
lods
sub
int3
xchg
add
or
cs
adc
inc
icebp
pop
xor
mov
bswap
mov
jnp
dec
mov
mov
test
scas
push
cmp
mov
gs
jge
jno
xchg
mov
js
jo
mov
shl
test
jle
xor
in
outs
and
xlat
call
push
xchg
sbb
iret
(bad)
test
push
mov
movs
inc
loopne
push
icebp
mov
cwde
adc
xor
mov
movs
sbb
fs
xchg
and
xchg
jmp
imul
rcr
in
ret
sbb
jnp
pop
adc
lods
outs
ja
xor
pop
jns
sbb
jcxz
fsub
movs
xchg
out
aas
cs
and
into
or
inc
inc
cmp
push
mov
ja
xchg
jo
dec
mov
and
mov
dec
das
mov
rcl
push
ins
and
pop
aad
add
jae
adc
call
cmp
fidivr
dec
sbb
xchg
std
(bad)
lahf
call
push
shl
dec
sbb
dec
sbb
movs
or
pop
lods
mov
adc
adc
or
adc
fstsw
lods
push
stos
and
push
fwait
mov
add
add
mov
int
aad
shr
pop
fs
cmp
lock
dec
das
loop
or
cld
xchg
arpl
or
inc
mov
inc
shl
mov
mov
xchg
mov
dec
xor
inc
sub
pop
aas
std
data16
and
sub
pop
push
add
test
xchg
and
mov
and
push
repz
test
stos
mov
stos
mov
push
pop
cmp
mov
sub
push
push
pop
hlt
popa
pushf
mov
dec
mov
outs
sbb
mov
cld
pop
inc
lahf
xchg
or
and
jne
call
jb
jo
mov
sbb
das
pop
lods
add
inc
lea
jo
add
add
(bad)
nop
push
mov
add
je
in
movs
jp
dec
test
add
inc
mov
cmp
and
popf
and
dec
rol
mov
js
bound
xlat
movs
xchg
call
stos
or
inc
add
ins
out
inc
fnstenv
ja
call
mov
push
cmc
retf
mov
push
cmp
sub
push
sub
dec
push
leave
pop
dec
or
call
cmp
adc
arpl
push
xchg
push
iret
movs
sub
mov
xor
imul
push
call
and
add
pop
in
cmp
dec
not
push
xor
push
cmp
or
jge
in
pushf
xor
stos
cmps
add
xor
in
xchg
je
pushf
loopne
loopne
aas
rol
loopne
push
stos
test
mov
jae
xchg
rol
mov
or
mov
loopne
or
retf
ret
loope
les
push
xor
jl
leave
mov
xchg
sahf
out
popf
test
popa
rol
jg
(bad)
jp
pop
push
pushf
or
rol
jae
retf
ror
test
lahf
pop
jl
movs
(bad)
fld
dec
rol
mov
imul
dec
inc
cmp
sahf
pop
sahf
ins
mov
inc
xor
and
mov
add
lods
mov
inc
mov
jb
dec
cmp
inc
add
xchg
rol
loop
int
and
das
pop
or
and
mov
mov
(bad)
or
inc
and
pop
and
(bad)
mov
(bad)
int3
and
iret
fist
out
pusha
pop
sbb
and
xor
js
and
loope
xor
das
xor
adc
cmc
inc
push
mov
rol
test
mov
pop
sbb
dec
adc
sbb
test
jbe
pop
clc
daa
inc
jl
lds
and
test
out
dec
ss
add
add
mov
mov
inc
in
cs
inc
sub
cmp
sbb
mov
dec
cmp
cmp
mov
mov
popa
jo
mov
sub
pop
or
push
fild
push
xchg
loopne
jbe
(bad)
sbb
lods
sub
add
xor
and
and
xchg
inc
imul
inc
sbb
mov
fdiv
cdq
test
loop
sbb
jge
or
fadd
jmp
dec
ins
adc
push
jb
push
gs
stos
add
push
or
push
fldenv
push
xor
inc
mov
ret
cld
ret
sub
mov
cmps
sub
fldcw
sub
mov
stc
sbb
popf
cdq
mov
or
jl
jbe
inc
dec
sub
js
mov
add
mov
mov
repnz
jae
pop
mov
jle
or
add
sahf
imul
or
xchg
pusha
pop
aam
int
pop
sub
jl
pop
pop
add
add
cmp
scas
fwait
dec
push
icebp
jecxz
push
(bad)
sub
fcomp
shr
and
stos
push
push
leave
xchg
push
or
fidiv
sar
dec
add
add
cmps
rol
xlat
sub
mov
inc
jbe
xor
fwait
add
adc
add
xor
pop
mov
daa
or
jl
cmp
fimul
mov
sbb
ret
jo
add
inc
and
stc
stos
pop
movs
scas
sub
or
or
xchg
outs
aaa
pop
mov
and
or
mov
xchg
imul
inc
or
adc
push
pop
inc
push
pop
int
fnsave
xchg
push
mov
ret
mov
movs
test
mov
add
jb
adc
mov
add
push
mov
lods
xchg
test
lds
mov
mov
rol
test
shr
sub
pop
cmp
pusha
dec
nop
adc
(bad)
mov
and
out
mov
push
jmp
pop
pop
call
adc
icebp
data16
sub
or
dec
movs
cmp
jns
add
adc
sbb
into
adc
and
cwde
stc
and
cwde
or
repnz
adc
add
imul
dec
push
sub
daa
sbb
ss
add
jl
pop
fild
push
add
add
call
cmc
adc
mov
pop
fcom
stos
fnsave
mov
nop
aam
mov
push
inc
fs
jnp
cmp
mov
outs
lea
lock
loopne
sbb
dec
pop
sti
mov
xor
movs
lock
add
in
or
gs
out
push
mov
xor
adc
pop
adc
sub
adc
sbb
dec
fsub
adc
jne
pop
into
mov
or
imul
inc
mov
xor
js
outs
test
or
mov
push
jge
shr
clc
outs
scas
xchg
xlat
ret
dec
inc
sbb
cmp
mov
test
add
cmp
add
ror
ins
add
xor
add
retf
xchg
xor
cmp
push
aaa
push
pop
js
add
sub
dec
cmc
inc
pushf
dec
or
adc
stos
maskmovq
outs
mov
xchg
fadd
dec
cmp
dec
sub
or
cli
out
ins
and
adc
or
sub
cmp
adc
and
test
inc
shl
(bad)
in
push
mov
ss
mov
jae
xchg
fadd
jb
pop
(bad)
arpl
test
stos
fwait
sbb
bound
ins
mov
xchg
in
push
mul
pop
adc
sub
and
ss
call
fld
in
fiadd
mov
adc
sti
adc
arpl
jbe
int3
inc
cmp
movs
mov
ret
outs
pop
sbb
jp
aas
lock
or
xor
ror
or
mov
stos
mov
pushf
push
pop
mov
xchg
jp
in
icebp
pop
loopne
adc
xor
push
mov
in
pusha
fs
adc
or
dec
dec
push
div
movs
adc
sbb
or
mov
or
cmova
lea
cmp
add
es
inc
adc
in
add
movs
inc
push
add
sub
movs
daa
inc
add
push
(bad)
cmp
adc
mov
sub
daa
inc
mov
adc
test
pop
xor
dec
pop
int
push
(bad)
push
mov
ins
lods
cmp
push
outs
cmp
pop
and
xchg
cmp
mov
(bad)
inc
enter
ficom
and
cmp
push
and
test
sub
arpl
mov
(bad)
fmul
jne
pop
fs
ins
or
and
gs
sbb
mov
push
mov
jbe
mov
mov
mov
and
mov
mov
push
sub
imul
add
je
xchg
dec
out
sub
fadd
das
(bad)
adc
leave
aas
fild
(bad)
fcomp
pop
push
add
or
mov
pop
ds
mov
pop
outs
push
leave
arpl
ror
outs
fcmovnb
in
ja
fdivrp
fst
sbb
cs
sbb
dec
push
xor
test
add
sub
push
(bad)
data16
mov
cmp
adc
add
adc
mov
inc
xchg
push
adc
xchg
cmp
gs
pop
inc
pop
and
xchg
dec
xchg
pop
inc
push
test
xchg
xor
or
jno
dec
nop
test
pop
dec
rcl
ins
inc
push
sbb
mov
add
clc
daa
mov
sti
aaa
mov
jbe
jecxz
inc
inc
sbb
sub
jne
sbb
sbb
les
into
ret
bound
test
imul
(bad)
xlat
adc
jle
mov
std
popf
sti
test
mov
mov
sub
dec
dec
in
mov
jnp
xchg
fdivr
aas
jbe
sub
or
call
cmps
nop
pop
out
daa
ds
jecxz
jmp
sti
enter
jmp
mov
(bad)
add
sbb
(bad)
in
test
mov
ret
mov
lea
and
sbb
jns
mov
movups
leave
sbb
cmp
outs
mov
and
test
or
inc
sti
call
xlat
imul
or
or
xor
daa
pop
dec
(bad)
mov
xor
or
xlat
(bad)
shl
lock
jecxz
pop
mov
push
aas
sub
movs
scas
push
in
mov
movs
inc
jmp
xchg
int
shr
sbb
adc
stc
dec
mov
xchg
xor
pop
add
lods
xchg
xor
ret
inc
lds
fild
loopne
stos
cmp
mov
xchg
sbb
sub
mov
mov
add
xlat
add
imul
jne
and
inc
mov
mov
not
arpl
imul
pop
pop
jge
push
in
js
daa
ss
dec
shl
shl
test
retf
add
push
in
repnz
and
jae
pop
dec
sub
pop
aaa
and
and
push
mul
add
fsub
push
add
pop
gs
pop
mov
dec
adc
xor
and
adc
dec
add
push
test
xchg
inc
pusha
cli
mov
outs
dec
addr16
cmp
pop
push
and
retf
mov
add
jecxz
fcom
mov
and
dec
pusha
jg
out
sub
xchg
add
jp
jb
test
inc
inc
je
sub
repnz
fwait
pop
ins
sbb
in
and
mov
jnp
sub
nop
call
jl
push
movs
or
add
jl
loopne
fidivr
jmp
mov
pop
pop
clc
mov
xor
ja
jecxz
xchg
adc
call
push
bound
xchg
mov
jl
hlt
sbb
dec
add
jge
not
fbld
push
fdivr
not
cdq
or
fdiv
add
xchg
jo
jo
cmp
xchg
add
imul
and
jbe
xchg
rol
mov
xchg
lock
inc
and
aas
or
cmp
push
jle
cwde
xchg
adc
dec
rcr
hlt
pop
retf
mov
jo
cmp
mov
push
push
test
inc
push
aaa
and
cmp
xor
and
(bad)
jbe
call
dec
lock
push
ficom
xchg
icebp
pusha
inc
jp
inc
aad
adc
mov
adc
push
pop
adc
adc
sub
pop
loopne
scas
lock
cld
aaa
and
clc
dec
adc
pop
dec
jg
inc
loopne
mov
add
lea
leave
add
nop
in
add
add
xlat
jp
ins
loopne
dec
add
mov
mov
push
inc
add
dec
mov
test
aas
jb
push
adc
mov
mov
add
nop
inc
push
loopne
mov
sbb
jge
or
iret
inc
daa
mov
cwde
xor
sub
adc
sahf
and
xchg
out
adc
xor
jge
mov
mov
nop
xor
add
inc
adc
cld
iret
pushf
push
push
or
aaa
sub
sub
pop
add
add
lds
add
mov
inc
jecxz
div
arpl
adc
cmps
pop
popf
cmp
cmp
jb
popf
dec
call
jp
lods
push
por
adc
mov
xchg
enter
mov
mov
icebp
movs
aad
js
sub
jo
int3
iret
iret
enter
retf
scas
sbb
dec
or
adc
aas
out
fldenv
in
dec
mov
stos
mov
sahf
jns
sub
icebp
sahf
lahf
sub
sub
in
dec
cmps
and
push
clc
jbe
and
cmp
fs
jge
push
mov
in
hlt
add
push
(bad)
mov
aad
ret
push
cmp
inc
mov
pop
mov
(bad)
(bad)
stos
mov
push
inc
xor
(bad)
mov
cmp
mov
pop
cdq
rol
cmp
mov
cmp
sub
inc
push
cdq
into
xor
or
lods
jne
out
adc
loop
packssdw
adc
xchg
mov
sub
lds
stos
push
dec
jae
inc
xchg
cwde
push
inc
pop
mov
adc
loopne
sbb
in
inc
shl
and
or
cmp
cwde
retf
pop
cmp
push
jbe
test
or
pusha
clc
dec
cmp
xor
mov
stos
ds
stos
add
aam
cld
js
enter
(bad)
xchg
push
mov
mov
fcom
sub
ror
gs
mov
xor
fdivr
je
test
mov
cmp
gs
jg
cmp
rcr
repnz
adc
retf
xchg
(bad)
das
sbb
call
out
mov
out
and
add
(bad)
cdq
int3
(bad)
call
xchg
cmp
push
shl
mov
lds
retf
es
outs
shl
mov
adc
sbb
fld
xchg
jnp
hlt
dec
mov
jp
cmp
call
xchg
xchg
je
and
jmp
mov
les
test
outs
cmp
push
push
cmp
or
add
mov
retf
jmp
inc
sbb
(bad)
jmp
mov
push
test
(bad)
hlt
xor
cwde
lock
les
ror
sahf
outs
jo
in
jbe
popf
adc
loope
inc
fld
neg
test
repnz
and
sbb
xchg
inc
pop
lea
mov
xchg
lds
inc
mov
xchg
(bad)
jmp
(bad)
retf
cmps
mov
dec
push
jne
xor
bnd
mov
in
dec
push
xchg
test
pop
cs
imul
mov
cmp
xchg
mov
dec
loop
fild
pop
fnsave
mov
add
xor
sbb
call
xor
xchg
cdq
jmp
lods
jp
mov
pop
and
or
inc
jb
test
cmp
jmp
jnp
stos
xor
cmps
xor
int3
xchg
les
dec
jp
enter
cmps
gs
pop
xchg
mov
cdq
sahf
push
scas
mov
stos
ja
int3
push
pop
push
jle
es
cmp
ror
pusha
pop
adc
movs
jmp
(bad)
arpl
fdivr
mov
push
fimul
(bad)
outs
int3
jnp
lahf
out
leave
inc
jb
mov
cli
aas
cli
or
dec
je
xlat
clc
dec
jmp
loopne
repz
xchg
xor
(bad)
dec
repz
shl
inc
frstor
sbb
and
mov
push
pop
sbb
ror
test
and
aad
mov
nop
or
cs
xor
ins
mov
cmp
popf
jmp
fild
call
cmc
test
out
xchg
mov
pop
fiadd
daa
mov
imul
mov
add
dec
loope
daa
mul
aam
jb
ror
lods
outs
sbb
adc
push
gs
fst
mov
sub
adc
sub
and
adc
sub
in
jge
stos
bound
dec
das
pop
aad
sub
in
mov
pop
add
xlat
dec
sbb
adc
fwait
pushf
out
aaa
clc
cmp
(bad)
sbb
lods
les
imul
dec
mov
bound
sbb
adc
imul
and
jbe
xchg
ret
stos
shld
and
sub
into
lds
jp
jle
dec
jl
mov
pusha
and
jmp
cmc
cdq
sbb
xchg
dec
(bad)
mov
inc
loop
retf
cmps
jge
pusha
add
pop
(bad)
int
cmps
and
xchg
jb
push
sub
add
mov
xor
or
test
dec
jmp
or
loope
shr
sti
xchg
test
scas
scas
int
cs
stc
das
enter
cmp
in
sar
mov
sub
dec
cld
sahf
mov
cmp
cmp
jp
jne
rcr
pop
mov
mov
jg
int
in
popa
loopne
es
xrstors
mov
pushf
popf
jae
xchg
xchg
sub
jl
cwde
pop
icebp
pop
pop
call
xchg
cmp
sub
pop
ins
scas
scas
xor
aas
xlat
pop
or
es
popa
add
mov
jb
xlat
mov
stc
sbb
cli
fdivr
cmps
es
sub
pop
xchg
jg
xlat
shl
and
mov
jle
xchg
xchg
in
cmp
ss
loopne
stos
jp
arpl
dec
popa
inc
xchg
pop
jae
add
aas
and
ret
push
adc
inc
sub
pop
xchg
call
dec
shr
and
cli
pop
(bad)
repz
in
inc
iret
lea
dec
fldenv
dec
add
jp
push
cmp
mov
cld
cmp
pop
test
jle
retf
repz
push
inc
inc
out
neg
jmp
mov
loope
out
scas
dec
mov
jns
sub
mov
pop
dec
xlat
push
popa
fwait
das
adc
ds
fwait
outs
rcr
lock
movs
mov
xchg
in
mov
pop
lea
rcl
pop
arpl
mov
pusha
pop
idiv
xlat
jo
leave
xlat
mov
adc
add
loope
fstp
aaa
pop
dec
sahf
push
sbb
scas
pop
jp
fld
fbstp
jbe
(bad)
out
std
mov
(bad)
repz
cld
aas
sbb
fld
movs
push
or
neg
jmp
lock
fist
xchg
xchg
jnp
leave
out
call
ins
push
enter
les
aaa
movs
jb
fsubr
sbb
mov
pop
add
int
push
sub
test
inc
and
sbb
dec
aad
adc
push
xlat
out
cmps
das
ins
sub
adc
pop
or
pop
xlat
adc
popf
shr
popa
pop
emms
lea
xchg
lss
fld
lahf
push
aad
retf
push
pop
icebp
xlat
xchg
xchg
sub
fwait
or
mov
sahf
retf
in
or
mov
cmp
push
cmp
cmp
loopne
xor
icebp
es
inc
aam
mov
pop
popf
out
push
jbe
dec
xchg
in
leave
and
loopne
lea
inc
pop
and
xchg
mov
or
dec
sti
jb
aad
pop
icebp
mov
xchg
jbe
xor
adc
sbb
ss
mov
std
fstp
or
in
outs
dec
sbb
xchg
inc
lods
xor
scas
sub
sbb
sbb
dec
aam
shl
cmps
mov
mov
je
or
data16
push
and
xor
sti
cmp
test
push
pop
mov
div
inc
or
mov
jae
xor
sbb
push
push
sub
dec
jge
mov
add
mov
popa
push
in
sahf
int
ss
shl
or
dec
lods
stos
mov
jmp
sbb
je
movs
addr16
rol
or
ficom
gs
pop
enter
sbb
sbb
cld
shr
and
adc
jle
sub
lods
cdq
les
iret
push
das
pop
in
arpl
jge
sub
fdiv
ror
repz
retf
dec
lods
sbb
push
loop
xor
pop
rcl
adc
movs
mov
ret
mov
or
rol
inc
js
ja
jo
ins
push
mov
fnstsw
or
add
pop
retf
or
daa
clc
fmul
lock
icebp
and
imul
cmps
loop
jns
mov
fisubr
mov
mov
sahf
test
clc
mov
aaa
outs
popf
repz
iret
mov
les
popa
and
push
or
dec
fcomp
stos
dec
loopne
mov
xor
in
pop
sub
push
mov
pop
pop
ret
or
cmps
mov
push
jae
xchg
ret
sbb
arpl
stc
mov
jmp
sub
mov
call
cmp
jno
es
ja
push
icebp
sar
xor
mov
ss
jle
(bad)
mov
imul
push
cmp
and
sbb
call
retf
sub
mov
je
mov
stos
daa
ret
fisttp
out
cmp
cwde
(bad)
aam
retf
cmps
into
inc
int3
loop
pop
inc
jmp
xchg
mov
loop
jnp
or
inc
mov
or
xchg
or
jbe
(bad)
in
xchg
cmp
mov
xlat
pop
jge
mov
lods
sbb
call
xor
add
retf
push
movs
jl
popf
adc
push
mov
xor
mov
dec
mov
jp
pop
mov
mov
(bad)
xchg
sbb
push
jp
aad
inc
xchg
push
test
push
retf
jns
imul
jge
int
jno
or
sbb
or
out
cmp
mov
fadd
dec
lea
cwde
mov
mov
out
es
or
sti
xor
sub
cmps
std
stos
outs
and
test
xchg
jno
or
sbb
repz
or
inc
mov
sub
add
push
in
scas
ins
pop
stos
sar
dec
or
mov
dec
cmp
sub
mov
mov
xor
dec
js
mov
dec
mov
imul
adc
xchg
ins
push
and
fwait
xchg
pminub
repnz
sub
fldenv
inc
iret
nop
mov
mov
fdivr
lock
or
xor
inc
cwde
pcmpgtw
mov
mov
and
fisubr
inc
jge
jnp
adc
pop
mov
pop
jno
pushf
jg
imul
adc
sub
sub
leave
(bad)
pusha
pop
mov
fsubr
imul
out
cmp
or
out
pop
div
mov
ret
or
mov
out
lahf
js
fdivp
push
fisttp
sub
or
mov
add
mul
adc
loop
icebp
fcom
hlt
addr16
clc
nop
aaa
mov
dec
jmp
pushf
aaa
ss
cli
ins
lahf
jb
mov
xlat
fdiv
jle
jns
mov
cmp
add
nop
mov
mov
ja
repz
in
dec
inc
test
add
and
hlt
int3
mov
jbe
xchg
popa
xor
cli
pop
in
pop
div
inc
dec
jno
pop
sub
lock
das
shl
dec
inc
push
and
scas
or
dec
cdq
int3
jbe
ja
rol
(bad)
adc
xchg
or
jecxz
ret
lods
ret
push
iret
push
icebp
push
je
out
les
xor
inc
mov
sub
sbb
jle
cmc
cmp
out
sbb
sti
ins
imul
ss
in
jb
and
sub
or
add
fcmovnu
push
sbb
out
sbb
rcl
fnstenv
daa
jnp
ins
cdq
clc
inc
pop
jecxz
dec
lods
shl
sbb
jl
daa
mov
xor
dec
dec
mov
mov
clc
leave
(bad)
(bad)
mov
getsec
pusha
test
(bad)
imul
fisub
cmp
int3
test
ret
imul
push
cdq
mov
cdq
jnp
mov
xchg
mov
dec
lahf
in
cdq
mov
sub
mov
mov
xor
cmp
ja
test
fwait
push
mov
ins
mov
dec
and
jns
cmp
mov
shr
add
inc
xor
sar
cmp
xchg
scas
inc
lock
adc
xchg
stc
push
ret
or
(bad)
xor
imul
xor
jns
jae
and
sti
push
push
addr16
mov
jbe
mul
sbb
add
int
lds
add
fcomp
cli
gs
cdq
push
jae
in
clc
fnstcw
(bad)
pushf
pop
(bad)
sar
dec
into
xchg
adc
stc
es
push
add
vmaskmovdqu
stc
neg
xchg
mov
popa
sbb
mov
out
add
cmp
push
xor
pop
cmp
outs
xchg
mov
lea
(bad)
arpl
xchg
out
mov
dec
fisubr
sub
inc
ins
ror
lahf
pop
mov
mov
mov
mov
mov
loopne
shl
test
inc
outs
gs
pop
sti
cdq
and
sub
dec
inc
sbb
mov
iret
popa
sti
push
xor
cdq
or
mov
popa
fdiv
rcl
mov
mov
cmps
sub
adc
leave
cmp
xor
movs
lahf
push
jno
mov
xor
mov
mov
adc
sub
scas
(bad)
push
mov
jns
pop
sbb
dec
and
out
ror
and
sub
dec
push
lds
hlt
push
jae
push
push
(bad)
jg
jecxz
repz
jg
stc
fld
push
popa
lahf
les
pop
repnz
cmp
ffreep
ds
add
dec
mov
cmp
das
mov
(bad)
ror
es
mov
xor
cmp
inc
mov
mov
and
jno
jle
lds
retf
imul
mov
lods
fdiv
fisub
add
fadd
repz
aad
aad
addr16
pusha
xchg
mov
or
cmp
xor
mov
xchg
inc
add
inc
add
arpl
sti
mov
mov
push
add
sbb
push
(bad)
cmp
dec
movs
pushf
mov
cmp
inc
daa
jo
mov
mov
push
pop
pop
adc
push
jbe
(bad)
pop
lahf
dec
sub
mov
mov
in
lea
fbstp
pop
or
hlt
xchg
jns
mov
cmp
xchg
inc
mov
inc
test
push
leave
lods
lods
lahf
cmp
outs
push
add
jne
sub
pop
lods
aad
or
sbb
sub
pop
pop
inc
or
pop
pushf
add
xchg
ret
fwait
outs
in
xchg
adc
pusha
leave
xor
jo
arpl
sbb
cmp
ficom
xlat
stc
mov
push
(bad)
jmp
jbe
add
jg
adc
sub
test
movs
ret
push
pop
mov
sub
mul
in
and
retf
aam
dec
mov
pop
mov
movs
les
out
stos
mov
add
or
jmp
jns
aam
pop
inc
aam
ja
add
mov
arpl
aaa
icebp
or
push
out
cmps
mov
bound
lods
stc
lock
sbb
xor
retf
xchg
icebp
outs
jecxz
dec
in
jle
add
scas
jmp
mov
fst
xchg
fidiv
fwait
jnp
mov
fdivp
mul
mov
repnz
sub
jae
les
in
clc
cmc
enter
dec
cmc
fmul
jbe
pop
sub
gs
(bad)
push
jns
jle
dec
lea
pop
lock
mov
cmps
push
test
stos
adc
(bad)
idiv
jns
lods
mov
sub
cld
mov
pop
enter
mov
jmp
sbb
add
sti
mov
cmp
sbb
cmp
imul
mov
movs
push
call
in
popa
adc
jno
jno
sub
sbb
sub
ins
in
push
mov
xor
cmp
and
pusha
add
cmp
(bad)
jle
cmp
das
das
sbb
inc
das
sub
in
sub
sbb
jae
xor
aaa
fld
push
fisubr
repnz
shr
jg
mov
lds
pop
ror
dec
push
dec
mov
lods
inc
dec
add
scas
gs
mov
fstp
jb
xchg
sbb
sbb
push
and
push
xor
sub
xor
xor
mov
adc
cmps
fnsave
mov
sub
mov
jmp
inc
mov
adc
pop
dec
push
jg
push
xchg
sub
mov
cmp
xor
mov
dec
add
ins
push
clc
push
retf
lods
mov
dec
and
adc
xchg
pop
fld
adc
fbld
imul
xchg
jl
pop
stos
mov
xchg
mov
jo
clc
aad
ds
mov
(bad)
push
fdiv
cmp
jae
xchg
fst
jecxz
jg
jecxz
mov
lahf
pop
sub
(bad)
(bad)
xor
mov
fcmovu
jle
repnz
aad
(bad)
mov
jne
mov
lea
mov
neg
call
cmp
or
push
pop
xor
or
dec
arpl
loop
jmp
inc
repz
outs
cli
or
movs
test
pop
clc
jne
ss
loope
jge
stos
pop
lods
fbstp
push
(bad)
(bad)
jbe
and
push
frstor
idiv
data16
dec
cmp
dec
inc
cdq
pop
inc
in
sbb
xchg
lods
cmc
std
pop
pop
dec
nop
ja
cmps
int
cmps
out
xlat
xchg
mov
pop
gs
cmp
enter
cmp
dec
nop
or
push
js
sub
mov
in
iret
push
add
cmp
int3
(bad)
out
sub
xor
popa
sub
test
xchg
into
pushf
(bad)
xchg
sbb
fwait
pop
ret
inc
lea
ss
shl
push
push
xor
sbb
in
rcr
mov
push
(bad)
push
inc
sbb
inc
mov
pop
fcomp
pop
adc
xchg
lock
pop
pop
into
inc
loop
xchg
in
and
jle
lds
add
shr
js
mov
pusha
call
mul
cmp
dec
in
mov
or
cs
sub
mov
adc
je
cmp
ja
fs
repnz
mov
enter
cdq
mov
popf
add
loope
and
xchg
addr16
test
jo
ficom
popa
sti
inc
mov
iret
test
sbb
mov
sbb
int3
xor
dec
rcr
fistp
mov
xchg
stos
inc
leave
clc
outs
(bad)
jb
je
scas
je
dec
push
mov
in
ss
(bad)
jp
ss
pop
sbb
cmps
jae
xor
out
repnz
sbb
sbb
push
mov
mov
popa
rol
jmp
aad
(bad)
cmc
addr16
push
arpl
sbb
cdq
mov
xor
out
into
movs
mov
hlt
ror
stos
or
daa
xchg
test
push
xor
xor
mov
inc
adc
jecxz
xchg
test
pop
retf
dec
and
push
mov
popf
and
cmp
int
ror
jne
leave
jge
adc
daa
icebp
dec
xor
test
push
sbb
and
shr
xor
adc
outs
pop
xor
jecxz
loope
xchg
jle
out
fimul
call
push
jmp
lods
or
int3
xchg
(bad)
push
mov
mov
(bad)
aam
pop
icebp
dec
cmp
mov
pop
adc
out
xor
pop
nop
aas
dec
push
xor
push
ds
xchg
pop
sub
jmp
ja
clc
je
sub
push
out
repz
pop
call
cmp
xchg
adc
sub
jecxz
sub
loop
(bad)
sti
inc
mov
cmc
dec
jno
xor
push
cmc
jbe
dec
xor
mov
cdq
loopne
mov
pusha
into
sub
mov
test
or
shl
test
test
lds
pop
xchg
pop
xlat
xchg
pop
int3
fwait
dec
mov
jl
data16
jle
xor
xor
mov
pop
aad
test
ror
push
popa
dec
icebp
sbb
stos
mov
jecxz
ss
mov
add
or
xchg
test
push
pop
cmp
adc
mov
mov
cmp
or
push
xchg
ins
mov
xlat
cli
inc
stos
dec
push
xor
xor
xchg
adc
or
inc
inc
jle
rcr
fs
shl
xchg
mov
push
out
cmp
dec
ret
cmp
shl
jne
in
lods
and
cmps
stc
ins
ret
jmp
int3
lahf
cmps
cmps
pop
adc
cmc
lds
and
cmp
sbb
sar
xor
cmp
xchg
scas
pop
jae
loop
ins
push
xlat
cmp
daa
push
lods
inc
in
stc
xchg
cdq
in
nop
cmp
shr
popa
stos
dec
adc
stos
dec
sbb
and
test
cmp
movs
cmp
int
neg
jg
clc
icebp
add
loop
add
outs
cmps
pop
dec
es
movs
xchg
out
je
shr
pop
scas
adc
xor
pop
adc
mov
mov
pop
jo
adc
dec
int3
add
inc
hlt
std
push
imul
test
das
stos
test
repz
aas
iret
cmp
ja
adc
imul
mov
test
ds
shl
out
or
hlt
fstp
xor
in
in
xchg
and
pop
lods
iret
fs
add
xchg
rol
jmp
xchg
repnz
ja
cld
idiv
bound
loopne
push
repz
inc
xor
and
shl
cld
push
cmp
loop
and
mov
add
iret
push
push
daa
sbb
div
(bad)
fnstsw
adc
rcr
mov
adc
inc
pop
jle
adc
scas
fmul
fst
and
ret
xor
scas
loop
imul
mov
mov
pop
mov
xor
adc
aaa
mov
(bad)
test
lahf
dec
ret
mov
xchg
ja
pcmpgtw
inc
gs
arpl
jae
dec
lahf
ins
jb
mov
or
sar
jns
dec
mov
mov
pop
push
lods
push
(bad)
stos
cli
pop
nop
jnp
mov
mov
mov
mov
mov
fwait
mov
iret
mov
pop
daa
xor
xor
popf
sub
inc
jnp
xchg
cmp
adc
jmp
es
(bad)
mov
test
js
pop
into
ins
dec
mov
test
cmp
daa
enter
fsubr
jae
js
xchg
pop
mov
cmp
fwait
pop
loop
jle
mov
xchg
loop
sub
lea
cmp
inc
mov
movs
add
loop
lods
fisttp
dec
movs
iret
ss
xor
nop
push
out
scas
ret
push
push
push
add
sbb
or
push
rcl
imul
and
xchg
dec
mov
dec
jmp
ins
scas
sub
xor
adc
jae
enter
movs
xchg
out
mov
xor
jg
div
add
and
jnp
iret
int3
pop
inc
pop
add
cmc
xlat
cmp
(bad)
pop
cdq
push
push
cmp
stos
push
sbb
pop
(bad)
ins
lods
out
pushf
test
push
arpl
and
add
retf
push
js
sahf
mov
push
pop
mov
pop
(bad)
std
jp
shr
fbstp
in
sub
dec
push
inc
sub
out
sbb
test
jne
xchg
ss
inc
xchg
movs
inc
lods
popf
mov
not
std
hlt
push
iret
ret
push
xchg
std
mov
cmp
ror
cmp
cli
mov
dec
(bad)
mov
daa
gs
mov
cwde
or
aaa
clc
mov
push
jns
dec
outs
jno
mov
inc
xchg
pop
pop
cli
mov
mov
sahf
pop
push
ins
mov
stos
pushf
and
fisttp
xor
sbb
aam
int
push
rcl
icebp
call
dec
xor
mov
cmp
mov
fsubr
stc
push
push
aad
div
pushf
push
push
xbegin
retf
push
push
mov
inc
ror
dec
into
shl
repz
imul
add
pop
fcomip
mov
imul
idiv
fldcw
cmp
icebp
fcmovnb
mov
in
shl
imul
xor
push
fnstcw
xchg
xchg
enter
icebp
xor
xor
lods
ror
xor
pusha
adc
imul
jo
(bad)
mov
sub
push
sbb
movs
sub
leave
push
xchg
push
lods
inc
js
push
dec
xchg
mov
cli
ss
sar
push
dec
mov
push
mov
fsubr
cwde
add
mov
cs
sbb
push
popa
push
mov
mov
dec
test
fsub
mov
sub
sub
pop
icebp
test
sub
clc
pop
sbb
or
daa
or
jb
jbe
xchg
iret
test
xor
loope
repz
in
ja
mov
popf
data16
sub
lods
test
test
push
pop
dec
popf
in
sub
and
call
je
dec
lock
fst
cld
mov
sbb
out
mov
and
push
sbb
rcl
inc
clc
(bad)
nop
add
xchg
sub
ins
mov
xchg
sti
retf
mov
sahf
das
pop
push
test
aaa
inc
inc
stc
xchg
sub
and
aam
lock
test
mov
test
mov
cmp
sub
adc
ds
cmp
push
xchg
int3
stos
adc
data16
repz
(bad)
xchg
mov
in
pop
xchg
push
jle
xor
repz
hlt
xor
(bad)
pop
mov
pop
sub
imul
shr
sbb
or
inc
ret
push
stos
out
dec
movs
std
in
or
jbe
std
jg
push
mov
pxor
test
mov
imul
and
shl
adc
aas
mov
jmp
mov
adc
jle
jg
movs
(bad)
das
xor
fisub
rcl
mov
fld
sbb
xor
sub
jb
outs
test
sub
or
retf
out
jg
xchg
xlat
cli
adc
mov
ret
lods
xchg
call
gs
mov
xchg
js
stc
jmp
push
je
out
retf
vmaxps
mov
pusha
jnp
stc
mov
push
repnz
mov
inc
mov
xchg
mov
adc
lahf
scas
xchg
cdq
js
jb
jmp
retf
xchg
ins
dec
or
inc
movs
push
cmp
add
mov
std
cmp
push
dec
(bad)
fld
cs
ins
mov
mov
jns
mov
out
dec
arpl
(bad)
js
ins
pushf
and
inc
cmp
fnstcw
inc
ja
cmp
xlat
inc
mov
jle
xchg
jge
xchg
adc
jecxz
cld
fnstcw
es
(bad)
out
cmps
mov
rol
es
ficom
sti
out
sti
adc
stos
lahf
push
bound
add
sbb
bound
jo
out
fwait
sbb
ror
out
push
out
sub
add
jae
(bad)
jge
cmp
sub
mov
repz
popa
dec
xlat
sbb
leave
test
sub
pop
cmp
jne
imul
mov
jae
or
xor
inc
pop
or
mov
dec
mov
lock
clc
in
test
mov
dec
jmp
loop
pop
fimul
push
movs
jg
ss
and
cmp
mov
aam
ja
out
and
loope
neg
das
ss
cmp
and
jmp
add
dec
dec
shl
and
push
pop
repnz
arpl
cmps
mov
sbb
xchg
ret
inc
jmp
dec
jl
fdiv
pop
je
std
jne
ins
call
cmp
push
popf
push
mul
and
ins
pop
push
movs
and
dec
in
and
adc
aas
or
cmp
rol
add
push
sbb
sub
jmp
xchg
mov
fild
add
dec
cmp
sahf
(bad)
fisttp
xchg
mov
shl
pop
loopne
cmp
out
pushf
add
outs
jo
fistp
(bad)
int3
xchg
jp
aaa
cmp
xchg
lea
mov
mov
loop
xchg
ss
lahf
fisttp
ret
inc
lea
cmp
shr
shl
outs
div
jl
xor
outs
cs
mov
call
mov
mov
jg
mov
arpl
clc
xor
daa
dec
je
lods
mov
fnstenv
fcomp
xchg
push
mov
call
int
pop
jle
out
int3
(bad)
sbb
mov
or
ficom
mov
adc
outs
sbb
or
jns
dec
cmc
mov
mov
out
and
pusha
daa
ss
fnstcw
iret
jmp
dec
pusha
imul
lahf
xchg
pop
out
fs
cmp
call
inc
xchg
mov
int3
pop
mov
mov
fwait
dec
push
int
int3
push
and
add
pushf
and
(bad)
jae
ins
jge
call
(bad)
out
mov
cmp
scas
not
shl
or
bswap
jle
pop
imul
repnz
inc
jl
cmp
pop
out
out
add
bound
pop
mov
inc
into
ficomp
lds
jecxz
lds
mov
dec
cmp
dec
sub
(bad)
cmp
retf
ins
xor
lahf
dec
sbb
mov
fdiv
push
(bad)
fistp
jbe
(bad)
outs
dec
ins
cmp
mov
cmp
rcr
sub
popf
or
test
dec
or
sbb
mov
pop
icebp
xchg
cld
lock
movs
inc
out
add
jg
or
mov
retf
jae
push
retf
jae
or
mov
xor
pop
mov
(bad)
movs
jmp
mov
in
repnz
ret
jns
rcl
inc
push
sub
jb
sahf
call
pop
mov
mov
inc
stos
aad
and
loop
mov
test
enter
test
mov
cmp
xlat
mov
add
pusha
xchg
jmp
imul
mov
pop
daa
mov
(bad)
movs
retf
push
int
pop
mov
cmc
sbb
lds
jae
sub
nop
mov
nop
add
push
jle
(bad)
repz
(bad)
push
add
repz
push
out
jae
int3
lock
cmps
mov
retf
or
push
pop
xchg
aam
inc
cmps
jmp
cwde
mov
mov
push
loop
mov
mov
jno
jge
test
mov
fnsave
sub
push
pop
aad
xchg
sbb
data16
fisubr
lock
(bad)
push
add
mov
add
pop
adc
add
sar
js
xchg
jl
mov
mov
aad
xchg
test
adc
dec
mov
imul
cmp
pop
cld
inc
xor
mov
sub
fistp
adc
loope
cmp
dec
imul
add
aas
ss
mov
push
rcl
retf
mov
imul
mov
fsin
cmp
or
rcl
outs
sub
aaa
jne
loopne
xchg
outs
data16
lock
mov
jbe
push
inc
shl
std
pop
add
jecxz
arpl
xor
repz
(bad)
cmps
inc
outs
mov
inc
in
in
aad
cmp
or
and
mov
sub
iret
adc
push
(bad)
cdq
cmp
push
outs
fld
mov
outs
stc
push
dec
xchg
(bad)
jmp
hlt
(bad)
lods
ins
out
push
test
in
js
fidiv
pop
enter
(bad)
jns
mov
jmp
push
addr16
push
(bad)
mov
loopne
daa
cmps
dec
or
mov
mov
outs
pushf
adc
shl
outs
test
xchg
ja
ins
lds
jecxz
outs
push
jp
pop
scas
fst
pushf
les
fimul
addr16
pushf
jle
xchg
(bad)
dec
lock
hlt
sbb
daa
fwait
in
xchg
mov
sbb
fdivrp
pop
mov
pop
repz
xchg
les
and
pop
mul
pop
inc
mov
(bad)
ficomp
call
xchg
cmps
out
push
xor
add
mov
jp
stos
shr
in
xor
mov
dec
aas
mov
imul
popf
cwde
cli
shr
mov
fst
(bad)
mov
jp
out
mov
inc
hlt
call
stos
or
sbb
cmp
sub
in
(bad)
sub
shl
dec
cmp
sub
repnz
sbb
lahf
inc
xor
scas
fstp
xchg
fidiv
push
pop
int
ss
push
(bad)
cs
pop
movs
jmp
push
jge
icebp
jmp
adc
add
mov
ss
mov
mov
icebp
mov
pop
pop
cmp
movs
fcom
push
and
out
int3
mov
fld
loop
ja
aaa
sub
ret
mov
mov
push
mov
imul
pop
fidiv
sub
fs
leave
(bad)
loop
repnz
dec
ja
stos
test
idiv
sub
jecxz
push
loop
int
xor
lods
inc
gs
lahf
clc
movs
lahf
(bad)
jp
shl
rcr
js
or
mov
in
loope
mov
mov
push
dec
mov
adc
(bad)
jge
call
loope
ja
clc
push
scas
xchg
jns
jecxz
ins
mov
into
sbb
jge
scas
jmp
in
out
movs
loop
jnp
mov
aaa
(bad)
sub
and
ins
or
stc
cmp
sub
mov
arpl
sbb
push
push
mov
nop
(bad)
shr
or
mov
pusha
pop
add
aam
jns
das
stos
out
scas
loope
aaa
xchg
push
(bad)
cs
int
adc
int3
push
in
mov
push
lahf
jb
mov
jge
mov
cmc
adc
mov
xor
ins
mov
sub
leave
sbb
sub
pusha
shl
sbb
frstor
stos
mov
cmps
icebp
call
popf
lds
sub
fld
jmp
(bad)
loope
jae
in
lods
hlt
jo
and
jae
xchg
jb
out
dec
or
mov
mov
add
hlt
add
xchg
fstp
or
mov
cmps
aad
add
fist
sub
add
push
leave
inc
test
es
push
das
mov
mov
test
xchg
mov
adc
js
ins
aam
pop
(bad)
mov
inc
pop
ret
adc
mov
das
(bad)
ficom
jns
ins
or
jbe
(bad)
fs
retf
outs
pop
aad
jmp
jecxz
test
test
pop
and
mov
and
adc
pop
jmp
jecxz
cli
xor
call
scas
pop
adc
xchg
xor
je
sbb
(bad)
jecxz
jle
int3
fcom
daa
ficomp
inc
cmc
aad
sub
sbb
jmp
jmp
sbb
cmp
mov
pop
mov
lods
shl
mov
ins
fcomp
in
and
or
scas
inc
dec
cmp
mov
rol
fsubr
pop
or
jmp
iret
pop
cwde
scas
addr16
std
xlat
push
sti
in
loope
loope
inc
pop
mov
sbb
scas
mov
aam
icebp
in
not
jmp
sub
push
addr16
iret
ins
and
dec
xor
int
in
popf
fcomp
into
and
push
push
push
mov
or
adc
sub
cmc
or
rdmsr
push
(bad)
xor
mov
cmps
mov
sub
sub
and
pop
sub
mov
ror
xor
ja
emms
mov
dec
pop
daa
mov
into
jle
sbb
cdq
mov
popa
dec
mov
popa
cmps
push
jp
xchg
jmp
je
lods
adc
jae
shl
aaa
pop
(bad)
setl
stos
daa
jae
das
into
add
cld
mov
lahf
jl
dec
ins
add
adc
imul
dec
aad
out
shl
fwait
mov
imul
aaa
xchg
xchg
mov
lahf
test
mov
pop
gs
mov
mov
jne
fwait
cmp
cmc
ja
dec
jmp
mov
cdq
ins
jo
cmps
pop
mov
ret
pop
lds
jecxz
and
lea
gs
jecxz
test
jmp
adc
dec
mov
int
lea
out
jle
and
clc
mov
add
scas
push
sub
fidiv
sbb
stos
arpl
es
clc
(bad)
dec
cmps
add
fwait
ss
pop
mov
cmps
pop
push
imul
mov
jmp
push
or
mov
mov
sbb
mov
and
scas
mov
out
inc
and
sub
inc
and
dec
das
mov
adc
imul
fstp
aas
test
(bad)
cmp
test
(bad)
adc
test
and
jge
pop
lea
xlat
lock
ja
pushf
dec
mov
les
(bad)
in
(bad)
rcr
cmps
(bad)
mov
pop
mov
fisubr
lods
mov
jecxz
push
jp
xchg
inc
retf
dec
push
js
addr16
loope
cs
add
mov
arpl
test
test
jb
xor
jecxz
mov
dec
mov
sar
xor
out
xor
in
mov
popa
jle
fstp
ins
and
sti
jecxz
fsub
push
cmp
xor
int3
icebp
enter
mov
jecxz
imul
fimul
dec
dec
aas
cmps
test
(bad)
mov
into
mov
int3
fwait
dec
xor
sub
js
in
lds
or
arpl
loope
sar
es
cwde
dec
or
pop
mov
les
cmps
dec
push
hlt
sbb
jg
popa
or
retf
rol
inc
and
in
and
inc
loopne
push
(bad)
and
dec
sbb
mov
test
aad
sbb
mov
icebp
push
call
shl
pop
into
xchg
lock
dec
into
mov
rcl
das
pop
adc
pop
or
fwait
push
nop
popa
xor
jmp
fld
pop
les
xchg
pop
fld
popf
xchg
rcr
lods
mov
or
scas
pop
(bad)
aaa
cmp
mov
mov
push
mov
mov
and
inc
push
sbb
loope
cmp
xchg
call
scas
movs
imul
sti
adc
ins
cmps
jecxz
mov
call
sbb
adc
jbe
mov
in
(bad)
cmp
mov
aaa
not
in
in
jg
in
dec
int3
les
icebp
dec
xchg
mov
fwait
pushf
xchg
(bad)
xchg
jae
mov
das
fwait
test
outs
adc
dec
pop
scas
add
test
repz
mov
shl
mov
shr
and
in
fsub
mov
nop
xchg
es
jae
daa
mov
fwait
test
mov
cdq
push
jmp
scas
xchg
cmps
std
mov
mov
sahf
movs
ins
jns
retf
sub
pop
iret
pop
lock
pop
ja
rcr
test
jecxz
mov
(bad)
in
mov
and
in
xor
sar
add
imul
(bad)
mov
push
sub
dec
cld
fsub
inc
push
ret
inc
add
dec
pop
test
dec
adc
movs
and
push
icebp
icebp
cmps
xchg
(bad)
loop
cld
jecxz
dec
inc
xchg
jg
mov
cmp
les
ins
cmp
dec
mov
push
ins
retf
and
xchg
rcr
sbb
mov
jl
sbb
pop
jp
mov
out
mov
nop
xchg
aam
(bad)
in
xchg
push
(bad)
jo
jb
pop
imul
cmp
retf
push
bound
das
xchg
sub
xor
dec
not
jmp
pop
push
ss
cmps
sub
sar
js
mov
jne
fidiv
or
(bad)
scas
adc
push
test
mov
std
and
cmp
xor
jno
and
dec
lods
xor
cmc
cld
ret
das
and
or
inc
xchg
push
push
(bad)
pop
mov
div
xchg
enter
icebp
mov
mov
out
std
cdq
xor
pop
lods
mov
jl
(bad)
ins
stos
(bad)
out
fdivr
mov
int3
pop
mov
pop
fwait
mov
add
repnz
(bad)
lea
lds
pop
mov
imul
sbb
fstp
aas
in
cmps
idiv
mov
sti
mov
les
pop
jbe
add
mov
mov
jb
xor
je
test
rcl
popa
popf
mov
nop
mov
xchg
sbb
cdq
xlat
data16
cmps
push
out
movs
jge
pop
inc
repnz
fistp
das
test
mov
mov
push
push
popa
or
call
fnsave
jb
cs
push
sub
dec
pop
(bad)
out
stos
imul
jecxz
aam
(bad)
sahf
push
jl
mov
je
mov
dec
mov
lahf
dec
pop
lahf
imul
cwde
std
ret
jns
sub
ficom
jnp
pop
dec
sbb
pop
fild
pop
repz
pop
(bad)
in
inc
xchg
aam
pop
call
jl
jb
jecxz
sahf
push
sub
or
fs
aaa
add
(bad)
rcr
adc
pop
mov
pop
clc
(bad)
adc
jl
mov
and
adc
dec
xor
in
mov
mov
bound
imul
mov
fwait
test
or
(bad)
xor
pop
jae
mov
dec
push
xor
cdq
mov
fs
adc
sub
test
dec
push
push
stc
aad
lods
push
xchg
jl
scas
aad
ins
mov
sub
mov
dec
js
adc
adc
div
cmp
mov
xchg
push
shr
jmp
shl
push
in
(bad)
xchg
fadd
mov
jo
mov
fnstcw
mov
mov
stos
dec
mov
mov
mov
retf
jmp
nop
pop
enter
xchg
div
sahf
xor
mov
mov
cmps
imul
inc
stos
xchg
push
and
xor
sbb
jecxz
pop
xlat
jno
fnsave
jmp
std
xchg
xor
repz
std
push
pop
cmc
mov
call
lods
dec
inc
push
stos
cmp
jg
scas
movs
push
in
cmps
(bad)
inc
push
or
or
sub
sub
fist
xchg
retf
lahf
es
in
push
or
mov
iret
xlat
add
mov
xor
xchg
pop
or
mov
mov
outs
stc
xchg
and
nop
fistp
movs
sbb
push
push
stos
jo
call
sbb
xchg
repnz
pop
xchg
jl
add
shl
rol
add
inc
pop
pusha
pop
aas
rol
mov
jg
fsubr
or
sti
dec
pop
mov
xchg
add
or
hlt
xor
inc
sbb
mov
cli
mov
int3
mov
add
adc
mov
cmps
inc
push
icebp
push
jmp
ds
push
popf
repz
xchg
lods
ja
cmps
cmp
push
cmp
mov
push
retf
in
jne
cmp
sahf
(bad)
adc
inc
push
mov
adc
test
movs
or
pop
loop
mov
lods
(bad)
jmp
xchg
scas
bnd
lock
push
xchg
call
enter
out
fidivr
push
jne
(bad)
inc
jmp
clc
inc
adc
adc
cli
and
jg
sub
pop
loop
sub
jmp
aas
mov
iret
lea
cmp
and
add
test
xchg
mov
sub
pop
hlt
ss
sbb
stos
(bad)
fwait
dec
rcl
out
lahf
add
adc
fmul
sub
cmps
jmp
sub
push
lods
clc
repz
jmp
jne
popf
pop
jne
jp
mov
bound
repz
push
jbe
and
stos
and
xor
in
popf
sub
not
dec
stc
imul
dec
push
sti
hlt
shl
add
adc
dec
sub
mov
lods
mul
in
inc
pop
pop
and
add
loopne
stos
jmp
jnp
inc
add
leave
lods
(bad)
add
mov
pop
imul
push
mov
imul
dec
loope
mov
jmp
ins
ds
mul
jge
xor
jns
pop
in
xor
sbb
gs
mov
dec
inc
sub
sub
adc
and
mov
aas
fld
adc
cmp
mov
jle
and
xchg
les
add
jge
mov
sahf
xor
pop
in
icebp
push
sbb
imul
mov
xchg
mov
mov
movs
movs
cmp
call
mov
or
adc
and
inc
mov
mov
adc
mov
mov
retf
and
inc
mov
daa
adc
jmp
data16
jb
inc
data16
cmp
cwde
or
push
mov
xor
sub
and
cmp
shl
xchg
add
adc
or
push
xchg
in
push
mov
xchg
mov
stos
dec
lahf
in
aad
lods
pop
sub
xchg
inc
shl
jge
fcomp
xor
push
int3
jle
pop
inc
aam
pop
pop
cwde
mov
push
rcr
fnstenv
(bad)
scas
xor
in
adc
call
aad
cmps
imul
mov
mov
sub
outs
pusha
cmc
or
push
es
jmp
cs
cwde
test
outs
push
xchg
xor
stc
mov
push
jle
stos
or
mov
test
sbb
cmp
in
pop
das
push
mov
cmps
jp
mov
sbb
mov
(bad)
fdiv
and
out
(bad)
ja
xchg
dec
popfw
xor
arpl
(bad)
pop
aad
pop
xor
xchg
std
je
mov
jae
shrd
mov
sbb
mov
dec
out
inc
std
aas
xchg
popf
in
movs
and
aad
gs
inc
cmp
push
in
mov
jg
xchg
xchg
stc
or
jae
xchg
jae
sub
into
aas
push
mov
in
ss
or
sbb
jmp
cld
jmp
clc
lods
dec
rcr
scas
mov
xchg
push
fwait
popa
jmp
mov
(bad)
and
dec
and
lock
cmp
or
(bad)
push
jl
dec
sbb
xchg
ficomp
push
into
popa
pop
pop
imul
into
(bad)
hlt
jg
mov
gs
push
push
(bad)
sub
mov
cwde
je
ja
dec
cmp
adc
inc
shr
mov
mov
iret
aaa
jg
mov
iret
pusha
pop
cmps
ds
fs
push
mov
outs
jbe
int3
xor
or
int
icebp
cmp
daa
xlat
xchg
icebp
jno
xor
pop
dec
out
push
loop
pop
sbb
jmp
(bad)
push
xchg
mov
mov
jmp
mov
fwait
push
fstp
hlt
cld
lock
sub
outs
inc
data16
icebp
mov
dec
ret
test
dec
in
xchg
mov
inc
mov
push
cmc
dec
fadd
jge
cmp
call
lds
dec
ret
outs
push
mov
stos
xchg
outs
push
push
ins
repz
xor
cmp
add
rcl
mov
xor
xor
rcr
dec
cmps
ret
mov
or
adc
xlat
(bad)
and
xchg
mov
jmp
faddp
iret
(bad)
test
push
adc
std
xchg
ins
xor
dec
(bad)
adc
add
adc
jl
popa
and
cmc
loopne
or
outs
fidiv
in
stos
clc
shl
sbb
js
stos
aam
mov
mov
push
sbb
jge
loop
mov
imul
pop
lods
pushf
je
aaa
call
outs
dec
or
aaa
and
cmp
(bad)
loopne
test
imul
(bad)
jno
inc
cmp
push
aam
lock
mov
ins
inc
adc
mov
lods
icebp
ret
dec
ret
mov
push
jp
xchg
mov
(bad)
sbb
sub
push
inc
cmp
adc
hlt
xchg
stos
shl
jmp
and
jge
pusha
test
stos
push
xor
ins
daa
rcl
and
pop
shl
xlat
or
sub
lods
or
stos
dec
ficom
push
jmp
dec
mov
sbb
add
popa
pop
shl
int
stos
and
pushf
dec
jbe
xor
fld
push
mov
jmp
dec
xor
data16
fs
jmp
push
pop
ret
jae
adc
mov
jns
outs
adc
mov
mov
and
in
out
jne
call
sbb
ror
retf
or
jp
jmp
imul
push
xchg
ds
jne
and
pop
icebp
pop
ss
stc
push
hlt
mov
fwait
arpl
mov
push
mov
and
xlat
pop
pop
jge
push
ja
fdivrp
mov
cmp
mov
inc
jg
fidiv
sub
and
push
outs
(bad)
fcom
retf
push
xlat
das
int
adc
ins
in
xor
mov
or
sbb
ffree
clc
sub
mov
ret
sbb
or
push
mov
xchg
pop
mov
retf
test
data16
sbb
adc
lahf
test
loop
es
fwait
xchg
jae
pushf
test
std
add
stos
in
or
or
int
jo
ins
xchg
inc
pop
cli
ror
cdq
jnp
out
lock
adc
adc
aas
pop
mov
aas
add
xchg
dec
mov
mov
retf
mov
xlat
push
mov
loop
popf
in
ficomp
cwde
jnp
xchg
in
dec
lods
cli
test
sub
pop
dec
or
dec
mov
jmp
pop
cmc
pusha
inc
jecxz
push
mov
push
and
lods
shl
jno
and
and
pop
cld
(bad)
add
hlt
loop
mov
rcr
mov
popa
xchg
xchg
xlat
push
cmc
outs
rol
jl
push
dec
(bad)
pop
in
jnp
xchg
call
imul
cmp
out
mov
xchg
les
leave
sub
add
inc
ja
mov
ins
pop
or
mov
jns
pop
popf
sub
imul
sub
jmp
inc
std
mov
sbb
jle
mov
aad
xor
movs
or
fisttp
mov
sbb
cmp
cmps
cmp
mov
and
mov
and
call
cmp
pushf
mov
xchg
xchg
and
sbb
or
jmp
sub
and
scas
sbb
in
inc
add
jle
int3
cmps
mov
add
ss
inc
adc
sub
sahf
bound
jb
cmps
stos
ja
or
mov
fidivr
and
push
cs
mov
add
push
xchg
test
and
push
sub
or
ret
sbb
ja
pop
push
push
push
out
xor
nop
or
jne
lods
iret
loopne
cmp
push
cmp
ror
pop
cld
test
cld
pop
or
or
inc
xchg
cwde
mov
(bad)
rcr
sahf
jns
stos
sub
sbb
pop
into
mov
imul
stc
sbb
mov
xor
adc
movs
jne
and
pusha
test
jnp
movs
push
addr16
or
push
nop
vpsubusb
pop
adc
push
push
mov
je
jbe
add
inc
(bad)
mov
pusha
mov
sbb
lahf
outs
out
push
data16
mov
cmc
gs
fisttp
push
xchg
xor
bound
cmp
fcmovu
loopne
sub
jmp
cmp
sbb
add
mov
ss
hlt
xchg
loope
inc
jp
jne
pusha
test
push
pop
xchg
add
push
gs
les
jg
movs
aad
aam
ins
hlt
xor
arpl
loop
xor
mov
adc
(bad)
xor
aad
xor
jns
mov
and
cmc
aad
sub
push
in
xchg
(bad)
in
test
dec
push
dec
loopne
in
retfw
test
movs
sti
mov
cmps
mov
ret
fdivr
hlt
xor
adc
scas
jg
mov
dec
push
mov
pop
pop
xchg
sub
hlt
pop
dec
mov
loop
ins
push
xchg
mov
fmul
xor
inc
or
jecxz
mov
and
ror
push
fcomip
mov
mov
fiadd
test
xor
loop
pop
not
jg
ins
mov
dec
cmc
stc
push
mov
mov
fld
iret
aad
xor
jo
jnp
sbb
stos
mov
sbb
xchg
mov
jp
daa
xchg
jp
sub
sbb
push
mov
sbb
stc
jne
imul
mov
loopne
dec
call
ret
add
push
sbb
out
jl
mov
ror
xchg
ror
add
adc
leave
out
sub
into
daa
es
ins
icebp
gs
xchg
jnp
pusha
movs
dec
dec
fs
mov
bound
mov
sub
mov
bound
mov
jno
(bad)
mov
sub
push
xor
jno
jno
pusha
loop
add
test
push
sub
pop
push
les
or
or
pop
adc
and
test
mov
inc
(bad)
mov
es
je
es
lds
xor
popf
cli
cmp
mov
dec
imul
div
adc
adc
lds
mov
pop
ret
jo
lahf
dec
mov
jnp
mov
pop
arpl
inc
shl
daa
sub
cmps
jnp
aam
xorps
cmps
mov
dec
jle
push
mov
test
adc
pop
pushf
aaa
sub
jmp
neg
shr
ret
sbb
adc
sbb
cmp
dec
xchg
mov
js
lods
xor
xlat
popf
mov
mov
int3
outs
imul
es
mov
cwde
xchg
mov
add
mov
lea
xor
ins
outs
xchg
or
mov
sbb
jecxz
mov
xor
add
inc
out
jmp
jp
mov
adc
lds
xor
jae
jne
fs
pop
jg
(bad)
test
(bad)
out
nop
sub
pop
addr16
dec
cmp
test
cdq
cli
test
add
hlt
rol
adc
inc
scas
sub
mov
(bad)
jns
xchg
push
xor
mov
sahf
aas
xlat
(bad)
stos
sbb
xor
xor
jp
outs
and
test
add
dec
mov
retf
fisub
jmp
aaa
lock
and
or
int3
sar
mov
js
cmp
sbb
or
adc
inc
mov
mov
cwde
repnz
lahf
cmps
loopne
inc
js
and
sahf
xchg
popa
test
mov
mov
lahf
dec
int3
ins
cli
rcr
mov
push
xlat
inc
ret
add
jns
daa
add
sub
fistp
jns
or
bnd
(bad)
jp
loopne
mov
sub
dec
dec
mov
pop
inc
push
aas
and
(bad)
mov
jecxz
lds
iret
sub
push
adc
inc
nop
ret
or
jp
jl
sbb
or
push
repz
movs
(bad)
mov
call
outs
sub
pop
or
lea
mov
inc
dec
mov
ret
aas
push
xchg
mov
stos
xor
mov
mov
sub
xlat
xchg
pop
add
inc
cmc
cs
xor
sbb
js
sbb
js
mov
and
sub
jne
and
push
stos
mov
jns
jmp
dec
cmp
or
retf
shl
jl
sbb
cs
icebp
imul
in
mov
xchg
cld
(bad)
jecxz
mov
xchg
rol
or
xchg
xchg
js
or
pop
mov
scas
jo
ds
push
cmp
fild
add
lds
aam
pop
shr
outs
pop
fnstsw
and
das
sbb
(bad)
aad
sub
sbb
mov
xchg
ins
add
repz
pop
mov
repz
cmp
test
jo
js
loopne
daa
dec
add
fst
mov
jmp
je
ins
cmp
sbb
sbb
fwait
leave
sti
retf
and
sub
jns
and
cmp
call
(bad)
mov
sbb
mov
(bad)
cmp
cmp
into
loopne
movs
mov
xor
or
inc
sub
ins
push
and
xchg
jecxz
mov
jno
dec
adc
adc
not
test
(bad)
and
pushf
or
sub
fst
mov
adc
rcr
call
add
lock
mov
sbb
nop
and
stos
xor
lods
adc
rcl
mov
neg
jb
loope
cmps
xchg
loopne
ror
arpl
xor
div
xor
push
mov
stc
movs
lods
add
mov
ins
cld
pusha
adc
fcmovne
imul
mov
pop
sahf
or
mov
xchg
or
adc
pop
jge
add
cmp
push
xor
cmps
inc
jmp
movs
dec
cmp
xchg
mov
adc
add
sub
xchg
imul
mov
adc
out
pusha
sbb
inc
mov
pusha
sub
xchg
imul
outs
movs
xor
je
mov
jae
jnp
(bad)
out
stos
or
stos
in
std
mov
push
cmp
pushf
pop
adc
jmp
stos
xor
xchg
dec
ss
mov
cmp
pop
xor
sar
mov
xchg
adc
pop
rol
cwde
xor
sbb
shl
out
ds
leave
sbb
rcl
push
shl
dec
dec
cmp
add
mov
xor
or
scas
and
int
mov
inc
(bad)
mov
lea
push
adc
dec
ja
xor
mov
int
out
inc
push
pushw
cmps
jo
pop
jge
inc
pop
fild
dec
mov
bound
out
push
test
shl
fst
xor
scas
lock
sbb
mov
jne
mov
cli
test
js
ja
xor
sub
add
ja
or
loopne
call
sub
lahf
arpl
push
out
cmp
test
test
xchg
rcr
test
imul
push
mov
sub
pop
fst
ja
les
sbb
test
mov
loope
cmp
sub
dec
pop
sub
div
push
mov
(bad)
(bad)
sub
shl
push
mov
and
mov
in
xor
push
out
mov
mov
shl
in
data16
loope
ja
loope
cdq
mov
push
adc
js
jmp
inc
ret
xchg
pusha
add
cs
lock
out
sub
test
sbb
cmc
xchg
adc
push
inc
out
ret
and
add
inc
dec
lock
mov
sub
jmp
xchg
lock
fsub
pop
sbb
adc
and
dec
mov
out
iret
repz
(bad)
aaa
scas
cs
cld
push
ret
dec
sub
fdivr
push
adc
push
ret
xchg
sub
lea
inc
std
xchg
mov
mov
popa
pop
out
cs
adc
loopne
pop
test
or
jae
mov
push
aas
add
dec
xor
icebp
xchg
cwde
pop
add
mov
push
stos
pop
pop
retf
sbb
lahf
popa
jg
dec
repnz
ret
add
push
imul
fnstsw
sbb
cmp
pop
add
and
fadd
cmps
or
push
pop
mov
daa
fild
pop
adc
sub
cmp
out
or
jmp
mov
nop
mov
stc
ficomp
xor
or
cmp
ds
mov
out
sahf
icebp
retf
out
cmc
aas
sbb
inc
ret
and
popf
dec
push
jmp
push
stos
sub
pop
retf
xchg
pop
inc
mov
cs
mov
or
sar
dec
inc
mov
mov
mov
into
sbb
jo
push
or
movs
push
cld
sub
add
inc
dec
pushf
xchg
and
in
inc
out
jnp
jns
mov
jns
sbb
mov
and
outs
push
popf
fbstp
add
je
jecxz
call
sbb
call
mov
mov
stc
test
jge
cmps
mov
sub
enter
mov
mov
add
cmp
pushf
jg
dec
sbb
or
jae
pop
mov
mov
push
jl
sub
mov
dec
scas
dec
dec
fwait
jne
retf
cli
push
sbb
sub
sar
sub
jecxz
sbb
mov
ins
gs
in
sbb
pop
jns
inc
jb
or
sub
scas
jo
inc
arpl
sub
add
jg
je
mov
add
xlat
sbb
pop
or
in
add
or
adc
push
popa
and
lock
and
mov
pop
retf
gs
xchg
push
sbb
cmp
out
ja
or
dec
jae
jb
hlt
xor
xor
sbb
inc
inc
pop
lea
iret
dec
call
sbb
push
test
mov
lock
out
pop
xchg
mov
std
rcr
jle
jns
sub
jl
fsub
sbb
test
pop
pop
loop
pop
ins
jo
(bad)
push
aam
dec
lods
sar
or
adc
fisttp
out
xchg
fdivrp
stos
xlat
popf
lock
and
or
shl
mov
outs
and
mov
pop
add
sbb
sahf
imul
enter
cld
mov
cmp
mov
(bad)
in
mov
rcr
pop
xchg
sub
sbb
inc
xchg
xchg
fld
addr16
test
in
mov
idiv
pop
mov
push
and
mov
test
retf
push
mov
fwait
xor
jb
popf
fcom
mov
in
xor
pusha
fadd
fcom
psllw
dec
call
mov
call
je
xor
clc
loopne
push
jo
mov
enter
sub
out
pop
jg
push
sahf
cld
jmp
outs
inc
mov
mov
push
inc
push
add
xchg
outs
loopne
ss
dec
and
sub
das
mov
xor
pop
pop
loope
fidivr
or
pop
inc
dec
adc
scas
mov
or
xchg
cmp
pop
jle
mov
(bad)
mov
sub
pop
pop
push
xchg
xor
imul
out
add
jp
push
loope
mov
sbb
cdq
mov
jp
jecxz
push
pop
jnp
xor
inc
add
bound
adc
jle
leave
and
and
popf
dec
sahf
cmps
cld
jge
imul
cmp
sti
(bad)
lds
mov
mov
lds
dec
pop
cmp
cmps
bswap
pop
call
sbb
imul
jecxz
out
(bad)
into
pushf
sbb
jbe
adc
cmp
inc
cmp
neg
out
cli
fstp
mov
jmp
pushf
pop
pop
std
mov
inc
mov
xchg
and
inc
jbe
dec
mov
jle
mov
inc
push
jmp
movs
mov
shl
clc
enter
icebp
retf
xor
cdq
ficom
mov
popa
ficomp
add
bnd
in
punpckhdq
out
ins
aam
aaa
shr
fs
push
call
xchg
mov
sub
sub
(bad)
cmps
xchg
xor
mov
dec
iret
js
inc
sub
call
mov
or
ja
inc
ss
fdiv
sub
cmp
out
in
sahf
addr16
shr
imul
mov
inc
sbb
lods
data16
adc
les
jns
lods
xchg
push
outs
ret
cmova
and
sar
ret
mov
(bad)
retf
fisttp
or
int3
pand
push
jne
(bad)
ficom
les
jp
scas
ret
add
pop
mov
in
loopne
outs
movs
jge
xchg
imul
dec
loop
push
mov
xchg
xchg
test
push
push
out
push
stos
jb
inc
ret
je
xchg
xor
add
cmp
and
aas
lock
cmc
pop
mov
mov
in
jecxz
or
movs
scas
or
out
add
fisttp
xchg
sub
or
push
or
jg
jmp
aad
and
pop
sbb
ins
jae
push
mov
jbe
jns
les
mov
add
(bad)
pop
mov
(bad)
aaa
in
sbb
mov
sar
dec
arpl
mov
cwde
imul
cdq
cmp
jne
fidiv
out
mov
sub
cld
inc
sbb
xlat
aam
int
hlt
das
ret
xchg
sbb
repnz
outs
loope
jecxz
in
and
ins
stc
idiv
fbld
arpl
push
mov
mov
gs
jns
sbb
adc
or
mov
mov
rol
pusha
or
sub
mov
dec
cmp
leave
mov
ins
push
inc
push
push
mov
jle
out
loop
cld
inc
ror
or
inc
js
nop
xchg
or
xchg
mov
mov
fild
or
fmul
cmp
mov
and
xchg
call
call
mov
fwait
sub
cmps
les
xor
sub
shl
adc
std
mov
push
push
xor
fdivr
inc
pop
or
mov
inc
(bad)
push
ja
push
sub
iret
push
out
or
pop
ja
add
cmps
lods
pusha
sub
sbb
fdivr
jmp
or
(bad)
cmp
pop
sbb
cli
in
pop
xor
test
cmp
pop
jg
cmps
pop
out
mov
jmp
clc
les
pop
add
xor
shl
mov
shl
jp
leave
sub
xor
pop
or
ret
dec
and
idiv
(bad)
shl
xor
xchg
dec
push
cmps
inc
sub
and
inc
inc
nop
inc
sbb
sub
je
lea
add
sbb
test
mov
push
loop
mov
jb
ja
icebp
dec
xchg
aas
xlat
scas
push
jo
out
sbb
ins
mov
mov
cmp
(bad)
ret
in
in
sbb
movs
aaa
inc
(bad)
and
cli
jecxz
inc
jge
push
out
in
in
cli
loop
mov
aaa
add
stc
in
mov
add
dec
aad
add
mov
js
fmul
jmp
mov
scas
mov
in
adc
mov
sti
pop
call
mov
mov
call
inc
shr
xchg
(bad)
retf
mov
lock
fisttp
in
stos
hlt
scas
sar
sbb
and
imul
pop
maxps
fstp
sti
scas
or
int3
or
pop
ins
cmp
cmp
cmp
retf
mov
fcom
js
push
stos
inc
sub
ret
sbb
rdtsc
xchg
sar
(bad)
add
inc
xlat
mov
sbb
mov
pop
aad
fcmovnbe
cdq
out
and
mov
sbb
jbe
mov
push
pop
or
cmp
rol
(bad)
jmp
in
xchg
adc
sub
js
mov
scas
mov
jnp
icebp
test
push
mov
inc
xchg
bound
jo
pop
jne
xchg
adc
cmp
retf
mov
pusha
jp
pop
mov
das
and
icebp
adc
es
sbb
dec
(bad)
mov
jecxz
repnz
out
inc
jo
sub
adc
and
and
xor
lahf
cmp
mov
add
arpl
mov
test
lods
fst
pop
and
cmp
jecxz
imul
shl
iret
(bad)
rcl
inc
inc
mov
hlt
and
or
popa
dec
or
jg
loopne
arpl
retf
inc
pop
jbe
sbb
xchg
sbb
xchg
mov
lahf
or
mov
xor
lods
mov
(bad)
xchg
fmul
(bad)
aaa
adc
fucomi
mov
out
xor
sahf
in
or
mov
in
add
jnp
xor
stos
mov
mov
dec
jle
push
mov
int3
dec
out
and
(bad)
popf
daa
sar
leave
retf
mov
mov
push
outs
xchg
mov
ins
(bad)
fstp
fsubr
inc
fdiv
ror
cmp
pop
std
mov
sub
stos
shl
pop
dec
pushf
ins
ficomp
jb
mov
inc
test
jbe
jl
mov
scas
jp
out
mov
and
sub
xchg
aad
xor
fneni(8087
add
pop
pop
mov
rol
(bad)
jle
push
pop
xchg
icebp
mov
test
out
cmp
adc
add
sub
jmp
cli
and
mov
movs
inc
dec
pop
js
enter
test
cmp
and
retf
cmp
es
cli
(bad)
dec
fdivp
xchg
movs
retf
and
not
shl
hlt
add
xor
daa
add
push
bound
adc
pushf
add
loopne
test
push
or
mov
jnp
add
lods
outs
mov
ss
cmp
dec
pop
iret
or
add
out
add
sbb
mov
mov
fadd
and
push
sub
ret
jmp
jge
jb
nop
retf
daa
mov
stc
retf
data16
pop
adc
imul
xor
daa
cdq
ror
mov
out
cli
cmc
or
rcl
leave
inc
mov
cmp
pop
push
addr16
jnp
sub
xchg
sbb
dec
jb
das
jns
bound
xchg
or
fwait
adc
push
pop
mov
out
ret
add
and
(bad)
adc
jg
sete
dec
mov
(bad)
mov
out
inc
sbb
add
(bad)
fstp
or
arpl
mov
cmp
sub
shr
loope
mov
sbb
loope
or
adc
cdq
cmp
imul
push
clc
sbb
mov
in
xchg
(bad)
in
push
adc
mov
mov
xchg
out
push
xchg
add
xor
sbb
jp
push
sub
dec
mov
pop
pushf
jmp
cmp
cld
jp
cmp
xchg
out
retf
cmps
inc
push
mov
xchg
adc
cmp
jecxz
mov
iret
fimul
push
movs
outs
cld
(bad)
jb
cmps
xchg
(bad)
call
sub
ins
daa
bound
cmc
cmp
push
xchg
in
xchg
xor
(bad)
xor
mov
lea
adc
jmp
into
cmp
adc
pop
out
pop
dec
sbb
jae
pop
das
in
(bad)
cmp
cdq
ror
ins
mov
shl
jmp
cld
push
clc
test
loope
push
in
sbb
mov
les
arpl
pop
pop
mov
imul
xchg
xchg
xchg
and
lods
cmp
mov
fwait
imul
call
fsubp
or
out
xchg
icebp
ficomp
mov
dec
xor
(bad)
xor
pop
lods
push
pop
(bad)
out
and
dec
add
xchg
xchg
faddp
aaa
mov
mov
push
fstp
in
dec
in
pusha
dec
jns
adc
(bad)
or
adc
pop
sbb
mov
pop
cmp
add
and
movs
xchg
sub
imul
pusha
or
hlt
xlat
aad
jmp
inc
loop
shl
pop
je
sbb
fst
sbb
(bad)
into
adc
shr
popf
jns
imul
sub
cmp
xchg
cmp
jno
inc
mov
stos
or
jle
jle
scas
ja
sbb
inc
sub
xchg
mov
cmp
xchg
arpl
sub
ds
inc
loopne
nop
fcom
lock
cmp
inc
(bad)
jne
dec
jae
in
(bad)
jo
sub
jns
fidiv
aam
(bad)
or
or
lahf
iret
dec
xor
pop
jp
test
pop
inc
rcr
push
jb
not
inc
rcr
xchg
jae
imul
jnp
lods
push
fwait
jecxz
jb
sahf
xor
xchg
stos
inc
sbb
xor
popa
mov
adc
xchg
popf
add
mov
xchg
pop
add
and
sbb
and
cmp
adc
pusha
dec
pop
mov
test
jno
adc
sbb
js
mov
xor
loopne
clc
mov
enter
mov
push
cmp
xor
ins
add
int3
in
mov
lea
imul
movs
enter
xchg
fwait
(bad)
out
sti
inc
shl
cmp
lahf
and
pop
pop
xor
sahf
imul
pop
inc
sub
xchg
iret
pop
mov
ds
push
fmul
pop
popf
test
xchg
std
mov
ret
sbb
mov
cli
mov
sub
dec
push
push
repz
fidivr
inc
cmps
(bad)
ficomp
in
enter
mov
mov
fmulp
test
xor
mov
sar
test
cdq
icebp
scas
bound
sub
js
push
into
push
ficomp
out
(bad)
pop
imul
dec
cli
mov
sub
into
repnz
add
jl
inc
inc
add
icebp
out
imul
mov
pushw
xchg
mov
sbb
dec
jle
mov
fcomp
loop
mov
adc
fwait
sub
adc
xchg
dec
and
adc
jecxz
mov
pop
cmp
and
cmps
sub
in
ret
ds
pop
sub
loopne
mov
call
shr
xchg
jge
jns
repz
ins
sub
das
adc
repnz
scas
leave
std
sbb
pusha
cli
push
or
jg
es
mov
pop
mov
repz
push
xor
xchg
retf
int
fcmovu
mov
loopne
add
movs
imul
lock
daa
add
and
(bad)
and
fadd
dec
dec
inc
fidivr
jmp
fadd
xchg
inc
cwde
jns
cmc
pop
out
push
pop
xchg
sbb
mov
mov
cmp
call
mov
movs
popa
push
xor
sub
xor
mov
test
adc
into
inc
xor
test
in
add
jae
int
les
repnz
out
jl
jns
dec
fidivr
mov
ja
aaa
pop
jle
xor
mov
dec
loope
or
in
nop
sub
addr16
cli
stos
div
sub
add
cs
loope
mov
into
cmp
xchg
push
popf
adc
add
cmps
mov
ret
dec
add
fidivr
dec
inc
psrlw
out
cmps
xor
fcmovu
shr
jl
xchg
inc
or
xchg
inc
cli
out
dec
rcl
sbb
mov
jbe
inc
stos
retf
cmp
jge
or
ror
sub
cmp
mov
adc
jle
pop
xchg
sub
js
sbb
mov
cli
xor
sbb
adc
fisttp
dec
xor
lods
push
fcomp
mov
icebp
xchg
js
or
push
(bad)
push
lea
push
or
pcmpeqw
xor
stos
mov
cmps
das
sub
push
jns
ffree
pop
ror
add
add
aad
cli
sub
adc
pop
pushf
mov
add
mov
push
mov
mov
fistp
scas
retf
movs
cmps
in
(bad)
ret
adc
jns
hlt
aas
push
mov
aad
fwait
mov
cmp
sbb
and
mov
jae
jg
div
push
or
imul
mov
push
aas
nop
pop
pop
jle
repz
fnsave
out
test
das
or
je
sub
dec
stos
ins
adc
push
or
xchg
xchg
inc
fwait
lds
lds
stc
ins
xchg
(bad)
cmps
cmp
imul
mov
push
xchg
scas
xchg
jae
add
add
sbb
xor
jb
arpl
mov
dec
iret
lahf
jnp
mov
add
test
sti
repz
mov
or
cmp
leave
retf
(bad)
int
stc
rcl
enter
cmp
sub
pop
clc
or
dec
mov
scas
dec
mov
push
push
cmc
nop
test
mov
xchg
push
adc
test
push
and
cmps
mov
pop
sub
retf
jbe
(bad)
icebp
mov
pop
mov
rcl
push
shl
in
fdiv
mov
int3
stos
pop
push
add
pop
pop
dec
and
pop
aam
call
pop
push
add
out
int3
xor
pop
mov
lock
or
adc
jmp
and
neg
outs
mov
mov
xor
shl
mov
add
test
int3
cmp
mov
clc
ins
ins
dec
sbb
xchg
(bad)
retf
nop
sub
ret
jle
retf
fdiv
das
xor
cmp
dec
in
cdq
pop
push
and
add
mov
mov
jo
push
sub
scas
data16
aad
xor
ds
std
in
or
mov
nop
out
test
movs
mov
in
xor
mov
outs
dec
pop
mov
test
inc
mov
jecxz
clc
sahf
(bad)
jb
and
sbb
sbb
push
aaa
cli
mov
test
inc
and
push
jns
push
jae
and
mov
into
mov
les
sbb
sti
and
pop
or
cmp
ret
mov
ror
and
(bad)
dec
cmc
xor
shr
dec
mov
into
jg
sub
dec
sbb
aas
dec
xor
adc
push
xchg
sbb
mov
test
cli
mov
(bad)
mov
(bad)
jmp
adc
jle
js
cli
inc
xor
adc
ss
adc
cmp
cmps
mov
(bad)
sti
mov
or
add
jnp
mov
dec
lds
movs
test
sbb
or
imul
test
inc
or
fcomp
inc
mov
push
outs
sbb
mov
push
add
nop
(bad)
adc
fidiv
lods
cdq
call
mov
mov
push
jl
or
sub
lods
xchg
mov
mov
inc
push
jge
xor
imul
xor
jg
lea
mov
stc
cmps
in
idiv
jmp
cli
ret
xlat
out
(bad)
fnsave
mov
das
mov
pop
xchg
cmp
sub
or
push
hlt
xchg
test
rol
call
push
scas
pop
popf
and
push
es
fisubr
dec
shr
loop
arpl
fld
pop
push
mov
cdq
jno
inc
push
mov
retf
mov
push
pusha
sbb
and
or
test
pop
add
les
enter
(bad)
push
and
sbb
mov
jl
cmp
out
dec
loope
mov
sahf
repnz
pushf
repz
hlt
xchg
loope
cmp
xchg
aad
jp
xor
not
addr16
dec
clc
inc
fimul
mov
or
cmp
fimul
cmp
push
push
ret
(bad)
into
mov
add
std
and
test
jbe
mov
fdivr
popa
fimul
push
push
add
mov
or
cld
aaa
sbb
mov
shl
adc
push
retf
fadd
xchg
xchg
cli
mov
scas
jnp
(bad)
and
xor
lea
pop
jne
inc
jmp
lds
mov
pop
pushf
pop
js
outs
push
dec
pop
inc
inc
mov
add
jno
mov
or
mov
sub
rcr
xchg
inc
mov
call
mov
imul
mov
sub
jecxz
sub
adc
lea
cdq
hlt
icebp
out
aaa
xchg
rcl
adc
adc
pop
push
inc
cwde
push
lock
fxch
xor
jbe
jg
out
xchg
inc
popa
call
mov
push
pop
daa
dec
rol
push
dec
mov
pop
stos
lods
or
cmp
clc
mov
aas
pop
retf
mov
push
xchg
bound
push
fst
(bad)
fcmovu
mov
ffree
sub
jp
mov
sbb
inc
jg
sub
xchg
lods
sar
jecxz
js
dec
test
(bad)
lock
(bad)
xor
pusha
mov
rol
ss
jg
repz
cmp
adc
fdivr
mov
mov
dec
pop
push
xor
and
push
repnz
xor
pop
add
mov
mov
je
add
leave
push
nop
mov
mov
dec
popf
cmc
xor
fsubr
leave
nop
sub
pop
or
and
bound
jbe
loopne
add
xchg
adc
dec
sub
fidivr
lock
(bad)
ss
ficomp
daa
sbb
lods
mov
call
push
lock
addr16
mov
and
es
xor
sub
cld
or
mov
push
push
xchg
int3
lods
into
inc
adc
dec
cmc
mov
ret
in
repnz
rcr
push
repnz
mov
push
(bad)
xchg
sub
(bad)
shl
test
mov
stos
jno
retf
cmp
mov
dec
sahf
sub
adc
cld
inc
jle
inc
popf
aam
outs
mov
push
fsubr
mov
aaa
xor
jmp
movs
cmc
sbb
cmp
dec
das
(bad)
and
xor
inc
ret
push
mov
jbe
fcomp
stc
push
and
das
push
jle
gs
(bad)
icebp
aam
cmps
push
add
xchg
fist
imul
iret
cmps
fwait
add
push
sahf
push
call
inc
cmps
jne
xor
mov
aas
lods
push
shl
cwde
xchg
popa
xchg
push
repz
fwait
mov
pop
int
inc
les
ror
xlat
fidiv
cdq
xor
fs
(bad)
arpl
mov
call
fdiv
fst
adc
pop
sbb
shl
mov
xor
xchg
jmp
mov
nop
movs
out
mov
mov
adc
stc
lods
and
clc
jo
pop
inc
or
pop
push
out
lds
(bad)
fst
out
sbb
mov
xlat
sbb
imul
je
daa
(bad)
push
pop
mov
shl
(bad)
xchg
in
push
nop
sub
dec
cmp
jl
ror
loope
push
cmps
cmps
nop
add
jecxz
je
mov
nop
sbb
dec
and
lahf
cmp
jae
jne
mov
test
cmp
mov
cs
(bad)
aad
fbld
lds
jg
bound
adc
lahf
cmp
push
xchg
rcr
inc
mov
mov
mov
shl
or
add
out
jbe
adc
sub
std
xor
pop
dec
loop
xchg
pop
cmp
xchg
mov
imul
loope
mov
stc
lea
inc
adc
inc
push
mov
sar
pop
push
mov
cmp
add
cwde
dec
ss
cwde
or
jmp
adc
xor
icebp
dec
lock
xchg
push
(bad)
retf
out
aas
push
pushf
xor
cli
adc
jne
sub
(bad)
pop
popa
movs
sar
div
push
repnz
mov
push
dec
arpl
add
dec
call
in
sbb
out
add
mov
shrd
mov
jae
xchg
mov
dec
dec
fistp
lds
jne
sub
xor
xchg
xchg
sub
fwait
mov
push
push
test
mov
stos
jge
aam
or
mov
popf
adc
sahf
outs
mov
retf
stos
je
mov
jmp
cmp
lods
xchg
sbb
dec
mov
xor
out
das
lea
retf
cmp
and
out
pop
jb
jno
mov
mov
inc
mov
jl
dec
dec
push
(bad)
mov
mov
and
arpl
retf
pop
add
or
cld
hlt
dec
dec
cld
pop
mov
cwde
or
xchg
inc
push
lahf
stc
inc
rcl
out
jecxz
cwde
dec
mov
cmp
rcl
or
test
mov
fs
outs
xchg
bound
rcl
sbb
dec
or
arpl
pop
jo
push
std
in
shl
aad
push
adc
lds
into
adc
mov
out
out
cmp
add
sahf
xor
inc
aam
sbb
adc
ins
adc
inc
jne
out
icebp
pop
add
adc
jl
mov
push
push
icebp
mov
scas
(bad)
fstp
mov
mov
cdq
push
fnsave
cmc
sub
cs
pop
fimul
jle
pop
xor
int3
call
pop
int
scas
dec
aas
or
pop
mov
sahf
test
and
jmp
repz
ret
xor
outs
(bad)
jns
mov
push
test
xchg
cmp
push
mov
mul
jmp
inc
fmul
inc
xor
push
dec
mov
daa
adc
sbb
call
cmps
cmp
cwde
pop
lods
pop
jg
mov
stos
shr
sar
psubusw
mov
push
(bad)
test
(bad)
sar
pop
pop
fs
es
mov
loop
lock
movs
or
dec
aad
cmps
lds
ror
dec
mov
int3
imul
leave
sub
movs
push
jle
fcomip
inc
stos
into
inc
out
pop
movs
es
cmp
pop
cmps
loop
jecxz
mov
xchg
pop
ins
pop
popa
inc
test
arpl
pop
movs
in
(bad)
outs
adc
xor
and
jo
test
xchg
add
dec
sub
aas
nop
push
repz
push
mov
outs
or
loopne
daa
adc
or
xor
mov
and
sbb
int3
lods
add
mov
cmp
sub
and
ja
mov
fstp
ret
jns
or
sub
pop
add
repnz
mov
add
sub
sbb
inc
gs
dec
add
mov
je
push
or
jb
test
or
inc
inc
das
xchg
pop
push
add
push
jne
fs
data16
ins
sbb
sub
jge
mov
bound
(bad)
sbb
in
lds
mov
outs
pusha
call
mov
jns
imul
push
mov
jb
mov
ins
daa
icebp
cs
inc
leave
pushf
mov
mov
nop
pop
push
(bad)
test
das
aam
movs
or
xchg
cld
fs
push
pop
das
sbb
add
push
pop
sbb
adc
adc
pop
sahf
xor
mov
push
fnstenv
retf
scas
pop
inc
rcl
inc
inc
cli
cs
cmp
mov
and
cdq
aam
into
movs
and
sti
push
dec
add
dec
aas
push
add
ds
jp
sbb
repnz
outs
aaa
pop
jae
aas
iret
mov
in
cmps
dec
popa
push
jmp
adc
add
rcr
inc
mov
popa
(bad)
mov
mov
xchg
xor
loop
call
sti
fild
in
xor
xor
or
pop
cmp
nop
xchg
imul
int
push
fsub
mov
or
test
cs
hlt
rcr
and
and
xor
jecxz
push
cs
xchg
mov
jge
dec
movs
mov
sti
int
xchg
add
jnp
cmp
adc
int3
xchg
outs
out
mov
pop
mov
pusha
push
or
mov
mov
test
xchg
or
fisub
or
test
cmp
lds
std
inc
xchg
test
or
ss
test
jae
mov
push
daa
mov
movs
dec
fcomip
pop
dec
test
hlt
add
test
pop
popf
adc
not
rol
dec
ds
pop
inc
into
mov
jne
daa
mov
int3
pop
add
repz
adc
inc
jl
cmp
aam
fdivr
adc
mov
je
clc
cmc
repz
jl
push
cmp
and
cmp
test
imul
mov
adc
or
pop
and
mov
mov
in
ret
pop
(bad)
adc
push
fld
int3
in
ins
or
aad
add
nop
jne
sbb
cmp
xlat
dec
addr16
cdq
mov
std
aam
adc
outs
and
and
jle
bound
es
jmp
cmp
fstp
pop
int
push
fist
nop
icebp
sti
push
push
dec
push
push
outs
inc
push
push
aaa
sub
dec
out
adc
jbe
jg
in
cwde
jecxz
and
pop
leave
pop
aad
sub
adc
pop
cli
cs
push
sub
inc
push
inc
xchg
setl
stc
retf
ret
or
sbb
mov
sbb
loopne
or
movs
mov
push
or
shl
pusha
sbb
dec
inc
hlt
test
jle
out
cdq
cwde
ja
adc
scas
repnz
sub
in
mov
jae
sbb
sidtd
dec
xor
cs
adc
xchg
dec
add
sbb
int
xor
mov
sahf
jle
fisubr
pop
cmp
lods
cwde
mov
loop
es
jbe
adc
(bad)
cmp
loop
(bad)
pusha
pusha
mov
jp
aam
cmp
cmps
arpl
adc
mov
pop
xchg
stos
jae
or
mov
pushf
xor
mov
or
aaa
sub
test
jge
rcl
leave
ins
shl
pop
and
pop
push
or
jae
test
test
push
xchg
repnz
clc
test
out
xor
xchg
mov
or
(bad)
mov
in
adc
cmp
inc
fldcw
pop
not
sub
push
ins
js
or
imul
add
in
push
mov
mov
bound
lahf
sbb
sbb
lock
mov
xor
ja
adc
mov
test
fidiv
xor
cmp
les
dec
dec
jle
aam
xchg
sub
sub
mov
add
or
js
mov
into
mov
add
rcl
sub
mov
add
jb
fstp
pop
sub
adc
test
inc
ret
push
push
sub
arpl
lods
jb
jmp
call
dec
or
lods
and
xor
stos
movsx
ins
and
(bad)
test
sbb
loope
add
and
popa
pushf
add
nop
xor
push
sub
adc
in
pop
ss
ins
sub
adc
xchg
repz
scas
xchg
bnd
xchg
outs
std
(bad)
jo
ret
pop
mov
fistp
add
retf
loop
or
add
jmp
mov
leave
push
and
dec
(bad)
cld
dec
push
sbb
or
out
mov
or
cmp
push
xchg
jl
cmp
adc
dec
mov
mov
pushf
xchg
enter
fisubr
pop
cs
movs
mov
jp
ins
push
mov
push
dec
jnp
dec
test
test
mov
js
das
jo
cmp
test
pop
ja
loop
retf
pop
push
jbe
and
sbb
and
add
fnstenv
stos
pop
push
dec
frstor
mov
xchg
push
and
int
jecxz
mov
pop
ins
pop
pop
jecxz
pushf
jae
jg
cdq
outs
push
adc
(bad)
leave
xchg
ficomp
mov
int
and
dec
fiadd
xchg
(bad)
pop
sub
pop
cli
jmp
jl
push
or
cmp
out
popf
cmp
mov
pop
mov
call
pop
sbb
test
dec
les
sbb
aad
cmp
inc
adc
(bad)
mov
ins
dec
xor
cs
popf
(bad)
call
aas
pop
cmps
psubusb
mov
icebp
mov
cmp
jmp
test
ret
sar
cmps
dec
xor
xlat
shr
adc
sbb
in
(bad)
xor
ror
js
mov
mov
sbb
add
hlt
mov
retf
std
(bad)
pop
out
ds
jecxz
mov
xor
je
stc
fistp
sub
bound
pushf
out
mov
cli
mov
bswap
xor
pop
pop
imul
adc
repnz
fs
cmp
pop
fmul
and
or
sub
pop
xor
or
nop
fdivrp
pop
push
adc
xchg
mov
inc
out
cld
push
inc
cmp
mov
dec
cmp
nop
out
inc
dec
stc
jno
push
or
test
sbb
jnp
inc
fisttp
(bad)
outs
mov
test
sub
imul
int3
test
sar
or
and
lods
and
inc
aam
push
push
sub
in
jbe
add
mov
mov
scas
into
pop
push
pop
and
and
test
sbb
rol
pop
in
jle
xchg
pop
mov
pop
jbe
add
add
mov
stc
or
sbb
iret
sti
ins
jmp
(bad)
nop
ins
and
mov
dec
push
ds
cdq
sbb
adc
gs
inc
jns
arpl
sub
lea
inc
iret
mov
(bad)
mul
js
jnp
adc
pause
jmp
push
repnz
ret
test
loope
out
push
or
dec
jne
test
stos
xchg
jno
fst
mov
retf
xor
push
mov
imul
data16
xchg
sbb
inc
xor
cwde
lahf
push
xchg
dec
lods
mov
jbe
add
stos
push
mov
rcr
dec
shl
mov
loop
push
ss
dec
(bad)
jg
pop
(bad)
or
(bad)
jbe
xor
lahf
popf
lds
mov
pusha
push
push
movs
adc
ret
aas
retf
dec
repnz
push
mov
inc
lahf
adc
xor
or
std
add
add
sbb
jmp
pusha
jne
pop
dec
and
call
retf
out
bound
sbb
cmp
repnz
xchg
push
dec
imul
mov
outs
fist
sti
sub
neg
or
jecxz
iret
lds
adc
bound
cmp
mov
xchg
pop
jno
sub
sub
sub
stos
mov
and
shl
clc
loope
rcr
cmp
mov
mov
scas
jne
in
ins
gs
add
clc
retf
xchg
imul
ffree
std
fnstsw
sbb
xor
bound
dec
dec
das
lock
inc
movs
push
loope
mov
xor
push
mov
mov
icebp
inc
cmc
xchg
jg
inc
sub
xchg
or
cmp
lods
sub
mov
repz
shr
jmp
lock
inc
shl
mov
fwait
mov
lds
xor
push
push
sbb
or
ret
ss
in
mov
mov
sbb
or
cmp
adc
adc
shl
xor
xor
mov
mov
dec
shl
ds
out
fwait
adc
jecxz
cs
sbb
sti
mov
jne
retf
scas
push
sub
add
imul
popa
pop
pop
sub
aam
mov
dec
daa
(bad)
cmp
pop
in
jne
(bad)
aam
mov
mov
sahf
sahf
and
stos
(bad)
cld
and
inc
das
ret
and
sub
fld
jmp
(bad)
adc
inc
idiv
and
xlat
stos
jmp
xchg
sbb
iret
cmp
clc
scas
mov
cld
rol
das
sub
inc
shl
jbe
add
cmp
shl
pop
adc
xor
adc
leave
cmp
mov
sahf
mov
ss
pusha
fs
cmp
mov
jne
sar
add
xchg
push
push
cmp
rcl
fpatan
aad
sub
dec
rcr
(bad)
daa
mov
mov
shl
loop
xor
xchg
sbb
out
outs
std
mov
aas
fld
std
ins
pushf
cmp
in
sbb
pop
ret
mov
add
fld
inc
jge
js
cmps
push
pushf
stc
mov
dec
scas
pushf
xchg
iret
mov
jge
in
mov
neg
cmp
lock
pop
mov
lock
in
add
cs
data16
out
adc
cmp
mov
sbb
sar
xchg
mov
or
pop
mov
int3
repz
or
xor
inc
inc
cmp
fdivr
pop
sbb
addr16
xchg
cdq
xchg
and
xchg
imul
mov
aas
ds
xchg
mov
lods
dec
int3
ds
inc
neg
mov
add
fcomp
inc
or
and
xor
sub
mov
xchg
out
add
sti
sbb
pusha
pop
and
xchg
es
in
scas
std
sub
(bad)
data16
pushf
inc
fdivr
mov
lods
popf
jnp
jb
mov
into
cmp
pop
std
xchg
inc
xlat
mov
adc
fbstp
cmp
dec
or
xor
and
cmp
sub
jp
dec
into
mov
pop
test
jmp
aam
adc
outs
jge
mov
xchg
sbb
sub
dec
dec
imul
xlat
fst
pop
mov
mov
mov
adc
shl
out
jmp
cmp
or
xchg
(bad)
mov
es
mov
rcr
pushf
bound
mov
pop
xchg
(bad)
int
(bad)
jbe
mov
mov
push
jecxz
fnsave
scas
cmp
pop
inc
cmp
ret
dec
lock
mov
and
and
pushf
sub
jmp
popa
jecxz
dec
in
loop
sahf
add
dec
ret
lahf
into
mov
ins
clc
rcr
popa
jae
adc
dec
mov
cmc
(bad)
dec
adc
(bad)
retf
sahf
int3
pop
fidiv
test
and
out
sub
adc
or
icebp
(bad)
jecxz
xor
lock
mov
ds
push
jns
sub
sbb
sub
ror
dec
xchg
in
(bad)
dec
in
xor
xrelease
movs
mov
jle
int3
in
jne
mov
and
pop
enter
int3
pop
loop
mov
mov
add
mul
xchg
cs
aaa
(bad)
sbb
arpl
test
sahf
jo
adc
adc
mov
lock
cmc
sub
ss
data16
push
and
and
enter
(bad)
aaa
ret
xchg
xor
in
sbb
rol
daa
and
test
test
sbb
outs
lahf
nop
inc
adc
jmp
xor
cdq
outs
fbstp
fistp
dec
stc
cmp
and
(bad)
outs
add
xor
pop
mov
mov
es
inc
jg
ret
jbe
addr16
xor
xchg
call
dec
sub
push
std
test
aam
test
push
jmp
adc
push
(bad)
sub
lock
add
mov
ret
xchg
and
inc
clc
pop
sbb
out
mov
add
cmp
imul
jo
jecxz
mov
outs
aaa
or
jnp
stc
pop
std
adc
adc
repnz
shl
inc
fild
mov
xlat
mov
aaa
push
pop
add
fnstsw
iret
add
stos
cmps
push
jle
push
xor
mov
nop
push
mov
push
mov
icebp
dec
call
add
loope
pop
clc
xchg
cmp
pop
shl
hlt
inc
sub
ins
fisttp
retf
mov
iret
aas
pop
xchg
scas
rol
fidivr
xchg
push
out
fistp
pop
(bad)
(bad)
(bad)
push
movsx
jmp
cmp
out
sbb
mov
push
enter
adc
or
lods
outs
push
pop
hlt
mov
mov
mov
xor
jno
ret
sbb
pop
movs
test
test
pop
sub
cmp
repnz
imul
xor
jg
aaa
shl
iret
add
inc
xchg
adc
sbb
leave
jnp
sub
and
xor
inc
jae
je
dec
jns
push
data16
dec
mov
jne
cli
xor
sbb
shr
aam
sub
mov
mov
and
dec
adc
hlt
jmp
das
bound
aaa
cmp
imul
retf
pop
and
mov
dec
jmp
fbstp
loop
(bad)
cli
cmp
clc
dec
shr
outs
mov
pop
cmps
cmc
or
out
cmp
bnd
sub
jnp
dec
out
or
jp
push
xlat
fdivr
mov
fisttp
fcmovne
in
cmp
nop
or
push
push
add
xlat
sbb
add
fdivr
xlat
in
les
and
iret
jns
dec
add
std
and
icebp
in
ret
cs
loopne
cwde
dec
lods
jae
bound
movs
inc
mov
push
mov
sub
enter
jmp
das
dec
repnz
ror
cmp
push
push
adc
cli
popa
sahf
add
add
out
xor
sub
sub
sub
xchg
mov
lea
add
adc
in
jp
test
xor
sahf
sub
mov
or
cdq
clc
fwait
sub
add
sub
pop
test
mov
cld
push
jo
mov
adc
sub
pop
inc
inc
jne
ss
push
stos
and
movs
jmp
mov
mov
sub
inc
movs
jmp
xchg
sub
pop
inc
jle
jmp
mov
scas
pop
jne
ds
or
int3
xchg
jns
dec
ret
ds
scas
mov
gs
add
imul
ret
call
jo
iret
cmc
movs
adc
outs
mov
pop
stos
mov
test
and
scas
xor
ins
push
cmp
cmp
outs
sbb
retf
sbb
and
push
cmp
pop
cwde
pop
ins
dec
(bad)
sbb
(bad)
xlat
adc
cmp
je
xor
fsubr
mov
jg
leave
pop
sbb
add
test
(bad)
push
lods
ins
adc
fld
in
clc
out
jl
in
retf
cmps
ret
pop
stos
jae
sti
sar
cld
cld
jle
cmp
ja
(bad)
cmp
cli
mov
das
fcomp
sub
jmp
adc
sub
adc
cld
enter
shr
pusha
xchg
dec
out
test
lods
add
cmp
dec
pop
jmp
pop
and
jb
int3
pushf
js
lock
in
or
push
sbb
pop
adc
mov
not
test
add
pushf
cmp
mov
fs
push
xor
sbb
adc
jnp
mov
mov
ret
ins
inc
xor
or
pop
inc
pop
invd
lock
jmp
sbb
sbb
cmps
mov
hlt
and
popf
dec
sbb
cmc
cmp
sbb
cmp
or
rol
and
rcr
or
and
jmp
push
and
lock
sbb
add
mov
add
cmp
bound
loop
sbb
xchg
push
jecxz
and
enter
inc
popa
ret
(bad)
bswap
pop
(bad)
jl
mov
inc
xchg
rol
ficomp
xchg
mov
jl
mul
out
(bad)
in
xor
shr
mov
sahf
and
(bad)
jmp
in
mov
scas
push
enter
pop
xor
pop
xchg
sub
mov
push
adc
push
push
lods
xor
mov
aas
dec
cmps
hlt
ret
test
adc
lea
mov
cmp
dec
cmc
and
inc
fdiv
lahf
xor
push
push
lods
dec
es
cmps
ja
out
neg
mov
scas
mov
xchg
cmp
jge
mov
push
enter
push
gs
cmp
dec
movs
push
ins
cs
push
pop
lods
lods
clc
(bad)
mov
dec
xchg
lahf
fwait
ins
loop
test
mov
aas
repz
(bad)
inc
out
pop
mov
cmp
rcr
or
mov
lock
jno
jae
and
scas
and
add
pop
pop
nop
out
jle
xchg
fidivr
cmps
jl
enter
stos
hlt
enter
xchg
xor
xchg
cld
jl
inc
leave
out
ror
hlt
ret
lahf
cli
xor
push
fbld
rcr
adc
push
pusha
sbb
cmp
add
(bad)
enter
(bad)
push
jmp
cld
sub
cwde
lds
and
inc
push
or
(bad)
int3
jl
mov
sub
movs
cmp
leave
(bad)
push
add
lds
in
fbld
xor
cmps
ins
test
sbb
shl
mov
ror
cmp
cmps
scas
in
popa
xor
pop
jae
dec
dec
sbb
inc
int
add
push
pop
mov
mov
add
xchg
xchg
enter
out
jp
push
aas
fisttp
pop
out
jne
cdq
push
xchg
pop
add
inc
adc
xor
jle
pop
(bad)
outs
aaa
dec
movs
xor
cmps
repz
mov
cmps
xor
xor
(bad)
add
cs
add
daa
rcl
sub
ins
in
(bad)
sbb
sbb
call
push
mov
data16
dec
jle
pushf
into
js
mov
pmuludq
lahf
(bad)
pop
pop
fdiv
adc
jns
arpl
dec
clc
push
sbb
inc
les
cs
and
adc
out
sub
mov
mov
jge
mov
inc
pop
jno
in
add
cmp
jae
adc
sbb
leave
jbe
or
pop
mov
popa
std
int3
or
retf
add
xchg
xor
sub
dec
pop
mov
mov
cwde
int3
stos
jmp
dec
jg
jl
das
lods
inc
lods
(bad)
push
mov
mov
in
xchg
dec
sub
add
or
cmp
inc
and
(bad)
mov
sahf
pusha
pusha
ds
outs
xor
xchg
push
mov
test
(bad)
adc
mov
ss
dec
sub
mov
and
dec
les
movs
xor
sbb
mov
add
xlat
mov
lea
mov
or
push
jbe
retf
into
xchg
push
fstp
into
inc
clc
inc
rol
sub
test
xchg
shl
mov
imul
test
stos
fsub
fwait
shr
gs
stos
xor
outs
jl
test
movs
push
js
pop
std
cmp
stos
sti
(bad)
xor
cs
jmp
dec
inc
outs
fist
pusha
in
lahf
idiv
pop
sbb
fimul
inc
inc
cmp
xor
or
cmp
add
ins
sbb
fcmove
fild
sar
fld
imul
or
jbe
mov
sub
inc
js
(bad)
pushf
inc
rcr
jmp
sbb
dec
sbb
aad
in
fisub
xor
mov
jns
fistp
or
xchg
sub
push
dec
pop
push
jae
xor
mul
ja
arpl
stos
cmp
mov
push
icebp
jge
push
push
addr16
lea
sahf
pop
adc
add
ins
push
cs
pop
pop
fucomip
addr16
pop
mov
loopne
jmp
jne
push
jge
(bad)
pop
(bad)
ret
pop
and
inc
shl
lahf
xchg
lahf
retf
shl
scas
push
rol
mov
int3
jmp
mov
cmp
and
pop
pop
push
inc
or
icebp
gs
pop
faddp
jmp
mov
nop
retf
cmc
mov
mov
stos
ss
repz
addr16
pushaw
pop
cdq
pop
daa
push
pop
inc
push
in
cmp
cmps
dec
sti
shr
mov
clc
push
jg
adc
add
dec
or
test
or
imul
cmps
mov
div
pop
sbb
imul
rcl
mov
or
push
int3
outs
mov
jb
push
cmp
cmp
lahf
push
sbb
bound
mov
stos
sbb
mov
rol
mov
xor
sub
dec
ds
push
pop
or
push
leave
les
test
and
aad
cmp
pop
ret
call
std
cmps
jnp
(bad)
mov
loope
hlt
cld
das
out
add
jmp
ins
into
dec
aad
xchg
aad
xchg
cmp
and
addr16
imul
cmovl
je
and
mov
mov
gs
mov
imul
sahf
jle
stc
jne
ss
cli
(bad)
adc
adc
pop
fcomp
lods
cmp
leave
cmp
add
and
inc
mov
icebp
popa
jl
mov
mov
hlt
mov
mov
push
sub
je
fstp
jp
movs
cwde
xor
sar
pop
frstor
sahf
movs
push
and
pop
or
test
in
aas
dec
jo
mov
add
lea
mov
jg
add
adc
push
sahf
test
out
dec
rol
stos
ror
jge
jecxz
stc
dec
or
ss
out
mov
mov
addr16
fs
sbb
cmc
repz
out
js
outs
out
rcr
bound
fsubr
in
and
cmp
enter
imul
lea
stc
sbb
pop
mov
(bad)
icebp
mov
add
mov
or
test
in
dec
pop
bound
call
xchg
and
mov
dec
inc
xchg
xchg
clc
jmp
out
js
jnp
(bad)
jo
shr
in
cs
adc
retf
push
adc
push
xchg
jae
cmp
xchg
pop
xchg
ins
into
jno
(bad)
adc
inc
mov
mov
and
xor
inc
and
jle
mov
mov
ins
cmp
mov
or
mov
pop
xor
(bad)
mov
mov
pop
push
jp
outs
pop
pusha
call
adc
jg
aaa
pop
icebp
loope
mov
retf
mov
pop
(bad)
jecxz
mov
inc
pop
cld
out
shl
xchg
jge
imul
pusha
in
pop
js
scas
sub
add
and
mov
js
ficomp
add
mov
loop
jb
cmp
adc
add
shl
pop
ss
cwde
daa
xor
test
iret
xchg
push
mov
loope
retf
mov
ret
push
pop
ror
ins
in
(bad)
jmp
jae
(bad)
xchg
sar
ror
xchg
sbb
pop
add
aaa
je
(bad)
fcmovnbe
add
or
mov
ins
in
stc
push
cmp
cs
mov
retf
xchg
out
sti
out
dec
cmp
mov
ja
loop
pop
ins
retf
out
arpl
sub
push
and
adc
sub
sbb
jecxz
out
jae
add
in
jl
jge
in
dec
pushf
and
(bad)
(bad)
leave
mov
dec
pop
sahf
loopne
cmps
inc
xlat
mov
cwde
mov
mov
cs
cld
inc
rol
sahf
inc
xlat
lahf
pop
out
int3
jns
imul
call
sbb
mov
aad
fisub
fnstsw
push
pop
movs
xchg
add
pop
mov
adc
adc
or
pop
sub
sub
sbb
or
das
fcmovnbe
jl
jmp
adc
mov
iret
fdiv
mov
adc
aad
jg
xor
jno
out
int
cmps
out
mov
int
scas
lods
gs
pop
out
repz
jmp
lock
jno
aas
sub
aaa
js
das
in
fistp
inc
dec
stos
xor
xchg
iret
ret
jnp
scas
in
fcomp
inc
fbld
xor
arpl
sti
enter
int
mov
nop
ins
hlt
push
cdq
fdivr
in
fwait
addr16
inc
mov
and
or
pop
jne
shr
gs
movs
mov
xor
inc
ror
cld
push
sbb
adc
inc
inc
das
cmp
idiv
mov
out
dec
mov
lods
adc
mov
dec
sub
mov
mov
add
aam
mov
add
xchg
xor
outs
retf
fwait
call
mov
aas
adc
call
cs
xchg
adc
movmskps
dec
je
inc
push
push
or
test
stos
popf
bswap
pushf
mov
xchg
je
mov
mov
sbb
push
inc
lods
mov
cmps
mov
push
push
sbb
dec
nop
repnz
lds
jb
pushf
cmp
push
or
sbb
or
aas
je
out
pop
mov
fdivp
ja
pop
mov
jmp
test
and
xchg
mov
xor
jl
jecxz
add
ror
jge
jnp
pop
scas
mov
in
or
imul
push
fwait
and
sbb
xor
xchg
lahf
fst
mov
and
cdq
push
xchg
xlat
sti
ins
loop
mov
stc
mov
or
xchg
ror
xchg
mov
pop
adc
add
addr16
jno
adc
cmp
outs
ins
lods
mov
fbld
mov
jge
inc
mov
jle
and
push
dec
xchg
jb
repnz
sub
test
gs
or
and
dec
pop
xchg
pop
movs
ins
mov
sbb
mov
adc
shl
movs
sub
imul
mov
fisttp
pop
test
fidivr
das
sahf
jecxz
adc
mov
jmp
cs
inc
pop
int
pop
sbb
fdivr
aaa
in
mov
push
sub
sbb
mov
sar
adc
mov
outs
bound
dec
cmp
xchg
test
stos
xor
loope
int3
push
xor
mov
(bad)
retf
fild
in
sub
push
pushf
je
movs
mov
mov
or
jmp
cmps
sbb
mov
dec
push
rol
push
sbb
or
stos
xchg
imul
lds
xor
add
(bad)
ret
push
daa
scas
fcom
push
xor
call
mov
popa
pop
ror
jns
pop
outs
cwde
out
test
lods
dec
pushf
adc
mov
inc
outs
daa
aam
mov
scas
(bad)
mov
mov
dec
inc
adc
pop
repnz
xchg
dec
dec
mov
and
paddsw
pop
or
imul
xlat
mov
sbb
adc
jo
leave
xor
cmp
cmp
inc
inc
scas
add
push
jae
sahf
mov
add
outs
push
mov
js
(bad)
(bad)
call
scas
xchg
hlt
shr
daa
data16
scas
push
lods
aam
sbb
cmps
or
repnz
fucomip
mov
cmp
pop
add
pop
sahf
int
lea
add
in
dec
popf
movups
inc
in
mov
loop
fdivr
adc
rcl
or
xchg
enter
jp
loopne
sub
add
jmp
inc
(bad)
in
pushf
pop
outs
add
mov
loop
pop
ret
dec
jmp
or
les
ja
pop
sahf
fild
xchg
dec
xlat
mov
std
out
lock
(bad)
push
js
push
mov
shr
in
sbb
dec
ror
push
mov
out
or
inc
ss
das
cld
loop
dec
ret
enter
mov
imul
cmps
(bad)
push
pop
push
pop
push
add
out
mov
call
add
imul
pop
(bad)
(bad)
push
inc
icebp
cmc
xor
outs
(bad)
jle
push
sahf
movs
stos
add
push
repz
dec
xchg
inc
jmp
xor
call
loope
mov
pop
test
fcomp
push
test
repnz
push
sbb
addr16
adc
cmp
pop
pop
test
fst
scas
add
xor
or
inc
in
js
cmp
daa
inc
les
xchg
cmp
or
aaa
add
ror
mov
cmp
je
mov
mov
fimul
xchg
sbb
sub
and
mov
inc
in
pop
mov
push
sbb
cdq
add
and
mov
test
cmp
aam
push
or
lds
sub
or
add
inc
push
or
mov
shl
jmp
xchg
mov
in
or
leave
jb
lds
or
gs
cmp
cs
cdq
and
cld
pop
xchg
jb
add
mov
push
cld
inc
pop
xor
retf
into
inc
outs
int
test
dec
lods
push
dec
xchg
addr16
dec
mov
xchg
cmps
in
es
cmp
sbb
jmp
and
out
retf
xchg
mov
aam
nop
mul
outs
mov
movs
or
in
jle
jne
pop
test
test
mov
and
ret
pandn
and
cmp
jl
sub
or
add
and
inc
adc
inc
in
adc
in
cmp
or
loopne
mov
cmps
push
or
mov
cs
fild
ins
xor
aaa
enter
fmulp
stos
adc
cmp
or
or
cmps
fsub
pand
sbb
add
shl
jb
shl
or
imul
adc
test
ja
(bad)
or
sub
sbb
repz
jno
addr16
pop
add
add
xor
push
mov
xchg
test
(bad)
rcr
js
jp
clc
icebp
mov
push
out
sar
xchg
jmp
stc
stos
and
call
xchg
loop
in
repz
iret
mov
xor
in
cdq
daa
inc
mov
jb
outs
lds
mov
nop
rep
pusha
push
cli
mov
adc
sbb
out
xchg
inc
ds
push
dec
xor
pop
movs
mov
loope
mov
mov
mov
lods
ja
inc
mov
sub
and
xor
sbb
arpl
xor
out
je
add
mov
mov
bnd
dec
out
popf
xchg
outs
pop
movs
sub
and
lahf
cmps
sbb
cmc
mov
sub
mov
xor
scas
jp
add
fadd
adc
(bad)
and
mov
sti
and
mov
fstp
pop
mov
jmp
pop
fist
add
jge
jp
sbb
push
mov
(bad)
xor
pop
sub
sub
sub
mov
push
adc
ins
leave
pusha
or
push
sub
or
dec
fisubr
xrelease
fbstp
(bad)
jne
mov
mov
mov
mov
(bad)
adc
jp
push
fild
push
xor
fwait
out
int
into
lods
mov
adc
mov
sub
lahf
sar
mov
in
fs
es
add
ins
stos
xor
jle
push
jbe
mov
aas
aas
cdq
push
cmp
pop
lea
scas
(bad)
push
pop
popf
sub
repnz
mov
pop
add
sub
jmp
push
jle
sub
mov
mov
movs
arpl
sahf
pop
leave
sbb
(bad)
xor
sbb
nop
xor
scas
sub
and
enter
xor
call
fsub
jmp
loope
or
and
cmp
xor
cmc
xor
mul
add
repnz
inc
add
mov
aam
jmp
inc
cwde
inc
stos
into
xor
scas
push
push
jecxz
or
lock
adc
pop
lahf
sbb
sub
outs
aas
ss
sbb
int
jge
fisub
push
movs
rcl
popa
data16
xor
and
rcl
out
sti
xor
stc
pop
aas
cmc
leave
aam
jmp
ror
fnstsw
xlat
cmp
cli
inc
stos
cdq
cmps
mov
repnz
arpl
int
xor
pop
inc
mov
inc
in
ret
in
test
push
push
daa
aas
stos
push
jg
pop
dec
and
jns
leave
dec
add
in
imul
mov
cld
mov
mov
and
inc
adc
clc
sub
imul
pmaddwd
mov
not
cmp
repz
and
pop
mov
or
jmp
nop
lds
dec
ret
outs
xchg
push
ds
push
comiss
test
fistp
neg
cmc
adc
fdiv
or
bound
add
jp
mov
sub
mov
jp
(bad)
inc
mov
mov
jle
dec
fistp
out
dec
push
(bad)
loope
push
mov
push
mov
mov
lock
xor
outs
pop
movs
int3
pushf
pop
in
mov
leave
lahf
rcr
push
(bad)
cmp
cwde
adc
je
or
push
mov
cli
mov
pop
or
xchg
call
sbb
mov
sbb
ins
mov
ret
retf
xor
mov
loop
xchg
jle
push
mov
xchg
(bad)
mov
mov
push
idiv
mov
add
pop
cmc
imul
mov
xchg
mov
fdivr
mov
push
push
leave
inc
ret
push
pop
popa
xchg
xlat
stc
xor
push
int
jne
popa
inc
std
inc
mov
adc
jns
rdtsc
cdq
and
jmp
in
aas
pushf
mov
data16
cli
inc
sti
scas
push
out
adc
ins
mov
mov
pop
cmp
push
pop
lods
and
stc
popf
mov
or
cmc
cld
xor
cmp
call
mov
cli
stc
and
jg
pop
or
push
mov
mov
retf
in
fcmovnb
mov
fadd
call
pop
sbb
jno
push
and
pop
xor
inc
std
hlt
out
and
ficomp
sub
test
dec
mov
fwait
test
icebp
sbb
mov
jge
stos
shl
jo
popf
test
fwait
imul
scas
(bad)
pop
cmp
jb
dec
sbb
xchg
imul
adc
fwait
cmps
inc
adc
into
xchg
jge
xchg
cdq
xor
xor
repnz
add
sbb
in
lock
inc
cmp
cmp
add
icebp
out
fbld
sar
(bad)
or
dec
gs
stos
xor
mov
hlt
inc
sbb
arpl
mov
cmp
lock
cmp
aas
xchg
pop
mov
dec
cmp
sub
out
push
jmp
pop
sub
scas
and
xchg
and
icebp
jle
ret
std
ficomp
out
out
pop
dec
sub
xor
je
jp
xchg
mov
retf
test
fstp
jo
cli
rcr
cdq
test
jg
pop
mov
push
pop
mov
dec
ret
or
popa
ret
movs
es
and
or
mov
fsubr
xor
cmp
dec
add
add
fnstcw
imul
cmp
out
and
std
inc
test
ins
gs
mov
cmps
push
or
cmp
jl
rcl
sar
mov
push
dec
aaa
popa
sbb
and
jns
mov
mov
push
xor
jae
iret
pushf
push
(bad)
lahf
std
and
in
int3
sbb
or
outs
dec
div
adc
mov
fistp
push
inc
mov
in
sub
cs
mov
inc
and
gs
sar
imul
jp
cld
loopne
addr16
adc
mov
ds
mov
cmp
and
imul
cmp
das
call
dec
add
rcl
lods
cdq
mov
mov
mov
jl
gs
mov
add
int3
sbb
iret
push
mov
lock
int
mov
jne
jmp
mov
sub
cmps
ins
sub
fwait
xchg
fdiv
rcl
(bad)
shl
out
and
or
jl
data16
in
mov
(bad)
mov
jecxz
dec
cmp
popf
or
cmp
(bad)
fadd
sub
in
and
sbb
ret
(bad)
sub
xchg
fist
xchg
cmps
(bad)
lahf
mov
imul
lds
adc
lea
mov
out
push
test
clc
xor
(bad)
imul
xchg
mov
fcomip
fadd
loop
jmp
jno
movs
cdq
mov
shl
imul
cmp
xchg
fistp
je
mov
aaa
repz
loopne
(bad)
stc
sbb
idiv
jge
in
das
sbb
sbb
jmp
mov
mov
jo
mov
hlt
arpl
sahf
push
pop
or
stos
repnz
aaa
or
outs
or
mov
inc
sbb
pop
ror
imul
cmp
lea
(bad)
test
cmps
test
cwde
stos
adc
add
dec
test
add
clc
test
adc
jo
and
scas
sbb
mov
fsub
add
dec
loope
sub
and
adc
or
mov
shr
cmc
les
push
cmp
mov
sbb
inc
cli
inc
ds
sub
adc
add
xlat
in
stos
inc
mov
jae
jbe
pop
fistp
lods
or
(bad)
xchg
int3
ret
cmp
(bad)
jmp
jecxz
xlat
std
add
test
(bad)
enter
sub
cld
mov
mov
mov
stc
cmp
jb
add
jnp
cmp
mov
xchg
ins
mov
fst
push
cmp
addr16
imul
xor
xchg
mov
mov
fldenv
inc
loopne
call
into
leave
in
stos
and
mov
pop
mov
es
repnz
sbb
push
gs
fstp
or
cmp
pop
sub
lods
lock
xor
mov
loopne
ret
ret
push
push
rcl
data16
call
arpl
mov
sbb
jge
pop
dec
mov
cld
div
aad
xchg
div
mov
xchg
aad
ret
push
adc
push
add
jp
adc
stos
push
imul
int3
stc
jb
xor
fistp
scas
mov
repz
sbb
jmp
jecxz
mov
jmp
cmp
out
stos
int
lock
xchg
movs
xlat
add
mov
outs
or
mov
jo
and
loopne
add
push
pop
pop
mov
xlat
mov
dec
enter
xlat
(bad)
aam
aas
mov
adc
dec
daa
or
sbb
arpl
pusha
cmp
cwde
push
adc
jno
loope
pop
nop
call
icebp
xchg
and
sahf
cmp
push
adc
scas
mov
loopne
fcomp
push
pop
or
aas
add
and
xchg
mov
sbb
cli
stos
mov
repnz
mov
inc
lds
or
and
push
and
lock
cwde
clc
js
mov
gs
or
aas
dec
ins
cmp
div
lahf
daa
lds
push
push
loopne
je
add
pop
fisttp
(bad)
ja
loope
pop
mov
mov
xor
jnp
jl
lds
fnstsw
xchg
cmp
sar
xchg
int
pop
pop
aam
imul
gs
jecxz
add
or
out
cmp
dec
pop
jo
jo
pop
ins
loop
int3
mov
lahf
jle
mov
jmp
adc
mov
fdivr
push
sub
stos
dec
cmc
sbb
fild
jecxz
push
push
scas
or
pop
push
adc
(bad)
push
out
cdq
test
cmp
mov
inc
mov
les
int3
mov
adc
mov
sub
jne
enter
adc
test
imul
ja
daa
out
addr16
cmc
cmp
push
test
sub
push
or
mov
outs
sar
mov
jmp
(bad)
xchg
sbb
aaa
aam
jns
cmps
and
xor
add
mov
xor
sub
data16
fcom
ds
jmp
test
cmp
jns
retf
call
or
(bad)
lock
mov
mov
or
pop
mov
loopne
repnz
(bad)
xchg
sub
push
cmp
fcomp
and
out
pop
les
cdq
xor
dec
cld
addr16
mov
std
inc
aad
sbb
adc
jo
fidiv
jmp
push
sub
fwait
shl
and
xor
clc
inc
loopne
or
dec
inc
pusha
aas
xor
mov
mov
xchg
int
lahf
jbe
iret
dec
jns
add
pusha
xchg
out
jno
es
(bad)
ins
mov
and
inc
fs
mov
hlt
sti
push
into
in
dec
cmp
(bad)
ror
ret
jp
retf
mov
pushf
(bad)
push
sbb
cmp
and
scas
ins
mov
ror
cmp
cmp
fs
add
sub
mov
cmps
popa
icebp
aad
mov
cld
loope
rcl
dec
xchg
push
in
lods
jb
pop
test
jo
cmp
popa
data16
sub
pop
imul
and
cmovg
jecxz
repz
stos
sahf
inc
fbstp
mov
xchg
xchg
or
pop
mov
(bad)
mov
mov
(bad)
adc
hlt
or
mov
push
xlat
je
fdivr
mov
dec
dec
mov
mov
fucomp
fistp
jge
push
dec
mov
sbb
shl
or
mov
ror
in
in
in
aam
lahf
lea
inc
gs
les
cmp
xor
imul
mov
push
bound
cmp
je
jae
jno
ds
push
les
scas
loop
mov
cmp
dec
gs
mov
xchg
push
adc
mov
lds
fist
cmps
aaa
test
call
or
pusha
(bad)
es
rol
push
sbb
push
adc
mov
and
cmps
and
jae
(bad)
sbb
adc
mov
les
ins
adc
out
adc
mov
mov
pusha
sub
lahf
push
aaa
aam
sub
aas
ficomp
mov
movs
or
adc
inc
xchg
(bad)
mov
pop
add
in
arpl
pop
mov
and
pop
and
or
(bad)
fisubr
js
scas
and
rcr
push
pop
out
xor
cmp
xor
and
retf
mov
(bad)
pop
cmps
shl
pusha
xchg
out
retf
and
loop
stos
mov
add
adc
aam
ja
add
enter
adc
add
xor
jmp
inc
dec
ins
stos
ret
(bad)
jecxz
mov
std
sbb
cwde
clc
and
sbb
jae
movs
xor
or
test
sub
pushf
loope
ins
xor
mov
movs
jae
cdq
call
sub
in
push
out
cs
lock
lahf
mov
(bad)
cli
iret
mov
pop
jno
adc
lds
pop
(bad)
test
mov
or
xchg
cmp
push
retf
imul
mov
pop
out
dec
push
mov
adc
fisubr
stos
adc
retf
fiadd
add
lock
xor
iret
or
retf
das
sub
mov
cmp
adc
ffree
mov
sub
push
and
mov
or
pop
dec
(bad)
popf
mov
aaa
cmps
lds
cmp
mov
(bad)
fwait
enter
in
pop
mov
call
xchg
dec
cmp
mov
scas
cdq
mov
adc
pop
or
sub
aas
js
or
add
cmps
inc
xlat
push
in
jge
xchg
cwde
retf
dec
xchg
xchg
stos
jae
ja
adc
jns
movs
pop
int3
cdq
mov
xor
pop
test
push
mov
inc
retf
add
imul
push
retf
push
mov
sub
mul
je
test
(bad)
out
repnz
cmps
shl
jecxz
int
rcr
outs
push
push
popf
jnp
dec
inc
jge
imul
sub
push
out
mov
popa
scas
sub
mov
fiadd
xor
dec
div
inc
pop
sub
lds
addr16
loopne
sub
ret
ins
cdq
mov
xchg
call
sbb
loopne
pop
cdq
arpl
aas
mov
cmps
sbb
jg
sub
ins
pop
adc
in
cmc
jle
das
mov
nop
inc
sti
adc
sub
movs
int
pop
jmp
outs
inc
mov
outs
fisttp
jb
and
xlat
dec
arpl
sub
enter
stos
ins
fcomi
lods
aas
loop
icebp
les
adc
push
int
jmp
mov
out
jnp
sub
cmc
jmp
jmp
inc
or
gs
loopne
jge
aaa
popf
adc
push
in
jb
mov
pop
xchg
pop
mov
out
(bad)
outs
push
mov
(bad)
int3
scas
push
or
aaa
stc
or
sbb
and
retf
cwde
jns
cmp
pop
pop
xchg
mov
imul
push
push
ret
jp
int
fbstp
push
mov
adc
dec
std
(bad)
sbb
and
cmp
loope
ja
cmp
pop
push
in
jle
xchg
jecxz
bound
mov
mov
int
or
fisttp
or
stc
jmp
cmp
or
jmp
jmp
inc
push
aad
adc
cli
outs
cld
ss
pop
hlt
mov
xlat
adc
in
jne
outs
adc
es
pop
test
jbe
(bad)
retf
fidiv
cmp
cwde
mov
cmp
adc
data16
scas
sbb
fadd
(bad)
out
out
adc
cmp
ja
add
pop
adc
push
jne
aam
retf
ror
pop
sub
xchg
mov
push
sub
and
hlt
div
arpl
outs
mov
sbb
out
pop
clc
ins
sub
scas
fs
mov
mov
jg
in
fwait
jno
mov
loope
mov
rcl
in
xchg
sub
cld
rcl
sub
pop
popa
ret
xor
fisubr
or
icebp
ficom
repz
arpl
call
lds
popf
sbb
adc
repz
les
das
jp
jno
inc
xlat
lods
lods
js
daa
lock
mov
dec
out
sbb
pop
popa
mov
add
lock
ret
sub
out
test
jmp
fst
or
mov
test
xchg
outs
jne
and
dec
retf
jmp
jp
or
outs
imul
xor
or
pop
imul
mov
push
(bad)
cli
dec
add
xor
call
sub
push
loop
xchg
(bad)
push
stos
pop
jae
stos
push
cld
xchg
mov
mov
cdq
mov
hlt
xchg
adc
xchg
add
sbb
and
and
add
(bad)
aaa
cwde
cmp
xor
ins
js
loop
add
sub
(bad)
adc
adc
pop
dec
pop
mov
sub
arpl
enter
sbb
jo
mov
mov
or
mov
or
and
cdq
push
and
lea
ret
fstp
and
dec
sbb
cmps
mov
inc
pop
dec
mov
out
dec
inc
cwde
xchg
jns
int3
xchg
popa
adc
nop
inc
dec
pop
sbb
push
(bad)
aad
jmp
mov
inc
movs
jp
sub
xchg
push
mov
inc
mov
adc
or
loop
cmp
iret
xchg
and
xchg
lds
cmp
inc
sbb
fcmovbe
stos
add
xor
jns
xlat
and
leave
call
mov
inc
(bad)
jecxz
aam
adc
sbb
mov
adc
and
shl
mov
adc
arpl
loopne
adc
pop
and
dec
jmp
cwde
movs
call
imul
mov
fisubr
fist
add
sbb
mov
adc
retf
leave
or
cmp
dec
and
mov
aad
das
inc
xor
aam
cs
add
cmp
jo
dec
inc
or
test
or
cmps
pop
inc
jno
mov
mov
dec
mov
add
inc
add
jmp
dec
push
call
jmp
cmp
sbb
lahf
popa
dec
ror
inc
imul
(bad)
xor
dec
adc
inc
mov
pop
shl
adc
cmpxchg
pop
fcom
dec
test
push
xor
mov
scas
or
push
ret
retf
xor
mov
fidiv
adc
push
mov
add
mov
adc
ja
jo
mov
sbb
gs
into
enter
jmp
xchg
push
mov
test
jae
jo
retf
ja
neg
sbb
xchg
sub
dec
sbb
ins
xchg
adc
dec
pop
push
cwde
ret
cdq
sub
ror
test
mov
call
inc
lds
jmp
pusha
(bad)
sub
adc
mov
mov
ret
adc
inc
fs
aaa
fsub
ds
retf
adc
arpl
in
or
inc
and
rol
mov
cmp
dec
aam
shl
inc
xor
push
in
out
mov
mov
push
xor
(bad)
adc
cmp
lea
dec
mov
add
sub
repnz
scas
fs
pop
xor
and
in
movs
(bad)
or
inc
xchg
arpl
dec
sbb
push
mov
jmp
and
aas
sub
pop
stc
sbb
inc
push
jbe
push
cmp
sbb
and
retf
push
dec
cs
loop
in
fiadd
xchg
pop
lock
inc
dec
in
inc
cmp
pop
add
or
push
and
push
shl
push
jbe
add
mov
mov
popa
mov
cwde
dec
imul
(bad)
xchg
cmp
jbe
cld
push
adc
cmc
mov
sbb
in
xchg
and
sub
stos
add
jbe
dec
retf
(bad)
pop
mov
sar
add
push
fcmovnbe
push
push
inc
pop
rcl
repnz
fild
xchg
fidivr
cmp
add
adc
ret
fmul
rcr
nop
xchg
int
(bad)
jmp
mov
xlat
inc
cmp
jp
push
ror
or
lods
push
les
inc
in
cwde
inc
lods
adc
adc
mov
sub
cmp
xchg
mov
add
das
cdq
adc
push
mov
ss
in
xchg
or
mov
sbb
mov
push
test
je
rcl
push
jle
and
pop
outs
jmp
adc
and
push
pop
imul
mov
cmp
jo
les
test
and
cmp
stos
inc
cmps
cmp
add
mov
adc
sub
mov
loopne
mov
or
xor
mov
es
or
inc
push
xlat
dec
or
and
pop
inc
xchg
xchg
push
lea
mov
mov
and
ins
pop
das
pop
cmc
adc
adc
mov
in
inc
dec
inc
cmp
mov
mov
and
adc
pop
rcl
rcl
add
dec
nop
in
inc
inc
pop
ins
sub
push
mov
aad
pop
cs
or
xchg
add
pop
or
adc
and
imul
xchg
(bad)
aam
inc
jmp
mov
mov
xchg
sbb
dec
add
ror
push
inc
fdiv
inc
pop
fs
xor
inc
sbb
imul
push
pusha
jbe
pop
shl
pusha
sub
loop
enter
test
stos
mov
jp
lds
push
loop
cmp
sub
push
jo
cmp
(bad)
frstor
(bad)
mov
xor
mov
and
xor
bound
xor
xchg
inc
je
movs
mov
mov
mov
loop
mov
adc
js
mov
sub
nop
push
leave
push
pop
call
ins
mov
ins
pop
adc
adc
es
or
and
cmp
call
and
sbb
jns
add
test
inc
mov
xchg
setb
mov
inc
dec
jno
inc
cmps
cld
mov
dec
lods
test
fst
mov
jbe
inc
fabs
sub
mov
adc
retf
loope
mov
xor
out
call
in
mov
and
leave
inc
in
xchg
pcmpgtb
ret
ins
fimul
sub
loop
fist
imul
add
daa
or
and
in
jne
mov
xchg
dec
test
movs
outs
or
lods
adc
mov
ror
mov
sar
mov
push
outs
test
push
mov
mov
push
xor
fwait
xor
outs
adc
push
dec
rcl
inc
pop
(bad)
cld
mov
push
pushf
add
push
push
xchg
inc
fs
lds
push
xchg
retf
push
xchg
stc
inc
jg
adc
(bad)
lock
jmp
fisttp
test
ds
(bad)
mov
out
jne
mov
in
or
fs
mov
scas
daa
cwde
xchg
adc
sub
and
popa
sbb
es
(bad)
inc
jb
loopne
mov
sti
out
loop
cmps
mov
push
fxch
jge
ins
test
mov
inc
imul
outs
mov
add
dec
lock
das
aaa
xor
arpl
out
push
push
test
jmp
xchg
xchg
cmp
xor
pop
dec
mov
pusha
stos
jmp
rol
loop
shld
jae
sub
adc
fucomp
push
into
inc
aas
xchg
inc
test
or
dec
into
lahf
xchg
fld
cld
adc
dec
in
ds
jmp
push
aaa
push
repz
scas
(bad)
mov
scas
pop
sub
xchg
cmc
aad
ret
sbb
aaa
fwait
xor
cmc
mov
pop
lods
enter
sub
pop
mov
cld
sbb
js
add
xor
adc
jb
fld
push
data16
jno
int3
xor
mov
mov
jno
loop
arpl
pop
push
add
add
btc
fldcw
mov
ds
sbb
add
outs
mov
fs
xchg
fstp
mov
sub
sub
jle
sub
je
jno
xor
aaa
cmps
sub
mov
mov
daa
add
mov
cmp
xchg
(bad)
leave
rcl
clc
inc
sbb
mov
retf
xor
xlat
xor
push
xor
dec
pusha
ret
xlat
sub
imul
sar
call
jnp
shl
xchg
mov
xor
pop
cld
int3
sti
xchg
test
movs
sbb
push
cmp
cs
cdq
xchg
idiv
sub
sub
mov
cmp
push
stos
sub
dec
loop
sbb
and
xor
inc
adc
cmp
dec
test
and
inc
test
adc
stos
add
mov
mov
retf
retf
mov
cmps
mov
js
pop
call
leave
dec
retf
dec
(bad)
xchg
jmp
xchg
iret
fs
rcl
sbb
adc
rcr
and
mov
dec
sub
mov
inc
jno
cwde
jae
test
xor
cmc
inc
stos
jmp
fyl2x
xor
sbb
mov
fsub
xchg
push
jne
push
inc
dec
inc
mov
(bad)
out
pushf
arpl
movs
scas
push
xchg
(bad)
out
fwait
mov
test
cwde
mov
inc
imul
pop
(bad)
movs
lods
addr16
lods
dec
dec
dec
loop
inc
jecxz
mov
sbb
adc
mov
mov
in
sbb
shr
ficom
mov
dec
pushf
ins
loope
pop
cmp
xor
xlat
sahf
arpl
in
dec
xor
adc
sub
jbe
dec
sbb
(bad)
xor
fcmovb
add
mov
ja
pop
and
pop
pop
or
loopne
(bad)
dec
jecxz
cwde
mov
fmul
jno
and
int3
inc
repnz
and
(bad)
push
and
mov
mov
out
into
inc
add
jmp
push
mov
push
pop
daa
sub
int3
inc
lds
call
in
jns
mov
rcr
mov
inc
pushf
jae
cmp
mov
push
or
ror
stos
push
pushf
cmp
cmp
push
in
xor
push
xchg
and
or
pop
cli
add
jae
pushf
addr16
fucompp
nop
sahf
lock
outs
pop
stc
lea
push
fwait
inc
(bad)
test
(bad)
xor
inc
ret
pusha
retf
pop
mov
xor
enter
in
mov
xor
sbb
imul
bound
gs
in
movntq
push
daa
or
xor
sbb
loope
jo
push
cmc
sbb
out
add
in
sbb
scas
pushf
inc
call
pop
sbb
mov
mov
ins
sub
lock
mov
rcl
pop
inc
loope
mov
das
inc
inc
cdq
or
push
(bad)
adc
popw
call
jnp
out
lods
mov
inc
pusha
mov
mov
lock
dec
or
jnp
clc
ficom
lea
std
mov
ret
outs
loopne
mov
stos
cmp
push
dec
sbb
pop
adc
jae
lahf
xor
lds
pop
jo
jo
jmp
bound
movs
(bad)
cwde
fcomp
inc
sub
sbb
xor
cwde
icebp
sub
inc
mov
jno
mov
jle
sub
in
or
dec
pop
mov
or
fs
call
push
aam
adc
push
push
push
aam
push
cmp
mov
test
dec
mov
jnp
jo
ret
lea
dec
cmp
add
and
or
sub
fld
pop
pop
xchg
xchg
push
mov
cwde
sbb
arpl
xor
and
dec
xor
js
call
retf
faddp
outs
mov
imul
jmp
jl
push
pop
test
xor
inc
sub
ret
pop
push
scas
pop
loope
xor
cs
jb
outs
stos
xlat
jne
add
push
jmp
sub
adc
cwde
lods
test
data16
repnz
sbb
add
jb
lea
add
push
mov
sub
push
pop
lods
test
sar
push
sub
inc
add
cs
add
shl
mov
lds
push
jecxz
inc
dec
clc
daa
js
and
push
sub
or
fwait
add
retf
nop
and
test
push
lock
lds
clc
enter
sbb
push
push
add
aas
lods
dec
and
cmp
imul
and
shr
mov
xchg
ss
inc
mov
sbb
ins
out
mov
inc
mov
and
push
inc
lea
leave
and
dec
adc
gs
sbb
in
adc
adc
mov
inc
test
jle
mov
shr
xchg
mov
push
xor
ficomp
jnp
mov
xchg
mov
mov
adc
adc
sub
hlt
jbe
in
pushf
sbb
les
mov
pop
(bad)
aad
in
push
push
inc
sub
inc
lods
xlat
cs
loopne
fcmove
fiadd
sub
push
sub
cmp
mov
or
sub
jg
mov
aaa
stos
in
sar
mov
ret
(bad)
dec
call
dec
dec
(bad)
dec
jmp
scas
(bad)
pop
mov
test
popf
jmp
and
pop
cs
xchg
dec
sti
scas
mov
aam
xchg
cdq
movs
jo
push
ret
in
(bad)
sub
fcom
jp
jb
cmp
inc
bound
(bad)
out
in
sub
xchg
pop
inc
iret
jnp
aad
pushf
stos
jle
ds
pop
in
idiv
xchg
cs
cmc
mov
mov
push
ficom
sbb
and
daa
pop
daa
fs
fisttp
adc
mov
rol
mov
icebp
test
cmp
out
fcom
xor
sti
rcr
enter
loopne
jae
(bad)
sub
xchg
add
dec
aam
dec
fucom
into
xchg
mov
data16
enter
leave
iret
(bad)
sti
jns
inc
pop
bound
lods
add
rcl
cwde
scas
pop
cmp
push
js
or
pop
push
stos
push
sub
test
jnp
js
sub
stos
inc
push
and
mov
and
das
repnz
cmps
inc
movs
sub
add
les
(bad)
mov
int
dec
rol
inc
sbb
movs
stc
test
ret
out
test
inc
add
and
xchg
ret
sbb
in
xchg
mov
sbb
shr
in
ret
mov
jb
push
lods
ins
sbb
or
mov
mov
sub
fwait
mov
mov
jae
and
push
dec
fldcw
movs
jmp
jp
pop
xor
cmp
test
sbb
(bad)
movs
fnsave
(bad)
fsub
mov
mov
xor
hlt
sub
mov
mov
push
jecxz
int
lahf
mov
popa
ds
push
and
jle
jmp
mov
fimul
xchg
fsubr
es
loope
push
(bad)
mov
imul
daa
push
dec
xor
movs
mov
or
xor
adc
and
fs
adc
push
inc
mov
jl
adc
add
jmp
xchg
mov
sub
cmp
cwde
pop
sub
(bad)
shl
cmp
nop
call
lds
xor
sbb
in
jmp
in
(bad)
iret
ret
jns
jb
rcl
mov
(bad)
xchg
mov
mov
popa
movs
push
dec
call
aam
jbe
in
mov
(bad)
sar
or
and
shr
jo
adc
mov
test
cwde
xor
sbb
cdq
and
stos
mov
sbb
push
sub
or
or
lods
mov
retf
mov
fisttp
sbb
scas
jmp
test
stos
sbb
sub
mov
mov
or
mov
dec
stc
pop
arpl
or
and
fisttp
pop
cwde
shr
mov
test
and
push
dec
push
jb
gs
test
jno
xor
scas
out
mov
jmp
dec
xchg
push
jb
xor
push
or
sub
es
fcom
dec
inc
sbb
sub
popa
xor
push
sub
adc
push
mov
pop
ret
lods
inc
clc
add
push
mov
clc
aad
cmp
dec
call
inc
fsubr
ins
ins
sti
inc
xor
jl
jnp
add
daa
dec
jo
and
push
add
movs
inc
jnp
rcr
pop
enter
pop
gs
aam
out
push
push
(bad)
sbb
xor
jbe
xor
jno
and
cs
push
pop
jo
xlat
push
xchg
mov
jl
sbb
pop
test
lods
xor
xchg
sbb
cmps
inc
adc
dec
sbb
ins
(bad)
xchg
je
push
cmp
push
(bad)
(bad)
loop
addr16
dec
rcl
fild
and
shl
repnz
push
sub
inc
dec
(bad)
sub
mov
fadd
sub
neg
or
sub
fs
or
test
mov
dec
sub
dec
popf
inc
pop
mov
sub
push
pop
movs
cld
pusha
xchg
xor
mov
or
retf
jb
dec
aas
leave
cmps
adc
adc
or
iret
test
imul
push
xchg
add
leave
je
pop
or
cs
sar
inc
mov
imul
inc
sbb
scas
imul
iret
mov
imul
pop
(bad)
push
call
inc
retf
retf
punpckhwd
shr
inc
mov
xor
data16
icebp
adc
popf
mov
or
into
mov
push
jo
aaa
xchg
jne
xchg
cmp
pop
mov
mov
pop
(bad)
mov
mov
call
push
out
into
push
add
jl
sub
sbb
mov
nop
ss
mov
daa
xor
(bad)
addr16
lock
aad
mov
in
fs
or
or
and
jl
jbe
cld
mov
adc
xor
xor
xor
sub
push
enter
enter
inc
loopne
clc
inc
push
xlat
loop
cli
cmp
out
fst
in
mov
repz
(bad)
(bad)
in
dec
sbb
or
repnz
daa
dec
sub
push
pop
mov
lods
or
(bad)
cmp
aam
out
pop
into
imul
mov
cmp
push
out
out
daa
out
jg
(bad)
dec
mov
push
imul
push
pop
cld
in
lea
jge
cmc
pop
(bad)
adc
or
(bad)
dec
lds
(bad)
cld
lds
popf
push
jge
adc
xchg
ret
daa
icebp
jae
and
icebp
int3
and
js
les
xor
repnz
jns
movs
pop
lock
lahf
dec
sti
call
mov
mov
cld
(bad)
rol
fist
dec
mov
mov
retf
mov
out
sbb
outs
pop
in
arpl
loope
repnz
mov
dec
xchg
jle
mov
cld
jo
jle
sub
jbe
dec
out
sub
icebp
(bad)
in
jne
(bad)
cmp
dec
mov
jle
jae
xchg
mov
call
pop
stc
push
fwait
ss
xchg
dec
js
fild
sbb
pop
or
adc
ror
mov
(bad)
fld
(bad)
mov
sbb
jle
cli
mov
mov
fimul
das
mov
push
into
xlat
or
mov
mov
fcom
das
jb
pop
and
ret
jl
pop
sub
xchg
das
cmp
aad
out
and
fstp
xchg
mov
mov
aas
jmp
(bad)
sbb
xor
mov
test
fdivr
enter
hlt
jle
sub
adc
mov
jp
(bad)
int
loope
lds
lock
neg
jb
in
mov
(bad)
or
hlt
repz
dec
mov
cdq
push
jl
gs
adc
int
(bad)
shl
mov
sub
or
add
jb
lods
mov
mov
in
mov
jne
fidivr
add
mov
mov
pop
or
hlt
fwait
jmp
jne
pop
sbb
cmc
push
mov
jp
repz
sub
ins
lods
sbb
adc
sbb
dec
call
and
push
inc
push
iret
jno
push
aaa
lds
or
mov
cwde
cmc
cmp
stos
jae
dec
std
movs
in
jg
pop
idiv
movs
outs
or
mov
pushf
push
xor
iret
or
jbe
sbb
adc
or
inc
out
and
add
ins
xchg
into
mov
je
pusha
mov
xchg
sbb
call
ss
(bad)
in
push
pop
scas
out
adc
fwait
jns
js
out
out
fwait
loope
pop
retf
js
fimul
ds
push
ss
push
repz
cli
retf
dec
jns
pop
pop
sbb
enter
cmc
aam
jge
out
dec
les
cmp
test
repz
in
add
into
(bad)
mov
sub
dec
popa
jne
out
cld
inc
jle
in
lahf
mov
int
dec
pop
out
xchg
mov
into
fidiv
pop
jns
cli
or
aad
and
stos
enter
loop
push
cmp
in
out
jge
sbb
in
(bad)
ins
das
out
stc
pushf
call
in
ins
push
imul
out
test
mov
cwde
mov
ja
fcos
add
ja
dec
mov
je
in
push
lock
mov
sub
out
sti
fucom
add
or
jnp
(bad)
js
pop
fcomp
jg
nop
jle
push
clc
mov
je
hlt
mov
popf
add
push
mov
or
cmp
repz
int
xor
cmp
ins
mov
cmp
les
push
adc
xor
jl
mul
in
outs
(bad)
xchg
cli
adc
inc
das
jl
fwait
xchg
sub
cmp
movs
rcr
nop
fidivr
sti
push
mul
call
push
mov
in
mov
imul
ret
jae
push
inc
repnz
in
int
stc
fcomp
and
jle
ror
jp
scas
aas
mov
xchg
imul
fbstp
sar
mov
mov
pop
mul
jnp
out
and
fisub
sbb
mov
mov
repnz
fidiv
jnp
shl
in
fstp
cli
loop
cmp
(bad)
pop
mov
or
out
aaa
loope
es
or
nop
ret
push
jnp
sbb
(bad)
(bad)
(bad)
imul
push
rcl
pushf
cmp
mov
mov
mov
push
fcom
js
mov
test
(bad)
shr
adc
jg
int
pop
xor
out
daa
pop
cmp
or
clc
imul
sahf
out
(bad)
(bad)
jns
cs
inc
mov
cmp
shr
into
outs
pop
dec
xchg
loope
and
sti
sar
jecxz
retf
scas
fstp
fwait
movs
jmp
cs
mov
jmp
sub
dec
(bad)
jge
pop
js
outs
xor
sub
(bad)
cmps
sahf
jecxz
inc
sahf
dec
mov
into
cmp
sbb
mov
clc
popa
mov
int3
fistp
bnd
int3
push
adc
mov
dec
ffree
popf
pop
and
out
cmp
push
mov
sar
jg
movntq
push
outs
sar
retf
(bad)
aad
cmp
cmp
cs
xchg
dec
sbb
iret
mov
shl
sbb
ds
hlt
daa
fwait
sbb
dec
xor
aam
lahf
stc
les
clc
push
inc
xchg
mov
lds
hlt
mov
ins
mov
sub
in
aas
daa
aaa
outs
dec
ins
jne
fild
inc
xchg
jno
(bad)
cmp
mov
mov
jne
sahf
stc
je
aas
jae
add
inc
idiv
jnp
mov
push
ret
xchg
mov
push
scas
loop
mov
cmp
jns
shr
movs
sar
in
std
ss
add
mov
dec
loopne
push
int3
cld
ins
data16
(bad)
loope
jo
stc
lods
(bad)
fwait
idiv
mov
mov
sbb
mov
mov
(bad)
mov
or
cmp
outs
sbb
cs
mov
xchg
psubw
dec
add
iret
cmps
dec
repnz
lods
pop
push
inc
jbe
fisttp
mov
and
clc
and
sti
fstp
push
mov
inc
(bad)
hlt
call
fucom
xor
popa
cmps
outs
icebp
cmp
popf
repnz
rol
jmp
ret
jmp
in
inc
(bad)
dec
(bad)
mov
jmp
jmp
std
movs
jg
xchg
inc
loop
and
xchg
sbb
pop
outs
(bad)
rol
push
cmp
add
xchg
es
sub
mov
xchg
das
iret
fwait
iret
jge
lea
mov
into
cld
retf
(bad)
mov
rcl
mov
lahf
inc
fdiv
or
test
loope
popf
fwait
cmp
or
mov
sbb
in
mov
nop
sbb
mov
push
inc
jb
inc
and
outs
push
sub
mov
dec
or
rcr
ror
dec
mov
pop
or
dec
xor
lods
cmp
xor
sbb
adc
dec
jo
sub
push
adc
js
ins
xchg
ret
das
sar
push
aad
sahf
aad
push
cmps
add
mov
adc
adc
adc
pop
adc
adc
dec
in
push
cmp
(bad)
inc
aam
loop
jmp
sar
xor
test
adc
mov
dec
xor
cmps
mov
sti
jae
xchg
cli
xor
jmp
int3
mov
pop
and
movs
loopne
bound
neg
mov
(bad)
pop
pushf
add
dec
jge
stc
daa
mov
test
jg
cmp
ja
mov
sub
mov
mov
jmp
push
mov
imul
cmp
pushf
mov
(bad)
jo
sbb
fcomp
mov
call
movs
inc
cmp
maxps
mov
repz
or
sbb
icebp
cs
and
cmp
stos
add
cmps
mov
fdiv
enter
hlt
outs
cmp
movs
pop
mov
pop
loop
lods
sub
mov
enter
hlt
jbe
adc
push
and
ror
loopne
mov
or
cmc
(bad)
in
scas
mov
push
mov
lods
push
and
dec
lods
aaa
inc
ret
jo
movs
test
dec
and
call
fdiv
lods
fs
xor
mov
inc
aam
lods
xchg
or
mov
imul
sbb
xchg
dec
dec
xlat
and
push
push
nop
xor
stos
xchg
int3
xchg
and
inc
es
add
pusha
and
jmp
iret
inc
aam
pop
mov
stc
inc
push
mov
loope
arpl
lods
add
xor
push
repz
into
movs
sbb
add
jae
shl
dec
xchg
jle
test
inc
test
lock
popa
push
pop
loopne
hlt
lods
shl
gs
aaa
iret
fldl2t
scas
test
mov
ds
pop
std
mov
sub
mov
pop
jno
pop
repz
stos
lds
lea
stos
ds
add
mov
stc
aaa
(bad)
pushf
clc
std
and
pop
shr
nop
ret
pop
aad
iret
cmp
mov
jecxz
in
aas
add
fisubr
(bad)
clc
enter
cli
jo
not
into
xor
test
sbb
mov
pop
mov
sbb
hlt
out
and
jmp
jbe
pusha
inc
js
cld
stos
dec
jl
repnz
mov
inc
popf
mov
xor
in
fild
iret
dec
inc
sar
std
retf
movs
mov
add
test
icebp
add
idiv
(bad)
mov
dec
push
popw
cmp
fisubr
or
cmp
(bad)
mov
std
(bad)
mov
nop
fdivr
int3
mov
mov
test
push
mov
cmc
(bad)
fisubr
adc
mov
aas
lds
xchg
push
scas
dec
clc
xchg
push
int3
retf
push
das
imul
and
leave
cmc
and
sbb
mov
dec
pop
mov
int
and
cmps
(bad)
cmp
mov
ins
push
call
pop
push
mov
mov
sahf
ja
mov
in
mov
fs
sbb
lods
mov
call
xchg
repz
pop
push
std
fisttp
movs
das
in
lods
(bad)
jnp
mov
in
leave
mov
pop
jg
pushf
aad
je
pop
fnstcw
mov
sub
dec
(bad)
stc
jmp
jb
shl
and
out
or
push
in
push
or
and
or
cmp
mov
push
in
(bad)
cmps
loopne
(bad)
movups
pop
clc
stc
adc
dec
mov
inc
fld
cwde
je
outs
cli
and
sbb
inc
sbb
jno
out
out
mov
mov
and
daa
sbb
and
jg
pop
mov
mov
pop
rol
aas
xor
dec
mov
clc
cmp
sbb
mov
xchg
adc
jnp
sbb
cmp
push
retf
sbb
push
push
leave
pop
inc
xchg
and
call
cmp
jne
loopne
xchg
push
retf
fs
add
je
mov
in
xchg
enter
lods
in
jns
jae
or
and
(bad)
push
adc
push
mov
pop
(bad)
test
in
mov
pop
test
inc
jecxz
pop
clc
jp
sbb
mov
mov
mov
inc
clc
dec
ret
lods
loopne
(bad)
or
lods
sbb
ss
into
and
shl
xchg
lods
(bad)
cmp
ja
or
cmps
dec
xchg
mov
xchg
inc
aaa
jge
cmp
jae
sbb
mov
in
cdq
out
mov
fimul
pop
int
fiadd
ins
mov
scas
mov
sti
xchg
scas
adc
idiv
fstp
xchg
not
push
pop
aas
aaa
inc
aaa
stos
loopne
mov
loop
out
ss
lock
shl
inc
push
dec
dec
dec
popf
retf
(bad)
pop
test
cld
xchg
iret
sti
adc
rcr
movs
xor
jle
out
xor
jae
or
inc
xor
stos
out
mov
cwde
mov
cmp
int
inc
xlat
retf
outs
and
dec
push
dec
out
mov
or
mov
lahf
fmul
push
ja
gs
mov
cmp
jmp
xor
cmps
mov
test
jecxz
xlat
mov
imul
jnp
jecxz
xchg
push
fdivr
call
jo
(bad)
pushf
pop
xchg
dec
fnstsw
push
out
inc
dec
shr
fcomp
push
in
xchg
(bad)
loope
shl
(bad)
out
xchg
(bad)
loop
int
fwait
das
out
iretw
out
aam
jl
cli
cwde
int3
adc
fild
imul
int
pinsrw
mov
inc
aad
sbb
add
inc
cld
mov
sti
ss
jne
or
daa
cwde
jmp
push
out
inc
ret
mov
lock
jg
dec
mov
loopne
push
je
pushf
outs
adc
bound
push
add
mov
jo
nop
sub
shl
push
retf
or
adc
test
rcr
test
inc
mov
add
shr
outs
add
sub
fwait
inc
adc
jecxz
fiadd
sub
add
outs
add
add
jmp
daa
(bad)
fadd
add
push
rol
ss
loopne
std
fcmovbe
xchg
pop
add
shl
or
push
fiadd
adc
fiadd
xor
inc
scas
add
push
mov
push
and
out
fisubr
mov
jl
push
or
push
retf
or
adc
stos
pop
add
mov
shr
pop
sub
add
sub
loope
inc
pop
inc
push
push
or
add
lods
push
imul
pusha
pop
rcl
inc
add
adc
pop
push
jo
mov
or
(bad)
mov
xchg
push
mov
sbb
inc
mov
pop
add
and
loope
inc
pop
inc
movs
out
dec
dec
inc
mov
inc
dec
lock
adc
jno
or
adc
clc
push
loop
ins
sar
dec
add
retf
push
jb
or
pop
aam
mov
pop
add
add
loopne
shl
add
push
mov
pop
add
add
sbb
out
or
scas
je
and
rcl
push
mov
ja
and
adc
les
rcr
mov
inc
sahf
xchg
lock
sub
adc
outs
and
fld
mov
cmp
inc
pop
inc
shr
add
inc
inc
pop
dec
fidivr
movs
dec
inc
ss
inc
mov
dec
dec
push
hlt
and
sti
test
movs
push
mov
test
call
adc
or
fwait
dec
push
xor
hlt
xor
ret
mov
dec
rcl
or
adc
adc
sbb
ins
sbb
sub
jno
dec
call
inc
push
inc
mov
sbb
cld
sbb
loopne
inc
dec
movs
movs
pop
or
sub
mov
inc
es
nop
or
rol
mov
xor
dec
xchg
mov
inc
push
mov
dec
push
sub
cmp
push
mov
jge
pop
add
push
add
jecxz
xchg
add
in
dec
ror
mov
push
adc
into
or
or
mov
call
add
add
and
pop
popa
jae
add
mov
lock
je
sub
xchg
jo
jmp
mov
in
dec
sub
mov
sub
repnz
xlat
test
add
add
or
les
in
xor
test
add
loop
fwait
add
dec
adc
pop
mov
sbb
xor
cmc
push
xchg
dec
dec
leave
in
mov
jp
add
inc
loopne
cmp
in
sbb
ins
cli
scas
sub
inc
push
out
fwait
iret
jle
pop
fwait
xchg
int
sbb
icebp
xor
lahf
sahf
das
js
aam
jge
dec
aaa
push
fs
leave
out
iret
repz
and
xor
xlat
into
adc
data16
out
jo
pop
pop
fidivr
repnz
and
mov
stc
imul
popa
dec
leave
(bad)
mov
out
sub
inc
jmp
mov
je
(bad)
jp
dec
mov
add
test
xchg
mov
in
neg
iret
xchg
xchg
repnz
pextrw
and
push
ret
mov
inc
stos
mov
std
out
xchg
mov
call
fidiv
adc
mov
xchg
add
cmp
outs
scas
mov
cmp
mov
cmp
mov
scas
out
sbb
dec
and
es
stos
(bad)
jge
xor
popf
adc
icebp
sub
mov
mov
pop
push
(bad)
call
cmps
dec
pop
repz
mov
leave
stos
neg
xchg
add
add
int3
sbb
cmps
nop
jmp
or
scas
cmps
xor
cli
stos
or
repnz
in
inc
test
dec
cmps
nop
dec
pop
cmp
jp
ret
scas
xchg
cmps
pop
and
mov
inc
lods
(bad)
ja
js
addr16
std
jmp
inc
pop
add
or
pop
lahf
mov
aam
leave
(bad)
fisttp
add
jecxz
inc
fidivr
xchg
retf
test
fwait
jnp
push
movs
out
fstp
mov
mov
mov
pop
iret
in
loope
push
adc
clc
imul
adc
xchg
push
in
dec
push
xchg
inc
or
shl
push
xor
movs
ds
imul
fs
sbb
in
push
mov
in
aas
or
push
test
loopne
popf
sub
or
sbb
pop
sub
mov
mov
frstpm(287
pop
xlat
movs
mov
pop
dec
add
lods
fdivr
and
fiadd
xor
cmp
js
out
dec
cld
sbb
faddp
pop
movs
scas
out
add
mov
adc
and
scas
pop
test
cmp
mov
int
loop
gs
retf
scas
inc
push
jecxz
mov
das
sub
mov
test
test
cmp
clc
sub
inc
jbe
ins
dec
and
xchg
mov
test
in
out
and
mov
mov
jmp
dec
pop
cmp
daa
adc
jp
cmp
out
(bad)
cmp
dec
cmp
test
fidivr
inc
or
cmp
adc
shr
fdiv
pop
shl
in
gs
push
push
test
push
jl
mov
jae
in
sub
pop
call
retf
dec
cmp
pop
dec
jmp
(bad)
jl
push
bound
adc
jmp
and
push
fcomip
xchg
in
or
inc
sub
or
inc
inc
fld
ins
xchg
push
xor
loopne
jmp
mov
rcr
cli
mov
sti
fnsetpm(287
cmc
pusha
sub
cmp
cmp
adc
cmp
test
push
loope
cmps
sbb
push
dec
nop
xor
lock
mov
(bad)
inc
sub
arpl
pusha
loop
test
sbb
push
dec
push
pop
jp
jae
lds
fwait
or
push
ret
cmp
retf
jb
cwde
daa
movs
inc
imul
retf
jbe
or
cmp
xor
adc
mov
and
je
adc
sub
repz
mov
mov
movs
test
xchg
jmp
xor
lods
inc
fs
je
loope
jo
sub
lahf
pop
sub
sar
sahf
and
jp
mov
mov
adc
dec
stos
sbb
data16
test
dec
gs
xor
xchg
sbb
lods
mov
inc
cmp
push
mov
das
push
inc
or
dec
mov
(bad)
mov
sbb
pop
cwde
mov
mov
xchg
push
add
adc
or
sbb
inc
xchg
and
das
or
cli
dec
pop
and
mov
jns
(bad)
or
pop
xor
mov
ja
pop
ins
dec
stos
mov
cdq
jg
fst
inc
mov
jb
mov
pop
xor
fwait
mov
into
jnp
cld
popf
test
clc
jl
clc
inc
and
pop
push
xchg
mov
cli
bound
pop
(bad)
sbb
dec
ins
adc
push
xor
std
xchg
cmp
lahf
adc
bound
xchg
mov
xor
mov
sbb
add
retf
and
mov
jle
xchg
sbb
inc
aas
and
call
pop
pushw
pop
adc
sbb
xor
sti
adc
mov
lods
push
jge
repz
popf
cli
push
cmp
cmc
xchg
adc
xchg
sbb
lds
(bad)
fnstsw
push
gs
call
dec
mov
dec
pop
xlat
sahf
jns
inc
sub
(bad)
fadd
mov
ror
lock
pop
push
or
xchg
pop
adc
fs
test
stos
(bad)
leave
jns
cmp
and
jno
(bad)
mov
mov
and
movzx
pop
xchg
rcr
movs
sub
jae
xor
and
and
adc
or
mov
add
ficomp
xor
mov
pop
mov
xchg
push
cmp
dec
out
jle
push
shl
push
repz
push
test
mov
xchg
aad
add
mov
in
mov
scas
pop
fcomp
leave
push
in
ret
adc
inc
imul
push
pop
stc
dec
out
xor
mov
adc
xchg
loop
lds
sbb
jb
sbb
push
pop
scas
inc
hlt
push
dec
hlt
cmp
stos
adc
cmp
ret
mov
add
xor
add
pop
ror
cdq
dec
sbb
setno
mov
sbb
mov
adc
sti
sbb
jp
push
dec
ret
mov
xchg
sub
pop
movs
mov
pop
mov
jns
cwde
outs
mov
and
mov
aas
scas
push
sahf
dec
pop
pop
jbe
sahf
scas
mov
xor
fcmovnbe
ds
into
pop
and
adc
push
mov
mov
out
push
mov
mov
jmp
add
mov
adc
xchg
js
lods
jmp
test
mov
(bad)
fisttp
(bad)
jnp
mov
ins
fisttp
mov
sub
fcomp
jmp
das
push
aad
fisub
lock
xchg
adc
sub
arpl
mov
mov
add
les
out
call
sbb
mov
cmp
pop
popf
mov
stos
push
xchg
mov
mov
sub
cdq
cs
mov
push
jns
sbb
(bad)
icebp
xor
mov
(bad)
xchg
sub
lahf
pop
mov
pop
adc
fild
push
inc
pop
retf
lds
sub
cmp
int3
xor
sub
mov
loopne
jns
adc
aas
les
jmp
cmp
js
jl
push
push
pop
mov
jb
mov
in
adc
pop
add
push
jge
dec
add
mov
data16
mov
fdiv
add
fdivr
sbb
push
arpl
int
fmul
mov
(bad)
(bad)
in
dec
daa
test
inc
push
inc
test
test
xor
xor
xor
push
ficom
and
or
or
(bad)
xchg
and
retf
dec
in
mov
mov
fadd
xor
popf
(bad)
fisubr
pop
inc
inc
scas
sub
ins
jae
jecxz
sbb
xchg
aas
jnp
mov
push
(bad)
fadd
sbb
jmp
movs
pop
mov
mov
inc
sti
imul
lds
addr16
add
ja
aas
pop
faddp
xor
clc
retf
sbb
lock
dec
out
pop
js
dec
dec
dec
loopne
fwait
sub
addr16
sub
fmul
mov
ret
aas
stc
ins
ins
cdq
inc
shl
test
mov
jne
push
cld
mov
push
sti
(bad)
cmp
jmp
dec
jle
mov
les
inc
sub
je
outs
sbb
add
cs
and
jb
inc
shl
pop
in
mov
xor
retf
sub
jne
stos
sub
pop
lock
ret
std
mov
mov
pop
iret
(bad)
inc
mov
cli
lods
mov
inc
data16
leave
adc
cmp
aaa
dec
xor
js
mov
and
mov
fsubr
stos
xor
jl
adc
or
jle
ins
sub
mov
sub
inc
mov
or
aas
(bad)
fdivr
popf
mov
fs
jl
loopne
sbb
xor
mov
outs
lods
pop
(bad)
dec
xchg
xchg
mov
pop
jecxz
pop
scas
(bad)
mov
(bad)
mov
aaa
dec
call
xor
mov
xchg
mov
add
add
and
scas
cmps
idiv
les
push
dec
sub
cmp
dec
(bad)
cmp
lock
cmps
cmc
pop
loopne
pop
sub
mov
and
popa
shr
fisttp
inc
repz
mov
jle
xlat
inc
mov
push
pop
xlat
leave
add
inc
add
retf
inc
and
in
xchg
adc
dec
in
dec
pop
shr
jge
mov
xchg
xor
mov
repnz
mov
mov
int
scas
ja
or
dec
(bad)
push
ins
iret
cmp
inc
scas
jbe
jmp
push
jl
pop
iret
jl
inc
inc
or
adc
sub
movs
ja
jne
or
push
xchg
or
xor
jo
cwde
cmovae
push
xor
test
push
sahf
stos
xor
mov
mov
pop
xchg
mov
por
add
repz
es
sub
jnp
add
mov
out
loope
jle
inc
xchg
xchg
jle
in
sbb
mov
clc
out
sbb
pop
adc
fcomi
push
cdq
ror
cmp
loope
out
out
ret
inc
retf
outs
dec
and
std
lock
push
test
rol
mov
clc
mov
daa
cwde
(bad)
aad
jb
call
mov
lea
mov
enter
ret
jle
lock
out
scas
mov
and
cmp
pop
lods
retf
xor
inc
and
pop
dec
dec
jmp
sbb
cmc
fs
jae
in
outs
out
iret
inc
dec
pop
int3
push
xchg
inc
jae
std
nop
xor
cdq
jns
adc
ins
imul
outs
repz
xchg
jg
dec
inc
sbb
test
mov
mov
mov
idiv
mov
add
sbb
xor
sbb
test
les
data16
add
mov
jae
sub
call
int
jge
mov
cwde
outs
repnz
or
xor
in
les
jmp
shl
cmp
outs
sub
cmc
sbb
or
xchg
clc
xchg
jp
inc
in
jns
les
push
fadd
cdq
push
xchg
xor
mov
in
data16
add
(bad)
jb
add
add
int
fidiv
aaa
pop
adc
add
sub
imul
sub
jbe
movs
sbb
mov
pop
push
adc
cmp
push
loope
mov
sub
mov
lods
pop
push
ss
cmp
shl
xchg
mov
jge
xchg
sbb
pop
aas
and
sbb
sub
cmc
lahf
pusha
in
inc
aam
or
out
vpsadbw
out
std
lds
jno
sbb
xlat
cmps
ja
cli
call
push
lahf
xchg
add
xor
(bad)
mov
int
fs
mov
mov
push
mov
daa
push
(bad)
adc
pop
xchg
mov
xchg
sub
fsubp
shl
call
fdivr
xor
mov
dec
xchg
mov
mov
inc
pop
mov
cmp
dec
sbb
fild
inc
loope
sbb
dec
mov
js
push
fs
movs
cmp
std
mov
out
lods
inc
mov
mov
jge
fwait
cmp
xor
xor
scas
retf
lea
dec
add
and
sub
or
nop
iret
push
in
cmp
jmp
or
arpl
xor
or
dec
adc
aad
lea
loop
dec
imul
push
sub
lds
xchg
push
push
push
ror
and
sub
lds
movs
test
in
xchg
and
mov
sar
addr16
dec
daa
fistp
dec
mov
out
xchg
iret
sbb
ins
jnp
clc
stos
popf
cld
and
out
fistp
mov
loop
popa
adc
pop
cmp
and
ja
dec
push
out
xor
rcr
fwait
xor
ds
mov
out
neg
sbb
sub
mov
loop
jmp
icebp
pushf
fstp
movs
xor
xchg
cdq
retf
mov
lds
cmps
pop
mov
ret
aad
out
retf
cdq
iret
cmp
scas
push
data16
into
mov
cdq
pop
imul
jmp
fstcw
neg
das
jnp
jmp
iret
pop
ds
repz
jg
lahf
pop
add
jecxz
(bad)
mov
aam
fisttp
sub
push
loope
inc
rol
aad
mov
dec
sar
pop
push
xchg
punpckhwd
mov
mov
pop
popf
mov
imul
gs
xor
cmps
push
(bad)
push
lods
mov
sbb
push
lods
faddp
mov
retf
stos
xchg
daa
shr
pop
(bad)
outs
mov
ja
mov
or
push
jp
mov
jmp
mov
stos
adc
inc
sub
test
out
mov
push
xchg
cmp
cmp
cmp
imul
nop
mov
mov
adc
loop
jns
and
aam
xchg
pop
out
dec
scas
adc
cmps
mov
mov
iret
adc
push
jecxz
aaa
and
cmp
xlat
sub
mov
cmp
dec
clc
bound
retf
mov
adc
sub
test
ror
jae
fucomip
mov
jmp
jmp
aas
test
or
out
adc
jecxz
movs
imul
hlt
sub
lods
xchg
pop
das
popa
imul
push
sbb
adc
sbb
into
les
add
xchg
das
(bad)
or
dec
add
dec
push
sar
mov
mov
xchg
sti
mov
pop
ins
sahf
ja
pop
scas
repnz
pop
icebp
jl
(bad)
and
popa
bound
fadd
pop
test
sub
ins
imul
dec
cmps
test
bswap
pop
push
xchg
cld
pushf
(bad)
int
xchg
test
xlat
lods
jns
add
in
ficom
cli
in
fld
loop
pop
xchg
pop
sti
sti
sbb
sub
dec
ror
pop
pop
jbe
inc
jl
jle
or
ret
xchg
mov
mov
sub
fbstp
push
in
xchg
cli
xchg
outs
add
sar
cmp
ds
sbb
push
and
mov
xor
or
cmp
pop
push
ret
sub
mov
pop
and
mov
addr16
and
mov
xchg
push
andps
add
sbb
pop
xor
test
jl
jmp
inc
xchg
mov
out
jne
adc
jmp
ret
cs
jle
mov
ret
movs
or
test
(bad)
rol
ds
xchg
fcomp
pop
ror
xchg
xor
and
jae
add
push
mov
out
das
sahf
imul
ins
fs
add
xchg
je
test
pop
pushf
(bad)
lock
add
test
xor
inc
in
and
pop
mov
cmps
fisttp
xor
js
std
popa
sbb
pop
xor
push
mov
xchg
ds
in
mov
loopne
sbb
sbb
inc
sub
jo
cmps
cmp
out
aam
je
jmp
xor
and
in
inc
mov
jg
jecxz
jo
das
and
cmp
std
and
cmp
nop
imul
loop
inc
sub
mov
mov
jno
mov
mov
mov
mov
stc
mov
fmul
lds
fistp
ret
mov
mov
std
lods
pop
adc
dec
mov
outs
retf
push
adc
mov
mov
push
cwde
cmp
lea
xor
sahf
cli
dec
call
pop
je
(bad)
icebp
(bad)
xchg
retf
rol
push
jmp
add
test
xchg
rcr
cli
std
retf
push
jo
jl
dec
and
jno
inc
and
fs
ja
sub
nop
xchg
test
mov
rcr
js
push
aaa
cmc
and
rcr
cmp
jo
mov
les
lock
fldcw
sub
mov
outs
mov
and
or
data16
dec
pusha
xor
jno
fmul
mov
loope
hlt
cli
mov
fnstsw
fmul
dec
cmps
(bad)
adc
add
ins
adc
push
jg
jae
out
out
dec
adc
or
in
add
lahf
xor
les
scas
mov
call
pop
mov
xor
pusha
xchg
cmp
mov
jge
pop
mov
pusha
jno
out
and
pop
sbb
ret
enter
dec
leave
push
cmp
push
pop
pushf
out
repz
adc
mov
(bad)
xchg
mov
lods
fdiv
add
mul
mov
aaa
int3
and
or
cmps
pop
jmp
xor
or
ret
(bad)
mov
sbb
add
mov
ficomp
or
icebp
sbb
lds
sbb
repnz
loopne
jg
add
movs
shl
pop
push
(bad)
mov
aas
ret
ins
scas
dec
(bad)
mov
icebp
adc
mov
pop
sbb
bound
cwde
push
and
add
pusha
sbb
int
or
jmp
pcmpgtw
scas
cmp
test
push
push
sub
cvtps2pi
fmul
int3
aas
retf
pop
cmc
jae
stc
dec
aas
xor
and
inc
or
inc
push
jb
ret
das
fisttp
xchg
and
mov
mov
lock
es
add
rcr
jb
sbb
push
inc
push
les
cli
jmp
push
add
fisubr
lods
sbb
or
and
push
ret
pop
mov
stos
or
inc
int
mov
mov
ficomp
dec
repz
jmp
dec
clc
adc
pop
or
jns
lods
test
movs
add
iret
xchg
inc
movs
adc
shr
not
add
retf
in
(bad)
mov
inc
repz
inc
sbb
sub
inc
(bad)
push
sbb
lock
out
into
ret
popf
pop
cmp
adc
pop
jge
jo
js
addr16
add
add
(bad)
mov
inc
loopne
xor
or
cmp
data16
shr
fidivr
outs
dec
ret
inc
loopne
jne
sbb
(bad)
cmp
and
push
jb
shl
rol
dec
dec
push
fmul
sub
loopne
lods
(bad)
cld
mov
fs
mov
sbb
add
jns
mov
sub
xchg
out
pop
cmp
add
inc
push
stos
js
shl
cli
adc
jle
inc
iret
in
es
in
mov
xchg
xchg
inc
test
in
pop
mov
daa
loopne
retf
aas
push
sbb
cmc
xor
rcr
jb
data16
imul
pop
fild
test
in
icebp
sub
movs
hlt
add
es
pop
fmulp
dec
pop
pop
cmp
dec
das
cmps
pushf
push
mov
gs
out
jmp
retf
(bad)
stc
cmp
jmp
jl
int3
pusha
inc
in
lahf
mov
or
outs
or
mov
push
psubusb
jle
fisub
inc
test
jo
scas
rcr
fldcw
sbb
jmp
retf
mov
inc
bound
repz
pop
outs
dec
jl
add
pop
retf
fcmovne
add
nop
ret
mov
xchg
jnp
adc
lds
repz
cmp
test
mov
mov
sub
jge
push
retf
fcmove
push
ret
es
dec
jmp
fild
outs
arpl
out
jp
aas
aaa
push
xchg
imul
push
(bad)
out
(bad)
sub
cdq
jcxz
popf
xchg
or
dec
sbb
(bad)
push
or
xchg
add
mov
add
or
dec
push
in
ror
pop
sbb
xor
in
test
daa
sbb
scas
daa
aad
shl
cmps
mov
scas
fcmove
xchg
and
or
pusha
test
inc
sbb
add
adc
add
imul
push
pop
push
pop
adc
push
movs
xchg
pop
pusha
scas
push
sbb
jbe
inc
jmp
jl
jne
xor
xor
pop
call
fstp
cmc
sbb
sbb
xlat
leave
inc
test
jnp
(bad)
icebp
in
mov
fidivr
fdiv
inc
popf
ror
fadd
inc
dec
repz
repz
leave
sub
cmp
out
test
not
pop
xor
scas
mov
iret
push
fistp
stc
dec
out
sub
dec
add
jmp
stos
ss
out
add
int3
bound
push
or
fcmovb
and
dec
shl
ja
jmp
mov
into
sbb
fadd
loope
das
push
std
sub
or
call
or
push
repz
xor
popa
arpl
mov
shl
lods
mov
mov
add
push
and
jp
add
retf
xor
push
cdq
pop
lahf
and
bsf
xor
in
cmp
cmp
jecxz
dec
fwait
std
push
xchg
dec
mov
fptan
jbe
(bad)
aad
test
in
repnz
pushf
xchg
not
or
shr
pop
cmp
in
mov
movs
add
shr
dec
add
loopne
ror
or
ss
test
push
imul
and
dec
add
and
ja
push
xchg
adc
adc
call
mov
adc
mov
rcr
or
repnz
push
icebp
adc
adc
fimul
lea
adc
test
inc
xchg
mov
dec
mov
ins
ins
sti
outs
or
rcr
imul
cmp
mov
or
mov
repnz
jbe
call
movs
xchg
bound
mov
int
int3
aaa
xor
ja
jno
xchg
imul
test
out
mov
int3
xlat
pop
ins
int3
sti
ss
aad
fadd
repz
fs
movs
mov
push
mov
xor
out
inc
mov
ror
outs
jo
pusha
add
into
push
(bad)
fdivr
ret
add
out
pop
sub
dec
dec
test
mov
mov
add
les
mov
loope
push
sbb
add
addr16
dec
jns
jecxz
adc
inc
dec
cmp
cmp
outs
scas
xor
and
popa
call
ja
mov
xchg
hlt
inc
mov
(bad)
mov
add
popf
pop
sbb
loope
call
(bad)
(bad)
jb
das
jae
pop
test
jp
and
lock
enter
fwait
shl
hlt
in
pop
out
popa
loopne
mov
(bad)
(bad)
jns
enter
fist
mov
add
adc
sahf
push
push
xor
xchg
sbb
adc
push
xor
in
aam
mov
xchg
loop
cmp
rol
cmp
fnstenv
imul
outs
fwait
mov
cmps
movs
ret
pop
aas
popf
(bad)
movs
scas
sub
cmc
in
add
mov
scas
push
jle
lahf
arpl
mov
mov
xor
xchg
test
jb
not
popa
(bad)
and
(bad)
mov
fwait
lock
rdmsr
pop
stc
nop
adc
or
cmc
sti
je
pop
dec
mov
mov
fild
addr16
mov
aas
xchg
call
call
and
jnp
xchg
in
cs
dec
(bad)
fist
push
and
xor
inc
cwde
jno
cmc
clc
stos
or
(bad)
pushf
mov
(bad)
das
xor
jg
ins
out
mov
jne
movs
dec
jns
mov
or
cmp
mov
fisub
inc
jmp
mov
sbb
cmc
ss
or
lds
aaa
sbb
ins
fwait
cmp
sbb
iret
add
inc
sbb
lea
out
or
sbb
mov
sar
push
mov
cmp
mov
xor
xor
sbb
dec
shl
popf
sub
fcom
mov
xor
popf
movzx
xchg
nop
lods
xchg
ror
adc
mov
jnp
idiv
and
mov
dec
push
ins
pop
and
inc
out
jae
and
mov
and
dec
stos
jg
xchg
or
aad
popa
stos
stos
jecxz
repnz
mov
scas
inc
jge
xchg
dec
xchg
out
in
sub
pop
jbe
loopne
hlt
or
and
loopne
fmul
icebp
mov
jae
imul
out
fist
jnp
jae
sbb
dec
dec
cwde
adc
scas
inc
out
lea
(bad)
sahf
out
push
clc
(bad)
addr16
mov
push
xlat
mov
aam
xchg
mov
jns
in
and
imul
(bad)
aad
repz
jl
xchg
(bad)
aaa
int3
sti
push
jge
dec
pop
shl
or
lods
call
in
stos
shl
and
sti
retf
dec
cdq
sub
fcom
or
inc
pop
loopne
cmps
cmp
push
into
rol
sti
or
call
mov
sbb
lock
jbe
adc
and
xor
xchg
or
int
inc
pusha
sub
mov
mov
xchg
push
cmp
pusha
push
jmp
push
pop
hlt
push
mov
mov
dec
call
adc
mov
xchg
xchg
enter
jne
push
add
adc
pop
jecxz
sbb
stc
sbb
stos
adc
inc
clc
jmp
repz
sub
stc
adc
ret
aam
mov
std
scas
mov
loope
data16
cmp
out
shl
sbb
dec
inc
push
leave
pop
fsub
aas
ins
rol
mov
loope
or
mov
in
cmp
mov
inc
xchg
mov
lock
loop
mov
sbb
nop
js
adc
stos
imul
ret
add
mov
push
push
xor
or
inc
mov
mov
hlt
dec
bound
mov
sub
jno
aaa
daa
or
push
pop
out
mov
push
pop
cwde
into
xor
add
mov
cmp
push
das
jmp
mov
jns
jecxz
mov
adc
mov
clc
into
fdiv
out
xchg
clc
inc
scas
cld
movs
in
jmp
xor
stos
std
inc
or
inc
and
push
cdq
lds
cmp
fwait
or
mov
mov
inc
out
sbb
in
(bad)
xchg
add
or
inc
test
js
add
rol
dec
pop
xchg
push
adc
fsub
jmp
xor
mov
sahf
iret
retf
push
and
adc
xchg
or
push
sub
fistp
add
lods
adc
mov
aas
mov
fcmovnb
pmaddwd
adc
and
rol
mov
pop
push
dec
daa
dec
retf
or
add
and
ins
jge
neg
sti
leave
out
das
pop
cmps
mov
push
in
mov
pop
out
mov
pop
rol
inc
xchg
test
in
jmp
mov
inc
in
add
es
sbb
mov
jmp
fistp
leave
mov
test
out
sbb
movs
push
jbe
imul
sar
aam
mov
out
push
mov
fidiv
lea
ficom
(bad)
push
jg
int
outs
aam
push
sti
add
sub
push
add
sbb
fwait
stos
mov
repz
ret
mov
in
xor
shl
and
xor
jl
push
jg
les
in
cmp
sub
test
push
rcl
mov
dec
lods
inc
cs
jbe
movs
cmps
rcr
mov
aam
cmps
mov
add
in
retf
jge
imul
mov
pop
ins
fstp
cdq
inc
loop
enter
inc
rcr
xor
rol
push
pop
popa
cmp
bound
vpmaddwd
add
out
rep
push
xlat
data16
das
inc
int
sbb
mov
mov
lods
ret
pop
cmp
les
scas
out
popf
lods
fld
arpl
les
stos
mov
inc
imul
adc
add
mov
pop
test
stc
pop
lods
pop
dec
lds
movs
test
push
out
cmp
jmp
cwde
sub
pusha
add
dec
retf
dec
(bad)
push
and
in
sbb
mov
inc
ins
daa
lea
loopne
jmp
arpl
xchg
mov
repz
jmp
rol
clc
dec
or
mov
js
test
adc
stc
(bad)
mov
dec
mov
xchg
add
sbb
mov
lods
rol
mov
or
and
cwde
jg
cs
sub
cld
in
pop
add
sub
lods
pop
pop
sbb
inc
cmp
add
lea
add
xor
sbb
stc
pop
aam
in
dec
(bad)
retf
or
jmp
sub
aam
mov
cdq
ins
sbb
dec
lods
jbe
out
sbb
cmp
inc
pop
push
repz
call
js
mul
push
adc
lock
inc
stos
or
mov
mov
mov
hlt
repz
jbe
add
sbb
and
rol
dec
(bad)
retf
loope
shl
rol
cdq
mov
mov
sti
in
ins
cli
ss
jg
(bad)
sub
sbb
and
minps
pop
leave
cmps
xor
aad
lock
loopne
cmp
xor
adc
cmp
popf
add
stc
xchg
dec
jle
sbb
mov
dec
dec
xchg
xchg
cmp
xchg
outs
sub
ret
mov
call
xlat
mov
push
dec
aam
jb
ret
cli
xor
sbb
push
add
(bad)
int3
imul
cmp
dec
dec
push
jmp
push
dec
pop
sbb
jae
push
and
int
call
or
(bad)
mov
mov
pop
aaa
(bad)
call
fs
or
sub
dec
mov
or
mov
adc
cdq
sahf
fsubr
mov
inc
in
adc
xlat
xchg
and
test
mov
sub
push
push
pop
shl
and
adc
fdiv
push
mov
aas
clc
xchg
retf
mov
fwait
mov
or
icebp
in
jl
fstp
mov
dec
mov
jnp
jmp
xchg
cmps
adc
icebp
jae
or
sub
mov
int3
daa
mov
pop
ret
pop
cmp
arpl
and
jnp
sti
imul
pop
loope
fdiv
push
stos
fwait
mov
sub
push
gs
mov
and
mov
cli
mov
jl
scas
pop
sub
jne
outs
xor
fxch
push
push
arpl
inc
cli
(bad)
inc
lods
adc
fidivr
sbb
cmp
cmps
mov
push
adc
jl
rcr
iret
fs
xor
sahf
add
out
xchg
fnsave
jl
xor
gs
fsubr
clc
jg
shl
pop
dec
push
arpl
sbb
dec
pop
jae
test
cmp
sub
int3
mov
add
ror
jl
fcomp
sub
out
jo
nop
mov
iret
stc
(bad)
pusha
mov
loop
and
and
push
cs
adc
mov
popf
mov
jnp
adc
in
push
add
pop
add
push
jae
(bad)
mov
movs
sahf
pop
outs
lahf
out
sbb
out
cmc
ret
pop
fdivr
iret
pusha
nop
inc
dec
xlat
xor
les
lods
rcr
xor
stos
fwait
add
test
xchg
pop
push
arpl
int
jb
arpl
mov
pop
repnz
inc
mov
mov
stc
sar
and
push
into
imul
push
adc
adc
and
inc
pmaxsw
retf
sub
push
mov
pop
leave
push
pop
fst
dec
mov
push
lds
in
retf
fs
nop
jl
fist
test
dec
xchg
xchg
out
out
add
mov
sub
outs
test
or
dec
je
mov
les
adc
inc
adc
aam
adc
sub
inc
or
xchg
dec
dec
fiadd
xchg
sahf
xchg
push
in
sub
dec
addr16
and
dec
xchg
popa
xor
inc
xchg
out
outs
push
je
or
lock
enter
(bad)
xchg
jg
xchg
dec
pop
adc
jp
js
repnz
mov
shl
dec
out
cmc
movs
sub
inc
jp
pop
frstor
imul
(bad)
jae
aas
adc
shl
test
mov
sbb
lods
push
adc
imul
test
ins
cmp
mov
xor
(bad)
jge
js
test
sbb
jl
out
and
adc
fsubr
and
fiadd
pusha
movs
jg
push
fdiv
stos
dec
cmp
jb
(bad)
fwait
loop
push
jp
jg
or
mov
gs
mov
(bad)
mov
and
inc
jmp
es
or
cdq
xor
pop
leave
inc
je
mov
addr16
mov
cmp
rcl
inc
aaa
dec
clc
xchg
cwde
outs
xchg
dec
movs
ficom
in
dec
mov
lfs
inc
(bad)
ficomp
cmp
mov
dec
sub
xor
sub
xor
pop
test
adc
and
imul
fisttp
push
sub
adc
ret
xchg
jge
stos
sbb
cmps
outs
or
outs
scas
jmp
pusha
lea
and
inc
sub
hlt
pop
pop
jnp
mov
xlat
jno
ror
cmp
(bad)
and
(bad)
(bad)
outs
mov
lock
rcr
mov
hlt
sbb
or
daa
mov
in
call
(bad)
stc
in
or
fbstp
outs
dec
jmp
repnz
cmp
add
inc
cmp
sub
jg
push
push
xor
mov
test
and
push
xor
xchg
in
in
cmps
lods
push
mov
push
scas
call
mov
call
das
fist
or
add
out
gs
test
into
xchg
add
adc
out
jnp
xor
fwait
or
push
push
cli
jmp
fwait
pop
std
icebp
jo
(bad)
repnz
into
scas
aas
xchg
mov
mov
mov
nop
add
jecxz
sub
mul
sub
fmul
aas
cmps
mov
je
shr
leave
mov
sti
jge
test
hlt
jb
daa
and
pop
mov
stc
mov
adc
sar
jns
push
cmp
mov
add
cmps
adc
add
push
hlt
jbe
je
dec
sub
jo
stos
push
pop
mov
pcmpgtd
and
xor
mov
out
jno
jmp
cmps
or
jno
mov
jnp
rcl
not
das
jg
adc
xchg
cmp
in
loopne
inc
hlt
(bad)
loopne
retf
push
mov
xchg
lock
leave
jp
adc
pop
pop
adc
pop
jmp
adc
popa
mov
outs
sbb
adc
out
fisttp
inc
or
xor
push
iret
sbb
sahf
bound
push
(bad)
add
mov
(bad)
in
xor
cld
mov
pop
jl
adc
or
dec
mov
xchg
and
mov
(bad)
sbb
repz
xchg
add
adc
pusha
ss
sbb
fmul
je
xchg
pop
ffreep
and
mov
(bad)
fmulp
and
bndstx
pop
retf
mov
and
pop
in
sbb
neg
retf
xchg
sbb
jmp
sub
aaa
mov
sbb
outs
imul
cmp
adc
push
outs
inc
aas
es
dec
int
sbb
iret
or
sbb
adc
data16
sub
mov
sahf
or
adc
jecxz
ror
rol
cmp
push
xchg
ds
pop
sar
xchg
sbb
je
ret
mov
enter
inc
shl
dec
into
mov
sbb
fiadd
xchg
mov
int
iret
pop
mov
jp
mov
dec
scas
jmp
pop
hlt
jmp
add
jle
sub
pop
fs
mov
sub
or
xchg
aam
add
jb
jl
mov
sbb
inc
push
leave
cli
inc
ins
js
imul
mov
fild
iret
pop
mov
mov
cmp
enter
out
mov
sbb
mov
in
lock
xor
loopne
scas
sbb
dec
xor
mov
ficom
add
sbb
stos
cli
xor
xchg
scas
stc
scas
mov
sub
sbb
aad
push
out
(bad)
(bad)
push
jbe
stc
call
rcr
dec
fs
mov
daa
leave
add
mul
sbb
pop
adc
sbb
daa
es
and
outs
stos
inc
fnstcw
lds
outs
fist
cmp
and
adc
cmp
ins
das
push
cmp
mov
inc
dec
sar
push
xor
jmp
in
jb
xor
mov
jb
inc
push
sbb
jns
jge
mov
ror
jp
mov
fstp
popa
cmps
dec
popf
and
xor
inc
in
imul
mov
std
mov
adc
jmp
jns
and
push
xchg
inc
cmp
mov
out
or
mov
(bad)
stos
icebp
lods
push
gs
shr
pop
push
into
mov
(bad)
inc
xchg
jne
pop
add
inc
mov
and
inc
or
in
mov
pop
cmp
aad
jmp
lahf
xchg
clc
call
fs
cli
fisttp
mov
popf
clc
jecxz
bound
mov
mov
adc
dec
mov
in
xor
pop
shl
arpl
(bad)
jmp
jns
(bad)
push
call
jb
addr16
loopne
push
(bad)
mov
xchg
inc
xor
dec
bound
cdq
xor
jecxz
enter
scas
hlt
jb
jnp
cmp
loope
pop
mov
add
push
inc
stos
hlt
push
fild
cmp
pop
push
jne
out
(bad)
pop
ja
(bad)
xchg
imul
or
pop
and
mov
mov
mov
cdq
jns
dec
xor
movs
pushf
dec
jl
mov
and
shrd
or
std
ss
clc
inc
push
inc
mov
add
add
push
mov
cmp
std
aas
fwait
xor
out
fidiv
repnz
in
and
dec
inc
test
movs
ret
sub
repz
pop
mov
imul
mov
cmps
fiadd
jle
dec
lds
movs
mov
push
cmp
imul
mov
stos
aam
ds
ret
test
inc
cmc
addr16
cmp
xchg
and
pop
movs
push
sub
jle
inc
scas
fidiv
xchg
fild
sbb
icebp
inc
add
popf
sahf
ds
test
mov
jae
shr
(bad)
mov
cli
cmp
fstp
cmps
outs
inc
lea
fistp
adc
sub
mov
and
adc
push
cmp
push
popf
mov
or
loope
sbb
pushf
or
in
mov
cld
sub
adc
pop
or
xor
cli
test
in
test
cmc
pusha
xchg
sbb
push
xor
pop
iret
movs
js
or
cwde
adc
in
mov
mul
movaps
xor
lods
push
cmps
shr
jle
rol
push
lahf
test
test
pop
sbb
xor
sub
inc
jmp
out
xchg
call
nop
add
push
fnstsw
add
dec
test
shl
cmp
pop
ss
dec
lods
xchg
push
pop
lds
cmp
imul
rol
xchg
in
push
imul
pop
jp
fs
cmpxchg
in
inc
out
cwde
jmp
jbe
scas
addr16
cmp
sub
mov
pop
sbb
sti
mov
mov
retf
xor
dec
push
dec
sbb
scas
dec
rol
mov
in
add
pop
into
or
aas
xor
jg
fimul
(bad)
out
push
jbe
div
sar
or
shr
pushf
fwait
pushf
mov
mov
jae
xchg
inc
xor
cmp
std
mov
cmp
cld
gs
jl
fldcw
lods
xchg
mov
push
jmp
hlt
jmp
out
fwait
bnd
shl
repnz
fidiv
aaa
cld
shl
xor
in
enter
push
mov
pushf
mov
push
test
das
stos
popf
cmc
add
xchg
mov
add
sbb
xchg
mov
ficomp
imul
cmp
sbb
out
add
jmp
jae
dec
int3
xchg
mov
cmp
rol
ins
aam
retf
push
(bad)
iret
clc
adc
stc
push
mov
ret
mov
jo
jle
sbb
jmp
or
dec
adc
mov
push
cmp
retf
sbb
rol
or
pop
lahf
inc
fsubr
retf
push
aad
mov
cmp
adc
fiadd
mov
repz
jns
cmps
cwde
jb
out
dec
out
ins
popf
or
and
sbb
mov
cmp
shl
aas
popa
es
js
jmp
mov
pop
fs
xchg
mov
or
jno
nop
mov
popf
cs
iret
dec
iret
fldcw
mov
or
adc
jg
and
ss
sbb
test
sub
xchg
add
loopne
stos
adc
into
add
les
pop
aaa
push
jmp
fs
ficom
mov
pop
cmps
or
out
dec
jns
push
and
adc
mov
cmp
cmps
call
shr
(bad)
fisubr
pop
ret
jmp
ret
ret
or
out
jno
ins
popf
popa
stos
jecxz
mov
in
cmp
iret
repnz
adc
cmps
aam
and
sahf
out
pushf
test
xor
(bad)
xchg
clc
outs
rcr
and
push
ficom
fdivr
arpl
jne
sub
push
outs
xchg
das
push
mov
mov
xlat
cmp
mov
addr16
dec
mov
push
and
ss
test
dec
dec
test
inc
xor
sbb
xor
mov
dec
movs
jg
sar
pop
mov
ds
sub
pop
sub
and
inc
dec
out
sbb
mov
rcl
cmp
mov
pop
dec
sbb
xor
sub
mov
and
nop
cmp
ret
nop
jne
mov
inc
ret
lea
cmp
adc
test
jle
mov
mov
xchg
stc
sti
jne
lods
sbb
rol
dec
push
pop
mov
or
push
or
test
cdq
loop
mov
mov
call
pop
mov
sahf
jnp
pop
adc
imul
inc
test
(bad)
dec
and
cmp
push
hlt
(bad)
mov
out
push
dec
sub
dec
stc
and
imul
push
ins
dec
xchg
jae
sbb
sub
adc
jmp
call
lea
ins
fwait
(bad)
fs
cmps
aas
sub
xlat
aas
outs
lods
and
push
push
xchg
adc
or
push
push
jp
mov
movs
(bad)
cmps
mov
call
arpl
icebp
aam
ss
sbb
out
sar
inc
dec
lea
fidivr
scas
cwde
sub
dec
fstp
pop
adc
mov
lahf
jnp
out
ins
or
mov
test
mov
loope
test
dec
data16
clc
mov
dec
cmps
repz
lahf
movs
jmp
jle
fdivr
jae
mov
pop
lahf
clc
not
or
sbb
cmp
out
mov
add
jae
int
jmp
adc
mov
adc
mov
enter
int3
jne
test
cdq
jne
movs
sahf
mov
retf
imul
cmp
sub
ret
icebp
push
lds
out
std
pop
cmp
ins
movs
pop
push
fcomp
or
xor
std
ret
mov
xor
movs
xchg
sub
aas
add
mov
or
jno
ins
mov
push
fdiv
jge
jno
fldcw
mov
ret
cmp
add
loopne
pusha
sub
xchg
sbb
je
mov
mov
inc
hlt
mov
fisttp
fimul
pop
js
xlat
jno
inc
cmps
movs
popf
mov
push
div
mul
js
lock
jg
gs
int
cld
(bad)
mov
or
mov
(bad)
div
xor
pop
xor
push
inc
push
inc
inc
and
and
or
cmc
and
push
xor
lock
inc
mov
adc
and
bound
les
inc
test
ja
sbb
xlat
xchg
js
jno
and
or
scas
(bad)
out
rcl
scas
fwait
xlat
mov
xchg
mov
xor
inc
cli
mov
sar
and
add
push
movs
and
xchg
in
in
repz
and
test
rdmsr
dec
cmp
aam
mov
or
out
dec
mov
push
jp
and
or
push
xchg
inc
cmps
fadd
cmp
mov
inc
in
pop
mov
inc
jecxz
xchg
fidiv
adc
idiv
or
in
xchg
in
inc
aad
jg
xchg
out
ficomp
sbb
cmp
iret
push
icebp
rdtsc
shl
sti
cmp
imul
enter
xor
lds
jns
dec
or
xor
lds
imul
popa
pop
dec
sbb
dec
adc
inc
(bad)
je
push
sbb
(bad)
pop
fistp
mov
sub
mov
adc
int
pop
mov
push
inc
ja
js
imul
pop
mov
xchg
fdiv
jmp
sbb
imul
mov
cmps
sub
sub
and
sbb
daa
es
xchg
jb
push
pop
iret
jecxz
imul
mov
mov
lds
pop
and
lods
mov
movs
cmp
in
or
cmps
ja
hlt
ds
scas
(bad)
cmp
mov
push
ds
sbb
in
cmp
fucomip
(bad)
cmp
les
or
and
push
fbstp
int
sub
jg
jo
adc
inc
ins
sbb
fcom
sub
mov
dec
cld
mov
xchg
push
aad
xchg
jne
jbe
fcmovu
pop
cmps
jae
aas
movs
dec
or
inc
ins
pusha
pop
imul
mov
pop
pop
mov
jae
push
sbb
sbb
fcom
mov
dec
pop
adc
add
or
jnp
movs
jne
mov
jo
or
jnp
scas
xlat
popf
fsubp
ja
mov
mov
sub
fistp
es
or
jp
jp
repz
test
ror
jo
mov
arpl
or
sub
push
pushw
xor
dec
call
inc
(bad)
or
adc
mov
jne
xchg
sbb
add
das
int3
ins
mov
bound
out
dec
pop
or
into
add
shl
mov
lods
repz
add
mov
or
mov
pop
fisttp
adc
sub
jmp
nop
call
cmp
jle
pop
mov
and
jno
cmp
xchg
jnp
call
jae
retf
mov
pop
mov
test
mov
and
fs
out
pop
repz
sbb
pop
sbb
cmc
mov
push
fidivr
mov
add
sbb
jge
cli
mov
jmp
adc
cmp
mov
dec
call
not
imul
fisub
mov
xchg
cmp
stc
fisttp
mov
mov
retf
pop
(bad)
fimul
mov
mov
and
cmp
jo
mov
xor
js
mov
rol
clc
in
xchg
lods
icebp
and
xor
sub
push
stos
mov
lock
cwde
pop
fild
div
daa
aaa
cmp
jae
mov
test
mov
dec
mul
inc
push
mov
pop
and
mov
jp
faddp
out
sub
xchg
lds
push
pop
fcomp
xchg
adc
cmp
pop
adc
mov
inc
mov
xor
mov
mov
or
inc
pop
mov
sbb
jne
push
aas
mov
lds
repnz
in
add
and
adc
push
cmp
dec
xor
xchg
xchg
ret
stos
nop
xor
in
call
mov
or
cmp
xchg
jle
push
jge
test
lock
enter
inc
mov
pop
dec
aad
fs
xchg
push
dec
inc
cmp
stc
cs
out
retf
repz
cmps
dec
(bad)
mov
not
pushf
push
sbb
pop
leave
add
and
xchg
ret
test
or
std
mov
fnstcw
mov
sbb
or
jbe
rcl
inc
push
or
xor
fldcw
call
pusha
cmps
neg
xor
mov
cmps
xor
mov
fwait
sbb
test
or
jbe
mov
jle
mov
sbb
jmp
inc
jmp
fcomp
xchg
pop
push
inc
and
movs
jle
add
sbb
mov
fstp
aas
mov
sub
cld
jne
fwait
es
(bad)
jns
sahf
data16
adc
mov
sti
in
pop
mov
rol
outs
jmp
(bad)
jge
shl
clc
scas
cli
push
popf
adc
push
sbb
addr16
repz
or
xchg
sti
lock
movs
adc
push
dec
scas
inc
movups
jle
ret
call
push
cmps
loope
xchg
mov
sbb
dec
loope
add
aas
jmp
add
jl
test
or
push
sub
inc
add
mov
adc
imul
mov
leave
inc
xchg
test
or
dec
or
and
xchg
pop
adc
shr
inc
or
mov
mov
nop
jp
les
mov
or
mov
or
popf
(bad)
jo
sub
mov
add
mov
push
adc
and
and
pop
cmps
or
popa
sar
repnz
jmp
or
imul
stos
mov
(bad)
dec
dec
ja
shr
xchg
pop
push
test
xchg
inc
add
movs
adc
push
push
dec
add
jae
or
push
adc
or
sbb
stos
sub
pop
pop
retf
pop
push
stc
outs
pop
xchg
scas
sub
rcl
mov
enter
test
inc
jmp
jne
xchg
sbb
js
popf
cmps
and
iret
sar
sbb
dec
or
mov
aaa
retf
push
jmp
popa
cdq
jbe
or
std
sub
add
ficom
in
retf
or
aam
lds
jb
ds
push
mov
add
dec
lods
inc
dec
fsub
mov
aas
cmp
stc
or
jns
movs
lods
sbb
repz
mov
cmp
or
imul
mov
inc
outs
dec
mov
int3
js
jl
mov
stos
xchg
push
xchg
dec
stc
outs
and
mov
jne
ins
leave
aad
mov
test
and
ins
push
test
std
jb
xor
jbe
mov
icebp
sub
lahf
stc
pusha
stc
cmp
adc
in
jo
lock
popa
mov
adc
out
mov
jg
xor
sub
xor
inc
inc
int3
add
ret
and
(bad)
cmp
xor
rcr
sbb
mov
(bad)
xchg
outs
inc
clc
mov
jle
jbe
retf
mov
test
ret
sub
fidivr
push
push
mov
cli
dec
mov
in
hlt
cmp
arpl
push
jmp
push
push
sbb
jnp
cdq
inc
sahf
fs
jle
xor
inc
and
ins
sbb
es
mov
loopne
pop
jbe
bound
pop
or
ret
inc
dec
jno
and
std
pop
pop
mov
iret
aam
movs
add
sahf
pop
dec
dec
push
push
push
rol
test
gs
inc
int3
add
int3
xor
mov
inc
push
push
xchg
test
mov
inc
movs
xor
dec
repz
mov
ret
(bad)
sub
mov
fnsave
xor
add
mov
sahf
pop
enter
pop
enter
bound
imul
adc
aas
retf
xor
xchg
mov
nop
dec
mov
enter
xor
or
xchg
xor
mov
pop
add
mov
sar
mov
mov
xchg
std
push
sar
jae
cmp
movs
pop
stos
mov
xchg
leave
inc
mov
imul
or
jo
mov
push
mov
push
or
xor
add
mov
inc
and
sahf
and
shl
mov
cs
jns
sbb
and
rcr
xchg
or
or
dec
das
lods
and
loopne
xor
mov
ret
inc
dec
(bad)
enter
cmps
pushf
in
std
int3
popf
lock
dec
xor
es
dec
push
pop
push
les
mov
cmps
push
ror
fcom
les
sbb
mov
fbld
mov
mov
cmp
pop
js
add
lock
popf
fldz
adc
mov
dec
in
pusha
push
test
mov
dec
imul
xor
jle
adc
mov
icebp
leave
adc
mov
add
add
scas
mov
xor
or
mov
cmp
cmp
adc
fisub
out
xchg
xchg
jno
xchg
xor
sub
in
aas
pop
xor
or
outs
daa
cmps
fstp
cmp
and
rcr
repz
enter
jno
dec
jecxz
push
dec
jnp
adc
or
loope
pop
cld
cmp
mov
shr
aad
dec
sbb
arpl
rcr
iret
cs
dec
leave
out
icebp
mov
loopne
xchg
loope
adc
(bad)
cmp
aam
fwait
shr
or
mov
stos
repnz
pop
lods
xor
push
pop
jb
and
call
pushf
add
cld
test
imul
sub
jae
pop
outs
mov
mov
into
je
pmaxsw
push
dec
ret
dec
mov
call
rol
(bad)
lahf
rcr
pop
loopne
aad
adc
mov
popa
dec
in
cmp
call
dec
or
rcr
mov
and
cmp
js
inc
jmp
xor
or
xchg
in
fs
icebp
adc
ret
outs
sbb
pop
dec
pop
adc
gs
aaa
in
inc
pushf
daa
fs
mov
sbb
and
pop
push
push
test
jl
and
test
xor
jmp
jmp
jle
mov
mov
sub
jne
push
mov
loop
xchg
mov
scas
fdiv
and
ins
mov
push
call
test
aad
add
xlat
mov
mov
xor
mov
adc
dec
mov
addr16
(bad)
jge
pop
call
retf
scas
push
jp
push
out
ret
mov
add
repz
loopne
retf
outs
cmp
enter
(bad)
inc
(bad)
out
pop
mov
sbb
lods
cmps
inc
push
ror
outs
daa
retf
icebp
shl
outs
imul
loop
mov
sub
sub
add
pop
loopne
lahf
ins
cmp
shr
out
je
(bad)
push
nop
dec
aas
mov
sub
mov
aam
push
pop
and
mov
or
aad
loopne
push
out
mov
(bad)
pop
nop
fist
jno
mov
aam
int
pop
mov
jb
add
int
cmp
add
xchg
adc
sub
mov
mov
ret
adc
fild
push
ja
xor
xchg
adc
das
cs
or
lea
sti
cwde
xchg
adc
mov
sbb
sub
and
dec
fsubr
cmp
xor
call
pop
inc
pop
ins
xchg
push
js
fild
das
mov
adc
mov
pop
aad
sub
and
pusha
int3
fbstp
fdivrp
add
scas
ror
fdivr
xor
push
adc
sbb
stc
mov
or
bound
ret
inc
or
push
add
sub
rol
or
dec
sbb
push
sub
dec
add
push
mov
in
push
enter
mov
xchg
dec
mov
mov
cmp
and
cmp
push
mov
movs
jno
pop
sbb
xor
mov
cld
pop
jle
cs
add
add
cmp
mov
pop
mov
jne
movs
pop
add
xchg
pop
gs
xchg
aad
retf
mov
add
mov
jnp
fnsave
add
add
jo
cmp
adc
shl
cmp
imul
div
les
sbb
cmps
and
outs
data16
jmp
or
outs
lods
ins
in
sbb
jle
sub
sysexit
mov
mov
pop
test
sbb
movs
enter
(bad)
lods
inc
xlat
icebp
lds
fistp
jle
addr16
jl
dec
dec
push
in
or
test
mov
and
(bad)
mov
aaa
mov
mov
and
and
test
test
mov
out
into
mov
sbb
mov
es
push
jmp
push
fwait
cmp
pop
cli
xchg
mul
mov
push
(bad)
(bad)
fnstcw
pop
daa
push
adc
test
push
pop
aaa
push
sar
xor
push
movs
cmp
out
loope
inc
cdq
fcomp
jbe
sub
add
shr
icebp
xlat
mov
es
cmp
dec
pop
dec
or
retf
push
xor
mov
xchg
imul
repnz
mov
idiv
xchg
dec
mov
into
fadd
outs
cmp
jo
cmc
push
mov
xchg
xor
cwde
hlt
aas
cmp
jp
mov
pop
or
jb
mov
xor
test
jg
push
push
call
push
(bad)
scas
outs
and
int
pop
(bad)
cmc
fist
inc
cmp
lods
ds
test
mov
xlat
movs
cdq
ss
in
mov
push
cdq
ret
jl
(bad)
popf
lds
scas
mov
test
mov
arpl
xor
jae
ds
mov
data16
or
es
add
jo
shr
test
leave
retf
mov
lods
and
jp
xor
cld
call
push
pop
dec
xchg
pop
push
mov
lea
add
dec
push
repz
sar
fiadd
sbb
inc
in
jp
add
nop
cmps
test
cmp
cwde
ficomp
add
imul
xchg
xlat
or
pop
push
mul
xchg
out
outs
cmp
lods
pop
icebp
mov
adc
cmp
cs
cmp
sub
test
pop
lock
mov
mov
rcr
aam
inc
inc
sbb
enter
mov
(bad)
cld
ret
repz
in
or
push
shl
int3
mov
arpl
inc
leave
fisttp
(bad)
mov
jl
cli
pop
retf
mov
push
popf
xor
rol
xor
test
adc
in
or
adc
lds
sbb
pop
ins
fidivr
xlat
fst
mov
mov
jmp
mov
loope
mov
sub
iret
dec
mov
push
add
push
pop
jo
arpl
jae
push
sbb
aam
push
stos
mov
loopne
mov
xchg
adc
mov
mov
cmc
out
stos
lods
out
popa
in
sti
or
mov
xlat
sub
sub
cli
pop
ss
add
and
(bad)
jg
dec
outs
xlat
xor
cld
(bad)
in
repz
and
or
add
xor
lods
das
fild
pushf
xor
xor
movs
adc
test
jno
mov
test
out
scas
mov
lock
lock
inc
imul
das
cmp
push
retf
sbb
imul
jl
jp
push
retf
jmp
adc
and
or
pop
(bad)
mov
bound
(bad)
pushf
gs
fistp
push
adc
test
dec
enter
add
outs
mov
fbld
call
xlat
or
pop
es
pop
mov
cdq
cmp
sub
out
dec
mov
sub
(bad)
xchg
es
jecxz
xchg
cwde
mov
or
jg
shl
xor
repz
cmc
cmp
into
imul
repnz
jp
push
dec
stos
mov
out
jge
hlt
sub
inc
pop
dec
cmp
adc
mov
xchg
ret
test
mov
dec
dec
push
clc
push
dec
movs
inc
or
in
dec
sahf
push
mov
mov
inc
adc
dec
and
dec
xchg
icebp
sbb
test
push
sbb
adc
ss
ja
mov
jns
push
out
xor
or
and
mov
ret
shr
stos
cmps
test
ins
xor
push
movs
cmps
xchg
sbb
aam
outs
xor
outs
jnp
xchg
cdq
je
neg
imul
cmc
mov
fild
cli
inc
cmp
outs
jmp
and
dec
stc
ret
lods
jmp
icebp
sbb
popa
(bad)
pop
pop
xor
sub
rcl
(bad)
sahf
shl
jecxz
fnstsw
out
jl
std
sub
pop
jecxz
jp
adc
call
out
mov
aam
ror
mov
imul
test
lock
js
mov
xor
(bad)
ret
pusha
ds
mov
arpl
xor
sbb
popa
xor
and
pusha
lods
mov
clc
fist
sbb
and
xchg
(bad)
jp
mov
(bad)
bound
adc
adc
arpl
sbb
or
dec
sbb
mov
pop
lds
inc
and
add
sub
xchg
push
fstp
sub
in
jmp
sbb
pmulhw
fimul
mov
icebp
cs
add
cmps
ins
in
scas
xor
pop
imul
mov
imul
shr
or
dec
aas
cmp
aam
or
mov
xor
mov
push
jns
data16
cs
cld
mov
es
sub
mov
mov
mov
scas
test
jno
xor
call
hlt
outs
dec
int3
lods
shl
int3
(bad)
shl
mov
mov
popf
pop
mov
das
out
and
jg
xor
call
jl
clc
pop
inc
sbb
movs
xchg
cmc
sahf
retf
je
dec
mov
cld
pop
sar
out
push
imul
out
push
xchg
mov
pop
aaa
or
(bad)
jmp
scas
fmul
xor
jae
mov
lods
adc
aaa
xor
ret
cmc
pop
int3
repz
int
pop
(bad)
sub
ins
push
aaa
imul
stos
inc
daa
push
xor
cmps
or
push
adc
lods
pop
cmp
push
sbb
cs
shl
shl
out
mov
lock
(bad)
push
adc
fldenv
xchg
je
sbb
fdivrp
fnstcw
les
xor
add
shl
mov
cmp
mov
xor
mov
test
sub
push
and
dec
sub
loope
xchg
add
push
xor
jecxz
aas
sbb
clc
sub
outs
push
inc
cmp
or
int3
cwde
mov
sub
fdiv
cmp
pop
in
ja
pusha
test
nop
pusha
xor
or
xor
fstp
or
loop
cmps
lds
sbb
inc
cwde
lahf
inc
out
cmp
adc
jbe
ret
pop
stc
sbb
test
sbb
xchg
out
push
pop
jg
cli
data16
retf
mov
lahf
call
mov
mov
mov
mov
xchg
mov
or
(bad)
jno
pop
xor
push
and
cdq
xor
inc
pusha
mov
push
jmp
sbb
and
jno
push
sbb
mov
rol
jne
jecxz
inc
jmp
sbb
sub
push
jb
dec
out
xor
mov
ins
nop
aam
add
(bad)
sub
or
fsubp
push
cmp
repz
hlt
iret
out
movs
ja
enter
add
mov
fmul
dec
mov
ret
aaa
addr16
shr
push
shl
enter
std
push
jbe
cdq
sahf
pop
out
xchg
ret
jnp
cli
stos
mov
cmps
jns
out
sbb
hlt
adc
add
add
lea
unpckhps
adc
out
es
in
push
or
mov
xor
retf
push
mov
cmp
(bad)
call
jmp
dec
cmc
sti
ss
xchg
nop
push
les
popa
jg
enter
push
mov
in
push
sub
sub
into
in
je
add
mov
pushf
mov
pop
lds
add
adc
lock
pop
or
lock
push
sub
or
push
sub
lods
adc
add
xor
mov
and
data16
jb
jmp
and
mov
lods
das
leave
mov
mov
inc
inc
inc
mov
mov
xor
call
inc
sti
out
jmp
jmp
xchg
fmul
fwait
cld
pop
mov
and
lods
add
dec
mov
arpl
dec
adc
(bad)
push
mov
mov
sbb
sbb
and
push
adc
and
xchg
(bad)
mov
xchg
lea
aas
sbb
or
mov
xchg
adc
test
xchg
or
or
ins
mov
or
xor
scas
sub
push
retf
movs
arpl
sub
imul
xor
pop
hlt
jbe
and
xchg
(bad)
mov
or
sub
push
dec
aaa
or
push
neg
dec
add
and
aas
sub
int3
mov
loope
imul
or
inc
xor
test
rol
mov
mov
jp
mov
jmp
xchg
jbe
cmps
pop
lock
(bad)
pusha
test
imul
enter
xor
cmp
(bad)
popa
neg
fstp
sbb
adc
adc
mov
mov
mov
call
in
dec
mov
cld
mov
xor
fnstcw
xchg
lea
popa
jmp
xor
jge
or
pop
inc
hlt
push
(bad)
and
mov
inc
sbb
sbb
adc
add
aas
enter
sub
push
test
mov
cmp
rcl
hlt
fs
in
add
xor
sub
ficomp
ins
movs
pusha
fcomi
arpl
shl
neg
jmp
mov
dec
sti
push
xchg
test
stos
jns
add
sub
(bad)
bound
pushf
and
ins
icebp
rcr
or
inc
mov
retf
add
stc
call
mov
bound
xor
pop
add
sub
(bad)
(bad)
sub
inc
es
mov
jl
and
adc
xor
std
aad
push
jp
mov
push
data16
int
gs
fisubr
mov
sbb
mov
mov
or
ja
in
xor
xchg
popf
push
mov
sbb
hlt
sahf
call
inc
rcr
icebp
not
movs
popa
or
inc
adc
cmps
cld
sub
and
or
or
or
in
add
mov
cmp
les
adc
shr
aam
xor
sbb
push
shl
jp
sub
jb
addr16
mov
mov
imul
sbb
jns
repz
pusha
sbb
cmp
inc
cmps
pop
sbb
in
adc
push
sti
add
rsqrtps
add
test
push
dec
psubd
or
shl
push
loopne
addr16
add
dec
call
pop
sub
sub
fisub
les
fucomp
bound
mov
sbb
or
shl
or
jmp
fmul
mov
add
xchg
jno
or
sbb
ss
pop
pusha
sbb
cs
jge
cmc
push
mov
mov
or
pop
ja
jg
or
sbb
rcl
outs
mov
js
stc
or
pop
test
push
jl
xlat
(bad)
dec
sbb
adc
repnz
bound
inc
mov
ss
retf
jbe
jbe
stc
jo
and
lahf
bound
fiadd
xor
in
mov
(bad)
pop
xchg
ins
or
and
mov
mov
cmp
(bad)
push
in
xchg
fdiv
in
jp
mov
cmp
retf
iret
fadd
inc
add
jmp
add
cwde
add
out
mov
mov
cmps
sub
sti
stos
jo
cwde
jg
repnz
mov
inc
jnp
addr16
cdq
xor
mov
mov
inc
aas
xor
mov
aaa
js
sbb
fnclex
mov
xlat
jb
inc
test
rol
pop
ror
push
jmp
and
mov
ds
scas
ret
stos
push
fiadd
xor
pop
fsubr
jnp
aad
push
sbb
pop
fidivr
aas
pop
cmp
loop
sub
or
mov
outs
cdq
jp
fisubr
xlat
jge
std
sub
fnstcw
xchg
cmp
xchg
ret
jae
sbb
stos
sub
mov
rcr
mov
shl
mov
push
and
mov
pushf
adc
sbb
mov
xchg
jo
data16
fcom
mov
push
inc
fadd
dec
addr16
imul
jecxz
mov
test
cli
xor
data16
or
jno
xor
mov
add
jecxz
inc
add
adc
clc
dec
into
pusha
dec
jmp
pusha
icebp
mov
jne
pusha
pop
retf
mov
xchg
das
hlt
sub
xchg
fisub
add
xor
pusha
or
or
add
jmp
jg
repz
push
popf
sbb
cs
xchg
mov
test
mov
xor
xor
lea
adc
dec
arpl
bound
fstp
jbe
fcmovne
cmp
push
dec
jmp
jmp
ret
dec
inc
sub
add
sub
pop
add
aas
out
fidiv
mov
aam
dec
jnp
sahf
mov
push
adc
or
mov
xor
out
or
(bad)
(bad)
inc
and
or
popa
push
push
test
jno
dec
dec
dec
retf
fiadd
les
xchg
cli
out
push
mov
pop
adc
fsub
les
sbb
das
xor
adc
outs
jmp
push
inc
pop
int3
push
(bad)
jmp
cmps
mov
sar
xchg
cmp
icebp
and
sub
cmp
stos
iret
cmp
(bad)
std
test
adc
popa
push
add
mov
leave
xchg
sub
pop
pop
fst
xor
cmp
(bad)
fistp
pop
sbb
cmp
and
adc
cli
or
sti
mov
ss
push
call
add
cmp
arpl
nop
xlat
inc
inc
cs
mov
scas
inc
imul
and
pop
call
mov
sahf
loop
je
pop
sahf
ins
push
stos
das
add
cmp
cmc
out
push
mov
dec
bound
mov
repz
mov
push
or
mov
mov
test
dec
adc
pop
std
adc
adc
ins
fnstsw
lds
aad
daa
sub
jbe
or
std
mov
or
dec
fnsave
dec
retf
ins
xor
mov
cmp
dec
in
icebp
cmc
pop
push
cmc
cwde
fadd
pushf
dec
sub
mov
or
ret
jle
out
and
lds
fsubr
addr16
(bad)
mov
push
sub
imul
and
and
repz
fnstenv
and
inc
clc
inc
mov
inc
iret
repnz
loopne
loope
and
xlat
dec
in
retf
mov
fsubrp
sub
xchg
out
mov
cmp
jmp
dec
ins
push
inc
jnp
test
dec
(bad)
ja
sbb
gs
jne
stc
addr16
mov
retf
int3
push
jmp
jae
rcr
popa
into
imul
outs
sbb
jp
out
aas
cmp
jge
jns
loopne
paddb
push
xchg
repz
js
xchg
mov
retf
xchg
mov
jmp
ds
outs
pop
sub
mov
dec
mov
inc
(bad)
cmp
pop
jo
jmp
mov
cli
inc
loopne
inc
and
inc
xchg
ret
stc
hlt
gs
jno
xor
xchg
cmps
popa
shl
lods
leave
jae
les
jne
ficomp
mov
or
pop
addr16
ror
mov
in
test
shr
out
push
cmp
mov
pop
mov
les
daa
ret
inc
mov
rol
loope
jge
(bad)
repnz
rcr
xchg
hlt
mov
outs
push
(bad)
and
iret
inc
jo
popa
mov
jmp
push
cmc
jge
lock
sbb
cmp
sbb
xor
fstp
(bad)
jae
dec
or
mov
mov
cwde
adc
retf
mov
xchg
ins
jns
test
jo
lahf
shl
and
cwde
push
pop
std
sar
and
fcomp
ret
ins
rol
sub
in
add
sbb
jne
pop
popa
push
sub
movs
iret
add
in
sti
adc
adc
test
loope
jne
cmp
shrd
aaa
lods
movs
and
xchg
in
cmp
jp
sbb
add
sub
repz
dec
(bad)
aad
jno
cmps
mov
ins
sbb
or
xchg
ins
mov
(bad)
dec
pop
daa
or
xchg
fwait
movs
gs
xor
pop
or
pop
pop
shl
jge
jns
cdq
fdivr
repnz
loopne
push
push
push
imul
das
or
(bad)
sub
mov
cli
scas
(bad)
fcom
or
add
jo
daa
mov
or
rcr
fbstp
arpl
mov
xor
mov
stos
push
push
pop
and
inc
dec
sbb
in
add
sbb
adc
sbb
in
sub
lods
lods
inc
test
imul
sub
cdq
mov
iret
in
fnstenv
inc
sub
loope
ffree
jl
jecxz
fcomip
mov
call
inc
mov
clc
dec
inc
ds
icebp
popa
out
out
pop
pop
or
jmp
or
pusha
sahf
fs
sub
mov
inc
nop
xor
cmp
xor
push
cmp
jbe
add
cld
jecxz
cli
cmp
es
adc
sbb
movs
lods
pop
push
retf
dec
pushf
and
push
adc
ins
and
mov
dec
add
test
dec
stos
(bad)
mov
std
outs
adc
inc
jecxz
sub
adc
pop
cli
push
sbb
adc
pop
cmp
sub
nop
cld
pop
out
push
cli
les
(bad)
jecxz
shr
xchg
shl
jmp
out
sbb
mov
xchg
pop
push
daa
inc
cli
pushf
pop
stos
xor
cli
loop
xor
cmp
push
nop
xor
inc
and
fisubr
xchg
jo
je
int
jmp
and
rcr
pop
sub
out
lahf
aam
cmp
inc
sbb
cmc
ins
jp
ss
hlt
mov
call
push
neg
pop
imul
cmps
aad
sbb
cmps
cld
call
cld
xchg
inc
imul
mov
push
pop
push
icebp
out
jecxz
inc
jge
mov
sbb
icebp
jle
sbb
jg
pop
popf
test
cmp
inc
fnstcw
pop
inc
dec
xchg
jmp
pop
sub
std
lods
cdq
inc
daa
adc
nop
sub
push
adc
lahf
(bad)
mov
(bad)
std
call
or
sbb
stos
jbe
je
cmps
push
dec
xlat
xor
fucomi
(bad)
loopne
mov
xchg
popa
and
leave
test
lods
jmp
pop
hlt
xlat
loope
pop
xchg
repnz
call
or
cmp
js
xor
mov
cmp
mov
adc
dec
xchg
mov
lods
or
mov
adc
jne
push
jbe
adc
xor
jle
mov
pop
mov
and
dec
dec
and
xchg
out
inc
pop
aaa
(bad)
push
sbb
ins
ins
int3
test
idiv
mov
std
and
aad
xlat
(bad)
loop
and
(bad)
fisub
and
mov
outs
xchg
cmp
ret
repz
mov
push
mov
(bad)
xchg
push
jae
test
cdq
test
sti
mov
out
adc
mov
into
inc
hlt
xor
mov
sub
inc
sahf
(bad)
movs
out
call
ror
cmp
movs
dec
cmp
mov
mov
dec
and
and
aam
xchg
mov
jecxz
ret
test
and
fnstenv
cmps
ret
leave
mov
and
and
call
and
push
add
pop
dec
fdivr
ss
mov
inc
mov
jg
test
mov
ds
imul
aas
leave
pop
mov
xchg
(bad)
xchg
jmp
sbb
in
fnstcw
xor
daa
xor
fyl2x
push
popf
test
shl
ret
or
fist
pop
test
out
aaa
data16
pop
cdq
ss
arpl
dec
mov
out
lods
out
mov
sub
call
dec
sub
xor
call
imul
fsubr
inc
mov
jnp
bound
jmp
aaa
ds
jecxz
outs
sub
pop
push
hlt
sub
arpl
int3
int
int3
cmc
jbe
add
push
arpl
sub
popf
jo
loop
adc
adc
mov
jbe
icebp
les
add
rol
or
imul
cmp
pusha
shl
mov
es
adc
xor
and
cmps
lds
pop
leave
cmc
in
xor
leave
rol
rol
mov
pop
mov
and
jge
les
out
in
mov
xchg
adc
jg
sub
dec
cmp
inc
into
bnd
adc
retf
pop
int
jne
xor
cwde
mov
inc
and
dec
jno
pusha
std
jbe
sbb
mov
mov
ss
sahf
mov
xchg
rol
mov
mov
push
sbb
lock
inc
jb
ror
sti
cld
ret
cmc
retf
mov
mov
mov
jbe
xchg
dec
cmp
or
xchg
mov
adc
out
sub
scas
js
xor
fadd
mov
lahf
push
mov
mov
and
mov
push
fild
dec
inc
xor
xchg
sub
sbb
xor
inc
and
jmp
retf
jno
cld
cmps
pop
pop
icebp
popa
lahf
mov
jb
sbb
dec
pop
loopne
mov
pop
push
inc
lods
jnp
fwait
cmp
mov
inc
or
or
mov
mov
xor
sbb
ins
fisubr
mov
jo
fidiv
xor
cmp
aas
pushf
add
dec
aam
push
xor
adc
pushf
push
pop
inc
and
adc
sar
and
arpl
repz
in
das
repnz
cli
in
add
or
push
popw
shl
sti
pop
outs
mov
lods
ret
adc
bound
in
xor
(bad)
shl
nop
push
retf
mov
dec
jmp
ins
js
push
add
sub
shl
inc
lods
xchg
jbe
jmp
ins
(bad)
sti
mov
push
inc
jl
push
cmp
push
iret
lods
retf
icebp
popf
add
adc
sbb
mov
in
ins
mov
lods
xchg
fisubr
or
lock
mov
jge
repnz
out
push
cmp
fstp
xor
out
sbb
and
data16
or
fisttp
push
mov
dec
fbstp
push
add
xchg
bswap
nop
mov
add
and
(bad)
idiv
shl
jge
aam
add
jae
(bad)
repnz
dec
in
xor
push
(bad)
in
scas
xchg
mov
jns
ins
inc
test
ret
aad
jmp
pusha
jae
mov
cwde
out
mov
jmp
idiv
lods
lods
jmp
cmc
inc
cs
dec
hlt
ds
xchg
cdq
pop
test
rol
inc
mov
pop
idiv
and
sub
mov
lock
push
mov
movs
push
call
and
aas
sbb
daa
and
jge
aas
mov
enter
add
pop
les
inc
(bad)
js
or
jae
sti
lahf
mov
mov
out
xor
ret
xor
jg
loopne
call
mov
pop
push
(bad)
enter
lods
aam
xor
in
inc
(bad)
adc
enter
and
inc
pop
pop
sbb
shr
popa
lea
sbb
sub
xchg
stc
mov
xor
leave
mov
jmp
jne
push
div
jnp
push
popf
push
shl
adc
std
lahf
push
push
rol
pusha
pop
mov
and
dec
jge
jne
cmc
popa
cmp
and
ins
jmp
iret
lods
jns
retf
leave
dec
push
cmps
repz
loop
mov
push
and
xchg
stos
mov
in
mov
loopne
xchg
sbb
mov
retf
push
ret
aaa
in
sub
mov
pop
stc
loop
mov
lea
lahf
fst
adc
imul
push
stc
repnz
inc
rol
jne
and
pop
add
xchg
gs
iret
xor
pop
adc
das
int
ja
stos
ss
and
cli
es
stos
jle
ret
mov
aas
ins
stc
mov
jb
pop
cmps
bound
xlat
imul
sub
or
jbe
xor
or
jp
push
sub
lods
mov
jp
dec
cmp
sbb
dec
ins
(bad)
push
fild
sahf
scas
pop
and
jmp
jb
test
pushf
cld
jecxz
mov
ret
xchg
in
fs
mov
cdq
pusha
inc
mov
pop
xchg
out
xchg
jle
adc
xchg
xchg
int
out
inc
call
mov
stos
clc
fstp
or
jne
loop
jmp
fidiv
dec
dec
scas
cmps
cli
loopne
jmp
into
mov
jle
push
dec
test
jnp
inc
ins
sbb
jge
lds
xor
(bad)
cli
int
push
cmp
xchg
mov
popa
sub
sbb
pop
aam
std
pop
scas
jl
inc
dec
jns
call
push
cmps
dec
outs
mov
jge
dec
dec
or
jg
sub
inc
call
jge
arpl
adc
add
(bad)
pop
push
cmp
mov
xlat
out
jle
ret
in
les
shl
ret
pop
jge
retf
fistp
mov
cmps
clc
ds
inc
cli
scas
(bad)
out
stos
hlt
int3
cld
jnp
sbb
rcr
jne
pop
nop
mov
in
sub
jmp
adc
pop
lods
fcom
sbb
clts
into
ss
nop
xor
stos
mov
push
pop
inc
push
jnp
sbb
retf
inc
out
out
call
mov
mov
xchg
or
pushf
clc
xacquire
and
fld
and
xor
add
cmp
fisttp
jb
mov
jnp
(bad)
sbb
test
push
mov
inc
mov
lahf
xchg
cmps
dec
shl
out
xor
mov
dec
mov
jbe
(bad)
scas
xchg
ja
xchg
and
inc
loope
add
mov
cdq
cli
mov
xchg
mov
(bad)
or
xchg
jo
xor
add
mov
in
shr
es
(bad)
stos
(bad)
mov
pop
cmps
xchg
jae
int3
call
and
mov
sbb
xchg
pop
in
in
push
mov
rol
and
push
stos
push
out
lods
stos
fstp
mov
dec
pusha
jmp
xor
add
inc
scas
test
push
mov
jne
cmp
adc
enter
dec
ror
sbb
in
adc
push
xor
push
mov
dec
xchg
retf
add
xor
adc
sub
jb
jle
and
inc
mov
sub
mov
repz
test
fstp
dec
jecxz
outs
leave
cmp
xchg
scas
test
dec
inc
pop
lahf
adc
iret
dec
or
inc
(bad)
mov
cmp
or
pop
sub
js
addr16
ja
mov
imul
nop
cmp
retf
push
xor
pushf
je
cmps
scas
icebp
je
cli
inc
and
xlat
mov
and
out
ret
in
push
int3
push
mov
xor
push
jle
out
loop
xchg
lahf
sbb
popf
(bad)
xchg
inc
clc
pop
inc
jae
sbb
pop
retf
aad
cdq
or
ret
lahf
ja
inc
ins
pop
add
repnz
sbb
push
or
jns
(bad)
in
call
scas
pushw
test
adc
retf
push
push
out
push
sub
pusha
add
mov
or
out
out
pop
in
jb
xchg
int3
dec
dec
pop
xor
shl
ficom
inc
and
mov
sbb
(bad)
jge
add
int3
fnsave
nop
mov
out
test
ficomp
push
jmp
imul
mov
adc
and
ss
or
mov
cwde
fstp
pop
jns
push
dec
movs
push
mov
and
mov
mov
jge
ret
loopne
loopne
jnp
imul
mov
sti
sub
jmp
inc
mov
in
inc
(bad)
dec
ficom
mov
push
cmp
scas
aas
sub
rol
nop
ror
pop
nop
pop
dec
inc
fld
in
fstp
add
fcomp
out
dec
jl
dec
bnd
out
mov
scas
add
fisttp
inc
jge
mov
fstp
fwait
lock
adc
daa
jle
inc
out
xchg
push
xchg
lea
or
xor
jecxz
push
xchg
cs
push
movs
addr16
rcr
inc
retf
dec
test
sbb
scas
push
dec
dec
punpckhwd
int
mov
jo
popf
test
int
jae
push
pop
dec
aad
fnsave
stc
pop
shld
pusha
ffreep
xchg
sub
pop
push
outs
icebp
dec
jmp
mov
je
imul
mov
int3
icebp
in
(bad)
lds
sub
pushf
out
push
mov
loop
inc
mov
jmp
sahf
lods
add
stos
inc
xchg
ds
xlat
add
xor
push
iret
push
out
jle
push
mov
xor
outs
and
std
retf
aas
fidiv
inc
fwait
xor
in
pop
mov
or
cmp
jl
mov
cmp
(bad)
cmc
xor
lahf
cmps
jp
jle
test
dec
mov
sbb
stos
lods
(bad)
dec
loop
seto
add
mov
loop
test
mov
ret
adc
inc
retf
adc
in
mov
or
mov
jecxz
mov
mov
jl
and
daa
push
mov
dec
push
sub
fistp
or
sub
jg
mov
fdivr
ss
fxtract
retf
pusha
repz
adc
rol
das
jp
push
jmp
cmp
loop
inc
stos
fldcw
or
mov
push
inc
daa
pop
cmp
aas
push
push
inc
dec
shl
outs
cdq
mov
inc
cmps
pop
pop
xlat
and
sbb
fidivr
mov
(bad)
lahf
clc
retf
and
in
ret
xor
mov
lahf
sub
int3
test
imul
les
sbb
add
xor
arpl
aas
(bad)
out
ja
cmp
retf
mov
mov
mov
movs
or
sbb
adc
dec
sbb
mov
sub
pop
mov
popf
add
fistp
and
push
push
cmc
imul
(bad)
dec
and
pushf
sbb
shl
pop
sbb
(bad)
cmps
mov
or
test
and
aam
add
xchg
and
mov
cmps
dec
cmp
add
outs
test
adc
sar
call
xor
jo
mov
sti
aad
dec
mov
icebp
xor
cdq
ret
into
test
out
add
xchg
cmc
cmps
push
push
jae
add
loop
stc
into
retf
adc
lods
jo
push
pop
cmp
xor
test
movs
mov
pop
push
je
sub
dec
scas
xchg
xchg
cmp
xchg
test
fimul
xchg
cmps
sub
sub
loop
xor
pop
outs
call
jb
xchg
sbb
lods
or
push
mov
pop
fst
js
scas
dec
cmps
jmp
leave
fadd
dec
xchg
aas
jmp
mov
sub
mov
fild
bound
xor
sti
push
pop
jge
add
dec
mov
jg
dec
xor
retf
adc
loope
xor
mov
inc
add
sub
out
mov
xchg
xor
sub
push
sub
adc
mov
retf
pop
retf
jmp
xchg
mov
lahf
jae
imul
pop
cdq
cmp
push
xchg
nop
dec
leave
mov
leave
loope
cmovp
sub
mov
es
hlt
frstor
lock
and
ins
or
xor
push
push
sub
pop
int3
add
cmp
test
mov
jmp
inc
push
pop
mov
cwde
pop
fmul
cmp
jmp
rcl
mov
cmp
in
fisubr
xchg
mov
fwait
and
pop
mov
daa
or
add
outs
jp
mov
inc
scas
bound
dec
xor
out
mov
stc
shl
cmp
mov
xor
dec
cs
movs
push
leave
mov
xor
popa
retf
stos
or
push
push
leave
inc
pop
addr16
sbb
repnz
xor
sti
aas
xchg
repnz
ss
je
jg
(bad)
xor
ret
movs
push
mov
ja
and
push
and
aas
add
jns
mov
mov
fwait
pop
arpl
shl
or
push
scas
mov
mov
xchg
repz
push
xchg
sbb
or
cmp
mov
mov
xlat
mov
sub
sti
sbb
and
sbb
and
fnstcw
xor
in
ds
gs
or
sahf
cmps
rcl
jnp
xchg
jecxz
push
push
xchg
or
add
mov
test
std
mov
sub
sub
sub
lods
mov
or
xor
test
pop
push
inc
mov
sub
mov
lock
ficom
data16
jae
jbe
call
dec
bound
int3
aaa
dec
push
lods
sub
add
mov
rcl
jbe
(bad)
(bad)
hlt
inc
and
pop
xchg
cld
inc
push
xchg
push
mov
aas
add
stos
jg
mov
call
push
jg
pop
retf
push
mov
out
inc
loopne
or
cmp
neg
add
imul
mov
add
je
pop
out
shl
jbe
call
ss
out
jge
dec
lds
in
push
xlat
cmc
sbb
pushw
cld
data16
(bad)
repnz
inc
add
gs
call
mov
outs
mov
push
cmps
adc
dec
sub
mov
inc
add
arpl
das
mov
shr
test
test
inc
popa
retf
repz
sar
sbb
adc
lds
loop
into
stos
into
test
imul
and
xchg
adc
adc
inc
pop
hlt
and
loop
mov
xor
jmp
bound
pop
xor
push
add
aad
push
add
(bad)
xor
repnz
shr
in
jp
adc
nop
and
jmp
retf
inc
cmp
je
inc
jae
popa
inc
scas
sub
xor
jp
stos
imul
leave
jp
leave
ffree
mov
cmp
stos
sbb
xor
adc
xchg
test
ds
pop
mov
and
mov
daa
or
ins
xchg
xor
mov
jge
jmp
rol
popa
stc
stos
mov
ss
push
popa
out
pop
ins
cs
into
out
aam
in
sbb
xor
jbe
adc
retf
stc
xchg
sub
mov
jg
(bad)
mov
pop
push
push
jle
data16
jae
shl
cmp
or
jge
cmp
mov
push
xchg
mov
pop
push
sub
leave
inc
call
sti
inc
out
pop
jo
bound
int
pop
push
dec
add
inc
iret
mov
call
push
aad
ret
das
or
fbld
out
cli
mov
push
mov
rcl
cwde
xlat
and
push
pop
mov
xchg
push
sbb
mov
fstp
pop
aaa
push
jo
sub
xor
push
fldcw
mov
cmps
xchg
xchg
push
mov
adc
jmp
outs
movs
jns
fld
mov
sub
loop
stos
in
sub
mov
sbb
test
popa
xchg
fidiv
push
cwde
leave
mov
mov
mov
mov
in
cli
fimul
loope
gs
and
mov
inc
mov
das
mov
pop
movs
sub
stos
in
in
or
xlat
mov
push
dec
cdq
fadd
add
ret
add
sub
mov
test
cli
fistp
pop
shr
mov
jge
scas
mov
pushf
cmps
scas
push
mov
cmps
pop
loopne
sbb
dec
imul
out
cmp
out
mov
sub
push
push
xor
add
jle
outs
push
adc
repz
ss
adc
dec
sti
jp
test
inc
cmps
jbe
in
call
cmps
add
xchg
mov
inc
ror
jecxz
outs
(bad)
div
scas
dec
loop
push
pusha
mov
dec
cmps
or
inc
xchg
test
dec
inc
mov
inc
imul
push
mov
arpl
leave
add
rcl
repz
int3
enter
js
jge
mov
adc
lea
mov
xchg
mov
rol
(bad)
cmp
mov
adc
push
retf
inc
push
leave
ds
sbb
mov
add
test
ret
in
retf
cli
cmp
scas
mov
or
sahf
adc
maskmovq
mul
ss
and
shl
out
(bad)
jmp
lds
mov
in
and
fdiv
jle
cmp
ins
push
mov
rcr
xor
jg
test
push
adc
mov
pop
lea
mov
sbb
scas
cmp
scas
out
cmps
test
es
push
cmp
cmp
jg
test
sub
push
or
cmps
out
push
jmp
in
xchg
lock
adc
imul
jne
in
pop
dec
lock
loop
retf
cmps
out
out
shr
sti
add
mov
rcl
mov
or
fldenv
shl
psubb
mov
xor
xchg
into
adc
add
mov
pop
inc
popa
sbb
cmps
dec
shr
cmp
ror
sar
push
pusha
push
mov
hlt
ds
stc
call
scas
adc
or
push
sbb
add
gs
xor
bound
cmps
pushf
mov
mov
inc
pop
enter
imul
ficom
jge
(bad)
hlt
adc
jne
or
mov
mov
aas
ror
jl
fwait
outs
and
gs
(bad)
int
ret
xor
cld
sub
int3
xchg
and
dec
and
sbb
cmp
mov
ret
or
jae
pop
push
fs
loopne
bound
imul
ins
jns
addr16
push
popf
sub
in
or
pshufw
ds
dec
movs
hlt
adc
call
into
cs
mov
(bad)
in
ins
test
imul
popa
ins
dec
xor
and
outs
push
inc
aad
imul
pop
retf
push
adc
ds
outs
or
add
xor
lods
mov
xchg
mov
rcl
(bad)
push
(bad)
out
mov
leave
repnz
pushf
jge
pushf
mov
jle
xor
and
addr16
loopne
cmp
lahf
mov
jge
aad
cld
(bad)
(bad)
cmp
rcr
and
sbb
and
xor
mov
push
iret
mov
ret
aaa
sbb
addr16
fist
xchg
(bad)
adc
aaa
mov
cmp
loope
pusha
pusha
nop
test
enter
idiv
std
push
je
dec
add
std
stos
push
mov
add
sub
ins
jns
xor
sti
add
jo
les
call
jae
scas
daa
jnp
mov
push
xchg
clc
aas
pop
add
pop
xchg
cmp
jmp
mov
inc
call
bound
lock
sbb
gs
hlt
int
cdq
pop
dec
sub
mov
shl
stos
jl
fldenv
cmp
jecxz
cmps
add
scas
push
push
aas
aad
mov
je
mov
cwde
sbb
sbb
mov
retf
sti
pop
jle
xor
mov
stos
sub
add
mov
push
and
in
cld
xor
repz
fnsave
mov
lea
or
hlt
(bad)
rol
repnz
imul
pop
mov
ds
add
sahf
add
ss
stos
sbb
cmp
shl
sbb
mov
ret
and
dec
getsec
add
cmp
jp
jbe
xor
(bad)
jmp
jle
je
and
jg
cdq
mov
and
sub
test
fadd
daa
sub
xchg
or
outs
idiv
fiadd
sub
retf
dec
jmp
dec
std
pop
popa
cli
pop
jge
and
fisttp
pop
pop
dec
pop
repz
stc
jmp
test
sub
loopne
fsubrp
ins
js
mov
addr16
jnp
test
add
mov
ins
fisub
push
in
repnz
icebp
(bad)
in
fs
mov
dec
out
arpl
daa
mov
sbb
push
nop
jmp
sbb
xor
jge
sti
xchg
ror
mov
ins
cmp
aam
outs
mov
xor
or
std
xchg
ffreep
pop
or
mov
or
adc
scas
xchg
rcr
aam
mov
sahf
gs
cmp
neg
push
cld
jae
sub
int
xchg
mov
(bad)
aam
mov
adc
loop
(bad)
sbb
or
sbb
mov
pushf
push
popf
imul
fisub
test
mov
lahf
dec
(bad)
jo
mov
inc
into
dec
add
jmp
xchg
mov
adc
(bad)
push
jmp
repz
mov
leave
ds
mov
imul
ja
rcl
xor
mov
jae
aam
fisub
adc
or
inc
icebp
test
jnp
add
pop
ret
cmovns
dec
mov
cmp
mov
mov
loope
dec
xlat
retf
jns
jge
jl
sbb
mov
loopne
and
adc
(bad)
jp
jbe
mov
repz
mov
xor
in
test
stc
inc
jbe
mov
ja
enter
popf
adc
jg
arpl
mov
and
sbb
in
mov
rcr
pop
clc
out
mov
jecxz
xchg
retf
imul
inc
stos
jl
fistp
rol
and
jne
aad
xchg
pop
mov
mov
lea
push
lea
call
xor
push
dec
add
jnp
leave
popf
call
call
fisttp
lods
sub
dec
aas
loope
sbb
arpl
jno
hlt
cmp
jne
(bad)
dec
mov
pop
fcomp
adc
out
push
pop
int3
sahf
mov
pop
aam
aas
pop
cmp
sbb
xchg
(bad)
das
gs
popa
sub
push
xchg
pop
fxch
in
inc
retf
sbb
addr16
lods
inc
sahf
inc
mov
xchg
or
xchg
push
add
iret
dec
pop
loop
dec
fwait
xor
xchg
scas
fstp
cmps
fdivr
mov
mov
cld
mov
mov
pop
mov
sbb
inc
mov
pop
imul
call
stos
test
fs
add
lods
fmul
test
stc
outs
popa
sub
cmp
xor
dec
scas
(bad)
(bad)
fdivrp
inc
out
and
test
aad
xor
imul
cmps
mov
mov
mov
addr16
ds
mov
jnp
pop
xchg
(bad)
add
cld
xchg
into
ins
mov
jns
and
dec
lds
call
push
jno
add
mov
es
popf
cs
dec
mov
aad
test
add
jnp
jge
scas
or
ret
pop
add
pop
daa
test
fadd
sub
not
mov
inc
mov
lock
popf
je
es
retf
mov
or
and
sub
sub
pavgw
gs
mov
mov
xor
scas
mov
pop
xchg
add
push
mov
gs
cld
out
js
mov
dec
sbb
push
xlat
dec
fild
js
or
dec
mov
push
int
mov
dec
repz
retf
pusha
rcr
lahf
pop
jbe
jmp
fmul
mov
jg
xchg
pusha
xchg
mov
mov
shl
stos
cli
push
ss
xchg
mov
ins
jmp
xlat
pop
js
leave
fnstenv
ret
outs
stc
xor
mov
xor
xchg
retf
pusha
xchg
dec
mov
or
sbb
rcl
or
sub
jg
outs
ss
rcl
sbb
cmps
sub
mov
loope
or
adc
add
(bad)
pushf
jae
mov
fdiv
cmp
xor
xor
outs
dec
test
push
mov
sbb
icebp
add
loopne
xor
pop
fs
or
mov
clc
mov
sbb
stc
xchg
in
test
leave
jns
lea
sbb
(bad)
mov
push
xor
sub
outs
xchg
scas
fs
mov
cwde
sar
leave
fidiv
cmc
fmul
les
in
push
sbb
sub
mov
rcl
adc
or
jl
test
pusha
add
movs
jge
data16
dec
mov
movs
shr
xchg
aas
jmp
push
loope
and
adc
stc
out
pop
or
in
loop
iret
(bad)
push
leave
aaa
repnz
jns
inc
imul
mov
das
mov
sub
xchg
sub
jnp
jnp
push
pop
jle
or
jle
sbb
fst
pop
fdiv
adc
sbb
iret
add
pusha
in
jmp
mov
or
cs
or
sub
call
lods
push
mov
fild
pcmpgtw
and
jns
mov
jg
adc
popa
pop
or
popf
rcr
fwait
inc
mov
xchg
lods
and
es
sub
push
shl
cmc
test
inc
add
test
jge
mov
ror
mov
repnz
jecxz
adc
int3
das
icebp
dec
xlat
mov
xchg
jno
leave
fiadd
mov
and
sbb
test
pop
xchg
inc
sti
mov
(bad)
repnz
iret
jae
sbb
add
and
icebp
jb
push
retf
lods
jmpw
ins
pop
cs
cmps
jle
aad
sbb
ret
and
mov
leave
std
std
retf
loop
mov
ins
fdivr
adc
out
pushf
test
jo
jne
in
xor
inc
pop
mov
jge
outs
xchg
mov
pop
and
imul
cmp
jns
dec
and
inc
and
sbb
dec
xor
sub
inc
mov
repnz
mov
xor
idiv
and
daa
pop
out
adc
inc
sbb
xchg
aas
mov
lock
je
pop
sub
fimul
push
cmp
cmp
cmp
sbb
int3
push
pop
leave
xor
dec
push
nop
pop
jg
or
mov
jmp
mov
std
jg
lds
imul
cmp
lods
or
xchg
mov
shl
xchg
stc
popf
xchg
adc
xor
cld
rol
add
fs
push
cmp
stc
inc
in
dec
cmp
pop
in
sahf
push
das
call
and
xor
imul
imul
mov
cmps
mov
std
pop
xchg
rcr
or
xchg
add
push
ss
xor
mov
pop
push
mov
mov
add
push
push
pop
mov
mov
or
loopne
in
test
mov
es
xchg
and
popa
shr
sbb
pop
lahf
and
movs
call
aad
ja
les
mov
dec
or
ins
js
inc
ret
adc
push
xchg
cdq
jmp
or
mov
(bad)
jae
jp
and
and
int3
xchg
fs
sub
cmp
jl
mov
into
sub
icebp
movs
(bad)
mov
inc
sti
sbb
loopne
sti
ds
ins
bnd
mov
pop
or
leave
mov
mov
outs
and
fsub
(bad)
push
push
xor
or
xchg
es
fcom
ret
mov
mov
mov
aas
fwait
mov
ins
ficomp
fmul
retw
es
dec
sub
sub
fcmovnbe
jg
push
adc
push
push
or
cmps
xchg
push
movs
cli
movs
mov
lahf
adc
aas
and
in
jnp
cld
mov
popf
aaa
xchg
adc
ficom
mov
ins
lock
shl
call
mov
(bad)
ins
jmp
rcr
jmp
cmp
sti
and
adc
pop
repnz
loope
stos
mov
fsub
adc
retf
jmp
xchg
xchg
fild
mov
pusha
out
ss
sbb
bound
xchg
mov
push
xlat
fucompp
mov
push
std
dec
ja
inc
scas
mov
pop
out
out
and
fisttp
jecxz
or
addr16
jle
push
pop
js
imul
inc
push
xor
pop
and
push
cwde
cld
xor
out
loope
push
cmps
shr
into
mov
mov
pop
std
fsub
(bad)
jns
mov
jne
or
fld
ror
push
addr16
imul
ror
das
mov
xchg
mov
imul
fwait
and
iret
jns
add
imul
stos
adc
push
jmp
cmp
aaa
pop
add
xchg
mov
add
inc
or
fdivr
lds
movs
in
or
sbb
ror
mov
adc
push
mov
pop
dec
clc
jmp
jae
cmp
xor
(bad)
xchg
(bad)
jne
call
dec
adc
retf
loopne
ficom
icebp
inc
pop
sbb
addr16
mov
mov
mov
mov
cmps
mov
cli
adc
dec
mov
daa
sub
mov
pop
imul
adc
loopne
pop
retf
pushf
cmp
js
lock
jno
mov
cwde
repz
retf
inc
adc
inc
pop
sub
int
je
aam
dec
dec
shr
cmp
inc
cld
lock
dec
call
fnsave
addr16
fdiv
xor
popa
mov
fsubr
sbb
mov
add
icebp
jmp
push
push
outs
shr
sub
movs
sbb
dec
mov
pop
imul
jle
push
xor
int
jp
push
popa
cmc
rcr
pop
dec
lds
sub
test
jbe
adc
mov
cmp
sub
mov
in
mov
je
hlt
mov
add
imul
pop
jnp
mov
cmp
jmp
bswap
out
ret
add
or
xlat
inc
adc
xchg
sub
call
pop
lock
push
mov
rcl
adc
pushf
sahf
xchg
push
xor
cmp
fmul
or
mov
jge
daa
pusha
lods
in
xor
jnp
ret
rol
mov
imul
push
mov
dec
stc
xor
fwait
mov
out
jo
retf
nop
jmp
aam
and
int3
retf
neg
xor
sub
stos
and
mov
or
test
jnp
loop
push
stos
out
mov
sbb
mov
sbb
sahf
aaa
int
out
hlt
push
mov
ror
ins
xor
pop
jmp
sti
fisub
adc
push
lods
mov
mov
sbb
dec
pop
cmc
inc
cmp
popf
xchg
stos
mov
es
cmp
mov
adc
add
pop
lods
mov
xchg
int
dec
cmp
pusha
daa
mov
fadd
xchg
sub
rcr
jnp
push
xchg
jo
test
rol
and
fldcw
rcl
xchg
mov
dec
adc
fist
jmp
shl
mov
jmp
pop
ins
mov
push
push
cmc
icebp
or
mov
cmp
iret
adc
xchg
lods
sbb
and
lock
mov
ss
aas
test
and
cmps
mov
fcomip
stos
xchg
jbe
in
stos
jne
popa
(bad)
sbb
pop
sub
push
out
clc
(bad)
std
(bad)
xchg
dec
pusha
fimul
lods
jo
dec
jno
dec
iret
movs
xchg
pop
mov
cld
out
adc
push
adc
cwde
xchg
jo
sar
jns
nop
pop
dec
scas
stos
jb
(bad)
iret
inc
cwde
std
cmp
xchg
jnp
push
mov
jo
mov
(bad)
jl
and
sub
inc
mov
outs
retf
dec
sub
pop
cmps
pushf
outs
lahf
adc
loope
in
jmp
xor
push
(bad)
neg
mov
lock
or
pop
in
imul
(bad)
mov
xchg
sahf
sbb
mov
xchg
ins
sub
dec
int3
sbb
lods
xor
pushf
shl
mov
pop
popf
aad
push
adc
pop
sbb
rcr
or
mov
add
add
jmp
push
jmp
inc
xchg
dec
inc
fstp
mov
and
xor
pop
inc
adc
and
icebp
iret
cmp
add
lock
cdq
push
jbe
push
daa
mov
sub
popa
pop
movs
inc
scas
shl
mov
mov
fistp
bnd
adc
div
push
call
inc
fwait
mov
mov
sbb
add
mov
ficom
jbe
fstp
aaa
outs
fwait
movs
sub
ins
sub
pop
or
pop
and
add
push
xor
cdq
rcl
adc
pop
jp
inc
pusha
cmc
rcl
daa
cmps
dec
jbe
in
sub
jnp
add
xor
(bad)
(bad)
and
out
cmp
lods
sbb
test
hlt
movs
add
jle
(bad)
mov
(bad)
arpl
cli
push
hlt
(bad)
lahf
lea
mov
mov
movs
mov
sbb
dec
mov
mov
sub
cmp
test
mov
fcomip
shl
jg
push
dec
rol
push
jmp
jle
jb
sbb
push
icebp
and
ss
in
pusha
aaa
mov
imul
loop
sub
dec
jo
adc
int
(bad)
jae
retf
test
frstor
gs
ror
xchg
cmp
loope
pushf
sbb
fsubr
repnz
mov
jmp
iret
jnp
out
lock
pusha
mov
xor
into
or
xchg
fmul
add
(bad)
mov
aas
loopne
sar
jecxz
(bad)
mov
ret
mov
in
call
push
xlat
in
cli
push
jnp
xchg
call
sbb
lods
sub
mov
cli
push
dec
out
loope
sysret
jge
adc
shl
pop
add
stos
cmp
jbe
ret
mov
test
mov
test
inc
pop
movs
lds
mov
mov
jmp
pop
shl
push
into
pop
std
push
pop
out
sub
sahf
(bad)
out
add
cmp
dec
xchg
jmp
pop
cmp
cdq
loop
loop
mov
stc
out
mov
fldcw
jmp
int
scas
fist
out
xchg
idiv
cli
test
cld
pop
fdivr
mov
jae
popf
pop
ja
scas
mov
les
inc
jge
scas
xlat
jae
arpl
and
dec
popfw
int
pop
or
(bad)
inc
frstpm(287
sbb
push
cmp
fild
sti
lock
clc
jnp
jp
js
rcl
lods
clc
ins
(bad)
jbe
cdq
adc
data16
jb
cwde
push
cmp
mov
sbb
mov
adc
cwde
stc
pop
fnsave
sub
xchg
addr16
out
jnp
cdq
aad
dec
sbb
add
nop
fistp
xor
cmps
mov
or
cmps
cmp
xchg
jmp
mov
mov
push
in
mov
sbb
jb
xlat
push
adc
leave
sub
sahf
div
jge
pop
int3
fisubr
call
mov
sub
mov
scas
je
cmc
scas
ret
(bad)
lods
cli
aad
mov
test
les
mov
inc
dec
outs
inc
int
lock
js
fs
or
and
xor
lock
lock
in
pushf
mov
ss
mov
and
or
adc
mov
jge
cmps
(bad)
shr
jne
cmps
push
push
call
xchg
jg
stos
(bad)
and
(bad)
and
es
mov
jl
ss
push
loopne
rcl
xchg
pop
xchg
(bad)
icebp
or
arpl
movs
rol
and
mov
sahf
xor
inc
jle
push
adc
shl
mov
cmp
cmps
aas
sbb
daa
and
mov
mov
inc
fst
cmps
popa
comiss
push
xor
int
pop
std
inc
or
sub
cmc
lods
fdiv
(bad)
push
inc
mov
pop
loopne
(bad)
mov
mov
push
imul
inc
jg
retf
jnp
jp
mul
pop
xor
cwde
std
cmp
in
rcr
bound
aaa
xor
outs
jae
xor
leave
in
icebp
enter
xchg
mov
or
fisttp
enter
sub
jne
sub
cld
mov
push
rol
out
jge
adc
add
adc
shl
jno
sbb
jle
std
lock
cmps
jmp
(bad)
frstor
mov
cmp
out
shl
adc
das
jge
mov
movs
lahf
iret
lods
cwde
arpl
ficom
in
jmp
dec
inc
js
leave
test
mov
iret
in
sbb
xor
jl
inc
adc
test
and
out
dec
mov
jg
jmp
jns
fnstsw
dec
adc
xlat
div
(bad)
popf
or
inc
stos
(bad)
outs
dec
mov
or
add
mov
pop
sub
outs
jno
mov
enter
xlat
inc
xor
test
lods
(bad)
jbe
mov
fcomp
xor
mov
lahf
fcom
mov
fdiv
stc
adc
hlt
push
out
sub
pop
(bad)
inc
rcl
xor
adc
test
and
jns
mov
aaa
popf
sbb
push
pop
aam
stos
pop
cld
xor
mov
not
add
cmc
out
dec
mov
sar
dec
or
sub
rcr
gs
push
addr16
imul
inc
push
out
shr
out
movs
out
xchg
cmc
xor
into
mov
hlt
je
xchg
(bad)
lock
(bad)
ss
sub
cmps
sbb
sub
shl
nop
mov
mov
loopne
repnz
mov
xchg
je
xchg
push
xchg
(bad)
xor
sbb
movs
and
(bad)
xchg
sahf
test
dec
jle
out
cdq
out
xchg
ficom
sbb
mov
xor
jecxz
shl
cmps
add
out
cmp
scas
sti
or
aas
jmp
mov
out
in
gs
mov
mov
loop
arpl
mov
jns
cmp
sbb
dec
inc
dec
dec
sahf
div
icebp
sti
clc
add
sbb
push
pop
mov
fdiv
xchg
fwait
pop
jne
jge
fistp
jmp
jl
pop
push
cmp
(bad)
jne
push
into
imul
jl
fbstp
xor
sub
sbb
scas
popf
lds
fucomp
jmp
out
pop
stc
je
add
add
call
xchg
add
mov
or
(bad)
shl
mov
or
xchg
xlat
int3
pop
push
xchg
fs
or
mov
adc
fldenv
arpl
(bad)
(bad)
loop
cmp
jle
shl
mov
fiadd
jbe
mov
fmul
cmc
movs
sbb
imul
out
mov
in
cmp
dec
out
iret
imul
test
leave
jmp
stos
dec
jne
xor
aam
repnz
aas
sub
outs
aaa
bnd
mov
sbb
dec
cmp
je
jae
pop
jno
cld
xchg
aas
scas
mov
adc
rdtsc
push
and
jp
das
sahf
push
push
stos
repz
cmp
fs
loop
shl
xchg
xor
inc
iret
in
jnp
stos
xor
in
lahf
fmul
retf
push
push
jne
xchg
scas
scas
shl
in
push
jnp
out
loopne
pop
div
jne
jnp
mov
out
dec
in
mov
xchg
lahf
imul
scas
mov
je
sub
je
rcl
retf
inc
aas
test
test
dec
loopne
mov
add
add
je
imul
shl
mov
out
and
lahf
repnz
xchg
add
mov
inc
jo
call
aaa
movs
sbb
in
mov
popf
shl
add
inc
mov
lock
stc
mov
je
hlt
(bad)
pop
dec
mov
(bad)
into
into
daa
leave
int3
dec
daa
out
in
pop
push
int
pop
idiv
test
jae
jnp
retf
(bad)
retf
ret
or
daa
stc
mov
outs
aaa
mov
adc
jge
cmp
das
mov
dec
mov
xchg
into
mov
xchg
inc
es
cmps
repz
mov
add
out
test
xor
ret
mov
sub
xchg
into
(bad)
call
dec
cmp
mov
imul
cmc
lock
add
ss
pop
lods
dec
inc
lods
jmp
push
enter
scas
cmp
sti
and
icebp
out
xchg
mov
pop
hlt
into
cmp
fnsave
rcl
ds
mov
mov
test
jmp
out
fsubr
hlt
pop
jp
ins
(bad)
out
mov
push
push
mov
adc
dec
or
(bad)
jle
pop
lds
cmp
das
cmc
aaa
or
and
push
scas
test
cmps
fnsave
call
bound
mov
jbe
mov
loope
cmc
repnz
in
or
fdivr
ins
call
cld
test
sahf
jge
cli
call
push
xor
push
scas
outs
je
push
loope
cmp
inc
aaa
das
ret
pushf
out
cld
mov
dec
mov
repz
adc
mov
jne
push
in
add
push
jne
mov
cmp
popf
jle
jbe
mov
cmp
xchg
push
out
push
add
stos
sub
cmps
dec
and
dec
push
sub
or
pushf
sbb
push
xor
cmp
dec
xchg
jns
xchg
(bad)
imul
cli
jg
mov
popf
popf
stc
js
int3
pop
rcl
mov
mov
jecxz
cmp
fnstsw
lods
push
outs
dec
nop
out
adc
cli
(bad)
es
dec
mov
jge
pop
xchg
arpl
ds
stc
ja
stc
mov
add
mov
mov
adc
ja
(bad)
and
mov
xchg
leave
inc
call
rcl
arpl
mov
mov
lods
dec
xor
ds
sub
push
mov
mov
xchg
xchg
add
mov
rcl
or
ins
add
push
pop
xchg
lods
shl
movs
inc
std
sbb
jle
jmp
imul
mov
repz
(bad)
imul
pop
fstp
pop
int
pop
jo
(bad)
add
stc
mov
shl
xor
into
ja
out
movs
lahf
das
gs
test
jge
rcr
dec
call
jl
cmp
jecxz
jo
inc
cld
inc
wbinvd
sbb
mov
push
push
repz
push
inc
bound
jmp
xlat
sbb
ins
arpl
daa
ret
pop
call
mov
cmp
xor
int3
dec
aaa
cmp
jnp
fdiv
jno
out
enter
push
pushf
enter
mov
mov
mov
shl
leave
lods
loope
inc
shl
and
call
sahf
and
call
in
iret
dec
push
jne
in
adc
jno
mov
imul
jl
fsubp
pextrw
mov
inc
fcos
mov
inc
add
jmp
ror
js
rcr
(bad)
icebp
cmp
pop
mov
cmc
mov
pop
dec
not
pusha
cmp
jge
xchg
bound
fld
push
jae
mov
cmp
into
loope
jne
ss
dec
adc
fisubr
cwde
imul
lea
test
adc
or
cwde
mov
inc
cmps
pop
cmp
mov
call
jge
int
mov
and
inc
into
xchg
add
imul
cmp
cdq
retf
dec
fsub
pop
fs
mov
imul
dec
outs
pop
stos
mov
mov
mov
(bad)
adc
and
cdq
push
xor
outs
cmp
mov
add
enter
jnp
mov
push
xor
stos
push
retf
jb
mov
or
ret
icebp
aam
cdq
and
lds
adc
loope
mov
adc
sub
pop
mov
jns
(bad)
out
jecxz
sar
pusha
sub
popf
shr
and
hlt
aad
js
fs
out
xchg
mov
loop
shr
dec
pop
arpl
enter
ret
popf
aam
cmp
shr
sbb
adc
in
and
xchg
jge
push
cs
add
call
paddq
xor
mov
or
mov
test
xchg
stos
test
(bad)
mov
jmp
fwait
mov
es
jl
loop
movs
lods
movs
lods
movs
lods
movs
lods
movs
lods
movs
lods
movs
lods
movs
lods
movs
lods
movs
scas
int3
push
sub
lds
scas
push
inc
push
dec
(bad)
and
shl
gs
stc
sub
cmp
xchg
xchg
pop
jmp
jo
icebp
movs
push
jl
iret
loop
mov
mov
popf
push
add
outs
and
jns
aas
aam
daa
mov
xchg
aas
es
jne
sbb
in
shr
xchg
retf
fistp
and
pop
test
xchg
lahf
repz
mov
push
mov
adc
cmps
jbe
ret
sbb
inc
pop
imul
or
push
dec
imul
ret
jne
push
sub
push
cld
inc
pop
cmp
and
cli
not
fnstsw
jns
repz
pop
int
shr
push
pop
cwde
cmp
imul
cmc
addr16
mov
xchg
dec
imul
inc
xor
xchg
stos
inc
aad
lods
rol
movs
test
fld
lahf
pop
jmp
shr
out
leave
or
fstp
jno
sub
in
adc
cmps
mov
outs
mov
pop
fisub
cmc
inc
or
mov
xchg
test
mov
loopne
ret
popa
xor
mov
mov
or
dec
icebp
cmc
pushf
or
cmp
xchg
cld
iret
ret
sub
pop
stc
sbb
nop
mov
mov
or
cld
je
mov
out
jnp
sbb
movs
add
adc
mov
cmps
mov
push
add
mov
xor
ins
pop
dec
push
mov
cs
add
cmp
inc
lods
add
xchg
or
cmp
pop
data16
push
add
shr
sub
ins
div
sbb
aaa
xchg
data16
xchg
pop
scas
dec
jns
mov
and
stc
jbe
xor
dec
movs
jg
xchg
loopne
test
call
(bad)
clc
daa
(bad)
std
clc
clc
test
hlt
dec
addr16
hlt
shl
shl
out
adc
js
xchg
cdq
dec
mov
pop
dec
inc
shl
rcr
retf
clc
push
fwait
sbb
jle
sub
push
jne
push
imul
push
movs
rcr
dec
in
test
inc
(bad)
ficom
sbb
sub
adc
cmp
xchg
jb
sub
fist
or
test
loop
push
push
add
inc
mov
arpl
mov
sbb
xchg
test
or
pop
mul
and
fxch
inc
and
jl
shr
arpl
stos
xchg
fisubr
loope
or
pop
push
fs
mov
dec
xchg
jmp
dec
push
inc
and
outs
out
push
pop
xor
cmp
and
mov
movs
mov
pop
(bad)
cmps
pop
adc
add
jmp
js
into
jecxz
cs
lods
jns
leave
movs
test
inc
mov
data16
dec
sbb
add
lea
inc
pop
push
xlat
cwde
dec
fld
dec
lahf
sbb
and
test
(bad)
popf
push
hlt
pop
adc
xor
fisubr
adc
test
icebp
jl
jp
mov
retf
pop
arpl
sar
int
or
(bad)
cli
inc
stos
rcl
test
fldcw
popf
ja
pop
jmp
xor
xor
pop
pop
pop
push
test
mov
jnp
xchg
inc
pop
dec
shl
sbb
dec
test
mov
jae
stc
adc
mov
sub
dec
in
(bad)
clc
stos
push
and
add
rcr
call
push
lods
shl
sub
out
cmp
mov
pop
test
push
xlat
mov
aad
leave
dec
cmp
jbe
adc
add
ret
pop
push
out
mov
add
xchg
jmp
jge
jne
lds
add
jecxz
movs
pop
xchg
shl
mov
fisub
cli
fisttp
into
jns
push
shl
jno
or
push
je
imul
mov
mov
mov
and
inc
mov
cld
stos
add
sbb
fst
inc
cdq
loope
retf
not
or
jae
adc
mov
sub
enter
inc
adc
ins
imul
add
jo
sti
mov
sbb
xor
dec
and
and
lock
stc
add
pop
mov
loope
pop
inc
lds
out
fidivr
in
mov
pop
lahf
call
fcomi
jnp
retf
and
inc
sbb
cmp
xchg
push
ss
shr
ror
das
push
test
pop
pop
(bad)
out
js
outs
cmc
xchg
arpl
push
popa
fs
dec
ins
lds
leave
idiv
mov
push
dec
adc
jle
mov
or
and
cs
mov
test
cmp
inc
push
mov
push
loop
test
int3
mov
add
and
jp
cld
mov
movs
mov
add
inc
jb
jecxz
test
daa
fidiv
fwait
pusha
fldenv
cmp
pop
jb
shl
inc
dec
nop
xor
imul
les
push
inc
push
xchg
xchg
jle
or
push
and
mov
or
gs
fbstp
adc
(bad)
stc
loope
lea
adc
sub
jmp
adc
inc
shl
or
and
xlat
push
ds
and
adc
and
fsub
add
test
push
in
add
div
and
lock
add
nop
mov
and
inc
push
add
fmul
or
and
mov
sar
sbb
stos
adc
sbb
jns
add
jmp
and
push
mov
in
rol
cmp
scas
stos
aad
data16
lods
(bad)
shl
and
mov
loopne
push
xchg
cs
mov
cdq
cmp
push
push
adc
cld
or
cmp
std
mov
sbb
call
lds
test
adc
bound
cmp
push
and
mov
gs
test
mov
xlat
mov
sti
call
adc
sar
mov
sar
mov
dec
mov
or
mov
sti
mov
mov
dec
popa
or
imul
outs
daa
fidiv
and
ins
cmp
mov
fild
rcl
add
sub
sbb
mov
stos
mov
sbb
sbb
in
inc
jae
out
sbb
hlt
aam
cld
or
inc
mov
add
data16
cmp
sub
inc
pop
aas
inc
inc
xchg
retf
push
or
nop
xor
pop
mov
sub
aaa
inc
daa
cmp
jmp
xor
out
push
loop
nop
lahf
ds
(bad)
dec
mov
lods
sub
clc
pop
je
push
sbb
adc
sbb
addr16
call
test
inc
push
pop
in
push
fimul
mov
loope
mov
pop
push
and
popf
dec
dec
adc
std
or
dec
jno
adc
dec
dec
inc
inc
mov
add
stc
pop
cmp
jne
push
push
leave
add
imul
mov
out
or
sbb
xchg
shl
pop
mov
add
xor
fwait
inc
add
and
lods
sbb
sub
mov
stos
movs
mov
and
shl
shr
test
lock
xor
call
sub
pop
(bad)
xor
pop
xor
lahf
cmps
ret
jo
sbb
and
sub
sbb
mov
and
xchg
push
jmp
das
movs
clc
mov
js
loop
mov
out
mov
jns
xchg
mov
imul
add
sub
(bad)
dec
ja
xor
sub
jo
cmp
mov
xchg
xchg
mov
push
sub
aam
out
mov
out
rcl
mov
push
test
pop
repnz
(bad)
shl
repnz
and
pushf
mov
cmp
jecxz
mov
add
inc
cmp
aaa
mov
test
mov
sbb
(bad)
imul
mov
mov
xchg
push
(bad)
pop
mov
sbb
aaa
mov
pop
sub
mov
adc
cmps
lahf
es
ins
push
inc
or
mov
xor
mov
into
into
sar
mov
pop
stc
mov
dec
outs
jle
xor
ds
repz
pusha
xchg
sub
or
scas
or
and
push
int
fs
cmp
and
adc
test
mov
test
retf
imul
test
das
loop
mov
jp
popf
xor
sbb
add
mov
cmp
ss
and
sub
mov
adc
sbb
sub
and
pop
aam
aam
sub
fcomp
leave
mov
sbb
dec
adc
fisubr
push
inc
(bad)
ror
aad
dec
fcom
inc
cmp
dec
mov
mov
aam
mov
aas
jo
xchg
xchg
jecxz
pop
cs
mov
pmullw
mov
push
or
xor
test
mov
ficomp
retf
movs
les
and
dec
jno
arpl
cmps
cld
loopne
adc
test
imul
in
repz
xchg
sbb
jmp
add
int
cmp
push
cmp
mov
into
cmp
call
sub
pop
push
mov
push
jns
out
and
jae
lods
mov
loopne
(bad)
out
cli
icebp
inc
in
mov
es
inc
mov
mov
iret
in
mov
outs
xor
jle
jmp
and
fwait
mov
pop
les
pop
into
or
push
inc
repz
push
int
mov
dec
and
xor
dec
and
call
hlt
int
inc
sub
and
and
das
add
je
sbb
push
pop
cmp
push
jle
add
mov
push
gs
and
jb
jl
sar
sub
and
loopne
dec
sbb
jg
movs
jp
push
xor
bound
bound
push
mov
mov
push
sub
hlt
mov
or
popf
in
or
inc
dec
inc
adc
sub
test
adc
outs
push
mov
push
jl
or
push
xor
retf
jmp
popw
mov
or
or
retf
xchg
(bad)
sbb
add
pushfw
push
push
inc
jge
mov
repz
fmulp
push
sbb
sub
dec
fcom
inc
xchg
cmp
lods
mov
xlat
push
sbb
cmp
sub
sbb
pop
addr16
gs
fcomp
dec
shl
fld
in
sub
call
call
movs
call
jecxz
dec
sub
test
loopne
ja
(bad)
or
mov
loope
sbb
mov
and
(bad)
sub
mov
add
adc
(bad)
dec
cwde
mov
jo
fs
aas
mov
and
push
sub
dec
out
push
adc
cdq
jp
es
xor
scas
pop
push
cmp
loopne
push
int3
mov
xor
and
pop
retf
addr16
adc
and
pop
mov
enter
xchg
mov
xchg
add
sub
rol
(bad)
mov
pop
dec
outs
push
cwde
dec
outs
adc
jo
stc
adc
repz
fs
xor
sub
and
leave
stc
(bad)
mov
sub
repnz
or
push
jg
retf
cld
pop
ja
lods
or
out
add
cmp
push
mov
outs
mov
xchg
xor
dec
adc
or
nop
mov
inc
push
adc
xchg
(bad)
jns
adc
fcomp
call
(bad)
xchg
dec
outs
stos
in
push
push
xlat
push
jo
add
aaa
sub
outs
dec
es
push
das
jmp
mov
mov
jb
inc
in
fdivr
dec
jno
fadd
movs
and
int3
push
mov
push
loop
push
mov
and
jle
test
mov
xlat
jbe
push
mov
push
pushf
test
jno
cmps
pop
xor
push
or
into
shl
retf
(bad)
das
and
dec
pushf
inc
pop
jo
movs
inc
fisttp
jecxz
pushf
adc
dec
mov
push
xor
push
dec
dec
rol
dec
cmp
push
aam
and
imul
jo
into
lods
pusha
push
dec
push
cmp
or
popa
cmps
add
repz
fucomp
cmp
lods
loopne
push
mov
retf
sbb
sbb
jne
dec
out
cmp
pop
mov
mov
fisub
jmp
popf
mov
shr
adc
mov
mov
int
dec
add
lea
jo
gs
cmc
mov
in
push
cmp
sbb
sub
and
addr16
push
(bad)
cwde
mov
xchg
mov
mov
xchg
imul
xor
mov
out
jnp
bound
or
jl
pop
or
push
cwde
push
ret
push
xor
retf
les
(bad)
sub
push
cmc
imul
pop
cli
outs
adc
call
fmul
mov
adc
xor
and
retf
jl
into
loope
mov
sbb
mov
xor
movs
mov
push
aas
aam
or
sbb
pop
mov
cmps
mov
pusha
(bad)
adc
ss
cmp
jne
add
cmp
push
xchg
adc
loope
pop
sbb
(bad)
das
out
jp
movs
xor
mov
adc
push
lds
lods
push
lock
popa
inc
mov
in
aas
mov
xchg
leave
jmp
jb
cmp
retf
fdivr
repnz
inc
mov
popa
retf
aam
pop
cdq
xchg
(bad)
cs
push
ins
(bad)
retf
xlat
mov
mov
sub
add
jb
nop
mov
vxorps
iret
ret
pop
in
or
ins
jne
cmp
inc
fisub
inc
ret
adc
movs
stos
jne
push
les
jmp
or
pop
je
(bad)
mov
movs
into
int
test
and
addr16
mov
popa
jb
add
je
adc
cmp
enter
mov
sub
xchg
push
inc
or
clc
mov
clc
je
mov
xchg
cmp
cmps
and
mov
loopne
das
xor
jmp
or
pop
addr16
daa
or
sbb
daa
inc
pop
inc
or
pop
scas
in
cmp
or
(bad)
shl
fistp
mov
jo
mov
aad
(bad)
jo
int3
pop
cwde
jmp
xchg
xor
cmp
jno
add
fdivr
ins
int3
ins
push
jno
test
mov
pop
xchg
call
push
xchg
fmul
cmp
leave
add
inc
pusha
(bad)
sub
mov
je
adc
add
add
dec
rcr
shl
jge
sbb
or
mov
test
arpl
adc
in
ja
inc
mov
and
or
push
mov
push
mov
sub
jno
push
aad
xchg
fild
xchg
je
mov
(bad)
cmps
gs
aad
dec
sub
retf
xchg
pusha
bound
dec
out
test
(bad)
mov
pushf
mov
ret
or
and
ins
dec
mov
mov
or
and
clc
adc
pop
lea
sbb
dec
ret
xchg
mov
sub
xchg
ret
sub
jne
and
cmp
(bad)
shr
lahf
ret
xlat
pop
jo
dec
xor
xchg
fild
and
xchg
ds
mov
imul
xchg
dec
addr16
mov
inc
xor
aas
dec
call
fmul
xor
cmps
pop
sbb
mov
or
mov
xchg
imul
lea
xor
sub
lahf
daa
inc
fist
dec
sub
ss
scas
jmp
jmp
test
jo
sbb
inc
popf
sub
mov
es
jp
in
scas
ret
int3
(bad)
jecxz
xor
leave
enter
dec
jno
popa
jecxz
jle
loopne
iret
dec
and
mov
stc
inc
xor
sahf
out
ds
mov
add
sbb
jne
sub
cmp
inc
jne
mov
movs
shl
fdiv
adc
out
and
js
jmp
movs
leave
dec
inc
pop
sbb
popa
pop
sbb
in
push
mov
inc
mov
inc
dec
ja
pop
jl
jno
push
xor
mov
lods
mov
dec
sbb
sub
ss
aam
test
inc
popa
xor
and
sub
sahf
test
dec
dec
hlt
mov
sahf
pop
sbb
retf
jo
in
add
les
fild
(bad)
(bad)
retf
xchg
xor
out
jecxz
push
adc
scas
popf
inc
test
mov
iret
add
xor
loope
out
jno
inc
push
xchg
and
xchg
adc
push
cmp
push
cmp
adc
sub
cmp
pop
repnz
sbb
lods
ins
sysret
in
adc
ins
rol
and
icebp
(bad)
and
jno
xchg
jno
xchg
cld
adc
mov
in
mov
inc
pop
add
lock
repnz
or
push
push
jle
mov
fsub
jne
cmps
adc
cmp
cli
lock
and
mov
dec
iret
imul
scas
lahf
pop
xor
mov
mov
(bad)
leave
push
add
sub
js
out
hlt
pop
dec
adc
push
dec
imul
retf
clc
adc
inc
ret
fisubr
adc
mov
test
cwde
into
ret
adc
jl
dec
in
push
mov
fsubr
loopne
popa
xor
and
sub
mov
daa
in
retf
cmp
or
dec
mov
scas
xchg
cmp
pop
neg
gs
sub
pop
shr
sub
std
stc
push
jo
xor
dec
or
adc
add
fwait
add
js
add
jb
pop
mov
pop
xor
popa
mov
mov
enter
sahf
repnz
dec
or
sahf
nop
cs
outs
cwde
and
jg
push
inc
ror
loopne
dec
shl
gs
ins
lods
and
sbb
or
aaa
(bad)
pop
retf
test
dec
pop
cmp
cld
mov
pusha
popa
js
xor
and
es
nop
push
add
mov
push
fdiv
xlat
dec
xor
mov
std
xor
imul
iret
push
or
(bad)
jle
(bad)
mov
xchg
jo
cmp
lods
add
fnstenv
jo
mov
ret
jo
add
or
rcl
mov
fnsave
jne
xchg
jne
pop
bound
jmp
cmc
fpatan
jge
rcr
xor
and
pusha
inc
jl
fld
and
test
in
push
jg
jae
dec
(bad)
fcom
mov
scas
inc
or
jle
test
mov
shl
jge
sbb
cs
jmp
dec
pop
enter
arpl
xor
adc
sub
push
das
pop
sub
cmc
cmp
pop
test
jecxz
xchg
adc
inc
aam
dec
scas
movs
scas
jge
xchg
sub
mov
inc
clc
push
dec
je
test
adc
jb
cmp
push
into
out
jg
pop
mov
scas
mov
add
adc
push
(bad)
push
cdq
and
in
test
inc
sub
xchg
imul
mov
in
jno
(bad)
int3
inc
in
adc
das
xor
dec
inc
movs
dec
imul
cmp
or
out
loop
fld
xchg
js
mov
ins
mov
push
das
inc
test
sar
inc
push
or
iret
cmp
dec
xor
inc
xchg
push
push
inc
xchg
lods
or
xchg
loope
push
lock
repnz
js
in
movs
in
fstp
pusha
mov
mov
mov
out
fsubrp
cmps
pop
ins
inc
dec
icebp
add
add
ja
pop
fwait
xor
cmp
pop
cdq
jbe
repz
mov
xchg
addr16
inc
div
dec
imul
mov
add
or
bound
ror
test
xor
sahf
cmp
cmp
ins
push
xor
xor
sbb
dec
inc
xor
mov
mov
cmp
mov
sub
jae
stos
aaa
jo
cmp
sbb
retf
loope
mov
ror
aad
iret
icebp
xor
jnp
out
adc
loope
(bad)
cmp
add
and
sbb
jg
mov
cmp
mov
test
imul
(bad)
out
imul
ja
imul
jecxz
sbb
pop
jno
push
jo
xor
dec
xor
jmp
aam
mov
add
scas
fwait
shl
dec
mov
jbe
cdq
imul
cmp
movs
(bad)
xor
or
mov
repz
dec
add
and
xor
jmp
or
pusha
push
jmp
push
nop
pop
adc
push
jb
push
fcmove
push
dec
or
pop
pushf
shl
sbb
cmp
sbb
jg
mov
xor
xchg
retf
push
xor
dec
fimul
xchg
gs
mov
xor
gs
sub
sub
aaa
(bad)
(bad)
dec
pop
jbe
(bad)
push
add
add
(bad)
pop
xchg
or
lea
sub
leave
push
pop
push
adc
mov
and
in
mov
imul
leave
dec
push
push
push
cdq
jmp
pop
dec
xor
scas
imul
jge
cmc
cmps
xor
or
xchg
pop
jmp
repnz
call
nop
dec
jns
xchg
sub
sbb
out
cmc
mov
lahf
fcom
mov
and
ins
fist
loopne
xor
inc
es
sbb
mov
adc
popf
cmp
fisubr
int3
push
sbb
mov
in
fistp
js
dec
sub
test
das
lea
lock
jnp
adc
adc
es
add
dec
push
mov
mov
inc
mov
popf
mov
fadd
mul
and
add
cmp
xor
(bad)
lods
retf
sub
outs
cmp
xchg
pusha
dec
loop
add
cmps
sub
inc
mov
or
aaa
loopne
popf
or
test
mov
cwde
mov
adc
xor
loop
adc
xchg
outs
mov
aas
mov
mov
rcr
icebp
nop
retf
(bad)
cmps
movs
and
ret
xor
jbe
dec
scas
int3
cs
into
ret
aaa
adc
js
(bad)
lods
cmp
es
mov
fwait
stos
adc
sbb
xchg
mov
xchg
add
pop
pushf
js
sti
icebp
iret
or
in
cmps
xchg
xor
and
dec
dec
pop
pop
mov
int3
sub
push
aas
lea
sti
fwait
pop
jg
fnstcw
outs
aaa
mov
movs
mov
adc
mov
pop
dec
add
xchg
nop
and
sbb
sub
in
and
sub
xlat
lds
aam
cmp
ds
pop
and
xor
pop
and
test
not
jb
push
out
jmp
dec
test
jmp
mov
mov
rcr
adc
imul
dec
sub
dec
xor
inc
clc
loop
ins
outs
cmps
hlt
pushf
or
lds
dec
pop
retf
inc
cld
xchg
or
lahf
hlt
or
inc
cli
mov
push
fnstenv
aaa
aam
mov
arpl
ror
xor
add
movs
mov
lods
cmp
loop
jg
mov
sbb
mov
int3
pop
ret
data16
fldenv
js
clc
shl
out
rcl
rol
mov
icebp
mov
sbb
rcr
pop
jg
jp
sbb
xor
movs
cmc
jle
mov
shr
pushf
repz
xchg
dec
fild
es
mov
mov
and
ret
imul
inc
or
cmps
add
enter
mov
xchg
rcl
into
adc
dec
outs
mov
xor
mov
(bad)
aad
test
push
sahf
mov
dec
cld
xor
pop
stos
icebp
cmps
out
movs
sbb
mov
push
into
push
loopne
mov
xchg
fisubr
jbe
adc
inc
ds
sub
mov
mov
adc
jne
dec
pop
jmp
pop
mov
mov
(bad)
aam
in
call
je
jmp
fisttp
sbb
test
imul
inc
les
xchg
push
sti
inc
inc
ror
adc
inc
cmp
cmp
out
sbb
mov
jne
sbb
nop
push
jns
out
leave
add
mov
cmc
mov
cmps
sub
(bad)
mov
sahf
fdivr
scas
rol
fadd
ds
popa
in
jp
adc
jno
rcr
test
mov
and
xchg
out
je
push
push
mov
dec
out
push
stc
popa
ds
sar
call
(bad)
cmp
cmp
xchg
arpl
pop
int3
mov
inc
mul
jbe
addr16
test
call
push
jno
pop
repz
push
scas
cmp
popa
nop
or
or
stc
pushf
jno
dec
mov
and
aad
std
into
retf
in
ds
jecxz
mov
inc
jle
push
inc
cs
mov
sbb
rcr
jp
add
pushfw
jecxz
outs
push
jae
ss
outs
pop
dec
fcomp
mov
dec
sub
repz
sub
pusha
outs
push
aaa
scas
dec
xchg
inc
add
shr
arpl
push
dec
push
fadd
jno
pop
shl
ds
mov
cmp
ret
xor
jl
add
dec
jmp
jo
cmp
arpl
in
cmp
or
repnz
inc
outs
sub
jns
js
lahf
jl
mov
ret
sub
push
mov
or
or
mov
or
mov
pop
lods
dec
sbb
ss
pop
inc
dec
xor
shr
pusha
js
mov
mov
mov
pop
pop
add
xchg
inc
push
sbb
call
(bad)
jge
mov
push
jo
iret
sbb
mov
mov
bound
xchg
ins
inc
or
pushf
sbb
sbb
mov
xor
aam
lods
and
in
scas
je
outs
mov
xchg
aad
jns
jmp
dec
add
mov
push
mov
in
jmp
xchg
in
inc
call
inc
pop
jg
ds
jo
movs
dec
inc
nop
(bad)
cmp
xchg
sahf
dec
mov
shl
jae
mov
out
stc
out
addr16
(bad)
scas
fcom
and
ss
mov
cmc
and
sub
sub
lea
sahf
out
stc
in
popa
mov
inc
shr
ds
add
cmc
cmc
mov
aad
into
pop
in
int3
sar
add
cdq
adc
cmp
mov
mov
in
outs
inc
inc
repz
test
adc
mov
dec
cmp
pop
nop
dec
and
mov
shl
pop
pop
push
pop
aad
push
out
adc
(bad)
cmp
in
pop
dec
ds
dec
jne
lahf
fidiv
fcomp
jle
mov
sbb
add
fnstenv
xchg
aad
or
jno
xor
in
adc
loop
movs
loop
jno
mov
lds
or
add
xchg
outs
call
ins
test
in
sub
mov
cmp
and
(bad)
dec
lock
pop
das
leave
inc
js
pop
ja
cmp
dec
(bad)
outs
cdq
mov
(bad)
aam
test
xchg
dec
inc
shr
test
ja
xor
cmc
inc
mov
les
ss
inc
xor
out
mov
fs
(bad)
nop
push
sbb
call
fstp
cmps
inc
or
dec
stc
jne
or
repnz
add
push
sahf
jne
aad
or
sub
out
ret
xor
les
lods
outs
sbb
stc
jl
push
call
js
jge
shl
sbb
xchg
aaa
lods
hlt
hlt
cmp
xchg
hlt
pop
jmp
test
cmp
sub
idiv
mov
cmovge
mov
lods
adc
inc
pop
call
hlt
mov
hlt
aad
jne
jp
adc
jle
nop
pop
dec
cmp
mov
lods
cmovns
mov
fld
nop
cli
popa
arpl
xlat
hlt
shr
pop
icebp
dec
xor
fnstenv
je
jbe
push
jae
inc
xchg
cmc
les
sub
inc
push
push
dec
sbb
inc
js
lea
(bad)
popf
push
mov
xor
push
imul
clc
or
mov
and
push
or
adc
jb
and
in
jge
(bad)
pop
mov
push
mov
test
dec
(bad)
(bad)
pop
dec
jl
adc
loopne
pop
sbb
test
mov
enter
cmp
jo
sub
sti
sbb
imul
lods
rsm
cmp
scas
fstp
sti
out
push
and
dec
pop
xor
pop
mov
test
add
mov
add
ret
js
stos
sub
sahf
jns
mov
jne
shr
pop
add
pop
stc
mov
popf
js
inc
mov
not
lahf
call
shr
in
lock
cmps
(bad)
jns
dec
dec
out
pop
push
mov
or
mov
leave
cmps
add
inc
(bad)
push
cli
jge
pop
std
aad
ja
jmp
ins
rcr
outs
add
rcl
pop
mov
ror
cwde
aas
pushf
aas
jl
cmp
sub
pop
adc
pop
lods
pop
cmps
call
out
cmp
arpl
lea
data16
inc
push
call
dec
pop
or
lods
jnp
xchg
and
gs
fwait
lahf
mov
into
jae
mov
sti
ret
js
mov
movs
(bad)
push
or
mov
xor
je
iret
pusha
jmp
add
jl
neg
xlat
outs
add
call
into
std
out
movs
pop
mov
data16
sti
sahf
jg
test
mov
jno
clc
and
pop
push
pop
cmp
mov
or
sub
imul
pop
jmp
loopne
dec
ss
stc
stos
(bad)
jp
and
loopne
pop
mov
int
shr
or
cmp
mov
dec
jnp
iret
int3
sar
adc
adc
push
aad
into
lods
das
sub
jle
test
mov
cmps
pop
stos
sub
mov
cmp
(bad)
jge
aad
jb
jbe
or
addr16
mov
jp
sub
adc
fmul
packuswb
std
icebp
mov
mov
(bad)
in
push
and
gs
into
or
icebp
out
push
sbb
loop
fbld
into
mov
pop
mov
gs
jne
xor
adc
dec
mov
es
idiv
repnz
or
data16
pushf
ret
inc
jmp
shl
fist
stc
pop
int
mov
ins
add
xor
mov
mov
pop
push
mov
(bad)
push
das
stos
cmps
inc
ret
push
add
sbb
popf
fs
xor
adc
lock
adc
adc
xor
inc
adc
pop
scas
loopne
push
add
adc
and
sbb
add
call
push
adc
ror
ret
bound
mov
push
add
xchg
add
int3
add
mov
int3
sbb
sub
aad
sub
ja
sbb
and
push
rol
add
mov
and
rol
mov
add
in
add
fiadd
xor
(bad)
call
adc
add
pop
push
add
sti
scas
lods
sub
sbb
add
movs
add
gs
pop
or
xlat
push
sbb
mov
pop
add
movs
pop
data16
gs
lock
add
and
idiv
fsubr
in
ins
mov
ja
sub
test
lods
add
test
sahf
sbb
push
add
jne
or
sar
shl
ins
inc
or
add
rcl
aam
add
sub
xlat
or
movs
sbb
sub
lds
popa
xlat
shr
mov
add
mov
imul
push
mov
add
xor
je
push
and
aad
add
loop
inc
mov
adc
stos
loope
add
sbb
pop
add
sbb
pusha
pop
ret
inc
out
inc
lods
add
mov
xor
test
pop
repz
add
pop
out
data16
ret
mov
fs
pop
aad
push
pop
push
add
mov
out
cmp
rol
and
(bad)
cld
dec
adc
xchg
push
out
mov
adc
push
ins
mov
movs
frstor
and
and
inc
scas
dec
fs
mov
pop
jmp
or
ins
fwait
cli
sti
fistp
outs
mov
jbe
jge
out
mov
fbld
outs
jp
(bad)
lods
inc
dec
bound
jmp
push
push
popa
dec
arpl
in
cmp
ja
and
mov
fdivr
fs
dec
fimul
mov
mov
sbb
outs
lock
xchg
or
loop
(bad)
dec
ret
dec
out
xchg
pushf
leave
nop
(bad)
call
inc
iret
cmp
loop
cmp
in
sbb
cwde
jns
push
(bad)
ins
out
jmp
data16
cmp
(bad)
adc
(bad)
stos
outs
jnp
stos
(bad)
jecxz
cmp
cmc
sti
jmp
pop
test
jae
out
mov
mul
std
and
mov
jg
dec
inc
mov
out
(bad)
mov
sbb
add
or
mov
shl
inc
shl
jne
dec
clc
adc
or
adc
and
and
adc
adc
push
cmp
add
inc
imul
mov
pop
xchg
cmp
jge
shl
mov
ins
ja
ins
inc
in
push
mov
add
jno
xlat
push
fidiv
(bad)
rcl
in
jns
sbb
mov
adc
test
les
ror
rcr
pop
add
pop
inc
sub
(bad)
and
or
adc
loopne
fcomp
sub
cmp
cmps
inc
pop
adc
push
or
push
inc
sub
pop
adc
cmp
xchg
stos
adc
mov
nop
inc
enter
(bad)
(bad)
ins
sbb
push
test
btc
fld
sub
or
and
popa
(bad)
adc
mov
stos
add
popa
bound
jae
cmp
dec
add
jmp
mov
psubd
sbb
mov
add
js
xchg
sub
cmp
stos
call
pop
xor
fstp
inc
or
pop
fistp
sub
inc
sbb
or
mov
add
test
jo
loop
adc
xor
jbe
push
push
arpl
pop
push
icebp
push
add
sub
mov
sbb
sub
mov
push
ret
into
and
mov
mov
or
and
lahf
cmps
xor
or
and
mov
pop
push
popa
add
pop
xchg
or
sub
dec
das
sub
add
sbb
inc
mov
dec
xor
les
das
and
test
mov
in
inc
pushf
rol
push
and
jmp
xor
push
les
inc
arpl
test
sbb
jne
jecxz
fwait
push
jmp
push
enter
jns
cdq
aaa
test
dec
jle
out
lods
dec
int3
inc
call
fcmovb
js
mov
gs
in
and
pop
data16
test
cwde
dec
popa
cmc
cmp
sub
jecxz
or
ret
test
sbb
xor
mov
inc
pop
adc
push
inc
sbb
int3
mov
mov
sbb
les
enter
mov
pop
test
mov
mov
add
mov
das
in
or
sub
and
fisttp
xor
mov
mov
push
jge
imul
add
add
add
and
lar
push
inc
push
sbb
push
inc
push
add
and
test
cmps
sub
push
inc
rcr
mul
cld
mov
sar
push
scas
or
daa
jge
cmp
cwde
imul
sub
(bad)
cld
dec
fcomp
aas
lds
jns
imul
xchg
rcl
vucomisd
dec
mov
int3
ja
sub
jmp
inc
je
cwde
mul
jg
fwait
loopne
in
sub
jl
or
test
jo
mov
mov
inc
push
aam
xchg
fwait
pop
cmp
cmp
dec
pop
cmp
in
(bad)
ret
xchg
mov
xchg
leave
jno
cmc
es
and
push
jno
dec
pop
in
sub
inc
mov
jo
loopne
and
and
ficom
xor
adc
(bad)
test
enter
dec
jb
repnz
in
lock
jno
je
pop
add
or
push
sbb
(bad)
(bad)
xor
sub
test
dec
mov
inc
mov
icebp
adc
or
les
cmp
repz
mov
mov
and
dec
push
mov
xchg
test
mov
sti
add
sbb
and
in
cmp
jbe
popa
loopne
scas
mov
imul
movs
and
aam
adc
or
rcl
and
ret
aad
ss
mov
or
mov
mov
pop
loopne
loopne
and
cmp
adc
xor
outs
xor
out
jae
sbb
fcomp
cmp
or
and
cmc
xor
je
push
test
pop
in
out
sub
outs
mov
inc
mov
ret
retf
adc
and
adc
or
push
mov
jnp
leave
add
mov
push
push
or
inc
dec
mov
dec
jg
inc
sub
mov
outs
xchg
adc
sub
fs
mov
mov
and
ins
cmps
ja
ins
mov
adc
cmps
push
cmc
push
mov
sar
lds
int
test
jbe
je
mov
push
aad
mov
aam
cld
mov
sub
xchg
add
fist
retf
adc
mov
cdq
jb
test
jmp
sub
mov
mov
mov
push
js
mov
into
(bad)
enter
addr16
fs
jg
dec
push
fmul
clc
pop
mov
sub
dec
and
xchg
sub
cdq
push
inc
(bad)
cmp
(bad)
loopne
cwde
fild
enter
and
inc
loope
or
push
lahf
sub
adc
xchg
mov
sbb
out
xchg
gs
xor
adc
cmc
adc
adc
sti
aad
fdiv
mov
dec
nop
sub
fisub
jp
push
popa
imul
mov
push
retf
out
popf
jae
(bad)
jae
stc
in
pusha
sbb
rcr
push
ret
aam
add
test
movs
ds
ret
cdq
adc
inc
add
mov
pop
out
lods
add
sub
sub
sahf
sub
sbb
cld
or
movs
ror
(bad)
cmps
push
daa
arpl
and
or
sbb
dec
mov
or
ret
ss
jmp
bound
jp
repnz
or
dec
pushf
fcom
adc
in
sbb
dec
daa
addr16
inc
pop
push
sub
rol
aad
inc
mov
addr16
sbb
add
rcl
loope
ret
hlt
sub
push
push
push
jne
test
push
stc
inc
call
xchg
adc
xchg
pop
push
adc
(bad)
mov
mov
call
call
out
aam
mov
push
ficom
lods
aas
ins
outs
cld
in
shl
pop
loope
xchg
adc
sbb
sahf
popa
cmp
test
inc
lods
mov
stos
jbe
and
jns
dec
lods
lea
jnp
pop
ror
push
fwait
call
xchg
mov
not
add
add
popf
mov
(bad)
cs
adc
es
aad
mov
adc
fsubr
icebp
(bad)
jp
cmp
cmp
sar
mov
inc
mov
xchg
test
dec
jns
and
out
or
dec
xor
jb
and
mov
adc
sahf
aad
cmps
movs
inc
xor
lahf
fist
mov
aad
sub
jmp
and
inc
mov
stc
xor
fld
or
xchg
shr
or
mov
xchg
sbb
or
jo
sub
jb
sbb
retf
or
xor
dec
iret
xor
test
outs
xor
xchg
sub
pusha
mov
push
or
mov
mov
mov
mov
inc
stos
jbe
push
imul
lahf
test
push
push
push
dec
and
hlt
and
push
loope
or
ret
inc
xor
xchg
xor
and
or
fisub
lods
and
cmp
add
out
push
mov
adc
mov
sbb
stc
adc
sbb
rol
mov
bound
retf
pushf
or
movs
popf
les
out
pusha
mov
and
fst
pop
mov
icebp
push
inc
jnp
dec
call
in
xchg
aam
and
bound
sbb
xchg
mov
mov
lock
(bad)
adc
ret
mov
cmp
inc
push
jns
push
push
xchg
mov
cmps
push
and
xchg
mov
icebp
and
frstor
ret
cmp
and
xchg
sbb
(bad)
inc
mov
adc
ss
jmp
hlt
jp
mov
mov
inc
push
sub
jo
and
fisub
je
pop
adc
mov
cmps
push
pop
fwait
les
stos
(bad)
or
popf
mov
cs
cmp
fwait
jae
adc
sti
int3
inc
or
push
sub
cmc
or
xchg
sub
xchg
xchg
out
push
cmps
shl
mov
sub
cld
daa
mov
in
mov
adc
cmp
retf
and
ja
and
xchg
mov
daa
mov
xchg
sbb
xchg
repz
in
test
ss
sub
(bad)
lock
pop
fisub
add
ja
push
(bad)
pop
push
cld
inc
sahf
lea
stc
add
leave
inc
popf
xchg
jb
mov
xchg
xor
loopne
inc
and
dec
or
jecxz
xchg
cmp
movs
shl
mov
sbb
add
stc
aad
mov
nop
sub
icebp
pop
mov
sbb
retf
fadd
call
loope
dec
sub
push
(bad)
and
push
pop
sbb
in
and
enter
dec
loop
and
push
out
cdq
fimul
mov
cmp
or
lea
pop
and
ret
jne
nop
cmp
cmp
leave
jmp
add
sbb
jae
push
pop
fdiv
aad
outs
lods
xchg
sub
(bad)
mov
add
add
and
lea
aaa
adc
cli
pop
and
fld
dec
dec
add
or
inc
in
mov
inc
cmc
pushw
test
out
sbb
mov
bnd
imul
fdivr
mov
and
push
push
sbb
adc
add
pop
cmp
adc
retf
in
loop
out
sti
mov
adc
cmp
mov
lea
adc
jp
aaa
jp
call
iret
push
dec
pop
lock
dec
pop
addr16
call
ret
cld
pop
adc
adc
test
cwde
inc
adc
or
xchg
mov
pop
dec
and
xor
in
and
cmp
xchg
mov
dec
movs
cwde
bound
stos
fxch
jmp
sub
and
xchg
pop
xchg
clc
(bad)
retf
ret
loop
push
and
adc
xor
inc
jne
pusha
scas
test
ret
adc
or
cmp
fdivr
loopne
test
cmp
lock
nop
sub
adc
das
add
sbb
sbb
nop
sbb
adc
data16
xchg
sbb
cmp
adc
jo
enter
in
sub
arpl
and
int3
or
sbb
sub
or
pop
pop
jo
add
pop
mov
cmp
jo
add
jo
add
mov
pop
add
push
cmps
nop
pop
cmp
or
les
enter
or
pushf
or
push
sbb
movs
sbb
mov
mov
sub
loopne
and
adc
pop
add
shl
cmp
or
pop
add
(bad)
add
pop
jo
add
addr16
jb
jg
scas
loop
in
stos
mov
cmp
dec
pushf
mov
lods
pushf
jae
enter
push
inc
retf
jnp
shr
in
mov
pop
add
mov
loopne
cmp
mov
cmp
cmp
and
shl
push
or
xor
inc
jl
add
mov
mov
or
cmp
test
add
(bad)
push
cmps
test
or
shl
push
inc
scas
retf
and
push
add
xchg
jmp
mov
and
(bad)
lock
adc
nop
sbb
adc
data16
or
mov
push
add
sub
aaa
add
mov
sbb
clc
test
inc
push
test
ins
cmp
xor
aam
jnp
add
fwait
sub
stos
mov
gs
(bad)
popa
fs
(bad)
dec
jmp
mov
jmp
dec
push
mov
in
add
js
loop
mov
fs
out
sbb
jmp
call
mov
push
sbb
dec
xchg
xchg
scas
rcl
mov
mov
fbstp
and
icebp
pop
int3
(bad)
pop
sbb
cmp
mov
push
mov
and
clc
divps
pop
push
mov
cmp
pop
cmp
bound
mov
sbb
jg
pop
cmp
jns
pop
sbb
(bad)
imul
xor
dec
lds
inc
mov
adc
int
scas
jo
dec
ja
(bad)
shl
lds
dec
test
mov
sbb
sahf
imul
ins
ffreep
gs
mov
(bad)
mov
cmc
in
popf
ss
stc
xor
lods
sub
or
out
not
outs
pushf
mov
sahf
and
das
ret
stc
aaa
mov
or
jecxz
jnp
jge
cmp
dec
fdivr
or
cmp
jmp
jp
sbb
push
lods
xchg
xchg
jmp
in
stc
push
mov
adc
loope
jns
les
dec
shl
sub
fbstp
jl
sub
or
dec
mov
scas
fcmovne
lods
inc
clc
or
icebp
jbe
enter
inc
sti
ret
inc
aam
int3
adc
fsubr
fsub
adc
cld
and
popf
push
jle
mov
push
jbe
adc
xchg
fidiv
adc
je
lods
cmc
ins
loop
popf
mov
sahf
jb
aad
mov
mov
sbb
adc
ins
sar
iret
rol
xlat
xor
push
aaa
push
mov
sar
bound
or
les
and
dec
outs
repnz
lods
js
jmp
cmp
lahf
ret
sar
pop
stos
rcl
mov
aad
cmp
mov
cmp
sub
outs
loop
xor
pop
xor
push
std
inc
mov
mov
push
dec
fbld
jmp
repz
fcom
cmp
mov
sbb
mov
out
sub
in
stc
pushf
mov
inc
(bad)
adc
mov
ins
and
cmp
into
icebp
ds
ja
dec
push
lods
stos
jae
iret
daa
pop
outs
mov
cmps
cmps
cdq
mov
lds
adc
add
cwde
pop
fidivr
add
loop
retf
jg
xor
nop
or
mov
hlt
cmp
xchg
sahf
or
xchg
cmp
fdivr
icebp
cmp
xchg
mov
add
or
aad
aas
inc
and
nop
bound
into
xchg
mov
mov
in
cdq
sahf
std
out
jne
popf
scas
add
jns
xchg
addr16
sub
or
pusha
push
fisttp
pop
(bad)
push
loop
retf
jbe
xlat
jbe
sub
xor
and
adc
cmp
pop
inc
inc
in
dec
inc
adc
dec
jmp
aas
jecxz
or
fsub
das
mov
cdq
adc
hlt
mov
js
adc
pop
mov
out
jmp
inc
cmp
rcr
xchg
outs
ficom
lods
cs
sar
mov
cdq
pop
inc
dec
cmp
in
into
xchg
(bad)
sbb
xchg
cmps
loop
jb
inc
data16
mov
xor
cmp
xlat
and
clc
push
mov
movs
aam
test
mov
std
sub
repnz
js
cmc
lahf
out
je
popf
test
int3
dec
cs
jp
scas
mov
leave
mov
les
clc
mov
(bad)
in
sub
mov
cdq
fadd
xchg
out
sahf
pop
int3
cli
dec
sub
or
dec
(bad)
mov
shl
mov
das
es
jae
std
inc
(bad)
stos
dec
and
dec
das
ds
push
scas
stc
push
mov
mov
sbb
xchg
test
dec
(bad)
mov
add
xchg
fcomp
js
fcomip
fwait
xchg
pop
dec
ficomp
push
repnz
inc
les
test
std
mov
cmp
dec
js
pop
cs
mov
inc
xchg
jmp
scas
retf
(bad)
xchg
in
pusha
repnz
jmp
scas
jecxz
cmp
mov
dec
jo
repz
ja
fsubrp
dec
int
inc
xchg
adc
cdq
in
pop
ja
cmc
(bad)
cs
push
in
adc
test
jecxz
addr16
fstp
push
rcl
(bad)
and
stc
jp
lds
jecxz
mov
dec
or
movs
mov
fsubr
push
dec
lods
jno
add
leave
mov
mov
pusha
push
lods
sub
int
inc
movs
je
into
aad
dec
pop
mov
cmp
movs
lods
jmp
pop
idiv
sub
sbb
aas
repnz
enter
sbb
scas
cwde
jmp
jbe
aam
into
cld
outs
mov
fild
fstp
loope
pop
mov
addr16
sbb
out
jno
popf
adc
pop
push
fucomp
add
pushf
jns
js
cmp
mov
inc
and
nop
call
fcom
js
dec
jg
pop
imul
sbb
cmp
mov
daa
xchg
cli
fcomip
xor
aaa
fcom
mov
mov
ret
pushf
frstor
cld
js
inc
into
xor
int
rcr
dec
stos
int3
out
shl
lods
dec
aad
push
cmp
out
cmp
movs
jbe
push
jns
mov
fiadd
arpl
popf
js
icebp
dec
pusha
push
fwait
pop
out
jl
jae
mov
jg
in
daa
pop
(bad)
fwait
push
cld
jne
or
jge
adc
std
arpl
sar
inc
cmp
fld
sub
mov
test
jge
out
add
cli
rcr
xchg
call
cwde
int3
add
sahf
jne
adc
mov
lods
cmps
xor
fcomp
mov
lock
push
popa
les
pusha
mul
out
out
jecxz
xchg
shr
lods
fnstcw
retf
sub
mov
ins
inc
outs
test
xor
fucomi
pop
ss
xchg
lods
mov
fstp
sub
addr16
(bad)
xor
jnp
call
fwait
mov
das
or
idiv
sbb
pop
xor
cmc
xor
mov
jle
mov
cmp
cwde
push
mov
std
pusha
out
mov
(bad)
or
cmps
retf
adc
fistp
jae
sbb
dec
xor
fisub
pushf
retf
jl
xchg
jl
(bad)
adc
les
dec
es
dec
mov
repz
(bad)
cmp
or
and
xchg
cmp
sub
call
fwait
xchg
adc
les
lods
test
jp
int3
test
daa
or
in
rol
cld
mov
repz
mov
sbb
mov
bound
push
stos
dec
mov
sahf
jg
ror
not
add
xchg
xchg
enter
sbb
inc
cmp
or
mov
rcr
test
fld
call
jecxz
popf
movs
ret
jle
loopne
rcl
test
scas
addr16
xchg
xchg
sub
xor
fdivr
pop
xor
and
pusha
pushw
in
frstor
mov
push
dec
dec
jge
push
mov
or
in
sahf
jl
jne
mov
add
add
ins
sbb
inc
cmp
xlat
cmp
imul
add
sub
pop
mov
out
xchg
xor
lahf
mov
jmp
mov
or
idiv
pop
push
dec
jp
lea
aad
sub
jne
int3
into
sbb
pop
push
hlt
xchg
push
test
xor
les
mov
and
popw
es
cmp
test
push
xchg
ja
and
add
adc
neg
push
jmp
imul
mov
out
mov
sub
adc
xchg
outs
imul
inc
inc
repz
mov
xchg
movs
mov
ins
(bad)
sub
and
xlat
xchg
or
add
push
dec
xchg
arpl
out
sub
ficomp
add
or
xor
cld
ret
scas
stos
and
jne
movs
scas
hlt
inc
sub
dec
popf
cmps
sub
dec
stc
pop
pop
xchg
in
cmp
loope
and
gs
jno
xchg
(bad)
dec
xchg
in
jnp
loop
inc
imul
inc
scas
xchg
dec
push
enter
ret
xchg
jnp
dec
sbb
int
pop
and
jp
mov
retf
add
je
jg
jg
call
or
pusha
mov
pop
mov
xor
push
mov
mov
or
outs
mov
pop
adc
scas
movs
lods
push
movs
ds
test
push
cmp
fwait
sti
imul
imul
cmp
fidiv
loop
jae
adc
mov
stos
pop
dec
adc
dec
lahf
pop
pop
repz
inc
sbb
ds
jae
jg
and
outs
xor
jg
cmps
leave
(bad)
jae
dec
lahf
out
adc
pop
iret
dec
int3
pop
mov
mov
mov
fisttp
fild
stc
(bad)
jecxz
adc
bound
cdq
inc
rol
scas
inc
mov
and
jmp
cmp
mov
inc
pop
adc
mov
mov
xchg
fimul
into
sub
jo
int
xlat
or
xor
sar
add
push
sbb
aas
inc
fisub
xchg
cdq
lss
iret
in
pop
sbb
loop
nop
adc
clc
dec
fild
fdivr
push
adc
fmul
sbb
push
jnp
(bad)
cmp
cld
and
hlt
test
ficomp
xchg
leave
jecxz
test
xchg
xchg
adc
mov
push
fwait
mov
cdq
stc
push
bound
mov
mov
std
sbb
outs
sbb
das
sbb
(bad)
dec
jmp
loopne
push
js
jge
xchg
stos
(bad)
mov
sar
outs
leave
jecxz
xchg
sbb
call
int3
out
repz
lahf
mov
(bad)
push
cmps
adc
inc
scas
(bad)
mov
cld
outs
jl
push
lods
pop
sbb
ret
xchg
mov
push
or
fbld
xor
jge
adc
stos
fsubr
fidivr
push
jo
punpckhdq
mov
call
scas
sbb
mov
xor
sub
xchg
xor
int3
icebp
inc
int3
xchg
fs
mov
sbb
xlat
mov
stos
in
int3
jne
xchg
in
int3
test
xchg
xchg
movs
mov
movs
pop
test
mov
push
fcomp
pop
gs
cmp
stc
addr16
adc
sub
(bad)
xor
xor
push
add
push
mov
pop
cmc
test
fmul
pushw
loopne
adc
iret
ret
pusha
cmps
or
pop
xchg
fbld
aaa
shl
repnz
cs
cmp
and
or
mov
mov
or
pop
test
pop
ins
pop
lds
aaa
mul
int3
jo
(bad)
add
arpl
aam
jo
jns
adc
push
call
jmp
mov
in
xor
stc
xor
adc
vmovapd
pop
lea
jo
aaa
clc
sub
cmc
mov
xchg
movs
and
in
jecxz
and
mov
std
cmp
je
call
mov
pushf
inc
cmc
sahf
pop
mov
xchg
jecxz
inc
out
data16
cmps
fist
lods
push
inc
push
leave
push
sub
pushf
cmps
mov
addr16
in
sbb
mov
mov
jno
sbb
sbb
cwde
adc
add
add
dec
xchg
xor
push
dec
xor
ret
stos
and
dec
xchg
jle
xor
cmp
xchg
cmps
and
jne
add
out
jnp
jb
sbb
jbe
sub
jne
call
xchg
retf
imul
and
hlt
mov
add
call
pop
inc
(bad)
retf
mov
mov
pop
jo
sbb
inc
fistp
test
sbb
push
jl
jp
std
push
mov
mov
cli
fistp
(bad)
cli
mov
mov
in
mov
xchg
(bad)
cmps
scas
xor
loop
call
into
jmp
mov
jne
outs
in
push
dec
and
xchg
dec
and
mov
cmp
shl
add
mov
jge
cs
cmp
(bad)
xchg
jp
addr16
rcl
pop
fidiv
push
cmp
aaa
test
adc
sbb
mov
lea
rol
dec
jmp
aaa
movs
push
test
sub
adc
jne
pop
mov
adc
je
iret
int
push
jecxz
outs
outs
push
cmps
or
scas
xor
int3
push
cmp
xor
add
aam
and
icebp
dec
in
out
jl
fisubr
dec
push
xchg
repnz
cli
ret
pushf
fwait
mov
mov
push
inc
cmps
inc
pop
fstp
les
ror
jg
dec
std
jmp
ins
push
lods
cmp
mov
adc
mov
sti
cmps
mov
push
cmp
dec
mov
les
ds
mov
bnd
jbe
jg
mov
mov
sbb
cli
push
jp
lock
xchg
aad
pop
pusha
das
jb
adc
ror
cmp
or
cmc
sub
arpl
sub
dec
stos
jno
(bad)
retf
push
div
ficom
mov
inc
div
jmp
dec
(bad)
pop
in
in
pop
mov
jge
jmp
and
lds
sub
ds
mov
in
loop
or
lahf
sar
sub
xchg
pop
adc
lock
or
and
jge
mov
xor
dec
adc
mov
out
test
jne
mov
pop
int3
cmps
sub
(bad)
jmp
add
ja
sar
inc
hlt
stc
(bad)
mov
mov
inc
sahf
aaa
imul
add
and
mov
test
fldcw
jmp
xchg
or
arpl
aad
(bad)
and
pushf
mov
jb
or
movs
pop
or
out
js
sub
mov
in
xor
stc
xor
sub
imul
or
mov
fs
mov
int3
outs
or
cmp
outs
jae
out
fs
movs
xor
movs
ja
jp
or
out
test
sub
and
ret
adc
aaa
imul
jle
(bad)
mov
mov
dec
or
pop
imul
mov
push
js
inc
jae
(bad)
cld
stos
cld
sbb
ins
int
dec
jle
enter
in
fs
cmp
pop
ds
dec
pop
call
out
cmp
aas
cmp
mov
shl
retf
(bad)
push
retf
jmp
popf
lods
jno
pop
ss
out
out
lods
inc
pop
je
or
cmp
int3
push
leave
stos
pop
xchg
rcr
cmp
xor
or
clc
scas
call
fwait
stos
mov
repnz
inc
fimul
or
call
das
pop
gs
or
push
aas
into
outs
mov
mov
push
dec
mov
bound
push
pop
adc
jge
sbb
cmovae
sub
enter
sub
cmps
(bad)
popf
lds
sar
fcomp
mov
xchg
imul
js
addr16
mov
xor
inc
stc
xchg
ja
ss
add
push
ror
or
test
icebp
jns
dec
dec
mov
int3
(bad)
out
(bad)
dec
fldenv
add
inc
scas
pop
jl
scas
int3
outs
dec
stos
cmp
test
mov
xor
xchg
in
cmp
fild
imul
mov
pop
jp
sti
iret
js
daa
xchg
out
mov
adc
fbstp
fisttp
jbe
mov
mov
in
(bad)
lods
ins
inc
(bad)
jmp
cmp
mov
rol
test
out
call
mov
push
clc
aad
and
inc
push
cmp
cdq
cmps
fs
aas
or
(bad)
stc
mov
imul
mov
sbb
xor
mov
push
xor
cwde
gs
mov
mov
cwde
adc
(bad)
push
jge
xchg
xchg
jge
add
into
mov
das
dec
xor
jae
xor
mov
jge
enter
jne
dec
xchg
clc
jnp
jnp
mov
ins
sti
xchg
pushf
(bad)
mov
cwde
xor
stos
add
inc
lock
rol
mov
cmp
jecxz
aam
sub
sti
out
pop
jp
jg
data16
jo
call
ret
jecxz
test
and
dec
push
dec
(bad)
xor
mov
jno
cmc
das
or
jb
cmps
xor
cwde
pop
mov
mov
dec
and
jns
stc
push
adc
outs
add
cwde
in
and
cmp
(bad)
repz
outs
cli
imul
pop
(bad)
mov
out
mov
pop
(bad)
in
clc
cdq
inc
push
inc
jb
and
cwde
into
add
shl
or
int3
pop
test
int
xchg
popa
daa
dec
sub
and
mov
mov
popf
mov
jmp
xchg
ja
popf
std
inc
imul
fld
xor
cli
push
call
gs
inc
gs
test
mov
jns
dec
mov
stc
pushf
cmps
jb
jle
mov
gs
std
cmp
mov
loope
movs
sbb
xchg
jae
jecxz
push
sbb
mov
outs
lahf
repz
out
jge
xchg
outs
jne
lock
add
fiadd
push
xchg
popa
hlt
cli
nop
mov
or
or
es
mov
pusha
mov
retf
les
ja
pop
jo
push
sub
pop
popf
xchg
cmps
js
sbb
or
sahf
in
mov
sbb
jecxz
loope
sub
mov
cmps
ins
pop
xchg
lods
mov
inc
push
rol
or
sbb
dec
sbb
mov
xor
repz
push
or
cwde
repnz
pop
push
cmp
xchg
inc
popf
(bad)
push
sbb
fxch
repz
inc
test
dec
and
cwde
retf
loop
xchg
pusha
aas
ficom
adc
or
jno
xchg
test
mov
mov
mov
pop
ret
sub
(bad)
xchg
imul
cld
cwde
xlat
ja
aam
int3
adc
lods
into
jp
push
mov
(bad)
call
scas
and
lds
test
dec
and
mov
ins
sub
jle
sbb
mov
call
mov
mov
es
pop
jmp
enter
xchg
jl
mov
(bad)
in
dec
out
push
enter
pop
sub
ja
in
call
data16
ins
(bad)
push
adc
sub
inc
cmp
and
je
mov
lds
jno
xor
push
pop
bound
mov
movs
mov
clc
dec
ret
(bad)
cmps
int
inc
test
fwait
mov
mov
lods
ror
popf
js
mov
lss
pop
add
js
add
es
push
movs
push
retf
inc
jne
push
mov
add
mov
sbb
jnp
mov
std
mov
bound
or
mov
mov
mov
rcr
mov
ja
sbb
mov
mov
stos
and
(bad)
cmc
dec
push
pop
or
push
push
(bad)
ja
mov
pop
pop
arpl
push
sar
mov
cmps
cs
xchg
mov
inc
pop
sub
bound
rcl
fcomp
pop
and
fistp
dec
aas
xor
push
retf
ss
mov
ror
and
fild
jmp
out
fdivr
movs
hlt
jp
mov
imul
ins
adc
fucom
push
out
fnstenv
cld
add
xor
push
inc
fmul
test
lea
std
ds
cmc
fisub
sub
fcomip
ret
ss
pop
fnstcw
cmp
sub
inc
pop
hlt
dec
icebp
dec
pop
sub
cwde
dec
mov
mov
inc
xlat
mov
mov
ret
inc
pop
cmc
in
scas
mov
xor
test
push
push
fimul
iret
mov
jo
test
jmp
popa
dec
mov
lods
xchg
call
pop
mov
xor
je
sub
push
fld
cmp
xchg
ins
loope
cmc
repz
lds
or
pop
test
and
jnp
jp
xchg
or
out
fs
xchg
call
inc
xchg
sbb
sbb
jne
xlat
dec
cld
clc
mov
fld
out
in
in
addr16
loopne
ja
xchg
cs
cmp
call
rol
add
inc
dec
repz
sbb
(bad)
pushf
sub
inc
jl
push
cmp
jecxz
add
dec
mov
repz
dec
or
es
cli
clc
mov
cmp
iret
ins
mov
push
scas
xor
and
fwait
inc
cmp
stos
rcr
fmul
sbb
ins
or
test
movs
cmp
pop
pop
gs
dec
hlt
ret
jl
mov
add
aad
push
push
push
shr
imul
aaa
add
ss
adc
fadd
jmp
mov
xchg
push
mov
push
and
cmovl
int
stos
mov
cli
xchg
mov
in
(bad)
ja
pop
inc
mov
push
fld
mov
mov
sahf
and
sub
(bad)
(bad)
call
add
das
jmp
push
das
cli
mov
jbe
aam
pop
(bad)
cmp
movs
dec
and
retf
sbb
add
inc
xchg
mov
cmc
inc
fcomp
inc
lahf
push
ja
xchg
xchg
cmp
mov
mov
fbld
test
mov
lahf
mov
das
cmp
pminsw
push
or
inc
int
fdivr
not
pop
mov
inc
stos
data16
rcl
(bad)
rol
(bad)
loop
push
cli
pop
stos
mov
(bad)
into
ins
push
leave
pop
in
and
inc
or
imul
or
gs
xchg
dec
fidivr
out
sar
retf
dec
add
jne
mov
pop
in
nop
pop
push
scas
addr16
inc
popa
cmp
xor
fstp
dec
das
sbb
nop
test
cli
sti
cmp
test
mov
mov
inc
out
loop
cwde
mov
pushf
cdq
(bad)
std
push
das
xor
arpl
cdq
xchg
jl
mov
cs
dec
loop
div
xchg
sar
(bad)
enter
xchg
adc
or
pop
popf
es
es
int3
and
mov
mov
jns
mov
shufps
sbb
fist
(bad)
cwde
pusha
sub
jns
xlat
cld
xchg
jmp
jecxz
in
loop
jb
sbb
fs
dec
int3
(bad)
sub
push
fdiv
stos
or
jl
cli
push
sub
stos
mov
adc
je
sbb
and
js
fmul
iret
add
mov
pop
push
in
mov
mov
lahf
shr
call
jbe
in
cld
addr16
loope
mov
imul
pop
pop
lahf
retf
inc
xor
jge
cmp
inc
repz
in
inc
sti
jne
loopne
jno
mov
mov
sub
outs
not
xor
fdiv
pop
push
xchg
fisttp
and
ror
stc
adc
ss
mov
xlat
aaa
or
outs
lahf
lock
push
js
loope
in
mov
sbb
push
vmwrite
shl
test
imul
inc
movs
mov
in
pop
push
push
xor
or
xchg
and
or
cli
cmp
push
test
adc
ret
or
cmc
sub
inc
call
mov
add
lahf
or
jmp
adc
adc
leave
test
test
pop
xchg
inc
jmp
ret
sbb
or
rol
mov
out
loope
or
aad
dec
or
test
loopne
(bad)
pushf
ss
je
cwde
jae
sub
lahf
int3
cdq
pop
daa
out
jbe
sub
sbb
push
ss
scas
ss
adc
dec
imul
idiv
retf
and
rcl
data16
ror
jmp
and
ret
pop
and
mov
or
and
inc
dec
mov
dec
mov
or
les
imul
idiv
mov
jb
jbe
es
mov
xchg
xor
ins
int3
cmps
es
es
popa
pop
or
jb
aaa
fisubr
mov
mov
inc
push
mov
mov
or
sub
frstor
(bad)
mov
ds
movs
nop
daa
sti
jl
ja
jp
cwde
les
xor
(bad)
xchg
inc
sub
xor
jl
mov
mov
mov
push
pop
nop
pop
mov
mov
jmp
rcr
and
or
add
out
popa
dec
jl
mov
(bad)
jge
in
xchg
icebp
xor
sub
enter
popa
in
jo
sti
hlt
adc
xchg
out
fild
pop
enter
fsub
xchg
mov
aas
or
inc
cvtdq2ps
cmp
dec
sbb
test
pop
fsubrp
fisttp
dec
push
xchg
clc
test
cli
pop
push
cmp
push
xlat
addr16
shr
cmp
cmp
shr
aas
cmp
test
add
cmp
sbb
frstor
inc
push
sub
push
xor
pop
adc
and
cli
or
mov
outs
shl
in
data16
mov
or
cmp
lods
jne
or
dec
inc
(bad)
pop
sub
stos
adc
test
xchg
out
jg
div
out
push
jg
sbb
fs
inc
inc
adc
or
movs
add
in
dec
cmp
cmps
aam
aas
mov
pop
in
jb
imul
iret
jae
fsubr
not
adc
in
sub
jns
mov
(bad)
mov
cmc
cmp
mov
lahf
test
cmp
data16
push
call
xchg
xchg
or
mov
mov
mov
add
adc
xor
fisttp
outs
das
ja
fwait
or
into
pop
mov
push
out
or
sub
or
mov
fs
fdivr
dec
add
(bad)
(bad)
jo
xchg
aaa
movs
push
sub
dec
push
dec
scas
test
jp
mov
jne
pop
mov
push
mov
dec
lock
imul
push
(bad)
sub
dec
jo
fcomp
xchg
pop
das
repnz
pop
pushf
cmp
sar
cmp
mov
inc
fwait
pusha
pop
inc
adc
inc
push
and
sub
mov
retf
jae
mov
mov
mov
push
daa
push
retf
test
aad
std
jns
dec
mov
stos
jmp
push
(bad)
cmps
clc
pop
psubsw
push
or
push
pop
test
stos
mov
mov
push
and
and
push
push
jae
repz
mov
icebp
sub
stos
shl
pop
mov
dec
mov
adc
adc
push
xor
xor
jnp
lock
arpl
sub
repz
call
sbb
test
or
loopne
cli
dec
into
cmp
push
xchg
jbe
lahf
cmp
xor
mov
in
and
sub
jnp
mov
std
ds
scas
add
std
ja
inc
adc
frstor
mov
mov
cli
xchg
inc
dec
cld
rcr
out
pop
mov
(bad)
ins
out
inc
out
lahf
jl
daa
mov
push
and
and
xchg
cmps
int3
bound
ret
add
and
push
mov
gs
scas
xor
mov
stc
xchg
cli
and
scas
dec
out
mov
repz
loope
mov
sti
in
xchg
jp
sahf
lahf
scas
jns
mov
mov
jg
les
cmc
out
aas
jbe
xlat
call
sub
sub
stos
pop
shr
das
xlat
retf
mov
jmp
mov
cs
loope
dec
ret
adc
movs
sahf
xchg
xchg
mov
xchg
xor
xor
mov
std
xor
fwait
or
jae
xor
loope
test
xor
mov
nop
jecxz
adc
jmp
jnp
clc
(bad)
imul
je
ret
(bad)
cmp
adc
jne
stos
fsub
into
leave
xchg
pop
sub
retf
xchg
ins
adc
rcr
int3
xchg
jo
push
(bad)
mov
repz
jg
call
dec
push
pop
cmp
pusha
test
int3
cpuid
mov
xchg
push
xor
dec
adc
(bad)
pop
jmp
cli
mov
mov
fcom
jmp
pop
jmp
xchg
dec
push
xchg
cmps
aaa
iret
pop
scas
mov
push
add
and
adc
xchg
push
sub
(bad)
jmp
pop
ins
push
sub
rol
cli
lock
es
mov
cld
popa
loope
(bad)
mov
pop
jns
cmps
cmps
and
pop
nop
mov
xchg
test
dec
mov
mov
sub
ja
fadd
iret
popa
ins
mov
icebp
inc
mov
sub
loope
fdivr
lods
outs
inc
repz
inc
xor
clc
push
cmc
jge
cmp
xchg
xchg
call
push
jge
mov
imul
adc
in
ret
hlt
fld
(bad)
imul
push
dec
outs
lahf
sahf
mov
out
call
jne
retf
enter
int3
stos
addr16
cmp
push
jg
stos
or
popf
repnz
jg
push
push
idiv
pushf
ins
sahf
cli
adc
(bad)
cs
jp
push
dec
adc
data16
daa
pop
rcl
sbb
dec
les
retf
xor
pushf
ins
jle
jne
and
mov
in
mov
dec
retf
jmp
sbb
cmp
daa
cmp
cmp
adc
idiv
bnd
jle
inc
xchg
pop
test
aaa
jnp
mov
cmp
pushf
bnd
push
cmp
aad
cmc
sub
fidiv
scas
ss
dec
fbld
clc
mov
sub
inc
(bad)
dec
out
aaa
mov
bound
jecxz
cmp
push
add
mov
add
in
dec
cs
lods
out
shl
stos
lods
dec
sub
jmp
cmp
movs
lock
adc
retf
(bad)
rcr
sub
mov
cmps
retf
cmps
stos
icebp
xchg
jg
pusha
test
mov
xchg
push
icebp
xchg
xchg
popa
push
jb
fwait
test
out
cld
sub
sub
pop
jno
aas
in
sbb
push
div
mov
add
xchg
pop
iret
pop
mov
out
push
(bad)
cmp
cs
test
retf
mov
push
mov
jecxz
addr16
push
jmp
mov
inc
xchg
bnd
gs
push
(bad)
fisubr
cmp
mov
outs
pop
adc
push
adc
(bad)
or
jmp
or
in
and
dec
inc
fisub
sub
xor
outs
scas
adc
das
xchg
pop
jae
fs
test
push
or
test
xchg
scas
sub
adc
add
das
jmp
sub
cmps
ret
inc
adc
int3
mov
das
jmp
fisttp
inc
test
push
rol
or
test
icebp
inc
add
and
xor
and
adc
shr
dec
xor
xchg
push
mov
or
or
xlat
shl
push
xor
dec
sub
fs
xchg
int
sub
xchg
xor
jae
mov
cmp
push
repnz
dec
sub
imul
xchg
in
rcl
sub
mov
fst
dec
lea
pop
mov
sub
mov
xchg
push
and
inc
ret
cmp
push
mov
mov
jno
mov
out
test
mov
aas
mov
mov
dec
inc
mov
xchg
xor
jo
aad
aaa
int3
loopne
in
mov
xor
push
pop
ds
cli
jnp
je
inc
push
push
test
ja
cmps
xchg
sar
cdq
push
push
add
jmp
mov
outs
in
out
sub
xchg
nop
repnz
scas
sahf
jle
jge
mov
xor
cmps
and
adc
push
push
xor
cmps
push
xor
outs
lods
(bad)
(bad)
mov
mov
xchg
test
pop
ret
outs
addr16
dec
into
xor
cmp
mov
mov
mov
mov
fdivr
inc
xchg
ss
mov
inc
mov
fpatan
sti
test
mov
xor
inc
pop
mov
xchg
cmp
adc
jns
mov
cmp
movs
into
add
bound
(bad)
into
in
sti
hlt
sub
mov
adc
outs
adc
xor
stc
sub
mov
dec
xchg
pop
fstp
imul
mul
in
call
bound
cwde
mov
int3
xchg
outs
mov
jno
cli
sub
leave
in
jge
push
sbb
cmp
scas
or
retf
adc
addr16
pop
fild
scas
jecxz
loope
int
mov
cmp
shl
adc
cmps
ins
ret
jge
xor
repnz
xchg
cmp
test
push
rcpps
cld
adc
and
jns
mov
fidiv
dec
int3
stos
mov
sub
mov
dec
dec
fidiv
sbb
ins
jb
push
pushf
cmp
inc
xchg
pop
in
pop
retf
and
ret
sbb
pop
scas
fisttp
xor
mov
repnz
push
pop
mov
mov
and
es
adc
stos
pop
sub
sub
fbstp
dec
xchg
pop
push
sub
pop
cmp
fist
and
loopne
cmp
dec
or
xchg
add
scas
jne
jp
push
mov
retf
stos
jl
mov
les
ret
lea
in
xor
add
sub
or
imul
or
and
adc
pop
int
lea
xchg
sub
aaa
pop
imul
dec
inc
mov
xchg
test
xor
addr16
clc
sahf
cmps
test
push
in
xor
out
cwde
sbb
or
xchg
stos
arpl
mov
mov
pop
imul
shl
rcl
pop
sub
fwait
leave
rol
jo
fmul
jge
loopne
cmp
dec
or
hlt
cmps
pop
in
cmc
das
cld
(bad)
aad
test
mov
fadd
jl
lods
add
add
ficomp
mov
mov
mov
xchg
leave
cs
in
in
sub
sbb
pop
sub
inc
pop
push
pop
daa
(bad)
retf
(bad)
mov
fwait
mov
push
jmp
jno
and
jno
jg
mov
add
mov
fwait
dec
mov
cmp
lds
cwd
adc
shl
push
or
rcr
nop
int
cwde
call
push
test
sbb
pop
out
stc
popf
sbb
mov
xor
add
push
aam
add
fs
xor
test
(bad)
in
mov
test
aaa
ss
dec
call
and
test
mov
mov
imul
dec
mov
shr
fisubr
cli
xor
pop
(bad)
out
jl
and
cwde
imul
pop
movs
bound
repz
jns
push
fsubr
bound
push
inc
mov
fucomip
inc
xchg
jo
fisttp
pop
mov
out
jnp
addr16
popa
mov
jmp
in
pop
fldenv
or
sbb
in
in
repz
pop
mov
fnsave
sub
int3
sub
jbe
inc
mov
ins
push
pop
jnp
sti
out
jb
sbb
leave
shl
push
stc
xchg
pop
mov
jb
xor
mov
mov
cli
add
mov
aas
inc
jg
iret
ds
psadbw
(bad)
jo
sar
sub
or
sub
add
cmp
ins
dec
mov
pop
ret
cmp
lahf
dec
pop
cmp
jl
jmp
(bad)
pop
(bad)
push
cmp
cmps
lods
call
mov
mov
jbe
cmps
jmp
xchg
add
mov
add
and
push
fdivr
iret
mov
cmp
pop
jae
cmp
sbb
push
sbb
adc
fldcw
xor
mov
xchg
pop
add
daa
xor
(bad)
lahf
push
sub
je
imul
aam
dec
push
xchg
mov
scas
xlat
mov
xchg
add
rcl
add
cli
mov
rcr
xchg
pop
(bad)
cmp
dec
mov
fdivp
dec
inc
add
pop
std
push
inc
imul
lods
pop
std
cmp
pop
outs
and
xchg
xchg
sub
xchg
jbe
jo
mov
cmc
movs
lods
das
cmp
test
call
rcr
dec
retf
aam
jg
xor
loopne
gs
shr
sti
xchg
adc
sub
fcom
pop
ret
pop
retf
movs
mov
ds
push
or
outs
add
lods
inc
sub
push
fmul
fld
daa
iret
rcr
and
push
push
dec
cwde
daa
loopne
out
push
test
(bad)
sbb
nop
arpl
cld
aas
and
adc
dec
xor
ror
call
pop
fstp
cmps
sub
and
mov
into
xor
pop
push
enter
sbb
aaa
cmp
cmps
dec
mov
cmp
xlat
enter
adc
adc
jmp
adc
cmp
arpl
aad
xchg
mov
pushf
pop
gs
mov
dec
and
jbe
add
leave
cmp
test
imul
popf
imul
mov
fadd
ret
sbb
outs
mov
pop
enter
inc
cdq
pop
es
lahf
add
enter
mov
mov
call
mov
mov
or
(bad)
lods
rcl
out
jmp
psubd
out
arpl
fdiv
movs
or
mov
sbb
jl
cwde
push
xchg
dec
dec
or
ret
stos
outs
dec
pop
fsubr
dec
mov
mov
jmp
push
push
add
adc
frstor
adc
add
jp
push
dec
retf
retf
xor
inc
pop
cmp
pushf
or
adc
(bad)
xor
ror
lock
(bad)
sub
shl
xchg
pop
movs
or
fs
test
adc
add
or
sbb
sub
and
cs
je
jns
or
xchg
out
sar
lds
xchg
test
sbb
inc
or
jbe
mov
mov
inc
xor
fcomi
(bad)
mov
push
test
fdiv
hlt
clc
cmps
mov
push
mov
mov
bound
inc
or
sub
jp
(bad)
jmp
cli
xor
or
cmp
dec
into
cwde
mov
sar
mov
stos
mov
lock
outs
jne
sbb
cs
mov
loope
nop
rol
sbb
add
sar
or
add
rol
adc
or
pusha
ror
bound
jo
mov
cmp
jno
adc
xchg
xchg
(bad)
into
adc
push
cmp
jnp
icebp
popf
sub
add
stos
pop
in
add
mov
mov
push
xchg
imul
dec
out
cli
xlat
test
ins
fild
cmc
mov
aam
mov
mov
jge
jg
sub
int
and
ins
pop
(bad)
dec
mov
or
jno
inc
in
and
and
xor
push
sbb
ins
mov
gs
clc
xchg
lds
cmc
cdq
mov
cmps
xchg
adc
loopne
in
test
xor
dec
add
mov
cmps
pop
mov
inc
xchg
cmp
cmps
pop
mov
repz
je
aad
push
retf
inc
(bad)
cld
out
adc
sub
dec
sbb
mov
int3
add
inc
add
mov
pop
(bad)
or
adc
sbb
sub
das
inc
mov
mov
and
lds
shl
add
rcl
hlt
imul
sub
mov
push
xor
xor
mov
sahf
add
adc
and
inc
dec
ret
sub
push
add
adc
adc
and
adc
test
test
sbb
xor
and
and
push
mov
add
dec
inc
sub
es
xchg
push
adc
nop
dec
add
dec
inc
and
or
inc
sahf
push
dec
and
call
mov
shl
in
pop
sub
sub
int3
in
leave
jl
and
adc
add
or
pusha
dec
adc
sar
ror
rcl
shl
shl
mov
or
nop
pusha
nop
or
mov
mov
pop
adc
push
add
xchg
mul
dec
xchg
mov
mov
push
mov
retf
inc
and
push
inc
and
push
nop
push
and
ds
sbb
mov
add
leave
sub
and
and
jnp
mov
cmp
cli
and
scas
dec
sub
js
jb
js
inc
out
gs
stos
pop
ins
or
adc
lods
cld
xor
dec
jae
mov
dec
lods
aaa
aas
dec
ins
(bad)
mov
mov
push
fsubr
int3
dec
adc
xchg
out
inc
pop
mov
cmp
movs
pop
mov
cmps
jle
daa
and
data16
retf
stc
adc
clc
xchg
ficom
add
lods
inc
arpl
push
inc
repz
or
repnz
or
aam
repz
sub
add
mov
and
inc
or
adc
in
jb
inc
dec
or
jo
push
retf
or
pop
out
in
repnz
nop
sahf
xor
jne
cmc
inc
aad
test
or
cli
add
retf
ins
dec
stos
je
or
int
test
retf
outs
xor
shl
sbb
pop
addr16
dec
(bad)
mov
xlat
sub
(bad)
push
das
stos
jmp
sti
xchg
jge
ins
lahf
dec
call
jnp
(bad)
(bad)
fidiv
ficomp
pop
pop
aam
mov
mov
out
cld
jge
jbe
(bad)
(bad)
pushf
or
retf
dec
aad
sbb
out
push
mov
lea
aad
pop
outs
cwde
jmp
imul
push
aas
ja
sahf
inc
jle
cmp
ins
je
cmp
clc
lods
adc
repnz
push
adc
ds
jae
fcompp
retf
dec
dec
xor
jge
mov
out
adc
sbb
aas
in
sbb
sbb
ficom
jne
push
aas
push
mov
test
jns
(bad)
sbb
lods
ins
movs
push
les
xor
shr
xchg
test
and
add
aad
sar
dec
pop
aas
pop
(bad)
(bad)
loop
(bad)
and
xchg
test
jnp
rcl
enter
inc
push
mov
psubsb
ins
adc
push
outs
fucompp
paddb
xchg
xor
retf
pop
xor
dec
je
retf
loope
dec
loop
inc
pop
or
sbb
stc
jmp
dec
ror
push
or
mov
and
mov
sbb
ins
out
pop
mov
pop
ins
movs
cdq
pop
test
inc
pop
adc
lahf
sbb
shr
scas
shl
xchg
pop
jno
jno
mov
and
or
add
push
scas
imul
sar
inc
nop
scas
pop
mov
es
mov
add
mov
cmp
push
mov
cmp
test
aas
data16
into
aam
clc
out
imul
shl
movs
popf
sar
(bad)
xchg
add
ret
mov
nop
add
int
pop
cmp
sub
call
fsubr
add
loop
icebp
push
inc
cmc
out
nop
ins
jg
test
lds
aaa
mov
cmp
nop
dec
icebp
sub
and
sub
cmc
xlat
or
or
mov
pop
or
mov
cmp
pop
mov
push
psubusb
push
lods
in
or
in
xor
shl
pusha
sahf
add
pushf
clc
dec
call
jge
jl
lock
add
fwait
mov
and
jne
pop
movs
imul
repz
cmp
jmp
pop
pushf
sub
out
jecxz
push
shl
fcomp
add
xchg
adc
lock
xor
daa
jge
add
xor
push
inc
mov
outs
add
scas
cld
std
dec
out
mov
fld
popf
inc
aaa
dec
or
sbb
cmp
cmp
push
jmp
lea
cmc
dec
jge
dec
ficomp
cmps
mov
inc
and
mov
mov
xchg
push
pop
int
mov
pop
xor
xor
dec
outs
mov
push
push
stos
inc
stos
xchg
xor
push
jp
mov
jecxz
push
hlt
push
pop
mov
jo
scas
lods
xchg
jmp
inc
data16
xchg
mov
and
push
std
(bad)
in
pop
pop
adc
into
xchg
mov
fucom
mov
aad
js
lods
sub
das
mov
into
pop
or
mov
dec
aaa
imul
mov
int
lahf
cmp
mov
xchg
pop
out
rcl
pop
mov
setno
cs
adc
rol
inc
std
(bad)
call
add
jnp
or
repnz
mov
push
jle
inc
mov
jmp
jmp
or
sbb
xchg
xor
ins
mov
xlat
dec
cmp
sbb
lock
cmc
add
movs
ds
lods
lods
push
sbb
popf
out
aad
jp
mov
and
xor
jl
xchg
xlat
popa
int3
push
stc
lea
xor
mov
in
fsub
cmc
(bad)
mov
arpl
vxorps
cld
les
retf
jmp
mov
sbb
mov
leave
dec
xchg
adc
ret
cdq
pop
cld
or
mov
hlt
stc
and
jb
pop
dec
dec
neg
cmp
jecxz
mov
mov
test
jbe
push
imul
shl
mov
es
clc
sub
mov
ficom
fidiv
imul
jne
in
out
lods
call
aas
xlat
jmp
dec
jbe
icebp
dec
scas
sub
add
call
cmp
setns
dec
fdivrp
sbb
jno
mov
in
cmc
add
cmp
dec
or
rcr
jnp
daa
xchg
shl
arpl
cmp
jb
out
aam
fs
mov
fpatan
jmp
dec
and
sub
and
data16
int
(bad)
xlat
push
jp
push
inc
ss
or
rol
pop
test
inc
or
daa
popf
push
and
outs
pop
add
xor
dec
sub
or
and
je
inc
pop
fs
mov
cwde
stos
data16
adc
daa
xor
leave
test
mov
xchg
sub
sub
mov
rcr
mov
pop
fwait
inc
or
mov
daa
mov
mov
ins
push
pusha
mov
cld
test
pop
idiv
dec
inc
repnz
int3
ins
mov
or
push
imul
pop
and
movs
push
mov
cmp
sbb
frstor
(bad)
or
scas
outs
and
xchg
push
jns
dec
scas
and
mov
in
mov
stos
cmp
rcl
push
stos
ficom
mov
push
fwait
mov
je
inc
xor
add
cmp
jge
dec
gs
pusha
mov
neg
fisttp
ret
mov
adc
push
retf
pop
adc
dec
es
popf
mov
mov
mov
jmp
adc
in
inc
addr16
push
sbb
sub
cmps
in
es
js
fistp
out
sbb
pop
clc
je
mov
pop
cmps
jecxz
in
bound
jne
ss
cmp
fimul
adc
addr16
(bad)
pop
cmp
in
ins
sub
leave
aad
cmp
in
push
xchg
jmp
xchg
and
adc
iret
cmps
es
aas
jne
jnp
pop
cmp
es
and
cdq
adc
jp
leave
and
cs
and
mov
sbb
test
call
in
sbb
xchg
ficom
es
jo
jns
ss
leave
data16
mov
sahf
xor
ds
mov
cs
gs
dec
leave
jno
fsubr
xor
jp
and
int
cmc
test
sub
or
lock
adc
stos
into
dec
ret
pop
icebp
cmps
xchg
jmp
xchg
and
jmp
pop
int
lods
std
inc
push
scas
mov
mov
jmp
or
div
bound
xchg
sbb
call
leave
ret
cmp
jns
mov
pop
push
movs
push
pop
push
pop
push
inc
lds
xchg
sub
fldenv
lods
ins
int
xor
adc
ficomp
adc
shl
xor
push
hlt
inc
rep
je
push
imul
push
retf
addr16
rcr
ror
arpl
scas
mov
add
not
test
and
fsub
pushf
mov
mov
inc
xor
fwait
lods
lahf
es
cmp
lea
mov
and
call
ja
data16
das
movs
jmp
mov
call
mov
adc
add
(bad)
jns
push
xchg
fsub
jae
jbe
push
mov
jnp
cmp
add
sbb
jb
lahf
sub
inc
fcmovnu
data16
lds
xchg
mov
pop
retf
call
into
sbb
outs
dec
sbb
add
inc
lods
mov
ins
fcomp
mov
xchg
jge
cli
dec
fnstenv
xlat
clc
out
mov
sub
(bad)
in
rcl
add
cld
sub
cmps
adc
fs
push
adc
adc
push
xchg
pop
push
sbb
sbb
mov
sub
mov
push
dec
lods
enter
call
mov
xor
and
and
shr
arpl
push
dec
fisttp
rcr
dec
push
jmp
pop
std
jno
aaa
jns
jmp
sub
popf
add
add
in
pop
fdivr
stos
outs
mov
sub
cwde
cdq
(bad)
shr
sub
inc
cdq
retf
adc
xchg
repz
(bad)
fcomp
hlt
xchg
mov
jb
clc
ds
scas
stc
cwde
push
out
scas
mov
inc
sbb
xlat
stos
int3
pop
ds
push
adc
mov
pusha
jmp
adc
aas
xor
(bad)
cli
sbb
xchg
add
jmp
ss
adc
in
inc
dec
add
fmul
stos
mov
cmp
ror
enter
ret
xchg
sub
sub
add
inc
sar
cwde
out
add
pop
xchg
jae
leave
jle
sbb
(bad)
mov
mov
icebp
xchg
dec
pop
add
ds
and
imul
imul
or
jo
mov
sbb
dec
dec
push
jnp
jg
xchg
arpl
mov
lods
or
jecxz
push
adc
test
outs
dec
push
lods
pop
pop
add
cmp
jp
mov
push
mov
dec
loopne
aaa
int3
popf
test
int
xchg
sbb
inc
pop
add
sbb
shl
push
fldcw
in
jp
sahf
or
add
pop
dec
fisttp
xchg
out
inc
xchg
sub
(bad)
xchg
inc
push
clc
pop
ror
inc
fs
xor
mov
int3
adc
iret
ds
leave
add
jle
bound
cmc
cmps
jns
cmp
mov
xchg
adc
movs
inc
sub
push
dec
mov
xchg
adc
movs
inc
sub
push
dec
mov
xchg
adc
movs
inc
sub
push
dec
mov
xchg
adc
movs
inc
sub
push
dec
mov
xchg
adc
movs
inc
sub
push
dec
mov
xchg
adc
movs
inc
sub
push
dec
mov
xchg
adc
movs
inc
sub
push
dec
mov
xchg
adc
movs
inc
sub
push
dec
mov
xchg
adc
movs
inc
sub
push
dec
mov
xchg
adc
movs
inc
sub
push
dec
mov
xchg
adc
mov
mov
test
movs
int3
cs
mov
std
mov
xor
fadd
mov
imul
dec
xchg
cwde
popf
gs
xor
dec
push
mov
clc
cmp
pop
mov
retf
adc
sbb
stos
xchg
pop
(bad)
sbb
mov
jnp
mov
jge
xchg
rcr
jle
jb
or
jg
ret
dec
cmps
mov
fst
cmp
(bad)
mov
fidivr
pop
scas
or
std
xchg
sbb
inc
cmp
pop
aam
or
lahf
jle
xchg
push
call
push
in
mov
pop
xor
ins
cmp
addr16
nop
fsubr
cmp
int3
sti
into
fdivr
or
imul
cs
cmp
cwde
fisttp
mov
retf
jge
push
inc
xchg
adc
addr16
xchg
gs
gs
clc
into
mov
ficomp
mov
add
mov
pop
xchg
rcl
pop
into
pushf
jmp
xchg
jl
aas
or
out
dec
jg
add
adc
and
mov
ds
sbb
pop
adc
daa
ins
imul
mov
(bad)
out
rcr
stc
dec
ret
cmps
push
cmp
mov
mov
lahf
mov
cmp
out
push
cmp
mov
pop
jmp
pusha
gs
jle
jmp
clc
ja
dec
mov
pop
loope
jmp
popa
cwde
out
push
fsin
aad
jle
xchg
inc
push
(bad)
cmp
les
(bad)
mov
scas
test
inc
aaa
jae
dec
outs
js
xor
out
pop
dec
dec
or
in
jecxz
jnp
(bad)
or
sbb
adc
dec
jg
call
sub
out
not
push
cdq
and
push
es
dec
sbb
pop
popf
xchg
cmp
es
pop
outs
setns
jl
gs
dec
icebp
sub
cmp
sahf
retf
sub
les
mov
mov
mov
xchg
pop
shl
call
xor
ins
mov
and
cdq
xchg
out
inc
into
into
js
xchg
neg
arpl
add
ror
mov
test
ins
or
ret
repz
mov
aam
mov
or
(bad)
in
loopne
fimul
xchg
(bad)
xor
jl
xor
inc
jmp
scas
mov
mov
cli
call
inc
and
out
(bad)
ja
dec
mov
mov
popf
push
cmps
test
jno
stos
nop
xchg
outs
cmc
fcmove
movs
mov
(bad)
movs
mov
inc
out
jmp
and
scas
not
rcr
sub
lea
inc
mov
mov
int3
mov
ins
jbe
cmp
push
outs
mov
mov
(bad)
(bad)
mov
dec
arpl
lods
in
or
pushf
jno
push
and
mov
js
mov
(bad)
mov
cmps
pop
jbe
mov
xlat
int3
push
xor
test
std
ins
adc
push
cmps
cdq
mov
jae
stos
dec
push
dec
inc
scas
in
jle
sahf
mov
retf
inc
call
icebp
icebp
sub
mov
cmp
mov
dec
(bad)
mov
aam
(bad)
sbb
popf
popf
(bad)
mov
lahf
adc
mov
jns
lods
stc
jae
cmp
in
shl
and
cli
in
movs
sub
pop
scas
pop
or
push
inc
je
cmp
jecxz
icebp
cmp
pop
fidivr
imul
xchg
inc
mov
xchg
loopne
imul
mov
lods
inc
gs
sahf
xchg
movs
repz
mov
hlt
call
sbb
js
mov
mov
mov
pop
out
ror
jne
enter
outs
xor
cmp
fs
cmp
mov
jo
out
je
mov
adc
cmp
ret
push
xchg
aaa
inc
loop
adc
scas
outs
dec
jmp
mov
ins
rol
adc
xor
fs
mov
mov
push
sahf
xchg
(bad)
push
rol
add
cmp
fdivr
xchg
jb
ficomp
add
ret
sub
dec
add
or
add
mov
xchg
add
mul
mov
fsubr
aaa
sbb
dec
cdq
scas
pop
sub
jp
add
jns
pop
mov
pushf
dec
jb
outs
jae
rcl
jle
pop
loop
adc
movs
push
jb
gs
sbb
fild
and
mov
cdq
pushf
add
sub
mov
cs
cdq
mov
loope
push
rcr
lods
xor
lock
shl
out
fmul
or
inc
les
bound
xchg
push
scas
jl
jmp
daa
cmp
mov
mov
cmp
je
lods
xor
jb
mov
test
(bad)
aam
retf
ins
cmp
mov
cmps
dec
ins
sbb
push
fdivr
mov
cmps
shl
push
xor
adc
pop
jmp
push
out
sub
sub
scas
mov
jo
cmps
fcmovnu
inc
or
push
jle
xor
xor
mov
and
outs
das
mov
push
dec
test
(bad)
call
out
out
out
out
mov
fstp
jo
sub
sub
not
mov
iret
scas
cmp
pop
retf
aaa
xlat
xchg
inc
cmc
mov
sbb
rcr
in
call
aas
lods
std
ret
sbb
pop
mov
jp
test
retf
adc
jo
sbb
pop
xchg
xor
lea
iret
icebp
popa
retf
sar
cs
push
mov
jae
cmp
push
es
aam
adc
add
stos
sbb
pop
cdq
sub
cmp
test
xor
sub
mov
(bad)
imul
mov
loopne
ret
pop
imul
(bad)
mov
(bad)
das
addr16
scas
mov
(bad)
mov
bound
ins
cmc
je
add
push
das
push
rcr
outs
out
xchg
add
popa
sbb
leave
lods
fistp
inc
je
out
jle
or
loope
mov
aad
adc
rol
push
push
sahf
sbb
repnz
or
data16
popf
nop
mov
ror
loope
jmp
cli
fs
(bad)
jae
hlt
dec
jge
or
xchg
mov
and
cwde
or
or
push
and
std
les
ins
mov
push
bound
(bad)
or
mov
mov
xchg
div
jno
cmps
jge
cmc
ret
or
or
adc
enter
cs
sub
test
push
sub
(bad)
dec
pushf
add
push
adc
test
xchg
es
ss
mov
add
mov
cmp
mov
out
dec
inc
rol
mov
sbb
lods
(bad)
cdq
stos
cmp
adc
xor
add
and
daa
push
sti
inc
mov
loopne
cdq
js
inc
cmp
dec
add
inc
loope
add
loope
stos
mov
adc
lods
mov
stc
push
jl
out
and
ins
dec
stos
mov
ds
icebp
movs
lock
dec
mov
xchg
sbb
repz
(bad)
aad
gs
adc
ja
push
adc
ins
cmp
xchg
dec
pop
ins
push
loop
mov
movs
mov
retf
mov
xor
cwde
pop
add
mov
pop
fwait
(bad)
xchg
shl
sbb
nop
loop
call
and
add
int3
mov
xchg
int3
fidiv
in
jmp
dec
cmp
ss
test
sub
hlt
test
pop
xor
dec
(bad)
iret
and
adc
sbb
mov
inc
mov
addr16
loop
ret
imul
(bad)
xchg
test
sbb
mov
adc
or
dec
cmp
dec
and
js
jmp
aad
enter
loope
cmp
imul
mov
enter
sub
mov
outs
jae
das
out
jmp
in
lahf
(bad)
shr
int3
outs
imul
adc
push
(bad)
mov
xchg
xchg
dec
aad
jmp
xchg
jl
mov
mov
outs
cmps
sahf
adc
aas
call
jbe
push
popa
je
pushf
pop
mov
and
mov
sub
loope
(bad)
fcom
cdq
xchg
jg
jnp
xchg
call
dec
aaa
out
sar
std
mov
add
lods
retf
mov
mov
aas
int
cmp
cld
cwde
or
xchg
out
fsubrp
push
or
adc
inc
jle
dec
push
cmps
jge
popa
mov
sub
mov
jae
and
(bad)
stos
sub
icebp
mov
xchg
mov
out
add
retf
cmps
ins
xchg
sub
jbe
adc
jo
inc
fadd
xchg
add
and
adc
or
mov
and
cmp
pop
inc
fidiv
aam
mov
push
xor
pushf
repz
push
test
loope
and
fucomi
mov
lea
push
mov
mov
jbe
(bad)
push
fisttp
jp
adc
mov
mov
xlat
xor
into
or
in
sbb
aas
or
jb
fcmove
mov
dec
(bad)
or
jae
dec
jmp
aaa
les
or
lods
loope
retf
cmps
inc
aad
cwde
inc
add
pop
test
mov
inc
ss
push
stos
vpmadcswd
aas
adc
mov
mov
loope
int
mov
adc
mov
aad
or
jp
xchg
fwait
xchg
add
xchg
mov
and
fstp
add
out
xlat
cdq
inc
mov
and
inc
cmp
test
aad
mov
cmp
pushf
cmc
aam
xor
pop
fidiv
inc
test
xor
call
movs
adc
push
pop
lods
cmp
adc
aaa
and
push
jmp
loop
cs
test
add
and
mov
jno
fisttp
lahf
xchg
mov
pop
add
ss
inc
push
push
fsubr
jb
sti
lds
call
fs
add
aam
call
pop
jbe
jmp
test
ja
ins
mov
jo
imul
lock
lock
(bad)
lahf
aad
retf
mov
rcl
out
cmp
out
repnz
and
jp
pop
mov
loope
inc
push
mov
sub
sbb
add
(bad)
xor
add
push
push
adc
pop
jnp
adc
xor
and
repz
xchg
inc
pop
inc
mov
dec
push
sub
mov
lock
out
and
outs
jp
repnz
inc
add
scas
icebp
or
jae
mov
pusha
sbb
sti
mov
mov
inc
ins
das
xor
xchg
stos
movs
arpl
jl
dec
mov
bnd
movs
movs
and
mov
call
xchg
jge
fild
adc
popa
xor
in
sbb
or
test
ins
jge
push
cmp
lods
fstp
ins
ds
leave
mov
xchg
repnz
sahf
jns
call
mov
js
lahf
sub
scas
ins
mov
cs
cli
rep
dec
sbb
pop
jmp
mov
rcr
jnp
not
scas
dec
out
mov
pop
loope
nop
out
loop
in
dec
clc
pop
retf
call
in
loope
push
xchg
adc
jge
cmp
xor
xchg
inc
and
cmp
outs
or
jo
ja
mov
aad
pop
mov
aad
adc
mov
pop
cmp
lock
and
and
xchg
rcr
push
or
in
cmp
and
mov
or
shl
xor
test
in
iret
mov
pusha
(bad)
imul
sbb
pop
jno
les
popf
or
sar
xlat
dec
mov
mov
adc
mov
fcomip
std
sub
mov
or
dec
inc
inc
add
mov
adc
mov
and
adc
cmp
outs
push
jecxz
sbb
pop
cld
loope
aas
sub
xchg
xor
cli
jle
push
es
cmp
jp
cmps
dec
scas
jg
push
mov
pop
pop
outs
ja
mov
cmp
mov
cmp
xchg
rcl
cmp
repz
cmps
xor
cs
lock
mov
or
xchg
xchg
push
out
dec
cmps
call
leave
and
jmp
hlt
in
imul
test
jns
jecxz
pushf
cmc
push
loope
repnz
cwde
jns
es
ret
movs
jmp
pop
call
outs
ret
int
imul
pop
loop
sti
add
and
add
and
movs
mov
iret
fst
call
adc
lods
imul
(bad)
xchg
mov
push
movs
sti
arpl
or
pusha
or
cmp
inc
fldl2t
es
and
mov
xor
daa
ja
movs
jbe
push
jmp
aad
test
ficomp
jae
xlat
(bad)
test
fisub
cmps
aas
js
jle
inc
jge
push
bound
mov
outs
fsubr
push
xchg
in
loope
jne
inc
loope
stc
sahf
xchg
mov
xor
scas
or
jge
dec
int3
lock
iret
push
pop
cmp
sbb
test
mov
call
push
pop
sti
mov
and
pmaxsw
gs
int
popf
retf
xlat
(bad)
dec
xor
pop
outs
addr16
xlat
je
lock
aad
cmc
dec
repz
call
in
in
subps
xor
mov
lods
les
sub
xchg
mov
sbb
loope
or
inc
mov
pop
xchg
(bad)
(bad)
or
sub
push
ins
or
or
dec
(bad)
cmps
out
push
pop
push
cmp
addr16
push
cmp
outs
mov
sti
nop
movs
scas
xor
daa
jge
pop
pop
nop
js
jle
icebp
sbb
repz
and
push
and
jno
stos
or
lods
rcr
dec
aas
jge
daa
pusha
lods
or
daa
pop
inc
cmp
mov
cdq
(bad)
mov
or
ja
sbb
in
add
xchg
imul
pushf
or
mov
leave
push
(bad)
mov
jl
retf
int
pop
fisttp
pop
cmps
clc
sbb
cs
dec
stc
js
xlat
sub
push
aam
xor
dec
jg
sub
fnstenv
std
dec
mov
xor
mov
dec
imul
leave
and
mov
test
scas
fcom
(bad)
dec
mov
shl
clc
mov
arpl
fsub
sti
sub
or
xor
in
mov
pusha
lods
dec
xor
fdiv
fstp
ret
dec
dec
lods
sbb
mov
sub
imul
scas
sub
xchg
or
fdiv
mov
daa
out
ficomp
and
pop
pop
and
scas
out
or
mov
adc
pop
sahf
cmp
and
jbe
(bad)
or
(bad)
ret
sub
rol
jae
std
aad
push
outs
and
fs
cmc
mul
push
rcl
scas
cdq
add
add
(bad)
movs
not
cmp
inc
and
(bad)
mov
(bad)
mov
je
es
aam
fsubrp
xchg
dec
inc
mov
loope
test
xor
xchg
rol
test
jns
jl
mov
dec
adc
test
daa
xchg
inc
sbb
add
les
je
cmp
and
rcr
push
das
in
adc
retf
and
add
inc
inc
jmp
mov
int
ss
dec
test
jecxz
lea
adc
jno
in
jmp
cld
fstp
(bad)
xlat
sar
test
and
outs
mov
and
je
in
or
mov
loop
in
mov
dec
inc
dec
retf
into
pop
mov
ja
gs
fnsave
cmps
jns
gs
xchg
lea
inc
call
cmp
jmp
aaa
dec
aaa
fdiv
push
inc
add
cmps
imul
dec
loope
push
jl
adc
mov
(bad)
mov
mov
pop
imul
push
mov
mov
jo
xor
push
sbb
cs
(bad)
mov
shl
pop
lock
clc
aaa
(bad)
sar
nop
or
mov
xchg
in
inc
xor
scas
lea
mov
mov
aas
aaa
cmc
ss
or
(bad)
xchg
ja
fdivrp
fstp
sbb
(bad)
push
shr
(bad)
or
ret
dec
push
pop
out
mov
push
sub
test
xlat
jno
aad
xchg
lahf
(bad)
cld
(bad)
cs
xor
movs
xchg
sahf
mov
cld
mov
test
mov
cmp
aam
and
xor
movs
jg
out
xlat
loop
lods
test
mov
or
sub
inc
xor
scas
(bad)
jmp
ins
dec
dec
mov
in
dec
jle
ins
adc
pop
mov
pop
fcom
sbb
mov
push
jmp
dec
sub
sbb
inc
mov
pop
or
shl
std
xor
mov
jns
lock
rcl
adc
pop
mov
xor
jmp
fs
cwde
rcr
scas
fisub
je
daa
outs
and
imul
ins
sahf
cmp
push
dec
mov
or
sbb
mov
sbb
mov
cs
or
fild
xor
xchg
mov
imul
jle
cli
lahf
iret
inc
and
ss
pop
fiadd
bound
pop
fld
sub
mov
inc
xlat
pushfw
cmp
cmps
jp
das
mov
aas
sub
dec
shl
xchg
ins
and
mov
xlat
and
push
add
mov
pop
push
push
inc
outs
(bad)
pop
inc
dec
sub
jno
mov
in
cdq
sub
bound
mov
imul
retf
inc
inc
and
jle
scas
cs
cmp
mov
mov
sbb
call
outs
cmps
lods
jecxz
iret
loope
xor
icebp
ja
cli
push
cmc
mov
mov
add
sbb
cmp
fwait
sbb
call
mov
and
cmc
cmc
push
push
mov
fild
call
jo
push
(bad)
loopne
add
adc
xchg
cmps
bound
inc
pusha
repz
cs
stos
xchg
jecxz
xor
ss
sub
rol
push
cmps
xchg
jmp
sbb
gs
pop
dec
cmp
add
bound
neg
(bad)
add
cmp
minps
jge
dec
add
or
fisubr
daa
ins
pushf
shr
fcomp
and
int
(bad)
std
call
int
mov
xlat
fsub
mov
or
sub
or
cmc
push
mov
call
(bad)
cs
ins
sbb
(bad)
dec
push
stc
cli
jecxz
and
mov
sub
cmp
xor
movs
add
sbb
and
xchg
jmp
stc
push
cmc
pop
rcl
sbb
rcr
mov
dec
(bad)
(bad)
sbb
sbb
test
add
icebp
xchg
sub
inc
daa
mov
push
mov
outs
sti
xor
jb
fsubr
and
add
call
and
add
jge
inc
and
clc
cmp
std
popf
das
pop
sub
std
inc
neg
xchg
cmps
div
adc
jbe
push
hlt
es
inc
adc
xchg
stos
cmps
inc
sub
xchg
jno
jecxz
xchg
mov
retf
jne
out
xlat
xor
iret
inc
jbe
mul
int3
iret
shl
mov
pop
mov
imul
add
clc
and
rep
clc
test
pop
jg
rcr
xchg
imul
lods
xor
inc
add
ror
retf
push
mov
aam
mov
outs
xchg
cmp
jmp
jmp
aam
test
repz
cmp
loop
es
cwde
xor
jmp
pop
fdivr
data16
mov
xchg
inc
shl
pop
pop
(bad)
sub
(bad)
jo
ret
(bad)
ds
les
dec
jmp
cli
mov
imul
or
pop
xchg
and
outs
xor
sbb
fild
mov
rcl
mov
sbb
jl
add
sbb
stc
sbb
(bad)
pop
ja
repnz
punpckhbw
sbb
cmp
gs
scas
mov
pop
dec
xlat
push
pop
cmp
sbb
pop
push
ins
lock
inc
pop
ins
cmp
inc
and
jmp
retf
into
mov
sbb
jno
inc
mov
push
fisttp
jb
fist
or
mov
and
stos
in
ins
outs
iret
mov
popf
mov
cmps
sbb
(bad)
call
xchg
mov
add
ds
cmp
fiadd
mov
add
fnsave
or
mov
xchg
sbb
pop
dec
out
arpl
mov
sub
sub
sbb
call
dec
adc
mov
pusha
xchg
lea
push
es
pop
sub
sar
mov
ja
adc
or
dec
pop
test
mov
adc
out
mov
ins
jg
mov
add
push
mov
aas
mov
mov
cmps
cmp
xor
mov
adc
hlt
dec
int
je
mov
stc
(bad)
adc
test
dec
lahf
mov
mov
pop
mov
mov
in
not
mov
pop
inc
cmp
cmp
pop
mov
aaa
in
and
xor
das
cld
mov
sub
xchg
jl
inc
fcomip
rcr
ret
push
lock
xlat
daa
xchg
inc
call
mov
mov
jl
popa
loop
(bad)
or
imul
pop
push
push
adc
iret
scas
sub
pop
cmps
push
push
dec
fs
push
jno
adc
sub
push
mov
xor
push
xchg
lods
rol
popf
loopne
sbb
mov
ret
push
dec
je
adc
pop
imul
inc
push
add
aaa
jge
lock
sub
movs
mov
stc
call
sar
cmps
push
data16
jp
in
out
sub
push
push
loope
jbe
cmps
mov
iret
push
xchg
sub
dec
push
cmp
xor
jl
aaa
fs
sub
popf
cmps
mov
mov
pop
fcomp
fstp
ror
push
retf
addr16
dec
out
lds
sub
dec
ret
xchg
mov
inc
lods
vzeroupper
push
test
pop
popa
les
cwde
xchg
daa
mov
retf
mov
popa
cld
add
fwait
push
lea
xor
pusha
stc
(bad)
call
aam
jmp
sub
shl
jmp
mov
jno
xchg
xor
sub
xor
jbe
movs
(bad)
clc
inc
jmp
scas
mov
fwait
call
in
ret
jg
jmp
mov
fisttp
jne
aas
and
xor
jnp
in
(bad)
push
sub
fist
cmp
mov
scas
test
mov
loopne
jnp
dec
fstp
std
xchg
lods
clc
daa
mov
and
xchg
add
xor
test
out
mov
cmp
sbb
les
jae
lods
mov
(bad)
jmp
jle
jo
mov
pop
rol
xor
xlat
rol
dec
in
(bad)
rol
int
mul
sbb
or
or
add
iret
sbb
add
inc
or
push
js
loop
ret
popf
arpl
mov
jne
(bad)
pop
aam
mov
ficomp
cmp
nop
sub
sbb
mov
pop
jg
jnp
sub
sub
inc
push
xchg
pop
jmp
or
rol
push
(bad)
(bad)
idiv
mov
aam
sub
daa
xor
push
mov
(bad)
pop
add
gs
pop
cdq
inc
add
dec
js
test
lock
inc
mov
fcmovnbe
xchg
or
sbb
mov
dec
and
out
in
pop
dec
add
inc
and
cmps
bound
iret
cli
fimul
mov
inc
mov
loopne
dec
mov
cmp
outs
or
or
add
jns
rcr
mov
pop
sbb
aas
or
pop
enter
add
xchg
adc
sub
add
dec
repnz
test
inc
jmp
fist
pop
mov
dec
fadd
cmp
jle
mov
xchg
mov
(bad)
aaa
sub
frstor
adc
push
jns
jecxz
sbb
movs
aas
jg
retf
ss
cmp
jmp
icebp
cli
jnp
adc
test
dec
aad
sbb
jae
scas
cmp
xchg
mov
cmp
hlt
jge
aad
pop
sbb
cs
ja
sti
and
addr16
jmp
ret
xchg
pushf
dec
push
jge
cmps
fwait
gs
mov
inc
mov
shl
loope
or
(bad)
xlat
cmp
call
mov
adc
sbb
cmp
xor
mov
mov
pop
outs
fisttp
int
test
dec
loope
or
dec
cmp
(bad)
sbb
mov
xchg
sub
cmp
sub
jno
dec
loop
out
outs
out
scas
outs
(bad)
data16
add
sar
ja
fadd
fs
pop
int3
mov
cmp
aam
sub
sahf
add
cmp
popa
iret
shr
jb
inc
out
in
mov
mov
jns
jg
mov
movsx
pop
loope
sub
ins
jns
dec
int3
dec
iret
dec
jmp
(bad)
sbb
fdivr
test
cmp
inc
rcr
push
sub
dec
and
and
adc
(bad)
fs
dec
adc
mov
adc
stos
push
fxtract
xor
xchg
push
mov
adc
inc
es
xor
adc
and
and
hlt
outs
bound
ins
jl
fistp
jbe
outs
int
mov
push
mov
fidiv
xor
in
cld
aas
pop
xchg
js
popf
mov
imul
sbb
into
sub
xlat
daa
inc
rcr
dec
sbb
mov
rcr
scas
jp
jp
jae
push
test
outs
cmp
mov
ds
jne
mov
lods
and
ss
jl
adc
aad
jmp
scas
retf
adc
sub
xor
dec
dec
cmp
stos
xlat
xchg
(bad)
sti
xor
hlt
jg
push
adc
je
repz
pop
add
push
xchg
mov
mov
mov
or
dec
fs
mov
scas
es
(bad)
mov
scas
call
fist
dec
int
push
pop
push
pop
jecxz
adc
cmps
div
lea
imul
add
add
sbb
push
jp
sahf
jb
mov
xor
imul
pop
fwait
inc
or
icebp
mov
mov
(bad)
sti
push
inc
push
jae
cmc
and
icebp
push
lods
mov
xor
ror
mov
mov
repnz
call
stc
jmp
cmp
jbe
call
setae
iret
rsqrtps
mov
push
ret
gs
(bad)
or
pop
sbb
bound
call
add
push
xlat
sub
pusha
xor
stos
sbb
ja
fwait
jb
hlt
sar
aaa
div
inc
add
dec
mov
and
mov
mov
ret
add
jp
lahf
mov
shr
xchg
aam
test
ret
test
loopne
xor
jne
or
and
sbb
cmp
inc
leave
adc
mov
pop
sub
jo
push
stos
add
rol
pop
out
pop
mov
std
stos
test
push
cmp
inc
shr
push
pop
and
shr
mov
aad
sbb
sahf
or
sbb
push
std
pop
xor
add
enter
out
push
lds
addr16
pop
mov
scas
jl
ret
or
xor
add
push
sbb
cdq
mov
pop
mov
fisttp
xchg
mov
mov
fdivr
and
push
dec
fwait
rcr
(bad)
leave
add
xor
add
and
test
rol
inc
mov
scas
pop
arpl
push
test
jge
mov
enter
mov
cwde
cmp
push
mov
xor
jae
stos
aam
sbb
ret
fsub
dec
pop
fidiv
lock
mov
mov
inc
sub
aam
mov
pop
adc
push
rcr
xchg
mov
rcr
repnz
sub
call
idiv
xchg
mov
fimul
or
sub
sub
call
fwait
sbb
pushf
sub
pop
movs
lods
jo
sar
outs
lahf
cwde
arpl
lea
jle
push
mov
call
jmp
popf
movs
push
out
stc
or
addr16
out
pop
or
cmps
inc
cli
mov
mov
pushf
loopne
sbb
mov
(bad)
das
inc
pop
xor
xchg
addr16
lods
add
sar
mov
xor
scas
fisubr
cmc
out
ror
inc
out
inc
jecxz
std
adc
repnz
arpl
mov
test
enter
call
loop
sub
push
push
push
jns
(bad)
push
out
add
ror
ins
mov
xor
dec
adc
popa
cwde
adc
je
arpl
in
ja
mov
or
out
mov
test
(bad)
push
into
and
cmp
and
nop
fsub
repnz
sub
pusha
push
push
pop
pop
mov
add
hlt
test
jg
popf
das
stc
std
call
in
dec
call
(bad)
fdiv
popf
add
pop
shr
sar
repnz
xchg
and
in
xchg
lea
xor
push
jle
sar
scas
sbb
inc
(bad)
sbb
pop
cmp
mov
pop
(bad)
sub
lods
and
jmp
fdiv
ja
sub
(bad)
dec
pop
adc
xchg
pop
jne
pop
lods
stos
int
xchg
add
inc
inc
dec
dec
jnp
xchg
push
jge
jnp
fwait
jae
mov
adc
ins
js
mov
cld
jb
adc
cli
jne
(bad)
out
pop
xlat
jnp
mov
jg
ret
popa
xadd
adc
sub
into
mov
xlat
dec
ror
ret
xchg
xor
clc
inc
sbb
fld
mov
mov
addr16
data16
xchg
test
test
mov
es
pop
and
pop
mov
mov
std
mov
psubsw
adc
icebp
push
push
mov
cs
fs
stc
test
dec
jae
xor
mov
outs
xor
pop
lods
outs
xchg
xchg
sbb
mov
push
sub
mov
ins
movs
stc
jmp
cmc
es
(bad)
cs
dec
jno
xor
pop
mov
fimul
sar
cdq
aaa
pop
jae
enter
dec
mov
xor
cmp
inc
xchg
add
fbld
sahf
pop
imul
cmp
pop
mov
dec
mov
and
xchg
lock
(bad)
sub
push
sbb
xor
cmp
xlat
popf
dec
bound
mov
inc
retf
dec
jmp
xchg
or
pop
sbb
(bad)
icebp
data16
xchg
cmp
sub
mov
adc
fidiv
not
jnp
popf
xchg
pop
push
(bad)
xor
outs
pop
ins
call
pop
push
mov
cmps
mov
push
cmc
and
movs
scas
sar
cmp
sub
jecxz
jmp
je
dec
sbb
fmul
pop
pusha
xlat
mov
sahf
jecxz
fcom
retf
rcl
leave
sub
ss
xor
(bad)
fist
imul
shr
dec
sahf
xor
test
jns
pop
js
cmp
addr16
ss
push
add
sub
jae
fcom
std
cli
jle
pushf
sub
(bad)
dec
xchg
into
inc
cld
fiadd
test
mov
nop
add
aas
pop
add
jne
fistp
xor
das
aad
pop
div
addr16
scas
and
pop
pop
scas
jecxz
test
test
setle
mov
(bad)
mov
jae
xlat
fild
pushw
dec
xor
adc
popa
mov
inc
jo
(bad)
fimul
push
jae
mov
cmp
dec
cwde
iret
pop
(bad)
jmp
jne
cvttps2pi
out
cmp
push
inc
icebp
adc
outs
aas
sahf
mov
cli
jmp
push
retf
mov
mov
pop
cmp
shl
push
shl
mov
xlat
ins
lahf
mov
fcom
test
sub
mov
cmp
dec
cmp
inc
pop
jecxz
pop
xor
xlat
add
pushf
add
cmp
cmp
sbb
in
int3
adc
sti
fwait
cmp
movs
outs
xchg
cmp
imul
clc
(bad)
not
sub
sbb
rcr
test
mov
dec
sbb
fild
and
loop
and
dec
leave
iret
sub
out
addr16
into
loope
sub
stos
pop
mov
cmp
and
xor
imul
pop
div
and
inc
mov
clc
or
mov
faddp
pushf
mov
mov
in
mov
jle
jmp
in
shr
loope
ds
adc
push
mov
sbb
add
loope
pop
mov
iret
int
cdq
add
adc
dec
push
repz
test
pusha
mov
fidiv
jle
add
mov
les
not
je
inc
iret
retf
popf
nop
xor
add
cmp
and
dec
call
mov
xlat
push
dec
pop
sub
dec
out
lahf
fisttp
pushf
push
mov
popa
retf
xor
mov
ror
adc
les
jne
xchg
sbb
clc
cmc
test
aad
dec
faddp
or
mov
mov
stc
adc
cmp
xchg
cmp
mov
add
aaa
sbb
(bad)
dec
outs
ror
icebp
dec
inc
dec
cmps
int
es
int
sbb
sub
mov
mov
and
in
stc
fadd
test
xchg
ins
test
inc
pop
stos
jecxz
jmp
fisub
in
pop
cs
push
xchg
xchg
xchg
mov
sub
jae
inc
xor
pushf
in
dec
add
in
xchg
rol
rol
jo
jne
in
push
stc
gs
(bad)
xchg
jae
mov
xlat
fs
hlt
pop
mov
sar
out
rol
dec
jnp
shr
jl
aaa
cmps
call
inc
out
push
jno
loopne
jnp
sub
pop
push
ss
lahf
mov
inc
dec
rcl
stos
fidivr
jne
or
xchg
(bad)
icebp
out
fdivrp
mov
xchg
or
jns
lods
test
in
in
lds
or
jns
jne
adc
loope
in
fstp
jmp
pop
jb
jb
pop
mov
inc
and
popa
(bad)
pop
fisub
repnz
fs
std
aas
addr16
adc
mov
scas
mov
lods
pop
jne
xchg
or
ret
out
mov
xor
enter
fdivr
nop
aaa
sbb
idiv
stos
and
(bad)
dec
dec
gs
add
outs
pop
mov
(bad)
aam
jmp
(bad)
xchg
out
rcl
imul
loopne
imul
xchg
mov
icebp
pop
movs
test
cld
mov
dec
pop
fldenv
push
ins
lods
cmp
fidiv
sub
aaa
lods
mov
stc
leave
and
repz
stos
sbb
pop
dec
je
cld
mov
and
scas
pop
jmp
cmp
dec
push
iret
adc
out
sbb
sbb
gs
sti
les
das
or
sub
cli
jmp
rcl
jmp
aaa
int3
mov
and
jle
push
std
sbb
mov
adc
sbb
push
adc
push
aaa
push
aas
mov
icebp
mul
cmp
nop
mov
lock
push
nop
jo
scas
or
scas
stos
ss
push
repz
jl
leave
loope
clc
mov
mov
stos
jmp
scas
mov
sbb
push
rcl
or
lods
scas
neg
mov
add
jmp
scas
lock
pop
fstp
(bad)
push
push
or
cmps
fild
sbb
mov
mov
ret
cmc
push
mov
sbb
inc
cld
push
scas
in
pop
xor
int
dec
mov
outs
retf
lea
and
ins
cmp
ss
ss
mov
xchg
stc
(bad)
fstp
sbb
aam
fst
stos
shl
mov
lahf
out
add
or
mov
fnclex
cmp
bnd
dec
pop
cdq
mov
addr16
fsubr
cmp
es
ins
imul
jo
data16
and
lods
push
push
aad
jnp
mov
clc
enter
xor
pop
push
ins
jle
pop
cmp
mov
jb
sbb
movs
mov
jge
inc
pop
mov
lock
cmp
cmp
out
and
sbb
sbb
stos
add
loop
adc
mov
je
pushf
int
adc
out
mov
in
xor
loop
cld
xlat
cmp
mov
dec
addr16
add
push
xchg
cli
xchg
jb
push
mov
clc
nop
and
or
(bad)
pop
in
iret
inc
mov
pop
fistp
jne
push
pop
jnp
inc
pop
add
mov
sbb
pop
jnp
pop
adc
mov
or
jbe
fwait
dec
icebp
movs
and
inc
cmp
dec
inc
push
push
xchg
jno
jb
test
shr
call
mov
jb
je
cmp
in
dec
inc
fnstcw
dec
mov
or
repz
pop
repz
push
sub
and
bound
push
or
mov
or
stos
mov
sbb
stc
loopne
jp
dec
mov
or
xchg
pop
xor
sub
ror
sub
or
mov
pushf
aad
pop
into
jmp
sbb
adc
jg
retf
xor
shl
pop
xor
and
mov
lea
clc
sti
stos
call
mov
(bad)
mov
pop
sbb
not
pop
retf
xchg
jb
vprotq
pusha
nop
jns
lock
int3
push
push
(bad)
pushf
add
jle
dec
add
ss
retf
daa
or
xor
fcomp
int3
popf
inc
js
push
xor
(bad)
ffree
cmp
test
pushf
cdq
mov
gs
aam
pop
dec
xchg
sti
pop
(bad)
movs
cmp
xchg
sahf
outs
xchg
cmp
xchg
adc
dec
inc
jne
push
nop
jmp
jg
in
push
mov
daa
pop
and
sub
repnz
dec
loope
sbb
xchg
sti
push
ja
scas
gs
push
mov
call
jmp
xchg
dec
outs
dec
mov
and
ja
inc
pusha
push
mov
xor
outs
sbb
push
cmp
inc
mov
sbb
xlat
out
mov
outs
mov
mov
adc
sbb
pop
push
std
movs
or
sub
sbb
test
into
jp
jb
jg
loopne
into
in
test
cmp
sbb
mov
jno
lock
xchg
sub
icebp
sbb
enter
cli
push
addr16
lods
jbe
arpl
sub
and
into
rol
pop
xor
lock
jo
inc
push
and
jl
jp
cs
pushf
cdq
(bad)
dec
test
(bad)
js
loopne
stos
fst
sbb
xchg
leave
add
mov
mov
nop
and
jle
sub
ds
mov
std
ret
cmp
mov
xor
push
bound
or
dec
and
push
jo
sbb
jb
loopne
loopne
adc
in
jno
jb
je
(bad)
mov
push
fcomip
push
push
call
pop
into
and
xor
mov
lods
dec
arpl
push
loop
(bad)
adc
mov
jle
(bad)
jb
dec
jbe
js
mov
sub
add
cmp
sub
cld
inc
jp
std
cmp
cmp
mov
rcr
mov
in
(bad)
int
cmp
out
xchg
xchg
sbb
xchg
pop
enter
push
push
loope
mov
and
ins
outs
sbb
pop
push
int
ds
inc
in
pop
inc
ret
xchg
xor
xchg
and
xor
comiss
in
jbe
and
mov
pusha
cld
mov
jmp
sub
pop
sbb
mov
popa
pop
outs
mov
xchg
or
imul
add
inc
xor
mov
scas
ins
pop
jae
je
mov
fisttp
int
add
out
xlat
cs
mov
fsubr
sbb
into
xor
ja
gs
bound
sar
jnp
ffreep
dec
mov
test
cmp
ret
push
in
mov
hlt
jbe
cmove
out
xlat
or
popa
jecxz
out
or
retf
std
movs
fld
idiv
mov
into
pushf
nop
mov
mov
adc
outs
jp
fs
loope
mov
mov
aas
lock
mov
mov
lahf
pop
scas
jmp
lods
stos
aam
pop
test
nop
rcr
fstp
sub
leave
je
jge
jl
push
mov
xor
sbb
cli
jae
push
mov
movs
dec
(bad)
in
dec
adc
dec
cmp
lock
std
leave
lds
or
rcr
push
xchg
mov
test
push
adc
ret
dec
xchg
rcr
ret
sbb
mov
push
les
ins
(bad)
int3
push
std
ficom
jmp
xor
outs
and
cli
aam
ret
(bad)
hlt
mov
(bad)
hlt
shr
push
imul
xor
mov
popf
dec
stc
xchg
repnz
in
cdq
shr
leave
jb
ret
pop
jl
pop
mov
add
add
and
repnz
adc
(bad)
leave
call
push
add
out
jne
outs
mov
adc
not
pop
ret
cdq
inc
pop
div
xchg
cmps
stos
repz
dec
inc
push
jle
iret
inc
repz
fisubr
jge
fdiv
cmp
lds
add
inc
out
test
mov
pop
jmp
outs
mov
aaa
(bad)
mov
mov
ins
arpl
sbb
dec
cmp
(bad)
lods
scas
enter
xchg
mov
shl
lds
clc
cmp
cs
scas
mov
retf
jne
and
adc
fs
push
in
mov
fld
pop
sbb
inc
enter
pop
mov
ror
rcl
idiv
in
aam
scas
loopne
int3
out
or
mov
jno
sbb
stc
(bad)
mov
fadd
or
mov
dec
fs
dec
mov
pop
je
jg
stc
imul
inc
push
les
jg
out
and
sub
fld
outs
sub
dec
movs
or
div
fistp
cmps
mov
pusha
movs
test
pop
movs
loop
cmp
leave
iret
or
popf
dec
mov
lahf
jnp
iret
dec
mov
fs
mov
(bad)
data16
and
mov
jb
jo
cmc
mov
push
mov
jp
mov
sbb
push
adc
xchg
nop
jp
adc
xchg
or
push
clc
inc
adc
sub
cdq
test
xor
mov
jge
sbb
mov
sbb
adc
adc
out
sti
sub
inc
nop
dec
mov
mov
call
(bad)
jmp
sar
cwde
nop
xchg
pop
push
(bad)
xchg
and
fld
adc
sbb
retf
ja
mov
inc
sahf
jo
mov
shl
add
jns
call
jbe
inc
mov
fisubr
pushf
push
not
fimul
jmp
cmp
mov
repnz
jmp
pop
xor
jge
dec
ins
jmp
sbb
ins
leave
push
jno
clc
repz
ds
adc
xchg
in
neg
int3
setns
pushf
lahf
xor
xchg
(bad)
cmc
mov
(bad)
cmp
mov
xor
xchg
out
push
shl
adc
push
mov
adc
inc
stc
pop
add
lahf
adc
jmp
xor
mov
imul
add
out
inc
jg
in
pop
mov
cli
loop
xchg
cmps
into
stos
mov
imul
out
jno
pop
repnz
mov
fiadd
pop
add
or
add
or
pop
loopne
out
in
xchg
jge
fnstsw
ja
pusha
out
cmc
test
inc
clc
mov
xchg
(bad)
lock
jg
pop
js
push
push
mov
stc
in
cmp
mov
pop
dec
adc
out
inc
sahf
lahf
push
ror
mov
popa
lahf
pop
sub
sbb
pop
and
inc
or
mov
out
push
add
sbb
cs
dec
jl
jl
jg
jecxz
stos
nop
(bad)
f2xm1
cmps
jne
inc
outs
adc
inc
repnz
(bad)
scas
aaa
sub
loopne
jno
cli
nop
repnz
cdq
(bad)
clc
in
shl
mov
(bad)
retf
dec
mov
(bad)
jg
pushf
mov
inc
(bad)
jmp
mov
adc
cmps
jae
(bad)
push
aaa
vpsubusb
call
add
fnstcw
inc
sbb
inc
aaa
pushf
xlat
sar
call
pop
and
cs
ds
bnd
cmc
mov
cmps
adc
rol
jns
mov
test
arpl
(bad)
jnp
pop
jnp
imul
cmp
leave
jle
daa
mov
inc
pop
shl
jns
ret
dec
mov
addr16
mov
into
loopne
out
fnstenv
mov
ja
cdq
add
sub
(bad)
fmulp
jmp
or
scas
push
(bad)
rcl
in
addr16
or
(bad)
fisttp
jecxz
movs
xlat
call
(bad)
fisttp
int
push
sbb
push
push
gs
push
push
pop
sub
pop
enter
pop
ffree
jne
test
lods
ja
icebp
retf
idiv
inc
mov
lods
jle
cmp
adc
or
push
sub
cmps
mov
scas
jne
add
mov
add
sbb
outs
out
mov
jg
mov
movs
imul
retf
cmp
pop
in
rol
mov
or
into
ins
call
cmc
shl
jl
adc
sar
loop
(bad)
pop
sbb
push
(bad)
inc
in
mov
mov
and
inc
push
loope
in
pushf
cmp
pop
stc
call
ins
sub
adc
fdivr
fs
cmp
sbb
inc
pop
jl
cmc
cmc
jo
repz
xor
cmp
int
jecxz
les
push
jo
add
(bad)
sahf
jnp
aas
imul
inc
and
movs
leave
aad
mov
jl
jnp
lahf
mov
ret
popa
aaa
push
or
test
sub
in
mov
or
dec
xor
das
pop
(bad)
out
mov
jmp
aam
mov
push
lds
div
mov
push
sbb
in
xor
aam
dec
aas
xchg
jp
cmp
mov
ficomp
cmp
xchg
mov
ins
sub
es
outs
adc
mov
jg
push
jg
ins
lea
mov
inc
jle
xchg
in
xchg
rol
mov
push
lds
leave
or
aad
sbb
jp
add
push
mov
outs
mov
xor
jns
rcr
mov
mov
dec
int
push
stos
sbb
pop
sbb
jge
pop
fnstsw
nop
in
outs
cmp
add
test
rcl
pusha
or
pop
jo
mov
and
out
push
sub
mov
xchg
adc
sbb
loop
adc
(bad)
inc
fild
push
pop
jb
and
mov
and
pop
jb
aas
sub
pop
test
int3
add
das
icebp
sahf
ins
test
add
hlt
call
jne
jp
cmp
cdq
call
lds
not
rcr
push
arpl
test
push
inc
xlat
std
clc
mov
(bad)
fist
mov
loop
pop
nop
data16
mul
test
rol
ficom
fnsave
test
mov
jg
cwde
xor
bnd
lock
test
xchg
ds
mov
add
push
jg
xchg
inc
sahf
mov
push
pushf
push
mov
inc
mov
cmp
enter
clc
mov
pop
sti
mov
sub
pop
addr16
ins
cmp
into
mov
pop
sbb
push
xlat
push
data16
and
mov
fldcw
loope
xor
bound
cmps
outs
ffreep
(bad)
cld
fdivr
sub
push
cmp
sti
jmp
dec
pop
xor
cmps
push
inc
mov
xchg
jg
adc
cld
test
out
jmp
mov
mov
dec
jbe
mov
mov
mov
mov
out
dec
(bad)
das
aas
add
outs
mov
lods
aam
ret
pop
ror
mov
jmp
scas
sar
pop
int
push
scas
mov
pop
lods
mov
ret
or
sbb
repnz
outs
call
mov
mov
mov
inc
pop
push
dec
ds
inc
sub
out
push
cli
mov
fs
lock
fild
loopne
ins
in
scas
lds
dec
daa
jbe
xchg
push
stos
je
aam
retf
pop
int3
test
mov
cmp
add
pop
cmp
cmc
add
imul
xchg
call
xchg
enter
sub
enter
ret
stos
out
dec
lds
fistp
dec
pop
sbb
mov
or
mov
mov
jae
call
cmps
dec
adc
pusha
hlt
pop
xchg
cld
hlt
and
mov
sub
push
fiadd
(bad)
push
add
sub
or
out
adc
(bad)
pop
call
ret
mov
jnp
int
adc
in
enter
jnp
imul
in
cmp
cmps
cmp
mov
lea
int
movs
nop
or
or
fs
outs
pushf
mov
pushf
rcl
xor
cdq
or
and
push
adc
rcl
enter
mov
inc
push
push
addr16
dec
vsubsd
into
sahf
xchg
mov
adc
jno
iret
sbb
jnp
in
pop
cli
pop
push
stos
add
mov
xchg
imul
push
xchg
and
inc
loop
cmps
movntq
mov
push
sub
into
mov
xchg
imul
movs
test
pushf
push
and
cdq
lahf
mov
(bad)
mov
stos
jg
iret
retf
aaa
fs
mov
mov
fild
or
pop
mov
imul
movs
rcr
sbb
lea
fbld
imul
movs
push
xchg
push
shr
jmp
(bad)
mov
cdq
jb
repz
(bad)
sub
nop
xlat
call
(bad)
cli
mov
int
pinsrw
xor
or
enter
(bad)
repnz
out
jmp
shr
mov
jae
mov
mov
sbb
xlat
sub
fsub
or
gs
sti
dec
sbb
outs
loope
out
fmulp
retf
repz
sahf
enter
jns
enter
rcr
adc
sub
ret
into
xchg
sti
in
lds
or
xlat
bound
pop
mov
xlat
(bad)
sbb
pop
mov
push
and
test
cmp
jle
dec
xchg
(bad)
sbb
ret
loope
daa
enter
div
adc
jmp
loope
leave
sbb
fcmovnb
clc
retf
sbb
xor
and
or
leave
lea
add
test
mov
push
sti
lea
jbe
loope
(bad)
cmp
push
in
inc
retf
shr
pop
and
sbb
ffree
pop
shr
or
fxch
test
daa
cmp
fisubr
and
bound
cmps
sbb
mov
cmp
sbb
imul
dec
pop
ret
sub
leave
add
push
nop
inc
sbb
fstp
or
js
fnstcw
fistp
mov
sbb
mov
jb
xchg
pop
inc
mov
(bad)
enter
repnz
bound
div
push
or
nop
dec
sbb
jne
es
and
repnz
pop
inc
and
into
aas
ss
mov
nop
sbb
call
xchg
sbb
pop
repz
sbb
imul
push
imul
and
mov
cmp
(bad)
ins
mov
loope
jbe
aas
test
xchg
mov
push
in
xor
fwait
cdq
cmp
jnp
inc
scas
push
mov
push
imul
movs
add
pop
ss
inc
add
sahf
(bad)
aas
test
mov
dec
imul
(bad)
mov
or
xor
push
jle
xlat
push
iret
add
push
mov
ja
inc
cwde
or
lods
pop
pop
in
call
push
mov
cmp
retf
sbb
and
ss
dec
sbb
jbe
mov
test
adc
shl
mov
aam
bnd
and
ficom
hlt
jo
push
out
ja
loope
sar
adc
mov
and
pop
adc
and
(bad)
push
loop
stc
popa
mov
cmps
inc
cmp
test
mov
and
lds
dec
aam
aam
jnp
add
inc
popa
ret
or
sbb
jns
fimul
shl
mov
or
mov
in
fwait
push
jecxz
dec
sbb
(bad)
or
cmp
test
and
pushf
fistp
cmp
adc
push
inc
or
outs
and
jnp
in
mov
cld
cmp
enter
push
in
jno
std
cmps
sub
inc
or
call
mov
iret
jmp
cs
out
mov
repz
xor
stos
xchg
and
sub
jo
dec
cwde
ins
add
push
dec
push
pushf
pop
push
cmp
das
(bad)
xor
ret
push
outs
xchg
pop
add
adc
jno
mov
and
test
ins
int
leave
sub
enter
ins
adc
mov
cli
stos
jg
in
call
into
(bad)
cld
div
dec
jle
cmps
cmp
mov
lahf
mov
cmp
mov
stos
push
mov
or
xlat
cmps
retf
mov
mov
std
lods
mov
or
imul
js
sub
or
outs
dec
fs
repnz
div
div
enter
add
mov
push
lods
mov
ret
sti
push
xor
inc
int
ret
lock
out
sub
aad
push
push
scas
jmp
popf
mov
aaa
test
scas
mov
jbe
mov
outs
js
sbb
sbb
into
mov
jno
daa
mov
leave
cmc
mov
imul
mov
mov
dec
dec
adc
mov
xor
cld
fdiv
(bad)
sub
sub
jmp
mov
not
(bad)
dec
in
out
rol
jbe
ds
and
out
fs
dec
cs
hlt
push
add
mov
push
inc
repz
ja
or
scas
ret
adc
xchg
jge
mov
lahf
movs
cmp
adc
and
inc
ins
fisub
and
cmp
dec
jb
mov
cs
imul
mov
cdq
outs
mov
xchg
(bad)
stc
or
xchg
mov
scas
cdq
sar
popa
xchg
push
les
cmps
nop
pop
daa
call
bnd
xor
dec
sahf
mov
lock
dec
jo
in
cmp
test
xor
jns
loopne
xchg
cmp
sar
xor
mov
arpl
xor
xchg
adc
xchg
lds
loopne
push
cmp
rol
gs
aaa
push
sub
test
imul
ret
pusha
sbb
mov
push
out
xchg
inc
pushf
popf
or
pop
mov
lods
jno
or
jg
push
jne
outs
inc
ja
xchg
cld
(bad)
xchg
pop
rcl
aam
in
sbb
imul
shl
and
fiadd
push
and
arpl
stos
jecxz
and
xor
mov
lds
dec
loop
sub
xor
arpl
dec
bound
pushf
xlat
mov
test
or
movs
or
mov
sar
and
sbb
push
sbb
dec
sub
callw
mov
xchg
and
xchg
mov
iret
mov
jecxz
dec
mov
out
shl
pop
fadd
pusha
adc
jbe
xchg
push
add
in
or
or
mov
and
sbb
adc
rol
mov
lods
xor
mov
ror
jb
cs
jmp
addr16
emms
jmp
or
shl
jbe
rcl
xchg
push
loop
test
fsubr
(bad)
stc
lea
jno
cli
lmsw
sub
or
out
pop
mov
jl
and
mov
xchg
(bad)
xor
or
loop
lock
or
retf
cmps
push
mov
xchg
cmp
inc
outs
(bad)
push
xor
pop
out
popf
(bad)
sub
push
test
mov
iret
retf
jbe
sub
sbb
jno
inc
ins
adc
imul
add
cmp
mov
cmps
cmps
xchg
jl
mov
outs
dec
pop
jecxz
push
xchg
retf
inc
test
test
loop
mov
dec
loop
cmps
or
jg
ins
mov
gs
jg
push
inc
(bad)
fisttp
pop
ins
test
loope
cwde
stos
and
cmp
aam
in
or
mov
imul
scas
and
test
jno
inc
ins
movs
out
test
call
cmp
daa
sar
jle
lods
adc
xchg
pusha
jmp
push
mov
xchg
sti
dec
imul
push
daa
shl
stc
or
sub
frstor
ja
pop
xchg
sbb
mov
jno
dec
xchg
cmps
sub
inc
jmp
and
jno
add
pop
push
int3
je
and
fstp
push
les
popf
jle
dec
fs
xchg
pop
popf
hlt
aaa
das
repnz
dec
mov
lods
mov
repnz
xchg
cmp
pop
pusha
(bad)
push
sbb
pop
stos
stos
das
mov
(bad)
sbb
pop
mov
repz
mov
rol
ins
ret
(bad)
jmp
and
fwait
xor
mov
mov
pop
cmp
adc
mov
cld
loope
xlat
cmp
lock
pop
loop
in
cmp
lea
data16
push
sub
sar
xchg
and
cwde
sbb
pop
inc
xlat
sub
add
stos
ror
mov
or
hlt
cmps
fidivr
rcl
ret
xchg
je
fistp
shl
inc
das
inc
scas
cmp
daa
repz
sahf
jno
sbb
or
mov
out
xor
inc
pop
xchg
or
ds
jne
mov
mov
jae
inc
(bad)
xchg
inc
mov
fcomp
out
mov
push
aaa
nop
inc
ss
es
(bad)
push
ss
pop
push
xchg
shl
and
xor
(bad)
mov
cmp
push
hlt
sar
xor
ret
xor
push
mov
outs
je
or
sub
xlat
push
clc
sub
mov
mov
mov
xor
mul
jnp
movs
adc
push
sub
mov
dec
ret
or
inc
inc
in
sub
and
cwde
rcr
(bad)
jecxz
in
dec
or
xor
in
and
push
mov
add
add
and
xchg
inc
sbb
sti
shl
loopne
pop
enter
push
cmp
push
jp
xor
and
nop
pop
pop
mov
(bad)
jmp
pop
scas
mov
arpl
sbb
xor
(bad)
lods
adc
and
or
pop
aad
sbb
push
sar
mov
data16
cmp
xchg
imul
enter
xchg
nop
mov
mov
fs
sub
cmps
pop
xor
xor
mov
jmp
lods
shl
jmp
stos
neg
jmp
sbb
jg
push
addr16
sub
pop
mov
add
jno
test
data16
inc
push
push
pop
sub
mov
cmps
push
clc
cmp
(bad)
fsubr
push
nop
out
sbb
pop
sbb
pop
inc
xchg
retf
fidiv
into
cmp
add
out
fistp
mov
in
dec
out
sbb
jp
inc
stc
inc
test
fwait
sbb
ins
in
adc
adc
movs
pop
sbb
mov
ret
outs
shr
fs
cmp
ret
dec
push
push
scas
or
fs
xor
xor
jae
loopne
fs
mov
cmp
sub
imul
mov
xor
out
lods
pusha
js
push
popf
mov
nop
popf
xor
xchg
popf
cmp
dec
sti
adc
pop
sahf
mov
inc
cmp
popa
test
mov
mov
adc
hlt
mov
das
in
add
pushf
add
ror
pop
popa
cli
push
hlt
mov
xor
ffree
jb
sbb
cmps
fmul
ins
clc
outs
scas
das
out
or
sahf
pop
jecxz
dec
stc
hlt
fwait
imul
xor
gs
mov
lea
xor
and
dec
sti
fwait
adc
lods
mov
enter
cmp
pop
test
inc
xor
lods
repz
xor
mov
shl
inc
push
sub
jg
leave
mov
cli
jecxz
mov
es
fwait
adc
jo
int
sbb
popf
sub
(bad)
sbb
call
push
fldcw
inc
outs
in
mov
mov
pusha
push
pushf
cmp
pop
ret
pop
movs
loopne
aaa
into
(bad)
pop
das
sub
popa
xchg
cdq
or
icebp
push
shl
mov
aas
lock
(bad)
js
or
gs
aas
push
clc
call
in
mov
aam
mov
push
xor
cmp
retf
jne
stc
fld
test
lea
dec
adc
aad
jb
and
push
dec
mov
imul
pop
add
jge
cmp
shr
aam
mov
xchg
inc
and
pop
jle
jmp
cmp
mov
or
inc
dec
cld
fsubrp
mov
cwde
xchg
cmp
pop
xor
xchg
push
arpl
pop
push
daa
jmp
adc
icebp
retf
(bad)
into
sub
(bad)
jns
or
imul
cmp
or
push
adc
bound
ja
into
ss
(bad)
aaa
mov
fimul
daa
push
pop
mov
mov
or
rcl
xor
lds
pop
loope
je
adc
or
cdq
or
jp
jge
out
xchg
xchg
sub
bound
pop
aad
adc
mov
dec
xchg
inc
(bad)
push
mov
enter
sbb
aam
sub
mov
adc
lds
pop
adc
mov
retf
test
add
or
mov
push
gs
and
xor
jnp
mov
stos
pusha
test
mov
in
sbb
xchg
push
or
xor
sub
addr16
mov
inc
mov
or
push
mov
dec
fprem
js
xor
aam
add
push
mov
lds
inc
ror
clc
xor
dec
push
addr16
shl
adc
mov
mov
shl
test
mov
cwde
jnp
mov
movs
arpl
xchg
xchg
(bad)
sub
push
imul
push
je
pop
outs
dec
dec
mov
and
lods
add
and
push
test
retf
loopne
mov
inc
or
test
pop
pop
mov
adc
push
and
inc
inc
out
int
xor
jecxz
cmp
pop
pop
mov
cli
test
or
popa
or
mov
pusha
pop
sar
outs
sbb
sbb
mov
xchg
add
mov
jnp
sbb
mov
sub
mov
in
pop
or
mov
movs
inc
rsm
push
pop
(bad)
movs
sti
mov
xchg
inc
push
in
pop
xchg
mov
mov
leave
jp
sar
mov
in
push
jns
cmp
ins
mov
add
sbb
mov
sbb
xlat
(bad)
mov
mov
sti
mov
sbb
call
cmc
push
xor
inc
xchg
xor
mov
dec
test
adc
call
jp
mov
mov
(bad)
cmp
(bad)
(bad)
mov
mov
xor
mov
sub
pop
loopne
stos
pop
outs
ss
xchg
xchg
shl
mov
sub
cwde
mov
mov
aam
movs
lods
and
ins
fmul
jno
aaa
xlat
jae
mov
pop
mov
pop
mov
les
pusha
std
stos
or
lock
fs
outs
loope
sbb
inc
retf
imul
jl
xchg
movs
or
mov
popa
inc
sbb
xchg
cmp
xor
fild
popa
xchg
cmc
clc
dec
sbb
retf
(bad)
fwait
dec
lahf
push
pop
sub
lea
call
int
sbb
fsubp
cmp
shr
aam
jmp
dec
shl
adc
(bad)
fdiv
into
jmp
jns
dec
mov
mov
adc
jl
cdq
add
inc
and
inc
pop
push
pop
push
push
int
frstor
and
lds
inc
pause
jae
movs
add
es
mov
adc
ds
js
test
mov
pushf
jecxz
mov
dec
nop
add
adc
push
sbb
xchg
mov
lahf
cwde
xor
adc
add
xchg
dec
les
adc
and
ror
xchg
or
gs
test
lods
jecxz
push
mov
adc
inc
scas
ds
clc
mov
loope
mov
xchg
jne
popa
sbb
push
sub
inc
push
or
pop
pop
adc
test
inc
xlat
add
js
adc
fnstcw
mov
jbe
popa
cmp
pop
test
and
ret
mov
sub
cld
popa
push
xor
pop
ss
in
mov
adc
dec
scas
outs
dec
scas
lods
pop
add
jmp
push
aam
push
add
pop
and
ins
jmp
adc
push
(bad)
mov
mov
add
and
mov
pop
mov
add
pop
add
jp
bound
add
jmp
pop
rcl
shl
xchg
mov
scas
sbb
fs
mov
and
call
ret
es
cmp
addr16
in
aam
jp
in
mov
jnp
jae
popa
mov
pop
inc
xor
out
lods
mov
call
sub
or
jle
(bad)
in
push
(bad)
push
or
xor
xchg
mov
fs
or
jne
data16
and
mov
pop
cmps
sub
fstp
pop
rol
pop
xor
adc
ret
in
int3
dec
inc
push
clc
loop
sbb
out
in
dec
and
add
pop
aaa
test
or
rcl
and
pop
push
mov
es
int
or
fisttp
(bad)
xchg
jg
inc
jns
retf
out
mov
mov
in
popf
mov
mov
xchg
jmp
stos
and
add
loopne
push
out
cmp
mov
sub
or
pop
push
push
cmp
shr
push
and
jge
sti
mov
dec
pop
mov
jb
out
mov
xor
test
xchg
xchg
xchg
jb
inc
dec
iret
test
dec
ss
outs
(bad)
push
add
std
sahf
jmp
and
mov
add
add
cld
popf
mov
pop
ds
sbb
test
sbb
stc
clc
add
or
scas
push
fsubr
(bad)
mov
mov
nop
xchg
es
test
jmp
fs
or
cmps
out
into
test
sub
push
dec
and
add
sbb
gs
int
pop
push
xchg
ins
addr16
inc
xor
call
dec
add
popf
out
pop
outs
cmp
or
mov
popf
pop
add
ja
mov
cmp
or
movs
or
cld
xlat
mov
les
mov
push
cwde
sbb
into
loop
arpl
cwde
leave
lea
and
(bad)
and
mov
jl
inc
lock
jg
mov
adc
dec
xchg
xchg
dec
push
cmp
ins
xchg
test
iret
hlt
stos
sahf
out
(bad)
arpl
shr
fisttp
mov
adc
xchg
ror
stos
enter
(bad)
test
fwait
or
inc
je
mov
pop
sub
fnstcw
xchg
pop
jge
push
inc
inc
scas
adc
cmp
add
and
adc
shl
cmps
fisttp
mov
pop
int3
xchg
xor
mov
pop
push
dec
lods
aam
call
enter
adc
int
jns
push
pushf
loope
mov
out
push
push
retf
stc
(bad)
call
mov
jle
and
cmp
mov
ret
xchg
jg
mov
arpl
stos
add
aad
dec
into
adc
loope
ds
imul
fdiv
movs
sbb
cmp
adc
mov
cmp
iret
ftst
ror
and
xchg
mov
fcomp
xlat
call
hlt
sbb
test
jmp
sub
dec
icebp
test
mov
jmp
js
push
lods
sub
cmps
gs
sbb
inc
es
sub
dec
hlt
sahf
ins
pop
fild
add
jbe
jecxz
in
fsub
pop
mov
imul
cli
shl
arpl
or
aas
sbb
pop
js
push
sbb
xchg
adc
mov
jns
xchg
pop
movs
std
nop
jp
stos
icebp
fwait
loope
pushf
push
sbb
sub
push
leave
test
add
mov
and
test
push
sbb
dec
mov
mov
jo
sbb
shl
mov
mov
fdivr
mov
jb
push
xchg
jp
mov
dec
out
xor
inc
jnp
cmps
(bad)
mov
aas
sub
pop
inc
aaa
inc
iret
int
clc
mov
mov
cld
mov
cwde
fistp
ins
add
ss
js
fs
nop
inc
shl
loop
std
lods
pushf
xchg
shl
xchg
inc
lds
stos
scas
xchg
jae
ss
sub
test
mov
je
ficomp
ja
iret
leave
das
std
sub
int3
repz
pop
jmp
aam
ret
add
push
rcr
stc
cmp
repnz
repnz
push
xor
int
cmp
movs
fcomp
jge
or
icebp
repz
cld
inc
mov
in
jo
mov
mov
cs
xchg
in
aam
xor
out
movs
sub
dec
nop
test
sub
das
xchg
and
pop
sub
leave
pusha
cli
jge
cmp
daa
cli
pushf
push
pop
cdq
mov
cmp
fstp
jle
sbb
jae
repnz
adc
push
xor
sub
push
sbb
out
data16
cdq
sub
jb
sahf
int3
xchg
mov
cmps
fxch
repnz
fstp
mov
sbb
int3
xchg
enter
daa
jns
push
push
and
sti
push
mov
mov
stos
sub
jecxz
jp
cs
mov
cs
mov
jge
fadd
sub
dec
adc
mov
mov
jb
hlt
fdiv
popa
aad
jmp
les
outs
dec
xor
and
and
jle
xchg
xor
ins
in
ficomp
cli
repnz
mov
xchg
dec
adc
add
jno
mov
shr
sar
push
jae
in
enter
sub
ja
jl
ror
inc
xor
mov
cmp
repnz
out
outs
xor
and
push
bound
mov
repnz
cmp
sbb
cmp
adc
cdq
ror
and
test
adc
je
sbb
sub
inc
fstp
adc
test
pop
ss
ret
sub
lods
jbe
sub
sub
xor
loop
xlat
push
scas
scas
sub
mov
(bad)
jmp
xchg
shr
mov
mov
xchg
sub
repz
pop
mov
enter
add
iret
xchg
stc
and
aaa
fisub
mov
push
jae
sbb
mov
adc
push
mov
lods
sbb
stos
rcr
scas
mov
cli
pop
test
sbb
shl
xor
dec
movs
push
fcomp
jmp
shl
call
dec
shr
not
add
or
sahf
push
jecxz
xor
daa
jecxz
sbb
stc
add
push
dec
imul
leave
xor
dec
or
push
lock
inc
adc
pop
jae
dec
jnp
loop
jne
mov
dec
jle
movs
test
mov
pop
jl
dec
test
add
ds
push
jecxz
repz
cmp
ds
xchg
les
test
cmp
inc
mov
(bad)
icebp
xchg
out
shl
cmp
in
loop
sar
mov
nop
cmc
push
cmps
mov
js
jp
pop
jno
sub
imul
xor
pop
xchg
sti
push
dec
dec
jge
xchg
or
ror
cmp
cld
shr
inc
add
cmc
push
mov
xor
dec
lahf
inc
pop
retf
xchg
mov
fisttp
lahf
sub
loope
adc
leave
and
inc
in
and
(bad)
stc
push
dec
mov
movs
dec
mov
inc
bound
add
xor
es
sbb
sub
xor
je
push
sbb
lock
inc
sub
popa
jl
sbb
pop
cmp
inc
sub
lds
push
push
aaa
cdq
lahf
mov
push
movs
xchg
dec
outs
mov
fadd
and
dec
sub
aam
ins
pop
and
ins
push
dec
inc
inc
movs
mov
mov
out
cs
mov
fcomp
stos
mov
clc
lods
pop
retf
fldcw
movs
mov
push
dec
cwde
leave
adc
jns
sub
jl
fwait
lahf
jg
sub
cmp
jnp
mov
imul
jmp
dec
or
inc
jecxz
rcr
lea
push
mov
loop
jl
fs
xlat
sub
xchg
daa
xor
pop
xor
xchg
pop
jle
pop
(bad)
adc
push
xchg
mov
sub
imul
gs
xchg
aad
out
jg
add
pop
jp
pop
(bad)
aad
out
jno
enter
(bad)
pop
adc
xchg
xlat
test
xchg
(bad)
int
and
imul
movs
adc
pop
out
fistp
cmp
adc
(bad)
faddp
xchg
adc
sar
sub
sar
das
dec
or
je
xchg
push
ror
jo
sub
in
test
in
fwait
cs
mov
cmp
mov
jns
cmp
push
xchg
in
imul
pop
cs
out
stos
adc
mov
repnz
call
and
sbb
mov
int3
mov
jmp
popa
push
ins
sar
loopne
mov
add
jmp
xchg
adc
stc
ds
cmp
mov
add
dec
mov
icebp
retf
loop
fwait
and
and
push
cmc
inc
retf
lods
bound
data16
pop
sbb
out
mov
scas
sbb
std
movs
out
mov
sub
inc
test
push
bnd
loope
fbstp
xor
pop
iret
adc
cld
mov
hlt
mov
bound
jmp
pop
or
lahf
dec
sti
mov
pop
imul
mov
shl
push
scas
nop
jp
jb
fild
add
test
clc
retf
xchg
pop
mov
inc
pop
push
jb
xor
and
(bad)
mov
mov
std
mov
dec
cmps
jecxz
and
movs
cs
fdiv
outs
sub
lahf
xchg
cmp
test
shl
pop
jecxz
dec
je
sub
sbb
les
sub
inc
stos
jp
cmp
fcmovnbe
sbb
fwait
mov
hlt
aaa
test
iret
(bad)
outs
push
stc
popa
push
(bad)
jae
std
stc
fucomip
outs
mov
xchg
cdq
outs
out
sbb
cs
xchg
push
data16
pop
call
mov
retf
cld
jb
clc
in
dec
sub
pop
jg
int
icebp
repz
je
jg
lods
pop
call
in
retf
(bad)
aaa
dec
shl
cmp
ror
ds
(bad)
repz
(bad)
popf
xchg
int
call
pop
shr
sbb
mov
cmp
lahf
push
push
stc
stos
cmp
popf
pop
push
and
in
shl
or
(bad)
sahf
fcom
cmp
fst
addr16
jmp
cmp
xor
icebp
stos
add
mov
mov
mov
inc
adc
repnz
mov
movs
ins
mov
sub
stc
xor
pop
pop
call
mov
in
and
shl
in
add
sub
mov
dec
aaa
cli
scas
pop
jmp
mov
imul
sub
cmps
aas
(bad)
popf
xor
movs
push
jbe
out
xchg
sbb
iret
dec
xor
aas
in
add
mov
push
xor
imul
fwait
cmp
mul
lahf
repnz
lods
pusha
add
ds
mov
sahf
and
in
xchg
clc
call
mov
or
xchg
push
mov
popa
loop
repnz
push
add
sti
(bad)
imul
fs
inc
sbb
es
scas
scas
cmp
sub
enter
push
and
add
mov
inc
mov
sahf
outs
enter
in
adc
in
sub
add
icebp
mov
dec
enter
das
mov
xor
jg
into
stc
lds
mov
pop
mov
movs
inc
add
push
adc
ins
adc
xor
push
enter
sub
jb
mov
pop
sub
scas
adc
(bad)
cwde
repnz
mov
das
ror
jnp
lahf
inc
ins
outs
mov
mov
add
inc
push
pop
sbb
jb
add
and
xchg
retf
addr16
out
fwait
inc
div
test
xchg
cs
xor
outs
pop
fcomip
lods
pop
push
hlt
push
cmp
xchg
dec
test
in
mov
ret
fs
mov
(bad)
dec
outs
(bad)
mov
jbe
or
pop
stc
mov
xchg
sti
stos
or
mov
scas
push
sbb
mov
sti
jmp
outs
or
fnstcw
clc
mov
inc
int
add
add
out
mov
pop
mov
mov
mov
adc
aaa
les
add
push
xor
imul
(bad)
in
rcl
push
pop
imul
pop
lock
repz
xchg
lods
ret
mov
cwde
add
out
sub
test
ds
ror
mov
cmp
stos
push
cmps
dec
call
lds
cmps
push
loope
lods
push
xchg
fcmovnbe
cli
aaa
cmp
pop
mov
(bad)
in
fdivr
sbb
ins
mov
add
repnz
mov
bound
mov
xor
out
pop
inc
(bad)
cmp
retf
jge
or
scas
cdq
(bad)
mov
cmps
cli
mov
aad
inc
daa
fsubr
je
retf
mov
pop
in
sahf
(bad)
leave
push
jnp
inc
cmp
out
sub
cli
iret
xchg
cmp
adc
mov
sbb
or
es
ror
push
iret
inc
jae
sti
inc
or
out
mov
lock
mov
(bad)
rcl
fldcw
test
jbe
xchg
iret
jmp
out
out
(bad)
xlat
mov
sub
cmp
loop
popa
pavgw
xchg
pop
cmc
mov
fld
inc
cmp
jmp
mov
mov
jns
stc
mov
pop
fisub
(bad)
mov
and
push
jb
mov
imul
in
mov
lock
aas
in
cmp
test
mov
pop
mov
mov
cdq
pop
retf
mov
jl
sbb
xor
or
out
fild
ret
mov
not
mov
push
pushf
scas
in
mov
in
inc
jecxz
pop
jne
xchg
ins
fidivr
pusha
movs
jmp
push
pop
xlat
fsubr
fidiv
xchg
adc
and
mov
mov
out
cmp
(bad)
inc
sub
cli
and
nop
mov
cdq
mov
ja
xor
out
xor
sar
jmp
dec
lods
mov
rcl
test
cli
mov
ja
pusha
out
inc
jg
(bad)
call
outs
mov
cmps
jns
sub
mov
mov
test
dec
aas
stc
(bad)
jmp
adc
sar
xor
(bad)
stc
inc
cmp
mov
mov
push
movs
(bad)
aaa
jae
cmp
inc
xlat
mov
imul
pusha
retf
std
cmc
mov
adc
jg
fistp
ffree
mov
sbb
hlt
ja
pop
pop
mov
cdq
cmp
gs
add
push
out
pushf
sbb
xor
rcl
enter
iret
(bad)
popa
test
sar
je
mov
in
fldenv
out
stc
ja
sbb
mov
mov
jo
dec
lahf
ret
fld
movs
inc
aam
aaa
mov
pop
push
cmp
sti
test
jmp
pop
mov
push
std
ss
xchg
xor
outs
cmp
int
cwde
(bad)
popf
dec
cmc
in
pop
inc
int3
xor
xchg
sbb
je
bound
jle
jae
loop
adc
ret
and
(bad)
popa
xchg
jmp
cwde
mov
aam
jne
fmulp
std
xor
cmps
cmps
stc
into
push
(bad)
jp
inc
jmp
xchg
aas
adc
mov
mov
shr
retf
cmp
in
jmp
not
sti
call
dec
inc
sub
dec
cmps
add
adc
jno
pop
jge
cmp
mov
sbb
push
add
adc
ds
aad
pop
in
inc
mov
mov
mov
mov
mov
movd
xchg
stos
in
adc
push
inc
push
icebp
mov
and
adc
xor
xchg
and
xor
jg
out
cli
push
mov
jmp
les
fwait
inc
test
pop
clc
jle
pmullw
inc
call
fild
in
inc
mov
dec
sub
outs
psraw
lahf
pop
add
not
sub
sbb
out
cs
dec
mov
push
jae
ret
mov
mov
in
push
pop
retf
adc
lods
jle
jae
out
rcr
pop
(bad)
out
pop
and
cmp
xchg
mov
dec
xlat
repz
aaa
add
xor
fidiv
inc
icebp
dec
pop
cmp
and
outs
pop
fst
outs
in
mul
ins
jle
(bad)
shl
push
out
aas
add
mov
mov
lock
and
mov
pop
lea
mov
fdivr
ss
cmps
imul
jp
lods
mov
pop
push
out
xchg
fwait
jnp
(bad)
repz
not
jp
add
dec
push
icebp
scas
cwde
jmp
dec
inc
test
and
pop
push
cmp
daa
and
mov
pop
ins
dec
test
xchg
sbb
mov
or
aaa
mov
dec
or
push
clc
inc
cmp
mov
jmp
pop
xor
or
pop
xchg
pop
mov
lods
lock
ret
fcomp
mov
adc
out
inc
adc
pop
mov
ds
and
dec
and
fidiv
lds
pop
mov
aaa
mul
push
adc
shr
adc
mov
pop
sub
outs
nop
sub
daa
push
stos
mov
movs
inc
dec
retf
mov
inc
test
repz
(bad)
xor
and
jmp
push
(bad)
pop
jmp
push
jne
dec
xchg
js
call
outs
and
push
add
mov
fnstenv
test
popa
aad
stos
sbb
aam
outs
(bad)
mov
aas
fisttp
mov
ins
cmp
lods
data16
arpl
or
xlat
in
adc
jmp
rcr
jge
retf
shl
call
jl
pusha
inc
sbb
xchg
(bad)
cmp
repz
stos
cwde
inc
je
loopne
call
xchg
imul
ins
lahf
movs
(bad)
mov
push
jbe
fbstp
es
mov
cwde
pop
push
mov
bound
retf
cmp
mov
pusha
leave
adc
clc
pushf
paddsb
xor
adc
or
inc
leave
(bad)
cs
test
adc
pop
nop
lods
cvtps2pd
pop
jle
aas
(bad)
lahf
test
xlat
sbb
and
retf
or
in
xchg
stos
movd
inc
add
push
imul
push
mov
xor
inc
in
sub
scas
pop
mov
ds
mov
daa
stos
add
dec
repz
in
sub
xchg
pop
js
or
mov
cmc
push
in
fstp
pop
ret
fidivr
xor
pop
loope
fisub
nop
mov
retf
aas
jmp
mov
cmp
add
xchg
mov
rcl
and
leave
push
lea
pop
popa
jge
pmuludq
inc
jge
xor
lock
fstp
xchg
imul
add
(bad)
into
(bad)
rcl
ror
jnp
cdq
or
(bad)
pusha
xor
jo
or
or
ins
adc
mov
dec
sbb
push
inc
rcl
inc
pand
sub
and
and
iret
imul
add
(bad)
dec
fidivr
lock
pop
cmp
lods
jno
(bad)
cmp
cmps
mov
rcl
in
sbb
push
inc
mov
or
je
inc
js
fadd
dec
mov
sbb
cmp
xor
leave
(bad)
cmp
pop
jmp
xor
mov
sbb
stos
push
aas
daa
ins
enter
jns
jnp
jmp
not
mov
jne
jbe
rol
xchg
paddusw
scas
gs
mov
cmc
cdq
stc
nop
(bad)
sbb
jae
call
push
lea
js
jge
sbb
in
push
pop
arpl
mov
push
jle
mov
and
pop
or
aas
jno
sahf
mov
(bad)
cmc
mov
test
scas
jp
fst
xchg
loope
mov
icebp
rcl
inc
sub
jp
pop
imul
xor
shr
test
dec
sbb
stos
xor
call
call
cmps
dec
icebp
in
mov
sti
inc
and
in
sub
aad
ror
push
jnp
fist
mov
fcom
call
add
cmp
fwait
pop
es
jp
fdivr
inc
push
xchg
sub
les
adc
popf
or
add
jb
jmp
xor
and
pop
add
add
popf
xchg
(bad)
in
mov
pusha
mov
lock
mov
inc
add
push
mov
int
inc
call
fldenv
pusha
mov
xchg
ins
cdq
push
(bad)
cld
and
aaa
sub
add
inc
jns
movs
(bad)
call
sbb
xchg
sub
jnp
movs
add
inc
and
mov
aaa
aad
nop
outs
shl
push
std
es
mov
call
mov
add
sahf
sbb
jle
mov
or
xchg
dec
inc
pop
xchg
inc
pusha
loope
adc
gs
shl
rol
push
mov
nop
or
test
(bad)
mov
adc
mov
sbb
mov
add
popa
imul
scas
sar
push
cmps
adc
add
mov
fidiv
or
xlat
icebp
sub
bound
and
popf
movs
dec
push
mov
mov
out
jge
imul
and
mov
add
push
inc
add
mov
mov
nop
(bad)
je
popa
lahf
aas
pop
(bad)
dec
xor
jle
mov
out
mov
adc
lock
dec
pop
movs
test
mov
jno
sub
ja
inc
ds
test
fnstenv
mov
xor
jle
push
jbe
xor
rol
call
cld
push
cmp
mov
scas
cld
cmp
cmps
inc
mov
hlt
mov
add
cmp
cmp
jb
inc
or
icebp
jae
rol
jle
push
push
pop
aas
push
add
xchg
pop
push
cli
cmp
xchg
push
xchg
cmp
or
jle
mov
add
sbb
cmp
pop
loopne
outs
jae
mov
lock
add
mov
dec
cld
push
sbb
jp
ins
mov
push
mov
xor
ret
add
out
push
aam
fbstp
or
xlat
(bad)
push
add
call
mov
xor
xchg
sub
lods
in
xlat
inc
(bad)
outs
lods
or
inc
imul
xchg
(bad)
and
cwde
cmp
rcr
push
cmp
fnsave
dec
inc
aas
xor
arpl
hlt
pop
fbstp
add
mov
aad
inc
dec
cmp
jmp
in
add
adc
mov
ins
jne
mov
pop
ss
pop
cmps
scas
sbb
or
idiv
mov
and
frndint
mov
outs
loope
cmp
cwde
retf
daa
push
push
push
stos
mov
xchg
dec
arpl
cdq
jne
inc
out
sbb
ins
(bad)
xlat
ss
enter
shl
sub
call
mov
mov
jno
jmp
aaa
loop
dec
rcr
xchg
sbb
push
(bad)
push
lods
jbe
dec
movs
aad
sahf
mov
data16
push
seto
shl
cwde
retf
fisubr
cmc
arpl
into
or
std
imul
mov
js
xor
xlat
xchg
pop
repz
ror
mov
mov
cmps
in
ret
and
ins
aam
cmp
in
jns
cmc
in
pusha
xchg
and
ret
int3
fbstp
fsubp
jns
mov
mov
outs
fidiv
bound
ror
les
sub
mov
(bad)
ds
pop
test
dec
retf
in
mov
lds
retf
lahf
jmp
jp
pop
inc
pop
js
stos
mov
iret
sub
ds
lds
dec
leave
loop
into
xor
int
xor
or
jno
repz
push
push
call
cdq
popa
mov
lock
push
or
mov
adc
add
imul
fdiv
popa
scas
cmp
hlt
dec
pop
mov
sub
fmulp
and
int3
test
and
aad
adc
call
jmp
inc
add
mov
mov
and
mov
rcr
ficomp
cmc
arpl
into
sbb
sbb
popa
sbb
stos
sbb
adc
mov
addr16
or
xchg
fcom
rol
sbb
jo
(bad)
sub
(bad)
retf
xchg
xchg
mov
cwde
jl
in
pop
out
fistp
test
fidivr
ror
xor
les
xor
inc
fwait
add
push
sub
pushf
outs
daa
jmp
mov
jp
into
jge
(bad)
movs
mov
push
and
mov
imul
push
xchg
into
pop
push
gs
ss
dec
scas
mov
jmp
add
sti
mov
(bad)
or
push
imul
test
dec
xchg
xchg
inc
icebp
cli
xchg
fcmovne
call
add
push
lods
jmp
mov
into
sbb
sbb
xchg
cld
xor
mov
jecxz
shr
jle
fs
or
movs
int
pop
mov
jg
mov
mov
fld
inc
aam
and
pop
(bad)
stc
xchg
mov
(bad)
scas
xor
jno
or
adc
out
jecxz
in
mov
dec
popf
out
retf
inc
clc
in
(bad)
lods
sub
pop
das
outs
shl
adc
dec
hlt
js
hlt
cwde
ja
out
repz
push
mov
push
sahf
(bad)
mov
sbb
xchg
movs
inc
out
iret
mov
pop
fadd
mov
lock
xchg
movs
imul
inc
mov
xchg
imul
sub
adc
push
and
xor
mov
imul
mov
cmp
fnstenv
dec
ror
retf
pop
movs
fild
or
clc
shl
lods
push
pop
sbb
lock
mov
adc
push
adc
jmp
call
retf
add
mov
jmp
test
xchg
inc
ret
icebp
pop
test
mov
sub
gs
adc
retf
pop
sahf
dec
imul
fstp
cmp
mov
mov
push
pop
test
pop
sbb
mov
sub
mov
rol
pop
jmp
sub
clc
mov
js
push
xor
stos
stc
loop
fsubr
shr
inc
sbb
ret
cdq
neg
pop
jne
fadd
xor
out
mov
std
sub
fbstp
in
ja
jno
nop
jmp
jp
call
push
inc
mov
xor
test
dec
dec
jo
repnz
push
cmps
aam
push
(bad)
jne
jne
push
push
xchg
add
enter
jmp
pop
and
push
push
ds
push
pusha
xor
sbb
mov
jnp
jp
inc
dec
xlat
mov
adc
and
cmp
xlat
in
idiv
jecxz
jne
scas
add
shl
push
arpl
or
mov
stos
jecxz
xchg
pop
outs
ja
jle
sahf
fnsave
inc
mov
xchg
pushf
xlat
mov
fxch
cmovle
mov
fwait
pushf
or
es
fmul
mov
rcl
aam
mov
adc
mov
sub
test
mov
dec
pushf
push
pop
repz
push
push
jge
pop
add
xchg
sar
push
shl
push
cmp
dec
mov
stos
repnz
gs
(bad)
pop
cmc
scas
jmp
push
mov
addr16
leave
leave
and
std
mov
test
cdq
(bad)
out
fmul
dec
mov
(bad)
mov
fdivr
or
ds
fild
mov
repz
adc
fimul
sti
cmps
lds
movs
xchg
pop
and
xor
pinsrw
dec
lahf
jge
ds
sub
cmp
push
jp
adc
jp
movs
pop
cmc
loopne
or
ret
test
mov
push
mov
fiadd
movs
fcomp
stc
sub
dec
jmp
inc
das
xlat
test
xchg
or
aam
movs
div
jne
inc
std
ja
sub
sub
lods
adc
jae
stos
jns
sub
test
push
inc
jmp
cmp
and
fsub
dec
int3
mov
aam
mov
jne
push
xor
clc
mov
bound
(bad)
movs
push
(bad)
sar
cmp
jmp
fsub
aam
pavgw
add
cmp
int
mov
mov
mov
sub
mov
adc
ins
out
inc
mov
imul
cmp
mov
pop
in
retf
test
sub
cmps
(bad)
test
jns
rcr
outs
xchg
mov
das
les
xchg
mov
cmp
cli
bound
mov
pop
test
mov
dec
movs
xor
aaa
push
mov
cmp
ins
leave
dec
pop
jo
adc
daa
ret
nop
adc
test
call
push
cmc
mov
or
movs
xchg
pop
jl
push
daa
dec
in
sbb
add
pop
mov
mov
arpl
cmp
out
lods
nop
and
aaa
jp
jb
pop
out
lahf
adc
xchg
jae
sub
inc
je
jge
dec
scas
inc
mov
cmps
push
cmps
and
sbb
jmp
or
pop
pop
pop
sub
lea
jb
adc
lods
fidivr
test
leave
outs
dec
push
out
scas
cmp
(bad)
xchg
ds
pushf
add
pop
push
jl
fs
xchg
lds
lods
jl
xchg
and
rol
call
pusha
outs
mov
call
call
in
les
mov
imul
rcl
jecxz
into
aam
xlat
dec
cmp
sbb
mov
in
aam
lock
mov
pop
pushf
pop
jge
mov
mov
cld
iret
scas
cmps
loope
push
push
daa
das
jne
sub
icebp
add
sbb
xor
in
es
xor
jmp
dec
jecxz
test
mov
cli
mov
fs
sbb
sub
xor
and
jmp
adc
adc
outs
and
adc
jae
dec
enter
aam
hlt
push
fcmovbe
push
xchg
fdiv
pop
push
ins
and
xchg
loopne
popa
or
inc
cmp
push
sbb
mov
icebp
mov
adc
xchg
xchg
push
stos
out
mov
(bad)
jns
and
mov
arpl
and
jnp
in
jno
or
cmp
xlat
fsubrp
mov
stos
fs
mov
cmp
out
and
mov
mov
mov
push
in
das
call
mov
test
xor
mov
dec
or
cdq
and
and
call
or
repnz
fsub
mov
xor
retf
fucomi
cmps
mov
sti
push
mov
lock
nop
mov
ror
rcl
cli
xor
mov
or
or
jmp
aam
sbb
ja
push
and
adc
movs
cs
dec
or
mov
pushf
cdq
xor
das
pop
retf
mov
add
mov
aad
add
test
bsr
pop
lods
out
int3
mov
loop
jb
dec
mov
xchg
adc
inc
xor
jle
fild
dec
adc
mov
push
sbb
dec
xchg
scas
xchg
test
(bad)
and
jno
mov
(bad)
fisub
sub
xor
push
xor
sahf
cdq
rcl
rcl
fsubr
mov
jg
dec
jge
arpl
cmps
push
mov
xor
cmp
jns
sti
(bad)
int3
lock
sbb
xor
jmp
sub
ss
or
pop
js
leave
cmp
aas
xor
xchg
pop
and
fadd
mov
cli
pop
and
jmp
test
hlt
loope
or
mov
cmp
cli
dec
mov
and
retf
outs
push
ret
retf
cmp
pop
addr16
mov
dec
fld
xor
cmp
add
xchg
jmp
jmp
sub
adc
(bad)
mov
stc
cmp
(bad)
mov
cli
scas
sub
xchg
fistp
sbb
pop
ins
shr
out
into
out
ja
mov
cmp
out
iret
popa
cmp
fcomp
jns
ror
cmp
cmps
mov
scas
xchg
or
sbb
bound
jo
mov
inc
mov
jne
push
jne
adc
adc
loopne
ins
fisttp
mov
cs
xlat
aaa
inc
mov
sub
xlat
dec
push
and
ss
push
sub
sar
rcl
push
mov
jmp
pop
dec
and
jg
mov
push
lods
sbb
pop
pop
iret
call
or
pushf
repz
adc
mov
jg
and
inc
outs
inc
mov
shl
out
shl
ins
dec
xchg
or
jo
mov
mov
test
pop
cld
stos
call
out
add
jmp
shl
dec
inc
test
dec
(bad)
aas
jae
mov
out
cmp
mov
mov
outs
outs
dec
fstp
jae
mov
or
ret
enter
ret
pop
test
cmp
fnsave
data16
pop
xchg
mov
jne
dec
mov
data16
jle
cmp
cmp
(bad)
xor
inc
stos
inc
adc
jns
push
rcl
test
jle
adc
mov
aad
mov
push
dec
and
or
and
adc
arpl
sub
clc
lods
fld
je
jae
jns
mov
in
aaa
pop
sbb
arpl
jb
dec
or
xchg
call
scas
jae
cs
mov
or
xor
and
sbb
cmc
ror
mov
hlt
ror
mov
outs
pop
add
pop
jbe
pop
ror
pop
fdivr
pushf
enter
out
imul
jecxz
push
and
mov
scas
addr16
repnz
or
add
adc
sub
dec
inc
into
shl
mul
jp
ins
or
push
daa
mov
push
std
sub
icebp
test
hlt
mov
ins
hlt
mov
sbb
(bad)
sub
and
mov
adc
push
out
push
cmp
mov
mov
stos
push
setae
push
stos
sbb
(bad)
cmc
popa
lock
push
ss
ret
cmp
add
outs
enter
in
aas
or
fidivr
xchg
and
cmp
push
push
xor
xor
xchg
inc
add
mov
mov
cmp
or
fidiv
mov
xchg
pop
inc
jl
(bad)
std
sbb
inc
lods
xchg
and
outs
lods
jecxz
xor
in
jb
repz
stc
sti
mov
ins
test
retf
pushf
mov
js
push
xchg
retf
dec
in
outs
test
dec
mov
mov
(bad)
cmp
jns
dec
test
into
pop
(bad)
xchg
dec
xchg
out
or
xchg
scas
mov
in
dec
or
or
adc
loopne
shl
jno
movs
fdivp
jecxz
push
pushf
dec
mov
movs
mov
inc
xchg
xchg
outs
or
pop
das
add
push
adc
sbb
ret
xchg
imul
and
lea
int3
sub
mov
popa
test
in
retf
sbb
mov
not
cs
and
push
pop
push
xchg
mov
sub
lods
(bad)
call
test
xor
enter
aaa
ins
in
ja
(bad)
(bad)
mov
outs
nop
fs
shl
loope
ret
movs
or
mov
loop
(bad)
(bad)
cld
loop
xor
sbb
enter
adc
das
dec
inc
mov
mov
pop
mov
loopne
imul
bound
(bad)
arpl
mov
jbe
mov
mov
dec
stos
dec
sahf
repz
into
es
adc
movntq
outs
cmp
inc
ins
inc
enter
mov
ins
add
add
hlt
pushf
(bad)
cmps
and
xor
in
out
pop
adc
cmp
push
sbb
add
and
scas
sub
push
adc
jp
cld
xchg
(bad)
sar
in
push
dec
xor
inc
cli
mov
xor
lahf
cmp
loop
add
mov
xchg
xor
ror
jmp
jle
cdq
fnstsw
enter
mov
jnp
mov
scas
in
daa
mov
(bad)
inc
xor
mov
mov
cmc
xchg
out
jns
sub
xchg
shl
jno
mov
mov
jo
jle
cwde
and
js
pop
fild
mov
out
(bad)
aam
cwde
fwait
mov
pop
sub
add
sbb
mov
pop
std
mov
cmps
xchg
pop
neg
or
xlat
jp
imul
mov
sahf
cmc
mov
pushf
xchg
imul
pop
cmp
xchg
cdq
inc
sub
rcr
je
aas
test
daa
adc
cmp
leave
cmps
out
(bad)
xchg
(bad)
out
test
sub
inc
pop
enter
or
inc
or
sub
fnstsw
and
sbb
repnz
nop
addr16
cli
jp
test
xchg
push
dec
or
fs
mov
push
mov
neg
int3
adc
sub
xchg
fsub
xchg
xlat
sbb
sub
dec
mov
xchg
pop
pop
pop
and
loop
pop
hlt
xchg
ja
inc
mov
(bad)
cmp
std
and
mov
add
or
pop
fisubr
cmps
inc
sbb
adc
push
call
sbb
stos
cmp
mov
sub
das
neg
sbb
sub
jmp
das
mov
pusha
int3
jge
lds
push
fnstenv
pop
js
call
push
lea
sbb
pop
stc
ja
xchg
das
xor
lea
pop
retf
mov
cmps
mov
push
jmp
jns
adc
stos
or
push
add
and
inc
dec
dec
ret
retf
push
mov
mov
mov
push
dec
jne
rol
rcr
dec
mul
push
pop
sub
sbb
loope
mov
aam
add
add
mov
cmp
pop
dec
shl
fwait
retf
lods
mov
adc
pop
jmp
iret
inc
scas
cmps
inc
dec
sbb
xchg
jge
xchg
lea
fbstp
pop
mov
push
ror
stc
sbb
xchg
jg
add
(bad)
jno
or
mov
fs
jmp
test
or
push
mov
dec
rol
int
es
mov
adc
and
sub
add
sbb
xchg
sub
addr16
dec
push
leave
push
push
add
daa
sub
rcr
sahf
test
pop
pop
jns
jnp
pop
mov
movs
add
adc
sbb
fwait
les
adc
cmps
xchg
out
loop
sub
mov
data16
mov
cwde
fiadd
iret
imul
mov
or
bound
aas
out
pop
adc
enter
gs
lock
mov
sbb
int3
push
(bad)
cmc
xchg
inc
xchg
jbe
dec
cld
ret
xchg
je
(bad)
pop
enter
sahf
cmp
inc
inc
call
les
stos
and
dec
mov
xchg
dec
xlat
add
dec
fstp
fld
adc
xchg
movs
mov
mov
jno
mov
ret
aam
mov
int
jb
icebp
xchg
or
inc
iret
xor
mov
(bad)
jmp
(bad)
iret
cdq
pop
js
cmp
and
pop
lds
cmp
es
pushf
imul
out
jbe
adc
add
or
(bad)
xchg
rcl
push
sbb
popa
in
and
ss
mov
pushf
jmp
push
inc
aam
mov
push
data16
xor
cmp
ds
dec
xchg
leave
(bad)
adc
xor
and
sub
jp
int
inc
cmp
inc
imul
movs
mov
xchg
xor
int3
jae
cwde
fmul
jns
pop
leave
shl
dec
push
dec
js
icebp
and
icebp
xor
in
inc
sub
maxps
cmp
pop
dec
icebp
add
jmp
xor
cmp
mov
dec
fld
or
xchg
aas
not
push
mov
add
jmp
jno
fist
mov
cwde
retf
cmp
add
adc
dec
push
xchg
std
mov
push
popa
push
pop
and
fdivr
test
popa
je
add
inc
xchg
ds
dec
or
test
push
repnz
and
dec
stc
xchg
sbb
add
cmc
iret
aad
dec
pop
fiadd
sub
and
sub
or
mov
into
sub
lods
xchg
pop
jge
ja
nop
jecxz
mov
add
addr16
xchg
inc
mul
cmp
xor
jmp
in
jle
or
mov
repz
xor
xor
jb
fidivr
std
cmp
imul
dec
popf
xlat
adc
daa
jb
or
test
stos
ds
hlt
mov
std
test
jmp
pop
xchg
cmp
frstor
pop
adc
cmps
push
push
sbb
mov
sbb
push
lahf
popf
enter
mov
in
sub
(bad)
loopne
mov
retf
fld
in
inc
or
mov
cwde
in
movs
dec
out
dec
push
addr16
rcr
sub
dec
add
ffree
aas
push
adc
fadd
jmp
or
fisub
jg
mov
ins
inc
mov
jns
in
cmp
cwde
enter
je
and
mov
sbb
das
scas
fdiv
push
call
aad
into
pop
sbb
or
lahf
mov
add
sti
retf
and
mov
jbe
mov
and
das
lods
pusha
dec
jb
xor
sub
xor
imul
gs
loope
imul
or
add
mov
push
inc
sbb
sbb
iret
loope
mov
cmps
cmp
push
sbb
repz
into
(bad)
out
jbe
enter
sbb
cli
aad
retf
cmc
push
push
cs
sub
icebp
stos
js
mov
push
mov
shr
mov
(bad)
lods
rcl
jmp
push
fdivr
pop
nop
jae
cmc
and
jnp
jge
icebp
dec
leave
mov
adc
jb
repz
xor
fbld
sbb
nop
out
in
adc
mov
enter
lods
sub
jmp
dec
dec
xchg
ins
xchg
sar
pop
repnz
pop
outs
outs
jl
(bad)
ja
sar
cmp
and
adc
xor
sub
push
pop
jge
fst
sbb
popf
inc
xlat
sub
xchg
lds
jge
imul
jb
dec
mov
mov
adc
les
push
fdivr
aas
cld
adc
xor
or
xchg
and
add
call
sub
mov
dec
clc
jmp
fcmove
fnstsw
adc
mov
out
xchg
add
shl
inc
mov
cmp
gs
pop
or
cmp
xchg
(bad)
shl
sub
mov
dec
sbb
and
ret
xor
lahf
loop
aas
xchg
retf
test
jle
mov
xchg
aas
mov
push
lods
mov
fnstsw
addr16
fiadd
scas
or
jecxz
das
xchg
jp
and
dec
mov
out
sbb
fwait
(bad)
int
clc
sbb
(bad)
xor
xchg
in
sahf
mov
cmp
pop
mov
sbb
enter
jnp
jmp
push
mov
pop
sub
stos
pop
push
pop
ja
push
mov
xor
and
cs
sbb
int3
cmp
pop
add
or
and
ror
test
icebp
in
inc
pop
sub
ins
jmp
lds
pop
add
or
das
retf
and
repz
(bad)
jmp
jno
dec
mov
sub
or
mov
or
call
aas
inc
(bad)
sbb
in
inc
ins
hlt
outs
push
jne
sub
mov
mov
pop
jmp
cwde
repz
jmp
out
mov
mov
xor
gs
retf
push
cmp
aaa
pop
jnp
repz
push
cmc
pusha
jl
loopne
mov
jecxz
mov
fmul
(bad)
cli
add
and
mov
cmp
adc
std
ss
mov
out
push
dec
out
test
fsubr
adc
ins
xchg
cld
pop
and
push
push
frstor
shl
pop
cmp
dec
jecxz
inc
xor
or
test
pushf
stos
pop
add
cld
cmp
outs
(bad)
push
retf
cdq
push
ja
mov
sbb
ret
mov
les
push
mov
out
cmove
ins
mov
outs
xor
add
sub
sbb
rcr
xor
sbb
mov
call
stos
push
cld
adc
mov
ret
pop
loop
mov
dec
retf
nop
cmp
fmul
mov
in
repz
add
mov
xor
fld
inc
(bad)
dec
ror
push
cmps
pop
arpl
push
retf
sub
and
test
mov
loop
icebp
xchg
jae
ins
jne
or
sub
pop
xchg
pop
loopne
ins
cs
mov
pop
cli
cs
jecxz
xchg
dec
mov
cmp
xchg
test
and
es
adc
dec
in
rcr
aaa
mov
sti
pop
inc
inc
(bad)
hlt
jg
test
fwait
push
out
dec
add
add
xchg
pop
cmc
mov
ret
jno
jp
inc
clc
mov
ja
dec
cmps
std
inc
mov
xchg
or
dec
cmp
std
or
sbb
pop
fnsave
ds
xor
in
push
jb
(bad)
mov
ret
push
xchg
sub
outs
mov
in
out
push
jb
fstp
or
mov
enter
mov
or
(bad)
loope
call
test
scas
jb
push
add
addr16
mov
and
jnp
push
sar
test
mov
iret
sar
movs
pushf
xor
jae
shr
not
repz
loope
xor
lds
fisttp
ror
jb
clc
or
jg
jno
ret
imul
mov
sub
inc
xchg
ins
mov
push
or
sub
xchg
push
inc
shl
or
inc
push
into
aaa
test
mov
jp
jmp
sti
and
mov
shufps
int3
shr
test
sbb
sti
jo
test
mov
nop
test
xchg
mov
rcr
ret
out
inc
aam
fdivr
cdq
inc
xor
cmps
and
fisub
mov
cmps
dec
std
xor
(bad)
outs
mov
sbb
pop
test
sbb
bound
dec
imul
sbb
std
adc
sub
das
jg
dec
shl
not
cmc
sahf
cmp
adc
inc
(bad)
nop
into
cmp
div
pop
mov
cvtpi2ps
push
in
xor
cdq
jmp
xor
js
sbb
dec
(bad)
xor
mov
ret
sbb
int
mov
jnp
jge
pop
(bad)
xlat
cmps
bound
retf
les
xor
add
data16
pop
jne
mov
mov
ret
fimul
mov
push
stos
push
shl
outs
rcl
aas
int
or
fld
dec
cmp
xchg
(bad)
and
std
inc
retf
cmp
bound
push
jno
pop
(bad)
in
or
adc
in
das
fst
cld
fisttp
(bad)
cmp
jnp
mov
mov
leave
jle
loope
shl
pop
icebp
mov
pop
mov
sar
shr
xchg
hlt
dec
xchg
in
loop
mov
push
or
sbb
xchg
add
push
hlt
pushf
and
pop
(bad)
push
(bad)
rol
repz
jb
push
popa
sub
mov
or
gs
sbb
pop
mov
fsub
jo
lods
(bad)
fdivr
aas
xchg
xchg
cmp
daa
outs
fwait
test
pop
sahf
loopne
arpl
idiv
adc
pushf
inc
into
jbe
push
and
xlat
pop
lds
stos
lds
enter
sar
retf
icebp
je
div
pop
nop
push
es
mov
push
pop
div
rcl
mov
aam
mov
data16
or
adc
cmp
lock
into
pop
xchg
fiadd
add
movs
imul
cmp
push
or
aaa
fstp
mov
dec
xor
sbb
xor
sub
fs
addr16
sub
xor
adc
or
fild
inc
mov
adc
shl
stos
les
outs
xor
sub
lods
xor
inc
adc
jecxz
in
jae
imul
and
ret
imul
scas
pop
fistp
sbb
jl
sbb
lock
iret
ss
fnsave
add
pop
fnstcw
xchg
sub
imul
int3
xchg
cwde
(bad)
iret
push
dec
loopne
(bad)
fdiv
add
mov
pop
xchg
gs
push
std
popf
sbb
xchg
imul
mov
add
dec
mov
adc
pop
xlat
sbb
outs
mov
sti
std
int
adc
outs
in
push
cmps
cwde
mov
dec
dec
push
jle
mov
push
ss
test
xchg
lock
out
push
jg
stos
pop
xchg
jmp
xor
jle
fmul
push
mov
shr
mov
sub
imul
das
addr16
xor
addr16
sub
cmp
mov
in
fdivr
jno
xchg
push
jne
mov
ds
inc
std
xor
addr16
shl
add
call
inc
pushf
mov
fnstenv
(bad)
cmp
xor
ins
xchg
and
out
cld
or
adc
scas
leave
jmp
clc
out
shl
aam
pop
stos
or
pop
mov
stc
inc
mov
sub
dec
mov
mov
dec
icebp
out
out
mov
stos
push
loope
push
push
jno
aas
cld
(bad)
push
jnp
(bad)
push
not
lds
push
retf
rcl
int
push
xchg
adc
js
jge
xor
ins
rsm
int3
push
mov
inc
lods
jns
clc
mov
je
xchg
idiv
adc
dec
mov
mov
cmc
add
sahf
ds
push
pop
cmp
inc
movs
jle
popa
inc
inc
push
imul
neg
push
mov
add
shl
jns
mov
push
and
call
adc
fs
cmp
jno
and
sti
inc
stos
mov
in
xchg
inc
push
push
dec
fistp
adc
or
mov
adc
mov
jmp
push
adc
jle
and
iret
dec
mov
dec
aas
inc
mov
out
sub
loope
push
sbb
(bad)
gs
mov
mov
nop
cmp
lahf
jle
inc
scas
or
jp
lods
rcl
(bad)
mov
push
(bad)
repz
cmovp
jmp
(bad)
fcom
xchg
cld
dec
nop
xor
sub
mov
imul
fst
add
dec
ins
mov
add
cs
sbb
add
adc
pop
dec
inc
test
sbb
or
mov
mov
inc
inc
rcr
jb
pop
loopne
dec
jmp
jae
xor
and
add
push
inc
pop
(bad)
call
jnp
mov
retf
hlt
stos
push
adc
out
sbb
jne
cmps
push
lds
mov
loopne
ret
shl
shl
cmp
jns
cdq
les
lea
into
adc
pusha
mov
jnp
sahf
cmc
test
xor
retf
fucomi
jmp
mov
sub
mov
jg
pop
mov
repz
aam
cmp
hlt
mov
sbb
xor
mov
and
mov
in
and
jae
out
push
jmp
ror
div
mov
xor
popf
mov
jge
std
jno
in
test
jae
movs
stos
sub
cli
mov
or
movs
pop
push
and
sub
inc
repnz
fs
bnd
jo
cli
sub
sbb
jae
hlt
fucomip
sar
jp
(bad)
adc
stos
ret
das
stos
into
and
dec
push
add
sbb
loop
arpl
mov
xor
dec
sbb
in
jno
dec
imul
xchg
push
and
xchg
jnp
nop
sub
cmp
int
(bad)
ins
inc
push
push
pop
loop
hlt
cmc
(bad)
imul
ins
fisub
dec
mov
jae
mov
aas
ds
lods
and
or
push
mov
out
pop
mov
mul
jae
fstp
out
adc
xchg
jp
stos
add
jmp
enter
pop
retf
pop
jns
and
pop
bound
inc
mov
sbb
dec
lods
jp
xor
sbb
inc
mov
xchg
out
add
test
xor
lds
push
mov
ins
and
xor
push
sti
dec
fs
arpl
cmp
add
sub
dec
sub
push
ja
in
ret
cwde
dec
in
mov
jb
xchg
adc
push
shl
add
inc
popf
or
sbb
inc
xor
(bad)
stc
sbb
es
adc
mov
nop
push
into
arpl
xchg
sub
pop
fwait
test
int
or
das
mov
lods
and
cmps
hlt
dec
or
call
rcr
mov
add
sbb
fld
cmp
test
data16
hlt
mov
cmc
imul
inc
xor
jmp
and
cmps
aaa
cdq
loop
aam
sbb
ja
and
lea
test
(bad)
pop
ss
pushf
(bad)
xor
adc
and
cli
fwait
(bad)
xor
ret
stos
or
(bad)
and
lea
fnstcw
cmc
jp
and
inc
and
adc
jmp
mov
sbb
sub
mov
sub
js
(bad)
data16
inc
pop
mov
rcl
add
push
mov
cmp
adc
repz
inc
jnp
mov
or
pop
mov
or
imul
sbb
cmp
push
pop
sub
stos
out
fsubr
arpl
pop
dec
(bad)
lea
push
xor
lods
loope
aaa
retf
or
mov
push
aaa
test
jl
fcom
xchg
test
jb
mov
jp
cdq
(bad)
lock
jno
call
aas
and
add
scas
inc
pop
cmp
in
fistp
adc
mov
in
dec
cwde
rcr
outs
mov
ret
sub
nop
aam
xchg
adc
mov
mov
jb
mov
mov
jb
adc
test
movs
icebp
pop
and
aaa
shl
shl
and
pushw
xor
es
adc
push
mov
fidivr
xor
das
je
cmp
imul
pop
lods
fbstp
into
leave
inc
gs
call
inc
mov
mov
rol
inc
mov
pop
mov
je
add
jbe
ja
aam
(bad)
push
cmp
add
popa
cmp
inc
mov
pop
ret
sbb
sbb
sub
push
or
pop
cmp
mov
std
call
rol
mov
retf
or
mov
xor
mov
sbb
cmp
scas
retf
inc
cmp
inc
jmp
xchg
jae
loopne
(bad)
test
cld
cmp
ret
jl
mov
cmp
dec
pushf
addr16
jp
pop
xor
mov
add
pushf
gs
loope
dec
sbb
pop
ins
jecxz
cmp
jo
pop
dec
das
cmp
mov
leave
(bad)
jo
loope
or
add
int3
add
ror
pop
repz
add
add
xchg
retf
inc
mov
rol
xor
sub
cmc
pusha
xor
adc
ret
(bad)
mov
es
mov
test
in
mov
cwde
push
hlt
push
sub
pop
cmp
sti
dec
in
cmp
int
dec
ins
cli
(bad)
mov
xor
popf
add
jbe
jge
ftst
lock
push
or
(bad)
int
mov
adc
adc
cdq
in
jno
imul
js
cmovs
ja
cmp
into
pop
jns
iret
xor
in
lock
cmp
js
scas
repz
mov
mov
mov
ds
fiadd
(bad)
xor
inc
sub
inc
repz
lock
fsubr
fiadd
adc
or
sti
add
in
cwde
adc
xchg
retf
(bad)
cld
pop
jle
jae
hlt
repnz
(bad)
hlt
jne
ror
ins
data16
(bad)
les
movs
jmp
out
mov
(bad)
lods
fist
xlat
jmp
cmp
mov
in
jl
or
int3
jmp
imul
repz
sbb
jmp
fistp
dec
mov
outs
sbb
(bad)
mov
iret
jge
mov
or
mov
xlat
clc
jnp
fnstsw
popf
fs
(bad)
xlat
scas
sbb
and
ds
in
cmp
dec
enter
fbstp
in
cld
push
cmps
push
jno
fucomi
jle
outs
and
xor
sti
jnp
stos
nop
lahf
repnz
repz
cmc
stc
xchg
std
ins
scas
(bad)
jb
ja
jge
pop
mov
xchg
ins
cmp
push
sti
loopne
jl
push
(bad)
out
push
hlt
mov
aas
inc
jo
clc
or
mov
pop
lds
aas
and
mov
addr16
loop
mov
pusha
inc
icebp
mov
in
dec
outs
(bad)
and
pop
add
and
jmp
jbe
sbb
aaa
or
mov
(bad)
and
inc
repz
stc
lahf
std
fldcw
mov
ret
(bad)
fisttp
enter
jb
ins
fisubr
push
cli
fsubr
and
aaa
popa
in
repz
pop
inc
pop
mov
xor
inc
dec
pusha
mov
outs
push
mov
ret
call
or
sbb
mov
mov
fdivr
xchg
push
sti
ror
sar
cmps
fmul
xchg
test
fsubp
(bad)
(bad)
lods
(bad)
nop
stos
inc
mov
sbb
jnp
std
(bad)
lods
push
ret
idiv
fmulp
fist
jmp
dec
adc
jl
xor
imul
std
test
mov
jecxz
xor
or
cs
arpl
sbb
dec
test
adc
cwde
mov
movs
xchg
dec
sbb
and
inc
push
(bad)
lock
popf
icebp
sub
jmp
cmp
mov
sahf
iret
pop
mov
adc
cmp
cmp
xchg
fisubr
test
jl
(bad)
test
jg
pop
je
pop
dec
fstp
mov
xor
scas
push
dec
pop
loop
inc
mov
std
push
sar
rcl
xor
cmp
hlt
and
cmps
gs
cmps
cmp
retf
repnz
adc
es
pop
mov
dec
pop
icebp
lea
imul
shr
stc
mov
pop
dec
pop
shr
(bad)
sahf
sbb
push
cmp
test
std
lahf
bound
jmp
movs
ds
(bad)
push
popf
adc
nop
jge
ficomp
jl
leave
push
jb
int
stos
loop
dec
sub
in
jge
lahf
mov
inc
icebp
fstp
in
sbb
lahf
push
js
les
xchg
fwait
arpl
cmp
jb
mov
dec
fist
mov
mov
mov
pop
in
mov
retf
push
stos
fidivr
popa
lea
fist
out
adc
jae
std
lods
repnz
jnp
sub
shl
pop
movs
cmp
idiv
icebp
push
push
dec
jge
and
push
pop
loopne
retf
cmc
jle
push
loope
movs
cmp
jmp
or
inc
fdivr
jp
cmp
fistp
inc
(bad)
fbld
inc
ja
mov
adc
popf
push
std
test
jb
jb
movs
imul
mov
(bad)
rol
mov
xlat
jo
outs
jecxz
into
mov
bnd
aad
mov
add
dec
outs
jp
test
cdq
mov
and
mov
cmps
jle
xchg
mov
lahf
adc
adc
mov
or
cmp
cli
mov
pop
xchg
push
xchg
outs
or
daa
jno
aas
cmp
loop
(bad)
pusha
and
push
pushf
lea
and
ss
or
sar
push
jb
lea
add
mov
hlt
ja
cmp
push
popf
std
inc
call
dec
dec
lea
into
push
push
mov
xor
(bad)
loopne
pcmpeqw
xor
xor
jno
rcl
dec
int
cmp
add
int3
or
and
xchg
push
xor
fcom
(bad)
fst
in
mov
retf
xchg
push
and
aad
jmp
cmp
jp
mov
xchg
and
aam
in
add
inc
popf
push
dec
inc
jp
jle
push
jnp
jo
mov
call
fwait
push
repnz
(bad)
sti
pop
inc
push
mov
int
adc
sahf
xor
pop
rol
push
push
jp
inc
jmp
out
dec
jne
push
cmp
pop
xchg
data16
push
dec
cmp
push
dec
clc
test
jns
jno
cmps
mov
sbb
push
lock
das
data16
mov
pop
imul
xchg
jmp
mov
inc
or
cmovg
push
mov
clc
inc
push
cmps
cmp
dec
aam
xlat
and
fidiv
push
pushf
mov
push
pop
mov
pop
sti
or
aaa
adc
add
inc
mov
scas
jp
push
dec
xor
pop
std
je
gs
dec
cmp
mov
pop
lea
sub
stc
icebp
pop
push
or
aaa
stc
outs
and
out
dec
imul
jmp
mov
sbb
cmp
fstp
dec
lods
jmp
scas
cmc
cmps
clc
or
xlat
hlt
mov
inc
mov
outs
(bad)
retf
fbstp
ins
into
(bad)
ja
lods
lods
jecxz
mov
(bad)
or
movs
inc
mov
mov
jne
outs
jo
add
jge
inc
les
out
cs
and
sti
movs
(bad)
out
jg
leave
jmp
jge
popa
jmp
lock
jg
xchg
imul
push
outs
pcmpgtb
cmc
mov
(bad)
jmp
arpl
xor
or
(bad)
sbb
mov
mov
dec
inc
test
dec
jae
adc
mov
cmp
sub
xchg
fwait
adc
push
out
sahf
push
les
sbb
mov
cmp
add
cld
aaa
loopne
aam
(bad)
push
mov
pusha
lea
fwait
rcr
push
jmp
fild
call
push
dec
dec
mov
cwde
inc
mov
lds
xor
mov
xchg
xchg
pop
push
or
inc
xor
shl
jbe
jle
mov
enter
sbb
dec
(bad)
push
add
fistp
pop
popf
mov
inc
fcomip
imul
add
jmp
and
jle
and
push
aad
fstp
ja
fcomi
pop
(bad)
cmps
scas
mov
int
push
mov
xchg
inc
sub
add
jne
clc
ret
call
jl
inc
mov
add
loopne
mov
mov
add
pusha
cmp
mov
shr
cmp
in
inc
sub
nop
xchg
and
out
add
inc
imul
loopne
jnp
mov
jle
dec
movs
or
mov
and
cdq
push
dec
imul
in
mov
pop
add
add
sub
fcmovne
lahf
push
pop
pop
xor
cmp
jle
mov
dec
adc
punpckhbw
nop
jae
in
and
mov
shr
fwait
push
or
imul
rol
jmp
cmp
fidivr
scas
cld
loopne
fadd
mov
ss
fmul
into
sbb
sbb
push
mov
pop
rol
repz
push
pop
sbb
mov
pop
add
(bad)
sbb
xchg
pop
les
dec
popf
mov
jnp
dec
jecxz
xor
inc
call
or
fisttp
push
pop
mov
(bad)
out
lds
movs
xchg
inc
sbb
add
jae
stc
adc
call
jbe
or
mov
ins
out
inc
pop
and
dec
test
add
push
inc
call
or
or
push
pop
pop
jo
mov
xchg
push
pop
mov
clc
lock
pop
add
cmp
push
fst
call
lahf
mov
ins
loopne
mov
mov
clc
fadd
ss
retf
push
loop
jo
inc
hlt
adc
sbb
add
adc
and
enter
push
inc
jmp
mov
sbb
sbb
(bad)
outs
inc
pop
inc
adc
mov
mov
push
popa
int
test
add
sti
ret
sub
aam
mov
movs
or
add
clc
jo
das
rol
sbb
icebp
adc
sbb
fwait
aad
pop
jge
dec
jp
(bad)
(bad)
mov
adc
mov
sbb
fnstcw
bound
sub
jecxz
clc
cld
popf
push
retf
sub
push
sbb
xlat
(bad)
mov
dec
and
icebp
mov
inc
cmp
retf
pop
call
enter
sbb
cmp
jno
outs
mov
inc
xchg
sbb
outs
inc
inc
lea
and
f2xm1
int
dec
push
movs
sub
fsub
jecxz
dec
out
xchg
jns
jecxz
mov
dec
push
js
dec
shl
rcl
arpl
mov
or
pop
call
int
rol
je
pusha
aam
cmp
cli
jmp
push
xchg
loop
cmp
cmp
ds
stos
pop
and
cmp
adc
test
dec
rcl
sub
push
and
pop
xchg
inc
fiadd
ret
or
sbb
sbb
inc
iret
jmp
pop
std
inc
xchg
or
mov
dec
sub
shl
in
inc
or
jne
dec
ds
mov
imul
ret
enter
and
mov
mov
pop
push
adc
sbb
xchg
sbb
dec
mov
mov
xchg
leave
dec
or
and
int
adc
mov
lods
sar
rcr
and
lock
in
and
sbb
mov
push
jl
jo
pop
push
and
push
scas
stos
sbb
push
cmp
and
sub
ins
ret
aaa
xchg
lods
call
stos
aad
xchg
sbb
or
cwde
inc
sbb
sub
fndisi(8087
push
ins
push
dec
in
out
pop
mov
push
add
xchg
rol
mov
leave
mov
xchg
sbb
sub
arpl
leave
inc
(bad)
out
pop
cmp
push
loopne
(bad)
and
adc
mov
adc
and
push
iret
sub
out
xchg
cmp
ret
cmp
push
push
mov
push
shl
xchg
rol
push
stc
rcr
push
and
or
pop
hlt
movs
and
xchg
lock
hlt
and
ret
xchg
add
lea
push
add
mov
ds
cmp
push
fwait
(bad)
retf
jl
movs
and
xor
out
and
test
mov
fs
mov
das
stos
jg
mov
cmp
push
xchg
mov
xchg
jnp
lods
popa
xchg
mov
sub
fwait
adc
shl
mov
sbb
mov
data16
test
loope
pop
int
pop
ror
sub
adc
xchg
aam
cmc
mov
push
(bad)
xor
inc
mov
test
xor
test
sub
outs
sbb
in
cmp
push
add
pop
push
test
sub
xchg
out
dec
dec
sahf
shl
xchg
mov
loopne
mov
sub
dec
and
mov
mov
inc
cmps
imul
push
push
arpl
sbb
jp
stc
stos
es
xchg
jl
bound
fdiv
clc
adc
dec
outs
push
jmp
xchg
and
mov
nop
mov
sbb
pop
xchg
(bad)
jb
dec
adc
rcr
movs
xor
outs
jecxz
dec
mov
mov
pop
jecxz
pop
js
ins
jno
cmp
sbb
in
sti
jg
jb
inc
xchg
fwait
es
sbb
retf
mov
mov
test
and
or
mov
mov
cmp
add
dec
push
adc
pop
sbb
adc
mov
dec
push
(bad)
or
adc
fsubr
ds
es
adc
sbb
in
cmps
sbb
stos
stos
or
(bad)
jecxz
dec
or
jo
popa
jno
jle
cmc
mov
movs
sub
xor
inc
add
ret
mov
test
mov
in
sbb
int3
lds
pushf
sbb
dec
or
mov
retf
inc
rol
mov
ret
cs
cli
xchg
jne
xor
pop
jb
mov
sub
push
scas
mov
into
test
sbb
xchg
mov
jo
sbb
cmps
(bad)
out
dec
dec
lahf
sahf
adc
in
pop
and
sbb
popa
inc
loop
mov
sbb
adc
mov
sbb
sub
inc
fsubr
stos
les
ins
lea
gs
xchg
cli
mov
jno
fmul
ds
nop
in
fwait
pop
jae
pop
xor
movs
dec
push
add
xchg
fs
loop
sti
push
or
in
nop
shl
out
adc
ja
add
cdq
and
and
mov
shl
inc
in
lea
xor
ins
lahf
pushf
dec
mov
call
mov
test
hlt
daa
sbb
xor
test
ins
gs
aad
adc
(bad)
test
(bad)
jo
or
jnp
mov
mov
ins
mov
and
dec
jb
in
in
mov
cdq
pop
mov
outs
movs
addr16
pop
xor
sahf
or
pusha
cld
inc
outs
push
xor
push
shl
test
ret
rol
cmps
outs
inc
and
lds
(bad)
sub
(bad)
jb
pop
lods
scas
lods
test
sbb
gs
das
fiadd
pop
ret
jnp
pop
dec
xor
or
fidivr
and
fmul
pop
or
xchg
sub
dec
or
stc
mov
jl
rcr
mov
inc
shl
sub
jb
adc
jecxz
push
not
push
mul
dec
and
lods
inc
xor
inc
inc
repnz
xchg
push
addr16
and
arpl
sub
mov
xor
xchg
loop
sbb
add
push
add
and
dec
into
int3
or
jae
pop
ins
jge
test
mov
cmp
adc
mov
inc
outs
xor
mov
jae
fdiv
inc
(bad)
in
push
nop
mov
inc
mov
xchg
js
or
pop
jmp
fld
dec
(bad)
push
dec
and
lds
pop
pop
int3
mov
jmp
jle
test
cs
jl
and
aad
jmp
icebp
test
mov
lods
frstor
add
mov
stc
xchg
sbb
test
and
ins
adc
push
adc
mov
mov
movs
popa
pusha
mov
lods
mov
mov
test
inc
jecxz
retf
out
and
test
xchg
mov
arpl
push
sub
lds
pop
ss
push
fisubr
ins
adc
add
jno
(bad)
xlat
in
mov
mov
and
push
call
cdq
retf
add
mov
cmp
or
stc
icebp
dec
push
or
fwait
adc
cmps
fild
js
add
or
dec
mov
push
cmp
(bad)
mov
das
sbb
je
add
mov
fcom
test
(bad)
cmp
push
js
loop
(bad)
(bad)
mov
dec
iret
stc
lods
inc
rcl
mov
cmp
nop
push
adc
pop
ja
and
xchg
xchg
test
leave
je
push
(bad)
sbb
xchg
dec
(bad)
xor
inc
xchg
movs
mov
mov
mov
xor
xor
adc
inc
pushf
loop
pop
adc
rcl
packsswb
out
adc
dec
xor
stc
shl
hlt
sub
jno
shr
bnd
cmp
stos
add
push
shr
movs
test
popf
xchg
ror
add
mov
sbb
mov
aam
call
push
inc
and
mov
cmp
xor
xor
push
xor
cmps
jmp
cmps
int3
jg
mov
mov
in
int
push
adc
fdivr
aaa
cmp
pusha
pop
cmp
jp
sbb
or
dec
jns
fadd
adc
pushf
call
pop
in
push
mov
int
and
and
mov
mov
mov
xor
adc
fwait
cmp
dec
hlt
pop
fnstsw
sbb
aaa
mov
jo
and
ins
add
pop
int
test
bound
mov
xchg
xchg
int3
ficomp
mov
aam
push
ja
jbe
xchg
lock
enter
sub
je
and
leave
push
imul
dec
xor
out
push
add
inc
push
dec
retf
mov
pop
sbb
cmc
pop
test
bound
mov
inc
xor
lds
and
push
mov
push
xchg
das
aas
movs
xor
outs
sbb
into
mov
ja
lea
sbb
pop
int3
rcr
cmp
movs
or
push
mov
xor
sar
mov
and
es
mov
push
cwde
sub
inc
movs
add
lock
test
jo
lds
out
push
cmp
adc
sub
ss
popa
jp
mov
stos
es
and
sbb
inc
dec
dec
stos
jle
push
sbb
pop
xor
clc
mov
jb
cmp
and
inc
jns
or
dec
pusha
test
test
xchg
movs
mov
mov
rol
es
pop
sahf
jo
daa
ja
adc
and
and
arpl
mov
aaa
dec
iret
(bad)
jmp
mov
mov
dec
pop
cmp
popa
cwde
jecxz
cmps
inc
lds
fwait
and
and
add
rol
mov
mov
dec
cmps
scas
mov
cmp
jae
and
js
(bad)
push
jge
stos
cmc
jb
sbb
and
push
mov
adc
mov
push
and
or
gs
sbb
inc
push
mov
aas
sbb
inc
lods
add
out
popa
fnstsw
cwde
das
mov
stc
pop
push
ja
popa
xchg
mov
lds
xchg
inc
inc
mov
not
addr16
sar
out
or
ret
lds
icebp
inc
xor
push
dec
neg
or
sub
pushf
arpl
xchg
scas
leave
push
ins
inc
cmp
and
fwait
and
(bad)
dec
es
fwait
jg
lds
mov
mov
rcr
push
jmp
fcom
xchg
or
mov
fadd
imul
mov
push
inc
and
ret
ret
idiv
add
rcl
fst
sub
nop
xchg
sti
cmps
outs
int3
xor
inc
cdq
jle
cmp
test
mov
loope
and
mov
xor
or
xchg
push
bswap
call
mov
cmc
(bad)
mov
inc
cmp
mov
in
out
sbb
push
pop
pop
mov
mov
iret
popf
jo
enter
inc
fs
test
adc
xor
sub
fadd
cmp
xor
pop
lods
cmp
icebp
into
and
pop
sub
(bad)
push
mov
adc
or
xchg
pop
pop
push
adc
inc
mov
or
dec
mov
push
sbb
add
stos
xor
pop
cmps
imul
push
jecxz
loope
push
inc
ds
ret
lock
jle
fwait
adc
les
(bad)
int
inc
in
sub
(bad)
and
fst
aad
add
lock
add
lock
test
lock
mov
mov
dec
pop
dec
(bad)
mov
cdq
pop
adc
movs
adc
or
mov
or
test
mov
ror
movs
(bad)
dec
add
sub
xor
adc
push
jecxz
xchg
pop
test
movs
adc
add
mov
or
cmp
aam
inc
imul
imul
test
mov
sub
cmp
adc
dec
mov
xor
in
or
adc
add
dec
pop
and
pop
mov
sub
pop
or
or
adc
push
lea
adc
sub
lds
xchg
(bad)
ror
and
and
shl
bound
inc
stc
test
fwait
sbb
fwait
movs
retf
push
cmp
out
jno
jnp
cmps
sbb
push
dec
cmp
movs
mov
push
sub
and
clc
(bad)
mov
cmps
mov
inc
cwde
rol
and
loop
xchg
add
repz
dec
pop
or
ja
inc
lea
rcr
mov
jno
or
pop
push
xor
xor
pop
fwait
mov
lock
ret
dec
addr16
icebp
fmul
mov
(bad)
jb
movs
mov
inc
pop
push
add
inc
lods
jbe
cmp
and
sub
dec
stc
sbb
in
inc
test
push
push
pop
pushf
ret
fst
pop
or
int
xchg
les
dec
push
into
inc
into
out
xor
mov
jns
fcom
sbb
inc
imul
mov
xchg
cmp
xor
shl
sbb
or
jecxz
sbb
sub
add
or
sti
pop
cmp
es
cmp
pop
not
adc
xchg
sub
ret
mov
loop
shr
jge
fldenv
and
sar
mov
inc
add
repz
(bad)
dec
ret
sub
mov
(bad)
sub
and
pop
mov
inc
jo
fwait
retf
call
or
adc
inc
sbb
aaa
lods
jbe
icebp
fwait
leave
xchg
xchg
push
xor
push
pop
in
je
imul
das
xor
inc
pop
mov
fldenv
xor
adc
mov
sbb
xchg
stos
mov
jmp
sbb
xor
pop
call
rol
imul
(bad)
out
or
push
imul
mov
add
scas
xchg
pop
ret
cwde
hlt
sbb
outs
adc
and
push
jmp
js
cwde
xchg
mov
dec
shl
mov
mov
cmp
push
or
dec
movs
add
cmp
add
lea
jo
cli
jbe
xor
xchg
daa
cs
add
adc
mov
xor
(bad)
dec
xor
gs
(bad)
in
ins
or
int3
jbe
add
or
sahf
outs
add
jp
(bad)
xchg
adc
jb
and
jo
mov
cmp
leave
inc
push
push
mov
push
or
mov
out
xor
pop
jp
inc
inc
inc
pop
cmps
push
fs
mov
hlt
jmp
out
and
jno
push
inc
jmp
inc
jb
xor
in
loop
ins
xchg
push
fs
fxch
mov
cmp
pop
sub
mov
pusha
(bad)
lods
das
pushf
pop
cdq
cmp
cmc
cmps
test
add
add
out
dec
dec
loop
xor
addr16
jmp
xor
inc
push
push
es
cdq
out
out
sbb
push
movs
or
gs
xchg
sbb
inc
inc
(bad)
push
ror
ss
mov
out
and
mov
in
cmp
xchg
adc
push
data16
or
int3
inc
sbb
jmp
dec
lods
das
in
cmps
fs
rol
in
mov
sbb
ins
jg
and
and
sub
push
add
inc
push
and
cwde
stos
repz
fsubr
fadd
std
test
inc
or
jnp
mov
inc
pop
lds
cmp
inc
in
fs
or
or
xchg
out
mov
adc
hlt
and
mov
cmc
(bad)
int
les
xor
cmp
nop
push
add
xchg
retf
int
and
dec
and
mov
push
sbb
sbb
bound
mov
mov
inc
push
cmp
or
rcr
sbb
sbb
pop
or
cmps
sbb
add
inc
xchg
pop
push
pushf
xchg
into
pop
loope
xor
retf
xchg
pop
adc
test
sbb
adc
nop
dec
sbb
cmp
dec
int
into
nop
xor
movs
push
cmp
mov
sahf
pop
xor
shl
out
xchg
or
mov
mov
hlt
jmp
lahf
retf
xor
movs
adc
add
aaa
push
out
clc
inc
pushf
push
nop
push
mov
jae
sub
pusha
ret
jae
sahf
add
dec
or
mov
mov
dec
pop
neg
inc
test
adc
pop
or
out
pop
cmps
in
int
or
gs
mov
hlt
lods
fs
or
inc
inc
sub
xchg
aaa
or
mov
xor
mov
inc
or
mov
jno
mov
cmps
ret
xor
loop
mov
dec
push
and
jmp
and
cmp
xchg
xor
cdq
adc
cmps
das
fidivr
mov
int3
add
sbb
sbb
adc
inc
or
sbb
cld
inc
in
sbb
sbb
mov
ret
cwde
ss
addr16
sbb
sub
bound
jmp
pushf
out
int3
lea
add
repz
(bad)
(bad)
cmp
(bad)
cmp
and
(bad)
sbb
cwde
xchg
fs
test
dec
jge
aaa
test
inc
sbb
push
call
add
xor
enter
(bad)
push
repz
adc
pop
aam
arpl
(bad)
dec
adc
aaa
in
sbb
jae
cmp
pop
inc
pop
fldl2e
jns
sub
cdq
fst
push
push
pusha
in
cmp
shl
mov
pop
mov
or
ins
mov
jecxz
ja
cs
es
sbb
iret
push
movs
sub
adc
pushf
mov
pop
mov
stos
add
test
mov
out
ds
cmp
dec
xor
int3
ror
(bad)
jno
add
(bad)
push
movs
push
shl
lds
or
pushf
pusha
jp
shl
lea
cmp
mov
cmp
and
sub
movs
and
movs
call
int3
retf
cld
xor
pop
jae
push
adc
nop
inc
and
sub
cmp
cdq
and
inc
push
ins
ret
cdq
xor
pop
or
dec
or
add
popa
sbb
add
mov
inc
jno
lea
pop
loopne
mov
inc
in
or
into
adc
repnz
bound
mov
fldenv
and
add
test
lar
sti
data16
push
jo
(bad)
ds
mov
fs
sbb
(bad)
scas
inc
ins
mov
xchg
retf
and
inc
test
push
das
add
inc
push
xor
mov
push
nop
mov
push
pop
test
dec
jno
pushw
cdq
jo
mov
(bad)
imul
aaa
js
pop
adc
js
in
lods
inc
cmp
mov
jg
ds
jle
xchg
nop
adc
mov
cmps
mov
addr16
ins
stos
add
mov
mov
fnstenv
mov
pop
loopne
(bad)
(bad)
aad
mov
sbb
jecxz
lea
mov
adc
stos
jmp
mov
push
in
sbb
dec
and
inc
int
(bad)
imul
fwait
cdq
aaa
xor
xchg
cdq
fld
aaa
mov
dec
es
ret
xchg
or
cmc
enter
lds
inc
jmp
int3
xchg
dec
ja
ss
mov
dec
icebp
popa
mov
xor
loopne
mov
pop
nop
pop
adc
pushf
(bad)
push
rep
inc
movs
les
inc
fsubr
sbb
hlt
nop
bound
mov
add
out
dec
mov
movs
add
xchg
cmp
arpl
inc
in
xor
mov
jns
xchg
bound
gs
sub
add
sbb
adc
retf
push
bound
repnz
(bad)
mov
aad
stos
mov
xor
mov
add
dec
dec
leave
jl
push
sbb
mov
imul
mov
(bad)
ret
gs
cwde
adc
inc
repnz
cmp
sub
in
inc
nop
jecxz
pop
mov
sbb
xchg
push
fmul
mov
xor
dec
into
sbb
push
sbb
fldl2t
jl
ja
jge
pop
test
sub
pop
inc
inc
ins
adc
mov
int
and
xchg
push
in
push
xchg
or
fld
push
int3
mov
add
test
add
cdq
std
pop
inc
out
dec
je
and
mov
mov
pop
xchg
pop
xor
in
aam
mov
jecxz
sbb
in
mov
pushf
shl
dec
or
xchg
pop
gs
cmp
pop
fwait
dec
into
push
lds
mov
or
cwde
mov
pand
call
pop
dec
repz
xchg
add
mov
push
(bad)
xor
jecxz
jecxz
xor
sti
popa
popf
hlt
add
sub
sbb
nop
xor
adc
loope
adc
shr
inc
cli
lea
sahf
mov
jne
int
bound
add
cmc
push
inc
popf
dec
mov
mov
inc
lock
int3
rcr
or
(bad)
push
and
es
cmp
daa
data16
jge
adc
in
jbe
mov
icebp
call
test
mov
addr16
mov
les
pop
cld
aaa
sub
scas
pushf
inc
jge
int3
adc
pop
mov
add
pop
dec
fcomp
shl
fisubr
ins
jnp
aaa
adc
stos
xor
shl
xor
fidivr
ins
sar
push
cmps
dec
jae
in
fisttp
mov
mov
sar
jae
scas
(bad)
xor
(bad)
lahf
jg
mov
(bad)
stos
std
test
jg
cmps
pop
lods
imul
add
add
or
or
mov
sbb
cwde
add
cmps
adc
rcr
scas
cmp
loop
jp
inc
rol
call
inc
out
cmps
xchg
inc
cmp
das
js
pop
icebp
idiv
aaa
(bad)
repnz
call
sti
pop
dec
shl
ja
outs
inc
add
mov
add
add
sbb
ins
fisttp
add
mov
push
rcr
fild
fdiv
pop
dec
inc
add
call
test
out
xor
sar
xor
xchg
dec
ja
push
cmp
adc
repnz
cli
cli
(bad)
fistp
fstp
out
dec
(bad)
(bad)
out
xchg
pop
ret
ficomp
lahf
std
mov
cmp
mov
jg
add
sub
push
ror
das
out
aas
pop
pop
sub
pop
jmp
mov
xor
push
sub
jle
sti
dec
stos
and
ins
mov
stos
(bad)
neg
add
rol
pop
aad
cmp
(bad)
mov
mov
push
or
pop
xor
xchg
jmp
sti
sti
ret
out
repz
push
jmp
and
outs
int3
fs
jl
sub
jge
inc
mov
push
scas
cmp
xchg
xchg
test
test
and
push
and
(bad)
mov
outs
nop
call
lds
out
mov
jmp
and
mov
mov
pop
add
mov
jno
imul
daa
int3
in
cmp
xor
call
sub
mov
fbld
ss
add
sub
int
not
xchg
adc
mov
push
fimul
adc
(bad)
sub
mov
cld
push
jb
xchg
imul
outs
(bad)
scas
cmp
add
out
push
movs
aam
das
in
dec
shl
fsubrp
cmp
and
xlat
mov
jnp
mov
jecxz
adc
mov
add
and
pop
sub
and
sar
mov
push
ret
sub
inc
aam
das
stos
pusha
sbb
add
sbb
cmp
movs
fbstp
pop
cmps
icebp
mov
mov
pop
sti
add
pusha
jl
in
ret
ins
mov
mov
pop
aaa
lea
cmp
xchg
mov
push
inc
push
mov
push
cmc
out
adc
imul
and
sbb
shr
xchg
mov
iret
fild
add
xor
js
mov
aam
mov
push
sbb
sub
aaa
or
fwait
cmp
mov
adc
pop
int3
jb
retf
mov
ret
fsubr
jnp
cmp
jmp
and
dec
xor
ins
(bad)
ss
mul
call
push
pop
jmp
shr
pusha
pop
or
test
or
sbb
pop
fs
cmp
xchg
add
pop
sbb
or
es
(bad)
fdiv
(bad)
sbb
inc
not
enter
and
cmp
fbld
test
adc
loop
outs
jle
mov
mov
in
push
xchg
das
movs
or
shr
aaa
add
jecxz
(bad)
nop
lock
stos
mov
mov
int
aas
jns
mov
or
mov
sahf
iret
jge
fstp
pop
pop
into
push
cmps
repz
jmp
std
cli
sti
push
lds
jp
dec
xor
push
push
neg
imul
data16
dec
test
jmp
scas
jmp
aas
mov
inc
out
fs
sub
push
je
js
dec
xchg
mov
xchg
adc
mov
aaa
in
or
mov
mov
clc
jae
es
pushf
mov
cdq
(bad)
nop
ins
test
xchg
rcr
(bad)
aam
mov
fisub
ret
sub
jbe
out
jne
mov
pop
movs
pop
popa
mov
push
add
xor
pop
jae
ficom
dec
push
jno
add
jp
fwait
mov
push
inc
ins
inc
scas
cmps
inc
adc
xchg
dec
shr
mov
lods
ins
stos
dec
shl
mov
(bad)
in
mov
pop
push
cmp
and
adc
cmps
icebp
leave
add
mov
push
push
fist
xor
mov
cmp
and
inc
mov
in
pop
outs
loop
fs
and
or
pop
xchg
test
movs
or
outs
and
push
call
adc
bswap
cmp
ret
and
mov
repz
out
sub
call
sbb
or
stos
mov
cmps
pop
jb
fsub
sbb
in
call
adc
ja
sub
add
in
enter
jbe
or
push
movs
in
jnp
call
sahf
mov
mov
cmp
push
jo
inc
int
push
cli
push
pop
and
inc
and
adc
sti
or
daa
dec
(bad)
es
popa
movs
adc
sbb
sub
pop
inc
ja
sbb
and
loope
sar
shr
popa
adc
outs
sub
out
push
loop
loop
icebp
data16
mov
scas
pop
adc
sbb
in
shr
das
and
das
xor
in
or
inc
imul
test
int
dec
sar
ret
mul
ret
leave
std
cs
pop
aaa
xchg
daa
call
loope
outs
sub
jp
fnstsw
int
push
daa
push
(bad)
shr
cmps
in
dec
cmps
adc
or
adc
or
movs
shr
loopne
xchg
cld
lods
jge
and
jg
fisttp
pop
add
dec
icebp
lahf
and
call
js
xchg
inc
sub
loop
dec
pushw
enter
ret
and
rol
xchg
xlat
xchg
inc
cmps
cmp
xchg
sbb
les
sbb
pop
je
sub
imul
add
ds
or
mov
xor
xchg
inc
mov
push
xchg
call
adc
enter
or
lea
retf
dec
popa
inc
push
sub
ja
lahf
adc
sub
xchg
push
mov
sbb
movs
sti
fsub
lds
test
xchg
sub
dec
sub
(bad)
es
sbb
lds
xchg
push
ins
xchg
dec
mov
imul
test
test
lds
enter
mov
shl
cmp
les
ins
ja
pusha
pop
jae
xchg
mov
pusha
call
inc
cmp
mov
xor
sub
mov
shl
inc
aam
xchg
xor
fdivr
pop
or
mov
sub
xlat
push
fsubrp
push
stos
sub
jne
push
add
test
pop
push
push
mov
inc
in
jnp
iret
xor
adc
rcl
int3
rol
in
and
inc
xor
adc
vaddsd
xor
ficom
icebp
jne
xor
lods
dec
jno
sub
movs
push
ret
imul
mov
push
and
push
mov
xlat
test
mov
ins
xor
adc
pop
xchg
or
and
mov
mov
ss
movs
push
adc
push
adc
xchg
mov
sar
sub
ss
xchg
cmp
adc
imul
xchg
sub
ret
mov
ficomp
in
ret
jle
cld
clc
dec
sub
das
jns
inc
ins
rcl
xor
or
sub
leave
std
mov
sub
dec
shr
arpl
call
ja
jg
fldcw
ret
pushf
mov
mov
sbb
sub
mov
sbb
(bad)
sub
popf
jo
cld
stos
mov
pop
inc
pop
sub
jmp
push
jmp
pop
sbb
xchg
push
int3
push
sbb
sub
shl
out
stos
icebp
fstp
mov
out
jno
cmps
mov
int
mov
adc
push
dec
add
jmp
sbb
iret
dec
imul
fisubr
mov
push
pop
jnp
pop
mov
inc
pop
add
test
jg
or
call
cmc
rcr
mov
fistp
std
retf
test
ds
mov
sar
(bad)
dec
pop
mov
(bad)
xchg
fsubr
scas
out
xchg
fadd
pop
mov
aas
cmp
xor
ja
and
repz
pop
inc
cmps
cmp
nop
and
stos
add
sub
mov
xlat
retf
mov
sbb
push
jnp
lea
push
stc
push
add
clc
xor
sbb
arpl
mov
pushf
mov
mov
xchg
xor
dec
out
cli
mov
daa
mov
and
cmp
jge
mov
scas
jecxz
mov
mov
lods
pop
in
adc
ret
jo
adc
jp
out
shr
ds
repz
xor
in
lds
xor
mov
bnd
pop
mov
ret
xor
sahf
sbb
aas
cdq
out
out
mov
xchg
jae
mov
out
jns
push
jno
jne
pop
and
imul
push
jg
sbb
lods
fs
je
out
cwde
cdq
sub
repz
xchg
dec
xchg
(bad)
jne
add
cmp
jmp
sub
mov
sbb
sub
cli
cmps
addr16
add
pop
cmp
ficomp
int
repz
inc
mov
ds
adc
mov
xchg
fimul
in
sti
outs
push
pop
(bad)
idiv
jmp
pop
push
loope
je
pop
jp
das
scas
movs
add
pop
and
dec
shl
or
mov
cmp
loope
call
xchg
push
push
in
loop
mov
les
icebp
pusha
repnz
dec
jecxz
mov
scas
mov
push
neg
inc
div
dec
sbb
fild
aaa
fidiv
jg
jbe
mov
outs
jp
or
stos
out
cli
ret
push
or
mov
in
mov
ins
ins
scas
dec
lods
fldcw
(bad)
js
mov
movs
push
mov
daa
ins
and
ror
popf
mov
(bad)
(bad)
mov
sub
(bad)
xor
neg
mov
lods
lahf
or
dec
das
cmp
add
not
pop
js
xor
or
jg
nop
aas
inc
adc
shr
sbb
mov
mov
(bad)
jmp
pop
xor
clc
or
mov
mov
scas
mov
hlt
sbb
inc
in
sahf
inc
mov
out
add
out
add
jmp
int
mov
fisub
xor
iret
imul
sub
mov
or
mov
xchg
fiadd
scas
mov
cwde
scas
jae
nop
xor
push
ret
mov
add
js
sub
add
out
mov
in
(bad)
in
add
xor
lods
dec
push
movsx
jo
pop
pop
retf
jbe
retf
add
sub
xlat
test
loope
jle
add
inc
aad
dec
cmp
jae
les
xor
add
(bad)
in
test
cli
in
or
aaa
std
inc
movsx
or
push
adc
dec
mov
xchg
scas
mov
dec
pop
mov
aad
test
daa
fsub
retf
ficom
(bad)
clc
loopne
xchg
ror
jne
cmp
movs
add
mov
ins
and
(bad)
stos
bnd
inc
js
sbb
inc
mov
add
bnd
push
sub
mov
and
cld
xchg
cmp
adc
sub
jbe
jne
mov
xor
fadd
pop
bound
rol
jno
jle
sub
push
mov
pop
ror
cmps
add
lock
mov
in
fcomp
ins
loop
ror
mov
mov
xchg
adc
sub
in
adc
mov
jmp
cld
aam
movs
sti
push
(bad)
jmp
test
sub
xchg
sub
ret
aas
push
(bad)
test
cli
or
push
cli
ss
jo
ss
fldenv
les
push
pop
cmc
or
sar
repnz
loop
mov
and
xor
call
shl
xor
mov
cmp
test
js
and
jmp
enter
or
mov
ds
fmul
pop
cli
or
xchg
mov
shr
daa
cmp
xchg
sub
bound
outs
ret
xchg
call
mov
(bad)
test
shl
jg
and
cmp
pop
movs
adc
inc
daa
aad
xchg
mov
sbb
sbb
test
push
in
jp
pop
aas
adc
stc
pusha
adc
ja
stc
lock
in
dec
jnp
pop
cs
sub
jmp
xor
dec
arpl
cmp
pushf
lock
bound
loope
inc
xlat
lds
je
and
jp
xchg
push
outs
and
lds
aam
aam
push
dec
adc
loop
push
mov
js
push
and
in
not
je
inc
xchg
fbstp
shr
test
lds
mov
lock
adc
or
pop
xor
jecxz
xor
mov
test
mov
mov
jb
in
sub
je
test
jne
pop
pusha
mov
sti
jmp
inc
(bad)
dec
adc
loopne
cmp
sbb
(bad)
rol
or
and
mov
and
mov
dec
hlt
xchg
pop
push
adc
push
repnz
xchg
cmps
mov
or
rol
push
mov
adc
daa
sbb
int3
cmp
(bad)
hlt
mov
test
in
cmp
or
clc
jne
pop
pusha
movs
es
in
or
(bad)
test
enter
xchg
pop
mov
test
push
cmps
aam
pop
stos
pop
sbb
fcomp
mov
xor
inc
cmp
mov
out
(bad)
fdivr
loopne
pop
retf
jmp
adc
jbe
mov
sbb
out
(bad)
mov
test
outs
xor
sti
out
(bad)
mov
mov
jne
pop
data16
and
push
popa
xor
arpl
sbb
outs
xor
ss
cmc
test
(bad)
mov
sar
scas
mov
iret
push
fdiv
cmp
out
jne
jge
in
aaa
ja
or
ins
call
pop
repz
ret
xchg
fisttp
sysret
xlat
fistp
mov
cli
out
jno
sbb
in
and
loopne
push
cld
jne
push
xchg
cmps
cmp
push
mov
rcr
xchg
push
pmaxub
inc
scas
jl
hlt
cmp
and
mov
in
sti
movs
cmp
mov
cli
int3
lea
ret
push
stos
movs
xchg
mov
call
enter
or
aaa
iret
and
inc
push
and
jg
and
and
(bad)
clc
ret
xchg
int3
mov
add
es
in
and
or
xor
add
add
ret
push
sbb
loopne
adc
loopne
adc
inc
add
scas
xor
mov
loopne
add
sbb
add
sbb
xor
je
out
dec
and
(bad)
int3
stos
inc
xchg
pop
les
test
nop
es
test
add
mov
fild
fstp
push
push
mov
sbb
stos
jbe
cdq
outs
lock
pop
lods
stc
inc
nop
mov
ficomp
pop
push
dec
in
pop
or
sub
adc
adc
pop
jo
nop
xchg
clc
fldcw
push
cld
out
out
jns
mov
mov
out
fistp
iret
mov
iret
aas
mov
(bad)
sti
xor
les
jbe
rcl
fiadd
and
sub
test
(bad)
(bad)
sub
scas
test
sbb
sti
bound
call
adc
mov
mov
arpl
rol
arpl
test
mov
cmps
or
inc
in
test
jo
push
test
sub
cmp
lods
pop
jmp
dec
fld
xor
mov
imul
jno
jne
out
inc
loop
rcl
inc
lahf
jno
pusha
sub
ret
inc
out
fidiv
pushf
mov
repnz
fstp
aas
(bad)
clc
enter
movs
les
mov
fimul
mov
jb
push
packuswb
and
ret
inc
push
aaa
mov
ins
shl
cmp
retf
mov
and
in
mov
loopne
jnp
or
out
sbb
pop
mov
mov
cmp
add
scas
push
cmp
dec
or
inc
pop
sbb
add
test
add
rcl
and
cmps
and
(bad)
cmc
fisubr
out
aam
xlat
ret
adc
and
sub
movs
pop
dec
loope
xchg
mov
mov
outs
imul
je
ja
pop
and
jmp
loop
cmp
out
mov
mov
inc
pop
mov
xchg
push
add
mov
ja
and
not
je
pusha
xchg
pop
pop
dec
les
shr
and
sub
shr
mov
cmp
jle
daa
sub
and
es
and
jge
sub
inc
in
push
stos
xor
adc
lods
test
mov
rcr
dec
popa
psubq
sar
xchg
fwait
jbe
sub
mov
mov
mov
push
cld
movs
rol
ret
mov
xchg
mov
daa
mov
jae
call
retf
sub
cmp
jnp
xchg
mov
sbb
mov
sahf
sub
and
and
jp
stos
pop
adc
fs
mov
imul
and
jns
adc
imul
ss
mov
sbb
sbb
xchg
outs
adc
mov
push
hlt
sbb
ret
ror
jge
push
int
cmp
nop
jp
sub
xchg
mov
pushf
or
popa
xor
xchg
nop
aad
jae
cld
fcomi
sbb
lock
xchg
loope
dec
movs
push
outs
or
sub
sub
pusha
popf
jmp
cdq
jno
cmps
retf
and
jp
sbb
(bad)
pop
xchg
enter
xchg
xor
sbb
imul
adc
add
mov
cmp
mov
test
dec
idiv
jb
pop
clc
adc
(bad)
std
cs
sbb
mov
ja
add
add
(bad)
rol
mov
inc
cld
sub
nop
sbb
dec
dec
or
inc
push
adc
xchg
push
pop
es
sbb
jns
daa
sub
fist
retf
popa
cdq
mov
adc
iret
int3
ret
call
fidiv
inc
adc
in
adc
push
inc
lods
push
pop
lods
push
(bad)
xor
imul
daa
scas
or
mov
js
popa
mov
adc
and
in
test
fbld
(bad)
cwde
inc
jp
int
sub
sbb
xchg
or
push
jnp
mov
and
cmp
and
add
jne
pop
aaa
and
mov
push
mov
jbe
jl
add
fs
dec
or
mov
test
xchg
adc
add
shr
nop
test
rcl
add
dec
pop
jb
add
xor
mov
mov
fnstenv
ds
cs
adc
add
enter
push
cmps
data16
movs
xor
pop
icebp
outs
(bad)
jb
test
mov
cmps
mov
mov
rol
pop
das
cs
and
jo
inc
push
stos
add
add
int
xor
nop
test
stos
push
std
es
outs
pusha
pop
or
inc
mov
sbb
out
jle
jo
dec
and
cmps
or
mov
mov
jg
jnp
pop
xchg
test
xchg
dec
push
cmp
push
xchg
and
pop
or
add
jnp
xchg
ins
out
jecxz
jl
ret
pop
mov
pop
mov
rcr
vdivpd
ss
mov
cmc
ret
pop
adc
inc
fisttp
cmp
push
arpl
jo
in
out
int
test
call
inc
rol
or
icebp
fld
mov
jge
inc
icebp
repz
aam
inc
outs
inc
or
pop
gs
mov
push
cmp
pop
push
inc
lods
mov
push
ret
inc
dec
or
jne
retf
(bad)
mov
jne
in
ds
cmp
pushf
sbb
xor
js
push
(bad)
sub
jo
mov
adc
mov
jp
xlat
sbb
mov
push
pop
sbb
pop
stos
jl
xchg
mov
xor
movs
pop
sar
push
les
sub
mov
test
pop
add
sbb
and
add
rcl
cmps
cs
sbb
or
test
adc
mov
leave
push
fidivr
imul
loope
nop
fs
sbb
adc
xchg
sub
xor
adc
aam
jne
das
popf
or
mov
xor
xor
mov
call
pushf
loopne
jle
repnz
(bad)
aad
push
xchg
jecxz
mov
cld
sub
addr16
lods
shr
dec
push
test
push
adc
dec
fwait
aam
dec
jle
jecxz
out
jp
sbb
mov
cdq
jg
fcom
fbld
loope
shl
xchg
mov
test
ds
not
xchg
out
enter
cmp
jnp
dec
mov
(bad)
and
js
or
mov
retf
and
adc
mov
pop
mov
inc
jg
popa
lds
xchg
repnz
pop
and
ror
shl
mov
pushf
mov
jo
and
xchg
push
sahf
adc
sub
stc
rcr
repz
call
xchg
repz
xchg
sub
push
out
call
(bad)
fmul
repnz
in
lds
iret
jg
mov
fsub
mov
and
and
and
ret
mov
jmp
fsub
arpl
paddsb
movs
pusha
subps
adc
push
xor
xor
mov
push
adc
mov
fadd
aad
xor
(bad)
ja
test
int3
pop
and
xchg
add
adc
adc
rol
xchg
and
and
and
sbb
and
fld
and
cmp
int
or
push
push
addr16
push
pop
aas
cmp
pop
cmp
push
pop
inc
pop
dec
xchg
and
pop
dec
sub
rep
int3
rol
bound
std
push
inc
mov
push
xchg
jl
jp
sub
push
mov
daa
inc
xor
xor
ins
pop
jne
pop
xor
out
mov
mov
push
std
sbb
mov
ss
jmp
(bad)
fld
scas
ror
(bad)
push
rol
pop
sub
in
movs
jo
or
dec
and
push
ret
test
cdq
gs
int
lods
sub
xor
add
retf
test
je
push
outs
sub
pushf
rol
(bad)
push
test
dec
pop
cmp
xchg
pop
loope
daa
ins
adc
and
xchg
pop
popa
xchg
dec
cwde
cwde
popf
iret
cmp
xchg
xchg
add
mov
and
adc
jno
push
out
push
push
sub
xchg
xor
movs
mov
xchg
rsm
pop
pop
sti
int3
(bad)
outs
rol
xchg
movs
sbb
mov
sub
data16
inc
scas
inc
and
jl
jns
dec
push
jge
mov
xchg
inc
mov
stos
push
enter
divps
ins
and
test
inc
inc
aad
xchg
loope
retf
inc
push
mov
neg
adc
(bad)
in
daa
and
mul
scas
adc
pusha
ds
lods
fistp
scas
jp
and
ret
in
cwde
cld
mov
cli
jmp
and
pop
pop
scas
ret
cli
leave
(bad)
(bad)
inc
sti
arpl
aas
cmp
out
rcl
mov
popf
bound
hlt
pop
ja
jmp
push
add
mov
inc
enter
push
loope
jbe
mov
lods
push
pushf
mov
inc
jge
dec
pop
inc
jo
push
icebp
mov
adc
pop
push
cmp
xchg
jmp
int
pusha
std
pusha
push
sar
aaa
test
xchg
dec
and
iret
add
popa
sar
pop
inc
pop
jge
out
imul
in
and
call
mov
ficom
or
or
pop
add
sar
aad
test
inc
mov
and
out
in
jnp
lods
mov
test
sbb
mov
js
das
les
stos
mov
push
jp
shl
shl
and
jg
lods
jae
hlt
jmp
or
scas
xlat
dec
(bad)
push
stos
pop
xchg
mov
jo
mov
sbb
pop
outs
retf
sbb
sbb
xchg
mov
pop
push
fdiv
lahf
jo
fcmovbe
dec
loop
(bad)
pop
jb
popf
imul
packssdw
dec
mov
aad
cld
dec
dec
sbb
adc
shr
sar
je
jg
lahf
jns
xchg
push
pop
dec
clc
or
xor
mov
and
aad
inc
cmp
fistp
sbb
pop
jl
in
aad
(bad)
dec
lock
ja
xchg
cld
out
fadd
dec
xor
push
dec
aas
out
xlat
sub
dec
js
cmp
pop
movs
ror
imul
xor
les
xor
or
cdq
mov
cmp
mov
gs
ja
adc
sbb
mov
sar
cmp
xor
nop
cmp
xchg
mov
inc
icebp
and
mov
cld
lods
ja
mov
push
or
dec
lods
fs
jmp
stc
sbb
ret
jmp
cmc
jp
or
ds
pop
cmp
aas
movs
cmp
jmp
mov
xchg
inc
in
in
in
jmp
xchg
add
jecxz
ins
sub
lds
lock
dec
mov
repz
pop
nop
pushf
push
jp
leave
aam
loope
cmp
pop
ret
hlt
mov
test
inc
outs
inc
jp
mov
push
jge
lods
lahf
sti
cmp
or
test
test
sbb
inc
xchg
or
inc
ret
stos
ret
jge
and
add
pusha
outs
mov
jp
fidivr
retf
and
cdq
push
dec
push
arpl
jmp
pop
pop
jnp
retf
cmps
mov
dec
mov
in
ret
cdq
cmp
lods
dec
fadd
cdq
test
sub
cmp
xlat
pop
push
mov
cmc
shr
push
imul
jbe
and
mov
sti
fdivr
or
ins
xchg
(bad)
jp
ins
stos
jecxz
ds
add
lock
outs
pop
and
dec
inc
repz
lods
inc
pop
add
jne
arpl
sbb
inc
loope
pop
inc
sbb
out
inc
(bad)
jae
or
arpl
and
mov
stc
push
daa
jo
sbb
jnp
cmps
jmp
adc
sar
push
stc
bsr
jecxz
inc
cld
bound
call
lods
retf
pop
mov
cli
sbb
aaa
xchg
je
sbb
pop
mov
sub
mov
sub
lods
es
ficom
jbe
sub
ja
(bad)
dec
or
movs
les
and
mov
xor
mov
push
idiv
dec
leave
adc
sbb
or
cli
or
std
inc
and
push
pop
dec
pop
push
pop
scas
sub
in
scas
xchg
mov
call
xor
les
add
js
es
pop
mov
pop
mov
mov
push
inc
or
gs
xchg
push
mov
mov
(bad)
jg
push
push
jbe
jge
fistp
pop
clc
dec
sbb
dec
lea
ja
mov
pminub
rol
and
pop
shr
xor
sub
cmc
data16
xchg
ss
mov
imul
into
(bad)
and
cmp
mov
(bad)
mov
mov
add
cmp
mov
pop
xor
int
jmp
out
mov
loope
popf
sub
popf
xchg
push
mov
stos
test
adc
and
iret
test
shl
pop
popa
gs
bound
mov
push
iret
pop
mov
push
stos
cli
test
push
in
jno
dec
inc
or
sbb
and
mov
or
xor
out
cmps
and
js
mov
in
stos
jno
push
and
jns
(bad)
pop
ret
mov
ret
outs
call
inc
and
retf
(bad)
gs
sbb
xchg
lea
dec
or
bound
pop
mov
pop
push
inc
pop
xchg
test
stos
dec
call
push
xor
push
outs
outs
scas
push
pop
fisttp
pop
sbb
test
in
cmc
fwait
push
aaa
stos
adc
xchg
idiv
sbb
in
push
mov
xor
inc
xchg
aas
push
and
in
leave
not
inc
adc
adc
movs
mov
dec
sbb
add
push
and
xchg
lods
xchg
cmp
xchg
pop
data16
dec
add
out
push
and
fs
cwde
pop
repnz
stc
sar
mov
adc
in
ds
dec
cmp
jb
push
call
movs
sbb
(bad)
jbe
popa
(bad)
push
mov
add
wrmsr
mov
push
cmp
xor
sub
mov
xlat
ret
test
movs
xor
lahf
dec
and
in
inc
ds
sti
push
mov
ret
aam
imul
int
je
pop
mov
loope
push
cmp
inc
out
and
les
jge
push
dec
pop
shl
and
xor
mov
loope
xor
push
retf
sub
sub
retf
pop
in
mov
jno
jno
imul
xchg
and
retf
push
adc
push
sub
sar
dec
sbb
push
stos
mov
pushf
xchg
jnp
mov
dec
repz
cli
aas
arpl
mov
and
pop
jbe
jb
mov
aam
cmps
daa
loope
adc
idiv
jo
pusha
and
retf
inc
inc
jp
or
cmp
fsub
cmp
adc
into
repz
inc
pop
retf
dec
mov
mov
pop
jmp
mov
mov
push
dec
mov
imul
in
lahf
aaa
jo
push
or
push
stos
pop
fidivr
mov
mov
js
mov
inc
stos
fcomi
fidiv
inc
sbb
(bad)
and
mov
(bad)
lea
imul
aad
mov
xor
and
sti
outs
xor
jno
sbb
cmp
xor
jae
aam
jg
adc
mov
push
shr
cmps
ja
lods
ja
mov
outs
fidiv
lock
dec
je
sub
lods
jmp
frstor
mov
adc
ss
adc
out
std
mov
es
cld
jnp
jae
xor
mov
pop
scas
mov
fild
xor
mov
push
test
and
dec
mov
pusha
test
pop
fnstsw
sub
mov
das
mov
xcrypt-ofb
cmps
scas
(bad)
xchg
pop
ret
lahf
rcr
nop
ja
mov
dec
(bad)
mov
xchg
add
imul
xor
jns
out
loopne
hlt
fld
mov
mov
pop
repz
ds
cmp
sub
push
xchg
sub
(bad)
pop
jg
aam
(bad)
pop
dec
inc
neg
in
rol
sbb
pushf
das
mov
cmp
cld
out
jns
(bad)
fwait
in
test
mov
enter
mov
lahf
addr16
mov
cmps
out
enter
stos
xchg
leave
mov
and
mov
fisttp
mov
jmp
int
loopne
add
fisubr
pop
cdq
(bad)
pop
xchg
mov
jnp
mov
enter
das
out
(bad)
int
xlat
pop
hlt
retf
out
pop
pushf
mov
lahf
fidiv
imul
scas
push
je
adc
hlt
stos
sbb
out
aas
test
imul
nop
jno
iret
(bad)
push
test
hlt
pop
(bad)
out
xchg
popa
sti
in
xchg
(bad)
mov
dec
mov
call
jp
pop
in
xchg
outs
(bad)
jb
jne
hlt
and
pop
mov
mov
fimul
out
int
dec
cmp
loopne
cmc
cmc
sbb
icebp
sahf
(bad)
(bad)
cmp
cdq
fucomip
test
mov
pop
mov
jp
das
cld
addr16
ds
cmp
or
cdq
mov
repz
push
cmp
xor
in
enter
cmp
push
(bad)
and
cli
push
fstp
(bad)
outs
cld
or
retf
sbb
outs
jmp
cmp
bound
ror
iret
pop
in
push
loopne
jnp
test
xor
adc
xchg
rcr
fstp
ins
(bad)
jbe
ror
repnz
retf
jns
sbb
lods
popa
(bad)
push
pop
clc
mov
sbb
les
mov
sar
(bad)
pop
retf
jno
scas
xchg
ss
cmp
push
jg
call
sub
(bad)
movs
jmp
jnp
jmp
xor
mov
sti
mov
push
retf
mov
pop
xor
fbld
out
imul
xor
push
mov
loopne
rcr
jo
sbb
arpl
jl
mov
pop
push
stos
mov
(bad)
cmp
mov
cli
dec
fist
fnstcw
test
push
hlt
scas
retf
test
or
mov
leave
jmp
push
test
pop
stc
inc
stc
sub
mov
fimul
and
out
mov
ret
pushf
mov
scas
push
cli
push
fwait
(bad)
xor
mov
lock
