mov
push
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
out
arpl
add
leave
popf
popf
pop
shr
sar
pop
mov
add
adc
ret
sub
jne
sbb
shl
adc
(bad)
lock
mov
lea
arpl
mov
fisubr
sub
in
aad
push
push
mov
aam
add
lods
mov
shl
mov
aam
mov
(bad)
rcr
push
nop
sbb
push
mov
xor
mov
pop
scas
daa
lods
mov
pop
loop
push
sub
xchg
aam
push
jmp
jecxz
mov
push
ret
(bad)
jo
pop
shl
xor
loope
inc
repz
cld
mov
cmc
pop
fs
hlt
push
pop
inc
fsub
push
gs
xcrypt-ctr
cmps
pop
lods
outs
cmp
sbb
and
jecxz
int3
cli
sub
xchg
movs
push
xchg
mov
ins
sub
ret
jp
push
cmps
jae
js
pop
jecxz
dec
rep
cmp
lock
(bad)
cmp
push
inc
add
jg
jnp
out
test
dec
shr
mov
inc
loope
push
mov
dec
dec
and
arpl
push
mov
int3
sar
jbe
adc
adc
and
sbb
xchg
(bad)
lods
and
xchg
pop
jmp
pop
jl
ins
adc
fidivr
pop
cmps
xchg
(bad)
mov
ja
imul
cli
stos
out
test
dec
repz
pop
loop
aad
or
xchg
fistp
jle
out
loope
fwait
pop
add
or
or
cmp
push
mov
fist
movs
cmp
mov
mov
shl
mov
fstp
fist
or
fstp
lea
fiadd
sub
rcr
sbb
xchg
(bad)
loopne
push
xlat
out
inc
dec
xchg
pop
repz
adc
imul
das
gs
imul
popf
daa
jmp
adc
out
addps
rol
cli
jmp
daa
das
push
nop
or
sbb
mov
xor
les
addr16
mov
retf
mov
les
stc
jecxz
mov
mov
sub
mov
ins
std
lahf
and
inc
mov
adc
sub
jmp
inc
pop
repnz
rcr
mov
ret
ret
enterw
inc
pop
push
hlt
add
jbe
jb
xor
mov
inc
ret
lea
or
(bad)
xchg
dec
int
int
out
inc
inc
int
out
and
sub
pusha
ins
push
add
sbb
mov
in
dec
or
rol
mov
add
push
rcr
cmp
jecxz
dec
jo
movs
xchg
mov
inc
pop
retf
push
adc
rcl
sahf
shl
lods
lahf
mov
mov
jge
adc
inc
inc
pop
mov
push
mov
pop
pop
cmp
iret
in
pop
adc
sub
push
icebp
add
jle
cmp
sar
inc
shl
test
dec
xor
mov
inc
push
cmp
test
(bad)
cli
shr
inc
dec
inc
(bad)
mov
sbb
mov
daa
retf
in
lds
cmp
fistp
xchg
jmp
sbb
sbb
cdq
pop
cmp
cmps
push
sub
addr16
mov
cmp
jmp
daa
imul
adc
(bad)
push
int3
(bad)
hlt
push
push
inc
push
hlt
cld
push
mov
xchg
int3
int3
and
rcr
and
pop
data16
dec
in
fistp
movs
pop
je
iret
cdq
mov
add
jno
aad
(bad)
ja
and
xor
in
hlt
(bad)
aas
mov
inc
sbb
cmps
into
out
jbe
cmp
mov
add
cmp
je
sbb
lods
sbb
loope
aam
xlat
xchg
popf
mov
inc
xchg
rol
shl
inc
pop
ja
cmp
cmp
add
xlat
xchg
or
(bad)
sub
mov
sbb
in
or
ret
mov
sbb
jbe
or
jg
xor
add
push
adc
sete
mov
imul
cmp
cmp
imul
mov
retf
xchg
sub
ret
adc
jle
icebp
lods
cmp
mov
or
mov
xchg
movs
fidiv
push
pop
ffree
(bad)
mov
pop
shr
push
icebp
int
add
push
enter
push
sub
dec
push
xor
mov
es
mov
or
retf
jo
mov
mov
dec
bound
jge
and
adc
inc
jno
aam
xchg
and
loopne
imul
pop
mov
push
les
xor
sub
sub
jecxz
xchg
in
inc
push
in
or
icebp
jmp
cmp
arpl
jmp
adc
shr
jno
xor
loope
sbb
mov
xchg
scas
shl
das
dec
mov
jno
ins
xchg
add
cmp
push
js
mov
stos
mov
scas
sbb
(bad)
and
jge
ja
xor
call
hlt
push
movs
aad
scas
xchg
imul
sub
cmp
(bad)
iret
and
ror
fbld
jne
dec
cmp
(bad)
jl
mov
pop
push
clc
lods
jbe
imul
gs
cli
loope
(bad)
lock
int3
cs
push
int3
int
add
unpckhps
mov
push
xchg
repnz
repz
fs
xchg
dec
mov
add
sub
inc
and
dec
inc
jo
imul
and
adc
mov
je
(bad)
cmp
arpl
daa
popf
jno
ins
fsubrp
push
xor
loop
mov
fiadd
in
xchg
jg
dec
es
push
in
jmp
add
dec
fnstcw
(bad)
aas
adc
jl
ret
xchg
gs
sahf
ins
dec
cmp
aaa
mov
clc
adc
fsub
cmp
inc
xchg
or
sbb
add
retf
xchg
pop
repz
xchg
sub
cmp
or
jo
je
in
cmp
mov
dec
mov
cmc
jne
add
int
mov
inc
jns
aad
xchg
mov
xchg
mov
enter
dec
pop
pusha
out
jnp
dec
and
xor
mov
adc
in
test
dec
shr
jmp
adc
mov
push
inc
xchg
or
repnz
jne
mov
cmp
mov
add
int
push
jae
cmp
icebp
pop
pop
fcomip
shl
pushf
adc
inc
dec
jbe
or
leave
xchg
xor
(bad)
mov
cmps
dec
mov
mov
or
test
lea
cmp
repnz
and
jl
xor
jecxz
gs
jge
mov
loope
das
cmp
inc
xlat
xor
adc
push
sbb
pop
mov
enter
retf
push
outs
sbb
xchg
lahf
inc
mov
cdq
cld
mov
xchg
pop
aas
out
pop
add
lods
mov
sbb
push
ss
enter
cmps
fdiv
add
jmp
aam
jmp
mov
mov
add
inc
inc
inc
xor
lods
or
ret
adc
out
xchg
push
test
sub
push
nop
sti
js
mov
ja
push
or
push
test
jo
cld
test
test
aas
dec
loop
lods
shr
fcom
mov
out
pop
adc
and
push
xchg
cmp
(bad)
pop
push
push
cwde
add
xchg
fmul
or
sub
mov
cmps
push
into
sub
mov
data16
cwde
xor
sbb
ror
mov
push
in
aad
xor
je
fxtract
xlat
xchg
das
jmp
add
pop
rcl
aaa
jle
in
jle
out
fnsave
aas
jbe
jb
sbb
jnp
into
mov
sub
hlt
pop
inc
jae
jmp
imul
pop
push
xor
jne
or
lock
cmps
aad
cdq
fs
out
push
std
adc
fist
das
shl
adc
push
adc
fstp
xchg
pop
aam
lds
adc
ret
add
xchg
outs
fnstsw
xchg
pop
movs
ret
cmp
pop
les
or
(bad)
dec
mov
adc
out
(bad)
test
adc
enter
xchg
inc
jne
retf
cmp
hlt
adc
aas
push
push
pusha
cmp
arpl
adc
jnp
nop
xchg
aam
xor
inc
xor
loope
push
in
int
xchg
test
sbb
push
hlt
and
outs
ret
cli
pop
mov
xor
adc
sbb
adc
repnz
out
jp
and
mov
cmp
add
lods
or
sbb
repnz
hlt
minps
push
cdq
pop
mov
mov
adc
popf
cmp
pop
(bad)
scas
int3
sbb
aas
cmc
push
dec
hlt
rcl
cmp
adc
push
hlt
pop
push
repz
lods
fwait
cmp
cmp
lahf
mov
sub
xchg
fstp
add
push
inc
aas
popf
test
in
jae
sub
pop
in
test
jmp
xchg
outs
mov
sub
push
pop
and
stos
lock
adc
xchg
out
mov
fdivp
mov
mov
repnz
les
mov
loopne
sub
cdq
ds
stc
mov
mov
pop
dec
ss
shl
push
stos
cs
test
xchg
mov
add
rcl
leave
sub
cld
jp
push
sti
gs
ret
das
data16
and
pop
(bad)
fsub
cs
shl
pop
inc
mov
lds
dec
sub
jnp
inc
inc
fidiv
inc
adc
cmp
lods
icebp
fistp
xor
sbb
mov
or
cwde
or
mov
cmp
mov
and
call
mov
cmps
mov
or
cmp
mov
mov
imul
out
jno
fisubr
sbb
sbb
push
fld
ret
pop
add
out
mov
cwde
loop
(bad)
inc
sbb
loop
xchg
lahf
sub
xor
imul
push
cwde
fistp
sub
sbb
pop
call
fldcw
test
scas
add
sub
jne
daa
aaa
mov
imul
jno
mov
das
cwde
sub
fdivr
sub
dec
fcomp
pop
popf
lods
lods
test
repnz
inc
ror
push
pop
xchg
and
fnstsw
push
cs
lods
ins
ret
jne
jg
push
imul
das
stos
inc
cdq
inc
and
in
mov
popa
aaa
push
jp
loop
and
shr
cmp
aas
ror
xor
mov
add
xor
or
das
mov
cmp
mov
popf
push
sbb
xchg
in
shr
mov
mov
pushf
and
inc
into
add
fnsave
(bad)
jge
lods
ret
loop
cdq
mov
ds
mov
pusha
jmp
test
push
jl
cmps
stc
icebp
push
xchg
mov
mov
mov
adc
pop
xor
adc
stc
xor
ins
icebp
shl
mov
int3
jmp
or
call
repnz
ret
and
jp
adc
enter
xchg
gs
stc
or
cmp
cmps
jno
xlat
not
aas
leave
(bad)
fcomp
cmps
repnz
xchg
sbb
sub
xor
xor
ret
sbb
shr
popf
mov
inc
pop
push
in
xor
shl
mov
adc
fadd
cli
mov
fcmovb
dec
dec
out
jge
jnp
shl
ror
movs
rcr
ret
cmp
les
and
xchg
(bad)
test
loopne
sub
cdq
lods
jns
hlt
or
mov
cmp
ss
pop
loope
inc
mov
cdq
cmp
push
std
out
ror
retf
push
arpl
outs
scas
test
push
xchg
jmp
push
mov
gs
outs
cmp
push
outs
out
sbb
test
xchg
sahf
(bad)
jns
cdq
into
push
pop
mov
add
stos
sub
dec
push
dec
push
dec
sub
fbstp
cmp
pop
mov
in
leave
dec
out
sbb
ins
int3
add
addr16
in
mov
and
sub
cmps
mov
data16
pop
pop
xor
call
inc
xchg
mov
(bad)
cmp
sti
hlt
fisub
out
sub
inc
pop
dec
adc
fs
fdiv
mov
imul
aad
mov
xor
cmp
xor
ret
test
sbb
sub
cmp
dec
push
pop
and
inc
sub
mov
push
xor
mov
ins
stos
inc
into
xor
mov
lahf
mov
cmps
push
sbb
loopne
xlat
sbb
scas
loop
jmp
fdivr
int3
imul
push
pop
gs
push
cmp
test
ret
dec
jl
xlat
cld
and
(bad)
lahf
pop
push
das
loop
cmp
pop
cmp
adc
mov
push
add
mov
pop
aad
push
dec
bound
jmp
fldcw
jb
or
mov
repnz
shl
push
or
cmp
in
push
adc
mov
(bad)
das
test
push
inc
(bad)
ds
ss
mov
jnp
and
mov
clc
jb
cmp
fmul
scas
out
lods
pop
(bad)
retf
mov
dec
shr
inc
or
or
jle
mov
mov
push
jg
(bad)
cmps
jle
adc
push
test
mov
push
sbb
scas
int3
sbb
sbb
sub
dec
(bad)
mov
stc
push
ror
fisttp
jae
mov
xor
(bad)
mov
cli
dec
jle
ror
add
mov
in
into
pop
aam
or
pop
jo
cwde
sub
(bad)
jle
xor
sub
fsubr
gs
add
adc
fs
cdq
ror
mov
imul
stos
xlat
into
daa
cs
sar
lods
mov
fdiv
ret
cwde
repz
mov
xlat
sbb
xchg
cmps
(bad)
sbb
fiadd
dec
imul
daa
mov
push
xor
arpl
mov
sbb
sub
and
test
mov
jnp
push
jo
out
xchg
pusha
mov
xor
jmp
and
je
xchg
lods
pop
dec
lods
cld
and
or
adc
(bad)
les
out
adc
xchg
loop
xchg
neg
sbb
outs
xchg
aam
out
adc
ins
cwde
mov
mov
xor
pop
xor
shr
or
lds
dec
mov
add
fucomip
bound
imul
inc
data16
add
cwde
shr
(bad)
sub
sub
idiv
pop
adc
fcomi
mov
lock
jmp
or
pop
in
iret
pop
in
mov
ins
ins
or
jb
not
mov
rcl
sub
or
jge
in
test
sbb
mov
pop
sbb
pusha
push
test
and
jno
fs
test
out
shl
mov
outs
into
call
movs
jno
add
pop
jbe
jne
add
lods
lods
ss
cmps
mov
mov
stc
pop
les
pop
mov
xchg
push
fwait
and
stos
test
gs
js
xor
test
jae
test
fld
add
fistp
jbe
add
cmps
test
mov
mov
das
pop
(bad)
push
and
test
xchg
imul
movs
mov
inc
jg
outs
inc
cdq
sti
and
mov
mov
jmp
pop
icebp
addr16
cmp
pop
movs
jo
fild
jno
or
rcl
cld
ja
add
pop
lahf
and
sub
jl
cli
test
loop
pop
test
aaa
lock
stos
std
sbb
dec
cmps
ret
js
add
xchg
dec
or
es
or
push
out
sbb
clc
jne
sub
pop
mov
adc
pop
not
(bad)
lahf
xchg
cmp
jge
sub
daa
fistp
arpl
pop
sub
sub
mov
retf
sahf
xchg
cmovnp
das
mov
int
xor
(bad)
jle
xchg
retf
test
add
sub
add
or
add
and
aad
pusha
add
popa
jne
mov
fnsave
loope
mov
fadd
out
adc
mov
sub
pop
push
ins
mov
xchg
int3
cli
adc
int
xor
lock
cmp
xor
jl
dec
sub
mov
sub
jnp
in
mov
xchg
ins
mov
pop
scas
cmp
movs
stos
neg
xchg
(bad)
out
bound
outs
jae
fdiv
sbb
push
dec
jmp
daa
mov
test
xor
ins
test
push
push
and
xor
pop
mov
mov
imul
jb
aad
mov
xlat
movs
(bad)
movs
(bad)
imul
mov
mov
ins
outs
(bad)
sub
inc
repnz
rcl
popf
add
sbb
pop
xor
daa
cmp
in
xchg
nop
arpl
ret
not
ja
sbb
daa
cli
cmps
call
pop
inc
jl
xchg
xor
pop
mov
test
idiv
es
mov
enter
jmp
inc
pop
daa
and
js
mov
(bad)
addr16
mov
mov
arpl
(bad)
sub
pop
(bad)
ffreep
mov
adc
(bad)
cmp
sbb
pop
test
xor
push
sti
ret
sbb
(bad)
cs
sbb
repnz
js
fild
out
ins
jle
aad
adc
and
inc
mov
arpl
sub
pop
push
push
retf
sub
fnsave
js
ds
fld
fdiv
sub
movs
adc
push
push
inc
cmp
mov
add
mov
out
out
iret
pusha
xor
xlat
jmp
shl
popa
cmp
mov
fs
inc
sbb
inc
jge
xchg
pop
cmp
cdq
jno
cmps
(bad)
xchg
ffreep
jae
int3
jle
cmps
adc
jle
hlt
push
adc
adc
xchg
cmp
mov
cmp
fldcw
fs
push
sub
test
out
mov
lock
jecxz
and
outs
jge
neg
sbb
imul
and
sub
fdivr
sub
retf
mov
sbb
xor
jmp
(bad)
and
pop
jne
shl
and
add
out
stos
scas
add
fistp
push
cmp
add
jns
scas
fbstp
std
lea
cmp
cmc
test
scas
mov
sbb
not
xchg
and
stos
xor
mov
addr16
js
rep
call
jb
jp
add
cmp
xor
shl
mov
sub
aam
pop
push
retf
addr16
stos
aas
jae
jp
jb
lods
push
scas
jne
in
xchg
test
ins
jmp
push
aam
ret
out
addr16
jo
retf
popa
loop
mov
aad
cmp
iret
push
sti
add
cmp
xlat
ins
mov
into
jnp
lea
fistp
sub
sbb
mov
or
mov
mov
xor
mov
sub
call
ds
popfw
push
cmps
mov
outs
push
in
mov
lods
sar
cmp
(bad)
ja
pusha
popa
cmps
mov
cmc
test
inc
clc
mov
inc
jb
iret
ja
cmp
dec
push
and
jge
or
jo
(bad)
cli
call
rol
movs
sub
jno
dec
xchg
cmps
les
outs
xor
sahf
push
push
mov
ffreep
mov
rcr
lds
gs
int
pop
mov
out
sub
scas
repnz
bound
mov
inc
in
push
test
sub
xchg
pop
pop
xor
cmp
sbb
aas
push
or
cmc
xor
ins
lea
xor
cmp
sbb
addr16
arpl
mov
lods
dec
repnz
shr
xchg
jmp
xchg
dec
stos
std
pop
imul
(bad)
or
inc
(bad)
std
xchg
adc
push
leave
sub
push
cmp
inc
jnp
pop
mul
dec
pop
call
jbe
daa
ins
add
adc
inc
push
mov
inc
push
xchg
test
mov
(bad)
xor
push
xchg
jge
adc
jecxz
(bad)
in
sub
push
mov
std
and
out
mov
lock
add
mov
pop
jo
in
mov
cs
cmp
retf
adc
xor
cwde
xchg
inc
sub
xor
aad
loope
sbb
les
rcr
cmp
push
lea
fld
out
retf
iret
das
xor
mov
jb
dec
adc
sub
mov
mov
xchg
cli
clc
xor
cli
sub
pop
mov
xlat
mov
std
imul
jmp
repz
sbb
test
movs
(bad)
push
jns
mov
sbb
sbb
clc
push
clc
xor
ret
push
mov
sub
dec
loope
es
hlt
add
je
jecxz
scas
pop
test
rol
push
pushf
(bad)
retf
shl
not
sbb
or
xchg
add
not
lods
mov
mov
jne
call
mov
cdq
mov
mov
lods
mov
fadd
mov
cwde
lea
adc
or
mov
(bad)
and
out
add
in
mov
inc
ret
frstor
cli
inc
sbb
sub
test
mov
mov
sub
mov
cmp
dec
lock
xchg
mov
call
mov
push
enter
push
out
mov
inc
scas
cmc
cmp
and
std
inc
bound
test
inc
int3
and
push
cli
lahf
add
lahf
sahf
loop
inc
cmp
scas
inc
inc
nop
mov
scas
test
pop
(bad)
add
mov
loopne
jae
inc
xor
push
fimul
sub
sbb
out
daa
stos
cdq
mov
or
outs
jno
push
push
xchg
xchg
pop
fist
pop
cmps
add
mov
in
je
mov
imul
pop
push
outs
xchg
push
xchg
or
xchg
pop
adc
push
add
repz
mov
mov
add
ss
cwde
leave
inc
lock
call
aaa
push
(bad)
jp
cs
icebp
or
dec
mov
xchg
cmp
pop
(bad)
lods
push
add
dec
adc
repz
mov
xchg
push
aad
outs
pop
mov
and
ret
gs
leave
inc
xchg
int
push
adc
jb
int3
popf
inc
das
xor
mov
mov
arpl
jecxz
xor
pop
ins
pop
jp
not
iret
mov
int
push
mov
cmp
inc
and
repnz
mov
sar
jge
fdiv
lods
or
mov
add
cmps
inc
push
sub
add
sub
or
add
push
in
fnstsw
popf
int3
ret
inc
mov
hlt
lahf
jg
mov
rcr
shl
icebp
xchg
daa
and
sbb
fwait
call
cs
movs
push
jae
sbb
push
push
xchg
arpl
int3
aad
int
out
ret
mov
cmp
or
stc
jmp
push
ds
cmp
and
sbb
mov
mov
and
jae
mov
or
js
adc
mov
and
cmp
xor
sbb
dec
repz
jmp
dec
xchg
das
dec
stos
mov
mov
mov
push
cmp
scas
mov
xchg
iret
leave
jo
test
pop
(bad)
jecxz
mov
popa
das
jle
dec
gs
ja
mov
mov
bound
test
in
int
enter
ins
movs
adc
cld
mov
(bad)
pop
pop
rcl
inc
stos
in
cmp
jns
int3
adc
das
dec
and
out
ret
int3
jge
mov
mov
mov
je
and
es
xchg
leave
and
xchg
mov
(bad)
test
(bad)
pop
push
mov
sbb
mov
lods
(bad)
and
test
dec
mov
out
jo
mov
pushf
into
aas
icebp
cwde
cmp
stc
add
arpl
rol
addr16
mov
push
aad
adc
jb
mov
mov
adc
sub
or
pop
mov
add
repz
or
popf
sub
inc
dec
fnsave
out
jmp
mov
aad
(bad)
div
test
fwait
sbb
retf
lahf
stos
xor
pop
dec
mov
pop
dec
sub
outs
mov
stos
das
sub
in
call
retf
scas
mov
mov
adc
cmp
mov
adc
ss
fcmove
icebp
add
jecxz
daa
xchg
or
xlat
ret
ja
mov
pop
and
inc
in
mov
dec
dec
push
in
fidivr
xchg
in
fld
scas
jge
mov
push
popa
jne
cmps
xor
lock
test
aam
(bad)
jmp
pop
mov
mov
jno
and
jb
jle
shl
les
lds
pop
lock
cmp
add
pop
sub
jbe
ror
pushf
stc
fwait
ja
out
cmps
std
jle
lea
stc
sti
iret
mov
aaa
ds
ret
jecxz
cmp
xor
pop
jno
popa
je
jnp
std
jae
cmp
pop
push
rol
mov
fidivr
loop
fstp
int
inc
xchg
scas
jnp
ins
xchg
icebp
sbb
lods
and
fistp
lds
jmp
shl
in
mov
mov
popa
outs
push
mov
fst
cmc
sbb
hlt
lods
aam
fiadd
inc
fsub
adc
fnstsw
sbb
out
cmps
test
scas
cmp
(bad)
dec
add
xor
ss
inc
fucom
add
rcl
xchg
cmp
xor
cmp
adc
mov
(bad)
and
inc
inc
js
bound
lahf
cmps
clc
xor
pop
mov
test
mov
cs
rcr
ja
cmps
iret
pusha
xor
mov
mov
push
cli
icebp
mov
ss
adc
mov
test
xor
pop
dec
les
cli
jle
scas
shl
test
push
mov
push
retf
mov
(bad)
dec
sub
push
xchg
cld
push
sbb
test
movs
leave
cmp
push
sbb
dec
inc
jb
cmp
dec
aas
test
jbe
or
test
rol
shr
and
(bad)
xchg
cdq
bound
mov
jmp
adc
cmp
jmp
aad
rcl
je
sti
loopne
pop
repnz
add
xchg
pop
pop
in
movs
mov
hlt
mov
aaa
push
leave
push
sti
nop
cmp
add
sub
jl
mov
cmp
jae
mov
in
adc
and
sub
sti
out
sahf
out
sbb
in
in
add
aaa
repz
pop
hlt
mov
js
pop
xchg
cmp
stos
or
dec
outs
cwde
add
adc
jno
lea
aaa
ja
ins
mov
or
inc
jl
pop
mov
adc
shl
dec
xchg
out
mov
cmp
data16
jo
js
push
jge
imul
or
adc
dec
out
mov
mov
repz
cmc
dec
repnz
sub
in
enter
xchg
inc
retf
sti
xchg
pop
inc
xor
cmc
sub
adc
imul
inc
sbb
mov
dec
add
cmps
outs
cmp
or
iret
jo
lods
outs
cli
addr16
retf
mov
out
pop
sbb
mov
dec
fisub
mov
outs
mov
cmp
lods
data16
cld
jmp
imul
sbb
mov
popa
sub
mov
xchg
inc
into
sub
pop
(bad)
or
daa
scas
xor
rol
jnp
fmul
xor
rcr
ja
mov
sti
add
imul
ror
mov
sub
xchg
lds
xlat
add
ret
jp
cdq
sbb
mov
shl
xor
or
lods
mov
inc
mov
movs
popf
and
sbb
(bad)
push
dec
pop
adc
jno
xchg
jecxz
ins
cwde
hlt
outs
fmul
adc
iret
lock
mov
out
and
scas
into
fimul
push
xchg
scas
jge
and
adc
mov
push
mov
mov
xlat
dec
add
(bad)
pop
neg
test
(bad)
stos
pop
hlt
xor
xor
bound
ins
loopne
sahf
(bad)
or
jnp
mov
dec
(bad)
mov
inc
loope
xchg
push
fmul
add
int
hlt
(bad)
jns
and
xor
je
jb
push
stos
scas
adc
and
dec
call
add
test
inc
dec
xchg
xchg
xchg
or
dec
sbb
mov
or
ret
test
(bad)
dec
arpl
loope
in
jecxz
mov
cld
mov
fucomip
ror
sub
mov
aam
push
out
mov
pop
add
mov
out
mov
(bad)
out
ds
mov
ds
mov
clc
mov
mov
rcr
scas
enter
xchg
aad
pop
jecxz
dec
pop
shl
and
(bad)
jmp
sar
push
not
mov
mov
mov
addr16
push
(bad)
ret
mov
xor
inc
cmps
mov
imul
popa
imul
mov
mov
mov
sub
neg
cli
int
cmc
add
neg
das
mov
inc
mov
lds
into
les
jno
popa
js
mov
sub
call
out
sub
int
enter
call
inc
fstp
jmp
mov
in
test
cdq
jnp
jmp
and
mov
pusha
dec
mov
mov
ret
in
test
aaa
xor
inc
rcr
lea
mov
xchg
inc
push
cmp
push
popf
cld
into
sub
or
pushf
and
clc
cmps
and
xor
push
ja
mov
xor
imul
mov
and
push
sbb
sbb
fs
mov
jp
pop
mov
daa
push
sub
mov
xor
stc
xchg
jp
push
lahf
out
in
jge
mov
gs
and
inc
cmps
jge
xor
mul
cmp
pop
stos
jnp
adc
fnstenv
test
popf
cmps
add
pop
xchg
pop
push
sti
(bad)
push
movs
dec
test
in
pushf
lock
dec
cld
jmp
retf
sahf
adc
aas
(bad)
mov
(bad)
mov
cmps
adc
cmp
sbb
pusha
mov
push
sub
dec
sbb
or
pop
mov
push
cwde
and
jnp
mov
lock
retf
popf
inc
int3
fist
sub
lea
loope
jmp
push
call
fidivr
cmc
mov
sti
inc
stc
scas
dec
cmps
cmps
xchg
ret
mov
dec
dec
push
stos
nop
push
dec
pop
add
out
push
cmps
mov
stos
push
sti
es
out
pop
(bad)
sub
xor
inc
mov
(bad)
sbb
sbb
jae
xlat
cmp
jnp
mov
sub
jne
push
or
inc
mov
or
add
in
cmp
adc
repz
scas
xor
pop
fidiv
xor
cmp
mov
mov
sbb
jbe
push
arpl
and
inc
pop
mov
dec
imul
push
call
mov
loope
add
jmp
(bad)
adc
fstp
js
fcomp
jp
imul
repz
or
xchg
retf
inc
das
xlat
xchg
xchg
fisttp
pop
pop
sahf
ror
repz
ja
sbb
inc
js
dec
mov
(bad)
out
or
iret
xchg
jmp
shr
jnp
push
xchg
xor
outs
mov
xor
lds
jle
movs
add
pop
outs
xchg
out
sahf
and
mov
mov
in
scas
out
sbb
or
sbb
arpl
inc
dec
xchg
cmp
(bad)
in
retf
call
sub
cdq
stos
jns
shr
test
cmp
push
call
repnz
pop
jne
jmp
adc
pop
out
add
and
loop
cmp
jo
jg
mov
test
call
pop
and
mov
fmul
pop
je
xor
xchg
iret
xor
scas
mov
ins
pop
sbb
mov
cmp
jmp
xchg
sbb
pop
add
cld
stc
xlat
dec
ret
out
sub
stc
movs
stos
mov
push
push
push
out
pop
sbb
mov
pushf
push
push
jno
leave
pop
mov
inc
adc
dec
xchg
and
sbb
and
sbb
(bad)
push
push
sub
sbb
inc
out
in
push
or
push
sbb
sar
mov
bswap
or
push
jbe
arpl
push
cmp
dec
mov
leave
mov
call
mov
sub
rol
ins
aas
imul
mov
mov
jne
sbb
cmp
hlt
pop
add
mov
mov
or
jmp
(bad)
aad
sub
fild
shr
xchg
pop
inc
push
ja
or
cmps
cdq
lds
mov
add
(bad)
xchg
in
push
lds
in
push
clc
or
sbb
jnp
fistp
jo
sub
ret
scas
push
loope
test
clc
jg
ret
jge
add
mov
out
push
clc
inc
popf
clc
add
jnp
pop
and
cmps
add
(bad)
dec
jge
scas
lods
(bad)
hlt
jmp
cmp
pop
jp
sub
aad
outs
dec
jg
ss
fwait
aam
(bad)
aas
std
add
cli
rcr
enter
cdq
repnz
(bad)
mov
sbb
call
mov
xchg
adc
jae
out
inc
sub
fiadd
imul
add
or
xchg
mov
pop
sub
mov
mov
or
retf
push
adc
cld
int3
sub
dec
mov
push
cmp
ja
ss
aaa
stos
and
movs
imul
xchg
mov
pop
xor
retf
int
fisubr
lahf
pop
mov
push
fs
retf
sti
js
xchg
inc
int3
jmp
or
ins
inc
xor
inc
call
xchg
or
mov
jp
enter
bound
xchg
xchg
adc
sti
popa
mov
sbb
push
jne
sbb
or
push
sub
fstp
and
sub
push
xchg
(bad)
es
data16
sbb
(bad)
sub
xor
sti
aaa
dec
xchg
pop
add
cmp
adc
(bad)
dec
xor
(bad)
xor
(bad)
je
xchg
jo
jbe
inc
arpl
sti
push
inc
inc
in
mov
sar
test
add
fcomp
add
std
and
cmp
repnz
cwde
xor
lods
pushf
pop
addr16
cmc
jl
add
push
and
xor
xchg
mov
leave
imul
adc
aaa
or
dec
cmp
adc
out
clc
movhps
pop
shl
and
push
fstp
jmp
push
aad
xchg
sub
adc
cmp
ficom
xor
and
retf
mov
(bad)
scas
jno
(bad)
lods
push
mov
sub
pushf
sar
cwde
jbe
mov
cmc
sbb
sub
jnp
das
pushf
mov
mov
retf
sub
shr
sub
push
out
mov
and
scas
cs
pop
xlat
stc
aam
sbb
jg
sbb
mov
int
cmc
scas
cs
(bad)
adc
imul
pop
lahf
in
inc
ins
add
mov
rcl
nop
outs
mov
cmp
pop
cmps
fild
js
adc
(bad)
or
cmps
sbb
cmp
imul
les
jl
or
mov
daa
pop
stc
or
cmps
adc
stos
mov
jl
sbb
cmp
mov
pop
out
fst
stc
aam
pop
into
jmp
movs
ret
dec
add
inc
cmp
ror
ror
scas
mov
inc
adc
mov
cli
stos
and
mov
outs
gs
mov
dec
push
test
test
push
mov
fldcw
jnp
cmps
aad
es
int3
test
xchg
fld
das
call
jg
inc
jbe
outs
push
lock
jnp
repz
and
sub
mov
dec
xchg
fcom
adc
and
sbb
pop
and
mov
(bad)
into
adc
add
int3
data16
jns
sahf
adc
pushf
inc
and
mov
push
and
jmp
jecxz
jb
mov
adc
aam
mov
out
mov
imul
mov
outs
sub
add
out
inc
dec
mov
cwde
mov
mov
rcr
ret
mul
inc
movs
cmps
repnz
iret
mov
mov
jnp
stos
and
add
test
cli
inc
in
xchg
sub
inc
lods
test
repnz
lods
mov
out
rcr
out
bound
sbb
imul
pushf
pushf
lahf
jmp
pop
jp
xor
scas
inc
inc
pop
lods
sub
dec
popf
shr
es
push
sbb
cmp
jmp
fwait
add
fs
gs
jl
gs
mov
lods
xchg
jecxz
push
(bad)
cdq
pop
cld
out
fcmovne
or
add
cld
xor
sub
lods
in
cmps
push
cmp
mov
dec
cdq
jl
repz
test
icebp
(bad)
mov
mov
adc
or
pop
mov
shl
push
not
es
jl
mov
jmp
jae
cmp
in
mov
adc
add
adc
cmps
dec
inc
mov
and
jmp
aad
sbb
hlt
fst
push
inc
and
shr
mov
repnz
(bad)
cmc
sti
data16
imul
inc
pop
xchg
ret
xchg
add
or
dec
aas
jae
xchg
mov
pop
mov
test
add
loopne
dec
xor
mov
push
in
cmp
add
mov
add
inc
retf
xchg
sub
mov
es
(bad)
cmc
push
mov
movs
test
ja
dec
mov
mov
adc
adc
jl
mov
sub
stos
xchg
imul
sub
shl
fild
sub
arpl
(bad)
jl
pop
push
lea
gs
pop
lock
push
xchg
movs
cmp
sub
ret
lds
cmp
repz
mov
outs
mov
fdivr
pop
sub
stos
ret
or
call
in
cld
pop
or
sub
bound
xor
ins
push
dec
pop
or
fisttp
jg
jmp
inc
fstp
adc
jl
mov
push
out
out
sub
test
mov
lock
sub
jecxz
or
sbb
daa
adc
sar
pop
inc
sbb
cli
jae
xchg
cmp
dec
imul
shl
cmp
jp
imul
(bad)
aaa
mov
cmp
enter
jae
dec
loop
and
dec
stos
ins
popa
mov
push
fcom
repnz
or
arpl
mov
lea
or
xchg
sub
pop
aam
clc
(bad)
push
jno
scas
mov
xchg
cmps
les
push
xor
mov
ja
push
hlt
xchg
xor
enter
sbb
xchg
repnz
lods
ins
inc
stc
cmp
out
outs
add
mov
jge
cmc
pop
sub
gs
mov
or
dec
shl
xchg
rol
xchg
out
ins
sbb
pop
sbb
push
arpl
push
adc
mov
dec
out
addr16
mov
fist
or
lahf
cmp
in
xchg
pop
push
or
test
or
pop
(bad)
loop
lods
adc
outs
mov
or
add
sar
lea
leave
rol
inc
pop
rcl
(bad)
mov
and
xchg
and
and
xor
or
and
or
ins
sbb
push
xchg
mov
ds
(bad)
push
dec
js
dec
push
popf
stos
(bad)
(bad)
sub
(bad)
ss
fwait
ror
inc
jecxz
push
lods
mov
out
or
pop
lock
mov
out
xor
mov
cwde
ds
xchg
sub
repz
pop
ja
xchg
pop
adc
cwde
adc
push
std
xor
push
cmp
jp
pop
and
jge
add
int
dec
or
or
jno
imul
cmps
adc
dec
or
inc
int3
or
sbb
ffree
rcl
mov
fcom
or
jp
dec
popf
sbb
jge
adc
push
(bad)
jl
enter
xor
add
addr16
cwde
sub
popf
xor
or
jae
mov
ds
sub
std
push
sub
lods
inc
pop
push
sub
mov
xchg
cmp
loopne
adc
rcr
adc
call
cmp
push
xchg
push
daa
mov
pop
repz
cmp
sub
out
stos
lods
scas
jae
mov
jnp
mov
hlt
jbe
mov
lahf
pop
jmp
stc
add
cdq
sbb
or
push
aad
mov
add
lea
stc
das
sar
sub
ins
sub
xchg
pop
xor
mov
out
add
jmp
ret
enter
push
add
cld
sbb
inc
les
or
inc
dec
cwde
mov
aaa
popf
push
sahf
inc
add
xchg
aam
mov
lods
pop
inc
dec
sbb
int
xor
pop
mov
stos
shr
repnz
mov
xchg
sbb
cli
pop
iret
scas
gs
call
mov
cld
jb
pop
dec
push
je
adc
fs
push
mov
imul
jb
(bad)
fisttp
imul
dec
push
fld
test
(bad)
jmp
nop
call
inc
sub
js
xchg
leave
pop
and
xchg
shl
loopne
pop
les
mov
in
xor
outs
sbb
mov
or
mov
stmxcsr
jae
lahf
or
mov
push
mov
add
pop
jno
xchg
and
jl
dec
xor
shl
iret
add
and
dec
xchg
pop
cmps
push
outs
cli
mov
add
xchg
pop
adc
arpl
push
stos
sbb
xor
rcl
stos
pop
ins
xchg
jb
jae
adc
jo
push
sbb
adc
or
xor
les
pop
cmp
inc
cmp
leave
mov
push
jmp
sbb
not
adc
push
repnz
iret
add
xor
dec
adc
inc
sub
fadd
icebp
ret
repnz
ins
xchg
lock
scas
mov
cs
aad
(bad)
push
pop
in
out
cmc
popf
inc
dec
es
or
pop
inc
push
xchg
jmp
inc
jbe
fcmovbe
jp
(bad)
cld
out
jecxz
loope
sub
inc
push
aad
push
add
shl
outs
push
adc
outs
das
mov
or
call
ret
push
movs
jo
dec
out
adc
das
repnz
daa
and
mov
mov
mov
inc
and
ret
xchg
xor
push
fiadd
dec
aas
and
loopne
pushf
call
mov
ret
cli
outs
lods
movs
mov
sti
dec
add
push
inc
out
mov
out
out
stos
dec
dec
jge
outs
push
pushf
dec
and
mov
loopne
push
inc
aad
sub
icebp
pop
outs
cli
(bad)
movs
xchg
mov
loopne
outs
nop
scas
push
dec
mov
cmp
dec
xchg
mov
cmp
add
mov
retf
mov
adc
rcr
add
rol
lock
fisttp
test
sub
pop
imul
out
adc
push
xchg
sub
cmp
lahf
popf
lods
fild
adc
push
inc
dec
sti
or
lahf
(bad)
mov
cmp
pop
cmps
inc
xchg
push
mov
jne
gs
xchg
ret
push
sub
fidivr
xchg
jns
popf
int3
jmp
in
aad
sbb
fs
repnz
lods
fidiv
cld
repnz
ins
pushf
dec
ja
jge
dec
rol
(bad)
jns
jno
stos
arpl
mov
push
fwait
mov
inc
mov
adc
stos
into
lods
(bad)
pop
xchg
pop
pusha
inc
test
inc
push
in
sub
out
dec
rol
(bad)
clc
nop
cmp
fptan
jge
fimul
jns
xchg
imul
push
mov
xchg
xchg
jnp
jbe
or
into
dec
sub
and
enter
ins
mov
(bad)
rcl
xor
adc
lds
int
ins
or
cli
ss
and
fnstsw
mov
fwait
and
fistp
mov
mov
xchg
push
les
lds
movs
mov
and
inc
mov
stc
pop
adc
mov
xchg
and
mov
cmc
call
movs
out
adc
xchg
push
test
test
mov
out
loope
iret
call
pusha
mov
sub
push
sti
and
cwde
nop
dec
inc
push
stos
sbb
ror
or
cmp
mov
dec
jle
or
sbb
fist
sub
(bad)
js
fidivr
(bad)
sub
mov
add
addr16
push
jo
jbe
or
cdq
rcr
movs
aam
fdivr
test
cmp
(bad)
sub
mov
jo
mov
mov
cld
fsubr
out
out
xor
ins
mov
jecxz
xchg
sbb
cwde
pop
inc
mov
jne
jae
mov
push
fstp
fisttp
sub
cmps
loop
sbb
mov
xchg
pushf
ret
gs
retf
pop
mov
adc
mov
test
enter
in
sub
sar
repnz
mov
dec
push
test
mov
cmp
stos
mov
dec
es
repz
dec
jg
scas
dec
pop
sti
pop
fs
cmps
daa
or
mov
mov
ret
cmps
sub
dec
test
or
sbb
lods
lea
add
dec
inc
enter
lock
(bad)
push
icebp
(bad)
clc
jp
sbb
add
adc
push
pop
mov
and
dec
or
jl
adc
pop
xor
mov
mov
(bad)
mov
mul
mov
int3
xlat
dec
(bad)
(bad)
sti
jns
mov
sub
lahf
repz
stc
xlat
xlat
aam
mov
dec
lea
mov
push
sub
add
mov
pop
scas
cmp
dec
sti
in
mov
mov
shl
add
push
(bad)
call
xor
and
inc
aam
pop
jnp
jno
xchg
adc
push
push
rcr
and
inc
sub
push
push
jns
push
out
inc
(bad)
std
mov
es
mov
dec
inc
jle
shl
or
(bad)
aaa
int
lods
sbb
and
retf
mov
fild
retf
mov
sahf
jmp
mov
mov
sbb
test
push
out
pushf
and
movs
in
arpl
sbb
cmp
daa
xchg
cmp
xchg
mov
gs
pop
loop
stc
add
jp
push
push
ret
jmp
push
xchg
fnsave
idiv
push
dec
stos
stos
mov
pop
scas
push
mov
adc
fwait
mov
xor
mov
dec
movs
idiv
rcr
dec
imul
call
sbb
adc
sti
xchg
into
outs
stos
pop
or
mov
mov
lock
movs
cs
das
and
sub
sbb
sub
xlat
je
fbstp
and
pop
sub
rcl
ss
add
test
inc
lock
into
xor
jbe
jb
test
xor
pop
lea
in
sbb
lock
retf
cmp
xchg
(bad)
jmp
int3
aaa
push
xor
popa
int3
ret
nop
or
repnz
push
wbinvd
loop
popa
std
cmp
out
xchg
push
ins
call
mov
sbb
mov
test
xor
mov
outs
jp
fstp
ins
lea
add
ins
leave
cmps
icebp
mov
mov
lock
xchg
inc
test
jmp
mov
std
mov
fist
cmp
mov
retf
ret
push
mov
mov
lock
push
mov
pop
pop
push
jg
xchg
shr
pop
adc
imul
xchg
leave
mov
push
sbb
xchg
push
loop
(bad)
into
adc
and
test
cmp
push
add
les
call
adc
mov
fmul
push
mov
pusha
and
icebp
cwde
sbb
repnz
xor
pushf
cmp
rcl
movs
add
sub
fyl2xp1
and
mov
mov
push
lds
pop
cmps
ror
pop
popf
adc
arpl
je
aam
(bad)
aas
inc
mov
icebp
and
(bad)
xchg
call
loope
cmp
and
or
sbb
add
enter
test
movs
xchg
or
lea
pushf
sbb
lods
mov
stos
jge
mov
les
pop
sub
icebp
call
sub
sti
pop
std
add
xchg
outs
inc
push
nop
and
into
jae
dec
add
push
push
push
sbb
and
push
je
mov
shl
push
lea
ficom
std
gs
cld
fwait
xchg
outs
repz
xor
js
pop
cmp
lahf
mov
rcr
mov
xor
sub
ret
ret
in
(bad)
and
in
add
popa
pop
int3
ret
mov
in
mov
dec
test
enter
aaa
adc
or
scas
push
jno
sbb
pop
shr
cmps
push
jp
push
out
pop
sbb
or
sahf
push
out
xlat
dec
ins
(bad)
sbb
icebp
cwde
jecxz
jecxz
cmp
aas
lods
mov
icebp
test
pop
clc
retf
xchg
cmc
and
cld
mov
or
add
dec
std
pop
lods
pop
push
test
lds
lock
add
jae
popa
push
fld
jg
adc
add
sbb
imul
ret
dec
aam
pop
popa
cmp
add
mov
out
cwde
lds
sub
inc
jnp
push
push
lahf
fmulp
jno
das
adc
pop
sub
cmp
jecxz
jl
jb
or
in
bound
adc
adc
lods
and
shl
sbb
dec
mov
lods
shl
push
movs
mov
push
cmps
jae
push
adc
mov
xor
lods
and
adc
push
jmp
fisub
cmps
mov
xchg
cmp
out
mov
xor
push
mov
and
shl
mov
iret
pop
lahf
push
inc
dec
lods
cmp
test
iret
into
xchg
imul
pop
inc
jl
xchg
jnp
lds
adc
xor
stos
js
and
jo
repz
xor
mov
aam
(bad)
jp
into
dec
in
jg
in
ret
jbe
add
lods
icebp
sahf
out
pop
push
popw
mov
push
sbb
push
sbb
cmc
cmps
das
(bad)
jl
into
repnz
lods
cmp
rol
fdiv
xchg
outs
pop
jb
add
jmpw
inc
retf
fcomp
pop
pop
mov
loope
xor
jle
fs
and
or
aad
and
mov
adc
mov
jbe
sbb
into
dec
push
sub
xor
xchg
push
(bad)
ficom
arpl
mov
cs
fldcw
xchg
shr
jg
mov
push
add
or
inc
push
push
inc
sub
and
popf
repnz
mov
mov
sub
mov
sbb
out
mov
cwde
xor
and
xchg
xchg
xchg
pop
test
or
sbb
pop
fnstcw
outs
into
push
jmp
xacquire
push
shl
sbb
dec
push
ror
ret
sbb
pop
jb
push
hlt
mov
(bad)
and
call
pop
sbb
adc
cmc
enter
aad
fadd
cmp
std
imul
movs
mov
add
cmps
nop
push
jno
ss
cmp
bound
and
xor
loopne
adc
cli
xchg
jge
inc
adc
mov
leave
fwait
ins
in
iret
adc
iret
clc
and
scas
push
sub
rol
out
lods
sub
cmps
mov
pop
jnp
inc
xchg
enter
xor
pop
jno
scas
in
mov
in
cld
mov
adc
imul
dec
neg
jne
mov
mov
and
or
push
jg
mov
in
repnz
xchg
ins
daa
jne
aaa
push
lds
or
push
inc
adc
jb
xor
stos
pop
scas
xchg
repz
xchg
mov
xchg
stc
mov
pop
repnz
cmps
xlat
out
add
aam
adc
pop
pop
and
sub
hlt
push
call
out
xor
and
xchg
bound
jmp
cli
mov
scas
loop
mov
and
xchg
mov
cmp
jae
jmp
pusha
push
dec
mov
cmp
cli
dec
and
inc
js
imul
sbb
mov
in
add
sbb
(bad)
mov
hlt
xchg
xor
fsubr
cmp
aam
shr
shl
fmul
inc
sub
nop
cmps
inc
out
cld
xchg
mov
push
(bad)
push
loopne
in
btc
cmc
add
add
and
adc
ss
push
and
xor
daa
aam
mov
pop
pop
(bad)
out
push
mov
pop
xchg
cmp
fbld
jne
push
in
push
in
inc
(bad)
adc
push
outs
push
ror
jb
mov
cmp
adc
jo
xor
sub
xor
mov
or
cdq
adc
cmp
(bad)
mov
mov
sbb
or
pop
cwde
mov
lds
pushf
push
call
pcmpeqb
dec
lods
imul
repz
xor
jg
xor
push
pop
or
xchg
(bad)
pop
retf
gs
push
out
in
popa
and
scas
mov
sub
imul
cs
iret
icebp
jnp
inc
add
and
mov
mov
not
stos
sub
pop
test
mov
mov
mov
retf
inc
dec
pop
imul
jp
movs
out
iret
add
mov
push
sub
ss
retf
ins
or
and
test
repz
jmp
rcl
clc
rcr
and
loop
leave
(bad)
in
xchg
mov
pop
pop
data16
dec
(bad)
in
repz
adc
cmp
push
inc
cli
inc
adc
cmp
enter
sbb
retf
jae
jo
jl
dec
jbe
push
sub
xor
cmc
jmp
dec
sbb
mov
in
fwait
jne
sub
mov
push
jl
xlat
popa
js
pop
push
and
mov
xchg
stos
sar
xor
sahf
dec
daa
add
or
call
jg
les
outs
push
addr16
and
cdq
jae
lock
or
cmps
icebp
cli
(bad)
dec
enter
clc
sti
xor
pop
mov
add
fimul
add
stos
lahf
xor
fs
mov
cmp
leave
inc
jae
ds
neg
loope
xor
inc
ret
cmp
sahf
xchg
mov
xor
or
icebp
adc
outs
gs
push
in
inc
adc
scas
cmp
pop
(bad)
mov
call
inc
sub
repnz
mov
inc
mov
add
fs
outs
mov
rcl
ja
adc
jnp
ret
sbb
jne
cmc
cmp
rol
pop
jl
pop
mov
xor
push
lods
in
sub
and
stos
lods
cmp
jle
inc
fcom
(bad)
cmp
mov
lods
imul
pop
xchg
xchg
fldcw
mov
cwde
aad
sbb
(bad)
cmp
movs
loope
movs
call
add
(bad)
std
test
mov
inc
enter
xchg
scas
retf
clc
push
or
inc
add
inc
mov
inc
mov
shl
cmp
retf
adc
pop
fwait
js
xorps
es
pop
stos
rcl
cli
xchg
js
sahf
lods
popf
xchg
jb
and
sbb
cli
add
in
jle
popf
adc
mov
fmul
in
outs
push
mov
std
pop
ins
adc
fcomp
nop
aas
mov
push
imul
cmp
xor
sbb
sbb
jge
rol
ins
fistp
test
ss
cmps
sub
adc
popa
and
es
cwde
inc
inc
sub
xor
adc
xor
popa
outs
dec
add
jbe
jmp
dec
adc
out
cs
add
dec
mov
mov
sbb
pop
mov
in
mov
push
push
inc
out
xchg
gs
push
in
cmp
push
mov
ja
call
mov
mov
cmp
sbb
movs
retf
push
jl
sbb
inc
push
(bad)
sbb
push
pop
xchg
rol
int
out
pop
icebp
int
jmp
and
dec
movs
stos
mov
popf
sbb
inc
dec
cwde
dec
jae
adc
jns
dec
cli
lods
push
jp
in
cmp
push
add
jb
test
jge
dec
fsubr
xchg
cli
test
iret
(bad)
jecxz
hlt
out
xchg
inc
push
add
nop
std
inc
ja
dec
and
jo
sub
nop
xchg
jmp
dec
sub
out
ins
mov
pop
test
pop
pop
leave
push
daa
jbe
mov
xor
ins
sub
pop
jmp
xchg
push
sub
fwait
mov
popa
mov
pop
xchg
sbb
ja
addr16
xchg
adc
loopne
out
stc
bound
mov
or
pop
mov
xchg
test
xchg
mov
out
les
aaa
repnz
pop
push
mov
fistp
jle
jle
loop
js
cmc
dec
jmp
mov
in
cmp
or
(bad)
int3
fist
mov
aaa
hlt
pop
lods
mov
jmp
jmp
push
sahf
das
pop
loope
mov
les
jmp
aas
add
movs
sahf
popf
inc
(bad)
xlat
xor
jb
shl
adc
lea
les
inc
jns
ds
pop
sub
adc
loop
xchg
bound
add
pop
dec
dec
mov
pop
jl
fs
dec
xor
adc
scas
fisubr
jecxz
pop
stos
or
sub
pop
add
jo
pop
aad
cmps
and
sbb
fcmovnb
das
sub
jno
in
adc
mov
popf
dec
iret
mov
test
outs
sub
xchg
ins
pop
or
sub
jnp
xor
dec
lods
sar
or
xor
jns
sbb
add
jge
pop
mov
popf
inc
xor
cwde
imul
scas
add
retf
sti
loopne
dec
in
xchg
stos
rol
fstp
jl
faddp
push
loopne
mov
sbb
test
mov
cmp
mov
loopne
jg
pop
aam
repz
inc
test
out
clc
iret
mov
fsub
pop
pop
pop
movs
mov
(bad)
mov
jns
jnp
es
lahf
dec
aas
dec
js
mov
fwait
or
push
or
cli
icebp
sbb
cwde
cld
sahf
test
mov
xchg
jp
rol
outs
je
test
lds
scas
sub
jl
xchg
test
add
cmps
(bad)
sbb
mov
jge
jo
inc
jge
dec
adc
cmps
xchg
sub
pusha
iret
mov
dec
test
xchg
jnp
adc
aas
ret
aas
mov
inc
jns
xor
(bad)
cli
mov
jmp
sbb
pop
lock
fwait
sbb
pop
icebp
dec
adc
inc
in
(bad)
xor
lock
or
xchg
cld
mov
(bad)
pop
mov
inc
add
push
or
test
cs
and
sub
lods
ins
loopne
int
jmp
pop
jne
neg
sub
fisubr
and
aas
add
rsm
pusha
jb
sti
hlt
jbe
inc
mov
enter
jns
dec
test
pop
aad
lahf
stos
inc
jle
shr
and
pop
or
mov
push
adc
adc
or
cmps
jns
xor
adc
int
add
loop
inc
std
add
inc
mov
dec
pop
js
scas
addr16
mov
hlt
sar
jle
pusha
mov
pop
inc
sbb
and
add
ss
enter
inc
aad
rcl
pause
ror
add
es
je
xchg
stos
out
arpl
cmp
cs
xchg
jb
inc
inc
popa
retf
retf
sbb
mov
movs
sbb
(bad)
dec
sbb
and
movs
pop
push
clc
cmp
outs
and
ins
adc
repz
push
or
and
sar
pop
outs
loope
mul
scas
mov
dec
pminsw
push
es
jp
mov
push
div
mov
push
icebp
ret
mov
jns
rcl
sbb
rol
loopne
in
xchg
mov
inc
mov
pop
xchg
arpl
xchg
xchg
int
mov
mov
cmp
push
test
sti
rcr
cld
stos
pop
sbb
and
sub
das
xor
sbb
lods
lahf
cmp
adc
sub
xor
push
inc
cmp
fcmove
icebp
or
nop
add
movups
pop
retf
adc
aas
push
push
xor
and
and
mov
gs
das
stos
stc
xor
outs
or
loopne
dec
es
mov
push
dec
(bad)
popf
sub
mov
or
cmp
xchg
xor
int
jge
mov
inc
add
mov
mov
call
sbb
(bad)
jmp
ret
jl
sub
fmulp
jbe
xchg
cmp
pop
mov
cmp
int
inc
dec
je
test
shr
fidiv
ins
in
adc
lea
bound
out
adc
sahf
dec
test
xchg
loopne
daa
mov
sub
addr16
(bad)
in
jmp
adc
pop
mov
mov
inc
pop
std
mov
shr
jb
mov
fbld
out
dec
into
inc
inc
xchg
cwde
dec
push
jo
pop
aam
xchg
(bad)
retf
popa
jge
lods
xor
cmps
or
adc
jno
or
pop
pop
cmp
xchg
mov
(bad)
jecxz
loopne
mov
lock
clc
gs
add
gs
lock
pop
(bad)
call
lods
inc
js
or
loop
mov
inc
bsf
call
pop
(bad)
or
lea
adc
and
dec
arpl
pop
sub
sub
popa
add
pop
cwde
pop
fistp
inc
inc
add
pop
mov
jne
call
cmc
add
pop
aaa
dec
and
mov
push
rol
ss
neg
addr16
jge
sub
test
ret
xor
mov
adc
push
jge
rcr
(bad)
push
std
dec
adc
pusha
lds
cwde
sub
dec
add
cmp
jl
jb
sub
push
outs
jno
or
imul
shl
scas
leave
dec
jo
mov
mov
and
inc
es
pop
pop
xlat
add
cmp
cmps
add
(bad)
mov
test
addr16
fs
les
and
repz
ins
dec
cmp
push
mov
pop
and
add
push
in
call
cmps
mov
fadd
ss
mov
push
mov
std
mov
pop
lods
loopne
ret
mov
aas
repz
inc
and
or
fild
fld
test
mov
movs
movs
jg
mov
stos
outs
aam
jnp
xchg
fcmovb
sahf
daa
jno
sub
ret
mov
mov
data16
ds
scas
mov
mov
and
div
dec
inc
mov
shr
push
icebp
and
add
xor
or
repz
jo
fwait
mov
fidiv
sub
cmp
test
rcl
js
shl
sbb
push
int3
cmp
mov
stos
(bad)
cmp
cmp
pop
out
test
imul
jmp
or
gs
xor
dec
pop
mov
jnp
cmps
enter
jecxz
bound
push
das
lock
int3
inc
and
mov
pop
push
(bad)
mov
pop
in
out
je
push
pop
pop
ds
cmc
pop
cmc
enter
ds
es
pop
or
adc
xor
cdq
add
inc
imul
dec
scas
jl
ret
xchg
iret
mov
xchg
adc
adc
xchg
ins
xchg
cmp
ret
jne
sbb
cmp
test
mov
and
(bad)
movs
ja
mov
fnstcw
sti
(bad)
xchg
es
adc
mov
out
cmp
push
jne
cld
mov
clc
les
push
icebp
push
adc
add
dec
out
cmp
adc
push
lea
xlat
retf
pop
cmovl
test
cmp
cmp
xor
sub
mov
retf
mov
jae
in
fcmovne
cmp
xchg
into
stc
jns
test
(bad)
enter
movs
daa
inc
mov
out
ins
ja
cmp
stc
mov
jo
pop
dec
pop
mov
cs
add
mov
jbe
or
mov
rcr
outs
mov
out
stos
mov
lock
push
mov
inc
int3
add
mov
xchg
dec
pop
das
stc
jge
mov
xor
stos
xor
cld
mov
add
dec
(bad)
add
cmp
sub
cmp
cwde
or
shl
pushf
or
jle
cmps
xlat
adc
test
retfw
in
push
inc
or
xor
pop
pop
inc
sub
inc
adc
test
ins
adc
pop
dec
in
pusha
add
mov
adc
and
and
or
jmp
stc
cmp
jbe
add
mov
call
cmp
test
jg
push
mov
ja
or
mov
and
sub
inc
mov
and
xchg
jg
pop
pushf
mov
nop
pop
ror
hlt
xchg
je
js
daa
xchg
mov
cmp
mov
shr
inc
enter
std
xchg
push
pop
test
call
out
scas
in
and
push
ror
sub
inc
arpl
xchg
pop
outs
xor
jge
sub
dec
bound
in
adc
inc
in
jmp
enter
push
jle
sbb
lock
sub
add
outs
sub
addr16
push
fild
lock
loope
imul
imul
in
or
mov
aam
mov
ins
(bad)
es
xor
adc
jmp
mov
mov
out
mov
mov
xchg
mov
sar
and
pop
mov
jmp
and
cmp
mov
push
(bad)
sar
rcr
call
xchg
and
xchg
lods
jne
mov
xchg
add
daa
clc
ss
mov
mov
iret
and
clc
std
jecxz
mov
lock
adc
cmp
rcl
push
adc
stos
jns
loop
fwait
dec
ret
enter
mov
xlat
mov
mov
aas
xor
jl
mov
and
jmp
pop
push
fsub
xchg
adc
aad
add
adc
retf
sti
outs
xchg
or
sbb
sbb
stos
das
pop
test
popa
cli
ins
push
mov
std
pop
pop
frstor
mov
adc
push
jmp
xchg
inc
imul
shl
jle
add
cmps
call
inc
fcom
out
data16
fidiv
imul
mov
mov
sbb
std
xchg
(bad)
jae
call
leave
sahf
add
mov
mov
cmp
xchg
leave
in
xor
cmp
inc
out
ror
jl
mov
sub
jg
(bad)
dec
and
arpl
push
aas
retf
xchg
popf
aaa
daa
xor
mov
pop
jmp
jecxz
cld
out
pop
shl
daa
and
fsubr
add
fistp
das
cmc
mov
imul
jge
lsl
mov
(bad)
fcomi
pop
sar
sbb
inc
mov
(bad)
rcr
adc
dec
and
not
xchg
and
std
enter
pop
pop
shl
iret
pop
cmps
cwde
inc
retf
pop
dec
pusha
fidiv
push
jge
retf
mov
pop
adc
imul
sbb
data16
stos
loope
(bad)
outs
jmp
(bad)
stos
jp
mov
mov
push
dec
or
ss
out
addr16
inc
cmp
inc
sub
and
inc
xchg
xchg
or
jb
sub
mov
xchg
ret
and
stos
xchg
imul
mov
retf
jo
and
pop
call
imul
jge
inc
xlat
cmp
or
xor
(bad)
icebp
add
jns
mov
dec
sub
sub
jmp
lock
pop
or
sub
mov
cmps
scas
rcr
cmp
sahf
ror
sti
jae
mov
push
push
or
mov
inc
pop
add
int
xchg
std
mov
jne
mov
and
not
and
push
inc
loope
fsubr
sub
je
ja
sti
push
ret
outs
cld
push
sbb
add
mov
ss
aam
and
mov
push
cmp
sub
jo
scas
ficom
outs
jb
or
sbb
test
lds
popa
loope
es
ja
js
dec
inc
iret
or
lods
inc
stos
mov
pop
xchg
jecxz
cmp
hlt
jb
or
add
push
leave
add
jns
mov
mov
inc
cmc
dec
retf
je
hlt
adc
inc
jbe
pop
cmc
dec
jno
mov
ja
jl
sbb
stos
dec
(bad)
mov
movs
push
dec
fcomi
jle
stos
xchg
lahf
loop
jmp
das
add
das
in
add
addr16
xchg
xchg
jmp
xchg
mov
neg
(bad)
sbb
pop
dec
out
in
mov
add
dec
popa
cmp
push
iret
lock
xchg
out
repnz
cmp
nop
std
dec
pop
cli
repnz
nop
jle
sbb
and
retf
test
ins
jns
loope
mov
and
js
sub
mov
addr16
cmp
lods
mov
lock
xchg
arpl
sbb
mov
mov
aaa
xchg
add
mov
retf
xchg
sbb
xor
ins
cmp
outs
and
jnp
and
daa
int
pushf
xor
or
xchg
ja
mov
daa
xchg
fs
test
rcr
fld
sbb
jo
mov
mov
xchg
sbb
cmp
ins
xor
jns
jbe
mov
ja
fs
jb
repz
jmp
jge
push
in
dec
add
adc
add
mov
lock
push
clc
xor
(bad)
shl
(bad)
outs
fistp
ins
pop
pop
jmp
xchg
dec
(bad)
cmps
mov
adc
pushf
(bad)
xor
imul
and
sub
mov
into
xor
xor
scas
pop
cld
mov
dec
xor
pop
leave
call
cmovge
sar
dec
push
pop
sub
jecxz
call
imul
push
pop
jo
dec
enter
mov
ret
or
mov
xor
int3
and
mov
xchg
xchg
(bad)
call
dec
cli
jbe
xor
cld
mov
stos
arpl
mov
(bad)
cmps
je
push
mov
cmp
test
popa
pop
xor
mov
xchg
shl
push
fist
xor
add
mov
repz
nop
xchg
lock
lahf
jmp
and
(bad)
pop
or
inc
and
push
lahf
xlat
ss
ret
es
rcl
(bad)
fistp
sub
les
ret
(bad)
sub
test
leave
jb
mov
jp
test
sbb
inc
div
xchg
mov
mov
cld
aam
ins
adc
call
ret
lds
sub
cld
mov
jle
lods
mov
adc
out
jmp
mov
add
push
popf
push
nop
jecxz
mov
mov
fld1
inc
ins
jge
call
fsub
mov
nop
pusha
shl
jb
scas
adc
sub
sahf
push
ins
in
ret
std
in
es
pop
cmp
arpl
in
adc
loope
in
xor
sahf
imul
popf
xchg
mov
mov
mov
sub
cwde
leave
jle
push
dec
outs
or
sub
inc
scas
inc
repnz
mov
repnz
inc
push
sub
stos
inc
iret
or
enter
and
test
gs
mov
arpl
stos
stc
(bad)
mov
mov
rcl
push
jb
icebp
and
xchg
mov
mov
(bad)
into
sub
(bad)
sbb
aad
sub
adc
call
adc
not
loopne
cmp
cmp
and
inc
push
add
call
pop
inc
xchg
adc
(bad)
and
fadd
call
mov
ret
in
mov
dec
mov
lock
push
mov
test
push
daa
scas
or
pop
es
test
mov
leave
nop
xchg
push
mov
mov
push
cmp
test
(bad)
lea
test
mov
cld
inc
(bad)
and
push
add
push
or
loope
pop
test
jae
push
mov
enter
shl
jge
(bad)
sub
jp
cmp
inc
sub
loope
dec
shl
xor
mov
push
push
lods
inc
test
or
jbe
lock
iret
test
mov
adc
dec
xor
aad
fdivr
push
or
xor
sbb
popa
xlat
push
mov
mov
lea
push
loope
fbstp
inc
stc
mov
xchg
push
xchg
scas
dec
mov
jecxz
sbb
aam
sbb
jbe
stc
xchg
inc
gs
jno
push
fdivr
sbb
cmc
(bad)
mov
in
rol
retf
stos
and
ror
inc
mov
test
and
in
ds
out
or
in
mov
sub
jo
sbb
dec
loopne
hlt
mov
sbb
jmp
pop
add
jg
mov
int
sub
test
loopne
ror
ins
mov
dec
cdq
push
inc
inc
out
(bad)
pop
ja
mov
aaa
sub
mov
aad
popa
aam
cmp
into
(bad)
jne
test
js
add
mov
xchg
ror
fdivrp
out
add
add
cmp
popf
push
inc
push
xor
aaa
inc
out
jg
xor
movs
add
cmp
dec
std
dec
jge
cdq
enter
out
cmp
pop
inc
fs
lea
mov
adc
jne
(bad)
outs
shl
mov
add
mov
cmp
or
adc
xor
ror
mov
jns
outs
out
pop
int3
push
adc
out
fld
sub
sti
inc
xchg
lds
das
pop
fsubr
in
imul
dec
das
mov
repnz
push
cmp
jae
jmp
push
sub
into
sahf
ins
(bad)
push
add
lock
outs
(bad)
mov
popa
hlt
fprem
pop
sub
mov
iret
pusha
fwait
fs
dec
shl
jmp
cmp
pop
movs
mov
test
lock
mov
inc
in
int3
mov
test
stc
cs
dec
mov
pop
bound
movs
or
leave
imul
push
mov
retf
fwait
inc
loop
aaa
push
(bad)
ret
xchg
mov
aam
adc
mov
sub
clc
jecxz
sti
and
dec
dec
sub
sahf
push
push
cmps
push
mov
xchg
sub
mov
ja
mul
pop
bound
(bad)
lahf
or
mov
ds
cmp
pop
jmp
mov
cwde
jg
inc
xchg
push
sbb
pop
lahf
xor
in
daa
shr
jge
mov
in
jno
out
dec
jge
xor
mov
js
xlat
xor
stc
dec
xchg
jbe
ret
shl
fnsave
or
push
mov
retf
stc
and
sub
and
inc
(bad)
jmp
(bad)
aad
cmps
mov
jmp
xor
add
aad
cmp
les
mov
jno
sbb
push
jns
repz
pop
cmp
aam
loope
out
and
outs
sar
add
lods
inc
popf
xchg
not
push
mov
call
dec
push
push
movs
sbb
aam
jns
movs
sub
mov
test
pop
lods
inc
sbb
adc
scas
data16
xchg
push
sub
aad
pop
shl
sub
mov
mov
pop
icebp
xchg
pop
fidivr
mov
pop
ret
addr16
jnp
inc
in
cdq
repz
xchg
sub
jecxz
mov
cld
in
movs
bound
push
mov
sub
repnz
ss
(bad)
xchg
jne
sar
pop
inc
sbb
in
push
xchg
add
or
add
dec
fwait
dec
mov
push
je
inc
mov
test
jns
lods
add
and
pop
lahf
es
jmp
and
inc
imul
test
dec
mov
mov
arpl
xor
rol
pop
push
imul
test
dec
ja
and
into
adc
cld
pop
mov
sub
inc
jnp
pop
xchg
ret
lock
pop
pop
loop
pushf
loope
or
fsubr
addr16
repnz
lahf
popf
mov
mov
call
aam
and
xor
(bad)
arpl
or
cmp
or
cmp
fdivr
and
mov
jle
jno
pop
out
nop
loope
mov
xor
arpl
jae
pusha
fsub
inc
inc
leave
xlat
jg
scas
cmps
xor
lahf
xchg
aad
cli
js
pushw
sub
push
and
ret
or
dec
sub
sub
pop
out
loop
dec
and
add
aaa
or
lahf
ins
mov
rcr
mov
add
cmp
sub
sahf
popf
sub
(bad)
mov
loopne
xchg
(bad)
pop
jb
push
mov
mov
and
mov
sbb
mov
xor
dec
ror
les
in
(bad)
or
and
sar
or
add
adc
mov
sub
or
fwait
call
add
dec
or
popf
mov
xor
cmc
sbb
iret
xor
sub
inc
cmp
rcl
sbb
pop
push
inc
mov
mov
repz
mov
xchg
pop
mov
lods
daa
(bad)
ins
pop
jmp
scas
pop
mov
lods
adc
out
add
push
ret
mov
jmp
xchg
mov
call
mov
mov
push
jg
xor
xchg
cdq
add
add
dec
xor
scas
inc
loope
into
retf
ja
frstor
push
pop
in
fwait
stos
gs
xchg
pop
ins
xor
mov
xchg
xor
push
xor
repnz
push
adc
mov
sti
out
xchg
and
or
sbb
xor
jl
in
inc
dec
xchg
jae
push
cmps
je
mov
(bad)
fiadd
cmps
sbb
sti
mov
and
mov
ins
cmp
mov
inc
push
or
ret
mov
out
ret
dec
sub
pushf
ins
xchg
sbb
movs
push
aaa
rcl
adc
jbe
iret
push
(bad)
je
push
outs
mov
sti
sti
in
xchg
outs
adc
push
jns
fidiv
lods
sbb
outs
mov
xchg
ja
sbb
scas
fwait
retf
cmp
inc
cmp
retf
sub
aam
sbb
cmp
mov
ret
add
mov
dec
(bad)
mov
inc
pop
and
les
addr16
mov
adc
int3
into
cmp
rcr
sbb
adc
add
mov
arpl
xor
cmp
inc
mov
add
lea
and
aaa
push
aam
clc
xchg
mov
repz
pop
push
lock
jno
lods
dec
xchg
outs
ret
mov
aaa
bound
adc
or
out
adc
mov
mov
cmp
ror
outs
push
xchg
sub
ret
stos
pushf
cmps
or
push
fst
adc
aas
inc
and
(bad)
and
pop
in
mov
ins
adc
dec
and
adc
les
mov
dec
sbb
retf
test
test
inc
jl
ss
xor
ds
mov
xor
dec
sbb
mov
test
fwait
je
push
(bad)
xor
idiv
push
unpckhps
std
iret
cmp
jo
add
loopne
dec
test
sub
scas
sub
and
sbb
mov
mov
movs
add
cmc
adc
sub
rcr
xor
sub
retf
fstp
xchg
mov
xchg
mov
cs
pop
(bad)
adc
in
ja
hlt
test
mov
xchg
and
dec
fstp
pop
fwait
call
jge
mov
sbb
arpl
pop
test
imul
mov
pusha
mov
mov
js
xor
sub
sub
and
xchg
out
add
mov
sbb
push
(bad)
je
cld
jnp
aam
retf
out
out
inc
les
jecxz
leave
cdq
sbb
jns
cwde
push
mov
xchg
mov
dec
jmp
(bad)
call
ins
call
add
xor
ds
icebp
stos
fisubr
mov
xor
inc
pop
jo
mov
into
icebp
sub
test
jg
nop
sbb
stos
cmp
or
adc
inc
(bad)
gs
stos
mov
mov
hlt
mov
or
cmp
rcr
cwde
sbb
out
repnz
push
mov
mov
pmaxub
ret
push
aad
mov
xlat
repz
in
pop
sbb
mov
mov
jg
cmp
in
mov
outs
jae
and
adc
fst
mov
sub
pushf
dec
lock
cli
add
repz
add
or
mov
bound
outs
cmp
(bad)
mov
jg
or
cmp
mov
fwait
pop
out
or
add
dec
push
add
cld
mov
ds
retf
aam
adc
mov
pop
and
pop
std
mov
and
ss
ror
jns
ret
xor
mov
push
fdiv
out
pop
popf
inc
popa
or
xchg
test
or
mov
sub
adc
dec
jmp
gs
mov
lds
mov
div
push
jecxz
loopne
sub
call
clc
xchg
add
or
xchg
dec
lods
pop
test
sbb
pop
call
dec
push
das
enter
shl
(bad)
sar
and
outs
popf
mov
shl
jmp
adc
jno
test
sub
sahf
jle
jp
xchg
pop
push
jae
fdivr
retf
sub
xchg
cmps
pop
and
(bad)
jmp
cdq
sub
pop
sbb
jl
aaa
jo
shr
sbb
mov
mov
inc
sbb
ret
push
clc
sub
inc
jge
lock
jmp
adc
cmp
xchg
jne
movs
in
sub
stc
fs
fcmovbe
or
(bad)
call
xchg
out
ja
loope
fnstcw
cmps
retf
mov
mov
jo
xor
popa
fucomp
inc
out
fldcw
out
(bad)
xlat
sbb
dec
mov
sbb
inc
fucomp
fldcw
mov
add
push
inc
cmp
test
mov
ins
call
aas
push
scas
in
mov
lea
xchg
push
xor
or
sub
mov
adc
into
icebp
lahf
aaa
fxch
repnz
inc
xor
mov
and
pop
out
sbb
es
add
outs
sub
xlat
or
mov
mov
out
mov
sub
mov
not
jne
cwde
inc
rcl
push
and
std
jae
dec
shr
xor
dec
int
lods
clc
out
dec
fsub
and
out
jmp
fld
movs
add
lock
jmp
pop
enter
fcomp
mov
mov
sti
jnp
or
jne
fimul
mov
pop
shr
bound
jp
push
push
and
cdq
mov
xor
inc
xor
sub
pop
rcr
push
jo
inc
test
pop
sub
push
sbb
or
call
aad
push
jg
in
dec
into
jmp
pop
retf
sbb
js
scas
push
cs
xlat
adc
add
popf
clc
test
jnp
mov
lds
iret
xchg
call
aad
or
test
stc
and
mov
xchg
cli
or
jle
leave
ja
fwait
movs
adc
loope
scas
out
add
iret
mov
mov
sub
clc
pop
lds
retf
jne
jecxz
leave
pop
sub
jb
lahf
xchg
out
or
fs
or
pop
or
sahf
xor
and
mov
mov
pop
mov
leave
push
fdivr
ds
cmp
push
loope
or
push
mov
cmp
loope
loope
gs
outs
lods
pop
movs
iret
shl
mov
xor
jbe
jge
fsub
sar
mov
in
pop
jge
dec
mov
xchg
xchg
std
rep
adc
cmp
test
(bad)
xchg
push
stc
dec
and
sbb
repz
ret
repnz
in
fiadd
or
into
pushf
movs
jne
in
adc
out
into
int
jle
mov
inc
test
or
in
fnstenv
dec
mov
sbb
mov
in
push
cmps
mov
gs
pusha
xor
jp
push
pop
cmp
aad
jb
pop
inc
dec
xchg
pop
and
mov
test
xor
jge
std
push
push
rcr
jmp
xlat
mov
xlat
jbe
lea
loop
in
cmp
cwde
or
inc
pop
and
aaa
mov
xor
sbb
fld
std
dec
and
aad
into
test
inc
stc
jmp
scas
sub
mov
xchg
(bad)
rcl
mov
sub
cmp
cmp
pop
inc
cmp
clc
mov
imul
outs
dec
movs
rcl
add
mov
push
outs
xchg
push
(bad)
fsubr
xor
push
icebp
cmps
xchg
(bad)
lock
out
sub
push
jp
fst
jb
call
inc
or
sbb
dec
mov
mov
jbe
sbb
mov
sub
das
sbb
scas
or
jle
fidivr
ins
pop
mov
adc
inc
fist
stos
mov
sti
int3
pop
mov
stc
dec
pop
xchg
je
arpl
stos
pop
xchg
xchg
jns
lods
jae
cdq
shl
sub
sub
js
leave
xlat
out
aaa
sbb
inc
(bad)
iret
shl
mov
adc
popa
ret
jnp
adc
jmp
fnstcw
adc
lar
xchg
sub
jl
loope
push
xor
fimul
fimul
xchg
cli
xchg
jnp
jbe
mov
ins
test
adc
jle
(bad)
push
inc
dec
sahf
add
adc
adc
stc
fs
jns
push
ror
inc
or
outs
outs
and
rcr
mov
jle
int3
jecxz
sbb
ret
loope
jmp
shr
div
fwait
fwait
cmps
shl
sub
mov
sub
dec
mov
mul
adc
dec
sub
ds
push
push
outs
jb
mov
stos
shl
sub
fld
gs
clc
pop
sub
fidiv
call
jmp
int
xchg
xor
iret
pop
xchg
dec
adc
hlt
(bad)
imul
and
xor
nop
shr
xchg
cmp
or
lea
in
imul
dec
sbb
(bad)
lahf
out
cmps
xchg
sub
cmp
mov
mov
retf
int3
cmps
icebp
pop
das
or
add
in
ds
lods
xchg
test
(bad)
xchg
fdivr
movs
sub
cwde
in
add
iret
div
mov
das
bound
push
std
jno
or
outs
arpl
jecxz
adc
add
mov
sbb
pop
sbb
mov
cwde
mov
mov
into
stos
mov
push
lahf
inc
or
xchg
sbb
xadd
loope
sbb
lods
call
sub
inc
inc
daa
inc
mov
add
jecxz
jnp
lea
ror
rol
pop
mov
popa
das
call
pop
cmp
mov
fistp
cs
ret
mov
xchg
pop
jmp
imul
jecxz
dec
fwait
imul
jl
mov
add
loop
aad
fwait
stos
add
dec
xor
pusha
dec
sbb
and
shl
js
xor
pop
xchg
mov
xor
dec
inc
add
(bad)
fcmovbe
jge
loop
xchg
sub
adc
xlat
fdiv
(bad)
aas
call
out
add
out
(bad)
pcmpgtw
test
fst
pop
(bad)
outs
lahf
xchg
xor
dec
fisub
sbb
movs
add
ret
loopne
push
sub
data16
out
xchg
jp
mov
xchg
or
lds
je
mov
retf
shl
add
std
mov
dec
xor
pop
pop
and
addr16
adc
arpl
adc
mov
loopne
mov
push
pop
jns
jns
push
jl
aam
xchg
sbb
in
and
sbb
push
dec
(bad)
shl
(bad)
or
cli
mov
pushf
fstp
sbb
iret
and
iret
mov
imul
mov
jecxz
adc
xor
cmps
push
adc
out
push
(bad)
shl
out
mov
add
cli
shl
sbb
cmp
mov
xor
xchg
mov
jl
lock
das
jnp
mov
push
pusha
pop
pop
rcr
add
outs
sub
and
sar
dec
adc
mov
dec
mov
scas
jbe
jne
sub
cmp
(bad)
mov
sub
or
repnz
out
xor
(bad)
push
inc
jo
enter
bound
xchg
mov
push
dec
mov
add
mov
xor
shl
mov
scas
sti
jp
retf
stc
imul
push
hlt
sbb
ret
call
(bad)
mov
sbb
dec
cli
xor
cs
xchg
cmp
jmp
outs
cmp
fadd
loopne
xor
xchg
nop
pop
push
mov
(bad)
ins
add
aam
jnp
xchg
daa
fnstenv
out
je
outs
cmp
sbb
int3
repz
jne
pushf
mov
pop
cmps
dec
mov
loop
mov
and
ins
jge
pop
ja
fld
and
call
jge
movs
popa
pop
mov
cmp
mov
inc
in
out
dec
out
loope
mov
mov
leave
jp
mov
shr
push
xchg
lock
sbb
fidivr
out
mov
xor
int3
retf
lock
pop
ins
sti
mov
arpl
icebp
xor
adc
cmc
std
jl
icebp
jp
pop
and
xor
cmp
test
repz
or
dec
fsubr
mov
sar
ss
std
cmp
sbb
sbb
mov
fs
push
loopne
and
test
outs
pop
sub
das
sbb
or
sbb
jmp
(bad)
imul
clc
jg
aas
sbb
pop
rcl
popf
ins
iret
clc
lock
dec
and
mov
jbe
in
repz
or
cwde
pop
std
sub
and
pop
lea
dec
push
xor
mov
inc
inc
and
out
(bad)
or
sete
jmp
push
addr16
inc
xor
and
aad
scas
mov
pop
popa
cmp
fwait
push
cmp
jg
sbb
xor
sahf
mov
or
rol
xor
shl
jp
sti
dec
std
push
fld
aam
add
fs
inc
jg
inc
push
sub
sub
add
std
movs
mov
xor
mov
jmp
jle
jbe
enter
lds
mov
sbb
lock
aad
push
pop
add
mov
push
inc
mov
push
out
mov
sub
adc
fnsave
in
int3
outs
loope
cdq
sbb
sub
inc
or
imul
pmuludq
lahf
add
retf
in
inc
mov
cmp
call
add
cmps
mov
add
aaa
or
call
les
mov
outs
call
add
div
pusha
sbb
pop
inc
(bad)
cwde
inc
clc
inc
jmp
dec
mov
jg
jbe
mov
inc
mov
sub
add
mov
xchg
loopne
xchg
stos
cmp
xchg
jg
add
fwait
sbb
dec
or
push
stc
sub
xchg
xchg
sub
mov
mov
pop
fmulp
jle
sub
pop
xor
xor
int
sub
scas
push
cwde
push
(bad)
outs
add
mov
lahf
sbb
mov
mov
inc
xor
call
pushf
jnp
mov
rcr
popf
shl
or
or
bound
mov
data16
sahf
xor
or
xor
rol
adc
mov
adc
jbe
das
ins
outs
xchg
cmp
clc
(bad)
fcom
adc
(bad)
xor
push
ss
mov
adc
imul
mov
push
or
cmps
les
leave
imul
cmp
jmp
or
mov
sub
imul
or
fwait
pusha
scas
loope
shl
jge
lds
mov
push
je
push
pop
leave
std
arpl
push
lods
hlt
repnz
xor
mov
xchg
xor
ud2
fcomp
or
jae
sbb
mov
and
test
adc
push
mov
add
push
mov
in
jb
jne
push
xchg
push
add
fadd
pop
mov
inc
xchg
test
imul
adc
ror
xor
push
or
lahf
in
data16
arpl
in
les
(bad)
cld
in
lods
loope
dec
aam
cli
stc
jge
shr
out
(bad)
outs
add
sbb
ret
and
seta
mov
(bad)
sub
(bad)
and
cli
pop
inc
adc
(bad)
movs
add
adc
push
out
scas
pop
mov
ret
or
lds
in
lea
shr
mov
clc
mov
stos
ror
sar
or
hlt
xchg
(bad)
push
cmp
sahf
cld
jl
jnp
add
std
shr
sub
rol
adc
jg
dec
les
in
and
sbb
aam
ror
rcr
or
add
xor
aaa
loopne
fadd
lock
jecxz
rol
test
jnp
icebp
and
sbb
shr
fidiv
sbb
xchg
cmp
mov
inc
repz
jns
popf
jns
or
sbb
jns
(bad)
pop
sub
test
(bad)
fisub
dec
pop
or
mov
sbb
jge
jecxz
repnz
jg
add
dec
rol
jle
out
sub
es
push
lods
jl
jp
lds
cmc
dec
and
ins
call
jne
mov
(bad)
adc
outs
call
pop
sbb
into
mov
mov
rcl
lock
jl
lods
test
stc
adc
inc
cmp
push
cmp
sbb
pusha
inc
xchg
jnp
repz
or
shl
cmps
push
cmp
in
iret
arpl
ror
movs
dec
inc
pusha
sbb
push
rcl
mov
(bad)
sub
leave
jb
xor
cld
jbe
sub
mov
mov
pop
repz
test
cmp
shr
sbb
out
xchg
jne
lock
aam
inc
popf
repz
add
es
inc
call
repnz
std
jle
adc
dec
xor
mov
mov
add
push
push
add
jl
scas
(bad)
sub
adc
jbe
(bad)
mov
xchg
cmc
in
xchg
mov
xchg
jbe
push
loope
mov
pop
pop
iret
sub
retf
pop
push
cmp
sahf
fdiv
sub
stc
jge
in
dec
push
push
or
add
sub
mov
retf
repz
xchg
out
ss
adc
mov
mov
sbb
xchg
call
movs
pusha
jg
loope
fild
(bad)
pop
mov
or
pop
mov
xlat
mov
ret
jmp
sub
mov
mov
mov
inc
xor
push
cmp
add
mov
adc
sbb
dec
mov
add
xchg
push
pop
hlt
(bad)
push
int
sub
push
mov
neg
movs
and
test
loopne
pop
fldcw
dec
dec
aad
std
mov
pop
or
test
cs
sub
(bad)
jns
sub
(bad)
mov
stc
lods
add
sbb
pop
je
dec
enter
scas
push
or
test
and
mov
aad
test
push
inc
outs
retf
mov
or
mov
xor
jae
repz
retf
xor
add
adc
hlt
sbb
fwait
or
pop
dec
xor
repz
dec
test
imul
mov
pop
gs
mov
adc
es
shl
xchg
or
sti
aad
or
pushf
fwait
and
inc
sbb
sub
jae
push
loope
ret
(bad)
(bad)
nop
mov
pop
and
xchg
push
movs
cmp
popa
sub
lods
ror
mov
mov
sub
aad
fsub
enter
neg
outs
ins
and
pop
in
sbb
stc
push
mov
(bad)
push
icebp
test
mov
imul
sub
inc
and
dec
jmp
pop
shr
jb
call
pushf
lods
test
jae
fisub
aad
mov
fstp
mov
add
or
fld
sub
push
xchg
cmp
push
sar
out
xchg
jecxz
dec
jb
inc
mov
pushf
adc
mov
fstp
adc
movs
lds
xor
mov
loop
dec
dec
xchg
std
push
mov
in
push
loope
loop
mov
xor
out
cmp
retf
loopne
loopne
ins
test
adc
and
pusha
leave
xchg
cmp
and
sti
aam
xor
retf
mov
inc
fst
xchg
sub
mov
inc
cli
ret
xchg
rcr
mov
ins
cdq
fwait
les
push
push
cdq
cmp
jecxz
stos
adc
inc
inc
rcr
in
aas
sbb
add
push
jb
not
movs
push
xchg
je
call
sahf
and
xchg
pop
cmp
and
daa
jmp
or
push
jbe
pop
sbb
push
xor
aad
xor
pop
xchg
retf
aam
jns
sahf
fwait
daa
addr16
cld
dec
dec
loop
mov
mov
test
in
fidiv
jge
mov
push
mov
and
call
hlt
fadd
xor
sub
jp
ins
arpl
stos
mov
out
popf
fild
xor
cmp
lods
int3
(bad)
or
mov
mov
inc
pop
jmp
cmp
push
and
pop
and
cmps
in
fwait
in
mov
adc
not
pop
adc
mov
sub
mov
jmp
cli
in
jg
sub
and
jns
imul
ja
ror
ret
or
mov
jmp
jb
pop
push
imul
push
loop
mov
inc
daa
popa
xor
je
mov
stos
sbb
adc
(bad)
cld
iret
jmp
sti
cmp
ror
mov
in
leave
dec
pop
xchg
adc
cmps
aas
out
(bad)
sbb
and
jb
or
adc
jo
je
sbb
push
cmp
adc
jmp
ja
cmp
jmp
dec
mov
jg
pop
outs
in
jb
pusha
gs
mov
movs
es
in
pop
fmul
rcr
jmp
xor
mov
ret
pop
dec
(bad)
jbe
(bad)
mov
arpl
iret
xor
es
test
fld
call
pop
outs
sbb
cld
xchg
xchg
push
in
ret
into
cmp
aas
push
std
add
test
jge
hlt
xchg
call
mov
pop
add
mov
call
add
bound
xchg
arpl
movs
pusha
ror
outs
call
mov
push
mov
aad
mov
inc
cs
push
cmp
es
fbld
adc
fmul
jmp
sahf
mov
iret
sbb
xlat
xchg
(bad)
pop
pop
outs
clc
fucomi
mov
sub
xchg
pushf
dec
or
jne
mov
(bad)
jecxz
cld
sbb
xlat
retf
sbb
xlat
xchg
sahf
cmp
popf
cmc
hlt
mov
test
stc
repnz
xchg
cmps
jg
mov
stc
lock
ins
xchg
pop
sub
test
stos
ja
test
into
xchg
mov
stc
dec
pop
jnp
call
inc
sub
icebp
not
mov
scas
mov
xor
out
cli
ss
jnp
pop
and
mov
dec
cmp
mov
cwde
fiadd
cmps
jp
aad
xchg
sbb
gs
cmp
pop
addr16
jns
cmp
pop
(bad)
jnp
mov
mov
inc
jmp
push
(bad)
cmp
pusha
movs
cdq
es
and
mov
pop
push
xchg
cmp
mov
sub
inc
shl
repnz
(bad)
push
jle
cmp
jmp
dec
sti
sub
stos
jp
mov
(bad)
fsubr
adc
dec
adc
or
mov
lahf
mov
push
and
cmps
xchg
cmc
das
ds
jb
test
fisub
mov
jne
enter
mov
jl
cdq
push
movs
imul
cmp
cld
push
fistp
mov
and
inc
push
stc
leave
cmovbe
inc
std
cmp
aad
sub
xchg
cmp
mov
repnz
movs
dec
in
test
xor
into
push
jl
rcl
pop
sti
cmp
mov
dec
inc
fnstsw
stos
xchg
or
push
or
lods
pop
mov
push
in
inc
jo
inc
dec
push
(bad)
adc
jg
adc
push
mov
mov
mov
lds
push
pusha
test
xor
sub
jmp
xchg
push
add
jae
sar
mov
bound
data16
sub
mov
xchg
push
xor
pop
inc
or
iret
rcl
in
adc
mov
pop
adc
scas
inc
xchg
scas
in
dec
imul
std
cmp
cmps
pop
(bad)
imul
outs
mov
adc
mov
rol
dec
inc
xchg
sbb
nop
mov
loopne
xchg
imul
push
mov
pop
mov
fmul
cmp
in
push
data16
cmp
das
outs
xchg
ins
cmp
sbb
push
test
dec
mov
push
push
outs
in
add
leave
xor
push
pop
adc
mov
cmp
push
xor
stos
pop
push
pushf
inc
addr16
ret
xchg
into
cdq
xchg
(bad)
mov
inc
adc
adc
repz
sti
inc
out
mov
in
push
sub
or
mov
cmp
or
add
(bad)
retf
inc
or
inc
mov
or
or
xor
(bad)
xor
mov
addr16
imul
lahf
cmc
scas
bound
cld
adc
or
dec
es
sbb
mov
fnstsw
sub
or
rcl
dec
jge
dec
(bad)
cmps
test
icebp
xor
pop
cld
and
js
sbb
(bad)
ret
repz
dec
(bad)
out
xlat
or
mov
and
push
sar
fcmovb
xor
in
mov
out
(bad)
repz
icebp
sbb
adc
dec
rcr
jnp
(bad)
aad
cmp
clc
pop
sbb
xlat
dec
out
push
loope
movs
cld
in
inc
mov
push
out
fidiv
sub
xor
xlat
arpl
in
mov
fwait
lods
dec
iret
loop
into
sub
repnz
faddp
cmc
lods
adc
mov
add
out
xchg
dec
mov
into
xchg
daa
pusha
retf
jb
nop
cdq
adc
fwait
dec
rcl
push
xchg
pop
push
test
rol
bound
or
adc
jge
rcl
lock
mov
inc
inc
sbb
daa
in
ins
loop
dec
in
and
in
mov
in
pop
add
pop
adc
adc
mov
ret
shr
lods
mov
mov
xlat
add
shl
fs
push
push
imul
lds
jle
push
xor
int
adc
in
and
inc
(bad)
xor
je
inc
mov
or
pop
dec
push
shl
cmp
ins
mov
fsubr
cmp
test
inc
pop
(bad)
outs
lods
adc
and
adc
push
retf
pop
push
inc
lahf
cmp
mov
and
inc
push
sub
mov
fwait
sbb
push
in
push
or
adc
lahf
push
pop
and
xor
xor
icebp
lods
dec
and
bound
ins
fwait
nop
stc
jbe
push
ror
(bad)
lds
push
jp
jl
repz
jecxz
aam
xor
sti
sbb
mov
inc
cdq
dec
int3
lahf
pop
sub
outs
jmp
fidiv
outs
enter
add
inc
jmp
rcl
cmps
inc
gs
aaa
cmps
fld
mov
add
cmps
pop
add
je
dec
and
dec
mov
adc
outs
fwait
in
daa
sub
xor
jo
fisubr
hlt
mov
in
out
loopne
loop
je
cmc
sti
fcomp
sbb
ds
add
xchg
aam
ss
push
movs
mov
xchg
inc
dec
cli
ficomp
test
jge
adc
movs
xchg
xor
xchg
in
pop
sbb
mov
jbe
add
aaa
sbb
mov
sub
in
sub
or
in
rol
cmp
test
adc
or
imul
daa
mov
push
cld
and
fidiv
nop
hlt
mov
cmp
outs
sub
or
cmp
mov
popa
jmp
inc
hlt
jecxz
jbe
cmp
jnp
rcl
retf
pop
ss
lods
hlt
sub
in
pop
in
mov
cmp
jb
xchg
jg
loope
lea
in
dec
loop
or
xchg
loop
cmc
add
jle
cmps
adc
test
cmp
inc
pop
(bad)
add
pop
mov
stos
dec
jp
std
mov
push
fwait
sbb
sub
push
stos
jbe
or
mov
ds
cmp
mov
mov
in
pop
mov
rcr
mov
mov
inc
xchg
xchg
ror
mov
and
outs
dec
ret
stos
add
inc
retf
hlt
xchg
adc
cmp
dec
mov
js
sbb
and
push
pop
ja
and
pcmpgtb
adc
xor
inc
or
dec
mov
xchg
cdq
movs
das
jecxz
xor
push
mov
adc
xor
int3
mov
mov
bsf
add
(bad)
clc
fs
shl
pop
sbb
js
adc
xor
sub
fild
cmp
aas
bound
je
add
dec
call
sub
mov
push
jae
test
aaa
out
adc
aas
and
xchg
xor
iret
inc
cmc
push
pop
fwait
pop
aas
cmp
daa
xor
fcom
mov
enter
mov
pop
ret
nop
fs
nop
and
dec
test
xlat
xor
jl
std
jno
add
dec
inc
cmp
rol
icebp
mov
jno
jb
jmp
mov
or
pop
fisttp
sub
xchg
mov
aas
jmp
pop
mov
xchg
jmp
jb
jmp
retf
mov
pop
mov
aaa
mov
add
mov
inc
lods
popf
add
cmps
mov
sahf
mov
adc
dec
clc
pop
aas
ror
fiadd
rcr
and
fnsave
cld
pop
mov
xor
mov
and
sub
pop
jge
sub
(bad)
mov
cmp
mov
adc
xchg
pop
add
mov
push
pop
fstp
inc
rcl
push
cs
mov
hlt
sbb
shr
push
mov
movs
gs
add
adc
mov
outs
test
xor
inc
jb
sbb
mov
out
sbb
mov
(bad)
test
inc
popf
repnz
jb
pop
dec
xor
pop
or
shl
inc
mov
and
or
mov
js
nop
cmp
xor
dec
sbb
jno
dec
push
pop
sub
sub
loop
inc
xchg
dec
loope
mov
add
mov
rol
cmp
mov
jg
cmps
dec
sti
dec
push
mov
adc
cmp
js
and
mov
add
sbb
jge
fild
mov
sub
xchg
out
cmp
xor
int3
std
push
pop
imul
or
ret
or
je
fcmove
pop
xchg
ss
jmp
mov
sbb
je
push
push
pop
sahf
dec
js
adc
das
sbb
xor
imul
push
into
jno
rcl
add
inc
inc
jmp
je
(bad)
(bad)
push
(bad)
push
fmul
out
test
adc
jge
jmp
ja
dec
xchg
loop
cdq
xor
add
and
outs
adc
adc
mov
or
popa
lahf
stos
lahf
mov
add
mov
pop
(bad)
(bad)
cmp
xchg
push
movs
aaa
test
pop
das
mov
fidiv
cmp
test
pop
ja
shr
sti
xchg
in
cdq
fdiv
push
xchg
retf
push
outs
mov
mov
test
and
sub
mov
inc
fmul
or
stc
and
mov
repnz
add
mov
bnd
(bad)
popa
out
cmps
jmp
xor
lock
jbe
xchg
inc
imul
int3
into
(bad)
xor
inc
leave
call
add
loopne
dec
ins
mov
ins
test
iret
hlt
push
retf
fldenv
retf
es
cmc
repz
pop
or
ins
mov
lods
xchg
pop
cmp
mov
dec
xor
out
gs
and
fcomp
add
sbb
jbe
adc
aas
xor
mov
es
and
pop
mov
inc
and
xor
push
stc
push
cmp
jmp
(bad)
fcomp
push
loop
sbb
aaa
pop
mov
xor
cwde
jnp
cmp
shr
xchg
and
push
and
cmp
sub
out
out
movs
loope
aaa
cmp
push
jno
cs
push
lods
mov
ja
add
imul
mov
out
adc
stc
fbld
inc
xchg
pop
jbe
sbb
push
rol
jae
std
(bad)
sbb
push
gs
cdq
sbb
inc
scas
cmp
adc
out
ds
(bad)
call
lods
mov
(bad)
clc
and
popf
icebp
xor
je
adc
xor
test
inc
adc
cs
jb
inc
push
call
mov
iret
pop
sbb
dec
xchg
fild
and
retf
test
out
data16
push
add
mov
mov
add
mov
aam
xchg
into
mov
sbb
xchg
xor
rcr
mov
mov
popa
sub
sbb
clc
nop
dec
sbb
loopne
xor
dec
jmp
hlt
sbb
cmc
arpl
inc
sub
push
popf
mov
ror
loope
jp
ret
inc
icebp
int
adc
add
aaa
adc
lods
add
cmps
data16
pop
cdq
aaa
xchg
xchg
jl
pop
dec
aas
sbb
or
in
mov
jmp
ins
test
out
xchg
pop
inc
dec
push
lock
mov
mov
xchg
retf
xor
scas
imul
adc
cs
push
shl
nop
retf
jnp
outs
(bad)
sbb
xlat
ja
mov
fsubr
cli
int
scas
idiv
jg
jl
dec
fist
int3
dec
repz
and
cmp
mul
stc
push
fisttp
mov
in
in
sbb
test
imul
setne
add
stc
(bad)
not
jns
in
aad
data16
adc
in
repz
pusha
sbb
lds
xchg
lods
data16
mov
push
xor
push
sbb
xchg
sbb
xchg
and
iret
les
add
jb
(bad)
dec
xor
jmp
adc
xchg
jle
mov
fldcw
les
xor
push
mov
cmp
arpl
rcr
fs
repnz
jecxz
pop
stc
js
aam
xor
add
xlat
or
stc
cmp
push
or
mov
outs
cmp
adc
pop
das
stos
int3
jmp
in
lds
fistp
jmp
retf
sahf
sbb
and
push
fcomp
stc
rcl
sub
jno
pop
mov
pop
lds
popa
inc
add
ins
push
test
xchg
mov
mov
pop
pop
adc
and
mov
inc
and
out
pusha
nop
jl
push
out
repnz
stos
movs
les
push
jns
and
jbe
(bad)
nop
xor
out
mov
dec
data16
ins
test
or
add
ss
push
inc
ret
bnd
repz
(bad)
(bad)
into
xlat
loopne
stc
pop
xchg
xchg
out
pop
fdiv
out
jecxz
dec
mov
retf
sub
or
pop
xchg
jae
mov
fidiv
stos
clc
fld
sub
mov
lahf
push
ins
xchg
cmps
ucomiss
jp
stos
and
repz
inc
mov
movs
(bad)
imul
sbb
aaa
fnstenv
xchg
add
push
mov
sub
pushf
inc
arpl
xor
adc
inc
imul
in
inc
dec
mov
mov
xchg
mov
sbb
mov
and
ins
add
sbb
jp
ret
xor
out
(bad)
imul
inc
pop
add
jl
and
call
lock
add
aaa
lds
pop
into
mov
stos
pop
cmp
addr16
mov
dec
cwde
xlat
and
(bad)
repnz
or
xor
jne
push
daa
outs
jno
pop
or
cld
fcom
sar
push
sub
je
xchg
mov
push
hlt
cli
rcl
std
sbb
imul
inc
jge
and
(bad)
int3
mov
mov
fwait
(bad)
cmp
stos
cld
iret
es
test
adc
addr16
add
arpl
mov
mov
out
fidiv
jmp
jecxz
loopne
dec
mov
(bad)
and
aaa
cli
cmc
push
mov
push
xor
stc
mov
fisubr
movs
pop
adc
inc
jne
mov
sahf
repz
adc
jno
cld
mov
lods
adc
ficomp
dec
mov
repnz
in
sbb
in
push
dec
pop
loope
push
(bad)
test
aad
mov
and
xchg
mov
scas
inc
sbb
es
repz
not
pop
sub
loopne
fcom
sub
mov
push
cmc
je
push
movs
mov
xchg
out
fidivr
sahf
sub
xchg
inc
clc
int
ins
dec
xlat
pop
dec
sti
imul
mov
jge
mov
sar
inc
ret
in
fnstsw
std
mov
lods
jno
call
sbb
jmp
dec
clc
xchg
das
std
mov
pop
pop
sbb
jl
fs
fwait
pop
push
push
in
add
push
outs
rcl
jp
or
ficomp
mov
jp
jne
jg
jle
fadd
arpl
movs
mov
push
ins
sub
ins
shl
retf
jmp
sub
test
add
cwde
cwde
inc
xor
push
ins
jno
sar
push
ret
mov
repnz
push
jno
out
push
push
in
mov
sahf
mov
enter
mov
dec
repz
out
cmp
ins
aas
adc
retf
xchg
rol
test
sbb
enter
dec
fild
and
cmp
adc
push
lahf
aas
retf
cli
cmp
std
inc
iret
cs
ins
adc
cmp
xchg
add
push
in
pusha
nop
adc
mov
mov
or
dec
add
xchg
adc
cmps
lods
aaa
popa
(bad)
in
sbb
es
push
mov
outs
jbe
ror
mov
mov
inc
push
retf
int
xchg
mov
sahf
lock
jge
ja
mov
jo
ror
in
sub
xchg
(bad)
test
outs
mov
inc
(bad)
repz
cmp
imul
pushf
rcr
and
and
fld
cmp
(bad)
jnp
jecxz
mov
mov
adc
outs
shl
fisttp
xchg
xchg
add
push
pop
lds
mov
mov
js
bound
inc
dec
sbb
dec
inc
les
cld
lea
sub
xchg
jecxz
data16
push
out
fsubr
adc
mov
mov
cld
movs
je
pop
das
daa
pop
mov
mov
imul
sbb
pusha
mov
arpl
test
popf
cmc
int
inc
cmp
and
pop
or
sbb
lods
or
sub
rcl
mul
imul
(bad)
mov
lods
sub
ss
or
cmp
inc
or
pushf
push
test
mov
cmp
push
or
pop
(bad)
test
mov
repnz
repz
pusha
mov
movs
xchg
xor
test
mov
mov
xor
jo
jg
ja
retf
xor
(bad)
in
mov
mov
inc
aaa
sub
mov
pushf
cmps
mov
fistp
mov
add
ss
push
rcl
call
or
ret
cmps
push
jecxz
repz
fnsave
test
sbb
cmp
or
repz
leave
jmp
or
nop
push
mov
cmp
in
in
ja
outs
stc
into
push
mov
ja
sbb
mov
cdq
push
scas
cmp
cmp
cmps
jecxz
dec
popa
aam
push
push
pop
daa
inc
mul
loopne
icebp
dec
jne
mov
imul
stc
movntq
imul
jnp
stos
mov
or
sbb
mov
pop
push
jmp
mov
mov
add
mov
cmp
push
outs
stos
xor
mov
or
add
setle
inc
inc
movs
lods
std
cmps
addr16
pusha
sbb
bound
gs
arpl
xor
mov
push
mov
mul
(bad)
adc
inc
loopne
jl
mov
xor
outs
xlat
cmps
fwait
sub
jmp
sbb
push
adc
lds
jge
dec
adc
mov
push
sub
scas
and
cmp
mov
fcomp
mov
and
test
out
push
pop
cdq
shl
cmp
jmp
ficom
outs
dec
jns
movs
and
retf
mov
aam
pmulhw
ss
adc
aaa
pop
imul
jge
jns
imul
mov
retf
enter
jmp
dec
mov
pcmpgtb
shl
fsub
std
mov
pushf
push
sub
sbb
pop
inc
xor
repnz
add
aam
fcom
scas
jno
bound
ret
push
xor
sbb
(bad)
adc
test
xchg
cld
rcl
(bad)
popa
jb
repz
push
lods
(bad)
jp
fdivrp
sbb
fsubp
pop
cdq
push
les
xchg
dec
push
pop
dec
sbb
out
shl
inc
cmp
retf
lods
jb
ret
popf
fist
xor
jecxz
mov
movs
mov
push
jecxz
hlt
repz
dec
in
jg
jne
sub
jecxz
xchg
stos
cwde
iret
pushf
xchg
out
xchg
mov
xlat
repnz
in
int
and
push
xor
shl
dec
dec
out
jne
mov
ret
pusha
jno
mov
int3
inc
jmp
push
repnz
xchg
clc
std
dec
out
sub
les
sub
mov
stc
xchg
and
sbb
or
out
dec
adc
pop
mov
mov
movs
jecxz
int
sbb
pop
push
ds
mov
test
dec
je
push
jmp
or
mov
hlt
cmp
inc
inc
arpl
in
mov
sar
sbb
aas
sbb
int
ror
or
push
xor
mov
out
movs
pop
gs
ret
test
das
pop
inc
or
adc
mov
and
add
sub
ss
ror
jbe
cwde
test
aad
add
xchg
cmp
mov
test
retf
ss
scas
pop
ins
add
ret
psubq
je
test
xlat
int3
daa
add
repz
std
xchg
mov
loop
jo
and
and
and
pop
and
sbb
sub
sbb
xchg
pop
adc
fs
add
(bad)
pushf
pop
xor
scas
sub
inc
popa
xchg
xchg
loopne
dec
pop
jg
sub
sbb
add
cld
pop
jp
sbb
or
sub
dec
jmp
and
hlt
ror
mov
mov
pop
or
stos
jecxz
int
scas
addr16
das
pop
xchg
cmp
jno
stc
inc
and
pop
push
retf
push
fisttp
aam
or
mov
aas
pusha
adc
dec
dec
cli
sti
shr
retf
(bad)
je
jnp
aas
shl
test
mov
dec
mov
dec
adc
mov
rol
sub
addr16
add
xor
ja
xor
and
loop
cmp
shr
or
mov
rcr
xchg
sbb
popf
into
test
pushf
or
daa
push
hlt
leave
cmp
call
push
ret
fcomp
pop
sbb
mov
lea
sahf
mov
mov
and
mov
xchg
pop
test
and
xlat
sub
enter
xchg
mov
and
xchg
inc
test
aas
(bad)
test
mov
mov
pop
dec
and
icebp
pop
pusha
nop
test
and
mov
cmp
repnz
mov
mov
fadd
lds
dec
sub
loop
stc
adc
mov
cs
sti
or
xchg
fwait
sbb
push
ins
lods
icebp
and
jmp
add
mov
adc
mov
fistp
pop
dec
(bad)
push
pop
push
mov
call
mov
dec
push
addr16
jp
xchg
pop
fsub
mov
iret
iret
dec
lods
jo
cld
movs
mov
mov
mov
adc
imul
mov
retf
mov
dec
aam
xor
pop
outs
pop
shl
retf
pop
pop
movs
clc
(bad)
sbb
in
imul
scas
inc
test
or
test
xchg
jmp
add
cmps
ins
mov
je
cmc
call
xor
mov
jo
pop
dec
mov
jbe
call
aas
inc
or
dec
fnstcw
pop
xchg
adc
xlat
and
jge
sub
inc
pop
and
or
add
sbb
sub
pop
jae
in
xor
dec
retf
pop
sti
dec
mov
sbb
out
rol
addr16
mov
push
jb
in
or
inc
adc
jge
sub
aaa
mov
sbb
mov
scas
inc
and
sar
xchg
adc
xor
pop
cmp
ins
xchg
inc
xor
dec
outs
or
call
icebp
mov
mov
call
jl
xlat
push
es
jnp
sub
mov
mov
cmp
xor
cmp
retf
cmp
cdq
idiv
aad
mov
movs
push
jbe
push
ja
ret
shl
dec
dec
push
movs
aas
xor
xor
movs
jl
test
loopne
je
cmps
inc
loopne
mov
xchg
cmc
int3
loop
xchg
dec
aas
imul
push
(bad)
adc
loope
fwait
pushf
fidiv
cmps
jnp
push
(bad)
mov
mov
ret
clc
add
add
xchg
jnp
repnz
inc
fxch
outs
lea
lahf
or
jne
pushf
nop
mov
cli
push
sbb
pop
inc
shr
xchg
inc
jge
and
das
cmp
int
push
fdiv
xchg
xor
call
mov
mov
mov
sbb
jge
rcl
push
jne
call
xchg
aaa
aaa
(bad)
not
add
cmp
jae
mov
or
shl
in
jmp
and
sub
jg
lea
jae
mov
pop
and
test
dec
xchg
iret
cli
jno
out
xchg
int3
in
pop
popf
stos
popf
adc
inc
jmp
aas
sti
xor
add
push
jl
mov
cdq
sbb
outs
icebp
sbb
jne
retf
inc
inc
jns
aaa
ds
jno
xchg
test
outs
rol
push
(bad)
cmp
mov
ins
adc
sub
std
dec
data16
and
and
inc
cmp
jne
sbb
sub
xor
jbe
call
cmp
or
xchg
or
dec
lds
inc
sbb
and
and
or
sbb
and
jmp
ss
pusha
sti
jg
jbe
jmp
idiv
ja
stc
sbb
sahf
mov
dec
dec
xchg
shr
jmp
stos
adc
mov
iret
int3
mov
jo
mov
mov
mov
arpl
ss
scas
push
mov
stos
nop
jns
shr
je
lea
and
inc
jg
ins
lods
scas
cmp
icebp
inc
jnp
iret
fiadd
xor
xchg
mov
imul
fst
jmp
cwde
pop
xchg
cmp
sbb
test
xchg
sub
mov
mov
inc
xchg
xchg
fdiv
dec
cmp
push
cmc
mov
cmps
xchg
mov
pop
and
jmp
adc
pop
(bad)
lods
or
ins
sbb
std
popf
pop
sub
mov
mov
aad
or
fldenv
push
test
imul
sar
mov
push
stos
xchg
pop
cmp
das
jno
sub
add
xchg
out
ret
push
sar
cmps
cmps
outs
(bad)
xchg
dec
in
sub
sub
stos
mov
test
pop
bnd
jl
into
push
mov
cmp
ret
in
int
xor
dec
mov
xlat
outs
mov
int3
out
pop
stos
jb
(bad)
std
arpl
mov
ficomp
mov
imul
retf
adc
mov
sbb
mov
cmp
into
daa
aam
mov
mov
les
loope
cmp
jno
cmps
inc
cmp
mov
dec
js
sbb
jnp
push
add
arpl
bound
cmp
pop
cwde
mov
mov
push
icebp
icebp
push
push
mov
sbb
cs
fsubr
inc
movs
(bad)
xor
(bad)
pop
mov
aad
fisub
aas
mov
adc
cs
aas
gs
mov
retf
dec
out
pop
pop
enter
and
add
sbb
inc
aaa
std
mov
mov
adc
jge
out
xchg
mov
pop
loop
mov
bound
cmp
bound
jmp
loope
into
push
in
out
jge
jns
stc
cmp
retf
mov
aam
in
outs
dec
aaa
add
dec
in
jge
or
bnd
(bad)
mov
popa
add
data16
(bad)
sub
mov
xchg
aad
pop
imul
into
lea
pop
dec
dec
dec
arpl
add
cmps
je
xor
mov
clc
or
jge
sbb
jns
pushf
test
cmp
ror
add
jp
sub
mov
mov
adc
stos
call
in
mov
sub
inc
ret
push
mov
mov
aas
popf
xor
mov
dec
loop
jg
cmc
ret
and
loope
test
fwait
pop
and
repnz
jo
add
adc
jmp
ja
fisttp
jne
mov
and
dec
call
or
mov
loop
mov
and
lods
cmps
push
popf
sbb
(bad)
into
inc
scas
imul
jae
ds
cmp
(bad)
cmc
sub
mov
mov
ret
add
mov
int3
ret
xchg
jmp
out
lods
stos
jp
ins
jns
call
mov
or
fdiv
cmp
aas
dec
and
fstp
or
push
cmp
cmp
or
jmp
jne
enter
xor
fsubr
add
stos
aam
cmp
push
cmp
or
or
xchg
sub
clc
ret
and
jnp
sub
mov
cmp
pusha
aas
scas
ret
and
sar
ds
loop
jmp
mov
loopne
jg
rcl
and
sub
bound
lahf
dec
sahf
pop
cmc
sahf
outs
inc
pusha
push
mov
mov
out
or
push
jg
add
fdivr
mov
adc
(bad)
(bad)
nop
sbb
mov
ret
das
and
jae
xor
movs
mov
or
push
lods
add
sbb
push
xchg
inc
mov
imul
push
xchg
ss
mov
xchg
sbb
ins
add
icebp
and
aad
cmps
in
or
push
test
bswap
movs
in
push
mov
mov
ret
shr
sub
sbb
leave
in
sbb
xor
inc
jp
rcl
xchg
push
jp
js
mov
out
mov
cs
scas
mov
fisttp
iret
fld
enter
fs
lods
out
imul
sti
xchg
aad
xor
mov
jnp
adc
sub
out
dec
addr16
into
enter
pop
cld
fsubr
stos
mov
enter
mov
pop
adc
pop
fist
in
cmc
lea
hlt
dec
lahf
xor
imul
test
test
jno
shl
dec
jb
pop
jl
mov
adc
push
mov
call
jl
and
mov
mov
retf
icebp
popf
(bad)
fdivr
in
lods
sbb
mov
repnz
aam
adc
adc
push
push
pusha
stos
mov
movs
push
aaa
mov
add
xor
sbb
fldcw
repnz
aaa
jmp
adc
jp
pushf
cmp
jge
mov
aaa
cmp
sahf
mov
call
jne
inc
mov
outs
xor
bound
jae
jp
mov
sbb
push
leave
aad
add
and
mov
icebp
nop
sbb
cmp
add
inc
jg
push
nop
xor
or
sub
xchg
xor
nop
bound
es
mov
pop
ss
mov
and
sub
cmc
push
xor
cwde
cdq
jl
dec
(bad)
and
cmp
dec
adc
xchg
mov
scas
stos
addr16
je
jnp
inc
mov
lds
dec
loope
add
or
rcr
and
outs
jo
sbb
mov
jg
sbb
xchg
aam
sbb
inc
scas
dec
ret
mov
dec
jge
and
and
inc
push
add
and
push
(bad)
hlt
xchg
inc
fistp
scas
pop
imul
outs
adc
xor
xchg
xchg
or
xor
mov
mov
push
js
call
adc
or
aaa
fnstcw
mov
xchg
test
xchg
rep
ins
or
push
add
jbe
xor
or
mov
push
cwde
iret
rcl
test
(bad)
enter
jecxz
sti
push
xlat
movs
jno
fcomp
fmul
push
sbb
pop
jae
xor
idiv
and
mov
retf
ret
int
inc
inc
sub
in
jmp
retf
mov
ret
xor
or
mov
nop
sbb
ficomp
and
xor
retf
mov
fstp
mov
sahf
pusha
adc
call
rol
lods
mov
aas
pop
cmp
fild
add
cdq
push
out
add
or
dec
mov
call
and
pusha
push
outs
pop
daa
dec
rcr
retf
cmps
add
ret
ja
xor
mov
int
mov
clc
dec
lods
movs
jle
or
mov
dec
cmp
jle
xlat
into
jecxz
add
ins
mov
pop
push
scas
popf
xor
xchg
in
cdq
arpl
mov
scas
unpcklps
pop
and
in
push
push
mov
and
jmp
arpl
or
(bad)
fdivp
pop
xor
inc
xor
jo
ins
jge
imul
sub
dec
mov
or
inc
stc
inc
xchg
or
retf
push
daa
fsub
lea
push
stos
ss
cmc
sub
imul
cmps
add
ror
jecxz
add
mov
addr16
inc
or
mov
xchg
sbb
js
fs
adc
test
adc
(bad)
xor
jmp
les
arpl
pop
daa
add
in
cmp
push
test
out
xor
in
(bad)
fld
jecxz
adc
nop
scas
scas
(bad)
arpl
retf
push
repz
out
ret
push
cs
sti
cmp
popf
or
push
test
(bad)
sub
aaa
inc
mov
dec
scas
push
mov
pop
mov
add
mov
out
adc
mov
test
fistp
es
sub
ret
pop
adc
daa
cli
jle
sbb
ds
mov
nop
adc
mov
pop
xchg
in
cmps
adc
mov
mov
xlat
pop
push
js
xchg
jne
lods
mov
xor
aam
mov
retf
data16
mov
ret
not
std
mov
retf
std
cwde
mov
inc
and
cmp
imul
in
dec
mov
mov
adc
inc
out
shl
es
jmp
sub
dec
je
or
cmp
test
push
cmp
or
add
jns
jo
or
jmp
cwde
cmp
outs
(bad)
jge
cmps
push
fwait
aaa
jecxz
add
add
dec
test
sbb
lods
sub
mov
pop
xchg
push
div
jae
fadd
xchg
fstp
rcl
pusha
jns
xchg
or
add
mov
lahf
mov
hlt
pop
dec
xor
mov
jle
cmps
sbb
mov
cmp
pushf
int
sbb
pop
pop
xlat
in
daa
mov
xchg
adc
mov
ins
fcomp
mov
sub
adc
push
dec
add
inc
inc
lods
sbb
sbb
add
aas
jl
fsubr
leave
cmp
xchg
cdq
xchg
enter
in
scas
loope
xchg
int3
(bad)
inc
mov
pop
or
mov
pop
fcomip
cwde
mov
cmp
and
mov
inc
dec
add
fistp
clc
jne
in
mov
push
loope
push
aaa
mov
xchg
movs
and
stc
xchg
imul
push
mov
int3
dec
mov
dec
or
iret
std
hlt
std
jg
sbb
and
ss
out
xchg
xor
fwait
xchg
jne
dec
cmp
ss
jnp
outs
loope
div
dec
jg
hlt
pop
xor
out
enter
mov
mov
jae
sub
pop
in
les
mov
jb
cmps
sub
sub
cmp
inc
fs
loope
fs
cmps
or
shr
icebp
inc
js
xor
adc
inc
fidivr
mov
rcr
mov
add
test
xor
test
mov
das
mov
xchg
push
and
imul
cmps
and
fcomip
movs
cmp
jo
adc
ins
arpl
cdq
push
mov
arpl
sbb
bound
call
jo
mov
retf
mov
or
push
pop
or
loopne
cwde
or
cld
lds
push
cmp
ret
mov
enter
lock
cmp
xor
sbb
shl
push
(bad)
jmp
and
in
or
cld
jo
enter
out
add
je
mov
inc
xor
mov
fstp
mov
add
or
mul
test
jge
call
xor
add
loop
add
xor
sub
movs
lods
pop
mov
dec
cmp
push
add
fwait
sub
mov
mov
and
cmp
(bad)
sub
jns
dec
mov
push
stos
push
pop
imul
fwait
adc
mov
adc
push
inc
cmp
jae
shl
jns
pop
mov
ss
outs
jne
pushf
sbb
pop
movs
inc
movs
and
adc
inc
mov
sbb
leave
or
pop
sti
sbb
fsub
aas
xchg
jecxz
mov
call
call
aas
jmp
mov
xchg
repz
add
adc
push
and
or
lods
into
jmp
add
push
movs
arpl
pop
mov
fadd
push
jno
jecxz
mov
mov
rcr
or
xchg
and
mov
daa
mov
in
ja
jo
xor
xchg
ss
push
dec
ror
lods
mov
ja
mov
or
jl
push
mov
adc
jo
lock
jne
aas
fxtract
add
pop
call
adc
push
xchg
sti
cmp
stos
cmps
push
dec
mov
in
dec
mov
adc
push
lock
popa
inc
cmp
and
pop
xchg
jg
adc
cmp
push
push
pop
and
int
sbb
jle
mov
jl
xor
pop
ret
push
cmp
loope
test
push
mov
pop
popa
push
push
add
xchg
pop
adc
daa
push
hlt
pop
rdpmc
jo
ficomp
xchg
sahf
ffreep
test
jno
jmp
xchg
mov
jmp
jl
jmp
push
mov
or
ins
ret
ds
and
mov
adc
gs
lock
inc
repz
add
xor
div
test
xchg
sahf
loop
test
out
movs
(bad)
fwait
push
arpl
mov
sub
cmp
call
xor
or
mov
pop
jle
ds
mov
add
or
adc
mov
and
jg
pop
jno
xor
pop
imul
dec
std
mov
cmp
pop
fwait
dec
dec
push
sub
inc
imul
test
out
rcl
push
out
fs
pushf
cdq
sbb
std
inc
xchg
pushf
int3
stos
mov
adc
sub
or
jmp
add
call
je
jmp
addr16
lahf
sbb
or
mov
pop
xchg
adc
xchg
out
mov
jg
or
dec
lea
rol
ins
div
xor
push
push
mov
(bad)
mov
sub
adc
pop
xchg
ja
add
ins
add
dec
push
hlt
xchg
in
popf
jmp
js
xchg
push
(bad)
outs
arpl
out
mov
in
or
xor
movs
xchg
and
mov
push
aad
cmp
dec
adc
repz
jge
test
mov
xchg
repnz
cmc
xor
imul
mov
adc
jb
mov
xchg
nop
cmp
inc
push
lea
sbb
test
pop
cmc
mov
jae
push
fs
inc
adc
jg
loopne
jl
scas
xchg
(bad)
movs
cmp
jg
push
dec
xchg
jecxz
dec
jp
popf
adc
fcomp
and
xlat
iret
xor
retf
push
push
and
int
fadd
push
enter
push
mov
scas
xor
(bad)
ins
sub
gs
movs
pop
mov
push
mov
(bad)
mov
mov
imul
retf
jns
cmp
pop
push
outs
imul
into
test
inc
pop
mov
xor
out
(bad)
mov
add
ins
cmp
mov
lods
scas
sub
inc
xor
es
sbb
mov
pop
mov
push
pop
jp
push
and
mov
fcomp
sub
std
xchg
mov
sbb
int
push
and
cmp
push
je
push
or
dec
add
loopne
gs
sub
mov
jb
jmp
ds
inc
pop
sbb
and
int3
(bad)
stos
xchg
xor
retf
ret
jo
repz
add
cmps
mov
stos
ret
adc
ins
jb
jl
mov
or
xchg
std
xor
mov
cmp
ror
in
lea
out
fmul
cmp
mov
sbb
and
daa
jno
pop
js
imul
mov
and
mov
fcomp
push
test
sti
lock
stos
mov
arpl
add
outs
xchg
aaa
adc
inc
mov
test
gs
mov
cdq
cmp
jnp
or
enter
jo
fidiv
fisttp
test
sti
pop
into
sub
outs
sbb
ss
dec
hlt
mov
test
fs
in
neg
outs
add
cmp
cmps
call
inc
sub
sub
xor
dec
add
or
(bad)
mov
or
and
imul
mov
cdq
dec
stc
mov
push
push
fnstcw
jecxz
in
fs
shr
pusha
repnz
fsub
cmp
mov
scas
pop
pop
jns
ins
mov
and
stc
in
test
sub
push
xchg
adc
mov
loopne
mov
adc
hlt
sbb
push
push
retf
xchg
ss
shl
push
jns
or
dec
push
jp
imul
sub
mov
in
jl
ins
icebp
rcr
mov
stos
rol
pusha
cmp
and
cmp
xchg
repnz
icebp
fiadd
cli
popa
adc
mov
and
xchg
or
push
mov
aad
out
push
xchg
mov
push
mov
sub
sub
ss
mov
stc
stos
into
mov
shl
adc
add
adc
mov
pop
xor
les
jbe
push
and
enter
mov
add
inc
and
cld
leave
sbb
lock
je
xor
mov
and
pusha
inc
outs
jno
dec
inc
jno
push
fmulp
fwait
scas
aaa
xor
enter
stc
inc
or
xchg
(bad)
das
mov
dec
dec
movs
cmp
or
or
sub
rol
pop
imul
jae
mov
loope
xchg
(bad)
cwde
jecxz
ret
push
add
adc
push
in
adc
pushf
mov
(bad)
std
mov
pop
ret
(bad)
xchg
sub
retf
sahf
inc
inc
jp
fadd
ins
(bad)
loope
fsubr
jle
icebp
jecxz
or
pop
(bad)
push
sbb
push
jle
xor
push
mov
xchg
add
and
stc
scas
pop
xchg
mov
sbb
stos
movs
test
shl
dec
cmp
xor
and
push
int
mov
adc
push
fisttp
icebp
dec
jg
test
out
jb
jge
movs
or
lods
cmc
adc
inc
int
xlat
add
pop
jbe
pop
int
sub
jno
(bad)
sub
repnz
into
sub
adc
or
jbe
(bad)
mov
jge
sbb
(bad)
mov
inc
cdq
inc
sbb
dec
test
sub
push
fld
ss
mul
pop
shl
(bad)
cli
xchg
rcr
in
ret
dec
dec
dec
dec
nop
cld
and
outs
cmp
not
sbb
jg
mov
sub
sub
and
mov
imul
add
enter
mov
cmp
cmp
aad
mov
fs
pop
jne
mov
jg
rol
dec
lods
shl
inc
mov
mov
mov
es
or
add
sub
cmp
es
popf
movs
mov
jne
fnstenv
ds
mov
(bad)
aam
pop
sar
jp
mov
cdq
xchg
xor
inc
pop
xor
inc
add
scas
data16
fcomp
inc
aad
cdq
loop
inc
stc
jge
add
push
pop
stos
xacquire
xchg
aas
scas
adc
cs
mov
(bad)
cmps
call
and
add
rol
ins
xchg
push
jl
aad
push
pop
(bad)
jmp
pop
outs
lahf
rcr
stos
sub
dec
push
mov
sub
push
inc
mov
sbb
out
aam
and
test
sbb
leave
daa
into
mov
and
dec
js
pop
leave
out
adc
sub
sar
xchg
mov
inc
addr16
test
mov
mov
leave
mov
dec
cmps
scas
fmul
out
mov
jle
add
out
retf
out
cmp
punpckhwd
push
inc
jge
inc
(bad)
sub
and
out
mov
mov
pop
push
pop
enter
mov
shl
outs
push
mov
push
enter
into
clc
int
xchg
int
ins
fsubr
int
xor
push
mov
jmp
and
aam
mov
xor
popf
pop
xchg
dec
and
out
pop
mov
mov
and
(bad)
sbb
mov
pop
out
jl
add
dec
rcl
lahf
cmp
xor
imul
mov
sbb
into
loop
bound
pop
mov
test
push
or
jmp
push
lods
add
cmp
mov
push
ins
xchg
fistp
push
mov
cmp
fmul
push
movs
into
pop
xor
xor
stos
fldenv
aam
add
and
outs
cs
fisub
test
cmp
fwait
and
adc
repz
and
cmp
mov
ror
xchg
das
mov
daa
mov
jae
fdiv
sbb
or
dec
cdq
adc
into
stos
or
inc
int3
retf
pop
jae
sar
xor
and
or
aaa
push
ja
das
pop
in
cwde
xor
or
jmp
push
inc
mov
in
repz
mov
push
sbb
sub
repz
cmps
jne
das
nop
or
and
push
mov
sbb
cmp
jns
adc
sti
ss
pop
pop
ins
adc
pop
ret
movs
jmp
test
aad
stos
pop
aam
push
inc
and
mov
ret
xor
mov
xchg
mov
in
jns
pop
cmp
add
xor
aad
imul
adc
pusha
cmp
scas
dec
movs
xchg
(bad)
jle
aam
push
add
push
retf
fstp
mov
sub
rol
test
in
and
shl
xor
jo
xchg
dec
call
ss
neg
mov
mov
fstp
mov
push
push
ror
shl
ins
dec
outs
pop
add
add
scas
dec
iret
sar
test
pop
nop
sar
call
call
(bad)
jnp
idiv
sub
cmp
cmp
gs
mov
into
jmp
push
cmp
sub
cmps
fsub
mov
mov
bound
push
stos
stos
mov
gs
cmps
xor
shl
or
mul
add
pushf
je
nop
pusha
sub
lea
xchg
test
loop
cmps
cmps
xchg
jo
cmp
out
ss
mov
or
and
loope
mov
ins
rcl
test
cmp
push
push
aas
mov
ret
stc
adc
scas
and
test
mov
sbb
push
imul
mov
inc
add
push
and
sar
(bad)
ror
add
jnp
rcr
push
adc
lods
sbb
mov
mov
xor
add
arpl
out
add
rol
cmp
add
adc
xchg
mov
adc
jmp
sbb
push
movs
pop
fimul
mov
sbb
or
sahf
test
pop
sbb
test
mov
push
movs
and
leave
clc
mov
gs
and
mov
adc
bound
xlat
pop
push
das
inc
inc
jne
aam
push
(bad)
test
mov
shl
jg
xlat
cmp
enter
pop
hlt
xor
add
imul
push
cdq
out
pop
sbb
ret
cmc
cli
dec
pop
lods
or
lods
stos
lea
lock
jmp
dec
push
cmp
in
enter
into
les
add
cmp
fbld
imul
les
mov
jecxz
pusha
(bad)
cmp
mov
sahf
outs
int
jmp
pop
jp
dec
jbe
mov
mul
mov
or
aam
xchg
inc
fs
nop
mov
cmovl
lds
stos
xchg
pop
xchg
cmp
push
sbb
adc
(bad)
popf
cli
push
iret
pusha
push
daa
loopne
mov
adc
ins
fild
cmps
in
xor
jmp
xchg
mul
mov
in
cwde
xor
jmp
cmps
inc
in
clc
push
sbb
and
enter
dec
shl
xchg
dec
int
mov
xchg
jg
fld
fst
sahf
cmp
push
cdq
add
fwait
bound
movs
jnp
ins
xor
xor
call
or
cli
rcl
data16
inc
sbb
or
add
or
and
lods
pop
pop
mov
push
xor
xor
(bad)
push
fisub
or
push
xor
fucomp
or
repz
loopne
and
retf
(bad)
(bad)
test
fwait
stc
xchg
je
leave
xchg
test
test
leave
fs
arpl
pushf
ret
sub
cmp
sbb
test
je
faddp
mov
loopne
xchg
out
or
mov
addr16
jno
lods
mov
jmp
loop
lea
xchg
pop
into
push
xchg
jnp
sar
xlat
outs
sub
push
call
push
dec
sub
ja
mov
lahf
xchg
cmp
fs
mov
fisub
sub
mov
sar
sub
lahf
pop
loopne
or
or
aad
xor
push
mov
nop
and
cdq
addr16
sub
into
mov
sub
and
jo
jmp
(bad)
popa
rcr
movs
int3
jnp
movs
inc
or
or
dec
push
sbb
mov
nop
aad
or
mov
mov
popf
cmp
cmp
inc
adc
in
inc
popf
and
and
pusha
push
retf
(bad)
shl
sbb
das
jg
int3
xchg
inc
enter
xor
push
(bad)
shl
pop
inc
dec
sub
sub
sbb
push
ret
repnz
inc
push
cmp
mov
stc
cmp
mov
retf
loop
lock
das
aaa
test
inc
lods
cmp
adc
(bad)
fs
scas
adc
jo
xor
xchg
push
dec
and
or
jmp
push
push
xchg
add
test
inc
in
sub
mov
dec
inc
xor
add
push
adc
or
mov
jbe
xchg
mov
pop
or
fsub
outs
inc
cmp
jmp
clc
ds
xor
call
adc
(bad)
mov
sar
or
ss
lahf
aaa
or
(bad)
je
pop
cli
add
jecxz
(bad)
enter
repz
cmps
ficom
out
popa
add
(bad)
inc
into
jo
dec
fistp
fmul
rcr
xchg
and
push
loopne
and
add
cli
test
out
idiv
jl
sti
push
test
loopne
jge
jle
dec
push
mov
xchg
adc
and
sti
in
mov
test
or
hlt
inc
je
sub
mov
retf
add
adc
adc
mov
inc
pop
test
lods
pop
cmp
jb
(bad)
sbb
dec
mov
das
dec
pop
cld
and
lahf
mov
adc
sbb
cmp
sbb
fst
ins
dec
popf
sbb
sub
jbe
or
test
pop
dec
and
mov
scas
jae
xchg
fld
sbb
mov
das
mov
pop
(bad)
or
test
and
sub
lahf
pop
aas
push
xor
in
movs
xor
imul
and
mov
xor
add
(bad)
sbb
mov
inc
push
mov
daa
aam
lock
ss
inc
or
sub
fstp
loopne
sbb
jne
mov
bound
hlt
shr
xchg
movs
adc
clc
jge
aam
mov
dec
rol
and
sub
xchg
retf
sub
out
mov
jmp
cmc
shr
pop
dec
mov
xor
in
pop
mov
sbb
mov
lock
or
sub
mov
(bad)
adc
das
inc
xchg
mov
adc
push
inc
mov
test
inc
imul
dec
jne
repnz
(bad)
repnz
sbb
aad
inc
mov
out
int3
repz
push
imul
shl
mov
cli
daa
retf
or
das
jne
jb
fadd
sub
test
mov
fld
and
rcl
cmp
xchg
sub
or
mov
sar
das
push
(bad)
es
cmc
adc
data16
xor
dec
xor
fs
popf
sbb
xor
push
je
jnp
jp
adc
inc
cmp
pushf
dec
sub
cmp
mov
and
out
mov
fs
pop
dec
jecxz
push
push
fiadd
jp
mov
xchg
lods
jp
dec
and
sbb
popa
jle
aad
jbe
add
cmp
dec
mov
inc
mov
psrad
jge
dec
push
call
mov
sar
xor
adc
push
outs
adc
iret
(bad)
dec
das
and
test
aas
mov
pop
icebp
int
pop
inc
inc
sbb
mov
hlt
sub
bnd
loope
shl
test
repnz
mov
pop
add
loopne
or
shl
or
sbb
push
pop
stos
sbb
popf
sbb
sub
jbe
sar
cmp
push
popf
sti
dec
sub
lods
and
inc
xor
cmp
jns
push
xlat
xor
xchg
loop
cdq
(bad)
aaa
lahf
and
jle
imul
ret
cmps
adc
sbb
enter
sub
mov
pop
in
adc
in
xchg
out
sub
jo
ror
pusha
jns
test
or
push
fdivp
adc
cld
or
push
or
xlat
pop
xor
loop
pop
scas
sub
xor
dec
repz
out
fcom
push
adc
in
jnp
jae
fadd
push
std
adc
push
data16
into
fucomp
imul
aam
mov
push
mov
(bad)
out
movs
scas
cmps
mov
jno
cmc
jae
xor
pop
inc
mov
in
stc
(bad)
repnz
cmovle
arpl
sbb
data16
(bad)
(bad)
fcomp
adc
pop
xchg
mov
cdq
(bad)
sbb
shl
loope
jo
mov
(bad)
mov
pop
cld
stos
and
and
jne
sub
mov
dec
cmp
mov
inc
outs
inc
mov
stos
mov
inc
jo
sahf
js
stos
mov
hlt
fnsave
test
sub
mov
lods
xor
lea
rep
enter
pop
fld
sub
mov
mov
jle
inc
or
mov
fwait
push
xchg
pushf
push
outs
jns
rol
imul
int
sbb
loope
out
ret
and
out
sub
pop
mov
nop
aad
inc
pop
and
jae
sub
jmp
nop
ror
dec
hlt
stc
cmp
mov
test
fs
inc
xchg
pushf
sub
jb
mov
push
mov
push
pop
pop
or
dec
jle
pop
aas
inc
inc
lods
push
ja
jnp
jbe
aaa
enter
cs
fcom
push
add
inc
pop
jg
cmp
mov
iret
test
call
push
mov
mov
scas
jmp
xchg
xlat
inc
sub
dec
xchg
call
jne
xor
retf
je
cli
add
inc
test
mov
jecxz
out
or
jno
dec
lock
cmps
cmps
pop
(bad)
pop
mov
push
pop
aaa
jno
mov
aam
lds
add
ins
or
cmp
aas
fsub
sbb
fcom
push
pop
pop
add
mov
addr16
ret
xor
out
sbb
je
add
je
adc
aas
mov
push
jmp
inc
(bad)
xor
jb
movs
ins
mov
xchg
xor
inc
icebp
mov
inc
cmps
cli
sub
xlat
or
cli
push
pop
in
pop
sbb
cwde
out
outs
dec
cli
and
dec
mov
lock
lods
or
push
push
and
in
jo
cmc
imul
mov
scas
pop
mul
xchg
arpl
jo
mov
shl
test
dec
ja
stos
jecxz
adc
sbb
jge
add
test
neg
in
mov
add
cmps
iret
in
add
inc
lea
lods
mov
and
cld
or
cmc
into
clc
inc
xor
mov
and
in
adc
fwait
repnz
xlat
and
pop
das
ds
or
and
outs
mov
dec
shl
push
push
repz
fistp
xor
cmps
popa
lods
inc
fcom
dec
cmps
mov
dec
adc
rcr
bound
pop
jno
aam
mov
push
add
test
jns
cmps
push
add
mov
and
aaa
push
cmps
dec
cwde
inc
sub
add
into
add
jge
pop
jl
sub
jp
into
movs
jl
jns
cmp
push
sub
imul
xchg
nop
aad
cmps
inc
into
or
push
inc
test
and
scas
pusha
gs
pop
retf
lods
mov
adc
mov
pop
rcl
and
xchg
movs
jne
scas
mov
or
mov
mov
ja
test
in
(bad)
(bad)
(bad)
(bad)
sub
(bad)
cmp
jne
fwait
pop
mov
dec
mov
scas
(bad)
adc
imul
in
mov
cdq
mov
jns
mov
pop
inc
adc
aad
mov
pop
pop
cld
xchg
sahf
sahf
das
dec
or
rcl
jg
repz
pushf
cmp
adc
mov
push
sub
out
and
jp
push
dec
xchg
cmps
fisubr
add
gs
mov
xor
popa
mov
jbe
jmp
dec
pop
scas
mov
and
and
fadd
imul
dec
inc
jnp
pusha
sti
jnp
jmp
and
pusha
fisubr
pop
lock
fxch
push
mov
push
pop
ins
cmps
(bad)
push
mov
loopne
sbb
or
aam
lock
lea
mov
(bad)
clc
aas
push
xchg
inc
test
inc
jmp
imul
add
fstp
mov
into
sbb
xchg
ja
loopne
jae
xchg
mov
in
and
imul
dec
pop
jle
pop
xchg
out
ds
xor
jge
loopne
fst
ja
retf
imul
inc
cs
xchg
cmps
or
adc
jbe
int3
jg
mov
jmp
sub
fisubr
mov
xchg
pop
clc
leave
lahf
ret
int3
adc
sbb
ins
xchg
leave
push
shl
sar
xchg
call
push
xor
in
mov
or
fst
(bad)
sbb
pop
push
xor
fisttp
dec
les
cmp
fild
pop
mov
sub
repz
bound
push
stos
ret
mov
or
jmp
pop
or
xor
xor
sub
dec
dec
iret
fdiv
arpl
pop
sub
aam
push
cdq
imul
jl
mov
jecxz
(bad)
fnstsw
data16
(bad)
into
and
push
mov
fidivr
sub
mov
retf
pop
fs
add
mov
and
dec
sub
sbb
xchg
je
pop
mov
ins
push
mov
dec
mov
scas
out
mov
jnp
scas
cwde
push
stos
fisub
fnstsw
jae
mov
sub
shl
mov
dec
mov
jmp
dec
outs
xor
mov
and
xchg
dec
jge
xor
mov
push
mov
jecxz
cwde
int3
std
pushf
lahf
aaa
add
inc
pop
aaa
or
dec
(bad)
xor
lods
and
dec
xor
in
xor
lock
scas
loopne
dec
push
es
je
jle
ja
retf
and
into
xchg
jle
loope
int3
pop
(bad)
cmp
jns
mov
mov
fist
sub
jnp
add
fs
and
or
popfw
loopne
shr
mov
mov
popa
cs
(bad)
cld
xchg
(bad)
mov
xor
add
pushf
sbb
out
jno
inc
je
xchg
mov
mov
push
loope
int
in
hlt
xchg
adc
xor
(bad)
inc
sbb
dec
nop
sub
mov
jmp
inc
push
dec
inc
xor
add
jmp
or
lods
mov
scas
pop
idiv
fiadd
push
pop
loope
std
mov
xchg
mov
cmp
cld
dec
test
push
jmp
jnp
xchg
mov
ins
inc
mov
push
ror
cld
shl
sub
add
push
fisttp
mov
pusha
cdq
adc
aas
xor
add
cmps
pop
aaa
std
enter
popf
jns
outs
mov
jo
mov
data16
repnz
mov
fdiv
jnp
call
adc
mov
sub
(bad)
jae
jl
add
or
xchg
not
repnz
std
mov
pop
push
retf
push
or
cmc
cmps
pop
out
lods
xchg
icebp
dec
repz
mov
aas
xchg
add
xchg
sahf
push
movs
xor
cli
popf
aas
xor
or
mov
mov
stc
sti
je
imul
adc
dec
adc
addr16
pop
lock
cmc
je
xchg
mov
mov
mov
adc
hlt
aad
jp
ret
stc
outs
aas
aaa
lds
icebp
and
cmp
xchg
push
outs
js
cmps
sbb
and
sbb
fs
in
loope
aaa
fs
data16
pop
jmp
test
xchg
fwait
sti
je
sbb
in
mov
jle
fs
xor
xchg
int
into
mov
add
or
fs
repnz
lock
addr16
sbb
add
lods
neg
loope
icebp
push
xor
sub
pop
jae
ret
push
mov
in
sti
movs
xrelease
or
mov
sbb
ficom
push
fdivp
pusha
cwde
loop
xor
pop
xor
fadd
push
pop
sbb
dec
lods
imul
call
mov
mov
mov
rcr
lods
pusha
test
ins
mov
mov
das
loop
sbb
mov
test
dec
test
fidiv
lods
rol
and
test
cli
mov
xchg
enter
outs
popf
mov
xchg
std
cmc
xor
cmp
cwde
lea
xchg
icebp
mov
fxch
adc
fwait
pop
in
loopne
fs
rol
jge
pop
out
cmp
shl
stc
fsubr
scas
mov
in
ja
push
mov
enter
sar
nop
retf
jl
icebp
nop
pusha
inc
xor
rcl
add
repz
mov
inc
rcl
dec
or
mov
inc
sbb
cmp
jmp
enter
mov
cli
sahf
xor
retf
lea
jnp
stos
fmul
fs
aad
sbb
and
out
inc
mov
in
punpcklbw
and
loop
fistp
sbb
sbb
aam
mov
repnz
cmp
sti
dec
push
test
leave
inc
adc
jp
or
imul
cmp
test
or
add
jmp
sub
jae
ror
(bad)
rol
ret
cmp
retf
popf
mov
int
xor
or
sbb
test
out
mov
or
jmp
bound
mov
aam
cmps
inc
cdq
popa
jno
sub
ficomp
popf
mov
and
rcr
or
add
sti
cmp
test
lods
ret
xor
fisttp
ret
pop
xor
or
adc
jmp
sub
out
sbb
cmp
adc
cld
cli
and
and
loop
sar
dec
arpl
jmp
aas
pop
sub
dec
das
dec
jbe
pop
jg
sar
mov
jl
mov
dec
in
cld
bound
and
jmp
cwde
call
fidiv
xchg
ds
push
bound
or
leave
scas
jno
sbb
fnsave
loop
sbb
or
pop
jno
loopne
outs
cmp
out
(bad)
and
adc
xchg
dec
lods
push
rcr
sub
shl
imul
push
sub
inc
je
push
je
sbb
fcomp
cvtps2pd
loope
lods
imul
xor
and
mov
adc
popa
xlat
leave
imul
idiv
xor
outs
mov
mov
adc
xor
xor
mov
mov
outs
push
or
cmp
das
add
pop
sbb
mov
xchg
lock
adc
cwde
sahf
pop
icebp
mov
jmp
call
mov
out
mov
imul
xchg
ds
(bad)
aas
pop
or
js
or
mov
rcr
sar
pop
ficom
cs
ror
lea
mov
pop
in
sub
lahf
popa
mov
xchg
jo
adc
test
js
imul
mov
add
mov
stos
retf
jnp
rcr
adc
scas
mov
xchg
jge
ficomp
movs
push
inc
in
xchg
mov
sbb
xor
js
bound
shl
inc
dec
jp
addr16
cdq
cs
inc
inc
xor
not
jge
fsubr
js
je
outs
and
push
mov
cmp
adc
enter
cdq
push
sub
mov
leave
mov
inc
out
inc
sub
push
add
mov
push
sub
dec
pop
xchg
dec
out
sar
fs
rcl
leave
jl
pusha
xchg
cmps
into
cdq
imul
jge
fild
repnz
cmp
icebp
repnz
cld
push
sub
jo
ror
jmp
scas
add
xchg
cmp
iret
bound
push
xchg
out
cmp
inc
push
jl
jl
push
dec
jge
pop
popa
je
lods
shl
lock
add
daa
int3
and
mov
jmp
jnp
fistp
pop
dec
ins
cmps
(bad)
cmps
lods
push
xchg
cmp
(bad)
mov
into
jmp
outs
test
test
cmp
scas
pop
pusha
inc
call
adc
loop
outs
cmp
mov
jo
stc
lahf
ds
std
ja
sahf
mov
retf
mov
ret
fwait
and
out
inc
sub
inc
cmp
imul
shr
mov
imul
sub
lods
mov
imul
pushf
push
jno
push
cmp
mov
add
das
and
daa
inc
and
jl
mov
push
pop
sub
adc
mov
sbb
loopne
mov
das
neg
pop
pop
popa
fwait
les
lods
(bad)
and
jo
cmp
or
push
sub
fwait
dec
shr
cmp
push
xor
test
cmp
fwait
imul
ja
pop
test
xchg
inc
mov
clc
jge
or
icebp
ss
mov
test
xchg
xor
fcmovbe
mov
push
xchg
imul
popf
enter
cmp
sub
jp
and
outs
mov
in
mov
sbb
mov
out
push
sahf
sbb
add
shr
add
sbb
dec
sar
push
mov
jmp
out
adc
icebp
mov
scas
(bad)
loope
sbb
out
mov
loopne
in
(bad)
cmp
jns
ret
dec
mov
mov
scas
in
div
push
push
out
outs
(bad)
adc
sbb
dec
ds
jg
ficomp
addr16
(bad)
div
stc
movs
in
cmc
jp
ds
sbb
ins
fild
out
daa
sbb
mov
cmc
xchg
or
fnstcw
ja
(bad)
std
(bad)
shl
dec
cmp
inc
test
jmp
fwait
imul
adc
fsubr
and
add
push
outs
sub
and
jp
and
(bad)
or
call
jno
out
mov
test
inc
jno
dec
adc
adc
add
dec
rcr
jmp
sub
pop
fadd
ins
sahf
(bad)
lods
mov
jae
jb
jne
xor
js
inc
cdq
retf
ins
lods
int
xchg
mov
jle
dec
icebp
adc
sbb
jle
sbb
lods
adc
mov
ds
push
sub
cmp
mov
pop
int3
adc
cmp
adc
push
fld
and
(bad)
aaa
push
dec
push
jmp
(bad)
data16
mov
cmc
and
push
inc
xor
mov
xchg
das
xchg
push
mov
push
sub
and
shr
and
sbb
xor
fstp
pushf
sbb
stos
push
(bad)
call
icebp
xchg
mov
xlat
xchg
mov
and
jo
ds
daa
sahf
add
ins
sub
mov
pop
call
shl
or
in
ins
mov
pop
data16
das
ja
or
dec
sbb
or
xchg
push
out
sub
pop
out
jnp
jb
mov
mov
lock
retf
cmp
movs
mov
push
push
cmp
stc
in
mov
fild
stos
mov
int3
xor
mov
pusha
add
push
dec
push
inc
add
or
ret
inc
adc
pop
nop
jno
pop
adc
ret
pop
mov
(bad)
gs
or
pop
pop
fidivr
sub
das
cmp
cld
lds
das
cs
lds
stos
loop
popa
push
xor
cmp
or
sub
fild
mov
mov
xor
jnp
div
loope
js
sti
cdq
inc
xchg
cmp
add
in
and
jmp
mov
inc
js
ja
cmp
iret
gs
stos
icebp
scas
rcr
dec
fisttp
jmp
or
out
aad
inc
pushf
outs
fcomp
mov
mov
jecxz
add
outs
add
fistp
popa
adc
loopne
sub
shl
mov
lock
mov
movs
(bad)
std
xchg
and
clc
loopne
inc
pushf
add
popf
inc
mov
int3
test
arpl
sahf
and
or
sub
sbb
in
cwde
pop
push
jnp
pop
stos
(bad)
cli
repz
cmp
jl
call
add
ds
xchg
and
pop
cs
inc
arpl
or
mov
movs
jl
in
jl
in
or
and
test
in
mov
pop
xchg
aas
lock
cld
fldenv
retf
in
adc
lods
mov
fldenv
sub
mov
(bad)
adc
pop
retf
adc
inc
cmp
ss
xor
test
out
cmp
xchg
enter
jo
and
out
cmp
cli
xchg
neg
hlt
adc
retf
int
adc
jle
add
(bad)
xor
jp
and
dec
add
dec
sub
pop
xor
add
inc
sbb
push
outs
iret
sbb
and
dec
jg
dec
fisub
xor
(bad)
(bad)
loope
(bad)
loopne
and
retf
in
(bad)
mov
out
or
fistp
cmps
xchg
xor
adc
mov
in
xchg
popa
packuswb
fwait
int3
ins
mov
popf
les
mov
pop
nop
mov
sub
jno
adc
enter
lods
in
add
data16
aas
lahf
jl
dec
mov
mov
adc
adc
repz
repz
dec
test
movs
(bad)
pusha
mov
(bad)
pop
push
mov
or
outs
(bad)
sbb
dec
add
rcl
mov
fisubr
adc
mov
dec
jge
xchg
mov
iret
scas
xchg
pop
mov
mov
sub
rol
push
int3
ror
mov
movs
jne
push
sbb
dec
nop
jp
bound
lock
dec
jmp
test
repz
push
aaa
in
mov
shr
dec
xchg
in
dec
pop
arpl
sahf
cld
jbe
test
rcl
push
mov
mov
stc
add
mov
dec
std
loopne
mov
pop
jae
sbb
and
and
xor
inc
push
push
nop
aaa
mov
xchg
and
out
outs
ror
(bad)
retf
mov
or
mov
ja
cwde
cmc
cli
jbe
repnz
jb
retf
jmp
(bad)
lock
pop
ss
cwde
push
clc
xchg
fwait
rcl
sub
sub
scas
popa
cwde
ds
fisub
outs
cld
or
aas
mov
ret
pop
inc
shr
sub
xor
adc
ds
mov
test
and
lea
push
cs
or
cmps
adc
xchg
push
push
sbb
mul
out
in
jo
or
add
sti
cmps
outs
cdq
rcl
sbb
cmps
fistp
mov
xor
and
jns
mov
xchg
fs
shl
xchg
pop
mov
movs
push
add
bound
sar
sub
hlt
sbb
fdiv
dec
adc
je
sub
fnstenv
in
ds
imul
std
ins
bound
xor
cwde
mov
jae
aad
cs
clc
lock
pop
aad
fld
out
mov
scas
ret
pop
stos
fisubr
sub
enter
sbb
cmp
dec
inc
imul
mov
rcl
lds
push
pusha
xchg
(bad)
rcl
outs
inc
pop
mov
loope
push
in
and
mov
in
mov
fcomp
lds
mov
pop
push
in
jmp
(bad)
push
stos
(bad)
push
mov
sub
dec
and
mov
ret
stc
(bad)
mov
fisttp
jl
xchg
and
adc
sbb
test
push
adc
or
movs
outs
mov
pop
cmp
rcl
dec
sub
(bad)
cs
jno
gs
pop
fimul
adc
jp
inc
jge
in
shl
out
jmp
jle
lods
ins
ret
mov
lahf
call
ss
cmp
out
and
scas
daa
mov
xchg
(bad)
jo
inc
jno
inc
addr16
data16
xchg
test
std
and
daa
sbb
nop
sbb
(bad)
popf
push
sub
add
inc
in
fcomp
popa
jle
sub
pop
and
or
les
mov
es
movs
jo
retf
cmp
arpl
mov
push
in
xchg
sahf
leave
cld
mov
pop
js
add
adc
adc
rol
sub
fistp
clc
jecxz
retf
mov
jnp
xchg
push
mov
les
lods
fimul
and
fisubr
cmps
xchg
and
add
popa
cmp
retf
jae
popa
sub
jecxz
aas
add
cmp
addr16
ds
xor
add
jns
aas
jno
mov
ficomp
mov
cmp
cmp
fsub
stc
ja
cmp
push
jae
fsubr
fs
ret
mov
xchg
add
add
div
rcl
xchg
inc
mov
aad
and
and
and
cmp
test
shr
mov
inc
fmulp
cld
aam
mov
pop
pop
push
retf
stos
pop
jmp
data16
jmp
cmp
sub
mov
cli
fidivr
enter
outs
shl
test
xor
stos
loope
int
imul
adc
mov
cmp
pop
in
sbb
bound
stc
or
cld
jnp
stos
pop
mov
(bad)
mov
or
mov
push
cwde
push
dec
mov
pop
pop
mov
jg
movs
or
add
addr16
inc
add
mov
push
and
jp
lea
push
or
jmp
adc
pop
push
cdq
test
js
sub
in
xchg
and
cmp
dec
enter
sahf
xlat
test
test
and
pusha
cmp
add
mov
pushf
sub
inc
fcomp
pop
out
sub
mov
test
shl
leave
js
mov
js
inc
sub
sbb
adc
imul
pop
cmp
lock
rcl
sti
cld
inc
mov
cmp
es
mov
fidivr
or
mov
sahf
add
js
sbb
mov
inc
loopne
pop
adc
adc
pusha
xchg
outs
pop
sub
fimul
sbb
and
imul
movs
sbb
(bad)
das
cmps
dec
pop
jge
push
daa
push
outs
call
cmc
movs
lahf
mov
inc
mov
xchg
lea
hlt
cmp
dec
ror
sub
xor
mov
mov
xor
sub
cmp
call
sub
inc
cld
movs
push
in
test
sahf
repz
(bad)
clc
xchg
add
into
cmp
jae
clc
gs
adc
fdiv
adc
cmp
push
mov
xor
jns
add
cmp
je
xor
or
stc
jns
cdq
popa
pop
pop
push
stc
mov
mov
jne
aam
cs
movs
addr16
xchg
xor
mov
ins
xor
mov
scas
pusha
xchg
outs
add
(bad)
mov
jp
pop
fxch
fist
je
iret
sbb
xchg
push
sub
add
jmp
adc
push
out
popa
icebp
sbb
ja
sub
inc
pop
mov
js
int
lds
mov
pop
aad
lods
add
jp
or
add
imul
sbb
das
into
aaa
imul
jge
sahf
dec
mov
adc
mov
lahf
fisub
or
outs
cmps
and
call
imul
dec
mov
les
cwde
adc
(bad)
xor
sub
pop
xchg
mov
or
xchg
mov
xchg
stos
mov
xchg
ins
jle
je
cmp
ja
xchg
mov
into
aaa
idiv
or
bsr
jmp
rcr
in
sahf
mov
icebp
aas
cmps
xor
cmps
mov
in
xlat
jne
jp
jge
jl
mov
and
xchg
cmp
mov
dec
and
inc
outs
inc
xchg
lock
mov
push
and
in
adc
sbb
mul
leave
popf
mov
adc
test
push
mov
mov
pop
adc
xor
xchg
inc
or
dec
imul
inc
cs
(bad)
lock
push
fist
jp
ret
(bad)
mov
aam
in
mov
or
push
es
push
leave
push
int3
cld
adc
add
sbb
mov
leave
imul
jno
fistp
sub
je
push
cmp
aaa
pop
jnp
inc
push
cmp
shr
pusha
cmp
leave
adc
in
not
aam
and
repz
es
(bad)
lods
clc
xchg
pop
(bad)
(bad)
clc
jno
cld
int3
pop
loop
fcom
(bad)
xlat
sub
std
pop
mov
ss
mov
add
lahf
test
out
xor
xor
fs
test
or
js
mov
call
icebp
addr16
cli
pop
outs
out
jmp
lahf
xchg
add
gs
xchg
sub
cs
lods
rcl
cmp
mov
ins
hlt
pop
sub
mov
pop
cmps
or
sub
xchg
pop
fistp
or
and
mov
mov
jge
mov
movs
fs
clc
out
mov
mov
sar
inc
ins
inc
mov
inc
stos
test
dec
mov
out
sbb
sub
mov
xor
outs
mov
cmp
mov
mov
mov
adc
ret
pop
dec
mov
movs
or
in
call
iret
mov
clc
out
cwde
adc
or
and
sbb
dec
mov
cmp
mov
pusha
arpl
(bad)
fsub
repz
lahf
jle
xor
cdq
rep
push
mov
pop
xor
call
mov
test
movs
cmps
cmps
outs
jae
mov
(bad)
das
movs
mov
movs
in
in
mov
jnp
popa
mul
fiadd
test
fimul
and
mov
xor
dec
ret
mov
dec
pop
(bad)
jmp
mov
dec
xchg
inc
test
mov
movs
mov
fistp
fmulp
idiv
inc
jno
or
dec
adc
ins
xchg
jae
dec
fcompp
fsub
inc
and
dec
fs
sbb
sub
jmp
js
jl
or
popf
push
aad
out
sub
addr16
ins
mov
add
in
jmp
in
lds
pop
pop
mov
lds
div
in
outs
sub
outs
je
and
xor
jmp
push
pushf
cmp
push
mov
es
in
or
ins
dec
xchg
test
cmps
bound
loope
xchg
mov
sbb
jnp
addr16
sbb
lea
pop
loope
je
test
pop
sahf
dec
jmp
nop
jo
xchg
jmp
inc
mov
stc
jle
imul
retf
icebp
push
mov
adc
jne
or
lds
push
push
cmps
dec
push
cmps
pop
inc
rcl
push
or
cwde
data16
pop
fstp
ror
xlat
push
pusha
fild
xor
mov
cmp
sub
xor
pushf
sbb
test
shr
sbb
adc
mov
jb
outs
imul
imul
mov
and
pop
and
mov
pop
out
or
les
add
sub
xchg
aam
jmp
(bad)
fwait
add
out
mov
push
push
clc
lahf
push
mov
inc
mov
xor
sar
popa
movs
aaa
sbb
sub
inc
clc
push
jns
ret
test
test
dec
scas
sub
shl
cmp
mov
pusha
aad
add
loope
cmp
aad
jmp
push
jl
fwait
retf
add
sub
test
mov
xor
push
hlt
mov
mov
or
or
xchg
jl
mov
inc
push
out
push
int
ja
fcmovbe
or
jae
cmp
(bad)
adc
pop
dec
push
inc
sub
or
bound
jne
mov
push
jg
push
lods
mov
cmp
in
add
adc
or
sbb
mov
loope
int
cwde
pop
xchg
gs
mov
out
dec
fist
pop
push
(bad)
(bad)
mov
adc
sar
add
push
add
fisttp
loopne
add
popf
xchg
std
dec
imul
mov
mov
inc
sbb
jo
es
and
inc
cmp
mov
sub
or
repnz
movs
aad
ins
fcomp
or
adc
or
lods
std
xor
bt
(bad)
in
std
or
pop
sar
xchg
xchg
dec
in
iret
fst
enter
clc
inc
cmps
js
mov
(bad)
push
mov
stos
iret
es
sbb
xchg
push
sub
pop
jp
jecxz
mov
or
or
and
jmp
outs
push
retf
lods
or
stc
jmp
pop
int
dec
mov
nop
jle
daa
pop
loop
fld
sbb
jle
mov
jnp
stos
and
xor
fwait
repnz
add
lds
out
adc
mov
popf
pusha
sub
hlt
dec
aad
cwde
data16
in
jb
push
pop
push
test
repz
jl
sub
or
and
push
xchg
pop
sbb
addr16
xchg
jns
pop
ins
cwde
xchg
inc
sbb
ficomp
dec
jae
leave
mov
xchg
mov
int
scas
mov
(bad)
and
ja
xchg
push
mov
lods
mov
imul
inc
hlt
lahf
out
(bad)
sub
bound
(bad)
mov
jg
leave
dec
lea
sub
imul
gs
and
call
loopne
jnp
scas
mov
jmp
jbe
movs
push
dec
adc
push
outs
int3
add
sbb
test
fs
dec
or
es
test
stc
leave
pop
lods
std
push
inc
add
pop
stos
cli
xchg
and
push
mov
pushf
push
imul
add
jne
jne
call
int
jg
push
mov
push
jle
icebp
fmul
dec
cmp
fiadd
outs
(bad)
push
push
fcom
pop
call
dec
push
sub
inc
loope
adc
call
js
inc
and
or
xor
or
neg
jle
sub
stos
dec
mov
adc
mov
popf
xchg
bound
es
es
shr
inc
sti
cdq
xcrypt-ctr
cmps
fwait
data16
jmp
dec
data16
cmps
inc
ja
sti
rcr
sar
inc
imul
fs
retf
mul
test
sub
add
or
aas
scas
mov
adc
fs
sbb
fbld
fs
add
inc
add
xor
xchg
hlt
ss
and
movntq
add
loope
pop
sahf
inc
jno
movs
shr
mov
fdiv
fist
(bad)
test
mov
push
push
push
push
(bad)
popa
inc
pushf
mov
inc
or
pop
and
mov
and
sahf
es
xor
cld
lea
xor
jmp
jmp
retf
cmp
or
outs
lahf
cmp
imul
in
test
test
sbb
int
int3
(bad)
mov
ret
in
pop
push
or
lock
sub
adc
rol
inc
sbb
icebp
or
and
enter
loopne
jmp
dec
iret
xor
movs
ins
mov
loop
mov
sar
fcomp
jb
sar
cmp
nop
inc
cmp
xor
ss
sbb
out
jmp
inc
or
pop
int3
mov
mov
addr16
xor
aaa
xchg
cli
shr
loop
int3
stc
xchg
aad
nop
and
and
ret
xchg
mov
aaa
xor
les
cdq
push
ins
movs
jb
loop
repnz
cmp
fcomp
rol
dec
jecxz
bound
jmp
inc
sub
sub
xchg
ret
(bad)
imul
sbb
repnz
pop
add
cld
ins
es
aad
push
fadd
adc
ret
scas
jl
xor
push
sbb
mov
aaa
push
aam
dec
cmp
dec
lds
xchg
lods
xchg
fwait
sti
loop
inc
dec
sub
pop
arpl
xor
(bad)
shr
sub
pop
lock
sahf
(bad)
cmp
dec
bound
and
repz
inc
fwait
mov
and
scas
call
mov
xchg
icebp
and
sbb
sbb
inc
out
inc
dec
xor
repnz
push
xchg
(bad)
icebp
mov
lods
add
mov
sahf
xchg
xchg
sbb
in
and
clc
mov
(bad)
add
dec
xor
js
jo
in
les
inc
mov
in
arpl
pop
sub
in
pop
mov
xor
pop
lea
and
ins
mov
int
push
mov
icebp
sub
(bad)
fistp
jnp
add
pop
dec
lods
loop
(bad)
lea
mov
xor
icebp
rcl
call
retf
pop
push
fwait
cmp
cdq
loopne
and
shl
ins
arpl
cwde
scas
ins
fistp
xchg
popf
mov
cmps
xchg
in
dec
xchg
mov
cmc
dec
push
jne
mov
xchg
mov
cmps
ja
fsub
jno
pop
adc
ja
cs
inc
out
test
xchg
pusha
mov
dec
inc
mov
retf
scas
inc
mov
push
push
inc
rcr
push
add
add
repz
je
movs
push
(bad)
inc
icebp
mov
cmp
je
mov
clc
or
mov
push
cmp
daa
ror
adc
(bad)
pop
les
mov
jg
sbb
mov
push
or
or
sbb
dec
jmp
test
hlt
sbb
retf
in
stos
je
or
or
iret
les
xlat
cmp
lods
inc
aad
pop
push
inc
cmps
cmps
das
mov
out
cmp
(bad)
aas
sbb
jb
imul
aam
popa
mov
mov
pushf
fst
cmps
xchg
movs
js
mov
les
adc
jp
das
mov
vsqrtpd
or
pushf
jbe
lock
adc
push
out
mov
outs
test
xor
lock
mov
xchg
mov
in
sbb
mov
pusha
xor
and
mov
aas
mov
out
and
clc
push
adc
ret
mov
js
sub
mov
retf
call
jp
and
or
inc
bnd
adc
xor
push
cli
inc
not
aas
ins
mov
es
in
push
(bad)
add
mov
add
or
test
or
sbb
dec
fstp
out
ins
in
jnp
fldcw
cmc
lds
or
xchg
sti
adc
push
push
enter
sbb
aas
inc
inc
lock
mov
pop
mov
xor
or
xchg
push
clc
jp
push
add
push
ins
adc
adc
sub
imul
lock
mov
or
fsubr
lea
jnp
cmp
and
ja
push
mov
sbb
sub
fild
sbb
pop
ins
sub
cwde
inc
ror
lods
aam
lods
pop
hlt
inc
fild
mov
fadd
mov
mov
mov
mov
cld
pop
cmp
mov
dec
loope
jb
rol
shl
sbb
xor
loop
mov
lock
aad
mov
out
mov
and
pop
adc
xchg
repnz
mov
mov
mov
cwde
sub
jecxz
sar
cdq
stos
mov
add
mov
cld
pushf
add
xchg
adc
outs
fdivr
jae
cmps
outs
mov
dec
inc
(bad)
test
call
mov
aad
test
or
popf
add
xchg
sub
jp
pop
mov
cli
dec
xchg
mov
lds
push
popf
and
or
mov
loop
xor
inc
inc
js
inc
pop
les
xchg
inc
jns
push
push
fst
jp
mov
sbb
push
push
mov
adc
xor
adc
out
scas
or
cli
lahf
sub
push
in
ret
pusha
mov
retf
mov
jge
and
scas
sub
retf
repnz
dec
daa
and
fld
pop
add
sub
sub
stc
fsub
inc
dec
enter
pop
in
div
mov
mov
data16
mov
inc
in
xchg
sahf
dec
jg
cmp
xor
add
dec
enter
lea
mov
xchg
cmp
rol
test
xchg
clc
dec
push
push
in
lea
out
test
jge
test
or
imul
mov
imul
jl
sbb
push
pop
arpl
mov
sub
add
ja
or
lds
movs
inc
cmps
xor
push
mov
or
pusha
add
push
mov
xor
aad
scas
ins
sub
sbb
adc
cmp
daa
pop
cld
jge
pop
xor
loop
aad
test
inc
sti
add
fwait
loope
in
aad
and
xchg
and
and
and
ja
icebp
pop
sti
cmps
gs
lods
lahf
test
mov
xor
in
push
dec
pop
push
rol
jmp
mov
xchg
xchg
icebp
or
add
cli
bound
dec
xor
sti
mov
loop
dec
retf
xor
or
sub
outs
inc
pop
xor
pop
lock
sub
lea
es
jo
(bad)
aad
popa
div
cwde
(bad)
mov
ret
rol
sbb
out
mov
or
fdiv
mov
ja
(bad)
push
stos
xchg
xor
sub
in
movs
(bad)
ret
push
hlt
mov
pop
add
fdivr
sub
xchg
or
sub
cwde
shl
test
arpl
push
mov
sub
mov
dec
push
out
jmp
ins
cmps
mov
out
enter
pop
dec
add
leave
dec
stos
add
ret
jo
mov
cwde
mov
adc
in
and
imul
pop
adc
xchg
ficomp
and
mov
xchg
in
push
inc
mov
or
or
in
in
add
test
fnstsw
test
jle
mov
or
scas
pop
cwde
adc
pop
push
lds
fcom
lds
out
cld
xor
dec
push
xchg
add
mov
push
jmp
stos
dec
push
jle
push
retf
xchg
sub
mov
push
and
stos
addr16
or
mov
adc
xchg
jge
mov
pop
sub
stos
xlat
cld
pusha
lds
mov
mov
leave
retf
jbe
std
aaa
(bad)
movs
shl
lea
pushf
jmp
nop
xchg
in
add
sbb
jg
test
stos
popa
xor
push
retf
ret
pushf
mov
or
lahf
dec
jge
add
lods
mov
cmp
lock
fisttp
cld
push
mov
aad
test
dec
fisttp
or
pushf
xor
ja
jo
xor
fisttp
jo
inc
add
dec
mov
hlt
scas
loopne
dec
xchg
nop
aas
xchg
and
jecxz
ss
lods
les
sbb
mov
sahf
lahf
add
arpl
cmp
jbe
xchg
add
pusha
int3
jl
ss
cmc
jecxz
push
icebp
adc
addr16
xchg
mov
dec
inc
(bad)
dec
sub
bound
and
ds
xor
add
dec
stos
test
jl
and
push
push
dec
push
cwde
stc
sbb
xchg
frstor
popa
xchg
mov
sbb
mov
xchg
cmp
xor
pop
into
jo
adc
dec
fsubr
aam
ror
mov
(bad)
mov
outs
fld
xor
retf
fiadd
in
adc
sub
mov
in
rcr
scas
repz
cdq
scas
sbb
pusha
sub
rcr
add
jmp
ret
pop
jae
(bad)
ins
mov
retf
test
out
xor
pop
out
pop
inc
mov
xor
push
cmp
adc
push
lock
mov
xor
ss
pop
xor
sbb
mov
icebp
xchg
pop
movs
mov
stos
push
jmp
mov
rol
mov
cmp
or
cwde
sub
dec
cmc
out
imul
mov
loopne
test
cmp
rcr
cmps
enter
out
(bad)
xchg
inc
shl
push
into
mov
mov
cmp
dec
(bad)
and
push
icebp
jle
add
ja
in
jns
in
cld
gs
in
push
push
cmp
aad
enter
shr
retf
sub
fwait
and
mov
outs
icebp
jmp
sub
sub
nop
xchg
lods
jbe
dec
fst
ret
inc
jmp
pop
stos
adc
fld
inc
push
jne
mov
sub
mov
push
stos
push
mov
push
push
mov
cs
xchg
mov
loop
jae
call
dec
aaa
pop
(bad)
jb
pop
rol
jnp
stos
jg
xor
lock
adc
and
xchg
ja
imul
les
aad
jmp
dec
bound
sub
out
test
(bad)
fidiv
sbb
fild
les
fbld
cli
lahf
xchg
mov
ss
adc
adc
cmp
mov
push
iret
(bad)
sahf
sahf
sub
dec
jnp
arpl
mov
add
in
es
fsubr
or
fst
hlt
xlat
xchg
imul
lea
cmc
repnz
ss
call
mov
lods
test
adc
sbb
sub
loop
nop
repnz
icebp
dec
lock
add
and
jns
adc
jmp
aad
hlt
data16
sar
push
popf
test
aam
cdq
fistp
nop
add
cmps
inc
cmps
add
mov
mov
jnp
pop
leave
loopne
jle
icebp
push
in
jg
inc
aaa
and
xchg
or
dec
mov
cdq
movs
popa
dec
clc
outs
sbb
inc
pop
sbb
jmp
inc
call
imul
fild
pop
and
add
xchg
push
xchg
out
in
mov
mov
mov
imul
cwde
mov
sti
push
cmp
mov
or
in
aaa
icebp
adc
dec
(bad)
ja
inc
addr16
push
dec
int
cmps
add
sub
scas
push
lahf
arpl
fwait
jl
add
cmp
and
fcomp
or
adc
sbb
push
leave
sub
mov
mov
scas
jno
inc
stos
jbe
adc
xchg
in
nop
push
scas
fnstcw
test
lea
dec
ret
or
into
pop
addr16
xor
jae
push
mov
jp
xlat
add
sbb
mov
xchg
in
push
sub
and
adc
dec
test
addr16
jp
imul
pop
inc
fwait
imul
scas
cld
fnsave
test
loope
xchg
jl
and
ins
cmp
ja
lds
xor
retf
jg
outs
shr
push
inc
or
cmp
fnstsw
xor
clc
cmps
(bad)
adc
xchg
adc
ret
sbb
leave
add
movs
shl
es
mov
lea
les
div
cmp
or
arpl
(bad)
and
icebp
test
out
pop
sbb
xchg
xchg
sbb
fwait
mov
mov
jmp
lock
sub
inc
add
dec
pusha
cmps
fcomp
lea
cmp
lahf
loope
xlat
xchg
xchg
jae
or
mov
loope
jmp
inc
gs
push
out
dec
cmp
jecxz
repnz
push
repz
ins
push
jno
push
das
sub
sbb
bnd
xchg
fld1
lahf
mov
dec
mov
adc
mov
jl
jecxz
mov
mov
lock
das
out
in
stc
fisubr
pop
ss
cmps
jg
mov
ja
jecxz
ror
sub
ss
in
inc
pop
sbb
and
inc
movs
loope
cmp
call
pop
test
sbb
mov
imul
shl
add
mov
outs
xchg
pop
push
cmp
jbe
aaa
inc
cmps
mov
cmp
and
aad
mov
jno
cmp
std
pop
mov
imul
popa
cmp
sub
jnp
jecxz
jmp
sub
dec
jecxz
push
gs
iret
lods
sub
out
xchg
rcr
stos
iret
pop
icebp
jp
test
or
xor
xor
mov
pop
sahf
fldenv
mov
fst
addr16
dec
gs
and
mov
push
cmc
mov
std
test
fs
fld
inc
mov
sbb
ins
inc
aaa
dec
out
cmp
push
add
xlat
xchg
sbb
neg
sub
and
xchg
mov
jmp
jge
add
in
aaa
xchg
sahf
ss
xor
mov
pop
adc
outs
push
or
fsubr
fsub
vmovntps
out
jle
jg
xchg
pop
mov
cmps
xor
cdq
jecxz
jge
pop
mov
inc
and
popf
xchg
xchg
pop
push
mov
mov
mov
scas
jecxz
cdq
mov
in
test
sahf
sbb
push
aad
xor
dec
inc
fs
mov
mov
mov
test
ins
ins
mov
ret
int3
dec
ins
pop
imul
jnp
inc
aas
cmc
in
adc
ret
or
pushf
mov
or
cli
add
jae
xor
mov
shl
leave
push
leave
adc
mov
mov
jmp
repz
stos
rcl
ja
fisttp
test
mov
push
jne
pop
xchg
mov
jmp
into
adc
lock
std
xor
sbb
int
push
js
scas
push
adc
pop
jp
fs
cli
mov
push
and
addr16
lock
cdq
pop
mov
shr
inc
sub
shl
xchg
mov
mov
mov
mov
into
mov
mov
mov
lock
dec
arpl
sbb
movs
mov
(bad)
fucomi
stos
mov
push
mov
test
lock
test
pop
data16
mov
jl
sbb
mov
pop
(bad)
jge
xchg
or
xor
rcl
(bad)
in
addr16
cld
or
jae
stos
ins
call
enter
pop
push
push
cmp
mov
mov
arpl
jl
sti
movs
retf
cmp
push
fs
jbe
inc
(bad)
stc
in
inc
pop
dec
outs
test
add
push
xchg
sbb
sbb
das
dec
sbb
mov
mov
inc
mov
ja
xlat
retf
jle
mov
sub
aad
dec
mov
sub
gs
out
add
adc
pop
ficomp
and
int3
push
leave
dec
test
pop
sbb
pop
add
cmp
std
fidivr
sub
push
inc
loope
addr16
cmp
rcl
mov
cmp
aad
cdq
jnp
movs
loop
dec
and
rep
dec
shl
jge
jl
sub
fadd
int3
mov
and
adc
and
repz
cdq
int
fidivr
jp
movs
out
lods
in
ins
ret
fcom
and
mov
xor
xchg
int3
xchg
or
fsub
out
xor
cmp
test
js
inc
sub
dec
mov
dec
das
or
cmc
or
sub
xor
cs
pop
add
mov
(bad)
sub
cmp
sbb
repz
bound
mov
mov
dec
iret
fbld
cwde
popa
add
sub
sar
adc
xchg
aas
mov
bound
inc
jge
mov
fbstp
inc
jns
sbb
cli
rcr
scas
lods
or
repz
cmps
call
bound
or
fs
bound
inc
ds
xor
popf
push
popf
test
inc
pop
cmp
and
xchg
fist
add
les
mov
mov
imul
fild
das
adc
sahf
sbb
call
les
cmp
cmp
(bad)
xchg
mov
pop
inc
loopne
neg
out
mov
inc
mov
call
sub
rcl
push
pop
mov
mov
nop
cli
fwait
cmp
xchg
scas
leave
jp
lock
rol
pop
or
cmp
mov
aaa
and
(bad)
les
mov
mov
scas
mov
retf
fld
adc
xchg
mov
mov
push
push
xlat
out
ins
jb
jge
inc
popa
xchg
fstp
lods
push
xor
cld
not
je
xchg
dec
mov
cld
sub
shl
rol
cmp
pusha
mov
fsub
adc
dec
lock
and
pop
xchg
ss
jl
xor
pop
jmp
test
sbb
jo
adc
imul
iret
mov
js
cmp
pop
lahf
ror
sar
xchg
iret
lahf
les
loopne
sbb
(bad)
mov
aad
imul
mov
outs
cmp
inc
sub
xchg
add
movq
push
scas
sbb
outs
inc
jmp
ror
mov
pop
pop
daa
sbb
pop
clc
shr
and
sub
adc
and
lea
mov
adc
clc
xor
jnp
pop
pusha
inc
push
pusha
add
push
and
fs
inc
cld
xchg
bound
sub
ss
mov
rcl
(bad)
repz
or
lock
addr16
push
loopne
push
fild
jo
fidiv
and
and
in
ins
inc
aaa
ret
and
inc
sub
mov
dec
clc
out
lock
pop
push
scas
add
scas
and
movs
xchg
pop
sbb
mov
retf
push
inc
(bad)
adc
pusha
mov
in
jno
dec
and
mov
pushf
jo
repnz
retf
out
push
bound
in
test
nop
test
ret
sti
dec
sbb
ins
dec
adc
cmp
aad
lods
ret
sar
leave
loop
ror
gs
dec
push
lock
(bad)
jp
inc
cmps
mov
add
push
or
sub
mov
iret
mov
sub
stc
shl
ret
(bad)
lea
retf
loope
push
(bad)
popa
xchg
sub
sbb
xchg
add
je
push
retf
int
sbb
out
mov
aam
sbb
iret
sub
ins
xchg
adc
or
(bad)
loopne
adc
aad
adc
mov
lods
lods
xor
pop
shr
xor
in
mov
out
xchg
inc
(bad)
push
test
add
adc
cli
push
pop
pop
jp
call
outs
pop
enter
xchg
cmp
inc
mov
jno
mov
js
test
iret
push
mov
fnstsw
xchg
arpl
mov
loopne
in
or
xor
loope
cld
into
mov
adc
inc
pusha
inc
std
cdq
push
in
adc
arpl
pop
or
retf
neg
imul
movs
out
and
mov
xchg
xchg
repz
in
hlt
test
fcomip
push
dec
sti
push
or
out
leave
int
mov
pop
push
mov
jle
pop
packssdw
cmp
jns
loop
rol
je
sbb
retf
push
mov
loopne
fcomi
mov
imul
cmp
xor
(bad)
imul
mov
popa
cdq
in
add
jbe
sbb
push
cmp
mul
jmp
xor
popa
dec
inc
add
pop
jge
cmps
loope
xchg
stos
jp
inc
aad
shl
retf
in
sub
out
mov
das
mov
stos
out
xor
inc
fwait
sbb
inc
mov
retf
xchg
mov
adc
stos
cmp
fucom
in
mov
test
cli
mov
xchg
push
dec
in
jno
hlt
cmp
jno
(bad)
call
in
int
jmp
rol
push
mov
jl
es
gs
dec
repz
fadd
rcl
ficom
jle
pop
iret
push
mov
imul
stos
rcl
dec
mov
ds
out
imul
mov
fiadd
xchg
pushf
inc
dec
sti
sub
je
cld
inc
add
int3
cmp
mov
xor
xor
(bad)
sti
(bad)
rol
bound
add
popa
sbb
in
enter
imul
jmp
cld
js
sahf
or
pop
loop
prefetch
std
push
fild
movs
xchg
add
mov
and
(bad)
mov
popf
xor
ds
add
loop
mov
sub
dec
cmp
out
jg
push
push
dec
or
pop
xor
es
add
retf
add
(bad)
xchg
arpl
push
cmps
fcmovb
js
aam
stos
jle
retf
scas
sub
icebp
loopne
call
cmp
repz
cmps
in
(bad)
mov
hlt
or
adc
add
mov
fidiv
movs
mov
rol
imul
mov
sub
mov
sbb
ins
sub
neg
das
test
adc
xchg
mov
adc
vfnmaddps
ins
xchg
fadd
sbb
or
inc
or
aam
cmps
inc
dec
adc
gs
sbb
test
rcr
mov
test
jg
(bad)
dec
lahf
push
and
outs
jb
pusha
sti
stos
push
push
je
mov
in
gs
inc
ins
mov
push
cmps
mov
dec
jnp
cld
xor
mov
in
pop
test
ss
int
ret
sar
retf
enter
xchg
xchg
retf
jae
pop
inc
dec
mov
mov
stos
jb
sub
enter
mov
sub
xchg
dec
adc
pushf
and
(bad)
(bad)
mov
iret
fs
das
(bad)
sub
dec
mov
xchg
aam
in
sbb
sub
cld
push
out
addr16
jb
movs
push
ror
add
jns
mov
test
dec
dec
test
pop
adc
(bad)
cmp
pop
out
adc
jmp
mov
xor
mov
stos
xchg
push
inc
scas
sub
ficom
jns
daa
mov
add
sbb
(bad)
(bad)
push
and
xor
cmp
pop
pop
adc
loop
push
stos
fmul
push
xchg
pop
push
push
je
leave
push
or
mov
mov
cmp
inc
lock
aas
mov
xor
push
sbb
push
test
pushf
sub
mov
cmps
fnstsw
adc
fistp
je
add
xor
mov
inc
add
(bad)
adc
sub
push
sbb
mov
ja
jb
repnz
jl
daa
mov
xor
aas
inc
sar
and
mov
ins
pop
out
idiv
jmp
arpl
cmp
or
cwde
mov
stos
push
mov
fwait
mov
add
imul
or
inc
leave
push
jg
jnp
adc
test
ficomp
add
or
test
(bad)
in
ja
test
add
mov
sub
std
es
add
push
pop
jns
movs
push
sub
imul
inc
cmp
add
ret
inc
retf
pop
sub
movs
cli
sbb
cmp
out
lea
mov
mov
test
mov
jle
retf
scas
mov
lahf
sbb
icebp
or
inc
mov
pop
adc
mov
lahf
(bad)
arpl
push
test
lods
add
stos
xchg
pushf
(bad)
xchg
pmulhuw
xchg
push
add
or
lahf
arpl
mov
sti
je
lahf
sbb
mov
adc
push
sbb
cmc
jo
bound
jae
xchg
test
add
cld
jae
inc
push
jae
and
test
ss
lods
retf
add
pop
movs
sbb
adc
push
mov
ds
fwait
das
pop
mov
out
push
xchg
adc
mov
js
xor
repnz
add
enter
jmp
cmp
fwait
out
aaa
lea
movs
fidiv
cdq
sub
test
data16
jns
pop
xor
fwait
cmp
lock
ins
cli
fcomp
push
xor
or
aas
pop
push
scas
lods
push
movs
mov
js
xor
stos
data16
xlat
push
add
fdivr
push
pop
bound
test
mov
into
pop
jp
fsub
mov
mov
push
fs
fld
pop
dec
ins
test
or
add
dec
xchg
aad
loopne
lea
add
lea
and
push
icebp
(bad)
aam
loop
jnp
iret
mov
mov
lods
outs
pop
fs
ficomp
pop
in
sbb
int3
fsub
sbb
sbb
aam
fs
xor
jb
inc
aaa
xor
fcomp
adc
cdq
int3
test
or
xor
cdq
mov
ret
jns
mov
cmc
cs
adc
sbb
pop
icebp
jmp
sub
test
inc
mov
ret
std
push
loopne
adc
mov
mov
je
xor
sbb
inc
addr16
mov
(bad)
(bad)
mov
inc
jecxz
popf
dec
(bad)
mov
lods
pop
mov
fwait
jnp
mov
xchg
repnz
(bad)
fstp
mov
cwde
imul
push
xor
into
jle
jne
test
fcmovbe
lds
ret
mov
test
jb
lods
mov
nop
ja
scas
fist
push
mov
call
push
cmp
das
dec
dec
bound
add
retf
xor
adc
stc
xchg
(bad)
(bad)
mov
ins
xor
rcl
pop
pop
lods
jg
add
int3
cmps
pop
xchg
mov
and
test
pop
(bad)
int3
stos
xchg
mov
inc
lds
sub
xor
sbb
ins
inc
add
aam
pop
mov
xlat
cdq
ins
pop
sbb
jl
mov
loop
shl
push
cli
mov
mov
xchg
push
sbb
lahf
loope
(bad)
mov
push
xchg
xchg
fwait
dec
dec
jecxz
test
inc
ret
add
scas
stos
pop
xchg
push
push
outs
mov
ja
pop
pop
jg
push
call
or
ins
or
add
adc
movs
jecxz
add
sbb
std
jp
adc
(bad)
pop
add
jp
or
mov
pop
pop
xchg
(bad)
std
mov
leave
lock
lods
cmps
iret
push
in
iret
add
repz
mov
xlat
cld
test
sbb
fild
addr16
jnp
cmp
push
push
jmp
xor
xchg
das
cs
xor
fcmovu
popa
daa
pop
push
iret
hlt
repz
cmp
push
add
sbb
mov
aad
pop
aas
jo
cmp
xchg
adc
lea
jno
fbld
sbb
dec
(bad)
jp
mov
jle
sbb
xchg
sub
sbb
repz
and
sub
dec
dec
jmp
mov
inc
shl
movs
lods
pop
and
dec
and
mov
jmp
mov
adc
aaa
stc
dec
cmp
add
and
and
pop
push
mov
dec
mov
pop
mov
div
adc
mov
imul
push
and
mov
iret
fldenv
jg
pop
pop
sbb
push
sti
add
test
aas
into
or
xor
mov
push
or
sbb
leave
and
repz
jp
or
push
sbb
xlat
mov
mov
push
jp
cld
repz
or
or
xor
mov
adc
pop
sbb
mov
dec
mov
fwait
push
push
pop
imul
xor
nop
fistp
cmc
xor
cmp
or
xor
mov
je
push
xor
mov
rcr
mov
jmp
fld
jo
dec
xchg
mov
call
imul
xchg
(bad)
mov
scas
mov
xchg
cmp
dec
in
push
sbb
sub
push
fcom
sub
and
imul
stc
out
pop
out
mov
cmp
js
sbb
mov
mov
xor
cmc
sar
fs
pop
aam
and
jp
call
cmps
dec
xor
pop
das
dec
les
push
pop
lea
push
sub
xchg
sub
mov
mov
or
and
add
int
mov
or
pop
mov
jne
add
ror
cld
ja
or
mov
and
fnsave
mov
mov
jnp
fst
inc
mov
shl
mov
or
out
cmp
push
push
scas
scas
xchg
and
ret
mov
cdq
mov
(bad)
pushf
xchg
hlt
cdq
push
scas
add
cli
mov
and
xchg
mov
push
pusha
mov
jmp
(bad)
mov
into
jnp
push
in
push
jecxz
and
sbb
stc
inc
cmp
xor
in
xchg
push
jl
mov
scas
stos
push
fistp
mov
aaa
and
div
cmp
loop
stos
sbb
out
mov
cmp
cmp
repz
lock
bound
push
sbb
popf
mov
scas
bound
lods
mov
cmp
jbe
stc
cli
xor
call
cmp
mov
xchg
in
xor
fs
inc
mov
xor
sub
dec
shr
movs
sbb
(bad)
je
mov
xor
test
imul
loopne
aad
fcom
imul
(bad)
pop
ins
loope
or
arpl
pop
jns
dec
fisub
and
test
(bad)
outs
cmp
xchg
arpl
out
jle
mov
sbb
fcom
push
and
retf
bound
and
push
adc
xlat
and
xchg
inc
jmp
sub
repnz
fist
loopne
in
dec
out
data16
and
mov
sub
in
sub
or
mov
xlat
push
dec
out
outs
adc
out
cdq
dec
pop
test
scas
pop
add
inc
sub
shr
inc
inc
pop
std
vsqrtpd
dec
lea
mov
outs
in
cdq
jmp
and
lods
and
add
xchg
fwait
scas
jmp
loope
ret
mov
xchg
jne
inc
retf
scas
sub
jno
adc
mov
sub
mov
xchg
xchg
dec
inc
movs
inc
and
sti
mov
stos
or
xor
mov
and
shl
fst
adc
mov
cmp
retf
mov
xor
or
mov
fwait
sbb
or
lahf
ret
ds
loopne
pushf
pop
or
cmps
je
out
cmp
jle
int
loopne
aad
or
xchg
je
mov
cmp
ja
jns
push
mov
push
(bad)
lods
cmovns
mov
fwait
sub
scas
test
pushf
inc
inc
mov
add
scas
lods
xor
mov
outs
jns
les
cmp
int
aad
fmul
iret
pop
mov
aam
mov
in
pusha
dec
sub
das
lods
fstp
jge
das
sub
scas
int3
or
mov
xor
sub
js
(bad)
sbb
popf
cmp
adc
mov
or
xor
inc
sbb
adc
ins
repz
pop
ret
outs
mov
cwde
cs
push
(bad)
sbb
das
jmp
mov
pop
push
push
adc
mov
fadd
or
mov
arpl
jmp
ins
cs
cmp
mov
add
sti
sbb
dec
cwde
pushf
xchg
repnz
les
iret
inc
je
sbb
aas
int3
pop
aam
fldcw
das
retf
jmp
nop
popf
pop
jmp
mov
test
je
imul
sub
icebp
mov
sbb
aad
aad
dec
pop
adc
ins
mov
leave
push
mov
in
rol
or
idiv
xchg
or
add
inc
sbb
jg
call
mov
sbb
xchg
iret
sub
movs
adc
jb
dec
push
or
mov
push
aad
popa
cwde
loop
in
push
iret
js
add
push
and
sub
sahf
dec
cmc
iret
cld
fwait
pop
inc
cmps
std
mov
jmp
mov
push
shl
pushf
add
jmp
cmp
test
cmp
outs
aas
pop
xor
(bad)
adc
arpl
imul
cmp
scas
stos
ds
cmp
or
jl
mov
add
jl
pop
popa
cli
adc
sbb
(bad)
lods
out
push
imul
out
jle
lds
xchg
scas
cmp
inc
aaa
cmp
mov
xchg
adc
jae
mov
lods
in
mov
adc
adc
int3
mov
test
sub
mov
xor
dec
jle
into
fdivr
mov
or
cmp
data16
sbb
sub
jg
in
arpl
jae
loop
pop
or
pop
jge
sbb
aaa
mov
xor
inc
cli
test
outs
pop
rol
pop
xchg
hlt
lods
inc
jne
mov
xor
stc
mov
aas
fwait
lods
cmp
xchg
cmp
enter
loop
adc
sub
jbe
pop
ret
cmp
pushf
mov
or
je
sbb
sub
imul
les
sbb
scas
mov
aas
pushf
les
lods
or
not
and
mov
sub
hlt
or
fist
cmp
popa
sub
push
(bad)
sub
sub
cmp
sbb
sar
jnp
inc
outs
(bad)
iret
shr
and
popa
movaps
ficomp
out
xor
outs
lods
aaa
cmc
not
pop
push
jecxz
(bad)
inc
inc
or
test
mov
imul
in
ins
aam
in
mov
fnstcw
aam
iret
xchg
adc
mov
mov
cmp
mov
mov
ins
inc
mov
add
dec
xor
mov
in
or
mov
mov
out
mov
pop
dec
repnz
jp
dec
ss
inc
out
dec
mov
stc
fbld
(bad)
push
dec
mov
jns
cmp
adc
retf
lds
das
push
dec
mov
out
push
es
adc
mov
fsubr
xor
shl
sbb
nop
mov
or
nop
jns
inc
cli
ins
add
push
lods
adc
xchg
cmp
pop
inc
inc
popa
sbb
(bad)
into
mov
ret
in
lods
lods
mov
push
repz
mov
shr
into
movs
ret
xchg
shr
fild
mov
xchg
push
push
or
test
adc
ds
mov
in
repz
arpl
add
retf
out
mov
(bad)
jmp
fstp
aas
(bad)
bt
pop
pushf
dec
dec
push
mov
cmp
and
in
test
sub
enter
(bad)
xor
sub
cmp
mov
mov
dec
xor
mov
shr
pop
inc
cmp
jge
push
repnz
jl
xchg
arpl
or
addr16
in
jle
int
mov
test
ins
mov
and
stc
sbb
cwde
(bad)
in
pop
xchg
push
retf
jmp
pop
pop
lods
mov
iret
clc
inc
(bad)
dec
xor
ins
fxch
xchg
data16
adc
adc
mov
rcr
cmps
scas
ficomp
inc
loopne
mov
popf
movaps
lods
jecxz
pusha
mov
jg
fild
nop
(bad)
xchg
aad
aas
mov
mov
div
sub
jo
test
div
jo
sub
push
ret
mov
(bad)
sbb
xchg
jg
push
hlt
out
pop
mov
jle
cli
or
fiadd
pusha
add
or
dec
sbb
popf
jge
stc
enter
jge
jecxz
mov
cmp
retf
mov
test
mov
imul
cmp
fwait
xchg
jge
sub
inc
jl
xchg
ja
push
jmp
mov
add
jns
loop
mov
shl
fisub
push
or
dec
mov
call
mov
test
cmps
and
cmps
cmp
repz
popf
xchg
dec
fbld
leave
retf
aam
and
or
mov
adc
jmp
daa
mov
movs
ins
lods
pop
push
and
arpl
fcom
bound
jo
fsub
and
js
adc
test
icebp
cdq
or
mov
in
dec
ret
retf
ss
mov
arpl
in
je
call
call
dec
push
xor
ins
in
leave
jb
cli
push
mov
aad
push
sub
es
faddp
mov
sbb
shr
mov
fld
mov
aad
push
rol
mov
fnstenv
mov
sbb
pop
fsubr
sbb
xchg
dec
push
cmps
add
adc
mov
dec
rol
sbb
xchg
lea
cmp
mov
xor
cwde
mov
mov
add
pusha
aaa
or
es
xchg
stc
and
or
scas
outs
inc
xchg
sub
cmp
out
ins
scas
and
arpl
fisttp
mov
fs
popa
cmps
or
push
(bad)
adc
cmp
mov
ret
pop
pop
jl
cmp
mov
or
mov
xchg
xor
xor
inc
and
or
or
in
jge
push
cmp
dec
pop
test
dec
mov
in
outs
mov
xchg
jae
mov
test
ins
shl
push
xchg
push
mov
sub
mov
cmp
sub
cmps
mov
adc
dec
out
pop
xor
dec
(bad)
scas
cmp
(bad)
repz
push
mov
push
xor
leave
adc
loopne
movs
jne
adc
mov
popf
jecxz
movs
ret
mov
idiv
cmp
cmp
fdiv
jbe
cmp
fdivp
inc
xor
jbe
jno
xchg
icebp
jmp
and
jge
jnp
cmp
(bad)
jmp
jno
popf
jl
lahf
mov
xor
adc
xor
in
mov
stos
fadd
fistp
mov
or
sbb
add
adc
mov
mov
push
cmps
fild
or
xchg
pop
xchg
pop
pop
jl
and
push
inc
inc
or
xchg
retf
mov
sar
sahf
sub
dec
cmps
popa
outs
retf
jmp
iret
or
pop
in
xchg
leave
cmp
xchg
cmp
cmp
fnsave
hlt
jecxz
sub
push
aam
daa
popf
sub
add
out
data16
fs
loop
ins
mov
(bad)
jns
iret
push
or
int3
jg
cdq
scas
cs
(bad)
out
pusha
ds
retf
inc
fistp
shl
add
(bad)
mov
sub
in
(bad)
fcomp
out
push
mul
sbb
add
aas
enter
jae
fdivr
adc
or
dec
mov
mov
add
mov
out
push
push
cdq
sbb
jae
add
push
add
mov
pop
jmp
or
sbb
pusha
icebp
mov
push
and
xchg
add
xchg
nop
xor
rcr
scas
lock
ficom
or
call
inc
mov
dec
loope
or
sub
call
aaa
call
lahf
(bad)
sub
cmp
int3
push
js
xor
pop
xchg
add
fstp
mov
mov
repnz
jne
(bad)
aad
inc
fsincos
sti
clc
cmp
cmp
ror
pop
(bad)
adc
mov
add
mov
mov
pusha
cld
mov
(bad)
jb
xchg
fist
jo
jmp
loope
cmp
push
xchg
(bad)
scas
daa
push
mov
fcompp
push
inc
mov
cld
xor
push
dec
cmc
mov
mov
cmps
and
push
cmovs
lds
hlt
xor
repnz
nop
repnz
sub
or
int3
inc
cmps
sar
add
mov
cmp
or
sub
push
xor
sbb
lock
cmps
(bad)
mov
ret
jne
adc
jne
push
sbb
push
mov
shl
stc
cmps
(bad)
mov
xchg
stos
data16
jo
sahf
jmp
ss
inc
sub
sahf
pushf
inc
loopne
mov
out
into
and
add
adc
pop
mov
fldenv
loop
pop
push
arpl
popf
xchg
dec
dec
gs
pop
int
xor
add
xchg
js
sbb
iret
inc
je
sbb
xor
cmp
or
xchg
pusha
(bad)
sub
loope
aas
rcr
xchg
xor
(bad)
jmp
mov
xor
mov
xchg
cwde
addr16
loop
mov
fdiv
aas
aaa
gs
mov
out
mov
mov
stos
cmp
rcr
xor
int
jl
loopne
movs
rol
repz
nop
or
cmc
mov
xchg
jbe
or
fstp
dec
(bad)
jp
out
mov
or
jbe
movs
pop
imul
in
mov
sub
icebp
push
in
std
iret
popa
jl
mov
call
mov
in
cmp
push
int
adc
and
mov
fcomp
fnstsw
lods
jmp
cs
les
jle
pushf
mov
inc
outs
mov
(bad)
fstp
(bad)
repz
loop
mov
push
dec
xor
movs
mov
push
pop
out
(bad)
push
or
push
fwait
test
pop
fsubr
test
and
mov
inc
pop
add
mov
dec
or
in
shr
jae
sbb
or
add
mov
into
aam
xor
add
ficom
add
dec
pop
and
jmp
jno
ja
push
stos
add
fs
fist
mov
fs
ins
jle
xor
dec
(bad)
sub
movs
dec
test
sbb
in
fistp
xor
mov
mov
test
xor
jp
inc
mov
adc
imul
cmp
pop
div
stc
ucomiss
imul
daa
mov
loope
or
fnstenv
fisubr
jno
outs
add
add
xchg
mov
(bad)
out
stos
mov
mov
cdq
rcl
dec
and
iret
nop
rcr
shl
jne
call
dec
movs
test
xchg
(bad)
jmp
call
jmp
in
cmp
dec
retf
lock
mov
shl
jl
stos
in
jnp
sahf
mov
data16
test
xchg
cmc
mov
cmp
rcr
or
(bad)
stos
adc
sbb
das
pop
adc
jecxz
addr16
sahf
and
in
(bad)
cmp
mov
sub
mov
aam
fnsave
sbb
cmp
add
sub
pop
and
in
inc
fcomip
fmul
out
aam
ror
push
mov
add
mov
loop
inc
loopne
or
mov
push
das
inc
cmp
jle
lods
arpl
mov
mov
ja
push
or
retf
lea
mov
jg
dec
es
stos
add
sbb
xor
inc
push
out
jno
cmps
xchg
xchg
retf
or
(bad)
in
xchg
add
mov
stos
pushf
pop
xlat
clc
lods
xchg
cs
pop
cmps
sub
jne
lea
jmp
fld
xchg
popa
shr
lock
in
cmp
mov
aad
sbb
sub
xchg
add
and
sbb
test
mov
popa
sbb
(bad)
fs
sbb
inc
movs
ds
(bad)
loop
fcmovnb
sub
sbb
pusha
stc
inc
ficomp
aas
jb
xchg
out
jmp
in
sbb
cmp
in
hlt
adc
or
dec
adc
es
test
xor
test
xchg
xchg
sbb
xchg
movs
data16
sar
cmp
ss
pop
push
pmuludq
push
push
out
push
push
cmc
xchg
mov
mov
mov
scas
test
inc
push
pop
into
out
adc
mov
dec
les
mov
shl
sbb
adc
sub
cmp
int
xor
cmps
sbb
pop
ret
push
test
adc
and
(bad)
cmp
das
jae
jmp
rcr
cmp
xchg
inc
inc
fimul
loope
xchg
fadd
xor
push
(bad)
aaa
and
scas
mul
sbb
and
repnz
shl
or
sub
mov
add
jo
adc
imul
inc
jae
push
in
std
xchg
ds
(bad)
mov
add
mov
push
shl
movs
lea
aad
jbe
sub
sub
or
sbb
in
sbb
aaa
(bad)
adc
push
pop
les
adc
xchg
lods
push
mov
sbb
and
pop
fild
jg
stos
jno
xchg
pop
not
or
jae
and
rcr
mov
shl
stos
push
cs
and
cmp
jecxz
sub
and
dec
push
xor
xor
fwait
shr
clc
adc
push
adc
es
sbb
(bad)
adc
dec
dec
and
bound
sahf
lea
nop
inc
adc
and
inc
mov
nop
lahf
stos
fwait
loopne
inc
cld
fs
cdq
xchg
pop
jmp
push
sbb
nop
and
clc
inc
(bad)
es
cmps
int3
push
gs
pop
out
xchg
lods
jmp
or
(bad)
pop
jmp
mov
push
push
sbb
out
sub
shl
adc
ja
dec
push
or
ficom
cmp
jb
sbb
fwait
xchg
or
adc
sbb
scas
data16
sti
aad
cmp
inc
aas
sti
dec
(bad)
aad
sub
push
push
push
jp
in
pop
jmp
inc
xchg
into
mov
inc
jl
clc
aaa
pop
dec
mov
dec
jnp
mov
mov
fs
loopne
push
or
xchg
mov
cmps
pop
or
xchg
or
jge
sahf
mov
xchg
jno
jl
repz
push
shr
int
loop
or
inc
aaa
cs
push
(bad)
enter
pushf
xlat
sbb
push
dec
jo
adc
js
jno
pop
test
xor
(bad)
fild
pop
xchg
jmp
(bad)
leave
add
and
in
xor
dec
(bad)
(bad)
sub
out
add
cs
sar
jo
pop
mov
mov
push
xchg
icebp
movs
cwde
int
pop
ret
and
push
std
add
push
cmps
jne
or
jge
sub
pop
pusha
mov
pop
hlt
inc
bound
push
aaa
or
test
xor
add
bound
cmp
cmp
(bad)
imul
xchg
adc
jno
mov
stos
imul
mov
xchg
add
out
jb
mov
out
jle
mov
pop
or
in
hlt
jl
repnz
sbb
push
dec
cmp
dec
sub
retf
or
aam
mov
cmp
les
js
es
jbe
xor
out
push
stos
imul
push
push
inc
loop
xchg
sbb
pop
and
nop
inc
cmp
movzx
aas
mov
adc
and
stos
pop
push
mov
dec
int3
adc
sbb
or
push
or
mov
or
inc
out
ds
mov
hlt
xor
dec
xchg
sti
lds
rcr
or
dec
loope
pusha
adc
ds
cwde
pop
scas
mov
pushf
pop
dec
adc
push
sub
fisubr
xor
dec
sub
ret
jge
push
cmps
inc
sbb
nop
popf
outs
inc
xlat
js
fstp
pop
rcl
pop
pop
gs
add
call
inc
test
push
imul
sbb
pop
jecxz
jl
call
sbb
int
scas
cmc
mov
mov
in
lds
cmp
jnp
mov
mov
cld
hlt
cmp
push
push
xor
ret
mov
jnp
cmps
or
sub
dec
add
and
pop
dec
aam
cli
enter
in
cmovl
push
mov
mov
cwde
lds
fbld
mov
and
in
add
test
and
cmp
pushf
fld
mov
call
inc
add
push
lea
jge
shl
adc
xor
jo
ja
mov
mov
addr16
cmps
inc
jecxz
repz
or
dec
enter
ja
sbb
adc
sbb
pop
pop
add
add
dec
dec
shl
cwde
mov
mov
jnp
dec
push
jns
pop
smsw
mov
inc
pop
inc
(bad)
je
test
shl
imul
adc
or
pop
xor
mov
jbe
pop
cld
movs
lock
jl
push
lock
jg
jge
fcmovnb
(bad)
mov
xor
add
xor
ret
and
loop
mov
mov
mov
fild
cmps
and
out
push
xchg
xchg
and
(bad)
call
in
test
iret
and
push
in
shr
(bad)
sbb
pop
pop
movs
je
out
fs
or
out
les
out
jle
mov
aaa
xor
scas
jmp
mov
sbb
fmul
nop
pop
sub
ins
out
mov
clc
dec
add
pand
jnp
sub
(bad)
mov
or
jmp
dec
add
xor
inc
cmp
xchg
mov
push
xlat
mov
or
mov
mov
inc
xor
pushf
cmp
sbb
mov
std
rcl
cwde
sub
add
in
mov
lods
in
nop
stos
push
sbb
stos
addr16
dec
ins
mov
inc
data16
mov
cmp
iret
test
cmp
sub
jle
(bad)
mov
adc
inc
jae
adc
ret
in
repz
mov
out
mov
push
fdivr
sbb
xlat
mov
sbb
(bad)
shl
fs
push
mov
mov
jmp
xchg
nop
stos
mov
mov
jp
loopne
outs
aaa
dec
call
sub
sub
inc
stc
mov
jmp
adc
nop
mov
cmp
cwde
jo
xchg
adc
xor
pop
jbe
fdiv
sbb
mov
xor
push
pop
jmp
dec
and
mov
dec
cmp
mov
mov
in
sti
mov
mov
push
scas
in
and
and
push
mov
repnz
sbb
sbb
mov
xchg
fdiv
outs
or
mov
test
shl
lods
sbb
(bad)
sub
sti
push
pop
out
es
inc
jne
(bad)
dec
movs
adc
pop
and
and
jmp
mov
inc
adc
movq
xchg
push
cmp
dec
mov
jb
sti
dec
dec
add
push
outs
inc
jp
mov
adc
in
jl
ins
pop
ss
jmp
iret
push
bound
and
xlat
jbe
call
loope
int3
sub
sub
inc
cmc
cmps
mov
outs
in
cmc
or
movs
push
fidiv
dec
mov
addr16
stos
outs
xor
push
js
in
xchg
test
test
sub
xor
xlat
mov
lock
cmp
gs
add
push
cs
inc
dec
push
or
add
xchg
mov
jmp
mov
or
jno
jnp
call
ja
fs
pop
imul
adc
inc
into
mov
arpl
cmp
dec
arpl
cwde
cmp
cld
in
push
add
or
jge
movs
dec
mov
mov
icebp
iret
inc
in
retf
add
add
dec
jo
repnz
daa
adc
fild
(bad)
in
cwde
cmps
mov
frstor
jb
cmp
dec
lods
sbb
cmps
lea
xchg
cs
pop
xlat
push
out
int
xchg
je
pop
aam
push
out
mov
pushf
add
mov
mov
sbb
add
dec
xor
fiadd
fist
jb
or
movs
cwde
jnp
data16
mov
sti
xor
xor
(bad)
add
rep
scas
test
sti
and
movs
xor
pushf
stc
test
dec
lods
xchg
repz
test
pop
(bad)
retf
xchg
(bad)
fist
mov
ret
jecxz
push
mov
(bad)
pop
cmp
outs
mov
jae
inc
loopne
fwait
cmp
xor
sub
cmp
test
lds
mov
inc
das
test
cmc
int3
and
pop
mov
jo
dec
pushf
sub
dec
fwait
(bad)
push
mov
(bad)
mov
cmp
fxch
lods
cwde
mov
nop
adc
pop
retf
hlt
push
das
test
push
sub
xrelease
nop
neg
stos
nop
out
push
fdiv
or
add
mov
xor
dec
mov
fimul
stc
cdq
sbb
or
sar
sahf
and
jbe
imul
xor
rcr
int3
sahf
jge
and
adc
les
(bad)
adc
(bad)
mov
push
adc
and
lods
lods
retf
mov
das
hlt
fldenv
cmp
test
es
xor
dec
push
cmp
in
add
xor
iret
aam
push
or
fwait
push
(bad)
jns
cmps
(bad)
lds
add
sub
fmul
xlat
clc
sti
inc
ja
add
inc
bound
mov
xchg
cmp
mov
mov
or
mov
fidiv
sbb
jle
or
inc
and
adc
int3
mov
pop
lods
sub
mov
scas
pop
jl
ror
shl
fiadd
outs
add
xchg
aaa
mov
cmp
ret
std
xor
sub
add
pop
aaa
xchg
ins
sbb
shl
sti
cmp
call
pop
data16
jecxz
call
add
xor
ret
scas
cs
leave
out
inc
pop
inc
jl
jae
nop
fisubr
(bad)
and
push
xchg
ror
repz
dec
mov
cmp
xor
cld
repnz
adc
mov
mov
fwait
icebp
and
inc
pop
in
add
push
das
xchg
fst
sbb
(bad)
cmp
xchg
sbb
push
data16
jbe
jle
jmp
iret
jl
lods
in
xchg
adc
sbb
jns
dec
mov
inc
inc
xor
int3
cli
stos
or
es
jmp
mov
ja
adc
jle
pushf
aaa
jbe
ja
sbb
fild
sar
rol
mov
icebp
aad
and
frstpm(287
loop
je
xor
adc
minps
imul
and
cld
packssdw
dec
xor
add
xchg
arpl
mov
test
sub
mov
scas
icebp
mov
call
cs
mov
(bad)
cld
jg
dec
pop
jb
inc
add
lahf
and
addr16
push
sub
jbe
imul
test
mov
icebp
dec
test
mov
aad
jle
adc
and
cmp
jns
jmp
inc
fwait
cmp
sbb
mov
mov
mov
out
test
imul
push
lods
mov
mov
jecxz
dec
jecxz
mov
sti
inc
sbb
(bad)
and
jmp
mov
cld
sbb
retf
scas
ss
lahf
dec
(bad)
mov
add
cmp
add
adc
jge
(bad)
jb
push
or
sub
mov
stc
das
and
ja
shr
popf
jle
and
pop
fmulp
jae
ror
lahf
jns
call
shl
cs
mov
mov
jmp
pop
setbe
sub
pop
jmp
test
sub
mov
pop
(bad)
sti
lds
sahf
sbb
sub
pop
dec
ror
mov
sar
push
cli
pop
stos
in
iret
out
xor
sub
iret
and
mov
aam
frstor
ds
sbb
int
(bad)
jmp
mov
hlt
jae
(bad)
rcr
ds
add
outs
nop
fstp
dec
xor
sub
mov
lock
jp
xor
adc
xchg
cmp
daa
pop
mov
outs
mov
dec
xor
add
cmps
shl
mov
fnsave
inc
ins
xchg
jno
jg
pop
outs
dec
mov
es
and
sbb
cmp
xchg
lahf
jo
fldenv
je
and
jecxz
cld
jb
in
aaa
outs
push
jnp
and
fs
(bad)
sti
xor
imul
imul
mov
pushf
(bad)
fsubr
stos
ror
loop
rcl
pop
xor
jle
inc
mov
dec
mov
pop
dec
add
xchg
movs
xor
jne
and
jno
int3
xchg
dec
mov
xor
lods
pop
inc
aad
sub
out
push
push
xchg
nop
mov
in
fcom
dec
push
xor
push
icebp
and
adc
out
mov
sub
dec
adc
sbb
aaa
xor
pop
mov
das
mov
cwde
ins
mov
push
jl
popf
ret
pop
mov
adc
mov
jb
lea
and
dec
jge
push
adc
aam
mov
test
push
jmp
mov
push
ror
sbb
cmp
xchg
and
mov
pop
pop
xchg
or
dec
fild
push
ror
adc
(bad)
or
repz
fsub
pop
xchg
rcr
div
xor
pop
mov
dec
mov
cmp
cli
cld
fist
pop
ret
pop
hlt
xor
and
adc
dec
out
sahf
xor
cwde
nop
das
mov
out
cmp
aas
pop
sbb
arpl
cwde
sbb
retf
ins
lock
push
jmp
repnz
cmps
int3
dec
mov
sub
jmp
xchg
idiv
push
scas
mov
or
xchg
retf
clc
jl
stos
call
popf
popf
stos
rcr
dec
jp
pop
bound
add
scas
popf
js
dec
rcl
js
jmp
mov
dec
mov
and
jl
sbb
xchg
jmp
sbb
stos
in
fistp
adc
mov
outs
dec
icebp
inc
dec
xchg
repnz
clc
retf
outs
jecxz
mov
pop
mov
lods
imul
xchg
shr
(bad)
sub
dec
sub
mov
dec
push
xor
xchg
lds
out
test
rcl
push
xchg
and
mov
mov
xchg
in
mov
fwait
jge
(bad)
hlt
fisubr
mov
jmp
fimul
sub
push
leave
mov
mov
lea
and
adc
dec
dec
or
(bad)
mov
push
je
gs
(bad)
sbb
fs
mov
adc
xchg
fdiv
dec
jmp
imul
dec
cli
cli
sbb
sbb
and
out
inc
imul
(bad)
mov
shl
shl
mov
adc
xchg
retf
inc
lahf
mov
adc
aad
xchg
(bad)
leave
gs
jge
int
push
inc
adc
daa
xor
aas
cwde
out
lahf
sbb
int3
xor
(bad)
cwde
jl
das
xlat
fmul
ds
out
cmp
dec
ret
cmps
xchg
out
cmc
mov
pop
and
jb
jbe
aas
rsqrtps
iret
sti
mov
pop
jmp
push
pop
sub
ror
mov
and
sbb
mov
sub
adc
mov
popa
xchg
cwde
add
lods
mov
jge
icebp
jb
movs
lds
iret
cmp
shr
ins
pop
sbb
loop
rcl
or
dec
std
icebp
std
out
or
loopne
mov
cwde
js
je
dec
mov
jno
push
sar
adc
sub
dec
xor
jno
pop
fdivr
add
ins
neg
lods
test
cmps
imul
inc
dec
mov
mov
inc
jnp
xchg
repz
movs
pop
lea
mov
sar
lock
arpl
push
jp
ins
dec
push
hlt
sbb
jge
xlat
fstp
sub
mov
xacquire
pop
xor
mov
dec
jmp
mov
sahf
ret
(bad)
fstp
out
jmp
test
and
(bad)
das
in
mov
push
lods
sub
ret
sbb
pop
xor
test
test
rol
jge
test
les
data16
xchg
mov
nop
arpl
psrad
sbb
cs
sbb
out
dec
dec
ds
addr16
movs
retf
pushf
aam
inc
sub
clc
pop
in
mov
adc
ds
push
xchg
or
push
push
int
test
leave
cdq
dec
loopne
lock
or
jno
popf
ds
(bad)
cmps
inc
aaa
inc
call
mov
sub
add
out
sbb
push
mov
add
xchg
cmp
adc
pop
popf
mov
mov
lods
nop
push
iret
js
fld
jp
(bad)
icebp
(bad)
mov
sbb
mov
lds
push
push
sbb
enter
push
pop
adc
adc
inc
(bad)
add
fisttp
movs
mov
dec
ins
mov
pop
(bad)
sbb
outs
int
scas
xchg
cmp
das
(bad)
mov
fs
test
and
gs
or
xchg
pop
add
inc
loop
ds
sbb
cli
sub
fwait
push
jle
sub
out
loope
(bad)
mul
mov
inc
push
in
and
jb
pop
mov
ret
in
shr
push
les
addr16
xor
xchg
mov
ror
or
pop
nop
int
and
cmp
leave
test
fcomp
out
mov
arpl
jge
jno
std
pushf
xchg
or
xor
movs
mov
lea
jge
ja
into
sub
dec
mov
iret
pop
out
jns
push
push
adc
int3
test
cmc
mov
lods
add
stos
popf
mov
fbstp
test
xor
mov
sub
dec
in
inc
shl
mov
ficomp
fild
add
pop
and
es
cld
stos
xchg
mov
in
or
mov
and
inc
into
repz
mov
jae
retf
div
cmp
xchg
daa
mov
cmc
xchg
clc
mov
and
loop
inc
repz
jle
stc
mov
out
xchg
imul
test
adc
adc
mov
or
ss
loope
cmc
mov
movs
lds
jp
lds
pop
icebp
pop
xchg
cmp
sbb
pop
out
int
push
cld
push
or
mov
les
scas
je
es
(bad)
fistp
mov
sub
or
jne
xor
sti
inc
mov
push
cmp
lahf
xor
daa
sub
fcom
mov
add
sub
dec
stc
jmp
ins
dec
jmp
mov
(bad)
int3
and
mov
and
push
sar
xor
mov
xor
aas
adc
mov
push
jp
int
(bad)
cld
jmp
mov
mov
pop
je
cmps
add
jne
jecxz
outs
hlt
xchg
fs
lock
pop
popf
mov
fmul
(bad)
aas
or
sub
and
or
inc
push
dec
push
cmp
pop
pop
xchg
ja
xor
jne
into
dec
loopne
inc
inc
pop
sbb
nop
pop
jmp
and
push
lea
mov
mov
mov
fcmovb
cmp
nop
test
cli
aam
rol
jp
cs
jmp
dec
andps
sbb
outs
out
jg
loopne
mov
ret
xchg
mov
push
in
mov
mov
iret
test
cmc
dec
xor
cld
push
popa
cmp
or
pop
cmp
push
cmp
jnp
inc
call
xor
mov
cmc
bsr
adc
(bad)
jle
adc
movs
mov
mov
fs
ror
leave
nop
pop
dec
out
test
sub
sar
mov
mov
jle
or
in
div
mov
aaa
pop
rol
aad
cmc
fisttp
out
ror
loop
add
bnd
ret
call
imul
leave
jp
cmp
sub
jae
mov
outs
lods
pop
test
sti
pop
es
pop
xchg
add
and
in
cmp
xor
test
or
cli
xchg
out
scas
jae
fdiv
sbb
or
sbb
cmp
inc
test
dec
push
cmp
fdiv
into
call
mov
or
mov
fucomi
aas
daa
cli
sbb
pushf
pushf
fild
cwde
adc
cmc
in
imul
lock
mov
push
cmp
dec
fwait
cmp
leave
inc
in
mov
test
scas
dec
and
test
(bad)
clc
lods
inc
mov
xor
mov
mov
sti
icebp
pop
xchg
add
pop
imul
call
jmp
push
adc
mov
pop
cmps
lods
adc
sub
sbb
jb
lods
test
mov
dec
lahf
xchg
dec
cmp
jecxz
mov
(bad)
sahf
(bad)
jmp
push
test
pandn
jne
clc
les
pop
iret
es
cmp
jp
mov
adc
pop
lock
arpl
arpl
fbld
pop
push
mov
or
mov
dec
pop
and
mov
mov
cdq
mov
dec
test
aam
inc
adc
or
or
or
jmp
jno
pop
addr16
push
fwait
mov
add
fbstp
pop
cld
out
in
dec
outs
js
pop
mov
lods
push
dec
lock
in
into
add
fbld
cs
mov
dec
xchg
scas
lods
dec
test
loop
ins
add
xchg
add
mov
cmp
mov
test
mov
movs
jl
pop
pop
fcmovbe
popf
mov
push
ret
ret
pop
idiv
leave
jne
pop
pop
or
mov
repnz
push
lahf
enter
and
ins
or
fwait
push
repnz
or
outs
jl
dec
xchg
mov
sub
mov
push
(bad)
movs
pop
scas
pop
js
popf
pop
sbb
jb
inc
jo
movs
push
or
int3
pop
in
(bad)
xchg
push
inc
mov
push
addr16
sub
cld
pop
mov
dec
daa
fiadd
push
data16
aaa
mov
xlat
sbb
jne
sahf
xchg
bound
mov
pop
cmp
and
cmp
out
(bad)
nop
pop
mul
cmp
pop
adc
sub
xchg
push
daa
daa
mov
sub
xchg
cmp
rcr
in
sub
out
sub
jecxz
mov
jno
and
mov
out
sub
fstp
test
dec
fwait
xlat
mov
and
fnclex
loope
iret
pop
sub
xchg
popf
adc
cmc
fistp
cmp
xor
or
je
jnp
jb
pushf
push
xor
pop
mov
push
xlat
aam
into
ret
lds
inc
je
int3
dec
in
sbb
ins
dec
jle
push
xchg
pushf
jmp
into
pop
cmc
lock
mov
test
std
or
popa
idiv
dec
call
inc
inc
mov
call
adc
adc
stc
and
mov
out
inc
add
xor
movs
mov
mov
add
lahf
not
lds
mov
pushf
jl
pusha
out
or
add
or
pusha
cld
aas
sbb
bound
dec
(bad)
out
or
lock
xor
ror
adc
fdiv
push
fnstsw
stos
xchg
sbb
cmp
adc
or
shr
lock
mov
fsub
test
or
stc
fwait
les
pop
arpl
bnd
retf
mov
cdq
int
outs
mov
mov
cmp
aaa
jno
mov
jp
ret
add
or
bound
xchg
and
jg
imul
inc
jl
jb
loope
xchg
lds
sub
pop
je
stc
shl
cs
mov
mov
shl
cli
shl
fisttp
mov
jns
and
push
jmp
dec
aaa
imul
ficom
cld
lahf
xlat
int
shr
cmp
nop
inc
push
pop
test
shl
dec
sar
out
xchg
(bad)
dec
mov
pop
sbb
test
ds
(bad)
sahf
call
cmp
push
mov
ficom
arpl
inc
mov
cmps
add
xlat
add
jle
adc
retf
data16
ror
mov
push
imul
mov
mov
lock
inc
into
(bad)
loopne
or
in
and
xchg
pop
or
jge
add
jmp
(bad)
std
lods
(bad)
jmp
push
ds
adc
(bad)
push
cwde
push
or
popf
jne
ds
sbb
ret
idiv
aam
enter
int3
pop
mov
loope
sub
popf
fwait
jo
push
imul
sti
sbb
ror
or
push
scas
out
xor
mov
ss
loopne
aam
mov
jnp
div
sahf
mov
mov
sti
add
pop
stos
jl
mov
jmp
push
lds
mov
in
(bad)
in
lods
pop
stos
xchg
movs
or
mov
inc
cmp
out
pop
loopne
mov
mov
outs
sub
xchg
shr
movs
hlt
test
dec
mov
(bad)
fsubrp
mov
gs
mov
int
pop
dec
cmps
loope
pop
cwde
lds
mov
sti
add
push
mov
movs
and
stc
retf
cmp
ds
frstor
movs
mov
or
push
push
xor
outs
mov
clc
mov
sbb
arpl
pop
mov
jle
aad
ret
adc
cmc
jmp
fnsave
in
or
movs
jae
sub
je
cld
jb
mov
or
imul
adc
hlt
lea
cmp
fwait
sbb
push
cmp
xor
es
inc
loop
sbb
cmps
jp
lahf
out
xchg
lea
call
inc
adc
mov
stc
sub
jo
mov
jmp
dec
ins
mov
push
es
movs
sub
xor
jecxz
fsubr
es
adc
jb
inc
mov
mov
imul
rcr
outs
cmps
jmp
out
mov
ret
push
add
mov
mov
(bad)
fnstcw
out
jae
push
shl
into
dec
cmp
push
jno
das
nop
int3
push
daa
xchg
inc
xlat
(bad)
sub
fldpi
push
test
inc
fwait
and
dec
mov
loopne
jge
jns
add
mov
lods
add
pop
add
xchg
rol
dec
aas
cdq
pop
sub
push
(bad)
and
cmp
sbb
dec
lods
mov
es
es
pop
xchg
push
jmp
push
mov
daa
fcomp
rol
jge
(bad)
xor
push
cli
rcr
pop
xchg
push
push
scas
(bad)
in
and
inc
ins
sahf
xor
imul
xchg
mov
push
xor
mov
jmp
sub
pushf
inc
lock
push
(bad)
xor
mov
ficom
push
mov
mov
repz
inc
cmp
in
enter
push
adc
test
enter
stc
(bad)
arpl
test
fwait
xchg
cwde
pushf
movs
sub
dec
push
xchg
xor
sbb
mov
mov
add
sar
out
shr
xor
cmps
mov
ja
clc
imul
dec
jp
pop
hlt
retf
adc
xchg
pop
inc
(bad)
fild
push
sbb
fadd
push
or
aad
push
das
xchg
int3
add
in
xor
ins
and
stos
mov
pop
aaa
pop
dec
dec
sub
int3
icebp
or
push
leave
push
adc
mov
stos
xchg
pushf
sbb
add
clc
sub
push
ret
test
jbe
and
lds
jnp
xchg
cmp
pop
loop
cmps
sub
mov
data16
mov
fbld
js
jg
idiv
add
pop
test
test
add
xchg
inc
mov
mov
gs
(bad)
mov
xor
fisttp
xchg
push
leave
cmp
arpl
push
rcl
mov
movs
add
or
into
mov
js
es
sbb
loopne
popa
sbb
and
cdq
shl
iret
and
cli
ins
sbb
outs
sti
jb
jp
add
fcmovne
inc
mov
int3
adc
rcl
lods
in
js
into
jl
neg
cmp
jg
out
loop
jmp
mov
dec
inc
mov
jecxz
in
outs
test
fidivr
nop
cmp
cmp
mov
aam
mov
aad
stos
sub
sub
ret
in
movs
xchg
lds
out
shr
and
mov
add
sbb
stos
cmp
cld
and
xchg
sbb
add
(bad)
mov
in
daa
sub
cdq
imul
shl
adc
(bad)
das
pop
mov
out
mov
sub
inc
dec
movs
bound
bnd
sbb
mov
adc
sub
cmp
mov
xchg
cmp
and
xor
std
js
mov
retf
sbb
jl
cmp
jl
push
mov
gs
cmc
push
dec
pusha
add
sub
cmp
pop
push
addr16
movs
adc
dec
or
cmp
(bad)
shr
xchg
cmp
icebp
pushf
adc
retf
push
xor
lods
jb
test
lock
pop
dec
aas
mov
xchg
mov
sub
sub
test
leave
fmulp
jnp
mov
cmp
leave
fimul
push
in
mov
into
(bad)
idiv
test
mov
mov
sbb
(bad)
in
xor
loopne
sub
pop
sub
adc
aam
add
cmp
in
adc
lods
mov
mov
movs
jb
addr16
dec
cmp
push
dec
xchg
mov
inc
sbb
mov
call
push
sub
sub
repnz
inc
outs
pop
les
int
add
adc
outs
mov
inc
add
ins
adc
inc
(bad)
clc
inc
push
ret
cmps
retf
and
cs
sbb
cdq
test
pop
adc
into
xlat
idiv
or
retf
cmp
mov
pop
add
mov
push
repz
xchg
add
call
xchg
inc
pushf
out
adc
mov
pop
mov
aad
nop
push
fsub
jg
mov
lods
push
and
push
retf
fcomp
mov
(bad)
enter
and
sbb
mov
out
xchg
or
mov
(bad)
cli
jmp
mov
aad
push
movs
dec
out
adc
mov
dec
sbb
test
lahf
dec
inc
ja
pop
ins
mov
cmp
sbb
sahf
cmp
fwait
cdq
cmp
ror
mov
fs
call
xor
push
(bad)
outs
sub
fs
adc
or
hlt
jmp
adc
push
js
pop
mov
cmp
add
and
xor
pusha
mov
(bad)
into
mov
stc
jecxz
mov
fild
inc
test
pop
cmc
cdq
push
jbe
ins
int
daa
rol
mov
test
mov
cmp
sub
pop
imul
leave
inc
shl
sbb
ret
rol
inc
push
loope
fwait
mov
imul
dec
loop
fimul
xor
out
iret
mov
sbb
cmp
mov
sbb
pop
push
iret
cld
test
mov
pushfw
or
xchg
jmp
sub
mov
fs
ret
xchg
ins
mov
cmps
dec
ret
fadd
imul
inc
and
mov
adc
push
inc
daa
es
mov
pushf
ret
push
(bad)
jnp
repnz
xor
daa
adc
retf
xchg
jg
push
hlt
dec
mov
(bad)
movs
pop
in
and
sub
fucomi
dec
je
pop
xor
xlat
xor
push
pop
xor
out
outs
mov
ret
jle
dec
pop
loopne
sbb
pop
sbb
or
in
mov
int3
dec
dec
int3
cmp
imul
dec
push
ins
fnstcw
cli
pop
loop
mov
ja
add
inc
(bad)
mov
test
outs
jmp
test
ins
sbb
gs
mov
xor
sbb
cmp
repnz
push
addr16
(bad)
je
and
mov
imul
or
outs
aaa
push
(bad)
repnz
daa
imul
(bad)
out
mov
out
sub
sbb
push
lahf
fisub
ins
xor
xchg
leave
cmp
bound
cdq
push
bound
cmps
aam
pop
pop
mov
enter
jns
outs
mov
dec
dec
loopne
mov
sti
push
icebp
dec
or
adc
ret
xchg
hlt
sub
rcr
ins
push
inc
in
mov
xchg
xchg
call
pop
clc
je
retf
ss
aas
push
xlat
mov
mov
pop
add
scas
mov
shl
adc
rcl
stos
mov
mov
xchg
sbb
pop
fild
push
cwde
js
ins
xchg
cld
fwait
sub
loopne
fiadd
test
jb
loopne
cmps
loope
sub
stos
retf
ds
in
mov
pop
fstp
loopne
addr16
inc
mov
push
mov
aas
ss
out
arpl
les
ins
push
or
mov
sbb
int
jne
in
dec
dec
xor
cmp
jp
dec
test
add
rol
repnz
mov
mov
adc
sbb
mov
scas
rcl
(bad)
loop
push
jno
dec
pop
cmp
push
xchg
in
xor
hlt
ja
add
retf
xor
jne
movs
cmp
mov
push
loop
mov
lods
inc
js
cmp
loopne
dec
repz
sbb
call
leave
aaa
loopne
jnp
inc
pop
sti
mov
mov
dec
icebp
mov
adc
pop
mov
jg
inc
jmp
adc
fisub
adc
lahf
mov
ins
cwde
movs
add
hlt
cmp
and
xchg
out
add
call
mov
and
arpl
or
mov
(bad)
cwde
stos
leave
jbe
pop
std
mov
(bad)
ret
in
inc
mov
adc
jno
sbb
loope
lods
fwait
mov
push
lea
in
out
pop
mov
(bad)
movs
ret
scas
add
int3
mov
call
nop
and
clc
cmp
data16
adc
mov
mov
ret
jle
rol
aam
push
jo
and
(bad)
jge
push
rcr
sub
inc
sbb
enter
pop
mov
out
push
sti
lock
pop
dec
add
pop
out
loopne
jecxz
gs
jecxz
data16
cmp
rcl
hlt
retf
jle
addr16
call
sbb
hlt
iret
icebp
xor
retf
inc
lds
hlt
imul
sbb
iret
in
xor
add
aas
mul
inc
mov
mov
pop
inc
adc
ins
push
sbb
adc
popf
mov
mov
sub
inc
scas
sbb
(bad)
scas
add
mov
imul
(bad)
cmp
jecxz
inc
sub
hlt
and
clc
in
cmp
into
push
or
out
shl
xchg
pop
dec
inc
sub
inc
adc
dec
jbe
mov
jle
push
dec
sbb
sbb
sbb
jl
dec
(bad)
enter
ja
das
cwde
mov
and
test
jne
retf
cmp
lds
push
test
rcl
xor
jmp
jnp
add
je
cmp
and
mov
mov
inc
dec
xchg
fstp
neg
enter
jo
jns
push
inc
pop
aam
dec
in
jne
aad
adc
mov
push
inc
and
cwde
or
cmp
mov
(bad)
adc
mov
add
addr16
ins
sbb
push
cmp
cmp
mov
cdq
xor
pop
mov
loope
enter
out
ins
test
push
xchg
loope
imul
ins
pop
jl
sub
mov
test
cmp
ins
mov
and
ins
push
sbb
inc
jo
mov
mov
ss
cli
cmc
add
les
movs
dec
cmp
rdtsc
ss
rcr
pop
in
push
inc
daa
inc
out
push
or
adc
push
data16
js
inc
add
mov
adc
repnz
jp
adc
jns
jnp
fsubr
sub
sahf
inc
jge
(bad)
ja
(bad)
movs
cld
push
in
das
mov
mov
nop
imul
outs
add
or
dec
iret
lds
neg
imul
fwait
xchg
loope
rcl
inc
scas
ins
xchg
data16
imul
leave
mov
cmps
(bad)
int
stc
mov
lods
fwait
std
sbb
sti
jbe
shr
or
pop
leave
shl
push
sar
sti
into
data16
retf
mov
jne
fdivr
loope
inc
or
dec
inc
outs
jp
sbb
cmps
pop
mov
les
ins
jle
push
and
or
out
into
mov
pop
mov
mov
adc
enter
ja
jns
dec
cdq
stos
lahf
clc
ins
iret
test
or
enter
movs
sub
cli
stc
sub
mov
daa
jg
mov
fild
out
sbb
stc
loopne
not
jle
and
bound
cmp
mov
fadd
loopne
xacquire
cmps
test
test
jecxz
jmp
icebp
(bad)
int3
stos
out
xor
pushf
addr16
jns
xchg
push
outs
dec
(bad)
mov
stos
cmps
jmp
in
dec
mov
cmp
retf
cld
popf
add
(bad)
jge
inc
adc
cwde
xchg
push
and
xor
mov
dec
mov
add
fsubp
inc
jno
(bad)
rol
nop
jg
push
ret
retf
xchg
pop
(bad)
fcmovne
je
pop
add
sbb
mov
(bad)
xlat
clc
ror
or
jmp
add
je
mov
push
ror
cwde
mov
add
jle
dec
adc
bound
mov
mov
mov
ins
loopne
sar
and
mov
scas
ret
or
movs
das
ins
xor
cmp
ins
rcl
cmp
add
mov
lds
add
and
cmp
in
je
sub
push
sub
jge
out
fs
mov
jle
rep
and
pop
xor
mov
mov
and
or
retf
ficom
cmp
arpl
in
sub
data16
pop
neg
inc
out
jmp
mov
add
movs
adc
xor
test
addr16
push
and
fstp
and
cmps
rol
ss
repz
add
xor
mov
and
cmc
jg
rol
arpl
cmp
fnstcw
and
adc
jl
lock
pop
jo
(bad)
div
(bad)
mov
lea
aas
cmp
sub
movs
add
or
adc
sbb
pop
imul
fdivr
cmp
push
add
pop
jp
sub
(bad)
movs
push
ins
or
xchg
retf
jae
out
adc
rcr
jge
sub
sub
fwait
mov
jns
scas
outs
outs
sbb
or
adc
add
jmp
retf
fs
adc
jo
ja
mov
adc
inc
js
stos
(bad)
cmp
and
jmp
scas
inc
cmps
fisttp
xlat
sub
add
xor
(bad)
fld
(bad)
in
jmp
sub
sub
pop
idiv
xor
xchg
pop
mov
popa
adc
pop
push
xlat
nop
push
mov
mov
add
fist
retf
mov
adc
push
adc
je
mov
mov
xchg
test
dec
into
pop
xor
inc
mov
xchg
into
arpl
inc
mov
aad
cmc
repz
mov
fimul
imul
repz
fstp
aam
into
retf
pop
xchg
cs
test
xchg
adc
je
xlat
aad
cli
push
push
test
xchg
(bad)
pop
and
pop
jmp
push
pushf
movs
scas
aad
cli
mov
ds
inc
pop
mov
nop
cmp
dec
shl
push
cmp
pop
mov
imul
mov
xor
mov
loope
mov
add
(bad)
adc
loopne
cwde
sbb
xor
pusha
ins
xchg
stc
pop
hlt
dec
add
adc
adc
in
xchg
in
rol
sub
(bad)
cmp
sti
or
(bad)
retf
(bad)
imul
daa
cmp
rcl
lahf
sbb
or
pop
xor
mov
sub
cmp
fisub
sbb
mov
(bad)
xchg
mov
in
pop
shl
aad
pop
scas
jne
(bad)
call
test
push
std
outs
in
test
lock
aam
or
add
adc
lds
(bad)
cdq
mov
dec
xchg
sar
jge
mov
mov
cdq
push
jle
test
inc
imul
jns
xchg
mov
iret
mov
mov
repz
frndint
into
adc
fwait
inc
mov
in
jecxz
push
iret
adc
(bad)
xor
imul
mov
xchg
add
adc
sub
js
mul
bound
pop
adc
mov
push
in
imul
jle
dec
je
mov
sub
test
cld
sbb
sbb
dec
jmp
mov
mov
jno
jmp
mov
push
aam
inc
in
(bad)
scas
and
mov
push
cmc
je
gs
fs
cmp
cmp
repz
mov
stos
push
ret
or
call
outs
cmp
popa
jb
push
push
inc
mov
cmp
sbb
repz
enter
sahf
clc
(bad)
and
imul
lods
push
xor
xchg
sbb
push
dec
cmp
ret
push
inc
fwait
jl
push
sbb
test
popf
add
mov
int3
pop
jmp
fst
int
push
outs
pop
outs
xor
push
jb
push
daa
jmp
fild
push
pushf
ds
and
xchg
and
mov
mov
test
push
and
sub
xchg
jo
out
popa
cmp
movs
cld
sar
cmp
xchg
or
mov
jmp
inc
inc
mov
push
sbb
test
aas
xchg
add
push
(bad)
in
and
dec
sahf
loope
aaa
pop
stos
fsub
inc
fnstenv
movs
stos
scas
and
cmp
shr
cmp
nop
sar
sub
push
cli
jb
std
xchg
xor
nop
mov
inc
push
mov
push
inc
jle
test
(bad)
push
adc
or
cmp
fsubr
outs
cli
lods
popa
popf
xchg
or
and
mov
call
mov
add
pop
inc
jmp
inc
iret
mov
cmp
aam
dec
mov
push
xchg
ret
and
and
cli
(bad)
out
popfw
push
bound
push
(bad)
push
adc
shr
dec
ja
sbb
movs
mov
test
adc
sub
sbb
sub
push
out
call
jo
sub
loop
ins
test
loop
out
jnp
iret
add
neg
jb
pop
(bad)
push
push
sbb
outs
mov
fnsave
rcl
mov
mov
stc
leave
xchg
xchg
jb
xor
jmp
sub
fiadd
pop
push
and
shl
and
ss
cmp
and
fild
sti
test
push
loope
ror
loopne
leave
test
fist
out
std
gs
push
data16
dec
into
mov
daa
jp
das
ja
jl
jmp
jbe
adc
in
add
push
aad
sbb
xor
out
repz
shl
(bad)
test
mov
(bad)
test
aas
enter
adc
lods
out
xchg
pop
mov
sub
ja
mov
jl
cmp
push
clc
sbb
std
push
mov
daa
fs
cmp
or
ins
mov
repnz
addr16
sahf
or
or
mov
dec
sbb
xor
sub
jbe
aad
mov
cmp
pop
inc
jmp
xor
pop
pusha
(bad)
fwait
inc
fcomp
dec
adc
jo
mov
in
adc
bound
popa
pop
inc
rcr
mov
inc
mov
pushf
and
movs
cmps
imul
mov
xor
into
pop
dec
xchg
lahf
xchg
(bad)
pop
pop
js
xlat
mov
inc
hlt
mov
or
adc
pop
xor
adc
cdq
loope
xchg
cmc
pop
gs
mov
gs
fldlg2
ret
xchg
out
and
mov
xchg
iret
lods
add
inc
in
arpl
jmp
adc
add
shr
pop
sub
gs
ds
lea
cs
sbb
imul
xor
sub
and
icebp
xor
push
xor
mov
ftst
sahf
jbe
daa
fwait
ja
faddp
nop
inc
jl
aam
mov
or
jae
(bad)
out
sub
dec
push
je
dec
jg
or
(bad)
sub
push
test
jbe
lahf
jnp
sbb
cmp
inc
pushf
sbb
icebp
and
jge
rcr
and
mov
mov
sub
pop
nop
call
addr16
std
fnstcw
mov
sbb
jecxz
pushf
in
jecxz
sahf
mov
push
retf
jp
adc
outs
pop
call
imul
cli
mov
add
adc
and
test
add
ins
mov
call
mov
or
ss
dec
aam
shr
mov
in
sbb
mov
and
lock
mov
or
mov
jl
dec
jmp
push
adc
imul
push
icebp
call
add
(bad)
div
push
cli
repnz
xchg
pop
cwde
mov
out
aad
mov
popf
dec
adc
ror
xchg
imul
mov
loop
mov
mov
retf
jecxz
adc
cdq
retf
adc
xchg
sbb
jl
jns
jbe
mov
pop
adc
and
adc
mov
mov
cmp
pop
iret
clc
out
ret
xor
inc
retf
fldenv
inc
hlt
adc
and
inc
hlt
ret
mov
inc
push
jl
test
(bad)
xchg
lods
lea
push
in
test
in
dec
out
dec
xchg
sub
ins
ja
push
pushf
add
inc
pushf
cmps
mov
loopne
push
pusha
xor
xor
xchg
loop
jl
mov
call
push
jmp
dec
(bad)
sbb
push
pop
mov
push
push
fsubr
popa
je
mov
xor
out
mov
pop
or
ret
imul
jg
aaa
pop
inc
inc
mov
or
jno
sti
xchg
sbb
iret
or
out
std
inc
js
push
or
push
cmps
into
sbb
sahf
pop
mov
retf
xor
jbe
out
push
xor
into
pop
xor
in
je
mov
cmc
jl
fdivrp
push
test
outs
mov
into
inc
xchg
sahf
movs
std
js
rcr
cli
xor
dec
mov
loope
push
ds
mov
or
sub
sbb
cmc
dec
and
fstp
xchg
ret
push
pushf
jne
pop
mov
outs
pop
je
push
or
aam
sbb
mul
xchg
pushf
push
pinsrw
test
jg
shl
push
add
lds
mov
hlt
les
pop
mov
xlat
and
jb
push
shr
xchg
adc
jge
jne
jb
xor
adc
in
cmp
and
mov
into
nop
push
adc
rcr
fs
adc
icebp
xor
ins
jnp
push
stos
(bad)
ja
mov
dec
les
je
cmovbe
push
lock
test
pop
xchg
mov
inc
leave
scas
xchg
mov
xchg
pop
sbb
paddsw
add
test
data16
pop
add
jns
rcl
inc
lea
push
xor
dec
mov
mov
inc
inc
and
scas
out
repz
mov
retf
xchg
add
sbb
jmp
js
std
pop
std
aam
mov
push
arpl
xor
test
or
mov
sbb
ret
ret
or
outs
rcl
jg
mov
out
aas
sbb
fisubr
jb
pop
test
outs
je
sub
es
sbb
aaa
push
xor
aaa
dec
stos
mov
movs
pop
mov
sub
mov
mov
ja
fwait
cmp
es
xchg
fs
lea
mov
shr
dec
movs
ret
scas
loope
xchg
push
loope
lahf
mov
in
mov
cmp
aas
pushf
sbb
mov
jp
jg
ins
inc
or
loop
cdq
mov
jae
cmc
mov
iret
clc
imul
aam
scas
fiadd
jecxz
in
pop
sub
stos
mov
xor
mov
or
mov
xor
jnp
popa
xor
pop
(bad)
sbb
mov
stc
mov
out
add
stos
out
adc
jmp
ins
jmp
ret
mov
int
mov
pop
mov
add
out
ins
mov
jecxz
xchg
ja
inc
in
ins
and
xor
sub
sbb
jns
je
or
enter
nop
sbb
aam
jmp
push
not
jns
adc
xlat
cmp
or
loopne
push
dec
jo
pop
lock
ret
add
outs
or
pop
shl
xor
(bad)
jmp
and
pop
xor
(bad)
outs
stc
les
sub
sub
inc
dec
sbb
pop
push
push
inc
xor
xor
sub
in
cmp
xlat
pushf
stos
mov
sub
idiv
push
inc
xor
and
push
test
repz
jne
repnz
pop
push
jnp
(bad)
in
xlat
test
mov
jmp
or
cmp
cdq
jmp
sub
je
sar
mov
xor
pop
xor
xor
popf
(bad)
or
loop
pop
retf
pop
leave
add
mov
mov
xor
push
dec
mov
in
scas
call
and
rcl
outs
jo
dec
adc
ret
xchg
and
inc
lods
ret
aam
add
pop
jp
adc
fadd
or
inc
pusha
dec
xor
xchg
inc
outs
push
in
rcl
xchg
jb
cmp
pop
movs
xchg
sbb
repz
aam
mov
adc
jecxz
jge
fcmovb
hlt
cli
adc
mov
add
xor
push
jnp
sar
ins
test
xchg
jmp
out
adc
loopne
stc
xchg
(bad)
and
jle
pop
stos
jne
ret
in
push
xor
or
dec
xor
push
cmp
mov
pushf
mov
fld
jb
and
sbb
push
and
fbld
pop
movd
leave
jecxz
test
cmc
mov
jns
aam
ds
fiadd
arpl
mov
iret
dec
mov
test
add
inc
lds
(bad)
jbe
sub
ins
adc
push
pop
add
sbb
fucomi
inc
add
test
sub
and
mov
test
cmp
outs
outs
test
or
add
and
sti
aaa
sbb
sar
mov
scas
enter
push
jmp
mov
push
mov
pop
aam
in
movs
sub
and
cmp
xchg
fcmovnu
fld
jns
jns
nop
mov
(bad)
movs
sbb
sbb
retf
(bad)
in
lods
jmp
xchg
out
xor
fld
fwait
sbb
cdq
(bad)
cwde
shl
sub
dec
lods
popf
mov
dec
push
pop
or
add
cli
test
push
mov
fcomip
test
cwde
fadd
aaa
mov
lea
jp
pop
mov
lea
xchg
nop
add
hlt
lods
push
cld
pop
(bad)
add
xchg
sub
sub
in
rol
call
shl
sbb
ret
and
xchg
out
and
dec
and
int3
mov
fimul
xor
jmp
pusha
repnz
mov
scas
fistp
push
mov
call
setl
nop
leave
adc
int
jnp
cmps
popf
lock
mov
pop
into
fadd
fcomp
inc
lds
cmp
cmp
inc
jbe
jmp
rcl
inc
or
aas
scas
je
fdivr
data16
dec
and
sbb
add
repnz
cmp
mov
mov
sti
sbb
push
xor
fs
lahf
mov
cmp
(bad)
cmp
pop
int
cmps
cmp
ret
repz
int
dec
stos
arpl
rol
lock
ins
xlat
cmp
inc
inc
and
mov
pop
pop
sbb
pop
neg
out
pusha
js
cmp
scas
inc
test
push
imul
in
leave
(bad)
in
shr
inc
mov
push
das
and
mov
push
jno
cmp
xor
int
adc
les
cmc
int3
jbe
shl
inc
ss
mov
sub
loope
jnp
and
push
pop
(bad)
loop
call
mov
cdq
enter
(bad)
pop
fwait
inc
mov
lahf
xor
jno
rcr
pop
mov
(bad)
cdq
sahf
shl
sbb
sub
pop
ins
pop
int
xor
ret
fstp
pop
aam
sbb
data16
sbb
mov
adc
sbb
inc
dec
dec
or
push
jo
push
mov
(bad)
inc
mul
dec
cmp
into
pushf
dec
(bad)
jbe
xlat
cmp
mov
xlat
pop
jo
ja
cmp
scas
or
and
ins
retf
cmp
xchg
mov
dec
inc
add
sbb
jbe
inc
addr16
in
test
inc
mov
jnp
int3
leave
and
push
and
lahf
mov
jl
inc
jb
mov
sub
pop
cmp
scas
fwait
es
jmp
std
aam
das
or
test
std
test
sahf
(bad)
cmp
cmp
inc
jae
rep
aaa
adc
jb
int
mov
mov
fstp
sbb
xor
xchg
pop
jp
out
lea
and
push
rsm
idiv
mov
and
pmovmskb
shl
inc
retf
(bad)
out
les
fbstp
mov
retf
sahf
and
data16
sbb
call
loop
lods
mov
add
pusha
sub
mov
mov
mov
pop
jmp
scas
arpl
mov
push
push
daa
xchg
movs
push
and
out
sbb
push
sbb
call
mov
int
fist
mov
imul
xchg
popa
xor
les
nop
repz
scas
mov
out
lock
mov
hlt
jae
sahf
cs
(bad)
and
scas
sub
or
idiv
nop
and
(bad)
arpl
out
arpl
cmp
pusha
xchg
in
cdq
sar
push
rol
icebp
add
xor
addr16
repz
pop
lahf
or
int
xor
call
out
sub
inc
shl
or
sbb
xchg
leave
adc
rol
mov
inc
xchg
std
xor
mov
ret
cmps
cmp
jb
push
add
fstp
repnz
lods
mov
jp
jl
ds
push
sbb
jns
and
out
js
gs
sti
pop
pushf
pop
jmp
xchg
sub
jmp
sbb
add
inc
dec
jecxz
adc
stos
(bad)
in
js
jnp
repnz
or
jp
jmp
push
leave
sub
mov
add
shl
push
nop
(bad)
(bad)
(bad)
ds
jl
aaa
shr
push
outs
lea
leave
dec
(bad)
lea
repz
in
push
mov
sub
and
arpl
in
xor
pop
jno
cmc
pop
pushf
mov
pop
stos
aad
in
pop
inc
fcmovnu
jnp
dec
or
setns
(bad)
mov
mov
jg
int3
aas
jmp
leave
jmp
add
adc
jo
dec
or
mov
lock
pop
dec
fs
mov
ficomp
inc
dec
retf
fisttp
mov
cs
add
rol
add
jnp
inc
mov
pop
mov
push
imul
sbb
movs
test
and
push
mov
pop
ror
push
pop
mov
xor
mov
add
mov
jmp
aaa
pop
out
shl
push
add
int3
imul
jne
in
push
addr16
cmc
or
cmps
mov
or
adc
clc
fs
jns
ins
jbe
mov
outs
out
les
or
pop
hlt
shr
retf
jbe
and
mov
cmps
sub
lds
ret
sar
pop
aam
pop
loopne
mov
hlt
fnstsw
loopne
outs
sbb
inc
ins
mov
das
mov
ja
loop
sbb
mov
arpl
in
inc
fwait
cmp
pop
mov
add
mov
(bad)
lock
scas
ret
inc
cmp
mov
jp
in
jge
pop
lock
push
ror
inc
ins
sti
cmp
out
into
in
retf
fisttp
out
jns
sub
je
rcl
mov
mov
lock
lds
das
mov
stc
pusha
mov
ins
in
cmp
(bad)
(bad)
or
push
add
call
pop
mov
xchg
lahf
push
iret
int
mov
loope
enter
or
or
sub
sub
ss
xor
dec
pop
adc
xchg
repnz
pop
loope
mov
jo
loopne
out
add
out
out
jp
in
imul
cmc
test
in
push
cmp
cdq
fidiv
outs
jecxz
les
mov
cmc
push
out
inc
stos
mov
xor
idiv
loope
icebp
sbb
jp
aam
add
mov
nop
inc
(bad)
cmp
gs
das
dec
test
mov
jbe
xor
out
iret
test
dec
sub
fwait
int3
aas
movs
fst
popf
dec
sub
adc
inc
popf
repnz
mov
out
cld
push
cmp
xor
cld
and
xchg
push
xor
push
and
mov
jne
adc
cdq
aas
push
push
cwde
push
inc
sti
jno
or
arpl
push
xchg
xchg
xchg
jg
loopne
mov
jl
into
inc
pushf
mov
fldenv
jmp
test
sub
jb
repz
cwde
dec
cwde
hlt
inc
xor
in
cmp
movs
ja
fnclex
out
ret
adc
ss
mov
xlat
cmp
adc
adc
fcom
xchg
imul
pop
int3
add
push
shl
in
xchg
fbld
outs
jo
mov
and
cmp
rcr
dec
cmps
int3
push
test
sub
(bad)
mov
push
sar
retf
adc
aam
sbb
xchg
out
test
lds
movs
fist
ins
jae
int
fmul
adc
mov
inc
scas
bound
repnz
xor
add
shl
or
cmp
mov
push
(bad)
jg
push
nop
mov
xchg
repnz
ret
xor
inc
ja
adc
pop
adc
ins
shl
dec
sub
fmul
(bad)
sti
or
jb
or
mov
or
les
js
imul
xor
fst
lds
sub
xor
lahf
add
jecxz
cmp
jecxz
and
add
jnp
push
cmc
xor
or
and
dec
mov
call
std
call
ins
lods
inc
lods
dec
cwde
mov
or
inc
out
fcom
je
adc
xchg
jmp
cld
jne
rcl
add
sti
enter
outs
add
add
(bad)
sti
aad
repnz
adc
mov
test
sar
sbb
popf
gs
fidivr
sahf
je
pop
scas
mov
sbb
mov
out
sbb
adc
push
sub
aam
mov
sub
scas
adc
stos
pop
sub
add
(bad)
lea
lahf
push
cmps
push
and
mov
js
ror
bnd
popf
xor
fisub
iret
outs
sub
imul
outs
push
xchg
movs
pop
cmp
push
in
pop
ret
ss
add
add
cmp
mov
mov
and
pusha
(bad)
dec
retf
hlt
aad
xor
pop
push
jno
sub
xchg
out
in
mov
data16
call
xchg
mov
mov
shl
mov
mov
and
loopne
clc
sbb
dec
mov
in
cld
stc
or
and
push
push
and
xchg
test
push
adc
push
jle
xor
out
and
push
out
jg
mov
mov
xor
loope
or
xor
mov
xchg
inc
sbb
movups
mov
je
pop
retf
outs
mov
cmps
xchg
nop
test
(bad)
mov
fwait
push
or
shr
lahf
arpl
enter
adc
push
(bad)
xor
lods
outs
je
(bad)
lods
adc
icebp
add
out
pop
rol
adc
push
shl
in
std
mov
push
(bad)
data16
push
dec
xor
test
daa
sub
jae
pop
xor
ss
or
mov
pop
xor
popa
sub
xor
adc
dec
adc
mov
sbb
jno
call
mov
fstp
out
enter
arpl
in
in
sub
xor
ret
jecxz
cli
stos
retf
je
fidiv
add
ret
push
cmp
stc
lods
stos
into
mov
out
mov
cmps
mul
shl
retf
sub
xchg
ins
lahf
sub
(bad)
out
lods
pop
enter
adc
ds
shl
enter
sbb
inc
fs
rcr
push
aam
xor
shl
pop
aam
xchg
mov
lods
pop
rcr
adc
sub
loop
push
sbb
dec
or
jle
pusha
stos
mov
imul
repz
shr
arpl
fiadd
xchg
jns
inc
test
sub
in
shl
ins
mov
fwait
or
enter
sbb
mov
retf
imul
out
push
imul
enter
jp
inc
je
cmps
cli
mov
xlat
push
out
inc
pushf
scas
pop
mov
stc
outs
mov
nop
sahf
outs
test
movs
in
pusha
add
out
adc
ffree
or
add
jp
out
lods
icebp
adc
shr
mov
dec
int
pop
(bad)
pop
jb
fisubr
adc
fcomp
push
loop
fild
add
(bad)
mov
mov
or
sbb
ins
dec
test
enter
mov
xchg
mov
daa
lods
sub
enter
lods
dec
scas
imul
pop
xor
inc
retf
ret
xchg
sub
js
aad
dec
cmovl
(bad)
adc
cmps
adc
fsub
xor
xchg
(bad)
mov
scas
adc
pusha
xlat
rcr
dec
shr
mov
pop
inc
mov
sub
fucomp
out
gs
xchg
push
or
sahf
mov
repnz
dec
push
shl
adc
or
mov
add
in
jne
ins
shl
mov
mov
and
ror
enter
sti
dec
call
add
cmp
and
call
cli
cwde
sub
repnz
and
cmc
pop
enter
mov
xchg
pusha
and
xchg
push
push
lods
mov
cmps
jl
push
rol
mov
dec
lods
dec
(bad)
stos
ds
push
xchg
ins
mov
lods
ror
cmp
test
sub
jno
call
ins
jg
dec
in
jns
lods
out
push
mov
adc
daa
daa
outs
data16
pop
xchg
leave
mov
popf
lock
and
inc
push
mov
fnstenv
retf
out
ret
pusha
cmps
(bad)
pusha
int
aaa
cmc
xor
out
daa
cmp
fstp
mov
popf
rol
cmp
inc
or
outs
imul
jbe
jg
inc
lds
rcl
pop
add
rcl
cmps
jmp
sub
inc
ret
mov
cmps
mov
xor
jecxz
push
stos
das
push
icebp
hlt
jo
ins
mov
and
inc
push
fcmovu
cmp
arpl
das
sar
and
or
ja
inc
cs
shr
sbb
loope
lods
sub
call
out
adc
arpl
push
mov
push
adc
fisubr
sub
fidiv
jmp
push
adc
std
sub
hlt
enter
dec
inc
adc
inc
nop
inc
ds
sbb
les
add
xlat
shl
jnp
retf
jmp
add
movs
mov
loope
(bad)
je
xor
cmp
and
mov
adc
lds
stos
mov
push
push
shr
sbb
xchg
aaa
pop
xor
fldz
adc
fmul
mov
int3
idiv
pop
popf
jnp
jnp
and
popa
xor
or
cmp
or
xor
sbb
and
jecxz
jmp
push
call
ja
cmc
mov
loopne
and
cmp
mov
loope
mov
fisttp
mov
out
pushf
ins
jp
pusha
add
rcl
cmp
retf
pop
cpuid
in
ja
sub
js
xchg
jbe
xor
std
movs
dec
inc
aad
dec
pop
and
repnz
imul
jp
test
loope
movs
ds
data16
sbb
fs
sbb
cmp
fwait
and
xchg
iret
dec
pop
ds
xor
xor
mov
pop
stc
scas
dec
or
mov
shl
sbb
(bad)
int
outs
popa
xor
fdivr
sti
add
loop
retf
jnp
cli
jg
loopne
mov
or
sti
push
jae
in
dec
(bad)
aas
xchg
in
idiv
daa
stos
mov
jb
call
outs
pop
out
jge
push
(bad)
adc
mov
cmp
push
scas
rcl
ss
sahf
lods
add
pop
add
jle
jns
popf
and
adc
jecxz
neg
dec
pusha
and
dec
sbb
dec
fild
xchg
loopne
jg
mov
xor
pop
pushf
mov
jae
adc
js
repz
sbb
icebp
cmps
std
loopne
push
daa
adc
add
pop
inc
mov
cmp
xor
adc
popa
stos
adc
adc
ret
or
repnz
jl
push
fist
rcr
aam
stc
into
jmp
call
push
or
popf
test
jbe
clc
sahf
aad
imul
call
push
inc
ds
rcr
stos
inc
sub
cmp
rcr
sahf
out
sar
ds
and
mul
fs
div
pop
pusha
mov
shl
pushf
call
xor
pushf
jne
aad
int3
inc
push
(bad)
retf
jne
in
push
mov
push
mov
and
cwde
hlt
pop
and
dec
in
sub
das
das
inc
lea
push
out
push
pop
jmp
inc
jmp
fidiv
dec
push
adc
mov
or
or
cs
jp
fwait
or
mov
imul
sub
adc
lahf
call
xchg
shl
lods
shr
mov
cmp
xlat
xchg
and
ret
pushf
xchg
js
in
pop
or
inc
or
sar
and
push
mov
rcr
add
rcl
clc
dec
sahf
pusha
lods
sbb
push
mov
mov
outs
or
jg
ret
out
out
dec
fmulp
fs
div
test
in
popf
popa
cmc
inc
sub
stc
xchg
retf
mov
jge
adc
or
adc
dec
mov
ss
data16
cmps
jno
cmp
ret
and
lea
inc
mov
sub
fs
inc
retf
push
sar
sbb
dec
push
ds
and
and
pop
add
mov
sub
inc
popf
das
imul
ins
mov
or
sbb
adc
mov
clc
aam
leave
add
hlt
push
pushf
int
out
inc
xchg
loope
(bad)
stos
push
not
pop
gs
ss
push
ins
pop
pop
lea
test
inc
pushf
pop
add
xchg
pushf
xchg
mov
sbb
or
and
(bad)
mov
aam
push
jno
adc
pusha
add
lea
mov
or
in
ror
inc
add
push
inc
rcl
stc
rol
imul
movs
push
lahf
pop
stos
mov
cmc
call
xchg
cwde
fst
push
pusha
sbb
and
jns
int3
push
add
or
imul
movs
pop
pop
fimul
inc
and
jb
test
(bad)
ins
jb
add
xlat
imul
nop
lahf
addr16
popf
adc
mov
add
ins
add
retf
and
arpl
sbb
arpl
in
ror
shr
nop
and
push
cmps
xchg
sub
mov
fbstp
std
(bad)
push
mov
imul
mov
add
in
push
movs
or
repz
mov
dec
and
in
fstp
or
mov
mov
cmp
movd
cli
or
les
and
sbb
push
(bad)
retf
mov
mov
and
cmp
les
mov
mov
psubsw
loopne
push
xor
into
sub
ins
jecxz
cmp
movs
jno
adc
pop
test
inc
rcr
mov
sti
seto
xchg
fwait
in
add
leave
mov
mov
(bad)
push
or
cmp
psubq
sahf
mov
aam
mov
daa
arpl
test
not
ja
push
or
rol
jb
inc
mov
and
and
dec
pushf
pcmpeqw
or
fiadd
jp
dec
add
outs
retf
loopne
sub
ds
dec
sbb
mov
mov
repnz
and
fstp
sub
fldenv
enter
mov
add
shr
inc
js
sbb
arpl
pop
aam
out
retf
lahf
adc
imul
(bad)
jle
jg
test
lahf
gs
mov
sbb
fistp
ds
stc
cmc
push
cmp
push
dec
xchg
scas
stc
mov
loop
pushw
(bad)
stc
in
fistp
out
and
outs
gs
aad
add
push
add
add
fwait
shl
hlt
hlt
loop
sbb
cmp
fmul
inc
mov
jge
stos
movs
loop
mov
mov
dec
sbb
or
dec
je
push
cmps
mov
in
cmp
fcmove
push
and
jmp
ret
pop
repnz
pop
std
or
sub
retf
(bad)
je
lods
ror
cwde
inc
xor
hlt
jecxz
dec
addr16
lock
cmps
dec
into
aas
inc
adc
ret
mov
jns
or
sbb
xchg
icebp
sbb
xchg
dec
stos
and
cmp
mov
inc
mov
dec
mov
or
icebp
xchg
aad
or
jl
or
sub
or
repnz
or
mov
int
or
repz
dec
mov
test
(bad)
cdq
xor
xor
je
mov
das
dec
icebp
lahf
dec
popf
sahf
or
test
sub
dec
in
das
cmp
ins
push
stos
inc
xor
into
cmps
jecxz
xor
and
fld
sbb
dec
int3
cs
cmp
cmps
mov
sub
or
jns
popf
mov
ret
stc
xor
mov
sub
out
adc
lods
lods
ror
inc
xchg
ja
cwde
adc
into
mov
(bad)
scas
mov
(bad)
in
leave
xor
into
push
stos
jne
mov
into
jge
push
push
lea
(bad)
enter
popa
push
sub
loopne
dec
mov
or
jae
mov
or
popf
xchg
dec
(bad)
movs
test
inc
xor
inc
mov
cmp
sub
test
mov
add
out
dec
rol
das
adc
mov
mov
xchg
or
jmp
or
adc
mov
loop
xor
push
and
gs
es
push
adc
jbe
push
enter
mov
aad
call
mov
inc
pushf
mov
loope
cwde
xchg
cmp
popa
popf
nop
mov
adc
rol
mov
pop
outs
out
pop
push
cmc
sbb
out
stos
xor
sar
outs
lahf
or
xchg
xchg
outs
mov
jae
inc
ins
enter
mov
mov
test
sbb
push
inc
loope
enter
stc
add
(bad)
hlt
rcl
stos
push
rcr
arpl
adc
cmp
hlt
enter
mov
rcl
jae
leave
xchg
cmp
pop
lods
fs
mov
dec
inc
dec
pop
push
jns
icebp
mov
dec
fcmove
rcl
cmps
sahf
add
cmp
mov
jae
in
and
mov
inc
xchg
inc
push
cmp
stc
repz
out
mov
out
mov
test
aam
fs
(bad)
mov
mov
jle
retf
lds
mov
data16
inc
add
push
push
rcl
cmps
fild
(bad)
mov
mov
not
or
adc
sub
jo
fcmovu
jl
sbb
or
push
clc
dec
sub
cmp
out
out
mov
sbb
lods
jl
std
test
push
push
inc
jg
ret
or
xchg
pushf
jl
out
hlt
add
(bad)
sub
sbb
pop
or
inc
push
movs
or
inc
cmp
inc
jecxz
xor
int3
push
add
gs
sti
sbb
xchg
scas
jb
cmps
push
or
mov
or
jmp
mov
(bad)
dec
pop
not
arpl
push
gs
rol
in
dec
inc
call
(bad)
mov
ret
loopne
add
push
(bad)
push
and
shl
outs
in
jp
in
push
aad
sbb
loop
adc
bound
xor
and
dec
out
push
out
cmp
(bad)
jb
mov
push
push
add
xor
icebp
cmp
aas
gs
cmp
or
sbb
cli
int3
pop
and
test
stos
jl
repnz
sub
xchg
push
xchg
repz
inc
jnp
inc
nop
and
stos
pop
add
dec
pop
sub
dec
fwait
jge
push
cmp
jle
ins
aas
lock
dec
sub
or
sub
push
mov
scas
ret
gs
jns
fimul
neg
scas
mov
mov
gs
pop
inc
pop
gs
out
or
pop
ins
xchg
lds
inc
sub
xchg
(bad)
mov
adc
mov
enter
fmul
mov
das
mov
inc
push
rcl
jp
or
mov
lds
ja
pop
pop
stos
dec
cli
adc
adc
mov
xchg
fadd
test
xor
push
mov
not
(bad)
aam
cmps
shl
mov
sbb
push
js
mov
mov
je
(bad)
ror
xchg
push
popf
das
ins
pop
das
sar
sahf
fisubr
xlat
inc
stos
adc
loopne
mov
cmps
xchg
pop
dec
out
dec
hlt
jbe
cmps
push
mov
imul
fistp
adc
scas
idiv
cli
push
iret
and
mov
push
rcl
data16
js
mov
pop
lds
sbb
and
retf
jmp
ss
(bad)
push
mov
out
xchg
mov
jecxz
and
ss
adc
inc
mov
mov
out
das
mov
scas
xor
lods
add
(bad)
pusha
push
xchg
pop
ds
and
xchg
push
pop
ja
jge
pop
inc
ss
jp
rcr
xchg
retf
iret
outs
inc
and
push
xor
jbe
add
inc
mov
xchg
mov
sbb
sub
dec
cdq
push
pop
mov
mov
cmps
(bad)
mov
mov
jge
bnd
pop
or
mov
dec
repnz
(bad)
push
clc
(bad)
sbb
or
inc
xor
xor
retf
xlat
cld
retf
daa
mov
loopne
mov
and
sub
mov
cmc
ss
pop
div
rcr
je
movs
cmp
movs
cmp
aad
clc
cmp
or
mov
adc
pop
xchg
outs
loope
xchg
test
call
jno
cwde
and
addr16
popf
push
push
fsub
sub
pmulhuw
ficom
data16
jge
cmp
loopne
pop
ficomp
fisub
retf
cmp
xchg
ficom
sub
sub
cmps
cld
pop
mov
cmp
lea
add
mov
pop
dec
outs
out
popa
shr
leave
jmp
fcmovu
mov
sti
scas
push
leave
bound
and
pop
xchg
push
jp
xchg
enter
int
mov
(bad)
mov
mov
aad
in
jmp
movs
mov
arpl
jnp
push
mov
mov
adc
mov
inc
xor
imul
sbb
mov
mov
cmp
outs
pushf
sbb
xchg
test
dec
mov
or
out
fsubr
or
sbb
sub
push
imul
mov
xor
imul
pop
mov
pop
cmps
gs
aad
mov
or
(bad)
mov
jmp
jg
imul
(bad)
popa
add
mov
add
sub
mov
sub
aam
mov
jnp
bound
ret
(bad)
jmp
aad
retf
xrelease
and
retf
gs
into
inc
or
sbb
jae
or
fs
inc
lock
cmp
xor
adc
mov
ds
retf
(bad)
mov
xchg
pop
retf
(bad)
pop
hlt
call
lea
mov
xchg
sbb
scas
mov
mov
lea
iret
mov
inc
not
dec
push
aad
ret
and
and
xor
and
movs
mov
iret
data16
push
cmp
data16
test
scas
push
ins
lea
call
push
js
call
sbb
aad
aad
repz
push
jns
sbb
jne
inc
ins
hlt
pop
jnp
xchg
rol
rcl
dec
popa
or
cmp
mov
push
mov
fwait
pop
push
push
js
fcmovu
repz
in
add
shr
mov
adc
add
jb
sti
push
ret
add
rol
cmc
sbb
adc
cmp
loop
in
retf
cmp
shl
mov
hlt
mov
daa
pop
test
sub
pop
cdq
icebp
jo
add
cmp
pushw
mov
aaa
sti
out
imul
mov
inc
fs
pop
add
pop
push
sub
js
sub
test
mov
addr16
scas
inc
daa
into
outs
jmp
mov
lods
jecxz
stc
test
add
pop
out
xchg
cld
sti
sub
(bad)
sub
xor
es
xchg
pop
test
sbb
addr16
hlt
add
jns
xor
xor
aas
lods
dec
cmp
cmp
repnz
retf
ins
mov
popa
jne
mov
test
mov
pop
cmc
cmp
mov
rcl
cmp
mov
retf
push
mov
sti
pop
pop
cmp
pop
jp
push
int3
xor
mov
dec
fld
mov
jmp
push
or
fbld
pop
cmp
adc
mov
mov
mov
inc
scas
jb
jle
dec
pxor
ficomp
sbb
add
pop
call
inc
ja
fs
leave
frstor
adc
sti
jp
jo
in
dec
and
mov
fld
fsubr
mov
mov
jnp
popa
outs
ror
jns
loop
fsin
ins
sahf
jp
jb
or
repz
stos
stos
loopne
xchg
lds
jg
push
fdivr
aas
mov
sahf
jle
lds
cmp
xor
cs
daa
push
pop
loop
mov
mov
xchg
ja
mov
xchg
cs
adc
pop
adc
sti
scas
mov
dec
in
movs
push
jmp
popf
pop
shr
and
ret
jae
je
addr16
dec
dec
in
add
(bad)
pop
sti
outs
ret
mov
sub
pusha
test
jmp
movs
(bad)
adc
push
adc
enter
les
sbb
jg
or
mov
jno
(bad)
xor
mov
arpl
enter
(bad)
push
pop
jo
mov
arpl
xchg
xchg
dec
ror
loopne
loopne
call
gs
jp
cmc
aam
mov
jecxz
jae
test
adc
add
push
cwde
sub
int
add
cmp
dec
mov
(bad)
jnp
mov
adc
add
loope
dec
call
xor
imul
inc
xchg
sub
jbe
mov
fcomp
out
adc
push
xor
sti
jae
xor
adc
xchg
lahf
pop
cmp
xor
jmp
adc
mov
add
xlat
inc
mov
dec
test
pop
push
test
cmps
mov
repnz
test
sbb
in
retf
imul
jbe
inc
iret
sub
add
out
mov
xchg
and
scas
cwde
or
jo
xchg
fdivrp
sub
dec
je
ds
stc
ins
jo
jmp
das
or
xchg
sub
inc
out
clc
es
popf
pop
or
repz
xor
jmp
dec
pop
inc
pop
pop
popa
fidiv
aas
cmps
rcr
icebp
leave
xchg
and
les
xchg
pop
fidivr
mov
je
stc
xor
push
cmps
fsubr
mov
dec
int3
loop
mov
lods
pop
int
push
out
push
jno
enter
aam
icebp
jbe
out
jge
xor
cwde
adc
jmp
or
ret
shl
push
fnstsw
iret
push
retf
mov
add
aaa
jecxz
jl
pop
jb
std
dec
les
or
mov
ins
mov
pop
cdq
xchg
sub
shl
jb
fdivr
mov
les
pop
test
mov
lds
adc
push
sar
cld
xor
imul
pushf
push
jmp
leave
cwde
dec
stos
add
popf
jmp
test
jne
ret
out
(bad)
shl
cmps
fidivr
ja
imul
in
add
mov
xor
into
int
xor
in
mov
pop
xor
in
dec
int
lahf
popa
(bad)
cmp
mov
iret
pop
pop
mov
shr
test
jp
inc
mov
adc
sub
scas
inc
cmp
cwde
mov
mov
test
sahf
xchg
add
sbb
pop
clc
mov
(bad)
imul
jae
imul
loopne
mov
mov
push
push
adc
loopne
inc
pop
call
or
cmp
mov
cmps
dec
mov
into
push
ret
jl
(bad)
je
aas
inc
dec
jbe
in
jmp
imul
fwait
mov
in
and
xchg
pop
int3
std
repz
sub
or
clc
xchg
and
inc
(bad)
and
jle
jge
icebp
(bad)
aad
mov
mov
jmp
cmp
push
mov
pop
inc
sub
xchg
dec
mov
outs
dec
add
jbe
test
ret
add
xor
mov
bound
mov
movs
out
pop
push
cs
adc
xchg
iret
mov
mov
fcomp
sub
cmps
sub
add
shl
aaa
add
fldenv
popf
jmp
cmps
movs
ss
repz
mov
xor
stos
aam
xchg
sub
nop
cmc
xchg
lock
dec
retf
enter
inc
leave
push
nop
mov
mul
inc
scas
and
imul
(bad)
mov
movs
cwde
clc
std
outs
bound
dec
jmp
push
pop
mov
ss
sub
mov
add
cmp
cmp
sub
jmp
outs
cmp
push
cli
repz
mov
sub
jmp
push
imul
mov
cmp
es
outs
cdq
inc
jbe
ror
add
sbb
dec
add
jne
movs
or
add
int3
sbb
inc
(bad)
clc
inc
mov
repnz
inc
cvtdq2ps
mov
sub
jmp
push
jo
sar
add
inc
push
ins
xchg
sub
rol
jb
mov
push
push
daa
xor
adc
daa
fsubp
xor
add
jnp
jmp
enter
add
aad
retf
add
test
jb
sbb
into
adc
xor
mov
sub
div
icebp
xchg
aad
sbb
outs
sbb
sub
mov
and
adc
xchg
pop
loop
or
pop
xor
retf
call
test
leave
or
dec
in
(bad)
jne
mov
fisubr
test
adc
jp
out
pop
popf
aaa
mov
sub
mov
push
adc
xchg
jecxz
and
iret
(bad)
pop
or
addr16
retf
or
cmp
cwde
fcmovne
fsub
mov
bound
or
dec
push
add
jo
movs
movs
push
cmp
movs
repnz
scas
jmp
lea
mov
adc
adc
dec
push
inc
mov
push
aaa
aad
jmp
inc
xchg
daa
cmp
jnp
add
jg
sbb
xchg
out
fld
bound
mov
retf
mov
cmp
cmps
and
push
mov
aad
dec
ret
push
inc
inc
xlat
and
and
mov
xor
scas
inc
fild
mov
and
jmp
sub
mov
pop
call
mov
in
ror
sbb
ins
clc
dec
ins
enter
lahf
push
out
or
dec
or
iret
pop
pop
mov
repz
dec
xchg
add
cmp
jecxz
mov
test
mov
jl
fs
sub
push
pusha
test
(bad)
mov
jb
iret
add
and
ret
stos
clc
pop
fcom
xor
rol
mov
inc
rcr
leave
xor
test
dec
stc
in
push
mov
cmp
mov
popa
inc
sbb
or
rol
fdivr
je
in
cmp
or
xchg
test
xchg
ins
jl
shl
imul
jl
and
sbb
jmp
inc
adc
call
jne
into
popa
push
lahf
or
dec
inc
aad
add
dec
sahf
xchg
xchg
and
mov
mov
in
out
push
mov
pop
popa
das
xor
fld
sbb
cli
shl
mov
adc
jmp
sub
push
mov
inc
cmp
xchg
push
pushf
daa
shl
fadd
add
push
jb
jmp
and
into
into
cld
scas
push
xchg
scas
and
nop
xor
xor
repz
push
out
stos
sar
xor
push
sbb
imul
sub
inc
aam
sub
mov
jmp
xor
pop
or
call
std
sbb
cdq
add
cmp
push
dec
aaa
pusha
push
xor
mov
icebp
jge
pop
es
xor
and
pop
pop
push
jecxz
div
rcl
ja
push
fcomp
pop
push
or
and
jnp
mov
mov
jl
popa
push
pop
mov
add
inc
jmp
hlt
adc
inc
push
movs
outs
and
fs
(bad)
repnz
mov
loope
gs
cs
imul
addr16
shl
or
test
push
repnz
pop
int3
push
cdq
add
sahf
clc
dec
cmc
sbb
mov
cmp
je
outs
mov
and
adc
cld
mov
int3
mov
add
pop
mov
jne
mov
das
dec
pusha
jg
sti
dec
add
jae
push
pop
jne
fdiv
push
lahf
ins
inc
inc
lods
movs
fisttp
call
clc
(bad)
cli
cmp
repnz
(bad)
shr
cmp
mov
dec
adc
lahf
daa
jl
or
lds
jnp
dec
imul
mov
int3
pop
pushw
mov
xor
cmp
xor
xchg
dec
jmp
lods
inc
inc
imul
fimul
or
and
xchg
cmp
cld
ins
mov
mov
add
out
push
xchg
imul
jl
xor
cs
mov
push
mov
xchg
jbe
aas
adc
ss
xchg
loopne
shl
jmp
jne
popf
inc
cmp
repnz
cld
cmp
clc
(bad)
ret
outs
dec
mov
xchg
push
je
dec
xor
mov
in
jmp
mov
shl
sub
dec
fimul
aam
data16
sbb
sub
xchg
xor
mov
retf
pop
inc
idiv
inc
fwait
shr
or
std
or
fidiv
jno
icebp
mov
pop
call
(bad)
push
mov
rcl
mov
into
aad
mov
jg
push
repnz
or
adc
inc
test
push
sbb
call
lods
jbe
cmp
sub
leave
(bad)
xor
ds
sbb
jge
icebp
cmc
retf
lods
sahf
mov
pop
popf
iret
or
mov
aaa
or
out
cmp
sub
adc
inc
sbb
fsubr
push
add
leave
stc
ss
jb
pop
ret
(bad)
outs
movs
add
lock
mov
cmp
gs
or
dec
cmp
and
hlt
jmp
pop
jg
jns
xchg
(bad)
loop
movs
xchg
mov
inc
push
cmp
mov
shl
jge
xor
or
(bad)
pop
dec
jo
add
fsubp
cwde
adc
call
cmps
xchg
(bad)
stos
movs
jae
out
aam
jb
es
mov
sub
std
ss
jns
add
add
out
pop
out
pop
and
or
sub
adc
mov
cmps
les
dec
or
inc
daa
stc
cmp
shl
xor
adc
pop
rol
pushf
dec
dec
jnp
push
mov
call
and
loope
add
dec
pop
out
sub
shl
(bad)
dec
push
jne
popa
mov
outs
or
fdivr
push
push
retf
jl
aam
dec
add
aad
cmp
je
stos
push
sub
dec
and
sbb
sbb
inc
inc
js
and
js
ret
jmp
mov
ds
imul
ret
jmp
xor
adc
lock
or
jmp
pushf
int
shl
es
xor
xchg
add
bound
mov
mov
xor
pop
or
popf
cmp
dec
cli
arpl
and
mov
into
add
sbb
mov
mov
fidivr
mov
arpl
es
pusha
cwde
shl
push
jp
dec
dec
cmp
adc
add
gs
in
ins
adc
adc
adc
cli
arpl
add
mov
test
mov
test
popf
lea
cmp
in
mov
test
lods
(bad)
lods
and
push
pop
mov
mov
mov
cmc
test
popa
xchg
push
mov
in
push
scas
icebp
jmp
cmp
pop
push
xchg
dec
mov
dec
and
in
mov
pop
xchg
dec
shl
mov
sbb
test
push
mov
adc
mov
fisttp
dec
test
sahf
movs
cmps
cmc
jle
mov
adc
and
cmp
jbe
sar
sbb
mov
clc
jp
sbb
mov
loop
xchg
shl
daa
or
not
push
es
fst
ret
sub
retf
add
jo
mov
ret
and
repz
frstor
sbb
loopne
cmp
jo
test
sub
cwde
jne
adc
das
test
jmp
adc
mov
xchg
mov
or
popa
xor
(bad)
and
fstp
push
test
xchg
adc
shr
fcmovne
pop
add
adc
xchg
pop
push
ds
mov
shl
sub
or
rol
or
mov
jnp
dec
test
push
ficom
in
call
adc
aad
dec
cdq
rol
imul
inc
(bad)
pop
sub
pop
mov
or
mov
dec
(bad)
cmc
lahf
fcomip
and
add
xor
inc
mov
inc
iretw
pop
out
cmps
out
ins
add
sbb
jbe
adc
mov
hlt
xchg
add
popa
dec
ficom
adc
scas
stos
cli
adc
lock
std
data16
and
inc
fdiv
sub
ficomp
repz
sub
es
adc
daa
fsubr
test
test
ss
mov
cs
or
cld
and
lods
or
push
popf
in
sbb
aas
fwait
fwait
jg
jnp
jae
mov
(bad)
repnz
pop
xor
xchg
dec
jle
adc
dec
mov
mov
movs
cmp
aam
dec
bound
dec
jmp
les
enter
jno
cdq
loopne
cmp
xchg
cs
je
add
sub
(bad)
fsub
sub
jne
in
push
jae
xor
popf
pop
mov
sbb
mov
in
pop
scas
mov
add
rcr
pop
mov
mov
cdq
adc
xchg
hlt
mov
test
mov
repnz
sbb
ds
xor
mov
popa
pop
loop
jl
sbb
mov
or
cld
mov
(bad)
in
lods
push
inc
jp
and
(bad)
pusha
mov
sub
ret
xchg
xchg
pop
aas
dec
adc
push
cwde
cli
mov
popa
mov
sahf
sbb
test
test
push
(bad)
pop
fldcw
(bad)
jns
not
lock
gs
sbb
(bad)
out
sub
das
sbb
fsub
dec
fs
push
cmp
mov
and
mov
mov
dec
scas
outs
dec
mov
dec
enter
fadd
cmp
push
in
fucompp
or
cmp
dec
cmps
std
pop
inc
fdivr
dec
add
movs
shl
jae
(bad)
arpl
(bad)
and
or
aaa
or
xor
stos
(bad)
xor
ja
xchg
adc
ins
adc
stc
pushf
xchg
xchg
fucomp
push
sar
xor
iret
or
sahf
pop
jp
stc
mov
stc
nop
mov
cmp
cmp
mov
mov
adc
cmc
jne
outs
jns
dec
mov
mov
mov
in
test
mov
and
aas
cwde
test
xchg
push
push
daa
imul
iret
loope
hlt
inc
add
push
aad
mov
xor
cwde
sbb
mov
xlat
or
outs
inc
mov
xchg
in
ror
in
rcl
into
test
ins
(bad)
in
push
shr
mov
xchg
hlt
or
into
mov
out
or
repnz
push
std
mov
in
aam
lods
test
mov
in
js
rcl
bound
sub
je
cmps
dec
inc
adc
aas
bound
dec
xchg
pop
sbb
fadd
(bad)
mov
std
jmp
div
xchg
cmps
int
add
in
sub
and
cli
push
add
or
pop
sbb
add
out
mov
retfw
xchg
mov
inc
stos
xchg
sti
add
push
mov
mov
xor
out
cmp
lods
push
or
add
or
(bad)
or
fmul
sbb
cmps
test
and
cmp
inc
or
mov
fisubr
adc
xchg
(bad)
out
in
mov
arpl
dec
lock
push
js
jbe
mov
sbb
call
jg
lods
sub
mul
sub
xchg
or
or
mov
pop
int3
push
vpsrad
pop
gs
std
adc
bound
aam
rcl
mov
mov
mov
cmp
stc
mov
and
repnz
(bad)
or
mov
cmc
cmp
xor
mov
iret
out
mov
test
imul
(bad)
pop
out
sub
inc
add
sub
xchg
cld
mov
jno
pop
xchg
xor
int3
inc
mov
push
ds
xchg
int
pop
not
dec
cmps
jl
iret
ins
xchg
test
nop
jb
inc
mov
xchg
xor
push
jnp
test
pop
jg
push
or
pop
jmp
mov
fbstp
das
fnstenv
cwde
loope
jp
add
xor
pop
mov
jno
aas
outs
or
push
sbb
retf
stc
adc
lea
test
xor
js
push
mov
ds
xchg
ins
movs
shr
dec
inc
and
mov
cmp
xchg
sahf
jle
jo
bound
xchg
cmp
lock
add
in
push
pushf
jno
push
jnp
lock
lods
sbb
ins
sbb
(bad)
cld
imul
loope
xor
xchg
shl
or
pop
mov
push
pop
not
cmp
cmp
stos
or
movs
mov
push
and
mov
add
fimul
das
(bad)
call
xchg
retf
cdq
loopne
out
jnp
cmp
fwait
sub
cld
out
pop
ins
dec
imul
out
cmp
xchg
mov
loop
out
xchg
push
test
movs
lods
xor
fisubr
scas
div
aad
pop
push
inc
inc
mov
loope
add
adc
cmp
pushf
loope
mov
(bad)
or
push
jo
mov
jne
pop
jge
retf
loope
dec
stos
jnp
outs
cmps
or
pop
push
jmp
shl
mov
inc
dec
je
cdq
hlt
mov
lods
sub
sbb
sti
iret
ds
mov
dec
push
push
pop
jmp
pop
cs
in
mov
jb
icebp
sbb
movs
loop
iret
or
and
in
dec
in
push
jl
xor
jne
push
and
jle
cmp
lds
stos
test
mov
mov
into
and
movs
dec
sub
fsubr
(bad)
sbb
int3
enter
and
movs
jne
test
cwde
icebp
(bad)
and
push
add
(bad)
fcmovbe
add
rcl
mov
sbb
mov
jp
mov
int3
out
push
sar
sbb
mov
in
dec
in
and
test
mov
xchg
cwde
test
xor
aad
push
sub
hlt
pushf
lods
loopne
dec
fwait
jp
(bad)
xor
inc
out
ds
imul
push
call
cmp
adc
jno
sbb
cmp
(bad)
arpl
ror
and
inc
call
fbstp
das
out
movs
js
into
jb
xor
sub
ret
popf
test
xchg
cli
scas
xchg
push
cmp
add
xor
add
xlat
xor
mov
sbb
xchg
xchg
div
mov
adc
dec
fnstenv
test
enter
cli
push
inc
jae
ret
das
inc
push
mov
(bad)
movs
pop
sbb
mov
xchg
call
adc
lock
adc
cli
mov
xchg
popa
xchg
pop
xor
sbb
out
pusha
mov
mov
mov
aam
sbb
mov
dec
sar
mov
fisub
out
aaa
es
je
pop
pop
mov
stos
adc
mov
lock
loope
call
stos
dec
push
inc
mov
jecxz
pop
into
mov
cmc
mov
sbb
inc
mov
adc
sub
test
cmp
cmp
repz
jne
jge
add
cmp
cs
movhps
xchg
xor
pop
jecxz
mov
jns
mov
xor
sbb
cs
mov
push
and
xchg
or
(bad)
in
inc
mov
test
xchg
jno
adc
mov
dec
sbb
dec
outs
xlat
call
xor
and
js
sbb
mov
retf
adc
cmp
cmp
daa
aad
cmp
xchg
xor
cwde
xor
daa
push
xlat
je
add
jmp
pop
mov
fisubr
sbb
cwde
test
push
enter
out
sbb
mov
add
(bad)
ret
std
aaa
ret
inc
sahf
data16
retf
mov
mov
lods
jbe
mov
std
pop
(bad)
js
cmps
dec
add
fisub
neg
dec
(bad)
scas
mov
jmp
xchg
jecxz
mov
bts
sahf
add
pop
dec
sti
xor
test
pop
ins
(bad)
xlat
mov
dec
cli
xchg
das
out
ja
aas
neg
sub
mov
push
xchg
mov
stos
(bad)
int3
(bad)
fistp
cmp
cli
sbb
loopne
or
jns
aaa
je
jns
mov
cmp
mov
cli
inc
xchg
mov
or
mov
call
lds
jne
pop
cmps
pushf
retf
sub
arpl
mov
leave
push
push
dec
mov
cli
jno
mov
loop
push
pop
int
fldcw
call
push
cmc
push
leave
(bad)
sahf
sti
gs
dec
mov
pop
mov
in
cld
enter
sti
fidiv
sub
repz
xlat
xor
or
repnz
data16
sbb
pop
outs
push
add
sbb
(bad)
sbb
xchg
(bad)
call
mov
ds
xchg
inc
movs
dec
or
hlt
cmp
ret
arpl
mov
sbb
dec
scas
retf
or
dec
jne
fcomp
push
adc
xor
jp
cmps
pop
dec
fsub
jbe
xor
inc
sbb
loop
or
icebp
test
(bad)
int
loope
nop
fcom
or
in
sbb
adc
jb
popa
cmp
loop
sti
fisttp
inc
(bad)
shl
xlat
add
mov
xchg
(bad)
ins
cmp
int
and
and
test
mov
cld
out
pop
mov
sbb
jns
lea
adc
push
xchg
cmp
ins
stos
ja
lea
xor
(bad)
fs
mov
sbb
jmp
adc
mov
test
(bad)
(bad)
fwait
shl
add
movs
mov
fwait
es
aad
stos
leave
popf
repz
mov
std
not
push
pop
fld
cmps
mov
repz
test
xor
mov
xor
mov
into
fs
test
xchg
arpl
mov
movs
arpl
sbb
data16
dec
outs
sbb
bound
sub
xchg
sbb
adc
mov
loopne
xchg
lahf
and
push
idiv
pop
pop
nop
jl
mov
rcl
mov
dec
xchg
dec
ins
cmp
test
aas
dec
mov
xchg
call
test
mov
adc
imul
adc
pushaw
mov
or
pop
jbe
int
out
pop
bound
imul
retf
in
repz
pop
data16
jb
or
loope
movs
jno
clc
mul
test
pushf
sbb
pop
inc
and
dec
push
shl
xchg
std
icebp
adc
jle
int3
ss
in
mov
push
jge
jle
xchg
xchg
jmp
mov
jbe
cmp
daa
movs
rol
out
retf
cmp
mov
ds
sub
jl
jecxz
and
xchg
es
hlt
loopne
mov
lea
sub
in
test
mov
sub
and
mov
xor
icebp
mov
hlt
js
cmps
daa
inc
fs
ret
stc
outs
ds
dec
test
pop
or
inc
xor
or
or
mov
mov
push
popa
sub
sbb
pop
in
pop
jl
out
cmc
call
push
sti
cmp
cmp
shr
test
leave
call
adc
movs
cwde
sahf
mov
sbb
mov
arpl
and
popa
lods
cmps
ror
or
out
push
ret
retf
pop
pop
pusha
xchg
sub
push
fadd
xor
jns
push
out
iret
push
cmp
mov
mov
pop
mov
mov
(bad)
test
dec
cmp
pushf
sbb
fsubr
pop
fsincos
and
in
push
pushf
xchg
jg
jmp
imul
stos
xor
push
ins
jae
cmp
stos
adc
fld
aam
mov
dec
ror
push
xor
pop
xor
dec
and
pop
inc
dec
ret
mov
cmp
dec
mov
lahf
movs
add
mov
popf
jmp
or
inc
aaa
fsubr
loop
ror
mov
lea
mov
(bad)
shl
cmp
movs
loop
outs
dec
or
stos
xchg
out
pop
scas
sahf
adc
dec
cli
gs
push
int
xchg
and
pop
daa
frstor
ret
lods
aaa
out
push
mov
push
mov
xchg
add
movs
ret
aad
jno
push
es
xor
mov
add
dec
sbb
xor
int
jns
mov
pop
lahf
mov
fs
jg
push
cmp
das
xor
add
fidivr
jns
jne
(bad)
pop
aad
or
leave
add
add
mov
or
stc
imul
fwait
add
mov
fbstp
mov
outs
sbb
sahf
out
fdiv
mov
mov
jb
out
push
fsub
jbe
push
pushf
out
repnz
stc
loope
fs
sub
or
or
(bad)
imul
mov
jl
cmps
or
xchg
cmp
retf
(bad)
mov
fisub
(bad)
adc
jmp
pop
dec
push
and
mov
lds
jl
aad
fisubr
mov
mov
cmc
inc
xchg
cwde
jl
in
pop
or
push
xchg
jecxz
sti
stos
adc
leave
imul
arpl
lods
cmp
jo
popf
xor
sbb
lods
mov
xchg
and
sahf
pop
adc
push
outs
ret
out
pop
adc
mov
push
mov
cli
pop
pop
jmp
movs
popa
or
icebp
sub
test
pop
add
mov
pop
jnp
cdq
icebp
call
xlat
fwait
pop
sbb
push
outs
lods
xor
adc
and
pop
cwde
loopne
push
sub
push
mov
das
xor
add
xchg
arpl
fwait
push
ficomp
cwde
mov
pop
aaa
pop
call
movs
sub
sbb
test
fstp
xchg
dec
xor
fsubr
out
or
rcr
sub
or
xor
jle
adc
mov
xor
lds
xchg
xchg
mov
out
sbb
xor
lods
in
jne
daa
mov
loop
adc
nop
xor
imul
add
(bad)
xor
(bad)
in
jg
sti
and
int3
test
jno
adc
test
test
(bad)
iret
test
dec
cmps
fldenv
test
loop
mov
pop
jg
pop
push
jmp
jno
call
dec
cs
ss
cli
sbb
hlt
daa
inc
sbb
ja
pop
jnp
icebp
aam
sar
repz
test
mov
cmp
pop
mov
pop
stos
shr
push
out
in
mov
or
sub
stc
(bad)
jns
and
(bad)
jl
mov
movs
(bad)
adc
sbb
cmp
aas
stos
mov
mov
xchg
in
cmp
push
mov
or
inc
cmp
dec
jecxz
ja
icebp
jae
sbb
inc
cmp
or
inc
shl
pusha
cmp
jb
retf
les
mov
test
xlat
dec
call
int
gs
fs
mov
or
mov
jo
pushf
ja
cmp
mov
pop
push
xchg
sbb
(bad)
cmc
pop
xor
div
fwait
inc
pop
fstp
xor
mov
mov
outs
iret
xchg
pop
and
(bad)
and
pop
sbb
lahf
jne
pop
fxtract
inc
lahf
(bad)
cmps
or
and
push
(bad)
push
loop
out
pop
xchg
and
cld
dec
push
into
adc
pusha
in
xor
aad
or
sub
dec
push
ret
imul
xor
sti
lods
sar
mov
mov
xor
mov
sbb
stos
jge
pusha
bound
jnp
xor
out
rcr
in
and
dec
sti
push
into
adc
out
or
addr16
xchg
cld
inc
ret
aas
test
push
adc
add
mov
jmp
jecxz
inc
cwde
cmp
rcr
sahf
fadd
cmps
imul
mov
adc
cld
aas
inc
cmp
sbb
xlat
cld
jp
cmp
push
in
movs
test
stos
jno
pop
xchg
adc
int3
add
retf
mov
std
pushf
sbb
in
sub
mov
shl
sub
daa
lock
cmc
mov
xchg
pop
pop
out
xchg
in
mov
int
ds
push
repnz
mov
sbb
(bad)
push
je
les
imul
test
or
divps
neg
fs
xchg
add
push
sbb
and
rcr
xor
sar
popa
and
hlt
push
pop
jp
imul
ins
je
add
or
push
push
dec
retf
jo
leave
aas
inc
add
test
(bad)
fist
pop
or
cdq
sbb
jmp
push
gs
inc
xchg
mov
adc
mov
ja
stc
outs
aam
bound
je
clc
outs
daa
ds
std
lahf
mov
or
mov
cmp
and
jno
xchg
lea
fidiv
hlt
or
push
push
in
daa
loopne
xor
dec
inc
xor
jge
shl
aas
jl
cmp
scas
or
test
(bad)
sar
call
jnp
xchg
mov
mov
dec
pop
inc
inc
int
inc
iret
mov
daa
pop
adc
gs
pop
(bad)
jns
dec
cmc
jge
enter
nop
inc
jmp
cli
xor
dec
sbb
outs
daa
xchg
je
sbb
jb
sub
and
fs
jne
mov
xor
in
lahf
js
xlat
push
or
in
cmp
(bad)
or
pop
fdivr
das
dec
aad
sbb
adc
les
dec
popf
jecxz
pop
ins
scas
push
cmps
jecxz
movs
mov
es
ins
mov
jne
sub
in
cld
sub
xor
jl
lock
bnd
addr16
inc
imul
test
lock
jns
jecxz
call
pop
and
and
enter
sbb
(bad)
push
dec
in
or
mov
aad
xchg
mov
xchg
dec
loopne
rcr
ja
scas
or
cs
xlat
mov
(bad)
sub
pushf
push
fidiv
mov
mov
nop
in
das
xchg
nop
inc
ret
dec
ss
and
scas
sahf
enter
repz
jb
cwde
iret
xor
mov
outs
lock
inc
loope
jmp
mov
pop
shl
fimul
stos
pop
xchg
jmp
sub
call
shl
aad
addr16
dec
popa
int3
in
lahf
(bad)
in
mov
(bad)
lods
pop
scas
dec
push
scas
jbe
enter
mov
xchg
or
pusha
xchg
and
push
jl
ins
je
xor
add
out
xchg
dec
ins
mov
aam
jbe
xor
jae
cmp
sub
aam
retf
sti
add
lods
lods
sub
int3
adc
dec
pop
ret
inc
pop
mov
scas
outs
adc
ret
mov
call
sub
push
jb
dec
stos
mov
sahf
movaps
nop
pop
imul
sub
mov
cmp
loopne
dec
add
pop
jg
das
xor
sbb
(bad)
push
out
pop
fnstcw
call
cmp
rep
lods
fst
pop
in
sahf
mov
adc
stos
jge
std
into
stos
sub
cmp
jno
retf
mov
xchg
push
and
xor
mov
test
lahf
dec
add
push
push
mov
cmps
xchg
mov
ins
jle
push
sub
push
movs
cwde
xchg
(bad)
fwait
pop
data16
adc
mov
or
aam
adc
and
inc
inc
je
fs
sub
mov
div
call
gs
out
fisubr
stos
push
sbb
dec
dec
or
leave
ficomp
aam
xor
leave
push
outs
pop
int3
ror
or
sub
sbb
xor
pop
repz
cmp
popa
retf
call
repnz
rcr
out
(bad)
loopne
loopne
sub
xlat
sub
inc
cdq
shl
mov
sbb
ss
daa
aam
lds
pop
sub
fist
adc
mov
fist
gs
(bad)
dec
cmp
dec
mov
or
mov
ja
mov
jmp
push
cmp
inc
hlt
jnp
fsub
xchg
pop
es
mov
mov
arpl
dec
in
or
add
xchg
stos
pop
inc
int
mov
ja
les
jb
xchg
mov
xchg
icebp
adc
mov
mov
jle
xchg
cwde
fist
shl
push
cmp
test
xchg
gs
push
sub
or
pop
jle
adc
mov
add
xchg
sbb
mov
mov
imul
neg
sbb
adc
movs
movs
loope
sub
outs
mov
sti
mov
pop
hlt
enter
scas
add
inc
lea
cmps
push
or
sbb
cmp
pop
dec
cdq
mov
jno
pop
dec
test
push
jno
push
push
rol
xchg
sbb
adc
cmp
cmp
xlat
sbb
stos
lods
cmp
ss
and
inc
fistp
xor
aad
push
les
mov
mov
add
or
fiadd
out
(bad)
fnstcw
or
mov
cmp
mov
jmp
fs
mov
dec
js
gs
jmp
mov
enter
in
(bad)
mov
imul
stc
sub
bound
fidiv
add
std
outs
cld
ja
cmp
out
xor
jle
stc
xor
pop
shl
or
sbb
aas
inc
mov
mov
aam
dec
movs
jb
mov
mov
mov
add
and
imul
and
(bad)
jmp
rcr
and
inc
and
pushf
iret
test
mov
imul
aaa
cmp
repnz
cmp
retf
mov
mov
jle
(bad)
in
xor
jle
int3
xchg
mov
jno
pop
mov
sub
fdivr
mov
and
into
pcmpeqb
sbb
aam
mov
mov
add
sub
stc
ins
jmp
stc
pushf
lock
sub
(bad)
stc
pop
jge
mov
inc
push
mov
xchg
cmps
xchg
js
mov
ret
scas
dec
fisubr
leave
push
add
in
iret
mov
gs
mov
loopne
fimul
dec
add
mov
or
out
(bad)
loope
dec
(bad)
mov
retf
out
in
aas
into
dec
test
les
mov
call
sub
mov
and
jp
ins
shr
adc
pop
inc
cmc
pop
adc
inc
sbb
bound
sub
cmp
outs
push
and
xor
mov
cwde
lods
pop
mov
lods
and
fild
cmc
jnp
shl
push
or
sar
jp
lock
movs
int
xor
retf
dec
(bad)
pop
pop
leave
push
push
or
test
add
cmps
jmp
test
add
mov
sub
test
xchg
test
mov
mov
sub
outs
outs
fnstsw
daa
inc
jnp
js
movs
in
push
enter
pop
imul
pop
sbb
mov
jne
cmp
inc
mov
pop
mul
ret
test
mov
push
int
ja
cmp
int
sahf
fist
jns
call
in
mov
lods
adc
mov
cld
mov
not
shr
or
xor
dec
fdiv
movs
rol
or
stos
jns
sub
cmp
ds
stos
pusha
leave
push
(bad)
(bad)
mov
dec
xor
fnstsw
cmp
cmp
jle
pop
ret
push
das
popf
test
adc
movs
bound
xchg
push
rol
push
mov
jne
les
or
jbe
or
or
jmp
cmp
sub
mov
cld
pop
adc
sar
xor
mov
dec
jge
test
mov
sub
ret
lods
pop
repnz
fwait
or
ins
dec
dec
pop
push
cmp
sub
xchg
pusha
aaa
int3
outs
ss
jge
stos
(bad)
neg
out
dec
pop
shl
pop
xor
ja
int3
mov
xor
jbe
xchg
cmp
cmp
cmps
mov
in
push
mov
aas
inc
jge
xor
cmp
inc
gs
add
into
lods
idiv
pop
or
fcomip
pop
fld
mov
cs
mov
xor
(bad)
or
dec
js
push
stos
xor
adc
out
xchg
in
or
jb
sbb
xchg
test
xchg
inc
lock
inc
add
mov
and
cdq
cdq
adc
adc
pop
call
push
rcr
sbb
out
or
xor
push
xor
dec
fs
or
inc
sub
inc
popf
jmp
jb
and
inc
inc
imul
jnp
out
pushf
mov
loopne
cli
fdiv
loop
pop
in
repz
data16
dec
dec
iret
mov
xchg
mov
clc
jle
sbb
inc
or
sub
(bad)
ds
ds
cmp
add
loope
les
fidivr
inc
inc
sub
adc
call
arpl
xor
adc
mov
push
dec
sub
mov
jbe
cwde
jl
xchg
xor
clc
mov
retf
ss
inc
cmp
xchg
mov
in
lods
ja
push
jb
inc
outs
sbb
popf
in
aam
nop
call
mov
sti
cli
mov
js
imul
push
inc
dec
jne
loop
xor
test
cdq
adc
mov
(bad)
pusha
add
inc
cmp
retf
lds
mov
push
js
iret
addr16
(bad)
adc
daa
xchg
pop
jae
mov
xor
dec
jp
arpl
icebp
fst
sbb
test
xor
imul
fisubr
clc
xor
(bad)
mov
jmp
sbb
out
ret
ret
loopne
adc
stc
and
mov
cwde
sbb
xor
fbld
lahf
ror
ja
pop
jne
mov
das
jb
stos
mov
xchg
jmpw
out
test
movs
mov
inc
jmp
and
push
inc
sub
movs
adc
mov
lock
in
xlat
dec
add
add
gs
cmp
lea
mov
adc
mov
addr16
sbb
sub
data16
out
lahf
repz
inc
lahf
add
mov
loop
paddd
out
add
push
and
jnp
ror
xchg
repz
ror
iret
ins
xchg
test
scas
and
push
scas
stos
enter
push
xchg
mov
pop
neg
add
fcos
dec
sbb
lahf
mov
dec
out
push
xchg
loop
out
cmp
cwde
stos
mov
fs
(bad)
hlt
inc
test
mov
and
cmps
xchg
test
xchg
cmp
fistp
mov
jmp
xor
sti
in
gs
in
inc
push
or
dec
(bad)
aad
pop
lahf
dec
mov
fdivr
les
test
arpl
push
(bad)
fcomi
and
mov
or
sub
mov
rol
pop
mov
or
cmps
test
add
jno
mov
sbb
in
clc
movs
rdmsr
push
popf
adc
adc
icebp
or
jae
push
mov
stc
push
fiadd
inc
xchg
pop
and
xchg
and
and
pop
xor
cld
loopne
push
xchg
and
out
int
retf
stos
int
xor
fistp
jns
std
std
jp
(bad)
mov
add
adc
dec
sub
stos
mov
push
nop
and
popa
sbb
mov
and
mov
addr16
pop
loope
mov
imul
ret
xor
mov
cmps
repnz
ror
rol
or
mov
xchg
mov
pmullw
frstor
test
and
cmp
mov
test
push
fidivr
mov
add
mov
or
jmp
or
adc
mov
push
jbe
repz
or
push
(bad)
push
adc
cmp
std
lock
inc
sub
jp
test
xor
adc
shl
jle
(bad)
push
xchg
pslld
bound
or
push
imul
jp
xchg
aam
gs
or
ret
mov
lea
mov
push
mov
les
sbb
shl
xor
cmp
(bad)
outs
pusha
jb
fld
adc
iret
mov
or
jne
mov
ins
pop
cmp
push
xchg
cwde
cmp
cli
or
retf
movs
xchg
push
retf
or
pop
mov
jp
daa
add
add
jecxz
pushf
adc
sub
jnp
inc
sub
dec
jmp
mov
repnz
xor
dec
retf
rol
jmp
mov
in
inc
mov
lods
repz
fisub
push
cmp
add
and
inc
add
ss
cmp
fwait
lahf
out
fdiv
mov
lock
adc
int
dec
stc
jmp
call
aaa
lea
dec
or
imul
cmp
aaa
and
cmp
mov
das
push
lahf
rol
in
outs
bound
stos
loop
push
movs
ret
jl
icebp
sub
xor
jb
add
cmp
test
xchg
retf
dec
cmp
mov
sahf
dec
mov
loope
arpl
cmp
sbb
cwde
mov
jmp
pop
push
shr
cwde
addr16
int3
adc
js
adc
inc
inc
xchg
mov
lahf
fcmovne
icebp
pop
pop
mov
add
repnz
rcr
mov
mov
mov
(bad)
sahf
popa
mov
push
jmp
cmp
outs
sbb
nop
rcr
cmc
repz
cld
mov
dec
movs
sub
sbb
test
xlat
sub
loop
pop
dec
cmp
mov
mov
in
lea
push
jbe
push
sahf
cmp
sbb
dec
mov
addr16
dec
bound
mov
push
dec
imul
sbb
int
call
fimul
sub
cmps
jmp
retf
sbb
add
inc
jne
les
je
cmp
jnp
cmps
ss
or
nop
icebp
add
inc
mov
lea
jg
jno
movs
arpl
test
sub
xchg
adc
mov
jb
inc
pushf
mov
mov
movs
aad
push
push
pop
push
inc
outs
mov
mov
das
sti
xor
sbb
fldcw
add
mov
out
retf
mov
sbb
(bad)
shl
add
addr16
test
daa
in
jbe
mov
pop
adc
mov
mov
and
jmp
sbb
mov
cmps
stos
in
lea
sti
repz
sub
dec
test
pushf
jnp
in
test
vmovaps
mov
xor
sbb
scas
sar
mov
mov
lds
xlat
mov
push
mov
hlt
daa
sbb
repz
into
mov
imul
inc
xchg
push
aam
cs
outs
ret
test
ret
sbb
push
dec
cmp
pop
jg
test
xor
daa
push
pop
ror
aam
out
jg
mov
shl
xchg
cld
scas
test
adc
or
or
mov
popa
jle
push
push
xor
shl
outs
retfw
push
add
shl
mov
fisub
cmp
test
(bad)
(bad)
mov
mov
iret
mov
adc
test
xor
dec
xchg
jb
js
shl
call
bound
sub
stos
cli
cld
mov
xchg
aaa
cwde
xchg
jae
jecxz
scas
dec
repnz
dec
jbe
and
sub
xor
int3
ins
adc
mov
xchg
je
fs
fs
adc
movzx
pop
mov
test
mov
mov
xor
lahf
and
jle
inc
test
mov
cs
sbb
clc
popa
test
cmp
mov
add
data16
mov
mov
mov
pop
adc
nop
sub
shl
test
out
jmp
sub
ss
inc
push
shr
clc
sub
mov
and
and
sbb
std
imul
repz
cmps
pop
imul
push
pop
sub
leave
retf
cld
repnz
dec
ja
sahf
in
xchg
adc
fisttp
push
xchg
out
and
or
xchg
mov
das
(bad)
and
push
pop
cwde
cmp
dec
les
xchg
pop
adc
arpl
jmp
xchg
repz
push
push
cmp
cmc
aaa
add
jecxz
mov
or
cmp
and
dec
jge
and
repnz
and
mov
clc
(bad)
mov
retf
shl
jbe
in
fidiv
repnz
out
adc
ss
bound
(bad)
jb
popa
loope
push
fiadd
shl
sub
mov
scas
(bad)
mov
dec
retf
adc
(bad)
mov
adc
push
(bad)
fnstenv
cmp
lods
inc
aas
es
mov
mov
and
cs
ja
and
xor
and
sub
fld
pop
pop
int
retf
jb
fstp
push
imul
(bad)
xor
in
ins
(bad)
add
jbe
imul
dec
cwde
pop
xchg
xchg
repz
shr
inc
in
sar
int
xchg
sbb
test
sbb
inc
cmp
xor
imul
sub
int
stc
test
fldenv
mov
mov
xchg
and
sub
fst
popa
xlat
xor
inc
push
xchg
jb
pusha
les
jmp
cmp
popf
(bad)
jle
push
es
shl
leave
inc
or
retf
xchg
js
or
cld
inc
mov
jb
fwait
movsx
dec
(bad)
movs
in
pop
repz
jmp
movs
lahf
mov
ins
push
clc
cs
sti
xor
je
outs
jecxz
out
pop
leave
mov
push
xlat
inc
test
and
ret
popa
xor
jmp
mov
mov
jmp
push
mov
push
fcom
inc
push
std
cmp
xlat
setle
inc
call
cvtps2pd
fimul
mov
cmps
xor
call
sar
test
xor
xor
scas
jecxz
push
jnp
push
sbb
or
test
mov
or
fistp
xlat
call
frstor
movs
and
xor
ret
sahf
in
sahf
aad
and
out
in
fldcw
ja
push
dec
in
aas
jns
frstor
std
mov
add
cmp
xor
mov
aas
and
sti
xor
in
jbe
lock
pop
cmp
add
ja
lahf
dec
jmp
cmp
mov
push
and
dec
xchg
stc
or
out
push
in
out
out
popf
shr
or
inc
mov
cmp
emms
adc
and
fcmovne
push
fbld
dec
add
inc
xchg
rol
out
std
jae
dec
xchg
cmps
fdivr
ins
sub
aas
jp
inc
fstp
lahf
inc
jb
dec
mov
pop
jne
retf
push
in
fistp
(bad)
jl
pop
sbb
xchg
ror
xchg
adc
jbe
pop
or
ss
cmp
or
mov
cmp
pop
cmp
iret
lahf
push
jge
mov
mov
not
push
cmc
xor
stos
pop
inc
mov
mov
fnstcw
xlat
jle
enter
ret
jecxz
xchg
dec
adc
out
inc
xor
fst
loope
pop
add
push
sar
mov
fld
xchg
adc
cmps
out
sbb
jmp
dec
mov
and
push
jg
pop
sub
cmp
or
sbb
outs
xor
xor
vdivsd
sbb
ror
inc
push
nop
push
test
inc
pop
aad
push
sub
jl
xchg
aas
retf
iret
adc
push
retf
push
mov
(bad)
xor
xchg
shl
sub
lahf
pop
mov
test
jp
mov
lea
push
shl
repz
pop
jns
pop
sbb
mov
shr
dec
loopne
dec
and
ret
fcmovb
jmp
je
cmp
cmps
aas
arpl
mov
cli
imul
sar
push
mov
fs
push
and
sub
mov
(bad)
mov
xor
or
xchg
les
push
int
cmc
xchg
ret
sbb
rol
lods
sti
pop
mov
or
pop
xor
push
xchg
push
arpl
jecxz
in
inc
sar
sbb
xor
mov
adc
pop
cmp
loop
inc
(bad)
mov
cdq
movs
adc
shl
xchg
aaa
ds
(bad)
adc
repz
sub
enter
cs
dec
rcl
stc
ja
adc
fsub
lds
jbe
aad
mov
mov
sbb
scas
mov
das
jns
cli
pusha
push
mov
in
pop
xchg
out
xor
cmp
das
xor
dec
xlat
mov
or
push
xchg
shl
je
inc
fs
ins
adc
out
imul
or
in
stos
mov
shr
mov
xchg
jmp
std
scas
or
cdq
mov
mov
ins
hlt
jno
pop
cmps
pop
sub
xchg
repnz
push
sub
pop
rol
mov
adc
test
pop
lods
dec
sbb
aam
push
outs
outs
fwait
pop
jmp
lahf
or
std
fidiv
inc
lock
add
pop
scas
pop
mov
pop
inc
mov
fild
sbb
sbb
sbb
fdiv
lea
das
mov
out
jge
jbe
outs
xor
(bad)
iret
jge
enter
pop
inc
jl
and
mov
mov
out
adc
lods
mov
push
outs
sub
ss
loopne
xor
arpl
xchg
int
jg
jp
sub
xchg
pop
popf
adc
rcl
mov
out
and
fsubr
ror
loope
(bad)
ins
pop
mov
hlt
out
xor
jecxz
clc
cmp
mov
hlt
gs
or
inc
mov
icebp
je
es
rol
fadd
shl
outs
fild
jg
ins
pop
jnp
bound
or
cwde
call
(bad)
sbb
pop
addr16
sbb
sub
aaa
jmp
fucom
sub
mov
dec
loop
(bad)
cld
popf
fldcw
lds
sbb
sbb
loopne
scas
(bad)
repz
jne
pusha
or
push
push
rcl
push
cli
stc
rol
cs
sbb
loop
sti
out
cld
xchg
push
call
not
push
out
sub
mov
add
inc
adc
test
ret
icebp
daa
repnz
or
xor
cmps
fwait
add
fld
imul
or
pop
push
std
mov
and
pop
dec
xor
dec
mov
and
scas
fldcw
dec
imul
cmps
or
or
(bad)
jmp
(bad)
push
cmps
push
fadd
loopne
xchg
mov
sub
in
xchg
pop
out
inc
inc
sub
(bad)
xlat
lock
sbb
out
or
ret
jbe
lock
fadd
and
cmps
adc
dec
inc
xor
aad
add
or
xlat
shr
and
xchg
sar
push
psubusb
push
in
into
push
jp
mov
push
cdq
pop
das
jle
xor
xchg
xor
out
rol
push
and
xor
lock
(bad)
dec
aaa
cmp
fucomp
scas
and
sbb
rcr
jne
mov
sbb
enter
sub
sub
fcom
jne
das
sub
xor
inc
sub
movs
push
mov
and
ret
push
cmps
mov
js
cmps
inc
data16
xchg
cmp
cwde
aam
mov
shr
dec
lea
je
pop
mov
xlat
movs
jmp
pop
fisttp
jl
in
stos
jne
pop
mov
xchg
mov
jecxz
and
xor
mov
jge
sbb
sahf
pop
and
mov
xchg
lods
push
pop
loop
fbld
sub
scas
fisttp
xor
and
adc
cmp
int3
lods
sbb
dec
ja
leave
mov
test
cs
cs
push
clc
and
mov
jbe
pop
or
jne
mov
add
repz
xor
cmp
xlat
mov
mov
sub
popa
mov
inc
ret
aam
movups
sahf
push
cmp
inc
jmp
mov
(bad)
jbe
xor
icebp
sub
dec
and
into
xchg
(bad)
and
and
mov
pop
scas
sti
mov
sbb
or
in
int
leave
and
dec
cwde
(bad)
jo
(bad)
(bad)
pop
sub
stos
out
pop
cmp
(bad)
push
ss
and
xchg
sti
in
push
sar
dec
nop
cmp
push
(bad)
stos
lods
mov
inc
jmp
lods
jmp
stos
pop
mov
mov
aad
sub
pop
xchg
push
xor
jns
test
bound
aas
aam
in
mov
ins
test
cmc
inc
dec
or
jns
jns
xchg
cli
pmulhuw
aam
call
jp
push
mov
sub
inc
jmp
sub
call
push
and
sbb
lods
(bad)
in
repnz
push
jmp
test
mov
movs
ins
mov
loopne
push
ja
aas
mov
mov
adc
mov
pop
mov
inc
scas
outs
cmps
out
sub
stos
inc
jmp
mov
in
cmps
lods
aas
mov
ret
mov
movs
sub
pop
mov
scas
clc
sub
das
sti
adc
loop
outs
fs
mov
call
lds
rcl
push
or
push
inc
lds
adc
mov
ja
lods
inc
outs
adc
mov
out
add
sahf
pop
push
mov
cwde
fcomp
pop
js
(bad)
xor
xor
and
sub
inc
and
inc
es
leave
fwait
aas
jge
dec
aaa
push
into
xchg
iret
into
aas
adc
ja
or
inc
test
rcl
jno
jg
or
dec
das
mov
fld
sub
inc
cmp
push
bound
xor
cdq
mov
cmp
or
or
sahf
mov
inc
push
push
push
inc
inc
fsubr
fucom
pop
mov
cmps
xchg
data16
push
adc
pop
push
call
xchg
mov
push
push
or
fisub
mov
xlat
mov
mov
jge
clc
(bad)
mov
cmps
xchg
call
adc
arpl
test
test
in
shr
iret
shl
jns
leave
repz
and
(bad)
jb
inc
xor
dec
inc
inc
out
sub
shl
xchg
pop
div
add
stos
mov
int3
das
loope
or
mov
rcl
adc
mov
dec
call
dec
and
add
mov
mov
adc
stc
add
or
mov
lock
fbstp
out
mov
in
jmp
popf
(bad)
cmovns
popf
sub
rcl
test
mov
in
cmp
push
repz
xor
mov
daa
fld
cmp
div
sbb
rol
sbb
bound
xchg
pop
dec
push
sub
imul
adc
(bad)
xchg
std
dec
jmp
popa
jo
sar
mov
cmc
cli
mov
leave
push
inc
pusha
rcr
aas
xchg
adc
nop
dec
jg
nop
jl
ret
push
fimul
ret
arpl
popf
xor
fyl2xp1
fild
(bad)
jb
hlt
pop
fdiv
add
addr16
sbb
xchg
and
sbb
mov
sti
loope
mov
dec
sbb
test
adc
adc
jp
mov
sub
rcl
and
mov
push
or
int
arpl
mov
pop
out
outs
bound
idiv
into
in
in
jno
out
cdq
jge
imul
push
leave
out
push
lock
push
outs
push
mov
mov
das
dec
movs
sahf
mov
test
inc
loope
ret
loopne
ret
jp
cld
xchg
pop
cmp
mov
adc
xor
adc
add
jae
cli
inc
loopne
arpl
jbe
sub
fstp
push
sub
mov
xor
xchg
outs
aas
cmp
pop
cmp
das
pop
xchg
jecxz
call
jge
ja
or
out
or
lahf
xchg
cmp
int3
sahf
inc
fdiv
jmp
push
push
mov
pop
mov
mov
sbb
shl
or
add
xchg
xor
jno
mov
lea
mov
sar
xchg
arpl
mov
ret
loope
test
cmps
jbe
arpl
ss
int3
mov
cwde
fild
(bad)
sub
repz
std
pushf
xchg
xor
xor
add
pop
cmp
call
call
xchg
or
xchg
ds
adc
ja
adc
(bad)
mov
out
xchg
mov
xchg
adc
lahf
fbld
(bad)
stos
jbe
mul
dec
in
xor
mov
add
mov
pop
cmp
push
scas
popa
(bad)
cmp
and
mov
shl
test
jns
push
repnz
jmp
loope
or
push
ja
mov
sub
int3
out
inc
and
cmp
arpl
pusha
push
mov
ret
mov
sbb
mov
xchg
xor
inc
pop
pop
xlat
(bad)
hlt
mov
xchg
aad
or
cs
mov
call
mov
cmp
push
fs
dec
sti
push
cmp
(bad)
cdq
mov
push
jo
sbb
xchg
add
fmul
mov
jb
pop
adc
mov
adc
popa
pop
cmc
mov
push
pop
comiss
rcr
data16
cmc
add
mov
jns
sub
cmp
movs
jne
fbstp
mov
in
in
sub
pop
pop
push
xchg
repz
stos
call
mov
xchg
mov
js
fimul
imul
mov
add
mul
sbb
jae
out
clc
stc
test
sahf
inc
ja
push
sbb
cmp
mov
xchg
in
enter
sbb
test
jmp
ins
(bad)
xor
stc
adc
loope
iret
fcos
jl
call
imul
cmps
jnp
jmp
pop
call
cmp
xchg
dec
fisubr
pop
push
cmp
sub
fsub
pop
ins
cmps
jno
xchg
rol
movs
or
test
adc
lahf
mov
adc
mov
(bad)
je
jne
scas
stos
mov
retf
aad
adc
mov
in
and
sar
xor
mov
stos
inc
les
xor
outs
ins
pop
cmps
pop
bsr
pop
xchg
iret
xchg
es
mov
ror
xchg
push
repnz
out
add
sar
jmp
fisubr
aaa
fisub
pushf
hlt
xor
push
std
mov
je
idiv
jge
call
call
or
jmp
push
or
xor
mov
dec
out
mov
(bad)
adc
popa
cmp
add
test
push
mov
mov
sahf
inc
sub
retf
jns
pop
loopne
nop
imul
sub
imul
xor
sub
repz
dec
pop
jmp
or
inc
inc
adc
popa
(bad)
stos
cmp
sub
add
mov
push
out
or
sub
in
and
lock
or
jne
cmc
push
mov
into
loope
add
mov
pop
out
mov
out
js
or
xchg
jge
out
out
retf
enter
mov
arpl
pop
scas
push
add
nop
fldcw
out
mov
jbe
xor
cmp
lock
lods
inc
test
arpl
dec
pop
xor
push
xchg
pop
lods
pushf
xor
xchg
mov
inc
cmp
out
bnd
jbe
test
mov
xchg
pusha
or
sub
mov
fldenv
xchg
inc
addr16
cmp
lods
add
aam
ret
push
mov
adc
test
mov
loop
mov
cmps
nop
lds
xchg
in
pop
outs
and
jo
xor
or
stos
iret
mov
mov
lds
adc
stos
pushf
mov
iret
mov
sub
jmp
bound
push
and
push
push
xchg
mov
xor
mov
out
retf
retf
movs
pop
stos
pop
mov
pop
xor
sub
mov
inc
out
xor
aad
ret
in
repnz
pop
bound
pop
daa
cmp
imul
cmps
faddp
adc
add
ror
mov
inc
fdivr
ror
xchg
inc
push
sbb
push
aas
sub
aam
div
mov
jmp
sahf
jne
int3
jne
lock
jp
jmp
xor
push
loopne
jmp
mov
aam
add
add
inc
aas
shl
in
iret
or
aaa
mov
loope
inc
mov
out
adc
cmp
cdq
nop
ja
imul
lods
lds
movs
adc
or
scas
imul
scas
(bad)
popf
xor
bound
inc
sbb
out
(bad)
and
out
cmc
fwait
out
neg
jns
je
cmp
into
in
test
inc
aam
and
(bad)
pop
pop
mov
int3
leave
rdmsr
repz
jmp
xlat
xchg
sbb
rcr
nop
clc
mov
js
xor
(bad)
cmp
mov
daa
sub
sbb
imul
push
arpl
or
cli
xlat
call
sahf
daa
outs
(bad)
jmp
adc
pop
or
pop
ja
jmp
movs
add
add
mov
mov
mov
mov
push
hlt
pusha
cmps
cmps
add
dec
scas
sub
jno
outs
repz
inc
gs
mov
push
xchg
retf
pop
fsubr
mov
std
bound
mov
pop
jb
pop
stc
cli
hlt
mov
outs
xor
pop
push
mov
adc
push
in
mov
js
test
fs
ficom
sbb
rcl
int3
mov
or
lds
rcl
cli
gs
xchg
es
xlat
pop
mov
pop
outs
call
lods
xchg
imul
pop
pop
sbb
jmp
xchg
iret
jbe
dec
repz
rcl
ret
mov
sub
aad
pop
cmp
sbb
add
xor
mov
and
rcl
cmc
stc
lock
aad
xor
data16
dec
into
and
icebp
push
adc
pop
outs
cmp
cmps
cli
jno
cwde
push
pop
cwde
aad
shl
ds
(bad)
adc
xchg
cmp
inc
(bad)
ror
inc
and
mov
in
pop
cmp
push
push
cmps
or
nop
and
pop
mov
clc
mov
cmp
xor
neg
xor
lds
(bad)
dec
mov
inc
sub
jo
sbb
arpl
jno
mov
arpl
cmp
cmp
fisubr
add
pop
mov
ds
xor
aaa
pop
clc
outs
adc
sbb
and
mov
jmp
pop
loopne
pop
xchg
es
mov
jmp
push
movs
hlt
cdq
out
repz
popf
mov
lahf
movs
xchg
xchg
je
ja
cmc
dec
(bad)
imul
loope
dec
jmp
mov
and
push
and
shl
sub
xor
bound
fild
inc
sub
pushf
xchg
mov
in
scas
je
and
add
xchg
inc
int3
fidivr
dec
(bad)
dec
imul
clc
stos
ds
dec
jno
out
popfw
jns
imul
dec
mov
dec
sar
fwait
cmp
mov
cmp
jl
ins
mov
inc
cmc
out
ss
je
ret
xchg
jp
iret
dec
xlat
cli
cmpps
cwde
mov
mov
lods
sub
ret
add
pop
js
daa
dec
ret
icebp
push
(bad)
adc
pop
inc
sti
jmp
cli
and
xor
inc
retf
adc
bound
jmp
xchg
cmp
sub
rol
cmp
clc
mov
lds
add
enter
jge
push
movs
or
dec
(bad)
ins
(bad)
(bad)
leave
dec
int
and
sub
push
sub
sub
aaa
(bad)
int3
jl
in
xlat
and
mov
and
pop
clc
retf
leave
pushf
pop
dec
cld
ds
adc
out
add
out
mov
arpl
lods
(bad)
sub
(bad)
(bad)
outs
xor
cdq
ret
je
outs
push
movs
cmps
add
shl
icebp
out
fbstp
clc
(bad)
dec
mov
sar
jmp
cmp
xlat
adc
ret
aam
adc
cmp
pop
sbb
mov
add
sbb
or
fs
lods
sbb
dec
sub
push
aad
xor
jmp
shl
pop
retf
enter
cli
push
mov
cwde
dec
ins
push
gs
adc
push
sub
xor
mov
mov
inc
loope
outs
xchg
jae
xchg
dec
fsub
pop
(bad)
not
mov
xor
mov
in
out
test
dec
(bad)
xlat
add
mov
pop
xor
cmp
dec
loopne
out
fwait
xor
dec
adc
dec
stos
ins
cmp
dec
cmps
push
stos
jmp
fsub
xor
(bad)
retf
sahf
pop
pop
xor
dec
add
call
adc
and
adc
stc
ret
inc
sub
sub
add
jmp
pop
add
in
jl
cwde
hlt
lea
mov
inc
sub
pushaw
cmp
js
ins
sub
and
push
into
mov
sub
mov
call
test
push
in
cmp
cmc
jg
addr16
cmp
(bad)
arpl
movs
cmp
add
adc
or
mov
fsubr
sub
cmp
ja
mov
mov
clc
lods
addr16
dec
mov
out
test
sub
dec
dec
mov
pushf
xor
pop
mov
ins
dec
xchg
retf
out
mov
test
pusha
xlat
jecxz
sub
icebp
pusha
lods
mov
xchg
xchg
div
nop
pusha
adc
inc
aas
and
jnp
mov
xchg
cdq
dec
hlt
in
push
mov
scas
and
(bad)
mov
fstp
push
mov
dec
test
xor
test
out
cmp
pop
xchg
pusha
loop
(bad)
mov
repnz
cli
or
cmp
xor
xor
mov
fwait
xchg
mov
pop
repnz
fcmovnu
pusha
out
mov
sahf
inc
xchg
stc
movs
mov
mov
aam
outs
retf
xor
shl
cmp
push
pop
movs
out
repnz
rcl
cmp
sub
cmp
ds
clc
lods
jnp
ins
adc
in
enter
lods
movs
inc
out
mov
in
or
xlat
mov
or
inc
mov
mov
sahf
imul
daa
hlt
mov
inc
pusha
inc
add
cmp
mov
hlt
ret
ror
xlat
mov
(bad)
lahf
in
cmp
in
sub
popa
sub
mov
stos
mov
fmul
or
aam
sub
dec
cmc
fst
push
add
mov
je
lods
push
pop
add
fidivr
jb
jg
or
stos
xchg
mov
sub
pop
push
xor
shl
xchg
cdq
cmp
dec
xchg
sub
int
daa
dec
outs
inc
mov
(bad)
pop
push
sbb
mov
jbe
fild
sub
jnp
mov
int
xor
out
retf
test
push
and
dec
and
push
hlt
dec
mul
xchg
ret
sahf
jnp
call
xor
dec
mov
js
shl
mov
test
out
push
enter
call
pop
or
push
adc
les
sub
cmp
ss
xor
ret
loopne
cmp
adc
pop
push
xchg
retf
inc
mov
retf
daa
mov
(bad)
sbb
mul
jmp
loop
xchg
in
out
inc
(bad)
idiv
push
sar
popf
dec
fdiv
sbb
sbb
ins
gs
fst
jne
mov
inc
into
sub
cmp
sahf
movs
sbb
dec
and
rep
add
xor
popf
push
into
enter
cmc
or
cmc
ss
lods
sbb
jae
push
pop
fimul
mov
pop
mov
dec
sahf
loope
imul
imul
mov
cdq
push
fst
ins
mov
dec
xor
mov
jl
gs
shr
pop
inc
push
rol
inc
retf
and
push
mov
cmps
addr16
(bad)
xor
loope
inc
in
dec
dec
cmp
push
pop
sub
dec
cmp
mov
xchg
lds
mov
addr16
pop
nop
(bad)
jb
or
loop
push
cmp
jae
aas
movs
push
dec
jp
mov
pop
enter
sbb
ret
push
xchg
dec
into
and
scas
push
sbb
jge
sbb
ficom
pop
lea
pop
fldenv
jmp
push
xchg
sbb
stos
push
add
cmp
out
push
push
mov
int
dec
jge
ret
rcr
dec
cmc
inc
dec
jnp
mov
sbb
adc
add
in
mov
ins
inc
add
xchg
push
lea
push
sbb
sub
inc
scas
sbb
mul
mov
call
daa
shl
mov
xlat
cmp
repnz
es
cdq
xor
retf
xor
lea
into
fwait
xchg
sbb
icebp
or
and
inc
ret
xchg
out
adc
daa
xchg
cwde
inc
push
ficomp
fidivr
adc
mov
out
xchg
inc
add
mov
sbb
jnp
call
pop
test
rcr
cld
mov
dec
and
xchg
cmp
mov
int3
aas
sbb
push
sub
(bad)
sbb
(bad)
into
mov
jge
pop
ss
or
and
ror
push
in
pop
mov
loop
pushf
xlat
test
aam
push
mov
sbb
or
push
inc
push
jbe
shl
mov
sti
mov
xor
jb
sub
int3
fmul
out
fadd
ficomp
mov
sbb
mov
jo
adc
hlt
pop
adc
gs
ds
shl
push
ja
sbb
or
out
jb
jbe
mov
mov
mov
mov
xor
repnz
xor
sub
jmp
inc
call
nop
popf
imul
mov
shl
les
popa
(bad)
adc
popa
(bad)
sar
mov
cmps
jle
cs
xor
pushf
add
test
or
xor
sar
mov
jb
lahf
and
add
push
pop
cli
mov
fwait
in
lds
mov
xlat
test
aad
sub
sbb
ret
sub
mov
push
icebp
imul
lea
dec
xchg
fimul
std
pop
outs
pop
dec
ds
scas
lock
je
leave
jb
dec
call
mov
push
dec
cmps
lods
(bad)
jl
mov
adc
movs
mov
mov
xchg
or
cmp
pop
mov
xor
push
push
cwde
pop
stos
ret
cmp
popf
repz
cmp
nop
pop
shr
inc
adc
adc
adc
pop
lods
xor
pop
int
dec
mov
out
nop
adc
xchg
dec
ja
add
adc
xor
fisub
adc
jno
call
dec
aaa
shr
loopne
mov
mov
je
fstp
pushf
shl
xor
push
hlt
lds
dec
fistp
xchg
ret
std
sahf
jl
and
mov
adc
ja
adc
mov
cmp
jo
xchg
mov
xor
mov
xor
push
mov
(bad)
mov
xchg
(bad)
or
pop
iret
(bad)
cli
std
sbb
pop
test
add
cmps
(bad)
jae
mov
jle
mov
adc
mov
or
jne
sub
cdq
add
push
sub
stc
or
repz
adc
xor
out
add
ins
scas
jmp
out
(bad)
cld
cmp
leave
cmp
sahf
or
adc
xchg
ds
and
movs
inc
js
xchg
dec
inc
jg
hlt
neg
fidivr
aaa
inc
sub
push
(bad)
cmp
mov
pop
pop
retf
and
or
fidivr
pop
jmp
or
dec
dec
jmp
xchg
in
mov
cwde
mov
addr16
push
mov
sub
movs
dec
test
retf
push
out
mov
cmp
scas
dec
pop
(bad)
inc
and
(bad)
sub
cmp
mov
pop
pop
sti
and
mov
mov
jmp
jg
pop
in
add
xchg
dec
dec
push
lds
sub
push
dec
scas
fdiv
daa
ins
push
bound
xchg
mov
or
arpl
aas
pop
push
add
pusha
add
loopne
pop
cmps
jge
sbb
add
jb
dec
out
jns
call
mov
or
pop
movs
std
xor
retf
cmc
sub
clc
in
imul
mov
in
xlat
sub
sub
adc
xchg
jno
pop
jge
add
add
sub
mov
mov
inc
jno
shr
(bad)
xor
cdq
sar
repz
lea
push
pop
jae
add
repnz
add
out
add
mov
mov
sub
push
xchg
sub
cwde
sbb
inc
mov
pop
pop
dec
push
inc
out
push
cmp
mov
mov
pop
in
rcl
mov
xor
and
cmp
cmp
in
push
rcr
adc
imul
imul
and
xchg
and
ds
inc
dec
stc
mov
mov
es
pop
(bad)
in
sub
frstor
(bad)
out
icebp
sub
(bad)
xchg
loope
gs
or
inc
mov
xor
imul
inc
shl
xor
js
jecxz
(bad)
jnp
xchg
push
or
push
(bad)
mov
sub
cli
loopne
jno
sub
mov
arpl
bound
pop
out
xor
aam
or
xchg
pushf
mov
pop
aas
mov
aaa
retf
test
test
daa
or
xor
imul
xchg
jg
pop
sub
repz
xchg
or
ja
xchg
jp
pop
adc
retf
out
scas
sbb
ins
std
icebp
xor
dec
cmp
xchg
push
fldenv
add
and
sub
aad
cmp
hlt
sub
pop
mov
cmp
out
inc
aam
inc
and
(bad)
dec
mov
loope
jp
lock
cld
xchg
xlat
adc
pop
add
or
leave
pop
dec
pop
loop
bound
mov
mov
sti
mov
pusha
fs
adc
(bad)
leave
(bad)
jns
jno
pop
ficomp
lods
test
inc
lods
cmp
lahf
mov
stc
pop
fidivr
push
push
jle
pop
imul
sti
out
in
push
test
scas
iret
mov
add
test
dec
lods
popf
jbe
inc
jl
inc
pop
pop
jno
mov
mov
je
xchg
cmc
xchg
mov
jle
and
fcomi
jne
pop
inc
push
push
add
stc
mov
loope
(bad)
or
inc
fwait
adc
jg
mov
xchg
sub
xlat
aas
xor
int3
mov
pusha
das
mov
gs
sub
pop
and
fisttp
sub
sbb
push
xchg
div
out
pop
mov
and
push
pusha
aaa
in
test
mov
mov
adc
dec
adc
xlat
jns
cmp
fist
popf
jne
mov
das
dec
sub
mov
repnz
outs
fidiv
jb
xor
lock
xchg
das
call
jbe
jae
popa
test
mov
scas
jns
and
lds
data16
and
fcomp
fnsave
rcr
aad
adc
sahf
push
ficomp
ds
push
cmp
jl
or
fcom
out
push
xchg
xchg
pop
or
xlat
cld
xor
lock
xor
cmp
(bad)
stc
jecxz
out
xchg
push
icebp
mov
out
in
lds
or
sub
and
aam
retf
pop
pop
push
jge
(bad)
int3
xor
or
ret
jmp
and
(bad)
cmp
jb
in
inc
fst
pushf
call
lock
cmp
xor
mov
mov
data16
xor
and
mov
std
inc
vmovsldup
lea
cmps
cmc
push
pop
(bad)
cmps
(bad)
and
cwde
adc
loopne
mov
xor
push
push
push
add
fs
loop
nop
scas
xor
or
and
scas
pop
pop
pop
outs
int3
sbb
push
js
ret
loop
add
sub
loopne
add
adc
push
mov
into
(bad)
xchg
mov
dec
fiadd
cmp
inc
sub
or
push
adc
shl
ins
sub
mov
mov
iret
mov
sub
fldcw
xor
xor
arpl
xor
mov
push
fisttp
sub
in
(bad)
pop
adc
aaa
(bad)
retf
pop
test
leave
sub
bound
sub
mov
(bad)
int
iret
mov
icebp
sub
cmp
hlt
inc
jo
nop
sbb
push
mov
and
xchg
ja
stos
xor
jl
mov
in
adc
in
jl
test
rcl
stc
xchg
xor
daa
xchg
test
push
jle
dec
data16
inc
jb
inc
adc
mov
inc
cmc
in
and
out
cmc
add
mov
sbb
sub
rcr
movs
(bad)
out
pop
xchg
pop
mov
into
fisubr
pop
or
sbb
retf
hlt
mov
xor
aas
and
and
div
cmp
imul
push
xchg
xchg
dec
jg
mov
jmp
jge
xchg
cmp
cmc
jecxz
dec
and
mov
sub
xor
jae
cmc
xchg
in
adc
sti
test
inc
inc
xchg
scas
fisttp
jbe
xchg
in
cwde
xor
jg
lods
ficomp
cmp
sbb
jb
cmc
mov
int3
fiadd
mov
movs
push
(bad)
test
dec
cmps
jmp
shr
sbb
and
sub
(bad)
sbb
in
sub
xlat
sbb
fcomp
shr
jmp
dec
push
mov
sti
lods
shl
add
scas
js
(bad)
mov
sbb
push
daa
add
hlt
xchg
push
les
add
push
test
xchg
push
test
xchg
sbb
jmp
in
das
ins
push
out
test
ret
(bad)
repz
pushf
mov
call
jne
cmps
aad
je
lods
jnp
inc
jmp
mov
pop
xor
pop
call
outs
or
adc
cmp
lds
inc
sub
dec
outs
inc
add
inc
xchg
shr
mov
retf
movs
iret
cmps
dec
lds
xor
or
cmp
jge
sub
imul
fistp
or
jne
cmp
dec
outs
adc
dec
inc
lds
and
cs
sub
addr16
push
cdq
xor
xchg
add
pop
repnz
dec
daa
pop
and
jmp
outs
mov
jg
out
pop
mov
inc
mov
or
scas
and
push
sub
push
or
outs
test
outs
cs
rol
stos
or
dec
sbb
test
das
mov
repz
sbb
stc
sbb
sbb
xchg
mov
xchg
jg
fbstp
(bad)
cmc
sbb
add
push
icebp
pop
jb
std
je
jnp
cmc
gs
mov
enter
and
jge
push
dec
je
cmp
ins
xor
inc
push
out
dec
frstor
bnd
sub
fs
xchg
inc
xor
loop
mov
in
lods
mov
mov
test
imul
stos
sbb
in
hlt
test
and
mov
sub
jg
ror
cs
out
scas
addr16
addr16
sub
stos
dec
lahf
(bad)
mov
mov
cli
pop
mov
sti
dec
(bad)
mov
nop
(bad)
int
lods
repnz
dec
pushf
cs
ret
jmp
aaa
int3
cmp
sbb
es
mov
retf
out
dec
inc
pop
dec
mov
or
leave
in
arpl
and
mov
cmp
push
cmp
cmps
mov
sar
stos
add
gs
cwde
(bad)
dec
mov
(bad)
imul
xchg
xchg
iret
pusha
push
not
mov
(bad)
and
jmp
mov
pop
dec
add
mov
aas
mov
shl
add
jns
fdiv
out
mov
ret
loope
repz
jp
cli
dec
int
imul
push
mov
sbb
inc
rcl
in
lock
test
aam
jns
ficomp
data16
and
fnsave
aaa
mov
movs
pop
call
add
mov
clc
mov
xor
addr16
out
popf
cmp
popf
or
shl
inc
cmps
pop
pop
test
xor
mov
je
xor
out
loop
dec
push
jge
inc
cmp
fldl2e
add
inc
(bad)
hlt
push
cmp
test
xchg
sub
mov
fimul
outs
fcmovne
push
stc
enter
ret
push
mov
push
push
inc
xchg
sbb
fsubr
lock
mov
cs
xchg
sbb
xchg
popa
xor
cmc
fidiv
scas
jno
aas
add
pop
mov
and
imul
pop
fdivr
dec
fisubr
and
daa
(bad)
push
mov
mov
xchg
push
out
sub
shl
pop
scas
sbb
retf
fs
push
dec
das
push
sub
or
lods
push
enter
dec
jae
sahf
in
cmps
cmp
(bad)
in
xor
push
mov
adc
js
aam
nop
repnz
cmp
sbb
out
lock
pop
push
mov
cmps
and
mov
cdq
(bad)
aam
sub
in
mov
adc
fdiv
int3
xchg
mov
mov
cmp
pop
xor
push
mov
test
ja
stc
rcl
mov
test
sbb
and
pusha
lods
call
pop
jbe
xor
mov
sub
cmp
cmc
dec
cmp
xor
adc
jecxz
jno
addr16
or
loope
int3
adc
mov
test
pop
add
mov
adc
pop
cmps
fsubp
aad
stos
push
jmp
dec
ins
cmp
test
inc
cmp
and
outs
cmps
mov
test
outs
in
adc
dec
ret
(bad)
jo
mov
cld
push
movs
adc
outs
clc
je
movs
clc
cld
sub
leave
xor
rcl
fld
add
shl
jo
adc
sbb
je
dec
cld
sub
dec
push
add
daa
dec
test
add
inc
jecxz
adc
or
dec
popa
in
pusha
in
or
adc
lahf
test
test
mov
rol
in
dec
pusha
jnp
mov
xchg
jle
mov
push
sbb
repnz
into
enter
sub
and
mov
adc
in
(bad)
in
retf
ds
adc
das
adc
add
fnstcw
and
pop
inc
out
fs
call
push
and
es
mov
pop
push
mov
jae
mov
pop
arpl
push
sub
call
or
scas
imul
lods
mov
fwait
or
pop
xchg
mov
sub
cmp
std
popa
in
imul
lods
fisttp
outs
cli
jae
adc
fcomp
push
loopne
pushf
mov
dec
fwait
or
mov
fst
jle
fwait
mov
push
mov
fisttp
or
lock
sti
mov
outs
pushf
mov
dec
and
mov
(bad)
sub
je
and
jbe
lods
adc
mov
xor
jo
xchg
cmp
jl
into
imul
xor
out
or
dec
(bad)
cmps
out
or
mov
adc
sub
dec
and
jecxz
mov
jmp
(bad)
aas
sti
and
or
paddusb
icebp
xchg
fbstp
jmp
xchg
or
mov
sub
call
rcl
xchg
pushf
push
cld
jecxz
out
in
sub
mov
outs
movs
(bad)
(bad)
rcr
call
or
mov
(bad)
cmc
mov
gs
mov
sahf
push
int3
sub
fild
test
aad
cmp
sub
sbb
mov
pop
cmp
adc
inc
fbstp
data16
push
xor
or
adc
adc
mov
xchg
xlat
or
in
push
push
sbb
shl
fstp
xchg
cmps
(bad)
int
inc
xor
fmul
xor
fwait
dec
jne
out
inc
pushf
jns
jbe
cmp
sub
xchg
add
mov
add
inc
sbb
add
pop
pop
les
cdq
sbb
neg
gs
loop
and
mov
enter
mov
and
adc
dec
fs
into
mov
xlat
or
retf
add
bnd
je
add
and
mov
push
les
out
xor
aas
stos
arpl
in
sub
shl
add
mov
leave
jae
int3
ins
popf
sti
jp
mov
retf
retf
ins
push
stos
ret
out
outs
imul
xlat
dec
in
mov
xlat
add
push
in
stos
sbb
mov
jl
ficomp
sar
into
in
or
pop
pop
frstor
into
sub
jnp
adc
movs
loopne
je
imul
fiadd
dec
lea
loopne
pop
cmp
into
xchg
aad
enter
add
mov
rcl
pop
dec
les
inc
xchg
das
dec
xchg
into
pusha
dec
sub
repnz
mov
aas
sti
dec
clc
mov
xchg
addr16
clc
push
lods
dec
jle
xor
in
dec
xor
mov
pop
lds
xor
out
pop
test
mov
dec
pop
xchg
dec
adc
imul
adc
sbb
push
pop
lods
int
rcl
cs
lock
mov
sub
shl
test
jmp
mov
sbb
push
in
aas
jno
push
push
sub
rcr
nop
dec
sbb
js
push
out
imul
mov
jl
lods
cwde
gs
sbb
rcr
nop
rcl
ds
dec
cmp
out
mov
enter
xchg
je
clc
pop
pop
dec
bound
mov
pop
and
loope
push
pop
jecxz
test
xchg
out
add
out
out
sbb
adc
jnp
mov
sub
push
and
or
shl
stos
inc
and
retf
xor
dec
daa
push
enter
mov
int3
repz
adc
ror
adc
jle
ret
inc
push
mov
push
cli
mov
add
cdq
xor
std
shr
push
xchg
fstp
lods
ja
in
dec
out
aas
test
cmp
pop
xchg
stos
int
cwde
mov
cli
mov
out
adc
leave
cmp
jl
push
xor
fucomp
xor
add
cs
mov
ret
pop
sar
fnstenv
addr16
xor
dec
add
jecxz
xchg
mov
xor
pop
and
pop
adc
push
and
cmp
or
mov
aam
jno
xchg
mov
or
cmp
push
fmul
hlt
cdq
mov
je
add
jmp
stos
ret
bnd
sub
retf
test
ror
aad
mov
mov
test
in
cmp
mov
mov
data16
dec
call
dec
push
xchg
fbstp
mov
xor
addr16
sbb
cmp
push
cmp
sub
hlt
enter
xchg
fbld
add
bound
add
mov
jp
repz
xor
out
retf
leave
movs
add
test
push
into
dec
jl
div
or
dec
or
mov
aas
imul
and
mov
adc
or
and
inc
cmp
clc
repnz
lods
cdq
ss
cmp
inc
xchg
pop
jmp
and
cmp
fs
test
pop
xchg
movs
adc
sbb
(bad)
push
mov
sbb
rol
push
(bad)
pusha
in
dec
sub
sbb
pop
jbe
mov
retf
nop
loopne
loop
cs
jns
pop
aam
loop
dec
jo
adc
add
mov
fnsave
cmps
push
add
bound
or
int3
jae
ins
xor
add
add
popa
aas
jb
or
or
leave
(bad)
mov
or
daa
nop
sub
fdivr
out
fidiv
jb
dec
dec
stos
movs
xchg
rcr
aaa
call
mov
out
int3
loopne
sti
into
(bad)
jo
adc
ss
push
pandn
push
nop
nop
dec
cmc
xor
xor
inc
mov
ins
dec
push
ss
sub
and
clc
es
xor
aam
shl
and
loop
repnz
mov
xchg
in
and
rcr
push
cmp
push
cmps
int3
and
out
retf
xchg
push
push
sbb
scas
bound
add
mov
push
stos
out
pop
xchg
jno
mov
push
xchg
stos
(bad)
enter
repz
dec
stos
jb
ins
std
jo
inc
lahf
pop
add
repnz
cmp
cmp
and
and
jge
jb
pop
movs
sbb
sbb
push
pop
retf
dec
add
sub
inc
retf
dec
lahf
mov
inc
pop
gs
fcom
or
xchg
pop
jmp
cs
fcom
push
movs
stos
stos
mov
mov
jmp
shl
adc
lods
or
jne
pushf
(bad)
call
je
in
outs
popf
pusha
and
sar
pop
jno
jl
jns
sti
inc
fidiv
pop
fisttp
icebp
inc
sub
test
mov
inc
je
pop
push
(bad)
loope
inc
mov
xor
or
or
leave
and
inc
mov
dec
inc
cmps
popa
dec
mov
push
out
dec
adc
jno
loop
add
les
out
push
cmp
outs
std
cli
jmp
cmp
ins
out
cli
jmp
mov
(bad)
xchg
test
pop
test
jmp
mov
sbb
adc
int3
add
adc
inc
sbb
pop
push
scas
std
outs
sbb
test
cdq
sub
push
push
out
mov
jae
and
jo
fbstp
add
mov
popa
lea
cmp
xchg
mov
xor
add
xchg
lock
(bad)
push
outs
mov
mov
mov
push
jg
test
sbb
ret
(bad)
(bad)
clc
or
sbb
adc
ss
sub
dec
add
lods
sbb
popa
stc
test
and
(bad)
mov
mov
jmp
ret
int
lods
and
pop
movs
call
ror
dec
stc
mov
retf
je
int3
mov
movlhps
mov
xchg
adc
std
sbb
cmp
shl
(bad)
in
lds
xchg
cmp
inc
stos
or
push
lods
push
imul
ret
push
imul
jge
sbb
or
sub
clc
fs
pusha
mov
sub
aas
xchg
rol
jns
jns
jo
pop
not
mov
out
ficom
inc
add
jg
in
jecxz
sbb
or
fwait
dec
xchg
(bad)
push
mov
ja
mov
mov
in
ret
push
aad
cwde
mov
retf
cmp
imul
stos
popf
sbb
stos
dec
(bad)
icebp
mov
clc
cmp
cmps
out
aad
or
call
cwde
pushf
adc
inc
pop
das
dec
or
mov
pop
daa
jecxz
je
enter
pusha
fld
shl
or
enter
inc
in
ss
out
pop
xchg
pop
cli
dec
cmp
push
push
jl
xor
mov
call
sub
out
cmp
cmps
mov
imul
add
jmp
imul
fwait
push
enter
cli
push
retf
aaa
or
or
cmc
nop
mov
int3
cs
add
dec
and
pop
adc
xchg
(bad)
ins
and
addr16
jns
std
dec
jnp
cmc
pop
or
out
inc
jecxz
lods
aas
retf
pop
cmp
ret
mov
popa
into
int3
(bad)
shr
clc
lods
out
imul
dec
pop
adc
xlat
inc
add
mov
cmps
pop
ficomp
mov
dec
sbb
stc
scas
xor
das
xchg
mov
inc
fs
fsub
cmp
xor
inc
pop
iret
icebp
(bad)
stos
popf
hlt
mov
cdq
mov
pop
cmps
fstp
mov
in
xchg
lahf
(bad)
dec
pop
and
add
sbb
mov
aam
loopne
icebp
sub
inc
mov
xor
cmp
in
xor
scas
sbb
adc
push
ret
sbb
pop
xchg
int
js
in
or
(bad)
mov
rcl
dec
data16
cmp
mov
cmps
adc
cmps
dec
daa
and
pop
imul
push
loopne
lds
xchg
loope
sub
xor
arpl
(bad)
std
sar
pop
out
sub
ss
cmp
loop
dec
jmp
and
mov
(bad)
(bad)
shl
xchg
push
std
leave
fdiv
cmc
in
bound
leave
scas
sub
sub
dec
adc
(bad)
ss
jmp
dec
arpl
xchg
ds
cdq
out
cli
into
ins
sbb
push
dec
(bad)
ins
pop
inc
minps
(bad)
xor
push
mov
pop
xchg
js
pop
inc
and
sti
int
rol
dec
aad
sub
cmp
cmp
mov
sub
dec
inc
loope
imul
push
loope
dec
push
fwait
shl
or
enter
(bad)
cwde
jg
div
dec
mov
mov
mov
jle
dec
ret
ret
clc
sub
retf
pop
adc
leave
nop
mov
js
ds
cmps
push
ja
fwait
xchg
jecxz
sub
dec
xor
pop
movs
dec
inc
fisttp
leave
push
jae
(bad)
bound
(bad)
ror
rcl
jnp
jmp
add
retf
adc
enter
int3
mov
and
cmp
adc
retf
adc
lock
daa
or
ins
mov
stos
mov
not
cmps
sbb
mov
inc
inc
mov
xor
stos
loopne
mov
dec
inc
int
xchg
or
push
cli
addr16
cmp
stc
int
and
ins
mov
mov
in
cld
lock
sar
cs
js
imul
push
xor
push
into
mov
jecxz
or
shl
arpl
das
outs
out
sub
jae
cld
ret
jae
cmp
out
ins
mov
push
(bad)
out
in
jmp
add
sbb
xor
push
gs
add
and
pop
mov
and
inc
push
jp
cmps
lock
in
cmpxchg
pop
pusha
lods
cmp
pop
dec
lds
retf
push
cdq
outs
xor
outs
add
jnp
jne
scas
out
aas
ins
pop
mov
rcr
adc
pop
sbb
lods
daa
mov
sbb
adc
jle
jo
mov
leave
mov
test
mov
jge
xchg
dec
jge
ds
cmc
lods
fbstp
or
out
inc
ss
call
out
test
cmp
dec
cmp
dec
cmps
cmc
retf
scas
mov
and
pop
adc
call
or
in
mov
inc
sbb
cmp
or
mov
sbb
mov
sar
cmp
jb
cs
nop
ins
add
inc
in
sbb
jb
mov
jmp
push
lahf
adc
xor
out
std
cmp
dec
lea
out
fadd
leave
mov
add
mov
dec
push
lea
mov
mov
sbb
xor
mov
pop
test
je
inc
mov
add
enter
(bad)
js
or
xchg
call
jp
pop
xor
ror
pop
inc
adc
pop
pop
fmul
or
call
adc
and
jmp
mov
iret
das
xor
mov
test
jo
xor
cmc
mov
adc
xchg
or
inc
pop
dec
mov
cmp
lods
jecxz
aam
inc
loop
arpl
mov
sub
pop
out
clc
cmp
test
cmp
dec
cmp
add
sahf
adc
jl
js
inc
cmp
cld
inc
loopne
fild
pop
js
in
jecxz
retf
neg
mov
ins
sub
movs
ror
stos
loop
retf
dec
lods
mov
comiss
dec
call
call
mov
push
in
mov
lock
addr16
lahf
test
sbb
cli
aam
arpl
jp
ja
cmps
xchg
dec
cmp
adc
call
call
jne
ret
outs
cmp
or
int3
and
fldenv
lods
test
add
inc
dec
mov
cmp
and
outs
lods
and
sub
fwait
cmp
movs
adc
push
fcomp
(bad)
dec
jmp
xor
repz
mov
mov
pop
ret
mov
add
xchg
movs
adc
adc
ss
cld
(bad)
int
jl
fisub
inc
nop
jge
fldcw
(bad)
or
rol
ins
jnp
and
or
lock
(bad)
cmc
xchg
fnstenv
adc
push
and
and
inc
popa
pop
xor
arpl
cmps
sahf
jbe
pop
dec
push
loopne
fidivr
adc
int3
adc
daa
adc
ins
sbb
xchg
int
ja
xchg
bound
out
inc
repz
in
call
and
mov
push
aad
mov
cmp
mov
mov
push
xlat
fldcw
and
(bad)
push
xchg
mov
jl
les
(bad)
repnz
mov
mov
ret
jle
mov
add
pop
shl
add
cld
inc
shr
gs
out
mov
ret
imul
xlat
mov
fist
pop
ins
int3
cmp
iret
(bad)
enter
pop
and
or
ja
dec
jle
call
sbb
xchg
mov
jg
movs
jl
sti
or
test
add
mov
lahf
(bad)
jmp
lock
jmp
push
icebp
dec
mov
mov
jle
loope
mov
mov
and
jns
or
pop
imul
push
and
cmp
fs
test
vcomisd
push
enter
dec
cld
and
lds
lds
pushf
mov
fwait
push
gs
out
cmp
gs
push
or
(bad)
cli
pop
or
mov
jb
pop
jae
dec
fbld
cmp
jmp
xor
inc
inc
xchg
push
xor
and
cs
rcl
nop
jnp
ds
mov
cmps
mov
cs
cmp
test
test
lahf
and
push
push
jno
push
pop
mov
stos
and
daa
cdq
xor
ret
stos
out
jmp
cdq
pop
arpl
loope
loope
push
into
and
cmp
and
leave
dec
xor
shr
das
cmc
fld
pop
sub
sbb
ds
inc
mov
int
(bad)
ret
xchg
enter
pop
mov
mov
push
aaa
in
jecxz
jns
ror
mov
add
pop
iret
out
pusha
sub
mov
hlt
add
cmp
cwde
push
pop
out
sti
mov
push
hlt
call
or
scas
js
xor
inc
data16
xchg
xlat
popa
mov
xor
int
mov
pop
jl
xor
(bad)
gs
aad
adc
in
sub
mov
xchg
shl
push
lods
inc
repnz
inc
adc
mov
addr16
sub
jae
xor
sbb
and
add
fdiv
push
jle
xchg
(bad)
out
out
mov
jp
cmp
in
sahf
cmp
daa
(bad)
call
jl
sti
xchg
dec
nop
sub
fist
push
enter
outs
ja
lods
sub
push
pop
int3
pop
imul
jno
fwait
movs
popa
outs
arpl
sub
or
xlat
dec
mov
lea
mov
in
inc
add
pop
retf
push
cmps
xchg
je
sub
xchg
mov
lds
push
mov
test
mov
inc
mov
ret
das
xchg
mov
mov
cmps
cmp
ror
data16
lods
jp
pop
dec
mov
lods
sbb
sbb
or
ret
ins
push
jmp
push
int
mov
aas
mov
outs
(bad)
fstp
push
test
pusha
adc
ss
mov
add
(bad)
jnp
scas
inc
(bad)
add
adc
ds
repz
lods
aam
inc
test
fild
sar
aam
call
cli
js
jbe
(bad)
xchg
fs
in
mov
or
and
cmp
push
mov
movs
push
scas
and
sbb
clc
clc
cs
mov
add
shl
fadd
call
or
xchg
pop
hlt
aad
and
ins
push
fsubr
or
(bad)
sub
sub
cmps
sar
xchg
sbb
jecxz
push
fwait
adc
aad
mov
fwait
sbb
scas
mov
in
inc
mov
cmp
cwde
in
rcr
mov
sub
pop
addr16
mul
sub
enter
je
add
adc
sbb
stos
pushf
popa
fcomi
cs
add
test
test
mov
push
in
outs
inc
mov
cmp
je
xor
inc
bound
js
sub
int3
xor
add
cmp
ins
push
cmp
(bad)
shr
mov
mov
cmp
push
and
addr16
xchg
repnz
or
or
sbb
mov
mov
lea
mov
cmp
in
adc
pop
(bad)
mov
stos
aaa
jge
gs
imul
inc
dec
mov
adc
mov
test
fwait
dec
jbe
xor
sbb
loope
shl
adc
adc
ret
add
inc
int3
addr16
mov
(bad)
sub
jle
push
aad
cmps
repz
adc
cmp
call
in
pop
fild
sub
dec
cmovp
sar
ds
outs
cmp
mov
push
repz
add
cli
repnz
add
shl
jge
cs
add
popa
pop
sub
mov
lock
push
xchg
test
sub
ror
(bad)
xchg
mov
add
and
xchg
mov
fdiv
push
sub
pushf
inc
in
imul
cli
pushf
in
xor
sub
pop
ja
mov
hlt
bound
mov
daa
mov
and
add
mov
neg
push
dec
mov
fldenv
sbb
sbb
mov
sbb
lar
push
movs
mov
lods
or
mov
mov
ficom
popf
push
cdq
out
sub
cmc
lock
adc
sbb
inc
cdq
jo
push
sbb
dec
in
cmps
jnp
not
xchg
xchg
es
pop
out
mov
in
xchg
lock
mov
jecxz
sbb
test
stos
call
mov
inc
outs
fld
cmp
mov
pop
push
push
adc
mov
aam
scas
jmp
int3
dec
or
mov
jge
xor
loope
mov
and
imul
and
ins
sar
add
pop
push
push
add
mov
pop
test
or
adc
adc
dec
xchg
xchg
movs
(bad)
popa
jnp
sub
or
xchg
dec
ja
fs
push
sar
and
xchg
lea
retf
loope
(bad)
call
sti
loop
and
jns
sbb
lea
pop
jge
nop
or
mov
cs
sub
jp
xor
mov
inc
out
lahf
jns
iret
cmp
pusha
pop
es
int
lahf
out
jno
call
sti
push
push
mov
loope
js
lahf
push
push
jae
add
adc
xchg
mov
pop
mov
and
sbb
dec
inc
fild
mov
sub
retf
test
pop
into
sbb
push
call
adc
outs
jb
clc
cmps
mov
xor
(bad)
jecxz
sub
pop
inc
add
mov
push
in
xlat
pop
xchg
rcr
jns
outs
cmp
jmp
aaa
sbb
and
popa
sub
(bad)
cmp
sub
push
xchg
ja
loope
repnz
or
mov
push
sub
dec
in
push
pop
xchg
pop
adc
imul
push
fs
fprem
in
repnz
push
or
pop
and
(bad)
jmp
cwde
pop
jno
jns
inc
jne
cmp
call
(bad)
in
loope
sub
movs
dec
mov
fiadd
scas
mov
test
popf
jmp
mov
xchg
mov
push
mov
pop
lods
mov
retf
jb
mov
sbb
pop
pop
push
inc
fisttp
inc
xchg
mov
stos
and
xchg
test
mov
or
arpl
loopne
xchg
jge
pop
xchg
test
mov
inc
add
jg
fwait
loop
out
and
xchg
out
dec
and
adc
imul
imul
mov
enter
push
and
inc
push
shl
call
pop
or
mov
dec
and
cmp
xchg
xor
enter
sub
lods
dec
xchg
mov
in
inc
xchg
mov
xor
jno
sbb
mov
push
cs
mov
sub
cmp
jae
xchg
call
outs
dec
jle
cli
add
jl
push
(bad)
fs
out
pop
es
test
jne
adc
and
sti
xlat
or
ret
lea
out
mov
xchg
push
enter
fs
lea
xor
aaa
mov
add
sbb
cmps
bound
(bad)
xor
mov
loopne
inc
test
clc
lds
jo
xchg
stos
(bad)
adc
xor
ja
cmovs
add
jnp
retf
int
aad
sbb
and
stos
and
sahf
sub
popa
push
inc
arpl
out
out
mov
arpl
aad
jo
inc
push
push
or
test
aad
nop
add
out
sar
pushf
int
movs
mov
sbb
inc
adc
mov
clc
inc
mov
hlt
adc
es
jns
(bad)
je
cmp
cwde
jb
and
sbb
xchg
xchg
aad
inc
loop
loop
lds
shl
jnp
cmp
ins
mov
jp
xchg
loopne
(bad)
inc
adc
arpl
sahf
ret
or
mov
push
and
jmp
stos
dec
fild
inc
in
cmp
push
sbb
xor
sbb
imul
scas
(bad)
adc
hlt
xor
jmp
jns
(bad)
fisubr
movs
or
rol
(bad)
pop
pop
fld
xchg
popa
pop
add
retf
pop
ret
addr16
gs
dec
pushf
inc
push
cdq
retf
pop
mov
mov
sbb
xchg
xchg
or
shr
or
xchg
xchg
ret
mov
movs
cmp
(bad)
hlt
sbb
shl
xor
and
fs
xchg
jbe
test
adc
xor
test
and
and
cmp
xor
mov
add
adc
pop
sub
enter
(bad)
xchg
pmuludq
and
push
fwait
dec
fcomip
dec
bound
dec
and
push
rol
stos
lahf
std
add
push
movs
fwait
aad
mov
stos
dec
retf
test
rcr
repz
shl
mov
inc
mov
icebp
pmulhuw
sub
add
mov
(bad)
jmp
jmp
sbb
mov
imul
mov
(bad)
call
cmp
fcmovu
pusha
mov
hlt
fcom
int
jg
mov
int3
cwde
cmp
not
mov
sub
call
mov
jmp
xchg
mov
imul
mov
test
call
sti
imul
les
retf
out
nop
xchg
pop
fsub
pop
sub
inc
xchg
push
pop
sbb
test
test
retf
sub
jp
jb
es
dec
mov
inc
pop
scas
mov
jo
xchg
sub
sub
push
dec
cld
adc
and
cld
dec
inc
pop
inc
fild
lods
movs
xchg
scas
cmp
cmp
aaa
gs
xchg
cmc
xor
cmps
aaa
push
js
jl
push
cmp
inc
dec
jmp
cmc
push
sbb
adc
ret
mov
popa
push
movs
pop
cmp
or
aas
xor
xor
xor
pop
scas
sub
xchg
(bad)
les
mov
adc
inc
outs
jl
lods
mov
cs
daa
cmp
pop
mov
imul
loop
jnp
pop
pop
xadd
mov
daa
xchg
pop
clc
pop
sub
test
or
pop
xor
call
adc
push
mov
jnp
std
xlat
lds
or
popa
jp
xor
and
clc
mov
mov
pop
or
inc
and
(bad)
ficomp
and
dec
int3
mov
ret
add
add
ja
outs
sar
in
lahf
inc
push
clc
arpl
jl
adc
mov
imul
out
mov
lea
pop
cmp
in
ja
dec
cmp
and
sbb
add
push
mov
rol
push
dec
data16
push
test
xor
push
cmp
stc
call
inc
dec
scas
mov
es
mov
push
imul
retf
lock
xlat
jne
std
xchg
inc
add
mov
ins
out
mov
pop
in
jne
jge
inc
in
daa
xor
mov
mov
mov
pop
jle
and
pop
fistp
and
fwait
retf
shr
push
lea
sub
(bad)
cli
out
stos
pop
repnz
cmc
outs
fmul
call
xor
loopne
xor
das
mov
shl
jl
adc
xchg
mul
outs
pop
dec
(bad)
sahf
loopne
jp
pop
push
imul
(bad)
inc
jnp
out
adc
jp
rcr
ffree
(bad)
add
mov
aad
stos
daa
bound
cmps
xchg
test
int3
mov
cmp
rcr
cmp
dec
cwde
movs
rcl
test
pop
jae
add
(bad)
mov
push
adc
out
cmp
mov
clc
jg
sbb
mov
lock
and
sbb
lock
and
inc
test
push
push
das
xor
sub
jl
jmp
movsx
push
jg
push
mov
mov
int
fld
jge
loope
dec
cmp
out
pop
gs
dec
repnz
lods
js
mov
jnp
or
rol
mov
test
(bad)
mov
cmp
sahf
xor
out
jmp
mov
enter
(bad)
fadd
inc
and
clc
hlt
and
mov
outs
cmp
ret
dec
cmp
lods
mov
cmc
test
ss
or
jg
xchg
xchg
sub
scas
adc
jp
sbb
shl
gs
jecxz
shl
pop
(bad)
(bad)
and
xchg
cmp
(bad)
(bad)
fbld
dec
out
lods
and
adc
aam
gs
stc
adc
mov
popa
fstp
das
xor
xchg
dec
xchg
xchg
sbb
js
outs
mul
fidiv
sbb
aas
push
dec
xor
pop
nop
ret
aaa
fsubr
call
in
sahf
xor
sub
push
arpl
rcr
into
sub
shr
xchg
retf
test
dec
and
stc
xchg
add
sbb
mov
cmp
adc
push
rcr
push
dec
or
pop
aaa
sub
shl
pop
dec
jne
int3
mov
or
iret
jo
ds
(bad)
push
inc
outs
fst
dec
stos
fimul
sub
xor
add
test
and
adc
test
add
cwde
das
fcmovnu
aas
pop
jmp
pop
dec
pushf
xchg
sub
adc
outs
sbb
cmps
ficomp
mov
mov
cli
lods
je
mov
out
dec
vmptrld
adc
or
lods
sub
stos
imul
call
sbb
mov
fistp
jecxz
mov
lea
sbb
and
test
cmp
inc
not
inc
ins
cmp
imul
sar
dec
sub
js
push
xor
pop
in
dec
or
sub
jae
xchg
add
ins
sub
or
in
dec
push
jnp
outs
popa
in
cmp
add
mov
clc
cdq
jae
mov
jp
cmp
push
cmp
retf
movs
xlat
popf
outs
gs
mov
movs
shl
xchg
xor
rcr
jecxz
xchg
adc
xchg
and
in
add
jae
mov
jmp
dec
inc
mov
rcr
repnz
ss
out
retf
add
pop
aaa
mov
pop
add
and
cmps
xchg
sbb
pop
call
cmps
call
ins
and
sub
nop
shl
xor
lock
pop
push
cdq
jmp
mov
cs
inc
or
adc
repnz
pop
inc
xchg
fnsave
jle
inc
cmp
jge
add
add
xor
dec
add
mov
loope
sbb
icebp
inc
push
cld
adc
test
cmps
fldcw
out
sahf
pop
inc
neg
add
cmp
sub
int
fldcw
or
sub
test
rcl
inc
dec
(bad)
pop
pop
dec
adc
or
cli
dec
into
adc
out
out
popf
retf
dec
push
mov
add
push
xchg
jecxz
push
or
xor
jl
xor
mov
jmp
retf
es
pop
test
loope
dec
rcl
shr
hlt
jbe
inc
jge
pop
push
sti
addr16
retf
mov
outs
inc
cmp
sub
and
sub
loop
jmp
or
sub
fs
(bad)
test
mov
mov
jo
hlt
add
pop
cmp
out
pop
mov
inc
popf
sub
lahf
(bad)
mov
in
iret
cld
mov
(bad)
cmp
mov
mov
xor
add
xchg
sub
xlat
aaa
mov
mov
sbb
jecxz
mov
inc
push
xchg
fimul
push
cmp
mov
nop
cmp
push
popa
sti
and
mov
sub
aam
cmp
in
es
fs
out
(bad)
(bad)
mov
push
outs
je
or
mov
dec
push
mov
xchg
jae
popa
push
inc
jb
push
jnp
add
daa
arpl
bound
inc
test
ror
not
stc
fs
retf
push
bound
adc
jns
add
jno
daa
shl
xchg
xchg
xor
call
sub
cs
xchg
(bad)
xchg
xchg
in
push
hlt
pusha
and
jl
lea
outs
(bad)
cmps
or
inc
bound
push
pop
cmp
push
pop
lods
and
mov
mov
dec
adc
popa
xor
mov
stos
sbb
movs
into
cmps
pop
retf
loopne
pop
nop
repz
enter
mov
jnp
adc
stos
dec
mov
sbb
xchg
xchg
fsub
pop
push
sub
repnz
push
jbe
fucomi
mov
push
jle
aaa
or
xchg
scas
jnp
cmp
sar
fs
fs
or
mov
sbb
fistp
mov
ds
enter
fbstp
push
outs
inc
adc
ja
out
adc
(bad)
inc
and
jmp
add
or
(bad)
stos
clc
shl
test
jno
push
jbe
cmp
push
inc
cmp
push
pop
std
xor
and
or
xor
cmp
lds
call
xchg
fsub
in
or
popa
cmc
sub
dec
into
adc
jmp
jle
xchg
xor
jbe
sub
call
aad
add
scas
mov
jns
mov
int
jmp
cli
pop
leave
or
add
shr
lds
mov
add
add
mov
xor
ds
dec
fimul
clc
daa
lock
les
cmp
test
std
popf
repnz
add
mov
enter
inc
test
daa
dec
cmc
loope
enter
test
jae
mov
xchg
jns
jae
add
ss
sub
pusha
pop
xor
in
imul
xchg
outs
cdq
sub
test
(bad)
in
iret
mov
(bad)
movs
pop
mov
jae
test
pop
push
xchg
mov
pop
fistp
test
mov
jae
arpl
clc
push
inc
(bad)
int
sbb
into
scas
sub
aas
test
xchg
mov
add
fs
cmp
mov
or
xor
sbb
jmp
mov
fld
dec
or
push
je
jg
das
inc
fadd
pop
lahf
div
xchg
aaa
xor
nop
jle
dec
or
std
not
outs
add
in
ss
outs
dec
push
pop
test
test
sbb
cmp
jp
shl
nop
inc
or
sahf
and
and
dec
loope
inc
in
sbb
xchg
fdivr
add
repnz
pop
repz
lock
xlat
add
aad
and
pop
xlat
push
gs
sbb
adc
xchg
pop
or
out
add
les
shr
fistp
sti
mov
mov
pusha
sar
scas
mov
xchg
mov
adc
scas
pop
sbb
lea
mov
jp
xchg
pop
mov
popa
ret
pop
cdq
push
pop
movs
ror
mov
test
(bad)
cs
inc
sbb
push
inc
pop
popa
inc
call
scas
dec
test
adc
out
cli
jg
mov
or
sbb
mov
push
adc
mov
push
adc
(bad)
mov
xchg
mov
pop
pop
mov
sub
jl
mov
(bad)
cld
adc
sbb
sub
dec
ret
inc
clc
push
sub
test
mov
pushf
mov
add
push
cmc
int3
cmp
push
push
loope
add
je
das
push
push
pop
jg
std
jle
stos
cmc
pop
push
pop
fdiv
das
sub
sti
push
cli
and
rol
jmp
inc
dec
fstp
push
push
iret
pop
pop
inc
out
mov
ret
mov
and
js
mov
scas
xchg
sbb
add
and
jp
cmps
movs
adc
(bad)
imul
cmp
pop
or
fwait
push
(bad)
rcl
or
pop
(bad)
imul
fadd
clc
test
stos
int
lods
mov
in
arpl
push
shr
xor
mov
push
xchg
mov
aas
cmp
jl
xchg
dec
scas
data16
dec
nop
sahf
ret
test
lds
test
push
ficomp
dec
sub
in
pop
push
mov
jle
stc
lea
push
aaa
sub
loop
repz
lock
fidivr
cli
inc
pop
rcl
sti
pop
dec
movs
jo
dec
cmps
lods
enter
mov
cmp
inc
dec
jl
inc
call
mov
movs
addr16
fsubr
cwde
inc
sub
fsubr
xchg
ret
sub
jmp
add
ficomp
ja
sub
xor
adc
or
adc
or
jne
data16
mov
movs
inc
fisttp
shr
rol
sbb
jns
sbb
imul
lds
or
mov
sahf
aaa
shl
pop
fst
jbe
into
push
jmp
(bad)
sbb
jp
mov
fdiv
cmp
dec
mov
loopne
lahf
mov
mov
mov
loopne
ds
xchg
fwait
idiv
dec
push
scas
or
out
ss
ds
dec
pop
dec
jmp
pop
cmp
pushf
mov
dec
test
or
jbe
in
push
jmp
mov
xor
jp
pop
sub
jae
fisub
fdiv
and
out
retf
sahf
jmp
mov
or
bound
movs
xor
mov
pop
inc
lods
jo
cmp
sub
inc
cmp
or
fsub
(bad)
push
mov
aas
sub
adc
cmp
loopne
imul
popf
dec
lds
ror
push
xchg
jb
cmp
int3
mov
mov
xchg
das
add
(bad)
xchg
xchg
xchg
inc
mov
mov
xor
fs
inc
loope
cmp
cwde
cli
aas
or
jmp
pop
and
rcl
mov
adc
mov
mov
and
push
jb
(bad)
add
aad
(bad)
jmp
repz
xchg
xchg
sbb
and
sti
shl
sub
sub
pop
enter
pop
out
xchg
stos
out
inc
push
lods
sub
fsubr
xor
outs
jae
(bad)
dec
and
cdq
stc
xchg
mov
inc
or
mov
mov
int3
add
jge
je
lods
xor
into
xor
call
movs
fisubr
pusha
sub
adc
retf
sbb
call
out
pop
je
out
pop
(bad)
pop
in
inc
jmp
inc
mov
shl
push
mov
cmc
xchg
stos
rcr
inc
cld
xlat
jge
(bad)
retf
rcr
push
sbb
jle
adc
aam
imul
(bad)
mov
mov
adc
daa
in
jns
or
cmp
ret
jmp
xchg
add
mov
push
fnsave
cmp
aaa
fwait
mov
sti
neg
xchg
fimul
xor
adc
clc
loop
(bad)
xor
ja
mov
dec
fisubr
or
sub
cmp
repz
ja
jns
jle
xchg
aas
test
mov
push
aaa
ja
jno
(bad)
cmp
out
push
cld
in
icebp
mov
test
jns
call
shr
push
je
jbe
mov
dec
mov
jbe
repz
jecxz
sub
and
daa
outs
dec
sbb
imul
mov
mov
fs
xchg
mov
dec
outs
pusha
retf
lahf
std
sahf
jl
out
mov
jne
es
cli
ja
jo
mov
loopne
sbb
fimul
sbb
xchg
inc
icebp
sbb
fwait
ret
in
mov
std
sbb
dec
mov
dec
sbb
lds
cmp
push
icebp
aaa
adc
or
xor
and
(bad)
(bad)
out
mov
xchg
test
add
loopne
in
inc
jge
push
enter
or
mov
out
loope
aad
sub
fimul
js
push
ins
fst
out
repz
dec
scas
jp
mov
mov
adc
shl
loop
aam
ins
jne
(bad)
fisttp
rol
jecxz
mov
(bad)
cmps
inc
int3
cmp
cmp
jnp
mov
cmc
clc
scas
rol
rol
push
fucomp
add
lods
adc
mov
fmul
jb
(bad)
sar
xlat
inc
mov
inc
dec
inc
fdiv
inc
adc
mov
adc
sub
add
and
xor
sub
mov
xchg
xor
hlt
push
ror
sub
adc
jns
xor
jmp
int
in
pop
ficom
mov
setb
sbb
lods
or
xchg
or
test
pop
sbb
mov
lock
or
stos
xchg
enter
sub
inc
lds
and
pusha
fsub
cmp
dec
in
(bad)
aaa
pop
int3
cs
adc
jns
add
cwde
stos
int
push
mov
sub
cwde
fst
mov
rcr
sub
jle
nop
or
ret
push
inc
sbb
xor
jl
mov
(bad)
in
mov
push
clc
adc
std
xchg
jl
aam
rcr
sbb
inc
in
cmps
cmp
loop
popf
push
fcom
and
nop
or
jo
pop
mov
out
xor
push
cmp
aam
sub
sub
jne
addr16
leave
(bad)
scas
jle
repz
push
cmp
hlt
int
pop
inc
test
push
xor
mov
fadd
fist
fwait
push
jne
(bad)
and
pusha
in
leave
call
sub
dec
inc
xor
add
push
fwait
repnz
repnz
ss
mov
out
mov
jae
enter
cld
push
es
mov
repz
stos
popf
xchg
sbb
jo
mov
rcr
movs
push
jno
and
jbe
mov
idiv
inc
mov
mov
repnz
cdq
xor
push
lds
adc
inc
mov
or
in
jno
lds
cmp
stos
(bad)
lock
push
test
leave
xor
ror
repnz
inc
inc
pop
cmp
dec
ja
cli
push
out
push
push
mov
jge
mov
ret
test
lahf
mov
rol
cmp
cmp
inc
sar
neg
push
xchg
mov
xchg
loop
aad
aam
pop
dec
xchg
mov
dec
aaa
xor
icebp
pop
hlt
jecxz
mov
jl
cmp
mov
and
xchg
(bad)
sahf
cmps
push
dec
jmp
inc
aas
pop
sbb
pop
jl
cdq
xor
pusha
pop
loop
hlt
dec
sbb
ins
aad
stos
lock
or
cmc
and
fsub
and
jae
cmp
dec
push
mov
push
mov
rcr
out
cmp
add
cmps
inc
mov
push
cmc
shl
xchg
pop
lods
inc
int
adc
fs
jb
retf
mov
popf
and
inc
cmp
add
popf
and
movs
cli
mov
push
and
in
pcmpeqd
int
push
dec
mov
ror
adc
std
pop
add
sti
lods
mov
call
dec
fucomip
push
das
ficom
cwde
jno
call
icebp
push
out
dec
stc
ficomp
mov
cmps
sar
leave
(bad)
push
jp
pop
mov
sti
xchg
cld
dec
cdq
in
ret
sbb
test
mov
sbb
inc
out
mov
push
and
test
xor
sbb
mov
loopne
aam
call
push
ss
push
fs
repz
scas
xor
test
movs
mov
sbb
repnz
loop
mov
aad
pop
(bad)
lds
outs
push
jb
adc
and
push
enter
add
xchg
adc
(bad)
fnstsw
dec
inc
rep
daa
pop
pop
retf
mov
iretw
aas
div
mov
mov
cs
add
lods
iret
jne
aas
or
(bad)
aam
hlt
xchg
jae
aam
leave
out
and
les
scas
fbstp
pop
pop
fcmovne
dec
stc
loope
imul
push
cmp
jmp
and
popa
adc
out
in
lock
pop
dec
or
mov
jmp
inc
retf
ins
out
fst
daa
xchg
(bad)
cmc
gs
sub
shl
add
jno
mov
outs
mov
addr16
inc
dec
xchg
xor
out
sub
out
xchg
mov
and
shl
imul
xchg
jge
test
pop
inc
xchg
or
clc
ret
test
and
push
or
mov
mov
push
mov
dec
or
mov
shr
cs
xor
mov
cmp
addr16
cdq
sbb
iret
sub
test
adc
jbe
sbb
stos
cmp
mov
and
and
sbb
adc
loop
dec
mov
mov
sbb
cld
in
test
mov
or
mov
adc
imul
pusha
sbb
ret
sbb
stc
stc
sub
