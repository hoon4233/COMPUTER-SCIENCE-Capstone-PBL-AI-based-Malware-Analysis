ds
add
add
add
retf
add
add
add
jo
sti
repnz
out
popa
stos
fisub
repz
movs
dec
mov
sub
or
cwde
in
test
mov
lock
mov
jg
stc
int
loop
aaa
mov
fadd
rcl
push
fild
sub
jge
and
sbb
jge
movs
push
call
sub
stos
fmul
retf
jmp
mov
loop
outs
lahf
xor
addr16
fwait
nop
call
shl
gs
add
mov
popf
xchg
mov
out
push
inc
pop
ret
out
jp
sub
sbb
leave
jmp
xchg
add
mov
aad
jae
mov
ret
jnp
test
cmp
outs
push
call
clc
stc
ds
cmps
out
dec
push
cmp
xor
sbb
push
fcmovne
or
add
fdiv
mov
shl
pop
inc
mov
xchg
or
mov
sbb
retf
movs
jns
add
sub
(bad)
iret
jmp
dec
fild
cld
jo
jg
jae
sub
add
fimul
int
(bad)
clc
fnstsw
out
xchg
fcom
aad
dec
or
dec
pop
ret
xchg
out
sub
jecxz
sbb
movs
shl
gs
inc
mov
imul
shr
in
loopne
shl
loop
add
paddb
scas
test
int3
lock
call
push
sahf
je
shr
fbstp
rcr
mov
(bad)
and
push
loopne
and
xchg
push
scas
stos
mov
test
cli
aas
push
push
scas
jecxz
push
rcr
scas
sbb
add
dec
out
push
ror
fstp
sti
fistp
xchg
jno
ss
movs
xchg
movs
shr
fisubr
or
in
int3
pop
test
mov
ins
dec
push
sbb
test
push
enter
sbb
stos
push
mov
mov
fldenv
pop
fwait
xor
pop
arpl
cmc
fisttp
mov
lods
mov
sbb
mov
hlt
in
adc
xor
add
or
rcr
stc
loop
je
xchg
add
jbe
cmp
dec
and
sti
pop
dec
mov
dec
movs
int3
mov
adc
sub
mov
add
xchg
xor
cli
sbb
mov
mov
js
add
ret
add
jns
sub
jns
pop
xlat
ss
test
inc
lock
jp
es
aaa
mov
cmp
test
les
add
hlt
scas
fcom
pop
mov
jg
sbb
inc
shr
push
adc
adc
gs
lds
xchg
mov
pushf
popf
sbb
ror
pop
int3
jbe
mov
mov
pop
jl
sbb
pop
movs
xor
jae
xlat
popf
xchg
pop
call
into
loopne
aad
jae
test
ss
mov
push
push
fmul
fld
test
push
ficom
retf
out
adc
outs
mov
cmp
cmp
loop
jecxz
mov
adc
nop
and
xchg
popa
scas
(bad)
loope
sub
stos
push
sbb
jp
xor
shl
(bad)
rol
mov
pop
cwde
shl
jg
out
ins
cmp
nop
mov
setg
jno
fcom
ins
sub
loopne
push
ins
jle
test
xchg
ds
mov
dec
xchg
lods
sbb
lds
(bad)
xchg
imul
cmp
jns
mov
inc
fnstcw
adc
push
fld
push
les
inc
je
mov
dec
add
mov
add
pop
or
pop
outs
je
pop
es
nop
jb
ret
mov
or
out
cld
cdq
inc
pop
pop
inc
fnstenv
adc
pop
jns
fadd
and
bnd
sbb
fsubrp
bound
cmp
(bad)
xchg
jp
sub
stc
dec
in
push
dec
les
loopne
jb
ret
add
jno
repnz
das
ror
daa
push
mov
pop
dec
enter
div
or
nop
nop
fdiv
pop
pop
(bad)
aam
xchg
inc
cmp
jg
fidiv
pushf
pop
je
(bad)
movs
icebp
not
push
xor
(bad)
jns
mov
(bad)
loopne
ret
sbb
in
and
dec
out
ret
and
xchg
jns
fistp
lds
mov
std
mov
add
push
test
arpl
fsub
dec
into
out
adc
mov
inc
in
daa
test
(bad)
xor
das
lahf
(bad)
or
pop
pop
push
inc
pop
mov
push
xor
aam
retf
outs
xor
loop
pop
xor
stos
push
xchg
cmp
cli
jle
(bad)
xchg
in
je
inc
fcmovnu
ja
mov
(bad)
mov
test
jmp
xchg
mov
ret
sub
add
xchg
les
sbb
pusha
movlhps
mov
mov
pop
xchg
sbb
cmc
xchg
xor
test
push
mov
add
pop
jecxz
mov
in
(bad)
in
pushf
pop
mov
or
push
fstp
push
pop
int
and
in
ds
mov
scas
test
pop
stos
rol
lds
push
or
xor
cmc
xor
lods
aaa
movs
das
cmp
sub
pusha
mov
adc
xchg
(bad)
cmc
push
in
std
aam
test
cmp
jns
sub
aas
adc
pop
or
or
stos
sar
mov
mov
test
dec
test
xor
push
test
cli
sti
or
push
stos
mov
es
jmp
gs
and
jne
cmps
xchg
js
adc
jmp
pop
mov
lock
cdq
repnz
popf
outs
cs
or
loope
push
sub
in
jecxz
add
pop
or
and
in
pop
inc
ss
(bad)
in
xor
mov
call
inc
test
push
and
inc
das
dec
push
shl
sub
and
shl
sti
pop
and
add
loop
push
int3
add
inc
mov
mov
adc
je
jnp
shl
out
cdq
test
pop
ret
repnz
out
icebp
mov
or
outs
xor
clc
(bad)
mov
mov
push
loope
mov
push
js
mov
(bad)
mov
cmc
out
mov
comiss
push
xchg
pop
(bad)
(bad)
imul
and
inc
or
out
jbe
inc
inc
sbb
push
mov
fs
enter
and
sbb
test
in
dec
adc
les
mov
aaa
ret
sub
dec
iret
dec
scas
js
test
mov
push
mov
mov
jecxz
inc
mov
push
(bad)
mov
mov
dec
push
xchg
jb
(bad)
cmp
sub
inc
ret
pushf
(bad)
cmp
pop
lods
xor
jns
sbb
in
mov
call
fwait
pop
sbb
lahf
hlt
sub
pop
inc
shr
dec
test
icebp
out
mov
data16
jle
repz
inc
ret
arpl
jl
sub
adc
neg
popa
fidivr
lahf
xor
shl
xchg
pop
xor
sub
jnp
nop
pop
cmp
cmp
add
sbb
jl
arpl
inc
fsub
lahf
into
sub
xor
mov
mov
nop
xor
jmp
push
(bad)
in
or
push
ins
sbb
dec
pushf
and
dec
inc
ss
or
mov
jb
inc
pop
inc
shl
push
mov
or
movs
imul
repz
rcr
mov
jge
add
cdq
pop
lods
(bad)
cmp
mov
movs
pop
inc
xor
ins
stc
out
push
jmp
pop
int3
pop
(bad)
punpckhdq
sub
or
xchg
push
push
in
leave
call
fdiv
cwde
lods
test
ja
sar
das
xor
retf
fcom
fs
add
ins
jno
lahf
(bad)
or
mov
jo
add
or
cmc
scas
and
pushf
xchg
cli
dec
xchg
call
in
mov
mov
inc
xchg
ins
mov
lea
jmp
test
cmps
add
push
cmp
lea
jmp
adc
and
adc
(bad)
push
mov
stc
dec
sti
popa
clc
(bad)
fisttp
retf
aad
je
repz
jmp
fwait
ret
jb
pop
lods
xchg
jl
lods
sbb
ss
and
xchg
neg
adc
xchg
sbb
ret
mov
sti
imul
(bad)
jmp
lods
mov
dec
dec
inc
push
icebp
ret
add
mov
sub
movsx
sbb
mov
out
add
pop
xchg
add
pop
outs
push
popa
sub
push
xchg
es
sub
sub
xor
cdq
or
les
rcl
test
ins
sub
inc
sbb
mov
fst
pushf
std
xor
arpl
test
cmp
sbb
les
(bad)
jbe
inc
jbe
popf
jns
daa
sub
mov
or
mov
sti
aas
sbb
fadd
mov
aas
mov
sar
out
cmp
mov
pop
nop
cmps
add
push
mov
mov
sbb
lods
dec
cmc
ja
mov
inc
xor
sub
data16
xchg
xor
inc
outs
inc
ret
dec
into
mov
bound
outs
push
imul
cmp
(bad)
shr
clc
jns
and
mov
push
nop
dec
or
out
dec
dec
or
dec
les
cs
mov
rol
fnstenv
leave
adc
sub
fidivr
and
test
push
fwait
inc
xchg
cld
sti
sub
inc
xchg
inc
test
movs
push
jnp
(bad)
pop
div
jmp
inc
bswap
das
(bad)
dec
test
aas
pop
or
xor
loope
hlt
repnz
jecxz
cmp
push
dec
push
popf
std
adc
mov
jns
xor
test
cmps
fwait
sbb
jl
jmp
xchg
inc
ror
out
out
mov
das
icebp
dec
push
lods
xlat
icebp
scas
adc
jg
add
sub
mov
mov
and
or
pushf
mov
cli
dec
sbb
mov
cmps
add
jns
repnz
mov
and
adc
dec
sbb
lar
cmp
xor
pop
push
pop
cmp
mov
cmc
mov
sub
jns
outs
cs
sub
call
ficom
popa
or
adc
adc
or
(bad)
push
loopne
inc
int
add
cmps
movs
adc
sub
mov
sub
jae
jae
push
dec
push
es
xor
cld
inc
add
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
ja
ficomp
movs
adc
lods
dec
mov
addr16
aam
mov
fistp
dec
pop
aaa
(bad)
dec
cmp
shl
mov
cmps
adc
mov
pop
popa
adc
pop
aad
inc
aam
inc
test
dec
mov
retf
push
add
ss
or
mov
jmp
cmps
adc
xchg
or
(bad)
cli
(bad)
sub
data16
repz
xor
scas
jle
xchg
pop
jae
cmc
push
lock
mov
mov
pop
cmp
into
lods
xchg
loope
popa
mov
or
cmps
sti
add
inc
xchg
loope
shr
push
xchg
andnps
push
push
add
pop
xor
(bad)
cmc
push
adc
pop
aaa
cdq
pop
mov
jl
mov
jno
ins
xor
test
not
cmps
test
or
pop
jne
fwait
sbb
pop
int
pop
pcmpeqw
sbb
dec
aad
int3
mov
popa
mov
jl
das
jle
adc
mov
je
imul
(bad)
into
test
into
fistp
test
push
dec
in
push
out
push
mov
retf
sbb
mov
cmp
mov
scas
pop
or
sbb
mov
out
dec
lea
push
std
pop
retf
adc
add
int
ror
add
jo
test
shl
sub
je
cmp
fimul
dec
or
lods
or
outs
fstp
xchg
add
lods
adc
xor
(bad)
das
adc
xor
mov
inc
loopne
repz
dec
into
aad
xchg
outs
mov
dec
lahf
push
dec
jle
loopne
dec
xchg
shl
repnz
(bad)
lahf
adc
(bad)
mov
add
adc
test
shl
pop
(bad)
pop
jg
fbstp
iret
fcomp
fcomp
(bad)
ret
mov
in
aam
pop
into
outs
mov
frstor
inc
sti
add
add
mov
(bad)
mov
int3
inc
dec
aad
xor
cs
xlat
dec
js
add
jp
sbb
push
(bad)
out
push
shl
jl
jl
aad
sbb
mov
das
cmp
dec
cmp
pop
mov
cs
ds
and
add
movs
jecxz
lahf
test
pop
dec
mov
cmp
mov
dec
xor
xor
stc
jne
ret
or
daa
pop
cmp
int3
add
dec
lea
shr
imul
cmp
adc
lock
dec
mov
inc
leave
cmp
mov
(bad)
cwde
push
inc
pop
adc
es
or
je
test
push
leave
sub
sti
or
pop
stos
pop
cdq
daa
inc
retf
jmp
dec
lock
or
mov
inc
mov
cmp
(bad)
movs
das
adc
xor
hlt
sbb
nop
(bad)
es
lock
dec
es
ror
inc
scas
sub
inc
shr
push
hlt
ficomp
sbb
inc
jle
idiv
gs
lods
fwait
jbe
push
sub
jns
push
or
mov
mov
out
xor
in
stos
push
mov
mov
mov
jecxz
sub
popa
mov
scas
stos
fidiv
sti
xor
pop
rol
mov
rcr
pop
cmps
ds
cld
jl
xor
mov
les
sbb
jnp
dec
ins
les
fxch
and
jns
or
mov
ds
xchg
mov
std
mov
mov
inc
aam
adc
seto
mov
mov
es
cmp
ficom
clc
popf
adc
and
arpl
or
jb
test
or
lock
xor
jnp
inc
cdq
mov
inc
push
adc
call
mov
pusha
(bad)
add
sbb
mov
jo
cmp
jbe
mov
(bad)
loop
imul
push
add
pop
jle
das
add
das
lahf
addr16
fadd
mov
cmp
test
int3
outs
cs
push
aad
fcmovu
stos
iret
mov
enter
or
mov
ins
hlt
sar
es
addr16
mov
cwde
out
in
scas
retf
mov
add
inc
sub
lock
imul
inc
jmp
inc
cmp
into
sub
mov
xor
jbe
inc
ret
pop
lds
lods
dec
(bad)
mov
retf
cdq
mul
mov
movs
mov
call
push
lods
addr16
xor
mov
mov
fcomp
in
adc
push
das
shr
fidiv
jno
add
adc
sbb
inc
cmp
stos
pop
in
aaa
jno
aaa
dec
test
shl
and
fcmove
xchg
pop
pop
xor
sbb
ficom
aad
(bad)
inc
js
shl
cmp
sub
call
dec
jl
lods
(bad)
clc
je
and
(bad)
sub
inc
dec
dec
mov
cmp
mov
dec
sbb
clc
aam
mov
in
push
inc
cmp
outs
mul
cmps
mov
push
xchg
sbb
(bad)
cmps
jae
pop
xchg
or
mov
add
and
rcr
add
int
dec
xchg
mov
test
enter
in
inc
stos
stos
or
cli
push
leave
add
adc
cmp
mov
fisttp
cmp
int3
addr16
mov
add
lods
stos
icebp
sub
and
and
sbb
ret
ins
mov
add
jmp
xchg
js
xchg
clc
mov
outs
mov
dec
xlat
cmp
fs
xor
lahf
ret
adc
iret
mov
test
cdq
pop
imul
fbstp
data16
pop
mov
cmp
fnstcw
std
inc
mov
adc
mov
and
(bad)
cmp
mov
push
adc
in
ja
pop
scas
and
dec
and
push
repz
mov
cmp
int3
ret
jp
mov
mov
ret
mov
les
fidiv
push
je
mov
outs
mov
test
xor
adc
(bad)
pop
inc
mov
sbb
ror
xchg
jae
mov
pop
or
jmp
imul
test
xchg
push
inc
mov
xchg
jmp
call
(bad)
adc
outs
or
xchg
in
je
sbb
call
lods
out
sbb
and
cs
xor
hlt
stos
in
xchg
aad
inc
and
ret
xor
jbe
jmp
enter
cld
cmps
les
retf
loopne
push
jmp
cmp
daa
out
sbb
stos
and
pop
adc
nop
inc
aaa
push
mov
push
imul
mov
fiadd
pusha
clc
and
push
jmp
sub
push
inc
mov
xchg
push
out
repz
pop
cmp
adc
xor
imul
mov
inc
inc
sti
and
jg
jge
pop
xor
push
add
leave
mov
dec
cs
adc
jnp
cmc
dec
ins
cmp
inc
pop
xor
jle
popa
stos
inc
mov
mov
(bad)
int3
jmp
stos
std
adc
fcom
daa
retf
jg
xor
jp
pop
jo
(bad)
mov
lahf
xor
pop
mov
xchg
pop
repnz
xchg
xor
je
push
inc
inc
fwait
mov
scas
xlat
ret
pusha
jno
add
dec
pop
sbb
rcr
in
inc
lea
push
mul
push
into
inc
scas
fdecstp
push
push
repz
call
adc
enter
repnz
push
fimul
mov
mov
popf
sub
pop
or
push
sbb
cld
sar
jmp
add
out
sub
push
(bad)
pushf
(bad)
push
and
jl
or
lock
push
push
jns
dec
fld
rol
mov
rol
movs
ds
fidiv
push
xor
or
and
mov
xor
mov
daa
mov
gs
sub
cs
mov
xor
mov
jecxz
pushf
dec
mov
xchg
addr16
int
fmul
enter
push
in
dec
dec
jg
test
and
cs
mov
mov
cli
aas
addr16
fsubp
and
loop
test
jge
cmp
xchg
xor
je
xchg
inc
sbb
mov
push
cdq
sub
or
mov
ja
or
es
shl
cmp
fidiv
shl
sysexit
xchg
lods
sbb
mov
and
(bad)
loopne
sub
fs
inc
pop
imul
test
or
retf
mov
mov
mov
push
outs
pop
pop
push
mov
cmp
fwait
movs
aad
std
sbb
pop
mov
popf
push
js
jle
int3
outs
retf
or
push
shr
push
lds
sbb
cwde
jmp
popa
rol
in
repz
inc
and
sub
mov
xor
mov
test
mov
inc
cli
ss
je
lods
in
daa
push
pusha
loop
push
sbb
dec
adc
xchg
adc
sub
cmp
clc
dec
mov
mov
mov
std
mov
xor
xchg
ss
fwait
cmps
stc
(bad)
(bad)
mov
mov
xor
jns
push
inc
add
pushf
rcpps
sbb
mov
cs
mov
int3
test
or
fcmovnbe
in
jp
out
std
(bad)
pop
mov
imul
je
pop
sub
arpl
das
popf
nop
inc
inc
mov
xchg
xrelease
mov
xor
mov
adc
rol
int3
bound
adc
mov
jl
in
ror
ror
mov
push
adc
sti
mov
movs
ror
push
and
dec
sub
inc
jp
mov
retf
adc
retf
out
je
popa
adc
xchg
pop
jl
xlat
jmp
(bad)
mov
cmps
dec
jo
in
cld
loop
stos
xchg
cdq
mov
mov
sbb
enter
out
or
scas
sbb
adc
xchg
xor
sbb
in
push
mov
fadd
dec
and
mov
rcr
and
es
call
cwde
pmaddwd
shr
inc
pop
xor
test
sbb
(bad)
addr16
lock
sti
jae
mov
and
sbb
(bad)
adc
enter
lds
sbb
lods
sub
adc
ja
aad
push
fldenv
xchg
xchg
xor
fcom
mov
aas
cs
push
test
mov
push
and
mov
mov
rol
mov
push
neg
add
popa
rcr
std
push
out
pop
push
into
fisub
dec
mov
jg
imul
idiv
cmp
ds
ficom
xor
repz
call
inc
mov
cmps
retf
jge
adc
pop
stc
jle
xchg
xlat
sbb
cmps
and
int3
test
mov
leave
adc
xlat
iret
push
add
or
jbe
aas
add
mov
mov
repz
cmp
(bad)
jmp
adc
xchg
(bad)
es
jae
xor
jmp
test
imul
xchg
addr16
mov
adc
dec
cs
xchg
xchg
xor
enter
call
jmp
call
cmp
(bad)
dec
jmp
cmps
movs
fcmovbe
in
mov
(bad)
xor
sub
xchg
pop
jbe
push
les
or
loopne
jns
adc
jle
inc
ins
push
(bad)
ins
(bad)
push
arpl
fwait
(bad)
mov
repz
adc
pushf
jecxz
adc
xchg
rol
inc
call
sar
in
shl
adc
inc
fmul
xlat
inc
dec
aas
mov
addr16
or
pusha
mov
test
cmp
aas
push
sub
add
jecxz
movs
sbb
das
fsub
push
clc
mov
xchg
pushf
shl
mov
dec
loope
sub
ins
repz
jmp
mov
rol
scas
dec
nop
mov
div
push
xor
leave
fdiv
adc
sbb
and
inc
or
cli
mov
xchg
add
(bad)
int3
fmul
sub
leave
mov
fistp
test
cdq
out
xor
cmp
lods
shr
adc
out
pushf
rcr
mov
fbld
jmp
dec
mov
dec
jmp
dec
mov
aas
ja
jp
pop
outs
jae
mov
and
pop
sbb
jg
mov
push
cwde
or
retf
hlt
jbe
inc
js
sbb
and
(bad)
rcr
xor
inc
xor
push
mov
(bad)
adc
mov
outs
jmp
inc
nop
cmp
mov
in
dec
pop
add
mov
test
push
or
jg
xchg
movs
adc
jecxz
loop
loope
xchg
pop
and
pop
rcr
(bad)
ja
loope
jbe
(bad)
mov
lods
hlt
std
rol
clc
push
mov
mov
es
ss
mov
aam
dec
dec
dec
push
ficomp
pusha
es
int
addr16
clc
add
aam
loop
call
es
scas
jbe
inc
jecxz
and
je
icebp
xor
clc
sbb
dec
mov
jno
push
mov
dec
cmps
inc
shr
mov
mov
pop
es
stc
or
ficom
test
dec
dec
test
ret
lock
mov
mov
(bad)
das
outs
nop
leave
int
sbb
sbb
xchg
leave
jne
push
add
lock
inc
lea
push
rcr
cmp
xor
movs
sub
xor
lea
lock
pop
push
(bad)
rcr
push
test
cmp
pop
push
das
mov
aas
out
mov
(bad)
js
in
mov
stos
stc
xor
or
div
loope
xchg
dec
sub
sar
adc
ror
and
aam
in
xchg
fstp
cld
in
js
scas
fcmovb
or
push
int3
fs
nop
test
das
cdq
or
cmp
cmc
lahf
cdq
call
stos
idiv
sbb
pop
enter
xor
sub
das
xchg
xlat
test
pop
sahf
jecxz
inc
data16
nop
adc
movs
je
retf
test
lods
or
ret
push
dec
adc
xchg
fcomp
push
icebp
xchg
jne
sub
pop
lods
or
pop
and
xlat
daa
popa
dec
rcr
lock
sbb
imul
aam
push
lea
add
je
out
es
(bad)
ins
jg
add
sub
leave
test
lods
mov
xor
loop
jecxz
ins
test
cmp
sub
leave
test
stos
mov
inc
repnz
inc
adc
fnsave
shl
xchg
js
push
jno
adc
mov
sbb
nop
inc
jnp
mov
inc
pop
sbb
adc
or
(bad)
fild
cmp
js
scas
arpl
pusha
push
inc
ds
and
mov
daa
and
mov
mov
cmp
sahf
scas
dec
cmp
push
es
out
movs
call
or
mov
imul
xor
push
inc
lods
sbb
cmp
and
inc
adc
aas
loop
mov
xor
jb
mov
add
push
jno
outs
and
loopne
icebp
inc
data16
jbe
stos
aaa
and
popa
jg
(bad)
cld
or
ret
mov
(bad)
leave
adc
pop
lahf
ja
jmp
test
cmp
push
arpl
push
inc
pusha
cmps
das
outs
loopne
int
pop
dec
push
test
push
loop
add
mov
sbb
jo
mov
mov
cmp
stc
xchg
add
call
adc
mov
test
stc
or
cmp
jmp
test
sub
dec
sub
jecxz
das
aas
jbe
sbb
neg
add
cmp
retf
dec
adc
ss
movs
mov
mov
rcr
cmp
lock
jp
lods
mov
mov
cmp
mov
xchg
and
cmp
or
cld
mov
call
mov
adc
out
xchg
or
scas
call
inc
pop
aaa
inc
out
rcl
lock
jb
stos
pop
inc
mov
mov
fs
or
rcr
sub
add
cmp
scas
pop
fcmovbe
xchg
adc
dec
jmp
cmp
adc
jne
stos
(bad)
push
stos
cmp
out
inc
lds
sbb
push
std
xlat
loopne
imul
sbb
out
je
addr16
xchg
inc
sub
mov
loopne
mov
loop
hlt
jg
cmps
into
shl
dec
or
xor
rcr
in
pop
adc
movd
ret
mov
cmp
push
stc
sub
dec
and
lahf
mov
repnz
addr16
imul
fmul
in
pop
imul
retf
retf
retf
call
fs
adc
fnstenv
in
add
mov
adc
jb
mov
adc
push
out
mov
sub
sub
jns
mov
mov
fisubr
xchg
push
hlt
shl
dec
addr16
mov
push
add
ins
cmp
and
mov
les
(bad)
pusha
push
cmp
ret
icebp
jnp
push
xor
mov
sub
cmp
xchg
or
scas
mov
clc
jo
sub
xchg
add
sbb
add
test
push
fadd
xor
lahf
cwde
out
pop
and
iret
push
test
retf
pop
xlat
jo
popa
xchg
xchg
sbb
mov
out
xchg
mov
xor
aad
mov
mov
popf
xchg
add
jecxz
fnstcw
icebp
sbb
in
cmps
push
jo
xchg
cmp
out
adc
fbstp
das
pop
cmp
shr
(bad)
loope
mov
push
adc
inc
fdiv
dec
xor
jno
xchg
xor
jae
cmp
inc
imul
inc
push
imul
repnz
idiv
pop
call
push
mov
and
loop
icebp
adc
aad
call
push
mov
mov
in
pop
xchg
test
pop
mov
clc
sbb
jle
or
nop
mov
mov
push
outs
sbb
aam
adc
outs
fldenv
stos
fidiv
or
adc
movs
push
je
jnp
push
xchg
movs
imul
add
daa
shl
mov
or
test
in
imul
and
add
clc
dec
iret
test
push
push
mov
cdq
pop
cld
repnz
daa
cmps
mov
jecxz
and
push
xor
dec
mov
rcl
test
mov
cmp
mov
out
movs
mov
and
push
push
lods
mov
mov
(bad)
sub
ret
sub
enter
cmc
xchg
sar
(bad)
out
cmps
mov
dec
inc
jle
xchg
mov
add
in
sbb
jae
mov
cmp
push
pop
lods
pusha
cmp
dec
imul
or
inc
pushf
pushf
addr16
jmp
sbb
xchg
jg
xor
outs
xchg
loope
into
pop
imul
cld
int3
sbb
dec
and
popf
sbb
mov
xchg
jnp
jne
or
stc
cmps
mov
pop
shl
(bad)
imul
inc
sbb
clc
sub
mov
jmp
jno
push
loopne
test
jne
or
movs
and
cmp
retf
or
stc
xlat
ret
cmp
lods
pop
jge
bound
lods
mov
fild
xchg
and
jb
out
inc
mov
push
adc
or
push
dec
jb
fisub
mov
test
popf
adc
fwait
push
mov
daa
mov
lods
adc
mov
mov
inc
jae
rol
cs
(bad)
jmp
stos
pushf
fistp
aad
dec
xor
neg
pop
ins
sar
cmp
mov
xchg
outs
sbb
outs
sahf
ret
inc
cmps
fwait
push
inc
push
jmp
jo
sbb
or
lea
leave
(bad)
push
addr16
sbb
sub
or
sbb
and
adc
add
xlat
push
int3
sbb
jmp
jl
adc
jns
add
pop
loope
mov
pushf
es
cmp
xchg
gs
and
pop
enter
ret
sbb
pop
retf
fucom
ss
fsub
push
jnp
stc
push
sbb
stos
ja
mov
loope
cli
push
mov
test
iret
pop
call
cmp
loope
jmp
sub
imul
aaa
je
fwait
rcl
xchg
mov
das
dec
cwde
dec
shl
and
add
(bad)
xlat
mov
rep
addr16
popf
scas
gs
adc
dec
dec
pop
fistp
or
mov
scas
jbe
test
push
and
sbb
(bad)
out
ffree
jp
mov
adc
push
cmpxchg8b
(bad)
enter
sub
bound
stos
jle
les
mov
imul
pop
xchg
cmp
test
bnd
dec
jmp
push
jbe
dec
push
and
push
sbb
add
test
enter
sbb
mov
and
mov
aas
in
inc
mov
cmps
sub
fsubr
stos
into
pop
push
push
stos
shl
lahf
ds
test
sub
sbb
retf
add
dec
pop
in
and
sahf
sub
icebp
xchg
sahf
movs
sbb
and
fidiv
pop
mov
push
or
xchg
aam
aaa
mov
push
test
or
movs
shl
lods
push
dec
imul
test
jge
xor
cwde
sbb
cli
in
xchg
bound
jl
iret
scas
mov
ret
dec
dec
inc
dec
(bad)
jecxz
cwde
popa
add
mov
jp
mov
adc
or
sub
push
inc
or
or
jl
mov
xchg
jne
cmp
mov
xor
hlt
dec
imul
inc
pop
pop
add
cmps
xchg
mov
jl
aad
cmp
mov
imul
add
pop
xchg
sbb
and
pop
mov
xor
and
sbb
jbe
mov
dec
icebp
sti
int3
mov
xchg
dec
call
call
cmps
pop
cmps
call
pslld
add
loopne
cmp
mov
cmp
addr16
stos
fwait
(bad)
and
sub
lds
enter
jnp
jmp
cwde
jbe
retf
cmps
fwait
inc
aas
in
xor
xor
int
imul
mov
lods
sahf
cmp
loop
pop
ret
jmp
popf
scas
scas
hlt
mov
sar
lds
lds
in
test
fcomp
add
int
mov
test
and
cmc
push
add
inc
dec
inc
ja
jmp
push
xor
mov
call
and
and
mov
lods
stc
nop
iret
xor
scas
loopne
cmp
xor
fist
jae
cmp
jo
xchg
gs
cdq
jecxz
test
pop
punpcklbw
dec
xlat
ret
into
test
or
sub
sbb
in
test
inc
sbb
outs
rol
push
mov
test
mov
mov
sbb
sub
xchg
mov
and
(bad)
arpl
add
movs
fist
push
(bad)
fs
pop
cld
pop
mov
pop
fs
push
jno
jge
ins
rol
out
pop
adc
mov
scas
cli
cmc
adc
sbb
xor
mov
cs
(bad)
aam
movd
stc
aad
xor
stos
fsub
imul
add
ins
addr16
and
lfs
or
jmp
movs
adc
xchg
inc
lods
sub
pop
sub
cmc
aad
in
cmp
popa
dec
cdq
in
rcr
test
(bad)
pop
lock
aaa
repz
pop
ret
lods
shl
aas
loope
or
in
xor
mov
(bad)
jmp
cmp
lods
std
repnz
or
dec
fcomp
sub
sub
in
xlat
dec
cmp
test
call
repz
sub
or
scas
pop
cmp
bnd
jae
or
popf
sbb
add
jb
mov
and
repnz
into
je
rcl
adc
in
jmp
dec
inc
mov
(bad)
sbb
(bad)
jnp
push
iret
or
data16
aad
or
add
stc
stc
cmps
pop
in
sahf
jns
cdq
mov
mov
sbb
retf
enter
gs
cmp
push
adc
jle
push
ss
jno
(bad)
jmp
xor
jbe
shl
adc
ret
inc
lahf
aaa
lea
(bad)
nop
dec
sbb
mov
or
dec
add
mov
stc
or
xchg
add
(bad)
xchg
cmps
int
nop
icebp
pop
(bad)
stc
inc
(bad)
cmp
retf
arpl
adc
popf
xor
push
std
dec
loop
ret
cmp
push
ret
je
ss
movs
in
mov
fnstenv
shl
mov
push
mov
imul
xchg
xchg
or
cli
push
les
mov
bound
repz
fnclex
inc
out
(bad)
jge
push
int3
adc
(bad)
in
popa
xchg
mul
dec
and
in
aam
call
and
movs
mov
add
jne
gs
push
jmp
adc
pop
leave
fsubr
pop
lock
dec
pop
or
js
dec
mov
ret
es
mov
mov
cld
mov
and
cdq
jno
xlat
sbb
call
mov
mov
stos
aaa
jle
inc
test
jecxz
pop
and
mov
outs
inc
cmp
or
loop
pop
xchg
test
sub
popf
js
pop
imul
pushf
popa
hlt
es
mov
push
sub
(bad)
mov
mov
xor
mov
jnp
daa
outs
(bad)
sti
iret
adc
mov
jnp
inc
cmp
ss
sar
add
repnz
clc
push
into
gs
not
std
xor
pop
stc
mov
dec
cmps
sub
hlt
dec
sti
stc
call
loop
or
inc
clc
push
iret
pop
test
mov
jb
dec
dec
dec
data16
pop
add
lods
mov
jo
lods
pop
push
jg
sbb
pop
sar
mov
sub
imul
dec
out
inc
pop
sbb
push
in
sub
fwait
or
pop
scas
aam
or
in
jmp
mov
mov
add
ficomp
rol
mov
and
inc
int
or
dec
lock
mov
int
jb
(bad)
lods
cli
sbb
inc
rcl
loopne
pusha
mov
stos
add
hlt
jle
test
arpl
loop
pop
sub
xor
fcmovnu
cmp
arpl
test
sbb
cmps
out
cmp
scas
xor
pop
call
add
fdivr
pop
pop
cvtps2pd
xchg
push
and
pop
push
gs
push
popa
aaa
cmp
cmp
stos
stc
data16
scas
pop
push
sbb
jns
rol
mov
fisubr
fwait
scas
in
retf
pop
push
imul
mov
pop
adc
xor
and
dec
adc
sub
or
or
scas
push
aaa
mov
hlt
lahf
inc
sub
push
sub
(bad)
imul
cs
jp
daa
mov
cmps
mov
adc
xchg
jo
jo
sub
jae
lea
add
mov
outs
mov
dec
pop
repz
(bad)
and
ret
add
cmp
pop
xchg
mov
hlt
stc
and
stos
stos
movs
jg
jb
out
jb
inc
xor
ja
and
in
inc
lods
xchg
stos
bound
add
inc
lds
movs
cpuid
pop
movs
xor
inc
dec
mov
inc
bound
xor
mov
stos
cs
ss
mov
ror
les
cmps
and
sti
stos
mov
push
imul
repnz
(bad)
jecxz
sbb
lahf
sahf
sub
ror
daa
int
mov
dec
push
cmp
ret
push
push
add
sub
repz
push
call
xchg
call
jge
fdiv
pop
outs
fst
push
lds
test
pop
(bad)
dec
inc
call
loope
cli
repz
in
dec
neg
call
loopne
stc
or
fldenv
cmp
imul
xlat
xchg
dec
mov
xor
(bad)
in
xchg
and
or
ins
out
jg
pop
mov
sbb
inc
sbb
xchg
inc
jne
popa
call
fistp
shl
ror
jg
push
push
sbb
(bad)
push
lea
stc
scas
or
xchg
lock
sub
ffree
icebp
loope
push
and
pusha
adc
jno
iret
dec
stos
push
popa
aad
stos
mov
outs
aam
cld
inc
sbb
es
stos
jae
jb
stos
xor
call
push
sub
xchg
mov
sahf
sbb
aaa
(bad)
outs
sbb
and
xchg
fcomp
xchg
pop
imul
xchg
jle
push
sbb
stos
clc
loope
arpl
pop
jge
loopne
and
test
jo
dec
add
inc
icebp
aam
cli
jns
call
ror
inc
cmc
cmps
fwait
retf
fdiv
adc
fdivr
dec
xchg
sub
push
arpl
inc
aas
push
ja
pop
test
or
dec
out
stos
in
push
sub
inc
add
sti
cmp
sub
mov
jns
push
sub
retf
and
pop
in
retf
cmps
mov
add
jle
mov
and
jae
or
jae
imul
shl
add
add
pop
out
xor
bound
xchg
mov
inc
pop
pop
mov
icebp
out
sbb
mov
pop
xor
sub
mov
test
dec
mov
les
sub
js
or
lods
or
gs
addr16
xor
nop
jmp
rcl
mov
jns
mov
addr16
mov
retf
ss
(bad)
rol
sub
cld
int3
jnp
sub
and
xchg
xor
lea
or
ja
(bad)
not
out
xor
jg
shl
mov
daa
(bad)
sti
pop
push
pop
retf
sar
xchg
sbb
sbb
loop
push
inc
popa
xchg
ret
cmps
pop
push
and
xchg
and
mov
or
pop
icebp
and
cld
cmp
cmp
popf
retf
pop
in
inc
retf
cmps
mov
inc
jle
pop
mov
clc
movs
loope
sahf
imul
xlat
cs
inc
int3
loop
dec
sub
sub
jl
test
lods
mov
aad
push
push
dec
fwait
xlat
and
data16
jnp
outs
outs
sub
loopne
sbb
rcr
nop
xchg
fnsave
icebp
pop
js
xchg
sub
test
jl
and
lods
sbb
pop
sti
out
nop
sub
les
aad
pusha
ror
out
and
popa
(bad)
adc
aad
pusha
jl
jb
jmp
jge
(bad)
xchg
mov
xor
repnz
ret
dec
iret
mov
lahf
sub
pop
xor
les
push
sar
js
jo
iret
leave
loop
ja
or
push
outs
pusha
mov
clc
dec
neg
pop
loop
rcr
sub
xor
dec
adc
push
cmp
in
pop
mov
std
push
js
out
outs
ficomp
cwde
cs
call
stos
inc
xlat
dec
int3
arpl
call
mov
stc
mov
sbb
hlt
ret
xor
push
inc
inc
add
xor
pop
sbb
mov
in
jge
jae
rcl
push
jmp
aad
in
push
mov
mov
dec
jg
mov
push
rcr
cwde
(bad)
addr16
rcl
je
and
and
sub
xchg
in
fistp
inc
jg
xchg
dec
mov
sub
cmp
cmp
test
fs
dec
and
cld
xchg
js
iret
sbb
jo
test
pop
sar
mov
xor
add
lock
aad
sbb
cwde
jmp
ins
inc
dec
xor
outs
inc
sub
dec
xor
or
pop
jmp
cmp
ret
mov
rol
push
adc
pop
mov
popf
ja
adc
sar
push
imul
sub
in
fcmovne
aas
push
rol
xchg
lock
inc
push
out
mov
aas
dec
sbb
test
mov
jmp
pop
cmp
fild
loope
dec
ror
inc
lea
test
inc
pop
adc
xchg
sbb
fninit
jo
mov
dec
add
mov
inc
gs
or
cld
es
cmp
or
jl
cmp
ficom
mov
mov
arpl
inc
xchg
and
imul
xchg
movs
es
outs
xchg
jns
je
not
dec
pop
jle
ss
mov
adc
lods
popf
pop
frstor
in
sbb
mov
call
xchg
ror
outs
call
(bad)
dec
hlt
aam
pop
sub
jg
retf
cwde
repz
ds
and
inc
jle
hlt
push
push
mov
pop
and
mov
inc
and
jmp
xchg
xor
inc
jecxz
mov
dec
scas
stos
sbb
xor
push
mov
arpl
popa
jl
jle
add
stos
stos
inc
push
or
pop
fadd
aaa
loop
in
xchg
in
mov
ret
cdq
(bad)
push
(bad)
pop
mov
mov
test
(bad)
mov
lahf
mov
std
jns
pop
sbb
inc
ja
scas
paddw
arpl
pop
dec
dec
ins
mov
xor
cmp
and
arpl
mov
loope
adc
test
stos
jmp
fld
out
bnd
loop
sahf
in
inc
fiadd
mov
mov
div
push
lods
adc
or
lods
clc
push
adc
add
and
lods
loopne
call
or
push
cmp
and
ja
pop
or
es
out
and
inc
in
xor
sub
pop
cmps
add
pop
mov
or
pop
fwait
jns
lods
sbb
xor
stc
fucomi
loopne
pop
lock
cmp
cdq
or
sbb
mov
jbe
mov
xchg
push
jno
xor
mov
sub
ds
sahf
test
xor
dec
(bad)
scas
push
mov
rcr
es
ss
pop
aam
mov
xchg
popf
and
enter
sbb
push
ret
add
jl
jne
adc
mov
jl
mov
(bad)
push
outs
mov
inc
aaa
mov
sbb
nop
push
js
pusha
mov
ret
int3
jecxz
push
jae
push
dec
fbstp
rcl
mov
push
xchg
sbb
ds
and
in
fst
sti
mov
inc
or
mov
jae
sbb
outs
mov
mov
ror
out
sub
mov
mov
add
cmps
fiadd
fsub
and
mov
jo
sub
or
int
sbb
cmp
mov
cdq
faddp
rcl
push
repz
push
mov
jnp
mov
jo
push
push
dec
cmp
pop
ffree
jp
popa
dec
jae
jb
pop
add
loope
cld
or
sub
popa
(bad)
xor
adc
fimul
xchg
outs
xor
fmulp
add
xor
das
out
mov
xchg
inc
sbb
out
push
xchg
push
mov
shl
sbb
ret
or
int3
pop
inc
cs
pop
mov
js
push
aas
push
gs
mov
idiv
lods
or
loopne
mov
inc
imul
sub
dec
mov
add
out
repz
cwde
sbb
into
in
repz
adc
aaa
lods
addr16
aaa
repnz
lods
and
fadd
or
push
inc
or
ror
push
sbb
ins
lods
inc
push
addr16
adc
sbb
in
cmp
xchg
dec
dec
jno
sahf
jo
jg
mov
rol
aad
repnz
enter
test
loope
stos
aas
fs
pop
scas
aad
add
leave
cmp
lock
xor
aam
adc
or
add
cwde
(bad)
in
sub
xchg
rcr
in
out
pop
movs
inc
jne
(bad)
pop
lea
xchg
cmps
sbb
retf
jle
(bad)
sub
ja
xchg
test
cwde
jmp
dec
imul
xor
sbb
inc
jle
lods
inc
jmp
xchg
ss
push
cli
dec
or
push
xor
xchg
pop
bound
inc
icebp
push
cs
or
pop
idiv
jnp
dec
mov
int3
fnsave
je
in
scas
push
gs
daa
push
xchg
call
mov
push
sub
(bad)
fistp
cli
jg
std
fistp
mov
mov
mov
dec
icebp
(bad)
adc
mov
fstp
xchg
popf
js
push
lea
sar
adc
mov
sbb
outs
mov
xor
mov
arpl
cmp
push
mov
jmp
mov
cmp
std
xchg
mov
and
sub
iret
xchg
jmp
pop
popa
outs
xor
and
and
lock
cwde
or
pop
jae
ret
push
sbb
sbb
inc
jg
adc
test
xor
adc
sub
adc
push
sbb
pop
bound
dec
jecxz
fisub
push
add
pushf
scas
xchg
sbb
pop
sbb
in
sbb
ret
test
pusha
cmp
rol
out
mov
shl
sub
fcomp
pop
lds
mov
or
stos
call
mov
adc
test
into
inc
out
frndint
jb
sbb
and
int3
add
js
movs
xlat
or
(bad)
jecxz
in
xlat
ss
cld
and
mov
ficom
pop
push
out
in
inc
lea
test
out
jno
mov
in
imul
test
add
lock
pop
nop
rcr
and
or
rol
push
imul
dec
and
enter
push
inc
jo
pop
int
jg
sbb
js
cmps
out
or
pop
outs
ss
add
jne
leave
aaa
cli
bound
mov
xchg
xor
enter
or
fst
loopne
das
xchg
nop
ins
es
ja
or
xor
inc
adc
daa
and
and
jmp
jg
fld
bound
cmp
clc
xchg
mov
int
arpl
sub
pop
mov
pop
dec
xchg
aas
mov
cli
push
movs
fstp
loopne
mov
in
pop
scas
mov
in
cmp
xor
push
mov
fsub
xor
jne
xor
push
pusha
mov
or
mov
mov
call
call
jne
sub
arpl
push
aad
icebp
fild
sbb
and
push
and
cmp
scas
popf
dec
nop
pop
in
jbe
js
aaa
movs
in
mov
data16
push
popf
mov
cmps
stos
(bad)
retf
cmp
or
ror
stos
scas
or
add
test
and
lods
fidiv
leave
jle
imul
fdiv
mov
xchg
mov
pop
imul
sub
xchg
pop
shl
mov
(bad)
leave
out
mov
pop
lock
(bad)
aad
mov
cs
add
fistp
int3
ret
push
into
fscale
jmp
call
shl
push
inc
lds
inc
mul
stos
icebp
xor
and
test
test
or
dec
xchg
mov
jne
mov
(bad)
jmp
into
fcmovne
cli
test
push
mov
mov
jp
popf
and
xor
inc
das
ds
ret
inc
imul
stos
dec
rcl
or
cmc
scas
aad
push
add
cli
xchg
das
stos
mov
fistp
push
sub
sub
pop
cmp
pop
enter
test
sti
pusha
xchg
push
pop
sbb
pop
mov
aas
sub
jbe
loope
xchg
dec
sub
sub
fist
rcr
sub
loope
and
mov
in
cs
cmc
out
pop
push
out
adc
int
loopne
(bad)
pop
leave
adc
fdiv
xor
out
imul
cld
scas
sahf
clc
loop
repnz
in
call
stos
stc
repnz
xchg
sub
jle
inc
retf
jne
into
or
(bad)
adc
mov
pop
push
std
rcr
cmp
push
and
push
je
mov
mov
pop
push
mov
popa
cmp
jo
xchg
push
cdq
xchg
xor
lea
xor
adc
les
mov
test
xchg
enter
or
fidiv
leave
mov
pop
shl
pop
push
ins
je
jmp
cmp
mov
adc
adc
push
mov
sub
sbb
test
xor
arpl
xor
ins
test
scas
sub
stos
mov
push
in
sbb
into
outs
and
push
movs
xchg
