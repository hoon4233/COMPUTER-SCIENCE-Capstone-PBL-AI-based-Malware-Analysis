ret
cmps
sub
mov
outs
sub
sbb
and
jns
dec
cmp
shr
repnz
mov
cwde
cwde
add
loop
imul
or
imul
sub
and
gs
or
sbb
or
test
gs
gs
mov
ins
sub
outs
cmp
jmp
imul
pop
xor
imul
xchg
pop
cli
mov
repnz
lods
cmp
xchg
jl
sub
cli
xor
xor
jns
popa
mov
sub
jnp
stc
cdq
mov
sahf
imul
imul
mov
loop
sub
push
neg
imul
sub
jnp
xchg
mov
cli
in
(bad)
std
loop
sub
data16
test
adc
push
movs
xor
inc
loop
sub
jns
loop
push
push
fldcw
in
cmp
jns
retf
and
mov
inc
and
jg
aaa
sar
iret
pop
fldcw
in
pop
sbb
push
jmp
adc
iret
push
fldcw
aas
ss
xor
sub
(bad)
outs
test
mov
fcomp
ins
movs
cdq
jbe
jp
movs
xchg
(bad)
or
push
mov
(bad)
cdq
cmp
and
pop
mov
or
lea
jl
or
cmp
arpl
mov
bound
repnz
sbb
lods
and
cmps
sbb
cwde
data16
sub
(bad)
sub
cli
imul
adc
outs
pusha
jmp
repnz
xchg
(bad)
xchg
(bad)
jbe
imul
jae
repnz
cmp
imul
jno
ins
xchg
repz
aaa
jb
mov
jno
inc
cdq
mov
imul
add
dec
fldcw
or
(bad)
adc
shr
repnz
enter
imul
fldcw
push
repz
inc
imul
loop
aas
jle
add
dec
jae
dec
sub
mov
ins
inc
repnz
inc
fcmovbe
sub
call
cdq
mov
cmp
dec
fldcw
cdq
pop
or
mov
cmp
mov
imul
cmp
and
mov
data16
sub
data16
sub
sub
sbb
pop
sub
xor
popa
pop
cmps
out
xchg
sbb
out
scas
inc
repnz
inc
icebp
or
inc
repnz
imul
bound
imul
jnp
jmp
lea
mov
ja
fcmovbe
or
jmp
fld
xchg
jns
outs
and
rol
xchg
jns
mov
rcl
imul
call
sbb
aad
(bad)
mov
jmp
(bad)
repnz
cmps
sub
out
fiadd
repnz
into
jnp
test
jno
js
inc
xchg
fcmovbe
or
cmp
jb
movs
cmp
pop
in
and
loop
sbb
xor
jmp
aad
or
inc
int
sub
xchg
pop
(bad)
cdq
sbb
sbb
adc
repnz
scas
test
and
sub
outs
lahf
pop
not
ret
sbb
or
jp
sub
call
xor
sbb
sbb
adc
repnz
lahf
pop
not
ret
adc
repz
lock
loopne
add
out
scas
sbb
es
movs
cmp
pop
aaa
aas
jle
and
xchg
and
sub
or
(bad)
xchg
pop
cli
mov
repnz
sti
nop
sbb
sbb
jb
pop
out
or
(bad)
xchg
pop
push
mov
repnz
or
pop
imul
ret
cmps
and
cmps
sub
hlt
out
xchg
sbb
out
scas
jbe
scas
stos
jl
sub
loop
aas
jle
adc
arpl
popa
jnp
pop
icebp
jnp
xchg
sub
shr
sub
popf
sub
xchg
sub
pminsw
loopne
fstp
sbb
(bad)
sbb
ins
or
mov
mul
out
push
stc
xchg
ins
push
out
cwde
stos
cmp
imul
xchg
ins
push
in
sub
retf
and
rcr
push
loopne
add
out
stos
outs
jnp
jmp
data16
retf
mov
xchg
mov
jno
xchg
imul
push
ins
or
xchg
or
cmp
loopne
xor
int3
dec
bound
repnz
repnz
in
sbb
jns
jns
ja
xchg
xlat
or
in
in
aad
cwde
xchg
mov
addr16
inc
and
mov
jno
xchg
imul
push
out
test
lods
repz
(bad)
repnz
add
dec
cdq
mov
enter
repz
(bad)
mov
mov
sbb
in
aad
cwde
xchg
mov
addr16
add
xchg
(bad)
bnd
sub
cdq
xchg
jbe
cmp
mov
xor
mov
clc
add
add
loopne
ret
nop
or
sub
adc
dec
mov
dec
loop
loopne
add
cmps
nop
fld
stos
xor
loope
lds
push
test
cmp
jb
movs
cmp
pop
aaa
cmp
xor
je
mov
mov
dec
xor
xchg
or
jnp
xchg
mov
sbb
fadd
outs
sar
mov
cmps
sahf
ret
xor
jecxz
mov
mov
jp
pop
outs
retf
mov
sbb
ins
cli
mov
sub
jnp
inc
jmp
xor
jmp
mov
out
sub
ret
jno
and
(bad)
not
(bad)
out
sahf
ret
sub
std
fsubr
jnp
inc
fstp
gs
jb
adc
adc
cmp
pop
mov
adc
sub
jnp
pop
jmp
xor
jb
movs
cmp
pop
aaa
aas
jle
adc
cmp
jg
sahf
push
sub
shr
sub
xchg
sub
loopne
push
in
adc
mov
add
and
jg
adc
(bad)
or
and
jg
jb
(bad)
or
cmp
jp
xor
je
fldpi
push
leave
cmp
loopne
or
adc
jnp
add
cwde
add
in
imul
and
jns
sub
out
xchg
sub
out
scas
out
not
mov
scas
movs
cmp
pop
aaa
cmp
xor
pop
cli
fnstcw
test
out
sub
jnp
jmp
adc
outs
lds
sub
outs
loop
neg
xchg
jp
faddp
sub
data16
into
jnp
xchg
mov
(bad)
in
jno
mov
imul
jmp
cmp
in
sbb
dec
out
ins
sar
imul
sbb
sub
mov
sub
imul
jnp
test
sub
jmp
xor
aas
jg
(bad)
mov
or
inc
bnd
fldenv
data16
ret
cmps
pusha
repnz
cli
test
jmp
jno
ins
jns
(bad)
mov
in
outs
(bad)
(bad)
in
jns
out
imul
jae
and
repnz
jmp
xor
sub
sti
cmps
sbb
ret
cmps
sub
std
xor
jo
xchg
adc
jmp
xor
loopne
dec
push
imul
repnz
fstp
and
dec
loopne
repz
adc
(bad)
repnz
inc
adc
mov
sub
retf
and
jbe
push
and
repnz
mov
adc
in
icebp
or
in
mov
and
sub
and
jns
push
xchg
jg
out
mov
sub
stos
stos
xlat
cli
retf
add
or
xchg
pop
dec
add
call
enter
jns
or
and
repnz
xlat
cli
retf
data16
imul
fisub
movs
mov
cmp
div
loop
or
call
fldenv
sub
xchg
sub
jecxz
sub
jmp
adc
shr
sub
dec
call
sub
data16
push
pop
ins
push
inc
and
pop
cmc
in
push
inc
and
sub
(bad)
out
sub
jnp
inc
icebp
jnp
add
sbb
sub
aas
loopne
fstp
sub
lock
or
sub
push
sbb
imul
sub
mov
mov
adc
call
mov
int
or
xchg
test
cmc
inc
sub
outs
test
mov
and
mov
retf
adc
imul
xchg
and
adc
sbb
sbb
bnd
cmc
or
cli
retf
ss
or
data16
push
outs
test
push
inc
and
(bad)
or
push
lods
cs
xchg
(bad)
xchg
rcl
in
imul
or
in
mov
and
sub
and
jns
push
xchg
jg
cdq
sub
jns
popf
adc
cdq
xchg
(bad)
jno
cmc
mov
xchg
mov
or
cmp
mov
movs
fnstenv
push
addr16
loopne
repz
loopne
ret
nop
loopne
jnp
inc
sar
jmp
out
sbb
imul
and
adc
mov
push
fidivr
inc
sar
sbb
icebp
mov
add
sub
pop
cli
pop
pop
pop
mul
or
repnz
sub
jg
push
mov
cmp
stos
outs
call
sub
leave
mov
xchg
xchg
(bad)
sti
cmps
sbb
sub
inc
sar
jmp
xor
imul
or
ins
jnp
sahf
into
jnp
xchg
mov
repnz
mov
out
outs
mov
neg
pop
lock
mov
jecxz
ret
push
neg
push
mul
or
repnz
xchg
sbb
out
scas
outs
jns
popa
test
ja
xchg
(bad)
or
in
aad
adc
xchg
sbb
imul
sbb
loopne
repz
loopne
cwde
add
cwde
bound
sub
sub
clc
sub
sbb
sub
cwde
add
cwde
cmp
or
sub
popa
mov
mov
push
sub
adc
movs
mov
adc
xchg
imul
or
inc
add
xchg
rcl
sub
jno
repnz
pop
or
ss
scas
stos
jl
adc
repnz
mov
pop
mov
movs
mov
icebp
repz
xchg
(bad)
or
imul
int
sub
out
in
fisttp
mov
sub
daa
outs
imul
jnp
add
sbb
sbb
repnz
inc
repnz
ds
xchg
(bad)
jnp
inc
icebp
jnp
xchg
pushf
ds
xchg
(bad)
jg
lods
(bad)
or
cmp
repz
iret
cli
retf
sbb
lea
cmp
adc
cmc
mov
cdq
ds
jnp
xchg
and
adc
test
dec
gs
jmp
cmc
or
push
mov
in
in
leave
or
pop
xchg
cmp
repnz
sub
sti
cmps
data16
into
outs
imul
jnp
in
xor
cmc
mov
cdq
ds
jnp
xchg
and
imul
inc
mov
shr
xor
cdq
xchg
stos
outs
loopne
mov
aam
or
stos
xchg
xlat
or
callw
adc
sub
xlat
(bad)
or
cmp
mov
sbb
ins
push
outs
test
sub
add
xchg
dec
cdq
xchg
(bad)
repnz
test
or
popa
imul
adc
movs
ja
xchg
xlat
or
cdq
xchg
stos
ss
out
xchg
out
aam
or
punpckhwd
add
cdq
xchg
(bad)
jnp
data16
ja
xchg
xlat
or
data16
les
std
shr
fwait
or
jmp
aam
cwde
xchg
jns
ss
push
repnz
lods
inc
cdq
xchg
(bad)
xor
ins
jns
daa
imul
or
imul
xor
imul
jnp
add
call
mov
cdq
xchg
stos
ss
(bad)
or
or
inc
cmp
sub
jg
xchg
(bad)
or
rol
gs
cdq
imul
inc
cdq
xchg
(bad)
repz
add
adc
inc
mov
sub
and
repnz
repz
ror
mov
in
setns
fisttp
pop
xchg
(bad)
repnz
jecxz
(bad)
or
push
sub
push
cmp
add
xchg
stos
ss
(bad)
or
or
inc
dec
xchg
sub
xchg
(bad)
or
rcr
gs
cdq
imul
inc
cdq
xchg
(bad)
repz
add
mov
lods
pushf
(bad)
or
cdq
xchg
sub
adc
repz
ror
mov
in
setns
fmul
pop
xchg
(bad)
repnz
jecxz
(bad)
or
push
sub
push
cmp
pop
cdq
xchg
stos
ss
(bad)
or
mov
xchg
sub
imul
loopne
pop
cdq
xchg
(bad)
jnp
add
call
mov
cdq
xchg
stos
ss
(bad)
or
mov
xchg
sub
imul
leave
mov
add
daa
imul
jno
gs
cdq
imul
call
aam
cwde
xchg
jle
je
(bad)
or
cdq
xchg
sub
adc
push
sbb
mov
in
setns
fisttp
pop
xchg
(bad)
repnz
jecxz
(bad)
or
push
xchg
inc
cdq
xchg
(bad)
repnz
not
(bad)
data16
setns
ror
mov
imul
repnz
jmp
xchg
(bad)
or
imul
jnp
sahf
retf
fst
or
loopne
jg
mov
or
cmp
or
xor
jmp
repnz
dec
cdq
xchg
(bad)
mov
cwde
xchg
jns
pop
xchg
jle
out
sub
jnp
push
push
push
data16
dec
bound
jno
mov
mov
xor
int3
stc
or
fcmovnbe
(bad)
or
push
sub
out
add
imul
(bad)
or
jle
xor
cdq
push
lods
bound
in
mov
jecxz
(bad)
or
cmp
jae
mov
lods
es
xchg
(bad)
mov
data16
push
xchg
(bad)
mov
pop
imul
push
outs
test
sub
jmp
stc
or
jecxz
(bad)
or
cmp
repnz
imul
repz
jg
adc
ja
xchg
xlat
or
xor
mov
pusha
jmp
icebp
imul
lods
cs
xchg
(bad)
mov
pop
loopne
push
out
mov
sub
stos
stos
(bad)
call
repnz
(bad)
imul
lods
sbb
push
(bad)
movs
inc
loopne
push
outs
test
sub
out
ins
jmp
stos
push
xchg
xchg
xlat
or
cdq
xchg
(bad)
call
aam
cwde
xchg
jns
icebp
add
and
or
imul
cwde
cmp
xchg
and
sub
cdq
xchg
(bad)
jnp
xchg
pushf
push
cdq
xchg
(bad)
jg
xchg
(bad)
or
cmp
xchg
sub
xchg
(bad)
or
cmp
outs
or
jno
jge
xor
cdq
imul
jecxz
(bad)
or
loopne
push
xchg
(bad)
jg
int
or
cmp
in
cmp
shr
push
jmp
mov
push
jbe
into
dec
bound
repnz
int3
mov
or
xor
mov
loopne
fstp
xchg
sub
jecxz
sub
jmp
(bad)
bnd
test
out
imul
in
lea
pop
xchg
cmp
repnz
sub
jae
push
cs
jmp
repnz
pop
cdq
xchg
(bad)
mov
cwde
xchg
jns
pop
xchg
jle
out
sub
jnp
pop
icebp
jnp
jmp
imul
or
imul
cwde
cmp
jae
sub
pmaxsw
xchg
xlat
or
(bad)
xchg
xlat
or
cwde
xchg
movs
ja
xchg
xlat
or
cdq
xchg
(bad)
jno
jns
adc
call
(bad)
or
jmp
imul
loop
pop
cdq
xchg
(bad)
movs
in
push
(bad)
movs
adc
ins
push
out
mov
sub
stos
stos
(bad)
call
repnz
mov
jg
loope
or
cmp
xchg
sub
in
(bad)
or
cmp
repnz
xchg
and
imul
stos
dec
out
xchg
xlat
or
imul
or
cmp
cdq
(bad)
or
out
xchg
xlat
or
xor
mov
loopne
ret
mov
xchg
sub
jecxz
sub
data16
dec
push
xchg
xlat
or
imul
add
or
imul
bnd
dec
or
rol
(bad)
or
add
out
aam
or
xchg
mov
or
pop
xchg
aam
data16
jge
imul
or
push
sub
or
in
setns
leave
mov
in
setns
inc
repnz
sub
out
stos
movs
jg
xchg
xlat
or
out
sub
adc
xlat
or
fwait
xchg
movs
ja
xchg
aam
ss
or
ins
aam
cwde
xchg
jns
popf
add
repnz
and
setns
leave
mov
in
setns
inc
repnz
sbb
out
stos
stos
dec
out
xchg
xlat
or
jbe
sub
xchg
mov
or
loop
xlat
or
xor
ja
xchg
xlat
or
cwde
xchg
adc
xchg
xlat
or
cdq
xchg
mov
or
xor
ja
xchg
xlat
or
xor
add
in
lds
adc
or
mov
aam
or
popa
scas
lods
setns
ror
xchg
jg
in
stc
or
push
lods
and
pop
(bad)
movs
outs
shl
adc
in
cdq
or
in
std
or
push
lods
es
xchg
(bad)
mov
outs
loop
sub
pop
(bad)
movs
outs
loop
cs
xchg
(bad)
mov
outs
call
sub
mov
or
cmp
sbb
(bad)
or
movs
cmp
pop
or
inc
jbe
sub
call
sub
imul
sub
imul
or
xor
jb
mov
repz
loopne
push
mov
imul
repnz
inc
repnz
adc
data16
dec
push
out
sub
jns
mov
add
xchg
stos
iret
out
imul
sbb
sbb
ins
push
cdq
xchg
(bad)
or
xchg
repnz
adc
sub
adc
adc
ret
sub
or
cmp
mov
push
imul
mov
xchg
sbb
cmp
sahf
inc
sar
add
repnz
inc
sub
sub
cwde
add
sbb
or
repnz
scas
jle
push
or
jl
sub
jmp
mov
or
imul
push
out
test
not
(bad)
out
mov
xlat
(bad)
stc
imul
ja
sub
jno
mov
imul
cli
imul
sub
mov
imul
xor
imul
push
es
mov
sub
sti
cmps
movs
mov
iret
cdq
imul
lock
stc
popf
mov
jmp
sub
xchg
sub
shr
sub
cmps
jmp
jmp
mov
sub
repz
mov
adc
imul
lahf
das
retf
push
lock
lock
push
mov
push
ins
daa
imul
ins
daa
imul
repnz
sub
stc
sub
sbb
ins
pop
inc
and
fcomip
jle
push
ret
cmps
adc
imul
ins
daa
imul
repnz
mov
sbb
jle
push
ret
cmps
cmp
imul
loopne
add
test
(bad)
jle
push
or
jle
push
ret
cmps
add
imul
xor
imul
repnz
mov
cdq
xchg
fcomip
jle
push
ret
cmps
adc
mov
xor
imul
mov
imul
data16
jle
push
ret
cmps
cmp
xor
repnz
xor
imul
mov
imul
data16
adc
imul
ins
adc
imul
ins
daa
imul
mov
sub
pop
loope
cmps
jmp
sub
enterw
imul
sbb
sub
sub
imul
sub
cmps
imul
mov
push
sub
xlat
imul
inc
and
stos
neg
push
repnz
ins
adc
imul
repnz
test
sub
jno
mov
dec
test
xchg
dec
sub
out
cdq
outs
js
retf
jns
and
es
arpl
mov
xor
sar
sbb
(bad)
jecxz
xchg
mov
push
test
mov
cmps
sub
pushw
adc
and
test
repnz
arpl
sbb
hlt
push
ins
daa
imul
ins
daa
imul
ins
daa
imul
cmp
repnz
mov
sar
sub
shr
sub
jno
mov
sub
jbe
imul
js
retf
pop
push
and
mov
xor
sub
(bad)
sub
xlat
cmps
imul
std
shr
and
stos
adc
ins
add
fild
test
lods
je
imul
xchg
sub
imul
sub
sahf
enter
mov
add
data16
push
and
push
bound
imul
jb
sahf
sub
pusha
sbb
jno
popa
mov
iret
out
fcomip
adc
(bad)
jle
push
fld
das
mov
mov
data16
test
lahf
test
jmp
adc
repnz
imul
imul
imul
sub
lea
add
loop
(bad)
imul
sub
loope
out
lock
bound
imul
mov
sbb
jae
mov
or
imul
sub
lea
add
loop
(bad)
imul
sub
loope
out
retf
cdq
ins
and
retf
sub
arpl
mov
sbb
or
data16
fstp
imul
dec
int
sub
xchg
mov
lods
cmp
mov
xor
je
les
add
cdq
ins
pop
inc
and
inc
sti
fsubr
sub
shl
sub
out
scas
inc
loope
sub
movs
mov
jne
and
mov
mov
loopne
call
sub
sub
call
mov
imul
shr
xor
mov
stc
sub
call
push
lods
imul
push
ja
movs
cmp
pop
in
inc
mov
push
js
jae
jns
repnz
sub
shr
sub
jmp
and
mov
repnz
fstp
test
jg
shl
imul
repnz
pop
repz
(bad)
in
stc
repnz
cmp
imul
push
ins
imul
dec
and
mov
xchg
sub
xor
imul
sub
repz
shr
jg
aad
xchg
imul
mov
data16
push
ss
cmp
sti
sub
jnp
pop
icebp
jnp
in
outs
add
jg
int
cwde
add
cwde
bound
das
or
pop
imul
or
(bad)
cmp
mov
sub
shr
sub
or
inc
repnz
inc
hlt
cdq
sbb
sbb
add
imul
sub
(bad)
jmp
shl
lea
jae
mov
data16
push
lea
pop
inc
imul
push
stos
jbe
cmp
mov
push
dec
dec
jge
in
sub
jnp
inc
jmp
xor
ins
add
and
jnp
xchg
stos
xchg
xchg
imul
jnp
add
jmp
shl
cdq
sbb
cwde
data16
push
ss
or
push
imul
in
sub
sbb
push
out
stos
add
out
cmp
cmp
(bad)
ss
push
xchg
mov
inc
and
(bad)
xchg
(bad)
or
data16
xor
int3
jno
gs
xor
pop
cli
in
xor
or
pop
(bad)
std
shr
iret
cdq
imul
inc
and
iret
cdq
imul
inc
and
iret
cdq
imul
inc
and
iret
cdq
imul
inc
and
iret
cdq
imul
lock
jecxz
int3
out
jge
xor
xchg
sub
shr
std
shr
nop
fisubr
sub
sar
retf
movs
data16
imul
and
inc
jb
adc
imul
mov
std
sar
retf
movs
sbb
jnp
jmp
pop
stos
pop
pushf
out
xchg
stos
sbb
lahf
mul
shl
imul
test
inc
dec
and
jns
fnsave
jl
or
jl
dec
and
jnp
mov
jne
data16
or
mov
movs
cmps
jne
sub
in
sub
or
sub
icebp
arpl
jno
ins
mov
mul
sub
lea
inc
and
adc
repnz
and
(bad)
or
and
test
cmps
out
xchg
popa
jb
outs
sub
jno
imul
out
xchg
stos
sbb
adc
jnp
jmp
pop
add
pop
xlat
sub
sbb
sahf
jmp
adc
sub
cmp
push
sub
mov
xor
sub
repnz
pop
lock
or
jmp
jne
sahf
jmp
adc
mov
jb
outs
sub
mov
inc
bound
sbb
sub
imul
jns
jns
cmps
jne
sub
in
sub
jno
ins
mov
loop
sub
stos
sbb
jl
out
jge
repz
push
sub
out
das
repz
mov
jb
outs
sub
mov
into
pusha
push
stos
sbb
lahf
mul
adc
push
imul
data16
sbb
sub
in
cmp
jg
jp
repz
jmp
imul
xchg
sub
imul
xchg
(bad)
or
movs
cmp
pop
in
and
not
(bad)
in
sbb
sbb
(bad)
sbb
adc
mov
xchg
shl
imul
imul
ins
dec
sub
push
out
test
imul
std
sar
xor
mov
jnp
push
fisttp
adc
imul
fild
repnz
(bad)
adc
xchg
call
mov
jecxz
cmc
out
jge
or
imul
sub
and
mov
in
jmp
ss
imul
jnp
push
ins
push
jmp
aaa
repz
cmp
jnp
push
div
sub
jno
ins
pop
jns
mov
repz
push
mov
ror
jl
out
jns
not
(bad)
in
(bad)
fistp
push
mov
sbb
ins
adc
imul
data16
cmps
jbe
retf
lock
pop
cmp
fisubr
sub
adc
and
xor
loopne
dec
cmp
mov
repnz
mov
or
mov
jae
repnz
sub
jmpw
mov
xchg
sub
call
adc
imul
jmp
(bad)
repnz
inc
jecxz
(bad)
or
push
aad
repnz
test
fild
pop
ins
dec
dec
and
sub
sar
ficomp
into
mov
or
push
adc
imul
in
cld
sub
cmp
addr16
xchg
or
push
test
imul
cdq
pop
cmp
jmp
sub
and
sub
in
cld
lea
xchg
mov
mov
jmp
(bad)
repz
(bad)
cdq
cmps
ja
into
arpl
es
xchg
(bad)
or
cdq
xchg
sub
sar
ficomp
fs
data16
push
sar
ficomp
fs
out
lock
sub
adc
imul
aam
sub
loop
sub
or
mov
or
and
mov
or
jo
retf
mov
repnz
jnp
popf
(bad)
or
inc
add
loop
imul
out
scas
stos
add
test
lock
fst
out
sub
imul
xchg
or
loop
(bad)
or
imul
(bad)
in
lds
jmp
repnz
pushf
push
mov
test
xchg
stos
ss
ins
push
outs
test
test
jns
jmp
imul
loopne
xor
jl
in
pop
xchg
jno
ins
adc
xchg
(bad)
or
out
sub
imul
(bad)
icebp
imul
sub
jbe
sub
jmp
addr16
imul
repnz
imul
push
mov
or
mov
sub
in
in
movs
sub
xchg
add
cdq
imul
or
cdq
xchg
(bad)
or
xchg
pushf
sub
ds
(bad)
data16
addr16
xchg
or
jb
or
imul
sbb
repz
(bad)
or
out
mov
sbb
lock
jns
js
jle
xor
push
mov
mov
xor
push
(bad)
ja
xchg
or
cdq
xchg
sub
imul
pop
inc
and
test
or
cmp
imul
arpl
data16
push
mov
push
neg
sub
out
cld
mov
cdq
xchg
stos
xor
push
jnp
icebp
test
repz
test
repnz
or
cdq
xchg
mov
or
div
test
mov
(bad)
or
cdq
xchg
inc
out
jmp
xchg
sub
shl
in
movs
imul
in
xchg
sub
in
in
in
sub
shl
cmc
sub
test
jmp
imul
mov
cdq
xchg
call
jmp
sub
cdq
xor
data16
addr16
xchg
or
jmp
test
xchg
(bad)
jnp
jl
imul
test
lock
jge
shl
sub
jnp
popf
(bad)
or
imul
sub
out
in
cdq
sub
imul
test
jbe
push
fstp
push
shl
imul
imul
shr
imul
or
imul
jg
imul
cdq
scas
lods
push
mov
(bad)
int
cdq
xchg
sub
ror
fnstcw
dec
loopne
jno
imul
xchg
jmp
jb
fnstenv
ins
test
jnp
jmp
outs
daa
ret
ins
pop
inc
and
es
repz
cdq
test
lock
fnstsw
mov
retf
cdq
push
shl
imul
imul
mov
ins
mov
or
lea
ja
xchg
or
in
jle
loop
push
xchg
push
mov
jmp
(bad)
repz
(bad)
xor
repz
out
adc
imul
inc
test
repnz
icebp
imul
jge
into
pop
ins
sub
imul
mul
sub
adc
sbb
mov
or
out
and
adc
inc
jecxz
(bad)
or
mov
fdivr
sub
lahf
xchg
(bad)
jno
gs
or
ret
popf
(bad)
or
xchg
xchg
or
mov
mov
icebp
sub
test
in
fstp
xchg
xchg
or
adc
(bad)
not
(bad)
pop
or
mov
lods
add
ja
into
arpl
es
xchg
(bad)
or
movs
cmp
pop
in
adc
outs
scas
ins
or
sbb
sti
pop
imul
jg
lea
fistp
repnz
xor
imul
sub
imul
(bad)
data16
sub
imul
leave
add
outs
or
sub
xchg
sub
sahf
sub
jo
sub
sar
enter
xchg
ins
or
and
cmp
imul
loopne
cmp
sub
xor
lahf
sub
lds
repnz
push
inc
xor
es
imul
repz
sub
data16
jns
xchg
mov
cmps
sahf
data16
mov
dec
jmp
or
sbb
jb
xchg
sub
shr
sub
jmp
ins
jmp
es
jb
xchg
sub
shr
sub
jmp
(bad)
jmp
lahf
mov
dec
jmp
jb
imul
or
out
stos
add
out
cmp
std
shr
add
ins
lahf
push
pop
sbb
jb
xchg
sub
jb
lahf
es
in
(bad)
or
data16
gs
cmps
xchg
push
ins
out
sbb
jb
xchg
sub
ins
jmp
push
pop
popa
sbb
jns
xchg
mov
cmps
sahf
data16
icebp
pop
jmp
and
(bad)
lods
cmp
loopne
xor
int3
mov
in
sbb
dec
mov
cmp
sahf
retf
xchg
mov
repnz
inc
repnz
jnp
data16
jno
xchg
imul
loopne
sbb
adc
xor
pop
sub
lea
jno
push
ficom
out
sub
jnp
ss
scas
stos
jl
adc
shl
ror
(bad)
dec
fcmovu
jo
add
fiadd
repnz
into
jnp
xchg
test
gs
adc
ja
mov
or
imul
repnz
inc
sar
ss
movs
cmp
pop
xor
fild
shr
repnz
inc
repnz
sbb
cwde
sbb
imul
in
cmp
jae
pop
jae
or
repnz
call
inc
repnz
inc
repnz
imul
or
push
pop
hlt
in
sub
jno
imul
or
loopne
cwde
data16
shr
jmp
jno
sub
out
sub
dec
(bad)
pop
sub
xchg
mov
cwde
jmp
and
mov
jg
xchg
mov
add
cmp
push
cmp
repnz
sub
sbb
(bad)
cmp
cmp
loopne
xor
int3
jno
gs
xor
test
cld
mov
xor
imul
add
cwde
add
repnz
outs
sub
xor
xchg
(bad)
xchg
jmp
jmp
ficom
mov
add
movs
mov
ins
(bad)
out
test
cmp
imul
cmp
mov
xor
inc
bnd
aad
or
inc
add
xchg
js
data16
shr
sub
sahf
into
jnp
popf
mov
dec
imul
cmp
cmp
(bad)
cmp
ret
sahf
loopne
cwde
add
test
repnz
imul
cli
mov
repnz
jno
xchg
pop
not
ret
xchg
ficom
mov
add
movs
mov
repnz
jg
xchg
jns
adc
xchg
shl
sub
pop
jmp
or
mov
xor
loopne
mov
adc
mov
in
dec
push
fld
repnz
mov
sub
bound
xor
push
push
(bad)
sbb
jmp
movs
loopne
push
xor
sub
mov
sbb
int
sub
in
cmp
mov
ins
aaa
mov
cmp
adc
cdq
and
pop
push
sub
dec
adc
and
mov
fiadd
cmp
repnz
and
xor
int3
mov
cmp
xchg
ins
push
lea
nop
(bad)
sub
push
sub
call
jp
data16
or
bound
call
jp
jmp
fiadd
and
shl
imul
jnp
inc
jmp
xor
jmp
cmp
fucom
push
add
mov
sub
repz
dec
sbb
dec
push
data16
add
pop
mov
and
nop
icebp
imul
loopne
ret
mov
jns
xchg
out
mov
jno
jns
popa
es
imul
aam
sub
xchg
mov
std
shr
std
shr
aaa
repz
pop
mul
add
lock
outs
fldenv
test
(bad)
cdq
imul
sub
jp
xchg
ret
stos
in
imul
xchg
es
and
cmps
ja
mov
jmp
sub
jb
xchg
sub
xchg
sub
mov
gs
data16
cli
imul
jmp
std
sar
std
leave
stos
sub
out
mov
sahf
mov
and
ins
(bad)
imul
and
sar
das
(bad)
data16
addr16
jae
loope
repnz
(bad)
imul
and
sar
and
mov
ins
push
in
sub
lods
cmp
loopne
push
stc
mov
bnd
sub
cmp
nop
cli
adc
mov
fdiv
stc
mov
(bad)
idiv
imul
stc
mov
(bad)
idiv
mov
(bad)
idiv
adc
idiv
mov
(bad)
idiv
xchg
repnz
sub
(bad)
fnstsw
nop
sbb
pop
(bad)
test
pop
out
idiv
mov
(bad)
idiv
stos
xor
mov
(bad)
idiv
pop
push
idiv
mov
(bad)
idiv
dec
sbb
js
or
idiv
mov
repnz
neg
inc
mov
imul
div
stc
mov
(bad)
neg
(bad)
idiv
mov
(bad)
not
(bad)
idiv
mov
(bad)
imul
jmp
jno
imul
xchg
idiv
mov
inc
ja
(bad)
bnd
sub
adc
sub
xchg
sub
jne
pop
xor
stc
mov
bnd
sub
ins
mov
(bad)
idiv
mov
(bad)
idiv
pop
mov
fnstsw
mov
bound
mov
and
stc
mov
(bad)
idiv
mov
bound
stc
mov
bound
stc
mov
cli
adc
mov
or
stc
mov
(bad)
idiv
xchg
repnz
sub
(bad)
in
sub
stc
pop
mov
fnstsw
mov
bound
mov
and
stc
mov
(bad)
idiv
mov
bound
stc
mov
bound
stc
mov
sbb
pop
bound
mov
or
stc
mov
(bad)
idiv
dec
(bad)
idiv
mov
jecxz
xchg
jmp
pop
jp
xor
je
in
sub
xchg
out
sub
xor
addr16
loopne
push
out
sub
add
and
push
push
lahf
mov
cs
or
jnp
mov
mov
pmaxsw
sub
(bad)
jle
data16
dec
push
out
sub
jnp
xchg
mov
sbb
sahf
(bad)
or
xor
pop
hlt
mov
inc
shl
sub
mov
sub
imul
or
nop
add
call
ins
and
sahf
sar
loope
or
ins
aaa
into
push
sbb
jnp
push
cmp
shl
fld
aaa
iret
test
repnz
sub
imul
sub
mov
ret
movs
loopne
push
or
inc
bound
sub
fwait
jns
and
ins
or
loopne
repz
cmp
pushf
push
repnz
jg
fwait
jns
mov
(bad)
jmp
pslld
dec
push
out
sub
jnp
xchg
stos
xor
(bad)
mov
data16
mov
and
xor
jmp
or
cmp
mov
movs
fcom
dec
mov
xchg
loopne
sbb
daa
sub
fsub
cmps
cmp
cmp
jbe
cmp
mov
jl
in
in
dec
and
sub
push
imul
jmp
leave
mov
call
and
pusha
jmp
repnz
(bad)
lock
jge
pop
fld
sub
jb
or
loopne
sbb
data16
(bad)
lock
pop
adc
fld
sub
push
fld
sub
add
icebp
arpl
ins
sbb
add
ss
loope
and
mov
jae
push
(bad)
icebp
and
imul
jns
mov
ins
mov
fld
sub
arpl
ins
push
adc
mov
fld
sub
xchg
ret
mov
mov
loop
fld
sub
jbe
ins
or
std
dec
and
sub
mov
sub
cmp
mov
mov
mov
stos
es
mov
retf
loop
mov
imul
out
fs
sub
loop
sub
(bad)
jnp
data16
and
loopne
fld
sub
rcl
repnz
(bad)
imul
mov
mul
xor
push
loope
and
mov
jae
stc
adc
data16
icebp
and
imul
jns
mov
ins
mov
fld
sub
arpl
ins
push
adc
mov
fld
sub
cdq
ret
cdq
sub
out
scas
mov
jns
mov
mov
pop
cmp
cdq
sub
repnz
icebp
dec
and
adc
mov
sub
std
sar
and
imul
fs
dec
and
mov
icebp
pop
lods
xchg
mov
data16
cmps
mov
int
and
mov
repnz
adc
xchg
xchg
inc
sbb
fld
out
scas
es
and
sub
fld
sub
cdq
jmp
or
inc
repnz
inc
repnz
ror
imul
bnd
shl
sbb
sbb
and
repnz
cdq
ficom
sub
jnp
xchg
pop
push
mov
popa
repnz
or
imul
lods
cmp
mov
repnz
or
adc
in
lds
cdq
xchg
mov
inc
and
xor
imul
data16
iret
jnp
adc
sbb
mov
mov
or
shr
dec
mov
out
jno
sub
or
xchg
test
inc
push
sub
mov
inc
shl
imul
dec
mov
dec
loop
loopne
add
cmps
nop
fld
stos
xor
loope
iret
cdq
xchg
(bad)
or
in
sub
into
outs
pop
loop
jecxz
(bad)
or
sub
lahf
jmp
adc
ja
xchg
(bad)
or
cdq
xchg
(bad)
shr
(bad)
or
xchg
jns
test
repnz
pushf
div
fwait
xchg
(bad)
mov
data16
fist
add
cwde
add
cwde
add
repnz
sub
xchg
xchg
(bad)
or
out
scas
(bad)
xchg
mov
sbb
sub
or
movs
ja
xchg
(bad)
or
imul
sub
cdq
xor
xchg
(bad)
or
xchg
sub
shr
sub
data16
or
mov
out
sbb
imul
or
mov
xchg
xlat
or
imul
ins
pop
inc
and
inc
xor
mov
bnd
(bad)
or
xchg
jns
imul
je
repnz
mov
mov
repnz
imul
out
and
imul
stos
jl
cmp
mov
jb
(bad)
shl
push
xchg
mov
inc
and
test
push
sub
in
aad
jmp
shl
or
inc
int
sub
xchg
pop
(bad)
cdq
sbb
sbb
and
repnz
cwde
stos
cmp
imul
push
pop
or
add
cwde
xchg
pop
loop
sbb
sbb
and
repnz
sbb
sbb
aaa
jb
movs
cmp
pop
xor
push
vunpcklps
xor
xor
push
(bad)
xchg
pop
(bad)
cdq
sbb
sbb
sub
in
xor
cmp
sbb
sahf
pop
sar
add
out
xchg
pop
loop
sbb
or
imul
jno
scas
movs
cmp
pop
aaa
cmp
test
out
(bad)
std
imul
inc
repnz
outs
sub
add
cwde
add
or
outs
or
lea
xchg
pop
out
sbb
cwde
xchg
pop
loop
sbb
sbb
and
repnz
test
aad
loope
sub
push
test
test
xchg
imul
xor
loopne
jno
jge
movs
in
sbb
jns
jno
jnp
jno
add
mov
shr
imul
sub
jnp
scas
das
bnd
aad
push
jo
lock
or
outs
adc
xor
ins
sbb
lea
mov
cmp
add
or
call
xor
gs
xchg
imul
fbld
loopne
push
out
scas
(bad)
xchg
imul
lods
scas
stos
jl
cmp
movs
xor
mov
jmp
mov
xor
and
sub
imul
sub
out
sub
push
call
xchg
shl
sahf
loopne
ret
cmps
sub
retf
inc
xor
add
cwde
add
and
rcl
sub
mov
pop
not
ret
xchg
sub
out
scas
(bad)
(bad)
call
repnz
push
cmp
loopne
fild
push
jge
loope
scas
loopne
jns
dec
sub
mov
loopne
cli
movs
cmp
pop
aaa
cmp
xor
pop
cli
in
xor
xor
add
call
push
out
mov
(bad)
out
pop
call
inc
mov
jnp
push
cmp
shr
repnz
and
jns
jns
mul
mov
xlat
arpl
data16
jno
imul
and
adc
sti
mov
push
sub
out
das
clc
adc
mov
scas
sub
fisub
dec
push
out
sub
jnp
xchg
mov
jnp
push
ins
repnz
jae
xchg
pusha
in
imul
add
jns
adc
ss
sub
xchg
mov
cmps
call
ret
cmps
sub
and
jbe
cmp
mov
movs
in
xor
dec
mov
cdq
sbb
out
scas
jp
cmc
sub
sar
mov
jle
es
mov
call
sub
nop
cmp
shr
jno
sbb
xor
arpl
inc
bound
add
loope
shl
pop
or
dec
xor
lea
es
sbb
mov
repnz
out
mov
mov
repnz
mov
sub
xor
dec
movs
in
adc
movs
push
xor
mov
ror
sub
jge
or
and
xchg
popf
jbe
cmp
mov
sbb
sub
repnz
adc
imul
jmp
out
cdq
add
out
scas
movs
ja
xchg
xlat
or
mov
(bad)
out
stos
and
adc
xor
jmp
adc
sub
rcl
imul
jle
imul
setns
xor
imul
xchg
xlat
or
fwait
xchg
mov
or
fwait
xchg
sbb
mov
xchg
enter
repnz
imul
out
in
aad
cwde
xchg
xchg
xchg
sub
add
cdq
xchg
(bad)
jnp
xchg
pop
cli
push
ins
sub
add
imul
jnp
movs
(bad)
setns
call
jb
push
out
cwde
outs
loop
ds
xchg
(bad)
repz
cmp
mov
popa
inc
cmps
mov
popa
shl
imul
mov
rcl
movs
mov
imul
clc
imul
nop
stos
or
cmp
cdq
(bad)
or
and
jno
popa
sar
imul
jno
ins
push
ror
ror
imul
xchg
xlat
or
and
jle
push
sub
repnz
cmp
and
repnz
(bad)
mov
or
and
dec
ins
imul
jno
ins
push
loope
cdq
leave
mov
xchg
pushf
push
cdq
xchg
(bad)
sbb
sub
in
and
cdq
(bad)
or
and
jno
popa
sar
imul
repnz
push
loope
cdq
leave
mov
xchg
pushf
push
cdq
xchg
(bad)
sbb
lods
and
sahf
iret
jnp
lods
(bad)
setns
out
sbb
sub
sub
data16
in
sub
inc
and
imul
(bad)
or
ds
int3
mov
out
ins
repnz
or
repnz
in
aad
cwde
xchg
jns
inc
mov
repnz
jb
pusha
mov
imul
or
cmp
cdq
(bad)
or
and
jno
popa
inc
clc
mov
xchg
(bad)
or
cmp
loopne
fist
sub
sub
data16
in
sub
jne
fst
and
(bad)
inc
call
repnz
div
cdq
xchg
(bad)
sbb
sub
in
and
mov
sub
fbld
repnz
in
sub
inc
sub
xchg
imul
nop
jnp
fist
inc
int3
mov
xlat
push
jmp
xor
imul
imul
repnz
div
cdq
xchg
(bad)
movs
mov
push
data16
sub
xchg
(bad)
mov
jecxz
(bad)
or
cmp
mov
adc
jmp
push
data16
repnz
dec
sar
imul
mov
cwde
xchg
jle
pop
mov
repnz
stos
ss
or
imul
nop
stos
or
cmp
cdq
(bad)
or
and
popa
test
xor
sub
mov
and
imul
jp
cmp
xchg
(bad)
or
xor
outs
cmp
clc
imul
nop
stos
or
cmp
cdq
(bad)
or
and
sub
popa
inc
gs
jge
ja
xchg
xlat
or
and
jns
aad
sub
in
cmp
repnz
repnz
in
sub
jne
loop
and
(bad)
inc
call
repnz
jne
data16
iret
jnp
test
out
sbb
sub
repnz
repnz
in
sub
jne
fst
and
(bad)
inc
call
repnz
imul
shl
repnz
dec
rcr
imul
repnz
aad
cwde
xchg
jle
pop
mov
repnz
stos
ss
push
shl
lods
xchg
sub
aad
setns
mov
imul
or
cmp
sub
in
xchg
or
adc
lods
dec
cdq
xchg
(bad)
icebp
jecxz
(bad)
setns
or
loop
dec
cdq
xchg
(bad)
icebp
fcmovnbe
(bad)
setns
into
pop
loopne
dec
jl
sub
call
jnp
sahf
shl
repnz
test
icebp
out
cld
popf
or
in
dec
movs
jmp
sub
cdq
xchg
jle
cmp
imul
aam
repnz
xchg
jle
jmp
lods
cmp
jnp
xchg
lods
dec
cdq
xchg
(bad)
jae
rcl
setns
sub
data16
mov
popf
(bad)
or
xchg
pop
jmp
jns
jecxz
(bad)
or
cmp
mov
daa
push
jmp
and
imul
jp
scas
mov
xchg
(bad)
or
and
loopne
fist
sub
repnz
repnz
in
sub
jne
loop
and
(bad)
inc
call
repnz
imul
imul
jp
add
xchg
(bad)
or
adc
outs
call
(bad)
jb
imul
or
loop
or
aad
setns
pop
cwde
xchg
(bad)
jnp
test
setns
fpatan
xchg
loopne
sbb
push
xor
or
xor
imul
mov
xchg
inc
fnstcw
loop
out
arpl
repnz
lods
or
cmp
repnz
or
test
setns
div
cdq
xchg
(bad)
mov
jmp
fisttp
cdq
sub
or
scas
dec
jnp
xlat
(bad)
setns
out
cld
pop
imul
or
jecxz
(bad)
setns
lods
not
xor
xchg
xchg
aam
add
add
popf
(bad)
or
xchg
pop
jmp
mov
or
and
jns
mov
lods
xor
sub
repnz
(bad)
mov
or
fwait
xchg
mov
repnz
repnz
jp
scas
mov
xchg
(bad)
or
sub
outs
sub
imul
cmp
cdq
(bad)
or
pop
imul
scas
pop
imul
repnz
push
loope
cdq
leave
mov
xchg
pushf
push
cdq
xchg
(bad)
sbb
lods
and
cdq
add
add
ss
cdq
in
fisttp
imul
xchg
pushf
or
imul
(bad)
out
in
ror
imul
inc
enter
or
cdq
add
imul
nop
stos
or
cmp
cdq
(bad)
or
pop
imul
ss
imul
repnz
push
loope
mov
pushf
push
cdq
xchg
(bad)
sbb
lods
and
inc
fnstcw
xor
imul
cmp
cdq
(bad)
or
pop
imul
sar
(bad)
or
or
imul
nop
stos
or
or
sub
repnz
sub
data16
xor
xchg
push
cdq
xchg
(bad)
movs
push
push
div
pop
imul
ficomp
sub
imul
jno
ins
push
loope
xor
mov
xchg
pushf
push
cdq
xchg
(bad)
sbb
lods
and
or
sub
imul
nop
stos
or
cmp
cdq
(bad)
or
pop
imul
cs
imul
repnz
push
loope
cdq
leave
mov
xchg
pushf
push
cdq
xchg
(bad)
sbb
lods
and
rcl
fbld
repnz
in
sub
inc
or
xchg
nop
jnp
fist
inc
int3
mov
retf
adc
jmp
div
cdq
xchg
(bad)
sbb
push
sub
in
and
sahf
iret
jnp
aad
setns
out
sbb
arpl
repnz
in
sub
jne
fst
and
(bad)
inc
call
repnz
div
cdq
xchg
(bad)
sbb
push
sub
in
and
dec
push
sub
fbld
repnz
in
sub
jne
fst
and
(bad)
inc
call
repnz
div
cdq
xchg
(bad)
sbb
sub
in
and
inc
fnstcw
add
clc
imul
nop
stos
or
cmp
cdq
(bad)
or
pop
imul
ja
xchg
aam
ss
push
cdq
xchg
(bad)
mov
cmp
ds
imul
pop
pop
imul
repnz
push
loope
cdq
leave
mov
xchg
pushf
push
cdq
xchg
(bad)
sbb
lods
and
inc
fnstcw
add
sub
imul
or
jmp
adc
repnz
jp
add
xchg
(bad)
or
and
imul
nop
mov
aad
imul
cdq
ds
sbb
push
adc
loop
ja
repnz
repnz
jp
add
xchg
(bad)
or
adc
outs
add
das
and
(bad)
inc
call
repnz
add
out
scas
rcl
imul
repnz
push
loope
cdq
leave
mov
xchg
pushf
push
cdq
xchg
(bad)
sbb
lods
and
fst
repnz
repnz
in
sub
inc
add
imul
(bad)
or
ds
int3
mov
iret
adc
jmp
hlt
mov
xchg
pushf
push
cdq
xchg
(bad)
sbb
push
sub
in
and
add
cwde
add
repnz
xchg
sbb
imul
scas
inc
lock
xchg
xlat
or
add
jg
popf
(bad)
or
ds
rcl
pushf
sbb
push
sub
cdq
fadd
or
push
imul
or
cmp
add
xchg
aam
out
scas
jp
fstp
repnz
in
lds
cmp
mov
repnz
je
push
add
xor
lea
xor
imul
mov
ja
xchg
(bad)
or
imul
hlt
mov
in
or
push
push
leave
add
jmp
ins
or
or
inc
retf
sub
push
push
xchg
add
sub
call
cmc
mov
add
bnd
xchg
xchg
(bad)
jno
dec
mov
xor
out
mov
repnz
jns
retf
cmp
data16
into
jnp
jmp
out
jno
cmc
aam
cdq
imul
jno
push
(bad)
or
bound
imul
xchg
add
out
scas
sbb
in
sub
jnp
jmp
imul
sub
or
imul
fmul
mov
xor
jg
xchg
(bad)
or
jmp
sub
and
mov
jnp
inc
sar
aas
rcr
imul
or
fwait
xchg
(bad)
sbb
sub
out
in
pop
setns
(bad)
or
data16
cli
in
in
setns
mov
or
jmp
sub
and
mov
call
sbb
data16
data16
xchg
(bad)
cwde
jbe
sub
int
or
pop
imul
jnp
sub
repnz
ins
sub
data16
inc
fwait
xchg
(bad)
mov
add
lock
lods
or
movs
mov
jmp
repnz
or
imul
lods
inc
fwait
xchg
(bad)
mov
xchg
pushf
data16
xchg
(bad)
or
cdq
xchg
pushf
jle
xchg
(bad)
or
cdq
xchg
pushf
push
xchg
(bad)
or
cdq
aas
movs
ja
xchg
(bad)
or
cdq
xchg
stos
ss
loopne
outs
fwait
xchg
(bad)
sti
cmps
sbb
movs
mov
sbb
pop
jmp
repnz
leave
cmc
mov
in
push
cwde
xchg
(bad)
mov
data16
ret
sahf
loopne
jg
fst
or
call
retf
shl
in
aam
cdq
call
sub
jecxz
xlat
or
pop
imul
ja
xchg
(bad)
or
fiadd
jl
data16
into
jnp
add
out
xor
cdq
push
out
ja
xchg
(bad)
or
loop
(bad)
or
mov
xchg
sub
out
adc
ja
xchg
(bad)
or
cdq
xchg
jo
jecxz
aam
cdq
cmp
add
cwde
add
cwde
add
cwde
data16
push
cwde
xchg
(bad)
mov
push
imul
sbb
imul
or
imul
fdivr
loopne
sub
call
aad
cdq
xchg
jns
mov
lods
cmp
add
or
out
xchg
add
out
scas
movs
ja
xchg
(bad)
or
and
shl
pusha
jmp
icebp
imul
imul
or
or
ins
pop
cmp
pop
cwde
push
imul
imul
sbb
sub
mov
sbb
scas
imul
in
dec
setns
sub
data16
push
cwde
xchg
(bad)
mov
imul
cmc
mov
in
push
cwde
xchg
(bad)
mov
cdq
jmp
data16
jno
cmc
aam
cdq
imul
push
cli
xchg
(bad)
or
dec
imul
outs
fwait
xchg
(bad)
bnd
popf
setns
sub
out
dec
lods
imul
sub
or
(bad)
inc
ret
or
xchg
pushf
push
fwait
xchg
(bad)
sbb
pop
sub
in
in
mov
cdq
xchg
ret
xchg
sbb
out
scas
jbe
cmp
cmp
pop
in
cmp
scas
jb
or
pushf
jno
or
loopne
ret
sahf
loopne
or
push
imul
cmps
cwde
xchg
pop
dec
loopne
xchg
out
cmp
or
push
imul
cmps
nop
cmp
xor
sub
push
cmps
xchg
call
sub
shr
std
sar
cmps
nop
push
fnstsw
jns
mov
push
imul
jno
jne
std
repnz
das
jnp
pop
sar
add
jnp
sub
mov
sub
in
and
add
test
sbb
xchg
pop
(bad)
imul
das
mul
cmp
mov
imul
inc
and
es
xor
jns
inc
pop
sub
out
xchg
sub
out
scas
jp
shr
jg
outs
sub
sar
cmps
nop
in
loop
cmp
not
sub
xchg
jns
data16
inc
jbe
sub
cwde
add
sbb
sub
out
scas
mov
xor
fstp
bnd
shl
imul
sub
in
sub
lods
cmp
loopne
xor
int3
dec
cs
repnz
sbb
data16
in
xor
dec
mov
shr
sub
out
scas
out
ja
mov
or
out
mov
ja
mov
or
xchg
cmc
mov
or
xor
test
sub
out
xchg
sbb
out
scas
jp
shr
cwde
(bad)
imul
xchg
pushf
cmp
shl
xor
mov
or
xor
aad
or
data16
dec
xchg
jmp
movs
mov
push
repnz
jmp
jmp
cdq
fsubr
adc
imul
xor
jbe
inc
scas
mov
or
xchg
inc
sub
out
xchg
ficom
cdq
xchg
mov
sbb
(bad)
ret
cmps
ss
scas
stos
jl
adc
shl
rcr
sub
outs
xlat
push
and
imul
push
mov
inc
fnstcw
cmp
imul
repnz
mov
cmp
imul
mov
or
es
cdq
xchg
stos
outs
add
imul
in
and
or
repnz
(bad)
mov
or
cdq
xchg
mov
add
scas
inc
mov
jecxz
leave
or
push
imul
push
push
imul
repnz
push
out
cdq
leave
mov
in
xacquire
sbb
cli
out
and
imul
imul
repnz
push
fisttp
ror
imul
mov
or
and
movs
dec
mov
or
imul
imul
or
cmp
bnd
sub
cdq
xchg
jns
std
pop
sub
in
and
jmp
sub
cdq
xchg
jns
loope
sub
in
and
sahf
iret
jnp
test
or
push
pop
sub
fbld
repnz
in
sub
jb
fst
and
movs
ja
mov
or
imul
imul
or
add
cdq
pop
sub
fisttp
sub
data16
xor
xchg
xacquire
cmc
mov
in
xacquire
sbb
jmp
cmp
jmp
sub
cdq
xchg
jns
inc
mov
bnd
sub
cdq
xchg
jns
mov
sub
in
cmp
repnz
repnz
in
sub
jb
fst
and
movs
ja
mov
or
imul
imul
imul
imul
repnz
repnz
in
sub
jb
fst
and
movs
ja
mov
or
imul
imul
imul
imul
or
add
inc
pop
sub
fisttp
sub
data16
xor
xchg
xacquire
cmc
mov
in
xacquire
sbb
jmp
div
xchg
sbb
jmp
sbb
data16
repnz
jge
add
imul
cli
push
imul
add
mov
mov
in
xacquire
sbb
jmp
sbb
data16
repnz
jge
add
imul
cmp
sub
popa
inc
call
jecxz
leave
or
push
imul
adc
dec
ins
imul
jno
ins
push
out
cdq
leave
mov
in
xacquire
sbb
jmp
add
imul
in
xacquire
cmc
mov
in
xacquire
sbb
jmp
sbb
data16
repnz
jge
add
imul
mov
imul
repnz
imul
ret
sub
popa
xchg
sub
sub
mov
xor
clc
imul
nop
stos
or
cmp
bnd
sub
cdq
xchg
jns
popf
pop
sub
in
and
rcr
repnz
fimul
out
mov
sub
xor
xchg
xacquire
cmc
mov
in
xacquire
sbb
jmp
sbb
data16
repnz
jge
add
imul
push
push
imul
sub
sub
jg
imul
bound
sub
popa
test
pop
push
sub
mov
sbb
data16
repnz
jge
add
imul
xchg
push
imul
rcl
sub
imul
jno
ins
push
fisttp
ror
imul
mov
or
and
movs
dec
mov
or
imul
imul
imul
add
cwde
add
call
mov
ja
mov
or
imul
cmp
imul
shr
jmp
sub
cdq
xchg
jle
rcl
(bad)
fisub
(bad)
inc
call
repnz
jmp
add
mov
or
cmp
mov
repnz
ds
out
xchg
add
out
scas
stos
push
cli
xchg
(bad)
or
xchg
cmc
or
data16
cli
xor
imul
data16
xchg
(bad)
dec
cmp
repnz
mov
or
dec
imul
repnz
inc
repnz
sub
in
sub
out
in
mov
cdq
xchg
inc
loop
imul
imul
sub
fst
or
mov
mov
repnz
imul
out
mov
cdq
xchg
stos
ss
pusha
jmp
repnz
ja
xchg
(bad)
or
fwait
xchg
(bad)
mov
rol
adc
cdq
xchg
mov
setns
aam
cdq
cmp
loope
xchg
(bad)
jno
and
imul
inc
push
mov
xchg
xlat
or
dec
imul
or
call
fsub
rol
(bad)
jnp
icebp
aam
cdq
loopne
fistp
add
jg
rcl
or
dec
imul
or
mov
or
xchg
ins
repnz
xchg
(bad)
or
in
mov
cdq
xchg
sub
mov
mov
xor
cdq
xchg
jns
mov
(bad)
or
fwait
xchg
(bad)
mov
cdq
xchg
jns
add
cwde
inc
add
cwde
add
jg
xchg
xlat
or
mov
repnz
jmp
repnz
pushf
pop
fwait
xchg
(bad)
sbb
add
repnz
into
jnp
adc
or
ror
aam
cdq
add
sub
mov
xchg
xlat
or
dec
imul
ja
xchg
(bad)
or
mov
in
push
cwde
xchg
(bad)
mov
or
mov
jmp
add
ja
xchg
(bad)
or
popf
xchg
(bad)
into
arpl
loope
nop
lods
std
imul
repnz
add
add
ja
xchg
(bad)
or
dec
imul
jnp
add
call
mov
sbb
fcmovbe
or
cdq
xchg
sub
imul
movs
ja
xchg
(bad)
or
xchg
xchg
(bad)
jno
popa
and
imul
inc
repnz
fdivr
ja
xchg
(bad)
or
imul
pushf
data16
xchg
(bad)
sbb
scas
test
fild
repnz
fdivr
mov
imul
repnz
repnz
mov
fwait
add
out
test
cmc
mov
adc
outs
cli
xchg
(bad)
or
out
stos
sub
xor
xchg
(bad)
sbb
lods
and
outs
fwait
xchg
(bad)
jno
pop
jns
cdq
fdivr
and
xchg
(bad)
jno
mov
ja
xchg
(bad)
or
popf
inc
sub
mov
xchg
sub
imul
xchg
(bad)
inc
repnz
fmul
retf
sub
inc
sar
xchg
pushf
push
fwait
xchg
(bad)
sbb
sub
in
in
mov
cdq
xchg
jbe
cmp
cmp
pop
in
cmp
outs
(bad)
or
mov
mov
mov
data16
push
cdq
sbb
sbb
cmp
jg
imul
or
rol
cmp
jns
sub
fsubrp
jbe
data16
into
jnp
cdq
mov
(bad)
(bad)
xchg
jge
addr16
repnz
imul
repnz
push
add
movs
push
adc
sub
imul
scas
inc
or
imul
sub
xor
mov
jnp
inc
sar
ss
scas
stos
jl
adc
loop
imul
movs
xor
fcomip
dec
cmp
add
mov
sub
adc
sbb
sub
loopne
repz
loopne
sti
nop
sbb
ret
cmps
sub
sub
jmp
sub
cdq
xchg
jns
mov
sub
addr16
(bad)
or
cdq
xchg
stos
ss
(bad)
or
out
cdq
ret
scas
pop
lods
imul
mov
imul
stos
jl
sub
(bad)
xor
sub
adc
sub
add
ret
xchg
sub
out
scas
es
and
imul
sub
mov
data16
push
add
call
test
out
imul
jno
push
call
frstor
jmp
frstor
imul
mov
or
xor
add
ins
or
xchg
and
jmp
ds
xor
xchg
xor
inc
sar
add
cwde
add
cwde
add
add
cwde
add
call
inc
repnz
inc
loop
inc
add
data16
cwde
addr16
inc
ret
lods
push
and
sar
sub
sti
inc
repnz
movs
or
(bad)
(bad)
mov
push
repnz
movs
or
(bad)
(bad)
out
imul
lmsw
add
movs
or
(bad)
(bad)
dec
imul
mov
add
add
movs
or
(bad)
(bad)
jp
imul
data16
ret
sahf
loopne
cwde
addr16
inc
ret
add
imul
cwde
addr16
inc
ret
or
imul
cwde
addr16
inc
ret
mov
loop
imul
ret
pop
push
and
shl
imul
jnp
add
movs
or
(bad)
(bad)
push
lock
repnz
movs
or
(bad)
(bad)
xchg
hlt
push
repnz
movs
or
(bad)
(bad)
repnz
mov
sub
retf
mov
push
repnz
repz
loopne
lods
cmp
jle
xor
out
xchg
ficom
mov
xor
repz
call
(bad)
(bad)
mov
push
repnz
or
xor
imul
repnz
(bad)
(bad)
out
imul
addr16
repnz
ret
sahf
loopne
cwde
call
sbb
dec
mov
add
je
imul
daa
imul
cwde
call
sbb
imul
push
cdq
pop
xor
xor
sub
stc
sub
sbb
dec
sub
lds
mov
imul
daa
imul
cwde
call
sbb
dec
sub
lds
mov
add
je
imul
daa
imul
jnp
push
aad
push
in
mov
imul
out
imul
loop
imul
daa
pslld
loopne
xor
int3
jno
jge
movs
fld
out
sbb
sub
cdq
sbb
sbb
xchg
(bad)
or
mov
in
aad
cdq
jmp
callw
pusha
imul
call
jns
mov
or
data16
fistp
xchg
sbb
stc
sub
cwde
data16
mov
push
ss
or
fldenv
push
imul
sub
mov
imul
mov
repnz
daa
imul
daa
imul
and
rcl
add
repnz
inc
ss
mov
repnz
ror
imul
repnz
(bad)
(bad)
push
imul
or
(bad)
(bad)
and
push
repnz
or
fnstenv
or
cmp
mov
add
sub
inc
repnz
or
retfw
and
inc
repnz
inc
repnz
inc
test
inc
repnz
aad
repnz
cwde
add
cwde
jb
aam
imul
imul
push
ins
mov
cmp
repnz
pop
sbb
repnz
pop
ins
push
daa
imul
add
dec
add
repnz
mov
mov
repnz
sar
enter
imul
repnz
(bad)
(bad)
and
push
shl
cwde
push
add
call
repnz
add
sub
inc
repnz
repnz
and
inc
repnz
pop
sbb
repnz
pop
ins
push
daa
imul
add
fimul
imul
sub
inc
sub
xor
(bad)
stc
sub
jae
pop
add
add
or
add
or
add
call
sub
add
call
repz
add
sub
inc
repnz
or
ins
daa
imul
daa
imul
and
inc
xchg
or
inc
pop
imul
add
repnz
inc
cs
mov
repnz
rcl
hlt
push
mov
add
call
add
imul
sub
imul
hlt
push
repnz
or
add
or
add
ror
sub
add
imul
sub
inc
repnz
repnz
and
mov
xor
push
imul
or
(bad)
mov
inc
sub
add
repnz
(bad)
sub
add
repnz
inc
cs
mov
repnz
shl
imul
repnz
cdq
add
or
add
or
add
cwde
pop
add
repnz
sub
push
add
mov
add
sub
inc
repnz
or
retfw
and
test
xchg
dec
sub
or
(bad)
(bad)
push
imul
or
(bad)
(bad)
and
push
jae
imul
repnz
jge
repnz
repnz
mov
mov
repnz
shl
enter
imul
repnz
(bad)
(bad)
and
push
xchg
push
jno
repnz
repnz
jns
and
imul
mov
mov
add
sbb
sub
lds
mov
add
or
add
or
add
call
sub
add
imul
jp
mov
add
sub
inc
repnz
fldcw
imul
(bad)
push
imul
or
(bad)
(bad)
and
push
movs
push
and
repnz
repnz
imul
mov
mov
add
sbb
dec
sub
(bad)
mov
add
or
add
or
add
call
sub
add
mov
add
sub
inc
repnz
repnz
mov
add
or
add
or
add
call
sub
add
mov
add
sub
inc
repnz
repnz
mov
loopne
fistp
xchg
sbb
stc
sub
cwde
xchg
sbb
(bad)
sub
cwde
jle
add
or
inc
bnd
mov
push
sub
imul
imul
repnz
(bad)
(bad)
push
imul
or
(bad)
mov
jno
xchg
push
pushf
sub
add
mov
add
sub
inc
repnz
repnz
mov
add
or
add
or
add
call
sub
add
call
lock
add
sub
inc
repnz
or
retfw
and
rcr
dec
sub
xchg
mov
sbb
nop
(bad)
or
xor
int3
jno
jns
movs
fld
mov
mov
repnz
sbb
sbb
or
mov
jl
or
lds
mov
loopne
fistp
xchg
sbb
stc
sub
sbb
sub
mov
imul
imul
repnz
jg
and
mov
add
add
cwde
add
repnz
inc
cs
mov
repnz
imul
shl
mov
xchg
sbb
stc
sub
cwde
cmp
in
sub
fldenv
cdq
stos
sbb
cmp
or
inc
bnd
scas
mov
repnz
mov
mov
add
sbb
dec
sub
lds
mov
call
sub
stc
sub
cwde
xchg
sbb
(bad)
sub
call
rcr
and
inc
mov
jmpw
mov
mov
mov
add
sbb
sub
lds
mov
add
cwde
add
add
cwde
add
call
inc
repnz
inc
out
jmp
repnz
cwde
addr16
inc
ret
sub
adc
sub
stc
sub
cwde
xchg
sbb
(bad)
sub
cwde
add
dec
cwde
jb
cmp
mov
add
mov
shr
mov
xor
add
call
shr
shl
sub
or
inc
mov
imul
mov
adc
test
repnz
sbb
cwde
add
call
shr
shr
add
cwde
add
imul
hlt
push
repnz
or
add
or
add
ror
jb
add
sub
mov
adc
jb
sub
jae
jle
repnz
or
add
or
add
into
or
inc
pop
imul
imul
sub
inc
repnz
add
popf
xchg
xchg
(bad)
cwde
xchg
sbb
stc
sub
cwde
xchg
sbb
(bad)
sub
cwde
jbe
test
imul
sub
add
repnz
mov
mov
repnz
ror
sub
enter
xchg
sbb
out
scas
inc
repnz
pop
sbb
repnz
pop
ins
push
daa
imul
imul
imul
repnz
and
inc
sub
adc
sub
cwde
xchg
sbb
stc
sub
cwde
xchg
sbb
(bad)
sub
cwde
jbe
aam
imul
sub
cmp
mov
mov
repnz
shl
hlt
push
(bad)
push
imul
or
(bad)
(bad)
and
push
movs
push
shr
repnz
repnz
imul
mov
mov
add
sbb
sub
(bad)
mov
add
or
add
or
add
call
sub
add
call
lock
add
sub
inc
repnz
push
push
and
inc
repnz
pop
sbb
repnz
pop
ins
push
daa
imul
add
repnz
sub
add
and
inc
sub
xor
cwde
xchg
sbb
stc
sub
cwde
xchg
sbb
(bad)
sub
cwde
jle
stos
repnz
inc
bnd
test
repnz
push
sub
imul
imul
repnz
aad
imul
sbb
repnz
pop
dec
push
and
inc
jmp
inc
bnd
mov
push
sub
imul
imul
repnz
(bad)
(bad)
push
imul
or
(bad)
mov
jno
xchg
or
inc
out
imul
sub
mov
imul
mov
or
imul
daa
imul
daa
imul
add
imul
sub
add
sub
inc
or
sbb
ficomp
add
out
scas
sar
xchg
(bad)
lods
cmp
stos
push
jb
jg
(bad)
out
shr
cwde
add
icebp
or
inc
icebp
push
imul
cli
mov
xor
data16
jno
xchg
es
imul
sbb
jo
repnz
stos
mov
xor
imul
ins
sub
data16
add
in
push
ss
push
ss
pop
loop
push
popf
mov
add
bnd
lds
adc
xchg
pop
push
push
cmp
mov
add
and
(bad)
xchg
pop
cli
mov
iret
or
out
sub
sti
cmps
sbb
sub
or
shr
sub
mov
mov
fsubrp
dec
repnz
into
jnp
test
cmp
test
repz
ss
js
out
pop
jp
sub
jmp
sub
xor
cdq
sub
out
scas
rcr
imul
repnz
je
out
(bad)
repz
dec
(bad)
sub
jg
imul
(bad)
jle
sub
xchg
sub
and
movs
ja
xchg
(bad)
or
imul
pushf
cdq
mov
in
repnz
xchg
(bad)
mov
callw
jp
sub
xchg
sub
inc
and
movs
ja
xchg
(bad)
or
imul
pop
cwde
mov
in
repnz
xchg
(bad)
mov
jmpw
pusha
sbb
call
sub
int
sub
out
(bad)
cmc
adc
xchg
xlat
sub
jg
imul
data16
sub
sahf
iret
jnp
xchg
xlat
or
sbb
stos
inc
and
movs
ja
xchg
(bad)
or
imul
retf
cwde
mov
in
repnz
xchg
(bad)
mov
jmpw
ins
sbb
call
sub
and
adc
stc
adc
repz
sub
imul
fidiv
sub
inc
fnstcw
jmp
cmp
jmp
sub
imul
call
js
retf
aam
sub
imul
or
sub
xchg
daa
xchg
jl
and
movs
ja
xchg
(bad)
or
imul
inc
mov
sub
call
sub
imul
mov
adc
and
inc
dec
xlat
sub
call
aam
cdq
add
aad
imul
jno
inc
mov
ja
xchg
(bad)
or
cwde
xchg
(bad)
lods
cmp
cmp
pop
xor
popa
xchg
push
aaa
stc
popa
jnp
inc
sar
loopne
movs
mov
xor
data16
hlt
addr16
addr16
or
cmps
sbb
sar
xor
imul
imul
in
and
pop
fnstcw
rcl
adc
in
int
cdq
xchg
mov
mov
in
pop
xchg
xchg
(bad)
mov
sbb
imul
addr16
xchg
(bad)
or
cdq
xchg
sub
and
movs
ja
sahf
(bad)
or
imul
sbb
call
les
test
cdq
add
out
scas
test
or
sbb
les
leave
jl
repnz
fimul
cdq
xchg
sub
inc
and
movs
ja
sahf
(bad)
or
imul
sbb
call
les
sbb
xchg
imul
sbb
call
les
cmp
aam
or
add
and
movs
ja
sahf
(bad)
or
imul
sbb
call
les
inc
jl
repnz
cdq
sub
out
scas
test
or
in
fisubr
jmp
les
popa
jl
repnz
fimul
cdq
xchg
and
and
movs
ja
sahf
(bad)
or
imul
sbb
call
les
mov
sub
out
cdq
ficom
in
leave
add
out
fimul
cdq
xchg
and
inc
and
movs
ja
sahf
(bad)
or
imul
sbb
call
les
cmc
jge
repnz
fimul
cdq
xchg
daa
xchg
or
imul
imul
sub
test
or
mov
iret
jnp
mov
or
push
leave
imul
out
mov
add
ss
lods
sbb
call
in
rol
pop
sub
data16
ret
xchg
loopne
jae
or
repnz
repnz
add
and
rcl
(bad)
jno
popa
mov
or
mov
ins
sub
jmpw
call
lock
data16
retf
sub
xchg
aad
cdq
push
es
push
(bad)
push
cdq
xchg
sub
xchg
ror
mov
xchg
aad
cdq
cmp
jp
imul
dec
inc
imul
sub
jmp
adc
retf
sub
(bad)
xor
mov
fld
outs
leave
fist
scas
mov
pop
or
push
stc
mov
and
movs
ja
xchg
(bad)
or
imul
stc
mov
and
movs
ja
xchg
(bad)
or
imul
ins
sub
jmp
aad
cdq
xchg
jns
jge
sub
out
cdq
ficom
in
std
add
jmp
aad
cdq
xchg
jns
jbe
imul
in
aad
cdq
xchg
jns
sar
repnz
push
mov
in
push
sahf
xchg
(bad)
mov
jmp
aad
cdq
xchg
jns
imul
cdq
xchg
stos
xor
movs
ja
xchg
(bad)
or
and
movs
ja
xchg
(bad)
or
imul
xchg
ror
jb
sub
and
movs
ja
xchg
(bad)
or
cdq
xchg
stos
ss
jmp
repnz
push
call
sbb
loopne
or
jp
repnz
(bad)
mov
or
sahf
xchg
(bad)
or
imul
or
and
inc
pop
mov
xchg
ror
jo
sub
jns
jge
sub
jg
xchg
xlat
or
je
sub
xchg
xlat
or
jb
sub
mov
or
jecxz
fimul
call
jns
mov
or
call
or
cdq
jmp
adc
sub
cdq
(bad)
or
xchg
(bad)
or
and
movs
ja
xchg
(bad)
or
imul
xchg
(bad)
mov
data16
and
xchg
xlat
or
jne
sub
mov
push
cmc
jbe
inc
mov
mov
repnz
push
sahf
xchg
(bad)
dec
ret
repnz
(bad)
mov
or
call
push
sahf
xchg
(bad)
sbb
in
aad
cdq
xchg
jns
or
aam
or
xchg
jle
fistp
push
cmc
sar
jg
xchg
ror
cdq
(bad)
or
sub
cwde
add
sbb
jp
repnz
ja
xchg
(bad)
or
mov
in
cdq
jmp
imul
(bad)
inc
mov
cmp
callw
xor
call
cmp
data16
pop
pushf
xchg
(bad)
lods
cmp
loopne
bound
jnp
ror
imul
imul
shl
jae
outs
outs
repnz
repnz
push
cmp
imul
test
ins
jecxz
imul
data16
xor
sub
push
push
imul
mov
imul
repnz
cmp
imul
sub
mov
repnz
imul
out
mov
sub
stos
inc
mul
sub
fadd
or
outs
and
repz
stc
mov
mov
mov
cdq
jmp
data16
in
imul
mov
popa
clc
xlat
adc
imul
ins
pop
inc
and
test
cmp
idiv
mov
cmps
sahf
ret
xor
jecxz
mov
mov
jnp
loope
push
mov
les
mov
cmp
dec
rol
nop
jbe
mov
or
shr
dec
mov
out
jno
or
push
mov
les
rol
xor
sub
imul
or
imul
scas
lods
pop
mov
xchg
cdq
xchg
sbb
into
les
(bad)
sub
call
mov
cdq
xchg
jns
popa
jge
repnz
movs
ja
test
or
mov
cmp
data16
push
mov
in
or
je
sub
into
les
mov
jno
bnd
mov
cdq
xchg
jns
cdq
jns
repnz
mov
sub
stos
inc
repz
repnz
(bad)
sub
call
mov
xor
mov
sbb
xchg
movs
(bad)
bound
sub
call
icebp
mov
add
xor
sub
call
cmp
data16
fimul
das
push
imul
add
(bad)
(bad)
sub
call
mov
loope
imul
pop
cdq
xchg
movs
(bad)
out
imul
dec
sub
call
icebp
mov
add
xor
sub
call
cmp
jmp
xchg
pop
cdq
xchg
movs
(bad)
mov
pusha
sub
call
icebp
jnp
add
cwde
add
call
mov
and
sub
mov
es
ins
dec
cdq
sub
jmp
xchg
mov
cdq
xchg
jns
and
bnd
pushf
sbb
cdq
sub
or
movs
xchg
aas
jns
fcmovnu
(bad)
or
rol
inc
bnd
xchg
mov
xchg
sub
imul
std
imul
(bad)
or
imul
(bad)
mov
push
sub
adc
xchg
movs
ss
inc
mov
popf
sbb
sub
or
movs
mov
cmp
push
cdq
leave
mov
xchg
pop
inc
mov
es
popf
imul
in
popf
pop
cdq
xchg
mov
or
rol
movs
test
push
sbb
mov
in
add
sub
jnp
test
sub
imul
loopne
call
rcr
sub
mov
sub
add
sbb
jns
repnz
sub
dec
neg
repnz
mov
or
cdq
xchg
mov
icebp
imul
lods
sub
imul
imul
repz
aad
sbb
imul
repnz
inc
repnz
inc
repnz
inc
repnz
imul
sub
inc
adc
or
repnz
sub
jae
cld
inc
repnz
repnz
shr
imul
inc
cdq
xchg
stos
bound
adc
imul
imul
call
sub
imul
stos
pop
and
outs
push
sub
retf
or
cdq
xchg
sub
sub
mov
pop
cdq
xchg
jns
jecxz
(bad)
or
shr
sub
push
cmp
bnd
lock
(bad)
jno
jno
xor
outs
stos
xlat
or
imul
scas
sub
shr
sub
imul
rcl
out
xor
into
xchg
or
add
and
inc
repnz
rcr
imul
repnz
pop
mov
inc
repnz
xchg
pop
mov
add
cwde
and
imul
or
inc
push
imul
repnz
sub
sbb
sub
lea
mov
cmp
pushw
jnp
inc
icebp
jnp
in
push
cmp
bnd
int
mov
repnz
jmp
test
xor
int3
jae
push
sub
data16
fldcw
jne
imul
sub
jnp
loop
(bad)
in
cmp
loop
sub
pushw
daa
jno
imul
or
sub
(bad)
cmc
and
push
cmp
imul
imul
pop
jp
repnz
ja
sub
imul
adc
imul
repnz
imul
imul
mov
repnz
pop
inc
inc
and
shr
xchg
(bad)
jnp
adc
repz
loopne
call
ror
xchg
shl
xchg
(bad)
jno
jns
ja
xchg
(bad)
or
cdq
xchg
jns
ror
int3
(bad)
imul
in
lods
repnz
sbb
(bad)
sub
sbb
test
cmc
setns
(bad)
or
rep
aam
cdq
inc
mov
retf
mov
ss
mov
or
fwait
xchg
(bad)
jno
ins
mov
or
cdq
xchg
adc
adc
repz
in
leave
setns
(bad)
or
fwait
xchg
(bad)
(bad)
mov
inc
repnz
(bad)
(bad)
and
push
repnz
fistp
or
es
outs
sub
(bad)
or
inc
inc
and
mov
xor
and
sub
sbb
(bad)
cdq
pop
inc
inc
and
rcl
xchg
(bad)
stos
out
pop
inc
and
sub
jecxz
cs
sbb
shr
sub
ds
(bad)
or
imul
imul
cmc
imul
and
cmc
imul
popa
pop
cli
cdq
sbb
sbb
xchg
ficom
cdq
xchg
mov
repnz
out
in
fisttp
xchg
test
and
repnz
ins
mov
mov
ins
pop
push
and
pop
into
pop
ins
sbb
imul
daa
imul
and
pop
(bad)
pop
ins
push
push
and
pop
out
pop
ins
mov
imul
daa
imul
daa
imul
repnz
(bad)
xchg
pushf
(bad)
imul
ins
push
push
and
pop
loop
ins
mov
imul
daa
imul
xchg
pop
loop
jecxz
repnz
or
jbe
pop
(bad)
imul
int3
icebp
setns
aam
cdq
imul
imul
push
das
repnz
ret
sahf
loopne
call
aam
cdq
xchg
jns
push
xor
fwait
xchg
(bad)
or
add
call
ror
imul
mov
or
sub
imul
or
fwait
xchg
(bad)
xor
fwait
aam
cdq
imul
push
cdq
imul
or
xchg
jns
push
in
mov
imul
(bad)
mov
push
sub
adc
xor
add
and
movs
outs
fwait
xchg
(bad)
or
cdq
xchg
stos
ss
(bad)
or
or
inc
repnz
pop
icebp
mov
add
sbb
arpl
repnz
pop
lods
push
and
shr
ins
sub
ficom
cmp
data16
into
jnp
(bad)
aam
cdq
loopne
jg
xchg
xlat
or
xchg
xchg
(bad)
or
and
movs
ja
xchg
(bad)
or
imul
imul
repz
sbb
aam
or
xchg
sub
add
sub
inc
repnz
repnz
sbb
repz
sbb
lea
sets
imul
jmp
or
inc
adc
and
imul
repnz
and
data16
call
std
shr
aad
cdq
xchg
mov
or
bound
mov
sub
and
inc
repnz
sbb
repz
sbb
pusha
sub
(bad)
sbb
push
cwde
xchg
(bad)
repz
in
aad
cdq
xchg
adc
add
jmp
aam
cdq
xchg
jns
jecxz
aam
cdq
cmp
mov
cwde
aam
cdq
cmp
mov
sub
jns
or
jecxz
xlat
or
out
imul
(bad)
and
jmpw
cwde
xchg
(bad)
repnz
repnz
inc
xor
cmp
(bad)
(bad)
out
imul
xchg
and
data16
imul
lods
add
inc
icebp
mov
in
add
jae
repnz
sub
data16
sets
add
jbe
imul
or
or
inc
repnz
sar
add
sbb
pop
add
outs
outs
imul
repnz
jmp
imul
lods
add
retf
(bad)
mov
in
add
(bad)
repnz
sub
data16
sets
add
imul
jb
xchg
xlat
or
or
inc
repnz
add
mov
add
sbb
popa
sub
cdq
pop
add
imul
sbb
sub
jmp
aam
cdq
xchg
stos
cmp
imul
add
cwde
add
repnz
and
xchg
sbb
stc
sub
sbb
xchg
sub
scas
lods
or
push
es
jecxz
xlat
or
fwait
xchg
(bad)
or
pop
push
push
ror
inc
repnz
inc
(bad)
mov
add
sbb
sub
cdq
pop
add
imul
sbb
imul
out
ror
xchg
sub
xchg
xlat
or
fucomip
out
or
sub
xchg
xlat
or
xchg
xchg
(bad)
or
and
movs
ja
xchg
(bad)
or
imul
imul
stc
sub
sbb
sub
out
aam
cdq
xchg
sub
add
and
mov
cs
sbb
stc
sub
sbb
outs
sub
(bad)
scas
lods
or
push
es
jecxz
xlat
or
fwait
xchg
(bad)
or
pop
push
push
ror
inc
repnz
xchg
mov
add
sbb
pop
or
imul
sbb
sub
out
ror
xchg
sub
xchg
xlat
or
es
sar
sar
ror
xchg
adc
adc
test
push
push
sub
jmp
aam
cdq
xchg
jns
jecxz
aam
cdq
cmp
mov
cwde
aam
cdq
cmp
push
outs
imul
sbb
sub
fwait
xchg
(bad)
jns
(bad)
aam
cdq
loopne
cwde
add
cwde
bound
sub
sub
stc
sub
sbb
ins
sub
out
in
(bad)
xchg
inc
lock
inc
repnz
(bad)
or
xchg
shl
sub
sbb
mov
sbb
imul
or
stos
inc
bnd
lds
cdq
xchg
jnp
push
pop
mov
xchg
pushf
add
ins
sub
or
movs
ja
xchg
(bad)
or
xchg
mov
cdq
(bad)
or
xchg
rcr
sub
cwde
aam
cdq
jmp
data16
cwde
data16
push
fwait
xchg
(bad)
mov
fwait
xchg
(bad)
mov
cdq
xchg
shl
sub
fwait
xchg
(bad)
mov
xchg
sub
cdq
or
xchg
(bad)
or
xchg
sbb
(bad)
sub
sbb
outs
sub
or
inc
repnz
inc
repnz
inc
repnz
imul
data16
add
pop
sar
add
cwde
add
or
cdq
add
in
(bad)
mov
push
sub
adc
movs
mov
xor
inc
(bad)
les
sub
cdq
add
bnd
lds
cdq
xchg
jns
addr16
and
imul
or
data16
ret
sahf
loopne
or
cdq
or
(bad)
imul
test
popf
mov
add
and
inc
mov
imul
or
or
(bad)
(bad)
outs
imul
mov
rol
sahf
loopne
sbb
pop
out
sbb
or
outs
or
lods
cmp
cmp
pop
in
and
xchg
in
lahf
scas
cmp
xor
pushw
imul
stos
(bad)
jbe
es
imul
push
and
pop
stc
cdq
pop
shr
rcl
sub
xchg
ins
repnz
sbb
sti
sub
xchg
sbb
(bad)
sub
sbb
ins
sub
pop
pop
test
stc
cdq
pop
add
xchg
sub
push
inc
mov
data16
or
or
adc
jp
imul
dec
imul
mov
sub
add
out
scas
adc
dec
imul
adc
mov
sub
sar
sub
xchg
adc
shr
sub
adc
(bad)
mov
push
repnz
sbb
stc
sub
xchg
adc
sub
adc
(bad)
loop
imul
xchg
sub
data16
xchg
mov
ret
mov
sub
xchg
xor
repz
leave
push
jmp
das
jns
push
mov
data16
fistp
inc
mov
data16
jns
dec
mov
push
sbb
repz
xchg
xor
imul
sub
push
inc
mov
data16
jns
adc
sar
sub
xchg
xor
jmp
sub
push
in
mov
jnp
mov
pushaw
xacquire
out
sbb
or
mov
sub
jnp
inc
sar
ss
scas
stos
cmp
imul
popa
fidiv
imul
fidiv
imul
jns
mov
stc
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
cmps
out
mov
mov
sub
data16
jb
dec
pop
ror
mov
mov
mov
pusha
jmp
mov
push
pop
or
outs
and
adc
inc
sbb
sbb
es
popa
pusha
jmp
rcl
call
add
movs
or
jns
and
jmp
imul
bound
bnd
sub
bound
adc
sub
dec
and
cmps
rcl
or
xchg
(bad)
fisubr
jmp
(bad)
jns
dec
and
or
jne
loop
(bad)
bound
sub
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
or
data16
mov
