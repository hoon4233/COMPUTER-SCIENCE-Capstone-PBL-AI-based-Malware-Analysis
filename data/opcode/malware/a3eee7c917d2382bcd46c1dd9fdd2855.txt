push
call
ret
ret
or
xor
out
adc
lock
pop
adc
popa
movs
jae
ins
loope
mov
push
iret
fidiv
inc
cmc
sbb
fwait
movs
outs
jbe
dec
pop
stos
cmp
cmp
sbb
shr
and
or
iret
mov
imul
fucomip
push
sbb
repnz
pop
cmp
ds
das
cwde
or
push
movs
lahf
pushf
outs
mov
pop
xchg
push
ror
movs
jne
xchg
out
inc
inc
in
mov
xor
std
mov
leave
jae
fld
loop
mov
dec
outs
ret
push
push
sub
sbb
jg
into
arpl
dec
rcr
and
xor
(bad)
rol
ins
dec
pop
in
test
sbb
jecxz
test
mov
repnz
out
shr
mov
mov
cmps
sti
arpl
shl
(bad)
adc
mov
cwde
cmp
clc
push
push
xchg
sti
xchg
xlat
into
adc
mov
fwait
pop
stos
pop
jo
rol
jp
sar
mov
repnz
mov
(bad)
cmc
push
shr
xchg
mov
pop
adc
push
add
idiv
adc
fmul
les
or
push
and
fcomp
xchg
mov
add
push
pop
mov
in
and
inc
call
dec
int
mov
icebp
les
mov
pop
gs
je
and
inc
jne
inc
mov
int
pop
mov
xchg
lods
dec
neg
mov
xor
cmps
scas
mov
cmp
ja
pop
push
cld
cld
inc
fs
cmp
mov
call
add
(bad)
aaa
ss
sbb
adc
push
cmp
outs
push
bound
mov
fadd
inc
jae
pop
push
sub
or
(bad)
xchg
ja
adc
bound
inc
push
sub
mov
loopne
jg
stos
add
fld
es
(bad)
test
xchg
mul
ss
outs
and
add
cs
ins
xor
ss
inc
mov
icebp
(bad)
cmps
aad
ret
inc
int3
adc
sub
test
popa
dec
movs
clc
out
sub
xchg
mul
xchg
push
shr
(bad)
push
scas
dec
push
daa
mov
cdq
mov
retf
(bad)
fdivr
mov
leave
loope
sub
pop
aas
xchg
mov
inc
xor
or
bound
mov
xor
or
out
lock
jmp
and
fsub
jo
into
pop
add
add
mov
xlat
ret
movs
fstp
mov
sbb
mov
js
xor
mov
push
pop
addr16
cli
sahf
fdiv
xchg
push
cmc
adc
mov
repz
ret
mov
popa
(bad)
in
es
xchg
cwde
dec
call
ja
test
jno
or
dec
push
xchg
(bad)
and
mov
jmp
repz
inc
mov
lock
test
dec
lea
add
jecxz
add
inc
mov
cmp
test
jno
repz
xchg
popa
sbb
xor
push
inc
adc
int3
icebp
adc
or
int3
add
jne
gs
icebp
int
out
jae
jb
jmp
or
lds
mov
and
test
mov
push
inc
dec
daa
inc
imul
aaa
mov
cli
out
xlat
push
pop
outs
pop
inc
and
js
shl
fld
sbb
cwde
retf
ins
cmps
sub
pop
dec
addr16
fsub
das
pop
adc
dec
sub
add
aad
push
lock
xchg
pop
adc
loopne
xor
sub
lods
sub
pusha
and
inc
push
push
sub
sbb
add
inc
mov
outs
adc
call
ins
mov
aam
shl
leave
pop
sub
xlat
jne
icebp
ins
int
movs
pop
es
adc
loope
pop
shr
fnstcw
out
gs
pop
add
pop
stos
inc
dec
xchg
xor
lahf
and
xchg
sbb
mov
imul
pusha
mov
add
sbb
addr16
push
cmp
pop
adc
jo
ss
xor
mov
mov
fdivr
in
dec
dec
sub
pop
sbb
data16
cmps
mov
cmp
xlat
cmp
push
(bad)
test
mov
xor
stc
inc
fnsave
fcomp
or
repz
outs
add
sub
hlt
(bad)
adc
mov
ffree
sahf
and
jle
fiadd
xchg
pusha
in
out
inc
and
push
stos
in
jns
iret
into
add
lock
fstp
inc
or
js
bound
add
in
hlt
xchg
iret
pop
icebp
ret
jecxz
pop
shl
push
mov
push
stc
(bad)
sub
retf
xchg
cmp
lea
pushf
je
mov
or
inc
inc
shr
mov
out
fwait
inc
mov
sbb
and
in
dec
popf
cmp
push
iret
in
int
push
adc
and
(bad)
arpl
lods
cwde
out
cmps
imul
mov
imul
or
hlt
je
std
pop
dec
ret
jo
jg
and
adc
pop
and
pop
ins
les
mov
add
dec
rcl
sub
das
arpl
out
hlt
repz
pop
cld
or
mov
push
sbb
add
xchg
int3
cmps
sub
sbb
jl
addr16
stos
inc
js
imul
pop
or
or
sub
popa
not
out
lods
sbb
int
or
adc
test
mov
in
pop
mov
dec
push
jne
fst
ja
sbb
jmp
dec
in
enter
fcmovu
loop
cwde
into
std
add
mov
aaa
adc
push
in
mov
adc
jge
push
scas
dec
mov
adc
mov
out
sti
cmp
push
sub
cmp
cmp
mov
scas
inc
sahf
enter
ret
sub
dec
jg
dec
push
pop
adc
add
retf
xchg
shr
jmp
and
mov
adc
sub
sti
in
sbb
xor
js
stc
pop
sub
pop
mov
and
adc
cdq
push
pushf
repz
pop
pop
mov
call
jno
call
cmp
sbb
xchg
scas
call
mov
jle
leave
pop
push
mov
jecxz
push
inc
push
outs
je
and
jle
push
inc
sbb
lea
cmp
out
push
or
shr
push
loop
mov
jl
arpl
mov
inc
fcomp
lea
stc
jmp
jp
push
inc
xchg
push
pop
test
xor
dec
(bad)
aam
les
test
nop
or
popf
add
mov
pop
sar
js
mov
push
mov
add
dec
xlat
mov
test
xchg
push
xor
sub
mov
mov
(bad)
jmp
mov
shl
sti
or
scas
xor
ds
das
pusha
push
mov
push
xchg
hlt
dec
retf
sbb
jle
lds
enter
sbb
jle
inc
mov
and
inc
add
sub
mov
and
dec
push
stc
sar
and
and
int
mov
fndisi(8087
and
pop
pop
sahf
(bad)
lea
fist
std
scas
enter
inc
daa
mov
cld
outs
sahf
enter
or
in
lods
retf
popf
outs
fldcw
(bad)
(bad)
out
inc
daa
and
in
pop
or
and
cs
mov
sahf
call
je
dec
jae
ret
repnz
jne
or
add
cwde
add
(bad)
mov
or
test
mov
xlat
xchg
dec
jno
inc
ret
sbb
pop
div
leave
pop
int
jecxz
cmp
sub
movs
jle
push
xchg
sbb
test
js
aam
cmp
sti
fadd
jmp
stos
jae
pop
xchg
jne
adc
pop
adc
inc
pop
mov
cmps
adc
shl
xchg
mov
retf
test
fwait
mov
jmp
mov
daa
add
or
les
test
dec
int
bswap
sub
(bad)
stc
fs
xor
xchg
xlat
pop
out
sub
cmp
and
push
imul
push
xchg
ins
daa
sahf
push
mov
cld
lds
mov
jbe
jle
sub
scas
pop
out
adc
mov
add
out
test
push
mov
lea
ins
inc
movs
shl
call
std
mov
out
not
or
and
pop
push
jbe
inc
stos
mov
pop
sbb
lods
push
aam
pushf
imul
(bad)
mov
dec
sbb
test
push
or
loope
scas
push
push
push
(bad)
into
cmps
jne
fbld
and
cmp
inc
inc
cmp
outs
outs
sti
mov
test
mov
dec
ja
and
(bad)
add
jecxz
xor
fnsave
imul
inc
sub
int
fsubr
pop
out
or
test
sbb
mov
sub
adc
retf
or
sbb
icebp
mov
xor
jmp
push
enter
push
adc
into
je
gs
daa
(bad)
xor
push
bsr
push
mov
sub
adc
inc
add
daa
ins
rol
addr16
jl
adc
add
push
dec
aaa
mov
mov
xor
loopne
icebp
and
js
dec
push
dec
inc
sbb
aas
retf
cmps
rol
imul
retf
mov
out
push
xor
inc
(bad)
fsubr
mov
ret
pop
in
add
and
adc
stc
inc
outs
pusha
dec
cwde
ret
shr
rcl
(bad)
xchg
mov
push
mov
retf
push
push
mov
fxch
(bad)
sti
and
lods
movs
mov
sahf
cmp
add
push
pop
add
inc
mov
jmp
imul
outs
mov
imul
mov
pusha
dec
hlt
retf
out
push
add
inc
add
or
or
popa
adc
imul
mov
cmp
mov
ja
sub
jo
sbb
stos
xor
xor
jmp
sar
imul
mov
das
mov
rol
inc
or
mov
cmp
imul
mov
mov
jo
bound
mov
outs
in
(bad)
(bad)
jmp
mov
sub
ret
push
inc
std
sbb
mov
cmovns
mov
pushf
retf
xchg
mov
sbb
sub
mov
jecxz
jecxz
fs
imul
daa
push
mov
inc
jnp
rol
inc
hlt
mov
cmp
add
shr
jns
mov
jmp
jbe
dec
push
fimul
xchg
jge
adc
fcom
lods
inc
xor
xchg
push
mov
lds
ds
push
lahf
mov
enter
jmp
scas
sub
fisub
rcl
rol
mov
dec
adc
mov
inc
sar
repz
popa
(bad)
cld
or
ins
(bad)
(bad)
into
mov
loop
out
push
cmp
adc
adc
pop
mov
cmp
pusha
push
push
pop
in
mov
fist
dec
mov
clc
xor
popf
sub
mov
jne
push
pop
dec
inc
mov
fimul
punpcklbw
scas
push
add
sar
jne
ret
in
fs
mov
adc
jbe
mov
sbb
mov
inc
xor
or
inc
psrlq
mov
xchg
out
call
or
outs
sub
fwait
ins
mov
jne
dec
lods
dec
iret
push
stos
js
aam
(bad)
cmp
mov
jmp
out
push
fsub
int
test
pop
rcl
jns
jne
fxch
(bad)
mov
jne
adc
add
int3
je
push
or
loop
lods
inc
push
test
fwait
pop
xchg
push
hlt
call
jge
dec
(bad)
dec
enter
fidivr
out
xchg
or
jnp
ins
add
jb
popf
xor
push
mov
cmp
mov
fstp
pushf
inc
cmp
jecxz
ja
aam
(bad)
call
cmp
stos
mov
jl
cli
cmps
push
stos
mov
mov
scas
and
pop
jmp
or
ror
adc
retf
pop
inc
add
int
and
mov
xor
in
dec
xor
mov
lods
lea
jno
jmp
pushf
mov
pop
mov
mov
pushf
mov
mov
xor
sub
mov
into
in
iret
out
mov
aad
shr
test
mov
mov
push
lock
adc
mov
jmp
icebp
in
arpl
cmc
test
ss
sbb
xor
faddp
and
pop
mov
xor
sub
in
mov
shl
ins
jmp
xchg
dec
ins
jns
shl
int3
mov
cmc
dec
test
imul
jns
ins
loope
pop
(bad)
arpl
xor
(bad)
mov
loopne
dec
out
pusha
mov
sub
pop
popf
mov
dec
or
inc
adc
or
push
inc
push
add
xchg
inc
aad
or
outs
xor
aam
sbb
das
ror
les
into
push
fs
jmp
shl
aam
lds
cmp
pop
ins
test
pop
pop
sub
ficomp
inc
cmp
sbb
inc
data16
mov
cmp
mov
aas
jns
or
jg
aas
int
push
mov
adc
mov
push
mov
inc
stos
mov
xor
fidiv
cmc
add
stos
je
and
push
into
sub
pop
push
and
daa
mov
add
inc
and
aam
retf
out
int3
cs
inc
fiadd
ret
sbb
movs
adc
data16
sbb
cld
jmp
add
dec
mov
rcl
xor
mov
movs
sbb
push
fcmovbe
or
iret
or
es
or
mov
leave
in
jb
jno
retf
into
cwde
adc
push
push
out
push
ror
mov
into
daa
gs
ds
push
dec
daa
xlat
jle
push
fisub
jmp
fimul
xor
repnz
out
xchg
sbb
mov
popa
pop
pop
daa
or
ficom
sahf
or
pop
icebp
imul
loope
bound
cld
test
xchg
mov
cwde
xchg
cmp
sbb
ret
ins
lahf
inc
cmp
xchg
outs
in
mov
and
enter
sub
scas
cli
inc
push
dec
adc
repnz
out
enter
and
and
mov
ficomp
lods
loope
in
int3
or
mov
loopne
in
out
jns
arpl
adc
std
sub
inc
imul
arpl
sub
iret
jno
out
push
dec
fcomp
ret
aas
nop
dec
adc
cmps
or
pop
ret
push
and
pop
jle
mov
inc
or
rcl
jnp
pop
fcmovne
pushf
or
xor
xor
mov
mov
rcl
in
shr
push
scas
adc
fwait
inc
pushf
fsubr
es
mov
(bad)
cmp
cmp
repnz
iret
imul
jbe
ror
mov
push
div
pop
repnz
cmps
add
pop
mov
inc
jnp
in
adc
call
and
sub
stc
retf
sub
add
jmp
jp
push
inc
dec
mov
stc
push
xchg
jno
cmp
stos
das
cmps
arpl
mov
loop
or
leave
ins
dec
sbb
jge
jnp
mov
(bad)
mov
push
push
mov
call
(bad)
inc
movs
sbb
clc
sub
lahf
pop
leave
inc
hlt
pop
sar
les
mov
jno
jecxz
lods
rcl
nop
xor
push
fistp
test
mov
push
call
or
stos
shl
mov
out
movs
or
nop
xchg
inc
imul
adc
cmp
xchg
call
mov
nop
aam
sub
dec
sbb
dec
mov
clc
xor
leave
jb
xor
jae
ror
cmps
imul
fadd
(bad)
sub
adc
xor
ja
xchg
push
inc
push
dec
mov
xchg
in
in
and
aas
xor
clc
pop
or
mov
inc
lahf
adc
pop
aad
dec
repz
cmc
push
lea
call
xchg
adc
sub
xchg
pop
sbb
sbb
cdq
mov
push
out
adc
out
ror
push
pop
dec
shl
(bad)
mov
fcmovnu
or
mov
sub
pop
call
jge
cmp
pop
iret
adc
das
push
les
pop
mov
xor
push
dec
daa
or
test
enter
xor
aad
mov
call
shl
repz
arpl
iret
ja
test
and
icebp
add
push
cwde
fdivr
mov
pop
idiv
pop
dec
pop
mov
loopne
mov
aas
cmp
mov
jp
mov
jne
adc
and
and
mov
fisubr
fnsave
mov
into
loop
div
mov
inc
mov
pop
sub
push
adc
shl
xchg
dec
jnp
popa
push
dec
popf
outs
pop
je
fbstp
dec
push
cwde
mov
cli
and
push
inc
mov
xchg
dec
adc
loop
or
sti
retf
das
aam
and
sub
cmp
outs
inc
mov
cmp
xchg
rol
dec
jmp
add
int
(bad)
call
mov
ja
pop
rol
nop
fs
mov
mov
xchg
data16
imul
sub
int
xor
int3
pop
cmps
shl
pop
and
enter
xchg
mov
(bad)
sub
in
lock
xchg
jg
adc
test
repz
sub
mov
jg
(bad)
push
pop
aas
dec
gs
mov
clc
and
add
(bad)
lock
out
sbb
jbe
mov
test
fcom
mov
xor
mov
jge
or
sar
mov
xor
xchg
cmps
mov
jae
movs
outs
sbb
ss
mov
adc
mov
lds
jnp
adc
mov
pop
cli
jns
add
fyl2xp1
in
in
cs
sub
push
xor
or
lods
jno
mov
mov
and
mov
and
mov
xchg
leave
or
sub
mov
adc
scas
stc
fwait
push
mov
push
pop
inc
mov
cmps
pusha
ins
and
mov
mov
and
adc
xchg
pop
aas
pop
jb
and
outs
jo
mov
daa
scas
mov
add
cdq
call
inc
add
das
bound
cmp
or
in
or
jle
pop
arpl
(bad)
stos
sub
sbb
outs
sbb
js
sub
(bad)
retf
enter
sub
sub
xchg
dec
adc
getsec
ja
fs
sahf
cmp
dec
add
faddp
inc
sub
cmp
pop
test
cmps
push
sbb
stc
inc
ret
jmp
rcl
(bad)
stos
adc
sbb
push
lea
ficomp
(bad)
pop
push
sbb
push
or
es
inc
dec
cmps
xor
gs
dec
cdq
xchg
(bad)
lahf
mov
inc
cmp
mov
dec
mov
sahf
sbb
dec
fidiv
jae
fsubp
mov
dec
inc
push
push
mov
add
xchg
pusha
mov
sbb
sbb
daa
cmp
add
cdq
push
xor
in
lds
sub
and
push
or
sbb
call
cld
lds
sub
lods
mov
test
sub
jns
fst
xor
mov
mov
sbb
(bad)
jmp
xchg
dec
mov
lahf
cli
sub
jne
mov
ss
push
pusha
add
stos
enter
or
retf
cwde
mov
gs
hlt
movs
fmul
clc
mov
inc
sbb
xchg
dec
jmp
or
jl
sbb
xor
call
add
pop
jmp
mov
adc
stos
jg
mov
call
test
into
pop
std
xchg
sbb
push
push
in
sub
jmp
mov
sub
mov
(bad)
daa
jns
sub
mov
mov
pop
sahf
inc
xchg
std
cld
or
xchg
cmp
dec
cdq
xchg
inc
addr16
mov
shl
adc
dec
loope
push
cmp
lds
pushf
loop
and
inc
lds
xchg
jl
add
xor
mov
loop
pop
xchg
fwait
cdq
mov
stc
sbb
aad
fucomi
mov
lea
mov
mov
inc
fnstenv
jns
aas
retf
mov
(bad)
pop
dec
cmp
pop
ret
mov
inc
rol
mov
inc
retf
or
imul
xor
lea
push
jne
not
dec
pop
or
xchg
mov
ja
cli
and
sbb
mov
dec
(bad)
xchg
mov
stos
outs
loopne
or
cmp
mov
and
pop
push
sub
mov
pop
in
or
(bad)
in
in
sar
js
ret
aaa
call
int
pop
test
pushf
sub
(bad)
(bad)
imul
xor
push
xchg
lds
aad
stos
mov
daa
push
test
jns
jne
push
sub
lea
fisub
shl
call
mov
adc
adc
push
push
and
fld
fst
xor
rol
cwde
inc
loope
mov
pop
in
pop
cmp
call
inc
imul
pushf
test
sub
popf
mov
pop
dec
scas
sbb
add
sar
(bad)
xor
mov
xchg
inc
nop
das
sub
push
iret
push
sub
neg
cli
fs
ret
inc
pushf
pop
loop
jmp
data16
stos
out
int
fstp
daa
inc
clc
dec
mov
(bad)
and
scas
push
cli
fldcw
ret
movs
jmp
mov
and
cli
cmp
or
cmc
cmp
adc
mov
dec
jne
das
mov
push
cmp
test
and
retf
cdq
aam
or
lock
adc
mov
pop
sahf
loop
enter
inc
mov
push
dec
xchg
imul
push
stos
mov
jbe
sti
mov
int
cmp
add
dec
inc
icebp
mov
test
stc
es
jae
loope
jmp
ins
xchg
repz
movs
xor
add
les
xchg
scas
inc
leave
add
add
test
ins
cmp
jmp
dec
sbb
clc
cdq
fs
mov
sub
jg
sar
ret
ds
sbb
cmps
jp
dec
mov
jp
cmc
ins
rol
fs
xchg
xchg
jmp
cmps
sti
add
loop
stc
es
jge
dec
test
std
dec
cmp
add
cld
ret
push
xlat
inc
call
clc
dec
in
push
in
cdq
(bad)
sub
push
dec
out
aad
pop
pushf
adc
and
xor
inc
dec
cli
cmp
jp
sbb
cmp
fnstsw
mov
cs
add
leave
xor
cmp
mov
cdq
es
inc
pop
loop
fsub
iret
mov
pushf
shl
pop
cmp
sahf
fbstp
push
out
and
stc
ret
cmps
add
push
clc
cdq
(bad)
mov
fdiv
into
sub
cmp
jmp
push
arpl
addr16
push
inc
in
imul
(bad)
sbb
inc
push
cmps
and
stos
lock
push
mov
xor
stos
mov
fwait
xor
gs
cs
out
cdq
xchg
inc
add
push
scas
jne
pusha
ret
popa
jecxz
adc
and
lods
retf
xor
ss
addr16
push
out
mov
inc
sbb
aas
jnp
imul
dec
addr16
pop
xchg
mov
shr
daa
loope
ins
or
jp
add
dec
push
sbb
imul
aam
mov
ss
dec
call
ss
mov
(bad)
in
call
dec
test
outs
in
fwait
jnp
sub
addr16
(bad)
dec
xchg
loope
pop
or
movs
sub
jp
mov
lea
inc
out
cmp
inc
push
jp
add
or
xchg
movs
sti
xchg
or
outs
jbe
jo
outs
stc
and
mov
dec
push
inc
in
ror
cmp
sub
fwait
push
mov
movs
mov
icebp
hlt
imul
(bad)
xor
call
fwait
mov
ja
sub
daa
hlt
add
push
ins
xor
fst
xor
mov
pop
pop
cdq
xchg
add
mov
retf
ins
mov
gs
xchg
push
inc
imul
pop
jae
aas
push
stos
jbe
movhps
test
dec
xchg
cmp
loop
or
leave
add
add
sub
jb
push
cdq
xor
cmp
leave
push
cdq
jl
das
push
jge
movs
push
sti
loope
jecxz
mov
add
mov
jne
in
inc
test
pop
fnstcw
adc
jl
loop
add
test
inc
jmp
dec
jae
mov
test
rcl
push
or
sahf
movs
pushf
outs
fsubr
or
addr16
not
loop
xchg
rcl
ja
xor
leave
data16
mov
iret
mov
jmp
adc
leave
push
pop
add
jne
fmulp
mov
adc
shl
push
rcl
adc
and
pusha
cmp
pop
dec
add
fcomi
push
mov
ds
sbb
aad
lahf
push
shl
mov
xchg
add
repnz
ret
add
inc
mov
arpl
je
mov
lock
mov
test
popf
push
gs
cld
and
ins
jmp
xchg
iret
mov
sub
adc
mov
mov
inc
js
sbb
ss
dec
fwait
fwait
mov
push
test
sahf
cmps
jns
mov
lods
daa
mov
call
(bad)
rcl
sbb
xor
movs
jns
pusha
imul
loope
nop
call
out
movs
fstp
sti
aas
pusha
int3
lds
dec
stos
jmp
aas
push
mov
inc
ror
in
mov
loope
pop
retf
cdq
inc
inc
ror
mov
cmp
xchg
jge
popa
and
mov
sbb
(bad)
dec
pop
xor
jns
(bad)
fcom
pusha
aaa
mov
dec
jl
adc
mov
and
cwde
fadd
pop
int3
mov
jecxz
es
addr16
js
jmp
dec
dec
andnps
lock
and
loope
les
adc
shr
jno
repnz
inc
push
aaa
mov
mov
rcr
mov
(bad)
jge
sub
pop
mov
movs
int
rcr
sub
jbe
retf
(bad)
shl
jg
shl
push
jnp
sbb
add
aas
adc
jmp
mov
jo
add
xchg
add
xlat
mov
push
aam
push
or
loopne
out
or
pop
cmc
sysret
mov
mov
rol
cmp
sub
jl
call
cld
bound
push
sub
jmp
ins
xor
and
mov
sbb
push
cwde
std
jae
scas
retf
xchg
fbstp
cld
nop
cmps
loopne
and
aad
pop
lods
ror
pop
xor
lods
call
inc
test
mov
adc
add
jmp
inc
clc
dec
(bad)
std
fld
movs
cld
enter
bound
ins
adc
or
iret
xor
inc
pop
clc
test
pushf
jo
icebp
retf
(bad)
mov
(bad)
daa
lea
cmp
cmp
loopne
add
and
sbb
call
push
and
daa
xchg
inc
in
xor
cmp
sbb
mov
pop
push
fmul
jg
ins
adc
repnz
fist
adc
in
call
call
adc
mov
xchg
cmp
test
mov
mov
fisubr
pop
(bad)
enter
cmp
pusha
adc
sub
xor
pushf
retf
das
ins
aam
push
xor
sub
popf
adc
fcomip
popa
lds
or
ret
cmps
mov
int
ins
fist
lock
lock
or
stc
mov
mov
call
jo
push
cdq
cmp
cmp
call
xor
mov
adc
adc
xchg
xor
mov
xchg
jmp
push
pop
shr
sahf
int3
cli
loope
pop
add
pop
mov
loop
push
jp
add
arpl
dec
out
pop
sahf
pop
mov
js
cwde
lds
pop
push
cmp
inc
test
add
inc
xchg
and
mov
push
mov
in
jmpw
aaa
das
mov
mov
xlat
mov
mov
mov
out
out
mov
fcomp
shl
dec
and
movs
and
jno
cdq
pop
add
dec
data16
pop
xor
adc
cmps
inc
ja
mov
call
xor
xor
loope
pop
sub
ins
mov
shr
cmp
mov
adc
push
inc
cmp
and
outs
jne
sub
out
dec
mov
into
add
adc
xchg
mov
icebp
nop
xchg
(bad)
je
dec
mov
lahf
mov
loope
hlt
jnp
pusha
add
push
in
sahf
mov
std
cmp
xchg
pop
lahf
push
fild
das
cmp
leave
sti
ret
mov
jmp
shl
xchg
test
into
xchg
fs
cld
mov
ss
push
out
dec
lods
inc
sub
cmps
push
out
jle
push
xor
xchg
hlt
or
ret
cmp
sti
out
pushf
iret
add
hlt
inc
fst
sar
in
push
jle
inc
sti
xor
nop
loope
test
add
mov
scas
and
ins
dec
test
(bad)
or
or
loopne
mov
xchg
add
xchg
sahf
mov
ins
mov
mov
hlt
cld
fdiv
sbb
dec
call
dec
call
inc
(bad)
push
fdivr
pop
cld
std
xchg
inc
sub
pop
mov
repnz
and
arpl
gs
push
cli
add
xchg
jge
cmp
outs
adc
jle
aam
pop
mov
xchg
lds
add
inc
loopne
push
ret
out
mov
pop
sahf
out
pop
test
add
fadd
fwait
stos
das
std
enter
popf
cmp
sbb
mov
pop
stos
adc
add
mov
inc
pop
cwde
add
(bad)
shl
xor
daa
out
jbe
fstp
sub
neg
(bad)
aam
cmp
or
and
jns
sub
pop
(bad)
push
jmp
retf
sub
jne
enter
lock
xchg
dec
mov
pop
fnstenv
xor
inc
aaa
xchg
in
and
iret
jmp
push
sub
bound
dec
repnz
jp
in
pop
push
mov
loope
in
aad
mov
or
add
cmp
adc
jmp
xor
mov
lahf
pushf
enter
loopne
daa
mov
call
sbb
popa
(bad)
ror
dec
pusha
adc
push
retf
lahf
mov
mov
jp
inc
je
adc
fs
ins
call
mov
(bad)
loopne
mov
mov
inc
imul
push
ja
retf
dec
lea
(bad)
push
push
and
test
shl
cmp
xchg
add
pop
xor
inc
cmc
xchg
daa
cmp
mov
pop
add
or
imul
jno
bound
fadd
adc
inc
std
pop
mov
inc
ins
inc
xor
jg
mov
dec
dec
mov
adc
dec
inc
fadd
push
(bad)
push
mov
xor
bound
push
movs
lock
test
mov
or
adc
shl
out
cmp
enter
cmps
aaa
mov
cdq
mov
retf
and
pop
popa
scas
adc
jae
jp
dec
inc
cmp
push
rcl
mov
das
xchg
pop
sbb
(bad)
imul
mov
pop
push
imul
push
fiadd
cmp
cmp
cli
daa
push
add
sub
adc
xor
std
inc
sti
dec
mov
jnp
ret
mov
cwde
fstp
cld
test
and
fisub
push
jle
pop
dec
dec
push
adc
pop
aad
push
xlat
pop
jo
mov
push
jmp
add
mov
mov
xchg
daa
lods
stos
add
jbe
das
add
jae
adc
sbb
xor
js
inc
and
out
(bad)
adc
icebp
or
cs
sar
xor
mov
cdq
cmp
add
pusha
mov
and
mul
mov
repz
sbb
jbe
push
fcom
pop
sti
or
and
jecxz
in
xor
frndint
adc
pop
mov
xor
(bad)
outs
repnz
bswap
pushf
imul
mov
mov
dec
push
jl
xor
cld
(bad)
adc
adc
test
xchg
push
or
dec
repnz
imul
and
loopne
les
mov
cmp
ja
rcl
jg
mov
movs
xchg
push
test
inc
imul
adc
sub
cmps
and
cmp
mov
pop
test
or
aas
mov
pushf
stos
add
sbb
adc
shl
push
cld
push
mov
and
or
cmp
xor
cmps
add
cli
in
xor
adc
test
sbb
test
pop
push
movs
mov
sub
imul
sub
and
dec
idiv
pop
mov
rcl
pop
nop
and
icebp
sub
add
push
nop
push
push
xchg
jmp
shl
in
push
cmp
cmp
movs
mov
int
sub
xchg
(bad)
mov
push
cmp
pop
lock
mov
aad
or
xchg
jo
add
sub
jl
and
mov
bound
das
scas
sbb
lods
test
mov
dec
scas
add
pop
in
add
js
dec
pmaxub
xor
inc
xor
add
push
mov
pop
enter
fcmovb
les
cli
xor
and
xchg
xor
xchg
pop
mov
add
popf
(bad)
add
fistp
cwde
xor
or
sub
or
sbb
pop
icebp
xchg
mov
pop
add
mov
xchg
stc
inc
stos
and
sub
sub
hlt
push
jecxz
sbb
xchg
or
test
cmp
jnp
and
es
push
push
icebp
or
or
rol
repz
frstor
push
seta
mov
gs
icebp
inc
push
mov
xchg
std
jno
test
mov
(bad)
lock
mov
jge
loope
xor
(bad)
mov
inc
test
pop
add
sar
or
xchg
jne
mov
pop
xchg
dec
fwait
cmp
sbb
adc
adc
adc
(bad)
not
cmp
cmp
cli
mov
stc
fistp
data16
dec
or
mov
jno
add
loope
mov
cdq
stos
(bad)
mov
dec
xlat
or
jnp
out
out
das
push
jno
mov
cld
sub
mov
sahf
gs
pop
std
xlat
in
inc
idiv
pop
outs
in
lds
in
outs
lods
mov
lea
mov
pushf
jae
add
adc
lahf
rol
dec
dec
push
add
mov
out
mov
push
push
pop
sbb
ret
pusha
mov
fiadd
push
cmp
cmc
mov
in
pop
movs
fild
ss
mov
popf
aaa
or
shl
jbe
sbb
xor
inc
adc
adc
xor
aad
in
mov
sub
frstor
adc
pushf
ror
add
jmp
add
fnstcw
cli
and
ror
mov
stc
push
or
(bad)
ss
lods
lods
in
cmp
int3
dec
dec
and
repnz
cmc
outs
iret
mov
cmp
xor
movs
in
dec
jg
js
xchg
not
jle
fisttp
int3
fimul
mov
adc
in
fnstsw
lea
retf
ja
sbb
sub
mov
fdivrp
sbb
inc
push
jnp
or
movs
inc
(bad)
pop
cli
push
push
push
inc
fcmovb
lock
adc
data16
add
dec
or
pop
push
add
adc
jnp
cmp
nop
and
or
push
cdq
cs
imul
push
xchg
push
mov
jmp
sbb
mov
(bad)
clc
imul
icebp
(bad)
jns
(bad)
add
inc
stc
imul
out
popa
das
or
je
je
push
mov
inc
imul
es
mov
out
cdq
pop
call
(bad)
clc
jne
cmc
pop
xchg
mov
sbb
push
jg
jecxz
aaa
push
mov
push
mov
sbb
dec
xchg
add
inc
push
jl
dec
test
cbw
inc
add
aaa
xchg
inc
aam
je
dec
out
stos
sti
mov
push
in
or
test
daa
loopne
test
stos
es
xchg
and
xor
xor
add
ror
or
idiv
dec
cmps
push
popf
dec
movs
push
sbb
outs
das
imul
pop
and
jge
jg
dec
in
int3
and
inc
or
push
loop
mov
sbb
out
push
mov
adc
adc
(bad)
inc
inc
push
mov
jb
imul
push
enter
bound
dec
lods
sti
pop
jno
and
movs
adc
push
xchg
cmp
lahf
pop
inc
or
dec
xor
sbb
or
shl
fldenv
les
outs
mov
cmp
mov
fcom
sahf
(bad)
pop
cwde
or
aam
adc
or
jae
call
scas
adc
pop
sbb
push
lahf
nop
push
xchg
test
and
add
mov
dec
pusha
add
push
jle
into
push
int
and
or
mov
imul
pop
push
inc
xor
movs
sub
cmp
jge
lods
js
jb
fld
xor
int3
or
xchg
pop
push
pop
fs
xor
xor
cmp
in
stos
sub
aad
stos
and
movs
outs
xor
mov
xchg
jmp
mov
and
mov
add
shr
inc
into
jl
retf
ja
pushf
sahf
cmp
push
test
mov
sti
and
js
fild
xchg
sub
cdq
xchg
gs
add
push
cmp
xor
xor
sbb
out
shr
dec
loopne
shr
ins
pop
dec
gs
push
jg
mov
mov
push
(bad)
clc
mov
lock
jb
cs
jae
pop
jae
jo
stos
daa
xor
lods
mov
dec
or
aas
or
popa
and
pop
dec
bound
add
mov
push
pushf
add
mov
in
das
pop
js
mov
xor
lods
inc
aaa
scas
xchg
out
sbb
popf
jno
cli
or
dec
xchg
jp
ret
jmp
jl
lods
mov
cmp
pop
add
shr
fist
ret
enter
pop
xor
jbe
mov
pusha
mov
add
xchg
call
enter
stc
push
out
cli
inc
retf
test
cmps
loope
popf
cs
test
jl
je
(bad)
(bad)
js
imul
outs
add
xor
mov
lods
shr
mov
or
cmp
jne
mov
jge
fsub
xchg
mov
test
mov
faddp
leave
sbb
push
nop
or
mov
add
adc
mul
jg
and
cmp
pop
das
jno
int3
(bad)
ror
sub
leave
jne
retf
jecxz
and
adc
xchg
jae
cld
mov
or
and
xchg
adc
sbb
mov
mov
test
stos
pmulhw
cld
dec
cmp
xor
adc
popa
out
call
lds
imul
out
cmps
add
push
ja
cmp
shr
xchg
mov
leave
fwait
(bad)
push
jne
arpl
jecxz
js
mov
aaa
or
xchg
(bad)
test
cmp
jp
stos
adc
loopne
outs
repnz
cmp
sub
int
(bad)
mov
mov
add
jp
push
fs
fcmovbe
ds
mov
or
aas
dec
mov
push
retf
push
sti
test
inc
add
inc
inc
not
jbe
cmps
arpl
inc
sbb
pusha
clc
xchg
mov
or
push
imul
movs
inc
(bad)
cld
arpl
shr
sbb
call
fsubr
(bad)
in
enter
fdiv
pop
add
ds
fadd
std
int
retf
shl
addr16
pop
xchg
jo
test
test
mov
xchg
shl
out
push
or
xchg
sahf
cmp
mov
cmp
movs
push
inc
dec
add
(bad)
shl
lahf
push
in
push
jmp
test
xlat
dec
cmps
jns
cmp
add
jns
lods
fs
mov
xor
call
jns
leave
xchg
cmp
sbb
dec
fnstcw
xchg
pop
frstor
loop
loop
fs
sbb
mov
sub
xor
pop
mov
clc
retf
push
push
or
adc
add
and
sub
(bad)
inc
out
cmc
push
imul
repz
pop
dec
xor
or
or
rol
xchg
loop
in
inc
mov
pop
mov
ins
adc
movs
popf
das
lock
sbb
jae
dec
leave
add
and
inc
cmp
adc
push
or
add
xor
repz
cwde
pop
stos
jne
cmp
mov
sti
cmps
mov
or
es
psubsb
pusha
cmp
adc
add
mov
and
cmc
mov
cld
xchg
(bad)
sar
sub
mulps
jb
dec
sbb
pop
add
xchg
add
test
push
shr
icebp
jmp
mov
sub
sti
jl
outs
test
jns
sub
call
add
push
pop
cmp
cmp
je
outs
enter
push
xchg
jmp
or
ds
lods
rcr
and
jle
pushf
mov
pop
js
mov
xor
cmp
cld
daa
pop
lea
sub
aam
cmp
test
aas
int3
push
arpl
mov
ja
mov
enter
xor
add
sbb
jmp
push
xor
mov
xor
pop
xlat
sub
pop
dec
(bad)
sbb
call
jecxz
pop
imul
mov
sub
scas
hlt
in
jne
es
aad
loopne
jne
push
jg
mov
or
xor
add
sahf
push
xchg
stos
scas
sbb
mov
push
mov
mov
and
sub
xor
push
dec
lahf
fs
lea
pop
aas
xor
mov
scas
ficom
xor
(bad)
cmp
mov
out
frstor
(bad)
xor
mov
fadd
out
sub
xor
scas
pop
pop
mov
es
ins
ss
mov
push
js
dec
lock
test
add
mov
test
inc
addr16
enter
or
sar
mov
std
fild
out
xor
add
mov
inc
(bad)
mov
push
(bad)
cmp
or
cmp
jne
dec
pushf
(bad)
call
pop
into
push
push
xchg
fwait
push
mov
pop
out
sub
push
test
xchg
xchg
or
std
jg
cwde
mov
inc
inc
jg
inc
or
shr
out
fsub
add
mov
pop
fst
cmp
outs
test
test
xchg
push
mov
push
sub
add
popa
leave
push
call
div
leave
je
mov
inc
mov
mov
adc
inc
popa
call
pop
jl
and
mov
fcom
fwait
sub
inc
js
ret
mov
jmp
xchg
(bad)
xchg
jbe
clc
fild
jne
repnz
dec
out
test
lds
and
push
or
and
pop
hlt
or
sbb
imul
repz
scas
icebp
xor
stc
cmc
sahf
adc
push
mov
or
add
push
fwait
push
xchg
cs
pushf
mov
pop
mov
pop
sar
xchg
fcmovb
rcl
(bad)
mov
ds
ret
out
fidiv
jmp
sbb
pusha
jnp
shl
mov
jnp
cs
jns
sub
repnz
sub
imul
call
push
or
pop
jb
jle
in
sbb
(bad)
xlat
ins
mov
jb
push
xor
ret
iret
out
mov
or
mov
pop
dec
xchg
mov
loope
lock
push
mov
xor
stos
xchg
sbb
cmp
dec
loop
mov
test
cmps
jl
movs
out
das
xchg
cmp
int
fbld
jecxz
fst
ja
jns
jl
inc
cli
dec
adc
xor
rcr
out
addr16
lahf
aas
je
retf
or
dec
xchg
lods
fisttp
dec
test
ss
sbb
arpl
add
into
imul
in
mov
fmul
arpl
xchg
jmp
jmp
mov
push
adc
mov
xlat
cmp
sub
mov
mov
scas
aam
jnp
xchg
and
out
cwde
mov
nop
and
xchg
sub
ds
mov
(bad)
cli
push
rol
gs
cdq
sahf
and
das
push
ret
lods
xchg
cmps
cmps
sub
in
push
das
ins
pop
std
lods
xor
pop
push
pop
stos
mov
fistp
fistp
pop
push
enter
(bad)
out
clc
(bad)
jo
popa
lds
aad
pop
pushw
pop
in
stos
out
fdiv
inc
and
jmp
push
sub
mov
pop
(bad)
es
ret
jnp
sbb
into
cmc
inc
sub
sub
pop
push
mov
xchg
or
pusha
sar
adc
sub
jns
adc
xchg
xor
mov
(bad)
arpl
inc
js
pushf
sysret
dec
cdq
in
ds
call
ficom
rcr
aas
stos
pop
cmps
sar
or
adc
xchg
out
mov
or
hlt
cmp
outs
fcmove
cmp
in
mov
push
jg
leave
push
sbb
pushf
inc
test
je
jmp
outs
or
movs
xchg
stos
clc
sub
pop
mov
ltr
out
cmp
out
or
fild
loop
retf
test
or
xor
stc
push
mov
add
aas
xor
and
mov
das
mov
lea
pop
into
and
fsub
enter
das
mov
test
mov
xor
sahf
jb
stos
int
push
push
not
push
mov
bound
fld
xor
and
test
mov
mov
in
test
inc
scas
les
or
test
(bad)
jns
mov
jmp
jecxz
loope
repnz
std
retf
and
setb
sub
movs
pop
pop
pop
push
dec
jecxz
sub
fld
jo
jg
pop
les
mov
scas
push
mov
fistp
jmp
int
inc
and
stos
in
sub
jmp
mov
sub
fcmovne
inc
das
shr
jnp
xor
mov
add
xlat
lea
stc
cdq
push
fsubrp
test
pop
fst
mov
popf
fnstenv
sub
sub
mov
mov
add
inc
aaa
adc
cmps
iret
das
xor
cli
enter
loope
xor
out
xor
or
sbb
in
or
push
test
inc
loop
jl
pop
mov
mov
int
mov
cmps
xlat
dec
sub
in
or
adc
mov
xor
mov
push
mov
push
call
data16
adc
cmp
mov
sub
ins
sub
call
xchg
mov
pusha
pop
sub
cli
test
imul
out
mov
mov
lock
pxor
mov
dec
xor
or
xchg
mov
push
mov
push
add
inc
(bad)
rcl
test
movs
xor
in
and
aam
inc
cmp
popa
cmp
das
aaa
shl
sbb
fdiv
icebp
ins
unpcklps
jnp
and
hlt
push
aas
push
cs
repz
int
sub
mov
retf
gs
push
sbb
push
div
call
mov
xchg
or
mov
lea
dec
add
dec
fld
adc
push
or
mov
inc
sbb
retf
adc
cs
lods
call
mov
in
cmp
call
sahf
dec
jecxz
sub
jmp
push
mov
test
ss
mov
ret
xchg
arpl
and
int3
in
je
dec
push
sbb
cmps
mov
mov
nop
sbb
adc
or
ficomp
mov
push
popf
lahf
fmul
pop
push
mov
fucom
inc
cmp
pop
call
add
outs
rcl
mov
lods
rcr
xor
sbb
popa
push
push
or
dec
push
mov
push
pop
dec
xchg
add
mov
xor
jnp
jle
xchg
lahf
mov
ins
in
lahf
sbb
repz
inc
repz
and
mov
popw
fsubr
es
pop
(bad)
mov
and
aas
mov
test
jbe
sbb
hlt
pop
jae
sub
push
push
xchg
in
adc
inc
jne
mov
jbe
and
sbb
fnsave
lods
jns
ins
jle
fwait
xor
jmp
cmp
xor
cs
sbb
scas
shr
jb
retf
hlt
sbb
aad
gs
sahf
jg
aas
jl
pop
ret
dec
push
push
add
retf
out
test
cmps
loopne
push
aam
mov
shl
or
add
mov
popa
mov
or
cs
and
std
ja
xor
inc
pushf
mov
push
int3
fisub
hlt
push
mov
loopne
jl
ins
unpcklps
xlat
inc
xor
jmp
in
cmps
push
add
stos
push
fs
sub
mov
sbb
push
mov
imul
cmps
call
and
sub
cmp
sahf
sbb
mov
xchg
push
jb
and
into
leave
ins
xchg
loop
jae
xor
idiv
aas
ss
xchg
scas
out
and
add
loope
inc
sub
xor
xor
adc
stos
adc
adc
jmp
rol
pop
and
sub
xchg
mov
and
ja
ffree
js
clc
fadd
(bad)
clc
and
push
test
ret
pop
sbb
leave
cld
out
xchg
xchg
xor
sub
cmp
mov
lds
inc
in
clc
scas
mov
mov
imul
aaa
mov
push
mov
int
mov
jae
jmp
mov
xchg
xor
jo
sti
mov
add
sub
pop
ins
xor
jb
int3
cmps
xor
xor
out
push
cdq
dec
jmp
pop
xor
xor
sub
iret
sbb
push
fld
jmp
push
mov
xchg
or
add
fiadd
mov
mov
mov
pcmpeqw
in
js
imul
test
push
jmp
dec
jle
sub
inc
in
xchg
inc
push
or
imul
mov
icebp
fwait
push
movs
cs
into
fidiv
inc
cmc
adc
sti
jg
or
es
jg
push
mov
jl
inc
add
push
imul
dec
adc
shl
cmp
cld
jmp
sbb
pop
pop
cli
pushf
sbb
push
dec
sbb
jle
sbb
cmp
or
cmc
mov
(bad)
xor
(bad)
fcom
inc
jl
xor
mov
dec
sub
add
pop
jecxz
dec
push
mov
fdivr
mov
cmp
cs
cmp
push
call
adc
jno
ins
push
pushf
and
cmp
mov
sahf
sub
loopne
sbb
ins
fsubr
(bad)
out
mov
data16
pop
and
aad
iret
cmp
(bad)
xchg
(bad)
sub
dec
in
adc
int
retf
loopne
lea
(bad)
inc
ss
pop
lods
bound
ds
sbb
jnp
in
lahf
sbb
repz
dec
sbb
outs
les
addr16
inc
nop
pop
push
fsubr
rcr
repz
add
popa
adc
fs
pop
je
dec
les
popf
das
mov
stc
or
sbb
sar
mov
xchg
xchg
cmp
mov
inc
bound
xchg
fistp
xchg
sbb
das
xchg
cmc
jge
jb
jg
test
das
mov
mov
sbb
sub
jns
repz
cmp
pop
leave
xor
inc
in
mov
fdivr
mov
cld
and
gs
mov
pop
jl
je
mov
test
fstp
fsubr
fnstcw
out
sbb
mov
test
mov
cmc
bound
mov
cmc
mov
jge
out
(bad)
fld
or
retf
jmp
lods
fimul
pop
add
adc
push
and
and
cwde
add
xchg
add
dec
shl
or
into
or
xchg
adc
pop
fnsave
adc
ficom
inc
sub
fwait
in
daa
ret
pop
push
test
outs
lds
jmp
or
in
aaa
sbb
push
push
or
push
ja
sahf
and
pop
mov
out
add
cmp
cmp
jp
xchg
ins
das
xchg
dec
movs
hlt
out
xchg
lock
xlat
in
hlt
pop
xchg
sahf
mov
out
ins
mov
call
es
dec
mov
xor
xor
daa
ins
adc
or
xchg
adc
and
mov
cmp
fs
and
frndint
repnz
jp
arpl
pop
push
xor
adc
(bad)
pop
in
inc
out
sti
aaa
lds
ret
movs
mov
pop
push
add
leave
xor
jmp
aam
sti
gs
jno
sti
test
aad
mul
mov
push
data16
jmp
add
jno
cmps
shr
or
retf
outs
xor
push
fs
inc
add
ror
jle
sbb
cdq
adc
xor
add
shl
mov
xchg
xor
mul
ss
sub
jl
xchg
adc
inc
sbb
mov
xchg
dec
mov
(bad)
loopne
repz
ins
mov
pop
adc
mov
xchg
ja
mov
cmp
jle
aam
clc
lea
nop
gs
pop
les
pop
out
aas
ins
pop
jle
cwde
or
cli
in
fstp
add
loop
or
pop
xor
shl
jle
and
les
or
lock
pushf
sub
(bad)
pop
jl
sti
sub
cwde
jmp
ja
cmps
add
retf
rol
movs
icebp
or
in
stos
adc
hlt
iret
test
xchg
(bad)
dec
dec
xlat
fnstenv
mov
mov
push
aas
fisubr
(bad)
cwde
cwde
lock
xchg
std
ins
fcomp
enter
int
out
or
das
fisttp
mov
ins
ja
jg
xchg
das
movs
cmp
mov
inc
loope
fild
loop
or
call
ficomp
mov
mov
test
shr
cmps
jb
xchg
out
jl
jle
sub
xchg
xchg
push
enter
and
sbb
add
adc
(bad)
sub
jbe
test
mov
cs
ror
fisttp
cmp
cmp
faddp
imul
int3
fwait
lock
and
ins
jg
push
inc
inc
test
(bad)
mov
adc
jle
js
movs
inc
cmps
mov
xor
outs
fcmovne
inc
dec
jl
rol
(bad)
lods
daa
xlat
xor
cwde
cmps
push
call
push
out
pop
lea
fs
rol
add
out
clc
(bad)
jno
dec
icebp
movs
and
mov
mov
(bad)
cld
dec
sub
lahf
push
out
add
cmps
cmp
or
dec
push
cmp
jns
ins
xchg
fld
out
ds
mov
std
mov
ins
pop
mov
mov
mov
rol
mov
mov
mov
mov
pushf
popf
lods
or
(bad)
ins
dec
vcvttps2dq
adc
mov
stc
retf
sbb
cmc
in
mov
dec
pop
inc
add
sti
inc
shr
retf
lods
dec
ds
mov
dec
sbb
imul
pop
cmp
pusha
loope
mov
cld
mov
sbb
jne
dec
shr
inc
pop
jno
call
jnp
xor
ret
fnsave
xchg
or
into
iret
mov
inc
mov
mov
ret
and
enter
mov
adc
mov
stc
cld
or
jp
pop
rcl
adc
in
push
cmp
repz
cmp
test
in
fldenv
mov
xchg
cmc
mov
sahf
jne
push
loopne
sbb
cmp
mov
cld
jmp
add
and
js
add
jg
fdivr
retf
mov
push
addr16
sbb
test
push
lods
mov
aam
xchg
mov
jle
xlat
push
imul
stc
jns
push
stc
imul
pop
sbb
or
iret
cmps
or
pop
jbe
add
(bad)
mov
mov
std
pop
nop
imul
nop
sbb
jno
movs
fsub
xchg
fwait
sub
in
mov
fwait
lock
push
and
sub
pop
fwait
mov
mov
sub
es
dec
mov
inc
sti
jg
push
scas
add
jbe
fbld
pop
add
cs
movs
mov
push
sbb
dec
(bad)
arpl
repz
bound
leave
test
xchg
mov
rcr
mov
aas
push
xor
scas
movs
in
das
pop
and
loope
jae
or
or
jl
mov
xchg
mov
mov
sbb
in
dec
xchg
movs
inc
outs
pop
push
(bad)
inc
sub
(bad)
xlat
inc
jno
scas
xchg
hlt
add
(bad)
mov
jb
leave
loope
scas
cmovp
xchg
retf
aad
xchg
fs
movs
jl
jecxz
xchg
ret
push
push
repnz
add
xor
fnstsw
push
mov
fwait
repnz
fcom
adc
ds
xor
add
mov
push
pop
mov
in
cld
mov
xor
(bad)
ficomp
and
dec
or
mov
xor
dec
sub
mov
mov
pop
inc
out
xchg
and
rcr
fcmovb
ja
mov
or
popa
int3
fnstenv
jmp
lods
add
and
jb
xchg
movs
cwde
pop
jle
push
shr
fstp
out
lods
dec
pop
in
cli
adc
sbb
push
jecxz
cmps
gs
add
sub
(bad)
add
ror
push
frstor
push
mov
jb
pop
add
stos
jae
xor
test
ins
ret
add
fbld
nop
xor
ja
lods
shl
jne
nop
imul
sub
mov
mov
push
mov
jle
fs
nop
(bad)
pushf
fcmovb
add
dec
rol
ret
pop
rcr
cdq
fsubr
aad
mov
push
mov
xchg
add
or
(bad)
mov
arpl
movs
add
push
push
imul
mov
and
mov
sbb
mov
and
movs
idiv
mov
add
add
inc
xchg
jno
fs
mov
push
cmp
pop
mov
xchg
xchg
pop
adc
push
jnp
mov
inc
dec
jno
dec
jno
dec
inc
pop
jmp
fbstp
shl
sub
xchg
retf
and
je
xchg
cld
sub
push
sub
ret
pop
lea
(bad)
mov
push
xor
repnz
(bad)
stc
fldenv
cwde
out
xchg
push
in
(bad)
cli
das
mov
jecxz
cmp
test
inc
inc
push
xor
test
fs
outs
jmp
icebp
pop
popf
in
scas
or
repz
push
pop
ins
xchg
or
jb
addr16
loop
mov
cmp
pop
xchg
add
pop
dec
push
test
and
adc
pop
fcomp
mov
mov
daa
mov
dec
cli
call
shl
imul
cvtpi2ps
iret
dec
adc
repz
fs
ja
mov
ud1
(bad)
scas
xor
push
repz
push
movhps
pop
inc
mov
loop
inc
data16
ins
xor
cmc
fnsave
push
test
sbb
add
add
xchg
jmp
add
add
inc
mov
adc
fist
int
dec
inc
or
fild
stc
mov
mov
jbe
xor
pop
dec
(bad)
jb
inc
mov
fist
pop
dec
enter
mov
cmp
rcl
in
les
add
repnz
push
ds
inc
sbb
cmp
jno
fdiv
outs
stc
mov
hlt
or
cmps
je
add
(bad)
dec
arpl
push
push
push
mov
loope
push
es
cli
popf
daa
(bad)
fild
and
mov
ins
cld
and
jp
pop
daa
push
push
test
jne
xchg
mov
add
int
sti
mov
pop
xchg
cmp
fninit
ss
movs
addr16
xor
mov
xlat
dec
mov
out
outs
adc
es
aad
out
imul
jb
mov
and
lds
mov
jno
push
rcr
cmp
xor
add
or
int3
sub
cmp
in
push
mov
retf
pushf
jmp
out
lods
mov
cmps
mov
rol
push
je
push
mov
fiadd
inc
dec
outs
mov
fsubr
xchg
ficom
movs
lahf
lods
in
ror
ds
loopne
scas
lahf
les
adc
rcr
fs
enter
daa
push
ja
jbe
pop
sbb
xor
pop
(bad)
adc
add
mov
xchg
(bad)
fdiv
fcmovnu
adc
push
sub
retf
push
adc
jl
test
xchg
sbb
(bad)
push
fdivr
test
mov
shl
cmps
mov
(bad)
dec
xchg
cmps
imul
shr
imul
out
or
pop
fisub
jecxz
cli
sbb
mov
loopne
xchg
xchg
aam
push
or
adc
mov
stos
in
push
mov
adc
cmp
ins
aam
aam
mov
xor
mov
fwait
into
outs
or
jecxz
add
and
pop
adc
ss
daa
sbb
out
cmp
xor
dec
out
add
movs
push
adc
stos
jo
cwde
in
popa
sahf
jo
pushf
pop
in
fistp
fisub
xchg
dec
mov
and
mov
pop
push
test
es
loopne
mov
retf
jmp
ds
mov
ret
xchg
add
lahf
xor
mov
(bad)
jb
arpl
mov
sub
into
mov
mov
mov
cdq
hlt
sub
cmp
mov
mov
xchg
xor
rcl
call
call
cld
fbld
scas
jl
and
fs
jle
mov
loopne
sbb
xor
vpsubw
movs
(bad)
test
lds
sbb
fst
lds
sub
sub
cmp
cmps
lea
pop
jp
(bad)
cmp
push
mov
add
dec
je
retf
inc
sbb
je
xlat
fbld
push
mov
jecxz
aam
mov
jg
pop
aam
test
xchg
mov
cmp
popf
addr16
jmp
mov
xor
retf
in
arpl
(bad)
int
mul
mov
into
mov
cmp
arpl
add
inc
sbb
and
adc
imul
pop
inc
scas
dec
inc
jae
lods
mov
or
sbb
pop
mov
dec
cli
cmp
das
aad
das
mov
cld
jle
ror
push
add
pop
pop
sub
inc
add
and
leave
and
rol
mov
mov
ja
or
out
add
push
das
cdq
mov
inc
pop
pop
adc
cli
lock
lea
push
ffree
pop
mov
in
mov
fild
and
adc
jmp
pop
int
fdiv
in
xor
fsin
movs
mov
fisub
mov
repnz
sbb
push
mov
mov
or
leave
xlat
adc
stos
lds
add
xchg
mov
jle
mov
popa
or
push
or
xor
jg
mov
mov
icebp
stos
cmp
(bad)
pusha
test
mov
rcl
jecxz
enter
jp
sahf
pop
hlt
retf
xchg
xor
xor
mov
shl
inc
xor
shl
cdq
fs
into
or
movs
ins
stc
sbb
jmp
inc
xchg
cwde
repz
cmp
xor
lahf
out
repnz
std
ror
outs
mov
ror
int3
add
call
push
fisttp
push
rol
ss
push
jnp
mov
sbb
imul
or
int3
lds
cmp
in
dec
lds
add
int
pop
(bad)
outs
push
lods
js
sahf
movs
xchg
ds
sbb
cmp
mov
retf
mov
dec
xor
pop
and
push
into
out
scas
stc
lods
mov
pop
sub
leave
aas
jl
add
addr16
jl
xchg
(bad)
cmps
mov
sbb
lahf
sub
jg
mov
std
sti
cmp
or
mov
fs
pop
xor
push
loope
fldenv
mov
mov
mov
daa
(bad)
pop
(bad)
arpl
out
inc
sub
data16
js
lds
xchg
mov
mov
xor
mov
mov
mov
jmp
or
in
data16
call
scas
cmp
das
and
jle
dec
pop
or
(bad)
or
xor
mov
pop
sub
add
dec
jl
sbb
test
pop
scas
in
add
push
(bad)
fwait
mov
cwde
inc
test
jns
jmp
xlat
pop
mov
and
jle
fadd
xchg
das
ins
sub
in
mov
cmp
cdq
add
fist
lods
sar
sub
dec
test
inc
nop
test
int
bound
mov
push
(bad)
mov
sub
push
and
cmp
test
xchg
push
mov
mov
loope
mov
nop
and
mov
push
cmp
loope
fsubr
cmc
fstp
push
xchg
fimul
pop
fwait
adc
sbb
imul
fcomi
stc
jmp
and
xchg
jp
gs
sbb
jle
push
dec
lock
mov
push
adc
out
loope
icebp
and
and
mov
pop
movs
data16
test
adc
call
enter
fstp
aad
sub
xchg
sbb
push
int3
aam
mov
(bad)
jp
(bad)
movs
retf
daa
addr16
sub
add
cmp
fs
add
pop
mov
xor
dec
or
sbb
push
add
les
sbb
push
pop
xor
test
fld
add
xor
add
dec
xor
xchg
scas
pop
sbb
mov
xor
repz
call
ret
push
mov
in
(bad)
rol
ja
scas
or
push
ffree
sbb
xlat
and
and
adc
xor
and
push
pop
mov
ds
popf
dec
ss
les
sbb
(bad)
cmp
aas
jge
fist
(bad)
fsub
retf
sbb
hlt
aad
push
mov
test
add
fnstcw
push
fldlg2
mul
or
and
(bad)
and
jne
int
nop
mov
aas
popa
cmp
movs
mov
add
mov
imul
xchg
enter
ss
dec
sub
aaa
pop
mov
mov
pop
(bad)
mov
(bad)
fucomp
mov
pop
sub
and
jo
jg
mov
xor
push
sub
sbb
lock
outs
mov
fs
movs
push
loop
and
imul
clc
fidivr
in
aas
add
jns
lahf
mov
xchg
retf
adc
jecxz
