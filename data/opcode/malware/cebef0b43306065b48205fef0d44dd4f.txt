(bad)
mov
jmp
dec
retf
sbb
dec
mov
adc
sbb
or
dec
jne
test
xchg
mov
fisttp
movs
sbb
or
js
jge
sbb
dec
test
sbb
ret
mov
xlat
ret
xchg
adc
cmp
lahf
or
jmp
sub
add
adc
add
lahf
mov
leave
sbb
lahf
xor
inc
es
(bad)
enter
int
xor
lods
mov
dec
mov
and
mov
xor
mov
nop
inc
test
mov
dec
jle
dec
lock
fwait
dec
mov
or
(bad)
sbb
push
pop
lods
mov
cmp
int
test
xchg
mov
inc
pop
out
mov
push
fdivr
test
xor
dec
xor
clc
int3
gs
dec
inc
adc
dec
mov
ja
ret
mov
jl
inc
sbb
js
pop
test
outs
sub
int
mov
outs
and
or
dec
mov
dec
int
retf
pop
test
int
push
(bad)
inc
or
xchg
retf
pop
not
xchg
inc
or
sbb
inc
or
xchg
mov
hlt
fnsave
leave
xchg
pushf
pop
fwait
dec
pop
mov
jecxz
retf
or
inc
mov
pop
sti
mov
xchg
inc
mov
jp
mov
jle
mov
sub
jp
fnsave
sbb
lahf
xor
xor
lods
mov
(bad)
sbb
dec
cmps
pop
pop
retf
mov
test
mov
sbb
clc
(bad)
sbb
dec
int
popf
inc
and
lahf
xor
fadd
dec
int
ror
xor
jecxz
pop
jge
mul
dec
fdivr
mov
or
or
hlt
shl
movs
test
stos
pop
xchg
inc
jle
nop
fbstp
lods
mov
int
lock
sbb
dec
es
push
fs
mul
(bad)
jecxz
adc
test
sbb
dec
int
jle
cmps
jecxz
push
jge
mul
push
or
dec
popf
js
ins
int
test
dec
jle
and
jp
inc
jmp
cmp
jbe
and
je
clc
(bad)
sbb
ins
jge
mul
in
lods
mov
and
jecxz
pusha
jge
div
int
ret
pop
test
int
xchg
int
je
aad
rol
test
sbb
dec
push
sbb
shr
out
add
sbb
out
sbb
sbb
dec
xchg
xor
in
inc
mov
xchg
xor
int
mul
into
jbe
and
je
dec
int
lahf
push
fbld
inc
fisttp
out
sbb
mov
jle
or
or
(bad)
mov
je
dec
inc
cdq
add
xor
cmps
and
push
test
psubq
jecxz
sbb
popf
sbb
and
sub
addr16
inc
mov
dec
pop
outs
int3
sbb
retf
or
retf
sbb
cmp
sub
je
fsub
scas
inc
cdq
pop
sti
xor
jle
imul
test
xchg
aad
sbb
fwait
dec
dec
mov
and
dec
int
mov
popf
xchg
mov
popf
jbe
and
sbb
dec
cmps
sbb
dec
cmps
sbb
cmp
and
xchg
xor
or
int
add
sub
adc
jecxz
mov
imul
(bad)
mov
test
and
adc
aaa
mov
int3
imul
dec
es
test
aad
sbb
ror
ss
xor
xchg
dec
int
adc
mov
jle
inc
pop
or
movs
add
div
(bad)
xor
sbb
mov
jmp
xor
mov
or
cmp
mov
hlt
mov
int
jle
xor
mov
(bad)
jmp
cld
fdiv
mov
inc
fld
shr
sbb
dec
mov
or
fst
(bad)
mov
mov
push
xchg
mov
int
call
fdivp
mov
mov
push
or
int3
in
sbb
iret
adc
repz
jle
dec
aam
or
test
into
mov
xchg
mov
hlt
pop
add
and
xchg
sbb
mov
cmp
xchg
push
retf
add
sbb
xor
popa
jecxz
mov
pop
inc
or
aas
mov
pushf
retf
dec
int
push
jno
loopne
retf
or
int
test
shr
out
int3
sbb
jae
sbb
sbb
xchg
stos
pop
or
ret
popa
jl
xor
or
inc
mov
mov
jecxz
dec
mov
pop
inc
or
aas
mov
pushf
retf
dec
int
push
jno
push
mov
div
inc
jmp
pop
inc
in
mov
fldenv
jg
enter
xor
xchg
mov
jl
xor
or
xor
jle
cmp
or
xor
jle
cmp
cdq
or
in
xor
enter
xor
int
sbb
mov
inc
lods
or
lock
fwait
dec
jl
rcr
mov
and
ror
jmp
mov
pop
xadd
cmp
jg
sbb
ret
mov
dec
fwait
cmp
inc
fld
mov
xor
fiadd
setg
push
hlt
ret
inc
pop
dec
mov
jle
cmp
add
mov
jle
xor
adc
mov
sbb
(bad)
pop
inc
pop
or
cvtps2pi
mov
mov
adc
fwait
cmp
inc
fld
mov
xor
fiadd
setg
push
hlt
ret
jne
ror
xchg
mov
pop
xadd
test
dec
inc
pop
dec
xchg
inc
mov
dec
mov
adc
dec
and
or
or
cvtps2pi
dec
mov
jmp
push
inc
pop
inc
sbb
shl
add
neg
or
(bad)
mov
ret
mov
mov
jns
inc
test
shr
cmps
sbb
mov
jle
cld
in
(bad)
xor
cmp
sbb
cmp
(bad)
sbb
mov
inc
pop
or
nop
adc
int
pop
jnp
jecxz
sbb
or
sahf
dec
pop
stos
xor
or
or
sbb
inc
in
scas
inc
pop
xadd
inc
test
shr
cmps
sbb
mov
dec
ret
idiv
inc
fisttp
cmp
int
jle
cmps
sbb
dec
movs
jecxz
dec
int
mov
dec
cmps
sbb
stos
mov
adc
jle
xor
das
test
add
mov
push
call
loop
popf
add
xchg
sbb
retf
lock
add
push
or
dec
jl
xor
ret
mov
or
leave
xchg
out
mov
adc
dec
xor
jl
xor
shl
jle
and
inc
test
shr
sbb
mov
or
xor
lahf
ror
jp
dec
cmps
sbb
jmp
sbb
lds
std
mov
and
xchg
xor
xor
sub
imul
imul
and
xchg
mov
popf
hlt
mov
mov
fdivr
xchg
ret
ror
jle
dec
fdiv
sbb
xchg
icebp
mov
xchg
out
(bad)
test
repz
mov
xbegin
lods
(bad)
fadd
mov
xor
sbb
mov
inc
(bad)
mov
dec
jle
jne
test
sbb
push
call
nop
in
jle
dec
and
mov
sbb
dec
dec
cmp
jmp
hlt
pop
sti
inc
dec
aam
dec
int
mov
outs
fs
or
popf
xor
rcr
retf
lock
adc
push
or
dec
jl
xor
leave
es
cmps
dec
int
rcl
outs
pop
test
xchg
jb
xor
or
xor
mov
cmps
sbb
test
xor
ss
retf
or
retf
sbb
cmp
outs
pop
test
popf
add
lds
leave
or
popf
xchg
mov
inc
pop
repz
or
rcl
add
cwde
les
sbb
xor
in
test
and
mov
sbb
fs
les
stos
inc
cdq
das
mov
jecxz
mov
sbb
or
jns
idiv
retf
xor
pop
test
xchg
mov
dec
fcomip
es
popf
dec
and
inc
jle
cld
les
stos
(bad)
or
outs
pusha
inc
or
xchg
mov
popf
xchg
sub
movs
repz
int
add
inc
popa
inc
mov
mov
push
adc
les
mov
xchg
xor
mov
idiv
(bad)
sbb
mov
test
cmc
jecxz
jne
sbb
dec
inc
pop
or
imul
ror
jb
xor
or
ins
adc
jl
xor
jle
xor
repnz
pop
div
mov
into
int
jecxz
mov
and
dec
xor
dec
dec
and
(bad)
sbb
cmp
mov
cmps
ret
std
jecxz
inc
xor
ret
mov
into
or
xor
or
call
sbb
or
sbb
mov
xor
or
push
inc
test
shr
sbb
dec
mov
jnp
repz
xor
sbb
mov
out
inc
test
pop
dec
icebp
sub
inc
dec
mov
dec
int
sub
(bad)
mov
int3
sbb
dec
inc
out
jle
cmp
jle
xor
xchg
pop
popa
adc
imul
jl
adc
jge
sbb
sbb
or
int3
dec
lahf
fsubr
mul
dec
fdivr
shl
jle
or
push
jmp
or
dec
jns
dec
dec
popa
or
dec
push
sbb
pop
imul
test
push
jle
int3
in
(bad)
dec
jns
dec
cld
(bad)
jle
cmp
jle
xor
adc
add
iret
mul
ret
mov
aaa
leave
and
xor
int
vmwrite
pop
dec
icebp
sub
inc
dec
das
or
int
mov
adc
js
pop
mul
es
pop
or
dec
cmps
sbb
dec
cmps
sbb
dec
int
mov
int
mov
and
xchg
mov
cmps
push
popf
dec
cmps
sbb
mov
inc
pop
inc
or
aas
mov
pushf
retf
dec
int
push
ror
test
xor
mov
in
aaa
mov
xchg
mov
popf
jbe
and
imul
dec
inc
in
scas
inc
pop
pop
ret
mov
jle
xor
mov
xchg
inc
lods
or
mov
dec
int
shl
call
sti
mov
xchg
jb
xor
or
push
popf
xor
(bad)
sbb
mov
or
sub
jo
dec
inc
cdq
add
or
or
xor
scas
inc
or
sbb
rcl
mul
and
xchg
jb
xor
or
adc
jecxz
test
loop
lds
or
ss
retf
or
je
push
mov
cmp
dec
cmp
jle
jge
or
sub
mov
cmps
ret
cmc
jecxz
add
inc
or
jmp
ror
mov
xchg
xor
dec
ror
xor
sub
test
xor
xor
retf
sbb
ror
rol
jbe
gs
test
jecxz
jmp
popf
xchg
iret
mov
fs
xor
dec
je
call
or
in
mov
lahf
xor
(bad)
mov
xchg
jb
xor
or
cdq
mov
ficom
jae
or
(bad)
sbb
ret
cmc
jecxz
xor
pop
or
adc
retf
cs
mov
test
pushf
dec
mov
loop
dec
ret
dec
int
popf
dec
movs
inc
push
or
xchg
jb
xor
or
and
lahf
xor
xchg
shl
mov
popf
xor
neg
inc
jp
push
mov
jecxz
mov
sbb
inc
dec
and
inc
int
jecxz
mov
dec
jp
xor
or
mov
mov
sbb
retf
or
clc
dec
or
popf
mov
push
loopne
loop
dec
dec
and
inc
dec
fcomip
dec
int
xor
call
je
test
sbb
sbb
mul
dec
fdivr
jne
jecxz
dec
mov
rcl
or
xchg
dec
mov
loop
pop
and
lahf
xor
or
push
or
int
mul
or
mov
movs
dec
push
or
hlt
pop
mov
shl
mov
sbb
outs
cmps
sbb
test
xor
cmp
or
or
retf
sbb
cmp
(bad)
xor
or
sbb
and
je
test
sbb
sbb
mul
dec
fdivr
jne
jecxz
dec
mov
movs
pop
or
xchg
dec
mov
loop
pop
and
lahf
xor
or
push
or
int
mul
outs
cld
mov
movs
dec
push
or
hlt
xchg
mov
shl
mov
sbb
outs
cmps
sbb
test
xor
(bad)
or
or
retf
sbb
cmp
(bad)
xor
or
sbb
rcl
or
int3
je
test
sbb
sbb
mul
dec
fdivr
jne
jecxz
dec
mov
jecxz
mov
sbb
dec
cmps
sbb
mul
popf
mov
add
lock
dec
int
std
(bad)
mov
sbb
mul
mov
mov
movs
dec
push
or
hlt
cmp
and
mov
sbb
or
sbb
test
xor
out
jecxz
retf
or
retf
sbb
cmp
mov
mov
mov
mov
fdivr
jne
jecxz
dec
mov
jecxz
mov
sbb
dec
dec
out
mov
cmc
gs
mov
imul
or
sbb
int
jecxz
mov
hlt
pop
mov
jecxz
mov
jns
test
mov
jle
cld
les
or
mul
dec
out
mov
int
jp
adc
xchg
jb
xor
or
inc
and
pop
xchg
xchg
mov
(bad)
fdivr
int
sbb
dec
inc
cdq
dec
mov
jecxz
ret
dec
les
mov
dec
jl
xor
ror
jle
dec
popa
or
cdq
xor
je
sbb
or
test
retf
push
sbb
cmc
jne
or
int
test
int
xor
push
jecxz
mov
sbb
int
jecxz
mov
sbb
dec
inc
cdq
jg
xor
cmps
lds
or
adc
xchg
(bad)
mov
add
cmp
jle
dec
jecxz
mov
fistp
sbb
or
(bad)
sbb
int
jecxz
mov
xchg
iret
mov
and
dec
int
jle
xor
repz
int
jb
xor
or
inc
cdq
and
cmc
jecxz
cwde
int
test
int3
les
dec
popa
or
cdq
test
or
xor
or
inc
and
pop
cmc
xchg
mov
(bad)
fdivr
int
pop
test
sbb
addr16
cdq
pop
mov
jecxz
ret
dec
ror
xor
xor
ror
idiv
xor
or
push
lahf
mov
sbb
lds
or
and
xchg
iret
mov
cmp
xor
xor
mov
test
popf
sbb
test
in
or
xor
dec
push
or
xchg
jb
xor
or
and
lahf
xor
sbb
int
test
sbb
leave
ds
dec
int
inc
movs
xor
or
dec
loope
mov
dec
lahf
sub
dec
loope
mov
dec
pop
ja
sbb
retf
or
jle
in
jle
stos
(bad)
xor
or
xchg
jb
xor
or
dec
mov
mov
xchg
jb
xor
or
inc
test
je
fst
test
jecxz
mov
lock
sub
add
inc
mov
mov
fs
pop
or
adc
iret
sbb
retf
push
sbb
mov
push
test
jecxz
and
mov
inc
cdq
imul
jecxz
jne
sbb
dec
inc
pop
or
adc
iret
sbb
leave
ds
scas
dec
int
jb
xor
or
inc
cdq
push
mov
jecxz
ret
cmc
jecxz
and
pop
or
adc
int3
sbb
retf
push
sbb
test
int
or
int
scas
rcl
xor
mov
sbb
int
jecxz
mov
cdq
(bad)
mov
jecxz
int
jecxz
mov
xchg
inc
cmp
loop
retf
and
scas
je
test
ins
or
inc
sti
dec
dec
int
idiv
xor
or
inc
and
pop
mov
ins
mov
ror
mov
xchg
xor
mov
test
lahf
push
int3
xor
or
cdq
jae
xor
cmps
and
cdq
ja
xor
cmps
ret
cmc
jecxz
jne
sbb
dec
inc
pop
or
adc
int3
sbb
retf
jo
or
les
xchg
mov
jecxz
and
jecxz
mov
dec
cwde
or
xor
ror
jle
dec
popa
or
cdq
sub
int
xchg
retf
jo
or
add
dec
dec
mov
test
xchg
jb
xor
or
xor
pop
aaa
ds
retf
or
(bad)
adc
loope
leave
push
mov
dec
adc
ret
dec
int
xor
cmp
sbb
dec
cmps
sbb
std
gs
mov
cdq
or
nop
cld
mov
inc
cdq
or
jmp
test
loope
mov
lahf
aas
mov
pushf
retf
dec
int
push
ror
mov
popf
sbb
rcr
mov
inc
or
xor
or
inc
cdq
movzx
jecxz
int3
enter
xor
movs
sbb
retf
or
popf
dec
inc
cdq
or
xchg
cld
mov
inc
cdq
or
pop
jne
dec
dec
fsub
leave
ds
int
dec
int3
xor
or
sbb
int
jecxz
mov
xchg
(bad)
mov
adc
nop
cmp
jle
xchg
jecxz
mov
fisttp
int
jecxz
mov
cdq
push
mov
jecxz
int
jecxz
mov
sahf
cli
mov
jecxz
int
jecxz
mov
xchg
(bad)
mov
adc
int
jecxz
mov
xchg
(bad)
mov
adc
int
jecxz
mov
cdq
adc
and
or
xor
je
cmp
imul
mov
sbb
ins
int
idiv
xor
or
push
xchg
jb
xor
or
inc
sub
push
lds
or
adc
jecxz
mov
xchg
(bad)
mov
adc
cmc
sbb
or
dec
enter
dec
jl
xor
ret
dec
les
mov
dec
jl
xor
ret
dec
ror
xor
xor
rcl
jb
xor
or
inc
sub
push
vaddsubpd
xchg
aad
sbb
movs
cwde
inc
or
je
pop
lea
jmp
popf
js
ins
int
test
dec
jle
and
sub
dec
jno
out
sbb
(bad)
dec
int
jbe
sub
ror
je
dec
int
pop
inc
movs
sbb
retf
or
pop
cmp
jecxz
retf
lock
inc
or
sbb
xchg
es
or
mov
test
jl
sub
(bad)
dec
inc
popa
sub
xor
sbb
or
mov
jecxz
pop
xchg
inc
retw
mov
xchg
jmp
sbb
dec
pop
aad
dec
int
jle
pushf
dec
dec
pop
stos
mov
ror
inc
or
jbe
and
je
ins
lea
daa
test
test
scas
sbb
pop
add
mov
pop
sahf
dec
jl
lds
jle
int3
in
jle
xor
cmp
sbb
xchg
dec
cmp
fmul
sbb
rcl
pop
test
sbb
retf
call
sbb
dec
and
test
sbb
dec
int
jle
mov
mov
ret
or
inc
or
sbb
jne
sbb
dec
ret
dec
int
or
inc
or
pushf
cli
push
push
pop
test
int
repnz
pop
idiv
pushf
into
push
dec
cld
repz
dec
enter
int
enter
ja
aad
mov
(bad)
jmp
int
add
test
jmp
int3
sbb
xlat
mov
dec
xor
iret
xlat
mov
mov
cmp
test
sbb
mov
sbb
mov
push
repnz
push
pop
neg
sbb
mov
hlt
dec
int
add
rol
int
push
or
jmp
or
push
pop
test
hlt
dec
int
add
fstp
enter
or
sbb
inc
xor
or
int
or
push
test
or
dec
int
cli
push
push
pop
test
mov
push
stos
xor
or
int
or
push
std
iret
sbb
sar
cli
push
push
pop
test
sbb
dec
int
push
push
jecxz
mov
int
or
push
ror
test
int
cli
push
push
pop
test
sbb
dec
int
push
ret
xor
or
int
bnd
pop
test
or
or
test
sbb
mov
dec
cmc
xor
int
adc
mov
jle
dec
adc
xlat
mov
mov
ins
lock
int
aaa
dec
int3
sbb
xlat
mov
xchg
sbb
jmp
int3
sbb
fmul
sbb
jmp
int3
sbb
xlat
mov
out
sbb
mov
push
bnd
pop
test
xchg
pop
popa
cmp
and
or
pop
push
ret
idiv
cmc
cmp
sbb
inc
aad
mov
in
popf
xor
ret
sbb
rol
push
or
adc
popf
mov
mov
in
aaa
retf
int
movs
mov
lock
test
sbb
dec
mov
or
inc
or
pushf
cli
push
push
pop
test
mov
xor
push
pop
test
not
mov
and
or
xchg
pop
jns
xchg
xor
rol
int
sbb
cld
fcomp
sbb
sbb
leave
cmp
cmp
pop
idiv
int
clc
int3
or
dec
inc
aam
ret
xchg
(bad)
sbb
mov
ret
cmp
ins
or
pop
or
jnp
xchg
(bad)
sbb
test
xchg
mov
ret
mov
fdiv
dec
int
jae
int
test
retf
jecxz
inc
pop
pop
test
int
inc
or
int
add
outs
or
sbb
test
int
sbb
or
mov
sbb
fmul
pushf
mov
rol
int
jle
int3
in
jle
inc
aam
ret
adc
mov
dec
clc
push
int
pop
dec
inc
pop
or
cmp
int
lock
enter
int
jle
in
jle
dec
cmp
fmul
xchg
aas
or
sti
fmul
sbb
jo
pop
div
int
(bad)
fmul
mov
cmps
xchg
cmp
dec
dec
cmp
fmul
xchg
aas
or
sti
fmul
sbb
loopne
pop
div
int
iret
xlat
mov
dec
ror
mov
aam
nop
outs
sbb
int
aaa
or
xchg
adc
popf
dec
mov
pop
jne
mov
int
adc
mov
jle
xor
cmp
sbb
inc
ja
mul
inc
fistp
pop
and
mov
lahf
pusha
ja
neg
and
mov
dec
or
sbb
mov
inc
ficomp
pop
and
mov
lahf
add
neg
and
mov
lahf
push
ja
neg
and
mov
test
add
mov
cmp
sub
ss
(bad)
not
mov
cwde
dec
or
xchg
mov
popf
jecxz
adc
pop
test
int3
les
dec
jns
dec
inc
pop
pop
ror
test
sbb
retf
test
test
enter
int
xchg
cwde
int
das
jns
xchg
xor
test
test
adc
xchg
outs
int
add
push
xchg
repnz
pop
test
mov
pop
inc
dec
int
div
cmps
inc
test
xchg
xor
mov
je
jne
jp
jno
sbb
out
push
lds
sbb
dec
inc
pop
adc
xor
add
mov
nop
cld
les
inc
pop
imul
sbb
or
cmps
sbb
dec
cmps
sbb
cmp
int
jp
ins
dec
or
popf
jbe
mov
xor
cmp
sbb
dec
xor
and
jbe
and
jbe
mov
clc
pop
xor
test
xchg
xor
mov
sbb
mov
push
mov
popf
jecxz
clc
inc
pop
adc
xor
add
mov
or
es
test
shr
sbb
or
pop
mov
or
cmp
ror
mov
inc
pop
pop
ret
or
xor
sub
jle
and
jbe
lds
hlt
cmps
mov
in
dec
inc
pop
add
cmps
jecxz
cmp
push
pop
test
dec
jno
pop
lea
or
dec
dec
dec
lods
add
shl
repnz
pop
div
xor
out
mov
scas
mov
idiv
inc
fld
lods
dec
lock
sbb
xchg
stos
inc
xor
cmp
sbb
mov
stos
repz
jecxz
dec
int
ret
inc
jnp
ror
test
pop
ror
test
pop
ror
test
pop
ror
dec
int
jae
iret
sbb
ret
mov
or
sbb
repz
jecxz
or
dec
ret
mov
stos
repz
scas
mov
jecxz
hlt
fdivrp
int
sbb
dec
inc
out
inc
jnp
loope
movlps
int
test
ret
pop
hlt
fiadd
mov
(bad)
bswap
and
sbb
mov
xchg
adc
xor
inc
inc
sbb
and
neg
and
adc
xor
pop
inc
or
call
stos
adc
sbb
or
inc
dec
out
cdq
pslld
lahf
sbb
or
inc
pop
add
mov
or
sbb
mov
hlt
repz
cwde
call
test
pop
or
or
into
dec
or
sbb
inc
dec
pop
or
sub
mov
jecxz
cmp
pop
test
cdq
xchg
str
icebp
dec
mov
hlt
cmc
enter
cmp
and
sbb
mov
retf
and
dec
int
add
je
enter
jmp
pop
mov
inc
dec
iret
dec
dec
div
retf
or
sbb
retf
jbe
imul
adc
in
mov
iret
imul
dec
mov
hlt
repz
jnp
icebp
jne
sbb
dec
mov
sbb
cmp
inc
dec
out
cdq
pslld
lahf
sbb
nop
dec
hlt
repz
mov
enter
and
xchg
jecxz
int3
sbb
dec
dec
and
dec
mov
pushf
retf
dec
int3
imul
dec
mov
hlt
hlt
enter
cmp
and
sbb
jne
adc
mov
sbb
cmp
and
dec
int
adc
lods
dec
int
mov
dec
int3
out
mov
int3
sbb
dec
mov
test
inc
test
shr
sbb
mov
or
xchg
add
(bad)
mov
sbb
repz
inc
mov
idiv
cmp
or
fistp
or
int
into
mov
sbb
retf
or
or
test
dec
ret
pop
or
cmc
ret
icebp
or
(bad)
in
nop
popf
hlt
jae
xor
scas
mov
push
inc
dec
shl
pop
dec
int
sub
test
loopne
mov
mov
jge
retf
dec
xor
jmp
hlt
pop
or
and
add
rcl
test
int3
(bad)
ficomp
int3
int3
jle
cmp
mov
push
leave
mov
cmp
aas
mov
out
not
int3
(bad)
neg
mov
xor
jp
rcr
out
enter
int
aas
mov
in
sbb
sbb
cwde
dec
hlt
repz
repz
sbb
dec
sahf
dec
clc
(bad)
cwde
or
stos
iret
jecxz
pop
xchg
mov
or
xchg
inc
lods
or
inc
ror
hlt
cmp
int
movs
push
call
int
ret
or
int
retf
sbb
cmp
fidiv
adc
or
cdq
add
xor
test
int
ja
cs
or
jnp
add
xor
ja
enter
int
adc
adc
xor
idiv
adc
repz
jno
test
stos
bound
pop
mov
mov
ja
inc
inc
adc
jo
pop
neg
and
xchg
(bad)
loopne
jecxz
ror
cmps
ror
sbb
inc
adc
xchg
jbe
neg
or
cmc
rcr
mov
jecxz
pop
popf
test
dec
int
(bad)
in
adc
or
leave
or
(bad)
repz
repz
icebp
sbb
repz
sbb
inc
dec
push
or
and
or
stos
bound
das
push
je
fdivr
or
sbb
int3
push
sbb
dec
ret
mov
das
push
jl
fmul
int
bound
push
dec
stos
adc
or
cwde
pusha
dec
int
pop
ja
jecxz
ror
mov
jecxz
cmp
pop
test
xor
ss
fist
mov
inc
cdq
add
es
neg
and
xchg
xor
cmp
inc
cmc
xor
popf
xor
fstp
jae
call
and
dec
cwde
sub
xchg
sbb
mov
push
push
movs
and
or
nop
test
sbb
std
and
or
xor
pop
inc
aaa
jecxz
retf
or
jle
xor
push
enter
dec
inc
xor
cld
jecxz
xchg
or
cmc
mov
push
hlt
sbb
dec
cli
repz
mov
add
or
sbb
cmp
popf
or
ret
dec
int
test
jecxz
push
dec
fcomip
pop
int
jbe
int
test
hlt
cld
mov
jecxz
leave
dec
lock
int
jb
adc
or
jecxz
dec
hlt
cdq
sbb
nop
jecxz
mov
sbb
std
adc
and
mov
int
clc
(bad)
pop
out
sbb
inc
or
push
pop
call
push
mov
inc
mov
cmps
xor
ss
iret
xchg
mov
ss
inc
adc
rol
xchg
xor
jl
cmp
or
adc
push
dec
or
cmc
dec
and
or
mov
call
dec
mov
leave
sbb
cmp
repnz
pop
test
xor
adc
hlt
pop
push
int
jle
ins
ret
inc
fdivp
pop
enter
int
(bad)
aam
jecxz
retf
pcmpgtb
dec
inc
cdq
outs
xchg
xor
jl
ins
ret
inc
mov
xor
je
rcr
cmc
ror
mov
xchg
jb
adc
or
pop
mov
mov
pop
cmc
ror
mov
xchg
jb
adc
or
dec
enter
xchg
jb
adc
or
rcl
or
xor
pop
sub
enter
and
or
adc
or
dec
test
mov
sbb
or
jo
sub
movs
sbb
dec
in
jbe
ret
pop
test
mov
fstp
lock
or
rcr
xor
sbb
xor
cmp
sbb
(bad)
pop
out
sbb
inc
xchg
sub
sbb
or
pop
pop
test
jecxz
stos
iret
xchg
jecxz
in
lea
cmps
xor
lahf
dec
fstp
sbb
xchg
jb
adc
or
adc
int3
sbb
enter
inc
dec
test
jb
and
or
sbb
mov
ret
inc
int3
adc
int3
sbb
mov
inc
cdq
add
enter
int
sbb
dec
inc
cdq
adc
outs
ret
int
pop
lods
adc
or
test
jle
test
mov
cmc
sbb
push
inc
in
je
into
pushf
iret
dec
mov
hlt
repz
inc
inc
in
je
enter
mov
jecxz
cmp
pop
test
jecxz
stos
iret
xchg
inc
pop
imul
push
xchg
xor
test
retf
sbb
cmp
int3
sbb
dec
dec
hlt
or
mov
ror
mov
div
cmp
clc
ret
dec
call
punpcklwd
pop
int3
cmc
sub
or
outs
ret
int3
adc
outs
ret
or
cmc
ret
jno
push
xchg
xor
xor
pushf
retf
jne
sbb
dec
int
(bad)
icebp
and
dec
int
idiv
into
sbb
dec
int
jecxz
icebp
and
dec
int
idiv
enter
int
hlt
mov
clc
dec
sub
push
push
add
xor
cmps
mov
shr
xor
inc
pushf
adc
or
dec
fdivr
enter
mov
sbb
or
add
pop
call
adc
mov
into
push
or
dec
or
xchg
xor
jle
fsub
jb
and
or
jo
sbb
int
daa
mov
push
fnstenv
repz
repz
icebp
sbb
repz
sbb
inc
dec
xor
xor
adc
mov
je
dec
mov
or
in
popf
call
pop
or
popa
adc
clc
push
out
int
add
inc
pop
xadd
jmp
test
ror
ret
pop
div
ret
dec
ds
ret
pop
div
retf
dec
ds
int
int
int3
das
mov
jecxz
ret
mov
jle
int3
fidivr
xor
mul
ret
inc
sbb
sub
enter
mov
int3
pushf
mov
mov
mul
inc
pop
clc
(bad)
cwde
loope
or
(bad)
clc
int
sbb
dec
dec
pop
bswap
lea
enter
inc
jnp
div
sbb
dec
mov
clc
dec
sbb
retf
xor
pop
or
stos
mov
inc
fidiv
lahf
or
mov
imul
dec
dec
pop
or
stos
mov
cmp
mov
lahf
cmovge
pop
jl
xor
xchg
mov
dec
call
and
int
or
dec
ret
jne
sbb
dec
mov
and
dec
dec
pop
or
or
popa
or
sahf
mov
or
inc
pop
clc
(bad)
cwde
loopne
or
int
dec
dec
pop
or
push
ja
xor
test
sbb
inc
jnp
retf
sbb
cmp
int3
adc
xor
adc
mov
pop
inc
imul
push
dec
div
mov
sbb
push
cmps
sbb
dec
lahf
sbb
sar
mov
pushf
retf
dec
int
push
ror
stc
enter
cmp
int3
sbb
dec
sbb
nop
cld
les
xchg
inc
lods
adc
jne
xlat
dec
int
xlat
sbb
sbb
pop
jb
cdq
push
in
movsx
xchg
jb
adc
or
or
add
inc
inc
cdq
imul
fisttp
dec
inc
cdq
imul
ret
dec
dec
fsub
shl
add
xchg
aad
sbb
pop
add
dec
rep
inc
int
popf
dec
cmps
sbb
cmp
push
dec
test
stc
je
ror
jb
test
add
sbb
and
je
dec
int
popf
dec
cmps
sbb
dec
movs
sbb
dec
dec
jecxz
inc
and
xchg
xor
xor
adc
sti
dec
mov
lahf
xlat
dec
inc
in
scas
inc
pop
add
or
neg
and
xchg
xor
or
hlt
xor
int
jle
xor
mul
int
mov
inc
mov
jle
cmp
icebp
lds
jecxz
mov
fwait
hlt
aas
sbb
sbb
mov
inc
pop
or
xor
inc
mov
dec
mov
bound
mov
fistp
dec
int
repz
jbe
and
sbb
mov
imul
dec
inc
fidiv
test
test
sub
cmc
and
jbe
push
and
xchg
mov
inc
fnsave
pop
ja
int3
sbb
mov
fistp
sbb
hlt
cmp
int
popf
dec
inc
pop
or
cmps
push
lahf
mov
and
popf
add
and
movs
test
test
xchg
aad
sbb
ror
jle
push
pop
jne
mov
int
adc
mov
jle
cmps
sbb
enter
and
jbe
and
je
dec
int
or
int
jle
inc
in
scas
inc
pop
add
or
(bad)
mov
xor
dec
fwait
hlt
adc
int
popf
dec
inc
pop
or
xor
mov
adc
dec
inc
in
mov
(bad)
dec
cld
fdiv
sbb
fwait
dec
jl
(bad)
mov
jle
or
(bad)
jmp
idiv
xchg
sub
repz
sti
xor
dec
or
(bad)
sbb
xor
loopne
or
sbb
jae
pop
mul
dec
fsub
jns
mul
inc
jnp
jmp
or
hlt
mov
mov
pop
int3
adc
xor
cld
enter
cmp
jecxz
int3
xor
movs
xor
or
hlt
fistp
int
je
lds
test
inc
mov
dec
mov
cmp
pop
or
aaa
dec
pop
or
cld
mov
and
inc
(bad)
mov
psubb
leave
daa
cmps
and
cld
mov
and
lahf
xor
and
shr
lahf
sbb
adc
or
nop
push
xchg
aad
sbb
loope
mov
jae
xchg
das
dec
adc
pop
adc
movs
int
xchg
mov
int
mov
(bad)
sbb
dec
int
idiv
int
add
push
pushf
mov
imul
push
int
mov
ret
dec
inc
pop
or
int
add
push
adc
xor
inc
or
in
je
rcr
or
sbb
push
jbe
ins
sub
dec
dec
jno
dec
dec
popa
or
xlat
jl
rcl
or
xchg
mov
es
jbe
sub
test
stos
mov
cmp
aaa
push
int3
pop
pop
enter
cmp
iret
pushf
call
imul
ror
sti
inc
jp
jl
lds
inc
pop
in
sahf
mov
stos
mov
dec
mov
jle
int3
les
inc
push
pop
rol
mov
or
inc
pop
sti
inc
jp
icebp
ret
cwde
adc
call
stos
mov
dec
mov
jl
rcl
or
xchg
mov
inc
in
test
sbb
int3
les
xchg
inc
lods
or
mov
int
mov
pop
cmps
jae
lea
icebp
mov
loopne
pop
cdq
aaa
fcomp
addr16
mov
pop
sub
or
fcomp
fcomp
or
fcomp
fcomp
addr16
mov
pop
imul
dec
pop
cmps
daa
test
mov
xor
pop
cdq
aaa
fcomp
addr16
mov
pop
sub
addr16
or
and
addr16
pop
jge
fcomp
addr16
and
out
xor
xchg
fcomp
fsubr
dec
int
scas
fcomp
addr16
retfw
mov
push
inc
add
fcomp
jl
leave
mov
inc
dec
(bad)
fcomp
(bad)
pop
pop
mov
dec
fcomip
fcomp
into
sbb
fdiv
mov
mov
dec
and
fcomp
add
mov
pop
mov
mov
or
dec
dec
xchg
mov
mov
loopne
int
mov
sbb
adc
push
jl
fcomp
addr16
mov
pop
jbe
fcomp
addr16
pop
mov
pop
lahf
cmovs
addr16
mov
pop
cmps
jae
lea
rcl
fcomp
fcomp
addr16
mov
pop
dec
fcomp
rol
fcomp
add
pop
mov
pop
mov
pop
inc
fcomp
div
adc
pop
mov
xor
inc
lock
mov
pop
lahf
cmovs
addr16
mov
pop
cmps
daa
test
adc
fcomp
fcomp
addr16
mov
pop
dec
fcomp
rol
fcomp
add
pop
mov
pop
mov
pop
inc
fcomp
test
pop
sub
addr16
xor
inc
sub
fcomp
push
jae
loope
mov
dec
jle
dec
lock
sbb
xchg
mov
stos
xchg
mov
or
movs
mov
xchg
ret
mov
jle
int3
fidivr
xor
pop
dec
int
sub
int
jle
int3
in
cmps
mov
xchg
xchg
xor
xor
or
dec
es
sbb
lock
mov
sbb
test
stos
mov
cdq
push
jmp
ror
movs
push
jmp
ror
mov
dec
int
xchg
mov
pop
pop
ror
xchg
fldenv
mov
fst
clc
(bad)
fst
inc
add
fst
inc
dec
shl
adc
pop
inc
(bad)
idiv
ret
mov
(bad)
jg
dec
pop
or
mov
mul
lds
int
jp
aas
dec
pop
out
sbb
inc
jnp
or
inc
(bad)
idiv
ret
mov
int3
cmps
mov
cmps
sbb
aas
dec
jle
int3
in
cmps
mov
dec
fcom
retf
or
jbe
xor
iret
dec
int
or
rcl
sahf
out
mov
jecxz
push
xchg
aad
sbb
loope
mov
fwait
(bad)
popf
xor
out
mul
ja
test
div
or
mov
fiadd
sete
cmc
(bad)
sbb
cmp
mov
test
imul
mov
fdivr
ror
aaa
inc
dec
aaa
cmc
dec
int
inc
xor
inc
or
in
pop
mul
and
(bad)
sbb
lahf
adc
xor
xor
retf
pop
test
jo
neg
and
jbe
and
xchg
pop
dec
enter
int
mov
popf
hlt
dec
add
aad
aas
cmc
(bad)
sbb
or
push
je
dec
int
pop
dec
mov
jl
sbb
or
or
jo
test
and
push
pushf
jo
test
jne
movs
dec
int
adc
mov
jle
inc
in
hlt
or
jo
idiv
lahf
mov
leave
mov
hlt
dec
adc
pop
(bad)
hlt
fwait
add
adc
xchg
add
adc
inc
mov
fdivrp
call
fst
jne
mov
jmp
or
les
jae
sbb
ret
mov
clc
push
xchg
xor
stos
fst
dec
or
jbe
and
mov
inc
in
hlt
dec
or
hlt
pop
add
sbb
mov
mov
jle
cmp
loopne
es
lds
xchg
pop
dec
mov
jl
sbb
or
or
jo
test
and
push
pushf
jo
test
inc
in
hlt
or
jo
idiv
lahf
mov
leave
mov
hlt
dec
adc
pop
pop
cmp
xchg
add
fmul
int
inc
sbb
(bad)
jl
sbb
adc
sar
retf
pop
test
xchg
jecxz
sub
sub
(bad)
sbb
inc
neg
test
leave
lahf
call
dec
jle
into
sbb
cmc
(bad)
sbb
mov
dec
fdivr
and
jbe
and
jbe
and
je
dec
int
or
int
jle
sub
mul
int
mov
popf
jecxz
test
jecxz
lods
and
jecxz
lods
and
dec
pop
pop
pop
sbb
jne
enter
adc
mov
jle
xchg
inc
lods
or
lock
dec
int
movs
push
call
div
jb
xor
or
or
mul
int
test
int
pop
jns
xchg
xor
ja
mov
mov
div
mov
fisttp
push
in
jle
xchg
xchg
xor
or
mov
mov
mov
jecxz
or
and
adc
xor
cmps
ror
mov
sbb
mov
xor
jle
dec
ficom
mov
jecxz
or
xor
(bad)
ds
fidiv
xor
or
dec
mov
mov
or
les
xor
jbe
rol
dec
inc
cdq
or
pop
mov
sub
int
jb
xor
or
and
jbe
and
jbe
and
jbe
and
sbb
or
or
xor
cmps
mov
inc
cdq
add
lds
mov
cmps
sbb
int
loope
mov
je
push
int
lahf
mov
pop
div
xor
mov
int3
in
jle
xor
pop
mov
push
lahf
xchg
adc
lds
or
xchg
lds
or
adc
lds
or
int
ja
sahf
sbb
dec
jne
mov
ror
mov
xchg
xor
int
xor
(bad)
sbb
test
pop
test
xor
int
ja
out
sbb
dec
sahf
je
xchg
(bad)
sbb
xor
iret
sbb
enter
dec
int
xor
jmp
xchg
aad
sbb
ror
inc
imul
fs
in
mov
fisttp
dec
mov
in
scas
inc
pop
add
or
mov
popf
xchg
mov
popf
jbe
and
sbb
dec
cmps
sbb
dec
cmps
sbb
cmp
and
xchg
push
retf
add
sbb
mov
xor
push
cmps
sbb
out
mov
sbb
leave
and
into
dec
int
xor
test
shr
dec
xlat
out
cmps
leave
and
sbb
dec
int
neg
xor
mov
or
cmp
and
lahf
xor
inc
xor
inc
stc
cmps
pop
jb
retf
jnp
xchg
movsx
xchg
mov
inc
fistp
or
fucom
add
mov
dec
fsubr
pop
add
mov
pop
jb
mov
jns
xchg
xor
mov
cmps
lds
je
dec
iret
sbb
dec
cmps
sbb
dec
xor
mov
adc
adc
push
shl
jecxz
push
cmps
sbb
cmp
and
adc
xor
aaa
mov
xor
loopne
arpl
pop
test
push
dec
jle
dec
lock
call
cs
pop
out
div
outs
dec
jmp
push
int
xor
xchg
vmwrite
loopne
and
sbb
dec
cmps
sbb
cmp
and
adc
aaa
mov
popf
dec
popf
dec
cmps
sbb
cmp
and
adc
xor
aaa
mov
and
adc
aad
sti
lock
test
xchg
xor
xchg
aad
sbb
fwait
dec
dec
out
stos
jns
leave
or
dec
int
retf
pop
test
sbb
sbb
xchg
mov
inc
in
mov
fist
sbb
jno
in
addr16
fdiv
and
sbb
dec
cmps
sbb
dec
cmps
sbb
sub
pop
mul
outs
loopne
or
popf
add
sbb
inc
or
mul
mov
loopne
or
hlt
mov
or
cmp
in
dec
int
test
aas
push
push
jle
in
jle
inc
pop
ror
xchg
xchg
(bad)
sbb
sbb
fbld
push
call
(bad)
or
jl
xor
mov
jge
and
inc
mov
les
sbb
imul
dec
dec
fdivr
shl
xor
jle
dec
fdiv
mov
sbb
test
imul
enter
cmp
dec
and
inc
mov
(bad)
dec
dec
pop
or
call
pop
sbb
inc
in
not
int
jle
dec
pop
or
stos
sbb
inc
xor
sar
out
mov
test
xor
jle
int3
in
dec
cld
fsubr
sbb
(bad)
pop
inc
inc
dec
inc
sbb
cmp
dec
pop
sbb
in
(bad)
sbb
je
lds
or
xchg
mov
cld
jmp
dec
in
xchg
push
(bad)
retf
cmp
pop
int3
cmp
mov
sbb
(bad)
dec
es
clc
push
daa
jle
je
test
retf
lods
dec
jle
je
test
push
add
cwde
lock
dec
fist
pop
movs
inc
sub
int
pop
xor
or
dec
outs
pop
ret
mov
test
xchg
aad
sbb
int
mul
sahf
dec
mov
jb
cli
repz
push
sbb
in
and
or
xor
or
xor
mov
dec
fdivr
ror
pop
dec
cmp
imul
inc
int
je
xor
imul
dec
int
aaa
mov
xor
mov
inc
cdq
das
mov
jecxz
push
int
idiv
xor
or
jo
or
xor
or
mov
mov
jecxz
hlt
neg
dec
int
popf
or
xchg
jb
xor
or
or
add
test
dec
or
sbb
mov
inc
pop
inc
dec
int3
or
add
sbb
xor
lds
or
dec
pop
daa
add
or
or
sbb
mov
sbb
retf
or
push
adc
mov
loopne
mov
hlt
scas
or
(bad)
or
int
not
cmp
je
enter
cmp
test
pop
pop
mov
retf
or
mov
and
movs
std
dec
int
outs
mov
mov
pop
mov
sbb
icebp
scas
sbb
dec
push
jmp
sbb
or
repz
mov
call
mov
hlt
das
or
sbb
inc
int
not
cmp
je
enter
cmp
test
pop
mov
or
jg
pop
div
xor
adc
hlt
push
or
sbb
inc
int
not
cmp
je
enter
cmp
test
pop
test
sbb
icebp
(bad)
sbb
dec
push
jmp
retf
aaa
sbb
dec
int
xchg
dec
int
outs
mov
xor
or
(bad)
sbb
mov
dec
fsub
mov
cmp
ret
dec
loopne
mov
dec
lahf
imul
push
mov
int
xor
xor
int
pop
imul
test
sbb
or
jecxz
mov
loop
mov
dec
fdivr
and
ret
mov
xor
pop
mov
test
mov
icebp
(bad)
sbb
dec
push
jmp
retf
aaa
sbb
or
jecxz
mov
loop
mov
dec
fdivr
and
ret
mov
xor
pop
mov
or
sti
mov
icebp
(bad)
sbb
dec
push
jmp
retf
aaa
sbb
dec
int
xchg
dec
int
outs
mov
xor
or
(bad)
sbb
mov
dec
fsub
lock
cli
jle
add
or
mov
icebp
and
jmp
sbb
xchg
dec
xchg
xor
or
and
xchg
jb
xor
or
xor
ret
dec
loopne
mov
dec
lahf
cwde
adc
sbb
lahf
xor
sub
std
dec
int
outs
mov
mov
pop
push
mov
icebp
scas
sbb
dec
push
jmp
sbb
or
repz
mov
call
mov
xchg
pop
mov
xor
or
or
pop
or
sbb
inc
int
not
cmp
je
enter
cmp
test
pop
inc
mov
retf
or
or
test
sbb
or
jecxz
mov
loop
mov
dec
fdivr
mov
je
test
out
xor
(bad)
sbb
std
xor
or
int
xor
in
(bad)
mov
adc
mov
or
jecxz
mov
je
xchg
(bad)
sbb
mov
dec
fsub
mov
je
test
out
xor
(bad)
sbb
std
xor
or
int
xor
and
std
dec
int
outs
mov
mov
lahf
mov
js
or
int
je
(bad)
or
sbb
inc
int
not
cmp
je
enter
iret
pop
test
test
mov
xchg
dec
mov
loop
pop
movs
and
or
dec
pop
mov
sbb
retf
or
xor
dec
sbb
xor
sbb
dec
xor
test
int
push
mov
loope
dec
arpl
jecxz
mov
cdq
aaa
mov
jecxz
int
jecxz
mov
addr16
or
or
xor
clc
(bad)
icebp
daa
jle
je
test
ficom
push
int
div
xor
push
cmp
mov
xor
or
sbb
dec
dec
int
or
movs
inc
sub
int
dec
dec
int
or
and
lahf
xor
mov
ror
mov
xchg
xor
xor
or
int
test
jecxz
mov
mov
sbb
mov
xchg
jb
xor
or
movs
js
or
dec
pop
push
mov
retf
or
mov
sbb
icebp
(bad)
sbb
dec
push
jmp
retf
aaa
sbb
or
jecxz
mov
loop
mov
dec
fdivr
mov
je
test
out
xor
(bad)
sbb
std
xor
or
int
xor
in
(bad)
mov
lea
icebp
(bad)
sbb
dec
push
jmp
retf
aaa
sbb
or
jecxz
mov
loop
mov
dec
fdivr
leave
dec
fmul
mov
pushf
test
loop
ret
dec
in
mov
and
or
or
xor
or
cmp
fmul
mov
xchg
xor
inc
pop
jmp
dec
in
mov
cmc
mov
cmc
int
or
int3
sbb
sar
mov
enter
int
jb
xor
or
pop
test
jb
xor
or
dec
lock
movs
inc
sub
int
jb
xor
or
and
lahf
xor
add
xor
int3
sbb
mov
fist
mov
xchg
pop
jns
xchg
xor
dec
sbb
mov
dec
clc
dec
or
cmp
or
int
jp
cmp
or
xor
je
leave
xchg
jb
xor
or
xor
adc
pop
mov
jecxz
int
jecxz
mov
je
xchg
(bad)
sbb
mov
dec
fsubr
mov
je
test
out
xor
(bad)
sbb
std
xor
or
int
xor
in
idiv
repnz
icebp
(bad)
sbb
dec
push
jmp
retf
aaa
sbb
or
jecxz
mov
loop
mov
dec
fdivr
mov
je
test
out
xor
(bad)
sbb
std
xor
or
int
xor
test
pop
mov
sbb
leave
or
dec
int
jb
xor
or
dec
sbb
mov
dec
or
xor
hlt
fistp
rcl
inc
or
jecxz
and
ret
xor
pop
dec
repnz
retf
or
mov
sbb
icebp
(bad)
sbb
dec
push
jmp
retf
aaa
sbb
or
jecxz
mov
loop
mov
dec
fdivr
mov
je
test
out
xor
(bad)
sbb
std
xor
or
int
xor
in
add
xor
jle
and
movs
std
dec
int
outs
mov
mov
lahf
mov
js
or
int
je
lds
(bad)
sbb
std
xor
or
int
xor
sub
dec
int
std
dec
int
outs
mov
mov
pop
imul
div
scas
sbb
dec
push
jmp
sbb
or
repz
mov
call
mov
hlt
div
sbb
inc
int
not
cmp
je
enter
nop
ret
xor
pop
push
repz
retf
or
mov
and
movs
std
dec
int
outs
mov
mov
lahf
adc
div
xor
add
sbb
mov
hlt
inc
jne
sbb
inc
int
not
cmp
je
enter
cmp
test
pop
xchg
sbb
retf
or
ret
lock
icebp
(bad)
sbb
dec
push
jmp
retf
aaa
sbb
dec
int
xchg
dec
int
outs
mov
xor
or
(bad)
sbb
mov
dec
fsub
and
ret
xor
pop
iret
lock
retf
or
mov
and
movs
std
dec
int
outs
mov
mov
lahf
mov
js
or
int
je
lds
(bad)
sbb
std
xor
or
int
xor
sbb
dec
int
std
dec
int
outs
mov
mov
lahf
mov
js
or
int
je
lds
(bad)
sbb
std
xor
or
int
xor
jmp
icebp
sbb
icebp
(bad)
sbb
dec
push
jmp
retf
aaa
sbb
or
jecxz
mov
loop
mov
dec
fdivr
lds
or
xor
or
(bad)
sbb
mov
dec
fsub
mov
je
test
out
xor
(bad)
sbb
std
xor
or
int
xor
sbb
or
jecxz
mov
loop
mov
dec
fdivr
mov
je
test
out
xor
(bad)
sbb
std
xor
or
int
xor
imul
fmul
mov
xchg
xor
je
hlt
dec
int
add
fnstsw
test
loop
pop
movs
hlt
sub
int
pop
inc
icebp
sbb
retf
or
cmps
neg
icebp
(bad)
sbb
dec
push
jmp
retf
aaa
sbb
or
jecxz
mov
loop
mov
dec
fdivr
and
shl
xor
pop
mov
sbb
retf
or
push
sbb
icebp
(bad)
sbb
dec
push
jmp
retf
aaa
sbb
or
jecxz
mov
loop
mov
dec
fdivr
leave
cmp
dec
int
jnp
int
dec
inc
int
not
cmp
je
enter
mov
test
test
mov
xchg
dec
mov
loop
pop
movs
and
or
dec
pop
aas
neg
retf
or
cwde
adc
mov
loopne
mov
hlt
jg
int
je
lds
and
jbe
and
jbe
and
sbb
or
imul
dec
inc
cdq
pop
mov
jecxz
mov
dec
xor
pop
iret
cmc
sbb
and
xchg
dec
mov
popf
jecxz
mov
loop
mov
hlt
or
int
or
and
in
dec
int
inc
mov
loop
mov
inc
in
idiv
pop
sub
dec
inc
cdq
sbb
xchg
aad
sbb
lds
mov
mov
sti
jle
xor
(bad)
or
ret
mov
je
xchg
(bad)
sbb
int
loop
mov
hlt
inc
jb
sbb
mov
in
(bad)
cmps
sbb
into
adc
lds
or
int
ja
cmp
or
mov
test
jecxz
dec
mov
and
or
je
xchg
(bad)
sbb
dec
int
ja
push
in
or
int
sub
mov
into
sbb
enter
mov
lahf
xor
rep
add
sbb
or
lock
sbb
push
call
mov
in
(bad)
dec
mov
test
int3
adc
dec
cld
test
mov
mov
xchg
mov
inc
sbb
dec
int
test
xor
xor
xchg
mov
inc
fidiv
dec
pop
add
sbb
ret
cwde
adc
sbb
sbb
mov
dec
pop
jg
sbb
ror
mov
jecxz
call
jmp
test
pusha
or
enter
int3
pop
jle
push
loope
mov
in
mov
(bad)
dec
inc
cdq
(bad)
mov
jecxz
std
ins
loope
mov
in
ror
jb
xor
or
xor
pop
jle
sbb
sbb
xor
or
cdq
push
bnd
inc
push
mov
dec
int3
pop
jle
inc
loope
mov
jmp
jp
sbb
dec
sbb
mov
inc
cdq
arpl
and
test
cdq
push
mov
jecxz
mov
and
dec
pop
ja
sbb
and
sbb
inc
mov
jecxz
and
mov
movs
test
or
je
dec
int
pop
pop
cmp
cmp
mov
sub
dec
cld
fcomp
push
iret
sbb
mov
movs
sbb
dec
int
jb
xor
or
inc
cdq
inc
mov
jecxz
mov
xor
or
pop
loope
mov
test
or
inc
loope
mov
test
or
ins
loope
mov
xchg
jb
xor
or
and
lahf
xor
cdq
imul
adc
dec
cld
fcomp
mov
ins
shl
xor
cmps
mov
inc
in
mov
fstp
jns
or
xor
or
and
hlt
push
cmps
xor
jle
dec
loope
mov
pop
popf
dec
inc
cdq
dec
mov
jecxz
mov
dec
fsubr
shl
jb
xor
or
clc
or
int
xor
and
sbb
cmc
dec
loope
mov
push
pop
mov
jecxz
dec
dec
fucomi
or
sbb
int
loop
mov
hlt
in
xor
scas
lds
or
jne
or
int
xlat
and
jbe
and
xchg
jb
xor
or
cmps
sbb
mov
or
sbb
mov
mov
mov
hlt
dec
jnp
sbb
mov
in
(bad)
xor
lahf
pop
adc
and
cdq
or
addr16
dec
dec
fsub
mov
or
dec
jmp
adc
xor
or
(bad)
sbb
imul
test
(bad)
je
dec
int
pop
and
sbb
enter
mov
sbb
or
(bad)
mov
jl
sbb
cmc
pop
loope
mov
push
test
je
dec
int
jp
xor
or
stc
sbb
and
je
xchg
(bad)
sbb
int
loop
mov
hlt
mov
xor
je
shl
mov
sbb
ins
dec
mov
mul
xor
or
fucomi
das
int
sbb
dec
mov
test
int
jb
xor
or
and
movs
pusha
push
int
add
xor
jle
fwait
hlt
xchg
sbb
dec
xor
pop
mov
sbb
mov
mov
push
jp
sbb
int
loope
mov
adc
(bad)
sbb
mov
xor
or
or
adc
repz
cwde
xchg
adc
and
push
call
dec
mov
xor
(bad)
sbb
ror
jle
xor
xor
(bad)
sbb
ror
jle
xor
sbb
les
xchg
xor
sbb
xchg
xor
inc
jp
or
dec
or
adc
cmp
add
mov
sbb
sbb
ror
sbb
sbb
or
adc
inc
pop
pop
ror
repz
pop
cmps
mov
dec
fdivr
mov
adc
mov
and
jecxz
inc
ret
mov
pop
icebp
dec
lea
cld
sbb
shl
sbb
mov
inc
pop
icebp
dec
ret
mov
pop
out
popf
hlt
(bad)
jns
sbb
inc
jp
or
mov
repnz
jp
or
adc
cmp
pop
mov
mov
cmps
and
dec
lahf
stos
sahf
pop
mul
int
mul
inc
fidiv
xor
test
test
hlt
(bad)
jns
sbb
mov
inc
pop
movhps
xchg
adc
add
(bad)
dec
int
mov
imul
pop
jmp
inc
in
mov
fisttp
lds
mov
sub
(bad)
sub
sbb
lds
pop
mov
dec
jp
or
je
xchg
(bad)
sbb
mov
sbb
ror
aaa
inc
dec
mov
dec
int
add
xor
pop
(bad)
stc
sbb
retf
or
mov
cld
or
jecxz
test
cdq
inc
test
jecxz
(bad)
cld
fdiv
hlt
sub
sbb
lds
pop
mov
dec
jp
or
dec
pop
daa
loop
test
xor
or
or
or
int
xor
fadd
test
jecxz
cmp
int
(bad)
mov
and
jns
inc
test
shr
jecxz
int
pop
fnclex
sbb
sbb
mov
jbe
in
sub
dec
inc
in
idiv
leave
sbb
(bad)
dec
int
cs
add
sbb
xor
lds
pop
imul
retf
or
sbb
and
lahf
xor
jmp
in
jle
movs
push
sub
int
jb
sub
sbb
xor
std
les
movs
std
dec
int
outs
mov
mov
lahf
mov
dec
sbb
mov
dec
pop
mov
sbb
retf
or
repz
sbb
icebp
(bad)
sbb
dec
push
jmp
retf
aaa
sbb
dec
int
xchg
dec
int
outs
mov
int
or
(bad)
sbb
cmc
int
or
int
je
(bad)
ja
int
dec
inc
int
not
cmp
je
enter
cmp
cdq
imul
push
das
test
xor
rcl
cld
or
int
je
(bad)
jnp
sbb
inc
int
not
cmp
je
enter
cmp
cdq
imul
xchg
das
test
das
test
test
mov
out
xor
int
dec
sub
sbb
sar
in
lds
pop
mov
dec
lahf
adc
pop
test
xor
mov
sbb
retf
or
cmp
(bad)
sbb
int
cld
or
(bad)
sbb
int
cld
or
int
je
fst
jb
adc
or
or
inc
jp
sbb
inc
int
not
cmp
je
enter
cmp
cdq
imul
add
test
ret
mov
inc
cdq
imul
ja
test
test
test
mov
out
xor
(bad)
sbb
int
cld
or
int
je
lds
(bad)
sbb
int
cld
or
int
je
lds
jb
adc
or
or
(bad)
jp
sbb
inc
int
not
cmp
je
enter
shr
test
test
mov
xchg
dec
dec
sub
inc
sub
int
dec
dec
sub
or
dec
int
xor
xor
jb
sub
cmp
dec
int
xor
std
(bad)
dec
int
std
dec
int
outs
mov
mov
lahf
mov
dec
sbb
mov
dec
pop
mov
sbb
retf
or
add
pop
test
xor
cld
sbb
retf
or
mov
and
movs
std
dec
int
outs
mov
mov
lahf
mov
dec
sbb
mov
dec
pop
idiv
sbb
retf
or
push
adc
lds
pop
mov
dec
pop
jecxz
sbb
retf
or
das
cld
sbb
icebp
(bad)
sbb
dec
push
jmp
retf
aaa
sbb
or
xchg
jb
sub
cdq
(bad)
dec
int
xor
jmp
rcl
sbb
xchg
jb
sub
and
dec
int
xor
add
dec
int
std
dec
int
outs
mov
mov
lahf
mov
dec
sbb
mov
dec
pop
jae
sbb
retf
or
dec
adc
lds
pop
mov
dec
pop
outs
cld
sbb
retf
or
stos
std
sbb
icebp
(bad)
sbb
dec
push
jmp
retf
aaa
sbb
or
xchg
jb
sub
sbb
xor
and
ror
mov
xchg
xor
je
hlt
dec
int
add
fnstsw
test
jecxz
pop
movs
or
or
xchg
dec
dec
sub
add
pop
and
movs
std
dec
int
outs
mov
mov
lahf
mov
dec
sbb
mov
dec
pop
sar
sbb
retf
or
xchg
adc
lds
pop
mov
dec
pop
iret
std
sbb
retf
or
cmps
jg
test
movs
std
dec
int
outs
mov
mov
lahf
mov
dec
sbb
mov
dec
pop
adc
sbb
retf
or
pop
std
sbb
icebp
(bad)
sbb
dec
push
jmp
retf
aaa
sbb
dec
int
xchg
dec
int
outs
mov
int
or
(bad)
sbb
cmc
int
or
int
je
fnsave
(bad)
sbb
int
cld
or
int
je
lds
and
jbe
and
jbe
and
sbb
or
sbb
int
ret
or
int
jp
int
or
int
popf
dec
inc
mov
mov
test
jecxz
mov
loopne
mov
hlt
adc
or
xor
or
int
aaa
or
sbb
in
jle
xchg
inc
lods
or
lock
int
movs
push
call
mov
sti
jle
dec
out
mov
(bad)
loope
mov
sub
or
stos
inc
sahf
hlt
push
fs
jl
lds
(bad)
fdiv
jecxz
shl
or
xor
test
sbb
jo
jecxz
leave
or
ret
je
sahf
(bad)
sbb
aas
out
test
xor
and
xchg
jb
xor
or
and
je
dec
int
jp
jns
or
(bad)
sbb
cld
adc
and
sbb
enter
mov
lahf
xor
clc
int3
pusha
push
test
xchg
jb
xor
or
inc
cdq
inc
mov
jecxz
mov
inc
in
mov
fisttp
std
ins
loope
mov
xchg
jb
xor
or
and
lahf
xor
clc
int3
mov
mov
jb
xor
or
and
xchg
jb
xor
or
inc
cdq
or
pop
xor
dec
and
xchg
jb
xor
or
xor
jbe
and
xchg
jb
xor
or
and
lahf
xor
loopne
int
xor
jne
or
or
test
je
push
loope
mov
push
pop
mov
jecxz
dec
dec
fild
int
loop
mov
hlt
in
scas
xor
scas
lds
or
jne
or
int
xlat
and
jbe
and
xchg
jb
xor
or
cmps
sbb
mov
sbb
inc
or
sbb
mov
mov
mov
hlt
aaa
popa
int
jle
int3
in
(bad)
xor
lahf
pop
adc
and
cdq
or
jg
test
arpl
xor
dec
fild
int
loop
mov
je
xchg
(bad)
sbb
arpl
sbb
ror
aaa
cmp
int
pop
cmp
sbb
enter
mov
sbb
or
(bad)
jmp
movs
sbb
dec
int
cmps
(bad)
int
jle
in
jle
movs
sbb
dec
int
jb
xor
or
fwait
hlt
aas
(bad)
int
popf
dec
movs
jbe
or
xchg
jb
xor
or
and
lahf
xor
or
adc
int
test
xor
jge
or
or
sbb
and
jecxz
fdiv
jecxz
lds
or
xor
in
test
int
jb
xor
or
xor
pop
add
jecxz
ror
inc
fdiv
jecxz
mov
movs
pop
sub
int
jmp
int
cmps
and
shl
int
je
fst
cld
xchg
(bad)
sbb
mov
sbb
ret
push
or
xor
xor
ds
or
pop
loope
mov
sub
mov
lahf
xor
jl
push
loope
mov
hlt
les
fwait
jecxz
fdiv
jecxz
mov
dec
fdivr
leave
and
pushf
dec
int
pop
dec
in
test
int
jb
xor
or
and
xchg
cmovns
jecxz
in
xor
or
xor
pop
push
in
test
xor
icebp
leave
cmp
xchg
dec
int
test
dec
cwde
xchg
adc
and
push
call
imul
fimul
xchg
mov
xor
mov
inc
dec
pextrw
cdq
push
out
cmps
pop
pop
xor
sbb
ror
mov
dec
jne
mov
ror
xlat
popa
int
or
int3
dec
pop
dec
jmp
dec
int
mov
popf
jbe
push
movs
mov
or
jbe
and
hlt
out
int
jle
cmps
jecxz
mov
inc
in
scas
inc
pop
pop
ror
mov
popf
dec
pop
or
sbb
push
and
xchg
mov
xchg
inc
lods
or
sbb
dec
int
arpl
sbb
pop
jb
mov
jmp
xor
sbb
and
jecxz
inc
and
xchg
xor
xor
adc
aaa
mov
int
jp
int3
in
or
in
mul
int3
jecxz
inc
inc
cdq
idiv
mov
sti
jne
jecxz
dec
mov
push
jbe
sar
dec
cmps
push
mov
dec
inc
ficomp
xchg
inc
mov
adc
push
dec
jmp
xor
sbb
(bad)
dec
es
dec
shl
and
popf
add
sbb
lds
je
dec
int
or
mov
fimul
adc
xor
or
cmp
out
test
cmp
movs
pop
test
ret
pop
mul
stos
jecxz
mov
stos
mov
dec
in
xor
inc
mov
adc
push
movs
movs
push
inc
int
add
or
and
jbe
and
jbe
and
jbe
and
jbe
and
test
sbb
dec
int
xor
mov
cli
jle
xor
dec
popf
js
sub
(bad)
sbb
(bad)
in
mul
int3
dec
popf
js
sub
aad
sbb
aaa
in
mul
int3
dec
popf
js
sub
(bad)
sbb
daa
in
mul
int3
dec
popf
js
sub
xlat
mov
pop
in
mul
int3
dec
popf
js
sub
fisttp
sbb
leave
and
neg
cmps
sub
jge
xor
int
neg
cmps
sub
jge
xor
int
neg
cmps
sub
jge
mov
fisttp
jbe
pop
cmps
sub
jge
mov
fisttp
xchg
pop
jns
xchg
xor
int3
dec
popf
js
sub
ror
mul
int3
dec
popf
js
sub
aad
sbb
stos
jmp
js
sub
(bad)
sbb
fwait
jmp
js
sub
(bad)
sbb
mov
sbb
lock
test
xchg
xor
xchg
aad
pop
jb
jmp
sbb
sbb
and
jecxz
mov
mov
test
je
iret
lea
aad
sbb
jae
sbb
and
jecxz
enter
mov
outs
and
int
out
lea
jmp
jmp
dec
int
or
int
movd
sbb
ins
push
pop
mul
fstp
or
xor
int
or
int
and
sbb
dec
pop
pop
mul
fstp
or
mov
dec
int
or
int
inc
outs
int
push
xor
and
fwait
mov
cmps
loopne
jge
xor
int
or
int
jnp
int
push
fs
pop
mul
fstp
or
xor
int
vmwrite
jecxz
int3
ins
pop
mul
outs
add
int
out
lea
jmp
jmp
not
push
dec
jle
dec
lock
call
cmps
adc
test
jecxz
inc
and
xchg
xor
and
mov
fwait
hlt
je
xor
je
fnstsw
popf
dec
popf
hlt
(bad)
outs
int
jbe
mov
test
hlt
fwait
ins
int
popf
dec
xor
ret
xlat
mov
mov
pop
add
inc
pop
packsswb
jbe
and
sbb
sbb
je
xchg
(bad)
sbb
dec
iret
sbb
mov
outs
pop
push
or
jbe
mov
sub
int
neg
cmps
and
aaa
mov
dec
hlt
xchg
sbb
sbb
enter
xchg
(bad)
sbb
xchg
push
pop
mul
int
jmp
sbb
dec
push
pop
test
or
mov
sub
int
div
int
addr16
int
jl
xor
hlt
xchg
sbb
adc
sub
push
pop
mul
int
xor
sbb
sub
mul
int
cmc
and
jbe
and
jbe
and
jbe
and
je
dec
int
popf
dec
cmps
sbb
inc
cmps
or
dec
jmp
test
cmps
sub
jge
xor
int
div
int
div
int
out
sti
push
test
sbb
dec
popf
je
xchg
(bad)
sbb
xchg
push
pop
mul
int
scas
ins
int
push
xor
pop
test
int
div
int
div
int
out
out
push
test
sbb
dec
popf
je
xchg
(bad)
sbb
xchg
push
pop
mul
int
jmp
int
push
call
int
ret
pop
mul
int
ret
pop
mul
fnsave
int
lahf
call
in
test
pop
mul
pop
(bad)
mov
cmps
sbb
stos
jmp
xor
stc
xor
mov
xor
sbb
and
test
sbb
and
mov
movs
(bad)
sub
int
mul
outs
or
int
div
int
div
int
xchg
and
sbb
pop
movs
pop
test
(bad)
sbb
int
pop
mul
int
sub
mov
or
lea
movs
pop
test
pop
jnp
sbb
and
sbb
or
sbb
mov
hlt
push
int
jmp
int
popf
dec
xor
ret
xlat
mov
call
int3
sbb
and
je
dec
int
popf
xor
je
xchg
(bad)
sbb
int
pop
mul
int
sti
ins
int
push
enter
leave
or
dec
int
div
int
div
int
fisttp
sbb
je
mov
dec
int
pop
dec
int
lahf
dec
int
cmps
and
ret
mov
movs
cdq
sub
mov
outs
xor
int
fnsave
xor
ret
xlat
mov
call
cmps
daa
lahf
scas
int
mul
movs
sbb
test
sbb
xchg
push
pop
mul
int
jnp
int
push
fsubr
test
mov
jle
cmps
sbb
jge
xor
mov
leave
int
mul
xor
dec
movs
or
dec
int
test
pop
mul
pop
(bad)
mov
cmps
sbb
pmaxsw
jmp
mov
or
xor
mov
das
movs
add
dec
int
xor
int
lahf
dec
int
cmps
and
(bad)
sub
int
mul
outs
sub
or
jbe
mov
sub
int
div
int
out
xor
dec
movs
sub
xchg
and
sbb
sbb
je
xchg
(bad)
sbb
dec
and
mov
popf
dec
xor
ret
xlat
mov
call
cmps
dec
lahf
add
sbb
and
test
je
xchg
(bad)
sbb
xchg
push
pop
mul
int
imul
push
fsubr
mul
int
ret
pop
mul
int
ret
pop
mul
aad
fisttp
sbb
fxch
sbb
and
je
dec
dec
dec
lahf
xchg
adc
and
(bad)
mov
movs
sbb
dec
int
xchg
push
sbb
int3
ins
pop
mul
int
ret
pop
mul
int
ret
pop
mul
aad
jne
int
lahf
mov
sbb
and
je
dec
dec
dec
lahf
fsubr
mul
int3
(bad)
mov
movs
sbb
dec
int
shr
sbb
push
pop
pop
test
or
mov
sub
int
div
int
out
and
je
dec
int
popf
pop
movs
sbb
enter
xchg
(bad)
sbb
dec
pop
pop
mul
int
test
mov
popf
dec
xor
ret
xlat
mov
call
cmps
js
mov
fnstenv
dec
dec
lahf
xchg
adc
and
(bad)
mov
movs
sbb
dec
int
pop
imul
pop
mul
int
ret
pop
mul
int
ret
pop
mul
fidiv
int
lahf
loope
sbb
and
je
dec
dec
dec
lahf
stos
adc
mul
aaa
lds
cmp
sbb
jmp
mov
movzx
xchg
punpcklwd
in
mov
inc
mov
add
pop
jb
popf
scas
rcl
xor
cmp
mov
xor
mov
inc
ficomp
push
and
lahf
xor
adc
or
xchg
punpcklwd
jecxz
inc
push
pop
mul
inc
pop
pop
sbb
sbb
dec
xor
ret
xlat
mov
mov
pop
add
inc
pop
packsswb
jbe
and
sbb
sbb
je
xchg
(bad)
sbb
dec
iret
sbb
mov
outs
pop
push
or
jbe
mov
sub
int
neg
cmps
and
aaa
mov
dec
hlt
xchg
sbb
sbb
enter
xchg
(bad)
sbb
xchg
push
pop
mul
int
imul
push
dec
push
pop
test
int
div
int
div
int
fisttp
sbb
or
dec
hlt
xchg
sbb
adc
sub
push
pop
mul
int
scas
push
ins
pop
mul
int
cmc
and
jbe
and
jbe
and
jbe
and
je
dec
int
popf
dec
cmps
sbb
inc
cmps
or
shr
sbb
ror
neg
cmps
sub
jge
xor
int
div
int
div
int
xchg
and
je
dec
dec
dec
lahf
xchg
adc
and
mov
cmps
sbb
cmps
rcr
jmp
xor
xor
pop
mul
int
mov
int
cmps
mov
movs
imul
dec
xor
pop
aad
sbb
(bad)
sbb
enter
or
sub
dec
movs
push
test
ret
pop
mul
or
push
int3
sbb
mov
hlt
push
int
xchg
push
int
popf
dec
xor
ret
xlat
mov
call
int3
sbb
and
jbe
and
dec
lahf
xchg
adc
and
mov
cmps
sbb
pop
rcr
jmp
mov
div
xor
ret
xlat
mov
call
int3
sbb
and
jbe
and
test
je
xchg
(bad)
sbb
int
pop
mul
int
out
push
int
push
fs
pop
mul
cmps
sbb
jge
xor
mov
leave
int
mul
mov
sbb
dec
int
cmps
and
(bad)
sub
int
mul
outs
push
div
int
div
int
out
stos
je
dec
int
lahf
mov
sbb
and
sbb
sbb
je
xchg
(bad)
sbb
dec
and
mov
dec
mov
sub
popf
dec
xor
ret
xlat
mov
call
movs
loope
dec
int
push
dec
int
popf
sub
sbb
dec
popf
je
xchg
(bad)
sbb
xchg
push
pop
mul
int
stos
push
int
push
mov
int
ret
pop
mul
int
ret
pop
mul
fnsave
and
dec
movs
mov
test
pop
mul
pop
(bad)
mov
cmps
sbb
imul
imul
pop
mov
or
xor
mov
lods
int3
sbb
and
sbb
dec
cmps
add
and
(bad)
sub
int
mul
outs
pusha
push
or
jbe
mov
sub
int
div
int
out
xor
dec
movs
jecxz
dec
int
jmp
sbb
je
xchg
(bad)
sbb
dec
and
mov
popf
dec
xor
ret
xlat
mov
call
movs
sahf
test
je
dec
dec
dec
lahf
fsubr
mul
int3
(bad)
mov
movs
sbb
dec
int
(bad)
push
int
push
push
pop
pop
test
int
div
int
div
int
out
and
jbe
and
je
dec
dec
dec
lahf
xchg
adc
and
(bad)
mov
movs
sbb
dec
int
retf
push
int
push
pusha
push
pop
mul
int
ret
pop
mul
int
ret
pop
mul
aad
xchg
and
sbb
sbb
je
xchg
(bad)
sbb
dec
iret
sbb
mov
outs
cmp
or
jbe
mov
sub
int
div
int
loopne
push
sbb
dec
movs
pop
test
jmp
sbb
je
xchg
(bad)
sbb
dec
and
mov
pop
std
ds
lock
test
xchg
xor
xchg
inc
mov
add
push
call
mov
sti
jle
and
ja
int
popf
dec
cmps
sbb
dec
movs
sbb
dec
dec
jecxz
inc
and
xchg
xor
xor
clc
int3
pop
sbb
dec
cmps
sbb
mov
inc
fbld
dec
dec
jns
dec
or
dec
int
test
mov
jle
inc
pop
pop
sbb
add
inc
pop
or
xor
and
test
dec
movs
sbb
mov
mov
and
popf
dec
xor
and
dec
cs
jecxz
inc
xor
mov
dec
fsubr
ror
popf
dec
cmps
sbb
xor
je
cld
(bad)
sbb
dec
int
ja
mov
or
xor
inc
test
shr
sbb
sbb
sbb
js
mov
dec
repnz
push
int
lahf
jmp
or
aad
mul
je
test
iret
jg
xor
and
mov
inc
cdq
div
sti
add
dec
inc
in
fidivr
xor
sbb
inc
or
xchg
jb
xor
or
and
pushf
mov
cmp
mov
jecxz
mov
dec
popa
or
lahf
pop
jl
test
xor
ficomp
sar
mov
std
lods
mov
inc
cdq
div
add
test
or
test
xor
ficomp
enter
cmp
(bad)
sbb
int
jecxz
mov
hlt
push
pop
int
ja
xor
pop
movs
lahf
inc
or
xchg
jb
xor
or
and
xchg
pop
popa
cmp
jecxz
cmp
(bad)
sbb
int
jecxz
mov
hlt
fwait
pop
int
ja
xor
sbb
inc
or
xchg
jb
xor
or
and
pushf
mov
int3
scas
mov
inc
cdq
div
repz
dec
dec
popa
or
lahf
imul
or
ficomp
enter
cmp
(bad)
sbb
int
jecxz
mov
hlt
out
int
jle
cmp
jle
xor
or
xor
sbb
inc
or
xchg
jb
xor
or
and
jbe
and
je
xchg
(bad)
sbb
add
test
xor
push
pop
mul
movs
daa
cs
je
stc
(bad)
sbb
or
mul
movs
(bad)
inc
int
pop
push
int
je
in
pop
mov
xor
or
or
shl
add
repz
cwde
xchg
adc
fwait
dec
jl
lds
jle
in
jle
inc
jmp
mov
inc
inc
icebp
dec
call
retf
or
mov
hlt
mov
push
xchg
inc
xor
lods
dec
lock
inc
int
movs
push
call
mov
dec
repnz
int
lahf
cmp
test
xor
fistp
mov
je
test
mov
xor
ja
ds
mov
imul
dec
inc
cdq
sbb
xor
test
jecxz
cmp
(bad)
sbb
int
jmp
mov
hlt
adc
sbb
cmc
ds
mov
imul
dec
inc
cdq
sbb
pop
or
dec
jne
out
int
adc
dec
clc
add
jo
movzx
sbb
or
xchg
jb
cmp
or
and
pushf
dec
mov
mov
pop
test
xor
fcomp
enter
mov
sbb
or
xchg
jb
cmp
or
and
pushf
dec
mov
mov
pop
test
xor
fcomp
sar
dec
mov
mov
pop
test
xor
fcomp
enter
mov
adc
inc
or
xchg
jb
cmp
or
and
pushf
dec
mov
mov
pop
test
xor
fstp
enter
mov
pop
sbb
inc
or
xchg
jb
cmp
or
and
xchg
pop
mov
cmp
or
or
inc
mov
pop
test
xor
fstp
enter
mov
adc
or
xchg
jb
cmp
or
and
pushf
dec
mov
mov
pop
test
xor
fstp
and
cdq
sbb
fyl2x
or
inc
cdq
sub
movs
ins
push
or
je
cli
(bad)
sbb
mov
jecxz
retf
or
int
jmp
mov
mov
lds
lahf
dec
mov
ret
dec
int
jbe
dec
pop
test
cdq
das
mov
in
jle
cld
(bad)
popf
dec
movs
ins
push
or
hlt
mov
xor
je
lds
or
adc
iret
sbb
mov
dec
mov
test
pushf
dec
mov
jecxz
jb
cdq
int3
dec
int
ja
xor
or
int3
sbb
mov
or
stc
sbb
mov
cmp
or
or
or
movs
sub
or
xchg
jb
xor
or
and
lahf
xor
cmpxchg
jecxz
cmp
hlt
mov
int
dec
mov
xchg
sbb
mov
xor
fiadd
or
cmc
xor
fwait
mov
jne
xor
dec
movs
ss
xchg
jb
xor
or
and
xchg
pop
popa
cmp
mov
cs
xchg
jb
xor
in
dec
int
xor
push
lahf
dec
leave
sbb
lds
movzx
dec
pop
imul
div
jle
test
jmp
mov
fidivr
xor
or
(bad)
sbb
int
loop
mov
hlt
dec
pop
int
lahf
dec
adc
test
xor
ficomp
retf
or
jp
xor
or
int
jp
xor
or
inc
cdq
or
aaa
les
mov
jecxz
mov
dec
fsub
and
xchg
jb
xor
mov
mul
cmp
mov
inc
cdq
or
or
inc
or
sbb
lds
or
popf
hlt
sub
sbb
ror
mov
xchg
pop
mov
cmp
or
or
or
call
xor
mov
int
adc
xor
or
int
je
fnsave
(bad)
sbb
int
loop
mov
hlt
ret
pop
int
jp
xor
or
int
jle
sbb
or
sbb
or
xor
or
or
int
jmp
mov
cwde
repnz
jecxz
dec
adc
lds
jmp
mov
mov
hlt
aas
sbb
pop
mov
cmp
or
or
inc
mov
jecxz
lds
or
adc
loopne
mov
dec
pop
aaa
fistp
retf
or
int
in
mov
hlt
xor
sbb
int
jmp
mov
mov
mov
dec
inc
mov
jp
retf
and
sbb
int
in
mov
jmp
xor
or
xor
or
or
mov
mov
mov
mov
xchg
mov
dec
pop
sbb
sbb
lds
movzx
dec
popf
dec
xor
lahf
stos
mov
jbe
mov
popf
hlt
and
sbb
int
loopne
mov
dec
or
and
or
xor
dec
xor
or
and
or
int
sbb
sbb
and
sub
dec
int
push
in
jecxz
pop
xchg
inc
ds
sbb
shr
xchg
pop
int
pop
repz
sbb
loope
rcl
arpl
(bad)
sbb
dec
movs
sbb
xlat
pop
int
jle
imul
sbb
pop
int
popf
dec
and
inc
jbe
push
and
dec
inc
pop
(bad)
jmp
xor
mov
dec
int
jle
cmp
jle
jns
or
push
pop
mul
movs
jecxz
dec
int
addr16
fcomp
mov
popf
hlt
xlat
pop
int
jbe
push
cmp
dec
movs
sbb
dec
int
jb
and
or
xor
mov
cmps
sbb
test
xor
push
jecxz
retf
or
mov
sbb
inc
dec
add
dec
int
repnz
pop
test
sbb
dec
mov
fist
jmp
sbb
repnz
push
xchg
pop
pushf
xchg
ss
or
call
adc
(bad)
mov
sbb
and
or
sub
cmp
sbb
inc
jnp
inc
movs
xor
dec
fwait
cmp
inc
fld
mov
xor
fiadd
or
jg
lock
jb
and
or
cdq
inc
movs
xor
retf
inc
mov
push
pop
movs
xor
mul
inc
fiadd
mov
imul
mov
das
xor
addr16
or
and
or
movs
mov
int
cmp
push
lock
int
jbe
mov
test
lock
and
or
and
xchg
jb
and
or
and
xchg
jb
and
or
and
lahf
xor
sbb
int
lock
int
popf
dec
and
popf
add
jmp
mul
jo
mov
movs
mov
int
xor
push
pop
mul
inc
mov
jp
leave
retf
je
test
test
or
je
jmp
adc
mov
in
int
das
popa
adc
xor
mov
xchg
ret
pop
div
rcr
dec
ds
and
mov
movs
mov
int
xor
pop
pop
mul
inc
mov
jp
dec
retf
je
test
mov
addr16
adc
xor
int
xor
inc
mov
jp
or
mov
je
test
xor
mul
int
repz
jbe
and
sbb
or
hlt
outs
inc
int
jle
jns
cmc
and
jbe
sbb
(bad)
dec
inc
pop
dec
sbb
inc
cmps
xor
cmps
mov
inc
xchg
inc
cmps
xor
je
xor
int3
sbb
mov
sbb
cmp
jo
sbb
jns
sub
sbb
dec
inc
pop
dec
sbb
pop
div
ret
leave
add
lock
test
cdq
inc
cmps
xor
cmps
mov
inc
xchg
inc
cmps
xor
je
xor
int3
sbb
mov
sbb
cmp
jo
sbb
jns
jae
int
popf
dec
inc
pop
dec
sbb
pop
div
ret
mov
test
inc
ret
sbb
lock
dec
cmp
jle
jge
or
xor
jle
inc
sbb
xchg
(bad)
sbb
or
mov
or
mov
test
mov
mul
int
dec
inc
int
jle
sbb
int
popf
dec
and
xchg
mov
dec
mul
dec
int
xor
int
mul
inc
pop
das
(bad)
dec
int
jle
in
jle
or
dec
int
test
jno
pop
fcmovnb
sbb
and
jecxz
jl
pop
mul
int
mul
int
mul
int
mul
int
cmp
or
je
xchg
(bad)
sbb
dec
and
mov
lahf
fdivr
mul
int
mul
cmps
sbb
jmp
pop
cmp
sbb
jne
sbb
enter
fst
adc
dec
movs
bound
or
dec
pop
outs
rcr
dec
mov
mov
popf
sbb
ficomp
mov
cmps
sbb
sbb
and
or
test
push
xchg
jb
and
or
inc
cdq
pop
cmps
xor
cmps
and
gs
or
je
cld
(bad)
sbb
dec
int
ja
inc
mov
mov
fsubr
inc
or
jo
or
sbb
dec
mov
sbb
dec
and
xchg
das
popa
adc
mov
mov
dec
popf
dec
cmps
sbb
movs
mov
jbe
mov
popf
hlt
jg
int
jp
repnz
int
call
dec
cmps
sbb
cmps
rcr
and
jbe
and
sbb
or
xor
int
out
lds
adc
dec
dec
(bad)
je
sbb
or
ret
sbb
and
jbe
and
xchg
mov
popf
hlt
mov
mov
aad
pop
int
jle
dec
lock
dec
int
movs
push
call
(bad)
dec
inc
pop
sti
retf
xor
sbb
je
iret
adc
int3
sbb
mov
lock
jae
iret
sbb
jne
sbb
retf
sbb
inc
inc
mov
dec
int
iret
dec
int
clc
int3
mov
test
lahf
retf
pop
test
sbb
mov
clc
je
or
hlt
enter
jle
and
or
inc
fistp
mov
lock
xor
je
fst
or
dec
les
mov
dec
or
and
or
aaa
inc
dec
cdq
test
jecxz
sbb
sub
mov
or
cld
or
xor
or
and
loope
mov
mov
mov
jecxz
cwde
mov
loope
mov
cdq
sub
leave
xchg
bound
ror
mov
and
test
clc
or
xor
or
inc
cdq
pop
mov
jecxz
int
loope
mov
jbe
and
jecxz
or
pop
mul
dec
jmp
inc
int
je
test
adc
retf
jmp
outs
je
or
popf
add
sbb
retf
call
sbb
jne
test
dec
int
lock
inc
ja
mov
adc
retf
mov
je
or
hlt
mov
mov
test
fist
push
pop
div
adc
int
sbb
dec
cmps
sbb
dec
rcr
xchg
sbb
dec
ins
sbb
or
and
or
int
dec
push
loopne
idiv
xor
or
or
ret
sbb
or
xor
or
cmp
int
repnz
idiv
daa
repnz
pop
idiv
daa
bnd
pop
idiv
daa
repnz
loope
repnz
idiv
daa
repnz
pop
idiv
daa
bnd
fldenv
repnz
push
pop
idiv
daa
repnz
push
pop
test
jbe
mov
or
stos
rcr
dec
in
mov
daa
repnz
pop
idiv
pop
idiv
pop
idiv
fstp
cmp
int
lahf
mov
jecxz
mov
or
xlat
rcr
loopne
test
loope
mov
(bad)
loope
mov
lahf
push
test
jecxz
dec
inc
cdq
sub
inc
adc
dec
inc
cdq
pop
mov
jecxz
(bad)
dec
and
icebp
dec
int
punpcklwd
sbb
dec
inc
cdq
div
clc
hlt
push
int
sbb
sbb
cmc
int3
jecxz
mov
imul
and
sbb
pop
(bad)
sbb
mov
hlt
push
int
repz
int
push
mov
xor
xchg
jb
xor
or
dec
jmp
jb
xor
or
and
inc
dec
xchg
dec
int
or
sbb
int
jecxz
mov
jecxz
int3
ins
pop
mul
inc
xchg
div
xor
int3
sbb
mov
in
cmp
jbe
and
xor
mov
dec
fdivr
jne
jecxz
dec
mov
sbb
jnp
pop
mul
int
aas
inc
int
or
mov
std
dec
int
nop
dec
int
dec
into
lock
mov
xor
or
or
or
inc
cdq
add
loopne
mov
inc
cdq
add
dec
adc
dec
dec
fsub
and
sbb
dec
inc
cdq
div
clc
add
int
sbb
sbb
cmc
int3
jecxz
mov
imul
and
les
pop
(bad)
sbb
mov
add
int
repz
int
push
mov
inc
sbb
aas
mov
pushf
retf
dec
int
push
retf
xor
sbb
dec
movs
sti
and
int
mul
xor
jmp
lea
xchg
sbb
mov
or
mul
int
or
xor
or
repz
(bad)
xlat
and
jbe
and
retf
mov
cmps
sbb
stos
les
mov
add
int
addr16
int
push
retf
test
xor
or
inc
in
mov
fstp
int3
jecxz
mov
xchg
jb
xor
or
movs
xor
or
xchg
jb
xor
or
and
lahf
xor
jecxz
dec
int
jb
xor
or
xor
ja
(bad)
sbb
mov
sbb
enter
mov
sbb
push
movs
(bad)
or
jbe
mov
xor
ja
(bad)
sbb
pop
les
mov
dec
repz
int
jp
int3
jecxz
mov
xchg
jb
xor
or
movs
xor
or
xchg
jb
xor
or
and
lahf
xor
jecxz
dec
int
jb
xor
or
xor
fcmovnbe
mov
ffreep
sbb
enter
mov
sbb
push
movs
mov
or
jbe
mov
xor
fcmovnbe
mov
out
sbb
mov
inc
in
mov
fstp
int3
jecxz
mov
xchg
jb
xor
or
movs
mov
jb
xor
or
and
lahf
xor
jecxz
dec
int
jb
xor
or
xor
(bad)
mov
lds
test
xor
push
movs
ja
or
jbe
mov
xor
(bad)
mov
pextrw
sbb
mov
inc
xchg
div
xor
int3
sbb
mov
in
cmp
jbe
and
je
lahf
(bad)
sbb
dec
and
jecxz
pusha
push
pop
mul
and
hlt
dec
int
jb
xor
or
and
dec
or
int3
jecxz
mov
sub
dec
icebp
and
popf
dec
movs
xor
or
jbe
mov
xor
(bad)
mov
fwait
retf
mov
dec
cdq
or
dec
jecxz
mov
and
cmp
popa
xor
sbb
jp
cmp
or
(bad)
sbb
int
loope
mov
hlt
das
inc
int
je
fnsave
int
jp
int3
jecxz
mov
jecxz
push
(bad)
sbb
dec
dec
mov
idiv
int
out
(bad)
sbb
dec
and
jecxz
push
xchg
sbb
dec
and
cmc
dec
int
jb
xor
or
and
dec
or
int3
jecxz
mov
sub
dec
icebp
and
popf
dec
movs
repnz
int
mul
xor
xlat
xlat
mov
push
retf
mov
dec
cdq
or
inc
sbb
aas
mov
pushf
retf
dec
int
push
inc
jnp
or
mov
in
pop
div
dec
jmp
lahf
gs
jmp
pop
inc
les
retf
or
not
xchg
jb
xor
or
dec
hlt
or
int
mul
leave
jbe
and
je
dec
int
lahf
or
mul
inc
cdq
add
cmps
sbb
dec
xor
pop
jmp
sbb
enter
or
sbb
cmovo
(bad)
ror
pop
ja
int3
sbb
mov
fistp
mov
jecxz
sbb
jecxz
mov
pop
sbb
dec
cmps
sbb
int
loope
mov
jbe
and
test
pop
test
jmp
aas
mov
pushf
retf
dec
int
push
and
xchg
bound
popf
xchg
push
xor
or
xor
pop
fcmovne
sbb
and
xchg
jb
xor
or
cmps
push
lahf
mov
js
or
int
or
cmp
or
int
ret
pop
mul
cmps
sbb
dec
cmps
sbb
dec
int
mov
in
mov
dec
int
jb
xor
or
xor
clc
or
xor
or
or
and
jbe
mov
call
inc
dec
int
jp
pop
mov
or
dec
and
dec
mov
sbb
fnstsw
dec
lahf
fsubr
div
xor
add
popf
dec
inc
cdq
pop
mov
jecxz
and
je
sahf
(bad)
sbb
std
cmp
or
int
inc
mov
mov
sbb
dec
int
jle
in
jle
cmps
sbb
or
je
nop
(bad)
sbb
sbb
mul
int3
sbb
enter
mov
lahf
xor
sbb
jge
xor
int
pop
push
int
add
xor
jle
es
sbb
sti
mov
adc
stos
enter
xchg
inc
ds
sbb
shr
sbb
dec
mov
sub
mov
shl
mov
lock
dec
int
jb
int
test
dec
fcomi
dec
int
ret
pop
idiv
push
pop
mul
inc
in
scas
inc
pop
xadd
daa
ret
pop
idiv
ins
pop
mul
imul
ja
(bad)
sbb
inc
xor
fcmovnbe
mov
daa
leave
sbb
jae
xor
int
cld
mov
add
int
stos
dec
int
jle
cmp
jle
cmp
bound
int
cld
mov
xor
or
hlt
mov
int
int3
jge
xor
in
xor
int
ret
pop
idiv
jns
test
xor
push
rcr
dec
mov
mov
hlt
dec
int
inc
xor
in
jle
cld
(bad)
int3
jge
xor
dec
imul
ja
(bad)
sbb
dec
inc
add
xlat
mov
jge
xor
jmp
repz
sbb
jge
mov
push
int
mov
imul
(bad)
mov
dec
inc
add
jge
xor
loope
mov
imul
jae
(bad)
sbb
dec
inc
add
xlat
mov
xchg
mov
jecxz
pop
xor
push
sahf
hlt
or
dec
dec
fcomi
push
int
test
xchg
aad
pop
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
mov
mov
inc
(bad)
out
imul
or
sbb
mov
xchg
mov
(bad)
fadd
mov
in
push
clc
test
aaa
cmp
lahf
punpckhbw
adc
(bad)
fadd
cmp
jbe
mov
cmps
sbb
pop
jae
jecxz
pop
add
scas
leave
and
dec
int
neg
sbb
dec
jmp
sbb
mov
jmp
sbb
sbb
adc
mov
mov
fwait
or
lds
popa
ret
mov
repz
inc
pop
ror
test
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
out
mov
pop
mov
dec
int
or
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
test
call
.byte
dec
int
