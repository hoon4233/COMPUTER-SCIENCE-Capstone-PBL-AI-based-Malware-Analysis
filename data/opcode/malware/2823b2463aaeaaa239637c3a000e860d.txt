mov
int3
xchg
jmp
adc
cmp
jo
jno
inc
jno
push
int3
cmp
jp
xchg
lea
das
div
jae
pop
adc
ds
scas
call
inc
pop
cmp
jp
push
js
call
push
xchg
cmp
int3
scas
(bad)
xchg
mov
push
jno
push
jl
mov
out
jo
(bad)
ds
pop
jg
retf
inc
(bad)
fisubr
scas
jae
jno
pop
jp
int3
outs
mov
call
inc
jo
xchg
push
icebp
jg
adc
mov
out
vmwrite
adc
push
push
dec
call
xor
jae
popf
ds
cmp
and
jns
cmp
sbb
scas
mov
das
call
ins
mov
jl
and
jo
call
retf
popf
sbb
ins
in
outs
xcrypt-ofb
push
ror
jp
jae
mov
push
jae
lea
jp
ins
xor
jo
or
push
scas
xchg
adc
call
ins
mov
push
push
inc
xor
push
(bad)
push
push
(bad)
ins
jmp
inc
inc
adc
push
(bad)
call
or
pop
pop
(bad)
xchg
(bad)
xchg
push
mov
xchg
jge
ins
(bad)
mov
xchg
xor
scas
or
int3
ins
jmp
bound
lea
ins
int3
inc
xchg
jp
xchg
jae
xchg
(bad)
bound
or
push
push
ins
push
push
or
pop
(bad)
push
push
push
int3
inc
jp
inc
pop
adc
xchg
int3
xchg
mov
call
jo
int3
scas
ins
adc
bound
xchg
jp
mov
bound
or
(bad)
(bad)
jmp
scas
push
push
mov
pop
push
(bad)
push
push
jp
jp
ins
adc
(bad)
punpckhdq
add
icebp
js
add
mov
bound
shl
enter
pusha
div
ss
push
mov
push
add
push
dec
cmps
cmps
daa
into
pop
xor
call
push
cmp
inc
retf
cmp
in
jp
add
sub
cmp
retf
jmp
ret
add
adc
pop
jp
adc
pop
pusha
and
cs
adc
and
adc
mov
and
xor
fimul
pusha
bound
loopne
mov
add
test
arpl
mov
mov
and
adc
js
inc
pop
xchg
pop
rcl
and
jns
push
loopne
loope
mov
imul
cmc
push
pop
xor
push
mov
cmp
fldenv
add
mov
fs
inc
cmps
retf
loopne
fld
xchg
and
dec
add
and
pop
pop
and
fnstcw
push
sbb
bound
in
cmp
add
aas
add
jp
xchg
jge
shr
out
cmp
sub
in
push
scas
fisub
and
mov
push
adc
fldenv
adc
jp
fdivr
adc
jae
fld
inc
fcom
adc
pop
push
add
mov
fldenv
popf
adc
adc
xchg
jno
mov
pop
in
jns
call
add
bound
jge
mov
cmp
pop
pop
call
cs
loopne
retf
jp
cmp
sbb
sub
add
dec
push
(bad)
jo
fisttp
jno
dec
xor
xchg
adc
push
mov
mov
push
xchg
inc
sti
dec
xchg
jo
adc
outs
push
dec
fstp
jo
call
adc
xor
add
adc
in
add
cmp
enter
and
int3
dec
xchg
ins
jns
push
shl
xor
jl
es
cmp
bound
es
and
in
adc
inc
and
jae
mov
push
dec
ins
pop
jp
inc
jp
pop
and
jp
mov
cmps
into
retf
daa
xchg
js
mov
mov
ror
bound
jg
push
adc
das
adc
outs
mov
jns
jae
arpl
adc
jo
jns
cmp
push
add
fimul
icebp
or
pop
setae
neg
inc
jg
call
inc
cmp
cmps
bound
retf
call
adc
arpl
scas
xchg
cmp
and
enter
out
lea
jns
jp
xor
inc
xchg
xchg
rol
mov
adc
(bad)
sar
jl
js
inc
bsr
jp
icebp
push
pop
ins
cmps
adc
icebp
jo
mov
scas
push
cs
jp
xor
mov
popf
xchg
out
xchg
ret
jge
mov
sub
rcr
jp
daa
jg
call
dec
cmp
adc
add
jge
mov
call
mov
sbb
retf
and
(bad)
pushf
js
scas
rcl
pop
mov
mov
cmp
rol
mov
into
das
xchg
push
add
push
cmps
scas
push
inc
adc
xchg
mov
js
call
push
call
jg
and
inc
push
mov
es
jno
call
pop
xor
inc
xchg
cmp
xor
adc
push
mov
add
or
aad
sub
jge
jge
mov
retf
mov
out
ret
adc
sbb
daa
push
ins
mov
jp
jmp
jo
push
xchg
bound
push
push
pop
xchg
jp
inc
xor
jo
jp
int3
lea
lea
jo
lea
ins
or
bound
ins
adc
adc
xor
inc
adc
jmp
lea
push
jp
bound
lea
jp
xchg
xor
xor
int3
inc
int3
lea
jo
xor
bound
jo
or
ins
jp
push
ins
inc
bound
punpckhdq
push
lea
lea
int3
xor
pop
jp
int3
int3
bound
jmp
pop
bound
adc
ins
xchg
bound
xor
jmp
or
adc
push
ins
adc
jp
jp
pop
(bad)
call
xchg
bound
push
andnps
adc
jp
pop
pop
int3
pop
lea
bound
xor
lea
ins
outs
enter
dec
jecxz
ds
jns
add
jge
loopne
jns
cmp
into
or
retf
call
add
dec
push
adc
xor
push
(bad)
jns
scas
xchg
into
lea
push
ins
call
(bad)
mov
daa
fisub
ins
int3
xchg
jns
add
jge
(bad)
loopne
adc
inc
add
cs
retf
add
mov
dec
ds
(bad)
jp
scas
pop
and
xchg
inc
retf
xchg
ins
ficom
jne
mov
jl
push
push
loopne
adc
inc
xchg
ins
ss
call
int3
fidivr
adc
jne
out
xchg
xchg
or
mov
js
pop
xchg
dec
jae
jno
push
(bad)
jecxz
cmp
aad
push
ins
in
dec
adc
ins
xor
arpl
push
mov
cmp
pop
or
call
add
enter
jae
push
fidivr
push
call
add
(bad)
jg
sbb
mov
add
xchg
adc
jl
xchg
fidivr
js
mov
jg
int3
(bad)
xor
mov
bound
out
xor
dec
(bad)
xor
mov
call
inc
bsf
int3
icebp
xor
jno
cmp
xor
mov
dec
xchg
push
(bad)
in
icebp
dec
or
jl
loopne
jl
movsx
scas
and
mov
retf
call
pop
jo
xchg
bound
jmp
jns
push
cmp
xchg
jno
(bad)
loopne
jns
xchg
pop
retf
cmp
pop
cmp
mov
das
xor
sbb
jno
cmp
inc
pop
das
call
popf
scas
jmp
call
adc
pop
call
retf
pop
das
xchg
mov
mov
pushf
add
shl
(bad)
jl
push
not
das
dec
int3
enter
idiv
adc
inc
pop
adc
sbb
das
pop
push
(bad)
mov
inc
xor
xchg
adc
scas
retf
jp
jns
ror
aad
jae
mov
jg
inc
and
jo
dec
xchg
inc
cmp
adc
adc
push
pop
jge
ss
xchg
das
in
push
pop
in
popf
add
cmp
cmp
jae
mov
mov
jge
inc
push
jae
pop
jae
call
xchg
mov
sbb
dec
mov
add
mul
into
add
ds
inc
xchg
paddusw
fnstcw
(bad)
push
mov
jge
popf
pop
sbb
bound
enter
adc
in
push
icebp
pop
or
div
call
pop
mov
adc
scas
fisub
ss
into
cmp
outs
cmp
retf
jae
in
xchg
ror
and
pusha
cmp
adc
cmp
and
cs
push
jecxz
call
popf
adc
mov
push
out
xchg
add
sub
pop
pop
cmp
dec
adc
aas
loope
popf
test
jp
movs
add
(bad)
xor
pushf
mov
in
mov
xor
loopne
mov
fs
jp
pusha
add
cmp
or
sti
sub
stc
jae
js
sbb
and
jne
fdivp
mov
daa
or
ins
and
jae
push
movs
mov
aad
mov
xchg
dec
(bad)
xchg
in
inc
adc
cmp
ss
dec
cmp
retf
outs
or
das
popf
mov
fmul
push
jl
bound
and
xchg
cmp
mov
retf
mov
pushf
rcr
push
mov
enter
mov
scas
dec
pop
in
mov
xchg
fs
xor
push
(bad)
loope
sbb
ins
ss
pop
cmp
cmp
ret
xchg
add
into
xor
js
mov
sub
jns
add
ds
out
push
ficomp
ins
movs
and
push
and
icebp
cs
in
xchg
cs
mov
ins
ins
das
in
fcom
and
jl
sti
push
xchg
jl
outs
pop
xchg
ret
push
xchg
dec
push
into
test
mov
into
adc
call
xchg
jns
(bad)
jno
daa
xchg
inc
xchg
mov
pop
fcomp
loopne
xchg
and
test
(bad)
mov
adc
in
cmc
sti
mov
fsubr
mov
(bad)
push
mov
inc
push
in
mov
mov
adc
dec
ss
sbb
(bad)
call
call
pop
cmps
fcom
xchg
popf
adc
das
jge
add
add
sub
in
jne
imul
pop
cs
inc
ds
pop
loopne
push
or
(bad)
jp
js
adc
inc
cmc
xor
outs
pop
adc
xchg
or
push
jns
inc
xchg
fnstcw
sbb
cmp
and
jg
int3
scas
fstp
adc
jns
jp
xchg
jp
jns
inc
or
arpl
ss
jge
adc
xor
xor
xchg
xchg
mov
cmp
mov
inc
and
mov
and
or
and
cmp
jl
adc
xor
dec
mov
fld
out
jae
ss
into
call
mov
jae
ret
jecxz
and
pushf
dec
arpl
outs
call
ss
mov
dec
mov
daa
push
cmp
and
inc
push
dec
icebp
cmp
cmp
mov
adc
ds
ds
in
int3
add
scas
pop
cmp
jg
jl
mov
adc
inc
xchg
into
inc
pop
ds
and
adc
cmp
scas
retf
bound
mov
push
jo
xor
jmp
pop
pop
inc
fmulp
cmps
xchg
jl
enter
jmp
jg
icebp
cmp
(bad)
inc
arpl
push
cmp
xor
cmp
icebp
xor
bound
cmp
cmp
bound
in
popf
bound
jmp
loopne
retf
arpl
mov
scas
jns
mov
xchg
call
cmp
pop
push
cmp
in
mov
arpl
jmp
adc
adc
idiv
jl
jo
js
icebp
pop
scas
pop
jmp
in
cmp
jo
cmp
jae
mov
call
adc
mov
retf
shl
call
pop
retf
sbb
add
fimul
scas
add
mov
jne
loopne
dec
sub
mov
test
lea
and
mov
pop
loope
cmp
and
inc
mov
jge
fnstcw
and
and
jo
jge
jp
pop
sub
adc
retf
mov
mov
in
movs
or
xchg
es
cmps
jmp
jle
dec
push
and
cmp
ror
(bad)
cmp
bound
fcomp
cmps
in
push
jle
add
call
and
arpl
fldcw
xor
sbb
push
ret
and
fidivr
cmps
cmp
pop
shl
lea
cs
movs
add
pop
cmp
jp
dec
xchg
cmp
js
cmc
jo
push
call
loopne
xor
cmp
adc
movs
fidivr
push
retf
outs
cmp
cmps
call
(bad)
es
aad
pusha
cmps
imul
jae
aas
shl
jl
push
jp
and
add
jmp
sar
shr
add
mov
xor
add
xchg
sub
adc
pop
jp
imul
xchg
test
in
and
pushf
push
daa
int3
pop
fisubr
(bad)
mov
imul
push
xchg
test
rcl
adc
dec
jp
mov
ror
sbb
mov
dec
imul
(bad)
or
adc
scas
jl
cs
xor
jp
xchg
xor
dec
cmp
fld
in
lea
jp
push
or
add
daa
inc
xor
xchg
add
and
add
add
add
and
and
test
xor
mov
and
and
inc
add
nop
cmp
mov
or
lar
bound
adc
inc
add
add
sbb
sbb
adc
add
pusha
add
and
shl
add
or
pusha
add
add
add
inc
rcl
pusha
add
repnz
inc
adc
sub
sub
mov
add
add
add
rol
or
add
and
add
dec
push
or
inc
add
add
add
inc
add
and
pusha
inc
ret
add
lock
nop
push
add
sub
mov
add
add
add
adc
dec
and
and
add
add
mov
inc
dec
or
mov
or
or
sub
adc
cmp
add
or
adc
mov
push
add
les
add
push
and
mov
pusha
inc
push
pusha
pop
mov
leave
add
adc
push
adc
or
add
add
add
bound
and
pop
adc
pop
add
and
and
sbb
int3
pushf
adc
and
retf
sub
dec
and
or
enter
push
or
jns
add
inc
inc
push
or
sbb
xor
mov
inc
and
add
int3
add
sbb
and
(bad)
ror
xchg
or
adc
adc
add
outs
mov
pusha
mov
inc
dec
sbb
inc
inc
pusha
dec
add
or
push
pop
adc
add
xchg
sbb
inc
adc
sub
or
add
and
adc
xchg
inc
add
and
es
adc
push
add
mov
add
adc
and
jmp
inc
xor
adc
test
add
inc
and
push
mov
scas
dec
ror
inc
add
jmp
xchg
add
cdq
sub
add
and
add
add
inc
pop
inc
sbb
test
push
and
adc
xchg
adc
and
es
dec
sbb
dec
add
dec
inc
add
(bad)
or
inc
add
add
add
add
push
cwde
call
xchg
or
shl
mov
add
mov
test
add
imul
push
add
aam
or
add
add
test
or
mov
and
sub
test
nop
and
or
push
mov
add
nop
add
add
pushf
inc
sub
nop
mov
test
rcl
add
add
add
add
inc
inc
inc
sbb
add
popa
inc
add
add
cwde
add
inc
adc
add
les
and
adc
jne
inc
sub
sub
or
add
add
inc
add
xchg
sub
inc
add
mov
add
or
or
add
xchg
add
add
sub
mov
pusha
add
mov
add
add
add
jb
xor
pop
add
dec
add
xchg
add
adc
shl
add
push
and
ret
inc
mov
adc
mov
add
xor
mov
add
adc
add
add
inc
mov
inc
inc
inc
test
add
mov
add
retf
or
pop
sbb
add
add
add
adc
or
dec
push
adc
mov
fiadd
add
inc
add
inc
inc
cmp
call
xor
push
test
or
test
call
dec
and
jecxz
inc
nop
add
adc
sbb
and
add
xchg
adc
adc
or
xor
and
add
or
sub
mov
cmps
and
dec
test
dec
add
or
or
les
and
xor
add
and
add
cwde
inc
or
adc
add
add
fld
pusha
push
and
or
test
add
inc
nop
and
adc
adc
inc
inc
add
push
dec
add
mov
add
ret
push
nop
add
and
dec
dec
add
and
and
test
inc
add
inc
test
add
adc
push
and
adc
add
and
adc
inc
cmp
push
sub
in
dec
add
sbb
xor
add
or
shl
adc
push
push
add
sbb
sub
add
add
push
add
xchg
inc
add
adc
or
sbb
mov
mov
dec
add
or
inc
rol
adc
inc
call
inc
add
push
push
add
add
inc
push
cmp
and
xor
adc
or
inc
adc
inc
or
repnz
adc
adc
adc
and
adc
bound
or
cmp
or
nop
enter
mov
push
add
or
sub
adc
inc
add
pusha
dec
adc
add
xchg
or
or
push
adc
adc
in
sub
inc
dec
push
and
adc
push
add
mov
rol
add
pusha
add
add
pusha
pusha
add
inc
adc
add
icebp
push
add
push
or
inc
add
add
xchg
adc
(bad)
loopne
or
sub
inc
mov
or
mov
les
pusha
add
jo
or
add
inc
jno
clc
inc
cmp
int3
inc
add
inc
adc
inc
loopne
and
test
inc
add
inc
and
mov
and
adc
xor
xor
xchg
add
test
adc
add
jno
and
dec
add
sbb
adc
or
mov
inc
mov
(bad)
enter
add
add
loope
sub
inc
adc
sub
loopne
mov
call
mov
nop
or
and
add
sbb
or
enter
add
add
rol
and
add
add
add
(bad)
or
add
or
add
rol
adc
les
push
test
add
dec
or
and
add
push
add
add
mov
push
add
and
rol
add
mov
mov
cmp
ror
adc
add
rcl
rol
mov
inc
inc
xor
or
add
rcl
and
add
add
inc
or
inc
add
push
cmp
add
loop
sbb
dec
nop
mov
nop
or
inc
sbb
adc
xchg
inc
and
adc
and
add
call
add
add
adc
inc
inc
lea
rcl
and
push
mov
mov
xchg
call
int
add
and
adc
inc
add
add
and
and
mov
and
add
loop
mov
adc
adc
sub
add
and
adc
loopne
add
bound
sbb
add
or
add
and
ss
xchg
jae
inc
add
sbb
test
add
adc
mov
or
sbb
bound
nop
or
inc
add
and
or
add
pop
fmul
or
or
cwde
xchg
arpl
add
and
add
mov
pusha
and
or
xchg
add
test
add
or
test
rol
fmul
or
or
imul
adc
sub
add
cwde
movs
sbb
or
aam
add
add
and
lea
xchg
or
adc
call
add
and
or
xor
push
push
xor
bound
inc
jmp
add
ret
test
dec
adc
inc
loope
and
mov
or
add
push
adc
ror
push
rcl
add
push
add
xor
add
add
dec
xor
add
inc
pushf
adc
add
pusha
add
lock
mov
jo
add
push
or
sub
pusha
add
sub
pop
movs
pusha
or
test
add
mov
adc
adc
inc
inc
add
inc
inc
add
mov
cmp
test
mov
add
add
xor
inc
and
jl
sub
and
push
mov
add
adc
push
adc
pop
adc
dec
push
add
inc
push
add
or
add
add
inc
and
nop
jno
or
add
aas
nop
or
cdq
inc
movs
and
sbb
xchg
mov
stos
call
and
cmp
ret
and
pop
add
shr
add
add
xor
mov
rol
or
popa
sbb
inc
aam
or
inc
shl
test
pusha
les
inc
cmp
adc
shl
sub
movs
xchg
dec
and
add
add
ret
add
add
hlt
fcomp
test
add
push
inc
add
adc
add
rol
inc
adc
push
test
shl
enter
mov
mov
dec
test
cmps
dec
adc
mov
add
mov
sbb
adc
xor
add
adc
add
add
cwde
sub
cmp
or
dec
inc
add
adc
inc
pusha
ins
or
cli
sbb
adc
inc
and
cdq
loopne
add
test
add
pop
or
sbb
inc
push
add
inc
or
inc
inc
sub
adc
out
adc
xor
sldt
js
adc
ret
ror
inc
and
and
loope
adc
test
daa
and
nop
or
pop
add
sbb
and
adc
out
dec
add
adc
rol
add
inc
add
push
sub
add
test
pop
and
add
dec
adc
test
and
add
stos
ror
inc
push
add
js
mov
call
and
or
add
movs
pop
xchg
add
jp
add
inc
add
add
and
adc
or
mov
sbb
sub
adc
pusha
mov
sub
jl
or
and
adc
or
xor
add
add
or
push
and
pushf
push
mov
adc
inc
test
adc
and
add
add
sub
or
mov
xor
test
mov
push
add
inc
test
nop
or
and
add
push
or
aam
or
add
push
push
add
and
inc
add
test
inc
adc
add
or
sbb
sub
add
dec
add
and
or
add
inc
adc
or
dec
add
and
add
mov
pusha
add
push
add
push
or
add
sub
or
add
sbb
add
test
adc
dec
add
push
or
add
mov
loopne
mov
adc
test
mov
inc
or
adc
add
adc
nop
or
add
adc
adc
lea
add
inc
adc
add
adc
mov
sbb
and
xchg
add
add
nop
and
dec
inc
adc
push
mov
mov
inc
add
or
add
xor
lock
add
add
or
and
inc
add
sub
sbb
sbb
and
mov
add
add
mov
or
test
rol
adc
or
xor
adc
xor
add
pop
add
adc
test
inc
and
and
adc
xor
and
or
adc
sub
push
and
add
adc
and
inc
inc
or
dec
pusha
and
push
or
or
adc
test
dec
adc
cmp
rol
add
sbb
xor
add
add
add
rcl
and
inc
clc
add
and
add
mov
pusha
xchg
xor
adc
add
dec
add
add
adc
add
cli
test
xchg
add
adc
and
add
inc
add
adc
add
test
and
retf
inc
add
or
pop
call
add
and
mov
dec
inc
or
push
or
lock
inc
add
dec
mov
add
sbb
sub
add
add
push
pop
rcl
add
add
lea
add
pusha
add
add
sub
add
or
push
jle
adc
shl
pusha
inc
jo
push
mov
sub
add
and
pop
shr
or
push
sbb
add
and
push
adc
adc
inc
stos
add
add
and
dec
add
inc
je
sub
and
mov
add
jb
adc
or
mov
and
and
cwde
mov
and
and
or
xor
inc
popa
add
js
adc
jo
dec
add
add
inc
adc
popa
ins
add
add
or
adc
push
add
or
dec
add
add
xor
sub
ret
add
and
and
rcr
inc
or
add
inc
sub
add
add
adc
rol
rol
push
ret
mov
add
and
adc
xor
pop
inc
adc
xchg
inc
add
pusha
add
add
bound
mov
inc
syscall
sub
adc
adc
inc
push
clc
or
add
js
and
add
add
inc
add
mov
cld
daa
inc
add
add
inc
inc
add
xchg
and
sub
xor
sub
inc
add
add
adc
and
or
adc
add
mov
push
add
or
adc
mov
adc
fild
pop
sbb
adc
stos
push
or
and
ret
or
dec
inc
dec
add
add
gs
add
test
add
add
inc
or
rol
adc
popa
dec
sub
mov
test
cwde
sub
inc
inc
or
sub
mov
add
add
inc
add
adc
xor
xchg
and
push
and
inc
mov
or
pushf
add
enter
adc
add
dec
add
add
popa
or
or
add
push
inc
lds
and
sub
sbb
add
adc
inc
mov
mov
adc
or
ror
sbb
adc
mov
add
add
inc
add
adc
inc
adc
push
or
pop
ficom
test
push
inc
add
popa
inc
arpl
sbb
sbb
add
sub
add
or
push
or
or
or
inc
add
mov
inc
add
sub
add
mov
push
xor
push
pop
or
or
or
and
dec
adc
or
adc
add
add
pusha
mov
adc
loopne
test
cmps
adc
enter
call
inc
add
and
xor
pop
add
test
add
xor
or
add
rol
dec
inc
stos
push
inc
add
xor
or
or
rcl
jb
push
xor
mov
and
mov
and
adc
add
or
add
rcl
add
mov
mov
add
adc
popa
inc
add
and
push
add
and
inc
and
add
popa
add
inc
add
inc
call
sbb
adc
add
add
adc
adc
mov
dec
and
inc
test
and
sub
push
add
add
push
or
cmp
and
push
inc
inc
add
or
mov
add
adc
adc
mov
adc
add
or
add
push
or
push
add
add
call
add
adc
and
sbb
xor
dec
lds
and
add
xor
adc
add
push
call
xor
rol
adc
cdq
push
or
mov
popa
and
push
adc
test
inc
push
bound
bound
add
add
sub
add
and
or
mov
push
xchg
popaw
mov
add
add
inc
stos
xor
add
add
adc
add
les
and
jmp
add
sub
pusha
dec
sbb
add
add
sbb
adc
or
xchg
add
or
or
push
sub
sbb
and
nop
add
call
add
mov
add
mov
inc
add
add
add
adc
add
retf
and
or
call
and
dec
xchg
cmp
dec
mov
cmp
sub
adc
sub
and
and
pop
add
or
test
add
or
push
dec
adc
add
or
xchg
rol
or
and
and
and
ret
add
ins
rol
xor
inc
sbb
add
push
jo
adc
mov
add
add
add
or
add
and
mov
dec
add
add
pushf
add
and
add
adc
mov
icebp
nop
sbb
add
add
or
add
add
inc
add
and
out
call
nop
sub
cmp
push
add
push
mov
inc
add
and
mov
loopne
or
and
inc
sub
pop
add
ficom
push
inc
adc
rcl
or
lods
adc
and
dec
jno
jns
ret
adc
inc
loopne
sbb
ror
or
add
inc
add
add
sbb
inc
or
inc
inc
pop
add
push
or
inc
sub
add
or
rol
adc
or
sub
or
inc
adc
inc
add
add
add
inc
test
inc
mov
rcl
inc
or
add
xor
xor
or
add
imul
add
mov
xor
in
nop
inc
add
add
adc
add
add
and
enter
and
xor
add
sub
add
sub
sbb
sbb
add
cmp
or
inc
push
mov
push
adc
adc
add
add
(bad)
mov
add
xchg
mov
es
adc
pusha
push
mov
add
add
sbb
push
pop
inc
push
mov
add
adc
arpl
add
fs
mov
add
add
sbb
xchg
dec
jae
shl
add
inc
nop
add
add
js
test
rol
add
mov
cs
pusha
ror
inc
or
jmp
add
test
add
push
inc
add
ret
and
adc
fld
fadd
xor
add
test
add
inc
push
adc
rol
bound
add
inc
arpl
adc
add
rol
add
add
add
add
add
xchg
and
or
lea
adc
add
inc
hlt
adc
add
sbb
or
cwde
nop
and
push
add
adc
push
sub
xor
adc
or
or
xor
add
or
push
test
add
or
and
add
nop
test
ret
inc
add
rol
add
add
add
jb
add
and
inc
adc
ror
add
xchg
add
mov
add
cmp
xor
or
adc
add
add
xor
sbb
and
add
add
mov
push
adc
or
adc
sub
jle
or
adc
add
rol
or
add
adc
add
adc
add
test
xchg
mov
add
add
test
or
ret
or
adc
inc
or
and
push
and
add
aad
or
and
sub
xor
inc
test
rol
dec
add
add
nop
inc
add
loope
nop
dec
add
sub
add
xor
inc
dec
push
add
push
enter
or
add
add
mov
loope
add
test
add
mov
add
test
and
or
add
add
cmp
add
add
ret
or
add
lods
add
or
add
and
add
add
add
add
or
xchg
adc
add
push
inc
adc
add
and
add
push
push
loopne
or
xor
adc
adc
inc
sub
sbb
add
ret
add
and
add
add
inc
cmps
push
rcr
or
movs
add
in
xor
inc
inc
adc
add
add
inc
mov
add
inc
inc
arpl
xor
add
adc
dec
or
adc
cmp
add
add
retf
(bad)
test
add
sbb
movs
sbb
or
inc
add
add
xchg
cmp
xchg
enter
and
add
push
es
or
xchg
add
add
int
xor
add
or
dec
push
add
loopne
adc
adc
push
adc
sbb
inc
sub
add
jo
or
mov
add
add
mov
add
add
add
add
mov
popa
add
sbb
add
pop
mov
xor
add
mov
mov
adc
add
cmp
inc
out
inc
push
sbb
add
push
cmp
sbb
or
or
or
add
pop
or
add
inc
inc
adc
sbb
dec
adc
ret
push
sub
push
sbb
adc
rol
aam
add
and
add
push
add
adc
mov
sbb
inc
adc
add
add
xchg
inc
add
add
dec
add
sbb
adc
mov
or
mov
cwde
adc
or
sub
cs
and
adc
add
adc
xor
dec
and
stos
mov
add
push
add
sbb
mov
inc
and
pusha
and
or
add
inc
es
mov
add
sub
and
cmp
and
add
and
or
and
jo
adc
adc
add
adc
inc
add
and
dec
add
sbb
add
or
inc
and
push
and
dec
push
inc
lea
add
xchg
inc
or
and
sub
add
or
adc
popa
inc
push
push
or
and
add
and
or
adc
inc
add
dec
add
adc
or
or
nop
inc
inc
add
xor
and
inc
lods
add
mov
or
adc
add
sbb
enter
add
and
add
adc
add
sub
add
add
or
sub
add
add
add
nop
rcl
adc
add
adc
push
add
add
sub
adc
add
dec
sub
lods
adc
enter
pusha
adc
or
inc
and
adc
or
inc
cdq
adc
inc
add
or
xor
sub
test
add
mov
xor
add
pusha
pop
pop
add
and
add
push
and
mov
dec
adc
adc
adc
jbe
inc
and
hlt
xchg
js
mov
pop
push
xor
and
dec
add
sub
push
fwait
adc
shl
add
push
add
or
add
jo
add
add
or
and
or
inc
or
and
xchg
add
inc
add
or
mov
add
sbb
dec
add
xor
or
add
add
xor
bound
rol
loope
and
inc
nop
or
add
add
inc
push
add
lea
xor
add
inc
test
mov
add
sub
sub
or
xchg
sbb
add
add
ret
xor
add
or
xor
or
add
or
add
add
add
or
cmp
add
add
inc
add
test
inc
or
leave
rol
xor
or
inc
push
add
sbb
or
loopne
scas
mov
or
add
stos
add
nop
push
add
adc
add
adc
dec
adc
add
adc
add
inc
add
adc
push
add
adc
mov
rol
push
dec
shl
mov
adc
add
inc
inc
inc
and
add
inc
enter
or
add
dec
inc
and
add
inc
or
adc
mov
add
test
loop
push
dec
mov
add
or
xchg
add
and
inc
push
inc
inc
add
inc
sub
add
push
pusha
adc
les
sbb
or
sbb
sub
rol
add
arpl
es
sub
dec
add
pop
push
and
and
pop
add
aam
inc
add
add
inc
add
call
inc
adc
sbb
or
or
add
push
adc
rol
add
xor
adc
sbb
adc
or
xor
or
and
les
sub
pusha
push
add
adc
add
and
jo
rol
add
add
add
add
add
ret
adc
add
or
pop
jo
sub
add
add
cwde
push
xor
dec
adc
and
lldt
adc
inc
add
dec
adc
or
add
sub
sbb
inc
enter
movs
add
adc
add
add
sbb
add
and
add
add
nop
push
shr
add
adc
adc
add
fimul
pop
add
add
inc
shl
sub
add
mov
inc
add
add
add
add
mov
add
add
inc
ret
add
adc
or
adc
dec
out
and
inc
add
adc
cdq
mov
or
add
add
sub
add
inc
xor
movs
and
add
push
adc
add
pusha
and
int3
push
mov
push
adc
dec
push
or
add
sbb
test
mov
and
mov
in
addr16
sub
imul
push
pop
call
dec
inc
pop
add
mov
mov
(bad)
jp
mov
and
lea
add
sbb
dec
sbb
das
call
das
cmp
repnz
rcl
ret
cmps
xchg
lock
mov
popf
add
int
stos
dec
(bad)
mov
xor
mov
and
add
(bad)
mov
add
mov
xchg
inc
mov
push
mov
std
test
mov
xchg
cmp
and
xchg
fcmovu
ins
inc
cs
add
mov
add
pop
jns
mov
xchg
xlat
dec
xchg
xor
jnp
mov
push
ja
mov
xor
xor
call
ins
sti
add
sub
xchg
mov
adc
dec
mov
sbb
adc
jno
mov
mov
mov
ror
sahf
sar
ja
inc
shr
jge
std
icebp
(bad)
mov
add
mov
xchg
xor
push
mov
add
mov
sub
xor
push
je
mov
add
call
push
retf
jle
mov
mov
adc
sahf
movs
fnsave
jle
or
inc
pop
mov
mov
outs
ss
pop
pop
icebp
ret
outs
mov
inc
jp
dec
mov
faddp
mov
(bad)
lock
jle
mov
ss
rol
dec
fwait
clc
push
aaa
mov
mov
outs
shr
js
mov
scas
push
sbb
sub
mov
cmp
sub
xchg
ret
sar
js
mov
inc
jnp
jp
push
jnp
outs
in
outs
scas
and
xor
xchg
cli
stc
shr
adc
adc
add
cs
mov
mov
call
jne
add
jae
ret
call
mov
cmp
jg
xchg
dec
sub
inc
jg
jb
adc
inc
dec
movs
sti
je
retf
iret
jl
daa
outs
push
jno
inc
mov
cmp
cmp
mov
sti
add
pop
push
inc
in
shl
xchg
inc
nop
inc
not
and
mov
popf
sbb
pop
test
rsm
sahf
daa
mov
inc
pop
adc
mov
mov
rol
mov
jmp
mov
mov
mov
mov
mov
jl
ret
mov
jno
ret
mov
cmc
shl
das
(bad)
dec
iret
(bad)
loope
aam
test
jns
mov
mov
inc
(bad)
sar
popf
pop
mov
pop
sti
fwait
xchg
std
cli
fwait
sahf
and
and
add
mov
xchg
xchg
add
test
mov
dec
jne
jne
jo
mov
cmps
in
jp
sahf
jbe
mov
pop
inc
jg
sub
cmp
push
aaa
mov
mov
int3
sub
mov
push
aaa
mov
jp
ja
mov
push
sub
dec
retf
ret
in
jp
clc
ret
iret
mov
xor
mov
jb
sbb
aaa
mov
xchg
xor
dec
inc
jg
xchg
mov
inc
ja
shl
jnp
mov
inc
ja
xor
xchg
stos
mov
push
jp
inc
dec
inc
js
retf
ret
in
jp
jp
mov
popa
jne
mov
sahf
sti
sar
aaa
mov
mov
outs
jnp
mov
inc
ja
xor
sti
add
jle
ja
cmp
xor
jle
inc
mov
pop
das
inc
popa
pop
xor
popa
xor
xchg
jae
jle
ja
push
inc
js
push
add
stos
xchg
iret
rcr
sar
add
cs
sub
bound
iret
sub
sub
xor
stc
mov
cmp
ja
das
mov
repnz
adc
cmp
cmp
in
dec
cmps
add
mov
outs
int3
adc
pop
xchg
repz
push
xchg
cmc
mov
cs
repnz
das
jmp
mov
mov
add
mov
outs
imul
jp
dec
test
rdmsr
std
les
rol
mov
adc
jmp
leave
inc
test
enter
mov
cli
adc
add
xor
push
mov
sbb
mov
test
fdiv
sbb
xor
push
push
dec
jb
mov
mov
mov
les
mov
cmp
das
cmp
sar
(bad)
(bad)
pop
retf
fst
push
mov
xchg
mov
xchg
jmp
mov
hlt
pop
mov
loop
mov
lock
jmp
mov
xchg
mov
mov
mov
xchg
inc
jle
dec
scas
jnp
dec
test
imul
jns
push
mov
jle
out
pop
fwait
mov
push
ja
mov
inc
imul
in
push
dec
daa
cmps
inc
jge
mov
(bad)
call
mov
mov
jns
jbe
mov
jo
lahf
inc
jg
jp
xchg
mov
xchg
mov
xchg
scas
xchg
xchg
iret
shl
jl
mov
test
imul
(bad)
jae
adc
cmps
clc
xchg
mov
mov
gs
push
jle
sahf
cmps
jnp
mov
xor
mov
jb
sub
add
outs
push
stos
push
xchg
arpl
adc
dec
dec
inc
pop
nop
dec
out
mov
dec
dec
push
push
test
out
cmp
mov
pop
adc
ret
xor
sub
dec
inc
repz
ret
outs
or
adc
sbb
ins
add
stos
push
inc
dec
mov
sub
adc
mov
or
rcl
jl
scas
fdiv
movs
test
push
jno
sub
inc
mov
out
pop
fs
jnp
push
in
mov
mov
sub
cwde
outs
icebp
fdiv
mov
cmc
sbb
pop
fcomp
pusha
mov
jmp
ja
mov
mov
mov
lods
and
div
push
pop
add
or
mov
fsubrp
fisttp
add
sbb
mov
rcl
mov
movs
retf
ds
mov
adc
push
inc
sub
xchg
jne
iret
jbe
fmul
(bad)
lds
jno
icebp
push
push
mov
dec
ja
mov
push
pop
add
out
call
xbegin
jbe
dec
in
in
jb
adc
hlt
(bad)
out
mov
mov
pop
push
popf
jae
stos
inc
pushf
jge
cmps
and
je
xor
mov
pop
xchg
int
imul
mov
aas
xchg
sti
or
xchg
inc
sar
repz
ins
and
mov
pushf
punpcklbw
xlat
mov
mov
adc
xchg
cld
lock
movs
sbb
icebp
stos
stos
inc
push
mov
xchg
pop
aad
xchg
repnz
pop
ja
add
scas
(bad)
jge
mov
mov
mov
pop
sysenter
in
jo
jbe
xchg
(bad)
scas
jns
aas
pop
pop
sub
pop
daa
or
xchg
clc
inc
or
add
idiv
xchg
sub
jecxz
mov
push
ja
div
fld
sub
(bad)
out
lods
cmps
imul
sbb
jl
jmp
mov
mov
xor
cmp
xor
cmc
add
dec
mov
push
dec
mov
and
jmp
rcl
mov
inc
mov
movs
test
test
sbb
jo
or
mov
sub
shl
lods
xchg
mov
xchg
mov
call
test
loopne
pop
movs
mov
ds
ret
aaa
aas
pusha
push
mov
in
test
cmp
fiadd
(bad)
jne
xor
icebp
adc
sub
jp
mov
ins
add
sub
(bad)
jecxz
xchg
or
enter
xor
push
neg
push
mov
sub
sub
jge
inc
xchg
mov
into
push
lahf
test
fdivp
mov
inc
cmps
into
aam
cmps
aaa
iret
add
rcl
aaa
dec
pusha
push
retf
stc
mov
mov
mov
dec
adc
push
inc
cmp
sub
test
adc
push
mov
pop
dec
repz
push
adc
mov
repnz
sbb
retf
cmc
cmps
sub
cdq
pop
dec
jnp
frstor
into
xchg
mov
cmps
and
cld
inc
repz
xchg
sbb
out
mov
sbb
shr
ja
xchg
adc
out
add
loopne
add
ficomp
in
mov
test
adc
gs
loopne
jno
stc
jecxz
push
iret
test
test
pusha
mov
call
pop
shr
(bad)
xchg
xchg
jmp
addr16
mov
xor
leave
pop
jne
movs
mov
push
retf
out
div
daa
sbb
mov
cmps
jns
ja
scas
pushf
mov
mov
or
lea
mov
jbe
add
int3
(bad)
xor
dec
les
int
add
sub
lea
psraw
rcl
jb
mov
sub
push
test
retf
add
mov
lock
mov
add
jmp
pushf
mov
dec
ror
xor
ror
mov
repz
inc
inc
pop
pop
xchg
cmp
inc
cmp
sahf
cs
or
stos
and
and
int
(bad)
xchg
add
sbb
jp
mov
mov
pop
mov
fistp
mov
imul
pop
or
loopne
xchg
cmps
adc
sahf
mov
(bad)
ins
pop
ret
mov
or
jne
push
stc
test
adc
sbb
popa
jo
iret
and
jbe
push
ret
arpl
inc
jnp
jg
or
idiv
jbe
outs
adc
mov
mov
cmc
popa
jg
jno
mov
out
jbe
adc
push
cmp
jne
xchg
jmp
out
push
inc
add
call
push
movs
in
mov
push
mov
xchg
dec
mov
jae
addr16
out
xchg
mov
dec
gs
js
mov
jbe
repz
enter
shl
inc
scas
ror
push
adc
mov
in
xchg
sahf
jge
jp
mov
jo
or
std
add
dec
jbe
inc
xchg
jnp
stc
inc
mov
push
leave
lahf
sub
add
push
and
mov
inc
sbb
mov
jno
mov
int3
jb
jne
sub
mov
loop
or
das
and
xchg
pop
pop
test
add
jbe
push
inc
sahf
imul
xchg
xchg
pop
mov
mov
mov
ja
push
scas
adc
call
mov
xchg
jbe
mov
sar
xchg
popa
xlat
push
and
sub
sub
xor
dec
test
add
ja
ffree
out
and
sar
cmps
mov
mov
not
jb
fdiv
fnstcw
jbe
sbb
cmp
adc
add
rol
sbb
mov
xchg
lock
jg
or
pop
push
xor
mov
jbe
xor
icebp
jp
rol
pop
cmc
daa
cwde
dec
call
outs
mov
fs
cli
mov
(bad)
mov
jo
inc
xor
in
jle
icebp
or
mov
push
hlt
dec
mov
or
loope
mov
retf
test
retf
jmp
jg
cmp
mov
fidiv
sub
std
pop
pop
add
push
mov
test
dec
sbb
xor
or
gs
call
ins
stos
xchg
out
and
dec
fiadd
nop
call
repnz
adc
in
enter
pushf
ins
iret
pop
ja
pop
adc
popa
pop
jg
push
mov
lahf
into
mov
sbb
or
jbe
bound
loopne
pop
repz
js
shl
cmps
rcl
lea
test
loop
inc
cmps
and
pop
xchg
dec
fisttp
dec
fdivp
xchg
add
sbb
jae
cmp
inc
push
pop
cmp
sub
jecxz
cmp
shl
push
gs
enter
mov
mov
loop
cs
sar
mov
push
mov
pop
dec
test
pop
push
xor
xchg
int
into
int
shr
shr
in
in
cmc
jmp
(bad)
fnclex
imul
xchg
pop
rol
cmp
sar
xchg
push
(bad)
mov
xchg
mov
test
ds
or
(bad)
jle
shr
sbb
call
push
inc
iret
in
mov
xor
scas
jl
outs
xchg
out
pop
bound
ret
mov
scas
test
jge
xchg
scas
mov
imul
out
or
mov
mov
nop
lds
cmp
stc
out
hlt
mov
addr16
les
add
jge
scas
xchg
mov
(bad)
cmp
shr
pop
push
fsubr
adc
(bad)
fsub
call
inc
mov
or
xor
mov
lods
(bad)
out
pop
mov
mov
stos
icebp
push
dec
popf
push
and
test
ins
imul
repnz
mov
aad
data16
pusha
cwde
pop
cmp
out
mov
jmp
daa
adc
mov
xor
and
xor
cmp
or
jnp
push
or
in
and
loopne
icebp
daa
mov
ja
or
xlat
mov
loope
cmp
cld
es
push
adc
or
cmp
in
jbe
call
inc
sbb
xchg
hlt
cmp
sub
mov
cmp
int
sbb
lock
popa
in
inc
xlat
sub
fs
lods
das
push
mov
iret
lds
mov
jmp
add
jmp
mov
ret
push
lahf
and
cmp
xchg
mov
lods
sbb
inc
gs
add
inc
fcomi
adc
dec
jp
nop
mov
mov
test
jecxz
mov
cwde
mov
add
dec
popa
movs
ins
rcr
test
push
(bad)
sub
mov
mov
fidivr
jno
stos
out
out
cs
cld
add
sbb
push
shr
add
sti
mov
cmp
out
es
test
mov
(bad)
xor
neg
mov
loopne
lods
adc
test
dec
dec
int
inc
dec
retf
jbe
in
ret
mov
mov
or
mov
xlat
ins
pushf
enter
add
mov
add
push
push
mov
pop
mov
add
std
push
pop
xor
loope
retf
mov
push
xor
or
mov
cmp
mov
loope
mov
cmp
loop
loopne
fs
jle
loopne
test
mov
pop
sbb
or
mov
ret
mov
lods
addr16
cld
lds
sub
cmp
add
stos
add
pop
sub
clc
cwde
mov
stc
stos
mov
dec
cmp
jae
stos
shl
push
or
fxch
inc
jbe
addr16
dec
xchg
stos
repz
add
lods
mov
mov
data16
mov
jl
(bad)
inc
gs
sub
lahf
fild
ins
dec
xchg
loope
int
jbe
dec
movs
pushf
loope
in
mov
stos
push
mov
lds
setbe
pop
je
mov
push
neg
jl
xlat
sbb
pop
in
jmp
xor
ret
loop
mov
mov
iret
inc
lds
shl
mov
pushf
push
out
mov
mov
pusha
add
mov
jbe
mov
jae
mov
fadd
xor
inc
pop
in
mov
xchg
push
inc
ja
fst
push
mov
lds
adc
mov
(bad)
stc
jno
retf
cdq
xchg
lock
inc
jp
cmps
test
jbe
bound
push
repz
cld
div
sbb
add
or
push
inc
stc
dec
adc
mov
sub
cmp
lods
jns
fs
ret
push
mov
in
mov
or
mov
loopne
popa
fidiv
adc
add
neg
pop
ror
or
ja
cwde
sahf
lods
push
inc
mov
mov
ds
in
jne
mov
dec
mov
cwde
sti
xor
fst
hlt
sbb
idiv
fcom
arpl
fs
loopne
mov
jmp
push
ja
fstp
sar
xor
inc
xchg
or
lock
pop
scas
ja
por
mov
fidivr
adc
stos
daa
pop
mov
xor
push
adc
ins
mov
repz
or
daa
mov
ret
(bad)
adc
mov
sub
inc
dec
test
cmp
ret
gs
or
mov
push
sbb
(bad)
rcr
out
push
lea
(bad)
mov
popf
mov
test
retf
inc
shr
inc
xchg
cs
push
xchg
add
call
and
movs
sbb
cld
and
mov
add
sub
scas
loop
gs
pop
mov
pop
std
cdq
cmp
mov
push
jmp
adc
push
in
jbe
push
sbb
jno
cs
xchg
cli
push
sub
aas
rol
and
int3
or
adc
dec
dec
mov
neg
(bad)
ret
dec
aam
jbe
call
mov
sub
enter
mov
leave
outs
not
in
mov
mov
xor
or
adc
in
fisubr
adc
mov
mov
fistp
ror
dec
cmc
lds
adc
push
mov
mov
popa
and
rdmsr
push
sahf
mov
in
cwde
arpl
inc
mov
dec
or
outs
xchg
sbb
sub
jbe
into
pop
mov
ins
xchg
mov
cmps
idiv
push
mov
shl
jle
mov
int
sub
retf
xchg
addr16
mov
ret
imul
scas
dec
jle
mov
pop
pop
cwde
cmp
dec
xchg
xchg
es
fimul
dec
out
jbe
jle
test
pusha
jp
mov
test
(bad)
xchg
icebp
icebp
into
daa
mov
mov
adc
push
neg
or
in
in
adc
jmp
jae
(bad)
jbe
stc
xchg
mov
pop
mov
pop
or
inc
lock
mov
dec
xchg
dec
jl
mov
sbb
ja
dec
sub
dec
ret
test
and
cmp
ja
jno
mov
and
mov
pop
retf
ret
push
mov
aam
out
push
stc
jg
sbb
jecxz
outs
and
movs
inc
jmp
sar
cmp
out
in
jmp
ins
xor
and
fdivr
inc
(bad)
mov
retf
and
jp
in
jae
push
mov
fbld
add
fwait
xchg
fcomp
jbe
pop
popf
jmp
rol
nop
mul
lock
cmp
sub
test
ds
xchg
xchg
xchg
sti
(bad)
movs
dec
aam
mov
xor
sub
pop
sbb
jnp
xchg
sahf
nop
movs
jg
pop
ins
xor
(bad)
mul
sub
(bad)
aam
loope
mov
es
dec
out
sar
in
out
xor
sbb
xchg
mov
loop
mov
mov
push
daa
addr16
pop
jno
sub
mov
pop
retf
jbe
stos
loop
dec
jo
inc
sar
jns
cmps
add
xchg
pop
pop
mov
sbb
inc
xchg
repnz
mov
aas
inc
mov
mov
add
and
repz
xchg
addr16
cwde
jne
pushf
adc
xor
sbb
fcom
jge
mov
scas
out
ins
push
addr16
call
not
test
stc
or
fwait
popa
add
ja
mov
mov
push
adc
mov
movs
xchg
push
out
jbe
imul
retf
cld
cmp
xlat
(bad)
mov
sbb
mov
enter
or
push
mov
imul
mov
adc
outs
mov
mov
ret
xchg
stos
pop
push
fdivr
lahf
inc
test
jp
push
cmp
inc
adc
jle
dec
aaa
js
dec
xchg
sbb
mov
ror
arpl
test
sbb
dec
mov
sbb
hlt
popf
jmp
fld
mov
fs
not
jb
test
mov
shl
movs
xchg
clc
jae
mov
xor
and
dec
inc
mov
mov
fistp
and
stc
mov
fiadd
mov
out
pusha
push
out
or
or
pushf
xchg
cmp
mov
das
push
xchg
ret
lahf
retfw
dec
mov
mov
push
aad
addr16
inc
xchg
(bad)
xchg
cs
sub
push
xchg
jl
popf
test
add
jge
inc
mov
jmp
fwait
test
call
cmps
jne
in
jmp
aas
adc
ins
or
jbe
dec
fidivr
xor
cwd
mov
jno
pop
(bad)
sbb
fsub
jle
lahf
sub
or
mov
into
lds
outs
cwde
in
mov
mov
test
push
mov
xchg
les
mov
arpl
jbe
xor
mov
test
es
aad
inc
add
xchg
and
pusha
test
sub
mov
mov
test
xchg
mov
mov
xor
ret
jge
pop
icebp
cwde
mov
xchg
daa
jns
jae
in
mov
mov
jp
mov
call
mov
inc
mov
data16
in
xchg
loope
add
rcr
xor
sbb
imul
popa
mov
fs
jge
dec
retf
mov
test
in
es
jae
dec
ja
add
js
and
mov
fidivr
lds
or
fnstsw
ret
aas
out
out
cdq
push
jmp
(bad)
inc
mov
into
sbb
enter
xor
jnp
mov
daa
scas
add
(bad)
mov
hlt
outs
sbb
cdq
and
xchg
je
mov
or
dec
repnz
cmps
xchg
mov
mov
lock
mov
adc
leave
mov
xlat
addr16
push
popa
shl
daa
and
xchg
(bad)
fwait
pushf
xchg
cmp
call
fisub
loope
xor
and
ja
mov
leave
mov
imul
popf
mov
add
xor
jbe
loopne
loop
xchg
in
mov
and
(bad)
daa
icebp
mov
mov
xor
aaa
inc
mov
fiadd
iret
pop
xchg
leave
fcomp
mov
jae
test
xor
push
push
imul
fwait
dec
sbb
js
inc
(bad)
xchg
in
sti
test
sub
add
pop
and
cmp
sbb
pop
mov
das
cmp
movs
push
push
stos
outs
mov
push
mov
lahf
fisub
jl
int
test
mov
(bad)
fnstcw
pusha
pop
xchg
repnz
xchg
mov
push
fistp
and
pop
shl
push
repnz
(bad)
clc
xchg
icebp
xor
(bad)
adc
sbb
pop
xchg
cmp
fs
fld
les
dec
mov
lods
sbb
inc
cli
sub
aam
stos
push
pop
xchg
xchg
push
ret
mov
pop
rol
jae
(bad)
mov
pop
pop
fild
jae
push
lock
xchg
arpl
add
cmp
(bad)
push
push
punpckhdq
xor
sahf
push
dec
and
outs
loope
mov
pop
jge
repz
nop
aaa
pusha
or
mov
or
ja
jae
in
jbe
or
lods
lds
xor
sbb
call
mov
stos
sbb
jnp
adc
jg
into
iret
mov
adc
xchg
xchg
push
or
jbe
js
mov
test
mov
pop
xchg
fmul
and
pop
ret
hlt
mov
idiv
mov
cmp
ror
ja
das
or
mov
int3
cmp
cmp
dec
int
cli
inc
mov
into
pop
cli
add
test
mov
mov
leave
imul
jge
and
imul
sahf
dec
fwait
(bad)
fmul
stc
pusha
fistp
xchg
jl
dec
jge
jo
jno
popa
out
push
dec
lahf
push
mov
in
add
ja
push
paddb
rcl
inc
sub
cmp
jo
mov
hlt
loopne
mov
push
sbb
cld
mov
das
jg
mov
add
lods
and
aaa
stos
xchg
imul
les
inc
stos
mov
or
sub
ret
push
mov
(bad)
jge
push
xchg
retf
in
add
adc
ja
iret
les
fsubr
ins
cmc
mov
imul
xchg
sbb
mov
sbb
imul
lea
sahf
mov
ja
jo
xor
rcr
int
dec
rcl
cmp
sub
mov
lea
dec
xchg
aaa
shl
cmp
test
add
inc
jbe
jae
dec
add
jne
test
sub
mov
or
sub
icebp
dec
daa
dec
imul
and
sbb
lods
mov
in
out
movs
inc
cmps
xchg
xchg
out
jbe
repnz
sbb
xlat
push
sbb
push
in
sahf
lock
and
inc
pop
icebp
inc
fiadd
push
xor
xor
pop
pushf
les
cli
fld
out
jae
push
mov
sub
cmp
cdq
shl
ins
ins
arpl
jmp
mov
jo
jg
std
add
jne
jl
(bad)
cmp
fst
mov
or
aam
push
(bad)
addr16
int3
inc
sti
jae
mov
out
pop
or
int
pushf
or
cld
jno
xor
mul
jle
add
dec
cmp
ins
push
lds
push
mov
inc
(bad)
pop
jne
jbe
sub
out
xlat
aam
or
jg
sbb
sbb
inc
add
retf
movs
out
pop
adc
adc
ja
push
shl
jns
and
add
ins
pop
jl
xchg
push
or
jbe
je
adc
xlat
pop
movsx
xlat
ds
or
or
jae
jg
inc
xchg
jb
inc
jbe
lar
test
iret
cmp
cwde
int3
rcl
nop
pop
mov
int3
dec
push
mov
xchg
pop
shr
dec
or
mov
adc
sbb
pop
(bad)
std
mov
sub
leave
popf
xchg
dec
pusha
leave
xchg
add
scas
jbe
jo
mov
mov
les
push
scas
ss
inc
inc
mov
adc
jns
cld
push
popa
shr
jmp
cdq
adc
lock
or
loope
mov
cmp
jle
dec
cmp
arpl
sub
adc
pop
cmps
mov
aaa
mov
inc
retf
xor
cmp
imul
xchg
(bad)
xlat
les
mov
(bad)
adc
lock
mov
sbb
test
sahf
pop
gs
jp
daa
push
call
js
mov
and
jle
jne
repz
adc
in
push
mov
push
pop
mov
es
mov
jl
sub
mov
inc
ja
and
test
retf
fild
xor
scas
jbe
jae
cmp
sbb
xchg
push
retf
sub
pop
mov
mov
pop
(bad)
dec
xchg
mov
cmp
aas
mov
jbe
and
pop
jmp
fwait
xchg
test
push
mov
sub
jl
popa
xor
mov
mov
icebp
jnp
sar
adc
pop
ja
jle
shl
imul
mov
test
pusha
sbb
fwait
push
mov
call
cwde
jbe
bound
jb
xchg
inc
arpl
or
xor
fwait
cld
jl
jnp
inc
mov
add
out
sub
(bad)
test
jbe
scas
std
dec
jb
mov
sar
cwde
jmp
dec
sub
loop
adc
loop
mov
cmps
mov
es
pop
mov
jo
pushf
ds
mov
jns
add
js
lahf
mov
mov
xlat
mov
pop
test
mov
pusha
mov
je
retf
out
test
shr
sub
popf
les
push
jno
ins
cwde
retf
ins
xcrypt-cfb
cmps
bound
jmp
test
inc
mov
inc
(bad)
mov
daa
rol
sbb
test
call
out
inc
jge
(bad)
test
xchg
cmp
lock
fst
jmp
pushf
dec
movaps
pushf
test
rol
pop
out
into
push
pop
push
pop
sub
mov
mov
test
add
aad
jbe
mov
xchg
retf
arpl
aaa
and
in
mov
add
push
add
jl
dec
aam
mov
cmp
jmp
cld
or
mov
ror
add
pop
fldenv
test
popf
push
add
in
cmp
xchg
aad
mov
sbb
adc
sub
mov
sub
lahf
xor
inc
sahf
sbb
inc
mov
pop
retf
test
push
es
not
ret
mov
stos
(bad)
jne
rol
mov
push
sbb
fbstp
in
(bad)
mov
aad
cmp
stos
dec
stos
jb
mov
fisub
push
scas
xchg
mov
clc
push
sar
movs
push
jp
test
cmp
xchg
xchg
and
cmp
cmp
sbb
xchg
cmp
xchg
jbe
(bad)
outs
out
out
jge
mov
push
ds
mov
dec
xchg
popa
add
cmp
arpl
pop
mov
fld
pop
add
pushf
mov
inc
push
adc
stc
out
sbb
cmc
fwait
mov
mov
icebp
mov
adc
test
push
mov
fsubr
ins
cmp
test
rcr
push
add
sub
inc
adc
popa
sbb
push
mov
loope
je
test
sbb
xor
sub
jb
je
(bad)
sub
xchg
in
sbb
aad
lock
push
jle
fcmovnu
sbb
ins
mov
add
lea
mov
mov
call
mov
movsx
push
in
inc
jnp
mov
add
xchg
pop
cmp
ja
pop
pop
shl
ror
xor
test
js
loope
jnp
iret
aaa
xchg
retf
inc
dec
mov
popa
add
outs
inc
ret
cwde
or
jmp
jnp
xchg
cmp
and
pusha
push
adc
pop
xchg
mov
paddb
cmp
aad
sbb
(bad)
mov
push
std
ror
mov
push
jl
je
mov
in
jno
stos
in
test
lods
rcr
repnz
inc
outs
sub
fbld
test
push
sub
fdivr
mov
jg
test
mov
stc
sahf
cmp
inc
or
leave
call
add
ds
test
mov
pusha
sbb
mov
data16
pushf
xchg
lods
dec
cmp
push
iret
loop
mov
mov
fs
pop
ja
jbe
iret
ins
cwde
xchg
movs
es
jae
or
stos
repz
unpcklps
xchg
pop
rol
mov
call
xchg
add
push
mov
jne
pop
int
fwait
pop
xor
stc
std
bound
cwde
adc
cmp
lods
and
mov
ja
inc
out
movzx
push
inc
sbb
fisub
dec
jmp
or
mov
call
mov
jbe
in
imul
into
jns
xor
push
xchg
mov
out
mov
les
scas
outs
xchg
dec
push
xchg
sar
sbb
jbe
sub
scas
dec
mov
test
lods
cmp
jmp
mov
push
mov
xchg
xchg
arpl
popa
mov
mov
call
call
mov
cmc
cmc
mov
loopne
daa
adc
or
push
adc
mov
inc
rcl
ret
and
xor
push
scas
mov
ret
mov
fnstsw
mov
ret
push
sub
retf
test
jno
pop
shl
in
rcr
push
les
mov
cs
daa
test
inc
enter
mov
sar
xor
or
or
movs
mov
jbe
and
retf
pop
call
push
retf
pop
mov
adc
ret
cmc
push
sbb
and
pop
out
mov
in
push
aaa
push
clc
xor
jmp
(bad)
jg
mov
xor
cmps
lods
mov
inc
sub
xchg
or
jae
mov
idiv
push
xchg
fs
pushf
outs
jae
imul
outs
ret
js
push
xchg
mov
cmc
test
sbb
xor
or
ja
xor
or
cmp
dec
mov
sahf
xchg
push
mov
and
pop
mov
or
cmp
sbb
bound
imul
dec
jo
pop
pop
repz
push
and
cwde
xchg
cmps
sbb
ja
adc
lahf
inc
mov
fst
outs
jp
adc
jle
mov
cli
lock
push
dec
test
shl
xor
cmp
lock
je
loop
or
xchg
add
mov
clc
retf
xchg
jp
push
imul
adc
out
jne
add
xor
jb
into
div
jnp
popa
popa
mov
sti
xchg
stc
inc
xchg
lahf
dec
ss
cmp
arpl
and
into
je
pop
fisttp
push
push
mov
or
sbb
dec
xchg
and
repnz
cld
mov
push
not
jbe
mov
inc
retf
mov
ret
mov
sti
mov
repz
fxch
lods
in
mov
imul
sbb
aad
stos
ror
inc
or
cmp
adc
scas
rcr
les
test
iret
adc
cdq
mov
mov
(bad)
fild
or
mov
mov
cmps
in
fimul
or
or
dec
dec
lea
les
xchg
stos
imul
xor
jle
lahf
and
sub
cmp
hlt
jg
popa
shr
inc
sub
js
xor
test
cmp
(bad)
adc
loope
in
(bad)
jg
in
jg
jl
popa
sbb
stos
je
cmp
sbb
and
mov
das
shl
jbe
clc
(bad)
imul
aas
(bad)
push
mov
jbe
aam
(bad)
mov
pop
nop
add
mov
add
and
int3
dec
das
loopne
dec
mov
sbb
cmp
jae
mov
and
out
call
mov
outs
rcr
test
and
push
jmp
pop
retf
jle
hlt
lea
cmp
lods
inc
in
call
ins
fnstcw
sbb
(bad)
in
jmp
mov
cmp
movs
shr
jne
jg
add
push
jg
enter
seta
hlt
popf
lods
mov
mov
int3
jno
(bad)
in
retf
leave
test
std
pushf
mov
cmc
jge
rcl
outs
mov
enter
jnp
fst
call
fldcw
push
xchg
xor
mov
adc
lahf
in
mov
cmp
add
ins
mov
aam
xchg
rcr
xchg
inc
mov
jbe
mov
(bad)
mov
int3
es
pop
mov
jae
pop
leave
test
(bad)
pop
sbb
pop
movs
jmp
loop
mov
sub
faddp
mov
jmp
lahf
dec
jge
xor
jmp
dec
test
cmp
shl
mov
mov
sahf
popa
pop
jg
mov
or
mov
lock
cdq
xchg
std
repz
test
test
cmp
mov
fwait
sbb
shr
pushf
add
fldcw
sbb
out
push
ror
jne
sub
imul
(bad)
jae
data16
fdiv
mov
bnd
push
inc
mov
dec
mov
mov
(bad)
lods
lahf
fisubr
pusha
inc
push
sub
dec
aaa
ret
retf
cmp
jbe
int3
and
push
adc
dec
es
pop
gs
mov
movq
rol
(bad)
cld
test
ja
fisub
adc
mov
xchg
das
jno
outs
mov
mov
mov
or
jmp
mov
push
pop
outs
ret
movs
ins
push
jmp
mov
push
jo
cmp
fldz
aaa
xor
xchg
sub
enter
push
pop
ret
neg
pop
add
jecxz
cmp
sbb
aas
jg
push
adc
add
or
les
(bad)
data16
imul
sub
adc
sbb
sub
jmp
mov
sti
jmp
cmps
les
jmp
or
inc
pop
sub
test
push
mov
fild
es
ja
dec
mov
and
hlt
xchg
mov
mov
(bad)
cmps
fmul
adc
cmp
push
mov
mov
shr
out
arpl
outs
lods
scas
inc
cmps
stos
pop
out
outs
bound
adc
jg
adc
or
adc
pushf
push
test
ja
dec
adc
pop
jns
dec
mov
adc
stos
mov
pop
ins
inc
cmp
add
pop
ja
fs
jmp
mov
mov
pop
mov
mov
notrack
pop
or
mov
push
lock
mov
in
xor
pusha
xor
aas
sbb
cmp
pop
jbe
jbe
pop
and
out
mov
ins
in
xchg
fimul
mov
fwait
rcl
inc
ja
fisub
(bad)
mov
inc
repz
mov
fild
cmps
pushf
pop
ins
jo
pushf
test
out
mov
cmp
sub
shr
adc
outs
outs
add
dec
mov
jbe
pop
xor
mov
mov
(bad)
ja
and
hlt
pop
mov
sub
shl
cmp
mov
cdq
push
sbb
jg
shl
pop
cmp
xor
jbe
dec
xchg
hlt
(bad)
jae
clc
lock
xchg
mov
xor
pop
mul
les
and
mov
aaa
cli
or
call
push
fimul
lods
jbe
lea
test
and
add
fisubr
xchg
leave
add
xor
cmp
lods
ss
test
xchg
jmp
pop
inc
pop
ficomp
out
pop
or
shr
jne
or
mov
or
mov
mov
das
neg
pusha
aas
add
iret
stc
shl
sbb
movs
jb
and
call
out
hlt
inc
fcomp
cld
mov
and
ins
fwait
and
jae
jp
pop
xor
repz
xor
retf
addr16
cmp
fwait
add
mov
mov
aaa
iret
das
ins
div
cli
std
inc
rcl
jle
mov
(bad)
shr
pop
jg
and
rcl
push
push
in
sahf
or
jp
or
push
jo
fucomp
retf
mov
or
jns
mov
ret
rcl
or
dec
retf
jo
fsub
rol
jae
adc
xchg
gs
rcr
adc
jnp
(bad)
ja
pop
dec
xchg
sbb
(bad)
mov
xchg
jns
mov
adc
nop
cmps
jmp
jmp
and
mov
adc
cli
stos
lds
add
arpl
movs
sti
add
ret
mov
adc
jo
jae
cmps
xchg
pop
xchg
pop
nop
jbe
add
enter
dec
push
in
xchg
aad
sub
push
inc
mov
push
or
clc
ret
iret
sar
(bad)
add
mov
dec
dec
push
dec
sub
inc
inc
js
lods
mov
push
cld
xor
data16
add
sub
xor
jle
add
repnz
inc
imul
xchg
into
xchg
daa
pop
add
int
icebp
adc
cli
xlat
in
jmp
push
cmp
test
mov
or
out
cmc
lea
cmp
out
mov
stos
repnz
mov
pop
sub
dec
jecxz
jo
xchg
adc
xchg
arpl
in
and
mov
pop
add
rcr
ins
mov
jmp
or
jmp
cmp
mov
push
xchg
test
jbe
jecxz
aad
xor
popa
or
ret
adc
xchg
cmp
bound
jnp
mov
mov
gs
sub
mov
mov
mov
add
mov
sbb
sbb
sbb
jle
daa
xor
(bad)
cli
xrelease
pop
pusha
popf
inc
test
pop
(bad)
retf
in
out
(bad)
out
(bad)
icebp
lods
jbe
sbb
jne
sbb
mov
push
shl
test
mov
int3
outs
fsub
pop
and
rcl
mov
fisttp
dec
mov
repz
sbb
movs
dec
or
mov
mov
call
icebp
bound
xchg
mov
movs
jno
xor
mov
in
mov
test
hlt
enter
into
outs
add
daa
jmp
adc
mov
fnsave
and
inc
sar
je
or
les
gs
mov
add
and
mov
popa
mov
cwde
add
aad
xor
mov
ja
cmp
dec
je
aaa
das
in
xchg
mov
mov
lods
stos
fidiv
shl
mov
xchg
loopne
retf
mov
pop
dec
(bad)
and
js
movs
jp
pop
mov
out
adc
pop
sbb
lods
push
push
adc
leave
gs
pop
nop
in
mov
mov
(bad)
xor
ds
int3
jo
call
test
mov
pop
mov
xor
retf
cmps
xchg
add
pop
jl
fs
out
inc
ja
push
xchg
xor
xchg
sti
mov
mov
cmps
cmc
sbb
mov
and
jbe
cmps
lods
cli
pop
adc
push
mov
push
xchg
rcr
scas
(bad)
pop
sub
xor
dec
pop
sub
mov
lods
outs
daa
inc
sub
mov
adc
ret
test
xor
popa
cmp
inc
sbb
pusha
arpl
emms
mov
pop
jae
and
jbe
cmp
call
pop
repz
jp
jae
enter
mov
jecxz
sbb
mov
ins
adc
mov
xchg
int
icebp
mov
pop
inc
ja
test
ins
jecxz
cdq
dec
mov
adc
lds
xor
pop
adc
inc
mov
push
add
cmp
dec
pusha
imul
xlat
in
jno
pop
aas
dec
add
out
jle
inc
add
mov
cdq
jmp
fwait
mov
shl
jmp
or
pop
pop
dec
cwde
test
shr
jnp
pop
sub
pop
ds
sub
cdq
fiadd
(bad)
jge
je
dec
cmps
arpl
ins
call
popf
jbe
out
push
xchg
or
mov
popf
or
adc
pusha
shr
fcomp
test
or
inc
lods
(bad)
jne
mov
jle
or
dec
pop
mov
scas
cwde
aaa
jne
test
and
jecxz
jnp
fsubr
pop
adc
cdq
in
ins
iret
adc
mov
popf
inc
call
out
sub
push
xchg
das
dec
call
ins
mov
test
out
mov
imul
mov
test
mov
xchg
push
daa
ja
fdiv
jmp
mov
push
test
aas
xchg
sub
(bad)
mov
or
scas
xchg
xchg
push
mov
movs
sar
cdq
cmc
mov
(bad)
mov
in
push
into
stos
mov
je
ds
int3
xchg
xchg
cwde
lods
sub
mov
loopne
int3
std
push
xor
jge
cmps
test
cld
jbe
xor
sbb
jp
bound
ret
sbb
std
mov
push
pop
in
jbe
int
dec
adc
cmps
lock
cmp
fcomp
into
repz
pop
inc
cmp
clc
jo
pushf
pop
ins
mov
fwait
int
mov
or
into
fidivr
pop
xchg
rol
shr
fcomp
mov
push
call
sub
xor
enter
and
inc
xchg
out
adc
fnstsw
lock
mov
mov
out
fnstsw
neg
cmps
lds
xor
repnz
call
(bad)
das
or
pop
mov
repnz
lds
aaa
pushf
es
jecxz
push
stos
mov
inc
inc
ret
retf
cmp
sub
add
pop
mov
push
ss
and
mov
cmp
dec
ja
adc
popf
inc
xchg
or
mov
and
fstp
ror
jg
mov
pop
rcr
popf
push
inc
sti
cmp
jnp
and
arpl
cmp
jmp
cmp
xchg
bound
retf
push
cmp
jbe
cmp
in
mov
ds
jp
or
outs
add
lods
adc
cli
add
out
shl
(bad)
pop
xor
xchg
pop
mov
push
inc
pushf
cli
test
jno
fisttp
sbb
pop
jmp
mov
sub
je
cmp
and
ret
test
mov
mov
retf
out
mov
rol
sbb
mov
loopne
cld
scas
into
int3
mov
xor
xor
clc
daa
push
inc
imul
sub
sbb
adc
and
arpl
hlt
mov
sub
mov
stc
xlat
(bad)
push
sub
ja
jno
mov
mov
hlt
fwait
dec
xor
mov
imul
nop
push
dec
call
adc
sub
dec
pop
inc
sbb
enter
inc
adc
jmp
push
sbb
fld
xor
cmp
jmp
sbb
mov
data16
jecxz
mov
mov
and
mov
(bad)
jmp
scas
mov
xor
adc
fistp
adc
stos
pushf
mov
dec
push
push
pop
cmp
cmp
xchg
pop
loopne
jne
pop
movs
mov
xchg
or
add
cli
or
in
xchg
test
inc
cmp
cmp
repnz
xor
xchg
popa
sar
sbb
outs
mov
sbb
cmc
jnp
ins
das
outs
jbe
pop
sub
and
and
jecxz
push
xor
xchg
test
pop
cmps
leave
adc
mov
mov
div
push
bound
and
out
mov
aas
pushf
fisubr
push
mov
(bad)
movs
clc
and
or
cmp
test
rcl
and
xchg
jg
xchg
push
xchg
mov
das
lock
fs
pop
enter
repz
repnz
fld
push
or
stc
mov
jae
mov
sub
mov
iret
or
iret
jge
fidivr
mov
out
arpl
adc
enter
mov
dec
adc
(bad)
mov
ins
les
cwde
lahf
mov
sar
cmp
(bad)
xchg
mov
ror
or
jmp
dec
pop
fndisi(8087
jne
stos
sbb
idiv
pop
mov
cli
icebp
mov
scas
fwait
(bad)
adc
call
mov
retf
fisub
ja
cmps
bound
mov
xor
xchg
outs
mov
(bad)
shl
pop
xchg
stc
popf
retf
lfs
and
call
xchg
add
jbe
inc
repnz
sub
mov
inc
pusha
popa
cmp
dec
cmp
dec
shr
mov
cdq
pop
jmp
les
inc
jnp
lock
fsubr
or
mov
sub
(bad)
push
mov
in
mov
jnp
cmc
test
xchg
mov
icebp
jne
imul
pop
sub
movs
movsx
mov
sub
cmp
pop
mov
int
lea
aad
cmp
jmp
movs
in
fiadd
xor
mov
mov
or
push
mov
mov
aaa
hlt
test
sbb
std
pop
ja
outs
aaa
xlat
jge
inc
fcmovnu
dec
test
mov
push
xchg
inc
jmp
movs
xor
jb
mov
outs
iret
mov
push
push
inc
clc
ins
xchg
mov
(bad)
(bad)
mov
lahf
inc
mov
pop
fnstsw
xchg
loope
cmc
jbe
retf
push
or
cmp
pop
or
mov
pusha
jne
push
dec
mov
mov
xor
pop
test
and
push
add
sahf
mov
sbb
out
cmp
xchg
push
sub
ror
ja
lods
and
sbb
lahf
mov
stos
jbe
pop
mov
xor
jo
into
add
rcr
ja
dec
mov
test
pop
mov
xchg
dec
xchg
xor
add
fnstsw
in
dec
jns
mov
mov
fdivr
cmps
sbb
xor
jle
jmp
add
mov
mov
test
sti
jns
div
enter
setne
fistp
aas
xchg
into
out
cmps
push
inc
mov
sbb
fyl2x
sbb
loop
push
mov
repnz
xor
mov
std
adc
inc
mov
mov
cdq
mov
pop
jo
dec
ja
out
mov
sti
sub
jmp
lods
xchg
mul
pop
das
ds
add
push
xchg
call
(bad)
cld
jp
dec
mov
mov
mov
out
sbb
mov
inc
mov
add
(bad)
mov
and
and
dec
pop
add
out
mov
fadd
dec
jne
sub
icebp
dec
rcl
popf
clc
ret
or
mov
(bad)
in
mov
mov
push
push
retf
fstp
lidtd
les
arpl
xchg
xor
add
or
ss
mov
pushf
xchg
popf
das
jns
sar
out
or
adc
repnz
out
test
inc
frstor
mov
dec
pushf
ins
mov
or
int
push
mov
mov
adc
add
or
push
mov
xchg
aas
jp
aaa
cmc
repz
sbb
lods
(bad)
cld
add
inc
push
repnz
fwait
jne
xlat
ss
gs
fnstenv
mov
pusha
pop
or
neg
or
inc
arpl
sbb
cmps
sbb
pusha
mov
push
jp
sbb
popf
xchg
ins
mov
je
jnp
sbb
fdivr
xchg
imul
emms
and
jmp
fst
jno
mov
pop
test
adc
inc
push
sub
test
cld
jo
add
int
div
mov
pop
sbb
pop
inc
dec
ret
repnz
dec
ja
lods
ss
leave
outs
jnp
mov
in
push
leave
les
bound
mov
ja
jmp
mov
mov
fist
jl
mov
aam
inc
pusha
data16
(bad)
rol
test
loopne
rol
leave
jne
and
add
test
mov
rol
or
pop
sbb
inc
mov
mov
gs
scas
gs
and
dec
retf
push
stos
in
jge
sbb
mov
mov
mov
dec
xor
xor
or
aas
and
pop
sub
cld
jbe
jb
sub
or
mov
test
jo
dec
cmp
xor
test
pop
add
ds
ja
aaa
mov
sbb
dec
or
dec
mov
sub
jle
into
sar
imul
aas
sub
xor
aas
out
aas
aad
xchg
stos
cdq
inc
in
add
adc
lea
sbb
div
and
mov
cwde
xor
dec
sahf
and
cmps
adc
add
rcr
mov
ds
or
xor
mov
jnp
mov
mov
loope
mov
retf
mov
mov
jge
mov
cdq
in
add
mov
cwde
test
arpl
mov
add
stc
dec
xor
mov
int
mov
pusha
rcl
mov
mov
inc
cld
sbb
mov
push
pop
mov
pop
int
addr16
pop
inc
mov
mov
outs
inc
or
fsubr
scas
retf
leave
xchg
icebp
mov
aaa
mov
retf
xchg
ins
fwait
mov
mov
cmp
sar
sbb
pop
xchg
jle
mov
out
aam
push
sub
retw
repz
(bad)
cli
outs
dec
mov
out
nop
aas
mov
inc
retf
adc
cmp
repnz
inc
jnp
sub
mov
out
sub
rcr
fsubr
mov
xor
test
stos
mov
aas
test
vxorps
push
cmps
mov
inc
adc
inc
pop
add
loopne
and
into
out
pop
pop
push
test
hlt
fild
xchg
aas
sub
test
std
jecxz
rcl
xchg
fnsave
ja
jns
hlt
fdivr
mov
fs
clc
xor
mov
int3
dec
sbb
push
sar
add
and
push
push
out
xchg
imul
mov
scas
cmp
push
xor
fbstp
movs
adc
xchg
fiadd
ja
inc
sbb
fdivr
push
or
ja
jmp
mov
xor
lea
gs
jne
mov
enter
test
push
push
cmp
cwde
pop
mov
xchg
dec
pusha
cmc
dec
xchg
sub
repz
into
inc
or
adc
adc
cld
stos
aaa
test
push
push
mov
mov
cwde
cmp
inc
xchg
fcom
repnz
in
mov
xchg
add
inc
and
cmp
jp
lea
fnstenv
xlat
mov
daa
fadd
in
(bad)
push
ja
cmp
adc
inc
sti
and
xchg
push
jmp
jmp
cli
popf
cmps
push
cmp
movsx
fucomp
ror
mov
out
sbb
dec
xchg
lahf
xchg
lods
ja
mov
and
ja
in
mov
paddd
mov
dec
inc
imul
inc
cli
retf
sub
mov
inc
cwde
mov
mov
hlt
ja
mov
jbe
add
loop
icebp
outs
mov
shl
cmp
sub
leave
test
and
sbb
push
mov
(bad)
pusha
ret
outs
cmp
lahf
inc
xchg
pop
(bad)
mov
cdq
fsubr
into
mov
cli
imul
stos
cwde
pop
pop
cmps
push
int3
retf
popa
nop
int
ss
adc
sub
fadd
iret
fwait
jp
xchg
test
(bad)
lds
fs
or
sub
mov
jb
mov
(bad)
mov
lahf
repnz
lock
xchg
jns
xchg
jbe
dec
or
retf
cmps
xchg
jge
es
mov
jecxz
cmp
mov
add
shl
xchg
stos
mov
cmc
mov
aad
ud0
scas
jp
cmp
jbe
xor
xor
jmp
bound
ins
sub
push
jbe
push
mov
mov
mov
out
push
inc
mov
ror
retf
std
adc
mov
sbb
adc
cmp
or
je
lea
jbe
cld
xchg
bound
loopne
mov
neg
mov
shl
ja
neg
ja
push
xchg
xchg
out
sub
ds
fwait
xor
retf
sti
lahf
xchg
add
or
call
mov
jno
pop
sar
cwde
mov
loope
sbb
fdiv
sbb
sbb
mov
mov
xor
retf
ja
out
in
xor
es
or
ret
and
es
xlat
das
cmp
frstor
mov
xor
xchg
shr
mov
ins
mov
pop
addr16
push
ins
xchg
sahf
xor
ins
loop
dec
(bad)
sbb
xlat
push
inc
sahf
xchg
call
xchg
movups
jmp
pop
pop
leave
adc
mov
pop
or
cs
leave
inc
fst
sub
pop
adc
jmp
fwait
jb
push
ja
jp
ins
pop
jecxz
fnstsw
jnp
stos
fs
cmp
add
(bad)
into
aam
bound
aas
mov
sub
mov
add
ja
and
mov
add
mov
adc
mov
fwait
(bad)
sub
inc
inc
sbb
xor
fnsave
lock
and
clc
test
icebp
jnp
sub
push
sbb
loopne
out
(bad)
jae
mov
cmc
jae
sbb
fldenv
mov
cmp
fdivr
std
xchg
xchg
out
xor
cli
mov
mov
dec
add
mov
scas
arpl
loope
xor
sub
add
mov
and
fidivr
dec
add
movs
(bad)
movs
and
jmp
jmp
jmp
and
xchg
retf
jnp
ja
das
xchg
test
je
mov
cdq
cmps
jbe
in
cmp
leavew
lods
xchg
mov
jle
jg
fadd
pop
jmp
cmc
jbe
add
add
dec
sub
add
mov
jae
fs
xchg
push
adc
jbe
clc
fwait
adc
sti
das
lahf
test
mov
push
jge
test
mul
xor
repnz
(bad)
sub
neg
sub
mov
lods
test
pop
lock
pushf
add
gs
pop
repz
in
mov
out
(bad)
push
add
xchg
daa
pop
sar
jl
mov
jbe
out
push
or
ror
sub
cld
cmp
push
cmps
cmp
mov
ss
shl
mov
dec
add
push
push
mov
ins
push
ret
cld
pop
mov
add
jl
mov
mov
cld
iret
pop
mov
aas
jo
mov
test
mov
or
lock
enter
mov
inc
cmp
xchg
fcmovbe
stos
pop
mov
or
cli
arpl
mov
jmp
adc
and
test
add
inc
mov
inc
adc
(bad)
sbb
mov
(bad)
ss
dec
popa
fwait
sub
mov
repnz
inc
mov
aaa
std
xchg
sub
sbb
dec
cmp
test
cmp
es
std
scas
xor
fldenv
(bad)
fistp
jle
mov
push
sbb
jbe
adc
ss
push
xor
into
mov
push
jp
fsubr
nop
stos
(bad)
fidiv
mov
sahf
mov
mov
sub
inc
ret
adc
dec
push
mov
and
jp
pop
leave
fdivr
(bad)
sbb
and
mov
stos
ins
push
cmps
mov
cmp
sub
das
imul
ja
jl
shl
test
sbb
test
fidiv
xchg
or
inc
xchg
outs
xchg
mov
mov
ja
cli
add
popf
sub
into
aad
xchg
test
popa
mov
push
lahf
ins
loope
xor
pusha
push
mov
xchg
(bad)
cdq
shl
mov
rol
mov
jo
jg
xchg
jns
inc
rcr
pop
mov
movs
ins
jmp
stos
xchg
push
push
dec
into
imul
add
pop
stc
sub
jns
fild
loopne
push
je
adc
lods
movs
(bad)
pop
fistp
xor
jae
das
adc
(bad)
jbe
lds
addr16
outs
(bad)
sbb
or
inc
aad
xchg
cwde
ret
mov
int3
mov
pop
(bad)
stc
push
add
mov
addr16
lahf
out
add
stc
test
movs
jmp
aaa
cmp
push
pushf
mov
je
push
mov
xchg
xor
ret
mov
loop
retf
jbe
std
dec
xor
pushf
xadd
call
and
inc
es
inc
addr16
(bad)
lds
repz
jg
movs
aas
repz
ds
aas
frstor
arpl
push
cmp
mov
ds
jbe
rcl
xor
inc
push
ins
mov
pop
test
stc
sub
mov
dec
sub
sub
xchg
pop
jle
cmp
add
stos
jae
dec
mov
daa
and
or
inc
movs
mov
jne
jle
cli
pop
or
stos
inc
jmp
jmp
xchg
jbe
add
pop
sbb
scas
add
jge
push
rcr
pop
cmps
scas
mov
adc
jb
pop
sti
jmp
dec
mov
test
call
fmul
push
jbe
or
js
mov
cmp
pop
add
repz
jbe
retf
iret
fistp
xor
jbe
lock
neg
jbe
xor
pop
(bad)
mov
push
lea
inc
fwait
mov
adc
fadd
bound
and
nop
mov
fmul
setge
int3
pop
fwait
cmp
nop
jg
cmp
pushf
dec
inc
out
sgdtd
ja
inc
ja
frstor
pop
adc
xor
jecxz
pop
sbb
mov
out
ds
stc
test
adc
loopne
addr16
push
mov
aaa
ja
loopne
aas
aaa
jl
retf
cwde
mov
xor
xor
shl
aam
mov
leave
or
inc
icebp
push
sbb
push
cmp
jg
push
mov
adc
fidivr
(bad)
(bad)
mov
add
enter
(bad)
hlt
sub
sub
add
cmp
lea
inc
mov
into
xor
jae
jmp
sub
scas
sar
inc
pop
xchg
fisubr
xchg
cmc
mov
leave
jp
(bad)
mov
sub
not
xchg
xchg
and
mov
jmp
sbb
inc
fidivr
push
jno
ins
inc
mov
sbb
sub
int
scas
add
inc
das
mov
outs
ret
sar
aas
sbb
add
call
mov
inc
add
jg
dec
cmp
mov
das
xor
stos
popf
lods
add
push
fmul
add
xchg
out
add
mov
movs
mov
cmc
(bad)
xor
or
pop
add
push
inc
pop
xchg
jne
mov
popf
xor
xor
in
mov
cld
push
xchg
xchg
pop
mov
movs
aad
xor
xchg
mov
sti
sbb
(bad)
fiadd
mov
(bad)
outs
retf
fidivr
cmps
ret
cli
std
pop
(bad)
(bad)
int3
jle
add
in
stos
adc
mov
push
xor
icebp
sub
call
sbb
push
xchg
xchg
stc
(bad)
stos
push
(bad)
fwait
sbb
cmp
cmp
fs
xchg
mov
inc
cwde
fdiv
mov
xlat
js
fld
push
cmps
xchg
(bad)
movs
push
jo
mov
lahf
and
xor
fwait
xor
mov
outs
xchg
call
jecxz
ror
mov
sti
scas
out
cmp
das
retf
jo
xchg
lock
jns
sub
fcmovb
mov
or
jp
int3
scas
jbe
fild
jg
sbb
ins
mov
in
shl
sub
dec
mov
jmp
das
dec
xchg
add
jbe
or
xor
and
les
fnstcw
jo
cmps
mov
or
push
in
or
mov
dec
mov
pusha
sbb
(bad)
mov
inc
lods
pop
repnz
mov
mov
cmp
mov
xlat
or
or
daa
mov
and
jg
sub
push
mov
xchg
sar
daa
and
stos
xchg
loop
mov
shr
sbb
mov
cli
xor
push
(bad)
jbe
inc
stos
je
mov
sub
pop
xchg
cmp
jmp
(bad)
sti
and
xchg
xchg
xchg
pop
(bad)
mov
sti
jo
ret
jmp
(bad)
xor
xor
repz
mov
mov
mov
lea
(bad)
mov
into
test
add
imul
jae
mov
sar
xchg
mov
mov
call
std
pop
bound
imul
or
pop
js
sub
in
ins
mov
cmp
or
addr16
push
sub
stc
aam
add
pop
or
not
adc
xchg
mov
add
mov
adc
mov
mov
xor
aam
jbe
(bad)
out
xor
jnp
aad
into
mov
mov
xchg
in
cwde
jbe
sti
jne
mov
adc
ins
mov
or
mov
xor
(bad)
xchg
or
mov
inc
ja
xchg
call
dec
adc
and
xchg
jbe
repz
call
adc
and
iret
mov
mov
sub
nop
imul
xchg
pop
add
(bad)
outs
sub
lds
and
jbe
dec
lods
xchg
inc
mov
add
and
ret
leave
jno
add
loop
xlat
mov
(bad)
sub
adc
xor
adc
push
leave
xor
sub
mov
sub
test
jno
jne
mov
mov
jmp
inc
xchg
hlt
fdivr
pop
push
out
mov
es
dec
jo
or
inc
add
adc
push
pop
enter
mov
(bad)
fidivr
inc
or
outs
dec
ja
sub
int
mov
sub
cmp
pop
mov
push
jg
cdq
sar
sbb
and
mov
pop
xchg
adc
rcr
sbb
cmp
jge
aad
sar
pusha
sub
sub
arpl
push
mov
adc
jp
add
aad
stos
mov
mov
mov
cmc
mov
and
xchg
clc
pop
mov
adc
dec
mov
sti
test
lods
xchg
sub
jbe
mov
mov
mov
inc
call
and
retf
adc
and
setp
clc
je
xor
inc
mov
jbe
jge
and
mov
adc
out
test
addr16
imul
ja
inc
ja
outs
push
inc
mov
mov
leave
jae
mov
inc
jb
mov
mov
pop
enter
xchg
jae
arpl
push
repz
push
mov
mov
jb
add
mov
and
dec
loopne
imul
bound
(bad)
jns
(bad)
or
xchg
push
imul
rcl
cmps
sti
mov
jmp
mov
ss
arpl
inc
adc
(bad)
add
out
dec
xor
xor
fisub
xchg
pop
jecxz
xor
addr16
in
mov
ret
lahf
cmp
sahf
(bad)
mov
mov
ins
lods
movs
repz
cld
mov
cld
sub
mov
fnstenv
not
jo
dec
jmp
pop
ja
cmp
add
cdq
in
gs
movs
div
loope
and
adc
sbb
(bad)
and
stos
dec
idiv
test
shr
mov
pop
adc
pop
std
idiv
inc
or
(bad)
mov
dec
dec
and
cmps
out
das
mov
imul
pop
lahf
mov
push
das
ins
test
xchg
push
pop
xchg
retf
dec
in
fnsave
jbe
ja
sub
cmp
xchg
jmp
cld
and
ror
fs
jbe
je
aam
pushf
imul
jecxz
nop
mov
or
push
sbb
mov
mov
test
dec
pop
mov
xchg
retf
outs
jmp
rcl
mov
sahf
inc
xor
test
mov
mov
fsubr
xor
clc
arpl
and
pop
mov
mov
les
push
mov
pop
std
cmp
loopne
xchg
mov
pop
xchg
ds
out
push
outs
ja
jbe
mov
js
jne
sahf
adc
or
xchg
push
add
stc
mov
fisttp
out
mov
sbb
shr
push
and
ds
mov
cmp
xor
xchg
xor
ins
shl
mov
and
bound
pop
gs
mov
add
jge
into
or
dec
cwde
push
jmp
cwde
les
inc
xchg
xchg
fsubp
push
ja
and
loope
int3
rcl
mov
pop
pop
cdq
rol
and
or
add
dec
mov
xchg
jmp
cmp
push
lahf
pop
fld
adc
mov
imul
les
xchg
mov
and
jbe
(bad)
int
push
aad
clc
shl
cmps
push
and
inc
cld
mov
int3
stc
cmp
test
jbe
xor
dec
arpl
xchg
mov
and
inc
aas
(bad)
fdivr
outs
mov
push
rep
add
adc
push
movs
adc
out
fadd
rol
es
jns
imul
cmp
or
xlat
xchg
push
mov
rcr
xchg
pop
sbb
lods
(bad)
push
adc
inc
cli
call
enter
sti
test
ss
cld
mov
mov
push
jno
mov
sbb
adc
repz
loope
test
and
stc
fmulp
mov
test
dec
fsubr
movs
inc
sti
sub
xor
es
xchg
mov
mov
sub
pop
jno
mov
mov
cli
xor
mul
add
pop
cs
adc
adc
sti
or
fldpi
les
sub
cmp
movs
jbe
xchg
xor
mov
push
outs
mov
mov
ret
cdq
mov
push
sbb
js
mov
icebp
mov
mov
retf
data16
sub
(bad)
jbe
ds
cmp
shl
std
test
std
inc
push
xor
lock
mov
call
inc
adc
jne
inc
mov
or
pop
cli
xchg
add
cdq
or
adc
xchg
inc
jp
(bad)
addr16
mov
imul
test
test
ins
popa
mov
mov
call
mov
shl
clc
aad
(bad)
sub
lahf
test
pusha
test
push
in
xor
enter
stc
shr
test
or
pusha
ffree
fwait
js
mov
(bad)
cmp
jnp
in
cmps
push
data16
mov
mov
add
stos
out
mov
push
pushw
mov
or
iret
call
push
ja
repz
popa
cmp
in
jge
add
test
xchg
jle
and
mov
(bad)
ja
out
cld
mov
addr16
add
pop
dec
ds
and
jg
and
fst
aaa
(bad)
icebp
sbb
xchg
xor
loope
pop
mov
inc
inc
mov
pop
xlat
lods
inc
mov
das
mov
fcmovnb
add
jbe
xchg
pop
xchg
ficomp
mov
in
push
ja
ss
shr
test
aaa
lahf
rcl
mov
xchg
(bad)
out
out
es
mov
inc
mov
cmp
push
mov
js
sub
aas
ja
sub
lods
jne
jge
pusha
and
and
fs
shl
test
out
aam
cmp
xchg
pop
out
lea
je
or
mov
dec
das
imul
adc
inc
mov
xor
loopne
ja
jno
aaa
popa
test
inc
mov
cld
mul
cmp
mov
sbb
add
jecxz
mov
sar
xchg
jge
ss
pop
stos
cmp
in
sahf
js
xchg
repnz
adc
and
push
lahf
or
or
pushf
mov
cmps
fs
pushf
sbb
lods
push
cdq
mov
jbe
stc
shl
push
mov
jle
mov
inc
sub
jg
mov
add
mov
xchg
cmps
push
loope
adc
sbb
sub
inc
les
jl
cmp
(bad)
mov
mov
cdq
push
shr
out
mov
jmp
mov
cmp
lods
jno
test
jg
out
push
ret
ret
mov
jge
sbb
xor
pop
pop
push
stc
sbb
sti
pop
in
xor
enter
mov
mov
xchg
xor
lahf
pop
mov
mov
stos
idiv
jle
(bad)
jecxz
sar
inc
mov
fnclex
in
sub
xlat
les
fild
mov
cdq
push
xchg
sbb
or
push
retf
mov
mov
xchg
aas
retf
sub
fsub
mov
xlat
add
mov
enter
xchg
pushf
mov
ss
(bad)
sub
icebp
pop
pop
inc
mov
out
mov
test
jle
sbb
xchg
es
jbe
xor
je
int3
jmp
mov
mov
pop
arpl
imul
cmps
jno
mov
mov
cld
lock
int
mov
fidivr
lahf
mov
dec
fcom
icebp
sbb
inc
mov
mov
stos
(bad)
iret
sbb
jl
add
addr16
push
lahf
rcr
cmp
jp
mov
popa
mov
xchg
aaa
sub
addr16
add
jg
adc
cmps
xchg
loop
sar
movs
fadd
scas
out
fiadd
xchg
jmp
mov
popf
jo
aas
ja
lods
js
jns
(bad)
imul
add
jp
mov
rcl
mov
ss
test
cmps
sbb
jl
int
xchg
ret
mov
pusha
ror
fdivr
adc
xchg
fcomp
ins
jne
jbe
pop
dec
mov
jmp
in
rcl
pop
or
in
xor
test
jns
jp
mov
push
cmp
mov
pop
sti
gs
dec
std
cld
lea
sub
and
push
push
xor
mov
jns
jae
push
xchg
(bad)
mov
fld
sbb
ret
sbb
ss
mov
jno
inc
add
sbb
movs
inc
push
aas
jnp
cmp
jecxz
xchg
retf
push
frstor
mov
scas
(bad)
imul
xchg
push
push
xor
pop
cwde
lods
mov
mov
mov
xor
gs
je
ja
cmps
push
add
push
lods
int3
mov
mov
(bad)
mov
mov
das
or
cmp
adc
cmp
or
ja
or
pop
mov
(bad)
popf
outs
loop
arpl
ja
lea
ficomp
ins
(bad)
loopne
nop
mov
xor
mov
out
dec
(bad)
adc
mov
cmp
xor
rol
cli
retf
jbe
add
popa
popf
inc
mov
jge
mov
sbb
fs
xor
xchg
lods
mov
rcl
sbb
outs
fstp
sbb
inc
aad
stos
jg
retf
mov
out
out
xchg
lods
popa
mov
hlt
iret
movs
lea
xchg
(bad)
mov
ja
(bad)
jg
test
ss
or
xchg
dec
test
push
mov
mov
stos
jmp
jmp
push
jl
xchg
inc
xchg
xor
jo
and
test
adc
cmp
rcl
sahf
iret
shr
jb
nop
cmp
mov
(bad)
cwde
mov
jns
jne
rol
jp
add
and
cmc
lock
pop
sbb
idiv
inc
leave
pop
jae
dec
xchg
lods
loopne
cli
jmp
xchg
pop
jns
add
daa
shr
leave
int
mov
jp
iret
aad
pop
cmps
cmp
rol
pop
xchg
push
mov
xor
mov
mov
std
popf
mov
mov
jno
xor
push
daa
mov
xchg
cmp
bound
pop
les
gs
outs
loopne
stc
scas
fisttp
mov
into
int3
idiv
sub
shl
nop
and
mov
adc
stos
mov
mov
add
out
aam
je
repz
xor
in
mov
stc
repz
push
movs
in
(bad)
inc
dec
lahf
jl
push
dec
btr
xchg
pop
mov
mov
mov
sub
in
push
cmp
fdiv
cmp
icebp
cmp
imul
fwait
imul
push
fidiv
les
mov
xchg
daa
ror
mov
(bad)
and
stc
lods
mov
or
xor
clc
xchg
fldenv
or
imul
inc
mov
jne
cmps
jl
xchg
mov
ficom
mov
scas
(bad)
and
dec
mov
jae
cmp
popa
jp
ins
or
xor
pop
push
cmc
pop
out
mov
sahf
push
xchg
rcl
ss
mov
(bad)
(bad)
push
push
sbb
test
xchg
(bad)
cmp
pop
mov
pop
dec
cdq
in
out
jns
jle
call
sub
je
inc
arpl
cli
push
ja
mov
xchg
out
push
ret
or
rol
or
push
dec
ret
xor
stc
mov
jg
int3
fs
mov
les
inc
xchg
call
pop
jno
push
in
pop
add
(bad)
jle
jnp
ja
mov
rcr
std
cmps
mov
loopne
mov
imul
sar
xor
push
jo
mov
pop
movs
pop
adc
popa
mov
add
je
std
aad
jbe
mov
inc
adc
ror
fldcw
test
xchg
pop
mov
mov
data16
xlat
mov
push
sbb
mov
mov
jbe
stos
jl
add
(bad)
push
idiv
pop
cmp
cmp
inc
test
mov
cmc
popf
push
into
cdq
fidivr
cmp
push
mov
xor
cmc
jge
dec
or
adc
pop
je
inc
sar
sub
xchg
push
sbb
ss
(bad)
dec
jbe
ror
test
sub
call
loope
mov
loope
inc
fiadd
add
mov
lods
mov
je
mov
mov
scas
xor
das
dec
arpl
mov
cmp
sbb
jnp
xchg
cmp
lock
and
test
ja
mov
xor
inc
pop
cmp
cmp
sar
adc
int3
aas
cs
scas
in
sub
ins
cmp
imul
inc
mov
sbb
adc
ins
arpl
xor
mov
cmp
mov
je
lods
and
push
mov
dec
push
pop
pop
cmp
(bad)
sub
mov
shl
mov
dec
push
in
jbe
sub
retf
ins
mov
mov
movs
pop
test
add
mov
rol
add
jp
cs
stos
and
adc
int
adc
jmp
popf
ins
hlt
out
ficomp
xchg
jbe
out
in
cmp
cmp
dec
gs
stos
ins
ds
(bad)
dec
iret
(bad)
jae
xchg
mov
and
aam
addr16
push
aad
sar
push
call
icebp
mov
out
movs
inc
sub
adc
ror
sub
rcl
pop
(bad)
arpl
popf
ja
jbe
lods
fdivr
mov
add
dec
mov
retf
fnsave
jbe
or
add
jp
aad
adc
fsubrp
jp
ins
xor
jnp
xchg
push
popf
dec
and
enter
mov
idiv
(bad)
push
lea
xchg
mov
cmp
mov
jbe
xor
mov
retf
lock
push
call
les
daa
not
(bad)
popa
mov
add
xchg
cmp
sub
inc
inc
mov
cmp
cdq
hlt
fwait
xor
imul
dec
fstp
xchg
xchg
sbb
xchg
dec
or
test
mov
call
mov
and
stc
push
(bad)
pop
mov
mov
call
adc
mov
stos
arpl
rol
test
pop
fs
retf
(bad)
dec
(bad)
xor
mov
xchg
ja
and
iret
(bad)
mov
ins
fisttp
test
inc
movs
les
idiv
(bad)
fimul
jbe
push
inc
jnp
pop
jae
mov
(bad)
bound
mov
(bad)
sbb
dec
jl
mov
mov
rcl
jbe
adc
mov
adc
jbe
ja
or
or
pushf
test
addr16
popa
mov
xor
pushf
mov
dec
jne
fs
neg
ins
jl
(bad)
mov
ins
sbb
add
not
stos
inc
inc
bound
adc
cwde
push
push
mov
sar
mov
mov
outs
mov
test
sbb
pop
mov
out
daa
sub
cmc
cmps
mov
and
push
add
jbe
out
sbb
sub
mov
lea
stos
jns
sbb
cmp
sbb
data16
or
lahf
xlat
jbe
sbb
arpl
jp
ds
cmp
aas
push
mov
mov
and
mov
adc
push
pop
jnp
cmp
or
push
push
ins
xchg
push
jb
pop
stc
cs
aad
inc
pop
ins
mov
mov
xor
jg
jb
ja
out
in
dec
fcom
cmc
pop
sub
pop
and
gs
jge
test
sub
mov
jmp
fwait
mov
test
mov
sahf
out
cmc
enter
enter
retf
xchg
dec
lods
jbe
sub
jns
leave
popa
mov
aaa
and
hlt
inc
shl
adc
pop
mov
test
dec
fwait
sar
cmps
jp
push
mov
mov
call
dec
push
bound
addr16
mov
retf
and
rsqrtps
std
or
jbe
ds
outs
test
in
mov
call
shl
popf
mov
ins
push
or
mov
and
daa
and
ds
jl
outs
scas
cmp
int3
leave
ss
pop
ffree
sar
push
or
jl
stos
hlt
aam
ror
pop
cmps
pop
cmp
mov
mov
jb
fstp
out
mov
mov
popf
mov
outs
dec
and
inc
mov
mov
aaa
pop
aas
cmc
mov
pop
dec
ja
mov
popa
jbe
pop
xchg
and
lds
xchg
jg
ss
popf
inc
imul
and
dec
jmp
jns
sbb
test
push
xlat
mov
sub
jbe
jmp
lds
xchg
pop
jge
ja
ja
mov
shl
sub
ins
xchg
rol
jne
int
(bad)
inc
imul
inc
aad
cmp
cmps
pop
jae
jbe
pop
dec
xchg
cwde
xor
fs
inc
pop
ja
clc
(bad)
jecxz
fnsave
mov
mov
rcr
stc
jns
les
pop
adc
out
cmp
pop
adc
aad
jle
ficomp
xor
mov
cli
xor
test
and
xchg
sbb
pop
cmp
outs
mov
leave
adc
xor
push
dec
dec
std
or
sbb
pushf
cmp
pop
daa
jmp
rcr
mov
or
popa
mov
in
pop
in
or
cmp
shl
test
es
add
lods
adc
xchg
jmp
sub
ficomp
arpl
mov
jg
sub
leave
dec
mov
jg
push
fs
ja
sub
push
add
jo
pop
mov
pusha
dec
push
mov
addr16
std
push
sub
retf
sahf
cli
mov
in
mov
bound
stos
or
adc
push
mov
xor
arpl
or
jg
cdq
fucomi
pop
aas
test
mov
lods
daa
retf
inc
xlat
jnp
add
les
ret
stos
push
movs
dec
out
pop
inc
mov
pop
mov
sbb
ja
sub
inc
cmps
int3
cdq
fistp
jns
shl
icebp
stos
jne
scas
ret
adc
test
jnp
push
ja
push
dec
push
inc
jle
mov
sahf
add
adc
mov
fs
xchg
inc
sbb
cmp
mov
xchg
pop
movd
push
adc
mov
outs
je
(bad)
jns
and
xchg
loop
push
out
in
pop
and
push
lea
adc
mov
pop
jno
inc
xchg
pop
xchg
retf
adc
xchg
int
jbe
arpl
add
(bad)
dec
jp
jecxz
or
mov
(bad)
sar
fcmovbe
fcmove
ja
repnz
push
(bad)
pop
lock
scas
push
adc
mov
scas
cwde
jcxz
popf
push
adc
push
push
out
cs
and
scas
sbb
test
std
sub
jno
mov
inc
xchg
xchg
add
cmps
xor
jp
sbb
dec
aas
js
into
cwde
nop
jl
leave
sub
fdiv
fdivr
repz
dec
mov
cmp
mov
cdq
adc
jnp
(bad)
dec
imul
out
inc
and
sub
test
mov
pop
mov
xor
add
cwde
xchg
xchg
(bad)
scas
xchg
jbe
xor
and
retf
lahf
pop
jbe
jbe
fwait
cmps
inc
(bad)
leave
outs
retf
pop
ret
push
adc
sub
fdivr
or
xchg
ja
out
cld
imul
sar
ret
xlat
mov
shl
fs
ds
cmp
or
mov
retf
hlt
push
test
xchg
std
mov
out
outs
mov
(bad)
xchg
mov
lods
iret
loope
and
xchg
scas
pop
aas
and
arpl
adc
mov
mov
outs
ror
mov
cmc
outs
dec
lods
or
stc
add
lods
cmps
and
mov
into
ds
add
fdivr
int
pop
cdq
pop
ret
imul
pop
push
je
out
mov
mov
test
xchg
push
jge
movs
xor
xchg
retf
push
xor
mov
dec
mov
aam
popf
outs
jg
jb
or
pop
add
jle
sbb
daa
test
mov
es
mov
push
inc
repz
ja
and
lods
xor
idiv
xlat
sub
push
push
(bad)
mov
mov
xchg
jae
aaa
mov
inc
pop
(bad)
in
adc
jbe
ret
sub
je
lea
and
jg
(bad)
fisubr
ins
push
jecxz
mov
pushf
lock
push
mov
dec
mov
fmul
mov
mov
push
pop
cmp
add
and
xchg
mov
outs
cmps
mov
mov
aam
out
xchg
mov
out
and
ja
dec
aad
xor
cmp
xchg
ja
aaa
adc
cmp
jmp
test
or
mov
dec
fst
sbb
xchg
mov
xchg
(bad)
data16
or
mov
mov
inc
dec
(bad)
jge
sbb
nop
or
mov
mov
push
jmp
inc
ja
cdq
cmp
daa
les
adc
addr16
mov
(bad)
idiv
xor
cmp
adc
xchg
and
inc
mov
and
cmp
dec
mov
jno
imul
bnd
mov
test
cs
jns
cmp
fwait
jo
imul
inc
test
cli
cmp
loopne
mov
mov
loopne
xchg
jp
popa
jge
test
mov
or
aaa
xchg
inc
cmp
mov
mov
popf
cmps
(bad)
call
ja
inc
repnz
adc
fistp
xchg
add
leave
scas
fidivr
xor
sbb
(bad)
adc
test
icebp
inc
shl
pop
cs
pop
xchg
xchg
jbe
jle
push
jge
push
out
mov
loop
(bad)
cmp
jmp
cwde
rol
rcr
test
jmp
pop
sub
cdq
fmul
fdivr
add
ret
jo
or
push
mov
in
xchg
ins
mov
test
xor
jge
neg
stos
pop
dec
mov
dec
mov
mov
jmp
pop
cmc
icebp
jp
js
mov
mov
mov
inc
fxch
addr16
jbe
inc
out
aas
cmps
mov
jb
inc
loope
mov
enter
or
xor
add
std
pop
xchg
fs
cmp
jne
cmp
xchg
dec
or
xor
and
out
inc
mov
movs
pop
jl
out
mov
cmp
jne
pop
push
in
aad
xchg
fnsave
mov
jbe
jmp
in
and
cmp
das
mov
mov
push
mov
nop
xor
out
adc
(bad)
sti
lods
jmp
mov
push
orps
ins
ins
mov
call
xor
xchg
and
(bad)
xor
xchg
lock
in
sti
mov
cmps
repz
(bad)
sar
jmp
mov
mov
pop
push
dec
xor
sti
fstp
movs
aam
sub
retf
retf
test
mov
(bad)
push
mov
mov
call
push
fiadd
cmp
xchg
cmp
cmp
test
cmp
xor
mov
rol
add
aam
mov
retf
out
push
xor
jmp
call
cs
lahf
cmc
mov
sbb
call
cmp
xchg
xchg
scas
xchg
xor
(bad)
adc
xchg
ss
fimul
lods
adc
mov
sbb
jnp
repz
dec
test
push
xchg
cmp
sbb
pop
js
jo
pusha
iret
mov
sti
xchg
fisubr
add
sub
aaa
sahf
dec
or
addr16
dec
sub
push
pop
sar
pop
mov
push
adc
sbb
or
lds
ds
das
push
int3
jl
mov
scas
and
enter
fiadd
inc
lock
jne
jns
into
sqrtps
clc
mov
push
test
cmp
lods
movs
cmp
xor
cmp
mov
movs
cli
or
xchg
sahf
(bad)
jmp
add
mov
add
pop
xchg
push
daa
(bad)
cmp
(bad)
xchg
enter
fisubr
xchg
aad
int
sti
xchg
sar
push
pop
(bad)
adc
cmps
dec
cmp
pop
jg
mov
in
add
jg
test
and
ja
jmp
lds
hlt
(bad)
lock
out
mov
push
bound
cmps
sahf
jbe
shl
sub
test
sub
mov
and
mov
pushf
adc
jmp
ret
jbe
bound
in
xchg
mov
xchg
aad
adc
sub
leave
(bad)
int
test
jmp
and
ja
adc
sbb
add
daa
std
jg
jnp
outs
mov
adc
in
sar
iret
pop
mov
jbe
xchg
jnp
xchg
jns
or
or
(bad)
ds
mov
jbe
and
sahf
xchg
mov
pop
xchg
les
jbe
inc
ins
xchg
mov
out
call
sbb
xchg
jmp
mov
icebp
dec
mov
cmp
stc
mov
mov
retf
imul
add
pop
add
pushf
sub
pop
ja
and
cmp
jg
fisttp
mov
push
cdq
jns
dec
fadd
cmp
xchg
xor
mov
js
je
adc
mov
cmp
xchg
mov
pushf
test
add
data16
rol
ret
fcmovnb
test
loop
sub
in
mov
test
jmp
js
lock
(bad)
pop
or
daa
pop
mov
add
sub
bound
sbb
mov
scas
popf
add
mov
adc
cmp
repz
push
out
out
mov
sar
sub
ja
test
add
fnstcw
adc
or
mov
jg
cli
push
lahf
cmp
mov
pushf
bnd
dec
(bad)
icebp
dec
test
movs
hlt
gs
mov
into
lods
int
test
jle
add
repz
aad
xchg
and
lock
add
pop
mov
and
mov
push
pushfw
out
sub
xchg
push
xor
pop
xor
xchg
or
cmc
addr16
cmp
cmp
in
sbb
imul
dec
pop
test
popa
push
adc
mov
adc
sub
call
xor
push
push
or
mov
stc
sbb
mov
sub
jae
add
mov
jmp
pop
inc
mov
adc
add
mov
jecxz
jne
neg
fld
mov
cmps
out
jecxz
mov
rcl
cmps
sub
daa
cmp
aas
dec
push
push
and
or
push
mov
pop
leave
hlt
xchg
mov
pusha
outs
sbb
loop
mov
dec
test
dec
cmc
out
test
or
ja
xor
xor
mov
fcom
adc
jns
nop
xchg
pop
jg
in
ins
jo
dec
mov
stos
push
fwait
jmp
fs
push
popa
mov
aas
out
(bad)
and
dec
hlt
mov
(bad)
jns
ins
mov
jbe
mov
test
addr16
add
xor
sbb
xchg
pushf
mov
and
movs
mov
jle
shl
cld
fs
test
sbb
jbe
ret
or
das
or
dec
mov
fstp
adc
xchg
fisubr
shr
stc
mov
jp
repz
sar
adc
(bad)
out
scas
sub
iret
mov
daa
push
mov
mov
adc
jecxz
imul
stos
sbb
es
data16
test
cmps
lods
mov
fldcw
jp
mov
test
jmp
jbe
pop
aas
test
mov
call
mov
sbb
movs
xlat
int3
sbb
mov
outs
and
or
mov
movs
push
jbe
mov
rcl
repnz
dec
ss
neg
and
loope
jp
cmp
test
dec
mov
arpl
enter
dec
ret
inc
mov
addr16
imul
sbb
andps
stos
lea
(bad)
mov
xor
imul
iret
inc
inc
mov
add
lods
dec
imul
ror
jl
push
(bad)
fisttp
test
jmp
mov
sbb
stos
ret
out
jg
out
loopne
mov
jge
inc
xchg
jbe
fstp
or
sbb
shrd
push
into
call
shr
fcomp
rcl
ja
sub
out
push
and
mov
addr16
gs
mov
dec
imul
or
jo
fdivr
mov
xchg
repz
mov
js
cdq
and
enter
xchg
adc
sub
neg
jno
push
adc
daa
mov
jle
push
(bad)
mov
jg
cli
xor
jbe
pop
mov
ins
mov
push
sbb
fwait
mov
outs
xor
jbe
scas
sub
aas
inc
(bad)
or
mov
jmp
cmc
pop
fwait
mov
sti
repz
jbe
jecxz
pop
icebp
jnp
lds
inc
(bad)
dec
lea
or
retf
or
cmp
pop
sbb
into
push
lock
retf
test
cmp
in
xchg
pop
ret
stos
jne
pop
add
in
push
inc
push
and
adc
outs
cs
rcl
je
mov
sbb
xchg
jecxz
or
jg
jbe
pusha
cs
retf
mov
cdq
not
lea
dec
je
stc
sub
and
das
add
mov
mov
pop
mov
out
push
fimul
fadd
cmp
ss
pop
psubd
cmp
ror
and
pop
mov
dec
(bad)
push
cdq
int3
rol
cmp
xchg
mov
push
mov
push
cmp
dec
enter
push
mov
cmp
dec
test
sbb
xchg
push
inc
pop
xchg
or
outs
xchg
into
(bad)
ret
push
ror
mov
pushf
scas
fstp
cmp
pop
jae
js
out
mov
aas
mov
mov
jne
pop
int
cmp
or
xor
into
mov
xchg
addr16
outs
cld
(bad)
dec
push
mov
mov
mov
sub
(bad)
(bad)
jae
mov
sub
mov
add
mov
push
mov
mov
push
sub
mov
push
push
push
push
call
add
push
mov
mov
mov
call
test
je
sub
mov
mov
mov
mov
mov
mov
lea
push
push
call
mov
cmp
jne
xor
push
push
push
push
push
call
add
call
mov
xor
mov
test
je
mov
sub
test
jne
push
push
push
call
add
mov
push
call
add
push
call
add
mov
mov
mov
sub
cmp
jne
mov
sub
mov
mov
mov
sub
mov
cmp
je
sub
mov
mov
cmp
jne
sub
cmp
je
cmp
je
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
cmp
je
call
lea
push
call
push
push
push
push
push
call
add
push
call
mov
mov
push
call
push
call
add
push
call
sub
mov
push
push
push
call
add
mov
xor
mov
mov
mov
cmp
jne
xor
cmp
jne
mov
add
test
jne
push
push
call
add
mov
push
push
push
push
call
add
add
mov
cmp
je
cmp
jne
mov
sub
test
jne
mov
add
mov
push
push
push
call
add
call
call
test
je
push
push
push
call
add
mov
call
mov
xor
mov
cmp
je
push
push
push
push
push
call
add
cmp
jne
mov
mov
test
jne
mov
mov
add
push
push
push
call
add
cmp
je
mov
cmp
je
push
call
add
mov
push
push
push
push
push
call
add
mov
mov
push
push
push
push
push
call
add
mov
mov
push
push
push
push
call
add
mov
cmp
je
add
mov
cmp
jne
mov
xor
mov
mov
push
push
push
call
add
mov
mov
mov
mov
mov
mov
cmp
je
mov
sub
mov
push
push
push
push
push
call
add
lea
and
cmp
jne
add
mov
mov
xor
cmp
je
mov
push
mov
push
mov
mov
mov
call
mov
add
mov
push
push
push
push
call
add
mov
and
call
mov
shr
mov
mov
add
cmp
je
xor
test
jne
sub
cmp
je
xor
mov
mov
cmp
jne
sub
mov
cmp
jne
test
je
mov
push
push
push
push
call
cmp
je
and
mov
mov
push
push
push
push
push
call
add
mov
mov
xor
mov
sub
call
push
push
push
call
or
call
push
push
push
call
add
cmp
je
mov
add
call
mov
mov
mov
sub
cmp
je
mov
cmp
je
mov
sub
test
je
xor
mov
mov
mov
call
push
push
call
add
cmp
je
cmp
jne
add
mov
mov
mov
cmp
jne
mov
mov
sub
push
push
push
push
push
call
add
mov
xor
push
push
push
push
call
add
test
jne
push
push
call
add
mov
mov
pop
mov
pop
push
push
push
call
add
pop
add
mov
mov
cmp
jne
mov
mov
mov
mov
cmp
je
sub
cmp
je
cmp
jne
mov
sub
test
je
xor
mov
cmp
je
sub
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
push
push
push
push
call
add
push
push
call
add
push
call
cmp
je
mov
push
push
push
push
push
call
add
mov
mov
sub
push
push
push
call
add
call
cmp
jne
mov
cmp
je
or
cmp
jne
xor
mov
cmp
je
mov
test
jne
test
je
sub
test
jne
mov
or
mov
mov
cmp
je
xor
mov
cmp
je
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
add
mov
mov
mov
mov
add
mov
mov
call
mov
call
mov
cmp
jne
test
jne
sub
mov
cmp
je
mov
sub
mov
mov
mov
cmp
je
mov
mov
and
mov
mov
push
push
push
push
call
add
cmp
jne
call
call
mov
call
mov
add
mov
cmp
jne
xor
mov
mov
mov
cmp
je
mov
mov
add
cmp
je
cmp
jne
mov
mov
sub
mov
push
push
push
push
push
call
add
mov
mov
call
add
mov
cmp
je
mov
xor
mov
mov
mov
cmp
jne
and
mov
cmp
jne
mov
mov
xor
mov
call
mov
jmp
sub
mov
mov
xor
push
push
push
push
call
add
mov
sub
mov
add
sub
mov
mov
call
push
call
mov
mov
or
je
cmp
jne
mov
add
mov
add
sub
mov
lea
and
mov
cmp
jne
and
mov
mov
cmp
jne
add
mov
test
jne
mov
xor
mov
mov
cmp
jne
cmp
jne
xor
mov
mov
cmp
jne
add
mov
mov
cmp
je
sub
mov
cmp
je
sub
mov
mov
inc
or
mov
mov
mov
cmp
je
sub
mov
mov
mov
mov
test
je
mov
sub
cmp
je
cmp
je
cmp
jne
sub
test
jne
mov
mov
mov
cmp
je
sub
mov
cmp
je
mov
cmp
je
sub
mov
mov
mov
mov
mov
mov
mov
cmp
je
sub
cmp
je
mov
mov
cmp
je
mov
mov
mov
sub
add
cmp
jne
xor
mov
test
jne
sub
cmp
je
add
mov
cmp
je
sub
mov
mov
cmp
jne
or
mov
cmp
jne
cmp
je
cmp
je
cmp
je
add
mov
mov
mov
mov
sub
add
push
call
add
push
call
add
mov
sub
mov
mov
cmp
je
cmp
je
sub
mov
cmp
je
mov
cmp
jne
sub
mov
mov
mov
cmp
je
mov
mov
test
jne
mov
cmp
jne
mov
cmp
jne
xor
cmp
je
mov
xor
mov
cmp
jne
xor
mov
cmp
jne
mov
add
cmp
jne
mov
mov
cmp
je
mov
mov
mov
cmp
jne
cmp
jne
mov
add
test
je
xor
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
je
add
cmp
je
and
mov
mov
cmp
jne
sub
mov
mov
mov
push
push
push
push
call
add
mov
pop
sub
mov
mov
push
push
push
push
call
add
pop
push
push
push
call
add
pop
sub
mov
mov
mov
push
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
push
mov
add
test
jne
call
push
mov
cmp
je
push
push
push
push
push
call
add
mov
add
mov
cmp
je
push
push
call
add
rdtsc
mov
add
mov
mov
cmp
je
sub
cmp
je
xor
cmp
je
mov
cmp
jne
mov
sub
cmp
je
add
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
push
call
add
and
test
je
xor
cmp
jne
xor
cmp
je
mov
xor
mov
mov
push
push
push
call
add
push
push
call
add
mov
mov
rdtsc
mov
xor
mov
cmp
jne
mov
add
mov
cmp
jne
mov
mov
mov
mov
mov
xor
cmp
je
mov
add
cmp
jne
mov
mov
sub
cmp
je
cmp
jne
or
mov
sub
mov
mov
mov
and
mov
mov
mov
mov
mov
pop
mov
cmp
je
mov
sub
cmp
je
and
mov
cmp
je
mov
test
je
mov
xor
mov
mov
cmp
je
mov
sub
mov
cmp
jne
mov
pop
add
cmp
je
mov
pop
mov
xor
test
jne
mov
cmp
jne
sub
mov
cmp
je
sub
cmp
je
mov
mov
or
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
push
call
add
push
add
push
push
push
push
call
add
push
mov
push
push
push
push
call
add
push
mov
call
mov
mov
add
push
push
call
add
cmp
jne
mov
mov
cmp
jne
mov
mov
add
mov
mov
mov
sub
mov
mov
mov
mov
cmp
je
mov
dec
cmp
je
mov
mov
sub
mov
neg
xor
mov
mov
cmp
je
add
cmp
je
mov
cmp
jne
mov
test
jne
mov
xor
mov
mov
mov
sub
add
sub
jmp
mov
push
call
add
mov
add
mov
pop
mov
pop
mov
mov
xor
mov
pop
test
je
push
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
add
mov
mov
xor
cmp
sete
mov
movzx
test
je
jmp
mov
mov
mov
mov
mov
mov
add
mov
mov
add
mov
mov
sub
mov
mov
add
mov
jmp
mov
add
mov
mov
mov
mov
push
lea
push
call
mov
sub
mov
mov
push
lea
push
call
lea
push
call
mov
mov
push
lea
push
call
lea
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
sub
push
call
mov
mov
mov
mov
mov
mov
test
je
mov
cmp
jne
jmp
mov
cmp
jge
cmp
jle
jmp
jmp
mov
mov
mov
mov
jmp
mov
add
mov
mov
mov
cmp
jae
mov
sub
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
add
mov
mov
mov
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
add
mov
mov
imul
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
movzx
mov
movzx
cmp
jle
mov
mov
mov
cmp
je
mov
test
je
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
sub
mov
movsx
add
mov
movsx
cmp
jl
movsx
cmp
jg
movsx
add
mov
movsx
sub
mov
movsx
add
mov
movsx
cmp
jl
movsx
cmp
jg
movsx
add
mov
movsx
sub
mov
movsx
movsx
cmp
je
jmp
movsx
test
jne
mov
mov
jmp
mov
mov
mov
lea
mov
mov
mov
lea
mov
jmp
mov
mov
mov
mov
cmp
jne
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
cmp
je
cmp
je
cmp
jbe
mov
movsx
test
je
mov
mov
mov
mov
add
mov
mov
cmp
je
mov
cmp
je
mov
mov
mov
cmp
jae
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
cmp
ja
mov
mov
cmp
jb
mov
mov
mov
add
cmp
jae
mov
mov
sub
mov
mov
add
mov
jmp
jmp
mov
jmp
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
add
mov
mov
movsx
mov
movsx
cmp
jne
mov
movsx
test
jne
mov
mov
movzx
mov
mov
add
mov
jmp
mov
mov
mov
lea
mov
mov
mov
lea
mov
jmp
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
je
cmp
je
mov
test
je
mov
mov
mov
mov
mov
movsx
add
mov
mov
movsx
add
mov
mov
mov
movsx
imul
mov
movsx
sub
mov
mov
mov
movsx
xor
mov
movsx
add
mov
mov
mov
movsx
sub
mov
mov
mov
movsx
xor
mov
movsx
add
mov
mov
mov
movsx
test
jne
jmp
mov
add
mov
mov
add
mov
jmp
mov
sub
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
push
call
add
push
mov
mov
call
push
call
push
push
call
add
mov
mov
sub
mov
cmp
je
sub
mov
mov
cmp
jne
mov
test
jne
push
push
push
push
call
add
mov
mov
test
jne
cmp
jne
mov
pop
mov
push
call
add
pop
xor
mov
cmp
jne
mov
mov
add
call
push
push
push
push
call
add
pop
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
call
add
push
add
cmp
jne
cmp
jne
mov
test
jne
xor
mov
test
jne
mov
add
mov
cmp
je
cmp
jne
cmp
jne
mov
push
push
push
push
call
add
add
push
push
call
add
push
mov
push
push
call
add
push
add
mov
mov
sub
push
call
add
push
push
push
push
call
add
push
push
push
push
call
add
cmp
jne
xor
cmp
jne
add
cmp
jne
mov
cmp
je
and
call
mov
cmp
jne
mov
mov
push
call
add
pop
push
push
call
add
pop
push
push
push
push
push
call
add
pop
mov
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
call
add
push
sub
mov
push
mov
push
add
cmp
jne
xor
mov
push
push
push
call
add
push
push
push
push
call
add
sub
push
push
push
push
call
add
push
call
add
sub
mov
mov
cmp
jne
mov
push
push
call
add
sub
push
push
push
call
add
pop
mov
pop
and
mov
pop
and
mov
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
sub
mov
mov
mov
push
mov
mov
push
xor
mov
mov
push
push
call
add
add
mov
test
jne
push
call
add
mov
or
mov
push
push
push
call
add
sub
mov
mov
mov
mov
add
cmp
je
sub
mov
cmp
je
mov
push
call
add
test
je
xor
push
push
call
add
push
push
push
push
call
add
mov
push
push
push
push
push
call
add
pop
mov
or
push
call
add
pop
mov
pop
xor
mov
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
add
mov
mov
push
mov
sub
mov
push
cmp
je
mov
cmp
jne
mov
cmp
jne
mov
xor
cmp
jne
mov
cmp
jne
mov
xor
mov
cmp
jne
cmp
je
mov
mov
add
cmp
je
xor
mov
cmp
jne
add
mov
mov
mov
mov
mov
mov
mov
sub
cmp
jne
mov
pop
mov
mov
mov
mov
pop
sub
mov
mov
mov
pop
mov
mov
xor
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
push
mov
mov
push
mov
add
mov
mov
mov
mov
mov
xor
mov
mov
add
mov
pop
sub
mov
mov
cmp
jne
mov
add
cmp
jne
mov
sub
cmp
jne
mov
xor
mov
cmp
jne
mov
mov
xor
cmp
je
mov
xor
mov
test
je
mov
sub
mov
cmp
jne
mov
xor
mov
cmp
jne
mov
test
jne
mov
cmp
je
mov
and
mov
cmp
jne
add
mov
cmp
je
sub
test
jne
and
mov
mov
mov
mov
mov
pop
mov
pop
mov
add
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
mov
push
mov
test
jne
add
mov
mov
mov
push
or
mov
mov
mov
mov
mov
mov
or
cmp
jne
sub
mov
sub
cmp
jne
mov
add
mov
mov
pop
mov
pop
mov
pop
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
cmp
jne
mov
push
cmp
je
mov
mov
mov
push
cmp
jne
xor
mov
cmp
jne
mov
xor
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
xor
mov
mov
cmp
jne
mov
and
mov
cmp
jne
add
mov
cmp
jne
mov
mov
add
cmp
jne
test
jne
sub
cmp
je
xor
mov
mov
cmp
je
add
mov
mov
cmp
je
add
mov
mov
mov
test
jne
add
cmp
jne
or
mov
mov
pop
mov
mov
xor
test
jne
test
jne
test
jne
xor
mov
mov
cmp
jne
test
je
mov
test
jne
cmp
je
add
cmp
jne
cmp
jne
sub
mov
mov
test
je
mov
and
test
jne
mov
mov
add
mov
test
jne
cmp
jne
mov
sub
mov
mov
pop
mov
mov
add
test
je
mov
mov
xor
mov
pop
mov
sub
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
push
xor
mov
mov
mov
push
mov
cmp
je
xor
mov
mov
sub
mov
sub
mov
mov
test
je
mov
mov
mov
sub
cmp
je
add
mov
cmp
jne
mov
mov
mov
add
cmp
jne
add
mov
cmp
jne
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
pop
mov
pop
mov
xor
mov
mov
pop
mov
mov
xor
test
jne
xor
mov
test
je
mov
mov
mov
xor
cmp
jne
xor
mov
mov
mov
leave
ret
add
pop
out
or
cmp
imul
in
jle
rol
shr
xchg
or
jge
mov
retf
cmp
mov
mov
movs
inc
mov
cmps
xor
rol
iret
mov
mov
mov
mov
dec
mov
and
test
out
mov
(bad)
mov
push
call
in
xlat
dec
mov
es
aaa
popf
xchg
inc
sahf
js
mov
jbe
jmp
add
mov
aaa
sahf
test
mov
or
mov
rol
add
pop
push
pop
cdq
jbe
mov
mov
sbb
movs
in
mov
mov
mov
or
mov
add
ja
or
jb
and
pop
adc
icebp
daa
pand
aas
movs
pop
test
shl
lds
mov
imul
inc
ja
mov
add
fisttp
or
daa
mov
call
popa
xchg
hlt
out
repnz
test
push
(bad)
mov
mov
add
sar
add
or
inc
in
mov
mov
push
je
lahf
pop
cmp
mov
mov
add
cmp
mov
add
imul
imul
fcmovbe
or
xchg
mov
pop
(bad)
cmp
xchg
int
cmp
fistp
xchg
fcom
int
or
add
add
lods
lods
mov
out
cmp
(bad)
push
cmp
cmc
cmps
sbb
cmps
sub
push
mov
sbb
push
add
jbe
inc
mov
pushf
fbstp
cmp
mov
cmps
ins
mov
mov
loopne
loope
mov
in
mov
push
fsubr
mul
mov
pop
iret
jns
xchg
cld
add
dec
sbb
pushf
loope
enter
mov
lods
or
sar
jbe
pusha
add
fistp
sub
lock
xchg
dec
push
out
or
adc
push
je
shl
push
mov
imul
jo
mov
fdivr
test
add
(bad)
loopne
jno
push
shr
jmp
and
jbe
xor
data16
dec
mov
not
outs
push
xor
std
xchg
push
pop
mov
ja
das
pop
sub
loope
call
retf
push
xchg
and
or
int
fld
fsqrt
jno
fadd
adc
cs
sbb
fisubr
sub
(bad)
clc
sub
dec
test
(bad)
mov
pop
inc
(bad)
addr16
sbb
test
mov
fdiv
and
inc
loopne
outs
xchg
mov
push
sbb
dec
ret
mov
dec
pop
test
and
fild
mov
sti
(bad)
in
sub
push
cs
iret
add
jbe
xor
mov
mov
dec
ret
mov
xchg
popa
mov
jo
outs
mov
add
lock
cdq
in
mov
clc
dec
or
jnp
and
retf
mov
xchg
movs
and
inc
and
or
sub
bound
jae
ja
or
cmps
stos
mov
mov
test
mov
sub
inc
out
inc
mov
inc
std
and
or
jae
test
(bad)
loop
mov
or
pop
mov
je
mov
retf
in
fidiv
ja
sbb
add
mov
jo
(bad)
cmp
pop
mov
push
mov
inc
cmp
sbb
std
add
ja
pop
cs
aaa
sub
shl
mov
adc
bound
movs
jmp
enter
div
inc
jg
xor
push
iret
xchg
mov
stos
or
jmp
mov
ins
retf
jbe
xor
sti
fst
(bad)
xlat
int
push
movs
mov
loop
lods
pushf
mov
mov
mov
out
jno
sub
push
adc
pop
ja
into
rcr
xor
or
sbb
jg
retf
adc
jbe
vpor
mov
xor
hlt
and
imul
mov
test
inc
iret
imul
add
gs
cmps
inc
in
pop
push
mov
dec
xchg
fild
xor
cld
cwde
xchg
call
loopne
cmp
mov
int
adc
je
aam
dec
pop
mov
mov
iret
lds
icebp
aaa
ss
push
jp
add
movs
inc
mov
add
dec
call
inc
mov
jne
adc
shl
fucomip
in
xchg
addr16
jge
pop
cli
mov
(bad)
inc
dec
fst
mov
push
dec
mov
xchg
jne
(bad)
out
(bad)
stc
jbe
pop
in
add
lods
outs
nop
lods
hlt
(bad)
mov
fmul
or
cmps
cli
sbb
arpl
cmp
test
sbb
pop
mov
pusha
jl
mov
stos
cmp
fld
mov
adc
ficomp
add
aas
test
or
ja
js
movs
pop
mov
mov
in
scas
loop
push
adc
push
repz
cmp
(bad)
push
frstor
into
pop
aas
inc
cmp
inc
xchg
es
jbe
push
dec
lahf
shr
and
mov
pop
fwait
and
xor
mov
movs
mov
or
add
and
mov
pop
ja
pop
ror
in
and
mov
inc
xchg
dec
aam
mov
inc
sbb
add
sbb
xor
sub
xor
and
movs
mov
mov
or
das
jae
dec
sbb
arpl
adc
add
mov
lods
or
call
xor
and
ja
mov
mov
jno
jecxz
repz
test
xchg
test
cmp
mov
mov
cdq
ins
movs
xchg
icebp
mov
mov
retf
jge
mov
pop
out
mov
sub
pop
jbe
mov
mov
and
outs
push
push
sti
pop
scas
push
xchg
mov
mov
mov
repz
(bad)
out
mov
outs
ds
test
loope
pop
icebp
lods
scas
js
inc
(bad)
cdq
push
retf
test
inc
xor
mov
in
jbe
jae
ret
fidivr
fs
mov
push
(bad)
pop
sbb
mov
xlat
cmp
and
xchg
xchg
ficomp
clc
scas
cmc
jge
xchg
(bad)
mov
ss
dec
mov
mov
out
mul
and
ja
and
or
mov
lods
es
adc
inc
xchg
aad
clc
adc
dec
ss
add
fucomi
call
mov
and
sub
and
mov
test
mov
out
sbb
add
test
or
push
ja
xor
mov
mov
or
daa
or
mov
js
ret
(bad)
(bad)
jns
loop
or
mov
add
les
mov
jbe
ja
es
or
and
push
movzx
ja
out
js
repnz
mov
jecxz
fidiv
mov
mov
mov
mov
hlt
sub
(bad)
nop
mov
pcmpgtb
outs
sub
jbe
enter
jge
and
jl
cdq
enter
outs
pop
and
or
inc
cmps
ja
jp
in
xchg
fdiv
xor
cmps
out
mov
or
cmp
call
xor
mov
mov
daa
ret
mov
clc
or
or
add
pop
push
in
jns
inc
cmp
clts
mov
sub
movs
mov
ret
ins
mov
int
inc
xor
jno
mov
je
arpl
out
shr
dec
sahf
cmp
add
add
mov
and
mov
pop
ins
subps
jbe
fstp
lea
mov
(bad)
mov
mov
xchg
cwde
stos
dec
cmp
adc
pusha
and
mov
jmp
inc
sbb
pop
shr
js
inc
call
shl
adc
fadd
cmp
cmp
call
mov
sub
xchg
data16
fild
adc
xchg
loop
add
adc
mul
jmp
mov
xchg
push
sub
int
cdq
adc
sbb
and
mov
std
imul
leave
cmp
sahf
and
and
dec
jge
xor
cmp
jnp
pop
fnstenv
jp
repz
popf
mov
test
adc
outs
sbb
in
mov
vcvtsd2ss
cli
jo
sahf
dec
fwait
lea
dec
and
jae
sub
std
icebp
pop
cmp
jbe
adc
xor
xchg
mov
mov
push
sbb
adc
sub
dec
push
das
dec
xchg
ror
mov
cmp
or
cmp
ja
into
jge
pop
or
shl
dec
inc
xchg
push
pop
cmp
adc
pop
pop
mov
push
(bad)
push
mov
retf
pop
mov
xor
fidiv
push
out
fisubr
data16
(bad)
in
and
lods
out
sbb
xchg
or
pop
leave
fsub
out
sbb
stos
and
outs
stos
fist
mov
mov
ror
mov
adc
mov
mov
lea
push
mov
outs
popf
mov
out
add
cmp
(bad)
xor
jbe
sbb
xchg
adc
xchg
lea
lahf
jbe
outs
mov
fdivr
pop
jg
push
mov
call
repnz
int3
xor
out
mov
in
mov
sub
retf
popf
dec
out
xor
gs
mov
daa
pcmpgtd
or
push
push
mov
stos
cmp
in
std
or
cs
in
mov
leave
test
icebp
ja
nop
mov
loop
aad
(bad)
cmp
pop
xor
adc
mul
or
push
(bad)
mov
dec
loop
xor
push
jb
dec
pop
ins
and
aad
pop
xchg
mov
cmp
cdq
je
(bad)
push
xchg
push
mov
fiadd
dec
loope
mov
add
mov
ret
cdq
jbe
and
ja
(bad)
jmp
lods
(bad)
retf
and
mov
iret
fbstp
xchg
jne
bnd
jnp
jnp
dec
xchg
jl
stos
sbb
inc
mov
mov
sub
aam
mov
mov
mov
mov
aas
shr
inc
fabs
mov
sub
lea
pusha
lea
dec
aaa
std
add
fdiv
test
mov
repz
loop
in
mov
(bad)
ins
push
xchg
jle
inc
psrlq
adc
add
and
mov
cmp
rol
ret
std
es
sbb
(bad)
cmp
inc
ja
cmp
iret
xchg
and
push
xor
ret
push
cmove
xchg
push
pushf
in
or
in
fidivr
mov
mov
inc
in
cmp
pusha
(bad)
mov
std
mov
test
test
jbe
clc
sub
fnstenv
cmp
xchg
pusha
xor
add
mov
test
shl
mov
mov
mov
repz
stc
jmp
cmp
(bad)
outs
pxor
and
in
call
mov
imul
adc
xor
repz
or
cdq
sub
xchg
push
and
jl
mov
jne
xor
inc
push
mov
cmp
test
sbb
js
jge
adc
pop
imul
retf
mov
retf
inc
and
ror
or
lock
daa
je
adc
aad
test
in
fld
xor
fwait
mov
adc
mov
xchg
pop
pusha
mov
test
das
aas
lds
pop
fdivr
mov
xlat
mov
inc
sbb
cmp
or
rcr
add
test
pop
mov
mov
addr16
scas
hlt
jle
inc
stc
push
jp
pop
sub
test
and
inc
and
ss
inc
add
repnz
push
and
add
add
imul
mov
cmp
sbb
bound
fnstenv
dec
mov
movs
sahf
xor
mov
jnp
and
dec
cs
test
dec
lods
or
data16
mov
sub
xchg
aaa
das
xchg
push
add
mov
inc
inc
lods
fwait
mov
shl
arpl
mov
dec
ins
xchg
(bad)
fcomp
cld
cli
ds
and
cs
mov
adc
jmp
aad
or
mov
stos
cmps
arpl
ds
adc
mov
dec
or
inc
pop
stos
outs
sar
test
add
es
das
stos
and
movs
pop
cmp
add
clc
cmp
dec
and
rcl
sub
in
xor
jl
fild
xchg
push
mov
popf
ss
test
jbe
fcmovnu
mov
fs
pop
mov
or
pop
cmp
add
aas
lock
ins
add
not
push
inc
push
dec
pop
movs
adc
je
mov
aas
xlat
in
push
hlt
mov
push
sbb
loope
pop
jecxz
cmp
add
sbb
aas
push
dec
loop
lahf
mov
mov
xchg
add
jge
add
gs
push
int3
aas
rcl
cmc
ficomp
fadd
push
inc
mov
inc
call
pusha
test
lods
je
das
gs
sbb
pop
mov
pop
or
scas
outs
retf
cdq
data16
js
dec
int
es
cmc
das
popf
cmp
jmp
(bad)
push
or
jo
js
adc
cmp
sub
mov
mov
and
fistp
and
mov
mov
in
and
cmp
mov
fcom
leave
ds
ret
mov
cmp
sub
pop
fdiv
mov
test
lock
clc
repnz
or
jbe
sti
adc
not
mov
jle
fsubp
mov
mov
jae
sub
xchg
ffree
xchg
push
add
jmp
sub
push
or
dec
pop
push
xor
xchg
loopne
and
lock
int3
loopne
dec
movs
xchg
outs
or
es
cmp
bound
push
mov
jge
mov
mov
ret
shl
mov
repz
test
mov
mov
addr16
xchg
lds
jmp
mov
rcl
fwait
mov
rcl
test
mov
inc
rcl
push
mov
or
cmp
pop
push
inc
push
xchg
js
pop
jmp
mov
and
dec
lods
mov
sub
mov
nop
cld
mov
jbe
icebp
rcr
push
sub
mov
ds
enter
inc
and
pop
mov
sbb
test
mov
test
add
push
mov
aas
mov
mov
repz
test
outs
outs
leave
ss
dec
push
jmp
fwait
(bad)
adc
les
lock
mov
xchg
cmc
jbe
std
or
mov
es
pop
dec
addr16
sbb
push
out
adc
add
mov
loopne
out
xchg
fidivr
stos
xchg
(bad)
repz
mov
popa
jge
and
das
push
jp
(bad)
xchg
sbb
js
push
xchg
fdivr
sub
mov
stc
icebp
gs
or
jne
sub
or
mov
out
mov
jbe
adc
outs
test
add
repz
scas
mov
mov
(bad)
fcmovnb
mov
mov
adc
arpl
sub
mov
mov
push
sub
call
xor
cs
mov
dec
inc
add
cld
mov
inc
stos
and
dec
ret
int
sub
in
scas
pop
cmp
and
fwait
aad
movs
pop
(bad)
(bad)
ja
in
sbb
jo
mov
sub
jle
shl
outs
in
test
out
std
js
icebp
daa
cmp
add
outs
ja
ja
sbb
sbb
gs
mov
pusha
lea
or
mov
pop
dec
int
dec
xchg
xchg
mov
mov
fwait
or
out
mov
in
fisttp
xchg
cmp
imul
push
retf
jae
loop
mov
idiv
mov
stos
mov
cmp
fild
retf
xchg
xor
dec
out
add
xchg
mov
push
daa
push
sub
sub
or
ja
fimul
mov
inc
dec
and
jns
push
icebp
pop
sbb
lds
inc
adc
ins
mov
hlt
rcr
ja
mov
pop
(bad)
cmp
bound
inc
mov
dec
jb
jo
out
enter
mov
cmp
fwait
xor
jbe
xchg
add
ds
popa
addr16
mov
pop
sbb
add
ja
mov
les
and
mov
sub
mov
add
scas
fcmove
dec
mov
inc
shl
call
xchg
cwde
aad
inc
loope
fst
cmp
mov
push
or
dec
add
in
fnstenv
in
xchg
outs
fdivr
jmp
stos
push
int
or
mov
dec
sub
push
xchg
es
inc
cmp
aaa
mov
xor
jmp
xor
dec
enter
mov
xor
mov
test
mov
idiv
test
xor
pop
inc
fcompp
xor
ds
movs
pop
lahf
mov
xor
in
pushf
aaa
mov
inc
imul
mov
cmc
test
in
out
ins
inc
jbe
jbe
lds
daa
lods
ins
sub
mov
xor
nop
stos
mov
stc
fsubr
stos
cmps
mov
adc
int
inc
cs
or
(bad)
not
dec
aas
test
sub
sbb
or
js
neg
out
sub
and
mov
(bad)
mov
sti
in
shl
xor
and
movs
je
mov
pop
cmp
xor
or
push
push
adc
pop
cmc
mov
repz
in
sub
and
xchg
mov
mov
fsubr
mov
add
and
(bad)
repnz
adc
or
xor
test
jbe
sahf
pop
rcr
clc
mov
pop
test
ret
mov
mov
loope
repnz
scas
(bad)
adc
in
cmp
pop
push
mov
(bad)
(bad)
shl
out
sti
cmp
push
cmp
push
nop
fidivr
mov
sub
scas
jecxz
out
outs
and
jae
in
mov
js
sahf
or
ror
in
and
sub
mov
add
xchg
retf
jmp
lods
inc
movs
dec
iret
or
inc
loope
or
fistp
xchg
repz
jmp
mov
dec
adc
mov
pop
cmps
stc
sbb
jbe
push
shr
mov
pop
jmp
into
(bad)
ss
mov
push
jnp
mov
mov
jae
sahf
ins
enter
mov
(bad)
cmc
push
popa
cmps
pop
fs
mov
mov
or
fdiv
push
lods
fcmovb
stos
and
jbe
inc
sahf
sbb
stos
das
xchg
mov
in
stos
mov
out
xor
bound
adc
stc
pusha
push
test
or
stos
ins
cdq
bound
push
jb
mov
dec
fsub
jno
mov
loopne
jbe
push
mov
in
sub
lods
mov
in
mov
or
ja
imul
xor
cmp
dec
bound
addr16
popf
mov
lds
mov
adc
mov
out
jmp
call
stos
jnp
mov
adc
aas
scas
push
mov
ret
ja
in
and
repnz
call
jge
push
enter
ja
inc
jmp
or
sbb
ds
xchg
xor
movs
and
dec
sbb
mov
scas
push
ja
sbb
or
idiv
inc
cmc
or
inc
ja
mov
sbb
mov
ficomp
movs
add
inc
stos
fst
xchg
xchg
add
jne
fwait
mov
and
cli
pop
add
ror
add
out
imul
add
pusha
push
jo
mov
jne
out
call
or
popf
outs
xlat
mov
and
push
xor
or
cs
idiv
std
push
fild
inc
movs
dec
in
cmp
shl
push
retf
cld
cmp
mov
dec
mov
xchg
stos
pop
xor
ja
add
dec
mov
pop
inc
push
xchg
mov
dec
ja
inc
retf
inc
popf
fisttp
test
add
in
inc
mov
mov
movs
sahf
jg
lods
cmc
mov
xor
cmp
push
and
out
(bad)
ins
not
(bad)
cmc
xchg
mov
add
test
lods
mov
mov
dec
test
xor
add
mov
jge
sbb
in
stc
loopne
pop
pop
addr16
test
mov
pop
test
mov
stos
aas
lahf
in
cmps
xchg
rol
div
adc
aam
ds
inc
or
cdq
sahf
test
inc
ret
fsubr
sbb
mov
cmp
(bad)
mov
sub
jbe
mov
jne
mov
xlat
xlat
js
mov
mov
fidiv
xchg
popf
and
ds
push
repnz
fadd
cdq
aas
xchg
inc
rcr
jo
pusha
enter
dec
shr
test
mov
pop
(bad)
push
or
stos
jbe
pop
ins
scas
ret
and
and
mov
movs
mov
dec
movs
mov
mov
add
adc
mov
add
pop
enter
cmc
loope
js
ret
out
inc
ins
mov
mov
popa
dec
cli
stos
movs
loopne
ss
(bad)
cmps
sbb
nop
mov
ret
dec
cmp
push
xor
mov
je
pop
sub
loop
jmp
pusha
ins
adc
aam
repz
punpckhwd
cwde
ds
retf
test
int3
sub
jbe
in
call
sub
mov
lods
inc
sbb
jae
and
jbe
sbb
xchg
aas
mov
push
jmp
outs
cli
jbe
in
pop
not
pop
das
cdq
and
jbe
sbb
test
pusha
imul
daa
mov
outs
faddp
inc
xchg
jg
mov
cli
std
mov
pop
adc
and
xchg
and
call
or
test
stos
test
sbb
bound
mov
pop
push
daa
pop
xchg
inc
aam
les
sahf
scas
push
ja
sub
dec
xchg
loopne
or
jae
or
jb
lds
pusha
ins
inc
(bad)
mov
test
or
mov
and
inc
jge
data16
xchg
imul
ins
ja
movs
sbb
xchg
in
ret
and
fisub
dec
out
je
pop
sbb
fsub
and
cmp
pushf
hlt
pop
pop
(bad)
pop
jle
arpl
xchg
mov
xor
ret
sar
out
push
push
dec
mov
pusha
xchg
bound
mov
xor
lds
mov
push
sbb
test
arpl
mov
sti
lea
retf
xchg
xor
xor
dec
aam
lds
ficom
sub
int3
pushf
sub
aam
repnz
ret
cdq
sub
aad
xchg
pop
mov
mov
or
shr
loope
xchg
adc
sub
aaa
xor
sbb
jl
and
aaa
or
add
jo
clc
inc
pushf
adc
jge
cmp
rcl
fs
add
adc
xchg
jle
sbb
push
ja
jbe
mov
mov
ret
idiv
cmp
or
mov
cmp
cwde
outs
addr16
push
popf
push
jne
ins
pop
adc
mov
cmp
mov
arpl
aad
xchg
call
imul
iret
sbb
push
jbe
mov
aam
mov
mov
add
adc
fisub
daa
push
aaa
push
cdq
jae
xor
in
mov
pusha
jp
jbe
cwde
mov
cmp
(bad)
outs
das
sub
test
jl
jo
mov
jne
inc
ds
dec
push
xchg
imul
mul
ficomp
sar
mov
dec
mov
sub
mov
xlat
ins
pop
in
mov
or
adc
and
xchg
out
gs
push
(bad)
hlt
mov
adc
nop
test
or
mov
ins
into
xor
mov
jecxz
cdq
(bad)
adc
mov
shl
fsub
aaa
sti
mov
(bad)
xor
(bad)
mov
pop
cdq
cmps
mov
leave
hlt
das
jg
push
mov
push
(bad)
mov
popa
dec
div
sub
add
mov
sub
out
mov
jg
in
mov
int3
lea
cdq
dec
rcr
or
jbe
sub
inc
pop
add
fdivr
pop
ja
mov
ins
pop
mov
mov
stos
mov
stos
mov
mul
leave
mov
xor
jmp
mov
push
pop
mov
inc
ja
frstor
into
cmp
mov
mov
pop
mov
push
imul
fimul
aas
or
fs
mov
mov
cmc
dec
mov
jecxz
les
hlt
or
sub
push
cdq
ret
out
xlat
rcl
idiv
lahf
jb
or
in
bound
ja
mov
fmul
aas
pop
dec
push
push
jno
jge
mov
pop
das
inc
sub
stos
jmp
add
mov
dec
sbb
inc
mov
adc
and
mov
cmps
add
xchg
jbe
and
imul
xchg
inc
sub
je
aaa
and
movs
add
cmps
arpl
loop
pop
fld
add
ins
fisttp
jbe
cmp
push
hlt
dec
mov
call
test
shl
push
pop
js
sbb
cmp
add
ret
aas
test
adc
aas
lods
fistp
pusha
les
ja
xchg
clc
sub
into
add
icebp
ret
mov
(bad)
int3
push
fild
xor
in
loop
mov
test
out
adc
dec
push
jle
inc
pusha
out
daa
xor
loop
stos
movs
xchg
sar
clc
jg
push
xchg
hlt
mov
sbb
arpl
mov
xchg
pop
cmps
sar
jae
cmp
lahf
(bad)
mov
aam
fs
xchg
es
add
aas
cwde
ret
mov
xchg
test
bnd
xor
loop
adc
(bad)
ja
out
lds
jle
pop
push
xchg
xor
push
xor
mov
out
shl
jg
aam
adc
icebp
aaa
inc
add
lods
popa
cmp
push
aas
or
test
adc
pop
je
rcl
inc
push
ja
mov
fisttp
push
inc
stos
xchg
cli
nop
pop
ja
mov
cs
mov
adc
mov
movs
(bad)
mov
jmp
inc
rol
ja
dec
ins
push
pusha
mov
push
mov
pop
popf
adc
mov
pop
push
inc
add
sub
sub
fdiv
mov
mov
mov
test
std
inc
sbb
repz
outs
dec
movs
pop
and
pop
lock
or
scas
(bad)
mov
sbb
(bad)
sub
mov
jecxz
ffree
sbb
mov
pushf
adc
mov
dec
inc
in
or
sub
pop
cld
mov
lods
cli
ja
mov
mov
ja
mov
les
cmps
inc
das
call
loop
dec
cmp
pop
out
cmp
jmp
(bad)
ins
push
addr16
xchg
jne
test
mov
lea
movs
sub
jbe
sbb
jo
mov
cs
inc
mov
out
and
dec
inc
mov
or
xchg
cmps
enter
jae
popa
sbb
mov
imul
pop
mov
dec
lods
cld
repz
pop
jnp
mov
pop
adc
ficom
push
mov
test
daa
pop
jnp
xchg
(bad)
sbb
pushf
mov
mov
mov
jp
mov
cs
in
(bad)
and
int
bound
call
icebp
aas
jmp
jmp
pop
dec
sbb
shl
imul
sub
clc
ror
add
pushf
call
shr
mov
dec
pushf
push
jg
neg
sar
mov
outs
ins
jbe
nop
xlat
or
mov
sub
adc
mov
fcomp
pop
mov
jae
jo
mov
outs
pop
sbb
test
(bad)
mov
pop
jne
pop
aaa
mov
fiadd
aam
inc
mul
leave
das
rol
dec
pop
xchg
aas
rcr
repz
add
inc
icebp
push
xchg
ja
adc
inc
jno
stos
movlps
mov
push
popa
push
rol
push
lea
in
test
adc
(bad)
push
div
mov
fdivr
popa
stos
sub
mov
adc
pop
mov
sub
pop
mov
gs
shrd
ins
mov
dec
mov
and
(bad)
and
fwait
daa
adc
leave
mov
test
cmp
lods
add
inc
sbb
std
(bad)
aas
push
add
aas
mov
add
xor
inc
call
cmp
add
mov
loop
pop
mov
jp
jne
mov
sub
fld
bound
iret
jbe
pop
loopne
test
mov
shl
cwde
jg
out
jmp
arpl
dec
sbb
add
pop
adc
jmp
(bad)
fcmovnb
iret
jnp
daa
xchg
movs
cmp
mov
stc
rol
push
test
xor
jbe
in
ss
push
out
inc
mov
inc
sbb
mov
retf
mov
arpl
es
ins
or
jmp
inc
add
mov
jns
cs
test
(bad)
into
xlat
inc
xchg
ss
jnp
push
es
repnz
ds
enter
cli
dec
in
in
aad
add
fst
outs
iret
push
loop
out
push
dec
mov
retf
out
pop
push
jns
in
mov
pop
aas
cld
pop
dec
mov
pop
les
cmp
aad
sahf
in
sub
push
aad
ret
cmps
call
callw
fild
mov
je
ja
adc
test
ret
out
jge
hlt
xchg
inc
sub
outs
loopne
xchg
cwde
mov
push
ret
repz
push
lock
add
pop
xor
mov
mov
mov
and
stc
outs
je
adc
aam
xlat
fiadd
mov
rcr
aas
mov
cdq
inc
shr
and
push
js
mov
dec
mov
(bad)
cmp
or
push
movs
in
push
sar
ja
push
mov
repz
push
jmp
mov
add
stos
jl
aam
iret
retf
mov
outs
jmp
mov
(bad)
out
and
imul
test
pop
jmp
xchg
vorps
sub
lock
cmp
js
pop
xchg
cdq
or
mov
daa
cmp
rcr
add
push
repz
pop
mov
pop
mov
fistp
mov
inc
fld
pop
icebp
outs
xor
ja
xor
push
jns
cmp
iret
pushf
outs
cmp
mov
jo
pop
mov
xor
mov
sbb
aaa
cmps
and
add
inc
js
mov
mov
dec
and
not
fild
mov
inc
inc
fwait
scas
xchg
xor
cli
add
mov
imul
pop
daa
xchg
add
call
fiadd
or
shl
stos
es
in
fcomp
test
push
hlt
inc
add
sbb
add
test
test
xchg
aas
stos
ja
and
mov
inc
(bad)
ficom
lods
pop
and
sbb
jmp
push
fnstsw
shr
cmp
out
push
lea
and
sar
push
or
cmp
nop
imul
and
sar
inc
jg
xor
movs
xchg
dec
out
in
jne
not
lock
mov
enter
xlat
aaa
xor
mov
sti
dec
mov
imul
fs
and
js
aam
mov
nop
jp
call
jne
pop
dec
pop
es
pop
xchg
loopne
test
add
mov
in
jo
xchg
mov
bound
(bad)
push
ds
repz
mov
sar
gs
inc
adc
jmp
retf
scas
je
add
cmp
inc
jne
xor
and
inc
dec
enter
ins
arpl
cdq
mov
sbb
retf
sbb
loopne
dec
or
std
stos
sar
(bad)
xchg
ret
mov
xor
lods
jbe
mov
call
mov
and
xor
cmp
cmc
movs
es
ja
or
sub
xlat
cmp
mov
jnp
inc
pusha
xchg
mov
xchg
ret
cmp
ss
push
clc
sub
xchg
mov
pop
test
xchg
(bad)
test
mov
rcr
sub
call
mov
jecxz
and
pop
adc
pop
stos
arpl
cdq
and
fcom
lock
inc
xchg
mov
and
adc
sub
sub
dec
cmp
lock
popa
outs
(bad)
fiadd
cmp
imul
mov
dec
adc
pop
loopne
dec
push
(bad)
dec
lods
loop
push
and
out
jp
fsub
jo
xor
mov
rcl
test
sbb
pop
sub
fbstp
push
and
jge
jg
fadd
call
scas
shr
scas
mov
push
push
lds
mov
xlat
sbb
in
mov
push
ret
cmp
mov
lods
sbb
pop
call
ja
inc
dec
std
xlat
jp
push
jbe
add
mov
dec
add
ret
adc
test
adc
cmp
xchg
lods
dec
mov
add
aas
es
ret
rol
cmps
mov
cmps
ret
xor
jbe
xor
arpl
inc
sbb
jne
ja
jl
idiv
sbb
push
fdivr
loop
mov
test
aad
xchg
js
rcl
mov
sbb
xor
test
(bad)
dec
rol
ss
es
push
stos
and
dec
call
sub
mov
aam
in
push
xchg
pop
pop
and
push
fnstsw
pop
sar
(bad)
cmp
jp
push
mov
mov
jp
or
jp
jbe
cmp
jbe
clc
jl
and
inc
rol
push
cmps
pop
mov
inc
ins
adc
cdq
and
mul
xchg
jbe
iret
inc
sub
enter
pusha
pop
mov
(bad)
les
or
xchg
inc
repz
xchg
data16
jbe
ins
cmc
ror
mov
int
sti
mov
jg
pop
adc
xchg
add
mov
adc
imul
sbb
push
add
xchg
dec
fidiv
add
aad
sbb
mov
inc
(bad)
jns
xor
ds
test
and
ficomp
dec
mov
mov
lods
(bad)
out
mov
push
pushf
or
in
mov
stc
add
popf
mov
inc
mov
sub
add
mov
or
ja
adc
call
xchg
mov
xor
imul
out
(bad)
jbe
ins
pop
jns
sar
add
adc
mov
or
hlt
cwde
xchg
cmp
mov
repz
sub
cld
mov
dec
pop
mov
rol
jbe
dec
adc
mov
mov
(bad)
mov
ret
pop
sti
adc
test
out
pop
cmp
push
ficomp
and
ja
cmp
std
fmul
mov
je
and
popf
(bad)
push
fistp
movs
in
adc
xchg
ins
cmp
push
js
mov
xchg
sub
push
or
std
xchg
in
repnz
test
sub
enter
lods
cmp
in
mov
in
ss
inc
xchg
sbb
test
stos
add
ja
std
fld
stos
retf
pop
popf
outs
fstp
ret
ins
jge
nop
dec
idiv
mov
sbb
dec
loopne
xchg
pop
pop
call
xchg
xchg
adc
ss
mov
cmp
or
in
leave
sub
mov
mov
fs
push
sub
jl
stos
add
add
imul
lea
ret
and
mov
(bad)
cli
sbb
in
movs
adc
js
ja
push
aaa
sub
(bad)
pusha
popf
mov
inc
xor
aas
sub
push
xchg
xchg
pop
fidivr
inc
popf
mov
sbb
call
mov
dec
jp
shr
and
scas
retf
mov
mov
loopne
dec
ret
je
call
call
push
inc
mov
out
add
push
add
addr16
les
shl
mov
cmps
xchg
sbb
cld
jge
adc
aaa
push
mov
mov
pusha
xchg
mov
jae
(bad)
or
cmp
xchg
jns
or
xchg
fwait
and
xchg
aaa
in
lods
mov
repnz
rcr
xor
xchg
inc
or
inc
mov
stc
cmp
call
mov
addr16
lahf
xchg
ret
jbe
movs
pop
xlat
jge
sub
fwait
in
lahf
out
mov
sbb
test
movs
fmul
adc
push
scas
mov
add
stc
ja
test
out
jbe
adc
jge
imul
lds
pop
mov
jmp
out
add
ja
adc
adc
mul
cmp
in
xchg
inc
rol
lea
mov
xchg
hlt
mov
out
enter
pop
push
jo
inc
xor
dec
xchg
das
call
aaa
popa
push
out
push
mov
(bad)
shl
adc
bnd
jbe
xchg
mov
pop
xchg
je
sub
lods
adc
push
fmul
mov
fwait
xor
ror
add
jmp
or
jp
popf
adc
loop
xor
rcl
cld
cld
test
inc
daa
jl
adc
jbe
into
pop
rcl
pop
inc
sub
repz
sbb
mov
push
div
mov
int
and
xor
pop
cs
jp
movs
cmp
and
dec
js
sahf
mul
cli
and
adc
adc
push
mov
xor
push
(bad)
or
jb
add
sbb
imul
dec
loope
ja
outs
cmps
ficomp
sbb
mov
push
test
bound
mov
ret
int3
add
scas
sahf
(bad)
xchg
ss
add
push
or
xchg
jbe
arpl
cmp
pop
iret
push
retf
pusha
xchg
or
fs
ss
mov
icebp
inc
inc
mov
in
mov
pop
ins
call
arpl
stc
xchg
dec
cmp
dec
push
fdiv
and
clc
nop
xchg
xchg
or
dec
inc
movs
inc
daa
add
cli
test
enter
mov
xor
out
mov
cmp
add
outs
xchg
(bad)
xor
push
mov
mov
inc
fld
dec
inc
xchg
push
ja
lods
sub
lods
ins
pop
dec
mov
fld
(bad)
mov
jo
leave
cmp
scas
inc
mov
movs
xchg
loopne
ret
inc
icebp
pop
inc
sbb
mov
xor
xor
inc
xor
sub
dec
xchg
or
imul
xor
mov
popf
or
out
sub
jmp
dec
sub
mov
push
stos
or
ds
or
xchg
jecxz
loope
jbe
and
jmp
retf
bound
jbe
out
loop
xor
push
(bad)
jl
ja
popa
mov
loope
stc
out
mov
push
shr
inc
cmp
pusha
cs
mov
sbb
mov
push
mov
sbb
mov
mov
cmp
and
nop
scas
imul
stos
scas
and
sar
jbe
push
adc
ss
jmp
adc
lock
mov
clc
test
push
pop
sahf
jns
mov
lds
inc
jb
cld
adc
inc
mov
lock
aas
mov
cmp
femms
inc
cwde
xchg
mov
das
out
jnp
ja
rcr
pop
cmp
mov
or
ja
mov
fisubr
shl
mov
ret
mov
cmp
jmp
mov
sbb
cmp
xlat
add
xor
mov
cmp
cld
jnp
ins
aas
xchg
push
arpl
aaa
add
retf
or
add
mov
push
call
(bad)
stos
icebp
ss
fstp
cmp
xrelease
add
inc
sub
ja
and
mov
jmp
fcmovnbe
lods
adc
sbb
push
mov
xor
jbe
test
pop
ret
xor
mov
mov
int
scas
out
jbe
or
jbe
xor
outs
or
jecxz
mov
dec
xchg
leave
call
dec
sbb
jae
rcr
shr
sar
xchg
inc
mov
loop
pop
out
mov
stc
stos
stc
sbb
xchg
pop
push
out
sub
sar
push
jne
cmp
int3
aam
ret
jae
in
hlt
lds
pop
xchg
test
int3
mov
je
jb
cmc
movs
fisub
jne
bound
int
scas
add
mov
mov
push
(bad)
mov
add
cmp
test
lds
sahf
hlt
mov
and
int
mov
fstp
add
in
data16
pop
inc
aas
aaa
xchg
mov
adc
and
xchg
jbe
or
cmp
xor
test
push
rol
movs
mov
sbb
fcomp
jbe
bound
ror
jbe
jge
lock
adc
leave
pushf
mov
retf
(bad)
mov
inc
scas
push
dec
mov
in
ud1
scas
xchg
push
(bad)
pop
inc
dec
mov
inc
sbb
popa
pop
ja
xchg
arpl
fldz
cmc
jmp
add
cmp
fisub
adc
dec
fld
out
cmps
cmp
out
ss
mov
gs
pop
cmp
add
mov
and
mov
mov
aad
mov
cmp
out
dec
fidivr
sbb
add
std
mov
pop
jo
imul
rcr
in
mov
scas
adc
sub
xchg
push
call
push
loopne
pop
cmp
sub
fld
retf
iret
aas
js
repz
jbe
movs
movs
out
inc
cmp
mov
mov
or
sub
or
retf
jbe
cmp
sti
mov
orps
cs
mov
mov
and
mov
repnz
sub
ja
add
mov
inc
cmps
jb
jbe
cld
(bad)
push
retf
popa
xor
outs
mov
xchg
dec
cs
cmp
arpl
sbb
push
fidivr
data16
xchg
in
leave
xchg
stos
mov
and
cmp
scas
adc
or
daa
xchg
pop
test
jg
popf
loopne
dec
jp
pop
pop
sub
push
inc
xchg
xchg
push
cld
xchg
jbe
data16
mov
push
pop
mov
jne
pop
movs
aam
idiv
sub
and
cmps
das
and
push
stos
mov
mov
das
mov
pop
pushf
sti
or
add
stos
sahf
pushf
into
mov
fist
adc
jo
ja
mov
xchg
mov
out
ror
in
dec
cmp
dec
sbb
mov
jg
ret
rep
std
inc
mov
outs
pop
xor
pop
dec
or
popa
into
cwde
call
mov
out
test
mov
sub
add
test
mov
imul
jbe
and
call
shr
mov
inc
or
mov
add
and
(bad)
fild
cdq
jbe
test
pop
test
or
ds
mov
mov
mov
ja
fist
jbe
xchg
or
xor
xor
popf
or
cmp
mov
aad
adc
mov
dec
push
inc
test
std
daa
sbb
lds
jle
xchg
idiv
add
test
cmp
imul
or
and
add
loop
push
iret
fs
lds
stc
mov
add
jns
mov
pop
arpl
dec
sub
pop
jnp
ss
outs
xor
in
add
cmp
cmp
sbb
and
test
fucomip
nop
inc
sahf
mov
cmp
icebp
aad
(bad)
int
fnsave
mov
jae
sub
mov
rcr
xchg
pop
cmp
mov
jbe
mov
dec
ins
stos
pop
clc
xchg
inc
dec
adc
xchg
scas
loope
test
jnp
xor
sahf
xchg
fist
cmps
fmul
cmp
ja
test
lods
pushf
adc
lods
(bad)
jnp
sub
push
mov
cmp
dec
test
imul
cmp
bound
mov
jns
xchg
dec
loope
adc
or
adc
jb
jl
pop
outs
dec
push
push
push
inc
sbb
sub
rol
inc
jo
cmps
jl
fisub
add
addr16
mov
into
push
jp
add
push
jecxz
mov
dec
or
fsubp
add
jbe
jae
pop
jmp
dec
xchg
leave
outs
push
push
mov
mov
inc
mov
mov
dec
(bad)
(bad)
in
leave
fldcw
pop
jnp
bound
gs
mov
pop
sub
sbb
ror
and
mov
cld
cs
xchg
pop
ds
repz
movs
inc
mov
mov
dec
leave
mov
add
pop
jmp
arpl
xor
mov
xlat
xor
je
lock
jno
in
dec
or
mov
addr16
fwait
(bad)
push
cmp
jge
lds
mov
fldenv
int3
jbe
adc
mov
push
arpl
lods
and
(bad)
test
popf
sbb
fidiv
lds
add
adc
add
jbe
bnd
xchg
fstp
cs
ss
mov
xor
retf
nop
dec
aas
mov
dec
popa
sub
xchg
sahf
lock
test
adc
arpl
xor
retf
sbb
push
mov
mov
push
ja
imul
mov
scas
into
jbe
(bad)
xchg
jl
xor
fwait
mov
out
and
mov
jle
ja
xchg
jae
inc
std
out
and
pop
xlat
les
or
cmp
sbb
fld
xchg
cld
jl
outs
or
or
movs
mov
mov
aam
sub
mov
mov
pusha
jae
inc
xlat
cwde
inc
sbb
push
(bad)
shr
clc
nop
fs
into
cmc
mov
addr16
leave
push
dec
es
mov
out
xor
mov
fimul
outs
mov
mov
mov
add
fcomip
test
xlat
mov
mov
adc
stos
cmp
shr
mov
nop
add
xchg
and
popa
jg
inc
mul
fs
and
mov
repnz
add
out
mov
aas
in
pop
aaa
sbb
jae
loopne
fs
jp
(bad)
js
push
shl
popa
rol
addr16
adc
xchg
nop
lea
sar
dec
cli
ja
mov
pusha
fisttp
mov
cmp
cmps
jg
sbb
mov
and
ja
mov
es
lds
push
mov
in
psrad
sbb
inc
jo
stos
ins
xchg
arpl
leave
daa
dec
js
jbe
push
stc
inc
outs
dec
xchg
mov
inc
adc
mov
fmul
mov
mov
fdiv
push
sbb
or
push
bound
add
mov
test
push
loopne
sub
in
push
dec
push
retf
rcr
clc
test
leave
xchg
mov
aad
add
mov
mov
test
lds
or
cs
add
xchg
dec
jp
mov
cmp
je
fsubr
sub
popa
and
xor
pusha
es
inc
popf
mov
xchg
push
scas
stos
imul
cli
out
mov
pop
lahf
clc
or
fstp
mov
jmp
ss
in
jae
and
xchg
xor
mov
je
(bad)
pop
fadd
add
js
rcr
lea
lahf
mov
test
arpl
mov
cmps
mov
mov
mov
add
enter
mov
cmp
iret
ret
mov
cs
mov
mov
sub
xor
out
(bad)
dec
imul
leave
jns
adc
dec
hlt
cmp
adc
add
mov
sub
xchg
adc
xor
jbe
mov
jmp
jbe
push
das
(bad)
in
add
mov
int3
mov
add
cld
mov
sbb
sahf
jbe
inc
push
popa
mov
or
push
pop
ss
aam
dec
pop
jle
or
inc
into
sbb
mov
adc
fwait
cs
mov
mov
add
sub
aam
sub
mov
fsub
adc
inc
fld
jmp
sub
inc
stos
pop
mov
int
mov
test
jne
jnp
into
lahf
mov
ss
and
add
rol
loopne
push
rcr
inc
fs
or
cli
mov
in
mul
pop
xchg
(bad)
jmp
mov
fcmove
pusha
aas
mov
das
pop
scas
les
fistp
sub
(bad)
push
xchg
out
jbe
dec
pushf
xor
cmp
xchg
pop
mov
inc
(bad)
dec
sbb
sti
shl
stos
adc
test
enter
scas
pushf
mov
arpl
(bad)
scas
mov
push
jg
sbb
mov
(bad)
push
xchg
jle
inc
adc
push
mov
aas
cmp
mov
inc
push
test
adc
out
ja
in
mov
ficomp
mov
aas
inc
ret
daa
dec
mov
sub
xor
jbe
add
test
in
rcr
out
push
mov
xor
je
ja
fist
cli
lds
cmp
(bad)
or
jae
mov
test
aam
jbe
mov
pusha
mov
push
xchg
sub
mov
shl
jmp
mov
sar
test
dec
(bad)
fwait
push
xchg
jmp
ja
das
rol
push
fist
js
lahf
cmps
stos
les
xchg
cmp
shl
xchg
addr16
(bad)
mov
ja
dec
mov
jo
adc
mov
pop
push
add
int
es
xlat
jne
cmc
(bad)
fbstp
daa
mov
push
stos
arpl
xor
call
fiadd
frstor
sahf
xchg
push
les
jl
jae
adc
cmp
inc
mov
pusha
xor
pop
xor
dec
lock
in
dec
lds
and
jp
ja
hlt
add
mov
sbb
jae
mov
mov
jae
pop
jnp
enter
sub
mov
sti
push
mul
lahf
(bad)
mov
jne
jo
jmp
stos
out
and
or
ret
aaa
ja
xchg
retf
aaa
mov
mov
addr16
xchg
cmp
push
jo
pop
cmp
dec
mov
mov
pop
rcr
inc
in
stos
dec
mov
out
xchg
or
(bad)
pop
inc
push
mov
nop
jno
lds
ja
mov
dec
jmp
lock
dec
sub
outs
lds
mov
xor
lock
aad
int
xchg
or
push
fld
mov
das
out
pop
inc
mov
jle
shl
or
sbb
test
int
mov
jmp
and
jecxz
xchg
sar
or
xchg
or
cmp
cwde
pusha
cmps
push
cmp
int
int3
jecxz
xchg
(bad)
pop
popa
jmp
xchg
push
jecxz
pop
cli
adc
nop
push
aaa
push
fcmovnbe
aam
or
mov
or
out
jb
lea
inc
sbb
test
jp
mov
outs
push
pop
fst
cmp
stos
scas
mov
adc
mov
dec
int3
push
dec
loopne
(bad)
inc
jo
fcomp
add
retf
mov
mov
jae
mov
jg
adc
jbe
pop
mov
retf
jmp
sub
inc
daa
out
test
dec
dec
jecxz
adc
sbb
aad
dec
mov
inc
ja
inc
ins
loope
cmc
std
stos
and
and
sbb
sbb
iret
xchg
xchg
dec
sbb
popa
test
xchg
jg
dec
sub
jbe
jns
or
xchg
mov
outs
mov
mov
xor
add
or
cmp
add
jb
outs
hlt
(bad)
fdivr
sbb
enter
push
scas
adc
or
inc
or
gs
mov
hlt
mov
sub
and
mov
cmp
mov
enter
mov
cmp
adc
mov
mov
push
mov
push
out
test
jmp
dec
cpuid
push
pop
mov
clc
push
fisttp
xchg
xor
mov
cmp
sbb
mov
imul
push
mov
mov
les
mov
xchg
std
inc
ins
mov
in
lods
and
inc
les
call
test
iret
adc
out
aam
fwait
or
outs
mov
push
sub
jg
fiadd
mov
(bad)
cwde
mov
in
xchg
js
adc
mov
mov
sbb
sahf
xlat
popa
mov
jmp
mov
adc
jns
xchg
rcr
mov
icebp
jo
mov
out
jne
loope
push
imul
jl
paddb
xor
fdiv
xchg
xor
jo
xor
xchg
xchg
jmp
pop
push
sub
movs
and
xchg
or
adc
inc
mov
xchg
jns
jbe
sub
jbe
outs
cmp
cmp
mov
pop
sbb
test
inc
pop
sub
fwait
dec
std
mov
data16
or
pop
fidiv
jl
mov
clc
out
(bad)
add
dec
jmp
(bad)
jg
or
inc
(bad)
fadd
sahf
xchg
ins
imul
fiadd
or
cmc
nop
dec
mov
daa
lea
call
sbb
jne
or
mov
aad
xor
push
inc
mov
inc
in
dec
dec
outs
adc
add
sub
inc
ja
stos
xor
mov
mov
xchg
pop
add
in
xor
pop
daa
scas
push
xchg
inc
xor
dec
mov
ss
inc
cmp
pop
sbb
loope
adc
inc
retf
inc
outs
lock
stos
repz
frstpm(287
fs
fnstenv
cld
adc
sub
sbb
mov
mov
nop
cmps
mov
push
daa
iret
fistp
add
dec
int
mov
dec
stc
sbb
adc
stc
out
repz
jae
sti
jbe
repz
ja
mov
push
pop
lods
retf
mov
into
mov
push
mov
mov
les
outs
je
pop
jmp
test
mov
and
movs
xlat
xlat
sbb
retf
into
outs
jecxz
pop
dec
es
movs
(bad)
pop
xchg
jno
jmp
jmp
jo
and
and
mov
movs
scas
adc
test
call
sub
jmp
movups
hlt
sbb
xchg
sub
cdq
mov
xchg
enter
xor
outs
mov
jbe
in
or
pop
adc
mov
aas
sbb
or
shl
loope
daa
and
leave
xlat
mov
pop
jl
inc
test
pop
fs
mov
stos
pop
iret
jg
call
cld
sti
(bad)
pop
in
xor
or
cli
add
scas
ja
push
jge
mul
ret
xlat
cmp
mul
dec
stos
mov
ja
push
jle
adc
aam
cmp
stc
test
cmp
pushf
sbb
dec
pop
call
jmp
dec
mov
out
stc
mov
test
sub
inc
lds
cmp
mul
jae
xchg
push
inc
add
mov
movs
adc
xchg
add
popa
ja
mov
cmp
mov
sub
push
stos
rol
mov
jecxz
jno
or
ins
pushf
inc
or
(bad)
lds
fiadd
jne
fstp
fdiv
iret
std
stos
sbb
dec
mov
push
jne
lahf
fimul
jbe
ret
cmps
retf
repnz
sbb
jns
sub
sbb
jbe
nop
cdq
mov
out
jp
add
scas
xor
lock
(bad)
stos
add
mov
fdivr
aas
add
daa
gs
mov
mov
iret
jo
jg
mov
clc
cmps
movs
(bad)
in
sar
mov
pop
aaa
mov
mov
ret
pop
les
mov
loopne
es
shl
mov
sbb
sti
jbe
add
pop
mov
sub
pop
sbb
inc
ja
dec
dec
pop
mov
jne
ja
mov
retf
mov
pop
ja
js
mov
mov
inc
sti
stos
(bad)
push
inc
mov
fdiv
push
ja
mov
mov
sub
arpl
mov
out
xchg
test
cli
push
and
(bad)
aas
ja
mov
dec
inc
mov
adc
fidivr
mov
mov
test
and
movs
pop
mov
push
push
adc
in
pop
icebp
sbb
or
cmp
and
mov
ins
mov
mov
out
inc
ret
add
loope
mov
sbb
adc
jle
loope
xchg
dec
cmp
push
inc
jp
ja
rcl
xchg
mov
dec
pop
or
stos
adc
jecxz
xchg
adc
sbb
mov
loopne
cmpxchg
and
xchg
sbb
imul
sub
add
jp
std
push
pop
imul
lods
out
dec
(bad)
mov
aad
sub
pop
stos
movs
imul
scas
jg
movs
and
ficomp
test
ins
mov
movs
or
dec
cmc
jl
add
out
mov
test
jmp
cmp
xchg
and
adc
jno
enter
adc
and
call
in
icebp
popf
inc
sub
test
xchg
(bad)
sbb
xchg
dec
mov
mov
imul
jmp
fist
inc
sub
out
pop
or
xchg
out
sub
jb
mov
in
shl
cmp
xchg
enter
xchg
daa
sbb
rol
mov
sbb
out
dec
sub
cmp
adc
loop
icebp
jle
ret
out
sub
mov
call
nop
jmp
cmp
or
xchg
push
setno
mov
xsaveopt
dec
(bad)
xor
fwait
stos
pop
mov
pop
fs
repz
xchg
int
fdiv
sub
pop
mov
enter
fwait
add
shl
fdiv
int
cs
imul
ss
(bad)
sbb
lods
sub
cmp
xchg
jmp
jb
enter
mov
sbb
jle
push
mov
(bad)
fldenv
xchg
xchg
xchg
xor
mov
loop
mov
shld
and
mov
sub
xor
rcl
sbb
sbb
pop
ja
and
fisub
mov
lods
stc
jbe
(bad)
xlat
dec
imul
xchg
dec
(bad)
mov
mov
adc
add
adc
xchg
ret
push
pusha
push
cmp
xor
out
pop
and
xchg
nop
test
mov
sbb
sbb
xlat
not
inc
mov
xchg
call
and
mov
repnz
mov
pop
cmc
cs
push
pop
jmp
aas
mov
inc
(bad)
mov
mov
sbb
xchg
mov
mov
jbe
in
call
cmp
push
xchg
or
dec
ja
cwde
data16
outs
mov
mov
scas
jbe
mov
xor
out
clc
xor
sbb
mov
cmp
mov
call
repz
lds
and
sub
jns
call
jbe
inc
xchg
mov
popa
jg
mov
dec
movs
idiv
adc
into
shl
mov
cs
sub
shl
out
cmp
push
mov
data16
mov
pop
jne
(bad)
inc
call
(bad)
pop
jge
xlat
aam
inc
sbb
aad
retf
jnp
lods
jbe
popa
jns
rcr
je
imul
pop
fdivr
mov
sub
dec
or
test
mov
mov
sbb
retf
mov
rol
inc
(bad)
fidiv
jmp
mov
retf
dec
xchg
mov
dec
je
inc
pushf
pop
sub
or
in
sbb
es
lds
pop
ja
stos
mov
push
mov
mov
dec
ja
frstor
xchg
ds
in
shl
sub
in
pop
mov
ja
lds
outs
retf
pop
ins
xchg
lds
fisubr
fild
lock
xchg
inc
fnstsw
mov
jbe
repnz
jp
or
push
ret
sbb
test
or
in
adc
leave
push
mov
test
ss
adc
aaa
ret
mov
xor
stc
stos
add
mov
popf
and
nop
jge
or
sar
scas
jle
mov
push
popf
lods
stc
movs
cmp
sbb
mov
sub
ret
mov
mov
or
ret
into
inc
mov
int
div
sub
and
push
jg
int3
das
inc
mov
and
jbe
in
xchg
sbb
pusha
mov
inc
jae
mov
dec
and
in
dec
sbb
sbb
aas
icebp
push
outs
mov
aad
and
push
addr16
sub
bound
cmps
ins
imul
fidiv
push
inc
xor
add
retf
test
pop
mov
sbb
mov
pop
cmp
in
leave
mov
test
cdq
movs
mov
fnstcw
nop
es
retf
ja
and
push
shl
jns
ror
je
jge
cmc
ret
pop
jle
(bad)
fwait
xchg
ss
and
dec
jb
sbb
call
xchg
xor
xchg
xchg
jbe
mov
or
or
dec
push
cmp
mul
in
icebp
aaa
inc
push
dec
cmps
xchg
sti
enter
ins
sar
pop
stos
and
mov
arpl
test
xchg
inc
ja
inc
gs
pop
out
ror
push
test
pop
call
adc
scas
jge
and
xor
push
(bad)
xor
xor
dec
xlat
mov
push
and
(bad)
sar
dec
cmp
mov
mov
in
cld
mov
inc
push
iret
fadd
icebp
int
shl
mov
daa
mov
inc
xor
js
and
stos
nop
ins
adc
stc
dec
mov
mov
repz
and
bound
das
jae
sub
mov
xor
in
add
xlat
mov
pushf
mov
aas
cmp
loope
jmp
icebp
leave
fld
in
xchg
xchg
xor
pop
dec
dec
test
fbstp
call
sbb
and
jg
or
mov
test
cld
in
test
ins
lods
js
inc
cmp
push
and
and
and
cmp
sbb
sub
out
jbe
fs
fsub
dec
mov
xchg
ja
sbb
(bad)
stc
div
push
and
mov
int3
inc
fsubr
sub
cli
dec
sub
mov
pop
in
daa
test
jo
bound
lea
or
sbb
inc
or
bound
add
ja
mov
add
xchg
or
ins
cmp
xor
das
cs
call
sar
sahf
sub
hlt
ss
mov
sbb
loope
or
popa
xlat
mov
pop
mov
jmp
mov
mov
(bad)
repz
test
jmp
fdivr
jecxz
aaa
repnz
xchg
ss
rep
pop
addr16
mov
mov
test
inc
clc
stos
mov
mov
(bad)
mov
shr
push
xchg
add
and
dec
pop
in
sti
in
les
xchg
push
pop
hlt
and
leave
cwde
dec
xchg
cld
mov
add
ja
fistp
jmp
mov
or
sub
mov
ja
js
pop
test
pop
pop
sbb
das
sub
pop
cmp
cmp
and
jl
fsubr
inc
xchg
jbe
cmp
out
lock
data16
rol
ja
cmp
mov
fcom
sub
add
jecxz
dec
test
test
cmp
push
outs
ja
je
rcr
and
daa
mov
gs
xor
aas
pop
movs
lea
and
sub
aas
ret
and
adc
mov
jnp
lods
pop
push
test
loope
jae
and
mov
and
xor
or
xor
jns
out
push
ficomp
rol
push
inc
mov
addps
sbb
movs
out
shl
lock
add
and
rcl
loope
cmp
cmp
mov
ja
mov
movs
ds
call
(bad)
clc
in
lods
aaa
cmp
mov
fistp
inc
and
(bad)
jne
cmps
xchg
push
mov
push
in
jno
mov
dec
cmp
in
pop
sbb
leave
mov
popa
ret
fwait
ds
jns
popa
in
or
mov
xchg
popf
shl
rol
std
push
xchg
dec
daa
cwde
ficom
inc
ja
cli
cmp
mov
mov
jo
test
jne
xchg
sbb
in
test
ror
cmc
mov
fdiv
outs
and
hlt
mov
mov
xadd
cs
mov
sbb
xor
scas
jle
gs
int3
sub
out
mov
adc
mov
enter
cmps
jecxz
cld
sub
int
sub
scas
mov
and
mov
gs
xchg
mov
bswap
cmp
aaa
pop
inc
dec
rcl
pop
dec
dec
pusha
jg
mov
ja
cmp
cli
jp
mov
or
xchg
(bad)
cdq
xchg
xchg
push
mov
outs
test
mov
cmp
movs
fwait
mov
cmp
mov
mov
pop
sub
mov
sub
ins
mov
(bad)
mov
stos
pop
mov
fnstsw
push
sbb
stos
lds
mov
and
loope
lods
fdivrp
push
idiv
push
pop
cmp
mov
dec
push
add
mov
jb
ss
inc
adc
in
dec
shl
jge
xchg
test
test
outs
fidiv
sbb
ins
or
(bad)
cmp
jmp
push
dec
sub
xor
sbb
in
adc
mov
cmps
jle
xor
sub
loope
cmp
loopne
les
neg
scas
dec
mov
adc
popa
mov
and
dec
sbb
and
mov
mov
stos
iret
jg
outs
mov
test
mov
mov
mov
test
fs
mov
(bad)
outs
mov
popa
mov
xor
mov
nop
mov
jp
and
out
fidiv
mov
in
jle
icebp
les
into
ja
inc
div
test
mov
pop
test
jle
nop
mov
cmps
push
je
cmps
js
adc
pop
pop
out
jne
mov
mov
add
xor
sub
dec
or
bound
dec
mov
in
test
test
or
movd
fadd
cs
cmp
aam
adc
push
ja
pushf
(bad)
das
lods
pop
adc
pop
mov
jmp
enter
imul
jne
adc
push
icebp
xlat
dec
mov
loopne
hlt
inc
outs
shl
mov
adc
aad
lea
mov
lods
lds
cmp
inc
pop
bound
jb
hlt
sbb
xchg
pushf
nop
sar
std
sbb
jg
hlt
or
movs
jle
bound
ror
inc
adc
mov
or
xchg
xchg
lock
jno
les
add
dec
imul
mov
and
jb
jmp
fnsave
cmc
push
xor
(bad)
jbe
jnp
into
out
sub
mov
loopne
sahf
mov
(bad)
jbe
lock
cmp
scas
pop
mov
mov
cmp
mov
or
push
jno
loope
mov
dec
ja
retf
dec
das
ins
mov
cmp
inc
dec
ret
inc
and
ja
mov
push
ja
jno
mov
dec
sub
gs
hlt
ins
fidiv
in
jbe
popf
inc
sub
fnsave
fdivr
push
push
jge
sub
(bad)
fcomp
das
(bad)
jecxz
mov
sub
xchg
repnz
jg
lock
sub
lahf
xchg
xchg
inc
dec
(bad)
jbe
mov
push
xchg
mov
inc
mov
(bad)
fist
xor
push
mov
inc
cld
repnz
shl
outs
in
mov
scas
sbb
daa
sbb
cmp
or
mov
sub
adc
mov
jo
in
mov
aaa
xchg
xchg
call
push
in
pop
add
fwait
inc
cmp
or
or
sbb
fld
aad
mov
jmp
jg
sbb
add
popf
add
adc
bound
cmps
adc
rcr
cli
cld
mov
test
sub
ror
xchg
or
call
in
pop
inc
sub
aaa
lods
repnz
cmp
jl
fild
mov
adc
jbe
jge
pop
mov
in
mov
pusha
or
(bad)
dec
xchg
sbb
jbe
mov
aam
xchg
popf
scas
fild
mov
mov
cmp
loop
cmps
xor
call
es
push
adc
data16
ror
mov
push
les
cmps
cwde
jmp
jbe
mov
popa
cmp
and
neg
cli
jmp
ja
pop
sbb
test
mov
in
mov
movs
call
inc
dec
out
xor
mov
dec
jb
fimul
mov
or
fnstcw
or
loopne
test
out
push
push
mov
jb
data16
xchg
fidivr
or
add
inc
adc
mov
hlt
mov
cmp
adc
add
call
jg
test
pop
adc
je
adc
push
mov
aad
push
fisttp
push
aas
test
sub
jmp
es
sub
ins
repnz
or
dec
add
leave
cmp
cwde
mov
mov
push
cld
fwait
stos
jmp
popf
sub
sbb
neg
sbb
and
movs
jne
push
mov
and
jbe
test
inc
add
push
add
dec
aaa
jmp
jle
scas
icebp
ins
jge
je
sti
fmulp
mov
mov
test
xchg
clc
jno
out
or
pop
ds
daa
jnp
aad
(bad)
out
sub
(bad)
pop
xchg
and
lea
push
inc
add
repz
out
inc
pop
xchg
inc
shl
cmp
push
ins
call
jg
addr16
push
sub
cmp
mov
add
mov
in
sbb
aaa
retf
sub
test
push
jno
add
cld
mov
inc
xchg
(bad)
fdiv
shl
into
(bad)
loopne
ret
mov
setns
xchg
jbe
jl
movs
cmps
xchg
push
mov
mov
es
xchg
shl
sbb
loop
jno
cmps
inc
sar
dec
mov
mov
pop
inc
loopne
inc
inc
aas
lahf
sahf
aas
or
mov
fld
push
inc
and
cmp
fsub
add
ins
cmp
icebp
push
call
sub
adc
sbb
lfs
fwait
adc
and
jp
mov
sbb
sub
hlt
ds
frstor
or
mov
sbb
movs
add
mov
arpl
std
jg
and
aas
xchg
inc
jo
cld
retf
push
jle
sub
cmp
xchg
lock
mov
clc
retf
inc
ja
jg
cdq
jo
bnd
fldenv
(bad)
movs
mov
ja
jns
repnz
sub
daa
(bad)
mov
sub
jmp
mov
sbb
jmp
aaa
sbb
call
neg
mov
inc
lods
or
loop
dec
adc
jae
std
inc
cs
icebp
arpl
outs
cmp
pop
(bad)
cli
mov
retf
aas
mul
inc
ja
pop
inc
pop
rol
cdq
mov
int3
imul
mov
adc
jns
(bad)
mov
out
rcr
and
pop
cmp
ja
fild
jle
(bad)
mov
mov
fwait
inc
sub
call
jmp
xor
cmp
sbb
mov
xchg
scas
adc
mov
push
mov
cmc
popf
rcr
(bad)
jbe
imul
push
xchg
mov
dec
or
mov
mov
ret
es
cwde
pop
je
or
test
stos
and
stos
jbe
(bad)
cmp
mov
(bad)
lock
jecxz
push
ja
sbb
mov
mov
cli
dec
(bad)
fwait
dec
rcr
push
mov
into
xor
(bad)
mov
xchg
cmp
or
cmp
aam
neg
jb
jbe
sub
sbb
cld
jbe
mov
or
jae
lock
je
ret
gs
push
cmps
jo
sbb
push
jmp
out
dec
xchg
fisubr
(bad)
jmp
mov
push
ja
jmp
pop
mov
pushf
xor
pushf
mov
jge
and
fwait
mov
(bad)
sbb
mov
jp
add
shr
cdq
mov
jp
mov
xor
je
mov
test
push
fs
pushf
movs
sbb
adc
cmps
push
xchg
mov
rol
jle
mov
adc
xor
nop
mov
xchg
out
push
inc
(bad)
outs
das
and
mov
div
imul
sbb
adc
mov
scas
lds
aas
sahf
push
fxrstor
mov
mov
pop
bound
sar
test
jbe
sub
ins
dec
mov
sub
push
test
(bad)
pop
adc
sbb
mov
cmps
icebp
lahf
bound
mov
cdq
dec
cmovns
jne
icebp
push
mov
into
mov
imul
call
gs
cmp
mov
ret
and
push
mov
push
(bad)
lock
cmp
inc
gs
xor
(bad)
jl
or
sub
dec
les
leave
push
sbb
mov
pop
xchg
pop
stc
(bad)
jbe
lock
imul
jecxz
and
ins
mov
loopne
adc
or
test
and
ret
add
pop
mov
retf
stos
mov
(bad)
icebp
push
inc
les
pop
int3
test
cmp
push
pop
call
mov
lods
mov
xchg
call
mov
mov
fucom
pop
ins
xchg
lea
cmp
inc
xchg
jl
int
in
jo
lock
addr16
and
hlt
cmp
jbe
mov
aas
pop
mov
test
jbe
inc
xlat
inc
sbb
and
test
movs
xor
cdq
cmp
inc
mov
enter
fnstenv
push
aam
sbb
aam
mov
jbe
xor
push
inc
xchg
and
outs
popf
lods
shr
mov
outs
test
fbstp
mov
jmp
dec
stc
adc
mov
mov
adc
mov
scas
xor
cmp
sbb
pop
xchg
stos
repz
push
out
(bad)
jbe
xchg
jae
jbe
dec
outs
inc
fild
ror
out
jnp
mov
or
jo
jg
pop
sahf
mov
dec
xor
jle
fistp
je
mov
in
jecxz
js
ja
dec
adc
aam
gs
push
add
mov
retf
fdiv
jno
sbb
adc
sbb
imul
int3
stos
mov
int
icebp
mov
fadd
jmp
pushf
adc
addr16
retf
test
mov
push
jmp
cwde
sti
fstp
pushf
scas
arpl
jb
loopne
je
xchg
mov
jbe
icebp
pusha
or
(bad)
cmp
mov
hlt
add
mov
sub
xor
fs
jne
ja
in
mov
ds
pushf
xlat
adc
mov
adc
push
fwait
xchg
out
js
sbb
lahf
bound
imul
pop
inc
stc
sbb
mov
mov
test
jns
mov
stc
sub
cmp
push
or
scas
jbe
inc
jmp
and
rol
stos
cld
dec
loope
fiadd
imul
mov
cdq
mov
std
nop
test
ror
in
mov
sbb
je
scas
scas
fild
dec
jg
or
and
add
dec
call
in
ja
xor
pop
inc
mov
scas
add
(bad)
xchg
add
xchg
sbb
xor
ror
xlat
adc
outs
add
shl
bts
out
fwait
push
sar
mov
push
pop
call
les
pop
jmp
sti
rcl
neg
dec
xchg
test
ins
xchg
adc
cmp
int3
outs
push
mov
mov
xor
jecxz
out
inc
mov
jns
sub
mov
ja
mov
bnd
out
test
jb
or
push
mov
outs
rcr
ja
xchg
mov
xor
inc
push
mov
mov
or
fnsave
mov
xchg
ficomp
jnp
add
inc
fsin
gs
ss
fs
mov
popa
cmp
jnp
sub
lds
mov
or
or
mov
fwait
dec
adc
mov
imul
sahf
scas
sbb
test
pop
mov
xor
stc
addr16
cmp
xchg
shr
scas
inc
cmps
inc
add
inc
xchg
loope
cld
inc
cmp
xchg
test
mov
je
pop
xor
jp
mov
and
shl
mov
push
dec
das
rdmsr
dec
dec
dec
mov
sub
xchg
mov
push
pusha
inc
adc
cwde
les
aas
ja
jp
sub
ret
fdiv
sub
aas
(bad)
movs
sbb
fcmovne
test
pushf
jnp
inc
mov
mov
xor
mov
mov
adc
ja
lods
pop
mov
dec
das
test
mov
jmp
pop
mov
lods
iret
mov
cmp
fucompp
test
lods
lea
mov
jp
sub
mov
mov
xor
pop
mov
push
rol
add
mov
test
les
or
pop
ja
test
test
dec
dec
lods
mov
xchg
dec
aaa
neg
jge
ja
push
or
gs
xor
or
inc
adc
stc
adc
mov
add
imul
push
pop
scas
jnp
iret
sub
jbe
mov
(bad)
fild
int3
push
xor
mov
cmp
mov
cmp
jge
sub
retf
xchg
mov
sub
repnz
sub
mov
xor
or
pop
je
loop
imul
xor
imul
fs
je
pop
jns
fcom
sahf
cli
imul
or
pop
push
jg
ror
mov
ja
xchg
out
mov
sbb
add
pop
xchg
mov
pop
and
add
and
jns
sub
in
push
jp
dec
clc
sahf
xchg
mov
cwde
push
imul
jg
cmc
in
int
sub
ja
sub
ja
cmp
and
pop
fidivr
popa
out
xchg
call
cli
sub
sahf
jmp
sub
push
pop
dec
cdq
jbe
dec
test
or
cmp
jle
rcr
popa
xchg
xchg
jmp
xchg
or
iret
pop
cmp
jo
jge
mov
inc
mov
je
add
add
test
test
pop
dec
jb
mov
ja
pop
sub
jno
pop
xchg
fcomip
outs
push
and
mov
scas
test
inc
mov
cld
mov
adc
(bad)
jmp
stos
or
xchg
push
ja
pop
mov
mov
mov
sbb
jmp
ret
mov
jecxz
scas
mov
iret
mov
clc
inc
jae
jb
cmp
jae
sbb
jb
sti
and
xlat
push
xchg
jbe
pmullw
or
lods
dec
shl
dec
ins
pushf
bnd
shr
movs
emms
in
push
jp
xlat
repz
mov
jecxz
pop
fdivr
ja
sbb
sub
jns
int3
cmps
rol
mov
dec
push
mov
dec
mov
ret
mov
int3
mov
scas
and
xlat
ret
cmp
xchg
dec
dec
fild
lea
and
test
dec
xor
pop
js
in
cmp
std
cmp
loop
not
out
test
scas
mov
sbb
cld
cli
test
sti
pop
sbb
and
inc
(bad)
dec
das
(bad)
jnp
jnp
xor
(bad)
fnstsw
sbb
jne
pushf
jo
retf
dec
ja
pop
dec
adc
mov
sub
cmps
mov
pop
sub
push
stos
mov
push
xchg
repnz
jo
push
stos
jmp
inc
cmp
xchg
ret
int
je
adc
dec
loopne
mov
ret
sub
cmps
popf
neg
mov
sub
idiv
rcr
mov
aam
enter
xor
lock
add
push
mov
sti
mov
in
xor
xchg
(bad)
stos
adc
test
test
add
test
xor
in
push
pop
mov
je
cmp
push
fidivr
add
cld
loope
push
je
push
mov
clc
push
push
fiadd
jle
lods
xchg
jne
push
sbb
xor
add
ss
cmp
or
cld
js
pop
fistp
mov
jb
cmp
test
ins
sub
cmp
and
mov
popa
movsx
fs
xchg
pop
mov
ja
cmp
ret
fnstsw
scas
dec
push
cmp
sbb
xchg
cli
mov
xchg
test
imul
xchg
add
jmp
je
(bad)
sub
jb
push
add
jns
dec
mov
int
jg
fidiv
dec
xchg
lods
ret
in
fcmovnb
popf
jmp
leave
xchg
test
inc
pop
cmp
dec
jo
xor
in
jne
jbe
sbb
add
daa
jae
lock
ins
sub
push
sbb
cmp
xor
cmps
pop
or
xchg
popa
push
ret
out
addr16
add
retf
ja
repnz
and
dec
inc
push
adc
push
push
mov
pushf
jmp
and
mov
mov
retf
xchg
push
das
ss
dec
popa
xchg
or
jbe
cmc
clc
aam
stc
xchg
and
not
test
add
out
stos
mov
sub
je
les
cmp
mov
adc
addr16
sub
push
sbb
pop
sbb
js
popf
arpl
ins
jnp
jg
(bad)
pop
fs
popa
dec
(bad)
aaa
mov
mov
shl
xchg
cmc
and
dec
mov
jne
es
je
mov
(bad)
adc
scas
or
sub
xchg
push
mov
xor
iret
dec
and
lods
pop
or
clc
jbe
and
cmp
inc
lods
or
scas
lea
mov
lock
arpl
xchg
push
add
jbe
mov
cmp
inc
stos
jmp
in
loop
pop
xchg
inc
and
mov
inc
outs
jmp
inc
test
test
out
pushf
(bad)
jge
mov
sbb
sub
xor
sbb
mov
mov
cmp
dec
hlt
inc
mov
mov
inc
xor
pushf
mov
(bad)
cmp
inc
add
dec
push
cli
adc
pop
mov
scas
adc
jmp
aas
enter
and
jb
mov
mov
(bad)
jae
and
mov
dec
sahf
push
test
inc
sub
push
jmp
push
daa
dec
cli
push
push
jge
popf
stos
xor
test
movs
mov
iret
(bad)
or
in
push
cmc
inc
sbb
mov
xor
out
xchg
mov
adc
cmp
ja
cdq
push
add
test
shl
mov
and
or
push
ret
adc
aam
push
adc
sbb
loopne
mov
test
mov
outs
add
mov
sbb
js
mov
outs
pop
add
jecxz
repz
xor
test
fadd
mov
mov
aad
xchg
and
pop
mov
in
push
add
mov
xchg
sub
call
jbe
loopne
mov
xchg
mov
fld
(bad)
pop
mov
test
es
(bad)
add
mov
adc
call
clc
mov
xor
mov
ret
add
xchg
cdq
jae
xchg
in
ja
test
das
test
cmps
pop
imul
adc
in
nop
pop
enter
mov
rcr
inc
ja
mov
jp
mov
and
loopne
ins
jmp
jle
(bad)
test
mov
xchg
call
sub
mov
shr
xchg
mov
and
push
add
not
scas
test
cmps
call
cli
and
pop
jns
mov
adc
push
push
js
jecxz
sbb
rcl
sbb
mov
in
out
aad
or
pop
mov
cmp
std
(bad)
jbe
add
retf
mov
mov
shr
xchg
mov
stos
xor
mov
not
inc
mov
mov
repz
pop
jmp
adc
xchg
test
push
(bad)
and
inc
xor
mul
pop
dec
dec
sub
add
pop
stos
mov
je
out
lds
inc
repz
inc
lods
pop
jecxz
xchg
adc
push
enter
mov
loopne
aad
xchg
lahf
out
mov
in
ror
jmp
fisttp
mov
or
movs
or
or
and
mov
and
sbb
pop
xor
mov
(bad)
mov
adc
adc
jle
enter
inc
push
push
cmps
out
inc
dec
pop
jg
lods
sub
dec
not
jmp
xchg
(bad)
loop
loopne
inc
fbld
fiadd
lds
loop
and
iret
cmps
das
pop
mov
mov
inc
xchg
xchg
xchg
data16
pop
popf
mov
push
lea
mov
mov
std
cs
pop
mov
pop
fdivr
pop
xchg
inc
mov
mov
xchg
jmp
jecxz
test
push
xchg
cmp
std
test
(bad)
pop
je
movs
lock
jp
mov
mov
push
popf
mov
mov
mov
pop
iret
sub
mov
les
jne
sbb
loop
jg
pop
jecxz
mov
pop
mov
mov
sub
in
and
loop
in
fidiv
mov
lods
mov
cmp
jo
sub
pop
psubq
push
push
cdq
mov
retf
inc
xchg
xor
mov
jbe
in
adc
mov
and
xor
mov
sahf
sub
push
cmp
stos
(bad)
test
fdivp
fmul
xor
sbb
sti
or
xchg
adc
test
jb
and
cmc
(bad)
mov
mov
mov
scas
std
sbb
cli
test
sti
jno
sahf
test
xor
dec
lea
sbb
aad
fimul
dec
outs
popa
stc
jbe
inc
mov
repnz
sbb
fcomp
(bad)
das
cmp
and
es
test
push
inc
rcr
mov
dec
mov
cmp
pop
xchg
jnp
mov
mov
mov
adc
and
daa
movs
jbe
sbb
add
aam
sub
xor
sbb
pop
ja
cmp
inc
and
xchg
cli
std
xchg
mov
push
lds
aaa
sub
inc
sub
ins
sub
and
xchg
add
pop
aad
cld
(bad)
gs
push
test
in
mov
pusha
mul
cmp
inc
dec
mov
fstp
and
movs
push
ja
out
push
imul
xchg
punpcklbw
aas
mov
sub
jmp
xchg
pop
bound
jae
mov
call
out
bound
mov
mov
scas
fstp
jmp
call
mov
sub
fisubr
xchg
(bad)
aam
and
ja
scas
fmul
int
jmp
xor
xor
pop
adc
stc
sbb
sub
fist
or
or
adc
pop
push
test
or
xchg
inc
mov
cmps
retf
jo
popf
xor
or
popa
or
add
cmp
pop
push
pushf
and
cmp
dec
mov
fwait
push
sub
(bad)
jbe
into
mov
mov
and
sbb
inc
push
or
mov
fnsave
adc
mov
repz
dec
stos
stc
jbe
scas
sbb
pop
aad
mov
sub
adc
scas
pop
sub
int3
dec
aam
push
cmp
mov
in
cli
xchg
mov
mov
mov
icebp
mov
ret
test
int3
mov
fiadd
sub
ins
inc
inc
mov
scas
mov
jg
aam
add
and
sub
cmps
or
lds
xchg
sub
mov
add
popf
add
lea
aad
(bad)
adc
sbb
mov
mov
cmp
lods
test
jle
lds
out
inc
mov
mov
fcmovnb
adc
test
lahf
sar
pop
or
fist
jmp
test
fldenv
and
mov
mov
in
frstor
and
mov
mov
cld
neg
lods
test
jp
mov
pop
aam
repnz
dec
xchg
rol
push
cs
mov
mov
outs
das
jnp
push
ja
inc
fisttp
ret
imul
mov
(bad)
sahf
rol
mov
xchg
inc
call
in
mov
mov
ja
int3
xlat
call
xchg
sar
inc
push
out
test
jp
sbb
pop
mov
push
mov
xor
daa
mov
pop
ja
add
retf
(bad)
in
mov
shl
pop
sbb
xchg
int
mov
cmp
sbb
add
and
pop
movs
pcmpeqb
out
sbb
mov
push
push
movs
shr
outs
mov
pop
clc
fdivr
add
xchg
pop
arpl
mov
jno
lahf
and
fs
xor
out
push
pop
fdivr
or
cdq
jp
inc
add
add
adc
push
dec
sub
mov
mov
xchg
pop
mov
xchg
dec
out
push
addr16
out
out
push
jo
nop
pop
addr16
int
sahf
nop
call
and
loopne
mov
arpl
cwde
fwait
dec
arpl
push
sbb
mov
jno
loop
adc
mov
jb
inc
xor
sbb
mov
daa
fnsave
mov
hlt
xchg
les
jmp
sti
ds
push
fisttp
pop
lods
scas
int3
mov
jns
pop
cmc
arpl
stc
jge
xor
adc
mov
je
mov
fisub
in
dec
fwait
popa
stos
hlt
xor
mov
fstp
xchg
jb
outs
in
test
mov
xchg
shr
test
pop
idiv
push
pop
scas
js
inc
(bad)
mov
sub
loop
arpl
dec
test
push
aaa
ja
jns
dec
cs
aam
mov
(bad)
sub
lods
mov
pop
xor
popf
push
fidiv
xchg
jns
jb
aam
stos
cmp
xchg
mov
test
mov
sub
xchg
mov
aad
inc
inc
mov
nop
dec
in
xchg
bound
push
aaa
and
lods
mov
std
cmp
and
test
stos
mov
imul
leave
test
cmps
scas
lahf
retf
push
cs
inc
adc
cld
test
hlt
in
ss
mov
jae
jle
js
shr
(bad)
mov
jmp
mov
packsswb
xor
inc
stc
xchg
xchg
pusha
es
cmp
lahf
jmp
movs
(bad)
and
mov
mov
out
mov
xor
add
fdiv
lea
ja
sbb
mov
aaa
mov
popf
adc
inc
jle
cmp
mov
fsub
arpl
pop
cdq
lea
dec
inc
ins
mov
cmps
mov
jns
push
ds
push
ja
daa
sub
push
and
jbe
mov
jmp
cld
cwde
out
inc
jmp
xor
ja
inc
mov
pusha
mov
stc
arpl
sub
jno
xor
ret
test
js
scas
fidiv
lea
push
jmp
int
jb
jle
mov
mov
hlt
popa
ja
or
cmps
dec
test
adc
pushf
je
mov
mov
jle
pop
enter
js
pop
pop
in
pop
mov
sahf
add
mov
out
out
mov
dec
mov
mov
sbb
jg
nop
xchg
xor
iret
inc
shl
xchg
jno
aaa
ja
add
push
je
cmp
rol
das
(bad)
sbb
scas
jle
mov
call
push
daa
cmp
xchg
mov
pop
adc
fdivp
in
fcomp
pop
mov
lods
fidiv
jl
call
retf
jecxz
test
xor
mov
lods
xor
mov
mov
les
(bad)
push
push
sar
repnz
call
mov
inc
mov
test
pop
cmp
add
loope
cs
cmps
mov
and
push
sub
(bad)
xor
into
push
ret
rcl
and
jb
xor
stc
into
adc
adc
cmp
dec
cli
leave
push
cmp
adc
dec
xor
(bad)
daa
mov
adc
jbe
in
scas
(bad)
xchg
mov
mov
mov
dec
or
mov
and
scas
call
movs
fcomp
dec
rol
xchg
and
int3
ss
fbstp
pusha
mov
mov
mov
ja
retf
push
push
leave
ss
cmp
jmp
aaa
repnz
ror
(bad)
mov
push
pop
xor
adc
mov
pop
fist
mov
mov
repz
imul
xor
xor
and
out
pop
pop
data16
div
mov
xchg
pop
aaa
xchg
xor
jo
lods
jb
sbb
mov
outs
push
dec
inc
imul
inc
icebp
jbe
rcr
(bad)
add
sar
xchg
cmp
pushf
mov
bnd
pop
fwait
mov
test
pop
enter
pop
or
mov
rol
sbb
stos
lods
imul
xchg
out
stos
ins
push
mov
imul
(bad)
std
cmc
arpl
mov
imul
les
sar
mov
lods
.byte
test
