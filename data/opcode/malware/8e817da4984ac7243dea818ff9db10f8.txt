jo
add
add
add
dec
add
add
add
add
push
add
add
add
and
add
std
add
add
xor
add
add
add
and
or
jge
add
add
add
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jle
add
or
add
add
sub
add
or
add
add
add
inc
add
add
add
add
push
pop
shl
and
shl
mov
add
add
add
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
add
add
add
add
xor
add
add
add
add
ins
(bad)
repz
ins
(bad)
repz
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
add
add
add
sbb
add
test
add
add
add
push
mov
or
or
add
add
add
add
push
push
or
pop
pop
dec
pop
push
or
pop
push
or
pop
pop
push
fiadd
add
add
or
add
inc
add
add
and
add
adc
inc
pop
add
add
add
add
add
test
add
xor
add
cmp
add
dec
add
add
add
push
or
add
pop
adc
pop
aaa
pop
push
pop
push
add
mov
or
mov
or
add
add
mov
or
lods
sub
add
add
mov
or
mov
cs
adc
sub
pop
pop
adc
push
add
add
(bad)
(bad)
jmp
iret
or
push
pop
push
add
mov
or
addr16
(bad)
jmp
add
add
add
mov
or
pop
(bad)
(bad)
(bad)
ficomp
pop
adc
push
adc
fnstsw
add
and
add
add
push
inc
add
add
adc
add
adc
inc
add
add
and
add
jecxz
(bad)
dec
add
add
add
add
add
sub
adc
or
add
add
mov
or
int3
sub
fmul
push
jae
add
or
add
add
add
push
inc
add
add
adc
add
adc
inc
add
add
jecxz
(bad)
dec
add
add
sub
and
add
add
sub
or
add
or
add
add
mov
or
into
sub
fsub
sub
push
inc
add
add
and
add
adc
inc
pop
add
add
add
data16
add
add
add
add
add
add
adc
add
push
add
add
adc
pop
adc
and
adc
sub
adc
pop
pop
and
add
add
mov
or
mov
and
add
add
push
and
add
add
sub
and
add
mov
or
fwait
adc
sub
and
add
add
sub
adc
push
inc
adc
and
add
add
(bad)
(bad)
jmp
add
add
add
mov
or
push
add
fiadd
fiadd
and
scas
push
dec
jmp
inc
add
add
adc
add
add
add
adc
add
add
mov
add
add
pop
mov
add
mov
add
adc
sub
push
mov
sub
mov
stc
add
or
add
add
add
sub
add
sub
add
add
add
pop
add
add
add
add
add
mov
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
sbb
add
dec
add
add
add
fwait
add
add
add
add
add
pop
add
add
add
add
add
add
add
cwde
add
add
add
sbb
add
ret
add
add
adc
inc
add
add
push
add
add
inc
add
add
js
add
push
add
add
add
add
add
or
add
add
pop
sar
add
add
add
add
mov
sub
push
jb
add
jo
adc
add
sub
and
add
add
add
add
add
add
cmp
jge
add
add
jae
lods
or
jae
lods
or
add
add
add
add
add
adc
add
add
mov
add
add
and
add
add
(bad)
jmp
add
add
add
mov
cmp
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
adc
add
add
add
add
add
xor
add
add
add
add
and
xor
jle
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
add
jnp
add
add
ins
pop
push
add
add
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
adc
add
add
add
cmp
add
add
add
xor
aas
add
add
add
adc
mov
pop
adc
inc
add
add
add
add
pop
mov
add
mov
add
and
inc
add
lea
add
add
jae
add
or
sub
push
inc
add
add
pop
add
add
pop
inc
add
add
outs
add
add
add
add
add
adc
add
jle
add
or
add
add
mov
pop
sub
or
add
jo
adc
inc
and
add
add
sub
jb
add
jo
lea
add
add
push
adc
push
or
and
add
adc
sbb
add
jo
adc
sub
add
or
add
add
mov
pop
sub
add
add
(bad)
(bad)
(bad)
fnstsw
fnsave
inc
add
add
pop
add
add
pop
inc
add
add
fadd
add
sahf
add
add
add
add
push
push
or
add
or
add
add
mov
pop
sub
sub
add
add
pop
add
add
pop
inc
add
add
push
add
add
add
add
add
adc
add
jle
add
or
add
add
add
mov
pop
sub
adc
inc
add
jo
adc
sub
add
sub
jb
add
jo
add
add
jno
add
sbb
add
adc
add
add
mov
pop
sub
add
add
fidiv
add
add
mov
pop
cmp
(bad)
inc
push
push
push
mov
sbb
add
and
(bad)
(bad)
jmp
add
add
mov
pop
cmp
(bad)
(bad)
(bad)
cmp
(bad)
inc
outs
sbb
add
adc
add
(bad)
(bad)
(bad)
fisubr
add
add
mov
pop
sub
push
inc
add
add
adc
add
adc
inc
add
add
xor
add
inc
add
add
(bad)
(bad)
jmp
mov
mov
inc
inc
add
add
pop
add
add
add
add
add
add
push
mov
add
add
pop
sub
and
add
add
sub
pop
outs
adc
add
and
add
add
sub
fsubr
add
mov
sub
mov
stc
add
add
add
add
add
sub
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
jne
add
add
add
pop
add
add
add
add
add
xchg
add
add
add
add
add
add
add
or
add
bound
add
add
add
and
push
pop
and
push
pop
mov
add
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
add
jl
add
add
sbb
add
jge
add
add
and
add
pop
push
add
add
fiadd
sub
push
mov
sub
mov
stc
add
add
add
add
add
add
push
push
add
pop
add
add
xor
out
add
add
add
and
mov
add
add
add
add
add
push
mov
add
add
pop
mov
add
mov
add
jle
add
or
jae
add
or
add
push
pop
pop
push
push
add
add
jo
sub
add
push
or
add
sbb
add
sub
add
add
jb
add
jo
jnp
add
add
jnp
add
add
push
add
or
add
add
add
add
add
test
add
pop
sar
add
add
mov
sub
adc
sub
add
or
sub
add
or
add
add
jo
jmp
sub
adc
sub
add
or
and
add
jge
add
add
add
fiadd
sub
push
mov
sub
mov
stc
add
add
adc
add
add
add
xlat
add
pop
add
add
xor
in
add
add
inc
add
add
push
add
add
inc
add
add
mov
add
popa
add
add
add
movs
add
add
add
or
jb
add
jo
lea
add
add
pop
push
add
adc
add
or
add
sbb
add
mov
add
sbb
add
mov
add
or
add
add
mov
sub
add
adc
add
sub
pop
mov
add
mov
add
and
add
add
add
and
add
pop
push
add
xor
pop
adc
xor
pop
adc
add
add
add
add
push
mov
add
add
and
add
add
(bad)
jmp
add
add
add
mov
cmp
(bad)
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
add
add
add
aam
add
pop
add
add
xor
add
add
add
add
adc
inc
add
add
push
add
add
inc
add
add
mov
add
lods
add
add
add
add
add
or
jle
add
or
add
add
jo
sub
add
add
add
add
add
bound
pop
push
add
pop
pop
sub
add
or
add
add
add
add
mov
sub
push
mov
add
and
ficom
nop
inc
mov
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
push
mov
add
add
push
jb
add
jo
adc
add
sub
and
add
add
(bad)
jmp
add
push
jb
add
jo
and
add
jge
add
add
add
add
mov
cmp
add
add
add
mov
cmp
(bad)
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
add
adc
add
add
add
fld
add
add
add
xor
add
add
add
add
and
jmp
inc
mov
add
add
add
add
add
push
mov
add
add
add
jnp
add
add
bound
jge
add
add
add
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
add
add
add
cmp
add
pop
add
add
xor
add
add
add
add
adc
inc
add
add
push
add
add
inc
add
add
jg
add
cmp
add
mov
add
add
add
or
jae
add
or
add
jnp
add
add
ds
sar
add
add
add
add
mov
sub
push
add
add
add
adc
add
sub
and
add
add
mov
mov
inc
inc
add
add
daa
add
add
add
add
add
add
push
mov
add
add
sub
add
add
pop
sar
add
add
add
add
mov
cmp
(bad)
jmp
add
add
add
add
jnp
add
add
push
push
and
add
add
(bad)
(bad)
fiadd
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
adc
add
add
add
ret
add
pop
add
add
xor
add
add
add
add
and
mov
inc
inc
add
add
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
mov
add
mov
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
add
mov
sub
mov
stc
add
and
mov
add
add
add
add
add
push
mov
add
add
pop
mov
add
mov
add
add
jge
add
add
or
add
pop
add
add
add
add
adc
adc
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
push
mov
add
add
add
add
add
jnp
add
add
jnp
add
add
pop
push
add
add
fiadd
sub
push
mov
sub
mov
stc
add
add
add
add
add
dec
dec
add
pop
add
add
xor
add
add
adc
mov
in
sub
mov
in
sub
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
push
xor
sub
pop
sub
jnp
add
add
pop
inc
sub
jge
add
add
and
add
pop
sar
add
add
and
add
pop
sar
add
add
add
add
add
arpl
add
or
add
jle
add
add
pop
push
add
add
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
adc
add
add
add
add
sbb
add
inc
add
add
add
adc
mov
pop
adc
inc
add
add
add
add
add
add
pop
push
add
or
add
pop
rol
add
add
pop
sar
add
add
mov
fnsave
inc
add
add
and
add
adc
inc
pop
add
add
add
add
add
add
add
dec
add
add
add
add
add
or
jle
add
or
add
add
add
jnp
add
add
push
add
add
add
add
inc
inc
jge
add
add
and
add
pop
push
add
add
add
mov
pop
sub
jo
adc
add
sub
and
add
add
(bad)
(bad)
jmp
add
jnp
add
add
jnp
add
add
rol
and
and
fs
add
add
add
add
add
add
outs
add
add
push
mov
add
add
and
add
add
(bad)
(bad)
jmp
add
add
adc
cmp
(bad)
(bad)
dec
jb
add
jo
adc
aas
and
add
add
(bad)
(bad)
jmp
add
add
jo
jnp
add
add
and
add
add
add
sbb
add
sub
add
or
and
add
add
(bad)
(bad)
jmp
add
add
add
mov
pop
cmp
(bad)
(bad)
call
mov
add
mov
add
fisttp
fld
adc
add
add
add
inc
popa
push
add
or
add
pop
rol
add
jnp
add
add
jnp
add
add
sub
add
add
add
inc
sub
jge
add
add
and
add
pop
push
add
push
and
add
add
fld
add
fnstsw
add
push
inc
add
add
pop
add
add
pop
inc
add
add
adc
add
push
add
add
add
add
add
add
sub
add
or
and
add
add
cmp
(bad)
(bad)
inc
and
add
pop
push
add
nop
add
add
fisttp
inc
add
add
pop
add
add
pop
inc
add
add
pop
add
add
add
add
add
add
and
add
pop
sar
add
add
add
add
add
pop
inc
push
inc
jge
add
add
add
add
mov
pop
sub
add
and
add
add
sub
add
add
add
popa
sar
add
add
add
add
mov
pop
sub
add
add
fidiv
fisubr
sub
push
mov
sub
mov
stc
add
add
add
or
add
and
add
adc
add
(bad)
(bad)
(bad)
cmp
lea
add
add
add
mov
pop
cmp
(bad)
(bad)
(bad)
cmp
(bad)
inc
outs
and
and
add
add
(bad)
(bad)
(bad)
cmp
add
add
inc
jl
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
xchg
add
aam
add
add
add
pop
add
add
xor
add
add
add
add
add
pop
jge
add
add
jae
add
or
add
add
sub
add
or
add
add
xor
add
add
add
jl
and
cmp
add
add
add
add
add
push
mov
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
xor
add
add
add
add
pop
mov
add
mov
add
and
sbb
xor
int
stc
xor
add
add
add
add
push
mov
add
add
jle
add
or
add
jnp
add
add
and
add
add
sub
add
adc
add
sub
sub
add
push
push
add
sbb
add
sub
add
or
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
adc
add
add
add
add
pop
add
add
xor
add
add
adc
inc
add
add
xor
add
pop
inc
or
add
sub
add
add
add
add
add
add
add
add
add
add
add
jnp
add
xor
add
pop
add
add
in
adc
and
out
sbb
add
add
add
add
add
pop
add
add
push
mov
add
add
push
push
and
add
add
jle
add
add
inc
sub
push
add
add
sldt
add
add
and
add
add
(bad)
jmp
push
and
add
add
(bad)
inc
sub
add
push
sub
and
add
add
(bad)
jmp
mov
adc
add
pop
push
add
add
add
mov
cmp
add
add
add
add
push
add
add
add
inc
sub
adc
add
pop
push
add
add
add
mov
cmp
(bad)
(bad)
inc
jnp
add
add
js
dec
and
add
add
(bad)
jmp
mov
or
add
add
mov
cmp
(bad)
(bad)
(bad)
cmp
(bad)
jmp
and
add
and
add
add
(bad)
inc
and
add
add
dec
(bad)
(bad)
jmp
add
or
scas
(bad)
(bad)
jmp
mov
add
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
inc
sbb
add
add
imul
add
add
add
add
add
xor
add
add
add
add
add
sldt
or
pop
sub
add
push
add
add
or
push
add
push
add
add
or
sbb
add
sub
xor
add
add
add
add
and
adc
jno
add
retf
inc
inc
add
add
add
add
or
add
add
add
mov
sub
mov
stc
add
pop
mov
add
mov
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
outs
add
outs
add
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
add
jge
add
add
add
add
inc
add
add
add
add
add
mov
sub
mov
stc
add
test
scas
popf
push
mov
add
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
add
mov
sub
mov
stc
add
gs
pop
and
sub
mov
add
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
add
jge
add
add
sbb
add
add
add
adc
mov
or
or
add
add
add
add
inc
add
add
daa
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
push
or
add
or
jle
add
add
popa
or
add
add
pop
push
add
add
add
mov
or
mov
push
add
add
or
add
add
mov
or
mov
add
add
push
sub
or
add
or
adc
add
push
add
adc
add
or
push
add
add
adc
cmp
(bad)
inc
jb
add
jo
adc
dec
and
add
mov
or
inc
(bad)
(bad)
jmp
push
and
add
add
(bad)
(bad)
(bad)
jle
add
add
push
add
add
add
inc
sub
add
pop
push
add
add
add
mov
or
or
(bad)
jmp
add
pop
add
add
(bad)
(bad)
(bad)
fstp
fst
inc
add
add
cmp
add
adc
inc
or
add
add
add
add
add
jb
add
fild
add
add
add
add
add
add
push
add
add
add
push
add
add
add
add
add
and
add
add
adc
inc
and
add
add
cmp
add
or
push
add
push
add
add
add
add
add
push
add
pushf
and
add
add
(bad)
(bad)
(bad)
cmp
add
add
adc
pop
pop
adc
and
add
add
(bad)
(bad)
(bad)
cmp
add
add
mov
or
inc
(bad)
(bad)
inc
mov
popa
and
add
mov
or
xor
lds
add
add
adc
add
push
add
or
adc
add
add
inc
or
add
es
add
add
mov
add
mov
add
push
adc
add
add
mov
or
out
(bad)
(bad)
cmp
add
add
add
add
inc
or
add
adc
add
pop
push
add
cmp
fidiv
sub
mov
stc
add
or
add
mov
or
test
push
or
(bad)
jmp
push
add
add
(bad)
(bad)
(bad)
cmp
(bad)
inc
mov
pop
lea
add
add
or
add
mov
or
jne
(bad)
jmp
and
add
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
add
add
mov
or
push
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
call
inc
add
add
xor
add
adc
inc
or
add
rol
add
jl
add
pop
add
add
add
add
add
mov
add
add
add
add
push
add
or
adc
add
pop
push
add
or
pop
push
add
mov
lea
add
add
or
or
jb
add
jo
adc
pop
jb
add
jo
adc
sbb
add
add
daa
add
or
sldt
add
daa
add
or
add
or
add
pop
push
add
pop
add
add
(bad)
(bad)
(bad)
jle
add
add
cli
add
add
cmp
add
add
mov
or
xor
(bad)
(bad)
cmp
or
add
mov
or
and
(bad)
call
add
repnz
add
push
add
add
(bad)
(bad)
(bad)
cmp
add
add
mov
or
cld
(bad)
(bad)
call
sub
adc
adc
add
adc
add
push
add
adc
add
or
pop
ds
jle
add
add
push
add
adc
add
or
add
inc
adc
add
add
mov
or
scas
(bad)
(bad)
dec
jb
add
jo
adc
outs
(bad)
(bad)
jmp
add
adc
cmp
inc
and
add
mov
or
cmp
dec
jb
add
jo
adc
jns
(bad)
(bad)
jle
add
add
push
add
add
add
inc
or
add
add
add
mov
or
push
(bad)
(bad)
jmp
es
add
add
or
add
inc
or
add
or
add
mov
or
cs
(bad)
(bad)
cmp
(bad)
(bad)
jmp
or
add
mov
or
sbb
(bad)
(bad)
fstp
(bad)
jmp
fst
(bad)
call
adc
add
cld
(bad)
(bad)
cmp
cld
(bad)
call
inc
add
add
daa
add
add
or
add
add
add
add
add
add
add
out
add
add
add
add
add
adc
jle
add
add
or
add
inc
or
add
push
add
add
sldt
add
add
inc
or
add
adc
add
or
push
add
add
add
mov
or
xchg
adc
pop
pop
xor
push
add
add
sub
and
add
add
(bad)
(bad)
call
pop
jle
add
add
add
sub
add
add
mov
or
pop
(bad)
(bad)
(bad)
jle
add
add
push
add
add
and
add
add
mov
or
inc
(bad)
(bad)
jmp
rol
add
add
mov
or
das
(bad)
(bad)
jmp
adc
add
add
mov
or
and
(bad)
call
sub
and
xchg
and
daa
mov
add
add
add
(bad)
inc
add
add
(bad)
inc
push
mov
add
add
and
adc
cmp
(bad)
(bad)
(bad)
fst
sti
(bad)
jmp
fisttp
sti
(bad)
dec
sub
add
and
add
and
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
push
add
add
add
add
xor
popf
push
add
or
add
push
mov
adc
adc
add
add
add
add
inc
add
add
pop
add
add
adc
add
add
add
bound
add
mov
push
push
or
add
add
pop
push
add
or
das
popa
push
add
or
or
sub
jle
add
add
push
add
adc
add
sti
add
add
add
push
add
add
or
pop
push
add
add
add
mov
adc
xchg
and
add
add
sub
add
add
mov
adc
jno
(bad)
jmp
add
and
push
add
add
add
mov
adc
push
(bad)
(bad)
jmp
add
add
add
mov
adc
inc
(bad)
(bad)
(bad)
fiadd
fidivr
and
retf
and
retf
mov
add
add
add
add
movs
add
add
mov
sub
mov
stc
add
mov
add
add
pop
mov
add
mov
add
adc
push
inc
add
add
sub
add
adc
inc
or
add
dec
add
add
add
add
add
mov
add
adc
add
fiadd
add
lds
add
sti
add
add
sub
add
adc
adc
sub
add
or
add
add
cmp
add
add
inc
add
add
pop
add
add
adc
add
add
add
dec
add
add
add
add
add
push
adc
jle
add
add
pop
push
add
push
add
add
inc
or
add
or
adc
add
add
and
add
add
adc
pop
dec
xor
and
add
add
sub
adc
pop
pop
adc
and
add
add
sub
and
add
add
fucomp
add
add
fucom
add
add
inc
add
add
pop
add
add
adc
add
add
add
add
add
push
add
add
add
add
add
or
push
adc
adc
pop
pop
adc
and
add
add
adc
pop
cmp
sub
add
add
mov
adc
shr
jle
add
add
adc
add
pop
adc
push
add
add
add
mov
adc
mov
add
add
fstp
add
fst
add
adc
mov
adc
and
add
add
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
call
inc
add
add
xor
add
adc
inc
or
add
stos
add
add
add
lea
add
sldt
add
add
add
add
add
add
add
add
add
add
add
push
add
add
or
add
add
mov
adc
mov
add
push
cs
push
add
add
sub
and
add
add
pop
sub
or
add
or
add
mov
adc
lea
pop
inc
das
sub
or
add
mov
adc
jnp
(bad)
jmp
cmp
add
add
mov
adc
ins
(bad)
(bad)
(bad)
jle
add
add
add
add
inc
sub
and
adc
cmp
(bad)
call
add
inc
and
add
add
(bad)
(bad)
jmp
sbb
add
jle
add
add
or
add
(bad)
(bad)
jmp
ret
jle
add
add
sldt
add
add
add
mov
adc
or
(bad)
jmp
add
pop
add
add
(bad)
(bad)
(bad)
fiadd
fiadd
or
adc
add
adc
and
add
add
std
(bad)
(bad)
cmp
(bad)
(bad)
jle
add
add
imul
or
add
or
and
push
add
push
add
add
sldt
add
add
fimul
fiadd
pop
add
add
std
(bad)
call
or
add
and
add
add
cld
(bad)
(bad)
cmp
add
or
pop
adc
and
add
add
cld
(bad)
jmp
cmp
adc
push
adc
and
adc
cmp
cld
(bad)
jmp
cmps
adc
adc
add
or
pop
adc
adc
pop
pop
adc
and
add
add
cld
(bad)
jmp
cmp
add
inc
or
add
adc
add
adc
add
push
add
or
adc
add
push
add
stos
fisubr
add
jb
add
jle
add
add
or
add
inc
or
add
fstp
or
add
add
push
adc
and
add
mov
adc
and
(bad)
(bad)
fstp
sub
push
inc
add
add
pop
add
add
adc
add
add
add
add
add
dec
add
add
add
or
push
adc
or
pop
push
add
or
cmp
adc
sldt
add
inc
or
add
or
push
pop
rcl
or
add
add
mov
adc
lods
adc
jo
and
add
sub
jle
add
add
pop
push
add
add
add
mov
adc
sub
and
add
add
(bad)
(bad)
(bad)
fiadd
fiadd
fiadd
push
inc
add
add
daa
add
add
adc
add
add
add
lods
add
add
add
add
add
xor
add
data16
add
adc
add
mov
add
popa
adc
add
jle
add
add
or
or
add
adc
sub
add
add
pop
sub
add
xor
add
and
add
add
sub
push
add
add
(bad)
(bad)
(bad)
jle
add
add
test
add
add
add
jle
add
add
adc
add
push
add
pop
add
add
(bad)
(bad)
call
or
add
mov
add
add
(bad)
(bad)
jmp
nop
and
add
add
(bad)
(bad)
(bad)
fld
jmp
fnstsw
cli
(bad)
call
push
sub
add
inc
hlt
add
aad
add
aad
add
add
add
pop
add
add
add
add
add
mov
add
test
add
pop
add
add
add
add
add
add
add
js
add
push
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
pop
add
add
xor
add
add
add
add
and
in
mov
mov
inc
add
add
add
add
or
add
add
add
mov
sub
mov
stc
add
pop
mov
add
mov
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
push
or
and
or
mov
add
add
add
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
add
jge
add
add
sbb
add
add
add
push
inc
add
add
push
add
add
inc
add
add
add
add
add
add
add
add
add
push
or
or
jle
add
add
or
push
pop
inc
inc
sub
add
push
and
add
add
pop
pop
xor
mov
add
mov
add
and
add
add
add
jb
add
jo
lea
add
add
push
jb
add
jo
or
push
add
or
sbb
add
and
add
add
add
sub
add
push
jb
add
jo
adc
add
and
add
add
(bad)
jmp
jg
outs
aas
and
outs
aas
mov
add
add
add
(bad)
inc
add
add
(bad)
inc
push
mov
add
add
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
add
add
add
add
retf
add
add
add
xor
add
add
add
add
and
cmp
pop
and
cmp
pop
mov
add
add
add
add
add
sub
push
mov
sub
mov
stc
add
mov
add
add
pop
mov
add
mov
add
push
or
push
add
add
or
add
adc
add
add
add
xor
add
add
add
mov
add
add
add
add
add
add
or
pop
adc
add
add
inc
adc
add
add
inc
adc
add
add
inc
adc
ficomp
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
sub
push
add
add
push
inc
add
add
inc
add
add
add
add
add
jmp
add
cli
add
add
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
sldt
add
sub
and
add
mov
add
and
or
add
mov
add
aas
and
adc
add
add
inc
sub
adc
add
add
(bad)
(bad)
(bad)
cmp
add
add
mov
add
(bad)
jle
add
add
pop
adc
add
add
inc
adc
add
add
(bad)
(bad)
(bad)
jle
add
add
and
or
add
mov
add
jmp
mov
add
adc
(bad)
jle
add
add
mov
or
add
mov
add
call
sub
adc
add
add
(bad)
(bad)
(bad)
jle
add
add
xor
add
(bad)
(bad)
jmp
add
add
add
mov
add
(bad)
jle
add
add
ud0
jmp
add
add
mov
add
jmp
mov
push
add
add
(bad)
(bad)
(bad)
fiadd
fiadd
push
inc
add
add
adc
add
adc
add
add
adc
add
dec
add
add
xor
add
or
add
add
mov
add
xor
ins
mov
add
add
add
add
add
add
add
add
add
push
mov
add
add
cmp
add
add
inc
add
add
sub
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
inc
adc
add
add
adc
push
add
add
jle
add
add
or
add
add
mov
add
and
add
add
push
sub
add
add
mov
add
push
and
add
add
(bad)
(bad)
(bad)
jle
add
add
inc
sub
adc
add
add
(bad)
(bad)
(bad)
jle
add
add
ret
and
add
add
(bad)
(bad)
jmp
shl
add
add
(bad)
(bad)
(bad)
jle
add
add
inc
sub
adc
add
add
adc
or
add
mov
add
(bad)
fidiv
jae
add
push
or
add
add
mov
add
(bad)
cmp
(bad)
(bad)
(bad)
jle
add
add
adc
adc
adc
shl
fmulp
pop
push
outs
sub
add
adc
add
add
mov
add
(bad)
fld
add
sub
push
inc
add
add
xor
add
adc
add
add
add
add
add
add
add
add
add
add
sub
add
outs
add
add
add
push
push
push
or
or
add
inc
adc
push
or
pop
pop
or
add
or
push
xor
add
add
mov
add
and
add
add
or
pop
inc
sub
adc
add
add
(bad)
(bad)
jmp
and
add
add
(bad)
(bad)
(bad)
jle
add
add
inc
and
add
add
(bad)
(bad)
jmp
mov
and
add
add
(bad)
(bad)
jmp
xor
push
add
add
(bad)
(bad)
dec
and
add
add
pop
and
add
add
(bad)
(bad)
jmp
leave
and
add
add
(bad)
(bad)
call
sub
add
(bad)
(bad)
(bad)
fiadd
fiadd
fiadd
jle
add
add
adc
adc
inc
adc
sti
(bad)
jmp
fisttp
add
add
inc
lods
add
inc
add
add
add
add
add
add
add
add
add
add
jge
add
fadd
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
and
dec
fisttp
pop
dec
fisttp
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
jle
add
add
inc
adc
add
add
adc
add
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
adc
add
add
add
aas
add
pop
add
add
xor
add
add
add
add
add
sub
add
or
add
add
add
push
push
sub
add
sub
add
xor
out
add
add
add
adc
mov
add
add
add
add
add
add
or
jle
add
add
inc
adc
sti
add
jo
and
add
or
add
sub
add
pop
pop
push
sub
add
push
push
jb
add
jo
adc
add
adc
fiadd
add
add
adc
add
adc
add
add
push
add
add
add
pop
sub
add
or
push
push
or
pop
push
pop
sbb
pop
or
add
inc
adc
fidivr
add
xor
pop
mov
add
mov
add
and
add
add
cmp
add
add
inc
add
add
daa
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
push
add
add
push
add
sub
add
push
pop
or
adc
add
add
mov
add
pop
push
push
pop
and
adc
and
add
add
jle
add
add
xor
add
add
mov
add
and
add
add
jle
add
add
add
and
add
add
(bad)
(bad)
jmp
adc
add
add
mov
add
call
sub
and
add
add
(bad)
(bad)
(bad)
fisttp
add
fld
add
push
inc
add
add
daa
add
add
add
add
add
add
add
add
add
jmp
add
cmp
add
mov
add
add
or
and
push
pop
push
sub
add
push
add
sub
add
push
add
sub
add
pop
pop
push
add
sub
add
pop
pop
sub
add
push
and
adc
lea
add
inc
call
add
mov
add
and
add
add
(bad)
(bad)
jmp
sti
jne
jbe
sti
jne
jbe
inc
inc
add
add
jo
add
add
add
jo
add
add
mov
add
add
or
xchg
add
inc
adc
pop
add
add
(bad)
(bad)
call
sub
adc
add
add
(bad)
(bad)
jmp
sub
add
(bad)
(bad)
inc
sub
add
push
and
xor
and
add
add
(bad)
(bad)
(bad)
cmp
(bad)
jmp
add
add
mov
add
(bad)
fiadd
fiadd
and
add
add
std
(bad)
inc
cmp
(bad)
jmp
add
add
mov
add
(bad)
cmp
add
mov
sub
mov
stc
add
jnp
add
add
cmp
add
pop
add
add
add
inc
add
push
sub
add
add
push
add
add
add
add
add
pop
add
add
add
add
add
and
add
xchg
add
add
add
add
add
add
add
add
add
jle
add
push
add
add
add
add
add
add
add
mov
add
add
add
add
xor
add
add
add
add
and
xchg
add
push
mov
add
add
add
add
add
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
ss
mov
mov
inc
add
add
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
mov
add
mov
add
push
mov
add
add
add
jge
add
add
add
add
inc
add
add
add
add
scas
jge
jle
scas
jge
jle
inc
inc
add
add
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
mov
add
mov
add
push
mov
add
add
pop
adc
adc
add
pop
add
add
add
add
sub
add
or
add
xor
add
add
adc
add
add
mov
sub
sub
push
mov
sub
mov
stc
add
inc
add
add
adc
add
pop
inc
add
add
fdivr
(bad)
inc
add
je
add
jle
add
add
sub
add
sub
and
push
js
and
push
js
mov
add
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
and
add
add
add
add
jo
pop
add
add
sub
add
or
add
or
push
sbb
add
add
add
mov
cmp
(bad)
jmp
add
add
add
add
add
xor
add
add
add
add
and
xchg
sbb
retf
xchg
sbb
add
add
add
add
add
add
add
mov
sub
mov
stc
add
push
mov
add
add
pop
mov
add
mov
add
jle
add
add
add
add
add
inc
add
add
add
add
or
or
inc
inc
add
add
add
add
or
add
add
add
mov
sub
mov
stc
add
push
mov
add
add
pop
mov
add
mov
add
add
sub
adc
add
pop
add
add
add
adc
add
mov
sub
mov
stc
add
add
add
add
add
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
sub
sbb
add
sbb
add
xor
add
or
je
add
sbb
sbb
add
or
add
adc
add
push
inc
add
add
and
add
pop
inc
pop
add
add
add
sbb
add
xchg
add
add
add
sub
add
add
sldt
or
push
or
sub
add
push
pop
xor
or
add
add
mov
sub
push
and
add
add
dec
and
add
mov
sub
sub
add
push
push
popa
push
push
and
add
add
jo
les
and
les
mov
add
add
add
add
add
push
mov
add
add
sub
add
add
(bad)
inc
jnp
add
add
pushf
add
add
sub
add
add
mov
cmp
(bad)
jmp
cdq
add
add
add
js
add
sbb
add
push
add
add
(bad)
jmp
mov
or
add
or
sbb
(bad)
call
mov
add
mov
add
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
add
add
add
cld
cld
add
pop
add
add
xor
add
add
add
add
and
test
jns
test
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
add
add
add
add
xor
add
add
add
add
xchg
ja
sub
xchg
ja
sub
add
add
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
add
jge
add
add
adc
add
and
add
add
add
add
add
or
add
add
sub
add
or
push
sub
add
push
add
add
or
xor
add
sub
xor
add
add
adc
mov
or
or
add
add
add
add
inc
add
add
pop
add
add
or
add
add
add
add
add
cmp
add
daa
add
add
add
or
and
add
add
push
jb
add
jo
adc
push
and
add
add
sub
jle
add
or
and
add
add
sub
and
add
add
fld
add
fnstsw
inc
add
add
and
add
adc
inc
pop
add
add
add
sub
add
mov
add
add
add
add
add
add
push
or
add
add
inc
sbb
add
sbb
add
inc
sbb
add
add
add
mov
or
mov
or
pop
push
and
adc
sub
dec
push
adc
and
pop
ss
and
pop
ss
mov
add
add
add
add
add
add
inc
add
add
push
mov
add
add
and
add
add
(bad)
(bad)
jmp
sbb
sbb
add
inc
sbb
add
push
add
add
(bad)
(bad)
jmp
and
add
add
mov
or
cmp
(bad)
(bad)
jle
add
add
mov
add
add
(bad)
(bad)
jmp
shl
add
add
(bad)
(bad)
(bad)
fstp
fst
sbb
add
inc
sbb
add
sbb
add
sbb
add
sbb
add
inc
sbb
add
fnstsw
add
inc
add
add
sbb
add
adc
inc
add
add
add
add
add
add
add
dec
add
add
add
add
inc
sbb
add
add
add
mov
or
into
jle
add
add
and
add
add
mov
or
mov
add
add
jle
add
add
inc
sub
add
push
sub
sbb
add
sbb
add
inc
sbb
add
sbb
add
sbb
add
add
add
mov
or
jno
(bad)
(bad)
fstp
xchg
add
add
or
add
mov
or
or
inc
add
add
dec
add
add
or
add
add
add
pop
add
inc
add
add
add
rol
add
add
add
add
push
add
add
add
add
add
stos
(bad)
(bad)
jmp
add
add
add
lods
add
add
add
add
add
adc
pop
sbb
std
(bad)
jmp
add
add
mov
or
mov
inc
push
xchg
adc
add
adc
sub
push
mov
add
cmp
add
adc
sub
add
push
adc
sub
push
mov
sub
mov
stc
add
push
add
add
(bad)
(bad)
(bad)
cmp
add
add
inc
add
add
and
add
adc
inc
pop
add
add
add
add
add
add
add
add
add
add
add
push
jle
add
or
jo
or
push
or
sbb
add
inc
sbb
add
add
add
mov
or
mov
and
xor
and
adc
sub
mov
add
or
add
add
mov
or
mov
add
add
add
mov
or
jnp
(bad)
dec
jb
add
jo
adc
add
sub
and
add
add
(bad)
(bad)
jmp
add
add
add
inc
sbb
add
add
add
mov
or
inc
(bad)
(bad)
jmp
add
add
add
mov
or
ss
(bad)
(bad)
fucom
(bad)
(bad)
jmp
fstp
(bad)
(bad)
call
jle
add
add
sbb
add
sbb
add
inc
sbb
add
es
add
add
or
adc
cmp
(bad)
call
push
cmp
add
add
or
add
mov
or
xor
(bad)
(bad)
cmp
pop
adc
push
adc
mov
xor
add
and
add
add
(bad)
(bad)
jmp
add
inc
add
add
daa
add
add
or
add
add
add
test
add
inc
add
add
add
cdq
add
add
add
add
add
xor
adc
adc
and
add
add
adc
jle
add
add
sbb
add
add
adc
sub
add
add
popa
and
add
add
sub
add
pop
sub
and
add
add
adc
pop
adc
jecxz
add
add
mov
or
js
(bad)
jmp
adc
sbb
add
add
add
mov
or
fs
(bad)
jmp
adc
add
(bad)
(bad)
call
pop
pop
dec
inc
sub
and
add
mov
or
inc
(bad)
(bad)
(bad)
ffree
add
add
fnstsw
push
sub
add
push
adc
and
add
add
std
(bad)
(bad)
cmp
add
add
sbb
add
adc
and
add
add
std
(bad)
(bad)
cmp
inc
add
add
pop
add
add
or
add
add
add
add
add
and
add
dec
add
add
push
pop
and
pop
or
pop
aas
push
or
pop
xor
or
add
add
mov
or
mov
sub
add
add
mov
or
mov
add
and
add
add
add
inc
sbb
add
add
add
mov
or
call
add
fisttp
(bad)
(bad)
jmp
fld
(bad)
jmp
add
add
mov
or
outs
cld
(bad)
call
add
pop
pop
inc
or
add
and
add
add
cld
(bad)
(bad)
cmp
sbb
add
inc
sbb
add
sbb
add
sbb
add
fld
(bad)
(bad)
call
inc
add
add
pop
add
add
or
add
add
add
add
add
add
add
adc
add
push
adc
adc
add
adc
and
add
add
sub
adc
add
add
sub
and
add
add
(bad)
frstor
sldt
or
pop
sbb
add
sbb
add
es
stc
(bad)
jmp
or
add
mov
or
cdq
sti
(bad)
inc
cmp
or
add
mov
or
xchg
(bad)
(bad)
cmp
add
add
mov
or
je
(bad)
call
push
cmp
pop
add
add
sti
(bad)
(bad)
cmp
(bad)
call
inc
add
add
pop
add
add
or
add
add
add
add
add
adc
add
and
add
push
adc
adc
pop
pop
rcl
or
add
add
mov
or
aad
or
pop
xor
and
add
add
sub
adc
pop
pop
rcl
or
add
add
mov
or
mov
add
add
add
mov
or
cmps
fisubr
fisubr
and
add
mov
or
in
(bad)
inc
mov
cmp
sti
(bad)
jmp
sldt
add
cli
(bad)
(bad)
cmp
std
(bad)
call
push
sub
xchg
add
add
add
jp
add
pop
add
add
add
push
pop
add
add
add
movs
add
pop
add
add
add
push
pop
add
add
add
fxam
add
pop
add
add
add
add
add
pop
add
add
add
iret
and
add
add
and
add
add
adc
sbb
push
push
pop
add
add
add
push
push
add
add
add
push
pop
add
add
add
pop
data16
pop
add
add
add
xor
add
add
add
add
pop
mov
add
mov
add
and
iret
and
and
inc
add
add
add
add
or
add
add
add
mov
sub
mov
stc
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
add
mov
sub
mov
stc
add
popf
add
inc
and
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
pop
mov
add
mov
add
add
jge
add
add
add
add
inc
add
add
add
add
add
mov
sub
mov
stc
add
(bad)
adc
pop
and
adc
pop
mov
add
add
add
add
add
push
mov
add
add
pop
mov
add
mov
add
pop
sbb
add
add
xor
add
add
add
add
add
sub
add
or
add
add
add
push
sub
add
add
sub
add
push
add
sub
add
sub
sbb
add
fadd
add
adc
add
and
retf
(bad)
retf
or
inc
inc
add
add
sahf
add
add
add
add
push
mov
add
add
push
inc
add
add
push
add
add
inc
add
add
test
add
inc
add
add
add
jbe
add
push
or
or
jnp
add
add
and
add
pop
sbb
add
pop
add
add
push
sbb
add
and
add
inc
pop
rol
pop
sbb
add
add
add
add
mov
sub
push
mov
add
push
and
add
add
and
add
add
mov
sub
adc
add
push
and
add
add
(bad)
jmp
add
add
add
mov
cmp
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
add
add
add
int3
int3
add
pop
add
add
xor
add
add
add
add
and
mov
adc
add
add
add
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
add
add
add
add
xor
add
add
add
add
mov
add
mov
add
and
jmp
jmp
add
add
add
add
add
sub
push
mov
sub
mov
stc
add
mov
add
add
add
jge
add
add
add
add
inc
add
add
add
add
inc
mov
popa
and
(bad)
inc
inc
add
add
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
mov
add
add
pop
mov
add
mov
add
add
add
add
add
xor
add
add
add
add
out
and
mov
inc
add
add
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
mov
add
mov
add
push
mov
add
add
add
jge
add
add
sbb
add
dec
add
add
add
and
fnsave
and
fnsave
mov
add
add
add
add
add
push
mov
add
add
pop
mov
add
mov
add
push
or
pop
sub
add
push
sbb
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
adc
add
add
add
aas
add
pop
add
add
xor
js
add
add
add
and
fistp
and
fistp
mov
add
add
add
add
add
push
mov
add
add
add
push
pop
pop
shr
inc
add
push
add
add
add
sub
add
pop
push
pop
pop
sub
add
push
add
inc
add
push
jle
add
add
rol
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
adc
add
add
add
add
pop
add
add
xor
add
add
adc
inc
add
add
push
add
add
inc
add
add
xor
add
add
add
push
add
add
xchg
out
cld
dec
and
inc
inc
add
add
aaa
add
add
add
add
add
add
push
mov
add
add
jle
add
or
and
add
add
mov
add
mov
add
push
jb
add
jo
adc
add
sub
and
add
add
add
add
add
sub
add
pop
pop
adc
dec
pop
rol
and
add
add
(bad)
jmp
add
add
add
mov
cmp
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
adc
add
add
add
add
add
xor
add
add
adc
mov
pop
adc
inc
add
add
add
add
push
inc
add
add
pop
add
add
add
mov
sub
mov
stc
add
pop
inc
add
add
ins
add
add
add
or
add
pop
or
add
add
mov
pop
sub
cmp
add
or
xor
add
outs
xor
add
rol
add
sub
xor
add
outs
xor
add
add
or
push
push
jle
loope
push
jle
inc
inc
add
add
add
add
add
mov
add
add
push
inc
add
add
pop
add
add
pop
inc
add
add
add
add
add
add
add
add
add
push
adc
sub
add
add
inc
add
push
pop
rol
and
add
add
adc
mov
xor
add
add
mov
pop
sub
cmp
dec
pop
add
cmp
sub
pop
adc
add
add
mov
pop
sub
add
add
fiadd
fiadd
or
add
adc
fidiv
sub
add
or
jle
add
add
push
and
add
add
inc
add
push
jle
add
add
adc
add
sub
push
inc
inc
sub
push
sub
sub
add
fstp
(bad)
(bad)
jmp
fstp
(bad)
(bad)
push
add
or
add
add
or
add
or
add
or
add
add
mov
pop
cmp
or
add
add
sub
add
jle
add
add
sub
add
push
jle
add
add
push
sbb
add
fst
inc
add
add
pop
add
add
pop
inc
add
add
je
add
xor
add
add
add
jle
add
add
pop
rol
add
add
push
jge
add
add
and
push
pop
pop
shr
inc
add
push
and
add
add
add
cmp
add
sub
add
mov
pop
sub
jnp
add
add
pop
add
add
jge
add
add
add
add
mov
pop
sub
add
mov
pop
cmp
(bad)
(bad)
fisttp
(bad)
(bad)
jmp
fisttp
(bad)
(bad)
push
add
jo
sub
add
adc
adc
jb
add
jo
cmp
add
sub
pop
sub
add
or
mov
add
mov
add
and
add
add
std
(bad)
(bad)
cmp
inc
add
add
pop
add
add
pop
inc
add
add
jp
add
mov
add
inc
add
add
add
jle
add
add
push
sbb
add
and
add
sub
add
pop
jle
add
add
jle
add
add
rol
jle
add
add
pop
rol
and
add
add
jle
add
add
jnp
add
add
sub
add
sub
add
add
add
and
add
shr
inc
add
push
and
add
add
(bad)
(bad)
jmp
add
add
add
mov
pop
cmp
(bad)
(bad)
fst
(bad)
(bad)
jmp
fisttp
(bad)
(bad)
inc
sub
dec
add
add
jo
lods
sbb
add
add
dec
add
sub
pop
add
add
add
xor
cmp
push
pop
add
add
add
push
pop
add
add
add
add
add
add
add
push
pop
add
add
xor
add
add
adc
inc
add
add
and
add
pop
mov
add
mov
add
pop
inc
add
add
jo
add
inc
add
add
add
push
add
add
add
or
push
or
add
add
pop
rol
and
fist
and
fist
mov
add
add
add
add
add
push
mov
add
add
and
add
add
sub
add
mov
sub
pop
add
add
and
add
add
cmp
add
and
add
add
(bad)
jmp
add
add
add
mov
cmp
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
add
add
add
add
stos
stos
add
pop
add
add
xor
add
add
adc
inc
add
add
cmp
add
and
sbb
arpl
out
and
add
add
add
add
add
add
add
add
add
push
mov
add
add
or
add
add
add
add
add
add
add
add
add
or
or
push
add
inc
add
push
pop
sub
add
push
and
add
add
sbb
and
add
add
mov
sub
pop
pop
pop
inc
pop
pop
ror
and
add
add
add
add
add
mov
cmp
(bad)
(bad)
fiadd
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
add
add
add
xchg
xchg
add
pop
add
add
xor
add
add
add
add
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
and
fwait
mov
and
fwait
mov
mov
add
add
add
add
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
jl
std
xor
xor
add
add
add
add
or
add
add
add
mov
sub
mov
stc
add
pop
mov
add
mov
add
push
mov
add
add
add
jge
add
add
add
add
pop
add
add
add
add
retf
jbe
retf
jbe
inc
inc
add
add
add
add
or
add
add
add
mov
sub
mov
stc
add
pop
mov
add
mov
add
push
mov
add
add
push
push
pop
add
add
push
and
add
and
add
sldt
or
sub
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
sbb
add
jl
add
and
jb
outs
addr16
add
add
add
and
add
adc
add
add
add
inc
push
dec
inc
add
add
adc
add
ins
outs
bound
add
add
add
add
add
push
adc
add
add
and
add
add
add
add
or
add
daa
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
push
add
add
or
push
add
add
add
add
push
add
add
push
add
add
add
push
add
cmp
push
add
cmp
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cdq
add
add
cdq
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
inc
add
add
add
enter
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
aaa
add
add
add
add
adc
cmp
or
adc
add
adc
cmp
or
add
add
add
add
add
add
sbb
sub
add
adc
inc
add
sbb
xor
add
adc
inc
add
pop
add
add
add
add
cmp
aaa
add
cmp
cmp
cmp
add
add
aaa
add
cmp
cmp
cmp
add
add
aaa
add
cmp
cmp
cmp
add
add
inc
add
inc
add
dec
add
aaa
add
cmp
cmp
aaa
add
cmp
aaa
add
cmp
cmp
cmp
add
add
aaa
add
cmp
cmp
cmp
add
add
inc
add
inc
add
dec
add
dec
add
add
add
xchg
dec
add
add
je
add
add
xchg
aaa
add
mov
add
add
xchg
cmp
pushf
and
add
add
add
add
or
add
or
add
add
or
add
pop
and
add
add
add
test
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
or
add
mov
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
xchg
dec
add
add
add
add
add
xchg
sbb
xchg
add
add
add
add
add
or
or
add
add
add
or
mov
add
add
add
xor
or
or
cmp
add
add
or
or
mov
add
add
or
or
fdiv
add
add
or
or
sub
add
add
xchg
add
add
aam
add
add
xchg
add
add
je
add
add
or
adc
les
add
add
add
add
add
add
add
add
or
add
add
xchg
sbb
xchg
add
add
add
add
xchg
add
add
in
dec
add
add
add
adc
fs
add
add
sbb
adc
mov
add
add
add
add
push
add
add
or
add
cmp
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
push
add
add
or
add
and
add
add
or
add
je
add
add
sbb
add
add
add
add
add
loopne
add
add
or
sbb
xor
add
add
add
add
add
add
add
pop
add
add
sbb
add
pop
add
add
add
sbb
clc
pop
add
add
or
sbb
dec
pusha
add
add
or
sbb
cwde
pusha
add
add
or
add
call
add
add
add
popa
add
add
add
sbb
movs
popa
add
add
add
add
cmp
add
add
add
adc
add
add
add
enter
add
add
push
add
add
add
add
add
add
add
add
or
push
add
add
add
xchg
sbb
xchg
add
add
add
add
add
cmp
inc
add
inc
add
inc
add
inc
add
inc
add
dec
add
inc
add
inc
add
inc
add
dec
add
pop
add
pop
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
add
inc
add
add
adc
dec
add
add
add
or
and
dec
add
add
add
push
add
add
push
add
add
push
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
add
jno
dec
add
add
add
add
add
add
or
dec
add
add
add
mov
add
add
add
add
add
add
add
add
mov
add
add
add
dec
add
pop
add
add
ja
retf
add
or
dec
add
rol
dec
add
add
add
add
add
add
dec
add
add
dec
add
add
add
jbe
add
add
dec
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
stc
add
push
add
add
add
add
or
rol
add
add
add
or
jecxz
push
add
add
add
add
or
and
imul
add
imul
add
imul
add
imul
add
add
add
or
pusha
add
or
add
add
add
add
add
add
or
rol
add
add
add
add
add
imul
add
add
add
add
add
add
add
add
add
inc
add
inc
push
imul
add
imul
add
push
imul
add
push
imul
add
imul
add
add
add
pop
imul
add
add
or
or
lds
aad
fiadd
jmp
add
add
add
add
add
push
add
popa
add
push
jns
jg
add
add
add
bound
fs
add
add
add
add
add
add
add
add
add
add
lock
add
add
add
lock
add
add
add
add
add
add
add
gs
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
arpl
add
jae
gs
cs
gs
arpl
outs
add
jae
ins
bound
gs
jb
jo
imul
imul
jne
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
push
imul
je
jb
bound
add
imul
jne
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
jae
gs
add
push
arpl
popa
jb
push
push
gs
bound
arpl
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
jb
outs
add
jo
jns
push
jns
je
ins
cs
dec
add
ins
outs
jb
push
je
gs
ins
add
jae
gs
cs
dec
cs
outs
ins
jo
gs
imul
ins
popa
je
push
je
gs
ins
add
jb
popa
ins
add
imul
ins
add
jo
jae
add
ins
jo
gs
imul
add
arpl
je
outs
outs
add
pop
dec
outs
gs
popa
ins
imul
add
pop
inc
jno
popa
ins
imul
add
imul
popa
je
push
gs
add
jb
popa
jns
push
outs
push
je
imul
xor
add
outs
arpl
add
je
xor
inc
jae
gs
bound
dec
gs
outs
fs
outs
outs
add
add
je
outs
fs
popa
jae
add
jbe
imul
gs
inc
outs
je
jns
outs
imul
xor
add
outs
ins
gs
outs
add
imul
imul
gs
jb
popa
jns
push
jns
je
ins
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
imul
imul
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jae
gs
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
ins
outs
bound
imul
add
ins
je
jb
dec
outs
outs
add
data16
outs
arpl
jno
popa
ins
jae
push
jns
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
je
inc
jae
gs
bound
inc
gs
bound
arpl
jb
popa
jns
inc
outs
jo
add
jo
outs
ins
popa
imul
add
jo
outs
ins
popa
imul
js
arpl
imul
ins
bound
addr16
inc
outs
fs
popa
jae
add
je
inc
jne
ins
dec
popa
ins
add
gs
je
dec
outs
jae
popa
outs
arpl
jb
ins
inc
outs
fs
outs
ja
popa
jo
push
outs
ins
outs
popa
add
je
inc
jne
jb
outs
je
outs
ins
popa
imul
inc
popa
jae
inc
imul
jns
jae
je
inc
jo
ins
imul
inc
popa
jae
add
jae
gs
cs
arpl
imul
arpl
inc
jbe
fs
arpl
inc
jb
popa
je
inc
outs
ins
popa
imul
imul
popa
addr16
je
jb
bound
add
je
imul
jb
gs
add
imul
fs
add
arpl
ins
imul
jne
arpl
outs
jb
je
jb
bound
add
bound
arpl
add
data16
inc
pop
xor
push
add
xor
arpl
outs
jb
inc
pop
xor
inc
pop
xor
inc
add
je
imul
gs
jae
jne
arpl
add
add
add
add
outs
add
jne
ins
add
add
ins
add
push
add
add
jo
imul
add
jne
jae
jne
outs
add
outs
add
jbe
jne
add
ja
jne
imul
ins
add
add
sbb
xor
jge
and
jnp
xor
jge
pop
add
xor
jge
and
add
push
jae
imul
add
popa
add
or
xor
jge
pop
add
adc
ins
add
jae
jo
outs
add
js
popa
add
and
js
popa
add
jne
outs
add
add
add
das
add
xor
jge
sub
add
outs
add
jbe
ins
add
je
popa
add
cmp
jnp
xor
jge
and
jnp
xor
jge
pop
add
or
imul
push
add
or
imul
add
jne
ins
add
ins
add
bound
and
jnp
xor
jge
and
add
popa
add
data16
jbe
outs
add
add
add
outs
add
push
add
add
add
add
jbe
arpl
popa
add
pcmpeqw
ins
add
jbe
imul
add
push
add
popa
add
jo
jne
add
jnp
xor
jge
and
jnp
xor
jge
and
add
outs
add
add
popa
add
add
ins
add
or
outs
add
push
add
or
jae
popa
add
adc
outs
add
outs
add
jbe
jb
jne
push
add
add
imul
jb
imul
add
add
or
outs
add
add
movq
js
popa
add
ins
add
popa
add
or
jb
jae
popa
add
add
outs
add
add
add
add
adc
add
jb
imul
jae
popa
add
or
imul
add
jo
add
outs
add
outs
add
imul
je
add
arpl
jae
jne
ja
add
jbe
popa
add
outs
add
push
add
outs
add
or
jnp
xor
jge
add
dec
add
add
pop
shl
fmul
cwde
sub
and
add
add
add
push
add
add
add
add
add
push
push
add
add
adc
pop
add
push
push
add
push
push
sbb
add
add
push
sbb
sbb
and
or
and
sbb
push
add
sbb
add
push
push
push
push
push
add
push
push
sbb
add
push
push
add
adc
add
sbb
sbb
and
adc
add
adc
add
push
add
sbb
add
adc
add
add
ins
push
and
add
adc
and
sbb
adc
or
add
or
sbb
adc
and
sbb
push
push
add
add
and
movs
add
add
push
or
add
and
and
xor
sbb
mov
add
add
add
add
add
add
add
add
add
push
jns
je
ins
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
push
or
or
and
or
push
add
push
or
and
or
add
or
add
sbb
add
sbb
and
push
add
add
push
add
add
push
sbb
and
or
add
add
and
sbb
and
add
add
sbb
and
add
push
sbb
or
add
or
or
add
lea
xchg
push
add
add
adc
push
and
sbb
and
add
add
add
add
or
add
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
jae
imul
add
push
add
adc
jo
jb
addr16
and
xor
xor
add
cmp
arpl
arpl
xor
arpl
sub
xor
popa
popa
bound
add
or
add
xor
xor
xor
xor
add
add
ss
push
push
pop
push
push
pusha
pop
bound
pop
pop
pop
pop
pop
pusha
pop
data16
imul
cmp
add
pop
xor
xor
xor
cmp
cmp
cmp
xor
xor
xor
xor
add
sysret
or
push
adc
or
dec
or
sbb
add
or
pop
or
or
sbb
push
pop
add
push
or
pop
pop
add
sbb
pop
add
push
or
pop
add
or
push
push
adc
sbb
or
add
add
or
pop
or
push
sbb
or
sbb
adc
add
add
or
or
add
push
sbb
push
sbb
or
or
pop
push
push
sbb
or
pop
add
or
add
add
or
pop
or
or
push
add
or
or
or
pop
add
adc
or
adc
adc
or
and
pop
add
or
or
add
add
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
push
push
jo
add
add
rol
add
adc
add
jb
imul
jae
popa
add
add
add
and
add
add
popa
shl
data16
inc
dec
xchg
mov
int
lahf
scas
scas
cmp
(bad)
retf
adc
inc
sub
out
nop
add
jecxz
das
adc
mov
loope
pop
sbb
xchg
jmp
or
popa
cmps
dec
pusha
xchg
arpl
mov
rcr
(bad)
stos
movs
nop
sbb
add
cwde
mov
pop
addr16
jmp
das
and
xchg
and
mov
fsubp
(bad)
mov
outs
xor
lock
imul
or
cmp
popf
jo
and
rcl
arpl
fstp
int
pop
rcpps
pop
cmp
jns
push
mov
ja
mov
sbb
out
mov
adc
jae
mov
cmp
sub
gs
std
xor
xor
ins
xchg
jecxz
mov
sahf
push
shl
mov
imul
xor
loopne
popa
xchg
sub
bswap
mov
(bad)
scas
push
mov
aad
push
loopne
xor
mov
fld
and
xor
jmp
mov
test
xchg
jns
pop
ficom
jle
in
addr16
nop
and
call
hlt
add
xchg
retf
fcmovnu
outs
add
mov
shl
stc
add
jb
pushf
pop
dec
or
push
xchg
adc
movs
aam
dec
mov
or
xlat
mov
jbe
mov
mov
or
cmp
retf
inc
push
inc
xchg
arpl
jle
dec
pop
add
push
sub
mov
mov
daa
xor
das
inc
aas
jnp
mov
(bad)
not
cmp
pushaw
sar
dec
lds
sub
das
cmp
dec
add
cwde
inc
mov
mov
lahf
jo
mov
loope
(bad)
or
cmps
jp
(bad)
imul
retf
push
lods
dec
xchg
add
call
xchg
fld
fwait
dec
push
aaa
repnz
xchg
and
loope
jae
mov
rcr
and
pop
sub
lahf
xchg
repz
ins
cmp
xchg
scas
and
psubw
mov
sbb
xchg
mov
sbb
jge
ucomiss
inc
pop
bound
and
jl
out
cli
call
pusha
adc
push
add
mov
cmc
pop
sub
or
sub
dec
addr16
retf
jmp
sub
imul
mov
jecxz
js
push
repz
push
(bad)
sahf
adc
into
pop
push
push
ret
xor
stos
sar
aas
pop
jmp
scas
jnp
sbb
jnp
stos
adc
add
or
(bad)
cmps
into
add
push
dec
mov
inc
push
ret
sbb
aad
paddusw
cmc
stos
push
iret
mov
push
dec
(bad)
cmp
cmps
aaa
mov
mov
out
shl
pop
inc
jp
pop
aaa
push
pop
adc
xchg
lods
mov
popa
push
mul
dec
in
aaa
mov
arpl
mov
mov
inc
pop
add
xchg
mov
aam
add
stos
mov
cmp
fs
rcr
xor
aas
mov
mov
mov
aaa
retf
fwait
xor
dec
and
add
aad
jmp
xlat
and
add
loop
not
mov
scas
(bad)
cmp
jp
int
call
dec
ds
das
es
arpl
lea
test
out
pop
mov
(bad)
(bad)
sbb
mov
add
sbb
cmp
shl
push
(bad)
mov
sbb
and
fbld
xor
dec
out
iret
and
fdiv
in
std
sub
sub
gs
lahf
loope
mov
and
mov
pop
daa
xchg
add
mov
inc
sbb
cmp
jle
les
mov
jns
push
jl
push
sbb
cs
and
or
pop
jl
sub
fcos
and
mov
add
cmp
dec
(bad)
out
sbb
or
jae
div
jecxz
pop
cmps
das
push
mov
movs
pop
mov
rol
out
and
ss
jl
pop
int3
cli
movs
pop
dec
movs
mov
and
leave
mov
inc
je
loop
xchg
les
les
loopne
fstp
xchg
iret
loopne
inc
jmp
(bad)
jecxz
sbb
adc
sti
ja
and
cmc
call
lock
dec
call
sub
rcr
movs
mov
scas
mov
daa
sbb
mov
sbb
out
xchg
movs
lea
push
adc
mov
hlt
mov
jle
sbb
out
mov
add
test
mov
xor
stc
mov
push
(bad)
push
cmc
out
xchg
mov
pop
xor
push
and
dec
fsubr
movs
hlt
int3
inc
gs
movs
jbe
ds
gs
ror
jp
ins
out
add
pop
pop
adc
bound
mov
cmp
clc
adc
(bad)
movs
(bad)
push
sub
pushf
mov
mov
icebp
int
xlat
movs
mov
fmul
add
jmp
mov
rcr
sub
mov
(bad)
sbb
in
and
add
iret
xchg
scas
xchg
sbb
leave
ds
ds
jmp
in
push
iret
xchg
mov
in
mov
mov
(bad)
mov
mov
leave
inc
(bad)
mov
mov
add
cmp
mov
imul
and
mov
dec
test
ret
mov
sub
call
out
hlt
retf
or
lahf
mov
fs
push
push
ja
push
mov
pop
mov
rcl
xchg
pop
sti
sub
jecxz
popf
push
mov
dec
in
shr
sub
sahf
cmp
mov
popf
xor
test
aam
mov
lods
jns
bound
or
jmp
or
(bad)
div
push
lods
sbb
xchg
cdq
push
ins
scas
jl
xor
sar
int3
rol
fcomp
inc
ins
or
jo
push
stos
ss
push
mov
mov
int
in
xlat
sbb
pop
pop
sbb
fwait
movs
sbb
lahf
gs
xor
add
sub
mov
add
xchg
dec
icebp
sbb
iret
fcmovnbe
fs
push
push
pop
mov
in
je
ins
cwde
mov
call
mov
mov
bound
push
out
jo
ins
(bad)
or
cmp
cdq
pop
aaa
adc
mov
sub
shl
scas
dec
xchg
xchg
sub
cmc
mov
pop
pop
fild
mov
inc
push
and
add
mov
jb
and
clc
sbb
cdq
stos
call
push
push
adc
fs
sahf
dec
push
sub
cli
test
add
sub
scas
pop
fst
sar
mov
or
(bad)
test
loop
rcl
and
retf
xor
add
idiv
clc
and
retf
xchg
sti
or
inc
mov
retf
mov
ds
test
or
inc
ficomp
icebp
ja
out
ins
not
jb
or
jecxz
js
xlat
les
into
mov
cdq
mov
mov
pop
data16
cdq
mov
jne
js
pop
and
mov
lock
sub
cld
sbb
xor
dec
mov
mov
sbb
cs
cmp
sub
pop
mov
lods
shr
adc
fwait
or
mov
mov
leave
jo
pop
je
xor
lea
mov
imul
pop
jp
mov
push
cmp
xchg
xchg
xchg
push
int
add
jecxz
scas
dec
pop
scas
push
std
(bad)
jmp
aas
mov
and
lahf
cmp
arpl
cmc
movs
mov
cmc
cmp
jp
adc
adc
sbb
push
sub
loop
push
adc
ss
or
pusha
ss
pop
and
lds
mov
not
push
ja
inc
mov
and
adc
std
call
es
jno
add
imul
push
xchg
xor
push
je
pop
xchg
hlt
jecxz
loope
mov
fisub
lea
dec
push
jae
sbb
imul
adc
cmp
inc
push
ss
imul
adc
push
xchg
or
xor
ret
call
mov
push
mov
ins
sub
fisubr
and
inc
jl
cmps
ret
leave
call
(bad)
scas
cmps
jmp
lds
out
mov
cmc
add
mov
idiv
sbb
test
movs
push
ins
xchg
cdq
and
inc
aad
daa
test
xchg
loopne
dec
pop
sar
bound
rcr
pusha
jne
push
test
xchg
dec
out
jmp
mov
add
mov
mov
push
and
inc
fimul
addr16
call
ins
mov
in
clc
dec
stc
cmps
and
fst
jle
sbb
je
dec
add
mov
shl
out
maxps
cli
(bad)
mov
add
mov
(bad)
repnz
or
ins
push
call
pop
xchg
mov
pop
and
and
push
pop
daa
jae
movsx
dec
mov
jbe
mov
push
xchg
xchg
mov
cmp
outs
lahf
jae
mov
jmp
lock
sub
mov
cmps
es
mov
push
ja
cld
jae
xchg
shr
adc
inc
or
movs
test
ret
lods
mov
loop
mov
jle
adc
pusha
xchg
push
lock
mov
icebp
pop
pop
cdq
ins
xchg
pop
xchg
adc
cmc
enter
ret
or
sbb
xchg
ds
rcr
add
loop
sbb
mov
and
mov
sbb
aam
jne
int
shl
fnstsw
adc
jb
imul
cmp
icebp
rcr
ins
jl
iret
xlat
aam
inc
pop
cmp
aaa
hlt
js
clc
call
in
mov
in
adc
mov
mov
xchg
dec
rcl
stc
rol
repnz
xchg
cmps
stos
jmp
xor
mov
pop
dec
mov
ins
xchg
call
aad
or
mov
pop
mov
sahf
scas
sbb
fcomp
retf
in
jb
xchg
add
cmp
and
sub
mov
cdq
jl
ja
aad
into
pushf
outs
push
pop
mov
pop
scas
push
dec
mov
sbb
jp
inc
sbb
push
cmp
idiv
lea
mov
scas
xchg
adc
gs
xchg
adc
mov
inc
sub
sub
adc
and
inc
inc
dec
gs
or
inc
or
push
mov
cwde
ins
cli
inc
dec
bound
popa
mov
mov
ret
test
jns
aaa
int3
push
call
cmps
(bad)
rcl
or
jb
stc
pop
dec
dec
add
mov
xchg
iret
sti
(bad)
and
mov
lods
xchg
stos
jecxz
push
push
in
mov
imul
push
ja
loope
xor
push
dec
xor
mov
dec
mov
xchg
inc
bound
push
out
lods
and
es
test
xor
mov
jbe
push
pushf
popf
dec
pop
jg
jle
ja
mov
adc
xchg
add
jp
pushf
imul
mov
inc
push
and
push
imul
sahf
mov
pop
imul
std
xor
cmp
das
pop
pop
mov
iret
rol
mov
jnp
pusha
and
cmc
test
dec
retf
std
inc
leave
stos
sub
and
es
push
push
mov
gs
test
lds
mov
or
add
stos
dec
lahf
arpl
aad
fstp
inc
push
pop
push
and
mov
pop
cmp
and
cs
pushf
popa
pop
jl
(bad)
pop
cs
and
shl
sbb
mov
inc
pop
test
(bad)
jp
stos
ds
sub
call
add
mov
adc
inc
mov
jg
adc
dec
cmp
mov
push
and
cmc
cmps
in
sar
pop
xchg
hlt
leave
add
fadd
(bad)
cld
fnstcw
out
xchg
mov
inc
imul
add
(bad)
rol
inc
lock
call
mov
inc
inc
mov
cmp
inc
mov
jno
test
cmp
xchg
aaa
pop
add
cmp
cdq
cmp
or
adc
cli
pop
push
or
test
movs
in
inc
mov
shr
div
mov
fisubr
jmp
cmp
and
mov
xor
sbb
jg
call
sub
mov
pop
pop
daa
mov
popf
sub
inc
cmp
out
pop
movs
cmp
stos
push
(bad)
cmps
sbb
gs
lahf
sbb
mov
push
push
test
in
loopne
mov
sbb
ds
mov
shl
adc
push
inc
in
mov
(bad)
xor
mov
sub
and
sar
iret
clc
xchg
stos
ja
loopne
ret
inc
test
popa
lods
adc
sar
xor
cli
jb
aas
lock
int
sub
sbb
cmps
jae
push
outs
(bad)
mov
pop
les
pop
mov
lods
jp
pop
adc
fsubrp
addr16
adc
xchg
ins
sub
or
dec
aad
xchg
or
fiadd
or
jmp
pusha
arpl
sbb
pop
std
mov
jecxz
lock
js
xchg
jl
leave
and
mov
sbb
xchg
into
xchg
popf
repnz
sub
mov
fcomp
sub
push
push
cld
bound
lods
push
push
jo
fsubr
dec
hlt
and
mov
aad
fs
jecxz
iret
mov
shl
cdq
std
jle
add
push
popf
xlat
add
in
cdq
in
cwde
jbe
stc
push
mov
mov
sar
cmps
fidivr
jl
dec
cwde
jge
pop
push
mov
jae
cmp
push
nop
add
mov
shl
int3
mov
dec
mov
jns
sbb
(bad)
ret
xor
mov
pushf
inc
lods
pop
imul
cld
pop
retf
pop
sbb
outs
xchg
sbb
and
dec
(bad)
ds
sar
xlat
adc
dec
fadd
das
cmp
mov
inc
xor
adc
cmp
push
mov
adc
loop
int3
sbb
mov
mov
cmp
adc
aas
and
and
pop
mov
xchg
jns
lds
and
inc
push
mov
xchg
sub
arpl
loope
cwde
fwait
dec
fmul
pushf
sbb
std
sub
push
jmp
mov
arpl
sbb
cmp
jo
bound
ds
cli
js
mov
scas
sbb
inc
cmp
mov
push
fisttp
mov
bound
js
adc
(bad)
mov
sub
push
push
adc
push
inc
lods
(bad)
jne
mov
pop
repnz
stos
dec
pop
jne
add
jge
(bad)
mov
dec
inc
jnp
jmp
(bad)
cmp
cmp
mov
jnp
scas
push
out
dec
push
(bad)
cmps
cld
and
adc
mov
and
cmp
cs
fucomip
add
or
addr16
jo
test
test
jmp
push
jmp
out
jg
jmp
cmp
repnz
hlt
retf
fimul
test
jb
popf
sbb
loopne
mov
into
mov
outs
fimul
fwait
pop
pop
cdq
loope
mov
and
sbb
cli
imul
adc
dec
mov
mov
mov
push
cdq
mov
mov
repz
test
ins
dec
outs
and
xchg
or
xchg
(bad)
adc
add
sbb
sbb
sub
cmp
sbb
int
popa
iret
ins
rcl
(bad)
xchg
call
inc
push
jnp
push
sbb
xlat
adc
and
jg
sub
movs
cmp
outs
into
es
int3
or
repz
scas
cmps
mov
gs
and
lea
mov
stos
jbe
lds
dec
iret
push
cmp
push
mov
mov
mov
data16
stos
stos
ffreep
retf
inc
test
fs
jp
or
push
jge
addr16
sub
sbb
jl
daa
arpl
daa
loopne
and
cmp
pusha
shl
outs
xchg
cs
bound
pop
mov
pop
out
(bad)
add
adc
shl
and
adc
mov
scas
call
fimul
pop
xlat
jae
(bad)
fcomp
arpl
dec
or
push
scas
jno
idiv
inc
inc
add
dec
sbb
out
mov
push
or
adc
dec
hlt
scas
sub
gs
repz
sbb
sub
ror
pusha
xchg
push
or
outs
mov
lds
fwait
neg
aaa
jno
xchg
sysenter
or
cmps
push
popa
cmp
cmp
outs
shr
xchg
push
mov
xor
jmp
cmps
mov
xchg
xchg
repnz
push
fs
ret
icebp
loop
out
jle
or
hlt
ror
mov
scas
pop
daa
(bad)
cdq
in
loope
fnstenv
push
dec
or
sbb
pop
(bad)
xor
pop
loope
mov
inc
pushf
mov
adc
mov
or
lods
push
retf
(bad)
cli
shl
sub
push
pop
xor
cmp
dec
repz
js
jb
jle
jb
inc
add
call
or
(bad)
mov
jno
sti
ds
in
(bad)
xor
ja
fsub
cmp
inc
in
das
sub
jg
pop
(bad)
xchg
scas
(bad)
icebp
cli
retf
aam
test
cmp
add
add
push
leave
mov
sti
jg
add
cld
cmp
lds
dec
mov
ja
or
mov
dec
(bad)
jbe
lock
sub
test
dec
js
fbld
mov
inc
call
addr16
adc
fcom
call
adc
(bad)
pop
call
lahf
loop
jbe
mov
ins
in
call
push
not
mov
int
sbb
xchg
aad
pop
ret
fisubr
add
out
and
addr16
fwait
lea
jp
xlat
jmp
adc
jecxz
mov
mov
push
jae
stos
mov
push
xor
into
jnp
enter
jge
loop
and
pop
jge
jge
xchg
ror
in
and
in
repnz
dec
hlt
sub
adc
into
xchg
xor
xchg
je
cmp
cmp
in
and
sar
pusha
dec
es
ds
dec
call
retf
jle
mov
gs
lds
adc
adc
dec
mov
or
or
hlt
sbb
cmp
mov
push
ins
inc
add
pop
scas
jl
adc
out
pop
xor
or
xor
xchg
mov
fst
mov
xchg
bound
ins
pop
mov
ja
push
add
popa
xchg
dec
xchg
test
inc
inc
jo
idiv
xor
(bad)
out
leave
cmc
or
dec
(bad)
or
cmps
pop
mov
add
(bad)
or
dec
mov
int3
in
jmp
xchg
jne
xlat
sub
or
ret
xchg
mov
inc
ja
hlt
repz
movs
push
mov
add
ficom
popa
repz
(bad)
out
push
lock
jns
push
xchg
mov
sub
fisttp
pushf
cmps
adc
(bad)
loope
fistp
lock
jg
jecxz
and
hlt
xor
mov
pop
jno
pop
int3
jmp
dec
sub
sub
test
inc
sbb
shl
scas
(bad)
jp
cmp
mov
outs
sbb
test
add
mov
sub
or
inc
mov
lods
retfw
xor
mov
iret
xlat
xor
cmp
sub
loopne
pop
mov
mov
ins
jl
cld
fstp
pop
call
ret
cli
sahf
pop
sti
mov
dec
adc
(bad)
cmps
adc
or
jmp
mov
repz
out
pop
mov
add
les
pop
add
sbb
lods
scas
dec
inc
daa
popa
push
jle
dec
pushf
movs
sub
in
ins
in
loop
dec
xlat
and
dec
xchg
jns
pushf
pop
test
test
jne
add
mov
repnz
ins
adc
sbb
ins
jbe
xchg
sub
mov
inc
fldenv
mov
pop
daa
jbe
adc
dec
add
push
lods
ins
pop
and
hlt
sbb
or
cmp
fcomp
inc
jns
mov
adc
cwde
pop
lock
out
sub
in
sub
add
mov
cdq
(bad)
js
stc
hlt
test
cs
ja
shl
dec
sub
mov
les
ds
push
xor
addr16
mov
js
or
ss
stos
hlt
mov
push
cmps
or
mov
dec
push
push
stc
mov
sub
fmul
and
xchg
dec
sub
inc
retf
sub
adc
(bad)
or
or
sub
jne
mov
gs
pusha
push
dec
jecxz
mov
gs
xchg
sbb
mov
leave
push
add
push
addr16
add
nop
xchg
ror
inc
bound
mov
mov
pop
cmps
fsub
pop
lods
loop
jne
stos
add
add
adc
inc
test
jnp
das
sbb
cmps
push
cmp
popa
fadd
(bad)
movs
xchg
inc
cdq
jp
pop
xchg
push
rol
scas
aas
std
pop
call
cdq
sub
stos
jg
mov
xchg
retf
push
dec
sbb
and
inc
shr
jae
xchg
xor
xchg
stc
push
push
fadd
push
not
(bad)
fsubr
jo
sbb
or
test
cmc
xchg
sub
lea
or
or
inc
push
push
xchg
(bad)
lock
scas
mov
dec
fild
icebp
push
and
pop
cmps
pop
or
(bad)
sbb
int
pusha
popa
xchg
mov
es
shr
dec
mov
sbb
inc
addr16
pop
rcl
lods
mov
adc
xchg
dec
push
test
adc
mov
cmp
cs
cmp
inc
or
mov
mov
mov
pop
lock
int3
pop
loope
punpcklbw
pop
mov
mov
sbb
sub
or
mov
leave
inc
push
bound
(bad)
dec
mov
out
mov
cmp
es
sub
scas
test
or
and
out
icebp
rol
push
movs
sbb
popf
mov
jmp
push
loope
xchg
jmp
or
mov
cmp
dec
cmp
rol
jo
xlat
pushf
sbb
in
and
or
inc
nop
pminsw
rcr
fwait
push
xchg
pop
mov
gs
cld
mov
jae
std
out
add
pop
fbld
cmps
ret
scas
arpl
(bad)
addr16
movs
dec
lds
xchg
xor
in
jnp
add
jbe
sub
mov
mov
pop
(bad)
sbb
pop
frstor
sub
imul
ins
sbb
dec
or
cmp
int
ss
or
jecxz
gs
cmp
das
mov
adc
jle
gs
(bad)
in
xchg
mov
imul
cdq
cmps
xlat
jbe
and
test
mov
iret
retf
mov
test
xor
add
rol
and
push
or
lods
(bad)
test
and
clc
lods
xor
cmp
jbe
(bad)
sub
data16
(bad)
fcomp
push
xchg
or
xor
sar
sub
lods
mov
inc
icebp
jg
mov
scas
into
retf
lock
cmp
add
mov
aaa
bound
jg
stos
(bad)
aas
jl
fstp
enter
inc
in
fwait
loopne
xchg
movs
mov
push
cdq
and
xor
imul
lods
lea
jge
sub
add
jb
fsubr
jb
das
mov
jbe
int
rcl
mov
cdq
loopne
loop
xor
mov
sub
lahf
sahf
dec
xor
cmp
(bad)
addr16
(bad)
shl
call
push
and
rol
loopne
push
cwde
ins
jmp
add
movs
into
jnp
push
and
sub
sub
dec
sahf
inc
sti
pop
out
xlat
add
lods
mov
xchg
(bad)
fstp
pop
mov
xchg
sbb
or
mov
repnz
xor
jecxz
jnp
inc
xor
enter
mov
mov
fwait
mov
cdq
addr16
rol
jno
mov
(bad)
cmps
xor
lock
sahf
jle
xchg
push
pop
mov
imul
inc
xchg
lods
(bad)
pop
stos
dec
rcl
adc
sub
movs
scas
mov
mov
xor
loope
je
loopne
(bad)
rcr
int
movs
pop
lahf
out
add
aad
js
jne
daa
pop
jbe
and
(bad)
je
lods
scas
iret
mov
and
jl
hlt
xlat
nop
dec
mov
imul
push
in
push
aad
dec
pop
pop
mov
sub
adc
sbb
stos
test
and
or
mov
push
sbb
ins
adc
test
pop
cmps
pop
adc
lahf
add
add
sub
jmp
popa
xor
cmp
cld
push
in
test
adc
mov
and
sahf
sbb
test
mov
xchg
ret
test
loop
test
or
jg
fst
sbb
push
dec
adc
push
ds
mov
js
jmp
mov
mov
push
adc
das
or
sbb
sbb
cmp
jmp
imul
xchg
stos
cmp
or
cmc
imul
jbe
add
wbinvd
sbb
sub
les
pushf
pop
imul
mov
stos
push
gs
mov
lods
push
mov
pusha
sbb
push
test
call
icebp
jnp
xchg
push
fwait
adc
imul
and
lods
(bad)
loop
gs
add
cmp
mov
nop
xchg
loop
cmp
hlt
sti
push
cli
jge
shr
or
xchg
movs
sub
clc
iret
int
in
mov
out
icebp
lods
dec
ret
push
pusha
retf
in
cmp
std
pop
scas
(bad)
xor
std
inc
out
stos
std
add
pushf
xor
rcr
pop
or
sti
push
xchg
pop
cmps
push
adc
cdq
mov
gs
jg
mov
xchg
pusha
xor
xchg
xor
sbb
mov
movs
rcr
push
out
xchg
dec
pop
mov
mov
fisubr
sub
cmp
adc
sbb
lock
loope
pop
push
jno
mul
pop
sub
ins
mov
call
mov
inc
rcl
je
test
in
adc
or
mov
rol
jp
xor
test
xchg
popa
imul
in
fs
pusha
test
pop
call
dec
dec
jecxz
mov
gs
jmp
and
or
dec
jle
pushf
jmp
and
icebp
cdq
mov
out
push
xchg
ret
xchg
jae
jno
mov
aam
xlat
sbb
add
test
sub
test
or
arpl
(bad)
mov
adc
adc
and
mov
enter
repz
out
repnz
cmp
xchg
out
in
repnz
sbb
fadd
push
aaa
sub
or
stos
shr
fcom
push
mov
sub
push
fbstp
mov
pop
ret
lahf
ins
jmp
shl
mov
movs
jnp
icebp
fsub
pop
retf
imul
push
fiadd
adc
loopne
add
lea
mov
js
lds
pop
imul
fcom
mov
cmp
out
or
mov
movs
frstor
add
cdq
xchg
adc
call
mov
cmp
sbb
cmps
je
aas
enter
fisub
or
or
xchg
pop
call
(bad)
in
pop
dec
mov
movs
inc
mul
cmps
rol
ret
lock
push
(bad)
rcl
jns
mov
dec
loop
in
xor
pop
enter
(bad)
mov
jo
(bad)
or
(bad)
push
shl
mov
push
jo
nop
or
push
nop
sub
add
rol
stos
lock
mov
and
je
sub
inc
mov
(bad)
cmps
aad
jo
add
stos
push
enter
aaa
adc
lds
jns
jmp
test
loop
movntps
sar
cdq
sbb
in
rol
fdivr
push
add
(bad)
loopne
and
mov
fstp
push
jmp
cli
test
movs
jl
test
mov
push
cmps
jp
stos
adc
cli
cli
jp
mov
mov
mov
xchg
cmp
push
mov
mov
sahf
fbstp
pop
jmp
cld
shr
inc
mov
jle
mov
add
inc
jmp
je
sbb
sub
aas
lea
mov
mov
pop
je
in
sbb
mov
lahf
int
push
push
stc
int
bound
mov
stos
test
xor
fdivp
push
push
nop
xor
dec
pop
aaa
sub
outs
popa
pop
or
call
retf
jmp
ret
nop
pop
bnd
sub
call
push
add
mov
ror
or
neg
cmp
xchg
sub
lds
repnz
mov
scas
mov
gs
or
cmp
sub
(bad)
sub
push
or
push
inc
leave
mov
lea
or
fdiv
sbb
adc
int
fdivr
xor
jl
out
call
shl
sti
nop
movs
sti
adc
bound
push
adc
xlat
leave
cld
inc
add
push
xchg
(bad)
into
aas
aam
sub
lea
mov
es
sbb
mov
mov
jge
aas
jl
mov
mov
push
push
pushf
adc
cmp
jne
pop
cdq
push
(bad)
les
inc
iret
or
test
xchg
xor
rcl
inc
add
jne
imul
and
sub
xor
xchg
jb
xchg
dec
push
push
dec
out
ss
fistp
(bad)
addr16
mov
xor
cld
inc
add
call
pop
jbe
xor
je
pop
test
pop
mov
mov
add
int
adc
neg
sti
jnp
or
dec
jl
cmp
cmps
dec
xchg
and
je
ret
ja
ins
xor
cld
push
xlat
aaa
jmp
pop
pop
xor
sti
jae
stc
push
lods
mov
inc
clc
test
cdq
jle
jmp
popf
nop
dec
xor
stos
jl
or
fcomp
daa
call
push
mov
neg
inc
dec
fcomip
pushf
fdivr
lds
or
rol
das
mov
aaa
les
movs
sub
pushf
inc
xchg
dec
push
test
and
sub
retf
mov
fld
add
push
mov
mov
ror
inc
pop
sbb
or
and
xor
mov
push
adc
jl
cmps
inc
test
ret
sbb
push
add
push
push
fwait
push
lea
cwde
add
arpl
and
aas
aad
or
fsubrp
sbb
cmps
mov
mov
push
imul
ds
es
jecxz
pop
(bad)
aas
shr
(bad)
nop
mov
sti
jg
icebp
mov
pop
stc
hlt
out
sub
ja
test
pcmpgtb
pop
sub
push
inc
shl
xchg
cmps
mov
enter
shr
rol
mov
and
sbb
and
inc
jns
push
jnp
fwait
sbb
lahf
in
or
adc
dec
jl
mov
xor
loope
mov
aaa
fldenv
and
dec
or
retf
popf
adc
mov
loope
cdq
inc
je
pop
jo
repz
pop
sbb
xor
cmp
or
shl
cmp
mov
movs
dec
sub
mov
imul
xchg
or
jle
mov
pop
pop
(bad)
in
fsub
jae
and
mov
pop
div
pushf
(bad)
in
fisubr
sbb
retf
pop
repz
ss
push
nop
lds
adc
push
sub
les
mov
push
cld
lock
jb
icebp
movs
jne
fld
mov
push
call
out
jns
add
int3
add
clc
xlat
xchg
pop
das
stos
xchg
inc
sub
mov
xchg
or
sti
popf
xlat
sub
and
push
mul
dec
mov
fcomp
es
and
repz
mov
mov
(bad)
and
mov
xor
mov
mov
mov
jl
or
fnstsw
icebp
sbb
or
aad
pop
out
not
frstor
mov
pop
(bad)
pop
pop
push
stos
daa
arpl
inc
add
xchg
je
push
jmp
fimul
(bad)
loop
loope
sub
and
stos
outs
jno
adc
aaa
ret
pop
pop
loope
sbb
(bad)
dec
repnz
mov
sete
sub
cli
and
adc
jmp
pop
inc
add
hlt
or
inc
js
test
ds
lds
dec
mov
mov
faddp
and
mov
or
jg
push
sub
inc
cmp
(bad)
retf
in
in
imul
jle
dec
fst
fs
and
ret
mov
scas
cdq
aaa
push
cdq
add
stc
stos
cmp
mov
dec
sbb
bound
or
call
mov
mov
cli
jmp
arpl
lahf
mov
adc
fimul
repz
push
lods
sbb
lahf
add
xchg
mov
mov
out
icebp
sahf
dec
push
mov
mov
ror
add
into
stos
test
mov
std
stc
mov
dec
dec
add
(bad)
mov
popf
pop
les
das
push
xor
das
xor
jl
jmp
push
dec
mov
mov
fbstp
cmp
mov
pop
das
test
call
retf
movs
xor
(bad)
shufps
out
mov
data16
and
mov
(bad)
adc
sbb
or
rcl
inc
aas
stc
cwde
push
cmps
imul
int
jg
movs
or
scas
mov
xchg
jp
dec
ret
imul
adc
shl
fistp
sahf
enter
test
fisub
retf
jg
jmp
mov
sbb
sbb
mov
gs
jmp
(bad)
mov
mov
inc
loop
not
inc
lds
into
in
inc
clc
xchg
(bad)
sahf
daa
cmp
sar
mov
sbb
pushfw
and
or
cmp
leave
jnp
fisttp
stos
mov
mov
inc
div
sub
neg
lods
inc
jg
aad
cld
adc
std
retf
mov
xchg
fist
int
in
push
pop
stos
out
inc
mov
scas
je
and
rol
mov
sub
push
push
and
pop
add
sbb
fadd
push
(bad)
cmp
cli
clc
and
cli
cld
xchg
outs
pop
es
mov
fstp
push
and
or
mov
fnstcw
jbe
mov
adc
aas
push
nop
add
mov
aad
mov
sti
movs
cld
mov
and
xchg
arpl
movs
fldcw
imul
ret
rcl
mov
jne
cli
push
dec
call
or
xlat
ror
jnp
loopne
mov
cdq
adc
fwait
mul
repnz
and
repz
pop
outs
sub
jb
sub
or
and
(bad)
mov
pop
cmp
sbb
jae
mov
mov
cmc
movs
xor
adc
lods
aaa
xor
dec
xchg
jl
pop
in
cmp
out
into
inc
mov
repnz
test
cli
in
lods
mov
mov
ret
shl
adc
mov
xchg
shl
mov
leave
imul
add
fdiv
call
lods
fdiv
(bad)
jns
gs
jae
fldcw
inc
xor
push
jno
icebp
pop
push
adc
out
out
sub
call
movs
xor
fist
and
aad
adc
cs
cdq
(bad)
cmp
sbb
movs
daa
movs
adc
fstp
in
retf
lods
leave
iret
adc
daa
popw
movs
pop
ss
inc
sahf
sbb
mov
push
add
punpckhwd
data16
test
rcl
add
push
mov
scas
ins
icebp
fbstp
fsubr
mov
push
mov
mov
loop
push
icebp
cmp
mov
inc
mov
mov
icebp
sti
mov
cmp
mov
test
mov
push
retf
aad
push
cwde
sbb
pop
jb
push
cmps
enter
push
retf
daa
push
and
inc
sub
lea
lods
lock
add
mov
lods
cmp
dec
jmp
push
or
outs
xchg
adc
fmul
jecxz
jle
and
addr16
mov
xor
and
xor
cwde
add
jmp
push
add
pop
aas
mov
pop
sub
fisubr
int3
ins
aam
pop
sbb
mul
mov
mov
mov
jb
fdivrp
sbb
fld
call
ficomp
(bad)
lds
add
cs
inc
cmps
mov
test
dec
scas
in
(bad)
arpl
xor
cmp
ret
das
mov
inc
ret
repz
and
in
push
loope
jbe
xor
fld
push
sbb
mov
pop
dec
push
cmp
(bad)
jmp
div
rol
adc
stos
retf
fiadd
cmp
and
inc
fs
test
push
inc
mov
adc
mov
out
pushf
sbb
shr
pop
inc
(bad)
xor
push
push
loope
in
dec
xor
icebp
into
jl
sub
sbb
push
sub
cmps
les
adc
ds
nop
test
and
cmps
jb
jecxz
lea
pop
ds
or
pusha
rcl
stc
div
xchg
sbb
add
cld
jg
retf
test
shl
cld
push
push
xchg
xor
movs
sahf
pop
sbb
dec
pop
xor
inc
jg
inc
inc
cmps
test
mov
dec
push
cwde
jle
xchg
push
pusha
(bad)
jg
sbb
jecxz
push
adc
ret
ret
bound
sub
retf
sbb
jge
dec
jmp
pop
into
jne
adc
icebp
dec
xor
popf
inc
icebp
xor
cwde
repnz
adc
or
cli
int
lods
dec
jb
jb
das
rcr
and
mov
xor
(bad)
jb
add
icebp
das
bound
sbb
cmp
sbb
or
call
sub
scas
cmps
mov
add
inc
lock
call
repz
jp
sub
mov
push
mov
cmp
push
int
shl
aad
enter
aam
or
lahf
sub
shr
addr16
cld
mov
gs
dec
or
(bad)
xor
int
test
out
or
add
clc
xchg
mov
out
jmp
push
cmps
push
inc
test
add
xor
movs
inc
jmp
dec
inc
inc
add
and
fild
or
and
icebp
jb
push
in
jp
cdq
ds
mov
sub
sahf
jns
adc
jne
sub
cmp
cli
sbb
ja
mov
push
ret
sti
dec
mov
jge
stos
xchg
jmp
in
add
daa
mov
add
pop
imul
cmc
(bad)
adc
xor
lock
or
inc
jge
cmp
push
cli
in
push
mov
outs
mov
mov
adc
add
add
(bad)
mov
mov
(bad)
in
test
enter
stos
mov
inc
xor
dec
es
mov
int
test
xor
xor
int
mov
test
lea
mov
(bad)
inc
cmp
push
ins
or
popa
lock
fimul
int3
cs
inc
ds
mov
pop
(bad)
setnp
enter
data16
sbb
push
or
inc
lds
fwait
sbb
in
cdq
jne
pop
pop
ins
fwait
addr16
ret
xor
mov
mov
mov
ss
and
adc
out
cli
pop
stos
adc
jmp
retf
(bad)
lock
sbb
(bad)
push
je
mov
pop
int
mov
sub
mov
xlat
adc
push
cmp
dec
(bad)
aad
adc
stc
pop
inc
std
push
iret
dec
aas
mov
jge
in
sar
pop
stc
cmp
call
xchg
push
(bad)
cmp
xchg
fst
jecxz
jne
and
mov
into
ror
xlat
and
fisttp
loope
sub
mov
adc
xor
jmp
mov
cli
std
sbb
mov
stos
dec
loopne
inc
jmp
jge
inc
out
jecxz
jne
inc
sbb
mov
adc
jo
sbb
mov
(bad)
fwait
xor
sti
ret
sahf
or
data16
movs
jmp
push
or
pop
imul
add
sbb
popf
ror
pop
mov
aad
mov
pop
sbb
repnz
test
adc
jb
inc
in
sub
push
stos
cdq
cs
mov
dec
sub
or
lods
xor
cli
jmp
jnp
shr
sub
jb
jae
adc
adc
clc
sub
(bad)
or
pusha
data16
es
pop
mov
sub
and
les
dec
mov
xor
mov
fnstsw
out
adc
jle
daa
inc
jnp
dec
xchg
stos
lock
int3
sub
cs
das
push
jae
out
mov
rcl
les
hlt
xlat
icebp
adc
retf
lods
cmps
jmp
inc
loop
mov
sahf
xchg
test
movs
push
imul
or
push
test
adc
fidiv
xchg
or
xor
adc
mov
inc
test
and
in
sahf
inc
mov
imul
add
mov
xchg
fild
adc
in
std
mov
call
js
push
xlat
xor
pop
daa
mov
add
or
(bad)
mov
aas
push
push
outs
dec
popf
push
in
add
xor
sbb
pop
data16
jbe
fld
dec
fnstsw
iret
sub
push
sub
push
std
pop
dec
(bad)
jmp
add
jecxz
lea
mov
daa
xor
pop
pop
xchg
mov
out
not
int3
out
push
dec
stos
xchg
sub
cmp
inc
pop
lods
(bad)
(bad)
cmps
xchg
das
lods
cwde
in
out
adc
jns
out
inc
adc
pusha
inc
cld
lahf
xchg
test
dec
int
js
in
inc
out
in
shl
lahf
loop
jmp
mov
mov
jno
cmp
cdq
ins
loope
jnp
in
inc
daa
pusha
iret
fs
sbb
imul
fdiv
fwait
and
aaa
adc
hlt
loopne
ja
cwde
hlt
and
popa
cmp
arpl
xor
loope
(bad)
std
shl
jns
dec
ins
ins
sbb
cmps
mov
sub
and
enter
jo
fsub
jmp
(bad)
clc
in
icebp
xor
icebp
fimul
gs
lods
push
out
push
push
daa
add
fcomp
scas
or
cmp
adc
jl
inc
data16
jne
mov
sti
jle
xchg
adc
out
aas
push
push
xor
cmps
xchg
and
inc
or
rol
mov
das
movs
retf
mov
sub
ins
pop
mov
pop
repz
add
test
popa
fmul
mov
das
xlat
lds
jg
push
(bad)
push
push
xchg
test
push
gs
jp
pop
inc
pop
push
mov
out
int3
mov
pop
in
ret
mov
dec
or
cli
in
mov
arpl
sub
(bad)
jmp
dec
gs
loopne
in
inc
popa
mov
pop
fistp
aaa
push
sbb
push
shl
mov
aas
(bad)
mov
in
daa
push
xor
adc
std
aas
retf
lods
sbb
icebp
jecxz
push
adc
inc
in
cmp
hlt
lods
ja
adc
call
mov
pop
out
pop
loopne
aam
xchg
sbb
pop
pop
iret
lds
call
xor
xchg
mov
inc
sub
xor
loopne
aaa
loopne
(bad)
mov
xchg
mov
neg
push
adc
jbe
mov
inc
push
dec
push
les
cwde
xlat
ror
xchg
inc
int3
push
sti
jl
inc
xor
add
jno
(bad)
jo
add
dec
or
mov
xor
out
rol
cmp
pop
loop
mov
sar
dec
and
nop
sbb
inc
push
xchg
xchg
xor
xchg
push
test
pop
aad
cmp
retf
inc
jae
pop
test
outs
sub
xor
sti
mov
adc
enter
or
pushf
or
loopne
mov
pop
fiadd
jns
inc
mov
mov
pop
mov
gs
jns
xchg
jbe
mov
sub
je
call
push
and
loopne
loop
movs
pop
sbb
mov
mov
mov
add
dec
ror
cmp
push
pop
mov
adc
mov
push
sbb
dec
add
out
aad
test
sub
jb
sub
movs
jno
cmp
imul
into
arpl
pusha
jle
push
clc
in
adc
adc
sub
xchg
pop
xchg
into
inc
popa
push
pop
pop
jg
lds
fiadd
mov
sub
enter
(bad)
mov
(bad)
mov
cwde
out
retf
out
and
xchg
ins
add
(bad)
stos
push
shr
lods
call
mov
std
mov
aam
loopne
jmp
test
cmp
mov
sub
pop
dec
das
jl
pop
add
push
loopne
push
addr16
pop
rcl
ins
or
adc
jb
cld
sbb
adc
and
mov
(bad)
scas
push
lahf
adc
or
popf
inc
xor
cmp
adc
(bad)
cmps
inc
mov
dec
stos
xchg
dec
mov
push
and
shl
mov
stc
sub
push
jo
loopne
mov
loopne
outs
iret
shl
test
push
sub
mov
jge
pop
pop
adc
mov
ret
inc
xlat
lock
aad
mov
outs
loop
xor
jl
neg
lds
stos
sub
(bad)
mov
pand
sub
jae
sub
repnz
sbb
bound
(bad)
mov
int3
(bad)
imul
cmp
cdq
fnsave
test
sbb
cs
mov
inc
push
jne
xchg
bound
in
add
jmp
and
jle
mov
and
popa
cli
or
ds
adc
cmp
push
jne
fmul
sbb
(bad)
fst
xor
cmp
int3
aaa
ret
jno
ja
jno
sbb
mov
and
push
adc
mov
cmp
and
or
xor
lock
pusha
loop
fidiv
and
aam
push
out
mov
cmps
sbb
aas
xor
mov
scas
sub
push
fxch
mov
add
add
mov
inc
je
js
jbe
cdq
jmp
push
retf
sbb
int3
dec
test
dec
in
jle
prefetchnta
cs
inc
ds
fidivr
mov
aad
lahf
or
fsub
aaa
pop
jmp
(bad)
jae
popa
or
aaa
test
out
sub
scas
inc
imul
jecxz
pop
push
sub
xor
cmp
xchg
jns
xor
mov
inc
adc
(bad)
and
mov
or
cmp
jae
push
xor
dec
xchg
cmp
jle
cmp
pop
lea
xor
pop
sub
jge
xchg
lods
dec
sbb
xchg
push
es
add
xor
ja
mov
mov
in
pop
xor
out
adc
dec
cmp
dec
loope
add
push
sahf
push
lea
or
jg
sub
jb
inc
lea
cmps
sbb
stos
psrlq
fst
out
cmp
inc
adc
ds
mov
mov
xor
das
adc
mov
mov
dec
push
inc
repnz
cmp
fidiv
push
or
adc
loop
add
mov
popf
xchg
or
out
sub
arpl
inc
inc
xor
push
dec
repz
int3
pop
cmp
lods
arpl
push
jbe
fmul
mov
dec
les
retf
cmps
mov
dec
jns
int
xchg
cmp
pop
inc
mov
cmp
shl
sbb
test
jmp
mov
dec
lock
lock
jb
daa
dec
shr
rol
jae
jnp
scas
dec
push
fwait
mov
xchg
jb
xchg
xchg
pop
scas
pop
movs
and
xchg
mov
div
push
push
dec
out
std
or
aad
movs
jno
repz
mov
fcomp
cmp
and
jecxz
push
not
xchg
or
das
lods
jle
and
add
and
dec
out
retf
aaa
pop
mov
test
jae
je
outs
rol
pop
scas
xchg
xchg
test
jmp
(bad)
sbb
leave
push
gs
les
mov
fwait
adc
enter
fisttp
neg
jb
movs
test
mov
pop
mov
ret
add
xlat
push
call
push
cmp
or
mov
fistp
(bad)
jg
(bad)
push
int3
pop
or
xor
cwde
fcomp
and
sub
or
push
mov
in
xlat
xor
mov
fstp
imul
adc
ins
sbb
es
dec
lds
and
mov
nop
jle
xor
sbb
stos
ret
pop
add
arpl
or
aas
push
out
mov
push
mov
ret
dec
cmp
pop
xor
cmp
xchg
push
iretw
shr
pop
call
mov
adc
pop
cmp
popa
xchg
test
call
movs
(bad)
int3
in
aam
pop
or
out
in
cmc
pop
nop
xchg
loop
adc
arpl
jmp
adc
sbb
jo
outs
shl
fcom
xlat
sbb
and
dec
xchg
jle
pop
xor
xor
test
xacquire
shr
gs
pop
xchg
sahf
clc
ret
adc
in
jmp
jp
xchg
retf
xor
scas
mov
repz
aaa
fnsave
mov
lods
and
sub
inc
retf
shl
mov
mov
mov
mov
aaa
int3
jno
push
test
imul
xchg
add
inc
hlt
fnstenv
arpl
or
das
cwde
test
shl
dec
repnz
inc
in
and
daa
into
aas
adc
fsub
pop
(bad)
dec
idiv
cmp
gs
repnz
and
cdq
retf
add
mov
pop
scas
mov
loope
std
cs
push
scas
lds
shl
sbb
test
test
dec
(bad)
jecxz
sub
in
jmp
call
sahf
cmp
push
cmp
jge
jns
gs
jp
ds
arpl
ret
fstp
cmp
jnp
xor
xor
inc
xor
mov
xchg
(bad)
dec
das
push
push
mov
adc
push
repz
aam
and
pop
call
ins
outs
pop
out
pop
pop
test
sub
aaa
in
xchg
dec
mov
addr16
cmps
mov
xchg
daa
dec
imul
(bad)
add
bound
stos
push
shl
pop
pop
mov
sbb
jne
add
fdiv
mov
jp
xor
lea
mov
imul
mov
cs
sub
imul
out
pop
mov
call
or
not
cmps
gs
(bad)
push
fisub
scas
mov
imul
cmp
cmps
mov
mov
movs
retf
jp
mov
pop
(bad)
aam
sub
inc
xlat
jne
fidivr
popa
jmp
iret
xchg
sahf
aad
ja
jp
out
mov
gs
sub
ins
inc
xor
(bad)
adc
rcl
jp
inc
and
dec
xchg
mov
icebp
sbb
out
lds
and
test
push
ss
(bad)
mov
neg
fst
outs
imul
jge
dec
ins
out
sub
sbb
iret
imul
jb
aam
nop
pand
push
mov
or
cmp
mov
xlat
inc
pop
xchg
mov
in
or
popf
cmp
shl
sbb
outs
retf
jl
push
retf
or
adc
mov
(bad)
aam
sti
mov
gs
cmp
sub
aam
mov
adc
sbb
mov
nop
loopne
sbb
fimul
fild
jmp
push
stos
in
std
lods
(bad)
cmp
frstor
xchg
mov
and
mov
or
push
nop
in
fiadd
dec
ror
mov
fdivr
lods
xchg
jnp
pop
sbb
jp
or
inc
mov
fadd
xor
jmp
sub
sbb
inc
je
jle
jne
adc
jmp
xchg
sti
cmc
fdiv
push
dec
out
gs
sahf
cmp
push
popa
bnd
ins
es
loop
(bad)
sbb
dec
out
jne
cmp
cmp
mov
xchg
jmp
int
in
lea
xchg
imul
mov
icebp
sar
inc
and
shl
mov
pop
pop
push
test
cmp
mov
nop
adc
sub
pop
les
xor
xor
ds
imul
pop
jno
xchg
ror
sub
add
jo
cmp
std
xlat
jnp
adc
add
mov
ins
int
cs
pop
add
data16
test
ins
in
call
shl
xchg
not
mov
in
jmp
jb
inc
mov
movs
pop
or
cmps
inc
xchg
sub
cmc
sbb
cs
sti
jecxz
sub
inc
or
in
inc
and
mov
xor
mov
ss
enter
lods
lahf
mov
and
adc
jae
mov
mov
movs
inc
ror
or
dec
xchg
test
add
inc
xchg
jge
pop
retf
push
mov
and
ja
test
mov
dec
push
add
loop
popf
daa
fmul
pop
sbb
or
cmc
cmc
inc
pop
dec
cmps
mov
cli
test
pop
rcr
jns
push
call
cmps
test
scas
inc
xchg
sbb
popf
ss
jb
not
std
mov
ror
loope
inc
out
mov
or
xor
and
mov
add
push
mov
(bad)
cmps
pusha
les
dec
repz
dec
jno
mov
cmp
pop
mov
stos
adc
inc
aaa
repz
mov
xchg
xor
sahf
neg
data16
push
and
arpl
xchg
jno
adc
imul
mov
(bad)
adc
pop
int
popa
popa
mov
sahf
aas
push
xor
fistp
idiv
fwait
push
lods
pop
pop
mov
mov
inc
xor
adc
cmp
dec
fiadd
xchg
push
loope
inc
(bad)
jbe
pop
jg
sub
dec
and
xchg
inc
or
mov
mov
(bad)
pop
ror
mov
mov
push
sub
bound
in
sbb
adc
add
jmp
sbb
mov
mov
imul
sbb
cmp
nop
pop
int
inc
ror
repnz
fcom
das
or
adc
jno
xlat
jecxz
cld
mov
sti
std
aas
test
mov
fisub
jmp
pop
je
xchg
cli
ins
(bad)
dec
cmp
loope
cs
mov
push
sbb
cdq
xchg
sub
(bad)
arpl
xor
out
xlat
mov
or
sub
js
dec
iret
cmp
clc
adc
mov
arpl
sub
outs
jmp
in
push
mov
add
inc
in
ja
cmp
or
(bad)
cmp
adc
inc
in
mov
daa
dec
or
mov
cdq
gs
cmp
movs
addr16
jmp
xor
lods
dec
lea
xchg
sub
arpl
scas
sub
ins
or
mov
mul
mov
xor
add
xchg
pusha
jge
cmps
stc
xchg
push
inc
outs
aam
loopne
push
test
cmp
jb
leave
push
pop
fwait
push
sbb
or
daa
movs
lods
cs
or
ficomp
cmp
repnz
arpl
jbe
cmps
adc
mov
xor
shl
retf
add
mov
fadd
int
cld
loopne
xor
jmp
mov
sbb
aas
pop
fisub
hlt
jb
aad
push
fdivr
push
fmul
add
push
pop
addr16
jp
ja
outs
adc
xor
bound
jmp
adc
add
mov
ficomp
pusha
xlat
cli
not
popa
je
ret
inc
enter
xchg
stos
imul
lods
lock
shr
xor
hlt
jo
sti
inc
in
ins
shl
jbe
ret
and
adc
arpl
jo
outs
xchg
ror
repz
scas
pop
sub
clc
fs
mov
mov
lods
stos
jnp
jmp
sub
test
sbb
call
fld
mov
mov
fs
cmp
dec
sub
mov
push
sub
jae
mov
cmp
dec
pop
mov
popf
call
sar
dec
and
popf
(bad)
cmp
ins
push
jle
xchg
xor
rcl
aaa
in
mov
stos
xchg
and
(bad)
pusha
shl
bound
loope
daa
dec
out
xor
or
mov
pop
xor
push
and
data16
pop
les
std
data16
es
imul
cmp
mov
mov
(bad)
cld
sbb
mov
sbb
cdq
jmp
das
fild
sbb
and
xor
fdivr
inc
pop
inc
mov
inc
icebp
retf
out
int3
push
mov
xor
xchg
loopne
nop
sahf
into
fdiv
adc
popf
aad
mov
or
in
jl
jns
push
and
rcr
mov
pop
aam
mov
add
jg
ret
pop
jle
mov
add
nop
mov
inc
adc
mov
int
adc
cs
ret
mov
dec
lods
mov
mov
enter
jno
aam
mov
lock
xchg
pop
pop
cmps
stos
jle
je
cmp
fbld
gs
xchg
jae
(bad)
js
dec
push
sahf
fnstsw
aas
jne
gs
int3
in
movs
clc
stos
inc
jmp
int
lahf
pop
imul
mov
xor
dec
jp
addr16
test
sti
lds
inc
mov
rcr
adc
repz
je
sub
mov
loop
test
add
aaa
imul
mov
test
pusha
cmp
outs
cli
(bad)
mov
pop
sbb
and
and
inc
rcl
loop
push
mov
xchg
jmp
mov
cmc
pop
mov
pop
dec
mov
pop
lidtd
enter
mov
dec
mov
push
popf
xchg
dec
add
gs
fdivr
push
add
out
inc
mov
repz
jbe
ja
pop
outs
sahf
xor
dec
mov
and
mov
mov
retf
add
enter
sti
sahf
aam
pushf
mov
or
dec
nop
push
mov
aas
pop
adc
(bad)
lods
xor
sti
adc
(bad)
mov
in
pop
pop
mov
outs
add
jecxz
or
mov
shr
dec
mov
or
push
(bad)
sahf
(bad)
mov
sub
pusha
cmp
sbb
pop
loopne
push
jnp
mov
pop
ins
mov
test
call
pop
cld
mov
sbb
test
inc
sti
adc
mov
sti
mov
outs
in
pop
out
movs
xchg
add
inc
pop
fdivr
sbb
lea
sub
loope
call
mov
mov
mov
dec
sbb
xchg
dec
pop
xor
jnp
mov
loope
sbb
sbb
adc
xchg
sti
adc
mov
popf
and
ret
mov
mov
xor
add
push
or
jne
ret
cmps
dec
sub
adc
mov
add
and
jne
mov
ss
adc
lahf
dec
sbb
xlat
(bad)
xor
out
inc
adc
pushf
sub
pop
sahf
jmp
cmps
xchg
fidivr
ror
add
adc
addr16
ss
js
fs
dec
bound
xor
aad
shl
cwde
test
call
int
int3
les
jg
cmps
sbb
inc
add
mov
jle
cmps
sub
push
mov
jo
mov
xor
mov
or
mov
sub
inc
xor
mov
ins
ins
nop
lods
das
loopne
je
(bad)
lock
dec
push
cli
cmc
sbb
xchg
push
arpl
bound
mov
test
loop
cwde
mov
mov
loope
xchg
not
jno
scas
push
test
cmp
in
adc
push
cmp
jp
movs
call
jnp
es
mov
popf
in
xchg
mov
jmp
jnp
add
out
(bad)
outs
xchg
repnz
movs
mov
fild
mov
sbb
loop
lea
mov
dec
and
xor
adc
or
aaa
stos
fistp
add
fs
xor
and
not
icebp
mov
jno
pop
lods
js
xor
out
aam
mov
mov
imul
sbb
mul
jne
stos
aaa
ja
or
mov
frstor
mov
popf
sub
inc
push
dec
shl
and
adc
push
sub
sub
out
test
mov
lods
mov
and
push
pushf
lods
dec
mov
mov
sbb
pop
jb
mov
sub
arpl
push
adc
pop
or
inc
pop
outs
mov
jl
inc
add
or
outs
aad
iret
or
shr
lahf
xlat
push
mov
sub
pop
leave
jmp
mov
out
ror
sub
(bad)
repnz
aaa
add
cdq
imul
clc
stos
pop
movs
xor
and
or
mov
and
cmp
neg
cwde
cmps
xchg
fbld
push
sti
iret
loop
cdq
and
inc
mov
mov
imul
mov
jmp
fcmovbe
mov
sbb
lods
sub
dec
not
adc
jne
push
shl
cvtps2pi
movs
inc
sub
js
test
sahf
(bad)
arpl
jl
mov
shr
and
cwde
jmpw
pop
outs
cmp
inc
sbb
sar
gs
jl
pop
cmc
mov
push
movs
pop
mov
push
mov
fmul
jle
(bad)
aam
dec
or
call
and
jg
cmp
mov
inc
pusha
ds
mov
setns
push
arpl
push
add
out
add
inc
sub
fist
je
dec
int
cmp
mov
shl
sbb
outs
mov
add
sbb
jnp
xor
rcr
outs
daa
adc
xchg
and
gs
pop
lock
mov
jle
cmp
gs
xor
popf
aam
pop
(bad)
sub
cli
movs
mov
sub
pop
and
sbb
mov
mov
pop
mov
jl
sbb
mov
push
std
retf
fistp
push
sar
mov
in
fist
sbb
mov
out
xor
pusha
push
sub
adc
inc
adc
scas
mov
jnp
push
ret
pop
cmc
jnp
lock
sbb
xor
fcmovne
pop
into
push
jg
js
sahf
pop
shr
pop
or
iret
add
popf
nop
pop
scas
mov
or
jg
(bad)
cld
data16
mov
dec
(bad)
and
mov
adc
out
inc
pop
pop
xor
(bad)
icebp
cld
fdiv
or
mov
(bad)
mov
mov
out
jmp
je
xchg
retf
sub
sub
(bad)
bound
pop
mov
call
movs
jb
xchg
(bad)
dec
pop
mov
sbb
mov
xchg
or
sub
loope
pop
out
cmps
cmp
sbb
in
add
enter
aad
push
test
add
loopne
mov
call
fisttp
pop
inc
sub
sub
into
add
push
retf
or
fs
cmc
cli
mov
(bad)
sahf
test
jae
int3
retf
popf
and
push
into
xor
mov
dec
sub
shr
call
repnz
inc
sti
lods
push
inc
in
add
add
sub
sahf
push
mov
and
sahf
and
sub
push
and
mov
imul
or
cmp
sub
gs
mov
push
int3
jns
dec
mov
add
loop
sbb
mov
inc
lods
jbe
int3
cmp
sbb
test
adc
iret
cli
xchg
test
addr16
sbb
fsub
cdq
lock
popa
test
stc
pop
push
fsubr
leave
xor
jl
outs
mov
fwait
lock
aaa
dec
push
inc
jns
xor
xor
out
jmp
inc
cld
in
cmc
pop
in
add
lahf
push
test
xchg
add
mov
popa
in
sub
retf
daa
ja
push
inc
or
adc
aam
push
xchg
push
and
movs
je
push
cmps
jns
pusha
jne
mov
sub
xchg
jae
add
jecxz
(bad)
outs
icebp
and
add
movs
outs
movs
stc
xchg
inc
shr
or
or
(bad)
popf
pusha
mov
or
cmps
xor
mov
out
adc
out
clc
and
cmp
xor
push
pusha
jbe
jo
lea
dec
jecxz
iret
dec
test
or
sar
in
mov
or
retf
cs
push
enter
js
nop
or
adc
sub
and
mov
mov
bound
mov
retf
(bad)
push
xor
xor
push
add
cmps
jmp
mov
add
or
fiadd
(bad)
mov
cmp
or
retf
rcl
sti
inc
(bad)
imul
in
in
stos
arpl
(bad)
dec
ins
fld
push
arpl
fdivr
jge
ror
out
scas
int3
test
fisttp
sub
hlt
out
xor
mov
pop
(bad)
xchg
or
ja
repnz
xor
jl
jle
repz
fwait
adc
imul
mov
sbb
sbb
fadd
jnp
pop
icebp
or
lods
popf
xchg
adc
sar
mov
add
hlt
mov
jge
pop
dec
mov
movs
push
dec
test
dec
in
cld
xchg
addr16
add
sub
movs
imul
pushf
pop
jns
xchg
lods
icebp
outs
aas
and
push
int
pop
push
outs
cwde
hlt
cmp
mov
(bad)
jnp
into
mov
mul
pop
fst
xor
ror
das
pop
ds
ret
jnp
xchg
cld
mov
cs
sti
or
jnp
nop
adc
xchg
mov
in
xchg
sahf
call
xchg
xchg
mov
add
les
shl
dec
popf
add
xchg
mov
fnstenv
js
(bad)
das
and
push
aad
sbb
rcl
add
cs
pop
cpuid
or
clc
push
cmp
push
lods
push
xlat
mov
bound
rol
mov
add
xor
add
sub
pop
jns
pop
retf
test
and
(bad)
frstor
xchg
jbe
aaa
pop
rcr
ins
pop
jle
in
pop
xchg
xchg
sbb
and
out
fmul
aas
imul
pop
js
sub
add
mov
mov
cmp
in
sub
js
push
lahf
sub
aad
cmp
(bad)
mov
xchg
pop
loop
rcr
les
cmps
inc
push
pop
adc
iret
repz
sbb
mov
pushf
ins
pusha
add
(bad)
mov
mov
mov
aaa
push
out
nop
adc
cmp
xchg
mov
outs
scas
sbb
test
xlat
and
jmp
popf
aad
test
les
(bad)
ds
dec
nop
sub
cli
mov
jmp
loopne
xchg
fsub
mov
push
pop
dec
xor
pusha
mov
sbb
inc
inc
fs
test
xchg
inc
cmc
cmp
test
jl
push
les
push
sbb
or
imul
sub
enter
inc
pushf
add
ficomp
addr16
std
jbe
loop
xlat
mov
into
(bad)
push
cli
fs
in
jne
dec
push
fwait
xchg
in
pushf
cmps
and
pusha
sub
ins
mov
mov
dec
cli
dec
mov
inc
or
(bad)
ja
cmp
rcr
pop
jno
add
jg
cmp
sahf
pop
cmp
int3
test
sub
stc
stc
or
fdivr
jp
pop
sbb
movs
sub
pushf
aad
inc
push
push
test
lock
sub
bndldx
dec
xor
dec
pop
jb
or
pop
mov
cmp
(bad)
out
inc
stos
adc
hlt
int
inc
icebp
icebp
push
xchg
imul
mov
ins
(bad)
je
std
cmp
lods
shr
sbb
shl
and
stos
sbb
fisubr
and
cmp
dec
push
in
stc
(bad)
shl
(bad)
sub
shl
(bad)
jmp
(bad)
or
dec
fucomip
movs
and
xor
jno
jbe
dec
dec
js
inc
mov
add
(bad)
pop
push
je
jne
gs
cld
movs
mov
hlt
push
repnz
mov
sub
pop
mov
sbb
mov
mov
sub
xor
mov
js
iret
lahf
jns
mov
je
or
in
sub
or
cmp
xor
aas
cmc
adc
push
bswap
pop
test
imul
pop
adc
add
movs
sub
lahf
pop
in
push
out
mov
sub
jne
loope
outs
aas
(bad)
ret
sbb
out
bound
push
xchg
sar
fcomp
ins
or
test
pushf
pusha
mov
and
jg
nop
test
ins
cwde
inc
retf
rcr
sbb
lods
ja
enter
int3
fiadd
xor
rcr
retf
pop
jmp
cli
jb
repz
iret
pop
(bad)
fwait
xor
stos
inc
pusha
push
cmp
fimul
jne
jg
popf
je
fnstsw
(bad)
shl
pop
cli
push
xor
xchg
or
adc
xchg
mov
scas
aas
outs
xchg
jbe
push
jp
daa
fucomi
out
dec
or
not
scas
outs
cld
and
movs
or
mov
add
mov
mov
loop
pusha
add
mov
xchg
xchg
and
push
shl
mov
push
(bad)
(bad)
shl
mov
popf
mov
jge
sahf
push
imul
cli
daa
push
aas
push
mov
inc
neg
sub
jge
jmp
or
mov
jmp
sbb
push
out
mov
lock
and
scas
ja
pop
jne
call
ret
test
inc
retf
or
xchg
and
or
(bad)
iret
pop
add
xchg
add
or
adc
adc
sub
jg
jns
pop
popf
and
inc
fprem
out
loopne
mov
xchg
xor
sbb
jae
pop
stos
cdq
ins
lods
push
jno
dec
out
or
and
push
xor
test
(bad)
movs
push
test
mov
clc
mov
popa
dec
imul
xor
ficomp
mov
in
in
push
mov
jne
stos
rcr
fbstp
pop
or
retf
mov
mov
daa
xor
das
adc
arpl
jb
arpl
out
cmovns
sbb
mov
ror
xchg
test
dec
pop
mul
xor
jmp
outs
repz
or
cmp
jl
push
sahf
stos
icebp
mov
sbb
and
mov
xlat
xor
xchg
mul
jl
sti
(bad)
fdivr
xchg
dec
mov
and
test
dec
int3
movs
xlat
xor
sbb
add
addr16
xor
data16
es
xor
clc
inc
stos
mov
fbld
pushf
mov
int
mov
sub
push
mov
jns
mov
loopne
jnp
xor
xlat
into
(bad)
push
mov
out
dec
pop
mov
pop
(bad)
mov
dec
ret
xchg
cmps
or
js
es
(bad)
sti
cmp
mov
sti
pop
cmp
push
or
cmp
mov
out
mov
pop
sbb
ja
push
in
and
(bad)
add
xor
adc
mov
adc
ret
inc
pop
or
jge
sbb
lds
in
mov
call
enter
outs
cmps
pop
inc
ss
ret
ja
fxch
add
inc
ss
jle
fistp
outs
pop
es
mov
or
mov
xor
les
cmps
push
imul
cmp
mov
inc
xor
mov
adc
push
inc
mov
sub
addr16
xor
xchg
sub
and
outs
es
sub
into
push
push
(bad)
mov
repnz
in
int
push
les
jl
out
leave
aad
out
pop
in
dec
fwait
mov
stos
retf
gs
les
lds
adc
(bad)
js
push
cmp
call
aam
cwde
hlt
ds
mov
mov
sti
shl
in
out
nop
jl
sahf
fdiv
lahf
cwde
jnp
shr
jl
mov
xchg
sbb
mov
ret
push
je
cs
add
push
shl
adc
pop
mov
adc
jns
dec
pop
add
cs
je
sub
lahf
jg
dec
int
outs
aas
lods
retf
and
in
xchg
punpcklwd
(bad)
lods
cmps
cmp
bnd
das
stc
add
call
inc
test
stos
jne
mov
int3
fldenv
dec
outs
aad
lahf
out
jno
pop
stos
inc
and
adc
mov
scas
xchg
test
sub
stos
fs
xor
sbb
or
xor
xor
sahf
mov
jnp
(bad)
aam
into
iret
dec
ins
jg
enter
retf
mov
mov
cmp
out
cmp
xor
ss
(bad)
and
aaa
scas
rol
int
push
xchg
cmp
mov
add
(bad)
out
shl
lahf
sbb
sub
into
pop
loopne
add
add
sti
sbb
mov
xchg
sub
mov
inc
outs
sub
xor
mov
push
xchg
adc
and
jno
and
pop
loope
mov
jecxz
push
stc
push
inc
out
dec
scas
pop
inc
and
ss
xchg
xchg
loopne
neg
out
cmps
xchg
popa
stc
mov
(bad)
dec
push
xchg
in
cmp
dec
ins
mov
stc
dec
xchg
and
pop
push
adc
mov
fs
mov
dec
cmp
js
fistp
sbb
retf
fldl2e
loop
or
int3
add
(bad)
jno
adc
mov
es
addr16
and
test
adc
mov
shr
(bad)
push
fld
jl
dec
xchg
mov
cmp
ds
lds
mov
fs
mov
inc
xchg
mov
xchg
mov
js
dec
mov
imul
push
or
(bad)
(bad)
jbe
mov
dec
pop
add
pop
mov
das
or
(bad)
xchg
mov
loopne
push
sbb
ins
test
sub
dec
inc
sbb
in
adc
pop
(bad)
fimul
lods
js
imul
lock
xor
fucom
dec
jnp
scas
call
or
xchg
pop
or
inc
jb
sub
mov
jae
jns
stos
pop
aaa
retf
adc
fwait
out
inc
mov
and
fisttp
aas
pop
jmp
(bad)
add
add
sub
int3
pop
push
ins
push
sub
push
and
int3
aad
loopne
jmp
pop
cdq
jmp
ror
aaa
mov
mov
ds
dec
or
sbb
stos
mov
sbb
pop
sahf
mov
push
arpl
adc
xchg
inc
jmp
push
gs
stc
add
neg
adc
shl
pop
mov
or
jmp
push
mov
js
iret
call
adc
push
in
les
mov
fcmovbe
lods
xor
mov
daa
xor
shr
jecxz
ret
or
int
ret
fwait
xchg
pop
push
loope
ins
sub
cmp
aam
pop
call
xor
fdivrp
mov
pop
push
sbb
jmp
(bad)
push
(bad)
(bad)
sub
enter
fidivr
sbb
test
xchg
jo
out
aam
inc
cli
in
jae
dec
add
jno
push
adc
xor
or
push
cmp
pop
or
fld
shl
push
sub
cmp
mov
fs
sbb
test
mov
mov
es
push
push
aad
push
int3
jmp
fucom
mov
retf
sub
jns
mov
or
imul
ins
lahf
jmp
dec
pop
jp
pushf
mov
in
xor
sub
inc
imul
mov
mov
cmp
jnp
jg
and
xchg
or
stc
cmp
arpl
div
(bad)
arpl
movs
sub
xor
pop
dec
pop
xor
stos
adc
dec
mov
and
movs
cmp
and
xor
mov
neg
mov
imul
bound
inc
push
lea
jns
in
xlat
idiv
call
push
shl
add
les
jo
aas
mov
xor
fstp
sub
and
mov
mov
sbb
mov
xchg
jbe
call
call
idiv
test
loopne
push
mov
cmp
sbb
push
mov
int
or
mov
fidivr
sbb
out
mov
fs
and
mov
ss
inc
cmp
out
and
cmp
in
add
inc
fistp
cmp
lahf
arpl
push
xchg
jmp
cld
xchg
xlat
les
inc
adc
jg
and
in
fcmovnbe
cmps
mov
pop
sub
pop
adc
xchg
ds
daa
add
ret
ror
sti
jge
fsubr
(bad)
int
mov
jle
or
push
cmp
jnp
ret
jo
rcr
out
cmp
rcl
in
les
aaa
mov
int
adc
lds
push
nop
mov
xor
dec
or
xchg
sahf
dec
daa
not
(bad)
add
mov
test
scas
pop
outs
imul
jae
sub
lds
sbb
dec
retf
enter
xchg
jo
xor
adc
push
sub
inc
mov
adc
pop
xchg
fucomi
jo
jb
jae
push
adc
rol
mov
(bad)
sub
and
ret
mov
int3
out
mov
jo
inc
add
cmp
xor
jbe
std
cmp
ds
inc
(bad)
popa
int
adc
les
pusha
cmp
mov
imul
cmp
int
es
sahf
push
fcomp
cmps
repnz
imul
cmp
stos
lock
jge
loope
mov
les
movs
xchg
jo
sub
out
(bad)
jecxz
push
cmps
ja
lock
sub
bound
inc
push
sbb
jle
ss
(bad)
(bad)
loope
pusha
mov
popf
cli
lahf
pop
je
aas
test
test
jb
sbb
aas
scas
aad
shr
and
jae
mov
adc
gs
int
push
jl
es
lock
jle
push
add
or
adc
mov
icebp
add
inc
sub
int3
mov
inc
or
bound
jnp
add
lahf
cmp
or
cmp
movs
scas
pushf
sub
mov
jle
stos
xor
and
scas
ret
push
dec
jecxz
not
retf
sti
push
fsub
or
pop
ja
adc
pop
test
arpl
adc
pop
sbb
cmps
jae
and
sbb
les
push
mov
in
dec
pop
cmps
sub
mov
imul
(bad)
imul
add
dec
sbb
jecxz
xchg
mov
mov
xor
sar
aam
(bad)
call
call
dec
sbb
cmps
aam
mov
cli
stos
pusha
jb
icebp
jg
jecxz
and
daa
xchg
cmp
mov
leave
fdiv
push
clc
mov
lds
cmp
add
cmp
loope
and
mov
xchg
inc
jmp
imul
cmp
call
pop
js
sbb
pop
pop
jnp
xchg
test
inc
fsubr
mov
add
ret
lods
and
pop
cdq
mov
stc
daa
scas
inc
retf
dec
hlt
xchg
add
mov
cmp
(bad)
(bad)
cmp
jnp
mov
rol
xchg
popf
aaa
xchg
out
xchg
repz
mov
jmp
shl
push
pop
jno
adc
leave
push
jmp
rol
sahf
push
pusha
fs
pop
leave
push
adc
int
jmp
cdq
mov
fcomp
push
lods
outs
les
inc
iret
and
gs
popf
cdq
ret
ja
or
push
loopne
movs
cmps
mov
iret
xchg
movntq
out
xor
je
pop
push
dec
jb
push
fdivr
loope
dec
pop
movs
jnp
and
ficomp
push
adc
jbe
lods
inc
rcl
outs
imul
pop
xchg
movs
and
cmp
adc
addr16
mov
add
sub
mov
jno
cmp
rol
push
push
mov
xor
mov
es
idiv
xchg
add
xchg
add
inc
ja
test
test
dec
ins
sbb
fstp
cmp
and
mov
or
in
inc
cli
(bad)
in
or
add
ror
shl
jmp
push
mov
sub
mov
imul
push
mov
in
fs
dec
jae
pop
jg
sub
or
jmp
call
inc
and
lea
outs
cmp
mov
out
retf
push
and
mov
in
xchg
jnp
inc
outs
stos
dec
inc
jb
jecxz
data16
test
inc
nop
cld
or
xchg
lea
stos
sub
or
(bad)
shr
or
test
push
jb
xor
in
cmp
jmp
push
pop
push
fwait
iret
leave
jno
sub
push
jmp
imul
sub
(bad)
push
push
xchg
pop
in
in
add
and
nop
xor
push
shl
not
xor
jmp
cmp
and
jge
dec
sub
pmaxsw
invd
aam
dec
pop
fs
or
(bad)
push
sbb
lods
inc
retf
inc
or
sub
mov
mov
ja
pop
ins
cmp
add
sar
popf
xchg
je
les
or
test
or
push
sbb
or
jmp
in
mov
inc
adc
adc
sub
fsubr
fcomp
adc
sbb
inc
movs
mov
mov
popf
fmul
and
or
xchg
in
(bad)
sbb
shl
pop
repnz
mov
lds
push
jmp
cdq
icebp
sbb
or
push
cmps
sub
leave
inc
retf
mov
add
fisttp
fdivr
sub
push
aas
out
jmp
sub
aaa
lods
jae
adc
inc
mov
sub
aas
mov
mov
leave
jg
adc
je
sar
mov
inc
hlt
cli
dec
pop
ds
or
sub
dec
fstp
xlat
xchg
xlat
dec
outs
jb
mov
add
xchg
cmps
loopne
ds
ds
out
cmps
lods
xor
loope
mov
andps
out
push
sbb
sub
cmp
cmp
aad
fcomip
or
mov
pop
pusha
sbb
and
aaa
lds
arpl
loopne
inc
inc
ret
push
mov
dec
adc
hlt
call
lods
mov
lods
or
enter
out
jno
sbb
push
mov
jle
and
pop
add
dec
push
sbb
movs
leave
jne
mov
adc
xchg
sub
jbe
adc
jne
div
push
xchg
cmc
push
xlat
mul
or
jo
(bad)
aam
adc
mov
mov
adc
aas
fstp
std
pop
fs
mov
pop
cmps
sbb
cli
xor
pop
dec
(bad)
sti
in
lods
or
mov
mov
jmp
inc
jae
sahf
cmps
int3
cmc
cmp
sub
sub
pop
jl
push
add
add
and
pop
mov
inc
jge
jl
sar
pop
adc
add
push
adc
arpl
pop
mov
push
mov
pop
xor
jbe
std
stc
jmp
and
adc
add
mov
pop
ror
mov
addr16
and
push
add
ja
add
(bad)
dec
xor
push
nop
push
xchg
xchg
fild
jns
cmp
retf
adc
push
and
xchg
inc
and
lods
das
mov
inc
and
sub
call
cld
xchg
fcmovu
icebp
jb
ja
cli
jmp
dec
(bad)
fcom
mov
imul
mov
iret
and
cli
push
mov
mov
sahf
or
cs
inc
aam
ret
imul
xchg
out
mov
mov
arpl
out
or
mulps
cmp
pop
(bad)
or
pusha
int3
xchg
xchg
imul
sbb
push
xchg
mov
dec
jge
mov
aaa
mov
fst
jns
in
jl
leave
sub
shr
pop
xchg
push
mov
retf
dec
gs
inc
in
ins
addr16
and
fwait
mov
lea
lock
mov
outs
inc
sbb
jp
cs
in
jecxz
sbb
and
push
xchg
pushf
push
mov
rcr
mov
nop
cmp
repz
addr16
out
xor
pop
xor
lods
icebp
in
inc
out
popf
outs
inc
sbb
jg
pop
fdiv
test
int
fist
out
inc
stos
mov
fisub
pop
mov
push
stos
pop
sub
in
cmp
jno
adc
test
xor
test
jmp
arpl
lds
sub
xchg
out
es
xchg
cmp
adc
retf
mov
dec
and
rcr
and
jg
popf
out
in
ins
fld
dec
out
je
es
(bad)
push
push
and
lds
frstor
lods
add
movs
mov
jbe
mov
imul
ins
cmp
ret
jmp
ins
repz
xlat
mov
inc
ss
xlat
lahf
and
(bad)
jl
ror
stc
popa
arpl
mov
inc
xchg
xor
and
mov
iret
push
mov
sub
outs
jno
fwait
retf
aad
pop
out
aaa
test
lods
add
dec
std
cmp
fdivr
mov
ds
pop
xchg
int
pop
xor
(bad)
(bad)
push
xor
je
sbb
sub
cmp
mov
inc
cmp
inc
into
retf
xchg
mov
add
or
or
xchg
pop
and
and
imul
(bad)
loop
mov
cmp
out
pop
dec
mov
pop
into
(bad)
mov
sti
(bad)
or
adc
inc
mov
mov
xor
and
pop
pop
jne
out
sahf
in
pop
or
loope
fsubrp
call
idiv
xchg
iret
mov
push
cmp
add
sub
sub
dec
dec
iret
pop
and
test
inc
pop
jp
popa
mov
ja
xor
fucomip
mov
xor
or
scas
xor
sub
(bad)
ret
ds
inc
pop
stc
add
push
scas
mov
mov
dec
dec
es
cmp
sub
sub
sub
icebp
rcr
push
xor
retf
cli
rol
or
leave
jnp
stos
scas
cmp
rcr
dec
cmps
jbe
test
icebp
jb
movs
and
iret
xor
mov
les
dec
out
adc
mov
cmp
jle
scas
and
clc
(bad)
idiv
nop
sub
sub
pop
jecxz
add
inc
lock
fisubr
sbb
push
aam
int3
mov
sbb
and
and
rcl
std
fld
cdq
nop
aad
mov
jae
dec
ja
mov
push
into
or
cmp
or
fsubr
scas
(bad)
bound
sbb
sbb
icebp
xchg
adc
sbb
std
push
scas
cmc
mov
pop
ds
push
mov
add
arpl
clc
dec
aad
adc
and
xor
mov
dec
add
pmulhuw
adc
jle
adc
cmp
dec
daa
ror
mov
cdq
inc
adc
sahf
jg
sub
add
sub
add
dec
cmp
cmp
cmp
xchg
xchg
dec
push
jnp
sub
add
or
fs
jbe
xlat
jge
mov
push
loope
nop
inc
adc
inc
popf
and
add
lea
inc
xchg
jae
out
push
out
sub
ds
int
hlt
sbb
xor
out
push
dec
pop
mov
pop
repz
cmps
xchg
xchg
dec
jno
(bad)
pushf
jo
jnp
out
addr16
test
in
pop
jecxz
mov
cmp
and
jmp
int3
sbb
sub
jg
adc
in
and
sahf
push
lock
ds
ja
rcl
xchg
dec
scas
and
sub
(bad)
fdivr
jmp
cmc
pushf
lods
shl
rcl
imul
pop
xchg
mov
jmp
cmps
pop
fs
jmp
mov
cli
mov
inc
inc
dec
or
pop
and
loopne
dec
cmp
jecxz
and
mov
cmp
cmps
xchg
das
test
inc
shl
out
test
cmp
addr16
pcmpeqb
enter
cmp
xchg
jno
mov
gs
xlat
not
outs
je
mov
add
adc
lahf
cs
lahf
mov
pop
ss
scas
mov
(bad)
mov
inc
aad
xchg
jbe
sbb
sahf
je
mov
sub
out
in
mov
pop
sbb
or
xor
push
add
mov
add
ds
push
dec
jl
mov
in
adc
fcom
sar
pop
inc
dec
cmp
jl
test
lds
repnz
cmp
ins
int
sbb
jo
retf
sub
mov
xor
outs
sbb
(bad)
outs
xor
es
cmp
xor
jbe
xchg
dec
lds
imul
jo
jmp
fisttp
mov
inc
add
int3
fcmove
mov
dec
sbb
and
test
dec
add
ja
push
pop
int3
and
int
mov
jmp
xlat
mov
cmp
ja
add
mov
cmp
in
mov
fstp
test
jae
lahf
pop
push
adc
add
push
pusha
imul
int
jnp
aas
inc
rcr
cmp
leave
inc
dec
or
inc
daa
sbb
adc
mov
or
in
jbe
cwde
mov
inc
push
pop
aam
jecxz
fsub
test
mov
mov
xchg
sbb
push
pop
retf
xor
push
adc
sub
xlat
xchg
jb
stc
and
sub
stos
aas
xchg
neg
jle
mov
(bad)
mov
adc
jns
repz
not
mov
cdq
xor
xchg
jmp
popa
test
fst
stos
adc
sti
pushf
shr
js
mov
xchg
(bad)
pop
lea
mov
dec
into
push
jle
les
sub
inc
imul
retf
hlt
add
in
xchg
xchg
(bad)
xchg
add
fld
ss
stos
div
mov
inc
push
lock
dec
mov
sahf
add
add
pop
(bad)
mov
rcl
cmp
add
xlat
int
lods
xchg
adc
in
in
aam
adc
mov
mov
or
xor
mov
lds
shl
jmp
clc
jne
js
add
rcl
test
sbb
fisttp
test
sar
mov
push
jae
lods
push
lods
add
out
shl
push
test
ret
push
inc
sub
mov
cmp
in
fwait
add
add
push
scas
or
jo
dec
dec
in
loop
nop
sbb
cld
jp
cmps
xchg
jmp
mov
sub
call
fwait
push
jns
fidivr
jbe
push
adc
sbb
add
and
cmp
and
fiadd
call
dec
push
sbb
xor
sti
xchg
push
outs
mov
sar
repz
xor
or
gs
dec
sub
je
pop
jmp
cmovnp
mul
daa
push
push
sbb
aaa
and
mov
jbe
xor
jg
or
test
lods
stos
xor
jmp
adc
imul
shl
scas
jp
mov
sub
gs
jge
mov
inc
pop
clc
cmp
mov
xchg
push
popf
mov
fcomp
inc
push
les
cdq
std
push
mov
add
or
pop
push
pop
out
or
pmaxsw
aad
out
hlt
movq
pusha
inc
add
cld
iret
(bad)
idiv
sbb
mov
push
and
jno
jmp
push
jae
arpl
mov
add
xor
aam
ins
jne
sub
mov
mov
push
mov
jmp
out
cmp
push
xchg
mov
jmp
enter
int3
cli
xor
aad
into
out
lock
push
out
retf
out
mov
push
cwde
adc
sbb
test
scas
add
push
and
mov
retf
jmp
ret
(bad)
sahf
mov
rol
aaa
in
and
push
and
xor
or
gs
mov
xchg
pop
sbb
fwait
test
mov
mov
inc
pop
and
xchg
add
mov
in
loope
xor
dec
pop
pushf
retf
adc
mul
loopne
aam
pop
into
test
sbb
push
cmc
fdivr
loopne
outs
popw
aam
lds
jbe
fstp
call
sub
xor
bound
fucomip
sub
iret
addr16
xchg
mul
aam
add
xor
fadd
push
push
inc
cmc
xor
xchg
cmp
sbb
pop
loop
jno
xor
xor
xchg
test
and
cmps
jg
fbstp
cmps
not
and
jnp
mov
dec
movs
sbb
mov
add
sti
xor
sbb
add
sbb
stos
pop
push
in
call
mov
or
retf
jno
les
inc
test
es
inc
push
in
sar
jecxz
pusha
data16
or
inc
or
in
icebp
cdq
mov
stc
aaa
sub
daa
add
push
inc
lock
cmp
push
pop
xor
jmp
out
mov
mul
sub
adc
mov
cmp
and
ja
pop
dec
aad
xchg
stos
mov
clc
mov
inc
or
idiv
xchg
lock
push
and
enter
imul
dec
jecxz
and
loop
cmc
mov
stos
fnstcw
xchg
mov
(bad)
test
cdq
pop
mov
add
xlat
frstor
sahf
loope
retw
cmp
mov
arpl
addr16
jbe
sub
lea
(bad)
mov
inc
mov
cmps
xor
das
repnz
sar
cmc
dec
lds
jb
push
sub
dec
cmp
cs
sub
pop
ja
push
mov
data16
adc
add
mov
mov
js
outs
leave
cmc
loope
lahf
mov
jae
aad
addr16
dec
rcl
fistp
(bad)
ss
xor
mov
pop
scas
in
jmp
cdq
addr16
fcom
sbb
fnstcw
arpl
sub
test
xor
sub
les
mov
rcr
outs
sub
in
sbb
adc
imul
mov
fdivr
pop
pop
lock
dec
outs
mov
pop
test
cmp
clc
mov
ret
clc
loop
pop
cmp
data16
push
xor
repnz
fisttp
cli
push
retf
add
push
push
(bad)
aam
xor
inc
mov
xchg
jb
stc
jp
ss
xchg
test
ja
jmp
cmp
sub
dec
fisttp
sub
jmp
(bad)
fs
rcl
ss
dec
cmp
cld
ds
pushf
pop
xchg
pop
out
mov
fcomi
mov
jmp
jo
sub
into
fst
in
lahf
inc
cmp
push
xchg
das
inc
sub
rol
and
jne
jno
push
arpl
movups
jle
xchg
xchg
std
loopne
ins
jmp
cmp
mov
or
add
stos
outs
jmp
add
mov
lods
sbb
ret
add
adc
jnp
icebp
arpl
shr
loope
cmps
mov
scas
sub
dec
mov
mov
mov
mov
ror
and
pop
sahf
xchg
out
call
nop
into
fldenv
mov
adc
cmc
push
in
ss
test
xchg
in
jo
(bad)
cmp
fsub
xor
call
leave
loope
scas
jno
add
out
inc
repz
xor
push
jae
mov
xor
push
(bad)
mul
fwait
jnp
imul
retf
adc
aas
dec
popw
lahf
jmp
je
cmp
dec
rcl
inc
dec
sti
mov
(bad)
dec
cwde
retf
pushf
mov
cmp
sbb
or
ret
or
lea
xchg
das
sub
xchg
pushf
mul
icebp
or
stc
push
ins
xchg
std
jg
test
xchg
out
imul
push
je
xchg
cmc
(bad)
adc
fdivr
adc
or
test
stos
mov
push
cmp
out
lock
cmp
imul
mov
lods
xor
jge
jl
test
(bad)
jmp
mov
loope
push
mov
sbb
fistp
ret
inc
jo
or
cmp
stos
jne
add
or
call
jg
loopne
cli
mov
sbb
mov
mov
and
les
pop
dec
ja
or
ja
pop
mov
rcr
imul
pop
cs
or
outs
cmp
sub
mov
mov
(bad)
in
cmp
cmps
mov
mov
stos
push
mov
cmp
sar
mov
mov
pop
add
sbb
push
(bad)
jno
test
jne
dec
xchg
add
push
push
push
adc
pop
sub
mov
xor
fimul
xchg
inc
mov
data16
out
stc
sub
inc
test
push
jbe
imul
and
test
xchg
jbe
hlt
or
ja
add
sbb
push
sbb
mov
jno
int
push
cmp
xchg
sbb
xchg
inc
mov
stc
movs
jne
test
ss
cmps
cmp
sub
test
jb
xchg
test
int
push
mov
mov
fucomip
scas
fadd
push
mov
cmp
lods
pop
push
cwde
sbb
pop
push
cmc
addr16
pusha
leave
add
pop
inc
sub
loope
scas
pop
sub
inc
mov
push
scas
sub
adc
ins
div
lods
data16
add
cmp
nop
pop
mov
pop
cli
jle
stos
cmps
mov
(bad)
xor
push
fld
jle
pop
push
mov
jl
adc
fadd
ja
data16
or
fmul
add
popf
pop
xchg
push
xchg
cli
(bad)
mov
and
mov
jmp
in
add
das
in
or
cmp
pushf
sbb
dec
out
push
jge
add
cli
jbe
push
loopne
push
fistp
inc
xchg
lods
cmc
mov
out
lods
ffree
xor
mul
jmp
js
or
xchg
mov
jbe
cmp
and
test
lods
sbb
push
push
dec
test
addr16
leave
call
mov
xor
repnz
call
or
pop
xor
jp
jl
jmp
int3
sub
popa
sub
cmp
lods
pop
xor
in
ficomp
or
sub
ins
mov
jnp
and
stc
push
cmps
mov
mov
lahf
mov
or
fs
mov
and
jg
adc
or
xchg
out
lds
dec
hlt
lea
push
cmp
mov
(bad)
or
les
push
push
pop
sbb
fnstenv
jmp
iret
jle
pop
fcompp
mov
adc
sub
inc
jns
xchg
and
scas
sbb
mov
xchg
xchg
aas
rcl
and
xchg
icebp
cmc
rcr
mov
sti
jmp
jnp
jnp
dec
lods
fadd
pop
mov
jecxz
outs
int3
pushf
add
xchg
loop
fiadd
mov
adc
and
and
out
or
gs
jge
mov
mov
imul
add
mov
sub
adc
jg
(bad)
popa
stc
mov
sbb
mov
adc
js
stos
push
sub
cmp
mov
and
aam
sub
fsub
out
sti
mov
adc
and
mov
std
dec
inc
sar
int
frstor
mov
xchg
xor
int3
mov
icebp
mul
repz
daa
sbb
inc
pusha
out
fist
mov
sbb
jnp
ja
adc
pop
xlat
inc
fisttp
mov
push
add
add
int3
sahf
sub
lods
test
fild
imul
leave
ja
add
mov
xor
mov
mov
inc
push
mov
test
jg
mov
(bad)
jp
retf
pop
(bad)
inc
lock
push
aas
inc
adc
xchg
daa
add
das
ins
ja
cmp
mov
mov
jno
add
and
(bad)
xor
mov
rcr
mov
mov
lds
xchg
push
sbb
and
or
retf
jns
jae
aam
mov
imul
das
mov
dec
imul
frstor
mov
mov
sub
add
jle
push
push
inc
mov
cld
int3
adc
in
inc
mov
xchg
sbb
adc
add
cmps
lock
cmp
jl
ss
mov
mov
cmp
(bad)
xor
add
ds
aas
xchg
mov
inc
fucomp
push
clc
iret
jmp
ins
pop
retf
dec
cmp
(bad)
test
(bad)
cmp
imul
cld
jb
inc
ds
pop
sub
push
(bad)
cli
inc
jl
les
push
sub
adc
or
mov
stc
mov
mov
dec
out
sub
sbb
pop
push
in
enter
mov
lock
scas
push
jecxz
imul
retf
hlt
push
mov
lods
aam
mov
add
xchg
push
mov
inc
xor
in
dec
add
fiadd
(bad)
outs
push
mov
in
lods
sub
sti
dec
scas
std
adc
jne
or
add
icebp
dec
mov
jg
ror
push
pop
movs
push
pushf
xlat
jns
jl
outs
jno
rcr
std
mov
jae
add
fdiv
sbb
(bad)
retf
punpckldq
xchg
xor
and
xchg
sub
xor
cmps
or
mov
call
loop
mov
into
and
mov
es
fcomp
jns
pop
ror
js
mov
sar
mov
fwait
jp
stos
stc
icebp
xor
cmps
fbld
das
push
mov
xchg
ficomp
push
cmp
(bad)
stos
repz
cdq
clc
fbstp
repnz
or
arpl
add
and
add
loop
cmc
das
jns
clc
stc
and
dec
loopne
mov
ins
in
push
enter
test
imul
sbb
call
ja
xor
jle
sub
(bad)
test
jmp
push
or
jne
mov
iret
add
mov
mov
(bad)
jg
(bad)
push
inc
and
or
(bad)
cmps
js
add
stc
leave
pop
xlat
or
mov
pushf
nop
into
mov
mov
cmp
jnp
xor
fldenv
loopne
stos
xor
add
and
cmc
xacquire
out
hlt
arpl
and
test
mov
shl
lock
mov
xchg
push
xor
call
or
cmps
cli
(bad)
pop
pop
inc
adc
repz
and
cld
arpl
or
pop
sub
xchg
or
fmul
ja
in
push
aad
nop
jl
ja
push
lock
je
push
dec
fistp
xor
cmp
push
in
and
push
xor
cmovle
adc
dec
pop
pusha
and
push
inc
fs
(bad)
cli
sub
mov
pop
push
mov
aaa
pop
mov
or
rcr
or
add
int3
and
dec
lds
icebp
adc
call
cmp
fwait
xchg
ret
fld
test
aam
xor
stos
mov
sub
adc
lds
sbb
xchg
inc
mov
pop
jne
imul
out
xchg
mov
mov
fsqrt
shl
adc
out
cwde
test
lock
and
(bad)
and
add
pop
ja
xor
jae
cmp
ja
or
mov
retf
popf
sahf
dec
aaa
addr16
jbe
fidiv
mov
out
and
call
dec
call
xchg
adc
in
aas
pop
jno
jmp
sbb
push
sbb
push
xchg
paddd
add
push
test
repz
jecxz
ins
sub
in
xor
sbb
pop
(bad)
ja
mov
add
sub
cdq
cmc
popa
xor
push
inc
movs
aad
pusha
xor
add
cmp
pushf
and
fld
xchg
xchg
fwait
inc
xor
sbb
jge
movs
mov
add
mov
push
ret
jmp
sbb
fadd
adc
fidivr
aam
push
sub
loopne
jno
ins
mov
in
or
mov
or
into
pop
add
shl
xor
adc
and
fistp
(bad)
jecxz
jmp
call
push
sbb
push
es
dec
xchg
int3
(bad)
cmp
adc
cdq
and
push
call
(bad)
(bad)
(bad)
xchg
sub
inc
and
pop
fldenv
ror
and
and
aas
cmp
jo
xchg
jl
add
inc
xchg
jbe
jmp
jmp
push
(bad)
jl
ss
xlat
arpl
mov
out
add
or
mov
push
inc
adc
inc
or
mov
inc
rcl
xchg
outs
cmc
aad
pop
mov
rcr
loop
(bad)
hlt
neg
jmp
mov
imul
pop
pushf
mov
leave
cmp
inc
adc
lds
(bad)
popa
out
mov
push
jo
mov
dec
or
imul
sub
in
cmp
shr
add
push
fcomp
dec
in
add
pop
mov
ret
mov
leave
jae
popa
pop
adc
inc
hlt
sbb
aam
das
imul
(bad)
iret
loopne
scas
test
int
xchg
das
push
les
push
aad
mov
dec
ins
les
pop
mov
test
loope
shr
jp
cli
pushf
out
sub
mov
xchg
fisttp
movlps
out
jb
or
cmp
mov
jecxz
repnz
test
inc
add
push
xchg
mov
pop
mov
push
sbb
sub
arpl
cmc
js
outs
pop
test
and
shl
les
sub
cmp
out
mov
or
pushf
dec
sbb
lahf
mov
dec
inc
lea
in
(bad)
inc
outs
arpl
jnp
sti
pop
mov
mov
mov
into
push
and
stc
div
sbb
pop
add
mov
cli
and
(bad)
xor
pop
jecxz
cmp
sub
ret
pop
pop
push
add
(bad)
mov
sub
add
cmps
mov
push
xchg
dec
xor
pop
int3
cld
sub
loope
jo
jne
les
call
lods
pop
(bad)
idiv
pop
sub
dec
cs
aas
ds
and
popf
shl
xor
lods
jbe
shl
xor
inc
mov
(bad)
ret
dec
xchg
test
dec
push
mov
shl
push
add
outs
xchg
push
ss
iret
xchg
out
inc
adc
mov
out
pop
xchg
sub
sub
inc
inc
mov
iret
cmp
fld
adc
add
adc
add
cmps
bound
xchg
imul
sahf
lods
loope
nop
aas
ja
bound
mov
rcl
jne
enter
xchg
pop
je
int3
scas
add
add
pop
das
push
jb
daa
test
fst
mov
cmp
fadd
add
jo
and
or
mov
aas
aaa
pop
sti
sbb
sub
xor
aaa
inc
fnop
int3
mov
pop
in
mov
cmps
xchg
and
mov
lods
push
or
jmp
xchg
icebp
sar
or
addr16
jne
adc
fmul
sub
xor
inc
mov
loop
lods
pushf
out
rcr
bound
lods
(bad)
(bad)
gs
lock
inc
enter
fcom
test
cmp
add
sti
adc
or
or
hlt
cmc
(bad)
rcr
in
mov
retf
fsub
pop
loope
cmps
pop
loop
sbb
jle
xchg
call
inc
aam
scas
jb
xor
xchg
pusha
pop
dec
ret
imul
jb
fidivr
dec
mov
and
out
fcmovne
sub
lock
mov
add
xor
pop
mov
inc
out
test
pop
jnp
xchg
cmp
aas
xor
jg
test
inc
dec
into
ret
aaa
int
into
dec
inc
(bad)
stos
loop
ret
pop
xor
sub
lds
adc
mov
outs
les
aaa
sub
inc
lock
inc
sub
and
les
cwde
cmc
jg
jl
out
into
jl
mov
inc
lods
arpl
xchg
dec
cld
dec
and
ror
ficom
aaa
imul
das
jle
ins
xchg
xor
lahf
mov
fadd
ins
rol
sub
test
push
pop
mov
jno
mov
jl
cmp
add
pop
cmc
pop
sbb
in
test
pop
mov
sbb
jg
psubq
ror
dec
sahf
mov
or
out
xchg
ds
inc
ss
cmp
out
shl
inc
mov
sub
and
or
push
mov
jle
pop
jae
push
adc
jp
mov
in
mov
pusha
xchg
cmp
xor
sub
mov
fisub
pop
gs
inc
pop
adc
loop
jg
imul
in
inc
inc
aaa
inc
cmp
js
test
and
cmc
sub
outs
ret
sub
or
cdq
push
in
xchg
fs
retf
and
mov
xchg
push
mov
jo
mov
dec
jne
loopne
mov
test
imul
xor
aas
outs
test
mov
fwait
sbb
xor
or
(bad)
sahf
cld
in
addr16
adc
in
jb
in
jno
xlat
cmps
sub
retf
ins
mul
lahf
lods
stc
stos
inc
jnp
pop
pop
mov
push
dec
sar
sar
cmp
loopne
pop
mov
cmp
cmp
pop
jge
xor
mov
inc
out
js
ja
dec
adc
or
mov
cmps
adc
cwde
sar
ret
and
das
fs
add
frstor
push
bnd
icebp
or
movs
xchg
inc
jmp
pop
rol
test
pop
add
lods
push
mov
cdq
dec
daa
imul
jno
arpl
in
jp
mov
hlt
push
ja
inc
sbb
repnz
inc
mov
xchg
retf
fistp
in
fcmovb
int
inc
jge
scas
ret
in
sbb
inc
(bad)
mov
jns
mov
or
cmp
jge
and
lahf
stos
mov
aad
cmp
call
xchg
inc
inc
test
jb
ins
dec
ror
push
push
pop
aaa
fild
push
and
push
cmp
movs
jmp
sbb
(bad)
nop
jmp
(bad)
pop
test
cs
lds
mov
ret
and
mov
pop
ds
push
cmp
jb
enter
or
cld
mov
push
jmp
ja
mov
sub
push
and
lock
sahf
inc
movs
mov
mov
and
rcl
adc
cmp
div
sbb
out
xor
jo
fwait
xchg
push
jg
leave
mov
mov
out
inc
jnp
arpl
adc
mov
mov
mov
sar
jnp
fwait
test
popf
fwait
jecxz
sub
xor
daa
xchg
mov
adc
arpl
cmp
imul
pop
leave
xchg
dec
(bad)
in
imul
test
sbb
stos
ins
out
popf
dec
xchg
cmp
xchg
cdq
sar
mov
xor
stc
jns
or
fld
sub
cmp
into
in
mov
retf
ficomp
inc
pushf
pop
cmps
call
inc
(bad)
xor
adc
cld
fldlg2
adc
cmp
movs
test
test
loope
test
pop
or
jecxz
out
mov
jno
push
call
mov
ret
(bad)
in
add
bound
rol
push
hlt
push
in
sub
mov
out
and
enter
push
push
jne
adc
aad
ins
pop
cli
add
jge
les
and
shl
ja
cld
repnz
sub
sbb
mov
shl
lahf
imul
xchg
sbb
les
fldenv
dec
lods
mov
test
cmp
xor
dec
xchg
pop
(bad)
movs
stos
retf
pop
mov
dec
sbb
clc
les
xor
out
or
adc
fistp
(bad)
inc
inc
inc
(bad)
sub
movs
inc
stos
cmp
out
pop
cmps
adc
addr16
dec
lods
dec
mov
sub
and
ucomiss
movs
fistp
stos
clc
xor
rcl
cmpxchg
sar
cld
lods
jno
pop
jae
fcomip
jae
inc
mov
cmp
mov
push
jo
rol
mov
mov
lahf
neg
pop
dec
or
adc
mov
push
push
test
jne
mov
xor
inc
adc
cld
xchg
sub
add
ror
jno
stc
fnstcw
out
mov
gs
sub
stos
add
in
mov
sub
aas
sbb
(bad)
ret
shr
leave
pop
cdq
cld
jbe
push
sub
mov
loopne
xchg
(bad)
jno
adc
mov
mov
push
xor
xchg
cli
or
xor
stc
dec
in
aad
xchg
stos
sbb
in
mov
cdq
pop
test
mov
sti
push
fistp
fdiv
sbb
pop
nop
sub
or
push
mov
add
cld
dec
pop
xchg
sub
add
ret
ins
ds
pop
js
jne
mov
mov
mov
add
dec
add
jb
xchg
ror
push
mov
daa
mov
test
and
hlt
pop
mov
aas
xlat
daa
and
mov
add
push
xor
sub
jnp
ins
jnp
sub
mov
push
fwait
push
inc
stos
(bad)
mov
mov
in
stc
into
stos
xchg
or
push
dec
cmp
jne
pushf
or
test
push
lock
mov
cmp
cwde
mov
pop
pushf
mov
repz
pop
aam
pop
mov
cwde
mov
mov
stc
rcr
jl
mov
jl
mov
mov
out
adc
push
(bad)
inc
hlt
jmp
ds
loope
jmp
pushf
pop
or
cmc
pop
xchg
inc
ja
std
jnp
adc
mov
xchg
into
into
fdivr
jl
or
icebp
ins
dec
movs
dec
daa
add
ins
xor
sbb
ror
xlat
adc
sub
popa
jmp
sub
cmc
push
cwde
scas
out
jmp
(bad)
cmc
inc
imul
cmps
int3
call
inc
push
and
and
or
cs
pop
sub
mov
pusha
lahf
adc
pop
and
lahf
xchg
movs
cmp
dec
pop
or
xchg
sbb
cmc
repz
or
jae
xchg
or
leave
xlat
cmp
mov
adc
sbb
daa
outs
pop
lods
push
(bad)
test
shl
daa
sahf
(bad)
sub
xor
(bad)
xor
int3
ud0
imul
daa
add
xlat
push
jmp
in
inc
mov
xor
clc
xor
inc
ror
push
xor
push
fwait
sub
aad
sbb
in
jp
shl
mov
xor
or
dec
adc
dec
xor
into
dec
test
icebp
cmp
fnsave
and
or
and
in
popf
add
pushf
into
pushf
popa
sbb
mov
inc
dec
test
cld
adc
(bad)
popf
cmp
ret
fsub
int
clc
pushf
push
cmp
pop
mov
loope
push
adc
and
sbb
(bad)
jbe
mov
bound
mov
jp
adc
jo
das
loop
inc
js
sbb
fst
push
outs
mov
fidiv
xchg
outs
mov
das
sub
xchg
pop
mov
imul
dec
lods
popa
ds
xchg
popa
mov
cli
dec
(bad)
xor
in
addr16
call
dec
and
mov
popa
test
stos
dec
pop
cmp
(bad)
retf
push
ins
cmp
(bad)
pop
mov
mov
cs
mov
add
pop
loop
fmulp
shl
push
(bad)
jmp
rcl
jg
js
(bad)
jecxz
rol
aas
pop
mov
or
pop
shl
popa
jns
dec
inc
out
mov
add
test
fmul
shl
mov
mov
inc
dec
cmp
or
cmp
xchg
sub
(bad)
cmp
jno
jp
movs
sub
push
inc
in
sub
xchg
pusha
enter
inc
fild
inc
arpl
jne
retf
xor
mov
pop
cmp
call
xor
and
push
call
rcr
dec
mov
sbb
dec
or
inc
imul
push
cmp
cmps
mov
adc
mov
mov
inc
out
push
jo
dec
mov
add
xchg
and
mov
push
pop
xchg
cmp
ror
mov
inc
pop
inc
test
mov
push
or
adc
xlat
mov
inc
dec
sbb
js
stc
in
jp
push
in
xor
jmp
iret
cwde
adc
clc
xor
outs
mov
cdq
pop
ret
sbb
das
dec
mov
xor
pop
in
(bad)
xchg
(bad)
cmp
jp
adc
jb
jmp
bound
int
xor
ficomp
and
pop
jle
xor
daa
lea
cmp
cmps
xchg
ficom
fld
int
dec
xchg
lea
xchg
sbb
inc
mul
push
add
mov
stos
ror
(bad)
mov
xor
outs
mov
inc
add
loopne
and
jne
push
aas
push
shr
sahf
pop
inc
stc
and
jno
dec
test
or
test
cmps
add
mov
push
mov
sbb
dec
call
jmp
arpl
in
lds
inc
push
fcomp
inc
add
mov
scas
loope
fs
(bad)
push
icebp
pop
pop
fcomi
(bad)
jns
fstp
arpl
xchg
in
imul
mov
fwait
and
lods
ja
repz
hlt
jns
mov
ffree
inc
add
pushf
data16
clc
push
sub
ins
push
mov
das
cmp
inc
push
jg
cli
mov
pop
popf
and
aas
repnz
or
cdq
prefetch
stos
dec
jb
shl
pop
xchg
imul
ret
and
xchg
push
xor
and
add
sti
jae
cmps
fsub
pusha
dec
dec
dec
mov
jmp
fsubr
sbb
mov
push
mov
pop
mov
ss
cmp
cmp
test
test
enter
jl
pop
fs
movs
pop
es
int
sbb
mov
jge
sbb
repnz
push
lock
push
mov
(bad)
xchg
into
iret
sbb
push
adc
(bad)
mov
mov
call
std
dec
jne
pop
mul
out
xchg
pop
mov
daa
ret
ret
jbe
inc
pop
aad
or
idiv
cdq
push
cmps
mov
xchg
(bad)
dec
and
es
mov
add
in
jmp
out
mov
repnz
xor
pop
js
lahf
pop
inc
xchg
movs
inc
ins
fcmovbe
push
cmp
daa
mov
stos
push
mov
mov
mov
(bad)
arpl
bnd
je
jl
cdq
xchg
xchg
dec
into
sub
out
stc
and
nop
sub
sbb
ja
sub
sub
dec
shl
sub
xchg
and
xor
aad
mov
call
xchg
lds
adc
data16
push
sahf
or
cmp
inc
jae
xchg
xor
ret
cwde
sub
cmc
mov
loope
mov
stos
test
call
test
pop
test
into
sub
js
mov
shr
jns
addr16
inc
or
inc
sub
jo
dec
ja
sub
xor
lods
push
loopne
mov
pop
push
and
dec
sbb
xchg
mov
jmp
inc
test
adc
mov
sub
in
jg
and
ins
adc
lds
imul
(bad)
pusha
mov
movs
sub
mov
jnp
mov
test
fdiv
scas
xlat
inc
add
mov
lock
mov
and
ja
push
mov
dec
movs
or
adc
xchg
popf
sbb
xchg
or
out
or
mov
push
pop
std
dec
call
xor
shl
aaa
pop
jp
das
or
or
rcl
sub
je
adc
mov
(bad)
mov
arpl
test
xchg
add
imul
jle
pusha
pop
mov
cmp
cmp
data16
in
out
iret
aam
or
pop
adc
push
movlps
stc
or
not
mov
fdivrp
push
hlt
mov
nop
test
data16
cld
in
jle
push
pop
enter
mov
push
adc
push
popf
jge
test
adc
call
push
mov
sub
adc
cld
popa
push
lea
shr
ss
push
aam
jo
inc
inc
jl
dec
cmp
mov
add
jnp
dec
cmp
sbb
inc
xchg
fwait
je
or
aam
cmc
and
or
push
mov
adc
ja
adc
(bad)
out
sub
loop
shl
in
mov
mov
sbb
sbb
cwde
adc
fsub
pop
xchg
das
add
xchg
stc
xor
jbe
push
mov
cmp
mov
imul
fadd
test
lock
popa
lods
xor
fs
and
push
and
neg
push
ins
sbb
cli
inc
sub
pop
dec
int3
mov
and
repz
xchg
inc
imul
test
bound
push
or
cwde
fmul
stc
pop
xchg
jne
nop
lds
gs
cdq
retf
and
mov
lock
out
push
push
sbb
mov
push
ds
or
or
push
mov
outs
popf
adc
add
movs
repz
stos
idiv
std
or
ret
pop
xchg
mov
movs
call
push
adc
cmc
loopne
sti
mov
loope
fstp
adc
or
cld
sbb
inc
retf
repz
in
add
scas
cmp
jl
xlat
cmps
adc
fiadd
(bad)
int
stc
mov
adc
mov
mov
pop
cmp
call
xor
xor
mov
aam
stc
pop
je
pusha
push
add
pop
in
xlat
or
(bad)
jg
xchg
mov
retf
or
xchg
mov
adc
pop
nop
imul
cmc
adc
adc
and
or
push
pop
or
repnz
sar
daa
ret
pop
cmps
iret
inc
mov
in
(bad)
adc
push
cmps
add
scas
enter
xor
ret
cmp
ss
mov
fdiv
xchg
and
(bad)
in
mov
leave
inc
xchg
jle
push
mov
pop
sbb
out
or
inc
and
(bad)
push
mov
cdq
push
push
pop
cmps
cld
xor
mov
pop
push
mov
aaa
sbb
(bad)
out
pusha
xchg
hlt
push
fnstcw
retf
test
jnp
sti
popa
inc
pop
bound
sub
mov
push
out
(bad)
mov
pushf
cmp
loop
push
or
sub
xor
inc
shr
xchg
mov
sub
xchg
test
les
push
(bad)
sbb
sbb
adc
mov
repnz
xchg
add
neg
dec
jle
xchg
dec
fwait
arpl
retf
or
jno
hlt
inc
xchg
sub
sbb
mov
inc
mov
into
fistp
in
gs
std
(bad)
push
xchg
xlat
sub
loope
push
lods
cs
jmp
rcr
jmp
push
push
dec
xor
sbb
sbb
punpckhbw
cwde
out
mov
xchg
outs
cdq
inc
mov
js
fbstp
push
add
das
jg
dec
push
xor
add
push
out
(bad)
mov
fdivr
mov
mov
cmp
xor
sbb
out
jbe
test
mov
pop
inc
ss
mov
jmp
stos
daa
jl
cmp
mov
pop
xor
push
cmp
inc
int3
push
mov
fnstsw
std
gs
imul
iret
push
mov
mov
jmp
lahf
and
push
in
in
cmp
repz
lds
push
stos
push
stos
ds
adc
mov
pop
ret
push
sbb
ret
jg
dec
mov
inc
jns
stos
fprem1
(bad)
cs
mov
call
or
push
mov
adc
cmps
dec
sub
dec
enter
stos
lahf
popa
dec
or
push
push
pusha
mov
mov
add
les
jae
xchg
sahf
adc
retf
sbb
loopne
xor
loop
je
mov
pop
adc
fs
aam
pop
aas
aad
mov
cmp
jbe
adc
xor
retf
dec
jl
jp
add
call
push
push
ss
ss
fidiv
ret
mov
(bad)
dec
pop
js
xchg
lods
in
or
fiadd
xchg
movs
stos
and
pop
jmp
push
repnz
mov
jmp
scas
mov
call
and
test
sub
sbb
push
fldenv
push
jo
xor
mov
push
in
je
cmp
inc
jb
pop
ins
addr16
dec
jae
pop
ds
retf
push
or
mov
dec
jge
mov
retf
and
inc
xchg
ret
xchg
add
stc
push
dec
std
cld
ss
mov
push
sub
jo
les
push
lfs
xchg
lea
aam
dec
inc
inc
mov
mov
sti
cmp
pushf
cdq
sub
xor
mov
push
sbb
stc
add
cmp
inc
sahf
cmp
mov
and
mov
sbb
(bad)
(bad)
jne
push
fsub
(bad)
mov
cli
(bad)
hlt
int3
or
fnstenv
xchg
ss
daa
pop
test
mov
je
inc
aam
shr
lea
pop
scas
arpl
and
xchg
out
mov
ficomp
pop
xchg
pop
push
xor
cmp
xchg
cmp
xchg
test
std
pushf
inc
mov
and
repz
mov
call
add
lods
and
das
adc
mov
shr
mov
(bad)
cmps
out
and
(bad)
mov
mov
adc
pop
fiadd
pop
clc
inc
scas
pusha
pushf
mov
jle
mov
xor
sbb
cli
out
dec
int
iret
jmp
hlt
retf
and
stos
mov
sbb
je
sub
shl
test
std
cli
in
or
push
jge
jl
or
mov
pop
jecxz
dec
xchg
pop
push
pop
aaa
jnp
stos
inc
mov
lahf
aad
add
inc
push
or
inc
int
add
xlat
mov
fcomi
inc
mov
lods
loop
inc
xchg
popf
je
dec
data16
(bad)
repz
into
sub
adc
stc
push
in
arpl
in
or
hlt
in
pop
xor
ss
mov
sbb
cs
xor
pop
mov
xor
inc
sbb
rcr
push
popa
push
pop
int
or
dec
and
push
fdivp
sbb
xchg
jmp
(bad)
push
mov
pop
push
rol
jne
lods
jmp
leave
or
jb
shr
inc
out
inc
mov
jno
pop
jp
mov
les
add
pop
not
or
mov
(bad)
mov
dec
fist
jne
adc
cld
jl
cmp
add
sbb
mov
daa
iret
xor
fidiv
adc
dec
mov
dec
hlt
jge
or
pusha
ins
lock
add
mov
or
scas
sub
pop
jmp
jae
xlat
fistp
aam
test
popf
add
test
stc
xchg
xchg
cld
gs
pop
or
retf
(bad)
jb
icebp
rcr
popf
iret
pop
ds
aam
test
push
mov
pop
enter
sub
jmp
push
jecxz
xchg
pop
test
pop
mov
xchg
loope
adc
test
xor
imul
lods
push
adc
jno
in
test
push
push
adc
imul
fbstp
and
adc
push
fdivr
cmc
jns
push
je
in
mov
or
in
push
scas
retf
cs
inc
jg
outs
cmp
dec
ficom
cmc
mov
mov
mov
clc
test
xchg
jns
mov
mov
xchg
rol
sahf
int
test
add
sub
xor
push
ins
repz
imul
mov
jmp
fs
push
sbb
add
aad
mov
js
push
loop
shr
cmps
addr16
and
mov
push
mov
pop
push
pop
xchg
in
sbb
xchg
mov
jg
jae
ja
add
inc
inc
add
add
fmul
mov
mov
mov
clc
inc
les
aaa
gs
retf
je
sub
xor
jb
clc
mov
mov
fisttp
jne
in
test
sbb
lahf
xchg
(bad)
popf
dec
cs
inc
sub
ret
mov
push
sahf
inc
and
retf
xchg
out
inc
push
shl
test
sub
xor
repnz
mov
jmp
mov
in
inc
pop
sub
mov
pop
mov
ror
loope
(bad)
mov
mov
jns
adc
xor
inc
pusha
mov
jg
out
cli
inc
mov
sbb
sbb
jae
jmp
(bad)
fiadd
and
test
lods
adc
sub
mov
in
fbld
mov
pop
shr
add
and
lahf
arpl
jge
sbb
dec
jo
add
fxam
(bad)
cmp
add
or
xchg
pop
sub
sub
neg
out
retw
dec
sbb
mov
pop
mov
mov
push
jl
jmp
jmp
int3
cmps
mov
or
inc
xor
(bad)
neg
fisttp
popa
xchg
push
fwait
(bad)
pop
ror
dec
enter
clc
push
or
dec
pop
inc
(bad)
iret
in
rol
fwait
jg
jmp
cmp
fdivr
mov
and
adc
jns
movs
add
fldenv
inc
pop
mov
mul
mov
ror
mov
ja
xor
clc
and
xor
xchg
(bad)
xor
mov
in
stc
cli
test
dec
out
mov
loop
scas
mov
jg
jmp
pop
fld
push
sbb
sub
cmps
cld
inc
mov
imul
repz
xchg
push
das
inc
xchg
sbb
neg
push
in
dec
xchg
arpl
xor
bound
xor
push
ss
sbb
push
fs
jo
test
mov
cmp
sbb
(bad)
dec
xchg
cmp
mov
popf
(bad)
mov
je
fs
out
mov
aam
aas
icebp
xor
adc
cs
push
movs
fwait
imul
scas
outs
xchg
push
push
test
ins
pop
(bad)
movs
xchg
add
cmp
jmp
fs
mov
cmp
iret
dec
inc
(bad)
fbstp
mov
jle
mov
sbb
sahf
ins
movs
sar
enter
dec
jns
jb
into
pusha
rcl
mov
stc
xchg
inc
sub
stos
jmp
xor
jecxz
loopne
in
popa
jge
repz
int3
sti
in
dec
iret
(bad)
dec
sub
or
pop
mov
(bad)
jg
in
hlt
mov
or
xchg
popf
mov
inc
dec
call
pop
(bad)
repz
inc
mov
mov
push
sti
add
pusha
es
movs
(bad)
inc
cmp
jne
gs
fisttp
cmp
fsub
inc
fnstenv
mov
jmp
into
loope
push
mov
jmp
sub
push
push
mov
in
jae
fdivr
ficom
mov
(bad)
test
adc
outs
(bad)
jmp
mov
pop
cmp
mov
sbb
ins
pop
mov
xor
pop
jae
imul
mov
ins
test
das
call
mov
fsubrp
mov
imul
stos
mov
adc
xor
sbb
add
mov
dec
pop
adc
xlat
sahf
pop
ret
aaa
gs
cmp
mov
shl
test
clc
mov
sahf
dec
aad
xor
push
inc
out
jle
mov
inc
jmp
and
jno
fsub
int
mov
dec
lods
fnstcw
xchg
cwde
retf
inc
mov
addr16
pop
jmp
add
add
outs
or
lea
loope
cmp
ja
inc
xchg
daa
lds
cmp
movs
pop
out
cmp
loop
aas
adc
scas
nop
cmp
mov
adc
and
aam
pop
ficom
in
es
sbb
xchg
adc
or
dec
test
fwait
jl
lods
dec
lods
test
arpl
scas
aas
(bad)
ds
adc
stc
adc
repz
xor
xchg
inc
xchg
pusha
rol
cmps
int3
mov
scas
mov
mul
std
js
mov
dec
(bad)
test
add
jg
xor
bound
gs
nop
int3
jle
hlt
xor
mov
add
mov
and
aad
stos
mov
pop
fdivr
inc
push
fisubr
jmp
shl
xchg
add
jbe
and
popf
ffree
out
dec
jae
(bad)
aam
push
in
ret
repz
or
inc
push
outs
lods
push
cmp
xchg
shl
dec
out
mulps
jb
push
sub
jne
mov
jno
ss
inc
mov
loop
pop
mov
mov
out
aad
and
sbb
clc
jmp
fmul
xchg
push
call
add
sbb
mov
pop
xor
les
jmp
sub
mov
mul
xchg
dec
shl
imul
jb
test
mov
cs
sahf
inc
repz
sar
and
shl
push
pop
lock
fisub
or
js
jmp
pusha
shl
arpl
es
or
dec
jmp
mov
(bad)
js
mov
or
pop
jmp
stos
mov
dec
jmp
js
js
es
add
xchg
sar
bound
mov
xor
fsubr
not
xchg
lea
lods
mov
mov
ficom
adc
imul
mov
mov
mov
or
iret
(bad)
jle
mov
sbb
loop
lds
(bad)
leave
adc
mov
xor
pop
ss
sbb
xchg
mov
adc
pop
cmps
popa
stos
cdq
ja
(bad)
or
imul
clc
mov
test
sbb
mov
xchg
dec
jp
or
cmp
xlat
out
es
(bad)
int
jae
fnstenv
in
xor
(bad)
mov
out
jno
ret
ret
leave
int3
jecxz
mov
fwait
add
iret
popf
or
inc
ror
sub
cmp
pop
dec
xor
cmp
jne
xor
stos
dec
pop
clc
add
mov
dec
(bad)
dec
pop
hlt
cmps
inc
inc
mov
xchg
movs
push
adc
cmp
sbb
cmp
pop
outs
jo
pop
daa
int
in
pop
je
push
iret
cmps
mov
pop
jne
pop
jne
into
jl
pop
xchg
xor
xchg
mov
push
push
pop
cmps
fs
mov
call
jmp
lea
jmp
(bad)
xor
(bad)
push
(bad)
mov
les
in
ds
push
cwde
adc
cld
mov
sub
lahf
stos
xor
lods
mov
int3
cld
imul
xor
jp
stos
call
mov
mov
cli
or
and
gs
xor
dec
mov
dec
jmp
sti
mov
comiss
mov
or
mov
cmp
popf
sbb
pop
ins
and
and
or
mov
add
repnz
sub
rcl
push
adc
retf
push
mov
mov
push
xor
xor
xor
imul
cli
fstp
push
mov
test
mov
imul
mov
adc
shl
mov
cmp
hlt
jbe
cmp
sub
jge
cli
push
inc
adc
cmp
and
(bad)
(bad)
outs
and
ds
stos
leave
push
sub
int
ss
out
or
xor
repz
dec
pushf
(bad)
(bad)
sub
es
loopne
fisttp
pop
jge
outs
fcmovbe
add
push
xor
cmp
adc
adc
or
pop
or
retf
cs
in
pop
sbb
repz
xchg
inc
jmp
xor
lock
mov
push
or
mov
fisttp
pop
xchg
add
aas
mov
sbb
or
iret
fild
dec
mov
in
movs
cmp
in
jmp
out
mov
cmp
shl
outs
imul
adc
aad
call
cdq
sub
and
int
(bad)
je
pop
lea
cmp
test
ret
jmp
(bad)
rcl
movs
movs
add
sub
ins
and
rcl
and
xchg
test
dec
sbb
mov
or
shr
enter
mov
mov
mov
clc
rol
loop
push
xor
nop
inc
lahf
inc
jecxz
sub
lods
les
mov
mov
push
mov
fisub
retf
out
mov
mov
xor
cwde
cld
mov
mov
or
push
push
in
pop
icebp
lock
fs
adc
out
or
shl
mov
and
clc
mov
dec
out
std
punpckhdq
and
mov
jnp
inc
xchg
mov
and
xor
dec
shld
stos
pop
jno
add
jbe
dec
fxch
xor
dec
sbb
popa
and
jg
mov
fidiv
inc
sti
jmp
or
dec
dec
test
faddp
ret
pop
sub
imul
adc
pop
mov
sub
sub
out
int
frstor
sub
pop
mov
xchg
sbb
xor
pop
cmp
or
sbb
aaa
pop
ror
stc
aaa
imul
xor
push
xchg
fisttp
push
fimul
mov
jecxz
dec
js
cdq
data16
int3
mov
dec
mov
(bad)
in
outs
cli
sub
and
inc
call
xchg
xor
or
dec
test
aam
rcl
dec
and
sub
mov
mov
sbb
mov
sub
xor
sub
and
js
lods
jp
ja
mov
xchg
aaa
lahf
loopne
add
pop
imul
out
xchg
sbb
popf
lds
mov
shr
stc
sbb
jle
push
adc
and
(bad)
lds
adc
push
(bad)
sub
sub
cmps
push
xchg
sub
(bad)
push
xchg
dec
ficom
adc
in
xchg
and
mov
pop
sub
(bad)
movs
jne
mov
popf
repnz
cmp
or
add
xor
mov
icebp
sbb
stc
add
icebp
jmp
and
test
xor
xchg
push
xchg
mov
jl
imul
xlat
xor
arpl
shl
push
and
dec
inc
popa
icebp
scas
not
cmp
sub
sar
jnp
sti
pop
lods
jo
dec
inc
call
frstor
js
mov
or
sbb
push
jmp
outs
mov
shr
enter
icebp
call
xchg
xchg
std
aad
cmps
stc
pop
push
mov
rol
retf
dec
rcr
jnp
cld
(bad)
stc
es
clc
inc
neg
imul
ret
cld
sbb
mov
out
ss
clc
out
xchg
movs
xchg
inc
push
sub
inc
adc
fadd
pop
and
pop
je
cmp
push
push
jl
jl
pop
push
sar
mov
popa
call
fistp
mov
jmp
or
imul
or
imul
loope
sar
pop
movs
cmp
cmp
mov
nop
and
imul
cmp
mov
add
test
vmwrite
push
ss
pop
push
stos
pop
out
mov
data16
mov
shr
inc
jns
jmp
sub
movs
xchg
xor
mov
dec
mov
lods
shl
xchg
xchg
pop
push
push
cmp
xchg
pop
dec
jo
adc
push
cs
push
mul
jae
mov
bound
mov
loope
sbb
int
call
enter
in
dec
(bad)
jns
sbb
xchg
add
xor
xchg
aas
lock
movs
sbb
or
out
jbe
stos
shl
adc
dec
aam
lods
add
add
sub
jge
stc
pop
stc
sub
je
pop
xor
mov
loopne
pop
(bad)
aam
cmps
int
gs
adc
repnz
sbb
in
and
ucomiss
or
push
out
sbb
and
dec
js
mov
outs
push
shl
cli
lock
push
das
xlat
dec
fs
push
cli
popa
sbb
mov
xchg
sub
inc
jmp
jae
scas
pusha
addr16
lahf
lea
lea
adc
daa
or
mov
sbb
dec
push
mov
and
cld
(bad)
and
nop
dec
jl
mov
dec
adc
sar
nop
(bad)
adc
add
repz
adc
inc
je
xchg
in
shr
mul
xor
mov
test
inc
aas
xchg
mov
cmps
mov
mov
(bad)
push
push
out
retf
loop
jmp
pop
ds
sbb
sub
and
and
ficom
or
clc
ins
inc
cli
and
and
push
rol
fmul
push
dec
ds
mov
shr
cmp
popf
gs
js
add
jno
mov
xchg
mov
sub
sub
nop
xchg
je
xor
jp
std
lock
cmp
sub
cwde
div
(bad)
xchg
or
out
sbb
jge
repz
push
pop
jns
mov
stc
pop
sub
jne
(bad)
das
sbb
xor
xor
out
xor
mov
sbb
int
addr16
fucom
std
sti
in
stos
jbe
mov
loope
mov
les
xor
jecxz
mov
aad
mov
fwait
addr16
loopne
xor
(bad)
clc
(bad)
stos
xchg
push
or
xchg
mov
rcr
push
data16
and
fwait
dec
xchg
push
xor
dec
jecxz
leave
push
int3
test
in
add
mov
mov
dec
mov
dec
add
rcl
xchg
pusha
inc
outs
ins
mov
or
movs
adc
mov
sahf
retf
mov
push
hlt
mov
(bad)
lea
retf
pusha
out
mov
cmps
cli
imul
mov
div
push
inc
js
push
push
pop
gs
mov
xchg
push
dec
shl
xchg
pop
jo
minps
sub
inc
fisub
scas
sti
je
dec
adc
mov
push
jmp
mov
jae
inc
data16
jo
lods
nop
ret
(bad)
push
les
push
aad
cmp
cmp
sti
and
nop
out
das
aad
ss
jo
shl
mov
xchg
dec
fs
sub
xor
or
movs
add
fs
inc
sbb
lahf
(bad)
outs
sbb
inc
inc
xchg
fdiv
cmp
and
pop
sbb
je
dec
clc
es
adc
push
dec
push
in
pop
xor
mov
imul
(bad)
mov
jmp
movs
mov
js
stos
hlt
loopne
cmp
lods
movs
jmp
sbb
test
adc
idiv
jmp
ret
adc
pop
xchg
sub
std
aam
jp
out
cmps
pop
push
dec
in
dec
xlat
mov
cli
neg
shl
push
in
dec
cmps
pop
inc
mov
and
cli
jmp
dec
jns
stos
lock
push
cmp
and
lea
sbb
das
jae
dec
imul
shr
icebp
or
jle
and
dec
adc
jp
push
xchg
cmp
sub
adc
sub
ja
xor
mov
inc
repnz
sbb
mov
fst
mov
jge
or
inc
fcmovbe
lock
rcr
rcl
aaa
aas
daa
mov
das
(bad)
cld
push
in
mov
sub
dec
and
pop
adc
xchg
adc
mov
add
repnz
adc
in
sbb
call
mov
(bad)
jbe
push
pop
aad
xor
popa
movs
sub
shl
inc
pop
std
xor
xchg
xchg
mov
jnp
dec
ins
(bad)
popf
push
retf
mov
call
xchg
or
jbe
inc
push
dec
pop
xchg
les
and
mov
add
dec
cmps
cmc
jo
ss
ins
add
mov
and
and
add
ret
push
jge
leave
call
jmp
les
je
lods
retf
jl
mov
sar
call
movs
(bad)
popa
ds
sbb
cld
push
inc
jl
sbb
dec
push
push
inc
xchg
mov
(bad)
adc
pop
sub
(bad)
int3
mov
inc
push
jg
lock
fadd
pop
mov
and
pop
in
popa
inc
sti
mov
icebp
ret
sahf
adc
xchg
pop
jmp
int
(bad)
dec
adc
mov
imul
add
sbb
cmp
xchg
mov
sbb
sbb
xor
mov
dec
in
fild
sbb
movs
aaa
cmps
jb
std
not
sbb
cmp
sub
pop
mov
in
fmul
sti
inc
and
adc
hlt
jns
xchg
sbb
aam
push
rol
daa
pop
out
or
shr
adc
jge
movs
mov
jmp
push
int
sub
outs
aad
xor
scas
xor
out
pop
jg
sub
adc
shr
cmp
movs
jno
xchg
fldenv
fldenv
movs
sbb
mov
add
mov
mul
mov
mov
push
xlat
mov
push
fidiv
push
or
es
push
stc
mov
mov
in
push
sbb
js
mov
sti
gs
bound
fbld
inc
mov
add
in
mov
inc
push
mov
push
xchg
mov
add
test
dec
mov
push
pop
fwait
mov
enter
or
jnp
popf
xchg
ss
imul
jle
or
mov
sti
aaa
aas
pop
xchg
mov
add
or
pusha
hlt
arpl
and
das
pop
add
adc
stc
inc
ror
das
xchg
mov
pop
xor
mov
dec
out
in
mov
sbb
fmulp
xchg
out
fild
mov
gs
jb
jmp
add
std
(bad)
fisttp
sbb
inc
jns
gs
jnp
imul
shr
and
mov
adc
loope
and
sub
bound
jp
cld
call
imul
xchg
mov
cmps
dec
loop
mov
test
mov
fld
fisub
test
mov
sub
jecxz
pop
nop
je
mov
lock
mov
push
jge
call
dec
and
cs
call
dec
mov
aad
ja
sbb
cmp
out
add
(bad)
arpl
repnz
call
aam
xlat
mov
mov
ret
aaa
test
push
or
sbb
popa
xchg
jne
cmc
push
test
xor
fsubr
(bad)
xor
add
mov
ror
jnp
mov
loop
mov
xchg
(bad)
loop
xor
movs
or
jecxz
sahf
sbb
aas
adc
daa
mov
ds
add
mov
loop
adc
jl
ret
xchg
dec
sbb
into
aaa
jae
call
jne
out
ins
mov
out
std
or
sbb
je
shl
mov
push
cwde
lods
repz
mov
cmc
shl
add
sahf
pop
rcr
add
sbb
mov
into
and
mov
enter
push
mov
lods
nop
mov
sti
ss
or
inc
push
fs
sub
xlat
sbb
cld
test
sbb
test
mov
fs
sbb
inc
add
test
or
test
lock
or
js
aaa
fldenv
dec
loope
pop
inc
dec
stc
jno
es
idiv
sub
cmps
mov
or
inc
mov
and
ss
sbb
fld
sbb
fldenv
out
pop
add
(bad)
xchg
and
push
in
out
mov
sub
xor
cmc
and
cmp
jle
movs
iret
xchg
repz
jp
(bad)
mov
jge
movs
int3
retf
loop
xor
nop
mov
or
arpl
and
repnz
rcr
in
fwait
sbb
cdq
sbb
sub
lock
inc
stc
jl
xchg
iret
pop
lock
dec
ins
dec
nop
scas
or
std
jmp
arpl
pop
test
sbb
sbb
mov
in
aad
shr
mov
ret
push
rol
mov
adc
shl
call
repz
ror
dec
into
in
lock
cmp
sub
jl
or
arpl
fsub
push
aam
xchg
fwait
adc
neg
inc
jb
jmp
nop
call
xchg
or
mov
fiadd
cmp
loope
dec
test
adc
call
icebp
rcl
out
hlt
jmp
dec
addr16
shl
stc
dec
aam
xlat
xchg
mov
fist
sbb
mov
ja
cmp
mov
icebp
push
lds
aaa
push
add
push
cmp
(bad)
jmp
xor
pop
dec
loope
arpl
lock
cwde
call
loope
stc
adc
rcr
mov
pop
add
movs
aas
dec
call
xchg
mov
xlat
enter
mov
int3
js
mov
out
stos
fs
sti
and
adc
stc
mov
(bad)
int3
stc
xor
mov
mov
or
dec
inc
inc
jecxz
(bad)
push
sub
test
pop
inc
loopne
mov
jg
dec
mov
loop
mov
icebp
stos
jbe
xchg
sbb
(bad)
sbb
mov
xchg
mov
jmp
ss
add
jo
ins
add
call
int3
retf
mov
leave
inc
cs
shl
jne
cmp
test
gs
add
cmp
out
push
mov
pop
cmp
mov
dec
pop
xor
jle
inc
fbstp
jge
jecxz
fldenv
adc
xor
repnz
push
lods
pushf
clc
mov
popf
enter
adc
cmp
in
inc
push
jnp
sbb
or
mov
xchg
out
push
lea
or
test
call
mov
das
xchg
cmps
stos
cmp
pop
fldenv
std
inc
icebp
test
mov
scas
int
retf
fisttp
and
mov
push
push
sahf
cdq
mov
fcmovu
sbb
addr16
icebp
outs
xor
pop
xchg
mov
popa
shr
scas
enter
int3
fstp
dec
imul
cmp
sahf
inc
ss
fmul
and
not
fild
or
lds
rol
cwde
xor
sar
adc
leave
(bad)
call
hlt
adc
xor
test
jle
jae
cmp
ds
idiv
add
mov
mov
adc
(bad)
pop
nop
xor
mov
dec
cdq
xchg
sbb
pop
int
jecxz
pop
rcl
adc
adc
ret
fisubr
jo
mov
aam
jmp
mov
(bad)
es
sbb
dec
popa
mov
add
and
xlat
jg
mov
lods
mov
popf
cmp
popa
push
int
inc
sub
pop
int3
mov
xor
sub
mov
or
imul
mov
mov
jecxz
and
cdq
or
mov
mov
mov
xchg
dec
xor
jmp
and
push
imul
cmps
mov
and
mov
sbb
call
sbb
push
push
mov
and
or
pop
or
jmp
sub
test
or
cmps
lods
jns
jns
mov
(bad)
fdivr
arpl
sbb
push
sub
ja
mov
dec
hlt
lea
test
sbb
test
dec
add
repz
sub
xor
jnp
cmps
jle
(bad)
cdq
and
mov
lock
aam
cmps
jmp
dec
mov
pop
mov
pop
int3
inc
and
push
cmps
jle
loop
and
jnp
int3
jns
sbb
cmp
loope
shl
xor
and
sub
fimul
mov
repnz
out
aad
inc
jg
mov
outs
cli
pop
and
dec
js
arpl
scas
(bad)
ins
push
xchg
(bad)
scas
dec
sub
mov
data16
mov
das
dec
fistp
sbb
fst
rol
xor
or
ins
mov
jecxz
out
xchg
mov
or
mov
outs
adc
dec
imul
cmps
cdq
cdq
pop
jmp
dec
cs
jno
jmp
or
sub
das
mov
icebp
add
test
inc
test
sti
dec
jmp
push
js
xor
les
je
(bad)
pop
pop
lock
cdq
and
in
adc
dec
inc
fwait
xchg
outs
jns
retf
into
imul
sub
test
rol
repnz
push
(bad)
and
(bad)
add
ss
nop
mov
leave
fistp
lods
les
jnp
dec
gs
jl
xchg
pop
popa
sbb
and
je
push
stos
fwait
mov
ret
sahf
mov
clc
out
fstp
dec
dec
add
cli
push
dec
loope
(bad)
int
push
mov
sbb
push
pop
(bad)
dec
push
pop
xor
movs
adc
add
xchg
mov
inc
mov
jmp
mov
jle
(bad)
dec
mov
cmp
lahf
mov
out
xor
mov
dec
scas
cli
test
imul
xor
xchg
xor
fist
push
dec
mov
retf
pop
ficom
sbb
out
push
inc
or
bound
sti
gs
mov
imul
cs
add
jecxz
xchg
or
cmp
sub
test
add
xchg
mov
and
push
cmp
push
mov
pushf
and
sub
jbe
in
je
int
push
sbb
stc
inc
or
add
mov
cwde
in
inc
jmp
or
repnz
mov
xchg
add
bound
jl
nop
out
dec
js
fsubr
cmp
add
fiadd
inc
xchg
fmul
cdq
aad
adc
(bad)
inc
je
lock
mov
mov
sub
(bad)
enter
sbb
rcr
mov
int
aaa
popa
pop
lds
imul
(bad)
sub
call
test
in
in
das
jae
rcr
or
add
adc
fcom
mov
push
fcom
retf
xchg
fs
mov
push
push
pavgb
jmp
js
xor
cmp
dec
not
mov
inc
lds
dec
daa
loop
out
inc
sbb
bound
xchg
lds
out
sahf
or
pop
adc
add
inc
adc
lock
dec
popf
adc
jae
pop
xlat
mov
call
sbb
pop
nop
adc
cmp
data16
shr
xor
dec
pusha
jno
push
push
test
push
jmp
push
pop
lods
hlt
shl
out
mov
sub
jecxz
xchg
jl
sbb
sbb
dec
mov
jo
leave
or
(bad)
pop
cmp
movs
loopne
cli
pop
push
jp
or
clc
xor
imul
cmp
cwde
pop
mov
sti
outs
sbb
lahf
adc
adc
mov
aam
stos
retf
test
cwde
xor
ja
inc
push
mov
push
jb
ds
addr16
inc
(bad)
stc
jmp
clc
jle
je
ins
int
out
mov
push
mov
xchg
mov
jp
sub
add
cmp
retf
fisttp
addr16
std
cs
xor
fwait
hlt
jmp
pop
xor
xor
mov
into
cmps
xlat
xor
pop
xor
dec
push
jnp
sub
sub
cld
stos
loop
add
int3
dec
repz
sub
jg
inc
mov
or
jns
sahf
mov
jecxz
cmc
addr16
loopne
pop
add
call
dec
push
and
loopne
daa
and
or
adc
icebp
out
push
and
(bad)
jno
iret
out
xchg
ret
das
test
inc
xor
fisubr
xor
xchg
xchg
sub
sub
(bad)
fmul
xchg
mov
xchg
jecxz
xchg
fisttp
call
sbb
lahf
popf
(bad)
mov
adc
in
loope
mov
mov
xchg
inc
(bad)
stc
leave
lods
inc
mov
inc
push
lahf
fldcw
lock
and
adc
rol
push
pop
jo
mov
(bad)
ins
fcom
loope
xlat
or
shr
inc
iret
aam
add
xor
call
add
add
mov
xor
mov
scas
ror
mov
mov
jnp
aaa
retf
shr
adc
dec
or
call
int
gs
imul
cmps
(bad)
or
out
lahf
dec
pop
std
xchg
cwde
jl
jne
jg
cld
xor
test
sbb
mov
out
pop
scas
and
or
jle
mov
stos
xlat
retf
fwait
pop
les
sub
pop
mov
pop
xor
outs
repz
jp
xchg
add
fidiv
repz
sbb
xchg
fs
adc
xchg
pop
sbb
retf
add
mov
aad
sbb
inc
mov
cmc
(bad)
mov
inc
add
cmp
cmp
test
xlat
or
std
lods
pop
ficom
or
pop
fimul
lods
push
int3
sub
int
lods
fcmovb
gs
lahf
jno
jne
xchg
sub
cdq
push
lahf
out
and
cmp
in
imul
xchg
inc
mov
mov
dec
test
xchg
ins
xchg
and
push
imul
enter
jge
adc
lahf
shr
pop
pop
mov
adc
dec
es
lock
(bad)
js
dec
lea
fadd
mov
out
jb
mov
ins
dec
inc
xchg
lea
pop
sub
cli
sbb
sub
enter
nop
aas
xor
leave
mov
shr
cmp
int
shl
stos
pop
inc
les
jg
push
lods
stc
leave
std
lds
stos
push
ficomp
push
movs
pop
jo
imul
cmps
mov
int
mov
loope
ficomp
or
cmp
cmp
sti
mov
add
jmp
lods
dec
(bad)
shr
imul
add
test
in
xor
jmp
out
imul
push
aaa
sbb
stos
jno
xor
movs
mov
enter
pop
sbb
(bad)
mov
pusha
enter
aas
cwde
fucom
loop
xchg
jl
popf
add
jmp
mov
mov
add
add
cmp
les
adc
stos
icebp
inc
add
int
jecxz
pop
xchg
in
mov
leave
popa
jle
loope
xor
add
fs
mov
stos
add
cmp
je
mov
and
sub
mov
movs
dec
ja
xor
push
push
retf
and
(bad)
fwait
aad
pop
add
xor
mov
pop
loope
inc
mov
mov
aad
popa
sti
add
mov
mov
sub
repz
out
xchg
retf
imul
jg
aas
in
scas
popf
ret
das
stos
aad
xor
movs
ss
xchg
push
in
push
jl
cmp
fidiv
xchg
outs
adc
jle
add
push
and
xchg
aaa
cmp
pusha
es
es
in
and
mov
inc
xchg
mov
in
fcom
fsub
enter
mov
scas
add
push
xchg
sbb
arpl
cmp
adc
dec
js
inc
sti
js
mov
iret
sahf
hlt
repz
inc
push
je
push
call
mov
out
(bad)
or
cwde
sbb
adc
imul
push
push
shr
in
push
mov
pop
mov
cld
test
and
repnz
jnp
xor
pop
mov
pusha
pop
(bad)
fdiv
sbb
ret
xor
sbb
cmp
inc
ret
addr16
mov
and
push
or
popa
in
out
sbb
lods
loope
imul
pop
sub
mov
pop
out
lods
cmc
call
rcr
or
aaa
mov
sbb
icebp
adc
jp
cwde
les
mov
dec
aaa
jp
push
cmp
jge
xor
and
and
es
mov
mov
test
sahf
movs
xchg
sbb
mov
inc
pop
(bad)
sbb
mov
sahf
pop
adc
(bad)
sub
loope
sub
daa
fistp
mov
lahf
rcl
je
push
arpl
mov
outs
xchg
shl
or
aam
adc
fstp
in
and
cdq
xchg
jg
dec
mov
or
adc
push
fld
dec
rcr
push
push
and
shr
call
leave
in
sub
add
xchg
push
ret
dec
jg
cmp
mov
mov
ja
addr16
es
mov
neg
iret
pushf
dec
dec
into
jno
aas
jle
sbb
pop
in
ins
ins
adc
cld
xor
cmp
and
shr
call
inc
cmp
pusha
fld
hlt
sub
xor
pop
jmp
(bad)
aas
push
popa
push
xchg
enter
idiv
nop
pop
aam
push
jae
sub
cmps
test
and
lea
ror
dec
and
aaa
xor
mov
lods
and
cli
sub
adc
adc
stc
sub
jle
lahf
test
pop
imul
cmp
ss
or
aad
dec
inc
cmps
sub
stc
stos
cmp
sbb
lea
ins
sub
out
cmc
cmps
cmc
and
js
or
add
pop
mov
sub
mov
mov
mov
jmp
int3
out
cmp
push
aaa
add
retf
clc
out
or
dec
repz
dec
rcl
mov
mov
dec
jno
aad
test
xchg
sbb
xchg
xor
cmp
int3
les
sub
gs
pop
adc
(bad)
xor
push
fmul
aas
jmp
ja
jmp
pop
(bad)
and
inc
inc
sbb
adc
push
xchg
xlat
test
(bad)
dec
sbb
fdiv
jo
xor
imul
cmc
adc
mov
add
into
mov
push
movs
or
sbb
sbb
jle
lea
sbb
jns
add
lahf
and
dec
stc
or
push
leave
addr16
(bad)
ja
in
sbb
push
and
push
fbstp
mov
dec
sbb
fiadd
add
sti
stc
das
call
stos
push
pushf
repz
jnp
sub
ret
sub
(bad)
sbb
jbe
loop
(bad)
xchg
lds
pushf
(bad)
(bad)
(bad)
cmp
xchg
shr
or
xor
xor
pushw
cs
sbb
repnz
(bad)
icebp
pusha
jmp
icebp
fisubr
daa
jg
aas
push
js
daa
or
and
gs
js
jl
or
outs
dec
scas
pushf
test
pop
popf
push
adc
push
fidiv
movs
mov
add
call
dec
movs
mov
mov
sar
jecxz
outs
mov
stc
rcl
adc
rol
or
xchg
xchg
icebp
sub
add
or
call
loope
into
hlt
hlt
and
pop
push
adc
push
mov
mov
pop
mov
xchg
in
or
cmp
sti
push
inc
cmp
jmp
mov
rcl
add
leave
retf
iret
lods
shl
aam
test
idiv
daa
ins
stc
ret
jbe
int
test
aad
push
mov
out
pop
or
inc
ret
(bad)
fstp
pop
and
inc
in
push
add
sbb
fimul
xchg
out
and
jnp
ret
dec
sub
pop
out
lea
mov
maxps
mov
cmp
ffree
add
xchg
(bad)
in
shr
int
push
or
test
out
out
push
ror
mov
mov
and
sbb
sbb
jmp
push
sahf
lods
cmp
jp
mov
jb
inc
and
xchg
or
in
pushf
mov
inc
xor
loope
push
rcl
pop
in
popf
or
rcl
sbb
mov
jo
ret
cdq
push
mov
push
jg
fcom
ret
mov
fs
or
popf
dec
fdivr
(bad)
mov
imul
test
or
push
loop
xor
xor
or
and
xchg
xor
sbb
mov
lods
retf
cmp
sub
imul
xchg
leave
in
ret
mov
and
fidivr
outs
(bad)
and
mov
add
cwde
pushf
repnz
retf
fcos
dec
hlt
icebp
sub
shl
ret
clc
leave
mov
sar
les
neg
pop
mov
jp
xchg
push
or
lds
dec
cmp
jg
xlat
inc
lods
lods
movs
les
int3
xor
jmp
mov
(bad)
movs
inc
stc
adc
jns
jg
int
mov
dec
pop
adc
dec
xor
lods
loopne
in
pop
xlat
out
mov
call
or
lods
mov
(bad)
movs
stos
adc
sub
(bad)
leave
int3
fiadd
(bad)
dec
mov
pop
sub
mov
aaa
mov
inc
lds
loopne
loop
je
sub
scas
sub
and
jecxz
or
cmp
push
dec
popf
icebp
push
add
jbe
fucomp
pushf
ret
adc
enter
push
xchg
js
cdq
dec
xchg
mov
cs
push
test
ds
test
dec
ror
stos
fidiv
jmp
and
jge
out
dec
dec
enter
add
(bad)
pop
add
push
(bad)
adc
mov
pop
push
pop
xchg
adc
xor
mov
cmp
neg
jb
lahf
test
(bad)
das
lea
pushf
pusha
rcr
sub
sub
cwde
xor
ja
sub
test
push
mov
sbb
mov
int
mov
inc
inc
sub
add
mov
inc
int3
pop
addr16
pop
rol
xchg
ret
push
rol
loopne
sbb
daa
jne
pop
cmps
and
inc
xchg
std
pusha
pop
xchg
lods
stos
add
sahf
push
iret
push
jo
or
imul
xor
pushf
xor
rcl
xlat
ins
xchg
popa
pop
add
xchg
mov
cmps
cli
mov
outs
rcr
into
pop
dec
mov
dec
jmp
mov
cld
xchg
rcr
outs
and
mul
add
int
test
dec
rol
pop
sub
in
aad
cmp
jecxz
loop
jae
aas
add
jg
mov
mov
lds
mov
into
stos
inc
xor
stc
mov
push
cmp
out
call
gs
sub
ins
loop
movs
jmp
jmp
gs
cli
fadd
pop
pop
pop
cs
sbb
pop
cmp
and
or
cmp
arpl
mov
inc
(bad)
sar
mov
push
(bad)
cwde
mov
lahf
cdq
enter
(bad)
fild
xchg
mov
pop
cli
int3
call
mov
jae
jnp
pop
je
arpl
or
daa
test
xor
mov
in
in
out
dec
jnp
or
icebp
ds
jecxz
sub
js
xchg
neg
pop
adc
sbb
jo
jg
repnz
add
es
xchg
push
mov
imul
add
mov
add
cmps
arpl
add
push
ficomp
inc
(bad)
pop
in
jle
mov
shl
sub
ins
inc
xchg
jge
fld
jmp
add
jecxz
ja
aad
sbb
xchg
sti
test
mov
in
push
push
or
dec
push
mov
loopne
call
mov
pop
sub
or
aam
dec
jg
jp
(bad)
mov
inc
int3
xchg
das
in
adc
es
fcomp
mov
mov
lods
sub
(bad)
(bad)
and
ds
add
jge
sbb
and
popf
cmps
push
mov
shl
adc
scas
jp
pop
pop
int
in
sar
inc
jnp
inc
and
sahf
push
fld
mov
and
sub
in
aaa
rol
mov
push
jle
push
movs
pop
adc
sti
in
test
jo
jg
out
inc
mov
outs
(bad)
das
sub
dec
mov
ds
rcr
bnd
jne
cmps
int
fadd
push
push
jno
jnp
loope
mov
scas
mov
lea
and
push
iret
pop
jle
or
xchg
xchg
out
lahf
jne
mov
scas
pop
cmp
pusha
loopne
jmp
adc
stos
pusha
cmps
inc
movs
outs
sti
stc
(bad)
mov
mov
cmp
sub
xor
aas
bound
sbb
adc
mov
and
rcr
mov
inc
jo
xor
ret
jmp
imul
fistp
and
adc
jmp
movs
aas
dec
jecxz
mov
outs
ins
dec
(bad)
dec
add
test
mov
rcpps
imul
mov
mov
rol
or
loope
dec
or
dec
xchg
movs
mov
pop
int
movs
jle
std
jge
jbe
mov
inc
cld
rcl
sub
inc
fimul
inc
popa
adc
pop
fld
and
bound
jns
imul
dec
adc
in
out
xchg
pop
cmp
cmps
push
sbb
shl
icebp
adc
fistp
add
xchg
pop
sub
je
jbe
mov
push
retf
mov
sbb
and
das
sbb
aas
scas
aam
mov
add
std
mov
aam
inc
cmps
jo
mov
adc
ror
cdq
jmp
pop
mov
out
fidiv
nop
lods
(bad)
jmp
fdiv
mov
jp
out
bound
ins
pop
xor
inc
mov
cmp
or
jecxz
cs
nop
lds
pusha
stos
sub
js
pusha
enter
jmp
pop
loope
cmp
ret
adc
fadd
rcr
(bad)
cli
je
sar
push
xlat
push
push
mov
mov
pop
leave
push
sbb
in
xor
xchg
adc
push
sbb
jnp
sub
xchg
fcomip
add
inc
das
push
mov
pushf
arpl
add
push
xchg
popa
dec
test
xor
cli
aam
daa
cmps
inc
xchg
dec
call
leave
mov
ret
test
jp
int
cmp
xor
inc
inc
call
mov
mov
cmps
cmps
fwait
mov
sbb
outs
popa
xchg
mov
add
xchg
aas
jne
ins
shl
pop
gs
out
js
cdq
mov
rcl
hlt
mov
sub
jg
sbb
adc
pop
sbb
push
movs
lods
adc
fnstenv
add
(bad)
mov
xchg
cdq
rol
add
push
add
mov
outs
xchg
mov
fwait
lahf
xchg
cmc
popf
scas
jle
or
jno
inc
fwait
je
adc
or
rcl
cmc
gs
sub
retf
sub
ret
aas
loop
and
sbb
(bad)
pop
sbb
repnz
imul
mov
jno
data16
fdivr
int
pop
cld
inc
mov
scas
stos
ds
clc
pushf
ficomp
jb
xchg
mov
mov
scas
jb
daa
(bad)
mov
xchg
jg
inc
in
mov
push
xor
xor
sbb
xor
xchg
dec
mov
dec
sub
xchg
mov
(bad)
je
adc
xchg
jo
fsub
push
push
and
stos
dec
mov
dec
jmp
mov
sar
sbb
ds
dec
jge
inc
adc
test
push
rol
iret
inc
pusha
jecxz
adc
(bad)
mov
in
dec
inc
jno
test
mov
ins
jecxz
push
repnz
jb
dec
leave
mov
jg
or
cmp
push
fcomp
je
inc
push
cmp
cmps
push
mov
push
(bad)
int
rcl
pop
fscale
loop
icebp
nop
jmp
test
cmp
xor
inc
imul
dec
push
pop
std
xchg
rcl
inc
xor
mov
add
mov
pop
mov
je
mov
xchg
movs
mov
nop
call
cmp
(bad)
mov
jbe
and
xor
adc
cmp
fwait
inc
pop
lods
sbb
into
mov
jbe
(bad)
mov
push
dec
jb
les
ins
dec
in
leave
pop
cli
cmp
dec
cdq
mov
dec
dec
jmp
and
mov
adc
cmp
inc
jmp
jp
jecxz
or
cwde
add
adc
shl
lock
fidiv
push
push
ins
sub
aaa
leave
and
cmp
jb
and
adc
pop
mov
inc
gs
cld
jmp
adc
aad
ror
sub
pusha
sub
push
xchg
(bad)
mov
scas
sub
cmc
mov
shl
pop
sbb
mov
sbb
test
test
mov
mov
add
aas
mov
movs
outs
in
sub
sti
dec
mov
fscale
arpl
add
std
mov
ins
sbb
repz
(bad)
mov
push
pop
sbb
call
in
repz
js
jns
push
outs
lods
sar
in
out
xor
jo
ins
int
add
add
loop
movs
ins
xchg
pop
cmp
and
or
xchg
and
sub
movs
adc
pop
js
inc
push
nop
leave
pop
les
cmps
cmps
or
scas
jae
mov
mov
ss
pop
test
sub
xor
pop
pop
push
mov
or
leave
ror
xor
and
xor
jmp
xor
ds
(bad)
jbe
lock
or
adc
sar
jmp
retw
les
sub
loop
movs
mov
sbb
lods
repnz
scas
xor
js
xor
mov
xor
adc
test
and
mov
xor
out
adc
push
dec
mov
pop
test
lea
rcr
test
inc
mov
in
mov
iret
call
fistp
or
aaa
xor
mov
idiv
std
xor
rcr
pusha
pusha
add
add
fadd
in
xor
add
iret
test
sbb
fnstcw
sbb
outs
out
cmp
or
imul
addr16
adc
jg
mov
fnstcw
test
ins
cwde
dec
aam
int
adc
ja
push
loope
add
fsub
sbb
leave
mov
inc
je
out
mov
or
dec
ins
sub
jmp
xchg
sbb
and
push
test
addr16
xchg
adc
dec
lahf
popa
mov
inc
xor
test
ret
outs
inc
shl
jg
and
fcmovnu
xor
fwait
pop
mov
jne
test
xor
add
jle
(bad)
retf
fsubr
xadd
daa
mov
dec
push
mov
xchg
inc
push
enter
hlt
xlat
add
movs
dec
int3
bound
inc
jmp
lods
pop
and
ins
out
jbe
jo
xor
push
ficom
cmp
(bad)
add
pushf
imul
mov
imul
push
jmp
adc
jle
jp
in
outs
int
jns
push
pop
(bad)
shl
push
sbb
in
mov
jg
pop
outs
add
lods
fcmovnbe
jecxz
gs
xchg
fidiv
sbb
jno
push
(bad)
icebp
out
and
push
sar
mov
push
es
inc
addr16
sti
gs
jb
mov
sub
mov
xor
movs
or
ds
(bad)
jle
bndstx
ja
aas
adc
jecxz
(bad)
cmp
and
mov
call
retf
xor
retf
fsub
pop
or
xor
rcl
repnz
(bad)
aad
std
mov
lds
mov
test
aad
dec
shr
inc
leave
cmp
sbb
mov
(bad)
icebp
add
(bad)
out
mov
pop
sub
dec
mov
xor
xchg
dec
inc
pop
outs
sbb
cmp
cmp
into
call
cmp
xchg
sbb
scas
ficomp
das
scas
sub
and
inc
cmps
mov
not
das
and
jp
jp
test
xchg
push
(bad)
adc
fimul
mov
push
push
jno
dec
inc
sub
ja
pop
fldcw
iret
in
add
dec
(bad)
inc
mov
adc
ja
fucomip
mov
push
add
pop
data16
leave
sti
dec
and
ins
into
cmp
pop
test
add
mov
jnp
jecxz
mov
pop
or
cmp
(bad)
cmps
push
pushf
lds
push
nop
aad
mov
(bad)
cli
and
popa
add
sahf
mov
test
cmps
movs
int
adc
scas
adc
sbb
push
(bad)
std
jne
(bad)
into
and
ror
cmp
in
mov
out
cmp
test
outs
pop
adc
inc
rcl
mov
sbb
push
and
shr
xor
jle
cmp
xor
pushf
mov
fstp
jp
pop
or
std
jnp
push
call
xchg
push
outs
lods
ret
call
mov
out
clc
push
xlat
push
jae
in
sahf
sahf
adc
call
dec
sub
daa
pop
inc
mov
dec
and
lds
mov
fld
inc
test
mov
test
test
xor
cmps
push
push
test
loope
mov
test
dec
push
xlat
ins
cmps
sub
mov
jge
ins
dec
dec
fidiv
sbb
mov
xchg
test
out
gs
jge
push
xchg
mov
(bad)
stc
inc
sub
mov
sahf
call
cmp
jae
clc
es
mov
movs
outs
and
jg
sbb
or
xchg
fst
repz
and
mov
xchg
inc
mov
or
call
aam
shl
movs
mov
lods
xchg
ret
lea
add
mov
arpl
shl
or
je
fwait
mov
mov
add
dec
adc
fwait
stos
and
loopne
adc
hlt
pop
push
add
pop
fst
jecxz
leave
pop
pop
leave
or
inc
and
and
(bad)
inc
out
movs
call
ja
ffree
popa
cmp
push
sbb
xchg
test
fimul
xor
inc
push
shl
sbb
xor
retf
pop
sar
int3
ds
fwait
sbb
ins
or
movs
jb
cdq
jle
xor
lds
mov
pop
stos
jge
xchg
lods
das
jbe
call
dec
fdivrp
mov
or
jno
imul
cmc
jns
sub
mov
jo
inc
mov
pop
and
xor
bound
fld
or
icebp
pop
cdq
sub
test
stos
xchg
pop
pop
ret
xor
or
das
inc
add
repnz
fwait
cmp
and
xor
mov
repz
test
xchg
and
mov
and
ret
jnp
xchg
or
rol
push
adc
sbb
xlat
das
bts
adc
inc
je
stos
arpl
aas
enter
out
push
fst
(bad)
cmp
mov
leave
push
ret
out
mov
sahf
adc
sbb
test
dec
cli
adc
je
sbb
imul
push
fsubr
adc
push
fdivp
and
or
cmp
iret
mov
daa
jno
mov
movs
(bad)
jbe
(bad)
mov
mov
add
jno
leave
add
addr16
cmps
mov
fcmovu
pushf
sub
cld
(bad)
mov
sub
xchg
(bad)
out
or
pop
mov
(bad)
dec
fild
hlt
shr
das
fimul
xor
push
push
xchg
push
and
enter
mov
sub
loop
cmps
cmps
cwde
cli
xor
mov
push
imul
push
aaa
cwde
pop
jns
mov
stc
mov
or
pop
pop
push
sub
push
and
lea
cmp
in
and
je
mov
outs
pop
mov
jnp
dec
(bad)
nop
add
aaa
aad
sub
mov
inc
jle
ss
pop
mov
cmp
inc
call
and
jmp
int
pushf
ss
mov
adc
mov
call
stos
mov
hlt
stos
adc
fisubr
dec
lahf
ins
or
jecxz
hlt
outs
mov
lahf
or
cmp
sahf
add
push
lock
mov
cmp
push
cld
sub
jge
outs
inc
xchg
mov
pushaw
ins
mov
cmp
mov
popf
leave
fs
inc
ror
test
popa
adc
add
cmps
rcr
pop
jmp
call
pop
add
jb
mov
xchg
jge
sub
sub
inc
leave
sbb
sbb
cdq
pushf
int
fwait
movs
nop
mov
pop
lds
fcmovb
mov
dec
ret
or
ja
sbb
pop
out
ja
sar
inc
call
push
std
sbb
push
sub
cwde
rcr
pop
push
cmc
dec
test
in
aaa
je
xor
pop
sub
aaa
sbb
push
leave
ret
cli
scas
xchg
push
fs
pop
mov
push
jnp
mov
sbb
cmp
sahf
and
mov
fdiv
mov
inc
mov
leave
lds
retf
cld
jmp
and
xchg
push
jmp
retf
push
outs
fadd
mov
jecxz
loop
pop
scas
mov
arpl
dec
not
inc
mov
jl
sub
js
jns
loope
add
mov
pop
in
ss
mov
mov
in
pop
data16
ins
cmps
dec
mov
mov
add
(bad)
pop
xor
pop
dec
jbe
test
loope
jg
fs
push
arpl
out
sbb
lods
out
clc
sbb
push
in
cs
adc
hlt
cli
push
add
fdiv
ds
dec
sub
push
sub
jne
imul
nop
jne
xchg
sbb
inc
mov
pop
stos
sbb
push
je
xchg
add
add
push
jge
into
pop
pop
iret
retf
adc
cld
cwde
enter
sbb
ds
(bad)
xor
push
xor
out
movs
lock
add
outs
mov
and
jns
or
out
pushf
repnz
inc
scas
sub
adc
shr
sub
dec
fs
sub
mov
cmp
xor
dec
cs
mov
daa
xor
outs
shl
pop
xchg
fwait
sub
(bad)
jecxz
int
in
and
mov
sub
pop
and
inc
or
adc
retf
popf
or
imul
jno
out
stos
ficom
add
rol
pop
sub
dec
push
xor
sub
les
cld
(bad)
in
lahf
jne
(bad)
or
adc
cmps
ret
mov
and
sub
pop
dec
cli
mov
jp
inc
add
add
aam
xchg
loop
xchg
in
jl
call
push
mov
inc
inc
movs
adc
out
jne
mov
aaa
push
mov
mov
add
fild
das
scas
mov
push
add
ror
stos
gs
ret
dec
sbb
arpl
mov
sbb
jmp
pop
sbb
mov
xor
sub
jmp
push
das
mov
dec
jns
or
mov
pop
rol
xlat
adc
or
xchg
clc
jns
iret
mov
sahf
in
cmp
inc
sbb
fs
jmp
and
and
pop
(bad)
(bad)
jne
xor
fisttp
retf
cli
test
pop
dec
xchg
dec
lods
es
nop
adc
mov
loope
inc
xchg
stos
fnstsw
out
add
sub
jno
mov
fs
sti
dec
xor
rcr
dec
popa
mov
int
sub
stc
sar
jp
or
rcl
jno
mov
mov
dec
ds
dec
data16
sub
push
pop
mov
iret
dec
movs
mov
jae
fst
jns
mov
scas
jbe
mov
fcomip
adc
sbb
add
xor
mov
push
cwde
adc
fadd
mov
mov
mov
cmc
fisttp
(bad)
pop
out
push
into
addr16
jo
mov
add
xchg
dec
div
enter
push
in
cmps
mov
xor
and
in
retf
add
sub
push
(bad)
xor
xor
add
shl
retf
mov
pop
imul
outs
mov
(bad)
retf
movs
in
lea
nop
aad
mov
int
ret
mov
adc
pop
sbb
dec
fs
lods
call
popa
jns
hlt
sub
mov
add
cli
dec
and
repnz
adc
stc
sbb
and
jmp
xchg
jle
imul
fcmovu
add
add
sbb
xchg
es
mov
or
bound
sub
(bad)
sub
in
je
cdq
add
jne
jecxz
pusha
out
xchg
sbb
mov
int
mov
mov
scas
or
in
pop
cmp
int3
aaa
clc
ja
out
out
out
xor
xchg
push
adc
nop
jmp
push
cmp
add
nop
jns
ret
inc
push
es
in
lahf
push
(bad)
push
dec
iret
adc
lods
xor
stos
pop
scas
sbb
scas
or
out
or
lods
push
retf
sbb
jp
sbb
jns
shr
add
push
or
mov
ja
dec
nop
jecxz
mov
push
(bad)
mov
dec
ror
jne
mov
cmp
les
ja
int3
ds
inc
cmp
outs
into
bound
push
stc
and
sbb
inc
mov
adc
pusha
push
into
in
adc
sub
stos
lods
jl
adc
adc
pop
pop
daa
mov
jne
adc
sub
pushf
popa
jmp
sbb
adc
cmp
out
xchg
mov
or
pop
adc
fsubr
mov
mov
or
lods
daa
fild
(bad)
push
inc
ins
jno
xor
adc
xor
xor
xchg
das
add
call
xor
cmp
xchg
xchg
loop
not
dec
out
sub
inc
push
jp
int
adc
scas
in
in
xchg
push
test
or
xlat
cmp
imul
or
shl
push
mov
pop
sub
xchg
movs
movs
mov
enter
inc
jg
neg
repz
fcom
cwde
jno
inc
inc
std
test
into
ror
dec
addr16
movs
mov
jge
push
xor
jge
(bad)
gs
ins
inc
mov
inc
ret
cmps
fldenv
mov
xchg
add
adc
cmp
scas
pusha
add
push
xchg
mov
into
addr16
ja
sbb
push
pushf
adc
sbb
sub
cld
retf
ret
ss
jl
mov
out
std
iret
jecxz
push
cmp
cdq
outs
xor
or
dec
popa
pop
mov
xchg
dec
xor
(bad)
loope
mov
imul
cld
daa
daa
jmp
mov
ret
sub
imul
icebp
cdq
inc
out
add
fcmovb
inc
adc
jns
push
daa
cmc
nop
popf
add
mov
ins
mov
or
aad
inc
outs
mov
mov
add
lods
or
ds
adc
ins
(bad)
fadd
pop
fstp
mov
adc
push
mov
(bad)
mov
(bad)
int
ja
mov
xor
outs
add
lahf
rol
or
sbb
mov
dec
xor
xchg
inc
sti
xlat
lds
mov
out
mov
pop
(bad)
xor
push
inc
mov
mov
push
xlat
or
(bad)
fcomp
jae
sbb
xor
scas
push
xchg
inc
cdq
pop
call
aam
lock
es
sbb
fdiv
ret
lock
dec
mov
push
sti
in
cmp
sub
dec
inc
xor
jns
shr
imul
nop
jae
jns
out
lods
adc
popf
lock
mov
mov
imul
mov
fcmovu
jp
push
gs
mov
sti
test
stos
sar
jne
retf
leave
test
pop
(bad)
or
shl
inc
arpl
(bad)
push
inc
and
into
call
outs
sub
aad
sti
scas
push
jge
xchg
jmp
sub
jl
cmp
es
outs
(bad)
test
pop
in
push
mov
ja
popa
fbstp
fwait
mov
xchg
shl
dec
mov
jp
cli
xchg
cwde
sub
(bad)
cmp
(bad)
fs
inc
(bad)
jg
push
in
lds
pop
retf
or
sub
jo
(bad)
lahf
adc
adc
out
(bad)
push
neg
dec
xor
imul
mov
mov
mov
push
cwde
push
and
les
xchg
mov
add
xchg
(bad)
mov
jp
mov
push
fld
dec
(bad)
ins
fist
inc
movs
js
mov
bnd
push
scas
aam
inc
mov
daa
stc
adc
mov
out
xchg
add
ret
xchg
imul
pop
arpl
ror
lahf
int
(bad)
or
int
mov
(bad)
jo
cs
dec
mov
not
mov
jae
add
popa
in
gs
push
test
push
mov
add
add
das
inc
mov
(bad)
fist
dec
cs
mov
sub
jno
xchg
push
push
lods
sti
leave
pushf
call
scas
xchg
mov
dec
aam
push
imul
push
dec
mov
adc
sub
pop
sub
push
scas
bound
inc
sahf
cmc
dec
xlat
cmp
or
mov
enter
add
add
jae
loopne
push
inc
(bad)
add
sbb
ins
xchg
in
inc
jo
mov
fcom
mov
or
pop
sbb
jmp
enter
out
xor
bound
movs
cs
add
mov
jae
push
xchg
cmps
cmps
jecxz
and
xor
cwde
ins
mov
or
jl
cdq
xor
(bad)
sbb
mov
adc
outs
dec
inc
out
jle
and
(bad)
xor
jo
(bad)
test
push
mov
dec
mov
out
shr
stos
cmp
inc
mov
int3
es
dec
mov
call
adc
mov
xor
jge
cmps
retf
mov
clc
test
adc
sub
jb
aaa
mov
push
fidiv
xor
rcl
push
ret
sti
inc
xor
(bad)
stc
mov
inc
daa
adc
cmp
sub
mov
xchg
ror
sbb
lea
idiv
and
pop
sbb
aas
dec
and
ja
xor
mov
push
aaa
es
cmp
mov
adc
mov
sbb
xlat
push
pop
jmp
ret
nop
mov
xchg
je
sti
mov
pop
cdq
(bad)
sbb
or
cmp
add
ins
fsub
dec
arpl
(bad)
or
lds
scas
sub
jnp
jnp
push
jnp
cmps
popf
fist
inc
cdq
stos
fimul
je
add
jo
jmp
xor
sub
or
out
jb
loope
ret
xor
outs
std
or
scas
add
bound
scas
dec
into
fldenv
sete
inc
and
jnp
ficom
outs
xchg
inc
(bad)
jmp
bound
shl
iret
push
xchg
out
out
daa
aam
push
cmps
daa
movs
shr
pushf
cpuid
xchg
scas
(bad)
mov
or
std
cmps
pop
test
add
es
jecxz
pop
jbe
hlt
cwde
mov
dec
(bad)
jg
fsubrp
add
rcl
xchg
shl
mov
adc
call
jae
out
add
pop
mov
(bad)
xchg
dec
jge
mov
test
das
xor
cmps
sbb
jp
lea
inc
aad
mov
cmp
and
lods
fcomp
dec
mov
pop
sbb
mov
mov
pop
(bad)
outs
xor
pop
in
cwde
sbb
int
je
sar
mov
sbb
loopne
add
cld
push
int3
fwait
sbb
cmp
je
or
leave
jmp
imul
ret
sub
mov
and
or
xchg
mov
sub
inc
mov
sti
jmp
nop
mov
adc
cmp
add
push
push
sub
test
pop
into
cmp
lods
clc
pop
sbb
in
dec
aas
xchg
pop
xchg
adc
cmp
pop
int3
push
imul
cmp
das
out
shr
loop
add
scas
and
test
(bad)
loopne
sub
cwde
or
shl
mov
(bad)
stos
add
pusha
daa
pop
add
inc
pop
gs
xor
popf
cmp
sbb
sbb
(bad)
pop
imul
movs
add
lods
test
pop
jb
push
fcmovnbe
jp
jmp
enter
cmp
imul
inc
test
mov
mov
mov
jo
clc
ret
push
ret
adc
inc
sahf
(bad)
pusha
arpl
sbb
mov
popf
adc
push
dec
cdq
xchg
jne
mov
jge
pop
jb
mov
mov
pop
add
(bad)
jne
jmp
fbld
mov
in
jb
mov
aam
test
fsubr
push
mov
or
sbb
repnz
mov
enter
pop
add
mov
inc
clc
stos
push
pop
loopne
pop
(bad)
xor
xchg
cmp
xor
jle
mov
rcr
cmp
js
sbb
or
sub
cmp
push
lods
in
fiadd
rol
rol
sub
and
adc
fild
xchg
pop
fsubp
xor
jle
leave
(bad)
dec
jno
movs
(bad)
sbb
into
outs
pop
cmp
nop
and
test
arpl
call
xchg
sbb
aas
mov
mov
cmps
in
push
aam
jns
fwait
popf
mov
jmp
xchg
js
sahf
fucomp
fwait
xor
pop
inc
cwde
in
push
shl
add
addr16
lea
and
fdivr
outs
jg
hlt
int3
(bad)
fmul
mov
daa
push
push
cmp
ffree
mov
ss
inc
adc
(bad)
and
fsub
loope
pop
daa
imul
mov
xchg
jmp
lahf
add
jmp
mov
and
and
jo
xchg
jp
push
pop
mov
shr
rcr
jmp
pop
loopne
xchg
adc
dec
adc
clc
ret
pop
push
mov
nop
sbb
or
aas
and
inc
stos
(bad)
mov
cli
adc
imul
adc
int3
imul
push
sub
sbb
movs
or
leave
add
ret
inc
xor
adc
icebp
cwde
mov
jnp
mov
mov
cmp
retf
push
dec
fmul
or
xchg
or
ror
mov
rol
or
cmp
xchg
into
or
dec
pop
xor
loop
adc
out
mov
stc
dec
or
sub
or
jl
adc
jecxz
(bad)
les
sub
sub
out
mov
adc
add
push
ss
mov
fwait
push
jmp
pop
js
sub
stc
(bad)
mov
sub
mov
jbe
sbb
mov
xchg
sub
xchg
aas
mov
xor
sub
xchg
cmp
outs
push
dec
fidiv
mov
or
jne
push
push
pop
dec
stos
or
or
xor
popf
imul
loop
mov
mov
scas
cmp
into
mov
and
mov
mov
ds
push
or
inc
jns
call
pusha
test
mov
(bad)
pop
ss
lea
ror
fsub
jno
jns
dec
push
in
ror
fcmovnu
fcomp
and
mov
cmp
(bad)
inc
lods
(bad)
retf
adc
lds
lahf
cmp
xchg
pusha
fldenv
bound
pop
mov
push
shl
sub
imul
into
cwde
retf
sbb
in
xor
iret
(bad)
clc
les
xor
mov
jle
xchg
pop
xchg
int
into
add
inc
sub
aad
pop
(bad)
cmp
je
fcomp
call
repnz
jo
xchg
jl
sbb
push
fdivp
cwde
adc
or
repz
std
out
(bad)
inc
adc
pop
pop
out
lahf
mov
pop
mov
cld
add
daa
mov
(bad)
cmp
pop
pop
es
jp
data16
xor
inc
in
(bad)
pop
leave
jne
pop
(bad)
popa
(bad)
cdq
iret
fisub
mov
ret
frstor
mov
sbb
cli
dec
sbb
push
lahf
mov
fwait
ret
leave
stos
and
xor
dec
xchg
dec
mov
add
and
jl
ins
lock
std
adc
and
jns
scas
xor
xchg
in
dec
bound
ds
add
(bad)
xor
adc
gs
lahf
jno
mov
push
leave
inc
pop
xor
sub
adc
icebp
out
ds
shl
fist
xor
or
outs
push
or
mov
cmp
inc
jae
sbb
loopne
pop
jne
mov
test
or
out
imul
pop
jl
mov
add
mov
sti
jmp
mov
cmp
jmp
js
les
push
in
pop
cld
(bad)
(bad)
pop
adc
xor
cmps
or
jmp
in
jmp
jecxz
rcl
sti
mov
add
sbb
xchg
xchg
clc
fiadd
pushf
fadd
(bad)
(bad)
movs
shl
mov
pushf
leave
jmp
jp
faddp
sbb
xchg
mov
aam
pusha
push
cmp
lock
(bad)
in
mov
jmp
sbb
stos
jo
test
inc
movlps
mov
shr
dec
clc
or
bound
stos
lods
mov
pusha
rol
or
(bad)
lea
push
or
pop
mul
sub
push
rcl
pop
adc
syscall
pop
js
cli
bound
test
dec
cmps
stc
shl
inc
dec
mov
add
ror
icebp
cld
mov
lods
loopne
fiadd
add
sbb
leave
sub
inc
jmp
xor
les
jae
bnd
pop
inc
scas
dec
sbb
pop
shl
(bad)
fnsave
les
cli
jg
pop
and
jne
cmp
push
jne
cmps
arpl
popf
mov
dec
in
stos
dec
jnp
jmp
retf
cmp
retf
mov
ins
(bad)
mov
adc
dec
adc
stos
rol
in
sub
lock
mov
retf
ds
(bad)
cmp
fiadd
push
lods
sar
pushf
iret
repnz
pop
(bad)
sbb
js
xor
pop
and
movs
dec
mov
movs
movs
jge
stc
sbb
xchg
and
push
dec
sbb
mov
jmp
sub
push
sbb
mov
adc
mov
sub
hlt
dec
mov
or
psrlw
inc
and
mov
dec
out
fcomp
or
aam
adc
mov
or
mov
mov
(bad)
mov
test
loopne
jae
stc
sub
ret
mov
fnstcw
mov
lahf
in
xor
retf
rol
scas
pop
sub
pop
and
cmps
jmp
jmp
adc
aaa
pop
xchg
push
jmp
xchg
ror
aad
and
nop
test
stc
shr
sar
mov
enter
or
inc
out
jo
mov
sub
xor
or
jge
or
mov
dec
and
inc
mov
repz
in
(bad)
pop
aad
retf
or
js
sbb
mov
sbb
imul
jno
or
cmp
fld
adc
jns
test
push
mov
push
pop
xchg
jge
adc
cmp
xor
mov
pop
pop
mov
xchg
loope
dec
push
aad
ins
stos
retf
sub
mov
ins
(bad)
std
mov
sub
enter
adc
repz
xchg
inc
pop
jp
test
mov
jae
leave
je
cs
fldcw
mov
pushf
jbe
(bad)
das
fsubr
cdq
popa
test
enter
cli
push
adc
mov
adc
cmp
push
pop
inc
cld
dec
(bad)
out
xlat
ins
retf
imul
xor
scas
aaa
int
mov
test
push
adc
not
scas
(bad)
jae
mov
dec
mov
adc
mov
(bad)
xchg
push
stos
(bad)
mov
add
add
outs
int
add
cmp
les
adc
fstp
or
lock
shl
ds
scas
mov
test
sbb
add
push
jne
mov
push
mov
je
scas
or
sahf
ss
xchg
xor
mov
pop
hlt
sub
loopne
jmp
sub
hlt
add
xor
sti
pop
jne
push
dec
je
ins
ror
inc
adc
ja
out
mov
cmp
inc
cmp
xchg
push
out
(bad)
sbb
ins
push
or
mov
mov
into
inc
inc
mov
pop
int3
cmp
push
fidivr
out
inc
nop
mov
dec
push
jae
cmc
int
test
sbb
pop
hlt
jns
and
adc
in
repnz
dec
sbb
sub
mov
ins
sub
sbb
mov
movs
sub
adc
inc
and
mov
lahf
pop
into
push
cmp
sbb
sub
mov
ficom
fidivr
jno
mov
inc
cwde
hlt
push
inc
inc
nop
in
inc
jge
sub
div
xor
sub
jae
inc
pop
jp
out
push
jne
push
ds
jb
pop
scas
jge
push
repnz
sbb
push
sbb
ror
fidivr
xor
xchg
jg
mov
or
fwait
jmp
daa
movs
mov
aas
add
xchg
and
je
nop
jg
mov
cmp
mov
mov
mov
in
and
ds
(bad)
lahf
dec
ret
push
push
mov
pop
or
repz
mov
int
xor
fnstenv
sub
scas
dec
nop
mov
pop
or
ss
sbb
mul
loopne
jb
jl
aaa
nop
pop
mov
sti
cmp
mov
or
jge
mov
push
icebp
std
sub
push
jo
sti
stos
xchg
sub
adc
int
sbb
pop
inc
clc
and
movs
lods
stos
popf
mov
and
add
shr
mov
in
mov
jbe
push
xor
sub
push
test
pusha
sbb
out
mov
cmps
cmp
pop
idiv
push
loope
jne
clc
mov
jno
je
mov
push
pop
mov
jg
(bad)
(bad)
fld
ss
mov
das
or
je
ret
cmp
mov
sbb
xor
push
outs
sbb
mov
xchg
enter
sbb
push
push
jbe
cmp
pop
lea
sub
shl
cld
sti
add
shl
imul
ror
mov
loope
jp
out
es
(bad)
cdq
mov
or
in
and
mov
movs
je
shr
out
outs
mov
psubsb
sub
mov
test
(bad)
jnp
das
and
and
jmp
and
mov
retf
pusha
repnz
sub
pushf
repz
into
enter
inc
jge
ror
lahf
mov
ds
lock
jmp
inc
pop
sub
stos
inc
inc
jae
aas
in
fcomp
ins
xor
xor
das
ret
sbb
aad
pop
push
les
or
add
xlat
mov
sbb
xchg
or
add
idiv
(bad)
call
std
cmp
enter
or
mov
(bad)
jge
or
pusha
enter
mov
aaa
call
dec
ret
mov
mov
cmp
jbe
mov
(bad)
fiadd
dec
(bad)
push
jle
loop
mov
jg
mov
test
dec
sub
inc
push
movs
sub
pop
(bad)
dec
(bad)
jbe
jne
(bad)
cld
shl
mov
sub
inc
push
xchg
lods
ffreep
adc
popf
call
pop
ret
loope
adc
cdq
cdq
add
push
outs
(bad)
jmp
int
outs
xchg
retf
mov
mov
dec
xor
adc
or
ss
pop
add
xchg
jmp
test
or
sar
adc
daa
or
fdivr
loop
and
push
push
mov
push
jp
push
sbb
adc
sbb
bound
inc
dec
mov
mov
adc
aas
arpl
sbb
popa
pop
add
add
outs
push
jg
cdq
das
fldcw
std
sub
push
push
mov
ins
dec
test
pop
adc
push
or
push
mov
out
test
popa
mov
leave
(bad)
jnp
popf
adc
push
dec
frstor
rcl
cmp
and
in
fisubr
jne
dec
mov
push
mov
xor
mov
sub
rol
adc
cwde
retf
pop
sbb
out
or
xchg
adc
or
dec
dec
and
into
push
nop
xchg
pop
out
xchg
push
mov
inc
inc
arpl
lock
mov
jp
push
jle
mov
cmc
daa
jmp
test
jbe
push
or
shl
jl
rol
inc
and
movs
xor
popw
popa
adc
ja
pop
adc
xchg
mov
sub
mov
bound
nop
test
mov
and
test
inc
les
or
outs
shl
mov
fmul
jne
push
or
mov
inc
mov
mov
sbb
dec
inc
mov
rcr
ins
dec
xchg
mov
sbb
or
ss
shl
add
mov
and
cmc
mov
sub
xchg
rcl
hlt
mov
rol
adc
adc
push
dec
in
cmps
bound
mov
and
(bad)
into
sub
sub
push
enter
or
jae
pop
push
rcr
jp
or
leave
adc
int
test
adc
xchg
xchg
xlat
add
pop
hlt
out
mov
lea
jbe
pop
pop
dec
jg
dec
mov
outs
push
pop
lahf
and
ficom
sub
xor
mov
cmps
xor
pop
and
je
in
(bad)
rcl
dec
rol
pop
aam
and
aam
add
and
ret
dec
mov
cmp
xor
loopne
inc
pop
inc
jno
pop
adc
inc
mov
std
sti
nop
xor
jno
scas
push
les
outs
loopne
fisubr
jbe
addr16
and
movs
in
or
sahf
adc
out
fnstenv
dec
mov
je
(bad)
div
sti
scas
lock
jmp
cli
push
adc
test
cmps
sub
leave
xchg
leave
popf
data16
es
adc
rcr
adc
stos
arpl
lea
inc
xor
inc
cli
dec
imul
aam
out
and
dec
jecxz
movs
cwde
into
xchg
adc
pop
movs
sub
aaa
cmps
mov
sub
sub
mov
jmp
(bad)
xchg
mov
dec
xchg
mov
sbb
test
pop
sbb
pop
(bad)
dec
in
lock
push
call
xchg
stos
test
std
enter
test
and
enter
loope
jnp
pop
push
mov
jae
adc
xchg
push
sub
mov
rcl
aaa
lock
cmc
cdq
pushf
sbb
xor
pop
retf
and
cmp
movs
mov
push
ret
scas
jmp
adc
and
sub
cmp
mov
stos
icebp
nop
(bad)
in
in
pop
test
aaa
xchg
js
or
dec
xchg
mov
mov
xor
popa
dec
xchg
loope
xor
mov
mov
inc
fsub
inc
mov
out
xor
adc
xchg
sbb
dec
dec
jb
dec
jmp
pop
xchg
inc
jns
cmp
sbb
push
lods
ds
in
sbb
ss
pusha
outs
mov
test
call
inc
in
pop
lock
sbb
xchg
(bad)
pop
xor
imul
ins
sub
adc
repz
sbb
rcr
mov
push
sbb
dec
cmp
pop
ret
mov
fistp
pop
mov
out
mov
dec
fndisi(8087
ss
ins
jns
mov
loope
stos
xor
and
mov
mov
(bad)
pushw
pop
or
icebp
lea
pop
or
or
jbe
test
cmc
adc
pop
xchg
ins
jmp
cmp
xor
fstp
pop
(bad)
shr
lea
jp
test
stc
or
jmp
inc
dec
mov
jae
pop
fnstenv
mov
jp
mov
cmp
ror
(bad)
mov
or
fisubr
in
mov
inc
or
sub
stos
inc
fistp
cdq
mov
in
xor
push
adc
sub
scas
call
sub
dec
aam
(bad)
push
or
adc
(bad)
jg
push
mov
or
inc
sbb
hlt
in
fxch
add
or
cs
fild
mov
xor
pop
jno
xor
sbb
xchg
fild
inc
in
jp
xchg
sbb
fsubr
(bad)
jo
pop
popa
and
xchg
jl
dec
or
cmp
push
test
aad
cmps
icebp
ret
cmp
push
or
aad
(bad)
cwde
mov
cmps
(bad)
test
mov
ds
ss
aas
jle
mov
pop
clc
ds
fdiv
out
xlat
jbe
retf
cwde
in
rol
xchg
jb
xor
mov
xor
enter
xor
add
(bad)
or
(bad)
sub
loopne
jno
xor
mov
or
push
push
xchg
pop
loope
daa
iret
add
push
and
push
test
iret
dec
push
jnp
movs
or
xchg
pop
xor
and
data16
xor
push
mov
fdivr
rcr
fstp
scas
stos
ins
mov
pop
ror
cwde
(bad)
daa
push
cld
fdiv
sahf
scas
repnz
outs
fs
rsm
cs
mov
inc
inc
push
outs
mov
dec
sub
pop
int3
push
test
sti
pop
jnp
ds
pop
sub
rol
test
sub
mov
bnd
jnp
push
jno
retf
in
cmps
test
xor
enter
push
fs
sbb
mov
rcr
pop
and
jecxz
ja
(bad)
or
inc
mov
push
add
loopne
jae
ins
or
push
cmp
xchg
add
mov
bound
inc
pop
lods
(bad)
loopne
mov
add
ins
bound
pop
sbb
test
sub
jecxz
daa
ins
mov
jle
dec
cmp
ret
mov
scas
sahf
and
addr16
sub
and
loop
and
jg
scas
in
adc
sub
cmps
cmp
lods
mov
xchg
jmp
mov
xor
ins
inc
xchg
sti
adc
call
sub
jg
mov
iret
push
stos
retf
pop
cs
mov
jmp
add
inc
xchg
out
mov
leave
inc
sbb
mov
mov
cld
jecxz
sti
scas
or
xchg
add
leave
jp
and
and
cdq
(bad)
jmp
dec
xchg
sub
inc
pop
push
into
pop
sub
xlat
call
test
fscale
int3
test
jmp
and
or
enter
std
dec
retf
pop
(bad)
jbe
inc
or
sub
mov
and
xchg
je
push
aaa
std
cmp
icebp
repnz
enter
lock
push
add
xchg
mov
repnz
jmp
push
inc
std
push
sub
es
rcr
inc
stos
sahf
push
jmp
daa
pop
clc
xchg
add
add
clc
out
push
scas
cmps
repnz
push
fist
push
jnp
scas
mov
cld
cmc
cmp
rcr
popf
idiv
adc
fwait
mov
lahf
(bad)
stos
in
adc
jnp
not
mov
jo
cmp
fstp
dec
call
in
(bad)
dec
test
ds
pop
imul
inc
mov
out
push
adc
ret
int3
retf
sbb
imul
retf
retf
repz
pushf
xchg
cmps
lods
ss
inc
inc
pushf
mov
and
das
cmp
sbb
push
pop
in
pushf
xchg
imul
icebp
int3
or
or
push
std
in
inc
out
adc
dec
pop
aad
and
jp
xor
xchg
ret
jmp
in
sbb
lods
adc
push
(bad)
mov
or
div
fisubr
pop
dec
pusha
adc
(bad)
fisubr
leave
mov
mov
call
imul
or
mov
push
jge
out
in
lods
mov
mov
(bad)
(bad)
dec
call
jg
mov
xor
mov
cmp
add
xor
scas
pop
leave
sbb
or
rcl
inc
hlt
out
retf
cli
jle
and
rcl
cmps
neg
jecxz
push
rcr
ror
cmp
add
cli
in
je
or
aad
add
imul
ds
lock
xchg
jmp
bound
inc
and
or
test
mov
jmp
dec
sbb
dec
and
or
inc
stos
inc
sbb
mov
jb
sub
sbb
stos
push
js
loope
mov
mov
aaa
(bad)
loop
add
adc
lods
(bad)
jno
mov
int
idiv
sbb
jge
(bad)
stos
repz
in
fs
mov
and
mov
dec
push
mov
dec
pop
loope
cmp
add
neg
push
repz
sahf
fwait
jl
dec
aam
mov
sub
mov
push
movs
test
xor
mov
idiv
sbb
vmread
dec
push
push
mov
jae
pusha
or
outs
sbb
test
cdq
in
and
jbe
jge
add
movs
mov
cld
mov
adc
or
in
xchg
xchg
ficom
cwde
repnz
mov
pop
repz
cmp
test
adc
inc
mov
(bad)
daa
mov
dec
pushf
push
hlt
out
xchg
es
sub
jl
jg
(bad)
in
imul
cmp
sub
ins
rcl
sbb
hlt
xor
pop
out
mov
xor
adc
arpl
and
inc
mov
ret
dec
enter
xor
ret
adc
jo
sbb
adc
aas
retf
in
adc
hlt
cmp
je
mov
xchg
pop
mov
repnz
das
pop
gs
and
in
dec
push
push
or
data16
dec
test
sbb
sub
adc
cmp
data16
(bad)
aaa
dec
ficom
inc
retf
ss
sbb
jle
mov
loope
dec
push
inc
outs
mov
(bad)
dec
lock
xor
xlat
std
retf
outs
ret
pop
and
adc
pop
je
mov
xchg
adc
mov
inc
sbb
into
jmp
aad
cmps
imul
mov
push
out
mov
loope
test
push
inc
out
push
adc
pop
iret
pop
imul
das
cmp
cmps
int3
push
add
shr
mov
or
loop
adc
cld
xchg
loopne
popf
mov
cld
add
outs
sbb
or
call
mov
sub
pop
ins
out
adc
stos
mov
adc
in
aas
push
fdiv
lar
rcr
fldenv
and
cmp
nop
pop
lock
pop
inc
cmp
jecxz
pop
mov
xlat
dec
add
fisubr
mov
daa
pop
pop
loope
(bad)
xchg
cmps
mov
jnp
adc
push
mov
push
adc
mov
scas
mov
int
scas
lods
xchg
add
sbb
pop
fild
and
pop
ror
inc
push
or
scas
out
cmp
push
je
sahf
mov
rol
mov
stos
std
cmc
jl
call
xchg
pusha
mov
pusha
mov
iret
movs
bound
test
in
mov
(bad)
aad
push
dec
jb
mov
repz
jb
mov
lods
shl
adc
retf
mov
bound
ins
inc
mov
cmps
loop
call
pop
pop
jecxz
scas
mul
sar
xor
pop
pop
std
daa
cwde
jns
pop
inc
lods
sub
ss
jmp
jl
stos
mov
sbb
inc
aas
or
cmp
adc
jle
outs
mov
sbb
fidivr
sti
pop
mov
push
xor
pop
push
sub
call
push
xlat
mov
push
(bad)
mov
sti
stos
es
sbb
mov
out
pop
or
xor
das
aas
fld
push
lods
clc
scas
dec
call
nop
mov
mov
cdq
and
cmc
idiv
lea
mov
mov
in
dec
dec
sbb
imul
cmps
stos
mov
pop
aam
inc
jne
popf
add
pop
inc
je
call
and
popa
lods
cmp
sub
mov
and
int
call
std
or
jnp
sub
das
inc
jl
test
(bad)
mov
xchg
aas
mov
aaa
outs
and
loop
icebp
jbe
xor
shl
pop
imul
adc
popf
mov
pop
(bad)
std
cmps
addr16
pop
jbe
xchg
bswap
fist
jne
popa
add
retf
mov
rcr
and
das
icebp
jmp
pop
mov
out
or
mov
cmp
adc
clc
inc
add
jbe
std
xchg
leave
out
cmp
mov
dec
jmp
(bad)
rol
inc
mov
cmp
retf
(bad)
or
pop
scas
ror
stc
test
inc
push
jmp
adc
jmp
push
cmp
loop
mov
jnp
bound
call
dec
jo
mov
dec
js
rol
lea
inc
push
call
rcl
ja
loopne
not
aad
test
or
jns
pushw
mov
jecxz
into
(bad)
in
imul
rol
xchg
mov
and
in
cwde
je
popf
lock
jp
shr
popf
jo
or
mov
dec
mov
mov
mov
sub
jp
ins
jb
mov
test
add
mov
pop
inc
xchg
fwait
xor
iret
bound
ss
rcr
dec
push
inc
adc
jge
out
mov
popf
retf
jmp
cmp
cwde
adc
aas
(bad)
lds
idiv
std
mov
and
dec
addr16
out
and
jmp
sub
ins
jmp
mov
xchg
jp
jl
inc
pop
cs
loope
and
loopne
sub
mov
popf
pop
loop
mov
xor
aam
pop
cdq
(bad)
cmp
or
mov
out
gs
cli
test
retf
pop
jmp
out
imul
push
popa
mov
ss
push
in
or
call
xor
sub
add
xlat
stos
ss
lods
icebp
shr
shl
cmovs
adc
ja
hlt
les
in
xor
add
jmp
imul
pop
rol
fild
mov
outs
loopne
or
adc
sub
push
add
mov
mov
push
cmc
sub
outs
in
retf
adc
jae
fwait
inc
mov
mov
inc
cmp
je
push
sar
pop
and
in
push
sub
mov
popa
loop
les
or
cmps
das
retf
mov
or
jns
fs
cmp
test
or
(bad)
icebp
jle
loope
popa
mov
mov
pop
ss
mov
push
dec
(bad)
dec
(bad)
sbb
test
jno
pop
clc
and
popa
sbb
pxor
popf
push
push
into
jmp
mul
sar
xlat
ret
bound
sub
lock
or
push
jmp
sar
sbb
add
sbb
iret
rol
lods
push
movs
pop
push
(bad)
xchg
push
mov
outs
jl
fisttp
aaa
cmps
jle
mov
adc
sbb
xor
jge
inc
pop
push
and
pop
sti
add
in
call
add
push
sbb
push
sub
ins
into
or
jo
mov
popf
aas
mov
ror
mov
mov
or
inc
das
sub
mov
les
or
dec
(bad)
jmp
sbb
sub
mov
jecxz
loopne
and
dec
jp
xchg
psubb
in
(bad)
jmp
sub
sbb
pop
adc
leave
xor
fstp
or
das
daa
pop
xchg
shl
mov
das
lahf
cmps
ror
out
cmp
dec
add
ins
jae
lods
fcomp
push
dec
sub
push
mov
ror
sahf
or
cmp
jp
call
and
not
xchg
xor
xchg
mov
add
std
xchg
xchg
mov
js
in
fwait
xchg
lods
mov
pop
inc
dec
cwde
test
(bad)
retf
xor
adc
lods
mov
mov
push
(bad)
jmp
mov
out
popf
sbb
repnz
cdq
sbb
mov
ret
dec
sbb
mov
enter
jmp
mov
cmp
sbb
adc
sbb
(bad)
cli
ror
sar
outs
mov
mov
test
(bad)
fwait
(bad)
hlt
lea
xor
test
ss
fstp
mov
test
in
sub
popf
je
mov
call
aam
push
mov
inc
cmp
sub
int
mov
jmp
fxch
mov
fs
inc
retf
pop
loop
cmps
out
xor
cs
imul
test
mov
sbb
push
cmp
mov
ds
lahf
jno
mov
call
add
je
add
loop
gs
xchg
lods
and
inc
mov
popa
mov
imul
shl
mov
out
(bad)
jl
push
push
test
jge
ja
ds
push
push
leave
mov
aam
orps
jg
data16
mov
les
add
sbb
push
repz
ins
pop
test
iret
mov
repz
repnz
pop
pop
sub
sub
jg
lods
and
xchg
cmps
inc
cli
std
movs
xor
mov
add
(bad)
sar
lods
ret
jmp
add
cld
or
pop
pop
clc
stos
int
jl
pop
lods
addr16
or
int3
cmps
jns
cld
mov
ret
fs
push
stos
mov
mov
and
dec
inc
fimul
mov
jbe
into
test
sbb
mov
push
call
cs
or
lahf
mov
mov
(bad)
in
xor
das
sbb
in
movs
outs
dec
repnz
mov
movs
loopne
out
fistp
test
stos
and
cmp
push
neg
push
out
push
pop
add
fs
fstp
inc
xor
and
push
shl
cmp
mov
enter
ret
pop
push
iret
push
lds
out
sbb
nop
push
push
mov
dec
jne
ss
movups
pop
shr
sbb
adc
xor
mov
mov
pop
xchg
sbb
scas
mov
inc
or
mov
arpl
loope
enter
push
add
jns
mov
shr
mov
aad
call
data16
mov
mov
xor
mov
and
stc
test
loopne
loope
repz
sub
inc
jle
dec
(bad)
xchg
rcl
mov
xchg
lahf
sbb
movs
in
mov
add
aaa
call
and
(bad)
rol
fcom
dec
in
push
cdq
or
sti
sbb
test
movs
sbb
fistp
into
xor
(bad)
pop
add
and
push
inc
int3
pop
mov
inc
stos
test
add
test
retf
push
mov
add
pop
jns
fild
cmp
jbe
(bad)
outs
fld
mov
pop
push
scas
xchg
clc
call
movs
dec
inc
or
pop
xchg
and
ds
ss
fmul
sbb
ins
add
lahf
and
adc
mov
iret
das
and
jecxz
dec
jae
push
ss
out
jecxz
repnz
sub
cmc
push
mov
push
or
rcl
aad
out
into
sbb
xlat
(bad)
aad
jb
sub
inc
in
push
mov
test
jge
retf
adc
test
int3
pop
xchg
out
shl
mov
test
clc
aam
mov
adc
xor
ret
test
xchg
stc
push
out
hlt
lock
mov
movs
cmps
(bad)
push
mov
or
jb
fs
fdiv
mov
mov
out
mov
mov
add
outs
sub
cmc
std
mov
push
xchg
(bad)
hlt
or
movs
nop
xor
mov
add
push
dec
jg
mov
das
jnp
scas
or
pop
jmp
sbb
xor
or
loopne
sbb
sbb
aas
xor
iret
(bad)
arpl
call
sub
popf
push
xor
xor
daa
add
xor
je
push
std
fisubr
push
cli
nop
push
in
dec
call
jae
adc
(bad)
sub
ins
leave
js
rcl
mov
jp
cwde
push
xchg
mov
into
pop
dec
mov
push
mov
mov
aam
scas
and
cmp
call
leave
xchg
call
call
jle
push
sbb
retf
cwde
(bad)
and
shl
rcr
sub
xchg
sbb
cld
dec
push
or
sbb
jl
nop
jo
inc
pop
stc
xlat
into
push
xchg
or
mov
mov
pusha
(bad)
cmps
stos
xor
lock
cmp
dec
lahf
push
psrld
cmp
(bad)
jg
clc
push
in
test
cmp
pop
in
cmp
xchg
dec
jmp
sbb
mov
std
sub
(bad)
out
outs
in
aaa
xchg
inc
arpl
mov
cmp
rcl
in
ror
dec
and
stos
and
movs
xor
dec
xchg
(bad)
in
cmp
dec
add
or
je
dec
cmp
and
inc
push
sbb
loope
push
cmp
loop
add
pop
adc
int
sbb
ins
push
lods
mov
cmp
pop
jnp
loope
pusha
dec
cdq
fld
das
mov
stos
mov
ins
lahf
test
sar
aam
outs
int3
lds
or
fbld
xchg
not
sbb
pushf
call
jno
scas
icebp
inc
(bad)
hlt
fxch
lds
and
out
or
daa
add
pop
adc
dec
mov
out
fcmovbe
cmp
js
jb
mov
test
and
xor
aaa
adc
jo
or
xchg
sti
mov
outs
retf
cmp
test
bound
xchg
dec
dec
pushf
sbb
mov
lods
xor
pop
xor
sbb
ins
pop
add
mov
in
(bad)
xor
ins
nop
in
shl
mov
in
push
mov
sub
dec
lods
sub
ficomp
into
adc
pop
pop
and
push
push
dec
dec
xor
mov
mov
out
adc
sbb
jp
xor
jns
into
sbb
into
cld
or
push
and
les
aad
cmp
int3
jle
and
adc
lods
popf
mov
or
jge
xor
or
cdq
or
mov
add
cmp
mov
xchg
add
jo
stos
adc
ins
aaa
popa
pop
shl
popf
ins
jb
hlt
fs
popa
mov
xchg
xchg
jl
pushf
gs
lods
dec
dec
retf
sub
adc
gs
cwde
fcom
shr
xor
mov
jnp
scas
or
mov
movs
inc
mov
(bad)
je
call
shr
sbb
dec
out
dec
mov
test
sbb
int
jp
mov
stc
mov
add
and
jmp
out
outs
sbb
push
sbb
test
in
jge
pop
neg
ror
enter
hlt
xchg
rcr
mov
retf
pop
mov
sub
jge
xchg
leave
ins
cmp
add
gs
jmp
cdq
xlat
jl
or
out
repz
push
repz
out
sub
mov
hlt
loop
mov
div
and
fisub
ins
out
xor
or
and
mov
pop
into
mov
xlat
call
outs
adc
xlat
cs
inc
ins
push
or
jbe
aaa
push
jb
test
ret
xchg
sbb
xchg
jle
hlt
jae
rcl
xchg
jg
out
mov
xchg
mov
sub
xchg
pop
add
or
and
mov
cmp
movs
mov
mov
daa
or
sbb
and
fwait
inc
sub
(bad)
and
rol
retf
and
fidiv
pop
inc
adc
cmc
imul
ins
call
pushf
sti
iret
push
or
inc
scas
in
mov
(bad)
repz
(bad)
fst
cmp
mov
loope
int3
imul
jae
iret
lds
dec
pop
ror
push
jne
out
inc
xor
xor
fmul
out
jl
hlt
inc
stos
ja
call
ds
cmps
not
pop
leave
or
dec
imul
sub
into
inc
test
dec
inc
or
aad
repz
aaa
cmps
lods
and
int
add
inc
(bad)
call
imul
add
movs
pop
test
adc
mov
in
jbe
cmps
push
ret
mov
xor
inc
mov
xchg
fadd
dec
xor
jo
clc
pop
inc
sar
scas
mov
mov
pushf
sub
jp
xchg
fimul
push
aaa
clc
call
test
push
add
xchg
fmul
mov
aaa
and
fstp
mov
(bad)
in
jo
xchg
jb
arpl
adc
stc
call
mov
sub
mov
hlt
les
and
xchg
je
cwde
pop
mov
imul
repnz
cmps
shr
popf
jne
push
pop
sub
ins
dec
stos
mov
add
(bad)
lea
nop
or
mov
scas
jo
jne
enter
jo
mov
dec
out
adc
jecxz
sub
or
int
xchg
dec
dec
mov
imul
xor
inc
adc
ret
and
add
lock
lahf
adc
dec
rol
jle
pop
xchg
dec
popf
pop
sub
or
(bad)
je
in
ret
xchg
cmp
(bad)
retf
jns
jecxz
ret
and
outs
inc
ds
pop
pop
popf
push
push
out
jg
fdiv
sbb
es
lods
or
sub
push
jnp
mov
mov
test
mov
inc
push
inc
fistp
add
cmp
xor
fwait
xchg
je
gs
lds
aam
imul
mov
(bad)
push
sar
movs
add
ret
icebp
test
sbb
pushf
dec
or
or
adc
aam
int
mov
ret
fldcw
xor
ret
jle
(bad)
cmc
aaa
js
cmps
mov
adc
push
js
gs
loopne
scas
(bad)
cld
out
inc
jg
add
retf
loope
pop
push
in
jo
es
or
je
push
mov
mov
fild
fstp
xchg
jno
push
mov
sbb
and
loope
adc
mov
fstp
movs
mov
xor
pop
dec
or
dec
in
jmp
js
in
ror
pop
fldenv
dec
sbb
mov
ins
repnz
pop
lods
xchg
loopne
jmp
lock
adc
and
lea
mov
push
inc
cs
jmp
adc
clc
bound
outs
adc
repz
cmps
jle
xor
jbe
xchg
jecxz
mov
and
push
sbb
test
repz
xchg
dec
adc
shl
pop
movq
in
cmps
pop
sbb
movs
dec
into
retf
push
jne
iret
push
and
idiv
mov
dec
shl
jmp
and
mov
sbb
clc
sub
data16
mov
push
xor
pop
sub
cmovno
ins
aas
shl
bound
loop
jp
lds
dec
test
ret
xlat
shl
(bad)
mov
imul
adc
sub
fadd
(bad)
loop
les
xchg
pop
sub
push
pop
or
pop
fs
push
xor
adc
in
xor
cmp
inc
jecxz
inc
lds
jl
pop
retf
and
mov
xchg
xor
aaa
mov
int3
in
jg
stos
sub
inc
xlat
idiv
sbb
fidivr
fldenv
test
xchg
xor
adc
es
jge
lahf
and
adc
inc
mov
sub
dec
retf
push
(bad)
push
push
aad
and
or
jecxz
jae
call
and
movs
imul
fwait
mov
leave
in
lods
mov
rcl
mov
sahf
jge
push
stc
movntps
dec
cmps
cmps
fs
mov
stc
not
scas
ins
pop
in
and
pop
inc
push
jae
movs
sub
add
out
push
dec
stc
xchg
pop
pusha
xchg
jge
jl
mov
inc
clc
mov
mov
push
cmp
js
sbb
shl
sahf
scas
pop
push
(bad)
popa
jge
dec
push
or
movs
jl
push
adc
fs
cld
ins
dec
mov
dec
add
pusha
adc
sbb
jmp
shl
ret
js
xlat
xchg
or
enter
adc
adc
jmp
ds
out
add
fsubr
cli
lods
pop
dec
loop
sbb
pop
arpl
mov
add
mov
cmp
sub
sub
test
in
loop
movs
sbb
data16
shl
ins
(bad)
or
mov
ja
test
or
adc
xchg
pop
jo
sbb
or
inc
adc
pop
es
gs
inc
test
xor
scas
cmps
retf
add
dec
mov
ror
push
push
test
jecxz
or
ret
inc
scas
shr
cmp
into
sub
or
add
in
sar
mov
movs
test
cli
aas
cmc
cmp
inc
outs
or
les
mov
xchg
pop
add
dec
jae
push
in
xchg
test
pop
push
pop
dec
(bad)
lahf
imul
nop
fs
imul
or
jmp
movs
mov
add
stos
adc
mov
daa
cmp
mov
ret
sub
loope
pop
dec
mov
lods
lods
scas
jmp
cmps
push
and
stc
jae
mov
stos
push
cmp
or
add
lds
lahf
dec
shl
dec
jl
pop
dec
pusha
add
arpl
add
jg
dec
iret
or
lds
xchg
mov
sbb
jnp
ins
mov
sub
dec
push
add
in
retf
retf
sub
frstor
hlt
push
dec
cmp
cdq
mov
sbb
imul
adc
or
cs
nop
and
nop
repnz
xor
retf
cdq
push
and
gs
outs
(bad)
(bad)
lods
mov
aas
pop
gs
fwait
sub
push
jl
cwde
clc
imul
call
scas
enter
jb
call
mov
push
rcl
jae
dec
and
push
mov
pop
div
inc
and
mov
adc
inc
repz
mov
les
hlt
fdiv
mov
lock
jmp
data16
in
mov
arpl
in
repz
mov
out
ins
push
aaa
and
jge
sub
shl
repnz
ja
sbb
mov
xor
add
mov
pushf
adc
xlat
ins
push
mov
jmp
cdq
arpl
add
leave
rcr
mov
daa
rol
into
jp
iret
pusha
cdq
xor
daa
push
xchg
push
mov
push
add
push
sti
inc
xchg
and
call
aaa
jp
push
rol
(bad)
lods
adc
jl
imul
mov
and
pushf
xchg
pop
xlat
or
cmp
xor
jle
add
(bad)
push
lahf
push
inc
push
cs
or
inc
fs
call
cmps
and
jae
loopne
jle
mov
leave
out
xor
sbb
dec
push
and
pushf
mov
cmps
pop
sub
(bad)
(bad)
mov
mov
sub
sbb
add
sbb
dec
dec
clc
out
stos
mov
xor
les
test
mov
jnp
mov
in
aas
jo
cmps
(bad)
rol
bound
pop
jmp
cli
jne
stos
outs
fcomp
push
sbb
scas
pop
sbb
push
cs
(bad)
pop
je
push
aaa
add
sbb
ins
cs
lock
int3
mov
std
mov
nop
mov
cmps
es
ins
add
pop
ins
add
jl
(bad)
mov
aad
lahf
hlt
xchg
retf
inc
imul
sbb
(bad)
jmp
test
sbb
mov
into
jg
lock
dec
dec
and
or
xor
fst
push
jecxz
xor
fiadd
mov
test
mov
arpl
xchg
inc
jmp
mov
(bad)
popa
push
dec
sbb
and
add
and
shr
popa
inc
rcl
pop
adc
mov
aaa
or
xchg
int3
fcomp
aad
sbb
dec
in
pop
pushf
push
dec
ficom
sbb
scas
in
adc
inc
xor
sbb
mov
mov
fidivr
adc
or
sub
jno
mov
fwait
adc
retf
jae
bound
repnz
lea
mov
adc
pop
inc
ss
outs
mov
inc
mov
cmps
retf
push
push
outs
mov
daa
call
cmp
mov
push
cwde
pusha
mov
cmps
dec
in
test
call
inc
outs
cld
jmp
scas
stos
shl
fiadd
mov
mov
scas
xchg
dec
jb
and
dec
ins
int
adc
xor
or
mov
shl
div
mov
and
push
or
or
icebp
dec
shl
repnz
cmp
jns
out
push
sbb
rcr
mov
mov
adc
movs
jle
(bad)
cmp
stos
adc
push
sahf
xor
aas
pop
pop
push
push
test
and
vshufps
push
js
dec
inc
cmp
xor
ins
sbb
call
or
sub
pop
call
sbb
stos
inc
cmp
stos
and
leave
or
dec
(bad)
xor
mov
sbb
sbb
repz
mov
push
ror
hlt
sbb
mov
jbe
cmps
dec
mov
stc
pop
shl
xchg
dec
neg
les
mov
cmp
xor
cmp
or
ins
push
and
mov
mov
xor
sub
mov
mov
test
adc
push
iret
test
loope
jmp
adc
int
stos
push
ss
addr16
mov
and
fld
arpl
fidivr
mov
xor
jo
mov
fsubr
jle
(bad)
inc
sub
xchg
sub
sbb
and
leave
fidiv
sar
cs
in
push
mov
out
aam
div
jno
dec
sub
lahf
(bad)
jne
push
cmp
push
out
loop
dec
dec
sub
pop
inc
add
adc
test
pop
mov
je
xchg
sbb
(bad)
movs
mov
push
daa
cmc
nop
dec
inc
fadd
mov
mov
or
xlat
mov
call
push
mov
out
inc
xchg
pop
xlat
mov
push
xchg
pop
fs
adc
xor
xchg
adc
inc
and
or
mov
in
sbb
and
mov
test
push
jae
cmp
and
jmp
shr
mov
cmp
dec
push
cdq
dec
add
(bad)
xchg
push
ins
(bad)
loope
and
pop
into
(bad)
push
mov
dec
cli
fild
push
pop
dec
mov
cli
fldenv
pop
mov
inc
mov
shr
pop
push
xor
enter
adc
adc
sbb
inc
adc
repnz
and
push
scas
movs
arpl
dec
outs
add
mov
or
lods
aaa
pop
loop
fild
add
pop
cld
ja
mov
int
lods
imul
dec
mov
add
sbb
fidiv
iret
push
idiv
dec
dec
cld
lock
inc
mov
out
and
pusha
jmp
and
or
sub
enter
or
xchg
add
das
int
mov
stos
mov
pop
ret
push
xor
cmp
loopne
les
or
fnstcw
dec
fimul
std
out
test
inc
neg
test
mov
and
mov
and
in
das
adc
retf
ds
pop
popf
pop
and
push
dec
mov
cwde
clc
lea
cld
adc
add
jmp
mov
leave
les
xchg
inc
add
popf
mov
mov
inc
pop
sbb
mov
and
xor
adc
push
int
jle
add
call
or
(bad)
and
jne
cmp
dec
cmp
pop
out
pop
mov
mov
jae
mov
es
cvtps2pi
je
arpl
sub
or
sti
mov
loop
ins
jo
call
sub
daa
mov
adc
call
adc
pop
jbe
xchg
pop
add
lea
inc
xchg
loope
rcl
stos
lods
add
sub
sbb
daa
add
aaa
mov
inc
pop
push
or
dec
in
lods
scas
xchg
data16
imul
sar
mov
xlat
push
out
sbb
into
push
xor
das
lahf
pop
rcl
push
mov
fild
jp
(bad)
xor
ins
icebp
cld
(bad)
movs
sbb
int
push
int3
jns
aad
retf
fnsave
ret
shr
in
dec
dec
push
sub
loop
fisttp
test
in
imul
or
shr
inc
push
movs
mov
jg
and
push
and
scas
cmp
aaa
jne
(bad)
sbb
scas
mov
call
jl
jbe
xchg
fwait
test
jae
fs
or
mov
xor
adc
nop
mov
or
aad
jbe
pop
sbb
lahf
sbb
sub
mov
dec
stos
ret
pusha
jl
jp
sub
and
xchg
lods
je
pop
cmp
mov
fild
sub
loope
cdq
push
shr
aaa
in
inc
fdiv
or
cmp
scas
out
fwait
sub
scas
xchg
push
xor
repz
xor
dec
inc
jb
mov
in
xor
mov
pop
fidivr
mov
dec
fmul
push
xor
jle
xor
mov
push
gs
or
in
in
int
out
int
cmp
and
inc
aas
rol
stos
sub
clc
inc
loop
sub
pop
mov
mov
mov
mov
std
std
fcomip
loopne
(bad)
fidiv
popf
dec
or
sbb
gs
mov
add
dec
loop
cdq
stos
inc
mov
popa
cmp
ja
push
movs
inc
fucomi
and
mov
jb
enter
mov
cdq
cs
das
sbb
outs
imul
push
iret
jae
pop
inc
cmp
fistp
cmc
out
mov
aas
(bad)
or
sbb
jo
jg
xchg
repz
cli
xor
mov
mov
arpl
xor
repz
ror
sti
jg
jmp
stos
lea
cmp
cdq
addr16
lock
pop
outs
add
push
sbb
int
xchg
inc
retf
push
das
icebp
lds
cld
repnz
pusha
jno
mov
out
sub
add
dec
stos
and
out
jmp
mov
push
push
inc
sbb
lods
in
std
fild
and
loopne
repnz
dec
xor
sar
repz
jne
xchg
sar
pop
scas
add
xchg
and
fist
mov
dec
outs
pusha
js
cli
ja
push
icebp
cmp
add
retf
test
es
adc
fidivr
popa
in
dec
jle
jl
mov
inc
cmps
jo
cmp
xchg
sahf
enter
data16
sti
sub
add
sbb
inc
fdivr
call
into
push
mov
sub
cwde
stc
(bad)
popa
sub
jmp
sub
mov
mov
adc
push
inc
fmul
and
or
pushf
movs
pop
inc
cld
rcl
(bad)
cli
imul
in
mov
jge
mov
clc
cdq
xlat
cmc
imul
or
adc
mov
cmps
pushf
scas
mov
mov
cmp
xchg
or
movs
loope
xor
xchg
or
cmp
add
and
das
lds
test
push
cmp
adc
push
jo
add
lods
dec
mov
push
and
and
fiadd
pop
jge
push
xchg
outs
in
xchg
ins
xlat
adc
cmps
jp
adc
mov
push
in
rol
jns
add
daa
imul
dec
pushf
mov
push
cs
frstor
xor
pop
icebp
sti
mov
adc
push
call
(bad)
pop
mov
hlt
(bad)
stos
jecxz
mov
int3
clc
dec
dec
and
inc
adc
jmp
dec
mov
mov
xcrypt-cbc
cmps
aad
mov
mov
add
sbb
push
hlt
xlat
jo
pop
sbb
cld
dec
dec
xor
enter
in
int
enter
test
(bad)
or
or
loope
xlat
outs
fisub
les
pusha
aam
mov
repnz
jbe
lods
dec
into
inc
mov
mov
xchg
popf
adc
pop
ror
aas
popf
loop
(bad)
ja
stos
mov
jmp
pushf
cmp
mov
cmc
jnp
(bad)
push
test
popa
out
inc
mov
push
pop
dec
inc
jmp
mov
add
add
leave
leave
repnz
and
bound
push
scas
arpl
xchg
(bad)
mov
int3
mov
stc
and
push
jne
ret
(bad)
iretw
mov
dec
fdivr
sbb
mov
lods
jnp
sti
add
push
icebp
ror
lds
pop
cwde
scas
adc
inc
sub
call
mov
mov
add
mov
movlps
and
pop
mov
imul
call
ret
loop
popf
stc
mov
(bad)
pop
xchg
xchg
jmp
retf
icebp
pop
adc
inc
pop
ret
pop
out
cmp
ja
imul
xchg
fbstp
cmp
add
or
pop
popa
dec
(bad)
loopne
mov
cmp
loop
push
test
aam
cmp
fist
ret
mov
add
jne
imul
pop
mov
fistp
and
mov
int
pop
dec
mov
je
pop
je
or
push
out
add
or
ret
cmp
mov
or
call
mov
sti
jmp
adc
test
pop
sbb
mov
retf
mov
and
mov
addr16
and
repnz
(bad)
daa
imul
pop
mov
hlt
lahf
sub
mov
pop
fnclex
std
cmp
rcl
sub
pop
ret
mov
push
xor
cmp
xchg
test
inc
push
dec
in
dec
xchg
push
arpl
push
aad
jg
push
and
rcr
in
out
fadd
dec
(bad)
shl
mov
xchg
mov
add
lea
sbb
and
adc
movs
cwde
mov
pusha
stc
imul
or
mov
mov
mov
loope
cli
mov
lods
pop
adc
inc
call
push
dec
sub
das
push
jnp
mov
or
adc
dec
ins
or
(bad)
call
hlt
pushf
sub
mov
cmp
xchg
int3
popf
mov
mov
les
cmp
lods
inc
sbb
retf
leave
jmp
add
inc
out
mov
inc
sbb
xor
push
out
push
sbb
or
mov
std
arpl
in
add
mov
inc
dec
rcr
loop
fld
stc
mov
and
retf
out
xadd
sub
inc
pop
xchg
sti
fstp
loopne
mov
fbld
in
fidivr
adc
imul
sub
mov
ins
inc
shr
inc
mov
leave
aam
in
mov
je
out
enter
dec
dec
jmp
fist
cmp
fwait
pop
out
hlt
mov
movs
pop
lea
test
call
ret
in
repz
jecxz
and
and
or
xor
add
mov
ja
ss
mov
xchg
dec
xor
fist
mov
pop
xchg
dec
mul
movs
mov
xor
inc
push
fst
test
or
mov
not
and
fnsave
push
mov
xchg
mov
inc
or
or
aam
mov
sbb
enter
cmp
push
jge
lods
fcmovb
push
push
sbb
push
pop
xor
mov
test
sbb
pop
pop
sbb
test
imul
icebp
pop
retf
or
aam
jo
(bad)
xchg
mov
adc
nop
jbe
(bad)
xor
lahf
popf
gs
(bad)
(bad)
mov
jge
mov
out
inc
repz
dec
ins
jae
inc
loop
mov
or
push
and
lods
call
repz
outs
xchg
push
out
ja
xchg
gs
ret
mov
pop
jge
out
sbb
sbb
ret
lods
neg
dec
jmp
aaa
fidiv
add
xchg
leave
lahf
nop
push
aam
cld
sub
and
xchg
push
xor
popa
xchg
stos
and
repnz
inc
in
sahf
pop
adc
sub
mov
imul
mov
push
add
jns
mov
xchg
sbb
ret
(bad)
out
jno
inc
push
jb
cli
inc
sub
into
pop
or
cld
mov
bound
icebp
mov
cmc
xchg
jge
pushf
(bad)
cmc
jns
pop
sub
lea
cld
bndstx
mov
or
std
lods
xor
cmps
pop
movs
jbe
or
hlt
retf
enter
(bad)
mov
and
cmp
xchg
jecxz
jle
sbb
push
cmps
dec
xchg
aam
xlat
pop
stos
int3
jg
push
and
mov
je
jge
sub
mov
adc
outs
sbb
pop
cmovge
out
push
out
cs
sub
(bad)
(bad)
aas
fwait
jl
cmp
(bad)
jp
xchg
loopne
fdivr
sahf
(bad)
popf
mov
scas
xchg
cdq
pop
and
push
xor
jle
and
cmp
iret
xor
rcl
pop
in
dec
mov
fwait
mov
push
mov
ja
retf
inc
ins
xor
popa
cmp
inc
dec
cli
clc
(bad)
scas
out
sub
xchg
xchg
lds
xor
jge
(bad)
or
test
in
push
mov
cmp
nop
cld
mov
pop
div
adc
push
stos
pop
mov
dec
add
icebp
xchg
fsub
rcr
pop
test
dec
stos
jno
call
in
mov
fisttp
cmp
scas
or
in
add
pushf
pop
pop
test
push
test
push
jbe
xor
lahf
ins
aaa
push
arpl
dec
or
dec
mov
cld
mov
stc
jae
ror
add
pop
(bad)
in
inc
mov
pushf
das
ret
cld
imul
mov
add
out
iret
sahf
imul
add
pop
je
jo
cmp
push
ss
sbb
mov
push
ss
mov
xor
aam
js
(bad)
mov
fistp
adc
popf
mov
mov
adc
ret
test
popa
mov
pusha
retf
aad
pop
dec
loop
sbb
pop
iret
outs
cmp
lods
xlat
xor
adc
jmp
mov
retf
loop
mov
cdq
mov
add
fdivr
inc
push
ins
stos
xchg
cli
push
outs
gs
mov
sbb
int3
and
sahf
fsub
push
dec
mov
call
push
adc
call
adc
xchg
loope
fisub
into
push
sti
inc
inc
cmp
test
lea
lods
aaa
push
jns
mov
sub
sub
cmp
pop
xor
repz
dec
bound
mov
stc
rcr
or
std
jle
cmp
xor
in
leave
pushf
mov
push
xchg
mov
mov
fdivr
push
push
cmps
sbb
dec
out
movs
fnstcw
add
or
outs
sbb
mov
and
popa
xlat
dec
outs
call
push
mov
sub
repnz
adc
pop
(bad)
pop
sbb
jmp
inc
cmp
clc
int
cmp
adc
jae
mov
adc
jnp
dec
jo
aam
pop
jns
pop
jb
jnp
call
dec
add
iret
mov
sbb
cmp
cmc
mov
jmp
or
loop
cld
repnz
in
cli
jne
shl
or
fimul
xor
rcr
scas
mov
(bad)
(bad)
out
xchg
scas
sub
and
mov
lds
fwait
mov
fld
mov
(bad)
mov
loope
movs
(bad)
out
push
stos
sti
shl
inc
pop
lahf
mov
or
push
fwait
pusha
(bad)
push
mov
pop
popf
bound
mov
xlat
fdiv
sub
xlat
mov
mov
cli
xchg
cmp
retf
adc
xchg
add
mov
sbb
mov
fidiv
pop
test
popf
and
mov
sbb
iret
jae
mov
xor
sahf
mov
mov
cmc
pop
cmps
mov
sub
mov
fcom
js
add
loope
out
xor
push
sbb
push
pop
fcmovbe
xchg
and
call
add
call
cmps
add
xchg
hlt
jnp
jb
call
fsubr
bound
cmc
pop
cmp
out
movs
mov
sbb
jo
(bad)
in
mov
sbb
mov
mov
call
imul
cld
fimul
mov
loopne
mov
aaa
cmp
(bad)
hlt
retf
or
jmp
adc
idiv
je
psubd
jbe
and
fwait
dec
or
push
sbb
ret
sub
cdq
jl
mov
repz
aad
data16
add
leave
xchg
lahf
sbb
inc
push
addr16
sbb
jecxz
and
lds
sbb
movs
shl
push
neg
popf
lahf
sub
xor
(bad)
lock
test
add
test
dec
fstp
mov
out
pop
fs
dec
ja
pusha
std
hlt
mov
retf
fcomp
push
and
xor
ds
dec
sbb
cmp
movs
out
adc
pop
and
(bad)
jno
cmp
shl
add
ret
add
(bad)
mov
sbb
pop
mov
or
dec
loope
(bad)
(bad)
xchg
sahf
sbb
stc
mov
(bad)
pushf
scas
pushf
mov
into
or
push
mov
xlat
ds
jg
sbb
shr
adc
ds
loopne
sub
jbe
not
loop
(bad)
les
les
pop
add
dec
sub
in
stos
dec
cwde
dec
mov
push
mov
mov
push
xor
dec
repz
adc
xchg
xchg
loop
xor
retf
loopne
iret
inc
je
ins
xchg
xor
arpl
adc
jmp
xchg
mov
movs
pop
mov
nop
nop
jmp
test
xchg
push
std
mov
or
adc
xor
push
push
mov
push
add
fdiv
inc
stos
jle
adc
jl
mov
dec
mov
lods
int3
out
jo
jp
mov
inc
add
test
mov
xor
jae
nop
in
(bad)
inc
inc
mov
(bad)
inc
inc
or
cmp
sbb
sub
cmp
fsubr
adc
and
mov
(bad)
sbb
(bad)
cmovno
push
jmp
rcl
fcomp
push
add
shl
icebp
cld
in
dec
mov
mov
rcr
rcl
fxch
fadd
movs
into
test
out
and
jo
pop
pop
add
(bad)
fst
test
sub
retf
dec
scas
jmp
loop
or
dec
pop
dec
mov
mov
pop
int
iret
cmp
push
test
icebp
shl
lods
(bad)
stc
push
push
cmovno
repnz
xor
pushf
retf
dec
push
inc
dec
and
push
jle
movs
or
inc
xor
mov
push
nop
les
in
aam
sbb
aaa
(bad)
push
jae
mov
fnstsw
and
out
mov
cmps
mov
xor
fs
lock
xor
or
fs
add
sub
test
jae
retf
not
mov
out
sbb
adc
or
mov
mov
mov
xor
fldenv
(bad)
pop
(bad)
loop
inc
movs
pop
inc
mov
push
push
inc
sahf
mov
cld
push
xchg
loopne
xchg
(bad)
jg
icebp
push
lds
adc
das
mov
inc
das
jnp
xchg
fwait
add
int3
dec
or
lods
xor
xchg
jp
imul
pop
lods
adc
adc
(bad)
cmp
loop
xor
jb
dec
mov
mov
outs
jle
sahf
push
xlat
dec
xor
mov
mov
js
jne
add
(bad)
cmp
mov
scas
iret
xchg
push
fwait
push
scas
pusha
jmp
push
jbe
dec
ins
loop
mov
(bad)
in
cmp
jle
(bad)
aad
(bad)
dec
scas
out
cmp
dec
mov
mov
test
leave
call
loope
cmp
cmp
pop
gs
mov
call
inc
cmp
aas
fstp
out
xchg
ins
inc
sahf
add
ds
and
idiv
push
push
cmp
stc
cmp
xor
xchg
lahf
movs
lahf
fisttp
inc
and
adc
inc
jmp
rcl
jl
imul
cmp
adc
lea
pop
xchg
(bad)
cwde
sub
cdq
push
mov
pop
xchg
lods
push
or
jo
sbb
mov
push
xchg
dec
add
sti
or
sbb
push
ins
data16
movs
fnstenv
sbb
sub
mov
mov
mov
mov
mov
sbb
mov
xchg
addr16
push
lock
jmp
push
(bad)
dec
in
dec
scas
(bad)
xchg
jge
mov
mov
mov
std
icebp
stos
inc
mov
int3
sub
pop
cmp
fstp
in
dec
pop
xchg
cmp
loope
clc
das
int3
in
jg
(bad)
movs
sbb
ficom
loop
into
fisttp
sar
sbb
mov
push
pop
dec
dec
mov
ret
dec
cmps
push
ins
ins
fdivr
ins
jo
or
xchg
retf
adc
mov
fwait
test
adc
fdivr
xchg
aaa
dec
inc
push
push
dec
pop
stos
or
test
mov
jle
dec
fwait
mov
int
mov
rol
ror
ins
inc
xor
or
fdiv
shr
and
push
(bad)
and
shr
adc
or
inc
scas
jle
bound
aas
cmps
inc
jecxz
fstp
aas
cmc
(bad)
and
pop
xchg
sub
add
je
sahf
loop
jno
enter
mov
adc
sti
pop
std
popf
not
jno
push
inc
xor
add
lds
and
cdq
stos
mov
test
outs
add
fnstsw
outs
mov
push
fs
dec
nop
push
and
and
lods
arpl
bound
call
imul
shr
pop
sbb
mov
enter
fdiv
pop
mov
push
xchg
loopne
(bad)
fst
add
fild
imul
sahf
mov
ins
dec
xchg
push
jl
pop
cmp
jns
jns
cmc
icebp
lods
movs
jmp
xchg
pop
ins
test
sbb
(bad)
sub
push
call
xchg
sahf
sub
dec
jns
xchg
dec
ins
sbb
icebp
or
aas
pop
sar
loope
jns
inc
pushf
not
call
jne
lods
or
mov
ret
add
mov
lods
les
and
jae
adc
jo
ins
xchg
inc
fistp
jbe
sub
cmps
mov
out
adc
retf
repz
xchg
retf
scas
ret
les
xchg
scas
inc
popa
and
bound
scas
loopne
loopne
aaa
dec
enter
xchg
cmp
es
shr
popa
repz
sub
sbb
add
jno
sbb
or
shl
mov
mov
pop
dec
(bad)
jecxz
stos
xchg
push
mov
mov
movs
retf
jb
(bad)
cwde
xor
lock
jmp
out
rcl
and
mov
jne
out
fwait
mov
xchg
push
add
push
ins
xor
outs
pop
(bad)
pusha
ins
test
ret
cdq
addr16
enter
aas
jmp
xor
add
xor
pop
inc
push
cmps
mov
sub
out
sub
pushf
mov
pop
mov
mov
fcom
lods
stos
pop
out
push
retf
push
(bad)
pop
out
and
loop
adc
pop
xchg
pop
and
sub
les
out
jo
sbb
pop
cmc
mov
cmc
popf
xor
cli
shl
clc
(bad)
mov
sbb
ins
loopne
int
fsincos
mov
push
fwait
out
jl
mov
(bad)
or
ret
xchg
cmp
cmps
and
jle
jl
jle
test
push
and
(bad)
jge
sbb
test
ins
add
es
pop
fs
in
add
jb
jl
sub
repz
loope
pop
jo
ins
rcl
sub
arpl
les
push
xor
push
pop
cmp
jg
push
fcom
jmp
ret
push
cli
aas
mov
cmps
sahf
mov
ror
dec
mov
aad
stos
in
mov
ret
mov
mov
movs
adc
and
mov
ficomp
mov
popf
sar
jge
sahf
sub
jmp
leave
mov
and
outs
outs
jb
fwait
stc
add
loope
pusha
xlat
ret
sbb
(bad)
jg
add
inc
jp
jge
stos
mov
cmp
lods
cmps
push
sbb
jmp
rcr
stos
sub
mov
xor
inc
inc
jge
xor
mov
aas
mov
cmp
test
into
pop
or
fiadd
mov
dec
dec
pop
xchg
mov
dec
cwde
add
rcr
adc
pop
fdivr
cs
cs
cmp
ins
jl
xchg
cmp
jl
mov
rcr
jne
jmp
test
mov
xchg
fwait
lahf
xor
sbb
sub
push
adc
and
inc
dec
test
mov
and
xchg
movs
pop
addr16
ret
pop
ins
mov
jmp
inc
dec
movs
imul
in
push
jbe
sbb
sbb
cld
jmp
mov
jb
cmp
jmp
jle
mov
pop
jae
xchg
je
aaa
dec
rcr
fmul
loop
or
add
push
sbb
movs
push
shr
and
ins
adc
push
std
dec
xor
scas
push
(bad)
push
js
and
aad
xor
call
out
cmc
pop
out
mov
ins
and
inc
push
inc
fidivr
jg
jle
fisttp
mov
add
pop
cmp
xor
jne
jbe
mov
add
nop
nop
mov
mov
imul
fcomp
fst
test
add
cmp
pop
add
ror
popf
mov
xchg
or
cmp
cld
fcomp
xchg
xchg
stos
or
out
xchg
ret
loop
mul
jmp
sahf
xor
xor
lea
cmp
pop
cmp
idiv
bound
outs
jecxz
fcom
movs
clc
ins
cli
in
and
ret
pop
imul
jmp
cmc
call
dec
mov
cmc
in
adc
fisubr
push
ins
loop
popf
mov
pop
sbb
popa
add
sbb
std
sbb
adc
jne
sbb
cmps
pop
fisttp
or
push
cmc
mov
cld
mov
jle
jns
xor
jmp
mov
mov
push
out
stos
dec
or
je
loope
out
dec
scas
jnp
or
cmp
stos
jae
test
int3
xchg
jl
into
jmp
out
data16
mov
xchg
sub
adc
push
adc
pop
jl
mov
stc
out
xchg
cmp
fld
xchg
ins
(bad)
xchg
in
fsubr
fcomp
inc
mov
xlat
jmp
test
push
lods
test
(bad)
pop
mov
dec
cmps
jae
(bad)
jns
(bad)
(bad)
dec
ins
lds
stc
and
jle
mov
add
xchg
mov
mov
popf
loop
mov
add
fimul
fisubr
loopne
lds
(bad)
sbb
cmp
and
dec
test
cmp
jo
mov
adc
dec
(bad)
call
ret
lods
movs
shl
retf
push
jecxz
mov
inc
sbb
mov
test
push
adc
ins
mov
inc
sub
and
jne
sbb
shr
and
sbb
jl
ins
inc
jae
sub
push
out
enter
in
ret
dec
ins
jecxz
int3
add
and
movs
outs
in
or
adc
test
in
and
mov
pop
xchg
xlat
fs
mov
and
cmp
loopne
daa
push
or
sub
sub
repnz
stos
dec
and
retf
jbe
add
xchg
aas
inc
lods
ins
fdivr
std
push
pop
or
test
adc
xchg
xchg
(bad)
(bad)
sar
lods
mov
adc
mov
fcom
cmps
jnp
out
in
aas
jo
or
fs
jb
in
stos
mov
test
cmp
cmp
std
jno
(bad)
lods
shl
push
test
pop
stos
imul
out
inc
leave
scas
neg
arpl
mov
jecxz
sbb
mov
or
mov
outs
bound
pop
std
sub
dec
ins
pop
(bad)
imul
data16
inc
inc
out
jne
and
mov
dec
mov
mov
adc
pop
jmp
in
jecxz
std
sub
enter
adc
jl
xchg
cmps
jne
add
imul
imul
scas
fs
dec
sbb
cs
imul
sub
not
xor
and
iret
fwait
rcr
cwde
add
jae
nop
loop
int
aas
pop
bound
adc
(bad)
loope
adc
mov
fst
mov
adc
fiadd
cmp
adc
mov
es
lds
adc
aad
dec
xchg
mov
gs
adc
inc
das
add
xor
scas
leave
add
call
pop
xchg
int
push
outs
add
sub
mov
xchg
lock
imul
pop
inc
cmps
aam
psubq
call
in
mov
adc
jno
mov
sub
call
test
add
mov
repnz
ins
xchg
cwde
and
cld
aas
iret
stos
adc
lock
inc
cmp
adc
movaps
mov
xchg
push
sub
dec
sub
bnd
shl
pop
(bad)
iret
mov
stos
ja
dec
adc
loope
out
pop
in
xor
jmp
inc
mov
xchg
xor
or
sahf
lods
in
mov
test
adc
xchg
and
inc
or
and
mov
(bad)
sbb
xor
mov
outs
mov
in
repnz
(bad)
icebp
leave
outs
pop
jecxz
je
(bad)
pop
les
jbe
in
or
sub
jecxz
in
test
xor
fwait
repz
leave
push
out
(bad)
in
xchg
mov
cmp
pop
push
mov
cmp
int3
fwait
lds
inc
mov
xchg
xchg
addr16
(bad)
scas
out
push
ds
lahf
pop
out
jbe
pop
and
test
dec
xchg
cmp
add
or
jne
xor
dec
jne
xor
inc
adc
ret
iret
cmp
dec
inc
call
lods
pop
adc
rep
dec
xchg
cmp
xor
inc
add
mov
mov
pop
push
pop
pop
jg
xor
jo
lds
dec
or
and
int
repz
adc
lods
addr16
loop
sub
mov
cmp
mov
stos
hlt
retf
addr16
add
iret
lods
mov
loop
adc
aad
push
inc
jmp
inc
cmps
lea
jns
stos
popf
dec
adc
test
inc
mov
xlat
pcmpgtb
out
xchg
sahf
push
sbb
mov
push
imul
mov
ret
mov
xor
push
jae
mov
mov
mov
out
sub
adc
mov
xor
sbb
push
add
push
lods
pop
mov
mov
or
sub
pusha
in
add
dec
jmp
ja
shl
and
lods
pop
inc
dec
in
icebp
retf
mov
pop
je
test
adc
dec
(bad)
cld
cdq
cmps
loopne
mov
test
xor
aaa
adc
ds
jne
pop
jae
cmps
dec
push
xchg
push
loope
ss
test
and
inc
push
jg
push
shr
in
frstor
mov
push
jo
popf
stos
and
and
push
mov
outs
cmps
and
repz
cmc
call
mov
inc
add
xchg
mov
les
xchg
stc
sbb
jo
adc
bound
xor
xchg
sub
test
mov
or
daa
add
in
jecxz
dec
out
arpl
movs
stos
neg
sbb
jno
push
sbb
or
and
jns
addr16
inc
add
jb
pop
push
popa
xchg
retf
sbb
rcl
mov
sbb
cmp
sti
aaa
mov
vsqrtsd
add
dec
pop
jecxz
fsubr
aam
dec
xchg
mov
das
xchg
xor
repnz
xor
xor
xor
mov
or
dec
jae
in
(bad)
hlt
es
xor
rcl
dec
addr16
cmp
mov
ret
adc
pop
mov
les
sub
mov
jno
(bad)
push
sbb
push
daa
add
pop
xlat
mov
mov
fldenv
sub
ficomp
add
sub
mov
in
adc
aam
sub
jecxz
mov
addr16
inc
daa
ret
mov
jmp
stos
sub
nop
(bad)
xchg
lods
xor
lods
cld
int3
add
stos
pop
test
mov
mov
cmp
jle
or
pop
outs
jp
ror
add
ret
mov
inc
rcl
inc
call
jnp
and
fcom
pop
sbb
pop
cmp
arpl
mov
mov
aad
inc
retf
mov
mov
sbb
jge
sbb
adc
dec
loope
fs
ret
mov
jnp
pop
pop
push
sahf
inc
movs
jno
daa
xlat
(bad)
xor
popf
mov
dec
dec
movs
pop
daa
(bad)
das
cwde
stos
mov
movs
pop
mov
xchg
pop
jge
fwait
nop
(bad)
sti
pushf
adc
and
lea
(bad)
imul
sub
jmp
and
dec
cmps
pop
pop
jae
jl
pop
xchg
arpl
pop
cmp
pushf
xchg
loope
jo
ja
out
arpl
sbb
pop
push
jle
lahf
nop
test
loopne
xor
inc
loopne
loopne
bound
call
gs
or
mov
(bad)
fbld
pop
sbb
mov
fdivr
ror
rcl
(bad)
cmp
aaa
mov
mov
ins
out
arpl
sub
push
add
sbb
call
or
rcl
jnp
sub
xchg
cmp
aam
lods
add
sbb
clc
push
dec
imul
in
sub
in
aad
(bad)
ins
test
xor
(bad)
xchg
and
sub
je
iret
push
sahf
cs
dec
aaa
out
mov
sbb
ret
adc
xor
cli
mov
push
pop
dec
cmc
jae
rcl
jno
movs
pop
xchg
jo
inc
cli
js
rol
call
enter
mov
mov
jle
xchg
or
das
pop
mov
mov
jg
(bad)
fadd
xchg
ins
lock
call
ss
lock
icebp
dec
sahf
mov
neg
pusha
std
stos
loopne
lods
clc
cmps
in
mov
add
cwde
test
jne
lods
xchg
in
add
cmc
push
xor
sub
sbb
cmp
fs
and
pop
push
fmul
leave
retf
loope
mov
mov
xchg
lods
push
push
cmp
cmp
out
adc
loopne
das
mov
dec
jnp
adc
in
in
repz
sbb
pop
cs
je
and
cmp
xor
pop
sti
in
mov
je
ins
ins
fs
sar
iret
loop
stos
jo
mov
nop
mov
sti
xchg
push
dec
cmps
addr16
adc
add
mov
push
(bad)
cmp
jp
test
mov
or
out
rcr
in
pop
(bad)
loope
inc
mov
push
inc
pop
jno
inc
add
jecxz
call
(bad)
enter
or
rcr
jle
ins
sbb
ror
add
test
lds
xor
sbb
jae
jno
jae
push
dec
lds
lods
xchg
shl
push
sub
(bad)
and
jb
test
retf
xchg
ss
cmp
loop
add
dec
icebp
imul
dec
sub
add
mov
fcomp
nop
shr
push
or
iret
jae
mov
aas
imul
sub
mov
movs
push
(bad)
lds
xor
push
out
and
ja
fucompp
lds
sub
movs
sub
mov
xor
int
loop
rcr
fcom
cmp
add
add
mov
adc
mov
je
pusha
add
sbb
adc
xor
lods
out
and
loope
dec
popa
ror
sahf
leave
nop
mov
mov
xor
sbb
fst
add
mov
stc
inc
cmps
jecxz
test
pop
push
adc
ret
in
not
stos
add
int3
mov
mov
add
xor
adc
(bad)
in
stos
(bad)
scas
sub
sti
mov
dec
adc
or
repz
bound
mov
xor
repz
retf
dec
ins
push
adc
aas
dec
test
sbb
inc
(bad)
in
call
(bad)
sbb
ret
ret
cdq
aas
ins
xor
loop
xor
pop
into
xor
sbb
sti
pop
push
or
push
cld
out
jo
cmp
leave
sar
and
ins
js
push
leave
ret
fild
lock
push
enter
jg
outs
les
dec
xchg
rol
xchg
sub
in
in
jmp
push
(bad)
mov
addr16
(bad)
adc
add
mov
in
and
mov
pop
jge
loop
sbb
ins
push
add
adc
pop
adc
rcl
fstp
bound
cmp
add
arpl
mul
test
xchg
sbb
mov
in
ins
loop
dec
xchg
fdiv
jp
cmp
add
mov
sub
fwait
cld
pop
jmp
sub
cmp
jg
or
pop
adc
sbb
rcr
jo
test
in
sbb
gs
xchg
in
jmp
jge
sbb
retf
call
mov
ins
imul
pop
icebp
fcom
sbb
cmp
pop
jecxz
and
and
out
test
adc
in
sub
fidiv
pop
sbb
inc
sahf
dec
pop
xchg
ins
out
xchg
cmp
adc
and
sbb
scas
dec
push
fs
pop
mov
stc
add
in
push
mov
mov
pop
inc
jo
shr
add
rol
stos
xchg
adc
pop
mul
push
fild
lahf
call
sbb
fisttp
mov
inc
jbe
ja
cmc
xchg
sbb
or
cmp
imul
in
push
imul
aas
ffree
call
push
clc
dec
(bad)
lahf
call
bound
stc
inc
in
add
(bad)
xor
scas
or
int3
fldcw
in
es
push
and
push
test
and
add
push
sub
or
push
dec
imul
test
(bad)
lock
adc
and
leave
test
pop
inc
mov
mov
ror
pop
sbb
sub
ds
jo
loop
cmp
inc
fcmovbe
jmp
or
pop
xor
mov
bound
jne
lods
test
jle
inc
jbe
mov
int3
arpl
gs
xor
push
ss
push
dec
popa
jmp
pop
sbb
dec
mov
fdivr
loopne
test
cmp
mov
push
shl
inc
retf
ds
shr
int
ss
and
pop
out
loop
inc
mov
pop
shr
jne
ret
add
xor
jno
sbb
xchg
sub
nop
mov
shr
test
in
xor
retf
mov
test
rcr
scas
aas
and
popf
scas
imul
fucomp
mov
jnp
in
and
std
sub
adc
dec
inc
(bad)
mov
cmp
enter
adc
push
iret
repnz
gs
movs
pop
arpl
ret
outs
out
and
add
les
mov
ss
sub
push
std
push
aad
mov
or
loop
or
rol
push
cmps
mov
add
movs
mov
ret
aad
sbb
out
cmps
cdq
pop
push
pop
mov
test
dec
enter
int
lods
and
inc
pop
out
aaa
inc
push
lds
add
sbb
js
stos
xchg
or
push
mov
jae
pop
lar
(bad)
lock
je
fstp
xchg
dec
pop
or
punpckhdq
xor
push
jo
pop
es
and
in
fst
enter
xchg
enter
push
dec
xor
jb
dec
rcl
jno
test
mov
dec
push
mov
sub
(bad)
dec
mov
shl
or
xchg
shl
in
add
aam
popf
push
xor
pop
push
adc
mov
test
jge
fdivr
ret
pop
add
ret
fs
stos
mov
push
imul
in
mov
push
pusha
inc
aas
jmp
add
lock
xor
mov
fs
fcmovne
lahf
jae
xchg
pop
lods
mov
adc
aas
pop
scas
(bad)
shl
out
mov
mov
push
xor
push
lods
mov
pop
mov
sbb
xchg
push
or
(bad)
std
jg
pop
dec
int
mov
inc
push
repnz
sti
movs
mov
pop
add
cmp
inc
ror
cs
ror
in
test
dec
rol
adc
cmp
out
push
dec
jnp
or
add
sub
jae
mov
les
lods
cmp
pop
dec
push
sbb
jge
or
je
leave
xchg
push
and
sahf
repnz
adc
ins
cmp
popa
sti
lods
or
jecxz
adc
jg
add
xlat
ds
lea
push
cmp
int
jmp
mov
or
mov
xchg
xor
adc
fdivrp
and
pusha
or
mov
shl
fcomp
bound
and
imul
rcl
xchg
fadd
cmp
jp
push
imul
aaa
pop
push
and
cmp
xchg
inc
repnz
and
fdivr
push
jp
cmp
add
(bad)
out
jp
cdq
retf
cld
cs
adc
aaa
mov
frstpm(287
loopne
sti
int
out
or
xchg
(bad)
shl
adc
inc
jb
push
sbb
or
jae
mov
cmc
je
scas
adc
push
mov
call
xor
mov
mov
jmp
add
cmp
inc
adc
cmp
pop
mov
test
outs
fist
or
mov
mov
icebp
mov
icebp
push
xchg
mov
ret
cmp
imul
mov
cmp
test
mov
popa
fist
pop
or
pusha
inc
or
xchg
int
ins
mov
push
mov
jle
sbb
jmp
mov
popa
mov
jmp
sub
inc
xchg
sub
mov
push
les
sub
mov
add
pop
popf
push
xchg
jne
ja
(bad)
loopne
cwde
stos
js
iret
adc
shl
(bad)
or
stos
in
dec
jne
je
sbb
cmp
(bad)
ins
xor
mov
jp
xor
pop
or
adc
ja
and
jbe
jne
inc
ficomp
cmp
sub
mov
mov
mov
mov
rol
inc
and
arpl
movs
scas
call
data16
out
pusha
jl
push
pop
cmp
cmps
popa
lea
jp
inc
leave
addr16
xchg
scas
mov
or
xor
mov
das
and
pop
adc
loop
jmp
jae
ins
in
test
xchg
out
xor
mov
vsubpd
mov
mov
rol
imul
cli
sub
test
aad
add
lock
cmp
repz
fwait
mov
adc
stos
dec
add
dec
cwde
test
in
ret
aam
scas
xor
xchg
shr
add
pushf
xor
xor
mov
cmp
hlt
dec
mov
push
out
add
cmp
or
mov
cli
sti
push
lea
jle
retf
mov
hlt
fxch
scas
lods
cwde
pop
(bad)
and
cmps
xchg
dec
sbb
xlat
bound
enter
leave
enter
div
pop
and
inc
jae
jle
add
push
or
jp
mov
test
add
ins
sub
imul
jp
add
inc
fucomi
jne
ret
add
inc
imul
add
jg
stos
shl
mov
cdq
lods
push
sbb
(bad)
test
jecxz
and
sub
test
mov
dec
call
retf
loop
and
jl
mov
(bad)
gs
and
(bad)
es
scas
cmp
stos
test
inc
push
inc
mov
mov
movs
out
mov
xor
xlat
or
xor
xchg
test
rcr
dec
leave
(bad)
push
and
mov
ss
adc
enter
mov
test
jmp
mov
cmps
push
test
inc
pop
xchg
sub
or
add
mov
mov
fidivr
rcr
(bad)
mov
push
test
cwde
cmp
pop
xchg
out
or
push
out
push
je
adc
lds
neg
es
inc
cwde
mov
fimul
xor
stc
arpl
sub
push
pop
fimul
jb
mov
ins
scas
inc
fistp
lds
or
pop
pop
aam
mov
call
retf
ins
sahf
add
xlat
rcl
repz
pop
cmp
hlt
imul
and
cmp
xlat
repnz
xor
mov
jae
jecxz
xchg
mul
dec
mov
iret
popf
sbb
mov
push
inc
adc
cmp
out
fwait
hlt
(bad)
pop
jecxz
push
dec
mov
xor
mov
imul
cmp
push
xchg
push
jmp
cmp
and
aas
xchg
or
mov
lods
jg
mov
xchg
lods
mov
mov
pusha
in
dec
xor
cmp
mov
jmp
pop
in
jno
dec
ret
jne
inc
mov
push
xor
xlat
or
hlt
stc
ret
xlat
push
cmps
popa
xchg
lods
js
sahf
fimul
retf
icebp
mov
(bad)
fcmovne
iret
dec
fisubr
xchg
xchg
xchg
sbb
int3
xlat
bound
and
jo
cmp
sbb
pop
xchg
repz
sbb
jmp
adc
mov
cmc
pop
je
add
dec
mul
arpl
test
mov
mov
aas
leave
jae
std
pop
movs
in
mov
repz
xchg
(bad)
daa
and
xlat
lods
mov
adc
and
mov
(bad)
cld
mov
lds
dec
cmp
mov
sub
sub
mov
movs
push
outs
xlat
mov
xchg
sahf
pop
scas
(bad)
rcr
mov
loope
aam
cmp
sbb
inc
jg
cmp
pop
jmp
test
jg
cmp
(bad)
mov
inc
das
daa
mov
push
adc
lds
sub
add
ds
adc
push
adc
outs
mov
ss
xor
aad
xor
mov
retf
ins
repnz
pushf
mov
adc
adc
ret
lods
pop
xchg
adc
in
xor
in
out
pop
movs
mov
mov
cmc
sti
dec
in
nop
std
stos
iret
mov
inc
dec
shl
and
imul
push
sub
fs
pusha
xchg
test
mov
into
add
lods
jns
lods
jns
dec
pusha
test
push
adc
stos
mov
or
iret
nop
dec
or
or
push
cmp
fdiv
jge
push
jno
in
pop
push
xor
mov
bound
std
test
ins
xlat
jge
add
push
in
pop
jp
mov
stos
in
dec
push
xchg
and
fscale
rcr
(bad)
int
ret
or
cmp
cmps
inc
stos
in
lods
out
mov
ds
or
cdq
sbb
div
stos
sub
mov
push
adc
int
cmp
les
clc
mov
fldenv
jmp
hlt
push
jecxz
xchg
ja
(bad)
mov
retf
dec
test
sub
mov
xchg
std
or
(bad)
sbb
(bad)
jmp
adc
out
scas
mov
popf
gs
inc
lock
or
(bad)
dec
mov
and
(bad)
cmp
push
add
outs
jne
in
mov
pop
shr
pushf
popf
add
mov
pushf
push
fnsave
stos
mov
iret
movs
ins
jge
mov
and
aam
ror
and
arpl
xchg
dec
loopne
ja
arpl
aam
push
push
adc
fild
sbb
sar
mov
call
inc
sub
xchg
xor
and
ss
mov
lea
inc
xor
mov
ins
ror
aad
daa
fcmovbe
pushf
(bad)
int3
dec
scas
cmc
fimul
out
sbb
cwde
popa
in
sbb
rol
ja
scas
cmc
jae
jae
jle
(bad)
pushf
add
push
mov
jnp
adc
scas
shl
add
mov
push
mov
push
lahf
scas
pop
imul
cmc
rcr
push
int3
data16
push
in
sbb
mov
pusha
and
push
mov
dec
xchg
cmp
pop
mov
mov
retf
iret
jl
dec
cmp
fbstp
fcmovne
mov
or
idiv
jmp
fisttp
fisubr
adc
push
mov
(bad)
push
jno
ja
xor
xor
jecxz
xor
add
mov
jo
cli
dec
mov
mov
xor
sub
push
ss
ins
jg
aaa
test
lea
popa
mov
ds
adc
push
xchg
das
fstp
js
adc
mov
imul
leave
jno
mov
aad
nop
int3
pop
xor
stc
pop
imul
rcl
rcl
or
int
dec
fs
dec
adc
(bad)
sti
sub
ins
add
into
mov
pushf
jo
imul
add
jmp
imul
fiadd
(bad)
(bad)
scas
jno
add
lahf
shl
jmp
jb
and
dec
xor
and
mov
popf
mov
pop
sub
movs
out
arpl
dec
retf
cmp
jp
test
ret
push
sti
xchg
and
dec
jmp
(bad)
(bad)
adc
sti
jmp
xlat
pop
ret
rcr
lods
mov
xor
xchg
pop
imul
ja
js
loope
pop
push
lea
push
daa
push
mov
jmp
jno
aaa
(bad)
std
mov
mov
sbb
xchg
inc
cli
cmp
inc
jnp
jecxz
fwait
leave
cdq
fs
sar
mov
jmp
cmc
cmp
(bad)
pop
mov
pop
hlt
(bad)
fistp
out
movs
xchg
dec
call
out
push
(bad)
or
push
push
aas
mov
sbb
cmp
outs
and
jns
dec
add
xchg
inc
cld
jle
mov
add
sahf
(bad)
int
pop
push
cmps
sbb
sub
dec
mov
sub
loopne
pushf
call
and
jmp
clc
inc
or
or
scas
jae
fdivr
and
inc
loop
leave
rcl
add
nop
mov
mov
mov
jg
sub
stos
jg
jl
pop
outs
(bad)
sub
mov
sar
daa
stos
aaa
out
iret
or
mov
jmp
cmp
je
mov
add
mov
cdq
mov
mov
enter
ss
stc
xchg
pop
and
jg
jmp
cdq
test
and
mov
imul
bound
(bad)
xchg
cmp
jne
mov
std
out
xchg
sbb
movs
imul
scas
enter
sysenter
sbb
cmp
int
mov
mov
je
jae
scas
xchg
mov
mov
push
lahf
sbb
test
repz
cwde
inc
(bad)
mov
das
jb
add
sub
stos
or
js
fchs
push
in
cmp
and
clc
dec
and
pop
push
fwait
imul
add
dec
int3
aad
add
sysexit
add
fmul
mov
aas
add
sti
lock
or
or
int3
inc
test
(bad)
lea
and
mov
and
mov
dec
adc
xor
xchg
out
cwde
pop
out
je
cwde
mul
mov
jae
inc
pop
std
add
stc
sub
aad
in
aad
ret
adc
mov
jo
fdivr
mov
stos
mov
mov
adc
nop
scas
jp
frstor
push
xlat
dec
mov
in
pop
jo
mov
sbb
push
addr16
mov
ins
aam
cs
dec
inc
leave
cmp
fidiv
lahf
xor
in
pop
xlat
jmp
xchg
cmc
ret
jne
dec
and
mov
stos
out
(bad)
cwde
push
jnp
mov
xor
mov
fwait
adc
inc
es
push
data16
cmp
mov
repnz
push
stos
add
lahf
je
cmp
popf
xchg
inc
shr
cmps
out
cmp
cwde
out
push
scas
(bad)
push
enter
push
jb
rol
aam
cmps
ss
rcl
(bad)
sub
pop
jnp
xor
mov
or
fimul
inc
inc
test
mov
enter
mov
push
pop
stc
add
test
pop
jne
enter
mov
ret
mov
cld
dec
push
in
and
shl
iret
fmul
pop
pop
mov
or
push
and
xchg
mov
add
nop
fild
dec
hlt
lea
(bad)
pop
js
xor
push
aas
xor
loopne
xor
sbb
outs
repnz
lock
cdq
and
mov
loopne
sbb
inc
fidiv
test
mov
out
(bad)
mov
sbb
fiadd
aas
cmp
push
or
mov
daa
das
js
not
iret
in
les
xchg
js
adc
xor
mov
outs
ins
or
data16
xor
jmp
mov
cli
popa
cmps
and
jo
rcr
shl
fwait
stc
mov
aaa
aas
fcmovb
xor
ror
(bad)
daa
mov
(bad)
nop
call
inc
sub
clc
shl
sbb
mov
mov
and
xchg
cmps
stos
sbb
dec
inc
cli
aam
or
jbe
fild
ret
jmp
in
dec
out
push
movs
(bad)
test
ins
xor
inc
addr16
cdq
addr16
xchg
sti
lds
lock
into
mov
iret
adc
pop
retf
(bad)
jbe
dec
mov
enter
sbb
push
mov
lods
xor
push
xchg
jl
ret
outs
or
mov
js
xor
sub
outs
scas
add
scas
fst
scas
ret
iret
mov
jne
movs
or
mov
imul
inc
aas
pop
or
aad
stc
inc
pop
xchg
jmp
icebp
pop
mov
fst
enter
jo
sti
cmp
mov
addr16
(bad)
call
xor
test
test
xor
fwait
mov
pop
outs
cs
pushf
ins
pop
dec
enter
(bad)
pop
aad
sub
push
jne
fmulp
ficomp
dec
jne
adc
jnp
xchg
ja
outs
push
or
fwait
(bad)
xchg
pop
sbb
mov
jne
inc
sub
sub
rcr
push
fisubr
cmp
mov
sub
inc
je
jo
cli
dec
aad
push
mov
bound
retf
pop
loopne
mov
inc
in
test
mov
mov
les
sbb
(bad)
jecxz
mov
in
retf
push
push
mov
sbb
ins
frstor
xchg
mov
push
add
les
pop
sub
fcmovne
jle
cwde
inc
sti
(bad)
out
int3
shl
dec
test
aas
pop
push
mov
retf
and
mov
and
add
jns
(bad)
xchg
xlat
and
clc
adc
scas
fs
and
jmp
das
dec
stos
test
mov
xchg
pop
xor
ja
dec
icebp
jo
arpl
call
sub
adc
cld
sub
jae
and
jb
cmp
adc
inc
js
adc
adc
dec
mov
mov
cmps
sub
mov
jb
sub
scas
repz
sahf
sub
cld
add
cmc
adc
inc
fisub
sbb
out
sahf
neg
pop
cmp
cmp
aad
xchg
sbb
xchg
and
cmp
int3
mov
call
arpl
mov
sahf
enter
jmp
adc
push
cmps
push
mov
or
retf
and
add
dec
push
mov
das
nop
jne
pushf
cmp
jnp
and
test
mov
stc
(bad)
(bad)
in
es
loopne
(bad)
ins
adc
mov
xor
mov
cmps
(bad)
sub
and
cmp
(bad)
cmc
in
mov
lods
push
sub
stos
sbb
bound
fild
das
ret
adc
shr
ficomp
inc
fistp
or
das
js
xchg
or
add
jle
mov
push
sbb
popf
xchg
jp
add
cld
jmp
cld
in
arpl
lock
and
jno
cmp
jl
pop
or
jne
leave
imul
fadd
xchg
gs
ds
sbb
repnz
jge
div
mov
cmp
inc
call
ss
mov
pop
inc
sub
in
xor
mov
inc
push
clc
xor
fist
mov
and
xchg
enter
rcl
mov
test
outs
mov
invd
add
add
mov
aas
dec
xor
sbb
arpl
repnz
call
daa
push
je
mov
mov
mov
adc
jae
sbb
inc
ins
cmc
call
adc
jmp
loope
cdq
(bad)
mov
mov
cwde
daa
les
xchg
ret
jg
mov
xor
sbb
cmps
adc
dec
inc
push
test
cli
jl
push
ins
push
cwde
scas
sub
ds
xchg
mov
inc
mov
dec
cli
gs
and
aam
jne
loope
retf
jae
(bad)
lock
in
inc
addr16
xchg
das
or
popa
sbb
pop
or
pop
pop
inc
es
sub
xor
es
and
push
push
mov
xchg
inc
out
(bad)
out
or
cmp
iret
and
pushf
add
push
dec
imul
mov
mov
out
lods
outs
das
cmc
pop
int3
mov
out
cmp
jg
pushf
or
adc
lods
add
cdq
sub
lock
or
dec
and
adc
adc
add
pop
es
sub
add
data16
stos
mov
cdq
mov
xchg
inc
arpl
xlat
fist
jg
pushf
fsubr
test
mov
leave
aad
aaa
fwait
adc
lock
fwait
cmc
fcomp
in
in
cmps
out
cmp
in
cld
loope
mov
js
pop
mov
ror
mov
or
rol
lds
lds
mov
pop
or
call
es
or
in
xchg
dec
ja
test
out
ret
cli
pusha
jmp
cmp
mov
imul
push
fwait
shl
mov
push
jno
adc
ja
sbb
lds
popf
sub
repz
repz
fimul
fisttp
xchg
lock
fld
xor
add
iret
mov
(bad)
xchg
les
stc
int
cmp
sbb
and
mov
aas
push
call
rol
lock
nop
jbe
lahf
and
ror
test
jle
pushf
xchg
ins
or
dec
inc
loopne
scas
test
xchg
ja
stc
xor
or
(bad)
inc
out
inc
test
inc
in
test
leave
push
cmps
pop
out
movs
inc
sahf
imul
xlat
inc
xchg
test
popf
add
and
mov
add
cwde
mov
pmaddwd
data16
pop
cmp
out
and
stos
mov
pop
inc
sahf
jecxz
ins
fbstp
icebp
ret
das
out
pop
mov
mov
inc
lahf
leave
fs
in
xchg
aad
icebp
and
lea
hlt
nop
daa
xor
clc
es
daa
sahf
fdiv
jns
imul
test
dec
(bad)
xor
inc
dec
mov
ss
cli
into
sar
in
adc
les
fbld
lods
fcmovnb
dec
call
xlat
jnp
push
xlat
inc
iret
mov
gs
arpl
mov
sbb
adc
xor
dec
mov
aaa
or
mov
inc
add
fild
dec
push
imul
push
push
xlat
pushf
push
jnp
mov
lock
xchg
sbb
and
fmul
aas
cwde
ins
bound
xchg
and
fidivr
repz
mov
std
sub
mov
stos
cmp
ins
cmp
or
mov
pop
push
bound
inc
push
sub
sbb
add
dec
es
fs
ins
aas
or
cmp
out
and
xchg
xchg
xor
pusha
test
jno
cdq
daa
mov
adc
lods
and
and
daa
ss
cmp
pushf
in
mov
ins
pusha
jns
repnz
and
stos
inc
fnstsw
cwde
les
lods
sub
repz
jae
out
jl
bound
(bad)
pop
pop
and
rcr
mov
xchg
ss
fucom
enter
es
cmp
mov
dec
ds
add
mov
imul
popf
data16
jle
dec
inc
aas
fild
jno
xor
stc
pop
lock
mov
scas
xchg
push
jge
scas
sub
push
aaa
dec
movs
mov
std
push
jns
mov
xchg
outs
(bad)
or
iret
inc
xor
cmps
jo
mov
dec
xchg
dec
push
std
mov
in
xchg
adc
add
loope
and
xchg
sbb
cdq
pop
in
shl
sub
dec
loopne
mov
test
fdiv
(bad)
popf
lock
test
adc
push
imul
daa
and
ss
mov
inc
add
xchg
arpl
and
push
retf
imul
sub
and
mov
inc
shl
test
inc
outs
imul
mov
leave
pop
pop
mov
mov
jns
adc
inc
mov
xor
(bad)
imul
and
(bad)
nop
and
xchg
xchg
mov
and
jne
and
add
add
adc
xchg
dec
sub
fsubr
loop
sub
add
and
je
inc
shl
and
push
inc
imul
xor
mov
aad
rcl
inc
clc
xor
fidiv
call
sub
push
or
xor
mov
adc
dec
je
lahf
push
les
add
dec
cmp
jl
add
pop
loop
sub
jecxz
inc
sub
ret
or
and
cmps
xchg
cdq
lods
clc
inc
push
mov
xor
mov
jne
inc
push
test
jp
or
dec
in
(bad)
fimul
inc
leave
and
popf
call
cmc
add
and
jge
cmp
jp
imul
push
sub
mov
ja
cmp
mov
mov
dec
or
sbb
aaa
shr
inc
push
inc
pop
dec
dec
mov
xchg
scas
scas
xchg
ja
outs
adc
add
daa
call
test
sar
mov
cld
mov
data16
ins
enter
inc
xchg
fcom
popa
xor
test
jnp
call
sub
push
pop
add
cmp
sub
movs
mov
and
inc
pop
iret
mov
inc
pop
xor
add
ss
or
mov
add
outs
test
(bad)
sub
nop
sar
leave
xchg
gs
call
xchg
pop
clc
push
xchg
scas
cmp
iret
sub
nop
mov
cmc
inc
pop
ret
pop
sbb
inc
cmps
dec
lock
out
ror
loopne
dec
cs
pop
sti
mov
hlt
mov
loope
fsubr
adc
jbe
lahf
adc
das
cmp
adc
push
pop
movs
ins
inc
(bad)
(bad)
adc
or
jbe
test
pushf
xchg
sub
sbb
cmp
cwde
inc
ins
pop
stos
mov
or
sbb
leave
xchg
(bad)
test
hlt
dec
enter
dec
pop
xor
mov
sbb
or
out
adc
xchg
sub
jl
mov
cwde
xor
xchg
or
ficom
push
pop
sbb
xchg
pusha
scas
ja
pop
mov
(bad)
shl
pop
and
jno
imul
(bad)
in
cdq
or
xchg
push
mov
pop
xchg
nop
ret
or
sub
iret
cmp
retf
or
test
mov
push
push
and
add
mov
jns
lods
mov
mov
std
add
push
dec
mov
nop
ja
int3
int
dec
inc
add
enter
xor
or
sbb
shl
retf
cmp
jo
retf
fsubr
mov
test
xor
inc
mov
(bad)
int
outs
ss
fcomi
add
mov
sbb
sub
mov
push
xchg
stc
cmc
stc
aam
inc
sub
out
push
add
mov
cmc
cmp
xchg
mov
in
fst
mov
data16
inc
jnp
retf
add
loope
lock
and
ins
dec
int
or
cmps
fs
xor
mov
mov
xor
neg
fsin
imul
test
push
push
mov
sub
(bad)
jns
pop
pop
cmp
jmp
aas
push
mov
jb
and
mov
jg
sbb
pop
(bad)
int3
ret
push
or
xchg
xchg
sahf
loope
pop
and
xor
push
mov
sub
dec
rep
xlat
aad
daa
dec
xor
jg
ret
(bad)
lods
jb
es
lahf
(bad)
int3
jmp
ret
cmp
(bad)
cwde
adc
mov
aas
inc
adc
outs
jmp
and
out
je
xchg
leave
mov
jns
cmps
cmp
shr
inc
aad
add
(bad)
ret
mov
and
cmp
add
jecxz
push
inc
pusha
sbb
xlat
es
add
(bad)
xor
mov
mov
pop
sbb
les
cmp
push
add
mov
jmp
into
and
mov
pop
mov
jl
ss
les
in
lods
dec
outs
mov
int
test
in
(bad)
jmp
out
mov
cmps
sbb
aaa
mov
jns
xchg
les
sub
dec
and
sub
xchg
jb
stc
popf
leave
sub
ins
mov
xor
dec
call
dec
inc
inc
ret
or
or
jo
stc
jne
stc
popf
outs
mov
jae
inc
cdq
mov
xchg
(bad)
neg
and
sub
sbb
mov
imul
aaa
mov
cwde
dec
out
inc
adc
sti
int3
jb
shl
push
add
or
push
sbb
inc
pop
sbb
pop
mov
xchg
sub
xchg
push
test
les
mov
dec
jge
data16
or
cld
jl
xor
test
iret
fs
add
mov
ins
jb
(bad)
test
repnz
push
div
mov
and
data16
push
xchg
mov
adc
mov
mov
in
cmps
aaa
and
dec
inc
sbb
(bad)
stos
cmp
loope
dec
retf
mov
loopne
fld
aaa
in
test
cmc
rol
sbb
mov
sbb
arpl
adc
out
imul
mov
mov
dec
ins
imul
and
add
cli
(bad)
pop
sbb
mov
dec
inc
shl
cmp
and
lods
xor
xchg
push
or
mov
pushw
or
xor
out
mov
ss
fcomip
xchg
out
out
xchg
xor
sbb
outs
call
addr16
in
(bad)
fs
addr16
inc
js
mov
cmp
xchg
jbe
pusha
cld
xchg
or
ror
adc
popa
aad
or
pop
lods
lock
aad
fldcw
call
xlat
call
out
fs
sub
int3
cmps
mov
xor
xchg
xchg
das
and
xchg
mov
enter
fwait
dec
sbb
in
cmp
lods
push
and
mov
rcl
adc
aad
adc
jp
mov
out
test
mov
iret
loope
or
adc
push
inc
sub
call
adc
ret
mov
mov
inc
sbb
loop
cdq
pop
leave
aaa
pop
add
(bad)
es
push
mov
inc
sar
lahf
mov
xlat
push
std
cdq
mov
lods
sbb
test
jle
sub
out
inc
leave
jb
call
(bad)
jns
push
mov
dec
data16
mov
inc
rcr
sti
inc
outs
dec
out
fsubr
adc
jmp
int3
lock
push
inc
pop
ret
icebp
push
repnz
call
cmp
call
jb
pop
mov
(bad)
lea
mov
or
add
test
fs
xor
(bad)
push
cdq
jno
dec
and
bound
jmp
mov
xor
inc
dec
mov
jmp
mov
sti
mov
lods
add
mov
inc
and
jne
jmp
scas
jg
push
mov
or
js
pop
mov
ds
or
or
inc
loopne
mov
add
std
sar
repnz
jnp
and
push
and
test
sar
into
pop
ret
xchg
sbb
jb
inc
mov
push
xor
jle
out
push
jmp
mov
aad
or
sbb
adc
xchg
mov
cdq
sbb
and
call
dec
push
add
pop
(bad)
push
xchg
test
mov
es
icebp
pop
mov
jl
mov
add
pusha
mov
shl
push
push
outs
in
hlt
mov
int
mov
dec
dec
iret
inc
mov
(bad)
adc
xor
mov
mov
and
and
fdiv
shl
and
test
push
mov
les
clc
jmp
xchg
fwait
push
mov
daa
add
push
out
mov
sbb
pop
sbb
inc
add
xor
mov
popa
mov
retf
rol
aam
xor
fcomp
lock
mov
jmp
cmp
jle
mov
mov
xor
inc
and
(bad)
fistp
mov
sbb
push
call
in
and
add
add
fucomip
cmp
pop
cmp
xchg
inc
aaa
xchg
or
out
jmp
cmc
lods
push
push
test
(bad)
xor
mov
mov
dec
pop
cmps
repz
fiadd
sub
nop
cmps
sti
into
pop
sti
xchg
dec
ror
icebp
sbb
loope
mov
test
cmp
push
movs
mov
out
cmp
sub
push
mov
dec
mov
jns
int
mov
pop
fadd
in
push
bound
inc
inc
push
lds
adc
fwait
and
jo
and
xchg
add
adc
mov
dec
or
loop
cmp
hlt
lock
loope
out
fs
dec
mov
push
push
pushf
mov
test
push
lock
sti
cmc
mov
jle
cmps
test
xchg
sbb
stc
push
xlat
mov
adc
sub
mov
mov
inc
push
xchg
leave
stos
shl
or
mov
xcrypt-ofb
outs
(bad)
stos
fimul
aam
bound
inc
js
out
sbb
sbb
inc
jg
pop
or
ror
hlt
jp
lds
inc
jne
push
stos
push
add
fisttp
cdq
invd
add
in
jo
jle
out
or
xor
in
daa
add
cwde
out
sbb
retf
jb
fs
mov
inc
(bad)
(bad)
daa
rcr
call
xchg
inc
popa
loop
xchg
sahf
leave
movs
(bad)
mov
push
or
mov
jbe
shl
cs
cmp
and
out
daa
fisttp
aad
(bad)
jbe
xchg
xchg
(bad)
in
sar
repz
fld
ss
xor
cmc
pop
jb
inc
(bad)
sti
dec
shr
mov
push
in
bound
int3
cmc
xor
sbb
shl
push
(bad)
jo
repnz
retf
mov
(bad)
stc
movs
ret
dec
jle
or
repnz
jmpw
lods
xchg
lahf
call
dec
cmp
sbb
jmp
setno
cmp
test
sub
stc
hlt
enter
sbb
test
lods
jg
pop
cmps
out
rol
dec
imul
sbb
dec
mov
cmp
je
gs
js
out
movlhps
and
ja
jns
adc
sub
push
sbb
jg
cmp
(bad)
stc
xor
sbb
jl
dec
dec
mov
mov
out
and
leave
lods
je
retf
cmps
sbb
sub
test
ds
jns
in
into
xchg
add
dec
movs
dec
enter
hlt
mov
iret
int3
and
mov
ds
repnz
(bad)
cmp
mov
mov
movs
mov
xchg
fucomip
or
sub
cmps
pop
dec
or
push
(bad)
sbb
(bad)
into
xchg
jmp
adc
sbb
js
test
ja
iret
pop
pop
xchg
test
ret
fwait
scas
neg
xor
lahf
mov
std
aas
cmps
mov
push
pusha
es
jmp
mov
call
repz
inc
pop
hlt
arpl
fidivr
fcmovnbe
aam
scas
sub
xchg
out
and
xchg
mov
ins
in
or
fist
(bad)
out
(bad)
out
or
(bad)
mul
sti
enterw
sar
inc
fmul
cmc
sbb
inc
(bad)
pop
sti
pop
sahf
pop
add
lahf
mov
ret
push
cld
sbb
sbb
add
in
outs
les
mov
ins
cmp
fwait
push
and
mov
jae
lods
mov
mov
inc
bnd
stos
fnstenv
test
call
aaa
push
pop
ins
adc
adc
shr
sti
dec
mov
ins
imul
aam
cmp
in
pusha
gs
xchg
xchg
mov
jo
aam
jge
into
adc
(bad)
jmp
jmp
push
jns
ins
mov
icebp
pop
aas
dec
inc
sbb
sbb
mov
ret
pop
pop
xor
push
fcom
bound
jmp
clc
stc
sbb
test
aas
push
xor
xchg
xor
jmp
xor
out
jno
dec
(bad)
mov
inc
daa
mov
mov
fbstp
mov
cmps
(bad)
das
test
xor
jp
in
jae
enter
dec
xchg
shl
xor
out
xchg
mov
or
and
(bad)
mov
test
pop
shl
inc
js
sbb
rcl
and
mov
fucom
inc
push
test
mov
sub
mov
out
js
or
inc
ins
scas
cmps
mov
push
xor
sbb
inc
or
ror
sbb
popf
ds
xor
stos
aas
test
out
cmps
rcr
and
cmp
int3
aad
dec
shl
dec
jp
adc
std
xchg
mov
and
lahf
push
jle
cmps
fwait
(bad)
out
(bad)
loope
add
mov
fucomip
es
mov
xchg
jo
dec
dec
icebp
(bad)
and
push
sub
xchg
(bad)
sbb
aas
sbb
and
(bad)
push
pop
rcl
pop
xor
cli
out
xor
sub
dec
sar
add
inc
mov
push
cmp
std
hlt
pop
cmp
inc
das
and
outs
loop
jl
inc
and
movs
push
mov
addr16
xchg
lods
cli
iret
cli
or
lods
jp
cmp
sar
pop
into
xor
mov
lahf
pop
sbb
mov
rcr
adc
add
xor
xor
cmp
push
bound
jb
aas
movs
sub
icebp
ror
inc
call
sbb
adc
lods
popa
mov
pop
ss
sbb
pop
or
es
mov
(bad)
mov
ror
cmps
add
ins
or
addr16
pop
lods
movs
mov
leave
vaddsd
cmps
and
push
jno
xchg
data16
pop
xchg
push
sbb
sub
mov
fsubr
cmps
hlt
inc
pop
add
pop
xlat
push
mov
cmp
jl
pop
jl
inc
dec
add
mov
test
xchg
popa
or
pushf
mov
enter
push
in
ret
mov
mov
test
movs
scas
jo
mov
pop
fs
add
in
mov
or
imul
stc
mov
mov
ins
jle
jg
xchg
nop
scas
adc
div
movs
cmp
icebp
xor
xor
inc
cmps
mov
inc
and
hlt
adc
dec
push
dec
ins
iret
xor
retf
jno
mov
xabort
mov
cmp
inc
mov
add
and
mov
dec
pop
add
sub
xchg
add
fild
jbe
dec
dec
dec
cmp
shl
je
je
mov
sub
(bad)
iret
in
enter
cld
xlat
mov
repz
sbb
nop
rcr
xchg
dec
arpl
xchg
hlt
pop
in
or
cmp
push
jg
(bad)
into
jnp
pop
push
mov
mov
stos
faddp
dec
or
fst
movs
ds
das
outs
cmp
mov
(bad)
aaa
cmp
xchg
inc
ja
dec
aam
cld
test
push
mov
cs
in
fcom
out
(bad)
cmp
imul
imul
cmp
not
and
movs
push
pop
in
mov
sahf
pop
stc
mov
or
les
fsubr
std
pushf
or
inc
or
jno
mov
call
cmps
dec
or
int3
sub
sub
lods
xor
stc
mov
pinsrw
hlt
es
lods
rol
out
adc
test
das
dec
imul
jge
mov
sub
mov
mov
retf
mov
enter
xchg
ins
jge
inc
sar
adc
lea
add
mov
repnz
jo
jmp
fmul
dec
iret
mov
movs
and
mov
enter
pop
xchg
mov
lods
retf
ret
dec
inc
push
mov
int3
push
dec
xchg
mov
scas
or
fnstcw
push
cmp
cmp
cwde
mov
cmp
add
xchg
jo
(bad)
(bad)
repz
jmp
mov
pop
adc
and
push
and
mov
sub
pop
fmul
mov
xchg
mov
sbb
les
(bad)
in
lods
call
(bad)
ds
ret
icebp
adc
jmp
xchg
xchg
push
and
out
in
stc
(bad)
mov
inc
cmp
bound
pop
dec
pop
ins
sti
ss
ds
jns
mov
pop
ins
sub
fst
inc
mov
shl
pop
jae
push
cli
push
cmp
adc
dec
stc
cmovl
(bad)
out
ja
mov
or
and
in
jnp
pusha
out
mov
adc
or
dec
xchg
xor
aad
add
pop
loope
mov
icebp
das
psubusw
and
mov
repz
mov
rcr
jl
or
sub
les
clc
cmp
int3
repz
(bad)
pop
(bad)
cmp
and
jnp
mov
loop
call
mov
or
mov
movs
fistp
stos
call
dec
in
leave
call
aaa
xchg
enter
push
lods
dec
lods
inc
mov
je
dec
imul
sub
ss
(bad)
int
push
test
add
pop
dec
out
ret
and
inc
sub
mov
pop
lods
daa
lds
xchg
and
cdq
xchg
push
push
ja
or
push
mov
(bad)
rcl
inc
mov
(bad)
fwait
adc
push
lds
call
and
ss
jle
enter
mov
dec
popa
cs
fwait
pop
mov
xor
add
mov
jmp
maxps
and
mov
mov
scas
mov
arpl
call
adc
inc
jb
shr
or
xor
adc
xchg
jno
or
imul
arpl
mov
inc
inc
paddd
idiv
mov
in
fwait
mov
mov
fisub
ds
push
push
push
xchg
sub
pop
xchg
sub
dec
loope
ins
push
addr16
and
jnp
scas
sti
ds
loope
or
pop
outs
dec
scas
jl
add
push
add
in
sbb
pop
jmp
pop
cmc
and
sbb
jg
xor
push
xchg
iret
(bad)
leave
lods
jo
rcl
dec
lods
adc
arpl
push
add
mov
add
test
bound
mov
pop
xor
mov
add
test
adc
add
or
push
mov
mov
add
sahf
cli
lods
push
aad
jno
push
je
add
jge
mov
aad
sbb
pop
fwait
inc
xor
mov
mov
inc
or
mov
pop
push
dec
stc
retf
lods
pop
imul
push
je
int3
jmp
stos
or
shl
cmp
push
adc
pop
dec
(bad)
out
jecxz
cmp
xchg
push
gs
xchg
or
gs
lea
push
lods
aad
test
popf
call
lods
in
mov
jnp
dec
push
adc
xor
(bad)
xchg
mov
add
adc
cmp
push
push
mov
adc
(bad)
jecxz
adc
ficom
ins
and
mov
sahf
mov
xchg
(bad)
sub
add
pop
daa
cld
add
loopne
mov
mov
loope
xchg
das
pop
fld
push
mov
fbld
dec
mov
mov
mov
jb
in
dec
dec
clc
jmp
cmps
xor
scas
jmp
and
pop
jp
jmp
cmp
movs
add
movs
mov
scas
shl
add
mov
sbb
lahf
and
or
jns
add
test
movs
sbb
pop
scas
cmp
(bad)
cs
sub
(bad)
jecxz
in
and
push
mov
inc
pusha
xor
test
mov
icebp
cwde
push
popa
sahf
shl
mov
xchg
icebp
sub
mov
xchg
mov
fucomp
clc
cdq
pop
rcl
mov
sbb
adc
adc
or
inc
call
into
and
xor
test
bnd
jbe
xlat
lds
gs
and
pushf
cmp
inc
xor
clc
das
sti
push
in
test
rcr
dec
shl
jbe
stc
jae
jge
loop
shl
rcl
or
jne
xor
ret
sub
sahf
lahf
jns
sbb
push
mov
mov
scas
dec
div
xlat
mov
cmps
inc
sub
dec
push
retf
xchg
pop
and
sbb
pop
stos
not
push
bound
mov
pop
stos
in
out
je
and
push
xor
mov
mov
sti
inc
dec
jnp
push
inc
stos
aas
dec
adc
inc
adc
cs
add
fsub
add
dec
dec
cmps
jne
fstp
mov
cmps
pop
(bad)
out
xchg
out
push
push
ja
add
mov
add
mov
or
pop
ja
cmps
shr
and
scas
push
ret
mov
movs
sti
repz
(bad)
xor
scas
rol
sbb
jle
add
mov
test
dec
mov
fucomip
out
push
mov
hlt
dec
addr16
rcr
cwde
cmps
inc
add
stos
sub
sbb
cmp
sbb
imul
sub
in
ja
and
inc
cmp
push
jmp
xchg
pop
sbb
cmps
xchg
inc
es
mov
inc
push
add
jp
cli
fwait
dec
mov
rcr
in
jne
mov
jmp
adc
aas
jnp
mov
cmc
push
push
(bad)
retf
sti
jns
mov
loop
ret
xor
mov
mov
or
scas
pop
aas
adc
mov
xchg
jmp
xor
mov
pop
fwait
mov
push
test
cli
jmp
cmp
push
scas
aad
lds
cs
push
adc
jnp
pusha
inc
inc
inc
jle
and
cmp
mov
hlt
jno
fist
and
fwait
push
jns
rol
xchg
sub
fwait
sar
push
gs
jnp
pop
retf
fadd
and
cmp
pusha
call
adc
jnp
inc
sub
icebp
lds
cmc
add
adc
dec
fs
test
sub
iret
call
push
out
lods
push
dec
inc
sub
fidiv
jl
xchg
hlt
cs
sub
js
inc
xchg
jno
ficomp
sub
in
loop
mov
mov
xor
cmp
pushf
cmp
push
inc
lods
into
loope
aas
outs
scas
sbb
cmp
ret
and
xchg
dec
ret
test
(bad)
jae
xlat
jbe
jg
xchg
mov
dec
xchg
mov
(bad)
clc
adc
push
jle
jle
inc
mov
xchg
scas
es
pop
jge
(bad)
std
movs
test
lock
ret
hlt
mov
add
xor
out
test
mov
pusha
aad
ret
loop
dec
movs
mov
dec
leave
inc
add
jl
pop
sbb
fmul
inc
call
cmp
and
stos
sti
mov
mov
mov
jg
inc
test
adc
cmp
push
cld
outs
jmp
sub
pop
mov
dec
xlat
je
hlt
mov
cmp
dec
rol
fwait
xchg
(bad)
mov
mov
loop
mov
cmps
cs
jbe
int3
add
fwait
in
inc
ficom
outs
xchg
mov
mov
cli
xor
pop
xchg
ret
(bad)
mov
out
outs
sti
out
jle
xchg
mov
jo
push
xor
(bad)
cmp
and
inc
sti
adc
and
outs
mov
and
add
jl
add
data16
loop
test
push
test
mov
cwde
push
stos
lods
cs
in
push
lds
shl
outs
sub
es
adc
ss
inc
sub
cmp
ror
xchg
pushf
loopne
stos
mov
popf
mov
inc
inc
push
xlat
add
pop
sar
mov
bound
es
iret
int3
std
test
js
adc
fwait
mov
cmps
retf
pop
jl
push
and
or
mov
call
setnp
jmp
pop
pop
in
cmp
cs
or
mov
dec
lods
push
test
test
lods
ficomp
and
sbb
adc
sub
pop
cli
xchg
pop
shr
add
add
inc
add
pusha
ret
mov
stos
ins
cmps
jle
in
or
addr16
mov
xchg
inc
aas
jae
stos
les
retf
or
stos
or
mov
mov
mov
dec
mov
shl
lock
mov
inc
sub
outs
jecxz
xchg
(bad)
mov
xor
jb
retf
in
mov
jo
ret
mov
lock
addr16
mov
mov
adc
push
sbb
aad
push
add
xchg
add
push
lods
sbb
loopne
or
jo
jmp
cdq
call
ret
mov
mov
js
push
retf
inc
and
into
push
sbb
bound
jge
cmp
mov
dec
cli
and
xor
inc
mov
mov
fs
mov
and
and
xor
test
jns
outs
js
add
(bad)
rcl
out
sbb
iret
out
mov
(bad)
and
or
sar
push
or
mov
mov
sbb
rcl
xchg
xchg
push
add
fisttp
es
leave
gs
out
lea
addr16
in
xchg
or
sar
jecxz
or
and
mov
lock
movsx
jmp
ins
xor
sub
mov
pushf
shr
adc
add
repz
loope
cdq
cmp
ror
jp
xchg
mov
mov
popw
shr
stos
repnz
xchg
call
ss
add
pop
ss
in
js
mov
or
jno
sub
enter
cli
aad
cmp
pop
hlt
adc
mov
ins
aam
xchg
inc
data16
rol
shl
jecxz
cdq
xor
sub
sti
fs
movs
imul
(bad)
dec
pop
push
xchg
mov
and
lods
mov
add
int3
inc
(bad)
gs
xor
out
lods
int
lea
scas
in
and
mov
sbb
add
(bad)
mov
and
sbb
mov
adc
(bad)
jae
rcl
dec
in
inc
data16
loopne
es
push
push
xchg
(bad)
hlt
cmc
loop
(bad)
xor
jbe
sub
repz
rol
int3
inc
leave
add
std
(bad)
(bad)
lock
xor
mov
inc
lds
cld
mov
aaa
fcmovnb
xor
xchg
push
imul
mov
shr
jno
test
and
xchg
dec
pop
adc
cmp
mov
jmp
push
int3
out
(bad)
dec
fist
mov
jecxz
mov
fcomp
mov
push
hlt
test
mov
pop
hlt
inc
jmp
loope
fidivr
aas
push
inc
pusha
stos
nop
pop
jecxz
push
add
or
push
lahf
push
scas
lea
dec
fdivr
add
fnsave
cmc
push
mov
inc
les
xchg
and
ja
push
add
xor
rcl
mov
gs
in
sbb
ret
jno
frstor
test
xchg
dec
les
dec
inc
push
adc
repnz
inc
rcl
mov
cmps
cmp
jecxz
xor
cmc
(bad)
in
adc
xchg
sub
mov
xchg
jl
cmp
stc
repz
out
or
dec
mov
jmp
sbb
call
mul
and
jnp
xchg
pop
or
adc
mov
in
dec
adc
fxch
bound
loop
pop
cmp
mov
xchg
xlat
aas
mov
mov
add
xchg
mov
std
rcl
jl
jle
js
cli
jge
js
ins
adc
mov
in
adc
fadd
(bad)
mov
div
inc
loop
adc
rol
pop
daa
adc
xchg
addr16
mov
sbb
push
sar
int3
test
push
ret
mov
dec
jg
add
loop
nop
push
or
cwde
(bad)
push
jecxz
inc
mov
js
int3
int
lds
sbb
pop
mov
cmp
scas
movs
(bad)
out
jmp
iret
add
mov
pop
dec
jmp
aam
xchg
xor
icebp
call
jp
jmp
pop
xor
cld
pop
fstp
push
cwde
jne
int3
fdiv
sbb
cmps
lds
test
cdq
cmp
inc
std
pusha
jl
jmp
push
dec
sub
lds
and
sbb
adc
sti
add
push
sub
xlat
repz
jmp
inc
retf
sub
mov
adc
adc
sahf
pusha
xchg
pop
jne
aaa
jp
jle
dec
dec
in
xchg
(bad)
fisttp
mov
and
outs
jb
sbb
fadd
or
(bad)
mov
pop
add
les
dec
or
mov
lods
mov
sub
inc
lock
add
lock
test
(bad)
in
push
mov
push
mov
inc
mov
cld
nop
outs
and
inc
rol
cmp
imul
aaa
leave
mov
jnp
sub
rcr
ret
adc
dec
sub
add
inc
mov
addr16
sub
dec
adc
inc
stos
into
loop
fcomp
adc
aam
pop
sub
outs
push
fwait
rcl
iret
dec
pop
dec
jb
mov
movs
xor
fdiv
mov
or
jp
cmp
or
lods
daa
jg
outs
cli
ds
dec
xor
mov
sar
adc
cmp
aam
inc
in
cmp
rcr
fstp
scas
stc
dec
imul
(bad)
(bad)
aaa
(bad)
fdivr
cmps
in
adc
pop
fwait
cmp
xchg
ficomp
dec
sbb
cmp
mov
inc
(bad)
cmp
pop
jno
mov
or
adc
jo
adc
cmp
pop
xchg
add
sar
dec
xchg
bound
xchg
movs
icebp
aas
out
cmps
sub
loop
lea
jns
xchg
lea
xchg
das
ret
loop
std
push
mov
iret
arpl
pop
push
shl
out
sbb
add
fstp
ja
mov
aam
xor
loopne
repnz
outs
and
cmp
in
das
and
dec
fwait
(bad)
pushf
jge
mov
repz
aaa
ss
loopne
mov
push
outs
mov
cmp
mov
add
jg
adc
ds
jo
in
out
in
xor
jmp
and
jae
out
das
repz
push
jle
test
pop
outs
pop
retf
push
xlat
jb
inc
daa
sbb
push
aad
pushf
dec
cmp
ins
leave
sub
leave
nop
je
pop
pop
shr
bound
xchg
inc
inc
jl
ins
test
adc
int3
mov
mov
mov
cmp
dec
stos
and
stos
test
int3
mov
inc
sub
fnsave
push
xor
sbb
out
test
test
dec
mov
aas
mov
dec
ss
pop
sub
ret
int
pop
sbb
jmp
int3
pop
movs
into
jle
lods
and
out
out
mov
xchg
mov
stc
sub
xchg
cmp
mov
jns
add
(bad)
out
popf
out
les
pop
push
cmp
mov
mov
sub
cdq
das
adc
adc
mov
ins
fdivr
loopne
and
fidiv
mov
mov
ret
xor
sub
sbb
leave
xor
lock
jbe
stc
shl
fisttp
sbb
sub
mov
fdivr
sub
sbb
fstp
js
dec
ins
ret
jbe
mov
mov
or
test
pop
nop
xor
cdq
xor
or
mov
or
pop
mov
mov
inc
int3
xor
aam
sti
retf
cli
mov
test
lods
push
jp
cs
add
or
xor
inc
jnp
pop
adc
jns
push
imul
les
mov
sub
jle
xor
mov
movs
in
adc
adc
sti
and
pop
jb
cli
mov
jmp
push
popa
(bad)
call
loop
in
out
cwde
jl
loope
test
cs
inc
fmul
bound
sti
mulps
jecxz
daa
dec
imul
dec
jmp
popf
jp
add
mov
dec
cmc
mov
stos
dec
and
test
cmp
ds
aam
fidiv
shr
ins
push
jl
sbb
fwait
xchg
movs
sbb
sbb
(bad)
(bad)
mov
inc
xchg
js
mov
ja
push
into
sub
pushf
test
add
imul
jb
jmp
sub
iret
mov
push
sbb
mov
mov
jle
mov
sub
jbe
iret
push
leave
dec
in
aad
(bad)
jecxz
xchg
add
adc
mov
out
mov
repnz
leave
xchg
mov
in
mov
add
push
cmp
jle
lea
sbb
shl
clc
pop
xchg
inc
push
out
fs
repz
(bad)
dec
lods
cld
inc
jmp
mov
mov
adc
(bad)
fist
ret
aaa
ror
xchg
jmp
aas
mov
or
dec
(bad)
jge
stc
cld
sub
ss
mov
js
push
pop
jmp
cmp
jbe
dec
jno
sub
push
mov
mov
push
pusha
fwait
inc
pop
out
sbb
popf
in
dec
inc
push
jmp
fdiv
sub
ret
jp
pop
jmp
jno
dec
frstpm(287
pop
mul
xchg
movs
sub
xchg
(bad)
mov
ins
in
test
outs
mov
int3
mov
mov
loopne
pop
cmps
popa
jg
fcom
inc
push
imul
lods
sub
loopne
imul
push
xchg
imul
dec
test
dec
and
lock
mov
loopne
out
(bad)
inc
cwde
ins
daa
push
mov
lahf
imul
xor
(bad)
xlat
sbb
jge
xchg
xlat
lock
push
loop
gs
dec
and
dec
daa
mov
std
inc
pop
pop
jmp
ja
mov
inc
mov
pop
inc
(bad)
into
jg
pop
mov
ret
sti
add
int3
mov
ins
mov
inc
mov
ins
and
int3
ds
dec
mov
push
shr
push
int
mov
dec
outs
(bad)
mov
mov
xor
and
aas
ins
mov
cld
out
nop
ds
jmp
sti
xor
shr
push
mov
cmp
pop
(bad)
jle
lahf
bound
adc
pop
shr
xor
aam
adc
stos
sub
lea
mov
push
aam
mov
pop
ds
push
add
std
popf
stos
jne
movs
inc
cdq
fs
jnp
cmp
or
dec
push
jmp
xchg
cmp
cwde
call
je
adc
jecxz
jmp
inc
rcl
push
out
retf
mov
mov
mov
mov
and
mov
push
fnstsw
sub
pushf
imul
mov
push
mov
xor
mov
aas
adc
repnz
add
gs
push
nop
dec
adc
cwde
mov
mov
push
lahf
xchg
daa
or
in
add
iret
mov
ret
inc
push
test
pop
and
mov
or
xor
ret
(bad)
xchg
mov
je
mov
(bad)
retf
xchg
xlat
in
sub
scas
pusha
or
add
cmps
fmul
xchg
mov
dec
cmp
and
cdq
dec
lahf
push
add
test
fbld
jmp
jb
std
movs
sub
scas
in
inc
mov
cmp
adc
mov
inc
push
cmp
pop
add
sti
mov
mov
mov
mov
mov
mov
mov
push
scas
jno
ins
inc
icebp
sub
test
adc
arpl
out
loopne
int3
pop
lods
pop
xor
in
add
cmp
sahf
daa
or
mov
mov
xchg
clc
cwde
pop
lds
pop
mov
inc
push
add
mov
dec
fcom
fwait
js
mov
orps
push
mov
add
xchg
adc
lds
pop
mov
jne
loopne
jmp
pushf
push
xor
pop
mov
sbb
int
dec
in
ins
or
int
int
inc
dec
xchg
movs
sbb
mov
movs
mov
mov
jb
mov
je
sub
pop
pop
mov
hlt
inc
jno
and
xchg
mov
cmp
dec
mov
and
xchg
icebp
mov
cs
(bad)
xor
mov
inc
adc
or
aas
bound
daa
imul
jne
into
gs
mov
add
push
sbb
in
mov
mov
sar
lahf
sub
jmp
mov
cmps
or
dec
cwde
shr
cwde
jno
xchg
in
push
arpl
int
btr
fld
cdq
aad
enter
cmp
test
sahf
mov
cmp
xor
push
jge
std
sbb
sbb
and
shr
in
adc
mov
popf
inc
push
fild
ss
pop
rcr
sub
pusha
mov
inc
mov
xchg
inc
ficomp
mov
adc
xor
aad
mov
xor
sbb
stos
outs
imul
ror
jmp
dec
dec
sbb
div
xor
test
scas
mov
imul
inc
xchg
xor
sbb
dec
sub
jecxz
sahf
pop
cmp
or
int3
enter
out
fld
mov
retf
sub
sub
sbb
sub
sub
pop
pop
jbe
std
push
cmp
enter
pop
ss
stos
cmps
cmc
pusha
mov
das
sbb
xchg
leave
inc
aas
das
push
or
dec
and
fs
inc
data16
sub
in
dec
and
ficom
les
cmp
jmp
imul
int3
xor
clc
aaa
or
cmp
inc
les
sti
in
push
into
jge
pop
(bad)
lods
push
add
mov
push
retf
ds
dec
addr16
test
sbb
pop
push
popf
adc
xor
pushf
data16
xor
sbb
aaa
push
mov
push
ds
bound
jae
sbb
popa
and
cmp
ja
and
push
mov
sub
xor
mov
pop
add
xlat
jg
pusha
imul
imul
mov
jmp
inc
adc
dec
ficomp
jnp
in
pop
cdq
bound
cwde
jle
(bad)
das
aam
pop
adc
adc
in
mov
jp
clc
mov
call
jmp
or
cmp
adc
out
dec
sti
ins
movs
test
xor
add
inc
push
bound
and
jmp
sbb
inc
(bad)
outs
xor
(bad)
popf
arpl
js
mov
dec
xchg
sub
mov
add
movs
mov
mov
(bad)
dec
xor
pop
cmps
arpl
xchg
(bad)
mov
sbb
lea
out
jo
addr16
push
push
pop
mov
test
or
retf
ins
mov
dec
pop
call
dec
dec
inc
addr16
pop
xchg
and
mov
sub
sar
sbb
nop
jae
push
sbb
ret
and
pop
stc
in
aad
into
(bad)
bound
xor
outs
rcl
icebp
gs
scas
inc
dec
jmp
mov
cdq
pushf
or
dec
and
les
dec
xchg
mov
and
in
pop
int3
mov
jp
loop
mov
add
jle
cmp
cdq
mov
int3
jmp
nop
cmp
adc
mov
sbb
leave
aas
(bad)
and
inc
dec
or
fisttp
xchg
adc
ret
xchg
jl
or
inc
ins
adc
imul
adc
mov
test
inc
push
(bad)
out
cld
es
in
inc
lds
mov
das
inc
pop
jae
hlt
inc
adc
push
stos
cmp
test
ins
xchg
popf
icebp
fdiv
jge
imul
into
retf
bound
mov
pop
mov
pushf
stc
shr
shl
jp
fld
int
jb
sub
fist
mov
stos
xor
popa
fwait
sbb
sub
test
jne
mov
mov
xor
hlt
dec
(bad)
mov
and
icebp
xlat
out
movs
dec
xchg
test
mov
rol
rcr
fisttp
cmp
xor
ins
mov
sbb
pop
pusha
pop
inc
jne
adc
fistp
dec
cmp
add
outs
iret
and
sti
xor
imul
arpl
lds
into
retf
add
sub
mov
sbb
pop
and
push
xchg
(bad)
mov
pop
test
dec
mov
(bad)
and
neg
mov
xor
loopne
push
int3
jo
dec
lods
daa
xor
inc
fmul
jo
cmp
ret
mov
jmp
loopne
or
ror
mov
mov
xchg
call
push
mov
cld
lods
movs
pop
sti
or
xchg
out
mov
mov
adc
mov
fisubr
push
in
xlat
xor
jecxz
hlt
fucom
mov
mov
imul
cmp
inc
lea
jne
fistp
inc
jp
xor
xchg
mov
xlat
xchg
xor
pop
push
mov
nop
out
fwait
add
pop
sti
ror
aaa
pop
cmps
loope
mov
aaa
jmp
mov
or
ret
loop
call
mov
cli
inc
xor
xor
loope
inc
es
outs
mov
dec
call
dec
jmp
fidivr
mov
retf
add
imul
cmp
inc
inc
cmp
mov
push
sub
cmp
in
aam
lods
cld
loop
mov
in
fbstp
je
or
movs
cmp
push
in
push
outs
jae
ja
clc
cmps
pushf
push
out
xchg
test
jbe
rcr
add
mov
into
loope
dec
cwde
aam
xor
aad
idiv
out
fwait
sbb
adc
or
in
das
pop
jns
call
call
mov
(bad)
jg
fwait
push
cmp
(bad)
es
xor
rcl
call
push
mov
jns
jl
cmp
push
sub
and
popf
xlat
cld
add
jae
js
pop
ins
adc
call
xchg
inc
xchg
cmp
(bad)
sub
ds
mov
aad
jo
shr
xchg
push
pop
retf
clc
lds
inc
dec
inc
or
push
int3
(bad)
mov
ss
pop
mov
mov
int3
or
sub
or
pop
imul
out
xchg
repnz
xchg
nop
nop
scas
cmp
rol
iret
sahf
mov
cmps
push
call
movs
lock
int3
cmps
push
jecxz
leave
in
clc
jb
cmp
mov
jp
jnp
(bad)
sbb
adc
jg
loop
mov
shl
sbb
imul
fadd
imul
dec
out
fucomi
xchg
mov
mov
inc
aad
leave
sbb
adc
dec
inc
or
or
test
sbb
ins
mov
xchg
cdq
pop
and
inc
mov
xor
out
fisub
xor
cmp
popf
movs
jne
jns
lods
mov
cmp
jl
and
xchg
jne
fstp
std
jp
push
sbb
and
imul
mov
fsubr
mov
adc
std
arpl
mov
sub
fsub
add
jmp
pop
jecxz
add
fisubr
les
es
sub
add
stos
mov
imul
lods
cwde
push
std
sar
mov
aas
xor
adc
xor
scas
scas
repz
push
retf
and
adc
imul
xchg
sbb
je
mov
je
in
call
jo
pop
jle
push
fs
scas
shl
add
fistp
(bad)
ret
outs
shr
mov
xchg
repnz
push
out
out
mov
xor
outs
mov
or
int
arpl
mov
aam
sti
push
add
xchg
sti
cmp
lock
stos
jno
addr16
push
push
pusha
xchg
or
sar
imul
cli
aam
mov
bound
mov
and
jle
les
push
cdq
inc
inc
cmps
jge
sub
xchg
repnz
ds
fwait
(bad)
and
sub
jp
mov
and
nop
and
and
hlt
dec
loopne
pop
cmps
cmp
mov
shl
pop
sub
add
es
mov
fcmovne
stos
rcl
xchg
popa
mov
lea
imul
dec
jl
jmp
(bad)
out
xchg
add
ss
mov
adc
cmp
xchg
int3
repnz
dec
pop
mov
jge
(bad)
cld
dec
ja
add
cld
sahf
xchg
fldcw
out
call
(bad)
xchg
mov
inc
fld
push
leave
mov
push
data16
xlat
mov
dec
and
mov
aad
adc
sbb
xor
movs
cld
xor
in
aad
jmp
jno
add
push
jecxz
pushf
(bad)
into
cdq
push
mov
fnstsw
pop
addr16
cmp
in
push
xchg
ins
dec
jmp
inc
push
xor
jns
xlat
or
call
dec
xor
mov
sub
push
mov
inc
cdq
ins
mov
inc
test
out
arpl
adc
in
mov
movs
scas
rol
std
retf
ins
ret
outs
pop
(bad)
adc
call
pop
sub
cdq
out
sbb
sub
dec
ficomp
mov
cwde
dec
daa
cmp
mov
or
add
add
or
(bad)
lods
inc
inc
push
in
cmps
and
mov
cmc
jne
or
rol
pop
pop
inc
or
pop
bnd
outs
sub
or
mov
or
sbb
dec
and
in
leave
jbe
clc
rdtsc
push
popa
mov
sbb
sbb
and
ret
aaa
ret
jmp
adc
xchg
leave
mov
je
les
in
stos
or
pop
xchg
or
nop
mov
xchg
aas
scas
mov
imul
daa
loope
repz
mov
inc
adc
mov
test
jns
fadd
dec
or
push
push
adc
mov
ror
adc
xor
rol
pop
adc
mov
inc
jge
mov
mov
push
xlat
adc
aam
imul
movs
ja
jmp
js
xlat
and
(bad)
jmp
mov
call
ret
mov
pop
jbe
out
bnd
jle
push
cmps
xor
sbb
xchg
or
fadd
cld
and
ror
inc
pop
loop
cmp
sar
daa
push
call
mov
loope
cdq
or
mov
inc
cmp
pop
dec
sti
retf
sub
inc
jge
stc
mov
inc
fcmovnb
mov
call
stos
dec
mov
aad
push
sub
ror
push
daa
pop
jmp
sbb
(bad)
pop
mov
mov
std
jmp
sub
imul
ret
popa
imul
mov
add
jbe
ret
and
inc
cmp
jge
dec
or
pop
mov
and
xchg
inc
rol
mov
xor
mov
adc
nop
add
and
in
sub
into
retf
in
add
dec
or
mov
sub
cli
mov
mov
sbb
lahf
sar
push
adc
rcl
mov
pop
or
push
sub
xchg
out
call
daa
popf
mov
mov
imul
addr16
call
test
test
mov
jp
xchg
out
sub
mov
ins
imul
sbb
bound
pop
adc
int
cs
mov
mov
cwde
mov
mov
out
test
cld
jmp
jbe
popa
jbe
(bad)
movs
(bad)
outs
mov
inc
into
in
add
(bad)
sbb
push
iret
movs
test
sbb
xor
(bad)
mov
push
aad
dec
iret
push
repz
cmc
addr16
or
jno
std
(bad)
mov
iret
movs
dec
iret
dec
pop
std
mov
pusha
mov
(bad)
clc
fwait
and
div
cmp
sti
leave
aam
dec
ret
push
aaa
int
sbb
jae
adc
cmc
xchg
mov
adc
cmp
ror
adc
jmp
jmp
push
nop
jbe
mov
push
mov
call
inc
xor
sbb
mov
loopne
jns
dec
fs
inc
scas
mov
mov
push
mov
mov
(bad)
jmp
cs
mov
jo
pusha
xlat
and
rcr
imul
adc
arpl
pop
mov
xchg
xor
sbb
adc
dec
pusha
imul
retf
pop
jmp
loop
jle
sub
aam
cmp
cmc
dec
addr16
jl
mov
push
push
push
jae
fmul
cmp
jo
loop
push
cmp
sub
ret
push
enter
add
cmp
dec
(bad)
fistp
popa
xor
test
cmps
mov
dec
imul
test
xchg
inc
or
icebp
add
ret
in
sbb
fstp
ja
cmp
lock
push
push
fcom
jo
jns
inc
adc
out
push
shr
pop
jle
xchg
push
push
pop
adc
mov
jecxz
pop
ins
sub
add
xchg
and
aas
(bad)
dec
xor
xor
push
loop
mov
dec
sti
push
fsub
or
and
xchg
jo
icebp
adc
(bad)
cmp
jg
pop
in
dec
xlat
push
mov
(bad)
xchg
popa
sar
adc
shl
pop
bound
dec
test
and
adc
push
sbb
into
and
and
(bad)
retf
inc
mov
inc
or
push
xchg
test
mov
push
push
cld
adc
imul
mov
push
sbb
and
pop
dec
mov
arpl
xor
pop
stc
xchg
cmc
push
shr
mov
test
cmp
out
cs
ja
xchg
sbb
xchg
stos
scas
mov
pop
adc
mov
cmc
or
or
add
sti
out
mov
in
inc
push
mov
or
sti
or
mov
ja
pop
cmps
aaa
mov
jmp
fwait
xchg
cdq
cmp
adc
cmps
xchg
rol
xor
pop
xchg
sub
daa
into
imul
push
push
pop
inc
into
sub
and
nop
mov
sahf
sbb
jmp
jecxz
sbb
daa
sub
add
lods
lods
fdivr
outs
sar
cmps
sub
ins
ins
xor
rcl
je
add
xor
mov
cmc
xchg
(bad)
cmp
jle
mov
add
(bad)
push
stos
xor
adc
aam
imul
out
xchg
aas
push
add
retf
mov
cmp
jo
fwait
sub
(bad)
pushf
xor
xor
inc
cmp
mov
sub
sbb
mov
iret
mov
pop
loope
jle
(bad)
inc
push
sbb
pop
cmp
pop
lock
(bad)
cmp
(bad)
push
jnp
lahf
and
popa
nop
call
loopne
sti
and
mov
repnz
ficomp
pushf
jnp
outs
adc
in
(bad)
mov
and
or
fild
movs
or
mov
ja
xchg
aaa
push
fucomip
test
mov
iret
aam
test
pop
mov
jp
test
mov
(bad)
jmp
loope
ret
mov
sub
xchg
rcr
inc
xor
jnp
je
mov
mov
cmc
inc
or
ins
pop
pop
call
mov
cmp
(bad)
stc
fadd
add
mov
adc
leave
fstp
cmc
xchg
dec
mov
repz
cs
inc
push
sub
daa
inc
push
mov
dec
sbb
or
lods
cmp
bound
cmp
int3
or
xlat
push
xchg
sbb
mov
push
cwde
pop
pop
std
jmp
and
cld
mov
je
call
mov
push
sub
xor
dec
jbe
nop
jne
ror
jle
mov
std
mul
add
pushf
push
fimul
inc
xor
or
pop
in
jnp
ror
(bad)
cld
or
mov
pop
dec
test
xchg
ss
repz
add
jg
cmp
stos
mov
add
cmp
stos
xor
mov
lea
(bad)
dec
imul
dec
and
fidiv
popf
sti
loopne
sub
call
push
push
xor
pop
test
lods
inc
or
mov
imul
fidiv
aaa
mov
push
cld
push
or
repz
push
sbb
lea
shl
cdq
push
xchg
jg
xor
pop
aas
movs
xchg
or
sar
cmps
(bad)
out
pop
mov
adc
fdiv
repz
pop
pop
adc
in
jmp
call
push
xchg
(bad)
lock
hlt
push
dec
mul
test
xor
mov
fcom
rcl
dec
pop
iret
xchg
stos
bound
jle
fdivr
mov
xchg
inc
lea
jp
(bad)
(bad)
cli
arpl
cmp
aaa
mov
cwde
aas
loope
dec
mov
test
mov
add
adc
rcl
imul
jle
das
dec
mov
pop
aaa
in
xor
aad
ds
out
push
sahf
mov
mov
dec
retf
in
pop
test
inc
pop
and
ror
push
cmps
add
daa
fdiv
cmps
mov
(bad)
aas
adc
cmp
aam
mov
xchg
or
fsubr
xor
dec
mov
xchg
sbb
mov
push
dec
hlt
cwde
mov
int3
scas
mov
movs
push
(bad)
out
sub
or
mov
dec
mov
jmp
retf
pop
fld
les
sbb
movhlps
sub
mov
inc
hlt
ja
mov
and
int3
ret
add
stos
aaa
iret
push
or
test
pop
or
loope
and
leave
adc
repz
mul
dec
movs
addr16
jae
fldcw
xor
pop
pop
cmp
inc
pop
js
mov
call
pop
mov
lahf
dec
push
inc
iret
rcl
push
loopne
jbe
das
pop
mov
add
shl
pop
aas
dec
inc
jae
adc
mov
push
mov
int3
movaps
mov
ins
sub
data16
jge
test
add
or
ds
dec
shl
mov
inc
test
xchg
cmp
int
xchg
inc
fstp
mov
pop
xor
pop
cld
add
mov
movs
push
mov
jp
xor
sbb
icebp
push
pop
xchg
retf
retf
xlat
aaa
xchg
movs
ret
push
push
push
gs
pop
std
inc
sub
inc
ret
in
stos
mul
inc
stc
je
or
xor
loope
stos
jns
sahf
jp
lds
mov
ins
add
fld
ret
in
mov
xchg
add
fimul
je
in
mov
rol
aaa
cmp
xchg
push
and
(bad)
push
mov
jmp
loop
mov
repz
dec
scas
push
add
push
int3
cwde
pusha
push
sbb
shl
cmp
push
xchg
xor
(bad)
imul
aad
push
jbe
push
mov
fwait
daa
adc
movs
jb
retf
imul
outs
aaa
sub
in
push
xor
mov
fsub
add
inc
push
xchg
test
cmp
jb
xor
cmp
mov
pushf
aam
xlat
ss
repz
call
or
arpl
or
mov
cmps
aaa
scas
and
mov
cs
push
xchg
mov
shl
(bad)
push
mov
mov
cwde
xchg
mov
fist
test
push
and
fadd
and
neg
pop
xlat
sub
dec
xchg
adc
ret
jne
pushf
rcr
add
fcmovne
and
ds
jmp
xchg
enter
(bad)
mov
jmp
xor
xorps
inc
jno
retf
ds
jnp
jge
ins
mov
icebp
les
or
inc
inc
dec
getsec
xlat
retf
(bad)
neg
add
or
cmp
jmp
imul
rcl
fdivr
mov
jnp
mov
pusha
cmps
cmc
push
mov
ins
sbb
sbb
or
xor
int
out
scas
ins
bound
ret
or
add
call
cmps
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
mov
push
and
(bad)
sub
sar
arpl
int
jmp
pusha
add
add
add
add
add
add
add
jo
add
add
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
