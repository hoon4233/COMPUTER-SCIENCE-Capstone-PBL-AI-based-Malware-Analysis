nop
outs
add
add
add
add
add
add
adc
add
add
add
add
add
add
mov
add
add
add
add
jo
add
add
add
add
adc
add
add
add
adc
sub
add
or
push
outs
adc
add
outs
adc
add
or
pop
jb
add
jo
sub
push
add
or
adc
add
inc
adc
adc
sub
add
or
add
or
lea
add
add
mov
sbb
add
or
add
or
and
sbb
add
adc
adc
push
jb
add
jo
adc
pop
jb
add
jo
adc
sbb
add
jo
adc
sbb
add
jo
adc
sbb
add
jo
adc
sbb
add
jo
adc
sbb
sub
add
adc
sbb
jo
adc
push
jb
add
jo
adc
pop
or
add
jo
adc
pop
or
add
jo
adc
pop
or
add
jo
adc
pop
or
inc
add
jo
adc
pop
or
jo
adc
pop
push
jb
add
jo
adc
pop
(bad)
sub
add
adc
pop
adc
add
jo
adc
pop
adc
add
jo
adc
pop
adc
add
jo
adc
pop
adc
add
jo
adc
pop
adc
sub
add
adc
pop
adc
jo
adc
pop
push
jb
add
jo
adc
pop
pop
jb
add
jo
adc
pop
sbb
add
jo
adc
pop
sbb
add
jo
adc
pop
sbb
add
jo
adc
pop
sbb
add
jo
adc
pop
sbb
sub
add
adc
pop
sbb
jo
adc
pop
push
jb
add
jo
adc
pop
pop
jb
add
jo
adc
pop
and
add
jo
adc
pop
and
add
jo
adc
pop
and
add
jo
adc
pop
and
add
jo
adc
pop
and
sub
add
adc
pop
and
jo
adc
pop
es
add
jo
adc
pop
daa
jb
add
jo
adc
pop
sub
add
jo
adc
pop
sub
add
jo
adc
pop
sub
add
jo
adc
pop
sub
add
jo
adc
pop
sub
sub
add
adc
pop
sub
jo
adc
pop
cs
add
jo
adc
pop
das
jb
add
jo
adc
pop
xor
add
jo
adc
pop
xor
add
jo
adc
pop
xor
add
jo
adc
pop
xor
add
jo
adc
pop
xor
sub
add
adc
pop
xor
jo
adc
pop
ss
add
jo
adc
pop
aaa
jb
add
jo
adc
pop
cmp
add
jo
adc
pop
cmp
add
jo
adc
pop
cmp
add
jo
adc
pop
cmp
add
jo
adc
pop
cmp
add
jo
adc
pop
cmp
jo
adc
pop
ds
add
jo
adc
pop
aas
jb
add
jo
adc
pop
inc
jb
add
jo
adc
pop
inc
jb
add
jo
adc
pop
inc
jb
add
jo
adc
pop
inc
jb
add
jo
adc
pop
inc
jb
add
jo
adc
pop
inc
jb
add
jo
adc
pop
inc
jb
add
jo
adc
pop
inc
jb
add
jo
adc
pop
dec
jb
add
jo
adc
pop
dec
jb
add
jo
adc
pop
dec
jb
add
jo
adc
pop
dec
jb
add
jo
adc
pop
dec
jb
add
jo
adc
pop
dec
jb
add
jo
adc
pop
dec
jb
add
jo
adc
pop
dec
jb
add
jo
adc
pop
push
jb
add
jo
adc
pop
push
jb
add
jo
adc
pop
push
jb
add
jo
adc
pop
push
jb
add
jo
adc
pop
push
jb
add
jo
adc
pop
push
jb
add
jo
adc
pop
push
jb
add
jo
adc
pop
push
jb
add
jo
adc
pop
pop
jb
add
jo
adc
pop
pop
jb
add
jo
adc
pop
pop
jb
add
jo
adc
pop
pop
jb
add
jo
adc
pop
pop
jb
add
jo
adc
pop
pop
jb
add
jo
adc
pop
pop
jb
add
jo
adc
pop
pop
jb
add
jo
adc
pop
pusha
jb
add
jo
adc
pop
popa
jb
add
jo
adc
pop
bound
add
jo
adc
pop
arpl
add
jo
adc
pop
fs
add
jo
adc
pop
gs
add
jo
adc
pop
data16
add
jo
adc
pop
addr16
add
jo
adc
pop
push
jo
adc
pop
imul
adc
pop
push
inc
add
jo
adc
pop
imul
add
adc
pop
ins
jb
add
jo
adc
pop
ins
jb
add
jo
adc
pop
outs
jb
add
jo
adc
pop
outs
jb
add
jo
adc
pop
jo
sub
adc
pop
jno
sgdtd
jo
adc
pop
jb
xchg
add
jo
adc
pop
jae
pop
add
jo
adc
pop
je
fwait
add
jo
adc
pop
jne
movs
add
jo
adc
pop
jbe
movs
add
jo
adc
pop
ja
scas
add
jo
adc
pop
js
mov
adc
pop
jns
sub
add
adc
pop
jp
sub
add
adc
pop
jnp
sub
add
adc
pop
jl
sub
add
adc
pop
jge
sub
add
adc
pop
jle
sub
add
adc
pop
jg
sub
add
adc
and
ret
add
jo
adc
and
int
add
adc
and
sub
add
adc
and
sub
add
adc
and
add
jo
adc
and
mov
add
adc
and
xor
add
adc
and
sub
add
adc
and
xlat
add
jo
adc
and
loope
add
adc
and
jmp
add
adc
and
cmc
add
jo
adc
and
add
jo
adc
and
sub
add
adc
and
sub
add
adc
and
sub
add
adc
and
sub
add
adc
and
sub
add
adc
and
sub
add
adc
and
sub
add
adc
and
add
jo
adc
and
sub
add
adc
and
or
add
adc
and
mov
add
adc
and
adc
add
adc
and
mov
add
adc
and
adc
add
adc
and
sub
add
adc
and
add
jo
adc
and
sbb
adc
and
daa
add
jo
adc
and
sub
add
adc
and
sub
add
adc
and
xor
add
adc
and
sub
add
adc
and
sub
add
adc
and
add
jo
adc
and
sub
add
adc
and
sub
add
adc
and
sub
add
adc
and
cmp
add
adc
and
inc
add
jo
adc
and
daa
add
jo
adc
and
sub
add
adc
and
add
jo
adc
and
icebp
add
jo
adc
and
sub
add
adc
and
sub
add
adc
and
sub
add
adc
and
pop
add
jo
adc
and
daa
add
jo
adc
and
sub
add
adc
and
add
jo
adc
and
sub
add
adc
and
pop
add
jo
adc
and
sub
add
adc
and
sub
add
adc
and
icebp
add
jo
adc
and
sub
add
adc
and
sub
add
adc
and
add
jo
adc
and
or
add
adc
and
sub
add
adc
and
sub
add
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
jb
add
jo
adc
and
sub
add
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
jb
add
jo
adc
and
daa
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
jb
add
jo
adc
and
sub
add
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
jb
add
jo
adc
and
sub
add
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
jb
add
jo
adc
and
sub
add
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
jb
add
jo
adc
and
sub
add
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
jb
add
jo
adc
and
sub
add
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
jb
add
jo
adc
and
sub
add
adc
and
add
add
add
jo
adc
and
add
add
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
add
jb
add
jo
adc
and
xchg
add
jo
adc
and
lahf
add
jo
adc
and
daa
add
jo
adc
and
sub
add
adc
and
add
jo
adc
and
icebp
add
jo
adc
and
sub
add
adc
and
sub
add
adc
and
sub
add
adc
and
sbb
adc
and
daa
add
jo
adc
and
sub
add
adc
and
add
jo
adc
and
or
add
adc
and
sub
add
adc
and
sub
add
adc
and
sub
add
adc
and
sub
add
adc
and
sub
add
adc
and
sub
add
adc
and
add
jo
adc
and
sub
add
adc
and
sub
add
adc
and
sub
add
adc
and
sub
add
adc
and
sub
add
adc
and
sub
add
adc
and
sub
add
adc
and
add
jo
adc
and
sub
add
adc
and
sub
add
adc
and
ins
add
jo
adc
and
fwait
add
jo
adc
and
add
adc
and
out
add
adc
and
add
adc
and
add
jo
adc
and
sub
add
adc
and
sub
add
adc
and
sub
add
adc
and
sti
add
jo
adc
and
daa
add
jo
adc
and
sub
add
adc
and
sub
add
adc
and
add
jo
adc
and
pop
add
jo
adc
and
daa
add
jo
adc
and
sub
add
adc
adc
adc
or
adc
sub
adc
adc
call
adc
pop
adc
sbb
add
rcr
add
pop
adc
adc
adc
mov
add
or
or
add
or
pop
adc
outs
sbb
add
adc
lea
add
add
or
or
push
lea
add
add
add
or
sub
add
and
add
add
add
add
xor
add
add
add
add
adc
jle
add
add
sub
add
or
inc
or
sub
add
jo
add
add
sub
add
or
add
or
add
or
push
add
add
jle
add
add
sub
pop
sub
adc
add
or
add
add
add
add
add
add
sub
push
sub
add
add
add
adc
add
or
add
add
add
add
add
add
sub
push
sub
or
add
sub
add
or
add
add
add
push
add
sub
add
sub
add
add
add
mov
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
add
add
pop
mov
int
mov
push
push
jb
addr16
ins
and
outs
outs
outs
je
bound
jb
outs
and
and
and
fs
add
add
add
push
inc
add
dec
add
add
add
add
add
add
add
add
add
add
(bad)
push
add
or
add
add
add
push
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
adc
add
cld
repz
add
add
add
pop
add
add
add
pop
add
add
dec
repz
add
add
add
add
or
add
or
add
dec
add
add
je
js
add
add
add
and
add
(bad)
push
add
add
add
add
pusha
cs
jb
add
add
add
add
pop
add
push
add
add
add
add
add
jb
ins
outs
arpl
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
push
jne
fucom
movs
push
fwait
(bad)
push
loop
push
jl
dec
shr
xchg
or
fstp
mov
jmp
es
or
ss
xor
cmp
xor
enter
sub
scas
add
mov
push
jnp
cmps
fistp
adc
adc
xchg
ss
xchg
aaa
dec
jl
cmp
add
scas
jle
mov
inc
into
jb
and
je
stos
jl
leave
xchg
push
idiv
in
(bad)
(bad)
test
push
and
mov
retf
pop
jno
loop
and
jbe
jo
inc
mov
addr16
push
fnstenv
and
leave
dec
scas
add
jmp
jp
ds
in
(bad)
dec
jbe
loopne
test
in
adc
(bad)
gs
aad
dec
jne
jecxz
aaa
pop
out
mov
pop
fpatan
lahf
hlt
push
cmp
or
in
dec
lock
scas
lods
ins
lods
xchg
mov
push
push
mov
mov
fs
dec
and
adc
sub
and
lds
jmp
(bad)
int3
add
fdiv
dec
jns
in
or
adc
cmp
jmp
loopne
push
adc
sbb
and
xor
std
ss
js
push
(bad)
xlat
pushf
lea
inc
arpl
and
in
inc
jle
cmp
out
or
fiadd
clc
stos
cmp
push
ret
ds
and
fs
mov
or
ret
repz
(bad)
lock
ja
push
xor
mov
mov
call
mov
icebp
dec
jp
loopne
ss
gs
int
les
mov
lods
jl
cmp
int
adc
xchg
jmp
fsub
call
scas
repz
out
mov
or
jecxz
cmps
rcl
loopne
in
push
xor
add
mov
jecxz
in
cmc
jo
sbb
dec
ret
por
jl
test
scas
or
cmp
jg
fist
rol
mov
not
fs
and
ss
lahf
jmp
ror
mov
dec
inc
sub
xor
or
and
in
xchg
jnp
pop
sbb
cld
xor
cmp
enter
xlat
cmps
push
call
xlat
mov
fistp
mov
push
jmp
es
jecxz
dec
add
icebp
je
bound
sbb
sub
jmp
stos
outs
add
jnp
jmp
ins
sub
mov
stos
sahf
cmp
repz
(bad)
jecxz
push
vpmovzxbd
sub
call
pop
mov
es
je
stos
cmps
inc
(bad)
ja
push
jle
adc
call
mov
into
aas
enter
not
popf
cmp
push
sub
xor
addr16
stc
mov
push
repnz
fwait
and
xor
pop
and
push
cwde
sub
test
and
mov
inc
xchg
push
sbb
jl
push
xchg
jl
add
(bad)
adc
cdq
add
enter
adc
dec
add
mov
inc
ins
and
adc
std
in
test
int
jl
in
ds
shl
inc
xchg
mov
sbb
and
cwde
lea
push
xchg
enter
arpl
loope
pushf
loopne
js
iret
jmp
add
and
push
lods
jmp
xor
inc
and
push
dec
xor
stos
push
sbb
sub
mov
mov
sub
xchg
mov
call
movs
jp
rcr
or
scas
add
ins
mov
popf
out
cmps
and
(bad)
push
push
ins
ja
dec
jg
inc
jbe
(bad)
int3
mov
bound
add
mov
jo
pop
aaa
aad
test
mov
jo
cmc
mov
xor
jbe
cli
aas
sbb
(bad)
repnz
and
mov
movs
mov
dec
int
jmp
aad
arpl
repnz
add
jno
das
rcl
mov
push
mov
pop
inc
push
jl
push
sar
cli
jnp
daa
cld
cmps
mov
mov
or
(bad)
xor
add
stos
popa
mov
scas
add
sti
lods
scas
xor
xlat
pop
shr
stc
inc
pop
ror
push
fs
pop
xlat
(bad)
ins
sti
dec
out
(bad)
dec
stos
es
aaa
add
inc
cmp
pop
inc
sub
xchg
jbe
xchg
pop
inc
mov
mov
add
ins
dec
pop
or
cmp
ja
jmp
das
cld
dec
lods
aam
inc
std
push
cld
pop
das
mov
mov
int
push
daa
arpl
in
cmp
mov
pop
dec
pop
ins
loop
dec
adc
daa
push
test
mov
cmp
out
(bad)
loop
(bad)
or
icebp
mov
adc
adc
mov
xor
repz
mov
sbb
mov
add
bound
pusha
test
adc
sub
hlt
movs
cld
xchg
loope
lea
and
pop
inc
movs
lahf
ds
arpl
xlat
imul
cs
or
pop
cdq
arpl
sti
ret
loop
inc
and
cmp
or
test
sbb
dec
mov
in
sbb
or
(bad)
push
dec
cmc
jge
movs
(bad)
push
xchg
scas
jno
mov
in
outs
jbe
or
shl
or
shl
or
(bad)
cld
jp
bound
inc
rcr
es
cmp
adc
mov
or
mov
test
push
and
(bad)
xchg
and
jl
add
fs
push
(bad)
arpl
xchg
push
mov
imul
add
cmp
push
xor
xor
or
sub
jbe
ss
int
sbb
test
int
add
fist
mov
fcomp
jno
mov
or
push
push
popa
fadd
jnp
sbb
(bad)
jae
jnp
addr16
cmp
jb
sbb
fmul
pop
mov
cs
adc
daa
shr
mov
retf
jle
dec
dec
push
sbb
cmc
jne
es
call
xlat
and
mov
aaa
jmp
sbb
mov
out
call
xchg
call
sar
jno
push
mov
loope
in
jae
sahf
inc
shl
sub
xor
sub
push
jne
shl
aas
mov
in
lahf
das
in
cmp
in
dec
sub
sub
sbb
jnp
bound
push
xor
cs
xor
pop
fcmovbe
xor
dec
and
add
test
sub
dec
or
xchg
xor
mov
aas
inc
and
fisubr
adc
push
lods
inc
sbb
clc
mov
push
xchg
dec
cmp
mov
pushf
jo
shl
fimul
stos
pop
imul
mov
mov
ret
retf
cmc
mov
jo
dec
std
adc
dec
mov
jae
cld
push
mov
ins
push
clc
int3
scas
or
jmp
xchg
push
test
inc
xor
mov
add
xchg
sub
xor
popf
into
dec
inc
and
mov
push
or
sti
xchg
xor
shr
or
sbb
sub
loope
repnz
adc
and
fnstenv
outs
sbb
pop
add
xchg
adc
mov
cli
sub
xor
jmp
out
test
jnp
ins
xor
aaa
movs
or
(bad)
das
fidivr
lock
(bad)
sti
es
cmp
xlat
not
and
(bad)
adc
aas
mov
dec
dec
dec
test
mov
ins
popa
bound
push
dec
movs
fs
mov
mov
in
fiadd
inc
gs
ror
dec
mov
cwde
out
pop
sub
mov
iret
add
lds
add
mov
add
out
jno
push
xor
scas
sub
iret
inc
les
mov
mov
movs
rcr
mov
sub
ins
lods
xchg
mov
xchg
jae
pop
(bad)
mov
pop
adc
sbb
not
daa
ins
aad
xor
dec
mov
mov
jge
inc
sub
jns
adc
test
fidivr
repz
into
sbb
stos
dec
mov
xor
xchg
in
pop
fcom
mov
test
xor
sbb
xchg
mov
add
xchg
sti
sub
test
(bad)
dec
popf
pop
dec
inc
sub
mov
mov
and
xchg
lahf
pop
shl
out
movs
dec
popf
push
icebp
sahf
daa
jnp
xor
adc
inc
fchs
cs
push
cdq
rol
gs
mov
scas
sbb
push
add
adc
mov
jno
dec
stc
mov
aam
(bad)
adc
push
and
mov
sbb
retf
mov
mov
xor
xlat
test
arpl
pop
fisub
xor
dec
or
in
jne
(bad)
cmovp
sub
pop
xchg
fdivr
jmp
pop
jne
sar
(bad)
inc
jmp
dec
out
je
pavgw
stc
cld
sbb
jo
ins
lds
adc
lahf
js
sbb
push
mov
cmp
push
and
jg
jle
inc
or
jno
mov
enter
or
inc
cmp
or
stc
in
mov
dec
push
in
aas
ror
xchg
dec
(bad)
or
fisttp
sub
and
into
stos
mov
xlat
cld
inc
sbb
push
les
and
addr16
aad
in
mov
inc
(bad)
cs
fwait
lea
int
test
sbb
xchg
push
std
aaa
xor
push
push
jno
and
jecxz
xchg
xchg
mov
mov
mov
or
ret
test
addr16
pop
xchg
push
loopne
xor
pop
dec
pop
js
pushf
std
hlt
jecxz
(bad)
hlt
sbb
jle
sbb
jge
xor
add
xchg
stos
stos
jne
pushf
dec
push
test
movs
adc
mov
jbe
xchg
sub
out
and
inc
jmp
or
(bad)
int
out
loopne
adc
pop
rol
mov
jmp
addr16
js
adc
scas
addr16
jo
into
fstp
pop
invd
mov
lahf
push
add
je
mov
ja
xchg
xor
push
sbb
inc
leave
add
ins
xchg
xchg
ss
test
jmp
mov
pop
pushf
xchg
or
inc
mov
sbb
nop
fidiv
pop
mov
inc
cmp
cmps
ins
sub
mov
std
pop
and
jmp
fs
popa
fnstcw
pop
fsubr
(bad)
mov
sub
es
adc
mov
in
cmp
lock
cdq
loopne
out
shl
inc
or
mov
mov
aaa
retf
stos
out
gs
inc
mov
sbb
jp
xchg
or
fs
lods
jg
imul
cmps
cdq
jo
xor
mov
(bad)
xor
sub
mov
dec
sub
mov
mov
neg
xlat
aam
cmps
jb
shr
ins
cmps
jnp
pushf
push
aaa
jge
adc
xchg
jns
adc
repnz
sbb
iret
ror
inc
pop
mov
jb
aad
mov
jg
xchg
popa
or
sub
dec
pop
ret
jmp
(bad)
scas
adc
add
add
gs
mov
(bad)
or
dec
xchg
fadd
xchg
mov
jbe
cmp
jg
xor
jnp
fdivr
frstor
jnp
cmp
icebp
fs
mov
add
std
je
inc
or
adc
push
xor
cmp
fs
js
jae
loopne
mov
or
call
loope
jb
ins
aas
cmp
or
les
nop
jle
xchg
cmp
repnz
sahf
ret
jo
dec
push
and
icebp
ret
int
add
arpl
adc
fcmove
ins
movs
xor
mov
lahf
push
mov
int3
outs
lods
pushf
rcl
xchg
into
pushf
stos
(bad)
and
xchg
push
jmp
push
adc
fxch
sbb
daa
inc
jle
or
sbb
adc
out
mov
stos
jmp
stos
scas
in
leave
test
jns
add
xor
adc
pop
jno
jle
xor
inc
jno
in
popf
dec
mov
and
cwde
fisttp
dec
jbe
xor
lock
call
cmp
in
push
movs
jb
outs
jmp
mov
sahf
fwait
sub
call
add
(bad)
out
inc
xor
sbb
mov
mov
dec
ds
fbstp
sub
cmp
xlat
js
inc
loop
cs
inc
push
adc
jmp
in
ret
xchg
xor
add
sub
push
shr
lds
aad
or
leave
mov
or
stos
por
or
test
pop
pop
lahf
add
xor
stos
xor
scas
xchg
cwde
xchg
lods
aad
in
shl
enter
imul
sub
and
mov
fimul
add
mov
and
scas
and
inc
cmp
dec
inc
jno
mov
scas
std
cmps
lods
and
xchg
jne
cmp
jnp
mov
daa
sbb
loopne
mov
xor
pop
xor
xchg
push
pop
push
out
mov
nop
mov
sub
adc
ja
adc
subps
mov
sbb
fcmovnu
push
push
aam
popf
ja
cmp
mov
in
test
dec
lea
sbb
cmp
sar
hlt
in
push
mov
jno
mov
loop
outs
js
xor
sahf
or
in
fldenv
dec
or
pop
loope
retf
int3
inc
fdiv
add
push
sbb
mov
ret
jecxz
loop
verr
div
sbb
cs
mov
xchg
out
mov
and
push
movaps
enter
out
mov
(bad)
adc
fidivr
dec
sub
push
pusha
nop
cdq
mov
lds
cmp
daa
mov
js
adc
fnstcw
xchg
int
cmp
inc
mov
add
test
iret
les
jecxz
xchg
test
pop
add
adc
add
xchg
cs
in
sbb
inc
or
idiv
popf
push
aad
les
sub
cmp
sbb
fadd
inc
pop
je
pushf
pusha
pop
je
cmps
movs
push
fst
(bad)
iret
adc
mov
in
xchg
scas
imul
sahf
pandn
into
cmp
psubd
fcomi
sub
or
or
retf
xchg
inc
pop
and
ja
popa
mov
xor
into
jmp
push
add
sub
xchg
or
loope
lods
js
push
mov
sti
out
push
add
mov
call
fld
dec
jno
mov
int
and
scas
mov
hlt
aaa
aas
fs
movs
xor
add
mov
pop
in
jne
add
stos
sbb
out
js
cmovg
test
adc
cmp
daa
sbb
(bad)
fild
inc
or
fadd
fisttp
fiadd
mov
(bad)
out
lea
je
sub
adc
aad
dec
xor
imul
repnz
sbb
mov
xor
rcr
pop
mov
mov
cmp
fmul
movhps
inc
call
sub
sbb
repnz
push
cmp
sub
mov
jle
mov
leave
or
mov
leave
fdivrp
pop
mov
dec
cs
imul
inc
out
pop
in
cdq
mov
jp
mov
or
loope
sub
inc
(bad)
sbb
adc
mov
cmp
retf
sub
jnp
inc
or
dec
jne
(bad)
pop
shl
push
std
and
pushf
add
xchg
(bad)
mov
mov
ins
arpl
es
dec
mov
adc
mov
mov
icebp
jp
ficomp
and
retf
cli
cmp
push
das
ja
push
or
scas
inc
popf
ficom
arpl
inc
aad
stc
push
hlt
leave
xchg
aam
xor
inc
sub
add
inc
sub
icebp
inc
fcomp
adc
xchg
sbb
mov
and
fimul
icebp
jge
push
inc
(bad)
arpl
jb
mov
mov
cmc
(bad)
out
imul
or
add
in
push
stc
cld
jmp
shr
push
bnd
lods
and
push
jae
mov
dec
ret
pop
add
mov
pop
pusha
mov
or
lds
inc
jnp
jle
neg
rol
jno
pop
add
mov
sbb
inc
movs
lahf
mov
lods
cmp
mov
xchg
jge
ins
ds
into
out
retf
pop
scas
sti
xlat
adc
jecxz
mov
inc
bound
jae
lds
bound
in
jae
out
bound
outs
fimul
sbb
fld
lea
iret
jmp
add
dec
inc
cmp
into
sbb
ins
rcr
or
and
cmp
adc
sbb
scas
jne
nop
data16
and
add
mov
and
xchg
jmp
push
test
out
hlt
pop
sar
ret
arpl
dec
mov
and
pop
or
cmps
adc
pop
push
inc
pop
jp
inc
stos
inc
push
mov
jb
stc
lea
fadd
push
sub
or
fistp
imul
(bad)
jmp
test
ins
fsub
xor
pop
repz
je
fcmovne
inc
aas
jne
push
mov
cld
ror
or
shl
xor
jne
lds
ins
inc
inc
lods
nop
cmps
pop
cmp
mov
inc
into
das
mov
mov
push
out
aam
inc
(bad)
push
loop
test
xor
add
sahf
fstp
sub
das
pop
cdq
cdq
repz
xor
xor
int3
xor
daa
(bad)
and
sbb
daa
cli
test
dec
mov
mov
mov
mov
inc
mov
stos
add
clc
sar
sub
inc
aam
loop
stos
fdiv
aas
int
cmp
data16
out
repnz
pop
xor
mov
je
lahf
dec
mov
mov
jbe
fwait
and
mul
(bad)
imul
ror
and
mov
lods
xchg
in
lods
sbb
mov
cmps
sbb
push
out
lods
fisttp
repnz
jg
xchg
das
aam
jmp
dec
mov
cmp
out
cmp
push
xor
ror
sbb
and
ins
lock
outs
push
xchg
ret
in
cmp
int3
or
test
jb
das
in
int3
xchg
jns
js
(bad)
aaa
adc
dec
outs
and
ja
mov
jge
jbe
add
sbb
mov
mov
iret
and
cld
or
sbb
es
dec
hlt
inc
retf
repz
out
bound
lods
mov
mov
sbb
mov
sbb
push
loopne
imul
ret
je
adc
mov
ja
mov
ins
adc
sahf
cmp
cld
mov
sbb
shl
call
push
cmp
stos
xor
pop
jns
in
std
popa
or
adc
jle
in
sbb
cld
pop
mov
inc
nop
in
add
mov
add
xchg
cmp
sbb
rcr
in
loopne
nop
cmp
(bad)
int3
lds
aaa
cmp
sbb
std
xchg
xor
ret
call
cdq
stc
scas
outs
mov
into
leave
inc
test
cmp
mov
push
(bad)
fisub
rep
jns
call
pop
imul
pop
xchg
jno
dec
stos
sbb
cmp
push
jmp
mov
loopne
pop
pop
pop
hlt
in
lahf
cmp
and
push
sbb
mov
clc
pop
hlt
fs
aad
loope
jle
ds
sbb
mov
inc
mov
scas
mov
popa
jecxz
dec
and
add
cmp
ins
retf
fisub
std
mov
les
rol
shr
(bad)
iret
adc
ds
movs
mov
and
mov
(bad)
sub
cmc
imul
fwait
pop
push
loop
add
sbb
jmp
push
ja
sub
sahf
mov
dec
pop
sub
cmps
jl
xchg
mov
pop
stos
fnstenv
adc
mov
sbb
mov
cmp
dec
test
add
js
xchg
add
sbb
ds
fld
or
bound
rcl
jge
sbb
rol
shl
test
pop
sub
not
push
cmps
imul
or
jmp
jae
out
dec
jb
stc
sbb
fisubr
cdq
pushf
call
shl
push
cld
js
lods
and
mov
(bad)
jmp
sub
inc
dec
dec
adc
xchg
icebp
inc
icebp
enter
xchg
jno
mov
fdivp
fsubr
(bad)
lock
cmc
jmp
nop
dec
or
mov
dec
add
cs
pop
add
pop
inc
inc
push
and
adc
pop
repz
push
out
pop
outs
(bad)
enter
pusha
push
xor
jnp
into
cmp
and
add
aas
call
sbb
les
xor
cmp
or
and
movs
(bad)
cmp
mov
mov
cmp
and
(bad)
ret
ss
mov
mov
int3
into
cld
or
push
sub
or
retf
test
add
addr16
pop
cmp
aad
imul
loopne
cmps
xchg
or
dec
mov
or
rol
je
imul
adc
repz
mov
sbb
inc
repz
inc
adc
xor
cmp
(bad)
mov
push
bound
scas
ja
xchg
or
jecxz
sbb
test
idiv
inc
mov
push
add
and
inc
sbb
outs
movs
jmp
mov
dec
cmp
xchg
jnp
inc
jmp
jg
inc
and
(bad)
fst
scas
jbe
cmp
sbb
add
test
sub
cmc
mov
pop
ret
sub
sahf
push
(bad)
xor
push
xchg
test
fisub
lods
retf
or
push
test
imul
dec
push
bound
dec
jg
ret
pop
push
imul
xor
xchg
inc
js
inc
mov
jo
inc
and
or
pop
pusha
push
test
vminsd
jno
inc
xor
cs
outs
(bad)
sub
ins
(bad)
push
xchg
sub
imul
xchg
test
ds
rep
idiv
sub
(bad)
ficomp
popf
dec
in
add
test
shl
adc
jmp
addr16
xor
jnp
push
xor
repnz
jns
xchg
xor
xchg
es
push
imul
(bad)
retf
cwde
loope
mov
push
hlt
mov
jno
loop
pop
sti
mov
adc
in
pop
shl
mov
mov
mov
cmp
mov
cli
push
mov
(bad)
adc
adc
cmp
cdq
stos
repz
jnp
mov
push
out
mov
add
mov
cdq
xchg
add
dec
cmp
mov
pop
cld
popf
mov
scas
inc
adc
scas
retf
test
sbb
repnz
shl
test
mov
jge
(bad)
loopne
dec
ins
fidiv
sbb
sbb
sbb
mov
cmps
call
xchg
xor
in
push
cmp
fwait
pop
std
fild
cmp
jg
inc
aaa
(bad)
sahf
cmp
fst
adc
leave
mov
nop
sub
and
jno
jo
xchg
dec
loope
pop
aas
sub
les
inc
jne
cmp
mov
shl
sub
pop
adc
mov
call
movs
mov
das
in
(bad)
shr
(bad)
adc
pop
jg
icebp
das
pop
jp
push
pop
loope
mov
inc
or
xor
(bad)
inc
je
test
or
jmp
jl
adc
add
ins
mov
xor
dec
sbb
inc
mov
mov
fnstcw
mov
pop
mov
and
xchg
and
or
sbb
jp
repz
fidivr
fnstsw
and
es
ffree
xchg
pop
adc
mov
pop
call
jno
scas
and
push
aam
adc
xor
mov
mov
xor
add
xchg
push
mov
add
mov
jge
push
es
cmps
mov
xchg
or
jmp
pusha
push
aad
js
lods
xchg
movs
out
sbb
mov
cmp
mov
mov
sub
jmp
sub
fidivr
movs
cmp
mov
fstp
sbb
cli
dec
arpl
(bad)
and
sbb
aas
mov
(bad)
or
movs
stos
repz
xlat
mov
pushf
cmp
adc
xchg
inc
xchg
mov
test
inc
cwde
loope
xchg
jo
push
cdq
jbe
test
outs
xchg
mov
and
jl
lock
daa
push
fldenv
movs
mov
popf
jmp
cmps
sbb
xor
fnsave
adc
(bad)
push
xchg
addr16
in
sub
(bad)
shl
aam
sub
jbe
gs
stc
dec
xchg
aam
push
mov
jmp
mov
sub
push
stos
cmps
sub
mov
push
pushf
xor
ins
add
shl
mov
jne
xchg
add
(bad)
mov
leave
hlt
mov
mov
pop
mov
pop
add
sbb
dec
loope
sbb
mov
mov
je
out
ss
cwde
inc
pop
cmp
jo
gs
mov
scas
mov
adc
mov
(bad)
lods
push
xchg
jbe
push
push
(bad)
jae
rcl
pop
add
cmc
pop
sti
jle
inc
imul
pop
sub
cmps
xor
repz
ja
fsub
popa
mov
adc
adc
in
jg
add
repz
jmp
inc
push
(bad)
sbb
ds
inc
ja
cmp
aaa
jmp
movs
jae
mov
(bad)
es
test
(bad)
cmp
div
ret
or
ins
pop
jmp
movs
test
push
mov
or
and
pop
dec
mov
jl
mov
in
jle
stos
cmp
inc
sar
mov
add
dec
jns
shl
scas
sub
mov
xchg
cwde
mov
shl
dec
adc
iret
pusha
xchg
sar
into
lea
xor
rcl
cmps
cmp
push
or
enter
sub
mov
nop
shl
cs
push
push
jb
jge
(bad)
imul
retf
xchg
mov
lea
popa
std
inc
rep
push
mov
jo
xchg
jp
movs
mov
adc
push
fcomp
mov
mov
and
movs
mov
sbb
push
mov
call
mov
pop
mov
xor
(bad)
popf
mov
xchg
fimul
nop
fwait
inc
adc
out
adc
test
sti
ins
jge
jle
jmp
mov
push
pop
add
adc
xor
std
ret
call
lds
pop
(bad)
hlt
adc
push
and
mov
leave
cmps
add
lods
mov
push
pop
xchg
jbe
inc
mov
daa
cmps
mov
ror
pushf
mov
fwait
pop
daa
ror
in
xor
mov
sub
jmp
cmp
pop
adc
out
test
test
sti
xchg
pop
sub
leave
jnp
cmp
push
ins
mov
mov
mov
cmp
pop
jp
out
mov
retf
and
jmp
mov
xchg
mov
pop
ins
cli
rcl
cli
push
imul
pop
sub
jecxz
scas
xchg
cmp
mov
icebp
nop
jae
test
(bad)
shl
aaa
inc
jecxz
(bad)
in
xchg
leave
jno
shr
aam
or
cmps
jb
xlat
(bad)
push
inc
mov
sbb
cli
sbb
shr
arpl
ins
popa
add
mov
lea
inc
(bad)
and
mov
test
mov
mov
push
out
pop
or
fs
lahf
xchg
and
pop
(bad)
test
or
movs
popa
inc
(bad)
jbe
pop
push
std
shl
into
cs
call
add
ret
mov
push
mov
outs
sar
or
cmc
popa
sbb
mov
es
mov
outs
les
pop
popf
shl
jge
test
cli
push
scas
cmp
test
std
jns
and
mov
mov
xchg
jl
mov
mov
xchg
xchg
inc
adc
jns
mov
jmp
test
pop
mov
pop
jp
cmp
jecxz
inc
inc
(bad)
imul
imul
push
xor
aad
dec
sti
(bad)
fild
(bad)
and
adc
imul
inc
push
dec
jge
sbb
xor
ins
sbb
add
into
jb
js
call
pop
out
sbb
jb
ror
sbb
lds
(bad)
dec
gs
xchg
pop
jl
ror
xchg
sub
pop
mov
cmp
cld
push
in
dec
fld
mov
pop
dec
imul
mov
stos
mov
ficomp
out
xlat
ja
cs
or
gs
test
mov
out
sub
out
lods
sar
mov
in
int
leave
adc
movs
push
adc
in
cdq
cmp
push
pop
inc
fadd
or
mov
mov
imul
jle
div
mov
nop
inc
outs
test
xchg
jecxz
or
jmp
ins
push
fs
mov
leave
and
sar
ret
inc
rcl
and
dec
dec
add
in
mov
cmp
outs
cdq
xor
inc
pop
dec
inc
fstp
fisttp
inc
std
jp
xchg
ret
mov
xor
mov
or
add
push
push
add
push
cmp
or
jg
outs
stc
je
iret
sub
cli
add
jo
addr16
dec
fdiv
mov
retf
call
xor
xor
arpl
and
or
cmc
dec
mov
mov
jge
btc
xor
dec
pop
ins
add
add
pusha
cmp
and
adc
and
mov
cmp
pop
mov
inc
xchg
fstp
stc
mov
adc
aas
or
inc
cmp
(bad)
fcom
sbb
stc
dec
leave
pop
cwde
xor
cmps
stos
jl
dec
or
cmp
ds
jbe
jns
cmp
sub
ins
leave
js
sbb
cmps
repnz
imul
fnstcw
scas
add
clc
dec
into
test
add
jl
int
push
fimul
imul
push
(bad)
or
cmp
ss
sar
mov
movs
xor
sbb
loope
xchg
repnz
out
cwde
pop
(bad)
push
cs
add
and
dec
fbld
lock
mov
mov
out
jp
sub
dec
ss
retf
sub
adc
out
cwde
xchg
cmp
imul
loope
rol
dec
mov
icebp
cmp
mov
jno
adc
mov
shl
div
mov
and
pop
icebp
or
cli
add
sub
pop
xor
popa
mov
xor
push
xchg
call
bound
sub
cli
push
jg
das
loopne
lds
push
(bad)
xchg
sub
and
or
into
dec
ins
sub
jmp
sbb
scas
sub
pop
add
ja
lar
das
sahf
(bad)
dec
iret
sbb
and
mov
test
icebp
lahf
or
pusha
inc
fst
and
and
in
nop
test
cmp
stc
in
pushf
in
data16
push
mov
mov
add
imul
pop
and
jmp
test
sti
jo
pop
sub
stos
in
fwait
call
xchg
loop
lahf
ror
add
es
fild
push
mov
lock
popa
pop
add
sub
out
leave
shl
pop
inc
fwait
test
popf
dec
into
clc
fwait
addr16
inc
sbb
fprem1
jg
mov
enter
retf
ins
lea
shl
sti
test
adc
shl
xchg
lds
and
and
mov
jne
jnp
inc
ret
cmp
dec
add
cwde
xchg
movs
mov
in
pop
pushf
dec
iret
cmc
cmps
push
jmp
loope
fisttp
mov
retf
(bad)
fcomp
arpl
mov
lods
pop
adc
outs
mov
cmp
scas
repnz
adc
gs
bound
cmp
retf
test
lods
or
je
in
mov
pop
cmp
sbb
sub
outs
push
cmp
mov
mov
xor
test
inc
mov
inc
pop
pop
(bad)
mov
push
add
fidiv
mov
mov
je
mov
dec
xor
adc
adc
(bad)
ds
lds
cmp
data16
lods
mov
jmp
pop
out
mov
push
std
pop
repnz
test
rcl
xchg
inc
mov
cmp
iret
imul
mov
mul
movs
or
nop
sbb
xor
add
add
mov
ins
jbe
cli
sahf
and
das
nop
and
scas
and
xor
icebp
sub
icebp
call
test
mov
xor
dec
(bad)
(bad)
jl
sbb
(bad)
fiadd
add
xchg
ret
mov
cmp
test
addr16
(bad)
fidivr
xchg
out
pop
mov
cmps
or
sahf
dec
xchg
jmp
(bad)
push
test
xor
shl
test
(bad)
dec
icebp
cmp
lock
sub
inc
loopne
adc
push
rcl
rcl
jge
(bad)
cmp
mov
pop
lahf
mov
(bad)
jno
or
mov
and
call
xor
pop
cmp
cmp
xchg
mov
mov
mov
push
mov
mov
jg
xor
push
jmp
mov
iret
push
cmp
jo
push
xor
jo
out
pop
idiv
jbe
retf
adc
aaa
xchg
jg
rol
shl
mov
mov
sahf
push
xchg
xchg
movs
push
push
out
jle
loop
es
lea
mov
jmp
retf
cmp
push
cmp
dec
nop
fisubr
retf
xor
sub
scas
xchg
stc
call
leave
into
adc
adc
or
and
call
sub
dec
pop
mov
imul
mov
dec
ror
dec
inc
adc
pop
sbb
cwde
dec
jae
imul
loope
jae
xchg
mov
das
outs
cmp
pop
es
mov
aaa
and
int3
pop
lahf
dec
jns
loope
jbe
imul
pop
retf
retf
push
aas
fcmovne
add
or
dec
xchg
mov
nop
inc
adc
sub
xlat
iret
scas
push
lock
push
aaa
std
jg
cmp
aas
adc
xchg
sbb
jg
outs
scas
aad
mov
ins
dec
dec
imul
ret
add
sub
cld
repnz
je
jae
pop
cmp
fstp
add
mov
add
addr16
movs
lods
frstor
test
jae
ins
iret
cmp
inc
mov
leave
aad
ret
mov
(bad)
dec
or
leave
sub
aaa
mov
cmp
in
mov
mov
jnp
outs
leave
shl
push
mov
je
fldenv
mov
mov
push
in
scas
ins
mov
sbb
test
and
mov
or
or
inc
add
ja
lods
movs
cmp
mov
in
imul
stos
stos
ja
out
mov
dec
fneni(8087
gs
test
mov
mov
adc
loopne
mov
mov
cmp
dec
loopne
ds
loop
(bad)
add
xor
or
ins
(bad)
clc
mov
aam
sub
or
mov
dec
fnstsw
inc
xchg
pop
dec
cdq
adc
not
cwde
ins
inc
add
cs
jge
mov
xor
movs
loope
fsubr
fidiv
imul
jl
or
pop
sub
in
xor
std
enter
mov
les
jmp
jb
cmp
iret
push
cmps
jg
adc
add
mul
out
xchg
test
test
push
and
cmp
mov
or
test
inc
in
sub
push
into
cld
movs
jmp
movs
bound
retf
daa
not
mov
cmp
ins
daa
enter
inc
jns
sub
pop
retf
popf
dec
dec
cmps
(bad)
cld
cld
mov
sub
stc
daa
adc
ja
sbb
movs
cli
cld
ror
dec
loope
addr16
data16
pop
aas
daa
sbb
repnz
mov
xor
mov
mov
js
daa
sahf
mov
mov
dec
pop
mov
cmc
xlat
sub
pushf
adc
cmp
into
xchg
mov
ror
loop
ja
cmp
lods
movs
jnp
push
mov
jecxz
je
adc
out
fist
adc
shl
sti
xlat
(bad)
adc
out
movs
sub
pop
mov
test
xchg
aam
inc
cmp
fild
pop
shl
addr16
outs
test
in
gs
xor
xor
dec
test
dec
ins
cmc
and
fsubr
xor
jae
cmp
or
jp
mov
stos
imul
jecxz
pop
add
adc
add
cwde
int3
popa
mov
dec
xor
push
mov
sub
inc
xor
inc
mov
imul
cs
out
xchg
fs
add
imul
test
and
cmp
cmp
ja
push
div
adc
pop
push
or
cmp
mov
xchg
mov
out
mov
fisub
popa
mov
mov
pop
lahf
jb
dec
pop
cmps
fs
xchg
sbb
lods
dec
sbb
lods
nop
mov
inc
inc
xor
test
mov
push
clc
mov
into
xor
sbb
and
jo
and
stos
rcr
jae
jnp
ret
std
test
sbb
xchg
mov
mov
cdq
loope
or
xor
jne
xor
inc
rol
loopne
or
stc
fsub
jle
and
jle
xchg
fsubr
outs
lock
cmp
jg
fwait
mov
pusha
mov
ins
push
rcl
(bad)
pushf
sbb
ins
push
mov
lods
rcl
push
xor
arpl
mov
xlat
xor
add
mov
fisttp
or
nop
ins
fst
push
and
sahf
adc
or
xchg
dec
int3
jmp
int
push
loope
in
gs
mov
dec
mov
je
cmp
jg
jo
enter
add
xchg
add
sbb
jg
lea
es
loope
ins
dec
push
inc
or
scas
js
push
repnz
sub
ret
sbb
rcl
fidiv
aas
pop
sub
div
dec
add
xchg
mov
jns
or
sub
cmp
in
dec
jbe
add
fidiv
aas
push
sub
mov
stc
imul
cmp
mov
es
das
out
mov
iret
lods
fst
push
aas
in
dec
mov
push
arpl
mov
sbb
pop
mov
mov
ss
xor
pop
test
test
sub
sahf
fcom
cmc
icebp
sar
sub
xchg
push
push
enter
(bad)
ss
daa
mov
and
mov
cli
jle
xchg
ficomp
push
push
(bad)
mov
int3
fimul
mov
mov
fdivp
inc
jge
add
or
mov
xchg
es
xor
ss
or
and
call
sub
out
fidivr
inc
ds
cmps
loopne
ins
mov
and
jmp
ins
jge
stos
ret
stc
sub
mov
mov
sbb
or
xor
mov
cmp
lock
push
adc
pop
lods
mov
fsub
mov
inc
pop
ja
mov
aad
pushf
sub
fsubr
and
xor
xor
dec
xchg
cwde
loope
inc
or
popa
scas
cld
idiv
cmps
cmps
and
sub
neg
and
pushf
jle
adc
adc
cli
pushw
fidiv
mov
mov
sbb
es
lods
cmp
sbb
mov
jmp
out
sub
add
out
adc
shl
push
jle
test
loopne
in
fs
(bad)
fisub
push
mov
pushf
push
sti
pop
ret
add
aam
add
in
je
or
popf
pop
ror
or
inc
dec
imul
fs
and
rcr
adc
popf
daa
enter
or
cli
jle
es
aad
jnp
inc
or
xor
dec
xchg
mov
cli
inc
xchg
popa
(bad)
pop
ins
ret
pop
inc
adc
enter
js
(bad)
clc
popa
jns
adc
fabs
xchg
shl
fstp
ja
or
fisub
punpckhbw
pop
mov
mov
add
enter
xor
dec
loope
ja
lods
imul
push
loop
(bad)
add
inc
mov
aad
cli
out
sub
das
xchg
ja
cmp
xchg
addr16
lock
xchg
js
std
std
adc
jns
and
repnz
nop
jecxz
fcmovbe
fisttp
xor
mov
mov
cmp
outs
sbb
mov
push
rcr
test
sub
cmp
aad
enter
sub
fisub
pop
jno
mov
ror
in
ss
leave
mov
ret
inc
inc
pop
jp
test
cmp
jle
cmp
push
aad
(bad)
jo
xor
test
dec
enter
loope
xchg
mov
sub
ret
je
xor
(bad)
and
xchg
mov
fs
jae
mov
mov
fiadd
add
mov
push
inc
ins
test
std
pop
cmp
fstp
and
stc
mov
das
add
retf
pushf
jl
iret
in
cmp
and
adc
ficom
xlat
fiadd
cmp
test
scas
das
(bad)
rcr
retf
cld
jbe
add
cmp
pusha
jns
iret
cmp
push
mov
fs
jae
jb
cmp
sar
inc
add
ret
xchg
jbe
stos
jno
jno
js
mov
xchg
daa
cmp
das
test
leave
add
js
data16
mov
dec
std
or
jns
cmp
test
inc
and
sbb
jg
out
addr16
mov
loopne
ret
sub
gs
fwait
sub
cwde
call
jp
push
aas
cwde
pop
inc
push
mov
dec
lods
mov
ins
push
cmp
ret
(bad)
sti
daa
aam
inc
(bad)
pop
sub
ins
cdq
fs
dec
xchg
lods
xor
cmp
push
fidivr
mov
sbb
retf
(bad)
test
cmps
push
popa
sti
test
movs
arpl
div
arpl
mov
inc
pop
or
sub
jno
ret
lods
dec
sbb
mov
mov
or
xlat
sbb
aam
stc
mov
movs
add
xchg
cs
xchg
out
add
jmp
sbb
fcomp
(bad)
pop
fist
sbb
add
xchg
lea
in
xor
cmp
add
mov
out
mov
scas
jmp
aad
retf
scas
sub
mov
xor
add
adc
dec
or
sti
adc
mov
(bad)
cld
hlt
add
lods
sbb
pop
inc
mov
scas
xchg
pop
push
xchg
mov
std
jns
stos
and
daa
cmps
cld
add
jp
add
sub
in
cli
ss
add
int3
pop
idiv
repz
jl
test
ss
out
sub
mov
lds
scas
call
mov
mov
js
sub
or
js
or
clc
(bad)
cmp
xor
sti
jg
fcomp
ins
mov
rol
outs
and
jne
imul
or
or
or
mov
sub
aas
inc
sti
xor
imul
cmps
test
mov
inc
out
stc
sbb
adc
mov
stos
add
iret
nop
lea
or
inc
outs
data16
rcr
retf
cmps
retf
loope
inc
jno
aas
adc
ds
jle
(bad)
rcr
or
xor
out
inc
mov
mov
adc
in
mov
sahf
cmp
jle
ret
push
jl
ins
div
(bad)
stos
cli
mov
fdivr
(bad)
je
jne
inc
pop
sar
stc
pop
push
mov
pop
int3
xchg
cmp
imul
adc
pop
cmp
sbb
in
mov
xlat
sub
test
mov
pop
inc
mov
iret
mov
adc
jno
ins
jae
(bad)
ds
xchg
cwde
js
inc
cld
(bad)
cmp
clc
mov
adc
jo
cmp
xchg
mov
jecxz
adc
and
(bad)
jp
inc
les
add
adc
jg
jecxz
inc
inc
jno
in
mov
mov
aam
fwait
adc
stos
icebp
rcr
jp
xor
bound
pop
stos
call
and
imul
jo
es
test
jae
ja
cmp
mov
cdq
mov
and
inc
push
mov
call
cmc
mov
stos
fcmovb
icebp
xchg
movs
ins
sub
cli
repz
stc
sbb
jae
imul
xchg
cwde
jbe
add
shr
repz
pop
lods
cli
in
repz
int
ins
out
sub
inc
mov
pop
dec
cmps
jecxz
adc
jmp
mov
or
pop
push
or
ficom
sbb
dec
inc
add
movs
(bad)
loope
mov
inc
les
xor
pop
xchg
ror
push
retf
adc
aam
(bad)
fwait
rol
jae
fsubr
sub
xlat
into
in
lods
in
std
call
mov
out
test
and
mov
into
daa
idiv
sub
sahf
push
sub
and
(bad)
pop
push
fadd
xor
sub
inc
frstor
jb
pop
adc
xchg
pop
inc
dec
sub
jbe
push
hlt
push
jae
mov
or
pusha
jmp
push
and
dec
ins
pushf
mov
ins
or
retf
cmp
jno
cld
and
xor
loope
lods
add
jecxz
icebp
imul
lods
pop
add
xchg
(bad)
pop
out
pop
js
xchg
sbb
sbb
xchg
mov
mov
jle
pushf
push
and
add
clc
mov
pcmpeqb
popa
inc
inc
shr
lahf
jle
xchg
pop
mov
mov
iret
sbb
jmp
adc
cmp
(bad)
shl
cmps
jge
aam
cwde
addr16
jg
mov
dec
adc
mov
lods
outs
inc
cmps
xchg
call
xor
rcr
fiadd
loope
jge
int3
mov
xchg
test
iret
popa
out
cmp
(bad)
shr
push
scas
and
or
call
xlat
xchg
arpl
and
ror
or
stc
xchg
fdivr
fisttp
fmul
out
daa
mov
pusha
out
jp
mov
data16
scas
hlt
cmp
cmps
cmps
pop
fmul
std
adc
xchg
xor
push
mov
cld
or
stos
push
dec
fs
xchg
out
inc
mov
out
gs
ss
push
inc
xor
js
out
iret
jle
mov
into
cmps
fsub
inc
push
jge
jnp
inc
cs
stos
out
cmp
mov
fs
shr
or
mov
xlat
loope
xchg
mov
nop
fild
xchg
std
out
cmp
sub
jp
test
xchg
push
mov
cs
movs
fld
(bad)
and
je
mov
adc
int3
cmp
scas
jg
mov
pop
xor
fimul
add
fs
sub
iret
or
test
jl
daa
inc
or
add
les
test
pop
fwait
dec
or
movs
repz
pop
jno
and
cli
jmp
inc
mov
ds
in
(bad)
retf
sub
dec
add
and
adc
pop
push
gs
cs
ds
add
fcmovnbe
dec
add
cmp
add
mov
mov
jge
xor
fcmovbe
mov
arpl
mov
shr
ret
xlat
xchg
aaa
sbb
xor
sbb
out
xchg
call
call
xor
in
cs
mov
les
and
retf
adc
movs
jnp
push
dec
std
pop
jg
daa
stos
sub
adc
inc
adc
mov
call
push
mov
adc
mov
add
sub
ficomp
shl
fwait
jp
retf
in
pop
mov
ds
hlt
rcl
inc
xlat
inc
ret
mov
repnz
aaa
mov
jle
jns
pop
mov
mov
jg
out
cs
jmp
cmc
ror
sbb
or
aaa
inc
inc
into
test
js
sar
mov
popa
sar
sub
das
jae
aam
add
mov
pop
push
fst
sbb
and
cmp
and
das
cmp
push
ins
fcomi
call
pop
xchg
pop
movs
inc
sub
push
and
or
cmp
icebp
and
and
adc
fisttp
icebp
ret
push
jbe
sti
pop
cdq
or
sahf
inc
mov
test
add
(bad)
aam
aam
mov
jecxz
gs
cld
and
iret
inc
mov
sub
call
pop
pusha
sub
mov
test
sbb
cmps
or
cmp
pop
loop
outs
and
add
xor
sub
and
mov
nop
test
push
ds
int
pop
xchg
ret
dec
and
in
nop
xchg
(bad)
jmp
push
leave
jecxz
fisub
sahf
push
pop
mov
aam
adc
out
mov
jns
dec
mov
in
and
(bad)
jmp
ins
stos
es
xchg
pop
inc
xlat
sub
mov
imul
jns
inc
sub
nop
sbb
adc
sar
test
inc
inc
fcom
js
pop
jge
inc
fincstp
lods
cli
and
lods
je
popa
sbb
mov
int3
cdq
ins
ret
lahf
in
add
clc
mov
fistp
xchg
mul
mov
xchg
pop
push
xchg
cmp
or
jnp
(bad)
inc
xchg
call
xor
xchg
shl
or
inc
cwde
fdivrp
dec
mov
cmp
es
inc
pop
cdq
mov
sub
mov
cmps
retf
bound
test
aaa
scas
sbb
aaa
inc
sub
inc
fs
mov
test
clc
loopne
and
idiv
or
test
loopne
ins
fidiv
aad
push
push
sbb
cmp
ror
retf
xor
outs
sub
sbb
outs
adc
sbb
int3
lea
cmp
add
lods
sub
sar
add
stos
xor
mov
enter
inc
or
xor
shl
cmps
sti
cs
push
mov
test
push
outs
test
call
out
add
jge
movs
pusha
and
add
das
imul
mov
adc
adc
test
pusha
into
ss
bound
xor
inc
aas
aad
je
out
dec
xchg
leave
loop
mov
lock
ret
std
push
jecxz
jge
sub
call
xor
xor
ror
fst
inc
mov
or
mov
sbb
jb
xchg
mov
inc
jne
retf
popf
add
sti
push
xchg
gs
sbb
jnp
fadd
xchg
push
enter
mov
in
in
jb
jne
sub
out
mov
adc
mov
jg
cld
sub
pop
jno
aad
aad
mov
jnp
mov
push
sbb
pop
sub
loop
push
cmps
out
loop
dec
mov
mov
jmp
or
clc
cmps
(bad)
xor
mov
inc
push
pop
adc
js
cld
popf
sbb
es
test
movs
lock
dec
xchg
arpl
loope
js
mov
pop
sub
jae
dec
cmp
cmp
(bad)
mov
mov
cmp
mov
mov
out
nop
jmp
lahf
sbb
pusha
fsubr
arpl
sbb
adc
fstp
jbe
push
les
cmp
inc
ret
bound
test
in
call
adc
aas
ror
xchg
daa
jge
sti
pop
dec
outs
movs
int
stc
sub
inc
cwde
or
adc
cmp
mov
hlt
mov
or
aad
retf
pop
cld
and
adc
retf
add
call
ret
repnz
dec
in
xor
cmp
push
mov
(bad)
sar
sbb
inc
lahf
sbb
loopne
and
pop
loopne
jp
or
inc
inc
sub
jne
jne
pcmpeqd
pusha
aad
iret
into
or
loop
aaa
imul
in
and
add
pop
retf
jne
jg
sahf
mov
add
mov
inc
in
or
jbe
movs
stos
jg
gs
mov
icebp
movs
pop
push
cmp
sub
adc
cdq
in
ret
shl
jecxz
fwait
mov
dec
pop
jo
fdiv
rcr
push
xchg
or
dec
mov
adc
dec
sahf
mov
cwde
mov
inc
add
mov
or
lock
js
add
cmp
mov
pop
idiv
sub
stos
cld
imul
or
dec
jl
sbb
pop
jb
loopne
mov
fimul
and
cmp
adc
aas
loopne
push
out
jo
stos
add
jae
clc
push
mov
lahf
(bad)
mov
push
inc
sar
ins
pop
enter
imul
jp
in
mov
mov
test
push
or
aad
pop
sbb
shl
sub
sbb
jp
sub
lock
pop
push
imul
ss
int3
mov
add
adc
or
iret
das
outs
and
xlat
mov
mov
jbe
sub
hlt
in
add
ss
sbb
jle
outs
fwait
adc
ins
and
leave
pop
(bad)
sub
in
repz
aas
lods
pop
xor
mov
ret
jge
imul
sbb
jns
inc
and
push
mov
xor
add
push
and
dec
adc
sub
push
mov
ss
mov
fcmovu
push
push
and
xor
xchg
ins
pop
rcl
outs
sbb
sbb
aad
test
(bad)
mov
sub
push
sbb
aaa
ins
inc
jnp
jmp
ja
dec
in
mov
out
or
lock
mov
fnsave
lock
ror
stos
mov
shl
dec
fist
pop
add
or
das
jge
lock
test
jmp
int
pusha
inc
repz
loop
inc
or
call
in
inc
mov
or
inc
xor
push
in
and
cwde
imul
retf
scas
and
pop
push
and
dec
sub
cmp
mov
jge
pusha
stos
xchg
repnz
call
fucomp
cmps
mov
sar
je
mov
out
add
in
aad
lods
dec
inc
in
std
xor
outs
icebp
mov
mov
mov
ja
push
bound
and
dec
loope
mov
(bad)
cs
xchg
std
mov
mov
sbb
xor
inc
(bad)
adc
dec
test
shl
and
xchg
in
int
push
xchg
cwde
out
jle
inc
pop
mov
mov
shr
in
aad
stos
inc
pop
mov
sbb
rcr
adc
inc
clc
jnp
shr
in
(bad)
pusha
mov
push
push
movs
iret
adc
mov
repnz
(bad)
neg
add
xchg
cmps
sub
mov
push
ds
and
test
inc
sbb
xchg
inc
or
jno
mov
and
dec
(bad)
enter
or
out
ret
or
repnz
jne
leave
pop
mov
jmp
mov
jle
lahf
fild
ficom
pop
jb
mov
mov
cmp
mov
hlt
mov
jl
mov
cmp
repnz
cmc
jno
or
pop
cli
fiadd
inc
rol
arpl
ficomp
(bad)
sbb
call
rcr
loope
call
mov
cmp
ror
arpl
scas
sar
adc
enter
in
cmps
gs
adc
inc
mov
cmp
xchg
add
test
in
in
xor
xchg
repz
xchg
mov
fmul
cld
cmp
lods
(bad)
xor
(bad)
push
in
add
bound
sub
aad
add
dec
add
or
movs
xor
jp
dec
jae
mov
int
jae
in
cmp
stos
(bad)
xchg
jmp
cmp
push
mov
mov
stos
out
sub
clc
cmp
cli
dec
pop
add
ins
je
adc
push
jo
pushf
imul
sbb
mov
cmp
lods
push
mov
sbb
push
loopne
or
sahf
(bad)
aam
sti
sub
movs
sub
stos
sub
mov
clc
(bad)
xor
and
push
or
rol
dec
es
adc
(bad)
stos
ret
mov
dec
xor
inc
mov
jmp
cdq
call
push
mov
stc
dec
jno
push
mov
sub
shl
jae
and
jnp
push
mov
mov
sbb
cmp
mov
push
aaa
add
es
test
sbb
fisttp
xor
mov
sbb
inc
push
shr
shl
add
in
adc
or
sbb
adc
pop
xor
add
and
lods
xchg
dec
std
(bad)
and
std
cmc
push
push
cs
and
je
ret
xchg
imul
rcl
in
pop
out
mov
jg
(bad)
inc
mov
xchg
(bad)
in
rcr
pop
pop
mov
ret
cmp
push
dec
push
mov
inc
shl
sahf
movs
sbb
jo
mov
cmp
loope
(bad)
push
sub
enter
cmc
xor
stos
push
(bad)
loop
dec
dec
cld
cmp
pop
ret
cmps
data16
fisttp
push
inc
ret
or
addr16
mov
push
cld
iret
adc
aaa
cwde
aas
enter
sub
push
popf
fimul
das
pop
jg
xor
push
fwait
sub
inc
xor
movs
jge
in
pop
push
or
sar
out
or
lods
sbb
inc
lds
popf
movs
inc
out
adc
test
into
fist
xchg
xor
cmps
add
loopne
dec
pop
adc
arpl
push
rol
push
xchg
push
cmp
lock
daa
in
je
mov
adc
test
sub
xor
xchg
and
jmp
sbb
mov
jl
xchg
inc
repnz
or
add
shr
or
adc
lods
int
pop
pop
jo
enter
push
int3
and
cmps
adc
out
mov
or
outs
fidivr
pop
dec
int3
imul
pushf
cmp
sahf
call
adc
add
and
inc
sub
loope
(bad)
mov
and
sub
rcr
sub
dec
repnz
inc
sar
dec
loope
adc
in
jl
not
inc
les
in
jle
(bad)
mov
gs
int3
mov
mov
mov
mov
ret
xor
inc
jmp
test
fnstenv
iret
in
fucomi
into
mov
xchg
xor
push
out
xchg
jmp
sub
movs
mov
fidivr
mov
loop
add
sub
pusha
ret
inc
jns
mov
pop
inc
pop
xchg
aas
push
lods
cs
mov
mov
das
(bad)
fadd
pop
iret
mov
xor
or
or
popa
mov
loope
retf
cli
ror
pop
mov
cs
jno
mov
in
inc
sub
es
inc
int3
jp
jl
ret
shl
adc
cld
daa
pop
rol
push
(bad)
mov
dec
push
enter
and
cs
push
daa
dec
pop
pop
xchg
jp
outs
xchg
mov
jmp
js
jae
jecxz
mov
cmps
outs
cmp
push
and
(bad)
scas
mov
cmps
mov
mov
pusha
dec
aad
or
sbb
mov
std
xchg
xchg
daa
ret
push
fld
pushf
push
ds
gs
stc
fisttp
cmp
push
sbb
ins
ins
lds
ret
bound
out
xchg
xor
or
sub
pop
inc
push
stc
and
out
daa
pusha
pop
rcl
dec
pop
push
adc
test
and
ror
mov
loop
test
push
fsub
imul
or
dec
cwde
inc
dec
push
(bad)
sbb
enter
mov
int3
adc
fld
les
cwde
sub
fistp
xor
dec
out
mov
data16
loopne
in
add
sbb
mov
shl
dec
xor
lahf
cmp
call
adc
mov
inc
push
fcomp
push
add
and
cmp
in
xor
dec
stc
xor
cmps
cmp
xor
add
bnd
xor
push
pop
daa
push
mov
cmp
or
jns
leave
or
xor
test
mov
pop
sbb
stc
ficom
xor
(bad)
cli
mov
repnz
xchg
mov
mov
jmp
or
(bad)
jns
sub
jg
adc
xchg
dec
jne
leave
mov
jne
dec
test
cdq
dec
iret
push
jmp
and
xchg
cmps
mov
mov
push
test
cmps
xchg
add
jl
xchg
cmp
rcl
arpl
inc
es
jbe
fs
pop
jae
scas
bound
hlt
out
rcr
mov
add
dec
cmc
sub
jns
je
mov
pushf
inc
popf
dec
push
sub
fwait
lock
xchg
pop
mov
or
ret
dec
daa
adc
sbb
fdivr
rcl
daa
mov
jbe
mov
xchg
adc
pop
cmp
test
dec
jl
adc
repnz
mov
enter
pusha
out
lock
or
pop
mov
mov
ins
(bad)
jne
les
imul
pushf
hlt
fimul
ins
sbb
mov
cwde
icebp
jae
mov
mov
lds
pop
shr
cmp
adc
or
pop
(bad)
mov
sti
and
sbb
addr16
mov
mov
outs
sub
jo
stc
lock
jb
push
cwde
in
jne
fcom
into
test
sbb
fild
cmp
sti
cmp
shl
je
cmp
mov
mov
lock
stos
scas
jmp
and
xchg
retf
cmp
icebp
(bad)
push
push
and
jno
push
jl
sar
push
cmps
sub
ds
leave
sub
pop
xchg
das
sbb
add
ins
mov
jmp
clc
push
cmp
mov
jbe
adc
stos
(bad)
push
xor
arpl
rol
mov
mov
hlt
mov
jecxz
mov
push
fild
sbb
popf
cli
push
inc
xchg
jl
data16
xor
shl
lea
and
jle
inc
xchg
adc
cld
lea
xor
xchg
pusha
mov
jo
dec
push
dec
ret
cmp
test
(bad)
fld
not
test
jmp
push
in
out
jmp
xchg
xor
or
pop
fbstp
inc
fisubr
pop
and
jmp
mov
pop
in
jmp
mov
loop
stc
mov
stc
mov
mov
or
js
mov
jns
adc
jecxz
leave
sar
fidivr
test
repz
outs
pop
mov
xchg
ss
ds
dec
outs
sti
sbb
mov
jmp
mov
dec
movups
dec
xlat
sub
cmps
push
aad
cdq
add
jno
addr16
into
mov
and
jg
or
jb
cmp
popf
adc
pop
loopne
fwait
jmp
stc
dec
mov
repz
push
hlt
pop
cmp
movs
(bad)
lahf
adc
je
push
inc
loopne
shl
jb
(bad)
mov
push
push
out
mov
xchg
test
mov
sbb
stc
sub
dec
dec
fcmovnu
shr
push
out
jno
repnz
stos
je
push
icebp
je
xor
and
in
inc
outs
sub
pop
jle
aas
paddsb
clc
xor
pop
xor
pop
or
mov
pop
sub
inc
and
into
xchg
mov
sahf
int3
in
ret
jmp
sti
xlat
jo
push
test
retf
bound
jge
push
loope
dec
jno
inc
jge
cmps
call
les
fidiv
mov
les
not
xor
out
es
mov
add
sbb
sub
lods
or
cli
jl
mov
cmp
and
pop
ja
pop
mov
xor
call
repz
inc
icebp
mov
sub
mov
popf
cdq
or
or
movd
leave
mov
js
jg
hlt
sub
arpl
xor
ret
xchg
bound
stos
cmp
movs
pop
pop
pop
add
push
push
push
inc
out
rol
ds
int3
xchg
mov
and
ret
fmul
sub
and
or
js
mov
arpl
inc
bound
dec
xlat
sahf
fild
mov
(bad)
dec
inc
xor
cmp
cmc
frstor
sbb
adc
pop
call
pop
stos
pop
rol
retf
dec
test
fcmove
ds
inc
and
mov
mov
pop
mov
jno
cdq
cmp
fbld
pop
push
enter
ret
pop
sub
fs
push
sbb
rol
scas
ret
lock
add
lods
retf
js
or
stc
repnz
xchg
inc
or
xchg
sbb
rcr
pop
xchg
jb
loopne
inc
inc
pop
sbb
xor
(bad)
call
pusha
ror
sub
cwde
add
or
mov
add
ss
pop
ret
xchg
pop
in
call
(bad)
cmp
out
pop
adc
cmp
(bad)
jmp
mov
dec
cs
retf
(bad)
mov
lds
sar
add
cmp
mov
xor
cwde
mov
sub
push
cld
add
call
test
in
dec
jmp
(bad)
ds
push
or
dec
mov
leave
mov
xor
and
jp
out
outs
adc
push
std
jecxz
in
mov
scas
(bad)
std
push
inc
cdq
pop
lahf
adc
dec
pop
in
ss
fbld
pop
cmp
adc
dec
cdq
adc
ins
daa
pop
imul
in
shl
sti
xchg
inc
pop
fisttp
mov
push
xor
push
pop
jle
mov
lahf
jmp
sbb
mov
neg
stos
gs
jne
rol
mov
adc
cmp
dec
jmp
jae
retf
es
pop
jle
pop
sbb
pop
mov
rcr
hlt
leave
dec
adc
jne
and
fistp
xchg
loope
sub
mov
sbb
mov
pusha
loopne
sbb
call
add
cmp
std
daa
add
lea
stc
dec
(bad)
ror
(bad)
jl
test
inc
loop
add
jge
add
mov
push
inc
xlat
sbb
sub
sub
int
les
fild
and
(bad)
or
sbb
gs
ja
(bad)
hlt
fidivr
fstp
movs
xor
cld
icebp
fwait
inc
cli
xor
stc
push
rcr
loopne
dec
push
call
add
add
adc
loop
add
fwait
cmp
jnp
or
adc
hlt
outs
in
cmp
mov
mov
imul
fldenv
lods
jnp
push
lahf
call
iret
(bad)
and
call
pop
push
cs
push
pop
sub
mov
or
nop
in
xchg
inc
xor
mov
fdiv
cmp
ret
lock
into
fwait
dec
pop
daa
ja
int
jl
out
int3
push
retf
xor
push
sahf
xchg
popa
mov
sub
inc
sbb
mov
(bad)
aad
jl
pop
and
fs
cmp
pop
lock
popa
lods
push
imul
pop
add
lock
fsubr
gs
pushf
addr16
and
jp
or
stos
aaa
pop
push
shl
js
jb
in
iret
mov
push
sub
sub
cmps
pop
mov
leave
mov
fcomi
push
mov
inc
or
test
mov
js
jbe
fxch
test
lods
adc
icebp
stc
sbb
sahf
mov
inc
add
inc
rol
pop
and
and
cld
fmul
adc
cmp
lods
add
test
cmps
adc
call
adc
aam
or
adc
sub
and
neg
mov
cli
jecxz
lea
rol
mov
sti
sbb
mov
or
add
sub
push
xchg
nop
push
bound
cmps
lds
rcl
lock
mov
and
cmps
jmp
(bad)
or
xchg
gs
and
cmp
mov
pop
cmovne
xlat
(bad)
enter
clc
pop
xor
mov
pop
(bad)
jmp
es
out
inc
cmp
int3
and
inc
and
repz
xchg
jecxz
sub
inc
repz
or
adc
lahf
jae
push
(bad)
bound
mov
pop
idiv
jl
pop
xchg
jge
call
inc
and
dec
mov
xor
mov
int3
dec
ja
sbb
push
cmps
push
retf
icebp
stc
movs
rcr
icebp
adc
or
dec
mov
push
and
scas
inc
scas
sbb
mov
fdivr
pusha
outs
dec
inc
int
call
xor
fs
addr16
jg
or
out
gs
call
add
std
sbb
js
int3
cmp
mov
sub
je
or
in
jmp
mov
add
adc
enter
test
sbb
mov
iret
sub
dec
pop
push
dec
(bad)
cld
add
push
bound
xchg
ja
inc
rcl
inc
popf
out
inc
cmp
outs
or
mov
pop
mov
aas
xlat
out
ss
cmp
mov
sbb
scas
leave
xchg
mov
push
out
movs
pop
push
pop
gs
in
jle
jae
imul
mul
outs
in
adc
popf
jg
inc
sbb
and
xchg
push
imul
sbb
fxch
out
inc
lods
ins
ss
and
inc
xchg
mov
mov
call
(bad)
repz
mov
mov
sub
inc
call
fs
jno
scas
inc
inc
mov
xchg
pop
mov
xchg
out
and
mov
mov
or
mov
data16
(bad)
dec
sub
mov
and
pusha
retf
inc
sbb
fwait
cmp
mov
cmps
cmp
mov
test
mov
cmp
cld
(bad)
enter
out
or
js
push
pusha
mov
call
stos
outs
cmp
mov
loopne
mov
in
dec
and
out
push
lea
xchg
mov
cmp
jno
mov
mov
xchg
mov
xchg
rcl
call
rol
push
aad
(bad)
jge
xor
popa
or
jnp
ins
(bad)
cmp
cmp
mov
dec
or
clc
out
sar
adc
add
outs
inc
imul
fwait
and
xor
in
xor
imul
lahf
mov
jb
sub
add
stos
cwde
jge
daa
fsub
push
neg
mov
push
dec
mov
pop
bnd
mov
adc
sbb
mov
xor
jmp
adc
adc
int
out
xor
add
xchg
daa
pop
cmps
xor
xchg
sub
push
into
unpcklps
inc
cmp
sti
mov
xor
stos
fcmovb
pusha
inc
and
mov
pushf
adc
xchg
pop
loope
daa
dec
sahf
(bad)
in
add
dec
clc
(bad)
mov
inc
sub
je
clc
lods
dec
xchg
sahf
js
xlat
(bad)
out
test
push
(bad)
jae
adc
(bad)
jge
test
ror
mov
add
imul
jno
add
inc
stos
enter
(bad)
ror
ds
cmp
xchg
mov
mov
(bad)
int3
adc
ror
hlt
ss
cli
(bad)
and
iret
in
outs
pop
ror
repnz
out
clc
test
xchg
int3
inc
xchg
js
pop
icebp
out
inc
sbb
xchg
cmp
les
iret
jecxz
inc
jmp
das
ds
xchg
jns
stos
lea
leave
inc
fs
dec
inc
jg
sbb
jae
push
test
and
cmc
enter
test
jb
adc
(bad)
jl
pusha
mov
mov
sbb
int
ins
inc
and
lods
inc
(bad)
in
out
and
test
pop
fsub
retf
(bad)
(bad)
add
pusha
test
adc
movs
pop
mov
lock
push
in
aam
add
rcr
jns
mov
enter
inc
mov
pushf
and
add
rcl
into
push
sbb
(bad)
cld
aad
fnstenv
pop
or
les
imul
push
xchg
cld
rcl
fld
aas
xchg
jno
push
pop
xchg
xchg
jecxz
cmp
iret
mov
mov
mov
add
push
(bad)
pop
in
push
(bad)
std
xor
and
(bad)
dec
jo
fimul
in
movs
ins
xchg
adc
cwde
jnp
adc
mov
(bad)
les
jg
les
add
cmp
mov
or
cmps
pop
in
fsub
clc
dec
dec
mov
jno
push
and
icebp
add
sbb
aaa
adc
jmp
nop
adc
inc
faddp
or
out
int
fs
clc
or
outs
dec
and
sbb
cmp
xor
inc
(bad)
inc
pop
or
jno
(bad)
fcmovu
hlt
enter
outs
std
movs
jecxz
cmps
pop
jne
dec
mov
fiadd
xor
mov
lock
add
jmp
inc
or
mov
sub
fiadd
push
into
adc
out
inc
jecxz
push
mov
sar
(bad)
out
push
add
mov
dec
pusha
mov
or
inc
sub
imul
pop
add
cmp
jne
clc
pop
out
outs
movs
hlt
jns
xchg
pop
repz
pop
add
aam
mov
jl
sti
add
jmp
ret
sub
inc
les
dec
mov
sti
cmp
hlt
sti
nop
jmp
out
xor
arpl
or
arpl
pop
jmp
jne
in
xchg
jmp
cmp
call
daa
dec
rep
mov
push
xchg
fiadd
inc
add
xor
dec
ins
and
pop
push
sbb
sbb
adc
inc
lock
lock
add
xchg
cmps
pop
lock
xchg
setbe
add
iret
cmp
pop
mov
ja
ins
cmp
fcmovnu
imul
dec
mov
mov
dec
add
inc
cld
(bad)
out
xchg
loop
push
xor
data16
popa
dec
push
ins
fld
pop
or
xchg
in
test
enter
dec
pop
nop
je
dec
nop
inc
ss
stos
push
push
cmp
push
test
icebp
mov
inc
adc
cmps
mov
int3
cwde
mov
add
aaa
mov
js
je
cld
inc
sbb
dec
or
mov
test
das
dec
sbb
std
jbe
push
jp
aad
sbb
dec
xchg
aaa
jg
jbe
jg
xor
inc
test
es
cmp
loope
push
xchg
mov
jne
mov
ja
cmp
(bad)
jl
sub
nop
adc
pop
cli
or
push
dec
cmp
jo
(bad)
stos
scas
cdq
or
dec
add
fnstsw
add
mov
mov
das
push
das
mov
mov
xor
push
mov
das
jnp
icebp
push
repz
shl
and
pop
inc
popf
pop
iret
fsub
cmp
int3
or
fild
mov
sbb
aas
lods
pop
mov
and
(bad)
jge
sti
stos
ret
stos
jge
les
jecxz
mov
mov
ret
sub
sub
test
enter
mov
jg
lds
sbb
jl
or
shr
cdq
fnstsw
xchg
inc
dec
sub
jmp
mul
clc
xor
mov
mov
shl
mov
mov
loope
dec
add
cmp
repz
loopne
fbld
sar
outs
in
sbb
mov
mov
test
inc
xchg
inc
iret
dec
repz
or
rcl
sub
call
outs
jnp
mov
mov
gs
and
jbe
test
xor
js
mov
xor
mov
or
mov
add
push
cmp
adc
sub
aad
test
outs
leave
jge
pop
mov
jecxz
xchg
cmp
xchg
(bad)
test
mov
shr
fimul
in
inc
(bad)
pop
scas
dec
in
imul
cmp
xchg
mov
jp
ss
gs
sbb
mov
fimul
out
jb
aad
aas
and
aaa
sbb
sbb
inc
jle
(bad)
push
(bad)
mov
in
and
retf
cs
stos
xor
mov
sub
ins
fst
xlat
mov
in
(bad)
sub
or
jns
cli
inc
imul
add
pop
adc
xchg
test
sahf
cwde
in
(bad)
stos
loope
dec
ja
cmps
mov
cmps
jbe
sub
xor
xor
cmp
call
mov
cmc
test
pop
xchg
inc
ss
idiv
pop
cs
je
out
xchg
adc
das
loopne
mov
mov
sub
or
dec
sar
jg
push
inc
(bad)
stos
dec
fbstp
and
aam
xor
stc
pop
cmp
cwde
lods
mov
jo
adc
xchg
in
stos
(bad)
jno
sub
loop
push
mov
pop
cdq
or
stos
ins
in
out
and
cmps
mov
inc
push
push
not
dec
pop
or
adc
or
jmp
mov
mov
and
popf
not
(bad)
lock
fwait
jo
scas
cmp
loope
fld
xor
mov
mov
(bad)
pop
lea
mov
fnstcw
sub
or
or
out
mov
imul
cld
aad
mov
addr16
into
mov
adc
push
test
lock
push
arpl
stos
bound
popa
(bad)
mov
mov
dec
and
pop
out
mov
loop
loopne
mov
and
adc
outs
push
in
(bad)
xor
jmp
jbe
daa
repz
test
jo
xor
fnstenv
pop
push
in
retf
cmps
xchg
pusha
push
not
cmp
lds
add
cld
arpl
xor
test
pop
cmp
fwait
inc
shr
shl
push
bnd
sub
add
push
dec
sbb
mov
aaa
call
in
mov
add
ss
daa
push
mov
arpl
hlt
push
mov
cmp
mov
movs
cmp
mov
call
out
enter
mov
cmp
jne
or
sbb
pusha
push
add
pushf
jl
xor
push
push
cdq
cmp
push
lock
or
mov
imul
shr
push
sub
dec
retf
inc
push
pop
adc
sub
stc
(bad)
in
shr
aam
leave
test
jmp
aaa
mov
jmp
xchg
mov
dec
mov
push
(bad)
sub
fld
and
jmp
mov
cmp
lea
mov
dec
cs
sub
fistp
movs
call
and
xor
inc
jmp
inc
mov
sub
jnp
call
ss
add
daa
out
xchg
dec
mov
stos
in
out
in
or
fcom
inc
outs
sbb
xor
jl
add
push
pushf
cmp
retf
loope
sub
push
push
mov
cwde
sub
rcr
push
dec
sub
push
cld
lods
aas
sar
imul
imul
iret
adc
movs
mov
push
and
add
push
jo
jbe
xor
and
pop
push
mov
repz
mov
scas
dec
out
sbb
shr
clc
push
lods
mov
jae
outs
pop
xor
fst
fstp
popf
mov
mov
xor
iret
rcr
int
dec
lock
add
jge
pop
or
test
dec
movs
mov
and
sbb
mov
hlt
mov
jmp
scas
je
inc
or
cmp
(bad)
xchg
jno
jle
sbb
mov
(bad)
call
and
mov
and
sbb
arpl
aad
sub
(bad)
lahf
aad
(bad)
xchg
xchg
int3
loopne
sub
add
jmp
adc
stos
mov
nop
int3
ss
mov
adc
aad
fdiv
mov
mov
jmp
mov
mov
fsubr
fs
cmp
jnp
xchg
sub
punpcklwd
sub
xchg
std
mov
sbb
xor
sbb
ins
cmc
into
pop
ja
jae
cwde
loopne
mov
ss
movs
mov
aad
xor
test
cmp
retf
daa
fadd
inc
xor
ret
in
jbe
aas
mov
ins
inc
and
mov
imul
fcom
movs
repnz
loop
jno
enter
adc
push
or
shl
retf
int3
mov
icebp
dec
mov
into
mul
xchg
mov
fnstenv
inc
pop
xchg
out
mov
add
lahf
in
(bad)
jmp
dec
ret
test
ficom
pop
dec
xor
xchg
loop
pop
cmp
loope
outs
sbb
mov
fsubr
test
jg
xor
mov
mov
stos
cmps
imul
call
push
jne
xor
ins
dec
xchg
add
jge
push
neg
int
out
add
punpckhwd
pop
sbb
adc
in
aas
or
(bad)
mov
cmp
cwde
mov
sbb
jmp
retf
lahf
call
or
call
sbb
(bad)
pop
inc
outs
data16
mov
dec
jg
test
mov
sbb
sub
dec
adc
add
in
and
rcl
cli
inc
ss
mov
add
push
sbb
sub
repnz
cmc
mov
adc
cld
cmp
(bad)
cdq
inc
dec
sbb
out
int3
push
dec
mov
jg
xchg
test
adc
lock
xchg
jnp
sbb
cmps
xor
call
clc
inc
jg
(bad)
pop
xlat
mov
mov
fst
dec
adc
loope
sub
and
jg
pop
adc
aam
push
in
or
mov
scas
idiv
in
mov
xchg
jle
stos
xchg
and
adc
test
fwait
push
daa
inc
movs
retf
enter
nop
ss
les
xor
stos
sub
hlt
adc
add
aaa
dec
les
popa
retf
aam
enter
add
mov
loope
jbe
and
sbb
int3
jo
test
call
sti
xchg
dec
cmp
push
jmp
lds
aas
scas
jmp
mov
(bad)
imul
fsubr
cmp
mov
stc
mov
ds
cmp
lods
dec
mov
cmp
lea
mov
push
pop
pop
sti
push
jae
xchg
sub
mov
pop
pop
daa
loope
into
aas
lock
cmp
cmp
fldcw
dec
add
je
stos
sub
popf
(bad)
outs
out
fstp
adc
arpl
rol
stos
repnz
lds
sbb
cdq
jp
mov
push
sbb
(bad)
adc
repz
and
mov
push
jbe
sbb
add
push
or
xchg
ss
shr
(bad)
and
outs
in
call
dec
xchg
lea
push
jno
ss
out
in
arpl
jns
adc
fimul
xchg
rol
fst
movs
push
je
lahf
or
and
mov
xchg
sbb
rcl
scas
inc
(bad)
sbb
shl
mov
ror
pop
cmp
push
es
in
or
leave
addr16
mov
push
and
loopne
enter
push
aam
mov
sub
int3
ss
fadd
loope
mov
mov
fstp
xor
pushf
jle
pop
cld
ret
push
xor
dec
sbb
iret
add
dec
ja
retf
test
push
xlat
push
jae
popa
call
out
out
lods
jmp
cmp
add
push
jne
mov
cmp
mov
xor
cmps
sub
repz
sub
cli
out
fcomp
ror
cmp
xchg
xor
ins
sar
in
push
int3
fdivr
aas
or
das
mov
push
or
dec
scas
mov
daa
shl
push
xchg
std
repz
dec
aaa
fwait
xor
outs
rcl
cs
push
jb
push
push
cli
and
and
imul
dec
xor
fild
cmp
sub
inc
icebp
adc
dec
ins
cwde
rcr
inc
inc
mov
out
xchg
(bad)
test
xchg
out
ins
push
fcom
mov
loopne
fidivr
push
les
jnp
(bad)
fcmove
mov
sub
mov
fsubr
and
fimul
sbb
test
repnz
sub
aaa
add
out
ss
out
xlat
mov
test
push
ja
cmc
imul
adc
dec
scas
xchg
lahf
inc
outs
imul
jb
xor
pop
mov
add
ret
fld
in
cmp
sbb
xor
rol
(bad)
aaa
push
pop
xchg
call
shl
xchg
mul
enter
mov
ins
fnsave
jl
push
pop
and
fld
xlat
add
lods
popf
mov
and
jb
push
push
mov
jmp
xor
dec
mov
jbe
pop
add
sub
call
retf
push
ds
cmp
xor
jg
ss
mov
ja
in
movs
sub
pop
mov
jnp
ins
push
pop
adc
gs
cli
icebp
xchg
push
xchg
out
int
push
lods
or
in
dec
shl
cmp
adc
xor
sbb
mov
in
scas
xchg
mov
pop
mov
sub
dec
ss
in
inc
cmp
leave
dec
push
hlt
pop
les
jecxz
inc
into
not
lods
jb
add
aad
data16
sub
cmp
add
repnz
imul
cmp
cld
xor
lods
and
fdivr
jae
adc
pop
and
imul
loope
lods
rcr
and
sbb
hlt
push
stc
pusha
lds
ds
(bad)
stc
lea
aam
add
push
ret
add
daa
or
pop
cli
out
loope
scas
in
inc
outs
add
dec
cmps
fisttp
cmp
cmp
jge
push
add
(bad)
rcr
stc
xchg
aam
ins
aaa
call
std
xchg
dec
aad
(bad)
inc
je
jnp
mov
sub
es
sti
xchg
dec
inc
jb
sub
lahf
add
sub
test
shl
adc
fdiv
sub
popf
test
pop
jge
sub
rol
add
cs
fistp
sti
jns
sub
pop
cdq
rol
add
ret
mov
push
mov
in
xor
icebp
imul
popf
push
pop
pop
fcom
outs
mov
pusha
cs
cmps
inc
rol
retf
mov
fisub
and
(bad)
retf
fdivr
adc
cld
fistp
test
inc
inc
dec
pushf
test
das
and
jmp
rcl
adc
andnps
lock
adc
cli
adc
pop
pop
test
in
loop
xchg
sbb
mov
sahf
jae
pushf
inc
lods
mov
retf
adc
add
leave
hlt
ret
arpl
call
enter
push
xchg
out
xchg
xchg
push
push
push
add
push
dec
dec
les
mov
rcl
rcl
ffree
xor
xor
sub
jmp
sbb
cmp
adc
inc
mov
pop
xchg
and
lea
or
push
pop
dec
shl
hlt
js
retf
mov
icebp
mov
aas
int
mov
inc
popa
sub
mov
inc
ins
inc
inc
gs
xor
(bad)
and
pop
retf
dec
scas
popf
leave
aaa
in
pop
push
cmp
mov
fidiv
movs
idiv
xchg
rep
shr
fiadd
(bad)
popa
scas
popf
(bad)
jl
cli
cmp
or
mov
imul
loop
mov
and
(bad)
or
mov
mov
ss
adc
fld
loope
out
dec
retf
fst
push
cmp
lock
push
retf
cs
cmp
jmp
fcom
shl
repz
pusha
adc
add
je
je
xchg
std
jl
inc
cmps
xchg
(bad)
(bad)
mov
mov
jmp
push
xchg
cdq
sbb
jmp
stos
shl
lahf
inc
scas
mov
jg
xor
mov
pop
stos
popf
mov
out
outs
es
ins
mov
imul
ins
mov
sbb
fstp
shr
aas
jecxz
(bad)
in
fld
inc
cmp
call
mov
push
(bad)
frstor
add
push
push
cmp
fldenv
inc
adc
rcl
std
inc
dec
jecxz
stos
icebp
(bad)
or
sub
jg
out
jae
pop
inc
xor
dec
mov
inc
scas
lods
(bad)
les
add
cs
adc
retf
nop
mov
jnp
pop
jnp
rol
and
(bad)
xchg
inc
adc
mov
rol
or
scas
and
dec
iret
inc
mov
xchg
mov
and
adc
mov
sar
add
sub
sub
add
scas
dec
mov
mov
jle
fbld
inc
xor
cmp
icebp
mov
movs
leave
push
mov
les
pop
pop
cmp
sbb
lock
dec
pushf
jp
jmp
push
push
fst
mov
cmp
or
add
js
hlt
mov
scas
or
shr
dec
sbb
mov
(bad)
das
dec
(bad)
and
inc
popf
(bad)
lea
arpl
test
mov
jns
pop
pop
jmp
mov
out
ins
mov
outs
xor
and
push
ins
xchg
rcl
outs
sbb
enter
xor
mov
push
push
iret
xor
mov
repz
add
xchg
cmc
dec
mov
inc
add
and
out
fisubr
or
pop
into
sbb
into
inc
daa
mov
std
and
jecxz
bound
mov
popa
sub
clc
jge
pop
adc
cs
mov
jp
call
mov
aad
pop
add
inc
sahf
add
sbb
sar
mov
repz
scas
pop
mov
sub
enter
mov
mov
into
cld
pop
pop
lahf
lods
pop
loop
push
jmp
dec
hlt
mov
lahf
add
std
jo
aam
loopne
ficom
push
jbe
mov
lods
aam
push
dec
out
addr16
sub
jo
pop
cmp
xor
stc
call
ret
mov
inc
push
xor
frstor
in
popf
mov
fsub
push
loope
cmps
push
xlat
push
cmps
repnz
xchg
inc
xchg
add
ja
adc
movs
std
pmulhuw
cmps
cmp
or
mov
xchg
cwde
inc
cmp
pop
and
pop
mov
xchg
mul
idiv
bound
mov
out
mov
inc
std
jns
retf
pusha
xor
out
dec
repnz
adc
popf
push
add
ret
jmp
dec
int
lea
add
sbb
sub
add
mov
(bad)
jnp
ins
or
sbb
adc
fmul
dec
pop
mov
lods
cmp
inc
add
sub
mov
aaa
xchg
cmp
sub
test
das
or
aas
mov
pop
xchg
jle
cmp
test
cmp
add
clc
or
nop
les
pop
cmp
mov
dec
sbb
dec
mov
push
mov
mov
les
adc
sub
loop
xchg
add
nop
mov
hlt
shl
mov
pop
push
div
adc
addr16
jge
int
adc
inc
pop
fwait
xchg
pop
jae
gs
jle
scas
sub
mov
cdq
mov
mov
add
inc
adc
inc
mov
aam
sti
sahf
adc
jno
push
popf
fstp
fist
or
in
mov
add
or
mov
inc
xchg
pop
out
pusha
mov
cwde
jg
test
movs
dec
inc
mov
pop
int3
mov
loop
push
loop
xor
push
sub
xchg
add
pushf
add
sub
sahf
enter
jo
and
clc
inc
icebp
rol
cmp
aad
push
aas
popa
loope
jg
lock
in
inc
cwde
mov
push
popf
in
jno
xchg
scas
push
cmc
pop
mul
push
movs
ins
retf
hlt
ins
mov
aas
ror
scas
or
call
pop
push
or
cs
mov
sub
mov
mov
push
(bad)
pop
jb
cvtps2pi
jp
data16
bound
and
adc
xchg
and
cmps
scas
js
and
fsub
jmp
repz
popf
mov
xchg
jno
and
and
xor
add
and
jmp
rol
cld
xor
fs
pop
bswap
in
jp
inc
test
in
cmp
clc
xor
xor
fcom
lea
xchg
mov
push
adc
neg
call
leave
adc
add
and
loopne
out
ret
xchg
dec
xlat
movs
cmp
movs
fadd
and
addr16
mov
cmps
enter
popa
scas
fistp
hlt
sti
mov
mov
jae
int
sar
out
cmp
push
adc
aam
out
call
daa
daa
in
ja
xlat
popa
dec
mov
mov
xor
or
mov
stos
jbe
mov
adc
mov
adc
jp
inc
in
xchg
cs
add
stos
add
sbb
sbb
inc
pop
int3
add
pop
or
cmp
test
inc
xor
pop
sub
(bad)
mov
jo
jl
dec
push
push
fs
js
popf
lea
jno
pop
jle
mov
jl
inc
enter
lods
test
adc
jmp
mov
jbe
add
push
push
push
outs
xor
and
bound
inc
(bad)
lods
mov
shl
mov
movs
jmp
adc
out
sbb
jo
jp
mov
idiv
sahf
sub
sub
(bad)
push
sahf
push
dec
lods
dec
jg
in
push
ins
lods
ds
or
ins
xchg
cmp
push
mov
dec
test
in
leave
mov
dec
ss
jle
mov
mov
mov
add
mov
push
push
aas
mov
out
test
xor
stc
test
jbe
or
data16
rcr
daa
imul
pop
cmp
mov
sbb
jp
jl
outs
ins
jo
mov
push
dec
mov
in
test
jnp
and
inc
mov
jecxz
xor
dec
inc
stos
lods
mov
rcr
jmp
push
jne
(bad)
outs
xchg
mov
sub
cmps
lahf
cmp
or
les
dec
loopne
loopne
lea
out
in
and
fisub
push
sar
xchg
test
dec
stos
mov
xchg
mov
jo
mov
ret
mov
mov
mov
nop
sbb
push
mov
jae
popf
jnp
outs
mov
repz
scas
or
xor
inc
sbb
xor
mov
mov
dec
mov
cmp
adc
push
inc
scas
dec
xchg
add
mov
push
xchg
xor
push
fsubr
je
retf
push
scas
mov
fsubr
sbb
sbb
push
jo
and
jne
call
icebp
repz
inc
sub
test
xchg
xor
or
movs
xchg
mov
cmps
push
test
movs
into
push
repz
mov
push
cdq
cmps
inc
and
scas
push
pop
and
pop
sbb
pusha
push
fwait
cs
int3
inc
mov
xor
call
jnp
fild
xor
loope
sahf
shr
pushf
repnz
scas
xchg
icebp
das
dec
mov
jb
xchg
movs
dec
loope
ja
pop
sbb
mov
pop
xchg
lds
pop
mov
inc
pop
shl
ja
aas
sub
sub
sbb
shr
adc
xchg
push
inc
mov
ja
jb
cmp
mov
or
sbb
inc
clc
add
in
es
pushf
test
mov
cmps
and
ja
dec
inc
pop
rcl
push
pop
leave
xchg
mov
dec
and
int
mov
jmp
dec
in
mov
add
shr
gs
in
enter
shl
inc
pusha
(bad)
arpl
inc
stc
fild
sbb
cli
inc
push
call
inc
and
push
mov
outs
fwait
ss
jmp
inc
rcr
add
pop
mov
(bad)
mov
lea
mov
sbb
jns
mov
pop
fcom
or
sbb
and
sahf
jmp
shl
fwait
pushf
stc
ret
jmp
repnz
mov
loopne
cwde
xchg
imul
bound
mov
inc
inc
mov
retf
push
dec
ins
sbb
outs
add
jns
in
pop
retf
cmp
jae
out
dec
loopne
ss
jbe
imul
(bad)
cmp
mov
sub
aad
cli
pop
and
mov
in
push
jmp
adc
dec
adc
sub
neg
add
mov
dec
mov
stos
iret
dec
mov
test
scas
arpl
jno
stos
adc
out
out
xchg
repz
outs
mov
xor
xor
stos
or
hlt
and
lods
cmp
or
sub
ret
xor
adc
cmc
jno
movs
jnp
dec
jp
ret
and
push
push
lds
test
cmp
dec
xchg
adc
jge
lods
js
push
jmp
dec
push
adc
push
jmp
in
and
repnz
sbb
push
xor
retf
gs
inc
add
stc
and
xor
pushf
cdq
xor
rep
(bad)
movs
(bad)
push
test
in
ins
add
test
cwde
dec
(bad)
sar
iret
mov
jle
mov
out
jecxz
outs
mov
outs
xor
fwait
add
(bad)
nop
sti
cmp
xor
test
and
cmp
cmp
sbb
and
cmps
mov
(bad)
fisubr
push
inc
lds
ror
bound
retf
mov
lahf
enter
(bad)
adc
imul
adc
out
ret
xlat
xchg
add
xchg
cmps
mov
aam
rcl
xor
xlat
xchg
cmps
inc
add
scas
test
call
jb
mov
mov
xchg
adc
aad
jle
sbb
sub
cmp
push
frstor
sub
rcr
fistp
add
xor
xor
mov
rcr
xor
jns
arpl
repz
(bad)
int3
fadd
jecxz
or
into
gs
cwde
dec
jo
jb
div
fwait
or
loop
loop
ret
pop
loop
adc
mov
ins
xor
dec
sbb
sbb
adc
jmp
add
pop
pop
sbb
lahf
dec
inc
ins
shr
enter
in
or
loop
scas
xchg
jae
das
xchg
je
pop
bound
fst
jge
fsub
outs
xlat
jns
and
cmp
inc
push
xchg
or
push
push
inc
ss
mov
rcl
or
mov
jecxz
mov
jmp
xor
xlat
cmp
out
mov
loop
mov
mov
xor
push
je
dec
cmp
lods
stos
or
inc
inc
out
adc
lods
fldenv
sbb
push
es
mov
loop
push
enter
out
push
mov
ret
data16
addr16
das
das
add
arpl
hlt
jge
xor
mov
xchg
xlat
mov
iret
mov
xchg
ss
movs
add
mov
enter
mov
daa
jns
lods
lds
jge
rcl
aaa
in
sti
lds
jmp
int
das
pop
fdivr
fdiv
rol
out
mov
or
pop
jmp
or
sbb
mov
add
aam
mov
ret
stc
fmul
sub
inc
push
xlat
xor
dec
mov
popf
cmp
push
sub
sbb
add
sbb
xchg
inc
and
rol
popf
cmp
sahf
clc
push
cmp
cmps
shufps
fimul
loopne
test
add
lock
jle
xchg
mov
loop
push
data16
mov
pop
inc
or
dec
lds
sbb
cld
dec
aaa
sbb
xchg
lods
and
cmp
and
and
cld
dec
cmps
mov
clc
sbb
fbstp
mov
das
ja
int3
cdq
mov
add
or
out
jmp
jb
lock
stc
pop
sahf
call
xchg
imul
mov
mov
enter
movs
stos
ret
lods
cmp
sbb
lea
push
call
sbb
paddusw
in
mov
jne
or
js
adc
mov
sbb
lods
fs
mov
es
jmp
lock
or
fisttp
loopne
imul
pop
xor
(bad)
aad
sub
mov
sub
aas
retf
and
mov
cmc
(bad)
adc
pusha
outs
pusha
cmp
or
pushf
sbb
jae
hlt
gs
push
mov
call
cmp
cmc
call
mov
and
fstp
jo
mov
fnstsw
xor
mov
int
lahf
loopne
jp
adc
addr16
xchg
(bad)
adc
iret
mov
out
xchg
mov
xchg
mov
aas
stc
xchg
lods
in
xchg
js
add
loop
in
jb
cdq
loopne
and
sbb
shl
pop
mov
mov
mov
dec
mov
xor
xchg
jbe
(bad)
aas
and
or
xlat
out
je
push
neg
(bad)
dec
scas
jns
adc
pusha
in
fwait
cmp
add
add
jmp
shl
sar
pop
pop
or
xchg
xchg
mov
pop
scas
fsubr
fiadd
gs
jmp
jno
push
mov
and
imul
popf
add
cmp
jno
jmp
push
sub
idiv
xchg
jne
jae
data16
out
cwde
xchg
fsubr
sbb
jge
xchg
inc
repz
dec
xor
fwait
xor
cmp
xchg
xlat
cmp
lahf
js
outs
enter
out
(bad)
xor
out
fcomp
xor
xchg
mul
es
sti
cmp
dec
mov
and
sub
shl
(bad)
loop
call
leave
push
test
ror
cmp
loope
pop
shl
and
jp
or
cli
jg
leave
xchg
retf
cmc
cmps
dec
nop
in
das
call
push
mov
add
cmp
adc
rol
in
(bad)
and
pop
xchg
arpl
push
jne
sahf
mov
fisub
fist
xchg
call
add
or
test
mov
outs
sbb
popf
or
or
sbb
push
call
mov
and
jecxz
mov
mov
scas
icebp
jmp
jp
xchg
retf
lea
mov
aas
(bad)
out
fist
retf
clc
gs
retf
jno
int
int3
fst
cmp
sub
cmps
mov
addr16
push
out
rol
loope
cmp
xlat
aad
mov
mov
jns
adc
test
xchg
jne
icebp
loopne
scas
icebp
shl
jae
or
stos
mov
popa
mov
cld
xor
sbb
jl
cmp
sbb
push
pusha
push
cs
dec
rcl
cmc
rol
scas
out
jnp
ror
push
push
add
cld
jae
inc
ja
or
test
sar
repz
cmp
icebp
xchg
sbb
push
clc
jl
ror
loope
mov
or
sub
xor
and
push
mov
jae
mov
shl
frstor
and
xor
mov
mov
or
ret
dec
cli
jns
push
int3
inc
psllw
inc
add
mov
iret
jmp
jb
test
or
xchg
scas
mov
add
mov
xchg
mov
call
es
add
pop
dec
sub
jmp
das
lds
jg
mov
cli
sbb
dec
shl
ret
cmps
lds
sub
ja
outs
outs
xchg
shl
loop
push
outs
inc
push
scas
mov
adc
movs
scas
or
push
cmp
stc
jae
fs
add
inc
xchg
test
and
pop
lahf
adc
sar
pop
cmps
ins
mov
pop
jp
push
div
in
int
and
lods
or
daa
sbb
dec
outs
jg
js
cld
cmp
sbb
sahf
inc
retf
or
in
inc
mov
cs
shr
enter
imul
add
fnstenv
mov
shl
add
ret
ficom
sbb
(bad)
mov
test
adc
push
sbb
push
cmp
les
pop
inc
lea
push
jo
jge
adc
mul
pop
adc
aas
or
pop
(bad)
pop
mov
pusha
mov
scas
loop
push
je
push
lods
jecxz
ret
adc
test
je
(bad)
push
ja
mov
test
leave
daa
xchg
or
shl
int
ror
pop
mov
mov
bound
adc
and
mov
mov
jae
push
out
add
xchg
inc
imul
pop
lea
adc
mov
xor
xor
rcr
bound
inc
mov
sbb
cmp
ret
sbb
cmp
push
adc
lods
inc
ins
jg
and
dec
dec
seto
(bad)
outs
mov
dec
mov
push
push
jo
xchg
mov
sub
sbb
or
jae
mov
pushf
popf
sbb
test
gs
add
je
shl
cs
popf
mov
popf
ret
adc
retf
sti
stos
mov
jle
mov
cmps
mov
std
das
mov
and
stos
imul
fs
inc
inc
dec
neg
int3
out
inc
stos
imul
cld
popa
scas
fimul
cmp
and
xchg
loope
mov
out
retf
xor
push
or
test
outs
mov
sbb
pusha
jo
xchg
cmps
lods
fisttp
cmp
retf
pop
xchg
add
inc
inc
jo
jmp
pushf
adc
pop
out
mov
xor
rcl
in
and
cmp
adc
mov
xor
push
push
pop
pusha
mov
jl
mov
in
(bad)
popf
add
sub
push
jl
shl
retf
aad
in
dec
mul
or
mov
adc
mov
rol
or
inc
cs
call
imul
mov
pop
scas
xor
loop
jg
mov
mov
leave
scas
(bad)
aad
dec
jo
mov
or
pmaxub
jge
or
dec
dec
jmp
or
inc
(bad)
jmp
outs
sbb
adc
mov
jp
dec
out
pop
mov
scas
test
fwait
cmc
lea
shl
xchg
fadd
or
xor
fmulp
sub
adc
cs
mov
and
pop
jbe
fld
add
sbb
gs
stos
(bad)
push
lds
fnstenv
out
lock
lods
add
mov
call
shl
loop
cmp
mov
daa
out
icebp
xor
inc
xchg
cdq
xor
or
lock
xor
adc
or
mov
arpl
test
(bad)
xor
shl
add
cmp
hlt
stc
dec
sti
fdivr
fnsave
jbe
cli
push
(bad)
xor
loope
xor
pop
(bad)
or
xor
push
test
sbb
fadd
ins
nop
cmp
fild
leave
repz
jecxz
in
(bad)
in
js
sub
call
push
push
sbb
dec
jno
adc
xor
lds
jg
test
mov
and
rcr
mov
and
pop
mov
xor
mov
pop
dec
in
ret
mov
in
add
cs
and
dec
leave
push
(bad)
mov
fidiv
outs
in
mov
cmp
inc
mov
inc
push
inc
(bad)
popa
pop
test
mov
retf
sti
cmp
shl
fbstp
fwait
popf
call
stos
and
rcr
aas
push
setl
mov
dec
mov
adc
or
mov
dec
xchg
div
jg
add
rol
sbb
repnz
add
jno
jae
or
sti
add
popf
push
mov
stos
inc
repnz
and
out
call
jl
adc
xchg
es
mov
popa
jmp
sub
inc
adc
aaa
popf
rol
jmp
xor
imul
lahf
adc
lea
cmps
add
aad
xor
mov
dec
jbe
ss
ret
jno
xor
mov
scas
call
inc
cmp
jmp
inc
jle
xchg
lods
sahf
xchg
or
aam
imul
mov
(bad)
fmul
and
repz
psrad
or
test
mov
or
ret
jae
shr
pop
push
pop
dec
enter
out
adc
mov
push
fstp
fdiv
xor
mov
inc
xor
ds
cwde
in
or
xor
popa
scas
sbb
inc
add
mov
xor
mov
into
adc
popa
mov
cdq
ds
stc
dec
pop
cld
adc
loop
jge
cmc
(bad)
mov
xlat
mov
add
stos
xchg
popf
xchg
idiv
sub
sahf
mov
lock
pop
pop
cld
xchg
outs
ds
push
sahf
ret
inc
adc
pushf
mov
pop
loop
dec
cwde
call
pop
mov
lods
xchg
retf
call
cmc
inc
fs
xchg
pop
xor
lea
dec
xlat
sbb
jp
pop
sub
mov
add
je
xchg
iret
in
ret
es
push
fs
mov
scas
arpl
mov
adc
mov
push
pusha
sub
les
(bad)
and
cmp
mov
out
(bad)
gs
xchg
addr16
pop
daa
xlat
adc
call
jp
jmp
push
cdq
fsubr
int3
inc
cmp
into
xstore-rng
cmps
add
nop
imul
sbb
popa
dec
repz
mov
ds
xchg
mov
or
pop
jb
or
sti
scas
pusha
(bad)
ja
pop
sti
fadd
jmp
arpl
js
test
mov
xor
mov
loopne
push
xchg
xlat
push
out
mov
retf
(bad)
jp
cmp
cmp
push
xlat
push
jg
fidivr
ins
jl
adc
cmp
cmps
push
dec
xchg
popf
jnp
xor
and
les
popa
in
out
add
push
rcl
add
lods
xlat
sti
jbe
sti
mov
popf
xor
sbb
fs
push
pop
movs
mov
pop
and
repnz
dec
inc
pop
ja
push
popf
or
jg
sbb
stos
push
out
jae
xchg
pop
inc
xor
mov
imul
pop
xchg
mov
xlat
dec
adc
rol
not
push
lea
fmul
mov
xor
fwait
cmps
icebp
mov
outs
push
xor
rol
add
lods
mov
xor
mov
mov
pop
dec
iret
repnz
xor
fist
ret
xchg
fisttp
dec
shl
pop
lods
scas
fdivr
mov
scas
inc
(bad)
daa
ficom
sub
sub
sub
mov
lea
bound
mov
lods
cld
xchg
sbb
lods
call
xchg
test
mov
out
je
sub
xchg
push
mov
rcl
imul
mov
ins
mov
sub
(bad)
aas
mov
test
sub
and
mov
stos
ret
je
sub
sub
repnz
push
inc
add
push
or
jg
cmc
sbb
add
push
aas
pop
add
sti
cmc
fwait
mov
mov
pop
and
sub
jge
push
fsubr
hlt
ja
and
mov
test
cdq
mov
push
add
pop
sub
daa
ror
rcr
xchg
mov
in
les
jnp
xor
aam
push
push
adc
stc
stos
cmp
mov
jb
les
aad
dec
pusha
adc
sbb
lods
test
mov
arpl
test
arpl
aas
sahf
imul
mov
pop
es
lea
mov
jns
sub
nop
adc
fs
sar
push
std
adc
pop
inc
jmp
(bad)
fistp
inc
sub
hlt
jns
fwait
gs
push
mov
push
push
jecxz
test
inc
adc
hlt
and
js
pop
push
jp
adc
sub
mov
push
ret
xchg
inc
jge
cmp
jbe
inc
sbb
sub
pop
push
xchg
scas
pop
jbe
jmp
dec
push
fild
xchg
outs
bound
mov
dec
rol
scas
mov
addr16
xchg
(bad)
mov
not
(bad)
cmc
mov
out
loop
(bad)
xlat
push
das
jne
in
aaa
retf
mov
mov
in
inc
fidiv
push
mov
dec
hlt
shr
dec
mov
add
xor
ss
dec
xor
mov
xor
cmp
(bad)
pop
dec
ret
or
fisub
repnz
pop
ins
pop
sub
movs
dec
aas
jns
shr
jne
cmp
scas
daa
enter
jb
add
dec
mov
push
inc
mov
push
xchg
retf
mov
push
add
jp
sub
call
mov
mov
lea
jmp
fwait
outs
add
xchg
xchg
cmp
cmp
aam
or
or
push
lods
mov
or
cli
fwait
pop
jmp
and
lahf
jl
clc
xlat
sbb
mov
mov
xchg
emms
inc
sub
mov
daa
adc
jmp
xlat
jmp
fwait
push
(bad)
adc
jp
mov
enter
sub
fst
pop
imul
or
repnz
stos
in
scas
lock
sbb
out
and
mov
push
jmp
cmps
sbb
adc
push
jl
sbb
ror
div
mov
pop
pop
xchg
sbb
ss
dec
outs
xor
ins
stc
out
(bad)
repnz
fistp
xchg
repz
icebp
sbb
add
nop
xor
lea
es
aas
hlt
sbb
xlat
push
add
add
and
mov
pusha
pop
and
icebp
iret
xchg
repz
test
pop
movs
mov
inc
xor
(bad)
or
push
dec
(bad)
push
test
pop
mov
loop
jmp
test
test
xchg
fs
test
cmps
xchg
xchg
push
fdivrp
dec
js
sub
adc
sub
dec
call
push
cli
shr
lea
adc
cdq
dec
xchg
sti
mov
ja
jmp
pushf
test
xor
inc
shl
mov
adc
lea
jns
ret
leave
fwait
cmp
movs
or
dec
sub
ins
ret
jno
call
out
jns
(bad)
dec
or
mov
jmp
jl
jae
daa
and
xor
and
nop
ds
imul
sbb
dec
mov
mov
mov
stc
(bad)
lea
test
ret
cmp
dec
push
add
dec
pop
adc
ss
cdq
icebp
mov
pop
and
pushf
leave
pusha
push
add
jmp
adc
shl
call
mov
push
jae
jmp
ss
ret
lods
xor
jbe
sahf
xchg
test
pop
pop
loop
ins
shl
daa
lahf
(bad)
sbb
nop
test
push
fistp
mov
hlt
cli
fisttp
mov
in
aaa
stc
inc
inc
push
mov
and
mov
adc
add
dec
add
jge
add
scas
movs
add
xor
ins
nop
pop
in
lods
jl
in
or
dec
sub
mov
cmp
sbb
test
in
rcr
adc
fwait
inc
and
(bad)
mov
xor
lods
call
push
ret
mov
stos
xchg
retf
jle
rol
ror
hlt
aad
xchg
loope
retf
movs
pusha
inc
mov
sub
inc
ss
lock
bound
xlat
fidivr
fdiv
sar
and
inc
ds
lea
jp
pop
js
sub
cwde
sub
ins
test
sub
adc
inc
sub
mov
iret
push
inc
gs
sub
or
xchg
bound
ror
sub
mov
xor
sahf
cmc
hlt
in
arpl
mov
inc
and
or
adc
neg
pop
or
jge
inc
scas
clc
xlat
push
dec
sahf
fnstcw
jo
ret
or
push
aaa
cmps
repnz
imul
push
mov
sub
add
dec
dec
pop
mov
icebp
lock
nop
mov
sbb
add
inc
aam
and
or
inc
test
test
(bad)
fsubr
xchg
inc
xchg
add
scas
jmp
ror
out
ja
mov
xlat
test
sbb
adc
jns
mov
das
xchg
push
in
mov
fadd
and
and
test
mov
pop
sbb
outs
mov
sub
(bad)
js
(bad)
ja
ret
cmp
fild
je
mov
sar
mov
push
dec
inc
sub
pusha
popa
push
sbb
jno
movs
xor
int
sbb
retf
in
jmp
(bad)
sahf
jae
cmp
sub
xchg
sbb
jg
out
pop
jnp
(bad)
jae
pop
add
movs
in
jge
loop
mov
fist
movs
pop
jns
sub
sbb
push
inc
xor
ins
push
hlt
gs
or
jle
imul
push
aas
pop
push
xor
leave
or
lea
add
jb
shl
aad
jg
jns
lods
push
push
ret
inc
add
cmc
mov
mov
cmp
ja
add
in
int
out
xchg
sbb
dec
pop
hlt
mov
outs
pop
jae
sub
loope
and
jb
jmp
and
js
enterw
pusha
punpckldq
mov
xchg
jo
stc
cmp
lods
cmp
mov
bound
mov
mov
sbb
out
test
xchg
mov
call
dec
sbb
out
lahf
icebp
cmp
add
scas
fmul
inc
inc
inc
test
cmc
scas
pop
stos
xor
movs
cmovl
jmp
mov
adc
bound
mov
shl
sub
xor
push
xor
dec
out
xor
ins
dec
sub
cmps
daa
cmp
je
add
stos
sub
lds
cmp
add
cmp
mov
std
fild
clc
fnstsw
(bad)
sbb
or
aas
clc
xchg
add
cmc
outs
popf
or
mov
sbb
sti
mov
mov
retf
js
popa
scas
push
or
jmp
mov
leave
dec
jns
loope
sub
or
lds
lods
adc
sbb
push
inc
inc
sbb
jb
(bad)
dec
push
xor
jnp
adc
lock
mov
push
fs
ins
inc
push
sbb
gs
movs
xchg
inc
mov
les
mul
mov
cmps
pop
call
int3
es
mov
push
jmp
enter
popf
or
and
jmp
cmc
xchg
outs
dec
scas
addr16
pop
pusha
and
dec
outs
loopne
and
fdiv
js
pop
nop
mov
xchg
fwait
call
cmp
ss
ret
rcr
jl
stos
fwait
cmp
xlat
pop
sub
sti
aas
or
hlt
lock
imul
push
adc
nop
enter
neg
pop
jb
fstp
mov
sub
sub
xchg
sub
add
sahf
cwde
mov
sbb
sti
lds
add
mov
pop
xchg
push
mov
adc
sub
xchg
int3
mov
sahf
ins
scas
js
out
jge
sub
out
pop
movs
jge
inc
mov
mov
mov
jle
shl
into
(bad)
fucomp
rcl
loope
lock
xor
push
xor
cwde
ucomiss
cmp
dec
cmps
bound
sbb
into
xor
(bad)
ror
movs
xchg
jmp
into
dec
pusha
xchg
sbb
mov
daa
(bad)
(bad)
jle
adc
push
aaa
es
in
cld
adc
lea
pop
cld
xchg
inc
das
inc
in
inc
cdq
dec
mov
aad
and
bound
into
retf
(bad)
dec
jnp
fidivr
xor
push
fsubr
add
scas
ret
jmp
jmp
scas
mov
sub
rcr
icebp
xchg
ret
in
gs
mov
jne
jmp
mov
loope
cmp
jecxz
xor
daa
mov
ins
mov
mov
sub
push
gs
cmp
mov
(bad)
pop
outs
jecxz
repnz
pop
imul
rcl
cmc
into
push
xor
dec
cmp
imul
gs
jne
and
mov
jb
adc
hlt
xchg
dec
fadd
pop
push
cmp
fimul
push
(bad)
xor
xor
les
jmp
cmc
jb
(bad)
jmp
les
call
leave
jg
sbb
jle
and
dec
push
adc
shr
mov
inc
add
xchg
cmps
mov
adc
nop
iret
and
push
hlt
mov
enter
mov
les
sbb
add
sbb
add
push
xchg
jecxz
pop
mov
mov
leave
add
dec
ret
fsub
and
test
mov
xchg
cli
in
iret
outs
fldcw
lods
push
jnp
xchg
xchg
shr
lahf
push
jo
aaa
sub
mov
pop
les
pop
movs
imul
cmp
loopne
mov
sub
cli
cmp
(bad)
inc
fmul
adc
inc
movs
adc
adc
sub
cmc
mov
sbb
leave
in
add
call
jle
mov
sbb
and
mov
jecxz
ja
(bad)
sbb
imul
inc
cmps
arpl
fstp
(bad)
js
inc
mov
in
(bad)
mov
jbe
loope
pop
in
sbb
ja
mov
mov
mov
xor
outs
aas
cmp
outs
std
fcom
fisttp
rcl
repz
add
(bad)
and
xor
stc
pusha
fbld
dec
add
(bad)
sbb
movs
xchg
mov
icebp
(bad)
dec
or
call
ins
aad
dec
xlat
pop
jmp
test
pop
jl
das
mov
aaa
and
aam
or
fcomp
push
and
inc
in
sub
es
push
fdiv
cmps
or
dec
icebp
outs
je
push
ss
push
jmp
je
aas
sub
mov
or
daa
jmp
mov
movs
nop
loop
mov
popf
ins
jns
iret
jns
xchg
shl
and
jne
xor
mov
int3
fadd
sbb
xor
mov
add
xor
shl
mov
push
fild
test
jns
in
and
pushf
xor
adc
mov
stc
xchg
and
mov
xchg
add
xor
pop
pop
sub
out
mov
xor
test
inc
hlt
pusha
and
dec
and
loope
jle
rol
xchg
mov
adc
mov
xlat
outs
mov
jmp
adc
lods
stos
xchg
imul
lods
mov
cmp
or
xchg
mov
shr
dec
imul
jle
mov
bsr
mov
dec
(bad)
in
mov
or
in
out
add
pusha
leave
in
pop
stos
je
les
jno
pop
cmp
das
pop
push
rcr
or
mov
or
and
int3
icebp
test
ins
inc
movs
pop
jbe
data16
mov
adc
mov
bound
push
push
pop
pop
(bad)
cmp
and
or
mov
cmp
aad
pusha
jg
mov
js
and
movs
add
std
inc
pop
xor
cmp
jbe
ret
jle
fwait
add
daa
sub
dec
je
repz
mov
jecxz
push
shl
inc
and
lock
dec
jbe
in
xchg
push
icebp
pop
lahf
sahf
sbb
inc
call
test
or
xor
js
stc
lock
xor
push
mov
sbb
or
mov
jge
inc
push
xchg
popf
inc
pop
cwde
cmp
cmp
sbb
and
cdq
jns
neg
mov
je
mov
and
mov
popa
cmp
inc
stos
test
mov
mov
cdq
out
retf
and
inc
sbb
inc
fxch
in
mov
fild
push
mov
sbb
repnz
inc
mov
les
jle
adc
push
cmp
popf
mov
mov
xor
stos
popf
in
push
in
test
sahf
ret
push
scas
pop
sub
daa
daa
sub
mov
pop
psraw
or
push
dec
push
ds
(bad)
imul
xchg
mov
add
or
sbb
fwait
xchg
mov
js
xchg
cld
push
into
push
sub
cld
mov
inc
inc
sahf
nop
xor
lods
daa
shl
mov
inc
cld
lock
retf
call
dec
dec
test
jo
sub
sbb
sub
inc
call
sub
inc
out
fnstsw
movs
cmp
mov
dec
out
jne
jo
jno
xchg
mov
lods
add
(bad)
sbb
ror
movs
pop
mov
out
int3
pop
ins
mov
inc
jmp
into
jecxz
dec
jmp
dec
data16
addr16
push
adc
(bad)
enter
(bad)
fist
lods
jae
pusha
sub
in
sub
mov
test
(bad)
mov
retfw
pop
iret
js
inc
stc
sbb
add
pop
mov
xchg
pop
lahf
pop
je
sahf
cld
mov
ret
ins
mov
lock
jecxz
mov
adc
push
test
xor
push
mov
lds
xor
or
and
shl
sbb
xchg
sbb
xchg
imul
stos
mov
stos
or
inc
dec
or
rcl
mov
adc
jle
jbe
mul
ds
and
mov
and
ret
cmp
repz
call
in
push
mov
xor
into
lods
ins
jge
popf
inc
dec
out
jle
sahf
test
inc
inc
mov
cmps
retf
xor
pop
jl
inc
les
mov
(bad)
gs
out
clc
dec
dec
outs
sub
aad
aas
fs
dec
mov
mov
test
pop
mov
ss
(bad)
addr16
dec
mov
out
mov
(bad)
iret
js
in
adc
sub
inc
mov
dec
xchg
mov
sub
out
xchg
mov
pop
mov
xor
fstp
add
xchg
xchg
or
adc
cmp
out
out
add
test
jg
mov
inc
or
and
call
lea
pop
mov
popf
add
cmp
push
xchg
call
lods
add
inc
cmp
mov
test
pop
sub
out
lahf
mov
fs
test
leave
sbb
shl
pop
not
pop
pop
push
xchg
cs
ins
and
mov
jmp
psraw
jno
push
mov
cmp
ret
clc
jae
push
and
lods
call
sub
push
repz
iret
mov
js
out
in
sub
and
les
pop
jp
iret
jmp
mov
psllq
pop
dec
sbb
shl
pop
inc
enter
cmp
pop
add
int
jp
cwde
retf
mov
xchg
add
mov
mov
daa
cmp
xor
add
push
push
inc
in
arpl
and
jb
pop
int
inc
mov
scas
popf
ins
xchg
dec
push
xor
(bad)
xor
jmp
inc
and
and
rcr
or
sub
push
xor
sbb
fld
sahf
lods
add
xor
cmp
leave
repnz
pop
dec
xchg
push
sub
pop
lock
cli
nop
mov
lea
aaa
js
jb
jecxz
jmp
shl
out
cmp
push
xor
adc
jg
popa
dec
outs
fs
lods
andps
jb
xchg
dec
retf
push
xchg
aas
js
addr16
das
adc
sahf
rcr
imul
adc
shr
ret
cmp
data16
cmc
out
fidiv
add
pop
cmp
outs
rdmsr
or
mov
(bad)
mov
mov
pop
xchg
add
retf
and
mov
cmp
jnp
ret
inc
push
stc
push
cmp
add
and
adc
push
shl
push
fs
jecxz
cmp
pop
into
out
gs
fidiv
mov
(bad)
(bad)
loopne
add
dec
pop
in
pop
(bad)
and
dec
retf
xlat
fild
jmp
fwait
xchg
add
and
jle
retf
jle
dec
dec
cmp
push
retf
ret
lea
out
jle
fistp
jecxz
pop
aaa
push
dec
sub
cmp
dec
fistp
push
pop
fsub
je
leave
lahf
daa
mov
pop
or
jecxz
cli
push
cs
(bad)
adc
pop
out
dec
call
fidivr
add
fistp
sub
loope
outs
inc
xor
aad
jns
mov
sbb
push
add
retf
inc
xchg
cmc
inc
repz
retf
test
cmp
add
lds
inc
xchg
lahf
(bad)
jp
dec
out
inc
and
(bad)
out
pop
daa
jnp
(bad)
scas
pusha
xchg
xor
fist
or
mov
add
daa
inc
cmc
dec
inc
mov
push
dec
dec
jno
cmp
or
call
popf
xchg
shr
pushf
in
pop
call
sbb
es
pop
jne
dec
push
dec
pop
cmp
aas
cmp
jbe
stos
jbe
pop
daa
and
loopne
fistp
jge
mov
and
sahf
dec
jge
jbe
fcomp
inc
xor
and
jg
mov
xor
jo
adc
jno
cmp
inc
push
mov
or
pop
ret
adc
cmp
adc
ins
out
into
fcom
repnz
dec
test
not
call
jns
mov
ja
sub
inc
mov
imul
push
aad
cmps
imul
pop
fdiv
out
jmp
in
test
movs
inc
(bad)
xchg
movs
jp
inc
xchg
xchg
pop
push
lods
push
call
cmc
das
sbb
cmp
jmp
shl
packsswb
xor
jns
add
jae
mov
pop
in
adc
call
mov
add
xchg
inc
adc
inc
xor
fadd
push
ins
sub
out
pop
les
aas
fwait
push
adc
rcr
retf
(bad)
jns
dec
aad
gs
and
retf
ja
push
rol
cs
cmp
sub
xlat
pop
test
jne
mov
loopne
mov
mov
mov
xchg
pop
or
xchg
add
and
mov
loope
enter
loope
jmp
imul
jb
mov
ret
iret
pop
cwde
loop
adc
(bad)
retf
mov
fnstenv
fnstenv
xor
and
mov
sbb
call
imul
sbb
jge
dec
mov
cmp
inc
test
pop
inc
ins
mov
std
lods
pop
inc
(bad)
xchg
and
adc
das
loop
and
fidivr
mov
test
mov
jnp
push
cmp
jle
sub
in
sub
hlt
add
sub
fwait
mov
dec
test
mov
dec
daa
imul
add
adc
pop
inc
cdq
add
shr
or
sar
icebp
xor
xlat
scas
dec
aas
out
aas
enter
push
sahf
xchg
call
gs
cli
or
mov
xor
mov
ins
or
fst
test
cmp
sub
adc
mov
ret
and
sub
pop
test
lock
mov
fild
or
fcomp
push
mov
jo
adc
aam
adc
call
push
pop
pop
ror
aaa
out
push
or
inc
sbb
lds
inc
movs
fisub
sahf
adc
sbb
mov
adc
cmp
pushf
mov
sub
xor
or
mul
dec
xchg
loop
call
mov
fdivr
push
pop
(bad)
dec
add
sti
call
pop
jmp
sub
pop
(bad)
cmp
(bad)
adc
push
mov
out
jl
or
jl
cmps
xchg
jecxz
fstp
xor
sbb
dec
mov
test
adc
mov
pop
lock
add
pop
jg
mov
cmps
stos
xor
mov
or
cmc
sbb
xchg
ja
dec
popa
or
push
and
cs
cdq
mov
std
sub
mov
fucomip
stc
cmc
daa
(bad)
xchg
mov
enter
add
fwait
lods
adc
outs
add
sub
cmc
or
fstp
pop
dec
jne
clc
jle
or
push
hlt
push
xchg
popa
stos
push
dec
push
pop
xchg
sbb
xor
cmp
mov
mov
jne
leave
xor
ret
cwde
test
lds
fstp
iret
push
repz
add
jecxz
pop
push
mov
mov
mov
fst
in
in
inc
int3
mov
stos
mov
lods
mul
movs
add
lock
cmps
sub
mov
push
push
inc
pushf
gs
xchg
jecxz
shl
fsubr
xlat
stos
cld
lods
ins
rcl
in
not
jae
cdq
mov
fst
bsf
xor
daa
dec
les
pop
mov
out
dec
sbb
sbb
jb
jno
cli
sub
sar
(bad)
fwait
imul
retf
inc
mov
mov
add
call
std
inc
mov
cmp
out
xchg
xchg
mov
loope
(bad)
in
or
sub
jnp
pop
push
and
sbb
ror
pop
push
xchg
add
dec
cmp
enter
jb
retf
mov
in
mov
xor
jo
movs
es
jmp
sbb
mov
imul
test
clc
or
std
pop
and
pushf
inc
pop
test
cmp
addr16
fstp
push
jae
bound
adc
dec
adc
daa
clc
cmp
(bad)
adc
adc
gs
lods
les
leave
test
lock
inc
fisub
aaa
sub
in
mov
pushf
jbe
rcr
adc
push
xor
mov
enter
pop
pop
aad
xchg
test
hlt
aas
cdq
xor
xor
imul
mov
xor
add
repz
cmp
ja
add
pop
pusha
push
mov
and
loop
mov
dec
jecxz
jp
cmp
in
sub
xor
into
mov
mov
add
or
mov
bound
and
pushf
loope
ja
outs
movs
xchg
inc
rcr
jb
add
retf
jbe
sub
mov
mov
and
shl
ret
mov
je
call
dec
pop
popa
adc
inc
into
cdq
mov
dec
data16
cmp
shl
call
outs
mov
dec
mov
(bad)
(bad)
test
imul
mov
out
arpl
jp
pusha
sbb
outs
add
leave
adc
cld
sti
xchg
sbb
int
inc
ror
mov
enter
pushf
add
xchg
mov
les
pop
lds
test
jbe
enter
jo
jae
lock
stc
inc
push
mov
sub
pushf
xor
adc
pushf
(bad)
gs
mov
test
popf
pop
or
push
in
inc
in
lahf
ss
mov
mov
jmp
ins
pop
sub
stc
shl
int3
xchg
std
xchg
mov
pop
pop
jmp
pop
jmp
add
add
addr16
inc
mov
mov
xlat
push
pop
(bad)
(bad)
out
cmc
ficom
adc
mov
mov
xor
xchg
rcl
fcomi
out
and
pop
mov
push
outs
rcl
outs
(bad)
push
lods
adc
and
xchg
push
(bad)
repz
xor
(bad)
add
lds
fs
hlt
fld
call
cmp
push
mov
pop
xor
(bad)
adc
pusha
sub
mov
repnz
adc
lods
call
ja
adc
inc
mov
sbb
mov
xchg
push
sahf
inc
jnp
loopne
repnz
scas
shl
imul
or
push
mov
in
out
pop
dec
(bad)
arpl
xchg
sub
mov
hlt
mov
mov
xlat
scas
sub
enter
mov
jne
xchg
shl
jns
icebp
call
outs
and
adc
jo
in
test
into
aaa
xor
mov
ins
push
in
ja
push
(bad)
in
or
dec
es
push
xor
in
out
test
ficomp
loope
jecxz
test
jns
dec
lahf
pop
xor
pop
jo
xchg
inc
jo
jmp
mov
(bad)
or
sub
xchg
cmp
inc
pop
add
mov
addr16
and
mov
and
and
xchg
mov
or
or
test
inc
jge
ins
test
sub
inc
pop
xor
outs
mov
xor
jle
dec
sub
pop
adc
adc
xchg
sbb
push
stos
push
mov
movs
out
(bad)
ss
push
and
mov
jl
inc
mov
arpl
sub
or
cmp
in
(bad)
rcl
loopne
cmp
loope
sar
sbb
push
pop
push
pop
ss
xlat
dec
stc
(bad)
xlat
jl
mov
dec
rcr
or
mov
xor
icebp
je
in
mov
retf
xor
push
xchg
in
or
hlt
(bad)
jmp
test
pushf
retf
loope
or
repz
mov
lods
or
sbb
outs
repnz
aaa
aad
in
in
or
mov
test
and
sbb
ret
sub
aad
rcr
in
rol
ja
data16
dec
stc
mov
out
shl
mov
cmc
js
xor
test
push
or
dec
cdq
adc
stos
fmul
mov
add
ret
adc
ror
sbb
adc
dec
and
mov
lds
dec
retf
in
mov
call
lods
ds
xor
and
sbb
or
leave
xchg
adc
pop
sar
icebp
xchg
sbb
push
dec
outs
aas
inc
push
out
out
push
pop
scas
movq
test
xchg
inc
mov
mov
mov
addr16
jmp
pop
movs
fwait
ja
data16
xchg
ja
inc
mov
addr16
sub
movs
rol
mov
dec
div
ficomp
sbb
inc
pop
popf
jge
xchg
fcomp
icebp
outs
jecxz
hlt
jmp
loopne
ins
and
adc
rcr
adc
inc
add
fimul
push
dec
push
pop
and
mov
xchg
xchg
ret
mov
sbb
call
aam
fwait
loopne
nop
jg
adc
push
mov
mov
aas
dec
inc
icebp
icebp
and
jle
fbstp
push
inc
or
clc
mov
cli
push
fsubr
sub
inc
ds
xchg
loop
mov
outs
inc
leave
out
cmp
lds
clc
pop
sub
jns
dec
dec
inc
jmp
pop
sub
mov
push
mov
cmp
nop
push
mov
lods
cwde
cld
sub
xchg
mov
cli
loope
ins
or
cmc
ins
mov
sahf
mov
test
mov
sub
in
fcom
test
push
ret
push
jmp
add
inc
ret
push
out
inc
idiv
mov
into
ja
pop
lock
lods
(bad)
ja
and
pusha
in
xchg
pop
add
sub
push
jp
mov
je
outs
jmp
mov
call
ss
cli
imul
sbb
loopne
jmp
jae
std
push
dec
mov
push
jmp
icebp
out
sub
(bad)
pop
sub
scas
mov
lods
cli
mov
pop
in
stc
xchg
adc
mov
scas
cmp
inc
dec
lods
adc
(bad)
mov
xchg
adc
addr16
out
cld
dec
(bad)
icebp
inc
outs
(bad)
mov
movs
shl
aam
mov
int3
shl
jge
es
fwait
mov
or
inc
inc
xor
ins
daa
mov
xchg
jp
mov
loope
out
sahf
movups
(bad)
and
push
adc
into
div
lock
cmp
in
test
dec
jnp
aaa
mov
adc
adc
movs
lods
push
mov
dec
jecxz
add
adc
push
inc
xor
or
xchg
mov
dec
out
leave
clc
mov
inc
pop
dec
inc
mov
xchg
imul
data16
inc
pop
(bad)
push
adc
sub
push
sub
stos
sbb
jecxz
and
in
dec
fcomp
cmps
mov
popa
push
pop
mov
mov
or
adc
or
aaa
mov
outs
dec
adc
fadd
jnp
rcr
out
sub
scas
push
lock
pop
addr16
cmp
enter
(bad)
push
pop
jmp
mov
and
sub
cmc
inc
in
pop
push
jge
nop
in
xchg
mov
(bad)
cmps
xchg
jmp
sbb
push
pop
cmps
xor
or
add
adc
retf
mov
push
inc
pop
(bad)
aas
ret
frstor
call
popa
hlt
and
jmp
lahf
and
and
ja
imul
push
bswap
mov
ret
fsub
mov
cdq
pop
jne
mov
gs
mov
xor
mov
shl
xchg
into
and
inc
jb
fisub
jo
hlt
mov
pop
mov
adc
jbe
jo
xor
cli
jg
stos
jl
cmp
mov
test
(bad)
cli
jl
imul
pop
aad
mov
fcomp
test
pushf
jnp
jecxz
sbb
out
clc
or
aad
jbe
out
and
jns
repz
lds
sbb
test
ret
test
mov
jmp
push
adc
dec
xchg
stos
adc
add
jle
repnz
sbb
or
sbb
(bad)
call
pop
mov
and
retf
xchg
sbb
mov
mov
dec
mov
jecxz
dec
pop
pop
not
stos
xchg
jne
add
jge
into
sbb
jp
or
mov
sbb
aas
aaa
sbb
or
fsubr
xchg
mov
xor
mov
popa
ins
sub
shr
ret
sub
outs
xchg
push
mov
adc
bound
fst
mov
and
add
push
push
popa
cmp
jnp
test
xlat
fs
mov
and
pushw
iret
out
fcmovb
cmp
ins
fst
xchg
retf
emms
in
rcl
jae
cdq
in
dec
mov
push
(bad)
movs
stos
xor
xchg
add
fstp
retf
ror
jmp
sbb
cmp
add
add
lea
imul
retf
and
xor
and
pop
(bad)
ds
aas
dec
daa
mov
mov
pop
inc
(bad)
pusha
mov
(bad)
imul
fstp
jge
aam
cs
sahf
xchg
enter
xor
push
(bad)
imul
cmp
jmp
push
sbb
xchg
pop
ss
and
lock
xor
adc
push
jbe
es
punpckhdq
jle
and
dec
add
test
popf
add
xor
mov
mov
sbb
jle
pop
jae
sub
cwde
mov
jns
es
jmp
pusha
jo
pop
push
repnz
push
and
cmps
cli
pop
xchg
or
fisttp
out
lock
mov
scas
xchg
cmc
hlt
mov
popa
pop
cmps
mov
sub
xor
xchg
test
jb
in
jge
rcl
pop
inc
pop
mov
imul
lods
add
pusha
dec
cmp
sub
inc
xchg
aad
jmp
sbb
cmp
mov
stos
sbb
shl
sub
imul
cli
mov
(bad)
scas
or
pop
jge
scas
test
xor
neg
aas
sub
adc
gs
in
push
jae
dec
ins
ins
inc
in
repz
push
call
and
and
dec
pushf
jae
mov
movs
lods
movs
lock
scas
loope
repnz
push
sti
and
push
daa
and
aam
and
jmp
aam
lea
(bad)
cli
into
push
dec
iret
sbb
and
push
pop
add
out
out
sub
sbb
mov
movs
jnp
scas
jnp
mov
jno
xchg
icebp
loopne
lods
hlt
mov
or
mov
outs
hlt
out
bound
sbb
mov
add
mov
jl
add
gs
jge
xchg
imul
mov
mov
or
scas
add
add
sub
jne
stc
sar
cmp
sub
(bad)
sbb
idiv
cmpxchg
inc
pusha
mov
shl
add
xchg
xchg
lods
dec
fisttp
mov
adc
stc
int3
cwde
push
xchg
push
pop
cmps
mov
daa
or
std
or
outs
xchg
push
jae
sahf
cmp
jg
jno
dec
jmp
fstp
daa
sub
push
pop
inc
ret
inc
push
daa
or
or
clc
cmp
std
mov
adc
sub
pusha
mov
add
add
and
sbb
mov
jl
inc
xor
hlt
xlat
mov
movs
jmp
rcr
repz
pop
or
std
arpl
fmul
xor
and
scas
xchg
ss
rcl
fcom
loop
outs
jnp
xchg
imul
fisttp
imul
cmp
stos
push
cmps
fwait
sub
push
mov
push
push
push
es
fistp
inc
(bad)
es
bswap
pushf
pop
jle
fist
aad
rcl
mov
inc
pop
add
cdq
add
ins
xor
stos
sbb
mov
sub
push
call
sbb
jnp
js
xor
pop
push
dec
cmp
fcmovu
jp
rol
push
inc
int
je
jle
ret
shl
xchg
pusha
movs
add
jbe
retf
dec
add
(bad)
int3
jl
push
push
popa
adc
mov
mov
sub
scas
stos
repnz
adc
or
sahf
mov
pop
add
fstp
(bad)
rcl
sub
test
fsqrt
cld
push
stc
aas
mov
and
inc
xchg
fld
add
cli
add
pushf
and
sub
mov
xor
and
ja
or
or
in
popf
aad
or
inc
mov
popf
add
pop
retf
sbb
arpl
jmp
jae
ret
rol
push
fist
aaa
pop
fidivr
jl
scas
push
frstor
adc
loopne
(bad)
fsubr
inc
int
stc
rol
das
int
xor
mov
mov
fst
mov
mov
mov
sbb
add
jo
xor
lods
out
test
sar
jge
xor
jl
push
mov
mov
div
hlt
xor
aaa
std
stc
dec
lahf
mov
adc
mov
les
adc
ss
into
dec
add
enter
sub
retf
adc
pop
pop
and
ficomp
out
or
jmp
jp
push
mov
cli
xchg
pop
pop
xchg
ds
iret
fwait
sub
in
push
push
cld
push
push
and
mov
sbb
div
mov
sub
ret
call
fs
and
lods
inc
mov
repz
das
cmp
repz
inc
icebp
push
cmps
imul
mov
inc
stc
outs
daa
sub
dec
jb
xchg
aaa
mov
push
and
sar
outs
adc
jmp
leave
loopne
addr16
fs
cdq
movs
ss
xchg
popa
mov
mov
sub
sub
fcmovnb
ss
mov
dec
mov
jns
pop
adc
sar
mov
pop
fcmovnbe
xor
fwait
mov
mov
dec
cmps
jg
push
sahf
aaa
retf
pop
sbb
mov
and
retf
movs
pop
pop
loope
mov
lods
sbb
mov
loopne
inc
loop
mov
pusha
push
test
test
mov
test
rcr
mov
xchg
pop
adc
stc
mov
jle
pop
push
sbb
mov
out
inc
in
aas
sub
fsubr
mov
or
bound
cmp
xchg
sbb
jg
test
pop
fmul
int3
or
(bad)
fidiv
push
sbb
pop
mov
or
into
out
jno
popf
imul
bound
cmp
pop
pop
adc
xchg
pop
mov
out
cmp
jne
aam
cmp
dec
aas
and
retf
cmc
sbb
loope
mov
jmp
jl
cmp
mov
adc
in
mov
ins
std
lods
mov
jo
xchg
out
hlt
mov
mov
mov
jns
lds
jmp
jae
div
mov
retf
jns
outs
aas
leave
xchg
push
lea
popf
hlt
cmp
fs
fsubr
ss
adc
addr16
cmp
jnp
mov
push
int
fmul
int
jmp
call
nop
jbe
in
cli
push
cmp
imul
push
jg
mov
mov
popf
cmps
cmp
popf
jl
and
pop
(bad)
xor
mov
stos
dec
push
(bad)
cmc
iret
sub
jns
ret
mov
cwde
lahf
push
mov
mov
out
movs
loop
dec
mov
idiv
das
fwait
push
mov
(bad)
jp
adc
adc
push
test
sar
push
mov
enter
fist
adc
xchg
mov
and
bound
out
jecxz
jnp
push
cmp
or
std
xchg
add
icebp
xchg
mov
xor
jmp
inc
mov
fdiv
cdq
leave
jne
repnz
jb
inc
cli
das
xor
imul
cmp
ja
inc
loope
repnz
xor
retf
movs
daa
addr16
jmp
ja
ror
shr
(bad)
enter
jne
push
mov
xchg
ret
scas
fistp
mul
mov
retf
pop
outs
dec
mov
cmp
dec
xor
jnp
sbb
lock
mov
(bad)
clc
in
mov
out
stos
neg
push
inc
(bad)
mov
jp
dec
and
stos
dec
test
repz
outs
fcmovb
mov
add
mov
push
je
loope
icebp
inc
jl
imul
add
dec
js
aas
cli
dec
movs
loope
jl
xlat
inc
dec
pop
inc
and
inc
mov
and
dec
xchg
push
pop
std
push
imul
retf
mov
cmps
dec
and
inc
cmc
retf
out
ja
in
int
outs
cmc
(bad)
es
stos
(bad)
ins
es
pop
mov
call
mov
push
popa
dec
jns
out
gs
mov
or
ret
fnstenv
mov
jl
mov
dec
or
iret
sub
es
xor
push
movs
pop
jge
push
gs
bound
inc
sbb
cli
xchg
shl
lahf
xor
stc
push
or
xchg
sbb
and
cmp
mov
clc
jecxz
cwde
adc
inc
push
cmc
das
aaa
mov
stos
repz
mov
cli
fimul
daa
xchg
pop
out
lods
sbb
add
in
ficomp
xor
test
add
mov
fwait
arpl
push
dec
xor
jo
xor
aam
dec
into
xchg
or
mov
clc
mov
(bad)
cwde
jmp
aam
loop
mov
mov
mov
dec
push
(bad)
push
std
out
push
xlat
xchg
mov
(bad)
push
aas
pop
(bad)
jnp
jle
mov
lds
cs
xchg
test
pop
imul
dec
push
or
lea
dec
mov
adc
or
stos
pop
call
sub
add
sbb
dec
pop
pop
sub
fst
mov
xor
les
mov
dec
popa
rcr
pop
pop
mov
add
add
pop
dec
and
fnsetpm(287
xor
cs
push
(bad)
pop
sub
movs
inc
inc
int
in
inc
mov
adc
push
call
sbb
cmp
cli
add
mov
movs
mov
movs
or
and
xlat
fisubr
xlat
mov
pop
bound
mov
imul
xchg
cmps
push
retf
in
cmp
cmps
mov
mov
enter
cmps
ret
retf
jl
mov
rcr
imul
dec
bound
mov
mov
retf
sbb
dec
push
aam
sub
push
lods
pop
xor
aaa
adc
rol
inc
or
daa
inc
push
and
popa
repz
call
fstp
adc
mov
pop
pop
inc
or
fstp
addps
ficom
mov
inc
inc
ss
(bad)
xor
push
shr
cli
mov
(bad)
rcl
or
xchg
mov
xor
sub
jae
push
sub
jge
(bad)
ins
inc
and
cmp
push
sbb
and
mov
movs
jne
(bad)
sbb
dec
adc
and
adc
add
je
les
xchg
mov
mov
fyl2xp1
sbb
aaa
mov
jnp
int
cmp
mov
or
leave
ja
mov
push
iret
mov
fistp
mov
(bad)
jecxz
cld
movs
xchg
jae
leave
or
xor
mov
mov
iret
xchg
iret
jmp
sub
pop
addr16
mov
pop
ja
inc
lods
lods
add
dec
cmps
nop
mov
mov
pop
ret
repz
adc
add
cld
push
ret
cli
fwait
mov
ja
arpl
pop
scas
pop
into
jmp
xor
pop
sub
lds
outs
add
push
jp
pop
and
je
cmps
bound
mov
inc
and
add
add
pop
mov
mov
pop
push
js
and
lahf
bound
xor
mov
repz
dec
data16
mov
mov
test
or
(bad)
xor
cmp
leave
add
inc
idiv
jecxz
inc
mov
(bad)
fadd
mov
call
cmps
pop
mul
into
sbb
fcmovne
sub
and
jecxz
mov
pop
sbb
fdiv
xchg
cmp
jmp
fst
jbe
push
push
or
cld
scas
test
outs
(bad)
enter
dec
dec
fnstsw
out
cmp
add
stos
push
xor
dec
imul
lods
jg
int3
in
pusha
lock
adc
arpl
jle
dec
xor
sahf
shl
adc
xchg
mov
lahf
dec
ret
imul
xchg
aaa
xchg
test
in
push
test
data16
sahf
leave
xchg
daa
jmp
sub
scas
xlat
movs
int
retf
mov
sub
jle
cmps
(bad)
cmp
les
cmp
test
lds
mov
loop
and
xchg
data16
test
ins
mov
jg
pop
inc
sub
sbb
cmp
shr
adc
retf
xchg
and
aam
imul
sub
ds
add
adc
mul
push
das
jl
jmp
adc
(bad)
jmp
sbb
test
xor
aaa
outs
scas
xor
sti
mov
cwde
cld
fld
out
xchg
mov
unpckhps
mov
out
daa
les
shl
imul
les
lahf
mov
push
pop
pop
push
mov
test
outs
jmp
lods
nop
outs
repnz
jmp
mov
in
jnp
sar
test
jmp
add
mov
ins
xchg
stos
sub
dec
cmps
test
loop
cmps
jle
mov
sbb
out
out
cwde
call
mov
scas
inc
sub
out
jmp
out
movs
xor
sti
sub
xor
std
jp
adc
dec
adc
les
pop
nop
jmp
addr16
or
jmp
or
(bad)
mov
outs
enter
out
cmp
add
mov
scas
jp
sub
inc
push
ss
adc
cmps
and
daa
in
daa
call
mov
xchg
call
or
sti
or
push
xchg
inc
arpl
mov
lods
retf
pop
pop
inc
outs
bound
sbb
adc
mov
and
fimul
call
mov
mov
dec
(bad)
push
fwait
mov
call
fldln2
or
cs
pushf
popa
mov
scas
cmp
add
jge
dec
cmp
(bad)
(bad)
daa
and
rol
jecxz
ftst
push
(bad)
retf
mov
in
adc
dec
jb
sbb
and
and
int3
movs
ja
ret
mov
icebp
loope
cld
call
fld
cmp
xor
test
push
cs
mov
in
push
add
xchg
mov
dec
jmp
retf
inc
and
stc
addr16
ins
aam
mov
pop
movs
loop
daa
popa
jl
inc
retf
leave
sub
cwde
push
xchg
call
sbb
cmp
mov
xchg
push
(bad)
es
scas
movs
es
rcl
sbb
loope
jno
mov
cmc
mov
sub
jb
loope
in
jbe
(bad)
sar
in
in
sub
js
es
stc
sub
fwait
jg
push
mov
sub
cmp
in
jecxz
or
mov
pop
pop
mov
xchg
adc
pop
push
addr16
jbe
js
jnp
dec
enter
and
and
xor
add
fmul
or
mul
push
cmp
imul
and
sbb
fist
mov
sub
mov
leave
loopne
cmps
dec
or
or
cmp
stos
sub
lods
xchg
gs
sbb
add
test
ja
test
cld
mov
loop
pop
mov
and
(bad)
mov
das
imul
xchg
mov
(bad)
bound
fisub
inc
call
add
test
inc
dec
xchg
jne
repz
icebp
pop
xor
dec
arpl
xor
aam
retw
xor
mov
test
adc
xor
test
mov
pop
and
cmp
adc
push
push
mov
cmps
fdiv
(bad)
cmp
dec
daa
popa
aam
mov
xchg
dec
and
push
inc
push
fdiv
shr
mov
add
inc
test
jno
fisub
in
je
xor
(bad)
mov
mov
push
dec
sub
test
mov
push
pushf
and
push
aaa
mov
pop
loopne
push
(bad)
mov
sbb
or
pop
retf
xor
fcmovu
adc
out
imul
test
add
sub
enter
lods
loopne
fisubr
sub
aaa
lahf
mov
jno
std
inc
in
adc
and
test
or
je
cmp
xor
push
movlps
test
lods
fyl2x
je
movs
out
push
cwde
inc
enter
not
rcr
inc
movs
xor
ins
jns
sbb
sbb
test
jle
xor
xchg
jmp
clc
sub
ja
sahf
cdq
into
xor
test
and
add
cmps
bndldx
or
sahf
movs
ins
popa
jecxz
adc
std
cld
mov
adc
retf
das
jb
in
call
jns
in
mov
(bad)
xchg
mov
test
daa
iret
add
clc
lods
sbb
xchg
pop
inc
push
add
in
aam
rcr
aad
enter
js
loopne
mov
pop
iret
push
dec
gs
mov
(bad)
push
pop
add
push
xchg
addr16
dec
adc
push
sub
aaa
or
sub
fidivr
add
mov
add
fldcw
mov
out
int
out
das
mov
or
ret
jl
aam
movs
ins
retf
mov
and
lea
push
jns
pop
dec
ja
jge
movs
sub
fisttp
mov
push
mov
shr
sbb
or
(bad)
ds
iret
stc
sbb
sub
xor
rcl
adc
pop
pop
and
cdq
jle
in
xchg
dec
push
dec
outs
das
and
adc
and
mov
cmp
xor
sub
fs
dec
or
mov
push
push
stos
add
ds
cmps
add
push
iret
inc
mov
(bad)
test
in
in
(bad)
cmps
ins
xor
mov
rol
push
(bad)
and
cmp
pop
push
in
sub
std
push
int
cmp
imul
lods
sbb
test
xchg
pop
pop
sar
push
addr16
mov
or
inc
leave
mov
adc
loop
and
test
ins
int
and
les
nop
inc
mov
fchs
xchg
aaa
jno
mov
sahf
adc
pop
jl
mov
adc
movs
push
pop
jmp
pop
in
add
int
mov
pop
or
lods
sbb
xchg
enter
cmc
jmp
retf
out
jp
jo
inc
pop
dec
cmp
push
sti
sub
enter
mov
cmp
test
jbe
pop
cs
mov
shr
add
(bad)
enter
inc
jge
add
retf
mov
loopne
icebp
add
out
mov
xor
aam
inc
in
shr
shl
iret
xchg
out
jns
jmp
lods
dec
loope
(bad)
cmp
sub
lahf
stc
mov
mov
call
jmp
lock
jne
adc
cmp
xchg
(bad)
int3
cld
aad
lea
outs
je
push
add
xlat
or
sub
(bad)
jg
mov
xor
aad
push
adc
xor
lock
adc
inc
shr
loopne
shl
cmp
push
test
shl
ss
inc
sbb
xchg
jo
cmp
mov
fisttp
stc
popa
in
ret
outs
out
push
jo
mov
fwait
jecxz
xchg
and
add
icebp
jae
out
aad
or
pop
test
data16
aaa
lds
mov
addr16
imul
mov
test
rcl
dec
lahf
add
or
ja
retf
ret
call
push
enter
xchg
in
outs
into
xor
inc
pop
out
fbstp
cmps
jge
jne
xchg
mov
dec
gs
cmps
retf
push
adc
loop
mov
sbb
sub
lods
js
xchg
jmp
xor
xor
adc
dec
lds
push
dec
push
ffreep
stc
test
add
aad
aam
jge
push
or
lods
push
js
out
in
clc
dec
and
cmp
jo
(bad)
mov
cs
sub
mov
push
scas
sbb
jns
xchg
aad
stos
ja
and
rcpps
and
cmp
mov
pop
retf
mov
or
inc
cmp
dec
xchg
pop
(bad)
stos
mov
sbb
arpl
pop
pop
gs
(bad)
mov
mov
ret
sti
inc
sub
push
add
dec
mov
sbb
cmp
ins
push
mov
fiadd
fcomi
add
sbb
cmp
aas
push
inc
sub
aas
mov
es
adc
scas
enter
jmp
sbb
cmp
push
sub
mov
pushaw
and
sbb
outs
lahf
cld
push
mov
fdivr
inc
cwde
repnz
cdq
sbb
add
scas
or
das
bound
and
fcom
bound
sbb
jno
mov
cmp
in
call
ror
mov
aaa
mov
out
repnz
or
jae
mov
xchg
and
cmp
jmp
add
mov
outs
jb
sub
cdq
or
xchg
mov
and
mov
pop
mov
push
scas
(bad)
add
jge
fdiv
fld
arpl
les
mov
push
mov
aam
cmp
mov
jns
xor
fs
mov
adc
inc
je
mov
call
mov
and
mov
cmps
cmp
or
shl
(bad)
out
ja
add
rep
sub
cmps
jle
mov
jns
jge
pop
cmps
jge
sub
ret
and
push
dec
sar
jb
aas
push
xchg
dec
bound
in
pushf
dec
cmp
jecxz
xchg
xchg
test
rcr
retf
ror
gs
dec
mov
int3
xlat
push
gs
out
rcr
push
fld
mov
popa
push
scas
lds
test
push
int
popa
scas
xor
std
xor
inc
aas
pushf
pusha
(bad)
out
dec
or
fdiv
jmp
into
imul
or
mov
jno
je
sub
(bad)
ffree
xchg
adc
icebp
adc
das
sti
sar
sub
inc
arpl
push
loop
mov
push
xor
xchg
rol
fisubr
push
ins
test
gs
jmp
mov
loopne
dec
cmps
cmps
imul
mov
xchg
int3
or
pop
stos
adc
lds
jge
rcl
mov
inc
ds
rcl
scas
or
adc
fstp
pop
jo
aad
shl
hlt
inc
fld
sbb
loopne
(bad)
maskmovq
mov
(bad)
xchg
pusha
(bad)
pop
lods
into
sbb
sub
(bad)
mov
rcr
sbb
xchg
and
push
mov
pop
mov
std
jnp
push
ins
in
xchg
sbb
jae
pop
jae
out
bound
sbb
dec
dec
mov
(bad)
inc
neg
movs
jge
bound
push
jns
mov
cmovb
and
jmp
scas
cmp
in
mov
cmps
adc
test
dec
jne
mov
fldlg2
mov
out
repz
ss
jg
fstp
mov
bound
dec
shl
ret
xor
and
xchg
imul
cmc
or
pop
xchg
xchg
or
jmp
mov
repz
push
int
rcl
xor
mov
xchg
clc
aas
cdq
dec
adc
cmp
aas
imul
mov
xchg
pop
inc
in
ins
lahf
enter
retf
xor
mov
test
je
mov
push
shl
test
mov
xor
mov
imul
or
mov
(bad)
xchg
jb
mov
in
stos
leave
pop
or
mov
mov
adc
jge
loope
and
rcr
xor
fadd
dec
xor
sub
gs
rcl
fisttp
lods
mov
mov
and
retf
(bad)
pop
dec
push
rcr
je
int3
scas
mov
ins
or
inc
lahf
dec
push
push
into
and
sahf
sti
xlat
call
mov
sahf
rol
aaa
icebp
mov
xchg
inc
push
shl
gs
pop
xchg
mov
and
bound
fs
int
or
mov
movs
adc
pop
cdq
repnz
lea
leave
dec
mov
daa
cdq
push
dec
outs
jl
jecxz
jge
sbb
jnp
cmp
adc
leave
retf
xchg
mov
shr
mov
pop
dec
mov
adc
hlt
jns
int3
fsub
sti
cmc
out
add
mov
mov
(bad)
adc
cwde
push
je
lods
outs
aad
add
mov
fs
(bad)
mov
xchg
and
mov
add
fsubr
push
xor
push
sbb
sar
(bad)
pop
mov
bound
and
adc
repz
js
push
adc
neg
cmp
cwde
(bad)
call
or
gs
push
scas
outs
dec
inc
push
mov
pusha
inc
and
rcr
movs
push
jge
out
arpl
pop
(bad)
shl
(bad)
test
mov
pop
mov
pop
xor
test
or
pushf
mov
lahf
inc
pop
sub
cmp
inc
(bad)
addr16
push
sub
mov
mov
or
pop
jle
pop
dec
out
cmp
jge
pop
pop
jns
popf
or
fidiv
or
shr
mov
in
mov
ret
js
mov
clc
dec
add
mov
pop
fwait
in
push
add
and
jecxz
ins
aaa
fldcw
jp
retf
dec
rcl
jns
cmps
and
xchg
sub
aam
sub
xchg
add
mov
xchg
bound
mov
movs
out
mov
and
stc
fwait
mov
stos
adc
fdiv
data16
sbb
and
mov
ds
fdivp
ja
nop
and
cmps
(bad)
das
jl
dec
addr16
xchg
xchg
sub
mov
jmp
add
lahf
inc
lds
xor
sbb
loopne
mov
js
loopne
addr16
jge
dec
pop
mov
test
push
dec
xchg
adc
add
jns
mov
mov
lods
or
popa
jmp
jns
repnz
mov
inc
movs
out
pop
dec
ds
js
cld
mov
xchg
lea
imul
adc
out
addr16
in
mov
add
cli
(bad)
shl
imul
les
sbb
push
sbb
add
cmp
cmp
pop
jb
mov
jb
pop
es
mov
(bad)
iret
sub
ins
fs
dec
jnp
xor
cmc
jns
int
and
adc
mov
icebp
pop
mov
test
stos
aad
out
add
sub
dec
sub
in
leave
jbe
sbb
in
icebp
(bad)
mov
add
scas
int3
outs
stos
adc
out
test
pop
(bad)
(bad)
out
inc
addr16
sbb
jmp
sbb
js
inc
add
inc
mov
out
jp
adc
(bad)
mul
dec
rcl
mov
mov
or
je
(bad)
push
sub
mov
push
xchg
shr
(bad)
jle
in
dec
js
sub
mov
out
add
adc
std
xor
cdq
mov
jae
xlat
cmc
inc
retf
xor
sub
sbb
sbb
popf
inc
cmp
into
xchg
sbb
sbb
jb
sbb
lds
sahf
adc
popf
push
inc
xchg
fstp
jo
(bad)
enter
mov
stc
dec
pop
es
pushf
lods
lahf
ins
arpl
push
mov
outs
aam
call
cmp
pushf
pop
mov
xor
adc
push
xor
xchg
add
sbb
popf
cmps
outs
push
je
(bad)
sub
loopne
pushf
xor
cld
sahf
mov
hlt
jne
sar
in
xchg
mov
jno
popa
push
movs
xchg
arpl
pop
int3
jge
xor
retf
xor
iret
(bad)
xor
fnstenv
push
sub
and
mov
js
leave
(bad)
push
and
mov
cmp
dec
sub
movs
aam
inc
adc
pusha
jne
retf
mov
(bad)
ja
or
dec
sub
ins
xchg
mov
jae
push
sbb
jge
hlt
dec
daa
sbb
dec
jg
inc
mov
aaa
call
inc
mov
shr
(bad)
js
jno
adc
jmp
movs
sahf
or
jbe
jle
shl
into
enter
clc
add
sbb
jae
cld
push
jmp
jp
push
pop
jl
cdq
mov
dec
or
or
jbe
pop
les
lahf
xchg
ja
stos
push
push
pop
das
and
dec
cmp
xor
call
out
ret
int3
adc
(bad)
jb
pusha
sbb
pop
inc
lock
fchs
adc
mov
push
sub
mov
and
mov
loopne
enter
leave
push
sbb
dec
inc
leave
or
imul
cmp
(bad)
jl
test
adc
jno
push
mov
xrelease
dec
jmp
adc
pushf
xor
repz
push
mov
adc
xchg
cdq
mov
into
cmps
dec
mov
cdq
aam
imul
cmp
or
mov
sub
in
cmp
xchg
cmp
push
cmp
clc
dec
and
sub
ret
inc
repz
cld
out
dec
push
push
xchg
fidivr
sahf
add
loopne
iret
sti
mov
sub
mov
lea
sar
pop
jo
call
ror
test
std
sbb
pop
test
test
scas
xlat
inc
add
push
or
push
dec
(bad)
xchg
in
test
out
lods
dec
pop
jp
jmp
mov
mov
leave
mov
cli
nop
pop
sti
(bad)
js
inc
inc
sbb
xor
das
cmp
cmps
or
(bad)
or
cmp
or
fisttp
adc
(bad)
ficomp
mov
mov
mov
add
jmp
cdq
xor
inc
mov
xchg
je
and
mov
jno
pop
addr16
add
xor
lock
sbb
jne
ss
out
(bad)
jno
fadd
out
cmp
inc
js
lods
pop
cld
push
repz
push
in
mov
jne
or
in
or
rcr
rcr
mov
call
cmps
push
stos
iret
cli
xor
scas
sub
push
sysret
cmp
das
push
outs
daa
ins
jp
mov
fnsave
imul
neg
inc
call
call
fmul
add
cli
xor
xchg
adc
scas
inc
popa
and
jl
je
jb
sbb
cld
nop
pop
cdq
cs
rcl
push
sub
sub
sbb
pusha
loope
push
jp
push
movs
leave
jno
cmc
sbb
adc
in
sbb
(bad)
mov
or
loope
dec
pop
imul
ret
scas
mov
movs
jno
add
inc
mov
mov
int3
fldcw
in
outs
mov
sahf
mov
mov
pop
jmp
jo
outs
jecxz
xchg
ds
das
test
pop
sub
gs
out
mov
inc
dec
lods
xchg
push
aad
lods
stos
and
sbb
add
mov
jl
movs
test
jmp
sbb
scas
dec
xchg
inc
test
movhps
inc
mov
aam
lds
ret
clc
daa
fcomp
adc
and
aad
leave
stos
cmps
push
nop
push
xchg
xchg
stc
mov
add
scas
pop
in
scas
fidivr
stc
dec
sar
inc
mov
mov
mov
stos
lods
mov
mov
add
sbb
jge
xor
or
fwait
mov
dec
sbb
shl
imul
cwde
mov
inc
test
movs
(bad)
jle
or
icebp
lea
outs
sub
push
sbb
fistp
jp
inc
push
and
scas
in
mov
mov
sbb
adc
cmps
xchg
inc
dec
mov
mov
loop
or
pop
cmp
cs
mov
and
sbb
sbb
dec
aad
aad
lahf
jb
aam
lods
inc
sub
adc
ins
sysexit
cwde
pop
iret
adc
cmp
sbb
and
cmc
retf
adc
mov
retf
imul
mov
mov
call
int3
and
dec
out
in
jmp
mov
pop
in
jnp
lods
cmp
repnz
push
mov
ror
addr16
inc
rcr
cmp
inc
cmp
repnz
sub
and
lahf
icebp
adc
std
sbb
icebp
in
enter
shld
stos
test
xor
xor
or
sbb
pop
retf
adc
loope
(bad)
jnp
pop
rcr
xor
inc
stos
ss
and
std
sti
sbb
aad
sbb
movs
test
cs
out
pop
or
lods
test
ds
jno
dec
imul
ss
das
jne
cmp
or
(bad)
dec
fwait
mov
sub
mov
pop
fdiv
jmp
xlat
or
add
ficom
dec
inc
mov
pop
jl
(bad)
(bad)
xchg
sahf
push
mov
div
sub
or
shl
das
in
iret
popf
adc
repz
paddw
adc
pop
in
js
stos
add
inc
in
xchg
dec
fisttp
retf
or
jmp
sub
mov
push
frndint
lds
push
mov
dec
out
test
lods
sub
jmp
gs
(bad)
adc
pop
xchg
(bad)
cmp
fidivr
enter
push
add
push
sbb
call
xchg
inc
fnsave
imul
(bad)
xor
mov
pop
out
fsub
inc
cmc
ds
stos
add
sbb
add
ins
jp
mov
add
ret
sete
push
and
mov
jmp
xchg
pop
pop
cmps
into
lahf
pop
ja
dec
cs
lds
ret
test
pop
dec
adc
xchg
(bad)
(bad)
lods
je
add
jb
mov
mov
mov
ja
in
cdq
mov
mov
dec
inc
nop
loopne
enter
mov
retf
xchg
out
and
arpl
inc
lock
jp
sub
repnz
push
add
sbb
test
mov
dec
and
mov
rcr
sub
and
and
inc
pusha
dec
and
and
push
fs
mov
xlat
or
leave
fist
fisttp
out
pusha
out
pop
cmp
dec
sbb
pop
jae
test
xor
pop
and
mov
mov
add
aam
mov
inc
and
push
adc
or
(bad)
ins
lds
inc
pop
sar
ret
xor
sub
test
dec
push
sbb
adc
in
and
es
daa
iret
ja
mov
dec
fisttp
sbb
pop
popf
push
mov
jmp
xchg
sub
push
dec
pop
xchg
inc
mov
out
ret
ins
test
(bad)
mov
dec
sbb
inc
xor
xchg
jnp
mov
test
mov
loopne
outs
mov
inc
dec
aaa
mov
and
cmp
jmp
cmp
dec
fdiv
jno
push
or
movs
ins
cmp
out
outs
mov
inc
retf
adc
add
push
js
add
gs
mov
(bad)
sbb
mov
call
cmp
daa
mov
sbb
retf
push
int3
jmp
xchg
and
push
jge
and
lods
inc
mov
lock
xor
adc
jg
cmp
jp
test
stos
sub
mov
mov
popa
repnz
test
or
mov
pop
fsub
fucomip
jbe
adc
stos
mov
rol
mov
sti
into
push
mov
jns
(bad)
cwde
fild
or
sbb
fwait
adc
jb
fcmovne
scas
mov
xor
cmp
lods
dec
inc
push
mov
xor
retf
pusha
and
add
hlt
adc
stos
sbb
mov
inc
xor
pop
jo
mov
sar
sub
cmps
cmp
jg
cld
pop
dec
and
shl
dec
cmp
or
xchg
pop
scas
pop
jecxz
sub
cmove
push
into
sbb
xor
inc
cmp
addr16
enter
push
sti
cmps
pop
mov
xor
(bad)
into
inc
mov
popf
dec
and
xchg
bound
out
rcl
adc
pop
ja
add
inc
pop
mov
mov
retf
inc
mov
shr
bound
nop
outs
into
and
adc
movs
cwde
(bad)
call
shl
lea
or
sub
dec
shl
mov
loopne
and
inc
and
addr16
jmp
add
pop
xor
push
aad
pop
xor
outs
popf
(bad)
mov
movs
mov
sar
in
mov
sti
nop
sub
imul
ins
xchg
and
dec
js
popa
xchg
inc
ret
cmc
push
cli
mov
mov
mov
cld
mov
add
test
push
js
lock
nop
jns
aaa
or
xchg
adc
push
popf
mov
jno
adc
push
inc
sub
add
inc
cmp
in
mov
fmul
shl
push
and
mov
loopne
and
(bad)
popa
xchg
adc
inc
rcl
les
or
f2xm1
aam
stos
sti
jg
cmp
cwde
push
xchg
movs
repz
in
mov
ja
adc
xchg
cmp
cmp
and
xor
push
jne
inc
fcom
ror
or
jae
call
jne
je
imul
call
lea
int
or
test
popa
sbb
and
les
sti
(bad)
les
pop
sbb
sti
stos
outs
gs
cmp
icebp
mov
pop
fisttp
mov
adc
sub
leave
dec
dec
mov
xor
dec
in
mov
ficom
(bad)
push
leave
sub
ja
test
xor
jae
cld
push
rcl
jb
inc
outs
pop
int3
stos
xor
(bad)
cmp
fwait
daa
sub
call
std
lods
jge
out
inc
ds
and
popa
sbb
mov
sti
xor
cwde
sahf
into
(bad)
sub
aad
adc
jge
arpl
and
jmp
jp
imul
js
ret
push
dec
dec
cwde
sub
lds
jecxz
rcl
or
js
xlat
xchg
icebp
sbb
sub
out
aam
sub
shr
rol
stos
cwde
in
jbe
xchg
cs
shl
sbb
leave
sbb
ja
fs
fsubr
retf
fbld
data16
inc
call
cdq
shl
add
scas
fstp
push
fwait
sbb
(bad)
pop
ins
add
icebp
sbb
jmp
sahf
das
cwde
dec
ror
pop
mov
cwde
mov
ret
and
push
imul
add
fsub
or
std
cmp
std
xchg
icebp
dec
xchg
loopne
inc
cmp
sub
movs
cli
xor
dec
xor
xchg
sbb
jmp
sar
mov
in
cmp
into
shr
out
push
pop
cwde
lahf
inc
push
sub
enter
ins
movs
mov
mov
mov
mov
pop
and
dec
pop
adc
repnz
mov
fistp
iret
jl
mul
sbb
ret
or
bnd
repnz
jge
addr16
movs
inc
add
out
jmp
cmp
push
mov
push
sub
in
retf
scas
push
(bad)
fbld
rcr
adc
jmp
int3
adc
fcomp
pushf
pop
and
xchg
xor
push
ss
jmp
push
sub
jnp
icebp
aad
sbb
mov
ins
mov
mov
sbb
je
sub
retf
sbb
push
mov
mov
push
(bad)
dec
in
cmp
icebp
dec
inc
(bad)
mul
push
dec
mov
inc
xchg
neg
sub
loop
xor
dec
push
sub
and
fimul
fdivr
loopne
ret
out
mov
mov
repnz
rcl
int
mov
imul
push
(bad)
ins
add
adc
fsub
in
sub
and
jmp
aad
stos
ss
in
outs
call
lahf
sbb
adc
inc
sub
mov
jle
fwait
sub
cwde
or
icebp
pop
repnz
int
cmp
and
jno
xchg
mov
and
mov
popf
les
int
clc
mov
and
outs
callw
mov
fisub
(bad)
sti
add
in
dec
stc
xchg
sbb
ret
mov
mov
mov
dec
or
push
pop
rcl
push
mov
xchg
sub
nop
jecxz
cmp
mov
mov
jecxz
ins
inc
popa
into
stos
push
pop
retf
or
sbb
fnstenv
xchg
inc
jl
es
mov
inc
push
mul
or
fmul
sbb
jb
push
retf
int
cmp
adc
jle
cmc
pop
mov
or
mov
add
sub
ins
std
and
loope
mov
inc
mov
mov
xlat
inc
(bad)
dec
push
cld
dec
add
cs
or
xchg
cwde
inc
int
cmp
fsub
pop
jmp
mov
sbb
jl
imul
les
xchg
jp
mov
(bad)
xchg
pushf
das
loope
xchg
hlt
aad
cmps
sub
dec
adc
xor
or
daa
adc
adc
je
mov
xor
fwait
push
mov
inc
or
sub
dec
jno
cmp
mov
adc
mov
lods
xchg
sub
std
add
mov
inc
ds
push
dec
mov
std
data16
idiv
scas
push
not
jge
retf
lods
and
je
xor
mov
(bad)
mov
mov
repz
jl
loop
and
fucom
rol
lods
(bad)
std
retf
cmc
adc
popa
dec
js
scas
or
int
mov
dec
pop
push
lds
enter
push
fcmovnbe
aas
xchg
addr16
cmp
sub
mov
daa
popf
jns
test
mov
aas
inc
in
xor
xchg
or
retf
pop
lods
push
adc
fst
push
add
je
xor
jmp
add
lahf
mov
mov
inc
dec
jecxz
aam
and
adc
inc
push
xchg
push
imul
sub
sbb
jle
outs
ror
inc
xchg
pushf
retf
sbb
add
mov
mov
hlt
pop
jge
push
push
adc
inc
mov
cmp
pusha
out
mov
test
or
or
push
adc
in
and
jp
sbb
ds
adc
test
cmp
(bad)
mov
stos
(bad)
push
mov
pushf
out
das
(bad)
pop
mov
inc
inc
repz
mov
ret
push
nop
pop
cwde
mov
push
cld
jb
sub
icebp
sbb
and
inc
iret
loopne
lods
cmp
loope
bound
mov
and
or
jb
ins
out
cmp
jl
xchg
test
push
cmp
jnp
jp
mov
cmp
cmc
mov
pushf
cmp
xchg
test
fwait
test
xor
hlt
push
push
dec
or
fistp
int3
cmps
mov
xor
dec
mov
dec
adc
or
ins
in
cli
jle
pop
cmp
(bad)
mov
xchg
mov
aas
mov
add
adc
sysret
(bad)
cmp
mov
mov
retf
test
jb
lods
sub
aaa
aad
pop
mov
imul
pop
aam
push
adc
mov
adc
vshufps
sbb
and
das
mov
xchg
enter
lock
pop
fld
mov
pop
or
inc
sub
pop
in
jge
mov
sbb
cmp
or
jle
rcr
mov
sti
pop
fstp
sub
push
or
inc
es
std
in
dec
enter
scas
neg
push
fistp
pop
fadd
(bad)
add
or
jmp
mov
mov
mov
jecxz
adc
das
push
jb
mov
mov
jbe
dec
hlt
stos
cmc
loop
push
xchg
into
ret
xor
sbb
jo
ss
sahf
sub
push
xchg
xchg
mov
push
lds
mov
cmps
(bad)
repnz
jnp
js
int3
mov
test
dec
xor
xchg
and
pop
test
xor
or
push
lods
fs
in
outs
xchg
sbb
sbb
cli
sbb
sbb
call
ins
dec
test
cmp
or
lock
jno
inc
dec
add
adc
pop
sbb
xor
and
jbe
dec
out
or
js
mov
sbb
mov
js
adc
sbb
movs
push
mov
adc
mov
enter
or
sti
mov
and
daa
cmp
rol
fiadd
test
scas
(bad)
outs
test
fs
jo
mov
test
gs
in
mov
sar
jnp
retf
sub
cmp
cli
sbb
cwde
push
arpl
dec
jge
xchg
cmp
(bad)
int3
and
sub
mov
ins
into
push
out
daa
jb
push
push
xchg
push
push
cmp
mov
adc
or
add
mov
(bad)
icebp
or
fs
jae
aas
test
inc
cmp
fcom
xor
mov
sub
test
out
mov
push
fsub
lods
add
jge
xchg
aam
loopne
pop
xor
sti
in
call
fwait
je
lds
adc
psadbw
stc
arpl
js
scas
sahf
sub
jbe
ret
cmovnp
xor
dec
jbe
xchg
mov
popa
cmp
out
fucomip
inc
in
cdq
mov
add
ss
(bad)
or
hlt
sbb
cmps
or
push
inc
mov
inc
sub
cmp
retf
xchg
push
iret
dec
dec
sub
add
in
mov
jp
mov
dec
in
and
test
mov
inc
out
int
shl
mov
test
retf
aam
mov
push
push
cmc
lock
popa
sbb
mov
rcr
fdiv
jno
ds
fsubrp
call
and
imul
pushf
mov
and
data16
add
inc
push
(bad)
stos
push
fsubr
repz
ja
stc
sbb
jae
mov
pop
pushf
mov
inc
sub
retf
jb
test
lea
and
cmps
scas
rol
pop
push
pop
adc
dec
add
fdiv
sbb
shl
ret
push
jne
(bad)
mov
mov
ja
test
push
add
sahf
sbb
outs
cmp
xor
mov
pop
cmp
adc
xlat
cmp
add
ret
(bad)
sbb
xorps
mov
js
mov
mov
sub
retf
out
es
push
push
or
jp
rcl
scas
fimul
das
push
add
jns
wbinvd
jmp
sbb
test
cmc
pusha
(bad)
pop
test
mov
sahf
loopne
aad
ror
inc
and
dec
cwde
sti
sbb
inc
xor
mov
lahf
or
xor
fist
lods
mov
lock
xchg
in
push
mov
and
mov
xchg
push
hlt
mov
imul
add
cmp
out
inc
and
mov
xor
repnz
mov
sbb
outs
sub
inc
(bad)
int3
inc
sub
pop
cmp
push
xor
push
push
pop
jmp
repnz
loope
movs
cmp
jp
adc
xchg
mov
dec
mov
sti
add
jle
xchg
lahf
or
push
dec
leave
add
mov
mov
adc
jl
fdivp
xor
adc
cmps
call
adc
xor
sub
ret
pushf
sub
out
pop
adc
sub
push
cs
dec
mov
xor
sub
inc
pop
fisttp
int
adc
pushf
sub
sbb
xchg
adc
iret
xor
mov
jnp
cs
(bad)
int
retf
fs
call
mov
dec
dec
mov
cmps
mov
out
fmul
pusha
mov
daa
mov
fwait
daa
adc
cmc
sbb
ret
dec
push
jae
fadd
fisttp
push
pop
xchg
mov
sub
pop
out
xchg
xacquire
push
xor
jne
js
sub
sbb
mov
psubb
inc
stos
push
cmps
or
push
sbb
mov
pop
or
shr
enter
push
aaa
pop
push
inc
jl
xor
or
dec
repnz
cmp
jb
mov
jecxz
sti
and
les
mov
mov
std
test
test
mov
push
mov
mov
mov
mov
cmp
mov
mov
mov
dec
add
mov
or
shl
lods
out
and
ret
in
cmp
rcl
and
fs
popa
(bad)
jl
jb
inc
dec
add
in
adc
pop
shl
cmp
retf
repnz
dec
pushf
fisttp
jmp
cmps
push
jle
imul
dec
ret
lock
out
xor
fst
xchg
dec
xchg
aad
cdq
lea
mov
adc
inc
fidivr
jmp
push
test
xchg
pusha
cmps
push
pusha
jbe
sub
call
or
aas
and
stc
inc
(bad)
and
aas
out
xchg
(bad)
mov
pop
sar
call
push
retf
stc
cmps
pop
push
or
push
inc
or
sbb
and
outs
xchg
and
test
mov
xor
pop
pop
pop
stos
test
bound
push
loope
fs
loop
mov
mov
pop
adc
dec
scas
inc
and
cmc
jle
call
pop
loop
imul
repnz
add
pop
mov
addr16
loop
in
adc
int
leave
(bad)
cli
mov
shr
std
shl
rcr
mov
fdiv
test
xor
lahf
dec
jbe
cmp
jne
outs
shr
cwde
xor
je
scas
ins
cmp
bound
es
fist
or
pop
daa
dec
cli
cmp
mov
jecxz
inc
call
and
add
ins
lea
xlat
pushf
imul
xchg
push
cwde
dec
or
add
or
fist
push
adc
outs
jmp
inc
in
push
jne
jno
out
lahf
sub
pop
outs
jp
jmp
test
gs
(bad)
sti
push
cmp
mov
inc
adc
push
test
call
imul
ins
daa
test
inc
std
in
cli
mov
xor
rcl
and
dec
jl
pop
dec
arpl
jns
fadd
aam
(bad)
pop
adc
adc
and
or
out
pop
sahf
or
jmp
mov
cs
out
jb
call
adc
es
push
test
sbb
sub
loopne
sbb
mov
call
les
push
fmulp
mov
cli
jbe
inc
cmps
xor
or
dec
or
cmp
lds
or
cmp
xchg
or
dec
mov
mov
lock
retf
xor
shr
inc
addr16
mov
call
jge
psrld
xor
loop
cmp
cmp
dec
pop
cmp
test
cld
fistp
cld
cmp
jle
dec
or
or
sbb
je
cmp
cdq
inc
xchg
repz
jns
pop
or
nop
jno
sub
clc
jo
pop
jne
dec
mov
mov
pop
mov
call
pop
movd
xor
xchg
xor
mov
sar
adc
mov
dec
jmp
nop
scas
das
dec
jl
sbb
push
sub
mov
mov
pop
fnstsw
xchg
retf
ss
pop
inc
push
jg
pop
mov
adc
data16
idiv
inc
js
dec
js
mov
or
cmps
mov
jmp
push
loop
mov
pop
cmp
fst
push
arpl
in
rol
push
sub
aas
outs
dec
pusha
push
sbb
enter
into
lods
or
rol
xchg
and
mov
int3
(bad)
mov
gs
call
ss
sbb
adc
mov
cmp
cmps
mov
xor
gs
pop
mov
lahf
mov
mov
and
jnp
push
mov
ret
(bad)
mov
adc
imul
xor
mul
inc
inc
ja
fs
jl
push
mov
(bad)
and
sahf
sahf
pop
xor
sub
mov
fsub
mov
bnd
pop
ins
cmp
jmp
cmp
dec
jge
(bad)
sub
in
ins
cmp
aaa
xor
out
into
push
lods
xlat
dec
and
movs
loopne
popa
daa
sub
popa
adc
mov
push
(bad)
outs
xchg
movs
xor
mov
mov
stos
dec
mov
scas
inc
sahf
mov
scas
iret
jb
adc
dec
cmps
sbb
push
jl
jg
icebp
mov
cdq
les
jno
ss
fcmovnb
or
add
lahf
dec
or
das
int3
xchg
loop
push
(bad)
std
jbe
shl
popa
mov
mov
movs
mov
add
sub
loopne
cli
pusha
jmp
sub
dec
sbb
push
cli
ja
ss
adc
repz
lahf
xlat
dec
cmps
(bad)
mov
push
jg
sub
xchg
push
test
xor
fs
push
dec
dec
mov
jae
inc
sbb
xor
and
or
jle
shr
mov
inc
popf
das
das
ret
cmps
stc
cmc
hlt
pop
add
data16
inc
mov
cmp
in
pushf
into
out
outs
iret
std
es
push
ins
cld
movs
lea
sbb
mov
sbb
and
xchg
mov
adc
loopne
mov
cli
xchg
cmp
jb
fsubr
sbb
mov
mov
sti
ret
sub
fs
imul
sbb
jbe
imul
push
test
out
les
cmps
pop
add
xor
xor
jno
test
add
sub
aaa
(bad)
dec
hlt
and
jne
cmp
sub
pop
or
and
(bad)
push
das
bound
and
dec
gs
dec
fs
imul
ss
icebp
hlt
gs
fs
imul
repz
in
sub
sub
mov
cmps
adc
inc
cdq
mov
pop
pop
loop
js
sub
out
repz
(bad)
fwait
out
imul
popf
lds
xor
pop
mov
lods
inc
adc
push
fs
push
inc
and
jo
inc
jb
push
sub
sbb
cmp
movs
retf
xchg
cld
aas
mov
inc
pusha
add
push
mov
clc
xchg
scas
lea
dec
mov
adc
dec
and
ficomp
push
dec
(bad)
imul
or
shr
imul
jno
push
out
popa
test
xor
cmp
mov
movs
das
mov
sbb
cdq
mov
mov
adc
xchg
and
xchg
lds
or
or
lods
(bad)
jb
(bad)
jmp
js
lahf
aas
fldenv
jnp
push
call
sub
jg
and
lahf
int
ret
and
mov
dec
(bad)
mov
call
xor
das
shl
xchg
mov
sub
mov
mov
jecxz
cmp
ret
loopne
and
clc
div
outs
pushf
sbb
nop
loop
mov
idiv
bnd
fcom
enter
dec
out
xor
jb
xchg
adc
mov
xchg
pop
imul
hlt
jbe
mov
lods
int3
jns
cmps
out
jne
bound
int3
mov
loop
scas
or
dec
ret
sbb
pop
cld
mov
jb
xchg
xchg
into
jmp
mov
popa
lods
jle
mov
cmp
lds
repz
cli
xchg
push
out
popa
or
addr16
add
mov
retf
push
in
ficomp
mov
jne
lods
popf
lock
mov
push
and
cmps
jle
sub
loope
xchg
sahf
aaa
add
add
gs
dec
pop
jmp
mov
mov
dec
fcmovnbe
sub
push
ja
popa
js
adc
out
imul
pop
mov
test
pop
mov
pop
and
out
adc
sbb
dec
outs
fcomp
fisubr
neg
fsub
aas
sbb
into
pop
ds
and
mov
jle
sub
push
sbb
jp
mov
sub
(bad)
bound
mov
push
pop
jo
ret
mov
sbb
xchg
pop
pop
jg
or
xchg
enter
jecxz
mov
cld
fldenv
sbb
ins
inc
shr
pop
rcl
int
sub
adc
out
ror
adc
call
pop
cmps
dec
jmp
or
mov
ret
pop
inc
inc
dec
in
jne
icebp
int
loopne
ror
or
test
mov
inc
je
jnp
into
loope
leave
cmp
inc
es
sbb
rcr
out
sbb
dec
aam
in
xchg
clc
push
mov
aas
cmp
jle
iret
shr
add
mov
gs
test
sub
repnz
or
cld
push
jmp
pop
jb
xor
xor
jg
push
je
dec
mov
mov
sub
mov
cmp
out
fld
xor
cmc
mov
(bad)
pop
arpl
xlat
(bad)
jne
pop
push
loope
int
loop
arpl
add
aam
jg
pop
or
pop
adc
mov
fs
sbb
test
shl
push
push
push
jo
mov
ret
jnp
retf
sub
test
enter
(bad)
fchs
lea
nop
push
nop
or
fimul
fistp
mov
into
adc
in
xor
icebp
sbb
xor
sahf
sbb
loopne
mov
hlt
jo
fdiv
retf
sbb
call
jb
je
push
or
cmp
adc
add
inc
push
ins
xchg
cmps
leave
and
lods
mov
inc
repz
cli
cmp
(bad)
dec
imul
cmp
les
test
(bad)
jp
add
out
popa
int3
mov
adc
xor
repnz
enter
inc
(bad)
enter
sar
push
das
xor
cmp
fistp
fs
das
inc
imul
pushf
shr
test
mov
jp
jns
cmps
add
ret
sbb
pop
inc
and
adc
add
stos
mul
icebp
repnz
jae
pop
dec
xor
out
jbe
inc
out
loop
out
push
je
retf
(bad)
(bad)
addr16
and
outs
xchg
lds
nop
cmps
lahf
lahf
loope
xchg
not
sub
jg
inc
sub
in
ss
int3
mov
dec
sbb
dec
or
aaa
stc
es
les
xor
mov
cs
ins
sub
int3
mov
in
(bad)
les
shl
sub
xor
int3
(bad)
fst
jb
int3
stos
mov
sbb
lock
stos
aam
out
in
jg
pusha
xor
test
scas
mov
jo
mov
and
cli
fdivr
xor
and
mov
fdivr
adc
mov
mov
mov
call
lock
(bad)
jmp
sub
mov
xor
clc
or
sub
jmp
cli
or
jle
movs
stos
mov
push
or
xor
mov
adc
cdq
retf
or
cmp
push
push
(bad)
(bad)
shr
inc
add
retf
pushf
jp
clc
(bad)
push
(bad)
pop
inc
sub
loop
enter
xchg
xlat
daa
scas
arpl
cmp
popf
(bad)
push
fsubr
add
adc
jno
cwde
cmp
ss
je
aaa
js
fistp
sub
pop
mov
pop
jo
dec
jbe
and
adc
mov
shr
fdivp
jle
jae
jmp
xchg
and
push
mov
and
cmps
cli
cmp
imul
and
aad
or
mov
dec
add
cmc
push
or
sub
pop
popf
and
ja
push
rcl
bound
mov
push
mov
fs
lods
and
test
pop
sar
xor
add
mov
and
or
sti
push
cmps
mov
(bad)
xchg
mov
movs
dec
sub
cs
mov
mov
sbb
mov
push
iret
test
ficom
push
cmps
push
mov
dec
aas
(bad)
fcom
ret
or
(bad)
cdq
cli
(bad)
push
js
clc
pusha
xchg
cmp
jmp
sub
cs
cwde
mov
out
pop
xchg
pop
sahf
lds
pop
fnstenv
dec
daa
addr16
ja
aas
test
pop
jb
xchg
xor
sub
push
mov
hlt
sub
push
ret
and
mov
xor
adc
imul
sbb
(bad)
cld
aad
mov
xor
or
stos
clc
ds
leave
adc
lea
mov
in
fwait
xchg
cmp
bound
pop
sbb
jmp
shl
(bad)
mov
out
inc
dec
ja
(bad)
push
mov
adc
dec
popf
(bad)
lds
aaa
and
icebp
push
lods
aad
inc
addr16
dec
movs
add
mov
scas
and
adc
push
fsub
mov
mov
daa
mov
std
sub
cmps
cmps
and
pusha
sti
stos
ret
push
push
mov
inc
(bad)
repz
lahf
cs
call
(bad)
pushf
mov
pop
mov
or
rol
inc
mov
pop
in
mov
loope
loop
ror
je
adc
mov
pop
sub
in
cmp
nop
(bad)
fstp
mov
loope
cld
fstp
shl
mov
out
and
mov
jns
ins
gs
mov
movs
mov
mov
dec
or
adc
jmp
scas
mov
mov
and
mov
les
ficom
sbb
pop
xchg
into
jmp
enter
call
mov
push
shl
sar
jne
push
xchg
pushf
ror
es
pop
mov
jb
call
mov
mov
inc
into
xor
lahf
xchg
aam
adc
sub
repnz
repnz
enter
jbe
pushf
sub
fwait
es
sti
sub
or
pop
call
cli
pop
outs
arpl
stos
mov
fcomp
mov
shl
inc
mov
jno
xchg
in
clc
xchg
xchg
scas
sub
std
cmp
cdq
adc
scas
sub
sbb
fmul
adc
out
sub
sbb
lea
pop
(bad)
adc
ins
sbb
das
fcmovb
dec
gs
jg
sbb
imul
test
scas
add
gs
jne
sub
xchg
mov
retf
imul
nop
test
out
push
pop
mov
fcom
mov
fadd
dec
dec
stos
addr16
sbb
(bad)
out
dec
push
and
shl
daa
test
jnp
ret
inc
repnz
mov
sar
arpl
std
mov
mov
or
inc
loope
lods
xchg
cwde
push
xchg
pop
(bad)
aam
iret
out
jo
sub
out
mov
pop
les
test
mov
pop
xchg
pop
cmc
call
mov
dec
jl
lahf
data16
loopne
idiv
inc
sub
pushf
jmp
xchg
rol
repz
(bad)
and
cmc
fcomp
(bad)
pop
lods
lods
(bad)
rcl
xor
sbb
adc
fwait
jecxz
add
ja
jo
(bad)
je
aam
aas
push
sbb
push
sti
call
je
(bad)
rcl
pop
mov
jmp
sbb
arpl
ins
dec
ja
sub
and
(bad)
mov
rdtsc
in
pop
add
cmps
mov
shl
push
pop
push
mov
ret
sub
mov
mov
inc
(bad)
mov
inc
imul
imul
aaa
jg
dec
out
pop
outs
or
ror
pop
movs
lods
pop
or
je
push
dec
repnz
pop
sub
gs
scas
jo
ret
or
js
ins
xchg
inc
ds
(bad)
nop
xchg
dec
xor
adc
mov
pusha
daa
mov
pop
out
cmp
mov
stos
push
jecxz
xor
fmulp
push
scas
(bad)
arpl
in
xchg
es
sahf
in
jmp
and
adc
ret
repz
push
outs
push
into
sub
jbe
and
imul
mov
pushf
xor
cmp
popa
das
scas
icebp
fld
sbb
inc
pop
out
jb
jecxz
into
sub
push
popa
inc
push
(bad)
repnz
popa
movs
cld
adc
aam
mov
inc
jne
fsubr
imul
pop
test
pop
xor
push
inc
sbb
out
icebp
adc
pop
inc
or
mov
jle
add
int3
movs
mov
sub
push
jmp
adc
lahf
in
repnz
sub
sbb
dec
adc
push
jae
pop
lods
cmps
push
gs
clc
push
push
sub
mov
scas
stos
cwde
neg
mov
sbb
std
push
jmp
adc
inc
inc
push
mov
retf
jecxz
loopne
mov
sbb
adc
mov
xchg
mov
xchg
adc
dec
dec
neg
inc
adc
out
pop
cmp
sub
retf
ss
pushf
and
or
mov
pusha
test
jbe
lahf
fimul
jo
xchg
dec
je
xor
pop
dec
xor
arpl
inc
add
ins
xor
jmp
pop
in
out
dec
jo
or
ret
int3
inc
fbld
cmp
sbb
sub
loopne
pop
jo
mov
add
mov
cmp
out
jg
inc
out
icebp
fwait
inc
(bad)
std
mov
push
div
push
inc
jae
neg
test
stc
push
out
fidivr
adc
mov
(bad)
mov
nop
inc
jb
push
jno
js
inc
out
fwait
(bad)
leave
xchg
cmp
ins
dec
sub
inc
stc
adc
into
iret
loop
loopne
sbb
pushf
or
jnp
sub
imul
sbb
pop
ins
add
aaa
xchg
mov
or
cld
mov
inc
in
push
or
xor
fldenv
fistp
jl
cmp
dec
dec
sbb
mov
aam
(bad)
and
stc
pop
(bad)
int3
push
mov
sbb
jb
fisub
fistp
clc
in
ret
movs
hlt
rol
cmc
aaa
pop
pop
add
and
mov
cmc
in
outs
(bad)
sub
adc
aas
test
aam
test
adc
out
jmp
fisubr
(bad)
cmp
add
cmp
loopne
sbb
xchg
data16
pusha
mov
jle
add
and
loopne
mov
sub
dec
movs
cmp
mov
jno
pop
fild
js
aas
aad
or
add
cld
fimul
(bad)
jb
or
push
and
sbb
xlat
or
cli
inc
sbb
jb
sbb
scas
xchg
dec
xor
sbb
xchg
push
sar
imul
in
and
add
xchg
arpl
inc
jecxz
stos
test
add
ins
adc
or
dec
data16
out
xchg
movs
dec
ins
adc
(bad)
in
push
lahf
or
xchg
jp
jno
or
ret
sbb
adc
add
jmp
xchg
cli
and
dec
push
cmc
adc
push
lahf
cmp
daa
cld
xchg
aad
adc
xor
addr16
mov
mov
sbb
pusha
fwait
popf
sbb
popf
sub
stos
dec
cdq
or
out
std
and
das
movs
mov
(bad)
fisubr
adc
mov
jmp
ja
jo
sar
add
popf
call
out
xor
imul
mov
push
cwde
mov
fisubr
fsub
vpcmpgtb
mov
fcom
jnp
in
ret
dec
ret
mov
jp
xchg
in
ficom
sub
push
cs
rol
push
jg
int
mov
cmp
or
xchg
out
mov
push
in
sbb
xor
loop
data16
xor
sti
movs
or
sub
xchg
pop
js
test
test
mov
rcl
outs
adc
imul
or
pop
push
ds
pushf
addr16
cmp
xor
cdq
lods
out
sub
xchg
mov
inc
push
jno
push
pop
sub
and
mov
out
mov
push
mov
or
cmps
sub
xchg
inc
ja
iret
mov
cmps
xor
jbe
les
lahf
nop
sbb
inc
xor
dec
ret
aas
cmp
paddusw
sbb
ficomp
out
dec
retf
ja
in
test
fs
imul
je
jb
repz
sti
loopne
test
mov
add
ret
cmp
cmps
push
jae
les
mov
je
fcomp
jbe
sbb
push
leave
ret
hlt
aam
out
pop
inc
das
les
movs
movs
push
movs
fxch
shl
jle
xor
sbb
cmp
int3
xlat
jo
sbb
push
jno
daa
(bad)
mov
or
je
cli
mov
mov
jle
xchg
rol
icebp
sahf
movs
imul
mov
cmp
inc
mov
sub
clc
fs
test
mov
xchg
aaa
push
cld
sbb
pop
outs
pop
add
cwde
sub
mov
sbb
test
lea
icebp
mov
test
adc
std
xchg
pop
repz
retf
and
inc
xchg
jecxz
cmps
jl
dec
lahf
pop
je
push
repnz
and
jle
(bad)
cld
out
jmp
or
out
inc
frstor
dec
jmp
rcl
ja
xor
add
dec
or
xchg
(bad)
popa
in
jo
arpl
cdq
hlt
pop
jg
lds
jg
stos
cmp
dec
js
call
aaa
popf
pop
pop
sub
push
push
xchg
xchg
add
inc
in
lods
mov
sub
cmp
add
mov
mov
sub
cmps
cmps
mov
push
xlat
add
cmps
fisub
fs
ret
xor
jns
movs
ins
cs
cmp
or
jg
test
imul
inc
loope
adc
imul
icebp
sub
stc
out
pop
test
and
dec
dec
jmp
pop
inc
mov
add
dec
(bad)
into
jne
loop
mov
xor
mov
int3
sbb
cmp
imul
test
das
out
(bad)
popf
or
fwait
push
xor
es
jns
add
push
add
xchg
std
in
fs
sub
pop
jle
adc
mov
icebp
cmps
pop
mov
inc
movs
mov
imul
xor
inc
ret
out
xor
shr
arpl
push
aad
mov
mov
stos
adc
movs
(bad)
mov
arpl
popf
sbb
adc
sbb
popa
or
mov
retf
dec
retf
fwait
lods
jmp
cmp
fnstenv
out
lods
call
mov
and
jmp
pop
xor
inc
jae
push
cmps
fild
inc
les
add
stc
cli
mov
jecxz
inc
adc
test
xor
mov
pop
cmps
pop
inc
or
std
mov
pop
in
cmps
pop
ins
cmp
mov
mov
mov
stc
dec
cli
adc
and
gs
add
dec
dec
mov
mov
cmps
sahf
(bad)
out
iret
into
hlt
sub
ss
bound
call
pop
mov
sbb
sbb
outs
retf
enter
rol
mov
lock
vcvttps2dq
mov
je
add
mov
dec
push
cmps
inc
out
xlat
pop
enter
dec
lods
ds
cli
mov
das
xor
aaa
nop
shr
inc
imul
ss
iret
fbld
pop
xor
sub
lods
(bad)
mov
repnz
(bad)
arpl
xchg
mov
lea
je
call
add
push
fisubr
nop
aas
shr
pop
repz
jg
or
cdq
xchg
or
pop
fs
nop
pusha
in
pop
mov
in
push
scas
(bad)
mov
int
fdivp
out
push
pop
data16
or
adc
jecxz
pop
lods
imul
popa
jge
and
mov
mov
add
xlat
dec
jmp
mov
ret
cmc
mov
sub
adc
pop
dec
popa
int3
sbb
popf
or
cli
lock
shr
xor
rol
sbb
aas
or
out
or
xchg
sub
pop
neg
dec
pop
xor
inc
xchg
sub
or
mov
jmp
stos
cmc
clc
data16
out
xchg
ret
push
lds
adc
xchg
xchg
test
cmp
jno
add
mov
xchg
jmp
(bad)
push
test
mov
loope
cmp
pushf
nop
dec
ss
cmp
jns
fsin
int3
(bad)
dec
push
cmp
and
pop
icebp
pop
popf
loope
shr
aaa
xchg
inc
ror
gs
rcr
add
xchg
aaa
popa
jnp
push
add
out
adc
jle
es
sub
daa
std
aam
cli
push
add
in
sub
cmp
xchg
mov
push
inc
adc
xchg
ins
sti
mov
adc
jno
pop
out
xor
repz
int3
adc
mov
or
sbb
outs
sahf
push
and
pop
call
fsubr
or
cmp
pop
icebp
jno
and
xchg
movq
cmp
xchg
jmp
xchg
dec
xor
push
jo
js
jns
mov
push
sub
mov
js
add
pop
(bad)
in
mov
or
and
mov
push
fiadd
add
pop
dec
adc
sahf
cmp
call
push
movs
shr
je
adc
mov
mov
test
mov
add
xlat
gs
jmp
enter
pop
add
inc
sub
call
fcomi
cld
loope
enter
mov
cmp
jb
mov
and
fwait
popf
or
add
mov
mov
xchg
int3
sub
ss
shr
xchg
sbb
push
loope
lea
cmp
ret
(bad)
jae
dec
pop
(bad)
imul
and
bound
pop
icebp
xlat
movaps
mov
movs
mov
xor
sub
and
ret
cmp
fldl2t
shr
mov
mov
jmp
mov
push
mov
mov
gs
mov
inc
icebp
mov
push
xchg
aad
mov
inc
sar
rol
aas
dec
mov
fcmovne
adc
jl
inc
dec
jecxz
rcl
xchg
dec
dec
mov
dec
iret
(bad)
sar
fnsetpm(287
cmp
cmps
les
mov
mov
push
in
push
and
test
mov
gs
jne
mov
ret
imul
pop
cli
in
jne
inc
sbb
fsubr
mov
aaa
pusha
mov
iret
add
mov
xor
arpl
and
pushf
stos
sbb
cmp
or
dec
xor
jle
sub
xchg
adc
mov
rcr
aam
jb
sub
cwde
aaa
in
push
test
leave
out
xor
inc
sub
xlat
jl
sbb
jbe
cmp
loope
loope
xchg
mov
pop
pop
test
jmp
pop
call
cmc
enter
xchg
and
xor
adc
neg
movs
les
mov
jns
fsub
jle
adc
out
add
mov
cmp
sbb
mov
pop
bound
sbb
mov
sti
cmp
test
sub
ficomp
lahf
xlat
jno
mov
movs
scas
jb
xchg
cwde
cdq
(bad)
retf
leave
stc
push
jle
aaa
cmp
(bad)
icebp
and
sbb
xchg
call
or
loop
arpl
fidivr
rol
(bad)
repnz
dec
mov
loope
repz
jp
adc
out
(bad)
push
push
fstp
loop
aad
movs
and
push
inc
ds
inc
test
pop
mov
push
push
fwait
mov
scas
cmps
out
out
jge
hlt
mul
aas
ret
pusha
cmp
nop
or
fisubr
(bad)
mov
mov
push
xchg
pop
jbe
adc
push
inc
inc
jl
ret
xchg
mov
mov
pop
dec
xchg
push
jge
mov
mov
jg
popa
bound
push
dec
xchg
lea
mov
fs
aas
dec
jmp
imul
mov
div
adc
mov
add
adc
lahf
inc
imul
and
loope
shl
fwait
cmp
dec
dec
cld
or
and
mov
shl
jbe
cmp
(bad)
out
test
mov
cmp
sub
xchg
jnp
xor
test
mov
mov
xchg
ret
pop
push
pop
dec
or
enter
popa
cmp
mov
mov
fmul
retf
cwde
cmp
jo
mov
call
pop
call
sub
push
dec
and
fdiv
add
adc
lods
mov
inc
movs
and
mov
out
xchg
dec
pop
stc
pop
dec
inc
and
out
add
or
arpl
jmp
or
pop
mov
test
sub
bound
test
mov
xlat
fstp
mov
popf
mov
cmp
add
popa
leave
shr
(bad)
icebp
aas
add
and
push
cmps
push
adc
les
xchg
push
sub
pop
movd
jmp
lods
lods
or
push
mov
rcl
push
sbb
test
mov
loopne
mov
inc
loopne
je
dec
pop
mov
dec
arpl
stos
int
lahf
xor
cmc
sbb
sahf
stc
xchg
sahf
imul
pop
cmp
sub
mov
and
bound
setne
(bad)
loopne
xor
rol
stc
and
fs
pop
movs
scas
retf
jnp
and
es
adc
aaa
lock
or
lock
daa
mov
cmc
dec
lods
rcr
jg
iret
push
(bad)
ins
test
bound
mov
imul
repz
retf
call
rcr
dec
pop
lods
mov
mov
loop
aas
and
call
loop
add
scas
repz
ds
fistp
neg
push
add
dec
arpl
scas
and
dec
mov
sub
(bad)
daa
div
inc
fiadd
std
stos
sbb
xchg
retf
jmp
mov
call
dec
jno
aaa
mov
mov
inc
movs
aas
jle
pusha
push
sahf
push
inc
inc
push
test
inc
cmp
data16
sub
ret
inc
mov
call
jne
dec
out
pop
mov
icebp
ins
jne
sub
nop
cmp
shl
pop
enter
sbb
inc
cwde
aam
cmp
push
sbb
xchg
adc
sar
lods
or
jbe
cld
add
cmp
mov
fistp
mov
add
movs
icebp
lock
or
xor
sub
loop
imul
push
lahf
sub
call
pop
mov
cld
mov
test
fild
fbld
xchg
mov
dec
sub
stc
push
push
mov
jg
mov
mov
rcl
mov
scas
enter
sbb
cmps
add
fisttp
pop
mov
push
in
pop
add
rcr
sbb
stos
jl
mov
in
mov
add
xor
inc
shl
cli
mov
jns
xchg
jns
pop
add
jle
bound
sahf
inc
inc
and
mov
fnsave
push
repz
xchg
into
inc
mov
mov
push
ds
adc
fild
or
test
sbb
push
mov
dec
pop
(bad)
fld
dec
(bad)
push
nop
(bad)
mov
sahf
retf
cmp
or
adc
icebp
xchg
push
jae
and
lea
test
mov
(bad)
call
ss
fistp
pop
xor
jbe
scas
lds
adc
test
mov
push
mov
inc
dec
add
xchg
ins
adc
ins
push
shl
sub
aas
stos
or
xchg
retf
pop
and
add
lock
pop
and
push
pop
mov
popf
ins
iret
das
add
fs
sbb
inc
ja
push
cmps
adc
aam
cmp
xor
mov
cwde
mov
xchg
pop
jle
sahf
rol
xchg
movs
mov
retf
adc
adc
into
clc
test
cmc
(bad)
push
xor
fld
dec
xor
out
les
leave
bound
or
mov
aam
clc
aaa
xor
mov
stc
addr16
fs
xchg
sbb
rcl
jnp
xchg
push
std
fidiv
add
pop
popa
in
mov
movs
inc
inc
std
lock
mov
call
push
ret
pop
mov
pushf
xor
call
retf
jge
or
or
dec
out
jp
pop
fbld
add
sbb
fmul
dec
cmp
ret
out
add
jns
lock
sbb
adc
call
dec
lea
inc
je
addr16
out
dec
adc
jae
test
imul
adc
or
sbb
rol
je
sub
int3
mov
dec
clc
xor
movs
ds
sub
ins
movs
shr
jecxz
call
xor
call
xor
push
(bad)
xor
dec
jns
and
jecxz
jb
popa
in
lahf
jp
adc
cmps
dec
pop
xchg
inc
ja
in
dec
jns
or
sbb
xor
inc
or
mov
out
gs
mov
mov
mov
mov
mov
or
sbb
stc
dec
data16
(bad)
push
jecxz
pusha
sbb
cmps
cmp
cmp
cmps
cmp
dec
scas
dec
mov
mov
jle
push
fimul
movs
mov
sbb
enter
or
aad
inc
sub
test
ss
add
test
push
inc
cli
mov
sub
add
fidiv
inc
sbb
(bad)
jp
mov
mov
mov
jg
cld
mov
mov
loopne
cmps
mov
xor
mov
(bad)
sbb
or
and
pushf
mov
push
aad
cwde
ins
pushf
pushf
xchg
mov
and
jg
xchg
popf
pop
ret
sbb
sbb
bound
sbb
ins
ficom
ret
sbb
mov
sbb
mov
aam
sbb
sbb
pop
daa
jmp
rdtsc
idiv
sub
loope
ds
repnz
jbe
lea
or
or
or
dec
std
xlat
es
and
sub
dec
lock
xchg
popf
stos
adc
test
lahf
leave
push
sbb
push
add
pop
ja
and
pop
int3
mov
je
fcom
push
not
mov
(bad)
test
mov
xchg
push
push
pop
mov
call
add
sub
in
cmp
xchg
ret
mov
dec
xor
xchg
fldenv
movs
mov
adc
adc
aas
lock
mov
pop
test
inc
sbb
adc
mov
xor
pop
jns
push
add
fs
into
and
imul
in
fcom
adc
jmp
mov
jnp
out
aaa
sbb
adc
inc
in
test
cmc
(bad)
repnz
in
add
cmp
scas
or
inc
push
push
jg
mov
fidivr
sbb
jns
sbb
xlat
jle
test
jl
add
mov
mov
ins
mov
bound
cmp
lahf
rol
fist
xor
cwde
xor
jo
mov
push
mov
mov
push
adc
loopne
scas
xchg
jge
sub
sti
pop
out
scas
sub
adc
arpl
push
ret
inc
imul
cmps
jecxz
pop
cmp
jl
ja
mov
sar
lahf
mov
stos
mov
adc
in
or
fcmove
xor
xchg
mov
mov
mov
je
sub
cmp
rol
inc
std
lods
sbb
fs
in
pop
out
imul
jmp
addr16
popf
addr16
pop
and
inc
sub
loop
pop
dec
int
js
push
mov
push
pusha
imul
sub
outs
pusha
not
lahf
into
scas
sub
xlat
mov
push
neg
imul
fisttp
and
fldenv
jnp
adc
and
sub
nop
adc
xchg
cmp
repnz
mov
add
ins
shl
pop
popf
and
daa
push
or
sub
mov
inc
movs
fidivr
(bad)
std
rcr
mov
xlat
mov
push
jge
or
inc
jge
les
stos
imul
push
stc
lock
xor
push
or
pop
daa
rol
sub
push
js
pop
fs
or
loope
mov
or
sti
jnp
pop
mov
dec
sti
cs
mov
or
cdq
data16
shl
sbb
jno
jp
cmps
mov
aad
pop
lods
stc
adc
arpl
in
test
fwait
inc
jae
inc
mov
mov
push
push
enter
and
add
out
inc
ret
iret
nop
cld
sbb
or
mov
pushf
pop
bound
cwde
test
cmc
mov
adc
jns
dec
add
adc
icebp
add
iret
lods
movs
mov
cmp
pop
ins
jge
pop
or
mov
lea
imul
cmp
out
rcr
mov
and
mov
add
sbb
(bad)
imul
ss
inc
push
popa
mov
(bad)
out
mov
xor
mov
inc
pop
mov
cdq
add
loop
sbb
adc
mov
jae
inc
retf
stos
dec
fisttp
cli
sub
sbb
mov
pop
sar
push
shl
pusha
jg
sar
dec
or
sub
push
mov
inc
out
pusha
add
in
rol
icebp
inc
cld
pop
(bad)
retf
dec
xor
ja
jge
jg
repnz
popf
(bad)
mov
aas
out
and
test
loop
add
add
cli
loopne
jl
mov
xor
dec
add
pusha
adc
mov
mov
lea
mov
and
int3
mov
or
pop
int3
pop
popf
mov
inc
or
sti
or
(bad)
daa
pusha
mov
or
cmp
imul
ins
dec
and
dec
xchg
jp
cmps
dec
loope
jnp
ficomp
cli
addr16
cmp
cmp
int
repnz
xor
fsub
inc
cmp
movaps
movs
sbb
add
dec
xchg
ins
sbb
test
cdq
shl
push
add
sahf
sub
and
add
and
cmp
sub
rcl
add
jmp
in
mov
xchg
inc
inc
call
arpl
jno
jp
sub
ins
(bad)
fmul
fist
inc
hlt
or
xor
add
add
sbb
mov
mov
pop
(bad)
lds
sub
xchg
and
xor
loop
test
or
call
repnz
push
pop
mov
ret
fs
cwde
lea
push
jne
test
les
inc
cmp
std
cli
pop
loop
xor
jmp
shl
mov
repnz
out
ror
jb
js
sub
mov
push
out
push
sub
sub
pop
mov
hlt
push
into
push
test
xchg
cmp
xchg
mov
mov
pop
jnp
mov
inc
je
inc
add
mov
lods
jg
jns
or
xor
imul
sub
jg
in
imul
inc
cmp
jae
test
mov
enter
dec
into
das
pusha
retf
dec
sub
mov
jge
jo
push
inc
or
push
mov
sub
enter
dec
inc
mov
fcomp
mov
xchg
js
pop
sahf
mov
xlat
and
push
sub
and
push
add
add
sbb
adc
jmp
xor
adc
std
mov
ret
lea
rcl
cmp
mov
sub
cdq
mov
add
sbb
pop
stos
add
jecxz
shl
(bad)
js
mov
stc
pop
push
cmp
push
pop
push
mov
je
popa
sbb
sub
or
cmps
cmp
call
ins
jg
sbb
cmp
iret
xor
push
pop
fucomp
pop
xor
jmp
sub
inc
stos
cmps
pop
mov
dec
push
clc
rol
and
lahf
out
push
pushfw
aad
jno
call
retf
neg
sbb
push
test
or
mov
cli
sbb
push
fst
enter
rcl
dec
int
add
jbe
mov
das
mov
inc
into
retf
dec
pop
add
xor
call
mov
lods
dec
lods
neg
movs
fadd
push
pop
retf
or
ins
mov
dec
sub
out
cmp
movs
stc
sub
loopne
jmp
jl
rcl
or
and
loope
pop
ins
popf
popf
inc
mov
mov
jne
iret
cmp
mov
mov
aaa
xor
push
daa
test
in
mov
icebp
dec
dec
xchg
retf
xor
or
test
mov
test
jno
lea
ja
std
sahf
call
fcmovne
lock
sbb
data16
push
adc
dec
xor
jo
pushf
mov
(bad)
mov
mov
sbb
and
(bad)
imul
jle
and
jge
mov
sub
pop
scas
ficom
and
enter
adc
sbb
adc
adc
inc
inc
and
out
test
(bad)
jg
add
cli
ja
pop
or
movzx
jmp
loope
cs
mov
push
mov
push
xor
cmpxchg
or
or
les
addr16
ds
leave
call
add
test
stos
lea
sti
lods
xor
leave
sahf
aam
push
mov
xlat
test
sbb
(bad)
pop
and
sahf
je
cmps
xor
es
pop
add
and
lods
mov
xchg
sub
outs
pop
jmp
sub
xlat
push
lea
mov
loop
aas
retf
jg
repnz
mov
sbb
fidiv
lea
pop
(bad)
movs
push
sbb
add
mov
sub
cmovs
mov
gs
or
xor
xchg
les
popa
and
loopne
dec
aaa
cmps
in
mov
jns
pop
mov
or
aam
ins
in
loope
mov
(bad)
jge
adc
mov
push
sahf
mov
inc
ss
dec
jmp
mov
push
sar
in
mov
sbb
sar
push
or
push
add
and
frstor
mov
or
pushf
jle
stc
or
leave
ins
rcr
cmp
call
sub
jmp
dec
sbb
sbb
leave
out
and
pop
pop
and
inc
push
pop
push
and
jb
adc
pop
xor
mov
mov
mov
mov
and
fcom
push
inc
daa
xor
rol
mov
add
sbb
adc
repz
xchg
jp
ror
ret
xlat
push
cmp
in
jecxz
and
out
sub
inc
icebp
aad
xchg
cmp
or
imul
mov
push
mov
or
loopne
rcl
xchg
mov
stos
push
pop
scas
dec
test
pop
mov
movs
js
icebp
fcmovu
mov
or
jmp
xor
mov
sbb
mov
sbb
jns
push
shl
sub
adc
push
cmps
add
popa
mov
mov
mov
sub
xchg
fistp
mov
sub
mov
stos
xchg
jmp
jg
inc
aas
cli
push
imul
xchg
arpl
shr
arpl
xor
sub
xor
sbb
cwde
loope
or
adc
mov
stos
(bad)
fbstp
dec
mov
add
jns
pop
mov
je
shl
mov
or
fidiv
jb
test
or
mov
fwait
and
out
or
es
fcmovbe
les
mov
inc
mov
(bad)
dec
or
inc
ror
and
es
add
cmp
mov
ror
sub
shl
dec
dec
icebp
sbb
sub
and
sbb
int
jae
jmp
retf
ss
sar
or
cdq
sub
sbb
pusha
fs
xor
cmp
dec
push
repnz
dec
add
rcl
pusha
sbb
les
rcl
sbb
inc
call
icebp
jge
arpl
hlt
out
int
adc
add
xlat
imul
ret
mov
sbb
dec
fcmovb
arpl
(bad)
inc
add
nop
adc
aam
pushf
cmc
adc
icebp
mov
mov
mov
inc
test
jle
push
(bad)
inc
xor
pop
arpl
iret
jne
pushf
ins
cld
or
loop
out
sub
fst
sub
mov
(bad)
adc
js
sbb
imul
movs
mov
fstp
ins
add
xchg
jge
cli
push
sbb
xor
enter
pushf
fld
push
outs
ror
iret
xchg
fcom
lea
mov
xor
mov
xchg
xchg
nop
push
loopne
sub
cmp
lds
mov
in
mov
jne
adc
dec
fldenv
mov
out
or
xlat
nop
dec
test
je
loope
add
bound
fmul
ret
add
or
lods
jle
and
cwde
mov
mov
jbe
sub
scas
or
or
les
push
rep
xor
jnp
stos
fld
mov
in
clc
mov
pop
and
cmp
ins
(bad)
adc
(bad)
scas
push
call
lock
leave
ds
pop
sahf
xor
ja
xchg
or
mov
das
shl
or
mov
(bad)
cmc
idiv
in
push
cmp
in
and
adc
mov
ds
fsub
frstor
push
sub
into
imul
jmp
dec
jmp
xchg
or
push
sar
push
mov
cmp
pop
jbe
scas
mov
retf
in
lahf
rcl
xchg
push
bnd
jmp
loop
cmc
mov
sub
xor
cmc
mov
arpl
cld
mov
(bad)
stos
dec
cmp
outs
jbe
test
push
sbb
fmul
sub
xor
adc
dec
or
sbb
cmp
inc
push
push
aam
xchg
bound
dec
lods
mov
mov
push
dec
push
xchg
data16
clc
lea
push
and
dec
test
mov
or
cmp
fild
ja
push
inc
icebp
or
sahf
test
ins
nop
(bad)
or
loop
test
int3
sub
int
ffree
xchg
inc
in
jbe
dec
sbb
loopne
daa
js
test
cwde
or
les
inc
adc
mov
add
and
fdivr
cmps
lock
pop
pop
lods
rcr
dec
jmp
cmp
inc
outs
sbb
add
mov
push
pop
aaa
mov
fistp
es
ins
cmp
pop
mov
lea
fidiv
or
retf
jns
xchg
pop
jecxz
movs
dec
cmp
xor
adc
sbb
cmp
gs
cmp
or
mov
mov
fcomp
or
js
mov
adc
jge
or
xor
xor
push
pop
icebp
lahf
ret
out
mov
es
sti
mov
inc
mov
outs
push
(bad)
daa
jmp
dec
push
mov
outs
neg
cmp
lea
cs
mov
pop
adc
push
push
lods
fist
push
hlt
fs
out
jmp
pop
int3
loop
cwde
mov
mov
and
xchg
dec
jle
cmp
or
cmc
pop
adc
jns
pop
test
ret
fdiv
out
mov
adc
lods
push
push
adc
cli
add
out
cld
stos
(bad)
stos
loope
push
adc
aad
out
ret
xchg
xor
add
jnp
fs
inc
mov
or
mov
pop
rcl
inc
(bad)
arpl
icebp
push
add
pop
fwait
xor
cmc
daa
mov
fstp
aas
xor
je
das
scas
jb
ja
imul
sahf
add
nop
call
jnp
adc
loopne
push
mov
push
gs
pop
cmps
sub
jge
js
ds
add
xchg
(bad)
fsubr
ss
out
add
sub
jmp
mov
cmp
lock
ret
and
xor
mov
push
and
pushf
pop
stos
jbe
jae
ins
out
into
pushf
out
loopne
gs
jmp
inc
or
inc
shl
retf
mov
mov
or
jmp
adc
sbb
repz
sti
mov
xchg
ins
call
mov
ror
xchg
mov
pusha
pop
sbb
inc
nop
outs
ss
fs
mov
out
cmp
out
push
jecxz
xchg
jl
xchg
push
push
mov
out
(bad)
(bad)
cmc
cmp
loopne
popa
dec
dec
dec
mov
and
sbb
aad
fcomp
arpl
or
sbb
jg
arpl
xor
xor
pop
call
sub
mov
aad
call
pop
pop
repnz
icebp
add
movs
cmp
fisttp
cmp
lds
mov
jecxz
adc
sub
sub
or
clc
cmp
arpl
ja
ja
adc
sar
(bad)
cs
clc
sub
movs
sbb
pop
mov
or
jbe
jae
(bad)
inc
loope
div
mov
or
out
dec
mov
es
fsubrp
loop
ret
(bad)
sbb
xchg
and
call
mov
pop
test
ss
mov
(bad)
cmp
hlt
imul
mov
pushf
add
stc
inc
push
mov
mov
jmp
outs
push
(bad)
jp
icebp
outs
loop
or
pop
inc
mov
outs
push
adc
mov
inc
fbld
shr
cdq
cmp
mov
adc
adc
ret
add
rcl
nop
imul
leave
vcvttps2dq
jmp
fwait
pop
scas
inc
jmp
mov
push
or
aaa
cmp
cmps
adc
mov
cmp
scas
daa
(bad)
dec
or
push
xor
add
mov
sub
mov
dec
xchg
cld
inc
jmp
lods
outs
or
xchg
inc
test
into
loope
jge
inc
bound
or
inc
test
adc
mov
(bad)
fsub
push
mov
test
dec
sbb
push
in
push
sub
(bad)
jg
sbb
movs
out
or
xchg
imul
xchg
cs
jae
inc
out
cdq
es
icebp
dec
fsub
mov
xchg
jbe
leave
dec
or
and
jns
in
ds
adc
pop
(bad)
xchg
inc
aam
mov
or
(bad)
pop
outs
out
fdiv
cmps
ret
mov
rcl
outs
jo
mov
nop
out
fbstp
pop
and
dec
imul
mov
test
mov
push
(bad)
out
dec
lea
shl
gs
cmp
lahf
fiadd
lods
mov
mov
sahf
fild
sub
pop
ror
jne
outs
shl
mov
and
push
out
in
hlt
xchg
fwait
icebp
dec
stos
ss
sti
enter
inc
jmp
mov
adc
out
call
(bad)
clc
pop
shl
inc
lea
push
arpl
inc
cmp
adc
test
repz
pusha
inc
add
or
or
xor
jp
mov
xchg
inc
jns
inc
jmp
push
call
mov
popa
fs
dec
xchg
imul
and
pusha
mov
dec
pop
dec
sub
div
(bad)
not
gs
call
shr
mov
sbb
sbb
xor
outs
sbb
inc
mov
sbb
push
and
test
pusha
mov
pop
xchg
in
pop
mov
imul
out
aam
ins
retf
lock
(bad)
push
cmp
sbb
mov
fwait
lock
gs
scas
scas
dec
push
scas
hlt
jo
daa
outs
pop
add
daa
dec
inc
add
push
mov
adc
fbstp
push
cs
std
dec
push
add
fsincos
sbb
loope
out
ins
out
inc
outs
adc
clc
adc
dec
push
xchg
in
cmp
or
movs
stc
mov
push
pop
setl
add
aaa
mov
xchg
movs
fucomp
(bad)
loop
sub
stos
pop
pop
movs
sub
xor
cld
dec
inc
push
or
push
hlt
mov
cmc
movs
popa
mov
cdq
fwait
push
pop
xchg
mov
outs
adc
mov
add
cmc
(bad)
addr16
fwait
inc
iret
in
pop
popa
cmovge
fstp
mov
clc
xchg
jnp
push
int
mov
push
xchg
retf
xor
shl
add
lds
mov
mov
adc
jmp
sub
sti
jno
data16
pop
and
fsubrp
aas
cmp
jmp
sbb
not
ss
xor
cdq
jbe
je
or
sub
jmp
jbe
aaa
shl
pop
pushf
jnp
repz
cmp
cmc
mov
adc
mov
scas
mov
enter
push
push
inc
xor
and
mov
push
test
sbb
push
outs
rcl
(bad)
div
or
dec
(bad)
retf
push
dec
ss
in
add
mov
xchg
jno
mov
out
mul
and
in
xlat
mov
lds
mov
(bad)
into
fwait
lahf
dec
out
je
and
mov
scas
fs
mov
test
sub
rcl
cmp
and
mov
test
jbe
xor
stos
scas
xchg
loope
adc
add
retf
xchg
fs
push
pop
sbb
jo
cld
jp
jecxz
sbb
ss
aam
sbb
jae
inc
and
jo
(bad)
ins
idiv
or
jp
adc
sbb
jmp
adc
aas
pop
mov
xchg
or
repnz
mov
adc
in
pop
(bad)
push
pop
sub
movs
dec
jle
fsub
push
xchg
(bad)
out
and
mov
fnsave
pushf
inc
fmul
jo
dec
loopne
bound
inc
and
and
push
sti
out
lods
push
mov
call
push
xor
or
sbb
jle
mov
cmp
pop
fucomip
inc
ja
retf
pop
cwde
jns
int3
lds
pusha
nop
ja
xor
adc
pop
std
into
repnz
jmp
aas
addr16
pop
push
cmp
mov
mov
(bad)
stc
cwde
sub
gs
xor
jmp
mov
sub
adc
in
int
xchg
add
cdq
js
cmp
jle
pushf
mov
in
mov
cmps
inc
(bad)
je
or
adc
cmp
clc
dec
inc
fild
jmp
mov
es
idiv
sbb
xchg
call
sub
lods
repz
shr
dec
jle
inc
pop
(bad)
stos
xor
cli
mov
pop
mov
xchg
pop
cs
dec
loopne
or
popa
aas
xchg
xchg
(bad)
stc
test
jae
(bad)
div
mov
pop
mov
ss
adc
sbb
lock
mov
mul
sbb
sub
mov
rcl
fist
xor
shl
mov
cmps
add
or
arpl
add
pop
cmps
es
test
(bad)
jge
in
xchg
xchg
sub
mov
lds
test
mov
jmp
fcomp
jno
xchg
test
rcl
retf
test
in
inc
int
out
and
or
push
je
jg
add
pop
sbb
out
es
pcmpeqd
lock
in
jnp
jg
push
sbb
nop
enter
pusha
stc
call
icebp
jbe
and
pcmpeqw
or
mov
test
sahf
xchg
lods
clc
cmc
pop
mov
iret
xchg
jne
xor
cwde
jecxz
arpl
ds
adc
inc
addr16
ds
ret
mov
test
nop
mov
fdiv
ins
hlt
mov
and
pop
retf
jno
or
ror
or
mov
dec
add
jnp
enter
(bad)
sub
aam
movs
mov
mov
daa
pop
ins
icebp
mov
xor
jbe
cmps
pop
add
pop
adc
pusha
inc
push
jnp
(bad)
shl
sub
sub
pop
stos
dec
add
lods
lods
ret
ins
in
and
jne
push
out
pop
(bad)
repz
xchg
cmp
mov
or
dec
mov
cs
push
and
in
adc
mov
push
call
and
aad
in
fcom
pop
pop
sbb
stos
fnstsw
sub
adc
add
add
fldenv
sbb
icebp
mov
add
cmc
test
pop
cmp
add
daa
out
dec
cmp
adc
aas
out
mov
clc
sub
fwait
pop
scas
lods
cmp
mov
test
add
mov
scas
adc
sbb
and
(bad)
and
addr16
xor
out
push
pop
sbb
out
or
stos
sbb
(bad)
mov
xor
cmps
fisub
dec
adc
and
push
jbe
ins
imul
pop
dec
and
retf
sub
dec
cdq
push
xchg
adc
push
fbld
or
pop
repz
and
lods
xor
xchg
and
xchg
mov
cwde
cld
popf
lds
add
push
in
push
add
mov
scas
or
mov
inc
ja
sbb
loope
inc
mov
push
fnstsw
lock
cmc
or
or
neg
iret
push
popa
sub
jmp
repnz
and
popf
mov
cmps
ror
and
pop
movs
(bad)
lods
mov
xlat
mov
les
std
stc
clc
popf
jno
cmps
inc
pop
bound
lods
xor
es
addr16
les
jl
dec
lock
mov
fild
je
jg
inc
and
fs
push
or
and
pop
mov
imul
aas
inc
push
dec
mov
rol
jecxz
mov
in
or
xor
pop
(bad)
sti
scas
in
loop
mov
pop
and
mov
mov
xchg
mov
mov
dec
icebp
aas
dec
sub
scas
xor
mov
sub
int
cmp
mov
and
or
jno
out
mov
and
push
movs
cmp
out
xchg
rcl
jle
pusha
pop
mov
or
sub
sub
cld
or
enter
cmps
and
or
push
xlat
mov
(bad)
sbb
sbb
ret
jb
xlat
sbb
test
out
push
jbe
(bad)
cmps
push
lds
sti
jmp
icebp
iret
xchg
sub
leave
std
mov
pushf
scas
xlat
sbb
loopne
pop
cmp
mov
dec
jle
sub
daa
dec
arpl
in
and
bnd
cmp
mov
rol
test
jp
xchg
sub
ja
popf
xor
jle
sub
inc
xlat
addr16
lahf
jno
sbb
push
aam
push
mov
push
sar
(bad)
lock
push
mov
inc
mov
icebp
push
or
outs
(bad)
mov
cmp
sbb
dec
stos
shl
inc
sbb
mov
enter
pop
test
jne
jl
cmp
adc
pop
xchg
xor
pop
fmul
rcl
dec
fwait
cmps
and
inc
ret
nop
stos
and
call
and
sub
fwait
loop
sbb
sar
sar
js
cmp
mov
jne
mov
jne
arpl
pushf
ret
add
pushf
mov
int3
mov
icebp
adc
shr
int3
pop
bswap
jae
(bad)
or
into
(bad)
cmp
dec
sub
mov
outs
xor
cmps
fwait
jmp
pop
jp
jle
dec
mov
mov
out
popa
loopne
push
and
jbe
popf
inc
ins
push
aas
movs
in
jmp
pop
and
jmp
push
movs
les
bound
mov
dec
dec
mov
cmp
push
add
jae
ins
inc
lds
into
sbb
jmp
push
adc
js
jge
or
std
aaa
xchg
repnz
ret
aam
jae
xchg
cli
inc
imul
gs
sub
lods
ret
and
cmp
es
jns
leave
mov
shl
inc
push
mov
or
cld
xor
mov
mov
outs
push
mov
cmp
loop
pop
in
xor
and
fdivr
inc
jmp
cli
push
out
ret
adc
sub
in
inc
loope
or
cwde
pop
push
add
xchg
dec
shl
sub
xor
popf
iret
xchg
fwait
jle
mov
(bad)
ret
push
pusha
das
mov
push
cmps
enter
mov
cvtps2pd
adc
repnz
(bad)
aaa
es
das
fst
push
ss
jmp
scas
in
ret
sbb
movs
ret
mov
mov
xchg
mov
clc
mov
mov
rcr
pop
xchg
div
cmp
pop
sbb
cmps
or
xchg
loope
mov
fucomip
(bad)
cmp
out
aas
cmp
rcl
dec
sbb
js
fcomp
cld
arpl
push
sub
inc
push
mov
mov
sar
sub
test
imul
test
dec
iret
adc
mov
test
(bad)
in
les
adc
dec
mov
adc
inc
adc
or
sbb
sbb
es
dec
pop
fsubr
sub
pop
sub
sub
and
pop
out
xor
sub
ret
inc
sbb
and
mov
add
push
add
add
ins
pop
std
scas
sbb
and
call
ja
es
or
call
je
push
(bad)
sti
mov
cmp
xchg
jmp
repnz
jne
cmp
shr
cmc
or
jns
mov
iret
call
je
gs
cmp
imul
mov
xchg
adc
js
sbb
ret
ins
xlat
call
mov
ret
and
jmp
xchg
fst
dec
mov
repz
mov
fldcw
rcr
sar
cmp
int3
cmp
or
jl
pop
xchg
nop
call
adc
loop
jp
scas
cmp
bound
inc
cs
jp
test
add
test
or
and
or
dec
es
movs
outs
jp
and
cmp
out
mov
mov
xor
push
popa
or
adc
js
or
test
movs
or
popa
dec
ffreep
xchg
and
cwde
sbb
sub
nop
test
scas
in
jnp
add
dec
mov
stos
imul
xchg
mov
stos
inc
and
jp
add
push
fnstenv
mov
jg
xchg
xchg
xchg
sub
mov
jnp
and
fisubr
fs
adc
jmp
repz
(bad)
sub
rol
in
fiadd
ds
sub
jo
mov
jb
fstp
cs
rcr
mov
sti
int3
adc
mov
push
dec
ror
and
mov
test
inc
push
or
out
sub
fiadd
fs
frstor
mov
aas
adc
mov
xchg
sbb
xchg
cmp
popf
(bad)
xor
dec
push
push
scas
push
xchg
push
pop
(bad)
xchg
scas
aam
pop
xor
dec
pop
daa
mov
dec
pushf
test
xor
mov
sub
adc
sbb
scas
pop
(bad)
push
mov
mov
mov
jnp
aam
dec
imul
xchg
pop
aad
mov
sbb
repnz
or
lock
out
mov
loopne
sar
push
(bad)
push
icebp
daa
es
gs
add
lock
cmp
sub
hlt
push
sub
out
mov
inc
mov
jp
pop
pop
cmp
aaa
add
jnp
stc
cmc
clc
sub
ret
or
cmps
leave
ds
mov
dec
jmp
ret
stos
out
fcomp
pop
inc
cmp
xor
das
sbb
enter
push
jmp
push
and
popf
pop
enter
jmp
inc
cld
(bad)
daa
adc
(bad)
iret
repnz
test
add
icebp
cs
stos
sub
aad
sbb
popf
std
or
clc
fcom
jmp
sahf
and
push
fstp
stos
sbb
pop
jmp
dec
mov
mov
jo
(bad)
movs
push
and
mov
icebp
pop
pop
je
ds
ret
add
cmp
mov
adc
push
dec
pop
jl
ins
xor
cmc
inc
cmps
jno
inc
mov
fcmovne
mov
cs
imul
mov
push
pop
jbe
mov
and
cmp
push
add
std
stc
add
imul
inc
sbb
mov
int3
test
push
movs
inc
jg
fmulp
sahf
std
rol
mov
test
cmp
pop
push
xor
add
stos
(bad)
gs
cld
ror
ss
push
movs
cmp
and
pop
inc
pop
push
ficom
inc
aam
into
dec
pop
fisttp
ret
cmp
pop
test
test
jmp
push
jae
xchg
mov
sar
outs
and
cwde
xchg
xor
or
push
fld
cmc
(bad)
cmp
pop
je
or
lock
mov
adc
lahf
test
push
dec
(bad)
shl
push
test
fisubr
inc
daa
pop
lods
iret
xlat
fwait
sbb
dec
aam
inc
sar
dec
or
jge
hlt
push
inc
adc
jle
scas
les
xor
mov
ficomp
retf
mov
cld
mov
push
mov
arpl
sbb
xchg
js
scas
dec
mov
in
pop
jcxz
stos
test
hlt
gs
dec
cmp
adc
pop
jle
imul
jle
sahf
imul
ss
fst
push
jg
popf
cli
pusha
lahf
push
or
ror
clc
mov
push
enter
pop
sbb
cmp
lods
jg
daa
jb
jae
dec
push
mov
call
in
sub
and
fldenv
xor
(bad)
jno
bound
xchg
mov
or
cmc
(bad)
in
ret
icebp
add
pop
xor
aam
xchg
repz
push
mov
jecxz
sub
jg
adc
not
jnp
inc
dec
stos
mov
xor
scas
inc
pop
int3
and
scas
popa
in
in
sub
xchg
pop
jnp
call
addr16
jecxz
xchg
test
pop
jmp
sub
xchg
repnz
(bad)
mov
in
rol
aas
pop
jmp
bound
mov
movs
sbb
dec
fistp
cmp
inc
mov
out
adc
js
pushf
push
div
dec
sti
stos
jb
jmp
and
mov
jbe
mov
jno
adc
mov
and
into
fiadd
xor
mov
xchg
pavgw
sbb
out
addr16
ds
pushf
cmp
pop
test
xor
cmps
add
or
pop
int
xchg
sbb
push
arpl
or
sbb
cmp
ins
inc
jp
pushf
mov
mul
call
daa
loopne
inc
out
test
xchg
fistp
mov
test
ret
push
popa
outs
jae
adc
sbb
ins
xor
or
sub
xchg
cmp
ja
in
mov
pop
js
ret
sti
cmps
or
cmp
pop
jl
cmp
rcr
outs
ins
out
nop
sbb
push
xor
xchg
mov
gs
push
mov
mov
test
icebp
mov
pop
pop
(bad)
fbld
call
shl
push
fbstp
or
out
lahf
in
sub
mov
adc
cmc
xchg
(bad)
xchg
fwait
mov
test
test
and
rol
jg
gs
lahf
fbld
test
or
js
push
aam
(bad)
aaa
sbb
sti
shl
push
jge
inc
jmp
xchg
cmovns
(bad)
cwde
inc
ja
push
jae
adc
inc
push
xchg
(bad)
mov
das
push
add
mov
sub
call
lods
clc
ret
jg
fcomp
jmp
sbb
lahf
aad
pop
push
ss
sti
pop
pop
outs
sub
rcl
mov
add
mov
retf
mov
pop
push
jmp
out
add
popf
and
ret
add
cli
jge
pop
push
mov
add
mov
je
jns
mov
jp
xor
jae
add
nop
xchg
lea
lahf
das
mov
inc
and
loope
std
pop
jb
mov
or
add
inc
fdivr
out
inc
ss
addr16
jp
dec
and
das
gs
sub
(bad)
repz
pop
sub
sbb
and
jle
lock
or
inc
sbb
sahf
mov
popa
pop
fldcw
out
idiv
mov
out
sbb
cmps
mov
(bad)
retf
push
mov
into
sub
clc
ins
push
mov
adc
ret
js
mov
mov
or
mov
(bad)
ja
add
iret
cwde
sbb
scas
sbb
mov
xor
add
rdtsc
jmp
mov
adc
sbb
ins
xchg
xlat
cmp
sbb
sahf
dec
test
mov
jo
xor
push
dec
mov
mov
mov
sub
mov
sub
iret
inc
inc
xor
(bad)
fisub
cmp
cmp
and
or
hlt
mov
mov
jg
push
call
cs
icebp
cmps
ror
outs
iret
mov
mov
inc
les
cmp
cmp
repz
out
cwde
ins
cmp
outs
mov
inc
lea
push
xchg
pop
mov
dec
cmc
xchg
push
and
das
push
mov
(bad)
dec
mov
cmps
xor
push
in
popa
lahf
adc
das
lods
jg
cmp
jge
jecxz
out
push
jg
inc
sti
sbb
loop
(bad)
dec
sahf
mov
cs
add
retf
hlt
inc
jbe
or
jp
aaa
sub
pop
dec
inc
mov
pop
cmp
retf
sbb
test
add
jge
and
add
adc
in
mov
dec
pop
xchg
clc
cmp
jg
std
pop
aad
arpl
loope
(bad)
ss
pop
xchg
fisubr
pop
push
inc
out
dec
jle
mov
pop
push
and
sti
fst
jmp
jbe
mov
retf
popf
call
jbe
mov
and
add
int3
mov
test
das
mov
jge
push
std
mul
aaa
or
jp
jmp
into
arpl
pop
stos
mov
jo
imul
bound
aas
nop
cmp
mov
mov
rol
mov
and
add
inc
or
xor
xchg
adc
imul
in
je
sub
mov
movs
mov
lods
(bad)
sbb
dec
add
jg
cmp
fild
add
mov
adc
pop
fdivr
ins
mov
dec
out
outs
xchg
mov
push
popa
ins
movs
pop
or
push
push
test
in
aam
es
scas
inc
lods
cmp
or
sti
cmc
aad
pop
xor
(bad)
cs
(bad)
cld
jecxz
in
icebp
mov
fstp
imul
or
inc
fcom
inc
inc
cmp
xchg
ret
add
call
sub
das
mov
(bad)
sbb
mov
push
aam
mov
fistp
push
std
sub
dec
jbe
xchg
mov
rcl
outs
fs
push
and
mov
lods
ror
(bad)
pop
dec
nop
cwde
scas
adc
push
repz
sub
fisttp
ror
push
mov
in
sub
inc
adc
mov
xor
ja
xchg
enter
popa
cdq
adc
mov
sahf
push
dec
inc
loopne
mov
ficomp
mov
into
push
sti
stos
(bad)
(bad)
and
mov
adc
mov
(bad)
out
jmp
sbb
popa
jns
pop
test
cmc
cdq
cmps
sahf
aam
(bad)
push
je
cld
or
out
and
sti
cmp
xchg
daa
call
xor
pop
imul
es
ins
ret
fstp
cdq
repz
cmp
popa
push
pop
sar
or
pop
iret
lock
mov
leave
jno
or
jnp
cmp
mov
fxch
mov
test
mov
mov
int3
jae
and
popa
cs
bound
pop
mov
fld
sar
mov
lods
inc
inc
iret
mov
mov
out
adc
adc
sbb
test
mov
int3
jnp
arpl
push
sbb
mov
pop
cmp
cmp
mov
or
ror
sbb
sub
ror
out
jae
and
ret
out
jne
sbb
sub
pusha
in
mov
jbe
xchg
mov
jbe
imul
gs
das
mov
jmp
mov
and
rcr
ffreep
pop
xchg
sbb
jmp
fldenv
fs
cwde
pop
adc
push
mov
add
movs
mov
ret
mov
add
(bad)
sbb
out
push
mov
addr16
or
sbb
fidivr
pop
test
loopne
jge
jnp
xor
cmp
arpl
cs
das
iret
adc
sbb
xor
mov
push
(bad)
(bad)
mov
aad
mov
cmps
in
sbb
sub
ja
lods
xchg
fist
cmp
add
mov
sub
ret
data16
scas
sbb
hlt
test
retf
xchg
cmp
push
sbb
dec
retf
inc
mov
adc
jle
jno
and
jg
add
sbb
cmps
xchg
jbe
mul
or
sbb
test
in
add
mov
adc
test
aam
loop
(bad)
aas
ret
jnp
into
sti
ret
xor
(bad)
iret
cmc
xchg
add
sahf
mov
enterw
call
and
mov
cmps
not
sbb
fisub
add
jl
ins
sub
daa
cwde
ret
jb
js
imul
je
cwde
and
lahf
cmp
cdq
cld
inc
xchg
or
imul
jns
cli
in
cmp
and
or
inc
out
inc
jb
push
imul
dec
push
cmp
loop
movs
pop
(bad)
das
pop
test
sbb
fs
sub
cld
pop
retf
sbb
stos
push
dec
out
std
call
imul
mov
(bad)
mov
lea
pushf
jmp
sub
loop
add
and
sub
mov
cmps
btr
adc
sahf
cmp
cmps
xlat
or
mov
sub
(bad)
bsr
into
mov
mov
cmps
and
pop
fist
iret
jmp
icebp
jle
cld
popf
loopne
inc
test
fsubr
jae
jmp
in
(bad)
lods
mov
out
and
mov
cli
push
ins
push
daa
(bad)
inc
popf
aaa
out
rol
clc
and
sub
push
and
jp
cmps
int3
aas
mov
cmp
sbb
sbb
inc
jmp
cdq
scas
adc
stos
ja
xor
(bad)
repz
pop
(bad)
stos
out
cmp
and
aad
sbb
pop
pop
fadd
enter
cld
fbstp
or
mov
push
add
and
add
out
xor
push
in
das
mov
or
dec
fnstenv
ins
or
arpl
cdq
ss
or
mov
cdq
push
push
lock
push
cmps
fwait
popa
loope
jge
and
outs
push
push
push
retf
jae
jbe
fs
mov
pop
mov
les
add
outs
dec
cmp
or
mov
sbb
idiv
dec
pop
test
add
pop
test
mov
inc
inc
dec
sar
shr
mov
iret
out
mov
xor
call
ror
je
jmp
and
jecxz
je
cmp
add
fidiv
inc
js
mov
out
ins
retf
or
mov
sbb
mov
jl
cmc
xor
xchg
in
sub
cld
pop
int3
xchg
xchg
xchg
and
das
pop
xchg
shl
push
push
out
xor
mov
and
xchg
sar
jns
and
mov
mov
scas
repz
jns
sub
retf
mov
aas
pusha
mov
adc
push
mov
jle
sbb
pusha
shl
jnp
mov
xchg
dec
push
jle
bound
(bad)
aad
cwde
in
and
and
retf
pop
pop
or
pusha
push
mov
mov
in
adc
test
(bad)
inc
js
xor
dec
push
nop
xor
inc
(bad)
add
fwait
retf
int3
ficomp
mov
jae
pop
jg
mov
jge
mov
pop
fwait
cmp
arpl
ss
xchg
jo
arpl
jmp
jnp
test
mov
enter
sbb
jp
pop
(bad)
mov
fcmovnbe
bound
sbb
rol
sub
call
(bad)
pop
push
in
call
iret
imul
pop
mov
popw
loope
test
stos
sar
push
hlt
mov
fiadd
push
sti
jmp
push
adc
adc
cmp
xor
add
arpl
lods
xor
cmps
cmp
stos
(bad)
add
inc
mov
xchg
(bad)
loope
(bad)
dec
jmp
pop
(bad)
nop
test
jno
pop
mov
cmp
mov
stos
mov
pop
and
outs
adc
add
stos
push
push
dec
(bad)
addr16
mov
movs
mov
add
inc
pop
jmp
inc
cli
push
cmp
lock
shr
mov
pushf
(bad)
pop
pop
mov
mov
mov
push
or
dec
movs
mov
test
dec
xor
stc
out
outs
fld
sbb
mov
mov
icebp
cmp
push
lods
mov
cs
sub
leave
push
iret
cmps
or
int3
cmp
or
jno
mov
int3
fcomp
dec
jl
retf
inc
xchg
ret
mov
xchg
add
jge
mov
retf
stos
sbb
jne
nop
imul
xchg
inc
pop
push
in
push
mov
nop
fwait
and
xor
lods
ja
adc
xlat
adc
shl
loopne
push
icebp
retf
popf
and
and
dec
nop
in
pop
inc
fwait
xor
add
sub
adc
cmc
dec
cmp
pop
jns
adc
jno
inc
inc
out
xor
pop
ret
xor
sub
cmp
clc
and
xchg
sbb
jo
mov
ficomp
dec
sbb
mov
and
and
dec
xor
(bad)
pop
xchg
add
mov
xchg
mov
je
(bad)
sbb
pop
jle
mov
xchg
(bad)
(bad)
pop
jmp
cmp
pop
jl
cmp
xchg
fld
out
xchg
xchg
dec
bound
xchg
adc
mov
jns
xchg
dec
ficom
pop
lds
lahf
(bad)
xor
movs
pop
sbb
inc
mov
retf
popa
icebp
push
ret
fs
xchg
xor
dec
mov
jmp
mov
push
data16
mov
ja
int3
or
dec
shl
ret
cdq
xchg
ret
inc
aad
adc
mov
mov
mov
popa
and
adc
(bad)
movs
data16
adc
mov
cmp
add
loope
cmp
sbb
xor
xchg
jg
int
dec
fimul
pop
pmulhuw
popa
test
cmp
mov
fdivr
int3
retf
mov
fist
mov
enter
outs
enter
rcl
in
cmp
dec
mov
test
call
sbb
call
sub
push
cwde
repnz
mov
jle
inc
sub
std
adc
push
jle
enter
xor
push
std
sub
mov
popf
mov
ds
adc
inc
scas
gs
add
cwde
add
std
add
mov
push
js
outs
add
jle
fmul
xor
bound
repnz
scas
int
xchg
div
sbb
stc
(bad)
xchg
stos
xor
and
loopne
xor
shr
cmp
daa
stc
cwde
repz
repnz
cmp
movs
xchg
leave
inc
lods
das
in
mov
ficomp
out
sahf
mul
adc
cmc
mov
jge
fimul
push
inc
push
mov
repnz
std
inc
mov
fld
mov
shl
inc
sub
cmc
sub
shl
sub
xchg
test
xchg
(bad)
mov
retf
cmp
shr
nop
adc
push
hlt
pop
fsub
lahf
scas
mov
in
adc
cmp
xor
mov
retf
jnp
pop
stos
repnz
retf
shl
xor
std
ins
(bad)
pusha
and
pop
sub
mov
push
ds
test
aas
mov
(bad)
and
dec
in
jmp
icebp
jns
ret
or
ret
add
cmp
mov
aam
cmp
out
mov
jns
stc
jge
addr16
inc
daa
add
inc
nop
push
xchg
xor
push
lock
pop
cmp
and
sub
adc
lods
aam
adc
leave
jo
and
in
lods
addr16
les
push
adc
sub
neg
sti
sub
pop
cmp
inc
xchg
test
xor
cmp
clc
adc
mov
xchg
scas
pop
adc
test
pushf
jmp
sub
jge
dec
inc
jl
mov
dec
sub
sbb
lock
enter
repz
xchg
and
arpl
xchg
pop
push
cmp
lods
mov
pop
shl
arpl
mov
mov
bound
jecxz
sti
repz
cmps
daa
add
aam
std
adc
cmps
fstp
es
dec
(bad)
ror
push
push
sub
fdivr
mov
pop
push
add
lods
add
mul
cmps
xchg
loope
xor
cmps
data16
clc
mov
inc
cmp
cs
outs
add
or
int3
ins
push
cmp
xor
call
mov
(bad)
pop
iret
sub
jle
pop
out
and
ret
sar
shl
sub
popf
shl
loopne
test
jge
jmp
jg
or
stc
repz
xcrypt-ctr
cmps
fisub
dec
and
mov
xor
pop
ja
xchg
and
mov
mov
inc
jnp
push
ret
push
cwde
mov
outs
mov
fild
sbb
jo
out
mov
dec
adc
pop
fidivr
jae
dec
dec
jecxz
idiv
push
shr
dec
ficomp
aaa
aad
arpl
mov
cs
cmp
dec
push
retf
push
movs
cmp
movs
ss
pusha
iret
ss
ins
leave
popa
ret
outs
imul
adc
push
mov
es
out
xor
xor
mov
push
mov
mov
xor
shl
lods
les
stos
(bad)
jnp
loope
cmp
js
jge
in
cmp
movs
jg
and
and
hlt
dec
leave
arpl
xchg
sub
mov
in
fs
mov
jmp
add
dec
imul
scas
inc
xchg
or
jae
pusha
data16
and
sub
sbb
gs
jns
ret
xchg
push
dec
push
push
enter
std
cmps
movs
pop
jae
mov
push
cmp
jbe
fidiv
dec
cmps
aaa
add
scas
mov
retf
lds
dec
or
js
pop
xor
jb
lods
push
xor
adc
cmp
sbb
sahf
push
mov
mov
les
cdq
mov
push
push
mov
iret
ins
mov
sub
mov
mov
lds
mov
pop
jns
push
repnz
popf
jbe
gs
and
mov
test
retf
cwde
sub
and
add
mov
mov
sub
inc
xchg
dec
cmps
xchg
push
jp
imul
push
xor
jbe
repnz
add
sahf
and
in
push
ss
or
pop
inc
xor
cmc
scas
xchg
aaa
or
sbb
je
in
pop
(bad)
and
mov
adc
adc
mov
push
in
adc
in
dec
test
push
aad
add
ins
fisttp
fidiv
mov
pop
pop
mov
cmp
mov
jo
sub
xchg
lods
aad
test
add
cmc
movs
shr
sub
mov
jecxz
std
cld
mov
test
mov
or
add
xor
addr16
add
nop
sbb
xor
repnz
push
data16
in
mov
sbb
cmp
jmp
push
xchg
inc
jnp
(bad)
or
mov
fistp
in
int3
mov
xor
or
int3
push
sub
addr16
pop
retf
and
imul
mov
jo
jbe
stos
add
fld
in
scas
aam
mov
push
dec
mov
cmp
lahf
aaa
ins
mov
lock
sbb
mov
pop
xchg
cmp
pop
push
mov
and
cmp
xor
mov
inc
addr16
mov
or
xchg
arpl
xor
outs
(bad)
mov
and
push
fstp
jno
(bad)
pop
ret
inc
js
mov
push
ds
pop
mov
jmp
mov
int3
iret
jb
dec
test
stc
js
mov
pop
test
fisttp
mov
xlat
pop
xor
jge
mov
mul
cld
jl
xchg
les
jge
cs
jae
jge
ins
sti
jo
out
xchg
mov
xor
rol
repnz
rcl
test
repz
call
cld
push
lahf
dec
stc
push
mov
nop
push
adc
jae
inc
test
push
push
mov
daa
jmp
pop
in
sub
dec
gs
fwait
lods
cs
pop
mov
imul
aam
jle
add
mov
fnstsw
out
push
jmp
add
psrad
push
sbb
jmp
cs
mov
dec
ror
ja
repnz
fbld
das
dec
xchg
adc
jae
ins
mov
sub
xor
xchg
cmp
dec
mov
jnp
cmp
jo
adc
sahf
add
xor
sub
ret
push
pop
adc
aas
add
(bad)
arpl
fstp
cmp
inc
push
jl
(bad)
in
dec
out
stos
daa
xor
nop
mov
add
push
sub
mov
(bad)
xor
popa
push
jmp
call
mov
fs
adc
mov
frstor
mov
sub
test
xchg
sub
jno
fs
mov
ds
sub
jne
adc
add
or
aam
jge
sub
ins
aaa
cmp
jmp
inc
cld
adc
out
icebp
inc
pusha
jb
dec
fldcw
xchg
push
fdiv
inc
xor
sbb
inc
outs
cmc
jmp
adc
aad
ins
jno
pop
movs
pop
ret
sub
mov
mov
pop
or
dec
test
push
ds
pushf
fst
lock
imul
cmps
mov
ficomp
or
test
jno
xchg
and
pushf
dec
retf
(bad)
jmp
in
stos
fwait
jmp
inc
sub
cmp
inc
ins
jns
inc
mov
pop
mov
pop
pop
arpl
popa
popa
mov
add
out
outs
loop
sbb
and
mov
sbb
(bad)
ret
stc
popf
lods
cmps
(bad)
enter
(bad)
sbb
and
icebp
mov
(bad)
mov
clc
or
aaa
cli
mov
in
fsub
push
add
sbb
mov
rol
add
iret
ss
inc
call
aad
inc
sub
mov
out
fchs
xchg
je
fs
cmp
or
daa
shl
push
stos
mov
lods
shr
jno
sub
inc
push
dec
jae
cld
add
ins
pop
adc
(bad)
aad
sbb
in
sub
scas
add
mov
or
out
scas
adc
push
mov
xor
cmps
scas
popf
in
(bad)
pop
pop
cmp
cmp
dec
add
int3
leave
retf
xor
adc
data16
aad
cmp
pop
sahf
push
mov
scas
sub
jno
out
pop
in
or
test
pushf
dec
lea
fimul
mov
dec
push
mov
sbb
in
mov
imul
mov
jmp
imul
xor
mov
cmp
scas
xchg
adc
outs
ret
add
and
stos
pop
mov
jno
push
int3
inc
xchg
sub
cmps
xchg
mov
push
int3
fwait
in
jbe
jle
ret
cmp
push
inc
lahf
jge
lds
fst
inc
push
loop
mov
inc
stc
push
in
sbb
lds
dec
jne
mov
add
add
mov
dec
mov
xchg
ret
in
(bad)
repnz
sti
(bad)
call
sti
iret
inc
mov
push
hlt
jnp
xor
(bad)
mov
das
cmps
jne
popa
inc
sub
cmc
les
jns
jmp
cwde
jmp
mov
sahf
and
rol
jae
add
push
test
aam
inc
xor
push
lahf
or
mov
dec
ret
pop
int3
jge
movs
fs
xor
xor
call
mov
movs
mov
cmp
(bad)
(bad)
fsubrp
cmp
adc
lds
sub
cs
sub
xlat
add
mov
inc
and
sbb
or
xor
pushf
cli
xor
jmp
sbb
ficom
fimul
rcr
retf
aas
bound
sub
out
push
loop
cmp
pop
jnp
pop
lahf
dec
xchg
xor
adc
lock
test
fsub
inc
out
adc
fldcw
test
pop
lahf
scas
xchg
adc
jge
sar
imul
mov
mov
add
push
xchg
imul
pusha
jecxz
pop
outs
cmp
rol
sub
mov
xchg
or
aas
ins
in
(bad)
or
mov
bound
xchg
ja
aas
pop
test
adc
or
or
push
jecxz
addr16
int3
ret
and
jmp
rol
or
arpl
(bad)
out
loopne
xor
js
mov
cdq
add
inc
js
inc
jno
mov
dec
xor
pop
inc
fcom
dec
popf
out
xor
xchg
cwde
cdq
or
mov
out
sbb
mov
mov
ja
enter
adc
fcomp
out
movs
sub
fwait
mov
pop
cmc
inc
xor
fucomip
jns
ret
mov
pop
addr16
lahf
lea
mov
inc
les
sti
push
sar
mov
ds
mov
add
ds
ficomp
mov
and
push
mov
cli
std
es
bound
jns
mov
js
test
xor
test
call
movs
ret
push
nop
icebp
and
push
shl
fnsave
mov
ja
cmc
push
retf
inc
pusha
frstor
sahf
mov
jne
jp
mov
aad
dec
cdq
call
adc
xchg
xor
div
pop
adc
and
(bad)
icebp
pop
cmps
movs
pop
pop
fwait
xchg
leave
mov
jmp
out
fidivr
pop
sub
test
adc
(bad)
std
outs
mov
lods
jbe
sbb
getsec
mov
setbe
repz
jecxz
call
(bad)
in
add
imul
mov
das
fisub
outs
and
dec
test
rcr
pop
sbb
cmp
push
int3
dec
adc
mov
inc
in
movs
cmp
mov
(bad)
arpl
fyl2x
jns
jg
sub
jne
test
adc
sub
out
jns
inc
(bad)
or
sub
ror
shl
sub
push
cmp
mov
xor
push
xor
sar
sti
sahf
ret
lds
dec
jmp
xchg
call
xor
mov
fs
mov
add
hlt
(bad)
cmp
fdivr
cmps
icebp
add
ficomp
test
dec
enter
icebp
mov
inc
push
inc
jae
setne
movs
xchg
std
cmp
inc
mov
ds
dec
and
cmp
(bad)
fild
inc
(bad)
pop
enter
adc
mov
and
sub
mov
aaa
mov
cmc
fimul
dec
mov
push
dec
adc
or
push
cmp
mov
arpl
mov
xchg
sub
adc
(bad)
daa
out
mov
aas
das
lock
ds
sbb
add
mov
add
xor
daa
mov
in
call
dec
aas
push
mov
sbb
or
pop
or
fbld
scas
jge
call
mov
or
sub
pop
ror
nop
(bad)
jae
sbb
mov
lea
pop
jg
sbb
pop
outs
adc
sub
lods
push
xchg
add
call
push
mov
cld
jmp
sahf
retf
pop
popf
movs
hlt
ret
nop
aam
retf
cmp
das
inc
xchg
loope
in
mov
mov
mov
xlat
cld
shl
mov
fcom
fisttp
dec
add
xor
in
push
imul
add
test
cmp
adc
and
test
mov
push
aad
xor
sub
shl
popf
(bad)
bound
leave
retf
fidivr
pop
lahf
mov
and
fwait
dec
test
sbb
idiv
cwde
les
retf
push
jne
test
repnz
mov
pop
out
xor
mov
lds
js
sbb
call
daa
(bad)
push
xor
jbe
sub
loopne
jmp
out
dec
dec
jae
repz
test
shl
jbe
dec
mov
in
cwde
hlt
xlat
movs
sti
ins
int
xchg
clc
test
cld
or
call
inc
xchg
add
fadd
cs
xchg
mov
jge
es
aas
sub
pop
jmp
fisubr
int
or
ret
jmp
aaa
pop
in
sbb
hlt
inc
aam
stc
int
popf
out
pop
loop
retf
int3
jbe
popf
lds
mov
xchg
ret
test
and
aaa
daa
mov
jae
jl
jl
xor
mov
scas
outs
inc
push
mov
adc
(bad)
jns
mov
push
sub
mov
jno
out
xor
jne
aad
push
inc
data16
dec
inc
sub
es
sbb
jns
repnz
inc
or
loope
inc
ss
int3
push
shl
pop
test
push
test
lods
retf
mov
and
sti
es
lahf
xor
(bad)
push
sbb
pop
stos
xlat
sbb
jae
pop
lods
outs
mov
mov
popf
loope
inc
out
hlt
jmp
ret
xor
cmp
gs
mov
jne
mov
sub
icebp
and
pop
xchg
test
lahf
outs
mov
and
sbb
xor
fldenv
mov
dec
ret
cmp
pop
ins
stos
jge
into
in
nop
xor
inc
mov
mov
inc
add
arpl
daa
or
dec
adc
push
xchg
into
pop
push
sub
xchg
and
popf
faddp
rcl
sbb
mov
test
loope
cmp
daa
ja
mov
jno
pusha
aam
push
sbb
repnz
pop
or
sbb
cmp
cwde
lds
fwait
mov
pop
mov
sub
mov
xchg
fstp
pop
jmp
cmp
inc
sahf
pop
sbb
out
adc
mov
aas
enter
outs
popa
add
test
jecxz
or
call
xchg
fcomp
dec
and
mov
jmp
ret
pop
adc
sub
push
popf
cmp
ror
inc
loop
mov
imul
imul
push
je
retf
mov
stos
pop
mov
push
enter
js
aad
adc
(bad)
int
sar
cmp
clc
dec
push
jb
cli
mov
push
jl
aad
add
ins
pop
sti
xor
dec
jns
inc
xor
mov
pop
adc
fcmovnbe
adc
xor
mov
xchg
call
repz
shl
mov
pop
(bad)
mov
iret
add
xchg
cwde
test
or
int3
imul
inc
xchg
ficomp
fs
mov
(bad)
mov
gs
pop
pop
sbb
mov
pop
jne
test
loop
popf
imul
ss
jb
ja
adc
mov
scas
cwde
ja
icebp
cmc
jnp
mov
fstp
dec
push
cwde
ss
add
mov
xor
in
mov
pop
mov
aad
mov
jb
repnz
retf
repnz
pop
rol
add
xchg
fld
jnp
pop
mov
pop
dec
mov
add
cmps
sub
pushf
dec
mov
inc
xchg
xchg
cdq
data16
sbb
dec
(bad)
in
mov
sbb
xor
inc
out
repnz
add
enter
add
cmp
xchg
push
xor
jg
xor
loop
icebp
ins
and
retf
adc
or
fwait
repnz
pop
mov
xchg
data16
mov
and
dec
mov
sbb
ror
and
jo
xor
aas
ret
mov
(bad)
cmps
or
dec
dec
inc
das
cmp
mov
arpl
push
stos
in
xchg
lods
dec
and
aas
mov
cli
pushf
aam
cwde
nop
aas
and
sub
int3
repz
add
shr
sub
sbb
outs
jge
repz
mov
cmp
clc
jge
pop
jl
pop
mov
ins
pop
jge
mov
pop
jecxz
dec
inc
test
pop
xchg
or
leave
dec
sar
cmps
inc
inc
lea
and
adc
repz
fs
add
cmps
pop
outs
loope
repnz
mov
or
loopne
jno
xor
enter
imul
adc
jne
xchg
jl
cmp
inc
inc
xchg
mov
pop
xchg
ins
push
jbe
add
inc
mov
fld
rcl
daa
ja
ds
inc
jmp
dec
add
sub
pop
lock
loop
shl
ins
fcmovu
add
mov
ret
sub
call
lods
lahf
mov
add
outs
fcmovnbe
inc
push
cmp
call
mov
inc
mov
and
jne
mov
pop
jle
pop
pop
inc
mov
daa
rep
aas
mov
movs
shr
add
adc
jno
pop
mov
add
outs
outs
cmp
pop
mov
lock
daa
cmc
in
das
mov
push
into
gs
jo
or
sbb
pop
push
out
jmp
pop
(bad)
pop
push
push
mov
ins
dec
(bad)
push
das
sub
jle
and
cmc
pusha
push
repz
jecxz
lods
test
inc
je
icebp
or
inc
lods
sub
test
cld
stos
and
xlat
pop
call
(bad)
mov
scas
(bad)
fwait
js
movs
fwait
in
hlt
mov
daa
sar
jge
jmp
fs
push
xor
cmp
popa
loopne
or
arpl
in
shr
cli
pop
push
dec
ja
or
and
jmp
in
repz
in
mov
into
fistp
inc
mov
add
adc
lock
xor
xchg
in
mov
mov
xchg
jbe
xchg
mov
ret
in
jns
add
inc
xor
mov
pop
dec
push
mov
sbb
and
push
pop
sub
pop
mov
jo
inc
dec
adc
inc
cli
and
hlt
int3
mov
pop
movs
(bad)
or
or
dec
into
and
mov
cmp
ins
jp
std
dec
cmps
pop
in
adc
lea
outs
popa
cmp
test
dec
dec
pusha
sub
and
(bad)
dec
cld
adc
fwait
test
jmp
inc
jecxz
jp
js
push
dec
inc
ss
xchg
inc
stc
cdq
push
cmp
add
ret
and
mov
daa
retf
dec
les
and
cmp
cwde
push
inc
test
or
pusha
dec
bound
aaa
mov
aas
movs
inc
jmp
inc
in
cwde
lods
clc
cmp
lods
call
push
jae
jb
xor
(bad)
stc
dec
add
repz
sbb
push
adc
nop
fstp
stos
in
dec
sub
cmp
add
cdq
dec
leave
cmp
loopne
(bad)
hlt
je
mov
idiv
pop
aam
lfs
mov
mov
xchg
and
push
je
dec
aam
sahf
in
(bad)
retf
pop
adc
les
add
ss
loope
ja
call
rcr
jg
xchg
and
ret
xor
shr
jae
into
aas
jmp
jmp
adc
and
es
push
cld
mov
pop
xor
ins
mov
fcmovb
cmp
xor
cmp
sub
popf
fild
pop
js
enter
fisubr
addr16
mul
sbb
push
mov
inc
retf
jne
(bad)
pop
or
out
or
mov
xchg
ins
movs
ins
mov
retf
adc
mov
cmc
ins
ret
std
dec
idiv
add
push
popa
retf
pop
aam
loopne
push
add
cmp
mov
sbb
pop
adc
pop
jge
jmp
sub
adc
or
fistp
mov
cwde
jbe
pop
inc
(bad)
in
add
cmps
or
xchg
fcmovu
in
jne
fstp
ss
fst
loope
cmp
mov
pop
mov
xchg
(bad)
sti
mov
scas
mov
dec
lods
(bad)
xchg
or
mov
cmp
scas
or
xor
inc
cmps
mov
pop
mov
test
imul
stos
mov
and
xor
nop
mov
mov
retf
ret
pop
pushf
jne
mov
mov
mov
add
stos
loopne
pop
mov
lds
jo
mov
pop
inc
sti
inc
cmps
mov
adc
pop
(bad)
xor
fcmovb
pop
sub
jmp
push
pop
icebp
outs
out
test
mov
dec
pop
xor
popf
xchg
mov
adc
hlt
jg
popa
xchg
adc
sub
sbb
aad
scas
pop
dec
frstor
gs
iret
cmp
sbb
stos
(bad)
out
pop
jge
inc
cli
inc
push
xchg
dec
xor
out
inc
test
repnz
in
cmp
pop
mov
sub
jne
sbb
push
ret
ror
les
inc
out
out
ins
jne
hlt
jle
fidiv
ret
fsubr
scas
es
fisubr
mov
pusha
pop
ret
std
add
out
jo
xor
aaa
lods
ret
pop
mov
scas
push
xchg
bound
pusha
push
jmp
gs
lahf
pop
lds
ins
and
push
and
dec
lahf
xchg
std
cmp
clc
dec
mov
mov
jle
jge
push
out
pop
adc
jl
and
loopne
adc
dec
and
je
sbb
fst
fcmovbe
stos
fnstcw
pushf
adc
aaa
inc
(bad)
sbb
push
jne
test
rol
lods
dec
fisttp
xor
xchg
cwde
imul
mov
sub
pop
mov
aam
in
call
call
sbb
fs
xor
(bad)
inc
pop
sub
cdq
xor
daa
jle
cmc
pushf
push
das
xor
js
out
fbstp
arpl
pop
es
iret
cmps
mov
icebp
jl
stos
dec
xor
popa
loop
pop
jnp
add
fisttp
add
push
xlat
mov
jns
mov
aaa
je
mov
not
popa
clc
mov
push
stc
adc
dec
add
pop
ror
and
cmovp
shl
adc
jmp
and
push
add
pop
add
lods
pop
fs
xchg
outs
das
xchg
mov
ins
mov
xor
or
pop
or
je
push
and
jle
out
push
test
(bad)
xor
idiv
pusha
jne
add
pop
repz
leave
call
fnsave
icebp
rcr
imul
mov
or
fcomp
aam
jno
fstp
sub
and
gs
jne
aaa
pop
fcomip
das
pop
dec
adc
sar
jmp
imul
push
lods
das
jecxz
mov
dec
rcl
cmc
push
inc
push
pusha
mov
cmp
clc
daa
xchg
push
jmp
(bad)
mov
mov
pop
inc
icebp
test
(bad)
in
fmul
test
(bad)
push
jecxz
leave
or
repz
dec
out
gs
adc
push
jecxz
jecxz
retf
pop
jle
pushf
sbb
cmp
adc
aas
push
imul
jecxz
daa
(bad)
mov
fs
cmc
or
(bad)
rol
pop
sbb
ja
lock
imul
pop
mov
adc
jmp
cs
nop
inc
pop
add
cli
pop
psubb
data16
ins
lock
into
js
cli
cld
data16
fsubr
cli
sub
push
les
jmp
in
jge
and
inc
dec
cmp
cli
push
or
dec
enter
or
daa
jmp
sub
xor
fwait
xchg
mov
push
mov
das
int
add
mov
sbb
xor
push
pop
xor
outs
xlat
and
cmp
cmp
into
int
rol
mov
add
fwait
je
cmp
ds
jp
xlat
fsub
add
ins
lods
xor
(bad)
mov
mov
call
jmp
popa
cli
dec
xchg
push
jne
or
mov
sub
push
xchg
es
dec
inc
xchg
mov
frstor
mov
sbb
mov
adc
js
shl
jge
sbb
jl
cmp
sbb
repz
and
dec
stc
sti
ret
dec
xor
and
mov
sbb
in
clc
add
rcl
aad
sub
sbb
pop
pop
out
inc
xchg
shl
leave
into
push
cmps
lock
test
xlat
fldenv
dec
xor
push
shl
ret
cmp
cmps
mov
ss
mov
inc
xchg
jne
cld
push
out
pusha
push
cmp
add
sbb
or
jmp
add
jmp
icebp
sub
cs
icebp
popa
out
dec
mov
jmp
and
movs
iret
mov
jl
jnp
in
inc
shl
mov
add
lahf
adc
mov
push
mov
xchg
inc
push
test
jmp
add
jns
ror
sti
stos
inc
or
test
rcr
outs
sbb
or
inc
fnstsw
cs
sbb
repnz
adc
mov
or
clc
ss
xor
stos
in
test
pusha
ret
das
cmp
mov
cmps
es
std
loopne
test
dec
pop
or
inc
cmp
fstp
or
cmp
jg
fdiv
sub
movs
mov
inc
mov
pop
arpl
sbb
pop
(bad)
lea
outs
in
pop
cli
adc
xchg
test
retf
mov
mov
xor
xchg
jne
jl
test
sub
cli
clc
rcl
sbb
les
pop
xchg
(bad)
popf
test
xchg
push
cmp
cmp
and
jge
test
push
scas
mov
and
sub
call
fidivr
lahf
into
ins
xchg
ds
ret
and
sbb
pusha
scas
cmps
sbb
add
cmp
xchg
add
jae
sub
fst
clc
and
sub
loopne
lahf
leave
sub
xlat
pop
int
dec
xchg
popf
jne
jmp
lods
or
call
sahf
sbb
and
dec
cwde
mov
(bad)
mov
xchg
ins
aam
push
or
stc
js
(bad)
jns
les
(bad)
and
mov
push
int3
sub
ret
xor
push
add
jae
pushf
or
dec
popf
imul
xchg
enter
dec
int
jns
and
adc
mov
push
sub
aaa
int
int
cmp
cmp
add
sbb
imul
cmp
cld
je
repnz
fs
xor
lds
pushf
repz
std
popa
sahf
lock
icebp
ja
in
test
repz
ret
repz
push
pop
cli
adc
mov
push
out
sahf
loopne
adc
shl
jmp
pop
cmp
imul
nop
push
push
das
add
add
ror
aam
inc
outs
out
shl
lods
and
mov
jmp
pop
clc
cmp
push
push
jg
pop
shl
imul
clc
inc
retf
out
sbb
nop
retf
and
stc
enter
pop
jo
ror
fist
and
push
div
push
fwait
cmp
mov
mov
dec
adc
sub
fld
xchg
push
fimul
mov
pop
cmps
ficomp
in
(bad)
cli
sbb
lahf
rcl
out
push
nop
mov
push
stos
sub
pop
fidiv
mov
jecxz
and
mov
enter
sbb
call
sbb
lock
imul
xchg
cmps
mov
mov
sub
es
sub
mov
(bad)
loop
push
sbb
inc
add
(bad)
rol
mov
shl
xchg
cli
bound
into
lods
es
sub
out
sbb
sbb
push
mov
mov
add
xor
das
fild
jne
ret
xor
scas
push
mov
inc
dec
cs
mov
out
popa
sahf
fnstcw
cwde
data16
mov
jle
sahf
shl
ja
adc
adc
mov
arpl
(bad)
dec
imul
mov
mov
repz
mul
push
or
dec
xchg
ret
and
mov
add
(bad)
sar
data16
mov
sub
and
mov
pop
ds
dec
xchg
test
gs
in
sbb
inc
(bad)
push
test
dec
jne
enter
icebp
mov
push
sbb
mov
mov
add
xor
and
sbb
push
aad
cmps
fidivr
sub
jb
sub
nop
std
push
sub
(bad)
repnz
add
dec
mov
mov
xlat
mov
das
sar
mov
add
adc
dec
cmp
(bad)
fwait
js
jbe
or
data16
sar
jno
jecxz
mov
xor
xchg
or
jbe
sub
jl
test
and
sbb
mov
mov
inc
sub
sbb
sbb
pusha
cmp
in
sub
mov
jne
and
add
out
pop
push
jge
arpl
js
in
(bad)
pop
adc
add
mov
adc
jmp
xlat
cmc
call
loop
mov
mov
fmul
xchg
mov
and
out
out
stos
jl
jecxz
psrlw
ficomp
lods
cmp
scas
push
sahf
in
and
sbb
xlat
ins
cdq
push
push
mov
pop
jns
mov
loopne
inc
rcl
push
ret
cmp
lock
pop
add
dec
jnp
push
rcl
out
lock
push
adc
aaa
push
cmp
adc
les
ret
adc
scas
jno
push
jae
push
jnp
dec
adc
mov
inc
and
enter
mov
push
cmc
inc
lahf
nop
dec
pop
inc
sbb
in
cmc
push
cmp
or
dec
idiv
popf
pop
ins
adc
arpl
jge
call
jns
push
cmp
fadd
outs
test
test
push
test
leave
sub
jmp
pusha
adc
in
fmul
pop
(bad)
sbb
data16
add
fdiv
mov
loopne
fisttp
(bad)
mov
call
push
xor
xchg
add
imul
test
cmp
mov
or
and
push
je
mov
in
shr
mov
mov
mov
pop
inc
or
and
idiv
inc
jg
add
test
fwait
retf
dec
xchg
stos
imul
or
lods
mov
mov
test
mov
pop
(bad)
in
cmp
cmps
jl
mov
sar
repnz
dec
mov
sub
mov
jnp
test
cmp
call
int3
call
cmp
fwait
push
push
popa
sbb
ret
into
push
or
jge
nop
fistp
test
cmc
(bad)
sbb
popf
aam
mov
out
sub
inc
mov
add
bound
and
mov
cmps
dec
jmp
adc
dec
dec
xchg
cmp
cmps
ins
mov
les
into
out
popa
push
cdq
or
or
or
mov
lock
mov
rol
mov
lock
cli
fst
std
iret
fst
xchg
ins
shr
pushf
or
add
ss
adc
xchg
test
dec
inc
and
int
ss
int
mov
sbb
mov
and
fs
leave
jmp
mov
cmp
sahf
mov
inc
cld
movs
in
dec
mov
mov
ins
jmp
mov
pop
scas
mov
hlt
test
jnp
jnp
(bad)
jae
(bad)
sahf
dec
(bad)
je
test
dec
inc
pop
dec
lds
add
adc
pand
call
jb
pop
out
ss
(bad)
nop
jl
add
dec
out
ror
push
cdq
sub
shl
nop
mov
xor
or
arpl
xor
mov
adc
test
mov
sbb
leave
sbb
mov
into
retf
or
jle
mov
imul
rcl
out
ss
int3
int3
popa
xor
inc
sub
(bad)
cmc
rcl
jns
dec
das
inc
adc
dec
inc
and
pop
xchg
and
xchg
or
ss
sub
aad
fsub
mov
ret
mov
add
mov
mov
pushf
icebp
push
enter
ret
push
gs
dec
lods
in
and
ror
dec
add
pop
clc
fstp
pop
sbb
inc
sbb
dec
xor
jb
sbb
call
rcl
fs
fsubr
adc
(bad)
outs
test
aas
push
cs
xchg
add
xchg
jno
and
add
mov
popa
mov
jb
cmc
jecxz
lods
mov
mov
enter
mov
cmps
push
cmc
xchg
mov
dec
adc
mov
popa
xlat
jno
sbb
sub
into
shr
cs
addr16
cmps
shl
aam
adc
scas
cs
and
xchg
mov
in
or
sub
mov
pop
ja
aam
jg
xor
in
addr16
pop
xor
sbb
dec
or
mov
sub
in
push
mov
rol
pop
inc
mov
push
cmc
xor
sub
stc
mov
cmp
xchg
in
gs
rol
ds
rsm
int3
or
or
into
out
cmc
pop
aad
test
jmp
xchg
les
inc
xchg
iret
xor
test
icebp
adc
(bad)
jnp
out
popa
std
xchg
movs
cmp
mov
out
pop
inc
dec
push
jo
mov
dec
mov
sti
retf
call
cld
inc
sbb
mov
cmovs
aaa
sbb
not
(bad)
mov
mov
adc
lods
stos
cs
jp
sbb
movs
adc
pop
ins
xchg
dec
mov
fchs
jl
je
inc
movs
fldenv
pushf
fbstp
adc
sbb
and
push
push
dec
xchg
stos
clc
pop
or
rcr
div
and
imul
cmp
adc
add
jge
cmps
xchg
ja
ret
cmp
shr
push
jp
cmp
js
jbe
xchg
loope
and
or
mov
xor
ffreep
sti
ja
inc
mov
cmp
dec
mov
test
mov
shr
ds
(bad)
xor
add
retf
rcr
cmp
jb
mov
(bad)
imul
pop
add
ins
enter
sub
scas
je
(bad)
cmp
jb
in
popa
mov
inc
xchg
mov
xor
(bad)
jne
test
xchg
in
mov
fdivr
sbb
dec
lahf
fcom
addr16
clc
or
push
inc
lock
repz
cmp
inc
jmp
ret
loope
adc
test
mov
inc
sbb
je
popf
fs
mov
fist
lea
or
jl
pop
out
add
cli
mov
das
mov
push
je
leave
fcmovnbe
stos
jge
inc
mov
mov
cmp
or
sub
mov
scas
and
inc
cld
jp
xchg
fdiv
and
int
mov
div
icebp
jae
xchg
sub
dec
sbb
pushf
push
push
mov
pop
and
iret
xor
mov
jmp
dec
nop
cmp
fmul
mov
ja
push
jmp
xchg
clc
push
sub
repnz
retf
adc
or
pop
fwait
push
add
mov
and
test
imul
fist
sbb
stc
or
inc
mov
bound
adc
movups
add
push
jl
cmp
jecxz
loope
xchg
mov
xchg
(bad)
cmp
mov
jb
mov
pop
and
mov
cmc
inc
add
mov
mov
(bad)
jns
repz
add
pop
repz
sub
and
mov
call
xchg
rcl
mov
scas
stos
mov
ret
xchg
out
sub
xor
aam
sub
div
push
xchg
inc
out
ficomp
dec
jmp
scas
jo
or
pop
sar
sbb
cs
les
push
or
scas
enter
stos
cmp
add
jle
sub
cmp
pop
add
xchg
(bad)
call
shl
rol
inc
nop
dec
pop
lea
jns
inc
out
cmp
jo
push
shl
fs
ficom
or
sbb
scas
pop
sub
pop
dec
mov
dec
xchg
in
shr
xor
cdq
sti
cmps
fcos
(bad)
mov
cmc
daa
inc
ins
jae
jle
cdq
or
in
scas
push
dec
clc
das
xchg
mov
(bad)
out
sub
mov
leave
xor
outs
and
cdq
stos
nop
ins
lea
push
mov
inc
sub
adc
cmc
mov
xchg
sbb
test
jmp
mov
dec
shr
lock
ds
dec
adc
pop
jecxz
jmp
(bad)
mov
inc
push
mov
data16
movs
xchg
adc
push
ror
mov
leave
addr16
loopne
bound
lock
and
jecxz
shr
add
inc
push
or
sbb
mov
movs
outs
pushf
or
cld
mov
cmp
sar
jb
mov
(bad)
in
pop
dec
push
(bad)
xchg
dec
sub
sub
cmp
ret
mov
jbe
call
lahf
(bad)
aas
or
push
mov
mov
fidivr
push
or
xor
popf
push
mov
mov
xchg
addr16
cdq
bound
push
mov
sub
in
scas
outs
test
aam
icebp
jne
aaa
jo
push
sahf
shl
jo
xor
xor
and
in
xor
push
cmps
jo
stc
in
rcr
dec
es
mov
movs
and
ds
and
inc
nop
hlt
pop
mov
mov
jmp
jp
jp
fisub
(bad)
out
lahf
xchg
(bad)
adc
bound
and
loop
mov
jo
adc
clc
imul
into
sbb
push
cli
js
outs
mov
sbb
enter
mov
cmps
mov
enter
fdiv
dec
sbb
call
mov
lods
out
mov
sub
pop
fs
setb
pushf
cld
iret
(bad)
stos
pop
mov
jg
movs
add
add
or
mov
jle
pushf
mov
cmps
adc
xor
jne
pop
mov
jb
sub
push
popf
je
xchg
idiv
push
sbb
into
or
pop
in
sbb
adc
sbb
movs
pop
call
popa
xchg
call
xchg
mov
or
mov
cdq
or
inc
add
dec
push
or
ja
mov
jae
adc
jmp
pop
adc
push
data16
call
mov
(bad)
gs
or
aaa
add
hlt
inc
call
jmp
dec
stos
bound
add
out
cmp
mov
pop
in
push
sbb
call
inc
sub
push
add
jl
cmp
push
test
dec
stos
sbb
mov
mov
and
sbb
mov
mov
sub
cmp
adc
js
das
dec
fidivr
cwde
fild
jl
xchg
xchg
adc
imul
inc
jl
push
loop
nop
mov
jo
je
and
(bad)
call
mov
ret
jo
add
mov
outs
mov
mov
sub
outs
push
adc
inc
cld
mov
jl
movs
push
ins
adc
shr
add
nop
cmc
and
ins
out
pushf
jg
aad
push
push
ins
pop
inc
shl
(bad)
mov
jmp
das
and
in
ffreep
scas
inc
aaa
ds
xor
xchg
addr16
(bad)
bound
push
adc
shl
mov
fisubr
lahf
adc
push
mov
sbb
or
pop
ret
sub
cmp
(bad)
ds
out
(bad)
mov
(bad)
xchg
dec
fdiv
loop
rol
outs
add
pop
imul
or
outs
mov
gs
bound
pop
mov
push
xchg
pusha
jo
pushf
imul
xchg
push
fdivr
dec
paddusb
cmps
repz
dec
aas
push
ror
ds
push
push
lods
pop
add
pop
add
adc
movs
in
xchg
imul
inc
in
dec
es
imul
xchg
add
rol
sbb
cmp
pop
fimul
js
mov
inc
rcr
scas
dec
sbb
pop
icebp
xlat
mov
mov
push
ret
enter
inc
ds
les
adc
xor
pop
pop
ficomp
jp
or
ficom
mov
movs
mov
sbb
pop
adc
pop
cmp
xor
leave
mov
mov
xchg
push
sahf
push
mov
add
jnp
test
in
or
js
(bad)
(bad)
dec
mov
mov
xor
lock
mov
xor
mov
and
xchg
jg
ror
and
sub
mov
loop
xchg
retf
ss
pop
(bad)
nop
xor
mov
ret
(bad)
(bad)
mov
imul
inc
mov
call
push
xchg
mov
and
jb
sub
cmp
xchg
ret
cmc
mov
les
das
dec
out
xlat
mov
cmp
or
dec
mov
cwde
loop
(bad)
mov
add
shr
push
imul
sahf
imul
ja
retf
(bad)
mov
inc
sub
adc
inc
sub
push
jo
shl
mov
xchg
adc
push
cmp
std
dec
call
rol
pusha
mov
sti
sbb
cmp
mov
xchg
push
fwait
add
in
add
fild
push
sbb
aas
in
loopne
sbb
es
jmp
dec
inc
cmc
inc
in
push
ret
mov
test
mov
pop
neg
push
fld
stos
ret
push
pop
mov
push
daa
fadd
push
pushf
mov
sbb
jmp
push
popa
aas
addr16
lea
popa
test
jg
cdq
add
stc
adc
pop
pop
outs
jns
pop
push
leave
ret
test
stos
aas
cmps
and
ficomp
retf
test
cmps
loope
adc
sub
xchg
loopne
inc
dec
sahf
ror
or
stos
pop
sub
fimul
das
pop
aad
push
mov
adc
mov
add
mov
call
ins
imul
or
int
xor
aaa
xor
aad
push
rol
mov
mov
jge
dec
push
ror
mov
xlat
(bad)
adc
xchg
shr
sbb
jmp
pop
add
xchg
mov
pop
cmp
cmp
xor
mul
lea
imul
xor
shl
fwait
ret
fnstcw
xchg
or
dec
jb
and
mov
push
inc
jns
fs
data16
aam
xchg
sahf
ret
rcr
adc
dec
or
xchg
repnz
lods
cdq
aaa
dec
pop
test
pop
xchg
cmps
retf
sbb
mov
scas
scas
stc
jne
sub
xchg
mov
push
ffreep
sub
push
and
lds
lock
enter
shl
jnp
add
outs
and
mov
pop
jnp
loopne
push
ret
imul
xchg
sbb
mov
mov
(bad)
fucom
loopne
ins
psubb
sub
test
mov
mov
shl
ins
(bad)
paddb
sub
fadd
aas
or
xchg
cwde
mul
add
push
fild
sub
sar
imul
mov
fcmovnu
pusha
nop
mov
rol
push
adc
in
add
stc
inc
popa
and
mov
fistp
retf
push
or
sbb
mov
arpl
or
loope
xchg
xchg
fidivr
daa
sbb
pop
daa
repnz
jns
nop
xchg
inc
fcmovnu
aas
push
add
mov
push
clc
popf
into
cwde
mov
in
lds
in
js
push
popa
bound
ja
sbb
enter
je
or
xchg
mov
(bad)
jle
fidivr
adc
jns
dec
xchg
inc
leave
or
loopne
call
ret
(bad)
adc
mov
pop
retf
outs
add
mov
lock
push
xchg
inc
aaa
ins
test
dec
fldcw
mov
inc
mov
retf
add
or
jg
or
xchg
xchg
jbe
sub
xchg
sub
xor
adc
rcr
ret
aam
sub
mov
hlt
xor
inc
in
les
jae
bound
xchg
loop
js
fstp
xchg
add
shl
arpl
mov
inc
add
out
pop
pop
mov
pop
bswap
add
mov
into
outs
(bad)
je
out
mov
ja
sub
mov
dec
or
rcr
test
mov
outs
ins
mov
lds
and
xchg
adc
aas
shl
loope
adc
sub
out
or
loop
cmp
push
das
stc
pop
arpl
sbb
out
and
xor
inc
cld
mov
mov
jns
test
lahf
inc
mov
sbb
jo
mov
pusha
daa
gs
stos
stc
dec
pop
mov
ds
mov
adc
pop
mov
adc
aaa
popa
dec
out
mov
add
xchg
js
leave
push
push
mov
inc
mov
cmp
xlat
xor
xchg
sub
inc
xor
hlt
(bad)
fst
lock
sbb
sub
sahf
js
add
push
lock
(bad)
cmp
repnz
sahf
push
fimul
dec
mov
std
sbb
and
popa
or
sub
sub
sbb
push
or
lock
jmp
mov
aam
iret
cmp
repnz
add
popf
add
fmul
sbb
and
push
sub
nop
xor
mov
jbe
pusha
jne
dec
or
mov
(bad)
out
adc
in
jnp
jmp
jl
push
cli
pop
dec
cmp
xchg
xor
daa
jmp
fild
inc
clc
ret
bound
add
push
adc
int
mov
xor
mov
adc
retf
adc
test
lods
cmp
loopne
sbb
jnp
push
in
cmp
mov
call
fisubr
add
adc
pop
xchg
jne
loop
xor
cld
add
bound
in
cmp
mov
or
int
adc
xor
xor
cs
pop
push
int3
pusha
lsl
out
or
loopne
mov
mov
jne
mov
pop
sar
pop
enter
das
mov
inc
adc
jbe
repz
nop
stos
test
jmp
mov
js
xor
sbb
mov
inc
dec
(bad)
mov
mov
into
xlat
pop
mov
sub
inc
dec
jle
sbb
fidiv
push
imul
jecxz
adc
xchg
sub
lahf
into
mov
cmp
cdq
jnp
shl
js
out
cmp
sbb
mov
adc
out
movs
mov
lods
mov
fs
pushf
lds
std
leave
xchg
sbb
mov
mov
and
movs
adc
scas
xchg
imul
inc
mov
imul
push
inc
mov
aam
call
or
lea
pop
inc
pop
test
repnz
loope
jecxz
es
pop
add
pop
jae
mov
add
stos
stc
pop
jns
add
push
push
mov
lods
jno
pop
cmp
nop
add
scas
add
repz
xchg
push
ins
movs
sbb
repnz
mov
repnz
gs
push
jb
in
loop
lds
mov
add
and
add
push
sub
(bad)
and
popf
rcl
pop
sbb
fist
push
xor
stos
outs
fld
dec
dec
aad
or
lock
int3
mov
jl
dec
and
xchg
sub
mov
mov
cli
data16
lahf
jge
mov
(bad)
cmp
xchg
hlt
or
xor
dec
fmul
xor
stos
dec
(bad)
xor
dec
std
addr16
std
mov
repnz
xor
jecxz
sub
mov
fwait
(bad)
and
xchg
test
lods
out
or
jp
les
sbb
mov
mov
call
into
int
jp
adc
mov
push
leave
ins
fstp
lahf
jmp
push
jp
cld
dec
mov
cmp
jbe
fisubr
hlt
adc
push
jp
jbe
pop
mov
fist
jo
js
add
jg
test
imul
mov
repz
addr16
scas
loopne
mov
jmp
div
jle
mov
pushf
pop
jmp
mov
fidivr
sub
mov
cdq
inc
jne
ret
(bad)
imul
sub
jb
test
cmc
sbb
push
mov
and
jp
xchg
int3
fdivrp
test
jl
sub
ficomp
mov
jb
out
add
(bad)
mov
pop
mov
popf
xchg
les
sub
and
mov
es
fisttp
cmp
and
popa
push
icebp
js
xor
dec
shl
ret
push
(bad)
bnd
pushf
mov
in
xchg
push
dec
inc
mov
(bad)
jmp
addr16
mov
stc
sub
cmp
into
clc
mov
sbb
out
dec
(bad)
out
loope
pop
adc
test
ror
cwde
loopne
fucomi
daa
popa
pop
cmc
in
jmp
repnz
iret
nop
fnstsw
dec
xchg
jns
push
inc
jmp
mov
loope
dec
pop
out
retf
mov
pop
pop
fist
push
adc
push
(bad)
lahf
pop
pop
inc
jmp
fstp
and
(bad)
call
cmp
loop
add
bnd
add
push
retf
addr16
loope
push
mov
test
inc
aam
cwde
xchg
cld
scas
in
movs
pop
dec
test
enter
lock
cmp
pop
push
stos
in
xchg
fimul
(bad)
in
dec
cmps
mov
(bad)
cmps
ja
sbb
sbb
adc
cmp
jns
aas
mov
out
xchg
add
ss
jmp
and
pop
push
scas
cmp
xor
ret
jnp
hlt
sub
stc
pop
mov
int3
frstor
push
imul
fst
bound
push
lock
push
and
push
aad
jne
and
ins
xchg
ins
push
out
jbe
cld
xor
fcom
xchg
loopne
in
sub
mov
or
dec
lock
and
xchg
pop
into
sbb
aas
aam
shr
mov
jg
dec
cmc
add
dec
adc
pop
ret
adc
xchg
retf
push
jle
push
sbb
leave
outs
mov
test
add
cmp
call
gs
cmps
dec
es
sti
mov
mov
push
mov
adc
pop
imul
push
outs
dec
pop
lahf
loop
add
cmp
cmp
ss
ret
pop
add
and
dec
mov
mov
mov
xlat
test
sub
mov
xchg
rcr
fwait
out
xor
lods
cmp
xor
aas
dec
aad
jl
xchg
push
inc
add
arpl
jbe
mov
inc
sbb
mov
arpl
sbb
lods
pop
or
pusha
sub
fst
in
mov
xchg
push
adc
sub
adc
or
ds
jno
retf
outs
in
cmps
lock
(bad)
push
mov
(bad)
jmp
rol
jno
xchg
pop
pop
add
scas
mov
pop
fmul
sbb
mov
mov
aas
jp
idiv
arpl
(bad)
push
scas
jmp
mov
loopne
enter
add
loop
stc
sbb
popf
repz
add
inc
outs
push
xchg
or
rol
stos
iret
and
lods
sub
inc
stos
add
dec
xor
and
push
dec
daa
and
cmp
je
test
stc
ret
int
cwd
add
jno
inc
mov
cmps
call
js
je
fs
stos
jge
mov
jge
into
out
dec
stos
stos
icebp
jmp
div
xor
mov
jmp
rcr
test
inc
(bad)
mov
push
and
in
or
xor
mov
addr16
lods
sbb
and
add
or
das
mov
cmp
mov
gs
jb
mov
rol
xor
xchg
(bad)
fwait
pop
sbb
(bad)
scas
pop
(bad)
shl
dec
scas
or
xchg
mov
jo
jbe
jge
or
arpl
test
adc
xor
fs
lods
dec
in
jp
adc
adc
cmps
mov
push
addr16
es
inc
test
popa
sbb
fidivr
jg
sbb
add
inc
cmp
mov
fs
imul
dec
gs
xor
call
fdivr
test
aas
out
call
aaa
lock
lea
in
cli
sub
or
sbb
loope
jge
or
xchg
into
loopne
or
xchg
sub
xchg
nop
(bad)
jno
movs
hlt
mov
mov
dec
std
daa
(bad)
cdq
sub
icebp
iret
loop
fcomp
cmp
sub
jecxz
hlt
fcomi
test
jae
(bad)
mov
push
adc
loopne
jge
loop
xchg
adc
lds
mov
push
mov
sbb
mov
and
mov
push
adc
(bad)
(bad)
jmp
lock
aam
xchg
sbb
sub
sbb
idiv
cld
ss
jo
aas
sub
push
jbe
push
movs
cdq
jnp
cmps
scas
pop
xchg
ins
fcomp
dec
stos
std
imul
mov
jb
jge
repz
or
jno
add
ss
mov
call
mov
leave
mov
or
and
mov
or
mov
cmp
es
stc
bound
icebp
cs
daa
int3
xchg
cmp
ret
sbb
cld
adc
nop
push
lods
cld
push
(bad)
mov
inc
jnp
(bad)
(bad)
push
jae
push
aad
or
jbe
cdq
cmc
dec
sahf
fs
(bad)
aas
cmps
(bad)
mov
or
repz
cli
rcl
mov
fucomip
xchg
repnz
or
add
mov
pop
xchg
icebp
pop
pop
jg
push
mov
mov
push
push
push
and
retf
pop
fmul
lods
jmp
ins
mov
mov
jmp
faddp
push
jmp
push
(bad)
call
xchg
repz
or
rcr
mov
jl
outs
sub
sub
pop
pop
loop
push
mov
mov
add
add
or
loopne
sbb
jecxz
inc
xor
push
addr16
jg
fs
pop
xchg
data16
mov
lea
sbb
arpl
adc
repnz
xchg
mov
adc
sub
ja
sub
int
arpl
cmp
pusha
sti
pop
clc
jmp
scas
pushf
scas
xchg
mov
enter
pop
dec
repnz
test
adc
inc
jbe
adc
cmp
pop
repz
mov
enter
pop
jnp
pop
idiv
lds
int3
jbe
cmps
in
hlt
jno
pusha
adc
int3
icebp
loopne
lock
jp
xor
push
push
aad
pop
daa
jp
enter
ffreep
cmc
push
cmp
sub
xchg
mov
arpl
(bad)
mov
xlat
sbb
fwait
movs
sub
jo
xchg
or
imul
adc
sbb
jmp
(bad)
push
sub
pop
mov
dec
rol
dec
inc
in
imul
iret
sub
inc
mov
sub
dec
push
mov
cmp
xchg
fwait
pop
scas
adc
fisttp
shl
pop
jmp
std
push
dec
les
les
push
(bad)
adc
jl
int3
iret
push
dec
add
outs
xlat
pop
add
cmps
mov
dec
sar
daa
xor
call
or
in
push
sub
scas
fs
sar
and
xchg
mov
jnp
push
sbb
mov
loop
or
addr16
dec
push
inc
leave
dec
aad
cmps
hlt
inc
out
or
push
cmp
fisub
sub
jb
jmp
rcl
inc
fisub
imul
xchg
dec
lods
scas
cmp
cwde
scas
push
jmp
cld
pusha
mov
dec
fild
cmp
cmps
fimul
mov
mov
out
or
fisub
dec
cmp
cmps
or
mov
not
lahf
and
cmp
pop
fisub
pop
ficom
popf
cmc
stc
xor
clc
popa
inc
adc
hlt
out
lea
xchg
dec
js
inc
addr16
xchg
popf
sbb
dec
retf
push
dec
popf
sub
jo
jle
mov
mov
dec
push
out
adc
jle
jmp
jp
dec
jae
(bad)
test
or
sbb
rcl
(bad)
lods
sub
push
adc
data16
push
xchg
mov
icebp
inc
mov
sub
inc
stc
int3
mov
add
hlt
sbb
data16
clc
dec
je
mov
sbb
jg
lea
inc
jnp
and
clc
scas
jae
sub
outs
mov
mov
pop
fisub
fdivr
daa
aas
cld
push
into
ins
mov
fist
push
bound
push
and
nop
mov
push
(bad)
jge
stc
inc
aad
jmp
lods
(bad)
pop
addr16
sub
and
mov
lds
leave
mov
lds
in
inc
fs
cmp
mov
div
inc
or
cs
push
jmp
jb
pop
das
sti
out
xor
sub
retf
nop
lahf
repz
cmp
xor
inc
adc
imul
stos
lea
jmp
xchg
or
add
imul
(bad)
movs
cmp
pop
fisttp
mov
js
or
call
pop
out
xor
mov
nop
popf
int
bnd
xor
outs
pop
inc
push
mov
dec
adc
push
ret
push
push
sar
gs
(bad)
cmp
sbb
xor
jl
jecxz
xchg
mov
inc
lods
jnp
loop
cli
push
xor
sbb
xchg
pop
mov
test
loop
sbb
xchg
cmps
mov
pop
inc
sbb
mov
pusha
in
jno
cmp
push
mov
in
cmc
les
xchg
push
cmp
push
js
lods
gs
jno
cmps
sub
cmp
mov
cmp
jmp
and
cmps
movs
jne
mov
cmp
cli
mov
sar
bound
push
(bad)
ja
xor
int
or
sahf
retf
mov
cwde
(bad)
xchg
push
shl
sub
jo
push
sub
(bad)
jg
sub
fwait
xchg
hlt
fbstp
mov
jmp
pop
cmp
cld
iret
jae
nop
(bad)
push
sbb
fistp
cmp
or
jg
xor
(bad)
scas
rcr
dec
sub
adc
retf
mov
ficomp
out
jg
mov
sti
daa
pop
(bad)
outs
mov
and
test
bound
xlat
dec
sbb
push
push
stos
sub
test
mov
retf
ss
cmp
jl
fs
mov
cld
loop
(bad)
dec
sub
loopne
mov
test
rcl
cmps
add
ins
daa
xchg
mov
fdiv
xor
ins
and
sti
in
ficomp
xchg
aas
jecxz
cmc
push
ret
ror
xor
dec
xchg
xchg
daa
adc
popf
push
je
test
push
push
dec
mov
mov
xchg
jae
xchg
aaa
cmovno
repnz
into
or
mov
sbb
stos
shr
divps
iret
int3
and
mov
retf
cli
inc
retf
jl
in
jne
mov
repz
cmp
test
clc
test
cmp
test
and
dec
xchg
mov
les
mov
(bad)
jp
mov
mov
ror
xor
rol
mov
std
jno
rcl
cld
xor
and
xchg
mov
jge
xor
add
push
jl
scas
jnp
sbb
xor
pop
dec
hlt
mov
mov
popf
ret
rol
out
daa
pop
enter
loope
test
dec
jns
movs
fdivr
das
mov
lock
aaa
jb
sbb
xor
xor
bound
pop
cmp
xchg
lds
pop
stos
jns
repz
ds
call
mov
into
cld
into
in
and
aaa
and
dec
cld
int
adc
mov
ret
jl
test
(bad)
nop
stos
push
ret
stc
into
and
cmp
fisttp
jle
push
stos
mov
mov
pop
jecxz
inc
fidiv
add
inc
ror
mov
cmp
add
into
xor
outs
call
mov
sub
push
mov
push
xchg
fcomp
adc
push
adc
jmp
fisub
ret
cmc
sahf
lahf
loope
test
outs
pop
dec
loop
jg
test
push
xor
xor
cmp
cmp
mov
rol
ficom
out
inc
test
cmps
lea
(bad)
(bad)
jge
push
jne
xchg
pop
in
adc
movs
jns
loop
xchg
rol
imul
jne
push
or
sbb
mov
add
push
out
test
cs
push
ret
add
adc
mov
inc
ret
scas
sub
(bad)
test
inc
sbb
gs
in
mov
pop
lods
xchg
push
xchg
out
dec
daa
(bad)
das
jne
jo
icebp
mov
dec
out
cmps
jmp
xor
faddp
dec
xchg
fld
fwait
and
imul
adc
mov
mov
dec
push
mov
rcl
adc
in
add
popf
or
dec
aam
mov
adc
jmp
pop
sar
popf
sub
cmp
rcl
cld
aam
fcomp
daa
or
fs
jo
(bad)
jecxz
lods
rol
xor
hlt
mov
(bad)
call
push
imul
int
addr16
cmps
fcomp
sub
adc
pop
out
xsave
mov
sbb
call
or
stos
or
mov
sub
xchg
out
jbe
mov
aaa
sub
sub
xchg
add
lahf
cmc
movs
push
movs
mov
(bad)
int3
xchg
push
xchg
fs
mov
lods
sbb
in
jecxz
mov
(bad)
adc
push
icebp
mov
comiss
jae
or
dec
and
mov
mov
cmp
out
cmp
repnz
scas
outs
mov
fistp
bndldx
jns
add
fsubr
fisttp
cmc
push
xor
xchg
sbb
pop
mov
repz
outs
dec
jmp
ror
(bad)
and
loopne
fst
scas
mov
mov
std
nop
in
cmp
mov
sub
fcmovne
sbb
daa
test
jg
push
test
js
inc
outs
int3
pshufw
fs
xor
inc
inc
mov
mov
jbe
lods
ret
je
mov
leave
mov
and
mov
frstor
jg
adc
pop
ss
mov
adc
and
adc
sub
into
shl
dec
sub
mov
test
sar
push
mov
lods
bound
jp
data16
push
fidiv
sbb
sbb
sbb
movs
data16
mov
cdq
ficom
aas
xchg
cdq
lods
add
sbb
xchg
imul
(bad)
xor
icebp
jbe
pop
(bad)
icebp
test
jmp
test
jmp
xor
dec
sub
loope
enter
dec
mov
sbb
mov
nop
xor
mov
and
pop
or
xor
mov
cmp
pop
stos
dec
and
xor
dec
mov
cmp
(bad)
repnz
cmp
push
retf
mov
mov
es
(bad)
out
into
mov
xor
leave
dec
gs
retf
dec
sbb
mov
inc
push
xchg
mov
ror
jge
popf
jl
xchg
cmp
mov
mov
in
retf
ja
(bad)
repnz
mov
ret
or
(bad)
push
inc
sbb
add
nop
pop
mov
enter
daa
aaa
adc
mov
stos
jmp
or
or
scas
rcl
add
cld
les
shl
call
cld
cmp
ss
jae
adc
cdq
fnstcw
add
neg
retf
mov
bndstx
push
fwait
inc
xchg
xlat
jge
add
push
shr
adc
xor
push
test
push
mov
xchg
std
fs
addr16
cmp
rol
(bad)
out
mov
push
xchg
dec
push
std
or
mov
mov
out
xlat
aaa
out
push
sbb
pop
pushf
xor
bound
inc
adc
xor
and
test
in
and
loope
les
dec
or
jp
in
jmp
aam
ss
outs
add
jle
adc
jmp
sbb
scas
(bad)
mov
push
je
jmp
std
popf
lock
ins
adc
(bad)
cwde
and
popf
sub
xor
call
js
repz
cmp
(bad)
psubusb
push
fst
popa
or
sub
je
icebp
mov
inc
add
inc
loop
or
outs
fmulp
aas
fidivr
ret
xor
add
loop
inc
jb
cdq
shl
addr16
sub
and
inc
sbb
jno
in
xchg
ins
retf
jne
aaa
gs
jne
retf
outs
push
das
mov
scas
dec
cdq
push
dec
scas
cwde
mov
ret
sti
sub
pop
jne
mov
or
loopne
ins
das
fnstcw
cmc
(bad)
cs
push
or
xchg
mov
(bad)
fild
sti
xchg
dec
inc
xor
test
inc
mov
push
mov
aam
mov
scas
or
mov
sub
mov
aaa
add
stos
fidiv
test
dec
sbb
cmp
clc
fsub
jnp
pavgw
fistp
mov
xor
xchg
or
shl
push
adc
fimul
jnp
cmp
mov
xchg
mov
(bad)
cmp
(bad)
div
repz
shl
inc
fst
dec
data16
int3
mov
ins
mov
stos
ds
sub
out
xchg
adc
shl
push
hlt
cmp
inc
pop
sub
mov
les
push
imul
jb
push
int3
(bad)
jns
dec
push
arpl
xor
jg
retf
sbb
test
or
arpl
sub
mov
and
mov
pop
imul
hlt
mov
jmp
sbb
and
sbb
scas
push
stos
mov
aad
call
ins
jbe
popf
mov
mov
mov
fmul
fnsave
sahf
pop
sub
aam
or
test
outs
mov
inc
test
ss
xor
xchg
fcomp
xor
sub
ins
pusha
movs
and
cmc
test
jl
sub
out
rcl
aaa
cmps
das
clc
or
push
fstp
mov
dec
retf
dec
popf
push
call
jp
fcmovu
or
ret
test
dec
xchg
(bad)
lds
push
aad
push
ret
stos
add
fisttp
movs
das
add
cmp
add
call
inc
xchg
fdiv
(bad)
repnz
pop
or
push
ficom
iret
(bad)
int3
mov
mov
cld
jmp
test
retf
imul
inc
pop
push
test
push
out
inc
push
pop
dec
bound
inc
retf
pop
outs
test
sub
xchg
ins
add
dec
jnp
bound
je
xchg
pop
pop
(bad)
lds
test
mov
pusha
lock
loope
and
mov
ret
lods
xchg
movs
dec
push
add
mov
and
push
add
cmp
int
dec
push
lds
stc
gs
mov
addr16
or
push
jg
mov
ja
or
mov
inc
sti
jo
gs
sahf
sub
xor
mov
push
mov
aam
repnz
dec
xor
xchg
pop
icebp
popf
fld
ss
mov
scas
sbb
stos
fdiv
es
fwait
mov
sbb
pop
push
out
mov
stos
bound
mov
xchg
mov
mov
or
and
addr16
ret
cmp
call
hlt
fcom
pop
cmc
pop
adc
inc
or
ins
lds
aad
jmp
cli
mov
mov
push
push
cmp
adc
lds
adc
lods
nop
mov
push
mov
jecxz
sahf
(bad)
cs
inc
xor
sbb
aad
cwde
sbb
pop
scas
lahf
push
test
mov
dec
ret
pop
mov
mov
jge
fdivrp
test
cdq
call
jae
aad
mov
push
ds
jp
xor
and
push
pop
mov
add
loopne
adc
enter
add
pop
mov
dec
in
mov
sub
and
mov
inc
(bad)
and
jecxz
imul
fwait
cdq
xchg
loope
xchg
and
in
rcr
lahf
aas
mov
push
mov
push
pop
cmp
sahf
inc
in
mov
mov
pusha
ja
push
ds
icebp
adc
les
jns
jmp
push
mov
pop
outs
xchg
rcr
sbb
add
push
pop
push
hlt
call
imul
add
mov
sti
mov
out
push
stc
jo
(bad)
sub
pop
add
stos
and
jl
cmp
movs
es
pop
fadd
sub
psllq
cdq
mov
leave
inc
stc
icebp
inc
dec
fisubr
adc
cmc
pop
mov
out
neg
add
dec
out
jmp
sub
cmps
mov
push
dec
cmp
movs
cmp
loop
xor
xchg
iret
lahf
mov
pop
mov
jne
sub
ret
ins
cmp
imul
lock
repz
mov
pop
hlt
loop
xchg
int
inc
sar
push
je
push
fwait
or
shr
ret
cwde
inc
pop
js
sub
mov
inc
stos
cmp
or
repz
addr16
and
xchg
and
(bad)
fbstp
or
leave
aam
inc
pushf
inc
mov
xlat
clc
das
mov
arpl
or
sahf
inc
je
nop
imul
stos
pushf
add
xor
xchg
and
int3
fs
lods
fbld
lahf
lods
dec
inc
rol
leave
mov
fdivr
xchg
add
push
lahf
push
add
bound
lds
addr16
in
sbb
adc
mov
add
jl
in
mov
lods
test
scas
mov
es
push
jmp
dec
xchg
sbb
cmp
adc
xchg
ficomp
jmp
dec
call
mov
xor
mov
lods
push
jmp
(bad)
jmp
sti
popa
or
test
dec
pop
xchg
push
cmp
mov
mov
mov
xchg
or
cmp
scas
enter
data16
jo
mov
push
mov
inc
adc
xchg
aad
rcl
cwde
mov
mov
btr
mov
pop
mov
call
sbb
inc
mov
scas
shl
mov
cmps
adc
jmp
movs
pop
lods
call
cmp
push
pop
rol
(bad)
jle
inc
loopne
(bad)
sahf
cwde
mov
cli
jecxz
fmul
pop
mov
sbb
hlt
leave
mov
(bad)
sub
adc
or
mov
or
ins
outs
js
fld
push
pop
pop
bound
sar
dec
cmp
sti
pop
in
mov
lods
sub
inc
xchg
cmps
dec
or
fld
ins
fiadd
out
xchg
jp
mov
leave
mov
ins
test
stos
jg
loopne
and
jo
mov
mov
iret
add
nop
xchg
push
jbe
adc
dec
(bad)
lahf
rcl
scas
mov
ins
pop
and
das
lods
stc
push
inc
inc
stos
(bad)
cmp
and
cli
out
aaa
add
xor
sub
rol
adc
and
pop
or
jo
push
or
(bad)
sti
fdiv
fwait
sub
mov
dec
(bad)
dec
or
dec
mov
loop
imul
movs
dec
or
scas
sti
mov
cmp
mov
sbb
into
or
movs
fidivr
ror
imul
mov
pop
mov
ja
mov
ds
mov
cmp
pop
ins
dec
adc
ins
popf
jp
dec
lods
call
adc
vcvtps2pd
outs
mov
popf
jne
repz
mov
pusha
inc
push
xor
call
fisttp
xchg
js
mov
xor
lods
scas
cmp
mul
popa
adc
addr16
cmp
xchg
movs
or
mov
outs
pop
sub
add
pop
ds
dec
jg
(bad)
iret
inc
or
xchg
jbe
mov
sbb
pop
call
add
mov
int
jmp
in
and
(bad)
fdiv
nop
xchg
cwde
xor
mov
cmp
call
mov
mov
stos
shl
push
clc
retf
iret
in
in
jmp
scas
lds
ds
aam
(bad)
das
je
sub
or
popf
pop
mov
fcom
jnp
lods
add
add
aas
loopne
xchg
movs
ins
repnz
mov
add
jg
push
popa
adc
add
in
mov
aas
cmp
mov
push
and
daa
pop
and
pop
hlt
jno
jl
in
neg
jns
mov
mov
and
inc
sbb
sub
or
daa
and
mov
sbb
jo
pop
enter
mov
jae
add
dec
and
jbe
push
sbb
pop
push
(bad)
in
das
dec
scas
out
cmp
ss
(bad)
mov
arpl
jmp
xor
shr
adc
push
cmp
fisub
in
jb
cli
and
iret
add
lahf
fidivr
lea
aam
pcmpgtw
das
out
add
sub
jnp
mov
pop
rcl
pop
iret
dec
nop
in
mov
inc
jns
mov
out
(bad)
ror
test
jge
arpl
inc
repnz
push
sub
loopne
sub
inc
(bad)
jmp
cdq
out
jp
push
inc
mov
mov
rcr
ret
xchg
popa
mov
push
test
jl
adc
enter
jecxz
neg
mov
in
xlat
mov
add
mov
aam
pop
test
in
mov
mov
hlt
pop
inc
js
shr
dec
fistp
out
addr16
adc
cmp
mov
sahf
sub
sub
lods
xchg
repz
outs
push
jns
ret
push
mov
pop
std
jp
cwde
inc
and
xchg
ret
outs
ja
pop
fild
mov
and
sub
cli
loope
inc
push
sbb
sahf
scas
dec
daa
inc
mov
out
add
js
adc
cmp
xor
lahf
sbb
sahf
fiadd
data16
in
push
add
mov
mov
rol
loopne
loop
pop
inc
call
jbe
loope
idiv
xchg
jb
scas
mov
(bad)
pushf
fbld
std
(bad)
ds
mov
sar
out
sub
and
mov
test
fsub
pop
adc
pop
or
stos
pop
adc
inc
jmp
mov
dec
jnp
cwde
add
fnstcw
std
mov
sbb
rcr
dec
push
and
pop
in
cmp
push
outs
arpl
pop
pop
aas
mov
ret
mov
jecxz
(bad)
fwait
adc
es
data16
xor
addr16
scas
cmp
out
pop
test
test
xor
aad
fimul
ds
(bad)
aad
pusha
out
call
sahf
mov
cmp
mov
fist
into
test
and
fcom
mov
dec
inc
or
jg
movs
sbb
push
sub
push
out
call
pop
jmp
push
inc
xor
xchg
in
mov
retf
adc
les
arpl
stc
xchg
fistp
(bad)
(bad)
xchg
jg
(bad)
mov
xor
mov
ret
or
rcr
dec
mov
xor
pop
jne
jb
(bad)
and
push
adc
loope
adc
pop
xor
inc
imul
add
inc
adc
out
lahf
lahf
lock
inc
pop
inc
(bad)
push
pop
into
out
jae
out
and
xchg
mov
mov
loopne
cmc
aad
mov
sbb
push
add
jecxz
(bad)
out
(bad)
sub
cmp
pushf
lods
cmp
(bad)
js
jb
sbb
sub
fistp
pop
and
in
push
sub
ret
retf
dec
inc
mov
popa
xchg
test
cmps
jns
fisub
neg
mov
mov
inc
sub
sti
repnz
out
or
stos
movs
mov
stos
cmp
jno
mov
les
adc
adc
inc
pop
adc
sub
xor
sti
xchg
jmp
mov
gs
je
cdq
inc
movs
pop
shl
xor
bound
fst
adc
sti
mov
cdq
lods
sbb
and
or
lahf
xchg
jno
popw
jb
(bad)
mov
lods
jnp
xlat
push
sub
sar
ins
jge
iret
int
and
movs
pop
test
push
and
cli
mov
(bad)
loope
xor
fstp
cmc
loope
div
test
pop
push
icebp
lock
(bad)
dec
sub
mov
mov
das
cmp
mov
or
addr16
cmp
add
add
cmp
cmp
sahf
imul
pushf
mov
sbb
daa
in
test
pop
push
dec
movs
push
mov
out
std
pop
jbe
pusha
xchg
mov
and
xor
(bad)
sti
sti
inc
call
mov
outs
sahf
push
adc
dec
xor
sbb
adc
sbb
fmul
and
xchg
mov
add
movs
xor
rcr
imul
ins
arpl
jmp
adc
sahf
sbb
test
lods
mov
dec
leave
fild
data16
or
inc
neg
add
fistp
xor
sbb
and
test
iret
cmp
fcmovbe
mov
std
int3
jg
imul
(bad)
fstp
ror
lods
inc
les
inc
xchg
inc
fst
sub
movs
retf
pop
inc
sub
outs
cs
addr16
retf
push
lahf
ficom
add
xchg
add
push
fs
lahf
retf
xchg
je
loop
jo
sub
dec
mov
mov
jno
dec
clc
cs
cmps
xchg
jb
inc
cmp
push
pop
push
cmp
inc
and
adc
repz
aad
jo
cmp
leave
jae
jle
and
imul
push
jl
retf
pop
js
(bad)
mov
inc
test
or
fcom
and
scas
cli
mov
push
adc
ins
imul
call
mov
out
jae
sbb
movs
outs
sbb
mov
mov
jmp
das
pop
pop
mov
mov
inc
inc
add
dec
sbb
(bad)
mov
fdiv
push
call
mov
jg
mov
sbb
call
push
xor
in
fisub
cld
lds
jb
push
dec
in
mov
popf
mov
arpl
(bad)
jle
xchg
dec
xor
cwde
into
dec
fild
push
mov
push
movs
xchg
jg
data16
clc
xor
(bad)
retf
mov
aas
xchg
push
scas
xchg
push
test
jmp
(bad)
in
out
ins
retf
xlat
jmp
xchg
movs
inc
xchg
xchg
push
inc
gs
dec
das
adc
js
cli
and
loopne
fisubr
jo
out
sbb
xor
jo
jge
push
fwait
dec
xor
sub
jle
or
or
jno
xor
call
push
movs
aaa
sub
jns
iret
mov
xlat
add
nop
enter
cli
jge
outs
adc
adc
sub
xchg
sbb
daa
mov
cmp
sbb
lea
fs
mov
jge
lds
inc
lock
cli
ds
cdq
cmc
push
mov
repz
loope
retf
cwde
bnd
mov
push
dec
or
inc
fstp
fst
push
ins
xchg
and
push
les
shl
jae
fdiv
sub
add
sbb
mov
sub
fmul
dec
pop
fidivr
mov
mov
mov
lds
in
xchg
mov
inc
pop
add
imul
stos
in
cli
push
loopne
(bad)
jle
imul
mov
push
jge
push
mov
push
lods
jmp
es
sbb
leave
pusha
mov
jne
pop
lds
inc
mov
fdivr
jnp
out
lods
(bad)
push
xor
loopne
dec
jno
push
push
adc
ror
dec
pop
in
(bad)
inc
adc
and
push
cs
and
xor
push
popf
add
sbb
pop
or
add
ins
fwait
movs
pop
xlat
test
mov
scas
push
xor
std
lock
cmp
test
sbb
imul
ins
in
sub
je
jg
out
ja
pop
loopne
enter
leave
mov
dec
int3
das
not
out
xor
and
push
jo
pop
dec
mov
mov
jmp
jecxz
inc
xchg
(bad)
xchg
fisub
jnp
inc
xchg
jp
push
jo
fisub
adc
lahf
xchg
add
or
fsubr
hlt
call
push
pop
push
movs
lea
cli
scas
cmp
and
xchg
sub
je
jb
sbb
mov
dec
ins
pushf
(bad)
pop
enter
lock
scas
aaa
(bad)
popf
loopne
test
test
xchg
mov
add
sbb
arpl
dec
neg
fiadd
out
inc
std
outs
sbb
in
popa
mov
mov
cmp
push
mov
and
dec
cwde
ins
lods
loop
sub
imul
iret
in
xor
mov
out
(bad)
xor
jp
outs
call
(bad)
loopne
push
inc
lock
adc
test
scas
fbld
not
and
push
pop
lds
jb
push
mov
repz
jp
outs
pop
dec
in
sub
cli
ds
sub
movs
jge
mov
xchg
adc
adc
int
(bad)
xchg
daa
sub
mov
push
jmp
retf
sti
test
(bad)
mov
mov
rcl
aas
movs
mov
xchg
fstp
mov
cmp
(bad)
(bad)
out
stos
cs
mov
imul
cmc
pop
dec
loope
(bad)
xor
adc
jmp
mov
add
lahf
jle
adc
xchg
pop
and
xor
push
clc
sub
inc
sub
jmp
or
push
jl
xor
or
jmp
mov
fdivr
pop
fwait
movs
outs
or
pop
in
jns
addr16
clc
mov
dec
mul
ins
inc
mov
xor
test
cmc
(bad)
mov
lock
movs
(bad)
loopne
push
sub
inc
jo
pop
pop
add
ss
add
scas
mov
movs
addr16
sti
scas
xor
loope
aaa
shl
in
in
jns
or
sub
scas
cmp
sti
jl
mov
js
mov
inc
and
cmp
icebp
les
xchg
pop
and
add
cmp
js
xchg
xlat
sbb
(bad)
sub
mov
sbb
jmp
(bad)
loopne
jmp
push
loop
ds
add
pop
jmp
imul
cmps
cmp
push
lea
push
jecxz
gs
or
and
mov
pop
sub
in
jl
cmp
daa
repnz
in
adc
movs
push
je
and
sub
mov
push
enter
jmp
inc
or
movs
pop
jmp
xor
dec
enter
lods
popa
imul
call
rol
jne
in
xchg
stos
ret
scas
mov
and
inc
sar
and
mov
js
mov
icebp
sti
in
out
out
cdq
test
and
test
mov
xor
mov
adc
jbe
or
mov
fisub
adc
ds
adc
std
mov
(bad)
xchg
xchg
loopne
pop
data16
loopne
aad
fnstenv
mov
aam
popaw
xchg
les
xchg
das
mov
add
xor
mov
outs
xchg
xchg
and
repnz
xchg
aad
cmp
cwde
mov
lahf
sub
out
jecxz
cwde
and
fld
push
out
mov
hlt
inc
xchg
and
push
or
or
mov
inc
mov
mov
inc
cld
mov
cli
pop
in
xchg
(bad)
int3
xchg
or
adc
mov
xchg
(bad)
test
in
and
pusha
pop
clc
out
inc
jo
retf
test
or
jle
cmc
xchg
pop
mov
retf
dec
addr16
mov
dec
stos
xor
data16
ja
call
pop
test
jp
dec
push
repz
lds
imul
jge
nop
out
xor
enter
jo
and
int3
sbb
xchg
inc
or
pop
mov
and
ins
sar
sahf
push
outs
das
jg
adc
cmps
adc
and
push
xor
daa
imul
rcr
test
cs
inc
ss
xchg
mov
into
inc
(bad)
js
sahf
mov
push
pop
es
inc
outs
sahf
cmp
(bad)
jmp
aas
mov
(bad)
adc
dec
jnp
cld
sbb
jae
pop
sbb
or
cmc
adc
xchg
inc
mov
and
(bad)
cmc
or
cmps
pop
push
cmp
ret
pop
shl
test
sbb
push
stos
or
mov
aaa
add
and
mov
dec
jb
adc
cmc
cld
ja
dec
xchg
mov
leave
mov
push
sbb
adc
xor
push
loopne
cmp
ja
sbb
dec
into
sysret
in
lds
setae
sahf
mov
in
hlt
pop
xor
dec
shl
or
xchg
call
inc
mov
push
jle
cli
cmp
dec
adc
stos
push
aas
fisttp
cwde
js
repnz
jecxz
mov
cmp
sbb
addr16
movs
pop
lods
push
cmp
arpl
rcl
lds
cdq
and
cmp
adc
pop
nop
sti
xor
mov
arpl
(bad)
and
cmp
inc
cmp
mov
pop
cli
repnz
sbb
xor
test
scas
and
not
sbb
jmp
inc
and
mov
push
outs
mov
dec
aam
cmp
imul
call
jecxz
adc
add
test
cmps
push
mov
sbb
(bad)
inc
sub
scas
ss
pop
fcom
pop
mov
jo
fwait
aad
shl
es
xchg
push
or
in
sahf
aas
sub
mov
dec
pop
pop
sbb
popf
mov
fadd
xchg
jmp
ret
dec
lods
cmps
nop
sbb
pop
adc
int
xor
(bad)
arpl
sub
push
int3
mov
out
test
int
push
fisub
aas
pop
int3
push
cwde
inc
cwde
ret
jb
mov
pop
xor
popf
(bad)
(bad)
lahf
sbb
push
pop
dec
pop
mov
fisttp
ss
dec
mov
cld
mov
sahf
mov
cmc
pop
mov
ret
mov
ds
test
outs
ja
sub
sbb
push
xchg
pop
test
in
dec
xor
jp
cmps
ins
mov
adc
mov
scas
fmul
(bad)
test
loop
inc
call
cmc
mov
jmp
pop
cmp
fmul
ins
jbe
jne
sbb
sbb
rcl
sar
repnz
dec
ins
pop
fs
push
lods
mov
inc
and
push
in
mov
nop
jo
ja
xor
lods
daa
mov
test
mov
cwde
sbb
cmp
inc
outs
cdq
mov
ins
cmps
push
arpl
jg
hlt
mov
pop
scas
sbb
dec
fisttp
call
es
pop
mov
retf
out
aam
mov
and
and
xlat
cli
xor
in
dec
pop
jnp
jmp
ret
(bad)
call
enter
jno
dec
mov
xchg
adc
popa
cmp
stc
addr16
cmp
mov
add
push
outs
sbb
or
push
mov
add
mov
and
popf
mov
xchg
jmp
jae
pop
mov
add
inc
sbb
adc
hlt
cmp
xchg
xchg
ret
and
and
push
dec
clc
adc
cli
loope
add
sahf
mov
mov
(bad)
pushf
fcmove
inc
fdivr
and
push
(bad)
lods
jbe
inc
stos
inc
cli
xchg
add
adc
sti
nop
sti
xchg
sbb
mov
sub
sub
mov
pushf
and
xlat
sbb
ror
pop
iret
xchg
add
int
sub
(bad)
sbb
add
imul
pop
jno
adc
icebp
mov
(bad)
mov
sbb
inc
cmc
cli
int
test
mov
stos
or
mov
xor
cmp
push
imul
aas
test
add
ror
call
dec
adc
js
je
mov
outs
je
adc
sbb
jo
fwait
cli
push
nop
rcl
rol
mov
xor
das
out
sbb
clc
xchg
mov
test
lods
dec
inc
iret
cmp
or
and
lahf
xchg
aas
adc
inc
sahf
mov
inc
(bad)
(bad)
xor
xchg
mov
or
imul
push
les
or
ret
add
(bad)
sahf
xchg
mov
in
std
pop
pop
scas
ficomp
sub
ror
sbb
mov
(bad)
mov
jns
cmps
and
aaa
pop
mov
fs
mov
xor
cmp
out
out
cli
sub
inc
test
pop
add
in
mov
xor
(bad)
int3
fld
fwait
scas
or
mov
add
(bad)
jl
dec
loope
inc
fldcw
sbb
mov
mov
or
and
xchg
xchg
fucomp
xor
pop
sbb
nop
outs
jecxz
mov
mov
ficomp
push
mov
out
pop
push
add
mov
ja
in
pop
add
test
jae
adc
lahf
mov
mov
cmps
mov
iret
pop
das
jno
and
push
in
jl
inc
cmp
repz
ret
and
and
js
inc
stos
jmp
mov
sahf
jo
xor
cli
mov
sbb
add
stos
or
into
jbe
pop
push
or
or
sar
(bad)
cmp
out
cmc
jne
pop
or
push
test
push
pushf
cmp
dec
push
xchg
xor
mov
addr16
xchg
mov
call
or
retf
ficomp
adc
inc
jmp
test
stos
sbb
cmp
scas
aas
clc
js
test
fwait
aas
out
xchg
dec
and
mov
sub
dec
(bad)
cli
jmp
mov
mov
ins
mov
xor
sub
aad
call
std
pusha
add
dec
mov
jno
mov
enter
aad
push
popf
retf
adc
sub
pop
mov
cwde
mov
jb
xor
pop
add
push
cmc
inc
dec
setae
(bad)
adc
out
sub
and
popa
lods
movs
ret
imul
movs
mov
sub
aaa
jl
das
js
push
and
das
mov
(bad)
jmp
aaa
sbb
and
je
push
cwde
mov
fs
mov
dec
xor
push
xor
addr16
vpcomub
and
dec
pop
cdq
push
movs
dec
clc
shl
test
jb
icebp
(bad)
movs
fild
and
ror
(bad)
xor
adc
mov
cmp
xchg
sub
sbb
jnp
fxch
or
ficom
dec
rcr
cmc
jns
les
sahf
adc
ds
lds
shl
es
sub
shl
mov
dec
sahf
push
sbb
rcr
js
jg
jl
outs
bound
mov
pop
push
xchg
xchg
pushf
add
inc
aad
aam
jmp
shr
movs
adc
mov
mov
add
aaa
dec
bnd
xor
cmp
cmp
outs
out
dec
shl
jmp
rcr
cmps
mov
aaa
mov
jbe
movs
sahf
mov
stos
icebp
mov
ja
sub
out
sbb
or
or
adc
cmp
cmp
jae
cmp
pop
push
pushf
icebp
add
add
stos
add
adc
push
push
cmps
add
jl
xchg
lds
rcl
cmps
fwait
jp
jns
int3
pop
lahf
inc
enter
mov
dec
(bad)
jmp
fmul
shl
mov
jle
es
adc
jmp
pop
outs
dec
test
or
xchg
das
call
rcr
aas
and
mov
in
lahf
aaa
mov
imul
jmp
inc
jl
cld
cdq
pop
xor
mov
jno
scas
cmp
jmp
test
sbb
ins
sub
into
ror
push
or
adc
dec
das
cmp
sbb
push
xchg
dec
(bad)
xor
and
add
int3
adc
xor
fwait
iret
(bad)
add
fcom
push
test
(bad)
in
dec
push
ror
jbe
div
mov
pop
pop
test
rcr
pop
sbb
inc
das
es
inc
fild
test
inc
repz
cmp
jns
jae
mov
xchg
cmp
adc
mov
push
mov
mov
or
shl
sub
pushf
adc
daa
pop
leave
dec
add
clc
loope
sub
and
jae
or
mov
cmp
jecxz
or
add
inc
in
sub
or
shl
scas
mov
(bad)
inc
outs
out
sbb
shl
bound
dec
xchg
fild
add
js
push
mov
test
mov
adc
stos
(bad)
or
test
fidiv
les
test
out
push
cli
mov
inc
mov
cmp
push
xor
inc
mov
fwait
gs
inc
mov
fcomp
add
cmpxchg
(bad)
out
sbb
pop
fild
mov
push
cmp
xchg
dec
inc
sbb
push
add
imul
fdivr
push
mov
mov
cmp
mov
call
jle
cmp
popf
arpl
mov
fcmovbe
add
xchg
push
test
mov
mov
cmp
adc
ins
mov
(bad)
add
sbb
jge
arpl
icebp
aam
inc
(bad)
test
(bad)
fstp
ss
xchg
(bad)
pop
inc
ret
cmp
jae
out
pop
xchg
(bad)
in
(bad)
mov
dec
xor
adc
mov
out
ret
pushf
int3
push
int
mov
add
fsubp
cmps
icebp
adc
ror
push
mov
fwait
pop
xchg
imul
mov
cwde
dec
sub
sti
cwde
shr
shr
push
icebp
imul
(bad)
and
and
mov
ret
in
push
loopne
sbb
xor
sbb
(bad)
scas
pop
std
lds
mov
lock
ret
(bad)
cmps
mov
sub
fdivr
add
push
jb
ja
imul
xchg
cmp
mov
adc
sahf
mov
or
dec
push
sbb
ins
and
out
leave
mov
pop
test
lea
pop
outs
pop
movs
nop
repz
fsub
mov
sub
jmp
sbb
es
imul
or
out
movs
lods
inc
(bad)
in
in
mov
enter
jno
clc
push
push
test
les
pop
sub
jo
pusha
in
fs
mov
mov
ss
xchg
mov
call
dec
sahf
xor
dec
std
xchg
mov
jl
mov
pop
jb
cmps
sub
lods
pop
aam
mov
addr16
mov
out
adc
pop
inc
xor
addr16
in
ins
in
dec
dec
jge
stos
mov
mov
pop
add
jns
lahf
aaa
xor
and
sub
ins
xlat
pop
arpl
xchg
push
push
mov
lds
cmp
inc
xor
pop
fist
pop
and
adc
jnp
and
mov
push
or
jb
in
jmp
sub
cld
div
mov
in
(bad)
retf
scas
retf
pop
(bad)
adc
mov
xchg
mov
add
adc
xor
mov
sub
mov
mov
pop
adc
add
push
enter
icebp
ret
in
imul
mov
xchg
and
daa
jge
imul
(bad)
mov
mov
push
in
inc
jmp
pop
aas
in
mov
jb
push
pusha
inc
push
pop
xchg
adc
mov
dec
das
out
cmp
fcmovnb
loop
sbb
lea
les
jl
in
enter
add
pop
aam
ret
dec
sbb
add
retf
out
jge
outs
jp
scas
repz
xchg
inc
mov
stos
dec
out
outs
out
ss
and
add
xchg
mov
mov
dec
ret
or
ret
(bad)
jmp
add
push
pop
pop
cmp
jp
(bad)
pop
sbb
in
cmp
add
cwde
xlat
dec
fwait
addr16
lds
leave
in
sub
jge
aaa
int3
inc
test
mov
sbb
mov
rcr
stc
loopne
jae
pop
adc
icebp
adc
call
test
mov
iret
xchg
sub
adc
pushf
xor
cmp
push
out
clc
inc
dec
aam
daa
sar
inc
test
mov
jmp
ins
inc
lods
sub
xor
js
push
cmp
sbb
or
into
sbb
fiadd
out
fyl2x
or
dec
xor
cs
inc
mov
jmp
outs
push
leave
jb
in
lods
lods
sbb
ja
stos
push
data16
ret
enter
mov
mov
mov
mov
pop
pop
shl
inc
xor
repnz
cmps
je
scas
xor
fild
aas
push
add
cmc
or
pop
and
pop
out
or
fisttp
lds
add
rcl
stos
sbb
retf
jl
pusha
or
jns
jmp
mov
and
adc
add
dec
push
ja
cmps
inc
aam
dec
int3
fnstenv
ror
rcr
dec
pop
lahf
lahf
xor
ja
mov
(bad)
popf
and
add
cmp
lock
aad
stos
cmp
test
in
xor
xlat
(bad)
sbb
data16
mov
or
loopne
iret
xchg
cmp
or
push
or
pop
call
mov
adc
dec
mov
jae
sub
dec
cmp
cmp
xchg
repz
xchg
bound
cmp
jnp
xchg
sub
int
mov
or
cld
aad
movs
sbb
call
push
out
cmp
jle
popa
xor
sar
ficomp
pop
mov
ja
xchg
or
xchg
mov
movs
add
add
push
aad
sbb
dec
add
add
push
cmp
lea
sub
mov
into
bound
cld
iret
test
push
sub
pushf
sar
fcom
dec
xchg
cmps
cmps
rcl
push
push
fcmovnbe
sbb
aaa
imul
gs
jmp
mov
repnz
in
sub
fwait
dec
or
jae
add
aaa
enter
mov
fwait
cmp
cmps
adc
xchg
adc
ret
pop
stos
ss
icebp
push
int3
out
sbb
(bad)
repz
js
xchg
aas
mov
(bad)
scas
add
or
mov
push
stc
ins
out
aaa
fdivr
sbb
repnz
add
mov
mov
lods
ret
ret
xor
sub
pusha
add
push
aam
and
lahf
push
fwait
push
lahf
popf
test
xchg
inc
daa
mov
cmp
(bad)
pop
aaa
jo
ins
cmp
jl
push
mov
mov
or
bound
or
rcl
std
xor
out
ins
jns
shr
mov
sub
xchg
stos
fadd
(bad)
mov
sub
lahf
sbb
add
jge
rol
cld
dec
es
sbb
popa
or
sbb
sbb
add
int3
or
sub
hlt
xchg
call
mov
aam
arpl
(bad)
lock
(bad)
data16
xor
pop
lock
sbb
aas
mov
ja
fcmovnu
cmp
mov
(bad)
cs
out
inc
dec
aas
xchg
push
sbb
xor
mov
xor
mov
icebp
div
lahf
clc
mov
xor
xor
scas
rcl
call
inc
pop
adc
pop
fbld
dec
xor
cmp
(bad)
lods
out
sar
push
push
mov
int
xor
int
mov
test
popa
jmp
mov
ret
inc
xor
icebp
cmc
mov
test
rcl
push
mov
not
nop
movs
cmps
scas
jo
xchg
dec
lea
fdiv
cli
xchg
cmp
mov
sub
int
jmp
and
out
or
mov
jmp
pop
test
fs
fdiv
cmps
gs
repnz
cmps
ins
ins
bswap
(bad)
retf
xchg
in
dec
or
push
or
jnp
pop
mov
adc
xor
dec
ins
or
inc
jp
sbb
push
pop
sti
lods
movs
imul
mov
mov
xor
repnz
dec
push
loope
push
jne
enter
dec
in
out
in
test
mov
scas
and
sub
pop
test
outs
push
imul
push
adc
jmp
dec
daa
lods
dec
adc
movs
scas
mov
xor
xor
int3
sbb
jnp
jmp
fcos
push
mov
xor
xor
mov
stos
(bad)
jbe
pop
add
outs
scas
imul
call
adc
push
nop
mov
imul
in
sub
mov
pop
xchg
sbb
shl
scas
test
sub
xlat
push
sbb
cmp
adc
jae
mov
jmp
xchg
shl
shl
adc
jmp
dec
pop
xchg
or
inc
rcr
mov
je
ss
lock
shr
xchg
xchg
dec
rol
pop
mov
add
retf
mov
sbb
mov
jo
adc
and
fistp
js
xchg
push
jnp
xor
je
in
dec
es
sub
mov
add
dec
cmp
popa
push
dec
cwde
pusha
inc
inc
push
mov
or
pop
jns
fistp
add
out
enter
mov
pop
rcr
movs
mov
xchg
lods
mov
mov
sub
inc
fucomip
mov
fidiv
jp
inc
or
out
or
lods
mov
xchg
cs
out
stos
sub
cmp
pop
lods
aas
retf
xchg
add
in
mov
mov
lods
enter
pop
stos
dec
mov
xchg
mov
rcl
jle
jg
cmp
dec
or
fisubr
repnz
jmp
sbb
cmp
push
fcomi
jae
adc
push
retf
or
cmps
out
pop
and
xchg
add
pop
dec
pop
xor
fs
jae
mov
and
cmp
add
mov
jmp
sub
mov
sub
pushf
sar
pop
or
and
lds
fisubr
sbb
sbb
pop
retf
mov
sub
jns
sub
ss
xor
shl
inc
mov
xchg
dec
out
mov
adc
out
add
stos
popf
call
pop
test
dec
push
jbe
mov
ror
sbb
jl
out
mov
mov
cmps
xchg
cmp
loop
aaa
ss
(bad)
fistp
stos
adc
xchg
mov
data16
out
mov
ins
pop
mov
push
scas
add
daa
cmp
mov
mov
mov
mov
cmps
(bad)
dec
les
les
lods
imul
sbb
arpl
mov
loop
das
popa
ror
inc
out
push
(bad)
adc
xor
(bad)
adc
outs
hlt
jmp
out
fchs
ss
es
inc
adc
ins
sbb
mov
test
add
push
jb
(bad)
mov
popf
inc
out
sub
xchg
not
int3
ins
bswap
sbb
xor
push
sbb
sub
fsubp
retf
mov
icebp
or
dec
inc
lea
adc
cmc
rcr
and
adc
jl
inc
(bad)
fiadd
sub
int3
push
inc
out
lds
nop
jno
loope
aaa
test
sti
into
inc
fmul
and
sbb
pop
add
add
adc
int
or
push
mov
push
loopne
pop
add
aaa
push
add
jg
inc
ins
xor
cwde
xor
mov
add
fiadd
std
jp
inc
cli
mov
jg
mov
inc
xchg
lods
sbb
pop
les
sub
ja
pusha
out
mov
loopne
or
fcomi
xor
dec
sub
cdq
pop
jle
or
lds
and
das
cmp
ret
adc
out
or
dec
cdq
ficom
mov
sbb
cmp
pop
add
hlt
mov
xor
mov
(bad)
aad
lods
sahf
mov
sahf
xor
fist
push
popa
(bad)
repnz
bound
mov
mov
lea
(bad)
pop
adc
inc
les
arpl
mov
dec
jp
cmp
inc
pop
mov
into
aad
push
shl
cmp
les
(bad)
jns
xor
inc
(bad)
outs
mov
jb
add
jmp
ret
iret
lock
loope
test
mov
jnp
gs
mov
clc
cwde
push
inc
sti
enter
sbb
dec
lods
pop
jp
or
fsubr
sub
movs
pusha
push
add
inc
movs
cmp
push
out
pusha
mov
mov
test
mov
xlat
int
add
push
int3
aad
je
jg
enter
(bad)
dec
dec
xchg
and
jge
aam
out
adc
cmps
dec
pop
or
xchg
lahf
ffree
(bad)
and
adc
mov
sub
mov
jne
sbb
daa
icebp
mov
(bad)
aam
test
inc
cmp
add
add
mov
hlt
push
mov
jno
out
sub
xchg
mov
mov
inc
test
fimul
aaa
ja
pop
cmp
(bad)
adc
stos
arpl
fisubr
jmp
push
cvtps2pd
jo
cmc
retf
hlt
std
jmp
xchg
fwait
in
cwde
in
mov
cmp
inc
outs
push
dec
add
or
fmul
mov
ds
outs
fistp
inc
clc
or
jp
jns
mov
fldenv
mov
lea
push
jp
xor
test
xor
push
fistp
and
arpl
xchg
shl
sub
xor
aaa
mov
cmp
xor
test
sbb
xor
cwde
cmc
mov
div
stc
mov
mov
and
push
sub
sar
mov
(bad)
pop
mov
out
rcr
gs
fsubr
inc
push
lods
xor
sub
lahf
push
xlat
add
and
leave
jo
scas
js
and
inc
inc
dec
(bad)
sub
add
xchg
adc
popf
imul
add
mov
jecxz
push
(bad)
lods
xor
mov
aaa
retf
aaa
repz
sbb
sub
setge
and
imul
inc
stos
xchg
les
xor
inc
sti
pop
scas
inc
fwait
test
sub
fmul
xlat
xlat
(bad)
add
push
pop
ret
mov
mov
cli
call
mul
mov
pop
mov
jae
xor
(bad)
mov
out
daa
lock
rcr
arpl
push
out
push
mov
idiv
dec
sahf
cmc
es
xchg
mov
ja
and
ins
push
test
mov
xchg
lds
movs
test
lea
add
sub
aam
jp
sbb
idiv
add
int
xchg
cli
xchg
adc
pop
hlt
imul
scas
mov
test
lods
mov
jne
mov
inc
xor
ins
into
(bad)
push
aas
or
add
sbb
gs
fimul
stos
aad
push
adc
xor
in
jle
rcl
sbb
aam
pop
xor
fbstp
cmp
cmps
inc
cli
add
mov
movs
popa
(bad)
xor
xchg
sub
add
shl
fimul
test
sbb
jo
fidiv
jge
out
rol
cwde
mov
fs
inc
dec
jns
jne
pop
cmp
mov
cwde
mov
dec
add
stc
stc
pushf
or
dec
jb
add
push
jp
(bad)
pushf
or
out
sub
pop
inc
or
call
inc
xchg
mov
pop
int
ins
sub
dec
push
arpl
mov
(bad)
pop
cmc
enter
out
push
cmps
and
push
scas
sbb
xchg
inc
add
loop
lock
bound
cmp
popa
mov
call
xchg
mov
retf
cmp
stc
jecxz
and
sbb
jnp
sub
test
mov
out
rcr
sub
mov
iret
jmp
jl
neg
pop
xor
(bad)
xor
pop
or
mov
ins
push
adc
jmp
adc
push
jb
ret
call
adc
dec
jno
add
mov
pop
arpl
jge
push
sbb
and
ss
ins
dec
jg
adc
xchg
or
scas
sar
movs
cmp
mov
mov
ins
imul
gs
or
stos
sti
mov
pop
enter
ret
sbb
push
xor
push
jae
dec
addr16
push
dec
dec
jae
jp
out
arpl
jns
and
cmp
adc
xor
repz
xor
or
shl
push
mov
cmps
push
sbb
ret
xor
xor
mov
hlt
ja
sahf
cmp
and
std
mov
loope
lods
int
sti
shl
or
xor
mul
mov
cmps
mov
mov
rcl
addr16
and
xchg
adc
je
mov
add
rcl
test
rol
movs
and
test
js
ret
shl
aad
cmp
mov
data16
sbb
push
push
ror
fst
or
sbb
sbb
ret
jl
xchg
out
int3
cs
cdq
fdiv
fs
push
mov
ss
int3
add
or
aad
mov
ret
dec
mov
idiv
push
and
cmps
movs
lock
shr
fmul
xchg
pop
scas
mov
mov
test
test
inc
push
test
dec
adc
mov
(bad)
rcl
jnp
dec
add
xor
xchg
rcr
mov
lock
pop
int3
rol
pop
or
lahf
js
cmp
pop
sub
in
mov
cmp
cmp
frstor
fsubr
daa
inc
mov
aam
push
(bad)
mov
push
cmp
or
pop
aas
mov
out
mov
int
sbb
adc
rcl
nop
xchg
push
cwde
sbb
cmc
mov
dec
jns
les
mov
iret
xor
or
aad
sti
push
mov
rol
(bad)
inc
sbb
jne
xor
shl
mov
lds
int3
and
sub
retf
sub
mov
xor
loope
fabs
pop
and
les
(bad)
push
shr
or
arpl
cs
fbld
xor
push
mov
add
retf
es
add
ja
retf
lods
jg
mov
mov
rcr
push
xchg
leave
fcom
fwait
inc
mov
loop
sbb
xchg
mov
loop
push
call
dec
mov
(bad)
movs
cmp
out
adc
push
jb
test
inc
push
lea
xlat
inc
or
lods
cmp
repnz
test
mov
shr
add
ss
imul
nop
test
sub
add
ins
cmp
(bad)
mov
repnz
mov
jge
pop
enter
sub
or
jge
ficomp
jmp
sahf
retf
mov
ret
loop
sbb
xchg
loop
xchg
mov
loope
lea
dec
cli
(bad)
mov
mov
pop
fidiv
push
xchg
movs
inc
sahf
mov
xchg
pushf
pop
mov
pop
ret
sbb
inc
and
xor
mov
push
aas
rcl
push
rcl
push
pop
repz
ficomp
dec
int3
dec
daa
out
inc
cs
fwait
psraw
pop
add
(bad)
jle
inc
int3
cmc
(bad)
arpl
cmp
ficomp
ror
jne
and
sahf
call
sbb
mov
inc
daa
fild
test
pop
rcl
stos
adc
dec
push
mov
add
fnsave
mov
fnstsw
test
cmc
pushf
idiv
(bad)
mov
jno
sar
jne
cld
dec
popf
fwait
bswap
push
mov
jns
adc
cmps
push
pop
sub
arpl
sbb
pop
enter
push
test
movs
cmp
and
sbb
cdq
pop
jl
lods
xchg
sahf
mov
and
out
(bad)
jle
pop
xchg
outs
daa
lods
fdivr
and
(bad)
retf
sbb
iret
or
(bad)
outs
jp
and
seto
int3
add
push
shr
les
icebp
xchg
and
fucom
cmp
cs
movs
in
adc
arpl
push
jbe
and
push
sbb
lods
cmp
cmps
push
and
cmp
fcom
mov
mov
xchg
push
mov
inc
lea
retf
cmps
xor
in
mov
mov
lods
jp
sbb
and
pop
popa
ficomp
add
cmp
rcr
mov
mov
lods
push
(bad)
xor
ret
sbb
mov
lock
icebp
xchg
mov
and
cmp
mov
push
sar
mov
aaa
dec
mov
outs
cwde
jbe
mov
and
mov
sub
ror
shr
sub
test
ins
pop
cld
in
(bad)
and
movs
adc
mov
mov
mov
xchg
jmp
and
mov
ss
jmp
mov
push
push
mov
ror
and
dec
test
sub
mov
pop
stc
xor
lea
aaa
dec
aas
scas
adc
and
test
add
jmp
xor
and
sahf
mov
call
xor
mov
push
cwde
daa
and
jnp
dec
shl
inc
and
pop
mov
lods
dec
mov
mov
push
jecxz
out
xor
aaa
inc
ror
adc
pop
mov
stos
scas
(bad)
jle
sti
call
and
fldenv
stos
neg
push
xchg
aad
lahf
adc
inc
aaa
cmp
pop
dec
(bad)
adc
mov
jl
add
inc
mov
call
cmp
fisttp
mov
pushf
mov
(bad)
js
(bad)
(bad)
cmps
daa
(bad)
popa
(bad)
lahf
repz
jns
mov
push
fmul
cmp
sbb
addr16
mov
sbb
test
fnstenv
xor
pop
mov
pop
inc
ror
(bad)
sub
push
stos
imul
pop
pop
xchg
and
inc
cdq
dec
jmp
inc
clc
inc
cli
ret
lods
jl
aad
mov
js
xor
pop
add
retf
mov
dec
repnz
outs
jp
pop
push
fsubr
lahf
loope
in
cli
fistp
rcr
jb
repz
mov
push
or
jns
ficom
push
or
ja
cmp
mov
add
mov
aas
mov
setg
inc
jg
clc
adc
or
test
push
sbb
mov
lahf
push
shr
jmp
sub
sub
shr
scas
cmp
add
addr16
push
iret
sub
test
add
pop
icebp
sbb
and
in
mov
xor
sub
stos
sub
out
mov
mov
xchg
adc
iret
ficom
jno
xchg
sbb
daa
sbb
out
mov
inc
outs
xor
retf
fadd
pop
stos
adc
fnstcw
push
cmps
retf
(bad)
cmp
add
(bad)
push
xor
ficom
or
or
mov
push
imul
bound
sar
mov
arpl
mov
cs
cmps
mov
out
sahf
loopne
pusha
sub
popf
xor
xor
mov
cmp
dec
mov
out
(bad)
daa
repz
std
xor
mov
rcl
rol
repnz
aam
fnstcw
xor
fst
shr
imul
jbe
repnz
jle
push
inc
jp
imul
mov
inc
jecxz
sahf
fnstcw
mov
iret
bound
leave
fld
xchg
mov
mov
icebp
jae
les
mov
sub
mov
call
in
xchg
push
xchg
outs
hlt
inc
call
lods
rcr
pop
add
pop
inc
mov
mov
sbb
cmp
cmp
sbb
cmp
shl
clc
inc
cmp
jmp
xchg
fs
inc
xchg
aad
cmp
icebp
cld
dec
xchg
mov
mov
stos
mov
lods
pop
retf
or
mov
enter
jnp
retf
sub
(bad)
pusha
mov
data16
ror
mov
sahf
cmp
(bad)
and
dec
dec
in
sub
push
aad
int3
xchg
retf
sub
pop
lods
mov
icebp
push
dec
sbb
std
in
pop
rcl
test
inc
ins
ss
std
inc
mov
ins
sbb
shl
fwait
or
cdq
dec
xchg
xor
mov
xor
scas
pop
push
pushf
leave
jl
cmp
inc
rcl
nop
das
push
gs
mov
mov
movs
fwait
std
movs
pushf
outs
push
stos
and
push
and
lahf
mov
nop
popf
cmp
cmp
cmp
rcl
and
adc
div
mov
ret
out
adc
sub
lods
inc
sub
clc
xor
inc
jle
mov
loop
icebp
in
stos
(bad)
in
pop
lahf
enter
add
out
pop
push
fstp
add
and
and
addr16
xor
and
sub
call
jnp
xor
pop
xchg
inc
or
sbb
test
test
lods
dec
mov
jp
fnstenv
xchg
cld
add
mov
jne
jo
neg
adc
aaa
or
movs
icebp
ins
call
loope
jl
push
data16
push
movs
xor
movs
es
dec
mov
add
scas
or
sbb
xor
ror
scas
add
outs
inc
outs
test
cmps
stos
out
push
jle
je
(bad)
cmp
xchg
mov
add
ret
push
(bad)
mov
lahf
add
popa
pop
or
and
mov
mov
sub
sub
(bad)
out
out
scas
(bad)
in
outs
iret
xchg
mov
ffree
nop
inc
das
sub
psubq
neg
pop
je
mov
jp
mov
add
push
xchg
pop
(bad)
mov
sub
mov
mov
dec
sub
test
sbb
(bad)
pop
xor
dec
push
mov
xchg
aam
or
mov
(bad)
push
xor
jbe
ret
sbb
add
mov
and
rol
ds
push
pop
(bad)
jb
xchg
sub
repnz
sub
sub
or
stos
(bad)
sub
mov
adc
fcmovbe
or
inc
(bad)
fisttp
das
jne
cmp
xor
or
shr
call
fsub
scas
jmp
mov
call
test
mov
pop
inc
jmp
jl
xchg
xchg
or
add
jecxz
daa
out
loope
sub
mov
mov
popf
pop
movs
ds
enter
xchg
dec
ds
in
popa
push
pop
movs
push
fisub
cmp
stos
cwde
aam
sahf
jbe
(bad)
nop
ror
ficomp
xchg
jo
pop
idiv
jno
jmp
clc
add
pop
(bad)
dec
xor
test
xchg
cwde
adc
dec
mov
sbb
ficomp
sub
pop
sbb
mov
cmps
sysenter
cmps
packuswb
mov
pcmpgtw
push
adc
jmp
xchg
out
ret
add
cmp
mov
retf
clc
mov
bound
cmps
mov
mov
ror
sbb
sub
dec
xchg
sar
pop
sub
out
xchg
xchg
(bad)
jg
pop
ret
call
mov
adc
cmp
sub
ins
js
mov
cmp
lea
shr
cld
shl
xchg
rol
or
repz
push
hlt
daa
icebp
cmps
scas
int3
dec
or
js
or
(bad)
int3
or
lods
popf
out
inc
xchg
xchg
scas
div
mov
adc
dec
xor
scas
das
dec
jnp
cmp
push
push
xchg
or
xchg
sub
mov
mov
cmp
loope
fld
imul
mov
cld
loop
pusha
or
push
or
cmp
xor
inc
or
pop
jg
retf
push
fcmove
(bad)
aad
loop
loope
in
dec
dec
dec
sub
ud2
mov
cdq
inc
pop
retf
repnz
sbb
mov
repnz
jae
fldenv
imul
and
enter
jecxz
xor
mov
mov
xor
mov
(bad)
sub
push
mov
iret
xchg
sbb
and
sub
cmp
xor
and
das
push
or
popa
jbe
inc
fimul
aam
mov
mov
ds
push
nop
or
xchg
pusha
(bad)
imul
and
mov
mov
xchg
test
cmp
inc
cmc
add
iret
cld
lea
call
loopne
fs
dec
xchg
pop
arpl
mov
call
mov
bound
ret
push
mov
sbb
(bad)
retf
inc
cdq
inc
push
push
movs
xchg
(bad)
mov
out
jnp
and
mov
pop
jg
imul
fdiv
sahf
jmp
aaa
test
add
dec
lods
out
pop
in
lods
bnd
cdq
jmp
(bad)
mov
pshufw
cdq
inc
mov
xchg
into
loop
jmp
xchg
fsub
not
push
loopne
into
gs
xchg
mov
test
rcr
fild
mov
fld
aad
cmp
xchg
mov
xchg
fwait
test
add
lds
add
adc
add
sahf
mov
mov
add
popf
out
fist
cs
movs
sbb
jno
ins
dec
ins
stos
out
imul
pop
les
push
in
pop
or
mov
sti
jg
adc
jae
addr16
shl
retf
ins
xchg
or
jno
enter
ret
mov
mov
leave
push
push
lock
inc
repnz
stos
push
jo
and
(bad)
cli
and
mov
aaa
es
popf
les
jne
dec
jmp
cmp
test
(bad)
jge
fmulp
arpl
outs
jnp
cmp
inc
jb
pop
cmp
or
ins
pop
call
dec
dec
mov
fidiv
jmp
pop
mov
pop
outs
movs
enter
xchg
mov
push
jb
mov
inc
mov
push
xchg
inc
or
xchg
das
mov
pop
je
cwde
cmp
sub
inc
pushf
loope
jmp
test
and
push
les
ins
shl
(bad)
fldcw
cmp
out
das
fs
in
add
or
inc
inc
cwde
push
pop
jle
mov
rcr
push
xchg
icebp
adc
mov
mov
(bad)
pop
cmp
pop
sub
shl
ds
or
(bad)
gs
mov
pop
or
cwde
loop
aas
xor
bound
in
in
cmc
mov
test
inc
mov
push
int3
mov
or
pop
xchg
dec
jnp
(bad)
sub
retf
xor
retf
jl
test
fiadd
das
scas
mov
sub
and
or
mov
imul
xor
push
cmps
adc
ins
inc
ds
lods
add
mov
jno
mov
fisubr
ds
pop
sub
xor
arpl
(bad)
and
jnp
mov
in
mov
and
scas
xor
push
push
mov
cmp
imul
cwde
xlat
(bad)
xor
jne
cli
(bad)
cmp
popf
mov
cmp
repz
pop
xchg
jae
dec
mov
ror
scas
aad
fucomip
mov
fwait
mov
and
stc
ds
mov
enter
ins
test
pop
jle
pusha
mov
or
cmc
mov
loop
int3
jb
dec
std
cdq
xchg
inc
cwde
push
adc
push
inc
call
mov
pushw
dec
cmps
(bad)
mov
mov
dec
dec
fistp
dec
shl
mov
ret
rol
dec
mov
fld
xor
popa
bound
dec
xor
arpl
mov
dec
lahf
call
sub
div
aaa
shl
iret
jge
sub
sbb
mov
jb
and
sti
pop
loope
xor
mov
ins
or
pop
adc
sti
clc
jb
cwde
ret
hlt
push
rcr
test
es
sbb
jmp
outs
pop
sar
cwde
mov
retf
adc
loop
mov
xchg
push
jb
std
cs
outs
mov
mov
sbb
xor
movs
xchg
jns
lahf
test
pop
sub
mov
sub
aas
add
ret
mov
inc
stc
out
mov
xor
inc
push
mov
mov
imul
test
xlat
push
cmps
cwde
pop
sub
pop
fadd
xchg
jmp
popf
or
test
sub
xchg
nop
mov
bound
inc
test
jmp
ret
mov
jo
and
xor
inc
popaw
js
adc
adc
test
mov
mov
pop
jge
ror
ins
xchg
cmc
mov
cmp
xchg
jp
test
(bad)
out
mov
sub
dec
jnp
test
adc
cmps
fild
sahf
push
or
inc
sbb
jbe
shl
mov
or
inc
sub
dec
loope
jns
xchg
scas
push
jae
fwait
sub
push
in
mov
pop
sbb
inc
pop
shr
push
mov
and
or
daa
stc
adc
push
adc
(bad)
or
sbb
push
jl
cmp
repnz
mov
dec
call
push
mov
pop
sub
aaa
mov
sbb
mov
sbb
or
cdq
and
inc
(bad)
call
fiadd
mov
movs
add
cmp
scas
or
bound
scas
rcr
jne
cwde
inc
cmp
add
cmc
enter
inc
mov
ss
hlt
jno
jne
sbb
or
sub
sar
sbb
cwde
jne
push
jne
mov
es
cmp
jg
xlat
(bad)
rcl
sub
imul
push
pop
pop
sti
hlt
fdivr
test
or
sub
fnstenv
pop
ret
adc
pop
cmp
fisub
aaa
test
mov
fild
add
adc
pushf
mul
enter
xor
xor
out
mov
ins
add
daa
loop
adc
pop
mov
das
pop
ja
add
add
jns
mov
rol
inc
rcr
lods
shr
push
aam
inc
dec
test
inc
stos
shl
sub
jae
cli
mov
in
dec
mov
jp
scas
(bad)
cld
sub
adc
leave
push
rol
xor
shl
xchg
inc
pop
popf
adc
maskmovq
idiv
rep
or
es
sub
adc
mov
jmp
xchg
imul
push
(bad)
outs
and
(bad)
fcom
bound
xor
inc
dec
lods
outs
sbb
or
aam
icebp
xchg
sbb
add
stos
ret
imul
test
ret
push
xor
ins
out
or
pop
sbb
stc
sti
mov
pop
mov
cmps
(bad)
int
fimul
in
test
popf
xchg
sbb
cpuid
push
jecxz
repz
fs
movs
xor
shr
dec
leave
cmps
push
mov
retf
jmp
add
push
arpl
pop
jns
adc
nop
test
inc
push
in
adc
mov
cli
cmp
movs
inc
aad
test
and
les
movs
jb
sub
xor
int
xor
div
inc
ins
and
push
adc
hlt
xchg
aas
jne
cmps
ret
aaa
movs
cmps
cmps
pop
in
mov
push
stc
and
pop
jmpw
and
mov
daa
xchg
loop
mov
sti
popf
sub
je
mov
mov
das
pop
inc
pusha
mov
outs
inc
(bad)
jle
dec
mov
sub
hlt
inc
cmp
into
fcmovbe
mov
leave
xchg
and
xor
adc
add
in
test
dec
fist
jge
dec
in
push
fsub
jmp
mov
sbb
dec
(bad)
popa
sbb
dec
sub
ins
pop
xchg
sub
and
gs
push
sub
sub
xchg
daa
iret
scas
adc
and
sub
xchg
or
sti
mov
inc
jp
outs
out
(bad)
in
sbb
jnp
gs
hlt
into
loopne
in
dec
cs
cmp
mov
ss
add
or
xor
jmp
adc
mov
push
ds
pushf
dec
pop
inc
outs
adc
mov
add
jne
stos
or
retf
xor
xor
dec
rol
dec
sub
inc
dec
ds
cmp
pop
dec
jno
fstp
(bad)
repnz
test
jle
xchg
pop
lds
retf
and
push
mov
pop
mov
cmp
out
je
je
push
popa
jg
sub
inc
push
scas
xchg
cld
push
stos
adc
add
and
jne
fild
xchg
add
add
push
sub
sub
push
cmp
retf
jle
push
leave
mov
cs
mov
xor
push
in
push
xor
ret
jl
ret
mov
adc
lock
pop
ret
(bad)
mov
xchg
mov
xsaves
call
ret
xchg
sub
push
xchg
movs
scas
adc
push
xor
loopne
inc
clc
enter
movs
and
(bad)
ins
ja
icebp
js
pop
gs
ja
ret
xlat
nop
mov
pop
mov
pop
xor
mov
jno
mov
jno
js
adc
xchg
es
jno
sub
dec
into
or
punpckldq
mov
(bad)
push
or
repnz
inc
sub
arpl
jne
popa
ins
inc
(bad)
and
imul
cmp
push
xor
cmps
mov
mov
repz
in
movs
pop
movs
cmp
mov
inc
(bad)
jo
repnz
out
outs
or
pop
popf
adc
clc
(bad)
xlat
mov
movs
dec
cmp
cwde
adc
fidiv
push
jo
mov
ins
sub
and
sbb
pop
addr16
adc
lahf
push
jp
pop
jae
fild
jmp
push
add
dec
sbb
mov
enter
movs
pop
dec
repnz
outs
and
arpl
gs
inc
retf
pop
jecxz
push
je
int3
pushf
cmp
xor
sti
sub
mov
arpl
cmps
loopne
xlat
pop
sub
in
test
ds
and
es
test
stc
sti
fnsave
stc
inc
add
sbb
pop
jmp
cmp
or
test
leave
mov
imul
(bad)
out
or
(bad)
fist
dec
popa
and
mov
dec
inc
enter
cmp
mov
pop
and
mov
pusha
cmp
int3
call
loope
or
(bad)
xchg
push
cwde
lods
inc
imul
js
aad
jmp
arpl
leave
adc
icebp
pop
test
jmp
in
shl
cs
sar
pushf
add
sbb
mov
sbb
dec
push
idiv
cmps
pop
neg
push
test
inc
sub
aam
xchg
repz
es
int
aam
(bad)
adc
out
clc
cwde
iret
aaa
dec
repz
xchg
hlt
(bad)
fbld
mov
mov
add
stos
(bad)
pop
adc
retf
test
retf
loop
pop
push
inc
mov
jbe
mov
push
stos
mov
not
dec
sbb
dec
clc
fcmovne
push
sub
jbe
scas
add
cmp
adc
das
sbb
aad
mov
add
mul
push
jecxz
fdiv
lods
fsub
cmps
sub
neg
adc
inc
pop
test
leave
aad
iret
mov
addr16
nop
adc
inc
mov
aam
sub
cld
nop
push
cwde
lods
test
mov
into
push
xor
outs
push
daa
(bad)
pop
lock
xchg
inc
shr
repnz
je
and
fwait
in
xor
fldenv
imul
and
out
in
jne
adc
sti
popf
sub
mov
dec
xchg
movs
xchg
sbb
add
ret
add
aam
pop
fs
sbb
dec
in
cmp
pop
xchg
or
clc
inc
stos
enter
js
adc
ret
data16
lods
fs
ret
(bad)
fisttp
leave
adc
and
cmp
dec
sub
mov
xor
dec
xchg
cmps
sub
mov
jns
adc
fild
mov
fwait
mov
adc
outs
inc
in
loop
pop
xlat
mov
fstp
adc
js
je
cmp
mov
(bad)
in
pop
add
jg
push
stc
pop
cmp
jge
mov
xlat
sub
inc
xchg
out
sti
or
cmp
ds
xor
mov
(bad)
sub
sbb
add
pushf
sbb
mov
xor
fsubr
xchg
push
jg
cmps
outs
xchg
das
inc
sub
or
push
iretw
jmp
and
and
cmps
lods
stc
std
(bad)
loopne
xor
outs
push
push
xchg
je
add
and
into
or
fwait
jg
ss
cmc
or
retf
enter
lds
ret
out
into
xchg
adc
jp
lods
mov
adc
call
inc
lds
mov
add
add
lods
out
inc
rol
dec
inc
test
int3
pop
push
adc
xchg
jmp
mov
pushf
das
dec
push
adc
cmp
sbb
dec
mov
and
sub
shr
ins
fidiv
inc
and
and
imul
or
mov
scas
or
mov
pop
loop
vmovupd
outs
int3
inc
xchg
shl
ja
mov
fs
jl
and
push
cmp
and
loop
add
or
imul
jnp
sar
jnp
adc
dec
jb
jmp
sbb
push
call
popf
ins
and
cmps
mov
loop
mov
and
test
repz
hlt
adc
jmp
test
xor
pop
mov
call
into
mov
jnp
xor
jo
inc
cmp
and
mov
sub
test
pop
fdivrp
jmp
adc
add
pop
inc
outs
icebp
cmp
sbb
pop
mov
cdq
xchg
push
aas
pushf
pop
fninit
aaa
rol
in
push
mov
mov
jg
adc
lahf
push
enter
cmps
jecxz
in
and
fcomp
and
jnp
mov
xchg
das
or
rcr
and
adc
sahf
fisttp
xchg
cmp
out
ret
mov
call
and
pop
test
fist
push
popa
mov
and
out
lock
bound
or
xor
cmp
inc
cmp
adc
jg
sbb
ret
mov
and
xor
mov
sbb
jl
mov
cmp
scas
jmp
dec
mov
jmp
(bad)
fucomip
sub
lahf
push
xor
(bad)
mov
je
mov
sahf
mov
adc
call
dec
inc
or
mov
aas
scas
pop
ret
into
pop
push
int
cmove
pop
mov
popa
mov
xchg
jl
mov
stos
fmul
fimul
lods
leave
cmc
and
sahf
fldenv
lds
aaa
and
pop
imul
xchg
fdiv
sub
call
out
jne
pusha
lods
fnstenv
in
inc
stos
cmp
mov
mov
jmp
push
xor
jmp
mov
std
arpl
test
in
(bad)
repz
sub
bound
lds
(bad)
adc
jnp
icebp
test
ins
jmp
out
mov
(bad)
or
add
pop
push
loop
cmps
cmp
loopne
out
enter
mov
or
push
jne
sahf
or
and
cmps
mov
mov
mov
mov
sub
pop
test
sbb
stc
sbb
jns
jne
cmp
fwait
ror
mov
pusha
fcom
xor
stc
pop
xchg
popf
loopne
adc
adc
lahf
add
int
pop
fst
out
lock
inc
ins
rcr
mov
jmp
cdq
mov
imul
dec
and
in
mov
add
bound
popfw
or
iret
dec
xchg
daa
and
jl
push
ds
movs
imul
dec
jmp
(bad)
sbb
mov
pusha
add
call
inc
push
adc
and
mov
xor
dec
sbb
and
and
add
ds
dec
out
adc
and
sub
pop
ror
out
mov
and
(bad)
xor
jmp
pop
pop
cmp
adc
xor
jae
std
pop
adc
call
movs
mov
jns
test
push
div
ror
add
movs
cmp
(bad)
enter
push
push
cmp
std
mov
scas
imul
(bad)
jb
in
adc
mov
push
and
sub
scas
pop
in
inc
test
test
pop
lds
mov
hlt
pop
and
and
add
mov
xor
cmc
jo
mov
aam
pop
sbb
out
jo
pop
loope
cmps
mov
popa
push
enter
rcr
mov
jle
jno
sti
jl
adc
sbb
sbb
pusha
scas
pop
sub
out
inc
lahf
mov
into
scas
fst
jmp
bound
cmp
inc
fldenv
add
push
aad
aam
pop
mov
mov
out
mov
cmps
mov
sar
rol
pop
sbb
pop
pop
(bad)
ds
retf
push
test
mov
test
pavgb
out
pop
(bad)
sar
pop
add
lods
jnp
cwde
jb
repz
cmp
into
out
test
jg
js
fsub
inc
aam
jno
repnz
inc
dec
fstp
jo
cmps
int3
ins
test
pop
pop
fmul
movs
add
(bad)
mov
jns
bound
xchg
or
into
inc
jne
mov
call
jmp
add
cwde
sbb
mov
rcr
pop
pop
dec
add
ss
aad
jno
mov
scas
cmp
hlt
sub
push
and
es
dec
cmps
push
mov
(bad)
out
lods
std
nop
push
mov
cdq
scas
int3
mov
popa
mov
ficom
bound
mov
sti
dec
mov
outs
in
add
add
(bad)
cmp
xchg
loope
or
inc
adc
mov
and
dec
cdq
jo
cdq
sbb
jns
popa
repnz
jmp
lahf
push
(bad)
hlt
mov
lea
or
ins
cmp
jns
or
fiadd
mov
shr
fstp
in
dec
or
fidivr
in
jle
mov
hlt
mov
cmps
dec
jge
fstp
fdiv
cmp
addr16
imul
mov
mov
and
cmc
and
push
aad
lock
dec
mov
jne
adc
jmp
mov
jge
add
pop
cmc
ror
fdiv
sahf
mov
cld
out
dec
repz
jns
add
fwait
lea
pusha
or
jb
imul
inc
lahf
neg
inc
cmp
daa
stc
sub
mov
bound
fild
mov
or
and
and
push
test
js
cmp
lods
mov
add
out
sahf
in
xchg
cmp
enter
loope
dec
push
mov
and
pop
mov
and
out
sbb
mov
aad
sub
pop
sub
inc
or
inc
mov
fs
jg
and
or
into
inc
push
xor
mov
sar
mov
mov
add
cmps
test
xchg
setne
bound
sbb
push
lds
jp
cmp
jbe
mov
jno
mov
xor
cld
cmp
call
stc
aas
mov
imul
leave
cmps
popa
mov
mov
mov
dec
in
sbb
cmp
aam
dec
mov
pop
push
or
packsswb
or
movs
sub
jb
pop
push
and
xchg
test
int
clc
inc
xchg
inc
dec
or
mov
movs
xchg
mov
(bad)
push
push
xchg
rol
mov
xchg
(bad)
imul
ret
in
push
adc
mov
in
call
adc
aas
dec
or
(bad)
popf
iret
adc
outs
das
sbb
int
(bad)
repz
(bad)
pusha
push
or
pop
push
push
pop
(bad)
fist
movs
movs
fs
out
and
sbb
and
xchg
mov
popa
fwait
lods
nop
xor
xchg
sub
shl
pop
dec
mov
aas
adc
mov
ins
mov
pop
in
out
das
xchg
aas
mov
loope
cmp
shl
add
or
in
xor
out
and
cld
push
stc
loope
cdq
psubw
pop
fcom
lock
es
sub
or
outs
out
xor
or
call
iret
dec
dec
sahf
push
sub
stc
stos
xchg
or
stc
jge
pushf
(bad)
int
sub
add
adc
rcr
push
and
mov
cmp
iret
cwde
fisub
fsubr
dec
sub
mov
pop
jecxz
(bad)
mov
mov
dec
cmp
mov
stc
mov
int3
inc
movs
aas
mov
and
cdq
push
xor
mov
pusha
in
cwde
xor
fsub
sbb
sar
sub
xor
mov
clc
sub
clc
int
(bad)
js
(bad)
fadd
cmp
js
dec
dec
not
scas
fiadd
(bad)
xor
and
jle
push
jmp
imul
dec
int3
mov
and
outs
das
xchg
clc
loop
adc
fild
dec
push
push
cmps
dec
leave
add
hlt
repz
mov
shr
into
fs
ror
jne
js
icebp
mov
cmp
hlt
aas
aas
cdq
fld
out
stc
mov
leave
pusha
pop
and
jp
xor
cdq
cmps
imul
out
pop
xor
sar
push
call
sbb
mov
sbb
mov
sub
int3
cmp
sub
sbb
mov
mov
into
jle
xchg
ficomp
std
rol
jno
sahf
add
loop
and
scas
add
add
into
pop
bnd
mov
ficom
test
in
push
mov
pmaddwd
cmp
xchg
mov
jge
jp
outs
popa
cmp
outs
or
push
pop
jns
fdivrp
jp
(bad)
loopne
xlat
je
xchg
mov
fwait
and
mov
sbb
and
add
jne
rol
mov
or
xor
sub
sti
inc
mov
xchg
cmp
cld
hlt
xor
aam
or
push
push
mov
add
dec
cwde
fisttp
data16
repz
imul
or
lods
test
push
mov
stos
sub
sub
sub
and
xor
and
vandpd
addr16
neg
or
add
xor
mov
and
inc
jge
ins
dec
ins
cwde
in
ret
shl
fisubr
sub
dec
dec
mov
rcr
mov
hlt
or
ret
inc
xor
xchg
ins
loopne
out
test
inc
outs
cdq
or
push
shl
fisubr
ficom
aaa
cmp
jno
xchg
jne
pop
movs
out
or
cld
gs
lock
cwde
out
mov
adc
pop
pop
cld
cs
pop
imul
pop
lahf
bound
xchg
ficomp
and
push
xchg
push
sbb
pop
inc
movs
xchg
outs
in
call
inc
xchg
adc
ins
daa
mov
sub
out
pop
popf
push
dec
dec
add
sub
xor
mov
loopne
add
cmp
mov
jmp
mov
push
xchg
jmp
ret
xchg
ds
inc
pop
dec
push
sub
sub
sti
add
ss
xor
mov
aam
sub
inc
inc
mov
dec
xchg
pop
test
cmp
adc
add
and
in
jge
in
dec
movs
sub
gs
jae
js
imul
push
mov
adc
test
outs
sbb
mov
or
mov
aam
push
jb
cmp
(bad)
jecxz
mov
ins
mov
dec
sub
inc
add
pop
sub
mov
inc
push
and
lods
sar
inc
shl
mov
xchg
jmp
jmp
push
and
pop
push
out
mov
pop
lahf
(bad)
xchg
jns
invd
jne
outs
pushf
ins
movs
push
sub
(bad)
ins
mov
cmp
xor
xlat
pop
hlt
mov
cwde
push
inc
clc
mov
mov
mov
xor
out
sbb
xor
in
mov
xor
mov
sbb
aad
jb
mov
mov
call
and
mov
stos
sbb
ret
mov
in
sbb
xchg
push
inc
sar
mov
call
(bad)
in
dec
sbb
pushf
es
test
mov
call
mov
icebp
jo
pusha
sahf
ds
and
adc
xor
inc
test
pop
push
test
jle
cmc
mov
(bad)
test
stos
movs
pushf
pusha
sbb
test
push
mov
outs
leave
push
loopne
shr
and
pop
adc
scas
pop
lods
inc
pop
jns
push
out
icebp
cmc
jns
jmp
mov
leave
add
(bad)
jp
sbb
jle
sbb
sub
mov
sub
jae
mul
ret
xchg
jbe
pop
out
add
pop
out
mov
cdq
mov
adc
pop
cli
sti
call
js
nop
lods
aaa
fsubr
bound
sub
arpl
sbb
movs
inc
sub
xor
add
cmps
iret
mov
sub
jno
adc
adc
arpl
loop
cmps
xchg
idiv
or
outs
pop
aad
test
xchg
xchg
imul
adc
jns
sub
gs
lods
pop
pop
jnp
xor
fxch
out
mov
mov
nop
retf
push
mov
stos
outs
out
pop
bnd
stos
(bad)
push
mov
icebp
sbb
enter
les
data16
shl
(bad)
or
xor
pusha
outs
retf
das
inc
pop
xchg
add
popa
mov
xchg
out
dec
mov
mov
sbb
mov
ins
imul
cmps
pop
aaa
or
test
xor
leave
js
imul
cmps
sbb
(bad)
retf
call
rcr
sub
imul
in
mov
lahf
jns
or
xor
or
mov
paddq
dec
jb
mov
jb
jno
repz
aaa
cli
in
inc
or
scas
ja
mov
mov
movs
jg
pop
xchg
dec
inc
mov
outs
scas
ror
fiadd
inc
lods
dec
adc
ja
shr
add
fcomp
push
fiadd
dec
xchg
pop
mov
mov
xor
test
push
imul
dec
retf
xlat
loopne
and
mov
push
adc
outs
mov
addps
arpl
mov
lods
adc
cmps
push
fcom
jmp
sub
in
push
enter
lahf
inc
xchg
fistp
sbb
ror
sub
fisttp
push
shl
xchg
mov
call
sahf
cmp
idiv
fld
std
imul
shl
mov
mov
and
popf
dec
(bad)
in
hlt
cmp
test
mov
pop
pop
mov
jb
(bad)
pop
inc
(bad)
push
xchg
mov
test
jg
sahf
sbb
sbb
js
add
jnp
pop
inc
aam
fisub
adc
and
or
xor
jae
fbld
bound
icebp
daa
xchg
ror
scas
retf
and
rcr
int
cmp
mov
jnp
add
in
push
pop
jle
(bad)
cmp
mov
jle
dec
lahf
mov
jecxz
inc
push
sbb
repz
mov
xor
movzx
jp
int
popa
int3
mov
pop
pop
pusha
pop
add
mov
xchg
mov
sbb
adc
inc
std
imul
push
in
mov
add
mov
jg
ins
cdq
pop
retf
add
aaa
mov
and
pop
lods
push
add
js
sbb
push
idiv
jbe
into
inc
sahf
aad
xchg
call
popf
mov
mov
mov
repnz
mov
jns
jbe
fwait
stos
dec
iret
popf
test
int3
sahf
or
mov
fcmovnbe
push
fs
mov
sub
imul
das
shl
mov
and
mov
int3
xor
data16
in
outs
adc
ja
addr16
add
fwait
sahf
stc
int
fwait
or
arpl
adc
jmp
mov
dec
int3
push
lock
sbb
dec
push
and
in
sub
jmp
push
push
push
iret
pop
iret
xchg
addr16
mov
ja
retf
pop
sub
in
sub
out
movs
xor
mov
dec
jmp
or
dec
rol
call
std
shl
push
fdiv
pop
push
mov
push
dec
(bad)
leave
dec
push
jecxz
pushf
jbe
or
sub
dec
mov
or
mov
pop
pop
and
popf
adc
fcom
sub
push
outs
or
shl
push
mov
cmp
add
xchg
inc
xor
movs
mov
jns
sub
adc
adc
xchg
iret
adc
or
xor
std
mov
cld
xor
mov
sub
jmp
arpl
xchg
mov
fnsave
adc
sub
mov
mov
cmp
and
test
mul
ret
fsubr
inc
jnp
sbb
test
lods
jle
sub
movs
jne
stc
xchg
stc
test
retf
mov
ss
push
and
int
pop
cmp
jecxz
mov
dec
jbe
add
test
pop
inc
or
mov
pop
mov
push
add
jbe
out
push
sahf
add
aaa
test
adc
mov
fldcw
lldt
cmp
jnp
cmps
mov
std
retf
enter
out
imul
test
xchg
shl
inc
iret
loopne
out
add
sub
loopne
pusha
jmp
mov
mov
outs
fisub
add
mov
jnp
outs
pop
xor
dec
es
xor
push
sub
test
and
inc
or
and
test
shr
lea
and
adc
push
pop
mov
xchg
sahf
jns
dec
sahf
inc
movs
and
rcr
fsub
mov
and
in
(bad)
jmp
test
cmp
fs
sub
test
repz
xchg
loopne
test
ins
nop
push
xor
sub
adc
mov
fs
fdivr
sbb
add
neg
push
clc
xor
or
rcr
push
mov
dec
gs
out
pusha
mov
mov
sub
inc
pop
iret
cmp
fistp
sbb
mov
and
loopne
lods
test
rol
sub
clc
sub
sar
push
add
test
shl
cmp
mov
inc
mov
push
fisub
add
xor
addr16
push
cmp
mov
int3
mov
mov
push
popa
jecxz
mov
xchg
js
add
aaa
shr
sbb
pop
and
dec
cmp
push
mov
mov
mov
enter
test
xchg
arpl
and
cmp
aas
not
stos
mov
jbe
(bad)
gs
sub
and
dec
test
leave
jle
mov
out
pop
inc
jl
repz
push
xor
push
add
cmp
xchg
or
cmc
cmp
cmps
scas
push
adc
add
daa
std
push
je
push
inc
fisubr
dec
test
das
mov
je
add
xor
cmp
sahf
les
imul
jge
pop
mov
into
xchg
lea
jb
sahf
inc
pop
mov
and
jo
sahf
fdiv
pop
push
or
in
imul
fdiv
gs
pop
pop
popf
push
xor
in
out
aaa
mov
call
(bad)
aam
inc
ins
imul
and
in
movs
icebp
or
not
push
jmp
pop
add
pop
cmp
call
mov
mov
mov
xchg
sbb
mov
push
movs
adc
jmp
adc
scas
xor
aad
lds
mov
clc
dec
pushf
js
pop
stc
push
pop
jge
ret
mov
pop
push
jmp
jbe
xchg
xor
push
add
cdq
jmp
and
shl
adc
mov
jnp
fdiv
add
pop
jmp
cli
inc
dec
inc
nop
cli
neg
jae
shl
and
ins
fadd
mov
push
fst
or
scas
cmps
div
jge
icebp
jne
ins
push
int3
jmp
inc
lds
xchg
pop
mov
loop
mov
pop
mov
cmp
fistp
pushf
dec
fwait
dec
outs
lods
dec
add
or
loopne
pop
rcr
in
imul
movs
mov
xchg
call
ret
dec
mov
push
jmp
and
cli
test
jmp
ss
fwait
shl
int
ror
inc
sub
stc
and
call
cli
mov
mov
jns
movs
mov
xor
loopne
aam
lahf
stos
sahf
jecxz
sub
ficom
repnz
add
nop
mov
test
xchg
add
xchg
out
jae
ins
and
and
or
dec
push
adc
and
mov
jp
aaa
dec
add
xchg
jne
cmp
loopne
fwait
loopne
add
lods
loopne
cmps
push
icebp
pop
imul
cmp
jns
mov
popf
test
jnp
lea
inc
and
jecxz
cld
das
lock
or
outs
sbb
jge
gs
sti
add
push
mov
test
dec
mov
xor
outs
mov
mov
ins
in
shl
leave
cmps
sub
in
test
jo
int
push
mov
dec
imul
add
clc
call
movs
out
adc
mov
imul
push
push
adc
enter
fmul
add
aad
gs
sbb
gs
cmp
enter
test
and
nop
gs
movs
sbb
movs
mov
xlat
aad
ss
enter
or
pop
mov
adc
cwde
pop
daa
push
xor
push
fistp
imul
or
pushf
(bad)
jmp
in
sbb
pop
pop
out
ss
mov
sub
mov
mov
lods
adc
sub
push
idiv
jmp
cmps
and
mov
mov
adc
jle
div
lock
adc
add
imul
push
sub
fcomp
pop
pop
mov
retf
push
dec
jge
inc
int
jmp
(bad)
push
aas
(bad)
lea
cmps
movs
cli
xchg
adc
sbb
nop
cwde
push
adc
fwait
in
and
retf
aad
aaa
sti
dec
push
dec
lock
push
mov
out
std
xchg
fist
jle
das
xchg
mov
iret
push
jo
clc
sub
xor
pop
retf
scas
scas
jg
clc
hlt
aad
(bad)
rol
clc
dec
sub
xchg
xchg
cmp
or
sti
out
outs
push
fst
call
movs
mov
not
sub
in
xchg
icebp
in
mov
mov
enter
xchg
ins
xchg
jb
cwde
push
ror
dec
inc
cdq
cmp
jbe
xchg
add
or
scas
repnz
mov
enter
mov
push
inc
shl
sbb
adc
jp
call
sbb
jno
iret
dec
(bad)
in
out
int3
pop
cld
(bad)
pop
jle
inc
movs
push
xchg
mov
add
mov
xor
sbb
inc
cmps
in
push
dec
dec
aad
repz
popf
dec
pop
sub
inc
test
or
sti
inc
jge
scas
sbb
pop
inc
cmp
jb
mov
push
mov
fistp
stos
or
xchg
iret
lods
in
sub
in
mov
aas
xchg
and
jmp
dec
sbb
ins
and
mov
inc
sub
(bad)
cs
ja
mov
sar
pushf
and
mov
xchg
aad
xchg
sar
sub
jecxz
adc
adc
into
xor
adc
push
loope
mov
push
pop
repnz
pop
je
mov
ret
out
jno
dec
lods
lods
stos
test
xchg
mov
sti
sbb
cwde
jo
pop
pusha
das
or
pop
fdivr
je
cwde
inc
retf
ins
cwde
add
icebp
mov
mov
pushf
in
mov
xchg
es
pop
or
add
xlat
aad
add
sub
inc
retf
cmp
and
cmp
lods
add
das
xor
mov
mov
mov
push
adc
icebp
xor
pop
mov
rol
outs
or
push
fist
ret
mov
jle
cld
dec
adc
fs
sbb
jbe
sbb
jae
add
mov
aad
dec
mov
fdivp
push
aaa
jnp
neg
adc
sub
add
pop
imul
inc
imul
add
fs
pushf
scas
cdq
(bad)
gs
ins
dec
pop
sti
imul
pop
xor
dec
inc
retf
dec
loopne
mov
movs
or
dec
retf
mov
scas
scas
popf
rcl
xchg
and
adc
fcomp
lds
addr16
xor
pop
not
test
movs
js
jns
hlt
push
mov
(bad)
popf
retf
stc
dec
push
adc
mov
std
enter
jno
cld
sbb
add
retf
fisub
sbb
outs
scas
xchg
rol
push
jae
pop
dec
xor
inc
sbb
pop
test
shl
rol
call
dec
ret
inc
sbb
and
jmp
push
inc
xor
xlat
retf
mov
jb
(bad)
mov
ret
fadd
sub
(bad)
je
jecxz
push
dec
mov
sbb
gs
adc
dec
sbb
(bad)
xchg
imul
push
push
jmp
push
(bad)
scas
rol
mov
xlat
jl
pop
or
inc
imul
inc
call
push
inc
mov
sti
cmp
jne
inc
xor
arpl
cmp
mov
gs
ret
sub
jp
xchg
jmp
adc
mov
xchg
sub
(bad)
jns
cli
inc
xor
jmp
mov
inc
cmovl
sub
ret
xor
test
fs
and
pushf
test
mov
push
in
dec
clc
test
xchg
and
or
push
xchg
dec
mov
and
popa
sbb
int
imul
ss
bnd
xchg
cwde
ins
mov
sbb
inc
repz
addr16
cmp
loopne
fs
cmp
cmp
mov
stos
call
mov
repz
stos
inc
dec
ds
xchg
inc
(bad)
in
dec
mov
js
push
cmps
add
in
xchg
fwait
out
mov
aam
cmps
loope
xor
cmps
fild
jbe
adc
add
push
lahf
clc
aas
pop
cwde
push
xor
rol
ret
inc
dec
mov
sbb
jmp
jno
cmps
sahf
cmp
popf
xchg
nop
sbb
ja
mov
sbb
adc
mov
cmp
push
aad
xchg
or
movs
sbb
cli
mov
or
popa
(bad)
cmp
pop
jle
jo
test
fisub
sbb
cs
fwait
mov
pop
xor
adc
xchg
rcl
jl
je
add
rcl
out
push
arpl
pop
popa
test
adc
out
jmp
pop
mov
mov
mov
xlat
popa
push
push
bound
add
fld
cdq
mov
inc
sbb
in
cmps
jne
push
(bad)
pop
push
fldenv
or
cmps
sar
jmp
xor
add
mov
add
dec
pop
push
call
(bad)
call
test
mov
adc
inc
adc
cmp
js
loop
add
jcxz
mov
scas
(bad)
xchg
jo
or
stc
inc
cmps
loope
sbb
mov
rol
add
or
mov
inc
mov
mov
mov
addr16
mov
pop
dec
xchg
and
sub
les
inc
push
mov
sub
sar
jnp
mov
push
(bad)
jg
retf
daa
out
add
popf
jle
shr
fs
jnp
into
dec
mov
jnp
enter
mov
ja
sub
dec
adc
pop
aaa
cdq
call
popf
jmp
adc
rcr
bound
or
in
dec
cmp
in
dec
lock
adc
xor
imul
xor
fidivr
inc
mov
data16
das
cmp
adc
and
icebp
cwde
ins
xor
xchg
data16
push
sbb
push
mov
hlt
mov
push
loop
adc
in
mov
mov
fs
push
rcl
es
cmps
mov
adc
das
xchg
mov
scas
xor
call
pop
pusha
imul
call
daa
clc
imul
jmp
std
mov
cmp
dec
push
aas
and
leave
push
loope
sti
call
outs
dec
enter
sub
ret
mov
je
js
add
mov
(bad)
enter
pop
stc
loop
lahf
or
sub
pop
mov
sub
mov
int
lahf
std
push
sbb
sbb
xchg
lds
xchg
pop
dec
ins
dec
fld
adc
stc
sub
mov
rcl
xchg
push
outs
jmp
scas
(bad)
xlat
pushf
push
inc
not
dec
leave
enter
outs
sub
retf
add
add
ins
or
sbb
ror
jo
and
ret
xchg
repz
cmp
mov
in
(bad)
add
sub
dec
icebp
and
push
arpl
add
pop
or
loopne
sbb
add
mov
hlt
jno
(bad)
xor
(bad)
or
dec
(bad)
test
jbe
jmp
jno
iret
sub
mov
cmp
dec
xchg
jge
inc
dec
push
mov
test
cld
cdq
push
neg
std
fadd
lahf
jp
mov
lods
mov
mov
add
(bad)
mov
adc
jmp
xchg
push
aaa
jge
xchg
pop
mov
pusha
mov
or
in
add
test
add
mov
pop
cmp
xor
add
inc
adc
mov
(bad)
mov
push
sbb
mov
adc
(bad)
push
int
retf
daa
mov
mov
mov
mov
dec
sub
cdq
dec
mov
daa
jae
xor
aas
adc
add
mov
ret
sbb
test
(bad)
shl
push
movs
dec
(bad)
jmp
push
retf
cmps
or
leave
out
push
xchg
xor
ds
xchg
jo
and
mov
int
daa
push
cmp
mov
imul
jmp
sbb
fwait
rol
dec
jecxz
xor
lods
jle
stc
mov
cmp
cld
repnz
repnz
ror
adc
fwait
nop
movs
std
cmps
mov
xchg
aad
(bad)
sub
dec
cdq
in
lock
sbb
pop
pop
lock
mov
pusha
xor
sbb
mov
mov
repnz
shl
adc
cmp
dec
outs
cmp
in
add
jl
sahf
dec
outs
sbb
iret
les
fisub
icebp
in
data16
inc
dec
mov
nop
shl
jp
js
and
or
and
ret
add
loopne
jmp
enter
mov
sti
je
lods
sti
push
fsubr
sub
dec
mov
sbb
daa
adc
test
into
xor
push
pop
pushf
int
sub
out
es
jb
cmc
jge
pop
(bad)
fbld
jmp
sub
lahf
inc
adc
pop
sub
ss
jle
pop
sahf
sbb
test
icebp
lods
xor
in
add
jecxz
mov
pop
xchg
mov
es
push
push
adc
ins
js
mul
aaa
test
push
mov
cmp
and
iret
mov
sbb
mov
cs
or
push
xchg
es
dec
xor
ins
fwait
or
add
(bad)
fdivr
repz
enter
gs
jmp
cdq
lds
pop
inc
inc
cwde
clc
in
mov
cmp
add
(bad)
enter
dec
ss
das
jnp
xchg
xchg
push
popf
sub
jmp
aas
dec
jmp
adc
ins
and
sbb
icebp
imul
fidiv
int
mov
fldenv
movs
add
mov
loop
push
jmp
push
(bad)
in
fiadd
xor
scas
adc
cmp
cli
lock
lock
jmp
pop
popf
loope
sbb
xchg
lods
xchg
stos
movs
aam
dec
lock
xor
xor
outs
bnd
jno
dec
call
sbb
fs
cmp
leave
inc
mov
and
inc
ja
add
outs
iret
or
pop
jg
mov
xor
ficom
jmp
sti
fdivp
(bad)
mov
mov
(bad)
loope
ror
clc
das
cmc
aam
sahf
es
repnz
rol
fimul
test
sbb
ret
in
xchg
mov
jp
cdq
xor
imul
xchg
movs
cmp
pop
and
and
stos
jp
outs
and
arpl
jnp
xchg
jl
sbb
lea
es
push
cmp
jmp
mov
(bad)
and
push
xor
loopne
pop
inc
xchg
in
js
xor
(bad)
and
cmp
pop
bound
lahf
xchg
xchg
pop
lea
std
jecxz
call
mov
lahf
push
xchg
mov
fwait
dec
out
mov
call
call
outs
sahf
inc
and
mov
xchg
aaa
jg
test
psllw
sub
pop
mov
aam
mov
push
jo
data16
jnp
test
int
push
adc
pop
adc
adc
call
and
cmp
dec
icebp
std
push
aaa
or
add
cmp
mov
cdq
push
lea
xor
and
jmp
test
(bad)
lods
cmp
xchg
pushf
dec
push
mov
mov
lods
pop
imul
mov
call
add
push
rcr
mov
jne
jp
push
or
aad
cmp
xlat
cmp
into
cmps
sub
loop
imul
jno
mov
shl
sbb
in
inc
(bad)
inc
(bad)
(bad)
or
jmp
lds
rcl
fsubrp
xchg
out
dec
mov
retf
repz
dec
ja
(bad)
daa
ins
mov
pop
add
and
xchg
dec
ins
mov
gs
inc
dec
call
scas
mov
rcr
lods
fsubr
lods
push
test
mov
xchg
leave
cmp
mov
xor
das
arpl
xchg
xor
mov
mov
and
cmp
jo
add
dec
lds
(bad)
xor
popa
jmp
xchg
mov
adc
clc
or
jmp
cmp
cli
popa
and
ja
fidiv
add
lds
aam
out
sbb
loopne
outs
cwde
stos
xchg
push
mov
inc
push
mov
jno
ins
or
iret
cs
ins
mov
jl
test
scas
gs
mov
mov
leave
push
daa
xor
ins
adc
ficomp
in
mov
cmp
into
outs
inc
and
pusha
imul
cmp
xchg
cmp
popf
fwait
sub
dec
dec
pop
cmp
xor
mov
add
les
(bad)
std
inc
daa
push
cmp
or
jo
inc
ficomp
xlat
push
pop
cdq
adc
fsub
shl
pushf
inc
iret
cld
cmp
cmp
shl
push
ins
bound
dec
fild
cmp
aam
mov
cli
and
xor
in
mov
inc
outs
jns
inc
adc
xchg
add
std
mov
cs
loop
cmc
mov
ja
imul
loope
retf
enter
adc
(bad)
xor
sahf
mov
add
mov
inc
or
fs
ins
dec
mov
or
sub
xchg
test
bound
and
out
leave
or
mov
sahf
pop
pusha
mov
cld
dec
sub
pop
rcl
xchg
mov
dec
sahf
inc
das
dec
jb
sbb
sbb
das
dec
jl
imul
jg
daa
lahf
mov
push
retf
pop
loopne
or
jno
sub
movs
sar
sbb
dec
mov
xchg
int3
sub
push
shr
cmp
sbb
iret
fild
or
adc
jne
out
xchg
cmp
xor
and
mov
push
gs
mov
lahf
sub
push
loopne
mov
sbb
push
bound
lahf
mov
test
adc
test
push
test
pop
ds
sbb
fld
stos
xor
mul
sti
sub
push
cmp
pushf
stos
pop
push
mov
test
jae
xchg
sbb
leave
cmp
aam
cmp
push
popa
pop
jmp
test
ja
das
sbb
pusha
stos
aaa
and
ret
mov
loope
cmps
iret
adc
scas
pusha
popf
cmp
lods
(bad)
or
in
jg
out
ret
fstp
mov
lods
loopne
loop
cdq
ficomp
add
and
lea
in
or
sub
add
xor
mov
cmps
int
inc
pop
inc
aas
iret
mov
or
mov
stos
add
int3
cmp
inc
and
pop
jmp
enter
loope
sbb
pop
cs
lock
fistp
mov
or
xor
cmp
imul
push
jl
shl
scas
frstor
movs
cmp
lods
mov
jne
repnz
pop
(bad)
mov
mov
sub
test
inc
push
sub
cld
sub
std
adc
lahf
enter
aas
push
(bad)
mov
jmp
es
pop
data16
mov
nop
add
popf
adc
cmp
das
or
push
pop
test
ret
test
add
pop
sti
jg
cli
jp
mov
mov
(bad)
in
adc
inc
js
shl
adc
or
rol
das
sub
inc
xor
rcl
push
dec
(bad)
lds
or
cmps
cmp
push
lea
scas
jnp
repz
cmp
xchg
cmp
xor
sub
mov
or
ds
mov
mov
iret
adc
adc
inc
(bad)
xlat
or
in
mov
xor
xchg
xor
mov
sub
ins
lods
cs
arpl
int3
or
ins
arpl
push
sbb
mov
out
cli
adc
mov
inc
pop
mov
push
call
(bad)
jo
mov
sbb
fsub
push
cmp
push
(bad)
clc
jns
cmc
pop
cdq
(bad)
cmc
push
sub
and
jle
lea
push
scas
sub
add
das
inc
push
jae
out
or
push
(bad)
and
movs
push
dec
scas
nop
rol
(bad)
cmps
test
mov
xchg
ret
adc
xchg
test
das
stc
pop
push
add
xchg
pop
or
pushf
pop
dec
into
std
movs
jbe
in
pushf
xor
call
mov
shl
outs
sbb
mov
or
enter
mov
xor
and
mov
ror
or
push
popf
mov
movs
xlat
push
cwde
mov
lods
sub
outs
movs
adc
ss
jnp
sub
add
fild
mov
stos
call
mov
enter
sub
stos
inc
sahf
outs
ins
push
push
add
inc
jl
imul
xor
rcr
ja
loopne
int3
fild
cmp
jbe
fucom
out
ret
cli
retf
out
outs
jo
out
mov
push
popa
enter
aaa
add
movs
cmps
mov
cmp
jmp
push
ds
and
es
inc
xchg
stc
jne
leave
jp
dec
outs
inc
(bad)
les
test
pop
jb
jo
js
(bad)
je
xlat
addr16
inc
sub
scas
lods
mov
sbb
hlt
xchg
sub
add
pop
or
push
xchg
push
lods
fwait
mov
(bad)
je
mov
inc
outs
add
sbb
fst
mov
dec
dec
dec
cmps
mov
mov
mov
movs
mov
adc
loop
xor
xor
dec
loopne
ja
inc
stc
inc
inc
repz
movs
cmp
imul
cli
out
aad
inc
into
xor
in
into
fcomp
jns
inc
or
idiv
fisubr
cmp
sahf
push
mov
xchg
fsubr
addr16
loope
scas
pop
shl
jae
or
xchg
std
mov
mov
dec
xor
ja
lahf
test
mov
popf
lock
xor
or
xor
dec
addr16
scas
(bad)
pop
or
and
xchg
lods
mov
xlat
cmps
cld
mov
rol
adc
add
shr
xchg
pop
mov
and
sub
jae
cmp
sbb
jmp
sbb
gs
in
pop
scas
push
inc
in
call
test
mov
stos
int3
cmp
cmp
add
pop
fild
enter
cmps
loope
xor
in
aas
ror
out
adc
icebp
in
jg
icebp
popa
push
popf
cmps
bswap
adc
into
adc
mov
sub
mov
mov
mov
enter
inc
jno
clc
stos
data16
in
push
ins
shr
push
jns
jo
jae
jmp
lds
mov
pop
aam
(bad)
shr
mov
xor
es
fldenv
sbb
inc
jle
adc
fwait
mov
outs
mov
enter
sahf
or
shr
jae
mov
sbb
cmp
cli
inc
add
adc
ds
hlt
adc
jne
nop
inc
push
mov
ret
rcr
ror
std
pop
cmps
xchg
jne
xchg
push
add
shr
or
lea
loop
xor
adc
ffree
outs
mov
xor
jecxz
adc
cdq
iret
pop
cmp
push
sahf
(bad)
cmp
adc
mov
lea
scas
(bad)
out
popf
sbb
ds
adc
dec
cwde
xor
mov
movs
popf
sub
stos
push
lahf
inc
push
shl
push
xor
rcl
fs
dec
dec
or
std
mov
sbb
scas
mov
lods
daa
xor
shl
and
in
push
pop
dec
mov
popa
mov
daa
out
mov
cwde
imul
cwde
mov
retf
adc
add
arpl
lods
and
lahf
aam
add
mov
inc
mov
punpckldq
dec
pop
in
aaa
idiv
mov
jl
fdiv
pop
jo
(bad)
fstp
int
pop
cmp
mov
mov
pop
sbb
inc
sbb
ss
xor
jbe
mov
xchg
mov
fs
mov
push
pusha
and
jbe
mov
imul
add
xchg
push
arpl
jo
mov
in
pop
or
push
mov
jmp
fsubp
out
and
arpl
scas
or
int3
jge
fcomp
popf
cwde
std
push
ja
xlat
dec
push
jns
mov
pop
shl
or
sbb
and
sbb
lods
sbb
xchg
dec
aaa
pop
xor
cmp
in
scas
push
pop
lods
sbb
sbb
jmp
call
das
pop
in
push
in
(bad)
adc
sahf
adc
jp
adc
jl
adc
push
out
sahf
stos
inc
cmps
clc
mov
jp
iret
movs
inc
adc
jb
jno
test
jb
xchg
popa
popf
adc
js
or
sub
mov
jb
hlt
int3
imul
dec
mov
xor
ss
retf
jl
call
ins
sub
mov
cwde
push
addr16
adc
imul
jp
outs
pop
push
xchg
xchg
div
aad
das
mov
jmp
sub
(bad)
sahf
je
push
rcl
inc
adc
lock
inc
jmp
ins
jne
push
cld
sbb
loop
and
imul
fistp
sub
dec
in
test
adc
test
imul
mov
inc
test
sub
movs
(bad)
mov
or
sar
retfw
in
and
loop
push
ret
retf
call
jp
push
movs
sub
int3
imul
loopne
mov
add
dec
sub
sbb
test
(bad)
enter
daa
add
fwait
and
jb
ret
std
stc
adc
mov
add
jle
lods
hlt
pop
icebp
imul
ja
into
jp
(bad)
cmp
pop
adc
aam
adc
sub
pushf
cmp
std
das
xor
mov
or
mov
sbb
jle
add
aad
add
xchg
mov
sub
ja
icebp
mov
jno
mov
xor
lahf
call
loope
sub
fstp
xchg
xchg
int3
mov
jno
stos
fwait
mov
rcr
and
sbb
pop
hlt
mov
jecxz
jbe
fs
cmp
dec
pop
pop
repnz
repz
inc
sahf
test
push
sub
clc
in
les
sub
jno
cmp
(bad)
ins
jle
adc
std
(bad)
int3
fst
cmp
ret
sbb
bound
xor
bound
test
push
push
repnz
xor
(bad)
out
pop
or
(bad)
movs
sti
outs
fbstp
lods
sbb
out
jecxz
out
mov
loopne
imul
(bad)
xchg
jecxz
pop
call
and
fs
adc
jp
mov
xchg
out
and
js
out
mov
lods
add
(bad)
lock
xchg
das
cmp
push
and
inc
mov
lea
enter
xor
xor
sti
and
cmp
xchg
mov
ins
loope
jbe
xchg
lock
hlt
jle
xchg
cmc
ja
popa
nop
aas
imul
mov
sti
hlt
adc
mov
sub
arpl
jne
dec
std
mov
ins
js
or
call
inc
sahf
mul
clc
lods
lods
inc
cmp
push
dec
dec
jae
add
rcr
arpl
ss
and
sbb
mov
mov
jecxz
(bad)
faddp
mov
shr
xor
mov
cmp
push
cmp
(bad)
fld
mov
dec
pop
fdiv
adc
sahf
sub
adc
xchg
sub
adc
push
push
out
jp
not
mov
popa
add
stc
mov
jmp
jb
or
shr
mov
sub
stos
xchg
add
mov
test
pop
sub
or
jnp
pop
rcl
mov
mov
ja
ret
cmp
sbb
xor
push
mov
repz
dec
fistp
daa
xchg
push
scas
jmp
push
xchg
jno
sbb
mov
mov
setl
jno
movs
inc
aas
xor
gs
mov
xchg
sbb
fistp
loop
pop
cld
cmp
push
lahf
mov
retf
jno
jns
mov
push
add
in
xor
and
sub
fs
ja
push
or
scas
and
and
inc
rol
inc
int3
or
dec
ror
outs
cmc
sub
js
arpl
popf
(bad)
and
and
jp
pop
xchg
cmp
jle
mov
daa
adc
push
fistp
out
icebp
lods
daa
jle
les
jg
in
call
or
jo
iret
ins
jmp
inc
push
xor
sbb
xchg
or
mov
stc
das
pop
movs
(bad)
add
mov
jp
or
and
inc
sbb
in
lahf
mov
ins
lods
loope
retf
push
adc
cwde
push
lock
dec
or
mov
ss
fwait
sti
jbe
inc
push
push
mov
cmp
inc
aad
cmc
xchg
mov
push
and
pushf
dec
stc
sbb
(bad)
aad
jp
cdq
inc
(bad)
stc
dec
push
and
dec
out
std
cmc
out
jle
popf
out
ins
ds
or
push
and
dec
sti
sub
in
add
repnz
inc
mov
mov
fcomip
push
inc
(bad)
jno
mov
xor
cmp
shl
mov
xchg
add
push
iret
data16
jo
xor
or
in
cmp
ret
(bad)
xchg
int
and
out
pop
test
std
cmp
fsub
call
sub
mov
clc
sub
xor
mov
loop
in
into
xchg
movs
call
cmp
in
movs
add
sar
mov
cs
ds
mov
adc
or
iret
xor
lods
(bad)
jmp
mov
mov
xlat
jmp
test
ret
fwait
ret
pop
dec
push
adc
push
out
xor
cmps
adc
add
repz
out
mov
jnp
xor
ds
jb
shl
add
mov
pusha
jne
aam
mov
sti
clc
dec
lahf
out
and
scas
mov
in
pop
je
push
jg
test
xchg
icebp
push
cdq
std
popa
cwde
lods
aam
retf
mov
sbb
mov
mov
nop
xor
ins
cld
ror
loope
mov
nop
aam
xchg
inc
in
aad
xchg
add
push
dec
inc
call
ret
fwait
std
rol
mov
xlat
packssdw
mov
retf
cs
xchg
and
xlat
mov
mov
xchg
xor
and
les
xor
pop
fcmovbe
jmp
sub
dec
xchg
mov
add
int3
pop
xchg
rcl
cli
imul
(bad)
cld
mov
inc
push
inc
inc
or
pop
sbb
pop
pusha
(bad)
jns
stc
mov
scas
mov
popa
imul
cmc
cmp
mov
mov
jnp
lods
out
mov
data16
frstor
fadd
rcr
cmps
nop
and
and
xchg
and
cwde
adc
pop
(bad)
jp
jecxz
jg
shl
test
lods
jle
mov
or
or
cmp
data16
jb
or
adc
and
mov
mov
pop
mov
jg
shl
mov
fcom
jg
adc
leave
fiadd
movs
fwait
and
cmp
jb
rcl
xor
pop
jne
xchg
bound
xor
push
sahf
into
ds
inc
loope
test
sub
xchg
(bad)
mov
mov
lahf
repnz
sbb
mov
out
adc
cmp
inc
xchg
cmp
sti
or
sahf
mov
pusha
inc
cmp
mov
mov
enter
xor
xchg
lds
mov
sub
xchg
or
push
inc
xor
sbb
sbb
out
lahf
je
enter
(bad)
mov
jmp
mov
push
adc
dec
mov
mov
scas
xlat
je
rol
jle
popf
push
shr
arpl
lock
adc
xchg
daa
dec
in
(bad)
adc
stos
addr16
xor
and
cld
outs
inc
cmp
add
scas
mov
mov
jle
sub
fmul
mov
cmp
cmps
mov
mov
push
movs
sbb
fist
inc
cmc
loop
push
sub
cli
jne
idiv
(bad)
pop
aaa
es
or
aaa
xor
sub
push
rcl
fisttp
or
sar
mov
sbb
mov
(bad)
or
mov
xchg
pop
fdivr
movs
ins
adc
push
and
jecxz
aaa
out
add
xchg
or
lahf
dec
out
cmp
fs
push
data16
push
mov
hlt
and
pop
dec
jno
test
push
dec
inc
call
pop
and
ins
aaa
jns
pop
jo
sub
mov
int3
sub
packssdw
out
mov
(bad)
(bad)
retf
push
(bad)
(bad)
mov
dec
add
or
xchg
outs
fnstsw
and
mov
pop
popf
sbb
dec
fstp
call
jp
adc
xchg
ret
mov
leave
mov
and
scas
or
loope
retf
int3
push
leave
dec
cmps
cli
adc
mov
mov
pop
jmp
scas
js
gs
jge
stc
cmps
push
js
or
and
adc
das
pushf
lock
cwde
jecxz
sar
in
push
or
in
scas
push
mov
aad
test
stos
and
mov
movs
adc
xchg
stos
adc
pop
jae
push
mov
mov
fistp
imul
ffreep
mov
jecxz
dec
ror
aaa
sub
fcmove
fdiv
retf
mov
or
mov
mov
cmp
aas
(bad)
and
mov
add
in
jb
sbb
add
lea
nop
aas
dec
mov
ret
(bad)
dec
je
inc
hlt
enter
(bad)
jbe
popa
sub
dec
dec
mov
cmps
inc
sbb
ret
outs
jb
fwait
ds
push
popf
gs
popa
ror
sbb
inc
(bad)
dec
cmp
jle
xor
cdq
or
sub
dec
lea
push
mov
je
outs
popa
ja
inc
cld
mov
jb
mov
dec
pop
mov
push
or
and
sbb
addr16
enter
dec
pushf
xor
jae
mov
mov
into
ins
sbb
rcl
jmp
clc
jne
jae
add
push
in
ins
xchg
mov
sub
adc
imul
mul
pop
mov
(bad)
fidivr
mov
pop
mov
mov
int
cmp
or
out
js
inc
out
inc
or
xchg
retf
in
xchg
dec
(bad)
add
movs
xchg
into
arpl
jecxz
xchg
xchg
fprem
fmul
out
add
js
lahf
jnp
cmps
leave
js
sub
(bad)
mov
inc
(bad)
mov
sub
lock
cmp
sar
rol
add
(bad)
pop
and
lds
fmul
cs
inc
dec
and
outs
loop
adc
(bad)
dec
push
fisub
push
into
ret
es
add
lods
jae
shl
dec
aad
ds
mov
push
jle
iret
cli
fst
and
pop
mov
cmp
jo
lea
movs
pop
sbb
inc
sbb
jmp
inc
aas
mov
jno
xor
inc
(bad)
scas
cmps
rcl
cmp
(bad)
push
pop
adc
mov
xchg
call
(bad)
hlt
ret
gs
mov
in
xchg
mov
mul
jbe
iret
popa
jmp
in
cmp
imul
mov
inc
mov
mov
jl
test
mov
lea
(bad)
pop
xlat
push
dec
sub
and
scas
sub
push
push
jmp
(bad)
add
push
push
inc
js
cmps
pop
mov
add
imul
sub
out
das
nop
push
add
dec
dec
adc
dec
xor
sbb
jb
sub
and
popf
gs
pop
mov
fldenv
jg
lods
cwde
pop
jmp
jle
fwait
rcl
pop
test
(bad)
cmps
int3
add
sahf
call
lds
mov
xchg
les
jne
lahf
out
xchg
push
mov
xchg
scas
xchg
clc
mov
loopne
mov
js
fxch
add
cs
adc
jmp
inc
mov
xchg
push
jg
scas
mov
(bad)
rcl
fisubr
inc
ret
mov
or
push
sbb
pop
jg
test
add
(bad)
sub
mov
adc
sub
(bad)
neg
mov
push
(bad)
clc
idiv
fcomp
in
sub
mov
and
mov
inc
xor
cmps
pop
imul
lock
or
push
jl
enter
or
cmp
sub
hlt
add
inc
adc
sub
push
int3
loope
add
ds
jae
jno
iret
in
sbb
xchg
cmp
mov
add
or
mov
push
mov
and
dec
div
test
lock
add
popf
sbb
inc
push
out
sub
and
inc
pop
xchg
push
loop
and
test
(bad)
xlat
std
mov
scas
retf
loop
inc
les
or
(bad)
call
lea
mov
jb
adc
sub
mov
push
popa
pop
ja
out
mov
iret
sub
retf
popa
js
into
imul
pop
pop
in
xor
fisttp
add
push
repz
dec
je
add
mov
mov
fdivr
mov
adc
inc
call
aaa
mov
ins
jg
ins
stos
mov
cli
sbb
in
cmp
cmp
test
push
fadd
clc
push
fsubr
cs
push
jbe
jmp
inc
push
push
ret
jecxz
stos
pop
push
and
add
mov
sub
std
push
adc
xor
ja
mov
les
mov
mov
dec
cmp
or
fsubr
add
dec
dec
xor
bts
loop
call
out
mov
xchg
jo
adc
(bad)
jns
stos
jl
mov
ds
mov
out
(bad)
(bad)
fdivr
pop
out
popf
mov
jo
add
lock
jmp
sub
xchg
stc
mov
mov
fdiv
js
xchg
out
inc
pop
repnz
and
retf
or
ja
mov
es
dec
imul
mov
adc
iret
or
pop
pop
pop
fidivr
(bad)
out
out
mov
dec
adc
test
jmp
pop
xor
inc
mov
test
mov
scas
cmp
rol
mov
call
pop
fs
mov
pop
sbb
or
mov
jmp
add
je
push
xor
sub
out
adc
cmp
gs
push
fild
pop
mov
add
xor
(bad)
fsubr
in
jno
or
cld
sub
out
jno
mov
repnz
push
lods
aam
add
xchg
add
(bad)
mov
loop
xor
pop
int3
sti
popf
pop
sahf
loop
inc
mul
out
aam
das
dec
fdiv
mov
ss
lods
jl
jae
retf
mov
addr16
and
xchg
cwde
jmp
ficom
xchg
mov
xchg
ins
cmp
xchg
pop
out
test
faddp
ret
repnz
xor
scas
push
ror
pop
or
sbb
push
pop
outs
mov
int3
repnz
cmp
add
pop
push
xchg
add
pop
stos
rcl
daa
rol
shl
cmp
mov
and
inc
sub
add
fsubr
test
test
mov
dec
shl
imul
push
aad
loopne
int3
stos
and
out
cdq
es
iret
movs
sbb
xor
inc
sbb
xor
lods
mov
retf
iret
and
mov
xchg
test
push
mov
inc
call
leave
cmp
dec
fcomp
jle
cwde
test
xor
mov
mov
cmp
stos
jmp
jg
ror
xor
not
pop
push
retf
cmp
dec
aaa
dec
and
(bad)
cmp
xlat
fldcw
out
ins
cwde
gs
or
push
inc
sbb
and
out
mov
scas
push
xor
les
push
or
frstor
cld
lea
or
add
and
add
mov
and
mov
cwde
cwde
nop
xchg
push
loopne
mov
xchg
cmps
inc
mov
scas
push
inc
sbb
into
sub
xchg
mov
je
mov
(bad)
out
imul
or
sub
movsx
pop
pop
or
in
mov
into
(bad)
xlat
push
jl
movs
and
mov
cwde
push
sbb
add
int
mov
xchg
adc
xor
sub
xchg
inc
lea
inc
xchg
and
fdivr
inc
sbb
mov
arpl
(bad)
test
in
dec
add
inc
test
loope
pushw
aas
jns
rol
aam
push
sbb
ds
sbb
rcr
pop
push
xor
jno
std
adc
jle
outs
rcr
cld
div
jae
test
mov
push
adc
mov
sub
and
xchg
jnp
test
ja
idiv
int3
(bad)
sbb
cdq
mov
and
icebp
push
push
pusha
pop
adc
push
dec
mov
cdq
cmp
or
xor
ror
push
adc
fsubr
cmp
popf
mov
xchg
js
push
imul
fwait
add
or
cmp
aas
push
or
pop
repnz
neg
out
out
std
popa
fcomp
push
shl
int3
xor
dec
xlat
jl
mov
jge
fadd
popf
and
fadd
popf
xchg
mov
adc
lods
outs
lahf
nop
sub
enter
dec
and
push
test
pop
int3
sbb
and
jns
mov
jle
inc
ins
int3
mov
pop
xchg
inc
ja
xchg
mov
js
test
(bad)
and
adc
jg
xchg
cdq
or
add
es
adc
inc
imul
cmp
and
cmp
leave
cmp
lods
jmp
out
cmps
daa
inc
adc
bound
or
imul
scas
aam
and
loope
je
ja
or
push
shr
int3
fnstsw
icebp
ficom
dec
aaa
loop
cmp
int3
inc
inc
mov
outs
out
dec
mov
in
aam
cmp
aam
or
nop
mov
pop
mov
xor
mov
push
rcl
into
outs
xchg
sbb
out
xchg
ret
lock
jle
ret
lea
aas
xchg
adc
and
call
aaa
xchg
inc
pop
test
lock
mov
jmp
(bad)
mov
mov
aas
out
sbb
or
inc
sub
add
sub
scas
cmps
mov
mov
retf
jbe
xchg
adc
inc
in
push
mov
or
dec
sub
cmps
pop
inc
or
mov
mov
add
aas
pop
add
jmp
push
dec
jnp
lock
push
or
cs
js
in
call
sahf
jns
cli
imul
cmp
jmp
push
in
adc
xchg
push
or
es
outs
add
xchg
jecxz
ja
or
adc
jbe
dec
cwde
or
xor
inc
xor
(bad)
sbb
std
sub
out
add
xor
xchg
in
and
push
push
scas
mov
sub
pop
and
neg
cdq
iret
push
cs
int3
sahf
add
dec
sbb
arpl
stos
dec
adc
push
(bad)
lahf
cmp
sar
loope
imul
jg
mov
fcomp
mov
cdq
sahf
adc
clc
cmps
scas
dec
xchg
pushf
xor
pop
and
stos
or
test
loop
push
leave
mov
push
mov
mov
ss
daa
pushf
(bad)
sti
call
(bad)
jmp
fxch
popa
js
xor
stos
inc
popa
pop
std
enter
jb
dec
js
adc
iret
mov
xlat
mov
js
sub
ror
and
mov
pop
push
sub
sti
adc
lods
cmp
outs
mov
mov
dec
add
pop
iret
dec
jl
stos
add
loopne
(bad)
pop
and
mov
and
adc
fs
ja
cmps
xor
retf
jbe
mov
lahf
shl
add
div
arpl
mov
add
in
sub
adc
rcr
cmp
xor
ja
or
push
add
mov
mov
and
mov
sbb
das
mov
dec
pop
stc
jae
jmp
mov
inc
cmp
mov
cmp
sub
or
add
stos
adc
mov
(bad)
les
xchg
(bad)
adc
mov
adc
hlt
aas
sub
mov
jno
out
fist
gs
es
ret
outs
mov
(bad)
out
aaa
test
xor
pop
sar
popf
jge
mov
jge
mov
ret
mov
push
and
das
dec
sbb
mov
push
fisub
push
cmp
xor
dec
pop
cmovp
and
loop
(bad)
stc
movs
icebp
or
mov
push
arpl
push
fwait
es
sub
out
and
pop
mov
shl
enter
jmp
inc
and
dec
adc
ds
mov
mov
mov
(bad)
dec
stc
bound
cli
mov
es
test
mov
retf
shr
or
call
stos
add
or
mov
aad
dec
cmps
nop
sub
xlat
pop
icebp
sub
inc
mov
stos
sub
xchg
add
mov
push
inc
jge
popa
ffree
leave
inc
repz
test
push
icebp
scas
fcom
jg
je
das
push
sub
adc
test
cmp
push
mov
push
push
xor
dec
jmp
xor
xchg
xor
add
cmp
jb
pop
test
cwde
fidiv
xor
lods
ja
and
cmp
jg
cmp
outs
movs
xchg
test
cdq
lods
test
sbb
inc
inc
std
xor
inc
cmps
cmp
mov
jmp
sub
inc
movs
pushf
jbe
dec
shr
and
stc
jmp
dec
sahf
or
clc
adc
ret
ror
cwde
mov
jns
popf
ret
xor
mov
neg
call
(bad)
es
popf
fimul
pop
jae
iret
ucomiss
lock
adc
stc
sahf
add
and
shl
and
mov
in
es
cmc
popa
xor
sub
jle
xchg
cmp
mov
xchg
push
jge
jbe
das
xchg
pop
jp
jae
shl
push
adc
inc
stc
dec
popf
and
ret
es
repz
fwait
dec
call
xchg
loopne
add
ja
iret
sbb
les
or
sar
clc
movs
nop
sbb
add
fld
clc
mov
pop
addr16
mov
and
ucomiss
out
popf
mov
dec
out
inc
sub
mov
ss
call
or
stos
push
mov
data16
out
add
icebp
sbb
pushf
out
lahf
inc
pop
stos
mov
or
shl
cmp
daa
dec
cwde
mov
xlat
and
push
mov
sbb
jbe
xchg
std
cmp
mov
sub
push
stos
jnp
inc
sbb
lods
jb
jne
cli
mov
call
icebp
sub
repz
add
and
jo
mov
addr16
xor
mov
jo
inc
mov
dec
sti
shr
xchg
cmp
inc
outs
and
mov
aam
sub
adc
pop
dec
xor
in
jl
dec
sti
out
aam
lods
pop
mov
mov
pop
adc
xchg
xchg
pop
jno
stc
and
xor
push
aas
fcom
sub
cmp
mov
in
loope
pop
fidivr
bound
aam
jmp
movs
and
int3
pushf
repz
aas
addr16
hlt
add
lea
xor
push
pop
lahf
xlat
and
(bad)
jmp
push
ins
mov
dec
mov
ror
xchg
fnstsw
outs
and
hlt
in
gs
jmp
imul
pusha
sbb
mov
(bad)
loopne
daa
xchg
popa
mov
clc
movs
jbe
xchg
mov
shl
pop
or
xchg
ud1
nop
sti
sbb
cmovae
add
mov
cmp
out
push
mov
sbb
mov
test
xchg
movs
jl
mov
inc
int
inc
inc
nop
xchg
push
cmp
call
jbe
inc
repz
jmp
int3
or
inc
pop
sub
aad
gs
cmps
fmul
aaa
mov
pop
mov
(bad)
addr16
push
xor
mov
sahf
in
push
in
ins
jb
xor
nop
movs
mov
sub
xlat
popf
and
(bad)
cmp
scas
sbb
cmc
adc
and
mov
mov
cmps
popa
fs
pop
fsubr
mov
icebp
inc
xor
fnsave
push
sub
pop
stos
cmps
jmp
xlat
or
inc
jo
sbb
xchg
adc
jg
pop
nop
adc
jnp
gs
and
ret
push
leave
out
out
pop
jnp
bound
dec
ins
outs
pop
mov
int
adc
sti
inc
dec
jnp
ins
(bad)
jbe
pop
aam
push
cld
mov
jp
push
(bad)
push
sub
or
cmp
push
jbe
out
movs
jmp
(bad)
sbb
loope
fwait
iret
jnp
je
popf
test
nop
and
pop
mov
jl
or
mov
sbb
loope
xchg
pop
mov
dec
cmp
in
lea
xor
mov
inc
fild
(bad)
cmp
dec
xchg
mov
lods
pop
jecxz
push
mov
cli
xchg
mov
nop
jmp
mov
fisubr
add
jne
push
jo
sub
mov
dec
inc
cld
test
pop
mov
fistp
ret
fsub
cmp
cwde
cwde
mov
daa
jecxz
into
inc
push
loop
push
mov
jmp
fwait
leave
in
cmp
mov
inc
outs
push
mov
xor
sbb
ja
in
lds
in
pop
rol
sahf
data16
sti
push
push
cmp
sub
fs
loope
cwde
jl
test
out
outs
ficomp
or
out
imul
movs
data16
mov
jecxz
inc
(bad)
icebp
icebp
mov
push
test
movs
(bad)
mov
mov
adc
mov
push
shr
sbb
in
pop
fld
jge
fild
adc
push
push
popf
test
in
arpl
sbb
fisttp
mov
sti
xchg
jmp
pop
(bad)
(bad)
repz
push
push
push
shr
aam
push
or
aas
outs
fist
(bad)
cmp
sbb
fisttp
gs
call
fidivr
dec
les
sbb
in
pop
dec
pushf
sbb
push
(bad)
daa
das
dec
imul
sub
pop
xor
xor
shl
xchg
adc
inc
sar
mov
jg
repnz
jp
js
int
pop
cmp
and
stos
mov
adc
mov
lea
push
sub
cmp
in
xor
(bad)
fisub
hlt
cmp
movs
outs
stos
(bad)
mov
inc
clc
xchg
ds
iret
jne
or
and
sar
cmps
sub
hlt
stos
nop
cmp
loope
lock
xor
cmp
xor
popa
dec
dec
aaa
or
nop
pop
loop
cs
cmp
cli
and
div
xchg
inc
dec
pop
xchg
lahf
mov
out
call
mov
scas
test
fldcw
mul
and
stc
add
sub
in
pop
dec
adc
pop
jne
retf
in
mov
jb
and
jge
dec
cmp
mov
int3
fmul
xor
push
movs
inc
test
pushf
test
xor
std
sti
push
mov
je
mov
rol
sbb
add
mov
lahf
xor
mov
outs
add
shr
and
jmp
test
fdivrp
or
out
mov
dec
cmp
movs
repnz
push
push
inc
(bad)
clc
and
xchg
mov
ins
adc
mov
fldcw
test
and
and
loop
cli
dec
fnstcw
mov
sub
dec
mov
outs
cmp
arpl
into
int3
call
mov
or
push
xchg
sbb
cmp
jns
lea
outs
mov
dec
push
getsec
cli
add
test
leave
mov
adc
pop
out
add
stc
push
popf
sub
fstp
das
push
push
shl
enter
lods
inc
adc
out
repz
mov
pop
repz
lahf
cli
mov
loop
sbb
mov
fisttp
clc
push
fst
data16
pop
mov
(bad)
push
cli
adc
stos
sub
movs
scas
call
or
mov
aas
(bad)
imul
and
cmp
test
popa
mov
mov
js
call
bound
stos
mov
jp
sbb
fs
sbb
fidivr
out
mov
out
jo
adc
or
mov
repz
inc
arpl
imul
test
(bad)
fwait
dec
inc
repz
jmp
add
add
adc
sub
mov
xchg
push
jne
xchg
ret
and
aam
dec
cmp
dec
mov
jle
push
ret
data16
out
sbb
or
push
je
jmp
xchg
loop
dec
mov
xor
jg
and
mov
(bad)
fadd
mov
add
arpl
push
cmp
add
xor
pop
xor
mov
or
mov
jo
sti
ret
jge
push
bound
add
mov
fs
rcl
imul
rcr
scas
add
dec
pop
std
and
xor
outs
mov
stos
pop
cdq
xchg
out
xchg
out
shl
bound
xchg
jnp
shl
xchg
(bad)
test
cli
shl
ss
imul
int
shl
and
test
push
call
cmp
ja
dec
add
dec
rcr
mov
mov
or
inc
jnp
inc
mov
jb
push
and
in
jno
xchg
sti
jnp
frstor
mov
xor
lea
daa
mov
ret
xchg
jg
nop
cmp
inc
enter
mov
xchg
lods
lock
mov
inc
sub
fadd
movs
loopne
xchg
cmc
movs
jmp
mov
lods
popa
inc
mov
jae
xchg
mov
call
pushf
fidivr
sbb
iret
add
mov
data16
adc
test
inc
in
or
lea
sub
call
outs
int3
sub
cmps
sahf
test
ss
(bad)
lea
sub
mov
jnp
cmps
and
add
pop
stos
inc
dec
enter
pop
ret
fs
jp
mov
sub
sub
lea
xchg
pop
add
add
ja
lock
pop
sbb
sar
adc
push
shl
cmp
or
pop
out
imul
out
cdq
cwde
fimul
inc
loope
jbe
pop
cwde
jnp
ret
cdq
mov
adc
cmp
lods
call
stos
aaa
jnp
pop
nop
mov
or
mov
adc
xor
pusha
mov
icebp
outs
or
sub
sbb
add
sub
les
jno
adc
dec
movs
enter
push
mov
cdq
cmp
cmp
xchg
data16
(bad)
sbb
out
mov
bound
leave
jmp
js
push
dec
ds
fdivr
inc
fdiv
sbb
lds
push
fnstcw
sub
xor
or
(bad)
cld
push
and
retf
inc
in
inc
jmp
xor
jg
sahf
jo
push
adc
cmp
sbb
fmul
dec
enter
lds
(bad)
lock
pop
push
xchg
out
mov
div
adc
mov
aam
lahf
fstp
(bad)
xor
cwde
mov
jecxz
popf
in
xchg
loopne
imul
push
(bad)
or
jl
mov
or
js
and
jb
pop
jns
dec
inc
test
dec
mov
not
push
dec
ret
enter
jp
dec
movs
dec
jp
or
stc
adc
cmp
mov
sbb
pop
add
imul
mov
ret
cdq
dec
stos
ror
push
jae
stc
pushf
stos
push
ror
data16
add
pushf
cdq
jo
sahf
or
(bad)
mov
leave
popf
sub
mov
mov
xlat
mov
cmps
push
pushw
rcl
push
cmp
push
dec
out
xchg
and
stos
dec
xchg
jecxz
dec
in
jge
out
pop
xchg
cld
pop
dec
(bad)
cmp
mov
or
es
mov
mov
dec
shr
dec
int3
loopne
bnd
inc
lods
cmp
mov
ret
and
stos
and
ins
ins
nop
sub
cld
pop
and
and
and
addr16
(bad)
sub
adc
cmc
dec
push
sbb
or
ret
call
jg
ret
or
push
cmc
retf
fs
int
mov
and
mov
lea
cwde
cdq
fst
repz
test
lea
pop
repnz
adc
es
cmp
jnp
mov
outs
jo
or
mov
and
ret
ret
mov
mov
fs
test
mov
popa
mov
dec
loopne
push
inc
mov
scas
cmp
loopne
cmp
xor
inc
mov
xor
or
or
add
lea
or
cdq
fdiv
fsubr
out
or
in
aas
jb
pop
xor
pusha
shl
cld
jno
jle
inc
loopne
or
call
push
call
pop
cwde
js
cwde
rcl
je
xchg
xchg
retf
dec
dec
jp
and
pop
pop
jp
jge
jnp
mov
dec
ret
inc
jo
aaa
and
xor
push
mov
nop
lahf
js
mov
jl
fcomp
pop
dec
inc
push
mov
jecxz
sub
inc
mov
jmp
ror
pop
jae
xchg
(bad)
call
and
in
outs
pop
adc
fsubr
mov
xchg
retf
push
push
xor
shl
or
cli
sbb
lods
sub
cmp
scas
(bad)
call
jp
jle
test
aad
sbb
clc
outs
mov
mov
inc
iret
shr
lods
xchg
jge
xchg
push
and
adc
and
mov
enter
bound
mov
imul
inc
ds
sub
push
xor
cmp
jmp
cmp
outs
xchg
bound
add
xlat
and
xor
scas
fdivr
shr
loop
test
cmc
stos
jo
inc
jnp
mov
and
sbb
js
mov
sub
inc
push
xor
sub
ret
mov
adc
mov
in
rol
pop
mov
xor
pop
xchg
and
or
fimul
rcr
arpl
mov
jnp
cmps
ja
in
movs
or
loope
popf
sar
xchg
jb
or
mov
mov
in
or
jl
or
stos
out
mov
jg
add
mov
les
fwait
add
and
test
hlt
fbstp
call
fwait
pop
cmp
or
adc
jmp
xchg
fbld
fnstenv
outs
out
fstp
mov
sub
ds
nop
adc
fnstcw
lea
in
xchg
jle
cdq
jbe
bound
lds
stc
cmp
fnsave
jne
icebp
fdivr
sbb
mov
mov
add
imul
scas
icebp
mov
aad
ja
jne
add
cmp
or
jnp
(bad)
retf
sbb
test
xchg
adc
or
repz
jnp
js
retf
cmp
adc
mov
push
fbld
adc
sub
icebp
ret
and
ja
adc
stos
dec
mov
pop
jge
outs
sbb
lea
mov
dec
dec
test
(bad)
inc
xchg
mul
mov
push
dec
jp
jo
mov
and
cmc
or
xchg
and
fistp
and
and
sub
xchg
test
xchg
jnp
retf
vpmulhw
sbb
aas
dec
push
jecxz
sbb
ds
fnstsw
sub
mov
call
cmp
mov
dec
pushf
shl
data16
and
sub
sar
xor
sbb
or
rcl
inc
test
xor
(bad)
(bad)
cmc
sbb
sbb
ret
inc
push
sbb
hlt
pop
repz
add
xchg
jmp
sub
mov
push
mov
es
lea
mov
mov
add
cmp
mov
mov
sbb
aaa
fistp
fimul
bound
aad
stos
adc
js
pop
mov
shr
push
fisubr
frstpm(287
sub
retf
mov
mov
push
mov
sti
and
add
nop
icebp
dec
repz
fwait
pop
dec
mov
in
rcr
add
dec
mov
aam
fwait
or
push
jmp
push
sti
add
xchg
cmp
(bad)
das
xor
dec
arpl
mov
in
push
fisttp
js
or
xchg
jg
push
mov
icebp
ja
sbb
sbb
mov
ret
in
inc
adc
xchg
mov
mov
fcomp
rcr
ret
es
mov
sbb
or
dec
xor
sub
fwait
sbb
enter
fld
xchg
jnp
repz
inc
inc
and
mov
fist
push
adc
call
sti
lea
push
icebp
pop
mov
ja
mov
imul
loop
sbb
ficom
xchg
aas
xchg
test
mov
cmp
popa
push
pop
repnz
xchg
fs
jne
mov
pop
scas
leave
mov
dec
ins
test
loope
cs
rol
jmp
cdq
imul
pop
pop
xor
lds
leave
addr16
pusha
push
dec
mov
(bad)
add
jno
movd
cli
addr16
cdq
jg
rcr
mov
je
out
imul
std
dec
jmp
gs
adc
adc
sub
repz
mov
and
outs
in
out
jle
xchg
dec
in
pop
(bad)
ficomp
aad
(bad)
xchg
jbe
jecxz
hlt
xchg
add
fiadd
and
and
movs
push
ja
shl
iret
or
lods
pop
add
mov
push
jnp
(bad)
in
in
mov
jecxz
scas
adc
jle
add
push
inc
and
push
mov
shl
enter
jmp
and
stc
xor
cmps
sti
xchg
aas
fs
(bad)
adc
or
out
and
(bad)
pop
ins
and
xchg
mov
shr
movs
or
jg
out
mov
add
into
jl
and
adc
ret
mov
mov
mov
xor
pushf
push
lods
hlt
inc
push
push
jle
dec
cmc
push
lds
retf
jl
clc
sbb
cmp
and
ror
inc
xor
dec
xchg
bound
cli
mov
mov
out
adc
cmp
test
mov
cmc
rcl
leave
add
mov
sbb
mov
outs
js
mov
push
aaa
push
ss
stos
fbld
cmp
cmp
ins
jge
dec
sbb
xchg
mov
add
nop
inc
sub
jbe
dec
in
xchg
fdiv
rol
pushf
mov
and
and
add
xchg
push
cmp
lods
fwait
push
retf
pushf
out
mov
scas
data16
xor
sub
push
cmp
ins
cmp
mov
dec
data16
push
xor
loope
sub
pop
add
xchg
pop
adc
jo
in
dec
sub
leave
xchg
mov
ror
dec
ins
dec
jg
jl
sbb
cmp
xor
dec
xchg
mov
(bad)
out
or
scas
ret
lahf
inc
mov
rcl
xchg
pop
jl
inc
sub
sub
into
mov
daa
out
mov
inc
sub
stc
sti
add
cmp
fchs
jno
(bad)
stc
mov
jecxz
dec
xchg
pop
cmp
outs
lock
stc
adc
adc
sub
cwde
cmp
cs
out
icebp
add
mov
xchg
in
dec
cmps
pop
retf
dec
ret
leave
rol
mov
(bad)
rcl
in
pop
mov
pushf
sbb
loopne
in
pop
int3
mov
dec
mov
test
popf
mov
pop
mov
sub
loope
clc
and
inc
sahf
jnp
inc
cwde
int
push
movs
pop
cmp
mov
lods
inc
mov
jae
mov
cmp
push
call
add
xor
jns
inc
jnp
jne
xor
xor
inc
mov
pusha
lock
xor
aaa
mov
cdq
fst
pop
cli
mov
dec
sar
sar
loopne
cmp
cli
jbe
jbe
sub
jge
cld
repz
es
cdq
scas
test
ins
add
in
lea
or
and
data16
xor
aam
or
jl
sar
xlat
popf
(bad)
ret
cmp
out
jp
inc
mov
jnp
lods
dec
out
xchg
pop
mov
sbb
shr
xor
cmp
cld
xchg
adc
jp
lea
or
dec
jle
adc
mov
popa
jle
adc
lods
dec
test
xor
cmp
fldenv
mov
mov
jbe
add
es
jmp
xchg
bound
mov
repnz
jle
fidivr
add
ins
mov
sub
jmp
jne
es
or
xchg
mov
mov
stos
outs
push
or
shl
scas
or
not
sub
cmp
jo
mov
ficom
imul
dec
xlat
dec
cdq
repnz
inc
xor
mov
rep
inc
xchg
pop
add
enter
shl
lods
mov
pop
clc
in
dec
scas
fsub
out
sub
or
dec
pushf
adc
retf
push
adc
mov
daa
mov
pop
jb
jge
mov
test
push
(bad)
jmp
jl
imul
xor
and
and
inc
rol
fldcw
or
mov
ror
mov
movs
mov
ret
add
retf
jmp
ror
retf
adc
pop
clc
les
in
rol
fwait
dec
mov
mov
popf
fadd
jb
(bad)
push
sub
pop
mov
iret
lea
fstp
aaa
inc
mov
nop
or
test
fld
xlat
into
call
gs
pop
movs
mov
(bad)
out
mov
ds
dec
pop
das
or
mov
retf
(bad)
in
rcr
loop
mov
ss
xchg
fiadd
sar
lds
test
lods
scas
push
clc
div
adc
xlat
in
xor
dec
das
xor
or
call
pop
jmp
dec
cmp
adc
or
pop
pusha
adc
idiv
leave
pop
pop
sub
or
mov
ror
jns
pop
imul
popa
push
xchg
sub
inc
pushf
cwde
adc
jb
repz
mov
inc
xor
mov
mov
jnp
in
push
sar
stos
sub
sti
nop
(bad)
adc
mov
stos
clc
jne
(bad)
xor
lods
or
icebp
add
mov
or
dec
sbb
mov
sbb
sub
or
add
call
mov
jge
mov
fisttp
test
in
sub
test
in
lock
adc
gs
fwait
push
ja
jns
call
scas
adc
iret
push
je
dec
pop
jg
push
enter
test
imul
mov
cmps
or
mov
loop
pop
cmp
sbb
mov
bound
xchg
add
dec
sbb
aam
mov
mov
mov
push
jp
in
dec
pop
out
fst
mul
ins
retf
fs
(bad)
repnz
pop
aad
push
inc
pop
push
pop
imul
mov
(bad)
ja
add
inc
outs
adc
cs
add
lods
sbb
xor
pop
jg
mov
mov
dec
sbb
pop
cli
push
pushf
jb
or
out
leave
add
fist
in
mov
fldcw
es
fcomp
call
adc
adc
xor
add
pop
fs
bts
retf
mul
loop
mov
(bad)
sub
test
inc
stc
enter
and
xor
inc
sbb
loop
cmp
dec
push
and
inc
mov
cmp
loopne
xor
or
push
jge
dec
xor
xchg
fbstp
(bad)
lods
ss
jns
push
in
test
add
jo
or
neg
dec
push
add
test
dec
sar
mov
push
push
xchg
or
or
inc
dec
cs
in
mov
xchg
cmp
into
sar
add
pop
lahf
adc
je
jae
adc
test
icebp
lahf
mov
jnp
retf
scas
sbb
out
stos
dec
mov
inc
sub
loop
fiadd
jmp
cmc
ins
je
xor
jbe
or
cmp
dec
mov
int3
stos
add
dec
push
shl
lahf
fst
mov
out
jl
push
mov
dec
cdq
xchg
out
mov
into
push
add
jb
stc
cld
xchg
xchg
movs
mov
cli
and
je
jp
sub
loop
mov
xchg
inc
rcr
mov
cwde
pop
mov
in
inc
jecxz
jl
mov
loopne
cmp
mov
add
push
push
jecxz
imul
mov
sbb
aad
or
mov
add
cli
mov
or
out
cmc
fs
loop
retf
aad
fwait
adc
or
ret
push
mov
xor
fadd
push
daa
sbb
push
aaa
jecxz
mov
in
pop
ja
das
call
retf
jle
jnp
(bad)
in
stos
push
rol
cwde
adc
loopne
stc
jne
js
jge
sub
push
out
dec
pusha
je
mov
inc
(bad)
mov
shr
out
jl
mov
pushf
inc
rcl
call
xchg
cmp
pop
mov
adc
cmp
fs
xchg
loop
ror
pop
cmp
jp
add
dec
xor
fidivr
add
shr
daa
mov
xor
(bad)
and
in
mov
lds
repnz
je
cmps
pop
or
pop
xchg
push
cdq
aaa
mov
xor
jns
in
mov
fwait
jno
add
mov
out
fisubr
mov
out
sbb
push
xchg
stc
adc
rcr
iret
fstp
repnz
mov
lock
imul
mov
les
pop
ss
cmp
and
aas
(bad)
lods
and
jle
fstp
xchg
cwde
loopne
xor
add
mov
cmc
imul
mov
icebp
mov
shr
xchg
fcmovu
out
addr16
cmps
stos
push
and
lock
(bad)
es
mov
pusha
mov
cmp
and
push
retf
lahf
cmp
das
sbb
xor
loopne
mov
sbb
add
sub
shl
xchg
sub
push
or
call
xor
inc
add
cmp
mov
mov
loopne
ins
ror
sbb
mov
jmp
xchg
mov
repz
pop
mov
adc
stc
xchg
jbe
ins
jo
scas
mov
out
clc
jnp
pushf
pop
cmc
adc
dec
add
xor
xchg
sahf
out
loop
inc
mov
ins
add
outs
(bad)
rcl
mov
fistp
ja
imul
(bad)
(bad)
bswap
pop
in
je
lods
fldenv
stos
mov
pop
and
inc
or
pop
pop
jae
xor
lock
adc
mov
mov
inc
cld
test
sahf
cld
jmp
xchg
or
leave
mov
sbb
mov
sbb
pusha
jl
pusha
jbe
div
pop
sbb
js
pop
inc
cdq
call
push
dec
es
sar
mov
outs
fcomp
mov
sub
(bad)
rep
je
mov
lods
pop
jle
lods
xlat
xor
xor
addr16
dec
fimul
mov
and
sub
mov
sbb
mov
test
adc
jo
pop
push
xchg
int3
mov
mov
cld
xchg
popf
daa
and
shl
loop
lods
call
cmps
stos
out
popa
je
mov
adc
pop
adc
enter
mov
clc
xchg
sti
cmps
dec
jl
jns
cdq
lahf
pop
int3
(bad)
jmp
cwde
add
into
iret
clc
ja
je
dec
sbb
and
shl
xchg
in
fldenv
bound
aas
mov
test
inc
sub
adc
push
dec
sbb
daa
mov
ins
aam
mov
mov
or
xor
rcl
dec
int
fild
mov
cmp
xor
jp
in
inc
sub
sub
je
dec
inc
mov
add
icebp
jp
mov
cwde
adc
stos
mov
jnp
mov
pop
lds
cs
cmps
ficomp
out
cmp
ret
jp
add
xchg
scas
fbld
aaa
sub
mov
in
dec
mov
les
pop
xchg
jno
arpl
inc
pusha
frstor
sti
lods
push
mov
push
xchg
in
sbb
jb
or
fsincos
xor
push
pop
(bad)
sbb
ja
adc
call
dec
pop
cmc
dec
stos
sub
jns
mov
xchg
hlt
neg
cmc
pop
jmp
add
out
sub
mov
xor
dec
sub
call
shr
dec
pop
jmp
fucom
inc
dec
adc
test
push
mov
fs
lea
pop
jl
jp
fs
ret
jge
adc
mov
push
mov
add
push
out
and
inc
jnp
add
sbb
mov
sub
lahf
or
nop
daa
out
sub
mov
sub
out
mov
loope
inc
jecxz
gs
mov
rol
mov
or
jae
and
test
popa
push
jnp
xchg
push
inc
pop
push
and
stos
loop
daa
and
mov
mov
mov
ds
(bad)
mov
ins
stos
jmp
stos
pop
ss
mov
loopne
xor
push
and
call
jle
loop
dec
push
stos
cmp
aad
jg
inc
popw
ret
adc
pop
cs
pusha
and
(bad)
js
sbb
inc
jnp
out
in
lds
ja
mov
(bad)
fnstenv
mov
data16
adc
inc
push
inc
push
add
into
mov
fldenv
cmp
jge
jno
adc
push
mov
shl
shl
inc
add
jge
out
lahf
sti
popa
(bad)
sub
fadd
stos
pop
test
aam
test
cdq
jns
imul
mov
aam
adc
mov
shr
sbb
out
mov
mov
out
pop
mov
inc
mov
jno
ins
pop
mov
retf
cmp
fsub
dec
test
bound
(bad)
addr16
sbb
(bad)
pop
cmp
cmp
cmps
fsubr
icebp
in
(bad)
dec
push
jp
fsubr
div
out
neg
retf
fucom
pop
stos
inc
rcr
enter
jge
lahf
push
xor
mov
mov
jl
dec
xor
or
outs
fldenv
mov
hlt
test
cwde
data16
jge
fcom
int3
pop
pop
mov
dec
inc
int3
mov
adc
clc
loope
mov
push
adc
jno
adc
mov
cmc
out
jle
js
repz
xchg
ds
mov
retf
stos
icebp
test
sbb
dec
inc
jne
out
std
outs
pop
scas
add
add
and
ja
push
mov
fadd
in
adc
sub
cmp
int3
sbb
jmp
aas
mov
inc
mov
(bad)
jns
adc
jo
popf
xor
pop
neg
xchg
pop
mov
sub
adc
lods
inc
mov
jl
jg
jge
inc
xor
enter
cs
(bad)
cli
pop
(bad)
out
into
pop
push
mov
push
pop
fdiv
cmp
enter
mov
cwde
xchg
and
hlt
jnp
pop
adc
mov
inc
mov
push
mov
sub
mov
pusha
in
icebp
je
in
jmp
out
dec
ins
fimul
xor
out
cmp
inc
add
pop
xor
push
addr16
cmp
dec
jle
adc
dec
shr
ja
stos
in
pop
movs
dec
jg
stos
and
aad
ins
aaa
mov
test
imul
movs
push
fs
mov
popf
cli
(bad)
sbb
push
adc
fcmovu
fist
scas
std
jno
in
jmp
js
adc
xchg
fnstenv
sub
mov
sub
mov
call
cmp
inc
test
dec
pop
push
scas
movs
cmc
sbb
dec
loope
mov
cld
cli
fdiv
sub
in
sub
jne
and
jmp
fistp
cmp
mov
push
outs
mov
xchg
ja
(bad)
in
repnz
out
imul
cmp
cmp
std
test
sahf
or
cmp
inc
push
sbb
mov
and
inc
push
jns
outs
push
xor
mov
add
pop
inc
mov
mov
mov
sti
call
lods
push
icebp
jmp
leave
inc
popf
jle
inc
push
push
mov
mov
arpl
dec
lods
push
stos
mov
out
pop
call
mov
cmp
ins
cmps
mov
dec
pop
mov
adc
aas
(bad)
lds
imul
sbb
sub
in
(bad)
dec
out
inc
mov
mov
and
lock
add
jne
sub
dec
dec
aad
lahf
cmp
pop
jg
lds
ret
cdq
ins
push
fist
test
jle
pop
dec
jnp
test
push
shr
or
mov
fldpi
scas
xchg
int3
ins
or
stc
mov
sbb
inc
cmps
jmp
leave
daa
repnz
pop
cmp
ds
sub
dec
ror
stc
mov
or
push
sar
paddusw
(bad)
(bad)
iret
sbb
das
cmp
inc
aad
scas
pushf
repz
or
imul
in
addr16
inc
into
jnp
inc
movs
int3
cmp
pop
mov
push
fsub
mov
mov
cmp
ins
pop
lock
stos
ss
sahf
fcom
sbb
outs
and
inc
xor
push
push
js
pop
push
adc
push
and
js
adc
mov
scas
and
cli
inc
jmp
xor
repz
out
shl
(bad)
(bad)
mov
xchg
fcomp
daa
mov
retf
or
imul
pop
sub
add
mov
popa
movs
adc
call
outs
mov
outs
popf
ss
aad
pushf
mov
jecxz
pop
push
and
gs
xchg
add
adc
lds
call
sar
sbb
iret
adc
sbb
xor
adc
add
fiadd
es
and
dec
jmp
addr16
std
out
mov
cmp
or
ss
mov
aas
mov
sahf
and
mov
test
mov
(bad)
lock
dec
or
es
icebp
cmp
sti
mov
cwde
mov
push
pop
xor
popa
cmp
loop
cmp
pop
aas
inc
bound
jae
loop
add
pop
movs
jb
inc
scas
jns
cmp
mov
lock
mov
lds
adc
dec
sbb
push
inc
stc
adc
sbb
jbe
es
aas
(bad)
lock
push
or
enter
scas
push
loope
js
pop
dec
sub
inc
and
stos
rcl
lahf
pop
lock
popf
pop
adc
add
pusha
dec
movs
inc
test
bound
mov
add
in
mov
into
pop
mov
jbe
jnp
mov
mov
add
adc
jmp
call
mov
mov
cmps
rcr
jno
cmp
ins
push
lods
scas
jne
ja
(bad)
(bad)
sbb
sbb
add
mov
and
addr16
data16
out
xchg
pusha
mov
in
or
push
hlt
adc
loopne
in
and
ja
stos
mov
pop
xor
out
fidivr
jmp
cmp
pop
es
repnz
and
clc
cmp
adc
adc
in
movs
sub
in
pushf
mov
inc
imul
in
inc
in
mov
mov
stc
aaa
lds
push
pop
outs
nop
inc
fbld
mov
shl
push
or
fadd
pop
and
pop
push
lods
sbb
shl
fs
outs
scas
mov
xor
pusha
push
dec
aas
cmc
adc
cmp
imul
inc
sub
and
cmps
shl
dec
(bad)
sti
(bad)
mov
lea
daa
out
sub
inc
fst
fs
fwait
test
jmp
enter
push
xor
jmp
inc
jbe
mov
fild
(bad)
leave
xchg
pop
pop
outs
lods
mov
out
mov
and
xchg
ror
in
cmc
jle
push
adc
test
popa
jge
ins
enter
gs
inc
add
je
out
(bad)
mov
sbb
mov
cli
jl
dec
ret
add
push
ret
das
dec
(bad)
stos
jb
xchg
dec
test
out
jno
jae
jge
int3
mov
(bad)
test
sti
icebp
(bad)
rcl
outs
fld
ds
movs
icebp
xchg
add
cmp
(bad)
(bad)
mov
add
and
in
sub
ins
cmp
into
and
and
in
leave
lock
aad
mov
loop
mov
sub
adc
mov
or
xchg
mov
and
int3
push
(bad)
rcl
push
call
sbb
cmp
or
mov
xchg
push
sahf
fnstsw
sbb
xor
mov
out
jmp
ss
test
fsubr
xor
lahf
pop
cli
fnstenv
imul
push
aas
out
jno
cmc
shr
sub
push
test
xor
sbb
aad
mov
popf
clc
inc
xor
cwde
mov
xchg
inc
out
in
add
lock
repnz
mov
idiv
mov
cmps
inc
pushf
adc
out
call
popf
mov
sub
cmps
(bad)
enter
jl
scas
xchg
and
add
clc
sub
cwde
pop
cmps
lea
jge
clc
(bad)
mov
retf
jae
mov
fsub
dec
inc
sbb
jp
imul
push
ins
jbe
sti
jb
dec
mov
or
xchg
std
inc
lods
mov
pop
sbb
(bad)
aas
ret
sub
das
jge
dec
loopne
add
sbb
cmp
and
je
dec
out
mov
mov
nop
jb
data16
sahf
or
xchg
mov
push
lock
push
(bad)
repnz
outs
test
arpl
jl
dec
mov
xchg
fcom
sub
pop
stos
aaa
imul
pushf
cmps
ins
inc
sub
cmc
in
jne
mov
mov
cmp
fild
mov
cmp
sbb
fs
push
sbb
jge
jno
fisttp
and
jp
imul
adc
mov
push
sbb
dec
sbb
stc
push
dec
sub
lods
pop
mov
sbb
fmul
test
ins
movs
pop
sbb
sub
cli
jns
push
shl
push
cwde
cmp
push
div
jle
push
sub
das
stos
sub
movs
xor
mov
sbb
inc
stc
pop
adc
hlt
aam
je
dec
loop
and
or
add
mov
and
adc
adc
inc
fstp
stos
mov
(bad)
push
pop
jae
addr16
mov
scas
dec
pushf
and
mov
lods
mov
int3
cld
jno
fisubr
mov
cmp
loopne
popa
fisttp
scas
adc
mov
adc
movs
push
push
out
pop
ja
lock
ror
fstp
push
pop
dec
sub
mov
add
addr16
test
xchg
dec
add
cmc
nop
push
jbe
jae
fld
mov
push
sbb
stos
push
mov
xchg
jle
mov
imul
pusha
out
fstp
div
nop
adc
dec
int
or
mov
rcr
add
inc
adc
and
lods
mov
or
dec
shl
adc
sti
jbe
mov
xor
jp
leave
jmp
shl
dec
dec
jns
imul
ret
jg
ret
fucomi
dec
and
imul
or
fnstenv
mov
adc
aaa
aad
mov
outs
lea
add
adc
jmp
mov
jne
pop
add
or
dec
cmp
fst
jmp
mov
add
mov
mov
bound
sub
jns
jecxz
stos
sbb
dec
jmp
mov
retf
arpl
xor
adc
(bad)
push
repz
scas
xor
push
mov
fs
push
mov
dec
aam
push
shr
lock
xor
cmp
mov
arpl
cmp
mov
cmc
icebp
push
(bad)
shl
add
loope
push
push
test
out
mov
xor
sbb
dec
cmp
xor
sbb
and
rcl
daa
repnz
xchg
data16
stos
movs
(bad)
mov
inc
sbb
stos
imul
jae
mov
push
xchg
cmp
pushf
loopne
and
enter
stc
cdq
xchg
mov
fdiv
addr16
stos
dec
inc
iret
shr
ror
lds
xchg
fs
fcomi
inc
ins
bound
pop
jge
lahf
cdq
inc
and
adc
shl
cdq
call
mov
(bad)
ror
ins
rdmsr
push
test
sub
pop
pop
add
or
mov
dec
scas
cmp
adc
mov
xchg
sbb
fucomip
pop
js
mov
int3
enter
addr16
int
jne
push
cld
fwait
adc
fist
(bad)
in
mov
adc
scas
aam
push
ja
sbb
mov
push
fmulp
xor
fldcw
popf
out
test
retf
inc
in
cld
push
cdq
jle
sbb
nop
xor
xchg
sbb
inc
sbb
dec
inc
mov
sub
mov
sti
cli
outs
out
out
ror
and
adc
xchg
jl
aaa
cmps
or
pop
xchg
lock
or
cmp
dec
(bad)
movsx
sub
mov
scas
mov
jl
(bad)
pop
test
push
cld
cli
jge
xchg
pop
push
fnsave
pop
xor
inc
and
jb
ror
or
mov
adc
mov
dec
push
(bad)
cmc
adc
test
stc
lea
mov
lods
nop
cwde
out
gs
mov
in
cmp
sbb
ss
cs
jmp
test
jo
sub
jo
outs
mov
mov
pop
cmps
pop
pop
cmc
xchg
fldcw
cdq
xchg
(bad)
clc
pop
mov
sub
sbb
pop
cld
imul
iret
dec
pop
mov
push
xor
ja
dec
cmp
mov
ror
pop
cmps
adc
cmp
add
mov
xchg
jp
add
jg
rol
fwait
push
cwde
cmc
daa
mov
push
(bad)
jmp
lock
mov
pop
rol
sar
popf
mov
rcl
push
sub
dec
sbb
add
cdq
jl
shl
das
mov
loope
inc
mov
mov
fmul
aam
sbb
xchg
or
push
mov
xchg
sbb
mov
seto
xor
imul
xchg
sahf
dec
mov
imul
inc
outs
xchg
add
sti
mov
mov
xchg
jl
data16
jb
push
out
cmp
add
sbb
xchg
xor
xchg
jmp
adc
xor
dec
dec
jecxz
sub
outs
inc
pop
out
pop
setbe
fnstcw
adc
out
or
jg
ret
add
mov
mov
scas
cmps
outs
fdiv
push
ss
(bad)
std
lds
cmp
sub
xchg
inc
cmp
call
sbb
scas
in
scas
push
pop
mov
cmp
lahf
mul
xchg
cmp
adc
leave
loop
or
fsub
mov
fwait
push
(bad)
cmp
out
or
add
jecxz
(bad)
(bad)
sti
dec
es
add
push
pop
xlat
lea
fld
cli
push
out
cld
mov
mov
in
push
gs
ret
jb
dec
(bad)
xor
add
xchg
xchg
into
sbb
sub
ret
shr
push
mov
dec
out
movs
adc
out
aad
xchg
out
sub
in
fsub
(bad)
les
mov
and
fld
dec
adc
mov
(bad)
js
lahf
mov
push
inc
outs
xchg
xchg
sbb
les
sub
push
push
adc
(bad)
jno
ja
rcr
sub
addr16
sbb
or
out
daa
shl
rcl
or
push
movs
pop
(bad)
and
pop
bnd
mov
icebp
jmp
cmp
(bad)
dec
jb
xchg
int
jl
push
or
ret
out
jge
sar
xor
jb
xchg
aaa
xchg
loope
fild
ins
(bad)
in
mov
daa
mov
sbb
idiv
sub
jecxz
or
call
ret
adc
mov
retf
data16
scas
jmp
jg
add
adc
popa
inc
test
cmp
mov
cmc
or
iret
out
jp
bound
lods
push
aad
je
loope
xor
std
das
int3
cmp
out
mov
cmp
jns
and
cli
mov
mov
sbb
shl
add
mov
jae
xor
hlt
adc
into
ret
sub
aaa
or
cs
jo
jge
ret
cs
adc
sub
sbb
pop
popf
sti
mov
in
and
push
dec
test
cmp
add
or
ret
mov
sbb
push
mov
rol
or
mov
test
and
fdivr
xor
pop
jne
shl
pop
mov
(bad)
xchg
add
mov
mov
xor
mov
movs
lods
or
out
jl
into
daa
sbb
repnz
aam
jae
fistp
pop
scas
movs
outs
mov
pop
cmp
loopne
mov
stos
jbe
ja
xor
push
movs
fbld
add
mov
out
pop
jmp
adc
sbb
jbe
js
(bad)
dec
iret
cmps
ins
jae
aaa
call
inc
mov
pop
sbb
fs
xchg
jno
and
xchg
fwait
pop
int
pop
leave
hlt
lods
push
fwait
jecxz
hlt
retf
lods
cmp
stos
cli
retf
sahf
lds
cmps
add
mov
push
sbb
jnp
or
cmps
into
sbb
je
fnstsw
sahf
mov
pop
jbe
pop
mov
add
mov
stos
int
dec
sbb
ins
dec
jae
mov
(bad)
pop
mov
ficomp
inc
dec
aad
push
rol
mov
in
inc
es
pop
jo
sub
xor
mov
mov
(bad)
sub
(bad)
sti
or
sahf
push
or
lock
ror
cmps
xlat
mov
push
push
lahf
push
add
cwde
jle
push
pop
cdq
xor
mov
add
ja
and
xlat
leave
xor
and
lods
arpl
xor
aaa
inc
adc
mov
cmps
pusha
and
outs
leave
sub
mov
adc
sub
and
cmp
add
sbb
icebp
xchg
test
xor
iret
xlat
mov
mov
jnp
inc
fnstsw
popa
sbb
shr
inc
cs
sbb
mov
dec
jmp
in
(bad)
push
mov
cwde
inc
cmp
mov
cmp
jmp
retf
movs
mov
js
mov
or
mov
lahf
fisub
rcl
aam
dec
aaa
mov
add
adc
test
out
cmp
xor
jne
cmps
loopne
pop
fstp
or
lock
pop
out
stos
and
ret
xchg
ret
out
xchg
stos
xlat
loop
fisub
(bad)
sub
pop
mov
(bad)
in
loopne
sbb
loop
movs
add
mov
adc
xchg
sub
mov
es
movs
shl
hlt
lds
scas
or
sbb
jmp
jbe
inc
jae
push
das
and
jmp
cmps
inc
and
shr
cmp
bound
push
es
mov
mov
jne
adc
or
pop
push
mov
pop
loop
fwait
daa
adc
nop
hlt
lea
stos
aaa
sub
shr
mov
mov
mov
adc
or
sti
push
xor
test
fwait
or
and
pop
in
repnz
out
jle
std
ins
and
cmps
jl
inc
std
sub
mov
cld
add
mov
inc
mov
mov
push
mov
xchg
dec
cdq
mov
dec
push
icebp
mov
cli
nop
sub
sbb
je
add
inc
mov
outs
in
cmp
aaa
cmps
scas
data16
aaa
les
int
sub
in
mov
push
or
into
push
jle
cmp
xchg
xor
inc
(bad)
cmps
push
lahf
pop
sbb
out
mov
sub
pop
push
dec
mov
aas
dec
xchg
dec
cld
enter
push
fs
push
fsubp
or
dec
xor
xchg
inc
xlat
push
xchg
add
push
ds
and
int
push
out
lea
out
sub
out
out
cld
sub
fstp
pop
push
add
and
nop
lods
and
movs
dec
push
lods
xchg
and
xchg
mov
(bad)
clc
sub
adc
shl
mov
into
aaa
add
sub
jle
fidiv
in
jge
popf
xchg
sub
fs
data16
mov
mov
cmp
cmc
cdq
loop
inc
sub
es
jge
mov
mov
xchg
imul
or
ret
je
mov
(bad)
test
shl
sub
inc
jmp
aaa
out
test
sub
nop
fwait
cmp
sbb
in
jg
inc
mov
je
pushf
sub
aam
push
mov
xchg
loopne
(bad)
xor
cmp
mov
ds
inc
js
aaa
std
sub
rcl
mov
push
jl
stc
dec
aaa
add
iret
or
aas
icebp
cmp
cwde
cmc
ret
xchg
xchg
cmp
inc
outs
inc
ja
ret
xchg
mov
ins
ja
xor
mov
jmp
xchg
mov
arpl
dec
mov
pop
jge
shl
outs
lods
mov
pop
push
arpl
hlt
movs
and
movs
ficom
xchg
mov
ret
(bad)
mov
mov
xchg
pop
xor
pop
fs
scas
inc
sar
push
cmc
xor
popa
loop
cmp
cld
xchg
call
out
call
loope
and
inc
and
jnp
pop
test
push
cld
and
sbb
mov
das
or
(bad)
jae
cmc
leave
or
dec
outs
retf
jne
jbe
cdq
fst
dec
out
repnz
lea
jb
jo
(bad)
dec
js
sbb
jno
and
dec
jmp
cmp
cmp
mov
inc
adc
adc
push
xchg
cmps
hlt
mov
adc
jl
lds
hlt
sbb
ja
inc
gs
pop
and
(bad)
mov
jae
or
fdiv
add
sub
and
enter
xchg
ror
dec
inc
cmps
cmp
and
imul
out
(bad)
mov
(bad)
sbb
outs
mov
repz
outs
push
fs
mov
out
mov
lods
mov
call
call
inc
mov
push
fidivr
test
pop
ficom
pop
icebp
sar
or
cmps
dec
ret
test
stos
(bad)
retf
adc
fnsave
aas
xchg
in
out
stos
mov
adc
loopne
rol
cmps
and
xchg
dec
xchg
sti
mov
aam
shr
jg
repz
fist
std
gs
xchg
(bad)
pop
xchg
lea
pop
sahf
add
jae
jmp
jae
xor
or
adc
cmp
ja
adc
sbb
sub
push
ins
inc
mov
fcomip
es
retf
jae
mov
daa
mov
sbb
les
adc
xchg
adc
or
cli
inc
mov
cwde
sub
addr16
pop
add
int
jmp
loope
cmp
rcl
adc
fcmovnbe
jno
stc
mov
sbb
and
loope
fldenv
ins
sar
call
sbb
or
push
outs
bound
jp
sub
xor
(bad)
(bad)
or
jb
sahf
enter
repz
sub
out
cmp
pop
cs
sub
out
mov
pop
les
xor
dec
ss
das
inc
jns
aam
fdiv
and
push
mov
xchg
call
jle
js
(bad)
jnp
and
mov
jae
xor
rol
lea
cmps
aas
ror
cmps
xchg
rcr
sbb
sar
shl
aas
inc
xor
stos
jle
jecxz
je
mul
pop
xlat
mov
js
in
das
push
js
sbb
jl
rcl
jb
retf
fisttp
movs
rcl
dec
call
mov
sbb
ins
fxch
das
shl
clc
push
bound
mov
ret
in
outs
jmp
aad
mov
adc
mov
push
leave
mov
and
dec
mov
imul
pop
pop
or
jae
jge
jmp
shr
(bad)
mov
push
xchg
sub
inc
hlt
pop
jnp
jb
idiv
mov
scas
or
xchg
xchg
cmp
cmp
inc
pop
cmps
outs
pop
mov
pusha
mov
push
push
xchg
jmp
loop
rcr
jbe
push
cmp
fld
in
frstor
push
in
xchg
dec
ror
mov
cmp
mov
and
jne
aas
ret
mov
and
lods
add
fidiv
cld
aaa
ss
fld
dec
mov
xchg
mov
and
inc
xchg
imul
mov
icebp
and
mov
sbb
cli
adc
in
jmp
gs
nop
sub
adc
test
dec
jae
pop
or
repz
pop
scas
jb
test
pop
jo
lea
mul
mov
clc
sub
fst
or
xchg
hlt
int
(bad)
std
lahf
sbb
add
out
lds
dec
jmp
xchg
lea
mov
mov
mov
cs
push
retf
sbb
push
adc
push
imul
xchg
in
out
xor
lods
lahf
xor
inc
dec
cwde
retf
inc
pop
sbb
mov
or
fnstcw
jno
sbb
shl
movs
stos
mov
aaa
sub
xor
fwait
mov
inc
lock
pop
and
cwde
and
jmp
mov
xchg
fwait
lea
inc
and
ret
call
mov
ret
repnz
xchg
mov
cmp
mov
int
push
sbb
sbb
repz
pop
lea
sub
or
push
test
aaa
mov
ret
cmp
pop
inc
test
out
mov
dec
sub
retf
push
(bad)
shl
or
jecxz
push
add
push
out
jns
fsubr
push
xchg
or
fild
xchg
or
popa
xchg
sbb
jle
pop
sbb
sbb
inc
call
rol
push
out
dec
push
jg
(bad)
mov
das
push
adc
pop
pop
add
jg
add
pushf
ss
div
je
mov
mov
jle
into
loope
or
mov
dec
data16
scas
sbb
fisubr
retf
jmp
dec
outs
jbe
inc
dec
test
arpl
mov
mov
sbb
adc
rcl
es
push
(bad)
pop
mov
adc
(bad)
je
mov
push
rcl
cwde
rcr
cmps
sub
push
xor
into
aam
cdq
or
push
inc
dec
jno
imul
call
adc
mov
sbb
fadd
dec
repnz
push
mov
mov
je
inc
daa
adc
mov
inc
inc
pop
jl
push
sar
sub
sub
fcom
int
js
mov
scas
sub
lea
sar
inc
adc
les
xor
add
rcl
xchg
or
push
movntps
ror
test
dec
(bad)
sbb
push
shl
and
add
gs
inc
or
jb
shr
(bad)
jmp
(bad)
(bad)
adc
mov
cmc
hlt
xor
mov
jb
cmp
test
mov
hlt
cli
mov
ins
gs
add
pop
jg
adc
mov
push
sar
mov
cld
sub
xor
cli
dec
add
mov
sub
and
and
mov
inc
in
fdivr
cmp
test
push
pop
lahf
dec
push
nop
jge
lds
sub
jle
popa
xor
dec
dec
ds
xchg
cmp
add
push
jle
xchg
mov
lods
push
inc
inc
xchg
mov
ss
sahf
retf
xlat
sub
inc
aas
jns
sub
cmp
loope
popa
xchg
in
and
retf
rol
adc
ficomp
inc
rcr
in
loop
sahf
push
jg
popf
aaa
arpl
out
call
mov
cmc
out
dec
sub
ror
outs
cli
fsub
sahf
aas
shl
pop
sub
mov
mov
(bad)
cmp
xchg
push
test
addr16
mov
movs
dec
arpl
imul
and
mov
jo
adc
arpl
movs
xlat
xchg
jnp
cld
adc
retf
int3
dec
cmp
repz
xchg
or
mov
add
repnz
outs
push
mov
dec
push
loop
fisubr
scas
cmp
fidiv
xor
mov
pmuludq
mov
pop
out
mov
enter
xchg
imul
bound
jae
es
add
in
outs
adc
sahf
ins
or
fsub
iret
xchg
inc
mov
test
jo
les
add
leave
cmp
add
jg
sbb
ds
cmp
cli
dec
movs
in
stos
mov
sub
rcl
jle
mov
pop
jne
mov
push
js
mul
inc
sub
mov
jl
fcmovbe
lods
jmp
shl
jo
js
jmp
mov
mov
dec
bound
in
ret
movs
test
jo
add
sbb
(bad)
loopne
icebp
and
imul
outs
add
(bad)
pop
ret
or
and
rol
sbb
jbe
jbe
add
in
or
xor
jno
dec
test
cmp
pushf
pop
dec
xchg
cmp
mov
out
scas
push
cmp
bound
xor
enter
ds
or
push
aas
pop
into
int
push
xchg
sahf
push
adc
dec
imul
(bad)
test
xchg
jne
cli
stos
rcr
loop
sbb
jecxz
inc
push
sbb
repnz
mov
call
jecxz
je
push
xor
not
shr
outs
jmp
cmp
xchg
addr16
aaa
inc
pop
bound
inc
neg
(bad)
mov
shl
push
fmul
fwait
in
mov
adc
aad
sbb
and
in
stos
addr16
jno
push
hlt
mov
(bad)
pushf
retf
ja
mov
push
div
pusha
push
leave
push
lock
and
push
pop
pop
dec
or
mov
sbb
ret
mov
movs
(bad)
scas
je
jl
mov
scas
push
cdq
cwde
icebp
lea
add
sbb
and
sbb
mov
cmps
ds
push
cmps
sub
stos
mov
pop
pop
xor
jp
mov
(bad)
out
loopne
aad
pop
sub
pop
push
cmp
adc
mov
leave
add
rcl
ret
in
dec
mov
jbe
(bad)
push
test
add
push
mov
pop
loope
push
pusha
cwde
push
mov
cdq
adc
lahf
out
xchg
iret
inc
stc
nop
call
ror
pop
mov
fcmovne
ret
mov
add
xor
mov
push
scas
cmps
data16
rcl
outs
es
mov
jg
pop
push
jnp
and
and
pop
int3
in
test
or
sysenter
les
fwait
(bad)
dec
pop
push
gs
add
pop
aad
cmp
and
pop
lods
adc
cld
shl
ja
in
pop
int3
rol
popf
test
and
ret
inc
lods
sbb
test
mov
add
xchg
mov
mov
xchg
test
push
gs
fwait
pop
lock
or
loop
xor
or
mov
stos
(bad)
or
xchg
int3
mov
dec
lahf
fcom
pop
adc
pop
mov
dec
or
hlt
xlat
mov
outs
jl
push
push
adc
punpcklbw
ins
cmp
mov
leave
add
push
pop
xchg
ins
arpl
inc
inc
jle
daa
mov
lds
pop
mov
sahf
sti
dec
pcmpeqd
test
push
scas
les
sbb
cmps
in
sub
push
sub
xor
and
pop
out
(bad)
enter
push
icebp
add
mov
inc
ds
icebp
(bad)
xchg
mov
mov
lahf
mov
cmps
push
mov
cmp
push
inc
aam
xchg
mov
dec
ficom
mov
cwde
mov
or
inc
int
or
mov
mov
jb
or
popa
xor
inc
ins
xchg
mov
call
ss
or
inc
mov
inc
ins
loop
dec
js
mov
push
lock
push
and
push
or
hlt
push
and
pop
xchg
pop
dec
adc
push
sub
sub
add
fistp
aad
xchg
in
pop
les
or
mov
and
rol
mov
aam
mov
ja
loopne
shl
fidiv
scas
stos
inc
xor
inc
pop
push
das
stos
jle
aam
sbb
mov
mov
mov
fimul
mov
jp
jae
cmps
jecxz
int3
mov
push
pop
sbb
mov
movs
add
sub
cmp
mov
mov
xor
(bad)
iret
sbb
xchg
stos
fmul
pop
fadd
xchg
mov
lods
(bad)
out
nop
xchg
js
addr16
pop
fwait
push
mov
lock
ja
inc
fisubr
fadd
fisub
out
fnsave
popa
mov
mov
jl
mov
or
adc
add
jnp
test
sahf
or
sbb
mov
icebp
pop
(bad)
clc
add
dec
cmp
jge
jmp
sub
and
clc
or
call
scas
aaa
push
rcr
jmp
mov
test
scas
(bad)
dec
arpl
sub
sbb
fcmovnbe
xchg
mov
sub
cs
mov
pop
ret
xchg
hlt
rcl
(bad)
pop
mov
cs
mov
sub
sub
push
add
in
out
fs
sbb
jl
sub
or
lods
imul
jns
loop
dec
popf
xchg
adc
push
ins
inc
xchg
jmp
add
xor
inc
sbb
ret
gs
adc
mov
outs
imul
and
pushf
fcmovb
push
sti
jbe
sub
lods
outs
mov
mov
and
pop
scas
pop
mov
jmp
dec
cmp
in
jmp
pop
sub
jne
ja
enter
aam
inc
(bad)
lahf
pop
es
xchg
repnz
and
pop
fld
dec
inc
mov
mov
mov
test
xor
add
fidivr
or
dec
ret
pop
(bad)
sbb
sahf
cmp
test
ss
add
ret
jbe
bound
jnp
jnp
cld
mov
cmp
(bad)
int
mov
sbb
cmp
inc
fidiv
pop
mov
sbb
or
scas
dec
fdiv
sahf
sub
mov
xor
adc
sbb
sbb
das
inc
sub
out
push
stos
ins
ins
cdq
in
scas
je
into
popa
mov
xor
sbb
outs
cmp
int3
add
xor
retf
jl
out
mov
mov
scas
int3
repnz
jp
(bad)
inc
cwde
cmp
int
mov
daa
shl
stos
mov
loopne
(bad)
push
mov
jne
in
or
inc
imul
cs
xchg
jg
push
iret
je
shl
outs
popa
enter
ret
xchg
stos
(bad)
fmul
ret
dec
test
sub
imul
mov
mov
mov
jb
pop
jbe
xchg
adc
sub
push
dec
loope
fs
xchg
fdivr
xor
out
std
in
mov
(bad)
jp
sub
mov
mov
lock
inc
je
add
mov
out
cmc
pop
sahf
les
popa
ffreep
sbb
xchg
sub
leave
loope
adc
xchg
jg
add
std
mov
push
jg
mov
iret
push
js
jo
(bad)
fs
ins
ja
fimul
movs
xchg
push
inc
push
fbstp
xor
mov
push
mov
lea
(bad)
and
movs
jns
jmp
addr16
hlt
addr16
imul
aaa
cmc
imul
pop
pop
sbb
mov
mov
fisubr
fwait
xor
xchg
cmp
cmps
leave
leave
out
pop
das
add
rcr
in
cld
ss
xchg
shl
call
mov
fwait
dec
and
mov
ss
adc
and
dec
lea
sub
xor
sbb
cmps
dec
rcl
(bad)
jno
mov
xor
xor
xor
mov
add
mov
jnp
jle
(bad)
dec
pop
sahf
adc
push
mov
(bad)
leave
mov
xor
retf
jno
sub
mov
mov
push
jg
fisttp
mov
push
jns
xor
clc
test
loope
xor
stos
jmp
ss
jle
pop
dec
xchg
xchg
test
cmp
icebp
daa
int3
adc
inc
pop
(bad)
adc
adc
mov
pop
imul
sbb
(bad)
jo
sub
lds
fisubr
scas
add
fisub
or
jl
or
and
mov
mov
xor
or
dec
in
jl
imul
or
outs
loope
xchg
push
push
inc
xchg
mov
ror
sti
add
pop
lock
in
call
xor
mov
and
cmp
xor
out
pop
mov
xchg
shl
into
rcr
jl
out
sub
enter
jmp
loope
outs
mov
das
(bad)
cmp
mov
test
jmp
mov
je
xor
jmp
pop
jbe
inc
pop
cmc
xchg
xor
sub
add
push
cmps
das
inc
outs
pop
mov
imul
adc
sub
fmul
push
jae
lea
aam
fild
leave
jmp
leave
lods
icebp
xchg
adc
imul
add
jp
cs
dec
dec
mov
cmps
cmp
sub
aas
out
dec
mov
mov
sahf
pop
aad
push
push
fsub
scas
adc
mov
inc
str
or
mov
xor
xchg
mov
and
sbb
lahf
xchg
xlat
add
pop
sub
xor
inc
dec
pop
ja
lds
mov
xor
mov
jbe
jecxz
mov
imul
loope
cmp
dec
xor
in
fistp
inc
add
fist
shl
add
xchg
lods
pop
sbb
stos
xor
mov
mov
mov
sbb
dec
cmp
pop
in
mov
mov
mov
jmp
lods
int
popf
sub
cmp
push
xchg
sub
pusha
add
aas
or
adc
repz
mov
jno
jne
ins
pop
mov
das
cmp
inc
xchg
mov
movs
fisttp
js
cmp
adc
jmp
mov
outs
aas
(bad)
(bad)
xor
fucom
jo
cmp
idiv
ror
(bad)
lea
rcr
pushf
in
loopne
cmc
mov
aam
jecxz
fild
cmp
and
leave
ins
ror
add
mov
es
or
aam
xor
arpl
xchg
pop
pushw
aaa
pushf
ja
in
and
fsub
inc
push
loopne
adc
add
mov
adc
sub
movs
popa
fild
cmp
and
loope
dec
mov
mov
ins
stos
add
dec
les
xchg
mov
(bad)
adc
repnz
mov
mov
add
fs
leave
xor
mov
xor
mov
dec
cli
js
enter
ret
pop
loop
out
(bad)
push
fmul
fcomp
xor
jns
adc
mov
xchg
fisub
and
dec
xor
movs
std
mov
xchg
or
fmul
outs
ins
neg
vpshuflw
xor
retf
jno
jmp
in
sbb
inc
push
test
xchg
jecxz
stos
pop
xchg
cmp
xor
mov
sbb
popa
jecxz
daa
dec
pop
jg
out
inc
bound
push
fdiv
popf
imul
icebp
push
add
push
ret
push
aam
cmc
push
add
cld
push
sbb
cmp
fnstenv
enter
in
or
cmp
xchg
or
push
or
sub
fwait
xor
repz
sbb
movs
and
adc
jmp
push
or
popf
dec
xlat
sahf
js
mov
add
scas
push
lahf
ss
inc
cmp
ja
sub
rol
sbb
sub
icebp
push
jge
rol
and
mov
push
cmps
pop
out
adc
xchg
mov
inc
in
jno
and
popa
cmp
push
push
aad
into
xor
mov
and
cmps
loop
outs
mov
push
cwde
pusha
push
dec
bound
inc
sub
dec
nop
cwde
stos
sbb
push
sbb
inc
call
cmp
dec
and
cwde
add
mov
jecxz
stc
xchg
out
bound
rcr
lahf
jmp
mov
dec
mov
add
jmp
sub
repz
mov
ror
mov
push
mov
jmp
push
(bad)
sub
int3
mov
pop
into
(bad)
pop
fsubr
fcom
pop
iret
jg
int3
(bad)
retf
cmp
adc
repnz
push
daa
jns
jns
retf
mov
mov
cwde
mov
add
mov
mov
or
jb
xchg
mov
xchg
push
xchg
push
pop
in
sbb
mov
push
aaa
dec
test
call
adc
je
dec
repz
mov
sub
loope
shl
mov
jmp
(bad)
pushf
push
out
cmp
or
cwde
cwde
jle
ret
mov
dec
sub
pop
int
jmp
iret
ror
push
jae
push
xchg
sar
loope
cmps
add
mov
imul
sti
test
shl
dec
jnp
push
cmp
pop
and
test
sub
add
push
xchg
cmc
repz
mov
cmp
fstp
(bad)
in
xchg
cmc
cdq
sbb
cmp
call
adc
jle
xor
dec
test
stos
push
inc
sbb
fsub
sbb
add
inc
clc
push
adc
inc
in
es
pop
mov
push
pop
add
jmp
adc
add
jmp
lock
pop
ret
jl
and
ret
pop
dec
int3
xchg
scas
add
inc
outs
sbb
lods
push
or
xor
mov
das
loopne
fstp
pop
lds
cmp
push
xor
jae
ss
gs
and
mov
fmul
xchg
imul
and
mov
movs
mov
sub
adc
call
clc
push
sub
scas
xchg
aam
sbb
popf
das
xor
cmp
pop
fnsave
(bad)
movs
in
movs
test
mov
adc
dec
je
pop
lods
js
je
call
or
jae
iret
pop
sbb
sub
imul
xor
nop
and
jb
in
(bad)
mov
ror
test
imul
mov
add
daa
mov
dec
pop
push
fst
xchg
push
mov
sbb
xchg
sar
scas
cmp
xchg
push
xchg
pop
adc
sub
sbb
into
mov
pusha
inc
mov
lods
shl
into
mov
sti
popf
enter
mov
mov
repz
jmp
sbb
in
mov
pop
push
push
push
pushf
or
iret
mov
xchg
imul
push
fs
frstor
cmp
inc
push
xor
inc
ins
fbstp
pop
(bad)
xor
sar
in
and
icebp
shl
(bad)
fimul
jl
lahf
mov
int3
sar
loop
call
jmp
bound
(bad)
ins
repz
cdq
xor
push
mov
and
inc
sbb
frstor
sub
add
sbb
and
xor
inc
fnstenv
mov
mov
mov
jp
leave
push
sub
fcom
jge
sbb
xor
out
xor
int
ja
pop
mov
inc
fsub
jb
add
fnstsw
mov
(bad)
push
arpl
lock
outs
pop
cld
or
jne
pop
and
xor
loop
aad
aas
lods
sbb
pop
test
lahf
pop
jl
push
lds
dec
aaa
cli
sbb
mov
repz
push
add
cmp
loop
push
out
and
cwde
sbb
maxps
adc
ins
loop
adc
cmp
je
ret
push
inc
pop
push
xchg
mov
into
adc
lods
jmp
pop
inc
clc
xchg
mov
or
repz
mov
fist
ficomp
jae
xchg
arpl
neg
out
test
sub
sub
xchg
xchg
jb
lahf
inc
push
rol
aas
adc
fsub
nop
loopne
rcr
pop
rcr
mov
es
int
popf
and
adc
add
aad
aaa
cmp
jl
sbb
lds
pop
sub
mov
rcl
push
movs
xchg
ror
add
loopne
ror
shr
les
stc
xor
add
xchg
movs
jge
dec
mov
imul
mov
daa
shl
and
jne
jecxz
sti
mov
jmp
pop
cmp
cmp
pop
xchg
mul
lods
cmp
sub
and
(bad)
idiv
sbb
push
ss
leave
data16
push
fsubr
jl
xor
jle
scas
mov
mov
xchg
jecxz
xor
outs
sbb
in
jp
dec
icebp
sub
bound
push
(bad)
cli
cmp
rcl
sub
pop
mov
or
les
fsubr
sub
ret
retf
fs
in
pop
out
fsub
push
cdq
jnp
push
dec
stos
cmps
mov
push
inc
test
inc
gs
sbb
popf
in
mov
adc
scas
call
mov
repz
out
dec
in
mov
sbb
loop
push
aaa
jne
and
lods
push
(bad)
hlt
mov
xor
xchg
je
inc
nop
je
test
dec
add
push
xchg
arpl
les
call
dec
cmp
push
mul
fnstsw
push
je
mov
cwde
push
cli
add
loop
bound
mov
shr
out
jmp
out
mov
lahf
push
cmp
popa
pop
jnp
mov
pusha
push
xchg
xor
adc
adc
(bad)
movs
mov
ja
pop
iret
mov
inc
lods
mul
inc
dec
fnstcw
xor
jbe
or
mov
add
jbe
jmp
push
jmp
ss
cdq
push
test
push
std
push
mov
in
and
aas
pop
std
push
div
repnz
sahf
cli
cmp
popa
out
cmp
ret
dec
sub
push
cmps
je
cli
mov
xor
sbb
ret
inc
cmp
xchg
fstp
and
or
adc
push
cmp
imul
cdq
cli
sub
jge
test
sub
mov
fisubr
add
loopne
push
push
pop
iret
pushf
dec
jl
test
inc
ficomp
dec
nop
pop
popa
add
ror
xchg
xchg
in
(bad)
jge
sub
pusha
mov
repz
data16
ror
jg
cmp
mov
push
(bad)
pushf
(bad)
cld
cmp
push
or
pop
push
pop
jns
sub
jmp
sub
movs
jno
mov
mov
movs
in
push
pop
fwait
and
lods
test
cmp
int3
dec
push
xor
pop
jbe
stc
int
popf
call
jecxz
dec
xlat
sbb
(bad)
push
jge
je
aaa
adc
mov
mov
icebp
std
fist
cmp
scas
sbb
shr
pop
adc
es
dec
cmp
scas
mov
cmp
sbb
xchg
inc
cmp
fwait
cli
and
mov
push
push
je
fisttp
jno
add
movs
cmp
jnp
popf
adc
(bad)
mov
pop
leave
mov
pop
loop
out
test
fldenv
adc
ret
(bad)
dec
fwait
jl
dec
js
pop
pop
and
cmp
xor
shr
mov
ja
test
mov
dec
cmps
imul
and
or
out
addr16
in
add
xor
retf
cmp
push
sub
popa
test
(bad)
pusha
mov
jmp
retf
jmp
inc
sti
scas
xchg
out
pop
imul
sub
adc
fsubr
and
mov
and
cmp
in
in
add
fs
add
sub
je
inc
mov
stos
and
loop
pop
or
add
rol
pop
mov
arpl
ja
int3
add
int3
dec
clc
adc
xchg
xchg
sub
xchg
shl
fsubr
popa
outs
xchg
dec
sub
sub
test
adc
mov
dec
jg
cld
or
loop
mov
push
add
sahf
xor
xor
mov
jbe
arpl
aas
in
mov
push
mov
scas
arpl
das
jo
jmp
xchg
jmp
or
xchg
mov
mov
xor
cmp
ret
stc
pop
imul
test
retf
std
pop
or
arpl
pop
mov
push
mov
pop
mov
fisttp
aad
fwait
repnz
add
test
out
push
je
mov
mov
adc
arpl
imul
xchg
sbb
out
pop
or
rol
and
dec
clc
adc
adc
cmp
dec
add
cdq
dec
jmp
aas
and
test
jne
pop
mov
frstor
xor
(bad)
loopne
inc
mov
fcomp
gs
pop
lods
mov
scas
outs
mov
cmps
adc
xchg
stc
mov
push
pop
xchg
push
jae
xor
mov
jg
lahf
jl
outs
xor
or
es
and
fadd
cli
test
adc
pushf
popa
sbb
stc
ins
retf
cld
daa
fidiv
sbb
adc
inc
add
add
mov
ja
adc
jmp
mov
ret
and
cmp
call
cwde
mov
fs
lock
inc
imul
cmc
push
pop
xor
jmp
pop
fst
push
cmp
popf
push
adc
fist
jmp
xor
stc
xchg
mov
mov
inc
xchg
imul
pop
dec
inc
out
or
stc
aaa
imul
inc
mov
xchg
push
repz
sbb
or
sub
ins
aaa
dec
out
add
mov
mov
retf
inc
jb
addr16
out
stc
sahf
fild
inc
clc
sub
lea
pop
cmc
lods
mov
and
mov
jae
lock
pop
jecxz
and
out
mov
inc
and
and
jge
pushf
test
lea
add
pop
inc
adc
setbe
js
xor
or
sub
adc
add
jo
inc
enter
push
dec
mov
loop
mov
sbb
xchg
out
out
and
sub
sbb
or
iret
push
pop
push
inc
mov
add
or
jo
jmp
jg
inc
ss
or
push
xchg
sar
das
retf
jo
cmc
js
ds
in
add
shl
xchg
cld
dec
pop
pop
or
dec
mov
in
push
cld
lds
mov
push
test
adc
(bad)
js
out
retf
call
and
sub
pop
lods
ror
xor
mov
jae
xchg
cmps
lea
push
mov
repnz
data16
pop
xchg
out
nop
sbb
cdq
cmc
addr16
call
pop
mov
aam
adc
push
dec
jge
clc
clc
cld
push
(bad)
or
sahf
fdivr
mov
xor
add
ror
inc
cmps
mov
push
and
cmps
leave
mov
and
stc
sbb
mov
aas
inc
data16
mov
jmp
sub
mov
mov
sbb
ds
mov
cmp
mov
(bad)
lock
pop
cmp
pop
rcr
jle
dec
jmp
and
and
inc
cmps
loop
ds
adc
jmp
jo
cmp
push
and
jne
movs
ins
sub
push
sahf
fistp
lock
xchg
shl
xchg
shl
push
mov
fiadd
ror
sub
repz
mov
std
push
cld
xlat
adc
clc
in
out
std
cmp
ins
test
test
in
mov
xor
push
pushf
fdiv
pop
test
mov
xor
xchg
or
(bad)
aam
push
gs
mov
or
ret
(bad)
fcomi
mov
or
shl
in
mov
and
pop
js
xor
adc
cmps
loope
push
out
xor
(bad)
jnp
or
xor
jnp
daa
adc
push
(bad)
enter
outs
push
sub
and
or
dec
cmps
dec
call
gs
cmp
or
fimul
shl
test
mov
adc
adc
lea
or
bound
sbb
sub
or
jecxz
mov
mov
dec
gs
and
clc
pusha
(bad)
xchg
push
stc
js
retf
dec
cmps
dec
loopne
mov
inc
mov
jae
loopne
paddd
and
loop
stos
cmp
fild
lahf
jbe
cmp
pop
mov
pop
or
ret
push
pop
fst
movs
in
cmp
dec
popf
cdq
cmp
cwde
xor
(bad)
movs
sub
sub
stos
cwde
sbb
scas
(bad)
call
fisub
dec
add
ins
sbb
cmp
jp
pop
daa
cwde
iret
movs
push
or
and
dec
fdivrp
jge
inc
add
fld
cmp
jle
jb
mov
lahf
call
inc
je
sbb
ret
ins
daa
shl
xchg
out
repnz
sbb
shl
rcl
sub
cmc
test
or
add
mov
sub
cmp
mov
ds
jecxz
pop
ja
mov
sbb
into
cpuid
jg
pop
loope
mov
mov
add
push
les
inc
xchg
pop
out
xchg
(bad)
push
jmp
jecxz
popa
repnz
das
or
ret
push
ins
or
add
pop
test
pop
shl
movs
ins
outs
dec
in
popf
pop
data16
mov
in
push
mov
aas
mov
imul
xchg
cwde
fcmovnu
sub
xlat
inc
push
cmp
and
(bad)
xchg
jmp
(bad)
cmp
fadd
mov
out
xchg
loope
jmp
(bad)
or
ficomp
pop
ror
xor
data16
pop
iret
pop
mov
sahf
push
or
cmps
(bad)
aad
adc
cmps
pop
jl
out
shl
cmp
mov
out
push
xor
push
popf
arpl
inc
retf
dec
in
lods
rcl
mov
stos
es
jo
in
jmp
inc
aam
cmp
sti
loop
inc
push
sub
pop
xor
xlat
pop
les
inc
aad
or
pop
mov
jl
ss
jo
sub
js
sbb
inc
or
pop
popf
out
popf
jmp
add
inc
pop
sub
pop
jp
repz
inc
sub
adc
imul
in
addr16
jbe
std
loop
mov
lahf
pop
(bad)
mov
mov
mov
movs
mov
jne
repz
repz
push
arpl
inc
in
push
add
sub
xor
push
xor
stos
std
jl
cmp
fwait
dec
push
das
push
clc
fcomp
pop
push
push
test
les
imul
jg
or
dec
push
(bad)
imul
jbe
lods
mov
imul
sub
dec
movs
scas
and
lds
mov
pop
pop
(bad)
in
and
movs
ins
adc
xchg
or
imul
xor
cmp
pop
test
dec
movs
and
sub
xor
ss
jae
popa
mov
push
adc
sti
sub
mov
not
pop
pusha
inc
in
jno
pusha
sub
inc
inc
(bad)
jl
neg
mov
ret
cmps
inc
icebp
retf
push
jle
mov
cmp
inc
add
test
clc
(bad)
xchg
retf
enter
mov
jg
xor
xor
out
push
jns
outs
pavgb
jae
cs
and
adc
das
or
jnp
add
sub
les
jmp
fxam
lea
cli
xlat
xchg
fs
push
pop
scas
in
mov
or
cmp
mov
cmps
mov
jb
adc
(bad)
and
mov
jbe
sbb
sbb
add
sar
pop
imul
pop
xchg
adc
test
jns
xor
fistp
sbb
loop
daa
dec
dec
leave
mov
pop
push
loopne
rcr
xchg
out
scas
sub
aad
cmp
adc
jne
add
adc
xor
xor
push
pushf
in
inc
fisttp
add
stos
pusha
mov
inc
jp
dec
sahf
sub
xchg
and
jecxz
adc
pop
mov
call
ret
jbe
test
dec
mov
xchg
addr16
cmps
popf
dec
hlt
adc
test
dec
std
hlt
push
lds
jae
dec
adc
mov
test
ss
mov
sub
push
repz
repnz
cmp
in
jmp
bound
sar
mov
xchg
jmp
jne
mov
jl
cmc
loopne
scas
dec
stc
ja
ror
mov
arpl
dec
jge
jb
jo
sub
fwait
mov
inc
bts
mov
sub
pop
xor
not
aam
loope
lds
jns
aam
and
fbstp
jb
enter
mov
dec
(bad)
fld
inc
push
adc
cdq
inc
and
mov
scas
scas
xlat
out
xor
mov
mov
xchg
xor
popa
cli
pop
or
lea
mov
pop
and
mov
(bad)
in
nop
jmp
xlat
leave
fwait
arpl
scas
inc
ror
add
mov
jmp
mov
pop
pop
push
pushf
stos
cmp
mov
scas
mov
in
scas
mov
out
rol
sub
aad
in
cmc
hlt
and
fild
popf
xor
aad
and
iret
mov
xchg
xor
jbe
xchg
fisttp
jmp
das
out
dec
xchg
fwait
and
loope
ret
ins
out
in
adc
(bad)
scas
dec
loope
xchg
mov
jb
mov
js
bound
cs
ds
leave
in
pop
iret
or
into
arpl
sub
jb
popf
adc
sub
iret
out
stos
out
popf
bound
or
(bad)
mov
pop
dec
xchg
mov
sbb
jbe
ror
push
push
shl
dec
add
cmps
cld
popf
leave
jecxz
xchg
gs
jns
push
adc
cmp
mov
dec
mov
push
(bad)
int3
idiv
mov
jne
pop
into
cld
jle
hlt
iret
and
lss
mov
xor
dec
repnz
jno
gs
in
ss
addr16
int
aaa
xchg
or
xlat
ins
pusha
jne
sub
rcl
dec
pop
out
xchg
jecxz
neg
clc
xor
imul
scas
mov
adc
repz
int3
lods
mov
cmps
enter
cmps
cli
aam
std
in
mov
ins
push
mov
xchg
repnz
out
cld
sub
cmps
(bad)
inc
push
ret
mov
or
cmp
call
in
push
cli
gs
inc
xor
sahf
xor
push
jae
pop
ret
scas
and
mov
pop
ins
adc
imul
scas
shl
lods
aaa
iret
and
(bad)
xor
dec
adc
lds
mov
cmp
jne
push
stos
inc
or
push
out
add
and
fmul
cmp
(bad)
and
fxch
cli
sub
sub
cld
xor
test
int3
add
push
rcr
in
xor
sub
mov
adc
ds
xchg
push
lahf
jecxz
jmp
je
test
inc
jle
add
dec
xchg
test
mov
mov
outs
cli
and
fwait
cmp
(bad)
push
adc
movs
or
xor
gs
sahf
mov
jno
mov
cwde
retf
enter
popa
mov
imul
sbb
cmps
call
cmp
sbb
ret
mov
inc
or
(bad)
jno
sub
(bad)
arpl
mov
repnz
test
aaa
and
sbb
shl
lahf
sub
ds
ret
mov
sub
inc
jb
or
lds
mov
sbb
push
fidiv
push
push
and
int3
mov
mov
in
or
loop
inc
adc
xor
cmp
je
int3
and
mov
xchg
sbb
dec
mov
ret
in
adc
push
xlat
in
mov
hlt
fs
fidivr
xlat
int
lods
mov
jno
push
xor
ds
sbb
push
fs
adc
int
sbb
and
leave
pop
jnp
cmp
inc
(bad)
repnz
ins
dec
xchg
ins
test
sti
cmps
fistp
mov
adc
mov
and
push
sub
mov
jbe
and
call
pop
pop
cmc
call
clc
je
mov
mov
xor
sub
mov
mov
xchg
mov
inc
mov
idiv
xor
retf
sub
add
push
das
dec
les
push
pop
add
mov
ret
sbb
inc
cmp
cmp
loopne
in
aad
rcl
dec
fistp
and
shufps
mov
mov
and
mov
imul
add
aas
in
cmp
pop
xor
movs
retf
in
adc
cmps
test
cld
and
pop
mov
jb
call
lds
fcomi
push
push
sbb
mov
movs
gs
jle
jp
xor
or
int3
cs
(bad)
push
imul
dec
das
div
iret
(bad)
ret
(bad)
pop
pop
xchg
in
dec
arpl
sbb
aam
and
movs
rcr
and
ror
dec
pop
mov
and
jno
ins
movs
not
fidiv
inc
mov
out
test
mov
popa
jnp
pusha
js
inc
cli
sbb
xlat
arpl
mov
popa
outs
test
fimul
ret
shl
add
lock
adc
mov
pop
cmovp
dec
arpl
inc
js
lock
sbb
pop
xchg
mov
mov
pop
retf
imul
in
xchg
mov
and
test
mov
int3
mov
and
mov
mov
jnp
cmp
adc
and
xor
inc
dec
fcomp
popf
mov
mov
cmp
inc
cmp
std
shl
dec
lods
mov
push
dec
jmp
cmp
enter
push
xchg
ss
xchg
iret
scas
rol
sbb
hlt
cmp
inc
cmc
test
ins
xchg
sub
mov
mov
adc
adc
xor
jecxz
mov
test
push
in
test
or
ss
inc
gs
xchg
shl
xchg
test
mov
adc
jg
pop
leave
pop
arpl
stos
sub
jg
ret
cmp
add
or
or
push
fwait
mov
or
xchg
jg
call
imul
cmps
cmp
lahf
mov
stos
mov
sub
push
sbb
pslld
mov
xchg
sar
push
mov
xor
mov
arpl
leave
mov
sbb
or
pop
out
nop
aas
mov
popf
ins
xor
repnz
xchg
mov
push
es
jns
sahf
mov
mov
mov
sar
ins
into
scas
mov
bound
sbb
mov
jp
pop
aas
aas
jb
jmp
sbb
dec
push
dec
push
js
xchg
adc
daa
leave
stos
gs
pop
icebp
push
rcl
sbb
jl
sub
pop
add
mov
mov
fiadd
cmp
(bad)
sub
jns
out
dec
pop
add
in
cmp
fcom
dec
leave
mov
and
dec
xor
(bad)
shr
cmp
nop
or
movs
fcomp
cld
lods
push
loopne
dec
add
test
or
mov
pop
fsub
fs
into
add
call
push
jbe
cmp
cmp
bound
xchg
xchg
push
ja
fisubr
sbb
bound
pusha
in
push
or
push
scas
inc
and
push
xor
rcl
outs
cmps
lea
(bad)
enter
cs
mov
mov
and
push
xchg
clc
push
addr16
lock
ins
out
pop
or
ds
cwde
and
mov
iret
rcl
or
shl
dec
mov
in
jmp
call
xor
in
imul
leave
call
in
sub
lahf
mov
sbb
push
or
sbb
inc
in
adc
mov
out
int
ficomp
aad
retf
push
sbb
fiadd
clc
push
sub
ret
pop
add
sub
inc
fiadd
shr
(bad)
dec
cmc
push
mov
push
or
jae
mov
mov
xor
mov
cmp
test
int3
not
fdivr
sub
xor
retf
je
mov
out
int3
movs
cmps
dec
xchg
sub
(bad)
mov
fldenv
cmp
mov
test
pop
pop
xchg
jb
xor
push
dec
sub
lods
sub
dec
cld
jp
adc
jnp
fcompp
inc
mov
leave
sub
ret
cwde
cs
cwde
push
test
fnstenv
sbb
add
adc
xchg
loope
int
into
stos
cmp
leave
or
xchg
push
rcr
(bad)
enter
jmp
daa
fisttp
leave
adc
push
outs
dec
jle
mov
add
pushf
xlat
dec
jno
popf
bsf
test
cwde
ja
xchg
test
(bad)
gs
gs
pushf
push
in
je
lds
cmp
js
mov
fnop
aad
sahf
(bad)
sub
mov
(bad)
cmps
adc
jle
pop
pop
retf
stc
pop
inc
fmul
cmc
mov
jmp
iret
call
sub
pushf
cmp
loopne
add
(bad)
repz
dec
and
push
lahf
leave
in
(bad)
lods
jae
xchg
push
idiv
stc
dec
ror
add
inc
lea
jne
jl
sahf
in
xchg
(bad)
sub
push
ficomp
shl
mov
or
mov
jecxz
iret
jnp
in
popa
std
lock
add
lock
cmp
jg
mov
push
ins
shl
(bad)
(bad)
mov
ins
aad
push
or
test
add
pop
mov
xor
mov
out
rcl
out
sub
fwait
xor
xchg
xor
pop
or
sub
push
scas
jg
cld
repz
in
mov
and
mov
xchg
cmp
fnstsw
dec
or
pop
mov
aad
or
jecxz
jmp
shr
jecxz
enter
pop
fisttp
inc
mov
add
add
push
adc
jbe
stos
fdiv
aad
cwde
push
pop
xor
xchg
movs
xchg
iret
int
in
xchg
enter
mov
mov
lods
cmp
jmp
push
retf
pop
or
push
mov
cmps
pop
mov
cmp
xchg
mov
mov
ja
dec
mov
adc
fs
popf
rol
mov
mov
mov
hlt
sahf
call
rcr
loop
cmp
dec
mov
jb
(bad)
xchg
jns
cmps
and
xrelease
xor
stos
mov
add
cmp
jne
ins
loopne
sbb
add
pop
and
in
rol
xchg
in
pop
and
sub
xchg
mov
ds
aad
dec
popa
push
arpl
cmp
push
sar
xor
mov
jae
pop
push
movs
test
mov
adc
movs
jl
and
sahf
xchg
adc
pop
push
add
dec
test
adc
in
(bad)
mov
adc
in
call
jae
add
jmp
mov
nop
or
mov
cmp
cmc
or
and
sub
xor
es
push
xor
fidiv
inc
sti
(bad)
rcl
daa
loope
xchg
push
js
data16
pop
stos
and
iret
dec
dec
rcl
sahf
pop
inc
scas
aas
mov
sbb
dec
aam
call
ret
sbb
mov
sti
sahf
(bad)
mov
(bad)
sub
inc
mov
cs
ins
daa
jg
inc
jmp
xchg
mov
sbb
and
imul
dec
pop
mov
xor
inc
push
fcom
outs
in
xchg
inc
dec
icebp
add
loope
mov
mov
mov
addr16
and
inc
sbb
(bad)
jbe
js
inc
arpl
cmp
inc
xor
in
push
pop
rcl
inc
dec
shr
push
jecxz
push
repnz
sub
xor
cmps
or
mov
test
out
cmc
leave
or
and
repnz
or
data16
leave
sbb
cwde
lods
test
ss
or
mov
or
pop
cmps
into
mov
test
icebp
sub
movs
jle
cmp
and
sub
in
imul
outs
sub
(bad)
cmc
dec
fistp
lds
aad
hlt
xchg
int
int3
sti
jb
int
call
aas
xor
adc
pusha
les
aas
lea
sub
ror
and
mov
ja
gs
mov
push
out
fistp
adc
(bad)
inc
in
std
dec
mov
cli
popf
call
hlt
or
cmp
(bad)
pop
adc
and
int3
jge
scas
and
ror
mov
imul
adc
test
iret
in
clc
lods
mov
and
mov
sub
pushf
xor
push
mov
jo
rcl
test
movs
cmp
adc
out
jmp
lods
mov
pop
fiadd
push
xchg
(bad)
out
rcr
in
adc
add
jg
push
loopne
call
mov
out
clc
in
and
jg
jl
lahf
dec
dec
nop
loopne
or
ja
test
and
or
fs
shl
loopne
mov
xor
clc
mul
(bad)
or
js
sub
(bad)
fist
or
add
arpl
(bad)
retf
fisub
sahf
out
ss
imul
sub
push
mov
add
jp
imul
add
fldcw
test
dec
xchg
pushf
lock
mov
(bad)
and
adc
ins
push
arpl
(bad)
lods
arpl
mov
outs
jns
cli
bnd
push
sahf
fcom
hlt
mov
scas
mov
fadd
je
addr16
pusha
test
lock
(bad)
mov
jmp
jle
call
loop
mov
clc
ins
adc
inc
shl
xchg
xor
dec
xchg
mov
jo
popa
dec
nop
cmps
jge
xchg
pushf
inc
dec
sbb
and
sbb
push
dec
cmps
imul
pop
push
retf
enter
add
jl
fdiv
repnz
call
adc
jmp
ret
xchg
cs
clc
push
iret
movs
stc
mov
push
outs
push
jl
dec
hlt
popa
out
test
stc
jge
add
jecxz
xor
xchg
xchg
sub
in
loopne
icebp
shr
loop
push
fidivr
scas
add
fstp
in
out
sub
sti
pop
add
mov
loop
pop
mov
scas
mov
jmp
dec
mov
sbb
inc
inc
push
call
scas
push
pushf
data16
(bad)
mov
(bad)
pop
mov
into
scas
sbb
pop
daa
pop
xchg
loopne
in
sbb
ret
pop
pop
xor
aad
xor
dec
adc
inc
cmp
jb
mov
sahf
mov
lahf
jae
in
xchg
mov
sbb
jg
mov
in
add
push
xchg
jmp
inc
inc
inc
inc
pop
adc
js
adc
test
cdq
cmp
and
and
mov
and
jge
movs
push
movs
inc
xor
fld
clc
mov
xchg
or
aas
(bad)
ins
mov
mov
ds
and
sbb
and
fsubr
xchg
jbe
sub
jg
jmp
test
in
ds
adc
ret
pop
jp
arpl
jge
sbb
retf
xchg
mov
fwait
test
addr16
inc
push
and
test
ret
enter
jno
and
jmp
jmp
push
call
retf
sub
aas
cdq
enter
(bad)
imul
popa
pop
cmp
add
(bad)
ficom
jb
inc
inc
jne
mov
pop
mov
int3
mov
into
mov
inc
ins
test
mov
retf
or
sahf
mov
inc
stos
out
ins
dec
retf
imul
aas
int3
loope
enter
pushf
dec
mov
or
mov
mov
(bad)
mov
fs
fs
ja
jne
repnz
scas
loopne
hlt
mov
jl
mov
pop
pop
lods
xlat
stc
mov
in
imul
jae
or
inc
pop
retf
les
mov
mov
test
cli
cmps
cmp
aas
push
cmp
mov
pop
mov
dec
scas
test
(bad)
cmp
out
out
or
mov
ins
call
fstp
cmp
jmp
add
push
clc
mov
loope
mov
push
mov
xchg
cmp
jbe
pop
mov
pop
das
inc
cli
test
daa
mov
popa
pop
repnz
xor
in
mov
mov
cli
xchg
xchg
cmp
inc
jge
retf
and
add
jb
jbe
repnz
(bad)
sbb
pop
push
add
call
mov
add
scas
inc
lds
rcl
adc
xor
scas
(bad)
xor
fs
sbb
push
(bad)
inc
(bad)
jg
sub
mov
sar
aam
push
hlt
mov
fcom
inc
fcomip
pop
dec
adc
xchg
bound
xchg
repnz
mov
jb
mov
inc
scas
cmps
das
neg
test
mov
jne
ss
add
mov
fstp
jecxz
dec
inc
pop
xchg
std
paddb
cmp
push
nop
loopne
pop
es
in
imul
and
ret
lahf
push
jle
mov
retf
pusha
int
inc
mov
mov
rcpps
xor
scas
inc
nop
xor
xor
lds
test
fcomp
out
movs
pop
add
mov
push
sub
xchg
sub
adc
dec
jmp
inc
sbb
xchg
fmul
sub
xchg
xchg
(bad)
xor
mov
addr16
cdq
loop
mov
xor
jno
cmps
out
pop
xchg
pushf
outs
push
sub
and
add
dec
jne
cmps
mov
dec
jecxz
mov
(bad)
inc
xchg
mov
call
loop
repz
inc
jp
imul
sar
fucomi
(bad)
pop
pop
enter
pop
arpl
xchg
imul
outs
ja
add
cmp
and
jbe
(bad)
pushf
pop
and
sti
push
pushf
pop
aaa
sbb
push
jmp
out
popa
scas
add
sub
cmp
shl
js
imul
jl
enter
inc
push
add
cmps
mov
cmps
mov
mov
fstp
xor
fdivr
sub
jb
dec
gs
or
lahf
cmp
imul
retf
cmc
jbe
mov
cmp
std
cmps
push
in
aas
hlt
into
into
push
inc
dec
loope
jmp
cli
push
xchg
mov
push
mov
sbb
dec
ja
std
dec
xchg
std
cmp
(bad)
repz
dec
jo
(bad)
ja
dec
sub
mov
scas
sahf
lahf
push
or
inc
cmp
int
cwde
sbb
xor
addr16
inc
adc
cmp
stc
dec
jmp
ds
mov
cmps
cwde
jmp
or
jmp
add
xchg
mov
ret
cwde
and
inc
add
xchg
push
call
cmp
test
ja
and
in
mov
xlat
rol
pop
pop
jge
push
add
jae
sti
fsubr
jmp
mov
mov
test
mov
jb
xor
dec
mov
lock
enter
pop
mov
je
fwait
xor
test
pushf
add
(bad)
cwde
cmp
mov
mov
shl
xchg
cwde
ins
rol
push
sub
cli
pop
dec
inc
sub
cdq
test
mov
lods
aad
clc
mov
shl
or
int3
lahf
rol
dec
outs
or
sbb
outs
daa
add
retf
jno
je
cld
test
sub
xchg
retf
xchg
lea
xor
jecxz
addr16
mov
outs
popa
sbb
adc
mov
and
mul
sbb
jbe
punpckhwd
sbb
push
imul
fisttp
mov
sbb
sub
mov
or
cmps
shl
cmp
pop
xor
lea
jg
inc
call
sahf
int
or
dec
out
add
ror
mov
mov
into
fidivr
std
fwait
xchg
sar
mov
ret
xchg
pop
call
pop
pop
pop
jne
push
outs
cmp
(bad)
xor
dec
push
stos
jbe
add
in
push
cmp
add
repnz
mov
popf
push
mov
mov
lods
and
push
and
cdq
push
ds
mov
mov
sbb
xor
aad
icebp
mov
pop
dec
push
dec
mov
cmp
in
and
les
inc
or
iret
call
test
das
aas
add
mov
adc
push
or
xor
add
scas
pop
mov
jle
xlat
ins
popa
repz
xchg
lahf
inc
je
dec
(bad)
mov
and
xchg
adc
pop
push
jb
or
call
fsub
sbb
xor
sub
rol
aaa
ror
jb
imul
push
jbe
scas
push
jno
xchg
sub
inc
sub
out
mov
adc
sbb
mov
mov
inc
push
cld
pop
and
pop
add
sub
cmp
adc
or
lods
ret
jge
hlt
xor
cmp
jg
inc
in
sbb
push
je
loopne
test
jmp
loopne
cmp
sbb
call
icebp
jl
sbb
movs
push
cmp
inc
pop
cmps
xchg
stc
nop
xor
iret
sbb
xchg
nop
pushw
sub
outs
jns
je
mov
mov
xchg
test
jle
call
dec
mov
sub
xchg
add
scas
in
shl
data16
stos
cdq
dec
call
enter
icebp
cmps
pop
push
in
test
lods
or
pop
test
fwait
and
iret
push
inc
push
fcomp
jnp
and
inc
out
outs
cmp
lock
pop
fstp
jle
std
mov
and
stos
mov
fstp
in
or
adc
pushf
cmp
cmp
pop
pop
(bad)
sub
fucomip
nop
fnsave
xchg
stc
jecxz
jno
ds
jmp
ja
push
jge
and
je
mov
mov
adc
pop
std
fisub
icebp
push
or
cmp
sbb
jecxz
or
pusha
fsub
popa
mov
jae
mov
mov
adc
fwait
adc
ins
dec
or
dec
(bad)
cmp
out
loope
xor
inc
idiv
jnp
xchg
adc
add
or
adc
movs
xchg
push
push
out
xor
cmps
jno
out
sbb
outs
call
pop
dec
mov
push
int3
lods
mov
sbb
cld
outs
retf
std
dec
mov
ficomp
inc
sti
cmp
arpl
push
in
cmps
retf
or
out
jne
ret
pop
rol
xchg
in
lock
test
popa
imul
dec
push
mov
add
dec
mov
repnz
scas
adc
cmps
and
pop
or
jecxz
mov
xchg
inc
mov
lock
xchg
jae
loop
dec
addr16
fiadd
pop
sti
jg
(bad)
mov
mov
cmc
mov
(bad)
pop
and
push
ret
int3
dec
or
xor
xchg
adc
lahf
xchg
and
jmp
pop
jns
pop
jge
or
jno
add
ja
push
jecxz
dec
iret
inc
mov
mov
scas
sbb
(bad)
cmp
jecxz
xor
mov
ret
rol
xchg
pushf
retf
(bad)
fstp
push
pushf
jnp
scas
cmp
leave
cld
jg
or
cmp
xchg
push
cmp
fcomp
or
jnp
sbb
imul
pop
fcomp
mov
jle
fst
std
xchg
addr16
xor
and
dec
fistp
or
cmp
test
dec
inc
sahf
adc
xlat
mov
pop
inc
leave
push
call
adc
hlt
mul
sub
call
push
loopne
mov
popa
inc
pop
mov
pop
or
jmp
nop
mov
sbb
iret
push
js
xor
pop
jle
dec
call
cmps
or
ins
sub
arpl
call
push
cmp
movs
popf
aam
loop
test
mov
jg
ins
cs
dec
or
jmp
iret
mov
and
jno
inc
retf
pop
enter
shl
push
leave
fcmovnb
shl
dec
lods
stos
std
xchg
pop
push
shl
inc
retf
jmp
imul
fnstsw
aad
call
jl
jae
lea
mov
sti
mov
xchg
loopne
pop
bound
xor
sub
popf
int
loopne
lods
and
lods
push
retf
pop
dec
cmp
push
ins
out
outs
(bad)
mov
pop
or
test
mov
mov
test
sbb
xchg
sti
xchg
mov
jnp
hlt
dec
fdivr
(bad)
(bad)
shl
aam
loopne
dec
call
imul
jno
clc
mov
jp
clc
inc
outs
(bad)
xor
popf
lock
out
sbb
jne
(bad)
sub
std
jae
mov
push
cmps
scas
pop
mov
dec
mov
cwde
dec
test
ret
cmp
jmp
retf
jge
fnstenv
jnp
jae
sub
sbb
(bad)
arpl
sub
inc
aad
ret
(bad)
add
jmp
icebp
ins
inc
dec
push
sahf
push
je
nop
cmps
aas
cmps
jne
in
dec
jnp
ins
(bad)
or
mul
rcl
push
stos
outs
mov
fwait
rcr
or
jg
scas
jne
jmp
lods
(bad)
stc
mov
xchg
movs
lahf
mov
ror
adc
movs
jge
dec
in
xor
jmp
ret
jnp
(bad)
mov
push
jns
jbe
imul
xchg
in
and
popa
dec
mov
pop
push
lahf
lock
test
into
dec
adc
pop
cwde
pushf
je
or
test
ret
and
les
add
outs
es
sbb
push
pop
loope
sahf
cmc
jnp
aaa
add
lahf
daa
or
jg
xchg
mov
out
int3
stos
push
xchg
repz
mov
pusha
aaa
repz
clc
ins
adc
add
jns
cmps
sbb
(bad)
icebp
ins
xor
imul
dec
push
dec
ret
xor
mov
not
and
cmp
pop
imul
push
push
fwait
in
aas
inc
cmc
retf
mul
xchg
(bad)
xchg
repnz
jmp
int3
addr16
pop
push
push
cmp
pop
imul
jns
dec
out
adc
prefetch
or
mov
test
push
arpl
ret
cli
sub
cmp
fdiv
pmaddwd
dec
mov
cmp
dec
rcr
xor
icebp
(bad)
jnp
xchg
or
enter
push
test
arpl
push
fsubr
cwde
lea
hlt
loop
or
retf
loopne
les
dec
repz
scas
mul
rcr
movs
inc
pop
dec
fdiv
(bad)
test
push
mov
cmc
or
add
mov
hlt
icebp
inc
adc
cwde
and
aam
fdivp
bound
sub
push
outs
mov
xor
outs
hlt
(bad)
jno
retf
dec
addr16
je
mov
or
es
mov
xchg
mov
pop
inc
or
pop
sahf
inc
dec
gs
jae
mov
inc
pop
and
outs
push
cwde
outs
aaa
je
fist
scas
(bad)
(bad)
out
xchg
test
pushf
mov
jne
add
mov
mov
and
xor
int3
dec
fwait
jnp
lds
mov
test
or
mov
or
and
xchg
ss
lahf
in
xor
xchg
or
stos
jg
adc
fistp
ror
in
cmp
fisub
es
gs
shl
inc
dec
ins
cmps
test
mov
stos
outs
add
enter
mov
shl
and
(bad)
(bad)
fdivr
mov
cmps
xchg
cmp
cwde
sbb
xchg
mov
scas
push
jno
lods
cwde
mov
daa
pushf
fcomp
sbb
outs
imul
aad
jb
mov
jnp
inc
pop
push
sub
jno
dec
xchg
jmp
jmp
jge
cmps
jnp
mov
int
frstor
enter
jbe
cmp
sub
cwde
jo
sub
adc
fwait
retf
xchg
jge
mov
mov
pop
test
dec
add
sub
aam
jmp
sub
ret
repnz
pop
push
scas
ret
(bad)
cmp
pop
push
mov
dec
pop
xor
movups
repnz
ins
popa
xchg
stos
and
popa
cmp
fcmovnb
xchg
ret
add
int
push
(bad)
push
adc
jb
push
push
ror
jmp
add
xchg
call
scas
xor
mov
xor
xor
mov
mov
mov
stos
add
fstp
popf
scas
setne
in
aam
inc
xchg
push
and
pop
int
bound
jbe
push
adc
mov
dec
push
pop
pop
addr16
stos
test
shl
fidivr
sub
imul
push
rcl
dec
push
in
arpl
in
fnstenv
jmp
(bad)
pop
jbe
mov
xchg
(bad)
pop
leave
inc
aas
sbb
icebp
pop
ins
cmp
inc
pop
cli
sbb
inc
daa
test
aad
push
jno
into
repz
jmp
mov
and
xchg
and
push
(bad)
push
mov
js
push
add
repnz
sbb
sub
(bad)
stos
clc
stos
xor
out
and
push
mov
mov
or
dec
lods
and
cs
inc
das
mov
push
cdq
push
pop
test
call
(bad)
jle
scas
sbb
mov
fmul
aad
push
xlat
scas
pop
fidiv
jp
mov
push
mov
jg
adc
in
call
sbb
rcr
sub
mov
mov
test
ins
inc
and
dec
mov
jo
sub
xchg
es
mov
sbb
jne
push
xor
or
fsubr
xlat
sbb
and
xchg
shr
pop
inc
pop
and
xchg
mov
out
sbb
adc
scas
in
mov
add
or
popf
inc
and
fld
mov
push
push
clc
sub
xchg
in
xor
loope
mov
jbe
imul
pop
jmp
enter
pop
push
cmps
and
pop
push
cmp
sbb
mov
repnz
mov
sub
in
loope
out
bound
repz
fsubr
lock
in
cmps
push
out
std
sahf
ss
and
sbb
sbb
dec
mov
dec
les
mov
adc
mov
hlt
pop
shr
xor
std
and
cmp
and
mov
xlat
xchg
xor
sub
dec
cmp
xlat
cli
cmps
or
cmps
data16
push
cmp
push
ss
mov
fxam
mov
aaa
mov
fdiv
dec
and
data16
call
inc
sbb
jb
aam
inc
sbb
xchg
cmp
jmp
mov
iret
mov
inc
cmp
pop
inc
and
add
retf
dec
ins
xchg
test
xchg
mov
cmp
add
mov
je
or
ror
mov
mov
sub
sti
adc
sub
fxch
sbb
call
out
dec
xlat
(bad)
push
outs
int3
add
adc
comiss
jne
cmps
adc
std
sub
xchg
cmp
aad
mov
cdq
xchg
xchg
ficomp
loop
lock
xor
dec
leave
and
mov
gs
ss
sub
jecxz
ror
xor
test
add
push
(bad)
cwde
sbb
pop
cmp
ins
add
add
fbld
push
dec
add
xchg
or
call
mov
push
psubusb
scas
in
(bad)
xchg
xchg
int
shl
in
jno
popf
mov
mov
sar
jmp
call
and
adc
sub
and
and
leave
and
cmp
dec
in
leave
sub
in
mov
mov
popf
xor
xchg
hlt
icebp
and
ret
aam
or
ins
mov
frstor
mov
dec
push
mov
outs
ret
fwait
inc
popa
xchg
lds
cmps
repnz
inc
push
iret
movs
stos
bnd
ins
push
pop
jecxz
adc
jle
jmp
lock
out
dec
sar
jo
addr16
pop
jle
xchg
neg
gs
xor
(bad)
xor
pop
jp
cmp
(bad)
stc
push
mov
mov
nop
jno
mov
jno
fld
dec
sub
xchg
aas
push
xor
nop
fs
aaa
xchg
and
mov
icebp
mov
fsub
icebp
adc
sbb
bound
pop
mov
pop
fst
sub
sbb
xchg
mov
inc
add
cmp
xchg
xor
add
xor
dec
pop
scas
inc
push
ins
pop
mov
jle
add
popf
cmc
sub
rcl
mov
add
mov
push
popf
cmp
fldenv
loop
adc
sti
mov
xor
dec
cmps
push
push
mov
nop
ror
xor
push
inc
out
pop
lahf
sar
arpl
lahf
mov
aam
test
(bad)
icebp
int
push
cmp
leave
sub
xchg
dec
pop
cmp
aaa
mov
cld
enter
mov
cmps
mov
pop
call
push
push
scas
dec
fdivr
std
sbb
mov
enter
pop
cld
fild
dec
dec
and
push
pop
mov
aam
adc
pop
inc
sbb
imul
pop
add
pop
push
inc
jae
or
cmc
call
outs
push
test
xor
jo
fs
fcomp
jp
jns
inc
gs
aad
dec
xchg
cmp
mov
test
and
mov
push
lock
fst
pop
xchg
(bad)
ror
leave
loopne
jp
fisttp
sti
push
add
lods
fldcw
call
ins
push
lds
clc
loop
hlt
in
mov
dec
xchg
stos
add
jbe
push
out
adc
xchg
ins
shr
xchg
icebp
push
pop
cmp
sbb
test
in
icebp
and
push
adc
int3
xchg
sbb
scas
clc
addr16
repz
pop
loop
xor
push
mov
and
movs
cdq
sbb
dec
dec
push
out
add
rol
cmps
and
lds
fild
loopne
jecxz
data16
jmp
inc
imul
lock
sbb
push
lea
cmps
or
push
cmp
mov
fisub
movs
or
mov
dec
jbe
fwait
mov
mov
sar
aam
dec
xor
rcr
ret
xchg
int
adc
mov
shl
jno
pop
fs
jne
sahf
test
imul
xchg
cmp
stc
mov
popf
and
cmp
jecxz
das
xchg
lods
xor
fwait
lea
loopne
sbb
jno
call
daa
sar
retf
mov
mov
xlat
or
and
sbb
adc
imul
mov
je
test
popa
stos
aam
jp
call
stc
cwde
leave
rcl
cmp
and
sbb
inc
adc
ror
movs
jns
push
shr
lds
mov
stc
ss
in
xor
rcr
cwde
push
lods
and
fiadd
daa
aas
fcom
inc
ret
and
mov
mov
cdq
xor
das
dec
popa
pushf
ins
pop
jle
fdiv
push
sub
mov
dec
xor
(bad)
out
out
inc
mov
iret
cmp
fcomp
gs
push
pop
mov
xor
js
scas
cdq
dec
pusha
inc
fs
int
jae
jnp
inc
out
gs
dec
out
cmp
(bad)
hlt
outs
ret
xor
je
nop
pop
mov
jbe
sub
inc
mov
(bad)
inc
add
xor
xchg
data16
sub
js
cmp
out
int3
test
xor
jnp
sbb
sbb
sub
push
mov
inc
push
daa
outs
js
jp
inc
xchg
cs
mov
(bad)
jns
mov
jb
xor
inc
cmp
imul
leave
sbb
inc
sbb
push
or
pusha
pop
inc
mov
sub
in
xor
arpl
add
pushf
call
sbb
push
loope
push
push
retf
idiv
loope
mov
pop
adc
and
(bad)
mov
out
or
cli
inc
mov
push
pop
sub
dec
dec
jmp
push
xchg
pop
leave
mov
sub
inc
sub
pop
aaa
(bad)
cli
mov
push
sub
lock
sub
dec
ss
jp
stos
bound
mov
jns
mov
cld
lods
xor
daa
inc
xor
inc
sbb
test
jp
cmp
fsub
mov
gs
mov
cmp
jge
and
(bad)
fstp
sub
inc
aam
push
mov
xchg
idiv
fisttp
ret
ja
add
fist
cli
jge
xor
adc
inc
sahf
in
test
mov
mov
add
lahf
jg
pop
xor
das
jg
fidiv
call
jle
mov
and
(bad)
cmps
pop
push
pop
cmp
retf
xor
pop
adc
pop
ficomp
aam
add
mov
push
inc
push
addr16
(bad)
mov
push
add
loop
and
repz
data16
scas
dec
and
test
pushf
in
xor
mov
js
out
xlat
pop
stc
push
cmps
loope
lock
push
inc
adc
je
(bad)
ret
mov
hlt
sbb
ins
imul
icebp
or
loop
and
push
mov
adc
sub
and
(bad)
stc
mov
mov
mov
shl
dec
(bad)
out
mov
inc
sbb
stos
sub
mov
sub
outs
dec
mov
jne
std
push
ja
sbb
outs
shl
jae
in
shr
add
scas
pop
and
addr16
pop
mov
lahf
pop
push
fsubr
je
inc
lea
mov
jle
jnp
les
ret
jmp
xlat
jo
mov
xchg
pop
add
mov
inc
mov
jle
rcr
and
push
pop
push
fst
or
nop
in
inc
jmp
mov
adc
mov
pop
aam
push
daa
cmps
stos
inc
fwait
or
lods
int
or
mov
push
ror
std
test
out
mov
xor
sbb
mov
test
in
leave
adc
mov
lock
push
mov
or
in
js
je
cld
xor
fisubr
xor
std
fwait
xor
into
xchg
enter
cmps
add
sub
iret
add
fistp
mov
push
mov
or
cmp
arpl
pop
push
int3
pushf
sbb
pop
icebp
jl
xor
out
adc
test
push
retf
imul
mov
inc
inc
aaa
rcl
test
fisubr
push
jnp
sbb
mov
out
mov
cld
push
mov
mov
cmp
leave
sub
gs
dec
sbb
sub
pop
movs
mov
sbb
rcr
sahf
or
pause
pushf
cli
cld
push
lock
neg
pop
xor
fwait
xor
(bad)
ja
xor
push
das
sbb
daa
sar
mov
add
(bad)
sbb
fimul
pop
jns
(bad)
ins
push
test
nop
mov
pop
out
outs
retf
test
outs
pop
dec
in
frstor
jmp
ret
js
scas
sbb
mov
sub
jmp
das
outs
pop
or
add
cmc
xchg
push
mov
or
mov
movs
sub
outs
es
aas
pop
hlt
adc
adc
inc
fimul
mov
and
test
gs
fwait
or
scas
(bad)
and
sub
sbb
add
ins
repz
mov
dec
cs
les
xor
pop
pop
adc
xlat
pop
mov
push
in
mov
mov
stos
fidivr
stc
dec
dec
inc
fcomp
out
in
js
fsubr
adc
xchg
push
mov
add
cli
in
addr16
rcl
xor
pop
sub
push
fidiv
mov
push
sub
lahf
xor
inc
out
jmp
add
sub
inc
xchg
or
stos
push
cld
push
push
ja
addr16
fwait
mov
cmp
mov
sbb
repnz
dec
cwde
sub
enter
add
leave
popa
mov
sbb
pop
pop
fiadd
cmc
mov
mov
ja
xor
std
push
lds
jmp
imul
mov
jmp
push
aas
xchg
sub
out
out
mov
xchg
jnp
dec
js
xor
div
retf
and
popf
shl
inc
sub
adc
push
aam
pop
cmp
retf
and
shl
mov
push
xor
stos
in
(bad)
jecxz
fs
lahf
(bad)
ds
jns
call
movs
xchg
in
push
pop
sub
xadd
sti
mov
fwait
pop
shr
mov
pop
inc
aas
mov
cmp
iret
outs
loopne
xor
mov
into
ficom
mov
mov
aas
inc
test
inc
(bad)
dec
popf
and
xor
fadd
sub
ss
jno
sete
adc
mov
bound
mov
mov
aam
test
mov
retf
out
sub
sbb
jmp
cs
or
sub
push
inc
adc
or
unpcklps
fnstcw
sub
dec
shl
add
and
mov
iret
out
mov
pop
jmp
mov
mov
dec
loop
push
je
jmp
push
shl
mov
out
and
mov
test
dec
pop
push
test
dec
and
add
xor
cmp
xor
call
cmc
xchg
les
mov
jmp
test
iret
mov
(bad)
imul
movs
jb
es
out
scas
mov
sbb
mov
push
nop
xchg
xchg
(bad)
cmp
push
dec
sahf
js
push
jge
test
pop
cld
sub
loope
push
js
jge
in
sub
test
lods
(bad)
pop
pop
mov
or
ret
and
mov
sub
test
push
mov
test
movs
pop
and
mov
pop
sti
fcom
aaa
aas
push
cld
pop
inc
and
mov
jb
jmp
jo
in
sti
mov
cmp
loope
and
pop
xor
call
cld
sahf
mov
cli
clc
bound
sti
icebp
popf
ds
(bad)
mov
push
cmp
adc
pop
xchg
and
test
cs
fbld
mov
or
add
repz
rcr
imul
shr
jbe
xchg
outs
push
rcl
dec
aaa
rcr
fisubr
imul
jmp
inc
dec
and
retf
jae
das
mov
jg
lods
(bad)
sti
shl
dec
stc
stc
enter
pushf
xchg
jecxz
scas
daa
rcr
add
retf
push
lahf
sub
inc
sub
fild
push
mov
ret
inc
xor
mov
mov
ret
cmp
or
addr16
sub
addr16
pusha
sbb
adc
in
das
inc
sub
dec
xchg
mov
lds
imul
ins
push
jmp
jo
ror
push
popf
push
cmp
sub
cmp
push
jne
jmp
sbb
outs
cld
mov
aas
add
cmc
mov
inc
xor
jae
stos
inc
mul
test
in
sub
arpl
pop
movs
push
push
sub
xor
cmp
ss
mov
push
dec
sbb
cwde
mov
fstp
ss
imul
ds
sahf
mov
fidiv
cmc
pop
xor
out
inc
mov
pop
nop
adc
xchg
in
arpl
mul
addr16
icebp
mov
xlat
retf
and
cld
test
fcomi
iret
movs
jmp
fadd
sbb
pop
push
inc
lods
hlt
fld
push
jge
mov
push
cdq
mov
pop
xor
jg
out
cmps
je
xchg
jae
std
out
fild
dec
pop
pop
sub
inc
xor
sahf
repnz
lods
scas
outs
xchg
std
sbb
mov
jmp
je
jle
dec
daa
add
fisubr
daa
xchg
lds
imul
inc
sub
or
mov
pop
sub
pop
dec
in
shl
rol
mov
call
jae
sbb
adc
(bad)
cmc
pop
sub
jecxz
jl
nop
hlt
test
or
xchg
xlat
xor
pop
movs
xchg
mov
neg
test
xchg
rol
sub
ret
mov
jbe
push
out
cs
jo
cwde
inc
sbb
scas
(bad)
cdq
dec
and
fdivrp
add
add
addr16
xor
sbb
imul
cmps
xchg
cmps
pop
shr
cmp
sbb
jbe
jge
loop
das
je
xchg
mov
pop
mov
pop
add
cmp
xchg
fwait
inc
fwait
loop
push
add
ins
mov
aas
jbe
push
js
test
pop
mov
xchg
mov
mov
dec
push
arpl
cs
lods
push
imul
or
outs
repz
fidiv
jmp
or
xor
adc
aad
add
inc
push
mov
xchg
bound
xchg
(bad)
mov
repz
leave
xchg
jl
or
and
in
stc
pop
in
sti
or
and
outs
das
fisubr
mov
jne
(bad)
and
xor
icebp
inc
(bad)
jae
xor
xor
rcr
stos
xchg
jle
xor
mov
pop
aaa
adc
arpl
pusha
jb
push
add
pop
or
dec
add
jecxz
mov
pop
pop
(bad)
or
push
xor
ja
adc
push
repnz
mov
aas
jb
test
aaa
adc
popa
jg
adc
adc
retf
into
sub
fs
fwait
adc
in
or
or
mov
loop
sub
rcr
push
sub
rol
call
ret
or
lahf
fwait
cmp
popf
push
jo
inc
xchg
leave
js
sbb
xchg
cmp
xchg
mov
cmps
inc
or
fnsave
jecxz
mov
mov
data16
lahf
pop
xchg
popa
fs
or
jg
test
jns
sub
movs
xchg
mov
inc
push
add
cmp
jg
loopne
and
jmp
sahf
jae
fisubr
or
stos
mov
std
movs
or
mov
inc
out
fcomp
aam
and
popf
push
fcomi
mov
sbb
das
out
cmp
mov
cmp
test
aas
ret
push
mov
das
lods
popa
into
sub
mov
dec
adc
and
jmp
repz
jno
ins
ins
and
pop
pop
inc
inc
(bad)
in
or
or
xor
in
add
in
out
pop
(bad)
cmc
adc
out
ins
repnz
cmp
mov
inc
cmp
ret
(bad)
ficomp
nop
mov
jle
adc
dec
dec
xor
loope
xor
jp
mov
cmc
jmp
mov
cld
(bad)
jae
in
mov
rcr
les
cmps
test
loop
mov
and
movs
(bad)
js
inc
pop
ds
push
aam
imul
adc
sub
pop
pop
pop
mov
adc
mov
(bad)
js
sar
mov
pop
mov
dec
bswap
std
sbb
call
add
ja
adc
pop
push
nop
ds
adc
xor
inc
dec
imul
test
sbb
ds
int3
pop
jl
aas
sbb
lods
mov
cmc
movs
push
lea
fs
push
adc
lahf
mov
(bad)
sbb
inc
cli
into
(bad)
ss
fist
push
cwde
jbe
ja
stos
lds
add
inc
mov
icebp
cmp
xchg
adc
xchg
cmp
lds
xor
out
(bad)
and
or
inc
sbb
movs
xchg
int
sub
pushf
retf
add
dec
loope
in
mov
ja
js
adc
retf
push
(bad)
out
adc
adc
push
test
cmp
cmp
xchg
cmp
ror
jnp
jb
cwde
sbb
mov
sub
xchg
mov
push
xchg
jne
aaa
mov
adc
sbb
pop
cmp
sub
fwait
aad
inc
mov
test
xlat
or
sbb
in
pop
cld
mov
push
std
addr16
ret
std
mov
add
ins
xchg
cmp
fisubr
push
aad
out
imul
jge
lea
sbb
retf
xchg
mul
xor
pminsw
ins
mov
pop
loop
cmp
sbb
mov
mov
sar
aas
jbe
retf
mov
xor
test
inc
call
sbb
mov
pop
mov
daa
int3
xchg
or
test
push
popf
mov
pop
stos
push
nop
inc
cmp
xlat
sbb
dec
sub
pop
jmp
and
mov
repnz
pop
lea
fsub
xor
int3
mov
btr
or
inc
sub
sahf
inc
retf
(bad)
lock
cmp
xchg
mov
jmp
xor
pop
test
and
fisttp
jl
push
push
push
xchg
xor
fisub
aam
mov
stos
and
das
xchg
mov
push
popa
jne
add
loop
push
popa
ret
subps
nop
cmp
pop
loope
mov
fwait
push
xor
mov
jns
push
les
in
mov
push
xchg
xor
pusha
mov
push
mov
adc
jg
cmps
push
fsubr
dec
mov
cdq
jle
enter
inc
push
repnz
ret
cmp
jae
push
lea
or
scas
dec
lahf
clc
and
outs
test
pop
xchg
(bad)
std
les
cmp
mov
sbb
xchg
jge
inc
pop
mov
mov
add
aaa
add
mov
addr16
(bad)
mul
and
(bad)
imul
dec
pop
repnz
mov
fadd
out
cmps
into
je
ret
clc
sbb
movs
mov
sbb
js
pop
fndisi(8087
mov
icebp
mov
test
mov
mov
mov
pop
int
fld
mov
movs
sbb
test
mov
sub
mov
lods
pop
xor
jle
call
jl
call
lods
jb
cmps
add
xlat
rcr
or
outs
sbb
je
push
mov
jecxz
retf
pop
mov
dec
inc
xor
shr
lahf
push
lods
pop
pop
(bad)
cli
ds
mov
sbb
adc
or
(bad)
std
mov
dec
in
popa
lock
jle
test
sub
mov
add
bound
outs
fidivr
out
jb
mov
xor
sbb
aam
sub
inc
movs
mov
cmp
imul
fadd
jae
dec
aas
sbb
pusha
aas
cmp
inc
test
clc
loope
loop
in
stc
mov
push
outs
into
loopne
movs
fiadd
aad
xor
mov
stc
push
jbe
push
jnp
mov
(bad)
mov
jmp
scas
xchg
dec
push
fnstsw
fsubr
inc
mov
xchg
cmp
or
sbb
inc
or
in
sahf
or
mov
cmp
xor
ret
das
pusha
pop
xchg
push
outs
call
ss
push
jg
cmp
push
pop
sub
pop
jp
push
adc
loop
push
pop
sbb
rcl
stos
xchg
ja
sbb
stos
pop
xchg
ds
dec
fs
cmp
lods
fs
mov
mov
fwait
adc
mov
addr16
adc
mov
mov
scas
pop
cmps
arpl
fwait
ss
movs
mov
imul
out
pop
adc
repnz
test
shl
xchg
cmps
cmp
push
xchg
cwde
test
adc
cmc
pop
shl
xor
ret
rcl
adc
pop
cmp
push
xor
jns
data16
push
ficomp
fwait
lds
icebp
rep
xchg
(bad)
xor
cmp
dec
xchg
xchg
and
and
add
xor
(bad)
mov
(bad)
inc
push
in
aas
scas
mov
arpl
ja
rcl
(bad)
cmps
ret
pop
imul
fbstp
dec
test
mov
movs
add
xchg
test
sub
scas
jno
mov
adc
gs
pop
or
adc
mov
loop
cmc
adc
add
or
ins
push
leave
outs
loopne
inc
fmul
mov
out
mov
repnz
leave
int3
cmp
mov
dec
mov
cli
fsubr
adc
in
(bad)
and
mov
pop
clc
xchg
fwait
sub
cmc
xchg
lods
fist
push
inc
fcom
retf
dec
xchg
jl
adc
sub
mov
ret
jo
fst
lods
and
jb
mov
adc
add
call
cwde
in
arpl
sahf
cmp
test
outs
shl
imul
add
push
mov
push
fisttp
outs
push
je
push
pop
and
mov
shl
ret
adc
arpl
das
dec
xchg
dec
xor
xor
bound
pop
and
loop
int
mov
pop
xchg
in
sahf
retf
out
pop
fst
mov
mov
retf
mov
lock
ins
xchg
jbe
xor
(bad)
movs
and
cmc
or
fxch
movs
sbb
jle
in
fidiv
xchg
icebp
movs
es
shl
bound
rcr
int3
xchg
cmp
xchg
push
fxch
sar
ins
inc
dec
and
mov
iret
mov
ja
mov
in
aaa
and
sti
das
mov
jb
mov
icebp
ret
mov
jge
in
setae
jle
retf
and
and
cmp
out
cmp
repnz
fwait
adc
pop
in
das
jmp
push
add
xor
lods
mov
cmp
retf
js
sar
add
mov
sar
add
sbb
push
sub
cmp
sbb
adc
call
repz
pushf
or
mov
(bad)
jg
pop
push
(bad)
xor
xor
in
adc
push
int
push
test
mov
sub
nop
push
and
add
pushf
mov
and
sub
(bad)
and
cmp
adc
movs
pop
movs
int3
sar
jmp
pop
loop
or
inc
stos
push
stos
xor
out
test
cmps
and
fiadd
stc
pop
lahf
xchg
xor
cdq
xchg
js
(bad)
or
mov
adc
popa
or
jae
hlt
aad
jbe
dec
xchg
sub
or
add
jmp
xor
outs
shr
bound
loopne
xchg
mov
dec
mov
sbb
popf
fnsave
nop
jb
lock
sbb
cmp
in
aam
pushf
popf
mov
ret
cdq
hlt
movs
in
dec
push
mov
ret
jle
mov
nop
pop
add
or
mov
push
pop
cs
jo
fmul
add
mov
fcmovu
adc
xchg
ret
sahf
adc
(bad)
jmp
fwait
rcl
out
and
cmp
pop
enter
ss
push
push
jnp
and
(bad)
(bad)
(bad)
add
inc
ins
mov
push
dec
es
xchg
push
imul
ins
mov
mov
dec
lds
pop
mov
or
mov
xchg
push
add
cli
push
push
push
jns
call
test
mov
popf
push
test
and
or
leave
ja
mov
and
mov
aaa
lahf
inc
call
sar
and
stc
ret
out
cmps
mov
or
sub
xor
push
in
pop
push
js
lock
adc
movs
rol
xor
pop
adc
bound
dec
jle
cli
inc
popa
mov
pushf
inc
jle
iret
xchg
xor
test
mov
in
cmp
mov
pop
pushw
adc
pop
popf
rcl
push
push
cli
aam
cdq
inc
jae
xchg
stos
xchg
mov
dec
inc
leave
cmp
pop
mov
push
inc
sti
fidiv
dec
test
cmp
call
dec
lds
sub
js
gs
inc
aam
repz
retf
dec
jle
mov
call
adc
add
push
fidiv
and
and
outs
mov
or
push
jnp
std
mov
aad
ret
cmc
stos
xor
bound
out
mov
(bad)
cmp
push
fwait
mov
in
push
cmc
lds
stos
int3
repz
rcr
mov
add
pop
icebp
repz
mov
xchg
lds
scas
(bad)
ins
scas
into
and
inc
addr16
fistp
mov
ins
push
repz
test
scas
repnz
mov
sbb
jmp
add
xchg
out
inc
pop
cmps
xlat
sbb
adc
xchg
sahf
rep
cli
ja
cs
push
inc
int3
pop
dec
jg
adc
outs
mov
mov
push
lahf
jg
fsubr
sub
mov
cmp
mov
jmp
loop
aad
pushf
inc
lds
cmp
cmp
mov
pop
mov
enter
xor
xchg
scas
xor
pop
je
and
loopne
fist
inc
mov
jmp
pop
jns
sub
push
fdivr
dec
jl
pop
mov
or
push
mov
inc
fidiv
fistp
arpl
xor
jmp
mov
sbb
mov
mov
jle
and
clc
je
pop
arpl
push
sahf
add
xchg
je
cmp
movs
pop
(bad)
dec
push
lods
lods
add
jl
sbb
xor
pushf
xor
int
cmp
dec
cli
bound
pop
sbb
call
stos
call
stc
in
cmps
push
imul
add
pop
out
mov
or
pop
sbb
mov
dec
cli
lods
jb
fs
pop
imul
ficom
out
cs
cmp
add
pop
mov
mov
fiadd
imul
and
or
cmps
sub
push
mov
mov
jl
ror
add
loope
pop
ror
cmps
mov
mov
inc
push
fcmovb
je
icebp
ror
dec
leave
inc
mov
call
push
inc
jmp
les
mov
ds
xor
pusha
or
xchg
mov
cmp
mov
icebp
mov
adc
add
or
mov
in
sbb
mov
fbstp
push
int3
(bad)
xchg
dec
call
(bad)
jecxz
iret
xor
xchg
ja
and
inc
mov
rol
lahf
sar
ret
mov
sub
dec
(bad)
(bad)
push
lds
outs
jns
push
pop
mov
or
lods
stos
mov
retf
xor
jae
in
jp
cmp
aam
dec
jecxz
ds
jmp
dec
cdq
jb
cmp
mov
into
(bad)
xchg
and
push
ret
pop
pusha
jmp
(bad)
inc
cmp
adc
add
pop
cld
std
push
or
(bad)
and
push
daa
fsub
arpl
add
push
push
cmp
cwde
call
mov
or
pop
mov
mov
pop
je
push
leave
aam
rol
pop
sahf
cld
or
or
retf
push
push
in
and
stos
ror
jbe
mov
mov
scas
and
fcmovnbe
lock
shl
xchg
jne
and
push
popa
jnp
sbb
out
sub
aam
and
pop
(bad)
jge
call
fsubr
push
xchg
xchg
jg
inc
js
ja
push
mov
iret
xor
aas
pop
xchg
and
adc
xchg
jg
fadd
sub
fnstsw
addr16
jle
rcl
cmp
mov
movs
sbb
pushf
dec
dec
adc
cmp
(bad)
xchg
dec
lahf
mov
xor
rcl
add
shr
je
add
fwait
add
je
inc
dec
frstor
jge
adc
xlat
or
or
sbb
test
mov
adc
jge
mov
fcom
xchg
jb
and
xchg
add
push
dec
and
cmc
jbe
mov
ret
or
(bad)
repz
jns
std
cmps
fsubr
and
push
add
fst
(bad)
es
test
cmps
iret
je
movs
pusha
and
rol
(bad)
out
push
ret
test
(bad)
out
test
imul
call
and
clc
das
mov
aas
shr
fild
ror
mov
aas
mov
mov
push
cmp
inc
pusha
jmp
add
ret
pop
adc
dec
mov
idiv
test
lea
xor
dec
mov
xor
stos
aas
mov
imul
or
neg
push
pop
pop
in
int3
std
cmp
pop
xor
mov
push
arpl
push
jmp
(bad)
xchg
faddp
fsubr
mov
leave
jmp
(bad)
pop
popa
getsec
or
jo
add
test
sub
mov
(bad)
lock
mov
jmp
dec
loop
push
mov
ror
add
xlat
fnstenv
rcr
cmp
leave
int3
call
movs
xor
jl
ins
(bad)
inc
sbb
sbb
data16
mov
dec
pop
mov
clc
or
and
jb
jmp
dec
mov
adc
(bad)
sbb
neg
aad
popa
add
iret
jbe
daa
iret
and
pop
fmul
nop
and
dec
fs
xchg
icebp
(bad)
js
enter
stc
mov
cld
push
ret
leave
xor
sub
shl
mov
ja
mov
cmp
fild
jmp
mov
dec
jge
icebp
adc
xchg
pop
outs
cld
bswap
dec
jno
cmps
popf
iret
and
push
out
mov
and
pop
sti
stc
or
inc
fmul
bound
clc
adc
ret
jns
cmp
lock
cmp
add
dec
out
fsubr
xor
jb
push
jge
pusha
mov
stos
lods
mov
fdiv
push
push
push
fsub
imul
rol
ja
sbb
icebp
and
mov
cmps
dec
imul
cmp
hlt
xor
pusha
add
(bad)
push
shl
pop
icebp
sub
mov
mov
in
test
shl
xor
imul
cs
inc
bt
pushf
in
scas
pop
dec
jle
shl
fisubr
mov
mov
inc
inc
and
xor
mov
mov
mov
call
cs
lds
jp
imul
mov
hlt
movs
scas
mov
rol
adc
inc
push
cwde
pop
pop
stc
ret
pop
inc
mov
in
jl
pop
leave
(bad)
ficomp
fwait
loope
jmp
ror
les
xchg
loop
inc
cmps
sub
aam
(bad)
test
movs
cmp
out
cli
outs
add
cmp
ja
mov
xor
push
pop
call
sbb
fimul
and
shl
data16
or
popf
int
jmp
repnz
cmp
arpl
mov
je
cwde
cdq
sbb
rcr
or
xor
(bad)
sti
ret
mov
inc
in
imul
xchg
lock
outs
in
out
daa
jge
jns
push
adc
jmp
inc
ins
adc
push
sub
cld
pop
sub
mov
push
inc
push
and
stc
adc
jne
stos
push
mov
mov
out
adc
xchg
std
sub
retf
jmp
and
adc
(bad)
aam
loopne
ins
xor
dec
popf
scas
scas
fisubr
pop
cdq
inc
icebp
pusha
fsubr
nop
loopne
aas
dec
mov
(bad)
mov
inc
ss
or
sbb
mov
das
cmc
mov
scas
call
or
std
xchg
sub
push
inc
imul
arpl
mov
icebp
je
sub
into
add
pusha
pop
inc
mov
sbb
jp
ret
int3
aaa
test
adc
pop
jecxz
pop
ins
std
mov
daa
cdq
jne
and
xchg
mov
xor
ja
sub
mov
cmp
mov
loope
add
popf
jp
sar
adc
cmp
cmp
adc
ja
fiadd
shr
xchg
imul
sbb
jns
jmp
fsubr
fiadd
pop
push
mov
out
retf
in
repz
xchg
sahf
mov
adc
add
pop
inc
adc
xchg
clc
pop
push
inc
imul
pushf
ret
fnsave
out
fwait
fs
outs
sbb
dec
and
mov
inc
cmp
jl
test
movs
sbb
xor
xchg
or
mov
in
mov
jmp
mov
test
call
into
cdq
adc
movs
movs
cli
inc
daa
or
xchg
aad
out
push
test
fisttp
xchg
inc
push
test
stos
add
das
std
jno
or
je
shl
nop
xchg
adc
sub
int
int3
inc
int
or
add
test
retf
loope
loopne
mov
mov
push
cmp
dec
push
pop
sub
inc
xchg
daa
in
in
ret
sbb
popa
rcr
sti
movs
inc
call
repnz
not
or
cmps
or
stc
imul
add
add
jmp
cmc
dec
xor
stc
sbb
mov
pop
test
imul
cs
cmps
ds
mov
mov
call
dec
jbe
sbb
xor
and
retf
push
mov
push
je
sub
inc
push
pop
inc
sar
xchg
mov
dec
inc
mov
push
cmp
cmp
xor
inc
and
inc
mov
rep
sub
mov
(bad)
out
xchg
push
loopne
fs
test
mov
jle
fs
cmp
add
fisubr
xchg
push
jge
retf
test
aas
push
pop
pop
inc
pop
dec
dec
lds
push
dec
std
add
cmps
(bad)
mov
dec
fisub
repz
dec
ds
mov
jmp
mov
mov
in
sub
iret
in
ds
das
pop
mov
ins
and
cmps
dec
imul
ror
and
cmp
jns
cmps
cmps
xchg
ins
das
mov
cld
push
test
and
jbe
enter
in
dec
je
nop
xor
rol
adc
pusha
and
int
js
add
fucomp
mov
popf
js
cmps
fild
repnz
inc
imul
and
leave
shl
movs
xchg
xchg
fidivr
ss
leave
and
cmp
inc
mov
call
mov
push
and
stos
and
fstp
push
xlat
push
add
mov
mov
pop
jge
xchg
sub
jmp
inc
cmp
ss
xchg
in
cwde
popa
fmul
sbb
mov
jecxz
js
dec
sar
cdq
xlat
adc
xor
jge
addr16
xlat
or
jns
or
scas
cmc
clc
xor
(bad)
js
iret
inc
jns
sbb
xchg
push
mov
add
push
xor
pushf
inc
sub
xor
xor
pop
clc
retf
mov
fmul
icebp
mov
and
ins
and
ins
ror
or
test
fs
in
in
adc
movs
adc
jo
jb
imul
push
jb
pop
cmp
push
mov
mov
mov
cmp
clc
test
icebp
dec
sahf
jge
mov
mov
lock
add
sub
pop
ins
push
pusha
pop
sti
scas
mov
adc
repnz
add
leave
and
cmp
xchg
cmps
(bad)
movs
inc
pushf
cmps
iret
into
movs
or
test
or
inc
adc
ror
aam
or
cli
cmps
xor
stc
xor
(bad)
mov
or
inc
push
cmps
bound
rol
mov
cmp
inc
cmp
and
loope
aaa
and
inc
leave
sbb
jge
inc
ins
push
cmp
pop
in
ins
dec
(bad)
sti
int3
push
fwait
in
xchg
pop
clc
(bad)
out
xor
out
adc
cmp
and
add
mov
cmp
xchg
mov
mov
mov
outs
xchg
scas
gs
enter
pusha
xchg
lds
(bad)
retf
hlt
mov
inc
imul
push
call
in
jmp
push
mov
push
mov
sbb
or
dec
fstp
pop
sbb
dec
cmp
(bad)
jb
daa
fadd
jmp
icebp
add
rcl
jg
mov
xor
sbb
push
lds
and
add
jb
lea
adc
add
outs
jno
lahf
imul
push
xor
repz
add
stos
fsub
aam
adc
push
out
movs
(bad)
js
mov
neg
lods
jbe
retf
push
jb
idiv
sbb
pop
xor
push
in
out
aas
pop
jns
cld
loope
in
pop
vpminsw
ins
dec
rol
mov
cmps
cld
fild
(bad)
jg
outs
in
out
inc
popf
shl
or
xchg
mov
std
inc
jmp
jns
dec
mov
inc
push
adc
adc
popf
nop
mov
mov
pop
popf
imul
sbb
outs
stos
lods
push
xor
pop
setl
retf
shr
xor
jns
lea
in
add
ror
push
pop
fiadd
cmp
adc
jle
adc
fdivr
mov
and
fs
jo
(bad)
push
jg
and
fnstenv
int
push
push
inc
icebp
xor
jmp
adc
movs
inc
fist
cmc
xchg
lds
fdivr
fldenv
lds
rcr
rcr
out
and
call
jg
enter
popf
pushf
xlat
pop
mov
scas
dec
sahf
add
fcmovnb
mov
sbb
out
sbb
jle
cmp
push
jne
sbb
sbb
pop
mov
dec
dec
pop
jb
in
iret
push
mov
xor
fsub
mov
scas
ins
mov
call
push
pop
push
and
jp
stc
rcl
push
sbb
imul
movs
mov
enter
jno
(bad)
je
test
cs
cmps
popf
mov
or
adc
jg
jbe
into
push
addr16
push
pop
add
scas
xor
sub
repnz
xchg
inc
mov
mov
jg
fadd
fstp
or
shl
and
and
mov
cmc
cmp
xchg
in
sbb
add
mov
cmp
or
push
sub
jno
popa
add
sar
pushf
pop
fs
jne
mov
test
inc
data16
cdq
mov
aaa
and
test
pop
out
sbb
clc
ins
pop
test
sub
pop
aas
lods
es
push
sbb
inc
mov
paddw
mov
dec
push
aas
addr16
cs
cmp
jge
sbb
add
dec
jb
rcl
inc
fs
int3
loope
imul
push
inc
cmp
in
std
xor
(bad)
and
ja
sbb
sbb
mov
pop
sub
mov
xchg
ja
add
enter
(bad)
sub
xchg
int
test
xor
mov
push
mov
ror
les
outs
cmp
mov
test
dec
xchg
pop
es
mov
cdq
sahf
daa
or
sub
loopne
gs
jmp
cmp
in
leave
sub
adc
fbstp
adc
or
mov
sbb
mov
and
cmps
xchg
enter
push
push
sbb
popf
adc
jmp
fld
adc
(bad)
jne
loop
dec
or
imul
xor
cld
dec
pop
inc
inc
js
in
js
cmp
xchg
(bad)
jns
or
ja
xchg
cmp
add
les
pop
cmps
adc
jp
dec
mov
xchg
shl
dec
inc
cli
xchg
jmp
xchg
push
loop
fldcw
inc
lods
jbe
xchg
jg
sahf
popa
lahf
fidivr
std
rcl
data16
pop
xchg
sub
push
cld
(bad)
test
ds
or
xchg
call
scas
test
xor
(bad)
jmp
lds
clc
push
enter
js
mov
add
sub
lods
inc
movs
mov
shl
pop
mov
icebp
sar
cs
arpl
pop
mov
imul
retf
inc
inc
push
iret
ds
bound
dec
je
mov
std
scas
mov
imul
cs
pop
ret
mov
imul
cmps
dec
cmp
imul
ficom
sbb
fcom
test
or
inc
fisttp
arpl
loopne
sub
pop
push
retf
xor
hlt
lahf
xlat
les
add
xchg
push
ror
movs
in
mov
int3
cmp
lods
jbe
jecxz
sbb
and
xor
sbb
sbb
je
sti
ss
mov
popf
dec
cmc
push
pop
push
loopne
and
adc
js
jecxz
aam
push
pop
jecxz
xor
jb
dec
inc
lea
add
cmps
sti
mov
fstp
rcl
mov
jl
mov
cmp
sub
add
ss
aam
xor
jl
cmp
into
ror
mov
add
nop
inc
ret
popa
cmp
ffree
daa
push
inc
leave
cld
jg
clc
jl
cmps
pop
adc
loop
and
or
das
mov
push
cmp
js
xchg
cs
adc
stc
bound
call
pop
test
icebp
xor
push
data16
test
aam
gs
out
fldenv
mov
lods
and
out
ret
mov
xchg
inc
jp
xchg
test
mov
loopne
lock
mov
fstp
pushf
lock
and
jecxz
jecxz
retf
dec
dec
adc
ins
lock
retf
xor
and
enter
xor
jmp
mov
outs
cmp
mov
mov
pop
aaa
movs
sub
or
retf
pop
rol
mul
cs
push
jne
rol
and
xor
push
jmp
add
push
pop
sbb
test
repnz
mov
stc
inc
int
add
bound
hlt
int3
xchg
or
in
jge
jmp
(bad)
enter
into
inc
ins
hlt
pop
ss
pusha
outs
adc
lahf
xchg
in
icebp
cmps
cdq
add
xchg
inc
rcr
or
stc
lea
xor
xlat
lds
cwde
dec
stos
pop
and
adc
in
mov
jmp
cmp
outs
xchg
aad
enter
not
dec
inc
stc
jb
add
retf
stos
cdq
jp
mov
xchg
daa
(bad)
out
sub
outs
and
push
and
mov
mov
xchg
das
or
popa
mov
pusha
mov
add
push
pushf
aaa
cwde
xrelease
retf
out
fisub
xor
in
aam
mov
pop
cmps
test
push
xchg
inc
pop
inc
lds
je
cmps
adc
clc
mov
dec
sbb
mov
es
xlat
inc
sbb
mov
xchg
mov
add
retf
dec
mov
sub
sbb
jmp
call
add
int3
shl
lahf
icebp
ret
lds
add
add
ss
xor
dec
inc
in
add
pop
fs
retf
pop
push
idiv
daa
inc
dec
lods
dec
sbb
mov
aad
test
adc
inc
lods
je
(bad)
int
(bad)
fimul
ret
mov
pop
mov
xor
out
femms
fiadd
add
cmps
inc
test
mov
or
pop
cdq
pop
jmp
or
push
fwait
bound
cmp
pop
dec
lahf
rcl
dec
mov
sar
add
sbb
sub
hlt
mov
mov
in
fcom
movs
arpl
mov
out
mov
inc
push
into
xchg
inc
pop
pop
int
sbb
dec
inc
push
ret
sti
push
push
ficomp
cs
xlat
test
loopne
bound
adc
pushf
mov
xchg
jnp
mov
hlt
loop
xor
sbb
mov
jo
(bad)
leave
stos
stos
sahf
es
arpl
pushf
leave
pop
jbe
xchg
nop
jnp
pop
inc
jbe
pslld
fisubr
xor
jno
mov
repnz
fwait
out
lods
push
add
cmps
out
cmp
xchg
fild
jnp
lods
jecxz
add
jns
imul
add
mov
daa
jecxz
imul
xor
(bad)
mov
rcr
sbb
mov
xchg
out
aaa
ins
mov
add
or
or
dec
pop
aad
adc
xor
pop
mov
lea
dec
mov
mov
in
jle
je
and
rcr
mov
in
xchg
neg
and
push
mov
daa
lods
hlt
retf
dec
ds
mov
les
in
js
xor
in
adc
(bad)
and
jo
(bad)
les
sbb
sbb
daa
(bad)
xchg
mov
sbb
or
shl
outs
xchg
nop
enter
aam
pavgw
clc
dec
test
xor
cli
out
leave
xchg
mov
sub
icebp
jge
movs
jae
hlt
adc
add
push
leave
cmp
mov
inc
push
push
jbe
or
pop
mov
cwde
lahf
mov
scas
push
outs
adc
or
mov
sub
or
test
ins
sbb
scas
push
lock
cwde
push
cli
xlat
adc
add
xor
stc
sar
jbe
ret
outs
hlt
pop
sbb
adc
popf
cwde
sub
int3
or
jae
das
push
jl
arpl
sbb
mov
jmp
pusha
adc
mov
adc
xchg
bound
jbe
push
sbb
mov
sbb
inc
int
cmc
cmp
loope
xchg
js
inc
rcr
inc
push
jmp
and
lock
frndint
cmc
sbb
sub
and
sti
scas
call
ds
retf
outs
(bad)
in
lds
mov
xor
dec
push
gs
mov
jb
sub
jl
in
push
fidiv
mov
fsub
xor
sbb
fisttp
shl
dec
pop
mov
push
packuswb
or
cmp
imul
pushf
std
jne
popf
mov
jl
push
(bad)
shl
push
push
add
stos
xchg
inc
cdq
adc
in
mov
movs
(bad)
cmp
(bad)
sbb
cmps
mov
xchg
das
test
jno
cmp
aas
cli
adc
adc
je
push
xchg
add
xchg
imul
pushf
mov
mov
mov
mov
adc
xchg
adc
pop
and
loopne
add
stos
xchg
mov
in
pop
pop
test
or
pop
mov
test
jo
adc
push
and
inc
jp
adc
cmp
jmp
mov
dec
inc
repnz
lea
lods
lods
imul
jge
cmc
fwait
cmps
(bad)
xor
ins
dec
movs
push
and
dec
mov
push
inc
jmp
mov
or
push
fmul
jns
iret
popa
sub
mov
add
addr16
fbld
shl
or
jb
pop
or
sub
imul
data16
pop
sub
cmp
iret
(bad)
jno
jns
lods
fiadd
cs
cmp
mov
(bad)
xor
cmp
ror
pop
mov
cmp
xchg
jmp
(bad)
fist
sub
fidivr
xchg
xchg
outs
popf
pop
mov
ss
dec
lods
test
sbb
xchg
jno
jecxz
sub
outs
add
hlt
arpl
inc
push
jp
test
inc
je
jbe
fdivr
adc
mov
sub
xchg
xchg
cmp
fstp
ret
test
mov
sahf
push
ja
sub
xor
jle
push
xchg
mov
pop
push
cmp
inc
inc
test
pop
mov
mov
mov
ins
test
dec
mov
stos
push
pop
sbb
ja
aam
shr
adc
jne
mov
fnstenv
mov
iret
pop
mov
std
cmp
scas
inc
fidiv
fidiv
sub
dec
(bad)
mov
adc
or
mov
sahf
sbb
lods
mov
dec
in
jle
int
pushw
add
mov
cld
test
data16
adc
mov
dec
pop
cmc
dec
adc
dec
loope
pushw
and
popf
sbb
js
fwait
ret
push
mov
jo
push
icebp
adc
add
sbb
lahf
adc
mov
mul
pop
(bad)
or
inc
sub
fistp
or
scas
mov
adc
push
js
jmp
sub
nop
fbstp
xor
xor
jb
mov
mov
mov
sub
cwde
jecxz
in
pop
mov
mov
add
cld
jg
popa
aam
es
out
cdq
mov
shl
xchg
cmp
add
or
mov
aaa
ror
pop
rcr
adc
test
aas
or
mov
dec
pop
outs
pop
cld
fstp
xchg
jl
out
jmp
repz
mov
fisub
jmp
sar
jmp
push
shl
or
sahf
cld
or
cwde
loope
fcom
(bad)
das
call
mov
retf
aad
dec
and
xchg
pop
das
or
pop
out
cdq
fdiv
mov
ror
or
loope
push
(bad)
jne
lea
lods
in
hlt
mov
pop
cdq
xor
cdq
sbb
(bad)
cli
push
imul
fnstsw
jmp
cmp
and
add
cmp
sub
outs
loope
aam
jg
inc
xchg
(bad)
push
scas
aas
push
jns
pop
data16
jecxz
aas
sub
sub
xlat
jmp
push
iret
(bad)
in
mov
xchg
sub
stc
jmp
out
push
mov
inc
sub
jmp
sbb
inc
sbb
sub
add
stos
lods
dec
jl
inc
test
ss
shr
aaa
add
mov
imul
lods
add
daa
jle
jno
mov
iret
mov
mov
add
ret
test
stos
mov
ja
fisubr
sahf
movs
(bad)
jnp
fcom
shl
out
popf
pop
mov
dec
push
lahf
mov
xor
stos
mov
pop
aam
mov
xor
xor
je
test
jmp
retf
lds
mov
xchg
pusha
xor
data16
xor
dec
mul
test
push
mov
div
aad
and
xlat
lods
push
lods
xchg
fistp
int
imul
mov
nop
inc
xchg
icebp
fistp
popf
xlat
sub
fiadd
pop
les
lahf
gs
push
mov
outs
fistp
xchg
dec
push
loope
loopne
sti
mov
or
jnp
inc
fiadd
push
sbb
xor
mov
rcr
test
lock
(bad)
push
int3
mov
(bad)
fs
or
hlt
push
mov
pop
call
pop
ror
popa
jle
leave
adc
outs
and
mov
repz
adc
jae
movs
hlt
addr16
push
mov
jge
cmps
sbb
hlt
push
pop
mov
std
lods
jbe
repnz
(bad)
retf
sbb
mov
and
fld
pop
xlat
jmp
gs
(bad)
cmc
js
jbe
mov
jnp
inc
cmp
icebp
mov
sbb
or
pusha
and
pusha
push
hlt
mov
fwait
push
in
fstp
push
xchg
sub
movs
push
add
movs
aaa
(bad)
outs
sahf
lea
cmp
inc
inc
into
les
in
fcomp
mov
enter
fnstsw
mov
test
cwde
mov
(bad)
pop
test
rcl
(bad)
clc
scas
int3
pop
ret
out
data16
dec
pop
sbb
popa
and
aad
cmp
rcr
test
adc
cmps
ds
jg
jp
js
shl
lds
mov
or
xor
jae
mov
js
addr16
add
jbe
push
xlat
std
cmp
jno
and
jp
fdivr
push
fimul
ficomp
mov
das
pop
and
imul
jae
mov
test
gs
sub
ja
jmp
push
je
jno
retf
sti
cmps
aam
dec
xor
shl
adc
aam
jl
cmp
mov
adc
cmp
ficom
aad
xchg
cmp
mov
std
adc
test
aas
push
dec
rcr
fidiv
pushf
mov
(bad)
or
ins
sbb
out
ror
cwde
jge
sub
mov
mov
jecxz
clc
dec
push
test
xchg
fsubr
das
inc
pop
addr16
movs
enter
daa
sub
aad
je
adc
test
or
jmp
fisubr
cli
rcr
ins
es
cmp
cwde
shl
div
mov
push
(bad)
jl
xlat
call
xchg
mov
and
ins
shl
xchg
jb
add
mov
stos
scas
(bad)
movs
(bad)
scas
shr
push
lahf
into
dec
or
pop
scas
push
scas
inc
shr
mov
inc
and
out
inc
adc
fmul
(bad)
rol
add
jb
icebp
mov
(bad)
stos
pop
dec
js
ins
(bad)
mov
into
bound
ret
ins
les
call
bound
jae
adc
inc
sub
dec
inc
push
mov
cmp
xor
adc
xor
pop
out
add
pop
(bad)
je
adc
xchg
cdq
cmps
not
test
fld
pop
aaa
adc
sub
test
inc
(bad)
loope
push
mov
push
cmc
clc
jl
(bad)
out
out
mul
pop
sub
dec
loope
inc
mov
adc
ds
pop
movs
jmp
sub
jnp
enter
cdq
mov
push
fidiv
pop
mov
push
iret
movs
or
xor
push
xchg
ja
cmp
aas
addr16
sub
sbb
pusha
pop
sub
push
fs
test
dec
sbb
or
in
xchg
mov
cmps
add
rcr
mov
xor
ja
(bad)
pop
dec
and
inc
cmp
pop
outs
movs
dec
lea
mov
jl
adc
jne
inc
inc
sbb
cmps
or
pop
mov
mov
pop
or
stc
movs
test
pop
cmp
jns
push
arpl
adc
cld
sar
mov
sub
in
leave
dec
loop
loopne
inc
mov
or
aas
pop
stos
enter
out
jo
sbb
test
pop
dec
icebp
add
push
(bad)
and
pop
call
cmp
adc
cmp
imul
jne
pop
sbb
mov
mov
adc
sbb
gs
jmp
sbb
(bad)
cs
dec
mov
aaa
cmps
and
adc
mov
stc
pop
lds
or
je
jp
mov
into
cli
in
adc
mov
inc
hlt
push
adc
movs
in
ja
push
inc
aaa
repz
pop
out
xor
pop
jmp
dec
test
pop
hlt
dec
test
mov
in
shl
add
sub
aam
cdq
test
xchg
pop
push
xor
push
push
fs
xor
xchg
push
mov
cld
jmp
fs
jle
nop
inc
sbb
sbb
aam
or
pop
or
mov
mov
push
mov
push
out
fdivr
js
jmp
into
ror
repz
or
sub
data16
adc
mov
fstp
push
inc
movs
jb
dec
in
add
sbb
xchg
shl
sbb
and
inc
dec
rcl
leave
mov
jg
xchg
xor
in
sub
jle
or
jo
jecxz
stc
mov
shl
out
sti
in
jge
pop
dec
je
pop
inc
imul
cli
sbb
add
or
dec
cmps
sub
add
add
xchg
into
push
dec
fisubr
dec
mov
adc
adc
sbb
lea
lds
xor
mov
cmp
ficomp
and
adc
inc
jecxz
push
dec
add
jecxz
cmp
jl
dec
jno
dec
jbe
xor
mov
and
push
or
pop
mov
cs
or
ret
mov
push
inc
and
ror
(bad)
push
and
inc
inc
jecxz
call
and
popa
fdiv
add
mov
fsubp
test
adc
mov
push
sar
out
sub
pop
test
adc
mov
or
jo
inc
and
mov
push
and
es
xor
add
(bad)
sahf
jbe
mov
mov
retf
mov
dec
mov
sbb
es
inc
jl
sahf
push
pop
push
sbb
dec
pop
jmp
mov
pushf
sbb
das
sbb
popf
cld
jbe
dec
dec
in
sbb
or
cmp
push
mov
push
ja
fdivr
jbe
and
push
dec
in
mov
dec
(bad)
pop
(bad)
icebp
add
adc
pushf
mov
add
in
outs
pusha
les
js
and
inc
inc
mov
enter
sbb
xor
xor
int3
dec
(bad)
push
mov
ror
not
lds
ss
jg
(bad)
dec
push
loope
jecxz
mov
iret
les
add
push
fcomp
and
cmp
mov
test
and
cmove
pop
lahf
iret
ror
fidivr
cmp
cmp
ins
dec
in
jge
scas
sahf
push
leave
mov
sbb
mov
mov
mov
add
and
jnp
sbb
and
cli
gs
shl
sbb
mov
push
xor
xor
mov
or
in
xchg
popa
inc
mov
adc
pop
int3
mov
pop
and
bound
cwde
or
(bad)
sub
jb
inc
mov
xchg
imul
and
jmp
push
dec
mov
mov
mov
sahf
mov
sbb
call
or
popa
aas
loop
xchg
or
das
sub
repnz
fcmovu
jno
popf
inc
pop
retf
xor
jge
inc
adc
loopne
stos
repz
cld
or
jle
pusha
cmp
cmp
into
mov
in
push
mov
mov
xchg
pop
and
xchg
stos
test
retf
mul
in
push
retf
movs
rcr
xor
cmp
pop
(bad)
jno
jmp
mov
in
mov
outs
mov
jmp
xor
adc
and
mov
popf
outs
outs
out
adc
xchg
into
popa
lods
sbb
pop
push
cmps
popf
out
mov
les
fistp
icebp
inc
mov
or
mov
jecxz
lock
cdq
js
sar
mov
or
sub
scas
call
imul
(bad)
sbb
scas
dec
mov
movs
fdivrp
jmp
adc
jno
inc
sub
scas
xor
in
jo
inc
jns
jo
retf
cli
fcmove
ret
(bad)
cli
js
sti
mov
jecxz
and
pushf
dec
ins
mov
into
xor
inc
and
mov
outs
aas
aas
dec
(bad)
out
push
pusha
push
mov
popa
mov
fcomp
call
je
cwde
mov
inc
xchg
jmp
mov
xchg
(bad)
(bad)
fnstsw
mov
lods
mov
cld
lahf
and
dec
aas
js
sbb
pop
mov
stc
fcomp
and
adc
adc
sbb
mov
icebp
cmps
jmp
pop
mov
xchg
inc
jmp
int3
push
mov
inc
in
test
lock
iret
stos
imul
and
mov
bound
jge
sbb
ss
aaa
jb
leave
xor
xor
add
add
cli
inc
mov
lds
jbe
popf
jo
inc
mov
mov
xchg
out
mov
pop
or
xor
loopne
cmps
scas
stc
stos
or
push
add
lea
cmp
sbb
sahf
xor
js
dec
stos
xor
enter
cmps
ffree
loope
jle
movzx
gs
lock
out
test
sub
data16
mov
stos
push
xlat
outs
dec
xor
sub
pop
rol
stos
mov
inc
(bad)
dec
jmp
xchg
sub
xlat
(bad)
aas
dec
fdivr
test
pop
sbb
jb
es
sti
sbb
inc
outs
jmp
or
cdq
sbb
push
loope
or
cmp
jg
pop
sbb
mov
xchg
push
mov
in
xchg
in
dec
pop
std
es
mov
xchg
pop
xchg
mov
cmc
add
sbb
sbb
xchg
xlat
outs
mov
ret
clc
push
pop
cwde
(bad)
jns
xchg
mov
call
dec
cmp
lds
dec
icebp
jp
imul
dec
mov
jae
out
outs
data16
fcomp
add
fcom
loope
xchg
mov
push
lea
js
mov
imul
call
sub
pop
sub
pop
call
adc
pop
jnp
xchg
adc
outs
les
mov
and
lods
out
imul
dec
lods
test
mov
mov
movs
shl
sub
(bad)
fmul
push
inc
in
aad
mov
push
lahf
mov
cwde
xchg
or
mov
jae
cmps
ja
inc
inc
jb
push
push
rol
and
je
test
add
daa
sbb
pop
ret
adc
mov
std
movs
jecxz
sbb
push
cwde
push
pop
mov
dec
fwait
test
hlt
mov
sbb
pop
mov
or
inc
push
mov
fistp
aad
inc
in
push
and
das
mov
push
xlat
inc
aaa
cmp
xchg
lods
push
sbb
aas
(bad)
push
out
push
fiadd
pop
fsub
iret
je
add
mov
mov
gs
jns
mov
jo
and
xchg
ret
sar
push
xor
jno
aam
or
cmp
js
xchg
cmps
js
pop
xchg
dec
add
sub
mov
mov
or
cmp
or
push
cmp
sbb
addr16
sbb
lds
sub
into
add
mov
pop
add
lahf
sbb
arpl
or
stos
push
mov
outs
clc
dec
jmp
ds
je
cld
retf
(bad)
jns
adc
addr16
and
gs
or
dec
leave
aam
mov
out
aam
sub
push
scas
nop
movs
mov
repz
jae
ret
mov
cmp
and
jbe
or
bound
pop
add
jmp
mov
repz
cmp
daa
js
push
mov
sub
imul
fwait
mov
pop
lock
cmp
push
call
dec
jmp
(bad)
sub
jae
into
ficomp
xlat
js
fist
push
in
cmp
mov
addr16
push
arpl
mov
xchg
mov
movs
jp
mov
xchg
fldpi
pop
sub
pop
jnp
inc
jle
sub
mov
xor
fistp
adc
das
push
in
pop
cld
push
adc
ja
add
jmp
lock
xchg
dec
sti
mov
and
cld
clc
sub
retf
hlt
sub
in
pop
xor
outs
adc
scas
rcl
hlt
and
fiadd
nop
xor
inc
mov
rcl
mov
sub
scas
adc
ds
or
daa
into
repz
fldcw
mov
and
aaa
retf
shl
mov
and
cmp
add
lods
out
add
cmp
ror
mov
adc
push
mov
cdq
cmc
push
sub
cmp
dec
xchg
jo
dec
pop
shl
test
mov
sbb
iret
mov
ret
hlt
jle
jge
rol
stos
inc
mov
mov
retf
cmp
pop
dec
jo
retf
cmps
jne
test
dec
data16
ins
int3
enter
jle
and
sbb
pop
rol
xchg
pop
lods
ret
nop
data16
cmps
test
pop
je
mov
sbb
mov
xchg
or
xlat
mov
dec
test
mov
add
clc
jnp
int3
sub
inc
repz
jp
xchg
xor
add
jge
in
std
aaa
sub
sbb
dec
mov
mov
cmp
fmul
push
adc
jbe
pop
mov
repz
xor
data16
xchg
jmp
pop
dec
sbb
dec
gs
sar
lods
or
leave
js
das
xor
ret
sub
jnp
mov
sbb
sahf
inc
(bad)
retf
cmp
out
jle
adc
lds
push
push
popf
xchg
jbe
inc
test
icebp
arpl
push
leave
out
cmp
sti
pop
rcl
inc
push
xor
mov
clc
xchg
imul
das
xchg
or
lahf
aad
pop
push
xor
adc
xchg
dec
add
fnstcw
sub
outs
mov
push
dec
mov
jb
rol
scas
ror
cs
mov
daa
out
cmp
(bad)
sbb
adc
out
outs
clc
lock
jg
lods
mov
mov
scas
push
add
pop
sbb
mov
push
sub
push
call
retf
shr
loope
dec
aaa
xor
pop
outs
in
add
lods
cld
stc
fwait
js
hlt
fs
ins
mov
gs
mov
and
int3
push
mov
mov
pusha
add
jle
pop
mov
xchg
je
call
adc
push
adc
fdiv
push
bound
and
jmp
lods
mov
inc
xchg
mov
adc
call
ret
sti
cmp
xchg
popa
add
jl
hlt
and
lods
sbb
cld
cmp
nop
mov
mov
cmp
jmp
inc
test
out
mov
adc
jg
or
push
adc
inc
mov
jmp
add
push
mov
xchg
icebp
jl
sub
sbb
adc
mov
adc
jg
jle
pushf
lds
inc
hlt
or
inc
mov
adc
or
jecxz
(bad)
leave
sbb
add
add
dec
call
jns
fst
mov
xchg
fs
arpl
fimul
es
pop
gs
les
jecxz
hlt
popa
aas
cmp
mov
cld
inc
adc
mov
hlt
call
mov
xor
sub
adc
jmp
stos
push
pmaddwd
jo
(bad)
jle
add
call
(bad)
icebp
mov
fdiv
cld
fldcw
cdq
mov
sbb
cmp
xchg
mul
jmp
sti
xchg
sub
and
push
shl
mov
adc
cmp
loope
dec
scas
ret
outs
scas
jb
dec
ret
cmp
sbb
push
not
xor
or
xchg
repnz
xchg
lods
mov
(bad)
js
push
and
or
mov
or
xchg
loopne
jmp
imul
fisubr
pop
pop
sub
cld
iret
cmps
mov
clc
mov
inc
dec
jg
test
mov
mov
in
sub
sbb
out
clc
sbb
mov
sub
ret
adc
fcmovb
sub
mov
sub
jle
aad
loopne
add
adc
cmps
add
cmps
lods
push
xchg
pop
jge
test
sub
mov
fcom
rdpmc
adc
xor
push
add
lods
loop
popf
outs
push
je
arpl
pop
mov
cmp
retf
mov
es
and
adc
icebp
imul
jns
in
les
mov
fisubr
adc
movs
sbb
or
shl
repz
fcomp
cmp
inc
push
adc
rcl
or
adc
popf
adc
movs
mov
aas
dec
sub
mov
dec
cmp
(bad)
xchg
pop
les
arpl
cmp
dec
inc
xchg
lahf
cmps
push
cmps
cmp
ret
movs
popa
nop
fisubr
cmp
inc
repnz
aam
jmp
cmp
mov
arpl
test
lds
or
mov
xchg
retf
stos
xchg
jne
(bad)
data16
pop
push
xor
sub
(bad)
fs
call
call
pop
mov
lods
pop
lods
test
ret
stos
mov
xchg
adc
std
or
scas
cmp
sbb
fmul
(bad)
adc
jmp
(bad)
pop
scas
push
xor
lock
cmp
sbb
cmp
jns
ins
mov
outs
int3
imul
jno
out
mov
dec
into
jg
mov
pop
add
xor
loopne
repnz
cmp
in
jo
mov
imul
mov
cmp
mov
imul
pop
and
aaa
inc
sahf
push
sar
outs
popf
jo
or
cmps
lods
push
lahf
hlt
pop
push
outs
in
arpl
jae
push
(bad)
or
pop
cmps
imul
xor
xchg
cmp
jo
xchg
mov
mov
add
add
adc
sub
xchg
jg
out
cs
pmaddwd
les
add
dec
cmp
mov
js
adc
pusha
push
jns
mov
pop
gs
and
mov
inc
fld
fdiv
mov
test
jl
leave
pop
sahf
sbb
lds
xor
add
aad
in
xlat
hlt
(bad)
cli
adc
dec
daa
loop
call
adc
(bad)
jbe
test
lods
push
popf
adc
mov
aas
pop
adc
sub
pop
scas
mov
dec
retf
mov
out
mov
push
shr
sub
mov
cmps
pop
outs
arpl
jnp
leave
dec
xor
rcl
pop
stos
sahf
mov
mov
jne
shl
std
sub
js
(bad)
loopne
js
(bad)
clc
or
test
pop
in
mov
or
push
xchg
stos
add
inc
jge
jmp
test
sbb
jbe
das
pop
add
popa
push
dec
icebp
rcl
leave
outs
in
or
xor
iret
push
rcl
sub
in
jnp
cs
and
js
push
ds
adc
sbb
in
ins
jmp
dec
test
xor
xor
dec
or
pop
outs
test
sub
rcl
(bad)
pop
pop
dec
jb
xor
(bad)
popf
dec
add
xchg
fdiv
data16
hlt
sbb
xor
or
cld
aam
mov
cmp
adc
inc
or
pop
(bad)
imul
or
sub
cmp
sbb
loope
adc
retf
cmps
add
je
je
xor
mov
ja
dec
or
fild
movs
lods
daa
add
nop
outs
mov
mov
aad
mov
mov
loopne
push
mov
cmps
outs
mov
repnz
mov
pop
retf
mov
inc
ror
inc
inc
ja
adc
imul
in
lahf
xchg
mov
xor
jb
lods
call
pop
fs
pushf
cmp
jecxz
dec
dec
scas
push
pcmpeqb
mov
push
mov
cdq
inc
clc
neg
jg
mov
out
inc
inc
in
pop
and
and
mov
mov
or
cmc
adc
push
fdiv
inc
outs
movs
xor
sbb
dec
add
das
int3
mov
test
sbb
aad
aaa
call
pop
push
dec
xchg
push
clc
dec
xor
imul
ss
mov
sbb
sti
enter
and
mov
or
popa
hlt
adc
cmp
lds
out
mov
repnz
mov
gs
popa
call
aad
adc
push
or
mov
jp
dec
and
rcl
pushw
jbe
clc
xor
mov
fdivr
leave
imul
and
movs
lods
inc
cdq
and
and
push
pop
mov
mov
lock
movs
cmp
pop
lds
fild
push
(bad)
inc
and
dec
loop
xlat
push
cmp
push
addr16
inc
inc
or
lea
lods
mov
aaa
or
cmps
imul
cmps
hlt
adc
add
in
jmp
dec
add
test
xor
pop
test
loopne
push
cmp
sar
pop
xor
sti
sub
arpl
jae
test
in
xchg
adc
pop
out
mov
or
cmp
lahf
xor
or
fdivrp
scas
aam
out
pop
rcl
jbe
out
mov
inc
inc
jmp
cmp
ret
inc
mov
fwait
inc
add
xchg
call
mov
(bad)
mov
push
mov
push
les
loop
mov
sbb
ds
xor
and
push
je
test
pop
fld
jg
add
inc
mov
xchg
cmps
inc
jno
fidiv
iret
sbb
adc
je
xor
gs
mov
cs
ins
(bad)
fs
mov
sbb
repz
lahf
or
bound
and
and
in
pop
inc
sbb
fcmove
mov
std
rcl
(bad)
or
out
test
push
out
stos
and
inc
mov
js
daa
sub
and
jne
sahf
pop
leave
outs
shl
and
aas
outs
stc
xchg
jns
sub
test
xchg
dec
in
inc
fisttp
arpl
xchg
aas
xchg
cmps
pop
lea
cmp
int3
(bad)
es
cmc
loope
out
fisubr
adc
sbb
xor
jo
push
ja
mov
mov
xor
pop
add
add
adc
mov
mov
mov
inc
add
movs
xor
nop
(bad)
push
xchg
cli
mov
imul
pop
ror
fld
mov
mov
movs
idiv
jmp
imul
inc
xchg
mov
lds
push
pushf
xor
idiv
xor
cmp
fistp
shr
mov
iret
jg
adc
fmul
imul
push
fwait
mov
lods
jl
scas
dec
and
inc
out
pop
test
jge
pop
outs
cwde
xor
add
in
xor
cs
mov
nop
cs
loopne
js
scas
mov
sub
sti
fcmovb
fcmovbe
push
movs
xlat
into
test
dec
xchg
retf
pop
adc
ror
std
jns
outs
mov
ss
cmc
push
push
xor
fcmovb
jge
cmp
aaa
int3
fisttp
push
push
sub
sbb
inc
rol
test
mov
jbe
cwde
jge
dec
into
jecxz
inc
cmp
mov
sub
push
mov
sub
lods
rol
icebp
xchg
arpl
push
adc
pop
movs
jl
xchg
jb
mov
inc
(bad)
std
sub
push
xchg
push
ss
xchg
dec
bound
mov
gs
lahf
fld
mov
out
pusha
adc
(bad)
xchg
lea
sahf
sub
hlt
or
test
in
fst
and
cmp
xchg
mul
jmp
push
sub
scas
out
xor
lahf
pop
movs
int
inc
pop
ret
fdivr
fstp
pop
(bad)
mov
cld
xchg
imul
mov
stc
mov
bound
int
clc
sti
lods
cmps
aaa
jecxz
pop
xor
aam
sbb
retf
cwde
outs
(bad)
addps
std
cmps
imul
(bad)
addr16
mov
fadd
iret
or
jae
sbb
aam
scas
xchg
dec
pop
mov
add
or
fiadd
push
fsub
loop
popa
aam
popf
push
loop
cmps
sti
jle
ret
cwde
sar
repnz
add
adc
jg
(bad)
fisttp
loopne
push
lahf
imul
or
fdiv
xlat
cmp
mov
cmp
test
mov
ror
add
cs
xchg
fwait
sbb
sti
mov
dec
mov
fst
dec
mov
out
daa
in
in
enter
out
sub
sub
xor
xor
icebp
divps
jns
mov
pop
ror
addr16
movs
sub
lahf
pusha
out
adc
stc
(bad)
repz
pop
stos
pop
call
mov
lahf
aaa
mov
loope
mov
or
enter
test
outs
fstp
movs
pop
jbe
shl
push
sub
pop
push
and
loopne
pop
xor
xchg
ins
push
add
jge
dec
cmp
push
mov
dec
cmp
in
and
add
int
push
jmp
xor
out
stos
mov
pop
enter
das
jp
mov
sub
jbe
in
imul
mov
stos
or
out
(bad)
loope
les
fld
cmc
cwde
movs
popa
inc
xor
mov
add
xchg
nop
and
mov
push
adc
in
xchg
adc
and
adc
out
mov
dec
lods
jmp
out
int
stc
or
aaa
imul
int3
mov
mov
push
and
inc
or
arpl
add
cmp
mov
cmp
fistp
lods
pop
add
out
ss
mov
or
sbb
ficom
sub
inc
dec
pop
cmps
mov
dec
pusha
adc
icebp
sbb
hlt
jae
or
add
mov
dec
scas
ret
and
xor
dec
ins
or
jge
(bad)
movs
nop
out
xor
mov
pop
stos
xor
scas
pop
sbb
popa
ds
mov
lea
add
pop
in
and
in
hlt
hlt
jge
pop
aad
stos
mov
out
push
jg
stc
(bad)
xlat
mov
out
xchg
dec
cdq
mov
add
outs
cmp
mov
jge
aas
cmps
xor
call
cwde
push
loopne
aad
in
(bad)
(bad)
sub
add
sub
(bad)
add
loopne
and
icebp
mov
mov
mov
ret
and
add
mov
add
dec
fsub
cmc
inc
je
out
mov
cmp
xchg
dec
gs
rcl
sbb
stc
sub
stc
outs
repz
enter
inc
cs
mov
pop
inc
lock
cmp
ins
sub
xor
bound
xor
jns
lock
mov
adc
pop
jl
fwait
out
loope
and
icebp
adc
inc
dec
add
jecxz
fisttp
addr16
mov
cmc
xchg
jmp
sub
push
std
das
and
ins
jge
sub
jmp
icebp
test
mov
rcl
cmp
fwait
add
dec
adc
sub
or
enter
ins
mov
add
ror
ins
mov
stc
(bad)
lock
fcmovnb
mov
cmp
and
aas
dec
dec
push
stos
mov
sub
add
jmp
lock
test
aaa
cli
rcl
sub
adc
mov
test
test
add
add
aad
fs
imul
dec
or
and
retf
call
xor
retf
mov
shl
shr
inc
mov
push
mov
pop
add
mov
jmp
mov
jmp
repnz
pushf
sub
cmc
shr
cmps
pop
push
xchg
mov
mov
test
into
iret
int3
lods
adc
mov
push
in
shr
loop
mov
push
xchg
jbe
mov
inc
pop
rcl
xor
sbb
jle
sahf
pusha
cmc
xor
daa
das
stc
fs
aad
cld
jno
je
sbb
xor
xor
fadd
dec
push
add
push
fcomi
dec
ss
mov
scas
pushf
lds
das
lods
pushw
or
dec
push
or
adc
inc
dec
movs
dec
rol
pop
jl
and
ins
adc
adc
mov
ror
(bad)
ror
dec
xchg
push
in
pop
jl
retf
call
mov
gs
stc
popa
xlat
dec
xor
pop
inc
xchg
sbb
or
mov
pop
xchg
in
pop
fiadd
adc
xchg
mov
ja
xor
pop
sar
pop
mov
jmp
jle
adc
je
pop
aaa
div
sub
mov
push
xor
pop
push
hlt
pushf
inc
push
jno
aaa
and
dec
fucomip
pop
stos
cmp
test
ds
sti
and
test
mov
int
jecxz
and
iret
cmp
fcom
repz
inc
xor
push
adc
fldenv
mov
jmp
ins
and
push
pop
push
rcr
loopne
sti
fsubr
mov
adc
mov
add
in
sbb
push
popf
movs
rol
test
jl
cmp
xchg
sub
adc
jae
std
adc
(bad)
mov
mov
test
jge
ja
sub
test
adc
data16
and
add
adc
popa
fcmovb
mov
arpl
xchg
xor
nop
std
ss
pop
cmp
in
in
mov
adc
test
sbb
outs
(bad)
mov
jns
mov
sbb
cmc
lds
sub
xchg
aad
xor
xchg
int3
dec
push
je
in
int
mov
imul
jg
jb
jmp
test
cmps
inc
xchg
imul
test
and
xor
mov
sti
jg
out
fs
add
pusha
out
rol
pop
loop
xor
pusha
or
xchg
mov
jmp
cmp
ja
mov
cmps
push
les
popa
dec
ret
arpl
clc
jge
sbb
ror
(bad)
fnsave
loop
jl
cmp
xor
hlt
mov
pop
aas
xor
adc
call
leave
xchg
sbb
sbb
pop
add
inc
fisubr
xlat
neg
xchg
sub
shr
jno
sbb
xchg
cmp
pop
int
es
mov
xchg
jne
in
cwde
inc
mov
(bad)
jl
mov
fdivr
ja
mov
popf
and
mov
test
pop
inc
scas
stc
out
push
(bad)
and
push
fistp
pushf
lea
inc
scas
int
movs
cmp
(bad)
dec
xchg
out
cld
test
xor
sub
jo
or
test
inc
dec
inc
int3
mov
imul
adc
imul
mov
mov
sbb
cmp
sub
add
stos
test
or
or
aam
sub
add
test
xchg
mov
jae
test
leave
pop
dec
fst
and
inc
cs
inc
repnz
aad
packsswb
pop
scas
jecxz
(bad)
int
ret
cmp
push
mov
push
in
loop
es
mov
popf
mov
fs
scas
sub
jp
daa
enter
movs
aas
std
jl
(bad)
mov
fnstenv
fst
mov
pushfw
(bad)
and
push
xchg
movs
repnz
mov
loop
add
lea
ret
jno
(bad)
out
shl
xchg
cmp
ror
dec
xchg
mov
mov
popf
ss
cmp
mov
scas
sub
dec
jg
mov
(bad)
add
outs
add
jp
dec
mov
fwait
repz
mov
sub
ror
mov
test
jl
and
xlat
sar
ret
les
dec
dec
sub
push
xchg
dec
mov
(bad)
push
ins
dec
in
pop
(bad)
sub
mov
es
or
mov
pusha
pop
sbb
or
test
sub
or
cs
adc
fcomp
or
xor
stos
inc
add
adc
popa
dec
aas
push
inc
into
sub
mov
jb
scas
dec
cmp
es
jg
popf
push
mov
push
aas
sub
or
lods
cs
loopne
dec
loop
jge
(bad)
imul
daa
push
add
xlat
ret
lods
inc
cs
orps
add
aaa
jne
xor
stos
jmp
stos
mov
or
in
das
xlat
xor
sar
sbb
mov
dec
in
cli
arpl
mov
or
mov
adc
mov
mov
cli
push
call
popa
retf
loopne
(bad)
out
jmp
and
in
lods
inc
sbb
repnz
add
(bad)
fdivr
sub
ss
push
adc
sbb
iret
outs
lea
push
data16
sub
lock
jae
push
pusha
repz
inc
xor
and
mov
(bad)
lahf
push
in
and
jmp
dec
adc
jl
out
jne
push
jo
(bad)
sub
push
das
push
nop
sub
pop
stos
xchg
call
jg
push
retf
mov
hlt
pusha
ror
cdq
sbb
rcr
jle
cmc
pop
cmp
cmp
enter
cmp
xor
push
sub
repnz
push
xor
fcom
out
out
test
aad
pop
cld
outs
push
jl
mov
call
dec
mov
loopne
shr
xchg
nop
xchg
shl
pop
loopne
movs
gs
xchg
adc
push
popf
test
rcl
inc
mov
xchg
xchg
icebp
jb
bound
mov
mov
cmp
adc
adc
push
int
push
add
and
pop
inc
cwde
mov
shl
dec
pop
jge
nop
jns
inc
iret
sbb
or
outs
lods
cs
outs
push
ins
dec
push
mov
cmc
sbb
div
sbb
mov
or
loope
mov
enter
cmps
cmp
sbb
enter
out
mov
cmps
sahf
push
test
cwde
xchg
(bad)
sbb
out
pop
iret
stos
push
(bad)
inc
cmp
outs
les
sub
dec
rcr
add
lahf
mov
xchg
sbb
adc
push
mov
into
sbb
cmp
adc
repnz
in
pop
push
jmp
jmp
dec
push
dec
inc
lock
jae
addr16
fidivr
pop
xor
cmc
shr
pop
rcl
add
outs
jg
es
dec
aaa
out
adc
cmps
in
mov
or
sbb
xchg
pop
jno
mov
xor
mov
call
sbb
mov
mov
mov
(bad)
xchg
ja
sub
push
jns
cmp
lods
ss
mov
ja
push
fstp
pop
jg
cli
mov
inc
in
out
arpl
fst
push
jmp
sbb
fnstsw
addr16
bound
ins
popa
adc
cmovl
push
jmp
fs
sbb
dec
sti
or
scas
and
adc
fwait
pop
xlat
rol
mov
xor
mov
mov
push
outs
gs
in
mov
data16
movs
dec
(bad)
dec
and
retf
dec
xchg
ror
pusha
sub
clc
(bad)
enter
and
aam
mov
jge
xchg
pop
gs
pop
and
repnz
(bad)
aad
jne
jb
cdq
lods
or
or
lea
xchg
je
cmps
mov
inc
das
popf
cmp
jns
jecxz
mov
ficom
hlt
inc
xchg
fisub
and
inc
sub
mov
mov
inc
retf
jno
xchg
(bad)
(bad)
pop
sub
adc
sub
pop
out
fdiv
mov
xchg
xor
add
mov
jp
scas
das
pop
imul
addr16
jae
inc
sbb
movlps
pop
mov
xlat
push
sahf
cmp
add
xor
sub
pushf
inc
gs
jmp
test
sbb
pop
or
out
lods
scas
adc
mov
lds
sub
(bad)
dec
adc
adc
sbb
stos
xchg
add
ret
xchg
push
sahf
iret
sbb
sbb
sbb
pop
sahf
adc
mov
ss
or
fwait
dec
movs
cmc
out
xor
dec
adc
xchg
test
xchg
jmp
stos
fcomi
add
std
cmp
pop
aas
test
jns
sbb
dec
push
into
adc
icebp
sub
aaa
icebp
cli
pop
out
call
rol
jmp
jno
or
popf
mov
push
cmp
(bad)
scas
fimul
pop
stos
shl
or
scas
aam
jle
test
dec
fwait
adc
cmp
test
retf
and
xor
mov
enter
loope
cmp
movs
sub
test
inc
mov
(bad)
mov
or
mov
or
ror
(bad)
ret
jmp
call
xchg
xor
xor
push
data16
daa
or
ja
push
jb
repz
fisubr
mov
sbb
fcom
bound
xor
mov
push
jg
sub
jge
inc
sbb
sub
out
or
push
jp
sub
cdq
push
aas
sahf
(bad)
xchg
call
or
xor
mov
jmp
add
jb
sti
cmp
daa
push
add
jp
sti
sar
ret
retf
jnp
cmps
jo
dec
daa
inc
dec
add
das
sar
push
jecxz
jle
mov
fwait
outs
in
adc
mov
sbb
outs
outs
(bad)
fbstp
sub
dec
in
ins
jecxz
adc
and
lods
jnp
lods
jnp
push
adc
add
or
mov
int3
xchg
imul
push
jg
fidivr
repz
sbb
jge
xor
push
out
pop
add
test
mov
xchg
inc
retf
rcr
xor
xchg
neg
push
loopne
jecxz
dec
push
rol
lods
cwde
dec
imul
pushf
mov
arpl
dec
in
(bad)
data16
js
lods
pusha
add
dec
nop
mov
js
add
xor
ins
inc
cld
ins
sub
aad
lds
in
inc
fmul
fdiv
cmc
std
loope
fisttp
test
push
lahf
mov
adc
cmp
ins
cmps
jecxz
cdq
inc
mov
sti
pop
fisttp
mov
add
mov
out
adc
xchg
out
mov
cmp
sub
repz
inc
mov
jmp
ja
bound
popa
jl
adc
lods
jmp
jmp
fnstenv
icebp
test
fnsave
mov
rcr
fisub
inc
clc
scas
mov
mov
movs
std
jecxz
fdivr
dec
push
test
sbb
xchg
cmp
dec
pop
dec
xor
rcr
ins
xchg
ds
and
adc
mov
or
pushf
xchg
pop
int
xchg
mov
or
sbb
push
scas
jp
in
xchg
(bad)
cmps
mov
or
xchg
jmp
aas
mov
iret
fcmovb
xchg
or
dec
and
leave
pop
cmc
jl
leave
ficom
mov
dec
je
popf
sub
das
sub
in
pusha
das
adc
(bad)
(bad)
xor
daa
mov
dec
lea
ja
stos
xchg
loope
popa
push
adc
js
iret
shl
push
sbb
cmp
lock
mov
cmps
aad
sub
pop
cmp
mov
fadd
out
or
dec
fidivr
gs
mov
ror
pop
push
in
ja
daa
and
(bad)
push
adc
inc
std
fisttp
inc
pop
cs
fld
mov
retf
or
jnp
(bad)
pusha
popf
leave
sti
loope
sbb
ss
sub
add
adc
jge
outs
out
jno
lock
mov
add
(bad)
jp
dec
mov
xchg
ret
icebp
jmp
mov
jmp
jbe
cmps
imul
lods
mov
adc
das
es
cdq
out
add
js
jae
repz
call
out
pusha
push
fnstenv
or
inc
sbb
pop
adc
iret
lea
out
ret
cmp
retf
push
enter
adc
dec
mov
cmps
aam
push
or
mov
sub
pop
or
pop
xchg
cs
xor
pop
cmp
rcr
jl
in
pusha
push
add
rol
or
inc
jno
in
inc
lea
out
add
inc
inc
jae
adc
xchg
daa
xchg
and
mov
jnp
aam
retf
rcl
imul
pusha
cmps
lods
mov
scas
fs
mov
stc
and
push
push
sub
les
mov
or
cli
mov
pop
movs
or
inc
mov
into
mov
and
pop
dec
mov
push
or
mov
fild
sub
fwait
dec
jecxz
fist
inc
jo
push
sar
into
mov
int3
pop
outs
in
test
lock
mov
sbb
mov
adc
sbb
in
push
xlat
stos
add
cmp
je
into
xor
aam
fidivr
shl
lahf
inc
int
or
jmp
lea
cs
les
popf
fimul
cvtps2pd
pop
hlt
aam
jb
ret
dec
inc
stos
call
test
or
lahf
add
sbb
arpl
(bad)
aaa
or
lea
int
retf
lods
push
icebp
aad
mov
das
jne
movs
sbb
sub
add
xchg
mov
sbb
dec
jne
xor
pop
mov
pushf
pop
int3
add
sbb
jbe
icebp
xchg
outs
mov
jl
dec
std
arpl
(bad)
fdiv
and
js
xor
(bad)
xchg
gs
mov
sbb
add
cs
mov
inc
lahf
ins
sub
jmp
sti
push
push
sub
in
fisub
cdq
dec
sbb
imul
cs
(bad)
out
sub
mov
xchg
push
cmp
mov
push
xchg
addr16
popa
lds
mov
jmp
jbe
mov
jp
pop
repnz
lods
pop
les
mov
inc
mov
mov
rcl
fst
push
sub
adc
int3
rol
inc
sbb
pop
imul
inc
pop
lods
in
stos
xor
fmul
inc
add
jno
ret
sub
gs
add
add
dec
fucomi
xor
adc
cmp
dec
imul
mov
fwait
or
dec
add
rcl
dec
adc
data16
mov
adc
repz
(bad)
pop
cmp
loopne
and
pop
add
js
dec
mov
sbb
pushw
test
dec
cmp
fist
neg
je
sbb
mov
sar
adc
xchg
xlat
cld
pop
sbb
push
rcr
xchg
cli
pop
je
inc
xor
vmptrld
mov
jo
arpl
mov
pop
mov
(bad)
or
mov
shr
shl
(bad)
cli
retf
rcr
jle
dec
jmp
mov
cmps
pushf
and
ret
pop
mov
xchg
inc
or
adc
retf
repz
cmp
dec
out
pop
mul
or
mov
inc
test
cld
cmp
out
sbb
sub
mov
or
mov
cmp
mov
test
pop
es
sbb
shr
add
dec
mov
call
mov
jb
std
mov
and
ficom
fcmovnbe
out
xor
push
mov
aaa
jnp
sub
xchg
mov
cmp
push
(bad)
std
sbb
adc
fdiv
jp
add
bound
xlat
pusha
test
ds
mov
out
(bad)
(bad)
mov
inc
stc
adc
cmps
loope
ror
dec
inc
jae
jmp
jmp
(bad)
in
dec
jmp
jno
lods
mov
and
mov
pop
and
sub
(bad)
add
and
jb
jg
dec
daa
adc
cmps
outs
mov
mov
mov
shl
ins
hlt
push
sub
jecxz
fdivrp
lock
cwde
les
and
pop
pop
ins
cmp
jl
popf
shr
pop
sahf
xor
pop
stc
in
(bad)
jl
dec
sbb
icebp
dec
sub
xor
rcl
outs
cmc
adc
sbb
pop
retf
sub
loopne
ja
ja
inc
sub
pop
jne
je
(bad)
xchg
sbb
dec
adc
outs
call
hlt
push
inc
mov
scas
and
dec
test
fst
jno
mov
into
push
push
out
paddusw
fdiv
inc
in
fdiv
leave
clc
shl
add
cmp
in
aas
ins
imul
loope
cmp
cld
or
adc
sbb
ss
jl
push
push
ret
(bad)
push
int3
int3
adc
add
je
mov
aas
push
push
mov
outs
dec
xor
inc
jno
push
sub
pop
push
fwait
scas
sub
mov
jmp
push
std
test
int3
jno
jno
in
shl
retf
cmp
dec
bound
dec
es
dec
shr
call
mov
jbe
out
bound
or
mov
outs
and
cwde
call
lods
leave
fwait
jl
push
xchg
push
out
and
mov
sahf
mov
pop
loop
stos
pop
test
mov
aad
push
sbb
jg
std
sub
out
ja
dec
(bad)
in
jecxz
int3
inc
push
shr
or
lahf
jns
mov
ror
bound
imul
push
mov
das
cmp
jle
popa
adc
jno
mov
push
inc
out
es
mov
addr16
icebp
iret
adc
inc
ds
js
mov
pop
push
and
clc
xor
cs
cld
jmp
nop
sub
repz
jmp
dec
adc
shl
jecxz
jle
xchg
js
es
or
pop
jl
mov
pop
mov
cmp
imul
in
inc
lahf
setge
push
sub
std
add
add
ss
mov
add
inc
in
clc
fnstcw
cmps
dec
scas
jg
rcr
std
pushf
pop
pop
mov
imul
jmp
test
mov
mov
jo
neg
mov
mov
or
sub
cld
cli
jae
(bad)
std
js
inc
icebp
sub
(bad)
test
push
jbe
retf
enter
mov
pop
ja
pop
ret
push
imul
repz
jl
adc
int3
fcom
cmp
in
in
pop
lods
test
push
leave
mov
inc
ret
icebp
or
or
add
or
js
push
jle
dec
ds
jb
(bad)
xlat
fucom
retf
out
sahf
sub
cmps
jb
and
test
adc
mov
mov
xor
jp
shl
jg
xchg
lods
std
jmp
(bad)
shl
jne
in
dec
sar
sub
pop
iret
push
adc
sbb
out
pushf
ja
dec
stc
scas
mov
leave
sbb
pop
out
stos
ss
jbe
jmp
ror
dec
fisubr
dec
dec
jbe
ret
sbb
shr
(bad)
aam
je
clc
cmp
jo
jge
aas
scas
int3
xchg
in
icebp
pusha
cld
mov
xchg
add
or
in
in
movs
push
inc
cs
stos
mov
jbe
inc
arpl
cld
add
adc
dec
push
inc
fwait
mov
stos
mov
call
dec
fwait
xchg
mov
dec
dec
jmp
cmp
push
xor
jg
gs
icebp
das
or
push
push
mov
mov
ins
xchg
stos
adc
fst
imul
lods
je
(bad)
rol
adc
mov
mov
mov
and
mov
loopne
out
push
fdivr
ins
sar
mov
sbb
xchg
lds
jl
mov
lea
lods
icebp
pop
pusha
in
mov
adc
shr
fmul
setge
adc
inc
add
jo
outs
sub
out
test
les
mov
daa
mov
in
or
pop
cmp
sbb
jns
adc
pop
scas
lahf
test
adc
nop
dec
push
mov
in
add
jbe
dec
cmp
clts
jae
dec
stos
adc
or
mov
icebp
ss
xor
push
push
cld
and
scas
ror
inc
mov
scas
push
sub
push
sbb
rol
(bad)
mov
mov
sub
inc
or
or
in
mov
xchg
push
mov
daa
scas
sub
dec
and
stos
inc
cmp
jmp
push
mov
adc
and
push
daa
push
xchg
das
mov
cmp
ret
or
mov
stos
jno
test
sbb
fld
(bad)
out
addr16
ret
or
into
mov
call
inc
dec
ret
inc
adc
fisttp
push
jo
pushf
mov
sbb
lods
sub
push
cwde
ins
xor
push
mov
pop
add
push
pop
loopne
mov
in
fwait
jno
and
js
jmp
out
or
cwde
std
clc
and
jecxz
test
pop
aam
fnstcw
push
dec
test
cmp
ss
xchg
xchg
cmp
mov
scas
in
clc
loop
test
(bad)
arpl
and
into
test
(bad)
into
lods
stos
mov
cli
jb
dec
loopne
or
in
stos
sub
std
int
sti
and
xchg
nop
fstp
adc
fsub
sar
pop
or
ret
inc
jmp
call
movs
sbb
out
in
inc
in
je
(bad)
aaa
call
mov
enter
shr
add
push
enter
mov
adc
in
push
add
pushf
pop
stos
inc
sbb
popa
adc
lds
shr
jo
retf
jle
dec
jmp
inc
lahf
pop
adc
in
rcr
add
lods
stos
and
arpl
pop
jo
inc
jb
(bad)
in
mov
in
test
lahf
jb
mov
leave
icebp
and
cmps
int3
not
retf
pop
aas
mov
lods
in
cs
lahf
mov
mov
xchg
rcr
sub
fwait
in
aaa
test
iret
add
dec
cmp
ss
add
dec
inc
fisttp
ja
call
mov
pop
cmp
mov
adc
add
xchg
loop
sub
loop
pop
outs
jne
push
sub
jmp
push
fsub
mov
push
ror
sahf
ficom
repnz
pusha
cli
jnp
arpl
paddd
add
sbb
and
out
ins
cld
test
adc
ja
cmp
pop
cld
push
inc
and
pop
or
mov
idiv
mov
test
push
adc
push
enter
test
lods
push
mov
cmps
and
mov
xchg
or
xlat
sbb
int
cld
push
popf
fisubr
cli
ja
mov
mov
and
in
mov
dec
sbb
fadd
out
inc
retf
xchg
push
retf
xor
push
mov
shl
pop
adc
and
dec
mov
push
cmps
dec
mov
stc
jmp
pop
push
dec
cmp
retf
lahf
js
xchg
inc
jb
xchg
shr
int3
leave
add
in
or
xor
jnp
lock
xor
fwait
iret
fisub
div
data16
fimul
cld
ret
xor
mov
add
mov
add
(bad)
push
ins
cmp
mov
xchg
nop
mov
xchg
or
rcr
inc
fdiv
inc
out
mov
pop
outs
adc
pop
comiss
fdivr
pop
(bad)
ror
push
test
cmp
jecxz
adc
aad
das
push
dec
in
push
leave
movs
fld
std
jl
dec
test
mov
push
sub
push
mov
dec
add
in
loope
popf
cmp
push
adc
or
das
out
sub
or
sar
xchg
mov
mov
arpl
jp
aam
sub
fsubr
inc
cmp
mov
js
mov
sbb
add
pop
or
push
jo
mov
xor
and
test
xchg
mov
or
rol
cmp
inc
sub
int3
ret
inc
or
add
xchg
jno
les
out
test
inc
cmp
repz
lahf
xchg
and
imul
push
cwde
jo
mov
(bad)
or
mov
mov
xchg
xchg
std
data16
pop
out
add
into
aam
test
hlt
call
stos
dec
inc
into
(bad)
add
inc
fcomp
cwde
add
js
pop
popa
dec
rcl
aam
fwait
mov
sbb
pop
xchg
xlat
or
add
pop
les
repz
(bad)
in
add
enter
imul
mov
add
xor
fwait
gs
les
nop
push
hlt
scas
cmps
jmp
and
shl
push
mov
push
popf
dec
or
fcmovne
in
mov
in
scas
(bad)
test
je
into
test
es
jne
retf
push
and
dec
enter
out
xor
and
retf
sbb
cmp
cmp
pop
add
mov
push
mov
dec
or
mov
mov
mov
jg
and
jbe
test
bound
(bad)
adc
or
test
fisub
adc
lea
and
repz
pop
or
add
xchg
scas
(bad)
mov
retf
rcl
xchg
pop
adc
push
jmp
setp
pop
stos
ds
aam
adc
imul
fcomip
sub
jne
test
pop
push
jns
pop
fwait
add
sub
mov
inc
fidiv
inc
out
or
bound
add
fnstsw
movs
jle
dec
scas
lods
or
mov
mov
not
push
out
fisttp
push
out
xchg
jg
test
ins
mov
jae
push
cmp
ins
fst
retf
ds
jmp
enter
rcl
mov
cmps
sub
loope
xchg
test
inc
repnz
(bad)
(bad)
gs
cs
outs
adc
pop
xlat
jle
jecxz
cli
push
sub
xor
and
xor
lahf
dec
mov
push
add
ss
sub
ja
cli
inc
mov
xchg
xchg
cmp
cmp
das
(bad)
imul
mov
into
cmps
mov
shr
leave
mov
or
adc
mov
sbb
jecxz
mov
adc
out
stos
xchg
add
xchg
sbb
(bad)
rcl
push
aam
mov
arpl
ins
jmp
ficom
add
mov
and
pop
pop
enter
mov
pop
dec
cld
dec
inc
xor
bound
push
mov
xchg
mov
aam
or
idiv
adc
ja
and
sub
push
frstor
mov
dec
and
aas
addr16
mov
retf
xor
mov
fcomp
fisub
jno
outs
dec
dec
dec
mov
dec
test
popa
iret
and
jp
out
push
mov
aad
inc
jb
mov
shr
ds
jmp
and
xchg
imul
retf
movs
fcom
out
add
dec
sub
and
add
pop
icebp
(bad)
xchg
cmp
inc
hlt
mov
or
and
inc
leave
jae
jmp
ds
add
xchg
ins
xchg
inc
pop
mov
sbb
clc
lods
xchg
shl
(bad)
and
aaa
test
sbb
arpl
ins
inc
dec
mov
mov
imul
sub
xlat
pop
pop
retf
push
sub
pusha
mov
push
shr
jns
mov
pushf
ror
int
dec
out
nop
or
xor
xchg
push
xor
cmc
add
mov
into
pop
or
dec
iret
xor
adc
xchg
xchg
push
dec
adc
pop
cwde
loop
cmp
jmp
stc
push
xor
arpl
jns
std
or
push
mov
dec
sub
mov
aad
jne
daa
dec
dec
inc
xlat
pop
pop
fsub
xchg
jne
jecxz
data16
inc
jne
push
fs
pop
and
rcl
mov
sbb
cmps
iret
mov
aas
loop
popf
add
push
ss
jnp
das
dec
xchg
or
inc
sbb
and
xor
inc
(bad)
push
pop
or
popf
stos
loopne
out
mov
jmp
jno
not
xchg
retf
jo
jb
add
mov
(bad)
mov
arpl
aaa
out
out
push
aad
jb
dec
dec
jecxz
mov
(bad)
cwde
sub
jne
imul
les
dec
sti
mov
push
xor
and
icebp
or
dec
sbb
scas
movs
mov
ins
mov
je
mov
mov
xchg
mov
lds
enter
sar
or
mov
adc
cmc
div
aam
jns
sub
xchg
jbe
out
xchg
in
mov
push
push
cmp
popf
stos
in
mov
movs
sub
pop
cdq
int3
adc
scas
aas
bound
fldln2
jge
nop
jns
and
jns
dec
cmp
rcl
iret
pop
push
ror
sbb
fiadd
cmps
cmp
imul
add
add
inc
add
out
cdq
push
sub
mov
ret
(bad)
cwde
pop
inc
jmp
imul
xchg
pusha
xchg
clc
xor
mov
xchg
or
ja
lds
lahf
ds
push
inc
push
pop
pusha
push
les
xor
rol
inc
push
cdq
call
int3
in
xor
ins
inc
mov
adc
cs
fwait
test
pushf
add
mov
add
xor
pop
sub
int
pop
inc
jb
xchg
and
rol
adc
pop
adc
mov
inc
call
add
add
fdivp
dec
jmp
mov
fld
shr
xchg
sub
push
xor
cmp
and
(bad)
aad
cli
pop
inc
loop
inc
fs
ja
dec
cmp
ja
das
aas
(bad)
pop
mov
mov
jmp
popa
scas
or
mov
loopne
inc
imul
frstor
sbb
neg
enter
sbb
test
test
sbb
into
fnclex
mov
pop
ss
ins
pusha
ins
xchg
inc
cmps
les
ss
mov
mov
fidiv
and
or
lods
lods
sub
test
add
(bad)
les
lock
dec
les
cli
loop
mov
sti
xchg
and
push
into
fidivr
not
or
and
xchg
inc
fs
push
or
xchg
push
cmp
or
arpl
imul
mov
in
(bad)
mov
inc
xor
push
pop
jmp
inc
gs
jecxz
mov
push
das
inc
addr16
mov
adc
iret
enter
inc
cdq
mov
loop
pop
nop
pop
or
out
rol
add
xchg
push
jne
test
test
fiadd
outs
inc
adc
in
mov
sbb
inc
and
les
call
or
test
scas
cmpxchg
push
or
stos
inc
push
cmp
(bad)
scas
mov
js
and
sub
mov
repz
cmp
shl
inc
xor
pop
mov
mov
pop
sub
stos
dec
cmp
push
in
lods
in
aaa
jnp
inc
sub
int3
mov
push
(bad)
add
in
push
stos
bound
mov
add
jg
pop
aaa
popf
mov
and
mov
sbb
rol
cli
cmp
rcl
push
pop
pop
pop
xor
xchg
and
jnp
into
data16
mov
and
jae
fdiv
pop
jno
sbb
sub
xor
jecxz
addr16
jle
inc
pop
push
mov
adc
dec
jmp
mov
xor
out
out
xchg
and
mov
hlt
pop
push
and
ja
loop
sub
lahf
xchg
push
clc
and
shl
mov
add
jg
mov
pop
pop
mov
sbb
stc
xor
leave
outs
jl
outs
lods
aad
and
adc
push
in
movs
in
inc
shr
nop
js
cmp
and
adc
mov
aaa
test
(bad)
cs
cmp
pop
stc
imul
xchg
mov
cwde
fst
or
sub
xchg
outs
pop
lods
xor
test
push
div
xor
repz
cmp
clc
gs
shl
mov
mov
mov
mov
in
loope
(bad)
cmc
and
xor
(bad)
mov
outs
loop
adc
xor
add
xchg
pop
aas
pop
dec
push
ss
test
adc
sbb
mov
pusha
push
stc
out
outs
mov
dec
outs
cmp
shl
jecxz
adc
stc
mov
mov
call
std
add
iret
(bad)
std
or
xchg
es
mov
mov
lds
inc
mov
mov
outs
xor
mov
loope
xor
cmp
repz
lods
cwde
xlat
xor
aad
inc
ret
jecxz
ret
outs
pop
cld
retf
cli
mov
inc
ja
shr
add
add
shl
add
repz
fcomp
push
sbb
add
pop
(bad)
fidiv
xor
jno
mov
gs
mov
push
pop
cmp
(bad)
outs
add
call
pop
xor
repnz
mov
pusha
mov
cmp
xchg
mov
sbb
add
inc
lock
retf
cs
mov
dec
std
mov
pop
cmp
cmp
fwait
sub
mov
or
nop
lock
scas
mov
adc
xchg
ror
add
sti
inc
popf
je
mov
aas
cmp
sbb
imul
loope
(bad)
lds
jg
aad
cmp
sub
stc
sbb
mov
or
add
les
jmp
ins
cmc
xor
std
jge
repz
mov
rol
mov
out
bound
daa
shl
jae
push
test
cli
add
adc
xchg
jbe
jnp
sahf
aas
loope
push
mov
mov
jle
out
add
jg
xor
mov
test
fcom
fisub
jl
pop
cmps
clc
mov
and
adc
(bad)
pop
cmp
repz
push
ins
pop
inc
and
lahf
mov
jecxz
pop
cld
fldenv
mov
mov
adc
push
cmp
sub
js
in
add
pop
mov
adc
mov
sbb
jle
iret
mov
push
pop
and
lds
push
pusha
movs
int
mov
stc
fisub
test
pop
aam
mov
xchg
mov
sub
(bad)
mov
call
imul
inc
xchg
addr16
test
cmp
loopne
jae
movs
pop
add
lahf
sub
adc
mov
enter
push
fld
mov
lods
jmp
sbb
scas
cmp
(bad)
mov
sub
clc
retf
xor
pop
xor
daa
into
mov
pop
fistp
(bad)
jecxz
rcl
pushf
xchg
push
out
mov
data16
outs
cdq
loop
aam
pusha
dec
out
unpcklps
add
mov
xchg
cmps
out
test
dec
test
sub
aas
mov
mov
or
popa
sub
retf
icebp
sub
adc
jge
data16
(bad)
(bad)
push
add
test
repz
jl
mov
ficomp
int3
dec
add
jbe
lock
mov
xchg
out
pop
outs
jo
mov
stos
dec
dec
push
or
or
sub
in
in
xchg
into
stos
clc
std
test
ret
in
movs
les
cmp
enter
sti
arpl
in
inc
pop
inc
jbe
loop
fisubr
add
dec
xor
mov
pop
xor
scas
in
sahf
xor
mov
or
mov
jl
test
ds
mov
push
push
outs
lock
test
xor
sbb
mov
mov
jecxz
fcom
ds
les
pop
cmps
fst
fist
or
lds
fsub
pop
pop
or
repnz
ins
mov
outs
mov
mov
push
push
out
retf
xchg
sub
push
mov
cmp
dec
inc
enter
inc
(bad)
jmp
push
xchg
fs
cs
jo
inc
mov
sub
fisubr
mov
jl
enter
mov
popf
data16
push
out
adc
push
stc
mov
cmp
pop
addr16
mov
sbb
sub
xor
jecxz
cmp
pop
cs
frstor
ret
add
xlat
pop
ss
mov
dec
cmp
mov
popa
pop
xchg
jg
and
into
and
mov
cld
sti
test
mov
mov
out
jb
sahf
sbb
je
push
and
xor
inc
bswap
xchg
adc
fucomip
test
xchg
in
sbb
cmp
fstp
jbe
push
jbe
cmps
lods
imul
aam
pusha
test
adc
ja
and
stc
les
mov
cdq
jmp
fsub
retf
shl
add
jns
lea
mov
inc
pop
(bad)
int
jne
fiadd
cmps
movs
cdq
sub
stos
sub
jg
int
gs
test
cmc
and
sahf
sub
inc
aaa
xchg
inc
mov
mov
adc
cmp
ins
inc
fimul
aam
mov
out
addr16
or
sbb
mov
mov
adc
mov
out
sbb
pop
and
clc
mov
es
sub
jnp
fisub
xchg
or
movs
xchg
mov
pop
or
outs
dec
mov
or
int3
fcomp
std
jle
cli
mov
mov
cmp
xchg
and
jge
imul
repz
dec
add
sub
aam
(bad)
fwait
out
dec
jmp
aas
push
xchg
cmp
repz
fistp
pop
stos
xor
push
xchg
sub
push
aas
outs
mov
dec
leave
pop
mov
mov
sahf
lds
push
fsub
jg
test
pop
pop
jnp
jno
stos
loope
mov
jp
in
add
mov
push
movs
ret
ins
xchg
ds
xlat
push
push
sbb
and
enter
fidiv
int3
or
dec
sub
inc
sbb
in
mov
test
push
test
mov
stos
jns
mov
jno
int3
into
in
neg
cdq
and
test
mov
mov
outs
leave
nop
iret
cmp
int
or
add
int
and
xor
div
test
addr16
(bad)
cmps
in
or
rol
pop
loop
xor
(bad)
popa
adc
mov
xchg
push
jno
and
ret
push
adc
outs
jns
jmp
das
mov
dec
enter
arpl
dec
push
nop
add
or
sbb
xchg
leave
mov
add
movs
call
pushf
in
test
enter
dec
daa
loopne
iret
mov
outs
lahf
stos
pop
sbb
sub
xor
sub
sub
jg
lds
clc
xchg
sub
nop
push
cmp
stos
pop
scas
xchg
sbb
mov
or
scas
pusha
cli
sahf
and
repz
or
bound
test
ds
add
sub
pop
inc
add
or
int3
adc
and
cwde
cs
push
push
sar
xlat
pop
je
xchg
mov
xor
add
sbb
push
addr16
jg
push
ja
inc
inc
movs
in
fld1
jbe
jge
ret
in
sti
jb
(bad)
rcl
add
adc
(bad)
ret
push
push
cdq
mov
nop
jmp
(bad)
mov
push
cli
aas
dec
pop
sub
jno
mov
dec
pop
or
imul
clc
add
les
pop
ins
out
(bad)
out
outs
xchg
into
mov
sub
into
pop
mov
push
adc
mov
adc
pop
cmps
pop
(bad)
std
cmp
ficom
popf
loop
mov
fisub
dec
cmps
push
ss
dec
mov
inc
movs
ins
dec
fucomi
xor
out
or
mov
mov
cmp
lods
sub
mov
lock
adc
retf
call
pop
mov
fld
fwait
pop
gs
ins
or
(bad)
dec
stc
(bad)
inc
ins
retf
sub
sbb
jns
sub
cli
loope
mov
xor
ret
sub
adc
mov
and
popa
not
pop
mov
enter
std
loop
fcom
call
movs
dec
icebp
js
sti
cmp
xchg
scas
dec
jne
push
sar
xlat
gs
in
je
cs
and
xchg
jecxz
ficomp
sub
xor
push
(bad)
cmc
imul
sbb
add
call
pop
sub
(bad)
frstor
mov
xor
mov
mov
inc
xchg
adc
into
repz
mov
ficom
xor
int3
mov
push
(bad)
lds
xchg
fcmovnbe
mov
pop
or
mov
or
out
jb
fstp
popa
std
pop
into
les
loope
adc
jg
mov
push
xchg
(bad)
mov
sbb
xor
je
and
sbb
mov
les
xchg
jg
jg
int
sahf
mov
jge
int
(bad)
sbb
mov
mov
in
js
mov
sbb
or
and
movs
ret
addr16
push
test
add
sub
pop
int
test
mov
retf
les
jmp
data16
dec
mov
loope
dec
inc
dec
ret
dec
in
neg
sbb
inc
mov
enter
inc
imul
add
test
jno
mov
icebp
fs
fcmovnu
call
into
sub
add
mov
xlat
(bad)
dec
test
lahf
sbb
loopne
mov
sar
cs
fnstcw
or
lods
or
inc
(bad)
frstor
inc
aam
(bad)
enter
jecxz
jecxz
xchg
jp
jnp
or
jb
ja
pop
fldenv
pop
sti
mov
fdivr
cli
cdq
cmp
xchg
push
push
jp
into
push
mov
mov
sub
xor
fld
mov
jb
std
adc
mov
nop
int
fcom
pop
cmps
jnp
imul
mov
lods
test
adc
enter
ss
pop
lahf
inc
cli
popa
adc
movs
mov
in
xchg
lods
xor
xchg
icebp
test
(bad)
mov
jmp
jmp
inc
xor
mov
lods
movs
add
imul
dec
les
imul
shl
shl
das
loopne
(bad)
adc
and
sub
inc
adc
ret
mov
mov
dec
sbb
adc
(bad)
loopne
ja
dec
cmp
sub
mov
jne
retf
in
push
mov
and
repnz
push
mov
mov
aaa
inc
mov
adc
inc
inc
es
in
rol
shl
pusha
dec
jmp
jp
mov
hlt
or
mov
repnz
(bad)
jo
xchg
js
cmp
ror
lahf
imul
xor
fdivr
in
mov
hlt
sbb
cmp
sbb
and
mov
add
or
stc
cdq
mov
sub
jo
loop
xchg
push
ror
sbb
jno
jae
lock
xchg
pop
das
push
xchg
js
(bad)
rcr
cmp
inc
push
in
mov
ret
sbb
imul
pop
xor
xor
stc
shl
cld
lds
mov
or
sbb
cmp
or
ja
(bad)
icebp
lds
(bad)
fmul
(bad)
add
jmp
xchg
and
(bad)
je
mov
or
call
pop
loope
popa
test
inc
mov
popf
mov
retf
movs
pop
inc
mov
sahf
sbb
sti
jmp
cmp
cmp
retf
in
stos
or
xor
out
jecxz
jns
jl
shr
sbb
push
daa
(bad)
into
cdq
jg
(bad)
jge
and
pop
pop
jecxz
jle
cmp
dec
rep
div
push
in
in
dec
dec
jmp
aaa
retf
lods
and
push
inc
arpl
ja
movs
outs
mov
mov
cmp
fcomp
in
push
movs
lods
ffreep
push
in
jle
jge
ins
jl
and
jnp
push
cmc
dec
jecxz
mov
inc
mov
mov
jno
loope
lods
cld
push
inc
fmul
xchg
pandn
push
and
mov
pop
sbb
outs
dec
js
jno
inc
xor
dec
ret
push
sbb
int3
(bad)
out
int
dec
sub
cmp
jb
inc
jecxz
add
jne
and
lds
jmp
push
jg
pop
jo
(bad)
cli
in
add
in
call
lods
nop
test
cmp
fcomp
add
lods
test
retf
mov
inc
jg
sbb
repnz
ss
stos
push
dec
jns
sub
pop
adc
jecxz
inc
jb
je
test
imul
not
jb
xor
mov
in
fwait
mov
pop
test
mov
dec
xchg
cmc
or
mov
mov
xor
adc
mov
push
mov
stc
dec
adc
push
in
sbb
ja
imul
inc
and
mov
shl
xchg
xor
lahf
pop
nop
fsub
sbb
leave
mov
movs
mov
nop
jmp
sub
les
pop
sub
mov
jno
xor
clc
add
mov
inc
fimul
cmp
cmp
loop
lods
imul
stos
stos
dec
push
sbb
ret
add
int
xor
hlt
add
xor
push
xor
retf
imul
add
shl
clc
mul
test
xchg
cs
retf
jbe
xchg
and
idiv
add
sti
jbe
sub
repnz
sub
mov
fdivr
mov
push
fst
das
pop
mov
(bad)
pusha
push
jp
mov
movs
stos
mov
xlat
cmp
cmps
mov
ds
aaa
js
std
add
cmps
mov
fsubr
mov
sbb
outs
shl
pop
cmc
fld
lods
jge
pop
in
ja
xor
in
sub
push
mov
inc
int3
jns
mov
sub
pusha
and
stos
test
xor
pop
xor
(bad)
sub
es
push
mov
cmps
cmp
adc
int
push
push
inc
lea
das
sub
aaa
mov
dec
dec
lods
jno
xor
popa
inc
jle
outs
pop
cmp
pop
or
mov
jle
jmp
out
or
push
mov
push
dec
pushf
or
mov
es
retf
test
push
dec
stc
out
xor
(bad)
adc
or
jb
popa
pusha
push
xchg
enter
jmp
test
(bad)
in
and
das
jecxz
push
cmc
mov
mov
cmc
(bad)
call
xchg
mov
push
sub
mov
cs
int
mov
push
cmp
push
inc
mov
addr16
push
ret
cdq
xor
dec
xchg
pop
inc
aad
jno
push
jbe
xchg
pop
jo
mov
fwait
ret
add
push
inc
inc
inc
(bad)
or
push
clc
cld
(bad)
(bad)
daa
cwde
aaa
jmp
das
cmp
mov
mov
xchg
stos
mov
sar
pop
push
cmp
sar
xchg
retf
adc
mov
outs
sbb
pop
loop
out
sbb
shr
int
dec
add
push
cld
mov
lods
in
stos
aaa
imul
lods
add
test
mov
hlt
jnp
inc
push
inc
ins
jno
out
dec
shl
jns
or
push
(bad)
push
fwait
loop
arpl
add
outs
sbb
lock
daa
out
jno
aaa
push
adc
mov
or
mul
sub
push
sub
pop
in
ins
ja
xchg
or
adc
or
pop
push
hlt
mov
stos
loope
adc
dec
mov
jp
stos
in
mov
mov
test
les
pop
aas
mov
loopne
inc
data16
pop
mov
aad
sar
pop
xchg
mov
nop
add
jg
je
sub
in
movs
push
mov
or
mov
stos
and
xor
lahf
not
push
cld
ja
jge
(bad)
pop
lahf
jae
or
pop
enter
or
(bad)
ficomp
inc
fcomip
push
cdq
mov
bound
sub
and
outs
lock
push
jge
lods
fnstcw
call
shr
jecxz
fcomp
sbb
xor
sar
lahf
sbb
aas
sub
jecxz
pop
mov
xchg
xchg
jmp
inc
cmp
jbe
cli
jns
div
daa
jecxz
lahf
repz
ins
iret
xchg
sbb
pop
int
ss
sbb
mov
push
cmp
jns
mov
scas
mov
jl
inc
mov
in
daa
retf
push
sub
fwait
dec
pop
or
mov
push
arpl
ror
pop
add
xor
mov
iret
rcr
cwde
leave
cmp
in
das
jmp
int3
leave
mov
stc
in
sbb
movs
call
jp
add
ins
mov
lahf
push
dec
out
repz
mov
int3
adc
ficomp
xchg
pop
mov
lock
cmps
int
addr16
cld
dec
or
retf
add
movs
adc
repnz
jle
and
scas
leave
dec
and
or
scas
inc
shr
fwait
sbb
cmc
imul
outs
stc
mov
int3
int3
add
xor
stos
inc
sbb
loopne
std
push
jmp
sbb
lock
int3
mov
mov
popf
pop
fcomp
or
pop
imul
dec
add
stos
or
mov
jae
dec
xchg
and
sahf
mov
jmp
shr
or
cmp
jmp
sbb
addr16
bound
mov
fs
setp
adc
not
lods
inc
pop
aas
arpl
or
mov
lock
mov
pop
mov
add
cdq
jb
sub
push
xor
enter
sub
add
inc
jbe
xchg
xchg
les
in
dec
xor
cmps
ss
mov
imul
outs
xchg
xchg
inc
int3
dec
cmp
jle
sub
dec
lock
jb
jmp
retf
scas
out
in
fstp
xchg
dec
xchg
and
pand
in
lock
data16
inc
adc
mov
add
je
cld
and
mov
cmp
loop
pusha
sbb
add
fs
popf
adc
(bad)
xchg
add
inc
adc
int
jp
test
ja
or
cmp
sbb
cmp
rol
pop
mov
sub
push
call
test
cmc
repz
push
cmp
arpl
sub
nop
xor
sub
popf
test
or
(bad)
ficomp
ret
ins
stc
xchg
stc
mov
xchg
int
lds
(bad)
retf
hlt
push
scas
in
cmp
into
outs
dec
sbb
cld
aam
sub
adc
xchg
add
jnp
jb
loop
and
leave
call
adc
jp
pop
loopne
xor
sahf
mov
jo
test
loopne
ret
sub
retf
movs
push
xlat
loope
xchg
stc
loopne
fild
hlt
adc
mov
arpl
and
pop
movs
xor
or
mov
and
int3
dec
sbb
inc
push
mov
xor
dec
push
cmp
sbb
jae
fwait
mov
push
ret
and
mov
sub
call
or
xor
add
jns
and
out
pop
mov
cdq
mov
aam
dec
cs
or
js
jae
mov
out
cmps
shl
imul
in
jmp
xor
jp
add
and
movmskps
dec
and
jg
fs
pop
pop
out
sahf
movs
imul
pop
movs
pop
cmp
(bad)
popf
sbb
mov
(bad)
push
and
ret
sbb
retf
push
repnz
mov
sub
dec
adc
fwait
popa
mov
and
aad
int3
test
cmps
or
call
inc
cmp
xchg
in
aaa
cmp
stc
fwait
inc
mov
iret
push
add
push
pop
dec
ss
mov
js
loopne
out
and
sub
sti
mov
push
mov
lods
push
cmc
pop
mov
push
cmp
jmp
jmp
lahf
dec
shl
call
add
xchg
inc
arpl
icebp
int
push
push
cmc
repnz
push
(bad)
les
dec
cmps
retf
jns
data16
xchg
bound
pop
mov
retf
xchg
xor
push
pop
pushf
leave
or
scas
je
mov
das
jnp
mov
sub
sbb
jbe
push
push
hlt
(bad)
scas
scas
mov
clc
inc
jnp
add
sub
mov
outs
adc
push
mov
cmp
xchg
les
retf
(bad)
out
adc
test
ror
stos
fld
shl
or
sbb
mov
sbb
ret
jge
mov
push
push
jmp
ds
movs
iret
popf
xchg
jbe
xor
nop
adc
imul
aam
sub
mov
mov
add
and
ret
aas
gs
ror
pop
add
ret
mov
in
push
mov
lahf
test
sub
repnz
jo
pop
jecxz
add
xor
adc
xor
addr16
xor
cmp
add
fwait
sbb
int
retf
scas
cli
pushf
sbb
movs
in
scas
add
mov
fcmovu
xchg
sbb
sub
mov
lock
mov
jnp
jp
out
fsubr
scas
mov
jge
jg
movs
shr
mov
sbb
je
and
cld
enter
dec
ds
fdiv
jmp
push
loopne
mov
push
jne
jb
push
or
dec
sub
cld
adc
pop
sbb
cmps
(bad)
mov
jge
stc
bound
mov
ss
leave
adc
ror
iret
xchg
mov
jo
je
adc
outs
enter
mov
sbb
and
xor
mov
call
dec
xchg
adc
mov
(bad)
stos
sbb
out
call
imul
xchg
lahf
retf
sti
sbb
or
imul
pop
das
jnp
call
mov
call
adc
int
pop
out
loopne
and
cmc
cwde
retf
xchg
jbe
or
xchg
rol
stos
mov
push
pushf
in
lock
in
dec
jne
or
popf
mov
mov
jbe
test
push
outs
test
les
in
xchg
mov
aaa
in
mov
jb
ss
mov
push
sbb
cwde
daa
jmp
retf
adc
adc
or
mov
test
mov
cmp
sbb
int
repnz
ret
sar
scas
push
pushf
nop
arpl
pop
or
dec
jecxz
dec
cmps
gs
mov
loopne
cmovno
pushf
aad
cmp
out
je
xchg
sbb
jno
lods
(bad)
imul
mov
call
cmps
adc
cli
cmp
dec
jae
dec
xchg
cmc
cmp
rol
mov
test
dec
ss
in
scas
mov
dec
mov
jp
(bad)
aam
dec
sti
cmp
cmps
jg
ret
or
xor
(bad)
ror
jmp
gs
jae
adc
in
retf
and
sbb
push
add
cmp
xchg
push
scas
add
dec
enter
or
sub
bound
mov
sbb
fadd
test
sub
fadd
push
icebp
js
adc
shr
pop
adc
xor
jg
push
add
dec
pop
dec
cmp
push
neg
pop
in
ffree
hlt
xor
adc
cmp
leave
sbb
mov
ffree
jl
outs
out
daa
outs
test
and
pusha
pop
fisub
daa
jns
repnz
push
lock
lahf
popf
sub
inc
stc
popf
jp
test
adc
ins
adc
es
popa
pop
out
sbb
in
jle
int
fcom
cmp
dec
enter
inc
dec
jo
jge
outs
mov
imul
add
aaa
jo
stos
enter
aam
je
jp
fsubr
xchg
int
enter
pushf
(bad)
mov
jecxz
adc
sub
cdq
cmps
hlt
cdq
outs
pop
lahf
inc
mov
or
data16
ja
lods
(bad)
call
popa
enter
repnz
push
in
mov
xchg
jmp
out
in
(bad)
icebp
(bad)
(bad)
in
(bad)
mov
je
pushf
adc
js
and
int
(bad)
jae
mov
push
mov
mov
sar
cmc
sub
aaa
pop
dec
pop
and
daa
int
nop
push
pop
xlat
sub
mov
(bad)
stos
xlat
repnz
mov
mov
and
mov
jbe
push
outs
jg
dec
out
and
xchg
sbb
mov
pop
ins
(bad)
mov
es
rcr
adc
and
sahf
ja
std
in
pop
and
mov
cdq
jae
or
retf
xor
xchg
(bad)
leave
cli
add
mov
mov
pop
shl
mov
popa
pop
repz
jmp
dec
mov
pop
mul
into
ins
daa
lea
xor
(bad)
lea
sub
daa
(bad)
xor
add
pusha
test
in
cmc
aad
sbb
sub
popf
fidiv
or
xchg
repz
dec
xchg
shl
sti
add
scas
jae
pop
sahf
and
pop
sbb
gs
mov
pop
mov
mov
push
daa
sahf
out
xchg
or
jmp
cmp
xchg
sub
xchg
fdivr
mov
sbb
jmp
mov
pusha
sub
dec
dec
das
ins
addr16
rcr
inc
(bad)
fstp
add
add
cwde
jns
scas
mov
ins
inc
push
lock
pusha
mov
sbb
push
inc
mov
aam
sub
jae
in
add
mov
add
and
ret
cwde
mov
xchg
into
dec
dec
push
stos
xchg
and
ins
je
movs
pusha
mov
out
ins
mov
fidiv
lods
sub
mov
lea
into
ret
je
mov
or
and
nop
and
fimul
sbb
push
xchg
push
dec
popw
sub
dec
call
idiv
rcr
mov
push
daa
gs
stos
hlt
jns
or
inc
retf
dec
sub
xchg
loope
pop
jbe
or
pop
into
mov
mov
push
std
or
(bad)
int3
(bad)
add
mov
fist
std
adc
inc
jb
jne
(bad)
loopne
jle
cwde
xor
dec
test
imul
push
or
ret
mov
xor
call
stc
add
jo
dec
pusha
push
stos
ss
push
loop
xchg
mov
hlt
mov
cmp
outs
push
push
jns
inc
ror
xchg
inc
mov
mov
js
stos
movs
retf
icebp
scas
test
adc
jge
pop
(bad)
into
jmp
sbb
push
leave
adc
dec
fadd
mov
mov
push
test
jg
jno
call
mov
cmp
mov
ror
xchg
xor
outs
js
jnp
mov
and
out
adc
mov
cmps
idiv
iret
clc
pop
leave
add
iret
push
inc
in
int3
xchg
fxch
xchg
das
fild
shr
test
jmp
das
nop
gs
xchg
out
rcr
xchg
call
push
pop
and
leave
(bad)
out
sbb
cdq
inc
call
ins
aad
jle
ds
adc
nop
mov
outs
repnz
fadd
dec
std
or
enter
dec
call
sbb
rcr
movs
dec
cld
mov
ror
leave
fld
ins
imul
mov
iret
inc
dec
jl
div
scas
gs
scas
sti
mov
mov
pop
mov
ret
into
push
sub
and
push
retf
outs
adc
retf
in
mov
cmp
mov
jecxz
sub
mov
cmp
mov
inc
inc
pop
mov
inc
aad
jp
jl
fist
aas
mov
ror
mov
lds
sbb
xchg
shr
lahf
jmp
cmp
push
icebp
dec
sbb
sub
cmp
movs
outs
pop
xchg
jno
ror
adc
pusha
xchg
inc
and
test
sub
sub
rcl
das
inc
cs
xchg
mov
jo
inc
test
xchg
repnz
int
mov
jmp
inc
cmps
jns
arpl
sub
mov
or
movs
xchg
cmp
imul
outs
lds
mov
and
cwde
or
or
sub
mov
out
jns
rcl
inc
stos
imul
push
cli
mov
jmp
pop
les
retw
bound
test
push
ror
stos
pop
call
and
cmp
int
jmp
jno
push
mov
push
out
call
fistp
push
inc
mov
xor
cdq
push
mov
leave
cmp
test
adc
sub
xor
scas
cmc
clc
cld
fnsave
xor
lea
lock
sbb
lock
xchg
out
cmp
shr
push
(bad)
fs
dec
cmp
pop
ja
outs
sub
loop
daa
(bad)
xor
or
mul
ja
hlt
je
ror
imul
mov
aas
fist
mov
push
iret
(bad)
xchg
(bad)
xor
popf
rcr
or
mov
cmp
inc
mov
scas
jmp
in
gs
mov
arpl
int3
cs
pushf
es
cmp
dec
jg
mov
popa
inc
scas
or
test
movs
xchg
xor
ror
push
push
icebp
pop
mov
pushf
cld
dec
rcl
(bad)
loopne
fs
fstp
inc
(bad)
(bad)
and
xchg
cmp
or
xor
jg
lds
out
retf
bound
or
pop
push
stc
outs
loope
push
rol
add
mov
mov
jnp
mov
mov
cmps
cmp
push
xor
jno
inc
mov
xchg
stos
movs
inc
add
sbb
les
(bad)
mov
into
cmp
xchg
add
in
add
xor
pusha
sub
xor
xchg
(bad)
mov
pop
scas
add
xchg
lods
inc
outs
lahf
xor
push
xor
outs
push
push
pop
mov
leave
jnp
pop
mov
(bad)
loop
int
in
mov
repnz
mov
or
dec
add
xchg
inc
pusha
scas
jecxz
mov
dec
(bad)
jnp
dec
lahf
data16
(bad)
mov
pop
arpl
xlat
mov
es
or
xor
jl
inc
add
mov
ins
cld
js
mov
xchg
fld
dec
pop
hlt
xchg
jg
vmread
xchg
jmp
pop
pop
xor
repnz
push
or
cmps
sub
mov
push
adc
(bad)
icebp
dec
or
push
adc
jo
outs
cmp
sub
cmp
add
cmp
ss
ds
inc
outs
sar
aas
jb
dec
lods
sub
cmp
xchg
push
push
pop
sub
pusha
mov
stos
push
or
cld
in
lods
rol
mov
adc
sti
cmp
call
packuswb
movs
inc
mov
icebp
cmp
adc
xor
test
jge
test
adc
mov
stos
mov
pop
iret
cmps
pop
push
je
mov
mov
sbb
arpl
jb
shl
int3
xchg
test
pop
aaa
or
jbe
pop
in
mov
scas
sahf
and
js
adc
loop
cmp
pop
jo
popf
repz
cs
ds
pop
adc
jae
jno
int3
fdivr
jmp
jno
outs
pop
pop
mov
movs
loop
inc
xlat
int3
mov
add
(bad)
(bad)
and
jno
daa
ret
lds
sbb
cmovs
dec
ja
cwde
jbe
stos
mov
loopne
cmps
cdq
dec
sub
pop
sbb
jmp
fs
arpl
js
jmp
sub
and
fisub
aad
pop
xor
add
push
into
pop
push
hlt
adc
int
adc
xor
or
pop
into
pop
cs
mov
xchg
leavew
and
aaa
mov
(bad)
jl
and
jns
pop
jmp
lds
movs
ins
mov
xchg
sbb
pop
(bad)
sbb
in
icebp
hlt
push
and
in
cdq
mov
in
add
xor
mov
and
(bad)
sub
pop
or
(bad)
xchg
pop
inc
adc
mov
ja
fisubr
fs
pop
add
(bad)
leave
push
mov
pop
cmp
adc
daa
aas
add
jg
sub
imul
push
jle
leave
jo
xor
pushf
sbb
ret
pop
ret
ds
mov
mov
sbb
shr
ins
retf
out
outs
push
dec
pop
stc
dec
mov
push
and
pusha
cmps
(bad)
sub
mov
rcr
loope
pop
xor
js
mov
jo
out
les
add
push
(bad)
dec
push
sub
loop
cmc
and
icebp
mov
cmp
sbb
(bad)
or
stc
fst
or
shl
push
mov
rol
aas
adc
nop
imul
mov
mov
dec
push
adc
jb
bnd
jns
push
xchg
push
adc
adc
das
or
cli
pop
xchg
stc
sahf
pusha
mov
pop
and
push
dec
scas
jmp
sbb
pop
pop
xor
xchg
xchg
sbb
pop
loop
push
int3
cmp
pop
mov
inc
mov
push
(bad)
lods
ins
loopne
stos
jbe
iret
push
jnp
cli
jae
mov
push
les
dec
dec
aas
xor
int3
popa
ret
int
pop
and
push
jmp
test
xchg
mov
inc
in
call
jecxz
inc
ss
(bad)
dec
sar
pop
or
push
outs
pop
xchg
and
pop
jno
mov
or
cmp
dec
sub
inc
push
inc
push
xchg
xchg
mov
arpl
mov
test
adc
sub
jae
clc
jmp
add
or
lods
std
jmp
ds
inc
mov
ss
and
xor
mov
mov
push
or
xchg
(bad)
push
pop
dec
mov
xchg
pop
lds
adc
adc
shl
push
sbb
fist
outs
std
jbe
hlt
mov
or
jg
pop
popa
pop
jecxz
adc
mov
js
add
dec
lea
shr
jg
mov
xchg
stos
imul
nop
leave
mov
xchg
aam
xor
jbe
dec
sub
arpl
jmp
scas
xor
dec
lods
jo
adc
(bad)
sbb
push
je
cmp
int3
mov
adc
test
aam
inc
stc
pop
daa
inc
pushf
aam
shr
mov
outs
jle
mov
push
out
lds
mov
add
ins
adc
mov
dec
xchg
movs
xchg
inc
outs
inc
mov
pop
add
addr16
jns
pushf
int
into
ret
mov
lock
sbb
leave
(bad)
push
adc
jmp
sahf
fcmovu
clc
cmp
sbb
jb
xchg
dec
jmp
fwait
cmp
loope
mov
sub
dec
jle
stos
pushf
in
add
ins
shl
ret
cmp
call
or
sub
lods
lahf
popa
or
add
aas
and
test
xchg
mov
xor
mov
mov
mov
push
adc
loopne
jecxz
ffreep
arpl
mov
lea
sti
dec
add
pop
mov
mov
jmp
in
cmp
int3
(bad)
ss
xchg
add
in
sbb
sub
mov
adc
and
sbb
inc
clc
imul
rcr
sbb
movs
mov
and
jns
std
jae
imul
outs
clc
dec
js
and
sub
lahf
sbb
ror
jae
scas
loope
inc
sub
enter
(bad)
pushf
pop
seta
jnp
mov
(bad)
enter
test
jae
out
push
xor
pop
mov
out
pop
or
fsubr
lods
in
jmp
xchg
xor
xor
or
iret
scas
adc
adc
daa
sahf
test
jne
in
xchg
xchg
inc
fidivr
(bad)
ficomp
add
dec
lock
jecxz
cmc
mov
aaa
cmp
clc
mov
out
pop
mov
pop
sbb
pop
dec
jl
dec
enter
adc
inc
dec
test
dec
outs
test
popf
and
and
rcr
pop
add
dec
cmp
test
test
dec
retf
ret
das
xor
dec
mov
adc
call
loop
loopne
xchg
in
mov
imul
aam
jne
aam
mov
pop
and
shl
sub
leave
scas
cld
add
xchg
imul
sbb
lea
dec
xor
leave
jne
dec
inc
popa
sahf
mov
sahf
shl
cli
adc
pop
cmp
dec
ret
xchg
mov
push
ret
jae
pop
sub
lods
jmp
gs
add
(bad)
retf
test
lea
xor
in
hlt
adc
popf
jg
pop
add
pop
jb
mov
nop
add
add
aaa
ja
mov
jo
mov
lods
lahf
pop
scas
sbb
inc
in
push
movs
cmps
(bad)
mov
je
xchg
push
xor
jge
retf
stos
sbb
mov
pop
jae
push
xchg
mov
sbb
push
popa
aad
jg
adc
aaa
test
adc
inc
aas
push
xchg
ret
retf
xor
adc
mov
(bad)
in
mov
int3
mov
cs
mov
ins
push
mov
cwde
out
rcl
add
fsubr
div
repnz
int
mov
or
inc
xchg
mov
in
call
int3
sbb
cmp
mov
xor
imul
xchg
in
fsub
addr16
sub
sbb
call
cwde
xchg
mul
daa
sbb
js
mov
test
xchg
imul
add
pop
mov
or
cmp
rcl
outs
add
jle
cld
cmp
mov
std
icebp
loopne
pop
nop
sbb
cli
lock
mov
or
xor
ret
shl
lods
fisubr
mov
jmp
cs
pop
fs
icebp
lds
mov
(bad)
mov
repz
not
sahf
jb
push
mov
jnp
mov
cs
ja
mov
cmps
mov
rcr
nop
add
sbb
and
add
fs
retf
adc
cmp
cdq
add
pop
leave
or
fsubr
push
mov
xor
out
js
cmp
xor
imul
fsub
aaa
(bad)
jbe
popf
(bad)
leave
je
pop
jle
or
xlat
dec
add
or
(bad)
imul
test
fisubr
sbb
ds
jmp
cmp
(bad)
js
and
scas
jo
enter
arpl
xor
and
pop
retf
push
aaa
xchg
xchg
bsr
scas
push
push
lahf
pusha
jmp
cmc
add
push
nop
lea
mov
(bad)
nop
fwait
sbb
cs
adc
cmp
and
hlt
stos
rcr
xchg
rol
push
jno
adc
xchg
or
or
lods
(bad)
hlt
loope
dec
test
ja
shr
sub
pusha
jae
and
adc
cmps
shl
dec
loope
and
add
(bad)
jns
adc
fbstp
sub
inc
inc
fucom
jecxz
loope
xlat
sbb
jl
or
movs
dec
out
scas
mov
xor
dec
in
ficomp
xor
int
push
stc
enter
and
pop
cmp
pushf
fisttp
shr
pop
pop
sub
push
pushf
inc
push
(bad)
sete
imul
inc
cdq
call
mov
lods
pop
xchg
dec
in
daa
sub
loope
and
sahf
mov
push
dec
fnsave
or
js
push
mov
adc
das
nop
jp
jo
out
cs
loope
pop
sbb
jge
fnstsw
push
xor
pushf
mov
call
in
and
pusha
pop
push
or
jg
cmps
jbe
mov
pop
enter
lea
aaa
hlt
mov
push
jmp
cwde
out
scas
fwait
add
mov
pop
adc
or
ret
fnstsw
mov
xor
loope
outs
lods
mov
jb
fld
retf
jmp
in
(bad)
inc
xchg
(bad)
sbb
add
test
out
push
fbstp
call
dec
inc
xor
jne
inc
add
jne
cmp
jne
add
mov
push
mov
mov
or
xchg
mov
cmp
movs
cs
cmp
xchg
mov
inc
gs
popf
jle
mov
sub
rol
jbe
push
push
(bad)
rol
(bad)
out
fwait
int
pop
retf
adc
jb
mov
int3
fs
out
dec
xchg
mov
stos
push
mov
add
add
sbb
mov
mov
jp
mov
sub
adc
add
mov
fsubr
popf
xor
jns
sar
dec
xchg
cwde
push
inc
daa
push
or
loopne
pop
loop
loop
pusha
lahf
jae
and
imul
mov
inc
inc
scas
mov
mov
bound
or
jbe
push
mov
in
sub
int3
inc
lock
or
inc
dec
js
sub
movs
mov
int
adc
nop
pop
push
enter
mov
outs
loope
ss
in
lds
lods
movs
cmc
inc
sub
sti
xchg
ror
mov
jno
xor
inc
lea
push
mov
popf
push
stc
mov
outs
fs
or
pushf
lahf
xor
ror
fmul
and
cli
pop
adc
add
repnz
and
retf
mov
call
or
mov
mov
loop
add
mov
enter
pop
int3
ror
mov
sti
and
or
add
mov
mov
xchg
cs
les
pop
mov
nop
mov
pushf
test
lea
jmp
lahf
sub
xor
mov
add
dec
fwait
(bad)
mov
mov
mov
movs
jmp
inc
pop
lahf
inc
inc
jmp
loopne
dec
sbb
push
enter
enter
je
lds
clc
inc
pop
je
inc
test
cmp
mov
jne
push
xor
cli
inc
ss
xchg
pop
fmul
lea
push
jg
arpl
(bad)
mov
and
mov
sub
ret
ins
jp
imul
fcomip
cmp
sbb
ss
or
dec
daa
aam
and
xor
xchg
jnp
jae
test
in
inc
jge
je
stc
repnz
in
or
int3
mov
into
dec
or
cld
mov
xchg
or
movs
ins
(bad)
dec
xlat
ins
popa
div
fdivr
and
shl
repnz
jp
xchg
add
aaa
mov
sub
jne
arpl
adc
sbb
ret
mov
mov
in
push
xor
pusha
adc
int3
out
inc
inc
xchg
mov
fnstsw
or
pop
call
mov
inc
dec
gs
in
loop
xchg
int
push
adc
sub
fcmovnbe
jo
add
cmp
out
out
sub
clc
daa
(bad)
fbld
repnz
icebp
aad
push
or
std
pop
jmp
sub
loop
test
dec
inc
xchg
sbb
icebp
loopne
sti
xchg
mov
les
shl
mov
loopne
fmul
mov
fidiv
push
mov
in
data16
imul
mov
push
dec
test
push
rol
sbb
pop
add
div
push
arpl
cmp
or
in
aad
add
rcr
mov
xchg
mov
out
add
pop
xchg
mov
pop
push
test
mov
dec
jo
fsubr
ins
nop
lods
fisttp
fwait
adc
(bad)
add
xchg
sbb
gs
adc
pop
add
inc
cmp
pop
lods
jle
clc
cdq
(bad)
sahf
or
je
shr
pop
loopne
ds
fwait
push
pop
sahf
push
std
aam
mov
push
arpl
pusha
and
(bad)
rcr
call
out
in
mov
xchg
cmps
outs
ret
pop
stos
dec
sbb
mov
test
sub
jge
xchg
pop
or
retf
cmps
cmp
sub
cs
sbb
xor
dec
jae
mov
inc
pop
sbb
and
xlat
sbb
adc
ss
aam
test
ins
add
addr16
inc
xchg
rcl
les
adc
inc
push
lea
(bad)
div
dec
std
xchg
push
sub
fmul
adc
lea
mov
jo
push
adc
retf
jge
dec
inc
jp
add
mov
pop
cmc
iret
cmp
inc
rcr
push
mov
(bad)
mov
stos
lahf
(bad)
outs
dec
jo
jnp
mov
sbb
ror
inc
aaa
sub
xor
loop
cmc
mov
pop
sub
mov
xchg
loop
cmp
xor
or
push
mov
add
dec
mov
mov
cmc
xchg
jnp
div
lods
jecxz
stos
loope
push
mov
int
push
and
xchg
or
call
mov
push
mov
push
and
push
test
es
inc
xchg
ficom
stos
cld
pop
ss
mov
xchg
je
adc
cmp
cs
xor
mov
xchg
test
test
mov
jae
inc
leave
jnp
or
sbb
scas
xor
out
sub
outs
mov
mov
jl
imul
jmp
cmp
sub
mov
hlt
sub
loope
and
repnz
jp
cmp
stos
cmp
int
lds
rcr
loopne
adc
mov
pop
push
imul
shr
outs
pushf
sbb
addr16
lea
ficom
dec
xchg
neg
jp
fwait
dec
or
out
dec
adc
inc
enter
cmps
cld
sti
ret
add
pop
fistp
imul
ja
int
cld
sub
pop
std
(bad)
dec
fisubr
shr
aam
jmp
fcmovu
cmp
inc
mov
cld
test
ror
in
popa
mov
bound
imul
fst
out
sbb
xchg
push
outs
aad
in
leave
xchg
or
xchg
sub
sbb
jp
imul
pop
out
hlt
sub
sub
fst
es
jne
daa
pop
inc
xor
adc
fistp
inc
or
add
jno
mov
sahf
arpl
aaa
add
outs
scas
or
fnstenv
sub
sti
cmovle
mov
push
and
mov
push
xchg
movs
adc
or
sub
scas
cdq
mov
outs
movs
iret
clc
fimul
mov
push
add
push
scas
ret
(bad)
jno
mov
jmp
ret
jne
(bad)
push
mov
imul
lods
out
mov
or
(bad)
imul
push
aad
aam
js
mov
or
dec
xchg
sbb
ret
mov
sub
lock
cwde
clc
mov
icebp
inc
idiv
mov
(bad)
int3
lods
aam
out
dec
mov
pop
push
imul
xchg
test
xchg
push
pop
sbb
loopne
and
cmp
inc
cmc
and
dec
inc
(bad)
push
clc
mov
stc
call
clc
sbb
push
jge
add
daa
inc
inc
dec
lea
in
mov
jle
scas
jmp
pop
and
mov
je
nop
les
add
adc
dec
sub
pop
add
mov
pushf
adc
jae
jns
retf
(bad)
ins
push
cmc
sbb
mov
jp
jnp
sub
xchg
pop
scas
stc
mov
int3
mov
idiv
xlat
jae
sbb
fwait
lds
pop
or
ficom
cmp
stos
or
pop
adc
adc
movs
or
ret
xchg
push
rep
mov
push
jg
or
inc
jno
push
or
sbb
adc
fcomp
cwde
ret
xchg
ins
or
dec
and
sbb
fsub
add
mov
fcom
jno
or
push
push
and
dec
repnz
pop
sub
sbb
inc
pop
mov
lods
mov
rol
push
pop
shl
xor
out
cmp
and
ret
outs
sub
mov
pop
adc
sub
xchg
inc
mov
xchg
mov
sub
int
repz
cdq
mov
inc
rcr
inc
lods
shl
or
rcl
and
jle
hlt
movs
stos
test
rol
pop
fisubr
pop
mov
int3
mov
aad
push
xor
and
hlt
cmp
mov
(bad)
out
dec
fwait
push
sub
movs
cmp
pop
popa
xchg
sahf
sbb
xor
fs
(bad)
repnz
jb
mov
lods
sub
sub
mov
or
dec
mov
pop
call
shl
jmp
sub
jg
sti
xchg
ficom
adc
mul
aas
in
(bad)
aas
mov
daa
sub
jecxz
in
push
mov
jo
xor
je
into
arpl
pop
xchg
lahf
xchg
or
cmp
add
ret
inc
sub
mov
imul
dec
imul
dec
push
inc
addr16
lods
fwait
sbb
shl
xchg
in
test
pop
lds
rcl
xor
xor
xchg
icebp
adc
out
inc
clc
ja
mov
(bad)
push
lock
add
pop
push
adc
adc
push
out
or
leave
into
in
ss
shl
fdiv
aaa
mov
clc
js
addr16
(bad)
lea
sbb
ret
adc
js
push
lods
retf
cmp
loop
mov
aaa
mov
mov
xlat
ret
(bad)
popf
xchg
dec
dec
sub
jno
or
xor
jne
js
xchg
pop
aad
mov
jmp
test
aad
mov
out
scas
mov
into
or
movs
adc
adc
and
jge
pop
push
mov
or
rcl
jmp
jnp
fisub
sbb
(bad)
fdivr
mov
scas
and
jecxz
mov
lods
cmps
sbb
push
aam
push
dec
xchg
test
(bad)
ficomp
rcr
mov
mov
jecxz
dec
mov
mov
imul
retf
sub
(bad)
push
cld
std
or
popa
xor
lods
das
sub
or
xor
addr16
jbe
sub
aaa
cld
fisub
lahf
retf
dec
xchg
mov
sbb
jne
jns
mov
dec
jmp
js
scas
sbb
sbb
mov
out
xchg
rol
pop
adc
nop
inc
add
aad
cmc
pop
sbb
loopne
cmp
in
(bad)
mov
xchg
into
call
cmp
movs
inc
(bad)
jnp
(bad)
dec
and
imul
pop
mov
in
xor
aam
xor
lahf
jno
xor
fimul
mov
pop
and
dec
add
mov
fwait
jae
rcr
int
pushf
sbb
cmps
mov
lahf
dec
hlt
add
(bad)
lahf
ficom
aad
pop
pop
out
fistp
sub
popf
or
mov
fcom
pop
retf
xchg
jl
stc
in
pop
adc
rcl
mov
mov
cli
xor
add
sbb
pop
cmp
cwde
ret
jnp
or
lock
das
loopne
mov
or
(bad)
adc
adc
mov
int3
push
pop
or
xchg
fisttp
or
add
jae
jno
in
sub
cli
sbb
jae
dec
jl
cmp
out
rep
(bad)
(bad)
out
jmp
fstp
pop
fsub
mov
dec
xchg
retf
add
jo
into
(bad)
test
add
cmp
scas
pop
jnp
cmp
mov
sub
and
retf
pop
ins
xor
daa
loopne
cmp
mov
imul
xchg
cmps
shl
adc
mov
fild
sbb
adc
(bad)
std
sahf
pop
imul
xchg
mov
add
ror
dec
pushf
xchg
cld
sar
adc
mov
mov
cmp
inc
enter
movs
pop
pop
add
cmp
in
mov
xor
pop
mov
push
leave
mov
pushf
movs
ret
ins
pusha
lds
shr
retf
repz
add
inc
imul
clc
(bad)
inc
mov
dec
sub
lock
or
ficomp
xchg
sbb
stc
stc
inc
clc
add
push
pushf
ss
cmp
and
rol
pop
cmp
loopne
out
jg
or
cli
push
mov
pop
fmul
mov
fbld
add
adc
push
call
push
push
dec
inc
jns
test
jle
mov
xchg
in
adc
imul
lods
jg
cmps
push
int3
scas
lods
push
xchg
aas
and
pop
mov
push
(bad)
xchg
xchg
push
mov
mov
and
push
int3
cdq
out
adc
inc
cmp
mov
(bad)
int
mov
mov
out
pop
xor
jno
nop
call
es
pusha
fld
mov
mov
lods
lods
loopne
cwde
(bad)
sub
lahf
dec
mov
popf
sub
sbb
dec
call
retf
mov
ror
and
xor
or
loop
test
ja
scas
lock
jmp
pop
dec
adc
and
sub
loopne
adc
out
out
loop
mov
dec
sub
adc
mov
fwait
mov
pop
cmp
sbb
iret
xor
arpl
ret
mov
sbb
cmps
mul
inc
mov
mov
fcom
dec
push
mov
pop
or
mov
jl
aas
push
dec
sbb
das
nop
cmps
cmp
out
sub
cmp
jg
or
sbb
nop
shl
es
xchg
lods
adc
adc
add
adc
jmp
das
and
dec
aam
jo
mov
outs
and
jle
js
xor
outs
fbld
js
jecxz
jecxz
fs
xchg
mov
sbb
xchg
add
sbb
inc
call
fadd
bnd
retf
sub
fadd
mov
sub
or
mov
push
jl
sub
adc
cdq
push
sbb
cli
mov
xchg
and
lods
xchg
nop
push
xlat
cli
mov
enter
icebp
mov
pop
mov
cld
into
rcl
jo
jmp
dec
mov
rcr
or
cmp
jno
xor
cdq
call
mov
loopne
in
das
and
jl
lods
jmp
xor
dec
int
and
lods
jmp
retf
test
dec
adc
mov
rcr
leave
test
pushf
pusha
mov
lea
in
movs
das
dec
cli
push
push
mov
fst
lock
sbb
pop
mov
jecxz
add
int
(bad)
in
sbb
mov
enter
loope
out
sbb
mov
mov
retf
and
ds
jnp
xchg
pop
bound
add
pop
das
mov
xchg
cmp
inc
and
scas
xchg
das
inc
inc
in
xor
repz
sbb
sub
ss
loopne
mov
rol
dec
rcr
xor
adc
imul
add
sub
and
or
movs
mov
and
jmp
mov
sbb
xor
lahf
xchg
js
push
imul
ins
cmp
out
and
sbb
jle
pop
jb
inc
rol
mov
(bad)
push
mov
nop
aas
pop
cld
pop
loope
dec
adc
push
arpl
outs
mov
mov
test
and
mov
add
or
shr
inc
sub
xchg
mov
ror
outs
(bad)
int3
pop
cmc
loop
(bad)
and
int
jmp
dec
jmp
jl
es
mov
in
scas
mov
out
adc
cwde
(bad)
cmp
pop
iret
test
test
mov
out
loopne
cmp
dec
or
xor
movs
mov
xchg
das
jl
out
leave
inc
stos
xor
pop
fmul
push
ss
xchg
call
xchg
cmc
retf
inc
sbb
mov
aam
mov
jo
push
inc
push
cmp
jne
dec
ds
(bad)
aaa
push
push
lds
sub
mov
into
push
mov
aad
repnz
repnz
stos
aaa
or
mov
ins
ret
lahf
stos
push
jnp
test
fnstcw
xchg
(bad)
mov
outs
pop
call
dec
inc
cs
add
sub
movs
stos
push
jge
sub
imul
call
iret
mov
fadd
dec
push
call
les
push
jle
stos
ror
out
cmp
nop
movs
cwde
adc
or
je
int3
adc
fwait
mov
xchg
jmp
mov
das
sahf
lods
xchg
aad
and
pop
cmc
cli
sub
adc
jnp
loope
test
pop
adc
je
and
and
div
rcpps
or
fwait
cs
aaa
scas
xchg
call
outs
test
std
jle
fcomp
or
and
fdiv
sahf
stos
mov
jne
sti
dec
dec
nop
jle
and
jb
mov
test
in
sbb
movs
and
ret
in
mov
lock
fwait
mov
cmp
xor
cmp
in
push
mov
arpl
jmp
pop
xchg
(bad)
aad
mov
ret
mov
or
mov
shl
data16
push
fsub
mov
addr16
cmc
test
stc
xor
dec
hlt
add
push
cdq
gs
pop
and
mov
jmp
iret
pop
jae
dec
mov
adc
arpl
or
mov
inc
ja
out
in
out
retf
retf
fiadd
pop
mov
and
jne
ret
das
xchg
movs
pop
inc
inc
inc
rcr
pop
fdiv
push
sub
in
movs
sahf
push
fsubr
(bad)
std
dec
inc
jle
(bad)
aad
in
push
sub
cs
cmp
ds
sbb
(bad)
not
jg
(bad)
mov
lods
dec
jns
adc
(bad)
test
xlat
rcl
aaa
jbe
inc
sbb
outs
jl
sbb
fsub
xor
mov
das
(bad)
pop
fsub
add
js
in
pop
push
pop
cmp
test
sbb
mov
fdivr
dec
jae
xchg
sbb
dec
push
fs
push
mov
pop
(bad)
lock
mov
pop
push
or
(bad)
cli
fs
and
inc
mov
jo
push
pop
retf
pusha
or
push
cmps
dec
daa
imul
outs
push
jae
mov
and
(bad)
mov
in
xor
mov
pusha
push
sub
cmp
dec
inc
jp
mov
and
and
sahf
fwait
mov
sbb
sahf
sti
jle
and
adc
arpl
sub
lods
cmp
xchg
push
adc
pushf
adc
out
inc
push
ss
pop
mov
pop
es
ds
cmp
adc
fidiv
or
mov
in
mov
jecxz
jle
mov
lds
mov
mov
fidiv
outs
loopne
sti
out
adc
mov
ret
mov
and
test
js
pop
xchg
out
lock
mov
into
dec
adc
push
fsubr
shl
int
or
imul
out
cmp
or
pop
mov
daa
xchg
sbb
jns
mov
jecxz
fdivr
sti
sub
dec
bound
test
xchg
stos
adc
not
sbb
mov
and
leave
popf
pop
push
adc
lods
mov
(bad)
ror
in
and
xchg
popf
sub
mov
aaa
add
repnz
and
fwait
shr
les
mov
outs
dec
xchg
idiv
mov
pop
jge
adc
add
outs
cmp
call
dec
leave
test
mov
test
mov
loop
daa
push
nop
pusha
add
data16
dec
ins
fisub
pop
test
or
movs
cmp
xchg
jp
or
js
rcr
jnp
int
fidivr
je
xchg
bound
cmp
pop
xchg
popa
pushf
ss
sub
lods
or
pop
jmp
xor
daa
icebp
js
push
test
movs
sar
adc
icebp
scas
fcmovb
push
ins
sbb
jle
add
xor
ins
fild
adc
ret
xchg
sahf
into
pop
pop
loopne
lds
jb
mov
pusha
dec
icebp
adc
imul
loopne
adc
xchg
popf
aam
adc
das
aaa
xor
add
aad
iret
or
or
aam
out
cmp
push
(bad)
js
mov
std
pop
mov
jo
sbb
inc
pop
sub
gs
xchg
dec
sti
imul
cmps
popa
out
sub
jns
(bad)
mov
fcmovbe
jge
xor
or
ror
inc
or
les
xchg
and
cmp
in
jmp
lea
dec
das
push
mov
scas
cmc
push
int3
and
scas
fnstcw
cmp
mov
aas
jnp
sbb
mov
xor
or
and
jbe
clc
sbb
add
mov
add
mov
mov
xchg
dec
jp
pop
xor
sub
add
xor
sar
daa
fld
lds
inc
stc
shl
in
mov
mov
test
iret
aam
push
stc
push
mov
cld
adc
bound
sbb
mov
sub
jp
mov
push
lods
jge
ret
shr
movs
xchg
int
scas
or
movs
xchg
call
enter
daa
xor
stc
les
mov
jne
pop
sub
push
(bad)
mov
repnz
cld
test
fldcw
test
imul
sbb
sbb
je
mov
stc
out
arpl
leave
sbb
jp
iret
inc
loope
or
and
mov
cdq
ja
fadd
in
cmc
cmps
cmp
cs
js
dec
push
mov
leave
pop
out
pusha
xchg
(bad)
pop
in
sbb
loop
in
ret
cmps
cmp
inc
mov
mov
and
xor
stos
cld
inc
and
arpl
(bad)
cmp
mov
sbb
popf
push
and
call
mov
bound
mov
es
mov
adc
in
jg
push
adc
xor
cmp
je
push
ja
scas
jg
mov
pop
rol
fidivr
sub
mov
pushf
fdivp
inc
sbb
push
outs
dec
mov
arpl
inc
mov
jo
xor
and
hlt
clc
cmp
les
inc
jmp
int
jnp
push
lods
cwde
cmp
dec
cmps
and
jo
iret
pop
dec
stos
(bad)
pop
shl
sbb
mov
jge
retf
stos
xor
dec
loop
(bad)
mov
fsubr
mov
scas
push
sub
mov
xchg
xchg
das
icebp
in
out
es
inc
loope
icebp
dec
sub
(bad)
lods
jmp
hlt
add
sub
mov
adc
cmc
ret
sub
adc
in
loopne
lock
xchg
stos
sahf
jp
add
out
cwde
call
int3
push
jnp
fcomi
sub
adc
fistp
test
sub
scas
sub
sbb
push
ds
shr
frstpm(287
xchg
leave
enter
push
test
rol
pop
test
cdq
inc
(bad)
imul
jmp
sbb
mov
das
imul
shr
sahf
push
into
mov
shl
push
dec
xor
shl
jmp
push
(bad)
repnz
cmp
daa
test
sti
push
aam
xlat
scas
sbb
pop
shl
push
inc
das
push
or
(bad)
aad
repz
xchg
adc
fs
cwde
mov
out
rep
test
pop
retf
cli
loop
ret
or
sbb
jl
shr
mov
retf
xchg
bound
mov
jbe
sti
sbb
(bad)
cld
dec
dec
pop
js
movs
imul
pop
aaa
jge
and
push
fst
lahf
hlt
shl
scas
xchg
retf
push
cmp
rcr
sbb
cmp
mov
lds
push
xor
mov
adc
pop
fadd
push
mov
sbb
push
jae
jne
pop
pop
(bad)
(bad)
xor
push
cmps
mov
adc
out
nop
sub
(bad)
adc
inc
mov
mov
imul
jge
and
add
daa
pop
loopne
push
lods
cmps
rcr
push
sub
jp
mov
sbb
mov
sub
xor
retf
inc
out
dec
inc
das
ret
out
jg
loope
in
inc
and
retf
pushf
cld
pop
jnp
pop
xor
jmp
int
inc
in
xor
push
sbb
pushf
jl
fiadd
sbb
fisttp
addr16
(bad)
cmc
xchg
adc
dec
push
ins
ret
or
imul
and
or
jne
mov
sbb
add
rcl
inc
fwait
gs
ins
mov
out
push
arpl
scas
ds
xchg
inc
or
xchg
mov
lock
xchg
loopne
mov
les
push
pop
cmp
push
mov
push
std
repz
std
jg
mov
ret
pop
jo
mov
sub
add
iret
call
fs
dec
xchg
jl
aad
out
sub
mov
(bad)
xchg
cmp
adc
out
adc
or
mov
jo
mov
push
stc
push
mov
mov
out
(bad)
cdq
dec
sub
sub
cmps
aad
mov
test
xchg
mov
jne
pushf
pop
xchg
mov
mov
inc
sbb
addr16
fadd
or
xchg
sub
mov
dec
or
out
lea
pushf
movs
inc
push
mov
mov
pop
inc
push
sbb
repz
mov
hlt
adc
data16
es
in
xor
lods
inc
push
xor
pop
cmp
pop
push
gs
lods
icebp
gs
data16
imul
sti
pop
loopne
mov
push
cmp
pusha
out
push
mov
mov
(bad)
adc
aas
sar
mov
or
sbb
clc
mov
outs
loop
shl
ficomp
or
and
pop
sub
je
jp
fst
dec
test
movs
sub
adc
push
adc
call
push
bound
jge
and
adc
mov
ja
cmc
out
mov
inc
xchg
in
add
js
and
dec
stos
dec
fld
xor
jecxz
mov
cmp
loopne
pop
sub
mov
popf
ror
add
mov
stc
enter
imul
cld
mov
aad
and
fmul
out
fld
test
mov
ja
sar
push
dec
daa
cmp
mov
adc
pop
leave
test
pop
mov
adc
and
addr16
xor
aad
xor
or
shr
and
push
xchg
mov
cmp
jnp
push
mov
sbb
xor
sahf
adc
in
xor
fmulp
aas
dec
outs
mov
or
add
mov
push
and
push
pop
add
(bad)
stos
scas
stos
adc
call
ins
mov
cmc
pop
xor
mov
outs
push
xor
cmp
push
adc
sahf
or
lahf
inc
sar
rcr
add
clc
arpl
cmp
and
jb
cmc
xor
test
or
stos
(bad)
nop
dec
(bad)
pusha
aad
cmp
mov
arpl
push
inc
dec
in
hlt
icebp
adc
and
outs
lods
mov
jb
and
or
shr
xor
(bad)
rcl
out
aad
sub
mov
mov
mov
aaa
dec
mov
repz
inc
(bad)
fwait
sti
and
mov
pop
repz
mov
pusha
lds
ds
mov
into
sub
inc
cwde
aad
in
cmp
rcr
ins
shl
shl
adc
(bad)
and
stos
div
movs
dec
add
mov
cmps
sbb
(bad)
mov
or
mov
mov
nop
shl
je
xor
lock
test
lods
sti
retf
in
movs
out
sub
ss
sub
fiadd
add
stos
retf
in
dec
popa
push
xchg
dec
add
jne
clts
push
jbe
xchg
add
imul
xchg
mov
jp
ins
push
sbb
or
pop
mov
or
nop
or
mov
ins
dec
mov
sbb
ret
div
dec
outs
sti
mov
jo
hlt
and
inc
add
add
mov
cmp
call
cs
sub
cmps
call
scas
xlat
outs
loopne
dec
sti
jmp
seta
int
out
cmps
push
je
or
sbb
repnz
xor
xchg
nop
pop
rep
xor
in
movs
ins
div
sub
adc
je
xchg
adc
jl
xor
ds
mov
xor
rcr
jo
xchg
sar
xor
xchg
push
fsub
lea
cmp
xchg
sbb
sbb
sbb
data16
out
call
xlat
inc
(bad)
or
in
jmp
pop
lds
push
and
pusha
sbb
and
cmp
xchg
sbb
adc
cmp
mov
pop
adc
repnz
(bad)
call
lods
lahf
jo
out
sub
fcmovne
mov
jno
xor
push
in
iret
inc
push
mov
jno
dec
imul
mov
scas
popf
fwait
movs
fwait
ror
movs
sti
cmp
jns
stos
lods
mov
in
int
push
iret
inc
push
ja
lds
fwait
mov
bound
(bad)
fdivr
mov
imul
cmp
xchg
push
jbe
loop
add
test
enter
pop
push
mov
jmp
sbb
adc
dec
mov
lods
or
pop
xchg
pop
and
add
das
imul
arpl
jmp
cmc
jge
mov
xchg
and
push
sbb
in
push
sbb
sub
mov
xlat
adc
jmp
adc
mov
mov
xchg
cmp
ret
ins
jle
nop
enter
sub
sbb
call
rcr
xor
and
jecxz
jle
sbb
in
rcl
sahf
cli
adc
sbb
push
adc
mov
sbb
adc
stos
hlt
test
pop
retf
or
cs
(bad)
arpl
sub
xor
jg
mov
sar
add
popa
inc
scas
dec
ret
cwde
(bad)
retf
pop
add
inc
out
and
imul
(bad)
aas
or
dec
cmps
movs
pushf
add
out
(bad)
test
push
aaa
je
mov
mov
test
lods
aaa
xchg
xchg
add
add
mov
mov
loope
cwde
jmp
pop
cwde
inc
inc
loop
sbb
sub
or
sub
mov
mov
lds
jmp
inc
outs
int
mov
popf
aam
ret
rol
mov
not
adc
adc
push
jnp
inc
xchg
push
sbb
std
push
loope
stos
adc
mov
stos
cdq
out
loop
gs
stc
inc
jbe
push
vshufps
lods
jmp
add
out
je
(bad)
jnp
and
mov
xchg
adc
xor
add
adc
pusha
dec
pop
cli
adc
scas
les
push
or
add
pushf
push
fs
jb
in
xor
std
fwait
dec
out
dec
jb
or
add
ret
retf
adc
pop
rcr
sub
xchg
enter
push
sbb
test
jnp
imul
xor
mov
xchg
pop
ja
in
or
inc
out
or
jp
retf
mov
adc
dec
scas
xchg
sbb
mov
(bad)
cmp
jmp
push
sahf
(bad)
mov
les
fldcw
test
cmp
call
sbb
loope
movs
sub
aam
inc
lds
push
xchg
jbe
ret
fld
sub
data16
in
lahf
inc
dec
lock
jl
xor
(bad)
std
aaa
fistp
sub
cmps
in
popf
add
jge
gs
int
add
adc
dec
sub
mov
outs
xchg
imul
jae
imul
out
lods
adc
shr
out
pop
dec
xchg
iret
or
push
imul
test
sub
out
add
std
xor
add
outs
pop
sbb
call
fs
(bad)
and
xor
dec
cmp
sub
(bad)
cmp
cmp
(bad)
push
xchg
into
lea
cdq
jmp
enter
or
sbb
jle
out
xchg
shr
xchg
lahf
rol
and
cmp
sbb
lahf
cmp
pusha
dec
scas
(bad)
pop
fdiv
inc
dec
push
in
mov
fucomip
stos
popa
pop
stos
daa
add
xchg
in
nop
and
icebp
mov
stc
imul
leave
or
dec
rol
jo
cmc
fdiv
jmp
test
push
cmp
mov
int
cdq
pop
xchg
mov
loopne
(bad)
dec
bound
mov
jnp
outs
mov
cmp
stos
sbb
inc
repnz
pop
iret
inc
lock
mov
mov
pop
cld
xlat
hlt
scas
push
mov
inc
mov
pop
dec
loopne
xor
xchg
loop
(bad)
mov
movs
into
cwde
inc
in
add
cmp
addr16
bound
xor
out
into
js
jl
jg
rcr
lock
icebp
psubsw
cs
mov
add
cmps
dec
cmp
adc
(bad)
cwde
lods
neg
call
iret
movs
in
(bad)
xor
cwde
pop
sahf
pop
xchg
cmp
mov
sub
push
in
xor
imul
(bad)
xor
sbb
retf
icebp
out
cli
or
add
mov
dec
xchg
push
cld
and
adc
adc
mov
sub
es
dec
stc
cmp
push
dec
enter
push
repnz
dec
jno
pusha
repnz
push
xor
mov
loopne
jo
out
mov
add
bound
push
aad
pop
shl
ror
stos
adc
nop
sub
stos
sbb
lods
ret
mov
push
movs
aam
mov
lods
mov
mov
movq
xchg
inc
mov
push
test
mov
repz
or
sbb
imul
mov
sub
enter
rol
dec
repnz
inc
jne
cdq
out
(bad)
mov
pop
pop
or
and
xchg
xlat
add
jnp
outs
out
mov
(bad)
ja
arpl
into
dec
adc
cli
push
mov
push
push
inc
addr16
pusha
clc
inc
jmp
cmp
sub
stos
mov
push
inc
sub
fs
sbb
aam
mov
stc
ret
stos
stos
cmp
inc
mov
or
xchg
sbb
sbb
jnp
test
sbb
mov
inc
fnsave
xlat
dec
inc
sbb
or
or
lock
jo
fistp
xor
or
popf
(bad)
inc
mov
fistp
xchg
stc
xchg
loopne
imul
sub
dec
mov
mov
ds
jecxz
xchg
jp
sbb
mul
aaa
cs
jp
fild
mov
cmc
sub
stos
sub
nop
popa
push
mov
adc
push
lock
mov
imul
shl
push
retf
loope
inc
outs
push
inc
cmp
jae
pop
dec
cmp
mov
xchg
(bad)
mov
je
mov
jl
jo
inc
lahf
and
or
cli
mov
cwde
out
sub
jbe
push
add
fs
ret
mul
sar
xor
push
lea
jne
mov
cmc
jae
(bad)
adc
push
aas
sub
outs
ror
inc
mov
mov
adc
fwait
sub
cmc
test
mov
mov
je
sbb
or
dec
adc
fimul
dec
outs
es
pusha
out
mov
mov
jae
xor
popf
mov
mov
mov
push
mov
mov
sub
mov
jge
neg
call
xor
and
mov
pushf
stos
cld
cmps
lods
push
out
pop
mov
loop
ret
sub
jo
out
in
cs
icebp
inc
add
jo
dec
push
push
inc
inc
or
push
mov
repnz
dec
mov
inc
mov
movs
mov
cmp
cmp
ret
jl
fwait
dec
xor
or
ja
in
fwait
imul
jae
xor
in
rcl
xchg
pop
aam
xor
inc
pop
loop
rcr
sbb
idiv
out
adc
fs
lock
repnz
vpandn
xchg
cmp
inc
or
and
test
dec
xor
sar
pusha
popa
push
pop
das
pop
in
sti
shr
iret
inc
shr
rcr
stos
push
add
push
add
repnz
fadd
mov
push
mov
fs
lods
pop
push
sbb
xchg
mov
cmp
mov
inc
loope
pop
imul
xchg
ss
sbb
enter
cmp
sbb
aaa
cmp
mov
mov
lahf
cwde
mov
(bad)
pop
fimul
stc
enter
cmps
cmp
mov
into
enter
jle
adc
mov
add
nop
aaa
push
or
inc
and
(bad)
enter
add
sub
mov
(bad)
jp
adc
add
and
sti
frstor
xchg
sub
jns
mov
ror
dec
mov
int
xor
out
sbb
and
stos
cmp
mov
pop
and
dec
fisubr
mov
scas
mov
call
xor
shl
mov
sbb
jp
rcr
pushf
mov
inc
pusha
std
add
ficom
push
jnp
lock
push
es
icebp
xchg
sbb
jnp
mov
les
pop
int
ja
mov
mov
dec
out
push
cdq
int3
jl
add
dec
sbb
or
jle
mov
sub
test
and
lea
mov
mov
push
adc
adc
jo
xlat
ror
ja
cmp
stc
mov
pop
mov
scas
jp
dec
sub
int3
fwait
push
push
clc
test
cmp
inc
pop
inc
jb
or
pop
test
mov
jmp
sbb
push
mov
cli
xor
pushf
inc
cmp
mov
add
sub
iret
jmp
pop
mov
cmc
repz
xchg
and
cwde
push
cdq
test
add
repz
loopne
stos
jnp
lods
mov
fcomi
int
add
jl
jge
jecxz
les
xlat
ret
out
aam
xlat
cmps
pop
pop
xor
popf
or
push
fisubr
pop
sar
fist
cmp
loop
pop
adc
and
in
mov
sbb
das
dec
ja
push
add
jns
dec
sbb
xor
push
add
sub
xor
mov
mov
cmc
cmp
gs
jl
inc
setle
cld
cmp
inc
movs
out
sar
jmp
or
pop
xor
inc
xor
imul
test
cwde
push
ins
test
(bad)
xchg
adc
dec
push
test
dec
mov
mov
sub
xlat
sub
add
int3
mov
std
stc
or
hlt
mov
xor
inc
movs
mov
popa
movs
cmp
push
retf
test
xor
ss
repz
sbb
and
inc
mov
test
adc
xchg
mov
jmp
push
cli
push
sub
ss
in
inc
loopne
or
ja
(bad)
xor
add
pop
mov
mov
cmp
cmc
mov
pop
shl
loop
test
sbb
fadd
mov
xchg
xchg
push
dec
jmp
ds
pop
xchg
cmc
pop
imul
cwde
adc
push
push
sbb
lahf
(bad)
and
and
cmps
ret
jbe
or
adc
out
(bad)
leave
repnz
or
pop
cmp
dec
sbb
gs
adc
lock
jmp
loopne
inc
push
out
sti
and
adc
out
cmps
sbb
jmp
rol
sbb
pop
imul
outs
ja
out
sub
inc
and
dec
add
sti
adc
(bad)
stc
jp
sub
dec
cdq
sahf
jmp
jnp
arpl
or
lods
pushf
sbb
cdq
sahf
fistp
xor
mov
inc
iret
inc
out
mov
jno
ror
xchg
xchg
aas
call
jne
leave
xchg
xchg
out
mov
hlt
or
ret
sub
cwde
fisttp
movs
push
bound
dec
popa
jne
mov
ret
(bad)
in
jns
bound
call
mov
aam
sub
jl
sbb
cli
xor
test
adc
fisttp
scas
in
push
jns
add
imul
mov
inc
and
movs
fs
xchg
lods
push
gs
hlt
xor
xchg
or
icebp
xchg
repnz
cmp
loop
add
out
mov
scas
fwait
ins
push
push
(bad)
mov
loope
outs
nop
icebp
frstor
scas
cmp
fsubr
or
js
mov
inc
in
add
adc
outs
repz
jg
cmps
inc
in
dec
iret
mov
mov
(bad)
mov
mov
xor
adc
mov
out
movs
jno
dec
test
(bad)
imul
mov
cli
xor
vpor
sahf
aas
test
mov
adc
nop
mov
mov
rcr
mov
movs
out
pop
jo
rcl
cmp
inc
icebp
cli
jb
xor
mov
or
xchg
fs
or
aaa
lods
aaa
inc
jb
push
sub
in
test
inc
or
scas
adc
pop
out
cdq
nop
fwait
mov
ftst
pop
jne
scas
nop
sbb
push
add
adc
xor
adc
(bad)
je
mov
mov
or
movs
mov
adc
push
mov
dec
or
ins
lock
jle
lahf
xchg
mov
out
push
leave
dec
sbb
xchg
pop
out
sbb
cmps
xchg
push
adc
cdq
repz
dec
jmp
and
xchg
mov
jl
mov
xor
adc
xor
mov
sbb
push
mov
cli
iret
adc
sbb
xor
jmp
enter
nop
js
fisttp
sub
jg
xchg
xchg
jp
mov
adc
leave
retf
dec
or
jp
ja
pop
mov
inc
push
inc
(bad)
mov
mov
fstp
mov
push
and
aas
daa
hlt
cmp
cli
pop
sti
fldenv
xchg
sbb
xor
and
pop
mov
ficom
ror
fs
int3
jle
cmp
js
rol
adc
adc
aam
das
push
cmp
call
and
sub
lea
into
pop
retf
jmp
jmp
jle
jl
sub
pop
mov
xor
sub
mov
gs
jmp
push
pop
pop
inc
mov
loopne
mov
mov
jne
test
sbb
dec
test
mov
and
fadd
jae
mov
cmps
push
jmp
push
and
out
jno
mov
out
cmp
dec
out
push
pop
and
mov
shl
test
outs
add
xchg
mov
test
cwde
pop
xchg
pop
jb
xchg
cmp
shl
xchg
out
outs
mov
stc
dec
xchg
mov
rol
jnp
cmp
xchg
sub
loopne
retf
cwde
fs
push
mov
ss
xchg
and
push
fnstsw
movs
push
lahf
inc
cli
jne
sahf
jb
cmp
test
mov
sub
ret
or
mov
into
jmp
cwde
inc
push
xor
out
aad
inc
dec
dec
retf
and
mov
fidiv
mov
sub
adc
mov
mov
xchg
pop
mov
cmp
inc
xor
lahf
cld
stos
in
jecxz
outs
enter
cs
leave
out
mov
push
mov
out
lea
pop
add
ins
push
push
cmp
jmp
jo
retf
sub
inc
cmps
cmp
cmc
pop
ss
pop
bound
mov
arpl
or
cs
(bad)
cmp
mov
scas
aas
das
cmp
jecxz
aam
sbb
je
aad
xchg
(bad)
push
aam
mov
xor
or
fisubr
mov
mov
pop
fucomp
icebp
xor
into
pushf
mov
mov
adc
and
test
movs
mov
fist
gs
push
sar
scas
imul
push
repz
sub
sti
loopne
repz
or
pop
push
test
imul
sbb
(bad)
es
jmp
sbb
mov
pop
sar
mov
int3
hlt
(bad)
and
xor
and
cwde
adc
mov
dec
adc
bound
addr16
dec
add
jo
push
jl
jmp
dec
mov
cmps
mov
mov
(bad)
mov
clc
cmp
repz
sti
outs
test
call
inc
in
cmp
jae
cs
mov
mov
dec
push
jnp
pop
fsubr
add
cmp
cmp
pop
test
mov
or
or
dec
mov
jno
jle
clc
pop
mov
adc
ja
add
cmp
stos
loopne
add
push
ins
xor
clc
bound
test
cmp
push
lea
enter
stc
inc
test
add
cmps
mul
mov
jg
out
inc
pop
out
sbb
ds
dec
in
xor
xor
js
lds
fbld
aam
push
ins
(bad)
(bad)
mov
mov
pop
stos
lods
aam
sub
not
add
pop
and
jne
idiv
(bad)
in
inc
jbe
mov
test
jle
cmp
xchg
scas
sbb
rol
adc
push
ds
dec
inc
retf
test
loope
pop
xor
pop
and
scas
clc
cmp
test
push
pop
mov
sbb
mul
shl
cmp
jg
ins
(bad)
loope
(bad)
xor
fcom
push
repnz
test
pop
mov
mov
push
xchg
pop
dec
add
or
neg
hlt
xor
mov
mov
jle
pop
adc
or
pop
cmp
push
fs
mov
inc
cmps
push
(bad)
jnp
cwde
ins
xchg
jnp
aaa
mov
jae
inc
in
mov
push
leave
int3
or
push
and
pop
aas
loopne
pop
inc
jo
lahf
pop
mov
mov
jmp
jmp
or
in
scas
inc
repnz
mov
int3
jae
mov
daa
pop
popa
inc
pop
pop
jge
dec
hlt
and
sbb
push
cmp
repnz
jb
test
in
adc
or
pop
sahf
loope
sub
fcmovnb
inc
xchg
adc
cmps
mov
cmp
jmp
cmp
cmps
test
xlat
jne
aam
popa
and
ret
nop
adc
fprem
(bad)
jl
cmp
pop
sub
out
loope
(bad)
mov
nop
adc
(bad)
fmul
aam
xlat
or
pop
in
xor
and
dec
pushf
cmp
add
movs
push
sbb
mov
test
mov
push
mov
pop
fcomp
cli
and
test
nop
ffree
mov
outs
hlt
pop
ret
iret
daa
aam
mov
lahf
mov
mov
test
inc
ret
inc
arpl
mov
dec
push
cdq
mov
dec
test
and
ret
mov
cld
adc
es
adc
mov
mov
sub
jmp
mov
mov
ret
clc
mov
inc
push
mov
lea
addr16
sub
push
add
and
cmps
in
pushf
ja
aas
xchg
mov
or
cmp
hlt
push
(bad)
into
adc
int3
sti
xor
mov
cmps
jmp
loopne
or
and
dec
nop
(bad)
mov
das
jbe
inc
pop
popf
cmps
cmp
jg
push
out
add
pop
ret
inc
ret
enter
sub
enter
adc
or
mov
cmp
fild
or
(bad)
push
sub
fwait
hlt
sub
bound
push
(bad)
jmp
out
cmps
mov
lock
xchg
hlt
xchg
xchg
sbb
nop
js
jl
sbb
jns
imul
dec
stc
mov
loope
int3
pop
inc
mov
popa
call
scas
(bad)
fcomp
mul
inc
push
jne
inc
xlat
in
xchg
mov
lahf
inc
jo
mov
lock
lods
enter
stos
jmp
or
cmp
mov
in
int3
pop
es
enter
adc
xor
xor
inc
mov
jecxz
icebp
dec
mov
clc
cmp
(bad)
pop
jecxz
inc
in
aaa
outs
mov
mov
mov
cmc
call
push
pop
imul
dec
(bad)
ss
and
xchg
jb
sub
imul
mov
in
mov
sbb
movs
ss
rol
xchg
add
int
cmp
(bad)
pop
lods
lahf
lods
add
sbb
ins
ret
fxtract
add
icebp
test
pop
or
cld
cmps
xor
adc
call
mov
sub
jp
data16
push
inc
or
sti
dec
dec
add
or
push
xor
mov
cld
jne
(bad)
push
pop
cmc
or
mov
iret
fiadd
add
or
mov
jb
daa
imul
dec
(bad)
mov
sbb
dec
fs
loope
sub
push
add
mov
push
push
sbb
mov
jbe
push
ins
ror
cld
jno
sbb
ins
lods
add
ret
mov
div
pusha
jne
add
call
stc
pusha
les
mov
aam
test
cmp
out
pop
sar
jne
shl
aaa
bound
call
outs
ds
mov
adc
cdq
sbb
outs
jae
jno
test
jg
add
pop
and
mov
retf
sub
loop
outs
push
pop
mov
stos
movs
(bad)
pop
push
test
xor
or
xor
and
cwde
nop
frstor
out
iret
cmp
pusha
mov
repnz
add
ret
scas
xor
sub
mov
jo
scas
sahf
aad
pop
mov
imul
push
mov
loopne
nop
mov
ins
cmp
inc
push
sbb
lods
icebp
lock
sub
inc
pushf
sub
xor
ins
out
inc
imul
add
das
aas
hlt
mov
imul
sbb
gs
gs
lock
fiadd
pop
pop
enter
xchg
mov
mov
sbb
jg
cmc
ins
dec
jmp
je
jne
fsubr
push
stos
sahf
cmp
retf
sahf
jnp
jne
push
xchg
je
rcl
adc
or
movs
cs
into
push
in
outs
cmp
(bad)
fld
mov
xchg
add
mov
inc
push
xor
xchg
push
mov
and
leave
mov
in
xor
mov
and
sub
adc
stos
sub
add
xchg
fwait
dec
inc
int3
movs
imul
pop
inc
jbe
test
and
pop
mov
sub
sub
cdq
mov
jp
pop
xor
mov
data16
cld
xchg
in
pop
jo
inc
mov
push
xlat
xor
adc
sbb
sub
jmp
fld
push
mov
mov
xchg
push
mov
test
sub
mov
sbb
sti
aaa
setbe
inc
push
jmp
jmp
mov
in
in
pop
add
jmp
or
cmps
pop
jnp
add
mov
mov
jecxz
or
popf
retf
xchg
dec
mov
movs
leave
(bad)
cdq
mov
xlat
fiadd
xchg
clc
xor
test
cmps
(bad)
and
xlat
ds
jnp
mov
dec
jecxz
jp
sahf
inc
xchg
push
pop
addr16
xchg
inc
cld
cmp
test
into
or
mov
ins
push
xchg
outs
mov
inc
arpl
dec
mov
(bad)
cwde
std
sbb
mov
xchg
sub
adc
inc
iret
fnsave
clc
xchg
call
(bad)
mov
imul
call
mov
fdivr
ret
jmp
mov
stc
adc
lea
add
nop
or
xor
leave
int
sub
adc
das
repz
inc
aas
out
push
mov
fwait
sub
mov
jae
ds
jp
int
clc
ds
push
xor
add
je
xlat
cmp
fcomp
and
jnp
or
fsub
popa
call
(bad)
inc
sub
lahf
sbb
cmps
icebp
cmp
sbb
es
add
icebp
lds
cld
icebp
scas
ret
xor
stos
pop
or
or
test
add
sti
jl
sbb
iret
das
or
dec
sub
mov
cmovo
cmc
adc
inc
push
movs
pop
rcl
pop
mov
jle
pop
arpl
cdq
cmp
and
xchg
xchg
not
pop
add
stc
mov
mov
dec
xor
pop
iret
inc
loopne
nop
and
xchg
cli
or
cmp
and
bound
enter
or
sbb
clc
xor
and
push
push
test
out
jl
lea
cmp
mov
adc
mov
enter
ss
pop
jnp
fsubr
jge
jno
int3
addr16
jne
ds
cmp
jle
add
aad
xchg
mov
in
or
sar
and
ins
pop
rcr
lahf
sbb
xor
sbb
scas
push
std
mov
lock
sahf
out
in
clc
shl
jns
repnz
xchg
(bad)
mov
fs
sub
sbb
push
int
sub
stos
and
mov
jmp
fstp
int3
fbld
pop
dec
cmp
mov
dec
add
test
test
mov
jmp
inc
nop
inc
dec
ja
popa
aaa
adc
(bad)
jnp
lds
dec
ror
or
pop
push
push
popf
pop
push
out
retf
pusha
mov
add
jle
aaa
and
xchg
push
xor
int3
(bad)
mov
sbb
stos
lods
mov
out
movs
fs
fcmove
popa
inc
cmp
mov
jecxz
outs
add
stos
scas
shl
test
int
ret
shl
mov
add
(bad)
cwde
sbb
add
cdq
(bad)
cmp
ins
sbb
pop
mov
lock
adc
push
jbe
dec
inc
inc
xchg
cmp
pop
xchg
rol
or
daa
jge
(bad)
ficom
xchg
jmp
jnp
outs
adc
push
xlat
call
fisttp
jecxz
into
popa
sbb
add
mov
loopne
push
jmp
or
sahf
cs
dec
sub
ja
push
pop
or
es
dec
clc
jle
add
rcr
es
push
sbb
lea
lea
sub
movs
loope
lock
jns
scas
lock
fsubrp
in
sar
mov
sub
sbb
fnstsw
sar
ficomp
add
mov
std
mov
int3
iret
(bad)
pop
gs
mov
add
lods
push
inc
mov
jno
jb
or
jl
cdq
gs
std
jecxz
jns
popf
out
push
cdq
out
nop
cmp
aam
xchg
test
sub
shr
sub
int3
sbb
inc
jb
dec
xchg
imul
dec
adc
out
test
clc
or
int
fdivr
cmp
cmp
cs
or
dec
add
shl
movs
cmp
aas
ret
adc
push
into
mov
sahf
xchg
shl
fcomp
aad
ror
rcl
dec
pushf
xor
cmps
cld
and
push
inc
in
or
xchg
jl
mov
imul
pushf
addr16
push
push
cmps
jo
push
push
push
mov
ins
enter
push
leave
mov
inc
inc
popa
loop
js
sbb
dec
sub
leave
jmp
jmp
enter
retf
scas
mov
push
outs
dec
jmp
xlat
jo
mov
push
sbb
cmp
ins
in
loop
(bad)
in
bound
les
push
push
mov
pop
cmp
jl
push
push
adc
dec
mov
and
sub
pop
sbb
call
mov
inc
sub
call
into
cs
pop
mov
pushf
mov
xchg
out
fdivr
xor
push
fcom
xchg
inc
sub
js
push
stc
cmp
mov
stos
jmp
jns
(bad)
fidiv
in
mov
test
mov
std
ds
mov
pop
pop
inc
mov
in
xor
loope
dec
inc
ss
cli
retf
(bad)
ins
(bad)
inc
add
inc
cli
mov
sub
fild
xor
add
imul
imul
jg
sub
daa
cmp
xor
cmp
jle
lea
inc
aad
sub
ret
out
jno
sbb
mov
sub
dec
cmps
cld
hlt
in
xor
arpl
(bad)
pop
(bad)
pop
mov
xor
sti
fsub
fmul
mov
jle
and
adc
push
push
stos
ret
cmp
cmp
imul
pop
cmp
mov
aaa
es
pop
push
rol
lods
fs
lods
loop
pop
xor
push
jg
and
pop
cmp
inc
cwde
int
into
test
retf
je
lods
bound
ins
lods
sbb
dec
add
outs
add
or
jbe
pushf
mov
jmp
int3
pop
sub
jno
xchg
dec
xadd
mov
dec
jae
je
cmps
inc
(bad)
mov
jne
test
or
mov
xchg
outs
mov
jo
xchg
fstp
mov
pop
jbe
fwait
and
sbb
xchg
push
enter
sub
inc
fsub
jmp
push
test
pop
sbb
test
fdivr
imul
xor
(bad)
aaa
sub
gs
pop
xor
and
ins
(bad)
jg
xchg
test
add
icebp
or
push
and
fs
or
aaa
pop
div
fldenv
cmp
xor
sahf
dec
push
xor
(bad)
es
movs
mov
mov
sbb
push
aad
sbb
hlt
pop
or
or
(bad)
fsubr
(bad)
mov
aaa
fs
aad
cwde
xor
jae
cmp
pop
and
jg
fimul
xor
cmovns
push
adc
and
push
or
pop
popf
sahf
fldenv
sub
je
pop
add
mov
into
pop
dec
xor
pop
add
dec
outs
aas
clc
icebp
arpl
test
mov
and
sbb
call
mov
aaa
rcl
xor
mov
hlt
pop
gs
lods
fdivrp
in
retf
repz
iret
xlat
add
mov
jl
and
push
pop
sub
scas
jae
lds
ins
ins
inc
(bad)
(bad)
xlat
adc
in
sbb
loop
and
repz
and
jne
lock
lock
lods
mov
std
repnz
inc
and
sub
add
sub
mov
dec
dec
add
pop
mov
call
mov
out
retf
adc
repz
and
popa
dec
cmp
push
jmp
xchg
vandnps
jl
retf
push
out
imul
loopne
sub
mov
ret
mov
fcomi
loop
idiv
rcr
movs
stc
scas
push
push
push
and
xchg
in
jae
jns
cdq
je
add
test
push
(bad)
jb
push
push
and
dec
xor
mov
pushw
jp
je
movs
mov
jns
pop
dec
call
lahf
jge
rcr
sub
sbb
(bad)
lock
pop
pop
stc
test
add
fisttp
scas
in
sub
mov
jnp
inc
push
cmp
mov
out
xchg
out
mov
mov
and
mov
clc
sbb
push
ret
mov
push
mov
sbb
xchg
(bad)
xchg
mov
hlt
push
sbb
add
pop
cs
xor
mov
xor
pop
inc
in
jb
retf
mov
mov
jmp
ja
jmp
stos
repnz
dec
push
push
outs
dec
and
lea
out
and
dec
and
movs
and
adc
outs
loop
inc
aas
outs
push
sar
mov
out
retf
mov
adc
popf
sbb
data16
push
mul
or
push
sbb
daa
das
sub
test
adc
sahf
mov
inc
cmp
mov
les
aas
xchg
lods
enter
jae
pop
loop
mov
xlat
push
pop
push
jg
xor
in
fistp
xchg
(bad)
fdivr
mov
add
inc
jecxz
pop
mov
fild
cmc
fdiv
or
sbb
xor
das
adc
(bad)
sahf
jno
repnz
fnstenv
push
adc
aas
push
jo
mov
call
mov
mov
(bad)
and
adc
movs
std
fld
sbb
scas
pop
shr
pusha
push
gs
js
scas
sbb
jb
aam
cmps
sbb
or
xor
int
pushf
mov
les
test
dec
xchg
fadd
xchg
mov
repnz
imul
mov
ins
jo
jno
data16
mov
mov
out
std
mov
js
pop
adc
cmp
mov
adc
ds
xchg
xchg
jp
dec
mov
test
call
mov
test
mov
fild
fwait
nop
xchg
mov
scas
mov
mov
inc
cwde
(bad)
jecxz
fbstp
push
pop
mov
rcl
ins
mov
sub
stos
popf
jp
sti
mov
mov
push
or
(bad)
stos
xor
push
neg
cli
shl
jo
stc
scas
test
sbb
shl
sbb
or
hlt
sbb
jns
test
adc
cld
push
test
and
js
xchg
gs
icebp
xor
push
movs
retf
fst
jl
xor
cmp
add
dec
pop
popf
dec
retf
out
sbb
rcl
stos
and
movs
push
popf
into
inc
add
sbb
mov
pop
inc
aas
repnz
call
xor
adc
dec
mov
retf
cmp
fcmove
call
scas
sub
adc
push
cmp
mov
push
adc
dec
stc
pushf
fisttp
daa
or
lahf
inc
or
dec
lahf
outs
(bad)
addr16
in
push
inc
sub
aaa
add
imul
inc
retf
xchg
jae
mov
enter
mov
repz
fld
mov
hlt
imul
gs
hlt
pop
sbb
sbb
mov
retf
jg
jb
adc
lds
out
out
push
cdq
(bad)
loope
xor
aas
(bad)
int
add
jl
mov
pop
adc
es
pop
jno
mov
xor
in
arpl
div
sar
fidivr
mov
inc
mov
dec
mov
adc
adc
jl
xor
cli
loop
neg
push
mov
mov
inc
je
xlat
mov
push
pop
adc
inc
std
aaa
pop
enter
lods
and
sbb
sbb
retf
test
sub
clc
sbb
mov
(bad)
je
arpl
mov
pusha
fsub
ror
add
(bad)
stos
ret
mov
addr16
jmp
xor
mul
mov
or
jne
mov
jp
dec
ror
push
test
adc
push
mov
mov
movs
sbb
cmp
out
dec
dec
fnstcw
sub
mov
rol
rcl
xor
cli
cmp
pusha
ins
mov
mov
js
std
ds
test
cmp
out
cmp
pop
lahf
das
call
dec
push
sub
iretw
adc
or
push
mov
sbb
mov
popa
jmp
mov
int3
pop
xchg
jb
cli
push
pop
lds
adc
test
sub
sbb
les
add
das
cmp
push
sub
jb
mov
push
mov
xor
xchg
fmul
and
mov
js
xchg
sbb
push
mov
in
jnp
push
cmp
cli
and
fldpi
xchg
push
mov
fild
jb
cmp
or
or
adc
imul
xchg
shl
outs
xchg
push
sbb
movs
popa
xchg
and
addr16
popa
xchg
mov
cmp
sub
es
mov
and
scas
jno
jecxz
sub
mov
or
push
pop
out
call
xor
or
mov
jmp
xor
xor
sbb
pushf
int
(bad)
ficomp
sti
retf
xor
in
(bad)
push
pusha
ja
cmp
adc
je
in
adc
gs
sub
mov
sub
mov
ss
cmp
jl
fldcw
sar
lods
dec
xor
sar
cli
test
in
into
add
mov
dec
dec
xchg
ret
ja
stc
mov
loopne
in
fsub
or
mov
retf
(bad)
lock
nop
into
adc
mov
fld
in
push
hlt
cmp
add
sahf
aad
mov
pop
adc
mov
mov
je
jae
cli
jmp
leave
inc
sbb
loopne
push
daa
and
(bad)
sbb
add
jmp
out
in
pop
movs
jne
add
fcomp
popa
or
(bad)
in
call
rcr
and
jb
xchg
sbb
stc
mov
test
int3
inc
je
or
mov
cmc
inc
repnz
jle
dec
and
cmp
xor
mov
push
add
(bad)
sub
xchg
adc
sbb
xor
push
nop
addr16
cmp
fcmovbe
jns
cmp
lock
fidivr
push
fwait
or
push
retf
sbb
cdq
dec
jmp
stos
add
repnz
push
push
mov
xchg
lahf
stc
sbb
scas
mov
xor
jge
ret
movs
dec
std
in
fidiv
das
dec
int
in
cmp
ds
imul
cmp
pop
pushf
mov
and
pop
scas
pop
sub
xchg
xchg
fcomp
mov
xchg
jmp
lods
inc
lds
mov
xor
call
adc
mov
jg
mov
bound
cmc
mov
and
xor
push
stc
add
push
jl
jl
stos
push
(bad)
mov
cmp
mov
mov
jno
ins
jmp
cld
inc
scas
or
(bad)
pop
mov
ret
xchg
cmp
clc
mov
or
cmp
push
cmp
add
push
xor
rcl
adc
jne
add
rol
adc
aad
xchg
or
iret
cs
jl
inc
mov
ffreep
or
dec
call
cld
cmc
ret
mov
adc
test
sub
sub
retf
fchs
out
xchg
call
retf
minps
cmps
push
jns
fcomp
int
mov
inc
mov
test
mov
xor
les
repz
fisttp
dec
je
sahf
pusha
or
jb
pop
inc
repz
inc
add
nop
ss
inc
nop
or
mov
push
push
stos
mov
add
sub
aad
jmp
fstp
cdq
in
inc
test
xchg
adc
and
jns
cmc
push
jbe
loopne
call
nop
xchg
sub
xchg
mov
inc
aaa
(bad)
fbld
shr
icebp
adc
ds
sub
icebp
mov
fidivr
sbb
jle
adc
push
repnz
push
dec
aad
xchg
mov
jmp
scas
inc
mov
(bad)
das
pop
mov
inc
adc
mov
dec
mov
pop
cmp
sar
jae
push
retf
pop
lahf
or
shl
mov
fs
mov
icebp
loopne
dec
std
cmp
mov
adc
cmp
sbb
not
lods
stos
mov
pop
lods
retf
js
in
in
push
aas
jno
hlt
push
xchg
and
cwde
das
repz
(bad)
sahf
jbe
push
sbb
test
adc
sub
or
mov
js
pop
repnz
inc
in
mov
xchg
outs
outs
adc
push
fnsave
stos
int
jl
ins
pushf
xchg
jle
cwde
ss
addr16
push
retf
xor
imul
dec
jp
cdq
jno
fcomp
fidivr
ds
xor
jns
test
repz
stos
cmps
inc
pop
mov
and
jmp
push
aam
mov
mov
jmp
fiadd
push
je
retf
cmp
(bad)
sub
xchg
mov
jo
push
adc
out
int3
sub
xchg
popa
sbb
fmul
pop
and
sbb
ret
or
adc
and
adc
ret
dec
pop
xlat
pop
push
mov
pop
ret
dec
mov
or
movs
sub
loopne
mov
push
push
cmp
sub
xchg
or
cmp
jbe
mov
es
sbb
rcl
push
push
cmc
xchg
jo
ja
adc
in
pop
xchg
dec
mov
jg
retf
jg
push
call
mov
sti
xchg
jmp
jo
mov
in
mov
mov
push
int
sti
repz
xchg
sbb
jo
fcomp
mov
adc
movs
fxch
push
icebp
push
inc
inc
xor
cmps
jne
stc
add
repz
mov
cmp
aas
aam
sbb
add
scas
mov
stos
lds
fimul
add
lds
inc
inc
push
sbb
jp
js
icebp
jae
mov
cmp
sbb
fisttp
nop
int
lock
call
and
into
and
out
(bad)
jl
xor
cld
push
pop
mov
jo
ja
cmps
clc
pusha
aaa
cmpps
enter
mov
push
mov
mov
enter
cli
mov
test
ret
add
mov
jbe
cli
push
pop
xchg
int
mov
add
add
push
dec
or
stc
sub
cmc
data16
(bad)
fdiv
das
cwde
and
dec
fstp
mul
(bad)
fadd
add
popa
sbb
shr
cmp
dec
mov
add
(bad)
pop
xchg
pop
and
sbb
call
mov
mov
call
xchg
rcl
shl
xor
dec
mov
and
mov
les
and
xor
or
dec
mov
inc
pushf
repnz
xchg
call
out
xor
push
in
and
jo
jle
outs
mov
push
clc
or
mov
mov
dec
inc
test
(bad)
push
mov
jnp
pop
clc
enter
adc
inc
in
lock
sbb
mov
pop
cmps
push
adc
loopne
jnp
out
add
adc
movs
sbb
mov
mov
push
pushf
jmp
pop
repnz
fcmovb
bound
mov
pop
xlat
xor
retf
mov
cs
inc
stos
add
adc
pusha
add
pop
sbb
pop
call
push
daa
cmps
push
popf
ret
or
repz
pop
scas
js
add
pop
mov
retf
loope
aaa
into
je
xchg
mov
frstor
popa
cli
scas
xor
mov
inc
stos
inc
shl
(bad)
jle
pop
gs
ss
mov
and
ficom
xor
aaa
cwde
into
clc
or
in
xor
repz
pop
fisttp
outs
pop
xor
jns
cli
pop
imul
jg
mov
and
pop
jns
call
push
movs
fbstp
or
imul
adc
test
cmps
inc
jg
cmps
lds
daa
inc
xor
cmp
lock
jne
pop
stc
add
je
lea
inc
call
xlat
push
div
je
xchg
mov
push
pop
mov
mov
js
ror
inc
fadd
cmc
and
ret
push
pop
push
pop
push
das
sub
xchg
dec
add
jecxz
inc
mov
stos
push
bound
pushf
fwait
xchg
das
or
fwait
sbb
jne
aad
movs
xchg
sub
and
and
sbb
jae
into
mov
ret
dec
and
xchg
xchg
(bad)
hlt
push
push
add
dec
ds
stc
xchg
mov
lahf
cmp
outs
mov
nop
lods
nop
and
pusha
mov
lods
aaa
inc
inc
add
xchg
in
mov
sbb
xchg
add
add
addr16
outs
jae
psubd
loop
gs
bound
xchg
push
inc
mov
and
fadd
lds
push
js
repnz
movs
lods
cs
cmp
mov
fisubr
retf
mov
jge
pop
or
imul
push
xor
out
(bad)
hlt
and
cmc
les
ins
cwde
icebp
lock
mov
mov
xchg
mov
sbb
push
push
aaa
jno
jmp
jl
mov
int
xor
jg
shr
xlat
ror
or
pushf
into
in
shr
in
jge
xlat
and
and
sbb
call
lods
sbb
jmp
jge
ret
jl
ins
jp
cmps
out
retf
xlat
jno
push
cmc
jp
xor
xchg
cld
jl
xor
retf
pop
push
shl
push
sbb
(bad)
jo
scas
rcr
and
pop
aad
mov
push
add
pop
(bad)
pushf
xchg
rcl
call
cli
mov
aas
cmp
dec
inc
mov
in
inc
xchg
dec
xlat
into
ror
(bad)
sub
push
add
scas
pop
rcr
cmps
lods
rcl
xchg
(bad)
imul
sub
add
xor
bound
outs
popf
push
rcr
pop
inc
inc
jge
xor
add
sbb
arpl
add
jns
ss
loopne
mov
lods
dec
add
ja
mov
mov
inc
ja
jbe
push
popf
sbb
or
rcl
je
add
sahf
loopne
pop
xor
sbb
jno
xchg
jb
stc
adc
out
inc
test
sbb
movs
enter
cmp
in
aad
call
sbb
addr16
int3
and
cmp
mov
add
pop
cmps
addr16
jo
mov
add
mov
cwde
call
pop
cmp
mov
sbb
in
jo
pop
aad
fmul
push
and
ins
adc
adc
mov
pop
cmp
pop
lds
loopne
pop
inc
call
adc
out
adc
in
or
mov
lahf
push
sbb
(bad)
(bad)
and
cmp
ret
or
jns
mov
cmps
mov
inc
and
daa
cmp
and
out
dec
clc
push
and
movs
test
pop
enter
ja
(bad)
fld
aaa
xlat
(bad)
imul
test
fidiv
repnz
stos
inc
js
sbb
stos
sub
cmp
add
xchg
xchg
outs
pop
adc
mov
inc
inc
icebp
lahf
sbb
sti
xchg
mov
pop
cmc
icebp
cmp
inc
es
hlt
push
and
push
inc
sbb
inc
mov
push
pop
pop
mov
loope
jl
sbb
or
cmp
int
lods
pop
push
mov
cmp
(bad)
repnz
xchg
bound
push
mov
outs
sbb
jge
or
or
loop
in
mov
cmc
ja
movs
xor
inc
imul
lahf
loopne
sahf
or
jle
fsub
and
jge
and
out
pop
inc
mov
pop
jle
fcomp
outs
add
jmp
cmps
clc
out
cdq
and
scas
leave
pop
call
fldcw
jbe
push
aaa
call
sub
jns
inc
xchg
mov
ficom
in
adc
jge
push
sub
jge
ins
cmp
and
mov
enter
push
lods
fwait
sahf
into
push
mov
adc
lea
inc
or
sub
jb
lock
lock
fwait
add
nop
pop
call
aad
xchg
stos
in
jmp
and
dec
jo
dec
pop
(bad)
clc
mov
mov
scas
or
cmp
movs
test
movs
ror
test
push
dec
cmp
cmc
ja
lock
fnstcw
je
mov
cmps
or
mov
aad
mov
popf
in
pop
sub
mov
sbb
cwde
iret
test
jnp
cdq
jne
and
pop
fcmovne
loopne
mov
or
call
fild
enter
cmp
in
test
dec
outs
mov
test
or
or
(bad)
push
aad
xchg
popa
aaa
call
aad
(bad)
repnz
push
adc
jmp
in
movs
rcl
sub
xchg
fsubp
fimul
dec
cmp
int
and
inc
jmp
inc
inc
int
jecxz
xlat
push
sbb
pop
vpcmpgtb
push
iret
pop
stc
call
adc
and
cmp
jns
ror
daa
xor
out
sub
movs
mov
jmp
push
(bad)
mov
cld
add
test
call
dec
ret
les
add
mov
sbb
fucomi
jbe
lock
ss
pop
shr
xchg
adc
pop
out
xor
lods
xchg
jp
mov
xor
sti
inc
dec
retf
xor
add
lahf
cmc
jnp
mov
mov
not
xor
lea
sbb
fwait
rol
sahf
mov
outs
mov
dec
sahf
mov
xor
jae
inc
mov
pop
out
adc
ffreep
fwait
repz
pop
mov
jno
cdq
mov
jp
jno
dec
into
pusha
xchg
adc
or
pop
pop
push
mov
push
jmp
mov
xor
jecxz
shl
rcr
mov
mov
pop
jbe
ins
fild
imul
sbb
mov
daa
nop
jg
je
ret
addr16
push
mov
es
pushf
outs
sub
fistp
mov
push
aaa
mov
neg
mov
jb
sar
jecxz
in
(bad)
push
mov
xchg
cmc
enter
jb
movs
inc
stc
fcomip
fs
push
mov
add
jno
fcomp
std
or
mov
or
add
retf
jb
in
jp
mov
stos
sbb
pop
xor
in
ins
outs
out
add
shl
ret
(bad)
jg
sbb
test
arpl
mov
popa
cwde
cdq
add
inc
sub
gs
int
add
fwait
push
les
add
stos
in
sbb
daa
popf
sub
addr16
mov
jmp
fistp
jb
movs
js
xor
cmps
mov
jl
test
retf
or
and
popf
dec
shl
into
loope
shl
hlt
pop
mov
mov
stos
inc
nop
jp
je
mov
es
je
dec
call
mov
or
and
in
push
test
push
ret
jg
or
int3
push
loope
jae
loopne
xchg
in
adc
clc
(bad)
neg
adc
xor
pop
push
pop
inc
loope
mov
js
mov
jbe
aad
or
pop
(bad)
retf
aaa
mov
jnp
in
mov
les
pop
adc
fucomip
pushf
sbb
fidivr
mov
pop
mov
shl
dec
repz
sub
(bad)
push
cli
sub
mov
pmaddwd
pop
ss
(bad)
in
(bad)
stc
add
jle
mov
push
popa
in
sub
test
push
add
inc
jmp
inc
mov
sbb
clc
push
push
mov
fidiv
(bad)
sbb
pop
outs
sbb
xchg
adc
in
xor
jl
adc
mov
sbb
rcr
jno
dec
xchg
xor
xchg
sbb
pop
rcr
lods
out
jle
push
out
cs
scas
cmps
movs
enter
or
cmp
adc
pop
and
mov
outs
push
jmp
adc
shl
mov
rcl
ja
push
lds
loopne
jge
inc
pop
es
gs
out
test
movs
aad
test
push
jg
cs
icebp
mov
adc
scas
pop
jmp
xor
pop
mov
lods
fcom
cmc
inc
int3
push
stos
fdivr
mov
xchg
outs
aaa
sub
test
sub
icebp
mov
push
push
out
lahf
sub
adc
daa
in
adc
mov
dec
pop
add
daa
stos
mov
loopne
loopne
les
cmp
fwait
or
push
jp
les
sbb
sbb
cdq
jnp
bound
mov
bound
imul
ins
pushf
and
mov
(bad)
je
xor
mov
inc
jbe
mov
jge
jnp
pop
ss
sbb
in
pop
dec
cmp
jmp
jl
add
sub
mov
mov
xor
fisubr
dec
retf
in
cmp
push
fwait
jae
mov
sub
sub
push
jmp
mov
sub
lods
or
fiadd
adc
pop
or
or
adc
mov
and
fwait
xchg
mov
sbb
int3
mov
ret
cld
xor
fnsave
xchg
xchg
push
call
fidivr
nop
push
int3
into
fild
cmp
jno
addr16
push
push
repz
or
out
fdiv
in
test
nop
add
mov
fidiv
jne
arpl
mov
aam
lock
je
or
xchg
sbb
into
popa
ins
adc
in
jne
or
mov
call
sub
mov
les
idiv
cmps
sbb
call
push
test
xor
mov
leave
movs
cmp
sub
popa
or
dec
fs
mov
xchg
inc
jecxz
mov
dec
test
or
cmp
inc
sahf
scas
mov
lods
xchg
test
aad
jbe
cmp
xchg
lahf
out
movsx
inc
out
dec
mul
mov
test
mov
pop
fdivr
cmp
mov
rcr
cs
or
lods
data16
inc
mov
mov
mov
int
test
int3
pop
fisubr
loopne
pop
popa
mov
(bad)
(bad)
je
rol
inc
sbb
mov
das
scas
push
and
call
cmp
push
sbb
sbb
ins
mov
cmp
daa
jmp
inc
loope
jns
xchg
jg
sbb
mov
ins
add
xor
rol
xor
cmc
mov
mov
dec
jmp
mov
mov
data16
mov
sbb
je
hlt
sbb
cmp
inc
pusha
mov
mov
(bad)
fxch
icebp
stc
out
popf
add
mov
lds
ret
(bad)
hlt
jle
lods
mov
cmp
sahf
xchg
lea
cmps
pusha
or
mov
pop
cwde
mov
mov
data16
or
push
or
repz
call
sub
or
ins
sub
mov
jns
(bad)
in
jmp
fdiv
sbb
int
daa
push
test
mov
xchg
xchg
stos
dec
adc
or
lahf
shl
sbb
ins
aas
mov
dec
std
or
cdq
iret
push
es
loope
loop
jbe
jecxz
(bad)
in
push
sub
xor
or
retf
call
dec
fnstenv
or
adc
ret
jmp
loop
clc
or
pop
cmp
ror
mov
jl
adc
dec
cmp
inc
loop
mov
or
add
add
stos
rcr
sbb
mov
test
mov
(bad)
jb
push
jmp
or
mov
jecxz
mov
push
icebp
or
lahf
push
adc
jmp
les
push
or
out
lods
test
lods
ds
pop
jno
ins
mov
dec
mov
lds
push
mov
sub
outs
mov
fldcw
(bad)
or
push
jecxz
shl
ficom
test
imul
rol
aaa
push
(bad)
shr
sbb
pop
push
add
dec
and
cmp
cmc
ds
jp
lock
aad
jns
xor
xor
ds
cmc
jmp
sub
sahf
test
mov
cmp
adc
xchg
pop
add
sub
xchg
or
stos
imul
arpl
or
into
jae
call
fs
icebp
pop
lods
pop
out
pop
mov
dec
repnz
sti
mul
aam
shl
xchg
lahf
mov
hlt
(bad)
ja
xchg
lds
js
xchg
mov
jnp
test
mov
loopne
stos
adc
ror
into
(bad)
jbe
retf
out
test
cmc
je
jp
cmp
jmp
out
or
add
mov
cmc
scas
inc
inc
lds
push
(bad)
jmp
ret
test
cmc
and
add
out
es
push
add
dec
jns
sbb
pop
stc
out
das
test
sub
int3
dec
nop
stc
add
cdq
xchg
jnp
enter
call
and
call
in
(bad)
aam
jp
inc
std
jno
mov
dec
mov
pop
cmp
adc
and
int3
mov
popa
clc
and
cmp
cmp
mov
jo
pusha
jl
ret
or
dec
jae
(bad)
fstp
cmps
push
or
jle
into
in
js
std
sbb
mov
inc
stc
dec
xchg
jnp
iretw
mov
xor
(bad)
out
add
jb
shl
sbb
xchg
test
mov
test
movs
xor
mov
movs
cmp
es
cmps
scas
test
cmp
pop
sub
fidiv
and
(bad)
arpl
popf
sub
out
adc
mov
and
stos
xchg
imul
mov
ins
std
bound
daa
push
aaa
sbb
inc
inc
adc
imul
push
inc
call
mov
mov
xchg
stos
dec
out
rcr
cmps
out
pop
out
dec
sub
in
movs
loopne
icebp
(bad)
cmp
stos
scas
loope
les
clc
dec
mov
in
xchg
add
repz
jns
arpl
mov
and
sub
push
test
(bad)
push
rcl
sbb
mov
cld
movs
outs
fstp
jmp
imul
adc
daa
sub
dec
cmovnp
out
and
xlat
add
mov
cmc
ror
jne
loop
test
push
movq
mov
lods
fmul
xor
test
lock
(bad)
mov
xor
and
jmp
xchg
daa
ins
push
jb
cmp
dec
mov
out
mov
adc
and
mov
pop
pop
inc
inc
ja
loop
repnz
mov
and
sub
cwde
test
dec
(bad)
inc
bswap
cmc
test
cli
fcomp
sbb
adc
push
jbe
push
(bad)
and
lods
push
mov
sub
ret
dec
call
bound
popa
pop
loop
or
sub
inc
nop
xchg
call
push
cdq
daa
inc
add
popa
sbb
jmp
ret
add
imul
mov
adc
jb
jmp
dec
mov
dec
or
(bad)
fldcw
pop
jge
and
gs
fistp
and
movs
movs
shr
inc
pop
mov
mov
arpl
(bad)
mov
jg
dec
fist
push
adc
and
jno
push
cli
icebp
sub
or
imul
aaa
mov
jae
jne
sbb
cs
sbb
pop
mov
xchg
jge
push
pop
(bad)
aaa
jp
loopne
mov
adc
dec
stos
stc
xchg
fld
adc
add
fyl2x
popf
les
fmul
xor
mov
pop
mov
rol
mov
and
xchg
sub
sbb
cwde
aad
in
std
push
test
pop
xor
dec
push
cwde
call
cmp
push
mov
sub
retf
jo
ins
(bad)
jno
dec
and
xchg
pop
(bad)
retf
bound
jnp
sub
inc
jnp
movs
in
fisttp
inc
cmp
test
sbb
(bad)
inc
xchg
into
fidivr
mov
add
rcr
fsubr
mov
dec
adc
jge
jecxz
mov
mov
push
shr
push
retf
dec
gs
cmc
xlat
aad
retf
scas
out
cmps
inc
mov
adc
test
gs
mov
dec
xchg
jle
cmp
pop
shl
test
cmp
js
add
out
cmp
inc
inc
push
ins
popf
ds
fnstcw
sbb
push
loopne
scas
shr
xchg
pop
mov
pop
pop
out
xchg
dec
mov
lds
or
scas
scas
int3
out
add
sahf
jbe
fiadd
push
addr16
(bad)
push
and
sub
int
out
pop
push
fstp
pop
test
bound
mov
mov
jecxz
jnp
movs
(bad)
xor
xor
test
mov
movs
mov
sub
adc
jmp
jns
xor
sub
pop
pop
test
(bad)
push
dec
mov
ins
jmp
cmp
mov
bound
cwde
xor
sub
dec
or
cmp
mov
(bad)
mov
loope
inc
xor
and
xchg
pop
inc
mov
repnz
push
daa
dec
inc
leave
adc
mov
jl
cmp
xor
cdq
inc
sbb
mov
dec
dec
std
pop
ja
ins
outs
iret
jmp
xchg
adc
mov
mov
xor
ds
test
cmp
push
sub
cld
ror
or
cmp
push
lds
nop
in
test
xor
or
outs
ret
push
loope
add
inc
xchg
fmul
in
xchg
(bad)
icebp
stos
or
push
cdq
jg
bound
(bad)
data16
repnz
pushf
sub
pop
or
nop
jbe
push
xchg
outs
xchg
mov
mov
and
clc
jle
test
pop
mov
cdq
(bad)
pop
cmp
sub
(bad)
or
add
nop
dec
hlt
jmp
push
aas
addr16
dec
ror
dec
push
das
and
hlt
adc
jae
or
mov
in
add
imul
adc
xor
xor
cmc
mov
stos
mov
mov
lds
cmps
push
xchg
ins
dec
test
sub
les
popa
sbb
xor
mov
test
sbb
adc
push
jl
inc
mov
add
ret
loop
mov
cli
cmp
call
shl
sbb
mov
adc
test
push
adc
dec
xlat
xchg
cmp
cmp
test
enter
xor
mov
mov
jecxz
pop
lahf
mov
jmp
and
push
test
imul
test
call
mov
mov
xchg
ja
retf
push
or
or
adc
fisttp
jbe
add
call
popa
lahf
repnz
pop
and
mov
xor
stos
inc
or
jge
push
xchg
mov
xlat
les
popf
or
mov
aaa
pop
(bad)
mov
sahf
xor
test
inc
(bad)
cmp
idiv
std
or
push
push
outs
and
cs
dec
dec
or
pop
ret
in
pop
idiv
call
imul
fdivr
or
add
ins
loop
jmp
and
push
mov
fadd
cmps
inc
(bad)
mov
mov
or
add
cmp
scas
fwait
and
mov
rcr
cs
int3
es
stos
in
mov
mov
fs
inc
xchg
aas
bound
mov
test
lds
pop
ret
das
mov
or
out
add
cmp
lds
scas
mov
leave
xchg
jne
adc
adc
push
pusha
lds
repnz
sar
fist
lock
lahf
retf
inc
and
dec
mov
adc
inc
cdq
adc
ss
jmp
or
and
movsx
lock
dec
div
jge
mov
jae
push
sbb
ret
aam
push
push
pop
loope
daa
ss
adc
cmp
xchg
int
call
xor
jg
lock
int
push
pop
pop
pop
scas
outs
stc
inc
outs
shr
es
imul
out
cwde
pusha
out
sub
mov
aaa
lahf
mov
cmps
pop
or
cmp
cs
aaa
or
int3
add
(bad)
xchg
mov
pop
push
add
aas
das
into
push
cld
mov
lods
repz
push
repnz
add
xor
(bad)
sbb
retf
call
loopne
push
in
ins
adc
loope
cmp
rcr
aad
push
mov
sub
push
dec
int3
(bad)
packsswb
fs
xchg
mov
inc
xchg
xor
xchg
sub
pushf
out
sbb
fbstp
add
ss
pushf
sub
retf
lods
sbb
test
mov
xchg
push
or
inc
sbb
and
xor
(bad)
mov
xor
repnz
xchg
pop
adc
or
ret
pop
pop
mov
sbb
mov
xchg
jmp
and
cmp
aad
and
imul
test
ins
xchg
test
out
mov
mov
(bad)
(bad)
rol
shr
jecxz
pop
jbe
xor
pop
retf
push
movs
sbb
lods
bound
xor
outs
test
add
inc
aaa
into
add
(bad)
scas
adc
jmp
adc
adc
mov
or
add
arpl
outs
pop
(bad)
out
pop
stos
fist
or
cwde
xchg
add
xchg
dec
daa
push
inc
push
cli
hlt
repz
xlat
inc
out
mov
lock
mov
jp
dec
add
push
sar
cmp
mov
lahf
stos
and
xchg
pop
sbb
jle
mov
xchg
dec
rol
pop
mov
call
stc
sar
mov
inc
sbb
sbb
scas
jmp
cwde
div
cmp
loopne
add
dec
outs
cmp
jnp
jb
adc
jp
pop
or
test
aam
pop
jo
lods
jmp
leave
xchg
out
scas
or
push
mov
jb
jno
fs
inc
rcl
popw
sub
repnz
ins
lea
pop
cmp
retf
ror
(bad)
and
inc
lods
lods
mov
loope
xchg
loope
mov
add
(bad)
aaa
mov
neg
je
push
dec
in
cmp
fcom
cmp
mov
rcr
mov
cli
loopne
dec
cli
xor
cld
in
mov
loopne
pusha
stos
test
sbb
sahf
dec
pop
push
call
ror
popf
loope
add
lea
test
neg
xchg
and
xor
stos
loopne
dec
and
xor
pop
pop
add
hlt
sub
mov
jno
sbb
test
outs
dec
mov
outs
push
jnp
mov
lock
(bad)
xchg
ficom
mul
mov
(bad)
mov
sbb
sub
fidivr
pop
pop
sub
adc
xor
mov
iret
xlat
mov
repnz
cmp
dec
inc
cld
cmp
adc
sbb
fstp
fsubp
mov
in
scas
sub
cdq
pushf
out
push
ficom
add
pop
int
jecxz
sbb
xchg
inc
jo
mov
mov
sub
ret
mov
icebp
clc
pop
adc
sahf
jns
sahf
pop
xor
and
pop
sub
add
fxch
fwait
loope
aaa
add
xchg
xchg
mov
lea
mov
idiv
popf
inc
imul
push
dec
jbe
pop
adc
xor
push
clc
je
add
push
jne
jo
aaa
mov
stos
pop
sub
shl
sub
outs
pop
cmps
mov
jbe
sub
jmp
mov
aas
push
imul
jmp
or
pusha
jb
or
out
dec
loopne
cli
call
adc
push
pop
xchg
adc
mov
mov
jb
fistp
fs
lahf
jne
push
out
loopne
sub
fcomp
jmp
add
cmp
in
pop
jmp
push
jg
cs
sbb
call
div
pop
pop
iret
cmps
ja
imul
jmp
out
dec
or
mov
inc
inc
shl
jb
jmp
(bad)
cmp
adc
pushf
es
push
inc
std
add
clc
addr16
sbb
ja
xor
aad
xchg
ins
lea
mov
mov
xchg
xchg
push
enter
clc
lock
push
sbb
fstp
adc
ja
sub
cli
call
loope
iret
je
rol
cdq
scas
daa
gs
cs
jo
outs
fwait
or
add
push
icebp
jo
push
call
mov
add
cli
(bad)
xor
push
popf
in
mov
push
add
test
inc
jnp
outs
leave
adc
fnsave
and
lods
xor
call
dec
mov
imul
pusha
rcl
in
adc
cmp
clc
xchg
jecxz
push
loopne
push
das
xchg
sbb
sbb
(bad)
call
dec
aad
push
out
enter
aad
sub
(bad)
popa
repnz
cmp
adc
cmp
ffree
fidivr
(bad)
in
hlt
push
iret
mov
or
call
cmp
imul
pop
jge
push
pushf
mov
pop
cmps
sti
xor
fild
dec
(bad)
mov
out
in
inc
sahf
add
or
ja
cmp
in
jp
movs
in
fsubr
popa
movs
test
in
ss
push
in
lahf
fdiv
jg
in
sbb
mov
test
sub
fs
loop
inc
cli
sbb
jns
int
cwde
sub
jg
test
nop
mov
repnz
loop
call
sar
jbe
clc
inc
cmp
dec
jp
dec
push
int
fsub
cmp
out
push
sub
mov
dec
mov
sbb
xlat
mov
repz
in
iret
fistp
jo
cmps
lods
fdivrp
das
sbb
ror
dec
fiadd
adc
rcl
pop
es
scas
mov
fstp
mov
push
push
dec
jno
les
or
push
dec
cmp
and
sub
ror
jg
adc
add
punpckhwd
cdq
dec
clc
ja
lods
repz
shl
loop
jnp
mov
bound
lds
aad
jecxz
rcl
sub
and
mov
mov
shl
xor
ret
jmp
inc
or
lods
fmul
ret
sbb
nop
(bad)
aad
xlat
mov
stos
dec
mov
pop
call
fidivr
(bad)
add
clc
xor
bound
inc
jns
cmps
loope
loope
jne
out
in
cdq
push
iret
xchg
iret
add
(bad)
repnz
in
popf
into
(bad)
into
or
mov
inc
mov
pop
jne
out
in
pop
dec
mov
lahf
jle
mov
push
scas
or
adc
jnp
mov
fiadd
and
pusha
lods
les
sub
ret
mov
mov
mov
in
mov
mov
clc
inc
cmps
mov
xor
lahf
add
mov
out
mov
in
fisubr
or
add
int3
xor
xor
vmwrite
rcr
xor
test
enter
ins
outs
fs
xor
jmp
mov
cmp
jb
dec
add
ins
out
mov
cmc
xchg
pop
ret
inc
pop
movs
retf
sahf
and
lds
int
jno
pusha
mov
ins
out
and
add
mov
fwait
pop
push
adc
cmp
nop
xchg
jns
es
mov
mov
mov
(bad)
ret
sbb
pop
nop
pop
aad
xor
mov
lds
push
and
pop
lock
cwde
ror
or
sbb
add
arpl
pop
and
or
stos
lock
adc
sub
push
mov
xchg
fcmovnb
call
sahf
or
pop
cmp
ins
adc
jmp
test
dec
and
int3
inc
fidivr
ficom
inc
scas
out
cmps
jbe
push
or
je
loopne
push
(bad)
mov
cmp
into
jge
push
or
jle
push
dec
daa
inc
scas
or
jb
or
adc
jp
loope
adc
mov
xchg
dec
dec
push
(bad)
loopne
xchg
xor
cmp
inc
hlt
int
outs
js
mov
outs
loopne
std
fist
cmc
and
sbb
cmp
ins
in
and
daa
test
jb
sbb
and
in
add
push
ja
pop
shl
pop
out
xchg
cmp
lds
dec
xchg
cmp
das
mov
aaa
mov
and
sbb
fwait
ss
inc
shl
cmps
stc
cmp
lahf
leave
xchg
or
sbb
pop
jle
movs
sahf
(bad)
push
test
es
xor
or
ret
mov
xor
scas
inc
pusha
rcr
rcl
aad
jmp
cmp
lds
mov
test
add
jg
sub
mov
js
nop
xchg
push
add
pop
push
xchg
shl
les
push
pop
mov
inc
cdq
xchg
sub
and
dec
(bad)
and
sti
inc
mov
daa
jnp
push
sub
or
loope
xor
sub
push
shl
jmp
jne
and
cmp
xor
xchg
cmp
leave
retf
mov
or
stc
mov
cld
inc
pslld
sbb
xor
fistp
rcr
push
push
jmp
(bad)
(bad)
cwde
adc
inc
adc
push
sahf
test
pop
sbb
rcl
enter
lds
jg
mov
or
ins
ins
out
stos
or
fst
add
(bad)
hlt
fisub
mov
sub
shl
movs
sbb
imul
xor
std
xchg
xor
mov
lahf
jmp
mov
shr
daa
jmp
pop
cmp
xchg
daa
dec
imul
pop
addr16
xchg
(bad)
cld
addr16
pcmpgtb
js
pop
int3
add
mov
pop
sub
sbb
xchg
nop
mov
test
adc
popf
push
test
push
ror
scas
retf
(bad)
out
and
mov
sar
pop
scas
mov
fcmovnb
test
push
pop
adc
adc
adc
clc
dec
jl
inc
stos
pop
jp
or
stc
and
inc
xor
call
pusha
sub
sbb
add
jns
cmps
push
(bad)
jle
jb
pop
xor
push
jl
shr
daa
sbb
popf
add
out
pop
outs
stc
pop
jno
jle
adc
fstp
inc
cmp
mov
add
jle
fwait
jns
jb
je
pop
pop
imul
lahf
jno
sar
mov
mov
adc
xchg
xchg
ret
and
fnstcw
ds
inc
add
adc
pop
mov
adc
mov
leave
inc
adc
jns
xchg
cmp
mov
pop
gs
or
sub
jecxz
pushf
rol
sti
mov
test
lea
pop
stos
or
cmp
retf
aaa
js
ret
mov
dec
or
xchg
mov
dec
(bad)
pusha
jns
xchg
sahf
loop
jae
shl
sbb
adc
jmp
ss
mov
into
sub
or
hlt
dec
xchg
mov
(bad)
nop
(bad)
dec
mov
(bad)
movs
sbb
mov
cwde
add
inc
scas
adc
in
test
lds
(bad)
jb
aaa
ss
or
jl
add
sbb
test
pop
cmp
cmp
in
nop
push
dec
out
sbb
mov
(bad)
xor
or
cmp
xchg
dec
hlt
outs
sub
lods
cmp
jns
gs
pop
or
cdq
xor
jo
aam
dec
out
js
cmp
adc
in
pop
popa
ret
dec
fldcw
(bad)
fcmovb
outs
push
jle
scas
repz
cmp
cmp
or
mov
add
fs
and
fisubr
loopne
lahf
mov
inc
add
pop
pop
mov
(bad)
sub
and
fwait
or
and
pusha
and
dec
out
sub
into
fldenv
mov
inc
push
push
jecxz
out
cdq
lea
and
add
add
xor
inc
in
cmp
div
and
fst
fmul
pop
out
sbb
das
aas
jae
dec
sub
jne
push
cdq
mov
out
push
mov
mov
mov
mov
adc
or
sbb
sahf
(bad)
outs
int
fist
fisubr
pop
out
sub
xlat
retf
fwait
mov
push
jmp
push
pushf
aas
(bad)
fcmovnbe
xor
xchg
xchg
sahf
cmc
sbb
movs
or
mov
mul
pop
sub
and
das
mov
jmp
xlat
ss
add
mov
push
push
cmp
popa
outs
outs
mov
dec
mov
out
dec
dec
js
xlat
leave
or
pop
arpl
xchg
call
daa
pop
div
pusha
ret
dec
adc
inc
inc
dec
push
retf
es
or
xchg
mov
shl
cmp
rol
jno
mov
and
out
shl
adc
scas
stc
adc
inc
aaa
pop
adc
fimul
popf
cmp
mov
xor
retf
mov
and
cwde
mov
xchg
movs
push
ret
dec
cdq
repz
test
movs
leave
(bad)
cli
iret
shr
adc
fstp
fwait
push
aas
cmp
clc
les
inc
mov
or
dec
mov
cmp
stos
lods
aaa
jp
cmp
sbb
hlt
xchg
jne
mov
or
inc
fld
xchg
shl
ss
adc
pop
mov
adc
movs
or
test
push
dec
stos
out
jne
push
ins
mov
dec
sub
jg
shl
cmp
es
jecxz
sbb
xor
jns
adc
repnz
pop
jecxz
adc
xor
xchg
iret
or
and
mov
ins
mov
mov
push
sbb
cmp
test
hlt
xor
(bad)
in
ins
or
pop
sub
cmps
mov
jecxz
xchg
cmps
add
mov
adc
adc
pushf
leave
add
arpl
pop
add
rol
loopne
cmps
fld
mov
mov
fwait
cmps
arpl
dec
sub
xor
pop
pop
test
(bad)
xchg
and
sahf
inc
fcomp
stc
cdq
ficom
fisttp
xchg
fisttp
sahf
or
xlat
stc
adc
or
pop
push
std
out
daa
cli
push
jno
dec
pop
sub
inc
xor
xor
jp
jns
push
fsub
push
lods
mov
popf
adc
enter
adc
shr
xchg
(bad)
(bad)
sti
inc
rol
(bad)
jbe
mov
out
aam
jb
jmp
shl
jb
mov
loope
lods
or
mov
stos
push
daa
add
sub
jae
test
out
div
inc
xchg
ds
push
pop
adc
jp
pop
mov
pop
jl
lock
es
outs
fisub
xor
fisubr
dec
dec
push
rcl
fidivr
f2xm1
fucomi
xor
outs
mov
(bad)
es
xor
cli
ror
out
mov
js
pop
xchg
test
dec
in
scas
dec
dec
repz
sahf
les
stos
jmp
adc
mov
sub
shl
sbb
dec
movs
and
retf
sub
inc
data16
je
or
cs
xor
mov
cmp
fisubr
adc
add
scas
cdq
and
cmc
mov
push
(bad)
jmp
scas
dec
out
add
xchg
int
out
pop
adc
fwait
jne
out
inc
repz
test
fs
inc
ins
add
jne
or
xchg
or
retfw
add
push
sar
jmp
mov
retf
cmp
repz
push
jo
sub
ja
shl
in
push
push
pop
jg
mov
or
push
xchg
jns
nop
xor
fucompp
push
jecxz
in
sub
aam
push
adc
(bad)
sub
mov
add
adc
xor
sub
enter
retf
adc
lods
pop
outs
xchg
inc
add
fwait
push
or
and
shl
or
mov
ja
mov
mov
ins
inc
ins
or
btc
sbb
into
test
fisubr
adc
mov
mov
scas
icebp
push
xor
mov
enter
adc
aam
sbb
sbb
fwait
pop
dec
push
cmp
jge
icebp
je
retf
dec
outs
(bad)
mov
mov
popa
inc
ja
ds
les
push
(bad)
ja
xor
addr16
push
lods
sub
cmp
sar
ss
mov
in
add
push
je
imul
gs
pop
mov
cmp
lea
retf
mov
mov
imul
mov
retf
push
retf
imul
push
cmp
hlt
aam
sub
and
mov
inc
inc
shr
pop
dec
xlat
test
pop
mov
rol
xchg
mov
push
jb
mov
std
fsub
jg
lds
popf
hlt
ss
lods
mov
jmp
cmp
sub
rcl
mov
dec
inc
sub
add
sbb
xlat
mov
mov
adc
lea
addr16
fs
punpckhbw
and
inc
test
cli
xchg
mov
fsubr
xchg
add
cmp
push
pop
cmps
imul
push
ret
repz
scas
sti
leave
mov
add
jmp
xchg
mov
cs
jb
test
jge
xor
xchg
out
mov
cmp
fidiv
shl
in
test
sbb
or
scas
sub
into
xor
xor
push
movs
leave
mov
dec
std
je
out
lock
push
(bad)
in
push
rcl
or
retf
mov
and
imul
test
add
enter
sar
aad
fldcw
xor
and
lods
mov
jno
jns
bound
repz
inc
push
push
xchg
inc
adc
and
addr16
push
add
setae
push
call
cmp
and
cmp
sub
dec
fsubrp
aas
and
not
daa
lods
loope
inc
pusha
mov
test
not
es
push
push
xor
cmp
pop
inc
xor
fs
mov
and
dec
call
cmp
shl
retf
sub
aaa
dec
stc
arpl
movs
pop
leave
inc
out
jmp
add
xchg
jne
and
cmp
out
push
pcmpgtd
or
neg
popf
add
outs
xor
push
sbb
call
in
mov
fisttp
(bad)
je
xor
(bad)
mov
loopne
or
rol
and
push
(bad)
mov
dec
(bad)
imul
pop
lds
repz
lahf
pop
fidivr
aas
dec
repz
leave
test
ss
popf
inc
out
add
cmps
outs
sub
adc
mov
mov
add
ss
dec
js
ins
push
push
lock
pop
movq
ja
mov
mov
mov
xor
adc
retf
jl
es
mov
lds
out
mov
sbb
jno
in
inc
xchg
iret
idiv
dec
xchg
dec
xchg
sub
push
out
mov
enter
pop
sar
mov
push
scas
and
fcmovbe
or
or
data16
xrelease
add
(bad)
leave
cmp
mov
repz
mov
dec
jle
sbb
or
cs
inc
push
(bad)
sbb
jne
cs
les
fdiv
push
sti
mov
pcmpeqw
std
jmp
mov
movs
adc
out
clc
(bad)
fadd
sub
stos
sbb
out
jmp
outs
xor
or
sti
(bad)
add
or
hlt
js
jmp
pop
xor
(bad)
inc
addr16
mov
mov
add
push
loope
sar
test
inc
outs
fwait
jo
mov
mov
daa
pusha
(bad)
rol
(bad)
jno
cmp
sub
js
(bad)
dec
mov
xor
sub
(bad)
push
push
cmc
pop
fisubr
outs
jae
push
ins
cmp
mov
pop
push
leave
pop
fmul
push
aaa
cmps
test
sbb
imul
sbb
mov
mov
cmp
scas
jp
or
sbb
add
sub
pop
cmp
jnp
or
in
inc
daa
cmps
add
cmp
dec
mov
int3
movs
mov
mov
(bad)
and
cmc
nop
jne
not
outs
imul
jno
mov
push
les
mov
je
pop
sahf
rcr
mov
adc
adc
std
lods
dec
test
(bad)
into
mov
aam
gs
mov
lods
outs
mov
popf
jae
std
mov
mul
iret
je
rol
iret
pushf
xor
scas
int3
xor
or
int
xchg
sbb
push
xlat
pop
xchg
retf
sbb
mov
sbb
xchg
pop
inc
push
push
cmp
pusha
arpl
dec
mov
adc
out
sahf
out
ret
mov
aam
mov
push
mov
jmp
pop
inc
arpl
loope
(bad)
out
fs
adc
cmps
js
cmp
retf
movs
jb
or
imul
cmp
vmovaps
fst
neg
int
jno
xor
lods
jp
ret
mov
mov
pop
ins
dec
outs
mov
arpl
mov
ss
cmps
jne
ret
sub
lods
xor
lea
repnz
inc
aaa
cmp
push
scas
xchg
in
into
hlt
sub
cwde
popf
xchg
inc
pop
adc
xchg
out
ins
dec
jle
fldenv
addr16
sub
call
sub
adc
sar
or
or
sub
mov
cwde
out
retf
(bad)
call
cld
dec
cmp
outs
sbb
ret
add
xor
add
or
inc
sbb
cmp
cmp
sbb
xchg
xor
icebp
ja
jmp
cwde
push
jns
icebp
int3
test
imul
int
out
lods
ds
pop
popa
stos
mov
adc
pop
mov
lea
cdq
cs
loope
ins
pop
push
jb
cwde
push
in
push
dec
dec
leave
xor
loop
jmp
dec
stos
or
push
jns
outs
push
ss
inc
fadd
jl
push
adc
or
retf
push
sar
sub
sbb
out
test
mov
jl
jbe
lea
mov
xchg
cmp
push
fisub
into
sbb
cli
pop
xchg
mov
push
mov
hlt
lahf
mov
sbb
adc
push
sub
xchg
inc
mov
dec
pusha
push
cmp
jmp
pushf
(bad)
pop
outs
js
jb
jl
test
test
imul
fnstenv
int3
in
shl
in
adc
leave
xchg
in
adc
or
push
popa
xchg
fs
nop
rcr
outs
das
mov
jmp
cmp
(bad)
cwde
cmp
jbe
cmps
add
or
cmp
inc
fild
cmp
mov
mov
mov
popf
mov
sahf
fnstsw
call
loopne
(bad)
js
cmp
fldz
dec
and
cmovl
push
xor
mov
ins
ret
xchg
jnp
ds
scas
rol
push
nop
push
ds
int
pop
retf
xor
ret
scas
clc
mov
arpl
lock
mov
xchg
cli
and
xchg
xor
push
xchg
stc
sbb
call
add
outs
add
test
add
mov
xor
sub
mov
enter
repz
mov
push
leave
mov
xchg
inc
sbb
add
pop
retf
xchg
xlat
aam
pop
psubw
push
inc
fisttp
rcl
test
stc
fnstcw
mov
(bad)
dec
shr
xor
ins
jl
cld
push
aad
mov
fwait
mov
aaa
pop
push
icebp
sbb
leave
push
or
ja
imul
xchg
aas
mov
movs
bound
pop
out
jmp
dec
fidivr
dec
pushf
fnstsw
sub
imul
pop
outs
inc
cmp
scas
push
scas
in
or
icebp
aad
ret
clc
jno
adc
or
and
mov
cdq
hlt
inc
pop
mov
in
es
adc
ror
cs
jmp
imul
cmp
leave
mov
mov
out
int3
cmps
xor
inc
inc
dec
mov
cmc
loope
xchg
dec
arpl
sbb
gs
mov
push
xchg
or
xor
shr
mov
bound
aas
outs
ins
push
(bad)
dec
stc
nop
jp
or
jo
mov
or
dec
aam
ins
cmp
adc
lds
xchg
cmps
push
and
ja
pop
sbb
fnstcw
xor
sar
test
pop
sub
lods
inc
sub
pushf
inc
pop
inc
mov
js
push
adc
popa
sub
retf
stos
pop
sar
add
xchg
mov
out
aam
aad
xor
jle
mov
xchg
mov
jb
jns
xor
pushf
adc
daa
data16
jmp
leave
pop
jge
imul
cmp
sbb
sbb
(bad)
int
cdq
pop
or
fs
leave
mov
(bad)
lods
inc
out
adc
and
inc
adc
popa
fisub
dec
inc
sub
cmps
outs
addr16
(bad)
sti
shr
shl
icebp
pop
xlat
bswap
mov
xchg
xor
xchg
daa
test
xchg
mov
push
xor
mov
movs
mov
mov
inc
je
int3
jl
or
mov
add
in
ins
or
test
mov
scas
add
les
xchg
jo
mov
push
jmp
sbb
push
(bad)
and
test
inc
mov
mov
pusha
ins
dec
mov
data16
(bad)
cmovl
cmp
scas
out
xchg
push
cmp
ins
or
sub
fisub
jns
mov
push
ret
jb
cmp
aaa
pop
push
jge
inc
pushf
popf
int
push
test
stc
stc
inc
test
pop
ja
fs
loopne
fs
test
aam
mov
push
ror
nop
mov
push
sar
add
pop
call
xchg
stos
cmp
repz
ret
cmp
data16
mov
and
jmp
lahf
adc
sbb
sub
or
test
in
xchg
test
movaps
add
dec
shl
inc
sub
and
inc
mov
adc
popf
(bad)
mov
add
scas
ror
sub
mov
loope
cmc
inc
pop
or
xor
xor
popa
inc
push
cmps
xor
or
sbb
adc
fidiv
sbb
inc
mov
dec
or
xor
sub
push
jge
xchg
dec
jmp
and
inc
stos
js
jp
cmps
push
lahf
sbb
sub
es
out
stos
ins
dec
jbe
xchg
sbb
adc
mov
mov
jecxz
push
or
inc
fisttp
push
and
int3
cmp
inc
xchg
adc
dec
data16
inc
mov
jb
pop
mov
fisttp
mov
mov
mov
push
out
movs
movs
adc
adc
cmp
pop
dec
jp
inc
sbb
sbb
adc
stc
sub
loope
pop
inc
jp
iret
inc
js
scas
(bad)
mov
cmps
xor
adc
or
sahf
enter
out
es
daa
cli
test
test
ds
pop
and
inc
mov
dec
and
shr
lahf
in
mov
arpl
shl
sub
push
or
or
xor
clc
ins
xchg
pop
repnz
stc
aas
and
pop
push
xchg
mov
dec
fdivr
ins
scas
push
call
cmp
fidiv
imul
adc
scas
add
and
push
lock
test
movs
cli
or
or
in
mov
jecxz
mov
dec
cmps
sub
lock
jbe
mov
add
fstp
or
push
jne
sub
inc
mov
pop
sub
cmp
mov
inc
pop
call
in
sahf
int
test
push
and
cdq
out
rol
idiv
(bad)
xchg
lea
and
jecxz
sti
sub
in
pop
xlat
mov
rol
ins
push
or
dec
pop
repnz
sub
(bad)
and
bound
int
scas
adc
pop
xor
test
iret
pop
pop
das
shl
dec
jne
(bad)
fnstenv
ins
test
or
retf
js
nop
in
mov
adc
(bad)
mov
mov
fisubr
mov
inc
mov
pop
cmp
nop
mov
xchg
cmp
sbb
mov
out
mov
sub
cmp
call
lods
shl
dec
jp
push
cs
jmp
inc
sahf
wbinvd
call
arpl
sub
retf
jmp
push
sbb
push
stc
mov
int3
push
xor
ins
hlt
dec
repz
inc
mov
or
jmp
pop
dec
daa
inc
mov
enter
js
xor
stos
imul
push
fndisi(8087
jge
adc
mov
jne
xor
jae
and
mov
adc
movs
xor
mov
jmp
popf
inc
ins
adc
(bad)
fst
leave
cs
dec
jecxz
sub
xor
inc
push
icebp
xor
sbb
add
xor
mov
in
js
cmp
xchg
pop
pop
in
adc
mov
mov
push
fmulp
xchg
inc
dec
mov
dec
sar
or
push
popa
xlat
outs
mov
and
xor
and
neg
cs
js
xchg
dec
repnz
cwde
les
and
jnp
movs
ja
push
add
add
repz
xchg
std
(bad)
shl
or
stos
mov
xor
sub
inc
xchg
iret
stos
aad
lds
jbe
enter
cld
movs
xor
mov
ins
(bad)
dec
adc
(bad)
pop
neg
lahf
mov
pusha
mov
xchg
outs
in
enter
gs
out
mov
das
jp
push
inc
int3
aas
push
jns
jo
cmps
adc
ja
add
pop
and
xor
ja
repnz
fild
loop
push
xor
loopne
push
sub
out
add
or
sub
test
and
ficom
push
outs
sbb
lods
mov
dec
dec
sar
jbe
outs
bswap
call
cmps
mov
xchg
cmp
sbb
push
sbb
loopne
xchg
xor
sbb
add
push
repnz
jg
fiadd
mov
retf
xchg
int
xchg
stc
loopne
cmc
sub
mov
stos
push
sub
lds
mov
ins
es
xor
sti
jbe
shl
(bad)
fld
xlat
ja
shl
movs
ror
cmp
cmc
aad
push
mov
dec
mov
in
push
jg
mov
dec
mov
xchg
std
or
push
pop
and
jmp
mov
repnz
(bad)
and
cmp
dec
cmps
addr16
jle
outs
mov
test
aam
mov
cdq
push
cld
test
and
mov
mov
outs
sbb
dec
fnstenv
push
movs
cmc
jle
dec
xor
bnd
add
mov
push
jle
arpl
mov
in
aam
or
mov
dec
jle
and
imul
mov
mov
test
daa
cld
xchg
fwait
mov
je
ror
push
pop
das
cld
mov
cdq
pop
mov
add
fistp
test
out
movs
or
mov
in
rol
test
je
jns
mov
repnz
jle
cli
rcr
les
cmp
sbb
das
test
push
sbb
(bad)
paddd
rcl
cmp
in
jmp
cmp
mov
push
das
mov
into
cmp
fnstenv
fnsave
lock
mov
mov
and
into
jns
call
xchg
lods
int3
dec
xor
sub
addr16
popf
sbb
fsubr
pop
inc
dec
cmp
or
mov
test
cmp
dec
fwait
lods
pop
in
frstor
into
lahf
and
xchg
dec
jo
xchg
(bad)
and
mov
je
ret
fidiv
jb
push
les
push
test
add
(bad)
sub
push
dec
cmp
aam
mov
movs
leave
pop
int
int
rcr
cs
rol
cmp
fucomi
push
pop
mov
jo
cmp
lock
popa
movs
jbe
shl
and
loop
fistp
cwde
jmp
jg
sub
cmp
adc
int
out
stc
sbb
repz
adc
jl
in
jb
test
xchg
xchg
push
fsub
out
outs
and
inc
cmp
sub
xchg
jp
mov
scas
neg
jecxz
jne
enter
call
push
cmp
xor
inc
call
sbb
xchg
mov
jecxz
push
mov
xor
stos
in
das
mov
mov
dec
clc
cmp
aad
test
pop
jne
(bad)
ror
add
ss
mov
mov
xchg
dec
adc
enter
mov
pop
pop
stos
shr
jno
arpl
outs
shl
sbb
test
aaa
jb
mov
dec
xor
add
mov
int
cmp
dec
nop
rcr
xor
jnp
sub
lea
rcl
sub
jg
xor
es
mov
(bad)
sbb
shl
mov
les
cmp
sbb
test
adc
push
das
push
pop
push
pusha
cmp
ds
imul
pop
icebp
pop
inc
(bad)
repnz
bound
pop
mov
fimul
inc
sbb
push
push
daa
ins
mov
in
jecxz
fild
mov
(bad)
xchg
int3
cli
lods
and
xchg
rcl
xchg
sbb
mov
iret
enter
dec
enter
adc
xchg
ss
pop
std
xchg
std
fcomp
imul
adc
outs
clc
lds
(bad)
pop
fwait
push
xchg
cli
cmps
in
push
cmp
push
stc
xor
cmc
cmp
push
es
mov
cmp
push
outs
pop
leave
in
and
sub
cdq
cmp
sub
stc
imul
adc
xor
or
pop
push
fs
adc
mov
xor
scas
push
push
(bad)
push
bound
mov
in
(bad)
cmp
fwait
scas
adc
test
(bad)
test
lea
ret
sub
cmp
fld
retf
stc
aam
sub
push
stc
ror
mov
xchg
sbb
loop
nop
cwde
sahf
(bad)
repz
mov
jmp
stos
shl
inc
cmp
repnz
add
data16
aad
mov
inc
xor
into
test
cdq
in
sti
pop
push
loopne
loope
imul
jb
jecxz
add
ss
mov
mov
mov
(bad)
or
xor
shr
jmp
jg
mov
scas
dec
or
sub
sbb
add
in
cs
jo
push
and
mov
fdivr
(bad)
pop
sub
add
shr
xlat
popf
in
inc
mov
test
jmp
pop
ds
cmc
jo
(bad)
cmp
pop
or
std
sbb
sub
cdq
adc
dec
addr16
mov
es
mov
sbb
je
mov
pop
and
xchg
cmc
inc
pop
in
loopne
mov
jns
sub
sub
jo
cmp
out
neg
mov
fstp
adc
lock
stos
push
mov
and
or
lods
sbb
sub
xchg
push
or
xor
jne
sar
in
and
(bad)
pop
(bad)
in
cdq
movs
outs
pop
ds
jbe
or
scas
jno
outs
adc
mov
icebp
pop
mov
inc
lock
pop
xor
fisttp
lods
sbb
sbb
and
and
xchg
stos
stos
aaa
jb
pusha
inc
mov
jl
inc
aaa
(bad)
jmp
pop
rcr
std
inc
out
imul
mov
jecxz
or
mov
jecxz
xchg
add
sbb
retf
jle
sbb
mov
push
mov
gs
out
or
cmp
or
mov
popf
adc
cmp
in
hlt
inc
cmp
bound
push
xor
repnz
clc
fwait
sahf
dec
cmp
mov
mov
inc
or
lods
push
jle
inc
xchg
cmp
loopne
fs
inc
repnz
outs
cmc
ud2
stc
repnz
add
movs
jl
push
inc
mov
(bad)
aam
inc
cmps
(bad)
xlat
out
sbb
daa
mul
mov
add
test
test
mov
das
sub
cmps
mov
push
je
hlt
fidivr
ins
jge
pop
push
mov
and
repnz
and
ins
out
pusha
lea
push
inc
std
iret
pop
sbb
lods
add
mov
jmp
jp
(bad)
enter
sbb
sub
fdivr
xor
jne
add
adc
jmp
xchg
into
push
add
jle
sub
ja
in
movs
dec
cwde
int3
xlat
cmp
jg
aad
(bad)
(bad)
aad
and
retf
stc
inc
imul
jnp
outs
cmp
dec
sub
loop
mov
sbb
loop
mov
das
cwde
ficomp
or
popa
adc
cmp
xchg
rcl
clc
xor
je
inc
data16
jge
(bad)
into
mov
mov
retf
mov
and
push
sub
lods
fsubr
inc
ja
imul
stos
mov
imul
pop
dec
mov
jge
add
lock
gs
push
cmp
xor
cmp
dec
cmp
aad
jne
test
inc
inc
shl
sub
mov
rcl
cwde
xchg
pop
cmc
sbb
jnp
mov
ds
jb
shr
and
pushf
jno
dec
or
imul
mov
mov
mov
adc
cmps
les
imul
arpl
ins
popa
mov
xor
xchg
cli
xchg
push
xor
xchg
(bad)
pusha
test
jb
aam
push
cdq
div
outs
int
fdivr
mov
push
stos
and
(bad)
or
in
xlat
popf
int
icebp
pop
fadd
sub
stos
cmp
mov
in
and
shr
mov
retf
cmp
lahf
cld
jo
(bad)
in
test
popf
(bad)
xchg
es
mov
aaa
outs
dec
inc
ins
mov
dec
inc
sub
les
gs
mov
test
xor
mov
mov
repnz
sbb
hlt
push
call
out
pop
ror
mov
movs
out
rcl
pop
in
fld
or
sub
xchg
cmp
into
pop
or
int
xchg
cmp
jae
xchg
popf
sahf
jmp
xor
sub
fucomip
push
int
lds
(bad)
(bad)
std
jbe
sub
movs
aas
xor
pop
mov
out
sbb
sahf
add
adc
das
outs
enter
cmps
jmp
xchg
aas
and
movs
sti
sbb
je
jmp
mov
cmp
sbb
inc
cmps
das
sahf
lahf
pop
adc
sbb
stos
xchg
dec
cli
neg
jl
nop
jp
shl
fcom
call
cdq
fwait
push
test
dec
push
add
test
test
stos
cs
out
adc
in
sub
xchg
mov
gs
pop
mov
dec
ja
mov
sub
fist
dec
sbb
(bad)
and
jns
jno
sbb
mov
mov
sbb
leave
xchg
cmps
dec
dec
sbb
stos
mov
(bad)
pop
sti
test
mov
add
call
jecxz
adc
aaa
mov
ret
lea
out
push
push
xchg
pop
shr
mov
mov
icebp
js
outs
push
mov
cmp
fs
out
call
enter
adc
in
jo
mov
xor
outs
mov
jp
pop
pushf
xlat
sbb
jno
mov
hlt
xchg
push
call
gs
popf
jg
cs
and
mov
cmps
repnz
nop/reserved
es
add
test
mov
mov
sbb
int
stc
ret
sar
cli
xor
xor
popf
sbb
test
cmp
jo
loope
push
mov
leave
inc
inc
dec
pop
rcr
sbb
dec
iret
add
pop
out
mov
add
add
or
mov
seta
clc
cmp
out
nop
hlt
loopne
fnstsw
daa
jle
jmp
mov
push
push
mov
xor
sbb
cdq
push
enter
ja
or
fwait
xor
lods
movs
jno
mov
arpl
jle
jb
rcr
icebp
sahf
pushw
inc
sub
mov
sub
out
dec
pusha
lea
pop
out
or
and
test
mov
adc
test
sub
jge
mov
mov
scas
mov
xor
mov
sbb
adc
jle
pop
test
jmp
pop
icebp
push
sub
inc
pop
adc
adc
jbe
ffreep
pop
sub
pop
je
inc
lods
add
adc
movs
mov
push
ja
sub
(bad)
test
js
sbb
sbb
cmp
adc
mov
sub
dec
sub
xchg
or
adc
cmp
test
jno
xor
xchg
je
mov
(bad)
rol
xchg
mov
pop
scas
gs
add
dec
xor
adc
or
mov
pusha
movs
pop
adc
mov
add
loop
pop
ret
xchg
sbb
mov
ins
lock
mov
les
call
js
ins
and
inc
jnp
ficom
mov
out
sbb
xor
(bad)
jle
mov
sbb
pop
in
les
pop
(bad)
outs
stc
mov
in
or
loopne
mov
xor
in
and
lea
mov
or
mov
dec
pushf
mov
pop
neg
xor
add
sahf
sbb
in
scas
stc
inc
retf
or
idiv
mov
pushw
add
stos
dec
dec
adc
cmps
cmp
sbb
or
xchg
inc
dec
ss
imul
cmp
retfw
or
pusha
fstp
push
cmps
push
xchg
push
pop
sbb
sbb
push
jnp
ds
and
(bad)
les
out
inc
or
jl
mov
dec
inc
add
jnp
loop
add
cmp
inc
shl
lods
pop
gs
add
pop
ficomp
ret
cld
movs
scas
inc
push
outs
lds
xchg
jge
leave
rcr
arpl
mov
pop
sbb
ror
pop
lahf
test
xchg
rcr
in
jns
cwde
xchg
test
xchg
lock
mov
jl
mov
and
jge
outs
imul
mov
or
lds
adc
cmps
nop
rcr
ss
xchg
arpl
ret
mov
cmp
retf
dec
dec
(bad)
out
rcl
jns
movs
mov
mov
adc
popa
push
inc
mov
call
and
cmp
xchg
jo
xor
scas
fld
int
sub
cmps
pop
adc
clc
push
and
aam
cmps
enter
sub
cmc
out
jl
dec
int3
(bad)
movs
fsubr
into
cmp
ds
sti
and
xor
and
fs
mov
mov
push
mov
dec
mov
call
inc
add
imul
xchg
or
jge
xor
mov
leave
and
clc
mov
jbe
sbb
rcl
cli
(bad)
(bad)
rol
int
sbb
(bad)
outs
mov
jle
jne
sub
mov
push
fwait
or
push
and
repz
(bad)
sub
mov
neg
call
mov
push
lds
fistp
dec
fnstcw
cmps
cmp
cmp
jle
shr
cdq
outs
mov
or
and
arpl
xchg
fidivr
ss
xchg
das
push
push
clc
rol
mov
and
sub
mov
shr
dec
jb
movs
dec
jmp
iret
cmp
cwde
xor
pushf
and
int3
std
jo
mov
sub
pop
call
inc
and
stos
in
loope
jecxz
into
jbe
xchg
outs
arpl
inc
inc
shl
xchg
push
js
xor
or
sub
mov
in
arpl
and
dec
add
sbb
push
outs
push
iret
into
xchg
leave
fbstp
adc
inc
mov
lods
lock
rol
push
mov
(bad)
ror
push
sub
push
or
push
push
int
loop
repnz
inc
or
xor
mov
push
xchg
jp
leave
push
sub
outs
scas
mov
mov
lock
mov
or
aam
dec
xor
mov
clc
pop
outs
fild
outs
out
cld
outs
mov
push
sbb
sub
sbb
mov
lds
stos
add
lahf
cdq
cmp
sbb
in
pop
hlt
inc
into
xor
test
mov
leave
outs
in
mov
mov
mov
test
inc
retf
cmps
or
add
mov
(bad)
xchg
loope
xchg
push
or
jle
sub
mov
mov
xlat
sub
bnd
aas
retf
(bad)
or
push
aad
ds
(bad)
pop
push
loopne
pop
cmp
ss
shl
sub
xlat
push
mov
dec
enter
cmps
sub
pop
test
mov
arpl
jecxz
outs
sbb
mov
test
jg
sbb
clc
mov
lods
mov
xor
movs
das
xchg
mov
stos
mov
adc
jne
in
add
mov
movaps
out
fs
loopne
push
lods
daa
sub
push
push
jmp
xor
inc
or
sbb
loope
gs
aam
dec
inc
(bad)
xor
cmc
xchg
pop
fs
inc
and
inc
push
cmp
lods
dec
mov
mov
add
mov
sbb
imul
stc
sbb
popa
pop
fsubr
int3
xor
rep
addr16
add
sbb
dec
jne
mov
sahf
mov
loop
add
fldcw
sbb
sbb
mov
and
fiadd
dec
push
fisubr
jp
outs
stos
adc
push
iret
sbb
mov
arpl
rcl
out
dec
push
xlat
inc
sti
jo
gs
call
mov
pop
sbb
pop
idiv
out
and
push
ds
rcl
mov
xchg
stc
shr
cdq
cs
xor
out
fild
nop
sbb
mov
test
push
jmp
and
das
xchg
add
cwde
ins
adc
loop
push
or
jb
int3
inc
inc
mov
gs
leave
mov
and
jle
fcomp
mov
xchg
mov
mov
inc
mov
mov
push
add
lods
sahf
xor
inc
fld
scas
js
mov
stos
jb
cld
inc
(bad)
push
jne
jae
in
test
dec
add
lods
jp
dec
mov
mov
mov
outs
sbb
cmp
add
das
shr
retf
jle
push
sbb
inc
daa
bound
cmps
(bad)
xchg
int3
sub
add
jo
leave
mov
in
pushf
int
out
das
fisubr
push
xor
mov
lock
(bad)
sbb
out
fwait
push
pop
sub
and
daa
sub
stos
cmp
ret
mov
imul
push
or
dec
das
das
aad
(bad)
hlt
adc
or
jle
ss
or
ficomp
inc
mov
push
mov
inc
dec
fmul
mov
xor
and
in
and
les
mov
aas
stos
cld
mov
push
sahf
pop
push
scas
(bad)
(bad)
sbb
nop
mov
mov
ds
imul
loop
pop
pop
xchg
into
mov
lods
jb
mov
arpl
jle
sub
push
sub
call
adc
clc
dec
repnz
fwait
in
pop
retf
xor
aad
adc
stc
cmp
enter
aam
fs
push
data16
aas
sub
cmp
or
cdq
xor
mov
jmp
mov
cmps
jle
sub
and
push
inc
fadd
pop
jge
jbe
dec
mov
xor
and
mov
add
add
out
lods
arpl
in
popa
inc
push
xchg
pop
add
out
pop
sub
inc
lahf
cli
mov
or
push
xor
push
inc
dec
int
lds
imul
push
inc
mov
inc
shl
or
jo
jae
adc
out
mov
imul
adc
and
push
mov
mov
mov
push
sub
push
pop
ins
mov
aam
cld
sti
rcl
test
ds
inc
pop
pusha
mov
arpl
inc
daa
mov
dec
cmp
cmp
pop
stos
xchg
nop
lahf
pop
sbb
hlt
icebp
dec
out
or
and
jp
xchg
cmp
inc
mov
cdq
and
push
xor
fiadd
adc
push
xchg
mov
(bad)
sbb
xchg
inc
mov
movs
stos
push
ds
mov
cmp
jmp
cmp
das
xchg
push
int
popa
je
es
mov
(bad)
mov
push
xlat
mov
cmp
adc
iret
shl
xchg
fndisi(8087
loope
ficomp
sbb
and
jns
xor
mov
loopne
lahf
dec
mov
pop
sub
cmps
je
mov
jae
push
test
xchg
cmp
sar
inc
push
jle
add
mov
push
ds
mov
popa
sub
pop
pop
xor
int
or
jnp
mov
in
cmps
stos
inc
cmp
imul
out
cmps
out
or
xor
jp
push
dec
ins
add
cmc
imul
and
jmp
stos
or
loopne
popa
xor
dec
out
adc
inc
test
jmp
icebp
cmp
cmp
mov
mov
std
retf
inc
popa
fld
imul
add
leave
sbb
xchg
bound
stos
mov
jmp
outs
xchg
push
dec
xchg
lea
push
je
sub
inc
and
pop
ret
xchg
outs
iret
add
lock
in
mov
adc
xchg
imul
sbb
inc
xlat
inc
inc
mov
jo
push
cmp
pop
cmp
inc
add
cmps
lds
inc
repz
mov
ins
xor
in
dec
sub
aad
hlt
arpl
call
mov
inc
push
sbb
mov
pop
push
push
cwde
xor
cmp
mov
xor
pop
das
jmp
mov
retf
(bad)
fstp
mov
dec
cli
arpl
mov
mov
sbb
jnp
pop
mov
inc
xchg
and
sbb
and
in
rcr
mov
aam
stc
xlat
push
hlt
repz
cmp
dec
add
outs
xor
(bad)
jbe
rol
out
push
or
out
xlat
xchg
imul
mov
popf
xchg
in
jbe
dec
push
add
dec
xor
inc
push
popf
loop
stos
xchg
shr
rcl
shr
adc
mov
mov
call
enter
mov
aad
and
push
push
cmps
xor
push
nop
movs
pushf
dec
std
fnstsw
jne
(bad)
pushf
dec
aam
sbb
and
push
(bad)
push
outs
jmp
mov
push
outs
aaa
xor
jne
ret
sbb
xor
sbb
adc
cmp
cli
mov
adc
pop
inc
sbb
rol
add
jge
jno
xor
cmp
sub
lods
push
ret
ficomp
cmp
sub
mov
push
rcr
das
(bad)
je
ret
popa
adc
xchg
xchg
xchg
sub
inc
xor
xchg
pop
jbe
and
fsubr
or
int
adc
movs
lods
iret
or
lea
mov
pop
dec
retf
mov
xchg
out
inc
repnz
int
jae
jne
push
popf
xchg
fld
xor
std
lock
push
call
shl
enter
loope
imul
jge
mov
sub
in
cli
outs
pop
imul
mov
mov
jns
add
sub
les
daa
mov
sub
mov
push
jecxz
lahf
xchg
fs
or
scas
sub
xchg
int
not
jmp
cmc
push
inc
mov
outs
pop
dec
(bad)
jp
dec
ds
loopne
pop
pop
dec
stc
and
adc
xchg
iret
and
or
arpl
pop
jle
push
call
jmp
frstor
xor
cs
xchg
or
dec
ins
retf
mov
(bad)
repz
cs
clc
xchg
repnz
mov
add
sbb
stos
fisubr
pop
inc
popf
fs
aad
cmp
cld
and
ins
xchg
adc
mov
adc
test
imul
stos
sar
stc
jno
adc
arpl
leave
(bad)
mov
jbe
push
shr
dec
clc
mov
test
mov
in
jnp
xor
scas
in
cmp
sub
shl
jne
or
mov
add
xor
xchg
sub
jne
(bad)
shl
cmps
out
retf
push
push
movs
pop
ins
aam
fisub
sub
mov
push
jae
mov
shl
jnp
mov
add
test
int3
push
imul
inc
sub
inc
rcl
div
je
call
std
sub
fstp
imul
mov
test
int
xor
add
movs
mov
xchg
fwait
aaa
sahf
div
loopne
adc
inc
and
fadd
int3
sbb
xor
mov
fstp
adc
or
xchg
mov
movs
movs
mov
test
sub
(bad)
(bad)
aad
(bad)
fstp
int3
push
xchg
dec
loopne
sbb
jbe
inc
and
iret
cmp
dec
mov
mov
mov
xchg
scas
in
scas
into
push
dec
sub
outs
(bad)
jg
js
pop
lea
mov
sbb
jge
or
push
outs
(bad)
adc
and
and
jns
retf
mov
aas
(bad)
int3
jge
data16
dec
cmp
mov
ss
and
adc
jo
fldcw
xchg
inc
jecxz
add
cmp
js
or
out
xlat
imul
ss
(bad)
sub
add
test
sbb
ret
les
ja
dec
jns
dec
push
mov
ret
cwde
mov
push
inc
ds
dec
(bad)
cli
adc
xchg
mov
aad
fidiv
sbb
or
aaa
icebp
inc
ins
cld
sbb
push
add
rol
mov
xchg
dec
sti
xchg
add
cmp
jne
into
add
in
sbb
rcr
dec
mov
int
outs
test
fmul
test
(bad)
std
sub
fidiv
mov
pop
es
cli
push
mov
imul
and
sbb
in
sar
mov
es
add
cmp
xor
dec
inc
xchg
dec
leavew
les
fst
mov
mov
dec
mov
mov
lahf
push
test
xor
dec
mov
popa
popf
fcmovnbe
stc
pop
mov
and
cmps
enter
pusha
sub
xor
enter
stos
nop
cld
push
lds
add
inc
add
out
outs
scas
shl
mov
sub
sbb
out
xchg
push
cwde
xchg
fsubr
jns
ss
mov
out
push
xor
inc
outs
ror
adc
mov
and
icebp
fsub
aaa
leave
vpshaq
outs
sahf
inc
add
popf
jle
sbb
outs
ds
movs
(bad)
mov
sub
es
and
add
mov
cld
mul
add
jp
test
jg
push
lock
mov
sub
ja
shl
jmp
add
inc
adc
in
sbb
js
ss
or
push
jns
pop
sub
out
shl
mov
and
xchg
sti
ss
mov
sub
jge
adc
mov
mov
dec
sub
in
push
mov
xchg
sar
retf
pop
js
clc
pop
adc
mov
movzx
inc
aas
sub
jo
mov
test
arpl
fucomp
jbe
mov
dec
sbb
ja
icebp
push
fsub
(bad)
mov
xchg
mov
mov
test
(bad)
jmp
cld
in
cmc
js
cmps
ds
dec
imul
aam
jae
rol
or
fisttp
inc
jnp
aas
sbb
popf
adc
mov
push
push
mov
(bad)
fst
fwait
sub
test
adc
push
add
loop
not
xor
loopne
popf
cdq
in
cmps
pop
hlt
int3
sub
or
retf
sti
nop/reserved
and
pop
xlat
in
fdivr
je
push
mov
test
sti
fisttp
pop
xor
xchg
out
cmps
je
test
xlat
xchg
dec
mov
and
(bad)
popa
mov
xchg
and
fs
retf
(bad)
loopne
(bad)
pop
mov
dec
mov
das
ror
cmp
std
outs
pop
push
xchg
repz
int
data16
add
push
and
adc
mov
aad
mov
fwait
or
jge
dec
xor
fiadd
dec
jmp
sub
fisttp
dec
mov
add
mov
push
jnp
xchg
(bad)
(bad)
(bad)
shl
and
pushf
inc
inc
pop
iret
jg
push
inc
pushf
aad
push
inc
mul
loopne
adc
loop
stc
add
pop
not
das
scas
lods
push
adc
cmp
and
fmulp
or
outs
jbe
shr
push
mov
clc
pusha
and
add
mov
jge
fild
pusha
std
or
out
dec
adc
sar
cmp
xchg
bound
aad
mov
lds
add
pop
pushf
in
inc
adc
ret
jne
jmp
dec
jle
push
fwait
mov
hlt
adc
pop
inc
jb
add
test
jns
bound
sbb
pop
inc
outs
sub
and
imul
repz
pop
cmp
xlat
test
jo
sub
or
push
mov
cmp
xor
fldcw
add
(bad)
mov
inc
int3
jae
mov
fcomp
xor
mov
xchg
mov
pop
stc
cmps
shr
push
dec
rcl
mov
xchg
fimul
mov
lds
inc
loopne
mov
mov
cmps
inc
rcl
ja
fs
cmp
mov
nop
sar
std
in
mov
inc
or
inc
mov
not
pop
or
jne
or
or
sub
ss
into
(bad)
xor
loop
adc
cli
adc
fistp
stos
mov
fisub
inc
push
fisub
loopne
sub
mov
(bad)
mov
lock
into
loope
mov
cmc
xor
dec
sti
cmps
inc
ins
div
sub
adc
lock
add
jnp
adc
lea
mov
shr
leave
cmp
xlat
cmp
das
lock
les
dec
sbb
or
dec
cld
mov
fsubr
inc
mov
sahf
and
push
leave
add
mov
pop
fmul
les
mov
hlt
dec
outs
shl
mov
xor
icebp
mov
xchg
outs
inc
call
ficomp
push
imul
add
sbb
push
or
xchg
cwde
jecxz
out
inc
dec
adc
rcr
pop
mov
(bad)
iret
loope
lock
sbb
rol
mov
pop
mov
scas
shl
inc
ficom
mov
and
enter
rcr
lds
mov
inc
lods
cmp
xchg
out
ja
and
inc
in
cmps
mov
ins
dec
inc
in
jg
xchg
out
fild
mul
lea
xor
addr16
mov
imul
scas
or
sub
outs
lods
sub
js
xchg
shr
mov
arpl
fs
xchg
mov
push
sub
cld
mov
mov
or
arpl
movs
push
fabs
fld
ins
fbld
scas
stos
sar
pusha
push
xor
test
xchg
xor
sbb
ds
jmp
popf
adc
movs
push
fild
sub
out
retf
rcl
in
in
rcl
imul
xor
rcl
lock
cld
push
inc
arpl
cwde
dec
ss
ror
not
inc
loopne
mov
mov
cdq
mov
mov
call
sti
test
imul
shl
dec
pop
ret
push
and
xchg
mov
movs
add
add
add
mov
adc
sbb
jno
popa
out
pop
fwait
mov
nop
push
jg
call
repz
dec
mov
rol
xor
fcom
bound
xchg
int3
test
dec
lock
popf
fiadd
iret
jmp
add
adc
xor
ss
xchg
repz
pop
jp
and
stos
cwde
sub
lock
cmp
sti
mov
nop
inc
mov
adc
sbb
xor
nop
mov
push
jnp
fldenv
mov
mov
cmp
dec
mov
enter
pop
lods
lock
ret
movs
ret
inc
bnd
fisttp
in
pop
test
repnz
aaa
lahf
xor
xchg
sbb
jmp
and
push
mov
test
mov
mov
xchg
popa
std
push
or
imul
iret
adc
pusha
jmp
xchg
ss
icebp
mov
or
pop
mov
sbb
mov
inc
arpl
leave
int3
aaa
sub
(bad)
ficom
inc
aas
jae
xchg
mov
xor
out
dec
sub
adc
outs
popa
sub
sub
(bad)
push
xlat
push
fist
retf
inc
dec
loopne
jecxz
out
daa
cld
mov
cld
sub
or
cmp
cs
pop
adc
sub
sbb
stos
movs
out
popf
out
jg
adc
bound
fmulp
or
push
add
dec
push
or
aas
cwde
cmp
push
push
pusha
mov
mov
sbb
pop
lds
push
sub
hlt
add
jb
ja
adc
xchg
jl
cmp
pop
stos
and
add
jne
push
sub
mov
(bad)
jg
jg
mov
pop
lahf
(bad)
cmc
cmp
shl
lods
test
cmp
lock
pmaddwd
sbb
sar
cmp
sahf
call
fnstenv
inc
call
es
imul
mov
push
nop
dec
and
out
popa
enter
jns
movs
adc
rol
sub
rcr
pop
retf
bound
stos
cmp
cmp
jne
jae
loope
mov
push
ins
adc
jle
pop
adc
sysexit
xor
ret
sbb
ins
ins
sbb
sub
and
icebp
push
out
mov
call
mov
bound
sbb
or
or
in
jbe
mov
sbb
jge
shl
mov
loopne
pop
loopne
add
xor
pop
aaa
inc
or
xor
(bad)
xchg
dec
repz
xor
rcl
ins
or
rol
adc
std
or
mov
xchg
mov
jle
cmp
mov
and
jmp
inc
outs
push
xchg
out
sub
sahf
pushf
xchg
hlt
out
lahf
push
nop
sub
iret
pop
stos
jb
icebp
or
in
ins
cmp
leave
mov
and
stos
gs
in
and
sbb
test
sub
jbe
xor
xchg
cmp
push
ins
xchg
dec
test
pushf
jle
shl
xchg
jmp
aad
(bad)
pop
dec
popf
ret
mov
push
cli
stos
dec
cdq
shl
icebp
add
outs
sbb
xchg
movs
jmp
in
pop
fldenv
rcl
int
sbb
adc
cmp
fsubp
fs
loopne
repnz
inc
stos
ja
dec
and
jl
pop
sbb
cmc
push
leave
ins
inc
sub
push
les
shl
sti
pushf
and
mov
dec
call
(bad)
out
jle
add
mov
aaa
or
cld
mov
call
pop
cmp
pop
and
add
(bad)
xor
fwait
mov
outs
loope
or
loop
fcom
pusha
mov
inc
jecxz
rol
repz
fimul
addr16
je
hlt
sbb
retf
out
repz
inc
jmp
rcl
jmp
leave
pop
add
jae
pop
xor
pusha
clc
call
shl
push
scas
sbb
or
jnp
cs
sub
pop
jmp
inc
bound
gs
ss
adc
movs
xchg
lds
mov
or
fs
jmp
mov
mov
jmp
scas
clc
loope
imul
mov
push
(bad)
(bad)
and
pop
sub
xchg
mov
push
dec
add
push
(bad)
not
push
mul
mov
sbb
lds
xor
and
push
and
rcr
retf
xor
fadd
(bad)
sbb
xchg
div
mov
mov
mov
repz
sbb
push
div
pop
stc
fcmovu
arpl
or
sbb
and
clc
int3
push
cmp
lods
jle
add
push
adc
add
xchg
inc
push
enter
dec
(bad)
js
xchg
xchg
sti
sbb
cwde
out
ror
or
add
dec
adc
add
fstp
clc
pop
add
cli
(bad)
fst
inc
(bad)
and
sti
retf
imul
xor
js
fild
push
hlt
jp
cli
into
pop
rcr
ins
inc
pop
inc
or
push
xchg
pushf
pop
push
add
cmp
lea
add
dec
mov
popa
enter
sbb
(bad)
mov
mov
and
push
out
inc
xor
cmp
lahf
inc
and
xor
mov
inc
data16
mov
mov
mov
xchg
outs
sbb
jae
dec
xchg
rcl
and
xor
inc
push
std
cmp
rcl
aam
mov
mov
sub
dec
mov
xor
imul
icebp
jnp
iret
push
sub
pop
movs
mov
outs
test
push
stos
dec
sbb
dec
jo
fucomp
fsubp
mov
mov
inc
add
mov
cs
or
popf
test
mov
jl
sahf
push
inc
clc
mov
mov
adc
push
sbb
stc
int
ret
test
loopne
arpl
lock
inc
loop
xor
out
ss
sub
ficomp
test
xchg
sbb
das
xor
mov
jp
outs
or
enter
cs
jl
push
cli
retf
jle
sub
js
loope
in
mov
test
movs
test
mov
int
or
les
je
cmps
sub
ror
test
adc
dec
mov
cmp
dec
outs
fisttp
mov
pusha
sub
mov
sub
dec
mov
mov
popf
bnd
pop
aas
lods
fdivr
out
add
jnp
ret
or
jnp
dec
mov
imul
pusha
ja
cmp
das
imul
inc
popf
aaa
push
aas
addr16
sbb
inc
inc
int
jecxz
xor
je
mov
adc
fdivrp
lahf
and
(bad)
dec
push
adc
test
xchg
out
jae
leave
(bad)
std
ja
aam
pop
idiv
inc
mov
xchg
jno
out
pop
daa
repnz
das
cmp
push
adc
adc
dec
(bad)
jmp
shl
mov
xchg
ret
stc
jecxz
inc
cs
mov
clc
mov
xor
in
aad
mov
mov
adc
push
push
adc
and
fst
test
dec
and
pop
xchg
sbb
mov
or
cmps
es
js
jno
xor
in
loope
rcr
sbb
popa
shl
mov
fdiv
pop
push
cmp
cld
mov
daa
test
mov
sbb
adc
pop
xor
aaa
out
(bad)
cmp
cmp
or
pop
adc
jmp
arpl
sbb
icebp
pop
repnz
(bad)
mov
stc
mov
mov
mov
scas
sbb
adc
cmp
jmp
daa
jbe
nop
mov
or
movs
lahf
xor
data16
mov
bound
sub
xor
sub
mov
mov
fisub
mov
shl
test
mov
mov
in
xchg
adc
lds
movs
fwait
pusha
xor
and
hlt
call
dec
dec
xchg
xor
fwait
xchg
dec
mov
and
inc
xchg
lea
mov
popf
dec
cdq
jmp
enter
and
pop
or
stos
cmp
and
cld
or
xor
inc
mov
mov
mov
and
adc
xchg
adc
jb
pushf
je
dec
push
add
(bad)
xchg
mov
push
xchg
push
retfw
cmp
jmp
adc
ret
imul
in
xchg
adc
push
sub
repnz
rcr
inc
xlat
shl
lods
pop
add
les
lods
aas
mov
aaa
pop
pusha
(bad)
je
ins
sub
out
pop
pushf
jns
lds
call
out
scas
pop
add
mov
sub
out
movs
and
xor
mov
outs
inc
push
loop
call
or
or
pop
add
cmc
push
pop
jae
push
ins
outs
push
mov
xor
mov
(bad)
add
jg
out
jmp
xchg
or
add
or
adc
ror
mov
btc
pop
xchg
in
and
aas
push
adc
sbb
xor
pop
and
adc
pop
pop
mov
ret
mov
mov
mov
pop
cwde
pop
dec
das
pop
and
inc
ror
mov
mov
cmc
jbe
pushf
mov
(bad)
ja
pop
int3
cmps
test
xchg
mov
xor
es
out
out
mov
and
and
and
jae
retf
ins
out
push
dec
or
ret
jg
cdq
pop
push
dec
lods
jne
aam
jmp
mov
jp
lea
pop
dec
(bad)
cmp
inc
xor
ins
cmps
cmovs
xor
pop
js
jno
add
or
popa
fst
stos
add
mov
pop
fcomp
int3
fst
mov
mov
and
bound
push
and
mov
stos
mov
and
in
cmp
add
add
retf
sti
mov
(bad)
mov
lods
in
ret
pop
data16
jg
push
xor
push
outs
dec
aam
push
ror
mul
ins
pop
jo
in
les
ins
xchg
xor
(bad)
fld
call
sbb
xchg
lods
xchg
pop
add
ret
ret
rol
lock
retf
push
add
push
mov
dec
and
ds
stos
cs
lock
sbb
lods
mov
pusha
jmp
(bad)
add
pop
jecxz
icebp
aaa
call
dec
inc
jmp
and
lock
ds
scas
push
xor
inc
mov
loope
xchg
lods
mov
pusha
adc
xchg
mov
pop
sub
outs
sbb
fmul
fcmove
cmps
in
inc
push
sub
int3
jge
aam
push
jle
mov
sbb
les
es
push
rol
adc
ret
sub
jg
cld
mov
mov
pusha
in
dec
cdq
adc
cmps
mov
not
shr
test
push
xor
mov
fmul
cmp
sbb
push
es
movs
jp
mov
push
inc
fdiv
lahf
dec
es
pop
xchg
out
add
(bad)
movs
pop
icebp
arpl
ins
xchg
scas
popf
cs
add
shl
shufps
push
xor
jnp
sbb
shl
sahf
dec
sti
out
shr
dec
daa
fbstp
dec
movs
sahf
inc
jg
mov
int
test
add
mov
and
mov
mov
addr16
ret
jbe
inc
cmp
dec
dec
adc
pop
icebp
or
sub
sub
add
mov
loop
push
pop
imul
sbb
retf
cld
rol
push
aad
dec
jge
fiadd
jge
mov
stos
cdq
push
das
cmp
loope
cmp
cmps
mov
jo
lds
inc
cmp
xor
dec
out
out
jecxz
mov
fld
ins
cli
xchg
cmp
mov
test
pushf
cmp
fisub
sbb
and
jl
es
push
and
push
(bad)
sbb
inc
jns
sub
mov
xor
das
mov
rcl
fld
outs
mov
adc
loopne
or
ja
loop
loope
test
xchg
das
nop
jnp
(bad)
adc
adc
scas
dec
pop
test
cmps
adc
arpl
mov
xlat
mov
in
lods
lea
push
loop
or
xlat
lods
aad
push
dec
jecxz
gs
mov
imul
out
ins
sub
iret
mov
in
outs
or
aam
rol
and
cld
in
and
loop
dec
nop
pop
iret
ficomp
and
fidiv
mov
or
lods
sbb
xchg
cmp
mov
or
sub
add
(bad)
in
jnp
sbb
test
xchg
mov
or
cwde
and
xor
pop
out
jmp
fmul
push
pop
xchg
sbb
scas
fdivr
and
inc
or
lods
call
cmps
mov
into
jno
mov
mov
adc
adc
pop
cld
shl
mov
xor
inc
ds
cmp
ins
cmc
sbb
aad
dec
loope
adc
pop
mov
leave
add
push
cbw
inc
das
je
pop
retf
sahf
adc
cdq
dec
mov
xor
aam
cli
push
add
test
repnz
mov
cmps
jmp
xor
aam
pusha
sub
dec
pusha
pop
movs
adc
popw
test
xchg
pop
add
mov
push
imul
xchg
ins
push
pop
sub
jo
pusha
and
add
mov
fsub
inc
das
jle
sub
xor
or
mov
out
(bad)
mov
jne
sub
add
or
pop
mov
jmp
in
jecxz
stc
sbb
enter
ss
mov
mov
xchg
imul
mov
sbb
arpl
sti
xor
ins
push
loopne
cmps
ret
lea
add
push
mov
(bad)
out
push
cmp
lock
and
pop
leave
add
cmp
dec
sar
loope
addr16
js
fs
fsubr
cli
xchg
lods
cdq
movs
in
in
pop
mov
ins
inc
out
cmp
mov
xor
ret
jp
movs
daa
pusha
(bad)
push
cmp
sar
test
mov
push
dec
inc
inc
retf
push
je
cmp
test
sbb
adc
push
sbb
out
rol
inc
xor
ret
mov
jmp
fwait
inc
lock
je
mov
aam
push
jbe
adc
loope
pop
fimul
stos
outs
leave
mov
and
bound
mov
ins
push
add
xor
push
add
pop
repnz
jmp
(bad)
int
loope
mov
(bad)
ins
jne
test
movs
ror
pop
popa
gs
stos
jmp
mov
adc
and
and
call
mov
jmp
push
mov
std
mov
push
vunpcklps
fcomi
pushf
sbb
movs
gs
mov
outs
aam
dec
cwde
mov
or
push
or
rcr
mov
dec
stos
lock
cdq
ins
mov
cdq
xor
pusha
or
icebp
retf
aad
sbb
mov
test
mov
jle
and
dec
mov
daa
test
jbe
aaa
push
movs
fcom
movs
and
or
cmp
ja
fimul
dec
cmp
test
arpl
leave
xlat
mov
xchg
cmps
mov
cld
pop
sti
retw
push
arpl
push
adc
jmp
enter
shl
jno
ret
mov
push
mov
test
pop
dec
out
dec
sub
pop
cmps
fdiv
push
out
(bad)
(bad)
xor
sbb
inc
pop
jns
leave
and
adc
or
call
jbe
shl
jmp
push
in
mov
js
dec
adc
adc
dec
pop
imul
nop
mov
aaa
shl
movsx
cdq
push
test
lea
fcmove
leave
cmp
rcl
dec
sbb
ins
add
dec
sub
shl
pop
pusha
mov
ss
inc
mov
mov
das
jmp
cmp
mov
fcmovnb
jns
adc
imul
ins
pop
frstor
xchg
cmp
dec
into
movlps
inc
dec
ds
mov
ds
mov
scas
mov
(bad)
or
mov
dec
push
arpl
push
adc
mov
pop
sub
daa
add
loopne
mov
pusha
push
fild
aaa
xchg
movs
mov
int
push
jl
xor
mov
jnp
in
stc
mov
mov
(bad)
std
pop
mov
cmp
mov
dec
fisub
push
jmp
mov
xchg
cmp
pop
(bad)
je
and
clc
fstp
fdiv
push
and
(bad)
rol
inc
push
repnz
mov
mov
scas
adc
push
out
or
cli
push
xor
and
adc
add
icebp
dec
loopne
loop
push
or
dec
jns
xlat
aaa
mov
(bad)
dec
jnp
dec
adc
popa
jecxz
test
cs
out
pop
xor
mov
loope
(bad)
cmps
inc
(bad)
nop
aad
repnz
sbb
out
imul
mov
cmp
jo
push
cmp
stc
(bad)
mov
cmc
pop
jmp
push
jmp
sub
(bad)
call
movs
imul
div
fucom
lock
sti
ins
add
imul
data16
fimul
push
dec
sbb
fs
popa
push
movs
mov
inc
adc
jo
cmp
dec
cli
push
movs
adc
js
sbb
or
jge
sub
lock
gs
mov
push
push
jne
fst
mov
and
or
xor
lds
xchg
lods
icebp
retf
test
loopne
in
unpckhps
leave
mov
js
sub
push
sub
icebp
pop
push
popa
scas
mov
repnz
aad
dec
es
push
psubsw
or
(bad)
out
jl
sub
out
std
adc
mov
mov
xchg
xor
or
jns
sbb
push
cmp
dec
xchg
xchg
fst
inc
push
popa
aad
cdq
sub
mov
dec
retf
daa
add
inc
mov
rol
push
ins
adc
mov
and
into
(bad)
pop
adc
ds
mov
cs
mov
in
retf
call
or
and
adc
sub
xchg
jbe
pop
mov
mov
cmps
sbb
outs
(bad)
call
xlat
sbb
fld
jmp
rol
clc
scas
xchg
fidiv
std
push
sub
fmul
or
or
mov
sub
push
add
mov
les
fnstcw
(bad)
and
js
xchg
jnp
push
imul
(bad)
and
rcr
fisub
sbb
or
test
mov
adc
mov
xchg
pop
or
sbb
icebp
sahf
movlps
sub
or
pushf
cld
mov
cmp
(bad)
call
xchg
dec
jl
xor
pusha
pusha
rcl
dec
fcmovnb
or
and
mov
gs
sahf
or
pop
push
cmp
inc
adc
movs
push
idiv
idiv
dec
adc
fbstp
stc
jne
jo
fnstcw
(bad)
adc
cmp
push
push
lds
in
xchg
(bad)
pop
fistp
cli
add
repnz
jle
movs
mov
push
fiadd
call
or
mov
in
or
dec
xchg
push
fwait
dec
jg
retf
(bad)
(bad)
test
clc
rcr
idiv
in
(bad)
and
cmp
ret
popa
jg
pop
out
fcom
add
xchg
cmp
mov
(bad)
rcr
xchg
mov
dec
xchg
not
mov
lods
and
xor
test
push
lock
movs
jl
iret
cmp
(bad)
jnp
lahf
pop
lds
push
inc
in
pop
hlt
pop
out
test
dec
adc
sar
and
dec
push
int3
and
(bad)
cli
and
push
ins
mov
pop
aam
inc
inc
fwait
hlt
repz
ja
or
push
push
sbb
push
mul
pushf
mov
push
xchg
xchg
xchg
pop
int3
cmp
xor
fsub
das
popa
jge
or
movs
fild
sar
adc
aaa
cmp
xchg
es
(bad)
cwde
xchg
fisub
or
xor
pop
xor
dec
jae
div
ss
in
int3
mov
mov
add
ds
std
push
lods
xor
das
popa
dec
cmp
jmp
popf
mov
dec
mov
ins
(bad)
(bad)
popa
lods
imul
sbb
or
jns
(bad)
sub
aas
cmp
retf
add
adc
stos
aas
mov
cmc
movs
pop
sbb
cmp
mov
push
std
cwde
cmp
mov
scas
pushf
sbb
fpatan
sub
call
pop
mov
(bad)
and
rcr
or
mov
jg
int
sbb
pop
call
jno
dec
call
enter
xchg
fnstenv
jbe
mov
loope
cmps
jle
not
push
sub
mov
jns
jno
or
cmp
(bad)
pop
lds
jmp
cmp
pop
mov
stos
xchg
(bad)
mov
add
pop
cs
lea
and
dec
sti
mov
fdivr
out
in
or
inc
sbb
or
push
dec
xor
stos
inc
mov
leave
retf
xor
mov
test
imul
(bad)
in
inc
dec
and
(bad)
dec
fdivr
mov
jp
cmps
js
sbb
or
aad
xor
jmp
cmps
ja
xchg
mov
mov
clc
loopne
push
dec
mov
jmp
and
xor
jns
pusha
and
mov
add
cli
dec
mov
es
pop
xchg
mov
xchg
and
xchg
mov
icebp
in
lahf
pop
mov
inc
pop
mov
push
push
mov
cmp
sbb
jo
mov
test
jp
addr16
jg
mov
mov
xor
loopne
push
inc
ficomp
fwait
mov
arpl
sbb
fsubr
sbb
fld
into
mov
loope
enter
jle
xor
out
jo
popa
inc
xor
clc
sbb
sbb
call
sub
cld
test
mov
repz
inc
addr16
shl
nop
add
lea
sahf
jne
lahf
adc
out
out
fcom
stos
pop
cmp
es
lods
push
enter
movs
rcr
push
pop
sbb
mov
(bad)
jge
out
shl
fldenv
jae
out
scas
xchg
push
nop
das
aaa
xor
adc
fwait
popf
and
leave
cmp
jge
jb
movs
sub
lahf
aam
mov
out
mov
pop
out
fld
or
push
jnp
out
into
add
outs
cmp
addr16
xchg
test
or
(bad)
lock
xchg
js
ret
add
and
es
bound
sub
mov
mov
dec
(bad)
mov
mov
fsqrt
sbb
xor
lock
test
pop
pop
mov
les
sbb
jns
int3
fadd
sbb
ret
ins
pop
add
lock
ja
repnz
mov
icebp
ja
mov
add
add
sbb
cdq
fsub
mov
jp
repz
sbb
adc
add
es
mov
sub
ret
mov
adc
jp
inc
das
xchg
popf
inc
sbb
mul
shl
cdq
push
mov
in
push
mov
cli
push
xor
mov
mov
inc
pop
and
cmp
loope
call
pop
push
outs
mov
call
pop
mov
add
mov
fwait
mov
call
test
mov
in
iret
(bad)
repnz
lds
jecxz
inc
popf
mov
mov
lahf
mov
or
fnstcw
out
jg
xchg
or
pushw
pop
es
or
mov
sub
mov
pop
mov
mov
montmul
cmps
inc
cld
iret
in
mov
mov
pop
ror
outs
in
pop
aad
pop
xchg
jp
inc
add
addr16
xor
cmps
loopne
cdq
enter
out
xchg
or
xor
dec
in
aad
xchg
xchg
imul
xchg
and
ret
mov
mov
(bad)
fidiv
mov
inc
mov
fwait
gs
sub
repnz
mov
fstp
not
jmp
mov
dec
out
cld
jae
jg
add
mov
push
push
push
cli
add
sub
push
das
pushf
add
in
(bad)
(bad)
mov
xor
mov
mov
sbb
dec
cmp
mov
stos
pop
aam
dec
(bad)
mov
in
xchg
rcr
mov
mov
imul
adc
inc
mov
cmps
sti
add
movs
std
push
cwde
mov
out
test
gs
xchg
scas
and
dec
das
cmc
pop
mov
mov
add
fndisi(8087
out
cwde
sub
add
pop
loop
imul
add
daa
js
fild
rcl
inc
(bad)
aam
dec
dec
jecxz
sbb
(bad)
mov
jecxz
pop
mov
das
xlat
adc
lock
pop
mov
xchg
mov
dec
out
inc
mov
into
aad
or
call
jb
clc
sbb
dec
xchg
int3
das
ret
(bad)
fwait
loopne
aaa
(bad)
mov
sbb
jno
push
repnz
adc
cwde
or
cmc
sahf
enter
gs
ins
add
inc
push
daa
mov
or
in
dec
out
(bad)
out
mov
mov
and
popa
dec
dec
xor
mov
lahf
out
mov
sub
push
or
iret
push
jmp
adc
pop
pop
dec
sub
push
hlt
nop
dec
adc
rol
cmp
call
push
push
mov
or
cs
iret
sbb
popf
fwait
and
fs
pop
shl
push
adc
add
sbb
stc
and
add
test
adc
pop
adc
add
cmps
fcmovnb
jbe
fbld
mov
lods
inc
dec
sbb
sub
pop
adc
stos
jo
sub
daa
mov
mov
loop
js
and
hlt
popa
jnp
jns
pop
cmp
add
pop
mov
sub
dec
movs
sbb
cmp
push
ins
push
adc
ret
clc
push
aaa
dec
into
jp
cli
lea
jo
xchg
std
ins
stos
sbb
sub
es
loopne
(bad)
push
or
adc
into
dec
cdq
int
in
cmps
in
int3
push
outs
pop
call
popf
shl
in
mov
nop
push
(bad)
cmps
ja
jbe
in
iret
inc
cdq
pop
daa
adc
xchg
xchg
jp
pushf
popf
call
loop
movs
test
rcr
xlat
in
stos
push
and
add
arpl
dec
outs
scas
cld
cmp
cld
push
lock
push
mov
ins
adc
fisttp
mov
add
jnp
loopne
jge
popa
add
push
mov
mov
fisub
sbb
jno
dec
adc
add
lock
mov
pop
jl
add
jmp
jo
(bad)
(bad)
test
shl
into
mov
aas
ja
cmp
cmp
ins
pop
sub
pop
(bad)
in
scas
(bad)
mov
test
mov
out
stos
movs
lahf
imul
ds
outs
dec
ret
add
movs
jecxz
stc
out
ja
in
pop
loope
mov
arpl
push
sub
cmp
pop
repz
jae
std
retf
movs
push
loopne
xchg
dec
enter
push
dec
(bad)
jecxz
rcl
xor
push
bound
xchg
xchg
sub
inc
imul
mov
mov
out
movs
sub
retf
xchg
and
sbb
ror
mov
jae
int
out
es
mov
pop
sub
scas
or
mov
sbb
push
or
dec
aad
fcom
enter
pop
int3
or
xchg
and
and
movs
das
popa
jbe
pop
lahf
shl
call
adc
pop
push
jle
lds
or
leave
call
mov
pop
in
iret
mov
jnp
movs
cmc
movs
sub
fcomp
mov
xchg
pop
push
(bad)
movs
shr
bound
lea
push
pop
rcl
push
aas
or
xchg
add
(bad)
int3
inc
clc
fld
mov
in
dec
scas
test
cmp
imul
xor
and
pop
lds
push
adc
rcr
cmp
pop
sub
push
push
popa
sub
jno
push
and
(bad)
adc
dec
(bad)
or
outs
cmp
loope
lea
xchg
pop
rcr
cmp
cwde
shr
fisttp
mov
pusha
sbb
out
gs
jmp
xchg
xchg
pop
repz
mov
push
imul
lods
mov
dec
aam
movs
das
das
dec
mov
pop
int3
repnz
stos
fmul
dec
and
sub
mov
pop
mov
jge
or
outs
std
mov
lds
cmc
mov
sbb
(bad)
xor
neg
rcr
mov
dec
dec
in
clc
inc
repnz
cmp
aad
xor
pushf
sbb
stos
mov
stos
push
nop
std
mov
or
das
push
retf
bound
jns
mov
and
cmp
(bad)
dec
push
dec
mov
std
or
daa
mov
inc
inc
add
mov
repz
mov
out
mov
dec
sub
das
pop
call
cmp
nop
push
push
fisubr
retf
or
outs
call
js
inc
add
cmp
mov
jo
sbb
test
push
and
push
int
cmp
cs
test
xor
add
xchg
sbb
outs
push
les
fwait
pop
pop
cmp
test
popa
call
cld
mov
fidiv
xchg
xchg
adc
mov
or
test
js
xchg
xchg
sub
mov
mov
and
cmp
out
inc
retf
mov
jo
push
aam
push
jle
bnd
aas
repz
and
and
mov
dec
clc
sbb
and
(bad)
pop
mov
fbld
sbb
aas
xchg
jns
in
leave
aad
add
pop
leave
iret
add
loopne
out
push
call
or
aaa
jl
into
int
lahf
gs
iret
shl
add
push
out
xchg
cmp
jmp
inc
xchg
call
in
sti
adc
rcr
test
mov
jae
inc
test
inc
mov
imul
pop
out
or
out
gs
sahf
into
mov
jb
je
mov
jno
bound
jle
sahf
sahf
adc
(bad)
mov
cdq
xor
add
sti
or
movs
pop
mov
mov
push
jmp
dec
sbb
jle
fadd
push
pop
jmp
lea
retf
xor
push
cmp
add
mov
pop
jo
jmp
jmp
sbb
inc
in
aaa
mov
and
and
push
nop
daa
ror
(bad)
sbb
xor
pop
jecxz
sbb
ja
(bad)
loop
cmp
sbb
and
mov
mov
rcl
push
and
test
jl
ins
sub
inc
dec
test
push
aaa
sbb
les
inc
push
and
leave
push
jg
popa
cmp
mov
jns
fist
fcomp
dec
adc
into
xchg
fs
xchg
int
mov
(bad)
mov
aaa
mov
rol
dec
shl
js
lods
stc
dec
retf
outs
scas
in
sub
inc
or
xchg
mov
and
adc
mov
mov
xchg
clc
push
imul
cmp
sti
mov
repnz
mov
or
out
in
popa
add
xor
jb
out
and
ds
dec
out
push
scas
inc
jmp
cmp
lea
and
sub
mov
std
mov
mov
call
push
xchg
shl
sbb
in
cmc
lfs
or
push
or
pop
jecxz
scas
or
or
inc
jp
lock
loopne
cmp
or
push
fld
sbb
clc
loope
ror
in
ss
push
scas
shl
scas
inc
inc
or
xor
inc
sbb
sbb
sbb
xchg
mov
vpunpcklbw
mov
mov
pop
cmps
popa
hlt
jmp
test
out
cmp
enter
cmps
stc
xor
pop
outs
enter
dec
imul
mov
adc
adc
push
in
sub
fidiv
cmps
jle
and
lahf
ja
daa
call
test
push
mov
sbb
push
push
pop
mov
pop
xchg
xor
jge
mov
lock
inc
mov
sbb
and
pop
xchg
pop
or
cmp
ror
or
push
jbe
cwde
pop
pusha
imul
sub
mov
popa
push
imul
jns
or
fistp
imul
rcl
cwde
inc
cs
retf
sub
pushf
add
mov
cmps
mov
neg
sbb
shr
(bad)
arpl
inc
outs
lods
adc
push
xor
push
jg
lea
sub
cmp
enter
or
mov
icebp
repnz
mov
xchg
stos
cli
push
rcl
arpl
cmp
(bad)
lock
jge
mov
outs
ret
out
aaa
and
sub
cmps
cmps
dec
sub
push
clc
and
call
push
xchg
into
jno
mov
mov
(bad)
push
adc
call
iret
stos
lods
sub
gs
sbb
jae
jg
test
dec
jae
dec
mov
div
sbb
stos
clc
sub
inc
push
ins
xor
jmp
iret
fs
jecxz
jecxz
push
dec
xor
push
pop
cwde
pop
ss
(bad)
not
fldcw
sbb
sbb
add
inc
fisttp
sub
sahf
dec
test
loope
ins
and
dec
push
push
sub
(bad)
bound
loop
sub
loopne
add
sub
popa
aam
push
and
add
sahf
push
or
adc
aas
pop
xor
jmp
dec
push
stos
in
cmp
jge
in
dec
out
pop
xchg
adc
clc
inc
fcmovbe
shl
mov
mov
rcl
rcl
pop
or
rcr
or
daa
mov
out
jb
sbb
arpl
xor
test
and
lods
lods
fucom
jecxz
fisttp
aaa
mov
jo
sbb
inc
mov
sub
push
sbb
mov
xor
aad
imul
enter
out
mov
aas
mov
inc
outs
mov
xor
pop
cmp
pop
pop
mov
xchg
sub
and
jo
fild
dec
out
xchg
mov
int3
adc
test
xchg
imul
pushf
jecxz
and
ret
sbb
jg
mov
pop
(bad)
pusha
dec
scas
rcr
out
sar
sub
pop
mov
dec
sbb
push
sub
inc
das
sti
push
sti
jp
push
movs
sub
add
pop
fimul
pop
add
jge
adc
fwait
add
mov
cwde
pop
jno
cmp
sti
call
ins
mov
and
neg
les
jbe
ds
fisttp
xchg
pop
leave
add
and
and
and
mov
pop
adc
out
jle
movs
adc
leave
outs
push
(bad)
mov
sbb
xlat
pop
jp
leave
inc
mov
addr16
mov
sbb
in
rcr
push
sub
aam
popf
mov
lea
pop
ss
jle
enter
ins
pop
add
sub
cpuid
in
sub
dec
fld
jo
inc
mov
lods
mov
pop
mov
or
jnp
mov
push
shr
sbb
jns
scas
retf
push
jl
add
push
js
push
sub
enter
sbb
ret
mov
sub
pop
dec
adc
sahf
add
inc
fidivr
(bad)
mov
in
dec
pop
sbb
nop
in
popf
cs
bound
and
fisubr
jp
push
jecxz
(bad)
push
sub
xchg
mov
sbb
cmp
in
push
jecxz
inc
loope
fidiv
daa
cli
push
mov
popa
xor
xchg
aam
imul
rcl
sub
sar
inc
jecxz
repnz
xor
aas
mov
pop
fistp
jb
hlt
repnz
add
stos
xchg
gs
stc
ret
add
pop
aas
jno
xchg
xchg
push
(bad)
mov
cmp
or
retf
push
in
pop
into
sub
(bad)
loopne
sub
and
retf
or
iret
lds
hlt
pusha
sbb
jns
mov
xchg
xor
int
adc
call
mov
test
or
cwde
test
aad
daa
xor
xor
mov
xchg
adc
(bad)
mov
cli
mov
(bad)
xor
jge
aad
in
push
jmp
adc
pop
cmp
(bad)
mov
bound
bound
sbb
mov
sar
jbe
dec
aam
test
jmp
ins
lea
pop
and
pusha
add
or
in
stos
and
das
dec
iret
mov
or
call
and
dec
fsub
fstp
xchg
inc
repz
cmp
jo
push
mov
dec
enter
and
mov
cdq
sub
inc
cld
push
xacquire
fs
xchg
jb
and
mov
push
push
fidiv
rcr
icebp
cld
out
not
es
jae
mov
test
pop
bound
and
xor
in
ins
xor
jmp
int3
lds
(bad)
fcom
mov
inc
adc
and
xchg
in
popf
xor
xchg
ins
in
mov
(bad)
stos
push
test
xchg
pop
sub
sbb
adc
popa
sbb
ficom
retf
retf
nop
pop
scas
(bad)
mov
stos
sub
sbb
cs
jb
scas
inc
jl
and
mov
push
and
addr16
mov
stc
sub
mov
les
stc
mov
outs
js
and
not
dec
push
sub
pop
jle
add
outs
je
pop
xchg
fist
add
mov
iret
sbb
adc
mov
and
xchg
or
jmp
and
add
adc
push
inc
xchg
retf
mov
cwde
dec
xchg
sbb
xchg
rcr
ret
clc
mov
dec
call
shl
xchg
mov
xchg
rcl
inc
jl
je
stos
adc
test
ds
xor
jp
fnstenv
push
fdivr
inc
std
sub
and
pusha
in
out
mul
xchg
jnp
mov
fcmovnu
jmp
jae
dec
rol
push
push
and
rcr
pop
mov
repnz
cmp
mov
outs
sti
rcr
mov
add
dec
imul
mov
lods
cmp
pop
aad
mov
scas
mov
sub
jmp
shl
pop
pop
or
movs
fild
jno
push
cmps
cmp
sub
jbe
adc
push
ja
adc
popa
(bad)
aaa
push
and
adc
inc
gs
inc
out
shl
data16
mov
out
mov
(bad)
sbb
leave
test
sub
jne
movs
pop
add
ins
sbb
bound
mov
arpl
fmul
mov
or
xchg
xor
inc
in
inc
dec
xchg
fcmovnb
retf
ret
mov
shl
and
sbb
test
cwde
stc
sahf
in
jb
mov
mov
clc
mov
popa
mov
int
clc
add
stos
rcl
lea
cmp
ja
mov
adc
imul
gs
movs
bound
mov
outs
aas
add
test
mov
inc
jp
add
out
mov
pop
xchg
pop
pop
mov
ja
es
fiadd
cli
enter
push
test
pop
sbb
sbb
test
shl
adc
fnstsw
push
les
mov
jns
jle
retf
in
repz
enter
adc
(bad)
cmp
sbb
les
into
pop
dec
inc
(bad)
sahf
shl
imul
adc
fisubr
in
loop
adc
push
mov
cs
xor
cwde
mov
sahf
sbb
repnz
push
jle
imul
mov
sti
fadd
push
rcl
mov
in
stc
sub
or
ja
stos
outs
cdq
mov
scas
scas
call
push
xchg
xchg
or
out
(bad)
push
stos
outs
pop
jge
scas
sahf
in
data16
add
xchg
jo
sar
call
sub
sub
or
imul
mul
jae
push
ins
stos
repz
cmps
fisttp
dec
jmp
push
and
inc
lea
mov
inc
addr16
repz
cld
pusha
in
pop
xchg
aad
mov
push
test
cmp
stc
jns
jnp
sub
lods
pop
cli
inc
push
push
or
and
js
test
scas
in
leave
sub
pop
jne
mov
inc
inc
(bad)
adc
xchg
loope
inc
mov
mov
dec
xor
pop
fimul
inc
and
ret
cld
cmps
add
inc
dec
cmps
(bad)
jns
out
frstor
inc
cs
adc
js
xchg
into
test
gs
push
and
push
(bad)
test
cmc
cmp
pop
into
push
adc
ins
sub
mov
cmp
xchg
mov
push
mov
xor
test
out
mov
addr16
xchg
xlat
mov
or
std
add
loope
sbb
inc
xchg
add
fwait
ins
sub
int
ds
jg
add
adc
lods
icebp
(bad)
xor
sti
xor
enter
mov
mov
stc
pop
add
mov
jns
dec
into
(bad)
add
adc
and
mov
push
clc
sar
xchg
add
add
add
jp
dec
push
mov
js
mov
add
mov
mov
cdq
dec
sub
jecxz
jl
repz
out
xchg
idiv
pop
mov
daa
stc
aas
scas
dec
xchg
retf
push
ret
cmp
add
sar
je
jmp
push
adc
adc
into
ss
xor
or
enter
(bad)
shl
mov
adc
loope
inc
fwait
cmp
ja
ins
(bad)
pop
enter
fsub
fcomp
daa
push
mov
loope
js
fld
js
frstor
jge
mov
add
push
iret
adc
jl
out
in
dec
stos
js
mov
cdq
aas
sub
xchg
addr16
out
add
leave
aad
adc
test
xchg
adc
fwait
dec
xchg
mov
loope
pop
out
imul
inc
jae
jmp
shl
rol
outs
jp
js
(bad)
jns
repz
pusha
test
cmps
dec
adc
sbb
into
rcl
cld
nop
mov
scas
iret
inc
add
and
cs
add
ror
pop
data16
add
push
cmp
jno
mov
inc
js
or
movs
dec
movs
das
pop
sti
xor
loop
or
sub
stos
xor
mov
mov
dec
xchg
pop
xor
outs
push
ret
lods
sub
scas
test
repnz
jno
fadd
jmp
xor
retf
mov
addr16
out
shl
mov
push
push
js
jmp
hlt
mov
mov
ficomp
jmp
mov
and
push
adc
sub
and
adc
inc
adc
pop
pushf
lea
inc
jmp
mov
bound
ins
ins
out
(bad)
cli
sbb
mov
mov
xor
sub
outs
fistp
out
cdq
addr16
sub
xchg
cmp
add
jecxz
or
outs
(bad)
inc
loopne
jg
stc
cld
mov
cmp
xchg
dec
jp
cmp
cwde
adc
pushf
push
fidiv
dec
or
mov
pop
pop
add
inc
mov
dec
outs
call
lods
aaa
push
adc
gs
xor
xor
push
mov
sub
and
fwait
push
shr
jle
pusha
mov
pop
fdivr
or
pop
xchg
sbb
add
pop
mov
and
push
mov
and
dec
inc
xor
inc
fsubp
cmp
mov
cmp
pushf
mov
push
out
pop
push
fidiv
ret
cwde
xchg
jg
std
mov
push
popa
adc
jo
xlat
xchg
pushf
ins
jmp
sbb
dec
lahf
popa
cmp
movs
sub
(bad)
loope
adc
mul
cmp
xchg
xor
aaa
loopne
inc
jl
adc
pushf
jne
fstp
mov
ficom
mov
retf
xchg
inc
into
or
mov
jne
stc
sbb
mov
je
mov
fs
int3
enter
cmp
lock
pop
gs
es
mov
pop
mov
out
clc
in
sub
in
xchg
mov
sbb
clc
push
or
lock
xchg
dec
xchg
push
inc
jmp
(bad)
mov
cwde
or
mov
xchg
addr16
add
mov
push
gs
pop
sbb
sub
rol
ret
in
fcomp
inc
cmp
dec
loopne
sub
enter
out
cs
fnstenv
jp
xchg
dec
or
shr
out
sar
and
pop
or
mov
jmp
(bad)
adc
cmps
sbb
mov
mov
push
xor
mov
add
or
and
pop
scas
or
aad
cmp
adc
inc
xchg
adc
sbb
fwait
loope
sub
fwait
push
mov
jnp
shl
inc
xlat
fwait
mov
add
out
jne
add
add
mov
lahf
ins
jmp
icebp
out
repz
shl
rcr
enter
clc
std
xor
pop
(bad)
dec
ss
cmp
inc
mov
dec
imul
mov
pop
mov
xor
ds
pop
and
dec
push
cmp
cmp
iret
mov
ja
jno
jge
mov
lods
loope
stos
bound
mul
outs
arpl
mov
jno
sub
sbb
cmps
inc
mov
push
push
fisub
dec
jg
lods
jo
int3
mov
lods
cld
sbb
jmp
lock
jae
fiadd
jmp
pop
dec
sar
sub
iret
jl
or
sbb
add
sub
fist
pop
das
or
xchg
mov
dec
mov
fist
dec
fsub
arpl
push
mov
out
mov
cmps
or
adc
nop
sahf
mov
inc
(bad)
pop
xor
dec
lahf
xchg
mov
xchg
fwait
mov
mov
pop
sub
dec
stc
xor
inc
fwait
mov
sahf
jbe
cmp
(bad)
scas
mov
mov
push
sbb
pop
mov
mov
sbb
out
fiadd
and
mov
test
xchg
dec
xor
push
jo
cli
call
inc
bound
add
inc
mov
test
mov
add
xchg
dec
or
(bad)
popf
push
cmp
les
push
xchg
ret
(bad)
and
jb
xchg
lahf
test
sub
rcl
xor
cmps
pop
lea
jns
inc
sahf
mov
dec
imul
or
adc
xor
jno
sbb
push
jmp
std
and
pop
xor
stos
push
fdiv
and
inc
cld
rcl
mov
cmps
pop
jns
loop
mov
sbb
out
mov
dec
add
mov
ss
mov
movs
push
xor
push
jo
mov
sbb
cmp
das
cmps
jmp
jg
ds
sub
xor
aaa
(bad)
jl
xchg
push
mov
inc
jae
sub
jg
fs
cmp
adc
sub
mov
enter
stc
outs
sbb
dec
scas
sbb
jp
or
(bad)
mov
gs
fnstenv
pop
pop
push
sbb
ret
pop
add
and
imul
je
std
into
test
xor
xor
pop
lock
fimul
push
lods
rcl
mov
mov
mov
xor
xchg
mov
int3
fs
xchg
cmp
and
mov
rcl
mov
mov
clc
jo
sbb
push
and
out
push
fisttp
dec
inc
jle
pushf
mov
aas
in
mov
or
(bad)
arpl
pop
pop
aas
dec
jg
pop
mov
out
fmul
xchg
mov
and
nop
lea
sub
mov
push
sar
fwait
jl
inc
out
jbe
in
pop
fstp
fwait
dec
xchg
call
inc
jbe
fwait
cmp
js
popf
(bad)
cmps
pushf
movs
pop
scas
sub
gs
mov
adc
push
mov
movs
out
add
cld
mov
out
fistp
popf
es
jae
or
sar
dec
div
rcr
leave
repz
aad
outs
add
pop
(bad)
push
jmp
scas
pop
inc
pop
test
adc
cmps
ja
sbb
loopne
retf
sbb
pop
inc
xchg
mov
xchg
outs
push
mov
fisub
mov
dec
es
and
push
lock
ret
cmp
add
inc
sub
sbb
pop
and
dec
jl
and
movs
jae
pop
loope
push
sub
cmp
jecxz
test
cmp
mov
pcmpeqw
addr16
dec
inc
adc
xchg
popa
movs
or
aad
call
cld
rcl
mov
in
mov
aas
lahf
inc
setp
dec
and
or
fwait
push
mov
imul
sbb
jmp
cli
pop
fucomi
and
fadd
xchg
cmp
and
xchg
in
loopne
leave
cmp
push
pop
je
sbb
loopne
cwde
sti
imul
mov
inc
jp
movs
(bad)
leave
mov
adc
int3
mov
mov
pop
jcxz
jmp
int3
stc
ds
mov
mov
shl
xlat
pop
fsubr
mov
push
mov
pop
pop
jp
mov
inc
out
mov
neg
mov
mov
xchg
push
outs
dec
push
sub
mov
imul
fs
xlat
out
outs
push
hlt
mov
adc
fs
iret
call
adc
cmp
xor
jo
ja
mov
aaa
cmc
retf
cmp
test
or
sbb
ja
pop
int3
or
and
test
dec
cmp
lahf
mov
xchg
test
jbe
and
into
fs
aas
lock
cwde
push
or
sbb
test
mov
xchg
add
adc
fwait
jmp
stos
rcl
cmps
mov
push
xchg
jo
imul
loope
inc
in
mov
add
sub
cmp
jo
imul
adc
adc
push
pop
add
cs
jnp
adc
dec
ss
shl
mov
cmp
mov
push
or
mov
jnp
call
push
cmps
and
sub
adc
cmp
lods
mov
jae
xchg
iret
fiadd
gs
pop
mov
mov
fs
push
push
pop
mov
es
cmp
dec
jg
xor
lahf
nop
das
clc
mov
sub
sbb
loop
xchg
rcl
call
es
popa
push
xchg
and
sbb
addr16
xor
cwde
sbb
push
pop
or
in
or
push
test
movs
psubsw
loopne
inc
sub
lahf
cmp
jb
or
push
fwait
or
pop
sahf
int
test
push
push
scas
push
leave
movs
test
bound
or
std
push
int
mov
ds
push
adc
movd
ret
pushf
lahf
jne
jge
dec
outs
pop
mov
div
xchg
dec
loop
mov
xchg
ror
(bad)
mov
loop
scas
aas
scas
fisubr
dec
(bad)
fs
arpl
mov
mov
ja
(bad)
and
(bad)
mov
out
push
dec
xor
sub
shr
and
test
iret
test
cmp
fistp
pop
fisttp
inc
lahf
mov
inc
or
fstp
test
sub
push
jmp
or
or
test
out
xor
ds
xlat
sbb
jae
loop
outs
aad
ins
shl
mov
mov
loope
aad
and
sti
inc
ficom
sub
iret
cwde
adc
mov
jnp
shl
or
mov
lods
ret
pop
(bad)
popa
xor
jnp
add
outs
xchg
adc
adc
xlat
xor
(bad)
fst
enter
(bad)
sbb
cld
xor
outs
dec
in
lea
mov
mov
cmc
jbe
scas
xor
mov
xchg
call
mov
xchg
mov
in
cmps
mov
sbb
leave
push
mov
or
jle
adc
fscale
adc
mov
aas
xchg
popa
jge
push
inc
xor
inc
xor
in
inc
sbb
push
shl
aas
xor
pop
fistp
push
or
or
adc
in
mov
mov
iret
iret
sbb
jmp
adc
int3
jb
pop
or
fisub
test
fistp
or
(bad)
jae
popf
sbb
loopne
lods
jge
add
scas
loop
or
sub
std
rol
mov
and
outs
cmps
xor
mov
fnsave
add
inc
mov
sti
mov
test
out
or
aad
ret
test
adc
or
inc
mov
ror
cmp
push
jbe
pop
inc
mov
xchg
and
or
ficom
push
pop
adc
(bad)
mov
test
imul
cmp
ret
cmp
sub
arpl
fisubr
inc
(bad)
(bad)
mov
push
test
add
sub
or
or
bound
push
jbe
lock
and
dec
push
push
or
jle
stos
and
aad
out
xor
mov
fdivr
pop
sub
aaa
rcl
adc
mov
mov
idiv
lea
stos
test
push
ret
fist
push
and
test
cmp
inc
inc
scas
mov
mov
aam
sub
adc
xchg
dec
test
aam
pop
lds
retf
pop
dec
fcomp
test
sub
xor
adc
out
imul
and
sbb
ret
arpl
popf
xor
pop
jp
fdivr
out
or
call
adc
push
inc
ds
lock
out
jo
out
push
mov
hlt
jae
mov
aam
lods
add
xor
sbb
cld
mov
add
dec
push
mov
adc
xchg
push
rcl
into
imul
call
pop
icebp
mov
das
add
xchg
push
xor
push
adc
loope
sub
call
adc
fiadd
sar
cdq
(bad)
fs
mov
xor
push
mov
sbb
mov
jnp
pop
arpl
adc
mov
push
mov
add
cmp
push
inc
inc
xchg
sub
ss
rcl
cs
xor
and
adc
int
and
test
cld
xor
daa
shl
ja
out
sub
jb
in
out
ja
jmp
dec
and
scas
jo
jnp
sub
push
loop
cmp
fs
fwait
add
sub
pop
movs
daa
mov
xchg
mov
add
adc
jle
rcr
(bad)
jmp
iret
add
add
stos
bound
(bad)
shl
push
nop
xor
jb
leave
js
inc
push
(bad)
mov
in
jns
sub
jle
test
and
pop
aas
and
shl
test
lods
mov
movs
mov
pop
inc
lods
das
mov
inc
mov
test
ins
(bad)
lea
xchg
pop
lock
add
ins
jg
loop
jae
in
dec
ror
jmp
bound
push
mov
pop
or
inc
push
(bad)
retf
outs
rcl
inc
scas
and
ins
out
mov
es
gs
jo
aaa
fwait
(bad)
xchg
stos
mov
dec
sub
pop
add
ds
xchg
mov
mov
push
mov
cmp
cld
cdq
adc
ss
mov
jl
sub
in
xor
hlt
xchg
dec
fnsave
mov
mov
retf
push
sbb
pop
mov
das
and
popa
push
cmp
xchg
push
sub
imul
and
sbb
into
pop
mov
jo
and
add
fsubr
push
jno
sbb
dec
int
jle
pop
or
jb
and
jg
hlt
ss
or
adc
dec
(bad)
and
mov
push
push
lea
leave
in
ror
inc
push
push
mov
push
pop
fisttp
out
(bad)
in
mov
mov
stc
adc
lock
popf
pop
inc
push
shl
lock
mov
push
mov
pusha
call
xor
and
and
xchg
mov
cmps
dec
repnz
add
stos
cmp
in
int3
outs
(bad)
sbb
aad
adc
aas
push
add
mov
nop
data16
pop
dec
int
cmp
xchg
pop
cmp
push
xor
sbb
loope
rcl
mov
sar
lock
arpl
mov
(bad)
outs
dec
in
std
test
add
popa
stos
xchg
add
mov
push
sbb
dec
inc
xor
push
xor
mov
fadd
imul
stos
pop
rol
sbb
mov
sti
lahf
xchg
mov
dec
loope
adc
fs
push
(bad)
stos
mov
jb
adc
mov
loop
jno
gs
mov
mov
scas
outs
int3
jns
dec
ror
xor
rcr
mov
sbb
mov
dec
je
popa
call
xlat
xchg
movs
adc
jo
scas
adc
mov
daa
and
pop
enter
lods
or
push
mov
or
rcr
(bad)
sbb
es
inc
add
ds
or
fldenv
mov
inc
dec
and
loope
aam
stc
data16
inc
cmp
movs
test
dec
fld
sar
fcomp
xchg
(bad)
inc
iret
loop
fdiv
arpl
imul
es
xlat
push
sub
int3
sti
cld
add
repz
ins
repz
pop
xor
retf
shl
rcr
div
les
adc
adc
outs
pusha
mov
mov
aad
xchg
and
adc
pop
pop
cli
inc
cmps
push
retf
imul
dec
or
stc
xchg
in
pop
fnstcw
fs
mov
xor
mov
(bad)
fstp
push
or
loope
cmp
imul
aad
pop
jbe
call
lea
cmp
(bad)
aas
hlt
pop
fidivr
ss
shl
arpl
adc
jecxz
sete
inc
pop
test
mov
js
les
pop
ds
add
imul
xchg
push
or
push
dec
out
mov
jp
and
aas
jmp
xchg
xchg
lods
add
cmps
inc
not
(bad)
fstp
leave
out
js
mov
fiadd
mov
inc
addr16
hlt
pop
dec
push
fldl2e
and
or
xchg
or
mov
scas
leave
mov
pop
jbe
adc
jecxz
outs
jmp
add
mov
fwait
sti
arpl
ss
movs
fisubr
add
jbe
test
mov
add
sbb
sbb
popf
imul
xchg
fimul
inc
shl
pushf
pop
or
add
mov
jecxz
pop
cmp
js
cmp
adc
inc
or
add
data16
cli
inc
(bad)
cmc
cmc
push
test
sbb
retf
jg
ds
mov
mov
out
in
add
call
add
out
dec
cmp
add
ret
enter
sub
jmp
pusha
sbb
(bad)
mov
fsub
pop
hlt
and
sbb
sub
mov
cwde
xor
mov
mov
cli
sbb
add
xor
scas
sbb
fld
test
cmps
and
xlat
pop
pusha
or
mov
rcl
dec
outs
scas
inc
xchg
cmp
jg
push
push
daa
dec
in
loop
cdq
out
pop
lock
(bad)
xchg
repnz
pop
(bad)
fiadd
ret
mov
inc
pop
mul
dec
inc
ret
add
clc
push
xchg
inc
and
hlt
xchg
ficom
mov
inc
iret
arpl
mov
loop
push
sbb
or
test
retf
in
jp
pushf
adc
jl
sbb
xchg
sub
mov
test
ret
aaa
mov
inc
repz
inc
in
sub
jecxz
and
xor
out
push
shl
mov
inc
gs
sti
nop
inc
lds
(bad)
xchg
xchg
inc
aaa
test
ss
or
ins
loop
dec
add
mov
cmc
or
cmp
ins
aad
nop
shl
pushf
push
sub
rol
jno
xor
dec
sti
cs
jnp
xor
ja
ret
mov
mov
mov
xor
adc
fwait
mov
cwde
into
mov
xchg
lods
vpshufd
and
jecxz
push
dec
pop
aad
dec
dec
cdq
cld
xchg
jmp
lock
xchg
or
clc
lods
or
mov
sbb
sub
sub
fiadd
in
in
mov
or
mov
mov
mov
ret
pop
jg
movs
(bad)
sqrtps
cmp
addr16
mov
cmps
push
dec
dec
pop
pushf
mov
pop
lock
cmps
lods
call
fisubr
out
ins
jo
aam
pusha
popa
add
and
inc
xor
stc
dec
adc
(bad)
stc
(bad)
xor
mov
fisubr
fmul
clc
imul
loope
jae
loop
push
ret
or
xlat
pop
and
inc
mov
ins
push
iret
out
add
fmulp
bts
push
add
mov
repz
cmp
inc
fstp
sub
stc
out
cwde
or
cmp
cdq
inc
(bad)
stc
lea
adc
in
mov
and
inc
adc
mov
sbb
fld
jbe
mov
mov
ins
shr
inc
addr16
rcl
pushf
fadd
ror
adc
shl
and
cmps
jb
add
repnz
and
cmc
int
sahf
retf
in
and
xchg
and
(bad)
mov
fxch
or
sub
jae
dec
rcl
hlt
cdq
sahf
cmp
arpl
out
js
mov
mov
test
ja
ins
sub
mov
push
sbb
sub
ins
mov
mov
add
fmul
retf
pop
std
ins
cmps
cmps
lea
ja
lahf
inc
retf
rol
dec
adc
pop
sar
cmp
dec
hlt
mov
jg
or
adc
or
test
ret
xrelease
jmp
je
dec
pushf
mov
cmc
out
ror
pop
fidivr
cli
out
push
sbb
adc
and
jle
add
mov
push
cmp
repnz
js
nop
add
std
pop
cmp
in
sub
(bad)
inc
jmp
fidivr
push
in
jbe
mov
and
stos
mov
leave
lods
fnstsw
or
push
outs
ds
aaa
(bad)
(bad)
lea
xor
or
add
out
imul
cmp
retf
pop
dec
add
xchg
dec
jl
div
stos
stos
add
pusha
and
jae
outs
cmc
sti
je
fbstp
jbe
inc
adc
pop
inc
imul
lods
add
push
int
dec
cli
xchg
mov
icebp
xchg
out
sbb
cmp
xor
inc
leave
jmp
sub
outs
push
es
js
adc
ret
repz
call
inc
(bad)
sub
xor
imul
daa
cwde
retf
sti
cmps
sub
div
mov
ficom
nop
cmovs
pop
mov
jne
push
(bad)
cs
mov
inc
(bad)
mov
fsubr
add
call
movs
cld
test
xchg
pop
xor
scas
imul
lds
mov
sbb
data16
mov
inc
popf
push
or
jnp
sbb
imul
lods
add
call
push
aas
mov
mov
pop
sub
fistp
sbb
fnstenv
sahf
pop
inc
ret
add
push
test
xchg
rcl
cld
fnsave
mul
lahf
add
add
scas
dec
movs
push
ret
adc
mov
jo
push
sub
jmp
sub
cmp
fidivr
sbb
rcl
mov
out
es
repz
jp
dec
pop
cmp
inc
cmp
xor
fwait
test
or
cmp
cld
imul
pusha
dec
push
inc
(bad)
iret
fsub
cmp
mul
jmp
adc
xchg
(bad)
adc
(bad)
movs
(bad)
pop
sbb
jmp
or
jmp
sub
das
or
inc
cld
(bad)
fst
or
pop
pop
lods
or
pop
jne
dec
cs
sub
fisttp
mov
inc
les
adc
jo
sub
push
or
scas
adc
punpckhwd
mov
mov
push
pusha
inc
dec
cli
dec
cmp
(bad)
fisttp
int3
mov
hlt
push
adc
dec
push
scas
xchg
and
adc
adc
aad
fcmovu
jmp
xchg
(bad)
aas
ret
packsswb
movs
cmps
jae
adc
jle
or
fisttp
lock
imul
or
jnp
sbb
xchg
adc
mov
in
mul
das
adc
ds
cmps
aaa
fs
and
mov
cmp
(bad)
and
loope
cmp
xlat
jae
mov
or
int3
pop
int3
inc
les
pop
rcr
and
lds
push
fld
pop
cmp
mov
je
or
mov
dec
icebp
cmp
and
or
std
test
or
add
cmp
retf
jae
xchg
retf
jp
jmp
xchg
rcl
mov
fld
repnz
cmp
jb
xor
lods
mov
mov
fdivr
scas
xor
in
iret
inc
xor
cmc
mov
cmp
call
lds
popa
aas
jle
rol
test
adc
rcr
adc
jns
int
out
dec
test
dec
retf
mov
inc
mov
cmp
repnz
mov
outs
stc
ins
push
lea
sub
jp
popf
retf
mov
adc
pop
sbb
and
pusha
jns
mov
sti
loop
mov
mov
jnp
hlt
ss
paddd
inc
lods
sbb
nop
pushf
mov
dec
sti
push
sub
jae
rol
(bad)
push
rsqrtps
pop
push
adc
sub
sub
aaa
add
imul
cmp
je
jb
stos
clc
sub
xor
jecxz
dec
cmp
loop
loop
leave
gs
repz
out
pop
adc
mov
fcmove
jne
dec
pop
mov
or
(bad)
clc
sub
cdq
aas
iret
inc
sar
jbe
push
sbb
test
cmp
fadd
xor
or
cdq
mov
aam
lahf
outs
dec
adc
popf
(bad)
outs
leave
jo
add
es
mov
jo
push
aas
mov
test
and
ficom
jp
rcl
or
call
cmc
sbb
test
(bad)
rcr
lods
call
jl
gs
xlat
mov
dec
icebp
sub
loopne
add
sub
cmp
push
push
adc
jl
lahf
js
and
add
rol
or
and
stc
mov
jb
ror
rol
stos
test
stos
test
int
aad
inc
dec
das
or
inc
ret
mov
or
pop
fild
stos
inc
and
cli
mov
adc
movs
sbb
iret
inc
sbb
js
stc
sahf
(bad)
fld
sti
mov
add
cld
adc
jecxz
sar
dec
mov
adc
jmp
in
mov
pop
mov
(bad)
(bad)
jbe
in
ja
xor
sbb
xor
or
and
adc
rol
push
adc
or
push
sub
xor
push
inc
jno
nop
xor
xchg
xor
cs
dec
std
inc
fld
fcmovnu
hlt
sub
push
fisubr
inc
mov
fs
mov
cmps
push
mov
jp
lea
cmps
jns
arpl
jne
(bad)
jmp
or
mov
mov
push
(bad)
sub
test
arpl
aam
adc
push
adc
xor
add
sbb
jg
retf
push
fsubr
xchg
inc
lods
cmps
jl
inc
jmp
mov
or
add
inc
pushf
test
leave
ss
push
or
mov
cmc
push
ror
adc
cli
pop
cmp
or
inc
fldcw
arpl
sahf
pop
(bad)
cmp
fwait
cli
add
push
paddusw
test
stc
fcom
mov
sar
lds
mov
sahf
jno
pusha
mov
xchg
shl
dec
cmp
cmps
sbb
jge
xor
or
add
inc
adc
loopne
aad
or
dec
pop
retf
push
out
outs
dec
xor
stos
or
mov
add
pusha
es
in
inc
clc
fisttp
(bad)
retf
sub
test
sbb
pop
pop
adc
and
and
dec
add
out
xor
cmp
dec
push
lahf
dec
sbb
rol
jns
mov
stos
cwde
sub
push
push
lods
xor
push
jg
push
pop
mov
ds
dec
pop
ins
adc
cli
add
sbb
pop
dec
mov
inc
mov
adc
inc
mov
scas
sub
mov
mov
mov
stos
jnp
mov
cmp
inc
or
xor
xchg
mov
in
sar
xchg
or
ins
sub
pop
pop
adc
mov
icebp
mov
ins
push
pop
rcl
and
and
and
pusha
push
dec
mov
in
std
jns
rcl
daa
(bad)
mov
iret
adc
cmp
out
nop
push
pop
sbb
ror
push
add
call
add
test
sub
pop
jl
mov
gs
lea
cwde
daa
mov
xchg
and
leave
out
retf
mov
scas
jl
xor
(bad)
and
les
repnz
pop
hlt
dec
mov
jle
popf
ret
mov
js
loop
div
jl
test
repnz
adc
mov
fwait
arpl
cld
retf
scas
lds
test
mov
stc
lods
fstp
sbb
or
mov
rol
push
ret
test
(bad)
fcomip
stc
mov
sbb
push
ja
jp
dec
(bad)
push
clc
test
inc
out
sti
dec
jbe
mov
jno
add
inc
cdq
bound
(bad)
inc
sub
pop
adc
xor
call
fnstsw
sub
mov
retf
xlat
cmps
imul
lods
xchg
add
je
adc
or
cmp
clc
aas
enter
jmp
test
fstp
bound
gs
dec
ret
sti
cmp
call
jmp
cld
shl
inc
retf
retf
cdq
je
pop
adc
in
mov
mov
cmp
xor
pusha
jnp
mov
stos
push
scas
pop
leave
inc
lods
fwait
jo
push
ret
cmps
jge
not
mov
and
dec
add
xchg
pop
dec
and
mov
push
sbb
jae
mov
sar
xor
outs
hlt
add
mov
retf
jl
push
mov
sub
and
pop
fimul
lds
mov
pop
push
arpl
xor
retf
shl
and
pusha
mov
and
fcomp
sbb
xor
aas
push
ins
mov
repz
es
sbb
cmc
or
sub
push
inc
hlt
xor
sbb
cdq
and
int3
cmp
sti
fidiv
mov
sti
or
push
adc
mov
(bad)
dec
or
inc
mov
push
mov
fmul
and
jp
sbb
adc
or
inc
pop
es
daa
dec
jb
jmp
adc
xchg
mov
stos
jb
sbb
or
sbb
in
pop
push
mov
out
in
mov
push
ins
mov
ja
popa
ins
xchg
mov
dec
mov
xor
fiadd
xchg
int
mov
jge
call
outs
jp
cli
pop
ds
imul
das
dec
ss
aad
and
xchg
call
pop
mov
add
stos
mov
mov
push
and
cmp
jne
mov
cmps
cs
pop
cmp
arpl
dec
push
repz
iret
cld
inc
ins
add
and
cld
inc
push
pop
int3
int
hlt
xchg
xchg
addr16
jnp
xchg
popa
fld
add
imul
xlat
int
out
out
mov
mov
jmp
pop
jge
in
jge
nop
push
and
mov
dec
daa
sub
mov
test
aas
stos
push
in
and
mov
into
jb
or
repz
lea
or
out
in
mov
inc
push
and
scas
lods
in
mov
jmp
mov
jmp
test
pop
popa
and
cmp
dec
dec
cli
imul
ins
mov
or
ds
jg
fcmovne
push
mov
out
jo
sahf
shr
mov
dec
fsubr
imul
fnstsw
inc
bound
dec
pop
sti
jno
cmc
out
mov
mov
pop
pop
daa
or
mov
push
cs
push
data16
inc
outs
cmp
retf
sub
aas
(bad)
push
mov
je
inc
loop
xor
daa
cmp
adc
jb
mov
sbb
stc
loop
cmp
adc
push
cli
sub
or
sub
in
dec
mov
mov
lds
movs
lods
iret
rcl
xchg
retf
xchg
in
adc
das
outs
rcl
xchg
aas
hlt
push
fisttp
test
test
rcl
pop
cmp
push
sbb
mov
and
pushf
jno
xchg
lods
popa
xor
(bad)
cld
mov
pop
ror
pop
(bad)
out
sub
nop
mov
lods
dec
sbb
movs
lock
or
(bad)
add
das
pushf
sbb
(bad)
ror
sub
loope
outs
dec
addr16
dec
push
dec
pop
lock
out
(bad)
push
cmc
cdq
jmp
movs
jl
clc
(bad)
dec
test
cmc
sbb
jge
fs
jne
xor
test
adc
adc
sbb
add
xchg
aam
loop
push
or
mov
sub
mov
inc
mov
add
lahf
aam
jns
xor
xor
add
sahf
pop
cmp
into
stos
fcomip
pop
xchg
pushf
ret
iret
test
jae
push
jg
fwait
in
push
adc
ins
mov
sbb
lock
lahf
mov
and
ds
imul
inc
movs
std
or
cli
sbb
mov
ret
inc
loop
mov
add
xor
jnp
ins
dec
mov
jbe
test
popf
not
cmp
mov
xchg
retf
popa
xchg
int
aam
mov
aad
mov
push
add
mov
aas
mov
hlt
jae
stos
outs
cs
pop
inc
cmp
jg
bound
push
xchg
jecxz
(bad)
mov
outs
dec
xchg
xchg
lahf
mov
ins
dec
jmp
adc
aam
test
inc
call
repz
mov
and
inc
jns
cmps
pop
jle
sbb
cmps
cmp
inc
dec
std
mov
scas
adc
push
lea
inc
loop
sub
test
or
popf
aad
cld
popa
mov
cs
aas
arpl
nop
cmp
ss
mov
std
jle
push
in
cs
stos
sub
mov
push
mov
loop
lea
mov
daa
jae
xor
mov
ficomp
and
imul
jge
cmp
dec
xchg
aad
outs
test
sbb
xchg
xchg
dec
pop
out
std
lds
dec
push
jae
(bad)
pop
jmp
ret
xlat
std
pushw
cmc
js
jmp
rcr
pushf
mov
adc
inc
mov
push
push
pop
stos
inc
repnz
jg
repz
push
inc
call
call
xlat
les
cmp
pop
imul
mov
sub
aad
sub
and
jbe
adc
sbb
and
cld
out
nop
dec
in
adc
int3
mov
and
cdq
clc
push
sbb
cmp
jp
lahf
call
sub
aam
cmp
cli
outs
clc
inc
(bad)
fmul
sbb
loope
lea
repnz
xchg
mov
movs
pop
mov
push
cmp
dec
dec
mov
push
or
cmp
push
retf
fdiv
test
push
aas
loope
jne
mul
fild
lahf
out
retf
ins
out
sub
(bad)
fisubr
add
xchg
jp
fs
inc
mov
jb
inc
fsubr
xchg
pop
sar
pop
lods
mov
pop
test
push
push
xchg
test
push
daa
dec
popa
daa
stos
retf
sub
xchg
inc
or
pushf
and
popf
lods
and
fwait
int3
(bad)
jno
pushf
out
leave
inc
sar
or
sbb
fmul
das
pop
xchg
daa
sub
aad
sub
gs
hlt
jge
sub
mov
sti
mov
leave
out
adc
xor
out
test
out
sbb
bound
aam
lock
ins
lods
fmul
fisttp
jecxz
mov
fidivr
adc
mov
adc
xor
mov
cmp
mov
inc
inc
nop
into
fwait
outs
(bad)
ins
dec
dec
sahf
mov
cdq
outs
push
outs
aam
or
or
in
sub
cmp
pushf
ins
sbb
daa
push
dec
imul
lahf
xor
mov
loopne
movs
cmps
or
xlat
xchg
test
sub
sti
pop
xor
addr16
pop
icebp
sub
inc
dec
retf
cmc
push
xor
sub
dec
pminub
mov
adc
inc
pop
or
out
inc
fimul
inc
out
clc
(bad)
push
out
adc
and
adc
sti
xor
test
into
mov
aam
xor
int
push
gs
pusha
rol
add
cmp
test
jg
sbb
xchg
lock
iret
inc
pop
mov
sti
sub
lock
pop
cmp
nop
arpl
xor
dec
and
call
push
push
cmp
or
push
xchg
fistp
clc
mov
cmp
inc
pop
mov
jns
cmp
repz
xor
push
jecxz
hlt
sub
sbb
or
inc
xchg
outs
repz
(bad)
cs
arpl
xchg
mov
into
mov
xlat
adc
pop
loope
jecxz
and
fwait
push
jl
outs
xchg
sar
mov
mov
push
push
xchg
push
inc
xor
mov
rcr
mov
xchg
and
jbe
imul
push
in
cli
jbe
sar
loopne
jge
leave
stc
inc
xor
push
sub
mov
add
popf
sub
sub
dec
fimul
mov
ins
dec
adc
mov
add
cs
dec
aas
inc
pop
pop
hlt
jle
fwait
scas
not
retf
iret
int
mov
inc
pop
sub
test
pop
pop
dec
inc
fwait
test
retf
or
fild
mov
clc
lods
call
mov
adc
xchg
pop
clc
mov
sub
pop
imul
ret
dec
push
out
mov
add
cwde
test
std
div
and
repnz
movs
push
in
ja
call
xor
add
inc
jo
cmp
pop
pop
test
jp
adc
adc
mov
ret
sar
mov
les
adc
jmp
xor
jno
pop
in
js
lods
push
iret
push
call
in
fs
hlt
leave
jp
ror
or
xchg
dec
cdq
xchg
jae
or
push
out
mov
push
pop
or
dec
ror
or
mov
push
jmp
daa
ret
in
inc
inc
sub
adc
inc
into
adc
sbb
sahf
call
jl
fwait
(bad)
nop
clc
or
in
sbb
in
in
xchg
(bad)
inc
jecxz
cs
loope
sbb
lods
xlat
add
daa
inc
jo
and
or
jmp
lods
paddd
sub
js
pop
dec
mov
lea
pushf
ds
fdivr
mov
sub
popf
(bad)
aam
sar
or
mov
pop
lds
std
jmp
push
cmp
xlat
fiadd
lea
add
loopne
lahf
xchg
push
es
push
mov
adc
je
into
and
jb
sbb
push
mov
dec
arpl
icebp
push
and
arpl
inc
mov
push
mov
or
mov
sbb
inc
fs
jae
add
je
dec
xchg
stc
lahf
lock
xlat
ss
iret
adc
inc
(bad)
adc
enter
xchg
daa
leave
fs
ss
fst
adc
fsub
jb
jmp
cmp
(bad)
test
push
imul
mov
jmp
je
lock
(bad)
mov
les
aam
imul
jl
pop
pushf
push
adc
fisubr
push
ret
mov
xchg
dec
adc
call
xchg
mov
xor
lock
push
sahf
push
int
sub
fsubp
sbb
rol
jmp
mov
pop
leave
sub
(bad)
xor
sub
cs
lods
shl
sahf
mov
mov
retf
dec
dec
jl
mov
data16
ins
ret
popa
cmp
scas
call
xchg
sub
jne
int
jle
mov
call
xchg
repz
push
bound
or
out
sbb
mov
push
cmp
hlt
into
daa
jne
mov
lea
add
push
lds
cmps
dec
push
int3
inc
ror
cmp
loop
stc
loope
cwde
js
popa
xchg
ja
cmp
loopne
inc
add
scas
test
adc
push
jg
ins
les
mov
mov
ins
icebp
adc
mov
nop
fdiv
mov
jecxz
xchg
xchg
cmp
fdivr
enter
and
mov
std
mov
into
out
jne
and
in
add
jg
xor
mov
adc
or
and
inc
in
mov
aas
sti
imul
xchg
clc
pop
and
icebp
jecxz
sar
mov
(bad)
mov
ret
fstp
mov
dec
lods
xor
(bad)
(bad)
out
(bad)
in
push
in
test
mov
push
(bad)
cmp
mov
mov
xchg
jnp
movs
outs
push
push
jno
fmul
shr
rcl
or
retf
lods
pop
cmps
fdiv
bswap
mov
arpl
sub
sbb
and
push
les
cmp
push
cmps
das
test
repz
sar
mov
mov
mov
adc
clc
mov
les
retf
jb
adc
loope
adc
pop
es
repz
and
repnz
repz
sub
push
sub
mov
or
push
push
popf
mov
jmp
aam
or
out
(bad)
sub
xor
stos
cmps
lock
lds
mov
mov
cmps
call
(bad)
pop
fnsave
jmp
xchg
cmp
mov
js
aad
in
or
fmul
mov
sbb
loope
aaa
inc
push
sub
mov
enter
in
push
ror
xchg
jns
mov
pop
ret
ficomp
jmp
pop
jae
inc
hlt
mov
retf
dec
mov
push
ss
in
retf
dec
mov
dec
hlt
scas
gs
in
fcomp
int
pop
push
jmp
es
aad
jp
and
jae
mov
push
clc
sbb
mov
push
cmp
xchg
clc
adc
or
push
mov
cmp
push
and
xchg
xchg
fstp
push
lods
fucomip
push
fnstsw
call
sub
cmp
add
jb
retf
xlat
aad
push
xchg
push
sub
mov
cmps
dec
sbb
cmp
adc
sti
sub
pop
leave
cld
sahf
cmp
jb
cmp
sbb
mov
std
out
dec
arpl
div
movs
adc
add
popa
jnp
mov
das
push
fwait
lock
addr16
mov
scas
mov
inc
call
call
push
fidiv
loope
or
jecxz
sub
iret
push
or
mov
rcl
movs
cmp
movs
daa
nop
pop
mov
pop
inc
fild
jb
fwait
imul
mov
add
cwde
adc
or
jb
ins
repnz
fdivr
cli
mov
mov
pop
aas
call
jmp
inc
xchg
xchg
clc
push
cmc
sahf
jl
aam
mov
xchg
mov
mov
rol
mov
jo
ins
sahf
pop
xor
sub
lds
pop
dec
mov
push
push
(bad)
jmp
outs
iret
pop
aad
push
retf
test
shl
cmp
jle
adc
cli
in
imul
into
dec
mov
mov
cmp
in
pop
jl
mov
mov
push
in
or
nop
neg
jb
movs
mov
pop
ins
xor
mov
xor
or
cmc
aaa
pop
xlat
xchg
aaa
shl
in
cmp
cmp
xor
jns
sub
or
int
(bad)
adc
dec
(bad)
jns
push
in
sub
test
mov
test
adc
retf
arpl
xor
adc
test
dec
add
mov
icebp
adc
iret
shl
test
or
retf
loop
rcl
jno
adc
inc
into
mov
mov
mov
rcr
mov
pop
lea
and
adc
push
sbb
sbb
push
ret
cld
cmp
push
bnd
adc
arpl
mov
and
lock
js
or
and
pop
jmp
shl
outs
outs
lods
add
jl
xor
loope
pop
pop
into
retf
ror
push
pop
mov
lods
and
mov
adc
clc
fist
dec
in
xchg
mov
sbb
xchg
mov
fcmovu
stc
adc
ror
add
pop
arpl
leave
mov
cmp
pop
test
js
je
pop
sub
mov
inc
test
call
fistp
out
mov
arpl
std
pop
push
jnp
jno
mov
jg
xchg
(bad)
into
cmp
retf
unpcklps
mov
out
ret
repnz
and
jp
(bad)
jmp
test
stos
into
and
in
add
mov
xchg
cs
sbb
int
xchg
mov
xor
(bad)
ja
sti
addr16
cmp
mov
aam
fnsave
mov
pop
loope
xor
loopne
into
sub
xlat
fs
inc
shr
movs
dec
dec
adc
retf
ss
xchg
bound
push
sub
lea
scas
add
lods
inc
(bad)
int
mov
das
push
popf
pop
scas
mov
shl
icebp
daa
ins
adc
mov
sub
mov
or
popa
sub
and
out
dec
or
mov
ficomp
popa
jb
and
or
cli
mov
imul
movs
jecxz
push
cdq
pop
mov
or
xchg
mov
xchg
mov
jo
jg
cmp
push
adc
xchg
mov
stc
push
or
pop
loope
cmp
sbb
retf
add
dec
test
cmp
adc
xor
cmp
xchg
jno
test
add
mov
inc
adc
push
emms
xor
mov
rep
jb
push
pop
rol
gs
cli
sub
and
loop
in
mov
jl
or
dec
and
pusha
xor
loop
jg
xor
cmp
cmp
dec
sub
and
mov
(bad)
(bad)
mov
sub
repz
mov
(bad)
in
repz
inc
arpl
cmp
movs
(bad)
jne
cmps
ret
cwde
jns
outs
adc
sub
bound
test
xchg
mov
sbb
scas
xchg
jne
mov
movs
(bad)
out
sbb
and
push
and
lock
mov
or
(bad)
in
arpl
(bad)
loop
mov
jmp
xchg
adc
mov
cmp
mov
mov
mov
add
pop
test
mov
xor
mov
leave
mov
jmp
mov
movs
fimul
mov
sbb
popa
adc
cmps
jge
or
xchg
into
or
out
test
inc
popa
adc
pop
outs
sub
rcr
gs
jb
mov
ror
mov
enter
ins
xor
mov
icebp
cwde
das
std
enter
jne
dec
aas
sbb
cs
fistp
fst
mov
inc
bound
ds
loopne
outs
or
inc
mov
cs
mov
mov
xor
div
mov
push
stos
push
push
inc
adc
mov
push
mov
or
ja
fsubr
mov
inc
out
loop
shr
call
stos
push
xchg
xchg
mov
bound
push
sub
xchg
test
xchg
retf
stos
push
mov
mov
lahf
xor
data16
xor
sub
sbb
xor
popw
je
xchg
xchg
movs
in
xchg
mov
or
(bad)
das
in
pusha
cli
(bad)
pop
aam
jne
push
push
cmp
stc
push
aaa
call
push
xor
pushf
std
ffreep
cmp
fmul
jl
mov
test
sar
sub
cmp
add
out
mov
out
xor
leave
push
jmp
repnz
sbb
out
es
sub
add
mov
pop
(bad)
fs
dec
cmp
stc
ins
int
cdq
pop
loopne
int3
jbe
xchg
mov
xchg
sub
xchg
adc
ins
(bad)
loop
popf
cmp
sub
iret
nop
repnz
cmp
mov
addr16
jne
inc
fst
sti
mov
add
jmp
cmc
push
dec
and
test
add
inc
adc
(bad)
test
out
dec
jp
movs
adc
mov
ins
pop
mov
xchg
and
fdivr
jecxz
xchg
(bad)
stc
adc
push
fwait
adc
fxch
ret
jp
rcr
cmp
or
enter
arpl
retf
xlat
mov
shl
ss
in
xor
addr16
mov
pop
dec
test
or
inc
cdq
xchg
lahf
jns
jae
mov
cmp
(bad)
mov
xchg
stc
lods
pop
cmp
(bad)
cmp
cmp
fisub
sbb
push
inc
cmp
mov
fmul
imul
sub
and
(bad)
fcom
or
into
add
xor
pop
xchg
push
sub
mov
and
sbb
sub
jb
pop
mov
add
fisub
lods
ds
inc
xchg
pop
(bad)
pop
push
xchg
fidiv
or
out
dec
pop
sbb
test
xchg
outs
ret
mov
mov
fnstsw
leave
rcr
jne
iret
arpl
in
stos
fs
fisubr
out
hlt
cmp
mov
jmp
inc
sahf
(bad)
dec
jp
sahf
loopne
sbb
mov
stc
enter
es
into
shl
mov
std
mov
fwait
sbb
add
inc
mov
or
mov
and
sub
(bad)
mov
cmps
cmp
mov
mov
sub
add
mov
and
push
cmp
cmp
jo
cmp
xor
jb
jae
mov
mov
xchg
mov
xor
iret
mov
mov
pop
fsubr
and
xor
inc
xchg
add
inc
xchg
xor
mov
dec
or
mov
xchg
(bad)
adc
add
jge
or
jo
arpl
stos
and
xlat
(bad)
xlat
dec
daa
inc
in
(bad)
xchg
ficomp
sbb
push
arpl
cwde
(bad)
std
test
sti
pop
ret
mov
ins
add
jge
out
das
xchg
cmp
inc
nop
mov
dec
sti
in
or
leave
lods
sbb
xlat
ja
inc
push
push
hlt
ins
mov
jle
jg
stos
iret
push
cmp
xchg
fldcw
or
add
repz
repz
mov
in
fwait
mov
cmp
sbb
mov
inc
xchg
xlat
xor
movs
add
mov
fild
and
stos
fld
outs
cs
pop
xchg
pop
and
push
std
add
xor
pop
je
jnp
push
mov
lds
adc
dec
in
js
lock
pop
adc
ret
and
and
push
xchg
push
hlt
cld
pop
sub
fcomp
add
inc
xor
jge
sar
hlt
fcomp
fild
jg
pop
fst
dec
ret
outs
mov
fiadd
je
sar
frstor
(bad)
das
cdq
inc
test
sar
jmp
frstor
jmp
inc
clc
or
aad
cmp
cld
das
fcom
pop
or
inc
test
push
mov
sbb
xchg
cmp
ficomp
lods
pop
imul
pusha
mov
ja
cli
sahf
sub
enter
in
into
mov
sub
push
mov
jns
sbb
adc
dec
or
mov
scas
jecxz
push
nop
clc
lds
pop
int
call
jecxz
retf
imul
addr16
sub
je
mov
push
outs
inc
fistp
jg
outs
test
cdq
iret
xor
(bad)
std
into
in
dec
shr
xchg
jmp
sbb
pop
add
in
dec
push
popf
pop
cmp
mov
aaa
imul
ficom
cmc
sbb
mov
inc
(bad)
mov
jmp
mov
icebp
dec
movs
jecxz
arpl
xchg
push
mov
pop
das
scas
mov
(bad)
xor
push
int3
add
arpl
cmp
mov
repz
fadd
data16
nop
xor
setnp
push
jae
ret
pop
dec
outs
cmp
call
jg
xchg
and
iret
lods
std
or
mov
cmps
mov
xchg
aaa
push
fld
into
add
mov
cmp
(bad)
in
ror
dec
cmp
mov
mov
adc
aam
dec
icebp
iret
ds
jns
dec
shr
xchg
in
xchg
mov
or
ins
lds
into
mov
jge
mov
sbb
mov
test
stos
out
addr16
adc
mov
cmp
push
enter
sub
add
test
fdiv
xor
sahf
push
fnstsw
imul
jns
adc
sbb
xlat
or
adc
das
je
jl
inc
scas
pop
ss
stc
mov
pcmpgtw
mov
out
(bad)
aam
xchg
jns
fistp
imul
and
xchg
sti
int3
inc
add
sbb
jbe
repz
push
mov
dec
fld
push
push
fdiv
adc
mov
pop
jb
dec
out
fisub
cmc
lods
xor
int
lock
cmp
test
fisub
outs
lds
cmp
scas
push
jno
cmp
sub
in
loope
and
inc
adc
(bad)
loop
adc
cmps
sub
in
adc
movhps
mov
out
fwait
push
pop
or
imul
(bad)
outs
repnz
xchg
sbb
ins
jne
repnz
pop
sub
das
fimul
pop
mov
loop
out
(bad)
sub
dec
fistp
xchg
scas
sti
pop
scas
icebp
enter
or
add
icebp
mov
cmp
out
(bad)
cmps
mov
inc
cmc
jge
pop
shl
or
fimul
mov
push
leave
(bad)
cs
loop
(bad)
lahf
cmp
je
xchg
xor
outs
movs
adc
inc
add
jle
add
or
sbb
(bad)
sub
mov
push
sbb
and
adc
jnp
push
and
pop
repnz
aam
popa
nop
(bad)
and
mov
fnstcw
pushf
jp
stos
test
sub
pop
sbb
or
xchg
pop
xlat
xchg
dec
fs
mov
dec
into
push
pop
xor
push
hlt
mov
xchg
add
push
mov
loop
and
fisttp
cld
and
sahf
je
pop
push
movs
jo
(bad)
arpl
push
aaa
mov
xor
xor
mov
xor
loope
inc
out
cmp
stos
or
fsub
enter
xchg
or
dec
sti
imul
repnz
mov
or
cmp
aaa
(bad)
xchg
ds
push
and
and
(bad)
cli
sbb
sbb
lock
push
clc
(bad)
movs
mov
(bad)
gs
push
neg
and
or
add
ja
mov
xor
push
cwde
ins
in
cmps
(bad)
jns
xchg
rol
clc
sub
pushf
dec
retf
jo
adc
ss
aam
xor
daa
jbe
sti
nop
mov
lds
(bad)
aas
cmc
lds
rcr
cs
mov
stc
or
and
adc
into
lock
imul
push
xor
jle
aam
mov
push
repnz
out
ffreep
or
jl
push
jmp
push
push
or
push
bound
lock
sub
jmp
sub
lods
xchg
adc
mov
mov
je
xchg
mov
ficomp
and
cmp
push
pop
add
gs
push
ror
(bad)
sub
dec
and
(bad)
sbb
pop
imul
sar
shr
push
mov
cwde
mov
push
dec
and
movs
pop
push
or
push
out
aaa
fldl2e
fidivr
jnp
xor
shr
xor
ficom
inc
stos
aam
pusha
mov
jns
sbb
and
mov
jne
ret
sbb
movs
int3
lock
fstp
les
(bad)
das
dec
fstp
pop
adc
pop
mov
add
or
mov
clc
cmp
sub
daa
popa
fs
ja
test
gs
sbb
inc
neg
inc
inc
push
jmp
repz
add
ins
lahf
jno
nop
add
xchg
mov
popa
mov
movs
lds
sub
pusha
loop
dec
jnp
dec
pop
call
fwait
xor
xlat
inc
sbb
lds
lahf
sbb
stos
js
lods
rcr
jne
dec
call
cmp
dec
jno
scas
cmp
imul
push
mov
in
push
jecxz
xor
jns
adc
mov
sub
fidivr
into
sbb
(bad)
out
into
test
fwait
pop
sbb
add
push
xor
sbb
and
sbb
cmp
mov
arpl
fmul
rcl
pop
(bad)
out
mov
mov
push
addr16
rol
mov
retf
sbb
dec
mov
ret
xor
mov
movs
mov
and
sbb
ret
add
mov
sbb
into
mov
jae
adc
jae
push
dec
xchg
lock
or
jns
aaa
dec
add
in
sbb
mov
adc
add
sbb
jae
pop
into
inc
xor
lods
xor
sub
out
in
ficom
fcmovb
push
sbb
sbb
inc
push
mov
push
add
push
adc
out
adc
xchg
in
mov
out
mov
sbb
mov
icebp
repz
and
sbb
es
jb
cmc
push
jo
and
(bad)
dec
mov
lods
daa
mov
inc
ja
aas
push
jmp
in
fidiv
xchg
jmp
mov
pop
scas
xor
imul
popa
mov
mov
jp
cmp
push
push
(bad)
js
fisubr
or
jne
movs
cmp
bound
sar
scas
popa
or
inc
mov
(bad)
pusha
push
sbb
imul
inc
push
shl
mov
fdivr
into
out
int
and
ds
push
inc
lods
dec
xchg
dec
add
jnp
and
add
ja
stos
outs
and
fisttp
jl
div
and
cmps
int
lods
sub
inc
cwde
inc
pop
adc
xchg
cwde
les
jl
std
xchg
repnz
(bad)
sahf
lahf
cs
jg
ss
scas
adc
sub
daa
fdivp
ins
sahf
xor
pop
jb
shl
xor
in
or
and
sbb
int3
jmp
fld
out
sbb
outs
lea
push
sub
(bad)
mov
xor
adc
or
pop
cmp
dec
stc
iret
aam
sub
jb
cmc
adc
ins
out
stc
(bad)
sub
into
cmp
std
in
or
mov
cmp
bound
sub
dec
loopne
inc
out
mov
mov
repz
test
push
sub
cmp
repz
sub
les
xchg
mov
push
pop
not
mov
es
lods
pop
arpl
add
ins
pop
and
inc
mov
add
jbe
call
cdq
adc
sbb
in
sbb
stos
iret
bound
shl
retf
push
xor
dec
or
sub
mov
jge
mov
dec
cmp
cli
shr
mov
pushf
mov
ror
mov
dec
cmc
cs
fisttp
fcomp
mov
xchg
jecxz
call
gs
push
in
jb
imul
js
mov
dec
es
sub
pop
cmps
sbb
sub
lods
outs
push
jno
mov
jne
(bad)
xchg
out
(bad)
cs
pop
iret
hlt
push
jmp
xor
pop
dec
inc
icebp
or
mov
push
rol
and
xlat
je
(bad)
out
jae
cwde
fs
cmps
jns
dec
ins
add
js
adc
pop
in
push
into
xlat
mov
add
mov
call
and
hlt
outs
lea
mov
push
and
stc
lds
repz
xor
ret
imul
pop
fcmovb
jne
cmps
jns
or
mov
or
rol
hlt
jmp
cmps
sub
int
enter
pop
mov
ret
rol
ja
push
sar
add
dec
(bad)
jmp
bndldx
sbb
inc
adc
jp
xor
popf
mov
cs
imul
pop
dec
lds
ss
jp
pop
cmp
mov
cmp
and
mov
inc
stos
lods
dec
jno
sub
push
or
inc
push
inc
inc
sahf
pop
sbb
cmp
hlt
jmp
dec
popa
sbb
or
aam
(bad)
and
fdiv
or
popf
out
paddb
push
daa
cwde
jg
sbb
movs
cmp
fs
mov
mov
or
adc
hlt
jg
icebp
test
dec
mov
cmp
xchg
fcom
ret
pop
dec
outs
or
nop
push
fild
inc
push
loopne
lea
jg
ja
pop
pop
inc
imul
fiadd
cld
div
mov
fstp
add
ins
or
cmp
lods
in
cwde
xor
jo
push
mov
in
adc
mov
sbb
pop
mul
not
xchg
(bad)
pop
adc
adc
xchg
mov
dec
and
pop
or
outs
cmps
adc
jecxz
mov
jns
lods
xchg
fidiv
sbb
fmul
push
addr16
ss
shl
imul
sar
fstp
mov
dec
xchg
xor
add
aam
push
cmps
push
out
or
push
pop
inc
out
add
(bad)
loopne
cmps
or
arpl
fwait
mov
sbb
cwde
repz
int
jmp
jns
(bad)
mov
enter
call
stos
adc
ja
cmc
test
and
loop
scas
ja
es
pop
jae
mov
pop
in
mov
arpl
enter
lahf
and
movs
aam
out
adc
jge
pusha
retf
icebp
sbb
adc
push
cwde
in
jnp
gs
cmp
pop
mov
test
movs
push
jmp
into
push
aad
fcomp
add
lods
test
das
mov
xchg
jae
(bad)
loop
loop
test
imul
sub
repnz
add
cdq
pop
sbb
adc
scas
lods
dec
or
xor
stos
add
call
fcmovnu
or
xchg
cmp
mov
fwait
add
dec
add
imul
repz
push
cmp
jo
cli
loop
and
xor
jnp
clc
mul
cmp
push
jmp
adc
jae
mov
fcmovu
lods
or
xchg
out
or
sub
dec
ret
pop
mov
pop
and
adc
inc
mov
fxam
popf
pop
rcr
inc
push
repz
mov
push
retf
cdq
jno
(bad)
(bad)
mov
add
(bad)
(bad)
sub
dec
or
inc
xor
sub
retf
sbb
repnz
test
(bad)
call
dec
mov
test
inc
push
cli
pop
scas
sbb
mov
test
loop
hlt
jl
(bad)
pop
add
out
movs
jge
sub
push
ror
gs
imul
out
xchg
xor
add
in
pop
out
mov
xor
pop
loopne
rcl
push
jecxz
mov
pusha
add
pop
sub
popa
ds
icebp
fld
jb
jmp
mov
mov
mov
rcl
(bad)
cmps
sub
fldenv
icebp
pop
ds
stos
jmp
mov
mov
pushf
ds
cmp
in
ins
add
mov
lahf
push
cdq
inc
xor
lds
xor
lods
mov
out
xchg
push
add
xchg
test
sti
xchg
mov
mov
or
xchg
pop
pop
xchg
mov
or
mov
dec
pusha
xchg
inc
cmps
mov
push
enter
pusha
ja
pop
xchg
pop
gs
cmp
pop
dec
xchg
pusha
fild
dec
test
jo
pop
sub
in
dec
mov
cmc
inc
jne
xchg
sub
add
pop
out
mov
add
jecxz
fst
call
(bad)
sahf
push
sbb
fld
push
into
jae
arpl
cmps
mov
jnp
xchg
into
dec
adc
stos
cs
inc
sub
adc
push
sub
or
popf
pushf
add
cmp
fsub
xchg
xor
hlt
iret
jp
inc
stos
mov
xchg
retf
outs
push
or
mov
loopne
jmp
and
mov
xchg
xor
loope
sub
jbe
inc
sahf
dec
push
in
iret
fld
cmp
call
movs
lods
(bad)
inc
fist
idiv
xor
and
xchg
int3
cmp
jnp
icebp
arpl
data16
ror
sahf
aad
adc
(bad)
lea
mov
pop
in
aaa
sub
ret
and
nop
jmp
clc
jmp
cmp
jl
sahf
(bad)
shr
in
add
repnz
mov
mov
push
add
jmp
je
(bad)
xor
sti
mov
pushf
fdivr
dec
loope
(bad)
inc
xchg
daa
dec
retf
clc
add
dec
jecxz
adc
mov
sub
sbb
mov
fwait
mov
and
xchg
mov
mov
test
pop
ret
stos
(bad)
mov
jne
push
js
fcom
push
icebp
dec
popf
add
loope
jcxz
xchg
xchg
call
sbb
cmps
cmps
or
test
ret
jmp
or
jl
stos
in
mov
fnstsw
adc
sbb
outs
jne
push
mov
sti
and
popa
repnz
xor
movs
shr
bound
jle
mov
movs
clc
aaa
lock
pop
pop
add
mov
xchg
aaa
loop
fbstp
dec
sbb
sub
aas
mov
ja
mov
mov
adc
loop
jmp
dec
sbb
mov
inc
pop
adc
std
pop
repz
pop
xchg
mov
test
(bad)
(bad)
ins
retf
stc
out
sub
cmps
or
jae
(bad)
push
adc
fcomp
cmp
jp
ins
or
lahf
mov
inc
fistp
out
sbb
mov
enter
mov
adc
retf
and
je
mov
jns
push
jae
sub
fcomp
cmp
inc
in
pop
lea
jno
push
nop
cmp
xchg
imul
push
fldcw
pop
jl
mov
and
and
lahf
mov
xlat
push
fisub
pushf
cmp
aam
cmp
dec
inc
je
xchg
clc
or
imul
jmp
mov
(bad)
cld
icebp
push
scas
in
hlt
fsub
dec
dec
lds
aam
cmp
mov
add
mov
xchg
leave
scas
pop
push
mov
xchg
inc
push
sbb
mov
nop
xlat
push
test
jne
mov
inc
xor
pop
mov
lahf
or
adc
scas
iret
pusha
fnstcw
mov
sbb
ret
cli
or
(bad)
imul
jnp
daa
(bad)
push
test
ficom
sub
pusha
mov
in
add
loopne
bound
movs
mov
or
cmp
sbb
and
aam
fwait
je
sub
cmp
test
or
scas
fnstsw
or
push
rcr
aad
push
xlat
ja
movs
clc
push
daa
and
mov
pop
and
mov
aas
xchg
cmp
xchg
sbb
je
aas
bnd
mov
sub
lods
lea
or
ss
add
add
pop
mov
test
inc
add
sar
mov
jmp
push
xor
adc
or
in
pop
and
adc
lds
pusha
or
xor
xor
clc
push
mov
call
fisub
mov
jp
or
cmp
push
dec
aaa
cmp
mov
mov
clc
sbb
cmp
dec
jo
or
xchg
inc
int
xchg
jns
push
into
bswap
and
aam
retf
pop
jmp
xor
stos
enter
cmc
mov
mov
sbb
dec
sbb
jno
push
ret
retf
loop
and
xor
or
daa
ss
sahf
cmp
push
out
outs
pop
test
stos
stos
jae
push
mov
push
jmp
dec
in
imul
sbb
xor
lods
xlat
ins
loop
gs
xchg
enter
aas
stos
ss
ja
mov
xchg
(bad)
in
xor
(bad)
loope
and
push
or
outs
mov
gs
dec
mov
fist
data16
pushf
out
jmp
adc
or
mov
mov
nop
dec
mov
and
add
add
dec
or
jmp
outs
(bad)
ss
mov
pop
mov
cld
cli
or
ins
jp
aam
cmp
xchg
std
mov
xchg
push
bound
pop
pop
dec
push
sti
jmp
adc
dec
mov
call
push
bswap
fbld
adc
mov
mov
sbb
pop
sbb
ret
movs
mov
mov
pop
hlt
xlat
call
inc
arpl
daa
dec
gs
not
repz
outs
in
imul
mov
or
int3
mov
rcl
pop
sub
jmp
add
lods
lea
pop
arpl
and
bound
inc
(bad)
sbb
out
sub
les
dec
add
dec
mov
call
ficomp
fild
sbb
dec
mov
jns
and
or
(bad)
ftst
lock
mov
not
mov
out
loope
or
sbb
cmp
add
lods
jbe
and
dec
mov
repz
mov
dec
popf
inc
loopne
push
xchg
pushf
mov
xor
push
in
xor
cli
nop
loope
int3
xor
adc
sti
inc
push
sbb
mov
test
or
sub
out
mov
popf
call
cmp
inc
shl
lods
shr
imul
push
in
sub
jg
aaa
mov
mov
mov
or
inc
and
mov
or
sahf
not
xchg
add
inc
fcomp
stc
push
jno
cmp
jge
push
adc
daa
test
push
mov
xchg
jp
xor
mov
xor
rol
sbb
call
push
sub
pop
and
shr
js
ins
mov
arpl
cmp
cmc
enter
cmp
scas
lods
add
adc
and
sbb
daa
mov
mov
call
mov
mov
and
jnp
sub
jle
in
or
mov
icebp
fmulp
les
call
fwait
and
inc
add
ds
dec
add
push
or
mov
(bad)
xsave
in
imul
imul
fucompp
sbb
in
(bad)
enter
add
ficom
inc
jge
xchg
lea
popa
fsubr
dec
int
inc
or
mov
(bad)
jmp
mov
dec
dec
lods
xor
je
ret
ror
(bad)
cmp
dec
mov
movs
cmp
rcr
dec
cdq
pop
mov
pop
leave
inc
mov
sub
push
xor
aas
mov
jns
scas
jp
dec
sbb
icebp
mov
loop
stos
clc
push
pop
mov
call
cmp
mov
push
inc
fbstp
sbb
pop
dec
add
fpatan
pop
xor
sub
fld
xor
and
sub
leave
sub
div
scas
adc
cmp
leave
scas
adc
test
cld
cmps
idiv
(bad)
(bad)
push
inc
and
mov
pop
mov
xlat
inc
dec
inc
sar
xchg
or
sub
dec
sbb
shr
mov
aas
jl
mov
adc
sub
cmp
shl
xor
ror
mov
mov
mov
mov
jns
cmp
adc
fwait
repnz
mov
cmp
arpl
lea
or
mov
xor
mov
sbb
adc
add
add
add
jl
jle
sti
mov
popa
push
mov
inc
mov
mov
and
fstp
jmp
loope
dec
sbb
daa
pusha
add
cs
cmp
add
daa
inc
add
out
inc
fild
out
cmp
fidiv
jbe
sahf
iret
cmp
retf
jb
jns
sbb
mov
and
movs
adc
and
fwait
pop
push
jp
je
and
jno
mov
pop
xchg
loop
jmp
sar
cmp
pop
or
or
sahf
mov
jle
cmp
inc
gs
retf
(bad)
lock
or
cdq
or
dec
xchg
push
cmp
shl
lea
leave
mov
scas
sbb
sbb
and
movs
fcmove
(bad)
jbe
les
xchg
dec
add
movs
call
jle
jns
popa
(bad)
jo
out
into
sar
and
(bad)
repnz
xor
push
lods
sub
jo
ja
mov
into
mov
sahf
pop
daa
sahf
cwde
mov
unpckhps
fmulp
inc
or
ret
inc
xor
cmp
in
mov
jns
ror
retfw
sbb
call
fnstenv
pop
jno
xchg
adc
nop
and
fistp
rcr
stos
lea
adc
out
and
jge
dec
movs
jp
mov
ja
mov
mov
or
hlt
mov
pop
sub
retf
mov
pushf
mov
xor
or
xchg
pushf
mov
or
inc
dec
iret
mov
es
repz
push
out
jns
icebp
mov
cs
mov
push
and
pop
cmp
iret
mov
pop
outs
stos
or
jo
js
scas
and
jo
mov
inc
(bad)
fdiv
in
test
xchg
mov
mov
jmp
shr
pop
push
dec
pop
sar
add
xor
rcr
pop
sub
test
cmp
test
(bad)
xor
mov
lahf
inc
leave
fcomp
int3
(bad)
out
jecxz
and
and
add
mov
idiv
stos
sub
retf
or
dec
pop
pop
icebp
fmul
add
xchg
ins
aam
dec
xor
cmp
mov
push
mov
dec
cld
add
push
mov
nop
sahf
fiadd
les
push
aam
dec
or
jno
push
mov
clc
imul
jb
adc
lds
aam
push
adc
dec
daa
sbb
pop
jae
mov
jno
sbb
in
fwait
ins
dec
ins
mov
test
das
jl
jl
sub
aas
sbb
(bad)
cmp
rcl
loope
and
xchg
jnp
test
fsubrp
jnp
repnz
mov
das
jo
adc
or
add
call
in
data16
adc
push
mov
push
cmp
test
pop
cmp
shl
arpl
loope
xor
push
cs
mov
jmp
dec
jp
inc
int3
imul
ret
aas
sub
and
outs
mov
inc
aam
mov
sub
scas
jp
adc
cmc
jle
dec
inc
push
fcom
(bad)
mov
addr16
pop
pop
mov
gs
pop
call
and
jns
sub
push
mov
inc
es
(bad)
cmp
je
xor
xchg
cmc
xchg
dec
imul
lods
lds
test
stos
call
cmp
push
out
mov
test
out
jl
or
shl
ja
fs
lock
cli
lea
addr16
mov
aad
movs
sbb
js
push
and
xchg
imul
jmp
pop
stos
xchg
push
mov
cmp
xor
add
aaa
xchg
test
into
mov
xor
dec
sar
sbb
xchg
push
sub
or
into
push
cld
adc
or
mov
sahf
(bad)
jl
mov
ja
adc
loop
aaa
loop
sahf
sbb
mov
shl
xor
popa
push
popf
mov
xchg
dec
xchg
xchg
idiv
std
and
popa
mov
scas
les
xchg
test
cmps
or
sub
jae
mov
and
sub
inc
repz
sub
inc
lea
fisub
test
stc
shl
test
cmps
push
sbb
ret
add
dec
mov
(bad)
das
push
repz
stos
call
and
adc
pop
push
cs
test
cmps
hlt
mov
aad
imul
cwde
test
jle
stos
inc
hlt
and
sti
lods
jbe
pop
add
push
jmp
popf
clc
add
shr
dec
ss
mov
mov
es
mov
and
fcom
add
sub
or
cmp
jle
xchg
mov
cwde
or
or
ds
pop
movs
cmp
sbb
mov
and
jae
cmp
pop
jge
nop
or
cwde
js
adc
lea
lock
sti
ror
cmp
arpl
cwde
fs
(bad)
mov
push
test
ss
scas
fs
or
sub
adc
out
in
imul
jo
xor
mov
popa
add
shr
xchg
bound
leave
mov
ja
jne
mov
mov
faddp
inc
out
loopne
or
xor
lods
jp
push
sbb
popf
cmps
mov
clc
inc
pusha
cld
shl
lds
out
sbb
aaa
inc
bound
sub
pop
xchg
sahf
in
shr
bound
std
or
add
jae
cmpxchg
push
addr16
ins
xor
dec
scas
push
scas
icebp
imul
les
xchg
test
push
sbb
call
jns
sbb
retf
jns
int3
pop
xchg
sbb
xchg
ins
sbb
mov
mov
mov
sbb
mov
or
mov
not
fcom
ins
mov
and
mov
xor
xchg
popf
push
jmp
stos
aaa
sbb
aas
shl
jae
xchg
mov
pop
xchg
pop
retf
out
inc
pop
or
pop
inc
inc
cdq
(bad)
mov
push
mov
mov
push
push
xchg
adc
jg
ja
pop
inc
jae
fmul
lock
sti
ja
fs
int
pop
loop
xor
fwait
test
outs
lea
push
imul
in
cmp
mov
arpl
xor
push
or
inc
or
and
(bad)
adc
ret
mov
or
out
push
mov
push
xchg
cmp
sbb
mov
loop
stc
add
or
int
xlat
scas
push
sub
stos
lahf
push
test
lds
or
mov
stc
xchg
imul
pop
or
sbb
mov
fist
inc
jge
shr
xchg
pop
in
rcr
pop
test
cmp
retf
lahf
jo
pop
lgs
cmp
(bad)
addr16
jmp
xchg
sub
add
out
popf
fdivr
js
test
aaa
push
popf
ins
adc
ja
mov
movs
cmp
dec
(bad)
jle
mov
or
aam
adc
xchg
je
out
sub
ror
(bad)
(bad)
cmc
ins
ja
out
mov
shl
std
mov
cmp
jbe
pop
xor
imul
sub
cdq
into
inc
jge
daa
loope
mov
mov
xchg
shr
mov
jecxz
int3
mov
jne
ss
aas
sbb
jge
jl
sti
sti
xchg
xor
push
xchg
out
cmp
xlat
outs
adc
cld
shl
imul
pop
inc
repz
push
and
mov
xor
mov
cmp
adc
das
or
push
jge
test
cli
pop
daa
adc
jmp
mov
push
dec
sahf
pop
xor
mov
stc
out
jg
hlt
repz
mov
loop
xor
rcr
lea
pop
into
stos
or
rcr
ins
aas
movs
mov
lea
repnz
sub
popa
fldenv
in
dec
jg
inc
xor
or
pop
iret
call
sbb
push
mov
push
pop
dec
adc
mov
cmp
jecxz
fstp
in
mov
jne
loop
int
pop
loop
or
mov
loopne
call
push
mov
pop
js
jno
push
inc
pop
inc
nop
hlt
mov
add
push
pop
xchg
in
(bad)
mov
imul
jb
fsub
test
mov
pop
and
cmp
int3
pop
push
test
inc
and
xchg
inc
mov
pushf
mov
(bad)
mov
cmc
adc
outs
jle
dec
xchg
cmp
mov
adc
lahf
jae
jae
jl
xlat
adc
add
jle
(bad)
movs
push
dec
mov
or
jmp
xor
fsub
movs
in
fs
sahf
inc
pop
cmps
sub
ror
cmps
mov
or
jp
xchg
mov
(bad)
call
cmp
idiv
xchg
scas
jno
fsubr
or
sub
lods
daa
dec
cmp
sbb
adc
movs
mov
cmp
dec
pop
xchg
in
inc
imul
pop
pushf
rcr
fwait
adc
mov
cs
(bad)
jbe
pop
test
adc
mov
and
or
inc
jns
jl
jne
adc
push
retf
mov
jns
or
xchg
inc
rol
inc
in
scas
jno
push
aam
push
cdq
mov
div
xchg
loop
and
test
inc
popa
sti
mov
mov
xchg
scas
cmps
push
xor
cld
sbb
rcl
test
shl
inc
aam
add
in
cwde
sbb
out
fs
sub
cld
inc
loopne
cmp
gs
cmps
add
(bad)
aas
mov
fdivr
nop
dec
cmc
push
xchg
adc
jmp
sub
out
cli
pop
es
outs
icebp
loopne
mov
bound
mov
jnp
fwait
test
add
push
and
gs
dec
adc
aaa
fadd
push
(bad)
pop
mov
shl
inc
pushf
inc
sbb
rcl
loopne
fstp
daa
cli
outs
add
dec
cs
imul
out
sub
repnz
adc
(bad)
mov
mov
cli
shl
in
pop
into
xor
and
call
xchg
mov
out
xchg
ds
inc
test
rol
out
ret
out
popf
xchg
cmp
push
push
mov
pop
xor
sub
shl
mov
xchg
test
enter
in
add
lds
add
cmp
push
and
aaa
div
outs
mov
pop
sub
je
push
repz
cmp
repnz
jns
xchg
cld
adc
and
ja
lahf
lock
test
pop
sub
je
inc
int
lea
cmp
pop
ret
out
cmp
lods
cmp
loop
pop
fcom
arpl
push
add
jmp
imul
loop
daa
cs
sub
cmp
xlat
das
ror
pusha
cwde
dec
mov
test
stc
pop
push
sbb
sub
mov
lods
mov
jp
mov
pop
aad
out
sub
mov
xchg
cmp
push
(bad)
cwde
push
push
or
daa
popf
jg
movs
add
lods
call
int3
ror
or
mov
push
popf
scas
adc
add
mov
pop
int3
pop
fincstp
out
sbb
mov
push
pop
xor
fmul
dec
shr
dec
mov
fst
inc
or
sub
ss
pop
enter
cmovb
push
push
popf
fcmovbe
add
inc
scas
retf
dec
mov
push
xor
and
cdq
cmps
repnz
call
sbb
xchg
stos
xchg
pop
xor
je
cmp
aaa
int3
mov
mov
inc
lods
mov
mov
sti
inc
ins
cmp
and
imul
pop
xchg
call
or
test
test
daa
test
data16
or
movs
dec
cmp
push
out
adc
leave
add
inc
int3
xlat
cmp
mov
or
mov
or
js
ret
jg
icebp
jmp
fwait
lods
mov
sahf
lea
lods
sahf
add
out
(bad)
xchg
mov
mov
retf
fstp
ss
mov
and
xor
adc
adc
sbb
mov
int
mov
std
shl
jecxz
ins
(bad)
xor
dec
xchg
imul
and
mov
aad
pushf
pop
pop
stc
and
outs
mov
xor
aad
push
push
div
(bad)
jb
rol
jmp
aam
sbb
push
rcr
mov
je
sub
aad
repz
sub
xlat
cmp
cmps
mov
adc
call
inc
in
outs
fwait
jbe
lock
or
and
lds
or
jecxz
and
clc
int
ds
(bad)
xor
(bad)
jne
push
sbb
push
or
gs
mov
mov
cmps
mov
dec
test
inc
dec
cmp
inc
xchg
dec
imul
fidivr
push
or
push
dec
sar
jle
test
adc
mov
shr
inc
mov
jae
sar
and
pop
mov
into
cmp
les
dec
jle
add
add
(bad)
and
fwait
jmp
in
aaa
sbb
loopne
jmp
xlat
fwait
or
pusha
mov
mov
dec
pop
imul
xor
js
aaa
aad
shl
(bad)
idiv
out
out
(bad)
mov
mov
ficomp
out
shl
adc
xchg
shl
mov
test
add
sbb
xchg
rol
xor
jbe
pop
or
xor
call
mov
test
clc
hlt
pop
add
add
(bad)
enter
xchg
iret
jae
(bad)
(bad)
xchg
pusha
jg
mov
push
out
repz
icebp
sar
sahf
inc
mov
mov
ins
xlat
retf
dec
mov
jne
cmc
cli
ja
test
ffreep
mov
popa
rol
cwde
jp
lahf
les
and
loop
or
mov
add
fidivr
xchg
jbe
fidivr
jecxz
or
fdiv
mov
scas
jae
ds
popf
shl
popa
pop
add
cmps
out
mov
push
mov
loop
adc
mov
pop
mov
push
mov
push
fsub
cld
pop
and
dec
in
ins
retf
push
or
and
dec
push
pop
call
aaa
stc
sub
mov
sub
outs
xchg
pop
shl
fstp
push
lods
(bad)
pop
sbb
dec
jp
outs
push
idiv
hlt
mov
sbb
movs
jnp
sub
dec
cmp
pop
ds
push
lock
push
jns
push
jns
fcmovbe
inc
sub
repz
pop
not
xor
clc
xor
cmp
or
pop
fld
push
inc
loope
cs
popa
imul
in
lods
daa
das
adc
lds
aad
sbb
iret
in
adc
jnp
aas
pop
dec
or
fsubr
jg
inc
or
lods
mov
scas
sbb
cmp
dec
je
inc
scas
cwde
lods
jge
fnstenv
mov
sub
pop
ins
push
adc
mov
adc
mov
add
(bad)
push
dec
inc
cmps
jmp
jns
loope
add
movs
sub
fdiv
mov
mov
xor
cdq
out
adc
dec
shl
dec
and
mov
sbb
xchg
retf
test
neg
mov
ror
ja
fidivr
jnp
xor
sbb
xchg
imul
js
mov
push
ja
fcmovnbe
fild
add
scas
lds
cwde
out
jecxz
or
xor
jb
das
xchg
inc
xchg
xchg
lahf
mov
jle
test
in
repnz
push
or
jmp
pop
sbb
jns
shr
adc
push
sbb
add
hlt
mov
loope
cmp
call
int
add
jae
in
das
xchg
ret
and
enter
lock
mov
mov
mov
adc
rcl
neg
fwait
inc
mov
sar
(bad)
pop
sub
dec
bnd
cmp
into
mov
cmps
test
cmp
lock
outs
or
jge
mov
mov
push
aas
jmp
sbb
sbb
push
mov
or
push
xchg
call
mov
pop
pop
mov
inc
cli
mov
xchg
or
cmp
mov
jns
popf
mov
sub
outs
int
xchg
mov
scas
xchg
jne
push
or
ror
pop
out
jg
xchg
cmp
mov
mov
add
push
dec
pop
jne
lods
mov
dec
icebp
cmps
out
pop
inc
mov
int
jl
cmps
jns
into
movs
and
ror
loope
mov
push
es
scas
push
inc
and
test
push
pop
inc
mov
out
enter
popa
popf
repz
int
and
add
je
std
mov
sbb
es
inc
ins
or
xchg
xchg
sbb
fwait
xchg
addr16
pop
pcmpeqw
bound
loop
cmp
lahf
in
mov
stc
mov
sbb
icebp
loopne
rcl
fs
data16
(bad)
mov
mov
add
loopne
or
mov
div
ror
push
push
pushf
ret
fld
dec
movs
push
sbb
fnsave
ss
jb
add
mov
fimul
inc
mov
adc
lock
pusha
imul
xlat
xor
adc
mov
dec
rcr
mov
rcl
out
test
js
sub
imul
jo
xchg
jnp
cwde
fdivr
cmps
int3
sti
data16
inc
mov
xlat
mov
out
add
inc
add
int
mov
xchg
mov
andnps
push
sar
add
leave
movs
inc
xchg
or
or
push
cwde
mov
pop
and
pop
mov
js
push
cmc
addr16
sbb
sbb
arpl
out
adc
or
sbb
cmc
cmp
addr16
xor
mov
test
ds
loopne
gs
pop
inc
mov
push
repz
xor
pop
mov
mov
aas
movs
push
inc
cli
and
sub
add
fwait
mov
ret
retf
or
imul
aad
(bad)
jle
xchg
and
cmp
nop
and
cmp
retf
ret
mov
inc
fs
pop
fsubrp
xchg
cld
jbe
sbb
fwait
xchg
mov
cwde
mov
sbb
popf
sub
cmp
leave
adc
mov
or
movs
mov
or
jmp
xchg
jb
xchg
pushf
loop
fstp
test
fldenv
cmp
sub
stos
and
jmp
jmp
repz
mov
jecxz
arpl
outs
cmps
add
out
jmp
jmp
inc
jno
sub
adc
ins
xchg
sub
(bad)
movs
jae
jno
and
cmp
out
scas
imul
pop
mov
pop
xor
popf
das
dec
jp
xor
add
retf
pop
push
lods
sti
adc
xchg
or
xchg
cmp
sti
jno
cmp
enter
xchg
pop
jle
mov
cmp
and
std
pop
shl
cmp
push
fld
in
push
push
push
retf
outs
sbb
repz
cmp
stos
inc
mov
sar
cmp
je
dec
pop
mov
pop
cmc
add
out
inc
neg
movs
cmp
jmp
mov
pop
mov
cmp
or
mov
pop
das
push
xor
inc
inc
xor
jge
cmps
mov
push
mov
retf
or
add
cmps
inc
cwde
jecxz
sub
popa
cld
stos
push
push
push
xchg
arpl
xchg
dec
sbb
ret
loop
cmp
cmp
push
jle
mov
dec
xlat
mov
fisubr
inc
adc
jle
ins
in
adc
push
cld
or
loop
add
sbb
push
adc
mov
xor
test
fs
jmp
lods
stos
push
fwait
cmp
jmp
pop
lahf
add
and
mov
push
inc
adc
std
out
push
mov
test
sbb
push
cmps
xor
mov
arpl
ds
outs
(bad)
cwde
ret
and
imul
and
enter
mov
jle
mov
cmps
pop
cmp
and
push
dec
sub
les
xor
mov
cmp
data16
lods
pop
cmp
clc
push
outs
js
addr16
add
cmp
ds
jne
fwait
jno
mov
les
jp
fwait
push
movs
repz
mov
shr
xor
push
fdiv
xchg
rcl
ficom
loope
dec
das
jecxz
in
xor
cdq
inc
out
es
mov
pop
aas
ds
pop
rcl
xor
leave
cmp
or
sub
stos
xchg
aas
nop
cs
prefetch
pusha
call
cwde
les
dec
push
jecxz
mov
stos
and
cdq
mov
add
stos
mov
loopne
push
popf
cmp
add
lods
jp
call
cmp
imul
movs
loope
sub
xchg
ja
fidiv
icebp
push
xlat
sbb
sbb
and
xor
mov
dec
int3
or
jp
push
loop
int
or
cld
ret
dec
loopne
fidiv
test
cmp
stos
push
loopne
cmps
sub
out
mov
jns
(bad)
dec
jne
imul
add
dec
jmp
jns
xor
jmp
xchg
jmp
and
pop
jo
lods
mov
cmp
js
and
inc
cmc
pop
ins
out
xor
imul
data16
and
sbb
dec
inc
test
fld
into
xor
cmps
mov
or
xor
hlt
inc
add
pop
inc
add
cmps
stc
mov
or
mov
xchg
mov
(bad)
xchg
pop
ins
jb
pop
cmp
sub
mov
cs
xchg
jno
repnz
aad
or
dec
faddp
(bad)
fnsave
fstp
mov
xchg
shl
push
imul
fld
sub
jmp
cmp
inc
sub
(bad)
faddp
and
fisttp
xlat
adc
cwde
(bad)
push
pusha
sbb
out
lods
dec
mul
sbb
inc
jnp
loopne
sub
imul
(bad)
sti
(bad)
daa
cmps
xchg
sbb
into
push
push
jmp
push
out
add
iret
retf
inc
cmp
adc
shl
fild
loopne
ret
cs
mov
cwde
retf
nop
lahf
ret
loope
mov
out
ss
(bad)
inc
mov
ficomp
icebp
adc
pop
fidiv
cdq
lahf
ficom
fisub
pop
arpl
(bad)
scas
mov
ds
in
inc
pusha
sbb
dec
xchg
xchg
aad
in
arpl
fisttp
mov
and
std
jo
aaa
mov
push
nop
pop
(bad)
gs
xchg
(bad)
hlt
cmp
or
jnp
adc
pop
test
mov
dec
dec
fist
pop
cmp
ja
test
scas
outs
pop
jmp
or
(bad)
mov
sbb
ja
add
ret
jbe
dec
aaa
daa
xchg
mov
lods
call
jge
test
sar
clc
mov
xor
jnp
pop
bound
xor
and
ja
inc
retf
or
outs
xor
les
test
jns
sub
adc
test
and
fadd
fld
mov
mov
add
scas
xor
sbb
cli
in
or
xor
(bad)
daa
rol
sbb
xchg
inc
pop
lock
call
imul
retf
push
inc
add
idiv
xor
lea
adc
inc
pop
in
dec
sub
mov
jp
mov
scas
pop
jmp
mov
push
fdivp
ret
addr16
loop
mov
pop
loopne
stos
and
mov
push
jnp
cmp
(bad)
and
loopne
mov
and
add
aad
mov
cwde
add
pop
push
test
pop
mov
xchg
(bad)
adc
int
(bad)
or
mov
push
jbe
mov
sti
aad
shl
xchg
mov
call
cmps
ins
repnz
jae
aas
je
into
shr
sub
cmc
xor
jae
xchg
xor
mov
adc
push
cdq
xor
aas
enter
addr16
inc
cdq
not
or
cwde
adc
jne
dec
retf
or
leave
fmul
(bad)
lahf
repz
aad
xor
xchg
rcr
mov
movs
mov
inc
bound
add
xor
sbb
cmp
aas
sub
dec
mov
and
jnp
movs
or
fs
ins
mov
test
xchg
call
xchg
inc
cld
push
pop
cmps
dec
sbb
lahf
pop
or
mov
lea
mov
pop
push
das
mov
repnz
adc
jl
test
loop
neg
mov
jmp
cmps
adc
push
ret
xor
stc
lea
sub
shl
pusha
sbb
lahf
xor
push
jb
sub
dec
sti
mov
mov
aam
jge
std
dec
pop
(bad)
sahf
adc
push
cli
push
enter
stos
gs
fisub
mov
test
dec
ret
aam
and
addr16
hlt
xchg
fldenv
or
mov
ror
mov
inc
nop
aam
or
push
loope
mov
mov
int
sahf
int3
(bad)
aad
fwait
sahf
cmps
mov
mov
mov
cmps
jbe
repnz
jmp
jmp
push
cld
fcom
loopne
inc
and
jecxz
jae
cmp
sti
adc
aam
test
or
repz
cmp
mov
mov
adc
adc
add
test
das
push
in
or
lea
adc
bound
scas
shl
repnz
push
jno
sbb
cli
lods
mov
mov
or
fnstsw
xchg
or
into
int3
push
ds
inc
daa
add
cmps
xor
fiadd
adc
jo
loope
test
mov
sub
pop
mov
push
neg
jb
cmps
ror
gs
adc
pop
or
loop
jmp
sub
add
stos
in
or
cwde
cmc
fild
mov
daa
sbb
jne
pop
jmp
mov
jbe
scas
shl
out
push
and
inc
xor
add
cmc
dec
xchg
cwde
lock
jns
sub
inc
pop
mov
mov
adc
xchg
mov
neg
xor
movs
add
xchg
mov
fwait
cmps
arpl
test
int
pop
jb
fdivr
fwait
data16
xlat
jae
dec
and
leave
cwde
push
jnp
xor
inc
sbb
bound
repz
adc
add
lahf
pop
sbb
xlat
loope
fs
jne
retf
js
jmp
shr
cli
add
adc
adc
jmp
icebp
int3
push
(bad)
(bad)
pop
outs
cmp
aam
or
in
nop
dec
xor
push
inc
aam
xor
retf
add
pop
mov
push
js
ror
les
cmp
mov
jmp
or
in
ins
ficom
in
gs
jl
mov
sub
mov
mov
inc
iret
sub
js
or
jmp
mov
or
adc
sub
clc
fbld
or
or
sbb
lods
rcl
xchg
adc
ret
nop
int
sbb
jecxz
mov
mov
cmp
retf
das
loop
pop
and
dec
cmps
test
into
jbe
and
sbb
fs
dec
imul
push
and
(bad)
bound
pop
sbb
push
int
adc
adc
clc
xor
add
xor
cli
sbb
dec
mov
cmp
in
or
pop
call
sub
push
xor
std
dec
push
jbe
dec
out
pop
lods
sub
mov
dec
mov
iret
push
sub
adc
pop
jg
jnp
or
dec
dec
test
push
and
xor
and
adc
loope
xchg
imul
inc
jne
fstp
or
mov
jnp
and
sub
jnp
pop
pop
sub
add
push
or
icebp
mov
aam
outs
inc
inc
and
jg
pusha
xchg
mov
cmp
sub
mov
xchg
les
cmc
fild
xor
mov
int3
mov
dec
adc
loop
or
jo
add
lods
xchg
pop
in
dec
mov
(bad)
dec
or
shl
push
jns
(bad)
pop
xor
jae
xor
sbb
out
addr16
sbb
leave
std
push
sub
cmc
pop
mov
aas
or
pminub
jecxz
mov
mov
jl
imul
(bad)
leave
das
pop
gs
pop
cmc
pop
call
mov
dec
mov
mov
neg
sbb
cs
pop
sub
dec
enter
xchg
mov
sub
dec
sbb
out
addr16
and
lods
popa
inc
addr16
push
mov
jge
repnz
push
mov
stos
mov
mov
xchg
or
sub
push
loopne
xchg
not
into
jne
repz
sahf
mov
mov
xlat
pop
cmps
aad
lock
jno
push
imul
(bad)
cld
dec
je
lods
mov
lea
pop
sar
popf
dec
stc
sahf
xchg
sbb
push
cmps
movs
in
stos
sub
push
out
cmp
add
(bad)
xor
test
test
mov
imul
push
mov
inc
lods
stos
int
ins
add
stc
ss
loop
loop
in
xchg
sub
rol
mov
cmps
cwde
fstp
retf
lds
mov
ja
loope
ds
dec
iret
sub
fst
hlt
dec
out
adc
jl
sub
sbb
push
sub
lods
test
aaa
jae
push
sbb
cmp
cmp
dec
pop
adc
es
mov
aam
xor
sbb
mov
sub
shl
or
ins
test
lock
pop
jb
or
test
inc
daa
inc
int
cli
jmp
jmp
icebp
outs
sub
jo
mov
jmp
pop
cs
dec
jge
lods
fwait
jmp
jns
adc
aad
jp
sar
dec
sbb
pop
stos
fbstp
inc
scas
cwde
jecxz
push
push
xor
jmp
and
or
int
xchg
jle
mov
sbb
inc
jge
add
sbb
mov
dec
data16
std
dec
cmp
(bad)
ds
icebp
push
dec
test
hlt
jmp
dec
add
jne
stos
and
mov
pushf
and
gs
fldenv
cdq
aam
pop
dec
jg
jp
pop
mov
xchg
mov
cmp
mov
fldcw
clc
mov
sub
xor
add
fcmovbe
push
xor
int3
in
fsubrp
pop
pushf
cld
add
xchg
mov
(bad)
and
hlt
xchg
lods
xor
ss
dec
push
outs
sub
fistp
out
hlt
cmp
out
fist
inc
mov
fwait
sub
fcomp
xchg
(bad)
pop
sahf
dec
push
clc
pop
and
inc
rcl
fidivr
push
in
mov
push
cmp
(bad)
std
dec
and
clc
mov
sbb
imul
mov
(bad)
lods
in
add
push
push
push
xchg
es
stos
fidivr
js
dec
push
fcom
int
test
inc
stc
xchg
mov
call
cmc
or
mov
ds
dec
xor
imul
mov
push
and
out
js
or
fs
(bad)
(bad)
cli
leave
pop
sub
mov
sbb
stos
lds
sahf
mov
jne
das
mov
add
ficomp
jae
scas
sar
mov
ret
sub
jne
xor
push
or
dec
(bad)
in
hlt
les
push
or
dec
scas
ss
jle
test
loope
add
movs
jnp
adc
push
jo
out
push
push
shl
add
je
jno
add
push
iret
mov
ins
mov
test
jle
popf
xchg
jo
pop
inc
xchg
jp
cs
aad
jg
hlt
cmp
push
dec
sar
adc
pusha
add
(bad)
out
dec
cmp
lods
cmc
scas
and
jnp
cmp
jnp
clc
sub
cmp
sub
bound
xor
mov
les
addr16
xor
pop
or
fistp
fcmovnb
jmp
out
dec
je
cmc
sahf
jmp
and
mov
aam
pop
dec
test
popa
jno
mov
mov
jl
aaa
jmp
jno
dec
push
dec
mov
cmp
adc
dec
fsubr
mov
sub
(bad)
loope
shl
cmp
out
(bad)
xchg
repz
sbb
ins
pop
jne
aad
adc
scas
or
dec
mov
frstor
adc
cli
jg
arpl
jns
imul
dec
cwde
cs
out
and
push
ret
out
jge
dec
sbb
cmp
pop
jecxz
outs
mul
mov
popf
jg
ins
daa
cmp
sahf
sbb
nop
call
jl
(bad)
hlt
int
shl
cmps
mov
cmp
loop
outs
dec
aad
rol
(bad)
dec
pop
ret
add
jae
adc
jb
xor
fidiv
retf
and
jle
repnz
adc
sub
push
mov
add
lods
mov
xor
xlat
mov
mov
pop
sti
inc
xchg
push
xchg
inc
mov
iret
mov
(bad)
stos
pop
call
enter
jmp
(bad)
mov
fistp
mov
cmc
pop
imul
call
test
fcmovnu
shl
dec
sub
push
(bad)
fwait
imul
fwait
loop
lea
jne
(bad)
das
xchg
fwait
and
push
push
jne
arpl
mov
outs
fdiv
jl
add
mov
add
sbb
mov
mov
mov
stos
inc
std
cmp
jmp
or
aaa
dec
or
jne
data16
push
iret
push
ss
or
call
arpl
xor
mov
jno
inc
xor
das
je
jecxz
push
xor
jle
mov
(bad)
pop
dec
das
add
ins
fsub
and
mov
add
jne
popa
clc
out
outs
retf
pop
fdivr
bound
stos
(bad)
or
mov
fstp
cmc
in
jns
aad
xchg
inc
jl
(bad)
cmp
sub
push
retf
jmp
dec
mov
add
shr
mov
mov
xchg
mov
imul
pusha
dec
outs
or
fsub
mov
inc
inc
imul
sbb
mov
call
sbb
out
repnz
push
sbb
js
retf
mov
ja
adc
adc
sub
pop
jg
fldcw
out
imul
test
not
shl
sub
push
les
jnp
sbb
stos
adc
push
xor
call
cwde
lods
cmp
pop
push
es
sahf
(bad)
out
test
xor
cmc
xchg
push
inc
popf
leave
dec
out
jo
je
cmc
pop
pop
adc
es
outs
jmp
lahf
das
outs
xchg
adc
mov
es
scas
rcr
movs
ss
icebp
(bad)
xchg
aam
rol
pop
xor
mov
jnp
mov
cdq
xchg
dec
jmp
mov
outs
into
fdivp
cmp
and
jl
jb
call
inc
adc
cmp
push
mov
das
adc
ret
mov
jp
js
fcomp
fsubr
fwait
adc
xchg
lock
inc
mov
pop
and
cmp
push
cmc
or
sti
inc
inc
pop
adc
fimul
int
add
mov
lds
hlt
imul
push
cwde
add
inc
mov
xchg
mov
mov
jae
retf
xchg
and
adc
inc
jp
jns
and
push
jg
pop
movs
fwait
in
leave
lahf
cs
or
xor
(bad)
and
cwde
or
jb
jne
mov
inc
rcr
bound
dec
mov
ss
sbb
stos
hlt
pop
xchg
mov
sbb
inc
in
jnp
pop
daa
int
jno
pop
(bad)
cmp
cld
iret
adc
mov
scas
jne
je
mov
daa
loop
jge
or
cs
dec
jo
mov
js
or
outs
xlat
leave
xor
js
mov
xlat
arpl
and
cmps
sub
xchg
add
pusha
out
out
cmp
jne
xor
clts
adc
nop
adc
push
xchg
xchg
(bad)
rcr
pop
sbb
stos
mov
(bad)
jmp
dec
sub
mov
sahf
sbb
xor
arpl
call
jnp
pop
pop
jne
out
fisttp
into
aaa
bound
cmp
es
pusha
retf
mov
push
stos
bound
dec
sub
rcr
jne
ins
loope
inc
cmp
cmp
push
mov
cmps
jmp
mov
cmc
push
mov
(bad)
jo
or
retf
fldenv
aas
retf
ret
sub
adc
push
adc
aam
in
add
inc
ja
push
mov
push
push
sti
lea
sti
inc
adc
lods
sub
(bad)
mov
mov
fld
pop
test
in
cdq
inc
push
mov
xor
jle
xchg
adc
fimul
stc
mov
cli
jecxz
or
lods
mov
jmp
xchg
iret
xor
leave
mov
mov
jbe
mov
sub
clc
(bad)
xchg
sub
push
aaa
iret
or
sbb
lods
push
jmp
adc
adc
push
add
mov
add
inc
lods
jp
lods
xchg
test
add
jno
and
mov
jecxz
and
ja
jno
cmp
dec
rcl
ds
push
stos
fs
push
cs
ss
mov
clc
scas
cmps
or
fld
popa
xchg
cdq
mov
fsub
dec
pop
jecxz
ins
jg
out
push
pop
or
call
mov
sbb
jno
and
shl
jp
add
nop
rcr
adc
xchg
loope
lds
fcomp
fs
jno
push
call
jbe
pop
mov
and
cdq
cmp
sbb
mov
mov
pop
dec
push
nop
adc
sub
ret
dec
cmps
sbb
add
adc
mov
jb
(bad)
int3
inc
std
sbb
cmps
fsubr
ds
and
jmp
mov
mov
imul
fdivp
pop
cwde
sbb
mov
or
dec
push
or
out
push
cwde
jp
adc
sub
idiv
mov
mov
pop
cmps
fwait
shl
fwait
inc
dec
jge
push
pop
(bad)
cmps
jns
call
dec
mov
mov
int
out
jns
push
add
sbb
loopne
jp
inc
fcmove
jnp
adc
or
sub
mov
mov
fwait
shl
sar
or
idiv
ret
inc
mov
add
mov
or
dec
add
lahf
leave
sbb
mov
inc
aad
aas
mov
mov
inc
fld
or
pop
retf
xor
in
lahf
cwde
or
call
mov
loope
push
mov
in
sbb
mov
stos
pop
ret
aaa
(bad)
stc
mov
iret
or
adc
mov
push
jp
test
das
ror
xor
push
jo
mov
ins
mov
and
cli
sub
dec
jmp
outs
mov
leave
adc
shl
movs
sahf
les
xchg
cld
retf
ror
and
mov
aaa
and
xor
data16
enter
and
lds
pop
cs
lahf
leave
test
iret
sub
nop
ss
ins
push
fwait
pushf
movs
loop
mov
cmps
sbb
inc
jo
sub
add
sub
sub
jns
scas
add
inc
push
popf
mov
int
adc
movq
mov
icebp
inc
mov
dec
xlat
cmp
or
ja
xor
or
repz
fucomip
neg
ret
pop
fisub
lods
rcl
push
xor
fimul
sbb
add
xchg
cmps
dec
mov
jge
int
popf
sbb
inc
mov
and
jmp
pusha
ins
xor
and
xor
and
sar
inc
stc
fdivr
mov
add
stos
fldcw
repz
sub
push
fstp
lods
mov
in
mov
loope
sti
mov
and
pop
ja
pop
sbb
loop
cli
add
jns
add
sbb
sbb
shl
imul
out
hlt
loope
call
daa
or
xor
rol
push
push
pop
das
or
push
push
inc
sbb
imul
mov
aad
or
xor
add
lea
xor
mov
mov
and
addr16
bound
iret
sahf
and
and
xchg
xchg
and
cmp
(bad)
call
jno
sbb
loope
and
mov
xor
jno
pop
adc
cmps
xchg
mov
sub
mov
xchg
jge
lahf
scas
fs
repz
xchg
pop
ret
cmp
stos
pop
xor
mov
push
fwait
lahf
or
sub
(bad)
ins
cwde
in
sub
rol
inc
jl
ret
imul
cs
and
movs
add
dec
jne
js
dec
out
inc
jge
or
xor
and
test
movs
pop
je
int3
cmps
cmc
out
inc
sbb
mov
int3
sbb
adc
xchg
and
or
stos
popf
inc
fisttp
ror
lods
test
(bad)
repnz
ins
sub
aad
sbb
movs
(bad)
mov
imul
mov
and
dec
mov
outs
out
out
mov
push
test
iret
(bad)
pop
dec
fld
imul
cdq
pop
not
ficomp
pop
int
cmps
ja
xchg
lods
inc
sti
sub
sti
pop
call
cmp
in
icebp
das
cmp
lahf
or
and
cmp
sbb
push
or
pop
xchg
dec
outs
cli
jl
movs
fst
imul
sbb
call
sub
dec
xlat
arpl
push
mov
aam
xchg
in
inc
enter
(bad)
outs
push
mov
inc
add
enter
or
arpl
dec
jnp
ins
and
xor
add
dec
je
add
loope
sti
das
imul
call
mov
cmp
push
call
into
add
cli
loop
mov
push
adc
repz
push
out
clc
cwde
sbb
sub
cli
mov
push
xor
lods
sbb
inc
call
ror
aas
push
scas
push
jnp
fsubr
cmp
inc
int
pop
lock
inc
adc
lahf
or
shl
dec
sar
loope
in
push
test
cdq
mov
addr16
mov
popa
adc
xchg
xchg
ficomp
scas
cmp
rol
cmp
outs
(bad)
call
mov
mov
enter
into
sub
sar
cmp
pop
jne
inc
cli
xchg
sub
sti
mov
(bad)
cli
arpl
movs
sbb
fwait
xor
int3
leave
jl
cmps
xchg
out
(bad)
adc
cmp
outs
sbb
icebp
jmp
add
push
xor
inc
dec
sti
out
test
test
xor
jnp
sbb
jl
js
pop
in
xlat
or
jp
sti
pop
inc
nop
dec
and
fsubr
(bad)
(bad)
loope
mov
push
or
xor
fscale
and
cmp
retf
sbb
rcl
into
fild
shl
int
shl
es
sbb
mov
mov
sbb
iret
lock
and
dec
jg
sbb
jl
jmp
mov
mov
sub
mov
add
(bad)
inc
mov
mov
mov
(bad)
imul
sub
(bad)
int3
and
jmp
jmp
adc
jbe
mov
or
mov
pushf
mov
push
xchg
and
inc
jo
inc
cmp
in
pop
scas
sbb
inc
repz
aaa
sub
fnstsw
pop
fidiv
mov
stos
inc
sub
dec
mov
retf
mov
out
test
iret
jmp
inc
mov
sbb
cld
mov
or
ja
(bad)
out
pop
pushf
aad
mov
pop
out
test
jb
(bad)
jmp
jb
xchg
shrd
in
loop
mov
sub
mov
or
xor
stos
dec
fisubr
cmp
jbe
call
sbb
jns
or
jnp
ja
daa
or
ss
cld
shl
xchg
mov
stos
and
test
cmps
adc
bound
add
mov
cs
fistp
mov
pop
or
mov
or
mov
pop
aam
imul
std
push
xchg
gs
or
lea
inc
cdq
jnp
je
test
mov
and
mov
iret
mov
clc
dec
xchg
pop
shl
push
push
push
(bad)
mov
inc
mov
cmp
std
xchg
mov
add
popa
or
dec
or
jp
adc
cmc
nop
dec
jns
sub
in
loopne
dec
into
push
push
xchg
pushf
push
adc
test
ret
vcomiss
aad
aaa
fsub
mov
test
inc
ret
jp
pop
adc
push
mov
add
mov
cli
mov
push
push
dec
stos
inc
dec
sbb
sar
(bad)
pop
pop
repz
push
imul
mov
jne
add
retf
iret
repz
int3
mov
dec
movs
std
jo
rol
sub
lods
push
scas
popa
xchg
aam
mov
ret
retf
ss
jno
push
inc
xchg
out
je
sbb
mov
aaa
cmp
(bad)
jmp
in
adc
sbb
xlat
push
cmp
outs
call
dec
sub
and
jb
cmp
(bad)
pop
sub
or
iret
clc
add
(bad)
cmp
and
add
ss
mov
test
sbb
test
sbb
jl
jecxz
adc
sahf
and
mov
loopne
punpcklbw
xor
xor
mov
mov
je
adc
mov
cmps
hlt
xor
mov
jge
mov
mov
mov
xchg
and
mov
sbb
das
add
test
jno
fwait
jl
push
dec
lea
test
retf
mov
mov
ins
jbe
push
sub
(bad)
fiadd
sbb
sbb
ins
fidiv
push
sub
dec
repnz
jmp
push
mov
pop
pop
hlt
xchg
mov
dec
mov
or
sti
stc
les
push
xor
mov
mov
retf
sub
(bad)
lds
or
push
fidiv
sub
mov
sahf
xor
repz
mov
xor
pop
(bad)
ror
adc
(bad)
data16
xor
aad
mov
or
sbb
push
icebp
mov
test
dec
fsqrt
lahf
jb
dec
test
push
(bad)
sbb
mov
jae
test
add
jo
in
adc
cmp
mov
inc
outs
pusha
mov
loop
pop
push
push
or
not
mov
add
fisubr
repz
enter
dec
mov
test
or
sub
pop
ror
int
sbb
and
call
outs
std
pop
push
mov
retf
in
push
imul
xchg
jmp
int3
(bad)
jge
pop
ror
ds
xchg
push
xchg
sub
cmps
pushf
in
cmp
push
loope
jecxz
shr
and
mov
push
vmovsldup
fild
in
ja
mov
sbb
imul
sbb
loope
jno
xlat
pop
sub
popa
pop
pop
cld
add
(bad)
jmp
mov
sar
popf
imul
lods
or
xor
mov
push
fadd
shl
cmps
int
popa
(bad)
cdq
push
out
xchg
fistp
pop
cmp
pop
ins
mov
(bad)
std
sub
mov
dec
cmp
mov
xor
inc
xchg
lods
xchg
in
fs
jmp
or
call
mov
int3
mov
ins
ins
xchg
outs
add
cs
test
cmp
pushf
adc
cmps
cmc
dec
lock
jg
add
push
arpl
call
popa
mov
hlt
sbb
int3
and
lea
push
stc
outs
in
pop
in
inc
mov
out
(bad)
xchg
imul
dec
(bad)
sbb
imul
out
cli
arpl
int3
inc
inc
retf
mov
push
jns
pop
call
jle
stos
cwde
movs
dec
xlat
jle
stc
mov
retf
add
fs
stos
lods
mov
lea
retf
rcr
xchg
inc
std
pop
cdq
call
or
test
stos
mov
xor
loop
gs
mov
scas
bound
scas
inc
fistp
jb
addr16
jmp
cmp
dec
inc
cwde
loope
xchg
add
mov
sub
adc
hlt
out
scas
mov
cmp
mov
adc
push
mov
xchg
lods
ss
(bad)
movs
adc
sbb
pop
dec
sbb
push
iret
outs
movs
outs
push
cdq
adc
mov
or
pop
cmp
fld
fs
into
outs
sbb
repnz
lods
outs
sub
lods
jb
mov
das
mov
(bad)
aas
loope
dec
dec
sbb
sbb
jl
or
sub
dec
add
hlt
or
int
dec
mov
stos
rol
out
into
pop
mov
out
adc
mov
mov
xchg
cmps
dec
jae
(bad)
jae
mov
jp
push
ss
clc
iret
movs
push
and
jb
push
(bad)
mov
xlat
aaa
movs
into
or
push
imul
fist
mov
push
test
xor
add
adc
mov
(bad)
ss
js
and
mov
mov
pop
and
or
and
enter
add
(bad)
and
cli
mov
xchg
mov
pop
jb
add
adc
adc
push
into
mov
mov
movs
jl
push
pop
lods
add
repnz
jmp
pushf
adc
jno
inc
in
xor
ins
push
xor
or
cdq
in
xor
jmp
outs
jp
repz
inc
mov
add
xchg
xchg
sbb
jg
stc
pop
sbb
(bad)
mov
ret
ja
sbb
push
adc
fistp
(bad)
cmps
or
adc
lock
sbb
jnp
dec
iret
cmovge
retf
pop
(bad)
push
mov
inc
adc
jge
call
or
(bad)
mov
pusha
adc
add
xchg
push
das
fsubp
mov
bound
out
cmc
movs
outs
inc
xchg
scas
push
shl
sbb
xchg
movs
popf
pushf
cdq
call
in
dec
inc
leave
fcmovnu
mov
push
fcmovnu
and
and
ret
and
or
cmps
xchg
cmp
call
in
xchg
jl
pop
xchg
sub
mov
sub
push
sbb
movs
test
cwde
in
sahf
mov
cmps
dec
f2xm1
sub
xchg
jo
jnp
pop
pop
mov
inc
je
iret
out
test
sub
ror
(bad)
ror
and
scas
inc
int3
popf
iret
and
pusha
xor
sbb
scas
ss
xchg
sub
sbb
test
mov
in
inc
mov
cmps
add
aam
outs
add
fild
sti
cmp
(bad)
neg
mov
mov
lock
inc
mov
arpl
pop
ja
adc
sahf
mov
stc
repnz
lea
xchg
or
pop
jbe
pop
sbb
pusha
(bad)
xchg
loopne
mov
inc
mov
aaa
data16
mov
sub
sub
stc
dec
add
adc
arpl
int
aam
inc
and
ins
movs
mov
add
ret
mov
and
push
mov
hlt
mov
ror
cdq
inc
lahf
test
fmul
shl
in
mov
push
popa
push
pop
push
or
imul
sub
out
push
imul
ja
mov
popf
out
sbb
cmps
mov
adc
enter
fisubr
test
push
xor
and
cwde
enter
sbb
les
inc
repnz
mov
je
in
scas
rol
popa
iret
repnz
xlat
xchg
xor
sub
ret
iret
imul
mov
out
mov
jnp
aad
jl
sti
cmp
test
xchg
push
or
psubusb
sbb
xchg
movs
push
ficom
shl
gs
(bad)
ss
add
fwait
idiv
popa
into
cmp
add
dec
rcr
sub
add
div
in
mov
push
sub
mov
adc
in
mov
sub
outs
sub
dec
mov
jmp
fwait
pop
lods
hlt
push
repnz
adc
fisttp
adc
lock
shl
mul
or
sub
jle
gs
lahf
mov
or
hlt
sbb
mov
popf
ficomp
stos
arpl
test
call
je
jle
xchg
pusha
imul
cmc
setnp
shl
jmp
dec
fwait
sbb
dec
jb
add
leave
sub
pushf
jg
jo
shl
inc
inc
cmp
leave
jmp
aad
xchg
push
pop
jnp
xchg
mov
aaa
imul
cmps
inc
(bad)
imul
pop
call
add
retf
inc
lahf
inc
cmp
mov
(bad)
adc
sub
fdiv
adc
fs
icebp
mov
scas
mov
sbb
retf
mov
mov
adc
pop
add
cmp
(bad)
jbe
dec
add
mov
bound
mov
inc
sbb
and
pop
lods
adc
lds
mov
add
cmc
pop
clc
pop
call
or
cmps
sbb
lds
test
inc
ret
retf
in
sbb
and
xlat
push
stos
add
mov
adc
adc
push
mov
pop
mov
movs
sub
cmp
repnz
sahf
xchg
jecxz
(bad)
push
pop
(bad)
test
inc
add
lea
cmp
and
and
arpl
push
test
inc
mov
popf
pop
loopne
push
dec
fadd
mov
sti
ret
stc
cmps
push
sub
dec
(bad)
and
cmp
lods
adc
jne
fnstenv
iret
(bad)
cmp
sbb
dec
sar
adc
std
sub
cpuid
ja
cld
cld
out
and
outs
scas
fisubr
imul
mov
cs
sub
sti
sahf
cdq
jne
lea
push
mov
cmps
inc
fsub
or
ins
std
push
mov
xor
cdq
jp
or
mov
loopne
xchg
ret
adc
sti
into
add
stos
scas
inc
cmps
lock
xor
xor
xor
movs
clc
inc
mov
xchg
ret
jg
or
movs
stos
push
add
jp
sub
out
sti
cmc
cld
jmp
or
popa
pushf
cs
bound
xor
(bad)
mov
lds
in
cwde
jno
jnp
jae
adc
shl
mov
pop
and
xchg
jl
adc
shl
and
inc
in
outs
out
fld
sbb
repnz
xchg
repz
out
mov
test
or
push
add
pop
mov
iret
add
int3
jo
ins
je
int3
and
sub
pop
int3
fldl2t
and
test
pop
xchg
gs
dec
in
ja
jecxz
push
adc
fwait
jae
xchg
call
add
idiv
jge
mov
push
pop
shl
es
mov
sahf
in
sub
fimul
push
aaa
leave
mov
daa
push
shl
push
daa
xor
shr
jb
mov
and
stos
std
clc
(bad)
dec
pmulhw
ins
and
inc
retf
stc
sub
(bad)
nop
push
fs
outs
jmp
dec
add
mov
push
sub
(bad)
movs
fwait
ja
das
or
loopne
jecxz
sbb
mov
pop
into
aam
loop
jbe
add
loop
repz
cmp
jmp
fwait
push
jl
je
pop
jl
addr16
mov
inc
dec
sbb
pop
inc
push
pusha
in
loop
dec
pop
pop
hlt
fdiv
sti
or
call
inc
pop
popa
sub
in
jmp
in
sbb
push
and
jg
push
fstp
bound
aaa
inc
cmp
ret
ss
xchg
mov
sub
cld
mov
arpl
vphaddbw
add
popf
lea
adc
sbb
push
mov
sti
pop
enter
adc
(bad)
sbb
bound
dec
sbb
push
je
(bad)
jno
sti
inc
psubsb
sbb
mov
sub
fdiv
adc
imul
leave
bound
xchg
scas
push
pop
dec
movs
or
imul
inc
lock
fdiv
add
pushf
idiv
fnclex
mov
loopne
jecxz
(bad)
out
or
xchg
mov
or
aad
add
loope
in
cmp
nop
inc
xchg
xor
push
test
scas
call
mov
retf
or
sbb
ja
(bad)
and
imul
jle
call
push
(bad)
jns
inc
or
call
and
jl
imul
xchg
jb
inc
mov
popf
gs
loopne
fisub
test
movs
outs
nop
(bad)
mov
jp
push
call
push
test
rcr
xor
mov
ins
mov
or
mov
inc
(bad)
sbb
lahf
fnsave
pop
add
pop
jae
pop
sar
push
scas
push
add
pop
xchg
mov
fsub
rol
cmp
dec
aad
inc
and
sub
int3
cmp
call
movs
leave
ins
scas
cmps
call
inc
sbb
or
sub
popf
mov
mov
fstp
aam
sub
mov
(bad)
out
inc
call
loope
test
leave
int3
pop
jle
dec
pop
retf
pop
outs
pop
sub
cmp
mov
int
xchg
jno
cmp
(bad)
mov
dec
dec
pop
fstp
mov
mov
mov
movs
jo
xor
xor
ins
ss
mov
fmulp
stos
loop
fadd
ret
fist
lods
push
xchg
inc
aas
or
push
or
inc
(bad)
sbb
sbb
xor
sbb
aaa
hlt
(bad)
xlat
and
mov
mov
daa
jb
test
js
(bad)
stos
daa
repz
jmp
pop
cmp
pop
imul
cmp
push
arpl
out
inc
mov
cld
adc
cld
push
out
inc
or
daa
jmp
data16
mov
push
out
mov
in
jecxz
dec
push
cmc
lahf
imul
lods
or
xor
push
test
xlat
mov
mov
sti
mov
in
cli
jns
cmp
mov
jns
scas
pop
icebp
or
cmp
push
pushf
mov
aad
mov
sub
(bad)
mov
in
fsubr
enter
mov
cmp
adc
push
and
stos
stc
inc
push
mov
pop
fwait
mov
sub
push
shr
jge
and
in
push
adc
sub
(bad)
outs
jns
dec
add
cwde
imul
rol
repz
ffreep
mov
xchg
sbb
sbb
fnstenv
cmp
(bad)
in
dec
mov
sub
outs
mov
and
or
dec
sbb
jmp
pop
xchg
mov
mov
pop
xchg
xor
int3
inc
repz
push
cmp
sbb
sub
inc
jo
mov
int
ss
shr
pusha
ret
sub
dec
test
jmp
imul
or
clc
mov
das
cmp
ret
add
ja
popf
mov
mov
xchg
add
xchg
mov
ins
pop
xchg
push
(bad)
mov
mov
rcr
and
ins
and
fisubr
loopne
mov
pop
inc
shr
add
addr16
mov
imul
std
jbe
mov
and
fisttp
test
cmp
mov
sar
jle
aas
stc
inc
movs
push
jle
les
mov
cmp
nop
ror
out
cmps
and
mov
mov
iret
sub
loope
(bad)
popa
jne
xor
fiadd
mov
mov
or
or
js
mov
add
mov
aam
push
mov
xchg
jbe
mov
cmps
xchg
add
enter
add
cmp
sahf
(bad)
xor
jbe
daa
shl
cmp
sbb
fimul
mov
jecxz
sub
pop
aaa
sbb
shr
(bad)
rol
das
and
pop
sbb
movs
outs
sub
add
retf
aas
fwait
(bad)
xchg
mov
cmps
test
shl
xor
cmp
inc
lock
call
es
sub
inc
cwde
and
inc
addr16
gs
outs
or
out
rcl
inc
mov
leave
push
ins
xlat
mov
jmp
and
(bad)
fabs
xlat
xchg
fild
sti
xor
jl
dec
jl
call
sbb
cmps
mov
pop
retf
push
mov
popf
les
stc
dec
sub
mov
call
sub
jne
jb
mul
xor
and
test
pop
pop
fsubr
jmp
xchg
arpl
mov
mov
test
sbb
sar
int3
fild
retf
retf
out
dec
cmp
inc
fdivr
fisttp
aad
mov
mov
jl
(bad)
lods
add
je
and
mov
das
or
dec
push
jb
cmp
icebp
sbb
repnz
std
adc
mov
test
arpl
push
loope
jg
bound
pop
mov
sbb
outs
mov
adc
sbb
lahf
mov
mov
(bad)
movs
cdq
fwait
int3
cmp
jp
sub
cmp
xchg
mov
out
sbb
cmps
jp
test
out
mov
mov
lock
xchg
cmp
es
mov
inc
outs
hlt
call
adc
add
in
jo
xchg
add
inc
push
mov
or
sbb
xchg
cmovae
pop
cwde
push
in
jmp
jbe
sub
(bad)
les
and
mov
outs
sub
push
jmp
lds
movs
test
sysenter
mov
inc
jecxz
adc
adc
(bad)
add
pop
jmp
sti
test
or
mov
lahf
jmp
ja
jns
adc
stos
nop
ror
dec
add
sub
dec
sahf
sbb
les
adc
push
(bad)
(bad)
test
cmps
cli
add
push
imul
mov
cdq
iret
sahf
dec
mov
or
mov
sar
sar
sbb
nop
call
mov
fwait
push
movs
out
mov
cmps
mov
sti
imul
daa
dec
sar
add
push
(bad)
sub
mov
loope
dec
js
cmps
stos
int
mov
(bad)
out
mov
mov
inc
lds
xor
in
fcomp
push
add
sub
sub
gs
xchg
jne
pop
cdq
in
rol
fisub
(bad)
cdq
mov
sub
in
ret
in
sub
iret
mov
mov
out
push
push
pop
(bad)
fs
mov
add
or
leave
dec
cwde
push
mov
xor
aas
aad
sahf
sub
test
lea
leave
mov
int
pop
ins
pop
dec
gs
push
(bad)
scas
fcomp
inc
jno
stos
mov
jecxz
retf
mov
add
mov
ins
loop
xchg
sub
scas
ret
mov
mov
add
(bad)
mov
mov
test
scas
fwait
push
aaa
push
sub
dec
xor
sbb
sahf
fdivr
inc
(bad)
dec
out
jnp
cwde
adc
cmp
cdq
add
xchg
push
cmc
aad
(bad)
mov
xor
cmp
sbb
and
sub
dec
jle
xchg
mov
mov
mov
xor
mov
stc
mov
jno
fdecstp
(bad)
mov
mov
push
xchg
in
pop
mov
mov
test
cmp
or
xchg
or
ret
or
int3
mov
jmp
retf
pusha
push
dec
pop
gs
xchg
mov
nop
mov
add
lds
test
lods
xchg
xor
movs
out
out
fdiv
movs
(bad)
out
scas
mov
dec
fcomip
inc
adc
int3
lods
inc
inc
jb
mov
mov
push
dec
mov
into
ins
std
sbb
(bad)
push
sub
dec
xchg
adc
push
loop
aaa
push
sbb
fs
ror
int
imul
jecxz
idiv
and
sbb
sbb
mov
(bad)
jne
mov
out
pop
ins
(bad)
icebp
repnz
and
add
cs
fdivr
fwait
(bad)
jmp
sub
fs
outs
adc
xlat
mov
add
enter
les
icebp
jo
sub
mov
xchg
pop
stos
adc
enter
icebp
out
mov
outs
sub
(bad)
jecxz
pop
push
mov
inc
ins
in
xchg
mov
cli
sbb
fadd
cmp
or
xor
or
jecxz
jo
das
adc
(bad)
cld
dec
pop
sbb
movs
dec
jmp
push
cld
lods
dec
pop
shr
jl
push
mov
jbe
cmc
stos
add
push
(bad)
jmp
cmc
ins
popa
add
lods
popa
lods
push
mov
popf
loopne
mov
mov
imul
jns
add
test
inc
fnstsw
jb
jo
arpl
mov
sbb
xchg
scas
mov
popa
pop
xchg
add
retf
mov
ret
daa
adc
iret
fidivr
aaa
or
inc
push
das
sub
fdivr
and
pop
sub
mov
xor
cmp
xor
jno
xchg
mov
sbb
loope
lods
mov
xchg
pop
outs
push
repnz
gs
scas
fs
pop
push
(bad)
stc
out
mov
cwde
xchg
mov
mov
(bad)
jge
rcr
pusha
fist
push
(bad)
jp
xor
pop
cs
mov
popf
scas
inc
xchg
fsubr
mov
in
ret
(bad)
adc
xchg
or
ss
pop
jnp
jge
leave
dec
mov
and
push
xor
adc
loop
fstp
jp
ins
les
cwde
pusha
xchg
imul
data16
repnz
mov
out
std
repnz
fmul
xchg
jl
js
int3
mov
mov
(bad)
sbb
mov
rcl
daa
(bad)
stos
jmp
cld
lds
lea
lea
pusha
das
inc
jo
mov
push
hlt
sub
in
push
mov
mov
addr16
aam
ss
out
push
shl
add
inc
xchg
aam
fdiv
sbb
cmp
jo
lods
dec
not
add
xchg
sti
cmp
(bad)
mov
or
les
xchg
add
xchg
pop
imul
mov
add
(bad)
cmps
or
xor
xor
and
call
pushf
jbe
mov
mul
push
sub
jp
xor
sbb
mov
aam
xor
and
hlt
mov
mov
pavgb
xlat
and
hlt
movs
dec
jle
sbb
icebp
imul
dec
or
adc
xor
popa
mov
jne
fisub
popf
cdq
cdq
js
jmp
call
sahf
xor
hlt
arpl
popf
and
mov
mov
jbe
(bad)
sbb
stc
movs
ja
btc
out
adc
aad
mov
adc
into
mov
fdiv
test
xchg
xor
xchg
shl
in
mov
retf
push
xor
mov
loop
fst
xchg
xchg
mov
sbb
test
sar
fcomi
(bad)
stc
retf
sar
xor
dec
scas
cmp
mov
data16
sbb
and
push
mov
pop
cld
shl
repnz
mov
sub
aad
jb
adc
es
add
retf
fs
and
sbb
and
and
in
inc
dec
inc
in
xchg
lea
push
jmp
in
fidivr
push
enter
push
push
mov
sub
stos
jb
call
xchg
adc
push
loop
popf
cld
movs
mov
push
(bad)
xchg
stc
push
pop
or
inc
popf
in
jb
stc
lods
loopne
or
aaa
sub
gs
or
rcr
jecxz
scas
ins
push
pop
sti
jl
mov
dec
je
sbb
test
xchg
and
outs
dec
pop
int
xlat
shl
inc
outs
pop
jg
sar
sbb
cwde
outs
les
inc
push
mov
inc
cmp
mov
xchg
das
mov
add
frstor
dec
cld
cs
sub
(bad)
xlat
xchg
(bad)
sub
popf
push
inc
jmp
(bad)
ja
or
pop
mov
shr
ss
push
dec
cwde
push
and
fisttp
and
rcr
mov
xor
shl
paddw
mov
mov
ins
jno
xor
sub
adc
push
jl
xor
enter
pop
sub
jge
stos
and
sbb
xor
pop
dec
sahf
cmp
sub
xor
jbe
dec
test
ss
jg
cs
retf
bound
and
pop
pop
xlat
cmp
cli
ja
mov
cld
xlat
repz
xchg
aaa
xor
inc
jmp
out
lods
mov
pop
outs
out
jno
and
lea
mov
add
dec
pop
bound
pop
rcl
mov
ins
repz
mov
in
or
pop
mov
lods
sbb
mov
xor
dec
xchg
fld
fdivr
mov
ja
setne
sub
xchg
popf
push
xor
or
jns
pop
add
pusha
inc
sbb
repnz
add
pop
retf
adc
cmp
fwait
sbb
(bad)
sbb
mov
inc
sub
xchg
mov
fnstsw
addr16
lea
(bad)
push
aaa
push
pop
inc
push
pop
cmp
sub
ins
sbb
pop
jbe
or
retf
out
pop
scas
ror
dec
addr16
mov
sahf
mov
(bad)
ins
mov
xor
mov
sub
pop
jg
xchg
inc
sbb
movs
mov
dec
jo
fstp
push
or
retf
cwde
test
lahf
mov
daa
push
xchg
(bad)
repnz
or
cmp
dec
sbb
jo
mov
adc
mov
imul
fnstsw
or
fist
stc
popf
outs
sub
and
fld
je
test
ins
push
dec
add
shr
stos
and
xor
mov
sub
aaa
test
or
push
mov
mov
jmp
or
(bad)
jno
push
sbb
cmp
inc
add
rcr
inc
cmp
cmc
xchg
dec
mov
bound
lds
call
bound
sub
jae
mov
mov
in
lock
out
pop
(bad)
repz
fisubr
mov
out
jg
add
push
loope
ins
stc
enter
adc
mov
cs
push
jp
jne
fsubrp
xchg
in
in
or
outs
sbb
dec
mov
or
sar
xchg
push
cli
out
mov
(bad)
mov
gs
xor
call
(bad)
cmps
aaa
jl
cmp
movs
sub
mov
mov
stos
push
sbb
xlat
call
xlat
in
mov
sti
(bad)
mov
push
sub
and
and
fbld
pop
pop
cdq
cmps
xor
cmp
or
sti
add
int
cmp
dec
xor
fisub
stc
cmp
xor
(bad)
jbe
mov
movs
les
jecxz
jne
inc
jecxz
mov
in
xchg
stos
dec
cmc
xchg
pop
cmps
retf
mov
mov
loop
jmp
fcom
push
lods
imul
ret
dec
add
xchg
test
jo
pop
mov
cdq
aam
dec
and
jnp
lods
shl
push
fucom
loope
fidiv
sbb
push
jns
inc
mov
pop
inc
cs
jmp
call
and
retf
xor
in
add
clc
inc
push
push
es
(bad)
fnstsw
mov
jle
pop
icebp
fs
adc
inc
fsub
popf
cmps
xchg
fs
call
dec
and
push
mov
add
and
add
xor
cmp
stc
mov
jle
daa
xchg
and
jo
pop
jecxz
daa
repz
cmp
outs
stc
inc
clc
mov
jne
ins
sub
pop
movaps
outs
mov
jmp
mov
pop
cmp
pop
inc
dec
inc
mov
pop
fsubr
xchg
test
xchg
mov
ret
fbld
add
popa
pop
mov
push
lea
addr16
xor
sar
and
add
inc
xor
mov
mov
and
std
add
rol
mov
lea
jmp
mov
popf
(bad)
or
rcl
add
jmp
out
pop
sbb
mov
in
lock
jno
jns
lods
idiv
sbb
adc
mov
push
aas
fwait
xor
sbb
mov
push
(bad)
je
cdq
and
popa
cli
jno
xor
mov
test
add
call
add
push
ja
push
sbb
adc
sbb
into
daa
in
in
adc
xrelease
inc
int
jge
mov
mov
leave
add
mov
mov
xor
mov
ds
int
int3
jmp
mov
xor
xor
pop
sbb
les
scas
xchg
icebp
mov
cdq
ja
std
push
mov
fadd
repnz
mov
push
into
popa
ds
mov
sbb
ss
or
pop
jmp
shl
rep
(bad)
mov
xor
inc
jbe
or
movs
cmp
arpl
add
push
mov
dec
push
in
addr16
cs
or
loope
push
push
push
(bad)
cmp
and
lods
(bad)
aas
pop
fld
popa
cmp
test
(bad)
std
mov
pop
push
pop
(bad)
adc
pushf
xchg
cmp
pop
pop
and
inc
scas
mov
ins
test
mov
jmp
and
rcr
adc
pop
movs
or
sbb
nop
gs
mov
pop
aas
push
in
xor
mov
or
mov
clc
sar
and
cwde
mov
das
jne
push
sub
fadd
push
call
and
jg
pusha
and
je
push
mov
and
cwde
mov
push
pop
fadd
push
pop
push
add
xor
mov
push
movs
cmp
js
jnp
xchg
dec
fnsave
push
fcomp
(bad)
cmc
test
setge
sbb
add
pop
inc
out
pop
fucomi
cli
das
ret
test
cmps
adc
xor
jne
pop
and
addr16
mov
pop
dec
fwait
imul
bound
retf
loope
ja
movs
push
or
cmps
mov
cmps
mov
test
and
pushf
scas
mov
retf
cmps
xchg
leave
mov
or
lods
into
mov
cmp
clc
dec
mov
(bad)
cmp
mov
je
xlat
cmps
fist
sub
and
std
movs
and
neg
or
dec
add
fnstsw
sub
call
push
pop
sbb
push
test
dec
arpl
sub
dec
cmp
(bad)
xchg
nop
add
dec
jb
push
sub
cmp
pop
mov
shl
les
jo
fmul
retf
cmc
ins
mov
popa
push
push
inc
scas
push
cmp
xor
aam
test
or
push
mov
icebp
xchg
xchg
sub
in
dec
cdq
pop
push
jb
sbb
or
shl
pop
push
int3
mov
jnp
add
cs
nop
jns
or
inc
(bad)
imul
mov
cdq
mov
xor
add
push
cld
dec
or
add
int
ret
popa
repz
fwait
mov
and
sbb
out
aam
pop
jo
mov
inc
adc
fs
push
leave
xchg
adc
dec
xchg
sub
jae
push
(bad)
jmp
lods
lock
fstp
ja
dec
inc
popa
fldenv
imul
mov
enter
mov
jg
ins
push
inc
xchg
es
(bad)
xor
(bad)
xchg
cdq
adc
std
pop
mov
je
mov
push
mov
test
stos
jmp
fsubrp
or
imul
pop
imul
fcom
mov
cmp
and
aam
stc
sub
jb
adc
jle
scas
sub
call
sbb
adc
ja
cs
pop
or
push
shl
push
sbb
add
ror
jl
(bad)
jl
xchg
push
push
or
out
mov
arpl
icebp
out
les
push
cmp
in
in
xchg
pop
jbe
mov
call
jmp
call
movs
int
inc
mov
mov
sub
mov
rol
push
xlat
mov
mov
gs
ins
cld
dec
ror
push
xor
popf
or
into
stos
sahf
inc
inc
arpl
rol
jge
lock
jae
jmp
dec
arpl
int
add
inc
rol
fs
inc
mov
mov
(bad)
lock
dec
mov
cmp
retf
mov
sahf
sbb
scas
leave
ret
dec
fmul
add
cmp
ret
xor
test
mov
or
and
pop
(bad)
jg
add
fldenv
pop
(bad)
and
cmp
stos
aam
xchg
xchg
mov
cmp
aas
iret
mov
test
jp
(bad)
out
scas
hlt
movs
bound
inc
xchg
ins
movs
cmps
xchg
or
leave
popa
xchg
mov
xor
repz
enter
mov
jmp
push
test
and
mov
jl
xor
sbb
js
stc
xchg
adc
add
xor
mov
(bad)
rep
pop
lea
out
adc
pop
cmp
daa
add
cmp
mov
icebp
push
jmp
add
cs
pop
sbb
jmp
sub
jp
dec
cmp
pop
and
inc
inc
push
dec
mov
(bad)
sbb
xor
mov
jae
cmp
sbb
sbb
adc
inc
adc
push
cmp
dec
xlat
cmp
fisubr
pop
pop
rcl
pop
(bad)
shl
es
scas
dec
push
loop
jbe
fcom
shl
adc
sbb
and
sub
jp
aad
gs
idiv
adc
out
retf
mov
popf
jle
(bad)
sub
cli
sbb
or
mov
mov
test
frstor
adc
cmp
pushw
dec
aam
jecxz
mov
shr
stos
add
dec
ja
or
fadd
out
jbe
or
mov
(bad)
fwait
cdq
rol
addr16
push
dec
(bad)
leave
out
mov
and
outs
adc
out
sti
fistp
mov
push
outs
mov
add
cmp
pop
or
jg
mov
xor
std
test
xchg
mov
fwait
jge
sbb
sub
mov
sub
mov
pop
jg
test
and
push
imul
or
out
adc
repz
(bad)
arpl
adc
xor
add
mov
sub
add
repz
sub
mov
les
xor
out
push
aas
push
sbb
dec
add
jne
jb
popf
xchg
pop
mov
xchg
sub
test
ror
push
push
cwde
push
fadd
mov
popa
jl
inc
push
pusha
sub
lea
int
arpl
js
adc
pusha
jns
sar
sar
jle
ds
jmp
cmp
mov
pop
xchg
std
lahf
inc
aam
mov
add
ds
xchg
clc
mov
stos
ficomp
xchg
dec
shl
cmps
xchg
jg
or
test
cdq
lods
push
pop
cmp
(bad)
mov
fs
xchg
add
das
(bad)
inc
shr
inc
leave
pop
xchg
movs
(bad)
rcl
cli
mov
lock
fild
fisub
xchg
loopne
dec
cli
xor
xlat
jge
jmp
add
ret
cmp
in
xchg
daa
(bad)
(bad)
sbb
(bad)
mov
dec
dec
out
and
mov
push
ds
(bad)
jp
out
in
pop
ins
cwde
ins
retf
repz
push
dec
push
call
bound
gs
stos
fiadd
test
int3
movs
jno
je
sbb
xor
ins
movs
or
mov
cmp
mov
popf
out
dec
mov
adc
fwait
bound
dec
push
pop
repz
out
jnp
cmp
sub
xor
sar
pop
nop
lods
jmp
popa
mov
jae
jecxz
mov
movs
cs
fs
dec
arpl
inc
mov
stc
adc
mov
(bad)
int
inc
sbb
mov
lods
lods
(bad)
out
push
or
pop
lods
cwde
xchg
push
adc
mov
xchg
enter
jns
jmp
les
div
jb
xor
push
hlt
movs
cmp
scas
mov
xchg
ins
fstp
lock
mov
adc
in
jb
mov
repz
fsubr
mov
js
cmp
mov
dec
cli
push
mov
jge
push
xor
mov
shl
repz
adc
js
dec
pop
mov
mov
jo
aaa
and
shl
cmps
fsubr
or
sbb
dec
imul
call
push
mov
aaa
or
xchg
mov
push
loope
fsincos
sub
add
popa
fistp
rol
mov
imul
push
jae
mov
int
in
leave
jg
fdiv
data16
shl
cdq
push
stos
pop
fidivr
cmp
pop
les
or
fstp
pop
mov
jle
xor
outs
(bad)
pop
inc
or
adc
test
push
(bad)
sbb
push
mov
imul
test
cmp
jg
pop
scas
or
sub
sbb
es
jbe
inc
rcl
pushf
stos
add
ror
adc
sar
out
(bad)
mov
dec
adc
push
popf
(bad)
ins
mov
inc
sub
test
call
jo
mov
adc
pop
mov
outs
jo
(bad)
out
pop
(bad)
mov
mov
mov
pop
xchg
and
xor
sub
and
jge
cmp
cmp
shr
hlt
stos
mov
leave
not
lahf
jnp
pop
dec
repz
gs
cmc
xor
xor
mov
ret
pop
sahf
ins
mov
mov
in
stc
cli
xchg
jne
dec
jns
cmp
cmps
and
mov
test
sti
push
mov
or
mov
fsubr
(bad)
xchg
adc
in
(bad)
bound
cli
jge
test
aad
jne
call
fwait
push
movs
push
fld
and
mov
push
sub
mov
mov
pop
(bad)
ficomp
mov
pop
add
xor
movs
sbb
repz
mov
inc
xor
clc
js
fcom
repz
lahf
fsub
pop
ds
xchg
jmp
cmp
sub
pop
push
in
cwd
xchg
cwde
dec
xchg
jge
or
add
nop
enter
push
jb
nop
jo
sub
add
add
add
add
add
data16
jge
add
add
pop
add
pop
pop
bound
jge
add
add
and
adc
or
add
out
sub
add
add
add
bound
jnp
add
add
add
or
pusha
jge
add
add
and
add
bound
add
add
jnp
add
add
add
add
aaa
retf
add
xor
add
sub
add
add
add
add
push
add
push
sub
add
pop
adc
add
xor
add
sbb
xchg
add
add
add
add
add
add
pop
pop
bound
add
add
add
pop
pop
pop
arpl
outs
add
add
add
add
sub
add
push
loopne
or
add
add
add
push
sub
jnp
add
add
add
sub
add
push
loopne
or
add
add
add
daa
add
push
sub
and
add
add
jge
add
add
mov
jnp
add
add
cs
sbb
add
jge
add
add
add
add
add
push
jge
add
add
push
jge
add
add
jle
sub
add
push
add
jge
add
add
sub
sub
add
push
jge
add
add
ret
sub
add
add
add
add
add
imul
add
add
add
add
add
imul
sub
add
jge
add
add
out
jnp
add
add
xor
add
jge
add
add
add
add
add
or
add
add
pop
jge
add
add
add
add
pop
jge
add
add
push
add
jnp
add
add
aaa
add
or
add
add
push
add
jnp
add
add
aaa
add
or
add
jge
add
add
pop
add
jnp
add
add
aaa
add
or
add
or
add
add
sub
jnp
add
add
inc
xor
add
sub
add
xor
add
add
adc
adc
or
adc
or
outs
or
or
pop
and
pop
or
or
ins
sahf
push
or
or
sti
push
dec
inc
push
ins
sahf
or
pop
or
fld
push
push
push
xchg
pop
push
xchg
popa
and
shl
pop
sahf
push
pop
push
pop
xchg
pop
pop
xchg
pop
and
sahf
push
sbb
sbb
and
sahf
push
sbb
sbb
and
sahf
push
sbb
sbb
and
sahf
push
sbb
sbb
and
sahf
push
sbb
sbb
pop
sbb
popa
and
sahf
push
sbb
sbb
xchg
ficomp
push
push
push
push
xchg
pop
push
xchg
popa
and
sahf
push
pop
or
pop
or
popa
and
sahf
push
pop
or
pop
or
popa
and
sahf
push
pop
or
pop
or
popa
and
sahf
push
pop
or
pop
or
pop
pop
or
popa
and
sahf
push
pop
or
pop
pop
or
xchg
ficomp
push
pop
push
push
pop
push
xchg
pop
pop
push
xchg
popa
and
sahf
push
pop
clts
pop
setne
pop
setne
xchg
xchg
ficomp
pop
push
pop
adc
adc
add
add
sbb
add
adc
adc
arpl
adc
xchg
push
adc
pop
maxps
adc
pop
maxps
adc
pop
maxps
sbb
fstp
adc
pushf
adc
add
pop
push
rcr
pop
loopne
pop
pop
adc
adc
add
pop
pop
sbb
adc
adc
pop
pop
adc
adc
add
push
pop
adc
adc
add
adc
add
add
adc
adc
adc
imul
adc
sbb
adc
add
adc
or
mov
mov
push
es
adc
sub
adc
adc
(bad)
sbb
add
and
add
shl
sbb
or
inc
add
pop
sub
and
pop
or
or
pop
adc
adc
adc
mov
lds
or
add
adc
add
pop
add
add
add
adc
cdq
cmp
add
and
sbb
add
and
add
adc
add
or
adc
add
or
outs
adc
add
or
and
retf
mov
add
or
add
or
add
adc
jb
add
jo
add
push
add
or
add
add
imul
adc
sub
add
or
push
push
mov
adc
add
or
add
add
outs
sbb
add
add
add
sbb
add
adc
push
add
add
jae
add
or
add
or
add
or
adc
add
xchg
jle
add
add
xchg
push
bound
add
add
xchg
pop
adc
jle
add
add
xchg
pop
sbb
outs
sbb
push
adc
outs
push
add
or
add
adc
adc
mov
add
mov
pop
outs
pop
add
or
or
or
add
add
adc
movs
and
add
sub
sub
adc
add
add
add
sub
add
or
outs
and
add
jae
add
or
and
add
outs
and
add
outs
and
adc
push
mov
pop
jle
add
add
imul
and
or
and
add
add
add
sbb
pop
rol
or
pop
or
push
mov
fld
sub
add
or
or
outs
sub
add
or
cmp
outs
sub
add
sbb
lea
add
add
add
add
add
lea
add
add
add
adc
add
pop
adc
sub
add
or
pop
adc
pop
adc
pop
adc
add
outs
sub
add
and
xlat
and
outs
add
or
adc
sbb
or
or
or
pop
aas
pop
add
or
or
push
pop
pop
adc
adc
adc
adc
or
add
add
adc
adc
sub
add
add
adc
adc
sub
add
adc
or
adc
mov
adc
add
adc
sub
add
or
add
adc
imul
adc
adc
add
add
xor
add
jae
add
or
jae
add
push
or
lea
add
add
or
sbb
add
or
pop
or
add
push
push
push
push
adc
sbb
add
adc
outs
push
adc
pop
aas
pop
bound
adc
pop
adc
add
xor
or
sbb
add
adc
adc
pop
jae
add
or
pop
push
outs
sub
add
pop
or
pop
push
adc
adc
or
add
push
adc
sub
add
adc
add
fld
add
push
add
adc
jnp
add
add
or
add
add
or
jnp
add
add
xor
add
jge
add
add
and
add
add
add
add
add
add
sbb
add
add
jnp
add
add
add
add
xor
add
jnp
add
add
bound
jnp
add
add
add
or
pusha
jge
add
add
and
add
bound
add
add
sub
and
add
pop
jge
add
add
and
add
pop
jge
add
add
and
add
jnp
add
add
fs
jge
add
add
jnp
add
add
add
add
xor
add
jnp
add
add
bound
jnp
add
add
add
or
pusha
jge
add
add
and
add
bound
add
add
sub
add
adc
add
sub
add
push
add
adc
or
push
add
add
add
loopne
add
add
sub
add
push
push
pop
pop
or
outs
pop
add
add
add
pop
pop
bound
fisubr
add
xor
cmp
add
pop
add
adc
or
jnp
add
add
sub
pop
bound
jnp
add
add
loopne
add
add
add
pop
add
push
pop
or
pop
pop
or
push
xor
push
pop
add
add
add
pop
pop
bound
add
add
xor
cmp
add
or
add
pop
or
or
or
sub
jnp
add
add
loopne
add
add
add
pop
add
push
or
push
or
pop
or
pop
pop
pop
bound
or
pop
or
add
add
add
into
pop
sub
xor
xor
add
or
add
pop
or
or
or
add
push
pop
loopne
add
add
add
pop
add
push
or
push
or
pop
or
pop
pop
pop
bound
or
pop
or
add
adc
add
cmp
add
adc
add
add
add
push
jge
add
add
adc
add
or
pop
add
jnp
add
add
bound
jnp
add
add
add
or
pusha
jge
add
add
pop
pop
or
sbb
(bad)
add
add
xor
add
add
add
adc
jnp
add
add
add
add
add
push
or
or
or
push
pop
pop
pop
adc
push
adc
pop
pop
pop
or
pop
bound
adc
pusha
or
and
add
add
jnp
add
add
add
or
pusha
or
push
bound
or
pop
or
add
jge
add
add
pop
jge
add
add
sub
adc
add
jmp
add
or
add
add
rol
add
lea
add
add
add
add
and
add
add
lea
add
add
add
add
pop
or
lea
add
add
add
add
pop
or
lea
add
add
add
add
pop
or
lea
add
add
add
add
pop
or
lea
add
add
add
add
jae
add
push
jge
add
add
jae
add
push
jge
add
add
jae
add
push
jge
add
add
pop
jb
lea
add
add
add
add
sbb
lea
add
jge
add
add
jae
add
push
jge
add
add
jae
add
push
jge
add
add
sbb
add
push
jge
add
add
sub
add
or
adc
add
or
sbb
jnp
add
add
pop
add
sbb
or
add
add
pop
or
push
push
fild
add
xor
add
add
push
add
adc
jnp
add
add
cs
jge
add
add
add
add
add
sub
add
or
add
add
jnp
add
add
add
add
sub
add
or
add
add
add
outs
sub
add
sub
xor
add
add
add
add
adc
add
pop
pop
bound
add
add
add
outs
sbb
add
add
add
add
outs
sbb
add
add
pop
pop
jge
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
outs
or
jnp
add
add
add
add
add
sub
add
push
or
xchg
add
push
or
cs
sbb
pop
or
jnp
add
add
loopne
add
add
sub
add
push
add
add
add
loopne
add
add
sub
add
push
pop
pop
pop
or
add
add
add
leave
add
add
add
loopne
add
add
sub
add
push
add
add
add
loopne
add
add
sub
add
push
add
add
add
loopne
add
add
sub
add
push
add
add
add
loopne
add
add
sub
add
push
push
pop
pop
or
pop
or
jno
(bad)
inc
jnp
add
add
pop
add
push
push
or
push
add
add
add
loopne
add
add
sub
add
push
push
pop
pop
or
sbb
out
or
push
add
add
add
loopne
add
add
sub
add
push
push
pop
pop
or
pop
jb
in
jnp
add
add
sbb
add
add
add
add
sbb
add
add
add
or
add
sub
add
xor
add
add
or
add
add
add
push
add
push
adc
(bad)
adc
adc
sub
add
push
push
or
or
or
push
add
adc
add
add
jnp
add
add
add
add
add
(bad)
loopne
add
add
add
add
add
pop
add
push
adc
sub
add
push
add
add
add
jnp
add
add
push
outs
and
add
adc
add
add
add
pop
outs
sub
add
add
add
add
add
add
adc
add
add
add
add
add
add
bound
or
pop
add
add
jnp
add
add
pop
add
push
sub
add
add
outs
add
push
adc
adc
sub
add
add
add
jnp
add
add
add
jnp
add
add
outs
add
push
outs
and
add
adc
sub
add
add
add
jnp
add
add
add
and
add
adc
add
add
add
or
add
push
adc
sub
add
push
adc
add
add
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
pop
add
push
pop
inc
in
add
add
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
pop
add
push
sub
add
add
add
add
add
bound
or
pop
add
add
jnp
add
add
pop
add
push
cmp
add
xor
add
add
add
add
jnp
add
add
outs
add
push
outs
sub
add
add
add
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
pop
add
push
sub
sub
add
add
add
add
add
add
pop
add
add
jnp
add
add
pop
add
push
sub
sub
adc
or
adc
or
or
jnp
add
add
jnp
add
add
or
add
push
sbb
or
add
xor
add
cmp
adc
or
jnp
add
add
jnp
add
add
or
add
push
pop
adc
adc
sub
add
push
add
add
add
or
sbb
add
loopne
add
add
add
add
add
or
add
adc
arpl
or
adc
sbb
or
push
pop
pop
pop
bound
adc
pop
add
add
add
adc
jnp
add
add
push
sub
add
pop
or
sub
add
add
push
sbb
adc
add
sbb
or
add
add
jnp
add
add
or
add
pop
or
add
or
add
jnp
add
add
add
adc
adc
add
adc
outs
sub
add
adc
adc
inc
addr16
(bad)
inc
jnp
add
add
sub
add
add
add
add
sub
add
add
add
add
push
add
push
sub
add
xor
push
add
add
push
xchg
pop
or
add
xchg
pop
or
pop
sbb
pop
sbb
push
adc
adc
add
adc
push
pop
pop
pop
pop
bound
add
add
adc
adc
adc
add
add
push
sub
add
add
sub
adc
add
dec
add
add
add
adc
jnp
add
add
sub
jnp
add
add
loopne
add
add
sbb
add
push
add
sbb
add
loopne
add
add
sbb
add
push
add
pop
or
add
enter
and
add
add
add
xor
add
add
push
add
adc
jl
add
add
push
add
push
push
or
sub
jnp
add
add
loopne
add
add
sub
add
push
add
add
add
loopne
add
add
sub
add
push
push
pop
pop
or
add
add
add
iret
add
add
push
add
push
add
add
or
add
sub
adc
add
pop
add
add
add
adc
jl
add
add
sub
add
push
sub
add
add
loopne
add
add
add
or
add
sub
or
jl
add
add
sub
add
push
sub
sbb
add
loopne
add
add
add
or
add
pop
or
adc
push
pop
or
add
add
sub
add
push
pop
or
sub
add
add
inc
add
add
add
add
pop
adc
lea
add
jge
add
add
pop
adc
lea
add
jge
add
add
jl
add
add
adc
add
add
adc
add
jae
add
push
jge
add
add
sub
add
or
add
xor
jbe
add
push
add
adc
jnp
add
add
adc
jnp
add
add
xor
add
add
add
xor
sub
add
add
add
pop
add
pop
pop
bound
pop
jge
add
add
add
and
add
add
add
add
jnp
add
add
pop
pop
pop
bound
add
loopne
or
add
jge
add
add
or
push
add
add
add
loopne
or
add
sub
add
pop
pop
pop
or
push
aaa
out
add
adc
add
xor
add
push
add
adc
add
add
add
jnp
add
add
pop
pop
pop
bound
push
or
push
add
add
add
loopne
or
add
sub
pop
pop
or
push
aaa
out
add
adc
add
and
add
or
add
push
or
adc
add
pop
add
add
push
add
push
push
pop
pop
or
and
add
add
jecxz
add
adc
add
and
add
adc
or
pop
bound
jnp
add
add
loopne
add
add
add
pop
add
push
pusha
or
and
add
add
loopne
shr
add
add
xor
add
add
or
add
pop
or
add
(bad)
adc
add
add
add
pop
pop
push
bound
pop
loopne
add
add
add
pop
add
push
or
pop
bound
pusha
or
or
and
sbb
pop
bound
jnp
add
add
loopne
add
add
add
pop
add
push
pusha
or
and
add
add
loopne
or
and
add
add
movs
push
shr
add
add
xor
dec
add
add
add
adc
jnp
add
add
jnp
add
add
or
sub
sub
add
jnp
add
add
jnp
add
add
outs
xor
add
add
add
add
jnp
add
add
pop
add
jge
add
add
add
add
add
sub
add
adc
push
add
add
push
add
adc
jnp
add
add
pop
pop
pop
or
add
add
add
push
push
add
add
add
or
dec
push
add
add
add
add
or
jnp
add
add
and
add
or
pop
jge
add
add
loopne
jnp
add
add
and
xchg
pushf
add
add
add
jnp
add
add
push
add
sub
add
add
pop
adc
add
xor
adc
add
das
add
add
add
adc
jnp
add
add
and
add
or
pop
jge
add
add
loopne
pushf
add
add
add
jnp
add
add
push
add
sub
add
sub
adc
add
daa
add
add
add
adc
jnp
add
add
pop
pop
pop
or
add
add
add
or
add
add
add
or
jnp
add
add
loopne
sub
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
xor
cmp
add
add
add
or
add
jle
add
add
or
add
push
je
imul
add
add
add
and
add
add
adc
add
and
dec
inc
add
add
add
cwde
add
add
inc
ins
outs
bound
add
add
add
add
add
push
xchg
add
leave
add
add
cli
and
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
jg
push
add
add
add
add
add
push
add
add
add
add
jg
push
add
add
add
fld
out
dec
add
add
add
cs
jg
push
add
pop
push
inc
add
add
add
cdq
push
push
add
add
push
jg
push
add
push
cdq
push
push
add
add
stos
or
or
or
push
add
or
push
add
or
push
add
or
or
or
or
or
or
push
add
or
or
or
add
or
push
add
or
or
or
or
push
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
and
add
adc
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
and
add
jbe
add
xor
add
add
add
add
add
and
xchg
add
and
test
jno
and
mov
add
add
and
fadd
jno
and
out
add
add
mov
add
and
add
test
add
add
add
add
add
add
xchg
add
add
add
movs
add
add
add
add
add
add
add
add
add
add
add
add
add
jbe
add
add
add
add
add
add
add
loop
xor
add
jmp
add
add
add
add
add
add
fs
adc
add
add
add
sub
add
add
dec
add
add
add
add
push
add
add
add
add
add
xchg
sbb
mov
add
add
add
add
or
add
add
add
add
ret
push
add
sbb
add
push
add
add
add
add
xor
add
add
add
add
js
add
add
add
add
rcl
add
add
add
add
sbb
add
add
push
add
add
add
add
push
add
add
add
add
add
add
add
add
syscall
add
add
add
add
sbb
sbb
add
add
add
add
syscall
add
add
add
add
add
add
add
add
cmp
add
add
add
sbb
add
add
add
add
add
add
add
syscall
add
add
add
add
pop
add
add
mov
add
jo
add
add
add
add
aam
add
add
add
add
add
add
sbb
add
add
add
and
add
add
add
inc
syscall
add
add
add
add
add
add
add
add
add
add
syscall
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
syscall
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
syscall
add
add
add
add
adc
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
sbb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lock
adc
adc
xchg
adc
sub
mov
or
cmp
nop
add
add
xchg
add
add
addr16
add
lahf
add
add
movs
add
add
add
add
add
add
or
add
add
or
add
add
add
or
add
add
add
repz
add
or
add
add
test
std
add
add
xchg
adc
jp
add
xor
xchg
or
add
cmps
or
or
add
add
add
add
or
add
or
add
add
or
xor
(bad)
mov
cmp
or
add
add
adc
add
dec
add
add
movs
add
add
sbb
add
cmp
add
pop
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
inc
add
jnp
inc
add
add
add
add
add
push
rol
daa
add
dec
add
push
add
add
add
add
add
add
add
add
inc
add
add
cmp
cmp
add
push
add
add
add
add
adc
add
add
adc
add
adc
add
add
sub
add
add
add
add
sub
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
gs
add
add
add
add
add
jp
add
add
add
add
add
pop
add
add
add
add
add
movs
pop
add
add
add
add
add
mov
add
add
add
add
pop
add
add
add
add
add
jecxz
add
add
add
add
add
test
add
add
add
add
add
or
add
add
add
add
and
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
jg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
push
jb
push
arpl
ins
ins
popa
outs
popa
arpl
gs
add
gs
jns
inc
popa
je
inc
imul
arpl
jo
add
arpl
ins
imul
outs
fs
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
imul
ins
jbe
add
jae
ins
bound
push
jns
je
ins
cs
gs
arpl
outs
add
jae
ins
jbe
inc
jbe
outs
je
jb
jae
push
jns
je
ins
add
outs
ins
jo
gs
add
arpl
outs
jb
inc
popa
je
push
jns
add
ins
jne
push
jns
add
je
arpl
gs
push
jb
bound
dec
outs
imul
add
je
jb
gs
arpl
gs
dec
outs
fs
jae
dec
jne
inc
imul
add
arpl
add
jbe
jb
gs
arpl
add
outs
fs
dec
bound
arpl
outs
fs
outs
add
jb
popa
ins
add
jae
gs
cs
dec
add
ins
gs
jae
push
je
gs
ins
add
jb
popa
ins
imul
outs
fs
imul
je
add
popa
inc
arpl
gs
ins
pop
dec
jae
popa
je
push
fs
add
dec
jae
gs
dec
outs
outs
addr16
arpl
gs
add
dec
jae
gs
arpl
gs
add
dec
jae
gs
xor
outs
fs
add
dec
jae
gs
xor
outs
fs
add
dec
jae
gs
xor
outs
fs
add
dec
outs
inc
arpl
gs
ins
pop
dec
imul
arpl
gs
ins
pop
dec
jne
push
imul
pop
push
outs
jae
arpl
gs
add
push
outs
jae
ins
outs
je
arpl
gs
ins
pop
push
popa
outs
addr16
arpl
gs
ins
pop
push
gs
outs
inc
arpl
gs
pop
jae
ins
imul
je
outs
outs
popa
jb
push
imul
imul
jb
push
imul
imul
pop
push
outs
jae
ins
imul
fs
ins
pop
push
outs
jae
je
je
dec
popa
jae
add
je
imul
jb
push
imul
dec
imul
outs
jo
jb
imul
push
outs
jae
imul
jb
imul
inc
arpl
gs
jb
jo
jb
imul
dec
outs
push
outs
push
outs
jae
je
je
add
inc
arpl
gs
ins
pop
dec
outs
ja
outs
fs
ins
pop
dec
imul
ins
pop
inc
push
add
inc
push
xor
ins
pop
dec
imul
jb
ins
pop
dec
jne
push
outs
jae
je
je
jae
inc
jb
popa
je
add
gs
ins
inc
arpl
gs
ins
pop
inc
outs
fs
add
dec
jne
push
outs
jae
imul
ins
push
jb
jbe
imul
jae
popa
jae
add
je
je
je
add
outs
fs
outs
jb
popa
ins
add
outs
fs
imul
inc
jns
add
outs
fs
add
inc
arpl
gs
add
je
imul
bound
data16
pop
jo
jae
pop
jae
jb
popa
ins
add
je
gs
ins
push
outs
jae
pop
ja
outs
outs
ja
imul
jae
add
jo
inc
ins
outs
arpl
push
jne
inc
jns
add
je
jns
add
popa
je
add
fs
push
jo
popa
je
inc
push
jo
popa
je
dec
popa
je
push
popa
je
push
gs
push
jo
popa
je
push
push
gs
dec
jae
push
popa
je
add
outs
data16
gs
jns
je
jb
bound
add
je
imul
sub
lods
loop
lods
loop
scas
loop
stos
loop
stos
loop
scas
loop
scas
loop
lods
loop
mov
or
stos
loop
mov
sub
scas
loop
stos
loop
scas
loop
lods
loop
lods
loop
scas
loop
lods
loop
scas
loop
scas
loop
lods
loop
stos
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
mov
sub
scas
loop
stos
loop
stos
loop
mov
or
inc
jo
cmp
bound
das
and
push
and
xor
jne
add
dec
xor
jns
je
push
outs
pop
dec
push
js
jbe
and
das
jno
and
push
jb
push
arpl
ins
ins
popa
outs
popa
arpl
inc
jae
gs
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
imul
jne
add
ins
push
imul
je
jb
bound
add
addr16
jb
ins
gs
jb
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
gs
imul
inc
jae
gs
bound
imul
imul
bound
addr16
bound
je
jb
bound
add
jae
gs
cs
imul
imul
jne
imul
jae
push
jne
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
jae
ins
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
outs
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
inc
push
push
inc
je
jb
bound
add
outs
push
arpl
ins
ins
popa
outs
popa
arpl
outs
je
js
push
jb
push
arpl
ins
ins
popa
outs
popa
arpl
arpl
jb
push
arpl
ins
ins
popa
outs
popa
arpl
data16
js
push
jb
push
arpl
ins
ins
popa
outs
popa
arpl
push
push
jb
push
arpl
ins
ins
popa
outs
popa
arpl
push
push
jb
push
arpl
ins
ins
popa
outs
popa
arpl
jae
outs
cs
push
jb
push
arpl
ins
ins
popa
outs
popa
arpl
jbe
add
outs
push
arpl
ins
ins
popa
outs
popa
arpl
imul
outs
push
arpl
ins
ins
popa
outs
popa
arpl
popa
arpl
js
push
jb
push
arpl
ins
ins
popa
outs
popa
arpl
jbe
add
outs
push
arpl
ins
ins
popa
outs
popa
arpl
popa
ins
cs
push
jb
push
arpl
ins
ins
popa
outs
popa
arpl
arpl
js
push
jb
push
arpl
ins
ins
popa
outs
popa
arpl
jae
cs
pusha
push
dec
xor
jns
je
push
outs
pop
dec
push
js
jbe
and
das
jno
and
jb
jae
jne
arpl
add
jo
cmp
bound
das
and
push
and
pusha
xor
jne
sub
jb
jae
jne
arpl
add
push
cmp
daa
push
fs
xor
jle
inc
pop
sub
ins
xor
cs
jae
jne
arpl
add
outs
je
xor
inc
jb
popa
jns
inc
ins
gs
jb
inc
jns
add
ins
outs
arpl
inc
inc
dec
popa
outs
fs
gs
jns
add
fs
add
je
outs
fs
popa
jae
add
outs
je
ins
gs
gs
jo
jb
add
imul
inc
jb
popa
jns
push
jne
je
ins
gs
imul
fs
add
je
js
arpl
imul
ins
bound
addr16
dec
popa
outs
imul
fs
add
je
push
popa
jb
gs
dec
outs
popa
fs
outs
fs
add
gs
jae
ins
jbe
push
imul
add
jo
outs
ins
popa
imul
inc
jne
jb
outs
je
outs
ins
popa
imul
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
inc
jae
gs
bound
gs
ins
jbe
add
je
jns
gs
push
jns
add
jae
ins
jbe
dec
gs
outs
add
je
popa
jb
ins
gs
jb
add
jb
ins
gs
jb
outs
outs
add
jbe
imul
outs
je
xor
inc
outs
arpl
imul
je
ins
cs
gs
add
je
push
push
inc
cmp
addr16
dec
popa
ins
add
jae
ins
bound
popa
ins
add
je
inc
jne
ins
dec
popa
ins
add
jb
outs
add
push
jo
gs
outs
jbe
jb
popa
outs
je
inc
gs
jns
gs
inc
outs
outs
jbe
jb
add
popa
jae
ss
je
imul
inc
outs
je
jns
jae
gs
bound
inc
gs
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
je
dec
outs
addr16
add
data16
inc
ins
outs
arpl
outs
jo
add
popa
add
add
ins
outs
jb
push
je
gs
ins
add
popa
fs
jns
add
je
add
js
push
jb
je
add
add
imul
add
add
add
(bad)
cmp
(bad)
and
jge
arpl
add
add
push
adc
and
sbb
pop
jle
and
adc
add
adc
outs
data16
gs
js
jbe
xor
xor
add
push
sbb
or
mov
pop
push
sbb
mov
add
adc
add
or
adc
sbb
or
add
add
add
or
and
add
adc
push
sbb
or
add
or
add
sbb
adc
add
adc
add
sbb
add
or
push
adc
push
adc
add
adc
add
sbb
adc
push
add
push
adc
add
add
or
or
and
add
sbb
sbb
and
adc
adc
or
add
add
or
push
adc
and
or
adc
add
sbb
add
or
adc
add
adc
add
add
add
and
add
sbb
add
or
add
add
or
and
add
add
push
pop
add
adc
jo
jb
addr16
and
xor
xor
add
adc
add
push
jb
push
arpl
ins
ins
popa
outs
popa
arpl
add
add
add
xor
xor
xor
xor
add
add
and
xor
xor
arpl
sub
arpl
sub
sub
cmp
xor
xor
add
add
add
add
add
add
cs
inc
push
inc
jb
ins
gs
jb
sub
gs
imul
xor
jb
imul
imul
push
adc
jb
ins
gs
jb
inc
imul
popa
ins
gs
cs
inc
push
and
popa
ins
gs
jb
and
inc
ins
imul
outs
imul
add
dec
or
add
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
or
add
add
add
add
add
pop
or
or
sbb
pop
add
add
or
pop
add
adc
pop
or
jno
add
adc
sbb
pop
add
add
adc
add
adc
add
add
jno
and
sbb
sbb
adc
sbb
sbb
add
add
sbb
and
add
add
or
or
and
sbb
and
sbb
sbb
sbb
push
sbb
or
add
adc
sbb
add
adc
and
sbb
add
sbb
adc
push
add
add
or
add
adc
or
and
or
add
adc
sbb
adc
add
add
add
add
push
and
add
add
add
add
or
pop
add
or
or
pop
add
pop
pop
add
or
or
or
pop
movups
or
or
or
or
or
pop
push
or
or
or
add
add
or
and
add
add
add
add
add
add
and
add
add
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
add
add
adc
add
and
add
push
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
ins
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
ins
add
je
imul
add
add
add
mov
inc
add
add
add
je
jb
imul
inc
add
ins
add
dec
add
data16
add
sbb
add
add
xor
xor
xor
xor
xor
xor
bound
xor
add
dec
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outs
add
add
je
and
inc
add
add
outs
add
arpl
add
xor
or
add
inc
add
ins
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
adc
add
dec
add
je
add
outs
add
ins
add
popa
add
add
add
jb
outs
add
add
je
and
inc
add
add
outs
add
arpl
add
js
add
add
adc
add
dec
add
add
ins
add
outs
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
add
adc
add
dec
add
imul
outs
add
ins
add
imul
outs
add
ins
add
add
push
add
outs
add
add
je
and
inc
add
add
outs
add
arpl
add
js
add
add
adc
add
push
add
outs
add
add
je
dec
add
ins
add
add
add
push
add
outs
add
add
je
and
inc
add
add
outs
add
arpl
add
xor
or
add
push
add
outs
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
jae
jae
add
bound
ins
add
and
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
mov
ins
ins
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outs
fs
ins
outs
outs
gs
and
ds
jae
ins
bound
js
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
ins
popa
outs
imul
jb
imul
xor
ds
popa
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
ins
gs
jo
ins
imul
cs
jo
and
ds
je
jne
je
outs
outs
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
ins
gs
js
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
and
and
gs
gs
gs
js
arpl
imul
ins
and
gs
cmp
outs
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
and
and
jb
jno
gs
gs
jb
jbe
ins
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outs
outs
ds
jae
gs
bound
or
xor
add
cmp
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
xor
cmp
add
add
add
add
and
add
add
je
imul
add
add
hlt
add
add
push
push
add
add
add
add
inc
push
dec
inc
add
add
add
ins
outs
bound
add
add
add
add
add
push
adc
add
add
and
add
add
add
add
add
add
add
add
or
add
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
push
add
inc
add
add
add
add
add
add
add
push
add
add
add
add
add
ins
add
add
lods
add
add
lods
add
add
add
add
add
add
add
add
add
add
add
add
add
das
add
das
add
jnp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
cmp
push
and
add
add
add
add
add
add
xchg
add
add
sbb
add
add
add
add
add
add
xor
xchg
or
add
add
adc
add
add
xchg
or
sub
add
sbb
add
add
xchg
or
cmp
add
add
xchg
push
add
add
add
add
add
xchg
sbb
or
add
add
add
ins
add
add
add
add
add
xor
push
add
cmp
push
add
inc
add
add
dec
add
add
push
add
add
pop
add
add
popa
add
add
imul
jno
push
add
add
add
add
mov
push
add
xchg
add
add
mov
add
add
add
add
add
add
add
leave
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
mov
mov
add
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
push
add
and
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
jns
add
sbb
add
sbb
add
arpl
add
jo
dec
add
add
add
repz
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ins
add
add
add
add
add
add
ret
add
add
gs
outs
push
arpl
ins
popa
outs
popa
arpl
ins
ins
add
outs
addr16
ins
add
outs
push
arpl
ins
popa
outs
popa
arpl
gs
jne
arpl
add
outs
push
arpl
ins
popa
outs
popa
arpl
jb
jo
jb
imul
je
outs
addr16
ins
jae
outs
jb
imul
gs
add
push
arpl
jns
je
ins
cs
outs
outs
imul
je
outs
outs
add
jo
imul
push
gs
imul
add
imul
jns
je
ins
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
jb
jae
jne
arpl
popa
outs
add
jae
gs
cs
ins
outs
bound
imul
add
ins
je
jb
dec
outs
outs
add
jae
jne
arpl
jne
je
jb
add
arpl
add
je
push
gs
jne
arpl
popa
outs
popa
addr16
addr16
inc
jne
je
jb
add
je
inc
jne
je
jb
add
ins
je
jb
add
popa
jne
je
outs
jae
popa
outs
arpl
addr16
inc
gs
jne
je
inc
gs
jne
je
gs
dec
popa
ins
add
ins
jne
add
jae
gs
cs
jne
je
ins
gs
gs
imul
push
popa
jb
gs
jb
ins
gs
jb
inc
je
jb
bound
add
jae
gs
cs
gs
arpl
outs
add
jae
ins
bound
imul
imul
jae
gs
bound
gs
jb
jo
imul
imul
jae
gs
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
jne
je
jb
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
push
imul
je
jb
bound
add
imul
jne
add
jae
ins
bound
gs
imul
imul
jae
gs
bound
imul
outs
outs
inc
je
jb
bound
add
jae
gs
cs
imul
imul
jne
addr16
bound
je
jb
bound
add
jne
imul
jae
push
jns
je
ins
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
inc
push
push
inc
je
jb
bound
add
jae
ins
bound
inc
gs
js
arpl
imul
ins
bound
inc
jae
gs
bound
popa
ins
add
je
popa
ins
add
je
dec
popa
ins
add
jb
outs
add
outs
arpl
add
jae
gs
cs
dec
add
jb
popa
ins
add
je
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
je
dec
outs
addr16
add
je
add
popa
add
outs
jae
add
outs
jbe
jb
add
outs
je
xor
dec
outs
popa
add
je
outs
fs
outs
outs
add
je
inc
outs
je
jns
outs
imul
push
jae
add
jbe
imul
jns
je
ins
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
data16
outs
arpl
jno
popa
ins
jae
push
jns
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
je
inc
jae
gs
bound
push
jns
je
ins
cs
outs
ins
jo
outs
outs
je
outs
fs
add
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
arpl
outs
jb
push
gs
imul
add
outs
arpl
outs
outs
imul
outs
push
arpl
ins
popa
outs
popa
arpl
jb
jo
jb
imul
outs
jne
arpl
cs
jae
jne
arpl
add
outs
push
arpl
ins
popa
outs
popa
arpl
ins
add
add
add
add
add
or
add
xor
inc
add
or
add
xor
or
add
cmp
xor
add
xor
js
xor
xor
add
xor
js
xor
xor
add
xor
js
xor
xor
add
xor
js
inc
add
add
xor
js
inc
add
add
or
add
xor
xor
add
xor
js
cmp
xor
add
xor
js
xor
inc
add
or
add
xor
inc
add
or
add
inc
add
add
xor
js
inc
add
add
xor
js
xor
cmp
add
xor
js
inc
add
or
add
xor
xor
add
xor
js
xor
xor
add
xor
js
xor
inc
add
or
add
xor
or
add
add
add
or
add
add
add
or
add
aaa
add
add
or
add
xor
xor
add
xor
js
aaa
add
add
or
add
aaa
add
add
or
add
add
add
xor
js
add
add
or
add
add
add
or
add
add
or
add
add
add
or
add
add
add
xor
js
aaa
add
add
xor
js
add
add
or
add
add
add
aaa
add
add
xor
xor
add
xor
js
xor
inc
add
or
add
xor
or
add
add
add
xor
js
xor
inc
add
or
add
xor
inc
add
or
add
xor
inc
add
or
add
xor
xor
add
xor
js
xor
or
add
xor
xor
add
inc
add
add
or
add
inc
add
add
xor
js
inc
add
add
xor
js
xor
or
add
inc
add
add
or
add
xor
xor
add
xor
js
xor
inc
add
or
add
xor
inc
add
or
add
xor
xor
add
xor
cmp
add
xor
js
inc
add
add
xor
js
xor
inc
add
or
add
cmp
xor
add
xor
xor
add
xor
js
xor
inc
add
or
add
add
add
or
add
xor
inc
add
or
add
xor
cmp
add
xor
js
aaa
add
add
or
add
inc
add
add
xor
js
xor
inc
add
dec
push
add
outs
add
add
je
inc
add
add
outs
add
arpl
dec
add
add
jb
outs
add
add
je
imul
add
add
outs
add
jb
arpl
add
add
stos
dec
aas
jecxz
ins
cmp
lods
xor
add
mov
pop
push
sbb
mov
add
add
add
push
add
adc
add
add
add
add
or
adc
adc
add
or
adc
push
adc
add
add
adc
add
adc
add
push
add
add
add
dec
add
add
or
add
add
add
pop
add
add
popa
add
add
push
add
push
push
push
push
add
push
add
add
pop
and
or
add
or
or
add
adc
add
jne
and
sbb
sbb
adc
adc
add
adc
sbb
sbb
add
push
inc
add
xor
jae
gs
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
sbb
add
adc
add
add
pop
push
and
add
adc
pop
add
or
pop
add
adc
and
add
adc
add
add
pop
add
dec
dec
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
xor
xor
xor
xor
add
add
adc
add
adc
add
sub
dec
inc
push
inc
jb
ins
gs
jb
sub
gs
imul
xor
jb
imul
imul
push
adc
jb
ins
gs
jb
inc
imul
popa
ins
gs
cs
inc
push
and
popa
ins
gs
jb
and
inc
ins
imul
outs
imul
(bad)
jb
push
arpl
ins
popa
outs
popa
arpl
add
add
add
adc
jo
jb
addr16
and
xor
xor
add
sub
add
gs
cmp
xor
fs
xor
cmp
sub
sub
aaa
xor
gs
bound
add
or
add
xor
xor
xor
xor
add
add
pop
add
add
add
add
or
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
add
add
or
add
add
add
add
sbb
add
cmp
add
dec
add
push
adc
xor
test
jae
dec
dec
inc
add
add
arpl
pop
push
jae
jb
pop
push
push
push
outs
data16
inc
outs
arpl
outs
je
pop
push
imul
je
imul
pop
push
jb
push
arpl
push
jb
push
arpl
ins
ins
popa
outs
popa
arpl
outs
push
arpl
ins
ins
popa
outs
popa
arpl
ins
outs
jb
dec
popa
jne
arpl
jb
dec
gs
outs
jb
dec
popa
jne
arpl
jb
outs
bound
inc
bound
pop
push
jb
push
arpl
ins
popa
outs
popa
arpl
bound
add
jl
add
add
add
add
and
add
add
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
add
add
and
