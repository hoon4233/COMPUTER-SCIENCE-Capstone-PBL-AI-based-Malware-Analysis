or
add
add
add
add
add
add
or
add
add
add
add
push
js
add
(bad)
and
add
xor
add
add
add
add
adc
or
sub
add
push
or
sub
sub
add
sub
sldt
or
add
jo
adc
add
sub
adc
add
sub
add
add
add
jb
add
jo
add
add
sub
add
or
add
or
add
or
push
jb
add
jo
adc
add
add
add
sub
xor
add
add
add
add
sub
add
push
or
add
add
add
add
add
add
or
xor
add
add
jle
add
add
xchg
push
pop
jb
add
jo
adc
xchg
pop
sbb
mov
pop
pop
pop
arpl
inc
add
pop
shl
pushf
pop
pop
pop
or
jle
add
add
imul
add
sub
add
adc
push
add
add
add
add
sub
add
or
add
add
pop
add
or
push
outs
sbb
add
sbb
add
mov
add
pop
add
sbb
add
and
add
add
adc
sbb
add
sub
add
sbb
add
sub
add
add
cli
and
mov
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
push
inc
inc
push
inc
inc
push
mov
imul
cdq
and
xor
sbb
xlat
sub
and
pop
fs
lds
(bad)
xor
call
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
hlt
add
add
add
add
add
add
inc
add
push
add
add
add
push
inc
add
dec
add
push
add
add
add
sbb
add
push
add
ins
add
jb
inc
add
js
ins
add
or
add
ss
add
dec
add
jns
inc
add
push
add
add
inc
add
add
add
add
push
add
inc
add
add
cmp
jb
inc
add
add
add
dec
add
je
add
js
push
add
xor
inc
add
add
add
cmp
add
push
dec
add
add
add
imul
imul
add
dec
add
add
add
add
push
add
je
jne
jae
push
add
push
popa
add
inc
add
outs
add
jo
jo
inc
add
add
add
arpl
pusha
add
add
popa
add
add
jae
xor
xor
add
je
add
xor
push
add
add
push
add
add
add
outs
add
add
add
jp
pop
add
dec
add
ins
add
inc
add
add
add
ins
add
inc
add
add
xor
arpl
add
inc
add
add
outs
add
cmp
je
dec
add
outs
add
outs
add
or
jno
dec
add
add
dec
add
inc
add
add
bound
cmp
push
add
dec
add
sbb
add
ja
push
add
push
add
add
jns
popa
add
outs
add
dec
add
add
push
add
add
push
add
imul
add
push
or
dec
imul
popa
popa
dec
ja
adc
xor
jae
dec
bound
dec
inc
xor
arpl
add
outs
bound
jp
jae
jo
xor
imul
gs
jno
bound
popa
inc
inc
jns
push
add
pop
dec
inc
push
dec
js
cmp
dec
push
ins
dec
push
bound
adc
bound
jae
push
arpl
arpl
push
push
xor
add
pop
mov
pop
clc
inc
mov
inc
icebp
dec
jmp
add
and
xor
sub
sub
sub
int3
mov
and
les
int3
mov
outs
out
pop
std
and
or
or
(bad)
cmp
adc
outs
mov
into
inc
lock
ds
jmp
aad
fmul
bound
out
mov
sub
out
mov
sub
out
stc
xor
dec
out
gs
xchg
ja
sbb
mov
mov
rcr
or
repz
in
sub
ss
std
inc
iret
pop
clc
sub
xor
pop
sti
push
int3
jge
test
pop
shr
jmp
in
hlt
xor
push
stos
movs
dec
or
add
jb
pop
inc
ss
jo
outs
and
and
lods
stc
xchg
mov
mov
xchg
ret
mov
in
cmps
ficom
mov
loope
out
stc
mov
mov
stos
fldenv
retf
cwde
cli
mov
retf
add
popa
icebp
jmp
sbb
and
mov
iret
pushf
jne
dec
rol
mov
sub
cmp
mov
push
stc
pop
or
and
push
and
movs
jp
sub
loopne
jmp
fstenv
ins
push
scas
lahf
cmps
xchg
in
sar
mov
mov
xor
jnp
js
pop
or
pop
daa
push
sub
push
add
fwait
call
mov
mov
cdq
jmp
add
es
fcomp
loope
call
jns
outs
add
add
adc
push
and
arpl
push
adc
push
sbb
adc
pusha
test
xor
outs
sbb
jno
push
inc
adc
jnp
or
push
pop
sbb
fadd
cld
int3
cmc
(bad)
mov
sub
stc
call
cmc
mov
(bad)
movs
fcom
in
les
cld
(bad)
cld
test
mov
mov
icebp
mov
retf
jmp
jmp
cmp
push
sbb
je
jge
fsubr
(bad)
dec
cmp
cmp
outs
push
inc
sbb
or
jg
pop
or
ins
es
adc
sub
in
mov
or
arpl
inc
cmp
xor
sbb
push
dec
sub
push
push
push
test
dec
lock
dec
xor
pop
cwde
mov
(bad)
mov
les
idiv
jmp
mov
cmp
and
es
adc
jae
sub
imul
add
inc
push
jg
or
pop
punpckhbw
mov
mov
xchg
fadd
dec
std
cmp
shl
mov
mov
fisttp
xchg
lock
out
mov
xchg
lock
(bad)
scas
out
push
ja
push
xor
jmp
xchg
sbb
jl
mov
mov
fs
cwde
mov
or
scas
mov
test
shl
inc
outs
sub
mov
mov
sahf
js
es
push
dec
push
bound
sahf
mov
retf
arpl
cmp
jb
ins
or
pop
dec
pop
inc
test
or
dec
fistp
ja
pop
adc
add
ins
(bad)
xchg
lds
pop
sbb
push
test
mov
push
and
enter
jmp
cmp
aaa
xchg
mov
xor
test
cmp
dec
xor
fwait
into
cmps
addr16
xchg
repz
les
je
fistp
dec
cmp
pushf
in
xchg
(bad)
mov
xchg
xchg
vcmppd
das
dec
(bad)
(bad)
nop
repz
pushf
(bad)
and
dec
push
loop
call
adc
out
cmps
pop
pop
and
fadd
jae
je
fwait
clc
xchg
fisttp
mov
pop
es
push
popa
mov
(bad)
jo
jl
fisubr
push
pop
pop
dec
cmp
adc
loopne
fld
aas
inc
add
aad
xchg
loope
int3
jge
inc
xor
popa
push
ins
push
inc
sti
nop
in
leave
jp
cmp
push
jnp
imul
stc
mov
mov
xchg
mov
mov
rcr
leave
test
out
stc
pushf
cmc
cwde
(bad)
jnp
mov
push
and
repz
push
xor
out
icebp
mov
fldenv
dec
js
xchg
lds
sti
mov
xchg
fst
push
in
sbb
cmp
or
or
adc
sahf
adc
mov
mov
in
pop
and
adc
mov
pop
(bad)
jl
sub
add
push
ss
xor
push
adc
jae
pop
int
xchg
mov
adc
mov
push
rcr
adc
es
cmp
(bad)
jae
retf
fadd
aaa
fs
test
shl
dec
adc
retf
pop
and
push
gs
fimul
or
inc
and
mov
mov
jecxz
loope
movs
mov
xchg
js
bound
data16
mov
sti
(bad)
xor
shl
push
jo
sbb
stc
ds
sbb
dec
and
push
push
cmp
pushf
fisubr
cli
out
in
mov
sbb
push
pop
pop
add
add
scas
sahf
std
xchg
fsub
je
imul
adc
and
adc
adc
push
sub
test
fwait
cdq
mov
adc
ds
sbb
or
or
addr16
push
mul
lahf
hlt
mov
fs
dec
or
icebp
cmp
aaa
dec
or
lods
in
(bad)
pop
ins
cmp
push
imul
mov
mov
inc
or
mov
repz
ins
(bad)
sahf
rcl
cmp
dec
sbb
(bad)
in
cld
xchg
shl
xor
push
add
xchg
xor
mov
test
dec
out
mov
adc
push
pop
leave
test
fs
mov
cmp
fcmovb
fdivr
in
adc
or
mov
out
cmp
je
xchg
repz
test
imul
push
add
cdq
mov
sti
add
jne
push
cs
and
or
dec
add
cmps
shl
jecxz
cld
mov
sub
inc
or
adc
outs
add
enter
into
inc
loope
aam
loope
arpl
inc
push
scas
jecxz
out
or
mov
mov
ds
ret
mov
or
xor
pop
into
lock
daa
inc
test
jge
push
fdivrp
and
call
movs
loopne
pop
jge
dec
test
out
push
imul
or
and
push
std
pushw
pop
sub
into
push
pop
gs
cmp
je
sub
out
clc
call
cmp
cwde
(bad)
mov
in
lahf
out
or
adc
mov
mov
ss
jp
inc
daa
ret
iret
sub
fcos
les
mov
push
and
cmp
aam
cmps
sahf
(bad)
test
fwait
pop
add
outs
or
dec
pop
push
add
and
push
addr16
out
push
adc
cs
clc
jne
push
cmp
clc
or
sbb
idiv
jno
out
sub
xor
mov
sahf
jecxz
adc
sbb
xor
xor
retf
fbstp
mov
stc
mov
loop
hlt
mov
xchg
mov
xchg
cmps
outs
cmps
in
(bad)
xlat
movs
aam
xlat
xor
inc
es
and
jbe
sbb
jbe
and
push
mov
out
test
sar
(bad)
push
jb
push
movs
dec
sbb
inc
sbb
inc
jmp
loopne
in
cmps
lahf
mov
imul
das
cmp
dec
cmp
mov
fiadd
sbb
or
cmp
test
fld
pop
cmp
xchg
pop
add
ins
pop
or
adc
sti
sahf
test
int3
jge
mov
jge
fild
(bad)
xchg
(bad)
push
gs
sub
into
cmp
aas
push
mov
int3
mov
(bad)
inc
sub
outs
xor
jge
lods
into
movs
(bad)
adc
push
dec
jge
cmp
mov
es
sbb
and
and
push
(bad)
jge
pop
das
(bad)
push
ss
xor
arpl
dec
add
mov
cdq
dec
fsubr
mov
or
cld
push
mov
mov
ins
sbb
in
das
lods
sti
iret
mov
ins
sbb
out
inc
mov
stos
ja
pop
mov
movs
cmp
call
adc
xor
cmp
mov
(bad)
push
mov
mov
pop
cmp
retf
inc
lods
pop
mov
mov
das
push
add
in
sti
inc
xchg
fs
xor
xchg
lods
sahf
les
cmp
or
pop
push
sbb
int3
and
push
push
icebp
pop
aam
daa
sbb
push
aad
ror
cmp
cmp
push
xchg
mov
and
imul
pop
ret
push
out
cmp
jns
test
dec
adc
lds
pop
leave
pop
enter
call
test
retf
xchg
mov
ins
mov
fstp
aam
fwait
test
ret
push
xchg
stos
imul
out
in
mov
pop
test
mov
pop
cmp
add
lods
scas
call
js
add
imul
in
retf
test
aas
inc
or
or
sub
and
or
jge
popa
sub
push
pop
or
push
dec
jmp
stos
ins
retf
retf
inc
mov
ins
mov
ret
mov
mov
pushf
mov
inc
loop
push
mov
popf
jl
(bad)
push
lahf
mov
and
jmp
cmps
ins
xchg
js
data16
pop
fwait
test
add
push
out
xor
adc
movs
icebp
xchg
sar
out
(bad)
cmc
xor
stos
daa
cmc
xor
push
sti
jno
push
mov
arpl
mov
mov
jle
aad
hlt
cmps
lds
sti
mov
ins
push
and
out
dec
loope
inc
sub
popa
push
fld
jno
jb
movs
not
movs
movs
sti
gs
leave
pop
out
pop
cmp
jge
bound
jmp
jle
mov
ficomp
imul
or
mov
sbb
fs
sub
xlat
je
or
cmp
adc
push
xor
hlt
mov
fcomp
push
in
icebp
inc
imul
stos
fs
sub
inc
cmps
dec
fcom
pop
pop
sub
mov
xchg
(bad)
ficom
adc
jb
mov
or
dec
cmc
xchg
or
pop
(bad)
add
mov
sbb
xchg
hlt
jp
jae
arpl
test
xor
xor
jecxz
adc
jecxz
outs
dec
loop
inc
jmp
xchg
add
aas
jae
adc
push
sub
add
cmp
lea
cmps
pop
jae
sbb
stc
xor
aad
dec
inc
and
icebp
sti
std
push
jmp
cli
jo
add
adc
jbe
dec
scas
ins
cmc
or
out
icebp
add
jne
daa
mov
xchg
jl
push
mov
mov
jl
sbb
or
xchg
mov
gs
inc
(bad)
mov
mov
cmps
or
movs
imul
push
dec
(bad)
xor
sub
nop
addr16
jne
or
in
out
sub
std
pop
xchg
les
int3
jne
xchg
jmp
daa
dec
sti
call
mov
ret
shr
pushf
imul
lds
cmp
fistp
mov
xchg
pop
cmp
rcl
andnps
(bad)
ds
lods
int3
sbb
pop
adc
fst
popa
adc
add
pop
and
adc
sbb
xor
and
enter
dec
(bad)
mov
or
push
add
mov
stc
test
loope
arpl
repz
mov
add
lods
mov
jne
xor
push
fsubr
dec
sbb
mov
in
mov
ds
mov
mov
inc
ins
add
call
mov
jmp
sub
jnp
cmp
xchg
in
in
retf
mov
mul
push
lods
xor
xor
mov
out
lock
aad
mul
pushf
push
call
sbb
stos
test
inc
jl
dec
push
out
cmps
call
(bad)
cmc
leave
pop
mov
jno
mov
lods
fld
push
add
leave
or
adc
out
push
das
jg
loope
in
imul
in
or
out
outs
std
fwait
xchg
into
cmc
mov
setg
fisubr
jg
adc
aad
les
lea
aaa
(bad)
xor
repnz
mov
mov
or
jo
mov
aas
cld
mov
adc
and
jns
(bad)
outs
inc
jecxz
loope
and
jno
hlt
out
fld
shr
repnz
cmp
adc
ret
arpl
data16
loop
dec
mov
jne
ds
adc
dec
pop
inc
sbb
xchg
mov
das
mov
cmps
inc
test
ror
inc
movmskps
test
div
dec
out
xor
(bad)
jmp
cmp
bnd
mov
idiv
mov
push
mov
pop
cs
dec
pop
adc
outs
ficomp
pop
in
sbb
gs
xchg
mov
pop
xor
je
(bad)
lock
mov
jno
push
lods
repz
int
pop
mov
xchg
cli
dec
cli
(bad)
sbb
push
pop
int
xor
or
add
hlt
loope
je
in
call
fstp
dec
rcl
xchg
sbb
rcl
fsubr
mov
sbb
popa
loopne
sbb
xchg
arpl
bswap
loopne
lea
std
mov
add
adc
mov
jmp
sub
sub
xor
movs
xchg
nop
sub
mov
in
pop
sbb
mov
in
aaa
nop
adc
adc
sbb
in
pop
paddw
add
xchg
add
push
mov
xchg
xor
xor
mov
scas
jg
mov
xchg
dec
out
fdivr
cmp
shl
mov
jns
cmc
jl
inc
xchg
adc
ja
mov
loop
leave
cld
clc
(bad)
out
mov
pusha
jp
mul
pop
fwait
push
push
jo
xor
and
lds
add
jg
mov
arpl
mov
cmp
adc
stos
xchg
mov
scas
ins
rcl
(bad)
mov
or
mov
mov
jecxz
cmp
xor
fisub
push
and
pop
enter
aaa
ret
push
mov
pop
repz
outs
mov
ret
xchg
mov
adc
and
xchg
loope
and
jg
mov
jge
inc
inc
jne
sbb
enter
outs
adc
sbb
add
inc
lahf
and
aas
aaa
cmp
xchg
repz
mov
sahf
mov
sbb
and
inc
(bad)
jnp
and
mov
sbb
aas
in
daa
shl
jmp
ja
xlat
daa
fsub
add
sbb
add
sbb
inc
push
jge
(bad)
stos
fistp
pop
inc
jne
movs
ins
mov
jb
xor
xchg
cmp
jle
test
popa
in
stc
push
popf
inc
js
pop
out
retf
push
cmps
push
loop
xor
es
inc
pop
shl
pop
jno
mov
aas
jl
les
dec
dec
shld
cmp
gs
popa
mov
call
mov
xchg
push
stos
mov
enter
(bad)
cs
and
test
gs
js
mov
cmc
xor
call
mov
jmp
ret
jl
and
jg
mov
mov
es
int3
cmp
push
and
pop
adc
push
mov
pushf
shl
ret
test
mov
inc
mov
es
pushf
dec
push
gs
push
pop
jne
pushw
cli
dec
jne
adc
ds
into
add
out
test
sbb
mov
sub
iret
dec
mov
ins
xchg
pop
jno
mov
adc
and
mov
leave
mov
cmp
push
fiadd
les
xor
sub
ins
sbb
xor
popa
aaa
mov
loope
adc
out
bnd
adc
pop
test
push
jg
cs
lods
(bad)
icebp
or
push
fwait
adc
jge
push
inc
addr16
and
dec
loop
std
cmp
xchg
jecxz
inc
mov
add
sahf
sub
mov
rcl
xlat
(bad)
pop
adc
mov
in
push
lahf
cmp
imul
mov
std
sbb
ret
sbb
frstor
stos
cmp
aam
dec
cli
gs
movs
inc
push
cmp
xor
int3
sahf
movs
pop
pop
push
fstp
sti
cli
fadd
push
(bad)
xchg
adc
xchg
cs
mov
jmp
sub
pusha
stc
jl
out
inc
pop
icebp
adc
xor
inc
imul
add
(bad)
adc
jne
call
inc
push
out
xor
(bad)
ins
out
dec
and
pop
add
test
ins
cmp
jmp
or
ret
mov
repnz
push
fst
and
mov
xchg
out
inc
cwde
or
mov
pop
push
jmp
dec
mov
cmps
outs
push
add
mov
das
or
lds
inc
pushf
mov
jp
ins
mov
and
push
gs
and
sub
cmp
call
stc
push
jb
hlt
lock
aad
call
cld
aas
cmc
mov
xchg
or
sub
ret
sub
mov
jo
xchg
add
les
jge
xor
dec
(bad)
sahf
out
cmp
adc
cli
imul
fisubr
daa
lods
add
shr
jb
pop
dec
and
ins
in
cmp
lea
test
rcr
iret
dec
into
push
out
in
fmul
xchg
aaa
or
cmps
test
fs
int3
aad
xor
push
retf
adc
sbb
xor
shl
xchg
pop
das
es
pop
inc
push
xchg
push
outs
push
jae
sbb
jge
out
outs
and
ret
jle
fist
cdq
cdq
adc
xchg
loop
cwde
or
adc
(bad)
dec
xchg
cwde
hlt
sti
repz
iret
jo
ds
movs
unpckhps
ja
ror
loopne
pop
sub
xchg
js
adc
xchg
adc
push
push
test
int3
scas
fsubr
aaa
imul
in
push
rcl
rol
sti
xchg
mov
mov
pusha
sbb
mov
adc
xchg
aaa
cmp
and
test
pop
push
mov
push
jp
int
mov
int3
(bad)
cld
test
(bad)
call
std
pop
add
mov
mov
mov
xchg
mov
out
not
inc
jmp
sub
jae
dec
sub
cli
hlt
sbb
rcl
xor
out
fs
mov
and
or
repnz
mov
cs
pavgb
in
test
jg
icebp
stos
push
add
fnstenv
xlat
outs
movs
sahf
test
pop
aad
push
cli
repz
shr
sub
sbb
lods
or
push
rcr
lahf
cmp
out
push
and
xor
loop
aas
repnz
ret
sub
jb
in
dec
fnstcw
(bad)
je
icebp
imul
xchg
in
add
mov
jne
leave
mov
mov
push
xchg
mov
push
pop
mov
outs
inc
aam
adc
xchg
adc
fst
or
test
outs
mov
dec
scas
pusha
les
push
jle
imul
dec
sbb
mov
mov
out
imul
sub
cmp
or
mov
call
or
in
pop
xor
test
inc
call
loopne
push
jbe
mov
cmc
add
cmp
inc
into
in
xchg
jecxz
iret
mov
sbb
fld
push
iret
test
push
push
mov
dec
add
push
sbb
cs
call
mov
(bad)
adc
xor
aad
fidivr
fst
xor
pushf
add
jbe
mov
pop
xor
cmp
das
push
mov
cmps
push
std
fcom
mov
xor
mov
ins
call
lods
and
ret
das
pop
mov
sbb
inc
push
fidiv
jg
std
mov
enter
mov
jne
mov
or
test
les
pop
adc
pop
mov
mov
mov
jns
pop
add
aas
cmp
mov
std
inc
and
push
das
pop
arpl
push
jle
inc
jle
xor
dec
jae
inc
fstp
int3
jns
adc
mov
in
cmp
pop
daa
inc
xor
push
sar
push
rcr
stc
pushf
fsubp
or
out
xchg
iret
jmp
ss
repnz
pop
or
inc
pop
shl
out
scas
mov
jecxz
jmp
and
mov
jmp
jmp
dec
retf
cs
cmp
jl
mov
cmp
call
mov
cld
and
pop
sub
aad
cmp
add
fstp
cmp
push
stos
jmp
push
sub
push
fmul
push
mov
imul
frstor
mov
ins
push
clc
adc
fiadd
out
pop
jae
add
add
icebp
xchg
adc
test
(bad)
rol
push
sahf
add
(bad)
xchg
repnz
or
mov
ins
shl
or
and
retf
inc
lds
ret
sti
outs
push
shl
push
adc
mov
aam
inc
fcom
mov
add
in
jns
(bad)
and
mov
mov
mov
push
mov
inc
xchg
dec
aam
cmc
xor
ja
inc
sbb
gs
sti
stos
ds
sbb
and
push
lods
dec
xchg
icebp
xchg
popf
dec
jg
and
mov
popf
fild
imul
sti
dec
add
jo
fsub
add
fucomp
bound
sbb
aaa
int
mov
sub
mov
lock
pop
xchg
clc
retf
out
loopne
jns
sbb
sti
xor
mov
mov
or
push
xor
mov
out
xchg
sub
shr
push
js
cmp
dec
fcom
inc
push
sbb
outs
mov
and
rcl
lahf
mov
inc
pop
xchg
push
xor
sti
fnsave
xor
je
push
loopne
xlat
fiadd
aad
frstor
or
mov
sub
xor
jb
cmp
js
ins
cs
stos
repnz
ret
icebp
mov
add
mov
cmps
pop
int3
sbb
push
rcl
sti
push
or
inc
int3
inc
test
adc
mov
out
cmp
push
or
push
sub
aaa
dec
lock
aaa
dec
pop
lds
adc
sub
push
cdq
xchg
pop
mov
ins
add
xor
in
xor
push
int
psraw
dec
pop
loop
mov
cwde
ret
push
leave
mov
jnp
mov
jle
outs
mov
lods
popa
xchg
jns
cmp
in
out
gs
jle
pop
or
inc
or
pop
adc
stos
stos
and
or
or
dec
shr
jmp
mov
xchg
xor
sub
inc
dec
push
stos
ss
cmp
inc
mov
mov
lahf
call
(bad)
cmp
cli
xor
xchg
arpl
outs
xlat
pushf
inc
stc
xor
and
dec
or
xor
das
jmp
cmps
stos
mov
sub
xchg
lods
clc
popf
mov
loopne
lock
clc
dec
add
cmp
jmp
adc
in
leave
stos
loopne
scas
push
mov
fidivr
daa
add
repnz
adc
inc
mov
call
addr16
add
frstor
shl
in
inc
cmp
or
loop
adc
(bad)
cmp
daa
or
out
std
push
stc
inc
mov
jle
inc
sti
cmp
mov
stos
cwde
jmp
je
ins
jmp
jl
inc
(bad)
sub
cmp
stos
stc
fstenv
sub
xor
push
imul
xchg
neg
gs
scas
lods
xchg
loope
rcr
cmc
push
(bad)
push
sbb
inc
push
or
dec
sbb
in
adc
les
jecxz
retf
jbe
movs
nop
test
jmp
nop
leave
xor
jp
inc
mov
int3
ret
rcl
clc
stos
ret
mov
(bad)
jb
hlt
retf
jb
(bad)
fidivr
pop
(bad)
lock
add
mov
xchg
lahf
test
pop
pop
push
adc
ds
sti
into
mov
push
add
fcomi
test
rol
push
js
lock
scas
add
mov
pusha
cmc
and
sub
hlt
cli
mov
fsub
dec
mov
sbb
(bad)
xor
pop
pop
es
adc
hlt
push
sbb
jp
mov
retf
shr
inc
shr
add
fimul
inc
xchg
xor
sbb
test
adc
mov
mov
pushf
jg
xor
std
sbb
fs
xchg
sub
mov
xchg
inc
jl
jb
push
loop
enter
inc
gs
sub
dec
add
push
xor
mov
idiv
in
shl
xchg
mov
or
je
ret
pop
loop
imul
cwde
mov
aad
xchg
ins
dec
dec
mov
loope
les
mov
jle
in
lods
cmp
(bad)
mov
mov
cmp
aam
xor
in
push
and
loop
and
xchg
repnz
loopne
mov
imul
sbb
cwde
leave
xchg
xor
lods
mov
ret
stos
add
lock
hlt
dec
mov
jg
inc
xchg
mov
cmp
nop
call
(bad)
fprem1
sbb
int3
loope
sbb
shl
push
xchg
arpl
call
fcomp
dec
lods
lock
jl
cs
push
sbb
aas
pusha
pop
pop
jg
add
xor
cdq
pusha
sbb
sbb
test
scas
lods
stos
pop
xchg
xchg
cmp
xchg
out
mov
gs
(bad)
sbb
mov
xor
fdivr
dec
adc
cmp
and
repz
cmp
jmp
adc
sbb
push
mov
aaa
icebp
in
popa
bound
or
mov
sti
add
fs
ret
push
jg
xchg
sub
push
cmp
out
cmp
arpl
pusha
data16
jno
test
cmp
mov
(bad)
popa
ficom
data16
xchg
xchg
mov
push
dec
js
clc
xor
arpl
xor
imul
jo
xor
xor
mov
xor
mov
xor
cmp
or
in
pop
loopne
lds
into
jnp
clc
xor
xchg
pop
enter
or
test
repnz
rol
in
jae
(bad)
(bad)
pushf
fisttp
push
aaa
popa
(bad)
(bad)
out
repz
and
and
mov
cmp
stos
lods
jg
pop
rol
jg
adc
dec
int3
sub
mov
std
pop
pop
repz
push
sbb
in
or
and
xchg
loopne
les
retf
fucomip
imul
adc
xor
into
dec
pop
pop
clc
lds
retf
rol
jl
fmul
lea
cmp
aaa
dec
loopne
and
cdq
dec
xor
push
lahf
jle
adc
enter
es
or
push
popa
ret
xchg
bound
(bad)
xor
mov
xor
loopne
xlat
jns
sbb
lea
mov
or
cmp
in
pop
ret
jmp
sub
repz
out
or
dec
mov
call
test
pop
iret
ja
mov
xor
scas
sub
mov
sub
cmp
push
add
xchg
inc
mov
mov
mov
rcr
data16
sbb
dec
(bad)
and
mov
jl
jmp
xlat
mov
cmp
xchg
es
stos
mov
or
cld
jmp
in
fsub
jo
push
stos
stos
popa
stos
adc
jae
xchg
call
mov
add
xor
sbb
in
fisttp
cld
imul
pop
ror
mov
pop
jnp
sbb
or
mov
sub
mov
and
bound
or
sbb
push
iret
fidiv
addr16
xchg
dec
pop
dec
xor
outs
pop
jecxz
push
rcl
xor
outs
rol
hlt
pushf
into
test
dec
(bad)
fild
movs
shr
repnz
data16
ror
push
push
inc
je
clc
adc
push
adc
inc
mov
cwde
dec
push
cmp
loopne
mov
ds
aam
out
xchg
shl
inc
stos
(bad)
lods
xchg
xchg
xor
(bad)
ret
rol
jmp
inc
sbb
data16
push
push
test
imul
movs
mov
and
mov
fist
in
mov
loope
dec
arpl
add
outs
cmp
sbb
loope
jbe
mov
xor
or
int3
add
jne
dec
in
jmp
mov
xchg
out
pop
add
rol
mov
test
cmp
xor
rol
out
or
pop
xor
sbb
jecxz
jo
outs
aam
add
rol
inc
cmps
or
rcl
add
sub
pop
ins
push
shl
or
add
sti
(bad)
jmp
cmp
(bad)
mov
push
inc
xor
lahf
xor
sub
xor
mov
dec
push
sbb
and
jp
xor
repnz
lds
retf
mov
outs
pmulhuw
mov
ret
xchg
adc
das
rol
mov
adc
jl
shr
mov
xlat
sbb
cld
and
inc
push
outs
cs
jl
dec
mov
fild
in
inc
fstp
push
adc
fwait
icebp
imul
mov
jge
inc
arpl
std
sub
in
add
dec
or
sbb
into
adc
loopne
inc
neg
cmc
add
mov
sbb
mov
and
(bad)
mov
add
jns
mul
scas
cmps
cmp
fcom
dec
and
in
rcl
xchg
xor
pop
mov
or
test
add
pop
jmp
sub
xor
mov
mov
rcr
pop
hlt
sbb
clc
mov
in
xsaves
jno
mov
rcl
popf
xchg
mov
daa
repz
inc
xchg
jmp
rol
adc
cmps
push
pushf
inc
xor
inc
jg
ds
sbb
fnsave
cli
jmp
add
aas
jg
sub
jge
hlt
sti
push
sbb
push
icebp
test
mov
imul
or
sti
scas
rcr
push
add
xchg
mov
ins
push
jl
xor
(bad)
cld
inc
xchg
repnz
mov
or
add
cld
ror
les
ficom
pusha
and
xchg
jae
cmp
dec
add
jge
push
or
adc
pop
xchg
mov
mov
jb
ret
into
rcl
(bad)
xchg
push
adc
dec
and
mov
push
or
push
xchg
adc
dec
cmps
pusha
sti
or
cld
or
sbb
shl
shl
cmp
adc
rcr
cmps
pop
stos
mov
pop
test
mov
or
(bad)
xor
aad
cmps
push
sbb
bnd
xchg
and
cmp
test
adc
repz
cld
xchg
or
ror
inc
ss
jae
loopne
inc
add
fisub
fidiv
test
vmread
sbb
mov
mov
sub
xor
push
sahf
add
dec
xor
es
xor
jp
lea
stc
shl
dec
ror
sbb
mov
clc
mov
loopne
out
or
push
lock
push
ja
adc
dec
sbb
fsub
cwde
adc
or
ror
jo
aam
out
jno
test
test
cwde
jno
imul
and
push
imul
mov
cwde
enter
or
or
xchg
pop
xchg
addr16
dec
mov
aas
iret
xor
pusha
xor
push
sub
outs
adc
std
pop
mov
mov
ds
inc
xchg
pusha
push
and
(bad)
cmps
xor
jmp
push
mov
in
pop
sub
jae
cmp
push
add
out
cdq
es
sub
inc
cmp
scas
inc
enter
and
dec
repz
test
rcl
ins
cmp
mov
xor
pop
movs
fdivr
jbe
dec
mov
out
popf
mov
test
cli
add
cld
mov
push
sub
addr16
cdq
push
fsub
and
clc
push
jns
push
sbb
mov
xor
iret
arpl
cmp
jae
pop
jno
scas
mov
neg
test
push
(bad)
call
jmp
leave
sbb
outs
sub
jns
test
hlt
add
or
idiv
sub
inc
sbb
sbb
mov
int3
push
stos
sub
mov
adc
jg
xor
sbb
add
stos
jge
xor
cwde
cmps
pop
aad
pop
ficom
mov
retf
inc
pusha
and
ss
call
cmps
into
jecxz
sub
push
inc
hlt
mov
xor
je
or
xor
mov
pop
test
mov
xor
in
mov
ds
in
jecxz
push
adc
ret
mov
je
jmp
ins
popf
push
or
aad
out
and
dec
pusha
out
mov
mov
daa
adc
call
adc
sub
cmp
idiv
jmp
inc
xchg
lds
jecxz
into
xchg
mov
neg
pop
mov
rcr
dec
fcmovbe
nop
sti
dec
and
mov
addr16
and
dec
or
enter
inc
into
jmp
ds
leave
mov
add
mov
test
lods
mov
bound
leave
push
mov
ja
aam
xchg
xchg
and
sbb
adc
inc
push
jl
int
inc
sbb
imul
or
push
outs
(bad)
or
lods
or
ins
lods
pusha
dec
adc
push
mov
add
fnsave
adc
dec
add
enter
fsub
cli
loopne
psrlq
xchg
ins
pop
sub
into
adc
xor
xor
or
shl
and
shr
inc
mov
test
jbe
sbb
fisubr
dec
mov
pop
jno
or
adc
dec
aas
retf
xor
in
xlat
ss
std
idiv
fwait
dec
jge
out
call
shr
jne
fidiv
and
es
or
add
pop
inc
sub
cmp
aaa
lods
arpl
xchg
js
int
out
adc
test
rol
retf
cwde
jp
jbe
cmp
jne
test
sbb
loopne
jmp
mov
rcr
ins
pop
sub
stos
jbe
mov
ret
xchg
pop
inc
mov
fnsave
pop
cmp
jns
or
test
or
cmp
sub
nop
pop
add
jbe
aam
mov
out
fcom
int3
je
pop
or
scas
(bad)
imul
lds
jp
mov
aam
cwde
pop
dec
adc
stos
add
adc
adc
shl
into
push
fstp
dec
data16
jmp
pop
mov
add
cmp
imul
add
sub
mov
inc
mov
ror
add
stos
or
test
test
sahf
and
push
add
jae
test
cmp
loope
call
mov
dec
stos
jle
push
mov
push
rol
cld
out
(bad)
icebp
jmp
pop
push
adc
scas
mov
movs
xchg
cmp
rcl
out
fisttp
not
mov
retf
mov
mov
xor
push
pop
popf
outs
jle
mov
add
(bad)
clc
ficomp
jns
(bad)
retf
(bad)
outs
and
retf
add
inc
test
push
mov
dec
aaa
mov
xchg
mov
icebp
iret
inc
aad
es
dec
jg
aam
ins
add
ins
push
(bad)
in
push
dec
fadd
pop
nop
mov
out
das
jmp
cwde
sub
fs
jle
rcr
out
mov
mov
aaa
sbb
dec
clc
jno
arpl
test
xor
test
add
push
into
lock
push
aaa
push
lds
std
jg
push
push
jo
ins
mov
and
in
sar
adc
pop
and
push
sub
and
test
inc
inc
loope
sar
pop
nop
cmp
test
and
mov
or
pop
cmp
sub
not
ja
mov
jle
int
pushf
jp
mov
cli
fsub
mov
mov
mov
push
add
scas
repnz
gs
ja
sbb
ds
fadd
and
icebp
jle
movs
rcr
lahf
fnsave
pop
neg
nop
out
loopne
es
cmp
retf
test
test
add
push
dec
dec
enter
in
xor
add
adc
mov
sbb
mov
fimul
outs
jg
loopne
enter
(bad)
ins
jp
loope
sbb
ja
loopne
jg
xlat
adc
adc
or
stc
cmp
das
ss
pop
pop
les
add
cmp
xchg
sbb
and
fsqrt
fistp
jns
sbb
test
jg
hlt
imul
xlat
mov
cmps
push
cwde
adc
ficom
xchg
movs
jnp
pop
xchg
pop
jg
mov
xor
mov
test
aam
sbb
adc
mov
loop
fdiv
xchg
mov
jge
xacquire
fs
adc
cmp
mov
jge
mov
lds
push
dec
in
hlt
(bad)
out
add
fs
xor
xchg
or
push
sbb
sahf
pop
in
loope
push
daa
enter
push
sar
push
ret
mov
scas
call
adc
dec
bnd
jp
hlt
xor
mov
aad
fst
ja
in
ins
in
mov
dec
out
out
outs
adc
mov
and
jnp
test
inc
test
in
xchg
cld
jge
sti
ds
jnp
jne
push
popf
ins
in
inc
sub
mov
cmps
or
es
(bad)
and
inc
(bad)
into
cmp
adc
out
mov
adc
jns
add
scas
clc
inc
dec
test
dec
add
fiadd
leave
ds
jp
fs
dec
mov
pop
call
add
(bad)
xlat
scas
pop
push
and
jg
loop
ja
mov
test
je
ds
xchg
xchg
cmp
lods
jmp
aad
fcomp
test
dec
jnp
ss
mov
in
cld
adc
cdq
push
cwde
lock
cs
arpl
in
mov
ss
push
rol
data16
std
je
or
out
ret
sbb
stc
sub
test
mov
mov
shl
mov
js
mov
inc
ds
inc
and
cli
aad
add
cmp
sbb
(bad)
mov
frstor
out
jecxz
lods
sbb
mov
ror
push
and
cmp
sub
(bad)
adc
adc
les
push
je
out
adc
test
mov
out
pop
cmp
pop
inc
and
daa
fldcw
addr16
pop
sbb
sub
out
push
push
cmps
fst
adc
lahf
cmp
(bad)
lds
inc
frstor
pop
mov
retf
mov
retf
enter
in
jecxz
and
lahf
cmovns
int
bound
repz
mov
jnp
mov
inc
sar
push
xor
sbb
jns
(bad)
dec
mov
cmps
test
cli
aas
stc
shr
test
out
adc
repz
inc
dec
cli
ss
int
or
sbb
push
cdq
mov
inc
stos
je
mov
jbe
and
ins
ins
stos
sbb
mov
cmc
sti
(bad)
rcl
sub
ja
pop
scas
(bad)
nop
das
sbb
dec
jmp
lods
lahf
loop
fnstenv
jns
xchg
lfs
fsubr
cmps
push
popf
mov
lods
push
and
js
mov
cs
inc
mul
sbb
inc
jbe
cmc
daa
dec
repz
push
retf
and
pop
adc
icebp
pop
jno
push
push
mov
fimul
mov
call
jl
retf
imul
call
int
sub
xchg
jp
push
jbe
js
or
xchg
call
cmp
lahf
cmp
push
mov
loopne
popa
jnp
pop
in
mov
jmp
fdiv
movs
mov
push
arpl
mov
push
in
ins
cli
and
sbb
inc
sub
xchg
inc
out
loopne
into
(bad)
jbe
mov
add
mov
adc
(bad)
pop
push
mov
retf
xor
hlt
inc
push
push
add
push
inc
push
js
pop
mov
cs
int
jae
or
pop
ret
adc
fnstsw
div
sub
push
and
test
cmp
cdq
addr16
lds
xchg
lods
(bad)
adc
or
mov
int
mov
dec
mov
push
add
ins
jl
loop
(bad)
js
push
pop
rol
movs
sub
(bad)
stc
imul
retf
or
xchg
inc
mov
mov
mov
pushf
or
call
(bad)
xchg
(bad)
fidiv
cld
hlt
adc
mov
out
outs
call
push
mov
nop
inc
mov
or
push
outs
jmp
das
pop
movzx
adc
xor
sub
mov
adc
xchg
push
test
inc
mov
aaa
dec
pop
imul
lds
mov
and
inc
inc
lock
loope
or
xor
push
data16
lea
and
and
adc
dec
fldcw
or
repz
cmps
shr
enter
pushf
xchg
pop
enter
jnp
test
xor
sti
or
xchg
test
mov
aad
jmp
scas
or
pop
adc
ror
jbe
inc
xchg
in
retf
adc
call
adc
call
ins
imul
inc
and
mov
pop
or
xor
mov
xor
mov
inc
xchg
sbb
cmp
cmp
add
mul
in
mov
cld
dec
cmovp
pop
mov
outs
sbb
xor
dec
rcr
arpl
mov
cld
adc
cmp
and
mov
pop
iret
loope
cmps
fsub
fnstcw
or
mov
rcr
adc
push
pop
jno
jg
ins
push
movs
jl
aas
mov
push
into
repnz
push
out
nop
dec
and
or
jmp
xor
push
xchg
loop
jmp
push
mov
lods
mov
stos
inc
test
ins
mov
cmp
in
pop
test
mov
xor
mov
fwait
outs
cdq
or
inc
adc
jge
or
call
ror
mov
mov
adc
cmp
sub
push
inc
mov
push
loop
add
push
pop
std
xchg
stos
dec
mov
add
retf
xchg
pushf
mov
rol
fld
in
cdq
jno
pop
xor
hlt
lods
or
int
fbld
xor
cmc
jb
sbb
dec
mov
(bad)
xor
push
das
mov
push
icebp
call
imul
mov
or
fmul
pop
ins
mov
adc
ficomp
push
adc
dec
mov
test
or
aas
bound
xlat
(bad)
hlt
mov
ret
sar
jl
or
pop
add
sub
jp
lods
in
mov
jae
ror
lods
cdq
rcl
aas
dec
cdq
xchg
sub
psubd
mov
cmp
jmp
stos
mov
dec
jnp
xchg
and
enter
ficomp
je
retf
jecxz
mov
loop
pop
jbe
push
xchg
pop
add
jl
xchg
mov
xlat
pusha
stos
dec
adc
pop
leave
xlat
or
das
or
mov
data16
push
movs
or
idiv
mov
rcr
pop
or
add
and
ror
(bad)
(bad)
jg
and
leave
jg
outs
add
jmp
inc
push
add
in
repnz
in
cmps
std
fcmovne
push
push
repz
jo
pushf
aas
stos
into
mov
sub
popf
es
push
test
ja
pop
and
out
dec
adc
xchg
data16
inc
add
in
adc
sub
jmp
rcl
cmp
jnp
cs
pop
jmp
pop
dec
outs
repnz
int
scas
xor
and
or
shl
mov
cmp
mov
sub
add
xchg
jns
(bad)
aas
dec
or
dec
dec
mov
mov
imul
je
or
mov
push
fcom
push
sar
inc
ins
cmp
jle
add
push
cdq
aas
loopne
retf
vcvtsd2ss
and
xor
mov
test
push
mov
leave
xor
out
cmp
addr16
and
js
xor
cli
mov
(bad)
pop
cdq
inc
sbb
shl
or
mov
repz
loop
or
or
pop
adc
dec
cmp
outs
mov
cs
gs
outs
or
fidivr
sti
inc
or
imul
mov
mov
gs
test
adc
mov
mov
repnz
loopne
push
push
xchg
mov
sub
push
or
test
xchg
sub
and
mov
scas
call
les
test
pushf
pop
mov
push
cmp
jge
lock
(bad)
sti
pop
cmp
push
call
mov
popf
dec
inc
or
and
ins
fcom
ret
pop
iret
in
dec
push
cmp
push
mov
mov
das
out
pop
mov
adc
inc
loop
dec
jnp
or
xchg
and
lea
xchg
inc
pop
(bad)
xor
js
adc
test
enter
mov
idiv
loope
mov
lldt
jp
jnp
pusha
mov
imul
mov
inc
adc
mov
rcl
pop
test
add
mov
stos
cld
sub
jbe
cmp
cdq
mov
mov
enter
jae
pushf
xor
mov
and
lock
loopne
mov
xor
test
es
and
and
cmps
mov
push
les
inc
and
push
pop
test
div
in
test
sbb
xchg
xchg
xchg
aam
inc
push
imul
inc
arpl
xchg
aas
pop
and
inc
jb
lahf
fs
xchg
push
mov
out
jne
pop
loopne
dec
out
cdq
(bad)
arpl
fnstenv
xchg
jae
push
adc
mov
aaa
push
daa
pop
add
into
sbb
xchg
xor
(bad)
iret
mov
mov
push
cmp
cmp
rcl
cmp
frstor
sub
mov
mov
push
dec
and
cmp
mov
jmp
mov
(bad)
jae
sbb
dec
shl
enter
add
push
prefetch
fistp
inc
std
xchg
sbb
mov
sub
loop
aam
shl
inc
dec
push
test
stos
dec
pop
js
aas
push
sub
imul
(bad)
(bad)
int3
outs
test
icebp
add
mov
jge
scas
jae
inc
sbb
dec
pop
jmp
imul
mov
adc
in
xor
mov
jne
mov
push
ss
fistp
mov
fstp
int
pop
sub
xchg
pop
push
pop
push
push
test
fist
out
add
push
dec
fst
xchg
ja
xchg
ins
in
xor
pop
popa
mov
neg
xchg
cmps
pop
add
add
cmc
xchg
cmp
call
(bad)
mov
fbld
fisttp
xchg
sbb
mov
or
sub
mov
inc
xor
push
adc
dec
cwde
cmps
loope
imul
ja
test
fiadd
pop
pop
(bad)
adc
pop
jmp
cmps
pusha
retf
mov
or
adc
pop
repz
jl
or
sbb
int3
outs
gs
inc
out
xchg
iret
in
stos
rcr
mov
jne
mov
dec
lock
outs
(bad)
mov
jb
adc
jmp
add
pop
pop
ins
repz
cmp
loopne
cmp
inc
enter
mov
mov
sub
shl
pop
ja
mov
nop
in
dec
jmp
icebp
push
popf
fldcw
cmc
xor
ret
das
sub
add
fwait
sub
push
dec
cld
jne
in
scas
lea
test
add
stc
(bad)
mov
repz
fisubr
addr16
mov
retf
aas
or
xchg
clc
jbe
fadd
mov
sbb
pop
and
and
test
jae
into
cmp
nop
sbb
or
xchg
cmp
mov
push
stc
and
gs
sub
and
loope
popf
inc
test
out
test
sub
xlat
push
push
out
pushf
cdq
cmp
cmp
int
add
xchg
fld
popa
mov
adc
xchg
mov
ins
out
cmps
fwait
inc
push
or
icebp
mul
or
mov
nop
or
int3
out
xor
sbb
push
stos
test
add
lods
jmp
jecxz
mov
xchg
sbb
mov
das
pushf
sub
not
cmp
push
rcr
sbb
cmp
sub
addr16
mov
or
and
adc
fwait
adc
sbb
jg
ret
xlat
enter
inc
lea
imul
xchg
or
pop
dec
ror
jmp
or
lahf
adc
sbb
jbe
stos
rol
inc
push
sub
or
inc
fimul
fimul
test
pop
pop
sub
ss
xor
cmp
sub
test
add
test
push
or
mov
inc
sbb
jge
addr16
push
in
add
xor
sbb
jnp
addr16
sub
fiadd
stos
jne
mov
pop
inc
fldcw
jne
into
in
mov
jecxz
mov
sbb
or
add
xchg
loope
mov
cli
ja
sub
mov
xchg
xor
jns
mov
je
pop
lock
ins
cmps
jp
jl
and
jns
push
jge
sub
cmp
pop
xor
xchg
shr
repz
mov
jmp
push
push
movs
outs
adc
bound
adc
mov
push
std
and
movs
nop
xchg
mov
retf
dec
dec
sub
xchg
mov
call
movs
mov
ficom
mov
fdivr
jmp
mov
call
mov
add
jg
mov
mov
std
loopne
sti
xchg
push
dec
fidiv
cmp
shl
add
dec
je
mov
xor
xor
test
ror
in
aam
mov
jge
out
lods
sub
hlt
icebp
mov
repnz
cmp
pop
mov
mov
inc
rcl
fistp
(bad)
xor
sub
fs
inc
cmps
rcr
mov
and
jmp
xchg
inc
(bad)
push
sahf
stos
arpl
icebp
sbb
push
jo
cmp
or
gs
push
add
push
in
js
push
jle
cld
imul
mov
lea
loopne
ret
push
push
mov
mov
jmp
sbb
cs
push
and
shl
cld
xor
ror
fisttp
add
jmp
or
cld
out
out
enter
rol
xor
and
xchg
cli
push
xor
int
pop
sub
fidiv
pusha
dec
ret
sar
adc
daa
sub
push
mov
je
jae
shl
test
inc
out
(bad)
addr16
outs
enter
push
add
out
or
xchg
xor
lock
and
(bad)
(bad)
movs
sub
fcom
adc
addr16
adc
jbe
or
(bad)
retf
mov
push
dec
outs
(bad)
arpl
sbb
cli
lock
daa
and
inc
or
lods
data16
mov
(bad)
fisttp
dec
add
je
out
shl
outs
inc
sbb
sbb
idiv
push
push
repnz
push
lds
xor
pop
das
hlt
jno
test
and
fdiv
icebp
mov
iret
and
or
pop
jne
cmp
loope
sbb
test
pop
cli
aaa
jmp
jge
push
lods
fldenv
sub
mov
les
push
xchg
or
daa
fmul
test
clc
xchg
movs
test
add
dec
inc
add
in
stos
and
iret
add
sub
sbb
pop
inc
jp
int
fimul
in
lods
movs
mov
jecxz
inc
out
ret
xor
xor
fistp
(bad)
dec
or
shl
adc
out
mov
inc
fiadd
add
mov
aas
add
jne
push
jae
sub
lock
pop
nop
dec
in
jb
push
inc
pop
mov
cmp
xchg
xchg
jno
cmps
(bad)
mov
mov
mov
aam
ja
sbb
cdq
jl
sub
cli
mov
rcl
or
retf
xchg
sbb
pusha
mov
xchg
xor
loopne
movs
mov
and
add
int
mov
daa
out
sbb
(bad)
mov
jge
mov
push
mov
iret
cwde
cld
inc
adc
adc
lds
nop
adc
mov
call
xor
dec
push
in
sbb
inc
push
ret
dec
or
out
stos
call
fimul
cmp
dec
lock
push
push
dec
cli
std
js
mov
mov
std
xlat
push
int3
call
xchg
aad
and
mov
jae
jne
loop
int3
add
and
xchg
jbe
jg
add
adc
sar
cwde
push
rol
mov
mov
sub
mov
sar
mov
cmp
cmp
out
inc
pushf
test
loope
pop
dec
pop
rcr
adc
jns
(bad)
aad
mov
lock
inc
or
sub
les
addr16
popf
call
xor
(bad)
mov
cmp
daa
push
rcl
push
jno
xchg
jno
push
xchg
and
adc
mov
push
pushf
xor
mov
nop
push
sub
stos
mov
xlat
fisub
fidiv
sbb
mov
jno
mov
mov
outs
out
repnz
adc
pop
int
xchg
ja
mov
aam
inc
leave
and
dec
je
push
push
int
push
cmp
jmp
xlat
neg
and
push
dec
and
jp
lods
pop
mov
in
mov
les
jle
(bad)
cmpxchg
adc
sti
jns
push
repnz
ret
mov
fnstenv
js
fsub
gs
mov
int
inc
sti
mov
sti
loop
test
cmp
jl
mov
xchg
nop
in
(bad)
es
xor
fwait
test
std
aam
add
add
addr16
cs
cld
das
rcl
repz
sar
xchg
call
adc
jl
outs
push
aaa
outs
sub
imul
pop
(bad)
lock
jmp
mov
test
retf
sub
sbb
mov
cmp
inc
inc
add
outs
sub
call
jne
setbe
jp
adc
aam
fcom
sti
(bad)
jbe
xchg
jo
mov
aas
cwde
cmp
cmps
cdq
and
push
ret
push
aam
sub
sub
mul
jno
cmc
test
scas
push
adc
mov
call
cmp
clc
mov
adc
scas
ins
ror
and
push
out
inc
loop
mov
xchg
or
dec
aad
pop
add
push
(bad)
fsubp
and
mov
mov
sub
inc
cmps
scas
and
xchg
sbb
ins
pop
add
aam
jne
pop
mov
nop
jo
imul
fisttp
das
sti
sbb
jne
imul
cmp
dec
push
pusha
push
(bad)
pop
pushf
rcl
(bad)
jmp
out
or
mov
out
adc
xchg
xor
mov
jae
cmp
pop
mov
mov
arpl
add
adc
sar
add
aam
daa
ss
mov
stc
(bad)
dec
das
inc
outs
repz
popa
in
sbb
daa
xor
aam
enter
jno
lahf
outs
and
push
xlat
xchg
sti
mov
aam
jecxz
loop
xor
sbb
jae
inc
popa
test
jo
add
push
popa
(bad)
bound
rol
adc
sub
loopne
pshufw
dec
mov
out
nop
jle
jp
cmp
xlat
out
ret
(bad)
and
fs
rcr
mov
mov
inc
cmp
xor
mov
fdiv
ins
std
add
mov
sahf
loop
outs
mov
fcmovnu
sub
jb
shl
int3
shl
stc
dec
stc
xor
rcr
sbb
dec
add
stos
shl
push
aas
fist
dec
mov
jp
xchg
aad
push
inc
jmp
fmul
and
das
pop
push
add
sti
sti
dec
dec
add
cdq
popf
and
jecxz
push
scas
fwait
popf
xor
mov
lds
push
cdq
icebp
aam
xchg
retf
mov
out
xor
out
clc
push
inc
aam
pop
mov
jmp
cs
sbb
adc
fsubr
pop
call
xchg
jns
fisttp
dec
(bad)
leave
scas
adc
(bad)
dec
jns
pop
sbb
push
ret
call
cmc
and
mov
out
add
imul
sub
jmp
fs
lock
(bad)
and
imul
das
ins
or
adc
push
push
cwde
mov
loopne
add
mov
in
(bad)
ins
xchg
dec
adc
push
pushf
jge
jno
pushw
fwait
hlt
neg
add
int3
and
mov
out
loopne
data16
jae
nop
lods
popf
pop
mov
pop
psubsb
and
xor
xchg
xchg
sahf
inc
jecxz
cs
sub
(bad)
stc
aam
clc
and
in
out
jg
mov
or
pop
cdq
gs
sti
mov
mov
push
xchg
scas
lds
jecxz
es
fstp
xor
movs
jg
not
fnstcw
mov
imul
stos
sub
sbb
iret
mov
sbb
dec
sbb
dec
jl
mov
add
pop
loopne
and
mov
popa
leave
cli
gs
mov
dec
in
ds
mov
ins
(bad)
fist
jmp
and
inc
fisubr
and
ja
add
rcr
jmp
and
mov
popf
adc
adc
rcr
(bad)
retf
repz
mov
lahf
into
adc
int
clc
cli
push
aas
mov
fbstp
out
aad
push
sbb
lahf
adc
xor
and
jnp
xlat
mov
dec
xchg
xchg
inc
push
test
mov
js
lea
aad
icebp
fmul
test
jae
ffreep
fisub
cwde
mov
pop
or
rol
xchg
fidiv
or
lods
and
movs
push
hlt
out
(bad)
call
push
sahf
xlat
xlat
outs
sti
daa
fsubr
cmps
in
bound
or
out
sbb
jle
xor
push
mov
mov
add
jp
jmp
push
mov
cmp
test
jae
push
mov
aad
jle
mov
loope
scas
pushf
hlt
mov
fnstsw
pop
cmp
xor
pop
jmp
pop
ja
dec
ror
out
jge
inc
pop
mov
lahf
fmul
fs
push
cli
aaa
ret
mov
xor
ret
pop
xchg
in
cs
mov
lock
jmp
jmp
dec
inc
adc
pop
ficom
into
adc
jae
mov
jg
cld
mov
mov
stos
add
bound
imul
out
inc
out
jle
push
into
stc
test
cmps
cmps
add
je
ins
mov
out
jecxz
(bad)
ja
fsub
xchg
sbb
adc
or
lock
push
mov
jb
mov
lds
into
mov
xchg
push
test
add
sub
mov
sbb
or
mov
call
pop
lods
or
sub
in
push
sub
mov
shl
inc
xchg
test
cmp
xchg
leave
mov
jns
dec
xchg
(bad)
(bad)
push
jae
xor
push
dec
cmp
ds
iret
xor
fstp
data16
lock
inc
sbb
lods
sar
add
sahf
pusha
outs
repz
nop
mov
push
pop
test
mov
or
cmp
loop
jmp
sub
dec
out
xor
xchg
les
loop
test
mov
cmp
js
push
mov
enter
jl
push
mov
push
mov
pop
xchg
and
addr16
repz
cmp
inc
ror
add
mov
in
cs
mov
mov
adc
scas
pop
call
cli
call
loop
lods
inc
pop
shr
pop
add
mov
adc
cmp
ds
rol
repz
push
fdiv
retf
jns
popa
sbb
inc
das
xchg
sub
enter
fisub
mov
xor
adc
lock
inc
rcl
inc
mov
inc
jmp
mov
mov
pop
add
xor
out
dec
mov
(bad)
adc
jg
add
or
dec
xchg
outs
rol
pop
jg
pop
xchg
pushf
xchg
pop
jg
sub
out
push
xchg
in
cmps
repz
das
cmp
lods
mov
imul
adc
push
push
cdq
xor
imul
inc
outs
xchg
push
into
xor
test
iret
push
xlat
bound
mov
aad
mov
iret
shl
mov
or
pop
jbe
(bad)
(bad)
push
sar
push
in
test
aaa
not
call
adc
sub
sbb
xchg
push
repnz
(bad)
adc
pop
jg
rol
jmp
xchg
dec
outs
adc
leave
mov
pusha
adc
add
adc
shl
std
xchg
jbe
or
mov
sbb
dec
stos
and
cmp
mov
push
push
pop
dec
cmps
mov
in
mov
push
pop
push
adc
out
pop
dec
jae
je
(bad)
popf
fwait
xchg
enter
test
lods
xchg
fdivr
into
icebp
push
mov
movs
add
adc
stc
scas
call
(bad)
jmp
dec
dec
and
jg
cmps
mov
movs
jg
inc
jl
aaa
cwde
popf
(bad)
repz
ja
dec
pop
stos
inc
push
shl
test
cmp
push
fisub
ins
pop
cwde
dec
imul
mov
sub
jl
jge
stos
push
pushf
cmp
scas
xor
adc
mov
imul
aaa
pop
aas
aas
icebp
into
outs
shr
sub
inc
add
addr16
mov
add
dec
clc
add
adc
imul
int3
sbb
inc
ret
out
xchg
mov
push
scas
jne
or
push
cmps
stos
pop
test
jecxz
xor
pop
push
or
dec
fnstenv
push
sahf
mov
and
test
push
fimul
stc
inc
add
push
dec
add
jmp
fcom
leave
fcomp
pop
pop
in
mov
retf
add
ins
inc
sbb
or
pop
arpl
inc
dec
push
cmp
xchg
fsub
ror
rcl
push
mov
or
cmp
repz
mov
ret
sub
inc
xchg
or
mov
out
arpl
adc
push
and
and
cmp
hlt
and
mov
pop
sar
or
or
pop
adc
xor
or
or
clc
sbb
repnz
xchg
in
xchg
test
sub
add
(bad)
xchg
xchg
jb
xchg
fild
ret
push
les
mov
xor
lock
fbld
sahf
push
imul
jae
retf
punpckhwd
repz
popf
in
adc
sbb
sub
lea
inc
sbb
aas
mov
xchg
ficomp
sub
mov
jae
push
sub
xchg
xor
mov
fidivr
or
push
inc
test
pop
shl
dec
cmps
std
mov
pop
fst
adc
cmp
mov
xchg
call
sbb
cmps
xchg
out
hlt
xor
and
mov
dec
aam
daa
sub
cmp
dec
stc
sub
mov
test
inc
and
push
add
out
dec
loopne
fldenv
jnp
jnp
inc
rcr
bound
arpl
inc
mov
push
xor
jmp
sub
jmp
push
jmp
mov
jne
sub
dec
jmp
push
adc
icebp
xor
dec
and
outs
push
mov
mov
jnp
adc
pop
add
mov
dec
or
ret
dec
stos
mov
out
pop
imul
or
and
es
test
adc
int
neg
lds
sbb
aas
nop
gs
mov
mov
and
pop
pop
lea
cwde
shr
lahf
scas
in
dec
mov
xor
in
cmc
inc
xchg
xor
lock
rol
mov
inc
fist
clc
pop
imul
pop
sub
sub
cld
mov
xor
inc
fstp
or
cwde
inc
sbb
jle
(bad)
sbb
loop
lea
mov
xchg
push
(bad)
mov
stos
sub
cwde
or
sahf
repz
cmp
fwait
in
push
ds
shr
dec
into
or
sub
push
pop
cmp
(bad)
aad
shl
enter
cmp
nop
fcomp
pop
cli
ja
inc
mov
test
or
add
jg
and
(bad)
call
xchg
js
and
test
inc
add
inc
rcr
mov
je
push
dec
test
mov
imul
inc
push
xor
jb
push
ret
aas
jnp
adc
mov
mov
call
or
ins
push
pop
cmps
or
movs
push
gs
movs
sbb
(bad)
rcl
jmp
xor
sar
xchg
cmp
pushf
push
leave
adc
fimul
sub
inc
ret
out
dec
push
out
stos
and
xchg
dec
icebp
push
ins
push
xchg
add
stos
aas
mov
push
jmp
cmp
hlt
inc
retf
jae
mov
out
repz
jbe
loop
push
(bad)
(bad)
fst
jl
mov
ins
push
sti
cmps
fst
push
into
sub
cmp
xchg
pop
xor
xchg
in
jmp
inc
jge
adc
scas
jp
in
push
sub
mov
in
pushf
adc
jbe
or
ficom
jb
neg
adc
push
xchg
cmp
aad
mov
(bad)
mov
jecxz
lods
into
add
xchg
adc
add
add
jns
das
xor
push
out
ror
ret
dec
mov
or
push
add
ja
retf
xchg
mov
mov
shr
in
fs
inc
and
ror
xor
cmp
sub
mov
pop
(bad)
fstp
retf
mov
push
out
out
adc
fld
ss
cmp
sub
mov
xor
push
push
enter
aad
and
push
aad
pushf
shr
ins
or
ret
ja
leave
in
mov
mov
mov
cdq
jmp
xor
call
fwait
xor
sbb
arpl
in
jl
add
push
data16
or
mov
sar
daa
cdq
xor
add
mov
fild
xchg
bound
jmp
into
mov
sbb
xchg
shr
aas
and
inc
(bad)
inc
xchg
mov
mov
clc
lods
jmp
inc
mov
cmps
popf
call
cmp
lds
dec
fcom
stos
cld
xchg
mov
arpl
inc
mov
and
mov
int
mov
dec
mov
jnp
and
lock
jle
test
mov
cmp
shl
sub
(bad)
cld
fiadd
sbb
ins
stc
jb
jmp
test
mov
test
jecxz
in
or
jmp
ds
out
sbb
pop
jb
gs
gs
test
lock
mov
and
pop
and
xlat
pushf
sbb
movs
pop
push
jae
cli
cwde
mov
adc
add
jle
in
popf
push
call
xor
aad
inc
je
mov
xor
mov
jne
mov
mov
(bad)
xchg
or
inc
out
sar
mov
lea
adc
enter
push
mov
inc
pop
fdiv
inc
pop
lock
cmp
fwait
repnz
dec
cmc
push
xchg
int3
retf
xor
sbb
rcr
adc
pop
movs
pop
jb
sbb
jp
add
dec
bound
ss
add
adc
fdivr
cmps
jl
mov
(bad)
mov
push
and
test
xor
dec
cli
hlt
sub
sub
push
out
fyl2xp1
mov
aad
add
dec
rcr
xor
cmps
ds
push
jle
sub
cli
jmp
out
dec
rol
dec
(bad)
sbb
push
xcrypt-cbc
cmps
shr
pop
sbb
jae
jb
test
mov
div
pop
push
mov
add
retf
and
mov
test
(bad)
xchg
xchg
and
pop
repz
push
shl
adc
in
or
mov
jp
xchg
or
jnp
jb
in
aam
fstp
popf
pop
xor
sbb
not
ficomp
je
xchg
loope
jecxz
and
stc
xor
mov
sub
popa
push
push
sbb
gs
xor
cmp
ss
jmp
(bad)
inc
test
jmp
add
mov
into
pop
cmp
test
dec
fs
or
jns
ins
js
add
xchg
pop
cmp
sbb
push
pop
popa
xchg
imul
xchg
sub
fistp
mov
push
sub
xchg
pop
cmp
inc
(bad)
(bad)
xchg
push
ss
add
dec
sti
in
or
xor
cld
push
in
scas
in
xor
jnp
loope
jno
sub
bound
xchg
mov
mov
in
mov
rcl
and
leave
in
call
xchg
sar
pop
jl
pusha
jnp
adc
inc
add
or
in
popa
cmps
mov
or
ins
mov
sbb
mov
jbe
inc
xchg
js
shl
outs
xor
ja
cs
js
ja
push
pop
ror
xchg
js
add
in
ret
push
iret
pusha
xchg
inc
mov
xchg
pop
sub
out
cmp
rol
movs
aam
adc
jp
cli
sub
sbb
adc
push
lods
div
sbb
pop
add
pop
lods
cld
stos
pop
arpl
sahf
shl
mov
mov
aad
or
mov
movs
stc
movs
(bad)
and
jmp
sub
retf
popf
test
sbb
mov
stc
aas
cmp
mov
push
add
aad
adc
sub
sti
outs
(bad)
mov
int3
aas
pop
mov
leave
jmp
and
mov
arpl
sbb
and
and
movs
push
inc
cld
in
mov
fdivr
xor
lods
mov
mov
mov
push
cwde
shl
push
mov
cmp
pushf
shl
pop
inc
cwde
mov
std
jle
pop
(bad)
loop
dec
and
push
aam
sbb
ss
js
ret
rcl
inc
dec
push
das
repnz
xor
cmc
in
int
pop
inc
jae
test
idiv
add
cwde
xchg
mov
mov
and
sbb
xchg
cmp
ins
stos
mov
mul
add
aas
xchg
or
sti
pop
js
inc
or
jl
mov
es
sub
dec
mov
out
fcom
(bad)
adc
fisubr
ss
popf
lods
mov
mov
scas
mov
(bad)
sub
test
or
je
adc
inc
pop
xchg
mov
push
dec
js
jmp
and
dec
push
sub
sbb
pop
adc
ins
mov
mov
leave
jle
xchg
shr
(bad)
pop
in
jge
xchg
neg
lock
xor
xchg
fmul
sbb
in
iret
xor
(bad)
jl
and
cs
add
movs
mov
bound
out
push
dec
dec
xor
aas
adc
push
mov
daa
push
pop
int3
dec
stc
aam
inc
fbstp
(bad)
or
sbb
fsub
daa
sbb
pusha
xchg
inc
sub
cld
jmp
leave
pusha
or
test
add
js
shr
add
mov
and
popa
jmp
shl
cmp
dec
fsub
gs
dec
loopne
sahf
lods
sbb
out
movs
or
sub
xchg
xor
out
idiv
dec
pop
ins
repz
hlt
cli
aaa
out
mov
inc
shl
dec
push
lods
in
and
cmp
iret
jb
mov
jl
inc
inc
push
adc
mov
and
cmp
pushf
js
sub
pop
inc
ins
mov
fistp
idiv
inc
jle
imul
(bad)
add
add
push
mov
push
sub
mov
test
sub
xchg
xchg
pop
push
out
inc
mov
cli
pushf
sub
(bad)
into
pop
ja
xchg
(bad)
not
cmp
js
test
mov
inc
fstp
aam
jmp
icebp
lahf
and
out
pop
fld
clc
popa
or
pop
push
mov
(bad)
std
and
inc
popa
fnstenv
fnstcw
adc
push
and
stc
sub
inc
call
pop
(bad)
push
retf
cdq
pop
push
dec
adc
adc
sahf
mov
sub
add
data16
jnp
daa
mov
xchg
loop
cmp
push
int
sub
inc
xchg
sti
cdq
cmp
stos
xchg
jno
xor
enter
xchg
pop
std
ins
mov
clc
dec
pop
push
push
icebp
sbb
daa
in
and
and
mov
pop
int
or
and
ret
mov
stos
adc
adc
pop
(bad)
sbb
mov
int
jb
sbb
or
imul
pop
mov
sbb
test
sub
jg
js
mov
push
pop
dec
jmp
pop
shr
add
or
cmps
push
push
push
sar
ja
outs
movs
rol
xor
sbb
int
sbb
push
loope
enter
out
add
mov
mov
pop
mov
(bad)
push
dec
imul
dec
iret
sahf
hlt
aaa
adc
and
push
ret
retf
inc
lea
aad
cmp
in
popa
add
xor
cmp
out
dec
into
fstp
cmp
lahf
cld
in
movs
pop
mov
cmp
mov
jecxz
or
ret
adc
clc
arpl
add
(bad)
out
call
fs
jns
jmp
and
aaa
adc
or
jge
out
xlat
out
dec
mov
idiv
xchg
jmp
inc
and
jnp
ins
xchg
and
add
jge
mov
xor
jmp
push
add
cmc
sbb
mov
pusha
js
lods
rcl
addr16
push
mov
jae
push
das
sub
or
cs
inc
and
dec
xchg
jecxz
(bad)
jecxz
mov
pop
jb
adc
xor
mov
ds
iret
mov
aas
push
sub
cmp
push
adc
lods
or
clc
leave
jno
cmps
aaa
adc
dec
das
loope
ins
mov
int
aas
jnp
and
push
cmc
test
pop
(bad)
cmp
mov
fisttp
clc
xchg
repnz
push
int3
sbb
mov
xor
cmc
fstp
test
sub
pusha
cmp
lods
xchg
loopne
push
pushf
sub
ins
ficomp
add
mov
mov
jmp
mov
inc
ins
mov
jecxz
push
les
xor
loope
sbb
enter
outs
or
sbb
mov
pusha
retfw
aaa
cdq
ret
dec
cwde
in
fdiv
(bad)
jl
or
inc
(bad)
cli
daa
loop
mov
cli
jae
xor
push
ficomp
mov
test
popf
shr
fnstsw
jne
adc
test
lahf
pop
addr16
adc
rol
ja
adc
xor
jns
arpl
and
push
rcr
jb
fadd
inc
push
push
(bad)
hlt
mov
sub
data16
in
cmc
and
or
pushf
in
xor
sbb
and
shr
pop
sub
mov
movs
cld
loope
aad
sub
pusha
test
push
xchg
mov
inc
mov
es
add
pop
mov
fcomp
and
out
push
mov
cmps
rcl
cs
arpl
out
adc
push
mov
loop
scas
repz
cdq
xor
pusha
addr16
icebp
(bad)
hlt
or
jno
repz
lock
jmp
div
mov
(bad)
loopne
push
aaa
mov
inc
repnz
mov
popa
mov
mov
sbb
pop
inc
ja
mov
or
sbb
adc
cmp
or
mov
fsub
(bad)
shl
outs
ror
scas
xor
xor
out
inc
mov
inc
mov
fstp
(bad)
retf
adc
jg
or
retf
inc
pop
ss
(bad)
or
pop
imul
shr
bound
repnz
sub
pop
jmp
mov
sub
rcl
div
(bad)
fsubr
inc
cli
add
mov
pop
push
mov
lods
jo
mov
lock
xchg
dec
popa
jnp
(bad)
retf
inc
mov
ret
inc
ins
fwait
dec
(bad)
aam
pop
pop
push
jg
aas
push
cmc
push
out
mov
pushf
push
inc
sub
mov
xchg
jmp
inc
cmp
les
cld
cwde
jmp
sbb
clc
jbe
js
jno
xchg
sbb
loop
icebp
jge
adc
cmovae
(bad)
int
gs
gs
aas
hlt
sbb
test
add
adc
adc
cmp
pop
das
add
(bad)
jle
adc
add
cli
jle
cmp
out
cld
movs
ins
ret
jmp
mov
and
leave
cwde
cmp
call
popf
jb
jmp
out
inc
jae
push
mov
push
in
mov
std
push
jmp
pop
pushf
mov
daa
jg
push
cld
aam
add
mov
lods
xlat
xchg
jnp
mov
cli
sbb
push
cmp
cmp
or
cmp
xor
jecxz
push
xor
dec
test
mov
dec
or
data16
jnp
das
add
test
pusha
fcomp
inc
movs
loopne
scas
mov
mov
sbb
in
dec
test
add
dec
dec
mov
popa
ja
mov
bound
enter
cmp
pop
loopne
mov
int3
xor
sti
sahf
clc
xchg
movs
ror
test
scas
and
les
pop
or
test
sbb
ins
push
pop
inc
in
scas
or
dec
in
rol
(bad)
data16
push
xchg
mov
pop
loope
push
mov
xor
mov
mov
in
mov
cld
mov
xor
icebp
xchg
pop
xlat
and
fimul
mov
ror
inc
xchg
sub
icebp
retf
vaddsubpd
out
retf
stos
sti
xchg
fcomi
lea
pop
sub
mov
xor
mov
sub
fs
cs
aaa
ror
pusha
pop
jne
je
and
jne
xchg
add
mov
jg
push
add
mov
lods
in
in
add
iret
retf
add
ret
ud2
xchg
inc
mov
cmp
or
(bad)
(bad)
fsub
ins
mov
pop
in
mov
test
or
dec
mov
inc
xor
adc
jo
fisttp
sbb
pop
fmul
sbb
je
lds
ins
push
lods
mov
cdq
sti
bndldx
popa
cwde
jl
stos
mov
rcl
adc
fld
mov
pop
pop
cmp
xor
lods
dec
ja
lods
stos
ins
das
push
div
and
inc
dec
pop
mov
nop
leave
jl
jle
mov
mov
jne
jo
idiv
xchg
repz
push
icebp
push
push
daa
stos
xor
in
ret
sub
sub
push
std
mov
xor
icebp
add
mov
cmp
pop
push
out
jp
xchg
daa
push
mov
scas
lods
jns
(bad)
push
mov
mov
pop
xchg
(bad)
pop
dec
rcl
inc
into
in
ficomp
xchg
add
xor
sub
(bad)
test
and
jge
xor
or
or
adc
adc
pop
outs
adc
rol
jle
adc
mov
jnp
cmp
jno
mov
pushf
cld
ins
mov
call
and
jns
sbb
fsubr
pop
dec
jns
nop
das
sub
shr
mov
dec
sub
jnp
inc
movs
mov
test
jge
cmps
ror
js
in
adc
mov
and
xchg
adc
and
fist
push
mov
mov
xchg
adc
(bad)
jno
shr
jno
(bad)
sti
and
dec
pop
stos
leave
xchg
mov
int
mov
inc
add
xchg
fwait
in
popf
mov
fisubr
les
imul
lahf
loopne
inc
sbb
mov
fwait
into
mov
(bad)
pop
sar
cmp
shl
sub
xchg
cmp
clc
cdq
inc
test
cmp
and
and
je
int
push
mov
jo
add
mov
pop
xor
mov
pop
add
sbb
fadd
not
stc
fstp
daa
and
sbb
dec
jno
adc
xlat
xor
test
bnd
pop
mov
pop
xor
sub
stos
ret
pop
sub
xlat
in
dec
lock
inc
inc
mov
ins
pop
push
xchg
push
es
repnz
movs
xchg
dec
test
call
jno
add
popa
xor
(bad)
sub
xor
push
in
mov
addr16
xor
add
jne
icebp
mov
dec
fcmovnbe
movs
inc
sbb
sbb
xor
in
add
jmp
call
dec
stos
jge
sbb
jl
push
mov
idiv
pop
sub
icebp
(bad)
in
jmp
test
sub
jmp
xchg
(bad)
sti
mov
leave
enter
iret
xchg
mov
ja
sbb
lock
bound
fwait
or
scas
mov
dec
xor
pushf
mov
daa
nop
sbb
pop
jno
aas
sbb
ret
and
xor
aas
push
in
dec
(bad)
in
call
add
pop
jle
lock
int3
stos
cdq
mov
fwait
xchg
cmps
dec
jns
and
cli
enter
movups
mov
mul
rcl
mov
fldcw
mov
(bad)
jg
cdq
inc
and
call
jae
stos
aas
pusha
jne
test
sbb
sub
lock
inc
in
xchg
push
pop
push
mov
dec
je
enter
pop
in
(bad)
stc
in
dec
cmp
ret
dec
or
xchg
jo
das
iret
pusha
hlt
out
ds
mov
xor
xchg
jmp
adc
test
lea
pop
mov
popa
mov
iret
mov
fstp
stc
ins
outs
cmp
adc
movs
xlat
dec
(bad)
cmp
repnz
mov
jbe
add
sub
mov
cmps
fld
aad
fwait
ds
push
pop
sbb
pop
hlt
add
mov
pop
clc
(bad)
sar
xor
in
cmp
jge
ss
dec
mov
cli
cmp
shr
(bad)
jle
ins
ror
jno
or
mov
pop
dec
sbb
pop
xor
cmp
push
shr
mov
sbb
sti
mov
das
out
(bad)
test
arpl
sbb
adc
(bad)
repnz
mov
add
push
cs
out
fs
xchg
mov
xchg
(bad)
in
add
mov
jne
adc
fwait
movs
outs
sub
cwde
in
call
outs
mov
or
enter
(bad)
cmp
mov
push
push
jae
cmps
arpl
aas
popf
sbb
jno
lahf
mov
pop
xchg
or
push
test
cli
push
add
(bad)
jbe
inc
and
int3
mov
fcmovne
stc
pop
xor
rcr
ds
in
or
or
clc
cmc
jbe
jg
sub
push
pop
sbb
dec
pop
imul
frstor
mov
push
out
ror
sbb
pop
mov
jmp
adc
popf
cmp
inc
call
cmp
leave
sub
loope
jmp
add
inc
add
sbb
cmps
adc
jmp
jns
pop
mov
rol
rcr
fstp
xchg
test
sbb
js
out
xchg
inc
dec
dec
and
retf
and
cs
xchg
ror
ret
js
daa
pop
retf
mov
mov
mov
in
retf
and
icebp
imul
sti
sbb
imul
mov
fs
lahf
addr16
push
rcr
cmp
scas
mov
pmuludq
mul
cmp
(bad)
(bad)
fxch
xchg
cmp
sbb
in
or
and
mov
inc
in
arpl
pop
cmp
inc
pop
inc
inc
or
std
dec
or
mov
scas
aad
jo
and
mov
xor
mov
xor
test
je
mov
adc
pushf
jo
dec
pop
call
jmp
push
inc
mov
and
loop
push
jmp
(bad)
in
adc
jge
jg
add
(bad)
fmul
retf
lock
inc
and
movs
jae
mov
jl
inc
inc
fcom
xchg
rol
sbb
stos
bound
loop
mov
ins
inc
xor
data16
add
aaa
fbstp
popf
jnp
mov
jp
jae
dec
mov
xchg
int3
xor
adc
icebp
fimul
pushf
xor
movs
push
or
stc
nop
sbb
sti
lods
pusha
lods
jmp
xchg
outs
inc
add
xor
or
lea
push
aas
xchg
mov
cmps
and
mov
in
sbb
inc
xchg
test
sub
cmp
add
(bad)
adc
mov
mov
ja
mov
cmps
fld
cs
bound
aaa
inc
data16
jmp
inc
jg
inc
add
add
xchg
in
lock
retf
jg
xchg
mov
pop
retf
int3
add
mov
cdq
cld
outs
push
cmp
adc
or
mov
adc
(bad)
movs
jne
cwde
jmp
call
es
stos
xchg
pop
test
cld
das
test
sbb
mov
dec
pop
sbb
mov
fs
(bad)
test
lds
outs
or
imul
jnp
inc
inc
adc
frndint
std
call
sub
jl
std
mov
cwde
test
inc
and
imul
imul
jmp
xor
hlt
ret
bound
popf
cmp
and
imul
mov
jno
fsub
fstp
adc
or
cmp
dec
ja
arpl
aam
repz
push
mov
push
int3
psubsb
jmp
mov
jecxz
inc
inc
xchg
push
xchg
mov
retf
pop
lods
pop
dec
add
lock
dec
or
jns
jo
push
imul
fldenv
pop
or
les
test
int3
cld
call
sub
cli
rcl
loope
xchg
pop
lock
pop
xchg
mov
mov
cli
and
push
iret
push
add
icebp
pop
sbb
sahf
xchg
outs
lahf
sbb
retf
repz
stc
jmp
and
outs
mov
mov
lods
and
pop
div
mov
loopne
fldenv
outs
ja
aam
dec
xchg
inc
dec
sbb
dec
cli
add
dec
(bad)
popf
repz
or
mov
cmc
test
(bad)
repnz
xor
push
test
ror
mov
pop
fild
loopne
fist
jns
lds
rcr
mov
mov
or
sbb
sub
mov
cmc
out
mov
sub
in
sti
pop
pop
mov
hlt
and
daa
fnsave
and
rcr
sti
and
push
les
(bad)
push
sub
fs
xchg
aas
and
popf
ins
jmp
outs
jge
popa
sar
dec
shl
aaa
push
inc
out
call
mov
jecxz
jg
aam
pop
xchg
push
retf
rcl
addr16
add
mov
and
iret
daa
adc
sbb
push
dec
mov
mov
xchg
push
sti
inc
inc
mov
sbb
mov
mov
sbb
inc
scas
inc
mov
push
push
(bad)
or
out
pop
adc
and
das
pop
loope
ds
ss
stos
inc
jnp
int
ja
pop
div
pop
jns
cli
adc
lea
xchg
test
in
push
mov
in
xor
mov
jo
dec
push
mov
jecxz
popf
and
stos
cmp
add
pop
add
mov
adc
mov
test
lods
out
in
lds
adc
in
mov
xchg
add
or
outs
fild
jmp
xchg
(bad)
or
adc
mov
mov
loopne
mov
popa
sbb
inc
iret
pop
lods
ins
fbld
or
out
test
add
out
pusha
ss
repnz
and
sbb
sahf
push
popa
jp
aas
push
lods
nop
fcomp
mov
and
inc
dec
jmp
push
adc
int3
lods
jmp
cmp
fsub
and
dec
fnsave
xchg
fcmovnbe
xor
lods
aaa
mov
lods
movaps
and
xchg
dec
inc
sub
lods
add
pop
ins
ins
cmp
push
aad
int
pop
outs
pop
sub
outs
test
out
mov
jbe
inc
inc
mov
cmps
cmp
add
and
gs
pop
aam
inc
xor
jne
adc
cmp
lods
xchg
pop
shl
dec
pop
cmc
dec
sbb
movs
and
push
mov
sub
outs
fcom
xchg
div
inc
aad
jg
nop
inc
out
mov
(bad)
sbb
fs
mov
mov
scas
jg
sar
cmp
lods
jle
test
loopne
int
sbb
xor
addr16
es
out
pop
inc
jge
aad
retf
inc
cld
cmc
add
cmp
mov
push
addr16
je
and
leave
aas
shl
push
pusha
loop
iret
sbb
in
fiadd
daa
lahf
aam
dec
add
shl
je
(bad)
das
push
call
das
lea
push
jmp
cli
stos
int3
hlt
aas
dec
cli
mov
into
cmc
pop
pop
xchg
or
jnp
jo
cmp
push
sub
xor
pop
loope
mov
sti
ins
mov
cmps
jle
retf
divps
ds
mov
mov
pop
call
cld
sar
mov
jbe
and
adc
iret
or
push
push
xchg
test
jb
out
ins
mov
sbb
es
xor
js
sbb
iret
pop
hlt
adc
sub
aam
or
mov
jmp
jo
ret
lahf
imul
div
shr
cmp
nop
sar
pushf
add
push
push
sti
cs
sbb
(bad)
and
shl
push
jg
jmp
inc
jb
aad
adc
add
pop
or
add
les
sub
mov
push
loopne
adc
fmulp
scas
sbb
pop
mov
cmp
aad
out
and
sbb
ss
add
(bad)
mov
xchg
mov
mov
xor
jne
jae
iret
mov
sbb
add
(bad)
loop
push
das
cdq
adc
(bad)
in
or
mov
push
inc
mov
(bad)
or
mov
fisttp
rcl
add
add
in
add
push
push
jo
movs
jmp
pcmpeqb
push
push
dec
jmp
(bad)
adc
leave
pop
push
add
xor
stos
jo
cs
bnd
sub
repz
xor
(bad)
jmp
mov
rcl
shl
pop
fldcw
imul
pop
test
jecxz
hlt
lds
sub
iret
jg
retf
sub
neg
or
fadd
std
cwde
(bad)
dec
mov
jbe
mov
sub
sbb
mov
nop
outs
(bad)
xchg
cwde
push
push
and
outs
popa
and
aaa
pop
(bad)
xchg
cmp
ficomp
and
mov
sub
and
das
adc
adc
test
lds
aaa
jae
nop
loopne
bound
push
push
es
out
cmp
dec
or
adc
cli
jecxz
xchg
adc
stos
retf
es
xor
sub
inc
cmp
retf
mov
out
push
pop
mov
mov
xchg
sbb
cli
and
sub
int3
clc
xor
sbb
xchg
mov
scas
jl
ret
push
retf
sbb
stc
aad
dec
(bad)
mov
retf
mov
out
outs
repz
or
mov
and
shr
pop
mov
jl
cs
sbb
sti
and
ins
mov
push
inc
mov
in
into
dec
jo
idiv
stos
mov
mov
enter
sub
jg
cmps
(bad)
cmp
setp
dec
mov
push
lea
fimul
or
and
adc
call
data16
popa
es
outs
add
dec
inc
jg
test
xchg
into
dec
inc
mov
popf
ror
pop
push
mov
arpl
jmp
jp
mov
fcmovbe
leave
xchg
ficomp
es
scas
or
icebp
inc
dec
cwde
adc
push
or
inc
pop
cmp
mov
fldenv
pop
outs
stos
fadd
inc
mul
(bad)
icebp
xor
mov
sub
dec
rcr
mov
and
xor
cs
cmps
sbb
movs
mov
cwde
xchg
xor
test
enter
cmp
(bad)
sahf
mov
mov
outs
adc
aaa
popf
ret
push
pop
ins
clc
ins
pushf
sbb
mov
(bad)
in
rol
pop
xchg
call
mov
mov
test
movs
jp
fmul
je
sbb
cmps
shr
ja
dec
sub
into
es
repz
shl
in
inc
out
jle
ficom
jae
stos
and
ss
push
(bad)
ins
gs
jge
cdq
and
or
mov
nop
mov
sbb
and
inc
and
sti
hlt
loop
mov
loopne
or
aaa
aas
inc
and
sub
pop
sbb
dec
lock
lods
jne
mov
test
retf
adc
xor
jmp
jne
xchg
(bad)
out
xlat
fbld
sub
push
imul
inc
inc
jne
out
xor
outs
push
stos
or
xor
sub
cmps
jno
adc
xchg
adc
(bad)
pop
daa
cmp
pushf
gs
shr
mov
cmps
or
movs
mov
jno
test
sub
or
ret
repnz
add
out
test
pop
mov
pop
jae
or
and
mov
ret
movs
mov
add
xchg
push
mov
pop
push
sub
div
mov
push
sbb
and
dec
mov
mov
jge
test
loop
or
mov
push
mov
xchg
test
cmps
inc
sti
enter
xor
retf
pop
fwait
mov
xchg
and
fnstenv
hlt
int3
pop
fst
call
and
pop
lods
mov
mov
jbe
jbe
mov
adc
retf
scas
xchg
ficom
jno
cwde
xchg
sub
aas
mov
fld
sbb
lea
out
daa
fdiv
mov
aam
in
jo
sub
les
sbb
inc
out
jb
jecxz
sbb
or
lock
sub
jl
stc
in
push
aas
je
mov
mov
lods
mov
add
jnp
repnz
mov
or
jns
rcr
mov
adc
stc
and
dec
and
daa
pop
or
popf
arpl
adc
fimul
adc
sar
(bad)
xchg
sub
fadd
or
loopne
ins
mov
cmp
sub
jl
(bad)
push
out
fcmove
fnstcw
jmp
scas
xor
loopne
jne
jecxz
bound
shl
shr
cli
pop
sub
mov
lods
int
es
aad
or
dec
lods
adc
or
jo
push
xor
(bad)
sub
loope
jp
cs
movs
xor
jmp
iret
xor
call
cs
inc
shl
mov
dec
addr16
loope
or
jo
mov
or
mov
push
test
xchg
popa
(bad)
ds
adc
cld
test
ficom
(bad)
adc
stos
dec
xor
mov
pop
cmp
ja
mov
loopne
mov
add
dec
leave
(bad)
xchg
jnp
pop
cmp
mov
call
jecxz
pop
aam
sti
(bad)
sbb
cmps
xchg
mov
xchg
cwde
je
mov
sar
mov
shl
mov
aas
cmp
aad
pusha
dec
jecxz
retf
push
repnz
call
mov
pop
mov
ins
ret
pop
test
shr
or
mov
aas
in
or
sbb
daa
jb
push
inc
add
enter
nop
in
(bad)
pop
mov
inc
inc
adc
fidivr
pop
jmp
adc
lahf
jno
mov
jne
jno
mov
in
xchg
daa
imul
pop
imul
pop
jne
popa
fs
and
mov
mov
fisttp
mov
sbb
pop
je
sbb
adc
pop
pop
jg
out
loope
ins
movs
dec
and
clc
mov
inc
in
inc
arpl
pop
or
popf
fstp
cmp
push
sub
(bad)
call
mov
fst
or
cmp
and
mov
mov
dec
mov
inc
mov
push
aam
xchg
cmp
ror
out
mov
ret
cmps
add
cmp
sub
scas
leave
xchg
ret
mov
adc
cli
mov
mov
inc
mov
call
mov
mov
popf
lock
push
int
and
cmp
adc
dec
cmp
and
dec
in
inc
repz
jo
imul
dec
out
dec
jno
dec
fwait
aas
mov
mov
sbb
test
adc
pop
add
out
clc
fmul
outs
imul
xor
adc
cmp
dec
dec
fisttp
dec
pop
add
out
push
retf
add
and
loopne
cmps
popa
xor
pusha
repz
or
jge
dec
dec
in
int
push
es
cmp
adc
sub
xchg
push
and
push
cmp
nop
call
push
fldcw
aaa
in
xor
push
cmp
cmp
pop
mov
dec
cdq
and
xchg
and
jecxz
cmp
sbb
xchg
mov
sbb
in
and
push
xchg
xor
dec
xlat
or
cwde
repz
mov
mov
movs
ds
fidiv
outs
ret
xor
popf
push
ss
mov
or
add
fs
mov
mov
add
pop
ja
and
cwde
call
hlt
or
mov
or
pop
fcmovnbe
xor
jecxz
jp
and
les
jnp
in
jnp
mov
inc
(bad)
fmul
test
aas
push
dec
popa
pop
add
inc
fwait
(bad)
xchg
pop
cs
dec
arpl
sbb
addr16
pushf
fistp
mov
das
sbb
stos
push
lods
ror
icebp
sub
mov
mov
push
push
push
leave
jecxz
sub
xchg
test
pop
mov
(bad)
or
(bad)
out
sub
add
hlt
sub
xchg
dec
jge
and
sbb
jp
or
xchg
ret
xor
and
lods
jmp
aam
lods
push
test
jns
or
jp
daa
inc
lods
jbe
mov
(bad)
mov
fdiv
fnstcw
dec
inc
xchg
cmps
mov
(bad)
icebp
sub
imul
jle
add
push
imul
(bad)
outs
dec
loopne
rcr
pop
lahf
aad
das
leave
jmp
push
mov
daa
retf
push
addr16
add
into
enter
adc
mov
clc
enter
pop
inc
mov
mov
rol
cmp
fst
xchg
repnz
test
cmp
dec
fdivr
jge
fdivr
pop
push
xchg
mov
fidivr
shr
cdq
mov
clc
(bad)
jle
rcr
scas
adc
xchg
mov
imul
clc
shl
cmps
fidiv
dec
mov
dec
cs
int
mov
push
inc
(bad)
jbe
cmp
inc
fs
lahf
pop
test
imul
ret
test
fadd
shl
jo
mov
sub
pop
push
xor
cli
mov
inc
add
add
mov
xchg
inc
out
imul
pop
mov
jle
aad
fcmovne
push
sbb
sbb
push
or
sbb
pop
xor
scas
xchg
adc
outs
rcr
je
push
scas
fiadd
or
mov
into
sub
ins
or
int
retf
or
xlat
xchg
in
jns
push
mov
add
pop
jne
or
sti
fcom
rcl
arpl
mov
push
enter
xchg
popa
push
(bad)
sub
pop
jp
fnstsw
in
mov
in
pusha
pop
(bad)
mov
adc
fisttp
lahf
sbb
(bad)
mov
out
in
sub
not
lods
jne
add
in
xor
fs
jae
stos
aad
push
push
sbb
into
add
sbb
mov
arpl
ja
daa
shr
rcl
loopne
imul
test
(bad)
movs
mov
mov
fcom
mov
mov
test
pop
(bad)
mov
push
mov
mov
push
test
dec
xchg
je
and
cmp
pop
std
fbstp
push
hlt
shl
popf
stc
mov
lods
cmp
cmc
mov
push
dec
xor
outs
inc
sub
pusha
sbb
ret
pushf
push
adc
pop
ret
aas
js
pop
mov
popa
lahf
and
call
sar
xchg
outs
mov
sti
shl
(bad)
mov
mov
stos
jnp
stc
sub
mov
adc
fcomp
dec
stc
fdivp
daa
outs
xchg
or
ins
(bad)
pushf
or
sub
xchg
jp
pop
mov
cli
int
jno
inc
sbb
add
test
sbb
sbb
in
iret
xchg
mov
mov
outs
adc
mov
jns
ins
push
or
or
xchg
ins
pop
mov
or
in
xor
dec
xchg
sub
dec
repz
push
inc
add
mov
stc
scas
stc
ret
loope
cmc
das
and
cmps
push
or
pop
xor
adc
out
push
dec
inc
das
gs
hlt
mov
or
(bad)
icebp
cli
(bad)
out
adc
push
push
push
int
sub
clc
push
mov
jnp
dec
add
dec
add
pop
push
push
mov
and
inc
addr16
mov
enter
ja
cmp
mov
js
lods
repnz
not
or
cmp
xor
ss
dec
dec
call
push
pop
mov
sub
fcomp
push
(bad)
loope
in
movs
sbb
mov
(bad)
ins
adc
outs
and
pmaxub
ins
add
fisubr
cld
push
test
adc
movs
sbb
mov
cmc
jg
add
(bad)
sti
inc
pushf
and
call
xchg
xchg
fsubr
inc
jb
bound
(bad)
retf
sbb
pop
jae
sahf
xor
pop
jp
mov
mov
or
loope
sub
inc
(bad)
dec
fisubr
push
push
push
std
popa
jo
test
es
add
ret
mov
repz
lods
sub
adc
jmp
test
movs
imul
imul
out
push
pop
sub
aas
fs
outs
xor
jno
enter
dec
xchg
dec
sub
cmp
nop
mov
(bad)
stc
jp
fist
scas
mov
cmp
inc
mov
std
in
push
push
ds
sti
sbb
std
mov
ja
cmc
jbe
add
mov
pop
adc
pop
jo
pop
arpl
out
jbe
xchg
or
jnp
stos
rol
out
mov
mov
sar
push
push
dec
or
push
mov
cmps
sti
jecxz
movs
cmps
rcr
outs
adc
ins
or
sub
in
das
xchg
dec
and
lock
xchg
xor
push
fs
pop
jo
addr16
retf
or
or
gs
cld
int
xor
adc
in
movs
test
push
sbb
cli
(bad)
pop
pop
pushf
std
ret
ins
fbld
pop
enter
dec
arpl
ret
jb
aam
jp
add
pop
sbb
popa
lods
dec
mov
loopne
jae
rol
xchg
mov
cmp
loopne
xchg
in
sbb
cmp
popa
repz
pushf
es
jmp
pop
dec
mov
xchg
test
xchg
repnz
int3
or
movs
movs
or
xchg
shr
push
sbb
cmp
add
push
mov
dec
cwde
or
and
ja
in
imul
mov
sub
retf
add
push
fadd
mov
fld
jb
inc
push
mov
mov
into
add
out
fdiv
mov
ja
rcr
dec
sbb
scas
cs
imul
xchg
sub
test
adc
mov
sub
pop
scas
movs
cmp
jns
push
push
scas
div
pusha
mov
pop
imul
xor
div
mov
push
jp
cmps
pop
inc
std
rol
into
mov
cmc
cmc
dec
jne
mov
adc
mov
sbb
loope
(bad)
leave
jmp
movs
ins
lahf
push
adc
inc
pop
add
data16
push
dec
jno
sar
adc
add
mov
mov
fcmove
(bad)
mov
pop
mov
sub
adc
mov
inc
enter
mov
stos
xlat
dec
(bad)
sbb
pop
ins
imul
xchg
lds
jecxz
inc
push
adc
test
sub
push
sub
push
int
retf
std
div
retf
sub
mov
jne
jmp
in
addr16
push
pop
mov
fld
(bad)
sub
mov
jle
cmp
xor
or
cmp
retw
(bad)
cli
pop
ss
cmc
cld
imul
addr16
rcr
or
ror
retf
push
shr
call
add
mov
jge
(bad)
inc
mov
call
adc
arpl
(bad)
mov
mov
jg
je
or
es
stc
pop
jg
push
sti
bound
ret
enter
in
enter
jle
mov
push
cwde
aam
movs
jmp
fbld
mov
retf
int
lods
(bad)
hlt
xor
data16
stc
sti
inc
pop
mov
stos
add
jne
cld
ret
push
add
add
rol
or
jecxz
dec
sahf
mov
push
idiv
cmps
xchg
add
pop
bound
retf
cmps
sbb
cli
xchg
mov
int3
add
mov
adc
bnd
fdivr
and
sar
adc
pop
in
jne
pop
into
mov
adc
stos
adc
xchg
cs
and
adc
and
out
mov
or
cli
call
pop
out
inc
pop
adc
sbb
dec
shl
push
xchg
push
sbb
pop
xor
popa
sub
cmp
enter
cmps
pusha
mov
mov
xchg
mov
sbb
sbb
pop
add
(bad)
or
cmp
(bad)
and
xor
cmp
sub
pop
push
jno
aas
add
mov
adc
loop
out
mov
sub
outs
loopne
les
xlat
movs
add
jae
rol
ret
gs
loope
pop
and
gs
add
rol
idiv
cmps
mov
add
int3
ins
xchg
push
mov
ins
outs
sar
pop
lea
jp
stos
cmps
shr
xor
cmp
pop
retf
mov
pop
adc
push
aad
les
dec
sbb
fwait
into
jno
xor
add
adc
dec
and
mov
push
xchg
lock
cmp
adc
in
push
fstp
daa
inc
pop
jbe
out
sub
dec
aam
jl
fld
lods
jg
lods
adc
iret
xchg
pop
or
out
icebp
mov
iret
dec
sub
cmp
xchg
xor
inc
inc
std
movs
xor
sbb
nop
in
or
push
jbe
cld
(bad)
xor
cmps
ret
mov
push
std
fxch
jbe
repz
pop
push
(bad)
jmp
popa
or
mov
xchg
dec
retf
mov
mov
repz
cmp
ficomp
les
(bad)
sub
adc
pop
and
jne
sbb
mov
shl
inc
mov
pop
test
mov
call
push
xor
pop
cld
(bad)
push
cmp
js
xor
cmps
mov
mov
data16
dec
pop
xor
ja
push
call
sbb
sbb
add
pop
pop
inc
ret
ror
fwait
add
or
shl
mov
imul
addr16
push
mov
fadd
xor
retf
mov
xchg
lds
ins
or
dec
jnp
jb
loop
xchg
clc
cmp
ss
int3
repnz
adc
mov
(bad)
pushf
xchg
inc
(bad)
cmp
mov
add
cmps
push
xchg
(bad)
rol
call
add
aad
xchg
pusha
push
stos
jb
pop
(bad)
mov
push
mov
inc
loopne
jle
inc
and
xchg
popaw
ror
push
rcr
outs
mov
sbb
or
ins
int3
mov
xor
and
xchg
test
cmp
aad
dec
mov
xchg
push
leave
mov
fmul
daa
inc
pop
jge
int
in
or
(bad)
xor
cmps
dec
rcr
das
in
inc
inc
int3
mov
sub
pop
xor
arpl
outs
into
xchg
jb
sbb
mov
xlat
(bad)
mov
jecxz
out
retf
mov
xchg
mov
aaa
cs
sbb
mov
int3
pop
stos
jp
adc
loop
jae
sbb
jae
dec
jno
pop
dec
jp
or
retf
lds
outs
inc
push
(bad)
mov
scas
mov
and
lea
rcl
xor
ret
stos
scas
ds
add
xor
shl
mov
vrcp14ss
jle
(bad)
xchg
loope
cmp
aam
and
push
or
mov
push
jg
push
(bad)
adc
popf
cld
inc
mov
dec
into
inc
xchg
mov
sbb
popa
pop
dec
xor
hlt
mov
stos
jbe
test
xor
or
test
dec
sahf
lahf
mov
out
lods
(bad)
fild
enter
pop
cld
push
stos
fs
(bad)
int
shl
lea
or
sub
inc
inc
sbb
and
rep
push
aam
mov
data16
sub
xchg
xchg
daa
pop
pop
aad
xchg
cli
jnp
pushf
mov
dec
rol
xchg
movs
fisubr
add
jno
or
rol
pop
(bad)
addr16
pop
mov
and
dec
jmp
sub
stc
mov
adc
mov
cmps
outs
loopne
pop
(bad)
or
ret
repnz
(bad)
jo
iret
sub
mov
aam
inc
cmp
(bad)
shr
dec
jae
scas
cmps
mov
sbb
push
jle
hlt
dec
out
loope
sub
sbb
inc
mov
jecxz
jb
push
gs
xchg
push
dec
loopne
inc
ja
int
aas
jmp
mov
fistp
inc
imul
mov
push
mov
in
js
push
rcl
jbe
ror
pop
push
addr16
adc
add
xor
dec
aaa
ins
push
mov
jmp
cdq
outs
and
jge
sub
push
(bad)
arpl
adc
test
loopne
xchg
call
dec
inc
dec
sbb
add
call
mov
push
outs
jae
movs
into
jno
scas
scas
movs
mov
in
mov
fdivr
xchg
outs
jmp
pop
and
add
loop
adc
mov
xor
lock
and
and
gs
pop
xchg
daa
movs
xor
pop
std
xor
xchg
test
dec
and
sub
jge
xchg
or
cmps
shl
xchg
sbb
mov
out
int3
retf
sahf
push
inc
sbb
ficom
mov
and
leave
push
mov
hlt
popf
pop
(bad)
dec
addr16
pop
xchg
mov
xor
fs
aas
mov
dec
out
shr
cmp
movs
cli
cmp
outs
xchg
adc
stos
icebp
cmc
and
hlt
test
push
ja
call
in
or
jae
mov
call
mov
dec
mov
jne
and
mov
sub
jnp
push
enter
js
aam
inc
push
outs
jae
into
cmps
sar
xor
sbb
addr16
dec
mov
shl
inc
fstp
sbb
enter
sti
mov
iret
and
xlat
ins
sub
or
stos
jbe
mov
mov
mov
cld
into
lea
cwde
push
mov
xor
cli
cmp
push
or
push
inc
adc
mov
aam
add
mov
sbb
rcr
(bad)
dec
cmc
into
shr
in
xchg
ins
(bad)
jmp
inc
jmp
hlt
push
ins
shrd
jl
icebp
mov
pusha
inc
rdpmc
pusha
movs
mov
sub
test
cdq
sub
(bad)
shr
inc
jns
pop
mov
xchg
dec
(bad)
mov
fsubr
aam
imul
sub
jmp
jmp
movs
neg
fsubr
fwait
cmps
mov
push
xchg
adc
fcomp
iret
and
dec
rcr
xchg
jecxz
dec
aas
pop
push
and
shl
add
mov
mul
dec
arpl
pop
sub
xchg
or
cmp
test
mov
movs
daa
adc
and
ja
pop
add
pop
call
out
push
xchg
repnz
je
sub
dec
out
leave
test
aaa
cmp
pop
dec
lds
jne
xor
aad
test
nop
icebp
jl
inc
or
ret
mov
mov
loop
sbb
dec
add
add
or
cli
lahf
pop
enter
push
and
bound
cmp
sub
sar
sbb
stos
jns
pushf
mov
adc
jo
add
(bad)
mov
mov
xchg
dec
and
addr16
pusha
xor
inc
lahf
lods
mov
xchg
mov
lods
cwde
xor
repnz
add
out
dec
int
push
ss
lds
jns
loopne
(bad)
xor
jge
mov
mov
jb
dec
pusha
xchg
mov
xor
enter
push
jl
not
inc
pop
and
jo
adc
popa
addr16
mov
mov
dec
inc
pop
cmps
sbb
add
ret
pop
jle
ss
enter
imul
mov
fstp
cmp
inc
sbb
enter
jbe
xchg
out
shl
arpl
fstp
adc
push
std
sub
and
dec
inc
and
dec
pminsw
in
imul
jmp
jne
call
jns
jo
mov
and
add
rol
inc
sbb
imul
jl
inc
mov
mov
cmp
dec
lahf
inc
pop
push
sti
dec
xchg
inc
jmp
sbb
sahf
inc
mov
mov
ins
inc
(bad)
mov
out
mov
mov
or
xor
add
mov
and
inc
mov
cwde
sbb
(bad)
imul
loopne
mov
adc
or
jnp
int
call
add
iret
push
or
retf
inc
jp
loopne
fimul
imul
cmc
ret
int
dec
shl
push
aad
shl
sbb
sahf
xlat
cdq
dec
xchg
test
les
sbb
xchg
stc
aas
sbb
push
mov
inc
shr
iret
ja
mov
pop
retf
fist
data16
xchg
fcmovbe
lods
cmp
adc
das
adc
les
repz
movs
adc
pusha
push
lods
jge
push
leave
and
dec
out
ds
cmp
nop
add
sub
arpl
jecxz
imul
fisub
cmove
push
inc
test
jmp
push
xchg
pushf
call
xchg
mov
sub
add
(bad)
test
out
mov
sahf
es
(bad)
xchg
test
add
or
xchg
ret
test
xchg
and
cld
mov
pop
rcr
cmp
imul
ret
aas
sbb
out
movs
jns
out
push
mov
(bad)
pop
ins
loope
dec
mov
inc
and
aam
sbb
add
cwde
in
(bad)
ins
add
jmp
movs
inc
push
cmp
mov
pop
rcr
test
xor
aaa
push
mov
call
leave
test
jno
cmp
fwait
clc
mov
xor
pop
into
stc
in
in
enter
inc
stc
sbb
mov
ja
mov
xor
test
mov
lods
and
add
cmp
add
test
mov
push
mov
int3
out
xchg
out
fdivr
mov
cs
pusha
mov
xor
in
pmulhrw
fsubp
in
shr
pop
cmc
push
or
mov
test
mov
jo
mul
in
mov
ins
mov
jbe
popf
sbb
(bad)
out
cmp
mov
shl
xchg
daa
mov
dec
xchg
mov
fdiv
add
(bad)
jecxz
idiv
jmp
jp
loopne
test
fmul
and
dec
xchg
lock
xor
push
jmp
test
imul
inc
inc
mov
mov
xchg
push
sahf
fsub
int
xor
mov
les
daa
dec
cmps
jae
out
mov
sub
inc
loope
push
mov
push
cmp
cmp
icebp
inc
add
lods
aaa
sub
ss
out
pop
and
xchg
push
mov
and
xchg
or
sub
dec
mov
add
sbb
xchg
mov
push
imul
push
jp
lods
stos
stos
dec
mov
test
or
mov
call
ss
lock
push
xor
dec
iret
inc
mov
pop
je
cli
test
repz
inc
and
push
pop
dec
push
fcomp
icebp
je
mov
std
jns
iret
ror
imul
sub
sbb
and
repz
lock
pushf
add
stos
retf
push
or
dec
popf
mov
movs
mov
push
nop
rcr
xchg
dec
dec
mov
xor
mov
adc
cmp
or
daa
jnp
fadd
mov
repnz
movs
hlt
test
out
scas
or
pushf
push
je
movs
adc
cmps
in
inc
stos
sub
dec
cli
xlat
in
iret
xchg
fist
fstp
push
push
or
jle
hlt
pop
jb
adc
xchg
sbb
in
push
push
sti
xor
or
test
inc
mov
repz
pop
xchg
ins
jmp
ds
imul
inc
mov
inc
adc
sub
add
mov
add
mov
fnstcw
sbb
sub
div
jl
dec
loope
mov
ins
popa
mov
adc
mov
dec
fisub
in
call
inc
add
and
and
mov
int3
jg
icebp
push
fimul
test
sbb
ret
mov
pop
xor
cmp
int3
and
inc
adc
bnd
shl
cmp
aas
xchg
adc
addr16
jp
mov
pusha
mov
in
icebp
scas
push
inc
push
aas
mov
lock
out
jno
and
push
push
dec
cmp
clc
sbb
nop
dec
pop
test
add
jo
leave
aaa
ret
mov
mov
jnp
xchg
fcomi
cmp
daa
inc
call
inc
jae
dec
lahf
adc
es
fwait
popa
pop
push
inc
hlt
sub
mov
bswap
cmps
fdivp
pop
xor
into
push
xchg
sbb
inc
(bad)
cdq
or
or
(bad)
in
lahf
popa
idiv
sbb
stos
dec
cmp
push
bound
xchg
xchg
call
neg
shr
mov
mov
pop
mov
and
jns
std
push
movs
mov
(bad)
cwde
stos
lahf
fldcw
lea
loopne
fst
(bad)
sub
into
repnz
push
cmc
test
imul
enter
in
(bad)
sbb
xor
mov
pop
pop
push
push
idiv
rcr
sbb
xor
scas
mov
imul
scas
mov
dec
and
pop
test
pop
add
cmp
jmp
and
imul
jmp
mov
call
adc
add
jg
inc
cmp
scas
sbb
aad
pushf
arpl
clc
repz
adc
loopne
cs
popa
inc
mov
add
(bad)
jg
ins
cmps
mov
cmc
mov
ret
xor
adc
jno
dec
imul
(bad)
cmp
mov
push
mov
imul
dec
cmc
ins
ret
mov
push
pop
repz
lods
and
mov
sub
adc
jl
loope
(bad)
jmp
bts
xor
into
fwait
mov
jp
mov
push
pushw
and
shl
test
(bad)
movs
sub
pop
push
sbb
addr16
dec
imul
sub
shl
push
fsubr
jnp
xor
or
out
jnp
xchg
pop
aas
xchg
inc
push
or
xchg
xchg
cmp
aad
imul
pushf
(bad)
or
adc
pop
punpckldq
push
out
fbstp
loopne
ins
out
test
je
xchg
sahf
cld
xchg
or
push
add
andps
in
dec
ret
pop
aaa
pop
(bad)
mov
xor
loop
inc
cld
fs
dec
inc
mov
and
mov
cs
arpl
div
mov
enter
aas
mov
dec
and
mov
sbb
ret
in
mov
cs
adc
pusha
pop
fimul
or
loope
sbb
retf
lods
or
lods
inc
add
mov
cmovno
xor
xchg
push
cmp
ret
mov
test
mov
imul
int3
mov
or
pop
add
add
popa
adc
cld
cs
jae
faddp
cmp
add
aas
add
cs
mov
out
jle
add
mov
cmp
fs
in
inc
or
ja
rol
mov
pop
outs
test
js
mov
add
test
aas
cmp
xor
clc
cmp
retf
mov
fisub
popa
cmp
loopne
jnp
pop
ins
jbe
sahf
ins
inc
and
push
pusha
aam
adc
sub
call
stos
xchg
xor
lea
pop
sbb
and
retf
fadd
repnz
frstor
outs
add
mov
jns
push
cwde
test
mov
mov
mov
or
test
daa
aam
scas
xor
retf
cmp
retf
sub
mov
pop
cmp
mov
ds
dec
sahf
mov
lock
ds
push
inc
mov
aaa
push
shr
or
or
lods
pop
inc
retf
cmp
fcomp
adc
push
ja
adc
sub
fsub
stc
outs
mov
push
dec
mov
pop
pop
int
inc
aas
fisub
xchg
adc
fdiv
xrelease
je
cmps
dec
jno
movs
test
dec
(bad)
mov
mov
jns
mov
xchg
dec
sbb
repz
and
cwde
mov
jno
les
cmc
push
sbb
ins
imul
cmp
add
cmp
cli
push
clc
daa
ins
mov
push
and
retf
test
xchg
or
push
jge
adc
push
mov
xchg
inc
xchg
enter
sub
fwait
shl
outs
push
and
popf
fwait
dec
xchg
mov
add
iret
cwde
pop
popa
or
xchg
leave
add
cwde
icebp
cmp
dec
pushf
inc
jle
dec
mov
pop
cs
add
aam
loop
mov
xchg
shl
inc
movs
pusha
add
call
mov
xor
pop
into
jle
(bad)
iret
adc
iret
ficom
add
call
(bad)
fistp
aas
mov
jo
mov
adc
push
pop
ficom
or
push
xor
mov
call
sbb
xchg
mov
xchg
jns
sbb
retf
mov
inc
icebp
cmps
pushf
push
sub
hlt
pop
dec
nop
sbb
mov
adc
repnz
cmp
icebp
sbb
inc
inc
fsub
out
arpl
or
and
rol
sar
repnz
pop
arpl
push
out
nop
xchg
(bad)
or
inc
add
or
jns
adc
mov
rcr
cmp
push
(bad)
pop
(bad)
mov
idiv
inc
pusha
jle
out
jmp
mov
push
mov
mov
lea
push
jne
or
add
mov
jmp
mov
pop
aad
fbld
ror
xchg
sub
push
mov
(bad)
sar
mov
push
sub
or
jmp
adc
jmp
call
mov
outs
cwde
adc
pop
stos
dec
fwait
adc
jbe
add
aam
in
fdivr
rcl
sahf
je
mov
sahf
sar
clc
popa
inc
xchg
mov
xlat
cmp
data16
jecxz
mov
xor
push
gs
repnz
add
clc
sti
fild
shl
mov
iret
pop
sahf
(bad)
pop
fs
(bad)
jmp
ins
xor
add
sbb
dec
and
leave
(bad)
test
sti
add
js
cs
ret
inc
dec
vcmpps
ret
icebp
repnz
mov
inc
add
push
pop
cmp
mov
in
pop
adc
arpl
outs
int
outs
out
push
in
cwde
sbb
cli
push
push
cmp
ror
cli
movs
or
mov
mov
mov
lea
adc
or
push
test
adc
rcr
dec
bsf
fild
(bad)
push
inc
and
gs
retf
and
jmp
ret
iret
fdiv
btr
push
sbb
pop
mov
mov
dec
or
mov
aas
cmps
test
mov
aas
sti
ins
mov
xchg
ret
cli
mov
rcr
call
popa
xlat
pop
adc
enter
popa
(bad)
xchg
hlt
je
sar
lds
mov
jbe
mov
cdq
add
loop
push
test
dec
dec
stos
xor
adc
lods
lds
or
jo
pusha
shr
mov
mov
jmp
pop
pop
xchg
cmp
sbb
mov
push
addr16
ds
ss
cmp
dec
push
loop
repz
xchg
stc
adc
jbe
inc
push
psubw
pop
popa
cmp
xchg
dec
xchg
mov
mov
sbb
pop
mov
add
and
(bad)
aad
sbb
ficom
jmp
dec
mov
pop
sbb
inc
or
jge
cmp
jle
fs
pop
push
dec
sbb
push
test
cvttps2pi
or
stos
push
dec
in
mov
inc
call
add
(bad)
in
pop
in
or
and
clc
aam
(bad)
sbb
cmc
mov
outs
sbb
icebp
fcom
cli
push
and
dec
jl
outs
stos
(bad)
pop
arpl
sar
mov
popf
loop
fldcw
imul
mov
mov
mov
jns
test
not
and
lods
mov
stos
in
pop
or
add
dec
fmul
inc
test
aad
adc
inc
movs
or
ds
push
clc
in
xchg
test
xchg
xchg
pop
mov
cmp
maskmovq
mul
(bad)
sub
addr16
or
push
pop
xor
rcr
dec
sub
aaa
lock
int
cmp
mov
mov
stc
jno
mov
xchg
mov
aaa
dec
repz
(bad)
into
mov
cmp
sbb
add
sar
inc
(bad)
js
inc
xchg
lds
pop
inc
mov
or
stos
xchg
lods
jmp
movs
xor
xor
in
call
aam
jle
mov
and
sahf
mov
pop
arpl
xchg
(bad)
fdivr
jne
mov
xor
ret
pop
daa
jle
adc
or
or
xchg
(bad)
push
xchg
cmp
adc
mov
inc
pop
fcom
(bad)
pop
idiv
cmps
in
push
bound
idiv
ds
and
jl
jl
xor
loop
icebp
mov
xor
les
pop
gs
outs
dec
outs
lods
dec
shr
cld
lods
loopne
inc
add
gs
pop
lds
dec
stos
arpl
cmc
cwde
fist
mov
sbb
mov
pop
pop
dec
mov
add
push
daa
add
cmc
push
pop
leave
fidivr
sbb
mov
pop
test
test
movs
jno
test
mov
hlt
push
in
add
in
fistp
inc
neg
aaa
std
or
jns
stos
fidivr
xlat
das
mov
xchg
jnp
and
daa
cwde
fist
adc
pop
aaa
cmp
cmp
mov
in
ja
inc
mov
xor
mov
or
xchg
or
push
sub
scas
pop
adc
xchg
sbb
add
outs
inc
inc
data16
in
mov
xor
push
add
mov
push
push
lds
or
leave
jg
cmp
jnp
in
rcl
scas
ins
ret
dec
or
shr
push
test
mov
jmp
add
popf
xchg
pusha
iret
or
adc
inc
or
cmp
pop
cwde
ret
add
(bad)
int3
sub
out
call
aam
ret
mov
jns
add
jne
mov
inc
lea
dec
pop
sahf
sbb
cmps
jmp
bound
out
lods
mov
and
pop
outs
mov
jg
xchg
and
pusha
sbb
cmp
push
not
(bad)
fbstp
xchg
xchg
dec
fucom
mov
int
int
or
es
cmps
and
shr
data16
call
xchg
sub
rol
sub
xchg
add
shl
stos
sub
add
mov
out
stc
mov
movs
or
xchg
xor
aad
div
stos
sbb
imul
mov
or
push
mov
sti
add
sub
cmp
sahf
dec
pop
mov
rol
jno
repnz
inc
lods
xchg
fsubr
lahf
jo
mov
pop
xchg
pop
xchg
clc
(bad)
fist
pop
adc
push
fld
jmp
and
sub
pop
xchg
mov
call
dec
(bad)
aam
test
push
or
lods
cmps
sub
mov
mov
das
inc
xchg
xchg
and
cmps
daa
adc
mov
daa
cmp
mov
popf
cmc
aas
ss
in
mov
call
dec
(bad)
fst
leave
sub
sbb
xchg
loop
mov
push
mov
rcl
mov
add
in
sub
xor
and
jmp
inc
push
jp
lea
push
jnp
popa
adc
rol
xor
xchg
xchg
cwde
popf
out
mov
push
jo
sti
pusha
xor
out
outs
pusha
and
inc
inc
scas
push
icebp
retf
and
jne
ins
(bad)
mov
sub
and
in
fistp
data16
mov
dec
mov
bound
popa
loope
mov
lds
jmp
fimul
das
out
pop
mov
sbb
movs
xchg
and
dec
inc
int
dec
out
popf
dec
sbb
cmps
jmp
fcom
cmp
int3
aam
and
cmp
pushf
imul
shr
sar
mov
es
pop
call
dec
xor
cmp
or
mov
movs
xor
cld
push
cmps
push
jb
sti
addr16
mov
popa
push
cmp
xlat
arpl
inc
out
sbb
stc
adc
in
sahf
retf
frstor
(bad)
and
inc
and
sub
lahf
fwait
js
and
sub
arpl
fwait
pop
dec
loope
or
stos
lods
jp
xchg
pop
mov
or
mov
sbb
fcomp
mov
fdivrp
push
(bad)
stos
lock
dec
in
movs
inc
dec
inc
add
retf
cmp
xor
in
test
pop
cmps
fcom
repnz
mov
scas
or
jns
pop
mov
add
pop
aaa
loop
outs
push
arpl
mov
imul
mov
sbb
ins
or
repz
mov
push
mov
jl
pop
mov
int3
ins
adc
adc
mov
xchg
xor
inc
in
in
movs
ffree
daa
mov
cmps
and
fisttp
repz
jl
jae
loopne
addr16
jge
cmps
cwde
adc
cs
mov
repz
mov
fsub
arpl
sbb
movs
bound
sub
test
scas
jmp
aas
xchg
(bad)
test
arpl
in
jae
jmp
pop
ret
out
cmc
cwde
stos
enter
adc
inc
cmp
pop
adc
push
push
mov
ja
dec
pop
stos
mov
inc
or
dec
sbb
xor
jle
(bad)
pushf
adc
rcl
push
mov
xchg
das
inc
xchg
clc
popf
jp
dec
mov
imul
icebp
add
dec
jp
fld
pop
cmps
fwait
cmp
int3
jecxz
ss
add
lea
mov
and
jecxz
out
sahf
mov
or
addr16
std
inc
jmp
pop
in
loop
xchg
sahf
inc
loope
jae
aas
sub
popf
test
pop
push
push
push
(bad)
or
mov
mov
(bad)
sti
ret
test
in
movs
enter
lods
lds
pop
dec
push
jmp
(bad)
aad
loop
nop
cdq
sbb
mov
je
push
xor
adc
call
repnz
push
cmp
lods
cwde
mov
mov
pop
stos
push
xchg
outs
or
mov
pop
sti
sbb
les
pop
(bad)
hlt
shl
or
dec
mov
inc
push
push
aam
test
mov
cmps
xchg
mov
popf
and
sbb
jmp
xchg
call
push
mov
mov
sti
sub
pop
leave
loop
cmp
xchg
lods
sbb
lods
sbb
adc
cs
arpl
cmp
repnz
xlat
sub
jo
xor
mov
jg
jne
or
fist
pop
aas
adc
fs
shl
and
sub
push
out
sbb
dec
adc
xchg
lods
cmp
stos
and
sbb
mov
jno
sahf
jmp
pop
mov
mov
cmp
loope
cmp
cmp
aaa
repz
pusha
inc
sub
(bad)
(bad)
pop
scas
test
dec
mov
and
loope
(bad)
cmp
sahf
nop
pop
retf
push
jp
enter
jge
adc
movs
jns
cmps
dec
sub
jle
cmc
xor
mov
push
add
pop
popf
(bad)
xchg
repnz
dec
cmp
xor
cmp
ret
in
cdq
stos
mov
mov
cmp
lahf
dec
div
mov
ds
stos
in
and
sbb
imul
push
adc
pop
test
adc
inc
xchg
movs
loope
lods
jmp
or
push
adc
pushf
test
(bad)
and
push
xor
bound
dec
push
jle
int
dec
lock
ss
fs
imul
mov
cmp
sub
in
in
cmp
sub
outs
jb
test
xchg
pop
adc
loopne
or
and
ja
inc
(bad)
retf
fs
retf
call
lea
in
int3
clc
pop
ds
fwait
xchg
(bad)
sub
mov
adc
adc
mov
xor
pop
aad
mov
bound
dec
mov
loope
push
xchg
mov
cmp
mov
or
lock
mov
or
scas
jnp
shl
enter
scas
xchg
xchg
inc
scas
xchg
popf
adc
xchg
push
fwait
xor
sbb
xchg
fsubp
push
jp
lods
xchg
mov
inc
fst
imul
jl
push
in
test
xchg
push
inc
call
inc
sbb
ficomp
sub
stos
or
cli
xchg
dec
jg
out
ds
cmp
ins
jecxz
ror
jecxz
ficomp
jb
and
call
sbb
or
enter
scas
out
add
push
(bad)
addr16
mov
shl
and
hlt
mov
addr16
push
bound
cmps
(bad)
sahf
idiv
dec
dec
jg
in
outs
inc
adc
sti
(bad)
fwait
jne
mov
xor
call
inc
jecxz
cwd
cmp
jbe
sbb
test
mov
sahf
(bad)
loop
inc
push
or
mov
cli
sub
in
iret
shrd
das
cmp
add
mov
jbe
fcmovb
stc
sbb
cmp
cs
mov
jmp
es
jae
dec
in
ficomp
cmps
hlt
inc
sahf
test
xor
test
int3
inc
or
mov
ret
adc
rep
movs
std
mov
pop
xor
or
xchg
js
mov
mov
mov
mov
out
or
pop
aad
jp
retf
jp
jl
add
sbb
popa
scas
cs
iret
das
(bad)
ss
scas
xchg
push
sbb
cmp
repz
jmp
adc
data16
mov
jmp
icebp
aas
mov
je
and
sbb
in
aam
stc
sub
jl
das
stc
xor
inc
dec
jp
jo
and
test
lea
xor
add
in
pushf
call
xchg
push
ss
out
adc
fisttp
pusha
sti
int
sub
add
pop
stos
sub
dec
fcomp
je
adc
cmps
mov
mov
xchg
and
fbld
hlt
sub
mov
outs
pop
mov
rol
outs
nop
sbb
jg
or
sahf
xor
retf
inc
pop
in
sar
dec
std
pop
pop
mov
icebp
jno
inc
adc
div
fwait
mov
jmp
call
push
dec
(bad)
call
cmp
and
mov
add
jb
pop
pop
shl
or
push
or
xlat
xchg
mov
inc
hlt
dec
cs
push
cmc
in
popa
mov
enter
cmp
loopne
jge
xor
call
enter
out
push
pop
aas
mov
in
repz
cmp
adc
jbe
jae
call
or
clc
idiv
xchg
cmp
loopne
or
jns
les
or
push
mov
lahf
repnz
push
mov
mov
arpl
mov
fimul
into
jp
ja
les
(bad)
into
(bad)
arpl
mov
jbe
xchg
cmps
mov
pop
mov
push
movs
repnz
xor
xchg
xor
call
xor
test
fnstenv
outs
pop
jp
cmc
lods
ret
jo
aad
push
xchg
ja
stos
arpl
dec
cwde
inc
dec
push
cld
and
push
mov
and
adc
xor
mov
adc
(bad)
jae
scas
sahf
imul
cmps
loope
pop
into
cs
stc
nop
nop
aam
std
xchg
cld
or
fwait
cmp
and
dec
jo
std
scas
fld
movs
push
sbb
fmul
sub
in
jo
mov
xchg
adc
and
xchg
adc
aaa
mov
in
pop
(bad)
clc
cmp
cmp
shl
inc
sub
int3
or
mov
test
cmp
or
ins
mov
inc
cwde
cli
push
out
ret
nop
inc
xchg
xchg
in
inc
shr
add
lahf
pop
jne
push
and
sbb
push
mov
cwde
retf
add
ds
rcr
call
sbb
pop
icebp
rol
imul
pop
rol
shl
psubw
xchg
or
inc
xor
inc
sbb
in
cmp
sbb
sub
xor
sub
ja
cmp
or
sub
popa
(bad)
into
sub
cs
push
fbstp
dec
movs
mov
(bad)
aaa
dec
test
lea
inc
jecxz
mov
outs
adc
retf
leave
adc
jecxz
arpl
push
mov
test
mov
stos
rcr
fcomp
imul
loope
inc
test
mov
cmps
or
outs
dec
adc
sub
(bad)
(bad)
adc
retf
fdiv
int
stos
cmp
mov
xor
lahf
lods
adc
push
cli
test
dec
mov
jbe
add
push
fcmovne
fstp
pop
sub
push
mov
sbb
cmp
add
ror
fsubr
or
popf
or
or
mov
loope
jb
ret
jno
fldcw
fisttp
loop
mov
inc
cmp
xor
jns
sbb
add
jmp
dec
test
call
out
push
inc
popf
test
(bad)
int
mov
cs
into
out
cmps
and
push
cmp
mov
mov
jo
in
mov
sub
pop
in
aaa
adc
and
push
cs
sbb
mov
fsub
sub
adc
push
jno
mov
cld
push
outs
fdivr
add
xchg
add
mov
fdivr
(bad)
ror
leave
leave
and
cmc
test
push
stc
pop
push
pusha
jb
adc
test
push
cld
repnz
mov
fdiv
popa
outs
xlat
jge
sub
sbb
hlt
pop
aam
or
dec
sahf
es
fs
fwait
add
push
dec
fcomp
and
outs
mov
loop
or
adc
mov
popf
rcr
mov
ret
popa
sub
xor
movs
push
xchg
push
push
test
std
pop
sbb
dec
jo
pop
and
push
pop
inc
sbb
in
in
cld
arpl
pop
jp
gs
push
(bad)
push
jmp
xor
gs
popa
fcmovu
popf
or
call
mov
ds
mov
rol
les
scas
add
int3
in
test
mov
pop
push
inc
add
jg
xor
xor
fwait
in
mov
adc
mov
mov
ins
dec
pop
stos
xchg
mov
sbb
adc
(bad)
pop
jl
jne
rol
enter
test
shr
idiv
imul
push
ja
push
add
cmp
xchg
(bad)
xchg
jmp
mov
mov
in
vprotw
inc
icebp
dec
ror
bound
aad
pop
(bad)
out
hlt
xchg
out
shl
pusha
in
mov
mov
shl
jae
add
push
or
or
fcmove
or
cmp
jmp
test
jl
mov
fst
leave
pop
push
and
hlt
push
dec
int
int3
arpl
xchg
out
shl
je
sahf
retf
out
les
lahf
test
pop
mov
mov
pop
popf
stc
addr16
jb
lea
aaa
xchg
push
adc
sti
push
mov
ret
ror
xchg
dec
push
or
inc
cwde
mov
jmp
mov
jmp
push
jecxz
and
xchg
cs
jmp
out
dec
mov
add
adc
(bad)
mov
call
std
les
stc
cmc
pop
cmps
in
fisub
mov
jns
xor
and
outs
lods
pop
in
test
es
jmp
aaa
xchg
mov
mov
jne
test
popa
pop
ss
push
iret
sub
inc
xor
add
ret
stc
loop
lock
push
mov
(bad)
ds
mov
dec
cmps
data16
movs
rcr
push
pop
pop
xchg
xor
sub
inc
add
inc
lea
cmp
mov
pop
or
cli
mov
int
cs
daa
std
lea
mov
mov
xchg
popf
out
dec
ins
sub
mov
mov
push
in
jo
rcl
sbb
cmps
aam
push
jle
or
rcl
xchg
stc
lahf
aad
and
dec
add
into
and
mov
std
imul
mov
pop
jl
and
push
jg
mov
or
and
jmp
cmp
stc
dec
cmps
or
mov
sbb
jle
mov
rol
jg
(bad)
mov
js
out
fcomp
movs
mov
jmp
adc
cld
into
mov
mov
xchg
pop
jl
aas
xor
push
cmp
pop
add
sbb
fisttp
sub
imul
or
xor
pop
sub
cmc
and
leave
push
out
xchg
or
adc
adc
sti
mov
icebp
mov
stos
or
rol
rol
scas
(bad)
clc
sub
mov
cs
adc
mov
sbb
mov
jl
cdq
fisub
jle
or
popa
into
push
xor
jge
icebp
fdivp
repnz
dec
jno
push
inc
call
sbb
push
and
and
es
ins
cwde
js
push
and
sbb
cli
int
ror
cmp
xor
cwde
das
mov
adc
test
repnz
or
and
mov
jmp
pop
add
or
cmp
cmp
sti
js
push
movs
aad
jp
dec
or
mov
mov
mov
xlat
jbe
repnz
mov
test
psubsw
inc
fidiv
movs
jmp
xor
xor
mov
pop
test
mov
xor
repz
pusha
pusha
loop
fdiv
js
mov
ret
mov
outs
nop
mov
(bad)
dec
jns
mov
je
test
scas
xor
sbb
push
sahf
xor
jp
lods
neg
(bad)
sub
xchg
ins
in
loopne
xor
dec
aad
mov
iret
jp
fld
push
out
test
sbb
test
mov
pop
inc
icebp
and
cmp
pop
cmp
(bad)
jge
push
cmp
jge
sti
inc
stc
pop
ret
cld
loop
(bad)
test
push
pop
mov
jno
or
jo
hlt
adc
frstor
ds
lock
fs
mov
stos
mov
pop
add
mov
repz
cmp
dec
ins
sbb
in
test
mov
in
cmps
int
pop
test
xor
fnstcw
inc
fwait
push
(bad)
jbe
out
mov
mov
mov
(bad)
push
push
mov
rcr
data16
dec
xchg
daa
stos
xchg
sub
in
in
loope
mov
pop
dec
mov
push
shr
mov
sub
or
dec
mov
fs
addr16
mov
sub
sbb
mov
or
sahf
neg
retf
je
rol
inc
cmc
inc
pop
sbb
xlat
mov
mov
push
(bad)
int3
outs
xor
push
cwde
sbb
push
sbb
retf
ret
mov
add
cwde
lods
cmp
mov
int3
push
inc
xchg
outs
icebp
mov
in
outs
mov
movs
or
jmp
xor
jbe
pop
inc
in
test
repnz
and
ins
stos
dec
retf
movs
outs
pop
or
push
ss
inc
xchg
pop
nop
lods
call
mov
and
idiv
shl
dec
pop
push
mov
stc
add
lods
in
jmp
pop
fmul
adc
mov
fimul
sub
shr
popa
mov
mov
addr16
jmp
stos
sbb
aam
pop
mov
dec
sbb
test
in
cmps
into
fist
rep
enter
ret
call
jnp
cmp
adc
dec
shl
mov
cmps
jo
(bad)
(bad)
pop
rcr
imul
add
hlt
ror
ins
ret
shl
je
leave
stc
shl
add
ror
adc
call
int3
inc
push
xchg
out
push
movs
add
mov
xchg
cmp
xor
mov
mov
jae
icebp
sub
dec
cmp
shl
fabs
push
sbb
or
call
inc
cdq
hlt
mov
loopne
sub
add
dec
jae
pop
loopne
es
out
dec
call
jmp
xlat
xor
adc
test
add
test
fisttp
jbe
jns
jle
in
sbb
out
inc
cmp
lods
loop
pop
outs
outs
jp
xor
cmps
stc
sub
sub
mov
jnp
push
data16
push
fadd
pop
cmp
xchg
in
je
xor
js
sbb
movs
jno
push
into
push
ja
inc
pop
call
je
xor
or
xchg
ins
cmps
arpl
cld
pusha
jo
das
repz
cmp
cmp
xchg
inc
inc
inc
push
ret
mov
push
inc
jb
xchg
jb
jecxz
lahf
cmp
hlt
scas
jmp
xor
inc
mov
dec
mov
jo
xchg
(bad)
pop
bound
mov
jl
and
lods
xlat
dec
inc
cmp
or
pop
sub
in
sbb
cmps
xor
scas
inc
and
and
mov
adc
gs
lock
or
outs
mov
cli
lods
lods
mov
push
int
jg
ret
imul
dec
adc
and
inc
dec
cmp
mov
mov
sar
push
mov
fimul
mov
in
arpl
outs
shr
inc
push
mov
mov
das
and
sbb
sub
pop
loope
pop
stc
shl
stos
iret
fdivr
adc
cs
sub
leave
sbb
rcr
add
jmp
cmp
mov
lahf
pop
(bad)
and
fnstcw
mov
pushf
jmp
add
inc
into
inc
xchg
mov
in
(bad)
lock
xchg
call
out
xor
xchg
pop
push
xchg
out
imul
dec
or
pop
cmps
scas
pusha
xchg
adc
orps
mov
das
and
cwde
sub
sti
mov
mov
sbb
or
ret
xchg
add
ins
cmp
cmc
loope
sbb
mov
int
inc
lahf
or
lahf
mov
xor
inc
pop
pop
aas
in
lea
jo
sbb
pushf
js
icebp
je
adc
sbb
mov
mov
adc
cmp
out
cs
(bad)
sub
mov
fucomip
loopne
sub
aam
sbb
pop
mov
push
fistp
sub
sub
retf
(bad)
lods
ds
cmp
sbb
inc
pushf
sbb
and
fistp
movs
std
push
mov
call
lahf
clc
in
in
lods
nop
ins
xchg
loope
mov
cmp
sbb
in
or
xor
imul
mov
mov
ror
jge
inc
dec
add
pop
pop
icebp
push
repz
sbb
outs
push
xchg
repz
lock
inc
leave
xor
rol
cmp
ins
fbld
hlt
xlat
cmp
inc
dec
sub
(bad)
xchg
bound
ss
fild
cmp
sahf
(bad)
xor
mov
fnstenv
mov
cmc
imul
sub
push
and
pop
adc
mov
pusha
push
add
ja
pusha
(bad)
(bad)
repnz
pop
mul
stc
jns
adc
xchg
mov
push
push
ds
pop
and
push
out
sub
xor
push
jne
popf
add
es
adc
adc
movs
push
jbe
adc
inc
and
pusha
add
ins
cld
movs
sbb
mov
cmc
fidiv
add
mov
jo
sub
add
pop
cmc
cmp
lods
(bad)
cmc
cmp
(bad)
pop
rcl
sbb
jb
jecxz
push
add
adc
lahf
and
out
push
addr16
push
movs
pop
mov
inc
js
out
les
adc
pop
(bad)
jnp
xor
mov
aam
jecxz
inc
jmp
push
stos
in
loope
ret
pop
push
xchg
and
dec
ja
js
cmp
push
lds
repz
gs
ror
sahf
adc
or
mov
sbb
js
push
and
mov
push
adc
xchg
xlat
out
mov
inc
jg
test
sbb
adc
adc
retf
das
ins
mov
fmul
clc
push
aas
cmp
les
test
mov
fiadd
(bad)
lock
xor
cmp
shr
pop
ficomp
jne
jb
push
xchg
xchg
sbb
stc
clc
mov
ret
push
popa
sbb
xchg
lahf
loop
addr16
xor
adc
pushf
fdivr
sti
and
std
data16
sbb
pop
jnp
inc
nop
cmp
std
ins
pop
loop
and
scas
mov
sbb
push
aaa
sbb
inc
aam
jp
fisttp
retf
mov
jne
pop
in
sub
bound
push
test
loopne
sbb
leave
into
dec
fsubr
mov
mov
imul
in
xor
scas
and
jo
inc
and
fadd
push
xor
dec
jmp
or
jmp
out
pop
cmps
(bad)
mov
inc
leave
addr16
sub
inc
shr
xchg
in
xor
xor
cli
mov
jmp
out
ds
es
pop
(bad)
xchg
mov
shl
int
inc
aad
pop
ret
adc
pop
shr
pop
push
movs
retf
and
nop
add
add
mov
jo
fwait
and
rcr
push
int
std
or
jmp
xlat
and
andps
imul
xor
mov
retf
inc
mov
pop
xchg
xor
shl
inc
jp
mov
sub
cmp
push
inc
scas
daa
xor
rcl
(bad)
sar
ret
cmp
fsubr
cmp
and
(bad)
ftst
sub
add
mov
stc
cs
sti
ins
jmp
in
mov
sub
pushf
jmp
ja
outs
xlat
retf
aaa
in
sbb
pushf
test
sti
xor
icebp
fst
test
call
rep
cmp
sti
xchg
mov
mov
mov
xchg
cmp
sub
test
sbb
stc
inc
dec
and
xchg
xlat
int
enter
addr16
inc
jp
in
std
mov
bound
push
add
daa
(bad)
sbb
sub
jne
mov
and
fldenv
inc
clc
(bad)
iret
sub
sar
les
imul
daa
stc
dec
xchg
xchg
arpl
stos
(bad)
sbb
cdq
inc
add
les
stos
iret
gs
inc
sbb
push
mov
cmp
add
mov
daa
jle
test
adc
jg
leave
pusha
add
lahf
and
inc
stos
mov
ret
movs
fwait
inc
inc
pop
mov
add
jecxz
ins
cmp
ds
inc
mov
(bad)
rol
std
les
aad
stos
in
jnp
cmp
scas
pop
(bad)
inc
ret
clc
cmp
jbe
scas
or
pusha
sub
cwde
pop
fst
push
mov
xchg
lahf
push
sub
cmp
inc
mov
pop
lahf
out
and
jmp
sub
push
mov
push
and
in
sbb
data16
jne
cmp
push
xchg
addr16
jp
jbe
jecxz
das
push
xchg
test
xchg
dec
pushf
out
jp
dec
xchg
in
ins
add
adc
cmp
sbb
icebp
push
nop
jne
hlt
jmp
sub
int3
pop
daa
ins
pushf
push
pop
les
dec
in
mov
movs
push
cmp
(bad)
jg
iret
not
shl
pop
push
add
nop
retf
mov
neg
into
int3
inc
leave
push
call
and
inc
xor
cmp
adc
jg
test
inc
jb
adc
mov
xchg
imul
push
clc
cli
(bad)
push
pop
movs
in
ja
loop
and
mov
loop
push
sub
or
out
cmp
div
int
fild
sub
sub
or
mov
dec
jg
inc
(bad)
cs
imul
call
shl
repnz
jns
xor
leave
cmps
mov
inc
aas
push
push
mov
mov
ins
popf
enter
sbb
push
movs
pushf
jnp
not
dec
xchg
xor
dec
xchg
loop
outs
int3
jb
mov
sahf
enter
and
xchg
pop
and
shl
cmp
ret
xor
jl
push
mov
xor
cmp
sub
scas
in
sahf
or
adc
clc
adc
xor
xchg
cdq
out
mov
inc
pop
and
push
push
ins
leave
inc
mov
imul
out
aaa
sbb
test
inc
rep
in
fs
push
nop
(bad)
push
lea
in
mov
push
sti
(bad)
mov
out
add
int3
xchg
out
mov
sub
retf
sahf
mov
fndisi(8087
sub
jp
sbb
add
dec
and
or
movs
pusha
push
dec
mov
fmul
ds
das
jbe
lods
dec
ja
dec
jo
inc
cmc
lds
add
mov
arpl
stc
out
inc
inc
xchg
call
dec
ja
push
jp
push
neg
lock
call
jmp
pop
lds
sub
scas
ret
aaa
or
popa
add
inc
aad
push
loope
sub
jecxz
mov
push
push
aam
shr
(bad)
das
push
ins
es
add
call
aas
in
inc
jmp
fistp
pop
adc
fidivr
jae
test
cmc
fild
mov
xor
cli
mov
pop
mov
lds
and
fisttp
cld
(bad)
aas
pop
stc
inc
push
iret
push
push
sub
xchg
pop
push
loope
mov
jb
add
pop
or
popa
mov
outs
inc
adc
test
jl
pop
das
repz
push
xchg
fs
repnz
xchg
mov
ins
jecxz
xchg
fild
pop
popf
shl
jnp
sub
inc
retf
js
push
inc
and
jnp
xchg
jge
adc
cmp
add
mov
es
and
mov
imul
sub
jg
vpgatherqq
loop
xchg
lock
jp
xchg
icebp
and
movs
cmp
sbb
not
shr
ds
inc
mov
fs
test
retf
out
sub
icebp
in
mov
(bad)
pushf
jl
sub
fsub
icebp
and
retf
mov
inc
mov
mov
in
shl
and
sbb
push
xchg
jbe
fdiv
gs
mov
cmp
push
or
xor
xchg
or
mov
pop
jmp
pop
sub
inc
pop
lock
repz
imul
sbb
addr16
pusha
xchg
(bad)
pop
shr
add
and
into
mov
pinsrw
mov
(bad)
in
jno
cmp
cmc
mov
call
ds
mov
xchg
mov
scas
jo
adc
jbe
jl
and
clc
ins
hlt
fist
retf
sti
sub
cmps
jb
mov
mov
and
xor
mov
or
movhps
mov
or
popf
mov
shl
sbb
adc
xchg
mov
pop
or
fidivr
loop
clc
jno
sar
cmc
lds
hlt
test
xchg
ret
aad
movs
fdiv
das
popa
inc
mov
dec
cld
movs
jnp
xlat
les
out
(bad)
test
lea
jo
dec
ds
pop
xchg
push
call
or
sahf
lea
xor
mov
fwait
sar
pop
mov
clc
mov
add
push
fs
mov
sub
adc
dec
inc
pop
mov
fucomi
jmp
movs
popa
ins
mov
out
aaa
loope
xchg
sbb
pop
and
xchg
and
iret
rcl
mov
cmp
repnz
fist
xchg
in
out
or
cmp
rcl
movs
adc
in
or
mov
push
pop
fcomp
mov
call
push
cwde
(bad)
fcom
sar
pop
sbb
ret
add
call
pop
retf
jb
pop
sub
cwde
leave
ror
data16
test
imul
mov
dec
inc
leave
out
test
jge
dec
fs
pop
sar
leave
retf
sbb
adc
ret
mov
outs
sti
pop
adc
jnp
mov
inc
aad
ja
and
scas
fisub
out
sbb
jg
jne
in
aad
mov
push
fdiv
cmps
add
test
enter
ja
push
out
adc
cmc
out
xchg
jmp
cdq
fcom
inc
les
enter
loope
mov
out
arpl
in
js
jo
mov
imul
mov
jmp
adc
push
cmps
pop
jb
dec
cmc
cmp
scas
xchg
fucomip
cs
xor
jecxz
lock
cmps
mov
and
jmp
daa
stos
shl
and
int3
jp
pop
cmp
adc
sub
adc
nop
std
adc
fisubr
pop
mov
sbb
sub
fcmovbe
and
fisttp
lods
loope
or
dec
pop
sti
shl
xor
push
add
pop
add
aam
sub
adc
rcr
inc
rcr
xchg
in
mov
fdivr
in
dec
mov
xor
xor
inc
jo
stos
and
lods
pop
fist
cmp
(bad)
addr16
sbb
stos
pop
mov
gs
(bad)
ins
fst
mov
call
ror
pop
clc
loop
jmp
push
(bad)
cs
dec
lea
mov
stos
in
push
aad
shr
xchg
mov
mov
loopne
bound
inc
mov
pop
pop
jg
add
xchg
or
adc
xor
(bad)
lds
int3
int3
inc
xor
rcl
xor
jae
mul
mov
jp
pop
in
push
iret
sbb
hlt
in
cdq
and
test
cmp
xor
fs
add
cli
add
lods
sub
mov
sbb
lea
xor
gs
clc
push
and
popf
push
jnp
sti
es
lea
push
popw
push
dec
mov
push
ins
repnz
sub
repz
ret
mov
in
jns
out
xor
std
jne
mov
pop
sbb
mov
inc
jge
adc
cmp
rcl
mov
xchg
in
pop
push
stos
jmp
mov
cwde
mov
das
(bad)
cmps
aam
pop
xchg
ret
xor
pop
pop
(bad)
out
xor
mov
xor
mov
movs
add
retf
ds
xor
and
in
aad
dec
call
mov
or
sar
sbb
sti
in
push
fs
(bad)
aaa
hlt
in
test
push
test
pop
or
out
jle
xor
mov
push
or
jl
iret
call
sbb
stos
sbb
scas
xor
mov
cwde
dec
push
adc
adc
pop
inc
dec
or
std
inc
bound
add
adc
lahf
rol
sbb
pusha
add
cmp
or
dec
repnz
add
sbb
mov
jnp
cmc
call
xchg
(bad)
aaa
mov
jle
xchg
jbe
sub
mov
mov
mov
call
stos
push
rcr
mov
jns
arpl
add
(bad)
int3
rcr
in
mov
loop
add
dec
jmp
jge
addr16
pop
not
xor
push
lods
adc
mov
adc
stos
xchg
call
jo
jp
movs
mov
xor
jb
ret
pop
test
test
movs
in
mov
pop
inc
xchg
dec
enter
dec
ror
gs
sar
psllq
cmp
dec
repz
stos
retf
xor
mov
out
cdq
xor
dec
pop
sub
inc
js
inc
inc
adc
aad
scas
(bad)
fdivr
stc
or
add
sub
sbb
movs
leave
popf
in
add
pop
in
xor
push
pop
out
ja
je
in
mov
or
mov
jae
inc
mov
push
mov
bound
mov
in
and
fisttp
mov
int
in
test
(bad)
xor
mov
mov
cmp
ret
xor
and
fisubr
test
ins
jp
(bad)
jge
add
sub
scas
in
(bad)
movs
or
call
mov
mov
inc
pop
nop
xchg
push
mov
jbe
out
retf
ror
adc
or
dec
jecxz
cs
popf
cmp
xor
xchg
pop
mov
inc
adc
test
xchg
jae
fld
jl
sub
dec
pop
fnstsw
ja
mov
bound
jno
jno
sub
cli
mov
call
mov
leave
sbb
sub
nop
cmp
aad
stos
or
enter
into
add
add
pop
add
mov
mov
mov
or
xor
das
mov
sub
ror
lea
inc
out
jne
aad
ret
aaa
mov
mov
mov
lea
pop
xor
dec
push
mov
mov
jmp
mov
lods
push
fldcw
dec
fucomi
sub
and
adc
adc
lods
or
into
add
or
jmp
xchg
dec
outs
jae
sub
fsub
test
clc
test
cdq
in
jp
stc
xchg
or
pop
(bad)
inc
lock
iret
mov
popf
push
repnz
aaa
inc
add
dec
mov
js
in
cmps
and
aas
aad
lahf
cmp
cmp
fcmovu
adc
repnz
xor
pxor
jmp
cmp
rcr
loopne
es
sbb
pop
retf
sub
dec
push
xchg
lods
cmp
jg
push
fsub
pusha
repnz
xor
out
add
xchg
ret
(bad)
retf
test
fdivr
dec
scas
mov
clc
pop
movs
xchg
cmp
mov
fpatan
inc
pop
adc
xchg
xchg
cmps
arpl
sbb
xchg
dec
mov
sar
out
xor
pop
mov
inc
push
xchg
pop
jne
sbb
(bad)
int
inc
js
mov
or
sub
and
lahf
cmp
test
sub
pop
fwait
sahf
dec
iret
jl
cwde
out
aam
cdq
int3
stc
cmps
in
xchg
outs
test
cmp
dec
mov
adc
jo
pop
add
or
emms
retf
clc
dec
popa
aam
push
add
mov
aad
jge
xor
add
pop
xchg
cmp
test
mov
adc
cmp
xor
popa
and
adc
push
push
adc
or
ins
add
xchg
arpl
xor
enter
and
inc
fiadd
pop
sub
add
push
push
xchg
mov
xchg
dec
add
inc
jb
cdq
xor
clc
sub
push
loop
in
jecxz
in
jae
je
pop
jle
hlt
pop
inc
fmul
ds
fisttp
aas
sbb
lds
pop
loopne
sbb
pop
mov
xlat
les
xor
hlt
cmp
or
or
jp
inc
adc
fwait
sub
xor
jl
stos
xchg
mov
mov
nop
lahf
sbb
sub
mov
pushf
add
aaa
(bad)
pop
sbb
(bad)
mov
and
stos
(bad)
xchg
test
push
mov
jg
ret
call
aaa
mov
mov
push
rcr
jno
jecxz
xor
arpl
push
icebp
(bad)
and
inc
push
aas
(bad)
cmps
retf
dec
sub
add
cmp
pop
adc
out
aam
push
(bad)
dec
cmp
rcl
daa
or
sub
mov
push
retf
fcomi
in
jno
mov
call
push
movs
retf
loopne
stc
and
pop
pop
sub
arpl
mov
xor
loop
inc
pop
fwait
movs
xor
jbe
(bad)
aas
out
imul
and
mov
paddq
sbb
cmp
cmps
jmp
ds
(bad)
jne
sar
or
sub
adc
lock
out
cmp
sub
xchg
cwde
call
inc
lods
mov
add
imul
push
dec
inc
sub
mov
inc
pop
ss
sti
jo
in
mov
xor
inc
pop
and
mov
shr
xor
cmp
vandnpd
xchg
dec
xor
test
and
repz
retf
push
mov
sub
push
movs
(bad)
mov
push
ss
aaa
paddusw
ins
xor
imul
test
inc
push
adc
lock
fsubr
xor
int3
out
inc
out
int
mov
push
test
scas
xor
cld
and
dec
out
add
add
mov
sub
fisubr
xchg
arpl
hlt
jae
test
stc
into
push
sbb
dec
adc
jne
loope
arpl
add
mov
in
cmp
sub
inc
and
xchg
or
xchg
jl
fwait
daa
dec
jo
xchg
or
and
sbb
mov
push
inc
adc
push
dec
push
ins
adc
gs
pop
inc
and
cmp
ins
or
pusha
call
arpl
or
mov
push
sahf
lods
and
gs
mov
mov
pop
pusha
xchg
xlat
sbb
mov
cwde
mov
retf
popf
jne
shr
lods
xchg
add
psrlq
mov
push
clc
cld
mov
lock
sub
inc
jne
or
xor
xchg
jmp
lds
rep
loopne
sub
fwait
inc
dec
out
rol
cmp
jmp
xchg
add
jp
nop
imul
xor
ror
sbb
std
push
or
mov
or
aad
(bad)
fwait
gs
stos
shr
int3
jecxz
add
and
jp
outs
(bad)
cmp
lahf
sbb
ret
and
pop
not
xchg
fnstsw
dec
retf
arpl
in
inc
popa
arpl
jmp
enter
or
out
cmp
xchg
fnstcw
cmc
in
jg
mov
mov
mov
dec
fwait
push
mov
stos
cmc
imul
inc
pop
dec
mov
cli
test
into
adc
repz
dec
lahf
sbb
(bad)
cld
mov
into
ror
retf
icebp
or
xor
aaa
add
lods
jle
fstp
jb
aas
or
fsub
jl
sbb
das
xor
xchg
ins
mov
(bad)
sbb
xchg
fwait
jg
sub
xchg
and
cmp
loop
out
aaa
setbe
push
add
dec
cmps
lock
push
jp
pop
lods
(bad)
xor
stos
jecxz
jmp
mov
adc
outs
shl
or
ins
(bad)
aam
jmp
test
mov
dec
jmp
sbb
adc
pop
inc
outs
sbb
push
jno
mov
adc
inc
je
jl
or
mov
sub
jo
(bad)
xor
adc
ret
xchg
ss
(bad)
mov
daa
gs
aam
cmp
push
mov
push
pop
cmp
adc
retf
out
test
fucomi
shl
push
push
(bad)
mov
int3
xchg
xor
pop
out
add
jbe
mov
sub
pop
jg
pop
xor
mov
retf
pop
jl
movs
shr
shl
out
sub
in
stos
test
sbb
add
xor
sub
mov
(bad)
test
pop
ds
leave
in
in
sahf
sbb
out
daa
jne
test
(bad)
int
cs
push
popf
clc
dec
(bad)
pop
dec
fadd
sub
das
xor
sbb
stc
aam
jle
dec
fwait
push
ret
jo
jb
int
push
inc
mov
call
and
(bad)
das
out
mov
jmp
imul
sub
jecxz
xor
ins
test
clc
mov
inc
mov
jns
dec
mov
stc
sbb
sub
inc
inc
pop
xchg
pop
mov
push
xor
movs
add
imul
xor
hlt
aas
scas
jno
out
pop
pop
in
pop
push
shr
nop
ja
dec
aaa
xor
pop
sbb
sub
and
or
xchg
or
pop
mov
imul
jp
mov
push
xor
inc
sbb
inc
icebp
hlt
cld
cmp
dec
adc
sbb
adc
dec
fs
popf
jno
(bad)
and
or
mov
sbb
(bad)
dec
shl
add
mov
push
out
mov
xchg
inc
mov
pusha
and
add
mov
push
imul
adc
pop
push
push
retf
stos
(bad)
sbb
push
push
popf
push
jge
imul
inc
or
jle
es
mov
mov
(bad)
in
pop
and
rcl
inc
mov
push
jmp
test
retf
dec
push
pusha
push
xchg
lahf
jcxz
fild
test
mov
femms
pop
aam
jmp
iret
or
addr16
fsubr
ins
(bad)
pop
mov
fisub
leave
les
ficom
xchg
mov
(bad)
sbb
sbb
or
popf
push
jnp
jg
jns
sbb
nop
popf
inc
lea
inc
cld
fsubr
addr16
jnp
adc
or
mov
sbb
cs
sub
popa
mov
mov
call
cmp
fisttp
in
or
cdq
psrld
mov
jne
stos
jle
mov
fbstp
jmp
cmp
bound
cmp
jno
inc
addr16
sub
ja
sbb
mov
mov
(bad)
stc
jae
xor
inc
pusha
pop
mov
lods
jbe
cmp
js
inc
mov
stos
xchg
sar
sub
jl
fdivr
ret
sub
out
inc
call
adc
jg
fidivr
test
retf
xor
cld
sub
cs
fcmovb
xchg
addr16
mov
xchg
inc
mov
jbe
ficomp
and
stos
add
ds
pushf
mov
clc
mov
jecxz
nop
test
and
repnz
push
dec
test
fcom
push
push
xor
imul
xor
aad
xlat
pop
adc
and
(bad)
xchg
pop
mov
sub
xor
cs
rcr
enter
jecxz
xor
scas
jbe
aas
adc
outs
call
js
sub
out
dec
add
outs
loopne
dec
xchg
or
inc
and
and
stc
call
adc
retf
cmp
lahf
gs
ins
jo
fld
cmps
mov
inc
mov
push
push
add
fcmovb
stos
add
add
into
pop
mov
mov
shl
sbb
movaps
addr16
dec
sbb
xor
push
sbb
addr16
pop
popa
cmp
out
popa
outs
add
add
xchg
mov
retf
stc
scas
daa
je
and
xor
shr
jo
and
or
adc
push
outs
std
inc
pop
mov
xchg
aam
jmp
bound
sbb
mov
pop
aaa
pop
add
unpckhps
add
aaa
imul
push
and
add
jno
xchg
adc
sahf
and
push
push
test
dec
jl
sub
xor
sub
xchg
mov
push
push
or
or
cmps
jle
add
lods
dec
and
cmp
push
mov
mov
es
leave
mov
movs
jmp
push
add
or
js
addr16
dec
mov
adc
rol
push
sub
push
adc
jle
push
int3
push
fiadd
or
jne
push
lahf
pop
jecxz
jg
xchg
cmps
in
data16
je
cmp
cmp
inc
xchg
sbb
add
push
jno
cli
cmc
mov
imul
dec
shl
pop
mov
ins
daa
xlat
xchg
inc
push
jp
mov
inc
sub
lea
xchg
add
in
jmp
inc
push
stos
xchg
daa
push
and
xor
inc
push
jp
iret
mov
call
sub
jecxz
les
shr
frstor
sub
lods
jp
push
in
sub
and
fmul
sub
retf
leave
xor
pusha
and
aas
mov
xor
aad
mov
lea
inc
out
out
loop
add
aaa
es
repnz
and
adc
imul
ins
add
jg
call
dec
pop
das
fwait
jmp
adc
jp
cmp
bound
(bad)
shl
cdq
mov
mov
ja
call
arpl
push
push
into
sub
imul
push
push
ins
jo
bnd
sar
(bad)
push
repnz
loopne
jmp
lock
jecxz
mov
inc
cdq
mov
jbe
lock
fimul
mov
stos
js
ret
add
fcmovb
es
stos
out
dec
js
sub
mov
lea
add
jge
xor
popa
movs
icebp
xor
addr16
not
inc
ror
bound
sbb
sbb
mov
in
sub
in
push
pusha
pop
and
jg
popf
dec
jle
jge
out
cmp
test
imul
cmp
es
idiv
enter
sbb
jmp
jo
call
retf
lods
jno
sbb
out
aaa
mov
scas
scas
cmc
aas
xchg
jg
fnstenv
jmp
fcmovnb
mov
sub
or
test
pop
movs
ins
sbb
sub
icebp
sub
frstor
sbb
call
shr
dec
lods
imul
enter
hlt
pop
jb
(bad)
pop
into
leave
xchg
leave
je
les
bound
lea
jmp
jg
daa
loope
(bad)
out
int3
xchg
xor
fst
inc
imul
leave
movs
xchg
scas
xchg
and
movs
cwde
call
stos
push
mov
xor
fcomp
pop
int
jnp
or
xor
pop
cmp
jecxz
sbb
imul
popa
sbb
into
sbb
mov
xor
xchg
inc
in
dec
out
sbb
push
adc
scas
ins
mov
jb
push
neg
push
ins
xor
(bad)
rcl
jle
clc
push
pop
inc
clc
popf
jecxz
repz
sub
jmp
(bad)
pop
pop
repnz
movs
mov
or
xchg
push
pop
(bad)
les
push
sub
cld
mov
mov
mov
out
push
aaa
ja
xor
push
mov
sub
js
mov
inc
cmps
in
inc
or
cmp
inc
cld
add
out
mov
out
(bad)
xor
dec
cmps
mov
repnz
or
cmp
clc
mov
adc
iret
ja
out
addr16
xchg
adc
cmc
push
or
jo
lds
cld
sahf
mov
push
loope
dec
loopne
cmps
std
push
ret
jnp
jmp
mov
xchg
mov
mov
gs
cmp
hlt
in
in
xchg
xchg
jns
pushf
jle
inc
and
cmps
test
sub
xor
sahf
cpuid
ret
mov
call
and
mov
mov
bound
iret
ret
or
lea
jno
dec
es
cli
add
inc
inc
or
aam
movs
loope
test
adc
int
cmp
int
push
xchg
pop
lds
dec
adc
dec
ja
xchg
jne
xchg
lods
mov
pop
jecxz
sbb
sbb
or
rcl
ret
js
push
mov
cmp
ins
std
jne
adc
xor
dec
movs
mov
add
pop
or
add
cdq
test
push
mov
mov
xor
sbb
mov
mov
inc
dec
jmp
adc
jmp
xchg
gs
shl
mov
xchg
loope
loopne
pop
and
je
test
jbe
mov
into
mov
inc
mov
and
movs
mov
cs
add
xor
std
push
sbb
sub
and
xor
inc
mov
xchg
je
mov
cmps
and
(bad)
mov
dec
outs
pop
dec
out
pop
sub
(bad)
jnp
shl
rcl
shl
adc
or
push
pop
xchg
jmp
cmc
int
jmp
outs
cmp
mov
outs
jp
dec
push
sub
(bad)
fadd
mov
and
push
adc
adc
sahf
aaa
mov
inc
cmp
arpl
sbb
(bad)
dec
js
scas
ss
jno
add
push
lock
js
gs
and
sahf
jmp
xchg
call
fild
sbb
mov
lods
jae
jnp
nop
mov
(bad)
nop
xchg
mov
mov
int3
cmp
push
cmc
pop
rcl
or
stos
lahf
mov
sub
inc
jae
outs
cmp
icebp
cmp
popf
cmp
mov
xor
push
rcr
sub
cmp
xchg
ror
aam
inc
mov
call
jle
ror
aas
repz
sbb
loopne
xchg
and
fld
add
out
stos
mov
mov
(bad)
pop
sub
add
repnz
or
jnp
dec
fneni(8087
inc
outs
xchg
mov
stc
outs
xor
clc
pop
add
scas
stc
(bad)
xor
push
xlat
imul
test
xchg
cmc
mov
xchg
or
jp
xchg
sti
cli
mov
cwde
or
sub
or
hlt
pop
mov
cmps
hlt
mov
fist
and
mov
movd
leave
stos
sbb
sar
inc
mov
xchg
sub
or
mov
sub
clc
sbb
mov
(bad)
in
sub
out
retf
out
mov
sar
out
in
mov
sub
or
aas
xor
mov
jno
mov
mov
fist
add
xadd
adc
rcr
xor
adc
sar
das
(bad)
aam
cld
lods
pop
jnp
jno
cmps
jns
je
into
xor
or
adc
pusha
ret
push
nop
xchg
sub
pusha
dec
or
xchg
lods
fidiv
or
std
push
mov
cmp
ficom
jle
mov
out
push
stos
popa
dec
sub
in
jg
pop
fisubr
cmp
push
test
outs
or
pop
xor
sub
fild
loopne
jle
jb
loope
pop
les
inc
inc
cs
adc
push
leave
icebp
mov
clc
je
fist
rcr
sbb
mov
aam
jg
lahf
addr16
scas
sbb
dec
adc
(bad)
sahf
nop
mov
hlt
push
mov
les
faddp
pop
enter
mov
stos
cmp
cmp
dec
pushf
popf
mov
outs
loope
push
sub
std
inc
enter
ins
mov
xor
inc
xchg
adc
fnsave
daa
mov
and
sub
xchg
sbb
cmp
push
movs
shr
imul
push
and
in
lods
shl
cld
int3
fnsave
sub
lds
xor
loop
cli
ds
pop
out
stc
jp
xchg
int3
int3
(bad)
leave
sbb
xlat
jnp
add
jmp
gs
outs
sbb
sub
dec
das
nop
jo
mov
mov
aam
dec
shl
cwde
(bad)
int3
(bad)
fmul
adc
sti
into
lahf
pop
sub
test
stos
lds
in
dec
cwde
mov
jne
add
push
bound
sti
pop
xchg
push
fidiv
test
aam
enter
loope
dec
adc
lock
and
es
dec
jbe
add
jmp
and
rol
mov
sub
sbb
out
xchg
pop
mov
jl
fild
sbb
(bad)
aaa
test
xlat
(bad)
fisub
inc
or
cmp
or
daa
pop
nop
pop
(bad)
adc
cmp
loopne
bound
mov
iret
cli
or
sar
movs
fistp
pop
inc
bound
repnz
push
gs
in
jbe
or
test
cmp
jle
enter
test
xchg
out
and
add
dec
cmps
push
sub
push
or
stc
pushf
in
jl
push
out
mov
xor
addr16
mov
loopne
mov
out
cmp
int
adc
pop
xor
inc
in
in
xchg
jecxz
fucom
jae
mov
and
mov
cmp
jne
xchg
clc
pop
retf
sub
sub
ds
std
cmps
or
pop
fs
scas
xchg
adc
cmps
int3
enter
jne
mov
cmps
rcr
inc
sbb
or
jp
ss
cs
adc
or
das
jmp
fs
dec
add
jne
mov
add
lock
fnstsw
sub
push
retf
and
xchg
mov
mov
xchg
sti
add
sbb
imul
(bad)
out
cmc
lea
adc
pop
daa
mov
adc
jecxz
xchg
nop
xor
cdq
adc
mov
ja
xor
sbb
fist
test
(bad)
fadd
or
shr
mov
fs
cmp
call
aad
iret
std
cmp
rcl
inc
sar
cmp
scas
test
push
jns
lock
add
mov
sbb
iret
fbld
sub
add
adc
xchg
mov
push
bound
or
adc
sub
mov
or
leave
out
stos
inc
fst
pop
ins
jns
sub
aam
aas
(bad)
push
es
popf
xchg
fsub
mov
dec
int
(bad)
push
pop
popa
jne
mov
mov
lds
pusha
or
ror
rcl
ja
pop
dec
push
xor
fnstsw
push
and
mov
xor
add
adc
xor
sahf
xchg
mov
pop
pusha
fwait
adc
int
cs
jle
jle
sbb
pusha
stos
pop
mov
bt
pop
xor
(bad)
out
fistp
mov
adc
clc
ds
ret
(bad)
clc
jne
xchg
push
or
xchg
pop
pop
pop
leave
mul
inc
scas
adc
iret
(bad)
into
ret
es
fistp
adc
mov
mov
cmc
div
xchg
neg
popa
std
and
das
int3
jo
into
mov
not
mov
cmp
xchg
inc
add
mov
in
(bad)
(bad)
xor
xchg
(bad)
fsub
out
xchg
cmp
jno
push
pop
adc
sbb
adc
push
or
cld
cmp
xchg
(bad)
in
cs
fistp
into
cld
mul
(bad)
ficom
cmc
cmp
mov
jmp
xlat
xor
jmp
int3
js
ins
jb
push
and
shl
data16
add
xchg
fxch
pop
jb
jae
push
arpl
push
xor
test
das
daa
xlat
jle
(bad)
dec
in
pushf
leave
cmp
in
jmp
jnp
or
js
std
dec
adc
arpl
push
xlat
jo
leave
fild
push
inc
xchg
ins
cmp
mov
(bad)
xor
std
movs
imul
idiv
int
push
jae
sub
int
push
(bad)
shl
jl
xchg
ds
or
cmp
mov
test
push
jno
push
xor
test
sub
aas
loope
add
and
mov
rol
fsubp
and
xor
push
fist
adc
nop
fcom
cmc
mov
ss
icebp
cmp
shr
sub
pushf
push
inc
add
(bad)
jge
movs
inc
shl
mov
adc
xor
mov
mov
mov
stos
add
mov
mov
mov
bound
int3
aaa
dec
loopne
std
into
adc
add
push
cmps
mov
outs
nop
loope
inc
dec
cdq
xlat
lock
jp
movs
xchg
cmp
xchg
ds
sbb
push
mov
retf
cmp
or
push
(bad)
(bad)
hlt
call
mul
popf
push
xor
push
mov
shl
(bad)
jne
xchg
or
jo
(bad)
dec
neg
and
add
mov
(bad)
pop
(bad)
jns
add
dec
lock
and
add
stos
mov
sahf
mov
(bad)
shl
lock
je
push
scas
daa
fs
mov
bound
pop
aam
arpl
shl
fld
push
push
mov
aas
mov
add
ret
int3
daa
and
hlt
test
pusha
into
inc
scas
add
or
lds
pop
cs
sub
push
pop
mov
(bad)
mov
mov
push
enter
push
fcomp
inc
out
inc
int
fbld
dec
pop
daa
retf
lahf
jge
(bad)
enter
lds
xchg
les
pusha
mov
jmp
xor
inc
pop
ret
shl
in
xor
push
into
out
(bad)
fst
int
in
inc
sub
adc
push
ins
or
inc
movs
stos
aam
sbb
mov
and
or
inc
jns
(bad)
ins
mov
ret
(bad)
stc
jl
ins
fcomp
pop
xor
pop
push
pop
sub
sub
icebp
and
dec
push
xchg
dec
pop
sbb
jno
push
jo
sub
inc
pop
int3
dec
jb
xor
nop
dec
(bad)
fmul
dec
xor
add
stos
xchg
(bad)
cmp
ins
imul
test
jecxz
ins
out
jno
dec
inc
mul
out
clc
ss
or
scas
xor
cld
inc
mov
(bad)
inc
mov
imul
jmp
scas
sub
call
fs
sub
sub
loop
je
iret
int
mov
sar
test
push
test
adc
mov
xchg
mov
and
xor
loopne
ss
cmc
jecxz
lods
aas
push
mov
movs
xchg
mov
arpl
enter
dec
cmp
xchg
sub
add
dec
sub
inc
mov
cli
ins
dec
call
mov
cmp
hlt
out
pusha
mov
aad
mov
push
push
or
push
and
out
int3
mov
bound
pop
mov
mov
dec
mov
add
test
test
mov
fwait
xchg
mov
imul
imul
lock
mov
add
push
pop
sti
ror
cmp
movs
inc
bnd
stc
adc
das
retf
and
ror
ret
mov
int3
jno
dec
in
adc
aaa
jne
aaa
mov
(bad)
icebp
xlat
mov
mov
sbb
js
rcl
jb
js
sub
push
or
pop
xlat
or
(bad)
ins
sub
xchg
mov
test
aam
xchg
jg
pop
test
jns
jecxz
fucomi
and
push
stos
das
rcl
sbb
and
cmps
push
ins
sti
aad
sbb
cli
and
imul
mov
sbb
jmp
push
ja
mov
std
in
inc
mov
out
and
push
inc
pop
mov
(bad)
adc
xchg
cmps
sub
stos
xor
jno
push
fucomi
icebp
push
outs
sar
test
sar
xchg
fistp
pop
pop
add
sbb
outs
mov
dec
jmp
stos
shl
dec
jbe
cwde
(bad)
sub
jmp
dec
sub
out
call
mov
fdivr
popa
cmps
sahf
adc
dec
mov
fidiv
cmps
in
mov
push
jns
popa
push
jle
fisttp
mov
lea
pop
sbb
push
mov
test
mov
mov
dec
jne
stc
cmp
js
stos
imul
scas
clc
jle
adc
mov
mov
(bad)
sbb
scas
int3
push
ins
cdq
or
sub
inc
pop
addr16
push
inc
xor
sbb
addr16
out
cmps
out
or
sub
jmp
add
test
out
stos
sar
cmp
stc
inc
rcl
in
fild
jno
dec
stc
pop
inc
sub
mov
push
jmp
cmp
xor
jo
cli
cli
test
mov
movs
call
add
sub
ins
xchg
dec
push
sub
repnz
adc
shl
inc
pop
shl
xor
ret
gs
pop
nop
aad
ret
enter
jne
ins
cmp
and
stc
clc
lock
call
test
fst
mov
les
ror
stos
(bad)
cmps
fist
repz
fucomp
sub
or
jno
cmp
pop
mov
xor
adc
fs
cmp
in
(bad)
adc
and
pop
mov
leave
sub
jl
xchg
aas
pusha
and
stos
out
push
jbe
xchg
inc
clc
inc
xbegin
jae
xchg
popa
cwde
shl
and
daa
add
mov
and
repz
fs
dec
sub
and
jmp
(bad)
nop
xor
stc
inc
xlat
xor
imul
or
fs
imul
cmp
jo
pop
cld
sub
mov
les
or
paddusb
add
mov
jle
sub
leave
adc
loopne
add
cmp
mov
cld
je
out
ins
dec
jp
push
add
clc
aad
mov
xor
call
pop
sub
mov
adc
pop
ja
out
(bad)
mov
xchg
iret
push
loop
or
mov
xor
call
sbb
dec
rol
in
mov
jmp
add
dec
push
repnz
sub
arpl
dec
jl
dec
jmp
push
push
pop
pop
or
dec
neg
out
add
icebp
pop
sbb
jl
es
hlt
cmps
call
pop
add
pop
add
call
repz
jns
jp
mov
jle
fwait
jnp
icebp
dec
lldt
pop
fs
scas
ja
jbe
xchg
imul
jge
nop
dec
loope
es
(bad)
lock
idiv
xchg
aad
cmp
call
xlat
fwait
sub
mov
mov
jne
inc
dec
(bad)
dec
mov
pusha
lea
je
cli
into
sub
fwait
inc
mov
inc
scas
cmp
test
mov
lods
sub
xlat
sbb
aas
ret
pop
inc
lds
xor
imul
mov
xchg
push
jmp
pop
sti
xchg
mov
jmp
xor
inc
cmps
sub
pusha
jl
neg
bound
fdivr
enter
aaa
jecxz
rcl
mov
mov
imul
jns
lds
gs
call
cmp
or
dec
push
pop
lahf
pop
sbb
and
ret
pop
int3
mov
sahf
cmps
lea
lods
sbb
add
retf
sbb
sar
sub
ins
test
ds
in
scas
pop
dec
mov
dec
in
jmp
jl
aad
dec
jmp
mov
push
nop
ret
jp
gs
xchg
mov
push
sbb
jmp
call
sbb
or
inc
inc
es
aaa
pop
inc
mov
pop
jl
push
out
mov
push
fist
sti
in
call
sub
xchg
mov
xchg
cli
mov
ss
pop
lea
aaa
mov
mov
das
cs
scas
xor
add
jmp
mov
(bad)
in
popf
leave
sub
shr
test
icebp
mov
cmp
lds
xor
mov
mov
mov
pop
mov
ret
pop
mov
mov
cld
mov
push
pop
push
fistp
xor
pop
xlat
ins
test
rol
xor
outs
sbb
jb
test
fcomp
in
test
or
xlat
enter
ins
sti
pop
cmps
pop
in
or
movs
int3
mov
dec
dec
add
add
ss
dec
sub
push
test
adc
ret
imul
test
sbb
xchg
outs
ds
in
out
jmp
cmp
pop
xchg
xchg
push
cmp
pop
xor
cmp
mov
lods
jae
mov
cwde
and
daa
pop
push
sbb
ins
js
jg
out
jne
mov
sbb
daa
dec
out
fsub
push
das
shl
add
aas
dec
retf
lods
xlat
and
mov
cmp
add
icebp
arpl
aas
sub
std
inc
aaa
push
sbb
add
jp
add
test
aas
mov
push
jns
cwde
push
pop
fs
jl
rol
or
gs
popa
jb
popf
or
ins
in
rcr
pop
cmps
pop
or
jo
pop
fsubr
push
mov
sbb
loop
fwait
adc
and
or
retf
cmp
out
shr
fstp
add
xlat
add
int3
sub
push
xor
add
jae
mov
movs
arpl
push
push
fsub
es
dec
inc
cmp
cmp
(bad)
sbb
iret
xchg
lock
in
iret
lds
jo
cmp
lock
in
push
ja
mov
adc
jbe
xor
test
repnz
mov
loopne
push
sbb
sbb
jmp
inc
mov
mov
push
int
push
add
pop
inc
arpl
test
or
sub
repnz
dec
pusha
sbb
in
pop
pop
mov
(bad)
popf
in
jmp
xchg
inc
cmps
cmp
retf
mov
adc
and
cmp
jp
mov
cmp
inc
retf
pusha
push
push
dec
aaa
inc
pop
les
xchg
sub
and
xor
push
hlt
and
cmp
(bad)
inc
cmp
cmp
mov
(bad)
imul
out
mov
adc
mov
test
retf
fwait
pop
or
pop
mov
pushf
dec
or
icebp
inc
shl
jmp
add
mov
push
push
mov
outs
jb
(bad)
adc
mov
push
mov
pop
pop
leave
jae
icebp
jg
xchg
sub
dec
xor
push
fs
jp
ret
pop
cmp
fucomi
xchg
adc
rcr
sub
jae
call
pop
dec
push
add
push
sbb
add
mov
inc
mov
aas
mov
sub
cmc
pop
push
jns
or
mov
clc
dec
dec
xchg
dec
int3
je
inc
and
(bad)
dec
aad
push
sbb
stc
cmp
xor
lods
outs
cmp
mov
sbb
dec
cmp
jb
scas
push
or
cmp
lods
arpl
outs
mov
xor
sbb
call
nop
push
mov
sub
dec
fbld
xor
or
xchg
aaa
imul
mov
daa
ins
cmp
cs
stos
xchg
jg
cli
jmp
fs
adc
das
cmps
add
dec
sub
(bad)
ss
xor
mov
ins
push
nop
push
and
mov
mov
das
cmps
imul
sbb
jl
add
sub
scas
xchg
jmp
cmc
cwde
mov
and
and
sbb
jae
mov
jmp
mov
mov
xchg
adc
add
xchg
pop
pop
stc
outs
mov
mov
or
outs
mov
outs
(bad)
out
cmp
cwde
mov
or
xchg
xor
add
inc
mov
idiv
dec
movs
jne
mov
shl
out
mov
ins
inc
das
les
in
xor
sbb
js
sbb
adc
xor
mov
test
jns
cmps
sar
repnz
cmps
ins
pusha
fbstp
in
jecxz
jnp
xchg
lahf
jbe
mov
or
fcom
pop
cli
mov
cmps
inc
pop
stc
scas
sub
adc
aam
and
dec
dec
jne
inc
jo
push
cmps
ins
mov
hlt
sar
rcl
jmp
add
leave
test
mov
movs
cmp
fnstenv
and
lahf
aaa
push
rcl
inc
xor
retf
enter
mov
add
fdiv
or
xor
lods
imul
inc
pop
jmp
ja
and
xchg
retf
mov
loopne
sub
icebp
mov
(bad)
dec
mov
fcom
fwait
xor
push
sbb
pop
test
mov
sbb
popa
inc
xchg
sbb
xchg
xor
scas
mov
mov
xchg
dec
push
call
and
and
in
push
jl
imul
imul
add
icebp
cs
jg
push
push
retf
dec
or
or
push
jbe
sub
sub
pop
jns
gs
jle
jno
pushf
lods
daa
sub
cmp
or
dec
inc
mov
mov
push
sbb
dec
pop
shl
sub
cmp
jmp
and
aas
fdiv
jae
jne
sub
fwait
rcr
scas
cmps
shl
dec
stc
ja
push
inc
fdivr
cmc
pop
jae
imul
lahf
aam
outs
out
cmp
bts
sti
out
jecxz
iret
jne
inc
and
movs
ret
mov
pop
ins
inc
das
or
shl
fyl2xp1
and
cmp
xchg
mov
mov
cmp
outs
(bad)
imul
sbb
xchg
jecxz
or
stc
mov
inc
dec
inc
movs
in
fnstcw
loope
mov
push
dec
retf
cli
movs
add
jg
push
xchg
test
dec
jmp
loope
inc
dec
retf
mov
lahf
test
ret
repz
sbb
clc
or
icebp
std
aam
fbstp
fnstcw
and
fsubr
mov
scas
and
add
fld
loopne
xchg
into
add
pop
adc
cmp
loop
and
pop
movs
ins
shl
scas
(bad)
push
push
xor
data16
cs
push
jecxz
sti
sbb
jle
fidivr
pushf
and
mov
aam
ss
adc
call
ins
(bad)
sub
sbb
pop
icebp
pop
stos
dec
jne
mov
mov
in
inc
retf
aas
scas
xchg
cdq
in
div
xchg
mov
daa
in
dec
mov
retf
push
cmp
into
pop
dec
shl
out
dec
add
push
or
fcom
jp
into
lods
sub
inc
push
mov
int3
xchg
mov
cmp
adc
aas
sbb
nop
cmp
das
popf
in
xor
in
addr16
inc
stos
outs
and
(bad)
iret
cmp
fwait
pushf
jle
aaa
mov
lods
mov
adc
sbb
push
ror
pushf
and
xchg
push
ds
cwde
popa
push
fsub
das
mov
mov
scas
imul
fcom
mov
ds
mov
loope
fisub
enter
(bad)
push
cmp
dec
ret
dec
jnp
jmp
daa
mov
int
loop
icebp
les
and
xor
imul
dec
jmp
xchg
xor
aas
fdiv
jmp
pop
xor
(bad)
ror
inc
outs
cli
or
aaa
mov
sti
imul
nop
add
lahf
xchg
jmp
dec
jbe
outs
movs
test
fsubr
or
sbb
jp
mov
push
xlat
push
push
dec
inc
add
mov
clc
data16
dec
and
retf
xor
or
xchg
or
xchg
fist
bound
sub
out
imul
adc
xchg
push
leave
ds
inc
cmps
iret
dec
gs
xchg
arpl
mov
ss
jb
cmps
xchg
in
and
ins
ret
push
push
fsubp
pop
test
mov
cmp
push
and
nop
mov
cmp
and
data16
adc
jg
pop
out
clc
adc
ins
fld
retf
lods
push
ret
lods
push
mov
jae
add
inc
clc
(bad)
shl
xchg
sti
in
ins
fild
push
shr
mov
cmp
mov
add
pop
adc
cmp
movs
mov
cli
daa
push
rol
inc
jmp
shl
gs
addr16
(bad)
jne
lock
setns
mov
sahf
jge
inc
repnz
iret
shl
or
iret
adc
jmp
xchg
lods
sbb
and
inc
repz
push
add
mov
pop
cli
xor
push
es
(bad)
inc
stc
jno
mov
mov
cmp
cmps
pop
jne
adc
and
bswap
pop
mov
inc
inc
mov
out
jp
test
idiv
xor
xchg
cs
out
jl
aam
sbb
(bad)
pop
je
sub
fisttp
cmp
sub
adc
stos
sbb
xchg
xchg
jecxz
and
in
retf
(bad)
fnstenv
shr
dec
iret
mov
daa
popf
les
lods
dec
js
mov
sti
cdq
mov
fisub
sbb
jg
js
les
push
add
lds
cmps
lods
fld
cwde
jmp
stc
shl
dec
push
aas
add
jge
std
push
mov
pop
and
leave
add
mov
mov
mov
fcom
mov
int3
mov
retf
add
rol
mov
add
popf
repnz
or
cld
ffreep
dec
dec
ja
fild
ins
loopne
inc
loope
not
test
xor
sbb
shr
arpl
sub
dec
shr
fmul
outs
jmp
rcr
in
push
popf
stc
daa
add
ss
add
ret
or
imul
stos
sahf
sbb
lds
jge
fcomp
cmp
and
jo
xchg
jns
dec
pop
leave
stos
xor
cmps
nop
scas
or
jno
ss
lahf
rcr
xchg
jbe
add
jge
lock
lea
xchg
(bad)
xchg
out
pop
adc
push
(bad)
jmp
jmp
fld
ficomp
push
cwde
cmp
loopne
push
cmp
loop
push
mov
cmp
dec
dec
outs
js
test
shl
loop
cmp
push
pop
or
mov
(bad)
fstp
dec
jmp
test
add
out
rol
push
sub
mov
jns
mov
cmp
jmp
rcl
cs
jnp
fs
adc
sbb
loope
in
push
test
aaa
lods
test
(bad)
push
(bad)
cmp
push
adc
push
arpl
lock
or
sub
pop
cmp
in
inc
mov
inc
outs
loop
imul
cdq
jbe
and
mov
inc
mov
push
dec
shl
leave
(bad)
lock
dec
pop
sahf
in
push
in
jns
jmp
fsub
jnp
mov
jae
push
movs
imul
sahf
mov
sti
ret
pusha
shl
rcl
ins
popf
popf
inc
mov
inc
cmp
cmp
call
ins
call
sub
ror
cmp
dec
cwde
jmp
cli
cmp
aad
sub
aam
xchg
outs
out
jno
sub
dec
(bad)
jmp
rcr
nop
(bad)
repnz
pop
sahf
mov
in
push
mov
xchg
out
ret
jg
jno
fistp
inc
data16
pop
inc
aam
cdq
dec
ss
mov
xor
and
loop
push
inc
mov
inc
dec
lahf
inc
inc
adc
pop
sar
jmp
into
jno
jge
xchg
in
nop
aam
mov
jg
rcl
fsubrp
cmp
ret
push
fstp
test
mov
gs
sahf
push
call
xor
dec
movs
adc
lods
jae
sbb
xchg
loop
sub
ror
ret
daa
add
mov
xchg
pop
push
mov
std
push
mov
jecxz
test
frstpm(287
cmp
idiv
adc
xlat
sub
or
xor
cmps
jl
outs
inc
ss
sbb
xlat
xor
sub
enter
adc
shr
mov
dec
aam
lahf
imul
and
jg
mov
pop
mov
cmp
pop
ss
dec
je
test
clc
mov
push
shr
xor
test
mul
repz
xchg
das
dec
mov
and
push
mov
scas
call
adc
cmp
add
cmps
mov
cmc
xchg
pop
jle
inc
pusha
(bad)
hlt
dec
push
jg
fst
daa
ja
mov
mov
xchg
mov
jmp
lods
inc
sti
xchg
cmps
adc
xchg
xchg
mov
cmp
sub
movs
adc
push
add
xchg
jae
add
push
arpl
add
sbb
push
mov
cs
and
(bad)
fs
imul
cmps
jecxz
hlt
jmp
mov
sub
xchg
fild
inc
mov
and
push
mov
sub
out
retf
das
mov
pop
adc
pop
dec
pop
loopne
leave
xor
jmp
std
and
(bad)
mov
sbb
cmp
xchg
call
enter
xchg
add
fistp
shl
pushf
inc
retf
dec
inc
mov
inc
jo
lahf
or
out
test
in
loope
xchg
cmp
jns
xchg
call
inc
sub
dec
sbb
jb
or
int3
jb
sub
pop
fimul
mov
sbb
sbb
dec
mov
lds
mov
enter
pusha
inc
(bad)
int3
inc
pop
neg
or
mov
jbe
addr16
push
or
sahf
pop
mov
jg
mov
fcomp
push
sbb
lock
cmc
fs
lahf
inc
mov
xchg
in
ficom
cmp
sub
arpl
add
xchg
repnz
in
pop
dec
xchg
popf
xchg
lds
call
(bad)
fwait
and
xor
in
bound
es
mov
pop
(bad)
call
inc
cwde
xor
scas
ror
aaa
fistp
dec
leave
das
addr16
adc
mov
stos
addr16
jnp
mov
xor
retf
test
push
popf
outs
pmullw
sbb
bound
sbb
xchg
lods
rol
stos
shr
aas
pop
test
jle
aad
lods
sbb
cmp
pop
outs
mov
xor
adc
mov
mov
imul
movs
push
or
mov
imul
jae
aam
iret
adc
push
sbb
(bad)
push
mov
pop
sub
cmp
xchg
xor
gs
xchg
cli
jp
jmp
xchg
push
push
lds
sbb
sub
mov
or
outs
sbb
pop
jbe
mov
(bad)
ins
lock
mov
inc
cmps
rcr
adc
or
sbb
in
sub
xchg
and
cmps
sub
cmp
pop
jmp
jp
pop
xor
mov
mov
ret
aaa
fldcw
inc
into
inc
or
push
pushf
jmp
jmp
stos
pop
sub
cdq
ffreep
ror
pop
aam
dec
dec
cmp
ret
jg
xlat
in
xchg
(bad)
push
fyl2x
hlt
out
and
adc
stos
ins
dec
pop
pop
jge
push
outs
cli
pusha
mov
sub
popf
ja
or
lock
es
hlt
mov
iret
enter
add
cmps
mov
add
xor
cmp
icebp
sub
mov
fucomp
and
addr16
daa
test
out
and
mov
xchg
cmp
icebp
cld
push
loope
loope
xchg
fwait
and
sbb
xchg
mov
hlt
sbb
or
ins
add
mov
adc
outs
scas
mov
mov
leave
jmp
mov
es
inc
and
dec
mov
inc
leave
push
addr16
test
add
repz
fldenv
enter
(bad)
inc
ja
add
hlt
or
vmovd
ror
sbb
ficomp
fbstp
mov
pop
in
mov
and
int3
sbb
xchg
retf
pop
stos
aad
sub
xchg
sbb
jae
div
push
sbb
iret
inc
and
aad
cmp
pop
das
add
call
or
or
sahf
int3
xor
xchg
and
push
adc
(bad)
movs
fdiv
pop
inc
dec
test
and
(bad)
mov
clc
jae
mov
or
or
inc
mov
push
mov
ins
or
rcr
mov
fisttp
stos
jbe
lock
mov
sahf
jb
dec
jl
dec
jae
out
sub
push
inc
lds
in
in
and
shl
pop
cmp
sbb
jmp
and
or
adc
mov
fcomp
add
imul
push
push
test
jp
bound
(bad)
jno
les
cmp
lea
ret
sub
jnp
scas
mov
es
inc
outs
mov
cdq
or
popa
shl
mov
xchg
das
push
(bad)
cmp
(bad)
ja
pop
bound
push
mov
sbb
test
cli
cmovge
jmp
pop
mov
ret
data16
cmp
hlt
and
inc
jecxz
bound
xlat
inc
sub
pushf
arpl
jle
ss
fwait
cmp
inc
xchg
dec
jnp
cwde
sbb
pusha
aam
inc
inc
shl
add
out
mov
xor
mov
xchg
div
push
xchg
adc
ins
je
sbb
or
jmp
mov
xchg
push
fist
push
mov
test
mov
and
cli
mov
mov
xchg
cli
in
in
jns
xor
icebp
sub
(bad)
aas
shl
mov
and
int
aad
add
pop
or
push
and
and
lods
(bad)
pop
xchg
cmp
sbb
mov
cli
pusha
adc
or
push
sub
xchg
mov
adc
stc
add
cmps
js
sub
stos
js
dec
jnp
(bad)
retf
xchg
xchg
pop
das
ret
shl
cmp
pop
xor
sbb
pop
daa
inc
stos
loop
lahf
mov
int
sub
pop
(bad)
sbb
pusha
and
adc
cmps
inc
jge
lods
shr
xchg
mov
pop
rol
dec
adc
mov
jne
push
xchg
xchg
jge
xor
dec
iret
push
sub
in
push
pop
inc
sbb
leave
and
lahf
or
or
mov
fimul
lods
pop
sub
mov
pop
out
into
sub
xor
call
int3
xor
inc
jmp
outs
enter
add
mov
pcmpgtb
shl
hlt
movs
cli
cmps
cld
push
jbe
fisubr
mov
and
out
and
and
push
fiadd
push
sbb
inc
add
shl
jo
loope
mov
aad
jo
jb
jae
push
into
sbb
cmps
out
adc
lahf
sbb
jp
push
xchg
into
mov
outs
loop
push
or
push
fcmovb
cmp
sub
pop
lods
jmp
push
pop
ins
jge
mov
popf
dec
mov
mov
add
add
xlat
loopne
test
ins
mov
sbb
(bad)
mov
mov
mov
js
adc
outs
mov
sbb
ret
sbb
popf
push
hlt
imul
add
gs
je
jnp
push
jb
sbb
and
push
js
call
sahf
jbe
pop
fs
fs
xchg
icebp
fsubr
movs
js
mov
lea
popf
sbb
mov
and
ret
aaa
fstp
ja
test
clc
push
leave
sub
jmp
cmps
inc
pop
mov
test
mov
nop
mov
dec
gs
xchg
int3
cmp
ja
int3
or
and
fwait
stos
cli
(bad)
imul
movs
add
dec
test
inc
cmp
data16
mov
int3
jae
xchg
sbb
loope
fdivr
retf
pop
retf
mov
mov
(bad)
mov
stos
mov
std
cmp
nop
jb
mov
mov
jmp
and
mov
push
or
push
mov
sub
ds
lock
in
and
and
lods
in
daa
loop
jg
xchg
imul
push
jmp
cs
retf
jo
and
sbb
call
mov
xor
jl
(bad)
out
jle
and
push
inc
sbb
popf
(bad)
movs
jl
mov
js
cmp
dec
pop
(bad)
mov
lods
loopne
add
adc
imul
and
cmp
ret
or
sbb
cmp
in
mov
add
push
cli
jo
sub
mov
sbb
mov
add
adc
cld
push
(bad)
sbb
fcomp
test
push
adc
mov
dec
gs
jle
ror
mov
ins
daa
pushf
jb
push
mov
xchg
aam
xchg
xchg
xchg
push
push
imul
add
pop
shl
xchg
adc
sbb
aas
call
mov
imul
in
mov
loope
das
pop
sbb
add
or
shl
sti
cmps
(bad)
stc
jge
push
in
mov
pop
or
adc
outs
sub
push
inc
cmp
sbb
push
cmps
ss
loope
sti
jge
xor
xchg
pop
xchg
mov
xlat
enter
pop
pop
mov
jb
pop
into
sar
cmps
dec
sbb
aam
pusha
iret
sub
fcomip
push
lahf
pop
out
aaa
jns
sub
mov
cmp
stos
mov
sub
rol
xchg
mov
sbb
cmp
adc
stc
outs
sbb
xchg
xchg
imul
call
sub
sub
add
rcr
push
or
movs
(bad)
pop
mov
push
inc
push
and
push
inc
iret
add
fwait
adc
arpl
repz
inc
aam
sbb
jae
cmp
cmp
dec
cli
adc
fadd
ins
sbb
jns
stos
pop
std
pop
ss
xchg
xor
adc
sbb
dec
add
mov
push
and
push
pop
cmps
xor
(bad)
add
fs
shl
mov
sub
pop
loope
mov
cdq
bound
push
add
sbb
mov
cs
push
dec
push
sbb
dec
xchg
sbb
push
adc
sub
scas
xlat
rol
jb
neg
call
push
sti
jmp
aas
adc
push
pop
xchg
push
mov
add
mov
outs
add
lds
dec
sbb
fidiv
jge
cwde
dec
movs
into
mov
fdivrp
cmc
outs
std
push
js
arpl
aam
pop
in
shl
scas
lds
dec
call
push
out
push
jg
not
mov
adc
call
test
dec
(bad)
mov
loopne
sbb
stc
shl
and
arpl
aam
fdivr
xor
jmp
xor
in
jns
pop
push
call
icebp
mov
add
dec
jmp
mov
sub
arpl
dec
sub
jmp
or
out
ror
adc
fild
movs
lea
sbb
lds
loope
push
aaa
pop
inc
cmp
loope
or
movs
lahf
movs
xor
pop
or
test
jns
push
inc
sar
mov
inc
add
mov
icebp
shr
cmp
mov
and
jbe
inc
iret
add
dec
inc
push
iret
jo
ret
jmp
xor
and
or
inc
rol
inc
sub
scas
push
inc
mov
out
out
ja
or
das
shl
sahf
out
(bad)
pop
loopne
and
out
imul
sub
mov
xor
and
enter
inc
sar
sub
push
ret
cs
ja
add
call
sbb
pop
in
mov
inc
ret
leave
jp
jmp
cwde
sbb
add
cmp
mov
int3
dec
shl
jp
ja
jmp
add
retf
imul
mov
cmp
or
adc
sbb
push
inc
mov
test
adc
sti
test
push
lea
jne
pop
jmp
mov
enter
sub
mov
and
pop
dec
jge
xor
xchg
pusha
es
sub
inc
xchg
test
sub
lahf
push
test
mov
xor
xchg
fld
sbb
and
cwde
stos
adc
xchg
inc
in
dec
xchg
aam
and
aam
out
cs
jge
fdiv
test
outs
add
xchg
ins
lgs
pusha
test
jp
ficomp
test
add
ins
cli
es
dec
int3
mov
xchg
pop
jmp
adc
es
xor
call
arpl
xchg
cmovnp
je
jnp
outs
adc
jns
dec
add
mov
lock
aaa
clc
xor
(bad)
(bad)
test
inc
jl
rcr
in
push
cmc
std
push
jp
xor
popa
out
sub
loopne
xor
push
cdq
(bad)
push
bnd
cmp
or
xchg
jl
jle
cwde
push
(bad)
pusha
sar
push
mov
mov
cli
stc
fnstsw
(bad)
repnz
push
nop
jnp
inc
das
ja
and
js
adc
push
push
xchg
mov
fadd
pop
adc
mov
cmps
add
pop
mov
push
push
pusha
cmp
cmp
(bad)
xor
idiv
test
cwde
cld
inc
mov
sub
cmps
(bad)
enter
loop
sahf
shl
inc
cdq
je
popa
jae
jo
les
int
test
sahf
js
jecxz
xor
push
lds
mov
div
push
shl
mov
or
and
scas
pusha
or
mov
bound
pop
call
(bad)
pop
inc
pusha
(bad)
push
sahf
mov
inc
lods
sbb
inc
push
arpl
dec
dec
mov
es
test
data16
mov
mov
or
das
ins
mov
in
imul
xor
les
repnz
push
fisttp
and
xchg
ins
xor
mov
jmp
and
fsub
test
mov
push
cmps
lea
mov
push
nop
push
mov
and
push
push
xchg
mov
pop
mov
mov
jnp
outs
imul
pop
bound
lahf
add
ins
xchg
xchg
outs
loope
stos
popf
lods
dec
out
mov
mov
dec
and
mov
mov
xor
xor
sub
cdq
stos
or
cdq
adc
xchg
push
cmc
(bad)
out
mov
cwde
jmp
adc
call
xor
xor
add
stos
and
xchg
outs
cwde
xor
dec
retf
les
aam
cmp
mov
jl
sub
das
pop
repz
cmp
iret
ror
pop
push
jbe
icebp
jp
jp
into
adc
pop
xor
cs
loope
pushf
test
out
rol
adc
mov
shl
and
push
mov
jg
mov
jecxz
icebp
dec
pop
xchg
loopne
lock
pop
sahf
jnp
ret
add
dec
mov
out
lea
dec
test
xchg
in
inc
fld
int3
sub
pop
push
ins
or
pop
popf
jmp
or
jp
ins
xor
cli
and
mov
clc
inc
call
pop
cmp
loopne
xchg
imul
retf
inc
sub
mov
pop
test
jo
imul
push
jmp
mov
ins
push
mov
sub
outs
mov
cld
cs
shl
fisubr
fldcw
dec
imul
sub
fidivr
add
xchg
into
jg
pop
pop
lods
dec
jo
mov
(bad)
inc
lods
inc
cmp
int
mov
dec
mov
push
aad
pop
sar
imul
jp
and
jecxz
xchg
pop
jecxz
xor
fs
outs
push
jmp
jp
div
xchg
and
xor
jnp
aad
inc
push
mov
cmp
rol
inc
jge
sbb
mov
adc
loop
mov
fwait
add
xor
sub
aad
fild
adc
(bad)
cld
js
adc
hlt
pop
in
aas
and
inc
mov
nop
test
retf
retf
mov
xchg
and
xchg
jl
dec
fcom
add
int3
retf
aad
push
xchg
rcl
ret
hlt
mov
nop
enter
mov
sub
pop
add
les
imul
pop
inc
and
push
sbb
or
stc
pop
push
add
jmp
sub
sar
cld
and
sub
push
add
xchg
dec
test
inc
cld
xchg
xor
push
dec
sahf
or
xchg
jecxz
inc
inc
push
push
fisub
les
js
xchg
push
cmp
xor
outs
dec
test
pop
push
push
xor
(bad)
shl
push
push
push
sub
dec
inc
adc
lea
xor
jo
mov
mov
sar
cli
mov
jns
jp
fwait
push
mov
adc
mov
sbb
call
dec
or
adc
call
mov
push
mov
jg
(bad)
push
ret
or
int3
(bad)
ja
sti
cld
imul
xchg
fcom
mov
jp
mov
cmps
arpl
sub
ja
repnz
sub
jl
out
add
fidiv
pop
adc
cld
and
test
fisubr
movs
rcr
in
mov
pop
out
bound
and
push
ins
hlt
(bad)
mov
in
xchg
mov
add
pop
pop
sti
cmps
xchg
xor
add
xor
jnp
imul
xchg
jecxz
jae
and
addr16
gs
adc
xlat
test
jmp
pop
sub
out
jne
cmp
pop
stc
ss
mov
and
popf
inc
or
stc
call
mov
or
cmp
lods
jmp
pop
sub
dec
mov
push
cmp
and
mov
sbb
push
pop
hlt
stc
arpl
(bad)
mov
addr16
cli
(bad)
lds
add
(bad)
std
fs
popf
adc
mov
sub
retf
add
mov
adc
(bad)
aad
ins
sbb
xor
in
loope
mov
or
push
xor
xchg
popf
mul
popf
fnstcw
push
xchg
pop
add
in
mov
lods
jb
push
jno
aaa
es
sbb
call
sub
mov
xchg
mov
sbb
cmps
cmps
mov
xor
imul
(bad)
sub
scas
hlt
xchg
sub
jecxz
nop
pop
sbb
mov
push
mov
xchg
or
jae
cwde
std
ror
mov
jg
xchg
jl
cmp
xchg
jmp
(bad)
mov
pop
call
test
stos
pop
ror
cdq
and
clc
push
leave
push
jo
arpl
stc
fwait
mov
push
(bad)
push
inc
inc
jmp
jno
inc
jle
add
test
(bad)
into
sbb
xor
jbe
cmp
sahf
cmpunordps
cmp
sub
and
jae
xor
cmp
mov
cmp
cmp
push
test
imul
push
dec
js
cmp
aas
dec
addr16
sub
aad
mov
inc
xchg
call
call
stc
jnp
ins
inc
xchg
xor
add
add
fs
das
mov
mov
or
jg
jecxz
and
popf
repz
adc
cmp
cmps
mov
push
fsubr
mov
jns
push
cmp
cmp
dec
sub
stc
and
mov
aad
pop
jecxz
mov
mov
mov
in
sbb
mov
lea
pop
dec
jne
cmps
sub
and
pop
jg
out
ja
or
dec
movq
jecxz
pusha
adc
push
iret
xlat
mov
inc
add
sahf
jnp
push
xchg
sub
push
cli
loop
cmps
dec
movs
je
(bad)
pop
or
jp
ret
aas
mov
gs
pusha
pusha
jp
sub
xor
push
sbb
icebp
call
adc
jge
push
push
pop
cmp
in
lock
jno
xchg
loopne
push
pop
jne
pop
dec
jecxz
push
add
and
fsub
jno
xchg
ror
sub
sub
add
je
pop
inc
mov
leave
xchg
(bad)
loope
data16
inc
xor
jns
scas
pop
mov
and
movs
mov
cdq
aam
push
xchg
outs
fwait
or
stc
popf
sahf
inc
adc
jp
xor
xor
mov
xchg
pop
xor
stc
dec
push
lahf
mov
pop
or
shl
psubsw
and
aaa
sti
cmp
lods
test
stos
xchg
aas
cwde
loop
dec
sub
mov
cdq
sbb
xchg
add
push
xor
out
xor
push
and
enter
ja
lea
movs
push
iret
test
cmps
stos
push
loop
mov
fdiv
jl
jno
gs
sbb
push
icebp
sbb
xchg
jo
nop
ss
test
aaa
out
mov
test
clc
or
cmps
mov
(bad)
and
cmp
xor
lods
pop
lahf
loopne
out
cmp
inc
xchg
mov
cmps
out
xchg
inc
clc
inc
cld
sbb
ins
mov
xor
out
and
pop
push
pop
test
pop
jecxz
or
cmp
neg
add
aas
xor
leave
loopne
sub
out
adc
jl
cwde
in
sub
test
lea
loop
sub
shr
inc
pop
jb
cmps
movs
pop
je
add
sub
or
(bad)
push
es
fisttp
push
pop
jmp
push
into
test
test
or
push
mov
fist
imul
sub
repnz
jae
sbb
push
mov
scas
aas
sbb
inc
ret
xlat
fldcw
(bad)
popa
mul
jmp
je
jmp
fidiv
rcl
std
ins
imul
dec
enter
or
cmp
in
fdivr
add
out
lods
sbb
pop
fucomip
test
push
and
sahf
cmp
out
inc
mov
push
imul
adc
sub
int3
or
int3
popf
mov
adc
and
lea
shr
adc
adc
not
(bad)
push
or
aam
inc
ins
ret
push
xchg
(bad)
or
hlt
inc
scas
jle
mov
jb
lea
xchg
cmp
jbe
ret
push
aad
jmp
(bad)
popf
xchg
pop
jmp
std
sub
sub
mov
fs
cmp
call
xor
mov
push
bound
cwde
add
or
sbb
push
pop
push
adc
sahf
mov
mov
or
sbb
cli
inc
sbb
xor
pop
jl
ja
pop
mov
adc
adc
pop
cs
in
lds
inc
mov
inc
out
jae
test
je
mov
sub
pop
loope
data16
push
and
pusha
out
jne
out
dec
sbb
inc
sub
mov
test
in
leave
jmp
je
arpl
or
fcomp
jne
ss
loopne
imul
pop
addr16
and
xlat
test
mov
push
xor
or
shl
repnz
retf
dec
sub
addr16
ins
(bad)
out
adc
xor
jl
jb
outs
(bad)
mov
adc
loope
xchg
sbb
aas
retf
(bad)
rol
jnp
stc
jg
lods
xchg
dec
pop
sar
xchg
inc
xchg
js
sbb
popa
pop
mov
jmp
addr16
sbb
jge
mov
test
div
fld
lahf
loop
dec
aas
jecxz
jg
nop
xor
(bad)
sbb
xchg
cs
sbb
pop
xchg
mov
add
retf
xchg
gs
pop
mov
pmullw
mov
sbb
(bad)
cmc
xchg
scas
das
xchg
mov
jo
xchg
sub
jecxz
mov
aad
push
ret
xchg
push
repz
inc
cdq
rcl
imul
stc
ss
aaa
fnstsw
push
shr
fimul
sbb
(bad)
repz
dec
hlt
jle
lds
dec
fadd
scas
cmps
out
call
imul
mov
test
push
(bad)
fabs
mov
scas
ins
add
out
icebp
adc
dec
cmc
stc
inc
add
ja
out
lods
pop
pop
rol
aas
xchg
retf
mov
adc
mov
cld
jne
xchg
xchg
push
cmp
test
cwde
sbb
cmp
or
or
das
into
call
mov
movs
call
sar
jbe
adc
cmp
sub
fcomp
shl
pop
jne
repz
mov
jmp
ret
add
test
call
xor
xor
push
in
and
or
out
add
mov
loop
pop
mov
jl
push
mov
inc
aas
(bad)
hlt
test
xchg
arpl
lods
loopne
xor
xor
xor
retf
fnstcw
push
push
mov
into
shr
fist
jp
inc
or
jnp
jl
cs
xchg
jp
gs
stc
xchg
dec
sar
ins
fcmovnb
jno
scas
lea
pop
inc
inc
pop
lahf
inc
sub
mov
jle
cwde
pop
mov
xchg
cmp
cmp
cmp
pushf
xor
pop
pop
ror
dec
stos
sahf
push
(bad)
mov
mov
ret
mov
retf
test
cmp
cmp
mov
test
sub
scas
(bad)
xor
das
add
xor
inc
xlat
movs
xchg
push
repnz
imul
pop
sbb
popa
add
ins
and
clc
outs
push
dec
stos
lds
pop
scas
mov
cli
jbe
mov
pop
pop
pop
jl
adc
sahf
or
mov
sahf
cs
retf
je
(bad)
sti
jne
je
and
push
pop
das
sbb
lods
popf
pop
jb
imul
adc
dec
and
rol
pusha
xor
aad
or
push
ret
into
out
mov
nop
lds
jl
and
cmc
fst
jne
mov
sub
gs
mov
or
mov
xor
pop
cli
dec
stc
aam
cli
retf
push
cmps
daa
cld
or
fld
lock
adc
addr16
daa
in
adc
nop
pop
cmp
jmp
ja
and
mov
retf
mov
call
jecxz
(bad)
adc
ins
loop
leave
xchg
mov
loopne
push
push
adc
lea
mov
fidivr
adc
mov
jo
ja
ins
rcr
gs
icebp
push
mov
stos
cmps
or
push
fistp
add
inc
sub
stos
stc
and
adc
jg
shl
mov
add
mov
lods
ret
mov
inc
mov
xlat
into
xcrypt-cfb
cmps
out
xchg
jae
int3
inc
bound
sahf
adc
out
mov
cmp
(bad)
jp
xchg
and
and
js
int3
mov
xchg
cwde
jmp
in
ret
jnp
mov
lods
sbb
add
popa
ja
mov
and
ss
jge
in
ror
dec
adc
sbb
imul
(bad)
sti
xchg
inc
nop
inc
leave
fwait
pop
fcom
fld
mov
cld
or
lea
sbb
jnp
shl
bound
cdq
fadd
sub
mov
pop
(bad)
js
push
(bad)
stc
cmps
cmp
mov
outs
movs
lods
jmp
sbb
cmps
dec
movs
(bad)
xlat
mov
movs
shl
cmps
ins
ret
popa
sbb
imul
and
sbb
retf
dec
cs
cmp
mov
lods
stc
dec
add
cmc
aaa
shl
lahf
lods
mov
dec
and
je
scas
or
or
jecxz
or
xchg
jbe
ss
imul
xor
enter
arpl
add
fmul
jmp
out
addr16
sbb
jne
mov
lods
add
and
in
mov
sbb
xchg
call
or
jmp
mov
mov
ds
jmp
and
loop
push
inc
popf
mov
movd
test
xbegin
jle
dec
and
mov
xor
mov
loope
pop
sbb
cmp
adc
(bad)
mov
jns
ret
xor
adc
cmp
xchg
cmp
mov
inc
pop
fcom
(bad)
xchg
sub
push
inc
mov
fldenv
cmp
dec
xchg
retf
rcr
repz
not
sub
pop
pop
leave
retf
movs
jp
data16
xchg
sbb
pusha
push
imul
sbb
jns
or
fs
std
xlat
ficomp
mov
jnp
xchg
in
test
ins
sti
cmp
cmp
cmp
aad
mov
add
mov
jb
je
fidivr
xchg
xchg
outs
inc
mov
add
xchg
leave
or
jbe
xchg
mov
mul
mov
aaa
clc
mov
nop
cmp
xor
jle
jecxz
fnstsw
les
aad
jle
push
add
test
xchg
popf
test
cmp
push
js
ja
mov
shl
jle
dec
int3
stos
jae
xchg
push
push
xchg
inc
sbb
cmp
push
and
push
hlt
stos
je
test
ins
jb
cwde
and
or
mul
ins
out
out
adc
ret
cwde
fisubr
jle
ret
sub
cli
cmp
pushf
mov
nop
mov
jnp
lds
jns
mov
sub
repnz
mov
pop
pop
outs
aam
lds
rol
cmps
mov
cmp
popa
dec
repnz
xor
mov
fsubr
(bad)
mov
jmp
clc
push
push
dec
fnstcw
std
xchg
inc
scas
in
mov
cmp
cdq
jg
rcl
ins
push
xchg
adc
push
pop
push
jp
aas
std
les
popf
push
and
test
mov
xor
xor
std
bound
pop
sti
pop
add
rcr
leave
daa
adc
(bad)
mov
fsubp
cmc
fnsave
pop
(bad)
das
add
fmul
cmps
icebp
xor
inc
jnp
int
xor
add
xchg
in
or
xchg
lahf
add
nop
sub
push
aad
in
std
mov
lods
adc
imul
xlat
mov
movs
and
inc
push
fist
lock
sti
movs
lods
mov
pop
and
cwde
pushf
mov
in
mov
jmp
sar
out
mov
stos
shl
clc
ror
mov
mov
(bad)
hlt
loope
test
cmp
cmp
ror
jle
xor
sub
or
sbb
fidivr
xor
sbb
jge
dec
and
(bad)
mov
add
enter
or
call
inc
ja
neg
cs
loope
inc
jnp
in
dec
js
and
repz
xchg
movs
bound
xchg
imul
mov
in
jg
dec
jg
scas
sahf
mov
or
(bad)
loop
or
xchg
clc
pop
out
fs
inc
jne
add
std
mov
aam
int
sub
std
mov
xchg
sbb
fbld
sub
aas
mov
dec
scas
fdiv
int3
jnp
inc
fadd
imul
mov
xor
stos
xor
mov
pop
adc
sbb
jns
ins
push
jbe
pusha
pop
sub
add
in
dec
push
mov
mov
jge
add
fist
mov
outs
pop
test
scas
pop
(bad)
hlt
in
imul
inc
iret
int3
fdivr
sbb
pop
push
sbb
test
sbb
mov
add
sub
ret
dec
outs
jmp
or
loop
ins
xchg
in
adc
es
ins
pop
xchg
out
xor
pop
(bad)
mov
in
iret
xchg
xlat
jecxz
ror
push
out
mov
fisub
repz
outs
icebp
fist
xchg
aam
xor
mov
ins
nop
scas
xchg
and
jmp
adc
repnz
in
ror
mov
mov
mov
ins
test
push
jge
shl
cs
jg
iret
dec
fs
aad
loopne
pop
mov
sub
sti
jmp
dec
mov
pushf
shr
inc
mov
mov
cmps
pop
pop
jns
pop
sbb
hlt
in
jp
dec
nop
pop
stc
enter
pop
dec
pop
dec
cmp
fimul
test
sub
into
std
(bad)
repnz
inc
popf
out
lock
fidiv
(bad)
ins
pop
lahf
out
stc
and
mov
cmp
mov
js
ret
pop
popf
mov
sub
add
pop
popfw
jns
jmp
pop
add
mov
jae
mov
and
push
xchg
mov
or
mov
scas
je
and
popa
in
lahf
hlt
sbb
push
dec
lea
aas
push
fld
cmp
push
mov
icebp
jle
or
fwait
(bad)
jge
or
hlt
xchg
xchg
sbb
xlat
push
push
inc
jmp
fild
xchg
inc
(bad)
jo
xchg
mov
dec
leave
dec
call
mov
test
mov
mov
mov
into
dec
and
sub
jns
cmps
iret
fmul
mov
or
iret
jmp
test
frstor
adc
ins
pop
or
add
stos
fwait
jb
vcvtdq2pd
cmp
fbstp
into
in
inc
call
adc
jne
dec
or
jno
cdq
sub
loop
cwde
clc
call
sub
sub
mov
add
in
push
cwde
add
or
mov
lds
xchg
mov
shl
or
scas
adc
dec
ss
(bad)
sub
fcomp
cld
mov
xchg
xchg
jae
sub
movs
jbe
not
cmp
ins
imul
popa
xchg
jmp
jecxz
inc
push
push
cmp
inc
mov
mov
(bad)
adc
mov
jne
xchg
lods
out
stos
jo
sti
mov
ins
je
(bad)
out
xor
bound
shl
retf
dec
shrd
aad
add
sbb
pop
in
or
rcr
outs
inc
dec
enter
pusha
hlt
pop
dec
pop
jmp
push
cmp
push
cdq
xchg
ja
aas
idiv
cmc
es
fs
dec
mov
jecxz
pop
inc
cmp
jae
or
xor
mov
test
push
sahf
inc
adc
lods
adc
fwait
pop
ja
das
push
(bad)
movs
std
ja
mov
ret
and
cmp
mov
je
push
out
fadd
ds
fcom
mov
jne
and
mov
mov
mov
int3
mov
jb
pop
push
add
push
dec
cmp
mov
dec
jge
dec
push
push
out
pop
or
xchg
in
jmp
call
inc
in
push
into
xchg
scas
mov
repnz
adc
pop
sbb
xchg
adc
jo
inc
or
jmp
push
cli
int3
shl
pop
je
dec
add
xchg
sub
dec
sbb
hlt
stos
push
mov
jmp
aaa
cmp
add
mov
sub
pop
repnz
jl
add
inc
mov
das
ret
xor
jo
sbb
cli
sbb
add
in
inc
mov
ins
add
inc
push
pop
out
xor
adc
lea
cdq
nop
or
cmps
neg
sub
stc
cli
sub
adc
fs
dec
fsub
adc
jbe
mov
jnp
xchg
inc
js
pop
jg
lock
jmp
xor
dec
add
pop
jo
les
push
adc
mov
pop
jecxz
pop
arpl
jmp
std
mov
cmps
mov
xchg
push
inc
jle
xchg
dec
inc
inc
imul
or
pop
fcmove
(bad)
fs
xchg
dec
mov
push
add
cld
scas
cs
mov
imul
outs
xor
ds
mov
int3
lock
out
xchg
outs
pop
sub
leave
xor
sub
or
dec
push
cmp
lahf
lds
loope
lds
clc
test
push
int
aad
aaa
inc
inc
or
das
jo
iret
jle
inc
add
gs
mov
adc
sub
outs
xchg
xor
inc
or
(bad)
adc
test
arpl
repz
jns
xchg
(bad)
sbb
adc
lods
pop
push
push
cmp
xor
jnp
arpl
sub
nop
add
nop
fwait
or
aaa
fmul
retf
loopne
or
shl
dec
push
arpl
cmp
popa
mov
fs
xchg
popa
add
mov
pop
add
pop
sub
sub
pusha
jbe
cmp
retf
imul
inc
sub
imul
fmul
add
pop
cld
or
test
xlat
fadd
jecxz
iret
out
int
fsub
mul
ret
pop
mov
mov
push
aaa
ja
xchg
mov
dec
and
rdmsr
fwait
in
aaa
dec
and
test
outs
mov
in
xor
movs
sbb
jg
ss
mov
in
or
inc
hlt
pop
jns
jmp
cmc
inc
xchg
ja
and
in
pusha
daa
in
xchg
test
jnp
neg
pop
out
xchg
mov
sbb
(bad)
xor
loope
repz
inc
xor
stc
in
and
mov
ss
aad
mov
sahf
pushf
dec
loop
inc
adc
clc
fmul
xor
jnp
sub
cmp
pop
addr16
jo
int3
cmp
adc
adc
test
jbe
shr
pushf
jno
cs
xchg
iret
xchg
cmp
clc
stc
rol
mov
inc
cmp
dec
sub
inc
cmp
in
mov
jmp
fadd
ret
rcr
and
stos
scas
enter
or
sbb
cmps
jg
ds
xor
pop
push
in
jg
ror
inc
(bad)
iret
stc
cmc
xchg
sar
pop
push
adc
jbe
push
pop
jae
fwait
repnz
ret
jp
loopne
pop
cmps
jb
and
fidiv
arpl
cmp
jmp
mov
mov
sub
sub
pop
aaa
sti
cmovae
or
rcl
mov
ret
movs
add
aas
xor
(bad)
pushf
int
pop
jne
jmp
cwde
push
mov
cmp
popa
or
push
sub
(bad)
in
sbb
(bad)
ins
cmp
mov
(bad)
jl
retf
iret
dec
jecxz
inc
mov
fld
adc
cmovae
adc
rol
jmp
pusha
aam
xor
xor
cmc
ds
and
fdivr
push
mov
clc
add
test
mov
int
cmp
cmp
mov
rcr
push
data16
adc
adc
outs
clc
cmp
aas
xlat
pusha
mov
or
pusha
clc
xchg
add
pop
fsub
(bad)
xchg
xchg
rol
outs
daa
les
popf
jmp
mov
ret
push
sbb
(bad)
js
jmp
js
dec
in
inc
rcl
pop
jae
or
imul
aas
shr
std
or
dec
dec
and
mov
fidiv
jl
jbe
or
mov
cmp
jle
das
mov
sub
mov
push
movs
popa
jb
loope
mov
out
fsubr
lahf
iret
adc
mov
push
xor
mov
out
outs
fisubr
ficomp
pop
loope
adc
aaa
sub
mov
push
mov
mov
jp
mov
sbb
pusha
push
in
cmps
shl
aaa
iret
mov
das
fwait
xchg
mov
xchg
imul
dec
fisttp
out
sbb
mov
sbb
sbb
pop
bound
mov
in
call
ror
jge
xchg
sbb
call
cdq
cld
sub
xchg
(bad)
xor
mov
pop
in
mov
push
pop
pop
mov
imul
mov
xchg
push
fdiv
mov
(bad)
cmc
sbb
rcl
cmp
mov
add
das
dec
sbb
(bad)
cmp
ret
and
jo
and
outs
sub
jmp
xchg
xchg
les
adc
cmp
popf
add
out
in
enter
fadd
gs
in
jl
call
pop
mov
jle
lea
dec
jno
pop
mov
inc
fwait
lds
repnz
inc
add
hlt
fs
mov
push
push
call
ins
adc
add
pop
mov
fs
xlat
pop
mov
mov
jp
test
in
clc
xor
rcl
adc
xchg
sti
sbb
mov
mov
mov
sbb
lock
mov
(bad)
dec
cdq
fsubr
inc
mov
test
mov
jbe
vmread
pop
fisttp
scas
or
jge
adc
lds
movs
mov
mov
pop
inc
cmps
ins
xchg
ins
aam
lods
dec
aad
je
jle
aam
and
lahf
push
pop
mov
daa
(bad)
jne
jne
int3
daa
pop
adc
gs
mov
cmp
int3
xchg
sub
add
adc
call
pop
out
test
test
sbb
xor
adc
mov
fdivr
leave
push
or
jmp
xor
dec
inc
scas
(bad)
sbb
push
fmul
in
in
repz
xchg
xor
movs
adc
pop
jns
js
loop
repnz
out
nop
and
pushf
push
jae
inc
daa
cmps
hlt
dec
stos
add
adc
imul
push
jmp
jle
enter
fisub
std
js
cmp
jbe
clc
pop
pop
pop
dec
sti
pop
mov
iret
adc
push
ins
(bad)
adc
aad
leave
popf
jne
in
and
leave
xchg
mov
jne
arpl
mov
inc
test
add
stos
aam
pop
fidiv
adc
inc
sar
xor
popa
mov
cld
lods
and
scas
mov
int3
jae
push
inc
(bad)
div
scas
mov
add
push
dec
inc
mov
inc
jnp
std
repz
jecxz
lock
pop
sbb
pop
dec
ficomp
xchg
jle
cmp
loopne
mov
xor
int
add
push
xchg
test
mov
out
scas
popf
test
call
or
and
call
loop
cmp
aam
jecxz
pop
bound
pop
xchg
nop
test
iret
fldenv
xchg
inc
xchg
adc
pop
mov
mov
popf
lods
mov
in
daa
push
out
mov
cmp
cmp
or
in
cli
popf
jno
fnstenv
addr16
pop
call
mov
lods
sbb
push
mov
sub
fcomip
xchg
into
and
xor
mov
dec
fcom
fidiv
mov
arpl
push
lock
inc
call
leave
ins
icebp
fmulp
imul
stc
add
and
and
push
inc
cmp
loop
lahf
test
push
inc
ret
ret
cmps
mov
icebp
and
ret
mov
sub
push
hlt
add
shl
mov
dec
je
push
push
inc
ins
imul
rol
lock
sbb
push
stos
xchg
push
dec
adc
mov
jbe
and
es
push
leave
loop
add
dec
sbb
cmp
adc
retf
retf
cmps
and
xor
adc
out
push
push
dec
mov
sahf
fs
je
inc
(bad)
call
arpl
jp
out
dec
pop
cmp
mov
icebp
xor
in
sahf
(bad)
sar
add
repnz
repz
xchg
stos
jns
adc
scas
pop
pop
shl
inc
in
sub
sub
fdiv
pop
jecxz
loop
fs
dec
js
lahf
jp
test
ss
mov
aam
adc
sub
and
jne
add
sub
inc
scas
add
and
test
loope
out
shr
jmp
mov
dec
jmp
cmp
stc
mov
and
xlat
sub
repz
add
xchg
test
pop
repz
iret
push
mov
sub
cmp
movs
xor
inc
lea
xor
cli
loope
test
je
out
adc
mov
sub
dec
jmp
stc
cmp
hlt
xchg
pop
pop
jne
int3
adc
xor
gs
aas
(bad)
mov
rcl
cmp
shr
push
je
aad
mov
or
stos
cmps
pop
and
xchg
ret
fldcw
mov
jb
(bad)
std
xor
mov
mov
pop
sbb
loopne
loope
ret
aas
ja
shr
mov
xor
jl
mov
in
sub
lahf
or
sub
jl
pop
repnz
shr
or
dec
xor
jle
ja
test
iret
lock
fistp
nop
in
in
xlat
mov
xchg
add
sbb
pop
das
mov
ror
jnp
or
sbb
mov
leave
or
jb
push
mov
fld
sub
jl
or
rcr
dec
inc
je
test
inc
mov
sar
add
lea
ins
mov
xor
inc
mov
(bad)
fnsave
ds
fld
cmps
and
jg
dec
push
in
fdiv
inc
sub
xor
push
das
jns
and
adc
(bad)
(bad)
imul
inc
sbb
sti
mov
iret
adc
nop
jae
sub
loope
iret
and
cs
xchg
(bad)
ss
mov
int
mov
dec
addr16
xchg
jbe
arpl
sub
pop
jno
add
xor
popf
push
jecxz
sub
cmp
push
leave
push
cmps
and
xchg
mov
(bad)
das
pop
dec
mov
xchg
enter
push
inc
sub
push
in
lock
ret
pop
jo
adc
retf
cs
dec
je
lds
bound
imul
or
test
retf
mov
xchg
imul
fdivr
fcmove
dec
cld
cmp
popf
scas
test
or
aaa
das
sub
jnp
mov
xor
sbb
mov
in
retf
lahf
xchg
xchg
lock
lea
pop
dec
out
call
out
scas
aad
(bad)
ins
mov
push
test
and
enter
(bad)
mov
sub
xchg
int3
mov
fcomp
in
cs
inc
(bad)
daa
fst
pop
pop
(bad)
iret
test
loop
mov
jnp
or
mov
add
lock
enter
inc
js
sub
xchg
mov
or
retf
xlat
mov
adc
outs
out
push
push
jl
mov
int
sbb
push
pusha
mov
outs
mov
icebp
jl
int3
jo
sub
mov
jmp
cmps
fsubr
iret
jmp
sub
mov
pop
jbe
imul
fnstcw
xor
mov
pop
jecxz
jmp
sub
dec
js
std
sub
std
mov
cmp
mov
out
push
inc
in
and
fnstenv
xor
and
pop
mov
jbe
cmc
and
enter
or
jne
dec
aam
in
mov
loope
pop
mov
adc
jp
loopne
dec
push
jl
ins
into
js
in
and
inc
and
loop
ja
or
add
into
neg
dec
mov
hlt
dec
lock
mov
and
dec
mov
stos
cmp
repz
xchg
cmp
stos
ins
inc
xchg
test
jp
xchg
dec
imul
sahf
mov
xchg
sub
ja
jmp
movs
fild
cmp
out
dec
pop
pop
push
jnp
je
lea
push
cmp
mov
sbb
int
add
sub
lods
fadd
mov
jle
ss
shr
inc
ja
shr
(bad)
loopne
es
mov
adc
xlat
imul
outs
jl
fild
loop
call
mov
mov
test
inc
iret
aad
mov
add
mov
gs
das
jmp
jne
shl
jb
rol
dec
js
inc
test
daa
(bad)
mov
call
cmp
aam
out
pushf
or
ret
inc
aad
les
jb
cmp
sbb
leave
and
xchg
sbb
pushf
xchg
xor
cmp
adc
jg
push
and
cmp
push
into
push
and
aam
sbb
movs
mov
jmp
push
push
leave
xchg
neg
mov
mov
ror
fldenv
push
rcl
cmp
adc
mov
mov
call
jmp
pusha
xor
mov
(bad)
retf
cld
mov
mov
idiv
or
push
retf
ins
push
stc
imul
nop
cli
hlt
sub
inc
stos
ins
outs
mov
or
std
daa
mov
hlt
aaa
add
cli
iret
movs
lods
jge
sbb
pop
pop
push
add
cmp
ret
(bad)
fst
dec
cdq
jae
ja
mov
xchg
adc
mov
dec
push
mov
xchg
(bad)
mov
lds
xchg
add
mov
push
mov
pop
mov
cdq
lods
mov
lea
or
mov
(bad)
dec
clc
xlat
in
ins
cmp
sbb
mov
retf
out
enter
mov
add
jb
jge
test
xchg
les
dec
rol
leave
stos
jmp
popa
dec
rcr
(bad)
push
xor
adc
std
stc
xor
and
sar
fistp
and
(bad)
hlt
xchg
je
pop
fsub
xor
xor
adc
data16
shl
shr
sub
sbb
jno
jg
mov
cmp
ins
cmp
hlt
xchg
xor
and
gs
jb
rcr
aam
push
in
dec
add
call
test
cli
imul
sub
loop
mov
test
mov
int
fdiv
xchg
je
and
xor
adc
iret
mov
pushf
fs
ret
js
sbb
xchg
out
push
nop
and
cs
jnp
mov
(bad)
in
aas
xor
div
das
inc
fucomp
mov
push
and
mov
into
jmp
push
sub
sahf
xor
sub
xchg
fmul
packssdw
pop
adc
and
add
pop
call
xlat
cli
jp
in
ins
mov
sbb
pop
mov
arpl
out
jne
jecxz
mov
cld
inc
ror
sub
test
out
popa
jb
mov
pop
clc
sub
iret
pop
add
jecxz
mov
ds
std
add
and
mov
sahf
shl
call
lahf
test
mov
xchg
sub
popa
mov
push
mov
or
leave
sbb
shl
add
mov
stc
test
push
stos
mov
sbb
xchg
ret
fdivr
cmc
les
mov
adc
adc
xor
shl
lock
push
push
fild
les
and
sub
loop
jmp
fadd
stc
enter
fwait
push
lea
jae
gs
popf
mov
pop
or
mov
pop
and
fs
ficom
xor
outs
pop
sub
sbb
stos
daa
sbb
loopne
dec
in
shr
les
loope
mov
test
fisub
cmp
lea
adc
ss
fistp
mov
aaa
into
push
sub
gs
into
xlat
jmp
scas
jle
dec
push
scas
xor
sub
stos
js
aas
pop
mov
adc
fbstp
clc
in
dec
xor
retf
adc
mov
repnz
mov
fiadd
and
push
sbb
mov
push
arpl
cmp
nop
in
rol
loope
pop
addr16
das
or
mov
out
cld
mov
dec
(bad)
jecxz
mov
clc
and
bound
push
and
add
in
push
or
and
inc
mov
pop
in
(bad)
sub
loope
sbb
retf
dec
sbb
pop
div
bound
test
mov
mov
pusha
mov
out
(bad)
sub
pop
pop
mov
push
add
jecxz
bound
dec
int3
dec
test
mov
push
imul
lods
sub
inc
dec
add
shr
call
repz
and
(bad)
(bad)
fmul
jg
lock
sti
fldenv
dec
pop
xor
inc
imul
mov
pop
ret
add
xor
xchg
and
leave
aaa
aas
(bad)
xor
aas
adc
dec
or
push
adc
jmp
mov
iret
push
ds
movhps
jmp
es
mov
xor
lahf
mov
push
mov
jecxz
(bad)
lock
ss
loop
sbb
pusha
dec
sub
out
jecxz
jp
inc
repz
mov
and
inc
or
jp
repz
xchg
mov
sbb
inc
add
cmp
sti
in
jg
sbb
mov
jnp
(bad)
loopne
sub
cmp
jmp
sbb
mov
shl
mov
mov
sar
pminub
jb
xchg
and
mov
aaa
fs
jle
(bad)
(bad)
cdq
dec
push
adc
arpl
sbb
(bad)
fsubrp
fdivr
out
jo
mov
pop
xor
frstor
stos
xor
popa
sbb
adc
jle
jbe
lahf
mov
test
inc
data16
push
cmova
test
hlt
cld
add
sub
xchg
cmps
pop
(bad)
fcomp
jno
mov
fdivr
sbb
xchg
stos
mov
rol
leave
fidivr
fld
cmp
daa
and
mov
js
jecxz
mov
test
mov
je
ret
nop
and
das
mov
lods
cs
fisub
mov
sbb
mov
jmp
sahf
movs
mov
shr
adc
in
push
dec
bound
mov
and
cmc
cli
cmps
popf
fdivr
jmp
mov
adc
xchg
push
mov
cmp
cdq
jle
cld
jecxz
dec
pop
inc
out
sbb
ins
iret
dec
adc
std
int
mov
sub
and
out
repz
les
xor
les
fcom
mov
push
je
sbb
and
jl
pop
mov
cmp
sub
sub
xlat
inc
pusha
fucomip
icebp
int3
lds
inc
jno
in
push
sar
mov
dec
inc
jmp
js
push
std
adc
cmps
pop
mov
(bad)
xchg
cmovp
and
mov
fs
sub
push
inc
out
hlt
pusha
out
mov
mov
push
sbb
mov
mov
fldcw
movs
inc
ins
push
rcl
ror
cld
test
fcomp
cmp
inc
test
push
pop
jg
test
sbb
fs
jno
sub
lahf
adc
std
mov
push
xchg
and
sbb
idiv
adc
push
inc
fwait
jecxz
bound
xchg
sbb
test
add
ins
out
pushf
(bad)
jb
sub
shl
pop
gs
xchg
repz
daa
(bad)
in
pop
sbb
shr
stos
cmp
xchg
mov
xchg
xor
nop
push
ja
sbb
and
mov
cld
push
pop
pop
sub
dec
push
fs
mov
xchg
pop
ins
mov
dec
and
(bad)
sahf
shl
(bad)
cmp
lea
lods
or
sub
inc
(bad)
in
or
xchg
(bad)
push
add
inc
pop
cwde
fs
into
stos
sbb
push
push
jmp
ins
loop
in
imul
jle
idiv
imul
in
xor
mov
in
dec
xchg
fisttp
xchg
aas
dec
add
sti
jno
jns
neg
push
scas
sahf
arpl
mov
faddp
pushf
ret
cld
sub
push
retf
jp
fisttp
dec
add
scas
and
lds
hlt
(bad)
in
cmps
pop
(bad)
jmp
stos
sub
or
leave
sbb
jb
hlt
dec
xchg
fwait
xchg
pushf
ret
(bad)
push
lahf
cmp
int
pop
lahf
aad
mov
dec
loop
push
cld
push
jbe
adc
add
xchg
adc
cdq
pop
cld
data16
inc
pushf
xlat
sbb
(bad)
bound
inc
retf
sbb
push
ret
repnz
jmp
add
addr16
lahf
pop
addr16
popf
in
lock
pop
cdq
enter
dec
jge
dec
(bad)
iret
xchg
sub
(bad)
loopne
popf
test
(bad)
in
jb
push
cmps
mov
xor
enter
cli
cdq
mov
dec
int3
loopne
jmp
cs
or
sub
adc
mov
mov
int
lods
shr
fcmovnu
cmp
ror
mov
jp
in
adc
lods
push
jl
pop
cmp
xor
out
aad
inc
outs
inc
das
jae
into
jae
mov
xor
xor
sbb
cld
jecxz
and
pusha
adc
lahf
or
pop
cmp
xchg
adc
daa
call
loop
mov
mov
xchg
dec
jbe
retf
test
adc
mov
out
jbe
mov
push
mov
ss
pop
or
mov
ins
or
mov
sub
popa
inc
lods
xlat
pop
push
adc
movs
mov
pusha
mov
ret
cmp
lods
push
and
cmp
xchg
(bad)
xor
ret
(bad)
sbb
movs
retf
push
jp
inc
not
xlat
popf
cmps
push
loop
adc
in
or
imul
pop
je
and
mov
lock
ds
and
sbb
push
mov
push
fidiv
shl
pop
cmp
xchg
call
jp
jnp
icebp
jno
sbb
rcl
mov
sbb
inc
fild
xchg
xor
(bad)
rcl
and
and
pop
cdq
sub
push
clc
pop
push
mov
ja
out
pop
sub
(bad)
dec
cmp
stc
out
ja
test
cwde
ss
jp
push
adc
rcl
push
sbb
aas
pop
cmc
mov
mov
out
adc
int3
inc
mov
push
(bad)
(bad)
cmp
inc
shr
dec
aad
ja
xchg
or
cmc
repnz
sbb
adc
cmps
xor
lds
imul
rol
xchg
cmp
into
jle
add
mov
mov
pop
dec
xor
dec
stc
mov
test
loop
pop
ins
push
push
mov
push
ja
xchg
and
and
dec
stos
xchg
push
call
push
fmul
xlat
jmp
(bad)
jno
inc
xchg
xor
add
push
hlt
out
in
sbb
cmp
dec
outs
call
in
inc
jmp
sub
mov
pop
push
pushf
jae
mov
sahf
jo
inc
jnp
retf
push
adc
sbb
pop
pushf
retf
sub
ret
stos
inc
mov
and
pop
shl
jecxz
mov
and
mov
inc
imul
jnp
loope
loope
mov
jae
pop
call
pop
mov
cmps
(bad)
test
sar
fdivr
into
and
sbb
ds
sub
mov
and
js
jnp
adc
repnz
fld
inc
mov
mov
or
sbb
int3
mov
ret
mov
ins
add
adc
pop
mov
daa
popa
cwde
aad
add
(bad)
movs
jmp
loope
cmc
cmp
cli
cmp
add
mov
hlt
scas
outs
in
jp
stos
pop
cmp
rol
ja
dec
cdq
cmps
les
mov
fadd
dec
loopne
and
jge
iret
bound
in
out
push
outs
mov
fcmovnbe
jle
popf
mul
push
inc
dec
clc
pop
add
daa
addr16
adc
test
ror
call
or
sub
and
pushf
xchg
mov
sar
sbb
stc
jbe
mov
mov
int
inc
cwde
and
mov
in
xor
fwait
cmps
add
add
sub
inc
pop
or
cmp
repnz
out
test
cs
test
ins
in
xor
xchg
lds
cmp
sbb
xchg
repnz
(bad)
es
jne
cmp
jecxz
sbb
loope
xchg
inc
mov
xor
fldln2
in
repnz
out
popa
inc
cli
pop
int
dec
pop
popf
test
adc
mov
xchg
pop
fs
(bad)
jae
inc
push
fnstcw
inc
sub
inc
xor
cmp
mov
in
sub
loop
fdivr
xchg
jbe
in
das
fimul
inc
sub
int
sub
ror
sub
std
sbb
adc
cmp
pop
mov
cmc
mov
or
rcr
stc
mov
mov
sub
out
mov
pop
ret
pop
mov
and
xchg
fsub
push
js
scas
and
or
lock
call
or
outs
fstp
adc
in
pop
lods
mov
ret
push
sbb
sub
sub
ret
xchg
stos
loopne
jl
xor
mov
add
inc
pop
(bad)
in
adc
sti
out
mov
sub
test
popf
fistp
stc
add
inc
daa
adc
es
jmp
or
adc
sahf
fisttp
xchg
mov
dec
clc
scas
loop
mov
retf
push
test
fidiv
movs
pop
mov
jp
mov
fbstp
push
pop
inc
iret
push
ins
imul
sbb
movs
movs
mov
mov
lock
ja
pop
mov
shl
popf
das
scas
pop
sub
push
cmps
and
xchg
cli
adc
int3
cmp
sub
nop
xor
into
jp
(bad)
add
lds
fidivr
ret
lahf
(bad)
and
and
nop
call
dec
dec
sub
fwait
sbb
add
adc
push
imul
movs
hlt
or
mov
jns
cmps
in
cmp
int
in
sbb
or
aas
mov
lds
jecxz
or
imul
test
pop
mov
jbe
jne
mov
test
(bad)
fisttp
push
neg
add
call
daa
mov
and
cwde
xor
cmps
loop
push
out
mov
xchg
add
mov
std
xor
movs
cli
mov
aam
rol
call
add
int3
retf
ja
push
idiv
sti
call
add
mov
mov
data16
repz
fbld
aam
aam
in
ret
int
maskmovq
mul
iret
sbb
fisub
fidiv
lock
das
mov
dec
and
outs
or
aad
xor
iret
push
sbb
pop
ret
dec
sub
retf
lods
call
(bad)
xchg
push
popf
mov
mov
adc
mov
mov
xchg
iret
bound
jle
shl
iret
dec
std
lahf
jmp
sbb
sub
jg
inc
mov
scas
int3
cmc
fwait
xchg
xchg
ds
repz
fld
rol
jp
adc
fldenv
adc
lea
xor
and
xchg
adc
scas
enter
sub
imul
push
jecxz
sub
push
add
int
popf
loopne
movs
rcl
or
fimul
xor
inc
and
out
and
add
cmps
out
sbb
(bad)
call
pop
add
dec
movs
mov
lock
mov
bound
retf
lods
jnp
xchg
adc
xchg
push
push
sub
mov
arpl
adc
je
mov
cmp
lahf
lock
aad
pop
add
pop
mov
pop
mov
cwde
int
jg
push
pushf
inc
inc
(bad)
mov
cmp
pop
clc
mov
jmp
pop
int
pop
dec
and
into
add
sbb
cs
jbe
push
out
jo
mov
nop
mov
ror
test
jnp
pop
into
sub
xor
je
aam
cs
mov
lods
pop
and
es
push
cld
add
cmp
sub
test
popa
leave
jl
addr16
mul
mov
gs
mov
hlt
(bad)
cmp
popa
push
shr
dec
outs
mov
aaa
mov
sar
out
push
scas
push
xchg
mov
jg
mov
in
cmp
dec
push
popf
sub
inc
hlt
cld
arpl
inc
int3
mov
cmc
sbb
mov
sbb
test
in
neg
rcl
aad
add
(bad)
int3
jo
mov
out
lahf
loop
fwait
lock
mov
(bad)
pop
sar
add
mov
xchg
xlat
xchg
jno
push
push
sbb
inc
fsub
(bad)
std
jl
mov
or
dec
push
test
icebp
dec
test
rol
add
dec
scas
jge
pop
pop
push
add
push
cmp
xchg
cdq
aaa
cs
fisubr
mov
ins
in
sub
shr
adc
mov
push
sub
ret
dec
mov
nop
xor
adc
cmp
cld
out
cmp
sub
add
inc
and
xchg
mov
inc
jmp
les
add
(bad)
add
sahf
xor
outs
adc
pop
mov
pop
pop
fisubr
movs
iret
aaa
adc
jp
inc
sub
ror
cdq
shufps
lock
fdiv
fwait
cmp
xchg
pushf
retf
or
xor
into
aaa
jmp
jmp
sub
or
fs
jne
retf
fst
inc
test
popf
test
inc
je
int
sbb
fwait
movs
mov
mov
test
lahf
out
lods
jnp
or
jl
pop
inc
jae
(bad)
mov
repnz
dec
push
mov
ret
add
xor
(bad)
(bad)
into
jl
mov
mov
lods
or
push
sbb
loop
das
dec
xchg
aad
repnz
adc
js
(bad)
scas
in
in
xchg
cwde
xchg
jne
(bad)
xchg
add
lea
adc
pop
pop
shl
xor
ins
ja
out
repnz
xor
push
dec
xor
push
ror
pushf
and
cmp
popa
imul
mov
cmps
loopne
test
add
fiadd
scas
test
mov
movs
mov
gs
sub
inc
or
(bad)
mov
loopne
jmp
not
sbb
mov
(bad)
add
pusha
xor
cmps
call
into
mov
xchg
xchg
sbb
sbb
adc
inc
mov
inc
jecxz
aad
pop
enter
and
sub
shl
bound
xchg
std
or
ret
(bad)
not
test
or
sub
cmp
push
int3
add
cmc
dec
xchg
fldz
retf
push
mov
and
inc
push
push
cmp
ret
(bad)
sar
mov
scas
dec
pop
xor
xor
aas
jbe
adc
addr16
fwait
into
mov
sub
lds
or
repnz
cmp
lods
out
ret
jmp
test
jne
and
out
ret
xchg
pop
(bad)
int
and
add
imul
popf
not
mov
ret
scas
(bad)
aam
xchg
cmp
popa
xchg
stos
jl
and
out
movs
pop
dec
adc
mov
xchg
jl
lods
call
test
cmp
enter
sbb
fcom
sub
adc
js
and
lock
mov
xchg
loop
cmc
xor
ja
repz
xor
popf
movs
pop
xchg
pop
rcl
dec
push
stos
cmps
fimul
lea
outs
xchg
jo
inc
stos
arpl
(bad)
or
mov
xchg
dec
dec
sbb
cwde
pop
(bad)
(bad)
nop
in
pusha
ins
pop
and
gs
sti
pusha
jo
jmp
in
cmps
mov
pop
aam
pop
jmp
shl
dec
fabs
inc
mov
cs
mov
jno
(bad)
cmp
test
loope
and
pop
fisttp
shl
mov
inc
call
or
add
mov
stos
stc
cmp
or
mov
xchg
sub
xchg
loopne
fdivr
loopne
mov
adc
ret
xacquire
(bad)
sub
and
mov
maxps
lods
mov
dec
xchg
lds
inc
pusha
jno
or
sub
add
lods
ror
shl
sub
shl
push
jne
xacquire
pop
xor
repz
push
add
scas
scas
hlt
ret
imul
xor
sub
dec
push
xor
and
pop
adc
mov
push
adc
mov
cwde
adc
mov
scas
sbb
push
mov
inc
sbb
mov
das
sbb
xlat
(bad)
mov
mov
mov
(bad)
rcr
xchg
add
icebp
pcmpgtw
ja
div
dec
pop
dec
mov
xlat
in
sbb
jns
inc
dec
cli
mov
(bad)
rcr
pop
adc
pop
xor
push
in
jbe
lea
xor
pop
jne
repz
mov
jns
xchg
(bad)
mov
movs
pop
shr
mov
or
sbb
pop
mov
fs
lds
xchg
cmps
(bad)
and
lods
push
popa
and
enter
mov
call
jmp
(bad)
cs
inc
inc
das
fsubr
in
add
je
mov
lds
shr
popf
es
mov
push
leave
dec
ins
ret
jae
mov
xchg
xor
fcomp
push
cs
int
jecxz
inc
popf
addr16
scas
lods
push
(bad)
orps
xor
adc
dec
scas
lea
cmp
sub
in
jb
int
inc
sub
push
std
test
sub
cmp
push
shl
add
push
add
adc
inc
cmp
dec
inc
cmp
fstp
mov
and
cmp
xor
mov
fsub
dec
xor
(bad)
and
and
retf
mov
out
mov
cdq
lea
adc
push
test
fpatan
push
iret
push
mov
or
(bad)
movs
rcr
mov
mov
shl
aam
add
push
jg
adc
xchg
loopne
pop
mov
and
dec
test
mov
mov
lock
pusha
add
xor
mov
xor
or
jmp
adc
dec
std
cs
push
xchg
aam
sbb
sti
imul
inc
jns
push
(bad)
push
and
dec
add
jmp
mov
and
jle
pop
rep
in
jl
fucomi
out
int3
retf
idiv
mov
inc
jae
sub
xchg
loopne
stos
xchg
daa
pop
push
xor
inc
fsubr
push
xchg
movs
test
ret
movlhps
scas
inc
inc
push
movs
mov
out
stc
mov
xchg
into
xchg
ror
call
push
aaa
push
rcl
shr
ins
ds
fcmovnb
mov
cmps
cmp
int3
mov
aam
js
in
jecxz
xchg
sbb
jecxz
mul
inc
mov
bound
push
ja
cwde
lods
mov
sub
mov
push
adc
sub
addr16
mov
mov
xor
fwait
sbb
pop
jmp
jge
jmp
mov
mov
mov
(bad)
cmp
inc
into
inc
std
pop
mov
mov
mov
outs
enter
sub
and
aam
fistp
gs
stc
xchg
add
push
or
in
mov
xor
out
fwait
push
out
jp
xchg
xor
fcom
adc
lods
(bad)
loop
mov
scas
repz
sbb
mov
mov
push
pop
in
(bad)
xchg
inc
inc
test
rcr
(bad)
push
cmp
sub
jmp
xor
xchg
test
sbb
or
aad
imul
mov
in
int3
test
outs
int
mov
and
mov
mov
fstp
add
js
in
fcomi
(bad)
sub
push
call
xchg
cmp
xor
mov
in
popa
fild
les
push
mov
outs
jmp
jns
sbb
popf
jo
or
scas
sub
leave
adc
(bad)
mov
pop
dec
dec
repz
sub
and
cmp
inc
rcl
inc
stos
mov
sbb
in
lods
mov
mov
cmp
add
retf
mov
(bad)
addr16
pop
jecxz
lahf
hlt
and
loope
movs
popa
scas
test
aam
inc
dec
mov
nop
jno
popf
out
xor
pop
push
mov
jae
push
add
std
and
pop
je
es
and
dec
test
sub
xchg
sbb
pop
mov
cmps
gs
cmp
add
push
call
test
bound
cs
dec
imul
hlt
push
sbb
push
rcr
into
aam
pop
pusha
pop
or
push
pop
jb
(bad)
int
mov
add
xor
jle
sbb
imul
sbb
rcr
in
jo
sub
inc
or
fs
(bad)
ja
leave
aaa
mov
(bad)
aad
inc
ss
inc
rcr
mov
jo
retf
inc
leave
(bad)
lods
dec
retf
fwait
inc
outs
inc
mov
retf
fisub
and
ins
sub
mov
cmp
gs
out
mov
lods
xchg
mov
das
jno
inc
pop
xchg
fsubr
jne
adc
call
sahf
adc
jo
fisubr
or
lods
repnz
ret
in
adc
(bad)
dec
adc
in
dec
mov
outs
lds
test
rol
movs
add
(bad)
movs
or
cmps
add
sub
test
cmp
stos
cmps
loope
sbb
or
inc
cwde
ret
add
cmps
into
loopne
iret
dec
retf
pop
adc
ficom
jae
add
and
mov
add
cdq
arpl
sti
dec
pop
sbb
inc
lods
mov
(bad)
test
inc
sbb
mov
inc
mov
popf
imul
sub
into
mov
xor
xchg
hlt
shr
or
xor
mov
cmc
js
imul
or
xchg
jecxz
cs
mov
je
mov
retf
jno
movs
bound
aad
into
dec
or
jo
(bad)
cli
jmp
jle
jne
dec
pop
jg
sbb
rcr
mov
cmp
out
dec
jo
repnz
loopne
in
dec
cmp
shl
fs
xlat
adc
sub
test
popa
aas
das
dec
inc
and
neg
arpl
mov
adc
jnp
cmp
out
out
retf
push
push
ss
mov
imul
popa
jmp
(bad)
imul
bound
cmp
popa
sbb
jp
xchg
scas
mov
mov
icebp
cmp
and
xchg
mov
in
sti
adc
inc
cmp
or
mov
sbb
pop
cmp
loope
cmc
sbb
not
push
imul
sub
test
adc
sbb
shl
das
dec
adc
lds
push
in
xchg
push
jmp
dec
retf
aaa
mov
push
loop
out
mov
neg
jbe
and
ds
mov
mov
sbb
(bad)
xor
lahf
call
adc
cmps
jmp
pop
out
mov
cmc
das
xlat
imul
inc
and
movs
and
cmp
pop
mov
es
or
in
jecxz
pop
out
inc
jg
mov
(bad)
sbb
neg
dec
inc
lahf
adc
out
adc
cmc
mov
or
pushf
push
jle
mov
daa
(bad)
enter
cmps
pop
imul
inc
cs
xchg
shr
ja
pop
mov
jmp
(bad)
outs
push
dec
xor
sub
daa
fs
mov
jp
lods
add
fidivr
mov
mov
fld
adc
cmc
mul
dec
xchg
mov
int3
je
dec
xor
cmp
lahf
xchg
repnz
iret
(bad)
in
call
fs
xor
arpl
das
lods
cmp
aas
mov
dec
sub
ds
in
arpl
or
sub
(bad)
popf
inc
ficomp
xor
cmc
rcl
dec
sbb
add
rcl
dec
dec
cs
pop
fwait
jmp
and
add
and
pusha
fistp
jmp
in
inc
xor
dec
cmp
dec
ret
pop
pop
out
cmp
int3
add
int
test
sbb
hlt
mov
mov
jo
adc
fsubr
jl
cmp
das
pop
cmp
cmc
xchg
push
cmp
mov
loope
test
push
mov
lods
(bad)
pushf
out
lods
mov
aas
fxtract
sbb
call
hlt
lods
xchg
sub
push
neg
add
sbb
dec
std
icebp
(bad)
jnp
jo
stos
arpl
jmp
dec
dec
in
(bad)
xchg
cmp
retf
jmp
(bad)
cmp
dec
les
inc
fiadd
ret
sub
out
repnz
cmp
test
test
rcl
mov
mov
loop
push
fcmovbe
cmps
push
neg
push
std
ins
jge
dec
scas
(bad)
in
jns
(bad)
pop
(bad)
dec
pop
into
mov
call
movs
scas
mov
lock
(bad)
cwde
mov
xor
cmp
inc
cs
pop
dec
adc
mov
or
mov
cmp
sub
pop
ficom
popf
test
xor
cmp
imul
push
nop
popf
mov
loop
mov
xchg
cmp
sahf
push
aad
and
mov
jb
push
cwde
stos
sub
mov
mov
xor
aaa
jbe
retf
mov
dec
nop
das
push
xchg
xor
lods
xor
sbb
adc
fadd
mov
xchg
mov
call
pop
out
js
stos
xlat
dec
add
cmp
stos
mov
mov
xor
xor
nop
repz
aas
out
cmps
dec
jle
lahf
sahf
scas
stc
ret
xlat
sti
dec
add
fiadd
sbb
push
mov
mov
(bad)
and
push
mov
push
xchg
ss
fdivp
or
lea
imul
sub
mov
jb
pop
icebp
(bad)
std
cmp
xchg
add
mov
sti
pop
(bad)
cmp
inc
adc
mov
outs
mov
leave
jo
ret
das
and
repnz
out
xor
or
push
sbb
pop
sbb
xchg
loope
leave
cmp
xor
mov
jle
(bad)
sbb
je
push
cs
das
and
xchg
icebp
(bad)
mov
inc
hlt
in
cmp
pop
ja
dec
adc
rcl
neg
not
push
cmp
sar
mov
repnz
loope
xchg
(bad)
pop
xchg
(bad)
xor
mov
pop
int3
mov
pop
push
in
fild
fcmovnbe
jns
vxorps
mov
mov
sbb
push
ror
and
call
push
mov
dec
mov
int3
pop
xchg
sbb
xchg
int
xorps
gs
sub
stc
push
and
jae
mov
mov
hlt
dec
out
rcr
lods
imul
leave
inc
cmp
mov
retf
pushfw
jnp
pop
je
shl
leave
out
push
arpl
xor
mov
cld
or
and
sbb
mov
sub
data16
or
lock
(bad)
bnd
inc
movs
jnp
cwde
inc
jp
(bad)
test
mov
paddb
gs
mov
inc
jns
adc
xor
mov
ins
jne
inc
fsubp
mov
jb
jl
call
ror
stos
out
jecxz
loop
rcl
pop
scas
adc
cwde
aad
ds
inc
fcmovnbe
mov
inc
scas
in
in
sbb
xor
mov
out
or
test
mov
cmp
adc
inc
fdivr
ret
lock
pop
stos
xchg
int
call
cmps
xchg
in
call
ror
bound
jl
adc
sbb
out
bound
mov
les
mov
ror
push
mov
dec
mov
pushf
mov
xor
push
or
cld
jl
mov
lods
pop
outs
xchg
call
or
retf
or
add
repz
fimul
(bad)
imul
mov
pusha
mov
or
mov
jo
mov
cmp
daa
ds
es
loopne
call
jns
cmps
fisubr
lea
sbb
dec
shl
pop
fild
xchg
out
pop
outs
rcl
out
enter
stos
xor
shl
arpl
mov
mov
jg
xor
inc
leave
mov
dec
sub
shl
pop
mov
fmul
push
lds
je
dec
pop
mov
je
enter
xor
sbb
pop
add
inc
inc
sahf
(bad)
sti
and
ret
(bad)
xchg
sub
jl
mov
in
xchg
ror
lods
jo
mov
jmp
aam
lods
push
fnsave
arpl
or
out
out
sub
adc
aaa
fst
mov
and
cli
movs
ret
fcom
outs
inc
sbb
cmc
adc
inc
cmp
cmp
fwait
mov
xchg
pushf
mov
les
js
cmp
into
scas
in
aam
xor
inc
dec
test
cmp
sbb
xchg
fucomi
jmp
ss
push
mov
mov
(bad)
sti
addr16
js
adc
mov
cmp
pop
jle
in
mov
adc
aad
mov
adc
pop
call
outs
pop
fisub
mov
xchg
add
adc
add
std
adc
jecxz
and
add
(bad)
lahf
mov
mov
scas
(bad)
inc
jge
jae
cmps
ss
or
(bad)
mov
test
cdq
cmps
aad
ffree
data16
in
dec
sub
dec
jmp
xchg
test
lods
xchg
jg
fs
retf
and
cmp
daa
and
jmp
sbb
jae
mul
or
mov
mov
pop
mov
dec
movs
xchg
gs
test
mov
das
sbb
push
(bad)
mov
repnz
loopne
imul
mov
stos
lgs
push
(bad)
repz
retf
cs
(bad)
pushf
movs
(bad)
xchg
sahf
fidiv
jnp
imul
mov
pop
nop
fnstsw
imul
adc
cld
out
cmp
sub
adc
pop
ja
mov
in
shl
sbb
sub
(bad)
mov
mov
xor
shl
adc
div
shr
cli
cli
je
sub
lock
push
out
sub
jae
adc
addr16
or
cld
js
es
cmp
or
push
cmp
dec
pop
push
pop
pop
test
jecxz
cs
repz
(bad)
ins
sub
jp
cmp
cdq
xor
sub
pushf
mov
add
mov
out
call
mov
arpl
rol
dec
xor
movs
mov
sub
push
adc
mov
cli
mov
cwde
ins
mov
inc
mov
sub
sub
push
mov
jge
stc
clc
sbb
pop
call
xor
add
jmp
inc
(bad)
pop
dec
cmc
std
scas
call
(bad)
cmc
das
mov
in
push
ret
test
mov
push
mul
sti
jae
lods
js
add
retf
outs
(bad)
nop
inc
xlat
xchg
movs
into
inc
or
retf
mov
shr
shl
sub
inc
jl
in
cmc
mov
mov
(bad)
pop
gs
imul
retf
sbb
js
sar
jnp
sbb
add
cmp
retf
add
shr
cmp
arpl
push
cmc
push
push
push
lods
test
push
push
sbb
mov
aam
out
xlat
mov
cmc
sub
mov
(bad)
sar
imul
lahf
sti
jb
fsub
call
outs
in
inc
xor
mov
in
mov
mov
pusha
das
out
test
add
jb
mov
push
bound
mov
jae
push
push
data16
in
inc
(bad)
pop
and
jmp
push
fadd
scas
push
out
ins
cmps
jne
rol
psllq
jne
mov
out
repz
cmp
pop
mov
mov
mov
mov
xor
jne
mov
pop
fistp
add
sub
adc
inc
ficomp
shl
cwde
push
ret
enter
jmp
(bad)
mov
sub
out
fld
repnz
jo
sar
and
sbb
sar
pop
push
jge
std
dec
idiv
(bad)
pop
addr16
ja
pushf
jno
fwait
and
icebp
jp
push
mov
iret
sbb
add
cdq
pop
mov
push
pop
cmp
movs
xchg
mov
sbb
pop
ja
mov
int3
pop
popa
repz
lds
add
xchg
das
cmp
and
in
jmp
xchg
inc
add
sub
cmp
gs
mov
out
or
loopne
jbe
repnz
jg
sbb
pop
popa
pop
inc
mov
(bad)
mov
shl
sub
jg
jmp
gs
ficom
xor
(bad)
rcl
inc
xlat
mov
xlat
gs
cmp
icebp
lods
mov
out
push
inc
mov
cmp
xchg
cmp
hlt
loopne
(bad)
pop
cmp
cmp
dec
pop
add
retf
inc
pop
add
sub
test
add
rol
jnp
pop
test
adc
add
adc
fimul
push
pop
inc
inc
sbb
mov
sub
std
sub
mov
mov
or
sub
inc
push
and
out
test
push
push
idiv
add
(bad)
and
cwde
cmp
nop
stos
pop
jns
push
(bad)
mov
pop
push
and
fisttp
sbb
fild
mov
add
push
fs
push
jecxz
jne
adc
jnp
push
outs
lods
sbb
je
(bad)
cmp
arpl
ror
push
jle
and
lds
rcr
add
or
inc
sub
adc
add
jge
xchg
push
mov
mov
mov
mov
jecxz
xchg
push
cmps
mov
mov
sbb
pop
rcl
nop
jb
mov
ins
ret
std
xchg
sahf
add
mov
mov
cmc
xchg
add
outs
ror
push
ds
in
jmp
fist
aad
inc
pop
(bad)
jnp
or
test
setle
jne
dec
push
sub
mov
mov
(bad)
and
xchg
je
dec
jge
in
or
adc
call
cmp
cdq
fnstcw
adc
in
inc
fisub
fnstcw
rcr
outs
cwde
or
(bad)
push
mov
push
adc
push
test
div
mov
popa
ret
fnsave
and
push
test
lahf
and
xchg
mov
(bad)
das
sbb
jne
sbb
mov
and
mov
hlt
fdivr
cld
push
loop
xchg
out
fistp
mov
gs
daa
fistp
mov
jnp
mov
jl
outs
or
(bad)
sub
pop
cmp
mov
and
pop
sbb
adc
shl
mov
and
push
jae
jmp
in
mov
into
mov
xchg
jg
inc
ret
fisttp
push
jbe
in
add
mov
sub
mov
ret
mov
dec
push
lea
fild
pop
jp
xchg
ret
sbb
fwait
enter
inc
mov
xor
(bad)
dec
mov
mov
mov
es
stos
sbb
xor
cmovne
sub
or
xor
jg
sahf
(bad)
in
imul
inc
and
test
das
pop
mov
xor
xchg
pop
fcmove
xor
pop
push
push
pop
in
aam
and
cs
add
loop
hlt
cmp
push
dec
in
mov
cmc
int3
xlat
ins
cmp
xchg
dec
dec
cli
push
inc
xor
push
ror
mov
or
rol
and
out
rol
mov
and
add
nop
xchg
retf
ins
mov
sub
lahf
out
mov
mov
js
add
or
cmp
mov
xchg
out
mov
xchg
push
cmps
je
je
add
imul
jecxz
enter
mov
dec
rcl
jecxz
mov
add
xchg
adc
jge
ss
lock
mov
jbe
jnp
push
mov
fwait
and
fst
(bad)
jnp
xchg
pop
pop
cdq
stc
fistp
sub
mov
dec
cmps
xchg
jns
scas
xor
push
xor
push
adc
dec
lock
test
clc
call
jge
js
push
xor
adc
mov
arpl
sbb
shr
ss
sub
and
sub
lock
and
xlat
test
or
int
cmp
daa
ror
in
dec
mov
data16
adc
pop
jne
push
cmp
fisubr
mov
fidivr
cmps
test
cs
in
and
clc
add
ds
and
sub
cmp
sub
(bad)
xchg
xchg
jnp
push
xchg
pop
push
cdq
fldenv
aaa
inc
jbe
pop
jmp
xor
js
and
pushf
jo
cdq
push
dec
in
jb
test
sbb
dec
xor
in
push
mov
add
add
mov
mov
adc
sahf
pop
xchg
ret
das
mov
pop
mov
cld
add
xlat
ins
pop
ins
ds
cmps
or
pushf
sub
loopne
fs
mov
push
and
xchg
push
xchg
mov
xor
hlt
sub
ins
inc
ss
inc
arpl
and
pop
or
mov
cmp
sbb
(bad)
mov
inc
inc
into
les
je
cmps
ret
dec
jmp
and
(bad)
arpl
adc
scas
cwde
ficomp
aad
mov
xchg
fidivr
cmp
mov
add
mov
dec
mov
add
std
jmp
test
inc
and
mov
cmps
jl
pop
or
imul
je
cdq
fs
xchg
xor
xchg
out
xor
cmp
int3
int
repnz
mov
xchg
pop
jnp
bound
lahf
pusha
cmp
sbb
sub
ins
mov
test
jl
cmp
sub
inc
into
inc
jbe
std
call
add
xchg
inc
frstor
jecxz
add
adc
std
fnstsw
add
retf
mov
pop
xchg
push
pop
xor
mov
or
sub
ds
or
mov
je
and
stos
fiadd
ss
into
ins
xchg
gs
stos
or
push
movs
pushf
or
in
mov
push
xchg
mov
repnz
or
cs
repnz
je
jb
cmp
lods
int
rol
cmpxchg
jecxz
and
(bad)
jle
rcr
call
pop
outs
cmps
push
xchg
xchg
xchg
and
(bad)
lea
sbb
aas
cdq
and
mov
pop
sar
call
xchg
pop
rol
daa
mov
push
and
xlat
jle
fwait
push
push
push
mov
pop
test
pop
lods
adc
bound
mov
enter
test
cmp
adc
arpl
ja
jae
inc
into
or
loope
jg
jmp
xor
xchg
or
fmul
add
retf
dec
or
xchg
imul
retf
rol
sub
pop
sub
jns
add
test
test
ins
stos
addr16
cwde
sub
das
aam
cmp
je
xor
neg
inc
push
xor
or
pop
pusha
or
(bad)
pop
xor
sbb
mov
jge
or
rcr
push
xchg
jmp
pushf
in
or
xor
jge
test
imul
stos
xor
fdivr
or
xor
outs
add
mov
pop
std
mov
xor
push
lock
and
loopne
dec
dec
in
pushf
nop
cmp
ficomp
ja
pop
ins
mov
scas
ins
rcl
xchg
out
neg
or
and
ja
mov
aaa
aas
pushf
mov
push
inc
loop
shr
fs
or
sub
cmp
push
or
movs
ret
push
dec
repnz
pushf
inc
or
inc
mov
or
xchg
fisttp
jmp
pop
in
or
jns
sub
jmp
inc
xchg
mov
adc
xchg
pop
mul
(bad)
popf
pop
mov
hlt
scas
imul
or
add
sbb
xchg
jno
or
dec
pop
mov
adc
mov
mov
and
sahf
jl
pop
adc
mov
pop
add
leave
jle
xchg
mov
add
mov
outs
jae
adc
lock
adc
sub
xor
inc
push
ret
inc
push
rcr
mov
stos
ret
test
xchg
cmp
lock
pop
cli
addr16
popa
add
or
pop
jbe
pushf
sbb
sub
loope
ss
pop
add
lods
icebp
in
jecxz
outs
jne
and
xchg
fadd
push
outs
cmps
mov
or
adc
std
mov
and
movs
bound
cwde
(bad)
pop
push
push
push
scas
outs
call
addr16
cmp
push
adc
jmp
jg
es
in
and
xchg
rcr
aad
mov
xchg
pop
cmp
lock
cs
jnp
cmc
mov
(bad)
fdiv
sbb
jo
xchg
mov
inc
cmc
and
repz
div
or
push
test
and
adc
pop
(bad)
mov
or
out
jp
bnd
jg
hlt
inc
out
retf
mov
mov
mov
push
ss
js
sub
mov
mov
xadd
xchg
out
add
adc
jge
outs
or
push
ret
(bad)
cdq
clc
pop
jmp
jp
daa
loope
in
push
fwait
les
pop
or
fcomp
pushf
outs
or
stc
fwait
dec
jle
ret
cs
adc
mov
mov
and
in
adc
sbb
ds
jecxz
mov
aas
cmp
lds
rol
cmp
jmp
inc
add
jl
in
sbb
pop
push
test
mov
and
push
jns
add
retf
retf
jo
mov
xchg
test
lock
xchg
jnp
xchg
int
push
fisub
cmp
enter
mov
pop
movs
cs
enter
jb
xor
stc
aam
fst
shl
add
sub
xchg
movs
pop
or
jl
push
push
js
mov
add
ret
repz
ret
xchg
popf
data16
pop
sar
fild
cs
add
jmp
inc
cmp
jne
test
loopne
xor
rol
pop
push
gs
ja
inc
mov
sub
(bad)
dec
dec
into
int
out
push
add
cwde
mov
fiadd
and
add
fs
repz
fst
ds
jo
push
xchg
hlt
push
dec
stos
pop
mov
jge
push
ss
inc
test
and
scas
xor
pop
jmp
xor
(bad)
dec
xor
xchg
sub
sbb
cmp
dec
push
xchg
(bad)
fcomp
xlat
pushf
push
push
lahf
push
jne
pop
jae
inc
arpl
mov
sub
mov
jle
sbb
or
rol
cmps
push
cdq
push
adc
imul
fwait
and
scas
imul
popf
push
xchg
popf
ret
ror
dec
in
jo
cmp
mov
cmp
mov
xor
jl
js
add
pop
lock
iret
out
sti
loope
outs
mov
call
push
xor
(bad)
pop
xor
mov
mov
push
pop
and
scas
in
rcr
cmp
out
int
enter
ja
adc
fistp
mov
push
imul
xor
jmp
mov
and
cmp
out
xor
sahf
pushf
mov
dec
jl
push
fdiv
pop
nop
mov
push
jno
add
es
pop
dec
jno
(bad)
(bad)
pop
cmp
sbb
sub
test
cwde
fld
movs
ins
adc
add
es
xor
je
jp
mov
sti
push
xlat
dec
sub
jmp
mov
jo
mov
lods
and
jle
xchg
ror
fldcw
jmp
or
popa
inc
dec
popa
(bad)
mov
mov
jns
mov
into
scas
jle
sahf
iret
sub
imul
xor
ins
adc
data16
and
sub
pusha
jge
xor
dec
pop
push
mov
jne
xor
push
fst
cmp
push
neg
sub
icebp
or
cli
jg
fcomp
icebp
inc
jecxz
push
inc
ds
sub
push
dec
mov
xchg
les
repnz
cmp
jnp
nop
xchg
add
and
push
sub
dec
mov
fcmovu
cwde
hlt
push
ins
div
mov
mov
mov
call
fstp
and
jae
push
jle
push
jne
retf
movs
adc
pop
aas
shr
pop
adc
xor
popf
or
mov
ja
and
sbb
cmp
fwait
jle
pushw
movd
mov
int3
mov
xchg
call
or
cmp
clc
pop
jae
mov
push
stos
popa
lods
(bad)
push
inc
call
into
cmp
(bad)
mov
xchg
add
in
stos
or
xor
and
(bad)
(bad)
adc
cmp
dec
adc
push
ret
scas
ins
loopne
sar
repnz
xchg
mov
test
or
dec
mov
call
jge
outs
and
add
jno
jbe
in
shr
mov
je
out
imul
jno
(bad)
sti
pop
jle
xor
enter
mov
fs
icebp
mov
mov
cmp
mov
push
sub
adc
cmp
or
ret
jns
pop
jle
adc
sbb
icebp
mov
leave
arpl
mov
imul
test
sbb
push
push
sub
(bad)
push
mov
(bad)
cmc
fdivr
lahf
in
adc
jnp
mov
sub
mov
jecxz
repz
inc
and
and
or
cld
push
neg
movs
push
jge
in
and
sub
cdq
mov
pushf
loope
xor
ins
mov
mov
mov
pop
int3
(bad)
popf
dec
fwait
scas
rol
push
aad
scas
xchg
adc
mov
les
fwait
pushf
add
xchg
push
fcomp
fst
inc
data16
cmp
sbb
hlt
shl
cmps
push
ja
pop
add
fwait
mov
jge
jg
dec
sti
add
inc
add
add
pop
sahf
jecxz
dec
pop
test
cwde
mov
jns
xchg
pop
sub
into
nop
enter
cmp
pop
jmp
ins
ja
lods
inc
fadd
push
lods
fst
(bad)
jge
outs
cmps
xor
(bad)
adc
cmp
ja
ret
jl
mov
adc
movs
ret
cli
repz
cdq
inc
pop
adc
mov
aas
(bad)
xor
sti
(bad)
fs
(bad)
stos
cmp
rcr
fst
pop
jbe
jnp
inc
xchg
inc
inc
pop
pop
cld
mov
mov
gs
sahf
inc
sub
pop
xor
dec
aam
imul
dec
jmp
push
jmp
or
xchg
mov
or
(bad)
retf
pop
movs
leave
test
mov
xor
ins
sbb
stc
mov
cwde
es
push
dec
sub
sahf
inc
fist
pop
adc
jne
sub
push
jecxz
dec
cmp
add
cld
ret
std
xor
jp
(bad)
xor
jmp
xchg
fcomip
aas
call
mov
fstp
xchg
jle
dec
das
fisttp
mov
retf
sbb
lock
inc
jmp
mov
jmp
ror
dec
sbb
inc
sti
aam
push
imul
add
xor
loope
not
pop
pop
aaa
jo
rcr
(bad)
and
(bad)
push
repnz
sahf
pop
mov
test
jbe
out
push
or
push
in
fcomi
rcl
dec
push
pop
mov
loopne
outs
in
das
pop
inc
fistp
sahf
repnz
mov
adc
sub
test
(bad)
and
test
ret
mov
sbb
and
inc
cmp
xchg
sbb
xor
fdivr
mov
xor
test
adc
call
bound
aam
movs
imul
call
fdiv
test
je
dec
ficomp
sar
mov
(bad)
out
adc
jl
mov
repz
fs
inc
add
xchg
add
sbb
repnz
and
cmc
pop
jne
or
mov
fdiv
push
mov
pop
out
ja
bswap
xchg
mov
pop
xor
xchg
lods
mov
jge
mov
fwait
xchg
outs
or
cmp
inc
xchg
loope
hlt
mov
(bad)
dec
xor
mov
mov
out
mov
mov
push
xchg
push
push
aas
rol
data16
ins
out
add
or
push
jnp
fisttp
inc
xchg
call
dec
xchg
loope
fsub
cmp
les
ins
aam
sahf
ja
out
xor
jmp
mov
mov
aaa
or
adc
out
neg
mov
pop
sub
cdq
shr
xchg
ins
dec
cmp
ret
in
jmp
pop
aam
repz
dec
cwde
adc
pop
sub
mov
adc
xor
cmp
sbb
push
or
xchg
daa
add
pop
xchg
lahf
lods
jbe
test
mov
les
scas
inc
cmp
mov
dec
push
jnp
xchg
sar
imul
ja
push
daa
js
retf
inc
sub
pop
sub
mov
xchg
sub
adc
cmp
test
dec
loop
cmp
dec
push
out
iret
out
mov
sub
adc
loopne
and
xchg
ss
and
add
or
data16
cmc
and
fisttp
out
pop
mov
inc
fs
jp
cmps
imul
inc
enter
or
in
pushf
xor
lea
push
jno
out
jnp
arpl
idiv
adc
pop
push
pop
mov
inc
xor
repnz
jle
ja
jecxz
les
sub
int3
fadd
mov
dec
les
cmps
mov
(bad)
fst
xor
nop
shr
jp
daa
mov
mov
or
in
fwait
sub
cmps
add
or
lea
push
xor
pushf
dec
add
adc
mov
and
lds
inc
lds
xchg
sbb
dec
mov
dec
cmp
pop
lods
cmps
aas
test
sbb
or
in
push
push
pop
mov
bound
mov
or
cld
ins
mov
pop
push
int3
nop
and
retf
fild
(bad)
sub
jnp
lds
inc
inc
jns
out
pop
push
sbb
push
in
mov
jno
in
repz
inc
mov
mov
test
leave
popa
xchg
stos
cmp
dec
push
ja
sub
call
aaa
hlt
aaa
xchg
(bad)
fcom
clc
adc
xchg
pop
xchg
(bad)
add
retf
and
xchg
xchg
pop
fs
and
pop
jo
mov
out
pop
or
(bad)
(bad)
sar
add
lahf
fild
stc
leave
mov
imul
xor
and
inc
mov
cld
cli
mov
leave
pop
sub
mov
push
xor
xchg
inc
sbb
aaa
add
xor
mov
dec
mov
mov
or
popa
inc
ins
imul
xchg
adc
pop
les
cmc
(bad)
popa
test
cmp
sqrtps
xor
loope
scas
aas
test
cmp
mov
adc
aas
add
and
jcxz
dec
mov
sub
cmp
mov
lods
cmp
outs
outs
and
add
jo
out
or
ror
addr16
mov
fwait
iret
out
adc
in
dec
retf
xor
xchg
sub
loope
lods
xor
pop
add
push
xchg
xor
pop
jo
aas
stos
out
outs
sbb
jle
fldln2
push
pop
cmp
xchg
rol
mov
jmp
sub
pop
adc
ret
mov
sub
sar
iret
ror
pop
mov
fld
hlt
push
ret
dec
or
sbb
xor
cmp
dec
mov
ja
mov
je
xchg
mov
cmp
popf
pop
movs
sti
nop
push
jns
jl
add
out
xchg
lods
and
test
test
xor
or
fwait
xor
and
retf
int
retf
mov
ret
loopne
jne
scas
je
iret
js
jecxz
inc
lock
or
repz
leave
lods
iret
hlt
in
push
xor
stos
push
pop
mov
clc
popf
and
icebp
push
dec
repz
in
mov
pop
mov
mov
lds
stc
stos
outs
jmp
xor
mov
push
or
mov
or
jmp
in
rcl
lds
mov
dec
jnp
in
or
fwait
fwait
mov
mov
mov
loop
mov
push
cmp
outs
or
sub
bound
inc
loop
repnz
aaa
xor
aam
sti
mov
scas
mov
xchg
or
xlat
inc
data16
hlt
or
pop
pop
jo
stos
sub
mov
xchg
push
fistp
jns
push
test
add
cmp
xlat
jae
or
jmp
leave
push
cld
and
adc
dec
(bad)
fiadd
pop
bound
xor
iret
lea
xchg
add
into
pop
mov
cmp
fidivr
inc
xchg
leave
sub
xchg
xor
pop
int3
add
jg
sub
fcom
push
push
neg
test
(bad)
loop
or
cmp
les
sub
call
sub
mov
and
movs
retf
je
in
arpl
mov
mov
jp
outs
mov
sub
pop
lea
xor
nop
sar
mov
add
test
je
mov
mov
pushf
test
dec
dec
jge
out
jle
daa
inc
add
inc
(bad)
std
cmp
loop
jmp
push
cmp
mov
mov
add
jmp
jmp
cmps
repz
clc
scas
rcr
or
adc
push
fisttp
es
mov
dec
in
mov
mov
mov
and
dec
xchg
arpl
stos
shl
xchg
jne
ja
mov
mov
jmp
in
movs
or
jge
int
stos
test
fild
jmp
jecxz
mov
fsub
ret
dec
jne
mov
and
repnz
mov
and
in
jae
xor
pop
mov
and
sub
in
dec
dec
mov
jns
mov
jmp
ret
fs
cdq
cmp
mov
nop
pushf
sbb
mov
pop
idiv
inc
mov
les
pop
push
arpl
test
das
ret
mov
ds
sub
data16
mov
pop
push
dec
push
pop
pusha
jle
add
nop
dec
xchg
call
pop
xor
ja
xchg
movs
push
lea
and
mov
mov
lahf
or
fwait
sub
inc
fcomp
dec
xor
or
fild
push
and
mov
(bad)
cmc
xor
jg
retf
jg
jmp
addr16
dec
jmp
add
mov
pop
daa
mov
lock
dec
(bad)
mov
lods
jno
adc
adc
ins
mov
repz
mov
xchg
fs
push
push
jge
not
or
xchg
mov
daa
aam
ret
xor
jle
push
cmp
fs
inc
gs
call
shl
in
jp
retf
test
jbe
pop
out
arpl
xchg
add
or
test
sbb
cld
cs
aad
and
hlt
jmp
cmp
pop
pop
pop
mov
mov
inc
push
aam
adc
pop
fsub
daa
push
push
call
dec
cmps
fisubr
cs
mov
sbb
mov
and
pop
data16
mov
retf
dec
xchg
retf
repnz
popf
adc
ds
mov
test
leave
test
ja
sar
pusha
pushf
mov
xchg
push
imul
xor
add
scas
add
je
hlt
test
cmp
icebp
call
mov
jae
out
sub
iret
retf
cmc
inc
adc
ret
ror
pusha
pusha
mov
inc
int3
jae
cli
cli
pop
mov
imul
(bad)
sti
xlat
mov
fadd
xchg
mov
jnp
test
sub
or
push
or
mov
xchg
adc
test
iret
leave
mov
retf
movs
int3
mov
dec
push
adc
jp
dec
aaa
test
(bad)
in
scas
call
shr
shl
into
mov
mov
cs
dec
aaa
es
xchg
movs
jno
push
sub
push
jb
mov
jno
fs
stc
lahf
push
fiadd
mov
int
xor
and
(bad)
dec
rcl
mov
add
lea
sbb
fcmovnu
dec
cmp
aaa
fnstcw
push
jg
jb
or
mov
daa
js
das
(bad)
and
loopne
push
test
fwait
std
retf
sub
push
loope
xchg
jecxz
dec
lds
(bad)
and
in
sub
std
fsubr
and
aad
xor
cli
add
neg
push
push
sub
or
adc
movs
dec
xchg
rcl
hlt
mov
pop
mov
xor
dec
jecxz
or
sbb
ficom
inc
leave
in
pop
and
pop
pop
cdq
out
mov
fsub
aam
mov
cdq
clc
addr16
aad
jbe
les
sub
test
(bad)
jmp
fcmovnb
in
fsub
imul
mov
pop
js
jne
repz
adc
test
cmp
rcl
mov
xor
fs
and
loope
add
stos
inc
repz
sub
popa
in
imul
pop
dec
call
cmps
add
sub
neg
clc
pop
xchg
ins
(bad)
(bad)
mov
scas
addr16
arpl
shl
lods
jno
or
in
push
daa
pusha
loope
ror
cli
xor
inc
hlt
mov
dec
int3
add
xchg
pop
jns
mov
or
xor
xor
dec
je
pop
inc
shr
pop
push
stos
push
ret
rcr
pushw
dec
sub
pop
adc
cwde
ret
cmp
rcr
push
lock
or
sbb
mov
pop
dec
mov
(bad)
shl
hlt
les
(bad)
push
fnstenv
push
in
or
out
call
adc
mov
mov
jae
xor
pop
fwait
movs
stos
xchg
loopne
cdq
push
dec
in
popa
lods
adc
xsaveopt
test
and
xor
and
dec
push
fiadd
jae
outs
and
test
stos
lods
sti
call
enter
pop
aad
sti
xchg
scas
inc
cdq
icebp
fxch
aam
dec
(bad)
out
add
scas
mov
fst
scas
mov
jmp
ret
iret
pop
in
mov
mov
ss
pop
add
mov
cmc
xchg
(bad)
or
cmc
movs
jbe
sar
mov
icebp
fiadd
or
jbe
pop
xchg
xor
iret
enter
cmp
test
fsubr
and
xchg
dec
push
repnz
dec
(bad)
sti
mov
xor
lea
(bad)
push
cwde
bound
push
hlt
arpl
repz
nop
adc
adc
ins
mov
rcr
fistp
pop
outs
rcr
test
lods
dec
ffree
push
inc
icebp
and
aaa
les
mov
enter
pop
aad
inc
jl
jno
loope
out
add
dec
ror
push
cmps
fidiv
dec
dec
in
xor
cmp
dec
and
je
dec
sub
mov
jo
add
xlat
xor
aaa
push
aad
jecxz
xchg
cmc
pop
mov
add
push
sbb
mov
sub
dec
pop
push
movs
js
loopne
xchg
(bad)
sbb
sbb
dec
cmps
mov
inc
cmp
and
lods
(bad)
stc
retf
sbb
xchg
sbb
fist
pop
ror
add
sub
fld
mov
in
ins
adc
sbb
mov
dec
outs
in
xchg
adc
sub
jg
mov
fist
in
sbb
sbb
mov
jo
push
pushf
xchg
and
nop
cld
jne
adc
push
push
cmp
push
shl
pop
jnp
mov
mov
shl
gs
jae
dec
push
or
repnz
cmp
fsubr
in
jne
jne
inc
scas
rcl
jo
iret
jmp
leave
jae
call
push
jnp
mov
xchg
(bad)
ins
movs
ficomp
popf
loop
xchg
sar
shl
xor
mov
add
sbb
movs
jo
sub
cmp
arpl
jo
fidivr
mov
leave
out
or
push
pop
and
retf
and
mov
fwait
test
and
fsubr
jecxz
push
pxor
xchg
pop
jmp
add
sub
dec
and
jle
out
int
dec
inc
xchg
test
adc
inc
adc
push
xchg
mov
sub
dec
mov
mov
dec
sbb
hlt
dec
cmp
mov
test
and
dec
lods
mov
inc
clc
out
jae
adc
xor
mov
sub
push
pop
test
sahf
mov
sti
(bad)
stos
retf
push
sub
adc
add
or
cmp
xchg
mov
fstp
fidiv
push
sahf
push
dec
or
adc
mov
push
jae
mov
xor
or
sub
mov
mov
test
popf
fsub
rol
leave
sbb
mov
cmps
adc
inc
sbb
push
jg
adc
xor
pop
int
je
rcl
mov
mov
or
loop
mov
cmp
pusha
mov
popa
das
pop
div
jmp
sub
out
dec
outs
pop
or
out
xchg
rcr
sahf
(bad)
cmp
mov
into
popf
dec
repnz
test
fdiv
ror
add
pop
ja
sub
lahf
popa
shl
push
pusha
mov
(bad)
rol
fcmove
dec
outs
cmp
sbb
push
je
add
cmp
(bad)
shl
scas
xchg
pop
pop
mov
and
imul
xchg
push
inc
(bad)
shr
adc
pop
cdq
imul
mov
lods
mov
in
inc
sbb
sub
scas
out
fs
(bad)
sbb
and
and
movs
mov
jl
jns
stos
out
xchg
ret
jp
aas
in
mov
test
outs
push
fsubr
fistp
sub
outs
rol
xchg
shl
and
mov
lea
mov
mov
call
cmp
xchg
adc
inc
or
xchg
xchg
jo
out
lea
add
mov
xor
xchg
mov
es
adc
mov
add
pop
and
fs
popa
xchg
adc
inc
cmp
xchg
cmc
and
or
cmp
rcr
lods
push
mov
sbb
or
jl
(bad)
clc
nop
xchg
loope
dec
jl
push
mov
pop
dec
pop
cmp
into
or
fsubr
fadd
outs
leave
cmp
inc
mov
mov
repz
cmps
test
mov
jg
and
and
test
mov
dec
scas
retf
mov
jo
sbb
out
inc
or
pop
aam
push
sub
jmp
jbe
lods
mov
dec
cmp
mov
mov
mov
mov
dec
sbb
inc
shl
cs
adc
inc
xchg
mov
or
stc
adc
imul
cdq
ss
dec
dec
pop
ins
mov
fstp
sbb
hlt
cdq
outs
nop
sub
push
adc
rol
pop
int3
add
rcr
pop
rcr
int
sbb
adc
or
mov
mov
sti
inc
sar
les
jmp
xchg
xor
ficomp
movs
js
arpl
mov
xchg
pop
mov
inc
out
xchg
or
or
lock
lods
nop
inc
out
outs
jbe
xor
popa
and
je
mov
test
sbb
xchg
test
idiv
mov
or
dec
std
test
dec
aas
inc
rcr
fwait
je
sbb
add
int3
pop
in
cli
and
ror
inc
imul
dec
inc
push
adc
les
mov
loop
inc
call
lods
push
or
pop
ds
pop
jno
scas
jne
ins
pop
pop
jae
mov
adc
jg
lahf
test
or
jo
adc
test
pop
cmp
icebp
shl
out
sti
pop
mov
call
repnz
fld
leave
lahf
(bad)
xchg
inc
pop
mul
xor
dec
ror
jmp
movs
jns
ss
mov
cmc
add
enter
mov
out
cmps
inc
sbb
sub
stos
cdq
jno
movs
sub
lea
xchg
mov
outs
mov
loope
test
mov
stos
imul
mov
sub
push
xor
inc
pop
and
push
fs
mov
or
je
mov
jle
and
in
adc
inc
pop
mov
call
fwait
pop
push
imul
mov
mov
jnp
push
lahf
repz
pop
aad
jb
jmp
bound
xchg
or
int3
neg
in
mov
push
pushf
and
repz
push
js
stos
ss
jmp
adc
mov
mov
shr
cwde
inc
mov
fisub
mov
adc
repnz
retf
xor
adc
add
in
jle
push
push
int
or
(bad)
sub
xor
inc
pop
out
js
push
movs
jne
(bad)
in
fnstsw
mov
mov
je
retf
out
adc
daa
xchg
pop
xor
pop
xor
stos
jge
lods
push
mov
inc
jmp
jecxz
sbb
jl
imul
leave
mov
(bad)
ja
inc
fdiv
into
lods
(bad)
out
fnstenv
fidiv
inc
push
push
out
push
jle
in
popa
test
sbb
cs
adc
mov
shld
and
jmp
pop
popa
xchg
repnz
sub
iret
add
pop
mov
mov
adc
(bad)
rcl
or
mov
mov
jne
test
pusha
dec
push
repnz
xchg
or
imul
mov
mov
stos
leave
dec
jl
int3
mov
and
mov
push
fmul
ror
aas
xchg
xor
push
out
sub
pop
hlt
or
jbe
lahf
or
add
sbb
shl
sbb
sbb
into
mov
mov
inc
dec
and
neg
data16
mov
mov
imul
ret
les
xchg
pushf
jb
pop
dec
(bad)
xchg
mov
out
jmp
ret
idiv
inc
pop
mov
mov
add
jo
cs
sar
aad
mov
mov
movs
mov
pop
fs
cmps
outs
icebp
bound
nop
retf
fadd
add
push
sti
add
daa
fwait
push
and
fadd
push
test
sub
add
mov
adc
fistp
xor
jne
repz
(bad)
ret
sub
loopne
mov
xor
fmul
nop
out
retf
pop
pop
loope
mov
sub
fwait
add
mov
dec
mov
xchg
fsubr
sti
mov
inc
test
mov
ret
test
mov
push
push
jge
and
jmp
mov
xchg
sbb
push
mov
aam
mov
inc
xor
inc
adc
movs
retf
sub
sbb
inc
xchg
xor
dec
and
call
xchg
addr16
adc
xlat
repnz
sub
(bad)
mov
add
or
cs
xchg
cmp
and
(bad)
mov
sbb
sub
push
adc
cmps
mov
sti
js
rcl
shl
loop
or
xchg
test
rcl
leave
push
push
pop
or
jmp
jns
fbstp
cmp
xchg
xor
bound
ficom
nop
fbld
icebp
loopne
xchg
sti
inc
in
or
lods
and
mov
loope
adc
dec
or
and
sbb
idiv
cmp
push
xchg
adc
and
mov
out
cmp
or
adc
arpl
arpl
(bad)
std
add
outs
fisub
and
loop
dec
jns
lock
dec
dec
pop
ror
lahf
out
aas
jno
adc
mov
jl
push
outs
repnz
jb
nop
jne
ja
pop
outs
push
dec
pushf
push
out
xor
adc
in
mov
sar
loope
sti
inc
xor
das
push
aaa
add
mov
dec
adc
sbb
lods
fidiv
pop
add
loop
test
call
xchg
push
push
jecxz
pcmpeqd
mov
inc
ss
pop
sub
mov
repz
jns
sahf
int
jbe
sub
mov
dec
inc
push
xchg
movs
or
mov
adc
imul
xchg
cmp
cwde
popa
cdq
add
xor
xchg
and
xchg
sub
iret
scas
mov
jp
je
pop
shr
cmp
dec
imul
mov
sbb
das
sub
or
jecxz
pop
jge
mov
mov
cli
pop
stc
push
mov
cli
mov
dec
neg
add
fisub
mov
repnz
inc
add
aad
inc
jbe
dec
in
daa
sub
pop
sub
jno
xor
cmp
shl
iret
cmps
data16
xor
and
dec
and
cwde
sub
mov
ror
cdq
xchg
adc
push
or
mov
pusha
shl
jg
inc
pop
cmp
stos
xchg
xor
cmp
(bad)
fimul
jecxz
pop
cld
or
sub
cmp
es
dec
iret
push
(bad)
(bad)
loope
into
int3
add
fwait
push
push
xor
xor
push
(bad)
or
out
push
mov
push
enter
aad
pop
pop
jae
push
jbe
and
jno
out
xor
fstp
iret
or
push
dec
sub
out
shl
or
mov
lahf
fcmovnbe
or
lds
adc
pop
(bad)
jb
cmp
dec
cmp
ja
addr16
cmp
mov
sbb
ins
mov
pop
fldcw
or
add
idiv
rol
lods
out
hlt
mov
inc
xchg
ins
mov
mov
add
mov
aaa
out
sub
cmp
jl
icebp
ins
ror
jno
rcl
dec
jne
pop
push
jge
ins
stos
in
mov
mov
dec
or
sar
add
mov
nop
mov
jne
or
and
leave
add
cld
ret
std
retf
mov
aad
mov
call
fnstsw
int
cmp
enter
int3
inc
pop
arpl
xchg
lea
dec
(bad)
and
mov
lods
mov
xchg
ror
ins
pop
jge
sub
and
inc
sub
int3
sbb
aas
inc
scas
xchg
pop
dec
pop
add
pop
lahf
pop
xchg
xor
add
sub
sbb
enter
test
cmc
fistp
jge
xor
or
pop
sti
push
scas
push
cld
mov
(bad)
cmc
cmp
push
mov
scas
mov
sbb
adc
btc
pop
lods
popf
jnp
inc
jns
ret
call
push
subps
sub
stos
jbe
loop
mov
movs
fist
adc
aas
mov
sub
rcl
dec
scas
push
repz
retf
stos
dec
stos
aaa
and
sti
cmp
add
or
call
test
mov
push
rcr
push
jnp
inc
enter
xor
pop
fs
outs
pop
shl
fld
cmps
lock
dec
sbb
(bad)
sub
imul
aam
mov
pop
and
and
xor
ja
leave
movs
bound
daa
push
mov
push
push
jl
mov
pop
push
add
into
pushf
(bad)
pop
xor
cmp
test
je
sub
pop
add
xor
pop
inc
jmp
repnz
jo
out
repnz
cdq
ins
stos
mov
out
push
xor
cmp
inc
lods
pusha
push
dec
(bad)
cmp
not
sbb
sti
inc
pop
add
pop
ja
dec
mov
jg
mov
jg
cdq
bound
xor
js
sbb
adc
fld
sub
mov
jne
popf
aas
ins
cli
jp
jo
mov
out
imul
cmps
imul
jns
hlt
and
test
mov
sbb
jmp
stc
sbb
ins
test
xchg
inc
inc
jmp
cmp
pop
mov
stc
lds
test
popf
mov
pop
mov
push
or
sbb
dec
mov
push
xchg
mov
ficom
sbb
sbb
adc
mov
mov
xchg
add
mov
out
ror
std
cmp
mov
data16
bound
stos
cwde
adc
inc
sahf
cmp
add
out
jnp
movs
cdq
mov
clc
add
jo
in
mov
arpl
shr
add
cmp
fisubr
xchg
cld
(bad)
xchg
out
and
mov
jl
in
jle
imul
je
inc
sbb
jg
(bad)
iret
je
rcl
movs
push
daa
push
aad
pop
dec
mov
jle
push
pop
out
mov
in
rcl
jle
repnz
jb
and
sahf
push
sbb
jmp
mov
cld
mov
push
or
xor
pop
(bad)
jne
and
add
out
dec
pop
in
mov
mov
(bad)
in
and
ins
lods
xchg
mov
pusha
imul
ss
ja
call
mov
pop
shl
xor
dec
aam
sbb
les
arpl
fdiv
push
adc
lods
ret
sti
jl
or
movs
jmp
add
ins
jecxz
(bad)
mov
mov
jmp
or
pushf
cmp
mov
inc
adc
ins
jnp
sub
into
aaa
call
jbe
call
xchg
pcmpgtw
aam
ins
dec
out
scas
adc
jnp
add
inc
leave
sbb
ja
mov
sub
mov
cmp
xchg
js
jb
les
inc
fistp
imul
xchg
stos
jne
cmp
mov
dec
fwait
xchg
adc
pop
outs
pop
je
out
mov
pop
push
retf
or
test
cmp
inc
add
or
mov
push
add
xor
jge
jge
sub
jecxz
inc
jnp
adc
jp
retf
or
cwde
mov
push
push
loope
dec
jmp
int
xor
cmps
or
sub
fistp
adc
push
xor
pop
cmp
xchg
mov
sub
nop
mov
mov
sbb
fst
pop
in
pop
test
lahf
sar
hlt
enter
lods
loope
cmp
lods
cli
xor
pop
inc
fst
jnp
jmp
call
mov
cs
mov
test
sub
xchg
js
cdq
inc
mov
(bad)
push
mov
in
out
sbb
and
inc
int
call
stc
xor
dec
je
pop
ret
aas
push
out
popf
mov
not
xor
inc
pop
mov
xchg
adc
pop
ja
xor
push
scas
jne
ficom
js
ffreep
xchg
ret
fiadd
sar
aas
xor
push
and
cmp
rcr
xchg
mov
mov
adc
xor
sub
fsubrp
fs
xchg
jno
imul
stc
pop
lds
out
cmps
xor
arpl
popf
test
push
or
mov
adc
xchg
sti
or
mov
pop
pop
xchg
clc
mov
ja
add
xor
in
fdivr
int
mov
pusha
xchg
popa
or
aam
aam
fiadd
loop
push
pop
push
cs
or
shl
mov
popf
xchg
cs
mov
dec
jno
movs
loopne
in
in
xor
aam
fcom
jb
ss
scas
xor
scas
repnz
retf
mov
outs
ins
or
jmp
inc
mov
nop
sbb
cld
mov
cli
daa
aas
mov
sub
xchg
inc
shl
inc
shl
xchg
adc
pop
mov
xchg
mov
test
stos
jmp
add
ret
xor
arpl
mov
or
inc
push
xor
or
mul
mov
xlat
(bad)
jmp
sub
or
movs
jnp
fwait
(bad)
dec
xchg
cli
jnp
repnz
pop
sub
xor
inc
jge
leave
xchg
and
cmc
push
shr
mov
adc
fwait
mov
fs
or
push
or
or
sbb
dec
out
int3
movs
push
pop
xchg
sahf
aas
(bad)
shr
stc
inc
push
add
mov
shr
pop
call
dec
sar
dec
test
popa
fdiv
jno
and
in
lods
test
cmp
xchg
cmp
and
cmp
add
pop
add
stc
inc
leave
mov
loopne
pop
jg
pop
and
cmp
aam
iret
jo
jle
cmp
xchg
cmps
push
cmp
ret
shl
or
icebp
inc
inc
mov
and
fiadd
mov
dec
dec
add
add
or
lds
cmps
mov
jle
jmp
mov
les
xchg
repz
mov
cmp
or
inc
movs
pop
jb
mov
jmp
or
rcr
data16
fistp
add
sub
dec
cmp
jmp
cmp
std
adc
std
cwde
(bad)
jo
inc
aas
cmp
(bad)
xchg
ficom
imul
ds
je
hlt
js
sub
pop
in
in
sbb
call
jb
pop
and
(bad)
mov
fild
cdq
imul
xor
dec
aaa
inc
add
dec
inc
or
(bad)
xchg
out
not
(bad)
and
dec
xchg
dec
mov
pop
mov
pop
test
out
cs
mov
add
pop
repz
(bad)
icebp
mov
mov
add
(bad)
push
sub
pop
pop
movs
(bad)
sub
fxam
in
fidivr
jno
data16
loop
stc
jb
sahf
pusha
aaa
sbb
je
xor
pop
add
mov
add
mov
jae
aaa
fs
pop
mul
cwde
xchg
push
test
sub
xor
add
fisub
jge
mov
sub
adc
jp
(bad)
sbb
(bad)
pushf
xor
cld
not
cmps
mov
gs
daa
inc
mov
mov
push
xchg
or
test
pop
bound
dec
mov
(bad)
push
aam
or
xlat
xor
sub
xchg
jno
test
retw
popa
or
xor
inc
fiadd
in
pop
cmp
add
xchg
and
xchg
adc
cmp
push
ja
jl
lods
pop
ja
inc
push
sub
jne
loopne
cmp
jb
xor
movs
data16
fmul
repz
inc
cmp
jmp
or
bound
mov
fdivr
pop
mov
popf
aaa
fs
push
sbb
dec
out
bound
push
add
(bad)
jge
sbb
inc
ret
lahf
mov
lea
scas
and
stc
push
adc
out
adc
mov
pop
fdivr
pop
xchg
jno
movs
lea
sbb
cmp
xor
push
and
bound
scas
int
aad
cmps
rol
(bad)
stos
add
cmp
sub
mov
int
popa
jne
icebp
data16
aaa
cli
ret
pushf
retf
out
fs
mov
mov
lods
into
mov
jecxz
aam
leave
inc
lahf
fisttp
xchg
aam
in
push
inc
push
js
loope
fnstsw
xor
jecxz
mov
dec
and
mov
ja
repz
pop
and
lock
push
xchg
sbb
xchg
inc
push
fwait
scas
adc
aas
ret
sar
and
mov
pop
outs
push
movs
lods
icebp
xchg
aam
add
adc
push
xchg
dec
push
ss
and
aaa
fs
fstp
imul
stos
leave
and
xor
int
arpl
mov
jg
loopne
or
cdq
out
jo
mov
add
dec
add
mov
add
shl
push
cld
xchg
aas
retf
das
push
rcl
fs
movups
(bad)
aad
jle
mov
iret
sbb
gs
cli
mov
out
je
mov
test
and
cmp
sbb
adc
cli
lea
mov
lds
call
mov
inc
movs
sbb
mov
jmp
cmp
dec
sbb
dec
ss
jmp
aad
leave
es
inc
pusha
xchg
xor
jp
xor
or
movs
lds
in
push
std
(bad)
xchg
jnp
pop
or
jge
jecxz
imul
push
lods
iret
cwde
imul
push
mov
dec
add
adc
ins
outs
inc
cmp
pusha
loop
cmp
int3
or
pop
jb
push
dec
and
jo
loop
stos
dec
or
xor
pop
enter
hlt
jecxz
fmul
mov
mov
add
pop
retf
jb
inc
data16
in
sub
fild
xchg
sub
aas
loopne
mov
fisubr
addr16
push
mov
retf
cmps
push
inc
pop
or
mov
(bad)
call
cmps
daa
push
inc
int3
pop
cmp
addr16
adc
test
or
mov
retf
outs
adc
push
fsubr
pop
push
and
daa
sub
mov
ret
sbb
in
je
repz
push
repz
es
(bad)
mov
bound
dec
ret
adc
cdq
jae
lods
jbe
fcom
sub
(bad)
out
sbb
jg
add
xor
leave
ins
out
adc
out
sub
repnz
jo
mov
popf
stos
icebp
scas
mov
add
sub
adc
imul
in
mov
xor
aaa
mov
jecxz
ins
mov
movs
jo
pop
cmp
ss
sbb
add
fdiv
xor
in
repz
enter
mov
pushf
std
push
sahf
adc
call
jecxz
and
jmp
push
pop
sahf
push
add
(bad)
lock
out
pop
and
jge
mov
push
and
mov
push
pop
pop
fistp
sub
cmp
div
fmul
lods
es
test
mov
push
cwde
xchg
retf
shl
rcl
push
je
mov
data16
in
repnz
ds
das
adc
out
rcl
mov
fucomp
outs
jb
add
cmps
stc
cld
mov
lods
cmp
inc
pusha
ret
pop
and
mov
out
lods
(bad)
pop
sub
xor
cmp
mov
movs
adc
mov
popf
jge
mov
aad
jno
shl
mov
clc
call
lods
ds
sbb
jno
adc
mov
mov
adc
xor
add
mov
dec
adc
mov
in
lds
lods
or
out
aad
xlat
(bad)
out
push
adc
fwait
mov
and
adc
pop
call
ret
jl
pop
cmps
mov
les
push
std
add
xchg
loopne
movs
and
dec
aad
and
scas
vhsubpd
ds
mov
(bad)
dec
jne
ja
lods
mov
push
xchg
sbb
pushf
cmps
xchg
repz
pop
ret
pop
jae
aas
and
loopne
mov
popf
add
sahf
fs
mov
sbb
dec
enter
push
inc
add
or
nop
mov
int
mov
inc
ret
cmp
adc
pop
push
mov
jge
pop
in
lahf
ss
sbb
neg
mov
adc
imul
sub
jmp
sahf
(bad)
or
imul
adc
dec
xchg
fld
xor
pusha
cdq
(bad)
shr
in
sub
imul
adc
rcr
retf
push
mov
add
inc
xchg
xor
or
mov
(bad)
or
ret
dec
and
push
and
(bad)
jne
cmp
test
enter
shl
mov
imul
inc
ja
and
and
push
push
(bad)
rol
imul
xchg
sbb
jl
fdivr
jmp
mov
and
or
xchg
adc
clc
sub
sub
mov
imul
ss
cmc
xor
dec
mov
jmp
or
aaa
jbe
js
imul
xchg
stc
push
test
pusha
inc
outs
xchg
enter
dec
bnd
pop
adc
xor
pop
push
sbb
dec
stos
fucomp
aaa
out
add
ds
xchg
out
aam
or
imul
into
shr
xchg
bound
adc
mov
call
sbb
fidiv
inc
sar
ffree
adc
(bad)
aas
ret
adc
fwait
adc
ja
ss
jmp
adc
and
pop
fld
pop
(bad)
repz
or
mov
nop
and
dec
fs
adc
iret
mov
sub
outs
cmp
lahf
cdq
cmp
cmp
std
push
retf
push
(bad)
test
adc
ss
in
pusha
or
mov
or
push
adc
or
pushf
inc
iret
es
or
js
dec
pusha
call
mov
repnz
icebp
call
int3
dec
sub
in
jle
lock
sub
outs
cmp
fs
inc
xchg
push
jae
inc
movs
xor
iret
repnz
ret
js
sub
and
das
jns
mov
push
dec
push
cmps
xor
adc
inc
cmc
jl
bound
push
aas
cmc
int3
add
mov
pextrw
ins
enter
pop
fstp
pop
bound
mov
out
pop
and
pop
cmp
mov
pop
stc
or
lahf
sbb
enter
push
or
jae
pop
pop
jge
fild
sbb
adc
retf
add
mov
sbb
ret
cmps
stos
mov
cs
mov
iret
in
add
mov
cmp
pop
dec
xor
push
jno
call
jno
lods
and
push
out
inc
jmp
fidivr
or
mov
mov
mov
lahf
and
clc
neg
xlat
cmp
fld
push
xor
rcr
ds
sahf
ret
cmp
adc
dec
sbb
imul
fiadd
cdq
mov
popa
rol
in
sbb
lea
sbb
inc
xor
mov
aaa
(bad)
and
xor
push
xchg
pop
movs
stos
pop
retf
(bad)
and
pusha
arpl
xor
adc
pop
pop
and
aad
pop
or
adc
sbb
pusha
mov
in
(bad)
enter
fxch
pop
retf
and
fldenv
pop
or
add
push
clc
(bad)
fild
cmp
int3
push
jbe
cdq
push
pop
movs
xor
fsubr
shr
xlat
imul
xchg
ss
xchg
inc
and
pusha
xchg
dec
shl
push
aaa
jecxz
sbb
mov
mov
mov
fwait
or
xchg
adc
jge
scas
pop
inc
cmp
(bad)
mov
inc
mov
mov
sbb
adc
imul
sbb
pop
mov
das
retf
mov
dec
in
dec
movs
out
fiadd
retf
sub
in
ds
mov
mov
sub
mov
enter
sub
mov
movs
mov
add
xchg
adc
stc
pusha
inc
xchg
inc
xor
mov
pop
add
data16
ins
std
dec
add
sub
inc
or
jae
xor
sahf
dec
sar
pop
or
xchg
push
retf
push
mov
test
sub
gs
test
adc
movs
push
sbb
or
adc
lahf
outs
stos
aaa
mov
sahf
mov
test
imul
inc
loop
mov
fadd
xor
mov
dec
and
pop
(bad)
ja
sub
jle
fwait
jmp
mov
call
adc
dec
xor
adc
rcr
clc
dec
xchg
xchg
imul
inc
cs
xchg
js
cs
cmps
ja
xchg
loope
inc
bound
lahf
cmp
jp
mov
jbe
xchg
das
loope
pop
call
jnp
dec
fdiv
lds
ret
loope
sub
test
sbb
cwde
add
addr16
cld
cmc
add
sub
mov
and
scas
test
xchg
adc
fwait
sbb
sbb
cmps
inc
xchg
fisubr
sbb
ja
mov
mov
cmp
fsubr
push
test
add
mov
out
xchg
mov
sbb
jmp
or
jno
cmp
lods
popw
mov
outs
cmp
pop
outs
mov
add
lea
test
cdq
idiv
les
pop
les
pop
lds
jmp
shl
pop
call
outs
ja
push
lds
xchg
xchg
cmp
push
(bad)
into
add
clc
pop
add
or
pop
mov
test
int
(bad)
in
popa
inc
out
cmps
(bad)
fldln2
cmps
sub
sub
retf
je
add
retf
icebp
xchg
aas
fnstenv
sub
jae
data16
pop
jg
push
adc
cmp
mov
sub
jl
jnp
mov
xor
push
outs
push
sbb
xor
or
xchg
int
fldenv
jno
sbb
hlt
mov
fdivr
cmp
sbb
jecxz
mov
push
pusha
sbb
sbb
jmp
aaa
fs
inc
sbb
mov
sar
jg
outs
movs
inc
sub
and
sbb
add
not
scas
cmp
jns
nop
jp
sti
shl
push
fnstsw
mov
fs
push
ds
jb
scas
inc
shl
ficomp
je
mov
jge
scas
ret
icebp
inc
push
fnsave
push
(bad)
mov
push
xor
repz
xchg
fst
(bad)
xor
std
inc
jl
cmp
xchg
xchg
mov
sbb
pop
pop
inc
sbb
cmp
adc
or
div
div
int
sbb
(bad)
pop
lods
inc
push
int3
daa
mov
pop
ins
and
inc
(bad)
shl
push
rcr
adc
pop
push
xchg
jno
repz
cmp
and
pop
nop
pop
fst
lds
sub
rol
xchg
sbb
xor
ss
cmps
cmp
es
adc
mov
inc
adc
dec
shl
repz
add
ret
stos
fisubr
push
popa
inc
fwait
pop
into
fld
hlt
mov
into
mov
call
push
or
mov
loopne
jle
xor
repnz
sub
ins
adc
jmp
mov
dec
and
fiadd
push
cmc
fwait
cmp
xchg
ficom
push
sub
mov
lea
and
add
push
jnp
call
dec
sub
mov
push
adc
inc
call
xchg
ins
shr
dec
lds
daa
je
imul
sar
stc
jae
push
xor
xchg
inc
mov
mov
mov
repnz
aaa
popf
addr16
test
in
mov
push
mul
jns
das
lds
clc
cmp
sbb
repz
mov
ret
mov
jne
popa
pusha
movs
scas
xchg
adc
dec
dec
mov
mov
imul
je
cmps
jg
cmps
in
pushf
cmps
(bad)
jmp
inc
mov
cmp
cmp
enter
xor
call
popa
out
lods
and
pop
adc
xor
add
sar
aas
ror
sub
mov
clc
push
ins
or
pusha
or
mov
mov
movs
lods
jno
pop
adc
lahf
xchg
into
xor
mov
add
inc
sti
adc
jecxz
ds
mov
xchg
test
repz
pop
push
dec
cmovae
jno
test
fbld
arpl
out
push
jle
cmps
xor
repnz
dec
ret
push
call
inc
push
ret
or
dec
mov
sbb
jp
jmp
ins
sbb
loop
push
or
adc
cmp
xchg
push
xor
add
aad
les
adc
aad
idiv
mov
data16
jne
rol
out
sahf
rcr
das
(bad)
and
or
call
adc
mov
jne
ins
jp
sti
pop
daa
jno
cmp
inc
dec
std
or
mov
sbb
call
sbb
mov
dec
neg
jp
shl
mov
cmc
push
mov
fist
pushf
mov
adc
mov
dec
out
aas
xchg
rcl
shl
xchg
fisttp
xchg
pop
test
iret
inc
lods
mov
loop
xor
in
imul
lahf
ins
xchg
lods
fisubr
add
repnz
aad
(bad)
test
jns
fiadd
(bad)
pop
out
aad
xchg
xchg
into
or
in
sub
cwde
(bad)
xor
jnp
inc
jb
xor
xlat
leave
je
daa
jbe
inc
movs
(bad)
jmp
jg
xor
(bad)
cmp
pop
adc
fndisi(8087
ins
mov
and
ret
sub
retf
ins
fsubr
dec
lods
outs
stos
dec
popa
cli
xor
outs
repz
mov
sbb
add
inc
adc
js
imul
xor
adc
cli
rcr
or
cmp
pop
jb
pushf
nop
fsubr
paddsb
sub
push
sub
lahf
dec
adc
out
fist
mov
ficomp
inc
dec
mov
ror
mov
ror
mov
sbb
and
imul
jo
sbb
xchg
lock
cmp
xor
inc
jb
shl
(bad)
cmps
in
pop
mov
enter
aam
pop
mov
or
int3
xor
(bad)
ret
and
ins
sub
setle
add
sub
cmc
pop
les
into
mov
aaa
ss
jno
cmp
movs
adc
adc
mov
pop
adc
xchg
and
inc
aas
adc
div
jecxz
mov
dec
sub
jno
iret
jo
mov
mov
scas
mov
xor
inc
dec
add
inc
adc
inc
call
cmp
out
leave
xor
add
cmp
adc
in
arpl
and
int
es
jl
inc
ds
pushf
adc
cld
cld
data16
push
arpl
hlt
dec
mov
sti
add
mov
dec
rcl
mov
ficom
test
mov
iret
fiadd
cli
es
sar
dec
call
or
sub
dec
call
lahf
scas
clc
push
xor
add
out
shl
sub
aas
out
ins
add
and
pusha
xchg
push
shr
ds
mov
or
add
mov
adc
push
sub
cmc
lea
sbb
jns
stos
jns
dec
stc
in
out
dec
xchg
ret
cmovl
fs
pop
int3
dec
ret
or
xor
mov
sbb
push
xchg
mov
dec
or
sub
mov
cmp
repz
test
lock
adc
test
shl
xchg
imul
cmp
jmp
lods
repnz
add
das
iret
lds
fidiv
add
or
retf
and
sub
fwait
push
add
pop
sbb
leave
dec
loop
jge
inc
gs
test
retf
not
(bad)
xor
aam
mov
inc
xchg
retf
and
cwde
dec
test
push
in
add
mov
inc
sub
sub
fmul
dec
and
les
or
pop
into
sub
imul
add
adc
sahf
jl
or
inc
or
mov
dec
stos
ret
sub
movs
jle
jmp
mov
sub
lods
or
outs
retf
ins
adc
pop
push
leave
sub
cld
bound
outs
jmp
enter
and
test
push
jge
xchg
push
cmp
dec
push
fcomp
(bad)
pop
push
cmps
inc
inc
aas
cmp
xor
push
lock
std
and
mov
stc
call
add
and
js
stos
or
in
data16
push
cmp
call
mov
or
mov
inc
mov
xchg
jge
pop
mov
mov
mov
imul
inc
test
push
or
scas
fimul
jle
popf
mov
loopne
sbb
sub
push
test
push
xchg
push
outs
rcr
jmp
cdq
jne
mov
pusha
pop
icebp
cwde
jg
loopne
adc
test
arpl
jp
and
mov
pop
loop
jne
or
xchg
push
outs
pop
inc
iret
xchg
test
jns
in
and
lds
mov
lock
inc
push
push
cmp
(bad)
and
mov
adc
sar
mov
dec
mov
jb
mov
pushf
(bad)
(bad)
fs
inc
mov
jae
in
add
jae
call
test
xchg
mov
fwait
mov
sar
scas
outs
popf
outs
aaa
dec
or
sbb
push
xor
popa
jmp
lea
fidivr
push
xor
or
push
(bad)
dec
hlt
sub
cmp
retf
mov
data16
dec
js
mov
pop
call
popa
xchg
inc
(bad)
jl
push
dec
loopne
add
mov
jno
mov
pop
push
js
cmp
ret
or
movs
cmps
xchg
ins
add
rcr
mov
sti
(bad)
in
repz
add
jl
(bad)
rol
xchg
ret
or
stos
movs
push
add
push
daa
push
mov
test
movntq
outs
outs
shr
mov
mov
call
fcomp
xlat
dec
or
in
xor
jae
or
sbb
sub
sbb
inc
jno
mov
push
push
lahf
pop
push
test
push
cwde
aad
mov
xchg
out
mov
icebp
scas
jmp
jne
xchg
xchg
add
and
enter
push
push
lea
cmp
mul
retf
mov
sub
in
push
mov
clc
push
mov
in
pop
fld
or
ret
sahf
sbb
ret
push
fcmovnb
push
or
and
mov
mov
jg
and
inc
inc
scas
xchg
lock
fnstsw
icebp
(bad)
xor
dec
mov
test
add
sbb
sub
retf
arpl
outs
mov
ins
xchg
or
outs
mov
mov
xor
sub
(bad)
xchg
dec
stos
lods
xor
call
sub
push
mov
rcl
jge
push
cdq
ficom
mov
(bad)
pop
xchg
jp
das
xor
pushf
nop
pop
repnz
(bad)
pop
loop
mov
jecxz
push
scas
cmp
data16
and
sbb
pop
cmp
mov
inc
(bad)
mov
loop
jbe
addr16
mov
aam
fild
dec
push
mov
or
out
sub
ja
hlt
xor
repz
push
lea
and
mov
loope
fadd
mov
sbb
add
xor
dec
adc
bound
push
xor
leave
lock
stos
xchg
push
(bad)
neg
mov
add
call
stos
pop
mov
and
xlat
adc
jg
adc
enter
xchg
fisttp
test
stc
xor
pop
cmps
cmps
mov
iret
push
(bad)
mov
xchg
sbb
gs
add
mov
pusha
xchg
inc
sub
xor
test
jle
xor
call
mov
xchg
iret
jno
ja
add
pop
xchg
fs
dec
adc
outs
push
pop
mov
dec
cdq
xchg
mov
fmul
int
and
aad
rol
lock
mov
or
pop
mov
xlat
jae
imul
div
xchg
add
fidivr
cdq
mov
iret
or
mov
call
inc
cdq
inc
daa
add
add
js
out
iret
mov
inc
loopne
loope
nop
and
ds
int3
xchg
fwait
mov
dec
xchg
dec
into
adc
scas
cmp
retf
ds
retf
fldcw
jl
ficom
in
pop
mov
jbe
cmp
clc
stos
mov
inc
data16
push
adc
pcmpeqw
iret
int3
test
or
mov
add
pop
jle
xchg
jge
xor
(bad)
call
pushf
mov
les
jmp
jl
xchg
xor
add
stos
nop
mov
fucom
dec
xchg
sub
push
cmp
lds
in
loopne
pop
bound
push
in
std
mov
daa
cmps
and
addr16
fnsave
jge
arpl
repnz
or
fdivr
jne
pop
test
leave
pop
rcr
dec
jl
adc
mov
pop
jp
mov
push
and
aaa
mov
neg
in
aas
jae
not
mov
ret
mov
or
or
sbb
stos
mov
(bad)
mov
mov
push
xor
inc
popf
cmp
pop
mov
xor
sub
xlat
int
cmp
add
ror
aam
mov
dec
add
cs
jnp
cmps
leave
inc
sub
jno
shl
aaa
imul
les
sbb
jne
pop
push
fmul
test
push
(bad)
xchg
pop
jle
mov
lock
pop
or
cmp
jbe
xor
jae
mov
cmp
pop
push
out
or
fcom
rcl
add
repz
retf
xchg
div
mov
pop
jo
ins
loope
sbb
pushf
xchg
shl
fs
or
pop
cmp
scas
int3
dec
add
leave
enter
mov
sbb
stc
pop
rcl
iret
xchg
jmp
dec
jl
push
mov
or
in
jmp
cdq
icebp
mov
std
cwde
push
pusha
lock
imul
daa
adc
and
les
dec
fwait
mov
mov
hlt
mov
cld
(bad)
(bad)
jmp
addr16
leave
sbb
add
ret
adc
pop
cmp
stos
nop
movs
mov
js
mov
xchg
or
mov
pop
add
cdq
sti
out
pop
dec
mov
imul
fadd
hlt
adc
fsubr
iret
jmp
jne
cdq
push
xchg
xor
cli
xchg
inc
dec
and
pushf
xor
push
les
mov
das
or
ret
adc
pop
and
stos
mov
retf
mov
lea
sub
aaa
sbb
inc
pop
lods
sbb
mov
movs
ficomp
and
mov
push
pushf
cmp
inc
test
mov
inc
dec
shr
fmul
dec
pop
xchg
cli
push
sar
(bad)
data16
push
test
add
loopne
xchg
inc
or
jns
mov
repnz
pop
inc
inc
retf
xchg
fsubr
or
pop
daa
out
inc
sub
xor
shl
push
sub
mov
mov
mov
retf
in
and
and
in
retf
xor
lea
xor
pop
sub
inc
je
je
scas
scas
test
xchg
fnsave
lea
mov
mov
or
dec
pop
adc
push
in
jne
dec
bound
cmp
jbe
or
mov
mov
clc
fistp
pop
xor
push
push
icebp
test
aaa
inc
leave
and
xchg
push
daa
arpl
or
pop
jns
sub
xor
rcl
push
xchg
mov
ret
jns
or
push
fsub
gs
les
arpl
hlt
dec
retf
outs
rcl
pushf
fwait
mov
jae
sbb
sahf
ud0
out
clc
jle
fld
mov
mov
outs
mov
mov
jo
ins
or
js
push
aaa
mov
sbb
movs
cmps
mov
push
and
add
mov
leave
mov
pushf
push
sbb
movs
pop
rol
stc
inc
std
mov
cmp
ror
jmp
(bad)
outs
adc
xchg
stos
mov
xchg
push
fs
js
xchg
or
inc
push
dec
(bad)
mov
mov
nop
add
push
jmp
or
out
and
xor
lock
mov
cli
mov
fsubrp
ins
inc
(bad)
icebp
push
shl
adc
ficomp
ins
aas
mov
inc
ror
stos
lods
inc
outs
ins
sub
xlat
sub
mov
or
push
jno
xchg
rcr
aad
and
pop
scas
push
jo
jl
ds
xor
jb
mov
dec
mov
ret
and
inc
ret
les
int3
retf
cmps
mov
pop
fcomp
nop
movs
push
and
setne
stos
rcr
pushf
mov
clc
ret
int3
adc
jo
mov
imul
xchg
push
out
mov
xchg
mov
mov
mov
mov
clc
inc
push
out
sbb
adc
cmp
rcr
mov
jmp
sbb
hlt
pop
inc
data16
or
int3
scas
sahf
into
lahf
fcomp
pop
add
mov
stos
leave
lds
aas
enter
test
arpl
mov
and
popf
lahf
dec
jbe
mov
or
ja
pop
dec
push
test
in
sbb
sbb
and
push
iret
and
xchg
or
mov
mov
sbb
(bad)
popa
je
icebp
dec
add
xchg
ss
ja
xor
mov
gs
js
les
xor
out
push
mov
pop
push
add
jne
dec
mov
and
push
jae
fild
mov
push
fisttp
inc
popf
jne
mov
push
mov
into
or
dec
mov
cs
sbb
pusha
call
popa
jmp
xchg
jo
or
pop
jbe
mov
cmc
in
mov
addr16
call
je
and
(bad)
repz
adc
aas
push
add
leave
lds
(bad)
sbb
sti
adc
inc
xchg
stos
and
xchg
enter
push
xor
and
push
rcr
mov
aas
ins
addr16
push
jb
lods
inc
js
je
int3
inc
out
mov
lea
ins
push
ds
jmp
iret
retf
out
fadd
cwde
jns
jnp
push
sub
shl
lds
pop
mov
mov
push
lahf
push
mov
jae
inc
xor
and
or
sub
addr16
iret
and
add
js
mov
push
(bad)
push
scas
movs
fnsave
sub
push
cmp
fsub
sub
popa
mov
movs
pop
test
js
outs
cli
test
mov
das
jmp
add
stos
(bad)
xor
ds
(bad)
ds
or
mov
cmp
test
iret
adc
lds
(bad)
xchg
inc
test
retf
enter
outs
retf
les
xor
rol
jle
mul
sbb
add
pop
pop
mov
sahf
push
mov
(bad)
addr16
add
lahf
pop
pop
xchg
cdq
loopne
push
add
add
mov
pop
xchg
mov
cmp
and
rcl
jmp
push
jmp
inc
test
mov
gs
xchg
in
inc
xchg
sahf
and
out
popa
sub
aad
daa
aam
add
stos
repnz
(bad)
xchg
mov
jmp
jns
aam
jp
out
in
mov
inc
cld
inc
outs
out
or
out
std
sub
and
mov
pop
gs
(bad)
cmps
mov
fsub
xchg
cld
arpl
(bad)
push
aad
fstp
mov
adc
test
je
cs
push
ret
outs
ja
retf
arpl
xchg
adc
adc
rcl
cmp
cld
mov
xchg
in
popf
inc
aad
or
dec
inc
shl
sbb
call
arpl
jo
sub
mov
jge
retf
lods
aas
aaa
gs
(bad)
retf
in
(bad)
jns
jge
pop
rcl
leave
call
fadd
adc
xchg
mov
mov
sbb
adc
test
xlat
sub
lea
add
jno
xor
jmp
mov
and
mov
inc
daa
nop
jne
push
or
sub
jecxz
enter
imul
jecxz
cmp
(bad)
(bad)
mov
lods
outs
popa
xlat
int3
dec
cmps
pop
pop
inc
dec
gs
jp
idiv
(bad)
aam
pop
or
jae
cmp
mov
jb
xor
and
xchg
push
dec
popa
mov
push
mov
cli
mov
ins
and
mov
xchg
aam
scas
mov
ja
movs
inc
ret
or
mov
pop
jno
or
mov
fsub
mov
lea
ins
or
jno
pop
and
loope
je
jno
sub
les
popa
imul
mov
imul
adc
and
mov
jge
inc
test
cdq
scas
jo
movs
xor
(bad)
movs
mov
adc
(bad)
mov
xor
outs
loop
stos
je
imul
(bad)
pop
mov
cmps
xor
rep
dec
xor
ficomp
stc
test
jb
and
adc
sub
lods
(bad)
stos
mov
es
das
pop
or
push
jno
add
push
pop
jno
jbe
push
add
jmp
lock
mov
repz
xlat
sbb
shr
sbb
pop
cs
loope
ja
jnp
xor
pop
pop
jmp
retf
scas
sub
movs
test
and
inc
push
sahf
pop
aam
and
in
mov
pop
retf
shr
(bad)
mov
popf
push
pushf
and
jbe
test
sbb
(bad)
push
sbb
fdiv
and
sub
mov
cmp
aas
add
jmp
adc
sbb
shl
pop
fcmovb
scas
add
sbb
xchg
pop
dec
mov
pop
mov
bound
mov
(bad)
sahf
adc
(bad)
das
dec
xor
xchg
lea
enter
into
dec
add
pop
xlat
loopne
fld
into
(bad)
cmc
pop
mov
addr16
int3
movs
adc
and
jns
scas
and
xchg
or
sub
fild
pop
enter
les
lds
test
fwait
in
stc
mov
xchg
fimul
pop
mov
sbb
cdq
pop
add
cs
cdq
xor
sub
xchg
int
xchg
add
shr
and
inc
mov
sbb
mov
cs
or
pushf
and
inc
ret
in
and
and
dec
and
sti
push
shl
rcr
or
(bad)
add
jge
out
rol
fwait
dec
jle
lds
js
ss
fidivr
and
xchg
lods
gs
jge
dec
aas
cmp
jge
mov
out
and
jae
mov
adc
jle
pop
nop
sub
pop
out
test
jmp
pop
std
movs
adc
cld
neg
lods
pushf
push
push
or
adc
sti
scas
sahf
or
jo
cmp
cmps
xchg
cmp
stos
cs
outs
imul
ret
bound
pushf
mov
loope
jbe
inc
pushf
test
pushf
mov
and
xor
or
shr
mov
push
outs
ret
dec
lds
mov
inc
fcmove
mov
xchg
ins
jle
je
cs
shl
jb
aam
fsub
mov
xchg
pop
cli
cmp
in
push
xor
cmp
or
aad
in
and
adc
(bad)
shr
xchg
mov
mov
mov
or
ficom
jmp
lods
push
add
call
stos
sbb
cmp
inc
dec
das
sti
push
hlt
(bad)
mov
fcom
outs
sbb
mov
out
scas
jne
jle
xchg
aad
sub
mov
jb
jle
lea
and
rol
mov
cld
jnp
test
pop
stos
js
ret
push
push
fld
push
jae
xchg
dec
xchg
pop
and
jmp
in
and
ror
mov
sar
popf
out
into
mov
stos
and
or
mov
ret
jg
sahf
cmp
stos
mov
push
push
or
push
(bad)
mov
ins
popf
mov
mov
sub
mov
mov
fmul
les
push
cmp
mov
aaa
clc
cmc
movs
shr
lods
(bad)
adc
push
push
push
aam
jp
mov
jbe
imul
fnsetpm(287
cld
jecxz
addr16
jnp
pop
test
ins
push
(bad)
mov
add
jmp
inc
popf
mov
dec
fld
jb
nop
repnz
jmp
jl
mov
cs
test
sub
xlat
jl
dec
jg
xor
sbb
bound
ds
fdivr
xor
sbb
in
into
jns
add
mov
push
fsubr
jbe
and
mov
(bad)
icebp
dec
xchg
(bad)
ds
sub
gs
and
adc
retf
ret
or
fwait
xchg
aam
daa
les
mov
shr
mov
lods
cmc
clc
dec
add
enter
loope
dec
mov
inc
xchg
fs
jmp
fcos
pop
std
push
cld
lock
ja
adc
xchg
mov
loop
push
jb
mov
mov
pop
dec
cld
jecxz
cmp
mov
fs
mov
dec
ja
imul
test
sti
mov
scas
retf
lods
mov
rcl
sbb
imul
int3
addr16
xlat
in
jg
call
jnp
mov
mov
loope
jne
xor
arpl
loope
loope
and
sbb
jns
mov
fisubr
test
push
cld
jnp
nop
jnp
lods
cmps
ficomp
cld
push
int3
iret
popf
dec
mov
retf
push
push
data16
pusha
add
popa
lea
fs
rcl
cld
sbb
retf
dec
push
cmps
retf
pop
lods
inc
dec
fadd
clc
(bad)
lahf
inc
popa
sbb
or
push
int3
ds
adc
sbb
test
pop
call
mov
ficom
repz
jae
sub
push
loopne
ins
sahf
es
push
mov
mov
adc
adc
loop
mov
xchg
sbb
pushf
xchg
push
aam
lds
ins
or
adc
ins
shl
ds
test
sub
or
test
cmp
push
dec
dec
xor
loopne
and
out
mov
int3
sti
mov
dec
pop
cmps
cmp
sub
cld
out
aad
and
sub
jl
push
test
pop
adc
mov
clc
sbb
in
push
fcom
(bad)
sbb
loop
mov
cmp
(bad)
cmps
mov
mov
jmp
lods
push
in
push
dec
scas
lods
inc
xor
les
push
sbb
ror
dec
not
and
inc
cmps
ds
les
push
lea
or
stos
cmps
and
dec
sub
xlat
pop
mov
cwde
cmp
inc
and
lods
loopne
test
pop
popf
mov
and
pop
ins
in
or
jns
sbb
add
int
dec
aad
xchg
mov
scas
into
es
pop
leave
mov
scas
(bad)
fcomip
scas
fcomp
adc
es
mov
lods
ss
std
xor
or
xchg
mov
retf
xchg
fdivrp
cmp
pop
mov
mov
pop
cld
je
push
push
rcr
or
mov
aam
dec
sbb
fld1
add
std
or
add
and
xchg
adc
pop
sbb
std
jns
fdiv
les
mov
cmps
retf
jbe
rol
mov
cs
sbb
stc
or
pop
push
sbb
xchg
xchg
cmp
mov
in
ds
loopne
xchg
shr
test
movs
inc
xlat
ror
push
jnp
adc
xchg
pop
(bad)
rcr
push
adc
imul
mov
and
pop
iret
sub
outs
nop
add
movs
ins
push
cld
rol
mov
in
cmps
push
inc
push
fwait
and
in
fdivrp
push
pop
inc
cmp
inc
jg
or
and
cmps
icebp
retf
in
sbb
cs
inc
and
xchg
xlat
out
shr
daa
(bad)
mulps
cmps
data16
mov
lds
ret
cmps
push
and
push
(bad)
and
out
or
mov
jl
fs
xor
push
data16
call
aam
add
stc
jbe
fild
mov
add
stos
pop
mov
mov
fimul
(bad)
sahf
jno
iret
xor
add
inc
pop
mov
and
(bad)
and
adc
mov
fadd
cmp
sbb
inc
pushf
xchg
ret
add
fcomp
cmc
push
lods
in
fisub
sub
lock
adc
fmul
in
cld
call
cmp
imul
lods
ss
jo
out
loope
cdq
pop
mov
inc
and
mov
fadd
ret
sub
add
or
or
fwait
adc
adc
jns
(bad)
stos
mov
pushf
sub
outs
in
mov
mov
jne
(bad)
mov
jecxz
dec
or
dec
les
ror
jns
stos
mov
xor
mov
mov
jmp
sub
xchg
adc
ins
sbb
or
or
inc
ds
mul
jmp
inc
jns
retf
test
sub
or
inc
sbb
sub
pop
pop
cmp
mov
fmul
adc
sbb
scas
fldcw
add
mov
and
lds
fmulp
adc
inc
hlt
and
inc
cmc
mov
bnd
aas
int
mov
outs
fist
mov
mov
popa
bound
push
call
movs
shl
imul
mov
outs
push
or
fbld
push
xchg
jnp
sbb
mov
addr16
inc
jb
out
clc
cdq
sub
lock
xor
jp
psadbw
bound
mov
leave
imul
pop
dec
sbb
std
mov
leave
inc
jae
xlat
sub
xor
xchg
mov
push
xchg
xchg
pop
cld
bound
cmc
adc
push
iret
xchg
add
pop
push
lods
cmc
sbb
cs
out
enter
and
xchg
into
pop
mov
cmp
mov
pop
and
xchg
in
push
enter
rcl
xchg
fcmovnb
add
jg
int3
stos
cmp
sub
cmps
shl
mov
pop
(bad)
add
dec
fld
(bad)
shl
or
push
adc
mov
je
or
cli
dec
adc
fwait
push
inc
mov
lods
push
add
xchg
sbb
icebp
(bad)
push
gs
into
mov
push
popf
ficom
hlt
dec
adc
ins
and
movs
sub
mov
int
push
adc
mov
fucomp
mov
add
hlt
sub
test
cmp
mov
push
adc
repz
sbb
(bad)
pop
stos
xor
call
jb
xor
pusha
out
rol
inc
inc
fs
cmp
clc
ins
or
shl
sub
mov
inc
push
in
add
dec
ins
and
loop
jl
cmp
mov
sbb
push
test
(bad)
je
imul
lds
cdq
xor
dec
dec
cmp
jp
push
cmp
push
test
faddp
sbb
inc
mov
fcmove
pop
lock
nop
sub
push
mov
daa
jo
xor
add
mov
adc
lods
pop
out
jecxz
cmp
xchg
call
ss
ins
arpl
pop
pushf
dec
mov
js
jle
push
mov
dec
mov
and
daa
cmp
pop
nop
ins
hlt
cdq
sub
xchg
jl
data16
retf
fdiv
lods
call
mov
aaa
mov
cs
ret
and
sub
xor
sbb
push
lock
test
cmp
add
jg
mov
mov
dec
cmovae
repz
xlat
xor
fwait
lahf
jp
fwait
add
outs
arpl
pop
stc
sbb
push
test
sbb
ret
lods
in
push
fwait
push
das
cmp
inc
inc
dec
out
sub
cli
loopne
mov
push
mov
push
(bad)
mov
inc
dec
sbb
adc
out
inc
mov
or
pop
movs
imul
add
push
cmps
lds
call
dec
nop
adc
adc
dec
retf
push
(bad)
(bad)
xchg
mov
ds
int
jle
xchg
fisubr
push
xor
mov
mov
mov
sbb
ror
ins
aas
mov
xor
xor
cmp
xchg
sub
pop
xor
push
dec
xchg
(bad)
outs
ins
dec
sbb
adc
xchg
inc
pushf
pop
pushf
(bad)
adc
dec
sahf
lea
mov
jno
scas
jle
mov
add
sbb
or
call
shr
jo
fstp
jle
test
xor
popf
xchg
call
retf
ss
outs
js
and
in
or
cmps
xchg
fisubr
clc
dec
lods
push
add
adc
int3
jo
inc
adc
xor
icebp
test
retf
call
aad
dec
scas
fst
loop
pop
bound
int
outs
push
lods
cmps
outs
sub
(bad)
jmp
inc
movs
(bad)
outs
dec
xchg
bt
mov
xchg
push
dec
arpl
pop
lahf
jno
push
pop
adc
dec
push
add
mov
jnp
pop
inc
int
sub
and
jmp
jno
pop
pushf
or
rcl
jle
retf
add
inc
cmp
sub
(bad)
test
sub
ret
jg
icebp
fidivr
fcmovb
sbb
mov
hlt
cwde
and
cmp
push
push
xor
sbb
loopne
call
sti
mov
mov
pop
movs
outs
inc
fdiv
jnp
rcl
adc
je
lds
xchg
aam
loopne
pusha
or
loop
enter
out
adc
push
jb
pop
jne
test
std
xlat
push
cmc
dec
add
ror
mov
mov
push
jbe
rol
jno
(bad)
stos
pop
(bad)
popf
or
jno
push
mov
xor
test
xchg
cwde
ret
mov
in
push
pop
shl
jo
push
idiv
mov
cmp
xchg
and
mov
jns
iret
push
lock
pushf
jnp
std
pop
fcomp
aas
cld
clc
sub
data16
cmps
iret
mov
inc
inc
int3
add
ret
pop
test
push
add
ds
or
dec
imul
std
push
jnp
xor
(bad)
or
popa
xor
dec
mov
or
arpl
inc
stos
xor
xlat
sub
movs
iret
push
xchg
or
or
loopne
stos
(bad)
fnstsw
jmp
aad
mov
dec
sar
loopne
fldcw
shl
add
pop
cmp
push
mov
add
xor
cli
jmp
jl
retf
ja
sbb
adc
fwait
aaa
dec
sbb
out
cmp
sub
push
mov
push
jbe
sbb
sub
imul
les
inc
fs
xchg
loop
sub
mov
fxch
mov
cli
pusha
lahf
inc
push
jecxz
neg
push
fs
sbb
mov
and
jecxz
cmp
jmp
cli
mov
(bad)
pop
jmp
inc
stos
bound
cmp
jbe
add
fld
mov
mov
in
mov
out
jns
arpl
in
mov
adc
out
xor
mov
jo
call
jne
pop
and
push
test
fadd
jle
xor
mov
lods
cmp
leave
jmp
add
ror
aaa
pop
and
xchg
ds
fiadd
add
xchg
push
xchg
cmp
movs
stc
ret
jnp
and
push
cmp
loop
fist
das
jb
aam
or
(bad)
mov
jmp
xor
and
add
in
xor
test
and
or
xchg
mov
pop
scas
aaa
sbb
scas
inc
dec
add
sub
call
bound
jne
call
jmp
imul
xchg
xor
outs
and
pusha
cwde
cmp
ror
pop
or
pop
adc
push
idiv
or
jl
addr16
xchg
and
mov
sub
push
jmp
push
sub
xor
jmp
call
mov
int
mov
jmp
stos
fs
loop
adc
inc
mov
mov
sbb
cmc
dec
leave
push
inc
jo
add
(bad)
out
or
pop
jl
jb
adc
cdq
xlat
addr16
ss
into
jne
fimul
loop
pop
jmp
or
or
(bad)
mov
mov
adc
add
push
dec
in
jge
sbb
mov
faddp
mov
pop
shl
fisub
pop
mov
pop
ins
inc
pop
xor
fimul
inc
jp
ficomp
xor
pop
pop
out
stos
pop
(bad)
mov
popa
push
setno
add
(bad)
clc
mov
out
mov
fwait
pushf
mov
jle
cmp
popa
ss
inc
jno
sub
or
cli
outs
pop
inc
lods
or
fs
push
adc
idiv
xchg
dec
xor
inc
lods
sub
fistp
mov
xor
fild
fmul
imul
sbb
adc
push
mov
cld
add
push
pop
neg
sub
repnz
inc
fwait
sar
mov
jo
out
inc
pop
jg
fwait
add
push
repz
nop
not
push
rcl
test
cmp
mov
imul
dec
cmp
mov
dec
mov
jne
jp
retf
mov
int3
cmp
(bad)
cli
je
test
lahf
dec
push
jl
xchg
add
or
out
pop
test
cmps
(bad)
call
bound
mov
and
into
pop
repz
fcomp
cmp
scas
ret
mov
inc
xchg
dec
inc
cmpxchg
sbb
mov
and
enter
mov
stc
iret
mov
andnps
push
sbb
push
and
stc
nop
inc
adc
in
ficomp
dec
call
jbe
xchg
mov
cwde
mov
repz
push
dec
xor
mov
out
xchg
mov
adc
(bad)
adc
cmps
or
pushf
fcom
mov
sub
(bad)
adc
add
add
stc
mov
cmp
aam
dec
add
jge
outs
inc
mov
adc
cmp
add
jns
mov
dec
ins
mov
push
mov
loopne
sbb
lods
mov
hlt
jo
test
scas
mov
mov
pop
or
push
fdiv
les
scas
loopne
test
in
pop
loop
mov
adc
cmps
inc
fwait
sub
test
or
mov
test
movs
sbb
outs
push
js
xor
stos
scas
fnstcw
sub
push
cmp
and
scas
scas
dec
out
scas
or
btc
xchg
xor
jns
sub
mov
sahf
mov
retf
out
cmps
pop
add
inc
repz
sbb
or
adc
mov
mov
or
mov
jmp
mov
sbb
sbb
jecxz
(bad)
xor
cs
or
mov
ret
xchg
jne
ret
mov
test
loope
and
test
push
test
loop
inc
cmp
mov
xchg
or
or
scas
mov
or
xchg
cmps
std
fprem1
cmps
or
ret
dec
call
aas
loope
inc
inc
mov
arpl
in
fisub
rol
push
in
mov
jg
shr
jg
mov
in
mov
jae
mov
mov
stos
mov
div
jmp
add
shl
sbb
inc
scas
push
dec
adc
fidiv
and
out
imul
mov
and
lods
daa
lock
sbb
int3
and
sar
jbe
xchg
stos
shl
fs
fwait
mov
cmc
imul
outs
aad
retf
fwait
pop
js
dec
clc
add
pop
pop
push
sub
mov
loop
xchg
jmp
and
jmp
pop
pop
addr16
sub
movs
xlat
ret
mov
mov
outs
dec
sub
xor
(bad)
sbb
enter
xchg
sub
je
std
cs
xor
xor
cmp
mov
dec
cmp
ja
outs
pop
add
(bad)
jb
add
jb
pop
repnz
inc
mov
stc
mov
xor
ret
std
call
or
ds
std
jge
and
xor
cld
mov
shl
movs
fistp
movs
(bad)
data16
cmp
push
mov
jbe
sbb
add
add
or
or
jae
test
or
(bad)
repnz
mov
(bad)
dec
icebp
rcl
adc
mov
pop
pop
push
leave
clc
lock
mov
outs
and
push
mov
inc
out
call
dec
jl
or
es
stos
imul
push
and
lea
rol
adc
test
das
cmp
(bad)
dec
mov
and
jecxz
aaa
pusha
pop
fwait
push
pop
push
js
(bad)
cmc
adc
ficom
sub
pop
dec
xchg
add
pop
jne
lods
out
(bad)
jae
mov
nop
and
xchg
push
sub
loopne
pop
jg
xlat
add
jp
or
mov
test
movs
mov
pop
dec
mov
add
retf
ficom
out
push
cdq
xor
div
lahf
clc
push
mov
mov
loope
jae
fcomi
xchg
test
test
mov
xchg
cmp
cwde
adc
jmp
enter
in
aaa
outs
mov
in
fiadd
aam
sub
push
call
sub
sub
dec
xor
or
jne
cmp
mov
fst
mov
in
into
out
aad
add
popa
mov
add
stc
jne
mov
cmp
pop
mov
cmp
cli
aaa
cmp
mov
or
push
mov
or
retf
sahf
and
in
ins
inc
pop
cmp
(bad)
popf
sbb
neg
mov
sar
ins
pushf
dec
pop
mov
add
add
xor
popf
loope
mov
mov
cdq
mov
sub
cld
out
fild
sub
mov
aas
mov
arpl
xor
dec
ficom
cmp
pop
pop
mov
mov
ds
and
sbb
inc
sub
not
xchg
pop
aad
push
xchg
mov
sahf
imul
sbb
pop
test
in
imul
mov
mov
push
push
inc
(bad)
outs
ret
cmp
dec
retf
fisub
jecxz
cmp
retf
xchg
out
adc
imul
in
add
jle
mov
cld
cmp
pop
rol
in
xchg
push
adc
mov
xor
les
xchg
inc
in
cs
ins
icebp
je
xchg
ins
clc
sub
dec
scas
sbb
cmps
lea
cli
jmp
pop
cmp
inc
inc
cs
pop
mov
xor
(bad)
pop
sbb
cmp
fistp
push
or
pop
dec
sub
pop
push
and
arpl
mov
cdq
add
xor
xor
outs
pop
add
inc
jbe
sub
ins
popa
or
or
fstp
jnp
pop
xor
dec
pop
mov
or
mov
test
shr
fisttp
test
dec
push
std
adc
cmp
call
mov
fisttp
jne
outs
ins
not
pop
sub
pop
aaa
or
cmp
pop
jmp
inc
call
push
arpl
aam
mov
or
pop
iret
ss
add
pop
rcl
jns
sbb
(bad)
adc
pop
mov
mov
inc
or
sbb
jg
mov
mov
repnz
loope
(bad)
mov
inc
sbb
push
movs
jp
inc
jns
and
retf
movs
adc
outs
movs
xchg
ficomp
dec
test
leave
loope
sub
pop
aam
cs
sahf
and
and
into
or
gs
cmp
add
mov
shl
stos
fimul
scas
mov
imul
shl
xchg
mov
lock
xchg
(bad)
mov
mov
dec
iret
adc
nop
or
je
movs
inc
ss
sub
sbb
aam
mov
jne
shl
ret
sti
cmp
and
popa
mov
or
add
inc
imul
movs
imul
ins
dec
inc
xor
cmp
cmp
sub
je
outs
mov
fst
popf
(bad)
(bad)
inc
imul
xchg
push
mov
aam
fstp
outs
cmc
mov
in
ins
fld
fldenv
loop
lods
mov
mov
xor
cmps
popf
mov
push
add
push
in
outs
out
inc
cmp
mov
push
sub
or
inc
nop
push
xor
stc
aad
adc
js
and
ja
mov
dec
fcom
pop
mov
fimul
stc
loop
je
cmp
dec
sub
in
dec
retf
jb
mov
sti
push
xchg
idiv
dec
int3
stos
sbb
add
sbb
jl
fs
cmc
mov
shr
addr16
sub
cmc
scas
pushf
out
sbb
cmp
pop
sub
je
sahf
mov
hlt
jne
retf
aam
add
pop
lods
sub
adc
rol
adc
mov
clc
test
or
shl
mov
jl
lods
outs
nop
(bad)
sbb
xor
jmp
stc
cmp
and
dec
jb
inc
sbb
jmp
sbb
adc
xchg
pop
push
out
int3
test
sbb
pop
div
sar
gs
or
mov
cdq
out
(bad)
out
outs
jae
sub
stos
bswap
or
retf
shl
mov
outs
push
push
mov
out
xor
(bad)
fld
inc
inc
push
daa
mov
push
push
outs
loopne
out
jns
(bad)
push
int
add
push
ins
bound
mov
and
sub
vcmppd
je
add
and
out
out
mov
movs
lahf
xor
jns
pop
adc
sub
std
je
jb
fild
push
and
pushf
(bad)
aaa
mov
pop
adc
outs
popf
aam
shr
add
jbe
mov
aad
bound
cld
lods
stos
push
pop
dec
in
mov
pushw
push
mov
(bad)
pushaw
leave
icebp
pop
in
mov
(bad)
pop
jmp
gs
rcr
dec
(bad)
fxch
add
jb
test
stos
cmp
test
ja
sub
neg
inc
shl
pop
and
mov
int
jmp
sub
(bad)
mov
or
sar
retf
arpl
call
mov
lock
and
bnd
jno
cmp
add
pop
jo
sahf
cmp
loop
fcmovnbe
sahf
mov
lock
adc
jae
push
stos
test
retf
ins
add
stos
fsubr
dec
ret
dec
ins
push
sub
hlt
cmp
data16
jecxz
test
jmp
mov
div
cmp
xor
adc
clc
in
push
xor
pop
call
mov
ficomp
ss
ret
fs
jcxz
cmp
mov
dec
xor
leave
sbb
add
pop
(bad)
mov
push
and
dec
mov
inc
sbb
out
push
jl
adc
mov
hlt
inc
lahf
cmps
jbe
dec
xlat
sub
mov
jl
daa
add
sti
cmp
and
add
aas
mov
ficomp
xor
or
frstor
add
push
add
js
cmps
mov
mov
cwde
adc
pop
and
xchg
jo
test
outs
jbe
fst
movs
inc
aam
jp
pop
pop
xchg
jg
jns
ja
in
das
test
pop
dec
push
(bad)
sbb
sub
mov
cmp
pop
std
ficom
mov
jns
popa
pop
in
dec
cmp
and
(bad)
(bad)
pop
rol
(bad)
or
mov
hlt
sub
add
cs
out
sub
inc
add
cdq
mov
mov
outs
test
scas
ja
pop
dec
cmp
cmps
repz
call
bound
sbb
add
mov
inc
push
sub
outs
pop
mov
ja
pop
xchg
loop
es
dec
imul
fldcw
stos
daa
stos
cmps
rol
sub
jb
vpaddq
lahf
repnz
mov
mov
imul
bound
icebp
fsub
mov
test
push
pop
icebp
push
and
and
retf
sub
dec
xchg
jae
or
ror
fistp
push
ss
rol
pop
fs
lods
mov
or
sub
xchg
xor
adc
mov
cmp
ins
push
daa
je
or
pop
ret
stos
dec
push
jae
dec
and
add
fmul
cmc
stc
call
xchg
call
mov
(bad)
repnz
and
test
jae
ret
fnsave
hlt
out
jbe
mov
out
es
inc
push
add
sar
(bad)
push
cmp
dec
adc
lods
aam
call
sub
sar
xor
mov
ror
ret
imul
in
add
add
repnz
dec
je
mov
add
jp
mov
push
inc
loopne
inc
push
fdiv
jecxz
xchg
ss
scas
pop
jle
bnd
out
inc
xchg
sbb
mov
and
sbb
int3
(bad)
xchg
(bad)
ds
outs
jbe
dec
push
mov
and
adc
dec
movs
prefetcht1
dec
inc
cs
pop
mov
stc
cld
lahf
les
cmp
stos
mov
sub
fdivr
mov
pop
mov
pop
movs
xchg
inc
cs
ins
leave
scas
cmps
fcomip
popa
mov
icebp
xchg
jmp
inc
add
sub
add
push
push
sti
mov
fstp
xchg
in
test
rcr
fsubr
popa
sahf
xchg
push
xchg
mov
mov
inc
xor
mov
add
(bad)
fild
scas
cmp
pop
stc
into
retf
inc
pop
mov
mov
enter
sbb
into
adc
iret
popf
sbb
mov
repnz
mov
fs
out
mov
cmps
jo
adc
push
pop
ins
sbb
rcl
in
out
retf
pop
ret
pop
in
adc
mov
imul
mov
outs
inc
scas
in
cmp
mov
cmps
jo
es
(bad)
inc
mov
movs
pop
adc
sbb
scas
lock
mul
ins
xchg
outs
add
and
imul
mov
pop
inc
inc
xchg
mov
popa
imul
mov
cld
jbe
cmc
sbb
xor
jae
mov
dec
or
jl
sahf
js
cmp
cwde
inc
xor
in
add
cmp
push
bound
mov
jnp
xchg
sub
dec
cmp
jp
lahf
inc
and
push
pop
scas
jb
sub
fild
aas
sbb
popf
scas
sbb
xchg
push
inc
(bad)
sahf
sub
ror
cmp
loopne
adc
retf
xchg
ds
icebp
stos
leave
dec
hlt
nop
mov
pop
and
inc
gs
mov
repz
mov
das
pop
push
leave
clc
dec
fisub
stos
xor
mov
rol
pushf
xchg
sar
dec
sbb
dec
icebp
mov
mov
pushf
sar
ret
lock
sbb
int3
dec
mov
jae
push
dec
inc
sti
adc
mov
rcr
mov
mov
in
fisttp
mov
push
movs
jno
xchg
sahf
xor
je
pop
mov
push
repnz
(bad)
mov
js
push
xor
fisubr
mov
cmp
jno
add
xor
pusha
test
pop
pop
test
jne
mov
jno
jp
inc
inc
xchg
adc
pavgb
xchg
and
and
mov
xor
mov
shl
fmul
adc
mov
jle
mov
mov
sti
mov
inc
mov
mov
push
mov
pop
sub
inc
sbb
stc
les
jmp
aad
popa
dec
dec
pop
mov
xor
mov
lock
dec
adc
push
(bad)
repnz
sbb
idiv
in
jno
popa
(bad)
fwait
mov
jo
mov
and
daa
arpl
arpl
cmp
inc
test
icebp
imul
push
jmp
ins
pop
fnsave
(bad)
mov
lds
call
mov
in
pop
sbb
push
sub
or
call
xchg
xchg
loop
cmps
fadd
mov
movs
mov
mov
pop
rcr
push
nop
xchg
sub
jnp
cmc
xor
jae
push
sbb
fldcw
mov
pop
call
pop
leave
daa
jp
call
(bad)
jbe
dec
jae
dec
pop
mov
xor
mov
rol
jp
jnp
sbb
jmp
push
cmp
daa
call
and
sub
ret
sub
adc
or
push
movs
add
ss
in
jo
sbb
inc
or
shl
add
push
fld
xchg
jno
cli
ins
ja
fcomp
mov
call
mov
jp
pop
data16
dec
(bad)
int
or
jge
les
pop
ror
shl
loope
pushf
dec
jns
add
or
and
mov
clc
fldcw
retf
or
in
or
jmp
int
test
sti
adc
retf
dec
push
add
push
inc
jg
and
inc
aas
mov
lds
arpl
dec
(bad)
stos
mov
movs
ss
daa
xlat
mov
dec
xor
ja
jne
mov
pusha
(bad)
xchg
loope
xchg
into
retf
aam
push
rol
mov
lds
adc
call
adc
sbb
xchg
sub
scas
scas
into
push
jmp
jmp
pop
add
fdiv
mov
fist
dec
push
mov
cmp
ror
dec
cmp
push
mov
jb
leave
push
cmp
dec
mov
lods
call
sbb
mov
jnp
sub
fcomip
pushf
rcl
or
or
add
dec
retf
imul
shl
shl
aam
sbb
ret
cmps
fwait
mov
mov
inc
cmp
inc
(bad)
mov
out
hlt
aas
repz
cmps
loope
adc
in
fwait
xor
gs
sub
(bad)
cmp
xor
xchg
lds
outs
dec
call
loopne
call
xchg
xchg
sbb
mov
pushf
rol
loopne
cld
adc
in
(bad)
popf
dec
sbb
daa
shr
arpl
adc
popf
sbb
sbb
data16
xchg
cld
fcmovbe
inc
sti
daa
rcl
dec
inc
mov
cli
in
mov
out
jae
out
sbb
xchg
adc
or
shl
outs
inc
cdq
inc
shr
and
repnz
adc
or
sbb
test
jo
sub
(bad)
sti
jnp
mov
scas
inc
push
shl
int3
daa
ss
add
ror
loop
xor
xchg
mov
(bad)
xchg
sub
fwait
pop
mov
cli
mov
dec
outs
test
daa
sub
xchg
jl
xchg
cli
iret
fnstsw
(bad)
mov
movs
adc
jne
out
xor
sub
fisubr
es
sub
fiadd
pop
imul
or
adc
mov
or
dec
dec
cwde
int
mov
pop
inc
mov
adc
das
pop
mov
sbb
int
enter
or
loopne
aas
rcl
inc
pop
int3
mov
xor
hlt
push
or
pop
daa
call
lds
inc
(bad)
mov
int3
add
das
lock
mov
icebp
sbb
(bad)
out
and
in
aaa
pop
cs
cmp
and
sub
mov
fild
loope
dec
loop
bound
adc
xchg
cmps
push
xchg
aas
push
test
mov
frstor
or
shl
mov
outs
pop
mov
xchg
fdivr
or
shl
and
cmps
jns
pusha
or
sub
push
push
fnstcw
jp
cmp
sub
push
and
push
cmc
sbb
adc
and
addr16
xchg
movs
aad
stc
push
popf
sbb
pushf
fisubr
ins
(bad)
push
inc
mov
pop
and
adc
mov
mov
sbb
cmp
dec
push
sbb
hlt
ins
sbb
dec
nop
and
xchg
sub
cmp
ficomp
scas
inc
pushf
xor
dec
mov
mov
iret
repnz
fsub
(bad)
les
je
mov
fs
aad
jae
fdivr
call
retf
repnz
fiadd
adc
test
xchg
int3
enter
pop
or
jne
rcr
outs
cld
adc
cmp
push
xchg
push
jmp
or
rcr
xchg
jp
jne
ins
shr
push
jns
nop
jns
inc
adc
add
test
push
(bad)
mov
mov
(bad)
hlt
icebp
adc
xlat
or
jbe
jno
fwait
jmp
loope
sbb
add
mov
loopne
sub
icebp
pop
lea
fisttp
cmp
in
add
mov
or
and
enter
les
sahf
push
lahf
cmp
mov
ins
test
cmps
xchg
jmp
pop
mov
sbb
hlt
(bad)
cmp
js
out
jge
mov
ins
sbb
jns
push
xchg
add
gs
pop
cmc
xor
pop
test
dec
cli
xchg
xchg
inc
call
add
je
mov
xor
imul
mov
xchg
dec
rol
cmc
scas
push
or
mov
(bad)
cmp
mov
push
ja
inc
push
mov
cmp
in
leave
cmp
stos
sub
jnp
outs
jno
or
xchg
ret
stos
xor
pushf
or
add
pop
inc
inc
xchg
(bad)
sti
jle
stc
mov
mov
mov
fwait
add
xchg
clc
fcom
imul
aaa
or
push
jne
mov
mov
(bad)
es
(bad)
sbb
mov
daa
loope
sahf
dec
out
repnz
fdivrp
scas
bound
fisub
popf
sbb
popfw
inc
pop
cmps
out
mov
cmp
cmp
pop
inc
inc
ret
loopne
cmc
fbstp
int
inc
lods
(bad)
imul
pop
add
mov
adc
jno
push
push
fidivr
add
test
dec
scas
mov
mov
aam
in
or
jg
or
daa
inc
cwde
scas
int
add
mov
jmp
push
movs
pop
sar
call
pop
pop
add
lea
xchg
nop
mov
cs
or
jnp
jno
inc
inc
fisttp
enter
sub
enterw
and
loopne
fisub
mov
add
leave
mov
in
mul
dec
xor
sub
mov
movs
xor
push
pop
in
mov
mov
dec
mov
sbb
dec
add
js
mov
mov
out
fld
jbe
push
pusha
or
(bad)
push
xchg
sbb
pop
sahf
xor
clc
shl
jg
in
mov
ret
shr
leave
push
dec
jns
mov
push
loopne
mov
cwde
movs
(bad)
push
dec
call
jne
dec
xor
push
push
sub
adc
lock
ret
data16
fsub
call
test
mov
add
das
into
jae
push
enter
call
mov
push
loope
lods
dec
push
sub
jmp
pop
cmp
jp
cmp
push
rol
add
hlt
mov
fcmovnu
xchg
jmp
in
popf
nop
jp
je
mov
xchg
imul
(bad)
sbb
inc
fdiv
xlat
cmp
inc
mov
adc
pop
xchg
cmps
test
adc
sbb
(bad)
inc
dec
fcomp
(bad)
inc
mov
xchg
cmp
xchg
inc
sbb
(bad)
shr
scas
jae
(bad)
movs
xchg
int3
and
jb
scas
cmp
sbb
mov
in
pop
mov
lods
mov
cmp
retf
scas
pop
pop
push
adc
rol
adc
pop
mov
mov
mov
mov
lahf
or
mul
mov
cmps
pop
loop
cmp
ss
mov
test
mov
js
mov
out
adc
xor
push
push
jg
add
inc
xchg
call
add
fs
out
out
xlat
adc
out
or
sub
lods
and
cwde
das
gs
js
cdq
stos
inc
adc
fimul
mov
aad
imul
lock
xlat
xlat
sbb
cmps
std
stc
je
aas
ins
jnp
in
les
pushf
int
dec
pop
fwait
not
and
xchg
js
(bad)
mov
ins
mov
xlat
aad
push
push
stos
xor
push
cmps
loopne
jecxz
dec
xchg
movs
sbb
and
sar
out
dec
out
jg
mov
inc
xlat
or
mov
div
popa
rol
cmp
popa
inc
(bad)
pop
push
int3
add
movs
lds
sbb
adc
mov
inc
xor
data16
ret
mov
scas
sbb
dec
push
push
popa
pop
adc
sbb
inc
push
xchg
hlt
mov
push
test
lock
cmc
inc
dec
test
cmp
aad
mov
xchg
in
in
add
retf
dec
pop
mov
mov
std
mov
mov
mov
test
(bad)
aaa
cmp
or
aaa
dec
push
sti
into
push
add
out
jb
jae
(bad)
push
dec
xor
loopne
out
call
mov
arpl
xor
loope
cld
push
enter
jmp
sar
xor
xor
into
rcr
push
mov
aam
push
out
into
cmp
mov
and
mov
jns
pusha
(bad)
push
pop
sbb
cmp
gs
sub
sar
dec
outs
das
xchg
das
pop
popa
cli
xchg
lea
pcmpgtw
sbb
idiv
dec
add
aaa
cmc
cmp
pop
push
loopne
jge
mov
rol
push
sahf
cld
fcomp
cmp
jns
ins
cmp
popf
pop
das
mov
inc
pop
gs
pusha
dec
cdq
cmp
xchg
push
sbb
adc
jmp
cmp
or
ins
or
add
in
pop
movs
int3
dec
add
xchg
int
fdivp
and
rol
cmc
int3
and
add
cmp
clc
and
sbb
rcl
out
jl
pop
push
pop
mov
mov
cmp
jo
ja
idiv
out
es
sub
xor
mov
sub
les
jnp
lahf
and
mov
push
outs
and
mov
or
test
js
cmp
imul
loope
rcr
mov
xchg
xor
jbe
test
popa
jecxz
sbb
repnz
test
and
cdq
dec
push
inc
xor
xchg
pop
xchg
inc
add
fidivr
repz
inc
stos
(bad)
xor
shl
jo
dec
mov
add
repz
les
push
sbb
fidivr
pusha
(bad)
cmp
std
pop
dec
mov
jo
xchg
shr
and
sub
lods
add
or
in
(bad)
mov
jp
stos
fmul
sbb
push
dec
jmp
bound
pop
mov
xor
xor
pushf
ret
leave
imul
xor
out
ins
pop
add
adc
ss
mov
mov
or
jl
mov
adc
fidivr
add
aaa
outs
mov
and
pushf
mov
sbb
xchg
jb
loopne
aam
dec
sbb
test
xchg
lods
and
inc
pop
fcmovb
push
mov
stos
pop
pushf
ds
xchg
lock
xor
(bad)
cld
inc
or
dec
out
mov
push
fwait
into
jae
cmc
das
sbb
int
push
push
fst
fwait
adc
pop
dec
int
jle
mov
or
int3
mov
mov
xor
stos
mov
cs
enter
add
cmps
jl
jecxz
iret
xlat
sti
dec
push
outs
cwde
pusha
out
outs
mov
movs
mov
xor
lods
int3
lds
mov
outs
adc
pop
loope
js
(bad)
fistp
mov
sub
mov
inc
ret
inc
aad
pusha
mov
test
pop
sbb
leave
inc
pop
pop
sub
cwde
xchg
xchg
add
push
call
ja
(bad)
out
cmps
dec
addr16
lods
stos
inc
bound
pop
pushf
(bad)
jmp
mov
stos
pop
stos
aad
cmp
and
loope
(bad)
test
clc
sub
dec
loop
imul
or
call
inc
mov
push
in
xor
lods
sbb
mov
retf
add
mov
jp
imul
push
push
adc
pop
or
test
out
lods
ins
jmp
mov
xchg
add
sub
mov
pop
out
dec
test
dec
das
mov
dec
test
movs
jne
inc
in
push
rcr
sub
mov
mov
fst
enter
loop
loope
jbe
cmp
sub
lds
dec
inc
and
pop
adc
jb
cmp
fmul
mov
clc
shr
or
mov
xor
fld
arpl
js
xor
pop
push
jae
inc
cmpxchg
adc
and
mov
retf
xchg
cld
sub
mov
push
daa
mov
dec
xchg
stos
(bad)
dec
inc
mov
and
push
inc
mov
add
rol
sub
xchg
add
push
fld
bnd
pop
push
cdq
call
cmps
lock
or
add
mov
fadd
cdq
push
test
pop
sbb
rol
pop
sbb
add
adc
add
and
mov
cs
stos
inc
shr
out
add
or
shl
jmp
or
mov
push
dec
cwde
adc
fwait
jo
and
lods
add
jmp
inc
das
and
jle
pop
dec
xor
xchg
jl
jl
cwde
inc
sbb
movs
push
icebp
push
inc
sbb
sahf
aas
dec
cmp
sbb
xchg
test
popf
lds
repz
adc
arpl
fstp
mov
dec
dec
jl
shr
adc
jne
dec
movs
xor
pop
loope
imul
xchg
popa
fs
loopne
xor
or
pusha
into
fnstsw
xchg
sbb
(bad)
rcr
mov
arpl
cmp
or
xor
xchg
leave
popf
inc
scas
mov
arpl
dec
test
ret
lods
out
mov
sub
sub
dec
or
xor
movs
inc
cmp
push
adc
call
ds
sbb
das
and
dec
sub
mov
and
cmc
xchg
outs
xchg
ret
ss
dec
(bad)
cld
sub
stos
(bad)
aaa
adc
ret
aas
xchg
jae
mov
jge
in
movs
jmp
xor
pop
scas
lds
pop
fbstp
sahf
and
xor
xchg
in
pop
cmc
add
jae
mov
lds
mov
xchg
jbe
rcl
shl
jne
sbb
mov
jmp
mov
jb
jmp
cmp
rcl
imul
dec
mov
xchg
jno
pop
movs
into
xchg
push
fnsave
data16
pop
out
inc
xchg
ret
fld
or
int3
icebp
repz
xchg
or
test
or
test
je
jge
fadd
mov
test
jmp
rcr
and
(bad)
or
mov
sub
imul
lahf
sub
mov
adc
jne
and
mov
and
out
cli
or
je
xor
and
push
cmp
add
mov
call
addr16
xchg
adc
fxch
outs
mov
sub
and
add
lods
les
sahf
test
jne
push
push
jne
pop
cmp
sbb
or
test
sar
aaa
fstp
rol
adc
bound
fs
fs
fcomp
pop
es
and
xor
imul
fyl2xp1
mov
dec
call
mov
lahf
scas
inc
jp
add
out
stos
in
or
inc
ret
jp
dec
sub
jno
xlat
push
cmp
cmps
adc
adc
pop
sbb
push
sbb
xor
sbb
repnz
cmps
cs
sub
xchg
sbb
jge
shl
or
int
std
in
sub
mov
sbb
std
push
mov
aaa
mov
lea
in
xchg
mov
adc
inc
or
sbb
arpl
cwde
cmps
dec
cs
sahf
fs
mov
xor
pop
mov
das
and
rol
mov
jge
pop
jl
repnz
rcl
movs
mov
pop
push
call
xchg
jmp
jae
sar
push
fisttp
into
xor
jne
mov
test
movs
dec
cmp
inc
dec
mov
repnz
lods
cli
movs
mov
xchg
jle
dec
or
ret
or
sbb
stc
and
mov
adc
sets
ja
sub
cmp
and
iret
aaa
mov
lahf
jge
jmp
pop
pop
inc
and
mov
sub
jecxz
xchg
pop
pop
std
add
pusha
cmc
(bad)
je
mov
mov
push
dec
stc
movs
gs
dec
jbe
push
cwde
enter
ret
(bad)
jbe
sub
mov
adc
mov
mov
shr
pop
fwait
and
ds
jg
mov
pop
sub
adc
xor
out
jno
mov
push
pusha
repnz
cwde
fimul
inc
inc
leave
push
xchg
outs
movs
or
and
cs
scas
dec
xchg
and
jge
stos
sbb
or
adc
jb
das
push
xlat
sbb
jb
leave
bound
outs
repz
hlt
shl
add
sahf
rcl
aad
jmp
popf
call
and
sti
sub
(bad)
(bad)
sbb
pushf
add
jo
cli
outs
push
pop
mov
mov
js
(bad)
sub
and
push
xchg
and
loopne
hlt
daa
loopne
je
nop
pop
hlt
rcr
gs
and
xchg
outs
scas
in
pop
jno
nop
sbb
loop
adc
cmp
int
or
jno
retf
and
jl
cmc
dec
fstp
scas
fwait
std
mov
retf
out
lahf
mov
xchg
mov
jmp
push
faddp
outs
jbe
sbb
push
pop
inc
sti
nop
loope
pop
add
mov
out
daa
lahf
jge
inc
mov
daa
pop
mov
adc
and
pop
outs
push
movs
fisubr
out
mov
into
aam
push
stc
cmp
sahf
and
cmp
jge
rcr
dec
or
cs
dec
(bad)
sbb
push
fistp
cmp
jl
sahf
lods
ret
jl
inc
neg
jno
cmp
iret
inc
xchg
mov
jnp
dec
inc
and
mov
jno
and
ds
outs
lds
icebp
pushf
jmp
aam
cmc
jg
test
in
test
and
or
dec
retf
and
push
cdq
mov
into
jle
loope
add
add
mov
ret
icebp
jl
sti
addr16
aad
fwait
add
movs
pop
mov
retf
lds
leave
lea
jecxz
pop
mov
jge
loop
les
dec
psubw
test
loope
xchg
xor
mov
sbb
and
mov
dec
fild
pop
adc
enter
mov
cmc
sbb
(bad)
clc
sar
or
add
adc
out
cmps
inc
inc
add
ins
inc
lock
push
jb
int
ins
sbb
or
fst
inc
sbb
push
push
nop
ins
sub
and
add
inc
retf
fsubr
lock
xor
pusha
or
cmps
pop
bound
add
or
adc
das
inc
adc
ins
adc
push
dec
xchg
jbe
and
sub
scas
aad
pop
ret
sub
out
mov
jge
push
cmp
std
jnp
std
mov
push
xor
or
sub
cmp
jp
in
or
dec
inc
sbb
loopne
sbb
add
and
jmp
icebp
and
jp
fmul
or
mov
stos
xchg
dec
xchg
movs
jl
in
xor
push
les
add
sbb
loopne
aam
lods
sub
gs
test
arpl
jb
xor
mov
xor
cdq
or
shl
ins
mov
(bad)
ds
popa
outs
popa
sar
js
rcl
daa
jmp
mov
dec
jmp
dec
pop
test
into
shl
call
pusha
push
jne
ins
cs
cmp
retf
leave
and
pop
xchg
cmps
mov
and
xchg
add
and
jl
lods
(bad)
xor
jno
sahf
sbb
cmp
in
in
inc
push
adc
mov
int
daa
and
lods
jb
dec
nop
inc
jle
mov
push
cmp
sbb
out
sahf
jae
mov
mov
and
add
cdq
out
in
push
in
xor
push
inc
stc
or
lea
add
xor
fnstcw
mov
sub
mov
xor
add
hlt
sub
popa
and
or
mov
add
dec
call
imul
jp
cs
mov
or
ret
ror
mov
or
aas
push
sti
lods
pushf
xchg
jg
mov
jae
push
xchg
lods
jecxz
loopne
adc
xchg
push
into
sbb
fcom
cs
sub
dec
out
or
mov
mov
push
inc
aad
rol
out
retf
inc
test
xor
sbb
pop
lahf
ret
xchg
test
sub
jbe
inc
jo
and
mov
cmp
jl
push
nop
or
call
pushf
out
mov
xor
es
and
es
aad
icebp
lock
adc
cmps
cmp
pop
das
jns
mov
dec
js
outs
push
sbb
repnz
mov
pop
push
xor
adc
pop
(bad)
or
xchg
mov
lahf
cdq
add
jmp
sti
xchg
adc
stos
or
mov
cmp
jmp
jne
inc
push
pop
adc
xor
pusha
xchg
movs
aam
add
sub
add
scas
sbb
mov
movs
sbb
mov
mov
test
rcr
out
cld
jecxz
and
jb
mov
hlt
(bad)
jmp
mov
mov
js
out
jo
sub
adc
xchg
test
sbb
sub
push
bound
mov
sbb
xchg
sti
mov
cwde
ds
inc
stos
inc
cmp
mov
push
sbb
push
mov
cld
repnz
(bad)
out
loopne
jl
(bad)
hlt
push
lods
cwde
arpl
dec
rcr
or
cmp
nop
xchg
jae
aas
adc
test
push
inc
jge
xlat
push
cmp
mov
cld
inc
mov
cwde
adc
ret
jno
mov
dec
popf
cdq
xchg
cmp
jmp
push
(bad)
or
rol
sahf
sbb
(bad)
adc
add
jecxz
jo
xchg
xchg
mov
xor
mov
ret
xchg
jecxz
sbb
hlt
xor
fisubr
mov
mov
fmul
xchg
cmp
mov
xchg
(bad)
push
pop
add
fist
push
cmp
in
dec
aas
pop
not
sub
jb
cmp
mov
mov
add
ret
pop
aas
cmp
mov
fcmovnb
mov
in
inc
mov
test
dec
jns
aad
xor
adc
push
rcl
(bad)
ds
sub
outs
adc
test
adc
pop
mov
sub
ficom
out
ss
adc
repnz
js
das
fnstcw
dec
mov
test
mov
test
lea
add
push
fs
sub
mov
jns
test
mov
cmp
xchg
fisubr
adc
(bad)
jg
leave
inc
add
fisttp
jge
popf
add
or
sub
mov
jp
aas
xor
(bad)
or
cmp
adc
mov
clc
mov
or
jbe
test
bound
cmp
sub
shl
leave
les
and
pop
dec
or
dec
punpcklbw
lock
sar
pop
adc
shl
fldln2
mov
xchg
daa
(bad)
xchg
sbb
xor
ins
adc
adc
sub
scas
and
jmp
xchg
iret
xchg
mov
xor
repnz
ja
push
ret
push
int3
popw
jl
push
hlt
out
xor
jbe
dec
gs
push
xor
loopne
xchg
loope
ret
retf
sbb
fldl2t
fisub
retf
fcomp
stos
or
(bad)
mov
sahf
inc
ret
(bad)
cmp
outs
imul
stos
or
ss
mov
and
in
sub
inc
mov
push
pop
inc
retf
stos
dec
xor
or
sbb
and
scas
mov
test
mov
push
loope
or
or
inc
stc
clc
xchg
sbb
daa
hlt
pop
fistp
inc
addr16
sbb
xor
pop
and
test
push
lods
adc
mov
test
adc
(bad)
jo
out
in
xchg
sbb
xor
out
lods
lods
jmp
or
out
mov
loopne
inc
daa
mov
(bad)
test
dec
nop
cmps
sub
test
adc
pop
inc
(bad)
adc
adc
sbb
(bad)
xchg
jns
stos
arpl
jae
lods
xchg
cmps
sub
shl
xchg
pcmpeqw
mov
rcr
mov
adc
mov
js
test
imul
cmp
add
mov
xor
ins
push
cld
mov
cmps
ret
sti
adc
enter
imul
(bad)
sbb
dec
inc
push
movs
push
or
shl
mov
adc
outs
sbb
lea
push
sbb
sbb
xor
lds
or
mov
inc
mov
mov
mov
inc
scas
cmp
jae
cld
xchg
add
test
pop
pop
xor
call
enter
sub
sbb
stos
cmps
daa
loope
cdq
push
out
sub
add
test
mov
ds
rcr
xor
xchg
fwait
jg
bound
or
mov
pusha
xor
std
inc
(bad)
test
mov
pop
push
jmp
loop
in
dec
in
xchg
fadd
add
dec
mov
stc
loop
add
pop
jle
jnp
sub
cmp
push
imul
or
jno
scas
jl
xchg
mov
pushf
imul
sahf
jle
ins
ror
or
out
outs
pop
stos
ret
add
fcomp
pop
std
add
mov
inc
sahf
xchg
cmc
pop
adc
xor
and
lock
xchg
jbe
add
mov
xchg
push
xchg
sub
stc
hlt
rcl
repnz
in
mov
push
fstp
retf
sbb
or
hlt
in
cmp
jmp
into
repnz
(bad)
adc
outs
add
lahf
add
mov
dec
mov
out
jno
inc
neg
or
(bad)
xor
xchg
repz
sub
sbb
sub
idiv
pop
pop
adc
mov
es
in
ds
sub
ss
pop
fidiv
cld
lahf
jno
popa
push
mov
ins
mov
ret
fnstsw
xor
hlt
cmp
leave
stos
ss
and
jb
dec
and
icebp
mov
inc
inc
add
mov
push
cmc
and
das
adc
push
mov
rcr
cdq
dec
pop
mov
jmp
(bad)
adc
mov
cmp
rcr
mov
jne
xchg
xchg
repz
out
jle
xchg
repz
mov
pop
ja
pop
inc
and
scas
pop
iret
(bad)
daa
inc
sub
(bad)
add
ds
cmps
fucomi
shl
dec
cli
dec
cmp
xor
cmp
cmp
dec
jne
mov
cmps
add
dec
inc
mov
and
div
(bad)
lock
pop
int
adc
sbb
inc
loop
adc
mov
cs
sahf
and
mov
xor
jmp
(bad)
inc
mov
or
es
mov
xor
cld
sub
add
sbb
cmps
inc
lock
in
ins
pushf
enter
retf
cmp
ret
icebp
push
cld
push
mov
ins
pop
sub
sbb
cdq
ror
mov
mov
xchg
jp
push
aaa
xlat
sub
enter
outs
and
add
out
inc
or
cli
push
sti
xchg
mov
sub
enter
addr16
adc
scas
xchg
mov
loope
dec
out
or
adc
xor
push
outs
cld
jle
mov
loope
mov
adc
jecxz
push
pushf
icebp
mov
jge
js
das
add
in
repz
lock
cmps
in
mov
aaa
into
dec
mov
pop
pop
dec
(bad)
push
(bad)
dec
loopne
xchg
adc
xchg
xchg
add
rcl
adc
cmp
ss
inc
sbb
and
or
in
mov
mov
add
aaa
cwde
ret
mov
(bad)
fiadd
cs
xchg
jmp
add
or
pop
in
mov
repnz
and
push
mov
cs
inc
mov
add
dec
push
jmp
xlat
jle
inc
les
std
ins
rol
and
jns
sahf
inc
jle
mov
in
ret
pop
outs
iret
nop
sub
cmps
icebp
scas
pop
in
(bad)
mov
xchg
das
adc
cli
dec
jmp
inc
mov
repz
mov
in
pop
add
std
(bad)
es
mov
repz
push
sub
rcl
mov
icebp
outs
push
outs
cwde
std
sbb
sti
mov
dec
sbb
adc
and
lahf
adc
daa
adc
aad
out
cmp
sub
cmps
std
shl
ja
inc
xlat
dec
sub
loopne
jge
pop
adc
cdq
push
mov
xor
imul
jmp
in
mov
cmp
outs
inc
cdq
and
or
mov
aam
cmp
push
sub
mov
das
pop
das
(bad)
sti
dec
or
xchg
imul
out
mov
pop
adc
ss
jecxz
icebp
dec
imul
adc
xchg
in
scas
mov
jns
ret
cs
ds
pop
add
ret
je
std
outs
das
stos
lds
sub
inc
not
pop
outs
jg
and
clc
or
ficom
in
and
fiadd
lock
mov
xchg
xchg
aad
and
pop
adc
jmp
or
lods
enter
adc
jbe
je
mov
repz
(bad)
bnd
xchg
imul
push
push
std
mov
xchg
push
add
xor
xor
imul
cwde
push
cmp
dec
pop
xor
fstp
adc
push
sub
mul
arpl
pushw
push
loopne
stc
dec
cs
mov
rcl
out
pop
xchg
fsubr
ins
xchg
(bad)
mov
mov
mov
push
ins
shl
icebp
test
stos
xor
add
rcr
and
xchg
lock
test
cmp
stos
mov
aam
pop
push
xchg
out
mov
mov
ds
xchg
ror
and
sub
xchg
pusha
daa
push
mov
fcom
adc
outs
adc
inc
mov
and
add
fsub
lods
les
jne
aas
jmp
push
fisubr
icebp
inc
(bad)
mov
push
ja
pop
ds
push
repz
daa
xchg
(bad)
(bad)
adc
mov
test
and
jne
cmps
in
push
sbb
aaa
and
push
jno
imul
test
pop
int
push
fs
repnz
mov
lods
repnz
xchg
pusha
ret
lods
and
int
cs
inc
loope
loope
xchg
and
call
dec
mov
arpl
imul
pop
pushf
or
sub
addr16
bnd
ss
mov
sbb
cmps
push
xor
mov
or
inc
xor
mov
in
jg
mov
int
cmps
or
movs
push
pop
push
add
xchg
test
repnz
xchg
out
jns
and
mov
movs
mov
jmp
xchg
and
mov
cmp
add
jnp
xchg
push
out
rol
out
mov
fild
(bad)
xchg
fild
adc
inc
push
cmp
xor
cmc
jae
cli
inc
aam
add
jo
sub
pop
(bad)
dec
xchg
mul
sub
sub
cmps
xor
xchg
push
adc
dec
dec
inc
push
add
cmc
inc
push
call
les
adc
jo
lods
clc
(bad)
out
add
pop
bound
mov
ror
pop
adc
jle
fnstsw
rol
pop
test
fistp
sub
mov
sbb
stos
int3
test
add
(bad)
dec
jl
xor
pushf
dec
jle
sti
loopne
jae
sbb
jo
stc
adc
jbe
mov
out
inc
inc
repz
popa
mov
and
mov
jl
retf
outs
repz
lods
mov
scas
movs
dec
mov
mov
xchg
sbb
clc
faddp
mov
xchg
jecxz
aas
dec
mov
test
jl
add
div
sbb
rcr
mov
enter
lea
xor
enter
adc
(bad)
frstor
jmp
xchg
div
ja
xor
(bad)
mov
push
add
fs
int3
inc
mov
out
xor
(bad)
in
or
lods
push
push
add
adc
push
push
ror
add
cdq
jne
xor
add
out
jmp
xchg
push
mov
mov
movs
sahf
adc
jnp
mov
mov
xor
inc
aaa
aam
hlt
dec
call
(bad)
int3
int3
sub
pushf
fbstp
outs
ja
cmps
pop
adc
unpckhps
fadd
adc
sub
jmp
jb
fistp
xchg
inc
popf
dec
pop
lds
lods
jecxz
mov
jecxz
jae
lds
mov
ds
push
inc
sub
out
out
sbb
mov
pop
inc
es
call
inc
cli
xchg
ds
mov
daa
jecxz
xor
sbb
sub
jae
cmc
aaa
jae
adc
xor
(bad)
enter
mov
or
sbb
pop
lahf
scas
mov
inc
fidiv
outs
inc
ja
or
jne
sub
imul
pop
dec
test
mov
inc
add
cmps
mov
xor
pop
(bad)
pop
loopne
repnz
retf
lods
pop
pushf
mov
pop
cwde
call
pop
es
mov
and
lock
or
jno
jge
mov
(bad)
cmp
mov
addr16
cmc
sub
xchg
push
or
mov
fidiv
add
inc
das
xor
pop
cmp
inc
ds
add
pusha
fisub
inc
pop
add
pop
in
adc
fisub
je
adc
aas
jge
ja
sub
add
dec
cmp
jmp
lods
adc
adc
push
aas
jle
and
push
retf
pop
mov
daa
rcr
ret
adc
fst
ins
jge
jnp
in
jo
push
xor
sti
neg
out
clc
jae
int
addr16
rcr
popf
sub
ins
and
mov
add
outs
ins
sti
cmp
pushf
and
repz
nop
pop
dec
loope
dec
jae
ds
push
std
cli
jp
add
fnstcw
pop
sbb
dec
mov
mov
jl
or
lahf
and
imul
stc
push
sub
jg
or
add
inc
mov
xchg
sub
fidivr
retf
jecxz
test
test
pop
outs
div
(bad)
mov
out
jl
and
mov
add
mov
bound
push
push
sahf
xchg
xor
sbb
push
cmp
or
out
pop
pop
push
inc
sub
mov
and
out
or
jmp
xchg
out
call
in
inc
push
(bad)
jns
cld
packssdw
int
inc
shr
push
add
mov
push
mov
xor
aam
pop
lods
fld
cmp
pop
call
jle
xchg
cmp
jmp
ins
mov
jno
nop
xchg
outs
cmc
fisub
xchg
and
jbe
or
(bad)
loopne
inc
or
cmp
xor
lods
fdivr
xchg
dec
or
popa
mov
xchg
rol
mov
xor
add
mov
out
inc
repz
imul
jne
sbb
ret
jb
pop
js
and
cmp
(bad)
mov
pop
jg
fmul
dec
push
jmp
packsswb
mov
or
das
test
sub
les
sub
test
sbb
sbb
mov
or
mov
dec
pusha
xchg
xchg
(bad)
test
or
xlat
mov
(bad)
sbb
jmp
sbb
adc
mov
cdq
xchg
pop
mov
dec
dec
xchg
mov
ret
mov
jp
inc
and
(bad)
lods
sub
mov
push
retf
xchg
in
add
pop
cmps
pop
test
mov
stc
mov
mov
sbb
push
sub
push
shl
sub
imul
add
or
clc
adc
mov
cmp
inc
push
ins
cmp
adc
popa
jge
fs
cmp
clc
xor
xchg
std
popa
sti
std
movs
out
adc
push
or
jno
adc
push
sar
xchg
iret
ret
cmp
test
pause
test
xchg
fisttp
jb
int
es
ds
or
cmp
push
jg
call
or
or
sub
push
sbb
jle
test
sub
fcmovnb
int
add
mov
jne
pop
out
out
fst
mov
sub
lahf
jae
sub
sub
push
pop
cmp
push
pop
dec
or
fidivr
xlat
inc
iret
loope
pushf
pop
mov
repz
mov
sub
clc
dec
lds
pop
aaa
push
sub
jbe
cld
or
retf
mov
jo
into
sbb
jb
push
sub
ss
cmps
stos
pop
sub
test
shl
loop
rcr
stos
hlt
(bad)
ror
test
movs
or
fwait
pop
movs
cwde
jg
sbb
push
fstp
ret
fsubr
js
inc
cmp
sub
movs
inc
push
cmc
or
neg
aaa
dec
pop
popf
inc
outs
xchg
(bad)
movs
jno
int
mov
push
add
cld
aad
das
push
in
or
jmp
mov
push
rcr
in
ja
retf
icebp
cmp
jnp
mov
sbb
and
out
push
dec
inc
push
pusha
dec
inc
add
out
dec
gs
cmp
dec
pop
rcl
ror
leave
test
xor
and
es
pop
icebp
add
mul
sub
fwait
inc
push
bound
das
lods
push
inc
daa
retf
jp
hlt
lea
mov
fcomp
cmp
pop
lods
jmp
cmps
cdq
jmp
adc
xchg
dec
hlt
pop
ja
dec
scas
jae
pop
daa
mov
sub
cmps
add
les
adc
(bad)
(bad)
sub
push
jns
ins
sar
mov
cmc
adc
sahf
mov
adc
shl
out
(bad)
(bad)
cmp
mov
les
imul
sbb
mov
push
cmc
cmp
inc
aad
pop
retf
add
(bad)
jmp
enter
xor
movs
and
int3
and
mov
movs
adc
xchg
mov
xor
and
pop
ret
fwait
and
and
aam
mov
or
test
into
shl
lds
in
add
sbb
sub
and
cli
hlt
dec
(bad)
mov
mov
mov
push
mov
(bad)
out
push
test
or
daa
rcr
pop
fild
or
imul
inc
and
out
mov
rcl
inc
(bad)
movs
shr
dec
dec
sub
cmp
adc
sub
in
sbb
(bad)
lods
jl
push
out
mov
mov
add
dec
jmp
(bad)
shl
repnz
lahf
mov
mov
add
pop
add
sar
sub
out
push
mov
cld
rol
aas
cli
out
xchg
int
push
dec
sub
in
dec
fcmovnb
inc
cdq
jne
daa
in
cdq
sbb
jg
in
in
dec
cli
(bad)
jae
jne
mov
ret
ficomp
sbb
into
mov
sub
or
dec
aad
into
lock
push
ins
adc
and
movs
iret
std
mov
aam
mov
div
mov
sbb
popf
inc
dec
xchg
and
push
xchg
push
mov
sar
fst
cmp
stc
dec
rol
push
lods
retf
mov
lods
loopne
stos
aaa
pop
sti
mov
or
and
ds
mov
or
inc
ins
cmp
sbb
pop
test
out
lea
lahf
sub
mov
add
(bad)
loop
adc
push
add
retf
mov
data16
and
mov
sbb
mov
jbe
add
cdq
lfs
shr
xor
imul
push
mov
aas
ins
fild
sub
sub
ficom
push
fimul
dec
out
push
(bad)
(bad)
jmp
popf
lock
clc
sub
ret
push
ds
daa
imul
sub
cs
mov
(bad)
int3
cwde
cmc
cld
cmp
test
mov
jns
inc
pop
mov
sbb
mov
adc
xchg
test
pop
inc
stos
pop
fst
pop
cli
inc
ss
jle
adc
movs
cli
and
and
sub
mov
(bad)
out
mov
fs
mov
mov
ss
retf
das
cli
mov
pop
mov
add
(bad)
and
xor
gs
loope
add
fcomp
(bad)
(bad)
adc
pop
imul
xor
movs
push
dec
push
lea
mov
jae
mov
adc
mov
jmp
dec
cmp
js
pop
inc
addr16
jecxz
mov
adc
cmps
hlt
pop
rol
mov
xchg
adc
jp
stos
inc
das
gs
or
cld
and
push
dec
or
add
push
mov
sub
ficomp
mov
dec
pop
sbb
or
inc
retf
sub
test
out
outs
mov
push
jmp
test
add
jo
retf
ds
fsubr
mov
dec
sbb
sar
popf
sbb
js
mov
xor
rcr
pusha
addr16
or
sbb
pop
xchg
push
ror
add
jmp
mov
icebp
lea
push
push
jg
in
jp
iret
pop
aas
sbb
popf
movs
jp
imul
int
mov
hlt
sbb
test
out
shr
sub
add
or
dec
arpl
movs
fwait
sbb
loopne
retf
outs
out
inc
dec
mul
into
push
aad
sub
(bad)
jmp
aam
stc
or
fidivr
add
sub
(bad)
ins
fnsave
ffreep
cli
mov
loopne
mov
js
rcl
fwait
shl
adc
mov
ret
shl
pop
out
out
nop
jmp
sti
repz
push
pinsrw
sub
jo
push
cmp
fucomip
fwait
cli
push
mov
push
push
push
sbb
dec
std
mov
lock
push
and
and
xor
ror
neg
mov
and
in
ds
imul
xor
ss
pop
jno
loopne
adc
aad
ror
lea
jl
inc
xor
mov
jmp
dec
div
mov
push
loop
(bad)
fnstsw
aaa
xchg
mov
sub
cmps
rol
ss
sbb
sti
lds
dec
mov
sbb
cmc
clc
retf
xlat
and
out
out
test
adc
(bad)
mov
sbb
sub
addr16
lahf
or
int3
sub
cmps
in
iret
loope
pop
pop
push
xor
lods
sbb
es
in
mov
cmps
jle
fcom
push
in
outs
jo
sbb
mov
xor
pop
mov
cwde
push
sahf
stc
add
repnz
mov
sub
out
stos
popa
aad
mov
mov
pop
out
push
les
dec
or
outs
xor
les
push
es
lahf
inc
mov
mov
adc
fcom
mov
std
(bad)
push
cld
out
ror
inc
xchg
das
or
mov
fsub
popa
mov
ins
cmp
aaa
lock
(bad)
adc
lods
lock
in
ja
jnp
dec
fst
scas
ret
cs
enter
mov
cmc
cwde
mov
inc
movs
or
dec
(bad)
mov
sub
or
sbb
push
data16
jge
adc
and
dec
and
mov
je
adc
lds
stos
sbb
sub
sar
repnz
and
mov
(bad)
xchg
scas
pop
ss
(bad)
fldenv
dec
jmp
or
cld
lock
mov
out
jne
mov
in
push
sbb
cwde
jo
or
xor
mov
test
pop
and
cmps
xchg
sub
pop
enter
push
jne
mov
mov
es
rol
dec
sub
jle
mov
popa
mov
mov
pop
dec
shr
aaa
inc
test
dec
fst
retf
cmp
mov
xchg
pusha
adc
pop
je
out
arpl
and
fldcw
sub
sub
jle
inc
dec
mov
or
pushf
dec
cmps
cmp
frstor
into
icebp
cmp
js
jae
inc
popf
(bad)
ret
adc
retf
lea
mov
retf
shl
aad
imul
add
push
adc
mov
adc
mov
push
rcl
gs
retf
jne
push
into
mov
jns
test
push
shl
je
sbb
js
dec
dec
cmps
mov
jmp
out
iret
sub
pop
fs
mov
add
mov
imul
imul
lahf
int
test
jnp
adc
lods
cmc
adc
or
xor
inc
pop
push
shl
test
mov
mov
mov
test
(bad)
hlt
mov
test
and
scas
fsub
sbb
aam
sbb
xor
out
int
movs
push
mov
fdiv
push
xor
repnz
xor
push
ja
add
add
or
test
push
imul
cmps
dec
cmps
add
bound
(bad)
inc
fimul
shl
mov
aaa
ins
retf
sub
push
sub
fwait
in
popa
mov
xchg
xchg
rcr
adc
add
mov
stos
add
daa
cmp
enter
(bad)
imul
(bad)
pop
push
cwde
mov
imul
xor
push
xchg
dec
addr16
adc
mov
movs
sub
pop
push
ss
mov
push
out
mov
ret
clc
cmp
nop
dec
lods
loop
pop
dec
cdq
mov
ja
inc
xor
outs
xchg
jo
mov
cmp
cmp
dec
mov
jnp
sbb
sub
push
push
fwait
cmc
lds
inc
out
loope
adc
cli
inc
or
dec
ret
sbb
cmps
jo
out
add
cmps
pop
jle
add
add
dec
imul
xchg
aaa
mov
adc
outs
jb
cmp
test
pop
cmp
or
stos
iret
popf
dec
mov
popa
lods
aaa
jecxz
cmp
push
adc
mov
jns
xor
call
pop
test
in
push
int
retf
shl
mov
lds
inc
push
aaa
mov
or
cmp
or
sub
test
fidiv
sub
cmps
popa
dec
push
fidivr
outs
jno
fwait
or
pop
xchg
dec
ds
mov
outs
outs
inc
jae
scas
nop
aam
bound
pushf
pusha
mov
iret
rcl
pop
ds
test
clc
ss
data16
lds
mov
ret
in
xchg
fdivr
mov
dec
mov
and
cmps
retf
mov
xchg
sti
xchg
nop
aam
nop
(bad)
out
push
scas
sbb
fs
jmp
cdq
dec
pop
sub
mov
jno
dec
movs
lods
gs
xchg
jecxz
push
mov
jo
cmp
xchg
popf
push
in
nop
repz
test
fisttp
int
stc
es
test
and
jae
shr
std
es
pop
outs
push
stc
icebp
pusha
pusha
cs
mov
cwde
aam
adc
mov
sub
lods
sahf
mov
out
xchg
les
xor
xchg
inc
or
ss
das
mov
adc
mov
loope
mov
mov
mov
dec
std
and
cld
bound
cmp
inc
sbb
fs
cmps
retf
lods
dec
sub
pop
into
fild
call
adc
shl
cmps
mov
sub
or
or
nop
adc
mov
push
test
jbe
sar
adc
jne
or
jmp
test
rol
jb
jl
and
out
mov
push
adc
pop
sub
or
les
add
xchg
mov
jae
mov
enter
dec
sub
stc
ror
into
mov
pop
push
clc
sbb
mov
xchg
or
rcl
sub
pop
inc
lods
js
fdiv
dec
lock
xchg
and
fcomp
pop
xor
xor
push
jmp
mov
stos
mov
repnz
and
(bad)
sub
scas
pop
xchg
aas
sub
div
data16
repnz
les
mov
loopne
in
jnp
stos
shl
mov
push
addr16
call
adc
sub
into
lods
in
add
fs
push
into
mov
mov
mov
adc
xor
add
dec
call
push
ret
shl
scas
jbe
sti
fwait
out
adc
stc
int
dec
lahf
stos
or
imul
mov
mov
push
push
and
mov
dec
jnp
jg
push
push
adc
xchg
ja
(bad)
out
mov
or
movs
int3
movs
pop
sar
fld
(bad)
daa
shl
lahf
add
push
or
aaa
js
mov
repnz
xor
fsub
retf
add
into
lods
mov
adc
jle
jo
(bad)
mov
dec
ret
iret
pop
sub
(bad)
mov
jecxz
jb
xor
in
rcr
mov
inc
sbb
xchg
mov
dec
pop
xchg
cmp
jp
jb
cmp
pop
or
out
mov
call
inc
into
push
mov
mov
dec
xor
call
gs
mov
dec
mov
jecxz
sub
lea
aaa
sbb
loop
push
into
dec
shr
cmp
fiadd
pop
push
fiadd
int
xchg
inc
mov
xchg
(bad)
das
mov
lds
mov
cmp
out
and
cmp
xchg
popa
or
in
cs
jge
pop
popa
es
daa
outs
test
shl
push
hlt
or
cli
jle
xchg
bound
sub
ror
fstp
jmp
ret
cmc
and
dec
cmp
pop
out
inc
into
(bad)
fbstp
test
shl
xchg
stc
rcl
pop
pop
and
ja
jae
adc
pop
push
stos
adc
inc
cmp
fistp
ja
(bad)
dec
cdq
fsub
sub
fld
push
lds
pushf
(bad)
fidiv
jo
mov
mov
jno
xchg
add
xor
jmp
aaa
xchg
xor
mov
inc
retf
adc
push
int3
neg
dec
retf
lods
or
aaa
mov
push
sar
xor
inc
sti
push
cmps
mov
pop
shl
das
fwait
scas
xchg
mov
or
hlt
fwait
mov
movs
ret
rcr
push
xor
xor
test
dec
(bad)
jge
cld
pop
mov
daa
inc
cmp
mov
pop
xor
jmp
adc
push
fistp
(bad)
or
xor
push
lahf
push
les
xor
pop
xor
jmp
out
dec
(bad)
iret
xlat
jo
and
pop
jnp
enter
jne
cmc
stc
lds
pop
fs
cmp
push
and
push
xor
fs
test
out
(bad)
fcmove
adc
jae
imul
mov
pushf
pop
and
push
add
daa
push
dec
and
and
sub
pop
mov
in
loopne
and
sahf
push
cdq
in
add
xchg
test
push
mov
lods
ins
arpl
xor
or
adc
iret
std
mov
sbb
div
cmp
or
push
pop
add
push
cmp
fs
cdq
sub
inc
fidivr
xor
retf
test
call
jno
retf
jo
fcmovbe
(bad)
call
loopne
adc
out
sti
mov
mov
lock
adc
inc
pop
das
js
(bad)
push
repnz
push
adc
cmc
mov
jp
jno
push
leave
add
(bad)
inc
jb
int3
cmc
xchg
and
test
aaa
push
jb
pop
pop
call
jne
cmps
stos
cwde
test
loope
or
loope
adc
rcr
and
mov
fsubr
ins
int
repz
aad
xchg
fbld
lods
pop
sbb
mov
call
jmp
jge
pop
mov
xlat
movs
movs
gs
mov
jle
sti
and
loope
mov
sub
iret
test
add
in
sbb
loop
(bad)
mov
shr
cmovns
push
hlt
leave
sbb
lods
shl
jp
(bad)
xchg
cmp
cmps
jne
(bad)
mov
scas
xor
pop
ins
aas
arpl
mov
bound
cld
and
fld
daa
out
or
push
xchg
dec
jb
cld
icebp
jmp
(bad)
push
xchg
dec
frstor
fdiv
stos
sahf
mov
fs
adc
scas
sub
adc
jmp
jecxz
ins
sbb
test
stc
outs
repnz
call
jb
jnp
je
push
ficomp
inc
(bad)
stos
xchg
pop
rcr
scas
jmp
cwde
push
je
cmp
pop
push
pop
pop
das
call
test
aam
add
(bad)
pop
mov
sub
out
pop
mov
movs
dec
aad
loop
ret
inc
push
xchg
ret
jl
mov
dec
add
psubusb
or
lahf
cli
ins
push
outs
pushf
ja
fsub
inc
jge
jns
imul
sbb
adc
mov
cmps
sub
lea
test
ins
xchg
sbb
(bad)
sub
in
mov
jg
push
sbb
fisubr
push
std
sub
mov
test
data16
jbe
leave
cmps
fcomp
add
loop
push
fdivr
or
sbb
cmp
add
(bad)
and
out
mov
push
add
ja
dec
loopne
xchg
pop
pop
jnp
int
imul
stos
sub
inc
dec
mov
out
dec
xor
data16
(bad)
fdiv
push
ret
mov
cdq
sub
push
int
addr16
in
inc
sub
ret
imul
sub
sub
mov
pop
adc
movs
out
jno
mov
in
push
cmp
sti
cmp
sbb
mov
or
sbb
loopne
inc
jbe
or
pop
dec
mov
add
mov
arpl
cmps
in
xor
jecxz
sti
xchg
xchg
jmp
inc
out
pop
fisubr
inc
rcl
pop
pop
pop
push
xor
adc
dec
test
push
jmp
mov
mov
push
mov
cmp
xchg
daa
ret
mov
das
push
push
out
xor
fbstp
jne
mov
gs
cmp
mov
shr
xor
sbb
push
pop
sub
jmp
and
dec
mov
push
aas
jne
jg
adc
inc
mov
or
sub
mov
call
xor
ja
loope
push
mov
dec
push
push
sub
ja
jae
and
retf
cmc
cmp
or
push
xchg
fucomp
xor
and
cld
sbb
xchg
enter
popf
push
in
or
into
pop
aas
ret
imul
jmp
cdq
lock
movs
sbb
jmp
sbb
push
inc
jp
jmp
out
jg
sbb
call
movd
leave
stos
nop
sbb
fnstsw
je
test
std
fmul
into
mov
sub
mov
fcom
clc
pop
outs
inc
jecxz
add
aaa
xchg
ja
fist
ss
jmp
xor
aam
mov
int
popa
jmp
cmp
loop
cmp
push
sub
jmp
mov
xchg
daa
and
out
ret
or
adc
jb
jns
jge
loopne
or
mov
out
sbb
mov
test
pop
in
sar
enter
jecxz
mov
push
imul
or
cmps
or
cmps
mov
jae
retf
arpl
pop
ja
lods
jne
push
add
or
repz
pop
mov
ret
mov
mov
int3
add
out
loop
movs
out
add
loopne
add
in
pop
cmc
scas
in
xor
cmps
mov
std
pop
fistp
scas
ins
ret
sbb
dec
mov
(bad)
jecxz
js
and
imul
adc
pop
stos
(bad)
mov
scas
loop
aas
enter
mov
shr
imul
addr16
mov
addr16
(bad)
mov
(bad)
xor
and
fcmovbe
std
jo
xchg
inc
js
mov
adc
loopne
retf
(bad)
std
addr16
ins
call
jg
fbld
ret
sub
aam
xchg
xchg
jae
cmp
shr
pushf
mov
stc
shl
test
push
inc
nop
sub
add
stos
lods
adc
cmp
retf
imul
outs
mov
mov
push
in
int3
out
sub
loop
xchg
sub
jb
fld
mov
shl
jno
adc
and
jnp
retf
mov
outs
fidiv
or
(bad)
jno
push
push
xchg
push
inc
dec
cmp
cmp
jbe
test
mov
(bad)
xchg
jmp
cmp
sub
in
dec
and
mov
aas
inc
sub
fstp
ins
rcr
(bad)
xor
cld
jnp
xor
mov
in
mov
sbb
push
mov
ret
xchg
mov
lock
sub
sti
fisub
js
xchg
xchg
dec
outs
in
sub
into
adc
test
push
std
xchg
xchg
cmps
cs
loope
dec
jle
inc
dec
dec
jp
and
iret
and
into
jge
cmc
cmp
mov
lods
in
pusha
ja
cmps
xor
cmc
and
lahf
mov
push
fistp
pop
sub
sub
ins
rol
ret
adc
cmp
and
xor
call
push
in
xchg
mov
cli
adc
add
xor
pop
sbb
popf
lock
ror
pop
push
leave
out
icebp
imul
dec
fcomp
sbb
ss
mov
gs
add
cmp
fstp
iret
or
adc
push
lods
add
mov
mov
sub
scas
or
movs
out
loopne
hlt
dec
push
mov
imul
aaa
test
pop
daa
imul
enter
rol
sete
mov
fwait
sbb
in
pop
fwait
repnz
popa
in
nop
popf
and
fs
retf
sbb
jno
xchg
inc
scas
frstor
push
mov
or
sbb
hlt
fdivr
push
adc
into
push
out
adc
inc
in
pop
mov
js
mov
enter
out
pop
mov
jge
lds
or
repz
rol
repz
popa
movs
add
xchg
sbb
push
push
mov
and
mov
push
push
cmps
ins
fidivr
das
inc
cmps
movs
jo
and
out
sbb
dec
push
dec
pop
mov
jne
iret
push
mov
(bad)
sub
les
jl
sbb
shr
sbb
imul
arpl
test
inc
popa
aam
repz
dec
rol
add
imul
jle
es
sub
lods
adc
ret
mov
push
les
sub
and
jns
jbe
outs
xor
sar
mov
adc
lds
xor
ret
mov
push
jmp
add
imul
retf
pop
jle
or
push
adc
ds
cs
mov
dec
xchg
movs
fild
mov
dec
test
jge
stos
mov
pop
bound
xor
push
imul
add
inc
(bad)
in
add
cmp
test
mov
dec
sbb
aam
sbb
shl
iret
xor
jns
mov
sar
or
xor
mov
or
jnp
mov
push
sti
aas
xlat
scas
pop
add
add
pushf
sub
test
sbb
cld
hlt
push
ret
loop
imul
mov
std
addr16
sbb
popa
jmp
lds
movs
dec
js
push
dec
stos
aam
add
mov
cld
push
adc
scas
add
pop
jg
(bad)
mov
lgdtd
test
mov
test
push
pop
add
sub
movs
lahf
loopne
mov
(bad)
mov
mov
inc
sbb
lock
shl
les
xchg
xchg
rcr
popa
xchg
and
retf
hlt
push
jp
(bad)
jmp
jo
lahf
inc
mov
call
(bad)
in
and
js
mov
fs
jns
into
mov
cdq
jp
int3
mov
arpl
in
mov
add
jl
inc
mov
popa
in
mov
aam
dec
sub
es
mov
imul
ds
fild
jns
cmp
mov
mov
out
cmp
stos
lods
ret
mov
mov
cmps
cmps
mov
xchg
sbb
mov
call
mov
sub
push
mov
xor
push
or
nop
dec
cmp
imul
push
pushf
inc
push
cmp
ins
push
call
add
into
mov
sub
and
inc
mov
pop
gs
and
xor
fwait
sahf
and
iret
jb
jmp
sub
ss
stc
pop
outs
sahf
pop
xchg
out
mov
clc
dec
aad
cmp
dec
sub
dec
repz
gs
mov
repz
sahf
push
cdq
adc
mov
(bad)
jp
ja
sbb
or
push
jle
cwde
sub
sbb
or
cmp
push
mov
int
and
mov
test
push
xor
in
sbb
mov
dec
sahf
and
mov
pusha
shl
(bad)
stos
clc
mov
jmp
push
mov
mov
sbb
push
adc
imul
icebp
lds
xchg
fiadd
clc
repz
call
jb
push
inc
fisubr
addr16
xchg
add
out
push
push
pop
sbb
cmp
jne
dec
cmp
in
repz
push
cmp
pop
lock
jmp
into
pop
repz
stc
add
push
jl
lods
mov
xor
stos
movs
aad
mov
les
mov
jns
loope
(bad)
repz
loop
fnstenv
jle
icebp
sbb
imul
add
iret
cmc
inc
imul
test
je
sbb
sahf
push
sub
cmps
or
pop
push
sbb
in
sbb
dec
ins
test
stos
mov
cmp
sbb
adc
popa
push
cs
sbb
add
jp
and
xor
or
aad
add
ins
dec
fsubr
add
ss
sub
pusha
inc
(bad)
fsubp
pushf
ja
mov
nop
adc
fist
ret
adc
cmp
movs
push
push
mov
jne
jl
cmp
mov
mov
push
scas
out
fidivr
sbb
test
imul
and
(bad)
test
dec
xchg
push
arpl
dec
mov
cmp
push
in
and
inc
mov
fs
sub
in
repnz
push
jmp
cmp
or
ins
mov
inc
popa
push
mov
loop
inc
js
call
aad
cmp
ins
lods
popf
mov
arpl
dec
pop
sbb
adc
mov
pop
cwde
ja
test
add
mov
xchg
dec
outs
sub
xor
add
retf
push
scas
xlat
cwde
dec
push
mov
imul
aaa
dec
fsub
xor
mov
cmp
mov
jmp
outs
fwait
jmp
inc
mov
add
mov
das
adc
add
out
scas
adc
and
popa
mov
adc
stos
arpl
pop
dec
add
sub
jle
call
dec
cwde
jle
repz
mov
or
pop
popf
adc
inc
lds
and
xchg
daa
aad
pop
sub
sbb
inc
push
jne
cdq
push
jae
sahf
test
push
adc
jno
push
push
xor
pop
(bad)
mov
sbb
inc
lods
ficomp
pushf
(bad)
(bad)
push
push
mov
add
test
in
pop
addr16
sbb
inc
add
inc
adc
xchg
adc
jmp
xchg
sti
popf
(bad)
les
push
imul
cli
mov
mov
enter
adc
add
fdivrp
mov
dec
and
and
add
sbb
cmp
nop
in
jge
cwde
in
out
jno
sbb
stos
mov
push
lock
or
mov
leave
push
mov
inc
lea
pusha
add
cdq
int3
or
xor
mov
fild
pop
or
sti
jle
push
mov
add
sbb
fsub
sbb
pop
mov
push
mov
inc
scas
xchg
push
xor
mov
repz
cdq
cli
shr
inc
(bad)
pop
into
daa
retf
sub
cmps
pop
push
and
pop
call
movs
mov
mov
jg
jp
mov
addr16
and
xchg
fdivrp
adc
ds
adc
loopne
clc
mov
stos
int3
out
cmp
jne
aaa
dec
nop
ins
adc
dec
loope
and
stos
jns
outs
aaa
add
popaw
xor
js
push
jae
mov
xor
pop
cmp
and
test
pusha
std
pop
mov
cmp
cmp
inc
sar
xor
mov
dec
fisubr
xor
fwait
aaa
mov
dec
rcr
mov
sub
xor
dec
xchg
test
cmp
lahf
cwde
fs
shr
retf
(bad)
pop
fwait
push
mov
mov
push
outs
mov
fisubr
sub
pause
jo
out
xchg
mov
mov
clc
iret
adc
dec
leave
push
shl
mov
cmp
and
and
or
shl
(bad)
mov
loope
add
pop
dec
into
mov
enter
stos
xchg
cmp
jne
(bad)
and
mov
fidiv
push
movs
xchg
sbb
push
xor
cmps
hlt
retf
imul
or
test
fmul
cld
sbb
jae
ss
sti
and
push
push
js
push
xor
cld
mov
aaa
fcom
(bad)
or
(bad)
cli
outs
xor
or
inc
test
xchg
inc
neg
xchg
mov
inc
hlt
add
and
fldenv
push
arpl
fs
xor
sbb
lahf
cli
loope
inc
pop
cmp
or
mov
mov
out
xchg
jb
mov
dec
mov
in
shl
test
fdivr
aam
push
sub
dec
ja
sub
pop
cld
in
or
xchg
mov
mov
dec
jb
js
mov
jecxz
cmp
ret
rcr
aam
je
sub
pop
mov
pop
popf
push
icebp
rcr
aas
mov
movs
into
cmps
add
test
repnz
or
retf
loope
sbb
push
and
cmp
sub
cmps
or
outs
dec
inc
cmc
aam
mov
clc
scas
ss
jns
lods
mov
cmps
sbb
repz
fidivr
lds
push
jecxz
push
jo
dec
test
xor
lds
ss
cmp
push
in
dec
into
adc
stos
call
sub
retf
and
inc
add
dec
mul
or
xor
stos
or
in
mov
xlat
dec
test
into
in
or
(bad)
push
xor
cdq
xchg
mov
scas
xchg
push
push
stc
iret
test
mov
pop
mov
mov
in
pop
jnp
inc
test
repnz
lock
lods
inc
fcom
jnp
stos
sub
mov
sbb
repz
(bad)
call
dec
dec
inc
repz
dec
cmp
adc
cmp
in
outs
ror
jae
int
mov
sbb
fs
sbb
push
mov
jp
sub
and
push
ror
xor
adc
dec
mov
in
(bad)
dec
retf
and
pop
cwde
lods
sub
sbb
test
jns
ins
stos
es
setge
xor
ja
clc
das
mov
or
in
int3
in
or
js
dec
sub
daa
sti
xor
xlat
inc
popa
xchg
call
int
popa
inc
dec
ror
loop
jnp
mov
push
pushf
mul
test
retf
lds
add
jl
inc
int
jae
xchg
cmp
repnz
addr16
das
xor
fist
icebp
jl
mov
cmp
cmp
dec
xor
push
stc
or
cmp
sbb
dec
ror
fist
mov
and
je
or
sub
fdivr
and
(bad)
cld
leave
inc
fnstcw
jle
inc
pop
sbb
sahf
cmc
div
dec
cld
scas
or
and
int
inc
xor
jp
inc
test
mov
xor
jne
cmp
cs
push
adc
loope
aam
and
push
fwait
xchg
push
adc
mov
sbb
adc
jmp
mov
loope
or
inc
jl
cmps
arpl
cmp
test
stos
iret
outs
ret
data16
jge
cmp
jle
add
jecxz
aas
cli
cmp
sub
ficom
bnd
scas
mov
or
out
test
test
mov
pop
daa
adc
jecxz
rol
xchg
jp
and
lea
xor
cmp
or
scas
jmp
push
call
add
xor
jecxz
dec
sti
push
dec
ja
mov
adc
sub
mov
add
retf
fwait
push
xchg
shl
mov
jno
mov
in
js
inc
pop
mov
mov
sub
inc
aad
outs
xor
pushf
dec
cmp
stos
lds
push
fwait
sbb
or
push
mov
scas
or
cmp
jle
sub
aam
retf
jae
popf
enter
mov
cmp
iret
fisttp
imul
adc
gs
and
movs
xchg
push
pop
xchg
or
xchg
mov
es
retf
mov
data16
test
add
shr
push
xchg
(bad)
sbb
call
rcl
outs
jb
(bad)
dec
out
repz
lods
pop
lods
daa
jb
dec
mov
pop
out
lock
das
jp
test
add
aas
dec
push
rol
mov
mov
sbb
sbb
cs
adc
add
ja
cdq
mov
cwde
xor
xchg
mov
xor
inc
sbb
jle
xchg
dec
jmp
dec
(bad)
test
ins
dec
push
push
jnp
mov
sbb
xchg
mov
jae
data16
nop
xchg
mov
xchg
push
xchg
pushf
ret
sub
fucom
adc
js
fcomp
cdq
mov
test
pop
in
push
stos
jecxz
pop
test
ret
ins
cmp
push
sbb
pushf
mov
pop
(bad)
pushf
xchg
sub
lods
dec
shr
inc
(bad)
mov
xchg
div
xor
lods
mov
mov
lods
mov
ins
stos
push
inc
sahf
jmp
sar
mov
in
adc
int3
jge
xor
dec
les
(bad)
fcom
(bad)
cmp
es
sahf
xor
mov
das
mov
xor
aam
pop
sbb
cdq
adc
fwait
xlat
sbb
xchg
mov
mov
je
popa
pushf
imul
inc
jge
outs
(bad)
and
sub
cld
aad
addr16
cmp
add
stos
inc
(bad)
mov
in
ins
mov
mov
cmp
loop
dec
idiv
call
test
cld
lock
ss
outs
cmp
pop
mov
outs
pop
xchg
sbb
fiadd
dec
push
jmp
mov
and
mov
rcl
ret
js
jne
jmp
stos
mov
stc
ret
inc
fsubr
jmp
sbb
pusha
mov
lds
xor
test
ins
dec
dec
dec
lea
or
cmps
and
sbb
in
push
mov
out
cmp
mov
dec
xchg
and
cdq
int3
fist
or
pop
push
mov
adc
xchg
sti
std
cmp
fnstcw
fcmovnu
pop
(bad)
dec
mov
pop
stos
sbb
shr
mov
loop
or
mov
push
jb
movs
mov
inc
mov
test
jbe
sub
(bad)
xor
out
retf
xor
and
jnp
cli
cmp
fwait
mov
imul
inc
and
cmp
repnz
(bad)
or
repnz
repnz
(bad)
shl
test
push
rcl
lea
icebp
jecxz
jge
mov
xor
loope
out
outs
dec
imul
or
mov
inc
popf
xchg
movs
mov
out
in
movs
pop
dec
or
add
xor
fidiv
mov
dec
push
cmp
xchg
test
add
fstp
jnp
adc
jb
adc
jmp
daa
adc
imul
jl
std
movs
inc
xchg
sbb
or
push
sahf
(bad)
popf
inc
(bad)
mov
inc
and
movs
cmp
adc
and
push
sbb
or
inc
pop
bound
daa
xlat
pause
mov
xchg
loop
push
push
push
ret
lods
and
test
sbb
xor
mov
mov
hlt
mov
fmul
lods
jo
mov
mov
push
mov
sbb
test
(bad)
imul
cld
mov
or
stc
cmp
lods
scas
ja
(bad)
cmps
das
daa
and
xchg
xchg
repz
adc
add
add
sub
outs
mov
push
mov
xor
cmp
sub
jno
iret
jmp
daa
leave
push
scas
xchg
xchg
idiv
mov
loopne
fld
dec
xchg
push
ficomp
out
repz
pushf
popf
scas
fadd
gs
clc
adc
push
sbb
adc
dec
pop
(bad)
xchg
imul
fdivr
ja
sub
or
ss
mov
lods
cli
icebp
repnz
fdivr
js
ret
fst
push
jl
pop
clc
pop
inc
jmp
int3
stos
pop
mov
loopne
dec
lock
mov
in
sub
stos
adc
push
jle
pop
jge
out
scas
lods
in
es
push
cmps
cmp
call
add
aam
inc
out
nop
js
fsubr
scas
and
test
fsub
(bad)
ja
push
out
push
xor
or
call
pop
jo
leave
mov
lea
outs
int
mov
sti
das
or
int
pop
dec
(bad)
pop
add
ret
out
adc
push
fstp
movs
xchg
add
cwde
mov
cdq
mov
jo
fs
mov
xchg
scas
lahf
xrelease
inc
lea
push
push
aad
pop
ror
mov
cdq
adc
sub
(bad)
cmp
dec
pusha
fwait
test
cmp
mov
adc
pop
pusha
dec
jp
es
push
dec
ficom
stos
jne
adc
(bad)
jmp
sbb
outs
sub
and
mov
lods
lods
in
es
add
pop
xchg
cld
mov
repnz
sti
sbb
gs
scas
inc
dec
shl
enter
xchg
jb
retf
push
das
inc
mul
(bad)
mov
sub
ficom
vmovapd
shr
xor
or
loopne
add
sbb
push
inc
sbb
xchg
jo
in
icebp
mov
std
aaa
push
lahf
xor
cmp
nop
xchg
adc
imul
adc
popa
push
and
repz
jb
(bad)
out
sub
aam
mov
and
add
ret
push
(bad)
xchg
nop
data16
in
mov
lea
fiadd
adc
test
xlat
rcl
adc
dec
std
shr
push
in
fnsetpm(287
es
jns
jnp
mov
add
stos
movs
sti
stc
and
(bad)
rcl
fisttp
mov
js
pop
and
movs
sbb
cmc
mov
ja
loop
rcr
push
pop
add
mov
inc
test
xchg
cld
jmp
and
cmp
pop
dec
mov
dec
bswap
(bad)
fsubr
lahf
sbb
cs
es
out
and
test
cmp
or
or
push
mov
xor
jle
cmp
(bad)
adc
cdq
(bad)
mov
out
xchg
(bad)
imul
inc
in
push
pop
pop
popa
xor
mov
mov
or
pushf
mov
wbinvd
xchg
nop
inc
jg
mov
lock
and
arpl
pop
out
out
iret
add
pop
sti
push
mov
sar
ficomp
push
rcl
pop
es
in
in
outs
xor
lods
addr16
xor
and
arpl
sub
fimul
pop
add
cmc
xor
ins
sbb
xchg
inc
repz
mov
and
pop
push
loop
mov
push
push
ret
jnp
push
das
mov
cmps
sub
ror
rcl
dec
xor
cmps
nop
adc
enter
push
jb
scas
sub
gs
test
pop
test
jge
adc
ja
pop
retf
pop
mov
retf
rcl
stos
mulsd
rcl
sub
hlt
fsub
pop
retf
retf
cmp
mov
aam
in
fld
or
lea
les
sbb
pusha
popf
cmp
daa
and
push
aam
call
ret
rol
dec
and
cld
jb
shl
aad
ja
and
xor
cmp
daa
mov
and
imul
jmp
repnz
(bad)
out
retf
imul
cmp
ins
shr
push
aam
fbld
aad
jle
xor
cmps
int3
call
or
enter
mov
in
xor
shl
push
retf
inc
ja
mov
and
dec
push
in
add
ds
xchg
and
lahf
dec
popa
dec
pop
cmps
sbb
cli
loopne
ds
push
mov
jg
dec
mov
inc
stos
fmulp
out
mov
jecxz
inc
mov
jbe
or
mov
cmps
jmp
dec
scas
and
dec
or
or
jno
cmp
fcomp
mov
fdiv
cwde
pop
xchg
cmc
jnp
icebp
pop
fucomp
xor
xchg
jle
(bad)
mov
retf
pop
out
and
cmp
in
les
push
out
jae
(bad)
out
lods
mov
(bad)
movs
mov
mov
addr16
dec
or
dec
jae
sbb
adc
jecxz
xchg
sbb
mov
rcl
mov
mov
shl
bound
mov
popf
push
imul
or
stc
push
repz
xchg
(bad)
mov
pmaddwd
sti
sub
clc
push
sub
into
inc
push
pop
adc
mov
jae
imul
xor
pusha
frndint
mov
shr
dec
movs
and
clc
stc
or
test
sbb
jae
adc
adc
add
sbb
sub
mov
out
clc
out
xchg
sahf
jmp
(bad)
repnz
and
jecxz
in
(bad)
mov
inc
sbb
mov
pop
(bad)
hlt
cmp
cmp
out
add
jbe
cmc
sub
loope
scas
mov
jns
icebp
xor
(bad)
mov
aam
data16
retf
mov
ins
sbb
adc
mov
push
mov
fmul
mov
popa
cmp
daa
adc
test
sbb
jnp
sbb
xchg
pop
icebp
pop
cmp
dec
sub
pop
and
mov
iret
sbb
push
imul
jbe
pop
in
jne
test
mov
xchg
mov
pop
ret
aaa
cmp
cmp
sti
jle
je
std
fcomip
inc
jge
aad
adc
fnstsw
jns
daa
adc
loopne
cmp
dec
dec
retf
movs
jae
mov
int
out
mov
fld
and
popf
push
xor
das
leave
cld
xor
in
jp
pop
cmp
xor
cmp
ss
jbe
jl
jl
sub
test
xor
inc
mov
movs
pushf
call
repnz
aad
inc
cdq
in
icebp
jle
lods
mov
enter
cs
add
push
xchg
int
in
rcr
sub
xor
sub
sbb
das
dec
int3
cmp
sub
aas
cmp
sub
fimul
data16
sbb
shr
in
call
push
aaa
loope
jno
popa
test
call
xor
out
pop
cmps
adc
sahf
ins
sar
pushf
jno
psraw
nop
mov
mov
lods
retf
(bad)
push
mov
mov
jns
ror
je
xlat
sub
add
lods
push
sub
push
pop
xor
(bad)
sbb
fs
push
fbstp
push
sub
mov
jnp
out
pop
push
hlt
push
aad
cld
gs
pop
das
ja
xchg
pop
bound
out
inc
jbe
(bad)
mov
cmps
jp
pop
in
push
jmp
ret
xchg
lahf
sbb
mov
sbb
into
xor
lods
push
mov
test
bound
shr
mov
inc
and
push
and
xchg
retf
add
call
xchg
sub
inc
imul
(bad)
sahf
ins
cmps
push
data16
and
pop
inc
stos
shl
jno
push
sbb
cmps
or
fwait
(bad)
push
fidivr
xor
jmp
arpl
mov
dec
inc
adc
and
push
mov
jbe
scas
jge
test
add
out
(bad)
imul
push
mov
hlt
inc
js
jge
mov
xor
inc
sbb
or
xchg
xchg
sahf
inc
ror
inc
pusha
repnz
sbb
dec
push
push
add
sti
scas
sbb
pop
pusha
xor
pop
call
xor
adc
(bad)
mov
pop
out
adc
sbb
test
inc
ins
aaa
jmp
xor
jne
push
cli
fcomp
das
mov
sub
lds
mov
push
jp
adc
loopne
hlt
test
jl
sub
mov
pop
and
dec
int3
jg
sbb
or
out
dec
fs
mov
enter
adc
sub
push
cmp
sbb
add
push
cmp
or
mov
lock
scas
frstor
cmp
jecxz
dec
dec
repnz
shl
ret
pop
cmp
jns
or
(bad)
push
scas
outs
fimul
or
sbb
leave
icebp
mov
sub
test
or
lock
add
pop
cmp
mov
jno
fdiv
adc
mov
jp
xchg
stos
mov
mov
loopne
sbb
cmp
mov
in
sbb
retf
fst
mul
adc
xchg
pop
enter
push
dec
push
sbb
retf
ss
pop
push
adc
sbb
(bad)
(bad)
add
or
popa
test
cmp
lods
sbb
js
stos
(bad)
inc
ficomp
add
sub
movs
mov
vmaxsd
call
inc
jecxz
push
jne
sbb
pop
fisttp
cdq
retf
and
jg
xchg
or
jne
push
or
push
enter
dec
data16
into
cdq
leave
and
jns
enter
and
pop
lds
xor
xor
retf
cdq
xchg
lds
pop
push
mov
sub
sti
aad
adc
js
mov
xchg
fstp
xor
mov
in
sbb
mov
and
inc
pusha
fidiv
pusha
xchg
push
popf
xor
sar
pop
sub
stc
mov
sub
stos
mov
pop
and
fstp
inc
cmps
je
push
outs
outs
mov
popf
test
enter
jo
sub
dec
repz
xor
cs
out
adc
add
cs
mov
mov
xchg
repnz
lds
or
pop
or
push
movs
xor
xor
sbb
sbb
lea
stos
jle
sbb
jle
sbb
loopne
jmp
sbb
sbb
cwde
pop
movs
xchg
xchg
or
adc
or
jp
jge
popa
sbb
mov
loopne
push
or
xchg
bound
icebp
shl
lock
inc
repz
pop
punpcklwd
jecxz
call
mov
test
cld
jae
push
adc
mov
and
cmc
push
and
jnp
or
ret
cli
imul
dec
out
clc
or
ds
push
aad
mov
sub
pop
hlt
cwde
jb
mov
jl
shr
fiadd
push
pop
mov
jns
xchg
movs
jnp
pop
shl
inc
mov
xchg
jne
scas
shl
fimul
xor
push
xor
(bad)
sub
xchg
pop
add
xchg
jg
mov
out
test
fldenv
(bad)
shl
add
ror
into
neg
fisttp
push
jb
fwait
xchg
mov
mov
aam
nop
pop
jg
dec
mov
or
dec
push
dec
sar
and
sahf
aaa
adc
mov
push
mov
loop
adc
cmp
(bad)
add
mov
(bad)
adc
or
add
push
jo
popf
js
rcl
es
neg
not
int3
add
pop
xlat
movs
mov
push
ret
std
push
xchg
cmps
js
mov
gs
outs
stos
(bad)
jo
dec
jg
scas
add
adc
jle
jae
push
dec
(bad)
not
ret
mov
arpl
mov
mov
test
addr16
cwde
ins
jmp
or
stos
stc
cmc
sbb
xchg
test
or
sti
add
inc
jo
adc
xchg
add
mov
in
ror
mov
mov
pop
mov
pusha
mov
xchg
jge
xchg
push
lock
mov
xchg
frstor
pop
mov
out
nop
movs
(bad)
pop
sub
mov
add
push
fsubr
in
loope
push
pop
and
enter
cmc
sbb
adc
adc
jne
add
mov
jb
lea
add
pop
push
push
ret
sub
cmps
xor
mov
cld
pop
repz
xlat
(bad)
loopne
imul
data16
pop
aas
cmp
test
adc
mov
xor
sar
lods
out
cwde
addr16
fs
loope
je
repnz
aaa
int3
and
in
das
loop
movs
and
add
adc
add
jle
sbb
repnz
cs
movs
imul
pop
or
add
test
and
mov
mov
mov
sub
mov
adc
(bad)
call
mov
xor
mov
mov
and
mov
test
pop
pop
mov
das
fstp
sbb
scas
js
adc
jle
jae
mov
(bad)
(bad)
ss
or
add
inc
push
ja
sub
div
jmp
pop
ret
sbb
in
sub
retf
gs
loope
inc
lahf
dec
cmp
loop
ret
xor
iret
sar
test
iret
pop
lea
mov
adc
fsubr
aad
aam
xchg
jecxz
mov
movs
retf
pop
jp
dec
mov
mov
int3
add
pop
push
adc
outs
lock
shl
scas
test
pusha
adc
movs
jg
push
inc
jmp
xchg
aam
xor
into
mov
and
mov
jl
out
xchg
scas
mov
inc
les
mov
push
int3
cmp
test
and
ins
mov
pop
outs
sar
pop
xchg
xor
(bad)
inc
in
inc
cs
adc
stos
leave
dec
jno
out
and
cmp
stc
sub
gs
push
and
push
jae
cmp
out
stos
adc
dec
jg
pop
(bad)
pop
pop
in
ror
mov
lods
in
xchg
sbb
pop
xor
rcr
mov
xchg
cmp
retf
dec
out
sub
and
push
jl
mov
mov
pop
jns
scas
cmp
sbb
mov
cmp
daa
jmp
mov
shl
cmp
jmp
jb
fimul
cs
gs
(bad)
mov
or
cmp
out
sar
cli
cmps
or
adc
aam
add
into
out
xor
mov
cmp
jmp
sub
aad
pop
(bad)
cmp
mov
fiadd
xchg
jl
test
adc
fdiv
sbb
push
rcl
int
dec
dec
dec
mov
cmp
xor
and
and
test
adc
dec
sbb
cmp
cmc
sti
mov
fmul
xchg
adc
cmps
sar
add
sbb
jp
ror
xchg
shr
cdq
scas
loopne
cwde
inc
(bad)
pusha
lods
hlt
jno
sar
or
dec
mov
sbb
(bad)
mov
ficomp
sub
or
les
aad
pop
daa
test
push
(bad)
xchg
mov
or
adc
test
out
cs
shl
sahf
jb
mov
jg
(bad)
iret
cld
adc
mov
adc
fistp
or
pop
stos
jge
aas
mov
pop
xchg
jmp
clc
dec
jnp
cs
push
sbb
ins
out
mov
cs
sub
mov
iret
push
adc
adc
pop
rol
clc
adc
mov
sbb
out
gs
add
mov
scas
push
pop
adc
cmps
dec
cmp
xlat
xchg
push
sub
push
xor
push
and
(bad)
ret
inc
mov
pop
dec
ret
jns
out
inc
mov
cwde
dec
mov
ss
aam
cmp
jle
jae
xchg
xchg
ins
jmp
clts
mov
jmp
dec
mov
popa
rcr
cld
in
pop
test
jbe
jg
dec
dec
sub
retf
mov
pop
ins
fnstenv
stos
out
or
xchg
adc
daa
mov
jo
push
out
hlt
lea
push
inc
mov
pusha
inc
or
xchg
pop
loopne
jae
xor
cmp
jmp
add
lahf
sbb
mov
call
mov
outs
ret
cmc
inc
adc
faddp
cvtps2pd
mov
addr16
add
movs
in
adc
fdivr
popa
xchg
dec
jge
pop
fild
(bad)
add
(bad)
xor
std
adc
mov
xchg
leave
iret
(bad)
ins
sub
ret
lods
cdq
sbb
nop
mov
cmps
test
xchg
stc
and
int
push
xlat
leave
movs
hlt
jg
push
ds
test
call
je
loope
sar
dec
call
shr
retf
push
sar
xchg
fadd
fimul
inc
pop
rol
mov
int3
inc
mov
ret
add
gs
add
xchg
mov
sub
cwde
jg
data16
or
dec
into
stc
out
and
imul
test
sub
dec
aam
call
lods
ins
hlt
jge
mov
aas
fisttp
jmp
daa
scas
int
pop
xchg
push
and
daa
js
adc
imul
jle
inc
push
cmp
test
adc
aam
and
pop
xchg
or
adc
sub
push
int
mov
cmp
das
sub
jmp
cmp
popf
cmp
lahf
xor
dec
ror
hlt
adc
es
lahf
mov
out
mov
add
enter
repnz
mov
rcl
out
and
loopne
pop
sub
push
jns
iret
xor
(bad)
cmps
jp
daa
push
mov
mov
pushf
hlt
adc
shr
stc
(bad)
mov
inc
jmp
retf
push
mov
jg
jg
into
enter
pop
jl
or
cmp
push
shl
sub
or
and
fwait
xchg
hlt
and
mov
mov
or
mov
cmp
scas
aam
repnz
or
movs
xchg
xor
enter
push
dec
cmp
sahf
lods
adc
push
pop
sbb
jg
fmul
and
mov
out
sbb
retf
cmps
mov
xchg
stc
fistp
xor
imul
and
push
in
nop
and
not
dec
xor
retf
sar
mov
inc
sub
dec
mov
cmp
nop
push
sbb
test
inc
pusha
cmp
fiadd
mov
and
mov
xchg
rol
adc
xchg
sahf
sub
pop
retf
lods
inc
(bad)
retf
sub
call
pop
out
sbb
clc
add
shl
not
jmp
scas
or
imul
fisttp
cdq
and
loope
test
sbb
mov
cwde
mov
jecxz
mov
push
fcom
sub
xchg
iret
pop
inc
jg
mov
jl
add
lock
int
or
add
test
call
dec
loopne
scas
dec
mov
stos
(bad)
(bad)
popa
in
gs
imul
mov
pop
movs
movs
loopne
ins
mov
adc
(bad)
int
rcr
fisttp
push
and
adc
push
mov
xor
test
adc
xor
sti
jmp
mov
jl
pop
sbb
sbb
jle
inc
ficom
adc
mov
aam
cld
pop
push
cs
add
leave
sbb
popf
push
(bad)
jl
pop
mov
add
sub
pop
loope
adc
jns
pop
popf
fs
inc
ja
mov
sub
push
loopne
xlat
mov
test
and
aaa
add
mov
pop
jp
or
sbb
cmp
in
test
in
cwde
fs
lds
scas
sar
xor
cmp
out
mov
push
cmp
adc
xlat
aaa
out
lods
stos
imul
dec
cmp
cmp
popf
cmp
pop
test
test
push
adc
jno
xor
inc
mov
xor
mov
fld
sub
jecxz
loope
cmp
sub
test
pop
dec
mov
out
xchg
ins
or
scas
pop
jb
inc
mov
sbb
adc
mov
add
leave
and
sbb
out
cdq
adc
jbe
ds
cld
sbb
adc
inc
loopne
jl
add
lods
xchg
sbb
cwde
fsubr
jle
xor
jl
popa
cmp
mov
call
push
and
(bad)
(bad)
repz
mov
dec
ins
sbb
test
push
inc
out
sub
cmp
pop
pop
cmp
sub
ja
dec
addr16
inc
clc
outs
cld
into
adc
mov
jp
aaa
adc
in
fisttp
out
std
pop
mov
call
hlt
inc
mov
data16
inc
lods
leave
xor
push
sub
xchg
sub
cwde
mov
scas
jg
sbb
xchg
pop
dec
mov
call
fdivr
sahf
arpl
sar
sbb
(bad)
clc
(bad)
shl
push
xor
(bad)
lods
dec
leave
sbb
loopne
push
mov
sub
mov
add
aam
dec
inc
push
jp
xor
sbb
push
and
cmc
fild
sti
in
sbb
nop
xor
inc
fstp
jae
stos
nop
in
sti
push
adc
push
retf
xor
adc
test
aad
shr
cld
(bad)
not
mov
shl
or
inc
dec
sub
sub
out
data16
fmul
pop
push
sbb
shr
mov
clc
arpl
xchg
outs
pop
and
aam
imul
neg
adc
lahf
xchg
ja
out
lods
pushf
lods
pop
call
mov
popa
mov
and
es
pop
call
or
inc
fmul
jmp
or
arpl
movs
fisub
and
aaa
in
inc
push
mov
cmp
add
jbe
mov
cmps
cld
ret
stos
rcr
adc
push
jae
cs
outs
(bad)
aad
scas
sub
cmp
ins
sub
and
movs
jg
scas
pop
sbb
mov
shl
jns
xlat
lods
sub
dec
shr
pusha
cld
aas
imul
cmp
pop
inc
jmp
dec
outs
adc
push
jl
outs
mov
xchg
aas
and
cmp
ret
xchg
pop
xchg
movs
scas
pop
mov
pop
xchg
dec
inc
add
cmps
les
or
data16
jo
push
ror
mov
inc
adc
(bad)
inc
dec
cmc
out
inc
xchg
xchg
xchg
xchg
jg
repz
xchg
pop
push
inc
or
sub
xchg
xor
mov
cmp
inc
add
imul
add
out
aam
je
mov
adc
or
movs
dec
fcom
xchg
sbb
movs
sub
in
aad
xor
fstp
rcl
in
ins
lds
es
pop
gs
mov
or
icebp
xchg
jae
xchg
movs
add
dec
cmp
(bad)
in
dec
sbb
in
int3
sub
rcl
aad
mov
idiv
cmps
and
in
mov
inc
lods
jecxz
test
pop
test
gs
(bad)
xlat
pop
adc
push
sub
jmp
out
retf
mov
loopne
in
das
test
pop
(bad)
push
stc
jecxz
push
es
jg
adc
lock
jne
sub
add
pop
mov
push
les
std
aas
pop
mov
mov
aas
push
test
neg
inc
das
std
cmps
sahf
mov
mov
and
test
adc
xchg
pop
in
out
jmp
out
mov
xchg
out
mov
stos
ins
adc
xor
shr
pop
add
jge
jle
scas
sub
ret
daa
push
dec
dec
or
(bad)
aaa
cmc
lods
dec
xor
mov
dec
loop
mov
mov
scas
mov
icebp
xor
shr
movs
jnp
pop
nop
gs
icebp
adc
jns
cmp
xlat
dec
dec
leave
test
xchg
dec
fcomp
adc
scas
mov
es
outs
and
dec
fisubr
(bad)
sbb
xor
ja
add
fs
bound
aaa
mov
mov
lock
xlat
call
inc
cmp
jno
mov
sub
lds
imul
mov
or
arpl
add
call
mov
ror
retf
xor
call
or
jge
fwait
nop
add
sub
(bad)
xchg
sub
scas
xchg
xchg
or
mov
call
inc
in
pop
lds
cmp
push
bound
add
test
clc
push
dec
es
push
fild
xor
mov
inc
lahf
mov
sub
sub
int3
and
sbb
scas
les
pop
inc
(bad)
loop
push
not
push
inc
adc
sbb
stos
aad
fiadd
mov
(bad)
out
sbb
mov
icebp
jbe
(bad)
ins
pop
xor
or
adc
or
mov
xor
adc
xor
add
pop
and
leave
xchg
dec
and
jnp
mov
and
pop
iret
(bad)
mov
retf
cmp
fild
mov
and
fwait
test
cdq
jbe
aas
icebp
xor
jl
shr
ja
add
scas
push
mov
aam
or
sub
stos
out
hlt
jmp
sub
test
xor
jle
in
fdivr
mov
(bad)
pop
bound
mov
cmp
sub
cmp
dec
pusha
push
fsub
pop
push
adc
cmp
pop
dec
inc
popa
inc
(bad)
jmp
mov
adc
enter
inc
xchg
cmp
jo
sbb
inc
movs
dec
adc
push
fimul
mov
push
mov
sbb
sbb
jo
sub
sub
out
mov
inc
pop
test
cmps
or
or
inc
sub
repz
sti
jp
push
cmp
mov
and
add
pop
stc
pop
inc
in
cmps
cmp
mov
pop
xor
or
popa
clc
sbb
sti
(bad)
xor
pushf
mov
das
and
cmp
pop
aam
(bad)
(bad)
mov
mov
sub
jmp
ins
dec
sbb
cmp
movs
aas
xor
scas
nop
xchg
and
sti
jge
xchg
push
daa
sub
fisub
push
mov
lock
into
test
bound
sar
dec
pop
je
add
push
jg
mov
fdivp
aas
xchg
adc
adc
xor
push
loopne
sbb
pop
push
push
inc
lock
lods
loope
sbb
jmp
or
adc
dec
pop
icebp
pop
dec
adc
cli
or
jb
or
jl
mov
les
add
and
test
jp
dec
xor
pop
inc
(bad)
jecxz
mov
fadd
imul
mov
pop
test
test
fnstcw
fdivp
test
repnz
mov
int3
das
dec
jg
or
in
jb
adc
jmp
nop
mov
dec
daa
fadd
mov
sub
ins
movs
mov
adc
dec
and
test
lods
pop
xchg
psrlq
out
fbstp
inc
movs
js
imul
fbld
mov
add
jnp
mov
retf
in
mov
inc
pop
xor
mov
pop
xor
jg
push
mov
sub
jecxz
or
lock
push
mov
pop
je
push
mov
nop
or
adc
ss
sahf
sbb
icebp
mov
ins
lea
and
pop
xor
inc
jmp
pop
and
scas
add
mov
in
adc
daa
aaa
and
in
cmp
in
into
push
cmp
mov
fstp
test
and
es
idiv
shr
and
movs
adc
push
lea
jns
and
hlt
xchg
je
xchg
push
push
mov
(bad)
jne
add
jp
pop
cmp
clc
xor
je
fisubr
(bad)
fcom
and
mov
addr16
sbb
adc
mov
test
out
xor
shl
adc
ss
fstp
in
in
pop
and
add
jmp
xchg
adc
stos
outs
(bad)
push
lock
rol
cld
(bad)
in
jmp
stc
xchg
fwait
mov
or
movs
dec
xchg
scas
int
fsubr
pop
xchg
dec
or
es
jno
jp
dec
(bad)
sbb
xchg
repnz
lods
ror
cmp
dec
sbb
cmp
jbe
pop
dec
mov
shl
jle
scas
cli
pop
repnz
sbb
cdq
fs
mov
je
inc
fidivr
mov
(bad)
loope
xor
jecxz
pop
sbb
push
jae
add
dec
jb
xchg
cli
test
cmp
fdiv
and
and
mov
aam
sub
and
aad
shl
fsub
sahf
shl
in
jbe
daa
das
and
push
loope
(bad)
add
mov
push
adc
lea
(bad)
sbb
repnz
push
repz
nop
pop
lahf
push
and
icebp
sbb
or
test
aad
and
sbb
fld
iret
adc
jle
and
inc
pop
push
cwde
pop
mov
or
js
cld
ror
pushf
jmp
pop
mov
stos
mov
pavgw
pop
jns
movs
add
(bad)
jmp
sbb
hlt
mov
and
lods
repz
(bad)
sar
push
pop
xchg
push
dec
sub
xchg
dec
xchg
mov
add
push
lods
push
xchg
sub
gs
call
arpl
ds
stos
mov
loop
adc
scas
retf
sbb
inc
out
inc
cmp
pop
dec
lds
or
pop
add
out
mov
cld
cs
dec
mov
aad
xor
ss
mov
dec
aad
cli
icebp
ret
lds
mov
cdq
mov
push
mov
iret
into
fisubr
inc
pop
mov
jecxz
inc
shl
pop
jae
mov
mov
mov
jle
pop
pop
test
pushf
enter
clc
pop
mov
xor
fstp
stos
sahf
push
leave
mov
xchg
stc
push
stos
fwait
movs
std
sub
pusha
call
bnd
pop
fadd
not
mov
rcr
or
in
or
mov
int
int
xchg
das
je
js
test
fwait
(bad)
or
push
sub
xchg
popa
dec
xchg
sbb
sbb
adc
test
mov
test
xor
fnstcw
iret
hlt
cmc
cmp
xor
stos
cmp
(bad)
dec
mov
push
out
dec
mov
or
jge
movs
cld
jmp
push
shl
scas
retf
sbb
pop
xchg
jle
pop
and
les
sub
lds
xchg
out
xlat
test
inc
push
push
lods
sub
adc
sub
addr16
mov
xchg
ins
test
adc
cli
das
sbb
xor
(bad)
(bad)
fisttp
xor
cmp
xor
or
dec
pushf
cld
out
jge
lods
in
fs
ins
sub
and
jmp
adc
das
jl
cmc
xlat
push
add
jmp
mov
and
lds
sub
jno
sub
cmc
out
mov
(bad)
lods
in
cmps
or
fadd
pop
adc
pop
int3
sahf
lods
mov
push
cmp
and
aam
dec
sbb
push
sti
popf
xor
(bad)
leave
mov
ret
lods
aam
push
hlt
ins
mov
xchg
cmp
aas
mov
ror
pop
cmps
add
adc
jb
inc
or
jne
sbb
push
jnp
mov
xchg
bound
dec
sub
push
fdivr
repz
xlat
stc
mov
out
div
and
fisttp
stos
out
jmp
mov
(bad)
lds
dec
(bad)
xchg
dec
jnp
movs
sbb
cmp
jmp
movs
jo
mov
or
out
repz
mov
sub
out
les
sbb
test
mov
jae
(bad)
outs
xor
or
mov
push
jns
lods
movs
xor
dec
(bad)
jne
inc
shl
inc
jl
lods
rcr
adc
cmps
push
into
jno
or
stos
fcmovbe
jl
lods
mov
cmc
fcomp
sahf
gs
std
xchg
mov
push
mov
cmp
or
jo
jbe
imul
rol
and
(bad)
aas
lea
(bad)
stc
sub
sbb
div
stos
jl
xor
mov
cli
sbb
shl
bound
data16
je
xor
int3
adc
sub
retfw
in
lds
push
mov
dec
pusha
mov
ds
scas
shl
in
cld
or
mov
xor
jle
or
(bad)
sbb
fwait
addr16
pop
cld
jmp
jmp
mov
loop
push
sub
mov
or
sub
adc
lods
dec
repnz
pop
pop
ins
movs
call
ret
sar
fisub
sub
jae
add
scas
mov
jge
mov
mov
add
push
nop
or
sub
fisubr
push
rcr
cmp
add
dec
les
mov
and
jle
inc
dec
adc
(bad)
sbb
test
pushf
jmp
int
inc
vmovdqu
clc
cmp
jbe
jae
jmp
sub
test
sbb
movs
push
sub
retf
rcl
(bad)
mov
sub
repnz
cdq
lahf
cmp
std
pop
mov
mov
bound
pop
sbb
inc
mov
or
es
mov
ficom
sub
mov
int
test
call
or
int3
mov
pop
sar
xchg
sar
imul
in
das
(bad)
lea
dec
fwait
sbb
lods
push
bound
inc
(bad)
mov
pop
shl
loope
daa
cmp
scas
int
not
retf
call
jge
xchg
cmps
sub
jns
cmc
cmp
push
enter
inc
push
add
and
add
(bad)
or
dec
lahf
sub
(bad)
mov
daa
test
popf
inc
dec
mov
outs
pop
mov
or
add
movs
push
shl
xchg
in
mov
lods
and
dec
or
cmps
jle
cmp
push
test
int3
(bad)
push
lahf
stc
push
push
scas
rcr
mov
bound
add
cmps
sub
mov
imul
and
add
repnz
jns
and
pop
inc
dec
add
add
popa
pop
out
(bad)
scas
push
movs
imul
cmps
les
rcl
mov
(bad)
mov
imul
mov
loopne
pop
mov
inc
push
jp
xor
sbb
pop
inc
(bad)
daa
(bad)
cmp
jnp
out
ja
jnp
jecxz
icebp
push
in
call
scas
sbb
call
push
or
test
mov
std
push
imul
(bad)
mov
sub
ret
sub
xchg
cwde
pop
neg
addr16
xor
add
into
xchg
repnz
dec
int3
pop
sar
dec
enter
cli
std
test
and
std
mov
push
or
icebp
repz
xchg
std
sbb
jb
jge
xlat
repnz
imul
sti
xor
inc
inc
enter
pop
jp
pause
jg
test
fs
pop
icebp
leave
inc
mov
mov
mov
cmp
push
pop
add
push
inc
pop
sahf
sub
pop
(bad)
or
enter
call
push
das
(bad)
in
cmps
inc
aam
fwait
and
adc
push
fcom
pop
or
int
mov
(bad)
fcmovnb
aas
xchg
out
aaa
mov
call
pop
jbe
ins
ret
dec
pop
or
dec
xchg
pop
xchg
dec
(bad)
cwde
mov
scas
inc
stc
sbb
jae
rol
mov
add
(bad)
fimul
ds
dec
out
jp
enter
aaa
cmps
mov
xchg
sub
int
mov
pusha
sub
cmps
mov
jmp
dec
push
in
xchg
repnz
not
stc
jp
(bad)
stc
add
push
das
adc
sub
sahf
pop
sbb
mov
or
cmp
cld
cli
icebp
pop
mov
or
aam
and
sub
pop
mov
imul
sbb
mov
or
(bad)
adc
movs
add
add
add
xchg
jg
test
push
sbb
or
test
pop
push
push
inc
icebp
(bad)
mov
add
xchg
mov
add
sbb
sub
mov
sbb
repnz
(bad)
les
(bad)
addr16
jecxz
int3
xchg
jbe
xor
mov
sahf
outs
dec
retf
mov
cmp
lds
daa
pop
mov
xor
sahf
cmps
mov
cmovnp
cmp
(bad)
test
dec
ret
stc
mov
inc
nop
push
addr16
or
(bad)
in
pop
int3
aad
mov
mov
pop
(bad)
out
mov
popf
in
or
adc
pop
ret
mov
mov
cli
js
sbb
add
imul
push
nop
dec
add
leave
push
outs
ret
fidivr
sub
pop
(bad)
dec
lods
mov
arpl
fldz
adc
push
mov
call
bswap
sub
or
add
imul
lea
add
push
lods
mov
(bad)
xchg
inc
or
sbb
call
fidivr
jle
cmp
js
js
test
neg
in
stc
jne
es
aas
sbb
fmul
cmp
jno
jbe
arpl
into
jns
mov
xor
cmps
sti
lock
cdq
addr16
int3
xor
test
mov
xor
inc
(bad)
or
shr
xchg
jle
lock
mov
add
aam
xchg
in
xor
cmp
out
lea
dec
out
xchg
mov
xor
lea
add
outs
mov
adc
repnz
and
cld
dec
repz
call
mov
dec
stos
mov
mov
into
je
loop
dec
xchg
sar
sti
lods
pop
xchg
js
push
inc
sbb
outs
jae
adc
mov
rcl
pusha
ins
fst
adc
mov
jo
test
cli
je
jmp
cmps
jmp
mov
in
dec
ret
test
sub
mov
and
ja
js
pop
fisub
cwde
into
inc
dec
(bad)
xor
push
cmc
dec
jg
retf
out
sub
call
jmp
jno
add
lods
inc
or
daa
repnz
mov
ret
inc
idiv
jbe
mov
add
push
out
loope
test
ror
stc
int3
dec
fadd
jle
aaa
dec
loope
add
loop
nop
shl
in
mov
test
xor
mov
dec
cmps
daa
cmp
sub
pop
xor
addr16
xchg
push
push
ins
loop
sbb
or
mov
dec
adc
scas
pop
pop
inc
stos
jo
add
or
xchg
push
adc
retf
sbb
push
shl
(bad)
clc
shr
mov
mov
xchg
and
mov
adc
test
sub
sbb
push
ret
jmp
mov
lahf
add
lods
ja
sub
cmp
ret
ins
xchg
jns
and
mov
jl
ret
(bad)
mov
push
mov
aaa
ret
mov
cld
add
cmp
ficomp
and
jge
int3
cwde
(bad)
(bad)
fsub
sbb
ret
or
mov
sar
(bad)
mov
(bad)
sbb
into
(bad)
je
adc
shl
adc
or
call
ss
stos
mov
or
adc
or
enter
pop
(bad)
mov
fcomi
xchg
rol
jb
iret
loope
inc
xor
sbb
inc
jae
popf
xlat
jno
shl
jmp
clc
push
mov
add
dec
pop
xchg
lock
shld
and
add
mov
aaa
ins
aad
and
mov
test
sub
nop
fisubr
into
int3
icebp
xor
dec
mov
push
jo
jbe
cmps
mov
inc
xchg
xlat
sar
fldcw
sub
mov
adc
outs
push
pop
jmp
pusha
in
shl
out
cld
fiadd
and
scas
outs
add
sub
mov
pop
dec
cmp
adc
or
fs
sub
aad
sub
lock
mov
fsub
jp
xchg
sbb
adc
imul
fisttp
(bad)
div
push
fnsave
pop
or
fsubr
arpl
ja
sbb
mov
sub
mov
pusha
add
pusha
or
sub
xor
pusha
mov
jne
mov
xor
sbb
xor
ret
in
call
inc
mov
cmp
or
test
les
mov
repz
push
mov
mul
dec
dec
ror
push
inc
sahf
xchg
in
(bad)
(bad)
xchg
ds
or
push
and
imul
adc
fprem
enter
jae
mov
and
and
or
push
xchg
call
dec
ret
push
stos
fldenv
push
les
xchg
push
jae
cmp
sub
shr
xchg
mov
xor
mov
add
cmp
and
fld
xchg
imul
or
push
push
lea
jle
aas
or
cli
outs
adc
push
push
pop
ror
mov
sbb
inc
loop
gs
aaa
pop
stc
mov
dec
xchg
cld
pop
jae
mov
pop
inc
adc
push
retf
and
sub
inc
mov
ficomp
mov
rcr
jp
adc
xor
cdq
in
pop
repz
xor
fcom
(bad)
jb
adc
push
mov
int
jmp
jo
ror
xchg
stos
jge
inc
add
leave
cmc
mov
inc
retf
retf
(bad)
ins
(bad)
(bad)
fsubr
fcom
jb
inc
aaa
xchg
cli
and
pop
push
pop
aaa
xchg
pop
mov
xchg
dec
fwait
inc
pusha
mov
jecxz
pop
gs
mov
call
outs
in
mov
lock
jp
fidiv
xchg
or
mov
out
fadd
out
push
(bad)
cmps
rcl
jmp
push
push
daa
mov
icebp
push
xchg
mov
mov
xchg
jnp
add
and
pop
ret
pop
sbb
push
xchg
pop
sub
(bad)
add
inc
jge
xchg
xchg
gs
mov
push
jp
inc
xor
jns
fwait
int
and
inc
inc
push
enter
out
je
out
or
in
rol
test
fdiv
mov
(bad)
bound
mov
sbb
add
xchg
push
push
dec
dec
aaa
iret
scas
pusha
test
jbe
sub
mov
(bad)
mov
stos
repnz
hlt
jmp
cmp
mov
in
outs
add
mov
mov
mov
dec
es
pusha
push
xchg
jo
push
fsubr
jmp
xchg
mov
jb
xor
or
sub
das
or
repnz
mov
das
ret
sbb
nop
ins
adc
stc
or
mov
movs
les
xchg
or
push
dec
cmps
inc
rcr
outs
inc
(bad)
in
pop
dec
push
je
pop
jo
retf
sbb
pop
cli
js
test
loopne
sub
fisttp
jmp
movs
pop
or
inc
dec
dec
xchg
neg
add
add
pop
or
sub
push
in
div
cmps
push
es
shl
loop
out
(bad)
sub
sbb
add
mov
stos
or
dec
inc
or
rcl
inc
mov
jne
push
out
repnz
mov
and
hlt
xchg
rcr
sbb
jns
mov
pop
jae
addr16
ret
inc
inc
cmp
cmp
in
fdiv
jmp
stc
dec
push
inc
jmp
sti
xor
and
cwde
ss
cs
int
mov
push
mov
sbb
sub
ins
arpl
int3
cmp
inc
bound
xchg
jle
test
adc
pushf
lahf
jbe
aas
clc
mov
movs
enter
retf
pop
rol
dec
mov
mov
int
jecxz
inc
ror
mov
(bad)
cs
call
pushf
test
xor
push
lea
es
xchg
ret
iret
and
xor
lods
push
or
adc
inc
lock
adc
mov
adc
js
xchg
out
and
dec
sub
pop
jl
stos
jmp
add
add
add
add
sbb
jg
scas
sbb
push
sub
add
xlat
mov
jmp
add
pop
mov
sar
adc
push
int
cmp
test
ins
or
rcr
or
push
add
fisubr
stos
mov
mov
xchg
inc
xor
xchg
pop
test
jne
pop
hlt
jbe
test
pop
stos
fs
sbb
mov
mov
inc
inc
xchg
mov
sbb
sbb
loopne
sbb
imul
call
pop
mov
pop
adc
push
mov
mov
adc
out
mov
cmc
arpl
sub
cmps
push
fisubr
(bad)
cmp
jle
push
pushf
cld
sbb
dec
mov
or
aam
scas
pop
fwait
mov
jae
daa
stos
mov
ja
popa
test
sub
test
stos
arpl
adc
pop
fidiv
adc
mov
add
jg
mov
mov
bswap
repnz
push
clc
in
jle
iret
std
cld
pop
jge
bound
ret
ins
sti
sub
mov
not
lds
inc
jmp
xchg
jge
mov
dec
pop
add
xor
cmp
mov
jmp
outs
out
(bad)
iret
pop
mov
pop
scas
mov
add
mov
xchg
stos
out
xchg
imul
and
pusha
mov
outs
cdq
mov
pop
movs
mov
dec
xchg
je
xor
xchg
(bad)
scas
pop
popf
out
int3
inc
ds
adc
adc
cmp
jbe
into
test
dec
pop
sbb
loope
dec
sti
inc
jg
add
test
and
adc
ret
dec
mov
push
jns
jnp
inc
je
inc
add
xchg
mov
enter
sub
xchg
cmc
mov
ins
pop
inc
dec
inc
sub
cmp
cmp
rol
or
cmp
add
retf
outs
push
jae
cld
rol
mov
xchg
inc
or
ret
outs
dec
ret
inc
daa
and
je
icebp
loop
sar
pop
popa
mov
mov
mov
aad
inc
shl
xor
mov
cmp
dec
int
scas
cmp
and
out
xchg
add
cdq
sbb
add
xor
mov
jg
and
adc
pop
add
jb
mov
cmp
(bad)
jl
jbe
cli
push
mov
push
pop
adc
in
sub
push
in
jp
push
mov
pop
push
sub
lea
arpl
clc
and
pop
xchg
mov
and
loop
inc
adc
stos
mov
pop
ss
jp
dec
push
mov
cmp
call
mov
(bad)
jne
ja
das
repz
mov
mov
fs
loope
stc
mov
inc
fs
add
xor
and
stc
xor
push
fadd
adc
dec
xor
jns
mov
rol
xor
jl
popa
iret
push
xlat
xor
clc
sbb
pop
fisttp
xchg
(bad)
push
dec
nop
(bad)
or
aaa
mov
and
or
jo
shr
push
mov
xor
fbstp
pop
getsec
cld
inc
mov
or
dec
pop
(bad)
sahf
push
or
or
int
aad
gs
mov
jle
(bad)
xchg
imul
push
fwait
mov
pop
scas
xchg
xor
push
mov
inc
xchg
mov
repnz
cmp
sbb
sub
in
adc
adc
call
xor
mov
mov
(bad)
call
or
dec
aad
sbb
shl
or
sub
add
mov
je
rcr
aam
test
mov
out
adc
into
sub
sbb
pop
add
jns
cmc
(bad)
xchg
cmp
lds
or
(bad)
xchg
out
pop
xor
stos
xchg
and
stos
sbb
fidivr
mov
jl
push
mov
(bad)
mov
inc
fadd
sbb
outs
lock
shr
push
pop
into
mov
mov
or
addr16
push
loop
push
mov
add
xchg
test
xor
inc
shr
and
xchg
pop
clc
dec
and
js
xor
jl
ret
cmp
add
lods
outs
and
cmp
cmc
test
pop
into
xchg
pushf
cmp
int3
outs
cmp
pop
aam
aaa
outs
mov
test
scas
push
ins
mov
jb
sub
mov
imul
and
xor
push
fsubr
cmp
push
sbb
bound
cwde
push
inc
xchg
cmp
mov
jp
xchg
(bad)
push
out
sbb
jmp
fst
or
pop
cmp
lods
stos
pop
pop
(bad)
sub
pusha
jmp
jle
(bad)
push
clc
idiv
daa
call
xor
rep
xacquire
sbb
or
loop
mov
int3
rol
shl
pop
sbb
add
pop
dec
lea
hlt
mov
xchg
mov
arpl
xchg
and
and
test
xchg
shl
cld
xchg
sti
fisub
test
dec
xor
(bad)
push
aad
xor
test
jae
mov
test
sub
(bad)
fwait
fwait
into
ret
jmp
xor
ficom
add
xchg
ins
mov
jle
aas
pop
adc
adc
nop
int3
xor
sti
dec
or
jns
push
mov
or
scas
std
shl
hlt
sti
rcl
scas
mov
mov
out
inc
push
neg
pop
fidivr
dec
xchg
pop
inc
into
dec
pop
ret
shl
imul
cdq
mov
fisubr
retf
idiv
sbb
daa
or
test
or
jmp
dec
mov
imul
imul
clc
fmul
call
pop
(bad)
in
scas
mov
and
pop
jmp
inc
mov
movs
sbb
fucomip
sti
movs
rcr
idiv
xor
and
aas
inc
cmp
leave
loope
push
call
call
cmp
jnp
dec
daa
push
ror
outs
push
imul
retf
retf
in
add
add
pushf
xchg
fbld
jl
rol
daa
test
lods
jmp
(bad)
sub
mov
mov
mov
nop
int3
call
sbb
cdq
aam
pop
jne
lea
sahf
inc
cmp
dec
and
xor
jbe
pop
sbb
jle
cmp
in
lds
pop
cmp
dec
fst
pcmpeqb
call
jbe
jmp
jne
lea
ins
mov
jp
iret
rcr
and
jae
sbb
add
push
push
inc
xlat
lods
jle
loopne
aam
cli
mov
or
call
dec
shl
xchg
and
inc
pop
add
push
fcmovnb
aas
cmp
(bad)
pop
cmp
pop
fbld
shl
or
dec
in
ret
shl
mov
cmc
and
dec
dec
sbb
jbe
stos
icebp
mov
shl
mov
mov
dec
sub
inc
mov
call
sar
sub
pop
lock
out
jae
fistp
cmp
jmp
and
or
adc
push
push
sub
repz
adc
js
pusha
popf
retf
adc
test
mov
mov
sbb
mov
push
push
test
jb
jo
pusha
fld
shl
js
gs
mov
sub
jbe
leave
clc
add
xchg
jge
pop
jnp
mov
pushf
mov
or
aaa
imul
ja
push
js
mov
mov
mov
pop
add
xor
push
lods
mov
cmc
call
push
push
sbb
mul
into
daa
jbe
pop
imul
inc
adc
not
jl
jmp
loop
push
popa
jmp
mov
and
adc
ja
push
(bad)
jmp
hlt
loopne
loopne
pop
arpl
daa
enter
repz
cmp
loop
dec
mov
push
jne
mov
push
inc
and
scas
mov
das
test
test
inc
mov
xchg
sub
adc
pop
out
int
mov
or
ds
inc
sbb
push
xchg
xchg
int3
in
scas
aaa
shr
jbe
in
cmp
cmp
and
out
hlt
or
add
add
cmp
add
and
sub
sbb
call
pop
repz
int
jo
cmp
push
aas
lds
ss
ins
mov
movs
xor
mov
xchg
out
sub
es
mov
dec
ja
mov
enter
sub
into
or
push
test
(bad)
mov
mov
stc
mov
sbb
call
sbb
cmp
add
inc
add
sbb
in
outs
jge
out
out
dec
jp
repz
call
ret
fsubr
cmp
rol
inc
(bad)
call
pop
js
ret
rol
dec
xor
cmp
mov
outs
pop
inc
(bad)
push
xchg
aaa
test
and
push
(bad)
jmp
sub
adc
push
fstp
les
pop
leave
mov
sbb
ret
xor
mov
repz
(bad)
mov
add
mov
add
das
push
call
scas
cmps
fisttp
pop
sub
lea
test
sti
sbb
sub
jmp
mov
dec
push
aas
out
je
movs
jnp
dec
sahf
mov
xchg
push
retf
adc
ins
jns
xor
adc
or
adc
add
or
xchg
add
leave
mov
and
jnp
xor
jbe
or
ror
dec
jmp
jbe
std
adc
xchg
mov
dec
push
sahf
xchg
dec
out
rcl
ds
lods
in
(bad)
xchg
ins
cwde
adc
inc
outs
mov
cmp
adc
loope
int
sub
lods
and
mov
ss
xchg
ja
push
int
add
pop
fidiv
add
out
mov
and
iret
aam
or
jle
mov
push
mov
add
stc
and
ret
or
adc
cmp
in
jge
cmp
addr16
dec
xor
(bad)
shr
(bad)
rcl
cmps
xchg
icebp
and
rol
dec
je
fisub
xor
xor
int3
push
dec
test
mov
push
pop
leave
jle
(bad)
jl
jp
inc
xor
rol
dec
sbb
mov
scas
leave
shr
mov
scas
daa
cmps
xchg
mov
xor
lock
mov
sahf
jp
sbb
add
cwde
pop
pusha
xor
mov
cmp
dec
jle
jbe
and
mov
xchg
jmp
sar
(bad)
mov
test
pop
pushf
int
xchg
jae
adc
dec
mov
cli
xchg
lock
sbb
in
xor
imul
mov
xor
sbb
cmps
je
fdiv
add
fs
adc
push
lahf
add
ret
in
stos
push
and
sbb
sar
ds
xchg
and
clc
pop
retf
mov
(bad)
cwde
mov
sub
mov
shr
pop
in
xchg
and
and
pop
or
sub
xchg
popa
fwait
aaa
pop
xlat
and
sub
addr16
sub
loope
adc
and
xchg
mov
xor
sbb
inc
cmps
xor
mov
test
repz
and
xor
std
jno
jge
ins
lds
js
loopne
jecxz
dec
lods
aas
adc
cmp
xor
test
add
ja
inc
data16
jns
in
cli
and
out
nop
adc
jno
test
retf
push
inc
mov
or
cli
push
xchg
jmp
xchg
or
xchg
outs
daa
mov
mov
mov
retf
sbb
sbb
cs
dec
xchg
inc
cmp
jnp
sub
retf
jge
fucom
bound
daa
cmp
and
aad
stos
xchg
fldcw
sahf
cmp
ret
out
push
pop
push
mul
je
sub
sbb
js
hlt
scas
out
enter
dec
adc
cmp
inc
movs
add
push
adc
sbb
pop
jl
das
hlt
pop
mov
pusha
fwait
cmps
dec
mov
mov
shl
es
inc
test
imul
cld
pop
jge
rol
and
push
sbb
jle
inc
popa
int3
movs
or
mov
cmps
dec
xor
clc
add
jae
ret
fnstenv
ja
test
inc
stc
jbe
add
out
sbb
cmp
add
dec
push
test
nop
mov
and
ret
mov
in
mov
aaa
(bad)
(bad)
fidivr
pop
push
push
fdiv
icebp
add
stos
jl
xchg
in
add
ds
sub
(bad)
jbe
xchg
sbb
cmps
shl
loopne
xchg
hlt
dec
mov
test
popf
(bad)
mov
sub
dec
cmp
mov
xor
push
pop
add
mov
jecxz
ins
add
inc
jbe
ins
(bad)
push
xor
(bad)
aam
setp
ret
xor
stos
call
into
and
jb
nop
jo
es
test
fisub
mov
or
aas
add
push
xor
sub
fnsave
cmp
cmps
inc
push
sahf
cmp
movs
neg
leave
das
jge
mov
movs
mov
mov
sub
or
adc
fnstcw
xchg
leave
and
xchg
mov
in
mov
(bad)
call
stos
add
into
mov
cs
gs
stos
(bad)
addr16
sub
push
mov
imul
sar
cs
sub
sbb
adc
adc
dec
scas
and
mov
es
movs
repnz
dec
inc
inc
leave
sub
xchg
pop
stos
xor
mov
adc
inc
inc
dec
(bad)
leave
cs
repnz
mov
or
xor
imul
mov
inc
and
sbb
sbb
mov
arpl
sub
mov
xor
loope
inc
ss
or
cmp
inc
push
test
cmp
xor
repnz
or
shl
int
sbb
mov
fcom
cmps
retf
mov
cmp
fwait
in
scas
hlt
std
cmp
leave
inc
fnstcw
addr16
loope
xchg
adc
jmp
push
leave
inc
inc
inc
(bad)
jp
pop
aad
mov
or
and
mov
push
add
mov
cld
ror
cmp
or
mov
(bad)
fiadd
rcr
sbb
rcr
xchg
add
inc
jl
pop
jnp
shr
aas
adc
xchg
in
ins
jne
jecxz
mov
or
ficomp
xor
mov
scas
push
cmp
mov
mov
je
xchg
xor
gs
out
jl
xchg
stos
and
pop
iret
sub
ss
test
mov
(bad)
nop
icebp
mov
mov
out
ss
div
(bad)
movs
mov
or
je
push
sub
shr
fs
cwde
arpl
jns
xchg
mov
bound
in
pop
pop
jb
imul
call
jns
lahf
call
movs
aas
and
test
rcr
iret
je
jmp
std
add
mov
mov
add
adc
xchg
test
mov
inc
inc
cmps
mov
sbb
jecxz
(bad)
jg
das
dec
sbb
push
and
adc
xchg
je
or
ficom
test
xchg
xor
pop
cmp
dec
xchg
cmp
(bad)
adc
push
in
cld
fistp
test
add
(bad)
mov
pusha
fisttp
aaa
add
loop
adc
push
add
add
add
mul
and
dec
mov
mov
call
mov
lods
ins
xchg
test
pop
cmps
dec
jmp
push
inc
mov
jecxz
fbstp
mul
ins
push
out
add
push
(bad)
shl
(bad)
jns
retf
js
data16
push
(bad)
fadd
and
popa
loope
add
mov
pusha
pop
jb
inc
sub
push
jne
outs
sbb
mov
mov
test
xchg
les
jb
fs
dec
or
push
int3
cmp
in
mov
data16
cld
clc
icebp
pop
in
lods
mov
ja
stos
in
mov
es
push
into
mov
in
in
pop
(bad)
(bad)
ret
mov
xor
mov
add
daa
or
cmp
(bad)
call
test
add
or
iret
retf
cdq
add
or
(bad)
adc
and
aaa
pop
mov
scas
sbb
mov
jg
test
adc
mov
movs
mov
shl
jnp
mov
cwde
lods
mov
mov
outs
loop
push
mov
push
mov
mov
loop
dec
mov
test
add
add
stos
sub
loopne
xchg
in
cmp
pusha
cmp
inc
mov
imul
mov
push
mov
(bad)
inc
inc
outs
and
xchg
das
test
fnstsw
or
out
cmp
jge
or
fs
xchg
les
pop
jg
xchg
add
mov
jle
pop
mov
cmp
std
ret
jge
cmps
ss
icebp
sbb
jne
xlat
std
dec
sbb
scas
xchg
in
mov
mov
js
js
call
aam
mov
fild
inc
dec
rcl
mov
into
(bad)
xor
fs
arpl
lods
mov
pushf
jb
and
mov
dec
mov
pop
xchg
sbb
mov
ss
add
mov
dec
push
and
add
fcmovbe
push
enter
sbb
xor
add
adc
jl
cmp
and
or
jnp
inc
into
push
enter
out
inc
hlt
jns
pop
xchg
in
cmp
repnz
addr16
xchg
fsub
pop
jge
xchg
ds
test
push
cmp
xchg
jle
mul
and
jno
mov
shr
in
mov
mov
addr16
adc
call
xchg
push
sar
aam
test
add
(bad)
push
jmp
dec
cld
jne
pop
shl
mov
pop
push
push
cs
push
sub
dec
imul
scas
cmp
or
push
cli
rcl
(bad)
xor
movs
inc
mov
mov
fwait
rol
xor
stos
fcmovb
ror
mov
sub
aam
cmc
lods
jne
and
cs
stc
adc
add
xor
dec
mov
test
push
fisttp
xchg
jb
or
dec
in
cli
aad
in
cmp
in
mov
jb
sub
add
lea
hlt
ja
push
xor
jne
mov
inc
mov
or
jg
data16
fldcw
test
sub
cli
sub
dec
out
mov
dec
(bad)
in
retf
mov
mov
pavgw
arpl
dec
inc
bnd
sub
daa
xor
shl
cdq
loope
add
fs
add
pop
ja
dec
aaa
sbb
pop
clc
test
(bad)
popf
daa
pop
outs
mov
xor
shr
sar
push
(bad)
data16
mov
xchg
mov
repz
sbb
sbb
jecxz
test
mov
push
mov
popf
push
enter
sub
into
push
loope
stos
pusha
jp
stc
imul
fwait
sbb
les
stc
sub
out
inc
xor
stos
jge
cdq
cmp
add
sbb
or
push
pushf
mov
push
stc
mov
ja
call
div
xchg
sub
jns
jno
retf
mov
icebp
outs
xchg
jmp
mov
mov
mov
sti
sbb
mov
sti
pop
mov
pop
fiadd
dec
cwde
ss
mov
cs
fst
stc
in
in
push
fnsetpm(287
add
cs
mov
mov
jbe
sbb
add
inc
cmp
sbb
lea
dec
not
sbb
pop
xor
inc
pop
xchg
push
sbb
out
pop
dec
sbb
mov
outs
mov
mov
pop
cmp
inc
jno
movzx
shr
push
jecxz
les
stos
data16
addr16
mov
mov
pop
jmp
xor
jmp
(bad)
xlat
ins
jns
xor
(bad)
repnz
add
inc
test
pop
cmps
mov
mov
jb
sub
jbe
push
mov
scas
push
or
xor
fldenv
dec
dec
push
mov
push
hlt
pop
bound
repz
mov
mov
test
xchg
xchg
push
icebp
test
clc
push
mov
outs
lahf
dec
hlt
adc
aad
stc
das
jbe
or
jg
outs
sub
lock
in
mov
pop
jge
push
xor
xor
xlat
xchg
jp
fistp
fcmovne
fcom
ret
ret
mov
cld
xlat
outs
cmp
mov
sub
stc
add
mov
mov
out
mov
dec
sub
in
dec
cmc
pop
stc
mov
and
jmp
sbb
repz
or
dec
pop
imul
lea
data16
push
retf
lahf
sbb
push
retf
xor
neg
sub
dec
sbb
out
jle
inc
retf
fiadd
out
jp
ds
add
sbb
loope
icebp
mov
lds
jae
shr
stc
push
jo
and
stos
dec
xor
sbb
push
sub
aad
sub
retf
lods
jp
push
js
cmc
outs
mov
cwde
adc
ret
int3
xchg
and
cld
cli
mov
cli
dec
mov
xor
mov
push
or
(bad)
loopne
fld
ss
loop
mov
lods
xor
dec
and
retf
jmp
push
jb
push
dec
ja
jnp
dec
into
adc
inc
test
ja
mov
repz
add
je
scas
shl
mov
xor
mov
inc
stc
lea
or
(bad)
sub
sub
outs
imul
and
jp
or
data16
retf
dec
jno
xchg
mov
mov
pop
jb
fld
adc
adc
cmp
jae
shr
leave
and
stc
or
xor
fisttp
inc
inc
enter
mov
pop
xor
stos
mov
sahf
pop
mov
xchg
stos
xor
movs
xchg
in
add
cmc
int
ficom
cmps
mov
fnstsw
xchg
xchg
pop
in
push
mov
fwait
cdq
iret
jmp
pop
shl
ds
test
pop
add
inc
push
call
sti
ret
test
add
(bad)
repnz
std
inc
sbb
test
sahf
loope
jg
in
repnz
aas
mov
jmp
dec
adc
mov
pop
shl
sar
fwait
loopne
jae
jge
push
xchg
lods
cs
push
push
sub
test
loope
shl
(bad)
jecxz
in
loopne
add
sar
mov
push
add
push
sub
add
cmp
or
pushf
dec
retf
jbe
push
add
pusha
out
pop
(bad)
call
out
cmc
(bad)
mov
es
dec
(bad)
jg
xlat
(bad)
push
dec
mov
mov
mov
fwait
cmc
into
icebp
cs
ds
pop
retf
xor
scas
add
or
ins
cs
lds
icebp
bswap
scas
or
addr16
adc
outs
jge
sub
cmp
and
mov
pop
div
jp
jl
es
adc
mov
jp
xor
ins
js
sbb
xchg
xchg
test
sbb
loopne
xchg
add
adc
ins
in
mov
aaa
fild
sbb
sub
sub
fdivr
mov
jle
cli
fwait
jae
push
in
call
add
ins
cmp
cwde
pop
cdq
into
push
dec
sbb
test
repz
jle
xchg
sbb
xchg
ins
lods
sub
es
loopne
outs
jmp
xor
and
mov
lock
and
in
or
mov
jecxz
repnz
fistp
sbb
nop
add
cmp
dec
loopne
mov
rol
and
(bad)
cs
jb
adc
mov
push
inc
dec
adc
out
adc
or
sub
test
mov
cmp
hlt
ins
sti
gs
cmps
outs
fsubr
xor
sub
arpl
adc
sub
and
inc
aam
inc
jb
lods
jne
test
clc
rol
sub
mov
sti
mov
cmp
cmp
sub
jne
and
add
add
int3
enter
sub
push
mov
or
jmp
sti
js
ds
inc
mov
xchg
out
jecxz
out
imul
jmp
fist
in
xchg
dec
test
and
fild
mov
push
dec
test
sahf
popf
dec
enter
jb
ja
mov
xor
mov
xor
inc
sbb
cmp
call
inc
ror
shr
and
cli
xor
in
and
(bad)
sbb
mov
mov
das
es
sub
cmps
pop
inc
jo
ja
jg
cld
pusha
mov
idiv
jne
xchg
div
les
in
test
mov
xor
add
jmp
mov
pop
es
jl
jl
push
mov
add
cli
aam
and
cld
cmp
dec
fcmovb
add
sbb
pop
push
test
aas
cmp
dec
adc
mov
retf
inc
pop
lahf
add
rcr
leave
fidivr
adc
and
inc
scas
pop
jno
cwde
add
int3
jg
fcom
pop
mov
popf
and
xchg
ins
popa
outs
push
push
cmp
retf
mov
and
ja
mov
mov
xchg
xchg
or
lea
jmp
inc
mov
add
cmp
in
stos
xchg
rol
outs
xor
aaa
mov
pop
fucomp
aam
xor
jo
inc
and
push
addr16
aaa
mov
ror
lahf
sub
mov
dec
add
(bad)
mov
pop
adc
mov
pop
inc
scas
lods
mov
mov
loopne
xchg
xchg
jmp
cmp
in
call
add
ret
or
ja
pop
out
add
adc
xlat
loopne
std
repz
call
les
push
push
popa
add
cmp
lods
outs
push
nop
call
push
push
sti
mov
mov
sub
adc
mul
xlat
addr16
ds
or
sub
pop
lahf
cmp
pop
inc
scas
daa
mov
das
jns
into
mov
sub
movs
mov
mov
jmp
inc
mov
mov
adc
fxch
jb
xchg
mov
sahf
and
and
outs
stos
xchg
lea
add
jb
push
test
jge
add
push
(bad)
jae
inc
pushf
jle
out
push
sti
int
lock
test
jmp
call
pop
xor
pop
adc
push
push
inc
js
add
aad
ins
mov
data16
jb
mov
arpl
loope
or
cmps
mov
push
in
stos
pop
fsubr
faddp
into
cdq
pushf
stos
adc
es
jb
or
cmp
dec
je
add
retw
inc
mov
cmp
jmp
fiadd
mov
fwait
push
jns
sub
mov
dec
push
imul
pop
adc
out
movs
pop
or
lds
fcmove
pop
push
mov
mov
mov
outs
adc
lods
cmp
in
jbe
or
jo
jnp
aad
push
int
mov
sub
loop
push
mov
pop
or
retf
dec
cmp
jo
shr
in
sbb
stc
jmp
push
gs
mov
sbb
pop
(bad)
sti
inc
outs
add
xchg
out
jg
dec
mov
cmp
add
in
xchg
movs
pop
jle
data16
adc
mov
cmp
jno
outs
or
inc
xor
les
xchg
mov
rcl
mov
sar
jae
mov
(bad)
sub
xor
xchg
dec
lds
out
jns
out
inc
ss
and
rol
dec
loop
inc
je
push
fisub
pop
add
xchg
push
imul
add
inc
stos
enter
ins
mov
ja
test
scas
xlat
mov
sbb
jge
xchg
test
movs
pop
(bad)
rcl
loop
nop
xchg
cmps
scas
popa
out
xchg
or
fninit
fidivr
retf
jae
push
lock
lahf
jl
mov
out
std
mov
call
(bad)
repnz
mov
call
xlat
push
idiv
add
xchg
xchg
into
pop
jp
outs
popa
loope
inc
fs
cmp
sbb
mov
fnstcw
(bad)
adc
jae
adc
sub
push
enter
xor
mov
ret
sub
test
iret
push
mov
jne
pop
leave
adc
(bad)
ror
in
cs
cli
push
dec
repnz
mov
mov
add
sub
scas
cmp
cmps
mov
xor
xor
pop
dec
adc
jbe
stc
ret
ret
jmp
int3
mov
sub
jne
dec
ins
jae
cmp
add
call
lods
push
mov
xchg
bound
and
sbb
and
int
mov
pop
hlt
(bad)
loope
or
inc
and
data16
dec
and
sbb
xchg
or
mov
push
add
sbb
in
mov
mov
inc
js
push
rdmsr
jecxz
xor
jbe
leave
sbb
test
test
sar
sbb
xchg
mov
pop
in
popa
int
icebp
push
and
mov
nop
jnp
xchg
sbb
jmp
test
sub
scas
retf
pop
std
(bad)
xor
jnp
push
push
adc
bound
repnz
dec
push
mov
add
stc
dec
das
arpl
ins
xchg
je
push
pop
out
xlat
nop
push
push
jbe
push
fisubr
mov
out
fbstp
imul
popf
sub
out
(bad)
cli
cmps
js
std
xchg
and
repz
(bad)
jmp
cs
call
lods
(bad)
ds
retf
and
sub
cmps
mov
dec
xor
jl
xchg
jns
mov
call
mov
dec
stc
or
sbb
test
neg
pusha
mov
das
mov
test
repnz
into
xchg
fidiv
xor
pop
pop
xchg
jb
jg
popa
mov
rcr
rol
or
movs
dec
pop
mov
and
enter
mov
mov
push
jmp
sbb
sbb
xchg
out
cmp
ret
cmps
imul
mov
and
loope
or
std
sbb
jmp
iret
int3
add
mov
aaa
sbb
add
pop
into
pop
sahf
jne
mov
sub
leave
out
sub
shl
enter
stc
xchg
les
push
add
sbb
(bad)
iret
shl
cld
mov
xor
jae
dec
aad
outs
repnz
sbb
outs
adc
push
dec
ds
mov
fistp
aam
xor
ins
adc
push
fcomi
(bad)
clc
and
dec
push
call
call
jns
aas
ins
fsubp
pop
jb
jmp
scas
std
mov
cmp
loope
into
mov
mul
push
test
push
jae
scas
mov
call
push
sub
and
push
sub
pop
cmps
push
dec
jge
add
push
jne
or
ret
aaa
pop
adc
xchg
loop
shl
fist
xor
adc
cmp
pop
adc
mov
push
scas
jb
cwde
and
mov
movntq
mov
ret
retf
sbb
cmp
jmp
cli
inc
jmp
inc
push
inc
sbb
neg
leave
push
mov
hlt
neg
mov
mov
icebp
mov
cmps
jb
cmp
out
fs
ret
push
jb
jecxz
jmp
push
cdq
adc
mov
in
sub
dec
or
cmp
mov
inc
iret
retf
xchg
(bad)
loop
xor
jne
in
mov
xchg
jnp
jg
loope
cmp
cmp
xor
cli
test
shl
inc
push
idiv
outs
xchg
movs
dec
mov
jle
in
dec
sbb
adc
push
cmp
jmp
add
ja
or
jo
adc
clc
hlt
movapd
in
mov
inc
adc
adc
rcl
hlt
or
inc
bnd
push
ins
mov
xchg
push
cmp
mov
jno
inc
mov
jbe
(bad)
call
jp
out
xor
sti
adc
loop
sub
mov
and
push
frstor
inc
fmul
(bad)
repz
out
pop
iret
scas
popa
adc
je
loopne
push
xchg
sub
push
pop
jmp
aam
xchg
cmps
add
jno
cdq
sbb
popf
sbb
dec
xlat
test
stos
pop
leave
mov
jb
out
mov
push
mov
pop
jns
xchg
popa
leave
dec
mov
data16
gs
rol
xchg
inc
xchg
stos
push
jecxz
xor
call
add
xchg
jo
push
cmp
push
mov
push
movs
iret
jae
xor
xor
retf
xor
call
in
push
fimul
inc
pop
mov
cli
cmp
push
ins
xchg
out
xchg
cmps
movs
pusha
push
add
adc
or
(bad)
lods
pop
inc
jo
jmp
rep
sub
aam
adc
lds
push
dec
cmp
inc
gs
jne
push
xchg
stos
cmp
sbb
loope
inc
adc
mov
ss
cld
cmp
mov
push
(bad)
stc
jmp
psubusw
inc
xchg
adc
fsub
mov
(bad)
call
loope
dec
mov
inc
jmp
out
sub
mov
inc
fwait
push
mov
xor
data16
test
daa
mov
or
mov
jo
push
mov
faddp
cmp
jge
movs
nop
adc
ror
pop
cmps
add
sti
aam
pop
inc
(bad)
mov
imul
movs
scas
fisub
push
jle
lahf
jne
inc
jp
aam
imul
jge
daa
push
sbb
adc
mov
aas
mov
ss
jl
inc
inc
jns
mov
and
in
ins
jecxz
test
cmp
xor
adc
adc
ds
xchg
pop
sub
(bad)
cwde
mov
jmp
push
out
ror
sub
inc
sbb
push
sub
sbb
daa
pop
inc
push
popw
jbe
cwde
dec
ds
clc
jle
mov
lea
cmc
sar
repz
push
adc
mov
test
mov
(bad)
dec
aam
aaa
mov
mov
repz
outs
call
add
das
add
pop
jge
test
pop
sub
mov
stos
jno
inc
xchg
mov
and
inc
fnstcw
loop
test
mov
and
push
rol
and
dec
movs
movs
jb
xchg
call
out
fild
sbb
fwait
cs
dec
and
sbb
daa
test
fcmovb
sbb
outs
repnz
pop
js
loope
mov
jbe
adc
add
sahf
add
adc
sub
mov
test
inc
xor
(bad)
push
sub
out
fwait
add
call
hlt
inc
leave
shl
fisubr
cld
and
cld
sub
pop
cs
loope
mov
aam
sar
push
ret
imul
es
ret
jmp
mov
xor
jnp
sub
scas
pop
cmp
sbb
or
push
cwde
cwde
fbstp
dec
imul
adc
sbb
jmp
retf
dec
jnp
dec
mov
xor
jae
ror
mov
sub
and
cdq
lahf
cwde
sbb
lds
jg
dec
je
(bad)
inc
xlat
add
stc
mov
sahf
add
mov
in
aam
fcom
sbb
push
retf
cmp
or
out
inc
fcom
mov
xchg
nop
out
sub
add
push
mov
dec
dec
cdq
pop
jg
ins
icebp
jae
cwde
sub
push
aam
jecxz
leave
out
xchg
push
icebp
outs
xor
cmp
jmp
adc
cmp
idiv
xchg
push
xchg
mov
fcomp
xlat
test
sub
imul
mov
jae
push
std
or
adc
cmp
sub
mov
ss
lods
mov
jl
or
cmp
pop
xor
cdq
lods
add
add
shl
xchg
mov
scas
les
arpl
fsub
inc
jnp
cmps
dec
mov
into
out
test
sbb
aas
std
or
in
cli
xchg
jno
loope
and
cwde
push
stos
(bad)
lds
jae
dec
dec
pop
pop
inc
dec
nop
xlat
mov
nop
xchg
mov
in
movs
adc
jns
(bad)
js
js
rcr
push
inc
in
iret
(bad)
es
(bad)
ds
frndint
xchg
cdq
fdiv
mov
sub
cwde
adc
out
js
fcom
pop
retf
cmp
dec
push
push
aad
sbb
clc
jno
jecxz
lock
sub
pop
mov
lods
mov
xchg
adc
popf
cwde
add
xchg
xchg
call
cmps
push
mov
ss
push
fwait
(bad)
xchg
sar
adc
pop
leave
mov
je
lods
in
les
repnz
adc
ins
call
add
lods
jne
(bad)
aas
imul
call
jg
mov
push
fyl2x
fdiv
pop
or
pusha
retf
adc
xor
in
push
push
imul
adc
pop
mov
pop
retf
cs
stc
cmp
jbe
fs
adc
ins
push
dec
cli
cmp
rcl
jb
mov
mov
xchg
inc
pop
xchg
cmp
mov
iret
sub
in
pop
lea
movs
pushf
adc
je
int
sbb
pop
or
mov
cmps
frstor
mov
cld
push
inc
sbb
(bad)
scas
mov
cmp
adc
fiadd
(bad)
xchg
mov
pop
imul
outs
dec
lock
aas
mov
imul
jo
fwait
jno
jg
icebp
out
jge
(bad)
(bad)
mov
out
hlt
pushf
push
in
mov
and
dec
inc
movs
adc
sbb
fstp
nop
fdiv
add
inc
or
add
push
fwait
mov
das
out
clc
clc
in
cmp
mov
popa
mov
cmp
cmp
mov
xor
aaa
push
es
rcl
mov
mov
ss
mov
ror
ret
cmp
fst
in
xor
pop
and
out
pop
xor
dec
repnz
inc
and
outs
jmp
les
sahf
cmp
aaa
mov
(bad)
popa
sub
jmp
lods
inc
sbb
mov
jecxz
call
test
les
jl
out
or
push
cdq
in
push
loop
mov
cmp
xor
outs
and
arpl
mov
loopne
sahf
sbb
mov
fmul
lods
jp
ret
sti
adc
sbb
movs
out
stos
push
inc
mov
fdivr
fnstenv
in
xchg
dec
imul
dec
pop
dec
mov
xchg
fst
mov
rcr
loopne
mov
es
stos
jge
push
test
fs
inc
fcmovne
xchg
call
cmp
int
xchg
(bad)
out
ret
sbb
mov
lock
sub
jo
das
xor
add
jmp
sbb
mov
mov
xchg
xor
adc
xchg
mov
(bad)
dec
iret
retf
inc
jo
xor
sbb
push
aas
mov
jae
iret
fbld
gs
stos
sbb
pop
inc
in
(bad)
cmp
fst
dec
and
outs
imul
push
mov
stc
sub
(bad)
push
fadd
in
mov
dec
ins
test
cld
movs
jnp
jne
and
cwde
xchg
call
xchg
push
imul
bnd
pop
int3
inc
pop
movs
mov
in
popa
mov
or
cwde
psllq
mov
add
ins
cld
std
push
dec
dec
mov
jne
mov
jns
dec
fs
retf
shl
and
gs
test
and
ds
sub
mov
add
mov
idiv
xchg
push
ins
fidivr
rol
sbb
add
push
add
lahf
mov
push
(bad)
pop
(bad)
loop
or
cmp
ficom
call
rcr
js
dec
sub
mov
and
scas
inc
shl
xor
mov
jle
inc
mov
bound
mov
mov
xlat
lods
fdiv
inc
cmp
xor
lock
mov
aam
(bad)
es
arpl
aad
and
cwde
lahf
clc
inc
lahf
mov
mov
loopne
push
jmp
cmp
into
(bad)
sbb
mov
les
inc
(bad)
jmp
jo
pushf
xor
inc
cwde
pop
or
and
outs
or
mov
je
and
xchg
aaa
mov
jbe
fnsave
dec
fwait
daa
gs
int3
jne
cmp
les
loopne
pop
jae
stos
mov
lods
xchg
lds
xchg
icebp
scas
stc
sub
add
aas
cmp
push
xor
sti
loopne
xor
out
in
cwde
jmp
add
pushf
push
mov
xchg
cdq
xchg
test
mov
mov
cmc
inc
rcl
test
test
icebp
push
(bad)
mov
adc
inc
sub
pop
push
loope
sub
pop
inc
outs
jnp
ins
inc
pop
and
sub
push
push
retf
jmp
rol
ret
loop
sbb
mov
stos
es
int
xchg
jae
sbb
sub
out
mov
mov
call
pop
cmp
call
je
mov
out
sbb
mov
gs
push
repnz
inc
xchg
xchg
adc
fcomip
mov
fisub
push
and
push
dec
lea
sub
js
lods
sbb
shl
adc
fistp
mov
div
cli
sbb
nop
xor
shl
sahf
pop
test
shl
mov
aad
mov
jge
jb
and
es
push
pop
jp
adc
cmps
jge
and
mov
or
cdq
popa
adc
mov
es
jno
ins
(bad)
mov
test
pop
arpl
call
js
sbb
push
or
add
(bad)
or
add
dec
cmps
mov
(bad)
sub
aaa
push
aas
pusha
xor
ins
jge
and
inc
jle
jge
ret
xor
push
sub
mov
sbb
pop
xor
(bad)
xor
lock
or
sbb
jle
pop
dec
push
nop
into
jo
arpl
push
sti
xor
cmp
or
sar
adc
(bad)
test
or
sub
dec
aam
and
ficom
inc
jle
sbb
mov
cli
mov
ins
inc
data16
lods
sti
jne
leave
cli
fmul
mov
ins
arpl
enter
(bad)
mov
cmps
int
mov
sbb
xchg
iret
popf
iret
xchg
dec
jmp
out
ja
add
dec
dec
xor
mov
aam
dec
imul
int
add
in
dec
push
jge
stos
jle
int
mov
retf
push
and
xor
pop
stos
cmps
(bad)
and
in
mov
or
loopne
or
out
cmp
push
clc
sbb
ds
mov
ins
sub
or
sub
in
mov
in
je
lods
in
or
cmp
add
call
call
mov
mov
fild
inc
pop
gs
adc
repz
ds
aam
xor
das
je
int
dec
mov
movs
xchg
fistp
jno
ja
nop
sbb
mov
sti
ss
cld
sub
push
add
mov
xchg
jmp
jge
and
sbb
ret
xchg
fwait
jmp
test
iret
pop
movs
or
xchg
mov
add
cld
inc
sahf
add
and
outs
sub
jne
std
daa
pop
dec
movs
pop
inc
or
sub
mov
jl
push
pusha
cli
inc
jmp
push
imul
not
fild
mov
dec
jle
pop
jecxz
pushf
cmc
ror
mov
lods
inc
cmps
pop
fwait
retf
mov
ror
xor
fist
dec
retf
cwde
dec
mov
sbb
inc
or
push
add
push
or
or
hlt
cmps
inc
ja
in
ins
pop
ins
sub
loope
pop
stos
test
push
jecxz
mov
pusha
test
gs
outs
jl
pop
shl
jp
outs
mov
push
cmp
cli
mov
xchg
in
gs
xlat
xlat
adc
(bad)
or
cdq
mov
retf
xchg
jns
jle
sbb
and
(bad)
mov
sbb
icebp
pop
and
push
pop
push
test
clc
outs
push
shr
hlt
icebp
sbb
pop
mov
inc
scas
xchg
adc
icebp
sbb
arpl
int3
adc
hlt
push
jg
push
pop
mov
leave
xchg
push
xor
jmp
rol
adc
pop
inc
int
lds
adc
mov
cwde
fistp
cmp
cmp
sbb
inc
xchg
sbb
push
clc
sbb
push
pusha
mov
loopne
push
loop
jne
addr16
xor
xor
pop
pop
call
xchg
cs
loop
push
lods
adc
add
mov
rcl
add
out
cwde
dec
lds
iret
fild
push
andps
and
cli
jl
stc
xchg
das
jl
rcl
pop
les
out
mov
jl
inc
(bad)
fcmovnbe
mov
popf
or
gs
les
inc
push
cmps
dec
icebp
imul
push
arpl
cwde
idiv
push
mov
icebp
jbe
pop
and
aas
jne
outs
imul
js
ds
push
jnp
or
retf
inc
(bad)
xor
test
push
in
jecxz
pop
mov
mov
pop
nop
and
scas
push
push
loope
cwde
sub
ds
pop
add
adc
sbb
fwait
pop
leave
int3
sar
retf
add
and
jne
adc
xchg
in
jle
loopne
add
xlat
(bad)
ss
(bad)
dec
sbb
rcr
pop
stos
out
outs
stos
mov
loopne
mov
mov
aas
add
aas
push
ror
pop
in
outs
lods
push
sbb
push
add
icebp
lahf
jno
js
xchg
fisttp
scas
mov
call
add
popa
inc
add
dec
dec
daa
jl
hlt
or
mov
mov
ror
lds
xor
retf
sbb
sbb
sbb
rol
ds
cmp
icebp
xor
or
mov
pop
iret
ds
cwde
inc
in
clc
mov
adc
xchg
lock
in
and
out
stc
pop
mov
xor
xchg
pop
jp
cmp
inc
mov
sub
cmp
popa
mov
stc
(bad)
cld
inc
in
loop
or
ficomp
aad
out
cmp
gs
mov
test
inc
add
ja
mov
mov
lods
add
sub
cs
test
mov
imul
xchg
fadd
jp
iret
dec
repnz
mov
ror
out
sub
adc
sub
test
lods
jno
(bad)
add
mov
and
into
xchg
cdq
xchg
jae
and
imul
test
outs
jno
test
push
sar
fcom
int
hlt
xor
mov
cmps
shl
aad
stos
aam
add
arpl
xor
rcr
inc
aaa
push
shl
mov
pop
jns
push
inc
iret
push
jae
adc
jae
lock
inc
xor
fcom
adc
mov
retf
repnz
mov
fwait
int
jbe
push
daa
pop
pop
clc
and
jmp
push
adc
lock
cwde
rcr
test
fwait
stos
add
dec
jb
jecxz
rcl
push
(bad)
(bad)
sahf
ficom
add
shr
xchg
or
and
add
mov
rcr
test
pop
ret
pop
xor
jae
in
fiadd
dec
imul
pushf
mov
pop
jno
jg
pop
adc
inc
inc
test
out
in
xchg
mov
idiv
sti
dec
xchg
stos
xchg
xchg
sar
cld
test
add
test
sub
clc
push
fs
xlat
jns
mov
inc
pop
in
adc
mov
cdq
dec
in
add
jbe
or
jl
(bad)
clc
shr
shr
(bad)
cmp
xor
dec
int3
push
(bad)
cmp
pop
cmp
cs
fnstsw
inc
push
pop
mov
add
gs
inc
addr16
adc
data16
stos
adc
stc
fstp
xchg
adc
loop
sub
push
outs
arpl
lock
(bad)
rcl
add
mov
lahf
xor
lea
push
mov
adc
and
repz
mov
adc
bound
test
in
mov
in
sbb
stos
inc
jle
mov
cmp
in
inc
or
ret
imul
dec
xor
jle
mov
pop
addr16
shr
push
into
sub
dec
fidivr
bound
xchg
push
(bad)
jns
scas
sub
and
call
and
out
cmps
xchg
or
and
dec
sar
gs
inc
or
out
pop
retf
aam
mov
xchg
arpl
sti
js
nop
scas
xchg
pop
dec
call
aad
int3
cmp
jecxz
hlt
dec
mov
push
dec
add
adc
(bad)
push
pop
push
pop
xchg
inc
inc
retf
ja
mov
jns
push
inc
les
mov
scas
arpl
xor
test
pop
jmp
imul
add
sub
adc
push
scas
pop
xchg
test
add
dec
ret
dec
fs
mov
nop
fidiv
popf
xchg
call
jge
sbb
in
push
sar
in
movs
inc
ficomp
in
(bad)
pusha
push
mov
scas
pop
adc
std
in
dec
mov
ss
addr16
bound
sbb
out
dec
movs
cmps
push
lahf
cmp
mov
cmps
cmp
pop
sub
shl
(bad)
mov
test
pop
enter
aas
cmp
add
aad
pop
cwde
fsubr
pop
arpl
leave
pop
or
out
dec
xlat
mov
call
lock
outs
or
cmp
adc
mov
mov
or
lea
push
mov
test
push
inc
mov
aam
mov
(bad)
pop
sub
and
inc
inc
mov
mov
or
adc
and
or
icebp
push
out
call
test
cmp
ret
les
add
or
es
jecxz
lea
mov
push
movs
stos
mov
jne
push
mov
and
lods
test
std
mov
pop
jno
and
pop
xchg
xor
push
adc
movs
xchg
shl
ins
jl
fcom
and
outs
inc
outs
mov
sbb
fwait
sahf
leave
dec
ins
push
jp
jae
imul
cmp
dec
dec
ror
imul
std
ss
xchg
in
add
push
xor
jns
sub
jb
repz
pop
dec
jecxz
test
int
pop
push
test
and
push
jno
test
inc
push
xchg
mov
sbb
hlt
repz
sub
mov
mov
sub
lds
jl
inc
cmp
inc
ss
adc
jmp
mov
dec
fadd
xchg
jg
mov
sbb
xor
xchg
hlt
hlt
sub
push
mov
push
sbb
lahf
stos
and
out
add
mov
(bad)
enter
pop
jge
test
dec
mov
push
in
jmp
sub
int
stos
xchg
pop
push
fs
jg
iret
sbb
in
(bad)
lods
push
(bad)
std
mov
xor
add
push
lods
popa
dec
dec
ss
sbb
adc
int
mov
jmp
mov
sub
sub
mov
mov
xchg
(bad)
call
jns
pusha
and
xchg
mov
imul
rcl
pop
pop
and
cdq
jns
ror
cdq
aad
movs
lds
or
push
jl
cmp
test
and
push
stos
jg
aas
add
outs
enter
(bad)
aas
arpl
add
ja
mov
mov
cmp
retf
shl
inc
loopne
xchg
(bad)
sub
add
fwait
sahf
mov
push
sbb
pop
jmp
xor
pop
cmc
mov
dec
into
inc
and
mov
inc
scas
xchg
jl
in
dec
push
xchg
dec
and
jno
sti
inc
(bad)
int3
sti
into
sti
scas
and
cwde
push
lods
arpl
das
pop
nop
adc
sub
or
je
movs
add
inc
ins
je
jno
pop
in
mov
mov
mov
xor
mov
sti
(bad)
arpl
pop
sub
xchg
mov
cmp
dec
gs
adc
jae
aaa
xchg
shl
in
imul
movs
mov
sbb
bound
jnp
fwait
or
xor
imul
cwde
aas
dec
add
mov
cmp
rol
sahf
xchg
sub
gs
mov
dec
xlat
jae
sub
iret
pop
repz
(bad)
movs
jecxz
call
shl
nop
mov
retf
in
and
pop
lea
xchg
inc
add
inc
sti
add
cmp
retf
out
mov
jns
aad
inc
stos
movs
and
cld
movs
push
jp
fadd
aas
push
and
repnz
mov
pop
pop
sub
xor
and
movs
sub
nop
shr
jmp
inc
stos
dec
add
mov
xchg
inc
push
xor
data16
adc
mov
sub
xlat
out
aaa
cmp
jno
sbb
aad
cwde
mov
mov
imul
or
push
ret
inc
sbb
pop
adc
clc
xlat
movs
call
sbb
sbb
xor
add
xlat
pop
iret
inc
sub
int
sub
xchg
mov
and
mov
lea
xchg
fimul
mov
rol
add
sbb
sub
stos
jae
cmp
dec
cmp
jb
mov
out
out
ror
inc
adc
fs
and
jmp
fcos
sub
bound
xor
out
cmp
fld
nop
aaa
push
and
mov
sbb
inc
addr16
sbb
and
jle
or
jns
shl
sub
aad
jge
movs
mov
scas
pop
and
pop
or
lahf
retf
mov
adc
or
add
call
shl
cmc
mov
scas
cmp
mov
cmp
out
jp
int3
das
xor
xchg
cli
ror
jle
mov
pop
pop
scas
dec
and
cmps
das
inc
push
jmp
int3
lahf
add
repnz
mov
ret
dec
cmp
xor
pop
jae
xchg
das
iret
cmps
inc
rol
xchg
mov
inc
cmps
jnp
push
and
pop
push
js
pop
xor
cld
fild
data16
xchg
and
jno
aaa
xchg
mov
imul
add
mov
dec
call
in
js
cmp
jnp
cmp
iret
and
in
retf
(bad)
xchg
daa
inc
adc
jge
dec
bound
jnp
and
aaa
out
popf
cli
aas
stc
push
in
in
sbb
jns
dec
push
into
pop
ins
stc
mov
xor
stc
and
cmp
jmp
popf
mov
mov
or
xor
sub
addr16
cmp
gs
pop
(bad)
into
test
or
shl
mov
or
mov
mov
lds
aam
shl
or
les
enter
pop
dec
stc
sbb
(bad)
cmp
push
xor
in
mov
fbld
imul
inc
shr
mov
retf
pop
pop
out
test
push
sub
mov
bound
fmul
push
nop
pop
sbb
inc
cmps
pop
mov
inc
stos
mov
and
pop
aam
sahf
inc
adc
mov
dec
pushf
mov
fistp
cmps
cmp
aas
cmp
outs
je
icebp
sbb
repz
js
cmps
jbe
outs
dec
or
mov
dec
ins
push
stos
jno
cmp
lods
ror
call
xchg
push
scas
cmp
or
mov
inc
mov
pop
pop
leave
test
sub
mov
mov
and
jo
popf
or
loopne
in
popf
aas
push
inc
call
push
mov
cmp
int3
lea
es
mov
pop
loope
mov
jecxz
nop
mov
popa
sbb
xchg
sbb
cmc
push
push
call
xchg
push
fs
cdq
imul
jo
mov
xor
arpl
(bad)
pop
add
jp
xor
shl
add
or
jbe
and
test
js
stos
xsha256
cmps
push
rcl
std
dec
fsubr
cmps
enter
rcl
push
test
dec
rcl
jo
dec
jno
clc
cmps
pop
pop
mov
add
sub
xchg
aam
ret
xor
enter
mov
rcl
pop
jle
mov
and
mov
sbb
fwait
cmp
xor
push
into
sahf
std
jmp
inc
aas
mov
inc
retf
rol
sub
iret
(bad)
push
inc
int
pop
ficomp
call
pop
imul
sbb
(bad)
scas
(bad)
movs
jns
jae
imul
leave
lahf
ins
in
in
test
scas
mov
(bad)
push
add
dec
mov
in
lods
popa
dec
mov
sbb
cmp
jmp
lahf
repz
retf
and
jl
ret
out
push
mov
pop
test
or
xchg
call
and
push
adc
arpl
mov
pop
test
outs
push
cwde
mov
ret
gs
xchg
int
in
cmc
xchg
and
scas
pop
xor
cdq
jmp
inc
mov
add
cmp
add
in
out
push
adc
pusha
mov
xchg
sbb
cdq
lahf
mov
repz
cmp
rcr
retf
outs
mov
mov
jno
mov
mov
mov
scas
xor
scas
dec
inc
xor
dec
mov
hlt
js
cwde
inc
or
jmp
jbe
add
sub
test
imul
int
(bad)
push
int3
in
xor
xor
xor
add
add
push
sar
or
mov
inc
(bad)
mov
rol
idiv
rcr
xor
sbb
or
jle
iret
and
imul
add
clc
nop
add
jns
pusha
mov
xor
sar
mov
add
xor
cmp
adc
mov
xor
dec
and
(bad)
mov
pop
cmp
(bad)
inc
fstp
in
loopne
push
dec
mov
loopne
mov
aaa
fld
fwait
in
ror
inc
sub
rcr
mov
push
xor
sahf
jo
push
xor
jge
push
xor
int
and
mov
and
mov
(bad)
mov
in
in
std
mov
movs
adc
dec
sub
repz
arpl
mov
cmp
cwde
or
adc
scas
add
push
inc
jb
lods
outs
lahf
pop
icebp
aam
arpl
aaa
mov
add
add
cmp
cmps
out
leave
and
fucomip
inc
mov
mov
xlat
jb
mov
call
pop
inc
mov
rol
mov
cmps
jnp
fwait
xor
push
cmps
dec
test
mov
inc
xchg
into
xchg
jg
sbb
push
pusha
adc
xor
adc
test
inc
push
pop
mov
cmp
in
mov
loop
mov
iret
xor
and
ja
mov
push
jg
(bad)
mov
xor
jne
inc
xchg
retf
mov
sbb
fild
test
fadd
pop
add
and
mov
pop
xchg
jp
pop
ret
in
dec
ja
test
(bad)
mov
inc
call
mul
shl
das
mov
xor
movs
retf
call
inc
js
sub
push
movs
pop
sbb
rcl
jg
pop
fcomp
cwde
outs
nop
dec
(bad)
sub
push
fbld
xchg
or
(bad)
stc
push
cmp
ds
pop
ror
fs
jle
rcl
mov
sub
ins
or
data16
mov
jg
adc
xchg
loop
cmp
or
rcl
sub
out
xor
scas
shl
rol
imul
mov
int3
push
scas
cli
jmp
stos
xlat
je
xchg
inc
ret
out
dec
cmp
rcl
sbb
dec
or
pushf
push
outs
int3
or
sar
sbb
mov
push
cmp
call
pop
adc
(bad)
xchg
movs
scas
pusha
push
dec
push
jne
jmp
or
rcl
adc
or
fnstenv
pop
jb
pop
jo
pop
in
mov
mov
jecxz
lock
pop
fimul
mov
ror
in
stc
xlat
mov
add
cmp
add
mov
xchg
cwde
retf
mov
aas
and
mov
aam
(bad)
fidivr
shr
cmp
enter
fadd
jmp
pop
mov
xchg
cli
push
scas
inc
stos
cwde
pop
inc
add
push
mov
neg
xchg
sub
jnp
jne
mov
in
pop
push
shr
sti
pop
dec
fcom
inc
pop
mov
pop
pop
pop
enter
sub
and
jns
(bad)
jle
bnd
cmp
mov
or
push
out
pop
mov
inc
xor
sbb
sbb
rol
pop
xchg
jmp
push
jmp
push
shr
sub
imul
inc
inc
and
xor
leave
popa
push
in
out
mov
in
inc
xchg
aas
xchg
addr16
sbb
push
mov
and
rcr
mov
retf
loop
or
ds
mov
mov
mov
movs
mov
adc
iret
cmp
cmps
cmp
push
mov
repz
aas
adc
pop
or
les
aad
arpl
push
pop
mov
sub
rcr
mov
xlat
dec
inc
hlt
dec
int3
pop
mov
jg
dec
rcl
sub
add
call
mov
ret
sub
sub
loope
jecxz
es
sbb
cwde
not
sbb
sbb
cmps
mov
sub
pop
repz
dec
push
ret
in
add
jnp
push
jnp
fbld
mov
cmps
xchg
adc
adc
aad
add
stc
mov
les
mov
cdq
inc
shl
mov
add
adc
in
cmp
dec
mov
and
sub
shl
stos
sbb
lods
call
call
icebp
stos
cmp
aad
rol
or
out
cmps
xlat
retf
loopne
cmp
jne
xchg
in
xor
lock
mov
push
sbb
inc
mov
add
pop
cmp
ret
inc
mov
ror
dec
or
out
shl
cs
ins
adc
fnstsw
mov
nop
mul
jb
lahf
pusha
iret
fdiv
jbe
sbb
inc
retf
adc
stos
xchg
rcr
adc
ficomp
stos
repz
and
mov
icebp
mov
jle
xchg
mov
and
ret
rol
test
push
and
cmp
xchg
xor
es
mov
das
jg
retf
in
and
inc
stos
pop
jecxz
pop
or
dec
inc
ja
push
pop
je
mov
fsubrp
imul
js
xor
inc
aad
and
jo
jge
push
gs
loop
(bad)
iret
lds
push
mov
(bad)
sti
jl
jl
int
pop
or
mov
inc
es
jp
icebp
popf
push
lods
sbb
stc
push
retf
cmp
inc
mov
iret
clc
popa
hlt
dec
je
push
jl
addr16
dec
mov
pop
fnstsw
ds
add
fild
movs
mov
stos
pop
ret
pop
enter
test
shl
leave
push
mov
jl
das
xor
cli
fisub
adc
adc
dec
push
lock
out
fdiv
arpl
jno
dec
xchg
xchg
cmps
cmp
aam
jns
lea
loope
aam
sbb
pop
test
shl
(bad)
pop
or
inc
sub
cld
(bad)
cmp
inc
and
jmp
or
inc
dec
ror
mov
mov
rcl
xchg
or
and
stos
adc
jl
sar
adc
lea
jle
and
add
lahf
cmc
stc
sbb
pop
out
loope
push
sub
cmovg
shr
(bad)
mov
or
cmp
mov
cmp
aaa
mov
inc
sti
fstp
je
std
inc
sbb
xor
mov
fucomip
xor
out
and
(bad)
cmps
pop
mov
and
ret
call
push
add
adc
(bad)
xlat
xor
xor
je
mov
cmp
out
stos
icebp
je
aaa
xor
sbb
adc
cmp
xchg
into
adc
jae
jno
push
sbb
mov
mov
pop
jae
and
pop
add
add
ja
xchg
pop
push
popa
xor
mov
mov
dec
cmc
xchg
dec
xchg
movs
mov
push
jle
push
mov
cld
(bad)
pop
cli
inc
clc
dec
xor
cwde
sub
call
and
rcl
loopne
mov
fs
dec
jmp
xchg
setge
push
jno
aad
fnsave
fnclex
adc
mov
sub
arpl
gs
mov
inc
fadd
push
js
gs
ja
mov
(bad)
sub
adc
(bad)
in
mov
js
jg
sbb
and
cmp
push
nop
mov
stos
sbb
and
cld
sub
push
(bad)
jecxz
push
push
das
adc
mov
and
sar
sub
cmps
cmovne
xlat
xchg
sbb
or
mov
je
jae
sti
pop
and
out
(bad)
cld
lahf
lds
jns
(bad)
push
fst
add
jno
jle
or
shl
pop
test
mov
lds
xchg
mov
hlt
test
into
hlt
add
sar
cmp
or
dec
in
inc
repnz
jmp
cmp
xchg
popf
jns
mov
jl
and
pushf
mov
push
shl
cmc
outs
mul
push
int3
leave
cwde
bnd
jne
xor
adc
js
mov
jbe
sbb
addr16
inc
imul
cmp
inc
stc
loopne
mov
dec
mov
(bad)
dec
pop
iret
adc
dec
sub
jns
ins
shl
test
outs
jl
mov
lock
loope
xor
jg
xchg
xor
ret
loope
daa
fisubr
xor
or
jnp
pop
push
clc
dec
push
sbb
scas
push
test
jp
sub
sahf
retf
lea
fstp
stc
fild
or
xor
xor
pusha
sub
out
dec
stos
nop
mov
jmp
out
push
xchg
pop
xor
mov
push
les
icebp
or
push
jmp
or
mov
mov
arpl
add
cs
outs
enter
xchg
mov
push
cmp
dec
and
ds
push
cmps
push
scas
dec
jno
and
(bad)
jp
shl
sbb
mov
rcl
sar
xchg
retf
mov
mov
lock
mov
cmp
cld
call
adc
mov
xchg
pop
addr16
test
inc
es
xchg
leave
sub
repz
jno
lahf
xor
repnz
add
sbb
mov
mov
jmp
adc
and
cmp
push
in
mov
inc
int
stos
xor
dec
mov
add
jae
ficom
adc
dec
imul
sti
ret
fiadd
jmp
ja
xchg
sbb
int
mov
into
dec
cmp
push
adc
xchg
(bad)
pushf
call
fcom
pop
aas
in
shr
cmp
or
outs
dec
pop
pop
leave
adc
xchg
cmps
add
mov
pop
jns
add
outs
std
or
cdq
dec
inc
(bad)
int3
xchg
pusha
retf
and
std
jle
inc
jbe
pushf
add
retf
xlat
cs
movs
arpl
sbb
rcr
dec
inc
push
inc
in
xchg
jo
popaw
daa
cmp
data16
movs
jecxz
inc
mov
pop
(bad)
jle
cdq
retf
sahf
mov
inc
adc
pop
aad
add
or
and
adc
pop
push
cmps
cmp
jae
pop
stc
mov
daa
iret
mov
clc
xlat
jnp
into
mov
xchg
dec
(bad)
(bad)
je
scas
adc
push
test
cwde
mov
jmp
cmp
pop
cmp
pop
and
inc
sub
pop
test
rcr
xchg
fs
imul
pushf
ficomp
cmp
call
adc
mov
aas
in
sub
call
fcom
push
ret
jno
jg
sbb
call
and
dec
xchg
outs
pusha
js
dec
jp
fmul
pop
mov
inc
adc
jge
push
and
into
arpl
cs
mov
xchg
icebp
pop
ins
fs
out
mov
(bad)
outs
mov
and
mov
sub
sbb
dec
push
clc
mov
pop
sub
test
xchg
popf
mov
ficomp
mov
ss
mov
adc
mov
call
and
(bad)
int
mov
mov
lahf
cmp
enter
mov
add
scas
or
test
sub
jns
je
dec
aas
push
xor
pusha
bound
lods
jns
add
outs
sub
mov
and
(bad)
ins
leave
jmp
mov
aam
cli
(bad)
ss
ja
add
adc
pop
adc
xor
scas
(bad)
sub
aaa
add
jle
inc
in
push
call
xchg
sbb
(bad)
jge
repnz
popf
xchg
shl
and
dec
(bad)
cmp
ret
es
loopne
push
and
inc
out
sbb
mov
sbb
popa
ss
test
cmp
adc
das
xchg
jmp
mov
xchg
pop
add
push
rol
test
push
jmp
pop
cld
test
adc
sbb
call
sbb
adc
out
ret
dec
jns
int3
dec
push
fidiv
xor
and
mov
popa
repz
repnz
lock
test
pop
sbb
mov
jp
or
lods
xor
cmc
cmps
and
push
outs
fsubp
out
cmp
xchg
push
cmc
push
mov
stc
or
push
dec
scas
dec
ja
cmp
adc
push
sub
add
jo
and
call
push
inc
jns
bound
mov
stos
sbb
push
push
mov
and
push
adc
push
daa
jge
xor
push
stos
or
psubusb
pusha
ss
mov
jle
xchg
in
leave
cld
jmp
mov
call
ret
cld
cmp
and
sbb
pop
and
idiv
xor
stos
push
dec
movs
inc
mov
jmp
mov
adc
cmps
adc
call
jb
xchg
fbld
mov
dec
and
mov
stos
call
(bad)
cmps
sbb
mov
mov
shr
es
mov
sahf
test
in
fistp
ins
stos
ins
mov
call
stc
add
mov
and
and
and
pop
lds
out
stos
xchg
mov
dec
inc
mov
xchg
loope
xor
out
lods
and
cli
(bad)
xchg
inc
clc
add
shl
mov
push
out
mov
cmps
jmp
shl
(bad)
add
repnz
sub
test
and
fcmove
ins
jo
lods
gs
inc
ja
ja
add
std
cmp
inc
jge
ret
mov
cmps
cmps
inc
mov
pop
pop
pop
test
xor
dec
cwde
sub
xchg
in
push
repnz
push
retf
call
mov
jae
rcl
sub
aad
(bad)
ins
aad
xchg
outs
add
test
pop
ret
mov
imul
jmp
mov
xor
add
cmps
xchg
and
pop
(bad)
in
pop
je
ins
mov
jno
mov
jnp
inc
inc
call
xor
js
scas
pusha
pusha
aad
gs
shr
je
jmp
jmp
test
pop
je
add
mov
mov
scas
fs
lahf
ret
xlat
lds
dec
mov
pop
inc
ins
inc
sbb
fimul
sbb
xor
lahf
pop
aas
out
mov
cmp
adc
dec
xchg
enter
and
xor
mov
lods
nop
(bad)
shr
hlt
mov
fst
mov
inc
ss
mov
lds
pushf
push
shl
pop
call
frstor
leave
loop
adc
push
popa
mov
push
adc
dec
mov
out
aam
lds
aaa
cli
jl
push
bound
test
dec
push
pop
fdivr
pop
imul
sti
push
ins
repz
lods
ds
mov
inc
daa
pop
push
mov
push
in
dec
rcr
sbb
dec
in
gs
fisubr
cs
adc
xor
xchg
push
int3
mov
xchg
ds
pop
jne
push
(bad)
(bad)
jns
sub
pop
push
outs
fucom
jns
xadd
jmp
imul
neg
jl
sub
cdq
int
push
push
jmp
mov
inc
xchg
adc
mov
mov
jnp
pop
mov
fwait
mov
sub
dec
sbb
test
add
inc
fild
rol
ja
nop
push
inc
and
xor
inc
daa
add
add
repz
pop
jecxz
add
ds
lods
ins
int
leave
daa
sub
nop
xor
push
inc
cmp
ret
jnp
lods
dec
jae
stos
push
sub
xor
dec
les
pop
(bad)
mov
pop
cli
mov
pop
inc
add
cmovbe
shr
mov
cwde
add
mov
pushf
jecxz
fidivr
jnp
in
iret
aad
and
arpl
hlt
lea
inc
dec
add
xor
ret
pop
fisttp
cmps
ficomp
stc
lahf
jmp
fs
mov
movs
gs
dec
(bad)
and
ret
or
add
dec
imul
jbe
fnsave
sub
or
sbb
mov
test
lds
in
mov
pop
imul
mov
xchg
in
ror
mov
aas
jne
mov
or
sbb
cmp
jno
dec
and
shl
(bad)
jl
adc
and
pop
repz
in
or
jnp
add
jecxz
sti
stos
in
hlt
dec
or
sbb
outs
mov
mov
aaa
pop
jns
jmp
stos
mov
ds
jae
sub
nop
fld
call
repz
movs
mov
mov
add
add
inc
mov
ins
adc
jge
ins
aam
mov
and
popf
jbe
mov
out
mov
stos
sbb
xlat
mov
es
pusha
sub
push
int
lods
push
mov
aas
mov
sbb
mov
mov
retf
test
hlt
jb
jge
adc
jb
sbb
fsubr
cmp
ins
inc
cdq
es
xor
(bad)
pop
mov
es
adc
xor
mov
cs
or
stos
mov
add
or
lahf
mov
mov
inc
int3
mov
scas
pop
mov
mov
and
fwait
movs
pop
ja
scas
mov
ds
(bad)
dec
std
xor
mov
sbb
mov
je
or
xlat
pop
sbb
addr16
xchg
mov
jbe
mov
nop
push
xchg
les
sti
imul
mov
inc
mov
mov
cmp
in
stos
and
fdiv
jg
rcr
and
jg
pusha
arpl
xor
call
push
or
jmp
xor
js
mov
test
cmp
jp
arpl
fcom
loop
mov
jns
fs
mov
mov
retf
inc
mov
(bad)
mov
aad
xchg
adc
lods
repz
push
fwait
rcl
and
rcr
in
push
inc
(bad)
movs
shl
jae
sub
add
sbb
add
push
cmp
pop
push
sub
scas
(bad)
mov
fs
mov
mov
dec
push
mov
cmp
dec
pusha
mov
pop
or
pop
pop
in
push
mov
cmp
nop
mov
mov
test
jecxz
fistp
lods
jle
push
add
lods
std
repnz
(bad)
pop
fcomi
not
neg
out
sbb
push
jp
test
xchg
mov
(bad)
fdivr
or
push
mov
adc
repz
loop
add
inc
and
inc
pop
xor
outs
(bad)
fst
inc
sub
repz
loope
inc
les
and
xchg
es
call
rcl
aad
jb
pushf
pop
pop
cmp
mov
dec
aaa
jp
cmp
imul
movs
jns
jae
fist
add
shl
scas
cmp
pop
test
out
xor
lock
das
mov
call
push
aam
cdq
imul
mov
pusha
sub
jge
shl
push
mov
popa
mov
lods
mov
push
das
std
bound
sbb
sub
(bad)
aad
sub
ins
jl
test
jmp
aad
data16
cmp
dec
das
sbb
cwde
adc
inc
push
cmp
inc
scas
dec
mov
lods
or
inc
rcl
ds
mov
nop
rcr
popa
push
jbe
adc
mov
cmps
adc
and
xchg
add
daa
mov
les
imul
push
sub
jg
add
push
and
call
mov
xchg
push
jmp
rcr
pop
std
imul
lock
lds
data16
test
mov
les
ds
daa
fild
repnz
mov
fnstcw
ficomp
ins
mov
clc
imul
pop
mov
in
push
cli
ds
stc
out
mov
xchg
aam
mov
out
hlt
or
mov
movs
in
mov
call
lahf
sub
das
jg
pop
into
int3
out
mov
lea
rcl
out
jg
mov
popf
es
pushf
test
mov
loop
not
add
mov
mov
or
mov
xchg
cmp
inc
pusha
xchg
xchg
fist
add
xor
add
sbb
scas
div
gs
mov
add
dec
aam
std
inc
movs
mov
jl
mov
jnp
jge
ror
ret
push
out
jmp
out
xchg
(bad)
pop
jge
mov
mov
lods
mov
shl
push
not
jle
imul
push
cmp
jnp
das
call
mov
pop
pop
cmp
dec
nop
daa
mov
inc
mov
push
push
cmp
aad
ficomp
cmp
mov
std
mov
inc
out
sub
or
lahf
dec
fcom
(bad)
adc
div
add
xor
pop
mov
mov
mov
push
push
pop
xchg
out
or
jl
jge
jecxz
aas
mov
les
enter
fist
jnp
jae
mov
in
inc
push
(bad)
pop
cmp
push
add
dec
neg
jecxz
cmp
dec
push
icebp
cld
jns
xor
jg
loop
(bad)
pusha
xchg
pusha
cdq
mov
popf
pushf
repnz
pop
jae
pop
jbe
out
enter
push
adc
jecxz
adc
pop
dec
pop
repz
hlt
sub
sti
push
rol
cmp
mov
push
call
in
pop
mov
fimul
or
out
int
loopne
dec
lods
push
sbb
aas
test
mov
out
fldenv
xchg
jbe
(bad)
pop
dec
add
mov
mov
sub
jl
add
jmp
inc
stc
mov
call
xor
push
std
mov
stos
imul
fs
fnstsw
mov
jecxz
xchg
cmp
adc
mov
rcl
and
pop
cmp
sbb
popa
(bad)
call
sbb
jbe
pop
push
and
ins
daa
mov
mov
pop
sub
int
iret
inc
cmp
xchg
mov
sbb
add
cwde
cmps
(bad)
pop
movs
popa
(bad)
shl
push
fcomip
repz
or
retf
es
outs
mov
aaa
sahf
in
mov
inc
int3
add
dec
rol
dec
xor
inc
jno
lea
jge
mov
sub
jecxz
test
fwait
shl
das
xchg
mov
cmp
mov
shl
push
js
mov
aad
adc
rol
scas
repnz
push
add
fadd
lds
add
push
jmp
popa
and
push
sub
push
add
or
sub
call
jno
mov
aas
mov
call
lods
in
xchg
pushf
pop
dec
jns
arpl
rol
fmul
in
push
dec
movs
jge
lods
outs
pop
xor
push
mov
ins
fild
pop
pop
bound
xchg
xor
stc
push
mov
movs
or
dec
int
dec
popa
mov
cmc
push
loopne
aam
stos
cmp
inc
ss
cmp
jno
add
lods
cli
xchg
ret
cdq
push
rol
sub
mov
mov
or
cwde
jp
cmc
xor
add
inc
add
fldcw
pop
mov
test
fwait
push
aaa
jo
cmp
adc
jmp
(bad)
call
adc
mov
jmp
sar
(bad)
xor
imul
cld
lods
pusha
xor
mov
add
mov
and
clc
addr16
sbb
lods
aam
add
pop
pop
cmp
int
(bad)
pop
inc
or
cmp
ret
inc
sti
gs
leave
aas
inc
cmp
cmp
sub
fisttp
mov
les
shl
jno
jmp
or
retf
fcmovu
sar
lods
jae
jns
dec
mov
mov
in
mov
adc
es
movs
in
enter
cmp
cld
js
jne
shl
dec
adc
push
mov
in
push
inc
cmc
cmp
jne
cmp
aad
adc
pop
mov
jmp
xchg
sub
icebp
pop
movs
popf
dec
pop
mov
stos
lods
and
mov
sbb
inc
retf
test
add
jns
mov
mov
sub
push
add
cmp
jae
push
mov
and
and
jmp
mov
stos
stc
(bad)
inc
cmps
jecxz
cwde
mul
sbb
fstp
mov
mov
adc
xor
add
mov
mov
out
mov
movs
xchg
daa
sbb
hlt
and
pop
sti
mov
inc
or
popw
(bad)
cmp
inc
xchg
or
jl
fsubr
jb
mov
mov
pop
xor
jmp
pop
mov
add
dec
add
lods
push
sub
dec
test
pop
adc
pop
adc
repnz
daa
jne
lods
icebp
jbe
lahf
pop
or
pop
fild
ffreep
dec
fdiv
movs
cmp
(bad)
in
pushf
sbb
cmp
icebp
pop
(bad)
ror
mov
and
or
xor
pop
jge
push
ds
mov
rol
mov
addr16
jae
cmp
out
cmp
dec
dec
and
inc
lods
neg
mov
div
pushf
jp
hlt
jnp
retf
add
rcr
adc
push
and
pminsw
rcr
cmp
(bad)
mov
mov
inc
cdq
hlt
adc
mov
es
and
std
push
inc
lahf
jg
enter
jg
daa
test
rcr
sbb
fwait
and
sbb
inc
inc
addr16
mov
and
or
iret
lock
sub
push
and
dec
mov
idiv
dec
je
sti
mov
stc
and
mov
out
push
pop
out
jecxz
sbb
imul
cmp
scas
push
pop
push
repz
loope
xadd
mov
cmps
jnp
js
ja
dec
jnp
inc
or
sbb
scas
pushf
ficom
mov
mov
test
je
mov
cmps
mov
mov
push
pop
jl
sub
mov
mov
add
jns
dec
(bad)
jae
jb
emms
aaa
jnp
adc
cli
scas
inc
leave
xchg
call
jmp
dec
or
jnp
ins
shr
sub
ja
jge
jmp
mov
adc
lds
push
adc
pop
fwait
push
or
push
add
sbb
gs
push
fnstenv
sar
add
sbb
(bad)
lahf
xchg
jp
add
fadd
and
shr
cmc
test
cmp
mov
ins
call
cwde
ins
inc
and
sub
cmp
sub
idiv
add
fistp
mov
mov
cmps
arpl
jbe
fadd
cmp
test
and
loopne
push
aad
mov
sahf
mov
mov
aaa
ja
es
sti
ja
and
ins
call
dec
out
fcomi
and
and
sbb
jge
pop
add
and
rcr
(bad)
cmps
gs
int
xchg
test
daa
ins
fisttp
lds
(bad)
dec
(bad)
push
test
mov
hlt
dec
cs
sub
stc
push
push
dec
mov
cs
in
fsubr
pop
lahf
or
mov
mov
cmp
adc
jae
das
xchg
mov
push
mov
out
xor
mov
sahf
mov
mov
fld
fucomip
add
dec
inc
mov
jecxz
les
std
sbb
scas
je
cmp
jle
(bad)
popf
jmp
(bad)
aaa
add
fxch
push
bound
fistp
jmp
sti
push
outs
movs
int3
xchg
mov
sub
push
inc
arpl
mov
inc
in
das
dec
mov
cdq
dec
fs
ror
shl
inc
mov
jp
xchg
imul
dec
clc
jo
adc
int
jge
jae
out
ret
pusha
sti
push
out
loop
xor
frstor
or
fsubrp
jge
ror
div
sub
enter
pop
xchg
adc
jns
loope
and
cmp
int3
in
jge
dec
dec
aam
and
cld
jmp
or
stc
out
int
adc
jno
push
lea
cmp
jb
bound
mov
cmps
mov
push
dec
cmps
iret
mov
cwde
xor
nop
mov
dec
push
test
arpl
ror
shl
xor
fidivr
mov
mov
jne
pop
out
or
dec
adc
rol
dec
xor
pop
pop
test
lock
lock
loope
addr16
inc
dec
test
add
mov
mov
and
jne
pusha
call
mov
and
loope
loope
addr16
mov
cmc
mov
sbb
xor
and
inc
jo
stos
mov
lea
cmc
bound
cmp
jle
push
sahf
pusha
and
outs
add
arpl
jnp
mov
pop
inc
and
outs
xchg
add
ins
dec
and
imul
out
push
imul
push
outs
pop
aam
cmc
mov
inc
or
xchg
or
jae
mov
out
enter
push
test
enter
add
lock
test
(bad)
push
push
popf
lea
add
arpl
fdivr
pushf
sbb
daa
scas
repnz
leave
popf
xchg
jb
mov
xor
retf
hlt
push
mov
cmp
sahf
jp
enter
xor
jl
ds
aas
jbe
loop
imul
int3
pusha
push
mov
xor
sbb
xchg
jb
adc
add
mov
ins
mov
adc
mov
outs
push
pop
jle
mov
in
fwait
in
out
out
add
inc
test
(bad)
iret
push
lock
cmp
daa
sbb
retf
(bad)
mov
jle
add
int
inc
mov
cmp
mov
or
mov
ins
movs
andnps
jmp
fistp
test
fmulp
(bad)
gs
mov
leave
icebp
in
les
mov
jns
jmp
cmp
jmp
call
mov
in
cdq
stc
sahf
cmp
lahf
in
mov
dec
iret
ja
cld
aad
les
in
pop
mov
loope
std
or
add
pop
sbb
es
js
jbe
int
fwait
xor
inc
psrlw
sub
ins
mov
sub
jle
inc
movlps
jp
jmp
xor
mov
std
xchg
xor
les
arpl
mov
lea
cmp
mov
stc
out
pop
dec
out
inc
enter
out
sub
jmp
inc
stos
test
xor
push
pop
xchg
jecxz
and
ja
mov
mov
into
mov
inc
ss
(bad)
cmp
(bad)
mov
popf
push
les
mov
(bad)
fist
xchg
iret
(bad)
mov
jecxz
sti
fld
outs
cs
xchg
aam
or
test
inc
xor
push
jo
mov
xchg
ds
(bad)
aam
sub
adc
pop
jns
and
imul
mov
dec
jbe
es
add
in
jmp
jns
cmp
pop
xchg
pop
push
ds
jecxz
jp
out
mov
dec
xchg
inc
mov
jns
push
add
out
lock
test
jo
imul
jl
jnp
xchg
cmp
pop
in
push
inc
jae
aam
adc
rol
test
cmp
xchg
and
inc
push
lahf
pop
repz
ds
sar
cli
mov
dec
mov
push
mov
in
mov
aam
cmp
or
jl
je
fist
xchg
jno
and
imul
gs
cmp
icebp
movs
imul
mov
mov
xchg
mov
jo
mov
add
in
pop
push
ja
xchg
and
arpl
inc
push
lock
xor
fldenv
rol
fst
jo
mov
cmp
fnstenv
mov
mov
aaa
cmp
dec
(bad)
jbe
jl
fist
and
(bad)
cs
mov
pop
in
imul
jmp
sub
mov
retf
(bad)
xchg
retf
sbb
lock
mov
shl
loop
adc
jns
sbb
cdq
int3
jns
into
jl
aaa
and
aas
cmp
pop
enter
(bad)
out
jae
dec
les
sub
cmp
int3
int3
and
scas
loopne
(bad)
call
bound
push
jne
add
dec
add
ret
dec
das
or
das
iret
mov
fsub
adc
dec
mov
ins
push
inc
ja
nop
ins
rol
clc
cmp
inc
mov
dec
ja
dec
adc
jg
inc
bound
inc
sbb
hlt
xchg
scas
test
aam
xchg
xchg
jno
and
mov
mov
sub
or
push
push
push
out
inc
nop
(bad)
in
lds
call
hlt
push
mov
dec
and
inc
fistp
inc
rol
dec
(bad)
neg
out
or
inc
pop
inc
push
ds
das
xchg
repnz
inc
xor
jg
xor
je
jmp
push
mov
retf
or
cs
fld
(bad)
cmc
mov
ins
imul
stos
pop
shr
sahf
call
and
fsubr
xor
repz
outs
adc
jb
adc
(bad)
push
and
icebp
mov
cdq
repnz
push
(bad)
ins
outs
ret
push
adc
cmp
into
lods
je
pushf
sub
cmc
ds
mul
lahf
popa
jge
jae
or
add
jmp
jp
fist
rol
xchg
mov
out
(bad)
and
pop
add
xchg
movs
dec
push
pop
cld
icebp
mov
jne
xlat
cmc
pop
nop
xchg
inc
imul
call
loopne
scas
jmp
movs
movs
add
xchg
mov
push
sub
out
shl
xor
loop
jecxz
and
fs
ret
adc
inc
jns
fadd
adc
nop
punpckldq
test
xor
test
inc
and
inc
xchg
mov
movs
js
mov
scas
adc
jno
mov
es
fsub
loopne
in
cmc
mov
jno
jge
cmp
add
dec
jp
mov
sbb
inc
sbb
push
cli
das
jns
jge
aas
xchg
mov
inc
sub
push
shr
int3
mov
arpl
xor
or
mov
add
inc
add
gs
out
pop
dec
mov
push
pop
and
jmp
xchg
cmp
scas
mov
and
xchg
pmaxsw
sbb
rol
in
(bad)
(bad)
push
imul
and
leave
mov
dec
inc
mov
adc
loop
or
aad
pop
adc
mov
lods
repnz
in
ror
mov
outs
add
mov
and
aaa
int
in
inc
mov
aad
sub
add
out
shr
(bad)
movs
mov
xlat
add
dec
mov
mov
push
inc
inc
shl
(bad)
and
and
lahf
test
(bad)
xor
mov
xchg
cmc
pusha
jle
sub
stos
fcmove
xor
add
jns
scas
das
and
xor
add
or
fldl2e
mov
pusha
mov
loope
mov
sub
sbb
inc
adc
jnp
js
sub
mov
jle
xor
pop
and
out
popa
fmul
xor
sub
xchg
sub
jne
dec
jecxz
xlat
pop
lea
shl
cdq
xor
xchg
push
xchg
xchg
mov
xchg
call
lods
jle
add
imul
popf
loop
cmp
or
ja
std
mov
xor
mov
push
inc
loope
icebp
movs
dec
sub
stos
test
outs
add
shl
je
out
xor
sahf
and
(bad)
fdivr
sbb
fld
ins
shl
pop
pop
hlt
(bad)
jmp
es
test
jae
popf
push
or
lds
(bad)
int
in
sub
repnz
rcl
push
out
cmp
repz
jecxz
mov
in
mov
jmp
call
pop
mov
mov
cld
ja
jno
cmc
or
cmp
xor
mov
in
and
add
rol
fninit
push
(bad)
stc
pop
push
pop
idiv
sahf
inc
imul
push
jae
pop
ds
adc
scas
pop
cmps
(bad)
cmp
push
jmp
test
mov
jbe
ficom
fiadd
push
ja
push
rcl
pop
or
xor
in
popf
sbb
out
cmova
popf
dec
sub
or
sbb
arpl
push
cmps
jge
test
xor
inc
iret
xor
js
mov
jbe
call
hlt
cli
add
int3
jmp
cmc
or
or
je
mov
sbb
mov
js
out
push
add
inc
mov
neg
bound
ja
scas
(bad)
std
out
mov
or
push
out
bound
dec
xor
add
add
mov
xchg
aam
loopne
cwde
sub
xchg
aam
test
aaa
push
and
adc
mov
ins
popa
bnd
and
push
xor
or
cmp
dec
in
and
mov
cmp
pop
movs
scas
hlt
repnz
sbb
mov
in
mov
push
shl
int3
cmc
push
sti
ror
push
(bad)
jp
xor
in
mov
std
and
popf
jno
in
test
and
add
inc
mov
mov
cld
push
push
jne
cs
jbe
pop
add
and
jbe
mov
pop
mov
push
xor
ffree
std
or
inc
retf
jbe
pop
mov
shl
jns
push
pushf
jns
push
xchg
or
leave
or
les
lds
inc
and
ja
fisubr
movs
loope
pop
xchg
(bad)
stc
xlat
adc
popf
pop
cmp
ins
jmp
pop
push
sub
jmp
pop
mov
jge
dec
xchg
mov
xchg
(bad)
and
mov
sahf
cmps
mov
out
dec
dec
std
je
aas
mov
jp
dec
ins
dec
icebp
pop
jno
hlt
mov
ja
shl
jge
inc
sbb
and
mov
inc
int3
xor
popa
and
repnz
aaa
shl
mov
xchg
pop
loop
push
aad
nop
ret
jmp
lahf
dec
cld
(bad)
ja
bnd
pop
gs
(bad)
and
popa
ret
cmp
cld
(bad)
ds
mov
shr
or
push
or
retf
bound
jp
sub
outs
out
mov
fst
or
lahf
push
and
inc
js
test
into
outs
je
sti
inc
mov
mov
push
inc
push
sub
xor
sbb
cmp
fidiv
fisub
ss
ret
sub
add
push
shl
(bad)
inc
mov
lds
addr16
inc
or
or
idiv
(bad)
sub
push
fxch
leave
jg
pusha
(bad)
jns
push
aam
mov
sbb
pop
fucomip
jmp
add
xlat
pop
ret
jecxz
sub
pop
hlt
mov
call
in
popf
aaa
imul
shl
cmp
mov
mov
pop
mov
add
mov
cld
and
dec
push
test
add
inc
cdq
test
(bad)
sub
(bad)
pop
sbb
jne
ja
out
std
shl
pop
mov
out
adc
xlat
jmp
mov
fldl2e
int
ins
aad
xor
sub
int
push
mov
mov
daa
seto
popa
jecxz
popf
jns
inc
lods
jmp
cmp
sub
sub
jecxz
js
add
fimul
cmp
bound
je
out
int
les
ret
daa
sbb
jo
ficom
mov
jnp
cmps
or
pop
xor
sbb
fs
call
push
cmp
sbb
aad
shr
lgs
arpl
out
movs
jns
cmp
ss
retf
push
dec
pop
adc
std
dec
xor
neg
sub
cmp
popa
into
in
daa
aam
retf
or
mov
add
outs
rol
sbb
in
or
arpl
cmps
in
mov
mov
inc
and
hlt
sar
push
cwde
xchg
push
mov
cmps
jmp
mov
jo
in
(bad)
imul
in
mov
clc
adc
das
ret
sbb
out
sbb
lahf
scas
(bad)
iret
add
das
sub
pop
dec
ins
addr16
xor
rcl
jp
dec
mov
inc
popa
imul
mov
cld
or
fdiv
fdivr
aad
and
sub
and
out
fadd
mov
out
mov
or
sub
out
add
mov
ret
dec
ins
imul
retf
pmullw
adc
jno
jne
jno
out
mov
mov
xor
inc
inc
pop
fcmovne
in
dec
cmove
in
into
adc
adc
sub
(bad)
adc
xor
sbb
into
or
push
and
jl
daa
fwait
out
addr16
les
xchg
aad
into
jmp
adc
ja
pop
test
sbb
jns
in
jle
jae
cmp
(bad)
sbb
push
sbb
inc
mov
clc
into
repnz
xchg
add
cmp
jmp
out
add
sub
add
(bad)
ss
in
out
and
xor
pop
cmp
es
xchg
push
sti
xor
idiv
sti
xchg
das
inc
scas
popf
dec
push
mov
cmps
dec
mov
pop
lea
ins
jl
out
loope
ins
jg
retf
pop
jg
sbb
call
pop
int
push
jae
mov
jle
jmp
sbb
sbb
icebp
push
mov
jbe
add
cmp
cwde
fadd
pop
mov
cmp
cld
fisubr
lds
xlat
or
push
pop
cwde
add
inc
in
push
sub
mov
jl
rol
xor
push
test
fcmovne
mov
mov
enter
in
mov
pop
adc
inc
xor
cmp
scas
jp
scas
add
xor
ja
(bad)
les
cmp
fisttp
sbb
lods
xor
xor
mov
(bad)
sub
pusha
mov
addr16
es
mov
fcom
push
in
jne
jp
gs
js
out
mov
jmp
jg
or
cmp
or
jo
outs
push
lods
inc
jae
shl
lea
aam
ret
outs
dec
mov
in
sbb
mov
add
pop
(bad)
xchg
js
dec
mov
or
push
jecxz
mov
or
cmc
out
pop
sub
fwait
pushf
inc
push
addr16
cmp
ds
mov
inc
ret
hlt
jp
xor
test
sahf
cs
jnp
lea
retf
leave
dec
scas
cmp
repnz
and
push
add
(bad)
sbb
push
and
xchg
pop
ins
inc
js
lods
adc
jns
outs
test
gs
jae
pop
or
mov
inc
call
(bad)
loop
jecxz
add
xchg
jne
das
cld
adc
cld
(bad)
outs
iret
cmps
pop
sbb
mov
(bad)
icebp
lahf
jne
ins
(bad)
push
or
cdq
mov
pop
add
pop
outs
xchg
cmc
dec
fldenv
aad
in
mov
pop
inc
mov
movs
jae
cli
xor
mov
jecxz
mov
cmp
cld
ja
jne
or
jmp
cli
push
sbb
fcmove
mov
aas
cmp
push
cli
dec
arpl
out
dec
mov
(bad)
in
leave
out
sbb
ret
lods
cdq
out
inc
push
push
fimul
pop
pusha
rcl
or
js
xor
enter
or
sub
mov
and
jne
mov
mov
pop
fwait
inc
enter
xor
push
call
retf
push
push
call
sub
cmp
clc
(bad)
loop
repz
mov
jle
xor
imul
sbb
inc
pop
push
aaa
ins
(bad)
inc
xor
xor
iret
icebp
add
loop
outs
(bad)
sub
cld
and
add
mov
aaa
dec
clc
ss
aaa
xor
int
ficomp
(bad)
std
inc
mov
jbe
pop
(bad)
cld
jp
and
jl
aaa
mov
mov
push
dec
call
jnp
add
dec
stc
inc
sub
push
mov
jecxz
ja
ficomp
push
cmp
dec
xchg
jge
or
hlt
(bad)
jmp
pusha
inc
ret
mov
inc
add
in
add
repnz
movs
or
jo
sti
cli
add
ins
sbb
scas
test
dec
call
xor
mov
(bad)
jmp
cmp
pop
push
jmp
sbb
mov
pop
mov
or
mov
mov
das
stos
(bad)
pop
push
mov
push
(bad)
push
xlat
adc
add
xlat
sub
xor
pop
pop
push
mov
mov
lods
shl
lods
sub
mov
adc
bound
jns
cmps
out
and
(bad)
sub
sub
mov
adc
push
test
mov
aas
inc
and
sub
addr16
rcr
xchg
jmp
xchg
dec
sub
js
in
nop
je
sub
xchg
jns
add
outs
bound
sbb
sahf
push
leave
pop
ins
imul
bound
adc
das
ds
xor
arpl
xlat
imul
dec
call
into
lods
retf
pop
sbb
sbb
add
ret
mov
out
stos
push
fadd
mov
mov
sub
jae
call
fcomp
retf
mov
jmp
xchg
push
retf
pop
popf
leave
bound
adc
push
and
adc
mov
jmp
retf
adc
add
cmp
jmp
push
outs
lods
(bad)
push
out
pop
ror
inc
add
cdq
or
loop
mov
adc
xor
adc
pushf
mov
stc
pop
adc
mov
inc
rol
retf
cmp
sbb
out
shl
loope
jg
and
arpl
pop
scas
leave
adc
imul
cmps
sub
mov
cdq
jl
clc
cmp
rcl
xor
out
and
sbb
loopne
inc
clc
shl
adc
pop
or
dec
outs
scas
xor
and
mov
imul
in
pop
ss
loop
sbb
je
mov
or
pushf
add
int
in
call
(bad)
jne
push
xchg
loop
inc
push
cli
add
cmp
xchg
sub
cld
inc
and
cmp
iret
mov
or
cmc
lahf
div
(bad)
sub
retf
shr
push
outs
mov
mov
pop
pop
and
jb
scas
mov
and
ror
fwait
mov
jbe
inc
imul
mov
jno
push
pop
sub
daa
movs
rcl
(bad)
cli
sbb
push
mov
and
data16
hlt
or
sub
push
ficomp
or
addr16
xor
pop
in
sub
stc
stos
loope
or
xor
cmp
adc
push
and
or
push
psubd
mov
dec
(bad)
mov
add
jo
adc
leave
bound
sahf
(bad)
dec
sub
push
push
call
xor
sbb
mov
xor
adc
fiadd
je
and
adc
fnstenv
cmc
mov
int3
add
jno
mov
cld
fstp
scas
cwde
mov
xor
xor
push
ss
cmp
shl
and
lods
and
aad
jecxz
scas
outs
ja
xchg
adc
mov
or
aad
xlat
mov
pop
es
test
xor
fisubr
ror
in
inc
not
cmp
pushf
daa
repz
sbb
mov
pop
pop
sbb
and
cs
cmp
inc
add
hlt
xchg
ret
out
js
cmp
out
pop
aad
int3
jmp
inc
push
push
stos
cs
push
dec
jmp
add
and
movs
aam
jecxz
jmp
push
jmp
add
mov
sub
jb
stos
cs
inc
outs
xchg
daa
xor
mov
mov
aam
test
push
rcr
or
into
pop
cmps
pop
je
mov
in
jne
mov
mov
lock
pop
add
arpl
push
mov
mov
test
scas
sbb
adc
xchg
iret
(bad)
das
mov
pop
push
mov
xor
inc
movs
jmp
sub
fisubr
das
(bad)
neg
in
jbe
jne
imul
xor
adc
or
outs
xchg
addr16
push
mov
es
(bad)
push
test
dec
adc
mov
push
mov
idiv
cmp
push
loopne
mov
or
cmps
mov
mov
inc
out
jle
xchg
sub
mov
cld
std
mov
clc
push
jmp
push
mov
dec
mov
xchg
jno
out
adc
mov
cmp
or
adc
ret
repz
pushf
and
inc
and
not
sub
inc
ds
xchg
xlat
ror
aaa
xchg
hlt
pop
pop
adc
sar
jl
fnsave
stos
data16
test
add
mov
inc
xchg
push
retf
and
xlat
cmp
call
cmp
(bad)
xor
mov
pop
popa
retf
pop
call
sub
sbb
mul
fild
into
ins
in
mov
mov
outs
and
lods
pop
aaa
mov
test
pop
add
and
xor
push
mov
test
pop
xchg
sahf
cs
mov
mov
into
jle
shr
push
mov
cmc
xor
or
xor
movs
pop
iret
inc
cmp
jmp
cmp
adc
xor
sub
xchg
aaa
sbb
cld
add
loop
dec
std
pop
sub
(bad)
or
(bad)
mov
cmp
outs
daa
pop
lods
xor
jb
and
rol
jbe
sbb
rcl
push
inc
lahf
adc
jnp
call
push
aam
daa
fcom
dec
mov
je
dec
sub
mov
out
icebp
push
in
mov
aam
adc
pop
sub
dec
add
aam
push
sbb
and
dec
pop
cmp
arpl
mov
rcr
pop
outs
imul
dec
fld
nop
push
adc
jmp
rcr
cmp
jmp
xchg
push
in
cmp
rol
je
je
sti
je
mov
mov
lods
loop
nop
scas
out
sahf
stos
sbb
sub
dec
jae
bound
out
cmp
imul
stos
cmp
xchg
and
adc
add
cmps
push
loopne
pusha
fwait
sub
cmc
addr16
mov
jb
dec
out
jae
dec
mov
mov
lock
pop
out
imul
add
adc
mov
sbb
in
fucomip
je
mov
pop
xchg
fucom
popf
movs
jmp
cmp
aaa
inc
out
out
scas
mov
fimul
pop
push
xor
loope
test
pop
cld
cmp
sahf
movs
in
inc
mov
test
push
pusha
mov
sub
les
xor
data16
es
jae
aas
mov
add
stos
fs
stc
jmp
fistp
test
mov
xlat
mov
dec
xor
mov
pop
mov
inc
lock
(bad)
sub
jbe
mov
aad
push
xchg
mov
pop
sbb
add
push
mov
mov
idiv
jmp
inc
lahf
loop
or
inc
jg
pop
jecxz
fmul
ins
int
adc
mov
cs
lds
test
sub
inc
adc
lahf
scas
mov
ins
sbb
into
and
adc
jg
sahf
shl
arpl
dec
repz
dec
xchg
and
mov
aad
aad
push
das
clc
cwde
in
in
movs
inc
(bad)
xor
ret
pop
mov
sub
out
mov
ror
cmp
aam
push
push
mov
pop
or
inc
push
loopne
xchg
fidivr
and
push
fadd
enter
shl
add
mov
data16
(bad)
scas
dec
adc
jp
psraw
ds
and
test
in
mov
in
sub
jge
mov
std
out
or
gs
in
stos
mov
xchg
push
stos
(bad)
imul
inc
and
inc
sti
shl
push
mov
cmp
mov
cmps
jno
fist
and
and
and
cli
std
fabs
or
pop
adc
xor
(bad)
les
push
xchg
pop
xor
pop
rcl
out
adc
mov
mov
iret
xchg
stos
inc
mov
loope
jbe
pusha
add
add
adc
sar
inc
mov
mov
xor
push
cmp
jmp
xor
call
push
fwait
xchg
xor
ret
scas
inc
fmul
push
fisub
jns
push
mov
adc
or
jmp
or
stos
cmp
mov
dec
rcl
jnp
sub
sub
clc
mov
inc
sbb
cmp
or
int
hlt
push
cmp
stos
lea
sub
adc
mov
add
cli
mov
adc
or
shl
bound
inc
bound
push
test
mov
std
mov
pop
popf
sbb
call
inc
dec
pop
retf
daa
add
or
aam
vpmullw
pop
je
daa
idiv
xchg
pop
aam
pop
outs
mov
daa
(bad)
pause
hlt
pop
daa
mov
int
sar
mov
in
cmp
jl
(bad)
mov
add
fild
rcl
das
jl
retf
aas
add
popa
retf
or
adc
dec
sbb
cwde
adc
add
lods
adc
das
sti
bound
pop
and
fidivr
popf
loope
sbb
cmps
fucomp
test
xchg
xor
jno
xchg
dec
adc
out
dec
dec
xlat
jge
les
mov
mov
mov
add
jp
loop
sbb
adc
xor
cmps
fs
iret
jns
repnz
(bad)
fist
push
cmp
stos
push
pop
dec
or
or
aad
and
rcr
popa
xchg
ins
sahf
addr16
fimul
pop
cmp
xor
int3
pop
aam
cmps
push
in
add
inc
push
jg
add
push
scas
push
or
pop
fbstp
lods
xchg
lfs
fpatan
push
pop
pop
pushf
or
call
xchg
stos
movs
(bad)
inc
cmp
push
or
jo
mov
aam
ins
data16
neg
bound
fsubr
push
scas
jl
cmps
pop
sbb
sub
jmp
(bad)
jne
mov
mov
cmp
push
lea
jbe
inc
lods
mov
fist
push
imul
pusha
test
test
aaa
mov
in
or
imul
cdq
jle
ss
mov
ins
pushf
stc
pusha
outs
jb
(bad)
out
out
push
xchg
cli
cs
nop
sbb
nop
not
push
ss
sub
aam
mov
xlat
push
push
xor
cs
popa
test
(bad)
push
retf
push
jnp
jg
pop
xchg
ins
jp
mov
dec
jmp
mov
lea
ret
stos
push
jmp
push
pop
lods
lods
loop
and
xchg
and
mov
imul
add
gs
aas
cdq
xchg
jo
add
data16
stos
mov
cmps
imul
cmp
xchg
and
xor
out
loope
and
in
add
mov
cmps
adc
les
test
lods
push
xchg
xchg
pop
aas
or
mov
xor
cmp
mov
dec
aaa
es
dec
xchg
in
rcl
cmp
jmp
stc
rcr
popa
adc
xor
push
sbb
sub
jae
xchg
cmp
cmps
test
add
cmps
adc
mov
sbb
cmp
in
es
(bad)
sti
mov
or
or
pusha
add
into
jne
fs
aad
pop
mov
push
retf
pop
inc
sub
cmp
nop
mov
lods
xor
add
shl
add
iret
push
lods
mov
rcl
mov
inc
retf
scas
cli
add
cmp
lahf
cwde
or
jbe
int3
hlt
dec
std
mov
retf
call
cmp
sub
loopne
outs
leave
adc
mov
ds
in
and
sti
push
mov
movs
rcr
mov
popa
push
js
jmp
inc
ja
cs
inc
hlt
fs
rol
hlt
ss
stos
aam
mov
xchg
addr16
push
jmp
or
loopne
cmps
cmp
mov
xchg
push
jmp
jne
xchg
dec
sub
pop
je
mov
sbb
push
or
imul
jnp
push
fstp
dec
dec
aaa
mov
inc
push
pop
add
sub
(bad)
ror
pop
adc
jmp
jmp
cwde
mov
int
jne
retf
jle
out
mov
or
nop
rol
xchg
and
jae
xor
jmp
cmp
sar
lahf
push
add
cmc
sub
jb
pop
test
mov
enter
lock
xor
in
mov
dec
xor
repz
fwait
das
mov
or
popa
or
rol
xlat
mov
outs
jmp
add
adc
xor
sub
loopne
out
sub
cmc
inc
mov
xor
and
out
jg
es
adc
jno
mov
pop
xchg
mov
fcomp
sub
xchg
sbb
fnsave
cwde
rcr
adc
movs
pop
push
lds
scas
xchg
ins
lods
sbb
add
push
mov
xchg
das
mov
ds
or
das
push
test
gs
cmp
adc
pop
sub
(bad)
sbb
cld
mov
pop
pop
dec
pusha
pop
or
mov
jl
test
push
or
repz
(bad)
fdivr
cmp
in
cwde
adc
fadd
xchg
test
jg
push
ret
int
popf
sbb
test
lahf
pop
repnz
mov
ja
dec
jne
fld
adc
shr
mov
pusha
jmp
loope
aad
mov
sub
push
or
push
call
pop
jp
add
cmps
mov
(bad)
cmps
sub
mov
cmps
pusha
or
aas
sub
inc
repnz
push
pop
sbb
into
out
pop
add
xchg
and
cmps
sub
mov
jmp
cmps
cmp
dec
jbe
cmp
add
mov
cwde
xchg
shl
shl
fnsave
inc
lods
enter
add
icebp
mov
xor
fcomp
xor
mov
das
in
sti
(bad)
add
push
ja
call
xchg
sti
cmp
adc
jle
xchg
and
push
xchg
xor
mov
dec
cld
dec
and
lahf
add
jecxz
mov
fcom
fmul
mov
out
xchg
imul
xchg
mov
and
nop
sub
pop
ror
or
js
lahf
xor
aad
lds
xor
lea
pop
or
sbb
inc
sti
mov
ficom
mov
mov
or
test
int
(bad)
dec
loopne
cld
fstp
popf
retf
sahf
sbb
ror
fadd
test
or
sub
mov
out
movs
(bad)
pop
rcr
pop
and
ja
iret
xor
lds
add
sub
hlt
mov
movs
push
add
sbb
stc
cmp
push
pop
mov
arpl
inc
dec
retf
adc
dec
mov
repz
and
scas
(bad)
fwait
and
or
pop
call
jae
mov
push
std
xchg
push
(bad)
mov
fst
pop
or
dec
xchg
jl
inc
stc
mov
out
call
mov
jnp
dec
loope
lahf
inc
adc
cmp
fdiv
mov
ficomp
(bad)
(bad)
sub
cmp
enter
in
ins
aas
int3
dec
mov
mov
mov
hlt
jmp
int
jmp
push
mov
mov
mov
push
jmp
pop
stos
fdiv
and
das
jns
xchg
shr
dec
pop
and
inc
std
cmp
sub
cmc
cdq
hlt
xor
mov
mov
mov
test
lahf
bound
or
ret
jne
xchg
inc
in
mov
jecxz
mov
int3
pop
mov
gs
pop
lahf
daa
push
and
dec
or
add
in
scas
mov
daa
pusha
sub
or
int
jo
icebp
cmp
fild
xchg
in
push
stos
es
push
dec
or
stos
gs
sub
sub
mov
(bad)
into
cs
stos
fwait
mov
clc
std
loope
sbb
add
out
enter
loop
inc
bound
fs
(bad)
loope
sub
scas
and
and
jmp
retf
xchg
push
sbb
sub
stc
loop
inc
jbe
pushf
mov
movs
enter
mov
mov
daa
(bad)
test
lods
jmp
popa
mov
lock
cmp
ffreep
dec
cmp
jecxz
add
xchg
dec
dec
jo
frstor
in
aaa
sbb
dec
jge
stos
adc
jl
test
sbb
xor
adc
push
test
scas
mov
lahf
jo
cld
jns
xor
cld
stos
ret
push
jl
psubd
adc
jne
mov
sti
popa
dec
outs
push
dec
in
dec
sub
sbb
pop
sbb
fucomp
xchg
push
or
mov
dec
push
pop
push
jno
inc
push
pop
retf
mov
inc
stc
unpckhps
movs
sahf
fwait
dec
dec
in
fcom
jl
push
push
fdiv
ins
out
inc
xchg
aad
mov
ins
jge
inc
cmp
arpl
scas
fld
into
test
mov
mov
loope
cmp
out
shl
test
inc
xchg
stos
push
sbb
mov
mov
cmp
and
adc
mov
add
mov
mov
dec
push
loopne
and
ds
push
ret
xor
pushf
and
jnp
jmp
jle
(bad)
sahf
aad
test
xor
(bad)
ins
inc
sub
test
inc
xor
mov
int
inc
push
mov
int3
xor
jne
loopne
ror
add
fistp
mov
mov
fisttp
repz
cwde
js
jmp
mov
ds
pop
cmps
jmp
push
fsub
sar
retf
mov
aaa
pop
ffreep
clc
call
rol
xor
mov
inc
(bad)
xor
mov
shr
bound
lods
stos
retw
or
pop
dec
cmps
bound
(bad)
cs
mov
sti
and
pop
lock
ins
out
imul
gs
fwait
out
pop
cs
cld
outs
pop
sbb
popf
jae
pop
call
stos
pusha
in
imul
sbb
in
or
sub
out
push
xchg
lock
sar
push
jo
cmps
xchg
xchg
push
inc
rcl
inc
xchg
xchg
rcr
inc
addr16
ss
dec
out
rcl
ja
out
std
sbb
addr16
mov
push
adc
xor
call
in
out
mov
sub
push
jae
cmps
aas
mov
or
in
jae
les
fucomi
pusha
imul
pop
push
fs
fwait
and
je
push
test
cmovo
and
xchg
mov
xchg
ror
cld
stos
jecxz
neg
mov
rol
dec
fistp
push
push
dec
xlat
inc
fstp
mov
jmp
fdivr
push
inc
call
push
mov
add
xor
dec
sub
aas
inc
mov
aaa
iret
dec
push
sub
arpl
add
fsubr
mov
push
retf
push
sub
mov
pop
mov
cmc
or
mov
iret
pop
dec
call
mov
xor
lahf
pop
loopne
push
ret
(bad)
push
repnz
movs
das
test
push
xor
sahf
xor
std
sbb
rol
ja
mov
mov
movs
scas
imul
xchg
jb
stos
repz
inc
inc
movs
jne
inc
pop
cmp
jb
out
add
inc
cmps
mov
and
test
cld
or
cmp
fstp
cmp
call
inc
addr16
mov
sub
hlt
adc
out
jns
je
sub
jg
jmp
jae
inc
jp
retf
js
in
dec
movhps
out
sti
add
(bad)
in
cmc
test
clc
(bad)
popf
lea
imul
in
cld
pop
push
clc
add
sub
int3
jo
mov
sahf
shr
adc
call
add
pop
cmps
push
out
mov
data16
je
pop
fstp
cmp
popf
icebp
(bad)
fld
mov
stos
ret
sbb
adc
js
pusha
pop
push
xchg
stos
inc
adc
hlt
ret
xchg
sbb
jo
dec
add
sar
sbb
add
push
leave
sub
xor
aam
cmp
mov
mov
cmps
mov
stc
fcomp
add
jae
mov
sub
dec
movs
add
cdq
dec
frstor
pop
push
adc
xchg
popf
and
cmp
or
xchg
repnz
test
dec
scas
nop
jo
dec
fldcw
dec
cld
stc
jo
push
gs
and
shl
jecxz
test
sbb
push
jmp
fldenv
push
(bad)
int
jmp
cmp
hlt
cmp
xlat
fdiv
pushf
icebp
daa
dec
mov
mov
mov
pop
inc
pop
xchg
add
int
or
in
mov
pop
mov
pop
adc
mov
jne
jnp
(bad)
push
jns
cs
ins
fstp
xor
dec
and
lods
mov
sahf
adc
cmp
jae
sub
xor
cmps
mov
ret
push
mov
ret
sub
add
jns
xor
sar
pusha
xor
jle
and
cmp
test
lods
mov
sub
xchg
sbb
mov
sub
cmp
push
ret
mov
(bad)
div
adc
ret
fadd
in
jl
iret
xor
outs
(bad)
jle
xchg
mov
fcmovnbe
cs
mov
(bad)
aas
push
fwait
cmp
inc
call
ins
xchg
xchg
test
jmp
clc
data16
dec
test
nop
ffree
xchg
push
dec
mov
mov
scas
test
icebp
and
call
sbb
dec
mov
push
mov
pusha
adc
dec
sub
(bad)
jmp
mov
popa
mov
xchg
fadd
jl
xchg
stc
xchg
cmp
pop
dec
fldcw
cmp
sbb
into
cmps
push
inc
jno
aad
inc
movs
mov
add
mov
sub
mov
xor
imul
xlat
out
nop
icebp
push
xchg
fdiv
cs
bound
retf
(bad)
cli
mov
jae
fisttp
into
retf
mov
inc
lds
inc
ins
sub
and
and
call
jae
fs
ins
mov
inc
in
mov
jp
xor
fst
dec
inc
or
sub
fild
cld
outs
or
sbb
mov
hlt
fisubr
movs
pop
mov
xchg
cmps
pop
lods
inc
sub
test
pop
pusha
push
dec
mov
mov
outs
bound
test
retf
and
in
fdiv
mov
sahf
test
push
sub
fsubr
fstp
(bad)
pop
test
aaa
inc
mov
mov
fadd
popa
pop
cs
imul
cs
inc
mov
arpl
repz
retf
sub
pop
sbb
or
call
int
into
and
js
adc
sbb
inc
inc
xchg
mov
jecxz
jmp
sahf
loope
mov
inc
pop
ret
mov
in
mov
jecxz
in
nop
adc
jg
or
ror
pop
std
shr
push
push
cs
std
call
pop
xor
js
fimul
add
jo
loop
stos
and
and
add
mov
rcl
xchg
pop
pop
neg
jmp
xchg
(bad)
cmp
push
loopne
add
cmp
or
imul
rol
mov
(bad)
cmps
jmp
scas
mov
jne
and
sbb
bound
xor
in
cmp
or
stos
test
mov
lock
jmp
or
pusha
out
ins
shl
repz
push
pop
cmps
xchg
scas
scas
aas
clc
push
xor
iret
daa
aaa
or
fisub
int3
jns
sbb
sahf
fs
(bad)
cmp
jg
lods
lods
int3
leave
jne
fmul
sub
stos
xchg
adc
and
pop
imul
or
jp
jae
stos
adc
cmp
cli
iret
and
shl
fisub
imul
or
inc
aam
jg
jp
sub
sbb
ja
sbb
dec
xchg
ret
mov
fcom
jecxz
adc
mov
stos
inc
jg
imul
hlt
aad
inc
cmp
mov
leave
or
sub
sti
push
push
fdiv
mov
push
cmp
gs
sub
daa
pop
retf
cld
leave
ins
ss
xor
loopne
jns
mov
push
inc
ins
push
fwait
pop
test
inc
xor
stos
xchg
dec
jns
xchg
imul
mov
pop
(bad)
int
cld
push
ds
inc
cld
add
sbb
xor
sub
add
outs
xor
scas
push
jmp
add
fs
movs
cmp
inc
out
mov
ss
sbb
inc
xchg
ror
jbe
mov
mov
jbe
fisttp
add
push
into
std
cld
test
fsubr
(bad)
in
and
mov
fsubr
push
aaa
loope
(bad)
and
in
aam
scas
xchg
xor
call
add
leave
lahf
lds
inc
pop
pop
mov
mov
and
mov
icebp
cli
cmps
mul
imul
adc
rol
dec
aam
mov
pop
bound
retf
dec
in
imul
mov
fcomp
inc
jp
lock
lods
(bad)
mov
(bad)
xor
push
push
inc
adc
aas
test
mov
dec
enter
and
push
movs
popa
ja
shl
inc
(bad)
xor
push
aaa
dec
dec
xor
imul
mov
sub
mov
or
dec
cmp
cdq
outs
inc
(bad)
loopne
mov
bnd
xchg
inc
mov
leave
call
pop
(bad)
jl
jecxz
pushf
push
pop
(bad)
std
add
je
and
sub
xchg
push
sbb
shr
cmp
add
ret
jae
mov
cdq
fmul
cmc
mov
leave
test
xchg
rcl
icebp
ins
aam
out
dec
cli
inc
xchg
cmc
push
int
add
shr
leave
or
cmp
out
mov
mov
xchg
xchg
mov
bound
add
jae
fwait
loop
jge
jae
stos
stos
add
adc
push
jno
mov
cmp
ins
sub
add
mov
cmp
(bad)
or
pop
inc
loope
cmps
movs
push
div
jno
fcompp
test
mov
(bad)
test
mov
jbe
pop
aam
sub
js
mov
xchg
sbb
mov
pop
sbb
je
shl
jmp
call
xor
mov
xor
mov
rcr
pop
xchg
jmp
sub
adc
mov
aad
sahf
stos
pop
in
cmp
movs
push
inc
cmp
push
inc
sub
and
push
sbb
es
ds
sub
inc
gs
mov
dec
cwde
mov
stos
aam
mov
add
mov
out
call
mov
popa
push
(bad)
mov
mov
sbb
pop
dec
add
pop
inc
je
out
sti
ja
xlat
xchg
and
stc
loope
test
add
add
hlt
sbb
sbb
das
pop
pop
cmps
ins
mov
and
jno
rcr
cmp
jge
and
pushf
test
mov
xor
mov
mov
cmp
bswap
jl
mov
test
data16
and
ja
sti
push
les
les
and
ret
scas
xor
rcr
sbb
(bad)
adc
bswap
out
or
and
mov
mov
inc
rol
das
mov
xor
lods
ins
pop
out
add
test
mov
jo
jg
dec
adc
cmps
pop
cli
jo
sbb
dec
mov
ret
sub
inc
cmps
retf
dec
cmc
ret
mov
push
xor
mov
mov
out
inc
mov
jle
bound
(bad)
xchg
fucom
adc
xchg
xor
stos
je
in
(bad)
das
pop
into
cli
call
(bad)
sub
mov
jmp
mov
out
js
fwait
repnz
enter
jae
into
cli
shl
mov
pop
sub
out
jno
mov
retf
pop
stos
js
aad
test
xor
jge
lahf
iret
in
call
ret
xchg
scas
retf
dec
ins
add
ret
clc
in
jns
(bad)
mov
sub
pop
inc
mov
mov
or
popa
cmps
mov
sbb
dec
rcr
out
cmc
push
lahf
stos
lods
xchg
dec
aas
pop
dec
jne
xchg
and
(bad)
mov
ret
push
jecxz
dec
or
cmp
and
sub
push
or
in
or
inc
push
out
xchg
jne
push
imul
(bad)
add
adc
js
add
pop
sub
sub
push
std
je
and
les
mov
rol
popa
stos
cmp
adc
neg
addr16
cmp
in
pop
push
adc
ins
mov
inc
cwde
shl
add
cdq
xchg
xchg
pop
cmps
test
dec
and
es
mov
neg
bound
loopne
mov
pusha
sub
dec
push
nop
pop
and
cli
mov
dec
test
popa
xchg
call
ds
jbe
(bad)
popf
bound
outs
popf
test
mov
test
adc
into
xor
mov
out
pop
lds
or
lock
in
cmps
retf
or
or
mov
or
sbb
stos
fdivr
cmp
(bad)
xchg
ja
es
(bad)
shl
leave
(bad)
jnp
repnz
cmp
icebp
aam
mov
imul
push
or
jae
pop
cmps
jle
pop
aas
loop
or
and
pop
jbe
pop
mov
mov
call
sbb
xchg
xchg
popa
or
mov
jns
dec
daa
mov
(bad)
jecxz
or
jns
mov
lds
jmp
push
jmp
not
mov
out
jecxz
jnp
mov
clc
push
sub
fdivr
in
adc
fdivr
add
pop
mov
sbb
lahf
aam
icebp
mov
jg
jbe
pop
fbstp
into
mov
hlt
test
sar
pop
out
and
dec
or
add
test
mov
gs
xor
jno
fldenv
in
mov
jl
lahf
jb
leave
ss
push
sbb
add
movs
push
xor
mov
jge
xlat
push
xlat
mov
aad
icebp
adc
sub
lods
test
mov
inc
jns
xchg
mov
push
cld
aas
sbb
inc
mov
xchg
and
outs
fld
inc
addr16
cmp
push
arpl
lods
shl
(bad)
xchg
fsubr
je
iret
clc
test
jge
sub
xchg
loopne
jecxz
jg
bound
out
or
dec
inc
ins
mov
je
bound
dec
dec
loop
inc
sahf
call
daa
and
sub
mov
push
push
xchg
enter
scas
sbb
push
ds
outs
jbe
xchg
push
test
dec
pop
aad
data16
out
push
adc
fcomp
pop
jb
mov
mov
jp
imul
xor
je
push
dec
jmp
and
sub
mov
cwde
loope
movs
xchg
pop
in
mov
retf
outs
dec
xchg
cmp
adc
outs
scas
mov
outs
mov
xor
dec
fiadd
retf
sub
icebp
mov
bound
shr
sbb
aas
pop
gs
jbe
out
enter
cmp
mov
or
bound
push
jmp
cmp
mov
sbb
jp
movs
pop
nop
jge
mov
rol
jb
push
(bad)
popf
dec
push
mov
sbb
xchg
imul
(bad)
jg
xor
and
push
add
popa
jmp
mov
test
mov
cmp
jns
xor
aam
icebp
jle
inc
iret
scas
pop
(bad)
in
mov
rcl
imul
sub
sbb
clc
add
arpl
aas
rol
push
sub
mov
nop
jb
out
popf
ds
lds
retf
in
(bad)
imul
aas
imul
dec
int
gs
pop
(bad)
pop
cmps
loope
dec
(bad)
mov
sbb
mov
inc
pop
jb
pop
cwde
add
inc
push
pop
loope
xchg
xchg
push
xlat
xor
sahf
movs
mov
push
repnz
test
fadd
stos
aaa
xchg
sub
mov
into
jno
jge
int
jge
test
idiv
cmp
and
dec
or
xchg
(bad)
mov
push
jg
jmp
add
pop
and
adc
dec
dec
shr
jp
dec
outs
xchg
shr
clc
sbb
cli
enter
cdq
movntq
sbb
cmp
jl
scas
sub
lahf
mov
pusha
movs
jge
dec
or
gs
mov
or
gs
mov
adc
mov
jno
pop
adc
jns
xor
push
xor
aaa
js
pop
jl
ins
gs
xor
dec
jle
push
inc
rcr
cmp
or
ret
dec
jmp
xchg
movs
push
sar
nop
mov
mov
xlat
(bad)
imul
add
jmp
das
arpl
aas
ret
lods
adc
aam
sbb
jns
lods
inc
dec
push
cmp
jg
and
dec
arpl
and
(bad)
stos
rol
inc
call
stos
cld
dec
outs
mov
mov
sub
push
cmps
inc
ja
and
idiv
sbb
movs
leave
sub
pop
jbe
sti
test
mul
xchg
sbb
cmp
ins
inc
jl
ja
xor
jns
cmp
add
push
icebp
mov
data16
rcl
sub
(bad)
ror
call
jb
stos
in
push
int
imul
xchg
mov
cwde
out
mov
jns
jnp
jle
cmp
lock
arpl
std
push
push
add
dec
mov
pop
and
or
jae
dec
sbb
inc
sbb
mov
mov
out
mov
sbb
push
pop
sbb
aas
pop
sub
mov
sti
push
and
push
and
imul
ficom
adc
mov
jl
data16
jmp
push
push
fwait
popa
pop
dec
inc
cmp
push
lds
movs
fist
aam
push
int3
jb
imul
(bad)
daa
push
xor
sti
cmp
push
xchg
pop
pop
dec
test
mov
adc
stos
xor
int
(bad)
sbb
push
sub
push
popa
pop
jecxz
std
stos
pop
aas
xchg
cmp
jp
(bad)
retf
loope
(bad)
mov
push
nop
jno
iret
scas
push
ret
xor
enter
fdiv
ss
dec
sub
xchg
adc
mov
lods
pop
cmps
(bad)
jl
fidivr
mov
shr
and
push
ins
dec
and
cld
inc
push
stc
(bad)
xchg
fsubr
inc
xor
xchg
cmps
adc
outs
jae
ds
mov
loope
xchg
out
adc
add
lea
jmp
cmp
imul
jb
stos
imul
mov
xchg
push
cmp
aam
sbb
popf
inc
loop
xor
loop
mov
sbb
ins
leave
repnz
xor
imul
adc
jmp
push
sahf
mov
mov
sbb
mov
push
shl
jmp
pop
xchg
jle
stos
mov
jmp
cmp
push
xchg
in
ins
movs
mov
or
in
ror
retf
xchg
arpl
or
movs
std
xlat
or
arpl
cmc
xchg
loope
imul
pushf
lds
test
cli
xlat
mov
ror
mov
data16
movs
test
jbe
mov
icebp
dec
mov
inc
cmp
push
sbb
add
movs
jecxz
in
ret
out
ss
daa
pop
sar
pop
enter
test
mov
enter
jae
movs
add
mov
shl
mov
shr
mov
out
and
push
xchg
cdq
cmps
xchg
movs
jge
mov
mov
sbb
sti
mov
sahf
mov
retf
ficom
sti
retf
scas
jbe
stc
ret
jg
daa
in
into
or
jg
dec
xor
(bad)
push
xchg
and
push
mov
and
std
pop
jns
out
js
mov
pop
jp
sbb
xor
dec
pop
es
cmps
fild
mov
test
sub
mov
xor
xchg
or
lods
frstor
fcmovnb
dec
cmp
lahf
mov
bound
sbb
fs
loop
iret
daa
and
dec
adc
sub
popa
mov
xchg
jl
push
cmp
aad
test
mov
push
ret
fcomp
int3
mov
or
aaa
push
iret
xchg
xor
or
xchg
lock
cmps
call
xor
stos
fisttp
mov
xchg
out
adc
or
in
pop
dec
bound
pop
aas
xchg
xchg
mov
adc
xchg
aad
or
jo
js
push
repnz
or
and
adc
cld
or
mov
int3
jge
enter
xchg
scas
in
(bad)
test
pop
jno
dec
push
aam
push
or
jg
mov
jmp
jno
daa
cld
mov
xor
addr16
inc
stos
movs
dec
xchg
ins
add
inc
pop
clc
out
popf
sbb
and
and
in
xor
(bad)
out
dec
jmp
enter
or
jae
cmps
inc
mov
sbb
xchg
inc
retf
mov
test
fsub
add
xor
int3
pop
retf
fucompp
mov
into
pop
pop
std
mov
stos
and
out
and
jno
shl
pop
and
aam
cmps
scas
test
cmps
imul
inc
push
jp
je
push
adc
ins
cmp
(bad)
shl
pop
jb
mov
pushf
dec
sub
iret
loopne
(bad)
xchg
add
xlat
movs
push
(bad)
arpl
dec
sbb
sbb
nop
sbb
inc
push
mov
cmp
shr
sub
sbb
(bad)
imul
fs
icebp
mov
cld
cdq
xor
mov
dec
and
into
add
adc
inc
enter
retf
test
pushf
adc
ds
dec
pop
enter
add
stos
movs
sub
inc
sbb
fs
gs
iret
(bad)
icebp
xor
clc
push
cmp
clc
jnp
jmp
(bad)
jp
fsub
stos
data16
mov
sti
cmp
pop
(bad)
(bad)
sbb
(bad)
fdivr
inc
add
shr
cwde
scas
xor
std
mov
in
test
iret
add
sbb
cmp
mov
sub
mov
adc
int
and
scas
ja
lds
add
mov
xchg
inc
mov
sahf
dec
or
jbe
loope
imul
xor
xchg
in
gs
mov
mov
sub
mov
std
sar
(bad)
fbld
mov
pusha
inc
mov
sbb
or
sub
dec
push
sbb
add
gs
push
test
adc
cs
les
imul
add
lahf
(bad)
gs
dec
pusha
mov
push
sub
test
test
add
test
or
jmp
jmp
or
outs
xor
mov
mov
pop
addr16
jo
popa
push
loopne
and
cmps
imul
in
sbb
xor
mov
xchg
xchg
out
fsubr
jnp
rcl
cvttps2pi
jo
push
dec
sbb
xchg
mov
in
mov
xchg
out
inc
push
push
mov
mov
push
xor
jg
xor
add
call
add
lds
or
enter
div
imul
jns
and
pop
stc
sbb
popf
mov
or
sub
jmp
inc
mov
mov
adc
push
mov
retf
cwde
cmp
pop
je
xor
shl
inc
mov
bound
mov
push
(bad)
enter
movs
test
jecxz
cwde
xor
xor
sub
mov
lds
push
adc
sub
cmp
xchg
inc
sbb
mov
ja
lock
jne
xchg
adc
out
add
push
mov
sub
retf
inc
(bad)
leave
je
int
iret
lock
popf
in
push
lods
es
es
fstp
out
inc
cmp
call
imul
mov
or
mov
addr16
fdivrp
pop
fistp
mov
test
fwait
lods
mov
and
lea
lods
into
or
rol
dec
and
inc
scas
pushf
push
sbb
stc
xchg
jmp
inc
cmp
sub
cmp
push
xlat
xchg
and
aad
add
add
xchg
aam
cld
lock
xchg
sbb
pop
xchg
test
hlt
js
sti
xchg
retf
mov
scas
adc
sbb
mov
mov
ficom
pop
lods
inc
sbb
cld
ret
sbb
mov
cmp
xor
sub
jle
ret
push
data16
aam
inc
jp
dec
mov
or
(bad)
mov
add
cs
adc
hlt
push
repnz
scas
test
mov
dec
xchg
bound
sub
sub
outs
int
mov
xchg
stc
xchg
ds
pop
mov
pop
mov
gs
in
mov
or
(bad)
clc
mov
(bad)
push
mov
mov
lods
shl
not
mov
or
mov
sbb
popa
mov
inc
lahf
fst
and
jp
sbb
leave
call
jle
ins
(bad)
push
jecxz
cmp
adc
push
dec
jg
xlat
mov
lock
sbb
(bad)
sbb
pop
clc
push
ffree
popa
jns
and
movs
jne
and
sbb
sub
std
cmp
sbb
cli
je
pop
inc
jle
mov
sub
popf
jp
mov
jle
(bad)
std
cmp
or
fs
jne
aaa
mov
pop
adc
jmp
mov
mov
lock
rcr
jl
mov
retf
aad
pop
mov
ins
push
ins
sbb
fistp
outs
push
int3
int
or
punpckhdq
xor
cdq
pop
mov
fcom
mov
clc
scas
mov
xchg
sbb
sbb
mov
es
stc
les
es
xor
mov
sbb
xor
or
add
cld
cmps
daa
stc
pop
sub
ja
popa
popa
shl
push
call
leave
(bad)
pusha
imul
cmp
xchg
and
adc
mov
dec
and
add
cmp
inc
mov
or
pop
mov
pusha
js
fwait
retf
xor
sub
das
inc
push
or
or
out
out
(bad)
popa
outs
pop
inc
mov
retf
shr
lods
lock
hlt
call
fisttp
test
cmps
xchg
adc
push
mov
(bad)
xor
lea
inc
test
daa
jae
mov
int3
inc
dec
pop
and
and
ss
imul
adc
fsub
cmp
nop
cdq
xchg
lahf
mul
outs
push
mov
repnz
imul
stos
fwait
aam
out
sbb
movs
jmp
add
imul
out
jmp
fnstcw
ffree
and
into
pop
mov
cmp
xor
xor
jp
int3
fwait
ja
and
stos
dec
test
test
ins
retf
out
sbb
cmp
nop
daa
dec
(bad)
iret
cld
jmp
into
sub
ja
mov
aaa
shl
clc
cs
push
lods
mov
xchg
dec
ret
sub
fst
shl
and
or
pop
mov
dec
rep
pop
daa
adc
adc
mov
adc
f2xm1
push
sar
cmp
dec
das
icebp
call
mov
retf
fs
lods
mov
gs
call
int
adc
cmp
stc
stos
mov
cmp
bound
cmp
not
mov
adc
jle
jnp
push
mov
ja
mov
sub
dec
les
(bad)
scas
cmp
push
mov
cmp
xor
or
out
mov
popf
adc
cmp
dec
xchg
call
lock
int
test
pop
or
lods
shr
bound
and
mov
mov
enter
int
int3
jle
fwait
rcr
lods
out
pop
fisub
pop
shl
jl
push
lods
aaa
pop
js
cmp
dec
test
test
repnz
aam
xchg
mov
outs
jb
test
cmc
call
cmc
xor
jnp
mov
ret
cmp
(bad)
out
xchg
out
add
sbb
arpl
xchg
(bad)
sar
xor
cwde
pop
(bad)
jg
fimul
(bad)
mov
mov
in
pop
fild
lods
out
popa
mov
cmps
(bad)
nop
(bad)
inc
mov
(bad)
aam
cmp
fwait
xor
call
mul
leave
fs
pop
mov
fadd
mov
retf
mov
jmp
jb
or
or
adc
mov
cmp
jne
aas
int3
call
xor
adc
xchg
ret
add
(bad)
sub
(bad)
jmp
push
xchg
adc
xchg
ficom
popa
inc
add
xor
imul
push
cld
mov
mov
dec
gs
sbb
jbe
loope
iret
push
sub
lods
mov
push
test
dec
bound
cmp
inc
retf
xchg
ins
loop
xchg
or
xchg
mov
in
rol
or
mov
cld
xchg
jo
xor
in
push
mov
in
js
adc
pop
cmp
stc
neg
xchg
gs
xchg
pusha
jl
fcom
(bad)
cld
repz
xchg
mov
mov
pop
shl
jnp
pop
retf
push
std
sub
in
das
xor
nop
jge
stc
push
in
daa
xchg
inc
jl
arpl
mov
lea
popa
hlt
pop
imul
loopne
daa
pop
inc
call
inc
cli
icebp
dec
cmps
cmp
dec
lods
mov
dec
xor
cmp
inc
xor
mov
mov
repnz
and
int
in
adc
ins
aas
(bad)
mov
xor
inc
fiadd
clc
sar
cmps
cmp
mov
call
scas
push
call
or
cmc
call
sbb
mov
jmp
fwait
push
dec
adc
mov
mov
enter
sbb
cmp
sub
mov
dec
cwde
dec
inc
cdq
es
repnz
fldenv
mov
add
lods
sar
nop
movs
mov
dec
cmp
sub
sub
or
arpl
jne
adc
shl
cmp
lods
inc
push
fstp
inc
pop
imul
xchg
cld
loop
daa
stos
xchg
pop
jns
push
or
pop
dec
aad
test
ret
mov
mov
pusha
mov
loope
mov
adc
or
jo
fbld
mov
or
sbb
jl
jbe
les
inc
jbe
cmps
cmc
ins
pop
int3
sub
fwait
ins
aas
jbe
adc
pushf
ret
sar
leave
repnz
push
sub
scas
inc
es
(bad)
pop
fcmovne
xabort
lods
fimul
arpl
mov
in
add
add
mov
cs
inc
push
mov
in
and
xchg
sar
inc
call
and
jbe
mov
aaa
and
add
int
inc
push
into
lock
cmps
jecxz
push
mov
fbld
mov
ror
inc
test
adc
jg
lock
cmp
(bad)
jmp
or
adc
add
fsubr
mov
add
push
dec
pop
mov
sbb
sub
inc
pop
cdq
mov
div
push
adc
xchg
mov
or
sbb
loop
or
and
mov
sub
adc
imul
adc
pushf
shl
out
imul
test
fstp
sub
add
dec
rol
adc
inc
repz
stos
sbb
sub
adc
add
cli
test
xchg
mov
aad
das
into
mov
mov
mov
ror
mov
test
push
xchg
outs
lahf
inc
jge
mov
and
mov
in
les
je
in
cmps
xchg
sub
or
mov
sbb
inc
or
mov
push
in
add
sub
push
pop
nop
in
and
push
repz
fld
imul
xor
add
icebp
lds
shl
inc
bound
adc
les
xor
cmp
shl
in
xor
jecxz
daa
push
rol
xor
stos
adc
mov
das
add
or
bnd
in
iret
mov
jo
cmc
out
push
mov
stos
movs
sub
call
call
je
std
adc
sar
pop
fstp
shl
dec
push
popf
mov
inc
ja
pop
add
sbb
fwait
movs
lods
call
sub
lahf
mov
stos
jg
stos
or
push
pcmpeqd
mov
lods
or
jnp
and
(bad)
loop
push
paddb
jae
jbe
test
sub
jl
hlt
js
ror
imul
movs
enter
or
test
push
xor
enter
jnp
pop
imul
xchg
mov
cdq
or
cmc
mov
movs
rcl
cmp
movs
add
cmp
pop
idiv
aas
xchg
(bad)
push
mov
pop
xor
mov
xor
arpl
inc
je
call
ss
push
call
mov
inc
mov
not
pop
or
cmp
test
mov
jmp
clc
adc
je
mov
stos
mov
test
jno
xor
arpl
fdiv
fsubrp
repnz
jno
out
loope
mov
push
mov
xor
xchg
mov
jne
fs
mov
jbe
(bad)
pop
(bad)
sub
shl
aas
xchg
mov
rcr
scas
push
mov
add
or
mov
in
jmp
hlt
and
js
adc
(bad)
fistp
retf
pop
pop
mov
and
xor
pop
dec
ins
pop
sbb
out
(bad)
fs
cmp
fst
mov
mov
inc
cmp
fisub
(bad)
lock
jle
bound
cmp
sbb
(bad)
cld
add
push
in
cmp
cmps
sbb
cmp
adc
fwait
repnz
ds
or
add
das
jecxz
or
xor
mov
ret
int3
sbb
push
and
jnp
(bad)
push
arpl
sbb
dec
inc
sbb
sub
rcr
add
pop
ja
xchg
bound
into
cmps
mov
aas
int3
or
into
or
mov
cmp
int
inc
lods
fdiv
aam
cmps
xchg
fsubr
dec
and
adc
mov
stos
dec
dec
popf
mov
mov
push
lock
xor
or
inc
inc
scas
(bad)
or
dec
inc
mov
imul
xchg
ins
stos
rol
or
xor
inc
lahf
inc
sbb
pop
mov
xor
add
cmp
sub
mov
(bad)
mov
out
sbb
cmp
pop
loopne
stos
inc
adc
movs
loop
jge
xor
mov
pop
push
add
retf
and
sub
rcr
shl
inc
xor
aas
retf
and
jne
lea
xchg
sahf
mov
stos
xchg
or
push
and
xlat
ret
mov
cdq
inc
push
push
je
add
mov
jmp
xchg
mov
push
test
pop
fstp
(bad)
push
add
mov
jl
adc
and
xchg
aam
push
(bad)
xchg
test
std
jo
int3
mov
cdq
pop
pop
cmps
jno
repnz
mov
mov
xchg
test
pop
movs
mov
mov
bound
inc
(bad)
rcl
cmp
rol
jbe
pop
jns
cmp
xor
int
inc
xchg
dec
or
cmovo
(bad)
lds
mov
fistp
xchg
xchg
fisub
and
push
dec
addr16
out
mov
xor
push
add
mov
(bad)
cmp
cdq
inc
fstp
mov
mov
int3
out
enter
mov
adc
cli
loop
mov
push
les
cmps
xor
ret
mul
movs
jnp
js
add
les
test
test
mov
and
mov
out
iret
scas
daa
outs
shl
pop
mov
call
jmp
push
sbb
aad
jae
add
jle
imul
in
fnstenv
mov
push
(bad)
movs
cdq
aas
lds
rcl
cmp
push
push
sbb
fidivr
test
add
xchg
(bad)
dec
outs
adc
inc
inc
addr16
jno
sub
jbe
movs
bound
or
pusha
add
ret
lds
jno
mov
pop
adc
xlat
rcr
push
pop
add
iret
fstp
sub
loope
fs
sbb
cmps
in
pop
mov
pop
popf
(bad)
sub
scas
ror
push
xchg
shl
loopne
lahf
cld
mov
pop
loopne
lock
rol
pushf
cld
cmp
add
inc
inc
xchg
cli
xchg
mov
out
pop
cdq
sub
mov
ficomp
push
mov
popa
(bad)
ja
xchg
cmps
or
loop
adc
imul
dec
ret
jl
in
cmp
loop
pushf
mov
or
add
data16
in
mov
mov
mov
into
xor
addr16
adc
cmps
in
mov
mov
pop
mov
inc
push
and
mov
lds
jp
xor
sub
test
shrd
mov
stos
in
loopne
xor
adc
xchg
or
inc
xor
ds
repz
es
sbb
jmp
stos
(bad)
jnp
enter
push
and
enter
sub
std
out
add
inc
pop
and
inc
clc
dec
and
adc
rcr
sub
int3
mov
jo
jl
lahf
and
push
push
jmp
dec
(bad)
sub
or
mov
pop
and
cmps
retf
aad
not
add
inc
jmp
cdq
push
arpl
mov
pusha
ffree
jp
fistp
movs
mov
adc
inc
dec
hlt
and
sbb
ins
mov
sub
jle
and
ret
fcomi
mov
leave
cdq
lahf
dec
ret
sbb
xchg
add
inc
mov
ja
inc
mov
cmp
adc
out
inc
imul
cmp
adc
int
jbe
push
push
adc
push
repz
and
pop
add
dec
fisubr
dec
push
inc
out
bound
cwde
adc
sub
call
xor
mov
retf
xor
repnz
ins
enter
bound
dec
data16
mov
dec
retf
sub
stos
dec
jle
adc
cwde
xchg
push
add
mov
clc
mov
dec
rcr
in
rcl
xchg
xor
scas
je
je
xlat
out
push
mov
sbb
scas
daa
push
xor
pop
aaa
xchg
js
mov
sub
nop
(bad)
jp
jge
push
dec
js
outs
jmp
xor
sbb
cmp
jg
adc
add
or
xor
adc
push
adc
sub
popa
not
add
add
add
inc
rcr
cmp
xchg
lods
je
bnd
adc
loopne
test
sbb
jmp
jmp
pop
sub
dec
mov
aaa
clc
pop
dec
dec
pop
pop
les
outs
or
mov
pop
jae
mov
retf
mov
inc
inc
out
into
inc
sub
iret
imul
mov
ja
in
pusha
cld
xchg
inc
daa
movlps
add
mov
push
adc
mov
int3
js
icebp
jmp
cmp
popf
sub
dec
aas
fwait
stos
mov
sub
or
mov
mov
jae
ins
mov
mov
hlt
push
add
xor
in
jle
aaa
ja
(bad)
stc
jle
pusha
out
push
xor
and
(bad)
sbb
push
mov
retf
add
sub
pop
jne
mov
inc
mov
cmp
mov
daa
lods
pop
inc
mov
adc
jle
push
pop
jp
cli
add
loopne
les
push
push
arpl
dec
add
pop
popa
stos
cli
fldcw
mov
or
repnz
push
idiv
sbb
int3
test
sti
mov
xor
sub
scas
lods
mov
(bad)
fwait
add
cmp
icebp
test
enter
inc
or
jmp
jmp
or
dec
inc
and
and
mov
push
sub
fs
sub
sub
xchg
cwde
push
in
sub
sbb
mov
sub
ss
les
or
xor
aas
adc
mov
mov
(bad)
fbld
loope
mov
cwde
mov
push
add
ss
push
js
jge
es
test
mov
jmp
es
out
xor
aaa
js
mov
stc
scas
sahf
pop
cmp
cmp
movs
mov
je
mov
sbb
adc
movs
cmp
dec
daa
ret
jb
cmp
sar
rol
mov
cdq
mov
add
int
sti
inc
jl
daa
pop
sbb
sbb
fld
(bad)
mov
and
inc
jg
pushf
int3
rcl
jnp
pop
lea
adc
in
(bad)
xor
mov
cmp
sub
ds
dec
adc
push
jmp
jae
out
mov
jnp
xchg
pop
pushf
or
jno
sub
sub
cli
dec
sub
mov
inc
pusha
jle
outs
mov
imul
test
pop
and
and
jae
sbb
pop
jnp
retf
jae
aad
shl
pushf
mov
xchg
ficom
push
outs
mov
sub
into
ret
push
aad
inc
outs
icebp
test
rcl
(bad)
hlt
mov
xchg
pop
jno
xor
ja
stc
retf
mov
and
call
repnz
lahf
inc
bound
iret
add
push
mov
jmp
daa
xor
mov
in
call
jle
or
jp
dec
out
ss
pusha
pop
adc
pop
cmp
mov
outs
iret
addr16
or
mov
and
and
adc
cdq
in
add
mov
stos
jae
adc
cdq
inc
add
test
add
das
sti
sbb
jle
jmp
push
xor
int3
test
dec
or
xchg
hlt
jle
pop
inc
adc
sub
rcr
cmp
sub
neg
adc
jmp
clc
or
gs
xchg
pop
or
imul
pushf
test
adc
fmul
fiadd
retf
movs
dec
ror
jnp
shr
jmp
loop
inc
adc
je
jo
cld
sbb
repz
out
cmp
mov
pop
xchg
shr
mov
mov
push
mov
cmp
cmp
xchg
mov
add
sbb
push
or
adc
gs
mov
lahf
sub
cld
cmp
add
xor
aad
fimul
popf
(bad)
and
(bad)
(bad)
rcr
sub
out
mov
sub
fwait
xor
(bad)
call
push
ss
fs
div
mov
idiv
or
test
js
jmp
sub
fcomp
mov
aaa
pop
cmp
mov
pop
inc
in
jp
jle
pushf
inc
aam
pop
aaa
push
int
call
scas
mov
shl
call
sub
movs
sub
jnp
sub
daa
push
es
push
mov
sub
ror
fs
xchg
jmp
sub
cld
sbb
bound
addr16
mov
clc
bound
lock
aaa
fmul
push
and
or
mov
mov
mov
data16
add
scas
test
sar
mov
adc
mov
rcr
jns
adc
xchg
xor
stos
sub
mov
js
jg
ins
in
mov
bound
call
enter
sub
xlat
out
cmp
xchg
outs
xchg
ret
iret
jl
fnstcw
shl
loop
lock
stos
mov
(bad)
fst
ficomp
dec
ja
ret
nop
pop
mov
sub
(bad)
sub
(bad)
int
mov
sbb
adc
add
jecxz
ror
adc
jp
and
outs
(bad)
dec
(bad)
test
enter
pushf
mov
(bad)
cmps
(bad)
jae
xchg
test
xor
in
and
fsubr
inc
lods
jmp
dec
adc
dec
pop
push
dec
pop
or
adc
fisttp
dec
sub
cmp
das
mov
mov
out
and
xchg
mov
call
in
dec
or
stos
mov
adc
ret
(bad)
lods
cwde
push
pop
or
adc
shl
xchg
sbb
out
retf
jmp
mov
es
in
jbe
dec
scas
sbb
jno
jmp
push
in
imul
popf
leave
push
xor
push
inc
enter
mov
ins
mov
imul
xor
loopne
std
mov
shr
inc
retf
mov
dec
xchg
add
mov
mov
sbb
(bad)
pop
push
xor
ret
aaa
vpmacswd
aas
mov
cmp
mov
aaa
ret
cmp
add
imul
xchg
mov
mov
imul
xchg
inc
jp
(bad)
jmp
xchg
mov
jmp
jmp
repz
pop
imul
retf
dec
and
fsub
xchg
dec
(bad)
sub
xor
mov
xor
xchg
lea
mov
pop
pushf
sbb
(bad)
icebp
push
clc
popa
cmp
xchg
mov
out
repz
mov
outs
pop
aam
lods
add
fadd
(bad)
cmove
cmp
jp
lods
stos
std
or
(bad)
mov
and
pop
inc
iret
mov
shr
or
dec
pop
mov
push
aam
repnz
inc
xor
or
dec
pop
out
out
cmp
in
add
dec
cmp
cmp
cmp
jnp
fstp
ss
jg
int3
and
outs
leave
dec
popf
xchg
(bad)
out
jnp
cld
(bad)
cmp
sti
rcl
ret
xor
add
sbb
inc
gs
popa
xchg
and
repz
and
scas
xchg
mov
jno
cld
cmp
cwde
das
xchg
mov
xchg
mov
sub
div
jae
mov
xchg
mov
dec
pushf
or
sahf
inc
inc
xchg
int3
adc
cld
push
and
ss
mov
pop
mov
and
ins
or
(bad)
or
and
je
xlat
aad
leave
push
jnp
xor
int
mov
xor
pop
not
xchg
movs
fld
jb
call
jns
icebp
and
push
movs
shr
je
mov
mov
adc
popf
iret
add
cmps
ret
popa
imul
pop
pop
xchg
rol
xor
xor
iret
movs
cmp
(bad)
stc
(bad)
ror
cmp
mov
mov
mov
xor
and
cmp
out
add
mov
not
add
into
and
int3
je
cmp
ret
jno
mov
pop
lods
je
inc
(bad)
pop
bound
xor
xor
xchg
aaa
push
in
(bad)
int
dec
fld
xchg
in
pop
fwait
pushf
in
stos
call
test
mov
loope
stc
mov
push
pop
adc
push
sbb
adc
ret
push
xor
aad
pop
push
inc
es
mov
dec
imul
and
loopne
bswap
and
and
dec
xor
ds
int
xchg
jmp
fldenv
or
mov
lahf
into
jge
xor
(bad)
xor
add
add
jne
test
lods
std
jecxz
push
jne
mov
sbb
mov
(bad)
ss
jge
push
push
fist
dec
cmps
mov
cwde
shr
loope
and
mov
shl
xchg
jae
jnp
dec
mov
pop
sar
jg
xchg
cmc
hlt
sbb
add
int
xlat
aas
pop
mov
retf
and
mov
xchg
jmp
lea
mov
div
adc
mov
ins
out
popa
inc
fistp
sbb
jle
in
cmps
mov
or
cmp
outs
les
cwde
add
xor
outs
mov
jmp
addr16
(bad)
and
mov
daa
fisttp
inc
add
push
add
add
push
shl
aam
fldcw
jb
sbb
jne
movs
inc
ror
pop
mov
jmp
push
mov
cmp
int
adc
cmps
lods
call
gs
or
ret
aaa
push
outs
mov
retf
mov
mov
fwait
jp
add
cmps
jb
ja
mov
ins
and
push
inc
int3
arpl
sbb
mov
lahf
(bad)
push
mov
mov
sbb
movs
shl
jmp
dec
std
leave
dec
shl
adc
rep
(bad)
jns
cld
xor
in
(bad)
cmp
adc
push
push
pop
sar
popa
cld
int
xchg
mov
mov
sub
loopne
test
pop
xor
mov
fnstenv
lods
iret
and
loope
aaa
shl
test
loope
fcmovnu
adc
(bad)
cmp
daa
sbb
sbb
ja
movs
push
(bad)
cmp
imul
jg
adc
inc
(bad)
mov
aad
das
jg
sbb
lock
call
sbb
repz
push
xchg
mov
sbb
(bad)
pushf
pusha
mov
popa
push
lods
out
stos
mov
nop
sbb
shr
enter
imul
xchg
cmp
fst
rol
lock
xchg
jp
mov
and
punpckldq
pushf
xchg
inc
or
fwait
(bad)
mov
xor
icebp
jno
cmp
int3
sub
repnz
jbe
clc
and
dec
jl
mov
pop
pop
jo
xchg
scas
div
add
cmps
into
mov
dec
cmp
dec
(bad)
stos
in
iret
ins
jecxz
dec
mov
fcos
data16
add
movs
sub
sahf
push
ins
fldl2t
test
stc
loopne
mov
mov
gs
(bad)
das
ret
aad
aam
jle
pop
mov
sar
cld
and
xor
cmps
idiv
stc
fcmovne
jp
ffree
mov
add
jecxz
sub
push
aas
jns
mov
inc
fs
fcom
rcl
xor
adc
sbb
lock
aam
jl
sbb
cld
add
scas
cli
sub
shl
stos
scas
scas
mov
add
add
inc
sbb
bound
call
gs
aam
sbb
add
pop
jnp
(bad)
inc
pop
icebp
stos
dec
pop
imul
and
sub
cmp
and
push
test
and
mov
inc
pop
add
xor
(bad)
fldcw
sub
inc
int
fimul
inc
push
ror
jo
dec
jmp
test
ss
mov
(bad)
xlat
jmp
push
sub
sub
lds
inc
ffreep
jne
lahf
cmp
add
xor
jmp
in
test
jo
int
aaa
jns
cwde
stos
sub
rcr
ror
js
or
xor
cmc
jg
fst
jnp
push
xchg
(bad)
and
jae
push
push
jbe
movs
mov
into
ss
mov
sbb
add
sbb
fcomp
inc
fidiv
mov
dec
cmp
xchg
neg
adc
sub
pusha
or
cmp
call
push
mov
jl
sbb
xchg
mov
data16
adc
(bad)
mov
das
ret
loopne
pusha
push
nop
mov
and
mov
mov
mov
mov
mov
jecxz
xchg
cdq
push
cmp
pushf
div
mov
(bad)
sti
xor
inc
sbb
xor
jge
shl
fnstcw
ins
pop
cmp
aaa
mov
js
dec
int
sbb
dec
xchg
mov
add
sbb
repz
cmp
add
fist
push
(bad)
mov
imul
xor
test
push
jb
aad
or
and
inc
xchg
pop
cmps
ss
cmc
mov
mov
ins
xchg
and
cmc
sub
loopne
mov
xor
cli
mov
call
sti
xor
adc
add
sub
jg
add
xor
sub
loopne
pop
cmc
loopne
xchg
jns
scas
ja
hlt
inc
cmp
sahf
aad
cwde
adc
pop
dec
xlat
sti
test
lds
scas
retf
gs
cwde
sbb
pop
aaa
sbb
push
mov
pop
xchg
and
xchg
cli
inc
std
loop
fist
mov
cwde
mov
mov
cmp
xchg
mov
push
or
ins
jno
add
scas
xchg
and
mov
mov
outs
dec
push
nop
xor
int3
es
test
repz
xor
pop
pop
imul
mov
jno
inc
push
pop
movs
ds
push
(bad)
in
mov
or
mov
loop
outs
push
mov
dec
mov
add
cli
fld
gs
xchg
scas
in
mov
inc
xchg
lahf
fld
mov
cmp
int3
sub
mov
or
ror
jge
sti
cmp
cmps
push
adc
movs
mov
pop
test
in
jl
mov
(bad)
in
loop
push
call
aas
mov
js
and
xlat
sbb
xchg
mov
fisub
dec
aam
mov
xchg
mov
add
and
out
icebp
or
cs
(bad)
std
jb
mov
mov
xchg
enter
in
xchg
fsubr
aam
outs
cwde
outs
into
(bad)
shl
daa
adc
sbb
cdq
cmp
rol
in
jne
pop
or
sub
mov
fldl2t
xor
pop
fdivr
in
jbe
dec
ror
rol
inc
xchg
mov
jo
sbb
aaa
sti
mov
cmps
cmp
or
sbb
push
mov
jecxz
dec
dec
jmp
repnz
add
jne
(bad)
cmp
jge
xchg
(bad)
dec
add
test
retf
xor
cwde
cmps
inc
pop
cmp
fst
iret
popa
test
in
sub
inc
adc
ret
jns
mov
out
or
add
popa
aas
cmp
movs
cmp
mov
push
das
cmc
in
xor
leave
mov
mov
adc
sub
repz
out
icebp
call
sbb
sub
in
jecxz
std
call
or
lds
sbb
movs
cmp
adc
inc
clc
fs
or
sti
ret
(bad)
(bad)
test
xchg
daa
dec
imul
(bad)
std
test
jmp
or
mov
or
adc
mov
push
aas
mov
scas
data16
cmps
jo
outs
inc
rcr
or
xor
mov
aam
adc
inc
iret
mov
scas
jb
sub
pop
nop
dec
push
ror
sub
mov
(bad)
adc
and
in
or
sbb
sub
push
jno
push
rcl
cmp
mov
scas
repz
adc
ror
sub
lods
dec
pop
fwait
add
lock
mov
pop
ror
lea
lahf
daa
fiadd
nop
movs
sbb
xor
fs
xchg
xchg
push
dec
sbb
ret
jae
inc
stos
(bad)
dec
push
mov
call
xchg
lods
(bad)
jg
cmps
push
pusha
out
inc
jne
push
icebp
fist
push
sar
jecxz
lods
stos
pop
jmp
cwde
dec
jg
jno
xor
mov
ins
jmp
popa
cmp
mov
jbe
imul
jmp
or
into
pop
push
jp
lods
pop
add
mov
and
ror
loop
push
dec
cld
dec
std
ins
loope
in
aam
jl
pop
sahf
stos
jb
pop
daa
inc
pop
push
test
enter
mov
adc
repnz
sahf
rcr
scas
add
xchg
mov
ins
inc
cli
retf
stc
mov
add
int3
pop
retf
mov
mov
adc
daa
jle
loopne
and
es
ins
jmp
push
idiv
jae
imul
xor
cdq
repz
shr
repnz
je
sbb
das
retf
cmp
xor
loop
or
mov
enter
or
mov
mov
dec
les
pop
dec
or
pop
shl
retf
mov
in
cli
nop
loop
nop
dec
ror
(bad)
jg
and
sti
xor
outs
jp
or
aad
jns
add
adc
ret
and
retf
fcmovu
pop
nop
inc
inc
push
arpl
jle
outs
(bad)
(bad)
xor
ret
fld
das
daa
pop
pop
(bad)
xor
loopne
(bad)
ins
popa
cmp
inc
xlat
push
aas
cmps
aad
xchg
js
inc
xchg
push
jl
xor
pop
cbw
jo
sub
xchg
bts
stos
ja
jecxz
inc
pop
inc
jge
add
mov
dec
sub
fstp
aas
adc
mov
mov
in
idiv
and
cwde
loope
lea
dec
push
lods
fiadd
mov
mov
inc
push
push
sbb
mov
loope
rol
stc
pop
or
inc
test
xor
lahf
mov
push
cmps
cmp
inc
sbb
mov
lods
xchg
dec
jae
and
or
call
repz
mov
(bad)
mov
popf
(bad)
in
ds
retf
sub
cmp
shl
mov
sbb
xchg
xchg
daa
jp
aaa
lea
test
mov
movs
aas
jge
mov
sub
movs
add
fdivr
mov
adc
test
cli
cmp
icebp
loop
xor
fdivr
dec
xor
jb
mov
in
mov
push
mov
add
rcl
pop
lods
ficomp
jnp
or
pop
out
jmp
adc
mov
fs
mov
xor
cld
and
sub
fsubr
xchg
push
mov
pusha
pop
pop
jecxz
ret
push
sti
jbe
mov
xchg
cmp
cld
leave
push
pop
and
scas
pusha
ret
or
outs
popa
push
xor
nop
xor
and
push
push
mov
aad
adc
pop
in
jno
or
(bad)
push
nop
ds
call
out
xchg
(bad)
daa
faddp
out
fdivr
add
sub
sub
stc
mov
jp
pop
and
cmp
and
mov
jns
push
sti
push
(bad)
in
xor
jns
pop
loope
lds
test
cmps
mov
dec
push
stc
lods
retf
loope
lock
mov
leave
out
and
mov
in
fisttp
push
cld
aaa
inc
aas
pop
push
ret
jecxz
mov
leave
jg
add
sahf
inc
mov
test
cmp
rcl
sbb
mov
sbb
push
(bad)
call
add
push
clc
ins
movs
ret
daa
mov
in
int
xor
cdq
inc
push
mov
std
xchg
or
mul
jnp
mov
mov
retf
mov
aas
jnp
pop
push
adc
ficom
inc
add
and
sub
inc
dec
inc
scas
fidivr
enter
ins
test
fist
sahf
(bad)
aaa
movs
rep
mov
cmp
shr
sbb
out
jae
lea
mov
xchg
add
shl
ror
jp
xchg
push
xchg
daa
jge
jne
dec
pop
std
fld
xchg
push
and
ja
sbb
scas
pop
pusha
push
xchg
sbb
je
jmp
lods
xchg
nop
dec
pop
ret
add
dec
aaa
iret
hlt
out
lods
mov
cli
mov
(bad)
jg
push
mov
jge
sub
mov
mov
test
pop
ins
outs
test
push
mov
shl
mov
ja
inc
into
dec
daa
hlt
shl
push
mov
and
xchg
jmp
cmp
in
js
imul
mov
sub
dec
rcr
jb
cld
push
xchg
clc
sahf
retf
(bad)
mov
icebp
cmp
add
cli
call
or
pop
push
jle
pop
mov
push
add
dec
cld
cli
test
add
imul
jae
xchg
retf
adc
(bad)
and
cmps
push
cmp
aam
ror
out
xor
aad
mov
adc
jle
push
je
pop
xchg
sbb
cmp
inc
int3
lahf
in
or
adc
dec
dec
daa
xadd
inc
imul
inc
call
outs
add
and
daa
xchg
loop
and
popf
push
xor
leave
loope
adc
mov
inc
cmp
addr16
shl
xor
push
pop
inc
je
fiadd
adc
into
sti
adc
ja
movs
cmp
mov
stos
mov
iret
sub
cmp
mov
in
sub
cmp
sub
mov
push
mov
and
out
dec
and
jmp
gs
mov
aam
iret
(bad)
cmp
ror
in
push
adc
and
jp
push
neg
push
xchg
xor
inc
push
lea
mov
cmps
xor
int3
iret
stc
shr
dec
pop
xor
cmp
addr16
adc
rcl
shl
xor
sbb
xor
lods
jecxz
sti
xor
dec
ins
pusha
jne
add
push
mov
or
mov
retf
push
push
sub
jae
jg
mov
pop
xor
sbb
fsub
int
push
sbb
pop
repnz
jns
push
imul
scas
ds
jl
inc
push
mov
sbb
sub
sti
addr16
in
mov
ficomp
jne
fidiv
jle
out
or
outs
lock
(bad)
sbb
movs
adc
js
mov
outs
ficomp
jg
jb
fwait
or
mov
rcr
push
imul
cmc
mov
xor
jae
in
rol
lea
pop
and
xchg
lock
mov
mov
mov
lods
jl
jo
or
int
push
fwait
shl
xchg
xchg
xchg
stos
ins
(bad)
aad
dec
pop
cmp
stos
ins
add
jns
int3
mov
sar
pop
push
cmp
fistp
aad
jno
iret
cmp
mov
lds
arpl
jnp
or
pusha
xchg
add
jno
out
xchg
fstp
mov
or
je
ret
(bad)
add
pop
cmp
inc
push
mov
mov
xor
test
in
or
int3
and
icebp
mov
pop
mov
(bad)
imul
lock
ret
leave
and
ror
mov
shl
fsubr
mov
(bad)
aas
std
jne
sbb
mov
out
shr
xor
mov
dec
pop
mov
in
push
mov
aas
pop
dec
inc
out
fadd
movs
mov
dec
arpl
add
pop
loopne
in
cmps
clc
out
xchg
lods
mov
fisub
cmp
mov
outs
rol
data16
inc
movs
cmp
ins
cmp
out
push
test
xchg
pop
adc
aad
fadd
imul
xchg
xor
push
push
dec
cmp
arpl
ins
push
repz
xor
mov
cmp
jmp
cmc
xlat
je
pushw
dec
or
mov
xchg
dec
push
cmps
mov
cmp
mov
cmp
enter
lar
adc
jne
mov
rol
jl
xor
scas
adc
dec
adc
test
out
xchg
jb
data16
push
add
add
xor
dec
in
imul
mov
mov
jno
xor
push
sub
mov
dec
mov
add
cwde
xchg
ins
fs
push
xchg
(bad)
push
pop
sub
test
les
rol
nop
push
add
mov
jo
cmpxchg
jl
and
dec
lock
xchg
pop
gs
retf
lahf
stc
dec
fwait
adc
pop
outs
cmp
dec
hlt
pop
pop
lods
test
add
icebp
clc
or
add
outs
jle
sahf
xor
stc
or
out
jecxz
jle
dec
mov
popf
(bad)
repnz
pop
lahf
adc
rcl
mov
inc
iret
pop
cmp
adc
adc
cmc
fdiv
inc
in
mov
sub
push
out
pusha
sub
mov
lea
xchg
mov
retf
js
repz
xchg
fldln2
daa
cld
pusha
add
ret
pop
ror
shl
or
pop
out
and
and
fst
push
lds
movs
jno
add
pop
or
cmc
and
push
adc
mov
mov
xor
shr
(bad)
push
and
adc
dec
cmp
jecxz
outs
add
inc
inc
and
cmps
add
adc
adc
movs
mov
fistp
inc
push
adc
frstor
inc
test
jge
sbb
mov
in
inc
bound
mov
jle
mov
adc
push
ror
push
mov
jmp
fld
int3
or
jle
out
call
clc
ficom
mov
imul
push
das
mov
and
pop
aam
jb
lock
jb
mov
je
and
jle
fwait
shl
fdivr
dec
push
pop
dec
movs
mov
jnp
push
test
jne
xor
add
adc
lock
lods
call
dec
push
jo
retf
cs
and
add
xor
fnstcw
outs
mov
lea
xchg
sbb
fimul
pop
sbb
or
test
pop
cld
mov
jge
mov
fs
in
loope
fscale
loope
xlat
aad
dec
xchg
fnstenv
pop
jne
not
jns
fcomp
pop
cld
(bad)
pop
ins
mov
cwde
adc
movs
mov
pop
enter
outs
fstp
out
aaa
dec
in
cmp
inc
jb
popa
dec
mov
mov
cdq
repnz
cmp
mov
push
inc
or
repz
dec
push
loopne
mov
push
add
popa
push
mov
adc
fild
nop
jp
pop
test
jae
aam
inc
cmp
adc
mov
fwait
mov
bound
xor
jae
std
lds
push
sbb
xchg
aam
cmp
sub
xor
test
clc
outs
addr16
stos
sbb
or
imul
cwde
sbb
inc
pop
mov
jmp
ins
mov
mov
pop
fdiv
mov
rol
pop
cmps
fcom
ins
mov
stos
jge
mov
cld
mov
leave
adc
into
call
cmps
push
clc
push
mov
or
out
jle
push
iret
push
push
loope
add
mov
adc
clc
enter
in
push
loop
sbb
les
hlt
mov
dec
movs
push
loopne
cmps
ror
sti
out
push
dec
ficomp
in
push
sbb
add
(bad)
in
or
sbb
ret
icebp
pop
sub
pop
pop
push
mov
cli
mov
rcl
(bad)
repz
aam
sub
hlt
ins
addr16
inc
cmp
and
aad
outs
push
xchg
mov
arpl
mov
inc
bound
mov
gs
daa
add
cmp
daa
shl
cli
pop
test
mov
push
push
mov
into
pop
lea
rcl
std
xor
pop
in
pop
loopne
cmp
pop
push
scas
lods
xchg
mov
in
sub
cmp
stos
aas
push
fwait
or
enter
test
pop
mov
ins
in
les
lock
fsub
ja
str
ja
stc
cmp
fisub
mov
fidiv
std
sub
add
repz
xchg
add
ret
pop
sub
mov
xchg
cld
leave
sti
jnp
jne
and
retf
inc
add
jnp
and
sahf
add
sahf
dec
(bad)
fadd
cmps
(bad)
(bad)
mov
lahf
imul
adc
test
imul
pop
mul
lea
push
ins
shl
mov
into
cmps
jecxz
jl
test
test
pop
shl
mov
jbe
dec
lea
jmp
cmp
xor
fcomp
or
aas
sbb
adc
mov
mov
xlat
je
icebp
test
loope
daa
js
lods
lock
fs
and
(bad)
repnz
loope
pop
cmp
ds
shl
mov
sar
and
jo
sbb
pop
int
and
xor
cmp
or
ss
jmp
xlat
out
sub
mov
stos
add
loope
bswap
xchg
xchg
lock
shr
les
mov
les
pusha
stos
sub
(bad)
repnz
loop
inc
enter
xor
sbb
adc
mov
jl
(bad)
cmp
pop
inc
stos
sub
out
xchg
mov
push
scas
pop
or
cs
and
push
push
push
repnz
hlt
ss
pop
mov
mov
xchg
xor
xchg
arpl
jae
outs
mov
dec
xlat
cmp
or
(bad)
gs
rcl
in
jbe
jecxz
push
add
or
dec
pop
in
pop
es
movs
leave
ins
outs
xor
movs
ret
add
mov
jge
outs
xchg
jo
mov
rcr
jae
xchg
adc
stos
outs
repnz
sub
inc
push
pop
rol
aad
movs
mov
dec
push
pop
or
adc
dec
out
repnz
scas
xchg
lock
aas
outs
lods
sbb
retf
lea
call
mov
mov
cmp
jno
mov
mov
jnp
aam
inc
sub
xchg
fld
jne
xchg
jmp
(bad)
pop
mov
mov
push
mov
sub
ret
xchg
das
cmp
sar
lock
fwait
dec
repnz
and
and
ret
out
data16
iret
or
inc
or
sbb
les
adc
jg
sbb
mov
dec
ret
inc
push
(bad)
mov
mov
jno
mov
push
adc
xor
and
iret
jnp
test
sbb
adc
fld
and
jecxz
sub
das
mov
in
xchg
xor
and
mov
pop
in
loopne
int
push
jl
push
and
cmp
retf
lods
std
push
sub
jge
add
mov
shl
or
fmul
sbb
adc
push
push
outs
or
xor
aaa
push
pop
add
push
mov
loopne
or
call
arpl
dec
adc
pusha
cmp
loope
push
xchg
mov
cmp
stc
and
or
clc
xchg
inc
cld
sahf
fdivrp
cmps
in
imul
int
pop
cmp
sub
adc
push
in
jno
aam
xchg
push
pop
cld
jp
leave
mov
pop
adc
(bad)
and
pop
lea
mov
iret
sub
adc
test
jl
retf
or
sbb
mov
jno
cmp
sub
je
retf
add
cmp
mov
in
ds
mov
pop
jmp
jno
out
outs
out
jo
push
and
cmps
push
cs
jmp
lahf
mov
stos
mov
add
push
mov
xor
sub
(bad)
fs
sub
int3
gs
std
inc
and
mov
xchg
and
es
push
cmp
out
fdivr
xchg
xor
mov
ds
popa
and
sub
shl
inc
stc
inc
mov
jle
add
sbb
aam
add
je
fidiv
test
out
jb
fwait
dec
(bad)
pop
adc
std
mov
fimul
dec
mov
jmp
not
loopne
pop
fwait
cmp
sbb
cs
retf
mov
imul
sahf
add
fwait
test
(bad)
lods
mov
mov
mov
mov
push
adc
lds
sbb
add
xor
and
aas
mov
add
pop
mov
retf
sub
out
imul
push
cmc
icebp
mov
bound
(bad)
movs
sub
jecxz
pop
mov
or
cmp
pop
mov
mov
jno
call
and
add
adc
cmc
xor
jbe
out
int3
inc
out
push
aad
pop
sub
sbb
int3
mov
cs
cmps
in
xchg
and
push
jge
mov
ficomp
rcr
xor
daa
pop
sub
aam
icebp
xlat
into
add
xchg
cmps
loopne
xchg
pushf
sahf
out
mov
arpl
adc
test
jg
mov
outs
pop
mov
add
loope
in
pop
push
sub
jge
ss
push
jmp
jbe
adc
mov
mov
sbb
mov
add
sbb
mov
sti
inc
inc
cli
cmp
jle
ins
fbld
ss
xchg
xor
xor
rcl
int
jbe
pop
cld
xor
or
xor
leavew
(bad)
adc
xchg
fistp
sbb
xor
js
adc
adc
and
retf
fst
lds
mov
ins
lods
mov
lahf
dec
inc
cmc
test
sub
int3
sti
stos
mov
(bad)
loopne
(bad)
xchg
adc
cli
cmp
bound
stos
xor
movs
movs
or
mov
mov
cmp
pop
in
cmp
cs
jno
cmp
adc
mov
mov
mov
aas
jp
jmp
loop
xor
fsubr
ins
mov
xchg
outs
aad
out
mov
sar
mov
test
xor
mov
mov
inc
scas
inc
jo
mov
jecxz
and
mov
xchg
mov
cld
pop
jge
movs
rcl
add
test
pop
in
ss
jmp
xchg
fiadd
xlat
les
push
add
fwait
sub
jmp
les
pop
test
jnp
shl
mov
test
arpl
call
jl
inc
sbb
inc
out
adc
or
into
pop
push
fiadd
xor
mov
pushf
xchg
je
xchg
or
xchg
fisttp
mov
ss
(bad)
lds
cmp
mov
jno
(bad)
clc
pop
fs
mov
cmc
cmp
cmp
fnstenv
paddq
(bad)
fstp
aad
in
leave
fwait
int
mov
ret
outs
mov
out
ss
xor
jle
lock
xor
jae
out
in
div
cli
sbb
adc
push
mov
and
push
stos
mov
repz
test
out
sub
inc
adc
mov
pop
and
ss
arpl
mov
ds
movs
mov
test
mov
mov
push
mov
adc
pop
mov
add
das
xchg
pusha
popf
xor
getsec
cmp
xchg
out
jl
push
repz
inc
mov
and
mov
dec
mov
dec
cmp
dec
add
stos
jo
inc
push
xchg
vzeroall
pop
inc
inc
test
push
xchg
(bad)
call
fidiv
jmp
ins
imul
mov
cmc
mov
es
js
movs
outs
push
rol
inc
movs
xor
xchg
mov
imul
jg
or
(bad)
test
xor
loopne
sbb
jge
add
mov
das
dec
add
jg
dec
cli
cmp
pop
ret
sahf
addr16
jns
mov
adc
cmp
dec
sbb
push
stos
inc
mov
in
and
xlat
ficomp
mov
jg
es
push
mov
dec
fst
push
add
repnz
sub
lods
jne
popf
icebp
mov
in
pop
dec
cmp
pushf
mov
ficomp
rol
das
pop
dec
jge
dec
xchg
jp
push
inc
(bad)
mov
cmp
into
push
outs
adc
fst
repz
mov
pop
mov
mov
mov
ins
pop
ds
push
repnz
and
push
push
push
dec
ret
and
js
data16
and
aas
push
cmp
push
repz
and
add
aas
nop
xchg
or
xor
or
inc
cmps
adc
stos
(bad)
add
inc
and
dec
in
sahf
lock
mov
adc
ret
mov
inc
clc
cld
movs
push
lods
inc
movs
(bad)
test
and
jle
movs
inc
lods
fs
sub
aad
jae
push
xor
xchg
push
js
push
sub
pop
mov
sahf
arpl
loopne
cmp
dec
test
test
loop
(bad)
(bad)
or
scas
inc
and
cmps
cli
mov
and
fldcw
xor
lahf
aam
mov
and
cmps
sbb
data16
cmp
sar
repz
in
sbb
stos
cmps
mov
dec
xchg
dec
rol
xchg
mov
and
pop
les
sbb
push
jecxz
bnd
xor
mov
and
sbb
mov
movs
add
xchg
out
xor
cmp
popa
mov
add
js
inc
imul
hlt
popf
xchg
pop
inc
push
mov
cmp
outs
imul
ret
cmp
adc
cmps
sbb
adc
cmps
mov
ror
cmc
and
out
rcl
inc
loopne
data16
ds
push
ss
jge
pop
ins
push
pop
pop
cmp
sub
shr
and
aas
mov
(bad)
int3
pop
push
mov
das
mov
push
pusha
add
call
mov
loop
and
inc
mov
in
dec
pop
stc
cs
mov
sbb
jno
add
sbb
in
sar
leave
int
dec
lahf
jmp
push
idiv
pop
xchg
sbb
mov
fisub
cmp
xor
mov
jb
mov
stc
sbb
stos
add
out
sub
div
sahf
out
xchg
loopne
data16
add
push
call
pop
mov
sub
aas
cmps
mov
adc
push
push
push
cdq
(bad)
outs
mov
push
int
push
idiv
jae
frstor
retf
ins
pop
rol
fist
jae
or
mov
int3
fisttp
sub
(bad)
jp
or
outs
es
int
and
jbe
mov
mov
cmp
retf
lods
clc
scas
sbb
and
lods
xor
jbe
es
mov
idiv
test
into
adc
mov
in
push
jno
sbb
mov
cdq
mov
cmps
in
mov
aad
and
and
xchg
aad
ror
add
adc
data16
ja
sub
or
pop
mov
mov
sbb
mov
dec
dec
dec
or
aad
and
lock
in
arpl
inc
pop
pop
in
lods
iret
xchg
pop
jns
mov
jns
and
rcl
lock
cmp
cmps
shr
sbb
mov
popa
pop
in
inc
stos
jmp
dec
shl
cwde
jns
lds
(bad)
xor
lods
into
xchg
sub
cmp
(bad)
loope
push
fisubr
push
add
adc
jno
xchg
shl
cli
push
dec
test
into
mov
pushf
dec
add
add
and
cli
push
dec
cmp
jnp
in
jp
jae
out
sub
pop
fimul
pop
xchg
adc
xchg
and
sub
int
sbb
pop
(bad)
mov
cmp
mov
dec
dec
pop
xchg
pop
adc
jp
inc
in
xor
leave
arpl
dec
xchg
add
and
mov
adc
cmp
mov
mov
dec
call
dec
movs
jmp
leave
pop
push
pop
and
out
hlt
stc
shr
shr
call
inc
cmp
sbb
bnd
div
test
rol
leave
bound
pop
push
cmps
jge
inc
xchg
xchg
mov
pop
inc
or
jns
mov
in
test
jmp
(bad)
loopne
icebp
or
cwde
call
ds
in
test
aam
cmps
sti
cmc
inc
mov
pop
loop
push
push
mov
out
jecxz
lock
cmc
fld
jno
call
adc
and
xchg
scas
mov
fidiv
(bad)
arpl
cs
aam
sbb
push
pop
out
cmp
adc
mov
cdq
sti
lea
mov
and
sub
(bad)
cdq
adc
or
cmp
mov
fisttp
retf
sbb
stc
sbb
adc
inc
jecxz
cmc
jl
shl
out
adc
movs
fucomp
pop
hlt
pushf
scas
add
adc
dec
xchg
loop
mov
fs
jnp
mov
ret
sbb
pusha
out
dec
shl
mov
cmc
or
jecxz
mov
dec
sub
mov
fidiv
jecxz
xchg
cmp
ret
pop
cmps
push
shr
xchg
inc
scas
bswap
mov
mov
xlat
ja
cli
rcr
xor
jmp
push
ja
or
scas
(bad)
test
out
mov
xchg
push
fs
into
pop
cmp
inc
imul
js
fild
or
jnp
aam
cmp
add
jns
sub
push
sub
cwde
test
inc
daa
rcl
(bad)
pop
add
jmp
jnp
mov
mov
pop
inc
nop
cmp
mov
daa
mov
mov
jns
xchg
(bad)
or
enter
(bad)
scas
sub
jne
into
por
scas
loopne
pop
mov
iret
mov
pop
jmp
data16
(bad)
call
mov
es
mov
dec
xor
sbb
xor
inc
inc
outs
jmp
jnp
aaa
mov
fcomp
outs
out
xchg
repnz
ins
jle
inc
fs
adc
into
in
dec
sub
sub
fs
pop
xchg
adc
test
call
stos
sbb
out
fld
mov
adc
aad
cli
stos
adc
in
xor
jae
mov
jb
lea
mov
push
iret
push
cwde
jg
inc
repz
and
pop
mov
mov
xchg
push
(bad)
or
sub
mov
push
add
cmp
enter
pushf
pop
xchg
mov
sub
jae
xchg
lea
repnz
data16
xchg
je
ds
loop
test
ins
clc
loope
xor
aad
mov
and
xor
in
push
fiadd
pop
push
test
xchg
mov
lods
mov
xor
in
and
cmp
xchg
jns
and
mov
cmp
xor
jge
outs
cmc
inc
ins
cmp
int
js
or
push
xor
ret
stc
push
inc
rcl
inc
push
in
jge
imul
sub
cmp
in
mov
inc
and
call
push
push
adc
lods
loopne
cmc
iret
aam
push
lods
sti
xor
sub
jmp
shl
sub
sub
pop
pop
movs
push
pushf
pop
in
mov
shr
sbb
jno
push
test
sar
loop
mov
mov
push
inc
imul
adc
jmp
adc
leave
or
push
xor
pop
cmps
bnd
push
arpl
mov
test
sbb
jno
movs
fsubr
ds
push
push
push
test
repz
mov
and
imul
jo
in
movs
adc
mov
pop
mov
je
push
mov
les
xchg
dec
inc
pop
arpl
or
push
pop
push
outs
pop
pop
adc
lods
dec
jo
mov
(bad)
dec
fs
pop
cmp
mov
ror
call
ins
cmp
inc
or
(bad)
jl
popa
inc
aaa
icebp
leave
sub
jbe
call
mov
iret
sbb
mov
cwde
mov
fcmovnu
sti
push
cmp
xor
cmp
shr
not
sbb
jo
das
not
scas
dec
gs
mov
jns
mov
addr16
inc
mov
retf
lods
out
je
mov
xor
fiadd
popa
sbb
packuswb
cdq
sbb
mov
xchg
xor
dec
sahf
fdivr
sbb
std
jmp
shl
lds
rol
test
xchg
push
retf
outs
in
and
daa
aaa
push
scas
pop
sbb
mov
mov
add
lods
add
and
xchg
ss
mov
aam
(bad)
push
daa
ret
enter
inc
fisub
scas
mov
add
jo
es
stos
xor
add
cmps
sbb
clc
loop
ins
cmp
mov
enter
sar
stos
mov
loopne
test
adc
jle
mov
pop
and
lods
stos
jecxz
pushf
jg
sub
ficomp
retf
mov
add
outs
xchg
test
adc
repz
movs
int
popf
dec
hlt
js
std
inc
lea
test
out
jo
xor
xchg
pop
push
call
mov
outs
test
mov
femms
sub
fldcw
mov
sbb
outs
push
push
(bad)
in
xor
fcomp
sbb
mov
mov
loopne
dec
cdq
addr16
inc
lahf
fst
shl
sbb
fwait
inc
and
jl
(bad)
mov
xor
inc
imul
mov
adc
add
in
into
mov
push
push
(bad)
fnstenv
lock
xor
cmp
and
pause
mov
cmp
cmc
push
pushf
dec
and
xor
arpl
fistp
dec
adc
stc
jns
lahf
xchg
(bad)
pop
cmp
dec
fst
sbb
std
out
inc
fimul
test
rcr
adc
std
or
int3
test
aam
lds
dec
push
add
sub
mov
push
xchg
aaa
jbe
add
xor
iret
into
popf
int3
repz
sub
cmp
lods
ins
jp
mul
lahf
call
pop
jo
icebp
fisub
dec
xor
mov
pop
pop
mov
test
(bad)
and
cmp
cmps
mov
das
xor
dec
lds
(bad)
sub
mov
inc
or
pop
es
in
leave
jo
mov
xchg
scas
jo
fwait
and
adc
jp
pop
fdiv
pop
scas
mov
pop
dec
hlt
dec
(bad)
dec
ror
jbe
icebp
xchg
xor
arpl
add
cld
push
scas
mov
and
push
xchg
xchg
mov
aaa
sbb
mov
adc
jb
test
adc
pop
shl
jge
xchg
xchg
aaa
jle
retf
cmp
in
jnp
xchg
xor
rol
pop
aas
pop
or
or
and
xor
xchg
arpl
inc
inc
and
mov
mov
push
pop
push
dec
or
inc
jae
sbb
mov
loope
pop
repz
pushf
add
nop
fs
repz
aam
ds
cmp
sub
dec
jmp
ror
mov
inc
in
adc
and
shl
shl
mov
test
mov
mov
data16
cmp
cli
mov
ret
loope
jnp
pop
xchg
mov
mov
in
sub
xor
scas
jmp
xor
xor
pop
or
inc
loop
jns
push
pop
jg
int3
jo
in
or
fidivr
add
call
adc
mov
mov
adc
add
mov
dec
scas
sub
jns
dec
pop
ss
cli
and
stos
cmc
adc
(bad)
das
mov
or
jne
jge
adc
int3
fmul
or
and
iret
sbb
out
sub
mov
cmp
jae
mov
outs
retf
jl
dec
rol
loop
cli
test
fistp
rcr
pop
inc
xchg
rcr
rcl
enter
inc
daa
cwde
leave
(bad)
sbb
sub
cli
outs
cli
mov
push
popf
xor
sbb
sub
sbb
pop
and
inc
push
in
sbb
mov
push
loopne
mov
pop
push
sub
xchg
movs
jae
nop
or
and
inc
out
jae
adc
les
gs
mov
cdq
push
mov
dec
mov
je
cmp
mov
push
outs
dec
dec
jle
test
mov
sbb
in
mov
ins
xor
in
sti
imul
inc
iret
div
inc
cld
adc
cmp
movs
jl
xor
popf
mov
inc
cmps
pop
mov
std
pop
enter
mov
dec
lds
enter
xchg
mov
retf
test
jg
outs
push
adc
fwait
mov
iret
aam
cmc
push
in
cwde
mov
fcmovbe
in
cmps
jge
loop
nop
loope
cmp
ss
ss
mov
outs
sbb
imul
rcr
fwait
repnz
movs
repnz
arpl
and
sbb
sti
fdivr
es
xchg
dec
sub
xchg
pop
cwde
enter
cli
jg
jb
xor
pop
aad
(bad)
jecxz
cwde
sti
pop
push
xor
xchg
or
jg
push
inc
out
mov
push
imul
push
ror
push
xor
(bad)
cdq
dec
mov
pop
push
test
sti
fnstenv
cld
mov
pop
fs
jne
fild
ins
push
js
mov
xor
loopne
(bad)
mov
jbe
mov
adc
retf
push
sti
repz
xchg
mov
stos
shr
jbe
jo
icebp
mov
ret
mov
ret
push
into
jae
cmp
xlat
out
leave
imul
push
sbb
or
int3
push
add
pop
(bad)
call
enter
shr
xor
mov
cmps
jb
mov
push
sbb
xor
(bad)
push
pop
sar
sar
dec
pushf
cmp
aam
xchg
cmp
jmp
std
and
(bad)
push
cmp
push
jne
into
in
inc
jnp
sub
in
sbb
icebp
sub
xor
add
lea
sbb
mov
ss
mov
rcl
jns
cdq
sbb
hlt
js
es
sbb
cs
(bad)
(bad)
mov
and
dec
adc
int
inc
jnp
fisubr
push
xchg
mov
stc
pop
test
daa
xchg
inc
(bad)
ds
jae
xchg
jb
pop
imul
dec
daa
sbb
scas
call
hlt
aam
mov
mov
xchg
pusha
iret
dec
or
rol
loope
int
jne
int3
(bad)
adc
mov
jns
push
adc
fwait
sub
enter
mov
fucom
push
inc
mov
mov
fidiv
xor
cmp
(bad)
sub
xor
in
push
xor
out
loopne
sbb
sub
push
ds
xor
int3
fcmovnu
adc
mov
lods
jl
push
add
pop
imul
out
adc
adc
dec
fdivr
jae
mov
push
retf
and
sahf
lods
push
lahf
mov
mov
pop
scas
ds
adc
arpl
inc
stos
clts
in
std
in
add
push
call
outs
jns
stc
loope
inc
mov
mov
gs
mov
adc
mov
cmp
cwde
fcom
mov
xor
xchg
cli
cmp
cmp
sbb
leave
clc
ret
xchg
lock
cmps
adc
push
adc
loope
xchg
repnz
call
adc
aas
out
xor
cmp
jmp
in
pop
fist
xchg
and
cmp
mov
ds
in
cmps
jecxz
jecxz
fild
inc
(bad)
sbb
loope
aaa
cmp
in
jo
push
cs
mov
adc
imul
ins
push
mov
mov
sbb
(bad)
xchg
sti
dec
in
xchg
jecxz
in
lds
je
sub
daa
lods
fucomi
push
inc
sbb
sub
inc
pop
xor
cmps
test
lods
out
mov
mov
jle
xor
rcl
sub
sbb
mov
out
lea
aas
or
mov
and
push
pop
enter
mov
outs
sub
repnz
dec
repnz
rol
dec
call
lds
aam
jno
sub
adc
mov
inc
xchg
frstor
add
aam
push
lea
add
sub
add
inc
retf
sti
sar
adc
lock
and
cwde
jmp
fidivr
xchg
int3
popa
adc
inc
ret
(bad)
hlt
mov
cmps
sbb
mov
sbb
scas
jecxz
mov
jge
pop
jnp
jb
sahf
fst
out
inc
pop
rcr
je
into
pusha
fst
push
test
repnz
jbe
pop
mov
(bad)
pop
pop
das
(bad)
pushf
int
into
lods
imul
test
push
xchg
and
stc
sub
dec
out
and
jnp
push
sub
js
mov
cmp
mov
pop
ficomp
outs
pop
cdq
add
aas
sbb
fadd
inc
mov
sar
sbb
cld
test
mov
enter
cld
not
test
sti
inc
nop
mov
retf
int
(bad)
enter
rcl
jmp
clc
and
sbb
enter
shl
cli
xor
mov
(bad)
jmp
xor
adc
popf
push
adc
and
xchg
fisttp
sub
clc
inc
loop
aad
movs
sbb
(bad)
loop
push
dec
push
mov
and
sbb
inc
repnz
addr16
push
mov
xchg
pop
icebp
add
xor
mov
or
cmp
nop
sub
(bad)
fst
mov
mov
in
fimul
test
or
fstp
mov
test
in
and
inc
fnstenv
dec
mov
addr16
mov
std
rol
shl
jo
je
stos
sbb
leave
aam
pop
icebp
(bad)
inc
(bad)
rol
cld
sti
mov
ins
adc
repnz
jge
sub
pop
bound
pop
repnz
ja
or
icebp
ffreep
mov
dec
loope
mov
cs
or
fdivr
aas
mov
(bad)
fcomp
ror
into
test
rcr
mov
pop
push
clc
jbe
inc
or
inc
or
jmp
int
dec
inc
aad
lods
test
lahf
enter
in
clc
xlat
pop
dec
in
sar
add
sbb
add
mov
stos
ret
push
pop
push
das
mov
mov
out
(bad)
in
pop
in
lods
cmps
mov
cmp
ret
imul
stos
jbe
aam
das
xor
jl
ret
xchg
(bad)
and
jmp
arpl
cdq
sub
ins
ret
mov
in
ror
sbb
jo
cmps
sbb
div
adc
ds
jle
pusha
(bad)
out
in
rcr
dec
outs
sbb
sbb
in
(bad)
imul
ja
sub
sub
clc
fcom
jmp
cmp
jle
iret
adc
js
xchg
cmc
jmp
icebp
mov
es
or
aam
mov
outs
pop
test
cwde
mov
push
push
outs
and
cmp
mov
and
mov
jb
push
outs
push
cmp
mov
ss
ficomp
(bad)
lahf
jecxz
mov
dec
data16
js
mov
xchg
jb
push
clc
xor
(bad)
sub
nop
inc
xchg
int3
sub
xchg
and
sar
fcom
jecxz
sub
in
xchg
je
(bad)
ror
or
jmp
mov
(bad)
sbb
call
ds
add
xchg
sub
lahf
xchg
mov
cdq
xchg
add
adc
xor
test
adc
out
jno
mov
aaa
pop
daa
mov
cmp
daa
mov
mov
sar
fwait
rcl
sbb
pusha
imul
arpl
push
cmps
mov
(bad)
adc
or
lods
std
call
fist
enter
xor
fild
das
out
mov
test
sbb
fld
out
inc
scas
mov
add
sub
mov
pop
mov
mov
scas
mov
push
mov
(bad)
dec
dec
sbb
cmp
add
mov
sbb
inc
adc
mov
stos
push
dec
jecxz
push
sbb
jns
sub
sub
jae
sub
adc
mov
and
jbe
outs
fldcw
mov
mov
repz
mov
jmp
and
mov
sub
sub
bound
adc
mov
shr
jl
inc
add
pop
mov
in
dec
and
mov
xor
dec
ficom
jbe
mov
or
outs
mov
cmp
sub
or
bound
ins
xor
push
jns
push
mov
shr
push
xlat
ins
or
push
jge
or
sbb
cli
(bad)
xor
cmp
jo
call
pop
fwait
out
add
into
push
iret
push
xor
je
retf
and
sahf
sbb
push
pop
cdq
fld
ret
and
inc
and
jo
sub
fisubr
movs
and
xchg
push
ss
push
int
scas
sahf
pop
ins
and
mov
fwait
cmp
sbb
hlt
adc
or
pop
pop
push
and
dec
sahf
repnz
in
or
lock
(bad)
cmps
mov
push
outs
jmp
mov
push
std
ins
outs
fidivr
std
sub
dec
add
inc
xor
cmc
(bad)
sbb
dec
push
fcmove
leave
das
push
ds
sti
hlt
pop
sti
mov
jge
lods
mov
mov
mov
xchg
mov
add
mov
or
imul
stos
loope
ror
jb
fsub
jmp
add
pushf
in
cli
jp
mov
mov
lock
(bad)
lods
cdq
push
adc
push
cmps
cld
rcl
(bad)
xchg
icebp
movs
outs
bound
pop
inc
test
push
int
ja
sub
cmc
sub
xchg
mov
mov
push
popa
adc
mov
fwait
mov
add
and
mov
xchg
jp
cmp
leave
dec
xor
mov
mov
mov
sbb
movs
cmp
or
cmp
xchg
cmp
cld
push
add
push
cmps
sbb
loopne
cmps
xor
add
cmc
cmc
xchg
push
cli
stc
hlt
push
sub
(bad)
cmp
pop
sar
pop
dec
sub
jmp
mov
arpl
push
add
sbb
mov
xor
int
mov
jl
inc
dec
sbb
ror
out
add
sub
shl
mov
inc
and
call
outs
inc
aaa
mov
clc
popa
repz
call
call
jb
int
loop
outs
retf
xchg
hlt
or
pop
aad
sahf
fisub
dec
out
ror
push
enter
mov
outs
loope
jp
push
rcl
inc
test
iret
fbstp
jmp
cli
imul
adc
and
dec
jg
ret
sub
or
std
mov
cmp
pop
jecxz
test
stos
push
out
arpl
pop
ret
sub
outs
xchg
jmp
mov
add
movs
mul
sbb
pop
xchg
loopne
movs
xchg
int
test
mov
call
jae
push
stc
lods
adc
adc
pop
das
mov
jne
adc
push
movs
daa
cld
push
mov
xchg
out
neg
and
shr
mov
pop
add
xor
xor
xor
test
out
(bad)
(bad)
jle
js
fist
adc
xor
mov
int3
fs
lods
out
jns
pop
pusha
mov
sbb
sbb
fimul
add
xchg
ja
cdq
loope
mov
cmc
mov
sbb
sti
xor
cmc
(bad)
cwde
ret
lods
mov
cmc
add
sbb
pop
push
enter
bound
aam
aas
daa
sbb
hlt
add
xchg
es
pop
and
test
mov
jecxz
pop
and
sub
fisttp
rol
hlt
pop
fnstcw
xor
inc
nop
mov
add
jg
push
(bad)
lods
xchg
inc
fist
sub
lea
icebp
(bad)
add
and
(bad)
fdiv
xor
inc
ins
dec
inc
pop
cs
lahf
mov
add
test
sub
addr16
mov
mov
mov
fnstsw
fwait
sahf
jo
xchg
ficomp
ss
pop
pop
loope
inc
cmps
iret
push
inc
stc
pop
scas
adc
repz
adc
inc
mov
sub
xor
ins
fild
pop
or
push
or
outs
ss
cs
mov
jge
div
or
push
in
xchg
addr16
nop
xchg
dec
es
int3
inc
clc
sbb
test
sbb
xchg
clc
mov
sub
inc
inc
movs
iret
jno
fnstcw
add
xchg
mov
sbb
add
mov
dec
(bad)
push
inc
mov
fisttp
jb
gs
test
retf
cmps
outs
scas
mov
fsubp
and
push
jl
not
push
jne
mov
mov
out
jmp
jecxz
mov
retf
sub
pop
out
mov
push
mov
shr
push
das
mov
push
mov
out
cwde
gs
stc
lods
dec
push
xchg
ins
loop
data16
rcr
sub
mov
adc
dec
xchg
or
rol
aad
pop
push
jb
pop
outs
push
imul
xlat
repnz
and
rcl
outs
int
push
dec
dec
mov
(bad)
arpl
inc
mov
movs
xchg
stos
xchg
loop
out
inc
movs
xchg
xor
std
mov
cmp
pop
cmc
mov
es
xchg
inc
stos
pop
push
sti
mov
and
mov
icebp
daa
ds
mov
pop
daa
add
movs
imul
dec
inc
cs
push
xor
jno
nop
stc
aas
clc
loop
mov
inc
sbb
ins
pusha
aaa
call
mov
inc
rol
jnp
inc
icebp
push
fsub
push
jae
or
(bad)
sbb
mov
and
int3
call
mov
mov
xor
jmp
cmp
stos
pushf
(bad)
sbb
push
fs
sub
daa
mov
out
out
push
sbb
add
add
(bad)
mov
pop
ins
fs
jb
xchg
push
mov
jg
dec
xchg
xchg
in
aad
out
mov
cwde
pushf
in
and
or
xchg
and
cmp
inc
dec
clc
or
into
push
(bad)
mov
push
in
loopne
jmp
retf
push
dec
rcr
adc
xchg
pop
sbb
xlat
hlt
retf
pop
xor
icebp
dec
out
or
in
dec
xchg
or
push
out
repnz
loop
movs
hlt
pop
jne
call
popf
leave
inc
sub
pushf
sbb
jo
frstor
sub
and
outs
mov
inc
stos
aaa
pop
cmp
outs
mov
fadd
ror
das
xchg
arpl
cmps
int
into
adc
call
loop
xor
pusha
js
movs
in
adc
dec
push
jns
(bad)
jmp
mov
mov
and
xlat
mov
(bad)
js
mov
or
mov
xcrypt-cbc
cmps
push
adc
xlat
in
(bad)
mov
pop
(bad)
sub
add
aad
aam
pop
hlt
dec
ja
in
lock
idiv
lods
std
loopne
jno
push
mov
sbb
or
icebp
loop
enter
or
dec
sub
loope
dec
int3
mul
lea
ss
fisub
adc
jge
les
or
and
mov
inc
jne
ins
xchg
adc
xor
mov
mov
in
or
vpmadcswd
hlt
mov
call
mov
lods
pop
fadd
mov
data16
cmp
jmp
out
cmp
dec
cli
push
and
iret
imul
ins
int
push
je
mov
adc
mov
xor
loopne
dec
jns
xor
mov
mov
pop
stc
xor
(bad)
mov
jns
ds
jnp
lods
push
and
push
pusha
dec
pop
xor
in
mov
iret
fcmove
fs
lods
cdq
mov
aam
dec
mov
pop
pusha
push
rcl
lods
inc
ins
in
cmp
mov
jge
add
test
inc
sub
push
mov
imul
and
push
int
add
ffree
pop
push
push
dec
sbb
repnz
jge
inc
test
and
cmps
xchg
rcl
retf
nop
push
shl
loopne
dec
or
std
retf
pop
call
rcl
add
sbb
xchg
scas
mov
sbb
inc
in
mov
jnp
and
out
sbb
dec
push
adc
retf
dec
mov
jge
jle
or
scas
mov
enter
fdiv
sbb
shl
cmp
inc
aaa
pop
sub
adc
iret
or
dec
fst
iret
xchg
ds
fs
js
mov
adc
and
and
push
int
and
(bad)
hlt
pop
ins
mov
sti
push
cmp
sbb
jmp
adc
sar
mov
sub
scas
mov
je
ret
xchg
rol
loope
add
cmps
repz
sub
add
ins
xchg
rcl
stos
xchg
out
stc
es
dec
shr
mov
push
mov
jecxz
pop
inc
sbb
or
mov
mov
push
popf
xor
addr16
outs
iret
dec
cmp
cmps
add
paddsb
dec
xor
jns
fisttp
cli
dec
or
jno
ja
lds
xor
retf
add
ja
rcr
movs
(bad)
lock
out
bound
jo
fiadd
xlat
cs
repnz
jmp
adc
hlt
sub
jb
iret
mov
fdiv
bound
adc
test
add
jle
push
xchg
or
jae
les
int3
cs
out
push
jmp
mov
pop
xor
mov
mov
outs
jmp
inc
sti
xchg
sbb
dec
ret
mul
call
fidivr
push
cmp
inc
test
nop
mov
or
iret
cli
shr
repnz
icebp
outs
pop
hlt
sub
fwait
mov
mov
rcl
cmps
xchg
adc
pop
cmp
push
sbb
call
mov
jmp
inc
lds
cs
fwait
inc
aam
jnp
iret
int3
pushaw
xchg
sar
je
xor
adc
test
cwde
jo
mov
lods
scas
adc
and
leave
sbb
ret
ins
je
mov
push
hlt
call
pop
push
and
push
sbb
mov
jmp
sbb
cmp
push
pop
mov
iret
(bad)
sbb
ret
sbb
xor
cmp
cmc
lock
out
ret
sbb
push
or
add
pop
das
push
sub
or
adc
rcl
mov
or
in
std
cmp
out
enter
int
cmp
or
dec
mov
ds
xchg
dec
sub
jb
mov
leave
and
movs
(bad)
push
cmp
imul
mov
iret
stos
iret
retf
aad
push
retf
add
sar
jne
cmps
into
sbb
fadd
mov
pushf
jp
mov
cmp
les
push
mov
mov
jmp
mov
push
dec
leave
adc
dec
cs
in
inc
stos
fbstp
mov
rcr
std
cmps
jae
lods
or
addr16
or
lahf
ja
sub
xchg
out
adc
sub
test
retf
pop
and
test
gs
push
dec
scas
sub
sbb
or
cmp
imul
ins
into
sbb
cmp
repnz
xchg
mov
maxps
mov
loopne
ret
cmp
cs
(bad)
psadbw
(bad)
sbb
aas
pop
out
retf
or
fidiv
loop
out
cmps
std
sti
mov
adc
outs
fstp
hlt
aas
stc
sti
sar
je
movs
call
sub
mov
jne
loope
jmp
popf
adc
mov
mul
retf
les
scas
aam
or
jmp
inc
cs
int3
cmp
jle
out
mov
fisubr
mov
jo
cmp
lahf
ja
repnz
push
mov
push
and
arpl
fs
rol
jns
ss
and
cli
mov
in
dec
test
add
idiv
popf
add
repnz
and
add
push
mov
mov
push
popa
pop
leave
cmp
push
pop
xchg
in
push
xor
out
fwait
cmp
outs
jae
neg
xlat
or
fisttp
jno
cld
cmc
fiadd
sbb
xchg
test
cmp
mov
mov
inc
pop
dec
push
adc
int
fsubr
test
js
fs
jb
mov
pop
div
mov
push
push
or
imul
and
imul
pushf
push
xchg
mov
adc
xchg
dec
jl
sti
push
mov
add
stc
rcl
cmp
mov
xchg
or
call
inc
mov
sbb
stos
add
aaa
adc
clc
inc
mov
cwde
inc
and
jbe
add
aam
pusha
rol
test
pop
push
cs
sub
repnz
out
data16
ret
fsub
int3
neg
cmp
xchg
repz
xchg
or
cld
mov
adc
cli
inc
sub
sub
sahf
mov
das
ret
jge
popa
stos
pop
mul
and
les
hlt
mov
arpl
add
ss
pop
imul
jbe
mov
and
or
and
ins
mov
cli
fiadd
das
hlt
in
dec
lods
mov
pop
mov
stos
pop
aam
inc
les
xchg
inc
mov
repz
iret
in
inc
shl
push
sar
(bad)
and
and
pmaxub
aad
xchg
and
or
inc
aaa
adc
jo
push
scas
pop
sar
xor
(bad)
fbstp
cmp
out
stc
ins
cdq
(bad)
cmp
jmp
into
jbe
scas
mov
ret
in
sub
cmp
sbb
icebp
lods
icebp
and
sar
and
dec
add
call
iret
popf
cld
popf
adc
mov
repnz
in
xchg
cmp
dec
sti
jmp
dec
push
mov
js
sbb
mov
test
shr
mov
dec
adc
int3
dec
sub
xchg
addr16
or
enter
mov
cs
loope
cmc
adc
repnz
int3
daa
fwait
pop
xchg
loop
stos
stc
fwait
mov
arpl
mov
out
call
adc
fstp
mov
cmp
dec
cmps
fwait
(bad)
int
arpl
aas
inc
loope
xchg
div
add
push
aaa
add
inc
div
dec
jle
outs
add
inc
pop
adc
retf
mov
stos
jbe
add
popa
cmp
fimul
pop
inc
adc
rol
stc
les
lods
popf
dec
ja
pop
mov
mov
cmp
(bad)
loope
push
pop
std
jecxz
je
push
push
and
xlat
mov
mov
inc
sar
pop
imul
cs
add
dec
mov
ins
cli
cmp
out
adc
push
dec
mov
xchg
add
bound
mov
fwait
and
sbb
and
mov
repz
push
pop
out
sbb
loopne
mov
outs
add
fild
xlat
or
in
xchg
cmp
rcl
cli
fdivr
repnz
ins
mov
mov
or
inc
icebp
fisttp
fbstp
mov
push
frstor
inc
sahf
push
mov
sub
cmp
and
into
call
pop
xor
mov
idiv
cdq
inc
xchg
(bad)
in
popa
(bad)
and
xor
and
fcomp
add
adc
cmps
aad
pop
sub
sbb
aaa
stc
call
(bad)
iret
pusha
retf
sub
sahf
fs
scas
ficomp
cdq
ret
fs
ds
mov
sbb
jbe
xchg
stos
or
mov
mov
mov
mov
sub
rcl
retf
jnp
nop
iret
test
push
imul
loopne
dec
fisttp
(bad)
mov
in
sar
adc
stos
pop
adc
fs
push
pop
pop
pop
rcr
je
imul
pop
repz
add
fld
add
push
cli
xor
mov
(bad)
sub
jle
es
icebp
inc
mov
xchg
lods
ror
jnp
mov
mov
ds
call
xor
jl
jnp
and
push
mov
ficomp
ffree
mov
ins
mov
outs
sub
push
adc
scas
les
push
inc
int3
mov
js
test
pop
jno
ret
(bad)
sbb
enter
adc
cmp
dec
cmp
pop
inc
fdiv
int3
push
js
(bad)
fldenv
scas
jecxz
in
mov
xor
mov
imul
fsub
push
push
xor
aad
call
mov
push
cwde
loope
mov
mov
adc
mov
and
dec
xchg
jmp
sub
or
fbld
movs
mov
(bad)
retf
je
je
enter
xor
add
hlt
mov
adc
rol
dec
push
add
dec
popf
mov
(bad)
xor
in
pop
jp
adc
(bad)
aas
dec
inc
xor
loop
dec
pop
es
sbb
or
call
in
add
test
shr
jbe
aad
imul
inc
or
xor
xor
xchg
jge
jge
push
jge
aaa
ror
cmp
mov
scas
sub
mov
mov
not
mov
fdiv
xor
mov
fidiv
add
in
xor
shl
(bad)
nop
ret
js
cwde
int
jmp
stos
xlat
aad
mov
mov
pop
push
sbb
and
retf
or
add
cmp
rol
or
int3
cs
aad
int
in
xchg
or
dec
iret
jne
dec
mov
pop
and
jbe
dec
sbb
into
sub
adc
inc
mov
(bad)
je
in
pop
mov
xor
daa
popf
pop
ret
out
retf
into
scas
and
and
jp
fcom
es
movs
int
fdivr
inc
xchg
rcl
cli
mov
addr16
call
inc
mov
jecxz
jo
xchg
xor
loopne
lahf
jo
jle
popa
dec
mov
pop
add
enter
out
mov
in
jne
jb
cli
loope
ror
rcr
mov
(bad)
(bad)
sbb
or
cdq
imul
scas
pop
cwde
shr
ins
and
cmp
lock
sbb
aam
mov
mov
jne
mul
cmp
movs
jnp
inc
fnstenv
test
iret
call
jns
loopne
(bad)
lock
ficomp
ja
popa
pop
inc
mov
(bad)
aam
fidiv
cmp
add
retf
fwait
xchg
push
push
sbb
cwde
loop
adc
xor
jbe
ror
pop
pop
test
pop
push
test
xor
out
xchg
mov
ins
cli
push
adc
mov
dec
cmps
pop
inc
(bad)
out
sbb
pop
push
dec
jne
jle
sahf
outs
xor
das
xor
daa
out
jb
mov
icebp
retf
leave
fild
call
enter
fnstcw
cs
inc
pop
cmps
cs
xchg
dec
imul
dec
test
neg
repnz
pop
test
jns
cmps
lods
xlat
sbb
sub
mov
jnp
sub
push
pop
push
movs
lahf
fistp
test
lods
mov
inc
and
enter
xor
mov
or
rol
push
(bad)
rcl
aad
test
sbb
jnp
ins
jmp
mov
sbb
fcom
or
jne
enter
test
xchg
test
adc
clc
jecxz
push
inc
push
cwde
fs
mov
ins
mov
in
rol
mov
fcom
inc
mov
sbb
inc
loope
jg
pop
idiv
or
cmp
out
fcomip
aam
ins
or
xor
mov
retf
(bad)
dec
call
pop
fmul
cmp
sbb
xchg
das
sub
cli
les
jae
and
sub
inc
pop
mov
pusha
jne
add
mov
repnz
sbb
jmp
cdq
dec
mov
test
adc
clc
push
cmp
dec
ffreep
lea
mov
stc
ins
cli
push
push
fwait
push
or
in
pop
popa
sub
retf
or
or
and
jmp
test
pop
adc
ja
aam
sar
push
sub
mov
pop
fisttp
inc
cli
shr
jb
add
or
sbb
adc
loope
enter
mov
out
adc
cdq
jne
push
das
cmps
leave
scas
outs
mov
mov
cmp
mov
daa
push
in
scas
sahf
imul
pop
mov
pop
pop
pop
or
pop
push
push
jle
sub
or
xchg
int
test
fs
stos
and
mov
fmul
(bad)
out
jge
mov
fs
adc
cwde
idiv
adc
push
ss
stos
xlat
cmp
add
sub
xor
adc
push
inc
inc
xor
inc
mov
ss
imul
daa
mov
fcmovu
pop
ja
cmp
push
imul
add
xor
xor
mov
hlt
inc
mov
adc
pop
ins
add
xor
add
sahf
jg
sar
or
dec
cs
xor
les
adc
mov
fmul
jae
dec
mov
mov
jb
mov
test
data16
sbb
push
stc
out
adc
inc
or
aad
stos
in
mov
fsub
mov
call
pop
xchg
ins
fcom
dec
loopne
mov
data16
jl
adc
call
xor
add
cs
clc
ror
popf
mov
outs
popf
push
mov
mov
dec
test
push
jle
jg
and
and
mov
hlt
movs
push
lods
and
aaa
dec
xchg
add
mov
out
fs
daa
sub
rcl
aad
push
xchg
icebp
rol
enter
adc
imul
jmp
stc
add
into
stos
mov
inc
fnsave
jp
mov
inc
sub
sbb
aam
mov
daa
push
inc
int
call
jbe
push
add
repz
mov
pop
mov
loope
and
ret
fcomi
das
xor
add
mov
cmp
cmp
imul
cmp
fwait
push
ror
loop
fdivr
cwde
rcr
add
xor
adc
xor
dec
push
shl
jp
in
dec
mov
inc
mov
shl
ja
sub
adc
enterw
test
into
ins
add
mov
sar
sahf
imul
loop
inc
cmp
jno
rol
cld
call
push
movs
or
sub
xchg
in
dec
les
add
pop
mov
je
or
test
sahf
inc
scas
repnz
das
outs
sub
fldenv
enter
stc
movs
jae
sub
aam
inc
sub
inc
es
mov
xchg
lock
jbe
shl
mov
mov
or
xor
test
or
and
je
shl
cmp
mov
xlat
(bad)
sbb
scas
fistp
test
ss
shr
inc
frstor
push
push
(bad)
popf
push
jl
imul
lds
movs
and
or
mov
jbe
xor
sub
shr
pop
repz
xchg
(bad)
push
add
in
je
cwde
pop
xchg
mov
sub
dec
xchg
mov
sahf
inc
push
jb
pop
pop
es
mov
loopne
adc
inc
jb
or
fcomip
(bad)
sbb
cmc
sub
pop
xlat
fwait
shl
int3
add
ja
sbb
add
aad
cmp
repz
inc
cmp
jmp
(bad)
cmp
sub
ret
pop
clc
mov
xchg
xchg
popa
leave
les
pop
cmp
adc
add
loopne
test
or
clc
(bad)
jbe
repnz
es
sbb
fs
mov
dec
sbb
push
add
mov
jle
aad
jnp
nop
and
push
mov
loopne
xor
xor
int3
jno
add
or
call
into
mov
jne
stos
mov
fisttp
shl
dec
fnstcw
pop
out
sub
mov
dec
xor
mov
pusha
test
adc
and
cld
aas
sub
retf
cmps
aam
jp
out
mov
ror
inc
out
mov
push
xor
dec
push
sub
retf
retf
int3
bound
mov
fwait
out
imul
rsm
and
js
in
xor
push
adc
imul
jb
sbb
dec
out
push
sahf
inc
mov
stos
outs
pushf
ins
push
xchg
outs
xchg
aaa
out
mov
into
inc
loop
adc
adc
les
and
(bad)
out
mov
(bad)
mov
ret
cli
sahf
jp
dec
les
out
ins
fnsave
or
data16
push
and
mov
fadd
call
out
out
out
xchg
cs
cs
push
xchg
pop
fnsave
leave
inc
in
and
mov
mov
mov
out
ror
popa
cmps
dec
push
ins
fst
mov
ins
push
(bad)
sahf
dec
and
(bad)
xchg
mov
jo
inc
cmp
mov
pop
iret
ja
adc
mov
fldcw
push
rcl
retf
fidiv
mov
js
push
adc
xchg
mov
dec
xor
sbb
imul
data16
mov
lock
mov
adc
sbb
lahf
call
ret
dec
mov
mov
scas
mov
pop
imul
jmp
ins
mov
xor
fucomip
xchg
imul
test
cmp
mov
sbb
gs
xor
mov
cmp
xchg
mov
jle
xor
pushf
push
fcmovnu
cmps
push
xchg
outs
inc
inc
xchg
sbb
push
fldenv
mov
push
jl
adc
pop
lds
cwde
bound
mov
pop
sub
jle
movs
call
adc
jl
pop
pop
mov
cmp
jg
mov
push
(bad)
mov
pop
adc
xchg
inc
lods
dec
lods
push
ret
dec
and
outs
fiadd
sub
add
push
in
push
sub
mov
sub
inc
popa
out
in
sub
xor
jmp
aaa
arpl
sub
ja
jl
and
or
xor
xchg
and
call
repz
and
ds
pop
add
call
mov
dec
or
ds
xchg
cwde
shl
push
pop
push
(bad)
loop
push
out
in
loope
mov
cmp
pop
cmp
data16
add
jb
add
fucomp
xor
pushf
fwait
in
imul
inc
xlat
inc
cmps
aad
hlt
fstp
sub
outs
rol
ret
data16
cmp
fisubr
sar
add
(bad)
mov
push
sub
popa
ret
jl
cmp
fwait
test
pop
xor
xchg
push
int3
test
in
sub
ja
pop
sub
jecxz
mov
in
xchg
dec
inc
jo
adc
xchg
call
pushf
cmovl
out
dec
adc
add
jno
mov
sbb
loopne
jne
fcomp
pop
fadd
jb
fwait
adc
ds
jbe
ret
xor
rol
or
or
adc
loop
movs
add
xchg
xor
mov
adc
mov
jbe
add
int3
fldcw
stos
repnz
and
addr16
jb
(bad)
bound
jmp
daa
test
jne
movs
add
add
mov
out
rcl
je
mov
jnp
iret
cli
into
xchg
xor
jae
ret
mov
cdq
test
mov
lds
std
dec
push
and
xor
push
pop
push
and
cmp
add
std
test
mov
(bad)
leave
cwde
jmp
cld
jmp
sbb
aad
hlt
(bad)
dec
mov
loope
or
sub
inc
cmp
sahf
lods
xor
or
icebp
or
vpaddsw
jg
fdiv
icebp
mov
movs
cdq
xchg
ss
call
outs
or
bnd
pop
mov
fwait
mov
jns
outs
mov
fs
ret
cld
push
mov
mov
test
loop
push
and
mov
mov
jnp
adc
push
xchg
adc
mov
outs
pop
fcmovbe
lea
xchg
pop
pop
mul
and
enter
scas
xchg
or
lock
sbb
frstpm(287
mov
or
fisub
xchg
cmps
repz
push
mov
mov
jmp
pop
sbb
cmp
xor
mov
fwait
repnz
add
fwait
out
mov
mov
mov
cli
stos
mov
dec
cwde
(bad)
test
jmp
test
and
xchg
mov
shl
push
imul
aaa
mov
lea
or
xchg
push
dec
cmp
push
(bad)
rcl
jl
push
mov
fs
repnz
inc
(bad)
sub
pushf
mov
xchg
dec
bound
mov
and
mov
retf
mov
lock
mov
and
xor
push
inc
push
movs
stos
(bad)
fs
or
xor
pop
pop
dec
xor
fist
jmp
fcmovbe
jmp
inc
push
sti
popf
xor
pushf
pop
add
cmp
push
sub
or
push
ret
inc
outs
pop
adc
mov
pop
dec
aas
pop
jo
mov
or
out
or
cs
mov
or
jg
mov
(bad)
and
pop
rcr
jle
push
jge
xor
pandn
xor
and
imul
out
pop
pop
ret
add
ret
sti
xchg
push
adc
imul
and
pop
dec
inc
jae
push
push
pop
(bad)
sbb
xlat
push
test
repz
push
xchg
(bad)
cmp
shr
lds
mov
repz
or
cmp
sbb
push
sbb
sbb
outs
jp
add
or
cmps
ins
je
xor
js
sbb
xchg
in
jg
into
and
xchg
xchg
cmp
repnz
enter
leave
and
adc
xchg
mov
jge
jg
stos
sahf
aam
adc
and
aam
mov
ins
cmc
fld
test
adc
outs
cmp
mov
dec
adc
or
lock
(bad)
add
pop
lea
shr
test
cwde
mov
mov
push
cmc
lods
emms
leave
push
pop
jl
lea
xor
fwait
or
repnz
sub
(bad)
xor
ret
sub
sub
stc
aaa
popf
xchg
mov
loopne
movs
js
test
inc
sti
popa
adc
(bad)
in
scas
enter
scas
je
cmp
adc
mov
loope
cmp
mov
aaa
adc
movs
std
pop
mov
jnp
mov
loope
jae
in
add
mov
pop
pushf
sub
and
push
cmp
jge
xchg
xor
ret
jge
rdpmc
test
push
jecxz
rcr
inc
sbb
shl
shr
adc
inc
arpl
inc
(bad)
out
jmp
retf
stos
sub
mov
mov
add
mov
idiv
adc
pop
cmp
into
lods
mov
dec
cdq
jmp
ficom
jns
push
xor
cmp
dec
or
test
xchg
enter
popa
cmp
dec
mov
jmp
add
stos
call
fnstsw
and
std
jle
push
test
push
arpl
aaa
pop
add
fldenv
jno
rol
jns
push
and
sar
pop
les
rcl
add
scas
dec
std
xchg
jae
sbb
addr16
shl
mov
stos
dec
xor
pop
(bad)
arpl
aaa
mov
shl
ficomp
sbb
(bad)
stc
popf
xlat
mov
ds
gs
call
jp
fsubp
mov
clc
jae
js
add
mov
stos
and
xchg
stc
and
loopne
(bad)
rcl
mov
ret
adc
xor
and
inc
in
movs
(bad)
jg
sub
sahf
ds
in
repz
jge
mov
add
jbe
out
pop
mov
adc
and
push
inc
xor
mov
jl
(bad)
mov
inc
dec
sbb
xchg
or
cli
lahf
mov
pop
pop
je
dec
push
jg
(bad)
inc
add
lock
push
push
repz
mov
push
stos
mov
mov
push
push
adc
ds
in
test
ret
push
(bad)
push
sub
push
xchg
mov
inc
push
(bad)
xchg
push
sbb
das
mov
push
or
pop
xor
dec
sar
push
mov
bswap
inc
adc
outs
cmp
out
lock
(bad)
inc
mov
add
dec
aas
pusha
and
gs
test
loop
sub
push
stos
popa
(bad)
fucomp
jb
es
(bad)
push
cmp
lock
shl
fadd
add
adc
and
sub
lods
and
xchg
cmps
aaa
dec
in
push
add
popf
(bad)
dec
or
nop
dec
pop
add
mov
add
inc
(bad)
add
push
shr
xchg
ins
movs
or
add
mov
xor
mov
js
and
mov
les
mov
popf
ja
cmps
jmp
in
loope
dec
repz
cli
mov
movs
inc
out
dec
in
pop
retf
and
or
jge
jle
sbb
lock
mov
push
movs
inc
cwde
lds
inc
icebp
je
add
retf
push
cmp
mov
int
xchg
jns
leave
(bad)
and
mov
cmps
xor
inc
movs
sub
movs
sbb
dec
add
in
loope
or
or
outs
retf
fs
sub
xchg
in
popa
add
aad
add
dec
pop
push
inc
mov
mov
int3
cwde
aaa
popa
leave
dec
adc
inc
into
push
cmps
addr16
outs
js
jnp
(bad)
sbb
lods
ja
pop
(bad)
iret
and
cwde
test
addr16
pop
dec
out
sub
push
adc
sub
mov
fwait
xchg
int
ins
(bad)
test
lds
lock
pop
cli
out
popa
and
pushf
ds
push
add
shl
mov
mov
mov
popf
in
data16
jle
imul
cmc
fdivrp
ret
push
jns
inc
mov
out
inc
(bad)
arpl
mov
sbb
xor
es
bnd
jns
pusha
fisub
fcom
pop
data16
shl
push
into
cmp
adc
mov
or
test
aaa
xlat
call
add
fisubr
dec
mov
cdq
das
test
ret
sbb
adc
push
pushf
shr
push
cmp
rep
xchg
mov
test
and
lahf
inc
pop
or
popf
sbb
push
jo
fwait
ss
push
mov
mov
jle
(bad)
jp
xor
add
nop
leave
jne
outs
jmp
mov
cmp
in
arpl
cdq
mov
outs
int
mov
xor
call
add
enter
push
sbb
xchg
xchg
inc
xlat
xchg
movs
ja
test
mov
out
xchg
popf
ss
imul
mov
adc
lahf
sahf
idiv
push
add
outs
sub
cmps
rol
or
push
mov
push
ror
mov
in
lock
dec
dec
push
xchg
leave
cmp
outs
sub
or
pop
sbb
dec
or
push
sbb
sbb
push
sbb
jno
pop
cwde
mov
push
and
outs
push
xor
into
mov
inc
push
enter
test
sbb
mov
(bad)
(bad)
push
mov
cmps
xlat
rcr
mov
(bad)
mov
int
into
data16
inc
xlat
jmp
sub
cmp
push
jo
lock
imul
shl
sahf
and
(bad)
mov
jp
js
test
and
mov
out
mov
dec
and
cmps
in
lds
xor
sub
pop
pop
cmps
mov
pop
xchg
lods
(bad)
push
outs
mov
mov
ja
adc
or
cmp
pushf
inc
dec
jno
adc
add
mov
mov
pop
mov
leave
out
(bad)
add
push
xchg
enter
add
dec
retf
sbb
dec
std
and
cmp
scas
ret
clc
or
pop
jp
out
mov
cmps
inc
pop
xchg
push
test
mov
xchg
jne
cwde
and
stos
fwait
cmp
ret
xchg
movs
add
adc
clc
mov
or
sub
in
sbb
jle
xchg
mov
(bad)
mul
out
call
test
or
cmc
mov
or
lods
sbb
pop
popf
xchg
pop
jecxz
xor
leave
jae
dec
pop
cmc
mov
jno
dec
inc
push
pop
leave
repz
shr
popa
dec
aad
push
sub
sbb
cmp
in
sub
xchg
(bad)
call
jae
or
sbb
int3
dec
bound
sbb
outs
push
sbb
mov
mov
pop
cmp
jns
retf
mov
dec
test
xlat
xor
addr16
mov
add
push
pusha
xchg
outs
out
mov
imul
xchg
mov
out
ja
frstor
xor
xor
mov
inc
movs
mov
mov
sub
mov
xchg
ins
test
push
aad
jecxz
fidivr
cmp
aaa
daa
repz
sbb
icebp
pop
xchg
jne
cs
push
mov
jle
out
and
std
(bad)
and
mov
xchg
mov
outs
mov
sub
add
fidivr
dec
jmp
jecxz
retf
test
ficom
clc
fcom
in
cmp
movs
push
jecxz
dec
sbb
mov
adc
fmul
pushf
ret
test
aas
cmp
xor
and
jmp
sub
adc
(bad)
outs
cmps
xacquire
sub
cmp
arpl
sahf
test
xor
std
popa
jl
push
jg
clc
dec
or
pop
popa
out
arpl
xor
movs
aaa
pop
add
mov
loopne
sub
push
imul
call
in
dec
sbb
dec
push
and
mov
out
xor
mov
jne
mov
cs
cld
push
add
cs
and
xor
outs
push
mov
pop
jmp
add
jo
stos
adc
and
jnp
ins
mov
sub
mov
loop
dec
stos
movs
pop
adc
rol
inc
popa
xor
mov
fcom
cs
push
and
outs
ficom
pop
sub
mov
sahf
push
add
lahf
push
xchg
clc
cs
les
aaa
retf
imul
push
sti
push
aaa
test
sbb
xor
jnp
cmp
push
into
adc
or
or
jp
pop
test
xor
fstp
xor
pop
js
xchg
outs
movs
sub
or
sub
mov
adc
sub
push
adc
pop
push
sub
mov
aam
div
cmc
lahf
inc
loop
dec
inc
add
push
push
adc
inc
repz
enter
lods
ds
sbb
movs
bound
inc
jbe
sbb
popf
jle
aam
or
push
xchg
and
outs
add
call
mov
dec
into
shr
push
rol
dec
cmp
jg
lock
mov
fst
ficomp
aas
xor
jp
sbb
and
mov
mov
xlat
add
jp
mov
fnsave
cdq
out
xor
push
mov
ins
(bad)
fisttp
shl
retf
mov
sbb
data16
xor
or
(bad)
mov
push
out
das
mov
fdiv
mov
sbb
xchg
je
mov
mov
movs
out
(bad)
dec
jle
stos
sub
lods
(bad)
jb
sub
and
dec
jnp
mov
rcl
out
inc
sbb
movs
inc
ss
lods
push
push
fmul
pushf
ja
addr16
in
out
data16
xor
shr
dec
shl
push
xor
(bad)
outs
add
in
mov
mov
adc
retf
in
inc
(bad)
push
xor
mov
mov
cmp
ret
fs
jecxz
pop
push
sbb
fwait
xchg
cmc
adc
call
test
js
pop
mov
retf
sub
ins
outs
and
icebp
aaa
sbb
ins
push
and
jb
jl
or
mov
mov
sbb
jge
sbb
inc
jne
pop
movs
inc
xlat
popa
xor
lods
sub
out
add
pop
jecxz
pushf
pusha
xchg
std
jl
cwde
aaa
and
xor
pop
jno
sbb
mov
out
push
push
hlt
jns
sahf
dec
pushf
aad
lods
daa
scas
pop
out
retf
into
jecxz
js
enter
add
stos
loopne
loopne
fimul
dec
and
or
pop
cmp
ror
sub
mov
jb
jmp
int
and
inc
mov
mov
fcomi
ins
test
gs
push
int3
fmul
das
cmp
xchg
psrad
inc
add
lods
jle
outs
xchg
mov
mov
bound
mov
adc
adc
jmp
das
add
aaa
in
icebp
popa
push
sub
sub
jae
(bad)
sahf
mov
cmp
cmp
ss
leave
jmp
jge
pop
or
popa
frstor
je
pop
jg
cmp
sub
in
fisubr
(bad)
stos
dec
fcomi
or
js
rol
add
dec
sbb
pop
adc
mov
(bad)
mov
pop
and
out
push
cmps
adc
stos
cmp
xchg
push
add
retf
inc
jae
loope
xchg
push
or
inc
inc
loop
ds
ror
in
adc
cmp
or
ror
or
mov
cdq
pop
mov
xchg
(bad)
cmp
adc
sbb
xchg
pop
(bad)
cmps
xor
mov
popa
icebp
in
pop
(bad)
cmp
or
shl
cmp
mov
cmovae
outs
adc
fcomi
(bad)
cmp
cmp
add
int3
call
sub
push
pop
cwde
lea
shr
ins
cvtps2pi
pop
into
add
push
mov
into
clc
mov
(bad)
js
adc
call
mov
jg
clc
imul
adc
jne
stos
cs
or
or
out
mov
mov
or
adc
jbe
xor
jb
sub
outs
js
in
pop
push
imul
mov
rol
ds
rol
cdq
lds
(bad)
icebp
in
lahf
cmp
unpcklps
push
mov
dec
ss
pop
ret
push
dec
leave
aaa
test
arpl
or
repz
mov
les
add
rol
aam
stos
adc
outs
loopne
jmp
pop
hlt
jo
or
xchg
or
loope
pop
aam
or
movs
(bad)
xchg
or
dec
(bad)
jno
pop
mov
cmp
mov
lahf
jp
retf
mov
jp
jge
outs
data16
mov
jmp
cli
add
xor
xor
add
inc
adc
les
sub
push
jmp
inc
loopne
mov
or
add
out
dec
pushf
xchg
call
add
shr
push
jmp
lahf
jl
out
xlat
es
add
je
cmps
movs
stos
fs
iret
std
(bad)
mov
js
mov
sub
dec
(bad)
mov
mov
and
xor
mov
inc
test
lods
pop
mov
xchg
in
push
sti
dec
cdq
push
movs
sahf
std
mov
not
cmp
inc
xchg
cmp
adc
hlt
loop
std
es
mov
imul
and
inc
sub
inc
enter
lahf
or
bound
pop
lds
push
or
mov
adc
cmp
inc
inc
inc
sbb
cli
xlat
gs
mov
jnp
mov
fwait
dec
dec
fld
out
icebp
xlat
retf
pop
inc
stc
(bad)
pop
addr16
call
test
out
pop
jne
movs
sbb
mov
shr
mov
push
jb
push
sbb
jg
mov
inc
fisub
fbstp
je
mov
dec
test
mov
lea
ss
mov
xor
jae
jl
mov
ins
cmp
pop
push
sub
jmp
(bad)
test
fnsave
jno
sub
pop
jb
jmp
mov
jp
aaa
xchg
shr
cs
lods
or
sti
lea
jmp
inc
jge
and
cli
repnz
jmp
sub
xor
and
sahf
adc
fiadd
aaa
xchg
sub
out
(bad)
xor
dec
cmp
sub
inc
adc
dec
push
mov
pop
stos
mov
lahf
dec
int
adc
cmc
dec
cmp
and
movs
inc
ficomp
push
pusha
sbb
xchg
jle
adc
fist
inc
inc
in
dec
pusha
xchg
scas
add
imul
mov
loope
test
sbb
dec
push
add
les
sbb
and
or
rcr
jo
mov
lods
out
mov
cmc
sbb
sub
pusha
test
adc
ror
mov
pop
fmulp
xchg
inc
sub
xchg
(bad)
and
sbb
outs
test
jmp
jns
lahf
mov
daa
lea
sti
cli
in
(bad)
xchg
fistp
cmps
mov
bound
cmp
sbb
daa
cs
(bad)
xchg
ja
mov
loop
repz
xor
jmp
xor
in
lahf
je
xchg
jnp
mov
ror
lods
push
mov
fwait
outs
xlat
pop
sbb
xor
dec
push
sub
ss
cld
jp
pop
or
xor
ds
push
shl
aas
pop
dec
ror
stos
cmp
push
pop
mov
shr
xchg
in
ss
hlt
adc
pop
mov
and
data16
cmp
and
sti
scas
and
inc
movs
ja
xchg
dec
fnstcw
fnop
loop
cmp
add
shr
push
inc
mov
jle
fsubr
push
sub
dec
add
imul
inc
sti
enter
out
in
icebp
(bad)
pop
mov
outs
adc
xchg
dec
jbe
ins
ret
leave
dec
in
out
add
xor
add
outs
pop
shl
leave
fs
ficomp
movs
dec
xor
push
out
cmp
data16
sub
xchg
shl
in
ins
or
pushf
cmp
or
ror
adc
adc
cwde
xchg
sbb
inc
lea
mov
pop
mov
shl
adc
and
jg
fwait
push
pop
xor
mov
loop
push
mov
aaa
sbb
sub
pop
pushf
xchg
clc
adc
inc
push
mov
idiv
std
dec
inc
adc
push
push
iret
in
aad
xor
mov
std
adc
inc
fisttp
cmp
xor
scas
out
aad
or
addr16
push
dec
out
xchg
or
sub
fcmovne
pop
jecxz
cmps
push
jmp
dec
pop
call
fstp
dec
pop
or
pop
xchg
cmc
shl
call
jno
es
out
sar
xchg
mul
or
jl
popf
and
inc
adc
dec
mov
inc
xchg
inc
pop
xchg
sbb
mov
rcl
icebp
stc
add
or
daa
dec
and
loop
shl
or
lahf
enter
pop
arpl
popf
push
(bad)
push
mov
fistp
mov
xchg
icebp
in
cmps
into
mov
into
cmc
lds
fs
mov
test
arpl
lahf
sub
int3
xor
jne
(bad)
pop
xchg
adc
xlat
dec
call
cmp
(bad)
mov
fldcw
cmp
xchg
xchg
sbb
aaa
sbb
ror
(bad)
sub
lds
inc
clc
cld
sbb
call
sbb
push
mov
and
sbb
std
mov
sbb
xor
lahf
ins
inc
push
test
xor
xor
push
mov
inc
push
ins
test
add
dec
push
les
adc
pop
imul
or
sbb
inc
(bad)
adc
ror
test
repz
aas
cmp
outs
xchg
add
cld
ins
aam
and
push
push
fisub
inc
xchg
test
loopne
sbb
(bad)
lods
xor
add
aaa
mov
aam
je
mov
adc
mov
push
jmp
sbb
inc
ins
add
push
push
sub
aad
push
mov
dec
fucom
and
sub
adc
adc
popa
stos
test
inc
loopne
xor
pop
jne
mov
xor
in
inc
imul
loopne
xor
mov
sub
fisttp
jmp
icebp
push
mov
test
sub
sti
out
xchg
ins
imul
loop
sub
cmp
mov
icebp
sub
and
adc
pusha
and
xor
ficom
mov
shl
pop
cmp
ret
push
(bad)
mov
cwde
or
movs
cmp
in
inc
ins
retf
popa
xchg
pusha
sti
mov
and
cs
xor
js
xchg
mov
push
mov
inc
call
(bad)
and
lods
(bad)
hlt
xchg
xchg
inc
mov
add
add
inc
fstp
add
dec
jno
push
cdq
jl
dec
sub
fdiv
mov
outs
or
ret
xor
sahf
pop
pop
enter
jge
push
dec
pop
mov
retf
js
addr16
fsubp
jl
dec
imul
pop
inc
gs
ror
rcl
mov
mov
mov
dec
mov
les
rcr
push
adc
push
xchg
pop
outs
test
gs
out
lgs
fst
xor
repz
fidivr
fcom
fbstp
xchg
bnd
mov
push
inc
add
mov
jmp
dec
in
dec
rol
or
sbb
ins
iret
mov
outs
push
or
pop
test
mov
(bad)
in
add
jmp
adc
ret
retf
movups
adc
inc
jge
lods
pop
(bad)
cmp
pop
mov
jp
imul
jp
sbb
sar
or
cmp
loop
adc
mov
dec
jmp
mov
cmp
xchg
jmp
mov
sub
inc
int
(bad)
adc
movs
cmps
jg
out
fcmovnbe
inc
shl
rcl
jo
pop
scas
mov
cmc
hlt
dec
or
xchg
test
out
inc
push
cmps
sub
inc
and
mov
jbe
in
add
or
(bad)
sub
lods
cmp
jnp
test
add
outs
aaa
std
clc
pop
sub
scas
in
fld
push
aaa
pop
cmp
out
fnstenv
jmp
fisubr
fwait
nop
aaa
aam
stos
loope
jne
sub
test
popaw
outs
nop
cmp
add
pop
sti
out
sti
sub
xor
sbb
pop
adc
sbb
mov
shl
mov
jg
or
scas
je
add
or
add
test
sbb
call
push
arpl
pop
mov
imul
cmps
xor
stos
jge
mov
jbe
cmps
push
sbb
push
mov
fucomp
pop
fwait
mov
jl
mov
call
test
and
or
push
cs
(bad)
stos
cwde
cmp
add
icebp
mov
pop
mov
xor
push
xor
cmps
sbb
lods
mov
dec
or
or
jnp
addr16
pop
mov
and
cmp
or
js
adc
test
mov
sub
(bad)
hlt
ret
push
inc
xor
jbe
out
xchg
into
add
pop
out
push
fsub
int3
mov
and
lahf
outs
int
das
lods
push
sbb
sub
movs
lods
and
pop
mov
xor
aad
and
dec
out
adc
repz
cmps
(bad)
dec
ret
jge
data16
fild
int3
scas
mov
sub
lea
jmp
test
shr
xchg
inc
jecxz
cmp
enter
sbb
ins
and
adc
arpl
adc
dec
repnz
dec
rcl
mov
stc
or
cld
in
inc
pop
test
dec
jbe
enter
addr16
mov
shr
js
dec
sub
cmp
fidivr
pop
mov
out
adc
outs
ins
push
adc
mov
data16
xchg
(bad)
push
imul
pop
xchg
movs
mov
sbb
repz
adc
sbb
pop
pop
(bad)
jmp
clc
std
sbb
push
lea
aas
mov
sub
mov
pop
adc
fs
mov
sbb
(bad)
stc
out
bound
jmp
push
inc
addr16
pop
imul
mov
popf
cmp
cmp
pusha
(bad)
bound
cmp
add
into
fisttp
dec
xor
cmps
(bad)
push
and
test
lods
loopne
imul
add
nop
cmp
push
jno
push
in
fdivr
pop
xchg
push
cmp
sahf
lods
push
or
push
pop
cmp
je
shl
leave
dec
cmp
fild
pusha
outs
icebp
or
mov
aam
movs
jle
movs
jae
xchg
mov
int
outs
pop
nop
sub
scas
jecxz
call
xchg
pop
sub
cdq
push
cmp
pop
cld
repz
mov
ret
sar
sbb
ja
add
pop
jle
cmp
lods
or
cdq
or
sbb
(bad)
in
jb
les
dec
xchg
ret
push
jge
das
pop
add
ins
inc
pop
jno
sbb
fsubr
clc
cmp
pop
sbb
sbb
popa
mov
cmps
jle
lds
ds
cdq
sub
mov
nop
cmp
xchg
test
loop
dec
inc
inc
inc
ja
ins
enter
stc
rcl
add
xchg
push
push
mov
mov
sub
add
or
ins
out
test
int3
es
cmp
ins
jo
mov
push
addr16
jns
test
or
cli
xchg
mov
dec
push
sub
test
popf
mov
jmp
xor
or
addr16
popf
sahf
sti
pop
sbb
in
ret
retf
cmc
or
dec
shl
aas
lock
in
jns
nop
cmc
cwde
ins
ds
jmp
scas
inc
les
inc
retf
pop
mov
xchg
jle
rol
mov
out
add
bound
mov
xchg
add
push
lahf
retf
retf
ret
repnz
xchg
setg
jns
jnp
das
movs
pop
jmp
iret
add
shl
sub
ficomp
rcr
add
push
pop
push
dec
sub
sub
not
ds
jecxz
ins
mov
add
xor
in
add
bnd
add
mov
movs
push
out
or
add
outs
rcl
cwde
retf
cld
push
pop
jl
add
je
fwait
pop
add
adc
inc
inc
fcomp
jl
dec
scas
nop
xchg
and
outs
sub
into
or
out
jg
icebp
(bad)
cmps
mov
fninit
and
adc
dec
div
sbb
pop
adc
fcomp
inc
daa
mov
xchg
cmp
push
dec
(bad)
imul
test
inc
fisubr
push
or
xchg
sar
lods
or
sbb
stos
(bad)
(bad)
adc
or
sbb
mov
retf
mov
mov
xchg
lahf
fwait
pop
sbb
cmp
es
jno
pop
jg
and
pop
seto
adc
push
sbb
cmp
dec
or
loope
or
jo
mov
cmp
dec
or
cwde
repz
or
push
pop
push
pop
xor
mov
push
popa
pop
stos
mov
popa
call
test
cmp
dec
mov
pusha
push
gs
aaa
rcl
pusha
dec
push
pop
jecxz
and
inc
loope
push
and
add
xchg
sub
add
xor
data16
push
jnp
fcomp
adc
pop
ins
std
and
mov
(bad)
cmp
pop
jbe
or
out
sbb
dec
test
(bad)
clc
loop
dec
hlt
add
jo
push
push
cmp
dec
int3
mov
mov
ret
(bad)
ror
(bad)
loopne
shl
nop
hlt
add
inc
jne
xchg
shr
ja
out
inc
enter
fild
sub
jno
push
jns
jle
les
fld
jb
in
(bad)
mov
mov
push
jo
xor
aaa
dec
adc
(bad)
repz
cdq
xor
and
outs
repnz
das
mov
push
outs
retf
cmps
pop
jp
or
es
mov
lahf
add
mov
(bad)
into
test
enter
pop
mov
mov
mov
cmps
pop
xor
add
mov
daa
call
in
or
adc
pushf
dec
cdq
out
stc
cwde
push
cmc
pusha
push
dec
js
ss
jmp
jne
adc
ret
jle
das
cmp
mov
jmp
int
jmp
ret
cmps
inc
xor
xor
sub
(bad)
jecxz
xchg
xchg
mov
(bad)
pop
js
outs
xchg
bound
push
xchg
fcomp
repz
sub
jne
js
jmp
(bad)
out
xchg
imul
scas
push
cmp
mov
cmps
inc
jg
test
fidivr
xchg
sbb
hlt
adc
rcl
inc
adc
pop
pusha
adc
lahf
pushf
mov
add
mov
lods
ins
outs
cwde
sub
sbb
pop
mov
jbe
pusha
jns
hlt
cmp
jge
xchg
es
hlt
rcr
out
or
xor
mov
mov
in
out
in
jno
and
int
fwait
cmp
mov
pop
pop
int
gs
sbb
inc
icebp
xchg
jle
mov
arpl
ret
es
js
or
cld
js
sbb
daa
inc
fwait
cs
push
sbb
pop
(bad)
in
imul
addr16
mov
ds
pushf
jecxz
jo
mov
xor
jge
inc
adc
adc
jo
shl
sub
movs
aas
aam
xchg
pop
and
fld
mov
lods
scas
js
repz
call
int3
and
sub
xor
aam
push
pop
stos
pop
ret
mov
ins
pop
pop
cmp
leave
shr
mov
add
(bad)
push
jae
cmp
xchg
jmp
sub
mov
inc
jl
push
jo
hlt
dec
push
mov
fcom
adc
sub
push
xor
ret
jno
call
push
inc
or
dec
and
aad
sbb
cld
adc
jmp
add
in
adc
dec
jns
imul
(bad)
or
mov
adc
ja
or
or
add
sub
cwde
iret
daa
mov
call
jecxz
outs
ins
xchg
test
dec
or
sti
xchg
vsqrtpd
pop
and
inc
mov
or
in
xor
adc
popa
mov
ret
dec
add
xor
fadd
add
xchg
es
test
mov
mov
push
xor
mov
xchg
cmp
dec
aad
dec
in
sbb
(bad)
inc
push
sbb
ss
ins
dec
mov
in
mov
(bad)
out
dec
jae
cdq
or
add
sti
jne
mov
dec
retf
and
cld
xchg
je
adc
addr16
mov
and
je
dec
out
sub
add
sub
loop
stos
adc
mov
sbb
inc
or
mov
fsubr
mov
push
xor
fwait
dec
dec
mov
inc
nop
cwde
or
imul
aaa
jp
cmp
retf
push
or
icebp
paddq
arpl
and
je
jl
xchg
bound
or
pusha
popf
movs
cs
shl
add
cmp
pop
add
cld
or
cmp
jecxz
and
push
cmp
aam
shl
mov
inc
mov
xor
jp
xchg
cmp
lea
xchg
adc
push
jmp
leave
pushf
rcr
inc
gs
xchg
popa
pop
outs
mov
adc
aad
bound
sbb
add
push
inc
sbb
sub
fild
xor
bound
(bad)
mov
mov
push
aaa
or
ror
inc
stos
jne
pop
shl
jo
dec
add
mov
cmps
pop
out
mov
out
mov
or
or
fsub
push
test
inc
aad
invd
gs
mov
rol
or
aam
inc
neg
add
mov
inc
ins
mov
out
test
adc
retf
dec
and
xor
stos
push
outs
mov
lahf
leave
lods
jo
ins
and
scas
mov
fild
sub
(bad)
stos
inc
dec
lahf
(bad)
pop
scas
dec
in
pop
fsub
addr16
adc
jne
(bad)
adc
rcl
arpl
cwde
ins
(bad)
dec
pusha
xchg
repz
adc
leave
cmp
(bad)
(bad)
and
sbb
out
pop
call
adc
test
stc
dec
pop
mov
sar
(bad)
out
lods
or
mov
cmp
jmp
ja
dec
jnp
jbe
mov
add
sub
mov
sahf
js
push
call
pop
fs
xchg
data16
pusha
repnz
frstor
xchg
mov
add
push
or
cli
movs
lods
shr
sti
loope
outs
xor
pop
inc
sub
push
push
push
jns
add
push
mov
call
jmp
pop
stos
scas
add
xchg
add
add
jae
mov
sbb
movs
cwde
mov
adc
cwde
gs
clc
outs
mov
and
dec
mov
pusha
and
inc
push
stos
shl
sub
push
or
cmp
loope
rcl
cli
sbb
sbb
push
add
mov
cs
(bad)
cwde
xor
push
jle
sbb
jg
fscale
adc
xor
in
jl
or
nop
or
and
jl
pop
movs
jns
xor
mov
lock
lock
inc
leave
fisub
and
jl
jg
add
(bad)
jb
sub
data16
cmc
out
inc
mov
xor
dec
test
xchg
movs
movs
cdq
push
xchg
mov
jle
(bad)
lea
adc
pop
mov
in
or
ja
stos
pop
test
gs
xor
aad
inc
mov
imul
mov
cdq
mov
pop
cmp
out
sbb
loopne
pop
jne
pop
cmp
dec
cs
jae
lahf
loopne
xchg
outs
aam
jno
mov
mov
les
int
out
inc
fst
xor
dec
push
std
(bad)
cld
mov
shr
mov
repz
ret
jae
inc
(bad)
xor
data16
(bad)
xchg
fucompp
sti
scas
lods
ss
fisttp
movhps
enter
and
rcl
ja
dec
dec
(bad)
mov
enter
push
ja
pop
push
test
adc
cmp
inc
int3
xchg
stc
add
ret
push
mov
test
add
and
jge
mov
dec
shl
jg
jecxz
push
inc
or
adc
xchg
int
fadd
imul
stc
sbb
repnz
inc
dec
scas
cmp
stc
fmul
or
push
lods
out
adc
inc
mov
jmp
or
stos
lock
retf
add
cld
sbb
std
je
inc
call
adc
into
scas
daa
call
jnp
push
sbb
xchg
add
jge
xchg
pop
stc
xor
push
pop
(bad)
out
pop
and
xchg
jbe
sub
cmc
sbb
mov
int
push
lds
jle
mov
jnp
pop
mov
hlt
dec
inc
sbb
data16
movs
js
or
fs
test
adc
int3
jg
or
sub
sbb
xor
and
mul
xchg
mov
cmp
rol
pusha
mov
(bad)
and
ds
dec
adc
xchg
mov
xlat
xlat
pop
js
lahf
iret
ret
stc
int3
(bad)
jle
cwde
mov
inc
cwde
int
repz
out
inc
bound
dec
outs
sbb
cmp
repz
mov
(bad)
scas
or
fdiv
test
ss
ins
push
jge
add
dec
iret
inc
into
mov
and
cli
pop
pop
adc
pop
and
movs
(bad)
lods
in
outs
test
repz
imul
fstp
add
dec
push
in
data16
add
ret
pop
mov
(bad)
mov
add
ret
adc
sub
mov
mov
xchg
xlat
xor
fidivr
daa
pop
add
test
xchg
lods
xchg
lea
popa
(bad)
in
js
sbb
dec
xchg
xor
adc
and
xchg
arpl
push
ret
cmps
add
ret
outs
mov
ret
mov
mov
movs
push
push
in
inc
jecxz
adc
or
mov
xor
rol
in
adc
jo
ret
mov
movs
inc
lods
xchg
push
out
add
stc
test
cwde
push
retf
shr
adc
sbb
add
xor
sbb
jae
call
mov
into
add
and
cli
out
push
or
adc
xor
jns
xor
int3
sbb
daa
jne
(bad)
or
sbb
jae
pop
push
retf
outs
jae
bound
push
mov
(bad)
retf
xchg
jle
mov
movs
mov
in
add
(bad)
test
jb
nop
push
arpl
je
adc
lods
pop
(bad)
pusha
adc
fdiv
or
popf
push
ins
mov
sub
push
sub
jns
(bad)
fld
xchg
enter
ins
xchg
scas
stc
mov
cmp
adc
push
out
pop
add
out
mov
imul
int3
sub
mov
sbb
(bad)
imul
mov
(bad)
mov
jmp
out
push
call
fld
dec
add
popf
pop
(bad)
(bad)
xchg
inc
xchg
out
push
pop
jnp
add
push
aam
ret
test
xor
movs
sti
mov
les
xchg
iret
test
cld
mov
pop
add
xchg
mov
cmp
mov
and
js
int
inc
adc
pop
mov
(bad)
push
dec
je
xchg
out
scas
mov
js
sub
ins
and
push
out
pop
in
jle
fnstsw
mov
loop
cwde
jge
ds
lods
add
xchg
mov
stos
imul
hlt
call
cmp
data16
daa
std
cmc
add
xor
mov
ss
jmp
stos
xor
and
inc
jne
mov
or
adc
cmps
(bad)
fimul
sub
pop
inc
loop
es
sub
mov
mov
aas
jnp
pop
xor
ins
sar
mov
(bad)
shr
pop
sbb
(bad)
dec
xchg
pusha
mov
and
jp
or
inc
dec
fidivr
cdq
push
push
mov
retf
push
or
int3
adc
sbb
mov
xor
icebp
xor
or
dec
imul
adc
sbb
fcmovnbe
cs
inc
push
sub
pop
sbb
dec
rcr
stos
(bad)
push
push
fwait
idiv
inc
pop
rcl
add
icebp
cmp
sub
xlat
xor
mov
in
adc
mov
je
jno
out
cmps
pop
stc
sbb
out
movs
sub
pop
(bad)
jmp
or
push
xor
mov
inc
imul
movs
mov
call
icebp
adc
mov
mov
sahf
dec
add
pop
popa
pop
fsub
push
rol
push
dec
mov
xchg
pop
xchg
imul
test
mov
push
adc
call
(bad)
xchg
jp
inc
cwde
mov
mov
add
xor
adc
sbb
fistp
xchg
ror
pushf
adc
test
sbb
mov
xor
mov
fbld
test
outs
push
hlt
push
cmps
fstp
or
add
pop
push
mov
sahf
movs
mov
leave
cmps
scas
or
jl
jg
in
int
mov
fisttp
scas
cdq
push
push
lods
ret
mov
mov
lahf
or
outs
sub
mov
add
sub
sub
pop
fisubr
sbb
or
sbb
xor
pop
cwde
imul
pushf
pop
push
(bad)
xchg
cdq
pop
mov
add
inc
ins
test
mov
sbb
sub
mov
iret
push
fiadd
sbb
retf
mov
aas
xor
popf
inc
(bad)
call
fdiv
xor
push
pop
push
dec
pop
mov
repnz
jne
xchg
std
(bad)
adc
xchg
arpl
out
mov
(bad)
jmp
jp
icebp
repz
sbb
cmp
adc
fistp
daa
push
nop
add
loope
out
or
not
fist
das
aad
or
mov
lea
aas
jmp
mov
retf
mov
add
loope
hlt
jae
call
and
adc
pop
(bad)
popa
dec
xor
pop
push
add
mov
test
loope
daa
and
inc
imul
dec
(bad)
retf
not
rcl
(bad)
loopne
mov
inc
pop
sub
bound
push
mov
rol
imul
cdq
adc
cmp
imul
xchg
adc
adc
stos
xor
inc
inc
jmp
(bad)
idiv
jne
sbb
(bad)
test
sub
pop
out
mov
inc
adc
mov
mov
xor
loop
push
inc
or
jg
sbb
mov
sahf
cs
fsubr
(bad)
jle
(bad)
jo
clc
es
dec
inc
cwde
sub
and
ret
in
inc
xlat
jle
dec
das
neg
xchg
fs
sti
fsub
add
jp
cmp
loop
add
or
xorps
retf
add
jp
and
mov
and
xchg
xor
fst
mov
xchg
leave
movs
xor
jle
adc
pop
sbb
pop
add
xchg
mov
cmp
gs
push
adc
mov
ret
outs
mov
ja
retf
int3
loop
mov
adc
or
push
mov
leave
lods
into
aaa
test
mov
cmps
jl
test
inc
repnz
shl
inc
loop
leave
dec
ja
ss
mov
mov
cwde
dec
add
xor
add
xchg
dec
cmps
jmp
popf
stc
fdiv
or
mov
mov
push
add
jmp
mov
mov
cmp
xchg
call
nop
fwait
ror
xchg
cmp
push
scas
inc
(bad)
lahf
push
and
(bad)
add
cmp
sub
jle
dec
scas
jnp
data16
inc
pop
hlt
jmp
jne
icebp
popf
ficom
push
loopne
add
fst
push
mov
dec
xchg
dec
ja
jle
dec
out
add
outs
or
mov
and
add
(bad)
and
lods
mov
inc
cmps
not
inc
inc
xchg
ss
punpcklbw
push
data16
pop
call
(bad)
and
scas
fimul
push
mul
mov
push
lea
fbstp
mov
ins
jmp
push
imul
ret
inc
test
cld
adc
repz
and
xor
adc
push
mov
inc
test
cmc
std
stos
cmc
jle
add
jl
gs
pop
hlt
aad
cmc
dec
jg
int3
pop
mov
shr
xchg
test
pop
mov
dec
test
or
pop
adc
addr16
dec
ss
fwait
ds
test
shl
in
xor
pop
int
sub
data16
mov
cs
and
aad
mov
out
cmps
pop
sbb
xchg
dec
lds
fcomp
cwde
sti
sbb
xchg
pop
in
mov
in
mov
adc
xor
cmc
mov
xlat
add
lock
and
sub
mov
sub
lea
jl
adc
call
(bad)
sub
(bad)
add
std
jecxz
call
(bad)
pop
adc
in
aad
call
cmp
sub
and
pop
psubusb
ja
arpl
mov
dec
push
movs
fwait
sub
pop
mov
jle
enter
cwde
and
pop
mov
adc
fisubr
imul
jae
addr16
(bad)
lods
push
push
sbb
xchg
adc
mov
jmp
fdivr
das
ret
sbb
and
mov
test
scas
lahf
ss
pop
xlat
push
fist
add
inc
fmul
xor
xchg
mov
fistp
pop
loope
xchg
jmp
imul
mov
scas
aaa
mov
pusha
repz
mov
pop
xchg
jbe
push
jno
sbb
popf
mov
lahf
mov
and
or
mov
mov
mov
dec
mov
adc
xchg
pop
add
and
cmps
cmp
sub
fwait
push
cld
sar
cmp
jo
inc
dec
and
in
sub
add
push
rol
mov
fisttp
iret
xchg
jmp
out
js
es
push
in
aas
ins
lahf
cwde
cmc
ret
arpl
xor
outs
stos
mov
rcr
push
aas
aad
inc
fadd
push
out
out
cwde
sub
cld
sbb
push
fdivr
adc
mov
mov
lods
mov
xchg
pusha
enter
test
sub
dec
lea
test
push
add
test
xchg
mov
test
add
push
and
arpl
xchg
adc
jnp
jo
out
enter
lods
cmp
rol
adc
test
ds
pop
retf
dec
xor
push
jl
inc
push
cmp
xor
mov
jne
out
jl
add
scas
pop
xor
lock
cmps
or
cmp
dec
dec
cmp
jmp
mov
addr16
add
(bad)
cli
add
leave
or
test
cld
mov
repz
gs
enter
call
movs
mov
shr
sbb
adc
in
and
adc
jno
adc
bnd
popf
call
imul
out
out
mov
inc
push
mul
mov
not
in
clc
sub
rcr
or
enter
adc
sar
sbb
or
xor
cdq
outs
xor
pop
or
mov
loopne
cli
cld
sbb
add
jns
jae
test
lods
and
aad
nop
mov
pop
xchg
pop
sub
mov
leave
inc
leave
imul
add
xchg
into
and
or
pusha
iret
cs
push
push
pop
mov
ds
add
sub
push
mov
sub
push
add
push
sbb
mov
xlat
dec
stos
inc
sbb
pop
dec
xor
inc
lock
and
test
lds
scas
stos
or
xchg
bound
xor
mov
xor
dec
(bad)
sti
mov
lods
cwde
or
pop
je
in
mov
fmul
xor
div
inc
ret
popa
pop
in
cs
and
sbb
(bad)
inc
adc
jp
sbb
mov
sub
dec
jno
jge
enter
leave
adc
sbb
idiv
stc
push
xchg
cli
test
addr16
(bad)
mov
push
daa
mov
push
int3
(bad)
and
ins
test
into
push
lahf
and
pop
push
dec
sub
clc
fild
push
rol
pop
xchg
(bad)
les
cmps
xchg
and
scas
adc
mov
jle
mov
jns
jne
aad
fadd
jl
ret
repz
jmp
shr
mov
add
(bad)
int3
dec
sahf
or
outs
xor
imul
and
pop
int3
add
repnz
vmwrite
mov
movs
and
adc
adc
and
gs
cld
fidivr
outs
mov
mov
mov
inc
jl
mov
daa
cld
xor
dec
mov
jo
adc
adc
sahf
mov
mov
and
test
out
sub
add
int3
add
test
das
push
dec
jns
les
adc
in
sbb
xor
dec
add
ss
xor
data16
(bad)
in
push
mov
aam
xor
stos
sub
mov
(bad)
jg
enter
push
push
ret
fistp
sbb
add
cmps
movs
psubsb
leave
mov
(bad)
mov
xchg
mov
cmp
xchg
cmps
sbb
jge
call
arpl
shl
push
add
add
mov
and
pop
push
iret
int
movs
push
xor
sbb
test
test
pop
cmp
or
xchg
out
stos
inc
push
cdq
pop
gs
xchg
mov
xchg
popa
push
mov
mov
das
pop
xchg
and
test
or
inc
data16
call
or
lods
nop
mov
fs
inc
enter
push
inc
sub
mov
adc
pop
push
in
mov
movs
mov
mov
adc
cdq
ds
dec
sbb
(bad)
in
fs
add
shl
(bad)
shl
mov
cmp
push
pop
inc
or
dec
sbb
fs
sub
add
test
rol
stc
pop
dec
rcr
mov
sbb
int
or
mov
mov
outs
fsub
ss
adc
sbb
push
and
not
lea
loope
xlat
pop
adc
pop
jmp
mov
adc
aaa
leave
pop
sub
lea
movs
mov
pop
movs
outs
ficom
lock
out
mov
pop
in
test
mov
fiadd
(bad)
pop
cmp
cmp
test
add
scas
pop
sub
les
mov
mov
into
push
cwde
nop
repz
pop
call
inc
nop
test
mov
dec
dec
sbb
lea
test
cmp
test
cmp
cmp
ret
adc
dec
call
cli
lods
ret
mov
loope
and
pop
sub
fsub
jle
jo
cmp
inc
outs
and
aad
xchg
outs
inc
dec
xor
or
outs
bound
pushf
xor
or
movs
cld
ins
out
in
test
sub
xchg
xchg
xchg
sbb
xchg
dec
or
mov
pop
div
adc
xor
loop
aas
push
data16
fisub
mov
cdq
sub
sahf
pop
lds
pushf
fisttp
mov
inc
and
dec
and
dec
fisttp
mov
movs
push
pop
jns
call
adc
test
pop
pop
lods
loope
push
lea
mov
sub
fistp
icebp
stc
and
mov
ins
stos
cmc
mov
(bad)
dec
nop
js
sub
(bad)
mov
mov
lds
mov
cmp
repnz
loop
jmp
sbb
imul
call
inc
daa
ins
sti
and
mov
(bad)
push
push
xchg
adc
jp
jb
mov
add
pop
jne
adc
push
and
push
mov
or
push
jp
mov
cmp
jmp
sbb
jae
jge
cs
cwde
mov
daa
mov
and
into
das
jge
adc
mov
test
or
inc
push
stos
mov
jbe
sbb
lock
repz
scas
rcl
jbe
movs
inc
mov
mov
inc
or
mov
out
(bad)
test
mov
out
cs
mov
mov
pusha
and
rcl
ja
addr16
cmps
sub
and
in
ins
push
rcl
jp
inc
outs
out
lahf
outs
pop
cmc
cmp
shl
aad
popa
adc
repz
test
mov
or
inc
retf
xchg
xchg
mov
in
jge
pop
sar
loopne
stos
xor
out
shr
cmp
jmp
pop
cwde
fldenv
pop
cmc
mov
push
xchg
jmp
stos
fild
sub
push
and
and
aas
mov
sbb
out
dec
cli
xor
fcomp
in
fs
shl
ins
(bad)
xchg
cwde
scas
adc
adc
not
add
inc
aaa
shrd
dec
mov
push
mov
aas
or
lds
cmps
out
ins
aad
mov
cmp
stos
sub
mov
or
movs
adc
fisttp
sub
cmp
sub
ds
or
mov
jle
inc
and
sub
popa
push
mov
sti
sub
xlat
(bad)
sbb
or
add
push
xor
cmc
loopne
ret
add
shl
push
add
das
inc
aaa
push
int
test
lods
pop
adc
pop
movs
mov
cdq
cmps
xor
jg
jl
ret
sub
scas
pop
push
add
fstp
adc
fld
ret
stos
xchg
inc
and
ficom
mov
push
xchg
jo
add
xchg
xor
test
add
int3
xchg
shld
pop
rcr
sub
inc
jno
pop
dec
and
sbb
jle
mov
scas
fcmovne
div
in
mov
aas
xchg
loop
add
lock
mov
pushf
add
es
push
mov
mov
out
outs
lods
std
mov
sub
sbb
test
sti
in
sbb
push
push
ja
jl
mov
push
mov
xor
add
pop
jmp
xchg
dec
stos
mov
mov
and
jne
mov
test
mov
loop
test
push
sub
popf
mov
(bad)
imul
jle
outs
or
popf
leave
cmps
out
cmp
pushf
addr16
push
idiv
cwde
sub
mov
mov
dec
cmp
xchg
adc
and
mov
outs
aad
pusha
xor
stos
dec
mov
leave
out
mov
cmp
push
xor
outs
popf
ror
cwde
mov
outs
leave
and
and
jmp
sbb
ds
mov
sub
pop
mov
mov
push
and
pusha
int3
outs
rcl
push
sbb
fadd
inc
pop
retf
fadd
or
shl
in
sbb
psubd
es
rcl
das
sbb
jb
jmp
leave
jae
inc
ss
add
aaa
ret
das
add
sbb
adc
adc
leave
xor
inc
push
retf
mov
add
pop
push
cld
adc
fidiv
cmp
add
and
test
jno
xchg
ret
sbb
mov
inc
add
(bad)
into
mov
or
pop
xchg
cmp
xchg
pop
scas
mov
jno
test
shl
mov
mov
xor
xor
scas
pop
jle
sub
dec
ficomp
das
repnz
clc
(bad)
dec
sub
xor
or
out
arpl
push
sub
inc
sub
loopne
test
loop
fisttp
cs
jecxz
(bad)
out
and
push
jmp
inc
jecxz
call
dec
out
mov
mov
jns
push
ret
fistp
in
sub
dec
push
lahf
dec
add
outs
push
jb
pop
inc
jbe
aad
dec
mov
lds
test
mov
lahf
jns
ret
cli
push
test
pop
xchg
jecxz
je
xor
or
pop
xor
xor
icebp
aaa
ret
fdivr
mov
rol
addr16
sub
push
push
dec
mov
inc
addr16
movs
mov
xchg
rol
mov
mov
add
inc
nop
arpl
loope
sbb
ret
adc
sbb
ja
sub
and
div
adc
push
shl
jge
xchg
out
jmp
imul
ret
fcmovbe
jnp
sub
rol
out
sub
(bad)
and
jle
mov
and
call
jns
nop
xor
add
mov
or
fsubr
daa
inc
push
adc
xchg
sbb
and
movs
xchg
xchg
(bad)
retf
in
push
(bad)
pushf
(bad)
adc
std
in
dec
das
pop
mov
sti
fcom
or
cmps
in
add
jmp
pushf
(bad)
xlat
mov
cwde
test
pop
loop
adc
pushf
mov
push
iret
jne
mov
test
cmp
dec
jl
xchg
retfw
sar
push
jnp
pop
sbb
les
ja
add
dec
cmp
loopne
cmp
jl
or
mov
xchg
pusha
imul
ror
bound
call
cmp
es
or
sub
(bad)
aad
jmp
mov
jp
div
dec
add
or
cmp
mov
test
sub
cmp
cmps
fcmovnu
inc
mov
xor
fild
mov
mov
ss
out
jbe
aas
jl
xchg
leave
xor
out
(bad)
mov
push
sub
bound
push
add
adc
xchg
jecxz
dec
xchg
stc
xchg
cmp
adc
adc
jns
cmc
iret
mov
mov
fstp
pop
mov
mov
vrcpss
xchg
aas
in
fs
test
pop
pushf
icebp
paddusw
cmp
rol
aad
es
cmc
scas
outs
fdiv
lods
test
or
sbb
xchg
cld
imul
popf
inc
jg
xchg
std
jg
pop
mov
mov
aad
xchg
js
jl
cwde
add
xor
xlat
sub
lahf
setp
into
xchg
sbb
jle
icebp
cwde
das
rol
pop
add
dec
inc
adc
xlat
mov
scas
inc
mov
sbb
mov
out
pop
push
or
add
lods
shr
(bad)
sub
push
es
mov
addr16
dec
cmps
jno
cmp
sbb
dec
inc
xchg
scas
dec
jnp
jmp
and
fsubp
pop
lock
sbb
pop
bound
mov
or
add
push
add
(bad)
sar
nop
xchg
cld
enter
dec
mov
push
pop
js
cmp
jp
les
xlat
pop
pusha
popa
mov
hlt
repz
mov
in
mov
outs
push
outs
push
or
into
(bad)
mov
addr16
pop
jmp
pop
mov
stc
pop
push
sbb
jb
mov
jmp
adc
(bad)
jmp
std
push
ss
add
ret
pop
mov
cld
jae
je
mov
jnp
ror
pop
and
push
(bad)
xor
jge
mov
or
or
xchg
dec
movs
add
inc
jge
clc
mov
retf
mov
retf
int
out
pop
xchg
pop
test
aad
out
xchg
add
inc
lock
mov
mov
or
cs
inc
loop
sbb
xchg
mov
into
pop
mov
(bad)
cmc
jmp
jmp
retf
ss
cmp
nop
addr16
ds
jae
in
or
and
push
xchg
add
pop
mov
ror
adc
ja
fld
mov
cmp
in
shl
add
jmp
sahf
jmp
add
scas
sbb
(bad)
pusha
mov
xchg
push
aas
stc
push
pop
(bad)
cmp
push
cmp
pop
push
add
push
dec
jbe
adc
(bad)
ror
loope
fist
les
daa
or
addr16
ins
dec
sub
push
nop
mov
rcl
xchg
stos
cmps
stos
enter
jmp
mov
cld
cld
adc
(bad)
xchg
mov
dec
fcom
mov
loop
sub
int
pop
xlat
dec
fild
das
jl
xchg
ja
xchg
inc
jae
test
sub
in
mov
scas
bound
mov
dec
test
out
imul
stos
mov
mov
rcl
xchg
mov
pop
jp
lock
stos
jg
rcr
(bad)
mov
inc
or
sbb
add
hlt
retf
call
rol
stos
dec
mov
aas
mov
arpl
cmp
ja
cmp
mov
xchg
and
mov
outs
push
into
mov
outs
lds
lods
mov
xor
bswap
retf
daa
leave
push
or
aas
in
and
dec
mul
cmp
in
push
or
daa
call
xchg
ficomp
(bad)
mov
(bad)
or
call
imul
mov
pop
push
sub
push
sbb
pop
fwait
mov
xchg
jg
test
sti
addr16
jns
dec
mov
sti
call
rol
(bad)
sub
pop
xor
aaa
into
inc
inc
inc
fwait
movs
inc
dec
push
rcr
ss
es
pop
je
fiadd
mov
push
sti
or
xchg
hlt
pusha
ret
and
ret
mov
push
dec
add
sti
mov
imul
inc
mov
repnz
shl
mov
add
repz
jmp
pop
mov
mov
(bad)
pop
add
mov
stos
out
mov
mov
or
xchg
jg
call
pslld
jb
inc
cmp
movs
dec
xlat
int
mov
xor
ja
dec
retf
push
test
lahf
daa
outs
xlat
pop
jb
mul
mov
daa
fsub
push
js
stos
shr
xchg
ret
(bad)
mov
and
cld
dec
in
push
mov
stos
ret
outs
cli
mov
popf
xchg
mov
push
or
push
repz
jnp
add
adc
jbe
icebp
jmp
push
imul
call
stos
gs
inc
xor
cmp
js
jecxz
out
push
pushf
lahf
sub
pop
pop
fisub
mov
inc
dec
jge
je
push
and
test
scas
inc
cmp
pushf
(bad)
out
sti
cdq
call
in
inc
xor
ja
push
or
ins
repnz
cmp
popf
push
arpl
pop
add
sbb
sub
inc
out
jbe
cmp
adc
sbb
imul
gs
test
retf
imul
fwait
aam
adc
shr
movs
scas
sbb
popa
push
jg
sbb
pop
(bad)
sti
mov
or
jmp
or
and
div
sbb
xchg
ficom
add
scas
and
mov
lock
ror
gs
bound
jp
jp
sbb
retf
push
pop
push
popa
ss
mov
push
sbb
push
sub
pop
into
sahf
push
loop
inc
loope
dec
stc
pushf
pusha
and
jl
adc
push
sahf
sti
xchg
mov
fmul
jmp
(bad)
and
push
aaa
(bad)
adc
mov
mov
enter
shl
test
xchg
mov
xlat
popa
push
add
sub
xor
xor
sbb
xor
ins
push
cmp
test
aad
xor
retf
stos
dec
addr16
pop
and
mov
or
jmp
aas
sub
xchg
cmp
mov
inc
nop
push
in
inc
push
shl
jnp
push
pop
mov
popa
sub
xchg
inc
dec
mov
int3
jne
or
call
mov
lds
xchg
fistp
inc
mov
cli
mov
mov
out
lock
push
lea
dec
imul
es
pusha
xor
and
call
stos
xchg
sub
add
fsubr
arpl
test
and
mov
cmp
xor
sahf
out
jmp
pop
jo
dec
int3
inc
call
jmp
or
into
push
push
imul
int3
cmp
mov
sbb
les
adc
lds
and
pop
movs
mov
scas
jp
add
sbb
std
retf
pop
and
repz
push
pop
or
in
aaa
push
stc
fstp
cmps
retf
xor
shr
mov
lods
popf
or
icebp
mov
ret
rol
mov
dec
leave
out
out
jmp
jo
scas
xchg
push
ss
ror
mov
pop
mov
pop
mov
sbb
mov
out
mov
(bad)
popa
sbb
repnz
jle
rcl
mov
dec
loope
sub
or
xchg
rol
adc
movs
mov
ficomp
outs
shl
pop
ret
fnstenv
adc
pop
ss
aam
pusha
mov
xchg
adc
psubd
jbe
dec
mov
loopne
sbb
retf
push
sbb
ret
test
loop
bound
sbb
mov
sar
fdiv
std
hlt
jns
shl
adc
pop
fld
arpl
dec
outs
dec
into
ins
jp
cs
sub
(bad)
mov
rcr
adc
leave
push
(bad)
in
dec
sbb
mov
mov
pop
cld
ds
and
add
movs
cmc
pf2id
lahf
jp
cli
dec
xchg
add
(bad)
call
loope
jbe
lea
movs
push
adc
xchg
icebp
ss
(bad)
push
fwait
and
pop
aaa
scas
int3
and
je
test
dec
fidivr
push
push
bound
mul
lock
mov
add
cmp
(bad)
js
xchg
std
test
int3
je
hlt
push
jmp
and
fiadd
mov
mov
jnp
push
jbe
mov
sbb
ror
and
shr
and
push
lods
push
ja
inc
mov
jg
imul
jae
lods
ds
push
out
(bad)
loop
push
lahf
jo
sub
sysexit
jmp
cwde
dec
mov
push
pusha
hlt
shr
sub
mov
or
cld
sub
add
adc
pop
pop
ds
jmp
push
pop
xor
vmovupd
loope
bound
cmp
stc
movs
mov
ss
inc
movs
inc
cmp
or
push
inc
popa
dec
sti
outs
xchg
jmp
pop
out
xchg
les
sub
mov
push
gs
push
js
aad
push
add
outs
shl
jecxz
cmp
or
jnp
inc
inc
call
inc
xchg
push
adc
mov
mov
std
ret
mov
int
xor
out
jnp
mov
jg
xor
ds
repnz
push
retf
xor
push
or
out
arpl
pop
es
xchg
hlt
ret
or
xchg
addr16
push
and
pop
stc
push
pop
rcr
sub
test
mov
mov
in
xor
adc
cmc
xchg
pop
sub
je
out
mov
push
loopne
push
mov
push
scas
ins
(bad)
pop
sub
aaa
(bad)
aad
inc
push
addr16
inc
rcl
jmp
pop
cdq
and
sub
popa
pop
jae
(bad)
jb
nop
and
call
gs
pop
xor
jbe
sahf
push
inc
cmps
lds
dec
jo
sbb
div
adc
dec
jg
dec
out
pop
cmp
int
out
and
lods
in
and
dec
and
in
pushf
cwde
mov
(bad)
in
mov
mov
arpl
jmp
cmp
mov
dec
icebp
shl
mov
sbb
cmp
jg
scas
aad
adc
add
stc
mov
and
cmp
mov
mov
in
clc
pop
movs
jl
clc
jmp
add
cmps
mov
sar
in
sbb
test
pop
xchg
(bad)
fiadd
xor
jbe
adc
push
adc
jbe
sahf
mov
loopne
cdq
fadd
dec
dec
jmp
inc
outs
icebp
cmp
retf
jmp
int3
push
fld
jle
das
(bad)
ja
dec
fdivr
std
sub
fild
dec
test
push
lock
inc
jae
les
dec
or
ds
(bad)
sti
mov
fcomp
cmpxchg
test
fcmovnbe
je
dec
xchg
xor
popf
mov
xchg
loop
pushf
sbb
sub
icebp
clc
mov
fldcw
xor
sbb
mov
dec
pop
addr16
imul
jge
sbb
or
out
pusha
(bad)
adc
cld
sub
out
jb
imul
in
enter
ud0
cmps
dec
es
fwait
xchg
dec
push
xor
cmc
push
ss
inc
adc
push
ror
sub
xor
sar
(bad)
push
cli
mov
push
dec
cmps
pop
leave
dec
(bad)
lods
xchg
and
stos
mov
jg
in
adc
and
sar
fisubr
enter
rcr
idiv
pop
jecxz
push
fiadd
test
popa
and
push
lods
mov
stos
test
jp
push
or
push
scas
pop
lahf
cmp
shl
cmp
in
pop
jp
repnz
mov
(bad)
aam
pop
mov
out
shl
xor
les
bound
mov
rcr
int3
inc
test
jnp
jnp
pop
or
test
aad
ret
or
mov
jne
adc
push
movs
mov
frstor
fisttp
movs
xchg
mov
outs
retf
sub
push
test
clc
pop
add
test
jge
inc
fwait
jg
and
iret
mov
int
cwd
inc
add
ja
jno
push
outs
movs
cmps
cld
mov
add
xchg
stos
sbb
sbb
jne
int
rcr
ss
jecxz
idiv
pusha
cmp
mov
(bad)
outs
cmp
push
dec
fnstcw
xchg
mov
mov
add
mov
movs
push
adc
imul
dec
xor
(bad)
jns
cmp
fsubr
inc
dec
clc
sbb
mov
xor
cmp
test
cld
movs
pop
lods
addr16
pusha
das
enter
rcl
ror
nop
cs
push
clc
in
retf
xchg
jno
push
rcl
in
inc
imul
rcl
xor
aam
imul
scas
and
cmp
popa
ins
je
sbb
movs
sbb
mov
jg
bsr
mov
ins
pushf
push
inc
sbb
add
scas
pop
das
mov
sub
adc
repnz
inc
mov
shl
xchg
sbb
mov
stos
out
daa
push
xchg
pop
test
and
je
mov
add
mov
lds
lds
enter
sub
retf
dec
fist
mov
ins
xchg
sar
test
sbb
xchg
xchg
or
lea
out
mov
aas
sbb
sti
jae
addr16
xchg
mov
loopne
inc
sub
out
enter
int3
retf
mov
cmp
(bad)
push
cld
add
push
nop
mov
add
mov
movlps
dec
and
imul
out
std
cmp
(bad)
pop
sub
ret
mov
lods
jns
dec
add
cmps
icebp
push
(bad)
fst
stos
xor
(bad)
icebp
cmp
ror
in
pop
out
mov
inc
rol
je
jbe
xchg
add
popf
xor
mov
mov
test
jnp
jnp
scas
rcr
mov
dec
jmp
icebp
dec
jne
lods
or
fnclex
shl
test
mov
iret
scas
jae
out
movs
mov
xchg
mov
or
je
ror
pop
not
fldenv
xchg
adc
scas
cld
dec
inc
sahf
rcl
or
jne
aaa
sub
mov
cmp
mov
sub
sub
gs
cmps
sbb
aad
lahf
xor
dec
pusha
inc
xchg
retf
test
movs
add
mov
mov
les
mov
cmp
jbe
cmp
add
dec
out
(bad)
mov
into
add
lahf
popa
jge
pop
enter
out
cld
xchg
mov
push
jp
jecxz
les
or
dec
mov
or
jb
inc
inc
add
adc
inc
(bad)
cdq
jo
outs
push
or
add
push
mov
loope
pop
xor
ret
sub
int3
or
sub
je
and
out
hlt
cmp
in
enter
cmp
test
movs
addr16
repnz
(bad)
stc
in
xor
aam
retf
cmp
ret
pop
retf
out
cmp
mov
add
addr16
mov
mov
cmp
mov
sbb
inc
fdiv
loop
push
add
xor
mov
inc
mov
lods
mov
or
mov
push
mov
rol
adc
pusha
pop
call
outs
loopne
int3
stc
mov
push
sub
cmps
push
ja
jle
xchg
int
jae
adc
inc
imul
jb
enter
cmp
retf
and
push
icebp
add
sbb
outs
xor
and
mov
push
clc
mov
add
adc
sbb
cld
cmp
jnp
jne
adc
out
shl
or
int
xor
test
mov
movs
inc
push
fwait
mov
jle
fld
bound
jg
sub
stc
jne
call
push
stc
lock
fimul
xor
imul
add
and
add
imul
sub
popa
ror
sub
lock
mov
push
lahf
lods
out
xor
data16
sbb
fwait
xor
push
cmps
push
out
and
xor
mov
mov
jae
and
test
out
xor
xchg
fld
and
inc
clc
retf
dec
js
fwait
xor
loop
pop
loopne
lea
xchg
cld
push
xor
cmps
icebp
push
xchg
inc
push
fsubr
movs
pop
push
in
cmp
ss
inc
sub
out
into
test
mov
out
sub
mov
sbb
test
push
nop
loop
cmp
iret
retf
mov
stos
es
mov
jno
in
(bad)
vmwrite
dec
aaa
adc
pusha
movs
hlt
and
cmp
int3
jmp
and
mov
popf
mov
jmp
or
mov
adc
loop
test
mov
adc
icebp
(bad)
ins
jg
sbb
jb
jmp
daa
test
or
mov
xchg
pushf
cli
pushf
rcl
lock
or
(bad)
sbb
js
pop
(bad)
loop
inc
(bad)
cmp
mov
push
js
lods
call
mov
(bad)
or
mov
sbb
(bad)
lea
stos
retf
jbe
retf
mov
sbb
je
mov
dec
les
push
(bad)
fistp
ins
mov
pushf
mov
sar
push
and
mov
adc
mov
lock
inc
sbb
mov
(bad)
mov
fwait
inc
js
dec
jno
iret
shl
cwde
popf
outs
jb
test
xchg
jmp
int3
and
or
cdq
mov
hlt
and
jmp
test
imul
push
stos
xor
push
repnz
arpl
pop
or
xchg
xchg
int
mov
scas
bound
(bad)
int
or
jae
add
retf
pop
jecxz
jno
in
dec
popf
scas
fwait
xchg
mov
jecxz
lahf
mov
xor
xchg
sub
push
cld
and
iret
into
dec
loope
imul
icebp
lahf
or
and
sar
pop
in
lods
addr16
mov
push
sbb
mov
and
test
or
pop
les
xchg
out
mov
jle
inc
inc
sbb
aam
movs
mov
mov
jge
push
fwait
fs
sub
ds
in
lods
je
addr16
clc
in
xchg
mov
mov
or
loope
pop
sub
lock
das
mov
aaa
or
movs
pop
lock
mov
mov
and
dec
lahf
add
jle
add
cwde
mov
push
scas
push
push
mov
push
rcpps
push
sbb
mov
rol
fsub
xor
mov
shr
adc
cld
jg
dec
sub
mov
daa
xchg
push
cmps
sub
dec
call
rcl
or
xor
in
test
jmp
and
jle
mov
cs
imul
mov
sbb
fldcw
sti
sahf
push
or
dec
push
retf
adc
add
test
jns
test
stos
dec
jl
and
repz
or
scas
bound
aad
mov
xchg
xor
pop
jmp
lock
scas
mov
aas
fadd
fcmove
xchg
test
xchg
int3
shl
push
mov
adc
outs
mov
cwde
stos
out
mov
sub
jo
aas
js
jp
add
mov
data16
mov
cwde
mov
and
sub
jl
stos
outs
scas
mov
test
push
mov
or
into
rol
aaa
movs
(bad)
xchg
xor
jg
repz
repnz
inc
cmp
fistp
cmp
inc
dec
fwait
sbb
xchg
mov
fnstcw
push
add
ror
mov
xchg
sbb
mov
add
pusha
loopne
lahf
stos
and
adc
push
arpl
mov
sbb
aas
aam
mov
mov
popa
fidivr
cwde
ret
neg
aam
cdq
dec
xor
push
or
sbb
sbb
loopne
jns
jmp
retf
push
inc
test
ror
jl
cmp
in
loopne
sub
movs
(bad)
xchg
cmc
test
adc
pop
adc
jle
add
in
loop
mov
sbb
call
jno
lea
xchg
test
push
gs
fsub
sub
or
jnp
xor
std
sbb
mov
cdq
inc
xlat
les
and
aaa
mov
sub
inc
pop
xor
mov
xchg
xchg
jae
(bad)
es
pop
inc
mov
arpl
jmp
cmp
out
xchg
xchg
xchg
mov
es
adc
pop
loop
or
xchg
cwde
and
mov
push
dec
stos
push
sub
fwait
int3
add
mov
and
mov
lahf
sbb
cmp
xor
fnsave
aam
sbb
fisubr
pop
lods
pop
jle
mov
out
cmp
sub
das
pushf
pop
stc
mov
push
pop
mov
movs
xchg
mov
mov
bound
push
jnp
repz
xchg
cld
push
scas
jmp
mov
in
test
(bad)
fimul
xor
das
sahf
sbb
aas
(bad)
xor
push
dec
mov
cli
push
xor
and
not
mov
cmp
xchg
xor
inc
adc
sar
pop
jo
push
adc
push
in
inc
adc
test
bound
pusha
shl
aam
xchg
jae
cmp
and
rcr
test
es
test
mov
nop
cli
pop
sti
add
bound
mov
mov
lods
push
mov
les
lock
cmp
aaa
mov
push
mov
retf
dec
(bad)
jno
jmp
ror
nop
xor
repz
cmp
icebp
inc
mov
bound
mov
and
jecxz
xchg
cmp
sbb
retf
cmp
aam
mov
mov
mov
dec
push
test
frstor
mov
jp
adc
cmp
mov
mov
mov
sub
adc
sub
popa
jg
inc
out
push
shl
pop
sbb
pop
or
cs
push
lods
mov
aas
out
call
and
fiadd
xor
jb
xchg
sbb
mov
dec
repz
je
mov
popf
movs
inc
rcr
jmp
xlat
popf
outs
pop
mov
clc
clc
xor
shr
dec
mov
cvtdq2ps
or
sbb
aad
xchg
or
inc
clc
dec
mov
xchg
cmps
es
ror
mov
pop
out
jge
sub
int
outs
fnstsw
xchg
mov
mov
xchg
jae
fs
and
jo
xor
lods
fadd
add
or
inc
or
xor
fidiv
lods
loopne
xor
xlat
mov
sbb
icebp
je
pop
mov
mov
ja
dec
jo
gs
mov
out
ficom
iret
mov
dec
movs
jge
jno
jmp
call
dec
call
dec
in
mov
in
sbb
xor
add
dec
cmp
jg
inc
rcl
enter
push
mov
cmps
sbb
les
daa
xchg
pop
mov
adc
xchg
les
ss
outs
mov
xchg
add
movs
mov
fsubr
lods
mov
and
dec
cmp
icebp
fcmovbe
adc
je
sbb
mov
int
in
pop
sub
xchg
xchg
fldcw
dec
jp
and
and
sub
add
sbb
inc
xor
sbb
push
jne
imul
loopne
sub
sar
inc
lea
add
shl
mov
mov
ud1
adc
push
popf
fsubr
jl
pop
mov
xchg
imul
adc
push
cwde
addr16
inc
leave
add
stc
pusha
mov
(bad)
pop
jl
in
dec
push
in
fucomi
push
std
push
push
xor
cwde
std
and
popa
cmps
or
pop
xor
fmul
sub
fwait
inc
cmp
jo
and
dec
inc
sub
neg
dec
repnz
in
or
adc
cwde
push
and
pop
das
leave
jne
daa
sahf
sti
movs
adc
lea
out
daa
jmp
fnstsw
ins
or
jmp
jmp
push
adc
inc
adc
sbb
cld
pushf
jo
or
aam
cdq
jecxz
fsub
ins
pop
pusha
sbb
fadd
push
fadd
xor
cmp
mov
cmp
js
mov
mov
sub
sub
fcomp
leave
mov
(bad)
push
jecxz
pop
adc
cld
and
rcl
push
ins
fnstenv
ret
push
in
dec
popa
or
add
std
inc
movs
mov
push
rol
clc
pop
dec
sbb
sub
fild
retf
mov
repz
mov
fmul
std
cdq
fs
inc
or
xchg
fdivr
jl
in
into
mov
outs
mov
in
push
inc
cs
fs
ret
xrelease
adc
cmp
stos
lds
mov
data16
cmps
hlt
aad
cdq
cmp
ret
add
fild
neg
jno
adc
outs
in
aas
lock
push
add
inc
xchg
ins
(bad)
jae
sbb
dec
into
mov
movs
(bad)
sub
pop
xor
aas
fisub
push
and
fwait
and
imul
dec
xchg
je
lea
in
(bad)
sbb
xlat
(bad)
cmp
or
cdq
mov
or
xor
dec
fmul
push
dec
and
(bad)
data16
addr16
scas
mov
xor
mov
push
not
fisttp
aaa
mov
bound
call
imul
mov
push
push
leave
ror
adc
jge
mov
daa
adc
mul
neg
(bad)
sub
dec
loop
and
jle
sbb
jge
movs
mov
sti
or
inc
cdq
inc
nop
sub
mov
xchg
push
movs
pop
rol
mov
cmp
jp
mov
adc
and
add
aas
and
ss
call
js
call
adc
pop
lock
push
xchg
mov
pop
movs
mov
xchg
test
mov
stos
mov
stc
pop
pop
test
dec
sub
sti
mov
jnp
enter
mov
hlt
leave
das
push
cmps
xchg
loopne
and
jp
jge
test
aaa
retf
cmp
or
sti
imul
(bad)
(bad)
sti
arpl
movs
cmps
mov
fcom
dec
clc
add
out
aam
push
inc
ja
fwait
cmp
dec
outs
inc
(bad)
fcom
and
xchg
cmp
dec
adc
aas
jmp
sar
mov
inc
rcl
sub
scas
es
or
mov
test
xchg
xor
xchg
fbstp
bound
and
push
clc
(bad)
fnstcw
sub
and
shl
dec
dec
loope
nop
cmp
adc
mov
mov
sub
(bad)
xchg
xlat
push
cmps
aas
js
dec
in
bound
mov
fs
adc
mov
push
nop
dec
jns
mov
stos
mov
imul
cmp
sub
adc
add
inc
dec
mov
lods
lahf
pop
test
repnz
dec
into
mov
jb
cmp
add
and
mov
test
lods
xor
loop
sbb
rcl
in
jmp
imul
cld
lods
aas
movs
adc
sahf
stos
(bad)
fcom
add
enter
scas
add
or
icebp
or
sub
inc
or
push
test
add
dec
or
movs
cmps
jo
outs
int
and
adc
dec
test
cmps
lahf
or
shl
jl
xor
fcmovnu
stos
inc
mov
xchg
cld
pop
outs
fwait
popf
xor
ret
push
mov
pop
adc
xor
ret
(bad)
imul
fwait
sub
repz
mov
cmps
push
out
xchg
gs
fcomp
mov
js
and
mov
aad
shr
fsubr
int3
or
xor
push
js
cmc
jb
(bad)
cmp
push
jle
jp
lods
mov
push
std
in
sbb
mov
shl
leave
dec
js
retf
add
cwde
sbb
dec
retf
adc
and
dec
push
ins
shl
out
movs
adc
jo
and
dec
test
mov
hlt
stos
push
dec
bound
into
sub
inc
stos
mov
push
test
push
loope
leave
mov
sbb
scas
or
mov
ds
in
jle
push
sub
and
nop
fstp
movs
out
ja
inc
sub
pop
xchg
mov
sub
xchg
pop
std
call
or
and
adc
xchg
loopne
lea
xchg
mov
push
daa
mov
sub
in
push
lahf
pop
mov
jo
in
out
xchg
cmp
test
push
inc
inc
and
jmp
test
les
cwde
sub
arpl
cmp
inc
and
xchg
fiadd
sbb
cdq
cld
ror
loope
mov
outs
push
mov
pop
popa
leave
or
les
xor
mov
inc
cmp
cli
fadd
pop
pop
int3
jno
imul
mov
(bad)
fs
inc
pop
mov
data16
jmp
push
int
ins
sahf
xlat
div
sbb
loop
xlat
shl
mov
lods
pushf
xor
sub
and
dec
push
xchg
loop
mov
aas
dec
sbb
jb
mov
push
and
pop
rcr
fidiv
dec
push
sub
aaa
lds
add
mov
and
ret
inc
scas
aam
pop
cld
das
mov
lods
inc
xor
xor
mov
pop
mov
in
push
xchg
enter
adc
push
(bad)
xchg
retf
mov
sbb
ret
mov
xchg
sbb
push
mov
xchg
out
jmp
loop
inc
add
stos
daa
dec
loop
pop
ins
push
add
dec
jno
(bad)
dec
sbb
test
add
push
test
jg
sbb
inc
pop
out
lods
xor
scas
pop
int3
add
push
push
paddb
add
mov
inc
add
mov
fild
jmp
movs
or
jnp
int
loopne
add
pop
jmp
inc
sbb
mov
outs
fisub
sub
shl
fild
mov
sti
push
cmp
lods
add
mov
fs
push
stos
mov
(bad)
or
mov
jge
div
jl
sub
clc
cmp
iret
out
nop
test
clc
imul
fld
xor
lds
aas
xchg
or
les
mov
push
jbe
jmp
dec
(bad)
mov
stc
jbe
sahf
fld
cdq
pop
outs
jge
cmps
jp
aam
xchg
add
and
mov
mov
iret
push
inc
arpl
xchg
pop
xchg
cmps
mov
(bad)
push
mov
aaa
nop
or
jecxz
xlat
dec
dec
scas
scas
mov
in
cmps
ss
inc
fistp
mov
fwait
xor
inc
dec
popa
in
pop
fst
mov
dec
fsubr
pop
pop
movs
out
xor
sub
mov
pusha
movs
jl
fidiv
mov
mov
xchg
jo
stos
pop
mov
pop
call
xchg
stos
xor
fdivr
int3
or
ja
das
mov
push
addr16
repnz
ror
mov
fadd
jmp
sbb
lahf
in
xchg
fiadd
dec
jl
sub
fldcw
and
mov
lock
jne
xchg
mov
aas
hlt
test
addr16
add
pusha
stos
push
std
mov
dec
test
add
pop
imul
cld
daa
(bad)
xchg
movs
popa
ins
loopne
mov
or
(bad)
and
lods
pop
and
sbb
mov
aam
push
add
fimul
fidivr
push
xchg
clc
xchg
mov
daa
hlt
sub
mov
dec
xor
in
popa
mov
jmp
add
mov
jae
in
xchg
mov
xchg
enter
mov
add
jae
and
(bad)
loope
jp
xchg
pop
sti
and
mov
mov
xor
push
sbb
jmp
cli
cmp
cmc
jg
xlat
ficomp
or
loopne
fdivr
sub
or
int3
cwde
or
mov
mov
or
neg
aad
not
adc
xor
sbb
lahf
push
xor
call
pop
push
mov
test
sbb
xchg
fmul
enter
sub
test
ja
jbe
test
dec
int3
push
and
xchg
enter
add
mov
xchg
adc
dec
jns
call
mov
mov
xchg
or
pop
adc
jmp
push
retf
push
(bad)
and
jle
loop
xchg
dec
ins
xchg
mov
out
loopne
sub
xchg
sbb
mov
scas
iret
pop
or
scas
cmp
scas
sar
dec
imul
jne
xchg
nop
fidivr
loope
cld
stc
mov
sbb
pop
cs
clc
mov
pop
(bad)
iret
push
sti
(bad)
out
jae
inc
jmp
in
or
into
stc
push
push
jecxz
push
adc
lods
out
push
mov
pusha
mov
add
jnp
dec
shl
mov
dec
test
cs
scas
sbb
mov
mov
adc
add
pop
push
xor
inc
dec
bound
(bad)
xchg
js
cmps
add
outs
sub
imul
into
rcl
cmp
jb
sub
push
jp
cmp
cmp
push
rcl
xchg
pop
sbb
repz
nop
push
xchg
inc
and
fnstcw
sbb
test
xchg
cmp
test
jb
jbe
sub
loopne
inc
sbb
lahf
test
push
fsubr
sub
add
xchg
xor
daa
cmps
mov
sti
repz
loopne
mov
dec
dec
ins
lahf
adc
std
ss
lea
mov
sbb
outs
ret
lods
mov
pop
push
adc
movs
rol
push
scas
adc
push
aam
call
mov
ja
mov
cmp
adc
mov
inc
xor
sub
push
js
mov
and
dec
(bad)
xor
pop
or
data16
push
mov
xor
shr
or
cmc
xor
movs
push
int3
or
jge
or
sbb
push
bound
fstp
stos
sub
mov
or
es
sti
xchg
loope
sbb
xchg
cmps
xchg
cmc
adc
push
mov
add
adc
sub
ror
jge
in
pop
mov
or
or
test
dec
and
or
add
add
mov
lahf
fldcw
ins
aaa
and
in
inc
push
cmp
inc
xor
fwait
dec
rol
adc
dec
cmp
das
jl
push
jp
jno
ja
std
dec
lea
les
ss
popf
movs
hlt
leave
jne
xchg
push
jae
xor
and
push
mov
inc
jl
fild
fs
fcomp
push
inc
sbb
jb
xor
adc
movs
or
(bad)
mov
push
sbb
pop
or
xchg
sub
repnz
pop
repz
outs
sbb
rcr
mov
loop
sbb
mov
daa
dec
(bad)
pop
lock
xchg
pop
mov
jg
adc
and
mov
ja
in
cmp
mov
aaa
popf
push
(bad)
in
into
stos
in
lods
inc
add
outs
leave
test
xor
in
mov
das
xor
rol
mov
push
and
scas
add
or
(bad)
call
push
(bad)
popf
mov
dec
jmp
into
test
push
ret
jmp
lea
mov
jl
xor
(bad)
icebp
xchg
lods
sbb
sub
inc
je
jbe
push
shl
push
dec
jp
mov
xchg
shr
call
pop
and
pmuludq
mov
outs
int
add
adc
mov
mov
imul
xchg
out
test
mov
push
mov
repnz
(bad)
mov
fsub
cmp
jg
and
shl
dec
cli
cs
jo
or
movs
stos
sub
(bad)
mov
cld
test
loope
mov
xor
inc
jg
pop
clc
fld
pop
in
xor
dec
jnp
(bad)
cmp
mov
stos
cmp
shl
cmp
ror
cmp
inc
sbb
int3
ror
xchg
or
jmp
pop
(bad)
fwait
pop
jno
inc
sub
adc
jmp
inc
jo
aaa
mov
or
cs
mov
(bad)
fist
dec
jne
retf
psubd
icebp
addr16
movs
ins
fcom
and
ret
push
rcl
mov
fs
sub
(bad)
in
mov
sub
xchg
cmp
sub
ror
jecxz
adc
call
cmps
movs
sub
inc
ret
cmp
cdq
jnp
pushf
cmp
mov
jge
cmp
add
fsub
jno
or
leave
aaa
ret
out
mov
jnp
jno
inc
add
add
jmp
xadd
imul
mov
xchg
jl
stc
add
imul
dec
xchg
jne
add
jnp
call
xor
xor
and
icebp
mov
in
mov
cmp
nop
cdq
cmp
fwait
cmp
lahf
adc
jl
jmp
jecxz
jge
jmp
push
cmc
mov
aaa
inc
(bad)
in
sbb
pop
repz
das
aas
sub
inc
ja
sbb
daa
add
jl
mov
dec
in
loopne
stos
punpckldq
repnz
mov
mov
or
das
fdivr
push
adc
out
mov
adc
dec
or
xlat
jp
test
push
sbb
out
fild
push
xchg
pop
mov
pop
jl
lods
lahf
add
ret
daa
popf
cld
mov
xchg
hlt
retf
mov
je
test
add
shl
pop
and
rcl
jg
sub
adc
and
test
dec
sbb
cdq
clc
cwde
ins
sahf
imul
jb
push
aas
lods
(bad)
sbb
cmp
ins
inc
lock
repnz
in
xchg
imul
les
aaa
pop
aaa
cmp
fnstsw
add
push
sti
scas
ret
gs
hlt
jb
mov
pop
dec
mov
mov
int
or
int3
daa
cmp
adc
cmp
pop
jge
retf
xor
movs
sub
add
imul
cmp
mov
(bad)
cmp
pop
cmp
push
outs
jo
jecxz
dec
push
push
lods
movs
lods
ins
or
mov
popf
enter
pop
jbe
push
and
jno
fmul
ret
pop
mov
inc
aas
bound
xchg
imul
xlat
mov
adc
mov
popa
jle
movs
pop
test
xor
sub
sbb
imul
fst
mov
add
xor
cmps
mov
mov
call
std
sub
cs
adc
aaa
sbb
xor
xor
(bad)
mov
lods
adc
stc
addr16
lods
repnz
jmp
fucomp
loop
dec
data16
mov
fisub
iret
pop
cmp
imul
mov
add
loope
inc
cld
and
ins
in
and
daa
aam
and
fwait
cmp
dec
xchg
lods
int3
and
push
xchg
xchg
mov
icebp
xchg
das
aaa
retf
and
cmc
dec
lds
call
cdq
sub
adc
mov
enter
push
xor
mov
ret
xor
xchg
push
enter
nop
pusha
jmp
je
mov
in
add
idiv
ss
bound
sbb
mov
std
and
mov
mov
cmp
hlt
add
mov
xor
mov
das
cmp
jl
pop
xchg
popf
addr16
retf
lods
leave
sub
jb
pop
sbb
inc
iret
(bad)
jp
rcl
clc
data16
je
stos
push
repnz
je
sub
xor
aas
pop
outs
aas
push
xlat
shr
fistp
inc
jae
mov
pop
out
je
mov
mov
jb
mov
dec
mov
or
jo
sub
push
icebp
mov
pop
mov
gs
loop
and
nop
cdq
cmp
(bad)
xlat
pop
sbb
cmp
iret
aam
ja
pop
mov
pop
sub
mov
test
fs
sti
out
jle
adc
dec
call
fs
inc
mov
das
outs
js
mov
out
sbb
and
add
test
sbb
(bad)
out
pop
call
cmp
cmps
cdq
pop
pop
mov
test
(bad)
add
repz
lahf
jg
aam
xor
inc
sub
clc
fsubr
push
gs
inc
cmc
arpl
jae
pop
(bad)
mov
cmp
cmp
shl
inc
ror
xor
jne
mov
je
dec
xor
das
dec
push
push
and
rcl
addr16
into
sub
jbe
dec
arpl
push
(bad)
sbb
lock
out
dec
mov
je
cs
push
mov
add
mov
mov
mov
mov
sub
dec
ficom
pop
pop
repz
test
and
sbb
ret
loope
aam
mov
xor
in
in
jae
call
mov
ror
lds
dec
add
sub
jle
pop
mov
sub
outs
cmc
pop
outs
fsubr
std
dec
cs
dec
mov
loope
pop
shl
mov
inc
mov
pushf
aam
rcr
dec
jbe
push
sub
jmp
jmp
mov
dec
sbb
into
fadd
mul
fimul
daa
mov
inc
cs
jle
jnp
jne
sub
out
pop
xor
in
sbb
inc
mov
and
(bad)
sbb
stos
adc
dec
adc
sahf
add
add
mov
cmp
inc
pusha
ja
clc
inc
fmulp
fnstsw
inc
lods
xchg
or
sbb
jp
xchg
call
aad
int3
xchg
in
xchg
js
push
push
movs
mov
xchg
push
xchg
test
fcomp
inc
mov
sbb
pop
nop
dec
inc
or
shr
mov
(bad)
popa
and
jae
mov
mov
sahf
inc
pop
fldpi
aam
mov
cmp
(bad)
cmp
jg
lock
leave
and
repz
dec
(bad)
jmp
jbe
clc
scas
jecxz
(bad)
and
inc
sti
xchg
pop
in
sar
inc
out
mov
leave
mov
mov
xlat
cmp
xor
xchg
mov
popa
pushf
sbb
mov
pop
sti
aas
iret
mov
loopne
cmp
push
out
out
out
mov
mov
pop
ds
das
mov
xchg
push
ret
push
add
lods
out
mov
or
outs
fsub
xor
mov
aas
imul
in
mov
sbb
jecxz
xor
xchg
push
mov
ins
adc
adc
shl
push
dec
mov
fst
out
mov
fdivr
cmps
xchg
or
jmp
(bad)
scas
repz
pop
xchg
push
cmp
stos
lods
xor
push
scas
fnstenv
mov
in
dec
(bad)
inc
push
mul
mov
call
stos
retf
imul
mov
daa
mov
cmps
mov
mov
sub
or
hlt
leave
xchg
push
adc
add
and
into
into
retf
(bad)
in
repnz
sub
loopne
push
push
xlat
les
lea
xchg
fcmovnbe
mov
nop
test
ds
adc
rol
fsub
outs
sub
or
jbe
repnz
sbb
test
neg
mov
outs
pop
xor
jo
cdq
(bad)
jecxz
fist
aaa
adc
lods
jge
pop
mov
stos
inc
loope
add
fmul
xor
stc
adc
jns
xchg
jns
jbe
cli
les
mov
pop
shl
(bad)
loopne
pop
and
scas
jbe
jne
xchg
adc
fistp
popa
nop
mov
out
mov
mov
mov
sbb
adc
addr16
push
int
fcom
and
jnp
or
push
pop
mov
mov
imul
mov
arpl
addr16
mov
scas
div
or
add
addr16
sbb
push
or
xchg
jecxz
std
xchg
push
cmps
(bad)
xor
scas
adc
xchg
ins
(bad)
test
aaa
mov
cmp
lods
cmp
outs
pop
out
mov
in
xlat
adc
xchg
fld
and
loope
cmp
adc
popf
mov
cmp
or
aam
cmp
sub
fdiv
daa
xor
sti
inc
pop
pusha
mov
jge
mov
out
pop
in
mov
push
mov
jp
je
dec
mov
fs
movs
(bad)
mov
retf
mov
les
jno
push
pop
xor
pushf
push
jmp
icebp
std
imul
not
adc
lods
inc
or
and
or
cmp
outs
lahf
xchg
push
test
sub
mov
cmp
nop
sbb
stc
adc
in
imul
adc
pop
imul
push
inc
in
ins
push
mov
xor
mov
jle
add
and
cmp
xchg
shl
cdq
call
mov
cmp
adc
ret
ins
pop
xlat
popf
stos
aaa
scas
shl
mov
ds
jle
adc
(bad)
imul
xor
mov
adc
stos
inc
popa
cmps
mov
test
les
dec
mov
rol
popf
jbe
jmp
lods
sbb
cli
dec
fdiv
stc
(bad)
es
retf
or
cli
hlt
push
dec
int3
jmp
mov
fsub
push
imul
sahf
pop
jmp
movs
ret
add
jl
sahf
call
xchg
out
mov
pop
outs
pop
xor
out
arpl
mov
adc
mov
aaa
sahf
inc
cmp
cmps
es
push
push
dec
mov
fidiv
mov
xchg
ret
dec
int
lds
pop
inc
push
cwde
sar
test
dec
ret
push
retf
sub
jl
mov
stc
ss
or
daa
into
int3
mov
sub
(bad)
in
scas
rcr
shl
sub
in
(bad)
mov
pusha
xchg
ror
retf
aam
inc
mov
push
xor
cwde
rep
popa
retf
sbb
cmp
push
(bad)
cli
outs
mov
ins
out
retf
mov
pop
hlt
jmp
xor
pop
test
jg
fnclex
out
push
aas
icebp
adc
dec
cmp
or
xchg
and
outs
into
xor
cmps
in
scas
cs
cwde
add
data16
push
mov
mov
xlat
gs
(bad)
call
sbb
cwde
jb
iret
push
out
adc
aaa
or
jmp
inc
sbb
sub
adc
(bad)
loop
stos
jmp
mov
test
add
mov
hlt
inc
push
popa
call
sbb
arpl
outs
dec
ins
sar
push
or
and
lock
out
sub
outs
xchg
xor
(bad)
sbb
pop
add
int3
jg
repnz
out
adc
dec
jge
out
(bad)
sub
sbb
popf
mov
fnstcw
add
inc
(bad)
pop
sbb
rcr
inc
fs
fld
pop
or
pop
adc
(bad)
and
test
call
adc
out
ret
mov
adc
mov
add
push
cmc
mov
or
scas
dec
call
shr
daa
test
xchg
ja
xchg
test
and
fwait
mov
push
mov
sub
sahf
fcom
pop
mov
fs
cmps
dec
rol
(bad)
push
sti
add
outs
fidiv
jae
xchg
adc
cmp
inc
jecxz
outs
ins
cs
xor
and
pop
jo
loop
hlt
aas
add
nop
mov
mov
pop
hlt
aam
push
adc
das
ror
inc
hlt
sbb
dec
mov
mov
mov
imul
pop
aam
push
shl
add
jl
mov
mov
js
lods
stos
mov
shl
daa
and
fs
into
xchg
call
jbe
pop
es
retf
inc
cmp
jno
xchg
cmp
sbb
pop
sub
sahf
test
imul
xchg
(bad)
mov
cli
push
mov
xchg
or
sub
mov
push
jmp
outs
xor
retf
sub
xchg
aad
mov
xchg
pop
ins
sti
sbb
faddp
aam
cld
in
(bad)
cmp
jle
lock
add
test
int
outs
cmc
gs
ficom
in
sbb
push
data16
fdiv
xchg
shl
lahf
bnd
les
mov
inc
mov
test
pop
cmp
sub
xchg
lahf
in
das
add
int
gs
mov
xor
mov
push
cli
fnsave
fild
and
sbb
aad
retf
mov
fnsave
dec
mov
loop
lods
cmps
inc
mov
aam
jge
and
pop
push
test
pop
adc
pop
test
call
mov
je
pop
lea
ss
xchg
std
ret
pop
arpl
cwde
mov
mov
test
dec
imul
pop
outs
xchg
inc
fist
inc
cmps
cdq
mov
jnp
ins
cmp
bound
xchg
fwait
cmp
ror
fiadd
pop
push
inc
loop
xor
xchg
push
retf
pop
repnz
jl
stos
pop
sub
call
ret
jb
adc
inc
add
push
mov
adc
or
into
ins
leave
mov
inc
mov
inc
mov
and
mov
jp
jp
pop
repnz
sbb
jbe
leave
nop
sub
or
out
scas
in
aaa
hlt
(bad)
mov
add
xor
popf
test
rcr
repz
rcr
mov
xchg
inc
adc
sub
add
push
ret
mov
mov
adc
push
scas
or
or
stos
pop
call
fs
sub
xchg
call
sti
or
jp
sbb
pop
or
push
jo
dec
in
imul
cmp
cs
sbb
jb
(bad)
sbb
stc
xor
pop
xor
adc
rcl
jb
out
ins
mov
jb
jo
data16
and
adc
aas
mov
icebp
cmp
rol
out
push
xchg
pusha
mov
call
fwait
mov
and
xor
jge
bound
sbb
mov
push
push
(bad)
adc
sahf
ds
mov
cmp
cld
push
add
out
cmp
mov
mov
cli
jge
loope
test
mov
cld
ret
cmp
icebp
push
or
movs
int3
or
xchg
add
adc
mov
xchg
mov
xchg
dec
and
fisub
and
dec
stos
dec
cmp
les
je
cdq
adc
lock
arpl
mov
in
outs
cmps
sbb
not
pop
add
leave
jp
repnz
and
mov
out
cmp
ja
jge
mov
shl
mov
inc
mov
mov
push
aas
in
es
jae
mov
adc
loope
sub
mov
call
sub
push
pop
test
mov
bound
fdivr
cli
mov
mov
mov
ds
cmp
or
fld
les
mov
out
mov
and
inc
cmp
push
idiv
sub
hlt
push
rol
xchg
mul
push
or
pop
or
adc
cmps
mov
retf
retf
jnp
test
jo
fadd
adc
adc
ret
and
push
inc
nop
push
repnz
pop
and
pop
pop
xchg
test
js
sbb
sbb
mov
dec
sbb
xor
adc
xsha256
cmps
adc
sahf
jp
ds
sub
ds
loopne
hlt
jnp
push
mov
jg
sub
xchg
xchg
fcomp
xor
dec
and
(bad)
lods
(bad)
daa
push
ds
je
jecxz
jae
lods
jmp
cmp
sahf
xchg
adc
aaa
test
fwait
in
inc
jle
push
loope
rcl
adc
mov
xor
cmp
mov
ja
fucomip
retf
out
test
adc
ror
movs
adc
xchg
out
ficom
scas
adc
out
neg
fs
and
popa
movs
loopne
mov
mov
jns
xchg
xchg
sahf
mov
adc
add
sub
movs
lods
aad
outs
fcmovnb
jecxz
pop
sti
ror
push
sub
jp
scas
addr16
xor
popf
mov
cmp
mov
hlt
mov
hlt
jmp
sbb
sbb
xchg
dec
ror
pop
shl
mov
cmp
mov
hlt
(bad)
sbb
das
or
push
mov
bound
xchg
(bad)
xchg
fdiv
icebp
sub
fistp
fwait
inc
mov
test
sub
mov
(bad)
sbb
mov
cld
out
sub
(bad)
mov
(bad)
mov
inc
outs
lods
jns
mov
je
(bad)
daa
push
(bad)
or
shl
sub
dec
sub
mov
popa
fbstp
sub
sbb
mov
xor
xchg
jle
inc
and
fistp
bound
fnstsw
mov
in
add
push
cmc
in
retf
xchg
pop
sbb
pusha
es
xchg
adc
sbb
mov
ror
adc
(bad)
je
call
mov
enter
stc
daa
jmp
jge
jmp
adc
add
dec
sbb
xor
add
pop
cmc
(bad)
jp
scas
push
or
loope
lahf
test
or
push
leave
cwde
and
add
lock
(bad)
stos
mov
pop
cmps
cmps
add
push
int
sbb
gs
leave
mov
das
icebp
fadd
test
lods
imul
push
aad
mov
stos
xchg
xchg
sbb
je
push
dec
arpl
out
scas
inc
scas
push
adc
adc
jecxz
push
push
call
jl
add
pushf
add
mov
fucomp
mov
mov
add
(bad)
(bad)
std
mov
and
cmps
jb
aaa
inc
push
imul
icebp
call
nop
sub
stos
cmp
mov
aas
fiadd
cdq
out
sti
ins
hlt
and
je
stos
mov
hlt
mov
and
in
xchg
ret
inc
addr16
add
sbb
jo
bnd
sbb
(bad)
push
mov
nop
jmp
rcl
lea
mov
and
sub
jno
imul
adc
dec
or
fldenv
stos
push
ret
inc
std
xor
or
xchg
add
sar
fwait
dec
popf
das
xchg
inc
fldenv
retf
mov
test
push
mov
jp
inc
and
cdq
data16
(bad)
daa
stc
popa
mov
xor
jmp
(bad)
idiv
cmp
(bad)
retf
jb
cwde
inc
das
sub
inc
mov
loop
cmps
fstp
and
inc
rol
add
mov
idiv
inc
(bad)
retf
test
push
inc
aad
add
xor
ja
pop
or
gs
mov
(bad)
shl
test
test
pop
hlt
jp
or
mov
mov
inc
in
ret
mov
lea
dec
dec
nop
(bad)
sub
out
inc
xor
fstp
cmp
hlt
sub
jp
xchg
and
leave
popf
pushf
fiadd
jge
pop
mov
xchg
and
pop
adc
jae
outs
mov
push
jne
das
push
out
push
mov
lea
cmp
je
ds
jns
movs
cmc
stc
(bad)
adc
mov
jns
pop
pop
popa
xchg
in
inc
fsub
cmp
mov
stos
mov
mov
sbb
out
mov
jl
imul
pop
xor
repz
jmp
or
adc
push
enter
gs
cmp
push
je
movs
push
add
mov
sub
dec
pushf
(bad)
stos
lock
mov
cmp
out
aaa
dec
cdq
cmp
mov
gs
and
xchg
cmp
test
jl
mov
cmps
push
sub
call
test
mov
inc
xchg
movs
aad
loopne
push
cs
xor
int
in
pop
xor
js
sbb
inc
mov
es
iret
and
mov
(bad)
fidivr
and
loopne
pop
leave
pop
add
repnz
ds
aad
lock
imul
sub
xor
aad
push
or
in
add
and
pop
dec
dec
pushf
int3
cmp
jno
fnsave
push
inc
inc
retf
bound
mov
add
outs
inc
mov
mov
scas
inc
cld
cld
jmp
hlt
je
mov
jbe
mov
lock
push
add
add
out
scas
imul
(bad)
xor
inc
jecxz
mov
jl
je
sub
hlt
fild
out
mov
sub
bound
ins
sub
xchg
mov
mov
lahf
sar
add
(bad)
fcomp
sub
pop
and
mov
push
div
je
inc
sub
adc
sti
dec
mov
(bad)
sbb
dec
ins
popa
loopne
out
lock
das
xor
sbb
push
xor
test
ror
pop
adc
jbe
dec
cmps
(bad)
and
jne
aas
mov
mov
outs
pop
into
ja
cmp
sbb
scas
pop
ficomp
ss
lods
loope
push
(bad)
dec
mov
and
xlat
cmp
iret
mov
push
and
fs
movs
push
mov
mov
mov
ret
sti
mov
and
add
sub
adc
pop
arpl
repz
cld
and
or
lds
mov
pop
push
ret
fmul
cmc
fstp
sbb
outs
ja
mov
hlt
push
sub
adc
sub
imul
leave
popa
int
loopne
outs
sbb
movs
(bad)
jmp
lods
cmc
movs
jo
cmp
enter
leave
xlat
stc
in
rcr
dec
ins
jno
push
push
push
mov
popa
fnstenv
mov
and
nop
push
pop
test
fild
repnz
rcr
test
mov
dec
addr16
out
pop
mov
cmp
pop
adc
pop
inc
xchg
in
loope
push
ror
(bad)
leave
not
sbb
lds
xor
lea
(bad)
fwait
test
mov
ins
inc
pushf
inc
cmp
fld
cmp
cmp
lods
scas
inc
aam
lock
out
and
push
adc
push
fs
stos
xchg
or
sbb
ins
test
adc
cmc
xor
inc
loope
loop
in
inc
xchg
inc
cmc
mov
jecxz
jl
pop
xchg
mov
cmp
inc
lods
sbb
mov
ret
shl
cmp
sbb
gs
pop
xor
jnp
popa
in
push
in
(bad)
fdiv
or
mov
ins
adc
dec
adc
imul
cmps
xlat
mov
mov
cmp
stos
adc
fs
and
ficom
cs
jg
ret
daa
xchg
cs
sbb
jo
lods
or
out
inc
iret
inc
clc
push
mov
iret
and
cld
std
cmps
push
inc
out
add
pop
mov
rcl
das
xchg
inc
xchg
jmp
(bad)
push
mov
mov
xor
mov
lods
mov
das
xlat
push
sar
cmc
xor
adc
test
cmp
or
xchg
ja
cmp
push
clc
(bad)
pop
cmp
mov
leave
and
enter
inc
(bad)
loope
cmp
dec
into
fld
or
or
mov
add
dec
imul
or
jmp
mov
jle
xor
jecxz
stc
fistp
mov
adc
sahf
sbb
std
add
dec
push
jge
jo
mov
lods
fcmovnu
mov
lahf
clc
cmp
ds
int
je
inc
fmul
jl
inc
jge
in
push
mov
fisub
pop
loop
add
mov
cmp
adc
nop
mov
xor
sbb
xor
and
push
inc
adc
hlt
in
xor
mov
xor
jns
dec
dec
ret
xchg
sbb
xor
in
pop
lock
push
lds
test
dec
cmp
les
je
sub
mov
mov
call
push
xlat
xchg
es
sbb
pop
dec
retf
add
rcl
adc
sbb
(bad)
push
xchg
lahf
add
push
push
lea
xchg
inc
jmp
mov
cmp
in
sbb
int
jmp
jecxz
push
std
mov
fs
pop
jge
je
das
enter
bound
int3
xchg
xor
sbb
or
int
jno
(bad)
xchg
cli
idiv
jmp
adc
enter
pop
cli
(bad)
sbb
dec
dec
fdivr
or
xor
adc
xor
mov
das
outs
dec
dec
dec
mov
cmp
push
mov
std
xor
iret
jge
sub
je
cmp
ins
pop
outs
es
enter
dec
sub
push
cs
push
jae
jle
ret
sbb
repz
sub
push
push
xchg
enter
jo
arpl
shr
mov
shl
rol
pushf
sbb
dec
pop
sub
xchg
int
inc
imul
pop
add
fld
push
cli
test
xor
das
lahf
fdiv
call
lea
int3
sti
fld
sbb
xchg
aam
and
es
frstor
in
inc
into
jno
sub
xchg
pop
arpl
(bad)
aad
sub
add
pop
mov
cmp
das
adc
mov
pop
push
xor
or
cmps
ins
push
stc
sbb
adc
mov
jno
xchg
sub
cmc
mov
mov
inc
mov
dec
ins
popf
push
adc
mov
bound
xchg
retf
dec
cdq
jl
dec
hlt
cmps
push
mov
in
adc
cs
retf
xchg
cmp
push
in
push
sub
mov
push
(bad)
jl
jl
jle
jns
cmp
mov
mov
xor
inc
xchg
xchg
push
cwde
mov
aad
ds
jmp
xor
in
in
xchg
or
adc
ds
icebp
test
repnz
hlt
mov
push
jae
mov
(bad)
mov
and
pushf
jmp
jae
mov
not
mov
push
leave
test
inc
in
mov
into
imul
hlt
div
dec
movs
adc
push
push
ds
loopne
fstp
mov
xchg
arpl
call
mov
cmp
retf
and
jbe
cmc
jmp
dec
and
dec
dec
fsubr
out
adc
das
dec
xor
sub
jae
sbb
jl
jg
iret
pop
mov
jmp
call
(bad)
mov
fwait
push
shr
xlat
push
push
je
dec
ror
or
or
leave
sbb
rcr
shl
call
add
ret
std
daa
adc
fstp
daa
rcr
hlt
mov
popf
xor
js
jo
ins
sub
stos
cmp
sbb
ins
mov
int3
shr
dec
pusha
hlt
mov
xchg
arpl
sbb
push
pmaddwd
addr16
sbb
icebp
jae
jmp
(bad)
(bad)
cdq
cld
test
fcmovb
xchg
add
mov
push
pop
pmullw
xor
imul
test
data16
jmp
aad
and
xlat
lods
aam
pop
mov
jmp
sbb
test
sub
lods
data16
jo
retf
aas
out
push
sbb
aaa
retf
out
jbe
repz
xchg
pop
ja
jmp
out
mov
mov
test
loop
inc
adc
xchg
dec
jmp
(bad)
push
(bad)
add
dec
jge
sbb
loopne
addr16
pop
sub
inc
and
fwait
js
xor
rol
test
adc
add
pop
stc
xchg
push
pminsw
loope
push
inc
mov
sub
inc
loop
push
adc
add
shl
mov
xor
sub
ins
call
cs
inc
popf
stos
call
xor
add
dec
lock
xor
pop
in
push
mov
jg
imul
xchg
jl
sub
xor
cmps
adc
in
jle
mov
mov
(bad)
sbb
adc
cmps
(bad)
scas
pop
icebp
or
pop
xor
push
ss
xor
push
xor
cmp
iret
movs
repnz
ins
(bad)
push
dec
adc
mov
add
das
into
fst
mov
xchg
icebp
or
mov
mov
add
imul
mov
and
test
push
sti
ret
out
cmp
xor
aaa
push
adc
ins
cli
jnp
loop
daa
dec
cld
cli
cdq
push
shl
mov
push
shl
shl
fcomp
fcmove
mov
ret
leave
pop
mov
inc
in
jge
push
mov
mov
mov
iret
fwait
pop
mul
jle
and
xlat
push
xchg
push
or
add
(bad)
sti
sub
pop
xor
sbb
lahf
iret
int3
xchg
jecxz
into
je
xchg
mov
sti
out
(bad)
cmp
int3
sahf
dec
pushf
arpl
and
call
adc
push
ret
add
out
or
fwait
xor
pusha
adc
jg
jmp
loope
leave
fnstenv
cmps
mov
lods
inc
or
ins
dec
aas
jge
and
gs
aam
jmp
test
push
jne
fwait
jae
je
cs
pop
pop
push
sub
inc
sar
inc
mov
fimul
cwde
in
mov
test
les
js
(bad)
mov
cmp
shl
in
xor
cld
xor
iret
stos
pop
adc
imul
jae
dec
dec
popa
addr16
psubq
fiadd
dec
outs
cwde
stos
scas
ret
dec
inc
push
shl
pop
push
sub
push
pushf
mov
add
cwde
cmc
xchg
loope
sbb
gs
icebp
jmp
nop
jle
call
adc
hlt
dec
pop
xor
pop
(bad)
mov
sbb
mov
sbb
mov
outs
mov
push
push
mov
adc
rol
pop
loope
loop
pop
push
pop
mov
lea
aas
mov
cld
loop
mov
mov
rcl
mov
xchg
in
and
addr16
loopne
or
shr
(bad)
dec
cmp
lods
cwde
jecxz
sbb
jno
sub
repz
push
xchg
mov
sub
jns
cld
inc
cs
addr16
xchg
pop
cmp
rdpmc
imul
or
xchg
jbe
mov
jmp
movs
pop
jo
cmp
sti
out
cwde
addr16
ret
test
cmovge
mov
int3
retf
sbb
cli
(bad)
pop
je
adc
xor
fild
cld
rol
outs
test
fmul
xor
retf
sqrtps
pop
add
or
shl
pop
test
movs
adc
mov
neg
and
xchg
sti
cdq
into
in
lock
stos
jns
cmp
jbe
es
mov
inc
push
sub
sub
dec
sbb
pop
mov
(bad)
loopne
or
test
mov
cmp
or
js
cmp
fidiv
fdiv
mov
in
rcl
inc
je
adc
aas
es
mov
xor
or
pop
dec
and
in
cmp
std
retf
xchg
fisubr
add
div
ror
dec
xchg
xchg
mov
push
push
cmc
inc
mov
jmp
mov
mov
inc
xor
inc
jbe
inc
inc
dec
clc
jne
repz
xchg
sub
gs
xlat
push
call
retf
jg
xchg
ins
arpl
pusha
pop
outs
pop
or
scas
mov
xor
pop
pop
repz
mov
into
dec
ds
adc
or
adc
in
mul
and
lods
inc
arpl
push
lea
sbb
int
inc
popa
push
and
dec
xchg
imul
xchg
outs
aas
cmps
fbld
shl
cmp
pop
jl
scas
mov
ja
or
jbe
cmovl
lods
or
iret
jecxz
sub
inc
jecxz
inc
xchg
mov
out
test
jmp
cmps
sbb
jnp
jns
out
cmp
outs
repnz
push
xlat
dec
sbb
in
fwait
jbe
xor
out
(bad)
fmul
or
aas
repz
or
test
mov
das
cs
inc
fistp
mov
movs
into
cmp
mov
mov
sti
jne
push
push
in
jo
cmp
loopne
adc
jae
mov
ror
mov
mov
aas
in
iret
iret
in
rol
in
sub
test
in
or
jle
test
addr16
add
sahf
in
cwde
xlat
cmp
adc
mov
rcl
stc
adc
in
xchg
xchg
cmp
in
mov
mov
repnz
hlt
push
jno
pushf
sahf
sbb
inc
hlt
or
or
and
pop
xchg
out
pop
retf
add
xchg
fwait
aad
push
dec
mov
pop
loopne
jmp
inc
or
lea
lods
popa
rol
or
push
add
add
in
(bad)
mov
inc
mov
add
inc
sub
mov
pop
jle
jne
test
sub
pop
mul
xchg
cmp
adc
inc
mov
enter
idiv
std
inc
jmp
repnz
jge
and
pop
fcom
in
retf
inc
ss
push
out
sbb
test
dec
outs
fimul
frstor
test
or
jecxz
addr16
jge
je
sub
cmp
mov
and
xlat
(bad)
mov
and
test
adc
mov
cmp
jb
clc
shr
ret
push
mov
and
shl
mov
pop
test
push
pop
test
call
ds
mov
out
mov
jg
out
xor
call
push
mov
mov
fnstcw
out
mov
jmp
popf
enter
and
mov
dec
mov
std
and
(bad)
xchg
je
inc
push
adc
fbstp
mov
cmp
pop
adc
push
(bad)
mov
push
sbb
in
mov
fsubr
fldcw
inc
mov
popf
pop
xlat
nop
je
sbb
push
push
stc
dec
pop
das
in
xor
xchg
pusha
stc
imul
sahf
lea
call
or
mov
cli
loope
movs
stc
mov
lods
movs
adc
jno
fiadd
dec
std
sti
lods
das
mov
loope
adc
pop
jmp
xchg
ins
outs
dec
mov
scas
outs
into
ss
and
sub
aad
jbe
and
ja
inc
in
push
mov
mov
and
dec
(bad)
push
nop
jae
leave
ror
clc
call
dec
jno
jmp
es
(bad)
and
inc
sti
xor
mov
cmp
inc
inc
ret
pop
xor
fwait
les
cld
imul
mov
out
lock
or
add
lods
call
scas
push
dec
jae
shr
rcr
mov
xchg
mov
out
sahf
cmovs
xchg
sub
movs
mov
shl
jl
gs
test
aam
sbb
iret
push
push
add
push
cmps
sbb
lods
mov
lods
adc
push
xchg
enter
int3
mov
(bad)
(bad)
idiv
pop
(bad)
icebp
hlt
inc
outs
cmp
fisttp
mov
push
xor
mov
dec
repnz
sub
jbe
dec
pop
cmp
cwde
add
icebp
loope
fwait
pusha
pushf
adc
cmp
mov
aas
aaa
sub
add
loopne
ja
adc
jmp
or
(bad)
mov
cld
and
retf
xchg
mov
in
jl
mov
jb
imul
leave
xchg
ret
and
ds
cmps
shr
push
adc
lods
aaa
js
movs
in
aaa
cdq
mov
(bad)
or
hlt
call
jecxz
or
fucomp
push
retf
mov
pop
shr
int
rcl
mov
dec
inc
adc
cmp
adc
dec
xchg
push
sbb
push
mov
div
sbb
fistp
jno
and
imul
ror
dec
into
mov
sub
dec
cwde
les
ss
hlt
push
inc
enter
aaa
lahf
mov
sbb
rcl
sar
inc
shl
leave
scas
jg
xor
jge
xor
inc
lods
addr16
jl
inc
cmps
add
repz
call
sbb
ftst
adc
push
(bad)
ficom
xor
sbb
sbb
xchg
cli
cmp
mov
xor
and
jp
gs
fs
cld
adc
sbb
out
and
shl
leave
xlat
dec
movs
adc
cmp
cmp
jle
mov
pop
(bad)
jbe
fcmovnb
out
mov
lea
rol
rcr
sahf
jle
adc
pop
cwde
movs
call
arpl
imul
jae
fs
fldcw
movs
mov
or
inc
jl
mov
pop
mov
imul
inc
or
push
jae
ror
mov
repnz
in
sbb
xor
or
cmps
stos
retf
inc
loop
shl
jnp
(bad)
mov
pop
cld
test
inc
aam
pop
scas
mov
mov
sub
out
sub
xchg
repnz
jge
jae
lahf
fwait
cmp
xor
jmp
mov
ret
push
push
push
sbb
xor
test
xchg
or
pop
lds
test
xlat
xor
int3
pop
mov
xlat
je
out
and
aaa
repz
fwait
cmp
retf
test
popf
fwait
jl
(bad)
cli
leave
mov
adc
inc
test
mov
js
aad
xchg
jmp
push
or
jne
ja
pusha
outs
fmul
scas
sbb
(bad)
cmp
into
std
mov
or
cdq
or
fst
daa
ins
inc
mov
pop
jp
adc
ror
popf
rol
repnz
outs
mov
mov
repz
movs
push
xchg
sub
push
mov
and
inc
in
out
dec
or
inc
fsub
ins
stos
fild
or
adc
jp
mov
mov
xchg
inc
sbb
and
mov
sbb
(bad)
and
xchg
(bad)
rcl
movs
inc
out
jge
or
pop
rol
retf
jle
jns
dec
sub
inc
or
push
push
leave
xchg
pop
hlt
cwde
add
adc
mov
(bad)
(bad)
mov
sbb
push
dec
push
dec
into
xor
cvtpi2ps
lahf
pop
sub
je
imul
mov
int3
loopne
ins
cli
mov
mov
movs
cs
jecxz
mov
xchg
or
shl
popf
cmp
aad
push
lock
mov
loop
loopne
cmp
ror
add
rcl
leave
loopne
cmp
cs
mov
sti
enter
cmp
sahf
pop
inc
enter
jo
mov
mov
aam
dec
jno
inc
iret
pop
push
xlat
xor
dec
call
addr16
sbb
inc
mov
xlat
jp
ins
push
push
lds
xor
inc
xor
jo
cmps
out
jnp
inc
into
adc
je
add
movs
test
or
xchg
loopne
aaa
ret
dec
cmps
sbb
pop
mov
xchg
adc
dec
sub
dec
popf
in
jae
or
mov
sub
push
ror
fsub
dec
cmps
ds
add
push
add
cmps
aam
popf
mov
iret
jno
lock
cli
push
bswap
push
inc
dec
mov
xchg
test
xor
cmp
pop
sar
fisub
jge
(bad)
lahf
add
imul
jae
call
lahf
sbb
bound
je
cmps
jp
and
ins
mov
rcl
pusha
shl
inc
rcl
cmp
sub
mov
repnz
ret
and
xchg
or
add
icebp
mov
dec
pop
je
or
fnstcw
jp
xchg
xchg
dec
out
repz
in
popf
jnp
test
sub
pop
lock
and
sbb
je
jg
sbb
rcl
cmp
xor
inc
adc
out
inc
sar
sbb
(bad)
sti
mov
pop
dec
movs
and
loop
lods
and
iret
xor
sub
and
jo
jecxz
jmp
and
and
pusha
ins
dec
jl
movs
xchg
push
addr16
or
push
lods
out
scas
loopne
push
adc
push
xor
xchg
ds
mov
mov
xchg
inc
pop
or
adc
repz
sub
jb
stos
stos
mov
mov
cmp
xchg
lods
data16
push
aaa
jo
push
movs
mov
dec
or
mov
mov
and
or
addr16
fcomp
das
xchg
sub
fisubr
leave
test
xchg
inc
cmc
es
sti
push
jbe
pop
mov
dec
push
dec
(bad)
not
cmc
jns
push
lahf
movs
je
inc
cmc
rcr
cs
jae
sub
add
cmp
gs
jb
push
sbb
adc
jbe
jae
les
xor
sub
push
or
les
mov
dec
mov
or
popa
jns
mov
pop
pop
push
xor
pmovmskb
out
adc
mov
xchg
std
leave
lods
jb
xchg
stos
and
inc
sub
sbb
out
shr
add
mov
push
lds
mov
dec
jecxz
fsubp
xchg
jmp
mov
gs
fisub
in
shl
pop
icebp
push
inc
push
jp
dec
(bad)
mov
(bad)
out
jmp
cmc
ss
add
cmp
out
cmp
aas
ins
sbb
arpl
sbb
or
mov
pop
in
icebp
mov
icebp
add
dec
push
out
mov
shl
cmps
push
add
push
in
jns
mov
push
xor
mov
mov
fcomp
mov
outs
pop
sub
test
or
mov
ss
stc
rol
push
sub
lods
cmp
std
jmp
dec
push
sub
fdivp
sub
(bad)
out
mov
and
scas
movs
and
mov
jmp
lds
test
push
jb
sbb
outs
push
inc
mov
and
ins
test
sbb
es
cmc
pop
dec
scas
mov
dec
arpl
and
jge
rcr
rol
test
nop
jno
(bad)
jmp
sub
jecxz
pop
adc
xor
xchg
call
xchg
mov
ret
shr
pop
loopne
pop
rcl
mul
push
sub
lahf
mov
std
(bad)
sti
fldenv
in
in
imul
push
addr16
xlat
aam
popf
es
inc
push
inc
js
in
in
arpl
sbb
fs
test
fld
cmp
jne
mov
sbb
ret
push
mov
ins
outs
fwait
bound
outs
jmp
pusha
stc
ins
gs
sub
add
lahf
cmp
cmc
movs
inc
and
add
mov
pop
shr
out
cwde
es
data16
mov
sbb
add
dec
mov
ficom
cmp
jne
push
stc
rcl
push
mov
push
and
test
bound
mov
mov
sar
and
call
outs
nop
jbe
mov
mov
mov
inc
sbb
(bad)
fidiv
fwait
adc
inc
cmp
imul
push
out
inc
inc
imul
into
inc
enter
inc
fistp
jg
xor
and
adc
mov
sbb
xchg
inc
cmp
loopne
and
jg
and
push
sahf
xchg
cmp
mov
mov
sbb
cmps
and
in
out
stc
pop
dec
pop
or
aam
push
enter
add
adc
push
outs
int
pop
push
and
and
or
xchg
mov
push
ret
fld
add
push
jge
or
push
out
(bad)
cmp
xor
inc
cmp
ret
lds
retf
mov
jb
daa
ficom
aad
jmp
aam
cmc
xchg
cmp
jae
dec
rcr
dec
(bad)
fstp
stc
movs
in
jmp
movs
in
lds
movs
xor
cmc
int3
push
pop
es
imul
mov
or
scas
lds
fidiv
int3
repnz
in
jecxz
jne
sub
cs
aas
push
aam
xchg
movs
gs
mov
dec
fidivr
push
dec
ins
idiv
add
cs
loope
adc
das
xchg
sub
or
mov
push
xor
sub
fwait
out
xor
movs
loopne
add
movs
fs
test
mov
mov
(bad)
test
sbb
in
(bad)
out
out
push
pop
mov
outs
mov
dec
push
imul
daa
(bad)
pop
and
imul
mov
sahf
inc
pop
mov
mov
mov
xchg
sub
fnop
sbb
jle
cld
xor
enter
imul
ins
cli
test
push
push
dec
aaa
mov
xchg
sbb
jmp
mov
xchg
aad
add
add
cmp
retf
cmp
loopne
cdq
mov
add
neg
or
inc
push
jno
rol
jg
push
add
xchg
lahf
hlt
add
je
or
pop
mov
repz
pop
hlt
es
cli
mov
(bad)
js
test
dec
pop
jmp
add
mov
js
(bad)
push
and
rcr
jg
(bad)
cmp
test
jns
jo
fwait
movs
mov
cmc
inc
repz
xlat
add
mov
(bad)
fs
fcmovu
add
ja
(bad)
jno
out
sar
(bad)
sbb
mov
jecxz
cld
in
dec
ins
dec
xchg
mov
ja
xor
cmp
lock
jmp
jo
fst
imul
push
cs
sbb
mov
mov
jae
xor
retf
aad
ja
and
mov
lahf
lods
call
out
dec
stos
add
mov
(bad)
mov
push
or
and
jmp
in
fldenv
inc
pop
push
(bad)
jo
inc
xchg
inc
cmc
mov
xor
pusha
adc
xchg
mov
(bad)
es
aam
xchg
clc
das
and
pusha
(bad)
mov
(bad)
ds
jns
idiv
es
ja
push
test
in
adc
mov
pop
mov
fsub
(bad)
sbb
cmp
in
add
pop
jg
sub
rol
cmps
inc
and
mov
mov
aaa
test
fs
cwde
retf
lahf
mov
xor
sbb
push
dec
jl
push
adc
push
push
shl
inc
mov
out
xor
sbb
iret
test
fidivr
call
and
sbb
push
inc
pop
adc
inc
pop
data16
push
push
pop
sbb
xor
call
std
add
ret
cdq
dec
lock
sbb
sub
jno
add
test
push
lock
das
in
adc
iret
mov
cmp
add
xchg
(bad)
mov
popa
mov
fst
inc
push
fsubr
sub
inc
cmps
pushf
jmp
sbb
pop
xchg
sbb
pop
jo
jle
fwait
mov
xor
lods
dec
pop
repnz
cmp
or
jne
jae
jbe
jnp
jno
sbb
ret
push
(bad)
mov
test
cmps
out
mov
xor
jecxz
lea
pop
pop
in
mov
in
xor
loopne
(bad)
mov
jo
stos
xchg
iret
and
ret
addr16
dec
xchg
push
xchg
jbe
push
inc
mov
sub
std
(bad)
in
jl
xchg
xchg
fsub
xor
out
and
mov
and
fimul
adc
stos
pop
pop
and
shl
mov
mov
fimul
sbb
xchg
mov
enter
out
or
jo
lods
push
test
cmp
jae
int
sbb
push
xor
mov
daa
movs
jmp
jno
push
sbb
or
pop
iret
lea
pusha
push
(bad)
fnstenv
adc
(bad)
sbb
inc
cmp
iret
popf
loope
icebp
add
mov
pop
push
mov
mov
adc
shr
mov
test
imul
cmp
push
inc
xor
sub
pop
sti
jge
mov
test
inc
mov
sub
dec
test
pop
mov
mov
push
xchg
ror
test
out
(bad)
adc
mov
icebp
nop
fisubr
stc
or
mov
xor
push
push
bound
push
stos
jbe
int3
fiadd
sahf
jl
xor
ins
shl
pop
xchg
mov
out
push
lock
mov
(bad)
xlat
xor
cmp
push
sbb
imul
jae
mov
or
out
in
enter
add
push
movs
leave
add
(bad)
shr
repnz
(bad)
cmc
and
xchg
in
inc
cs
scas
les
cmps
leave
mov
les
loope
out
add
cdq
in
sbb
enter
push
mov
nop
(bad)
jo
inc
shl
push
and
in
lods
push
inc
cmps
mov
jp
lods
pop
cmps
mov
aas
adc
adc
dec
cmp
inc
push
pushf
dec
push
push
ret
data16
addr16
rcr
es
mov
mov
gs
or
or
push
pop
shr
inc
cdq
add
inc
sbb
clc
jl
sbb
in
and
sysenter
cmp
out
jg
je
outs
mov
mov
out
(bad)
(bad)
neg
fst
icebp
sti
sub
cmp
ds
dec
xor
mov
adc
xchg
aam
xchg
adc
inc
rcr
sbb
test
sbb
cmp
call
lock
cmp
add
pop
or
jmp
repnz
fwait
add
dec
inc
popf
into
dec
cmp
mov
sub
js
sub
dec
lods
in
push
(bad)
push
cmp
xor
in
jmp
or
dec
mul
push
mov
sahf
add
fcmovnbe
loope
sub
retf
leave
jbe
fcmove
shl
pop
xchg
(bad)
xchg
or
(bad)
std
or
jb
out
sbb
mov
pop
shl
push
push
scas
loop
test
push
stc
mov
jl
dec
fwait
in
(bad)
pop
fisttp
pop
cmp
popa
cli
jg
std
dec
sbb
add
push
cmps
cli
xchg
mov
mov
pop
adc
push
push
fst
cmp
pop
xchg
nop
repnz
fild
bound
mov
in
fisubr
dec
or
adc
jmp
outs
cld
cmps
mov
(bad)
xor
mov
pop
mov
pop
shl
mov
jno
or
xchg
aam
stc
or
xchg
imul
xchg
pop
adc
mov
sub
hlt
cmps
lods
xor
or
jb
cli
sar
addr16
out
fnstcw
into
mov
inc
cmp
or
(bad)
cmp
mov
jns
and
lea
inc
xchg
pop
and
icebp
rol
lods
daa
sbb
ins
cmp
mov
xchg
add
mul
cdq
pop
hlt
lock
leave
lods
je
in
inc
xchg
and
mov
cmc
push
loopne
adc
adc
add
dec
sar
mov
loope
ins
mov
sbb
iret
cs
(bad)
mov
out
and
pushf
std
jg
cmp
lahf
call
pusha
lahf
pop
mov
int
lds
push
shr
sub
adc
test
mov
push
sub
mov
inc
adc
stos
shl
pop
cmc
inc
sbb
push
inc
push
jbe
(bad)
push
mov
cmp
mov
popf
dec
bound
shl
jecxz
sub
shl
into
into
jo
cmp
pop
sti
out
int
imul
mov
or
not
imul
js
cwde
addr16
in
mov
mov
fiadd
lods
dec
into
lods
test
mov
dec
pop
(bad)
sub
lods
rcl
mov
(bad)
lahf
and
xchg
pop
push
out
ret
loopne
scas
fst
sub
cmp
xchg
sti
push
int3
fst
in
mov
gs
or
jg
fcmove
ret
push
cld
lock
mov
ret
sbb
adc
sbb
sub
sub
ret
jo
lock
jge
ds
test
fcom
aad
push
jae
mov
pop
pusha
shl
mov
sub
(bad)
sub
mov
jb
pop
mov
push
pop
inc
xor
retf
into
ins
call
dec
or
shl
inc
jno
sbb
std
mov
repz
stc
pop
std
cs
push
adc
(bad)
clc
or
inc
inc
inc
jmp
xor
cmp
hlt
aaa
fild
repz
pop
mov
xlat
add
xor
and
movs
out
jge
mov
push
mov
jns
stos
in
jo
xchg
xchg
cmc
mov
sbb
ret
fwait
dec
inc
dec
jmp
push
dec
inc
jb
mov
add
add
mov
aad
lods
pusha
sbb
sbb
dec
icebp
aad
xchg
sahf
pop
xlat
jmp
imul
xor
xor
int
daa
fdiv
pop
jno
dec
and
aas
or
xchg
push
pop
push
mov
nop
cmp
aas
push
(bad)
outs
loopne
jle
adc
popf
test
pop
jge
es
ds
jle
mov
xchg
(bad)
imul
stc
test
sbb
xor
rol
outs
inc
ja
aam
xchg
mov
or
loope
gs
adc
push
repz
rcl
sub
popf
test
mov
cmp
or
retf
in
mov
jge
js
fisttp
in
int3
and
movs
(bad)
pop
pop
xchg
jl
mov
dec
push
jmp
cmp
rcr
ret
xchg
sar
popf
jno
popa
repnz
or
outs
xor
sbb
mov
pop
mov
sar
js
add
push
sub
push
popa
pop
daa
sub
jl
jle
ret
dec
adc
push
in
iret
sar
push
sub
dec
iret
sub
je
jl
dec
xchg
pop
pushf
sub
and
popf
rol
shl
mov
sbb
and
repz
or
dec
(bad)
in
pop
(bad)
je
jno
and
sub
adc
or
cmp
jns
repnz
test
ret
stos
jle
add
xor
xor
lods
clc
xor
and
inc
mov
or
dec
mov
dec
mov
lds
aaa
adc
mov
mov
pop
adc
mov
les
rcr
xor
push
dec
sub
or
(bad)
rcr
cmp
cld
xchg
pop
and
adc
sub
retf
push
cmp
nop
pop
aas
add
add
dec
cs
fmul
dec
or
aam
(bad)
fistp
dec
mov
dec
mov
push
push
sbb
aaa
(bad)
test
mov
mov
loop
and
mov
out
pop
or
adc
daa
popf
xchg
shl
xor
rep
adc
and
imul
out
mov
sub
mov
cmp
inc
pop
mov
push
or
repz
jno
mov
arpl
mov
push
lea
add
hlt
mov
jp
fs
jge
popf
icebp
hlt
inc
mov
clc
xchg
pop
xor
stc
pop
mov
push
pop
in
add
jmp
and
and
and
mov
scas
xchg
stc
stc
xchg
shl
xchg
aam
cmp
mov
test
mov
inc
cdq
mov
lea
inc
ins
pop
rcr
add
retf
sub
aad
call
xchg
jle
aam
(bad)
jno
xchg
ss
mov
stos
xor
mov
sbb
sahf
add
dec
mov
lods
not
and
jns
fcomp
xor
ss
fisub
mov
in
or
or
mov
and
cmp
jmp
sub
shl
sti
push
push
mov
xchg
sbb
mov
add
xchg
scas
or
cmp
iret
mov
xor
and
add
mov
movs
lea
jp
stc
or
mov
sbb
shl
fild
das
mov
cmp
stc
mov
stc
mov
rcr
jmp
fisubr
mov
add
jl
test
xor
(bad)
lods
test
and
enter
xor
scas
es
jns
into
retf
dec
scas
mov
mov
or
mov
mov
xchg
aaa
pop
push
sbb
cdq
lds
je
cli
dec
sbb
into
pop
cmps
mov
mov
stc
pop
fistp
add
push
dec
mov
dec
mov
mov
stos
push
push
shr
inc
mov
mov
add
xchg
shl
pop
push
pop
push
jns
dec
rol
mov
rcl
or
mov
daa
xchg
in
pop
movs
(bad)
pushf
fiadd
dec
int
dec
inc
addr16
and
mov
ins
xchg
or
fnsave
idiv
(bad)
mov
mov
les
push
jecxz
sbb
xchg
sahf
jp
sar
and
int3
bound
cmp
(bad)
add
push
adc
fistp
pop
call
push
dec
fiadd
int3
(bad)
aaa
mov
xchg
(bad)
fimul
cwde
ret
and
lahf
es
jae
enter
pop
push
sub
stc
mov
aam
mov
push
add
fld
sbb
mov
retf
inc
stos
mov
and
loopne
sub
push
xchg
movs
inc
fsubp
mov
jg
adc
xchg
rol
imul
push
mov
and
dec
(bad)
cmp
dec
mov
jne
aas
sar
fwait
mov
out
jg
xor
fisttp
je
or
sub
push
lods
dec
dec
leave
mov
cli
xor
adc
push
xor
lahf
mov
hlt
daa
pop
mov
inc
fnclex
(bad)
frstor
pop
inc
jle
in
pop
xchg
retf
cld
sub
inc
in
mov
pop
int
adc
gs
sub
not
sti
cmps
loopne
loop
pushf
sub
mov
popf
fisttp
movs
and
xor
mov
pusha
les
mov
sbb
xchg
jo
xor
inc
mov
sar
(bad)
out
in
fstp
push
xchg
inc
and
push
shl
xchg
(bad)
xor
xchg
sar
xor
imul
cdq
jbe
ins
enter
dec
jmp
adc
inc
or
jo
stos
jnp
mov
pop
push
xchg
mov
xor
adc
push
add
ret
adc
loop
or
push
mov
fist
adc
enter
repz
sub
mov
std
ret
stc
enter
cwde
cmp
adc
fimul
bswap
push
pop
cld
cdq
mov
shr
sbb
loopne
sbb
fisttp
inc
mov
jp
mov
sahf
repnz
js
mov
popa
repnz
test
gs
xor
push
mov
nop
sbb
push
test
ficomp
(bad)
(bad)
sti
xchg
mov
aad
inc
lods
mov
movs
in
or
xor
daa
add
ja
sbb
and
adc
xchg
push
addr16
jne
pop
(bad)
mov
pop
aam
and
mov
mov
sbb
aas
imul
(bad)
mov
repz
ret
adc
and
imul
rcr
push
mov
cmp
imul
mov
add
mov
bound
movs
add
ret
jbe
and
xchg
js
movs
push
outs
mov
les
repz
mov
shl
push
scas
xlat
or
fidivr
mov
push
push
push
pop
fidiv
fldenv
cwde
out
sti
or
cmp
or
mov
cmp
(bad)
adc
or
dec
retf
push
fisttp
push
out
int3
or
lahf
xor
out
jmp
ss
xor
mov
(bad)
popa
cwde
stos
clc
mov
jo
xor
cli
inc
jae
stos
arpl
pop
inc
out
cmp
pop
adc
xor
outs
add
in
icebp
repz
mov
sbb
add
push
in
out
and
lods
mov
fs
xor
push
add
pop
into
mul
inc
pop
pop
jmp
out
sbb
scas
add
mov
jmp
lock
test
repz
loopne
push
or
jnp
and
pop
mov
ror
pop
(bad)
fcomp
icebp
dec
pop
scas
mov
stos
inc
mov
xor
das
mov
adc
int3
add
add
sti
into
cwde
sub
div
xchg
aad
mov
dec
xor
or
icebp
mov
jbe
dec
push
cmp
arpl
imul
jo
sub
bound
inc
push
mov
cmp
jge
(bad)
jmp
jb
or
stos
outs
adc
mov
mov
cmp
inc
cmp
pop
es
push
ins
sbb
psubw
or
arpl
xchg
push
clc
xchg
mov
dec
xchg
mov
sysret
or
inc
nop
iret
adc
mov
ins
xor
xchg
push
mov
cmp
xchg
fwait
sub
jp
pop
mov
add
cdq
cmp
inc
cmp
imul
pushf
pushf
mov
pushf
in
inc
ja
sub
cwde
or
retf
fwait
(bad)
jmp
pop
add
jmp
pushf
js
push
sub
cmp
nop
and
add
and
ficom
jge
pop
adc
pop
dec
icebp
sbb
lods
sar
xor
scas
ja
ja
pop
imul
mov
std
cmp
leave
ss
in
(bad)
int
test
shl
fwait
sahf
mov
inc
call
xchg
cli
inc
xchg
mov
mov
cs
push
pop
in
pop
movs
jb
fdivr
push
cmp
push
jecxz
mov
mov
mov
cmp
and
leave
and
mov
in
lock
mov
retf
aad
lods
ficom
mov
(bad)
or
cmp
jmp
add
add
mov
xchg
adc
outs
push
repnz
aas
mov
mov
mov
jnp
pop
mov
lock
mov
adc
aam
(bad)
loopne
inc
shl
mov
pop
push
dec
addr16
lods
mov
fs
push
mov
mov
out
sub
sbb
adc
mov
(bad)
daa
(bad)
fwait
sti
ds
pop
inc
movs
fucom
cmp
movs
shl
mov
pop
add
xor
jae
fucom
mov
mov
imul
sbb
cmp
mov
cdq
fisub
mov
pusha
pop
mov
sbb
or
add
push
mov
pushf
inc
sub
push
jmp
lea
call
and
and
pop
addr16
retf
mov
aad
xchg
or
cmps
sbb
ja
pop
retf
imul
jns
repz
lahf
imul
and
xor
xchg
xor
test
and
mov
in
xchg
mov
xor
mov
fcomp
xchg
adc
fisttp
(bad)
scas
dec
mov
inc
jo
mov
lea
jnp
mov
dec
out
(bad)
jge
push
rcl
int
mov
xchg
stc
fadd
xor
ret
mov
outs
pop
jmp
leave
test
xlat
inc
aad
into
cmp
popf
ins
or
div
dec
mov
int3
cmp
sub
xor
xchg
push
and
jge
aam
into
mov
loop
loopne
mov
es
jbe
adc
sub
fcmove
inc
jb
repz
je
push
loopne
sub
(bad)
jb
and
aam
cli
xor
mov
test
add
aad
mov
jae
mov
jo
jge
mov
out
dec
add
push
inc
jmp
int
xchg
mov
pop
std
ret
ror
xchg
xlat
addr16
mov
in
and
xchg
stc
xchg
test
add
and
retf
jmp
xor
xor
test
add
push
and
cmp
pusha
jae
loopne
adc
sbb
mov
dec
or
repnz
mov
lds
and
popf
sub
popf
adc
push
ja
lock
xchg
cmps
leave
push
pushf
push
movs
xchg
nop
push
or
inc
adc
scas
push
jns
js
dec
out
dec
or
dec
jnp
push
pop
test
push
cmc
dec
popf
dec
(bad)
out
xchg
int
mov
fistp
lahf
inc
fs
aaa
shl
dec
retf
mul
nop
sub
(bad)
ror
pop
mov
fimul
jge
xchg
adc
nop
inc
out
or
push
cmps
sahf
inc
daa
jns
in
jp
aas
add
add
aad
mov
jp
sahf
mov
bound
xor
retf
dec
scas
nop
ins
sbb
sub
jl
xor
pop
push
or
push
dec
dec
rcr
cwde
mov
stc
je
repz
outs
shl
imul
xor
pop
pop
stos
div
jmp
inc
and
scas
inc
push
adc
cmp
and
(bad)
cli
test
and
xchg
mov
rol
das
in
in
pop
cwde
idiv
stos
and
dec
out
jbe
neg
sbb
ss
cmp
loop
fidivr
mov
and
and
xchg
neg
repnz
ins
sbb
jge
ins
jno
pop
outs
sahf
arpl
jns
int
pop
xor
jg
repz
sub
dec
sbb
mov
(bad)
sbb
xchg
mov
sbb
or
xchg
(bad)
repz
cmp
dec
sbb
jl
retf
jmp
jbe
aas
xchg
iret
emms
mov
ja
(bad)
(bad)
stc
mov
aam
hlt
push
in
arpl
xchg
push
test
or
adc
cwde
rcl
in
pop
jmp
test
lock
pop
fwait
data16
adc
mov
pop
repz
push
lahf
mov
push
call
cli
cmp
sahf
adc
pop
sub
xchg
cmp
dec
(bad)
das
add
add
or
adc
or
mov
or
inc
jbe
call
xchg
dec
push
inc
mov
pop
ins
test
cmc
data16
int3
fscale
dec
repnz
loopne
stos
inc
pop
jp
inc
cmp
lods
outs
push
mov
mov
push
sti
cmp
and
jmp
add
int3
push
add
dec
scas
inc
xchg
fwait
ja
sbb
pop
add
adc
out
lods
mov
fcom
mov
gs
fiadd
sub
inc
adc
mov
dec
in
adc
sbb
add
sbb
xchg
in
repz
repz
jae
scas
inc
and
jmp
ror
pop
ret
push
push
inc
(bad)
xchg
test
dec
xor
mov
retf
ret
ret
cmp
mov
test
lahf
rcl
mov
in
xor
push
imul
call
div
sub
push
mov
movs
fcomp
and
jno
fcomp
js
cdq
sti
and
test
test
add
mov
push
sub
in
jae
add
xor
movs
lock
mov
sbb
mov
add
pusha
mov
xor
sub
aad
pop
(bad)
inc
adc
stos
sar
mov
call
je
adc
loope
sbb
cmps
mov
std
movs
xor
and
addr16
stos
imul
and
inc
adc
ret
aas
adc
mov
sahf
add
hlt
out
cmp
xchg
xchg
inc
jns
cld
and
popf
loope
pop
es
shl
aaa
jno
and
and
scas
loopne
clc
(bad)
mov
lds
imul
aam
aaa
cmps
loopne
(bad)
stos
xor
fnsave
jp
fbld
and
enter
lds
jno
iret
sbb
dec
xor
fisubr
daa
jnp
inc
mov
enter
test
cwde
js
sbb
loopne
fwait
or
(bad)
jecxz
enter
pop
das
jecxz
loope
loop
pop
sub
add
xchg
adc
push
ret
xchg
inc
ret
fild
std
sbb
mov
ds
cmp
inc
repnz
sub
bound
aam
repnz
add
mov
jmp
loop
imul
shr
dec
pop
les
xchg
mov
inc
jmp
std
in
fwait
and
mov
int
xor
mov
xchg
aaa
push
dec
push
xchg
mov
imul
push
add
call
mov
outs
test
cmp
pop
dec
push
pop
gs
imul
add
sbb
pusha
outs
pop
mov
jl
mov
jb
cwde
fisubr
inc
or
inc
and
ja
pop
dec
xchg
mov
in
jae
jno
dec
(bad)
fucomip
pusha
(bad)
sbb
mov
jg
sbb
adc
and
add
xor
jecxz
mov
lods
bound
in
mov
cmp
add
gs
pop
mov
daa
push
pop
outs
mov
mov
and
cs
sar
inc
and
lods
or
aad
lahf
daa
mov
or
jl
inc
mov
sub
mov
repz
jns
adc
sub
add
push
mov
mov
mov
inc
js
dec
mov
fs
pop
jo
into
fwait
mov
aaa
and
add
jae
xlat
add
add
push
rol
add
lods
push
(bad)
jmp
aam
mov
cwde
dec
dec
fwait
mov
dec
or
pop
lahf
jl
pop
je
sbb
xor
xchg
adc
cmp
dec
rol
out
loop
sub
push
outs
imul
ja
mov
leave
aam
imul
cmp
aam
and
cmp
and
mov
mov
mov
pop
mov
leave
cmp
retf
push
(bad)
push
push
jp
loopne
cmp
add
xor
hlt
pop
je
dec
out
jg
inc
(bad)
call
adc
sti
sub
push
pop
and
sub
push
sub
cmp
xor
and
lock
scas
sahf
jmp
out
push
add
or
mov
mov
push
push
sbb
pop
push
(bad)
sti
add
ror
repnz
sub
add
pusha
fisttp
mov
(bad)
mov
xchg
out
clc
cdq
sbb
lods
imul
ret
fs
ds
cmps
gs
push
or
mov
xor
int3
jl
mov
out
pushf
jbe
dec
pop
and
dec
jo
mov
mov
jmp
mov
inc
cld
je
pop
(bad)
ret
dec
aaa
stos
loop
js
pop
sbb
fistp
hlt
mov
or
inc
rcl
pushf
ins
popa
rcr
(bad)
shl
call
add
and
push
ins
in
(bad)
fidiv
out
loop
in
xchg
xor
mov
add
(bad)
and
lahf
sar
rol
mov
(bad)
xor
mov
shl
inc
mov
adc
ret
nop
pop
mov
mov
push
add
xor
in
test
cdq
jo
je
push
pop
sub
fwait
dec
inc
and
or
inc
mov
loope
inc
ret
das
stos
(bad)
adc
xchg
out
jl
pusha
pop
push
popf
cmp
or
mov
sbb
cmps
aam
adc
add
mov
je
push
add
mov
mov
pop
xchg
dec
mov
out
iret
in
repnz
mov
or
cli
pop
(bad)
int
sti
push
sbb
imul
pop
push
inc
icebp
ss
ds
iret
jg
mov
leave
xchg
fild
and
cs
call
bound
pushf
out
pop
in
adc
popf
shl
jo
repnz
hlt
mov
or
push
outs
mov
mov
pop
jo
push
mov
js
lods
retf
cmp
dec
inc
shl
inc
push
xor
shl
adc
inc
dec
mov
shl
mov
fmul
mov
into
std
fwait
mov
mov
clc
inc
das
les
sub
sub
mov
sub
shl
cdq
gs
and
pop
cwde
sub
lods
pushf
pop
movs
xchg
cli
in
into
adc
mov
dec
cmp
push
sub
inc
ret
(bad)
fistp
cmps
outs
xchg
into
(bad)
loopne
rcl
mov
out
sbb
gs
ins
loope
outs
xlat
inc
cmp
and
std
scas
gs
out
out
xchg
adc
bound
cwde
icebp
movs
call
rcr
dec
and
mov
mov
outs
stc
jb
(bad)
cmp
mov
xchg
test
sbb
aam
cld
rol
clc
fsub
sbb
sbb
out
dec
xchg
out
cli
and
cmp
ret
dec
mov
rol
int
aad
adc
fld
popf
pop
fisttp
mov
pop
dec
dec
xor
xor
clc
movs
cmp
push
mov
sbb
stos
(bad)
sbb
dec
test
out
jnp
mov
push
jl
inc
sar
pusha
das
pusha
add
ror
shr
dec
xchg
pop
pushf
cmp
pop
add
or
inc
jnp
mov
test
pop
lods
adc
mov
scas
loopne
cmp
(bad)
leave
xor
or
stos
lods
pop
rcl
ss
dec
(bad)
jne
stos
outs
mov
sub
sbb
in
shl
sub
adc
cmp
popa
or
cli
pop
sbb
adc
ja
inc
add
inc
out
inc
jb
setp
mov
dec
push
pop
mov
xchg
jno
pop
rol
rol
sub
or
xor
cs
pusha
and
push
cmps
inc
inc
mov
sub
daa
sub
jb
dec
pop
and
push
push
cmp
jae
loopne
cmps
sbb
ins
adc
adc
cli
pop
xchg
call
push
or
add
pop
shl
scas
iret
xor
outs
inc
pop
rcl
cdq
pop
push
xchg
movs
call
jbe
fwait
mov
xchg
lahf
mov
push
mov
cli
ror
repz
xor
dec
pop
cld
push
sub
loopne
mov
ds
xchg
or
pop
and
and
je
add
pop
fiadd
jmp
lea
add
pop
leave
xchg
ins
xor
inc
xchg
scas
movhlps
ins
sub
mov
fld
addr16
out
dec
popf
mov
sbb
enter
mov
sub
mov
les
cli
fdiv
cmp
jne
aad
cs
dec
adc
xor
inc
sub
dec
cmp
sar
ficomp
cwde
dec
fmul
cmp
xor
jge
ror
sub
mov
(bad)
mov
shl
pushf
sahf
push
dec
pusha
xor
or
pusha
push
sbb
test
mov
xor
cmp
pop
cmps
dec
cmps
fldpi
inc
stos
push
mov
cmp
xchg
inc
sti
push
int3
rcl
(bad)
mov
cmp
add
pop
adc
or
repnz
cmp
add
ja
cmps
movs
dec
cmp
jg
jns
mov
popa
cwde
push
lds
push
dec
test
fdivrp
hlt
jecxz
xchg
arpl
jmp
in
cmp
push
pusha
xchg
push
push
add
ficom
cmp
lock
push
push
clc
push
in
rcr
pop
outs
jle
mov
dec
and
push
push
call
arpl
outs
leave
and
std
xchg
(bad)
std
mov
and
pop
imul
jg
fwait
movs
add
mov
imul
jne
or
jae
sbb
push
adc
pop
ins
xlat
push
imul
or
scas
dec
daa
jo
out
in
mov
mov
xchg
adc
in
cdq
inc
clc
gs
dec
fcmovnb
inc
add
and
add
sub
pop
outs
scas
jbe
ret
and
dec
lock
pop
dec
lahf
mov
cmps
cmp
in
sbb
mov
dec
loope
fwait
fs
shl
out
and
pop
int3
mov
sub
sub
push
in
dec
test
(bad)
mov
add
adc
jne
add
test
jo
jno
mul
lea
das
cmps
xor
cmp
inc
jmp
xor
and
jge
repz
jbe
dec
mov
popf
stos
fidiv
inc
es
loop
imul
cmps
lods
aam
repnz
(bad)
xchg
popf
dec
add
test
adc
cmp
(bad)
in
cmps
jle
jno
mov
out
dec
js
or
sbb
or
(bad)
adc
fwait
popa
xor
std
jae
arpl
aad
dec
and
push
pop
lods
sbb
daa
iret
mov
mov
push
lods
jb
and
jle
nop
dec
push
and
loopne
pop
aas
iret
mov
or
sbb
(bad)
mov
outs
clc
(bad)
shl
add
dec
dec
or
aad
xor
mov
cmp
mov
aad
sbb
cmp
mov
sub
sbb
mov
push
ret
sbb
shl
jecxz
push
adc
xchg
cmp
mov
pop
sub
stos
cmp
dec
cmp
mov
cmps
mov
xchg
inc
fisub
cli
in
and
stos
push
pop
sub
sub
rcl
or
add
lea
jl
clc
test
in
movs
sahf
daa
push
push
dec
sbb
sti
mov
ja
sub
inc
pop
mov
sbb
mov
pop
inc
(bad)
pop
cmp
jl
test
jmp
outs
pop
dec
adc
ror
cmp
inc
popa
es
push
lods
pop
ds
and
sbb
mov
xor
pop
dec
jmp
aam
mov
in
mov
jmp
fcom
jecxz
push
dec
adc
jg
mov
shr
jp
xchg
movs
loop
push
sub
cmps
jae
inc
movs
jge
dec
das
test
pop
xor
in
cld
ja
fimul
pop
push
jg
xor
lods
push
cld
in
cmp
dec
movs
adc
bound
add
xchg
mov
pop
out
and
sub
pop
ficom
pop
fisttp
add
push
adc
ds
pushf
pop
call
jae
fsubr
mov
inc
pop
cmps
es
stc
pop
call
sub
movs
mov
std
jnp
push
and
loop
inc
test
nop
fiadd
adc
pushf
inc
dec
cmp
xor
loopne
jp
mov
add
enter
je
(bad)
mov
jmp
add
xor
repnz
add
push
out
inc
sub
push
scas
xor
xchg
sti
inc
mov
ret
sti
mov
push
push
js
inc
push
mov
(bad)
repz
dec
and
dec
push
adc
fs
jmp
mov
mov
enter
ror
mov
xor
mov
inc
ror
gs
test
ss
jmp
outs
loope
jb
xor
adc
inc
fild
in
jle
cmps
(bad)
das
and
pop
repnz
(bad)
ret
popa
and
jns
jns
pop
mov
and
inc
outs
pusha
adc
mov
push
dec
ror
or
mov
jecxz
add
clc
sbb
shl
in
push
pop
cwde
mov
inc
iret
lods
mov
pop
inc
jmp
lds
ss
repnz
addr16
loop
push
gs
out
lahf
adc
xchg
mov
and
into
movs
adc
sub
xor
dec
and
idiv
pushf
mov
xor
cmp
ins
pop
mov
or
and
xchg
or
int
loope
mov
push
ins
dec
mov
xchg
pop
sbb
and
jp
ins
sub
dec
rcr
push
popf
cmps
pop
or
or
mov
(bad)
xchg
jle
clc
xchg
and
inc
mov
(bad)
cli
pop
push
jmp
shl
sub
mov
add
or
enter
cld
jae
aad
xor
test
cli
fs
pusha
sub
pop
adc
fisttp
jnp
and
test
cmp
scas
stos
dec
adc
lahf
ds
je
bound
pop
nop
lods
pusha
add
(bad)
stc
je
add
adc
adc
popf
push
inc
adc
add
(bad)
jecxz
add
scas
ret
(bad)
jb
pop
sub
dec
cmp
in
ret
bound
pop
mov
add
bound
mov
popa
push
aaa
xchg
and
and
sub
nop/reserved
mov
adc
out
mov
bound
dec
and
jp
sub
mov
in
rep
(bad)
jl
xchg
pop
xor
inc
push
jmp
fcom
test
int
sub
mov
dec
into
adc
fdivr
push
retf
jle
pop
out
sti
(bad)
jp
lock
mov
in
pop
popa
xchg
(bad)
cmp
out
inc
cmp
nop
push
push
xchg
mov
stc
retf
int
or
jg
stos
push
cli
sahf
push
pop
add
mov
adc
(bad)
dec
sbb
sbb
sbb
adc
imul
sub
push
mov
dec
xchg
push
dec
bnd
jge
and
cmps
jmp
cmp
rcl
jae
add
mov
mov
push
out
test
jle
rol
pushf
jnp
inc
ja
aam
mov
(bad)
xor
jbe
retf
add
cmc
(bad)
cmp
sbb
(bad)
push
cmp
add
and
repnz
enter
xor
inc
xor
je
xor
xchg
xlat
xchg
out
ss
push
js
hlt
fdiv
(bad)
frstpm(287
leave
scas
lods
ja
call
scas
clc
jne
jbe
or
loope
iret
js
xor
test
jl
cmps
ja
xchg
mov
in
pop
xor
stc
dec
push
inc
push
mov
test
pop
adc
fstp
in
dec
jne
jb
les
arpl
test
nop
leave
xor
mov
mov
imul
int
pusha
sbb
or
push
int
imul
push
arpl
aad
mov
push
cmp
out
add
lods
pop
and
mov
jp
(bad)
mov
push
jp
fmul
cmp
jae
ffree
mov
pop
xchg
mov
xchg
sbb
xchg
pusha
and
mov
not
xchg
popa
shl
retf
jle
pop
movs
mov
pushf
mov
and
stc
ja
pushf
push
adc
add
adc
xor
pop
in
dec
adc
xor
add
dec
aas
push
pop
sub
ret
and
cdq
mov
push
mov
jmp
cmps
xchg
imul
loop
mov
movs
push
sub
iret
xlat
and
push
int3
dec
lahf
jnp
adc
es
loop
xchg
push
and
and
push
sbb
pop
jns
sar
out
es
outs
loop
lods
inc
jmp
push
cwde
inc
int
sub
or
inc
push
int3
xchg
and
es
push
lods
inc
aaa
jno
pop
pop
popf
push
mov
jo
adc
pop
jne
mov
push
rol
mov
fwait
in
in
sub
sub
mov
push
cmps
mov
mov
rcl
iret
mov
cwde
repnz
sub
cmp
imul
pop
or
pop
shl
daa
xchg
adc
pop
xor
mov
jae
inc
jg
mov
ins
adc
scas
pop
hlt
cli
push
push
aaa
add
imul
cmp
mov
mov
fwait
pop
lea
cmp
test
xchg
xchg
fst
xchg
pop
pushf
or
fsubr
test
dec
hlt
xchg
not
arpl
pop
mov
mov
and
dec
jl
cmp
pop
call
stc
movs
das
cmp
xchg
add
out
in
push
mov
xor
add
pop
retf
sbb
jle
cmps
addr16
push
jg
movs
pop
mov
xor
imul
aaa
loop
ret
icebp
rol
inc
xor
sbb
fs
data16
in
out
jae
cmp
xchg
dec
xor
ins
xlat
mov
sbb
push
aam
xlat
cmp
xor
hlt
sub
shl
ret
dec
stos
dec
dec
rcl
mov
dec
or
pop
xlat
movs
or
call
in
or
pusha
(bad)
outs
and
and
mov
jns
xchg
enter
call
pop
in
xor
mov
mov
popf
inc
jmp
jl
or
(bad)
retf
xchg
loop
int3
test
pop
and
scas
into
(bad)
mov
ret
lea
test
cmp
push
xchg
jo
and
test
mov
psubw
xor
ss
xchg
popf
js
lea
repnz
cmp
repnz
xchg
inc
arpl
mov
ins
push
add
addr16
jne
mov
ret
push
sub
repz
jle
les
ins
adc
push
je
xor
ja
loope
and
fst
fild
mov
dec
dec
push
sbb
mov
mov
pop
cmp
xchg
mov
jae
je
mov
test
cmc
push
inc
enter
jae
inc
push
es
cmp
cld
push
sub
setb
push
pushf
cmp
in
inc
rol
std
and
out
sbb
jnp
(bad)
inc
inc
adc
imul
les
imul
imul
xlat
mov
nop
sub
je
cmp
push
mov
fwait
fs
sbb
ja
sbb
or
xchg
lea
daa
pop
sbb
pop
add
int3
ret
inc
jno
popa
xlat
daa
cmp
and
pop
pop
enter
mov
xchg
sub
mov
test
push
and
out
inc
push
retf
adc
dec
cmps
cmp
aad
mov
and
repz
loop
xchg
dec
shr
icebp
adc
pop
mul
loope
jecxz
and
sti
push
xor
push
inc
daa
jns
push
rol
fbstp
mov
sbb
bound
push
ins
cmps
(bad)
push
repz
jnp
jno
inc
jle
jl
mov
stc
mov
add
out
imul
imul
js
jbe
(bad)
push
popa
dec
or
jo
pop
ja
lea
imul
pop
jge
test
fwait
add
pop
jmp
adc
mov
out
xchg
sub
jo
cmp
aas
icebp
lahf
inc
hlt
add
imul
inc
xchg
or
sub
js
mov
fstp
test
jne
out
xor
ds
or
shr
dec
inc
(bad)
cmp
or
xor
xor
cmps
dec
addr16
into
in
stos
sbb
xor
aam
sub
imul
mov
add
inc
and
xchg
pop
shl
adc
push
aaa
pop
push
xchg
sub
xchg
int3
mov
mov
sub
dec
lods
in
ret
imul
pop
or
sub
mov
pop
mov
out
sub
mov
in
xor
xor
pushf
sahf
out
mov
mov
test
popf
push
pop
cs
pop
and
ds
int
loopne
mov
xor
daa
data16
and
pop
jp
test
xchg
icebp
mov
rcl
jae
or
sbb
mov
cmp
je
mov
gs
or
or
xor
cld
and
ss
aas
push
(bad)
daa
sub
xchg
sbb
rcr
or
dec
and
movs
dec
leave
pushf
mov
bound
xor
inc
in
push
xchg
test
daa
jg
fwait
mov
jbe
xchg
out
clc
pop
push
xchg
mov
lds
lahf
pop
int3
mov
mov
inc
dec
(bad)
sbb
js
les
and
add
mov
shr
dec
mov
gs
call
jo
sbb
imul
lahf
imul
lds
mov
iret
jnp
fdivr
mov
fidiv
leave
adc
add
mov
repnz
sub
stos
shr
lods
xor
jge
sub
fidivr
or
lahf
inc
outs
shl
fsubr
into
adc
pop
xchg
xor
mov
push
loop
shr
loopne
or
push
inc
pusha
call
sbb
dec
or
das
rcl
mov
xor
mov
out
mov
dec
inc
icebp
push
and
call
mov
(bad)
jb
out
jno
mov
mov
sbb
xor
movs
jecxz
mov
mov
je
addr16
xor
hlt
ins
jl
in
stos
in
sub
in
(bad)
jne
scas
inc
cmp
mov
mov
jae
jmp
es
imul
cmp
bound
mov
xchg
push
pop
mov
outs
sbb
jge
inc
pop
fnstcw
pop
add
push
sahf
(bad)
test
fstp
pop
mov
out
dec
push
jb
sub
xchg
loopne
fwait
and
mov
xor
sbb
das
mov
js
jns
inc
cdq
sahf
fnstcw
ret
pop
add
shl
rcr
mov
aaa
adc
mov
mov
xor
movs
faddp
dec
fidivr
cmp
test
ss
jle
test
js
out
jbe
mov
ins
inc
mov
loope
aam
loope
addr16
mov
mov
and
ds
jb
loop
sub
cmp
xlat
fisttp
adc
fadd
std
xchg
lods
add
mov
jecxz
sub
popf
rcl
ret
or
jl
add
push
sar
xchg
fild
test
aaa
sti
ret
stos
in
inc
adc
js
xchg
mov
retw
cmps
test
inc
add
or
sahf
push
add
lods
in
(bad)
pop
mov
fs
fild
aad
add
push
sbb
cmps
ins
xchg
cli
jns
adc
sti
movs
mov
ins
repnz
into
(bad)
ss
fwait
cdq
dec
mov
pop
call
imul
hlt
sub
adc
xchg
ret
mov
imul
jmp
ss
cmp
(bad)
arpl
(bad)
scas
adc
or
xor
cmps
jge
rcr
lods
daa
iret
imul
or
dec
scas
imul
stos
cli
jle
cmp
xchg
push
shl
in
sub
int3
call
adc
sbb
int3
jg
adc
mov
test
pop
nop
push
stos
enter
cmps
xchg
push
ret
pusha
aad
cmps
ret
dec
lods
je
dec
in
cmp
cwde
jno
retf
inc
movs
and
pop
fistp
sahf
mov
push
sbb
push
push
das
mov
fcom
ror
push
add
sub
ret
inc
inc
pop
sbb
inc
adc
jmp
cdq
js
sbb
and
sbb
dec
mov
or
push
xchg
dec
add
imul
mov
dec
sbb
mov
leave
(bad)
aaa
xchg
rcl
xchg
sbb
pop
repz
in
and
gs
inc
popa
ss
or
(bad)
or
mov
mov
repz
jge
int3
(bad)
bound
repnz
or
cli
shl
lock
cdq
ret
sub
lahf
jl
push
xchg
or
inc
jg
mov
sbb
fist
fdivr
(bad)
fist
xor
int
sbb
adc
jmp
jns
loopne
(bad)
call
mov
loope
xor
movs
pop
retf
int3
xchg
pop
mov
dec
test
test
mov
out
xchg
pop
push
cmc
inc
xor
and
jle
(bad)
sbb
jle
jns
lds
enter
adc
and
movs
inc
or
jmp
xor
rcl
mov
xor
pop
and
jmp
pop
lds
pop
fdivr
ret
sar
mov
mov
cdq
or
xor
lea
xchg
add
out
gs
sti
inc
xor
add
mov
ss
cwde
push
int
in
scas
cmovno
inc
scas
gs
push
mov
jae
movs
push
or
lock
sti
jb
and
js
ret
cmc
jmp
(bad)
ins
mov
cmp
push
(bad)
js
dec
pop
adc
pop
sub
push
outs
out
imul
pop
test
mov
enter
mov
and
daa
ficom
mov
(bad)
push
lods
cmp
stc
xchg
xchg
lahf
push
xor
fnsave
jno
pop
or
adc
scas
out
idiv
gs
adc
mov
jle
jb
je
es
jbe
daa
jp
scas
sar
mov
pop
inc
in
scas
mov
mov
inc
nop
xchg
jle
(bad)
enter
push
sub
jg
addr16
mov
inc
outs
es
repz
sub
pop
das
mov
add
sub
out
mov
dec
and
jae
out
popa
and
adc
add
push
add
jno
out
mov
data16
dec
lods
dec
mov
(bad)
stos
pop
push
je
xor
fsubr
push
xor
sbb
(bad)
rcl
(bad)
lods
dec
out
or
call
mov
lea
jnp
in
mov
and
adc
jb
jge
push
sahf
sahf
pop
shl
das
sbb
and
ret
xchg
movs
jne
dec
xchg
sub
dec
jmp
and
gs
mov
rcl
lock
outs
sbb
xor
test
lods
sbb
pop
sub
clc
rcr
add
loop
fldenv
lods
(bad)
mov
sbb
mov
adc
push
ds
cli
jle
dec
mov
fldcw
mov
mov
push
push
push
imul
test
aaa
mov
cmps
movs
cmp
jge
int
xchg
pop
test
dec
outs
sbb
xor
test
loop
cs
sahf
push
and
xchg
inc
adc
inc
les
push
aas
ss
xor
in
xor
retf
push
enter
jno
(bad)
ins
loope
lods
mov
movs
sbb
cmp
sub
in
inc
std
mov
push
sbb
push
(bad)
mov
mov
cwde
push
sub
(bad)
imul
adc
stos
icebp
xchg
xchg
xchg
jge
dec
dec
or
cmp
add
mov
retf
frstor
or
and
mov
dec
or
xchg
dec
fxam
cmps
les
pop
bswap
xor
adc
fdiv
test
sub
aas
gs
xor
shr
and
xchg
addr16
xor
and
mov
pop
cs
mov
xchg
add
mov
mov
xor
or
xor
js
cli
out
shr
imul
push
xchg
loope
xlat
mov
std
fadd
jmp
dec
test
loopne
add
adc
mov
pop
mov
lods
pushf
rcl
cmp
adc
(bad)
hlt
fsubr
outs
xchg
imul
xor
leave
cs
mov
bound
mov
call
leave
xchg
call
and
pop
sub
call
js
out
into
aam
or
cld
or
mov
in
addr16
inc
leave
jmp
sub
test
jmp
into
outs
fdiv
out
or
bound
push
int3
test
aas
enter
sahf
(bad)
cmps
stos
imul
push
aam
(bad)
into
mov
mov
sub
pop
(bad)
xor
push
aaa
cmp
xor
fwait
adc
or
pop
push
dec
fst
xlat
mov
sbb
jl
call
cdq
jecxz
sbb
arpl
aas
mov
pop
test
xchg
or
mov
or
jmp
mov
push
push
movs
and
dec
and
out
das
test
clc
pushf
arpl
in
mov
mov
sub
lock
jae
cmp
les
shl
mov
adc
jl
retf
mov
adc
inc
ins
jmp
in
loopne
cmp
loope
inc
shr
cmp
(bad)
aam
pop
fstp
jmp
das
(bad)
addr16
mov
ss
inc
mov
(bad)
jmp
jnp
push
jge
fsub
call
inc
sbb
dec
mov
repnz
jmp
mov
sub
mov
jae
nop
dec
mov
lods
(bad)
mov
mov
push
and
xlat
sub
scas
xchg
loop
out
mov
xor
cmp
out
ror
pop
shr
repnz
stos
dec
push
cmps
out
sub
fwait
dec
push
sbb
add
cmp
mov
fidivr
push
xchg
push
jno
jmp
jnp
out
imul
aas
xor
mov
out
push
loope
in
sub
xor
xchg
push
or
adc
je
or
add
rol
out
ins
call
psubusw
stc
(bad)
into
adc
dec
das
leave
packsswb
jne
jecxz
cdq
add
(bad)
push
pop
fcompp
(bad)
cmp
outs
retf
cmp
arpl
or
mov
test
push
int3
mov
cs
mov
xor
scas
sbb
inc
icebp
xor
sub
(bad)
outs
inc
cld
scas
mov
inc
je
push
xor
int3
sbb
shl
cmp
in
cs
or
popa
les
mov
xor
dec
adc
(bad)
mov
movs
daa
xor
dec
leave
jge
adc
je
in
xchg
cmp
fist
in
mov
or
out
adc
in
repz
jne
sbb
std
sbb
clc
adc
cwde
or
int
and
sub
mov
mov
jno
pusha
sti
mov
jb
or
inc
ins
out
lods
cmp
dec
test
lahf
ret
repz
mov
repnz
xchg
pushf
adc
nop
sub
or
push
mov
cmp
aad
and
or
cmp
or
fwait
sbb
into
adc
xor
dec
xchg
fisub
add
retf
push
jl
push
mov
mov
xor
push
out
xchg
inc
inc
ret
(bad)
xor
je
fstp
cmovge
xchg
cmp
inc
rcl
cli
or
pop
div
lds
xchg
add
imul
mov
mov
loope
xchg
push
fisub
mov
add
mov
xchg
or
fmul
cmp
pop
enter
dec
fadd
jmp
(bad)
std
repnz
mov
scas
xchg
or
sub
stc
cli
cmc
popa
out
ins
xor
push
mov
pop
dec
mov
jg
mov
shl
and
das
or
clc
iret
loop
mov
cmc
or
ficomp
sar
sbb
scas
mov
cmp
les
call
mov
(bad)
jns
xchg
push
sti
pop
sbb
mov
hlt
push
sbb
pop
fwait
cmp
cmps
outs
mov
repnz
xchg
ds
jo
bnd
loopne
enter
shr
jle
or
cmc
loopne
jbe
inc
test
cmps
scas
sbb
fld
inc
pop
and
mov
(bad)
out
add
loopne
xchg
enter
sti
sub
jge
jae
lock
lods
scas
out
sub
push
jb
not
stos
ja
xchg
fidivr
int
xchg
cmp
push
sub
adc
icebp
sub
dec
(bad)
clc
cmp
arpl
(bad)
push
outs
inc
xchg
int
les
mov
jne
loope
sub
scas
pop
stos
adc
jbe
or
or
jnp
loop
sar
in
sub
int
fdiv
mov
mov
adc
lock
sub
pop
movs
jns
test
pushf
inc
out
push
in
call
mov
pop
pop
adc
gs
arpl
in
scas
xchg
ror
add
or
sbb
push
outs
cli
and
test
retf
js
dec
mov
and
pop
and
or
lock
adc
fistp
jle
enter
in
jle
imul
test
in
add
sbb
mov
loopne
add
mov
rol
lods
or
mov
xor
hlt
mov
imul
shrd
in
sbb
cmps
imul
push
js
rep
push
ins
ins
jb
(bad)
aas
push
popf
sbb
and
icebp
inc
cmovbe
mov
jp
out
(bad)
aaa
rcl
adc
fwait
mov
maskmovq
test
mov
bound
ret
test
cs
xchg
add
fcmovb
jne
nop
test
push
arpl
push
retf
ins
sbb
sbb
or
cwde
jmp
mov
push
jg
les
and
scas
inc
fimul
das
jle
inc
or
int
adc
lds
mov
int3
rcr
retf
sbb
cmp
data16
inc
xor
int3
(bad)
cmc
bound
adc
sbb
leave
ja
movs
xor
xchg
sbb
popa
clc
push
ds
imul
jp
jmp
(bad)
pop
out
mov
in
xchg
icebp
mov
add
imul
push
and
xchg
mov
or
lea
push
into
cli
ins
adc
ret
and
stos
mov
inc
scas
jg
rcl
out
seto
dec
ret
sbb
cs
jmp
or
mov
cmps
ret
(bad)
pushf
push
out
jle
jbe
fimul
in
push
dec
fs
push
dec
shl
in
sub
call
push
or
mov
out
rol
fmul
jmp
sbb
add
or
fcmovnbe
(bad)
mov
leave
fcom
sti
adc
mov
retf
popa
jbe
in
xor
pop
repnz
mov
std
inc
xor
loope
mov
shr
mov
fcom
aam
mov
add
xchg
dec
mov
jnp
jmp
cdq
(bad)
(bad)
bound
jmp
or
cmps
add
loope
mov
loop
sbb
sti
je
sbb
cmp
fmul
(bad)
mov
fild
enter
xchg
iret
test
push
stos
cld
idiv
fisub
pushf
pop
push
out
pushf
(bad)
push
out
test
xchg
jb
jo
mov
dec
sub
aas
mov
iret
and
iret
dec
retf
sub
pop
push
outs
in
and
or
cmp
call
jb
mov
adc
js
push
xlat
leave
sbb
jns
rol
ja
(bad)
pop
push
daa
xchg
dec
nop
mov
pusha
xchg
jp
mov
int3
ins
pop
mov
jae
lods
and
stc
in
je
into
rol
xchg
ret
add
out
(bad)
stos
sub
xchg
fwait
ins
and
mov
mov
dec
sbb
pop
int
and
push
sbb
add
sub
les
xor
push
adc
pop
jns
mov
mov
aam
sub
out
pop
mov
cmp
out
rol
jno
push
fld
repnz
push
sbb
xlat
pop
out
adc
cmc
sub
cmc
pusha
mov
ins
jno
inc
(bad)
sbb
sbb
push
dec
push
cmp
xchg
jle
bound
scas
mov
push
cmp
and
cmp
pop
xchg
shl
sbb
mov
retf
dec
push
sub
cmp
add
sar
loop
mov
sbb
push
or
pop
inc
mov
xor
cld
outs
nop
inc
xchg
scas
add
pop
es
sbb
sub
hlt
jg
and
inc
clc
xchg
xchg
jmp
test
mov
pusha
out
mov
sub
push
dec
add
add
push
xlat
scas
fs
inc
dec
(bad)
cwde
pop
xchg
xchg
mov
into
not
je
js
inc
js
push
(bad)
shl
mov
and
fsubr
xor
jbe
pop
sbb
inc
cmp
pop
push
ins
test
add
mov
fld
push
dec
addr16
sub
test
pop
mov
retf
mov
add
or
push
and
pop
sti
in
mov
cmp
add
stos
cmp
add
add
dec
in
mov
dec
lahf
stc
rcr
dec
int3
jo
sbb
cld
je
inc
fdivp
hlt
je
imul
outs
cmp
rol
out
retf
inc
fldenv
mov
aad
retf
sub
outs
out
mov
bound
repnz
mov
push
into
fisttp
lahf
(bad)
pusha
fbld
ds
test
repz
inc
cmp
movd
(bad)
adc
leave
out
outs
push
sbb
cmp
or
loopne
ja
stc
(bad)
mov
inc
rcl
jmp
pushf
add
ja
out
je
inc
pop
fidivr
gs
repz
and
fwait
ins
pop
sub
xor
dec
out
inc
xchg
inc
mov
push
jo
inc
mov
ins
inc
sbb
ja
scas
out
jmp
sbb
fisubr
inc
pop
xor
test
inc
test
stc
fild
mov
fwait
xor
loopne
ret
inc
cmc
mov
lock
gs
sahf
jb
jne
inc
push
out
dec
call
(bad)
lods
xor
xchg
jnp
imul
pop
es
rcr
iret
lahf
jmp
push
or
jmp
cmps
mov
lods
fdiv
jp
ja
fisub
xchg
dec
ja
cmp
(bad)
loop
test
sbb
inc
mul
mov
mov
mov
jg
xchg
xchg
aas
out
mov
(bad)
pop
or
rcl
mov
or
xchg
loope
jae
jnp
sub
and
sbb
xchg
arpl
adc
sub
cmp
add
(bad)
imul
in
pop
mov
xchg
sbb
inc
and
sahf
mov
sbb
aam
and
test
xlat
loope
jno
mov
push
sub
stos
adc
adc
mov
cmp
ficomp
rcr
mov
add
daa
stos
push
cld
aas
mov
scas
sbb
push
inc
stos
mov
dec
sbb
in
retf
xchg
push
test
cmps
mov
adc
mov
sub
(bad)
jle
inc
jmp
xchg
(bad)
xlat
int
sbb
push
hlt
test
f2xm1
add
mov
icebp
sub
or
mov
cmp
mov
jb
dec
ret
jno
push
mov
jns
push
hlt
mov
pop
pop
add
jmp
test
dec
scas
pop
xor
pop
jmp
pusha
lds
mov
sbb
push
in
pop
sbb
pop
stos
not
cdq
and
pusha
leave
ja
sahf
mov
fcmovne
mov
xor
(bad)
mov
ins
jae
mov
mov
mov
mov
jmp
sbb
mov
mov
popa
pop
xchg
adc
(bad)
pop
repz
jbe
mov
cmp
retf
outs
mov
call
xchg
js
or
sbb
jne
jne
dec
adc
mov
pop
sbb
les
mov
jg
bound
mov
xor
add
xor
movs
loope
(bad)
movs
jl
leave
jl
mov
(bad)
sbb
out
dec
adc
and
or
aam
jg
dec
enter
push
mov
add
sbb
ret
mov
rcl
(bad)
pop
xchg
mov
and
jge
sahf
sbb
mov
mov
mov
nop
xor
dec
xchg
mov
out
dec
mov
inc
mov
mov
std
(bad)
fadd
loopne
daa
push
xor
cmps
movs
fwait
push
push
hlt
dec
sub
push
or
add
in
mov
imul
repnz
push
retf
mov
pushf
mov
into
stos
das
push
out
hlt
mov
sub
sub
adc
les
in
jecxz
icebp
mov
push
(bad)
fiadd
adc
jmp
xor
fs
sbb
fs
jmp
inc
sbb
aas
cmp
mul
and
sub
das
mov
lods
sub
inc
ds
or
adc
aad
sub
mov
gs
cli
or
and
jne
sahf
xchg
cmps
jno
popf
cld
mov
xchg
mov
(bad)
jae
xchg
mov
mov
cwde
in
mov
xor
push
outs
out
push
out
inc
es
ds
ror
sbb
das
mov
dec
sbb
add
or
mov
test
(bad)
xchg
lgs
sub
cmp
in
add
fbstp
inc
cs
das
mov
test
xchg
jb
into
into
pop
mov
iret
js
scas
clc
mov
test
xor
lea
mov
sub
add
jno
(bad)
inc
popf
mov
xlat
mov
inc
mov
add
scas
call
clc
cmp
push
jg
mov
stos
fldenv
jecxz
imul
fdivr
sbb
dec
mov
clc
bound
(bad)
xchg
test
xchg
cdq
inc
add
cdq
xchg
pop
aam
xor
daa
out
ja
or
std
addr16
mov
(bad)
aaa
jp
jns
cmps
int
push
sub
jbe
adc
mov
xor
jge
fadd
jg
dec
adc
mov
fnstenv
cdq
or
std
repz
aam
loop
and
cld
xor
inc
fistp
mov
call
jmp
aam
inc
push
adc
adc
cmp
mov
jo
pop
(bad)
es
cld
push
stos
ficomp
inc
mov
xor
jnp
sub
daa
cmp
mov
and
fwait
xchg
mov
(bad)
xor
retf
imul
rcl
xchg
pop
push
xchg
je
repnz
test
mov
iret
jge
lock
or
ja
or
mov
xchg
and
xchg
jp
cmps
movs
fcmove
mov
dec
(bad)
mov
cmp
mov
clc
lods
dec
cmp
arpl
mov
hlt
xor
lahf
arpl
jbe
sub
gs
aad
pop
sbb
in
push
or
stc
out
ret
cmp
outs
mov
in
xlat
arpl
les
or
(bad)
or
cmps
scas
shr
mov
call
cmp
test
test
ror
jns
sub
dec
cmps
mov
ret
or
(bad)
mov
push
sahf
push
test
sub
push
or
cmp
push
out
xchg
(bad)
enter
and
pop
cmp
shr
int3
iret
adc
ja
xor
ins
in
(bad)
mov
stos
lock
mov
inc
pop
lods
sub
cli
pop
loopne
mov
push
adc
xchg
ja
pop
jecxz
cmp
fmul
inc
sub
in
lea
pop
xor
dec
mov
push
pop
pop
loope
jbe
test
int
scas
test
fsubp
popf
pop
rcr
aad
adc
xor
mov
in
repnz
mov
(bad)
dec
js
in
add
test
push
adc
cmc
xor
adc
ins
or
outs
int
push
mov
and
jmp
add
xchg
inc
mov
cmp
ficom
mov
jb
sbb
add
outs
rcr
inc
stc
dec
mov
sbb
cmp
(bad)
or
(bad)
sbb
aad
arpl
cmp
pop
add
add
or
jmp
fisub
retf
cld
add
xchg
add
dec
bound
pushf
test
(bad)
loopne
inc
sub
add
mov
stc
mov
xor
xchg
sbb
mov
inc
ror
aam
xor
cs
push
mov
xchg
xchg
div
out
add
ds
cmps
mov
sub
push
mov
mov
scas
mov
in
push
lods
mov
mov
(bad)
or
or
repnz
xchg
adc
mov
adc
add
inc
sub
jmp
xchg
cmp
std
add
add
pop
(bad)
mov
jbe
fisttp
je
mov
jp
push
push
xchg
ss
mov
jo
push
loopne
mov
and
jge
vmovhpd
mov
push
pop
jbe
inc
ret
je
(bad)
aas
nop
(bad)
int
in
sub
inc
mov
in
mov
(bad)
sahf
fsubr
xor
lea
dec
push
aaa
mov
(bad)
adc
pop
adc
jp
add
mov
jb
sti
or
fild
sbb
jo
lds
push
(bad)
mov
pop
pop
stos
add
in
daa
mov
push
ins
mov
fnstcw
pushf
add
mov
cmps
mov
aam
daa
xchg
and
fcomp
sbb
ja
jmp
push
push
test
mov
push
ret
inc
and
call
push
rcl
les
jp
inc
pop
mov
std
fdiv
das
gs
jecxz
stos
hlt
add
hlt
pushf
retf
test
sub
xor
jbe
mov
cmp
inc
push
cmp
popa
gs
sbb
repz
ins
jnp
out
je
popf
cwde
inc
dec
retf
dec
fsincos
and
mov
ret
cmp
pop
(bad)
not
aaa
popa
rcr
lahf
push
stos
pop
ds
pop
dec
inc
pop
sbb
call
sbb
cmp
int3
sbb
lods
bound
jnp
pushf
hlt
bound
sub
dec
das
int
and
jl
cwde
repnz
and
sar
jb
ins
add
pop
ret
jns
clc
cmp
inc
adc
fnstcw
shr
fist
aam
mov
dec
xchg
mov
push
imul
out
pop
and
xchg
retf
aam
add
rcr
xor
adc
xchg
in
sbb
inc
mov
ja
sbb
sub
fcomp
enter
(bad)
sbb
jo
xchg
push
mov
or
mov
and
outs
outs
in
ins
add
push
in
test
xor
jmp
inc
mov
mov
je
mov
pop
or
and
data16
into
mov
out
cmp
mov
adc
mov
dec
pop
adc
test
cmp
stos
mov
mov
xchg
mov
(bad)
jmp
add
ret
jo
push
mov
mov
jb
inc
xor
sbb
push
repnz
cmps
xchg
adc
lods
test
ret
sbb
pop
lahf
sbb
mov
ss
pop
add
adc
addr16
xchg
(bad)
(bad)
mov
add
dec
imul
cmp
push
scas
ficomp
add
mov
int
inc
out
in
dec
sub
and
adc
icebp
adc
sub
dec
loop
sbb
sahf
push
mov
push
inc
adc
jne
or
shl
jmp
bound
out
push
or
add
iret
mov
mov
and
pop
pop
leave
pop
daa
mov
mov
retf
add
cmps
xchg
iret
into
adc
mov
xchg
mov
xchg
jecxz
sbb
arpl
mov
add
dec
inc
push
stc
aaa
jae
lea
test
scas
loopne
cld
fdivr
add
add
loop
(bad)
pop
mov
jle
inc
cs
out
sbb
sahf
add
mov
mov
loopne
inc
jb
in
leave
or
sbb
sbb
jl
ins
sar
cld
inc
fisubr
ins
pop
jge
cdq
pushaw
push
push
inc
push
pop
push
out
xor
popa
sub
cmps
popa
or
dec
mov
sahf
push
aam
pushf
popa
mov
lods
cli
mov
or
xchg
pushf
sub
gs
(bad)
jae
mov
stos
pusha
iret
push
(bad)
(bad)
mov
sub
sti
push
sub
aaa
out
scas
(bad)
or
imul
mov
in
sbb
stos
xor
jge
loope
cwde
push
sub
int
xor
nop
mov
xor
enter
inc
test
lods
pusha
cmp
add
pop
cwde
sbb
je
mov
leave
lock
lahf
pop
adc
cmp
push
push
cmps
hlt
xchg
enter
jle
sub
movs
out
xchg
fistp
aaa
lock
pop
ficomp
dec
push
in
mov
lods
inc
add
inc
out
jb
jecxz
pop
rcr
fld
jmp
sar
fwait
mov
push
mov
push
sar
mov
push
mov
mov
stos
movs
sbb
adc
cmp
push
dec
enter
(bad)
into
jge
sbb
fwait
(bad)
out
sbb
mov
inc
add
mov
adc
ficomp
inc
retf
adc
outs
xchg
aam
icebp
cmps
dec
test
inc
and
xor
(bad)
jle
push
xchg
xor
sub
sub
cdq
out
xor
fwait
push
inc
mov
enter
out
int3
clc
out
xor
mov
jo
inc
cmp
fcmovnb
mov
or
push
adc
imul
ins
je
outs
xchg
sub
jle
dec
enter
les
adc
loop
xchg
jb
xchg
mov
mov
dec
fisubr
pop
dec
cmovl
mov
jns
fwait
xor
jle
adc
or
push
sbb
inc
adc
aaa
in
repnz
mov
add
bound
adc
or
lds
cmp
or
sti
sub
stos
sbb
mov
and
enter
mov
cld
mov
imul
outs
cmc
out
mov
cmp
movs
(bad)
cli
cmp
jecxz
(bad)
push
out
sahf
dec
jp
jle
fs
in
xchg
pop
dec
inc
dec
je
cmp
mov
inc
lods
jmp
das
lea
in
out
cld
push
add
add
imul
call
mov
sbb
mov
imul
lods
push
repz
mov
mov
retf
mov
xchg
push
iret
mov
push
out
xchg
jne
xchg
push
and
jmp
repnz
xor
test
(bad)
in
mov
mov
jmp
inc
jnp
push
cld
movs
mov
xor
jge
or
fnstcw
rcr
or
or
mov
mov
xchg
xchg
mov
or
lea
sub
push
nop
test
iret
mov
mov
retf
lock
inc
icebp
xchg
push
imul
popf
and
jo
paddusw
call
pop
dec
daa
int3
gs
jl
adc
sub
fld
(bad)
stc
aaa
inc
shl
add
scas
fiadd
ficomp
jbe
jae
ds
(bad)
in
cs
add
shr
mov
or
add
out
out
sbb
and
xlat
mov
or
sub
in
in
mov
leave
dec
mov
movs
mov
dec
push
xchg
dec
inc
dec
xchg
jp
stc
xchg
push
xlat
xchg
lods
mov
data16
mov
xchg
es
fisttp
jmp
jno
jae
jle
pop
cmp
into
les
(bad)
xchg
jns
inc
aas
inc
adc
sbb
outs
mov
adc
loop
test
movs
push
jno
mov
xor
cli
pop
push
cmp
sub
lock
in
dec
cdq
inc
frstor
sub
in
out
dec
inc
dec
dec
stos
retf
aam
sub
dec
aad
fbstp
xor
cmp
leave
or
inc
xchg
add
das
add
dec
ss
and
ins
idiv
in
xchg
mov
lods
sti
in
scas
cmovae
ds
push
inc
pop
dec
sub
lods
sti
add
int3
mov
data16
repz
pop
fwait
mov
xchg
(bad)
adc
dec
je
imul
or
xchg
xchg
sub
pop
mov
aam
pop
xor
cli
out
fwait
(bad)
xchg
push
push
addr16
mov
mov
dec
sbb
pop
or
xor
push
movs
mov
mov
test
adc
or
add
xchg
or
into
jmp
outs
push
bound
test
push
lock
ja
add
xchg
fistp
scas
pop
push
cmp
aam
sub
test
push
mov
outs
aad
push
mov
push
push
aad
pop
mov
sar
dec
xchg
pop
aaa
jnp
pop
ret
fild
mov
fs
out
std
cli
scas
mov
inc
mov
sbb
push
and
lock
mov
jecxz
dec
push
push
sub
enter
fwait
or
xor
lahf
cmp
cmps
mov
push
out
ja
add
je
push
sub
sbb
jmp
jns
dec
sbb
xchg
xor
mov
aaa
test
adc
out
hlt
dec
popa
retf
inc
jmp
mov
retf
or
jno
cmp
push
into
add
inc
in
das
stc
mov
faddp
xchg
in
xor
imul
push
cdq
push
(bad)
out
or
inc
jp
aas
pop
lahf
outs
(bad)
cmp
retf
aad
jae
mov
sub
inc
mov
push
dec
dec
sub
aad
gs
push
jmp
add
and
(bad)
aad
and
jb
inc
rcr
inc
sbb
pop
adc
test
in
ins
shl
cdq
aad
retf
in
cdq
mov
adc
dec
mov
push
fimul
in
hlt
out
(bad)
leave
mov
int3
jnp
call
fbstp
das
fnsave
add
into
push
and
mov
lods
push
and
xchg
(bad)
push
cmc
push
push
or
test
fnstenv
rcl
push
aas
mov
pop
cmp
aas
adc
test
jb
popa
adc
movs
ds
iret
xor
addr16
dec
sar
outs
addr16
ja
fisttp
aad
lods
aad
mov
inc
mov
retf
clc
push
fisubr
out
or
jge
sar
pusha
pop
sub
pusha
inc
ins
scas
retf
push
add
fwait
jg
fs
jg
cmc
ins
mov
lods
push
lods
es
pushf
sbb
xor
and
icebp
ds
or
mov
cvtdq2ps
fs
mov
lock
push
adc
xor
pop
xchg
mov
mov
enter
(bad)
pop
mov
aaa
fcmovb
jmp
inc
fst
mov
or
pushf
aas
les
out
pusha
sub
jmp
sbb
jo
push
lahf
sub
push
xchg
les
xor
cmp
icebp
mov
mov
scas
mov
xor
xor
cmp
test
add
xchg
mov
mov
add
test
shr
sbb
sbb
sub
mov
(bad)
sti
mov
xchg
add
ins
pop
mov
jne
pop
mov
sub
jbe
add
cwde
paddsw
dec
fisubr
xchg
mov
xchg
in
push
lahf
sub
pop
jmp
in
js
fdivrp
dec
enter
xchg
add
cdq
cmps
adc
inc
xchg
push
nop
cs
nop
daa
out
cli
in
mov
xchg
out
and
push
into
mov
je
and
cdq
aam
cli
jle
in
jecxz
and
shl
dec
in
sub
(bad)
test
xlat
bound
mov
ret
iret
or
sub
lahf
popf
sti
aaa
cmp
lods
cmps
aam
fcmovnb
push
xchg
add
jmp
jns
fst
cdq
data16
inc
aad
sub
mov
adc
fst
sar
push
gs
inc
cmp
inc
mov
dec
in
outs
add
repz
hlt
(bad)
ficomp
jmp
adc
sub
mov
ficom
mov
mov
fistp
lods
std
jl
cmp
cli
or
repz
fsub
lock
sar
mov
iret
leave
mov
iret
sub
mov
xchg
aam
test
jmp
xor
scas
inc
stos
fcmovb
test
sbb
test
rol
out
sar
fld
mov
mov
pop
and
xchg
pop
test
push
fnstsw
sub
push
repz
xor
test
jno
or
and
push
sub
les
fsubr
mov
mov
clc
lahf
mov
mov
jl
fidiv
fsubr
jge
jae
repnz
dec
fmul
inc
jae
scas
dec
add
pop
or
outs
test
push
jmp
out
cmp
inc
cmps
(bad)
or
mov
pop
f2xm1
imul
jecxz
outs
cmc
mov
push
mov
mov
aad
jmp
xor
sbb
in
push
das
xor
lods
jns
jnp
xor
mov
inc
push
outs
inc
ins
clc
iret
hlt
ja
sbb
iret
push
jbe
xor
rcl
in
mov
lock
xor
call
sub
jge
scas
ret
mov
stc
pop
cmc
dec
cmp
push
out
pop
sub
loopne
jno
fisttp
inc
sbb
shl
mov
das
jb
div
(bad)
(bad)
es
outs
retf
or
sbb
das
iret
fcom
mov
ins
(bad)
sub
ret
daa
or
test
mov
sar
push
fidivr
rcr
cmps
add
jl
sbb
mov
lock
sub
dec
scas
ins
aam
sub
push
xchg
push
jecxz
push
outs
fisubr
add
jmp
fisubr
out
aaa
lahf
mov
sub
xor
lds
and
sbb
dec
in
shl
push
pop
dec
cld
jnp
dec
or
or
cli
push
dec
in
sar
dec
xchg
add
ins
mov
mov
sub
mov
cli
xor
sub
cs
pop
(bad)
cmp
jnp
(bad)
push
add
and
retf
jp
push
xchg
xchg
push
rcr
push
out
or
cmp
movs
lea
pop
mov
sahf
mov
data16
repnz
pushf
nop
gs
mov
and
fimul
jmp
fistp
xor
in
sub
repz
dec
and
gs
outs
xor
jno
add
xchg
xor
out
aam
fadd
in
out
inc
inc
adc
sti
shr
scas
fdivr
rol
xchg
pop
scas
mov
out
jg
outs
into
je
dec
je
in
sub
pop
add
movs
stc
mov
inc
clc
arpl
(bad)
mov
loope
les
xlat
leave
ds
mov
jmp
sti
and
(bad)
test
mov
nop
pop
cli
dec
mov
fisttp
or
push
mov
sub
and
sbb
cmps
inc
and
stos
cmp
out
rol
cld
adc
lahf
pop
push
add
shl
and
and
fist
test
addr16
out
mov
in
xchg
adc
clc
mov
ins
in
lea
xor
dec
mov
dec
rcl
and
jno
lods
scas
ins
pop
xchg
std
les
pop
fsubr
dec
or
mov
push
push
inc
mov
jge
pop
ret
adc
ja
loope
or
lock
mov
xchg
rcl
sub
cmp
movs
adc
aas
not
loop
jbe
mov
sub
cmp
push
inc
je
aam
cmp
leave
xor
into
loopne
cs
stc
cld
sbb
and
sub
mov
gs
cmp
mov
add
sub
sub
retf
xchg
pop
cld
shl
call
rol
xchg
push
call
cmp
inc
(bad)
mov
xchg
lods
aas
push
add
add
test
iret
fisub
test
enter
in
cmp
push
daa
(bad)
outs
adc
inc
adc
dec
jno
and
pop
dec
js
sub
das
test
mov
in
test
and
adc
mov
sbb
mov
xchg
add
es
movs
scas
fsub
sbb
es
or
mov
gs
add
jmp
inc
sbb
push
adc
adc
xchg
stos
cmc
lds
loope
ds
xchg
xor
mov
push
or
outs
ret
adc
jg
mov
fsubp
test
lds
pushf
dec
push
sub
rcl
jb
gs
nop
mov
jmp
mov
sar
in
stos
push
sub
push
fisubr
cmp
(bad)
xchg
(bad)
push
add
or
dec
push
ins
(bad)
jp
inc
fisubr
mov
jae
dec
shl
sub
scas
dec
test
mov
cmp
scas
cmps
add
adc
(bad)
out
in
repnz
push
push
imul
push
jne
pushf
ret
xchg
lea
pop
rcl
push
xchg
inc
(bad)
int3
xchg
cmp
sahf
bound
dec
jge
out
jne
aas
scas
jns
sbb
pop
or
xchg
add
pop
rcl
cmp
movs
or
stos
push
call
ret
xor
test
or
mov
jmp
mov
jnp
or
mov
retf
mov
into
out
stos
aad
mov
fdecstp
cmps
ror
pop
push
and
ds
fstp
repz
add
mov
jl
into
pop
inc
les
cmp
or
icebp
inc
push
xor
ja
push
xchg
(bad)
ja
cwd
cld
jmp
jmp
push
int
dec
cld
rcl
out
xchg
push
mov
loop
xchg
push
cli
push
imul
push
iret
jle
mov
mov
sub
dec
pop
jmp
out
(bad)
sub
adc
cmp
xor
push
inc
xchg
mov
sub
(bad)
pop
imul
xchg
rol
scas
mov
mov
call
ja
add
push
stos
jnp
inc
iret
jb
rcl
push
movs
xor
shl
aaa
sbb
jae
dec
cmps
xchg
dec
dec
mov
mov
jle
fdivr
retf
and
mov
popf
or
movs
repnz
sub
lods
out
sub
mov
je
mov
mul
push
cmp
or
mov
jg
xor
addr16
scas
mov
leave
stc
inc
lods
mov
dec
daa
inc
dec
pop
scas
or
push
adc
jg
ror
jmp
jg
rep
in
cmp
xchg
cmovo
jno
cld
rol
lock
sub
push
nop
mov
xor
pop
movs
cmp
xor
jb
repnz
jno
shr
mov
fld
sbb
outs
ins
mov
mov
cld
inc
shl
mov
aaa
pushf
and
mov
jb
lds
pop
xchg
sbb
int3
mov
je
sahf
enter
aam
xchg
add
jne
repz
je
in
in
mov
xchg
sbb
addr16
nop
add
js
mov
js
jp
sbb
mov
cmp
jecxz
push
xor
lahf
mov
dec
in
(bad)
(bad)
or
add
test
out
sahf
sahf
loopne
push
aas
pop
cld
mov
xchg
mov
cmp
mov
inc
test
das
mov
mov
mov
out
adc
fimul
sbb
jmp
adc
jmp
(bad)
or
mov
cmp
adc
adc
iret
jb
ds
add
add
and
adc
test
cmp
inc
ins
(bad)
clc
out
or
pop
push
pop
jg
out
or
pop
mov
aam
mov
jmp
(bad)
cwde
not
push
and
repnz
clc
rcr
mov
call
in
lods
sub
mov
mov
movs
fisub
xchg
in
push
mov
adc
sub
mov
xchg
adc
fnsave
in
or
rol
mov
cmp
pop
sbb
pop
mov
adc
jecxz
clc
inc
adc
sbb
sub
jne
adc
pop
(bad)
ror
or
fcmove
cmp
push
mov
stc
xchg
es
xor
sub
scas
movs
mov
out
dec
sbb
sub
je
int
sar
jae
(bad)
push
push
(bad)
lea
mul
sub
sti
into
pop
mov
(bad)
loop
sbb
pop
xchg
adc
xchg
adc
stos
outs
aam
dec
stos
push
push
xor
adc
cwde
cmps
adc
jnp
mov
jle
movs
mov
dec
jecxz
or
pop
clc
xchg
jp
mov
jge
sub
jo
jmp
call
test
sub
jnp
and
cs
pop
enter
adc
mov
in
inc
adc
sbb
cmp
push
outs
mov
jo
sub
das
jnp
dec
mov
ins
mov
and
fs
lahf
xchg
xchg
in
cmp
inc
mov
jns
and
retf
mov
sub
dec
xor
sbb
bound
in
ret
enter
ja
and
jne
mov
add
jns
loope
cld
lock
imul
inc
mov
jle
shl
xchg
fdiv
inc
pop
test
mov
add
leave
mov
enter
dec
dec
mov
rcr
lahf
pushf
imul
sti
pop
add
push
jae
adc
jns
lods
xchg
fdiv
jne
push
xlat
sbb
in
or
adc
and
ds
mov
mov
lods
scas
cmps
jge
ficomp
cmp
jg
(bad)
pop
or
adc
jnp
cmp
out
imul
push
cwde
cmp
jl
sbb
aam
push
daa
xchg
xchg
sub
(bad)
mov
mov
push
xchg
push
fcmovne
cwde
call
xchg
xchg
fnstsw
or
dec
cld
cmp
push
mov
mov
lods
and
or
pop
mov
ror
sub
add
mov
(bad)
jbe
rcl
sahf
mov
into
mov
adc
adc
push
cmp
js
push
pop
in
fidivr
enter
arpl
out
xchg
ret
outs
stos
add
mov
pop
retf
adc
icebp
mov
outs
inc
inc
pop
add
mov
mov
stc
cdq
stc
and
cmc
es
jne
inc
test
hlt
(bad)
cli
int
in
jae
mov
or
sub
cld
jne
out
loop
idiv
mov
sbb
bswap
push
inc
and
pop
mov
pop
xchg
cdq
sbb
test
xchg
jno
jns
jmp
mov
and
repz
inc
in
jns
imul
je
xchg
xlat
in
cwde
inc
cmp
pop
sub
(bad)
xchg
ins
cmp
pop
add
retf
ret
jae
sbb
daa
push
cs
retf
loopne
xchg
lahf
sti
jg
push
xchg
mov
and
inc
cs
icebp
sbb
iret
and
retf
mov
in
pop
fadd
iret
mov
ins
push
aas
leave
pushf
sub
aaa
mov
xor
adc
mov
mov
push
push
and
xor
xchg
inc
fbld
mov
rcr
into
add
dec
call
push
mov
adc
sbb
inc
and
shr
mov
in
mov
vmovdqu
push
in
repz
es
and
xchg
test
cmp
aam
jecxz
add
and
jge
cmp
in
js
mov
xor
xor
add
ins
imul
push
call
or
mov
or
pop
call
mov
xor
or
(bad)
mov
outs
fcmovnb
pop
loop
or
jp
jge
fld
imul
mov
pop
das
outs
stos
and
loope
cdq
stc
mov
clc
jne
adc
pusha
xchg
adc
sub
jmp
inc
or
dec
mov
and
or
pop
dec
pop
aaa
sbb
call
xor
lock
inc
jmp
lds
adc
rol
and
test
mov
cmp
mov
jnp
std
loopne
adc
fs
jo
xor
in
push
retf
xchg
add
imul
jns
pop
stc
jmp
in
pminub
sub
out
int3
jae
popa
cmp
inc
push
out
and
jg
fld
xor
retf
cld
aaa
es
push
outs
lods
das
pop
mov
dec
neg
jmp
enter
(bad)
out
(bad)
and
call
clc
fstp
or
test
mov
jmp
fmul
adc
or
dec
ja
ss
xor
daa
adc
int
jae
call
mov
mov
cmp
retf
xchg
dec
ins
icebp
jl
in
push
retf
and
push
and
adc
xchg
pop
inc
scas
jecxz
clc
aaa
sbb
fdivr
shl
(bad)
sub
out
and
xlat
sbb
loope
hlt
inc
add
pushf
pop
jbe
push
cmp
daa
add
inc
lds
retf
cmp
mov
xor
mov
mov
inc
inc
dec
ins
(bad)
xchg
xchg
cmps
push
dec
jl
(bad)
rol
xchg
xchg
test
(bad)
mov
idiv
(bad)
cmps
xchg
jns
arpl
ss
mov
je
jp
mov
dec
mov
outs
popa
adc
lea
mov
mov
pop
add
sbb
sbb
dec
movs
push
cdq
and
jne
popw
(bad)
gs
dec
shl
mov
xor
mov
inc
xor
cmp
ror
inc
inc
fnstsw
out
sahf
or
jne
lods
mov
imul
or
add
cmp
push
mov
js
pop
icebp
test
push
sbb
rcr
ds
aad
add
lahf
out
cdq
shr
push
xor
sbb
adc
pavgb
popa
xchg
sub
dec
loop
jmp
call
pop
lahf
rcl
mov
push
mov
cmps
add
dec
cmp
shl
dec
add
sub
repz
fucomip
xor
fnstenv
add
push
mov
jmp
mov
loopne
popf
mov
loopne
stc
pop
and
pop
sbb
ror
adc
or
jnp
sbb
mov
mov
(bad)
imul
xor
popf
js
(bad)
push
jl
jecxz
push
mov
out
push
add
cmps
push
add
inc
fwait
xchg
mov
and
in
pushf
push
test
sub
pop
ror
stos
mov
cdq
cmp
inc
pop
jge
push
sbb
inc
lods
pop
not
add
daa
scas
fwait
rcl
pop
push
lods
ror
rcl
aaa
test
stos
rcl
loopne
adc
data16
not
das
cmp
pusha
jb
push
sub
in
sbb
xor
cmp
push
jl
cmc
js
xlat
cmc
jl
test
addr16
mov
imul
lahf
sbb
stc
and
sbb
mov
adc
mov
adc
sbb
aad
pop
mov
pushf
adc
inc
ror
jnp
or
test
xabort
rol
mov
sub
adc
int3
pusha
mov
pop
push
call
jns
sbb
jge
and
arpl
cmp
repnz
pop
mov
mov
or
xchg
jnp
inc
test
das
(bad)
pop
sbb
out
dec
lahf
push
sub
dec
(bad)
cdq
inc
or
push
xchg
sub
stos
pop
jnp
es
xor
sar
mov
jl
cmp
mov
xchg
ret
dec
mov
int
mov
cdq
pop
lods
mov
mov
call
xchg
stc
lds
sub
push
je
call
add
(bad)
mov
mov
add
test
sub
push
cs
push
cmps
sbb
mov
mov
inc
bound
sbb
pusha
pop
aad
cmp
pop
cmp
xlat
sub
loope
ins
xor
shl
sahf
cmp
mov
and
sub
test
dec
nop
xchg
xor
inc
scas
dec
add
mov
nop
loop
jg
xchg
shl
out
fnstenv
stos
(bad)
add
iret
and
jg
and
pop
cmps
jge
mov
xchg
icebp
stos
adc
rol
in
fild
add
and
js
ror
xor
inc
dec
fiadd
lea
in
inc
inc
in
int3
adc
mov
sub
and
es
jnp
scas
(bad)
std
scas
jp
inc
push
pop
stos
ds
and
inc
bnd
xor
dec
and
sub
test
clc
xchg
cmp
dec
or
and
retf
mov
icebp
dec
inc
(bad)
mov
adc
pop
adc
xlat
lods
clc
or
xchg
mov
jo
adc
add
push
ficomp
aaa
push
mov
stos
ins
call
imul
and
pop
jmp
sub
mov
or
retf
mov
cwde
daa
jno
mov
rcr
mov
mov
cwde
movs
es
jno
add
fiadd
scas
or
push
outs
mov
mov
ins
dec
ss
cmp
sbb
aad
loop
pop
adc
cmps
inc
retf
pop
int
fdiv
push
outs
dec
stc
pop
pop
cmp
test
mov
jne
mov
div
outs
rcr
mov
aaa
movs
sub
inc
sub
aas
stc
cmc
enter
push
xor
pushf
call
inc
cmc
push
ret
lods
mov
inc
rcr
sbb
out
mov
jno
fmul
add
add
xchg
push
repz
popf
pop
mov
adc
and
out
inc
xor
add
push
lock
(bad)
call
shld
jnp
(bad)
jne
cmp
test
jge
pushf
cld
sub
sar
sar
fs
mov
mov
into
add
pop
jb
js
outs
aas
out
add
pop
idiv
adc
sbb
loop
cmp
adc
cs
ror
je
jl
sbb
out
pop
test
xchg
or
dec
dec
into
sbb
lds
cwde
xlat
outs
rol
add
aaa
arpl
pop
scas
jbe
pop
push
and
and
mov
sbb
test
je
mov
ss
xor
cmp
js
xchg
push
jmp
outs
mov
shl
sub
int3
imul
aam
aad
push
xor
ret
cdq
mov
dec
add
jecxz
(bad)
push
xlat
loope
xchg
popf
ja
push
pushf
test
pop
loope
push
jl
xchg
imul
cdq
lds
add
pop
loope
sub
loopne
add
aad
pushf
sbb
push
jecxz
mov
test
hlt
pop
mov
sub
add
mov
xchg
inc
and
mov
mov
xsavec
mov
call
jae
leave
(bad)
je
and
sbb
push
lock
xor
and
pop
leave
daa
xor
xchg
sub
ret
repz
aaa
jge
stc
dec
dec
dec
or
cld
movs
sub
daa
loopne
add
inc
shl
movs
inc
xchg
jmp
push
or
inc
js
and
xor
ss
mov
jb
inc
in
int
or
movs
xor
outs
push
xor
mov
dec
cmc
or
dec
and
or
fucom
test
outs
mov
adc
xlat
icebp
leave
jbe
shrd
mov
pop
xor
jo
dec
add
cmp
push
mov
sti
shl
leave
push
and
jae
jno
imul
jg
and
lock
cmp
mov
out
mov
push
pop
out
ins
xchg
arpl
jg
scas
ins
cld
imul
arpl
sub
cmp
imul
(bad)
and
adc
ins
ins
and
ror
pop
loope
in
and
adc
adc
fadd
lds
inc
dec
lods
pop
pop
xor
push
xor
cdq
xor
xchg
mov
jp
daa
adc
dec
or
in
pop
sub
dec
adc
inc
push
inc
and
mov
xchg
movs
and
cmpxchg
sub
dec
sub
cmps
push
xor
div
jecxz
jmp
stc
dec
pop
loop
xchg
mov
lea
dec
pop
out
lahf
lods
test
stc
lods
mov
and
jmp
fwait
ret
rcr
cmp
xor
inc
scas
sub
sbb
dec
ficom
(bad)
in
push
mov
stos
jb
and
mov
fdivr
pop
xchg
idiv
sar
inc
in
xchg
mov
aas
jmp
test
lahf
enter
dec
imul
push
(bad)
mov
icebp
movs
fisubr
mov
inc
jg
xchg
dec
fnsave
pusha
sbb
cmc
ficomp
(bad)
lock
lods
lods
sub
xor
movs
sbb
outs
jns
movs
fwait
fwait
arpl
jne
pop
xor
mov
mov
lods
pop
push
or
stos
cld
dec
aaa
mov
jmp
pop
sbb
xchg
pop
xor
xchg
sub
fisub
xor
ficom
mov
dec
add
out
mov
cmp
and
push
cs
test
sbb
push
cmps
adc
xchg
sbb
sbb
daa
ror
push
mul
jae
scas
lea
sub
jae
hlt
jne
(bad)
fcomp
xchg
arpl
inc
xchg
and
xchg
sbb
dec
inc
out
inc
add
aaa
fnstcw
mov
inc
pushw
xchg
jne
push
push
ds
movs
shr
push
rcr
and
popa
add
addr16
xchg
xchg
add
xor
retf
lahf
sub
xor
sub
and
push
jle
(bad)
dec
lods
pop
(bad)
in
xor
mov
sti
call
mov
jmp
push
jo
imul
cmp
mov
fdivr
iret
js
fwait
or
aaa
add
pop
pop
lods
call
push
rol
xchg
into
add
add
mov
mov
jb
jnp
or
cwde
sbb
push
or
push
or
pop
into
in
clc
push
ds
lea
xor
push
add
cmp
jp
fldenv
scas
sbb
hlt
pop
sbb
and
mov
(bad)
inc
loope
loopne
add
push
xchg
ja
and
xchg
and
push
in
cmps
dec
dec
and
(bad)
push
dec
adc
cmps
adc
jp
in
cdq
xor
push
dec
mov
or
jno
and
xor
jmp
mov
int3
popf
pop
jle
pop
sti
dec
jns
mov
adc
dec
jnp
xor
in
aam
jnp
stos
inc
sbb
shl
shl
dec
dec
call
adc
cmps
lock
dec
inc
ror
rcr
jo
mov
lea
mov
dec
unpckhps
stos
lods
in
jecxz
ror
outs
js
pop
sub
mov
(bad)
ja
fadd
test
(bad)
jmp
mov
imul
add
xchg
xchg
inc
call
scas
ret
mov
jecxz
jo
add
lock
test
jbe
scas
ins
ins
fnsetpm(287
xor
add
push
ror
xor
ds
mov
cs
es
pushf
std
add
sub
enter
or
fisubr
jle
add
or
hlt
xor
ds
iret
stc
out
xor
out
cmps
out
pop
retf
mov
pop
mov
xchg
adc
inc
mov
scas
gs
into
push
aaa
ins
je
in
test
movs
sub
adc
push
retf
cld
mov
ins
push
cmp
xor
sub
fild
dec
ja
or
and
cmc
ret
(bad)
fldenv
inc
mov
call
arpl
jge
xlat
ret
mov
repnz
or
sahf
inc
cwde
shl
cmp
push
sbb
mov
out
stc
jmp
inc
sbb
mov
inc
and
mov
add
loopne
mov
cmps
adc
hlt
aas
xchg
or
popa
cmp
je
in
xchg
mov
adc
jno
add
data16
(bad)
scas
pop
es
mov
pop
and
inc
lock
or
mov
outs
cmp
cmp
xor
sti
push
out
bound
xchg
ins
jp
out
dec
cmp
and
mov
mov
inc
mov
mov
outs
pop
jmp
rcr
fsub
in
inc
jnp
sti
xchg
movs
xchg
jge
and
inc
out
daa
adc
adc
fld
pusha
adc
daa
mov
push
imul
jg
xchg
not
cmp
imul
inc
shl
and
jo
and
inc
xchg
sub
dec
lods
xchg
mov
push
xchg
xor
not
mov
ret
inc
daa
daa
adc
fwait
lock
push
and
(bad)
dec
mov
das
ins
xchg
pop
pop
jle
mov
inc
mov
sbb
pop
loope
mov
ins
xor
aam
mov
cmps
push
ret
nop
inc
cdq
addr16
xchg
jnp
test
mov
out
rcl
mov
jp
lock
jb
cmp
ja
add
cdq
imul
add
sub
inc
mov
aad
dec
cmps
mov
xchg
mov
dec
xor
mov
push
fmul
adc
pop
inc
and
int
or
adc
jno
xchg
sub
mov
jp
jno
inc
shl
jl
lahf
inc
pushf
loop
add
imul
dec
loopne
or
mov
mov
scas
cmp
inc
out
pop
sti
retf
fdiv
mov
iret
mov
xor
iret
gs
xlat
push
sti
cmp
xchg
das
push
nop
inc
rol
cmps
cld
jecxz
xor
jo
ja
sbb
pop
loopne
lods
jp
sub
add
inc
fwait
lahf
inc
mov
xchg
jnp
sub
icebp
push
es
sbb
pop
push
cmp
mov
cmps
iret
fsub
inc
jb
mov
xor
test
inc
xor
out
sgdtd
or
pop
fnsave
push
call
push
dec
mov
leave
or
cli
sbb
js
inc
fmul
sbb
sbb
and
test
xchg
add
mov
gs
test
mov
stos
cmps
fsubr
in
mov
mov
cmc
dec
pop
dec
add
fld
dec
test
pop
shr
ror
jl
add
sbb
push
xor
sahf
inc
(bad)
cli
loopne
mov
pushw
pop
loope
cdq
xchg
hlt
or
xor
jl
sub
fild
inc
cmp
xor
test
lods
rcr
lahf
add
mov
xchg
cld
mov
push
pop
stos
pop
adc
dec
xchg
push
or
leave
mov
imul
sub
loope
cmp
add
mov
iret
mov
fdivr
(bad)
xor
imul
adc
stos
les
aad
sub
jnp
inc
push
loopne
pop
lods
pop
mov
lods
push
and
idiv
sti
sbb
and
cmp
cs
movs
mov
pop
sub
xchg
jecxz
imul
cmp
add
test
dec
movs
fs
dec
mov
repnz
std
xchg
out
fld
mov
ja
imul
loop
std
xchg
in
out
es
fwait
xchg
aas
shl
loopne
pushf
lods
jno
das
push
sbb
xlat
pop
aas
std
sar
scas
jb
and
pop
dec
popf
loop
and
rol
pop
push
xor
cmc
fcomp
(bad)
dec
or
pop
mov
js
aas
repnz
retf
adc
push
mov
mov
pop
adc
out
inc
retf
cmp
jge
pop
push
xor
jb
lds
adc
mov
push
jnp
xchg
cli
jg
push
xor
mov
inc
adc
mov
sub
das
cmp
outs
les
xlat
in
mov
xchg
aas
or
or
and
cmps
outs
or
test
sub
aad
cmc
(bad)
out
aam
xor
jle
cmps
dec
cmp
add
cwde
push
cmp
jg
imul
repnz
mov
mov
xor
mov
repnz
std
lea
xchg
jp
aam
cwde
xlat
gs
xlat
mul
stos
hlt
into
out
xor
inc
xor
cli
jl
pop
xchg
fcomp
ins
clc
js
rol
or
xchg
push
and
scas
xor
leave
(bad)
push
xor
fstp
cmp
aaa
call
rcl
or
mov
and
mov
hlt
mov
test
sahf
xchg
pop
inc
mov
push
lods
cmp
xor
rol
xor
sbb
sbb
ss
mov
fild
rol
in
(bad)
ins
mov
in
ins
cmp
or
pop
and
stos
hlt
push
lock
fisubr
cld
push
sub
add
sbb
push
push
ret
mov
adc
je
test
cmp
hlt
jl
gs
iret
aad
sub
xchg
bound
js
std
cmp
idiv
enter
xor
inc
pop
cmp
pop
mov
ins
mov
mov
mov
pop
xchg
icebp
inc
adc
test
xor
xchg
dec
sahf
jae
jae
add
mov
nop
test
dec
inc
retf
shl
xor
aam
jp
cmp
lock
sub
lahf
sub
xchg
inc
daa
pusha
xchg
adc
dec
cmp
or
mov
mov
xchg
(bad)
in
ss
sub
jo
sub
sbb
push
pop
jl
jmp
rol
dec
pusha
sbb
and
scas
cli
push
ret
add
(bad)
in
bound
pop
xor
test
cli
cdq
aas
dec
cmp
loope
sbb
clc
pop
mov
or
addr16
sbb
daa
sub
or
sbb
mov
jp
jne
outs
and
test
imul
iret
fadd
mov
adc
out
or
jmp
aad
xor
fst
rol
fist
mov
mov
into
stos
pop
pop
shl
add
sbb
(bad)
xchg
push
dec
fstp
(bad)
gs
jecxz
in
or
pop
or
dec
xchg
daa
rol
sub
mov
adc
jl
out
push
jp
xchg
xor
push
rol
dec
ins
(bad)
xor
pop
test
retf
or
sar
stc
mov
or
stc
popa
ja
and
repz
loope
(bad)
dec
or
lahf
cmps
xchg
retf
pop
push
sbb
int3
daa
movs
sub
popa
mov
adc
(bad)
movs
add
sub
mov
imul
mov
in
adc
pop
test
adc
sub
sbb
sub
push
mov
and
in
daa
jecxz
jmp
mov
mov
xchg
lods
mov
cwde
mov
pop
mov
rol
cmp
jmp
out
inc
xchg
xchg
test
test
sbb
adc
imul
into
scas
xor
jmp
popa
out
imul
pop
repz
mov
jnp
push
inc
cmp
jp
dec
xor
ins
popa
movs
inc
xor
fs
dec
jge
iret
ret
js
mov
mov
mov
(bad)
jmp
(bad)
jmp
xchg
inc
mov
(bad)
adc
bound
sub
mov
aaa
retf
or
mov
pop
hlt
imul
jne
mov
test
aam
stos
cs
cmp
push
or
in
xchg
ss
jg
scas
rol
push
mov
adc
pop
mov
mov
aaa
mov
mov
pop
shl
or
push
out
push
fistp
hlt
pop
pop
scas
rcl
(bad)
jae
cmp
push
test
mov
or
dec
loopne
les
(bad)
in
test
cmp
mov
push
inc
xor
or
shl
inc
jbe
xchg
pop
pop
aam
pop
ins
xor
adc
jl
ret
jge
es
rol
mov
daa
sub
aam
rcr
dec
mov
ss
mov
mov
add
pop
repnz
rcr
ret
xor
xor
xor
sbb
retf
in
pop
test
loop
jl
mov
mov
cmp
fwait
test
jmp
adc
mov
mov
pushf
and
mov
xor
retf
pop
sbb
sahf
ret
rcl
xlat
cmc
pusha
adc
and
ins
mov
fisttp
mov
out
jmp
cmp
xchg
dec
pop
mov
ins
(bad)
into
pop
pushf
lock
push
stc
pop
mov
sub
mov
xor
aas
mov
mov
pop
dec
repnz
sahf
dec
xor
fwait
mov
cdq
inc
cld
jmp
jg
sbb
jnp
retf
push
loopne
xchg
add
repz
retf
mov
add
shl
rcr
mov
xchg
test
mov
addr16
in
xchg
sub
pop
push
cdq
mov
and
xchg
scas
xchg
pusha
adc
(bad)
push
sbb
js
pop
jecxz
lahf
pop
jl
xlat
sahf
sub
jns
iret
add
cmc
rcr
xchg
xchg
(bad)
pop
fs
arpl
sub
mov
movs
cmps
retf
mov
les
xor
add
out
push
jmp
outs
or
shl
sub
leave
push
mov
icebp
nop
xchg
xor
ds
and
mov
sub
jns
pop
xchg
les
mov
lds
pop
(bad)
je
stos
scas
jbe
gs
jno
shl
call
or
mov
repnz
mov
dec
out
cmps
loopne
rsqrtps
neg
jb
adc
jle
scas
xchg
adc
ds
adc
dec
adc
and
out
(bad)
xor
repnz
add
ins
mov
dec
cli
mov
jle
xor
adc
mov
add
or
or
pop
dec
jne
fwait
or
xchg
(bad)
mov
mov
mov
xchg
ins
mov
jne
mov
(bad)
nop
ret
add
or
add
adc
adc
movs
or
sbb
jb
lahf
(bad)
and
inc
jecxz
outs
stc
mov
add
or
pop
into
xor
les
call
fistp
(bad)
rol
adc
cmp
adc
xchg
sbb
nop
outs
inc
xor
int
mov
call
jne
cdq
push
mov
inc
ja
(bad)
in
hlt
sub
into
pop
lock
fst
(bad)
push
push
stos
mov
rcr
or
adc
lahf
and
sti
pushf
xor
pop
sbb
or
mov
not
cld
add
sbb
adc
loop
fisub
xchg
mov
dec
movs
inc
js
shl
shr
(bad)
in
add
fwait
sbb
xchg
(bad)
loope
repz
fbld
push
lds
lock
pop
fwait
inc
mov
in
adc
cmp
aaa
ss
jno
sub
bound
je
xlat
loop
jb
movs
adc
call
les
inc
retf
add
add
test
dec
(bad)
mov
je
es
retf
test
add
mov
mov
cdq
xor
clc
int
xchg
xchg
inc
jne
popf
shl
and
popa
cld
dec
fstp
aam
std
shl
and
xor
push
(bad)
cmps
aad
aam
cmp
jae
popa
fmul
ins
aad
mov
popf
icebp
into
call
mov
mov
fwait
jno
jae
jecxz
pushf
pusha
sbb
sub
(bad)
pop
add
lea
ja
or
sub
test
sbb
popa
xchg
rol
add
push
fiadd
cmp
repnz
and
lock
inc
push
add
dec
cmp
lahf
dec
jno
into
push
xor
sbb
dec
ins
sti
jbe
(bad)
mov
jecxz
jns
mov
dec
enter
pop
lods
inc
ds
mov
mov
add
ins
popf
mov
(bad)
daa
xor
xchg
cld
sbb
pop
pop
pushf
push
sbb
aam
and
mov
jmp
inc
mov
loope
xchg
lea
push
pushf
jp
call
push
mov
push
and
enter
pop
pop
lea
sub
fdivp
mov
mov
adc
das
les
jne
cmp
cs
hlt
push
lods
dec
arpl
out
pop
call
pushf
imul
fdivp
lock
fsubr
mov
pop
mov
sub
aam
(bad)
jmp
mov
and
xor
mov
sub
sub
and
test
das
mov
fdivr
sub
call
sub
mov
xchg
cli
scas
in
cli
push
call
into
mov
mov
enter
or
xchg
inc
sbb
in
loopne
jns
ins
jp
sbb
int
scas
pop
mov
mov
sahf
enter
sbb
in
mov
test
sub
sub
in
stc
mov
jp
stos
ja
push
push
inc
hlt
xchg
inc
or
imul
into
dec
cmp
sub
mov
add
and
or
adc
xchg
mov
pop
popa
push
pop
push
icebp
js
push
inc
inc
std
gs
or
jno
and
fcmovb
push
loope
sub
stos
sbb
repz
pushf
in
mov
(bad)
xlat
mov
rep
movs
sbb
test
push
mov
jns
imul
pop
loope
push
or
dec
xor
fadd
pop
sub
pusha
dec
popa
mov
fcom
xor
or
(bad)
gs
mov
pop
jne
ins
das
jmp
pop
cmp
mov
sub
and
cmps
(bad)
daa
inc
push
add
in
call
sub
push
(bad)
fild
push
dec
ins
ret
xlat
mov
add
push
jg
daa
inc
and
enter
cmp
lahf
pop
push
dec
sub
call
sub
mov
ror
in
out
sahf
xchg
dec
push
cld
int
xor
call
add
xchg
or
pusha
mov
daa
loop
fsub
pop
mov
movs
jge
sahf
out
(bad)
inc
mov
popf
cwde
cdq
rcr
add
push
pop
sbb
xchg
imul
test
dec
ds
push
mov
mov
mov
inc
(bad)
fcmovnbe
or
popf
std
mov
cmp
lea
cmc
fcom
sub
retf
jecxz
or
ss
jl
outs
ja
xchg
fsubrp
mov
out
push
and
dec
sahf
add
and
pop
sbb
imul
dec
ds
stc
scas
sbb
sbb
lods
or
cmp
repnz
dec
lahf
sub
ret
lock
sub
cmps
pushf
(bad)
mov
push
pushf
fdiv
int
jno
xchg
xor
pop
xchg
mov
mov
dec
rcr
jns
je
cmps
mov
icebp
aas
xlat
lahf
and
cld
or
jl
sbb
sub
jo
or
inc
mov
imul
fimul
int3
sub
sub
ss
jmp
sbb
add
dec
add
call
addr16
sahf
imul
popa
inc
ins
hlt
mov
pop
cwde
(bad)
das
mov
jmp
inc
add
mov
mov
fisub
in
div
and
sbb
ins
mov
sbb
or
retf
loop
(bad)
xlat
dec
mov
and
fild
scas
hlt
add
xlat
xor
or
bound
lods
cmp
fcomp
inc
ror
movs
sar
xchg
js
repz
ret
shl
mov
and
hlt
pop
stc
push
outs
dec
push
ret
call
sub
pop
sub
in
pop
scas
jecxz
pop
scas
push
mov
jmp
sub
xchg
push
dec
(bad)
sti
(bad)
repnz
cwde
and
or
xchg
in
inc
mov
mov
cli
stos
mov
mov
jmp
popf
dec
add
mov
into
adc
mov
xchg
ja
jp
frstor
test
lods
into
jp
aas
les
and
out
add
cmp
lahf
popa
(bad)
xchg
in
test
ss
cmp
xor
inc
xchg
inc
dec
add
pop
mov
loopne
inc
lock
movs
mov
sbb
es
mov
nop
ret
fdivr
sub
imul
clc
sti
jne
or
adc
sub
inc
into
sub
cmps
inc
out
dec
gs
mov
jo
nop
add
add
popa
cmp
fs
push
and
dec
pop
scas
and
or
hlt
sbb
ds
cs
and
loope
pusha
loop
mov
in
aad
mov
xor
pushf
int
dec
pop
pop
not
fcmovb
and
out
sub
jp
push
(bad)
aaa
xlat
mov
mov
gs
pop
sub
(bad)
in
mov
rol
xchg
inc
sahf
add
stos
push
arpl
mov
outs
and
or
adc
inc
call
jecxz
push
jnp
neg
inc
jg
xor
js
fisttp
je
mov
sbb
push
jb
in
lahf
pop
dec
mov
sahf
and
sub
push
mov
pop
add
adc
test
dec
popa
in
rcl
jmp
push
pop
scas
pop
xor
xchg
out
das
mov
inc
aad
sar
je
ja
fisubr
je
outs
pop
clc
mov
inc
xchg
or
sbb
out
adc
inc
sub
sahf
push
std
sub
pop
lds
sbb
movs
push
idiv
jo
es
lds
loop
cdq
jns
sbb
and
mov
inc
push
cmp
addr16
rcl
ja
in
dec
cwde
mov
sti
fdiv
cmc
jp
xor
mov
shl
in
fucom
int
call
and
pop
out
fiadd
jae
movs
shr
das
repnz
pushf
retf
and
mov
sbb
ins
js
dec
(bad)
in
rcr
push
jp
ins
daa
ins
or
test
cmp
sahf
xor
cli
mov
mov
test
inc
mov
xor
xchg
and
dec
xchg
movd
mov
xor
stos
jecxz
jns
out
(bad)
cmp
add
jp
jge
out
sbb
loop
shl
movs
cmp
mov
ja
xchg
aad
leave
and
or
dec
or
jmp
jge
test
mov
pushf
inc
aad
and
mov
and
in
outs
sub
xor
ja
mov
and
jecxz
and
cwde
sbb
ret
jb
inc
mov
dec
adc
xor
add
ror
adc
pop
inc
xchg
pop
mov
hlt
or
movs
ud1
in
mov
jo
or
xor
xchg
jns
lea
sahf
jmp
mov
push
and
xor
pop
lgs
popa
stos
or
ins
outs
fidivr
mov
add
popf
pop
(bad)
(bad)
imul
mov
out
rol
xor
pop
lods
js
bound
int
stos
jns
add
and
call
pop
push
dec
pop
retf
cmp
inc
popa
es
ds
adc
clc
rol
retf
or
rol
jno
or
neg
stos
(bad)
in
adc
xchg
aam
add
cmp
fstp
fwait
mov
into
ja
and
into
int
add
outs
sub
push
and
rcr
test
cwde
fidivr
iret
add
shr
ins
int3
mov
jmp
iret
mov
sar
push
mov
pop
xor
jns
int3
adc
push
lods
lods
mov
inc
shl
imul
and
cmp
and
cmp
push
fmul
inc
sbb
repz
cmp
jns
pop
push
bound
scas
xchg
lods
and
call
(bad)
add
and
xchg
sub
mov
mov
cs
(bad)
fcomp
add
adc
(bad)
ret
shr
stos
xor
mov
sbb
adc
sbb
sbb
hlt
xchg
out
int
lahf
sbb
dec
inc
imul
rcl
add
and
mov
push
dec
scas
popf
sub
sbb
push
in
ins
in
ss
out
js
cmp
(bad)
sub
sti
sbb
int
shr
push
lock
or
data16
xchg
jmp
xchg
iret
push
into
mov
fdivr
dec
inc
pop
popf
mov
in
add
inc
add
out
pusha
cmp
jmp
outs
push
mov
js
mov
or
movs
sub
adc
dec
lds
pop
nop
push
leave
push
inc
cli
mov
ret
mov
lods
pop
int3
pushf
add
js
mov
mov
sbb
fsubr
pop
into
dec
(bad)
dec
jno
gs
scas
push
ror
xor
inc
cwde
int3
jb
ret
cmp
cmp
sbb
std
sub
(bad)
orps
lods
stc
idiv
cmp
(bad)
icebp
xchg
sbb
sar
stos
inc
push
loopne
adc
and
dec
pop
jp
cmc
jecxz
add
mov
jbe
pushf
inc
cs
ror
enter
scas
mov
adc
cdq
int3
sbb
inc
mov
pop
stc
pop
mov
add
int3
push
fadd
es
sub
cmp
dec
sub
dec
inc
push
add
inc
shl
icebp
out
add
adc
rcl
fild
sub
or
xor
ret
ins
sar
jb
xchg
in
popa
cmp
stos
dec
or
push
and
or
icebp
mov
or
sar
dec
push
push
lahf
out
sbb
ja
or
fs
ror
pop
push
inc
pop
jb
xor
or
ret
mov
cs
mov
pop
sub
out
sti
(bad)
adc
sbb
xchg
sub
jb
xor
lock
jo
xchg
push
test
or
out
out
pusha
retf
xchg
nop
cdq
dec
and
aad
pop
popf
movs
xchg
es
xor
nop
mov
sbb
mov
mov
(bad)
cld
xor
dec
inc
xchg
xor
div
out
and
loop
cmp
scas
or
cmp
push
retf
into
jb
test
pop
(bad)
jns
outs
add
pop
or
pusha
mov
leave
in
mov
neg
inc
inc
out
mov
inc
mov
pop
or
dec
inc
pop
neg
xor
movs
mov
aaa
fistp
dec
jmp
mov
mov
fisubr
gs
push
xor
fs
mov
pop
pop
inc
imul
(bad)
fcomp
aam
add
rcl
jae
ins
and
jle
xor
adc
sub
mov
xchg
dec
mov
add
test
xor
jmp
xor
and
das
xchg
ds
add
mov
jno
test
adc
push
mov
mov
adc
push
sub
iret
push
test
loop
cmp
les
cwde
movs
loop
mov
jle
adc
dec
cmc
xchg
clc
popf
mov
movs
cdq
jmp
cmp
retf
xchg
add
xchg
out
pop
std
mov
cmc
(bad)
jnp
mov
in
mov
mov
mov
sub
scas
add
nop
pop
test
test
or
pop
push
mov
lea
xchg
cmp
xor
mov
stos
test
mov
push
lahf
or
test
ja
clc
(bad)
frstor
mov
popa
test
ficomp
imul
jle
cmp
jmp
outs
jecxz
dec
add
icebp
out
add
push
test
ficomp
cli
or
icebp
in
retf
fisttp
inc
add
lods
repnz
aaa
ins
jg
lea
lock
iret
inc
cld
sbb
xchg
inc
lea
rcr
out
sbb
cli
adc
and
pop
aaa
test
clc
in
mov
xchg
xchg
adc
dec
ds
mov
xchg
pop
jg
fdiv
mov
call
adc
popa
add
fsub
stc
xchg
das
sar
mov
mov
shl
mov
sti
jb
xor
bound
loopne
ror
add
sbb
push
jnp
clc
rcl
mov
es
pop
sahf
or
(bad)
les
add
jb
mov
aad
sbb
inc
mov
fwait
xchg
mov
retf
ret
push
jnp
xchg
(bad)
neg
add
dec
push
push
push
cmp
push
xlat
xchg
xor
and
popa
call
pop
mov
push
cmps
popf
cmps
(bad)
inc
repnz
pop
je
dec
adc
cmp
and
ret
xchg
push
mov
jb
inc
add
ins
sub
test
mov
inc
mov
cs
jnp
repz
xchg
pop
cmp
jg
inc
rcr
fs
pop
inc
dec
repz
repz
mov
or
(bad)
sub
inc
push
xchg
xchg
imul
je
jo
add
jo
pop
add
pop
lods
int
ins
mov
pop
mov
push
cmp
jp
cwde
xor
outs
mov
mov
pop
push
(bad)
xchg
mov
or
fbld
aad
pop
daa
fst
jmp
imul
iret
(bad)
sub
sbb
or
and
aas
dec
and
jno
retf
nop
fistp
add
into
xchg
lahf
pop
and
aas
cmp
pop
xchg
and
scas
pop
mul
ins
and
ins
hlt
mov
xlat
mov
je
dec
xor
adc
in
into
or
out
loope
loop
mov
xlat
jmp
and
xchg
jmp
jp
ftst
add
add
push
rcr
dec
pusha
call
add
sbb
inc
and
fcom
cmp
jmp
popf
xchg
stc
mov
out
jle
cmp
cmc
(bad)
out
(bad)
and
lods
ret
adc
push
or
out
cmp
lods
lea
sbb
dec
ds
loope
out
mov
mov
pop
push
mov
fiadd
lods
aaa
in
cmps
xor
pop
mov
icebp
jo
mov
mov
xor
les
iret
stc
int3
outs
xor
das
lods
pop
xchg
xlat
mov
dec
push
and
mov
and
into
mov
call
sub
mov
jb
sbb
fs
loop
xor
mov
xlat
mov
sub
inc
sub
cmp
add
retf
push
jge
test
jne
mov
out
jb
jb
shr
mov
mov
add
call
in
mov
cmps
fld
mov
xchg
jae
addr16
cld
and
mov
lods
mov
arpl
repz
mov
dec
xor
jb
and
or
jmp
std
and
out
push
sub
mov
arpl
movs
and
fwait
cmps
inc
xchg
pop
fwait
xchg
(bad)
ds
pop
mov
xchg
inc
ss
in
scas
sti
fxch
sbb
icebp
sub
fwait
or
stos
and
arpl
test
std
push
iret
mov
outs
stc
lods
jno
add
jbe
jge
inc
addr16
call
test
aad
das
xchg
movs
or
jl
push
cmp
pop
or
jns
push
dec
js
mov
bound
sahf
jmp
jle
mov
push
mov
pop
pop
inc
(bad)
call
xor
or
retf
add
pushf
push
dec
rcl
mov
(bad)
mov
mov
adc
mov
pop
and
cmp
jae
sahf
(bad)
or
jecxz
icebp
xor
sahf
pop
inc
cli
daa
rol
data16
or
clc
movzx
mov
clc
mov
push
add
lahf
pushf
loope
sub
pop
inc
jno
mov
jecxz
jmp
mov
push
fs
mov
call
push
xchg
mov
iret
jo
out
push
nop
xor
jecxz
pop
push
add
scas
sbb
add
push
dec
loop
movs
es
(bad)
xor
cmp
adc
add
ret
retf
bound
mov
xchg
test
bound
in
pop
jle
or
out
xchg
ror
or
lea
(bad)
mov
das
dec
out
mov
pop
mov
xchg
xor
jno
(bad)
lahf
aaa
xchg
mov
arpl
prefetch
test
inc
dec
hlt
dec
fstp
sbb
adc
and
mov
add
cdq
sahf
inc
icebp
mov
push
shr
push
push
and
ror
push
mov
fdivr
shr
cmp
fs
xchg
adc
(bad)
cli
mov
imul
(bad)
data16
add
cwde
(bad)
addr16
popa
adc
mov
repz
jno
rcl
movs
sub
cs
dec
mov
out
fistp
sub
daa
jg
pop
out
int
fdivrp
outs
enter
outs
inc
test
data16
or
mov
and
xchg
xchg
leave
enter
cwde
les
(bad)
aad
sub
sbb
dec
aaa
push
xchg
sub
imul
mov
shl
sub
push
popa
ins
push
xlat
sti
call
das
rol
or
lds
imul
pop
dec
cmp
pop
xchg
call
clc
scas
push
cwde
addr16
push
cmp
add
pop
sbb
div
cmp
stc
(bad)
pop
fstp
inc
sub
add
sar
fimul
pop
rcr
jg
into
inc
cld
inc
cmp
(bad)
pushf
push
and
adc
xchg
and
xor
inc
cmps
inc
mov
pop
and
les
imul
retf
dec
xor
adc
mov
cmp
(bad)
pop
je
jecxz
cmp
adc
xor
add
aaa
mov
push
push
ins
std
xchg
rol
add
mov
and
loope
xchg
jbe
jmp
add
pop
call
lock
dec
stc
scas
or
jne
ficomp
movs
jae
xor
cmp
rcr
mov
bound
and
in
jae
shl
fsub
cmp
fs
sub
ins
xchg
dec
fistp
mov
mov
test
xchg
xlat
mov
or
push
sbb
pop
mov
hlt
pop
cdq
add
adc
jno
es
dec
std
xor
adc
mov
stos
dec
jp
mov
xchg
in
mov
pop
sub
xlat
xlat
cmps
pop
in
dec
fwait
sbb
lods
dec
popa
ss
mov
int3
sub
pop
cmp
and
leave
push
dec
and
call
ins
or
add
push
out
std
test
mov
jnp
xchg
xor
or
xchg
mov
mov
out
and
arpl
pop
xor
adc
jmp
jg
test
outs
push
clc
je
mov
mov
jge
shl
mov
shl
sahf
or
inc
cmps
inc
cmp
jle
and
pop
sahf
push
je
jmp
xor
and
push
mov
add
loopne
mov
and
ins
mov
stc
sbb
push
dec
pusha
int
int3
test
imul
add
inc
jp
xchg
sbb
fprem
jmp
mov
xor
data16
xchg
jo
dec
imul
out
setbe
stos
jbe
retf
pop
push
xor
xor
pop
pop
sub
ja
sbb
popa
cmps
sbb
xchg
inc
adc
je
es
mov
adc
push
xor
lea
mov
push
mov
data16
fbstp
es
hlt
js
mov
aam
jbe
aad
sub
mov
aaa
int
xchg
int3
mov
and
ins
fisub
jno
jp
iret
ins
xchg
sahf
in
pop
loope
pop
std
cmp
loop
scas
mov
retf
sbb
out
jl
cmp
je
inc
push
(bad)
jmp
and
or
cmp
mov
and
push
or
pop
jne
and
fcom
adc
leave
dec
pushf
dec
(bad)
(bad)
sub
sbb
cdq
adc
gs
rcl
addr16
push
mov
mov
lods
sti
scas
dec
mov
fwait
(bad)
icebp
mov
xchg
jne
mov
pop
push
rcr
add
mov
stos
jmp
jae
pop
jge
or
stos
in
pop
sbb
mov
xchg
dec
xchg
inc
(bad)
sbb
inc
push
cmp
call
out
ins
retf
xchg
jo
push
pop
bound
int3
psubw
and
xor
stos
and
mov
push
pop
and
push
sbb
or
pop
sub
dec
test
cs
push
dec
test
fnsave
pop
sti
out
cmp
fistp
sub
sub
jno
movs
ja
stc
sbb
pop
fistp
xsha256
cmps
adc
adc
loope
popa
shl
imul
ret
or
retf
mov
and
mov
dec
mov
mov
adc
popa
mov
(bad)
loop
and
in
jo
lea
inc
or
inc
lahf
or
or
mov
fidivr
mov
shr
adc
xchg
rcl
push
rcr
lahf
data16
jbe
(bad)
aad
pop
addr16
mov
mov
adc
push
pop
out
fucomp
in
stos
and
pavgw
inc
mov
les
xor
or
daa
add
mov
test
das
pop
or
fisttp
in
jns
mov
cmp
pop
aad
push
inc
inc
add
idiv
cmp
and
fadd
sub
jle
jne
jge
xchg
add
ins
and
pusha
pmuludq
sub
lods
ins
fsubr
bound
mov
inc
dec
lds
fimul
mov
inc
sbb
jbe
sar
mov
mov
mov
push
mov
mov
xchg
add
adc
nop
aas
lods
in
dec
jo
xchg
and
out
pop
pop
mov
popf
ror
cmp
test
in
sbb
or
xchg
test
stc
outs
xor
int
(bad)
mov
popa
(bad)
push
jnp
xchg
fidiv
xchg
jne
dec
sahf
mov
and
dec
xor
sub
mov
push
dec
ret
mov
movs
(bad)
push
int3
mov
xor
pop
inc
fst
pop
arpl
retf
push
into
ret
in
hlt
test
stc
inc
leave
inc
ins
push
(bad)
push
dec
cli
(bad)
hlt
sub
mov
je
push
outs
and
push
xchg
bound
imul
ja
mov
xchg
fwait
popa
adc
and
push
stos
push
ror
or
stos
sbb
and
int3
rcr
xor
pop
mov
or
push
mov
sub
lods
shr
mov
cmp
repnz
pusha
jno
inc
outs
mov
mov
shr
adc
jle
cmps
jnp
rol
inc
bound
mov
xor
push
rcl
push
sbb
inc
out
in
je
adc
out
inc
in
test
imul
sbb
loopne
jle
les
fwait
(bad)
push
mov
sahf
pop
xchg
(bad)
dec
pop
or
push
push
mov
inc
outs
shl
sub
dec
sub
out
test
push
jae
lock
aas
add
lea
add
and
aam
addr16
or
daa
clc
fnstcw
in
pop
in
idiv
ret
sbb
(bad)
and
and
clc
clc
call
in
outs
add
pop
sub
out
push
int
or
sbb
sahf
imul
adc
sub
push
imul
hlt
out
hlt
xchg
xchg
clc
jb
mov
loop
(bad)
xor
sti
ja
xchg
push
daa
dec
pop
int
adc
clc
fst
xlat
push
sbb
enter
pop
jmp
xchg
mov
and
in
test
les
mov
inc
mov
pop
inc
addr16
mov
xlat
adc
daa
aad
hlt
xchg
sti
retf
aas
addr16
mov
xor
jp
stos
aaa
sub
push
aaa
or
cmp
sbb
pop
inc
cmp
movs
test
adc
sbb
sar
(bad)
and
shl
push
sbb
inc
cmps
sub
int
push
dec
push
and
cmp
pop
pusha
cli
add
enter
cdq
pop
idiv
mov
iret
nop
jae
test
les
or
push
xchg
jp
or
xor
inc
mov
cmc
mov
push
div
pop
cs
stc
outs
movs
ins
cmp
jno
inc
inc
push
push
fidivr
mov
popf
mov
ret
call
retf
mov
sahf
dec
or
mov
out
mov
cmp
imul
push
out
test
fmul
pop
call
sbb
xchg
mov
sbb
sub
and
pusha
mov
cmp
(bad)
into
out
in
jmp
pop
mov
into
daa
hlt
push
adc
push
inc
int3
call
fld
lods
sub
iret
add
xor
popa
stos
inc
cwde
scas
xor
mov
sahf
dec
sub
cmp
jns
mov
inc
in
add
pop
mov
and
push
pop
fisttp
xor
repz
pop
sub
in
idiv
es
shl
pop
std
sbb
cmp
xor
(bad)
fwait
ror
add
iret
adc
stos
sub
and
stc
out
xor
pop
cmp
in
ins
and
mov
or
stos
add
adc
fsub
inc
sahf
lock
pop
pop
pop
mov
pop
add
loopne
sub
repnz
push
sub
inc
(bad)
ins
sub
stos
xchg
xor
xchg
pop
inc
xor
shr
mov
fidiv
dec
push
rcl
sbb
mov
sbb
ret
dec
inc
stos
xor
sub
jecxz
popa
add
push
push
or
xor
popf
adc
cs
dec
push
pushf
in
or
pop
jne
(bad)
xchg
pop
out
inc
xchg
inc
pusha
and
mov
jns
lahf
cld
xchg
adc
loope
outs
imul
pushf
ror
mov
and
add
lds
pop
sbb
xchg
mov
ret
js
jge
xchg
out
fsubr
sub
dec
dec
hlt
sub
repnz
js
inc
pusha
dec
in
xchg
and
je
push
mov
(bad)
(bad)
pusha
and
dec
jno
push
retf
or
rcl
call
into
mov
xlat
fsub
dec
cmp
or
int
mov
jl
push
arpl
ldmxcsr
pusha
mov
dec
retf
mov
jp
lods
hlt
jle
addr16
xor
pop
icebp
add
outs
dec
or
push
mov
and
inc
cmp
mov
inc
add
test
rcr
ins
xchg
mov
push
sar
cwde
imul
dec
jae
iret
mov
shr
mov
ss
jmp
test
or
in
repz
call
and
cdq
sub
push
add
xchg
rol
adc
xor
pop
mov
fmul
imul
adc
xor
xor
mov
fidivr
push
mov
mov
iret
cmp
sahf
jae
push
add
data16
add
pushf
push
add
sub
leave
dec
arpl
in
mov
sti
arpl
cmp
push
dec
fmul
movs
(bad)
push
call
cmp
sub
mov
pop
pop
imul
loopne
rcl
repz
add
cmc
sub
xchg
cmps
jbe
out
xor
loope
lods
add
je
and
push
imul
cmp
jmp
je
sub
push
(bad)
cmps
movs
stc
sti
mov
or
cs
xor
cmp
adc
jecxz
cmps
dec
les
xor
jmp
ins
arpl
xor
ins
ret
push
mov
repnz
dec
xor
xchg
(bad)
out
jae
mov
fist
sub
jmp
sub
clc
pop
addr16
leave
adc
pop
push
adc
sub
inc
lock
sbb
dec
mov
push
fild
push
mov
data16
push
and
bsr
jbe
cmp
stos
xor
add
scas
das
cmp
(bad)
mov
cmp
dec
ja
jb
mov
push
push
adc
lea
test
cmps
mov
xchg
cmp
add
adc
cmp
int
mov
stos
and
add
out
mov
mov
shl
sub
movs
xor
ret
inc
ja
(bad)
jl
sub
fdiv
aaa
pop
in
cmp
out
repz
int3
data16
mov
popf
int
arpl
leave
or
or
das
test
gs
aaa
cmp
fisttp
js
dec
aas
push
mov
aas
nop
push
adc
cmc
or
mov
mov
outs
sub
push
daa
sahf
push
push
repnz
or
retf
mov
xchg
sub
mov
jge
or
xchg
stos
mov
mov
pop
repnz
push
fcmovb
pop
cmp
cmp
std
jmp
cld
dec
push
adc
mov
sbb
mov
daa
cmp
jae
sub
xchg
shl
xchg
bound
xchg
adc
dec
aaa
retf
scas
push
in
cli
outs
push
jbe
sub
sti
ja
mov
lods
into
push
pop
sbb
addr16
sub
aam
adc
(bad)
mov
data16
ror
dec
stos
mov
mov
lods
out
cmps
sbb
je
lock
loopne
adc
int3
stos
add
fs
lods
loop
inc
ds
fild
lods
test
pop
jp
add
pop
retf
mov
imul
dec
jge
retf
add
xor
push
mov
(bad)
test
jo
ja
jge
std
jo
add
mov
lahf
ja
sub
jae
sbb
mov
or
mov
add
clc
jl
outs
addr16
imul
inc
clc
ret
mov
jne
push
jge
es
dec
inc
je
and
sbb
inc
js
ja
movs
arpl
xchg
adc
inc
xchg
in
outs
clc
add
mov
mov
xor
cdq
lds
sbb
push
cli
inc
lea
or
test
sub
pop
(bad)
push
cmp
or
add
or
jg
push
(bad)
daa
aas
scas
dec
xchg
pop
cmp
retf
in
ret
xor
mov
daa
adc
mov
or
(bad)
mov
fist
adc
retf
pop
mov
fst
mov
jl
jo
or
lahf
icebp
mov
lds
adc
xchg
dec
rcr
pop
add
cli
mov
je
inc
add
fild
mov
pop
(bad)
shl
inc
fdivr
retf
(bad)
fadd
(bad)
loopne
retf
nop
jecxz
aad
or
pop
aas
rcr
mov
sar
lods
mov
push
stos
cmp
pop
(bad)
xchg
xchg
xchg
jg
mov
inc
mov
clc
mov
mov
dec
add
ds
(bad)
loop
add
cmp
lds
adc
sbb
(bad)
mov
sbb
push
pop
and
mov
ds
mov
mov
mov
bound
(bad)
pop
in
sahf
mov
cwde
pop
or
pop
lds
sbb
jnp
cdq
jmp
out
arpl
mov
fwait
in
jne
xor
jae
cmp
xchg
push
and
mov
call
sbb
sahf
enter
mov
push
std
stos
xchg
dec
sahf
xchg
loop
sub
lahf
imul
push
out
aam
mov
xchg
cmp
div
ret
mov
mov
or
mov
pop
test
push
loope
cs
fs
inc
cld
lds
lods
pop
sahf
xlat
mov
aaa
test
jge
pop
sbb
sbb
iret
adc
mov
lods
(bad)
lock
jl
jmp
rcr
dec
jl
jmp
add
add
loope
or
sbb
test
mov
or
cmc
pusha
jmp
pop
ja
test
fcomi
mov
bound
or
inc
imul
mov
int3
sti
jmp
and
daa
sahf
xchg
stos
(bad)
imul
scas
xor
pop
popa
rcr
push
push
pop
pop
test
sub
push
mov
xchg
xor
cwde
cmp
add
clc
or
es
movs
cli
sbb
mov
shr
xor
sbb
jge
jae
and
test
fidivr
lods
push
adc
push
push
cmc
mov
jge
mov
pop
mov
aas
hlt
scas
mov
dec
shr
xor
pshufw
mov
shl
inc
xchg
mov
cmp
cmps
imul
in
sub
sahf
mov
cwde
repnz
push
sub
test
cmps
pop
mov
out
scas
mov
loopne
jp
xchg
call
cmp
(bad)
pushf
pop
pop
test
(bad)
in
adc
xor
add
lods
shl
in
ffree
lods
push
rcpps
and
xchg
popf
sub
psrad
xchg
loope
aam
mov
ja
xor
mov
mov
stos
dec
jo
fwait
xchg
sbb
loopne
and
icebp
jmp
dec
pop
imul
jecxz
xlat
push
and
jp
push
jae
pop
or
scas
test
cmp
ins
shr
clc
mov
mov
mov
and
mov
mov
rep
les
push
lods
ins
mov
pop
add
mov
cmps
in
sub
jg
mov
jns
mov
and
inc
mov
add
test
mov
ficom
repnz
addr16
pop
(bad)
pop
imul
lods
mov
adc
mov
retf
int3
loopne
and
mov
inc
inc
inc
in
nop
lds
pop
adc
pop
test
cmp
iret
std
cli
test
test
psubq
pop
shl
or
jbe
loopne
and
and
pop
int3
test
jle
repnz
jle
ins
gs
xchg
jne
fcom
sub
jbe
cmp
mov
popf
sub
in
dec
(bad)
xchg
jl
push
mov
jg
jle
mov
xor
mov
rcl
jae
adc
call
aad
fsubr
mov
arpl
adc
inc
jae
ret
pop
stc
stos
aad
pop
push
adc
mul
mov
aam
jno
into
es
sbb
imul
lahf
outs
ret
(bad)
lahf
mov
adc
(bad)
jbe
push
int3
jo
test
in
lods
popa
leave
sahf
fwait
ja
add
call
sbb
lods
sub
sar
sub
stos
jo
mov
xchg
mov
xor
idiv
cmps
sahf
mov
fcom
stos
pop
or
inc
jne
(bad)
sub
retf
ja
cld
retf
sbb
mov
cmp
icebp
inc
adc
push
jnp
lods
imul
imul
mov
cmp
pop
mov
push
movs
mov
cmp
sub
or
in
(bad)
push
mov
xor
pop
shr
pop
dec
ret
xor
test
(bad)
fcom
out
add
cmps
in
jbe
ret
repz
xchg
sbb
mov
test
or
mov
and
jns
push
cmp
ficomp
pusha
add
jl
add
inc
jne
mov
stos
mov
out
gs
push
xor
(bad)
js
std
into
mov
ins
out
mov
push
enter
mov
out
or
mov
or
push
sbb
je
sbb
jl
cmp
xor
(bad)
call
adc
adc
dec
xor
mov
add
or
pop
lea
pop
mov
sbb
push
loop
pop
ds
fnstcw
jg
or
fbstp
fs
ss
sub
(bad)
dec
jae
cli
arpl
std
mov
pop
sti
xlat
ss
jne
fabs
in
push
inc
mov
xchg
movs
int3
xchg
outs
(bad)
je
sbb
(bad)
je
pop
sub
sti
mov
pop
pop
sbb
sti
ds
or
ins
call
jle
or
pop
lock
xlat
jecxz
in
cmp
mov
shr
inc
dec
mov
push
je
mov
call
jb
out
mov
add
sub
add
ds
xchg
xor
adc
(bad)
fld
and
js
and
sbb
sar
mov
mov
fs
and
jp
int3
mov
ja
inc
movs
loopne
xchg
push
mov
xor
test
aam
movs
retf
aaa
shl
cmc
repnz
adc
sbb
inc
(bad)
sbb
xchg
dec
loope
jb
into
(bad)
jns
mov
inc
sar
mov
sbb
cwde
std
(bad)
hlt
lods
xchg
out
sub
hlt
out
movs
push
(bad)
push
in
rol
ds
and
adc
sbb
cmp
mov
cmp
test
pop
dec
rcr
clc
mov
repnz
xchg
push
jp
adc
or
shl
sar
test
jae
lds
(bad)
loop
mul
imul
pop
fcom
loope
scas
jmp
test
mov
xchg
push
idiv
sbb
fmul
lods
imul
imul
xchg
jmp
xchg
push
add
dec
cmp
bound
imul
pop
(bad)
in
jge
mov
fsubp
icebp
and
adc
into
cwde
or
xor
fisttp
xchg
shl
sub
jp
std
mov
mov
int3
iret
inc
out
mov
lea
and
xchg
out
mov
mov
push
sbb
cs
ja
fcom
ror
cmp
into
(bad)
push
add
dec
sub
(bad)
(bad)
cs
in
mov
jnp
sbb
and
cld
fimul
xor
je
imul
adc
and
popa
call
jo
ret
adc
aam
mov
mov
jg
inc
mov
shl
mov
jge
ret
ret
jecxz
inc
in
inc
xchg
icebp
sub
lock
jge
push
in
(bad)
sti
stos
nop
in
mov
ret
les
sti
sar
sbb
jmp
outs
inc
int3
jmp
pop
cwde
sbb
mov
fild
outs
mov
(bad)
lods
jmp
jp
pushf
xchg
neg
cmp
xlat
fsubr
movs
sub
into
pop
and
sub
or
inc
sub
out
sub
sbb
into
sub
and
fmul
xor
test
mov
mov
mov
aaa
aas
std
mov
xor
hlt
cmps
lea
clc
push
rol
inc
mov
jo
or
pop
mov
xchg
mov
cdq
sbb
cld
out
pusha
ror
cmp
inc
mov
cld
and
dec
(bad)
rcl
ins
jmp
adc
aaa
adc
cmp
mov
jp
push
fwait
xchg
(bad)
fcmovnu
(bad)
sbb
mov
test
aas
fistp
rcr
inc
out
ja
clc
icebp
xchg
dec
fwait
adc
fld
sub
xor
and
mov
rcl
out
inc
sub
call
push
inc
fcmove
pop
repz
push
or
mov
adc
cmp
loopne
xchg
ds
mov
ret
stc
push
xchg
push
xchg
test
ins
mov
jle
test
xor
test
(bad)
or
jle
cmp
xor
add
mov
popa
cmps
test
aaa
mov
mov
popf
movaps
cmp
or
mov
inc
sar
dec
fild
fs
inc
dec
and
mov
push
frstor
jl
fidiv
(bad)
inc
(bad)
repz
and
les
adc
hlt
stc
js
fbstp
sti
(bad)
idiv
cmps
mov
scas
mov
ins
movs
push
div
push
movs
iret
cmp
jge
in
int
jo
push
sub
imul
outs
mov
jmp
push
mov
jg
scas
xchg
in
in
aas
scas
in
retf
mov
jecxz
stos
ja
mov
pop
jmp
xlat
inc
xchg
ret
cld
jo
push
fcmovb
scas
ss
rol
clc
sub
and
div
enter
or
xchg
ss
loope
add
add
fisub
es
iret
jmp
adc
in
xor
pop
cmc
dec
sub
ins
xchg
sub
jae
pop
inc
sbb
push
popf
add
sub
cmps
in
out
arpl
inc
test
mov
dec
movs
adc
cmps
cli
sbb
mov
out
mov
cmp
data16
imul
lea
jle
sti
aam
jbe
pop
cdq
dec
and
sub
and
dec
lahf
jl
push
add
fcmovu
fiadd
sub
enter
in
mov
mov
xor
fdivr
or
cld
sub
clc
adc
mov
sbb
or
adc
xchg
sbb
call
mov
pop
sub
adc
inc
push
push
and
mov
jecxz
movs
add
jb
xchg
and
cmp
data16
jae
leave
xchg
or
push
clc
int3
jae
xor
jmp
jecxz
repz
pusha
sub
adc
pop
pop
stc
adc
ror
loopne
mov
jbe
or
xchg
xchg
xor
lds
add
add
call
or
(bad)
rcl
add
dec
rol
xchg
or
jnp
fnsave
out
rcr
mov
mov
(bad)
add
push
mov
cmc
dec
jae
and
out
int
xchg
call
pop
xor
test
jmp
jae
retf
loop
inc
enter
jns
in
xchg
movs
or
dec
pushf
jmp
mov
sbb
das
jecxz
inc
(bad)
and
int3
repnz
shr
and
jb
jo
inc
shr
call
xlat
outs
ficomp
push
pop
cwde
dec
jne
call
cdq
cmps
or
push
stc
out
stc
mov
sub
retf
iret
jge
movd
ins
inc
pop
enter
dec
pop
jno
xor
jmp
int3
push
aas
jp
cdq
(bad)
jl
cmp
xor
aas
sbb
std
and
and
retf
mov
ja
sahf
mov
stc
mov
lea
aam
cs
sub
sbb
jl
fbstp
popa
cmps
imul
rcl
sbb
cmp
pop
jbe
(bad)
lahf
bswap
add
scas
repnz
movs
shl
push
cmps
(bad)
cmp
jge
inc
mov
inc
jmp
xchg
mov
mov
es
sub
pop
std
icebp
push
xchg
jecxz
dec
nop
sbb
imul
iret
and
jne
cvttps2pi
dec
fsub
cld
inc
retf
adc
xchg
fs
sbb
pop
sbb
cmp
aad
inc
or
sbb
or
mov
inc
push
(bad)
inc
pusha
leave
shr
pop
imul
push
dec
call
dec
shl
aaa
sub
movs
dec
push
push
adc
les
loop
dec
push
mov
sub
outs
sahf
(bad)
mov
mov
pop
add
mov
inc
add
or
mov
add
daa
jo
xchg
mov
fs
xchg
add
test
cmp
sbb
test
lds
push
jle
ror
ror
cmp
ds
stc
repnz
je
pop
cmp
pop
lds
push
inc
mov
lahf
dec
jbe
dec
inc
mov
ret
and
jno
fidivr
pop
movs
(bad)
ror
call
or
push
js
popf
cdq
daa
fadd
adc
cli
stos
fisub
(bad)
push
push
and
loope
push
xchg
ror
sub
dec
mov
sub
add
stos
lock
aaa
add
jp
sbb
inc
pop
push
mov
mov
js
jl
sbb
lea
cmp
movs
mov
push
xchg
cli
or
dec
sub
shr
mov
or
fs
inc
mov
push
fiadd
cs
or
mov
jnp
addr16
popa
(bad)
xchg
imul
test
loopne
icebp
push
and
pop
pop
cmps
cmps
in
aaa
sbb
mov
sbb
sbb
and
rol
out
xor
ins
sub
inc
or
retf
sbb
enter
pop
and
adc
sub
push
aaa
js
inc
ss
mov
lahf
or
aad
dec
pushf
cmp
mov
adc
cs
mov
aad
dec
mov
neg
mov
cmp
ja
push
pop
xchg
ror
test
adc
and
mov
cwde
xchg
jns
lea
ins
popf
lea
sbb
test
mov
xchg
sti
loopne
jne
push
push
inc
jmp
lahf
pop
push
jmp
fld
xchg
mov
out
and
xor
lahf
or
shl
jno
inc
pusha
sub
xchg
imul
add
xlat
xchg
pop
addr16
pop
movs
sbb
and
cmp
sbb
mov
add
mov
mov
add
cld
(bad)
loopne
int3
push
stos
lahf
popa
add
mov
jns
cs
sub
cmps
ss
adc
mov
lahf
xchg
(bad)
cmp
in
adc
lods
sub
in
leave
adc
push
mov
jecxz
inc
sbb
mov
int
add
sub
mov
sbb
ret
pop
mov
out
inc
add
cmp
pop
popf
and
iret
aad
lahf
movs
fld
cmps
pop
jns
int
(bad)
push
pop
xor
adc
push
add
dec
sbb
ds
push
xor
gs
shl
clc
aas
mov
fs
(bad)
rol
mov
mov
sub
jl
adc
int
sbb
adc
push
mov
jae
in
cmp
imul
jmp
dec
aad
sbb
jl
(bad)
jle
jecxz
es
jmp
fwait
stos
pop
test
and
aas
xchg
lahf
pop
dec
dec
fimul
add
add
jae
invd
test
ret
in
ror
outs
inc
(bad)
imul
xor
fistp
push
aad
gs
push
adc
scas
stos
push
rcr
adc
les
jmp
jno
mov
aaa
stos
fwait
cdq
inc
mov
sbb
ins
lods
inc
xor
xchg
ror
in
std
lahf
add
cmp
les
or
cli
push
sub
outs
xchg
test
in
fadd
loopne
and
mov
push
pop
mov
xor
jl
dec
imul
mov
stos
mov
shl
mov
out
mov
add
xchg
push
mov
add
inc
iret
xlat
cmp
jmp
mov
loop
ja
(bad)
repz
ins
push
xor
jmp
jne
shl
inc
or
(bad)
les
loopne
stc
pushf
iret
cdq
in
sub
adc
inc
jp
sub
and
push
movs
push
iret
or
cmps
pop
test
iret
std
(bad)
mov
fs
sub
add
jmp
(bad)
sbb
pop
mov
(bad)
push
or
fwait
sub
cmp
in
movs
dec
retf
retf
aas
xchg
mov
pop
push
movs
mov
jg
call
sar
jbe
sub
xor
jne
aaa
sub
jbe
add
mov
sub
lea
inc
dec
mov
adc
neg
or
xchg
sub
idiv
inc
jmp
xor
adc
leave
aaa
test
jg
mov
and
fsubr
cmp
mov
std
inc
cmps
aad
test
rcr
leave
ds
daa
movs
dec
push
dec
fs
cld
out
stos
repnz
xchg
(bad)
pusha
mov
jnp
sub
inc
jo
lock
sub
inc
inc
add
push
sub
push
and
mov
imul
repz
or
test
mov
push
push
pop
mov
mov
shl
pop
cwde
add
call
add
movq
loop
fist
cmp
sub
and
out
jmp
(bad)
mov
pop
dec
pushf
pop
addr16
inc
clc
inc
(bad)
loopne
arpl
repz
pop
scas
cmp
pop
cli
dec
rol
repz
xchg
popa
iret
jns
push
pop
fst
jo
pop
out
push
fidivr
int3
shl
ds
(bad)
sub
mov
outs
mul
mov
xchg
or
outs
or
scas
jg
add
jnp
adc
sub
cmp
pop
loope
pop
jae
lahf
xchg
jns
add
inc
add
sub
mov
push
jge
jmp
xchg
shl
mov
and
or
mov
aas
jns
dec
jmp
sbb
push
lds
leave
vmptrst
pop
mov
daa
or
inc
stos
ror
ins
adc
push
sti
xchg
retf
pop
add
fisttp
cs
call
iret
xor
ret
das
dec
push
push
sub
sub
or
arpl
les
and
(bad)
mov
out
mov
pop
sahf
or
cmp
imul
push
out
push
sub
sub
inc
mov
xchg
sbb
and
retf
(bad)
lods
sub
dec
out
mov
dec
fwait
cmc
cdq
in
shl
mov
loop
sub
in
xor
jmp
sub
ret
hlt
jle
cmp
and
lds
push
xchg
mov
push
push
imul
call
test
outs
daa
out
(bad)
xor
pop
call
pop
add
pop
cdq
or
push
icebp
stos
adc
cmps
mov
adc
sbb
mov
mov
xchg
loope
inc
ins
fsubr
mov
jge
and
lock
imul
movs
adc
push
or
inc
pushf
js
dec
xchg
stos
leave
sub
cmp
test
nop
mov
aas
mov
js
dec
jle
(bad)
nop
cmp
outs
sbb
pop
stc
(bad)
loopne
and
and
es
call
push
jle
outs
xchg
sub
hlt
mov
in
lock
mov
iret
xchg
xchg
stos
mov
ins
mul
cmp
out
or
sar
fldcw
inc
pop
in
pop
jae
sub
or
inc
jb
stc
dec
cmp
inc
mov
adc
popa
xor
cli
jmp
shr
and
in
stc
lahf
pop
daa
mov
(bad)
repnz
xchg
pop
jb
call
aam
call
or
jge
cmpxchg
fwait
cmps
dec
push
out
pop
cwde
mov
ins
adc
cmp
lahf
cmp
jbe
adc
data16
sti
sub
jbe
xor
push
mov
mov
inc
jo
jb
mov
ins
lods
imul
jae
clc
ins
gs
cs
jp
test
es
mov
lea
mov
mov
jl
mov
xchg
dec
adc
es
cmp
ficom
test
xchg
call
lods
pop
jno
cmp
es
popa
fcom
in
jge
mov
xlat
mov
and
imul
lea
movd
xor
popf
add
sbb
adc
and
mov
sub
and
sub
mov
arpl
sbb
dec
jae
adc
data16
xchg
jbe
pushf
loopne
into
jbe
ins
jle
push
xchg
cmps
add
mov
pop
in
push
sub
sbb
aas
cld
into
xchg
and
jb
ror
iret
gs
pop
inc
fs
stos
out
cwde
dec
pop
jle
dec
shl
sbb
xchg
cld
sub
cmp
jne
inc
cmps
inc
sub
outs
mov
or
addr16
adc
jno
and
rcr
and
ss
mov
push
int
icebp
out
xchg
xchg
(bad)
retf
push
arpl
cmp
sub
inc
js
out
scas
mov
jmp
sbb
or
inc
ins
(bad)
movs
sbb
mov
dec
ror
movs
(bad)
mov
in
shl
mov
push
ficomp
test
add
mov
fisub
pop
adc
fstp
push
movs
int3
les
ror
popa
xlat
jmp
inc
cwde
shl
inc
jb
add
and
jns
adc
and
jb
shr
push
(bad)
das
test
into
push
jnp
adc
retf
sub
clc
cs
inc
sbb
lea
fnstenv
sbb
push
adc
(bad)
jecxz
dec
lock
ja
push
sub
dec
cmp
or
adc
les
sub
or
adc
adc
add
cmps
jmp
xor
jns
arpl
test
cmp
mov
out
rol
push
inc
pop
ror
test
jmp
mov
imul
sbb
xor
mov
popa
std
xchg
cmp
sub
or
data16
cmc
sbb
fbstp
int3
or
mov
lods
jp
jo
adc
adc
(bad)
mov
stos
pop
loopne
sahf
call
and
inc
jmp
cmps
push
xchg
movs
mov
jmp
xlat
aaa
jmp
cmp
lods
lea
int3
(bad)
push
xor
out
mov
mov
ins
push
stos
jmp
or
bound
lahf
dec
das
inc
mov
xchg
icebp
push
scas
div
neg
add
add
push
cwde
jmp
jg
in
jno
(bad)
mov
aaa
outs
mov
shr
(bad)
sti
(bad)
mov
int3
or
jmp
fwait
inc
sbb
push
xlat
jno
xchg
cmp
out
movs
mov
fs
xor
lods
stos
xor
cmp
push
xchg
xchg
and
rol
cmp
jne
mov
(bad)
push
(bad)
je
stc
jno
cmp
sub
outs
test
sub
push
stos
(bad)
jb
test
mov
mov
ds
adc
je
mov
cmc
leave
adc
neg
sahf
pop
fs
scas
call
push
paddsw
sub
inc
mov
jge
fnstcw
and
mov
int
push
std
fst
aad
rcr
test
mov
jp
and
fist
and
arpl
cwde
fisttp
dec
adc
out
or
add
inc
sub
icebp
leave
outs
or
and
dec
imul
dec
es
test
sub
out
pushf
int3
mov
cmp
daa
xchg
push
cmc
aaa
mov
pop
jge
xor
sub
mov
xor
xchg
jo
je
mov
add
or
popf
test
mov
aam
sbb
(bad)
dec
test
pop
or
(bad)
movs
mov
sbb
jnp
cmp
xchg
popa
aas
jmp
add
add
adc
bound
pop
scas
xor
cmp
xchg
push
scas
or
repnz
repz
cs
push
push
inc
fild
or
popf
dec
cmp
into
push
mov
mov
out
js
dec
addr16
cmp
loopne
dec
mov
dec
sub
sbb
shl
pop
xlat
ss
aam
mov
hlt
push
mov
push
outs
inc
jns
jp
jmp
inc
jb
mov
nop
ret
ss
pop
pop
jmp
test
sbb
xchg
jo
sbb
mov
cmp
sahf
and
xor
mov
popf
mov
cld
scas
aaa
dec
xchg
dec
adc
mov
gs
(bad)
xor
xchg
pop
xor
movs
ss
mov
pop
adc
aas
repz
ja
sub
cmp
retf
call
xchg
sub
arpl
lods
(bad)
xlat
fistp
pop
sbb
dec
call
push
sub
jno
imul
and
sbb
ret
hlt
fsub
or
push
(bad)
movs
into
xor
ret
dec
lds
(bad)
adc
and
mov
(bad)
pop
xor
ret
push
add
adc
dec
dec
add
add
mov
scas
shl
in
rcr
add
push
xchg
addr16
push
jae
add
rcl
pop
jae
arpl
dec
iret
xor
(bad)
xor
leave
mov
and
retf
inc
mov
cdq
push
pop
xchg
sub
lea
pop
mov
inc
dec
cmc
jmp
mov
lahf
bound
xchg
pop
ret
xor
and
fiadd
pop
stos
repnz
cmp
ror
jnp
imul
xchg
pop
imul
add
cmp
adc
mov
shr
and
jmp
push
mov
(bad)
sbb
retf
nop
repnz
mov
xor
xchg
jnp
int
or
jmp
aaa
lock
mov
in
jbe
or
dec
rcl
pushf
dec
mov
test
adc
xor
jnp
into
pop
xor
mov
cli
sub
add
loop
arpl
cmp
push
fidivr
bnd
mov
sub
out
sub
pop
leave
pusha
retf
movs
das
sub
fbstp
in
je
mov
pop
push
lods
and
mov
jo
int3
xchg
pop
mov
test
test
add
fisub
pop
cdq
pop
sub
clc
leave
xor
push
mov
repz
outs
aam
aad
jmp
pop
mov
sub
push
pop
jmp
mov
and
int
fld
inc
gs
imul
loope
jns
jecxz
bound
xor
out
jae
or
dec
add
inc
repz
shl
int3
lahf
jne
and
inc
outs
sbb
push
gs
xchg
pop
pushf
out
fmul
or
xchg
dec
es
and
push
cdq
adc
adc
inc
xchg
sbb
aam
call
mov
pop
ret
mov
daa
test
sbb
pushf
sub
adc
fwait
retf
ins
sbb
jo
add
and
inc
retf
leave
(bad)
jge
jl
cmp
out
movs
loop
xchg
jmp
repnz
adc
mov
(bad)
mov
aam
in
push
ror
aam
adc
iret
lea
rol
or
or
push
lods
or
jle
es
(bad)
ret
push
lods
hlt
push
sbb
sahf
pop
adc
iret
clc
scas
rcr
lods
adc
sti
or
arpl
mov
fucomp
jl
or
imul
dec
(bad)
and
jle
bound
mov
inc
mov
fsub
mov
cwde
imul
cmp
mov
xchg
xchg
sbb
or
cli
mov
imul
cdq
adc
lahf
and
add
mov
fsubrp
sbb
xchg
dec
pop
ja
fcomp
jmp
pop
fisttp
or
sahf
and
push
aaa
ret
mov
mov
lahf
jecxz
xor
mov
shufps
js
scas
cmc
das
inc
push
btc
int
rcl
mov
movs
xchg
outs
pop
std
mov
cmps
shl
xor
or
loope
adc
lock
cld
mov
jecxz
outs
movs
imul
clc
pushf
leave
xchg
and
add
fdivr
hlt
sub
sbb
inc
repz
mov
and
retf
add
outs
sahf
scas
push
fcomp
dec
mov
popa
jecxz
sbb
(bad)
shl
data16
ins
mov
sbb
lods
lock
dec
add
pop
out
mov
retf
mov
rol
xor
or
or
xchg
movs
and
stos
dec
cmp
cmp
mov
or
iret
fcomp
mov
mov
xor
mov
(bad)
mov
pop
cmps
adc
cwde
lea
sbb
pop
dec
mov
cmc
add
fcomp
mov
not
movs
cmp
sbb
or
dec
adc
out
mov
out
enter
inc
fnstsw
out
iret
pop
push
inc
addr16
sub
xchg
dec
lods
push
mov
cmp
xchg
stos
bnd
(bad)
fcom
cwde
(bad)
adc
inc
mov
fcmovnb
pop
or
xchg
add
fdiv
movs
jno
pop
dec
mov
and
loop
call
(bad)
dec
cmp
push
cmps
call
call
ins
scas
jnp
mov
sub
stos
sub
and
jmp
add
cmp
jnp
push
shl
jge
sbb
sbb
pop
jne
add
shr
into
dec
stc
add
mov
push
add
sbb
out
dec
and
(bad)
mov
xchg
sahf
cmp
cmps
lds
inc
xchg
aaa
push
stos
or
dec
push
loope
mov
(bad)
(bad)
jl
(bad)
add
xchg
push
or
mov
sahf
data16
mov
or
inc
xor
jns
int
dec
movs
test
mov
inc
dec
or
adc
sbb
add
push
fs
pop
pop
out
inc
mov
lds
xchg
scas
dec
sub
push
gs
mov
mov
mov
and
jno
lods
mov
adc
or
leave
stc
xor
mov
retf
mov
mov
mov
pop
in
je
xchg
sbb
dec
fnstsw
add
xor
movups
icebp
shl
and
or
mov
popf
stc
ret
cmp
ins
jg
lods
dec
dec
hlt
adc
adc
jns
or
xchg
mov
lea
push
int
pop
cmp
dec
xchg
outs
sbb
repnz
sub
lock
inc
mov
adc
mov
(bad)
jp
mov
dec
mov
mov
fcmovnb
test
scas
inc
out
xor
and
ins
jno
lahf
loope
adc
mov
push
mov
xchg
and
sbb
push
sbb
xor
mov
or
jo
jbe
xchg
lods
adc
jmp
sar
outs
cmp
clc
xchg
push
mov
shl
vsubps
xchg
fbstp
movs
sbb
aaa
xchg
cmp
xchg
and
xchg
sub
mov
shr
(bad)
fcomp
pop
nop
leave
xor
fisub
dec
cmp
lock
pop
pop
(bad)
pop
fmul
fidiv
movs
push
aas
jge
aas
rcr
cld
imul
out
mov
sbb
(bad)
jl
sub
in
adc
mov
xor
stos
push
stc
push
mov
sbb
dec
pop
fimul
sbb
pop
popf
or
bts
jae
xor
stc
sahf
sub
dec
xor
es
into
xchg
cmp
dec
fwait
and
iret
je
jmp
jns
mov
xchg
pop
mov
jmp
stos
push
repz
aaa
or
inc
fstp
or
xlat
inc
ret
std
xor
aas
pop
lds
mov
jo
sti
inc
cmp
imul
in
mov
or
clc
std
dec
sbb
xchg
dec
movs
inc
dec
fimul
nop
pop
lds
fimul
cmp
into
cld
movs
push
dec
popa
not
xchg
fistp
add
push
add
mov
adc
xor
inc
jecxz
(bad)
adc
es
adc
xor
jo
cli
cs
int3
add
cmp
cmp
dec
adc
cmc
or
pop
sub
mov
mov
mov
cmps
fnclex
dec
lods
imul
cmps
enter
xchg
mov
pop
push
dec
lahf
dec
(bad)
iret
adc
and
push
xchg
fcom
adc
mov
xchg
out
xchg
daa
mov
or
mov
inc
nop
and
mov
pop
xadd
pop
inc
mov
or
mov
fbstp
js
cli
in
loope
sar
dec
inc
pop
inc
scas
pop
cmp
in
and
inc
daa
adc
cli
cwde
fsub
sahf
movs
movs
or
test
push
loopne
adc
push
outs
pusha
adc
push
adc
dec
int
xor
iret
mov
hlt
push
mov
clc
mov
adc
or
dec
mov
je
in
jmp
nop
dec
and
push
shl
lahf
add
fistp
push
push
jnp
jmp
xchg
jmp
dec
pushf
dec
movs
pop
push
pop
sub
dec
xchg
dec
xor
mov
add
sub
inc
or
jne
adc
repnz
ret
loopne
and
movs
xchg
add
sbb
push
mov
dec
idiv
in
jge
sub
cmps
aas
jb
repnz
loope
adc
mov
xchg
xlat
push
mov
pop
xor
or
push
pavgw
loope
xlat
fnstenv
(bad)
cmc
xchg
fcom
pop
xor
mov
push
fisttp
inc
adc
aaa
jp
ret
xchg
dec
mov
jnp
scas
js
lods
sbb
and
int
popa
mov
push
mov
mov
cmovs
xor
push
jne
retf
pop
xchg
xlat
xor
jb
push
rcr
lahf
lods
mov
fisubr
ret
repnz
sar
(bad)
in
add
xchg
jg
push
xchg
movs
cld
xchg
stc
int3
lock
test
jns
inc
cmc
inc
add
add
cwde
not
aaa
fnstenv
(bad)
pop
lods
inc
push
push
jmp
outs
and
adc
sbb
lods
mov
push
popf
xor
xor
jecxz
rol
stos
jge
and
adc
imul
dec
inc
pop
nop
push
sahf
mov
push
cs
dec
inc
inc
out
and
adc
aam
and
sbb
sbb
in
jno
cmc
mov
into
fisttp
mov
add
test
call
xor
aas
test
or
lds
and
jg
add
cmp
imul
adc
mov
and
mov
test
stos
pop
sbb
push
and
and
std
lea
inc
outs
push
or
loopne
add
gs
adc
xor
xchg
jmp
jne
imul
lock
xchg
setge
mov
es
int
and
les
hlt
dec
lea
mov
in
adc
(bad)
pop
push
shl
mov
mov
mov
cmp
push
ret
arpl
fsubrp
dec
cmps
stos
bound
lock
mov
fs
xchg
mov
dec
jmp
or
push
pop
push
sub
int
daa
push
inc
jg
jg
cs
inc
fmul
jge
push
call
inc
jno
fwait
sbb
shl
icebp
and
rcl
arpl
mov
lahf
movs
stc
xchg
add
jg
adc
pop
mov
popa
(bad)
aam
push
adc
inc
fmul
mov
inc
fs
sub
mov
jne
in
sbb
pushf
(bad)
mul
sub
pop
mov
push
stc
xchg
mov
(bad)
xor
mov
das
mov
(bad)
jo
sti
(bad)
add
pop
mov
push
cmc
test
cmp
int
mov
push
mov
inc
cwde
sti
xchg
movs
jl
add
icebp
test
sub
jo
arpl
jb
cmc
clc
push
cs
nop
xchg
repnz
outs
stc
xchg
inc
or
push
dec
mov
das
ficomp
pop
or
mov
call
sbb
cmp
fs
ret
(bad)
jmp
adc
sbb
and
mov
call
test
(bad)
jp
ins
push
int
int
hlt
xchg
iret
in
rcl
push
mov
jl
call
mov
shr
cmp
sar
jge
or
ficomp
jmp
xchg
xchg
lds
inc
sbb
pop
pop
jge
cmc
mov
and
xchg
repnz
int3
sub
mov
xor
mov
das
cld
inc
mov
js
aaa
mov
mov
jmp
and
mov
inc
arpl
cli
jns
sub
pop
pusha
fiadd
fsubr
and
pop
or
test
mov
out
jmp
or
sbb
int
mov
out
jmp
xchg
pop
imul
(bad)
bnd
test
test
push
jmp
and
sbb
fs
inc
pusha
adc
cmps
test
jmp
cdq
call
adc
outs
aas
push
lea
loopne
call
shl
fidivr
mov
test
call
xchg
cmp
mov
ds
or
mul
pop
xchg
add
fst
loop
lea
jge
repz
daa
pop
movups
or
out
jne
in
push
mov
shr
call
add
lahf
pop
and
mov
in
cmp
or
push
aam
pop
div
add
pop
xchg
popf
js
stc
xchg
add
cmps
mov
pop
sbb
xor
cmc
cdq
ret
cmp
out
adc
xor
jb
inc
mov
mov
xor
movs
mov
pop
adc
ret
adc
xchg
push
aaa
sub
mov
mov
vdivpd
push
mov
and
cmp
sub
xchg
mov
add
cmp
mov
sbb
dec
mov
push
jno
shr
es
gs
sbb
xor
mov
push
enter
popa
ins
shl
aaa
cli
retf
adc
mov
push
xor
lock
and
sub
push
cmc
adc
add
push
xchg
jl
inc
pop
dec
fwait
cmp
cmp
test
xchg
cmp
mov
jmp
push
and
inc
inc
iret
xor
es
ret
test
or
mov
test
xor
stos
(bad)
shr
fmul
sub
push
out
into
jbe
add
pushf
es
movs
push
popf
xor
rol
movs
daa
jno
je
dec
pop
dec
clc
in
aas
arpl
neg
(bad)
fisttp
cli
xlat
or
fild
mov
mov
je
nop
stc
cli
leave
outs
jns
leave
xchg
loopne
mov
and
fwait
or
ficom
movs
leave
jecxz
dec
rcl
ror
jnp
jp
rcl
mov
jmp
(bad)
pop
mov
or
inc
sbb
push
cmp
or
mov
in
xchg
fisubr
cld
xchg
or
mov
fwait
jge
sbb
adc
mov
cmp
sub
sub
stos
xchg
sub
mov
(bad)
or
and
add
mov
arpl
mov
cmp
outs
dec
mov
jnp
inc
jle
mov
xor
aad
jb
inc
inc
test
add
push
sar
xchg
cmp
test
in
mov
mov
pop
movntq
out
push
and
cmc
gs
fwait
out
push
out
cmp
xlat
mov
rol
(bad)
mov
add
jmp
aad
out
cmps
retf
inc
cli
leave
pop
mov
adc
add
or
std
mov
and
push
adc
mov
add
jbe
pop
scas
or
xchg
bound
lods
mov
mov
fsub
mov
cmp
mov
das
and
in
mov
inc
add
mov
pop
or
mov
sub
in
sbb
out
jecxz
inc
out
fcmovbe
fdiv
and
jb
pop
loop
push
repz
jge
ds
xchg
mov
mov
shr
cmp
and
imul
stos
jecxz
das
or
fs
adc
and
pop
push
dec
mov
push
not
out
retf
jb
fsubr
jo
and
mov
ins
loope
daa
dec
sub
aaa
call
pop
imul
cmps
sbb
xchg
sbb
out
lods
cmp
retf
lods
scas
rol
inc
es
mov
iret
pop
les
push
cmp
xchg
popa
cmps
sbb
icebp
and
fcom
les
jmp
dec
cli
out
enter
stc
add
icebp
jle
push
push
or
lea
fwait
dec
daa
pop
jge
inc
inc
ret
fnstenv
dec
sar
shr
lods
repz
xor
or
mov
sbb
pop
mov
cwde
jp
jge
das
sbb
(bad)
adc
or
in
add
mov
pop
pop
jb
hlt
cmp
mov
adc
mov
stos
sub
mov
ret
les
push
jp
enter
jp
sub
sbb
in
cmp
out
sbb
in
and
ret
mov
adc
sbb
data16
rol
mov
stos
pushf
div
fidivr
test
(bad)
aam
push
cmp
out
push
rol
data16
xchg
sbb
cdq
popa
sahf
push
test
mov
xchg
add
sub
gs
pop
pop
pop
or
cmps
retf
sbb
mov
int3
nop
ja
dec
or
ds
fidivr
xchg
out
mov
leave
xchg
mov
sub
add
data16
das
xlat
ss
shl
bound
dec
pushf
mov
xor
jne
dec
push
repz
jo
dec
mov
sbb
repnz
dec
loop
jg
ins
sub
outs
test
leave
sbb
xor
jg
neg
jb
fs
mov
and
inc
mov
pop
push
sbb
ficom
in
push
add
mov
aaa
sbb
xchg
das
mov
mov
lods
repnz
gs
test
fldl2t
sub
lds
fcmovb
ffree
sub
mov
jmp
xchg
and
mov
and
jp
jle
pushf
sbb
mov
jecxz
lock
jle
jmpw
push
je
cdq
(bad)
int3
mov
adc
outs
movs
fst
ss
hlt
ins
leave
scas
and
jb
mov
cdq
lock
inc
test
push
add
mov
aaa
or
ficom
and
sbb
jno
mov
enter
add
pop
mov
xchg
xchg
leave
mov
cmps
push
ds
mov
addr16
mov
fs
and
and
push
repnz
arpl
neg
out
cmp
xor
pop
sub
xor
inc
mov
(bad)
idiv
bound
mov
pop
mov
cld
mov
in
sbb
pop
mov
pcmpgtd
call
cmps
mov
aaa
cmps
sbb
jo
and
mov
mov
xor
jne
jb
sbb
dec
or
mov
sahf
std
adc
sub
inc
ret
mov
adc
iret
shr
jnp
pusha
loop
inc
cmp
in
movs
jnp
cdq
inc
xchg
fs
test
ror
mov
push
leave
xchg
dec
es
mov
inc
inc
add
sub
or
adc
imul
push
inc
cmp
or
jb
setae
sub
hlt
repz
cmp
bound
(bad)
lods
aad
jb
test
jg
push
ja
add
dec
cmp
retf
jae
inc
xchg
retf
jae
adc
stos
js
out
inc
scas
adc
pop
xchg
sbb
xlat
dec
jp
jns
mov
fnstsw
jno
cmp
in
inc
and
fnsave
js
pop
push
lds
neg
imul
imul
ds
adc
mov
pop
push
cmp
shl
out
hlt
scas
icebp
xor
or
ror
(bad)
fcomp
sub
repnz
push
and
loop
daa
mov
push
imul
xchg
lods
adc
add
jl
pushf
inc
movs
or
add
ds
idiv
pusha
add
or
adc
dec
fisub
shl
retf
nop
scas
cmp
enter
cmc
jmp
or
loop
dec
and
jle
stos
mov
adc
add
loopne
push
(bad)
jnp
movs
les
mov
daa
and
mov
and
fmul
mov
adc
adc
cli
push
js
(bad)
jmp
dec
xor
je
mov
fwait
jmp
pop
popf
neg
call
arpl
sbb
rcr
inc
add
xchg
jecxz
mov
sub
stos
sbb
and
loop
out
out
(bad)
cld
sub
mov
stc
repz
stos
div
or
pop
ja
inc
(bad)
mov
add
pop
xchg
icebp
ret
adc
sbb
mov
clc
xor
mov
mov
shl
cmps
fcomp
jb
pop
jmp
dec
or
imul
xor
data16
in
scas
cmp
jle
mov
pop
shl
push
popa
not
cmp
mov
addr16
mov
fmul
sbb
in
and
dec
add
out
(bad)
push
xor
and
xchg
pop
mov
and
sbb
pop
and
mov
add
loop
gs
in
ins
dec
mov
adc
cdq
jg
cmp
mov
jecxz
dec
push
sub
xchg
and
outs
mov
shr
and
adc
xor
add
push
mov
and
test
sti
push
ss
jmp
popa
js
mov
and
(bad)
loopne
mov
sbb
dec
call
scas
leave
sbb
repz
retf
stos
adc
pop
mov
pop
call
aad
cmp
mov
pop
mov
cmp
sti
push
and
ins
adc
jmp
sbb
fs
out
ins
pop
mov
loopne
mov
and
dec
fst
ins
xchg
pop
lahf
mov
add
pop
lods
imul
loope
xchg
add
sub
in
cld
add
fcom
or
outs
test
jmp
ins
je
les
or
mov
add
dec
in
xor
push
inc
dec
pop
mov
cdq
in
sbb
inc
mov
xchg
pushf
mov
imul
ret
mov
add
movs
cs
add
jp
pop
sbb
or
sbb
or
xchg
sahf
dec
xor
hlt
push
aaa
dec
fbld
call
jecxz
mov
(bad)
jbe
xor
ret
cmc
jbe
push
inc
pop
mov
sub
adc
in
xchg
in
jmp
and
addr16
jmp
outs
idiv
xor
imul
inc
jo
dec
repz
out
xor
adc
fimul
lahf
cli
sti
dec
test
fdivr
out
cdq
js
mov
and
xor
cmps
adc
(bad)
mov
mov
(bad)
mov
loope
out
push
clc
or
or
icebp
loope
fidiv
mov
fst
jo
sub
mov
dec
aas
pop
aam
test
nop
(bad)
stos
push
push
inc
cdq
ja
or
pop
ss
dec
movs
ror
or
push
push
jge
fadd
xchg
jp
dec
add
sar
daa
cmp
test
push
jge
call
je
outs
nop
sub
xchg
push
cmp
sbb
hlt
cmps
cmp
push
pop
jbe
adc
out
jg
inc
sbb
push
pop
ficomp
cwde
call
mov
inc
in
add
stc
adc
das
loope
dec
fistp
out
test
sub
inc
xor
and
jo
call
fsub
std
in
shr
outs
dec
adc
or
push
push
clc
aas
pop
in
add
mov
push
cmp
pop
nop
addr16
jmp
ret
stc
push
xchg
lods
jbe
inc
enter
div
movs
inc
cmp
or
adc
push
scas
mov
cmc
mov
mov
xor
sbb
and
mov
xlat
mov
mov
mov
sub
ins
loop
mov
jb
jno
cmp
in
xor
jp
or
in
je
mov
bnd
sub
or
cli
aad
add
fsub
add
add
ss
out
cmp
paddusw
mov
add
pop
lods
jo
and
bound
push
mov
fnsave
lea
jno
fsubr
jg
clc
not
mov
stos
lods
xor
and
rcl
jmp
lds
ucomiss
pop
popa
(bad)
stos
sub
xchg
fmul
int
mov
(bad)
dec
push
ficom
adc
unpcklps
fldcw
addr16
int
mov
call
test
pop
push
xchg
mov
cdq
push
mov
not
or
ja
outs
mov
push
stos
pop
daa
mov
mov
hlt
jecxz
(bad)
hlt
aaa
nop
or
data16
mov
in
mov
add
cld
data16
shr
sub
aas
push
jge
mov
jmp
and
mov
into
ins
imul
dec
sub
mul
jo
fsubr
push
and
fsubr
adc
mov
sbb
cwde
aaa
xchg
arpl
sub
cld
fisttp
scas
sub
dec
push
btc
add
add
push
popa
out
cmc
call
lods
movs
into
rcr
inc
inc
jl
dec
in
pushf
push
out
fild
push
in
and
scas
inc
in
mov
cmp
movs
jl
jno
mov
movs
xor
stc
lock
cs
inc
mov
push
es
jmp
pop
push
ja
sub
mov
repz
in
cwde
mov
jb
mov
cmps
outs
xchg
aad
sub
cmps
data16
or
ds
mov
mov
dec
repnz
in
fcomp
dec
add
fisubr
xor
sub
retf
(bad)
mov
lods
test
xor
jno
imul
iret
mov
push
das
pushf
out
pcmpgtd
pop
jns
das
xchg
dec
adc
retf
adc
or
pop
out
cmps
pop
or
daa
pop
or
cmc
push
mov
or
ss
shl
xchg
xchg
in
lock
ret
cmp
ret
xor
outs
ins
pop
out
repz
pop
repz
inc
scas
jne
shl
cmp
sti
hlt
and
pushf
pop
(bad)
nop
add
jo
xchg
out
mov
mov
jae
jecxz
sahf
fstp
rcl
mov
and
inc
bound
dec
dec
loop
xchg
mov
test
lds
mov
jne
mov
movs
dec
mov
push
int
aaa
sti
xor
adc
gs
sar
or
ins
fidiv
dec
mov
pusha
inc
mov
mov
mov
sbb
jne
in
outs
shl
cmp
std
test
inc
jno
fs
cwde
adc
out
test
popa
dec
pop
call
jne
stos
shl
push
loop
dec
lds
xchg
fcom
sbb
sar
and
mov
jl
inc
cli
adc
mov
test
mov
sbb
xor
jae
and
and
imul
fs
stc
adc
xor
fwait
cli
or
add
mov
outs
(bad)
jmp
and
xchg
xchg
shl
out
jns
popa
leave
test
fadd
mov
iret
pop
rcr
into
test
fiadd
or
int
mov
dec
mov
inc
push
arpl
or
jecxz
loop
pop
cli
inc
rcl
(bad)
xchg
inc
jle
(bad)
adc
retf
arpl
cdq
adc
retf
dec
pusha
mov
jecxz
mov
stc
push
and
mov
or
(bad)
cld
mov
add
jo
mov
xchg
loope
sysexit
inc
and
addr16
and
pusha
aas
inc
lock
je
xor
xor
jg
sub
pop
jl
shl
dec
cmp
xor
mov
daa
adc
fcmovnu
ds
test
fimul
mov
jl
(bad)
jecxz
jae
scas
mov
cmps
loopne
mov
call
sbb
inc
xchg
enter
in
inc
stc
je
outs
xor
fild
fnstsw
pop
scas
cmp
cmps
sbb
sbb
jp
clc
adc
stos
adc
add
fnstcw
and
inc
jle
repnz
mov
xchg
sub
sub
rcl
out
jns
(bad)
and
shl
mov
mov
adc
inc
mov
pop
mov
adc
stos
test
(bad)
test
test
sub
xchg
mov
arpl
out
dec
adc
hlt
xchg
imul
add
cs
fwait
icebp
pop
ror
dec
inc
jbe
outs
scas
lods
push
push
or
ins
sub
(bad)
xchg
pop
gs
leave
std
jmp
push
leave
pop
cmp
mov
jo
cmp
xor
dec
movs
cmp
and
xchg
adc
dec
or
jmp
cmps
mov
loop
ror
fwait
popa
sub
add
gs
mov
lods
in
loope
stos
in
lods
mov
cmps
cld
inc
push
test
iret
lods
xor
ror
dec
jg
mov
adc
ds
mov
cmp
push
push
jp
mov
adc
daa
and
in
loopne
(bad)
retf
cs
push
sbb
cmp
int
or
push
es
fnstcw
ret
ror
movs
mov
aaa
jecxz
gs
xor
push
push
cmc
sub
xchg
pusha
out
fidivr
mov
jnp
mov
push
hlt
div
push
rcr
or
push
cli
in
inc
and
loop
cmp
aad
imul
adc
in
test
add
mov
gs
push
add
inc
sbb
push
sub
sti
push
mov
xor
lds
mov
mov
fld
mov
dec
call
dec
mov
rcr
pusha
or
and
pop
adc
outs
sub
inc
repnz
call
test
ins
cmc
aad
and
cmps
mov
mov
aam
int
imul
jp
sbb
push
fild
and
jecxz
sub
das
cmp
adc
pmulhw
daa
sub
imul
lods
sub
xlat
fcomp
sar
popf
lahf
jmp
jnp
fs
daa
jg
or
mov
outs
xchg
and
popw
inc
push
or
ss
fisubr
mov
test
push
push
cmps
mov
pop
xchg
stos
shl
aad
dec
jmp
pusha
cld
push
xor
xchg
mov
fcom
jmp
stos
mov
xchg
(bad)
imul
cmps
pop
cmp
js
push
push
add
mov
call
push
lods
xor
mov
add
xor
(bad)
add
addr16
aam
bound
xor
xchg
sub
loop
addr16
jp
cmp
repz
push
dec
adc
or
test
rcr
xor
call
fdivrp
push
aam
ret
test
adc
pop
mov
lock
loopne
lea
jbe
popa
outs
inc
je
cmp
adc
popa
hlt
sbb
inc
inc
lds
cld
cmp
or
xor
jecxz
and
cli
call
add
aas
sbb
(bad)
xchg
enter
cmp
adc
int
and
jbe
dec
test
xchg
and
rol
xchg
in
xor
pushw
sbb
and
inc
test
inc
jno
sub
dec
xchg
in
scas
xchg
inc
add
pop
inc
or
push
sti
sbb
mov
and
sti
and
dec
jno
pop
adc
xor
dec
sub
xchg
(bad)
not
mov
and
or
xlat
xor
dec
jle
inc
sbb
adc
inc
xor
stos
push
push
push
in
rol
cmp
mov
test
mov
popa
adc
gs
fist
xchg
in
cs
mov
adc
or
dec
push
sbb
jmp
mov
jmp
pop
pop
out
ins
fld
cmps
jg
(bad)
mov
pop
add
xchg
push
adc
mov
inc
mov
and
inc
xchg
inc
sbb
fimul
mul
inc
mov
push
in
outs
ffree
mov
mov
mov
(bad)
shl
cmp
xlat
add
dec
(bad)
out
mul
dec
stos
or
or
stos
cld
fwait
and
pop
js
lods
jg
mov
aad
pop
pop
jb
sti
fdivr
cmps
jnp
mov
fldcw
cmp
bound
or
out
pop
sbb
push
mov
cmp
mov
or
or
xor
fisttp
repz
adc
ins
pop
shl
call
xor
test
out
shl
mov
dec
jg
aaa
cmp
mov
mov
test
test
push
jns
mov
jo
jge
jb
loopne
cmp
fcomip
int3
mov
mov
mov
mov
mov
lea
inc
dec
or
aas
mov
jecxz
ja
jmp
sbb
rdmsr
jmp
jg
inc
mov
push
adc
mov
sbb
nop
test
sub
retf
mov
test
xor
scas
scas
inc
dec
mov
sti
xor
pop
xchg
(bad)
fstp
out
pushf
clc
test
sbb
iret
xor
sar
in
jl
loope
jp
xor
sti
jnp
jmp
stc
push
cld
(bad)
jbe
jnp
ror
icebp
mov
loop
out
inc
arpl
hlt
lea
push
int3
int
and
retf
imul
and
scas
mov
std
mov
outs
sahf
shr
hlt
jl
cmps
neg
js
mov
cmp
push
jns
inc
jmp
loopne
outs
dec
stos
push
loopne
mov
or
add
pop
test
push
add
mov
adc
sbb
sahf
mov
fdivr
lea
mov
mov
lds
cmp
pop
enter
mov
jns
xlat
lods
jp
mov
adc
xchg
cmc
sbb
push
adc
jno
sbb
out
sti
ja
rcl
out
aas
bnd
pop
fsubr
mov
sar
cmp
pop
sbb
push
adc
mov
mov
and
or
fwait
and
sub
mov
shl
inc
popa
sbb
rcr
jae
push
cs
pop
jge
pop
inc
(bad)
push
rcr
outs
test
and
(bad)
mov
mov
das
xor
mov
shl
sbb
(bad)
call
test
call
sbb
push
jne
cmp
sub
in
fs
xchg
fwait
lods
jo
ret
pop
mov
cmp
sub
mov
mov
jg
mov
(bad)
pop
sbb
cmp
cmp
nop
mov
mov
mov
stc
stos
inc
cmp
rcr
not
mov
out
jecxz
mov
pop
aas
test
test
mov
mov
xchg
sbb
aas
in
xor
cmps
xchg
mov
popf
adc
mov
and
xchg
inc
jo
cmp
retf
mov
mov
aaa
bound
adc
iret
mov
stc
jp
cmp
push
pop
sub
stos
pop
mov
pop
and
and
add
arpl
mov
test
out
out
jg
jb
sahf
pusha
push
pushf
ins
xlat
dec
inc
cmp
sbb
pop
or
push
pop
push
adc
ret
inc
sti
xor
jnp
adc
xor
mov
fld
cdq
xchg
or
imul
mov
je
cmp
lods
sub
jb
or
(bad)
(bad)
out
sbb
sub
jb
loopne
cwde
jmp
cmp
pop
sar
push
cmps
rcr
xor
pop
aas
lock
push
bnd
mov
(bad)
cld
dec
push
test
ret
aas
xchg
xor
jbe
mov
sbb
lods
and
add
dec
imul
and
xor
adc
repnz
stos
pop
ds
sbb
fldcw
pop
leave
stos
cmp
mov
push
mov
xchg
mov
sbb
fnstsw
xor
jno
add
mov
stos
and
push
pop
pop
adc
adc
cmp
outs
xchg
pop
mov
mov
cld
push
(bad)
jl
xlat
cmp
pop
cwde
hlt
dec
jl
sar
add
das
das
or
shl
repz
or
sar
ret
movs
ret
inc
jl
test
mov
iret
stc
in
xor
daa
out
jnp
(bad)
sub
pop
add
popf
jns
call
dec
sbb
fadd
add
jle
in
push
ror
repz
lock
fldcw
add
sti
fs
lahf
cwde
jg
in
in
bound
inc
shl
cmp
pop
mov
test
jecxz
push
sahf
popa
(bad)
add
icebp
jae
mov
ret
xor
adc
or
cld
dec
cs
movs
xchg
and
sbb
sbb
dec
pop
(bad)
cdq
call
fld1
loop
mov
pusha
fstp
sbb
mov
iret
push
mov
in
jmp
and
out
cmp
adc
xchg
adc
add
aam
or
and
xor
mov
xchg
push
rcr
mov
mov
jle
sbb
push
dec
dec
xchg
iret
inc
xchg
(bad)
xor
in
ficom
repz
push
outs
mov
dec
test
js
fistp
cwde
sub
and
cmp
jno
xchg
and
in
(bad)
jbe
inc
imul
push
js
aas
cli
repz
ds
aam
out
mov
add
sbb
inc
xchg
push
inc
adc
pop
push
pop
int
scas
mov
pmulhuw
loope
movs
dec
and
pop
ffreep
ficom
xchg
sbb
sbb
arpl
mov
sub
xor
sti
jecxz
mov
cmp
jge
shl
clc
sub
mov
cmps
dec
jb
jns
push
dec
inc
stc
sti
ss
scas
loop
cmp
daa
aas
inc
cmp
outs
mov
sbb
jle
into
inc
scas
daa
in
and
add
add
cs
push
and
jmp
xchg
fnstsw
push
int3
sbb
or
xchg
(bad)
jno
pop
lods
ret
push
stos
xor
add
repnz
inc
outs
popf
cwde
cs
imul
jecxz
lods
rcr
test
mov
sbb
shr
xchg
pop
out
mov
jmp
sbb
mov
jae
mov
scas
jmp
repz
pop
jbe
mov
imul
jmp
push
shl
(bad)
loope
(bad)
and
lock
inc
xor
xor
jb
out
jle
adc
je
jle
or
adc
fs
jg
mov
pop
cmp
pop
rol
inc
xor
adc
adc
push
adc
sub
out
aad
cdq
fdivr
nop
ss
add
dec
rcr
pop
test
push
out
jmp
fst
pop
mov
or
and
inc
stos
cdq
(bad)
into
repnz
mov
imul
out
popf
stos
ja
fucomi
call
cmp
in
call
gs
ins
mov
sbb
mov
aad
sub
jbe
sub
add
sub
outs
aam
ins
xlat
(bad)
cmc
and
stos
lock
mov
ret
int3
cmps
push
(bad)
js
sbb
mov
leave
test
cs
or
ror
push
and
inc
dec
cmp
jnp
xor
mov
add
les
or
cwde
cli
add
je
jo
imul
push
cmps
lahf
mov
popf
fstp
sbb
cwde
cmp
add
jbe
dec
jb
mov
or
push
outs
mov
enter
js
or
sub
nop
sub
cmp
shl
jle
sub
scas
stc
add
bound
push
leave
adc
mov
not
xor
xchg
call
fild
jns
xchg
cwde
test
fimul
xchg
sti
jl
mov
push
pop
cs
sub
pop
retf
pushf
or
mov
push
sbb
jp
and
hlt
shr
inc
mov
sub
push
mov
cmp
or
xor
addr16
xor
mov
lods
mov
xchg
jae
in
wrmsr
test
jae
(bad)
aad
in
dec
mov
or
nop
ret
sar
aas
add
mov
jl
data16
sub
ds
div
mov
xchg
fcom
xor
add
test
sbb
cmp
stos
cmp
sub
frstor
test
sbb
inc
push
xchg
retf
sub
in
push
push
and
iret
fcom
fwait
pop
les
mov
xchg
shr
out
adc
jmp
cmp
cld
push
dec
xor
xor
cmps
mov
hlt
cwde
xor
repz
sbb
es
pop
sub
adc
cmp
mov
aad
fisubr
inc
dec
pop
jle
add
cmp
es
movs
arpl
out
mov
hlt
xor
sub
(bad)
fild
lea
xor
aam
fs
pop
xor
fiadd
int3
arpl
push
gs
rcl
ins
sti
ja
push
mov
jle
outs
xor
push
sti
(bad)
xor
push
aad
cmc
push
retf
cmp
add
sbb
repz
fdivr
clc
mov
xchg
push
adc
pop
xchg
out
outs
test
int
lds
cmp
scas
test
call
lods
mov
int3
and
(bad)
jae
mov
mov
adc
adc
mov
mov
ret
cwde
xchg
ret
and
pop
popa
loopne
inc
repnz
jge
mov
jbe
dec
fwait
inc
mov
inc
dec
cs
mov
test
addr16
mov
sub
packsswb
xor
jb
xor
inc
ja
dec
popa
popf
call
test
mov
retf
sub
pop
jns
data16
cmp
arpl
popf
push
movs
adc
(bad)
adc
or
adc
mov
ins
jg
retf
shl
or
sub
adc
lods
mov
mov
cmp
mov
out
sti
push
cwde
enter
das
xor
loope
test
call
or
cs
scas
icebp
adc
clc
or
jp
cmp
mov
jns
dec
inc
out
nop
mov
jmp
inc
sub
and
jae
loope
aas
mov
in
cmp
xor
out
dec
mov
cdq
jne
jnp
test
mov
in
jo
mov
dec
mov
push
mov
xchg
mov
fnstenv
inc
scas
imul
loopne
xchg
xor
imul
lock
cmp
mov
cmp
jmp
xor
xchg
inc
push
cmp
ja
mov
sahf
aaa
test
inc
jmp
cmp
mov
in
ret
hlt
or
add
ds
adc
xchg
xlat
mov
inc
fucom
add
cdq
mov
shl
xchg
mov
out
ds
into
dec
mov
shl
inc
in
xlat
pop
jno
lods
imul
mov
ins
sub
or
sti
ins
sbb
sbb
pop
inc
fst
cmp
mov
add
jnp
cmp
movs
sub
and
xor
(bad)
or
add
cmp
push
push
inc
mov
not
outs
xor
inc
aaa
cwde
push
inc
pop
outs
cmp
shl
fmul
ret
xchg
jae
mov
push
jp
stc
mov
scas
(bad)
in
xchg
(bad)
scas
loopne
xchg
ins
dec
inc
ss
jbe
add
pop
repz
and
mov
retf
jl
mov
inc
nop
jne
out
mov
icebp
clc
or
inc
add
rcl
int
gs
ja
imul
jmp
js
loope
and
push
retf
stc
ins
and
inc
mov
add
adc
aad
jns
cmp
sub
or
xchg
dec
scas
or
push
cmp
pop
jo
call
and
xlat
scas
sti
lods
cld
icebp
aaa
adc
shl
es
cs
pop
test
icebp
adc
stos
pushf
movs
fisttp
xchg
push
cli
outs
mov
ds
loop
mov
nop
adc
jbe
adc
xchg
mov
sbb
icebp
out
sub
add
jmp
pop
movs
sbb
fld
sbb
dec
sbb
or
dec
pop
jle
sbb
mov
dec
adc
mov
add
jp
out
hlt
(bad)
jmp
xor
fwait
pop
lea
or
add
sbb
adc
xrelease
jge
(bad)
sahf
fist
out
int
push
jmp
and
sbb
add
pop
sbb
(bad)
pop
push
outs
scas
push
xchg
ins
cmp
mov
or
lea
jge
cmp
pop
and
imul
mov
clc
fiadd
cmp
cld
loop
sub
js
fistp
or
jg
sub
fiadd
mov
fldlg2
(bad)
mov
mov
or
push
scas
mov
rcl
dec
je
in
sub
jnp
js
rcr
popa
push
dec
imul
cmp
iret
push
sbb
xchg
call
dec
add
inc
jp
sbb
sub
les
pop
xchg
dec
xchg
es
(bad)
jl
xor
fld
pop
shr
scas
pop
sub
and
test
dec
mov
vmread
pop
call
mov
(bad)
stos
ret
push
ss
mov
jmp
sar
push
jmp
push
jmp
or
sbb
rcl
pusha
inc
ins
stos
xchg
sbb
arpl
add
fstp
cmovle
push
pop
dec
(bad)
rcr
mov
xor
stos
mov
push
jmp
outs
xchg
or
hlt
jmp
imul
dec
mov
mov
movs
loope
jmp
int
sahf
call
jae
xchg
loop
mov
dec
xchg
pop
pop
or
call
pushf
mov
rcl
cmp
mov
adc
shl
out
cmps
push
aaa
stos
sub
push
cwde
popf
push
mov
jnp
rep
bndstx
pop
pop
ins
cmp
inc
lods
xchg
aaa
cs
fwait
sub
test
mov
cwde
rol
sbb
mov
add
push
sbb
in
retf
rcr
mov
cdq
test
adc
xor
mov
and
pop
xor
outs
jne
add
inc
fcom
xor
cld
sbb
ret
sub
test
push
mov
inc
rol
xor
jmp
je
jp
lods
push
gs
enter
push
ret
ret
sbb
mov
mov
mov
outs
dec
cld
scas
xchg
push
in
dec
js
mov
cmovno
mov
cmps
mov
(bad)
pop
fcmovbe
inc
inc
pop
and
xchg
call
(bad)
sbb
mov
push
leave
or
movs
or
jb
xor
movntq
inc
int3
int
movs
into
sub
sbb
adc
mov
ds
jge
inc
mov
add
int3
into
stc
adc
push
push
xchg
(bad)
fstp
dec
and
jmp
or
fisttp
xchg
xor
fisubr
xchg
sar
inc
mov
loope
mov
stos
adc
std
leave
aas
retf
jne
inc
dec
fwait
aad
iret
imul
fxch
push
outs
ret
test
sub
dec
push
adc
add
or
jle
aaa
ficom
xchg
daa
or
cmps
inc
test
nop
sbb
int3
test
xor
dec
xor
push
rcl
sar
jae
push
sbb
mov
or
ret
(bad)
pop
push
pop
adc
jb
and
jo
push
mov
xchg
lods
jno
adc
pop
and
call
cmps
stc
fmul
pop
test
pop
in
jmp
dec
cmps
test
cmc
xor
out
or
(bad)
int3
cmp
jp
push
dec
daa
pushf
xor
lods
test
test
mov
mov
ins
fisub
push
loop
cmp
xchg
xor
adc
xchg
imul
push
popf
(bad)
jmp
push
xchg
enter
fnsave
pop
dec
inc
aas
fsubrp
push
sbb
not
push
(bad)
xchg
mov
int
pop
jo
or
dec
cmps
les
fild
push
jno
enter
inc
test
push
xor
popa
pop
jl
les
adc
cmps
outs
mov
dec
cmp
pop
hlt
sub
sahf
inc
(bad)
rcr
in
push
aas
fmul
jne
fild
in
repz
fmulp
mov
or
mov
jne
dec
enter
repnz
jo
xor
test
inc
push
sahf
imul
sar
repnz
out
cmps
retf
gs
ss
dec
and
out
jb
sahf
fsub
icebp
lods
(bad)
mov
mov
loopne
xchg
fidivr
int
jo
inc
add
sar
inc
enter
mov
xchg
push
test
mov
dec
pop
xchg
cwde
out
gs
mov
inc
mov
jne
xchg
push
jg
mov
xor
jnp
(bad)
ins
mov
inc
push
lods
xchg
pop
mov
scas
mov
nop
dec
xor
(bad)
push
jecxz
loope
mov
iret
jecxz
sbb
jb
add
lock
and
xchg
faddp
int3
arpl
and
add
retf
mov
adc
jle
push
clc
outs
scas
or
sbb
loop
js
dec
xchg
sub
addr16
fs
inc
lock
push
push
jmp
fcomp
adc
jmp
call
inc
and
dec
adc
call
daa
cmc
ins
jns
jns
cmp
stos
xchg
inc
pop
ins
cmp
mov
aad
test
jp
inc
mov
cld
and
ins
outs
call
es
cmps
inc
jmp
push
jmp
xor
sahf
and
mov
dec
int3
hlt
cli
sub
push
push
dec
sbb
pop
push
dec
pop
ret
mov
in
add
cmps
outs
and
sahf
and
xchg
stos
cmp
mov
pop
xchg
(bad)
in
ins
rcl
and
cmp
mov
shl
ffreep
enter
dec
or
lods
mov
repz
popa
push
stc
cmp
jbe
(bad)
clc
sbb
add
or
xchg
jo
rol
movs
shl
lds
test
jmp
push
(bad)
push
popf
inc
pop
aam
mov
fsub
dec
out
xor
int3
cmp
sahf
jae
inc
push
jae
push
shr
or
cmc
call
mov
sbb
movs
jmp
dec
js
and
jmp
pop
enter
icebp
fst
mov
(bad)
data16
cdq
stc
inc
ret
jns
hlt
lods
sbb
jl
jo
push
sub
dec
adc
mov
and
adc
jp
outs
sbb
add
ffreep
jno
cmps
xchg
mov
ins
das
mov
int3
aam
adc
pushf
icebp
adc
adc
ins
add
cmp
out
jge
int
ins
add
mov
sub
fcom
xor
xlat
dec
fucomip
mov
sbb
mov
push
inc
iret
fadd
and
adc
and
ds
cs
rcl
imul
fiadd
and
ret
sub
repz
jmp
pop
add
adc
aaa
xchg
add
cmc
or
pop
test
fstp
je
out
adc
add
sbb
or
fwait
aam
mov
mov
shr
lea
fnstsw
xor
push
je
aad
and
jge
jle
adc
loop
sbb
ret
cmc
leave
mul
jo
inc
mov
test
mov
outs
jno
das
punpckhdq
enter
test
jmp
std
leave
movs
popa
into
aaa
lock
inc
sbb
push
add
mov
mov
popa
and
fs
in
call
call
nop
xchg
test
in
jbe
test
xchg
mov
cmp
adc
xor
mov
(bad)
adc
cdq
sub
inc
cmc
arpl
and
out
jae
lahf
mov
mov
lds
pop
in
fwait
jmp
or
(bad)
sub
or
jb
inc
rcr
push
mov
int3
push
iret
or
mov
or
in
mov
sub
loop
sub
pop
loopne
add
js
xchg
daa
dec
outs
mov
leave
adc
ds
xor
lahf
pop
dec
jmp
sub
adc
(bad)
dec
adc
cmp
xchg
aas
xor
test
or
mov
cli
lock
jp
shl
mov
push
das
stc
mov
fwait
mov
hlt
dec
xchg
mov
repnz
mov
sbb
call
in
push
mov
loope
sahf
inc
pop
pop
lds
mov
cmp
cpuid
mov
lods
mov
mov
push
sbb
cmp
pop
les
push
test
call
jne
jmp
scas
dec
les
add
pop
daa
jle
add
punpckhbw
outs
enter
add
fwait
add
fdivr
mov
add
push
shl
push
or
sbb
push
pop
lods
inc
add
test
pusha
aam
nop
or
popa
xchg
sti
add
add
adc
mov
icebp
push
push
sbb
dec
and
jle
jbe
sub
out
test
popf
and
xchg
push
inc
inc
rcr
add
call
shr
js
ss
movs
mov
mov
cwde
shl
mov
inc
dec
sbb
sub
mov
hlt
stc
pusha
test
push
cmps
out
dec
push
jnp
ja
dec
xchg
scas
repz
hlt
pop
pop
pop
xchg
retf
push
cmp
pop
pop
inc
dec
pop
cmp
xchg
mov
jb
rcl
or
mov
adc
cmps
(bad)
cmp
pop
in
jg
scas
add
push
stos
neg
daa
sub
xor
test
lods
(bad)
pushf
jl
ror
add
mov
test
and
lock
pop
cmp
int3
jne
mov
pushf
cmp
cli
adc
jg
mov
jmp
adc
aam
and
loope
xor
push
ss
sub
inc
push
jno
(bad)
das
(bad)
xlat
cmp
out
scas
mov
push
std
or
and
lahf
xor
sub
shl
adc
and
inc
sbb
scas
fs
call
clc
aaa
jmp
push
xor
sahf
shl
fild
in
jo
or
push
mov
fwait
test
jmp
mov
mov
push
jg
loopne
xor
adc
data16
lds
mov
fisttp
retf
push
mul
je
xchg
fidivr
push
mov
addr16
add
add
sub
xor
mov
pop
pop
cmps
xchg
mov
dec
mov
sbb
push
(bad)
pop
(bad)
push
mov
sti
add
das
sub
jnp
dec
pusha
les
lock
sahf
sub
sub
(bad)
pop
push
inc
and
sbb
sbb
adc
sbb
or
daa
imul
push
addr16
xchg
shl
sbb
xchg
fwait
mov
or
sbb
leave
xchg
out
mov
xchg
and
pop
cli
js
mov
add
mov
ds
(bad)
idiv
in
fwait
lods
aam
jns
lahf
in
jmp
mov
sub
aad
mov
push
in
sbb
push
pop
icebp
rcr
(bad)
adc
mov
(bad)
xchg
enter
lock
dec
(bad)
mov
jl
or
scas
dec
pop
mov
adc
data16
jo
mov
fnstenv
push
out
test
js
adc
sbb
fwait
into
mov
pushf
push
daa
ds
stos
scas
out
pop
lds
cwde
ja
pop
xchg
leave
repz
sbb
sbb
test
es
or
xor
and
and
mov
icebp
jg
pop
lods
int
int3
in
xchg
push
mov
sbb
dec
leave
jo
add
jmp
fidiv
mov
inc
lods
jae
jbe
xor
cdq
or
fimul
sbb
(bad)
xor
xor
das
xor
xchg
dec
mov
jmp
and
mov
stos
aam
pop
or
inc
test
daa
test
add
aaa
jb
in
aaa
sar
adc
and
cmp
repz
lea
mov
xchg
inc
cmc
pop
rcl
dec
jae
jno
sub
jle
pusha
jge
out
not
push
jbe
mov
enter
push
sbb
pop
adc
rcr
sub
mov
jmp
sub
and
mov
pop
stos
mov
push
mov
shl
je
inc
movs
fisubr
ror
sub
cmp
jne
pushf
test
push
stc
aam
sub
loop
dec
and
ss
cmps
push
mov
push
xor
jecxz
push
movs
sub
fcomp
shr
inc
idiv
jmp
aam
jmp
outs
jb
push
clc
or
xchg
add
xor
cs
nop
sahf
mov
xor
sub
pop
mov
mov
sbb
enter
arpl
mov
mov
retf
ret
jbe
pop
xchg
ficom
(bad)
div
inc
sti
ror
psrlw
mov
fnsave
cmp
sub
jne
or
push
or
call
test
inc
cdq
mov
loope
cmp
jge
fadd
cmp
cmps
inc
arpl
adc
adc
adc
and
sbb
mov
aas
mov
push
xor
int3
stos
push
(bad)
daa
mov
cli
adc
pop
popf
mov
leave
push
mov
fwait
pop
aam
mov
push
(bad)
push
pop
mov
inc
hlt
xchg
cwde
or
pop
nop
push
aad
xchg
outs
and
hlt
test
ss
retf
inc
retf
mov
cmp
xor
sub
and
and
jb
jp
mov
dec
fdiv
cli
jmp
movs
mov
cmp
inc
sub
push
dec
cmp
xchg
lock
mov
mov
(bad)
push
xor
test
and
inc
addr16
pop
or
adc
pop
mov
mov
cmp
stc
dec
xor
vpcmpeqd
nop
sbb
jne
scas
je
cmp
je
push
mov
inc
push
sbb
(bad)
fild
xchg
into
sbb
ss
pop
sub
mov
xchg
stos
leave
xor
scas
retf
xor
inc
popf
stos
das
mov
adc
inc
mov
jmp
jmp
fld
mov
loop
xor
mov
int
mov
cmps
pop
in
leave
lods
les
fstp
and
xchg
push
in
js
aaa
nop
ds
imul
add
mov
mov
mov
cld
lock
dec
xor
outs
nop
jae
std
test
sbb
aad
mov
cs
jle
and
loope
sbb
push
retf
loopne
xchg
aas
scas
fmul
mov
cs
and
inc
or
cmps
(bad)
icebp
je
(bad)
mov
lahf
xchg
dec
cmp
xchg
xchg
scas
cli
fxch
sbb
pop
pop
jmp
out
inc
xor
pop
js
and
mov
pop
icebp
mov
mov
jg
shl
ss
imul
aad
outs
or
mov
pop
xlat
cmc
test
vpsrad
adc
scas
outs
adc
leave
enter
loopne
cmc
(bad)
hlt
xor
xchg
mov
mov
ja
mov
pop
mov
fst
mov
fistp
adc
in
into
add
jae
in
mov
mov
cmp
(bad)
push
mov
xor
push
mov
pop
jle
std
mov
arpl
cmovo
cmc
xchg
mov
cmp
pusha
loope
imul
les
adc
sbb
enter
rcr
push
je
mov
cmp
ret
adc
(bad)
or
ret
ins
ret
xchg
sub
pop
mov
int3
pop
adc
push
pop
mov
cmp
xchg
and
test
and
cmp
ins
inc
stc
call
aad
stos
add
js
(bad)
imul
xchg
fs
cmp
inc
xchg
loopne
pop
sbb
test
and
div
sub
push
jnp
stos
sbb
cwde
ins
js
mov
push
imul
jbe
cmc
shl
retf
push
repnz
push
fwait
push
out
dec
mov
fist
and
inc
jae
push
cld
cmp
test
out
enter
push
push
call
retf
and
test
adc
les
imul
mov
fisttp
cmp
nop
sbb
adc
test
mov
cld
out
adc
mov
cmp
enter
pushf
popa
in
add
jne
pop
loopne
adc
mov
or
xor
push
sub
and
add
in
inc
fiadd
or
xlat
test
inc
dec
lea
sbb
sbb
mov
adc
cmp
and
stos
std
pop
xchg
mov
dec
adc
push
shr
int
xchg
adc
vpor
mov
xor
add
push
inc
outs
inc
add
setb
xchg
pop
leave
(bad)
retf
sub
fsub
shr
aam
nop
cmc
mov
mov
(bad)
aam
dec
es
jmp
sar
add
fild
xchg
fwait
sub
jns
adc
jmp
ret
bound
sbb
loope
in
out
in
in
mov
enter
inc
and
imul
in
call
loop
bound
dec
xor
out
or
or
pop
inc
std
pop
enter
pushf
dec
push
jle
xchg
add
dec
inc
fdiv
test
hlt
mov
leave
sub
sbb
cmp
cmp
mov
repnz
jmp
in
(bad)
jle
mov
and
jp
inc
mov
cmps
mov
push
push
(bad)
popa
std
fist
rol
call
or
pushf
sar
sahf
lea
add
xchg
jl
jb
or
mov
into
mov
jae
jne
pop
retf
leave
fmul
push
mov
or
iret
xchg
lods
xchg
mov
gs
outs
mov
ins
aas
pop
cmp
add
ins
(bad)
(bad)
pop
popa
dec
xchg
scas
scas
jl
push
jmp
scas
fmul
fnstenv
cmp
sbb
push
pop
jb
xor
stc
out
scas
jns
or
sbb
mov
inc
fld
cwde
retf
sub
test
lods
dec
pop
mov
jne
mov
mov
mov
movs
cmp
sahf
fst
(bad)
ins
fcomp
mov
ds
cwde
fbld
sbb
xchg
and
jle
or
fcomi
jnp
clc
mov
int
lea
(bad)
dec
out
xor
not
mov
mov
(bad)
mov
je
leave
push
jnp
mov
enter
dec
popa
fsub
mov
das
and
inc
in
pop
sub
ja
fst
mov
int
adc
scas
xchg
std
dec
adc
fs
mov
pop
mov
mov
lods
in
xor
or
nop
(bad)
dec
mov
cwde
enter
sub
je
cmp
jne
stc
sub
adc
pusha
pop
cmp
fisub
or
pop
out
jbe
dec
add
and
mov
add
retf
out
push
and
stos
xor
sub
test
xor
push
jg
cmp
and
adc
inc
jae
inc
gs
mov
add
fst
out
icebp
xlat
mov
cmc
ins
add
mov
mov
sbb
imul
dec
fwait
repz
mov
mov
mov
aas
in
int
mov
pop
nop
retf
ror
mov
data16
jo
movs
mov
and
iret
fnstcw
mov
pop
arpl
mov
mov
scas
pop
popa
sub
adc
inc
push
dec
neg
in
jne
call
cli
arpl
loopne
sbb
iret
xor
add
daa
push
in
xor
repnz
or
sbb
in
pusha
add
es
mov
retf
mov
shl
sbb
test
and
aaa
movs
and
in
jbe
call
test
push
jp
rol
xchg
fimul
in
retf
push
cmp
add
mov
mov
pop
in
in
ret
clc
add
daa
popa
add
shl
pop
iret
and
add
ffree
dec
fisubr
ja
inc
mov
fist
add
mov
pop
ins
jecxz
mov
jnp
jle
sbb
adc
(bad)
pop
stos
lahf
ficomp
stc
icebp
xchg
cwde
pusha
mov
imul
adc
jns
pop
movs
add
(bad)
in
ins
js
or
pop
aad
out
mov
(bad)
cmp
bound
aam
pop
icebp
xor
pop
icebp
es
stos
sub
cmps
sahf
mov
call
imul
out
aas
cmp
scas
outs
xor
ins
pop
pop
cmp
in
push
in
in
mov
push
push
push
and
push
je
scas
jmp
mov
adc
mov
fmul
or
pop
inc
popa
jg
imul
inc
mov
es
xor
pop
xlat
pop
ds
inc
dec
aas
rcr
test
js
sub
fcom
sub
leave
out
xor
repz
rcl
psubb
mov
inc
fisub
dec
out
mov
lods
push
pop
clc
(bad)
or
mov
jg
enter
or
xor
push
call
and
cmp
fld
xor
stos
fild
mov
jecxz
leave
bound
or
lods
pop
xchg
mov
outs
jb
sbb
jae
and
jg
idiv
push
imul
mov
pop
stos
xchg
ins
test
jnp
daa
retf
shr
stos
push
dec
xor
xchg
punpckhbw
inc
push
cmp
mov
add
scas
cmp
sub
loope
ss
adc
cmp
std
pop
popa
push
hlt
add
or
hlt
out
cmp
pop
pop
push
mov
dec
inc
test
jmp
dec
daa
cmc
jae
(bad)
cli
mov
bound
mov
xor
es
aaa
jecxz
stos
rol
push
xchg
es
mov
mov
add
cmp
xchg
inc
jno
mov
xchg
add
mov
sub
adc
xor
mov
cmp
rcr
and
jg
mov
adc
jmp
sub
popf
mov
mov
adc
mov
xor
in
shl
frstor
lock
inc
jno
(bad)
cmp
(bad)
repnz
sar
xchg
inc
(bad)
jmp
xor
fcomp
mov
pop
fs
mov
adc
jg
inc
test
mov
jg
out
push
cdq
std
(bad)
push
lds
mov
retf
push
pop
and
leave
inc
cs
add
popa
sar
cmp
lods
add
loopne
das
mov
aas
bound
movs
jmp
mov
xor
mov
pusha
mov
adc
xor
retf
ins
dec
or
xor
dec
sbb
xor
sti
dec
jae
imul
dec
leave
div
aaa
pop
push
cmp
push
retf
pop
das
mov
sub
push
retf
(bad)
or
push
(bad)
mov
in
jb
js
hlt
inc
out
mov
xchg
or
loope
mov
aad
xlat
mov
cwde
xor
push
retf
xchg
push
lods
pop
push
inc
rcl
ja
push
adc
hlt
sub
xlat
sub
ret
jne
fild
xchg
neg
mov
sbb
or
jecxz
pop
pop
sub
and
imul
mov
(bad)
daa
or
rcl
pop
inc
popa
mov
and
icebp
and
mov
sar
xor
ins
or
inc
jo
ja
mov
push
push
fwait
xchg
push
xchg
lods
rcl
fistp
sti
cmps
fisttp
out
outs
inc
int
cmps
dec
and
in
xor
stos
fcomp
(bad)
jb
fs
push
mov
fsubr
and
test
lods
lds
ror
movs
push
dec
sbb
cld
hlt
outs
ins
jnp
adc
aas
ds
inc
test
(bad)
xor
repnz
jmp
jle
arpl
sub
pop
fldenv
adc
(bad)
nop
sub
lods
(bad)
stc
xchg
or
div
ror
fldcw
xchg
retf
mov
(bad)
sub
pmuludq
add
or
out
fdivr
cmp
cmc
push
adc
in
xor
pop
mov
jnp
xchg
test
xor
push
cmp
(bad)
movs
call
pop
in
stos
je
dec
pop
jle
shl
stos
mov
ror
and
test
(bad)
in
xor
mov
sbb
hlt
adc
and
ret
lea
shr
int
bound
mov
pop
cwde
cdq
jle
(bad)
repnz
inc
cld
iret
push
inc
cwde
mov
hlt
shl
rol
inc
es
iret
xor
push
lods
jmp
mov
ds
sbb
adc
test
ja
stos
mov
sbb
and
push
fcomp
into
inc
inc
out
adc
icebp
je
ins
dec
ds
rcl
cmp
gs
pop
and
push
sbb
movnti
lds
mov
stos
loop
movs
push
xchg
xchg
mov
repz
inc
cmp
inc
mov
and
adc
add
aad
mov
hlt
pop
jae
je
test
loope
mov
xchg
(bad)
retf
jb
mov
ss
pop
and
mov
rcl
push
xor
push
retf
outs
or
inc
xchg
push
xchg
jne
and
jl
add
loopne
pop
mov
data16
repnz
mov
iret
rol
xchg
aad
sar
adc
std
mov
cmp
lock
pop
pop
mov
or
rcl
in
adc
outs
fild
ret
xchg
mov
int
fist
push
push
mov
lahf
sbb
cld
adc
adc
mov
xor
ja
loope
(bad)
stos
add
xchg
sar
imul
(bad)
out
pop
inc
ret
cmp
mov
push
inc
in
imul
sbb
push
retf
mov
sbb
mov
arpl
das
xor
sub
push
xor
add
lods
js
or
clc
jge
pop
or
ins
ja
aam
or
inc
cli
cmp
push
sahf
adc
lds
cwde
dec
push
sar
jp
stc
hlt
test
int3
add
pop
and
retf
popa
mov
jae
jmp
test
mov
lods
mov
mov
mov
ficom
add
shl
xchg
and
xlat
inc
mov
ror
dec
(bad)
scas
push
sti
cmp
repz
cmp
jne
push
pop
cdq
pop
out
ins
fs
push
repz
out
dec
(bad)
xor
test
mov
pop
jno
ds
(bad)
scas
fisubr
mov
dec
into
lahf
adc
stos
inc
mov
scas
pop
fcomp
cmp
fneni(8087
outs
in
lahf
jle
lods
aam
jno
rcl
lods
js
jno
jmp
add
xchg
adc
push
mov
shr
ret
test
adc
mov
cmp
je
not
dec
pop
gs
xlat
shr
jbe
lea
mov
inc
push
ja
xchg
and
jecxz
and
sub
stos
mov
and
test
xor
mov
icebp
je
mov
jecxz
pusha
dec
mov
cdq
shl
or
je
jge
pop
repz
(bad)
fidivr
stc
mov
xor
(bad)
pop
inc
enter
sbb
pop
pop
stos
(bad)
pushf
es
xchg
rcl
sbb
adc
mov
inc
pop
xor
dec
dec
repz
jl
in
sub
inc
mov
fnstcw
psraw
cmps
out
sub
movs
sub
(bad)
push
xchg
pcmpgtd
mov
jne
xchg
mov
aas
(bad)
sbb
xchg
dec
(bad)
dec
int3
or
and
cmps
and
iret
jmp
ss
push
(bad)
fnsave
cmp
cld
cli
pop
and
adc
jmp
mov
lods
in
jae
test
clc
jno
mov
mov
and
xchg
arpl
and
repz
jo
retf
sahf
pop
(bad)
fwait
dec
push
dec
imul
in
aam
sar
gs
add
das
inc
rol
sbb
mov
or
jp
xchg
xchg
enter
dec
mov
cld
jecxz
int
bound
dec
cmp
in
jg
jnp
out
sbb
mov
call
scas
sbb
dec
push
sbb
jb
inc
inc
das
jae
fild
mov
pop
int3
xchg
test
mov
js
inc
movs
add
and
lea
cmp
xchg
xchg
dec
std
inc
mov
arpl
jne
and
loopne
jbe
retf
and
sub
out
fstp
mov
cmp
sub
sub
push
sahf
stc
test
xchg
sub
or
cld
push
cmp
scas
mov
fwait
call
mov
push
in
xor
ins
nop
or
ret
sbb
stc
mov
enter
or
inc
in
sbb
mov
cmc
mov
das
cmp
mov
mov
lock
repnz
jmp
out
mov
adc
call
iret
in
sti
pop
add
add
lock
dec
pusha
and
ins
adc
dec
pop
gs
enter
repnz
and
popf
jne
mov
cwde
lahf
or
outs
pop
add
mov
dec
cmc
mov
scas
and
in
xchg
sbb
repz
lock
or
add
and
ins
call
aam
movs
inc
mov
sbb
sub
(bad)
add
dec
ja
fidivr
das
icebp
mov
xchg
aad
aam
jg
push
jg
lock
cmc
je
pushf
mov
dec
fdiv
sub
and
cld
ds
pop
sub
rcl
sub
cmp
out
loope
(bad)
push
jo
dec
lahf
pop
pop
(bad)
int3
out
repnz
jnp
dec
pop
nop
add
push
xchg
pop
cs
mov
fwait
xchg
leave
mov
xor
mov
push
clc
movs
mov
jle
ins
je
addr16
out
add
bound
or
and
cmps
in
loope
sysret
add
hlt
mov
add
int
dec
fst
jg
sub
jne
out
pop
sbb
jbe
add
mov
xchg
clc
rcl
fbstp
enter
adc
cs
sbb
mov
cmp
ss
xor
inc
mov
fild
inc
pop
pop
or
xlat
repnz
ja
scas
in
loope
inc
int
cmp
mov
mov
imul
bound
(bad)
cli
mov
hlt
and
pusha
xchg
jo
ins
xor
retf
leave
and
leave
xchg
pop
sbb
and
push
(bad)
loopne
neg
push
std
daa
test
mov
adc
call
dec
mov
in
(bad)
sub
mov
add
sar
add
hlt
mov
test
and
mov
pop
pushf
mov
adc
jle
(bad)
fadd
sub
jmp
mov
adc
xlat
test
xchg
movs
adc
bound
or
and
cmps
push
inc
retf
popf
xor
aad
int
(bad)
enter
inc
mov
xor
jg
dec
mov
push
stos
cwde
cmp
sbb
fmul
push
(bad)
fld
jnp
(bad)
loop
xlat
dec
or
lahf
aad
pop
mov
cmp
xchg
(bad)
fdiv
fst
push
jge
dec
outs
scas
add
je
cmp
adc
push
in
cmp
pop
test
jp
not
mov
pop
cmp
enter
in
jo
jo
call
in
mov
inc
push
inc
fcomi
jecxz
sbb
aaa
or
clc
adc
push
adc
test
adc
pop
test
jns
rol
and
ja
or
xchg
mov
mov
retf
fisttp
or
arpl
pop
shl
aas
inc
les
adc
movs
inc
add
pop
dec
push
xchg
add
mov
mov
dec
or
cli
sahf
(bad)
jae
inc
stos
add
dec
std
das
neg
push
mul
xor
dec
inc
jbe
fild
push
stos
dec
call
sbb
inc
push
xor
xor
ret
out
xchg
popa
ror
rol
shl
inc
or
xor
jg
push
pop
test
ret
fsub
mov
xchg
js
cld
push
xor
lock
cs
add
xlat
dec
out
cmps
mov
stos
out
pop
xor
and
dec
sub
add
int
dec
mov
pop
sbb
pop
lea
test
fnstenv
(bad)
bnd
dec
sub
push
sub
mov
into
cmps
mov
adc
clc
neg
mov
cmp
pop
pcmpeqd
and
adc
and
aam
mov
sub
cmps
retf
je
daa
(bad)
shr
ret
mov
ins
pop
push
dec
mov
(bad)
cld
ret
fist
dec
mov
jne
sub
mov
loopne
test
or
add
ja
pushf
ds
retf
jle
lahf
and
dec
stos
je
stc
xchg
push
dec
les
or
pop
stos
xchg
retf
xchg
dec
dec
dec
add
pop
aam
mov
arpl
out
and
icebp
jns
arpl
add
stc
sahf
(bad)
stos
hlt
jb
dec
ret
dec
jg
(bad)
sub
mov
or
fisttp
lods
es
retf
add
inc
push
test
inc
(bad)
nop
xor
mov
sbb
rol
add
out
adc
pusha
bound
cmp
aas
xor
xchg
icebp
fld
xchg
mov
sbb
shr
in
daa
mov
ja
pop
xor
pop
xor
out
mov
sahf
or
repz
out
pop
outs
inc
and
test
inc
call
sub
jp
fstp
stc
cmps
pop
aaa
mov
pop
out
push
(bad)
loope
mov
or
mov
jns
lock
mov
sub
and
sahf
add
ret
mov
and
pop
jmp
mov
push
and
fwait
sub
sbb
enter
scas
daa
sar
mov
pop
jge
stos
add
pop
xchg
or
in
adc
sub
stc
aad
gs
fidiv
out
cmps
push
imul
cs
inc
pop
mov
dec
jle
lods
or
xchg
jmp
imul
pop
rol
dec
cmp
mov
stos
mov
mov
loopne
ss
mov
mov
popa
mov
fidiv
adc
push
mov
mov
lds
loopne
es
cmc
fucomi
out
ja
ins
int3
ins
jne
rol
inc
cmp
in
adc
pop
lea
jmp
push
data16
out
jnp
jnp
jo
lods
sbb
(bad)
ficomp
push
cmp
or
or
jno
sub
(bad)
test
cli
imul
push
fidivr
cmp
ror
mov
jg
cld
(bad)
jp
ror
(bad)
sub
call
or
cld
xchg
inc
cmp
xchg
push
sbb
int
out
cmp
or
shr
add
in
sti
cmp
ja
push
push
push
repnz
add
lds
in
xor
mov
or
add
mov
iret
sub
test
xchg
sar
push
ror
adc
sub
push
not
push
test
xchg
loopne
add
push
cmp
pop
dec
popa
mov
add
xchg
fwait
(bad)
pop
xchg
shr
(bad)
shr
add
dec
das
mov
xchg
jb
or
mov
mov
push
cmp
out
adc
es
push
lahf
mov
js
aam
xchg
(bad)
push
mov
lds
and
adc
add
sub
stc
mov
mov
lods
jne
sahf
daa
scas
sub
je
(bad)
js
cdq
xor
jle
scas
mov
daa
inc
adc
fcomi
push
movs
into
imul
jo
fwait
sbb
fistp
cwde
xor
push
adc
fstp
mov
addr16
sub
dec
add
(bad)
lahf
adc
shl
std
add
popf
dec
leave
push
mov
(bad)
das
dec
cdq
xor
and
adc
out
mov
sbb
jb
mov
inc
or
retf
jns
adc
mov
xor
in
sbb
push
push
pop
xchg
xor
rcr
clc
out
lods
mov
xchg
push
pop
mov
in
test
sub
aaa
push
mov
and
xor
pop
jne
mov
or
pavgb
popa
inc
xor
enter
xor
or
aad
lahf
repnz
stc
dec
js
cli
dec
adc
cmc
mov
sbb
pop
inc
clc
sub
xchg
movs
leave
movs
mov
scas
daa
add
jp
push
xchg
es
retf
lea
xor
pop
mov
add
jno
pmaddwd
inc
mov
jmp
out
fyl2x
xchg
xor
mov
jnp
jg
mov
pop
inc
and
sahf
cs
xlat
es
sbb
mov
loop
push
xchg
leave
call
repz
(bad)
xor
cmps
(bad)
ror
jnp
ret
stos
inc
mov
jmp
cmps
mov
xchg
test
scas
pop
jae
xor
mov
repz
adc
bound
lods
cld
aam
sub
mov
loopne
pop
push
or
pop
cs
push
push
test
or
faddp
dec
sub
xlat
call
mov
in
inc
leave
out
add
mov
push
int3
or
aas
jns
mov
not
loop
cmp
dec
fmul
mov
mov
mov
push
test
cmps
push
aad
scas
sahf
push
xchg
dec
ins
adc
and
mov
add
mov
push
scas
es
rol
cmp
pop
push
in
(bad)
dec
cs
mov
add
xor
mov
cmps
pop
or
mov
cwde
add
ds
adc
je
add
jmp
mov
mov
inc
mov
inc
retf
xchg
mov
jae
dec
icebp
xchg
push
sub
aad
vpsllq
aam
movs
add
ja
retf
jge
outs
(bad)
(bad)
int3
(bad)
push
loopne
lock
mov
jnp
push
push
imul
push
sub
xchg
fwait
push
and
jns
mov
cmp
mov
fbstp
int3
sbb
xor
mov
es
xor
or
sahf
inc
push
adc
xchg
or
out
sub
inc
daa
jns
gs
mov
cmps
ret
and
sbb
mov
loope
sbb
test
cmps
cmps
loopne
iret
jbe
out
shl
dec
jecxz
mov
mov
aaa
pop
pop
add
ja
xchg
mov
mov
loope
mov
std
cmc
cmp
(bad)
fwait
jno
and
stc
lods
les
pop
shl
and
ins
out
es
into
adc
in
repz
data16
pop
outs
jg
call
push
sahf
int
push
push
cmp
scas
cmc
movs
ja
push
retf
test
pop
cmps
imul
sub
das
fist
and
xchg
push
cmps
or
loopne
sub
pushf
ja
inc
retf
pop
fstp
push
aad
adc
js
movs
adc
or
das
push
ja
cmp
adc
test
mov
enter
ret
(bad)
push
pop
sbb
dec
xchg
(bad)
jle
jae
popa
pop
mov
dec
xor
adc
movs
cmp
add
xlat
xchg
rcl
repz
or
cmp
cli
cli
dec
xchg
ins
sbb
jns
fisubr
cld
pop
ja
mov
adc
stos
cmp
add
rol
cwde
fmulp
push
aad
pop
nop
(bad)
sbb
add
sub
sbb
push
sub
cdq
das
addr16
mov
test
mov
std
ror
iret
mov
or
addr16
xor
sub
retf
mov
xchg
jmp
dec
je
jl
pushf
je
jmp
or
cs
fisubr
rcr
dec
dec
mov
outs
mov
sub
mov
push
cmp
clc
daa
xlat
cmp
mov
nop
push
fild
dec
imul
popa
add
pop
iret
enter
gs
dec
mov
sub
mov
mov
inc
data16
(bad)
inc
test
adc
xchg
pop
xor
cdq
ins
sbb
(bad)
inc
test
(bad)
(bad)
ja
mov
loope
add
fst
or
pop
jl
add
imul
loop
daa
cmp
jmp
fsubr
sbb
rol
jno
loop
stos
xor
outs
cmp
stos
add
add
mov
add
je
mov
and
fdiv
std
pop
xchg
cld
sub
jecxz
jg
fldpi
adc
js
das
and
fimul
bound
enter
mov
std
fnstcw
jns
sahf
fisub
aad
push
arpl
retf
(bad)
cmp
call
(bad)
push
and
rol
mov
pop
in
jge
pop
pop
cli
ret
ins
dec
jnp
imul
cwde
(bad)
jns
jnp
sbb
dec
adc
lock
and
xor
xchg
mov
dec
pop
jb
or
jle
in
mov
out
call
es
mov
or
int
push
mov
mov
adc
enter
pop
imul
pop
daa
test
fcomp
xchg
dec
sbb
inc
rdmsr
test
scas
mov
inc
lods
add
retf
add
nop
mov
mov
or
pop
jbe
dec
out
or
test
push
cmp
bound
cmp
mov
sahf
dec
ror
mov
(bad)
mov
scas
sbb
or
xchg
fisttp
dec
fdivr
(bad)
and
and
adc
dec
mov
sti
adc
adc
ins
les
fdiv
cmp
jle
fild
jle
lea
in
pop
pop
sahf
(bad)
data16
jo
pop
push
leave
mov
jmp
mov
shl
mov
pop
mov
mov
fild
sti
jnp
popa
xchg
sbb
mov
push
sbb
push
movs
mov
jns
xor
bound
cmp
push
jno
iret
add
cmps
xchg
xchg
ret
fnsave
xor
and
rcl
push
inc
fcom
xor
jge
add
inc
mov
or
and
sbb
daa
pop
cmp
fwait
or
in
sahf
mov
xchg
jnp
push
pop
test
scas
sub
and
mov
iret
in
movs
int
loopne
sub
fsubr
dec
loop
sbb
mov
cmps
cmp
in
sti
retf
adc
jl
(bad)
les
(bad)
adc
cmp
inc
inc
das
in
ins
jae
sub
add
cmp
mov
and
jno
pop
in
test
adc
mov
adc
jb
pop
push
nop
mov
adc
mov
jnp
adc
pusha
mov
push
jb
mov
adc
dec
je
pop
mov
clc
mov
fistp
int3
ins
shl
inc
out
push
jl
lock
mov
push
popa
xor
out
addr16
jne
pop
cmps
or
fucomip
sub
push
mov
nop
popa
nop
cmp
movs
sub
aaa
mov
jne
mov
fcomp
adc
fdiv
in
mov
jb
rcr
test
add
sbb
ret
js
mov
add
cmp
mov
inc
adc
adc
push
test
jne
mov
aam
add
or
sub
mov
xor
cld
cmp
push
xchg
ret
mov
scas
or
adc
test
adc
mov
ds
sub
xor
pop
icebp
icebp
mov
dec
in
inc
jnp
(bad)
jle
bound
dec
gs
xchg
jp
imul
mov
and
adc
mov
jae
mov
inc
dec
pop
ins
popf
popa
movs
dec
cmp
xchg
mov
push
shl
mov
leave
jne
push
push
les
cmp
or
add
gs
(bad)
stc
dec
inc
setge
dec
inc
jne
setno
sbb
push
popf
dec
jecxz
or
xchg
std
xchg
jl
sar
cs
call
fstp
and
xchg
add
jb
xchg
loope
sti
xchg
fstp
aas
adc
cmp
inc
test
inc
push
(bad)
sbb
push
fwait
mov
sub
rcl
fs
push
(bad)
fst
sar
and
push
jmp
push
pusha
mov
mov
out
aas
sbb
add
push
shl
push
mov
xor
xlat
lock
push
mov
mov
test
mov
test
rcl
xchg
add
xchg
pop
sbb
jge
push
mov
imul
dec
pop
adc
mov
jno
aam
ins
inc
and
sbb
and
clc
pusha
inc
inc
xchg
pop
dec
repz
jne
mov
jg
inc
fst
test
sti
mov
aas
into
aas
fisub
cmps
in
cvtps2pd
jecxz
mov
or
jns
cld
retf
mov
cmp
stc
bnd
add
imul
mov
mov
mov
loop
jae
hlt
xchg
add
in
fcomi
(bad)
pop
mov
loop
adc
cdq
repnz
(bad)
je
mov
(bad)
in
sti
sub
sub
stos
out
lods
std
(bad)
movs
xchg
pop
bound
std
jae
sbb
adc
xchg
sbb
in
jne
call
(bad)
push
call
xor
mov
inc
iret
loope
popa
jmp
add
fwait
inc
mov
jmp
mov
rcr
sub
inc
pushf
out
adc
in
mov
mov
scas
mov
movs
mov
in
adc
pop
jnp
add
icebp
out
xchg
and
and
inc
shl
enterw
add
lods
fiadd
addr16
outs
int3
xor
das
loop
enter
cmp
mov
dec
gs
pop
push
pop
xlat
fwait
in
xchg
inc
xchg
jecxz
cs
mov
mov
or
cmc
dec
inc
jb
mov
pop
push
call
or
(bad)
std
push
fimul
popa
xor
mov
loope
inc
inc
xchg
sti
(bad)
jmp
pop
pop
hlt
dec
push
xchg
clc
xchg
pop
idiv
fwait
ds
xor
iret
in
jae
aad
repnz
pop
leave
sub
pop
pop
les
sbb
push
pop
push
dec
push
test
(bad)
jb
cs
in
sar
adc
mov
retf
cmp
je
(bad)
aas
dec
jnp
(bad)
and
jne
out
cmp
pop
scas
inc
mov
add
cmp
aas
inc
mov
in
inc
jbe
jg
or
push
xchg
jb
mov
jmp
jecxz
into
or
mov
or
int
cmp
aas
push
mov
hlt
fs
aam
xor
push
jbe
jno
cmc
xor
cld
mov
xchg
jmp
push
mov
jl
arpl
rol
cs
sbb
sbb
lock
sbb
(bad)
dec
xor
jecxz
es
push
imul
enter
arpl
dec
call
or
ret
into
in
pushf
or
cmp
cmps
pop
push
(bad)
mov
call
jl
push
rcr
pop
mov
and
lea
xor
pop
js
imul
cmp
dec
popa
push
adc
or
ds
jp
jmp
pop
adc
(bad)
push
push
jae
(bad)
test
aas
inc
pop
bnd
rcr
lods
mov
aam
je
movs
pop
inc
or
mov
ds
mov
stos
jmp
mov
mov
leave
cld
inc
int3
and
outs
loopne
sbb
test
dec
pop
stos
dec
mov
sub
leave
push
push
dec
dec
push
sub
add
out
arpl
dec
fs
sub
lds
cli
enter
js
jbe
push
jb
cvttps2pi
sbb
stos
sbb
js
fcomi
and
icebp
add
es
xlat
sbb
(bad)
xor
sbb
mov
sub
dec
add
xchg
pop
out
and
mov
ret
push
popf
xchg
xchg
xor
pop
mov
rcr
out
push
shr
and
xor
jne
adc
push
jne
scas
sbb
jmp
fisttp
call
loope
push
lods
dec
aad
mov
mov
jecxz
cwde
mov
jmp
cmp
rol
fs
xor
mov
mov
push
dec
popa
movs
ins
enter
ficomp
inc
test
sub
xchg
ror
fcmovne
daa
jo
cdq
cmps
or
or
loopne
out
mov
or
inc
pop
cmp
rcl
pop
xor
es
cmp
xchg
push
ret
arpl
lock
in
popf
dec
push
mov
xchg
imul
int
mov
popf
in
rcl
mov
out
out
loope
sub
xor
in
add
ss
pop
int3
xchg
test
pop
pop
loopne
loop
call
loope
fsin
mov
lahf
pop
pop
mov
scas
xchg
mov
cmc
out
shl
sub
loopne
ja
lds
lds
jge
sub
and
xchg
push
adc
mov
sub
fstp
cmp
pop
sub
pusha
lods
jmp
add
xchg
sbb
pusha
cmp
(bad)
leave
mov
aas
loope
inc
in
xchg
jmp
cmp
xor
pop
add
xchg
or
dec
js
pop
fisttp
int3
cmps
pop
cmp
jne
sub
aad
(bad)
das
mov
dec
movs
into
pop
pcmpgtw
add
jne
ss
call
dec
xlat
jo
call
(bad)
int3
or
scas
push
mov
adc
xchg
outs
ds
add
pop
lahf
popa
rcr
retf
sahf
lahf
xchg
fist
icebp
(bad)
aam
mov
ret
dec
mov
sub
mov
data16
jne
add
cmps
pop
pop
sbb
aaa
dec
in
out
inc
gs
add
inc
sub
cmp
add
je
rcl
repnz
cld
call
stos
dec
lahf
fistp
jge
xor
mov
scas
xor
into
push
aas
or
push
mov
cmp
sub
test
stos
(bad)
xor
mov
loope
mov
mov
into
arpl
js
out
jl
pop
and
mov
pop
cmp
pop
cmps
xor
sub
bound
sbb
cwde
(bad)
cmp
sbb
xor
dec
mov
das
sbb
push
je
cld
popf
scas
std
cmp
retf
lea
xor
xchg
lahf
mov
add
mov
jp
data16
sub
(bad)
adc
mov
sti
lods
jbe
mov
rol
retf
pop
pusha
js
cmp
jmp
add
push
fstp
adc
lock
xor
scas
pop
mov
shl
dec
fld
adc
sub
enter
mov
retf
and
popa
fild
jl
and
stos
mov
push
sub
or
adc
popf
fisubr
push
jnp
loope
cmp
mov
shl
dec
mov
sub
movs
xor
inc
cmps
jo
vpsadbw
cmp
clc
jle
pop
ret
sti
xlat
cmp
in
in
jg
clc
pop
mov
out
or
xor
add
lods
dec
cs
mov
mov
cmp
inc
imul
test
pop
dec
rcl
shr
cwde
cli
sub
in
icebp
mov
test
sub
mov
pop
mov
and
adc
out
sbb
(bad)
mov
dec
popa
popf
xlat
cmp
js
xor
retf
icebp
sbb
ja
outs
(bad)
(bad)
jg
jmp
fcomp
xor
loopne
lock
cmp
inc
pop
rcr
or
sbb
mov
sti
outs
dec
pushf
imul
into
js
xchg
pop
cld
aad
test
loopne
pop
xchg
enter
movs
std
test
push
xor
cdq
push
(bad)
in
xor
fisub
mov
inc
idiv
push
mov
pop
xchg
outs
mov
test
xor
sar
sub
lea
aam
jmp
arpl
icebp
sub
dec
not
inc
push
push
das
jge
ret
stc
sbb
mov
xor
cdq
cmc
stos
in
sub
clc
aaa
out
hlt
add
ss
pop
add
jae
(bad)
retf
push
mov
pop
(bad)
xlat
xchg
cmp
pop
fidiv
xchg
add
adc
(bad)
rcr
stos
movs
cmp
sbb
and
mov
cmp
sbb
js
sbb
and
pop
lods
adc
cmp
xlat
pop
imul
fmul
imul
jnp
xchg
movs
paddd
rcl
call
outs
enter
in
xchg
adc
pop
ins
jo
add
loop
mov
inc
push
jae
mov
fisttp
fadd
mov
mov
call
cmc
pop
jns
nop
inc
mov
mov
movs
mov
dec
mov
mov
call
pop
jbe
sub
pop
test
call
xlat
push
push
cwde
sub
sbb
loopne
scas
adc
pusha
xor
jmp
jecxz
addr16
stos
aas
sbb
dec
(bad)
das
rcr
ret
mov
fisubr
sbb
xchg
mov
arpl
or
test
or
add
clc
mov
cmc
fidivr
call
xor
adc
cs
xor
adc
pop
or
push
addr16
dec
cmp
lods
out
jmp
(bad)
std
je
sub
inc
and
jns
sub
std
loop
(bad)
sbb
jecxz
sub
shl
xchg
dec
lods
add
push
gs
aas
ret
inc
push
scas
in
mov
mov
test
fwait
je
fwait
test
push
push
dec
pop
and
or
mov
mov
mov
mov
xchg
push
sub
jbe
pop
adc
mov
imul
pop
xor
jmp
ds
and
pop
inc
mov
pop
push
xor
inc
pop
idiv
sub
xchg
mov
sbb
enter
adc
xor
test
adc
(bad)
push
loope
or
aad
test
sub
int3
mov
mov
or
dec
and
(bad)
sbb
mov
je
stos
jmp
es
xlat
mov
inc
pushf
or
push
stc
cmp
mov
inc
and
push
repnz
mov
test
sub
inc
retf
mov
rol
popa
push
xchg
dec
dec
jb
mov
mov
xchg
jns
shr
mov
dec
xchg
clc
in
mov
sub
adc
clc
enter
retf
dec
mov
mov
cs
sahf
leave
in
int
pop
pop
outs
or
pop
mov
mov
push
add
inc
inc
pop
out
popf
das
or
shl
aas
and
cmp
xor
fwait
hlt
(bad)
shl
ret
inc
ins
adc
mov
fld
(bad)
cmp
push
add
jns
xor
lahf
jge
or
xlat
ret
xchg
ss
les
or
jmp
loop
push
cli
or
lds
fwait
js
cld
push
jne
sar
cmp
loope
pusha
das
add
cmc
movs
imul
in
inc
cmp
ins
cmp
push
call
and
and
mov
xchg
xchg
outs
xor
hlt
add
je
dec
mov
popf
push
fld
mov
clc
sahf
xlat
imul
repnz
pop
bound
mov
mov
rcl
pop
pusha
imul
mov
in
jb
mov
xor
xor
icebp
adc
(bad)
fadd
mov
fdiv
retf
fdivr
and
lods
loop
push
mov
std
sub
mov
in
sbb
inc
sbb
pop
pop
sub
dec
dec
cmp
cmps
pushf
sub
cmps
pop
(bad)
sbb
xor
inc
jg
xchg
retf
ins
inc
out
push
lahf
call
je
xor
das
xchg
in
gs
or
out
cmp
cs
cli
(bad)
cli
shl
aas
repnz
push
rol
adc
rcl
inc
mov
std
sahf
ins
outs
and
xchg
jle
fs
pop
loop
or
addr16
out
mov
or
dec
clc
dec
pop
mov
lods
iret
add
inc
pop
mov
(bad)
sub
sbb
sbb
scas
lahf
inc
mov
push
xor
and
fcom
mov
mov
jp
inc
jecxz
out
gs
pop
or
and
jg
fst
lods
in
cmp
mov
test
add
mov
test
and
xchg
and
pop
les
push
jp
stos
push
push
daa
push
cmps
add
into
ficomp
scas
arpl
loopne
inc
test
xchg
les
sub
ret
in
into
les
bound
push
dec
cs
dec
sbb
mov
push
xchg
dec
sub
dec
shl
cwde
sub
mov
fs
and
xor
rcr
fs
cmp
fmul
xchg
scas
shl
enter
xor
pop
cli
popf
pop
inc
mov
pop
pop
xor
lds
jae
mov
test
mov
cmp
jne
sbb
jg
frstor
pushf
sbb
mov
jno
mov
mov
test
jp
xor
cmp
loop
nop
mov
dec
add
loop
jno
inc
pop
or
sub
dec
xor
xor
add
loope
mov
stos
push
popf
retf
or
push
sbb
in
paddb
xchg
and
int
adc
and
sti
jne
iret
loopne
loop
add
scas
(bad)
adc
sub
ins
rol
cmp
movs
sbb
mov
xor
sub
es
mov
mov
mov
jg
cmp
push
je
jns
push
sti
les
jle
pop
push
dec
cmc
sub
shl
dec
jae
dec
sub
cmc
add
das
and
mov
call
cmps
mov
mov
add
out
cmp
mov
cdq
not
or
idiv
ja
cmps
lds
pop
sbb
das
mov
sahf
retf
ins
scas
inc
test
sbb
and
adc
dec
xor
mov
shl
xchg
clc
cmc
leave
sub
mov
repz
dec
iret
jle
adc
dec
sar
adc
or
test
add
dec
push
test
movs
(bad)
mov
test
pop
sub
pop
cmp
mov
mov
leave
dec
jecxz
push
jl
shl
dec
inc
sbb
in
push
xlat
inc
xchg
aad
shl
sbb
cwde
js
arpl
out
lea
outs
(bad)
es
hlt
adc
aaa
mov
out
(bad)
dec
test
mov
js
and
(bad)
pop
imul
dec
mov
add
mov
cmps
ret
call
mov
scas
cmp
les
jae
push
in
cmp
(bad)
add
add
inc
sbb
test
(bad)
cli
mov
xor
mov
inc
xchg
subps
cmps
xlat
adc
jae
inc
fst
fnsave
mov
xchg
sub
sub
pusha
cmp
jp
xchg
mov
scas
sub
mov
rol
ja
xchg
cmp
scas
int3
dec
test
and
cwde
outs
mov
dec
je
pop
sbb
sbb
xchg
fidiv
lock
je
jno
sbb
inc
mov
cmps
in
push
sub
(bad)
into
add
pop
and
fnsave
into
js
cdq
pop
out
gs
mul
xor
mov
iret
neg
jg
mov
cmp
mov
icebp
cdq
pop
in
xchg
fld
push
jno
adc
cmps
ins
daa
add
cwde
dec
sti
mov
out
test
ds
cmp
lods
je
pop
sbb
sbb
pop
clc
fmul
push
and
mov
pop
pop
call
add
inc
scas
mov
ret
mov
jnp
xchg
mov
mov
mov
movs
(bad)
mov
xchg
inc
mov
mov
cmps
xlat
jmp
clc
(bad)
mov
inc
and
stc
(bad)
enter
push
in
jo
rcr
dec
test
adc
(bad)
jmp
push
pop
in
cs
push
xor
adc
lahf
pop
ror
pop
fbld
retf
nop
xchg
pop
or
(bad)
addr16
xchg
mov
mov
aam
ja
loope
push
aad
sti
inc
cmps
mov
ss
daa
in
and
and
adc
mov
lods
paddd
lods
push
scas
sbb
push
mov
add
ja
out
cmps
test
pop
fisttp
push
xlat
stc
sbb
jb
jno
and
aaa
pop
jns
pop
sub
mov
mov
(bad)
jnp
and
gs
mov
aam
add
or
mov
div
xchg
cmp
mov
aas
paddusb
mov
mov
daa
mov
and
dec
xor
mov
or
stos
add
daa
push
in
pop
sar
loopne
mov
cmp
adc
dec
call
lea
dec
pusha
xchg
adc
mov
aas
xor
sbb
aad
iret
or
xor
mov
std
dec
push
adc
movs
inc
dec
fs
xlat
inc
push
inc
cmp
das
push
cmc
lahf
ret
mov
iret
cmp
es
ficom
adc
das
adc
sub
push
das
cmp
cmps
iret
sti
les
jo
retf
mov
shl
scas
call
xchg
dec
loopne
cmp
stc
mov
cmp
lods
ja
sysenter
aam
xchg
outs
add
xor
mov
iret
mov
cmp
pushf
jne
jb
out
and
sub
push
inc
imul
inc
sbb
hlt
jle
imul
cli
pop
xchg
arpl
sbb
jae
sti
inc
test
cmp
push
sub
mov
mov
pop
mov
ret
adc
sbb
lea
or
xlat
into
sar
in
adc
mov
xlat
mov
jno
std
rcl
bound
push
cmps
cli
outs
(bad)
mov
and
push
adc
rcl
pop
dec
aaa
cmp
or
arpl
scas
fs
adc
push
mov
sbb
ja
les
sub
sti
(bad)
fwait
cmp
imul
sahf
out
xchg
mov
sub
imul
bound
jle
adc
in
lock
out
loop
adc
xchg
ja
cmc
jle
aad
imul
cs
clc
call
std
jno
dec
scas
das
imul
aaa
scas
fcomip
pop
inc
pop
mov
movs
(bad)
shr
test
sbb
sbb
bound
rcl
pop
jbe
push
cmp
aas
push
push
lea
xor
fstp
jo
out
mov
test
call
fild
out
out
fadd
xor
xor
jl
add
dec
lods
in
ds
mov
mov
inc
mov
mov
and
dec
loop
xor
push
jg
clc
fs
add
mov
jp
dec
and
bnd
pop
out
adc
fidiv
sbb
cmps
adc
sbb
iret
data16
jbe
cmp
or
sub
mov
(bad)
aad
xlat
out
pop
mov
push
fistp
lds
ins
jmp
retf
ss
jecxz
xchg
aad
imul
adc
adc
data16
loopne
test
clc
aas
xor
mov
xchg
in
in
imul
jmp
mov
pop
retf
or
jno
in
retf
pop
adc
sahf
test
cs
mov
mov
pop
std
and
loop
mov
cmp
sbb
aaa
int3
jg
fcmovnb
adc
mov
xor
in
cmp
cmc
dec
retf
(bad)
xlat
mov
ret
pop
or
fwait
(bad)
mov
inc
lods
leave
pop
dec
into
aas
imul
push
out
sub
push
mov
inc
cli
(bad)
sbb
fs
les
cmps
add
ss
(bad)
jmp
outs
xchg
mov
fs
jl
cmp
aas
pushf
in
pop
xchg
mov
(bad)
mov
push
popa
jmp
sub
lock
mov
inc
sbb
xchg
xor
ffreep
(bad)
repz
shr
cld
cmps
imul
hlt
or
in
ins
leave
jns
ss
cwde
arpl
dec
sbb
bound
jge
cmp
adc
dec
inc
push
in
int
pusha
int
adc
xor
fs
add
push
sbb
add
fwait
(bad)
xchg
or
and
pop
cwde
retf
(bad)
adc
cmp
test
and
adc
and
hlt
popa
jns
(bad)
clc
sbb
jno
mov
and
jne
test
pop
test
cmps
cwde
lahf
mov
cmp
pop
imul
sbb
rcl
push
add
push
in
pop
mov
aaa
jl
cdq
hlt
mov
cmp
push
out
jmp
cwde
push
lock
and
or
popf
ficom
clc
jl
out
daa
and
(bad)
mov
stos
xchg
and
adc
inc
cwde
push
sti
lea
sub
add
add
mov
jb
lods
lea
cmc
aam
xor
ins
mov
mov
jle
iret
xor
ret
dec
out
jno
aaa
lods
loope
mov
into
stc
jp
rol
inc
mov
fistp
jge
ss
adc
lods
lea
fistp
adc
enter
clc
cmps
std
aam
push
inc
test
mov
gs
pop
ror
pop
push
mov
mov
cmp
xchg
js
(bad)
mov
cmp
push
dec
push
mov
and
call
mov
add
leave
mov
sbb
ficomp
cmp
daa
sbb
test
stos
stos
or
les
push
call
sbb
add
aam
cmp
lds
lahf
neg
add
cmps
fsub
outs
pop
mul
cld
out
sar
pop
dec
cs
pop
inc
adc
push
dec
mov
shl
jne
ret
xlat
fs
movs
fdiv
imul
dec
sbb
cmp
jmp
push
aam
mov
add
xor
jg
push
inc
inc
test
lock
sub
inc
jmp
jae
div
(bad)
loop
xchg
pop
cs
es
mov
mov
call
sub
or
adc
arpl
mov
repz
loopne
xchg
mov
enter
mov
adc
test
mov
sbb
and
mov
mov
cmp
movs
sub
jecxz
mov
aad
or
gs
arpl
popa
jmp
nop
inc
ins
cmp
repz
ss
push
rcr
jmp
mov
jmp
pusha
xchg
in
sub
pop
pop
pushf
mov
mov
lea
aad
retf
stc
add
inc
xor
inc
jbe
and
(bad)
data16
push
xor
dec
je
jns
and
cmps
sub
cmps
arpl
pusha
test
stc
pop
nop
ror
div
and
or
movs
stos
mov
les
xor
jns
rcl
jns
adc
mov
lahf
jmp
daa
loopne
imul
mov
cmp
test
push
and
xlat
mov
dec
arpl
inc
outs
retf
jp
jg
adc
outs
int3
xor
mov
(bad)
bnd
lods
lods
mov
rcl
xchg
pop
movs
xchg
adc
pop
mov
sbb
mov
pop
lea
ja
dec
shl
retf
dec
push
aaa
cld
sbb
sar
mov
sub
out
xor
not
das
mov
jmp
ret
iret
sub
pop
adc
push
mov
in
addr16
push
cdq
and
xor
and
cmp
pop
in
int
xchg
xor
mov
xor
out
shr
std
mov
arpl
retf
repnz
pop
outs
ins
dec
pop
adc
rol
mov
(bad)
fst
rcl
dec
test
xchg
cmp
stos
jmp
mov
mov
push
fnstsw
pusha
jle
(bad)
out
popa
cmc
mov
lds
cmp
sar
pop
mov
fist
add
mov
sar
pop
imul
or
cli
bound
or
xor
dec
call
imul
lea
jp
push
pop
pushf
cmp
test
xchg
sbb
push
mov
mov
inc
jge
data16
pusha
pop
(bad)
mov
out
jmp
out
outs
adc
mov
outs
(bad)
ficomp
pop
and
sahf
xor
cmp
fiadd
xchg
adc
inc
dec
xchg
jne
add
or
jp
mov
retf
loop
pop
js
and
push
adc
push
and
aad
vandpd
loope
jp
jp
cmp
or
pop
icebp
and
dec
pop
sbb
(bad)
push
cmp
xchg
cmp
pop
xchg
hlt
aas
push
xchg
lock
shl
mov
xchg
push
push
scas
mov
pop
mov
les
rol
mov
scas
stos
call
idiv
es
outs
sbb
call
cmc
jnp
lods
pop
mov
bound
mov
or
pop
pop
das
xor
pushf
fisub
pushf
icebp
xor
pop
cmp
cmc
jecxz
(bad)
dec
ret
jae
sub
js
add
imul
mov
lock
mov
pxor
cmp
mov
ror
cld
cmp
cmp
xlat
popa
jle
add
add
les
ret
(bad)
addr16
pop
mov
and
addr16
cmp
aaa
push
xchg
fcmovnu
stos
outs
xor
cmc
sar
sti
and
xchg
inc
outs
out
hlt
xor
xchg
stos
push
ja
int3
sub
dec
jbe
(bad)
leave
xchg
aas
mov
dec
pushf
mov
leave
call
xchg
pop
pop
fst
cmp
inc
call
pop
xchg
xchg
hlt
add
cwde
cmp
jmp
faddp
adc
retf
jo
pop
sahf
inc
inc
mov
adc
adc
push
xchg
ret
mov
in
repz
sahf
cmp
dec
in
mov
pop
push
cmps
jg
adc
mov
scas
jo
aas
push
or
mov
repnz
mov
xlat
sti
ins
ins
pop
mov
ss
lea
pop
dec
xchg
out
(bad)
jo
fist
push
push
daa
and
push
cld
arpl
and
cmp
jo
int3
mov
int
add
inc
xchg
inc
pop
mov
pop
addr16
sbb
mov
dec
adc
mov
retf
push
arpl
int
mov
cmp
(bad)
sbb
ret
adc
add
mov
imul
adc
popa
lods
pushf
mul
in
sub
jl
mov
xchg
sbb
or
xor
(bad)
adc
psraw
jg
(bad)
(bad)
push
icebp
ins
data16
adc
pushf
int3
dec
inc
inc
cmp
pop
add
in
mov
sub
fadd
push
lds
nop
push
neg
(bad)
cli
add
xchg
mov
aam
cmp
out
aad
fiadd
add
jns
mov
sub
icebp
movs
or
outs
or
ja
ins
and
lods
fsubr
jo
sahf
js
cmp
jno
add
shr
test
jg
popf
jg
retf
push
loop
(bad)
and
test
sbb
push
sbb
cld
push
push
lods
mov
arpl
and
pop
xor
fnsave
xchg
fmul
leave
and
out
dec
push
xchg
cmps
dec
xor
inc
imul
call
sbb
push
pop
mov
stos
test
repnz
out
adc
not
sub
mov
rcr
adc
loope
call
add
shl
and
sub
sar
mov
pop
jp
jl
jo
js
mov
jae
inc
adc
xchg
rol
sbb
dec
cmp
add
les
pop
les
in
addr16
xchg
pop
fisub
scas
xchg
or
dec
add
out
aam
push
add
push
mov
gs
std
ss
xor
jmp
adc
mov
mov
imul
loopne
scas
mov
mov
and
inc
and
outs
rcl
call
xchg
pop
sbb
mov
clc
fistp
cwde
add
lea
sar
sub
jp
lods
shr
outs
xor
cld
jo
(bad)
jmp
add
(bad)
jbe
jp
je
fwait
pop
sub
mov
out
mov
lahf
dec
inc
cmc
adc
add
pop
inc
cmp
cmp
mov
adc
fnsave
hlt
xchg
shl
pop
mov
repnz
test
cwde
test
aad
jnp
gs
int
xor
mov
xchg
in
add
fistp
fs
push
mov
mov
jecxz
cld
jecxz
lds
test
ss
shr
xchg
jmp
push
stos
(bad)
retf
fild
dec
retf
movs
rcr
mov
pop
and
sbb
lds
movhps
cmps
mov
(bad)
fwait
das
push
ins
pop
jno
inc
inc
cmp
out
cwde
rcl
add
mov
stos
and
imul
adc
jg
pop
(bad)
sub
push
mov
and
xchg
xor
and
dec
pop
leave
sahf
lock
add
les
cmp
jecxz
push
test
and
(bad)
mov
les
inc
jbe
cli
movs
mov
cmc
sbb
jae
xchg
mov
pop
dec
mov
rol
dec
aaa
push
hlt
in
and
cmps
sbb
jmp
adc
std
mov
fisub
ret
fs
mov
cmp
jns
push
jl
call
jnp
push
jge
ret
icebp
jbe
xor
in
scas
js
in
dec
push
mov
cwde
sub
pop
xchg
inc
mov
icebp
xor
xchg
mov
movs
daa
xlat
call
jnp
int
out
jae
sbb
icebp
leave
je
(bad)
mov
mov
aas
cld
pop
daa
bnd
jge
or
sar
loope
mov
inc
sbb
test
xor
fisttp
lds
(bad)
jne
adc
jge
push
dec
cld
sub
leave
outs
movs
movs
sbb
jl
push
push
mov
fld
cmp
ret
test
and
adc
(bad)
xchg
ja
jge
ret
add
das
jl
in
inc
add
lods
jo
push
mov
pushf
push
rcr
add
ds
adc
cmc
outs
test
cmps
sbb
icebp
xlat
test
mov
jb
movs
loopne
inc
sbb
(bad)
das
mov
hlt
fisttp
jo
push
mov
or
sub
aas
xor
and
and
scas
mov
and
jmp
adc
mov
pop
pop
(bad)
shl
and
loope
or
pop
daa
jp
stos
imul
mov
push
sahf
aad
xor
sub
sbb
mov
cmps
jmp
cmp
cmp
add
or
sub
(bad)
int
imul
dec
push
ja
mov
loope
xchg
mov
mov
mov
js
stos
or
dec
mov
jmp
cwde
mov
mov
push
mov
imul
dec
push
or
bnd
js
mov
mov
sbb
xor
repz
push
pop
fldenv
aad
dec
sbb
jo
xor
jl
adc
pop
mov
jns
dec
pop
mov
jle
fdiv
mov
loope
mov
mov
xchg
cmc
xor
or
add
or
mov
test
pop
call
inc
add
in
test
sub
pop
xchg
in
push
dec
test
add
mov
add
arpl
(bad)
sbb
add
fxch
add
ins
repnz
sub
mov
inc
sub
mov
test
cmp
sub
mov
add
pop
addr16
dec
loop
xchg
xchg
sti
and
outs
in
sbb
dec
mov
stos
push
adc
sub
clc
in
cdq
in
repz
xor
fmul
sub
imul
dec
push
mov
leave
cmps
dec
mov
(bad)
pop
jne
cmc
(bad)
adc
out
or
and
push
add
sub
in
movs
add
mov
les
ins
out
imul
mov
cmp
push
cli
xor
imul
xchg
outs
daa
int
cmps
sub
adc
add
ror
inc
dec
in
(bad)
in
popa
stc
test
addr16
push
lahf
pop
clc
jae
ja
mov
mov
ds
sbb
dec
lods
jno
jg
shr
test
and
dec
loopne
rcr
jmp
retf
ds
out
pop
adc
arpl
and
mul
das
mov
sbb
push
jg
mov
inc
cmp
jge
xchg
and
mov
bound
and
cmp
xchg
data16
xor
mov
inc
adc
stos
push
sbb
mov
and
mov
aam
and
mov
jmp
retf
mov
dec
test
inc
lock
xchg
in
pusha
fist
cdq
jb
test
pop
add
test
setbe
inc
adc
mov
test
and
add
por
fbstp
in
inc
outs
loopne
ins
retf
inc
sbb
cmps
or
or
data16
mov
adc
pushf
mov
push
outs
call
push
(bad)
test
out
dec
cs
ins
bound
adc
dec
stos
out
and
cli
sbb
outs
mov
mov
or
xchg
xchg
fimul
sbb
xchg
bound
lea
int
out
stos
pcmpeqb
call
aam
jne
shl
aas
jge
jmp
sub
pop
add
iret
mov
inc
xor
mov
lods
cdq
mov
inc
dec
imul
pop
or
or
mov
ret
pop
xchg
or
shl
mov
jecxz
sbb
cli
cmc
out
jle
push
ret
and
lahf
sbb
bound
cdq
pop
add
xor
loope
xchg
ficomp
jl
add
out
cmps
and
cmp
not
cmp
shl
mov
xchg
inc
ins
pop
jae
jle
sahf
lea
dec
aam
popa
aam
cmp
xor
fdiv
push
int
clc
xchg
dec
sbb
pop
xchg
call
add
shl
pop
push
pop
cs
inc
repnz
and
or
psraw
inc
mov
into
iret
mov
stos
mov
jmp
mov
jp
mov
inc
push
sti
(bad)
pop
push
mov
mov
ret
xchg
cld
int
push
mov
jb
popf
pop
es
retf
dec
test
adc
push
stc
pop
pushf
push
dec
cmp
lods
cli
aam
int3
stos
xchg
ficom
je
xor
adc
pop
xchg
jge
cmp
push
adc
int
in
stos
outs
jno
stos
jge
out
jle
sub
les
sbb
aam
gs
sbb
mov
ins
or
push
into
test
jmp
cmps
sti
stos
push
pushf
inc
push
dec
bound
jns
(bad)
cmp
aaa
xchg
push
mov
sub
mov
mov
jno
inc
aad
pop
inc
sti
outs
cmp
in
push
inc
js
fisub
ins
and
xor
mov
fsubr
mov
out
xchg
mov
and
jbe
fadd
sahf
add
int3
add
es
push
xchg
nop
push
xchg
push
push
xchg
adc
mov
mov
jecxz
ficomp
sub
stos
jmp
into
sub
sahf
adc
sbb
es
mov
cmp
in
ret
fiadd
(bad)
mov
pushf
push
outs
ins
pop
xor
cwde
pop
dec
vmread
xchg
arpl
clc
sbb
push
icebp
lods
adc
jns
sbb
pop
(bad)
xchg
xchg
add
vpsrlq
mov
js
fs
mov
xchg
or
mov
std
js
jnp
push
pop
push
xor
dec
das
mov
out
pop
dec
jnp
hlt
into
inc
inc
inc
sub
push
imul
test
and
sbb
mov
std
sub
lock
out
pop
ins
or
xor
imul
adc
setno
inc
adc
xor
mov
in
in
pop
or
lea
(bad)
mov
mov
sub
pop
jmp
xabort
sbb
lods
mov
add
push
retf
bnd
pop
in
out
sahf
xchg
sar
or
sbb
test
repnz
fsub
and
inc
add
push
jo
sbb
fild
mov
in
repnz
arpl
loope
call
mov
jg
dec
sbb
imul
mov
sub
sbb
movs
push
ret
test
push
mov
aaa
xor
push
xchg
and
cpuid
sub
(bad)
outs
ins
pop
sub
jl
mov
jmp
pusha
outs
bound
sub
add
stos
rol
mov
mov
or
stc
dec
add
repz
lea
ins
icebp
jo
pop
mov
cmp
inc
icebp
leave
imul
mov
pop
gs
out
mov
push
xchg
push
inc
lahf
lods
cdq
pushf
cli
test
call
hlt
dec
and
inc
or
int3
mov
jae
les
in
loop
dec
int
push
pop
ja
into
push
int3
cmp
jbe
adc
xchg
test
push
inc
jecxz
sbb
push
adc
shr
mov
and
fisub
cmp
xchg
pushf
mov
adc
and
cdq
cld
fiadd
pusha
out
mov
out
push
sub
dec
mov
jo
sub
mov
cmp
pop
add
out
je
jmp
mov
push
div
jmp
jb
in
dec
(bad)
bound
shl
es
push
dec
jmp
inc
xchg
or
lods
inc
jmp
xor
bound
sbb
shl
inc
add
into
xchg
jb
xor
lock
in
pop
jl
cmp
jbe
fistp
pop
lock
jle
dec
out
ja
sbb
mov
sbb
mov
xor
dec
sub
jns
mov
pop
icebp
adc
in
jle
stos
sti
add
cmp
push
aas
xchg
inc
mov
clc
mov
jnp
sbb
jns
punpckhwd
or
mov
popf
test
and
retf
ins
fistp
loopne
aaa
fwait
les
pop
sti
push
adc
lods
dec
imul
aad
addr16
mov
daa
xchg
sub
pop
fidivr
call
dec
ins
stc
dec
pushf
sub
cwde
loopne
mov
xor
aam
inc
adc
fnsave
pop
pushf
jg
cmp
fnstcw
jne
(bad)
ins
retf
cmp
popf
pusha
mov
fsubr
jecxz
test
and
push
mov
mov
pushf
sub
outs
aas
add
xchg
mov
(bad)
shr
shl
push
pop
push
std
test
adc
pop
xchg
pop
in
lock
xchg
not
fs
popa
jge
cdq
xchg
mov
jns
jns
and
push
lods
cmp
pop
sub
in
push
pop
push
sub
sar
dec
mov
pusha
push
mov
xor
popa
pop
es
xchg
xor
stc
push
cmp
cld
xchg
dec
push
scas
mov
xor
mov
mov
sub
xchg
or
inc
sbb
fs
mov
cmps
or
dec
mov
or
mov
and
or
push
lea
pop
mov
push
test
sub
ins
stos
repz
mov
jbe
cmp
test
lods
(bad)
mov
xor
in
add
push
iret
mov
mov
or
icebp
mov
fild
xor
stc
push
dec
lock
fsub
inc
lahf
pop
imul
inc
ds
outs
add
jnp
cwde
fild
jbe
fld
pop
es
jo
and
cwde
add
test
mov
sub
imul
cmp
imul
fs
ret
mov
pop
lahf
fmul
fs
jmp
and
clc
cmps
add
dec
xchg
pop
jno
mov
adc
pop
cli
(bad)
(bad)
jl
out
icebp
lods
xchg
pop
sahf
loope
in
fstp
jmp
mov
xchg
mov
xchg
inc
aam
bound
pop
adc
pushf
inc
xor
loopne
jge
inc
loop
mov
dec
sub
push
mov
aas
dec
sbb
enter
(bad)
jbe
pop
xor
enter
ja
mov
fbld
inc
cdq
sub
imul
sbb
inc
mov
imul
push
es
pop
inc
sbb
sub
mov
push
mov
add
mov
jo
pop
pop
test
and
add
sti
xchg
mov
jl
movs
mov
ret
xchg
sahf
outs
add
outs
out
shr
mov
int3
mov
sub
push
shl
mov
dec
cld
xchg
scas
xchg
ja
mov
mov
or
inc
push
out
mov
push
xchg
movs
xor
push
jnp
mov
loope
rol
add
fwait
push
xor
lods
emms
xchg
jb
fxsave
gs
mov
mov
outs
pop
stos
sysret
add
add
cmp
test
or
(bad)
ss
(bad)
mov
icebp
push
lods
pusha
add
retf
jo
std
call
mov
fdivr
add
and
xchg
and
(bad)
mov
push
jecxz
push
into
and
push
mul
fcmovnu
jle
sbb
pop
popa
loop
xor
in
or
daa
repnz
push
je
call
mov
pop
mov
outs
stc
int
jmp
jb
dec
enter
sub
dec
mov
inc
jae
adc
mov
mov
daa
mov
mov
ficom
push
int3
iret
mov
sbb
mov
sbb
sub
add
xchg
pusha
fidivr
mov
xchg
cmp
and
jno
mov
aaa
push
push
mov
and
ins
test
mov
lods
pop
inc
fldcw
mov
xlat
push
outs
out
pop
push
xlat
mov
xchg
mov
retf
push
stos
xchg
mov
(bad)
xlat
shr
pop
xor
and
(bad)
in
rcr
sbb
test
jnp
push
fsubr
sub
retf
ret
(bad)
outs
pop
out
push
mov
js
push
rcr
mov
jmp
arpl
das
stc
retf
jp
lock
xchg
mov
adc
mov
mov
cli
mov
test
xchg
mov
in
inc
cld
dec
imul
stos
mov
adc
adc
dec
dec
xor
cmp
fdiv
cdq
es
les
inc
imul
das
scas
sbb
test
imul
mov
stc
push
mov
or
jle
and
loop
cmp
xchg
mov
xchg
lds
push
ins
pusha
pop
add
sbb
jp
data16
adc
pop
repz
jecxz
aad
push
xor
pop
push
data16
sbb
cmps
stc
mov
pop
xor
nop
sar
xor
(bad)
popa
cwde
sbb
push
xlat
adc
mov
in
inc
dec
ds
addr16
mov
inc
pop
daa
and
sub
jg
pop
dec
xchg
fstp
popw
daa
cmps
lock
push
pop
add
pop
sbb
dec
cmp
push
mov
repnz
sbb
adc
push
das
es
adc
and
sub
xchg
mov
pop
leave
xchg
test
xchg
push
loope
fnstsw
popa
mov
imul
cmp
les
jecxz
popa
ret
sub
sub
popf
movs
cmc
sub
fiadd
aad
inc
and
and
aas
aas
loopne
add
mov
jmp
adc
push
pop
inc
mov
xchg
jmp
mov
ins
xor
lock
xchg
mov
cld
jbe
adc
repz
push
pop
dec
leave
outs
pop
out
or
mov
inc
iret
xchg
jno
xchg
dec
call
jb
dec
call
aam
not
sub
cmp
les
ins
lods
fist
cmc
test
inc
jmp
jle
pop
jae
or
das
dec
in
inc
mov
push
idiv
jg
push
xor
sbb
sbb
mov
out
jmp
sub
sbb
fwait
hlt
push
movs
ret
mov
fwait
outs
cmp
les
in
jno
mov
loop
or
inc
or
out
push
repz
aad
ja
xchg
pop
sbb
clc
jmp
push
imul
mov
and
sbb
std
hlt
ret
adc
daa
loope
rcl
or
(bad)
xchg
add
xor
int3
lahf
jmp
outs
jg
cld
fnsave
inc
mov
cmc
aad
sbb
mov
xchg
sahf
add
add
add
mov
xchg
sub
cmp
xchg
xchg
outs
dec
mov
nop
jns
cmc
xchg
stos
dec
sbb
jl
cld
inc
adc
pop
in
mov
cli
cmp
cwde
loope
jae
and
mov
add
jo
cmp
mov
out
jo
int
push
pop
mov
sbb
in
add
jecxz
inc
xor
cmp
cmp
mov
xchg
loop
les
sbb
push
gs
sahf
sbb
lock
jae
xchg
push
(bad)
or
imul
movs
dec
es
cmps
xchg
int3
fbstp
adc
popf
pusha
inc
fiadd
xchg
adc
mov
jbe
sahf
xchg
or
inc
cld
scas
sub
inc
push
std
outs
and
lock
ror
xchg
imul
pop
pop
dec
push
cs
mov
test
out
mov
dec
fsubrp
jne
mov
mov
xor
repnz
mov
jmp
mov
jg
jno
ss
adc
clc
loop
pop
cld
push
inc
test
pop
fcom
scas
sbb
dec
rol
int3
aad
mov
add
sub
cwde
mov
mov
test
inc
out
cli
dec
mov
inc
adc
adc
mov
rol
mov
mov
xlat
dec
push
add
mov
inc
test
fmul
pop
ret
sub
retf
jb
test
inc
(bad)
add
sub
dec
popf
(bad)
fdivr
in
sbb
dec
clc
mov
std
leave
sub
(bad)
cmp
cmp
clc
mov
mov
pusha
addr16
mov
fisub
jmp
out
sbb
movs
dec
sbb
jns
xor
aam
mov
jne
or
icebp
mov
sbb
mov
adc
mov
jge
mov
clc
cmps
popa
seta
push
imul
mov
sbb
mov
sahf
and
enter
fistp
xchg
(bad)
xlat
cmp
repz
dec
sub
int
and
std
xor
sahf
sub
or
cwde
ret
lock
cmp
xchg
adc
mov
adc
add
inc
jmp
pop
dec
push
sbb
xor
xor
cmc
not
or
sbb
push
loope
inc
jmp
jmp
rol
movs
dec
inc
pop
or
leave
cmps
add
cmp
mov
mov
hlt
mov
test
mov
mov
nop
arpl
push
dec
xchg
stos
aad
(bad)
push
jp
push
sar
in
ja
jl
lahf
in
call
arpl
pusha
ror
mov
jp
jmp
mov
sbb
repnz
mov
push
cs
outs
je
or
repnz
jmp
push
test
jge
sub
pushf
sub
jnp
aam
add
cmps
bound
lea
in
mov
or
xchg
das
and
bound
test
lock
mov
dec
and
mov
or
mov
icebp
lock
sub
icebp
inc
pop
and
mov
and
push
jp
inc
inc
cmc
test
adc
xor
scas
pop
imul
sbb
fsubr
repnz
and
ret
popf
inc
xor
aaa
push
mov
and
lahf
cwde
jo
push
pop
dec
push
dec
xor
sti
or
movs
(bad)
aad
rcr
dec
test
mov
jbe
or
lea
adc
xor
push
int
call
aam
dec
xor
mov
in
mov
pop
push
pop
xchg
sar
jae
mov
jb
jge
cs
fsubr
daa
popf
popf
mov
and
mov
sbb
jmp
sti
stc
test
out
(bad)
mov
push
(bad)
shl
push
wrmsr
out
jg
pop
dec
jmp
push
jp
and
fcmovne
fnstsw
(bad)
mov
jg
lock
or
mov
leave
dec
popf
adc
inc
jb
addr16
sub
fadd
jb
call
ret
call
lds
fdivr
iret
sub
inc
std
sbb
(bad)
push
enter
imul
mov
mov
pop
in
popf
jecxz
push
mov
push
sub
loop
or
adc
or
loop
cs
(bad)
aam
inc
mov
call
movs
dec
es
sub
or
jmp
sub
xchg
in
icebp
mov
pop
dec
in
sbb
and
aaa
daa
ficom
adc
jp
or
jmp
test
aaa
pop
and
fucomi
clc
leave
outs
lods
pop
mov
xchg
inc
add
add
mov
repnz
fcomp
sbb
sti
fidiv
test
iret
add
aas
inc
cmp
cmp
mov
xlat
mov
adc
mov
push
and
loopne
pop
mov
jl
fucomi
cmc
or
popa
aam
pop
cmp
in
jns
pop
pop
movs
loope
loope
push
test
cmp
(bad)
cmc
outs
lods
ret
loope
imul
sub
lds
and
mov
shl
pop
inc
retf
sti
mov
std
xor
(bad)
push
inc
loop
arpl
int3
and
sub
les
and
mov
fdiv
out
jg
xchg
push
repnz
cmps
pushf
loope
inc
aas
and
mov
xchg
popf
mov
div
aad
push
outs
jne
fcmove
push
add
mov
fsubr
push
ja
adc
loop
movs
arpl
stos
inc
outs
push
das
sub
imul
push
add
aam
lods
xor
sbb
xchg
and
ret
dec
cmp
mov
jb
or
xchg
or
sub
imul
addr16
(bad)
xor
cmps
cli
xor
std
ss
mov
arpl
lahf
mov
jg
mov
test
les
cwde
dec
cs
aas
inc
or
not
ficomp
movs
imul
dec
and
lea
test
inc
lods
add
xchg
into
xchg
sbb
fs
mov
mov
mov
bnd
dec
pushf
mov
jmp
shl
xlat
jmp
jecxz
push
cmp
mov
cmp
(bad)
ficomp
sti
adc
and
jne
and
test
xchg
popf
jne
cmps
sbb
repnz
fdivr
imul
mov
lods
(bad)
mov
push
inc
test
mov
add
sbb
inc
and
push
xchg
cwde
out
retf
shl
mov
xor
out
add
fsubr
inc
pop
inc
jne
xchg
jp
stos
repnz
mov
fisttp
adc
cmp
pop
pop
movs
xlat
scas
add
jmp
cs
mov
mov
inc
mov
cmc
add
pop
xlat
sub
mov
fcom
outs
add
cmp
hlt
outs
ds
inc
add
imul
mov
and
and
jo
jns
das
les
mov
dec
and
retf
ins
add
xchg
and
pop
and
and
xchg
mov
aam
in
xor
ret
push
mov
sbb
out
out
push
push
cmovl
fs
(bad)
test
push
fdiv
jecxz
and
and
add
add
mov
frstor
shr
popf
jmp
stos
jo
mov
clc
xlat
imul
push
sahf
scas
cli
or
dec
clc
mov
not
xchg
aad
aas
pop
sub
pop
jecxz
jle
popa
out
sub
(bad)
test
out
or
jb
or
adc
es
mov
pusha
mov
popa
pushf
pop
mov
xor
push
add
test
das
sbb
in
sub
retf
cwde
pop
std
mov
fisttp
sbb
xor
dec
add
lods
xchg
mov
je
push
cwde
lahf
cmp
inc
or
mov
push
dec
in
aaa
pop
add
(bad)
imul
xor
xchg
lock
ret
lods
jns
enter
je
hlt
dec
ja
sbb
mov
xor
loop
fistp
add
or
or
mov
(bad)
xlat
dec
add
and
push
js
and
sub
jae
xor
add
pushf
cdq
cmove
sub
jae
mov
sbb
in
cmps
cli
cmp
fst
and
push
ret
test
mov
mov
jmp
ins
ret
and
fisttp
mov
pusha
mov
jno
aam
and
retf
mov
cmp
fs
and
cmp
inc
into
hlt
xor
mov
mov
ins
mov
mov
cs
test
xor
add
mov
lods
mov
dec
xor
scas
sub
test
jno
jb
and
xchg
jae
sbb
or
cmc
cli
inc
pop
pop
mov
popa
pusha
retf
fcom
xor
pop
int3
imul
xchg
xchg
in
out
push
out
loop
push
mov
sub
adc
xor
jne
or
popa
push
inc
popf
pop
xor
outs
ins
mov
sti
jmp
mov
aaa
outs
cs
inc
arpl
lods
rol
xchg
cmc
push
mov
mov
ins
pop
mov
(bad)
mov
xchg
into
loop
outs
jb
or
shr
fmul
sar
dec
xor
movs
pop
sti
fs
pop
lods
xchg
and
sbb
out
out
sbb
push
cs
rcl
ds
es
mov
(bad)
sti
das
push
dec
xor
mov
jp
retf
mov
cdq
in
push
or
pop
mov
retf
inc
sub
sbb
pop
inc
pop
inc
cmps
rol
adc
mov
push
in
pop
in
sbb
outs
stc
jl
push
inc
push
lahf
inc
mov
enterw
jle
sbb
imul
push
scas
outs
xchg
popa
mov
cmp
inc
pushf
add
in
add
aas
in
push
and
sbb
rcl
arpl
sub
sbb
mov
xor
mov
out
jbe
push
sub
sti
adc
sub
icebp
push
add
sahf
sub
xlat
or
stc
mov
push
cmp
and
add
movs
mov
jmp
or
out
jge
repnz
ins
pusha
xchg
bound
ins
xchg
mov
out
idiv
in
dec
into
outs
fcmovu
mov
call
ret
fld
outs
sbb
xchg
inc
pop
retf
push
push
inc
jmp
or
mov
(bad)
cli
or
hlt
ja
shl
rol
fs
jl
fmul
add
jo
or
aaa
cli
outs
or
stos
xor
jb
xor
inc
sub
aas
jns
cli
out
test
push
dec
sbb
leave
js
pop
pop
mov
das
xor
jns
test
in
add
dec
imul
jge
aas
jge
loopne
out
add
add
sbb
jl
pop
inc
stc
add
popf
mov
ja
cmps
out
ror
push
std
add
pop
lods
mov
push
jle
inc
fstp
jge
and
scas
shr
or
(bad)
mov
leave
ins
dec
push
aam
fst
sysret
aam
add
imul
out
xchg
or
in
or
adc
das
mov
jns
xchg
ins
pop
add
xchg
loopne
(bad)
push
sbb
imul
rcl
fsub
cmps
out
cmc
and
sub
shr
adc
fs
jmp
dec
sub
jg
adc
cmp
xchg
stos
xor
cdq
scas
lods
dec
clc
push
scas
inc
scas
test
xor
or
push
mov
stc
test
mov
aaa
mov
jne
cmps
pusha
stos
shl
rcl
das
xchg
mov
(bad)
bound
imul
sub
pop
jns
or
mov
and
or
pushf
arpl
cmp
lods
mov
sbb
inc
lods
scas
(bad)
fs
call
or
cmp
jmp
add
fidiv
call
stos
adc
sub
sbb
jmp
xor
pop
iret
repnz
call
in
test
add
shr
cwde
call
mov
mov
add
xchg
gs
sub
sbb
mov
leave
ret
mov
mov
xor
sub
adc
mov
xor
repz
in
mov
mov
cwde
retf
test
adc
ret
lahf
es
sahf
inc
cmp
jl
inc
test
jb
push
sar
push
adc
push
xor
inc
test
call
adc
(bad)
(bad)
cli
and
mov
loop
pop
mov
push
jnp
bound
repz
mov
sub
(bad)
and
inc
ror
jbe
ins
add
xchg
aaa
int
pop
jnp
xchg
jae
dec
out
cmp
jne
outs
and
pop
push
or
sub
lods
aaa
call
ins
and
cli
iret
stc
mov
dec
sbb
sub
dec
push
sbb
jle
(bad)
ds
in
out
loopne
test
xor
repz
in
xor
idiv
stc
les
les
mov
enter
push
sub
push
lahf
adc
aas
pop
adc
in
jg
adc
or
(bad)
mov
std
aad
rcl
nop
push
adc
aam
cdq
leave
cwde
sar
push
add
mov
das
xchg
aad
jo
add
daa
xor
loop
xchg
cmp
mov
sub
mov
dec
cmc
pusha
lock
push
in
stc
ret
fxch
push
fucomp
push
push
lds
adc
jno
pop
adc
mov
cmps
cld
jns
adc
mov
pop
call
xor
(bad)
je
fist
je
xor
mov
dec
add
test
imul
mov
sbb
cdq
sti
push
pop
fdivrp
sub
mov
cli
and
push
sbb
rol
and
sbb
jecxz
xchg
sbb
std
sbb
mov
fbstp
fsub
jns
pop
xchg
out
ja
xor
rcl
cmp
movs
pop
cmps
jne
jmp
pop
stos
jge
xchg
mov
cmps
adc
add
sti
repz
cmc
in
rcr
pop
pop
stos
retf
imul
sbb
(bad)
fldcw
push
mov
xor
sbb
pop
stos
mov
imul
cld
out
add
arpl
ja
inc
(bad)
add
loop
xchg
xor
and
test
rcr
pusha
ds
xor
pop
push
inc
push
mov
jp
fcmove
sub
lahf
std
iret
fadd
imul
cmps
stc
loope
cmps
push
jg
mul
mov
xchg
or
mov
neg
pop
retf
(bad)
out
(bad)
addr16
daa
(bad)
sub
add
mov
mov
fld
cmp
call
inc
mov
ins
mov
lahf
push
xchg
shr
pop
xchg
xchg
das
les
pusha
and
lahf
add
or
or
ret
sub
mov
and
inc
pop
test
mov
outs
out
bound
fidivr
xchg
out
(bad)
pushf
arpl
gs
repz
jns
pop
ffreep
arpl
movs
sbb
mov
pop
fcom
dec
mov
adc
mov
mov
xchg
pop
jno
(bad)
dec
repz
jnp
sbb
scas
popf
nop
adc
pop
push
mov
fstp
and
les
lock
jb
movs
aaa
ja
cdq
push
and
mov
xchg
mov
in
or
xlat
pop
fidiv
rcl
(bad)
sbb
or
mov
ins
ins
push
repnz
sbb
lods
leave
nop
mov
mov
add
cwde
std
nop
scas
loope
mov
jmp
pop
inc
mov
mov
test
dec
mov
mov
daa
add
xor
and
fdivr
inc
scas
jmp
ins
ins
adc
dec
inc
cmp
clc
jmp
jmp
and
and
and
pop
dec
rol
push
and
xchg
pop
fucomi
rol
aam
xor
lock
jmp
daa
adc
test
js
int3
xor
mov
inc
enter
dec
les
mov
or
add
pop
out
gs
pop
and
outs
push
mov
inc
cmp
out
and
push
dec
sbb
cwde
fwait
sar
add
mov
cmp
or
movs
mov
xchg
fdiv
test
in
push
jo
push
cmc
or
or
test
xor
movs
xchg
repz
cmp
ret
jg
stos
es
sbb
adc
jae
movs
jbe
sbb
pushf
jmp
stc
test
int3
lds
cs
(bad)
outs
icebp
sbb
in
bnd
push
pop
add
loop
(bad)
jae
add
outs
(bad)
push
pop
push
movs
test
cmp
and
dec
scas
daa
sub
in
mov
add
mov
and
pop
jae
xchg
lods
(bad)
retf
cmp
jmp
fwait
lock
and
test
cmps
mov
test
aaa
xor
inc
xchg
dec
sti
sbb
ss
jae
pop
xchg
add
out
jno
fs
fcomp
enter
xor
ficomp
pop
mov
sub
out
in
mov
leave
push
ret
outs
shr
push
fcomp
adc
sbb
dec
push
adc
pop
push
out
(bad)
jno
popa
xchg
xchg
scas
addr16
hlt
pop
add
or
pushf
pop
add
pusha
(bad)
jp
pop
xlat
mov
xor
dec
push
arpl
jb
mov
mov
hlt
outs
out
sub
jp
mov
mov
xchg
xor
shl
data16
lods
sub
call
ret
cmp
idiv
mov
mov
nop
mov
popf
inc
or
cmp
cmp
mov
dec
out
xor
fimul
lods
or
jecxz
or
add
or
es
addr16
pop
jg
and
fistp
xor
popa
jl
stc
push
ret
mov
in
add
shl
addr16
fmul
jg
add
and
jge
add
je
retfw
repz
mov
test
clc
es
test
or
add
jecxz
jecxz
leave
push
and
or
xchg
jae
jmp
adc
jecxz
mov
ins
push
push
(bad)
stc
div
fs
adc
rcl
lods
aaa
xchg
add
div
inc
inc
mov
inc
jg
(bad)
jecxz
jmp
mov
les
or
mov
dec
xchg
or
bound
lods
ja
mov
scas
scas
mov
xor
inc
sub
xor
xor
xor
int
or
dec
stc
arpl
mov
jge
sub
stos
sbb
fisttp
imul
(bad)
pop
scas
rol
into
clc
xor
rol
psubsw
mov
dec
sbb
mov
fnsave
pop
aam
ins
scas
out
xor
jmp
cmps
fcomp
mov
mov
and
lea
adc
(bad)
push
and
push
retf
imul
scas
cmps
ins
je
fiadd
pop
movs
jo
pop
lods
xor
or
aam
je
mov
sahf
out
ror
stos
add
jmp
sbb
dec
std
retf
adc
call
dec
ins
jl
or
outs
jmp
jno
adc
mov
pop
call
or
aam
pop
and
xchg
cmc
cmp
out
mov
push
sub
dec
nop
mov
mov
loopne
sbb
cli
pop
lock
pop
fisubr
mov
in
and
fild
mov
stos
push
adc
jno
inc
(bad)
mov
adc
out
out
jg
xchg
out
xchg
loopne
enter
xchg
sbb
aaa
cmp
sub
jle
jae
mov
add
push
shr
in
and
lods
out
fwait
aaa
rcr
pop
mov
pop
add
imul
xchg
mov
icebp
and
out
in
imul
xchg
fisttp
jmp
icebp
ret
mov
cs
mov
mov
push
mov
clc
cmps
jbe
sub
mov
imul
jmp
out
(bad)
test
in
mov
jmp
pop
retf
sub
or
dec
mov
kmovw
cmc
ret
outs
adc
movs
rol
jl
sbb
cdq
xchg
mov
xchg
xor
cmp
dec
ret
xlat
mov
rcr
jae
jle
inc
mov
es
ror
and
adc
lods
mov
stc
cld
stos
inc
mov
aad
xor
pop
push
pop
cwde
int
cld
xor
(bad)
(bad)
jmp
retf
arpl
pop
fbld
mov
enter
add
pushf
data16
repz
mov
lods
sub
mov
mov
pop
popa
and
rcr
pop
jo
test
mov
out
xchg
sub
neg
inc
scas
and
push
xchg
addr16
inc
xchg
icebp
xchg
int3
pop
data16
mov
add
xor
sbb
cmp
lods
and
mov
adc
cmp
push
jle
sbb
or
cs
pop
int
mov
imul
jl
adc
mov
xchg
imul
dec
and
or
aaa
jno
mov
add
cmp
das
inc
push
pusha
mov
mov
adc
out
jle
mov
mov
out
cmp
aam
lea
test
std
xor
xchg
fldcw
mov
test
push
(bad)
enter
xor
jmp
pop
mov
(bad)
cmp
jl
xlat
sbb
jae
dec
in
out
imul
sbb
push
mov
dec
dec
and
xchg
push
and
mov
pop
inc
out
out
and
or
add
dec
push
sub
jmp
xor
adc
or
pop
mov
call
mov
aam
ss
outs
jnp
sub
jle
scas
aaa
stc
jle
out
mul
daa
lods
mov
imul
push
jg
push
and
and
pop
inc
lds
popf
cmp
xor
dec
mov
pop
mov
dec
sbb
test
push
mov
adc
mov
scas
mov
js
popf
ror
jbe
movs
push
outs
sti
daa
sub
jno
fdiv
and
or
iret
add
jo
sub
pusha
cmp
pushf
cmc
mov
pop
into
scas
test
xchg
adc
mov
jge
mov
inc
hlt
(bad)
dec
or
add
(bad)
jae
cld
scas
jecxz
in
cmp
jmp
fdivr
iret
int3
cmp
imul
or
xchg
jg
pop
in
xchg
leave
fidivr
inc
cmovo
jnp
ins
je
mov
mov
dec
adc
shl
dec
lods
adc
retf
inc
push
mov
cmps
outs
push
push
ret
mov
push
sahf
and
(bad)
nop
(bad)
and
adc
mov
mov
push
retf
dec
ja
shl
cmp
dec
sbb
shl
pop
sub
jg
xchg
inc
jb
mov
js
jmp
or
pop
cmp
nop
or
mov
test
daa
mov
xor
push
pop
mov
sbb
pushf
jb
pop
xchg
cld
test
xchg
push
or
js
icebp
xchg
jle
test
hlt
mov
fnstcw
jg
mov
jp
push
adc
and
inc
sbb
sar
jne
js
or
adc
cmps
div
xchg
sub
int
fidiv
dec
inc
(bad)
out
inc
(bad)
and
(bad)
cdq
push
pop
pop
push
xchg
xor
fidiv
ins
adc
mov
inc
shl
sbb
cmps
scas
test
and
add
in
sbb
frstor
imul
shl
aad
adc
and
xchg
gs
movs
sub
dec
mov
out
repz
xchg
or
mov
std
inc
sbb
cmp
call
jnp
add
test
push
dec
pop
aas
fidiv
in
pusha
int3
add
div
dec
stos
cs
stos
sub
jns
int
mov
int
add
mov
(bad)
inc
inc
aad
rcr
adc
js
mov
sub
mov
push
(bad)
and
jl
(bad)
int
pop
push
stos
jp
pop
cmp
mov
push
aam
dec
xchg
test
rcl
xor
std
dec
push
or
inc
pop
mov
lock
fist
ret
cmp
pop
jmp
mov
scas
and
mov
pop
push
outs
mov
dec
(bad)
out
cmp
mov
lods
cwde
inc
adc
pop
lods
les
sub
pop
dec
or
pop
adc
mov
lahf
retf
or
push
inc
in
outs
jg
not
shl
daa
mov
ins
add
add
inc
cld
or
aaa
(bad)
push
mov
sbb
imul
stos
add
mov
dec
and
xchg
out
sahf
push
in
ds
clc
adc
enter
cmps
int
(bad)
sub
pop
repnz
enter
pusha
pop
jno
rcr
ins
mov
fadd
js
add
xchg
mov
and
outs
neg
sub
fsubrp
pop
scas
es
out
hlt
push
pop
fwait
and
mov
lock
or
push
xchg
inc
dec
inc
imul
cmp
fs
in
popf
dec
cli
sbb
dec
stos
cdq
movs
and
mov
xchg
push
sub
mov
jg
lock
nop
mov
push
sbb
retf
mov
add
xchg
xchg
lods
ret
(bad)
loopne
ins
lods
imul
push
dec
jmp
jle
jmp
jp
xchg
sbb
scas
pop
std
std
mov
mov
pushf
in
push
out
pop
fidiv
jl
push
(bad)
add
mov
mov
xchg
(bad)
(bad)
call
adc
adc
add
outs
add
rol
test
inc
add
imul
jge
xor
ins
sbb
pop
jbe
mov
add
retf
sub
aas
mov
or
add
fst
in
test
and
scas
fisttp
cdq
cmc
dec
enter
das
push
mov
push
enter
jbe
in
in
mov
adc
cld
jge
jns
and
jbe
dec
ficom
push
sbb
test
lods
jnp
jg
or
ds
inc
mov
jnp
add
lea
add
xor
cmp
mov
jb
or
jg
pop
(bad)
cmp
adc
adc
scas
and
loopne
or
int
ins
dec
jb
inc
sbb
lock
call
add
add
jb
push
jae
retf
gs
sub
jnp
jl
inc
fisub
add
ins
and
sub
push
js
out
call
adc
sbb
sahf
imul
mov
sbb
inc
retf
in
(bad)
or
movs
pop
cmc
xchg
mov
lea
mov
cmps
ins
jno
mov
stos
sar
xor
(bad)
call
cdq
or
ficom
inc
je
aaa
gs
addr16
jae
pop
loop
neg
push
push
mov
cwde
outs
dec
cmp
(bad)
retf
test
stos
cmc
cmc
repnz
outs
movs
fistp
push
push
dec
xor
and
scas
or
adc
retf
and
pop
xor
fcomp
mov
fadd
dec
movs
or
pop
mov
sti
xchg
clc
loope
jns
inc
sub
pop
push
jae
or
mov
int3
icebp
or
dec
pop
cmp
mov
xchg
arpl
jl
inc
aad
ret
(bad)
xchg
mov
jg
ss
test
cmc
mov
inc
mov
iret
aas
push
pop
xchg
mov
push
movs
mov
inc
sub
jle
mov
fidiv
sbb
cmp
test
add
cmc
push
cmp
add
stc
movs
sbb
lahf
adc
pop
lea
sbb
and
jno
mov
arpl
popa
imul
test
xchg
int
pop
ds
not
ss
(bad)
retf
pop
and
shl
scas
cmps
int
push
push
jo
cmp
sub
enter
adc
mov
loop
xchg
stos
mov
sub
(bad)
lock
and
jge
rcr
enter
fwait
mov
stc
es
inc
sbb
jnp
xor
scas
mov
call
pop
xchg
xor
mov
push
sbb
jnp
sub
cmp
dec
inc
pusha
add
mov
aad
mov
cmps
aam
imul
sbb
sbb
or
dec
mov
arpl
cmc
shl
ja
mov
or
dec
in
fcmovne
jg
test
movs
adc
mov
cli
sbb
(bad)
mov
and
pop
(bad)
aas
inc
imul
mov
shl
ror
mov
iret
add
fisub
cld
stos
into
jge
mov
mov
cmps
inc
push
mov
movs
je
push
ins
lahf
xor
out
mov
pop
fbld
out
xor
pop
inc
inc
pusha
or
mov
adc
jb
fcomp
and
pop
jle
add
sub
addr16
cmp
pop
das
fstp
movs
sbb
fwait
(bad)
cs
sti
inc
cmp
inc
xlat
in
push
imul
push
lock
shl
ficom
adc
push
pop
mov
int
push
popa
xchg
stos
adc
mov
push
xor
mov
sub
xchg
dec
jns
iret
in
and
daa
ss
sti
fcom
imul
mov
cmc
sub
mov
push
xor
push
fcom
(bad)
(bad)
rcr
sub
sbb
imul
pop
mov
test
call
aas
push
mov
inc
jecxz
fisttp
icebp
movs
icebp
ja
les
(bad)
dec
sti
xor
lahf
ret
bound
ins
mov
daa
jmp
mov
sbb
inc
lea
xchg
gs
adc
xor
sub
inc
sbb
ins
dec
out
and
adc
mov
ds
(bad)
ss
inc
sub
mov
push
mov
pop
cdq
pop
jecxz
xor
mov
cs
jg
mov
inc
cld
lock
push
lahf
and
lock
dec
call
fimul
in
adc
(bad)
aaa
or
jb
jne
ret
repz
out
mov
add
and
inc
(bad)
cmp
in
and
call
fdivr
or
aaa
dec
fst
ja
dec
xchg
pusha
push
sti
cli
pop
aas
imul
mov
xor
or
mov
or
mov
jmp
movs
imul
ins
cmp
mov
jp
and
dec
(bad)
aam
add
or
lods
dec
sbb
data16
adc
sub
add
jp
jmp
imul
lds
lds
sbb
add
xchg
out
not
add
popf
neg
and
add
add
add
ins
mov
adc
stos
out
rcl
loop
mov
test
fsub
call
retfw
dec
or
dec
cmps
xchg
int3
vhaddps
pop
leave
and
sub
push
and
popf
cmp
test
stc
cwde
aam
and
lods
cmc
adc
xchg
inc
sti
mov
pop
bound
fisttp
iret
popa
mov
mov
dec
pop
fnsave
rol
sti
shr
lds
bound
mov
out
xor
shr
inc
gs
add
push
cmp
sub
clc
or
and
cmc
aad
mov
ds
loope
jle
loopne
out
jg
movs
xor
pop
mov
inc
jb
popa
xor
test
adc
jg
scas
fadd
out
or
loope
jge
scas
lds
adc
loopne
or
jl
sbb
dec
ins
gs
add
cmp
jmp
and
dec
es
push
jecxz
loopne
ja
sbb
sbb
hlt
mov
popa
add
sbb
clc
outs
pop
leave
aaa
in
fadd
mov
inc
scas
in
test
ret
pop
call
test
pop
lock
mov
xchg
sub
mov
mov
gs
dec
mov
pop
push
test
ds
and
mov
push
mov
in
mov
cmc
pop
jle
loopne
retf
fnsave
xor
aaa
inc
ja
(bad)
retf
std
test
xchg
xor
lds
mov
call
push
dec
push
(bad)
push
shl
inc
mov
xchg
ret
mov
xchg
fidiv
push
dec
das
fcompp
fisttp
test
and
xor
(bad)
pop
mov
pop
inc
sub
sbb
cs
jo
mov
rcl
aas
dec
imul
sbb
cmps
pop
push
pusha
sbb
jg
add
add
int
sub
sub
cmp
fild
push
xchg
das
jnp
xor
test
ror
inc
add
jnp
xchg
push
mov
fistp
and
fild
jno
mov
xor
lahf
jl
sbb
mov
gs
jmp
in
mov
aam
inc
dec
xor
dec
retf
xor
lock
adc
jp
mov
in
sub
mov
adc
mov
bound
jmp
mov
xor
(bad)
cmp
cmp
fmul
mov
or
dec
sbb
je
in
sub
jge
push
popa
mov
cmps
cmp
add
add
adc
dec
xchg
xchg
mov
outs
jmp
push
and
and
call
call
test
add
mov
and
mov
cmp
fdiv
xor
imul
cmp
cmp
xor
imul
cmps
push
test
mov
push
cmp
or
scas
xor
add
dec
in
push
push
dec
jmp
mov
aam
pop
add
mov
push
ds
jne
lods
dec
les
out
sub
cmp
xor
or
mov
add
outs
repnz
push
(bad)
ds
hlt
xchg
ret
xlat
push
(bad)
shl
ja
repnz
and
lahf
fwait
cwde
jo
lods
mov
or
inc
clc
mov
mov
rcl
loope
sbb
push
ja
mov
iret
sub
enter
ins
cs
mov
adc
sbb
sub
push
sbb
jmp
push
jo
es
cmps
sbb
mov
jecxz
test
pop
dec
or
inc
inc
xchg
(bad)
(bad)
stos
inc
and
enter
ror
mov
mov
pop
cmp
and
fucomp
xlat
push
bound
stos
stos
mov
push
dec
loop
loopne
js
call
mov
pop
cdq
inc
mov
xchg
and
std
cmp
mov
xchg
daa
add
and
or
jno
and
xor
jo
test
jno
mov
and
jae
add
sub
sbb
adc
dec
mov
mov
out
xlat
pop
mov
sbb
pop
pop
xlat
add
in
test
mov
ret
movs
adc
inc
movs
std
jmp
outs
sub
scas
sbb
pause
out
jge
sbb
call
mov
aas
cmc
push
xor
cmp
inc
fwait
mov
jns
(bad)
mov
pop
fidivr
adc
ds
push
arpl
jae
lods
inc
xchg
ja
outs
(bad)
adc
xchg
aad
lods
jae
push
imul
test
mov
ds
es
mov
or
push
dec
sub
mov
cdq
sub
xchg
jne
retf
js
mov
xchg
mov
pop
sbb
fisub
xor
outs
pop
pop
dec
add
and
dec
cld
cs
mov
movs
fnsave
aaa
or
test
stc
sbb
or
push
pop
or
push
sbb
cmp
push
in
mov
xchg
movs
in
cmps
pop
mov
sbb
mov
je
fcom
es
into
popf
jne
jns
push
sub
dec
push
aam
mov
xchg
sbb
jmp
inc
gs
inc
cmp
push
inc
call
stc
dec
popf
push
dec
xor
dec
cdq
mov
scas
into
jge
stos
ins
test
imul
sahf
xor
jbe
sub
in
std
mov
pusha
ss
push
into
inc
call
mov
test
push
add
arpl
mov
mov
arpl
jecxz
push
call
push
mov
or
lods
jae
clc
and
and
clc
cmps
jmp
std
add
scas
and
pop
mov
imul
cld
jno
add
(bad)
js
(bad)
ja
mov
popa
sub
add
sbb
fisttp
mov
add
xor
xchg
leave
mov
cmp
fisub
out
sbb
inc
cmp
(bad)
jmp
inc
movs
pop
cmp
sub
movs
adc
arpl
xchg
in
test
repz
in
sbb
pop
mov
xchg
xor
loop
inc
mul
push
jns
movs
leave
mov
int
jae
push
jecxz
pop
je
dec
fsubr
dec
and
or
je
and
shr
dec
out
call
stos
and
jp
mov
mov
mov
addr16
(bad)
pop
fnsave
fdivr
mov
call
mov
xor
add
lods
int
mov
mov
and
dec
sbb
rcl
inc
cmp
retf
div
ss
mov
xor
in
imul
loopne
pop
mov
sbb
xchg
and
out
dec
mov
pop
xor
lea
test
(bad)
jg
repz
sar
xor
sbb
pop
sbb
adc
les
cmps
add
inc
scas
ret
sldt
mov
lahf
add
push
nop
jo
retf
cmp
(bad)
pop
in
sbb
std
nop
mov
ja
lock
add
pop
inc
push
cmp
daa
mov
pop
fld
jecxz
in
or
and
cmps
xchg
scas
fs
enter
pusha
(bad)
call
jo
add
or
enter
cmp
xchg
cli
pop
inc
xchg
xor
xor
adc
pop
inc
sbb
and
and
mov
jecxz
dec
jmp
sub
loop
je
cdq
retf
ins
mov
or
ins
xor
lock
fsub
dec
xchg
ds
add
fs
mov
pop
push
adc
inc
aam
sub
jno
mov
pop
sub
sbb
push
sub
lods
xchg
pop
data16
in
adc
rcl
retf
jle
nop
sub
cmp
push
icebp
das
push
test
std
xor
stos
sahf
inc
rcl
ror
fwait
inc
inc
lahf
xor
mov
mov
xchg
mov
cmc
repnz
jns
adc
adc
mov
(bad)
stc
xchg
(bad)
test
sbb
(bad)
and
stos
cmp
adc
jmp
sub
mov
mov
loop
pusha
pop
adc
mov
popf
ss
test
mov
in
add
hlt
xchg
pop
pop
or
adc
cmp
inc
pushf
repz
pop
iret
dec
lahf
mov
mov
sbb
cmp
ds
clc
std
add
rol
mov
pop
or
xlat
and
nop
cmp
or
xchg
stos
mov
push
push
imul
call
ds
and
stos
mov
stos
fcomp
retf
pop
imul
add
(bad)
sti
adc
ret
bound
pop
jp
adc
int
sahf
dec
cli
push
cmps
inc
xchg
push
fisttp
push
out
or
jmp
jecxz
xor
xor
push
jbe
fnsave
leave
das
scas
xor
idiv
xchg
outs
aaa
jl
in
jge
fisub
cmps
pop
(bad)
ins
test
pop
lods
aas
jecxz
push
rcl
clc
fiadd
xlat
dec
and
stc
sbb
xchg
mov
pop
js
mov
xchg
jb
repz
jmp
and
loope
and
cs
lods
js
mov
in
sahf
jmp
xor
sub
fadd
adc
pop
mov
cmp
or
xor
js
ret
pop
push
jmp
(bad)
pop
mov
std
jbe
mov
sub
call
inc
mov
out
add
das
mov
or
retf
fucom
cli
hlt
(bad)
es
push
ds
add
and
push
or
test
cli
aad
jae
sti
ror
aas
pop
inc
inc
xchg
inc
dec
hlt
loopne
sub
das
jne
ins
rol
sbb
cmp
cmp
jl
sbb
imul
push
cmp
popf
mov
jne
mov
js
(bad)
icebp
mov
daa
inc
stc
idiv
jmp
div
emms
(bad)
idiv
mov
fld
ins
inc
xchg
cmp
jmp
jno
ja
mov
das
loopne
dec
and
nop
aaa
arpl
shr
inc
int
xchg
cld
jo
cdq
xor
pop
ins
xchg
aad
push
sbb
push
dec
sbb
retf
pop
and
mov
lods
je
jae
inc
fcompp
imul
rol
scas
or
test
dec
mul
or
sbb
push
loop
repnz
in
jae
stc
outs
lock
jno
es
dec
(bad)
scas
mov
xchg
push
cmp
js
cmp
(bad)
jbe
or
adc
call
sbb
inc
inc
(bad)
xor
inc
lods
add
mov
fnsave
scas
and
mov
mov
js
mov
xchg
popf
fidivr
pusha
movs
retf
test
inc
enter
inc
jmp
cmp
nop
adc
adc
pusha
or
pop
mov
add
jo
add
lods
or
xor
xchg
arpl
sbb
adc
mov
lods
mov
cmp
pop
push
pop
and
sbb
arpl
sbb
idiv
ins
mov
mov
and
pop
fisttp
jle
sti
(bad)
fsub
ficom
inc
out
aam
out
xlat
push
ret
jb
arpl
and
jg
inc
dec
pusha
sbb
mov
pusha
into
push
push
cld
jmp
outs
fs
pop
mov
sti
pop
out
jmp
and
cmp
ds
dec
dec
or
mov
jl
in
and
mov
int
pop
mov
scas
lods
pop
rcl
mov
and
imul
mov
sbb
push
xlat
adc
neg
int3
jl
xor
xor
sub
jns
ins
std
shl
push
mov
loopne
pop
repz
ret
ja
mov
and
ror
push
sbb
shl
add
es
test
or
mov
sahf
jg
and
rcr
add
push
cmp
cmps
xor
push
test
inc
aad
pop
rol
inc
stos
xor
ret
(bad)
into
mov
add
cmp
(bad)
test
jmp
xchg
push
jecxz
into
cmp
cli
mov
push
mov
lahf
pop
lahf
jp
jmp
popa
cmp
add
jmp
or
ror
mov
mov
sub
lock
loope
in
ret
xchg
and
sbb
ins
push
xchg
sub
push
into
(bad)
mov
inc
adc
rep
ror
mov
pop
addr16
xchg
mov
into
inc
int
lea
fisttp
mov
(bad)
js
sbb
fwait
mov
das
ins
push
xchg
out
fstp
ret
(bad)
hlt
cld
sbb
and
xchg
and
std
jmp
fst
cli
fnsave
shl
ror
retf
in
lock
inc
pop
xchg
and
jl
xchg
and
movs
dec
out
test
or
std
xor
(bad)
icebp
loope
movs
mov
mov
in
pop
push
adc
retf
enter
xchg
shl
or
xchg
sbb
mov
addr16
in
mov
xchg
sbb
mov
mov
or
lods
xchg
popa
imul
jae
daa
inc
(bad)
pop
outs
push
retf
cmp
mov
call
(bad)
shr
sbb
dec
das
fnstenv
enter
inc
or
sub
cmc
mov
mov
sti
loope
xchg
out
mov
fimul
xchg
push
mov
cmp
out
arpl
(bad)
clc
jo
stc
jmp
int
push
inc
cmp
sub
and
sub
xchg
mov
or
dec
sbb
in
test
cmps
push
mov
pushf
push
inc
sub
das
psllq
in
fnstcw
(bad)
fisttp
xchg
jge
mov
adc
shr
mov
js
(bad)
pop
mov
leave
ss
pop
sub
fucomi
dec
(bad)
mov
adc
inc
push
xchg
xchg
push
pop
push
(bad)
push
scas
sbb
and
add
jae
cmps
xor
push
xor
adc
adc
mov
stos
and
mov
pop
pop
ins
sahf
push
ficomp
add
rcr
lods
test
push
outs
mov
mov
es
dec
outs
adc
push
call
jbe
fld
add
push
pop
pop
sti
aas
mov
(bad)
push
test
pop
cli
lahf
jns
dec
mov
push
test
adc
iret
test
xchg
jo
push
ins
lahf
lods
mov
sub
clc
cdq
shr
pop
push
mov
stc
lock
lods
fild
aam
cdq
xchg
cmp
mov
mov
in
xor
mov
push
stc
adc
sahf
mov
lea
jmp
pop
daa
das
push
fist
sub
ins
xchg
repnz
cmp
adc
inc
lods
in
dec
mov
and
dec
cmp
mov
push
daa
loope
pop
add
sbb
div
xchg
mov
ins
or
xchg
std
pop
pop
and
push
cmps
loop
push
pushf
jo
mov
fisub
mov
xor
aas
les
xor
(bad)
js
xor
(bad)
(bad)
aaa
push
jbe
adc
dec
(bad)
and
jbe
inc
adc
outs
add
idiv
sti
mov
test
aaa
mov
mov
ds
inc
outs
sti
adc
mov
aas
pop
push
xchg
lds
push
xor
mov
mov
mov
mov
cmp
add
sbb
mov
mul
mov
lock
pop
addr16
dec
pusha
and
sbb
push
cmps
dec
mov
add
(bad)
xchg
dec
clc
pop
jp
mov
pop
call
daa
pop
or
sub
inc
dec
test
jbe
pop
das
inc
or
(bad)
ins
pusha
push
mov
jns
sbb
(bad)
(bad)
and
mov
fcmovbe
push
jmp
add
pusha
jge
addr16
sub
mov
mov
shl
cmp
jae
mov
int3
ins
cmp
fs
in
sbb
ds
mov
test
dec
xor
and
push
stc
sbb
icebp
add
in
push
pushf
sub
pop
inc
pop
popa
les
jmp
inc
sbb
and
jbe
out
or
loopne
loop
movs
mov
int3
mov
or
mov
mov
inc
sub
mov
mov
mov
add
xor
xor
ja
mov
imul
mov
pop
jmp
imul
xor
mov
fmul
jle
mov
cwde
mov
adc
into
dec
mov
sub
or
cmp
inc
inc
(bad)
mov
mov
push
mov
cmp
and
and
ret
sbb
jnp
fild
mov
cdq
in
sar
cmp
fwait
(bad)
adc
in
add
loope
xchg
data16
push
jmp
das
add
repz
sub
aad
mov
inc
inc
push
imul
mov
push
stc
sbb
jecxz
call
pop
inc
call
push
jl
ss
ins
fdiv
push
(bad)
fild
adc
rcl
xchg
icebp
xor
sub
stc
mov
sbb
out
mov
mov
(bad)
loope
inc
daa
call
jo
jne
out
push
xchg
out
clc
out
loop
outs
es
jbe
mov
sub
push
jo
sub
add
lods
jno
add
in
ins
jo
add
in
and
dec
fwait
pop
and
xlat
cld
test
js
xchg
add
les
int3
mov
stos
inc
aam
dec
or
hlt
into
in
lock
adc
inc
iret
les
push
and
jecxz
stc
icebp
jo
sub
dec
sbb
jge
(bad)
fwait
repnz
hlt
xchg
mov
cmps
pop
pop
xchg
daa
aam
push
cld
ret
and
popa
add
imul
dec
leave
call
mov
adc
push
inc
jg
(bad)
push
cdq
fcmovnu
aam
icebp
daa
movs
sti
rcr
xlat
sar
call
iret
cmp
ss
mov
add
inc
int3
jle
js
add
ins
or
and
mov
xlat
fwait
push
pop
xor
lock
xchg
or
cld
inc
add
jecxz
jmp
xchg
mov
inc
add
dec
lods
(bad)
test
mov
push
jg
push
fldenv
or
mov
in
add
iret
mov
ja
inc
or
(bad)
ror
mov
and
pop
mov
popa
sub
pop
fnstenv
call
adc
pusha
mov
pop
lods
icebp
mov
jae
push
sar
es
repnz
je
mov
ficom
dec
cmp
movs
push
sbb
or
fwait
xor
pop
retf
jb
cs
xchg
into
xlat
or
test
jnp
adc
mov
scas
(bad)
dec
pop
sub
nop
in
das
add
fnsave
xor
xchg
sub
sub
mov
push
ins
popa
ins
cmps
inc
rcr
mov
rol
push
cmp
fnstenv
inc
js
dec
outs
pop
out
mov
fdivr
stos
push
test
rcl
adc
jne
cmps
cli
sti
and
sbb
jne
loop
xchg
in
lahf
jne
mov
cmps
sbb
jmp
rol
and
(bad)
test
pop
lock
sub
and
push
jg
lods
lock
or
mov
xchg
add
inc
cmp
inc
je
xchg
jo
test
add
xchg
dec
out
mov
lods
iret
(bad)
je
out
pop
shr
scas
sbb
push
cld
xlat
xor
sub
xor
jb
test
ficomp
pusha
cmp
movs
push
push
sub
and
inc
js
rcr
jo
mov
out
dec
ret
xchg
mov
scas
sub
scas
ss
inc
sub
adc
xor
and
nop
mov
push
es
adc
sub
pop
in
or
sti
sahf
pop
push
and
xor
popf
dec
daa
stos
jg
mov
and
pop
or
sub
mov
and
jo
xchg
(bad)
in
jmp
sbb
dec
cmp
mov
jno
jns
pop
xchg
cmp
sub
outs
stos
enter
add
leavew
movs
add
fld
repnz
jne
shr
mov
dec
dec
jbe
scas
pop
add
jae
hlt
mov
sbb
dec
ror
and
mov
test
pop
mov
test
adc
aad
sub
push
test
fisub
js
aas
loope
lds
stos
neg
pop
dec
push
adc
lods
lock
pushf
test
ja
in
movs
mov
dec
sbb
out
xchg
call
loop
pop
sub
xchg
and
int3
inc
adc
mov
lds
adc
sbb
int3
ret
out
push
xor
hlt
mov
lds
(bad)
jmp
or
xor
popa
cmc
pusha
(bad)
bnd
rcl
dec
iret
(bad)
push
int
push
lea
out
outs
fadd
and
sbb
mov
stc
sti
pop
mov
adc
mov
iret
retf
movs
xor
xor
xor
lea
call
in
push
icebp
mov
sub
xor
pop
ror
xchg
fdiv
mov
sub
out
jno
ins
in
gs
jmp
rcl
fnstsw
push
pop
sahf
or
mov
and
dec
mov
push
ret
sahf
pop
stos
mov
inc
int
mov
inc
dec
(bad)
enter
cmp
sbb
or
sub
cmp
jns
mov
arpl
cmp
imul
adc
dec
hlt
add
xchg
sbb
jge
jno
pop
hlt
jmp
or
stc
xor
cwde
dec
mov
xchg
pop
fdiv
movs
ret
xor
(bad)
inc
xchg
inc
aaa
les
or
cmps
xor
ins
sar
mov
jae
leave
imul
out
xchg
enter
js
xor
xchg
das
movs
jmp
xchg
and
push
xor
aam
mov
pop
aas
jno
adc
test
in
(bad)
push
mov
pop
and
mov
mov
add
ins
movs
cdq
jae
test
mov
test
jb
push
mov
popa
inc
sbb
pop
jp
addr16
jl
add
jnp
pop
or
cmps
xchg
(bad)
outs
dec
ror
retfw
ret
shl
sbb
dec
test
(bad)
jo
xchg
adc
movs
dec
in
lods
inc
xchg
inc
jge
pop
scas
retf
and
out
and
jo
(bad)
xor
pushf
data16
add
push
lods
leave
mov
leave
or
jbe
popf
aaa
pop
cmp
js
xor
scas
mov
adc
(bad)
xlat
js
fsub
sub
and
adc
mul
cmps
mov
gs
stc
dec
xchg
ds
or
mov
mov
push
arpl
dec
es
fild
sahf
mov
cmp
imul
cmp
add
out
aaa
aam
inc
imul
jnp
xor
aaa
dec
sbb
xor
fs
cmps
xchg
xchg
adc
adc
sti
cmps
test
push
jbe
push
xchg
movs
(bad)
xchg
adc
div
push
xlat
xchg
inc
in
pop
dec
or
fild
inc
add
js
xchg
push
call
dec
adc
bound
adc
jns
push
add
fild
xchg
in
inc
mov
cmp
pushf
and
push
xlat
call
mov
movs
sbb
push
and
ret
jns
jle
push
pop
adc
lods
xor
stc
(bad)
mov
call
imul
or
mov
aas
or
test
js
repnz
push
push
(bad)
mov
jb
into
test
jns
iret
xchg
data16
cmp
add
or
or
(bad)
out
xchg
mov
add
jmp
mov
sbb
sub
mov
or
xor
adc
movs
pop
pusha
lock
iret
sti
es
mov
mov
stc
cmp
or
sti
lahf
int
cli
jmp
bound
retf
add
cmp
sbb
rcr
sbb
and
mov
mov
push
xlat
pop
or
mov
dec
scas
adc
mov
pop
mov
mov
ins
mov
vprotb
(bad)
cmp
sub
mov
ins
dec
repz
ss
out
retf
cmc
jp
dec
pop
push
and
out
push
push
xchg
jmp
fs
sbb
retf
xor
inc
outs
popf
cmp
dec
xchg
stos
xor
add
or
mov
movs
jle
xchg
mov
mov
mov
cmp
ror
push
lods
iret
test
inc
aas
mov
xchg
pop
adc
sbb
aas
daa
in
and
and
mov
lods
xchg
pop
inc
sbb
dec
sbb
dec
pop
adc
jae
fs
rcl
loop
cmp
xchg
popf
into
bnd
xchg
pop
lods
sbb
or
add
int
std
sbb
cmp
cmc
or
jg
add
mov
xor
cmc
or
or
push
(bad)
lods
mov
mov
cli
out
lods
cmp
or
inc
movs
in
mov
enter
or
out
stos
pop
fimul
mov
cmps
xchg
or
arpl
out
leave
fnstsw
loope
out
ds
dec
gs
fst
repz
add
out
mov
mov
lods
into
scas
xor
jns
mov
cdq
dec
mov
inc
rol
int
rol
enter
jb
pop
sbb
test
cmp
add
pop
dec
cmp
ins
mov
mov
daa
cli
mov
and
jg
outs
push
adc
imul
scas
mov
retf
or
loop
add
cmp
movs
mov
je
cmps
dec
adc
cmp
(bad)
push
gs
out
xchg
push
movs
loope
pop
mov
or
adc
cli
scas
movs
mov
cmp
pop
add
cmp
xor
mov
sbb
(bad)
enter
retf
pushf
xchg
arpl
stos
add
cmps
shr
ins
adc
sbb
mov
ins
stc
pop
mov
ficomp
mov
loop
outs
repz
cmp
xlat
pop
aam
outs
sbb
test
xor
or
out
jne
mov
pop
scas
pushf
push
push
dec
int
push
out
jmp
sub
data16
outs
test
sbb
fld
add
int3
sub
sbb
sti
and
(bad)
arpl
cld
dec
xor
pop
rcr
es
aad
shr
cmp
add
jmp
(bad)
mov
jg
add
ins
inc
lock
add
in
mov
cmp
and
pop
pop
rol
call
pop
dec
add
mov
xor
add
fs
jno
cmps
sbb
push
stc
call
pusha
aam
xor
pop
dec
cld
mov
xchg
ja
add
lds
jne
dec
add
movs
test
enter
retf
push
dec
and
je
mov
rcr
cld
xor
enter
fsubr
out
fild
rcl
mov
add
in
enter
xor
aad
jns
fild
xor
loop
adc
imul
and
sar
movs
pop
xchg
jnp
push
pop
ficom
push
mov
jbe
push
sbb
mov
mov
push
or
xchg
xchg
or
nop
test
ins
aas
(bad)
push
inc
or
mov
adc
jle
shl
pop
and
add
jbe
test
cli
out
out
xchg
clc
sbb
ins
imul
or
and
lds
sti
int
jg
cmp
shr
in
test
push
xor
psubb
xchg
sar
not
pop
sub
jns
pop
repnz
cdq
jmp
lods
dec
add
(bad)
test
and
ret
or
nop
stos
push
jl
test
call
shl
push
pop
(bad)
jae
lahf
je
mov
sub
sub
or
jecxz
test
loop
ins
(bad)
cli
xchg
iret
in
mov
dec
loope
ror
lea
adc
nop
jg
xor
push
mov
(bad)
cmp
fbstp
inc
xor
jmp
xchg
es
or
test
push
cwde
push
jl
aad
mov
jmp
lds
pop
mov
retf
and
(bad)
pop
mov
rcr
mov
or
data16
outs
adc
pop
mov
movs
adc
push
push
cld
(bad)
mov
mov
pop
ror
daa
enter
xchg
ds
jl
jp
cmp
ret
out
out
iret
add
xchg
sub
aaa
stos
out
fst
dec
aas
push
mov
fimul
fs
mov
lods
push
jae
lock
mov
(bad)
push
sub
adc
lahf
es
fisub
mov
ins
ret
(bad)
sbb
(bad)
pop
punpcklwd
mov
out
js
lods
mov
aaa
jnp
aas
das
sbb
mov
mov
test
xor
in
push
add
cdq
pop
add
leave
lods
jmp
or
pop
in
cmps
cmp
iret
pop
outs
push
in
jb
imul
mov
cmps
icebp
imul
jmp
xchg
jne
mov
jl
mov
sub
push
out
inc
mov
mov
ficom
(bad)
push
xchg
mov
mov
pushf
test
and
(bad)
mov
adc
loopne
pop
push
sbb
and
jle
jle
(bad)
iret
mov
scas
jmp
add
cmp
aas
cmp
inc
cs
or
in
in
movs
into
fld
mov
das
mov
xor
test
bound
ret
scas
push
push
xor
out
in
mov
addr16
jle
mov
inc
pop
rcl
sbb
loop
aam
add
and
add
(bad)
out
cwde
call
inc
(bad)
jmp
and
gs
(bad)
(bad)
pusha
jns
loop
push
jl
jno
lock
xor
add
sbb
xchg
iret
std
call
xor
shl
addr16
sbb
idiv
jmp
sub
(bad)
push
mov
mov
ss
mov
inc
jmp
jg
hlt
test
pop
inc
inc
or
test
mov
sahf
aam
fcmovnu
add
in
xor
xchg
enter
clc
ficomp
loop
dec
pop
xchg
adc
mov
call
jno
rcl
into
repz
mov
pop
shr
clc
movs
ror
in
adc
call
adc
xchg
retf
mov
(bad)
ftst
xor
popa
retf
pop
mov
jae
mov
in
dec
push
ja
mov
adc
jne
(bad)
cmc
pushf
retf
imul
pop
gs
fs
pusha
jge
jne
jne
retf
jnp
imul
mov
into
sar
xchg
adc
mov
lea
rcl
cmps
or
repz
out
repnz
xor
lods
xchg
mov
adc
mov
mov
xchg
sbb
das
outs
loopne
sahf
sbb
xchg
mov
jbe
movs
aam
(bad)
and
ja
xchg
popa
sbb
sar
push
xchg
mov
xchg
and
cli
xchg
in
mov
xor
pop
and
cmps
stos
or
enter
add
push
sahf
jae
push
sbb
call
fild
daa
xchg
pop
shl
xor
(bad)
(bad)
movs
scas
or
das
mov
ret
push
(bad)
xor
call
jne
ss
mov
add
es
push
leave
fisub
pause
cmp
or
mov
data16
and
mov
test
inc
push
out
inc
shl
jg
(bad)
dec
sbb
pop
or
loopne
je
lock
dec
data16
or
inc
shl
adc
in
test
js
sbb
hlt
jae
mov
pop
loopne
or
ret
dec
mov
xor
test
sub
sub
mov
dec
sub
adc
lock
loope
and
ja
cli
stc
rcl
movs
inc
jbe
dec
pop
adc
call
sub
mov
shr
fsubr
inc
xlat
sbb
mov
push
mov
dec
call
mov
call
das
jmp
adc
mov
adc
lods
add
test
sub
rcr
pop
popa
je
(bad)
xchg
vphaddubw
and
mov
scas
jo
sub
fiadd
inc
cwde
adc
jle
mov
aaa
inc
ins
fcomp
push
pop
mov
aas
arpl
shl
jl
dec
dec
mov
pop
cld
ss
or
not
in
push
pop
stc
push
sub
dec
push
stos
sti
inc
mov
lods
test
mov
sti
je
rcl
dec
fwait
add
dec
cmp
mov
mov
rcr
rcr
sbb
or
add
push
cmp
xchg
fstp
call
push
retf
fisttp
adc
cmps
retf
and
outs
mov
popf
push
int
mov
cmp
call
in
dec
aas
imul
cli
in
jne
mov
mov
cmps
mov
push
pop
push
mov
mov
mov
pop
sbb
pop
cmp
mov
add
mov
iret
mov
ins
in
js
mov
adc
mov
shr
and
movs
pop
daa
jnp
enter
push
or
sbb
adc
adc
xchg
pop
jp
jmp
aaa
rcl
dec
inc
into
jo
mov
cmp
jb
xor
lahf
jns
retf
jmp
pop
ret
out
shl
sbb
xchg
aam
sahf
mov
call
push
imul
div
add
pop
sbb
push
fidiv
dec
mov
mov
cmp
call
add
lock
add
jae
adc
add
hlt
and
fadd
aam
add
cwde
jle
lods
in
stc
push
inc
inc
call
mov
xlat
sub
imul
mov
sub
repz
popf
fxch
pusha
xchg
in
sub
push
(bad)
inc
push
push
retf
cmp
mov
int3
mov
or
push
or
nop
adc
dec
std
out
xchg
or
cmp
jecxz
and
inc
stos
test
mov
(bad)
lods
fcomp
fisubr
sahf
cmp
dec
push
aam
jecxz
fucomip
mov
sub
sbb
jp
retf
dec
pop
sti
in
xor
ret
punpckhbw
add
loope
pmaddwd
scas
cmp
cmp
nop
(bad)
xor
loop
xchg
sub
sbb
sbb
inc
into
xchg
pop
in
cs
xor
add
stos
mov
pop
mov
lea
loopne
fild
and
enter
jae
jmp
inc
xor
and
popa
push
jb
adc
gs
mov
rol
cli
fcom
out
mov
sbb
and
push
mov
sbb
push
xchg
push
and
ins
loope
push
inc
les
inc
pop
outs
mov
mov
rcl
das
out
(bad)
push
push
xchg
add
push
jns
mov
mov
out
xchg
push
dec
adc
int
es
adc
stc
ret
cmp
or
lahf
push
pop
inc
adc
sub
inc
sub
jne
push
xchg
cmc
or
pop
out
jnp
aad
xor
sub
jbe
sbb
fxch
dec
shr
movs
cs
pop
or
shl
jo
test
inc
jg
push
aas
sub
je
psrlq
test
xlat
inc
popf
popa
int3
test
mov
mov
jp
movs
inc
pop
fistp
and
test
out
jecxz
mov
fs
inc
mov
enter
pop
push
adc
lds
retfw
mov
call
sbb
xchg
ins
sbb
inc
sahf
mov
ror
shl
dec
es
addr16
clc
pop
das
and
sub
adc
cmp
xor
ins
je
popf
xor
jmp
mov
ja
dec
(bad)
sbb
sub
aas
sbb
in
retf
and
jne
ss
mov
test
(bad)
(bad)
movs
jl
retf
retf
mov
add
cmp
in
cmp
mov
cmp
fisubr
(bad)
in
adc
jb
aas
call
pop
loop
call
in
aas
dec
mov
push
cmp
pop
sbb
aad
jbe
push
call
dec
stos
out
mov
xchg
nop
xor
xor
div
mov
stc
jbe
in
sahf
and
xchg
jne
retf
sbb
mov
mov
xchg
cmps
and
and
xchg
popf
cmp
and
fisubr
jp
xchg
mov
fadd
rcl
and
nop
or
bswap
arpl
and
sbb
cs
cli
pop
pop
cdq
pop
xlat
sti
inc
(bad)
jmp
fs
loop
aas
in
push
pop
fisttp
xor
clc
mov
std
mov
lods
adc
cld
iret
ror
inc
js
push
pop
add
cmp
xchg
outs
mov
cmp
mov
jno
fild
adc
sub
jp
adc
push
fst
in
test
inc
jmp
jns
fs
adc
mov
xor
adc
cmc
and
clc
lods
dec
fldenv
add
pop
mov
cmps
stos
lea
or
ror
adc
dec
pop
xor
pop
inc
div
sbb
mov
lea
inc
fcom
fnsave
aam
or
push
cmp
rcr
arpl
das
adc
jmp
xor
adc
shl
sbb
pop
lds
add
fwait
xchg
and
inc
mov
fmul
dec
mov
aaa
push
cli
bound
jae
and
sbb
xchg
in
aaa
jb
dec
int3
xor
add
repnz
ss
lahf
xchg
icebp
aas
pop
(bad)
and
pop
std
icebp
jno
in
sub
pop
add
adc
fidiv
popf
and
xor
out
sub
lds
dec
stc
sub
dec
inc
test
dec
jl
xchg
and
mov
xor
sbb
lahf
aad
push
fsub
js
js
push
and
(bad)
sbb
sbb
sahf
(bad)
inc
das
add
pop
xor
inc
cmp
pop
icebp
jbe
mov
jo
shr
scas
cmp
enter
cli
pushf
test
mov
push
xchg
push
xor
stc
mov
push
pop
int3
mov
mov
fsub
xor
add
das
lahf
leave
lods
push
mov
mov
mov
pop
cmps
cmps
out
mov
mov
mov
push
(bad)
mov
pop
cmp
mov
outs
jmp
loop
pop
out
sub
or
push
cmc
push
leave
bound
movs
pop
test
xchg
ret
pop
jp
ins
cmp
inc
xchg
xchg
mov
and
mov
repnz
jne
mov
repz
adc
mov
inc
clc
retf
out
xor
mov
xor
xchg
mov
mov
scas
in
push
xlat
and
fadd
pop
ins
dec
test
adc
push
jne
aad
(bad)
or
jbe
aad
mov
leave
ret
call
shl
adc
rcl
jnp
mov
jecxz
cmps
dec
and
push
imul
sahf
lahf
xor
in
retf
into
inc
sbb
push
pop
jge
ror
push
sub
jmp
vcvtsi2sd
push
jmp
push
push
inc
test
dec
add
das
add
out
push
xor
cmp
mov
iret
or
sahf
add
fadd
jne
add
dec
inc
and
xor
jp
(bad)
pushf
add
pop
push
stos
add
pop
jl
cs
aas
xchg
mov
sub
dec
mov
hlt
xchg
jbe
push
push
cld
int3
aas
mov
jns
clc
iret
and
std
adc
add
mov
lds
sub
call
lds
lds
or
pop
xchg
shr
sub
pop
cld
cmps
mov
repz
jno
lods
js
pop
sub
pop
test
shl
loopne
das
in
xchg
jle
and
popf
mov
jno
nop
jns
test
sbb
xchg
loope
mov
and
mov
xchg
js
and
jne
sub
push
xchg
jno
in
xor
sub
sub
std
mov
pop
sub
cmps
and
dec
dec
loop
in
mov
jecxz
(bad)
pop
mov
pop
mov
aaa
pop
or
inc
inc
out
xchg
not
popf
jno
xchg
ror
cmp
jecxz
dec
mov
(bad)
xchg
sub
xchg
pop
jb
sbb
xchg
cmovg
int3
gs
sbb
cmp
mov
std
fstp
in
mov
shr
xchg
imul
jmp
pop
movs
icebp
cdq
int3
mov
mov
ret
sub
stc
xor
fsub
jnp
js
in
js
sub
mov
in
cmp
mov
js
push
aas
je
cmps
xchg
imul
or
cli
fcomp
mov
scas
pop
add
and
les
outs
mov
ja
mov
xor
aaa
ins
(bad)
out
test
or
mov
sub
ja
mov
dec
mov
xchg
idiv
mov
pop
out
adc
sbb
mov
repnz
mov
add
dec
adc
mov
mov
fidiv
rcr
and
cmc
mov
add
jne
or
pop
test
ins
stos
arpl
cmp
call
popa
mov
mov
dec
inc
dec
ins
add
mov
fild
mov
cld
je
pushf
les
call
jb
call
or
call
iret
fldcw
jno
retf
aam
sub
dec
jo
mov
daa
arpl
and
in
fxam
not
or
adc
sahf
or
cmp
aaa
dec
in
scas
sub
sub
ss
shl
inc
inc
and
addr16
ror
jns
adc
jmp
lock
stos
jecxz
test
inc
inc
int
push
daa
cmp
(bad)
(bad)
lods
fnstcw
stc
iret
and
rcl
dec
repnz
add
jns
add
inc
jbe
das
fild
cld
adc
mov
repz
lea
into
sub
arpl
mov
adc
inc
in
ror
push
push
lds
stc
pusha
mov
adc
fadd
jnp
mov
add
add
in
stos
je
cmp
sbb
inc
dec
(bad)
lock
dec
ret
lods
mov
pop
scas
in
mov
scas
adc
pop
or
ret
mov
fucomi
in
repz
inc
sbb
push
jge
xor
push
movs
into
add
pushf
movs
or
sub
(bad)
test
je
jb
ret
aas
test
and
and
push
lods
or
push
lahf
arpl
into
icebp
mov
sbb
lahf
mov
out
pop
dec
fwait
lea
sbb
sti
cmps
xchg
cmp
into
jne
and
cld
xor
sub
test
sar
adc
retf
pop
les
or
mov
mov
jbe
shl
pop
fadd
xchg
mov
fcmove
scas
pop
repnz
jnp
cmp
loop
and
or
mov
xchg
loopne
xchg
in
cmps
add
and
and
ds
pop
sbb
add
fs
loop
mov
add
xchg
out
xlat
leave
aam
repz
xor
push
adc
xchg
xor
mov
dec
movs
test
inc
mov
in
pop
mov
repnz
mov
out
mov
aaa
leave
cdq
outs
jl
std
(bad)
stos
pop
xor
int
push
cmp
adc
dec
jecxz
pop
push
js
ja
mov
mov
ins
jmp
or
xchg
jg
popf
sub
mov
push
dec
sbb
data16
mov
movs
sub
cmp
xchg
lods
in
sub
mov
add
mov
shl
sbb
cdq
xchg
adc
push
add
(bad)
mov
add
fbld
pop
nop
ror
cdq
add
cmp
sub
ret
mov
(bad)
adc
mov
sahf
out
sbb
pop
std
mov
aam
mov
adc
inc
jp
outs
lods
retf
mov
jmp
cmp
retf
pop
inc
mov
lods
bnd
mov
ret
sub
stos
or
adc
into
push
mov
rcr
fcmovb
stos
adc
jne
fisttp
sub
dec
inc
std
(bad)
(bad)
push
push
call
loope
daa
scas
aaa
inc
mov
retf
dec
xor
ja
in
and
mov
dec
fwait
mov
ins
sub
sub
dec
retf
dec
sub
inc
cmp
in
aas
(bad)
mov
pop
adc
pusha
sub
and
test
test
pop
inc
mov
test
mov
shl
or
cli
call
gs
push
push
retf
cmp
push
bound
or
adc
test
cmp
push
pop
arpl
ds
mov
sub
js
jo
or
sub
adc
(bad)
adc
(bad)
mov
and
into
xchg
js
xlat
sti
push
repnz
repnz
add
icebp
pop
mov
sub
xchg
cmps
mov
push
(bad)
lahf
in
adc
fld
hlt
imul
int
hlt
mov
in
fadd
cmp
jnp
xor
dec
jp
lods
jne
jo
and
xlat
(bad)
sub
ja
call
(bad)
mov
adc
lods
dec
inc
jns
sbb
cmp
cmp
xchg
xchg
adc
outs
sbb
div
mov
sbb
add
and
push
fimul
mov
sahf
push
out
fcomp
sub
out
push
pop
pop
cmp
dec
sti
bsr
frstor
mov
pop
adc
push
or
cld
jbe
fadd
repnz
adc
neg
mov
inc
dec
mov
mov
mov
shl
jecxz
jae
pop
into
dec
mov
loopne
(bad)
hlt
or
xchg
aaa
cmp
xor
dec
je
fucomp
xor
or
fcomp
jle
ror
sub
mov
aas
(bad)
xor
push
nop
inc
dec
adc
(bad)
jmp
repnz
daa
push
(bad)
mov
inc
or
ror
movs
shl
out
dec
jno
push
rol
push
aam
or
add
es
cdq
data16
cld
cmc
or
dec
test
leave
mov
icebp
xchg
jecxz
pop
adc
(bad)
push
ss
adc
add
cmc
mov
dec
cmp
inc
pop
scas
cmp
les
cmps
retf
dec
in
inc
cmp
test
ror
xchg
cmp
inc
or
js
push
mov
mov
mov
inc
xchg
retf
inc
sub
cmp
mov
popf
sar
sbb
mov
fsub
out
mov
lahf
mov
jp
cmp
rol
enter
movs
sti
dec
out
pop
sub
sbb
iret
test
dec
push
in
addr16
jp
adc
add
mov
bound
adc
jno
mov
and
jg
dec
aas
mov
add
inc
fisttp
movs
cmps
and
stos
stc
imul
mov
repnz
or
(bad)
(bad)
dec
out
shl
rcl
or
jne
xchg
addr16
sar
stos
or
inc
mov
adc
jp
mov
jmp
(bad)
jl
imul
fs
iret
mov
lds
adc
inc
fwait
js
cmp
dec
and
mov
pop
clc
sahf
imul
pop
sbb
pop
ror
div
push
add
mov
inc
sti
fdivr
pop
push
out
inc
xor
imul
xor
and
iret
inc
add
xlat
aaa
add
lahf
cwde
xchg
add
movs
push
xchg
in
lds
scas
sbb
xor
sbb
adc
dec
bound
into
es
lods
aad
cmp
jecxz
les
xchg
cmp
xchg
mov
ror
leave
shl
pop
(bad)
in
or
call
aas
(bad)
ror
lahf
push
clc
jno
sub
mov
or
cmp
lea
sbb
ret
pop
mov
add
mov
xor
mov
pushf
dec
loopne
scas
call
imul
icebp
aas
cmps
aad
jmp
mov
adc
jge
shl
mov
jmp
das
push
sbb
arpl
rcr
sub
pop
add
inc
adc
adc
ins
ret
ret
adc
iret
retf
ror
outs
lds
push
repz
mov
adc
pop
cmps
and
pop
adc
sub
rcr
inc
int
ret
shl
pushf
bound
jb
mov
ret
adc
mov
loop
cmps
mov
(bad)
mov
add
mov
loope
add
mov
add
mov
int3
je
lahf
or
push
sbb
out
fwait
in
in
out
arpl
loopne
fcomp
push
sbb
mov
mov
fsubr
call
jae
cmps
pop
outs
cmps
push
xor
nop
hlt
out
addr16
ins
addr16
cmp
add
mov
hlt
sub
mov
outs
stos
sbb
nop
add
dec
ror
sbb
sar
ret
jecxz
rol
add
shl
push
xchg
push
jecxz
adc
ins
arpl
mov
ins
fcomip
jb
(bad)
js
jno
mov
inc
xchg
fisttp
push
mov
jb
dec
mov
retf
lods
sub
xor
in
jne
dec
imul
pop
pop
mov
popa
clc
into
addr16
scas
ja
test
adc
shr
xor
(bad)
add
(bad)
mov
pop
cmps
xor
int3
pop
les
aaa
add
sbb
adc
loope
in
aam
out
aas
fwait
aad
repz
cwde
nop
icebp
bndstx
pop
sbb
clc
cli
sub
sbb
or
test
mov
push
into
or
(bad)
lods
rcl
cmps
mov
xchg
pop
mov
retf
in
ret
rcr
cmp
add
(bad)
js
ficom
popf
(bad)
dec
add
repz
int
add
in
jmp
pushf
into
jb
or
jo
xchg
xchg
aad
jo
imul
daa
je
in
ds
cmp
push
pop
cmp
and
xchg
cmp
das
in
fwait
or
std
sti
or
jo
cs
inc
sbb
fisttp
jne
jl
jecxz
jo
inc
xor
inc
fstp
jnp
nop
add
adc
not
sti
sbb
std
xchg
test
jge
aam
repz
lods
addr16
das
dec
es
sub
aad
pushf
and
fdivr
inc
mov
jo
inc
or
mov
outs
lods
xor
mov
movs
aaa
and
gs
sub
sub
push
ss
leave
lea
jbe
inc
xchg
clc
add
add
cmp
push
sbb
(bad)
adc
mul
mov
test
mov
sbb
push
pop
lock
(bad)
fstp
sub
and
(bad)
and
and
cld
cmp
push
scas
ja
in
js
not
(bad)
jmp
or
or
int
mov
mov
lods
fs
aaa
jp
test
rcr
or
and
jle
pushf
adc
adc
and
or
js
outs
cmps
rcr
push
(bad)
icebp
test
(bad)
popf
cmp
push
mov
call
bound
call
jo
iret
fs
push
ficomp
pop
stc
cld
iret
mov
mov
repz
sub
imul
(bad)
jne
(bad)
push
mov
mov
mov
dec
pop
dec
sbb
ret
cmps
add
mov
imul
sahf
shl
or
xchg
push
in
stos
jecxz
mov
(bad)
(bad)
cmp
jle
ret
dec
pop
(bad)
mov
sbb
fadd
pop
push
pop
sar
cmp
cmps
adc
dec
and
lods
nop
in
xchg
call
and
jmp
cwde
inc
pop
idiv
pushf
loope
inc
ror
xchg
xor
into
adc
les
popf
(bad)
icebp
or
mov
jo
sub
cdq
dec
push
sub
pop
fdivr
data16
test
dec
call
adc
dec
jae
jge
out
imul
push
loope
cmc
push
pop
mov
fadd
ret
mov
mov
inc
(bad)
mov
ja
clc
sbb
mov
cmp
lds
hlt
push
inc
or
jg
test
push
sbb
retf
sub
fs
xlat
push
(bad)
ins
outs
xlat
mov
mov
inc
xchg
pop
scas
(bad)
xchg
clc
inc
push
jl
xor
jne
mov
jecxz
mov
movs
(bad)
pushf
pop
push
dec
xor
int
mov
fnstcw
ja
jns
sub
inc
dec
xor
push
dec
jmp
pop
inc
xchg
sar
neg
mov
test
lods
mov
inc
xchg
(bad)
mov
pop
xchg
sbb
les
sti
sbb
push
jl
jmp
mov
or
push
xchg
push
pop
imul
loopne
pop
cdq
jle
daa
xchg
push
cmp
(bad)
cmp
test
movs
adc
movs
clc
add
outs
(bad)
popa
retf
aad
int
push
push
push
shr
in
jmp
cmp
sub
dec
sub
mov
clc
dec
dec
ins
daa
cmc
push
inc
daa
loop
adc
push
push
test
adc
clc
and
hlt
std
jg
adc
in
popa
sbb
cdq
inc
sbb
in
mov
scas
ror
daa
das
sbb
pushf
ja
sbb
pusha
lock
stc
mov
jno
and
hlt
clc
pop
mov
jge
movs
and
mov
ins
rcr
test
(bad)
fistp
repnz
sub
inc
dec
pusha
out
loope
push
js
cmps
ja
ficom
retf
in
sub
daa
repnz
mov
xlat
sub
mov
sub
mov
sti
fwait
adc
cmp
pusha
and
sub
xor
jae
pop
ss
fsubrp
imul
push
test
(bad)
mov
pop
and
pop
inc
ror
leave
push
push
mov
push
fist
xor
stc
push
lods
pushf
dec
xchg
dec
sub
and
in
mov
xchg
xor
enter
int
push
gs
or
(bad)
sub
in
fsub
(bad)
dec
es
inc
in
sahf
imul
popa
add
iret
js
push
hlt
clc
inc
or
or
cs
adc
imul
jb
mov
xchg
retf
jmp
inc
imul
in
das
ficom
stos
add
call
xor
inc
icebp
(bad)
adc
(bad)
sar
push
inc
push
leave
and
jns
pop
jle
push
sar
inc
in
fwait
pop
sbb
push
push
nop
jb
mov
cdq
enter
shl
gs
push
enter
retf
sbb
icebp
leave
xchg
jne
push
jmp
loopne
sbb
inc
xchg
aaa
mov
add
push
pop
sahf
ins
jmp
xor
pop
pusha
js
leave
aaa
jle
cld
out
pop
jne
cwde
(bad)
imul
inc
sub
sub
sub
xchg
(bad)
sti
inc
xor
xor
xchg
sti
add
jge
mov
pop
hlt
cmp
dec
test
cld
xor
je
in
mov
fadd
sub
adc
cmp
retf
or
jno
stc
or
sub
daa
mov
fwait
mov
fbstp
nop
ins
mov
adc
mov
ror
or
and
arpl
repz
ins
scas
push
iret
inc
int
mov
sar
pop
add
sar
xchg
mov
bound
mov
pop
outs
jp
pop
sbb
pop
dec
cmp
push
dec
sub
pop
fstp
add
mov
or
repnz
cmps
push
out
test
popf
pop
aas
sub
in
dec
adc
mov
pushf
jne
loopne
jmp
add
mov
iret
(bad)
xchg
movs
aam
inc
and
push
out
pop
or
(bad)
mov
xor
mov
adc
daa
test
out
(bad)
aaa
adc
sub
sahf
dec
xchg
fstp
dec
add
xchg
pop
aad
sub
movs
push
data16
pop
pop
mov
add
push
clc
imul
push
aad
bound
fst
mov
sbb
les
bnd
adc
add
cs
mul
in
or
jmp
pop
test
jb
fnstenv
les
inc
mov
test
leave
pop
push
mov
out
jle
jge
lea
fistp
cmp
arpl
iret
out
jb
hlt
mov
arpl
mov
cmp
retf
in
movs
xor
adc
lods
cwde
out
or
and
mov
add
cmps
fs
movs
je
popa
bound
cmp
sub
ins
(bad)
jg
sub
out
mov
pop
cdq
and
sub
(bad)
push
movs
pushf
(bad)
pop
idiv
repnz
mov
std
mov
pop
sub
clc
or
xlat
mov
dec
clc
mov
cmp
loopne
or
xchg
push
xlat
pop
cmp
dec
rcr
fmul
stos
stos
or
sbb
push
inc
fs
in
mov
mov
add
jmp
mov
jmp
mov
sub
mov
or
unpcklps
xlat
xchg
xchg
xor
xlat
jecxz
adc
and
adc
add
shl
outs
add
dec
loopne
sub
shl
jns
xchg
rcr
xor
shl
mov
pop
jbe
push
xchg
enter
push
fstp
pop
cli
mov
in
or
pop
icebp
mov
push
mov
fwait
xchg
not
repz
cmp
fmul
sub
aad
cld
cmp
stos
xrelease
lods
cld
test
inc
and
sbb
sub
fst
es
sbb
mov
leave
jb
jmp
call
ret
push
lahf
pop
mov
repnz
fsubr
ds
scas
or
imul
int
adc
rcl
or
mov
xor
add
jge
xlat
pop
(bad)
xchg
cld
xchg
jo
popa
adc
dec
cmp
cwde
inc
jo
dec
rol
lea
sub
push
push
les
mov
stc
les
and
aad
lods
shl
movs
mov
jecxz
jnp
mov
mov
or
push
cld
push
daa
xor
lds
dec
sti
xchg
xchg
mov
push
xor
pusha
sub
lods
or
fiadd
cmp
in
cmp
or
lods
test
dec
sbb
lock
sub
push
inc
and
xchg
mov
fbld
add
inc
push
mov
mov
in
mov
(bad)
xchg
mov
leave
test
iret
push
mov
xchg
inc
cmp
arpl
sbb
mov
popa
push
mov
fild
add
mov
cwde
mov
mov
mov
push
dec
dec
sar
stos
dec
test
and
ins
mov
addr16
xor
inc
js
and
adc
shl
pop
jnp
ret
mov
in
clc
mov
nop
dec
retf
jno
hlt
mov
movs
repnz
jmp
mov
fcom
jle
push
jb
leave
mov
inc
adc
or
leave
scas
daa
sti
jns
xor
ret
inc
adc
in
lahf
or
push
pop
movs
inc
iret
sbb
mov
icebp
retf
add
call
sahf
sub
xchg
adc
mov
dec
lahf
ret
push
test
fist
fdivr
cs
fld
sub
arpl
dec
xchg
sub
mov
call
mov
jo
inc
mov
push
inc
out
xor
inc
outs
retf
fistp
ret
pop
adc
mov
movs
stc
out
xchg
je
sti
shl
jp
xor
ds
ja
fild
dec
xor
fsin
cmps
rcl
cmp
dec
mov
out
hlt
xchg
jo
call
push
fldcw
stc
add
scas
inc
sub
ficomp
(bad)
gs
js
jo
loop
jmp
sub
push
jbe
sub
icebp
movs
push
push
or
cli
mov
clc
inc
jmp
out
sbb
sbb
inc
xchg
js
call
mov
test
(bad)
jnp
push
retf
fimul
cmp
or
push
push
pop
pop
and
or
push
jno
or
outs
arpl
mov
push
xor
mov
retf
lahf
sbb
bound
loop
test
adc
mov
jae
cmp
test
adc
pop
mov
dec
sub
int
push
out
(bad)
nop
jmp
ds
cmp
adc
pushf
outs
call
jecxz
test
and
iret
mov
sbb
ds
sbb
pop
inc
sahf
mov
repnz
ja
and
mov
fwait
xor
mov
out
xor
push
shr
(bad)
push
call
mov
lods
js
pop
xor
adc
mov
test
dec
das
push
inc
arpl
int
or
jmp
ror
jbe
rol
lock
pop
cli
adc
(bad)
in
loop
jno
sbb
inc
daa
inc
jge
rol
in
inc
retf
mov
xor
push
(bad)
fild
repz
(bad)
out
jge
xlat
and
mov
pushf
stos
mov
dec
inc
out
xchg
xor
dec
adc
pop
dec
rcr
repnz
pop
jge
imul
stc
cmp
jge
clc
xlat
push
dec
add
icebp
retf
outs
fwait
mov
movs
dec
stc
sbb
pop
lods
aad
ja
xor
nop
mov
dec
(bad)
mov
outs
fldcw
ja
sbb
pop
push
ja
cmp
mov
in
adc
(bad)
dec
lds
in
push
cld
add
fidiv
cdq
sub
jne
nop
mov
adc
(bad)
mov
sbb
ror
out
mov
push
mov
pop
scas
mov
xchg
or
movs
repz
aas
ins
jecxz
push
ins
mov
cld
xor
push
xor
ror
push
int
leave
mov
inc
out
xor
out
clc
arpl
sub
push
(bad)
lods
packssdw
test
sub
push
test
cmp
and
push
xor
aas
ins
mov
test
(bad)
xchg
mov
cld
jne
cld
pop
ud0
popf
rcr
cwde
retf
ds
push
jo
imul
add
mov
mov
lock
call
pop
call
or
jg
iret
inc
loopne
inc
test
xchg
mov
cmp
arpl
out
and
sub
(bad)
movs
nop
sbb
jb
les
hlt
mov
ds
retf
jmp
stc
mov
fcmovbe
aas
mov
aas
(bad)
mov
jns
cmp
xor
mov
xor
imul
xor
int3
data16
hlt
mov
adc
xchg
test
fld
imul
fprem
les
inc
stc
jp
mov
push
pushf
push
(bad)
movs
pop
and
jbe
mov
and
jmp
xchg
inc
inc
jmp
enter
sbb
pop
jle
test
xchg
add
repnz
into
stos
je
mov
adc
popa
pop
(bad)
out
in
js
dec
pop
sbb
sub
jle
adc
ret
outs
fidivr
imul
in
pusha
arpl
push
sub
sbb
retf
xchg
add
mov
mov
fistp
jmp
pop
fnstcw
push
popf
xchg
lods
or
sub
aaa
jb
inc
cld
jbe
test
mov
sub
je
les
sub
jp
pop
pop
push
shl
test
sahf
mov
and
xor
cdq
clc
jle
test
push
stos
jae
(bad)
cmp
inc
mov
inc
sar
sub
pop
fidivr
retf
(bad)
cmp
(bad)
ficom
dec
pop
cs
jmp
pop
pop
mov
pop
popf
sub
inc
adc
or
or
call
lods
stos
mov
xchg
pop
cmp
jecxz
call
jg
mov
test
daa
pop
sbb
add
dec
lds
scas
ror
sbb
lods
int
dec
adc
in
mov
shl
or
jbe
fnstsw
pop
push
push
cmp
(bad)
rcr
mov
dec
or
pop
mov
mov
cmc
mov
loopne
cmp
add
aaa
leave
dec
or
sub
jl
sbb
mov
jle
neg
fmul
nop
inc
(bad)
sbb
cmp
jo
push
enter
call
popf
jb
xchg
test
clc
std
dec
jnp
ss
shl
out
mov
in
loopne
fdivr
add
and
and
adc
(bad)
movs
je
add
pop
jge
(bad)
mov
nop
or
(bad)
cmp
or
add
stos
mov
inc
adc
adc
inc
ins
jmp
mov
mov
out
sbb
sub
dec
hlt
or
sub
aam
adc
call
mov
bound
leave
pop
cmp
push
pop
ss
enter
add
cmps
clc
jnp
inc
pop
shl
xor
imul
mov
xchg
dec
cli
loopne
mov
jbe
push
movups
mov
cmp
repnz
add
dec
bound
dec
mov
inc
leave
push
aad
addr16
cmc
xor
in
push
or
adc
push
jl
jns
mov
loopne
add
add
add
pop
xchg
pop
push
inc
mov
and
xor
aam
pop
cmc
sbb
jne
out
imul
mov
mov
adc
jne
lds
push
mov
push
mov
mov
xchg
clc
sub
cmp
or
fdivr
movs
inc
loop
movs
mov
pop
imul
xchg
push
cmp
test
in
sahf
push
add
outs
retf
loop
adc
jmp
je
mov
cmc
in
les
pop
lods
arpl
stos
xor
dec
cdq
inc
cwde
xor
jmp
mov
push
sub
jbe
or
iret
fucomi
or
push
cmps
or
cmp
data16
push
int
jecxz
inc
imul
sbb
out
les
fwait
pop
push
mov
ret
fisub
or
arpl
mov
jmp
iret
pusha
int
call
adc
push
inc
gs
push
mov
jl
and
cmp
imul
scas
inc
call
lock
cs
lds
push
cmp
cwde
inc
add
ret
test
sbb
sub
mov
pop
inc
ror
mov
pushf
mov
test
retf
adc
imul
adc
push
ror
and
jg
jbe
ins
aaa
xor
sub
mov
mov
mov
loop
dec
mov
pop
dec
test
inc
cmp
pop
xchg
and
mov
adc
dec
push
scas
shl
lock
sti
pushf
adc
mov
into
stos
and
push
data16
cmp
xor
cmps
sub
adc
rdpmc
add
push
pushf
add
pusha
or
sbb
and
nop
pop
rcr
gs
push
faddp
nop
jo
mov
loop
sahf
je
mov
ror
inc
int
test
leave
or
cmp
fcmovb
data16
add
ja
mov
push
jmp
jle
mov
fmul
mov
stc
std
mov
fimul
xor
cmp
stc
fstp
pop
dec
stos
pop
lods
js
jns
cs
xchg
mov
fist
jp
aaa
outs
les
shr
pop
xor
and
imul
xor
xor
mov
daa
data16
xor
std
in
fs
mov
mov
rcl
push
mul
aam
xchg
in
pop
mov
dec
jb
xchg
(bad)
loope
xchg
mov
inc
mov
sti
shl
pop
inc
push
xor
mov
fisttp
adc
jle
ss
push
sbb
jmp
adc
fs
cmc
inc
mov
aad
stos
mov
test
rcr
ja
push
fnstenv
stc
sub
sub
or
(bad)
xlat
loope
pop
sbb
sbb
pop
cld
or
bound
adc
std
jb
sar
lods
inc
jne
xchg
cmc
jle
jmp
adc
push
fnstenv
int
ret
mov
scas
in
xor
test
stos
rcr
cmc
mov
jnp
pop
pop
cli
(bad)
sbb
mov
js
inc
pop
fucomi
pop
(bad)
dec
ret
repz
mov
adc
fnstsw
dec
push
adc
mov
jle
push
mov
shl
shr
(bad)
shl
in
sbb
icebp
mov
fmul
inc
and
sub
push
adc
jns
out
aad
out
or
pop
mov
inc
arpl
and
cmp
adc
sbb
arpl
sti
imul
adc
sar
push
or
dec
jmp
retf
push
js
lahf
dec
neg
aam
jnp
mov
js
(bad)
test
sub
in
cmp
sar
sbb
add
and
ret
mov
mov
dec
loop
test
sar
cmp
xor
lods
and
xchg
movs
sub
test
pop
push
out
inc
sub
or
sbb
jg
or
cli
mov
pop
xor
in
push
adc
mov
pop
out
rol
scas
mov
jmp
adc
xor
jl
outs
(bad)
inc
pop
aam
in
jmp
mov
lds
mov
(bad)
push
pop
jo
cmc
and
dec
add
int3
pop
cmc
stos
add
dec
mov
mov
mov
cmps
in
mov
dec
enter
xor
es
loop
lods
mov
call
sbb
leave
aas
(bad)
mov
stos
jbe
cmp
sar
cmp
mov
gs
jmp
(bad)
mov
cmp
adc
mov
xchg
xor
adc
sbb
ds
movups
popf
rcr
sbb
mov
icebp
adc
fld1
mov
cmps
push
xchg
mov
in
cmps
test
mov
push
inc
xchg
push
je
inc
(bad)
mov
sbb
inc
mov
or
pop
push
sbb
test
out
jp
mov
jmp
ds
dec
and
pop
bound
clc
fadd
add
push
xor
inc
jb
repnz
push
inc
test
and
retf
test
lock
sub
push
mov
mov
adc
or
gs
cmp
and
and
rcr
ins
gs
xchg
loop
cmp
mov
push
sbb
add
dec
cmps
and
fabs
mov
xchg
jae
push
pop
xchg
fbstp
inc
fwait
test
cmc
pop
pop
cmps
movs
(bad)
mov
jl
and
stos
ja
sub
push
inc
xchg
pop
mov
xor
or
cmps
aas
lahf
jbe
cmp
mov
or
mov
and
(bad)
jp
lods
cmp
ins
and
daa
push
repnz
popa
dec
arpl
js
adc
push
mov
sti
(bad)
mov
inc
cmp
jmp
mov
mov
add
mov
call
fild
icebp
xlat
fild
mov
lea
push
sub
xchg
jg
cdq
xor
cli
and
test
mov
xchg
(bad)
adc
out
(bad)
sbb
mov
rcl
add
into
push
or
call
out
cmps
arpl
loop
xor
pop
jl
jmp
dec
jae
xor
mov
in
mov
inc
inc
sub
jl
cdq
cmp
test
inc
cdq
inc
dec
jne
xor
jo
dec
(bad)
in
mov
cmp
xor
inc
int3
cmp
es
and
mov
adc
and
jno
sbb
or
mov
sub
pop
loope
sbb
mov
scas
jmp
rcl
leave
inc
xchg
sbb
cli
dec
dec
adc
pop
xlat
pop
xor
scas
pop
(bad)
fstp
mov
push
inc
mov
popf
add
rcl
popf
iret
data16
fstp
fst
sar
jno
in
xchg
push
das
dec
inc
repz
std
rep
test
push
sub
ss
add
sub
cmc
(bad)
sbb
pop
push
mov
fcomi
push
jmp
push
hlt
sub
or
movs
add
jbe
or
mov
int
retf
das
fistp
test
xor
pop
sbb
rcl
ins
and
frstor
sbb
mov
test
test
cmp
ins
xchg
hlt
xchg
sub
or
pushf
mov
ja
mov
or
int
test
fimul
ja
mov
scas
pop
cmp
jnp
xchg
push
mov
dec
pop
mov
(bad)
sbb
push
push
fimul
and
ret
cli
or
cwde
(bad)
rcr
mul
mov
repz
lock
push
xchg
scas
(bad)
out
or
add
mov
stos
push
sbb
arpl
mov
aam
nop
sbb
clc
aam
xchg
(bad)
cmovbe
test
sub
inc
addr16
imul
and
movs
mov
into
pop
and
sti
or
inc
test
push
leave
xchg
mov
test
mov
cmp
je
imul
mov
cld
jmp
ins
adc
lds
rcl
add
fidiv
push
dec
adc
out
idiv
dec
xor
push
mov
xchg
stc
dec
dec
idiv
icebp
dec
or
cmps
mov
dec
std
test
xchg
daa
ds
data16
int
cmp
cmps
iret
ret
inc
les
dec
mov
fstp
jecxz
add
add
outs
xchg
gs
add
xchg
shl
sub
mov
in
fistp
outs
imul
inc
mov
and
inc
dec
loopne
mov
mov
mov
jmp
pop
rol
jecxz
idiv
mov
aam
dec
ds
lods
dec
ror
inc
sahf
inc
ins
ins
mov
lea
ss
push
jb
cmp
xchg
adc
mov
scas
hlt
push
lea
ss
fidivr
jp
arpl
push
mov
inc
jne
enter
add
mov
or
lahf
dec
gs
inc
ss
fcmovbe
sbb
mov
xor
stos
outs
es
imul
shr
lock
ja
mov
sub
jnp
fwait
mov
dec
sahf
xor
and
pop
fiadd
jns
outs
enter
test
repnz
or
cmp
and
sbb
imul
out
sbb
jge
mov
sti
fisttp
shl
cmps
lods
and
pop
pop
add
fdiv
adc
outs
jno
sub
dec
in
icebp
cld
adc
inc
and
mov
popa
inc
nop
call
and
cmp
pop
adc
into
or
xchg
add
iret
push
call
lods
or
int
in
cmp
mov
mov
iret
mov
lods
mov
xchg
push
xlat
ins
jge
xchg
jo
fisttp
mov
cwde
in
mov
hlt
sub
rol
aam
adc
inc
inc
jp
fadd
jl
pop
stos
arpl
iret
dec
fst
ja
ret
das
and
lods
ficom
lock
arpl
add
into
fcmovu
out
cmps
stos
ret
mov
adc
xor
sar
outs
mov
movs
test
sub
and
scas
pop
jns
ja
outs
mov
int
mov
ins
sbb
xchg
repnz
fsub
inc
pop
clc
punpckldq
test
call
jmp
inc
scas
out
pop
sub
and
or
mov
getsec
iret
push
cmc
mov
pop
call
xchg
cmp
pusha
sbb
cmp
(bad)
dec
int
test
rol
ds
xchg
ja
mov
and
ins
jno
imul
pop
in
ins
push
jl
(bad)
out
jmp
movs
adc
cmps
jns
pop
popa
dec
test
retf
hlt
and
dec
inc
push
inc
cld
mov
jno
push
(bad)
jg
dec
inc
mov
push
mov
aas
fs
in
fwait
js
pop
mov
ffreep
push
mov
inc
sub
inc
sub
cmp
xor
push
mov
xor
fidivr
test
aaa
jl
cwde
aaa
lds
jns
xor
sbb
mov
daa
mov
add
cmps
inc
jge
test
push
adc
push
mov
test
fmul
xchg
test
jle
jmp
pop
sbb
pop
fwait
das
add
xchg
xchg
pop
mov
pop
sub
sbb
mov
aad
xchg
sub
dec
jae
imul
mov
fnstsw
pop
jle
out
dec
mov
dec
mov
jo
push
arpl
leave
(bad)
into
or
xchg
sub
sbb
inc
cmp
mov
jmp
jo
mov
rcl
nop
cmp
jecxz
ret
movs
adc
jne
stc
xchg
mov
adc
js
shr
loope
mov
sbb
mov
push
(bad)
adc
cmc
mov
inc
mov
jle
adc
jl
push
ja
pushf
mov
cmp
cmp
hlt
cmp
je
adc
ja
jmp
inc
rcl
xchg
xor
dec
and
sub
imul
push
shl
outs
clc
icebp
push
mov
inc
stc
lock
into
pop
retf
mov
(bad)
int3
in
jge
jno
xor
outs
rcl
push
repnz
les
jge
mov
sbb
(bad)
cdq
sub
pop
mov
iret
int3
adc
lea
in
push
(bad)
shl
movs
mov
push
jb
mov
test
jns
jne
push
jmp
dec
mov
sbb
mov
lods
push
cwde
and
sbb
test
(bad)
icebp
xor
les
call
cmp
out
loopne
aad
mov
adc
mov
in
fisub
lea
add
in
sbb
and
pop
mov
mov
and
pop
es
sbb
xchg
mov
lahf
sub
in
cmp
outs
adc
outs
or
std
pop
mov
xchg
jl
ins
cwde
and
xor
lods
inc
lea
loopne
add
cmc
stos
mov
adc
hlt
fisub
test
movs
in
dec
call
sbb
jg
hlt
sar
sbb
aas
dec
pop
pop
shl
dec
sbb
in
ret
jmp
mov
das
rcl
leave
add
inc
sbb
xchg
in
and
dec
jbe
and
xchg
push
add
sbb
sbb
add
inc
cmc
pop
mov
out
aaa
dec
xchg
or
inc
or
clc
cmp
fiadd
out
dec
not
lahf
(bad)
cli
and
jbe
add
jbe
xor
push
aam
in
sbb
js
addr16
inc
dec
sahf
inc
mov
jge
pop
bound
push
or
add
lea
inc
push
jg
pop
mov
and
icebp
push
jo
jno
outs
cmp
mov
mov
mov
sbb
or
out
int3
and
imul
xchg
lock
push
sub
ds
jb
call
int
mov
or
push
ins
sub
(bad)
lds
imul
movs
or
mov
out
xchg
outs
xor
inc
push
pop
pop
mov
pop
pop
and
stos
sub
loop
ins
sbb
and
jo
and
pop
jne
iret
mov
push
lock
mov
jbe
js
sub
loop
pop
aam
add
xor
(bad)
sti
retf
std
mov
fwait
push
inc
and
fild
fs
inc
inc
jl
mov
pop
inc
lods
(bad)
lock
inc
adc
lods
push
es
jns
in
mov
rol
and
clc
aad
mov
ja
scas
fst
shr
bound
fisubr
nop
xlat
(bad)
popa
ins
(bad)
jmp
xlat
and
xchg
arpl
arpl
das
lock
rol
test
cmp
xor
sti
repz
movs
jb
or
cmp
push
retf
scas
popa
mov
sub
ror
cld
imul
ja
outs
jmp
div
data16
(bad)
fdivr
mov
gs
ret
jb
arpl
aad
adc
test
ret
mov
cmp
push
push
cli
jno
popf
ror
jg
pusha
retf
mov
(bad)
or
xchg
ss
mov
cmps
out
jmp
mov
aaa
inc
cmp
xor
daa
adc
jb
out
ds
fimul
shl
lods
add
sub
(bad)
outs
push
xor
leave
cmp
dec
fwait
adc
stc
jno
loope
retf
xchg
xchg
jno
jae
dec
and
mov
sbb
fwait
dec
jg
test
push
lea
out
fisttp
popa
outs
ret
aaa
sub
jecxz
fiadd
(bad)
call
int3
sub
jecxz
cwde
dec
jmp
outs
or
mov
es
dec
scas
outs
cmp
push
xor
cli
(bad)
ins
push
fwait
stc
sti
sbb
mov
xchg
ret
int
(bad)
sub
xchg
enter
fwait
popa
ret
and
js
shr
cli
hlt
mov
lods
mov
pop
inc
jl
test
and
push
sti
inc
mov
aad
push
mov
stos
adc
sub
pop
jg
(bad)
fsub
shl
pop
xchg
sub
pop
loop
or
add
xor
mov
mov
cld
cmp
mov
or
or
push
cli
dec
jl
outs
out
cmp
inc
jo
ss
push
jae
mov
jo
pop
test
loop
push
push
jle
retf
xor
add
aaa
daa
hlt
push
xor
bnd
loopne
push
(bad)
mov
int3
jle
cmps
cmp
psrlq
mov
cmp
xchg
fistp
addr16
mov
ficom
or
and
ss
xor
lods
outs
push
popa
js
sahf
and
retf
pushf
jae
sub
aaa
call
or
xchg
sub
aas
rcr
cdq
mov
push
mov
shl
test
ins
out
pop
pop
ins
out
mov
lods
or
pop
mov
sbb
sahf
pop
scas
xor
scas
jo
or
sar
xchg
dec
fsubr
pusha
inc
push
int3
cmp
add
fs
leave
add
inc
add
or
movs
jmp
push
ds
lods
outs
loope
push
ret
int
xchg
pop
cwde
push
daa
test
inc
cwde
(bad)
xor
and
cmp
sub
cli
addr16
mov
add
lods
adc
push
out
adc
push
out
mov
and
das
test
shl
ret
inc
rcl
ds
and
mov
test
fldcw
add
inc
add
dec
inc
fimul
jne
xlat
dec
add
adc
lods
add
and
cmp
xchg
int
push
sub
jp
and
pusha
inc
mov
mov
cmp
sti
add
dec
pop
dec
inc
imul
push
rcr
shl
pushf
cmp
pop
pusha
aam
dec
jecxz
fild
adc
arpl
call
xlat
push
in
loopne
pop
pusha
push
sbb
cmp
mov
mov
xor
loop
imul
inc
xchg
iret
mov
stc
clc
xor
mov
out
pop
test
pop
outs
dec
adc
sub
xchg
jg
adc
jp
jns
sub
test
mov
pop
push
bound
jge
jle
jl
(bad)
or
inc
jno
adc
nop
cli
lahf
mov
xor
(bad)
jecxz
ds
nop
icebp
es
cmp
mov
adc
adc
xchg
pushf
pop
fcomip
test
repz
push
push
test
and
aas
into
icebp
movs
ins
(bad)
or
cmp
outs
xor
mov
lods
int3
(bad)
cmc
or
sar
test
mov
xor
fsubp
jb
mov
pop
sbb
mov
xchg
pop
or
pop
mov
addr16
mov
shrd
xchg
xchg
sub
xor
rcl
es
pushf
loopne
int
movs
pop
adc
stos
cli
inc
inc
mov
xor
or
inc
loopne
mov
ret
pop
push
cmp
add
ss
ret
(bad)
jecxz
cld
nop
neg
jle
mov
aam
mov
popf
out
push
je
retf
cmc
add
push
dec
out
mov
fiadd
scas
dec
push
rol
(bad)
jmp
add
xchg
jg
leave
pop
in
mov
sbb
add
(bad)
in
fnstenv
xchg
mov
cwde
cmps
ret
cld
loop
jmp
lods
add
or
mov
in
in
jo
popf
stc
stos
mov
sbb
ja
jno
cmps
fsubr
jne
loopne
pop
loope
retf
xchg
pop
and
dec
call
pop
push
xchg
xchg
mov
xor
in
jge
dec
cs
mov
or
ret
mov
sti
add
xchg
mov
xchg
inc
dec
iret
mov
mov
cmp
add
test
scas
add
lahf
push
mov
imul
mov
xchg
dec
ret
lea
xchg
xchg
iret
xchg
add
or
xor
sub
movs
mul
jecxz
mov
jo
daa
xchg
rcl
in
cmp
or
xchg
mov
mov
xchg
rcr
rcr
jno
out
das
ins
add
pop
stos
leave
push
fistp
fnsave
lahf
loope
in
inc
std
and
push
fisub
gs
(bad)
lds
adc
lahf
inc
cmps
(bad)
mov
div
arpl
mov
les
cdq
retf
stc
int
mov
adc
psubw
push
mov
jmp
and
fistp
ins
jns
ficom
cwde
dec
push
or
and
xchg
shr
cmp
stos
xchg
stc
pop
push
sbb
push
dec
mov
fistp
cmp
mov
int3
or
push
retf
pusha
push
sub
mov
adc
pop
jns
sub
in
mov
jge
std
inc
mov
popf
xlat
outs
iret
inc
push
push
inc
ins
xchg
cmp
call
xlat
add
jg
movs
dec
cmps
stos
jge
test
fisttp
adc
xchg
ins
into
sbb
addr16
cmp
pop
(bad)
push
jl
mov
push
pop
ror
mov
in
pop
std
int3
push
mov
sbb
iret
imul
jne
cmp
gs
call
mov
push
imul
adc
stos
js
popa
xchg
add
shl
sub
mul
(bad)
shl
hlt
fimul
xchg
nop
push
mov
mov
sub
ret
push
and
cld
jmp
in
ror
dec
inc
jo
mov
hlt
repz
inc
clc
xchg
xchg
fwait
xchg
sub
push
hlt
and
xchg
jns
dec
movs
stos
fs
cli
jge
jb
xor
sub
push
into
scas
sbb
adc
mov
data16
mov
jne
test
fsubr
test
cld
je
inc
sub
out
lahf
cmp
es
jg
pop
out
sub
cmps
mov
call
mov
cmp
fsubr
fucom
mov
test
adc
mov
(bad)
stos
mov
sub
sub
ja
popf
jo
pop
test
jge
aad
sub
arpl
or
enter
les
outs
mov
cmp
or
pop
pop
push
mov
inc
cwde
fwait
neg
adc
icebp
mov
jo
inc
add
cmp
lods
jge
cmp
movs
(bad)
mov
inc
aas
xchg
ja
or
mov
mov
nop
cmp
inc
dec
test
cmps
mov
imul
pop
or
mov
fist
mov
inc
xchg
pop
aad
jne
mov
icebp
pop
cmp
pop
loope
les
dec
cmp
push
dec
(bad)
mov
jne
sub
jl
adc
sbb
cmps
aas
out
lods
cmp
fldcw
leave
push
sbb
sbb
sbb
xchg
jle
xchg
stos
int3
add
cmp
(bad)
in
out
add
pop
jle
js
fsubr
and
in
out
cmp
mov
out
pop
and
cwde
and
loope
mov
cmp
ins
out
fimul
cmp
push
add
fst
fucomp
inc
sub
inc
idiv
push
push
mov
inc
test
push
mov
stos
or
sbb
jl
mov
ins
xchg
sub
fwait
jecxz
dec
mov
retf
inc
scas
sub
adc
iret
xchg
je
sub
jl
cmp
xor
cmp
inc
fidivr
bound
test
sub
(bad)
jmp
mov
jmp
retf
push
test
inc
pop
in
fcmovnb
dec
inc
out
adc
je
or
loope
adc
xchg
aad
dec
test
dec
cmps
xchg
or
mov
xor
in
imul
and
mov
sahf
out
mov
xchg
mov
sub
push
add
dec
push
lods
add
jb
cld
inc
stos
mov
cli
add
in
sub
dec
or
mov
push
ret
cmp
lock
push
jg
mov
repnz
shl
lea
cmp
cwde
cwde
loop
imul
adc
sbb
mov
iret
mov
loope
jge
xor
jge
jns
add
inc
lock
imul
and
mov
cmp
sbb
jp
retf
dec
inc
rcr
adc
push
imul
push
in
sbb
sbb
adc
inc
adc
inc
sub
fadd
cmp
cmc
retf
sub
retf
cmp
cmc
xchg
cli
hlt
stos
xchg
add
sub
xchg
push
out
mov
mov
or
xchg
lods
aaa
xchg
add
in
test
test
call
pop
add
ffreep
mov
mov
pop
movs
xchg
jns
push
movs
ins
les
je
stos
mov
ret
ins
jle
cmps
stos
jle
and
repz
xchg
xchg
xchg
jns
dec
out
dec
popa
xchg
sbb
jle
fbstp
icebp
xor
adc
push
pop
and
xchg
adc
jle
repz
mov
(bad)
push
xor
mov
push
inc
fisttp
xchg
iret
rol
enter
or
pop
in
dec
and
sbb
rol
sub
shl
or
fimul
mov
cwde
into
fcom
mov
cmp
pop
shl
(bad)
lods
jecxz
push
sti
arpl
out
jl
xor
mov
stc
je
jl
mov
cmp
or
mov
xchg
std
mov
pop
xor
mov
outs
mov
cmc
stos
dec
lods
cmc
ja
xor
jl
in
sbb
cmp
pop
mov
in
int3
movs
mov
mov
pushf
aas
sub
in
pop
add
pop
xchg
jnp
jnp
pushf
dec
rcl
jmp
cmp
ret
inc
jno
pop
sbb
fidiv
xchg
add
adc
test
out
push
cdq
popa
pop
adc
fistp
sbb
xchg
sbb
xlat
inc
out
addr16
xchg
cld
push
mov
cld
jle
sbb
dec
in
pop
sub
rcl
je
mov
push
cmp
jl
repz
xor
add
in
in
lods
adc
fwait
pop
xchg
aaa
enter
popa
test
mov
pop
scas
sbb
mov
pop
sti
inc
fadd
push
pop
aad
sbb
add
loope
cwde
jmp
das
and
imul
pop
cmp
pop
mov
jmp
cmps
frstor
inc
xor
ins
xchg
add
imul
mov
cs
enter
rol
mov
cmps
shl
adc
pop
jae
add
mov
or
xchg
lock
or
cwde
push
sahf
loopne
dec
inc
xchg
arpl
sub
jb
cmc
mov
push
inc
cs
ffreep
adc
mov
dec
pop
jg
in
jle
pop
push
ss
inc
stos
ret
pop
pop
jns
xor
das
jbe
and
daa
lds
outs
scas
mov
mov
or
rcr
cmp
cwde
dec
mov
xchg
xchg
mov
(bad)
lods
sbb
fs
adc
shl
sbb
js
cdq
test
add
ficomp
ins
cmp
lock
or
inc
sti
mov
sub
jo
adc
push
es
or
xor
out
sub
test
cmp
or
xor
lock
jnp
mov
pop
jl
add
popf
cmp
les
(bad)
popf
push
mov
adc
xchg
in
aas
push
add
int3
mov
(bad)
mov
jp
test
push
pop
xchg
sbb
or
pop
mov
mov
dec
enter
cmp
inc
shl
mov
imul
inc
push
loope
ja
jmp
test
mov
fstp
inc
mov
popf
pop
fld
mov
rol
enter
ds
inc
scas
adc
mov
pop
pop
dec
jbe
cmc
xor
scas
lods
xor
enter
jmp
das
xchg
mov
jno
mov
hlt
adc
or
mov
addr16
cwde
adc
outs
lock
popf
int
cmc
pop
sahf
cmp
and
dec
xor
fimul
dec
xor
mov
jb
add
fld
(bad)
clc
arpl
adc
test
enter
out
repnz
push
clc
mov
fdiv
cld
repz
mov
int
test
into
out
jbe
cmp
(bad)
in
(bad)
in
out
shr
aas
jno
fstp
adc
repz
xchg
push
sahf
jnp
jb
retf
shl
fistp
fdivp
aam
jge
sbb
iret
out
icebp
idiv
shr
dec
xor
mov
out
sahf
sbb
adc
lahf
cmc
pop
mov
out
jp
dec
out
sub
mov
jnp
mov
or
jns
addr16
jge
loope
outs
jmp
hlt
mov
and
xor
mov
and
retf
sbb
(bad)
cwde
push
mov
push
in
pop
adc
sbb
into
arpl
out
stos
(bad)
(bad)
fimul
(bad)
mov
cmp
js
jne
and
int
jae
dec
enter
leave
nop
push
call
xchg
mov
mov
mov
adc
pop
jge
pop
imul
inc
data16
push
fwait
push
imul
scas
dec
sub
push
popf
jecxz
push
push
mov
push
pop
mov
lea
clc
out
test
jle
xchg
test
mov
sub
sahf
cmps
rep
xchg
iret
xchg
add
test
or
aaa
out
cs
pop
scas
cld
mov
mov
jmp
arpl
popa
ins
ins
iret
sti
ins
inc
inc
jle
repz
ss
mov
hlt
jle
loopne
mov
jmp
pop
mov
or
push
jg
icebp
call
push
outs
mov
dec
cwde
popf
and
stc
mov
retf
push
sbb
movs
mov
or
dec
add
sub
aad
sbb
data16
test
sub
retf
pop
jmp
cmovne
inc
mov
out
pop
push
enter
xchg
in
fwait
jb
pop
add
loopne
inc
and
xchg
mov
aaa
inc
mov
mov
push
cmc
cdq
adc
stos
mov
and
aas
cmp
ja
push
(bad)
xor
jb
pop
mov
and
mov
inc
mov
in
inc
lock
xor
xchg
mov
mov
push
jb
in
pop
aad
mov
push
add
outs
cmp
in
inc
jno
imul
or
mov
cdq
iret
lea
jmp
sub
(bad)
cmp
loopne
sub
fmul
sub
dec
jbe
idiv
sub
stc
add
loop
sbb
sbb
addr16
mov
rcl
fs
and
imul
(bad)
aad
mov
addr16
pusha
cmps
int3
adc
xor
add
jb
mov
pop
dec
in
mov
sbb
xor
leave
pxor
mov
adc
xchg
pop
lods
inc
adc
aad
xchg
cmp
mov
enter
ret
xchg
movs
cmp
push
loopne
loope
dec
(bad)
hlt
xchg
rol
pop
test
push
mov
and
ror
sub
cmp
dec
test
adc
inc
outs
jecxz
int3
xchg
xchg
out
push
sti
int
stc
dec
je
add
fbstp
xor
and
popa
call
mov
pop
arpl
mov
scas
mov
mov
out
cld
fmul
mov
jb
arpl
or
jecxz
call
stos
mov
popa
cld
cdq
fs
or
xor
cmp
add
out
lods
(bad)
out
lock
mov
mov
call
dec
and
xor
dec
mov
stos
popa
dec
dec
shl
xchg
jo
adc
xor
loop
xor
dec
xor
and
ret
scas
js
sbb
xlat
sub
xchg
push
or
and
test
leave
jle
je
dec
shl
pop
inc
and
add
scas
cli
mov
mov
jp
jge
dec
sub
sub
and
scas
inc
and
loop
pop
jg
jecxz
cmp
jecxz
mov
add
add
int3
sub
int3
sub
inc
mov
dec
cmps
scas
test
sub
inc
push
dec
int
xor
push
fistp
add
or
xchg
into
dec
sub
xor
jnp
xchg
jbe
mov
pop
mov
out
in
lods
adc
pop
arpl
or
es
mov
cmp
lods
pop
pop
ss
in
xchg
cmp
scas
mov
lods
dec
and
pop
in
dec
push
enter
adc
cmp
(bad)
mov
pop
imul
push
outs
clc
mov
sti
mov
add
aad
xchg
imul
mov
test
in
stos
pop
ret
cmp
popa
mov
fild
mov
pop
jb
inc
mov
sub
adc
xor
es
fcomip
loop
add
mov
xchg
stc
cmp
mov
cli
ror
jp
xor
ins
xor
mov
xchg
cmp
outs
jmp
fisub
cmp
or
or
test
in
dec
mov
aas
shr
sbb
daa
out
or
pusha
cs
ins
or
fdivr
mov
mul
es
jo
sbb
pop
xchg
mov
dec
jp
inc
dec
idiv
jo
in
jae
adc
adc
idiv
jmp
pop
out
rcr
jg
push
loopne
daa
sbb
in
mov
data16
ins
mov
rcr
mov
scas
xor
push
scas
(bad)
gs
jl
xchg
push
push
out
cli
xor
pop
repnz
mov
and
lahf
mov
and
push
daa
fistp
fsub
sbb
out
scas
lahf
mov
xchg
rcl
je
lock
adc
and
xchg
cmp
fstp
cmc
mov
fsub
sub
sbb
jae
pop
dec
cmp
cli
addr16
xor
into
mov
mov
adc
rcl
inc
repz
je
pop
sub
push
out
aam
ins
xchg
push
mov
into
pop
sbb
repnz
push
loop
adc
call
shl
jo
mov
aaa
ret
inc
jl
xchg
xor
mov
ja
or
cli
out
sub
out
pop
popa
mov
stos
mul
sub
xchg
dec
(bad)
call
mov
sbb
xor
jmp
sub
lds
mov
jp
adc
jge
ficom
or
mov
lods
(bad)
scas
lea
sub
imul
iret
repnz
dec
in
push
pop
bound
rcr
cdq
dec
sub
enter
(bad)
ja
adc
jp
pop
jmp
jmp
jmp
out
and
mov
adc
sbb
push
sbb
sub
sbb
ins
loop
repnz
add
adc
nop
sub
loop
inc
push
ins
sbb
sbb
cmp
loop
xchg
stc
xchg
mov
ds
cdq
cmp
jp
and
and
aad
pop
aas
pop
or
aad
popf
repnz
sbb
in
rcr
sbb
jle
mov
pop
dec
add
ret
cmp
lock
or
pop
and
push
je
mov
pushf
sub
sti
in
int
in
jp
loop
call
ret
xchg
pop
cmp
mov
inc
adc
sbb
mov
xchg
(bad)
mov
cmc
fmul
fsub
push
cmp
mov
sbb
lock
gs
cmps
shl
mov
or
push
adc
mov
adc
dec
jae
mov
lods
rol
pop
cmps
add
jne
add
cdq
pusha
cli
in
cmp
mov
cmp
inc
ss
dec
je
xor
mov
fidivr
in
jae
sub
mov
lahf
push
jge
shl
pushf
dec
and
mov
xor
inc
idiv
ja
int3
test
sub
loopne
add
add
inc
push
(bad)
mov
retf
and
xchg
xchg
mov
and
push
mov
xchg
(bad)
fucomip
dec
fwait
lea
push
cmps
jo
js
mov
fiadd
xor
pop
mov
jle
call
fdivr
outs
fdivr
push
out
stc
xchg
and
fsub
retf
pop
push
cdq
aad
add
or
dec
adc
int
aam
mov
pop
int3
xor
dec
das
mov
jmp
mov
adc
push
mov
dec
push
leave
fild
mov
jb
jecxz
pop
jl
or
add
mov
inc
push
rol
retf
jle
adc
mov
pop
in
mov
add
aas
inc
iret
lods
sub
cmp
neg
aad
fs
adc
ja
out
(bad)
cmp
push
ins
sahf
inc
mov
dec
fist
jnp
push
inc
rcr
sub
pusha
add
jo
pmulhw
mov
arpl
fwait
(bad)
xchg
push
pop
adc
(bad)
das
push
sub
in
adc
push
add
iret
add
out
inc
sub
cmp
xchg
mov
xor
movs
cdq
ret
les
ficom
test
jmp
(bad)
cmps
jae
lock
add
ret
daa
dec
push
mov
xor
cmp
cmps
scas
test
mov
push
and
dec
sub
fnstsw
mov
add
ret
sub
loop
cs
jmp
shl
repz
aam
pop
mov
ds
xor
in
lahf
adc
repnz
sub
and
je
ret
out
loopne
and
dec
arpl
into
mov
adc
aas
xchg
mov
pushf
mov
cmp
mov
in
sbb
inc
or
shl
xor
mov
je
pushf
enter
push
retf
std
inc
int
not
int
mov
push
imul
sbb
call
dec
adc
inc
push
aas
sbb
jne
ret
adc
imul
test
inc
cs
jecxz
sub
jmp
iret
adc
xchg
(bad)
xor
jl
sub
push
jmp
std
test
sbb
xchg
cmp
in
jmp
mov
(bad)
icebp
sub
jl
or
or
movs
jge
jno
jae
cdq
sub
inc
jno
test
fld
cmp
jbe
push
or
outs
sbb
push
inc
sbb
int3
jno
test
push
or
xchg
scas
(bad)
mov
daa
xor
mov
add
inc
popf
repz
push
in
les
sub
jmp
js
mov
sbb
ja
dec
pop
jne
mov
not
cmp
(bad)
jmp
inc
call
test
cdq
rol
inc
adc
lea
repnz
mov
(bad)
sub
mov
lods
mov
das
xchg
push
push
je
int3
ss
jb
dec
mov
cmp
add
and
int3
les
outs
cmc
or
mov
shr
add
rcr
mov
das
xor
dec
cmps
push
shl
and
mov
cmps
movs
jno
dec
cs
lock
push
(bad)
jmp
lods
movs
lock
aad
mov
test
fldcw
push
cmp
test
enter
popa
dec
mov
cmp
xchg
sub
repz
and
das
retf
sbb
cmp
inc
sub
inc
pop
adc
repz
jmp
sar
add
xor
jae
je
pop
mov
add
pop
jno
inc
cmp
pop
jb
call
mov
loopne
push
pop
call
push
pop
mov
pop
shl
and
test
retf
cmp
push
add
dec
push
xor
sbb
or
jge
vminss
and
pusha
leave
and
mov
push
fdiv
rcr
fimul
add
xlat
dec
pop
sbb
out
(bad)
fs
mov
jmp
push
mov
sub
outs
xor
dec
test
pop
retf
aaa
imul
cmp
sbb
dec
iret
ins
in
mov
aam
mov
cmps
js
fld
xchg
mov
mov
pop
jp
xor
iret
and
jmp
cli
gs
in
ja
loopne
ror
sub
dec
mov
xor
ffree
ds
pop
push
jl
mov
xchg
adc
push
aad
in
pop
fsubr
rcr
stos
pop
push
mov
ret
add
jecxz
pop
xchg
cmps
jmp
and
push
shl
or
cmps
xchg
les
jnp
test
cmp
sub
repnz
mov
je
pop
sahf
xor
sbb
mov
mov
retf
fmul
in
mov
cdq
and
in
xor
or
adc
mov
test
jge
pop
lea
scas
add
ret
aas
pop
nop
lock
stos
cmp
jge
cli
stc
jae
ret
sub
xchg
repz
shl
(bad)
repz
retf
loope
inc
sub
or
sbb
lock
mov
push
jge
call
sar
jbe
js
aas
js
add
out
aam
aad
sbb
fnstcw
pop
push
scas
dec
lock
add
sbb
test
(bad)
hlt
xlat
push
leave
mov
cmps
xchg
shl
inc
dec
add
dec
pop
movs
call
xchg
(bad)
mov
(bad)
mov
adc
jbe
mov
or
sub
in
mov
sahf
jbe
sahf
xchg
clc
icebp
call
xor
sar
iret
dec
ficom
xor
xchg
pop
test
jmp
mov
in
icebp
not
ds
into
dec
mov
pop
sub
pop
test
dec
out
cmp
or
ret
sub
jle
and
scas
into
cwde
mov
xchg
inc
std
sbb
data16
das
inc
fistp
sbb
rcl
gs
(bad)
test
jno
xor
je
sti
mov
cmc
jmp
inc
push
jbe
cmc
rol
inc
mov
add
pop
push
add
(bad)
mov
mov
inc
ins
inc
in
push
imul
mov
mov
push
sub
jp
and
inc
es
dec
push
lfs
push
push
les
inc
popf
(bad)
push
out
aad
jb
and
mov
(bad)
dec
mov
push
call
xor
fdivr
aam
mov
and
cdq
fadd
dec
lea
bound
add
ins
xor
(bad)
cld
and
out
jecxz
pop
movs
in
movs
and
xchg
mov
xlat
adc
dec
push
mov
aad
sub
ret
movs
mov
pop
cmp
pop
jae
adc
xor
repz
or
add
outs
or
jmp
icebp
push
sbb
imul
sub
outs
xchg
xchg
mov
stos
sbb
mov
pop
(bad)
fcmovu
clc
ins
int
retf
mov
dec
jecxz
pop
mov
retf
aam
arpl
dec
stc
cmp
push
mov
adc
fisttp
ja
and
shl
and
or
mov
sti
aad
push
push
jmp
and
add
jge
add
js
scas
sbb
call
push
and
add
and
inc
es
iret
push
sti
je
repz
sub
sub
imul
lahf
push
cmp
fld
stos
sbb
into
not
fiadd
cmp
rcl
bound
popf
fidiv
sub
lahf
mov
dec
push
or
adc
jle
jmp
es
dec
mov
xchg
inc
lea
fldcw
movs
sbb
nop
and
sub
loop
pop
enter
out
lods
iret
test
mov
mov
xchg
ficomp
push
into
out
cld
neg
xchg
mov
pop
scas
adc
cmp
fst
push
adc
inc
(bad)
fadd
std
xor
xlat
inc
sahf
cdq
loope
mov
jno
in
jmp
push
or
mov
xchg
mov
aad
lods
xchg
cmp
dec
xchg
fsubr
call
arpl
and
push
fdivr
mov
push
icebp
popa
pop
fwait
or
das
les
mov
in
loopne
cld
pop
movs
stos
shl
inc
fs
mov
mov
xor
(bad)
popa
je
add
add
aad
loopne
shl
popf
addr16
into
add
mov
mov
ret
fwait
(bad)
cwde
aaa
jnp
push
add
mov
mov
cmc
xor
jl
daa
mov
pushf
cwde
nop
stos
jbe
sub
aad
ret
xchg
cmp
push
and
xchg
add
cdq
push
sbb
div
inc
retf
test
jae
movs
and
repnz
pushf
loope
jne
add
mov
call
jg
pop
adc
cmp
and
or
retf
jmp
lock
cmp
data16
push
dec
cmp
cmp
cdq
mov
in
cmp
imul
dec
fimul
cs
and
add
jne
fild
arpl
push
sub
xor
or
enter
and
mov
(bad)
xchg
dec
fcmove
jp
inc
lahf
hlt
call
stos
push
ja
xor
pop
out
add
adc
imul
stos
push
loope
rol
test
jge
and
(bad)
fs
jg
xor
ds
mov
and
sub
fimul
push
jb
fimul
(bad)
adc
enter
inc
inc
lea
mov
out
mov
jle
dec
adc
mov
mov
push
test
fistp
or
push
fnstcw
(bad)
jmp
add
mov
xchg
xchg
inc
jmp
fild
mov
sub
xor
ror
sti
ror
ror
jbe
iret
sbb
cmp
rcl
dec
add
imul
pop
pushf
and
adc
pop
xor
retf
stos
cmp
nop
mov
gs
pop
iret
(bad)
mov
or
data16
mov
xor
arpl
mov
inc
mov
pop
or
(bad)
and
sbb
test
data16
shr
jmp
mov
retf
xor
cmp
sub
dec
or
cdq
push
push
fwait
sbb
push
mov
sahf
imul
cmp
adc
lods
enter
out
pop
adc
pop
lods
jae
in
scas
xchg
in
xchg
les
adc
das
mov
xchg
sub
jns
out
xchg
xchg
rol
(bad)
sti
inc
sub
cli
popa
cwde
icebp
mov
cmp
xor
xchg
xchg
sub
aas
sbb
aad
mov
movs
or
or
and
mov
inc
rol
out
cmps
arpl
jle
cmp
and
lea
sbb
jge
cmps
addps
mov
xrelease
pop
add
cmp
ins
jo
sub
cmc
sub
inc
and
stos
in
xor
data16
rol
inc
adc
fdiv
inc
xor
pop
dec
or
aaa
std
mov
ja
sahf
mov
cmp
dec
in
pusha
jne
idiv
pop
pop
addr16
lods
test
inc
mov
in
or
jae
ror
inc
inc
push
adc
push
inc
push
cmp
sub
mov
inc
call
pop
jmp
mov
fld
iret
inc
and
pop
dec
addr16
in
xchg
or
fnstsw
jb
push
jno
or
mov
mov
stos
popa
call
cmps
inc
mov
nop
fistp
mov
xlat
and
add
mov
fbstp
shr
dec
push
cmp
popa
adc
mov
jmp
movs
add
rol
mov
test
outs
jmp
mov
sub
or
fcom
scas
inc
data16
ds
stos
xchg
outs
ss
(bad)
fdiv
(bad)
jnp
jge
jb
jle
jle
sar
cs
mov
sbb
push
rcr
(bad)
pusha
(bad)
pop
inc
or
fs
imul
rol
add
je
fisttp
imul
mov
fsubr
in
pop
or
jecxz
daa
call
mov
jb
nop
dec
adc
jmp
aad
ficomp
inc
adc
pop
call
fdiv
test
or
scas
mov
leave
test
sub
test
(bad)
pop
hlt
or
call
ins
xor
pop
add
mov
inc
jmp
pushf
xor
call
cld
fmul
xchg
or
aam
out
nop
dec
push
mov
ror
add
cwde
add
mov
sahf
mov
push
loop
and
(bad)
out
mov
and
xchg
cli
pop
dec
jecxz
pop
jno
ret
stos
popf
pop
cmp
add
fnstenv
outs
int3
fsub
sahf
add
sub
scas
jg
mov
mov
adc
inc
ins
inc
xchg
loopne
jno
leave
push
adc
jmp
add
jmp
jle
stos
mov
xor
test
xor
data16
in
xchg
mov
pop
dec
sub
xchg
sub
mov
sub
mov
outs
lods
aas
das
mov
jb
xor
clc
and
mov
dec
std
imul
fcomp
jmp
pop
imul
outs
stc
fld
jb
pop
jns
lahf
mov
mov
int3
inc
outs
jnp
movs
dec
jmp
test
in
or
(bad)
cmps
jp
in
aad
cld
xchg
ret
ret
popa
pop
sub
aaa
in
inc
or
jns
aad
ja
jbe
cmps
push
jmp
ja
push
cwde
lahf
mov
stc
sahf
fistp
addr16
dec
jg
jo
add
jmp
cld
inc
adc
fist
push
pop
dec
push
sub
cmp
ret
pop
cmp
mov
xor
pop
cli
and
dec
into
sar
cwde
fcmove
jge
push
in
ins
add
inc
sbb
shr
fcomp
sti
lods
mov
mov
add
push
adc
pop
mov
arpl
jne
push
cs
(bad)
mov
daa
mov
sbb
nop
adc
mov
push
adc
fcomp
cs
or
in
mov
add
cmp
lock
mov
xor
mov
loop
jl
js
(bad)
push
(bad)
ss
mov
jp
xor
imul
dec
pop
ror
lea
sub
and
aad
adc
test
lods
mov
cmp
adc
inc
sbb
fbstp
and
fwait
push
(bad)
outs
popa
jno
mov
and
sbb
cwde
rol
jl
les
dec
push
dec
adc
push
and
movs
mov
xchg
xchg
lahf
mov
pop
jecxz
fst
ror
adc
dec
mov
push
pushf
leave
mov
lock
mov
sbb
and
sar
xchg
in
(bad)
les
fisubr
es
cwde
loope
sbb
(bad)
mov
pop
test
sub
cmc
ins
std
mov
mov
les
add
xchg
xlat
movs
push
cmp
and
test
fmul
adc
arpl
and
xor
xor
jbe
adc
add
adc
aad
sub
mov
add
cmps
jmp
cmp
mov
mov
stc
leave
add
or
mov
mov
xor
mov
cmp
aam
aaa
fiadd
cmp
adc
mov
inc
dec
mov
aas
xor
ja
xchg
mov
cmps
pusha
jns
dec
fild
mov
push
mov
push
jae
pop
popf
dec
jle
loope
jle
pop
test
sbb
jg
dec
sub
inc
inc
retf
call
das
cmps
push
or
and
mov
jno
pusha
outs
pop
fnop
adc
adc
jnp
xchg
repnz
xor
imul
into
jecxz
mov
jns
or
(bad)
mov
pop
cmps
mov
add
jg
mov
cmp
ret
mov
in
imul
push
out
out
lahf
pop
in
sub
and
and
mov
sub
nop
ror
lods
aad
adc
and
xor
mov
(bad)
pop
and
cli
pushf
sub
je
mov
repz
popf
pusha
scas
jle
popa
xchg
lods
ror
pop
or
hlt
in
(bad)
ficom
mov
cwde
push
sbb
xor
inc
dec
pop
dec
les
loope
add
jnp
mov
mov
fist
or
inc
xor
ins
and
call
or
data16
cwde
push
jnp
sar
jnp
retf
sbb
jns
dec
lahf
xchg
outs
sahf
xor
es
popf
scas
xchg
fst
inc
xchg
sar
arpl
ficomp
mov
fucomip
(bad)
(bad)
pop
fidivr
xchg
sub
mov
test
adc
pop
mov
aam
mov
xor
mov
fisubr
dec
xchg
call
push
outs
fs
push
inc
xor
adc
pop
fcmovu
fld
xor
loope
push
into
add
pop
xchg
sahf
dec
pop
adc
imul
cwde
ret
stc
daa
mov
cwde
test
ja
xor
push
xor
into
out
mov
pop
pusha
mov
mov
and
adc
les
and
xor
mov
test
mov
mov
mov
push
pop
or
and
and
test
pop
pusha
sbb
dec
test
cmp
inc
mov
jecxz
imul
scas
inc
lock
test
lock
jecxz
cmp
jmp
fld
add
pushf
xchg
push
enter
cs
mov
mov
sbb
stos
dec
jle
clc
dec
dec
retf
daa
mov
or
xor
enter
ret
sbb
lds
cmp
xor
xor
sti
stos
sub
loope
or
xor
outs
sbb
mov
sub
popf
mov
cwde
adc
mov
sbb
xchg
enter
sbb
dec
test
jns
sahf
inc
imul
jb
cwde
iret
xor
sbb
jl
cwde
jmp
lahf
ins
ffree
fwait
xor
and
mov
xor
lds
clc
scas
(bad)
xchg
fs
scas
outs
jae
xchg
mov
mov
ret
ret
add
outs
out
or
cmp
repz
scas
sub
cmps
push
retf
push
push
xchg
cld
in
in
lea
xchg
sub
jge
pusha
inc
jecxz
popf
push
inc
cli
jnp
idiv
jbe
loope
out
ss
mov
cmp
xor
repnz
clc
fmul
xchg
sbb
xor
inc
jmp
inc
scas
mov
and
(bad)
or
addr16
(bad)
idiv
and
sar
push
xor
mov
cmps
xchg
cmc
test
retf
sub
fwait
hlt
int3
repnz
aad
or
xlat
sub
popf
movs
jmp
adc
inc
or
addr16
nop
inc
adc
sbb
and
enter
retf
pop
push
aas
and
sti
stos
mov
xchg
out
(bad)
and
leave
clc
mov
fild
sti
and
cmp
pop
out
cmps
imul
es
out
dec
inc
mov
mov
(bad)
call
push
mov
xchg
in
cdq
shl
adc
es
jg
push
mov
shr
idiv
jmp
dec
and
pop
push
std
test
ss
mov
and
lods
sbb
inc
aam
in
shr
xchg
nop
dec
pop
dec
mov
mov
fidivr
mov
cmps
push
mov
lds
pop
pop
imul
popf
push
dec
js
cmp
add
jne
mov
xchg
aad
lods
ja
js
js
add
mov
lds
adc
jge
mov
mov
pop
pop
popa
cdq
add
mov
test
std
sbb
arpl
out
das
fnsave
mov
xchg
repz
sub
push
push
push
and
dec
addr16
aam
stos
fidiv
ds
jne
fadd
jns
js
test
push
mul
xchg
lahf
cmp
shl
not
in
scas
push
pop
test
cmps
xchg
(bad)
mov
fnsave
ins
inc
jne
loope
cmps
xchg
ja
adc
pop
push
scas
dec
das
clc
icebp
sbb
inc
lods
cld
rep
mov
rcr
outs
imul
inc
or
or
cmp
cmp
add
shr
xor
std
inc
fs
add
in
rcl
mov
mov
xchg
(bad)
inc
fdiv
es
je
sub
cmp
inc
popa
push
mov
jle
jge
imul
mov
ret
jmp
sbb
out
scas
cli
sub
outs
inc
(bad)
outs
and
cwde
rcr
mov
xchg
push
push
cdq
inc
push
jl
bnd
mov
into
xchg
mov
outs
les
int
sbb
inc
in
int
stos
jmp
push
fisubr
mov
js
repz
cs
pop
xor
xchg
in
gs
mov
(bad)
into
arpl
pop
pop
movs
inc
loop
fsub
out
or
in
push
cmp
bound
and
fidiv
mov
enter
sbb
push
push
adc
aam
shl
mov
test
shr
mov
push
outs
mov
pop
and
add
xor
cmps
xchg
jnp
stos
jnp
mov
and
jnp
jecxz
shld
int
scas
ss
jle
loope
dec
xchg
fs
cld
ss
and
test
sbb
iret
jno
out
mov
aaa
xor
imul
xor
bound
xchg
inc
jo
(bad)
and
in
retf
pushf
or
pusha
popf
push
sbb
fwait
daa
fadd
mov
mov
jbe
mov
movs
and
push
mov
fwait
out
cs
inc
out
adc
call
cmp
movs
mov
jecxz
and
or
and
popa
bound
aad
ret
push
push
dec
ret
out
(bad)
leave
fsub
(bad)
jae
and
ins
and
cmp
jmp
mov
popf
sar
ds
lods
jp
push
lods
push
ins
add
jo
aam
scas
lods
call
push
sub
mov
lahf
mov
xor
ret
shl
out
movs
nop
movs
mov
mov
jne
fstp
sub
cld
stos
int3
sti
adc
push
pop
test
ret
lea
and
sbb
dec
mov
xor
jb
bound
(bad)
ffree
sar
fdivr
or
scas
loop
mov
ins
jge
daa
fwait
mov
cmp
movs
rcr
dec
mov
jae
or
shl
imul
adc
add
jo
jns
lods
lods
or
stos
arpl
pushf
dec
add
lods
js
lods
stos
adc
movs
arpl
xchg
sti
mov
pop
data16
mov
repnz
fstp
dec
xchg
ja
push
adc
int3
push
outs
fwait
jb
dec
fist
mov
add
sub
add
cmp
pop
mov
mov
cmps
cmp
scas
cmps
in
cmp
idiv
ret
jnp
sbb
jb
je
hlt
mov
xchg
repnz
xlat
shr
mov
test
frstor
push
sbb
ins
retf
ret
imul
xchg
shr
js
jecxz
pop
mov
add
pop
aaa
je
ret
sar
imul
fs
mov
fwait
xchg
popf
add
leave
xchg
ds
hlt
clc
xor
mov
mov
retf
sbb
adc
outs
cmps
(bad)
sar
mov
test
cwde
jp
loope
or
inc
jno
idiv
xchg
dec
test
mov
add
adc
repnz
jle
mov
in
das
pusha
(bad)
adc
mov
xor
mov
mov
sahf
and
fcom
sub
xchg
(bad)
cmp
sub
repz
pop
mov
stos
outs
xchg
sbb
retf
sub
xchg
popf
push
out
dec
imul
push
mov
(bad)
jl
gs
(bad)
pusha
mov
stos
mov
cmp
enter
popa
mov
push
sti
mov
mov
js
stos
inc
iret
scas
xor
pop
ja
daa
mov
scas
mov
pop
fsubr
sbb
jg
aam
pop
cmp
or
or
mov
xchg
lea
outs
dec
add
or
sub
add
mov
xor
rol
retf
mov
cmp
cmps
je
or
sub
mov
jo
hlt
cmp
adc
shr
aad
test
lods
push
inc
test
sbb
mov
pop
xor
xchg
push
popa
and
add
loope
cs
mov
enter
pop
test
idiv
int
jle
jno
leave
int3
lahf
nop
sti
sub
or
call
xchg
adc
aad
xor
sbb
(bad)
mov
add
fmul
in
loope
jl
jecxz
rol
ret
hlt
push
je
enter
xor
dec
push
mov
test
mov
mov
push
enter
add
pushf
jae
(bad)
(bad)
out
xor
(bad)
sbb
ss
jb
cmp
fldln2
push
test
lods
mov
or
repnz
dec
add
pushf
xchg
call
je
repnz
popf
xchg
retf
or
push
mov
xchg
jecxz
mov
jge
outs
dec
add
and
pop
and
inc
popa
inc
pop
imul
out
test
stos
jmp
in
sbb
and
movs
mov
mov
scas
shl
rol
jb
mov
mov
cwde
jecxz
(bad)
in
imul
sti
mov
nop
ror
push
rol
pop
cmove
mov
xor
test
neg
in
pop
loop
push
inc
in
dec
retf
aad
jnp
daa
mov
adc
cmp
int
fild
push
pop
imul
push
(bad)
push
imul
das
test
mov
and
and
addr16
dec
imul
fiadd
jge
rol
sar
je
push
ds
test
mov
gs
mov
mov
rcl
and
sub
leave
jg
outs
xchg
pop
xchg
dec
sbb
mov
out
mov
icebp
sub
sbb
nop
js
push
(bad)
mov
inc
mov
ja
xor
cwde
nop
inc
xchg
jno
std
inc
inc
sbb
jae
mov
mov
bound
inc
cmp
shl
push
cmp
aad
in
imul
push
cmps
adc
test
es
repz
test
inc
pop
dec
cmp
mov
enter
cmps
(bad)
add
shl
inc
xchg
dec
iret
sar
addr16
lea
and
pop
jg
add
stos
outs
ins
ins
or
pop
xchg
fisub
xchg
mov
cmps
sub
xchg
ret
pop
mov
fcmove
out
xor
pop
push
cmp
adc
inc
mov
stc
push
sar
loopne
dec
or
adc
push
xchg
pop
adc
rcl
push
pop
mov
fdivr
push
push
stos
jp
scas
int3
xchg
es
rcr
xor
push
in
push
pop
inc
retf
inc
sbb
sbb
sti
pop
xor
je
test
imul
push
and
call
jno
jne
mov
adc
ret
xor
mov
pusha
xor
aam
inc
retf
sbb
ret
mov
aad
pop
jno
mov
ins
mov
enter
shl
push
int
loope
dec
clc
xchg
clc
fiadd
aaa
test
lods
mov
pop
xor
in
push
jle
cmps
jmp
mov
jnp
pop
or
jl
cli
xchg
movs
push
les
aaa
cmp
xchg
jl
fcmove
hlt
mov
inc
hlt
push
mov
rcl
aad
mov
pop
and
rcl
jp
sbb
sar
enter
jo
pop
daa
dec
icebp
jns
xchg
xchg
adc
stos
xor
shl
jmp
sbb
push
xor
imul
jp
or
fild
sbb
push
adc
ins
adc
scas
mov
and
cdq
repz
mov
ror
jg
pusha
(bad)
pop
aad
jbe
out
or
xchg
aas
pop
add
pop
shr
aad
in
pop
inc
dec
(bad)
js
test
int
leave
mov
sahf
aas
push
js
push
fnstcw
enter
cmc
add
call
rcl
jle
xchg
sub
mov
cmp
movs
push
dec
fwait
pop
xchg
xchg
sub
es
arpl
push
arpl
sbb
gs
xor
sbb
jmp
fisub
test
(bad)
mov
js
es
ss
imul
cmp
dec
sub
dec
das
lahf
push
jb
or
cs
movs
maxps
inc
xlat
dec
stc
push
cli
aam
mov
cmp
push
lahf
icebp
or
loop
in
mov
les
lds
test
leave
loop
test
shl
jmp
cmp
mov
shl
mov
xchg
scas
(bad)
clc
or
rcr
repz
inc
loop
call
test
pop
es
fs
or
scas
lahf
js
sub
adc
xchg
cdq
xchg
jno
test
push
ins
sbb
mov
jecxz
dec
xchg
inc
cmps
sub
jecxz
xor
fs
xchg
dec
movs
push
in
fwait
(bad)
mov
stos
sub
cmp
jg
sbb
pop
mov
jmp
cmp
sar
ins
outs
xor
and
outs
jg
pop
xchg
push
or
sub
lahf
aaa
ret
adc
lds
adc
inc
jmp
sbb
mov
push
call
xor
push
mov
inc
in
(bad)
push
cmc
sub
js
cmp
lock
pop
mov
jb
rcr
sub
popf
ds
rcr
cdq
fist
jmp
(bad)
mov
mov
idiv
inc
inc
mov
sub
sub
sbb
or
retf
xor
in
xchg
jbe
xor
add
cmp
fst
add
push
mov
inc
sub
sti
ret
mov
aad
pusha
sub
cs
sub
cmp
xchg
scas
xchg
dec
ins
sar
xchg
sbb
jl
or
push
mov
mov
ss
jge
retf
adc
xchg
mov
and
xchg
or
repnz
aad
imul
aam
gs
mov
inc
cmp
enter
pop
pop
gs
jno
add
adc
fdiv
add
fild
inc
jno
dec
bound
call
mov
mov
lods
js
sub
sub
dec
icebp
mov
sub
inc
iret
dec
js
adc
fdiv
arpl
adc
iret
addr16
adc
add
mov
jb
mov
movs
in
int3
ret
and
cld
and
les
call
pop
pushf
mov
jmp
or
test
sar
mov
mov
jb
les
push
fcmovnbe
mov
lgs
rcr
in
cmp
sbb
cmps
out
inc
and
jbe
push
xor
fs
mov
mov
es
out
adc
mov
(bad)
std
jns
lea
push
sar
inc
movs
sub
mov
ins
sahf
fdivr
dec
mov
retf
gs
sbb
xchg
daa
add
dec
fcomp
nop
cmp
sbb
inc
test
mov
jb
dec
loope
lock
popa
cdq
mov
sbb
icebp
adc
sub
ins
jl
aaa
sbb
out
(bad)
fimul
add
dec
addr16
rcr
sbb
inc
mov
fcom
xor
dec
sbb
mov
je
ja
pop
es
xlat
add
xor
and
dec
jae
int
jmp
xchg
xor
cmps
pop
push
aas
lock
xchg
or
hlt
faddp
ss
sbb
sub
sbb
sub
es
cli
push
fucomip
mov
push
aam
or
or
ret
ss
loop
xchg
scas
psubsw
repz
shl
ret
inc
add
stos
pop
jecxz
out
xor
sbb
lods
loope
pop
jg
xchg
test
jl
push
leave
imul
scas
add
ds
jmp
test
mov
(bad)
stc
inc
pop
jo
lods
or
sbb
cli
sub
inc
or
jmp
push
fbld
ins
mov
dec
neg
add
out
aas
cmp
ins
retf
int
inc
leave
call
scas
cmps
stc
fsubr
push
push
xor
ret
xor
bnd
cwde
ss
or
xchg
hlt
pop
das
(bad)
jns
xor
sub
int
pop
repnz
ret
popf
mov
shl
xchg
aad
or
aam
inc
imul
(bad)
retf
mov
inc
mov
mov
iret
or
stos
or
xor
(bad)
ud0
jle
mov
dec
push
xor
push
stos
jmp
sbb
add
push
pop
loop
push
sub
inc
mov
sub
fcmove
mov
mov
or
rcl
jg
shl
mov
jle
mov
jmp
ins
cmps
lds
dec
imul
iret
sub
xor
cmps
push
xor
adc
xchg
repnz
(bad)
mov
fwait
les
sbb
push
push
mov
(bad)
je
in
or
mov
rcl
in
xchg
push
jl
jmp
rcl
mov
pop
mov
cmp
inc
push
ds
jbe
jae
push
(bad)
gs
cld
aad
cdq
push
cs
movs
sbb
pusha
popf
sbb
jnp
mov
dec
xchg
adc
ja
test
(bad)
ins
mov
add
hlt
ins
add
sbb
cmps
inc
ret
adc
popf
test
adc
clc
ud0
pushf
and
jb
sub
sbb
lahf
and
push
sub
les
pop
scas
and
push
cmp
jmp
mov
push
(bad)
movs
std
push
daa
or
lods
fsubr
sti
mov
mov
add
jp
por
addr16
cmp
stos
ret
mov
(bad)
cmp
cmp
movs
pop
jmp
rcl
imul
inc
push
ja
int3
test
shl
cmps
or
push
in
sub
jnp
jmp
aaa
push
adc
lds
jno
xchg
push
push
jle
inc
and
test
(bad)
out
or
pop
inc
or
bnd
test
mov
push
push
dec
leave
es
sub
retf
or
mov
stc
jge
jae
add
ret
pop
xchg
imul
movs
cli
stc
cdq
mov
xchg
icebp
inc
aaa
adc
dec
enter
mov
out
dec
push
pop
dec
fstp
ret
enter
pop
in
pop
test
or
push
dec
outs
xor
(bad)
ds
adc
sbb
(bad)
or
inc
je
jg
mov
pop
or
cmps
jg
in
cmp
shl
loop
fstp
fsubrp
mov
mov
mov
aam
out
sbb
data16
sti
pusha
sub
mov
(bad)
das
adc
sahf
mov
xor
sar
not
ss
or
mov
and
leave
lea
out
and
mov
adc
jle
aas
and
or
rcr
push
xor
dec
xchg
pop
pop
jns
(bad)
dec
cmp
neg
iret
push
loop
hlt
inc
cs
cmp
sbb
mov
mov
cli
ret
xchg
lods
(bad)
sahf
pop
mov
dec
dec
int
push
inc
pop
add
cmc
and
push
jg
jo
icebp
jp
mov
add
out
fwait
xchg
push
or
popf
cwde
stos
mov
shl
sahf
int3
xor
or
ja
mov
push
scas
stos
pop
xchg
push
inc
lods
frstor
faddp
xor
or
repz
es
call
jecxz
dec
sub
lods
rcl
(bad)
dec
sar
ja
ret
icebp
push
cs
jp
adc
mov
mov
mov
loopne
scas
sbb
cmp
test
movs
inc
adc
jo
bound
retf
ss
inc
jb
mov
inc
inc
pop
or
pop
loope
bound
repz
cmp
xor
data16
test
add
xor
dec
push
fbld
into
imul
dec
call
and
xor
xchg
pop
push
lea
call
inc
cmp
leave
cmp
add
fild
and
addr16
jg
pop
mov
ins
adc
stos
jne
inc
fwait
pop
xchg
adc
nop
mov
ins
idiv
mov
mov
and
test
fdivr
pusha
sub
ss
jle
cli
push
pop
lods
movs
fs
adc
jbe
xchg
mov
sub
mov
add
mov
sbb
jecxz
dec
data16
aas
ins
fisttp
jmp
and
jg
aam
ror
cmp
push
cmp
add
call
pop
mov
mov
or
pop
inc
out
push
imul
mov
add
lock
sar
mov
cmp
sub
pop
mov
fstp
ss
jmp
rol
mov
cmp
pop
sub
xchg
je
lods
test
pop
in
pop
fwait
or
xchg
out
or
mov
mov
cmp
(bad)
daa
lods
in
fisubr
mov
jbe
imul
call
vpor
xor
or
call
xor
inc
repz
mov
aas
jge
add
xor
inc
sti
cmp
sub
mov
fwait
cmp
outs
adc
repnz
sbb
mov
repnz
and
cmp
mov
imul
inc
push
fistp
scas
stos
cmc
sbb
in
movs
push
cwde
repz
lock
enter
ds
and
mov
stos
sub
addr16
repnz
pop
loopne
push
out
mov
xchg
fs
aas
inc
popa
push
aad
aaa
pop
mov
retf
in
sbb
push
xchg
rol
sbb
dec
or
xchg
push
add
dec
push
adc
adc
test
lahf
loopne
and
or
lds
push
mov
or
inc
outs
xchg
fst
xchg
dec
mov
dec
mov
leave
out
outs
and
mov
sbb
push
jl
push
dec
inc
fiadd
xor
scas
clc
push
(bad)
adc
or
movs
(bad)
jl
mov
cmp
aad
test
jbe
mov
sbb
inc
mov
lea
aad
test
jne
add
scas
test
and
fbstp
das
lea
fisub
sbb
out
scas
pop
sub
retf
loop
hlt
jb
in
outs
xsaves
(bad)
(bad)
and
sbb
aas
push
test
mov
(bad)
gs
sti
int3
and
sbb
jmp
sub
mov
js
test
ret
mov
pand
or
call
cli
jns
mov
adc
bound
cmp
imul
gs
mov
lods
shl
pop
call
xor
movs
stos
or
repnz
int
add
sbb
mov
add
repnz
xchg
aaa
call
mov
sub
repz
push
stos
xchg
(bad)
sbb
adc
lahf
fs
mov
fidiv
pop
xor
jnp
popf
inc
xor
add
sub
and
inc
jmp
(bad)
lock
mov
sbb
mov
ret
mov
inc
div
xchg
lock
cmps
test
mov
dec
push
and
gs
lea
pushf
popa
loop
mov
aaa
ins
xchg
add
add
mov
xchg
mov
stos
test
(bad)
mov
adc
mov
test
mov
enter
push
data16
pop
pop
jmp
pop
push
ins
sbb
cwde
outs
in
pop
pop
adc
mov
mov
sub
stos
ds
pop
(bad)
cmp
xchg
stos
jae
pushf
mov
xlat
test
lahf
jecxz
xchg
(bad)
scas
adc
or
call
aam
ja
mov
xchg
xor
test
jne
fidivr
dec
dec
(bad)
dec
fldln2
xchg
mov
les
and
imul
cmp
test
shl
mov
ja
scas
push
cs
sub
les
pushf
jns
pop
pop
sbb
(bad)
cmc
mov
rol
out
loope
and
adc
mov
sub
imul
add
(bad)
inc
mov
gs
aad
(bad)
add
cmp
out
out
test
sub
aad
dec
sar
std
mov
sbb
xchg
retf
in
adc
add
push
adc
fwait
loope
push
xor
scas
shl
pusha
or
daa
xor
call
mov
stc
pop
push
mov
adc
dec
mov
mov
or
call
cmp
dec
lea
in
mov
fdiv
(bad)
mov
push
push
jb
pop
cmps
(bad)
out
(bad)
mov
mov
loop
retf
loop
cmp
add
int3
cmp
ret
cmp
push
scas
pop
in
cs
jo
daa
mov
cld
je
fidiv
cmc
xchg
sub
jnp
jns
mov
fsubr
fstp
cmps
out
adc
push
xor
sbb
sbb
adc
pop
xchg
adc
in
sbb
mov
xor
int
loope
sbb
hlt
or
xchg
or
outs
shl
pop
movs
mov
loope
fld
(bad)
cmps
sahf
loopne
sbb
jg
xchg
outs
inc
icebp
mov
out
mov
mov
and
stc
add
or
outs
(bad)
mov
jmp
ins
mov
popf
stos
cld
scas
std
mov
shr
pop
push
mov
imul
jbe
push
outs
scas
mov
dec
imul
cdq
sahf
cwde
mov
in
or
mul
jnp
fistp
mov
pusha
mov
pushf
in
fld
jge
lock
mov
(bad)
mov
adc
pusha
xchg
sti
loop
lahf
or
je
cmp
push
movs
inc
mov
xlat
xchg
repnz
sti
ja
xchg
pmulhw
shl
xchg
movs
inc
add
dec
repz
pusha
adc
out
movs
push
pop
scas
fst
inc
loop
jmp
cmp
cld
mov
jnp
xchg
sbb
ins
loope
add
cmp
mov
mov
fdivr
add
sbb
(bad)
and
adc
ror
das
push
cmp
xchg
sub
test
cmps
(bad)
push
mov
jge
movs
adc
mov
test
jecxz
jbe
cld
imul
shl
xor
repnz
in
mov
sbb
mov
mov
push
inc
bts
das
sti
sti
mov
and
js
xor
mov
or
mov
xchg
shl
stc
test
pop
push
fwait
(bad)
xor
mov
mov
into
push
fcom
ret
inc
call
stc
adc
jge
loope
dec
sub
mov
(bad)
jp
cmps
fidivr
popa
jo
cwde
mov
clc
jno
cmps
adc
pop
leave
out
(bad)
cmp
mov
jp
push
jb
idiv
pop
xor
xchg
sub
and
iret
ds
retf
and
rcl
or
cmp
push
jl
inc
aad
mov
mov
push
inc
sub
aaa
cmp
fwait
outs
loope
fdiv
jbe
inc
movs
xchg
clc
jne
aad
adc
push
jmp
jbe
inc
aad
aam
in
rsm
jno
aad
std
clc
inc
in
xchg
mov
aas
cmp
dec
cmp
pop
sub
cmp
and
stos
and
fbld
dec
cdq
lds
push
out
test
xchg
or
push
jecxz
inc
mov
adc
les
int
es
mov
in
movs
jne
push
push
data16
jl
xchg
js
inc
and
adc
repz
inc
outs
mov
repnz
dec
adc
repnz
inc
xchg
(bad)
jmp
(bad)
movs
xor
adc
push
das
(bad)
les
cmc
pop
inc
mov
dec
bnd
pop
leave
push
mov
fnstsw
push
pop
in
ficomp
add
fisubr
inc
inc
pop
pop
icebp
mov
xchg
dec
dec
loop
into
out
sub
xchg
or
pop
(bad)
shr
fmul
jb
xchg
sub
xchg
sahf
push
lds
adc
dec
xor
jns
loop
(bad)
or
int
jecxz
mov
mov
or
jg
pushf
xchg
xchg
lea
movs
jo
push
jne
mov
into
mov
iret
or
mov
or
stc
xchg
sbb
pop
dec
(bad)
movs
std
iret
cmp
std
xchg
pushf
rcr
(bad)
pop
cli
lea
push
adc
jecxz
dec
mov
repz
mov
mov
dec
xchg
bound
jbe
pop
out
xor
or
inc
jae
mov
adc
shr
ret
mov
arpl
(bad)
fimul
inc
cmp
inc
mov
movs
movs
ret
hlt
push
rol
add
pop
xacquire
repnz
(bad)
imul
sbb
xchg
(bad)
iret
adc
push
xlat
retf
shl
lea
push
mov
cmp
add
je
outs
mov
js
ins
(bad)
fstp
inc
movs
int
jmp
jmp
punpckhbw
cmp
cli
jbe
push
jno
loopne
and
mov
inc
fcomp
dec
(bad)
cmp
inc
das
in
jnp
in
push
ins
cmp
xchg
fcmovnbe
es
pop
jbe
cmp
dec
jle
sbb
addr16
push
test
es
xor
enter
mov
inc
mov
push
add
jmp
jmp
ins
retf
mov
dec
mov
or
ins
imul
out
dec
call
sub
jae
enter
aas
retf
inc
shl
push
cmc
jnp
cmp
and
dec
fucomi
in
add
mov
clc
xchg
mov
inc
sub
jecxz
sub
es
jecxz
mov
sbb
not
and
mov
rcr
(bad)
fcom
aam
int3
add
xor
lahf
adc
(bad)
fisubr
pop
mov
mov
jnp
sahf
loopne
jg
mov
sbb
fcomp
ins
mov
sbb
out
imul
popa
dec
fcmovbe
dec
or
out
xor
sbb
loopne
push
jns
fnstcw
push
movs
fs
imul
xchg
or
or
out
movs
add
or
aad
aad
or
in
aam
push
scas
sub
(bad)
in
add
loop
or
add
jl
pop
ret
mov
nop
fcmovu
sub
xchg
cwde
jo
or
shl
xchg
mov
dec
clc
sub
push
add
push
rcl
loope
inc
pop
mov
xchg
push
jle
je
dec
lea
add
add
push
cmp
das
inc
pop
data16
dec
hlt
test
je
pop
mov
pop
xchg
and
sub
aaa
dec
add
jmp
(bad)
sbb
add
and
sahf
fimul
pop
mov
mov
loopne
pop
push
shr
inc
bound
popf
add
les
mov
cmp
movs
repnz
mov
nop
mov
repnz
stc
cmp
rcl
sbb
pop
test
xchg
mov
push
mov
or
aam
ja
(bad)
pushf
scas
sbb
test
cwde
sub
or
cli
hlt
inc
dec
add
outs
push
call
push
shr
xor
push
xchg
ret
xchg
add
imul
push
cs
fisub
call
mov
test
cmp
adc
scas
jecxz
ret
jmp
(bad)
adc
and
sbb
outs
dec
icebp
mov
les
dec
loopne
leave
mov
dec
fmul
inc
cdq
or
sub
sbb
push
pop
inc
(bad)
ds
mov
fs
popf
mov
and
cmp
cli
push
das
cmc
dec
inc
xchg
in
pop
xchg
pop
xor
daa
int
cmp
test
xor
xlat
jmp
imul
lods
repnz
adc
cmp
sbb
sub
lods
sbb
out
jmp
jae
jae
adc
jl
push
dec
sar
fs
mov
lock
bound
ror
retf
pop
adc
xchg
vmxoff
cli
sbb
les
shr
add
or
and
jb
imul
ins
dec
and
not
out
outs
xor
icebp
ficom
pop
xchg
jns
push
sbb
test
mov
loop
pusha
cdq
daa
ficomp
add
bound
js
movs
imul
lahf
adc
js
dec
lahf
fcomp
jmp
inc
mov
imul
mov
jmp
fs
jmp
mov
add
shr
sbb
les
inc
push
sub
sti
ror
retf
jb
mov
fcmovb
pop
or
mov
adc
and
into
push
inc
sub
mov
call
cmp
mov
push
mov
movs
ret
je
mov
adc
icebp
das
repz
pop
fucomi
adc
push
jne
gs
in
push
add
sub
xchg
or
mov
push
arpl
jnp
mov
xchg
imul
mov
movs
pop
add
inc
fidiv
mov
cwde
cld
jb
or
movs
(bad)
fdiv
cwde
pusha
mov
idiv
shl
call
push
sub
or
cdq
sahf
jg
rol
and
fld1
lock
std
add
aaa
mov
jno
mov
mov
pop
sub
loope
xchg
ja
sub
mov
dec
loop
jmp
movs
xchg
loope
jl
out
cmp
add
mov
aaa
(bad)
retf
xchg
aaa
dec
adc
pop
mov
ficomp
mov
mov
cwde
clc
xchg
cmp
mov
lea
push
jnp
mov
je
mov
cld
fist
imul
sub
sub
mov
xor
into
or
aas
add
jge
mov
jecxz
adc
into
mov
dec
cmp
push
out
retf
ffreep
dec
mov
repz
jmp
lahf
add
xor
mov
mov
lea
iret
mov
js
pop
les
(bad)
icebp
inc
and
sti
dec
loopne
sti
push
das
xchg
xor
dec
test
in
je
jb
jns
jns
inc
sbb
imul
jecxz
xor
pop
mov
push
nop
in
je
inc
cmp
inc
pop
pusha
or
add
adc
add
jl
push
xchg
repz
push
repz
xor
js
jg
(bad)
popf
jl
sbb
mov
in
sub
push
add
jbe
imul
imul
lods
movs
loop
sub
stos
inc
xor
dec
mov
fstp
bound
(bad)
cmp
in
dec
cmp
adc
mov
jbe
fwait
mov
(bad)
jmp
out
mov
es
in
stc
inc
fnsave
std
popa
sbb
std
push
mov
jl
(bad)
lods
add
and
push
sbb
dec
out
mov
xchg
popa
pusha
clc
mov
in
cmp
inc
inc
dec
daa
loop
out
inc
addr16
mov
and
adc
aam
cs
jno
fcmovne
cmc
je
add
addr16
fistp
xor
and
mov
out
mov
pop
int
pushf
pop
push
icebp
push
into
das
adc
and
out
push
int3
in
fwait
inc
mov
and
outs
pusha
sbb
pop
movs
icebp
push
das
sbb
mov
and
les
dec
add
ftst
loop
or
inc
adc
jno
mov
mov
loopne
dec
rcr
(bad)
movs
cmp
hlt
out
jg
aas
nop
adc
scas
mov
movs
hlt
call
push
cmp
sbb
mov
imul
cwde
dec
(bad)
daa
cdq
jmp
adc
sbb
call
add
imul
dec
push
in
cmp
or
add
mov
push
(bad)
loopne
scas
mov
xor
shr
stos
mov
add
or
cmp
push
sub
add
neg
push
cdq
int
sbb
rcr
jge
mov
ror
(bad)
or
add
repz
sub
mov
cmp
or
fisubr
jns
mov
mov
stos
iret
sub
push
adc
xor
inc
pop
cmp
hlt
popa
sbb
adc
dec
dec
inc
dec
cmps
inc
mov
mov
loopne
push
and
and
iret
xchg
pop
in
jle
mov
xchg
add
test
sub
push
pop
clc
lock
in
mov
gs
stos
ins
mov
enter
out
(bad)
push
loope
jmp
xchg
outs
xor
popf
imul
into
outs
imul
or
rcr
jno
mov
stos
mov
repz
idiv
out
adc
mov
mov
(bad)
dec
add
xlat
ja
dec
pop
movs
icebp
sbb
mov
inc
scas
retf
ror
imul
xor
push
xchg
ret
jnp
xchg
fistp
retf
test
and
adc
movs
xrelease
pusha
sar
dec
and
out
jae
fcom
fisub
push
push
stos
cmp
icebp
cmp
es
cmp
xor
mov
in
inc
sar
cmps
pop
aad
mov
(bad)
lock
mov
mov
or
fild
xlat
nop
jp
mov
out
xchg
push
outs
out
fwait
xor
ror
and
sub
cmp
in
jecxz
sbb
inc
test
sub
pop
dec
fild
and
cmp
idiv
inc
push
adc
mov
lea
fistp
mov
rcr
mov
sar
cmps
call
adc
scas
push
aas
rcl
push
sub
jl
jp
adc
fstp
dec
out
xor
stc
cli
sub
enter
imul
mov
call
fbstp
mov
push
loope
mov
xchg
dec
rcr
cmp
jo
std
fucomi
mov
les
lea
jge
pop
xor
sub
adc
pop
dec
dec
aad
mov
imul
scas
movs
scas
or
jae
stos
sahf
shl
pop
jl
xchg
push
call
inc
and
mov
stc
sahf
sbb
jbe
loopne
push
mov
pop
xor
add
mov
adc
movs
xor
jo
inc
xchg
(bad)
cmp
(bad)
clc
adc
(bad)
int3
push
sbb
xor
fmul
scas
lahf
jne
jns
jo
test
pop
push
inc
push
bound
dec
arpl
(bad)
fld
pop
and
outs
xor
outs
daa
inc
mov
clc
(bad)
shr
movs
push
dec
mov
enter
enter
hlt
test
daa
popa
pop
cwde
(bad)
cmp
call
es
ja
xchg
or
(bad)
dec
outs
stc
sub
sub
sub
icebp
cs
dec
sub
mov
sub
jecxz
mov
cmp
inc
mov
cld
clc
cld
and
mov
not
pop
mov
das
sub
jno
push
test
jb
mov
pop
mov
or
and
test
out
dec
bound
sbb
movs
aaa
push
int
sub
repnz
dec
imul
and
hlt
or
push
std
sar
cdq
dec
push
xchg
iret
add
xchg
mov
mov
push
cmc
adc
xchg
mov
sar
retf
mov
std
outs
in
jmp
jge
mov
sbb
sub
mov
mov
jb
hlt
adc
(bad)
cld
frstor
in
jnp
or
int
add
sahf
mov
scas
icebp
fild
call
ss
xlat
push
sbb
fucom
adc
adc
mov
sbb
das
repnz
jle
mov
int
loop
mov
pop
jg
and
rcl
data16
jnp
loop
aam
xor
repz
sar
cld
(bad)
mov
jno
pop
jo
repnz
mov
dec
pop
(bad)
loop
dec
rcl
je
inc
in
mov
push
or
out
frstor
sub
push
jno
daa
rcr
and
cli
pusha
add
xchg
fistp
add
jne
cs
mov
stc
lods
scas
stos
fstp
xor
xchg
cs
mov
pop
cdq
cli
fistp
aam
outs
dec
mov
sub
push
adc
sub
mov
fmul
xchg
jge
btr
add
push
xor
push
or
push
mov
sbb
daa
pop
lea
xchg
jl
rol
push
dec
add
jnp
xchg
ins
neg
dec
mov
aas
or
ret
jmp
xchg
clc
cmp
add
sub
fbstp
inc
xchg
cmp
dec
jp
inc
push
loopne
mov
std
pushf
loope
fldcw
jmp
xor
or
mov
jecxz
or
fmul
add
jle
cmp
add
xor
rcl
pop
inc
and
cmc
arpl
xchg
cmp
bnd
call
pop
or
aam
hlt
mov
aaa
rcr
dec
push
add
ret
xor
test
in
push
xchg
imul
ss
mov
aam
jns
shr
pop
adc
push
loopne
sub
and
aam
sbb
fptan
add
xor
dec
aaa
aam
seto
inc
ret
mov
hlt
imul
fstp
mov
retf
dec
pop
jmp
jl
loop
pop
ret
lds
push
mov
jne
adc
repz
call
jne
test
jb
cmp
jns
rol
sti
gs
mov
push
xor
push
fldcw
sbb
push
adc
(bad)
mov
ins
mov
ins
div
xor
pop
jmp
mov
and
in
push
sub
push
shr
dec
mov
dec
(bad)
ret
lock
daa
push
loopne
mov
cmps
adc
or
and
push
fiadd
and
pop
cdq
inc
hlt
pop
cdq
mov
inc
jne
aad
dec
pop
push
jne
sub
pop
jo
pop
out
cmp
lds
dec
in
std
jbe
test
fiadd
sbb
jmp
or
jl
hlt
das
fdiv
mov
test
push
dec
repnz
cli
jno
push
mov
sub
jge
lock
and
push
frstor
adc
dec
bound
gs
or
retf
dec
enter
dec
std
loope
icebp
movs
or
jo
and
ins
(bad)
aaa
sub
jo
jecxz
push
in
dec
push
jp
cld
imul
cmps
inc
ficomp
mov
inc
mov
mov
or
test
xchg
sbb
mov
shr
mov
mov
xchg
int3
add
scas
nop
mov
sbb
mov
add
call
mov
mov
push
mov
or
adc
mov
div
je
repz
or
(bad)
bswap
retf
add
mov
(bad)
stos
leave
arpl
out
or
rol
ror
jmp
cmps
dec
jmp
(bad)
mov
repz
push
jmp
retf
and
sahf
dec
fcomp
mul
inc
sbb
clc
aaa
mov
cmp
shl
and
push
mov
dec
cmp
(bad)
ja
inc
jmp
jp
push
jae
inc
test
int3
pop
pop
dec
sub
jmp
sti
ror
mov
rol
jp
add
sbb
jmp
dec
inc
add
inc
or
mov
xchg
dec
mov
or
loope
inc
cmp
retf
cmp
and
loope
or
int3
mov
add
inc
pusha
lahf
out
test
addr16
stc
enter
cwde
adc
imul
inc
mov
mov
sbb
mov
inc
mov
push
cdq
gs
pop
fdivr
cmp
mov
test
lods
popf
mov
cmp
mov
inc
daa
xchg
data16
test
dec
jl
jmp
test
push
jecxz
sub
fs
mov
xor
mov
mov
mov
imul
and
cld
push
ret
pop
jle
sar
sti
call
sbb
sti
push
fxch
mov
xor
cs
test
in
jecxz
std
adc
lods
pop
sub
repz
cmp
std
or
xchg
repz
xor
hlt
repz
aad
inc
fmul
add
sahf
xchg
test
push
or
cmp
iret
cdq
inc
push
imul
mov
pop
scas
xchg
mov
add
jbe
fcmovne
(bad)
and
jbe
xchg
psllq
es
sub
mov
fidivr
out
xchg
cmp
pop
(bad)
cmps
mov
jle
stos
jecxz
xchg
xor
stos
mov
or
or
jnp
lods
call
push
gs
xchg
adc
(bad)
mov
cdq
dec
mov
xor
and
shl
lahf
dec
cs
dec
call
in
jecxz
stos
cmps
int
vorps
test
cmps
cmp
sub
dec
lods
pop
push
arpl
int3
and
mov
mov
outs
push
and
jns
pop
inc
sar
jle
jne
out
and
mov
lds
pusha
repz
call
test
inc
outs
push
jo
mov
in
or
push
add
jbe
imul
scas
(bad)
push
or
and
leave
mov
mov
mov
adc
icebp
aam
sbb
in
out
xchg
cmp
xchg
mov
or
repnz
test
mov
mov
(bad)
in
add
(bad)
xor
sbb
imul
dec
xor
jno
mov
enter
ins
sbb
jge
inc
mul
daa
xacquire
test
cld
mov
mov
mov
cmp
mov
or
jl
cli
jmp
retf
push
sub
in
sub
outs
jle
cmps
jecxz
or
rcr
mov
sub
dec
mov
pop
sub
add
(bad)
jmp
(bad)
or
mov
xchg
in
sub
and
jne
in
pop
scas
loop
repnz
pop
nop
xchg
dec
pop
mov
xor
jno
mov
popf
inc
fld
cmp
loop
or
jg
jno
in
pop
inc
push
dec
rcl
pushf
or
data16
pop
add
les
inc
cmp
loopne
sub
mov
mov
and
xchg
inc
fsub
sbb
cli
sub
push
or
outs
daa
adc
cmp
sti
aam
sbb
movs
aaa
test
jmp
push
inc
or
pop
mov
aas
retf
jmp
cmp
cli
popa
outs
or
inc
repz
js
or
cmc
enter
add
ins
cmp
push
ret
shr
sub
xchg
iret
inc
std
xor
dec
sub
outs
out
sub
mov
lahf
sbb
mov
lods
mov
jmp
sbb
xchg
leave
cmps
retf
fidiv
hlt
fstp
dec
movs
lahf
cmps
cmp
sub
pop
pop
test
pop
loope
push
pop
xlat
fmulp
xor
jae
push
add
cmps
add
adc
and
ss
pusha
inc
test
test
xchg
repz
leave
push
jmp
aaa
inc
lods
mov
cmp
pop
and
jo
jp
imul
jle
jne
outs
add
pop
jnp
or
stos
sbb
jbe
jo
lds
imul
mov
mov
xor
test
clc
aam
xchg
jmp
enter
ror
sub
pushf
movs
adc
sub
lods
add
test
jbe
pop
jnp
dec
aas
pop
inc
cwde
dec
jnp
mov
hlt
jae
dec
mov
rol
mov
loopne
sub
sbb
test
sbb
mov
aaa
add
in
shl
call
lds
mov
mov
std
add
fadd
dec
into
pop
cmps
xchg
jecxz
ins
outs
jnp
jns
fsub
mov
rcr
loope
mov
sbb
aaa
pop
dec
dec
xchg
enter
xchg
mov
in
dec
scas
daa
fwait
das
jmp
test
and
mov
push
dec
xchg
xor
xchg
mov
inc
int3
push
mov
fbld
jmp
add
mov
call
add
test
fadd
jae
in
pop
jno
shr
(bad)
into
in
pop
xchg
cld
mov
push
cmp
mov
push
adc
in
xor
rcr
ds
mov
out
rcl
jmp
and
lea
mul
pusha
fisub
pop
jbe
ror
div
test
fcmovne
xor
jg
xor
sub
xchg
loopne
clc
dec
and
dec
dec
adc
fstp
rcr
sbb
(bad)
pmuludq
xchg
stos
addr16
adc
outs
int
jne
mov
add
cli
pop
or
daa
adc
mov
pop
mov
stos
sar
sbb
jmp
cmp
mov
xchg
or
pop
je
mov
sbb
out
inc
imul
push
xchg
sbb
ficomp
xor
out
dec
push
popa
mov
mov
inc
or
and
fidivr
fcmove
ja
cmc
gs
neg
fld
ds
cs
gs
fs
stc
adc
or
rol
hlt
xchg
xchg
xchg
jecxz
scas
jb
inc
int
adc
jle
jp
call
js
mov
shl
and
into
mov
or
jg
adc
sti
dec
cmc
inc
xor
mov
lods
push
mov
cmp
pushf
std
fadd
int
sbb
dec
cmc
int3
inc
mov
dec
xchg
test
pop
repnz
inc
xor
xor
std
adc
mov
data16
stos
and
fwait
loopne
out
int3
mov
loop
add
jp
sbb
push
clc
adc
cmp
mov
sbb
scas
cmps
pusha
out
xor
jge
fldenv
mov
aaa
ror
les
cmps
retf
inc
pop
jo
iret
mov
js
adc
sub
cld
adc
repz
sbb
jbe
xchg
enter
add
xlat
mov
rcr
adc
push
add
xor
mov
cmc
mov
iret
mov
pop
push
adc
stc
cmp
dec
leave
xchg
addr16
arpl
pop
out
cmp
sbb
pop
es
jl
arpl
mov
ret
sar
mov
sbb
mov
stc
and
sub
cdq
stos
jmp
push
or
mov
push
mov
mov
ja
(bad)
int3
cdq
xor
in
or
(bad)
in
adc
pop
sub
sub
and
push
test
pop
mov
jl
push
or
cmp
jb
repz
or
xchg
push
pop
imul
call
push
aad
in
push
mov
jg
push
movs
pop
or
push
inc
push
lods
dec
add
and
pushf
cmp
add
mov
add
xchg
das
test
les
test
xor
lods
scas
cmp
mov
mov
cld
mov
xor
and
lea
jmp
push
dec
setne
ds
add
int3
popa
pop
sahf
sbb
jmp
sbb
push
fwait
inc
push
arpl
popa
sbb
lds
outs
dec
es
retf
xchg
mov
hlt
pop
push
icebp
arpl
repz
repz
lods
and
ret
adc
movs
nop
enter
retf
xor
adc
daa
lock
inc
aas
test
xchg
fsub
adc
xchg
jle
jecxz
add
xor
rol
adc
mov
mov
inc
(bad)
and
mov
aas
mov
aas
sub
mov
and
cmp
jmp
cdq
push
inc
adc
fcmovnbe
xor
push
mov
push
xchg
pop
je
mov
push
int3
dec
lahf
into
movs
int
into
pop
nop
aas
call
dec
jmp
call
(bad)
jb
test
mov
sub
mov
dec
pop
add
bnd
lock
mov
xchg
scas
sbb
inc
cli
retf
popf
test
add
fld
push
jg
test
cs
push
std
adc
(bad)
popf
jl
jnp
sub
xchg
fbld
or
pop
or
lods
inc
icebp
mov
mov
sub
mov
imul
pop
pop
mov
scas
cwde
je
and
dec
or
mov
sbb
xor
cmps
mov
in
pop
aaa
mov
cdq
mov
stos
cli
into
add
push
rcr
dec
pop
(bad)
je
test
lds
lock
popf
loop
shl
daa
xor
jle
dec
inc
(bad)
out
pop
jg
cmc
in
mov
mov
add
(bad)
mov
mov
or
fdiv
cmp
push
xchg
adc
inc
int
(bad)
aad
xchg
fiadd
scas
mov
mov
push
pop
test
daa
mov
call
aaa
sahf
mov
in
je
sub
push
push
push
aaa
push
xor
ins
mov
aas
outs
mov
xchg
push
hlt
fsub
add
mov
pop
imul
inc
mov
xor
xchg
push
mov
daa
mov
push
push
stos
lock
shld
cmps
mov
mov
dec
mov
jge
cmps
clc
jl
jge
fst
sub
jle
or
inc
dec
test
les
data16
nop
adc
fisttp
fldcw
pop
jmp
movs
xchg
(bad)
jmp
xchg
push
xchg
aas
daa
fstp
ins
inc
push
mov
dec
inc
loopne
fwait
mov
mov
loopne
sub
hlt
sbb
add
cdq
or
sbb
mov
xor
fst
aam
dec
pop
loope
or
sub
rol
shr
xchg
out
fs
cs
inc
mov
cmp
imul
scas
push
imul
es
repz
mov
xor
and
sub
xchg
and
fs
push
fnstenv
jecxz
call
je
sbb
clc
mov
add
lods
mov
loopne
mov
sub
pop
stc
adc
jg
es
push
sti
sub
jp
sub
or
mov
in
fdiv
xor
and
push
repz
mov
mov
and
sub
push
jb
jmp
cmps
xchg
sti
inc
pop
or
into
rol
push
stos
inc
xchg
cmp
dec
xor
cwde
push
outs
adc
dec
jo
loopne
hlt
xchg
xor
sbb
pusha
shl
bound
cld
popf
imul
push
mov
xor
and
xor
xchg
mov
lds
jge
enter
icebp
mov
sbb
in
ret
movs
mov
inc
inc
pop
xchg
fwait
jl
imul
push
inc
push
mov
mov
cmps
xor
aad
je
sub
loope
mov
into
and
dec
cmp
lods
retf
or
push
push
mov
iret
(bad)
cmps
jg
iret
das
dec
icebp
inc
sub
sub
cmps
fnstenv
jg
scas
jo
inc
dec
xchg
jb
cmp
xor
sbb
xor
rcr
pop
in
test
pop
sbb
lods
push
into
xor
pop
imul
iret
mov
test
popa
fmul
inc
movs
aad
inc
xlat
push
movs
movs
jmp
add
sar
loope
add
ja
xchg
jo
ins
xor
aaa
fwait
call
popf
pop
idiv
jne
movs
movs
retf
inc
out
pop
loope
cmp
or
inc
sub
xchg
xchg
arpl
(bad)
push
pop
cmp
adc
sar
jg
dec
pop
push
inc
fcmovnu
mov
add
gs
and
jb
in
imul
sub
stos
aad
xchg
jns
and
sbb
dec
mov
jno
pop
sub
add
loope
xchg
fs
inc
lea
mov
retf
data16
mul
hlt
(bad)
jmp
mov
jae
je
inc
leave
in
rol
stos
pop
push
(bad)
jle
pop
sti
xlat
jmp
jns
dec
rol
mov
fbstp
jg
cld
jmp
fdivr
sahf
imul
jp
hlt
push
xor
push
mov
inc
pop
data16
(bad)
mov
pusha
int3
aam
fcmovnbe
adc
fmul
mov
outs
add
xchg
jp
cs
sete
(bad)
inc
mov
shl
dec
and
pop
and
loope
jl
jbe
pop
pop
pop
nop
push
pop
lahf
jge
mov
into
add
inc
(bad)
gs
or
(bad)
push
pushf
lods
sbb
data16
stc
rol
hlt
stos
pusha
inc
mov
xor
sbb
mov
xchg
jnp
call
popa
icebp
push
or
lods
sti
ror
inc
fidiv
test
or
fimul
(bad)
cmp
into
inc
call
shl
adc
movs
xor
xchg
sub
daa
outs
jmp
or
ja
scas
or
in
inc
pop
pop
add
loope
and
gs
outs
jg
xchg
mov
xchg
cmp
and
pop
xchg
push
inc
aam
jne
pushf
je
mov
and
test
xchg
aad
mov
pop
dec
mov
(bad)
mov
mov
retf
or
lea
adc
cdq
mov
cmps
push
call
and
jmp
(bad)
loopne
mov
mov
mul
mov
test
push
aas
jmp
jecxz
out
dec
lods
cwde
pop
fs
adc
lock
add
icebp
cmp
sub
pop
test
pop
dec
or
add
fidiv
cmp
rcr
daa
jge
jo
(bad)
repz
adc
movs
pushf
std
call
int3
ins
(bad)
xor
sbb
cmp
ficom
mov
fcmovne
in
dec
out
retf
scas
jge
fwait
mov
jae
adc
or
aam
inc
into
add
popf
xchg
test
dec
push
aam
clc
jecxz
adc
push
push
(bad)
and
mov
rcr
movs
and
sub
lods
ret
dec
cmp
mov
movs
or
inc
or
dec
push
dec
mov
mov
inc
sbb
pop
inc
push
sbb
xchg
jbe
into
jne
dec
(bad)
pop
mov
ror
dec
rcl
jne
xor
ret
popa
je
xor
xchg
mov
cmc
das
les
arpl
out
ror
xchg
lahf
jecxz
lahf
pop
leave
push
mov
and
scas
call
push
fldcw
xchg
xchg
(bad)
lea
pop
cwde
add
mov
ror
addr16
cld
push
daa
shl
test
xchg
popa
add
add
jo
dec
ss
fisubr
outs
jmp
icebp
fs
pop
fimul
mov
stos
dec
ret
and
movs
ret
fmulp
loope
icebp
mov
aad
push
test
xor
mov
mov
inc
adc
mov
xchg
jno
adc
ins
push
es
mov
loop
fild
int3
and
arpl
dec
sub
push
mov
mov
adc
sub
xor
xor
dec
push
mov
cwde
xor
sbb
test
sub
arpl
hlt
leave
or
js
adc
hlt
(bad)
jmp
add
mov
jns
scas
jle
iret
pop
and
popf
dec
jo
or
daa
(bad)
ffreep
pop
push
xor
jo
repnz
mov
call
mov
call
mov
sub
xor
shr
scas
sbb
push
adc
vmovdqa
mov
dec
cmc
cdq
pop
mov
sub
repz
popf
jns
lods
pop
mov
mov
(bad)
retf
push
and
mov
cmp
push
cmp
addr16
or
leave
sub
pop
pop
mov
dec
mov
out
mov
out
sbb
fsub
xor
and
arpl
cmp
sbb
mov
js
imul
std
push
mov
js
mov
push
push
mov
test
sti
out
sar
adc
(bad)
(bad)
aam
rcr
fnstcw
inc
aaa
ja
fld
iret
push
and
mov
jbe
fs
outs
or
test
adc
in
adc
iret
push
dec
jb
sahf
repz
fadd
push
outs
adc
dec
push
mov
dec
or
push
outs
pop
mov
xchg
fld
sbb
jno
(bad)
fnstenv
aaa
inc
jbe
cli
inc
cmps
call
pop
lds
push
fs
sar
xchg
xchg
dec
dec
in
call
adc
xchg
call
mov
jne
cmps
sahf
mov
outs
sar
xor
in
call
pop
add
add
pop
jg
(bad)
mov
sub
stos
dec
popf
mov
inc
xchg
call
xor
adc
mov
sub
fbstp
inc
fstp
mov
pop
in
sbb
out
mov
or
inc
add
fisub
std
ror
or
add
pop
fs
fimul
pop
into
das
loop
jne
mov
dec
cdq
xor
pop
mov
ss
aas
pop
jns
add
mov
iret
mov
dec
pop
add
nop
push
push
sub
sub
push
jg
xchg
push
ret
in
pop
stos
pushw
cmp
push
cmp
push
inc
pop
and
js
pusha
mov
mov
add
jne
sti
pushf
xor
(bad)
cld
les
int3
cmps
lods
dec
loope
dec
icebp
jbe
mov
out
shr
fs
test
xlat
stos
add
mov
add
jo
mov
clts
sar
push
pop
(bad)
cmps
and
pop
outs
jl
dec
pushf
mov
(bad)
scas
stos
hlt
iret
jg
clc
dec
pop
cmc
sub
xchg
jae
jnp
push
jmp
pop
sub
mov
jne
mov
cmp
mov
shl
cmp
retf
in
mov
mov
jo
dec
pop
(bad)
out
in
stos
test
inc
fbstp
outs
ret
pop
push
mov
sti
out
sub
into
lahf
shr
neg
inc
or
mov
mov
int3
aas
sbb
pop
movs
or
xchg
push
cmp
dec
cmp
icebp
js
push
adc
lock
add
mov
adc
div
enter
mov
or
loope
sub
mov
sub
jne
mov
outs
sbb
fst
bswap
sbb
cmp
jae
hlt
(bad)
sub
xlat
int3
cli
push
cmp
xor
jns
imul
lods
repnz
jno
in
cdq
ja
cmp
inc
cmp
mov
movs
ss
mov
dec
test
repz
xchg
pop
xor
call
sub
cli
out
dec
mov
pop
lods
into
div
ror
fwait
and
dec
das
rcl
out
push
icebp
stc
jo
out
and
fwait
xchg
mov
adc
push
pop
inc
sub
or
sti
push
jb
ds
hlt
sbb
js
sti
imul
mov
cmc
sbb
in
pop
cmp
out
jmp
sub
xchg
mov
shl
(bad)
aam
(bad)
sbb
or
adc
inc
cmp
xchg
cmc
lods
mov
int3
movs
leave
push
inc
stos
cmps
adc
movs
cmps
ret
inc
add
or
(bad)
adc
mov
popa
iret
inc
jns
inc
adc
push
jmp
mov
icebp
push
mov
jp
rcl
in
test
pop
mov
fdivp
test
mov
jmp
inc
xchg
jne
push
xchg
jb
sbb
cmp
jns
or
sbb
inc
adc
(bad)
adc
clc
cdq
sahf
or
push
or
repz
push
mov
add
mov
jo
fsub
push
pop
retf
jmp
mov
jecxz
cdq
loope
fadd
pop
jge
je
jp
test
cli
ret
daa
loopne
sbb
push
dec
jmp
push
out
aaa
sbb
and
rol
(bad)
imul
sbb
jnp
mov
imul
mov
popf
js
aas
pop
stos
dec
loope
add
rcl
rcl
or
xchg
cli
adc
test
push
stos
mov
inc
xor
or
or
mov
cmp
mov
cs
into
push
shl
cmps
add
lds
pop
push
and
mov
int
sbb
mov
push
adc
mov
cld
xchg
test
jb
push
mov
iret
sbb
outs
pop
daa
or
and
ins
push
icebp
or
mov
outs
jbe
(bad)
xchg
aad
push
neg
in
cmp
xor
mov
push
mov
pop
sub
jo
fwait
dec
sub
add
push
and
inc
push
pop
xchg
hlt
and
add
pop
repz
call
xchg
mov
cmp
pop
lods
aaa
sbb
add
pop
or
adc
mov
inc
(bad)
out
push
mov
mul
push
jbe
pop
scas
inc
in
xlat
dec
retf
push
cmp
jbe
mov
pop
ror
lods
es
cwde
sbb
push
jno
xchg
cwde
mov
mov
fs
and
int
add
cli
push
mov
ret
jnp
(bad)
cli
mov
sbb
ins
and
mov
aaa
add
das
bound
retf
jmp
nop
adc
(bad)
jl
xlat
xchg
ins
hlt
jge
inc
adc
and
cli
in
popa
cmps
jge
cmps
js
xor
push
js
xlat
add
in
jmp
adc
pop
jmp
jo
leave
jnp
fwait
test
sbb
scas
cmp
cmp
mov
inc
outs
push
addr16
push
rcr
addr16
add
and
push
jg
push
sbb
pop
mov
add
gs
or
sub
mov
mov
loopne
pushf
add
inc
or
mov
(bad)
adc
mov
push
inc
and
jmp
xchg
aaa
fdiv
sbb
push
inc
jns
cmp
mov
mov
adc
cdq
sbb
ret
sub
repnz
or
push
push
sti
pop
out
cmp
dec
push
das
hlt
jbe
sbb
mov
(bad)
or
jns
repnz
pop
mov
ja
div
and
je
jp
dec
mov
fcom
pushf
inc
cmp
call
mov
inc
jns
dec
outs
cmp
in
sbb
sub
rcl
pop
seta
mov
cmc
cld
(bad)
mov
pop
je
idiv
mov
movs
add
test
sub
fsub
cdq
push
dec
clc
sahf
repnz
lds
xchg
nop
xchg
sar
or
enter
mov
xor
mov
lds
mov
pop
cld
lock
imul
in
xor
inc
xchg
pop
mov
mov
and
add
enter
sub
add
ins
addr16
enter
inc
and
bound
std
ins
xchg
xchg
add
pusha
pop
add
dec
shl
fdiv
mov
jp
sti
push
loope
xchg
hlt
jge
pop
mov
test
nop
dec
scas
pushf
arpl
push
out
rcl
gs
out
dec
lock
pop
inc
inc
pop
jno
push
mov
lock
icebp
and
jmp
std
push
popa
jae
mov
jge
adc
ret
dec
mov
and
cdq
das
icebp
aad
push
jmp
xor
mov
(bad)
pop
(bad)
cs
adc
inc
movs
mov
das
jno
push
scas
fcmove
aas
inc
fdivr
and
retf
sbb
adc
or
pop
das
add
ret
loop
mov
lods
jge
repz
mov
mov
dec
mov
scas
push
mov
or
mov
shl
daa
mov
loop
mov
pop
mov
mov
push
clc
repnz
mov
hlt
out
or
sbb
mov
jno
mov
add
ret
mov
and
stos
scas
inc
aaa
lods
pusha
sub
mov
cmp
jbe
mov
lods
push
mov
sub
sbb
cmp
mov
in
cmps
mov
xchg
mov
push
(bad)
aam
pushf
add
inc
add
pop
in
or
nop
stos
add
mov
push
pop
dec
shr
(bad)
shr
xor
mov
adc
dec
sub
icebp
int
clc
xchg
sub
jmp
je
ss
enter
fwait
jns
jne
or
test
adc
loopne
data16
push
fwait
xchg
fcomp
into
jb
push
push
sbb
int3
xchg
cli
pop
lea
xlat
mov
mov
mov
dec
pop
mov
mov
jle
mov
cld
add
(bad)
test
aad
call
lods
scas
mov
fsubr
jno
and
repz
jmp
imul
(bad)
jmp
jb
and
rcl
xchg
mov
mov
dec
pop
sbb
push
cmp
sub
cmp
les
retf
sub
add
add
out
mov
mov
sub
leave
jns
adc
popa
and
and
(bad)
(bad)
(bad)
std
or
stos
mov
cmps
push
popf
call
outs
or
jns
jmp
pop
(bad)
fidivr
dec
imul
arpl
inc
(bad)
(bad)
cld
and
xchg
push
xchg
jae
pop
xor
sbb
xchg
jp
sbb
into
sbb
shl
shl
scas
xchg
dec
push
stos
dec
dec
in
cmp
pop
and
adc
push
ins
loopne
jmp
aad
fs
in
je
inc
mov
push
aaa
shl
test
lods
jecxz
jge
lock
into
push
shl
shl
xor
cmps
jno
hlt
sbb
or
loopne
and
pop
lock
or
adc
push
xor
into
imul
jae
xor
loopne
push
adc
dec
rcl
xchg
xor
aam
push
(bad)
(bad)
(bad)
retf
out
inc
test
es
pop
push
bswap
and
imul
xchg
xor
adc
adc
xor
or
dec
movs
call
add
rcr
push
iret
xchg
inc
xor
push
xchg
scas
xchg
sub
test
xchg
sub
pop
cmp
in
mov
dec
inc
daa
add
fsubr
movs
jo
ret
pop
loop
enter
push
xor
leave
gs
aam
or
(bad)
sub
es
pushf
adc
sti
call
out
jecxz
mov
dec
jg
mov
(bad)
clc
sbb
push
clc
dec
adc
lds
mov
lock
push
rol
cmps
mov
mov
xchg
jns
and
mov
mov
push
pop
icebp
add
xor
sbb
cdq
xchg
call
pop
out
cmps
or
movs
and
stos
xor
mov
inc
xchg
mov
outs
pop
push
xchg
mov
add
mov
dec
or
int
jp
add
cmp
shl
push
push
push
lods
mov
mov
imul
rcl
xchg
call
sbb
or
std
or
shl
jg
ss
cmp
adc
fwait
jmp
cmc
jl
hlt
ret
cwde
inc
mov
add
test
out
fild
retf
sbb
xor
sub
test
mov
repz
ss
or
(bad)
sub
cmp
call
adc
and
or
repnz
fst
jmp
divps
or
mov
mov
aam
dec
pop
push
jmp
inc
cmp
sub
mov
enter
jecxz
mov
iret
inc
out
mov
push
js
sbb
jg
cmp
jo
push
data16
(bad)
adc
sbb
jnp
xor
inc
mov
pop
push
push
fidiv
ds
jmp
fnstenv
rcr
push
push
push
pop
sbb
xlat
jno
and
(bad)
pop
loopne
cmp
xor
mov
imul
jmp
mov
mov
pop
arpl
inc
fucom
pop
cwde
pop
cmp
dec
mov
sti
ret
imul
jge
sbb
aas
div
sbb
mov
mov
xchg
stc
shr
rol
mov
adc
jp
ret
popf
inc
adc
sbb
push
repnz
stc
inc
sbb
out
mov
mov
mov
rol
into
xlat
mov
bound
ret
dec
add
repz
pop
mov
cld
add
mov
mov
fdiv
stos
outs
inc
jns
stos
inc
fdiv
call
(bad)
pop
call
mov
retf
ds
sbb
mov
stc
jmp
push
call
inc
data16
pop
and
push
jo
shl
xchg
push
popa
sbb
dec
inc
add
lock
aad
in
push
ins
stc
addr16
repz
pop
mov
cs
rol
ss
out
and
imul
movs
jno
mov
jne
xchg
dec
sub
xchg
add
jmp
or
jmp
sahf
push
sub
test
sub
loopne
dec
aaa
bound
xor
mov
sub
fsubrp
iret
call
mov
cmps
inc
jae
dec
jnp
add
mov
in
cmps
movs
loopne
xor
mov
les
dec
inc
inc
loopne
mov
rcr
push
jae
push
test
repz
adc
das
dec
mov
pop
jne
mov
sbb
(bad)
inc
and
aaa
imul
or
imul
fwait
fs
jmp
pushf
add
sahf
idiv
jge
pop
lods
jecxz
arpl
fs
ret
popf
mov
mov
mov
cwde
mov
test
mov
rcl
mov
mov
or
in
stc
imul
sbb
cmp
add
push
jno
pusha
loope
push
xchg
lods
jle
lock
arpl
arpl
int
dec
jmp
mov
call
cmp
bound
fnstenv
add
(bad)
cmp
sbb
std
inc
cdq
cwde
adc
(bad)
adc
jno
add
sub
xchg
lods
jnp
xchg
mov
fild
test
retf
jmp
mov
add
fild
jne
js
xor
and
jmp
mov
jae
add
outs
test
stc
push
fcom
ret
adc
sub
adc
xchg
bound
jns
dec
inc
in
jo
sbb
fcomip
cmp
and
xor
push
jmp
add
sbb
lea
lods
outs
pop
cwde
inc
leave
sbb
out
outs
xchg
mov
aas
cmp
push
dec
popf
inc
adc
(bad)
sahf
lock
sub
int3
into
pop
push
dec
movs
in
test
cmp
retf
clc
mov
loop
gs
and
daa
out
nop
(bad)
jns
inc
leave
mov
rcl
push
clc
dec
ins
inc
jae
mov
inc
add
js
dec
jmpw
jg
movs
aam
cwde
jae
jno
aad
xchg
fnstsw
mov
mov
pop
ror
cmp
dec
mov
jbe
leave
jg
jmp
xchg
stc
sahf
movs
inc
test
jb
mov
inc
aad
fs
mov
cmp
push
and
mov
or
cli
cmp
jmp
adc
mov
retf
mov
pop
xor
pop
leave
(bad)
jo
xlat
sub
cld
rcr
fidiv
sub
test
jo
mov
(bad)
fstp
mov
enter
mov
and
push
mov
stos
dec
in
aas
pop
add
stc
or
adc
mov
xchg
and
jecxz
xchg
(bad)
je
not
xchg
sti
push
dec
test
rcr
mov
dec
mov
mov
inc
push
int3
mov
jg
out
stc
jmp
add
fs
in
out
aad
pop
ret
aaa
ja
inc
xchg
jae
jmp
pop
mov
push
sub
aaa
(bad)
outs
and
out
jns
setbe
ins
test
pop
jle
int
neg
call
jno
fsubrp
imul
add
xchg
lock
(bad)
and
(bad)
movs
mov
xor
and
mov
or
jbe
loop
ret
mul
mov
loop
rcl
fidiv
test
add
popf
iret
pop
retf
mov
adc
daa
mov
xchg
xchg
and
mov
xchg
jmp
jmp
aas
lahf
add
mov
stos
xchg
and
je
add
push
fisttp
imul
mov
cwde
pop
aam
xchg
add
nop
inc
cs
jmp
mov
retf
adc
dec
bnd
dec
and
fldcw
sub
add
in
fmul
js
mov
test
fwait
mov
test
or
xchg
sbb
push
mov
call
mul
retf
xchg
movs
or
sbb
leave
push
retf
xchg
inc
adc
sub
jmp
cmp
fldcw
mov
in
pop
xor
addr16
sbb
pop
mov
loop
mov
repz
jae
(bad)
in
loopne
imul
push
push
and
cs
xchg
in
fistp
test
sahf
test
mov
add
mov
pop
scas
xor
pop
adc
inc
and
std
test
adc
movs
mov
call
pop
dec
nop
jnp
scas
(bad)
push
movs
fwait
enter
pop
scas
mov
push
mov
loopne
mov
call
fisubr
fisttp
addr16
cmp
mov
mov
fsub
into
jmp
jmp
gs
fcomp
pop
pusha
hlt
adc
push
sahf
(bad)
out
ret
(bad)
push
mov
js
sbb
push
jmp
lods
xchg
dec
mov
inc
jecxz
sbb
inc
inc
enter
pop
(bad)
pop
fcompp
rcr
std
jle
test
mov
ficomp
add
sbb
dec
fild
sahf
iret
push
xlat
(bad)
(bad)
xor
sub
push
or
dec
aam
push
ficom
shl
ror
test
jno
shl
stos
jbe
ins
int
popf
in
xchg
push
dec
and
stc
push
inc
fisttp
mov
xchg
imul
call
xor
sub
cmps
mov
mov
sar
push
fwait
loopne
stc
add
sub
jae
sbb
outs
xchg
int
aam
stos
loope
and
jmp
mov
std
jo
or
cwde
mov
frstor
mov
inc
lahf
mov
nop
repz
or
mov
aam
dec
mov
dec
jbe
shr
adc
add
adc
aam
mov
hlt
mov
cmp
ret
test
sbb
sub
sub
jge
das
retf
jae
dec
popf
push
xchg
fist
push
mov
test
out
lods
fsubr
fsubr
repz
sbb
push
in
or
jl
jecxz
stos
mov
xchg
lahf
repnz
xchg
xor
aas
sbb
loop
int3
and
inc
cmp
or
sar
add
cmp
cmc
out
push
cld
jb
pop
test
daa
sub
push
mov
xor
push
cwde
inc
retf
leave
call
test
test
xor
fadd
(bad)
in
jge
js
inc
sar
mov
adc
push
div
leave
mov
out
movs
xchg
jns
push
ja
ret
fcom
add
retf
mov
jb
mov
lds
inc
dec
mov
dec
cmps
imul
jmp
cmps
jmp
pop
ja
fs
inc
adc
mov
ret
ins
sub
paddw
xor
mov
sub
and
daa
jl
rcl
mov
sub
std
out
adc
pop
mov
mov
mov
dec
mov
mov
cs
shl
leave
mov
xor
setns
and
scas
mov
mov
gs
dec
cmc
das
movs
xchg
daa
test
lods
and
add
neg
inc
scas
hlt
inc
mov
outs
movs
push
call
(bad)
mov
adc
out
xchg
xchg
adc
and
test
das
lods
call
xchg
xchg
push
push
jbe
xor
fstp
ret
dec
mov
aam
cmp
mov
jl
add
push
call
inc
push
or
cmps
imul
int3
pop
test
enter
push
(bad)
xchg
gs
pop
push
call
aas
fisttp
xor
mov
push
push
inc
bound
mov
retf
fsub
or
cdq
ficomp
pop
dec
or
mov
(bad)
leave
fs
fstp
mov
nop
aam
inc
push
mov
push
mov
fisttp
iret
fist
xchg
add
pop
push
sbb
in
data16
cmps
push
out
cmp
ret
sahf
mov
pop
dec
xchg
not
and
pop
hlt
das
mov
fstp
push
out
sbb
cmps
inc
cdq
add
mov
add
mov
xor
lock
fmul
xor
cmp
loope
sbb
mov
call
xchg
mov
jl
pop
xchg
mov
pop
fdiv
dec
ja
mov
xchg
(bad)
add
sub
push
mov
(bad)
mov
daa
test
cwde
fwait
inc
mov
inc
mov
adc
(bad)
sub
pop
sub
(bad)
or
ficomp
arpl
push
xor
xor
inc
fs
cld
loope
inc
shl
cmps
fs
dec
jbe
call
add
and
xor
sahf
icebp
nop
sbb
mov
xor
stos
inc
pop
adc
cmp
mov
popf
mov
sbb
call
out
arpl
mov
mov
mov
sub
add
mov
sub
add
ds
sbb
stos
add
int
push
mov
inc
jp
test
ja
stos
test
inc
adc
or
fst
les
lock
aam
adc
(bad)
fwait
push
jo
sbb
inc
imul
dec
mov
das
lea
jo
xor
sub
sti
mov
xchg
xor
dec
inc
xchg
mov
stos
mov
cli
enter
ja
adc
mov
lods
push
out
int
mov
sbb
ss
popa
dec
loop
shl
fdiv
push
xchg
pop
xchg
out
test
or
cli
mov
repnz
out
pop
fwait
(bad)
and
fs
mov
dec
sti
mov
hlt
sbb
fsub
movs
ret
mov
push
das
sub
add
dec
addr16
gs
mov
test
mov
fwait
test
stc
or
fmul
dec
and
xchg
xlat
xor
sub
pop
ds
or
stc
call
repz
jmp
arpl
push
int
xchg
xchg
xor
jbe
push
ret
xor
xchg
cmps
test
(bad)
stc
pushf
or
iret
jecxz
xor
adc
xor
fcomp
xor
jle
movs
add
and
imul
inc
cmc
pop
fldl2e
jb
and
jmp
js
ror
mov
sbb
(bad)
xchg
popa
cmps
adc
out
sbb
pusha
pop
stc
std
mov
outs
out
jb
jnp
(bad)
sub
mov
test
out
fmul
ins
cmp
es
enter
add
push
ins
movs
jecxz
iret
fs
adc
jnp
mov
je
fisub
mov
dec
sub
popa
mov
pop
fld
arpl
xchg
pop
and
xchg
xor
lahf
xor
fisub
int3
push
retf
jns
sbb
inc
add
jae
jl
dec
push
ds
mov
vpcmpgtw
cdq
sbb
pop
dec
adc
pop
out
cmp
scas
imul
shr
fldenv
xchg
mov
dec
mov
mov
push
jle
les
(bad)
fwait
pushf
lea
mov
cmc
(bad)
scas
push
and
xchg
jp
xchg
(bad)
push
int3
or
push
rcl
into
xchg
inc
push
pop
aaa
push
sbb
shl
xchg
xchg
(bad)
lods
or
add
stos
jl
jecxz
test
mov
and
push
in
push
es
dec
(bad)
cmp
(bad)
pop
outs
loop
scas
mov
das
iret
data16
dec
test
outs
push
ficomp
stos
cmp
movs
ins
ror
sbb
or
div
clc
movntq
es
dec
xor
inc
js
ss
add
dec
mov
(bad)
enter
movs
push
addr16
daa
xchg
cs
stos
mov
mov
test
es
add
adc
arpl
pusha
call
mov
not
xchg
push
xor
repnz
setnp
fcmove
and
(bad)
mov
fst
je
loopne
mov
ss
or
daa
sbb
pop
rol
sbb
(bad)
xor
aas
cs
into
sti
mov
div
aam
dec
push
and
shl
add
pusha
or
add
mov
iret
sub
jns
pop
clc
das
jmp
int3
mov
mov
jg
dec
and
mov
sub
xchg
dec
movs
sub
or
test
mov
test
movs
push
les
shl
sbb
cmps
sub
stos
adc
fs
pop
add
mov
xor
push
lods
or
and
jle
sbb
jmp
pop
xchg
out
push
xchg
cmc
loopne
mov
gs
mov
pop
mov
sub
call
mov
sti
xchg
test
mov
pop
xchg
(bad)
jl
or
mov
sbb
and
mov
aam
in
jae
cmp
test
mov
cmp
mov
mov
dec
movs
fadd
not
out
mov
jmp
push
adc
sub
cmp
test
test
pop
dec
movs
xchg
test
in
push
push
pop
lahf
pop
ins
push
mov
sbb
push
pop
inc
js
das
jb
hlt
add
inc
adc
jb
or
xchg
icebp
push
iret
les
test
and
cdq
and
sbb
and
popf
jle
popa
mov
xchg
cmps
mov
jae
mov
daa
push
xchg
sti
data16
sub
outs
pop
push
pop
dec
sbb
pop
ja
sub
pushf
pop
test
popa
jns
mov
test
sbb
loope
aaa
sar
outs
add
mov
test
sub
inc
popa
jae
cmp
xchg
lods
js
jmp
out
sbb
repz
dec
inc
mov
cmp
leave
scas
jl
dec
outs
adc
mov
mov
and
(bad)
call
lahf
push
out
xchg
pop
int
call
cmps
test
mov
fcom
or
pop
or
lods
arpl
hlt
das
pop
xchg
pusha
out
xchg
adc
push
aas
pop
push
sub
adc
fwait
dec
mov
shl
stc
mov
mov
retf
or
dec
xchg
jbe
imul
sbb
test
xor
or
xchg
cmp
mov
rcr
ins
inc
cmps
xor
mov
dec
inc
inc
push
inc
(bad)
fdiv
jecxz
scas
mov
sbb
outs
aad
or
sti
cld
les
cs
mov
lahf
adc
mov
sub
addr16
push
shl
daa
mov
and
(bad)
push
xchg
lea
jge
mov
push
idiv
loope
mov
pop
cmp
fldenv
mov
in
mov
int
(bad)
push
xchg
and
mov
push
pop
lods
pop
jecxz
call
test
dec
jge
stc
test
jl
clc
pop
hlt
xchg
inc
icebp
icebp
stos
xor
xor
sub
add
adc
mov
test
jno
adc
push
jne
pop
pop
or
mov
fild
sbb
xor
jnp
inc
mov
mov
cmc
movs
sbb
jnp
xchg
pop
mov
inc
lods
xchg
pop
add
rcl
shl
sbb
mov
mov
jecxz
test
inc
mov
pop
pop
stc
sub
add
push
icebp
pop
(bad)
fisub
add
jno
aad
pusha
xor
and
pusha
frndint
inc
fistp
xchg
(bad)
mov
in
stc
dec
cmps
(bad)
sub
sti
inc
inc
or
std
(bad)
bound
jmp
das
mov
jp
stc
dec
jmp
outs
test
inc
cmps
cmp
cmp
pop
pop
cmp
pop
and
sbb
gs
jne
cmc
mov
pop
shl
push
push
add
add
(bad)
popa
cmp
and
xor
push
jp
push
xor
mov
pop
dec
jmp
mov
inc
and
mov
dec
addr16
adc
adc
dec
repz
fwait
mov
add
xchg
xchg
xor
sub
cmp
mov
mov
xchg
loope
mov
xchg
mov
jle
adc
shl
sar
cmp
outs
jns
and
fisubr
push
xchg
mov
gs
and
mov
scas
pushf
jns
cdq
add
dec
popf
icebp
stos
out
xor
push
jmp
mov
dec
or
pushf
adc
lahf
(bad)
mov
push
sar
test
or
pop
ds
mov
imul
or
push
pop
mov
dec
mov
jns
mov
pop
dec
pop
sub
pusha
enter
push
loop
(bad)
mov
sbb
mov
rcr
push
inc
cmp
cmc
outs
jmp
or
jmp
movs
pop
pop
or
jnp
movs
push
mov
add
xor
ins
mov
(bad)
shl
out
aam
cmp
addr16
loop
out
sbb
js
popa
pop
fidivr
ret
mov
stos
mov
mov
pop
aas
add
ja
ins
fisub
xor
and
sub
mov
jns
mov
inc
loopne
out
pushf
gs
cwde
jns
bound
mov
out
outs
inc
sar
(bad)
jge
jb
jbe
mov
mov
jbe
inc
clc
jmp
xor
mov
pusha
std
push
loop
mov
xchg
data16
rol
fdivrp
std
jmp
leave
fld
xchg
mov
sahf
aam
pop
xchg
ja
inc
mov
ins
pushf
mov
icebp
retf
sti
cmps
dec
aam
(bad)
(bad)
xor
call
popf
das
es
es
cmp
hlt
ss
push
test
and
pop
movs
sbb
out
sub
pusha
loope
sub
fs
adc
mov
adc
xchg
popa
dec
sbb
inc
(bad)
std
mov
push
pop
ror
pushf
xchg
mov
inc
lods
and
pop
retf
pop
mov
xor
cmps
inc
inc
inc
adc
push
pop
pop
push
outs
mov
inc
pavgw
xor
aam
aaa
and
out
js
(bad)
adc
or
out
sar
inc
dec
lock
mov
ins
xor
pop
sub
push
rcr
(bad)
cmovns
fcmovnb
or
movs
cs
mov
mov
dec
mov
sbb
inc
jp
(bad)
xor
push
call
test
test
mov
and
and
and
scas
mov
daa
jno
jnp
mov
sub
cdq
inc
mov
xchg
jae
dec
sub
sahf
aam
add
in
push
icebp
add
pusha
clc
xchg
sbb
mov
and
jb
xchg
fstp
xor
ret
cli
cdq
xchg
js
add
in
cli
mov
dec
lds
mov
and
xchg
push
icebp
retf
fiadd
sub
sbb
mov
out
sar
(bad)
movs
and
adc
bound
and
(bad)
lods
popf
ret
das
int
mov
nop
dec
pop
or
sub
cdq
dec
mov
rol
pop
pop
push
test
or
inc
ror
push
add
mov
cmp
movs
rcl
fidiv
xchg
jmp
jmp
fidivr
ss
jecxz
addr16
add
sbb
inc
stos
add
aas
movs
mov
jmp
xor
xchg
inc
outs
sub
jmp
out
and
or
sub
adc
icebp
sbb
sbb
or
scas
or
add
mov
nop
cmp
cmp
or
(bad)
xchg
sar
adc
pop
or
cld
fiadd
imul
test
ds
iret
mov
mov
je
push
push
pop
xor
dec
hlt
mov
jmp
test
mov
inc
pop
sbb
scas
ficomp
or
ds
ins
fwait
movs
add
fwait
es
and
jmp
cmp
scas
daa
cs
adc
xchg
(bad)
mov
xchg
push
jns
ins
call
sub
dec
fcom
or
pop
test
bound
adc
jmp
mov
jns
mov
fs
adc
int
retf
in
mov
mov
inc
cmp
mov
data16
not
fadd
push
add
fidiv
fmul
fcmovne
js
cmp
sti
or
mov
mov
pop
test
out
adc
sbb
push
xchg
mov
sub
add
out
push
mov
jp
cmp
push
scas
jmp
repz
mov
or
in
ror
ins
mov
retf
xor
inc
lea
adc
lods
mov
popa
gs
adc
std
jge
push
les
cmp
ins
jle
test
fwait
ins
add
(bad)
bswap
xor
mul
aas
mov
aas
ret
lods
lock
pop
dec
lock
push
fs
adc
mov
push
inc
jne
sbb
or
xchg
cmc
mov
push
lods
inc
call
adc
or
push
jp
retf
or
inc
sub
pop
aaa
(bad)
je
or
xor
(bad)
cmp
mov
mov
arpl
push
lods
sbb
jmp
ds
jne
mov
mov
loopne
jmp
aas
dec
loope
ret
push
xor
in
inc
fcmovnbe
ror
pusha
mov
jno
or
(bad)
push
das
adc
and
sbb
div
mov
jb
push
retf
test
mov
cmc
inc
pop
dec
mov
std
inc
sbb
adc
cmps
outs
aaa
cmp
dec
mov
xchg
test
iret
pusha
(bad)
dec
ins
int
adc
(bad)
push
jno
xchg
push
xchg
sub
cdq
fnstsw
jno
inc
inc
or
in
push
pop
xor
mov
ds
mov
mov
mov
not
mov
add
gs
mov
std
out
sub
sbb
mov
jmp
imul
test
sbb
cmp
mov
out
ss
inc
clc
push
pushf
repz
or
sub
ins
pushf
in
(bad)
out
(bad)
(bad)
vpsubusb
aam
sub
mul
mov
cmc
adc
mov
jge
pop
(bad)
ins
mov
lods
mov
fild
in
pushf
jno
stos
sub
sub
ja
jmp
aaa
add
mov
pop
stos
shl
in
or
jae
and
imul
les
data16
dec
jmp
adc
in
mov
gs
cmp
inc
mov
sti
add
cmp
neg
adc
push
and
inc
(bad)
out
sbb
mov
ret
cli
(bad)
cmc
and
sbb
repnz
lods
xrelease
popa
push
movs
and
push
mov
test
std
mov
push
and
mov
xchg
mov
enter
pop
and
cdq
jmp
push
xchg
pop
out
sti
adc
xchg
test
cmp
adc
imul
pop
js
fsubr
outs
or
daa
xlat
mov
scas
add
cli
repz
aas
xor
fwait
sub
sub
mov
adc
fs
or
mov
aas
cmp
push
mov
int
int3
sahf
retf
cmc
dec
or
xor
and
and
cdq
ror
out
loopne
add
mov
ins
stos
outs
jmp
addr16
push
fmul
xchg
and
cwde
bsf
cwde
or
push
push
test
and
les
push
pop
mov
cmps
je
and
jmp
les
sub
mov
dec
xchg
sub
int
and
icebp
cld
jmp
sar
dec
mov
popf
fisub
inc
outs
(bad)
mov
sbb
ret
adc
repz
idiv
xchg
inc
mov
gs
inc
add
xchg
(bad)
ror
cli
cmp
sub
sti
mov
and
ret
dec
push
sub
jb
adc
lods
push
mov
add
push
or
mov
xchg
test
add
int3
jmp
push
xchg
mov
adc
neg
xchg
mov
sub
and
adc
add
inc
jne
and
xor
push
std
sub
ins
mov
xchg
cmp
mov
in
jae
adc
jnp
ss
gs
fadd
dec
inc
xor
xchg
dec
loop
push
js
jle
inc
into
cmps
adc
test
xor
adc
push
icebp
push
mov
cs
adc
popf
into
mov
sti
enter
cmps
stos
int
jns
js
popf
pushf
fistp
outs
and
jbe
or
sub
jbe
cmp
les
sub
mov
inc
cmp
adc
cmp
push
ret
and
lds
or
add
arpl
sbb
adc
(bad)
out
mov
jle
pop
shl
call
adc
nop
cmps
pushf
bound
sbb
pushf
ret
xchg
shr
retf
scas
jb
aam
xchg
(bad)
jp
int3
repz
out
out
jmp
pop
das
fcom
popa
sti
xchg
jle
push
icebp
inc
jae
and
les
dec
imul
mov
retf
sbb
pop
sti
rcr
add
sub
int
repnz
int
sub
psubusw
(bad)
cmps
test
loope
cmp
dec
sub
idiv
fwait
rcl
adc
scas
dec
inc
mov
jne
push
addr16
mov
sub
out
das
adc
adc
(bad)
loopne
push
cmps
hlt
xchg
in
hlt
jbe
jge
cmps
add
jp
int
and
dec
mov
jge
mov
xor
ret
jns
pop
les
pop
shr
mov
mov
shl
pusha
lahf
inc
aas
fxch
fistp
les
or
fstp
xchg
ja
lods
add
adc
inc
pop
dec
sahf
mov
out
pop
retf
arpl
test
add
(bad)
out
pop
into
aad
push
lods
xlat
addr16
inc
aas
push
pop
mov
sbb
test
jo
scas
cmp
icebp
inc
adc
rcr
stos
ins
xor
sub
push
sar
ins
sub
pop
fist
hlt
rol
cld
cmp
adc
xchg
fbstp
(bad)
sbb
adc
dec
scas
ret
fisub
loopne
add
pop
and
aad
and
pop
ret
sbb
or
lea
loopne
xor
clc
add
(bad)
jae
dec
popa
cmp
mov
enter
lea
sbb
xchg
iret
fnstenv
dec
ds
in
mov
shr
sub
cmp
ficom
cmp
sub
inc
std
cs
ds
mov
ficom
adc
ss
sub
out
test
lea
pusha
push
jmp
int
inc
adc
xchg
call
push
jbe
pop
out
adc
xlat
and
jmp
mov
fwait
scas
push
cmp
add
pop
push
arpl
jns
lock
lahf
jg
arpl
push
clc
mov
push
ror
setl
mov
adc
mov
test
sqrtps
fstp
je
ja
mov
(bad)
sahf
and
mov
sub
jno
rol
shr
mov
pop
lods
jmp
mov
jmp
and
jge
fisubr
add
stos
or
inc
mov
rcr
stos
not
fs
in
arpl
hlt
mov
sbb
or
or
out
jb
jns
and
stos
scas
pushf
jmp
cmc
sbb
cmp
stos
in
push
mov
stc
in
hlt
outs
push
js
adc
adc
mov
push
and
rol
mov
and
clc
adc
jle
push
hlt
imul
lods
pop
icebp
sub
push
pop
rcl
push
pushf
sub
push
adc
(bad)
iret
pushf
bound
mov
iret
mov
adc
(bad)
ja
lds
sub
retf
push
pop
mov
lock
retf
adc
das
xor
mov
adc
jl
mov
sahf
jmp
iret
retf
frstor
adc
test
out
add
dec
mov
xchg
push
sbb
sbb
mov
test
push
xchg
into
add
or
ss
xlat
ds
popf
jmp
jp
mov
lahf
popa
mov
out
sub
pop
not
push
(bad)
mov
push
lock
mov
(bad)
dec
sub
(bad)
dec
aas
fidiv
dec
in
retf
stos
shr
sub
xlat
mov
adc
in
and
stos
xor
dec
lds
mov
and
in
xor
fcmovnbe
movsx
cmp
cmc
dec
rol
mov
(bad)
leave
xor
mov
repz
pop
cmp
lods
(bad)
fcom
ret
xchg
jmp
js
jmp
mov
call
pushf
pop
push
jmp
sbb
pop
(bad)
cmp
xor
sar
pop
and
out
ror
aam
ss
sub
cmp
mov
dec
aam
movs
xchg
dec
sti
cmp
sub
jne
xchg
push
inc
mov
push
imul
aam
scas
aad
std
and
stc
pop
inc
out
pop
sbb
jae
push
call
add
push
fwait
add
loope
dec
xor
(bad)
rol
pusha
imul
clc
les
lods
add
fwait
inc
jae
rol
js
mov
popa
dec
or
test
lods
lock
mov
movs
push
mov
push
mov
dec
repz
xor
push
inc
and
cli
fimul
mov
es
cli
popa
mov
ins
(bad)
jge
dec
imul
xchg
mov
gs
sbb
retf
xchg
movs
rcr
ins
jo
sbb
and
inc
repnz
sbb
in
jnp
lods
mov
cmp
dec
push
push
movs
pop
or
div
fisubr
fdivr
xchg
fsub
hlt
js
loop
out
mov
(bad)
jg
sahf
mov
sti
xchg
ins
rcr
sbb
mov
out
sub
and
mov
mov
jle
mov
pop
add
outs
popa
add
mov
stos
ss
repnz
jle
fnstenv
jle
xchg
lahf
ja
test
cli
and
(bad)
sub
(bad)
daa
mov
call
(bad)
sub
div
mov
enter
imul
std
icebp
pop
mov
scas
cmp
sub
cmps
push
mov
add
ret
hlt
cmp
ret
mov
(bad)
pushf
sub
scas
mov
push
jae
xchg
mov
mov
bound
inc
call
jne
sub
out
loope
adc
mov
lea
push
sbb
adc
xor
das
cmp
loop
and
enter
test
or
cmp
es
xor
and
mov
xchg
mov
pop
add
fidiv
mov
dec
add
lahf
push
and
aam
loopne
xlat
or
es
cmp
adc
pop
mov
xchg
cmp
or
inc
jns
cmp
adc
jb
inc
mov
mov
das
xchg
lea
stc
cmps
xchg
xchg
leave
cmp
sbb
mov
movs
xor
div
test
pop
xor
in
das
sahf
sub
mov
sbb
in
push
ret
push
xchg
loopne
xchg
dec
dec
int3
sar
mov
xchg
js
fwait
jno
mov
dec
push
mov
push
or
int3
mov
aaa
int3
popa
jo
(bad)
out
(bad)
call
std
adc
xchg
shl
jno
out
xor
xor
push
xor
(bad)
xlat
xor
xor
sbb
in
ja
xlat
jns
data16
adc
fdiv
sub
mov
cmp
pusha
and
sar
cmp
push
xor
popf
cmp
add
xchg
mov
and
adc
sbb
call
adc
xor
pushf
jmp
ja
daa
test
mov
jg
cmps
push
out
sbb
adc
stc
in
mov
aam
ss
push
adc
or
hlt
sbb
retf
or
jl
sti
das
sub
push
test
xchg
sti
sbb
jecxz
imul
xchg
or
mov
shr
add
mov
mov
test
pusha
mov
mov
jnp
add
cli
add
jecxz
es
mov
cmc
pop
mov
xor
(bad)
sti
mov
push
push
out
inc
sub
jcxz
call
out
adc
stos
aad
jp
mov
xchg
clc
lock
hlt
inc
push
inc
movs
out
lods
mov
push
push
aas
outs
inc
lods
lds
in
mov
outs
adc
out
ret
add
cmp
pop
pushf
(bad)
xor
push
adc
daa
int
scas
adc
stos
jmp
xchg
mov
dec
add
adc
mov
jmp
mov
es
push
aad
push
aaa
call
(bad)
aas
ds
sahf
imul
loopne
mov
les
out
enter
out
xchg
fisttp
(bad)
jns
jecxz
test
inc
out
add
adc
test
mov
out
mov
int
inc
pushf
gs
pushf
loope
sbb
enter
jle
inc
jg
mov
das
xor
push
mov
mov
ja
adc
push
ror
sbb
and
mov
(bad)
mov
mov
pop
jo
aas
pop
xchg
retf
dec
mov
gs
mov
push
ror
cmp
in
pop
add
repnz
das
lock
repnz
pop
sbb
movs
push
or
dec
mov
aaa
into
bound
push
sahf
push
mul
iret
push
mov
inc
or
loope
enter
jl
and
or
cmp
aaa
push
jbe
and
and
pop
cmp
dec
adc
mov
jns
rol
aad
mov
jp
jp
cmps
scas
pop
rcl
sbb
shr
mov
mov
inc
in
pop
jns
dec
mov
iret
push
shl
adc
arpl
jno
mov
fimul
mov
jmp
jl
and
pop
rcr
stc
nop
cmp
inc
xchg
mov
stos
ss
cwde
xlat
pop
jmp
pop
push
sbb
movs
dec
pop
cmp
mov
add
loope
xor
inc
and
sub
or
pop
push
out
lahf
mov
xchg
mov
pop
or
in
fistp
shl
inc
(bad)
in
imul
dec
lahf
pop
stos
cmp
out
add
les
jno
aad
fdivr
add
sbb
fcomp
push
movs
cli
xor
cdq
sub
cmp
xchg
hlt
sbb
outs
ret
stos
lods
adc
hlt
(bad)
scas
dec
push
gs
push
call
xchg
lahf
add
out
pop
bound
aam
cld
sbb
mov
push
pop
jo
cs
cli
sbb
mov
xor
imul
add
jge
mov
in
(bad)
in
pop
pop
dec
jp
in
jl
mov
mov
add
(bad)
retf
loop
mov
inc
xor
mov
cmp
xor
in
and
jge
add
(bad)
push
sti
stos
mov
cmp
das
out
ins
mov
push
dec
stos
pop
mov
push
and
mov
cmps
jmp
out
(bad)
fscale
sub
imul
and
ds
push
mov
cmp
or
cmp
jle
push
clc
bound
pop
std
inc
sub
jns
jns
xlat
loop
mov
dec
inc
xchg
out
jmp
out
fcom
outs
iret
dec
clc
sub
mov
fstp
pop
cmp
out
push
jmp
dec
inc
and
xor
jecxz
jo
fs
cmps
dec
cmp
sbb
jmp
pop
jo
movs
pop
and
dec
or
mov
xchg
or
jae
loopne
cmc
push
fiadd
int3
xor
xor
jns
dec
xor
sub
jbe
je
popa
or
fcomip
lahf
pop
imul
jne
pusha
scas
push
fcomi
push
retf
ret
retf
ret
in
out
cwde
fldenv
mov
pop
and
mov
push
cwde
pusha
jno
(bad)
pop
leave
pop
in
(bad)
in
xchg
push
scas
and
out
aas
in
mov
xchg
arpl
fxch
aam
leave
mov
rcl
cmp
pop
addr16
aam
sub
leave
loope
daa
mov
add
retf
(bad)
sbb
push
push
nop
sbb
mov
and
scas
sub
(bad)
fcom
sub
lods
fwait
inc
mov
or
cmp
(bad)
arpl
jge
pop
mov
xor
or
jmp
jne
in
xor
rcl
add
sbb
enter
mov
sbb
sbb
xchg
jae
mov
out
into
add
ds
rcr
inc
shr
in
cmp
jg
cwde
pop
mov
loope
sub
cli
sub
mov
or
mov
stos
not
adc
jne
popf
cmp
pushf
jnp
ins
pop
test
push
and
add
pop
dec
jecxz
in
call
sbb
stc
jmp
mov
popa
xchg
xchg
aas
jb
xchg
dec
sub
mov
movs
bndldx
shl
aaa
dec
mov
sub
fisubr
jg
hlt
in
movs
adc
add
les
xchg
jbe
dec
adc
mov
stos
scas
push
mov
shl
mov
jp
clc
adc
bound
lock
and
inc
ins
xor
(bad)
xlat
hlt
mov
aaa
stc
or
push
push
xchg
nop
add
mov
inc
or
xor
test
pop
inc
mov
jl
xchg
lahf
movs
nop
ds
enter
mov
call
sub
and
idiv
outs
enter
scas
in
js
repnz
sub
in
mov
fldcw
sub
js
xor
mov
lea
jle
xchg
mov
xchg
jmp
cmp
or
mov
retf
mov
sbb
ja
xchg
enter
or
nop
jle
xor
cmp
cli
xor
xchg
mov
adc
sub
mov
jmp
sbb
aas
jmp
enter
rcl
and
fcom
pop
std
(bad)
retf
push
mov
xor
pop
mov
ret
push
sbb
rcr
adc
adc
add
jmp
in
xchg
jmp
iret
sar
shl
and
mov
jne
sahf
add
mov
dec
mov
(bad)
sbb
cwde
(bad)
(bad)
add
dec
pop
ffreep
xchg
test
push
adc
icebp
out
add
enter
movs
or
sbb
pusha
inc
sub
pop
sub
lds
mov
jo
inc
and
popf
xchg
pop
adc
test
pop
lods
jbe
add
inc
mov
sbb
icebp
aaa
and
das
clc
jno
add
sbb
or
shr
mov
dec
xchg
clc
test
mov
ins
lods
test
and
xchg
mov
cmp
mov
jb
call
lods
add
sub
jnp
pop
(bad)
dec
mov
arpl
add
mov
mov
div
pop
out
and
xchg
adc
(bad)
xchg
dec
cmp
das
or
mov
xchg
dec
add
(bad)
jge
mov
push
jnp
test
clc
mov
call
cmps
add
xchg
(bad)
sahf
out
popa
dec
(bad)
jecxz
mov
gs
xchg
mov
fadd
mul
mov
out
(bad)
inc
mov
jns
clc
bound
pop
imul
repnz
out
cwde
push
int
mov
addr16
pop
movups
pop
dec
or
iret
cmp
sbb
mov
bound
sbb
fsub
push
add
or
lods
daa
mov
mov
or
dec
hlt
add
je
es
je
shr
xor
pop
add
ss
in
int3
dec
jae
sub
enter
sub
cmp
(bad)
dec
loope
push
repz
pop
cmp
mov
jnp
fwait
clc
adc
je
iret
mov
xchg
psrad
jle
jmp
ret
or
call
mov
push
sbb
adc
jae
data16
mov
in
cmps
cmp
imul
lods
lock
jl
fild
mov
push
call
dec
(bad)
jmp
hlt
mov
push
imul
cld
jmp
adc
arpl
je
imul
xchg
loop
ret
out
pop
push
sar
inc
and
push
cld
mov
cmp
fsub
pop
clc
inc
mov
push
mov
jmp
adc
cmp
(bad)
mov
adc
pop
dec
int
arpl
jae
dec
aas
mov
stc
inc
rcl
div
xor
out
sti
mov
icebp
scas
xor
(bad)
ins
and
(bad)
fldenv
aaa
xchg
imul
out
xor
jmp
jmp
pop
pop
mov
fcomp
and
rcr
sub
pop
add
in
xchg
ja
lods
or
mov
fisub
jbe
(bad)
dec
repz
fdiv
adc
ds
pop
mov
mov
lar
mov
fbld
ret
mov
or
cmp
idiv
nop
test
je
enter
pop
out
lods
fcmovu
daa
jns
fbld
inc
int
fnstenv
iret
movs
cmps
inc
xchg
je
addr16
pop
cmc
mov
and
xchg
or
in
lea
sar
or
and
mov
or
(bad)
dec
inc
pop
add
lahf
inc
jmp
in
imul
jno
test
jge
cdq
dec
mov
pop
pop
xor
into
sbb
inc
popf
mov
push
out
mov
mov
pop
jbe
push
lea
call
imul
pop
cs
imul
inc
out
xor
clc
ja
data16
ins
enter
(bad)
xchg
(bad)
adc
ds
fbld
inc
and
mov
ss
movs
inc
imul
mov
pop
imul
aam
pushf
mov
mov
mov
xor
(bad)
pop
sub
mov
push
add
add
jmp
inc
loope
arpl
dec
jne
push
lea
mov
mov
mov
cmp
in
adc
fiadd
dec
into
mov
push
mov
lea
or
(bad)
dec
mov
sub
pop
mov
mov
dec
push
inc
jbe
jl
pop
push
cmps
adc
gs
sub
gs
mov
mov
sub
jae
ja
sbb
lods
mov
rcl
mov
ss
mov
mov
jno
or
dec
(bad)
ins
(bad)
and
aad
repnz
nop
pop
inc
rcr
dec
mov
adc
inc
jecxz
jb
in
cmp
repz
ds
add
pop
sbb
scas
xor
or
outs
inc
rcr
mov
ret
and
cmp
jecxz
ret
(bad)
and
xchg
idiv
fcomi
loopne
icebp
das
sbb
inc
loop
ins
out
repz
fmul
scas
xor
sub
cmp
jnp
in
sub
in
arpl
sub
mov
pop
es
dec
push
jmp
mov
adc
(bad)
cld
cmp
stos
sub
inc
retf
outs
add
div
in
gs
jmp
and
call
popf
lods
sbb
ds
and
sbb
push
dec
jl
shl
dec
push
hlt
push
xor
cwde
aam
adc
test
daa
in
test
sti
and
call
ins
cwde
push
scas
std
jmp
xor
push
xchg
in
ds
dec
stc
jns
mov
and
sub
push
leave
push
scas
cdq
jmp
mov
mov
add
jecxz
push
push
(bad)
jl
fnstenv
pop
sbb
push
mov
movs
ja
adc
ror
cdq
loope
nop
test
mov
cmp
mov
jbe
cld
pop
call
popa
outs
pop
imul
xor
dec
clc
rcr
fs
push
push
and
ret
add
mov
gs
fst
enter
mov
xor
cli
and
ja
sbb
into
mov
loope
jnp
or
jp
adc
pop
lock
into
int
or
fisubr
jmp
sub
daa
sub
lock
adc
(bad)
(bad)
rcl
ins
arpl
iret
ds
in
or
daa
pop
fisubr
jecxz
xor
sbb
adc
scas
fsubr
pop
mov
push
mov
or
xchg
aas
push
loope
test
in
test
xchg
inc
xchg
inc
cmp
lods
pop
loopne
or
sbb
mov
dec
stos
push
push
push
dec
std
fdiv
(bad)
shl
sahf
les
call
jb
ins
sar
and
leave
sub
movlps
stc
lock
nop
or
daa
xchg
ins
js
mov
cdq
dec
out
and
(bad)
adc
fldcw
sbb
jmp
cs
les
jno
scas
cmp
push
jmp
pop
ss
dec
and
fs
mov
mov
imul
push
das
rcr
cmp
xchg
cmps
push
and
pop
mov
sub
mov
mov
xlat
scas
push
enter
nop
cmps
inc
mov
movs
lahf
push
xchg
fiadd
outs
jecxz
add
ficom
xor
cmp
outs
fsubr
aaa
jecxz
push
imul
add
jne
call
out
out
pop
push
nop
or
pop
mov
pusha
adc
dec
adc
pop
adc
lods
fnstenv
into
shr
jecxz
pop
and
jg
arpl
lock
pop
test
retf
lock
pop
xor
int
add
test
xor
clc
jg
xchg
fild
pusha
bound
fistp
xor
xchg
pushf
imul
icebp
fdivr
push
push
shl
or
pop
jle
leave
inc
pushf
loopne
or
in
shr
sti
inc
lock
loopne
cmp
sbb
push
inc
pusha
dec
fistp
jle
mov
mov
push
cdq
ins
punpcklbw
loop
push
add
nop
pop
or
movs
mov
add
retf
cmc
xlat
call
pop
dec
add
test
cwde
(bad)
(bad)
addr16
xor
imul
and
fmul
sub
dec
test
sar
pop
sub
out
loop
rol
(bad)
adc
mov
cmp
push
ror
mov
ds
add
mov
push
rcr
mov
hlt
pop
pop
jnp
or
sar
(bad)
shr
pop
push
cmp
inc
jl
out
popf
adc
mov
stos
imul
xchg
or
out
jmp
push
lods
ds
and
push
dec
lods
and
dec
push
sub
adc
loop
and
call
lahf
sub
shl
cmp
inc
scas
(bad)
idiv
lahf
std
pop
stc
popa
xchg
sub
cdq
jg
jbe
inc
push
popf
mov
ins
aad
dec
repz
jbe
ds
dec
inc
mov
dec
sub
pop
mov
jbe
xlat
xchg
push
xchg
sub
push
mov
jbe
aam
push
loopne
add
out
retf
aam
lea
xlat
(bad)
mov
cmp
sar
mov
push
int
test
mov
shl
cmp
push
leave
mov
cli
pop
push
cmp
mov
out
das
jno
jo
sub
pop
push
data16
pop
retf
movs
mov
ja
add
cdq
dec
inc
inc
ss
fist
fdivr
mov
push
data16
pop
imul
adc
(bad)
xlat
nop
push
xchg
inc
aas
js
cli
mov
inc
ins
jae
mov
scas
pop
sbb
ror
pop
sbb
sub
out
mov
xchg
mov
push
test
int3
je
jg
mov
mov
cdq
dec
retf
fisub
cmp
retf
movs
pextrw
xchg
push
mov
int3
cli
aam
xchg
(bad)
sar
dec
sbb
mov
lds
xchg
pop
mov
outs
scas
popf
sahf
adc
inc
mov
push
mov
adc
mov
xor
(bad)
sbb
imul
mov
fldcw
ja
inc
push
ds
dec
stos
push
cmps
std
or
addr16
xlat
jmp
std
and
jae
sub
xor
pop
or
fidiv
push
jg
clc
mul
jmp
shr
jmp
adc
adc
pop
mov
hlt
mov
or
pop
adc
ret
iret
or
xchg
fcomp
aas
dec
movs
ss
(bad)
stc
adc
test
and
sbb
pop
mov
add
ss
jl
scas
imul
push
dec
add
in
pop
addr16
add
daa
cli
jmp
sub
mov
nop
jecxz
loop
out
mov
or
mov
and
mov
lea
inc
inc
pusha
call
sub
test
jmp
xor
ds
stos
push
in
fild
and
pushf
(bad)
xor
xchg
sbb
dec
add
mov
lea
jnp
in
lock
jmp
pop
shl
cmp
dec
pop
mov
push
rcl
jb
xchg
scas
pushf
fs
pop
das
imul
mov
das
out
sar
and
or
(bad)
fidiv
in
push
cmp
ins
(bad)
popf
add
je
sub
repnz
cmp
jle
add
lods
mov
add
dec
add
cdq
sub
fild
jns
or
aad
pop
cmps
or
pusha
push
mov
shl
call
scas
dec
sub
push
adc
punpcklwd
out
add
xor
cmp
gs
repnz
sti
mov
outs
cwde
jns
call
jo
loope
aam
xchg
jp
dec
push
arpl
xchg
and
cld
aaa
outs
add
dec
mov
shl
mov
gs
inc
ja
inc
and
ret
scas
dec
int3
hlt
cld
enter
mov
push
mov
xchg
inc
(bad)
loop
mov
mul
push
push
imul
fcomip
retf
mov
pop
shr
mov
jo
dec
hlt
pop
or
aas
and
jno
test
loope
xchg
mov
adc
out
and
inc
sbb
pop
pop
cli
jge
les
xchg
inc
inc
xchg
mov
gs
push
movs
popf
sbb
clc
pop
out
je
inc
mov
aaa
inc
xor
in
fwait
mov
cmp
and
pushf
jge
push
sbb
or
stos
sub
(bad)
cli
lahf
int
repnz
inc
stos
enter
repnz
inc
mov
hlt
or
aam
mov
test
push
popf
cmp
add
es
aam
mov
mov
bound
xor
mov
imul
stos
pop
dec
mov
mov
dec
push
popf
les
out
adc
inc
outs
je
das
iret
loop
mov
into
sub
xchg
fild
test
pusha
xchg
rcr
mov
push
cs
repz
push
movs
sahf
test
(bad)
sub
inc
(bad)
mov
iret
adc
in
mov
ins
lods
mov
mov
mov
jae
push
mov
push
mov
nop
pop
push
xchg
jl
outs
xor
xor
ss
aad
mul
push
dec
inc
xor
jbe
sub
loope
ins
or
call
sub
fmul
mov
sub
in
je
add
fisub
push
fimul
add
stos
sub
cwde
test
and
or
fimul
lods
dec
ficom
cld
jecxz
je
mov
das
adc
jp
sub
xlat
or
inc
mov
mov
std
bound
out
ficomp
and
fisubr
pop
dec
cmps
lahf
mov
add
pop
pavgw
scas
pop
clc
dec
(bad)
aam
and
shl
inc
test
and
inc
cmps
jmp
out
sbb
fdivrp
dec
les
and
cmp
inc
fxch
scas
push
repnz
or
adc
cdq
in
jmp
(bad)
out
push
fdiv
xchg
movs
popa
jge
repnz
stos
inc
movs
dec
push
and
retf
adc
in
test
jecxz
out
and
xlat
cwde
xchg
mov
into
movs
pop
aad
xor
mov
in
scas
sti
mov
dec
dec
mov
sub
test
mov
or
stos
mov
rcl
mov
pop
lds
inc
mov
dec
inc
loop
les
fs
cmp
movs
push
js
inc
test
ins
add
or
inc
dec
adc
aaa
pusha
xor
mov
sbb
add
sbb
daa
add
mov
rcr
sbb
jns
aas
std
imul
sbb
(bad)
xchg
jae
stos
fs
mov
aad
das
jae
fsubrp
test
mov
out
inc
mov
loope
loopne
fmul
stc
in
cmc
movs
cmp
sub
nop
dec
aad
movs
sbb
jnp
sbb
mov
pushf
mov
add
sub
pusha
dec
mov
in
idiv
fmul
rcl
icebp
push
fcomp
xor
arpl
adc
jecxz
fimul
retf
mov
fcomip
push
sbb
push
call
jnp
cmp
ror
sahf
jle
call
retf
and
jg
mov
fcmovne
scas
jp
repnz
xor
js
stos
outs
push
test
inc
xchg
ds
xchg
mov
fwait
xor
adc
std
cmp
add
lock
push
std
xchg
mov
js
je
sub
push
mov
scas
outs
jmp
ins
ficomp
mov
push
sbb
dec
jno
pop
scas
pop
daa
sub
xchg
addr16
cdq
test
adc
mov
pop
mov
jno
and
cmp
pushf
jbe
or
xor
xchg
push
mov
clc
xor
jecxz
popf
cld
cmp
and
mov
mov
xchg
or
xor
stc
pop
add
pop
mov
mov
movs
(bad)
jmp
lahf
fadd
(bad)
int
dec
mov
or
not
mov
repz
xor
xchg
cmp
inc
cld
stos
pop
pushf
push
popa
push
loop
popf
push
fisttp
and
and
out
mov
aam
or
sbb
adc
jmp
jecxz
push
movntq
out
test
sbb
adc
mov
xchg
jmp
daa
mov
push
in
aas
xor
sbb
and
push
ret
add
(bad)
mov
inc
inc
sbb
lods
dec
xchg
sahf
adc
cmp
sub
les
sub
in
xchg
cmp
mov
jmp
cld
or
and
sub
push
adc
(bad)
das
ret
imul
lock
adc
push
xchg
rcr
movs
jmp
mov
cli
push
jbe
sbb
adc
fidivr
nop
int3
pop
pop
sub
retf
ins
mov
fisub
mov
mov
icebp
call
push
ret
stc
sub
sbb
pop
push
test
mov
inc
std
or
sub
(bad)
jne
call
xchg
das
out
ficom
sub
ret
xor
cmp
jge
adc
out
cmps
and
mov
iret
out
mov
les
std
jecxz
and
sbb
dec
int
inc
xor
sbb
sbb
adc
cs
fcom
and
test
je
dec
jmp
(bad)
dec
and
out
jmp
cmp
cdq
jp
sbb
sbb
mov
inc
ds
rcr
outs
test
push
mov
hlt
fs
xchg
sti
inc
movs
mov
mov
pop
jmp
(bad)
movs
in
fld
inc
mov
in
dec
into
cmc
sbb
jne
adc
xor
fidiv
cmps
or
mul
xchg
jns
sbb
out
and
xor
xor
adc
inc
imul
jmp
aam
jns
gs
imul
aad
mov
xor
push
xchg
xor
(bad)
das
pop
out
cmp
arpl
inc
les
mov
sbb
sbb
cli
ins
inc
or
add
repz
jecxz
inc
and
es
dec
jg
jmp
add
or
jge
adc
add
push
cmp
mov
fsubr
pushf
jp
imul
retf
push
ficomp
sub
hlt
std
inc
jl
xchg
out
loope
jg
(bad)
data16
hlt
or
arpl
ret
and
out
movs
stos
leave
stos
call
imul
dec
fyl2xp1
cli
test
sub
push
in
outs
sub
push
jle
in
mov
adc
repz
stos
imul
jne
das
add
hlt
retf
pop
ja
and
mov
repnz
aas
inc
mov
retf
jnp
xchg
pop
or
xlat
xchg
pop
push
je
(bad)
xchg
es
cwde
movs
popa
in
shl
mov
xchg
arpl
popa
fsub
out
dec
sub
push
ret
jmp
dec
mov
mov
push
xchg
add
fbstp
mov
ret
clc
xchg
add
cmp
jns
dec
cmp
xor
fwait
imul
test
sbb
dec
pop
fld
adc
mov
dec
and
pop
dec
lea
inc
pop
push
mov
inc
jecxz
lds
shr
sub
(bad)
aad
scas
enter
xchg
push
outs
ja
pop
into
sub
popa
test
rcr
add
vrcpss
addr16
pop
shl
xor
popa
loope
inc
es
cmps
jne
es
scas
aas
mov
sub
ror
in
mov
mov
imul
dec
std
pop
inc
and
push
mov
push
fistp
push
and
loop
sbb
into
and
rcr
test
shl
adc
cmps
sbb
ins
pop
inc
push
loop
mov
lods
je
sar
and
xchg
test
dec
mov
mov
int3
repnz
sub
dec
pop
retf
daa
pop
xchg
pop
shr
rcl
xchg
stos
mov
iret
test
add
inc
scas
xor
frstor
cli
rcl
fistp
fsubp
mov
xchg
dec
push
in
or
arpl
or
daa
push
jbe
inc
cmp
fcmovnu
mov
leave
add
jns
jmp
int
jg
loopne
fwait
test
stc
leave
inc
aas
mov
stc
push
sub
mov
stc
rcr
fst
ret
dec
addr16
dec
cmp
aam
lods
ja
mov
mov
lods
and
dec
pmuludq
cmp
bnd
clc
xor
int
push
push
jmp
dec
dec
sbb
arpl
jecxz
jae
ins
je
pop
push
adc
call
sub
mov
and
popa
les
inc
scas
inc
outs
inc
push
adc
sub
imul
imul
pop
mov
or
or
adc
sbb
gs
pop
pop
or
or
add
mov
cmovns
push
jns
sbb
dec
nop
cdq
push
pop
xchg
sbb
dec
jge
adc
ds
or
mov
leave
clc
fwait
xor
adc
jno
cs
inc
hlt
jne
pop
mov
iret
(bad)
jae
pop
(bad)
mov
daa
jp
and
sub
push
cld
cwde
and
xchg
push
mov
sbb
nop
and
dec
cld
sbb
add
mov
(bad)
pushf
in
cmp
dec
jbe
push
and
(bad)
in
and
fadd
(bad)
jle
mov
sbb
gs
movs
cmc
mov
add
test
xor
mov
pusha
lods
push
popf
mov
mov
movs
push
test
test
das
mov
cld
jg
pop
jecxz
popf
mov
inc
addr16
retf
jmp
xor
out
jbe
(bad)
jno
pop
sub
sub
push
clc
sub
inc
xchg
retf
int3
cmp
pop
ret
mov
jl
cmps
rcl
in
jmp
mov
cli
cmp
jecxz
and
inc
push
xchg
inc
inc
or
add
pop
inc
fidivr
sub
cmp
into
ins
std
call
jbe
(bad)
jle
jae
test
loopne
retf
add
push
test
mov
jle
mov
scas
mov
cmp
pop
adc
fwait
rol
cmp
sbb
jmp
jmp
mov
mov
mov
mov
in
jbe
inc
repnz
mov
inc
addr16
jge
dec
jb
(bad)
sahf
pop
jne
and
mov
stc
mov
jo
mov
jnp
add
push
lock
jmp
jne
jg
int
pop
repz
push
adc
ds
cmp
data16
sbb
scas
xor
sub
fbld
mov
xchg
std
int
mov
cmc
mov
loope
fstp
mov
inc
jmp
mov
ss
ja
pop
mov
je
sub
sbb
jbe
out
rcr
je
test
mov
push
mov
ret
ja
lock
pop
rol
mov
(bad)
push
int3
mov
mov
add
xchg
fidivr
push
sub
xor
addr16
fst
cmp
aas
clc
out
and
js
mov
shl
call
sub
arpl
lods
test
fs
aad
ror
or
out
rcr
xor
ret
xor
and
xor
or
mov
xor
sub
sbb
push
jns
push
lds
js
aad
fistp
jg
test
inc
add
jae
loope
addr16
std
or
jns
sub
fs
jbe
sub
test
sbb
out
jae
popa
imul
jge
in
ja
cmp
and
repnz
pop
outs
sub
imul
pop
jmp
cmp
xor
js
xor
jle
aaa
repz
or
adc
int
pop
repnz
mov
xor
hlt
aas
push
push
or
adc
icebp
mov
cmc
daa
push
jbe
lock
out
pop
sti
xchg
rol
sar
retf
and
rcr
lea
ss
inc
rol
cli
inc
mov
ins
jmp
mov
(bad)
ret
pop
mov
aam
loop
mov
xlat
push
inc
jo
(bad)
mov
rcl
pop
dec
lahf
retf
jge
loop
lea
ss
inc
stos
pop
iret
jge
movs
mov
(bad)
cld
inc
scas
(bad)
dec
fsubr
sti
mov
(bad)
and
arpl
push
sbb
js
inc
rcr
lods
add
jmp
mov
lock
ror
pop
stc
int3
hlt
stos
ret
xchg
(bad)
es
repnz
in
cmp
ins
aas
les
xor
mov
push
outs
push
inc
dec
bound
xchg
aaa
repnz
sahf
popaw
xchg
sub
inc
fs
add
push
or
retf
fnstcw
ja
ja
push
mov
sbb
inc
lds
movs
jmp
rcr
dec
dec
xor
adc
push
sbb
dec
mov
aaa
dec
lahf
(bad)
fiadd
retf
inc
mov
push
mov
(bad)
xchg
adc
add
lgs
in
stos
mov
push
sbb
jno
mov
pop
xchg
fdecstp
sbb
or
xchg
outs
jmp
or
sub
push
loope
cmp
imul
inc
jo
mov
jno
je
mov
inc
jge
fwait
mov
sub
inc
lock
fcom
out
pop
cmp
ret
arpl
xor
sub
xchg
fiadd
fsub
push
jge
lods
mov
addr16
into
mov
(bad)
xchg
xlat
and
xor
leave
add
push
retf
sti
or
push
mov
fcomp
mov
outs
cmp
(bad)
mov
xor
(bad)
adc
repnz
stos
outs
pop
sub
cmp
mov
or
daa
or
push
dec
mov
ss
mov
addr16
(bad)
pop
pop
lods
jno
xchg
cmp
adc
and
out
add
jmp
push
(bad)
imul
pop
pop
mov
int3
and
clc
fs
cmp
dec
in
ss
ficomp
add
or
or
mov
fcomp
and
adc
mov
xchg
mov
mov
je
std
jne
ror
fdivr
ds
push
imul
movs
sbb
mov
pop
pmullw
add
mov
add
push
outs
xchg
test
pop
xlat
retf
(bad)
ret
jae
in
xchg
or
outs
lds
mov
mov
out
js
dec
pop
rcl
sahf
and
xchg
lea
or
or
shl
mov
mov
(bad)
mov
pop
daa
jg
ret
int3
adc
es
popf
push
xlat
nop
sbb
cmc
ss
jl
stc
adc
fucomi
jns
es
fst
ins
ret
js
jecxz
dec
dec
cmp
nop
inc
sub
mov
enter
out
push
imul
jb
cwde
mov
jae
jmp
cmp
xchg
lea
xchg
popf
inc
push
add
push
ja
or
xchg
call
mov
xchg
add
test
mov
xchg
test
mov
lods
mov
pop
sub
and
push
xchg
stos
pop
lock
mov
jecxz
and
dec
mov
mov
push
imul
push
mov
inc
or
mov
pop
leave
fdivr
mov
fistp
cld
dec
pop
and
push
ss
jmp
push
xlat
sub
xchg
int
ins
inc
js
pop
adc
jp
loopne
(bad)
lds
fnstsw
fdivr
cmp
gs
into
jnp
sbb
enter
out
cs
pop
lods
push
and
imul
ins
test
ret
xor
fmul
inc
dec
stos
nop
xchg
dec
mov
fcmove
fld
jecxz
arpl
push
pop
add
xlat
repz
int3
push
(bad)
lds
dec
popa
ins
or
cld
jle
and
cmps
fs
test
stc
pop
imul
aad
loope
or
mov
mov
dec
inc
mov
or
mov
push
popa
xor
retf
gs
lahf
sahf
pop
and
nop
or
in
mov
dec
mov
call
popf
lahf
fcom
mov
xchg
(bad)
lea
jmp
loopne
enter
(bad)
clc
jecxz
rcl
or
addr16
popf
push
add
fs
dec
pop
imul
fs
push
or
push
add
movs
push
dec
cld
jbe
jbe
hlt
adc
sahf
jb
rol
pusha
mov
sar
test
and
(bad)
leave
iret
(bad)
and
push
pandn
jns
jnp
addr16
loop
fisubr
cwde
adc
repnz
ins
and
movs
in
enter
in
mov
into
movs
or
in
mov
sub
repz
dec
popa
push
push
mov
jle
xchg
inc
cs
mov
jg
es
pop
sbb
cmp
rol
push
jne
push
sbb
jnp
sub
call
int
inc
add
aad
(bad)
push
and
inc
xchg
push
rcr
mov
mov
xchg
test
mov
aad
dec
in
cld
lds
mov
mov
inc
pop
or
jnp
push
sub
lock
je
and
loopne
inc
mov
add
aas
push
pop
adc
test
mov
in
xor
add
xor
nop
push
clc
sbb
and
scas
mov
sub
das
mov
xor
pop
inc
stc
out
xchg
pop
inc
dec
mov
stos
jge
loope
or
and
cmp
dec
sub
xchg
in
sub
and
or
jge
jae
jnp
jle
xor
sbb
test
push
shl
imul
out
dec
sub
dec
imul
nop
cli
pop
std
xor
pusha
call
xchg
sbb
mov
add
(bad)
push
dec
mov
lahf
push
(bad)
outs
and
or
fadd
inc
mov
ja
adc
scas
fidivr
mov
mov
xchg
aaa
stos
jp
mov
adc
xchg
adc
add
das
jg
xchg
adc
adc
sahf
mov
int
icebp
sub
mov
or
mov
mov
aas
adc
or
mov
push
xchg
fld
bnd
cmps
hlt
inc
sub
jmp
in
rol
xor
jbe
pop
lock
fiadd
dec
mov
add
(bad)
(bad)
dec
cmp
in
jae
pop
xchg
rcr
mov
out
jb
dec
push
in
arpl
push
test
cmp
cli
xchg
loopne
xchg
ins
out
rcl
add
mov
into
mov
inc
and
out
cmc
aam
ss
loopne
pop
pop
push
sub
xchg
xor
push
enter
outs
ins
mov
mov
imul
jecxz
mov
arpl
imul
jbe
jae
div
sbb
xchg
arpl
push
scas
in
sbb
inc
and
mov
xor
sahf
ins
ret
mov
xchg
adc
add
xor
(bad)
fdiv
ret
enter
jno
cmp
sbb
pop
stos
push
aad
rcl
fwait
sbb
push
stos
inc
sti
mov
push
int
xchg
xlat
(bad)
push
jmp
shl
test
inc
jno
int
int
xchg
fldenv
hlt
dec
sub
jns
push
sbb
fstp
dec
adc
xor
push
and
and
inc
push
mov
mov
cld
lea
ret
mov
jp
retf
mov
jle
pop
and
and
bound
ret
lea
lock
jp
push
jl
cmps
add
xchg
add
mov
movs
sti
pop
push
xor
push
mov
or
sbb
xor
pop
cmp
in
mov
loop
xchg
and
mov
mov
fisub
neg
scas
push
ror
jmp
sbb
jnp
cwde
inc
and
in
mov
dec
mov
inc
sub
inc
sti
call
mov
sbb
inc
out
push
xchg
dec
scas
pop
mov
loope
repz
sbb
xchg
add
imul
pop
clc
pop
mov
jo
repz
push
inc
aas
das
xchg
mov
push
pop
jp
xchg
pop
sbb
dec
pop
sbb
dec
loopne
imul
out
stos
sbb
mov
in
jmp
test
push
xor
cld
mov
push
es
jmp
scas
dec
je
lock
cmc
mov
out
dec
fnclex
and
aad
and
aaa
jae
icebp
sar
stc
mov
js
dec
fcom
jle
and
mov
inc
mov
inc
xchg
outs
xlat
xchg
sub
shl
ret
rol
pop
mov
outs
mov
push
shr
xlat
sbb
adc
dec
inc
adc
shr
and
mov
ja
and
es
out
inc
pop
or
int3
enter
xchg
adc
pop
hlt
popf
mov
(bad)
pushf
adc
pop
fs
sbb
xchg
cs
(bad)
xchg
dec
push
rcl
in
cmp
and
or
cmp
call
inc
xlat
test
ins
fst
mov
dec
movs
jmp
pushf
sbb
rcl
push
mov
ja
call
cmps
shl
ins
mov
setg
dec
in
adc
xchg
xor
jmp
daa
push
sbb
fs
loopne
mov
lahf
mov
adc
cmp
sub
jmp
inc
dec
add
dec
ss
xor
xchg
cdq
add
jge
movs
inc
push
mov
mov
and
mov
out
add
stc
xchg
aad
popa
cwde
aas
retf
dec
dec
(bad)
sbb
jbe
push
bound
pusha
out
adc
lock
sahf
mov
test
or
rcr
aas
ins
dec
xchg
pop
jp
adc
mov
popa
fistp
cli
inc
ds
ret
sar
in
iret
dec
rcr
jecxz
aad
jmp
xchg
cmp
sbb
call
nop
or
push
adc
(bad)
popa
hlt
sub
ret
mov
cmp
push
jnp
das
add
xor
xor
sub
(bad)
lds
idiv
xlat
push
mov
add
pop
mov
inc
mov
xor
popf
loope
sbb
dec
ja
data16
and
fcomi
cmp
pop
inc
dec
inc
(bad)
adc
add
sahf
add
xor
int
dec
sar
sbb
xlat
mov
je
jo
mov
adc
jp
movs
jnp
or
bound
mov
pop
mov
int3
(bad)
movs
jmp
addr16
fsubr
nop
imul
pop
xor
bound
rcl
jae
xor
mov
sub
cli
ins
sti
arpl
aad
dec
sub
mov
add
and
mov
xor
inc
jo
pop
xchg
mov
sti
push
lods
imul
push
inc
adc
in
pusha
cmp
sbb
mov
js
add
loop
fisttp
jl
dec
stos
mov
sub
push
push
add
aad
adc
xchg
imul
gs
push
lds
sbb
push
and
mov
dec
cmp
test
mov
dec
popf
iret
iret
mov
pop
inc
mov
and
cmp
dec
sub
or
sub
out
dec
(bad)
shl
adc
sbb
inc
in
adc
cmps
ins
cld
jne
mov
push
bound
rcl
test
adc
ins
jl
mov
addr16
adc
cli
inc
sub
or
push
enter
jle
cs
sub
or
jecxz
aaa
pop
rcr
add
hlt
mov
xlat
add
test
add
(bad)
das
in
lods
inc
sub
push
pusha
ins
sub
clc
xor
cs
mov
add
mov
push
ret
sub
rcl
mov
mov
jo
cmps
mov
push
es
inc
test
xchg
mov
test
xor
xor
mov
add
or
iret
dec
loopne
cdq
mov
and
xlat
leave
jl
cli
and
pop
pop
stc
aaa
fidiv
mov
pop
inc
pop
mov
das
fs
inc
cld
popa
out
push
jnp
lea
add
xchg
pushf
jge
adc
mov
or
fcomp
mov
sub
mov
std
push
jl
xchg
fwait
dec
sbb
stc
jnp
ja
test
cdq
cli
sar
xchg
dec
jmp
fldcw
int
(bad)
sbb
imul
pusha
outs
mov
jge
gs
nop
adc
jns
cmp
xchg
mov
sbb
cli
jbe
xor
mov
imul
movs
loope
mov
rol
push
xchg
daa
ret
aas
mov
jp
jecxz
fcmovu
or
mov
xchg
into
aad
cmps
loopne
inc
int3
loop
jno
mov
sbb
cs
shl
add
aas
dec
pop
cmp
fild
int3
imul
iret
mov
adc
mov
add
test
push
mov
xchg
dec
xchg
sbb
dec
sbb
mov
jmp
lods
mov
push
adc
adc
icebp
test
lahf
mov
mov
adc
test
push
or
inc
(bad)
jns
in
(bad)
rcr
iret
gs
stc
pop
ins
mov
aad
in
std
push
out
dec
in
test
cmp
mov
xchg
call
inc
and
add
and
std
call
ds
xor
shr
mov
sub
fisttp
test
mov
adc
cmps
and
pusha
icebp
xchg
mov
xor
add
nop
push
sahf
fidivr
push
add
pop
dec
sub
ins
pop
test
pop
sub
call
jp
push
jbe
sbb
call
push
mov
inc
and
fwait
jno
(bad)
sbb
(bad)
stos
inc
setbe
inc
jmp
into
lea
mov
nop
js
cmp
sub
ret
adc
add
repnz
pop
dec
cwde
add
pop
popa
das
mov
shl
outs
iret
mov
std
test
outs
sbb
mov
in
cmps
dec
push
in
sbb
push
pop
or
inc
pop
sub
mov
mov
test
pop
mov
mov
int
jns
loop
mov
add
sbb
fcom
xchg
test
dec
outs
(bad)
(bad)
push
sti
ins
adc
adc
in
(bad)
cmp
mov
lock
mov
in
push
pop
addr16
je
sbb
dec
sub
xchg
mov
mov
popf
add
stos
jae
popf
adc
push
neg
xchg
adc
scas
or
arpl
movs
popa
inc
stos
push
(bad)
adc
mov
sub
and
ins
adc
daa
test
push
pop
aam
xor
daa
bound
fild
icebp
call
push
(bad)
cdq
pop
xlat
cmc
inc
and
scas
out
sub
cmps
pop
mov
pop
adc
shl
push
jmp
mov
sbb
mov
push
or
stos
adc
lods
sbb
jnp
(bad)
rol
ins
cmp
sub
movs
pop
bound
inc
shrd
mov
cli
mov
(bad)
retf
into
adc
icebp
pop
jnp
gs
mov
fisttp
ret
int
and
mov
adc
sub
push
out
and
inc
jbe
pusha
push
xchg
into
rcr
mov
push
stos
imul
cmp
sahf
int3
adc
or
add
inc
xlat
loope
push
sbb
in
into
popa
jmp
int
ss
int
sub
lea
inc
lods
jmp
mov
lea
adc
popa
(bad)
jo
ret
jle
jmp
inc
fistp
cmp
xchg
and
and
cwde
stc
loop
or
cmp
mov
mov
pop
into
out
jg
push
repz
retf
pop
xchg
fadd
or
loopne
push
nop
outs
sub
cwde
int3
add
push
mov
xor
pusha
call
mov
xchg
aad
jb
sbb
out
push
cmps
nop
jge
in
mov
or
lods
ins
pushf
pop
xchg
sbb
xor
mov
push
push
loope
jmp
idiv
cmps
xchg
jmp
rcl
jge
les
cmp
xor
mov
das
sub
aaa
(bad)
cmps
cli
add
cdq
push
jl
jl
xor
stos
test
(bad)
rcr
sub
inc
pop
xlat
add
pop
adc
jmp
retf
test
in
mov
jle
inc
adc
xchg
int3
(bad)
mov
xchg
add
fiadd
sub
lahf
daa
aaa
clc
mov
pop
int3
inc
jecxz
ror
xor
pushf
shl
fisub
std
mov
enter
xor
dec
test
int
fcmovne
push
out
mov
inc
cli
xchg
div
cdq
add
pop
adc
sub
or
loopne
fnstcw
mov
sysret
or
mov
push
ds
lods
leave
shl
mov
and
int3
push
add
das
ror
ins
xlat
scas
dec
in
pop
or
pop
mov
std
stos
push
into
cmc
movs
(bad)
pop
mov
repnz
std
push
push
das
or
push
outs
cmp
aam
fsubr
adc
xchg
mov
mov
fld
(bad)
retf
adc
sub
jle
jp
mov
and
sbb
add
stos
xor
sub
sub
int
or
mov
pusha
movs
cmp
mov
xchg
xor
mov
es
movs
ret
arpl
(bad)
ins
xlat
icebp
scas
push
ret
enter
add
sbb
jno
mov
pop
call
mov
mov
imul
jne
xchg
leave
mov
jo
pop
xchg
fnsave
dec
cli
and
pop
pusha
cs
and
movs
mov
sti
and
fisubr
es
add
mov
addr16
push
xlat
add
push
xor
inc
xchg
mov
inc
out
out
or
ins
push
sub
mov
mov
add
loop
pop
mov
js
and
popa
push
xchg
cmps
or
add
aaa
pop
fwait
idiv
sub
jae
bound
pop
push
call
jbe
jo
jo
(bad)
enter
stos
scas
inc
fisttp
adc
(bad)
adc
cmp
push
in
loop
jno
jmp
mov
push
dec
mov
mov
sahf
xchg
mov
out
cmc
imul
dec
xor
mov
std
or
cmp
push
mov
inc
pop
sub
stos
fld
push
sub
sti
mov
pop
cmps
in
xchg
sbb
or
adc
sub
scas
call
test
and
pop
sbb
sahf
daa
rol
add
add
xchg
sub
repz
adc
mov
cmps
or
sub
sti
popf
add
out
fwait
jmp
cmp
mov
or
out
and
out
mov
in
ins
adc
mov
add
sub
test
add
(bad)
outs
fcomp
push
out
test
jl
and
mov
sbb
ins
pop
mov
ret
movs
les
inc
mov
cwde
mov
mov
cmp
icebp
enter
or
add
addr16
jg
cmp
dec
xchg
mov
fdivr
out
outs
inc
test
nop
cmp
enter
jne
sub
and
(bad)
add
push
clc
xor
xor
fild
xchg
push
call
and
cmp
sbb
push
xchg
pushf
mov
jle
pop
std
push
jbe
xchg
push
sbb
in
lahf
and
ret
fcomip
sti
mov
(bad)
mov
jns
lods
push
retf
add
cld
test
mov
jg
sbb
cmp
sub
test
cli
outs
mov
jmp
add
retf
inc
lea
outs
outs
cdq
imul
jp
jbe
mov
dec
or
mov
cmp
(bad)
mov
ret
gs
and
adc
mov
shr
push
pop
das
push
movs
adc
std
int3
sahf
in
aaa
sub
and
sbb
iret
and
mov
and
bound
mov
mov
dec
jmp
outs
aas
inc
dec
pop
adc
aas
retf
xchg
sbb
shl
fisub
mov
outs
pop
xchg
xor
ret
rcl
mov
popf
popa
push
test
mov
inc
daa
fld
test
sbb
jne
loope
leave
lock
sbb
mov
(bad)
mov
mov
sbb
sti
pop
sbb
sub
mov
xor
jbe
mov
xchg
test
inc
aam
pop
mov
adc
aam
fwait
sahf
lods
js
sbb
jmp
daa
cli
out
outs
aad
test
je
jle
push
imul
scas
aaa
inc
mov
not
cld
(bad)
mov
mov
out
loopne
push
lods
rol
mov
or
pushf
scas
mov
pop
push
test
in
push
push
fisttp
test
adc
cmc
imul
enter
ja
mov
std
cdq
xchg
or
add
pop
sub
adc
mov
push
fnsave
inc
push
ja
retf
add
stos
mov
and
lods
mov
jg
dec
jmp
cdq
imul
cmc
sub
lahf
jl
dec
mov
sbb
call
rcl
sub
icebp
dec
cdq
add
aam
imul
xchg
rol
push
clc
dec
mov
stos
ret
xor
dec
add
scas
xchg
repz
add
cwde
push
pop
dec
(bad)
mov
mov
adc
jbe
xor
popf
cmp
or
jb
icebp
mov
mov
pop
push
pop
mov
ins
add
mov
mov
ins
test
out
rol
call
jo
int3
fcomp
and
fidiv
retf
sub
(bad)
popf
mov
xor
or
cmp
sbb
cmp
into
dec
jp
int3
jmp
or
dec
jae
cmp
dec
outs
sbb
jle
cmp
iret
add
rol
or
ins
cs
mov
fwait
xlat
imul
jbe
or
loop
inc
jge
cs
jns
sub
lahf
shl
sbb
int
sti
sub
or
and
mov
or
push
pop
xchg
dec
inc
imul
hlt
jle
imul
push
outs
(bad)
dec
cmps
mov
arpl
(bad)
out
dec
sbb
or
mov
(bad)
fnsave
(bad)
retf
nop
pop
dec
jne
jno
sub
int3
sub
ds
ds
ss
and
test
jbe
leave
dec
push
or
mov
mov
jne
push
sbb
mov
jp
out
dec
into
sub
add
dec
mov
sti
bound
mov
dec
ficom
(bad)
aaa
aam
and
ja
cmps
gs
push
inc
cmc
jo
fs
cmp
out
mov
dec
fdivr
push
leave
xchg
mov
retf
addr16
adc
cli
imul
fnsave
xor
push
scas
clc
mov
fiadd
ja
inc
adc
mov
inc
xor
or
sbb
dec
mov
call
std
push
xchg
jg
sbb
mov
aad
cmp
js
and
out
(bad)
mov
cmp
xor
adc
(bad)
pusha
jne
std
xchg
xchg
cmp
pop
xchg
pop
xor
mov
icebp
jmp
push
out
mov
xor
test
mov
mov
pop
lea
sbb
sub
sub
lods
pushf
cli
ror
xchg
sbb
mov
push
jp
dec
jne
dec
adc
xor
jle
cs
repz
call
sahf
cli
std
fst
xor
xchg
(bad)
call
das
inc
aam
in
push
mov
sub
jl
pop
xor
xchg
mov
mov
(bad)
adc
movs
ss
xchg
int
icebp
fisubr
mov
adc
sti
dec
lea
stos
arpl
pop
popf
sbb
and
out
cmc
sbb
add
jne
test
sbb
cwde
ins
ss
jb
fisttp
mov
ror
das
jno
pop
mov
jns
or
inc
sbb
cdq
mov
jns
lock
and
push
outs
cmps
push
jb
lock
cmp
pop
ror
mov
push
test
imul
pop
jnp
cmp
xchg
add
or
jmp
clc
icebp
inc
shl
xchg
sar
ds
popa
(bad)
es
test
mov
scas
push
push
mov
fcomi
jl
inc
mov
and
mov
mov
lds
fwait
int3
into
jns
test
(bad)
fcomip
xor
pop
leave
shr
mov
xor
adc
shl
je
push
push
cli
pop
stos
cdq
add
loopne
push
and
xchg
pop
mov
sub
fwait
xor
mov
mov
inc
aad
push
test
and
sub
(bad)
adc
loopne
xchg
add
mov
jns
loope
adc
aas
xchg
mul
leave
jmp
js
adc
loope
add
add
and
mov
jb
add
xchg
pusha
push
rcr
mov
mov
call
mov
nop
pop
mov
retf
imul
jp
in
leave
or
adc
xor
jl
aas
fistp
sub
jo
jb
movs
aas
xor
js
mov
pop
retf
mov
cmp
and
push
(bad)
cli
mov
ret
les
in
stos
sub
fimul
xchg
popa
sub
sbb
daa
xor
dec
retf
add
and
inc
lods
ds
xchg
pop
jmp
mov
adc
pop
sahf
call
sbb
push
dec
neg
in
ja
jne
xor
push
xchg
inc
ret
xor
sbb
lods
pushf
pusha
sub
ss
add
fsubp
jb
jp
jp
or
fisttp
jmp
sbb
push
cmp
push
jmp
sub
sbb
add
addr16
leave
sbb
mov
outs
loopne
adc
dec
jg
push
(bad)
rol
pop
ja
not
push
and
mov
cdq
mov
xor
imul
mov
push
ja
mov
pop
push
enter
int
jmp
bound
jecxz
add
lea
mov
adc
cmp
std
call
iret
jns
jle
jno
mov
scas
add
fldenv
push
outs
and
test
ins
pop
mov
adc
add
shl
sub
push
pop
(bad)
cmp
out
pop
sbb
fisubr
xchg
lea
sub
mov
xchg
pop
pop
adc
cvtpd2dq
inc
adc
mov
cmp
inc
es
fbstp
into
movs
pop
push
sbb
mov
inc
pop
scas
popf
push
sbb
push
call
mov
hlt
and
push
and
pop
shl
iret
call
push
packsswb
dec
aaa
xor
ror
test
fwait
imul
nop
mov
add
add
mov
xlat
sbb
cmp
push
into
in
das
std
out
(bad)
mov
pop
pop
pop
mov
and
sub
ds
adc
sbb
sub
push
sbb
rcr
(bad)
sub
fild
cld
mov
movs
jae
add
fidiv
xchg
adc
int3
in
jmp
add
sub
or
pop
dec
push
pop
(bad)
mov
cdq
sub
(bad)
stc
test
adc
clc
imul
jo
cmpxchg8b
adc
pop
sub
xchg
shl
mov
xchg
mov
pop
mov
jle
cwde
inc
xchg
scas
mov
pop
mov
jno
fwait
mov
inc
sub
stc
mov
aad
dec
fucom
push
cmps
cmps
fidivr
out
loop
inc
hlt
ds
shl
cmp
jns
out
mov
pop
xchg
xchg
aas
cmp
and
in
(bad)
lods
scas
aas
fisubr
std
mov
enter
arpl
pop
fsubr
ret
sbb
sar
mov
ror
sar
test
push
sbb
mov
pop
cs
pop
cmp
cmp
int3
pop
mov
aas
mov
fsubr
pop
cmc
ror
mov
jecxz
push
gs
cs
out
in
push
(bad)
lock
nop
ss
xchg
push
inc
push
loope
push
add
xor
dec
popa
shl
cmp
(bad)
xor
push
pop
sbb
inc
add
adc
push
sub
adc
ins
sbb
fbld
xchg
jb
call
(bad)
fld
dec
out
pop
dec
mov
inc
cmp
xlat
pop
jmp
sar
movs
lods
cmp
mov
dec
mov
in
fmul
pop
adc
jo
jns
mov
sub
jb
bound
push
pop
neg
cmps
(bad)
std
add
dec
cdq
push
scas
loopne
test
and
pop
pop
mov
xor
cmp
and
cs
sub
jp
ror
add
scas
xchg
push
pop
mov
dec
push
mov
cdq
push
mov
aam
sub
sar
and
adc
shr
or
imul
sub
movs
jl
fcom
clc
bound
mov
mov
shl
jp
das
pop
dec
ror
loopne
push
(bad)
xchg
sub
cmp
add
mov
ret
xchg
les
aam
add
pop
shl
in
mov
ret
mov
dec
pop
add
in
sahf
dec
ins
out
enter
fwait
jg
loop
cmp
fnsave
fxch
dec
fisttp
idiv
inc
jo
xchg
aaa
mov
adc
ret
enter
clc
and
push
outs
jbe
push
js
xor
xor
mov
dec
adc
jl
mov
loopne
(bad)
clc
pop
loopne
and
mov
sbb
data16
cmp
xor
xor
call
mov
retf
fldcw
hlt
ins
inc
popf
fmul
call
sti
mov
ficomp
jo
(bad)
daa
jmp
call
push
push
(bad)
dec
sub
push
cdq
jo
ret
addr16
push
push
xlat
ds
jne
xchg
jge
push
sar
test
push
mov
or
imul
movs
je
push
gs
adc
mov
ret
daa
jnp
les
test
xchg
or
lds
pop
test
sub
cmp
pop
into
mov
cmps
int
jnp
ret
repnz
push
mov
lock
rcr
and
cmp
jnp
aaa
mov
cwde
int3
movs
mov
add
push
pop
je
pop
xchg
stos
(bad)
ficomp
dec
mov
call
(bad)
cmp
mov
inc
inc
sbb
lods
jl
inc
data16
sbb
dec
popa
mov
mov
daa
sbb
or
call
test
jge
or
and
sti
sbb
mov
fwait
aaa
mov
ret
xor
rcl
jne
movs
ss
adc
inc
adc
mov
out
xchg
fist
ja
(bad)
mov
ror
cmp
push
cmps
pop
aas
pop
loope
repnz
addr16
sbb
cs
push
xor
outs
inc
xchg
repz
test
out
cmp
jbe
cmp
call
sbb
or
jecxz
fdiv
jle
repnz
or
outs
mov
int
stc
sub
mov
mov
pop
retf
push
mov
jge
or
sub
xchg
xchg
ja
shr
push
call
retf
int3
lods
xlat
stos
pop
xor
popf
pop
cmp
(bad)
popa
sbb
mov
sub
hlt
push
retf
mov
add
leave
call
out
xchg
xchg
cmp
push
or
sbb
cmp
sub
pop
pop
cmp
loop
xor
mov
push
test
in
jge
pop
fdivr
push
sbb
dec
mov
sub
in
cmp
imul
lock
sub
or
jo
jo
adc
fwait
ins
call
gs
pusha
pop
push
xchg
shl
mov
xchg
jnp
clc
inc
loop
data16
lahf
cmp
stos
inc
add
sub
sbb
push
cmp
gs
retf
and
repnz
shl
lods
inc
mov
dec
pop
lahf
call
inc
(bad)
inc
arpl
int
mov
daa
ror
dec
sbb
mov
sub
add
pop
inc
add
push
out
cmp
fistp
shl
push
retf
cmp
call
nop
and
js
repz
daa
dec
rcr
mov
(bad)
nop
or
cmp
daa
gs
dec
mov
dec
pop
scas
inc
ins
mov
pop
fidiv
popf
(bad)
sahf
loop
fucomp
mov
cli
outs
neg
lods
jbe
iret
xchg
inc
sub
icebp
cwde
push
mov
mov
jnp
and
inc
outs
push
rcl
loope
std
in
in
sub
jge
jns
ret
add
lea
jp
pusha
enterw
repnz
lods
retf
add
xchg
xlat
pop
mov
bound
out
mov
fst
xchg
adc
mov
mov
mov
outs
ja
outs
in
push
iret
pop
loope
inc
fdiv
ja
aad
push
mov
out
std
leave
sbb
test
mul
jnp
addr16
push
pop
pop
repz
push
int
add
(bad)
fnsave
addr16
xchg
(bad)
repnz
stos
cmc
adc
adc
mov
sbb
sar
pusha
jb
enter
cld
jmp
mov
and
shl
mov
out
ficomp
cld
xchg
nop
mov
sub
mov
dec
stc
pop
test
jg
ret
je
int3
js
imul
data16
outs
xchg
mov
jmp
das
inc
outs
pop
call
sbb
cmp
inc
scas
out
jl
cli
repnz
lock
jmp
and
in
and
pop
sub
mov
jp
retf
adc
xchg
sbb
inc
pop
pop
dec
push
lods
dec
xchg
cwde
out
add
push
dec
call
push
pop
cld
je
std
test
push
xchg
mov
adc
pop
es
adc
push
xchg
mov
test
js
cmp
sbb
imul
pushf
xor
adc
sbb
jne
movs
cmc
inc
push
adc
imul
pop
mov
xlat
in
cmc
or
dec
add
pop
loop
jp
lods
jl
push
pop
jns
cmp
or
adc
xor
mov
lds
std
shr
les
aam
addr16
(bad)
fstp
cmp
pop
inc
enter
push
mov
add
enter
retf
cmp
outs
xchg
push
adc
mov
fidiv
add
push
cmps
sti
pusha
(bad)
sub
je
idiv
sti
pop
bsr
cmc
or
or
movs
lea
repz
mov
jne
add
cmps
sbb
mov
jnp
daa
mov
scas
cmp
(bad)
pop
ret
add
add
mov
pop
cmc
cmp
mov
ins
jecxz
call
pop
in
mov
fcomp
pop
sub
sub
loope
fild
or
adc
jbe
ss
inc
pop
xchg
mov
jns
loopne
and
arpl
cmp
retf
mov
jne
sbb
(bad)
iret
bnd
addr16
adc
sub
cmc
fsubr
imul
pop
stos
mov
or
dec
mov
arpl
div
and
ficom
sub
loope
push
xchg
outs
cmp
xchg
push
ins
sub
push
sbb
adc
push
mov
cmp
imul
mov
loope
inc
pop
fmul
xor
arpl
push
add
dec
das
or
shl
jne
rol
inc
test
gs
imul
sub
lahf
lods
inc
ds
dec
cmps
pop
sbb
jmp
mov
nop
xor
fist
sar
inc
mov
jmp
xor
cmps
mov
jno
pop
data16
or
xchg
ror
fdecstp
out
inc
retf
icebp
cmp
inc
inc
leave
mov
mov
and
adc
sahf
mov
pop
push
xchg
inc
das
fld
pop
fcom
movs
push
ret
lahf
jp
cmp
pop
(bad)
leave
dec
push
test
cmp
adc
push
add
out
pop
push
add
lods
(bad)
push
mov
scas
(bad)
jne
fs
mov
(bad)
jns
mov
or
mov
scas
lds
push
in
push
push
shl
dec
or
loop
ins
mov
mov
(bad)
in
stc
ret
jge
aam
stos
and
test
mov
rcr
xchg
lods
push
pop
and
or
cmp
or
jne
and
push
add
jne
movs
push
stos
retf
adc
add
push
cli
sahf
push
pushf
pop
pop
or
cmp
xor
loop
ds
inc
mov
andps
sbb
mov
pop
jp
adc
repnz
iret
aad
inc
retf
sub
std
jb
add
xchg
bound
nop
test
(bad)
mov
mov
in
fmul
shr
sbb
fdivr
cmps
add
in
into
inc
add
or
jp
in
lods
add
(bad)
mov
js
sbb
out
mov
shr
xor
or
push
clc
outs
stos
add
lahf
adc
in
jmp
add
cmp
test
dec
xor
pop
xchg
sub
ret
(bad)
mov
out
cmp
mov
pop
inc
jo
fadd
rcr
sti
fwait
sti
loope
xchg
stos
pop
pop
fsubr
sub
fdivr
push
jnp
jl
jmp
mov
(bad)
dec
ja
lds
push
dec
mov
jno
lahf
dec
xor
(bad)
dec
xor
xchg
pop
cmps
and
push
sbb
lea
jb
push
out
xchg
shl
retf
dec
addr16
scas
mov
cli
fwait
xlat
or
mov
xchg
or
aad
inc
sti
push
stos
rcr
popa
and
xchg
push
fldcw
pop
mov
sub
jle
jl
mov
inc
sub
je
test
cmp
enter
stos
scas
std
mul
lea
jbe
push
inc
and
xor
pop
and
mov
mov
or
aam
mov
mov
xlat
out
test
stc
mov
pop
adc
sub
cmp
or
push
cmp
or
lds
test
ds
sbb
mov
lds
retf
sar
jecxz
daa
sbb
xchg
outs
scas
xchg
sub
mov
lods
xchg
add
xlat
jne
cmp
arpl
rcl
jmp
aaa
mov
popa
retf
(bad)
cmp
iret
mov
or
xlat
jbe
dec
push
jg
stc
(bad)
arpl
lods
mov
(bad)
aad
call
and
mov
shl
fcomp
adc
or
pusha
add
xchg
stos
jnp
fnstenv
push
ins
or
xor
and
push
mov
xchg
xchg
lahf
mov
mov
sbb
bound
call
inc
pop
or
or
push
std
lea
add
iret
arpl
sub
aaa
mov
mov
xchg
out
data16
rol
jo
lahf
shl
jnp
pop
mov
in
(bad)
jg
xchg
push
pop
or
retf
ror
or
lods
cmp
outs
push
or
in
outs
mov
sar
ret
sbb
mov
lea
into
xchg
test
lock
(bad)
jge
mov
inc
fisubr
ins
(bad)
jecxz
outs
adc
aam
lds
jmp
pushf
mov
call
pop
pusha
inc
ficomp
mov
rcl
mov
pop
pop
out
out
adc
rcl
xor
(bad)
dec
test
lahf
mov
gs
or
jecxz
xor
ins
jae
add
add
in
mul
(bad)
push
out
mov
mov
mov
push
xor
add
in
or
test
mov
out
retf
pop
sub
jbe
xchg
es
(bad)
iret
or
pusha
ja
xor
fs
xor
loop
fistp
lahf
push
jne
cs
aam
mov
ja
lods
in
daa
int3
push
out
sbb
out
and
cmc
jmp
adc
icebp
mov
pop
out
cmp
sbb
arpl
sbb
xchg
push
stos
das
cmps
lock
popf
movs
or
aam
mov
cdq
cmp
xchg
fld
dec
or
sbb
ror
frstor
jne
(bad)
mov
dec
fld
repz
cmc
xor
jmp
loopne
inc
sbb
loopne
repz
mov
push
sahf
ins
stos
(bad)
xchg
(bad)
xor
fadd
jge
imul
ret
cmp
jg
out
inc
pop
(bad)
out
hlt
call
int3
addr16
mov
mul
mov
inc
push
hlt
daa
pop
or
in
int
loop
aaa
mov
ret
sahf
in
jmp
cmp
and
dec
fsubr
ror
popf
mov
ror
push
xchg
adc
ss
hlt
out
(bad)
jmp
cli
(bad)
sbb
int3
ror
jg
or
xrelease
neg
mov
and
imul
dec
scas
lods
lods
mov
lock
loopne
or
sbb
data16
mov
shr
shl
pushf
outs
sbb
jo
jne
mov
sbb
lea
xchg
adc
daa
cwde
jbe
push
ror
xchg
xchg
mov
or
clc
rol
mov
mov
push
xor
jecxz
mov
pop
shl
sbb
call
dec
xor
pop
popa
sbb
mov
sbb
pop
ins
inc
push
outs
pop
mov
mov
xchg
lea
adc
push
sub
adc
push
mov
adc
call
pop
sbb
push
pop
fcmovnbe
pop
scas
xchg
and
fiadd
cmps
pop
stos
mov
imul
jmp
jg
in
mov
cdq
mov
int
adc
neg
pop
dec
pop
(bad)
call
push
push
adc
outs
scas
add
sub
jb
push
inc
mov
inc
jecxz
or
data16
fistp
fist
dec
enter
in
cld
mov
and
sbb
or
ficomp
aam
sub
adc
pop
or
out
add
lods
int3
adc
xchg
test
push
inc
cmp
mov
je
out
addr16
adc
sub
bound
mov
inc
test
cmps
adc
in
aas
fwait
mov
xchg
(bad)
call
cdq
sbb
and
fcmovnbe
push
dec
mov
scas
neg
leave
in
aas
pop
cmp
std
pushf
inc
sbb
cmp
lods
fs
pop
add
loope
fnstenv
adc
jns
mov
test
adc
shl
stc
je
je
nop
dec
mov
retf
inc
sbb
rcr
mov
push
mov
js
cmps
mov
lds
idiv
out
fstp
jg
inc
inc
xchg
inc
pop
aas
mov
in
pop
ret
jge
push
sub
gs
out
jae
mov
ret
pushf
aad
icebp
push
aas
add
std
sbb
push
repnz
pop
clc
add
les
ja
jge
fisubr
sub
es
cli
les
pop
inc
dec
enter
pop
add
jmp
mov
idiv
ret
jbe
push
fidivr
add
mov
in
jb
or
cdq
sti
adc
outs
lods
or
mov
popa
jne
jge
xlat
sbb
mov
int
mov
aas
push
add
loope
cmp
sub
pop
or
sub
test
sub
inc
xchg
test
jbe
dec
movs
js
hlt
inc
into
jecxz
lea
or
ror
rol
or
scas
push
sub
mov
lea
jns
jg
inc
sbb
ret
or
test
data16
dec
sub
push
(bad)
outs
pusha
pop
xchg
push
sbb
out
sar
addr16
in
mov
dec
int3
gs
cwde
push
addr16
aas
mov
dec
sar
cmp
loop
fistp
addr16
test
enter
nop
movs
xchg
cmp
loopne
loopne
push
xchg
(bad)
jbe
imul
sub
(bad)
cmps
scas
sbb
data16
data16
jl
mov
lahf
add
shl
mov
fdivr
inc
rcr
int3
adc
jne
or
cmps
stos
xor
xor
stos
mov
jmp
jecxz
push
pop
mov
sti
xchg
push
xor
leave
pop
cmps
into
mov
in
adc
scas
jmp
cmp
xchg
repz
dec
mov
or
sub
push
into
or
pop
mov
dec
jmp
mov
mov
push
mov
call
xchg
push
imul
repnz
(bad)
jge
in
cmps
pop
in
mov
sbb
into
sub
jge
xor
iret
ds
loop
sbb
out
push
cli
pop
mov
add
fwait
lock
into
pop
xchg
push
adc
or
arpl
fiadd
repnz
jb
jmp
idiv
sub
push
stos
pop
jmp
xchg
fisttp
add
in
rcr
fist
dec
mov
pusha
int3
(bad)
and
repnz
js
sub
push
cmps
sti
retf
gs
ror
call
cmp
sbb
popa
mov
and
cmp
sbb
clc
jnp
aam
push
jnp
xor
add
push
aaa
stc
loop
(bad)
int
pop
sbb
(bad)
adc
push
and
sub
test
dec
shl
pop
int
pushf
mov
xor
cs
adc
movs
fs
pop
fist
aas
sub
sbb
dec
fistp
mov
leave
jno
mov
inc
jle
adc
lods
dec
mov
pop
jo
scas
fs
or
sub
jmp
ins
aam
mov
jmp
bound
rcr
stos
or
mov
xlat
enter
ins
cmp
lds
rcl
fist
dec
jle
push
jp
mov
in
rcl
mov
dec
sbb
popf
in
push
and
xor
daa
ror
cmc
ret
mov
inc
push
mov
xchg
add
les
mov
int3
mov
mov
sbb
mov
fadd
or
stos
dec
pop
add
fld
in
call
mov
(bad)
push
std
push
jne
out
scas
mov
xchg
and
and
adc
mov
ins
pusha
fldcw
in
jle
cmp
and
std
mov
mov
mov
ja
sbb
xor
cwde
in
sbb
out
push
mov
mov
aas
mov
cdq
pop
pop
push
mov
cld
mov
dec
xor
mov
in
dec
retf
mov
(bad)
pop
(bad)
ds
adc
call
fdivr
or
std
push
addr16
sub
lods
in
inc
pusha
jle
add
inc
pushf
int3
push
xchg
ins
mov
lahf
popa
cmps
fild
call
xchg
jecxz
pusha
sub
jmp
jnp
mov
clc
jl
sbb
std
sub
jnp
aam
(bad)
push
or
ret
movs
add
xchg
xchg
add
fstp
add
scas
or
popf
dec
fstp
xchg
jo
imul
loopne
xchg
aad
dec
stos
lods
stc
push
xchg
pop
repz
pop
pusha
ret
out
in
cld
mov
scas
inc
jo
add
xchg
fidiv
repz
imul
lods
idiv
push
in
mov
loopne
xchg
and
pop
pop
cmp
push
and
jmp
scas
mov
pop
stos
jne
retf
pop
cwde
int3
stos
daa
adc
je
push
jmp
mov
daa
out
iret
pop
inc
cmps
enter
sbb
mov
cmp
pop
mov
scas
pop
mov
inc
fnstcw
test
xchg
sahf
jecxz
jp
push
xchg
sti
rcl
call
dec
mov
and
or
lea
mov
stc
iret
jmp
cdq
jbe
lea
sti
sbb
jns
or
shr
movs
and
jecxz
jnp
bound
je
push
nop
popa
add
inc
gs
loop
inc
lahf
ja
jae
shr
stos
jnp
push
test
mov
pop
sbb
pop
jbe
hlt
(bad)
je
mov
es
mov
int3
popa
lods
bound
aaa
hlt
sbb
inc
or
add
pop
add
stos
(bad)
or
fwait
adc
in
mov
xchg
or
mov
aas
xchg
es
or
and
inc
std
pop
sbb
inc
iret
push
arpl
in
(bad)
inc
imul
and
inc
pop
push
fsubr
ins
mov
and
push
sbb
jbe
push
das
jmp
ret
xchg
inc
cmc
push
ds
mov
retf
cli
mov
(bad)
bnd
xor
or
add
jae
and
fbld
pushf
retf
not
inc
fimul
clc
xchg
shl
xchg
dec
or
js
add
(bad)
mov
mov
sub
cdq
je
aas
les
sub
popf
jno
repz
or
and
pop
in
sbb
stos
fdiv
sar
pop
jbe
pop
xor
xchg
xchg
je
cmp
into
bound
cmps
mov
add
bound
call
cmps
fs
loopne
add
sub
push
add
ret
frstor
xor
pop
jmp
shr
sub
jbe
cmp
(bad)
cmp
push
gs
in
pop
jbe
pop
cmp
jmp
jle
mov
pop
cs
ror
ins
jmp
push
adc
add
(bad)
mov
xchg
inc
mov
xor
inc
inc
mov
adc
xor
stos
aas
mov
adc
jno
xchg
pop
mov
push
or
inc
stos
and
pop
lods
lahf
jg
fs
cld
jge
pushw
xchg
jns
cmp
push
xchg
shl
xlat
push
sbb
pushf
add
push
in
stos
cmp
int
or
or
mov
call
mov
adc
(bad)
mov
xchg
bound
or
mov
sti
pop
pushf
fmul
inc
loopne
and
inc
in
bound
mov
call
dec
push
addr16
sbb
or
sbb
and
(bad)
pop
fnstenv
int
retf
mov
cwde
mov
xchg
push
inc
mov
dec
fisub
(bad)
inc
pop
inc
mov
sbb
add
xchg
in
inc
or
adc
mov
div
inc
push
jae
outs
rcr
jmp
in
cmp
pushf
push
bound
clc
shl
lods
out
test
push
jge
pop
and
dec
sbb
mov
add
ret
cmp
mov
rcr
add
int
fucomp
pop
(bad)
movs
push
or
mov
lahf
iret
xor
(bad)
cmp
mov
cs
ins
les
inc
jns
js
pop
sub
iret
jg
fidivr
stos
pop
arpl
rcl
retf
sub
das
iret
mov
loopne
mov
mov
int3
retf
adc
and
jnp
mov
enter
jecxz
jns
(bad)
lock
xor
jb
mov
push
mov
test
outs
addr16
stc
loop
int
push
lods
je
sbb
daa
hlt
into
dec
inc
arpl
pop
pop
mov
dec
dec
popa
pop
in
sbb
daa
jp
lock
jmp
add
jo
stos
mov
or
fcom
cmp
xchg
push
fstp
sti
shl
(bad)
aad
ins
(bad)
push
fld
out
cmps
clc
inc
pop
rcr
xlat
fimul
stos
or
and
out
and
in
(bad)
adc
(bad)
imul
js
jge
jnp
mov
sbb
jge
je
(bad)
lods
cmp
fild
std
imul
inc
ret
es
arpl
jg
xlat
retf
lods
cmps
scas
rol
sub
jmp
pop
std
fnstenv
shl
pusha
scas
jg
(bad)
(bad)
cmps
inc
hlt
rcr
add
data16
cmp
jnp
gs
push
jne
or
nop
inc
bound
push
sti
jecxz
mov
push
jo
inc
aad
xchg
jno
pop
cli
dec
xor
jno
and
xor
jns
clc
mov
scas
or
aad
repz
sbb
mov
jmp
cmp
mov
outs
add
xor
add
data16
scas
js
lahf
push
outs
cs
daa
inc
cli
xor
ja
ja
add
jmp
scas
jmp
mov
je
mov
fidiv
jne
cmp
inc
mov
sub
add
in
repz
cmp
pusha
ins
mov
adc
jl
push
jle
cmp
push
sbb
cmp
jecxz
mov
clc
adc
mov
jbe
mov
hlt
xchg
sub
mov
enter
imul
pop
mov
sub
adc
ret
dec
cmp
cmp
in
out
dec
cmps
jmp
idiv
push
fdiv
sbb
pop
aaa
adc
dec
pop
in
sub
mov
div
arpl
cmc
imul
stos
adc
adc
sub
adc
jmp
and
sub
jne
or
add
int3
nop
pop
mov
les
std
push
xchg
mov
pop
ja
jp
xor
add
cmps
mov
daa
in
dec
mov
fwait
data16
xchg
repnz
mov
inc
in
js
mov
fmul
rcr
cli
xchg
loope
xor
out
jae
rcl
ins
pushf
cdq
(bad)
aad
test
icebp
dec
mov
out
(bad)
ja
or
lahf
mov
repz
(bad)
enter
lods
push
daa
push
cmps
fstp
fwait
icebp
xor
inc
popf
push
sbb
cdq
inc
leave
cld
jno
cmp
jno
push
xor
ret
or
mov
jns
ret
pusha
cmps
and
jae
mov
cmp
or
(bad)
outs
(bad)
out
xor
cmp
fs
jns
jl
push
dec
mov
adc
lods
jg
xor
dec
movs
pop
jns
cmp
dec
stc
mul
inc
scas
sub
sub
lods
pop
jne
xor
mov
add
inc
scas
call
call
rcl
pop
stos
push
xor
push
mov
push
or
aas
outs
mov
or
mov
bound
test
dec
iret
adc
sbb
rcr
outs
push
loope
loope
and
mov
jne
adc
nop
(bad)
addr16
dec
and
fwait
ret
stc
mov
pop
fsubr
cmc
lea
mov
xor
inc
aas
bound
stos
es
cmp
mov
mov
jmp
mov
or
mov
mov
pop
add
lahf
or
retf
or
cmps
push
data16
loope
sbb
test
mov
xor
mov
jge
bound
dec
push
xor
add
outs
fnstcw
in
out
inc
shl
outs
cmp
adc
outs
mov
mov
xor
sbb
iret
fmul
and
in
inc
adc
add
adc
xor
repnz
xor
or
xchg
fdivr
(bad)
cmp
adc
sbb
outs
lock
jne
idiv
mov
js
add
je
sbb
add
push
test
mov
mov
push
cmc
sub
xchg
xchg
test
dec
movs
cs
sub
cld
mov
loope
xchg
lods
jmp
mov
nop
add
mov
ja
inc
ins
ss
or
loopne
js
das
mov
sub
or
dec
fcmovu
cld
jne
or
push
enter
sahf
cmps
jmp
xchg
retf
movs
jno
pop
js
push
repz
jmp
mov
mov
xlat
fdivrp
out
movs
pop
nop
fwait
or
fisttp
les
cmp
mov
mul
and
lahf
popf
mov
std
scas
into
cmp
jae
imul
stos
in
and
loop
sbb
ins
sub
or
push
(bad)
aas
dec
inc
jnp
add
lahf
ins
hlt
and
push
movs
mov
les
cdq
dec
loop
xor
and
sbb
jmp
xchg
fcmovnb
push
or
gs
push
xlat
stc
movs
(bad)
and
mov
sbb
arpl
jno
pop
or
cmps
daa
rcl
scas
pushf
add
imul
les
(bad)
pop
pop
push
ins
mov
mov
ins
fnstsw
(bad)
inc
loope
mov
xchg
inc
xor
push
into
and
mov
ja
les
lea
add
cld
ds
xchg
push
adc
and
sti
push
sub
mov
movs
imul
or
outs
xchg
cmp
stos
xchg
pop
popa
pop
pop
popf
fucomip
xchg
push
enter
daa
jne
and
test
mov
add
jb
add
adc
xor
adc
pop
int
xchg
cmp
push
imul
adc
or
dec
lea
cld
or
popf
gs
dec
scas
or
dec
sbb
and
outs
add
in
in
js
push
push
cmp
mov
cmp
ror
pushf
xor
dec
adc
dec
dec
(bad)
sub
mov
aam
popa
sbb
xchg
push
or
and
inc
imul
inc
mov
cmc
adc
call
xchg
sub
or
fdiv
cs
daa
push
inc
shl
enter
repz
xor
push
cdq
in
mov
repz
sbb
fsub
jne
bnd
sbb
mov
mov
adc
mov
movs
pop
mov
bound
adc
call
sbb
sbb
adc
xchg
enterw
or
fisttp
outs
push
mov
cmp
cli
stos
dec
jb
cmp
push
pop
arpl
test
mov
sub
and
push
rol
mov
cmp
(bad)
sbb
popa
and
loope
repnz
inc
popa
cli
cmp
adc
mov
in
mov
retf
dec
ds
sub
leave
and
sbb
jns
imul
ja
scas
test
pop
pop
add
lock
js
push
or
lahf
arpl
xchg
scas
inc
ror
cmp
fxtract
sub
cdq
fwait
sub
lods
push
lahf
mov
les
cmp
jle
push
out
ss
pop
inc
mov
jecxz
mov
xor
mov
mov
cld
mov
xlat
mov
fucompp
pop
lahf
ret
cwde
enter
int3
mov
push
sub
addr16
lds
dec
cmp
push
or
(bad)
mov
xor
jp
loopne
in
leave
or
enter
mov
jbe
out
xor
fisttp
inc
daa
adc
and
aad
jae
pop
dec
xor
jl
lods
into
xchg
mov
push
sub
push
sbb
or
sub
add
xlat
sbb
mov
imul
pop
and
scas
sbb
jne
push
inc
out
xchg
rcl
push
aad
mov
sbb
mov
outs
aam
cmc
mov
mov
or
xor
pop
adc
jbe
call
xchg
mov
enter
or
xor
sahf
push
sbb
sbb
sbb
cmp
int
inc
pop
aas
cmp
and
fst
push
cmp
clc
push
adc
lods
mov
mov
leave
push
lods
sbb
push
out
and
popf
sbb
es
xchg
mov
int
mov
mov
cmps
jp
daa
xchg
xor
fidiv
add
call
mov
mov
add
ins
and
out
xor
pop
xor
push
xor
jmp
jmp
inc
mov
or
ror
outs
dec
xchg
xchg
xor
mov
fcomp
cld
cmp
aas
mov
pop
fstp
arpl
das
inc
inc
and
repnz
adc
and
sub
ret
dec
jg
dec
pop
pop
and
push
cdq
push
mov
dec
adc
bound
shl
iret
sub
mov
pusha
iret
rcr
inc
(bad)
sti
xchg
cdq
mov
out
sub
out
jecxz
je
push
mul
ret
mov
fidivr
xor
cmps
gs
xchg
stos
adc
sahf
dec
jecxz
loop
xor
push
mov
push
mov
(bad)
sahf
inc
jbe
add
jmp
jbe
adc
stos
pop
xchg
inc
ret
mov
int3
mov
adc
xchg
pop
pop
(bad)
fisubr
lods
xor
leave
cmc
std
and
xchg
clc
fmul
int3
mov
jge
and
out
idiv
nop
rcl
(bad)
mov
adc
int3
pop
rol
jnp
xchg
adc
jp
sub
sbb
test
inc
jbe
not
retf
mov
in
stc
out
in
or
out
inc
or
scas
hlt
dec
pop
mov
mul
add
call
pusha
add
xor
hlt
xchg
fiadd
out
push
(bad)
mov
clc
je
or
test
js
adc
mov
jo
mov
js
push
js
test
loop
leave
cs
cmp
stc
dec
or
icebp
repz
call
push
test
gs
(bad)
aaa
bnd
and
mov
lds
xor
test
cwde
sbb
bound
jae
shl
inc
pop
retf
lea
jg
sub
sbb
mov
jne
dec
jno
popf
jmp
sti
pop
pop
sbb
in
call
out
aad
stc
leave
cmp
scas
std
sub
sub
lods
movs
push
dec
loop
or
mov
push
sar
jl
das
add
jecxz
out
mov
lock
sub
out
push
test
jle
dec
mov
sbb
test
sub
push
cwde
mov
pop
cdq
push
fmul
push
sub
test
call
retf
adc
arpl
dec
arpl
inc
lahf
sub
repz
xor
outs
movs
xor
hlt
push
out
imul
inc
dec
and
pusha
sbb
xor
inc
add
mov
nop
mov
in
push
adc
mov
clc
push
inc
cmp
std
js
in
call
retf
das
cmp
add
fistp
int3
push
cmp
ds
adc
sbb
ds
xchg
inc
cmp
push
scas
add
outs
fwait
cmp
popf
gs
div
in
es
leave
push
inc
pusha
dec
pop
dec
or
cmp
ja
push
adc
leave
fstp
inc
push
xchg
mov
xor
(bad)
ss
int
jbe
mov
and
scas
test
in
and
enter
cmps
cld
mov
retf
cmp
jp
in
add
push
fwait
push
jge
ja
mov
cmp
je
adc
cli
paddusb
fs
shl
ret
iret
popf
call
sbb
sbb
mov
stos
jg
dec
mov
into
inc
into
bound
cmp
pop
movs
sbb
int3
call
dec
repz
mov
push
jbe
mov
push
std
adc
and
inc
test
test
pop
dec
mov
sub
loope
pusha
sub
mov
cmp
ins
mov
push
jns
dec
into
xchg
xchg
mov
cdq
out
sbb
aaa
adc
mov
and
bound
out
aas
xor
dec
(bad)
mov
mov
lock
bswap
lea
add
inc
rcl
(bad)
in
xchg
or
sar
dec
sbb
es
sub
cmp
or
push
imul
(bad)
stos
in
push
xchg
jmp
pop
imul
mov
or
and
cmp
in
lods
cdq
push
mov
out
(bad)
mov
sbb
lods
pop
sti
mov
scas
adc
test
test
ja
inc
xchg
mov
(bad)
jnp
ud1
popf
(bad)
hlt
and
ror
jb
and
ds
lea
cdq
cmp
adc
pop
or
pop
sub
jne
bound
shr
cli
push
mov
mov
or
sub
scas
out
movs
out
dec
push
test
pop
aaa
mov
mov
pop
loopne
adc
dec
jo
adc
xor
cmc
stos
jge
and
into
loope
cmps
ror
push
cdq
mov
bound
jl
pop
shr
ret
out
sub
inc
sub
xchg
cmps
cdq
ss
daa
adc
fld
add
outs
xor
retf
push
or
hlt
mov
dec
rol
inc
js
add
mov
pop
xchg
pop
xor
inc
mov
cli
sub
sub
clc
out
inc
pushf
cmc
and
fld1
add
mov
and
jmp
setae
sbb
ja
pop
mov
pop
aad
aas
jge
repz
xor
adc
or
stos
add
(bad)
sub
xchg
jecxz
mov
add
int3
jl
loopne
mov
cmp
mov
push
mov
lock
icebp
imul
mov
pushf
ss
and
ret
retf
pop
xor
mov
push
pop
inc
sti
pop
les
mov
(bad)
push
mov
out
das
xor
movsx
jp
adc
xor
and
adc
rcr
mov
dec
sbb
xor
lock
aam
xchg
ficom
cld
inc
aad
mov
cmps
out
adc
pop
popa
icebp
cmp
jne
das
xlat
jmp
pop
sub
push
(bad)
div
mov
popf
iret
and
mov
aad
call
in
scas
cmps
rcl
xlat
xlat
adc
cmp
loopne
scas
mov
fldcw
push
dec
fcomp
out
cld
cs
enter
mov
xchg
or
sub
jb
push
xor
dec
enter
jl
push
dec
add
call
mov
in
push
xlat
mov
xchg
and
arpl
pop
mov
mov
je
outs
mov
pop
repz
ret
shl
mov
daa
jp
bound
adc
fwait
pop
jnp
add
shl
icebp
mov
mov
ret
sbb
dec
inc
pushf
test
js
jmp
idiv
and
(bad)
adc
adc
call
inc
rol
push
add
adc
mov
data16
jno
imul
call
pop
pop
cwde
loop
loopne
xchg
aam
shl
hlt
xor
(bad)
(bad)
or
inc
mov
xor
stos
in
xchg
jmp
lock
out
jecxz
push
(bad)
int
push
dec
mov
mov
mov
(bad)
xlat
lds
pop
pop
in
cmp
shl
jno
sbb
pushf
(bad)
or
push
(bad)
loope
iret
outs
les
ret
popf
add
mov
hlt
sub
mov
les
xchg
das
fistp
jne
stos
pusha
dec
imul
scas
sbb
and
(bad)
pop
adc
jo
sbb
outs
sub
retf
repz
test
xor
mov
push
(bad)
into
push
jnp
stc
(bad)
push
push
popf
sub
sbb
fst
add
and
jb
mov
xor
xor
arpl
movs
fnstcw
aad
repz
sub
mov
fsub
arpl
popf
mov
div
fild
push
fcom
retf
inc
dec
adc
loope
cmps
repnz
push
sti
cwde
test
fcomip
fstp
push
add
hlt
push
mov
test
dec
push
(bad)
jmp
loope
jle
xchg
pushw
sub
out
mov
scas
into
jnp
stos
popf
int3
mov
sbb
cmp
xchg
int3
movs
dec
stos
call
shr
push
frstor
mov
into
pop
lods
(bad)
ds
loope
mov
popf
outs
ja
movs
es
idiv
dec
loope
pop
jle
addr16
cli
sar
jmp
or
xchg
pop
adc
stos
ja
or
and
add
xor
enter
iret
push
shl
mov
pop
xchg
test
ins
retf
(bad)
nop
pop
sbb
outs
adc
mov
cdq
push
push
xchg
fisttp
pushf
ins
imul
jae
add
and
icebp
fmul
mov
mov
push
pop
retf
cmp
scas
sbb
cs
xor
and
adc
ficom
cmp
in
pop
dec
mov
les
fwait
retf
mov
jp
bound
in
lods
add
test
sbb
lock
pop
cmp
cmc
out
pusha
idiv
ret
adc
clc
and
ss
bound
out
clc
fucom
ret
sub
addr16
inc
movs
mov
ja
into
test
and
in
aaa
dec
mov
(bad)
cmp
fcmovnu
push
loope
daa
loop
push
ret
push
mov
add
dec
imul
movs
sub
pop
dec
pop
aam
(bad)
sar
or
rol
or
and
cmp
jne
sbb
sbb
repz
lds
gs
add
not
icebp
test
loop
inc
pushf
ins
sahf
adc
mov
aam
and
xor
movs
enter
and
sub
(bad)
push
cmp
pusha
hlt
sahf
popf
jl
jbe
outs
cmp
retf
aas
xor
pop
cdq
ss
sti
pop
pushf
cmp
push
mov
lock
mov
ja
xchg
lods
add
push
bound
jb
and
sub
aam
push
dec
(bad)
mov
sbb
xor
movs
stc
push
ins
cld
call
push
mov
mov
mov
sub
pop
retf
add
jnp
mov
push
stc
sub
push
les
gs
bound
scas
sbb
mov
pop
ffreep
(bad)
lock
mov
pop
std
stos
mov
loope
xchg
call
mov
pop
fidiv
jle
daa
mov
sbb
push
inc
adc
xor
pop
nop
sub
inc
pushf
push
jle
adc
jmp
cmp
sbb
rol
repnz
mov
cmps
out
cmp
adc
dec
outs
pop
gs
push
push
xchg
imul
jb
xor
jns
pop
lea
jge
and
call
xor
call
xchg
idiv
mov
sub
int3
rol
out
fsubrp
outs
adc
push
nop
cmova
push
mov
out
inc
fidiv
adc
add
dec
push
imul
test
jns
ss
fs
and
sub
mov
data16
push
cdq
out
xchg
jg
push
add
cmp
sub
(bad)
lods
stos
xchg
daa
or
mov
adc
in
and
mov
jle
rcl
cmp
xchg
je
movs
sbb
push
cmp
ffreep
stc
mov
cmps
shr
sub
retf
aas
adc
adc
sbb
mov
ins
stos
pop
rcr
jmp
clc
or
clc
lea
and
adc
mov
fld
bound
addr16
jne
mov
xlat
inc
sahf
or
pop
int
hlt
mov
mov
jbe
stc
and
and
jl
mov
sub
icebp
outs
call
nop
test
ret
retf
loop
cmp
adc
fist
xchg
call
or
or
mov
cmp
div
(bad)
out
sub
mov
pop
pop
cmp
xchg
pop
adc
mov
mov
jae
outs
jge
mov
or
adc
fisttp
sti
or
xlat
int
lea
sbb
into
out
(bad)
cmps
or
test
xor
xor
xchg
mov
xchg
xchg
pushf
movs
jne
or
xor
adc
(bad)
in
(bad)
mov
cmc
xor
inc
push
popf
push
inc
dec
sahf
adc
addr16
adc
fs
cmc
loope
pop
sbb
inc
mov
loope
and
sub
call
or
cwde
mov
(bad)
lahf
mov
adc
push
daa
(bad)
mov
addr16
call
cmp
mov
call
mov
pop
xor
test
lods
xchg
cmp
xchg
out
dec
jne
ins
js
pusha
(bad)
pushf
xlat
xchg
sbb
sar
mov
fdiv
(bad)
mov
inc
sahf
cwde
inc
cmc
pop
aam
(bad)
popf
shl
aad
dec
xor
mov
inc
and
adc
aas
hlt
in
lea
imul
popf
mov
push
pop
jnp
push
nop
mov
pop
pop
aaa
mov
dec
daa
std
inc
ja
mov
sub
mov
or
inc
sbb
inc
dec
and
push
dec
ret
mov
dec
mov
popf
cdq
fcom
out
leave
adc
sbb
fcmovu
rcr
inc
cdq
jne
sbb
cmps
ror
(bad)
lods
sub
mul
sub
and
test
xor
dec
mov
das
out
jl
stc
dec
inc
pop
fld
push
test
sar
enter
retf
arpl
jno
data16
fcmovnb
mov
push
into
dec
xor
dec
js
pop
test
dec
std
mov
jg
or
mov
(bad)
inc
cmp
stos
cli
xchg
arpl
jo
imul
(bad)
call
aam
clc
test
push
adc
xor
jne
aaa
bound
daa
adc
and
jmp
ret
lds
jle
lea
sbb
mov
cmp
loop
cdq
xchg
mov
or
rcl
fbld
sti
into
shl
jmp
ss
sti
cmp
xchg
int
pop
xchg
test
bound
mov
or
sub
out
mov
clc
lea
xchg
pop
and
and
xor
or
xor
in
pop
inc
fld
inc
ins
movs
and
scas
cmps
push
push
jp
sub
mov
adc
mov
ret
push
into
inc
movs
add
and
jae
cmps
sbb
sub
bound
fsub
hlt
les
jmp
mov
pop
std
push
imul
rcr
fucomp
in
jb
imul
inc
mov
fsubr
sti
cli
das
xor
or
sub
lea
jns
sub
sub
jo
arpl
sub
aas
inc
fistp
jmp
sbb
fwait
out
or
icebp
mov
(bad)
outs
xlat
fwait
stc
or
cmp
push
dec
jp
mov
mov
popa
div
out
jmp
int
xchg
push
jl
sbb
ror
xchg
sub
retf
pop
lea
mov
add
fisttp
gs
or
dec
cmps
push
fidiv
(bad)
cdq
outs
xor
push
stos
aad
clc
fdivrp
ret
jo
sahf
js
inc
sub
add
mov
idiv
in
inc
and
loope
icebp
fmul
mov
and
stos
sbb
(bad)
das
push
sub
mov
xchg
cwde
lea
aad
jns
mov
rcl
mov
xor
call
inc
inc
nop
retf
xchg
movs
mov
mov
inc
dec
(bad)
in
mov
fwait
adc
out
xchg
mov
and
lods
adc
cld
out
arpl
gs
mov
and
out
ja
jmp
ins
xchg
sbb
outs
push
or
dec
sahf
cmp
pop
push
dec
pop
cmc
push
cmp
std
std
sub
dec
stos
xor
push
out
cmps
sub
sbb
sub
retfw
fisttp
movs
aam
mov
jp
xchg
cmps
jns
sub
inc
(bad)
data16
imul
push
inc
mov
adc
ds
dec
sub
cmps
jecxz
or
out
call
lahf
or
cli
adc
push
dec
popa
mov
ja
(bad)
mov
not
mov
stc
in
jge
scas
pushf
jmp
shl
addr16
retf
dec
sahf
(bad)
pop
loopne
jecxz
pop
mov
cmp
jle
mov
pop
rcr
add
sbb
adc
lods
imul
pushf
mov
jno
cmps
mov
cmp
shl
test
sti
push
cmp
or
mov
aaa
sbb
push
mov
dec
sbb
sub
adc
lock
mov
xor
pop
js
icebp
xor
jo
call
add
lock
pop
adc
cmp
xchg
in
test
push
test
mov
cli
mov
ficomp
icebp
out
mov
cmps
xchg
add
out
xchg
xor
sub
jmp
cmp
pop
mov
or
jnp
shr
adc
les
mov
mov
xor
and
loop
mov
addr16
fiadd
jg
iret
fist
sub
sub
and
cmp
fs
jnp
daa
adc
mov
out
sbb
push
fcomi
jae
(bad)
gs
push
imul
jmp
push
inc
cmp
jae
xchg
adc
fld
mov
jle
or
xchg
adc
repz
movs
sub
ror
fwait
js
fisttp
dec
jae
outs
xor
sub
ins
mov
sub
imul
dec
cli
push
or
popa
jno
(bad)
cmp
ror
cmp
jae
jmp
or
add
pop
adc
enter
fucomp
outs
out
push
push
(bad)
adc
pop
popa
(bad)
push
inc
sbb
imul
xor
xor
push
ret
lea
inc
or
das
mov
in
and
pop
sub
ffreep
or
femms
xor
jmp
iret
icebp
icebp
fcmovbe
ficomp
mov
enter
fsubr
in
popa
jmp
sbb
sub
mov
in
cmps
gs
sbb
pusha
lods
sub
jnp
cmc
push
jb
mov
popf
(bad)
fstp
mov
ins
adc
add
mov
or
xchg
jnp
adc
leave
xor
dec
loopne
pop
jmp
xor
adc
xchg
out
rcl
out
aaa
mov
add
jb
movs
pop
sbb
js
push
pop
mov
fwait
ret
scas
fwait
(bad)
mov
add
dec
scas
inc
(bad)
mov
mov
test
dec
inc
push
inc
cmp
mov
pop
adc
mov
cmp
jg
xchg
push
in
xlat
je
jno
gs
cmps
rol
mov
cld
pop
rcr
jmp
pop
pusha
dec
(bad)
std
mov
ds
cmp
pusha
fsub
xor
sahf
adc
fmul
or
pop
adc
xchg
and
out
and
push
cmp
sub
push
jae
in
sub
pop
inc
cli
xchg
inc
(bad)
stc
push
ret
and
imul
jo
outs
(bad)
or
ss
inc
xor
and
loop
sahf
nop
test
in
aaa
adc
mov
in
call
lds
push
and
lods
jmp
mov
push
inc
clc
jae
dec
xchg
sti
cli
jp
pop
adc
call
push
pop
mov
daa
clc
call
sahf
jb
fdiv
mov
cmps
daa
mov
pushf
sbb
jle
fild
mov
je
jmp
cdq
das
add
cmp
inc
outs
add
mov
movs
adc
jnp
cwde
mov
mov
inc
out
iret
(bad)
mov
xchg
cmps
in
cmp
jns
fwait
sahf
pop
out
test
inc
stos
scas
test
push
iret
push
mov
gs
arpl
fild
xor
nop
enter
adc
push
cmp
fiadd
xor
sahf
pop
stc
adc
cmps
sbb
test
sbb
xor
cmps
dec
add
and
cwde
push
and
add
adc
fs
xchg
out
fwait
(bad)
mov
mov
ins
jne
jb
jmp
enter
pop
repz
in
pop
adc
pop
fmul
pop
jecxz
mov
push
test
add
cmp
push
xor
and
inc
sbb
pop
in
pop
cmp
pusha
int3
mov
loopne
and
cs
jns
in
out
pop
xchg
fbld
mov
mov
(bad)
sbb
push
test
dec
int3
cs
lods
mov
or
cli
inc
sbb
lds
js
ins
dec
out
repz
mov
add
add
jbe
enter
jl
in
cmp
movs
dec
cdq
sbb
or
sahf
lahf
movs
call
sbb
aad
ja
test
cmp
adc
jmp
lock
or
jle
in
mov
in
imul
in
rol
push
sub
jp
addr16
lods
mov
lods
jg
sahf
lds
adc
push
sti
lock
inc
loopne
sbb
push
bnd
mov
bound
push
cwde
out
ret
popa
inc
cmp
add
jge
xor
or
repnz
test
int
adc
rcl
or
js
(bad)
retf
xchg
popa
push
pusha
mov
hlt
xor
sbb
jg
loop
sub
mov
les
push
push
popa
adc
cld
pop
mov
xor
dec
in
inc
mov
aaa
mov
mov
cmc
test
push
pop
mov
pop
jg
int3
ds
and
cmps
pop
loopne
xchg
push
add
mov
xor
(bad)
push
outs
inc
push
ins
cdq
fcmovnb
sahf
pop
fmul
ins
aad
jp
nop
push
xchg
and
pop
lds
aad
shl
shl
std
sub
pop
arpl
test
call
inc
scas
mov
mov
jae
cmps
fisttp
hlt
pop
mov
xchg
push
loop
pushf
gs
repnz
push
aam
fcmovnu
jge
dec
gs
into
inc
or
mov
movs
es
push
dec
stc
inc
cmp
lods
pop
loop
xchg
pop
or
push
jae
inc
je
push
xchg
out
jmp
and
icebp
test
cld
fsub
movs
aaa
inc
in
call
jno
into
add
xchg
push
js
mov
cwde
into
xchg
scas
add
sti
mov
xchg
popf
or
jecxz
jmp
in
js
pop
xor
adc
adc
jmp
dec
mov
fld
stos
push
aaa
pop
addr16
xchg
add
or
mov
fistp
pushf
sub
add
mov
lahf
movs
cs
repnz
inc
mov
mov
in
xchg
inc
xchg
fld
outs
and
mov
scas
out
jnp
stos
pop
out
shr
ret
test
fld
and
xor
call
add
(bad)
div
imul
mov
mov
aam
jo
inc
xchg
out
mov
stc
loope
pop
add
or
fidiv
cmp
push
arpl
out
inc
adc
inc
jbe
cli
mov
push
fcom
jp
inc
enter
xchg
mov
mov
outs
rcr
dec
rcr
mov
mov
jae
hlt
mov
std
daa
outs
lock
jb
inc
push
ins
cld
imul
pop
jle
daa
sbb
popf
and
js
icebp
mov
test
push
dec
adc
mov
cmps
dec
pop
repz
cmp
cmp
xchg
js
ret
popf
mov
mov
sub
test
xor
in
mov
xor
outs
xor
retf
inc
(bad)
fs
xlat
call
ret
rcl
cld
adc
nop
bound
and
out
loope
pop
pop
or
aad
sub
enter
push
jnp
outs
mov
add
push
in
mov
shr
ret
icebp
or
push
jb
inc
or
xor
add
popf
(bad)
cdq
cmp
das
xor
outs
or
pop
xchg
cmp
mov
leave
push
popf
add
pop
retf
mov
pop
addr16
data16
adc
das
mov
xchg
mov
xor
fstp
andps
add
adc
cwde
(bad)
push
and
xchg
loop
clc
mov
cmp
fcomp
jo
mov
enter
in
mov
push
aaa
or
jp
test
xchg
jmp
dec
fwait
loope
dec
xchg
xlat
dec
mov
scas
fwait
out
adc
cli
mov
in
imul
cmps
ror
jmp
add
out
pop
mov
xor
sub
loop
sub
test
sar
adc
jle
dec
retf
pushf
into
jo
xor
mov
and
jo
fcom
lock
add
(bad)
jmp
in
push
xchg
pop
jecxz
mov
(bad)
sub
movs
or
into
mov
dec
sub
dec
xor
jns
outs
or
in
(bad)
cmp
sub
rcr
xchg
call
and
sbb
xor
jne
inc
mov
or
cmp
push
jb
pop
data16
mov
pop
dec
adc
lock
cmp
repnz
lahf
loope
(bad)
push
and
adc
scas
rol
cs
mov
and
jecxz
cmc
push
aad
cmp
cwde
jns
mov
mov
addr16
or
mov
pusha
push
jo
test
inc
in
ss
push
addr16
sti
cmp
fcomp
xor
inc
(bad)
setg
mov
push
push
inc
xchg
inc
aad
adc
or
gs
adc
fucomp
mov
cmp
jle
cmp
(bad)
repz
and
mov
(bad)
aas
ss
jp
xchg
ins
xchg
sbb
in
jns
pop
pop
es
hlt
dec
add
psubsw
pop
or
aas
daa
and
add
shl
fcmovnb
mov
aas
sub
xchg
dec
fistp
sub
test
adc
jnp
in
loopne
shr
fldcw
push
inc
(bad)
jle
inc
cmp
rep
lock
mov
adc
inc
pop
inc
inc
mov
sub
test
push
push
stos
fdiv
xchg
repnz
xor
movs
xchg
cmp
pop
stc
mov
clc
fst
inc
int3
fidivr
adc
call
pop
out
addr16
or
call
es
cmp
sbb
mov
cmp
mov
adc
dec
scas
loopne
ds
mov
mov
pop
lods
fsub
jnp
mov
and
adc
dec
adc
xor
sub
call
push
sub
out
add
pop
(bad)
movs
ins
sbb
fsub
fwait
ror
mov
das
out
inc
sub
sub
and
bound
aaa
cmp
mov
mov
out
cmp
sbb
je
fistp
push
out
and
push
push
pop
test
leave
or
test
mov
add
fwait
xchg
pop
mov
mov
xchg
iret
ss
and
cmp
dec
fidiv
jmp
pushf
aad
jae
test
adc
mov
(bad)
xchg
add
pop
push
std
cs
sub
test
pop
sti
or
jo
add
pop
push
mov
xchg
mov
not
ins
cld
dec
cdq
lods
xor
scas
aaa
das
or
in
in
add
mov
jp
fst
xor
mov
push
cld
push
fimul
test
cmps
iret
test
jg
fisub
inc
stc
adc
or
movs
cmps
jb
test
pop
and
sbb
xchg
cwde
xchg
inc
imul
int3
fisubr
mov
jg
stc
lods
cmp
dec
jmp
shl
inc
adc
mov
les
dec
(bad)
cmp
add
aam
adc
cld
jl
js
inc
jbe
mov
aad
and
push
cli
cwde
idiv
pop
xor
inc
and
dec
dec
xchg
cli
xchg
inc
not
mov
in
fs
jmp
test
xor
pandn
scas
sub
jmp
add
and
fldcw
mov
call
mov
pop
cld
sbb
mov
nop
les
mov
repnz
je
add
gs
(bad)
sub
xchg
enter
lock
jge
xor
(bad)
jl
popa
mov
push
fsub
or
pop
test
jecxz
adc
stc
dec
sbb
aam
retf
jmp
(bad)
push
sbb
test
lea
mov
into
arpl
mov
outs
loop
aas
addr16
imul
stos
xor
push
dec
mov
frstor
cmp
enter
mov
push
fld
inc
jne
or
icebp
lock
xor
sbb
test
loop
adc
scas
inc
adc
in
add
test
out
or
pmullw
out
xchg
clc
adc
cmps
es
push
jl
dec
in
inc
cmp
pop
cmp
movs
repz
pusha
push
std
sti
and
stos
inc
cmp
cwde
jae
retf
jbe
outs
adc
xchg
xor
icebp
aam
push
and
pop
loopne
inc
sub
xchg
retf
fnstsw
pop
cmp
adc
adc
ret
icebp
xchg
int3
in
mov
out
mov
sbb
fmul
sbb
ret
push
push
js
lahf
popf
shr
out
sub
(bad)
aas
stos
fyl2xp1
rol
sub
aas
cwde
sub
call
ret
and
clc
int
popa
mov
hlt
test
jne
lods
push
inc
je
and
cmp
sahf
push
aam
sbb
jp
push
loope
repz
pop
ret
or
sub
mov
jo
dec
stos
inc
adc
test
repnz
sbb
push
dec
and
call
lods
jle
mov
call
fistp
hlt
inc
mov
xor
adc
jge
adc
push
push
inc
sbb
imul
pop
push
cli
xlat
movs
pusha
ds
fild
movs
arpl
loope
adc
int3
aam
les
movs
into
stos
loop
pop
scas
loope
pop
mov
xchg
popf
xor
pop
dec
ror
jb
int3
mov
push
mov
aaa
enter
and
pop
sub
aaa
jmp
addr16
dec
aam
inc
rcl
xchg
out
add
push
add
shl
sub
xor
(bad)
cmp
fnsave
xchg
pop
push
pop
cmp
dec
and
mov
hlt
rcr
sahf
dec
mov
dec
xchg
scas
cmps
add
jno
mov
lds
mov
inc
mov
inc
inc
sbb
inc
xor
pop
push
or
popf
add
test
jno
xchg
dec
rcl
mov
icebp
enter
pushf
fadd
sbb
jno
daa
mov
adc
xor
xor
cmps
inc
xchg
jbe
popa
jne
and
hlt
dec
loopne
mov
(bad)
cdq
inc
gs
mov
daa
in
adc
aas
and
adc
out
fwait
and
arpl
mov
dec
sbb
inc
inc
adc
mov
scas
fucomp
in
gs
inc
je
jae
into
jg
stos
push
pop
test
in
or
push
mov
xor
jp
sub
jae
and
arpl
push
repz
and
inc
pop
or
sar
in
xchg
and
xor
into
jmp
or
adc
mov
dec
(bad)
sbb
inc
imul
jmp
dec
ret
or
and
(bad)
leave
les
int
mov
iret
bound
sub
xchg
add
out
(bad)
jbe
out
es
fldcw
add
pusha
and
lods
and
mov
shl
cmps
sbb
stos
ja
test
sub
imul
loop
sub
daa
ins
out
(bad)
shl
inc
sbb
repz
(bad)
lahf
lods
scas
xor
and
add
aas
push
das
gs
adc
fmul
aad
jp
mov
loop
outs
out
cmp
ret
aaa
cld
sub
xchg
pop
addr16
or
scas
(bad)
ja
sbb
push
jge
pop
frstor
ret
inc
cmp
scas
in
xchg
jp
xchg
clc
or
cmp
repz
inc
mov
inc
ret
out
jmp
or
lock
test
jge
dec
dec
jnp
sub
mov
push
cmp
scas
push
nop
mov
call
sub
or
out
das
and
neg
xor
mov
iret
lds
stos
inc
mov
loope
stos
jo
arpl
xor
(bad)
stc
sbb
adc
adc
test
sbb
addr16
adc
add
fimul
jns
lods
pop
mov
cmps
arpl
inc
sbb
enter
nop
inc
sbb
mov
loop
(bad)
adc
sbb
pop
lods
scas
add
jns
mov
clc
(bad)
iret
pop
and
dec
popf
retf
stc
fs
jle
adc
fwait
rcl
shl
push
std
add
jbe
mov
mov
repz
xchg
or
mov
cmp
fdivp
std
pop
pop
retf
data16
int3
push
iret
pop
fbstp
lahf
(bad)
xchg
push
jg
xor
cmps
aaa
inc
ror
and
push
repnz
and
cli
cmc
push
mov
lods
cmp
stos
(bad)
(bad)
and
popa
or
scas
popa
repz
jmp
aaa
adc
sbb
es
xchg
repz
jp
sub
inc
jecxz
out
jle
pop
das
jnp
sbb
adc
xchg
imul
cmp
mov
outs
or
mov
jnp
add
mov
fdivp
clc
stos
sbb
loopne
cmp
mov
xor
pop
jns
dec
mov
pop
outs
aam
retf
lock
mov
sbb
or
(bad)
or
inc
(bad)
int
sub
hlt
mov
xchg
int
adc
test
xor
(bad)
fld
push
or
sti
mov
retf
inc
jo
popf
icebp
push
and
sti
pop
les
dec
popf
mov
add
xchg
dec
mov
bound
cmp
inc
mov
pop
in
fwait
outs
adc
hlt
arpl
pop
repz
and
mov
fbstp
mov
pusha
jl
daa
lahf
mov
outs
sti
les
mov
lods
jae
loope
mov
or
fisubr
lea
repz
or
and
pop
sbb
jnp
mov
adc
neg
sahf
inc
inc
movs
jae
(bad)
jg
inc
dec
xlat
cmps
xlat
mov
mov
dec
adc
mov
leave
data16
pop
ss
(bad)
mov
sbb
ins
sub
ss
jmp
cmp
popa
and
rcr
xchg
cmp
inc
mov
xor
jp
rol
retf
mul
ret
les
sbb
sub
fidivr
gs
pop
xor
mov
sub
gs
xor
mov
add
(bad)
loop
pop
jle
nop
cmp
mov
mov
push
popf
cmc
dec
stos
sub
mov
adc
std
fs
jae
mov
daa
mov
lea
sbb
mov
sbb
dec
dec
mov
push
dec
jg
shl
sub
nop
sbb
mov
test
pushf
ficom
mov
or
cmp
jbe
sub
in
mov
and
jmp
ds
jmp
sub
mov
sub
ret
arpl
not
sbb
inc
cmps
enter
add
adc
xor
outs
xchg
(bad)
pop
and
into
sub
in
shr
daa
pushf
pop
(bad)
add
out
loop
into
fstp
out
push
adc
ins
retf
hlt
in
mov
mov
pop
and
stos
lods
sahf
xor
outs
js
mov
inc
loope
fcmovu
sub
(bad)
fisub
mov
lahf
sub
mov
push
mov
mov
ds
xchg
icebp
mov
push
(bad)
or
es
in
cmp
mov
ds
mov
mov
lds
xchg
call
xchg
sub
call
mov
mov
pop
inc
mov
sub
mov
sahf
fimul
mov
mov
test
pushf
sahf
jne
xchg
test
fldenv
shr
xor
mul
cld
jbe
pop
(bad)
(bad)
push
es
out
test
test
mov
popa
xchg
mov
pusha
mov
sar
mov
mov
out
cmp
lods
daa
cmp
inc
fst
xchg
mov
cli
fdivr
lahf
add
sahf
push
inc
dec
push
sahf
imul
addr16
adc
addr16
imul
int
mov
jno
sub
in
sub
je
imul
dec
mov
imul
std
repnz
retf
ret
sub
add
call
and
gs
aad
shr
dec
test
(bad)
adc
fmul
sbb
aaa
leave
pop
rcl
inc
aad
sbb
or
inc
adc
leave
aad
pop
fld
ins
or
lea
arpl
push
jge
mov
pop
je
popa
das
das
inc
mov
sub
fstp
scas
add
push
aad
dec
dec
ror
je
je
xchg
in
mov
xchg
ins
ficomp
lahf
test
loop
jge
jmp
or
cmps
sub
bound
mov
cmc
mov
add
and
cs
jmp
in
cmp
retf
sub
jmp
in
and
xor
and
pop
sub
push
cld
adc
mov
ret
cmp
jo
inc
aas
pop
loop
rcl
je
fs
mov
int3
(bad)
retf
or
mul
sbb
mov
data16
in
fisubr
mov
(bad)
aam
pop
movs
inc
int3
imul
jg
mov
cld
inc
xchg
cmps
test
pop
pop
xor
inc
push
dec
mov
rol
jb
and
cmp
push
push
ret
int3
int3
dec
ret
bnd
push
rcl
cmp
loope
inc
dec
cmp
out
jae
fisttp
push
ins
or
dec
clc
or
loop
cmp
cs
retf
xor
sub
dec
mov
outs
hlt
popa
jae
add
and
adc
mov
pusha
jnp
cs
jl
iret
ret
mov
jae
imul
push
push
es
call
mov
(bad)
lods
mov
or
repnz
push
and
lock
sbb
aad
fs
adc
xchg
ror
pop
popf
cmp
jo
cmps
repnz
adc
sub
icebp
xchg
lods
lahf
push
mov
xlat
ja
push
aaa
mov
ror
xchg
jnp
dec
dec
and
xor
sbb
pop
in
retf
jmp
mov
sbb
inc
push
jmp
add
nop
cmps
inc
es
movs
popa
mov
pop
mov
cmp
push
fnsave
xor
loopne
push
add
mov
mov
mov
(bad)
pop
shl
and
mov
push
ret
in
and
js
jns
mov
jne
loope
mov
dec
cmps
push
dec
xor
sub
daa
shl
fst
push
loop
(bad)
sub
adc
mov
adc
pop
inc
popf
adc
jle
(bad)
fisubr
das
stos
hlt
mov
jne
ret
data16
xchg
jecxz
loope
sbb
ret
add
adc
jp
idiv
mov
xchg
mov
pop
out
mov
and
and
lahf
and
int
add
int
dec
push
inc
mov
adc
mov
stc
add
loopne
pop
in
arpl
pop
daa
ret
into
hlt
ror
stos
fwait
mov
add
jnp
lea
mov
(bad)
mov
dec
imul
and
mov
loop
lods
cmp
popa
outs
add
leave
movs
or
xchg
retf
dec
push
sahf
or
outs
nop
push
jb
data16
out
rcr
push
add
cmp
mov
jle
push
push
adc
dec
sbb
adc
cs
fld
lds
sbb
add
mov
in
push
and
xchg
jge
(bad)
ror
pushf
ret
aad
xchg
repz
movs
neg
adc
mov
and
mov
call
cmps
jmp
xchg
repz
jg
push
pushf
cmps
xchg
dec
leave
mov
imul
jns
xor
mov
mov
fsubr
pop
xor
push
cmc
mov
cmp
and
or
arpl
mov
or
cdq
imul
ja
mov
mov
mov
rcr
sahf
cdq
mov
dec
jnp
inc
mul
mov
lods
mov
out
sub
cmp
sbb
aad
fnstsw
fisub
inc
mov
pushf
or
mov
mov
dec
xchg
jl
push
sbb
mov
(bad)
inc
lahf
in
push
(bad)
jnp
jle
sub
das
test
mov
fisttp
mov
icebp
jl
enter
aam
gs
xchg
int
lods
push
fisttp
jmp
jno
bound
mov
pop
sub
dec
dec
pop
test
(bad)
pop
inc
jle
mov
cmps
pop
mul
or
loopne
(bad)
fbld
xor
push
xor
pusha
and
out
and
sbb
cdq
push
stos
push
sar
xor
or
(bad)
xchg
retf
xor
(bad)
adc
xchg
fs
scas
and
(bad)
data16
push
mov
adc
fs
fisttp
cdq
test
sub
cmp
lds
jmp
mov
jnp
fiadd
mov
bound
jmp
(bad)
mov
fistp
and
(bad)
xchg
icebp
scas
in
ror
lahf
cli
push
xchg
or
iret
in
dec
outs
inc
dec
xchg
cmp
daa
mov
out
pushf
sbb
add
jg
hlt
push
lahf
std
test
cmp
pop
xchg
lock
xchg
and
adc
push
fld
mov
mul
sbb
sbb
add
push
mov
xchg
cmp
xchg
xchg
inc
repnz
or
jns
or
jns
push
in
cmp
sub
inc
mov
movs
sbb
ror
(bad)
jl
shl
mov
clc
fld
xor
js
pop
xchg
call
xchg
cmp
sahf
out
shr
mov
pusha
push
loope
push
and
jl
call
cmp
lahf
add
cwde
rcr
punpcklwd
popf
push
ret
cs
(bad)
loop
repnz
pop
call
xchg
ja
push
and
jae
and
enter
das
xchg
pop
add
inc
ret
jmp
lods
xor
pop
cmp
dec
aam
sub
push
cmp
sub
dec
rcl
mov
js
sbb
sbb
nop
loop
sbb
fadd
std
cdq
inc
scas
pop
call
sti
adc
cmp
inc
mov
push
fsubr
push
repnz
ret
rol
sbb
add
outs
xor
add
pusha
gs
adc
ins
clc
sub
test
xchg
out
cmp
xor
in
push
clc
jl
add
in
jmp
fdiv
jecxz
pop
rcr
pop
pop
in
xchg
mov
mov
int3
lods
test
std
mov
in
or
cmc
dec
daa
xchg
mov
and
add
ins
inc
mov
xchg
clc
mov
xchg
gs
adc
movs
or
test
in
mov
(bad)
and
mov
(bad)
sbb
test
test
fwait
cld
adc
xchg
sahf
dec
stos
(bad)
push
jmp
movs
dec
ins
repz
sbb
pop
cmp
mov
mov
out
inc
add
repnz
stos
dec
scas
pop
icebp
adc
call
adc
xchg
sub
xchg
dec
ins
add
xchg
add
mov
cmc
push
sar
dec
push
sbb
mov
in
jp
sbb
push
movzx
push
retf
jnp
(bad)
cmp
push
or
mov
mov
add
fwait
cs
movs
mov
aad
mov
rcr
jae
ret
push
mov
mov
adc
popa
mov
pusha
pop
sbb
cmp
inc
test
push
rcl
mov
inc
inc
cmp
xchg
lahf
repz
test
jl
add
dec
idiv
sub
dec
or
push
xchg
in
(bad)
jmp
cs
mov
stc
cmc
(bad)
mov
daa
push
cdq
sbb
loop
pusha
or
hlt
popf
jne
add
add
xchg
cwde
les
mov
jge
push
lods
mov
sbb
jecxz
dec
test
or
inc
ins
icebp
repz
and
push
in
jbe
cmp
push
pop
dec
pop
jb
pop
sbb
cmp
into
or
add
test
xchg
cli
jae
pushf
retf
aaa
dec
cmp
cmp
in
mov
inc
jg
xor
sti
call
adc
push
cmp
cli
inc
daa
cmp
shl
popf
fstp
in
inc
mov
loope
je
mov
mov
push
and
push
(bad)
mov
mov
stos
push
push
mov
leave
mov
inc
aam
sub
cmp
cld
rcr
retf
or
cdq
frstor
sbb
or
fucomi
sahf
out
enter
ins
mov
inc
icebp
dec
mov
imul
frstor
or
retf
test
and
je
sar
push
and
adc
add
add
dec
sti
sbb
ret
mov
lds
daa
adc
xchg
sbb
fld
jne
leave
sbb
sub
(bad)
pop
ja
jl
push
jnp
js
mov
and
xor
fwait
call
pusha
dec
dec
adc
jecxz
or
sub
inc
iret
adc
mov
rcl
cmp
lods
add
cdq
lods
mov
je
popa
mov
popa
dec
mov
loope
jb
xor
scas
cld
xor
test
dec
popa
adc
mov
mov
outs
sbb
or
fisttp
mov
mov
ret
pop
and
sti
popf
push
sub
addr16
mov
and
or
mov
add
sub
mov
adc
add
cld
clc
sub
ins
daa
dec
imul
mov
test
dec
in
ret
push
cmp
sub
xchg
dec
adc
mov
sub
jno
pop
fadd
mov
push
push
les
movs
dec
(bad)
pop
lock
stos
lods
xchg
add
cld
(bad)
push
cmps
sbb
cld
cmps
in
xor
int3
adc
xchg
jno
in
mov
loop
inc
mov
(bad)
sub
ja
pushf
inc
out
push
test
xor
mov
adc
pop
cmp
ret
xchg
sbb
push
pop
mov
(bad)
stos
sbb
in
movs
xchg
loop
test
mov
fisub
cmp
je
xchg
mov
(bad)
push
repz
sbb
jnp
sbb
mov
cmp
or
cmp
and
adc
inc
jge
imul
sub
ret
icebp
xchg
sbb
(bad)
(bad)
jmp
push
mov
lahf
jl
out
mov
xchg
iret
jns
push
sbb
ret
jl
dec
adc
(bad)
sbb
addr16
out
lods
aaa
mov
dec
outs
stc
aam
jge
aam
add
mov
in
repnz
xchg
stos
shl
scas
sub
int
sbb
mov
mov
movs
inc
push
cld
mov
sub
mov
pop
leave
mov
ins
test
pop
imul
aaa
out
xchg
or
aad
xor
cmp
push
lea
mov
add
das
fsubr
ds
sub
inc
add
mov
std
mov
or
mov
push
or
jbe
push
mov
loopne
inc
scas
sub
shl
jge
daa
push
unpcklps
inc
sbb
call
xchg
jb
ins
xor
push
fisttp
pushf
push
(bad)
in
jnp
sbb
xchg
and
ret
jmp
ja
icebp
out
stc
fcomip
xchg
pushf
xchg
ret
adc
shl
lea
xlat
loop
fbld
mov
int
xchg
into
scas
xlat
or
add
add
fadd
adc
push
jnp
call
pop
mov
sub
loope
inc
(bad)
pop
rcl
test
and
jp
xlat
pop
or
outs
lock
add
arpl
ja
xlat
shl
cli
xor
hlt
(bad)
push
xchg
enter
dec
retf
les
add
push
push
cmps
xor
adc
xchg
push
lahf
outs
sbb
es
lods
adc
xor
mov
dec
repz
cmp
jns
mov
cmp
mov
leave
xchg
sub
xchg
push
fcom
fwait
pusha
data16
jg
cmps
int
dec
pop
mov
js
in
(bad)
and
mov
into
lods
stc
imul
pop
xchg
jb
jmp
pop
dec
fbstp
out
xor
js
add
inc
mov
mov
mov
or
dec
mov
xlat
adc
stc
cmp
jp
jmp
imul
cdq
adc
cwde
xchg
inc
pusha
mov
and
ret
mov
icebp
add
pop
adc
in
sub
ins
sbb
sub
ret
pop
jmp
and
je
pop
sub
mov
(bad)
in
mov
sub
jae
fsubr
adc
mov
scas
nop
push
push
out
jecxz
and
xchg
jg
shr
jne
imul
fisttp
cmp
inc
das
mov
pop
xor
inc
ss
xor
inc
and
lods
mov
add
movs
retf
inc
ret
fwait
popf
repz
shr
imul
test
jmp
mov
sub
add
cmp
push
jmp
(bad)
hlt
add
ja
in
loop
popa
jno
mov
(bad)
jne
call
push
pop
(bad)
icebp
fnstcw
sub
inc
addr16
aas
stos
sub
or
push
xchg
mov
inc
popa
pop
and
test
dec
jge
xor
fnstcw
pop
sbb
in
mov
xor
push
or
cli
and
scas
movs
popf
lds
sbb
mov
stos
into
sahf
lock
outs
push
pop
cdq
repz
fisubr
nop
xor
jle
mov
jp
in
inc
shr
adc
cmp
push
stos
pop
inc
and
xchg
push
(bad)
in
loop
add
out
aam
jo
inc
es
mov
inc
mov
cwde
int3
sbb
and
repnz
icebp
scas
call
push
jbe
mov
inc
or
dec
cmps
inc
sbb
out
int
pusha
rol
jbe
call
icebp
mov
mov
mov
cli
push
gs
call
xchg
ret
int3
imul
aas
and
enter
rcl
xor
mov
xor
dec
call
icebp
cmp
push
mov
dec
(bad)
into
bnd
cmp
cmp
ins
cmp
pusha
mov
and
adc
(bad)
xchg
push
aam
ins
cs
jns
jnp
mov
cmp
or
inc
out
lahf
jg
in
mov
or
fidiv
ss
(bad)
lds
int
fistp
sub
repz
push
enter
or
inc
jns
cmovnp
push
rol
inc
stc
aam
ret
fsub
imul
sub
(bad)
mov
pop
mov
js
sahf
popf
fwait
daa
mov
popf
xchg
pop
sub
jae
sub
dec
outs
mov
movs
ja
xor
pop
in
inc
lds
push
ss
es
sub
aam
std
cs
xchg
(bad)
add
outs
pop
mul
xchg
es
lea
(bad)
(bad)
dec
jnp
rcr
add
xchg
int
pop
xchg
push
adc
out
mov
adc
push
push
push
mov
outs
jnp
inc
jne
push
hlt
cmp
fs
in
sub
std
mov
out
iret
add
push
and
pop
and
add
push
bound
nop
or
sar
hlt
into
xchg
mov
dec
bound
push
jmp
xchg
lods
sub
jge
retf
and
sbb
pusha
and
xor
push
movs
popa
fmul
scas
mov
mov
add
ret
pop
repz
movs
mov
adc
adc
icebp
pop
push
in
ret
les
sub
mov
mov
(bad)
retf
sbb
push
xor
dec
jle
xchg
xor
adc
clc
ins
lahf
and
jl
and
fsub
ss
xchg
in
mov
sub
gs
aam
dec
add
scas
into
xor
stos
mov
add
std
aaa
jnp
outs
sbb
pop
imul
shl
call
inc
xchg
mov
adc
mov
jns
dec
mov
icebp
nop
pop
mov
mov
in
mov
jmp
jnp
mov
(bad)
pop
jbe
cdq
sub
mov
addr16
jge
call
and
add
sub
adc
xor
sbb
push
(bad)
jmp
jge
push
add
punpcklwd
sti
mov
push
jae
out
adc
mov
xor
sti
ins
sbb
daa
sbb
iret
and
jmp
push
xor
loopne
push
test
mov
or
pushf
cmp
xor
mov
pusha
mov
add
scas
fmul
cmp
lock
clc
js
xchg
dec
inc
pop
pushf
cmp
inc
mov
jmp
popa
addr16
and
dec
in
cdq
popa
icebp
jge
fs
adc
inc
jge
lods
xchg
stos
imul
or
test
js
ja
hlt
scas
pop
arpl
data16
(bad)
jno
gs
lods
push
push
pop
cmc
dec
bswap
sub
jns
popf
jnp
(bad)
test
iret
shr
lds
imul
into
sbb
call
shl
fcom
sar
hlt
mov
sub
test
(bad)
cmc
and
or
mov
icebp
repnz
in
mov
nop
aas
pop
bound
cmp
rol
mov
(bad)
out
push
ficom
aam
pop
mov
div
push
pop
ss
xor
mov
jae
sub
into
sub
rol
xor
pop
or
sar
mov
mov
xchg
jle
xor
jecxz
stos
std
mov
fwait
inc
fild
mov
sub
in
push
pop
xchg
inc
xor
ins
add
push
repz
aaa
mov
mov
jle
test
cdq
aaa
out
sub
loop
repz
repz
or
add
fyl2xp1
retf
inc
sbb
dec
aad
or
mov
sub
mov
out
dec
mov
loop
pop
daa
mov
dec
jo
push
xchg
int
je
pushf
icebp
cmp
mov
(bad)
imul
xchg
push
or
out
aaa
aam
cmc
shl
fisttp
pop
xchg
mov
adc
(bad)
sub
inc
out
out
xchg
imul
or
cmp
jae
mov
add
test
add
je
cmp
sub
cmp
or
adc
inc
jcxz
imul
scas
mov
scas
add
pop
xchg
lds
les
push
out
fs
fisub
sub
push
(bad)
inc
enter
jb
(bad)
(bad)
ins
repz
pop
and
sub
inc
mov
stc
leave
mov
aas
and
dec
jp
test
jmp
push
cmps
push
lods
out
jne
or
leave
ins
jnp
pop
out
aas
adc
push
into
shr
les
jge
add
ja
xchg
mov
fcomp
rol
int3
int3
popa
xor
(bad)
(bad)
daa
inc
ret
es
fisubr
popf
movs
jo
dec
xchg
fwait
ds
ins
mov
ds
adc
stos
je
movs
and
xlat
adc
fwait
cmp
(bad)
fdiv
add
pusha
sub
ins
lahf
push
movs
xor
mov
jae
or
aas
cs
mov
push
mov
jmp
mov
outs
sbb
dec
(bad)
repnz
lea
stos
and
jo
xchg
cmps
ins
lods
aas
fidivr
mov
cmps
pusha
mov
add
lods
fxch
std
dec
push
iret
inc
call
mov
push
xor
adc
das
xchg
bnd
inc
mov
fs
ret
xchg
pusha
xor
push
dec
fisttp
pop
dec
or
cmp
sbb
arpl
dec
push
popa
dec
sbb
outs
mov
jns
mov
mov
sub
sbb
jle
mov
rol
dec
lea
pushf
pop
inc
inc
adc
xchg
inc
jnp
jg
cmp
cmc
outs
inc
sub
fwait
xchg
loop
xchg
inc
arpl
xchg
dec
hlt
mov
mov
in
fwait
jg
mov
sbb
(bad)
(bad)
retf
fsubr
cmp
xchg
je
cmps
or
imul
mov
test
mov
sbb
jmp
inc
retf
call
in
mov
loopne
sti
dec
cmp
or
jnp
mov
sbb
cld
jb
sbb
push
fbstp
mov
test
jecxz
or
xchg
mov
sbb
cli
inc
cmp
popf
xchg
ins
jae
cmp
sub
outs
fwait
lea
pop
jmp
cdq
inc
int3
mov
and
and
push
fs
sbb
adc
cmp
pop
cmp
popf
add
in
iret
and
inc
add
outs
jmp
imul
sbb
or
and
sbb
jp
pop
jl
daa
sbb
sbb
mov
pop
mov
inc
push
clc
xchg
test
pop
jmp
clc
jae
xor
jb
js
mov
stos
push
push
inc
jecxz
stos
gs
add
aam
fcomp
or
jo
xor
mov
in
and
pushf
js
(bad)
imul
jecxz
mov
cmp
and
mov
(bad)
repz
xchg
cmp
jae
add
pop
fsubr
inc
mul
nop
addr16
(bad)
icebp
fild
scas
nop
hlt
and
popa
movs
popa
mov
lods
sbb
inc
mov
mov
test
mov
idiv
and
test
pop
pop
cmp
jl
xchg
xchg
push
mov
sub
dec
dec
jns
mov
dec
xchg
push
rcl
into
sbb
jno
imul
add
lock
inc
push
stos
mov
adc
mov
add
adc
and
xchg
and
popa
(bad)
(bad)
mov
(bad)
cmp
inc
push
mov
jmp
and
dec
call
xchg
lea
mov
aam
sub
pop
xchg
movs
sar
fmul
push
je
mov
jbe
fsub
sti
add
sub
fst
imul
shr
add
and
hlt
and
stc
mov
shl
jecxz
or
dec
not
dec
mul
adc
out
iret
inc
in
das
and
xchg
xor
sbb
pop
cmp
xchg
je
jmp
popa
pop
into
dec
fadd
cmp
mov
xchg
fcom
ret
pop
ins
das
xchg
lds
lods
add
push
or
stc
cmp
mov
dec
inc
cmp
sub
push
je
fsubr
adc
xchg
push
ins
add
push
loopne
pushf
sbb
popa
xchg
(bad)
sub
push
inc
xchg
ds
sub
popa
gs
mov
dec
cvtpi2ps
dec
(bad)
sti
xlat
and
psadbw
loope
push
mov
ror
nop
push
jle
cmp
iret
xchg
ss
sub
into
jb
int3
fdivr
and
daa
sbb
push
test
mov
pop
ror
mov
int3
cli
dec
repz
pop
pushfw
shl
std
fxch
push
xchg
mov
fidiv
(bad)
pusha
pop
xlat
adc
mov
mov
mov
stc
inc
dec
dec
ret
movs
test
jo
jecxz
mov
push
repz
lods
push
sbb
add
cmc
adc
inc
or
pop
add
cwde
sbb
xchg
pop
lea
xchg
xchg
dec
lods
jae
icebp
cld
test
pushf
mov
dec
pop
sbb
in
push
inc
sbb
dec
xchg
fmul
cld
and
xchg
adc
mov
push
and
mov
pop
sti
sbb
lds
cmp
outs
jns
cs
inc
repnz
xor
push
cld
xor
movs
mov
aam
jge
js
arpl
xchg
(bad)
in
inc
and
add
ins
pop
add
popa
iret
xor
outs
and
xchg
jne
out
push
ds
je
repz
icebp
test
dec
xor
adc
sub
xchg
into
(bad)
out
dec
jle
lea
stos
loope
xor
test
cmp
aam
int3
arpl
sbb
jl
cmps
or
lock
pop
cmp
add
and
test
and
pop
add
xor
jp
mov
sub
dec
jns
adc
or
jge
jbe
repnz
inc
fadd
fisttp
enter
imul
jmp
sbb
dec
bound
dec
cmp
lahf
test
inc
xchg
out
add
jb
sbb
push
or
ror
jbe
mov
mov
push
adc
cmps
inc
jg
xor
cmp
xor
cdq
push
cs
outs
fiadd
ret
sub
out
movs
push
leave
jmp
rcl
imul
sbb
or
push
loope
(bad)
cld
js
shl
ds
es
in
dec
ins
rol
das
or
mov
out
adc
add
mov
mov
cmps
mov
sqrtps
pop
imul
inc
std
fist
div
ds
in
ret
mov
or
push
std
push
mov
movs
sahf
stc
jne
rcr
jg
aaa
adc
nop
jo
lock
call
outs
pusha
fs
mov
xchg
popa
(bad)
pop
retf
in
jmp
stos
pmuludq
dec
cdq
retf
sahf
adc
enter
mov
lods
bound
dec
sahf
js
xchg
adc
inc
ss
cli
mov
dec
add
popf
lods
mov
das
enter
mov
nop
and
sub
and
movs
push
xor
lods
daa
sub
leave
stc
movs
mov
pop
hlt
shr
push
loopne
lea
in
stc
aas
fisubr
test
lahf
push
fs
outs
ret
add
mov
add
push
ror
inc
mov
gs
cmp
and
ret
cmp
shl
test
adc
(bad)
mov
out
rcr
or
fdivr
inc
test
mov
nop
xor
jl
dec
or
xchg
inc
jne
inc
dec
nop
mov
in
mov
int
mov
cmps
mov
ret
das
pop
imul
push
fwait
stc
idiv
sbb
and
inc
gs
int
jnp
xor
call
stos
mov
in
push
fwait
outs
ja
int3
push
das
fcmovne
and
fwait
sub
mov
inc
int
stc
inc
dec
pop
xchg
jge
pop
mul
not
xor
mov
dec
push
mov
jae
dec
mov
repnz
jge
loop
ret
das
jns
jbe
mov
xchg
dec
sbb
les
jae
and
sub
jbe
jne
xchg
inc
cld
push
adc
out
push
jo
jbe
cdq
dec
popf
nop
das
fwait
xor
fwait
rol
popf
mov
mov
jnp
xor
add
pop
sbb
jbe
inc
or
repnz
sbb
xor
movs
mov
push
(bad)
addr16
pop
cmp
mov
sub
movs
pop
and
ret
sub
inc
jb
outs
inc
mov
aam
lods
cmp
nop
clc
scas
dec
mov
xor
sbb
sbb
sbb
or
in
dec
(bad)
fnstsw
stc
mov
scas
mov
mov
add
sbb
or
xchg
sub
adc
add
(bad)
cmp
call
mov
fild
into
and
int3
jns
sbb
add
jae
js
jbe
test
enter
pop
std
cmp
pop
add
and
or
and
mov
and
(bad)
js
pop
sub
popf
dec
jecxz
fstp
mov
inc
add
mov
stc
data16
push
je
add
add
xchg
ret
pushf
hlt
imul
out
call
inc
xor
mov
repnz
out
sbb
imul
fsubr
cld
neg
mov
jb
and
xor
or
stc
in
ficomp
in
jge
sub
outs
sbb
sub
addr16
psubw
jno
mov
loopne
xchg
repnz
retf
adc
enter
dec
test
pop
push
xor
or
fnstsw
ja
jb
sar
cmp
gs
ret
and
xchg
cmps
scas
sti
jne
loope
jbe
or
ins
nop
mov
adc
xchg
mov
or
mov
ds
pushf
add
mov
add
add
sti
mov
in
pusha
mov
cmp
addr16
scas
retf
and
sbb
test
in
into
bnd
push
inc
mov
imul
leave
mov
jb
mov
mov
pop
adc
ret
mul
dec
mov
ins
xchg
imul
or
mov
mov
add
aaa
pop
mov
mov
ds
aad
xor
or
lock
clc
push
jg
jecxz
aaa
mov
sbb
dec
test
xchg
xchg
pop
sub
add
shl
jae
sahf
imul
jmp
test
mov
xchg
lea
pop
and
lods
and
fcmovnbe
push
xor
dec
outs
(bad)
stos
sbb
push
pop
mov
mov
rcl
and
pop
adc
jmp
mov
push
push
mov
push
xchg
dec
push
pop
push
cli
inc
mov
mov
or
add
js
ins
and
add
xchg
aas
ja
inc
jmp
dec
mov
adc
repz
mov
inc
addr16
jmp
ds
push
add
das
push
xchg
push
jle
dec
jle
into
sti
mov
in
or
mov
mov
cmp
in
icebp
pop
(bad)
adc
xchg
sar
rol
inc
aas
mov
add
xlat
aad
push
push
lods
jle
pop
or
lods
neg
stos
test
stc
xlat
and
scas
in
mov
test
xchg
mov
lea
mov
or
dec
aaa
cmps
outs
loopne
test
inc
call
loop
cmc
mov
cwde
(bad)
mov
mov
sbb
adc
mov
mov
rcr
sub
jge
inc
test
popf
bound
shr
sub
les
and
icebp
jb
movs
jp
push
push
retf
ins
js
cmps
cli
xchg
ficomp
pop
outs
or
mov
popa
jl
add
cmova
mov
stc
mov
aas
mov
push
ins
sub
ins
mov
in
movs
repz
popa
mov
jne
cmp
xchg
sub
cld
ja
mov
aam
dec
pop
or
push
mov
sbb
icebp
mov
mov
rcr
or
sub
out
daa
pop
jmp
mov
stos
das
xchg
mov
pop
pop
not
add
and
inc
add
or
mov
add
emms
out
add
rcr
jle
or
icebp
(bad)
mov
loopne
sti
cmps
add
ss
add
jo
sbb
pop
in
mov
cdq
out
inc
leave
retf
lea
into
push
sub
lods
out
aaa
mov
inc
test
cmc
adc
mov
int3
aas
call
retf
push
xchg
bound
jp
cli
mov
xchg
repz
push
(bad)
fadd
or
arpl
icebp
xchg
fdiv
inc
test
add
(bad)
cmp
lock
pop
mov
js
nop
or
std
push
cmp
(bad)
sub
lds
push
mov
sbb
or
sahf
sbb
lahf
fldcw
jns
dec
add
cmp
xor
rol
push
in
int
cwde
add
out
inc
xor
rol
dec
pop
test
in
jae
jp
jmp
add
outs
shl
out
mov
sub
hlt
arpl
jmp
or
sbb
dec
aas
data16
sub
retf
inc
and
xlat
pop
imul
mov
loopne
aaa
pusha
ror
bound
nop
mov
pop
cmp
mov
and
adc
push
push
lahf
adc
xchg
push
pushf
jecxz
movs
lahf
mul
dec
ror
call
cld
sub
xchg
dec
rsm
(bad)
mov
test
or
es
call
in
pop
and
mov
cli
cdq
cmp
shl
vpaddusw
sbb
and
or
call
cdq
add
in
retf
(bad)
xchg
ss
inc
xor
gs
jmp
jnp
ja
out
push
mul
loop
sub
cmp
inc
dec
stos
ins
sub
xor
fidiv
bound
ret
shl
mov
loope
movs
and
leave
jmp
mov
and
xor
sbb
mov
stc
aam
jo
mov
sub
cmps
xor
(bad)
jg
or
sbb
mov
jns
sahf
lds
inc
shl
aam
push
popf
sahf
icebp
sbb
sahf
ret
push
div
loope
pop
mov
cmp
scas
das
jnp
outs
aaa
hlt
sbb
stos
push
sbb
arpl
and
mov
outs
in
das
cmp
jno
aam
je
test
in
movs
daa
jmp
leave
aad
pop
xlat
dec
or
jne
std
or
push
mov
ss
sbb
cmps
push
jp
test
in
nop
dec
xchg
sti
mov
lods
lock
mov
cli
jl
jne
gs
or
out
call
mov
ret
gs
ins
mov
add
jbe
bound
or
xlat
imul
push
mov
jo
int3
xchg
sub
dec
loop
push
arpl
mov
jo
jp
inc
(bad)
push
mov
sar
addr16
int
adc
jg
dec
jmp
fisttp
ja
dec
cmps
jno
jo
in
add
jg
fs
fisttp
cmp
scas
jnp
and
xor
inc
xor
sbb
sbb
add
sub
push
dec
cmp
and
jnp
and
and
cmp
imul
sub
scas
nop
(bad)
retf
push
xchg
dec
push
stc
push
dec
int3
iret
cmp
fcmove
retf
mov
jecxz
adc
adc
or
stos
ins
fisttp
sbb
cmp
xor
fidiv
pop
mov
cmps
adc
add
adc
xchg
cmp
dec
les
out
adc
mov
ret
push
sub
xchg
xchg
out
push
fcmovu
loopne
sbb
mov
adc
pop
jge
xchg
scas
mov
popf
mov
pop
pop
hlt
mov
or
in
xor
pop
mov
in
rcr
ret
ss
jge
loope
cmps
fbld
sub
push
cs
jne
ffreep
loope
outs
fbld
mov
add
outs
fsubr
xor
(bad)
retf
dec
mov
cmovne
ret
scas
idiv
test
jle
xor
out
iret
mov
mov
cld
inc
push
mov
adc
scas
pop
or
pop
ror
cmps
add
inc
lahf
sub
retf
jg
mov
in
push
les
sub
pop
repnz
adc
add
lods
and
ret
push
outs
ror
in
or
pop
mov
movs
jecxz
lods
pop
gs
mov
inc
loopne
and
call
lods
dec
and
mov
test
or
outs
(bad)
les
pop
cmp
push
inc
popf
jle
push
sahf
sti
push
arpl
rcl
add
jmp
outs
push
pop
aam
loope
inc
cmps
repz
pop
out
and
enter
js
pop
iret
jae
(bad)
lea
xor
and
add
adc
jnp
sbb
fld
jns
mov
std
xlat
pshufw
sub
xchg
fsub
outs
outs
xor
xchg
rol
add
dec
inc
mov
neg
mov
dec
xor
mov
lods
stos
mov
cwde
jnp
popf
ja
mov
sbb
sub
and
xor
pop
clc
call
mov
(bad)
call
pop
xor
fbstp
xor
cld
aas
jb
pop
sub
push
xor
(bad)
fimul
stc
push
jmp
jnp
add
sub
xor
inc
jle
or
mov
mov
fldenv
push
rcl
sbb
into
dec
imul
cmc
jno
jmp
xchg
add
jmp
or
sar
cmp
push
pop
sub
aas
psllq
std
loope
neg
jl
fnstenv
retf
push
mov
dec
daa
inc
cmp
retf
aas
sbb
lea
xor
ret
pop
cdq
ss
bound
daa
retf
mov
lea
rcl
stc
test
out
retf
int3
sbb
je
add
out
scas
dec
jle
ret
and
mov
enter
movs
mov
shl
sbb
inc
inc
and
xchg
xlat
add
push
fsubp
loope
mov
jne
push
push
popa
popa
xor
jnp
in
xor
mov
mov
jnp
push
inc
shl
mov
arpl
mov
cdq
xchg
les
fistp
ins
xor
icebp
rcl
(bad)
jns
(bad)
pop
and
pop
int3
and
pop
adc
scas
inc
ins
cmp
addr16
push
enter
dec
enter
push
xchg
ret
push
gs
ss
das
jg
aad
sbb
popa
cmps
and
test
loop
loopne
arpl
imul
ins
div
xchg
leave
out
cmp
(bad)
stos
dec
jno
xchg
push
mov
mov
je
xchg
xor
ds
inc
shr
xor
pusha
or
div
mov
xor
test
xor
pushf
mov
inc
imul
jno
sbb
push
sub
jp
repnz
clc
xlat
jbe
jae
sbb
call
retf
pop
push
(bad)
fs
or
push
test
push
lahf
fidiv
adc
push
mov
(bad)
sbb
jge
stos
and
lea
sub
mul
pop
shl
in
ret
fld
imul
mov
loop
bound
mov
inc
inc
sub
sub
test
cdq
add
or
idiv
outs
xor
mov
add
mov
ja
and
mov
and
sub
call
loop
lods
push
cmps
icebp
scas
xchg
xchg
aaa
cwde
add
call
pop
sub
pushf
pop
(bad)
cdq
cmp
fiadd
inc
ror
je
inc
jns
cdq
retf
ret
push
rcl
adc
pop
pushf
pop
es
pusha
inc
mov
in
loopne
push
enter
notrack
rcr
mov
jg
dec
lahf
aas
cdq
aas
sar
ja
icebp
les
stc
and
mov
loope
mov
inc
push
mov
jmp
call
pop
repz
rol
rcr
loopne
xchg
mov
push
pop
push
outs
sub
nop
adc
ret
xor
mov
sub
mov
xor
es
push
mov
sbb
sbb
(bad)
mov
jno
adc
push
rcl
shr
ret
in
and
movs
xor
clc
int3
movs
(bad)
stos
retf
or
mov
inc
sub
sbb
xchg
mov
or
(bad)
es
loop
or
dec
pushf
fwait
xor
push
mov
push
lods
test
or
pop
inc
mov
dec
lahf
leave
test
sub
mov
enter
push
xchg
(bad)
jmp
push
fmul
mov
and
aaa
int
jmp
jno
sbb
adc
or
push
adc
stos
cmp
jmp
(bad)
aas
imul
add
pushf
pusha
mov
test
add
sub
call
cmp
xchg
mov
fmul
and
pop
enter
xchg
mov
pusha
inc
jl
sbb
jmp
out
dec
push
pusha
pop
mov
out
pusha
inc
jo
dec
std
test
mov
jge
aam
xchg
int
addr16
sbb
out
mov
cmp
loopne
dec
cwde
test
lods
dec
aam
popa
cmp
sahf
lea
push
fiadd
(bad)
in
retf
add
sub
lmsw
or
icebp
cmp
or
mov
call
pop
dec
(bad)
pop
mov
dec
adc
sub
jne
(bad)
icebp
mov
lock
addr16
or
aam
daa
aaa
iret
xlat
pop
jecxz
push
jecxz
mov
js
fcmovb
out
es
push
scas
scas
adc
cmp
leave
shr
mov
sbb
scas
cmc
cs
inc
xchg
js
test
push
in
cmp
loop
fisub
lods
adc
jne
mov
inc
scas
xchg
jno
inc
and
int3
ins
or
popa
fs
cmp
sahf
mov
cmp
imul
xor
aam
cmps
adc
dec
psubq
(bad)
xchg
inc
pop
stc
repnz
inc
inc
dec
ds
fwait
cmc
icebp
test
jp
pmullw
outs
xchg
or
loope
pusha
rol
inc
or
jo
neg
(bad)
cmp
nop
movs
sub
sahf
adc
dec
mov
adc
imul
das
inc
aaa
lahf
mov
mov
cmp
sbb
xchg
sbb
jnp
sbb
add
jg
and
and
mov
xchg
push
imul
lods
lock
out
sub
push
inc
pop
pop
mov
arpl
xchg
add
nop
sbb
jno
leave
or
(bad)
pop
lock
(bad)
js
int
mov
mov
sub
call
and
iret
cmp
fistp
das
loop
(bad)
cmp
adc
mov
dec
pop
inc
adc
add
push
sbb
xchg
aas
out
mov
retf
loopne
mov
jno
mov
cmp
sub
scas
inc
sbb
add
push
xchg
out
nop
neg
push
adc
rcl
(bad)
mov
cmp
(bad)
push
cmp
push
pop
jb
out
xchg
stc
jmp
or
fcmovnb
and
ficom
iret
push
push
jp
in
and
or
xchg
imul
cmps
push
sbb
popf
cmp
iret
inc
push
retf
cli
push
movs
jmp
outs
jmp
or
inc
mov
imul
mov
mov
or
test
(bad)
push
retf
mov
icebp
(bad)
sbb
sub
adc
retf
ret
ret
in
pop
jmp
xlat
scas
popa
cs
inc
push
xor
cmps
sti
das
pop
adc
jmp
icebp
mov
mov
add
sti
sbb
cdq
addr16
(bad)
mov
mov
lea
and
lods
stc
scas
(bad)
fisttp
and
(bad)
ins
push
clc
imul
mov
mov
xor
sbb
sbb
mov
cli
std
ret
mov
and
jnp
hlt
mov
lock
inc
ja
push
cmp
call
fild
mov
push
push
sbb
cmp
test
ss
fwait
xchg
js
in
(bad)
addr16
push
fcom
sbb
jmp
xlat
mov
jb
xor
out
mov
stos
imul
mov
sbb
sub
mov
fadd
jne
push
cdq
shl
or
push
xlat
cmps
scas
jl
scas
push
xchg
add
pop
sbb
imul
(bad)
out
push
fwait
mov
cmps
pop
das
and
push
loopne
xchg
dec
stos
ins
and
lock
dec
cmp
cmps
lods
jno
daa
adc
jmp
jns
outs
xchg
cmp
fmulp
test
xor
dec
pushf
out
out
dec
pop
sti
push
int
mov
push
enter
out
lods
dec
lods
movs
std
imul
push
mov
shl
lahf
adc
jnp
push
jno
cmp
xchg
daa
jmp
jge
mov
fisubr
ins
mov
mov
pusha
or
mov
jecxz
cmp
mov
add
xor
add
sbb
sub
aam
iret
cwde
or
por
mov
test
js
jl
sub
test
js
dec
cmp
inc
add
into
js
aam
mov
adc
inc
int
inc
aas
sti
lods
adc
sbb
sub
sub
jo
mov
jne
movs
mov
mov
xor
sti
aam
xchg
mov
and
mov
push
or
lods
sahf
retf
das
call
cmp
sub
jmp
xchg
nop
and
lock
adc
(bad)
lock
icebp
adc
(bad)
hlt
dec
jecxz
aad
push
cmp
cmps
mov
add
rcr
or
sub
loop
pop
retf
adc
jns
ss
and
int3
push
xchg
jbe
xor
mov
dec
pushw
cmp
jle
dec
add
or
lods
popa
int
cmps
xchg
shl
mov
push
push
pushf
dec
adc
cmp
enter
mov
dec
dec
jl
cs
mov
rcr
or
(bad)
xor
test
les
push
jno
xchg
and
cmps
bound
(bad)
jge
xchg
push
mov
dec
ret
inc
ss
std
inc
fisub
adc
stc
cmp
cmps
jb
popa
iret
mov
icebp
inc
pop
push
pop
outs
push
adc
adc
loope
jl
mov
hlt
push
lock
movs
mov
jcxz
adc
scas
dec
int
in
stc
mov
mov
out
push
xor
adc
imul
retf
push
fs
inc
fs
adc
sub
js
add
int3
inc
shl
ins
jbe
or
or
addr16
enter
sbb
mov
xchg
pop
adc
test
stc
and
dec
call
mov
out
mov
ficomp
adc
lods
jne
loop
fsubr
mov
sub
in
shl
cs
pop
jecxz
clc
xor
enter
out
out
dec
or
dec
jns
pop
and
loopne
out
adc
mov
jmp
fwait
jne
mov
jg
into
adc
(bad)
out
mov
xchg
fistp
retf
test
dec
aad
mov
ss
mov
or
ficomp
jmp
imul
imul
les
cwde
jmp
outs
call
aad
loopne
into
outs
rcr
mov
fld
scas
jb
lods
xor
aas
or
push
stos
and
jne
xchg
cmc
add
or
inc
cmps
dec
out
inc
retf
data16
mov
pushf
les
xor
(bad)
adc
xchg
out
mov
xlat
mov
mov
ror
rcr
jecxz
inc
sub
adc
or
jl
push
and
adc
sbb
sub
cmp
sbb
pop
or
jp
push
fidiv
icebp
cld
pop
jb
enter
movs
lods
fcom
cmp
and
stc
(bad)
cmc
pop
mov
mov
sar
test
mov
xchg
cmp
in
aam
mov
inc
mov
jbe
rcl
mov
movs
(bad)
inc
and
clc
ins
fwait
cli
and
gs
push
mov
leave
xchg
test
push
popf
adc
mov
fs
aad
in
or
cwde
jl
in
jl
push
inc
clc
fist
mov
lahf
add
data16
aaa
jne
cdq
(bad)
mov
inc
cmc
test
mov
jb
loope
dec
icebp
mul
out
enter
mov
les
jns
lds
and
adc
xor
xchg
mov
bound
jae
adc
xor
jb
fst
pop
xor
pop
imul
adc
int3
push
dec
cmp
cmp
es
packuswb
ins
stos
pop
push
mov
or
xchg
pusha
mov
(bad)
inc
addr16
dec
les
std
xchg
mov
mov
fisttp
lods
inc
mov
push
xor
mov
or
shl
xchg
mov
pushf
push
xor
iret
adc
iret
cmp
cmps
cmps
cmp
mov
or
add
xchg
xchg
mov
loopne
loope
cld
add
movs
cmp
and
push
adc
sahf
jge
dec
(bad)
pop
add
shl
out
clc
inc
les
sub
push
daa
aad
jmp
inc
mov
and
fwait
push
jmp
mov
xor
add
jp
lds
mov
leave
pop
cmp
jp
jle
inc
jae
pop
push
inc
mov
dec
cmp
mov
ss
(bad)
and
mov
pop
jbe
xlat
mov
cmp
and
aas
jle
mov
push
popf
aam
fmul
cli
adc
call
in
inc
add
scas
call
jg
(bad)
adc
add
sar
(bad)
fimul
push
icebp
mov
ins
jbe
sub
fcmovb
cmp
in
(bad)
mov
xchg
jns
or
(bad)
jnp
mov
je
xchg
les
adc
(bad)
cmp
adc
add
div
mov
jmp
and
ins
scas
retf
sti
inc
fcomp
cmp
movs
sbb
fadd
sbb
push
xchg
jne
pop
push
and
sti
iret
inc
rol
fisttp
xchg
int
ret
into
ins
fadd
adc
call
push
push
mov
stos
mov
push
pop
xchg
jne
pop
sbb
sahf
jmp
std
jecxz
mov
xchg
into
fist
sub
pushf
pushf
or
mul
data16
and
test
sbb
pop
mov
mov
cmp
int3
movs
jmp
xor
repz
or
and
adc
lock
pusha
movsx
fwait
aam
lahf
xor
loopne
loop
jnp
and
pop
or
xchg
scas
jne
push
fist
cmp
aas
jge
popa
jne
aaa
push
outs
and
jmp
or
add
shl
xlat
sar
and
push
hlt
inc
cdq
aam
clc
gs
cmps
xchg
mov
movs
and
mov
out
mov
add
cmp
pop
push
mov
retf
in
mov
dec
and
hlt
gs
pop
pop
retf
cmp
or
(bad)
ret
cmc
in
sbb
mov
ret
mov
jp
gs
xchg
test
lods
jl
stos
mov
lahf
test
scas
mov
outs
push
out
dec
mov
adc
mov
pop
in
ins
ror
pusha
xor
ja
lods
mov
push
cwde
cmp
loop
scas
xor
xor
imul
mov
scas
cs
ret
pop
and
cmp
mov
mov
mov
nop
mov
aas
jle
retf
dec
retf
mov
sbb
jg
dec
pop
inc
mov
add
jle
pop
mov
pop
add
push
mov
icebp
cs
(bad)
hlt
xchg
retf
aam
or
pop
sbb
pop
retf
outs
test
cld
push
mov
hlt
or
mov
sbb
xor
adc
aas
pop
and
jmp
inc
add
outs
cmp
jecxz
or
rcl
(bad)
fld
fld
stos
(bad)
retf
sub
sub
movs
adc
test
rcr
mov
iret
scas
out
mov
in
shr
enter
mov
mov
dec
enter
sbb
shr
jns
and
(bad)
and
dec
add
mov
cmp
lods
lods
cmp
xchg
shr
in
in
lock
aad
arpl
push
(bad)
rcr
xor
push
fsubr
push
std
xor
push
fsub
std
pop
jle
fdivr
test
nop
mov
jo
inc
xchg
nop
cli
sahf
punpckhwd
jo
push
mov
fiadd
das
(bad)
fcmovu
call
clc
xor
add
imul
aam
push
loop
dec
dec
das
and
stc
push
jmp
(bad)
sahf
xor
jb
cmc
in
add
hlt
scas
test
(bad)
int
and
je
mov
xor
stos
mov
shr
mov
xchg
cdq
dec
data16
xchg
test
(bad)
es
sub
push
fcmove
dec
or
mov
js
ss
loop
or
test
scas
sar
mov
jno
js
lock
repz
or
jb
mov
mov
arpl
jl
arpl
fnstenv
test
hlt
mov
adc
cmp
push
ret
or
rep
(bad)
mov
mov
add
pop
mov
stos
and
inc
lods
and
hlt
test
sbb
mov
cmps
sub
ficomp
in
sbb
or
bound
lock
or
or
dec
push
scas
xchg
push
lods
neg
pop
inc
adc
xchg
xchg
jnp
lahf
movs
data16
popa
xchg
jg
call
icebp
or
sbb
or
rol
xchg
or
outs
adc
je
shr
aad
add
push
mov
bound
out
(bad)
cmps
ja
jb
jne
xor
loop
jo
mov
pop
inc
adc
xor
sbb
outs
retf
out
rol
sbb
in
or
push
stos
or
push
scas
ins
xchg
sbb
not
and
push
mov
jae
jo
mov
mov
psubq
imul
xchg
or
mov
gs
test
leave
test
mov
scas
dec
cmp
adc
sub
push
movs
inc
mov
pop
pop
sahf
cdq
ja
pop
lods
pop
jg
sbb
sbb
into
repz
mov
ins
jge
jns
addr16
dec
aaa
or
mov
jne
in
jle
popf
movs
call
push
scas
inc
sahf
or
pop
pop
and
in
xchg
cmp
sbb
xchg
rol
dec
popf
xchg
mov
sub
and
ja
retf
xchg
cmp
add
call
imul
xor
push
sbb
or
imul
mov
mov
sub
aam
sub
sti
xor
xor
lods
hlt
or
mov
jl
and
jae
fldcw
jecxz
jg
inc
test
or
pop
ret
adc
test
inc
cmp
dec
rcl
dec
ret
(bad)
lds
ins
mov
lods
scas
enter
dec
(bad)
dec
fs
shl
les
pop
cmp
mov
imul
and
add
out
sbb
jo
mov
daa
xchg
scas
jle
sbb
rcl
hlt
push
and
mov
popf
pop
or
sahf
cmp
mov
int
sbb
imul
dec
or
mov
fsubr
push
rol
add
nop
lock
arpl
ins
xor
fst
mov
sub
ds
pop
mov
mov
dec
cld
mov
mov
and
push
push
jo
pushf
loopne
stos
xchg
fsub
sub
call
add
in
jmp
cmc
arpl
adc
add
adc
arpl
push
sbb
push
push
pusha
jbe
adc
inc
shr
xchg
lock
push
int3
sbb
fwait
cli
mov
push
lahf
xor
into
loope
pushf
xchg
lds
dec
fcomp
and
cdq
cmp
sub
or
xchg
xchg
cmps
adc
push
dec
sar
mov
adc
js
cmp
stos
push
call
jp
test
or
ficomp
pop
push
movs
mov
aam
add
gs
outs
cmc
in
test
sbb
fnstsw
mov
push
mov
iret
enter
push
push
fisubr
jbe
sbb
lock
xor
popf
jae
mov
push
loope
fs
cmp
popa
gs
mov
loope
mov
or
or
or
dec
sbb
cdq
test
xor
popa
cli
inc
adc
push
(bad)
cmp
xor
mov
sub
(bad)
mov
fst
cmps
push
push
mov
imul
adc
outs
gs
pop
fadd
mov
mov
out
jmp
sub
xchg
daa
jecxz
call
jmp
dec
or
inc
pop
jbe
xor
push
pop
mov
push
imul
jae
adc
inc
mov
test
call
pop
xchg
jl
mov
add
cli
mov
hlt
repz
mov
iret
fbld
scas
test
(bad)
std
mov
cmps
lock
jb
xor
out
ss
cmp
mov
push
mov
cmc
mov
mov
aas
lahf
xor
push
scas
sbb
retf
pop
shl
popf
test
mov
pop
cmps
sbb
movs
sbb
int
ins
repz
int3
adc
data16
fcom
jo
adc
xor
int3
jo
mov
jne
and
sbb
(bad)
adc
aaa
fsubr
and
jg
idiv
or
mov
dec
fdivr
shl
jae
push
add
pop
movs
daa
jnp
mov
aas
cmps
fwait
sbb
not
aad
aaa
cmps
add
imul
(bad)
out
stc
shl
jnp
ja
iret
lods
out
jmp
adc
mov
xchg
pushf
mov
js
je
lahf
pop
inc
mov
in
jo
cli
mov
test
cld
push
sti
popf
movs
test
outs
jae
jbe
mov
shl
add
xchg
push
xchg
(bad)
out
fbstp
call
xchg
push
repnz
pop
and
and
inc
(bad)
jnp
loope
push
dec
sub
fwait
inc
gs
aam
pop
leave
cdq
cdq
(bad)
stos
lea
stc
adc
mul
xor
add
(bad)
retf
sbb
and
cmp
idiv
fdiv
in
cmp
inc
pop
adc
mov
mov
lea
lods
xor
fs
dec
pop
out
cmp
or
mov
mov
pusha
adc
xor
stos
(bad)
xchg
xchg
jae
fild
mov
push
sub
(bad)
in
mov
mov
dec
add
or
ss
cli
stc
dec
inc
jmp
in
mov
(bad)
out
and
loope
arpl
jge
and
imul
ins
sar
add
adc
xor
fs
cli
gs
push
sub
jnp
out
hlt
pushf
lahf
aam
fdivr
mov
pushf
popf
bound
jge
popa
fs
nop
pop
inc
or
bound
push
mov
mov
and
jle
inc
mov
pop
add
rcr
(bad)
dec
cmp
out
mov
push
mov
in
js
mov
cli
lods
loopne
fadd
xor
test
and
out
or
push
add
xchg
xor
jl
fiadd
pop
movs
clc
pop
addr16
int3
and
nop
xchg
ror
les
js
jne
xchg
jmp
dec
cld
and
adc
movs
inc
shl
sub
not
rol
pop
clc
pop
xchg
push
add
cwde
sub
adc
cld
into
pop
not
push
in
jno
push
jmp
ror
iret
js
imul
dec
and
ror
fisub
jecxz
mov
sbb
adc
sahf
sbb
dec
repnz
stos
mov
test
cmps
pusha
out
inc
sub
pop
pop
(bad)
adc
ret
inc
je
xchg
clc
sbb
mov
push
jnp
dec
loopne
in
jmp
push
xchg
sti
unpckhps
mov
mov
push
stos
add
sub
cdq
xchg
inc
fsubr
outs
mov
pop
xchg
mov
mov
xor
into
(bad)
das
push
loopne
std
mov
das
arpl
push
int3
push
cmp
sub
inc
sbb
mov
sahf
cmp
jno
hlt
mov
nop
and
xchg
adc
inc
jbe
rcl
inc
lea
push
imul
adc
jnp
(bad)
mov
push
mov
rol
jl
and
stos
jns
addr16
jo
daa
sahf
or
adc
(bad)
pusha
adc
popa
push
cmp
pop
and
dec
cwde
(bad)
sub
xor
enter
mov
sti
rcl
mov
sub
or
mov
fs
dec
mov
das
bound
xchg
or
jb
pop
ret
cmc
xor
xchg
mov
and
mov
std
mov
jbe
out
push
ins
in
into
sti
loopne
mov
jle
cli
rcr
adc
adc
cs
es
loope
cmp
inc
call
das
sar
stos
mov
cdq
fnstenv
pop
scas
in
fild
mov
aam
add
stc
and
and
inc
stos
iret
movs
sub
mov
dec
mov
push
mov
ret
dec
psrad
mov
das
int
nop
pop
cdq
mov
jmp
jecxz
loope
mov
aam
sbb
sbb
inc
icebp
mov
mov
punpcklbw
inc
mov
pop
jle
mov
and
sub
adc
xor
sahf
xor
(bad)
cs
xchg
test
ret
mov
mov
mov
lea
xor
pushf
pop
xor
xchg
mov
inc
xor
jg
jmp
inc
jae
aaa
mov
xchg
jmp
ret
pop
jmp
sbb
ds
inc
sub
and
fwait
std
pop
inc
ss
jl
ret
(bad)
or
cmps
inc
sbb
test
sbb
and
mov
sbb
cmp
inc
rep
aad
ror
(bad)
lds
pop
sub
mov
retf
pusha
push
fcmove
pop
aas
cdq
ds
add
and
jle
cmp
sbb
(bad)
mov
jle
mov
sbb
test
mov
test
add
jmp
cmp
pop
sub
dec
fst
test
and
xchg
xor
pop
xchg
jg
je
ins
mov
repnz
mov
adc
pusha
fwait
(bad)
lahf
dec
mov
jb
pop
mov
dec
aas
push
call
pop
xchg
push
cmps
(bad)
inc
aad
ficom
(bad)
mov
jle
dec
dec
mov
pusha
arpl
mov
or
jp
dec
popa
push
std
dec
sbb
cs
arpl
lahf
jcxz
add
mov
inc
sub
ins
jnp
(bad)
fucomip
jle
push
jne
pop
cmp
call
fcomip
(bad)
sub
loop
jle
or
iret
test
into
test
(bad)
ficom
xchg
aad
call
pop
dec
and
test
outs
shl
and
(bad)
fld
mov
mov
(bad)
push
sbb
and
js
inc
call
(bad)
(bad)
fild
faddp
outs
mov
lahf
dec
add
xchg
mov
pusha
mov
xlat
les
add
bound
mov
std
jnp
mov
pusha
sbb
sub
fimul
mov
(bad)
loopne
fdiv
dec
loopne
mov
dec
lahf
inc
xchg
sti
das
jbe
aam
xor
fisub
inc
aam
pop
fist
mov
or
inc
or
push
mul
pusha
xor
adc
cmp
ins
sar
add
rcl
pop
jae
push
cmc
mov
sar
cmc
(bad)
call
stc
retf
inc
scas
mov
sub
push
std
xchg
inc
cmps
test
ret
xor
xor
cdq
push
cmp
and
lahf
cwde
(bad)
jnp
mov
loop
cmp
into
mov
push
ret
mov
push
or
add
push
test
ret
mov
pop
jo
push
mov
dec
xchg
aam
push
loopne
dec
rcl
pop
cmp
xor
add
movs
jp
xchg
adc
pop
sub
xchg
(bad)
mov
dec
int3
bound
sbb
test
jo
mov
in
popa
ss
mov
and
dec
sar
dec
fisttp
movs
xor
xchg
pop
adc
js
jb
jno
or
sahf
fidivr
call
out
lds
ds
js
jl
sbb
jl
add
test
test
movs
retf
scas
loopne
xchg
call
xor
fwait
and
or
fst
pop
mov
lods
adc
iret
mov
push
je
sub
bound
dec
loope
cmc
mov
push
retf
xor
push
ficomp
dec
out
mov
inc
int
cli
pop
ret
loope
ins
popa
jbe
and
pop
jmp
out
nop
mov
jl
push
mov
xchg
mov
jg
rol
or
ret
inc
xchg
sbb
cs
in
lahf
and
jmp
int
es
popa
pop
pop
dec
xor
iret
cvttps2pi
and
fucomp
xchg
jae
sbb
jo
hlt
pop
and
out
hlt
sub
leave
scas
dec
mov
(bad)
mov
adc
xor
in
adc
mov
pop
dec
outs
ror
repnz
sub
fnsave
push
push
xlat
adc
fs
ret
(bad)
and
jne
sub
pop
jno
inc
and
shr
shl
js
call
xchg
inc
dec
xchg
jns
mov
je
call
clc
adc
push
cmc
pushf
push
or
jmp
sar
(bad)
mov
scas
inc
xchg
lea
js
dec
mov
sbb
out
mov
mov
arpl
push
inc
push
push
push
sbb
(bad)
sub
add
pop
jbe
push
rcr
hlt
and
or
out
sbb
stos
add
add
dec
dec
movs
push
iret
pop
(bad)
call
addr16
adc
xchg
and
sbb
add
repz
dec
sar
jae
test
rol
inc
mov
sbb
add
lods
retf
aas
jne
mov
push
inc
stos
in
xor
pop
pop
dec
icebp
bts
adc
inc
pop
in
sahf
push
xchg
sbb
jle
jb
test
push
mov
mov
test
jbe
inc
push
daa
dec
inc
gs
xor
out
call
jno
stos
xor
dec
pop
cmp
jl
add
stos
addr16
xchg
sub
fcmovnbe
xchg
into
mov
pop
xchg
push
jg
mov
mov
sti
outs
sub
sub
sbb
popa
(bad)
in
mov
push
inc
test
dec
sahf
aas
adc
iret
jbe
(bad)
aad
shl
mov
stos
test
mov
adc
xchg
push
repz
addr16
and
push
ins
push
(bad)
aaa
push
jae
pop
jg
jmp
cmps
sbb
sub
call
mov
addr16
pop
mov
fcom
leave
sbb
mov
mov
sub
les
mov
pushf
(bad)
add
jp
and
adc
inc
fst
xor
fadd
jl
push
push
mov
jge
mov
ret
pushf
cld
iret
shl
cmp
outs
xchg
sbb
cmps
cmp
dec
add
add
pop
xor
mov
xor
dec
mov
jns
xchg
xchg
enter
pop
movs
mov
push
xchg
ss
mov
mov
jge
push
das
or
adc
ja
jns
loop
mov
lahf
jmp
test
fwait
data16
mov
cmp
arpl
xor
adc
mov
or
adc
pop
movs
cmp
out
xchg
xchg
retf
ins
cdq
scas
jge
or
pop
fisubr
mov
leave
xor
xchg
out
in
enter
pushf
gs
sbb
ret
mov
aas
sub
jecxz
adc
stos
loopne
call
fwait
in
rcr
repz
mov
inc
fisub
cli
mov
hlt
not
adc
xchg
and
fnsave
clc
pop
int3
and
clc
mov
rep
sub
ss
inc
xor
stos
push
(bad)
mov
cs
(bad)
out
cmps
fld
mov
xchg
dec
xor
test
add
mov
jnp
adc
sub
xchg
sbb
jno
(bad)
aad
(bad)
in
dec
jg
(bad)
in
icebp
lea
popf
sar
xor
jo
dec
inc
test
add
jge
adc
add
fwait
out
adc
dec
add
in
dec
loopne
inc
frstor
mov
mov
in
and
arpl
jne
fist
or
push
cmp
pop
dec
inc
or
sub
stos
adc
sub
pop
dec
test
sbb
xor
pop
xchg
movs
or
add
loopne
and
push
clc
mov
jo
fucomi
and
fldenv
loop
outs
clc
les
xor
sub
pop
inc
mov
stos
pop
cmp
popf
test
mov
pop
loope
xchg
lahf
sbb
rcr
lea
jo
cli
pop
mov
cmps
inc
mov
aam
call
lods
cmp
mov
push
xor
(bad)
and
sti
mov
clc
xchg
frstpm(287
int3
sbb
dec
iret
ins
aad
pop
cmp
outs
cmps
jmp
bound
std
push
enter
mov
pop
mov
test
ss
jl
add
pop
fcomp
jl
ins
mov
dec
stos
xchg
aaa
stos
sti
std
out
jns
mov
retf
and
add
fcomp
pop
ins
mov
loope
and
popa
lods
fidiv
pop
cmp
pop
in
adc
shl
js
std
adc
sub
sub
fldenv
jns
dec
sahf
or
dec
les
in
xchg
out
and
mov
retf
cmp
add
std
mov
fucomip
fs
fmul
pop
data16
iret
loop
bnd
scas
fnstsw
and
gs
fbstp
fsubr
pop
fadd
(bad)
sub
sti
push
sub
or
inc
push
clc
into
sub
call
dec
mov
mov
dec
sub
cmp
fs
push
mov
mov
(bad)
ficomp
inc
fstp
xchg
mov
ret
xchg
mov
stos
sub
sub
add
fistp
lahf
lahf
mov
dec
cdq
loope
cld
pop
inc
cmps
mov
hlt
dec
cs
mov
cs
add
cwde
dec
push
pop
retf
fsub
dec
pusha
outs
sbb
arpl
adc
and
neg
push
sub
lods
imul
jbe
ror
mov
in
push
ins
clc
xor
mov
les
mov
stos
xchg
fxch
adc
mov
ins
lock
movs
pusha
pop
add
daa
icebp
test
in
ret
and
(bad)
push
lock
ret
mov
movs
mov
ja
test
sahf
nop
xor
or
xor
dec
inc
mov
ins
jmp
cdq
fs
mov
xor
ret
gs
les
adc
jmp
mov
mov
xchg
pop
adc
popf
outs
and
mov
and
mov
int3
cmp
xor
lds
aam
push
in
jb
loop
arpl
not
mov
daa
es
ja
cmp
aad
cmps
xchg
sub
les
dec
sbb
mov
mov
std
dec
mov
mov
gs
pop
dec
ss
test
fbld
dec
sbb
jg
mov
inc
mov
aam
mov
jmp
sahf
shl
inc
push
push
retf
imul
in
stos
js
rcr
sub
pop
movs
jb
bound
mov
or
in
fdivrp
mov
in
xor
push
lods
mov
dec
and
(bad)
hlt
jg
add
imul
hlt
mov
clc
pusha
push
outs
gs
push
(bad)
pop
lods
stc
(bad)
fsubr
mov
cli
test
call
fcom
into
aam
push
jmp
and
add
dec
jb
sbb
mov
add
lock
mov
mov
outs
pop
mov
ss
pop
mov
jmp
xchg
mov
mov
std
xchg
or
mov
(bad)
cld
adc
dec
jno
mov
std
mov
cwde
adc
shl
aad
jns
cwde
sbb
xchg
das
jl
pop
xchg
scas
inc
hlt
mov
mov
cwde
adc
test
cmc
xchg
and
je
out
in
pop
cmp
jl
and
sbb
icebp
rcl
jb
mov
dec
mov
mov
pop
mov
mov
and
cmp
dec
aaa
cld
push
mov
adc
mov
fst
std
jb
jne
sub
pop
jo
mov
jmp
push
(bad)
fisubr
mov
test
xor
in
test
out
sar
rcl
(bad)
adc
fcom
dec
inc
inc
outs
mov
push
outs
(bad)
mov
fnsave
(bad)
aaa
mov
fist
push
gs
mov
loop
jns
pop
shl
push
(bad)
in
inc
inc
(bad)
in
push
mov
cmp
push
cmp
jmp
xor
icebp
outs
mov
push
inc
mov
cmps
push
pop
es
pop
push
(bad)
daa
daa
inc
sahf
mov
add
push
mov
(bad)
fs
inc
lds
mov
enter
inc
sub
lea
test
pop
cli
jns
sbb
in
sbb
ss
add
loope
mov
fadd
mov
gs
outs
in
les
out
out
mov
xor
push
out
int
dec
and
mov
push
lea
sub
das
and
sbb
mov
adc
jbe
out
cmp
ds
xor
sar
out
imul
inc
lahf
adc
adc
stc
push
shr
jmp
sub
pop
mov
jnp
(bad)
mov
push
enter
mov
or
mov
jp
jecxz
pop
xchg
mov
push
xchg
push
das
dec
(bad)
inc
xor
mov
rcr
jge
or
xchg
ss
or
pop
sub
ss
jnp
jmp
(bad)
mov
inc
xchg
addr16
mov
rol
mov
enter
es
lods
mov
sub
mov
adc
and
addr16
std
cdq
and
push
cmc
jmp
sbb
sar
xor
add
push
dec
shr
cmp
mov
fcomi
push
addr16
jl
mov
test
xchg
dec
sbb
gs
int3
xchg
mov
test
sub
aam
or
and
imul
or
lods
adc
inc
stos
push
ss
mov
jbe
in
arpl
das
jle
sbb
mov
rcl
mov
leave
add
leave
aas
jnp
loopne
es
sub
imul
xor
test
jge
mov
and
mov
xor
xchg
pmaxsw
sbb
xor
push
push
pop
push
inc
ja
fisttp
sahf
add
inc
or
jecxz
stc
fbld
outs
rol
lods
cld
mov
scas
mov
pop
fcomp
test
in
inc
adc
(bad)
adc
mov
xchg
sub
dec
pop
fmul
pop
dec
dec
mov
pop
mov
clc
outs
fisub
out
xchg
dec
(bad)
call
dec
cmp
sbb
jbe
jmp
cmp
sbb
(bad)
or
inc
xchg
pop
lods
xor
cwde
push
enter
push
pusha
xchg
add
loopne
je
retf
fnsave
cld
(bad)
not
aas
add
out
inc
sub
in
push
pop
mov
pandn
test
nop
pop
inc
hlt
outs
in
mov
mov
es
inc
mov
xchg
cmp
mov
xchg
loop
lds
loope
push
push
push
add
aam
cmp
xchg
jo
mov
push
jg
out
jns
stc
cmp
pop
inc
out
fxch
sub
jg
and
xchg
mov
or
xchg
mov
jb
retf
jnp
push
mov
add
add
cdq
test
sahf
and
add
sar
rcr
mov
push
jecxz
mov
push
mov
mov
ret
mov
dec
fst
adc
aad
clc
leave
in
add
scas
jg
std
stos
addr16
inc
mov
push
stos
sub
sti
mov
dec
sbb
jge
movs
xor
cli
adc
xor
cmc
std
dec
rol
jns
xchg
ja
icebp
xchg
int
jmp
fiadd
inc
jl
ror
inc
fst
leave
cs
mov
xchg
xor
xchg
adc
cmp
jae
xor
ret
pop
popf
and
daa
dec
icebp
cmp
arpl
int3
fbstp
inc
dec
imul
idiv
mov
mov
mov
mov
daa
mov
ficomp
jno
ret
push
mov
sub
out
in
and
jbe
inc
call
xchg
fmul
js
not
pop
cld
and
add
jmp
push
rcr
std
push
shr
loope
mov
jmp
xchg
pop
pop
jmp
push
push
aad
mov
xor
add
arpl
into
cvtdq2ps
or
mov
clc
bound
sti
aas
jbe
inc
outs
add
stos
pop
fsub
or
test
ja
out
jl
(bad)
push
aam
add
xchg
shl
or
and
and
sub
mov
xlat
add
xor
mov
adc
stos
outs
test
popa
dec
push
outs
inc
and
add
mov
mov
jge
jae
js
addr16
cmp
cmps
cmp
fsubrp
pop
jmp
ds
pop
sahf
dec
dec
pusha
out
or
iret
test
fsub
sub
enter
loop
fdivr
aas
jae
xchg
pmaddwd
jg
repnz
mov
sub
(bad)
bound
mov
lds
pop
int3
cmp
fwait
(bad)
mov
add
xchg
icebp
push
dec
out
mov
mov
or
imul
mov
movs
jae
mov
dec
ins
cmp
mov
and
dec
je
stc
lods
jmp
mov
fsubr
or
cmp
push
out
lods
stos
imul
mov
dec
cld
pusha
inc
ret
adc
jo
ret
push
mov
sub
test
test
or
outs
or
std
mov
shl
adc
cmps
popf
inc
jne
push
or
stos
popa
movs
iret
arpl
push
pop
cs
dec
add
mov
jae
cs
das
icebp
retf
push
repnz
dec
dec
fsub
adc
jmp
xchg
cli
pop
pop
or
pop
fs
push
or
stc
push
pop
or
iret
popf
icebp
(bad)
mov
popf
xor
stos
outs
jge
xor
(bad)
in
push
pop
sub
sub
test
(bad)
pop
add
mov
sbb
add
ss
test
mov
das
clc
dec
enter
inc
cdq
dec
call
cmp
pop
cdq
icebp
in
icebp
xor
repz
dec
add
mov
rol
mov
inc
imul
jmp
fcom
test
int
call
pushf
push
mov
and
xlat
mov
sahf
retf
jnp
(bad)
sti
ins
rcl
fidiv
push
or
adc
mov
data16
hlt
sahf
xor
in
jp
cmps
jle
rcl
ss
int
mov
mov
xchg
mov
adc
scas
in
jnp
push
mov
mov
mov
jge
ror
xor
adc
sbb
lds
jmp
(bad)
stc
sbb
sub
jnp
jbe
pop
pop
jno
or
sub
add
and
mov
repz
jl
mov
call
cli
mov
mov
push
mov
or
pop
jge
dec
sub
adc
xor
xchg
jg
sub
ja
call
push
add
scas
sbb
test
jno
jmp
lahf
push
or
hlt
xor
jbe
scas
popa
call
fsub
push
pushf
xchg
push
xchg
aas
mov
push
stc
mov
xor
adc
and
mov
pop
sbb
dec
sbb
stos
repz
mov
das
mov
popa
cld
in
xor
sbb
lock
fisub
les
adc
pop
icebp
imul
or
sub
xor
inc
sbb
(bad)
rcr
mov
fsub
or
sub
ss
cdq
push
popa
out
in
in
xlat
mov
adc
xchg
pop
pop
cmp
mov
mov
cdq
mov
pop
pop
ins
jmp
dec
stc
add
not
xor
fdiv
dec
data16
add
arpl
mov
pop
loop
fisub
jne
xor
mov
jbe
sbb
push
xchg
and
fidivr
aaa
cmc
jp
dec
mov
popa
push
mov
fldenv
fadd
xchg
push
add
(bad)
call
or
test
lock
mov
jecxz
jmp
xor
push
cmc
fucomp
xchg
enter
and
sbb
dec
jle
jp
icebp
mov
adc
(bad)
fmul
push
pop
mov
pop
mul
or
pop
test
add
jle
aas
lock
adc
adc
leave
movs
jmp
stos
dec
push
and
xchg
loope
cmps
fnstcw
ins
dec
loopne
and
(bad)
jl
adc
frstor
popa
cli
int3
das
adc
test
xlat
out
popa
dec
fsubrp
cli
pop
(bad)
xchg
sub
test
jbe
inc
mov
shl
retf
xchg
push
cmp
ds
inc
sbb
push
xchg
cli
adc
mov
movs
int3
sar
out
loop
mov
jbe
add
or
ins
adc
cli
add
dec
pop
mov
int3
shr
xchg
lahf
xlat
test
cmp
mov
pop
sbb
sti
outs
or
sbb
rcl
dec
fmulp
pushf
mul
out
jb
sub
test
mov
mov
jb
adc
cmp
jmp
xor
sbb
xor
repnz
mov
pop
repz
mov
test
jmp
sbb
push
enter
or
mov
movs
and
jmp
mov
add
add
add
rcl
xor
(bad)
jge
daa
jp
jge
jl
movs
mov
fwait
pop
xchg
pop
neg
inc
pushf
add
and
into
pusha
ins
mov
sbb
mov
inc
xor
xchg
push
ja
dec
ja
push
adc
aaa
push
add
sub
sub
gs
fidiv
adc
lods
xrelease
xchg
pop
jae
and
mul
xor
dec
repnz
mov
fstp
and
scas
ss
call
dec
ret
jmp
div
dec
mov
mov
sbb
xchg
push
test
sub
xor
cli
xor
inc
aas
sbb
pminub
sbb
sub
push
sar
imul
adc
mov
(bad)
jno
ficom
add
inc
lea
inc
outs
fiadd
mov
hlt
dec
sbb
cmp
sahf
cdq
loope
inc
les
rcl
mov
hlt
aaa
es
fs
cdq
loope
pop
or
jae
mov
mov
test
ds
lea
lods
push
push
ret
pavgw
imul
aam
push
cmp
dec
bound
pop
push
xor
and
pushf
sbb
jae
pop
jle
dec
jl
adc
mov
shrd
push
dec
jae
int3
xor
call
mov
ret
push
out
jbe
leave
fwait
repz
mov
pusha
ds
push
bound
stos
lods
lea
mov
sti
aad
inc
in
aam
scas
jle
mov
push
iret
jle
mov
outs
push
add
ins
cmp
add
dec
pop
mov
cmp
ss
mov
ficomp
(bad)
out
inc
xchg
or
(bad)
fs
xchg
sahf
dec
imul
es
neg
push
dec
jns
out
adc
jns
test
lock
jae
dec
arpl
ret
test
bsf
outs
jle
mov
mov
mov
loopne
adc
xor
sbb
xchg
inc
mov
sub
stos
pop
jae
imul
or
fimul
dec
mov
adc
push
pop
push
arpl
sbb
(bad)
lock
data16
jns
adc
fidivr
jmp
inc
and
sub
cmc
mov
mov
in
mov
div
jns
stos
push
into
scas
pop
add
jbe
popa
and
sti
lods
test
cmps
loope
fiadd
xor
lds
out
retf
sub
repz
iret
inc
xchg
and
sub
jmp
test
and
jnp
jle
sub
push
(bad)
push
cmp
mov
jg
sbb
lds
sub
imul
outs
retf
test
xchg
push
mov
lock
ds
jp
dec
dec
retf
push
push
out
push
pusha
and
jo
push
mov
and
jle
stc
pop
pop
mov
mov
aad
xor
in
jge
mov
in
mov
in
cmps
nop
ss
or
out
popa
adc
mov
mov
(bad)
bound
dec
sub
mov
stos
je
loop
add
mov
shl
pop
dec
mov
int
cmp
in
outs
pop
shl
push
and
pop
pushf
jno
sbb
cmp
pop
fist
data16
sbb
popf
adc
pop
mov
cmc
sbb
(bad)
jae
js
jb
add
scas
xor
mov
(bad)
stos
fnstsw
push
jns
push
clc
xchg
in
(bad)
int3
lods
(bad)
aad
sub
test
test
mov
dec
popa
or
les
aam
lahf
or
into
cmp
xor
dec
fisub
adc
xchg
fdivr
lock
outs
jne
leave
jl
lock
movs
hlt
aad
xchg
cmp
pop
imul
nop
out
mov
dec
aam
adc
xchg
adc
ins
or
retf
(bad)
ror
leave
jnp
mov
fldenv
cmp
scas
aas
dec
jns
inc
hlt
pop
fisub
and
mov
call
ror
sbb
dec
dec
gs
mov
jmp
lea
mov
cmc
rcr
inc
fs
(bad)
stos
test
inc
ret
mov
mov
and
repnz
sbb
and
cli
into
(bad)
dec
pusha
popa
push
stos
pop
push
retf
jg
fs
and
into
(bad)
imul
inc
dec
mov
dec
mov
mov
push
push
jl
jo
shr
outs
or
lds
addr16
mov
push
sub
and
ds
xchg
out
push
pop
ficomp
pop
je
and
inc
pop
xchg
dec
repnz
test
repnz
shr
test
stos
xchg
jmp
cmp
imul
lods
in
inc
fcomp
sub
push
add
inc
mov
push
or
push
jnp
or
push
shr
pop
push
ds
nop
stos
(bad)
push
out
in
cwde
aam
fnstcw
mov
jmp
mov
xchg
ror
loope
or
popa
sub
jl
or
retf
dec
mov
ins
adc
in
fwait
sbb
push
out
pop
jmp
jnp
and
and
xor
push
push
pop
xor
and
out
loope
out
outs
fstp
sbb
test
retf
cmps
rcr
lock
mov
enter
cmc
ret
shl
faddp
and
fwait
loop
jmp
pop
cld
loopne
pop
int
cmc
pop
dec
enter
rcl
mov
and
and
and
xor
xchg
loopne
imul
cli
xchg
cdq
dec
fsub
sbb
cdq
add
push
mov
retf
push
adc
dec
xor
xchg
mov
mov
aas
jns
add
xor
fwait
call
cmp
(bad)
mov
jl
lea
int3
adc
and
mov
jns
xchg
pusha
push
mov
lods
mov
sbb
aam
jp
fsub
ss
(bad)
cld
addr16
mov
and
pop
push
clc
add
shl
pop
mov
mov
fadd
jmp
lods
sub
imul
int
cwde
xchg
jbe
and
adc
iret
or
dec
fcom
inc
loope
pop
xor
add
pop
in
pop
sbb
loope
push
repnz
iret
bound
cmp
shr
out
or
xchg
sbb
popf
fsub
lock
mov
mov
push
out
out
mov
out
(bad)
repnz
dec
test
data16
and
ss
or
retf
add
xor
and
nop
aas
add
mov
arpl
add
mov
xor
push
stos
arpl
mov
data16
cwde
call
xor
mov
fsubr
ds
mov
pop
popa
mov
sti
add
jmp
cmps
ret
jno
push
loopne
xchg
mov
xor
daa
pusha
push
icebp
sti
adc
pop
je
retf
sbb
cmp
sahf
sti
inc
push
sti
jne
or
sub
ins
inc
jbe
repnz
add
cli
inc
sbb
mov
inc
dec
imul
dec
test
pop
inc
int3
mov
mov
loopne
outs
add
popf
pop
jmp
push
(bad)
test
sbb
mov
bt
sub
inc
mov
ja
daa
sub
iret
dec
mov
mov
imul
xchg
call
mov
cwde
jo
inc
mov
repnz
addr16
and
adc
test
add
hlt
pop
shl
mov
push
inc
test
pop
lahf
imul
pop
cmp
je
imul
or
stos
push
ins
xchg
or
fcomp
dec
nop
jg
inc
adc
loopne
mov
fld
or
fwait
add
push
aam
pop
sahf
fwait
push
add
fisubr
add
and
fcomi
bound
inc
cmova
jle
mov
mov
lahf
imul
and
cmp
out
(bad)
daa
push
std
or
scas
imul
and
lahf
mov
rol
loope
or
pushf
and
sar
ret
mov
sub
imul
ja
movs
jo
xlat
or
or
test
xor
jg
push
inc
out
outs
ja
into
movs
mov
lahf
cdq
nop
movs
push
test
xchg
push
aas
and
ss
rol
mov
and
pop
imul
dec
inc
sub
(bad)
cs
inc
test
stc
inc
and
in
mov
movq
sbb
push
adc
push
inc
out
mov
adc
ret
outs
inc
sub
xor
cmps
adc
es
xchg
shl
pop
xchg
xchg
mov
pop
std
in
mov
outs
sub
adc
icebp
scas
stc
cmps
loope
mov
(bad)
sub
cmp
or
hlt
add
and
ja
ss
out
jne
xor
add
rol
mov
movs
cwde
mov
and
jne
retf
jg
std
aaa
add
cmp
pop
adc
xchg
aad
xlat
inc
sbb
mov
pop
dec
std
inc
out
xchg
rcr
or
popa
pop
(bad)
js
mov
sbb
sub
cdq
scas
push
retf
add
hlt
pop
cmps
cld
or
dec
addr16
inc
mov
dec
in
imul
lea
mov
enter
addr16
je
out
pop
into
in
lock
mov
std
ins
jno
test
pop
mov
and
xchg
xor
je
jle
stc
gs
ins
xchg
push
sbb
fcmovnbe
cmc
pushw
mov
retf
out
and
shr
aam
(bad)
cdq
fild
shr
ja
cmp
les
adc
sbb
int3
xchg
aaa
xchg
(bad)
push
fnsave
jno
test
js
mov
adc
aad
push
or
movs
das
mov
std
jge
mov
and
out
(bad)
mov
inc
dec
test
hlt
push
mov
out
test
jmp
fldenv
adc
xchg
mov
clc
pop
push
lahf
(bad)
gs
repnz
sbb
dec
out
retf
sbb
das
pop
dec
xchg
sbb
outs
in
xchg
xor
push
fidivr
sub
inc
jnp
or
sbb
shl
and
add
cwde
jl
les
mov
xchg
dec
js
lods
iret
add
mov
in
cmp
cmp
adc
bnd
imul
push
movs
lods
jl
pop
mov
repnz
sub
aam
ja
sahf
mov
fld
or
ins
push
rcl
sub
fisttp
push
arpl
lea
add
sbb
les
shr
lea
out
out
lods
ja
stc
push
mov
cs
lods
repz
inc
inc
pop
enter
scas
jle
addr16
test
sub
out
dec
mov
pop
(bad)
mov
(bad)
and
rcr
cs
scas
loop
cmp
jae
mov
gs
jbe
dec
sti
fist
adc
movs
ret
xchg
xchg
and
or
add
inc
iret
jg
test
and
(bad)
movs
imul
cmc
inc
outs
loopne
xor
mov
rol
imul
cdq
mov
mov
ds
lock
and
mov
cmp
fisubr
inc
aas
xchg
test
dec
push
mov
jmp
xor
mov
sbb
add
push
sub
ret
rcl
call
mov
stos
les
and
ins
adc
ret
test
nop
sti
mov
test
jle
or
sbb
xor
outs
mov
mov
ret
mov
std
aad
mov
xor
jmp
fcomp
(bad)
ins
ins
jae
fnstenv
adc
(bad)
xchg
inc
(bad)
cmps
cmp
xor
add
xchg
adc
pushw
sti
push
les
(bad)
sysexit
or
iret
gs
in
shl
dec
repnz
pop
mov
cmp
xchg
out
movs
les
mov
fwait
mov
inc
xor
or
sub
nop
adc
loope
push
sti
mov
add
mov
fmul
cmp
rcr
push
cmps
pop
xor
gs
int3
sub
or
fcmovnb
cmp
stos
push
or
rcr
aas
or
xor
ficom
inc
sbb
aad
enter
mov
nop
outs
outs
cmc
inc
sbb
jmp
repnz
jl
sar
dec
clc
pop
fwait
les
cli
xchg
aas
loopne
test
cmp
xchg
pusha
xchg
js
jmp
lock
inc
lea
jecxz
or
popf
cmps
adc
xchg
fild
loope
mov
push
data16
sub
or
repz
jl
inc
jne
daa
loopne
test
mov
scas
xchg
push
jae
fcom
hlt
mov
scas
jnp
test
or
mov
push
retf
test
icebp
ins
add
in
ret
cdq
cld
(bad)
(bad)
adc
add
fdiv
push
sub
pop
adc
cmp
loope
mov
mov
mov
outs
add
dec
pop
and
fsub
repnz
in
xlat
sbb
dec
iret
fs
sbb
mov
stos
push
into
sbb
jnp
or
mov
out
mov
xor
mov
es
inc
fnstsw
mov
lahf
push
popa
cs
int3
inc
jmp
and
mov
out
push
ds
cld
jmp
fistp
mul
mov
sub
pop
pop
aad
cmc
adc
(bad)
out
shl
jbe
pop
retf
adc
pop
movs
push
pop
outs
(bad)
(bad)
mov
dec
mov
test
stos
jle
test
bound
mov
nop
loope
cs
es
mov
cmp
jbe
mov
sub
dec
loope
sub
push
adc
push
and
shl
push
inc
mov
mov
inc
pop
xadd
or
es
(bad)
mov
mov
sbb
daa
push
pop
ins
xchg
pop
ja
fnstcw
mov
test
fsub
lods
bound
adc
pop
cmps
sbb
loope
gs
dec
mov
jge
out
adc
daa
in
pop
jne
leave
sar
inc
retf
sahf
dec
mov
adc
mov
or
pop
and
es
cmp
jmp
cli
lahf
aas
cmp
mov
fnstsw
mov
xor
retf
popf
xchg
aaa
cmps
sbb
xchg
je
or
retf
xchg
popf
loop
ds
sar
scas
xchg
pop
xadd
loop
cmp
js
jbe
lock
ret
(bad)
push
mov
inc
ret
sub
xchg
sti
fldcw
cmps
fs
stos
lds
lods
xchg
lds
loop
shl
enter
rcr
cmp
fwait
jmp
les
inc
call
inc
sub
das
push
xchg
and
mov
inc
xlat
add
xor
xchg
out
adc
out
xchg
sbb
inc
scas
js
jmp
ins
aad
xor
mov
lea
dec
int3
jno
retf
es
fwait
sub
and
add
mov
pop
loop
ficomp
xchg
mov
lock
mov
inc
xchg
mov
in
js
and
int3
jge
mov
hlt
(bad)
sub
js
inc
std
lods
popa
add
cmp
mov
push
mov
fisttp
mov
or
inc
sub
push
push
sub
mov
(bad)
cmc
mov
pop
idiv
pop
leave
imul
iret
retf
pop
adc
int3
movlps
add
sbb
aad
int
xchg
dec
xchg
inc
cmc
cmc
in
(bad)
sbb
in
lods
sub
and
in
out
in
rcl
xor
xor
in
dec
jmp
xor
mov
hlt
ss
jbe
jmp
nop
cli
or
ror
mov
dec
and
mov
xchg
inc
push
xchg
inc
add
jno
jns
leave
(bad)
ins
xchg
sbb
lods
pop
lea
iret
xor
cmc
das
jns
imul
and
sub
stos
or
dec
sbb
xchg
ss
(bad)
fnstcw
into
fst
cmp
jmp
inc
loop
dec
(bad)
call
xchg
jl
stos
repz
mov
(bad)
jae
xor
add
ror
pop
shl
leave
sar
sub
push
mov
and
or
cmp
and
mov
push
scas
dec
pop
dec
mov
and
pop
sub
cmps
inc
neg
mov
and
out
pop
pop
add
push
aam
xchg
inc
fcomp
mov
sub
jmp
ror
fstp
fwait
cdq
mov
imul
outs
loop
mov
rol
nop
xor
out
xchg
mov
sub
jns
cmc
aaa
pop
xor
xor
xchg
neg
jb
(bad)
out
arpl
repz
lea
push
mov
mov
pop
xor
aas
mov
cmp
mov
sar
sub
jns
or
xchg
ror
push
repnz
sub
dec
pusha
inc
inc
ja
in
mov
jl
mov
je
mov
fistp
sbb
daa
stc
and
loopne
push
lahf
dec
in
or
inc
enter
ret
outs
and
push
out
movnti
or
outs
inc
shl
push
sbb
add
fcom
icebp
sub
retf
das
test
adc
mov
js
pop
adc
or
push
mov
dec
lods
call
or
inc
mov
dec
fild
rcl
inc
outs
inc
shl
lock
inc
out
and
adc
xlat
cmp
adc
xchg
mov
jno
ins
jmp
out
(bad)
imul
test
sub
add
in
fbld
ins
mov
mov
push
and
sbb
xor
movs
fs
(bad)
enter
(bad)
int
push
inc
pop
adc
adc
movs
add
(bad)
and
nop
adc
movs
xor
mov
fwait
lock
add
rcr
push
int
pop
adc
cwde
cli
mov
outs
aad
push
sbb
and
inc
mov
iret
push
xchg
mov
(bad)
frstor
push
and
fidiv
mov
mov
imul
test
arpl
cmp
loope
mov
stos
loopne
lods
pop
ds
imul
push
push
mov
cmp
nop
sbb
pop
outs
fwait
xchg
mov
ret
mov
or
xor
imul
mov
shl
xor
pusha
lock
stc
ret
cmp
adc
rol
ret
or
mov
mov
jmp
mov
inc
push
jmp
popa
mov
mov
shr
mov
jecxz
or
fwait
push
mov
add
and
xor
mov
xchg
and
ja
rcr
out
scas
jmp
xchg
std
dec
mov
test
cwde
pop
push
call
sbb
pop
or
sbb
cwde
xor
js
or
push
das
hlt
push
cmps
ret
push
out
(bad)
xor
ja
out
jns
and
cmp
icebp
loopne
push
sbb
add
(bad)
mul
aas
add
adc
call
inc
jmp
jae
movs
push
jbe
xor
sub
sbb
in
shl
arpl
mov
and
mov
cmc
jg
test
mov
mov
mov
inc
lahf
cmp
push
into
add
cld
xor
push
das
neg
inc
sbb
inc
add
adc
fnsave
arpl
add
adc
enter
sbb
stos
fcmove
shl
mov
mov
lds
shl
pop
xor
xchg
adc
scas
or
and
into
xchg
test
dec
xlat
(bad)
std
cld
out
pop
cli
xor
scas
xor
mov
mov
dec
sub
in
call
fwait
dec
ret
lock
push
add
pop
pop
test
imul
inc
pop
cmp
add
seto
sti
mov
adc
imul
scas
lods
xor
std
xor
cmp
pop
mul
mov
push
bound
and
pop
sbb
mov
ins
pop
std
pushf
inc
ins
aam
fldenv
push
into
lds
jmp
loope
or
(bad)
pusha
lea
dec
leave
jmp
cmp
xor
in
add
dec
js
jl
nop
not
sbb
out
aam
or
or
pop
pop
push
push
mov
sbb
adc
cmp
add
add
cmp
sti
mov
(bad)
call
mov
sub
add
pop
push
mov
cmp
xchg
mov
sar
adc
(bad)
rcl
into
push
adc
or
loopne
clc
ret
add
jae
(bad)
mov
mov
mov
pop
lods
aas
ret
xor
add
ret
ror
movs
aad
dec
int3
arpl
xor
cmp
mov
sti
mov
or
mov
mov
mov
jle
sbb
push
add
enter
push
cmps
cmp
std
mov
clc
inc
and
in
or
movs
dec
mov
dec
nop
push
(bad)
aam
push
sub
push
jle
out
add
call
je
fstp
data16
pop
push
mov
mov
xchg
jp
pop
out
loope
push
jmp
adc
sar
lds
or
js
retf
sbb
test
ret
hlt
retf
js
jg
mov
inc
pusha
repnz
ss
jg
sahf
in
sbb
lahf
push
stc
out
retf
add
popa
iret
into
mov
add
push
xor
push
mov
add
mov
xchg
hlt
adc
xlat
in
stc
std
jmp
mov
sub
repz
cmps
push
call
add
(bad)
aam
jb
stos
retf
stc
not
cmp
jbe
ficom
push
jg
dec
fistp
cs
mov
push
ret
dec
cmp
mov
out
inc
dec
clc
inc
mov
ror
(bad)
xlat
or
cmp
movs
mov
mov
js
leave
adc
shr
jmp
fneni(8087
out
adc
push
fwait
inc
dec
(bad)
fcomp
test
or
mov
add
sub
(bad)
jbe
inc
ror
test
sbb
or
outs
xchg
or
push
repz
dec
inc
dec
fwait
jbe
xchg
mov
pop
or
push
repz
lods
add
xchg
mov
jle
pop
add
jae
pop
xor
mov
sub
cs
(bad)
aam
(bad)
inc
mov
mov
cli
cs
outs
inc
jge
or
(bad)
into
or
xlat
adc
cmps
call
mov
imul
adc
dec
dec
fsubp
pop
fldcw
jno
sbb
push
or
sahf
sbb
xchg
sbb
jmp
adc
and
inc
mov
sbb
into
mov
scas
push
sub
outs
mov
cmp
pop
mov
fst
fstp
daa
sub
lahf
jmp
pusha
ins
sti
ja
out
sbb
cmp
jne
pushf
outs
clc
jne
cli
mov
cli
pmulhuw
fild
(bad)
test
lock
sbb
fistp
test
inc
mov
mov
adc
mov
sub
xchg
dec
push
push
les
clc
imul
das
das
jno
lods
aad
arpl
xor
int3
int
or
pop
adc
cmp
sub
int
inc
loop
enter
repnz
sbb
sbb
jno
lods
outs
inc
jmp
and
pop
aad
mov
inc
mov
fwait
leave
inc
mov
movs
shl
push
sub
gs
xor
xor
clc
cwde
dec
xchg
or
cmc
cmc
and
cmp
mov
mov
stos
ss
(bad)
pop
xchg
pop
add
fld
shl
fild
mov
sbb
add
shl
into
out
(bad)
(bad)
lods
outs
nop
xchg
dec
fadd
imul
and
cmp
cwde
push
ret
mov
push
je
jmp
pop
push
jp
fisub
push
loopne
push
pusha
xlat
cmc
mov
sub
adc
aas
sub
sbb
jge
inc
jnp
movs
mov
sbb
ss
push
xor
push
adc
mov
test
mov
ret
sbb
retf
test
xchg
adc
dec
inc
daa
mov
sar
cli
adc
call
xchg
xchg
fisub
movs
lahf
gs
jb
imul
jmp
repnz
mov
or
mov
pop
stos
outs
or
adc
push
lods
mov
sub
enter
pop
push
jb
mov
lock
movzx
fdivrp
stos
daa
cmp
cmp
mov
and
shl
jge
repnz
ror
ja
mov
xchg
push
cmp
inc
cmp
addr16
cmps
push
test
div
push
mov
(bad)
mov
xor
add
cmp
pop
mov
ror
jp
cmp
dec
lods
fld
pop
loop
dec
add
and
mov
fdivr
sub
cmp
xchg
test
pop
mov
mov
cmp
mov
mov
shl
or
sti
inc
bound
in
fs
pop
std
sub
jae
mov
xchg
xchg
arpl
dec
in
aaa
mov
test
jl
push
inc
jnp
(bad)
nop
mov
movs
sub
outs
popa
jl
movs
fsubr
je
shl
mov
jmp
das
mov
pop
aam
push
push
lock
in
popf
into
push
push
cwde
(bad)
ss
add
sub
mov
loop
ins
cmps
sub
jp
call
movs
cmp
sbb
movs
inc
cmp
lods
gs
sbb
jnp
and
scas
or
retf
inc
xor
je
cmp
and
std
dec
inc
add
pop
movs
mov
pop
mov
inc
sbb
es
call
adc
xor
out
mov
clc
ins
imul
ror
mov
dec
jl
mov
adc
xor
or
data16
add
dec
loope
sbb
mov
adc
sbb
jbe
push
in
int
mov
nop
movs
add
sbb
leave
(bad)
cli
sub
lahf
(bad)
imul
push
fcom
sahf
xchg
push
aas
dec
cli
cwde
mov
bound
inc
loope
adc
mov
loop
fs
jnp
ss
and
mov
not
neg
mov
jae
mov
or
std
(bad)
jecxz
sbb
jmp
adc
jmp
sbb
xchg
loopne
stos
push
imul
lods
jno
rcr
mov
loop
dec
adc
movs
aaa
(bad)
jae
mov
jp
call
test
pop
xlat
cmc
xor
cmp
popf
js
mov
cmp
pop
cmc
xchg
xor
xchg
cmps
mov
std
lods
mov
mov
leave
addr16
loopne
mov
retf
pop
push
mov
lock
xchg
or
inc
int3
ret
xchg
enter
add
inc
or
and
(bad)
adc
mov
cmp
imul
push
inc
iret
fsub
mov
push
popf
mov
and
and
adc
fcomp
pop
push
mov
push
nop
clc
jmp
jbe
mov
fcomp
js
jmp
sub
enter
xchg
pop
jnp
cdq
push
test
inc
jns
sub
imul
push
pop
mov
inc
(bad)
pop
mov
ins
push
inc
jecxz
mov
push
movs
jle
jbe
cmp
inc
movlps
and
int
ficom
jecxz
adc
loop
cli
sbb
cmp
sbb
into
and
test
outs
adc
out
shl
lea
test
hlt
mov
cmp
mov
arpl
sbb
int
jle
mov
cs
ds
mov
loop
jl
sti
shr
sbb
ret
mov
les
jp
add
pop
cmps
jg
sti
repnz
push
mov
fld
sti
push
daa
cmp
jns
hlt
mov
and
ret
cmp
xchg
jge
loope
xchg
mov
dec
dec
iret
cdq
or
cmps
pusha
aas
aad
ja
pop
dec
or
rol
inc
in
mov
pop
xchg
scas
ins
mov
push
mov
fadd
cmps
or
jbe
lock
rol
mov
dec
inc
sbb
sbb
sbb
add
inc
dec
dec
and
and
mov
int3
cs
xor
xchg
push
adc
adc
push
es
adc
adc
sbb
mov
cdq
mov
std
pop
outs
out
lds
mov
sub
fdivr
adc
jecxz
(bad)
sar
test
les
sub
xlat
addr16
mov
(bad)
sbb
lds
push
adc
xor
sar
mov
stos
loopne
xchg
sbb
mov
cli
neg
ins
cmp
and
(bad)
scas
pushf
test
in
(bad)
pop
jge
sub
(bad)
xor
cli
fs
repnz
jno
outs
cmp
push
scas
pop
jae
out
scas
jns
jl
ds
mov
shl
call
mov
push
sar
jae
ss
add
jg
push
xchg
mov
jecxz
or
je
and
xor
xchg
lea
in
ss
out
loop
lea
test
xchg
fidivr
cmps
mov
jne
stc
or
push
pop
retf
sub
ins
inc
mov
dec
pop
mov
popf
xchg
call
push
push
pusha
jo
inc
adc
dec
sub
and
xor
std
push
daa
outs
add
cmp
es
icebp
sub
mov
inc
rcl
nop
aad
or
nop
adc
loopne
or
movs
aam
pop
call
cmp
mov
into
retf
lea
int
or
mov
imul
in
mov
push
and
mov
dec
xor
pop
fcmovnu
mov
jecxz
dec
sbb
dec
lea
push
xchg
data16
cmps
mov
scas
sub
xchg
fistp
(bad)
dec
scas
rcl
movs
ds
movs
stc
jle
and
(bad)
push
jg
mov
iret
loope
call
inc
addr16
or
pop
xor
jmp
push
je
jnp
push
leave
std
mov
aam
xor
xlat
sbb
push
push
push
gs
jne
cs
push
aaa
push
inc
jo
stc
add
sbb
add
jne
lds
arpl
(bad)
lahf
mov
inc
and
psrad
das
xchg
sub
sti
lds
xchg
pop
mov
push
cmc
nop
or
iret
mov
jecxz
scas
push
or
add
lea
cdq
sub
fwait
(bad)
popf
push
push
sub
pop
push
fdivr
shl
push
sub
aam
out
call
cmc
cmc
jno
dec
ret
sub
(bad)
cmp
aaa
and
sar
cmps
cld
mov
cmps
ins
dec
sbb
daa
add
sub
cmp
jns
ja
pushf
mov
mov
push
or
jle
xor
daa
inc
in
adc
test
retf
dec
jmp
ficomp
std
dec
mov
xchg
sub
jb
sub
pop
push
add
iret
scas
rcl
adc
loop
ds
rol
rcr
imul
push
xlat
cli
div
imul
sub
inc
xor
or
mov
dec
push
shl
xor
inc
mov
xchg
xor
mov
stc
arpl
icebp
lods
xchg
out
pop
jb
cmp
mov
out
jae
mov
pop
jmp
xor
add
mov
dec
aaa
xchg
fimul
loopne
int3
in
push
cwde
dec
mov
in
pushf
cwde
daa
pop
in
mov
pop
mov
cmp
or
mov
jmp
in
cmp
loopne
mov
setge
scas
cli
sub
call
xor
jmp
cs
mov
push
sbb
mov
(bad)
mov
outs
hlt
add
jmp
dec
or
push
int
ret
sbb
cdq
es
dec
push
ja
mov
and
lods
repz
push
jns
pop
(bad)
push
push
bound
cmp
or
xchg
jmp
aad
mov
je
pop
mov
out
in
test
push
ror
pusha
stos
push
aam
xchg
add
sbb
imul
stos
or
cmp
or
stc
ins
inc
jg
ins
(bad)
or
push
je
fistp
movs
sbb
cmp
lock
shl
push
sub
mov
xor
icebp
sub
mov
dec
xor
push
and
sbb
sub
gs
loope
pop
mov
inc
daa
shr
jb
enter
lock
sbb
je
xor
xchg
test
adc
mov
inc
(bad)
icebp
pop
add
jl
or
enter
add
jo
loope
mov
daa
dec
ds
adc
icebp
jnp
xor
repz
in
or
sub
jnp
push
ins
pop
repz
retf
lahf
pop
and
adc
mov
push
mov
dec
sbb
inc
dec
cmp
std
jp
jae
(bad)
lock
ins
push
cwde
cmp
and
xchg
fstp
out
cdq
cmp
mov
dec
movs
addr16
push
xchg
sub
int
or
dec
or
cmps
mov
outs
bnd
xchg
ud1
mov
pushf
ins
pop
outs
ja
popa
pop
outs
and
leave
leave
in
jle
or
or
test
shl
fst
call
or
cld
mov
jns
test
cmps
ret
push
mov
cmp
mov
data16
or
jmp
mov
pop
sbb
aad
div
ret
cwde
inc
push
dec
mov
inc
(bad)
js
and
not
pushf
jge
jae
mov
add
je
cmp
sub
mov
mov
rol
or
and
mov
outs
cld
sbb
mov
mov
xor
pop
and
rcl
sub
add
jns
ja
cmps
popf
loope
out
dec
xlat
inc
add
dec
rcr
gs
jbe
xchg
imul
cmp
jne
add
dec
lds
fdivrp
leave
xchg
outs
retf
add
mov
adc
mov
fild
sub
ins
cdq
add
pusha
das
cmp
fdiv
fist
(bad)
loop
adc
xchg
int
movs
and
mov
pop
cmp
sub
mov
pop
push
loopne
push
add
jg
jmp
stos
repz
adc
push
sar
out
mov
push
sbb
mov
jmp
dec
pusha
aaa
ds
(bad)
scas
pop
sbb
add
xchg
push
or
jge
(bad)
js
mov
mov
lods
cmp
popf
jno
push
mov
cli
or
mov
add
jl
cmp
mov
ficomp
fsub
dec
push
dec
sbb
aad
cs
xor
imul
xchg
dec
pushf
mov
dec
(bad)
(bad)
loopne
(bad)
push
pop
jge
retf
jl
aas
std
out
dec
pop
in
add
xor
and
in
or
or
add
cmps
xor
sbb
push
pop
scas
push
xchg
movs
fisubr
outs
jp
xlat
mov
adc
dec
pop
repnz
xchg
cs
pop
out
add
adc
pusha
imul
ss
mov
leave
outs
xchg
lock
fldcw
sbb
bound
(bad)
ficomp
(bad)
jns
cmp
in
add
jmp
xor
adc
in
pop
mov
cmps
ins
sti
xchg
adc
xchg
cmp
fistp
or
sub
ret
mov
sbb
sti
sbb
ss
cld
adc
push
(bad)
sbb
or
rcl
lods
repz
dec
mov
jo
pop
mov
ds
clc
loopne
stc
loope
pop
push
xor
fcom
fs
xchg
pop
sub
push
jbe
pushf
into
emms
fmul
popa
(bad)
cmp
out
call
and
lods
push
icebp
or
inc
(bad)
jmp
pushf
jne
lock
dec
repz
mov
lock
sbb
lea
sbb
retf
cmp
movs
xchg
pushf
ror
in
stos
jo
in
or
mov
dec
les
aaa
pop
bound
loop
les
scas
cmps
push
outs
addr16
ret
xchg
xor
sbb
(bad)
fnstcw
jns
dec
ror
movs
nop
sbb
add
push
jae
repnz
shl
clc
and
mov
xchg
cwde
push
out
inc
bts
aas
pop
ja
and
js
out
dec
ins
mov
leave
stos
xor
int
mov
adc
lock
pop
ret
mov
mov
sbb
push
or
aaa
retf
and
neg
sbb
jp
jmp
mov
add
and
dec
ins
scas
add
neg
rcl
sub
dec
aam
pop
ins
jnp
mov
scas
test
ins
xchg
push
ret
jo
xchg
push
(bad)
sbb
push
mov
sahf
fidivr
test
push
(bad)
shl
(bad)
pop
aad
(bad)
outs
cmp
aaa
push
dec
mov
sbb
inc
div
push
xor
int3
push
arpl
stos
je
shr
call
je
cli
adc
mov
scas
or
mov
xchg
cmp
bound
push
in
repz
dec
(bad)
cmps
add
lods
push
mov
inc
mov
push
adc
ins
sub
mov
clc
mov
ret
sbb
ins
jp
sbb
or
mov
(bad)
movs
mov
lods
das
sbb
mov
in
mov
pop
dec
test
mov
xchg
mov
jo
retf
mov
js
cmp
adc
mov
and
ret
in
(bad)
sbb
out
stos
dec
push
rcr
cmp
icebp
stc
or
add
lods
ror
inc
sub
cs
imul
xor
mov
test
mov
lds
cmps
lods
cwde
xchg
or
mov
in
jbe
push
mov
jle
add
or
inc
xchg
adc
push
mov
cwde
push
ins
sbb
mov
(bad)
pop
rcr
dec
or
ja
into
shr
pop
xchg
xchg
dec
in
ins
fnsave
sti
lods
mov
mul
push
daa
jae
scas
mov
cwde
xor
push
and
pop
addr16
ds
in
rcl
aaa
dec
(bad)
aas
std
or
mov
cmp
and
ret
pop
sub
jne
sub
pusha
mov
mov
enter
test
or
xor
out
add
xor
dec
hlt
mov
test
pusha
popf
loopne
mov
mov
shr
lods
adc
test
jae
sbb
pop
or
aas
lods
in
push
in
mov
pushf
dec
je
(bad)
mov
scas
fs
jbe
mov
cmc
adc
stos
ins
call
sbb
jns
test
mov
mov
popa
aaa
test
inc
and
cmp
cdq
sub
pop
push
dec
push
xlat
sbb
add
cmp
cs
mov
dec
arpl
mov
addr16
out
int3
mov
(bad)
bound
add
test
sbb
fdiv
xchg
jle
xor
sbb
mov
dec
(bad)
dec
rep
cmp
lods
xor
pop
pop
jg
jle
mov
test
and
js
xchg
movs
cld
pop
xlat
jns
jecxz
mov
xchg
adc
(bad)
fcom
sub
daa
movs
das
mov
imul
sbb
int3
leave
or
sub
jbe
outs
movs
aas
dec
leave
fcomp
push
jmp
(bad)
xchg
mov
cmp
(bad)
sahf
jne
sub
cmp
fisttp
aas
popf
mov
dec
fdivrp
xor
xchg
cwde
out
jge
mov
movs
mov
leave
popf
mov
sub
shl
mov
inc
pop
dec
xor
iret
stc
inc
mov
and
sub
dec
lea
and
mov
or
pop
(bad)
cmp
and
test
xchg
inc
push
mov
std
fild
pop
or
test
cmp
aaa
rol
mov
mov
jle
inc
sbb
lds
add
mov
int3
jb
dec
lock
aam
dec
and
gs
or
pop
cmp
add
lock
sub
adc
cmp
xchg
push
aam
int
pop
cmp
mov
lahf
adc
dec
cmp
ficomp
test
shl
es
add
mov
sbb
fist
sbb
ds
das
(bad)
pop
push
cs
push
adc
(bad)
imul
and
or
fisub
jmp
aas
dec
mov
shl
nop
adc
iret
mov
out
jb
dec
in
or
cwde
ret
sbb
dec
xor
lea
clc
bound
adc
lahf
repz
sbb
jp
pop
jge
pop
in
nop
jae
rol
shl
cli
jge
ficomp
mov
mov
pop
jo
inc
(bad)
or
mov
add
xor
sub
and
aaa
sahf
mov
out
add
mov
push
adc
cmp
mov
(bad)
adc
pop
pop
fld
call
dec
into
mul
imul
cmp
gs
fs
call
(bad)
retf
sub
test
push
(bad)
movs
sar
outs
lods
mov
in
mov
(bad)
mov
and
test
out
pop
in
pop
(bad)
mov
mov
enter
pop
shr
mov
jno
lods
push
ds
xchg
aaa
push
or
and
adc
xchg
lods
sar
gs
add
pop
mov
inc
stos
outs
mov
push
fild
aam
lods
cli
stos
arpl
(bad)
jmp
cmc
rcr
sahf
das
pop
xor
les
adc
pop
xchg
mov
nop
adc
xchg
movs
in
jno
add
xor
dec
cmp
lahf
or
out
adc
test
pop
(bad)
sbb
(bad)
jb
push
pop
cli
pusha
adc
adc
jno
pop
cli
in
push
icebp
(bad)
xchg
pop
push
stos
sub
jecxz
jmp
push
and
cmp
test
xchg
adc
bound
push
inc
lds
je
inc
enter
shr
sub
jmp
stc
or
fdiv
in
aaa
sbb
dec
mov
or
clc
outs
iret
mov
popf
xchg
iret
sbb
or
jmp
jp
or
jo
mov
push
test
add
retf
jo
call
mov
mov
mov
adc
mov
push
daa
mov
pop
add
add
and
cmp
adc
fst
mov
fcom
rol
inc
sub
shl
into
and
mov
aas
call
sub
mov
dec
dec
ins
dec
cdq
dec
inc
aaa
or
fisttp
xor
ret
shl
inc
inc
xlat
dec
cmp
adc
aam
mov
dec
inc
mov
pop
mov
in
retf
jns
test
pop
jp
icebp
sar
retf
xor
(bad)
add
jge
inc
mov
(bad)
sar
jmp
jae
cmp
in
mov
sub
sbb
mov
mov
xlat
dec
in
xor
xlat
out
loope
push
pop
mov
rol
fwait
js
mov
mov
rcr
add
pop
ja
popa
test
sbb
jg
in
lods
adc
or
into
outs
push
js
fcomi
sbb
pusha
adc
ins
std
mov
pop
rcr
sbb
sbb
fnstsw
cmp
add
add
ss
pusha
sar
push
aad
add
sbb
pop
dec
ret
mov
mov
imul
push
push
sti
ins
inc
in
xchg
push
daa
ret
das
push
(bad)
out
rol
popf
pop
pusha
cmc
imul
add
dec
test
jge
adc
push
iret
xor
ja
loop
out
cmp
mov
(bad)
cli
or
test
push
enter
and
(bad)
pop
jno
les
fiadd
pushf
fwait
jo
nop
xlat
fstp
ss
adc
ud2
pusha
aad
hlt
push
daa
out
xor
test
js
(bad)
out
movs
pop
test
jecxz
add
pop
movs
mov
fisubr
add
push
dec
out
push
iret
lahf
aas
cwde
mov
loopne
push
or
leave
sbb
mov
pop
or
ret
cli
xchg
mov
inc
or
call
xchg
ja
cmp
or
ror
mov
mov
je
mov
(bad)
jmp
cmps
cmps
jmp
scas
fisttp
xchg
dec
int
cmp
test
adc
or
xchg
fnstcw
mov
jl
jne
dec
push
test
pushf
and
mov
push
lods
xor
cli
jmp
pusha
(bad)
sbb
jne
sbb
push
mov
test
xor
add
div
pop
ds
dec
popf
popa
jbe
stc
cdq
push
jae
hlt
(bad)
retf
sbb
push
movs
inc
cdq
adc
xor
addr16
xchg
pushf
sbb
test
cmc
dec
add
in
jmp
mov
mov
xor
add
outs
enter
rcl
or
sbb
hlt
sbb
cmp
ds
add
inc
push
mov
in
mov
and
fst
int3
dec
nop
mov
mov
pop
icebp
and
rol
shr
pushf
mov
sbb
jmp
rcr
mov
dec
je
inc
std
lods
dec
mov
inc
popf
add
loopne
je
lar
hlt
aad
sbb
mov
pop
fadd
cdq
jle
cwde
aad
adc
xchg
test
cmc
lds
or
sti
ds
inc
adc
outs
fistp
in
(bad)
ins
mov
jae
and
inc
cli
cmp
fisubr
sub
test
addr16
push
fwait
ds
and
in
in
int
cmp
sub
call
call
fldlg2
test
mov
xor
inc
xlat
movs
cmp
mov
jmp
mov
mov
mov
or
popf
popa
arpl
xchg
clc
sub
lahf
push
(bad)
or
xor
push
hlt
adc
(bad)
sahf
aaa
fidivr
int
js
mov
mov
daa
mov
pop
aas
shr
inc
ret
mov
jp
sbb
clc
lock
add
aas
ret
out
into
add
rcr
push
push
(bad)
xchg
adc
fadd
push
and
(bad)
lea
mov
jl
push
xchg
out
mov
pop
(bad)
test
xor
pop
out
cs
adc
and
test
jb
fiadd
shl
pop
jne
aam
sbb
jge
mov
or
inc
call
inc
ret
addr16
xchg
cs
and
push
sbb
inc
test
ret
add
aaa
fs
fwait
icebp
mov
stc
daa
test
or
pop
add
cmp
imul
test
adc
cmp
dec
fisubr
fnstsw
je
adc
add
fisttp
dec
retf
inc
push
shl
xor
xchg
add
sub
mov
aad
cmps
xchg
inc
or
or
fnstenv
add
inc
jmp
pop
pop
sbb
je
cmp
iret
and
mov
popa
lods
jns
shl
inc
sbb
aam
cmp
ror
mov
loope
repz
push
jno
popf
push
pushf
and
gs
daa
push
xor
mov
icebp
pop
mov
mov
(bad)
xchg
gs
jb
or
leave
ret
lahf
sub
das
dec
jg
sti
shl
xor
and
lods
popa
dec
and
fadd
ins
jmp
adc
into
inc
shr
sbb
or
leave
fwait
out
in
ror
jl
repnz
inc
adc
pop
push
stc
addr16
aas
mov
mov
popa
push
aaa
(bad)
ror
rcr
aam
inc
sbb
adc
dec
cmps
and
sub
shl
cmp
test
sub
push
pop
test
fwait
inc
(bad)
xchg
test
repnz
(bad)
cmps
(bad)
adc
call
pop
pop
inc
ficom
scas
out
or
pushf
inc
sub
enter
sub
dec
add
shl
push
mov
sub
mov
or
cmp
dec
lods
or
outs
dec
push
jo
adc
mov
jbe
ss
ins
fs
je
repz
add
cmp
stos
dec
pop
sbb
pop
add
fsub
icebp
cwde
ja
fcmovu
sub
sub
or
mov
jb
out
inc
nop
dec
frstor
(bad)
cmc
lea
data16
lods
mov
pop
sbb
test
pop
and
xor
pop
adc
imul
imul
(bad)
ss
cli
lds
mov
sbb
out
xlat
clc
xchg
pusha
dec
arpl
imul
jmp
cmp
cs
js
pop
mov
popa
loopne
sahf
jmp
and
call
pop
call
sub
aad
mov
fadd
pushf
jmp
mov
mov
icebp
stc
fldcw
sbb
sahf
xchg
movs
ror
rcl
xor
(bad)
jb
inc
aas
fadd
adc
xchg
xor
xor
push
or
loop
lahf
stos
inc
fidiv
(bad)
mov
test
loop
test
iret
jecxz
sbb
imul
out
dec
sbb
dec
jmp
sbb
ins
add
pushf
dec
push
(bad)
out
fistp
in
dec
xor
sub
cmc
mov
das
push
inc
movs
and
ds
add
cmp
ror
nop
xor
repnz
cs
je
repz
lods
mov
cdq
sub
inc
test
push
add
mov
mov
push
jns
xor
ret
stos
and
fstp
pushf
(bad)
out
bound
stc
dec
cmp
pop
and
mov
xchg
mov
jecxz
cmp
sub
rcr
or
adc
jnp
(bad)
mov
mov
sub
inc
fcomp
sub
ins
ficom
lahf
jmp
adc
dec
icebp
pop
(bad)
pop
stc
call
or
cmp
in
inc
jg
jne
es
cmp
fcomp
mov
xor
lahf
cmp
jg
sub
(bad)
outs
xor
daa
or
push
pop
and
aam
je
shr
pop
bound
add
cmp
es
fwait
cmp
cs
pop
and
out
(bad)
pop
sub
out
dec
sbb
push
xor
dec
and
mov
in
push
js
test
sub
das
mov
push
push
out
jo
add
cmps
mov
inc
pop
sub
xchg
out
not
push
adc
fucom
xchg
ins
into
call
sub
and
pop
push
sub
jno
cwde
jns
gs
ins
pop
jnp
jmp
inc
jmp
fld
clc
or
outs
xlat
cs
pop
mov
(bad)
das
and
and
jmp
dec
outs
dec
(bad)
jl
movs
js
leave
je
sti
push
int3
sahf
and
add
mov
xchg
mov
xchg
rep
sar
cs
add
sub
adc
rcl
js
lods
fstp
jmp
out
sub
pusha
mov
xlat
xlat
push
loope
fiadd
jl
popa
cmp
jge
arpl
stc
or
mov
sub
xor
jbe
shr
(bad)
or
rep
sbb
xchg
fisub
sbb
mov
mov
fwait
ret
addr16
adc
mov
mov
cs
ror
or
or
stos
dec
mov
pop
xchg
daa
jl
push
mov
out
sub
(bad)
ret
fidiv
outs
test
fstp
adc
rol
cmp
mov
jbe
mov
sbb
jno
shl
mov
inc
(bad)
jns
ins
stos
fidivr
out
movs
adc
inc
and
jne
xchg
or
mov
shl
femms
lahf
(bad)
fcomp
in
add
inc
movs
addr16
mov
xchg
fisubr
fwait
jo
in
push
fild
ins
and
sbb
inc
xor
ret
or
(bad)
mov
or
outs
dec
mov
sbb
xor
lods
jl
pop
dec
adc
ins
in
cli
xchg
sar
retf
test
mov
cdq
mov
stos
push
jb
fdivr
lods
xchg
add
rcl
xchg
shl
loopne
and
lea
out
adc
cmc
in
fbstp
xchg
push
push
std
js
sbb
rep
or
xor
(bad)
mov
xchg
dec
adc
jo
xchg
inc
mov
xchg
mov
outs
mov
or
add
fsub
adc
vxorps
fld
and
mov
xor
xchg
test
aas
or
cmp
sahf
pop
push
das
sub
mov
jno
loope
cmps
xchg
jnp
inc
cmp
cmps
jne
cmp
xor
popf
xor
cs
xor
dec
lea
inc
sub
mov
mov
rol
adc
xchg
mov
aas
mov
popf
test
adc
dec
mov
lods
or
mov
addr16
aas
shl
test
or
jl
rcl
sahf
cld
sbb
add
pop
sub
or
mov
inc
out
ds
int
mov
sbb
push
inc
mov
xchg
or
push
jae
xchg
jge
call
nop
jg
pop
or
retf
int
hlt
pop
jae
inc
push
xchg
hlt
mov
idiv
or
add
repnz
mov
scas
leave
cmp
int3
mov
ins
(bad)
aam
lods
sti
push
popf
jecxz
lahf
div
stos
mov
pop
ins
neg
dec
addr16
into
scas
jle
sbb
mov
(bad)
adc
lds
arpl
push
pop
cmp
or
mov
(bad)
call
xchg
adc
popa
test
push
dec
jo
mov
mov
clc
aam
pop
(bad)
out
test
out
jb
jp
cmp
pop
jl
xlat
sub
or
xlat
in
pop
arpl
and
sbb
stos
push
xchg
fidivr
jmp
imul
popa
test
push
xor
(bad)
mov
cmp
pop
fistp
movs
or
lock
cmp
sub
loope
mov
inc
pusha
popa
xor
(bad)
ins
inc
xchg
xor
xchg
loopne
xchg
push
mov
push
dec
jg
jmp
movs
int
xchg
inc
mov
stos
lea
popf
enter
add
pop
call
mov
dec
jge
lock
out
inc
sbb
std
sub
adc
inc
iret
xchg
jno
mov
cli
ret
mov
das
ret
inc
mov
mov
mov
retf
loop
mov
dec
xchg
mov
pop
jnp
test
pop
jp
mov
jmp
inc
cmp
adc
les
call
ret
aad
icebp
mov
mov
or
dec
sahf
or
dec
sub
pop
sub
add
es
aad
pop
push
pushf
inc
aaa
mov
xchg
std
jge
or
sbb
call
(bad)
lods
imul
ss
fs
jecxz
dec
ret
jmp
and
ins
inc
mov
std
cdq
sbb
test
in
and
arpl
pop
xor
push
retf
jb
and
xor
pop
dec
inc
xor
outs
lea
cmp
imul
cmps
ret
cmp
xchg
push
jle
test
jno
mov
mov
and
dec
cmps
repz
js
sbb
inc
lods
js
or
xchg
ror
sub
nop
xor
mov
not
cmp
xor
clc
(bad)
retf
in
inc
aad
sbb
cmp
sbb
pop
ja
inc
sub
scas
popa
call
cwde
cmp
int3
or
js
out
add
dec
pushf
cmp
(bad)
jg
mov
or
adc
enter
xor
out
jmp
pop
push
daa
jb
sub
sbb
test
(bad)
packsswb
mov
or
push
push
inc
aam
lock
adc
cld
inc
pop
aas
sbb
outs
or
pop
add
ret
lods
mov
(bad)
out
std
push
cmp
in
sbb
mov
jae
arpl
and
aas
ret
sub
pop
jno
test
inc
cmps
push
nop
adc
test
scas
je
sti
out
lfs
popa
les
ja
dec
cmc
imul
mov
pop
adc
add
xchg
xor
jns
retf
jle
push
das
jle
test
xchg
sbb
dec
dec
dec
push
mov
call
outs
and
cld
(bad)
jnp
lock
inc
and
cmp
add
or
cmp
test
jl
add
adc
dec
and
mov
dec
int
mov
into
test
loopne
aaa
pushf
sbb
inc
psrlq
xor
(bad)
mov
and
fcomp
and
bnd
inc
sub
aad
mov
dec
and
bound
xor
push
mov
call
fidiv
adc
loop
adc
pop
fwait
or
sbb
cli
cld
fdiv
loop
(bad)
sbb
jmp
mov
(bad)
pushf
push
daa
adc
pop
in
sbb
mov
dec
adc
add
ins
fist
call
(bad)
retf
popa
add
test
pop
(bad)
imul
push
bound
xchg
push
inc
ror
in
dec
inc
mov
sbb
mov
enter
inc
mov
stos
imul
mov
dec
outs
cli
mov
retf
push
cmp
mov
inc
sbb
jp
mov
pop
mov
mov
jge
je
fst
mov
xchg
dec
std
lods
(bad)
fldenv
sbb
out
cmps
rol
test
mov
aas
cli
mov
shr
sbb
jnp
dec
and
retf
and
adc
sub
mov
cmp
add
std
pop
inc
cmp
mov
iret
jge
and
fbld
cwde
popa
lods
cmp
inc
push
pop
call
aam
lds
lea
(bad)
in
mov
outs
daa
sbb
cmps
sbb
sub
test
mov
clc
xor
cs
aam
add
xchg
add
push
sub
and
in
inc
xor
hlt
push
jmp
inc
std
out
inc
inc
xchg
leave
retf
lock
push
push
fimul
xor
mov
aaa
repnz
mov
pop
les
stos
mov
movs
or
and
inc
push
shl
pushf
ror
and
xor
xchg
mov
mov
das
xchg
jmp
xchg
sbb
dec
add
push
pushf
cmp
aad
push
xor
popa
enter
outs
loop
hlt
jmp
test
out
arpl
mov
xor
sbb
xor
push
imul
(bad)
push
xor
cld
ret
ret
movs
shl
into
aad
mov
aas
jbe
jb
enter
enter
xchg
fild
movs
pop
xchg
leave
ds
cmp
ret
retf
mov
inc
dec
mov
xlat
cmp
call
clc
push
clc
pop
jecxz
test
cmps
jbe
xor
push
push
push
in
jmp
addr16
adc
and
je
jo
test
dec
ss
or
sbb
in
loope
in
int3
jp
jmp
mov
in
int3
xor
dec
sub
mov
test
dec
ret
fbld
inc
cdq
retf
out
inc
adc
div
or
ror
mov
jnp
(bad)
jecxz
push
xor
inc
and
jg
jo
iret
out
rcl
out
xchg
dec
in
aas
and
push
scas
inc
and
jg
nop
jg
idiv
sub
aas
cld
in
icebp
inc
and
jmp
sahf
bound
mov
cmc
imul
ins
push
pop
pusha
or
cmp
cs
push
dec
and
or
add
setbe
fcomp
popa
(bad)
movs
fdivr
mov
jge
xlat
cmp
lock
sbb
or
mov
in
popf
fmul
fdivr
cdq
sbb
out
(bad)
or
call
ja
sbb
mov
xchg
jmp
ret
ss
jp
popf
mov
xor
mov
movs
lea
inc
mov
ret
stos
xchg
jmp
int
setge
add
xor
mov
mov
lds
les
clc
loope
inc
shl
mov
adc
push
xchg
push
jmp
call
jb
mov
push
loope
in
xchg
cmp
aas
jp
bound
test
aaa
ss
(bad)
cs
dec
xor
sub
ds
int3
cmc
pop
call
call
mov
inc
xchg
sti
fimul
call
add
frstor
bound
icebp
jmp
dec
sbb
ins
ja
pop
sahf
pop
ins
add
sbb
jmp
dec
(bad)
dec
sbb
jg
sub
dec
lods
add
in
inc
adc
loopne
lock
cmps
jnp
push
popf
repnz
popa
inc
adc
loopne
scas
xor
(bad)
cld
hlt
mov
ja
sub
push
stos
add
cmps
mov
add
lods
enter
add
sub
inc
cmps
jno
imul
cmp
cld
(bad)
or
movs
(bad)
cmps
dec
(bad)
cmp
mov
std
dec
mov
add
push
and
aas
fs
xchg
not
xor
mov
mov
sar
add
cmc
xchg
add
mov
cdq
mov
jmp
fcomp
shr
cmp
adc
mov
or
fsub
adc
dec
sahf
dec
push
mul
outs
dec
je
push
xchg
dec
sti
add
repnz
cdq
xchg
jmp
jp
out
inc
fld
inc
adc
jmp
dec
clc
xchg
and
aaa
mov
call
(bad)
adc
or
mov
adc
(bad)
movs
mov
aas
xchg
mov
(bad)
pop
jp
(bad)
and
xchg
or
in
iret
jmp
push
dec
aad
loop
sub
jno
setle
ret
fisttp
cli
cli
xchg
inc
sar
shl
ins
neg
cmp
in
xor
lods
pop
cmp
mov
cdq
dec
(bad)
jns
push
fcmovu
jge
(bad)
shl
(bad)
lahf
and
(bad)
pop
cdq
jle
add
push
loop
mov
xor
in
fwait
add
mov
retf
pop
mov
mov
cwde
mov
cwde
aad
out
xor
bound
in
sub
push
sar
pop
daa
adc
(bad)
sti
mov
mov
lods
lahf
mov
fwait
sbb
mov
add
push
dec
mov
cld
push
push
(bad)
push
inc
dec
stos
fst
loope
stc
aaa
cmp
dec
fs
xchg
mov
sub
pop
and
lock
or
cmc
mov
inc
mov
add
test
push
mov
or
or
mov
lahf
adc
sub
pop
dec
shl
push
test
pop
pop
cmps
xor
inc
ds
stc
inc
mov
shr
(bad)
call
into
icebp
xor
es
fcmove
fild
or
sub
data16
sahf
cmp
repnz
push
stos
nop
sub
sub
mov
dec
inc
movs
aas
fbld
ins
dec
cmp
scas
xchg
mov
dec
leave
les
inc
add
xor
das
fwait
dec
mov
pop
nop
leave
inc
xchg
popf
jns
shr
nop
xchg
inc
xor
in
gs
scas
add
push
cmps
sbb
mov
dec
stos
add
popa
(bad)
cmps
imul
in
pop
jmp
mov
lds
xchg
xor
maxps
push
xor
adc
enter
mov
inc
xchg
dec
stc
pop
mov
mov
outs
fmul
psrad
inc
push
test
mov
jno
addr16
mov
adc
lahf
mov
popf
movs
jge
sbb
rol
icebp
fwait
mov
int
repz
xchg
fs
mov
lock
das
mov
lea
pop
aas
mov
dec
fisubr
in
shl
push
pop
fisttp
mov
sbb
mov
jns
cmps
jl
push
scas
daa
retf
loop
sub
dec
(bad)
and
xchg
movs
mov
outs
sub
inc
rcr
shr
push
inc
je
adc
(bad)
sub
(bad)
cmp
inc
pop
xchg
mov
push
idiv
shr
fwait
addr16
sub
imul
push
dec
rol
xor
(bad)
je
mov
dec
cli
xchg
xor
push
shr
sbb
mov
xchg
test
cdq
pop
arpl
xor
sub
push
in
fcomp
xor
sub
push
mov
inc
xchg
jge
mov
xchg
dec
pushf
gs
shl
pop
(bad)
pop
inc
xor
mov
pop
sbb
inc
pop
(bad)
fs
std
aam
adc
sub
aad
jl
or
mov
adc
jge
loopne
pop
cs
xchg
fiadd
retf
adc
dec
(bad)
jl
jp
in
add
movs
ret
and
outs
imul
mov
sar
clc
(bad)
xchg
outs
cmps
test
jecxz
sar
ret
aam
retf
popf
mov
jbe
dec
cmp
repnz
daa
mov
test
sar
sub
inc
nop
push
lods
mov
icebp
sub
mov
push
jae
push
shl
ret
jno
dec
mov
fs
sub
add
in
retf
pusha
fsub
fcmovbe
mov
xchg
test
jae
xchg
int3
(bad)
bound
pop
outs
inc
push
cs
movs
adc
gs
mov
pop
aas
arpl
inc
cwde
sbb
adc
int3
push
adc
aad
aas
mov
imul
ja
sub
sbb
pop
push
xchg
stos
sub
mov
(bad)
xor
add
daa
jns
xor
retf
in
fwait
(bad)
aam
jmp
mov
cmp
fsubr
call
cmps
inc
nop
adc
adc
fld
mov
jecxz
jmp
je
sahf
dec
or
shr
mov
jne
add
test
jae
call
aaa
out
gs
js
push
jl
fld
jl
xchg
pop
mov
fdivr
push
and
fcom
push
pusha
xor
je
test
lods
iret
jge
hlt
and
iret
xor
mov
add
pushfw
je
in
stos
xchg
clc
jg
mov
pop
jb
pop
adc
cmp
cs
fadd
test
and
jmp
das
lahf
inc
pop
sbb
mov
out
mov
mov
sbb
mov
sub
pusha
out
xor
outs
inc
stos
nop
add
aam
xchg
mov
sub
lea
cmp
mov
scas
jo
shr
xor
stos
sar
out
push
jp
inc
in
inc
adc
repz
pop
mov
dec
or
jmp
ds
mov
mov
(bad)
loop
xchg
out
sahf
add
(bad)
aam
sub
mov
in
jge
ret
push
sti
sub
jbe
imul
lahf
imul
pushf
and
add
inc
add
fidiv
(bad)
inc
add
leave
pop
nop
fisttp
mov
ds
pop
mov
in
xchg
jnp
stos
sbb
jge
sbb
ins
int3
int
sub
xor
xlat
jb
leave
mov
ins
jmp
jbe
or
sahf
out
jns
push
mov
es
xor
jo
test
iret
pop
cdq
jecxz
fs
pop
test
fld
jno
rol
inc
in
adc
test
jecxz
jmp
add
fst
dec
icebp
stc
fcom
xchg
pop
dec
mov
inc
fmul
inc
nop
(bad)
xchg
je
pop
test
cmc
loopne
shl
mov
dec
stc
jbe
enter
xor
xlat
xlat
movs
ins
dec
push
xchg
into
dec
shl
dec
xchg
jo
or
mov
push
sbb
sbb
xor
and
mov
ror
lea
and
jno
mov
(bad)
xchg
and
xchg
dec
les
mov
mov
sub
jmp
push
push
and
add
cwde
retf
inc
fadd
pop
sbb
and
or
test
inc
out
scas
dec
out
imul
call
xor
test
dec
(bad)
sub
xchg
loope
movs
sub
or
sahf
shl
call
mov
test
les
push
shr
fimul
fdivr
sahf
lea
jnp
repnz
mov
mov
sub
outs
adc
stc
pop
ret
inc
stos
mov
cli
jecxz
jl
cmp
and
enter
sar
retf
xor
enter
jecxz
(bad)
add
inc
jb
push
(bad)
adc
cwde
es
sbb
mov
push
mov
test
sub
cwde
pop
mov
rol
outs
cmp
dec
inc
mov
ds
dec
or
xchg
pop
ins
mov
rcr
fld
dec
inc
dec
mov
ins
xchg
pop
sbb
inc
ds
into
inc
cmp
xor
xlat
mov
inc
int3
mov
pop
mov
pop
mov
jmp
mov
mov
lahf
pusha
cmp
push
add
xlat
out
sub
push
mov
sbb
or
cmps
loope
popa
aad
mov
in
cmc
outs
mov
xor
cs
jecxz
push
mov
pop
push
stc
xor
mov
or
and
add
pop
jmp
ror
push
fnstenv
add
jle
dec
xchg
sub
inc
cmp
mov
cmps
repnz
mov
mov
stos
xchg
outs
cs
mov
stos
jno
xchg
mov
push
and
sub
es
pusha
icebp
je
mov
rcl
xlat
cmp
sub
out
aad
repnz
clc
movs
sbb
push
sbb
sbb
test
test
in
shl
lods
mov
inc
jp
mov
adc
stos
loopne
fsub
icebp
dec
jne
gs
mov
push
mov
cmp
ins
pushf
(bad)
inc
and
mov
mov
call
addr16
mov
add
rol
addr16
(bad)
fdiv
addr16
arpl
retf
jmp
xor
cmp
(bad)
jg
leave
out
movs
bound
add
and
mov
inc
test
cdq
mov
stc
sbb
(bad)
pop
mov
add
lods
sub
data16
out
jp
xor
call
cli
xchg
mov
fisubr
mov
sub
xor
xor
lods
mov
out
mov
int
mov
dec
js
cmp
(bad)
idiv
mov
mov
(bad)
int
push
fst
jecxz
aaa
push
(bad)
arpl
cmp
mov
lds
push
aad
(bad)
leave
test
mov
sub
pusha
mov
push
and
push
fild
ret
cmp
call
mov
cs
cmps
test
sbb
cmp
test
jge
xchg
enter
and
call
or
out
push
lahf
das
jae
das
dec
add
fidivr
dec
vmread
iret
add
and
dec
mov
aas
sub
mov
daa
sbb
cmc
mov
movs
adc
jo
loopne
popa
adc
fcomp
or
imul
pop
inc
xchg
dec
pusha
sbb
cmp
cmps
inc
mov
mov
call
mov
sbb
sbb
(bad)
jne
push
mov
jns
adc
stc
pop
outs
leave
aam
(bad)
add
retf
pop
xlat
pop
sbb
in
ss
ds
(bad)
leave
cli
cmc
sbb
iret
inc
xchg
clc
pop
ins
fwait
arpl
jge
push
imul
jmp
outs
xchg
xchg
in
in
icebp
add
add
out
loopne
bnd
mov
sub
ret
mov
rol
cli
inc
imul
jle
mov
xchg
mov
aaa
mov
call
xor
xlat
aad
ins
add
sbb
fist
mov
xor
mov
shl
jmp
push
aas
sbb
cmp
adc
xor
xor
push
xor
mov
xchg
retf
mov
add
pusha
ror
ins
in
xlat
jp
shr
dec
ds
push
leave
cwde
imul
jb
leave
push
int3
lds
dec
stos
adc
mov
jae
arpl
scas
aas
in
mov
dec
mov
push
call
mov
pop
neg
add
push
clc
mov
neg
sbb
cli
or
push
iret
xchg
lds
pusha
cwde
inc
and
xor
rcl
sysret
and
jmp
xchg
cs
xchg
test
call
mov
fimul
neg
cmp
aam
lea
das
movs
sub
push
mov
inc
sbb
inc
aad
add
cmps
xor
xchg
jle
movs
xchg
adc
jecxz
mov
sbb
repnz
das
mov
sbb
sbb
pushf
out
pop
jnp
mov
push
sbb
(bad)
xchg
ret
fdivr
sbb
repnz
push
inc
daa
clc
pop
and
xor
or
push
cli
cld
xchg
fidiv
adc
add
aam
xor
cld
push
pop
loop
sahf
test
cmc
(bad)
(bad)
scas
sub
stc
and
mov
addr16
xchg
popf
ds
sbb
mov
in
lds
adc
lea
pop
dec
iret
mov
jl
mov
loopne
jmp
jne
add
add
movs
loopne
cmps
icebp
and
lea
mov
pop
xchg
mov
cdq
adc
sbb
mov
or
stos
sahf
pop
mov
mov
das
adc
cld
xor
pop
push
loope
cli
sbb
xchg
ffree
jns
dec
ror
pop
sar
xor
mov
jl
aaa
adc
ins
mov
sbb
pop
or
loope
ins
adc
ret
mov
dec
inc
fadd
dec
jo
xchg
xlat
ins
cld
mov
ins
xchg
or
pop
scas
das
xchg
call
loope
mov
add
cli
pop
xor
fstp
repz
call
mov
pop
loopne
js
mov
fsubrp
xor
movq
xchg
cmp
rcl
mov
and
mov
mov
fild
push
sbb
sbb
loop
xchg
outs
pop
add
lahf
jmp
jnp
fstp
xchg
push
or
add
jb
mov
mov
sbb
lock
inc
sbb
popf
add
inc
and
cdq
push
movs
mov
ret
dec
or
cwde
popf
in
pop
sub
or
popa
jae
cmp
js
fisub
sti
cmc
ds
pop
shr
mov
jecxz
xchg
nop
fiadd
pop
ja
enter
gs
jmp
loopne
jno
int3
pop
or
xchg
popfw
mov
je
cli
xor
movs
xor
ss
mov
enter
pop
mov
lds
jns
(bad)
sar
mov
mov
test
jbe
jg
push
pop
ss
add
pop
push
add
imul
or
sti
xor
ins
ja
repnz
fnstsw
sub
pop
pop
je
dec
cs
or
mov
fnstenv
inc
or
ins
ret
sub
lods
or
out
or
mov
inc
sub
fidiv
in
jo
sub
add
or
cli
add
jp
dec
into
aam
cld
repnz
ret
adc
add
sub
stos
lods
(bad)
mov
ins
scas
mov
fisubr
sub
mov
or
adc
xor
mov
xchg
and
mov
into
push
pop
push
daa
scas
xchg
pop
(bad)
mov
(bad)
mov
jns
jns
cmp
daa
out
jbe
ss
xor
and
cdq
in
(bad)
into
sbb
stos
sar
push
sub
loopne
retf
cs
mov
xor
int3
leave
setle
iret
iret
addr16
test
lahf
and
adc
ret
cmp
sbb
cmp
mov
xchg
inc
sti
push
imul
sbb
imul
and
lds
jns
push
add
stos
dec
jmp
pop
or
fwait
rol
cmp
test
pop
pop
repnz
repz
gs
mov
inc
mov
mov
cli
mov
les
mov
pop
imul
jb
or
int
cmc
mov
mov
mov
or
dec
push
frstor
int3
div
jmp
and
xor
jmp
push
xor
push
sbb
neg
mov
sub
jmp
outs
xchg
pop
jnp
jnp
adc
or
outs
jecxz
sbb
jne
bound
pop
xor
mov
mov
jae
lods
mov
mov
(bad)
outs
pop
stc
cld
xchg
xchg
cmp
(bad)
push
mov
iret
mov
sbb
push
stos
(bad)
loopne
hlt
jg
mov
int
xor
inc
mov
mov
int3
sti
xchg
adc
mov
icebp
push
sahf
jae
or
dec
out
push
xchg
xchg
mov
jmp
(bad)
or
inc
add
or
sub
pop
stos
ins
shr
fadd
cdq
sbb
fstp
sub
adc
sbb
mov
dec
clc
sti
stos
loopne
mov
or
dec
sti
pop
jmp
dec
and
mov
outs
jecxz
cld
sbb
pop
sub
add
dec
int3
outs
and
retf
pop
ja
repnz
(bad)
or
test
imul
ins
outs
sbb
push
pop
mov
xor
and
int
mov
movs
scas
pusha
adc
mov
es
rcl
ja
frstor
jbe
pop
inc
add
movs
push
cmp
retf
mov
(bad)
in
inc
fwait
jg
sbb
shr
int3
sbb
adc
cmp
or
mov
push
icebp
in
mov
imul
mov
pusha
popf
or
fcom
movs
rcr
and
retf
out
mov
aas
retf
xchg
in
add
popa
jp
out
sub
dec
push
sahf
scas
mov
xlat
lahf
lds
add
bound
int3
push
(bad)
sbb
add
adc
inc
mov
dec
inc
push
inc
mov
jle
mov
xlat
or
or
sbb
and
data16
sbb
ret
cmp
lahf
popf
adc
jg
mov
cmps
sbb
cs
mov
sahf
pop
dec
sub
jge
into
sub
ror
xchg
sbb
xchg
shl
addr16
aas
jecxz
pop
adc
movs
dec
pop
mov
or
or
sti
add
push
in
dec
bound
arpl
cmp
(bad)
stc
cmc
fpatan
or
xchg
loope
ret
push
mov
or
jb
sub
ret
add
stc
and
es
and
xor
xor
push
mov
test
ds
mov
and
out
imul
inc
or
into
and
and
add
push
dec
mov
adc
and
mov
jge
adc
aas
lods
mov
jecxz
add
fwait
xchg
xlat
push
fsub
sbb
jae
jl
sbb
mov
lods
pop
test
xor
mov
and
xor
mov
ror
adc
cmp
stos
int3
jl
sahf
jb
(bad)
(bad)
pop
in
fmul
jns
xlat
mov
repz
imul
add
xchg
div
adc
clc
loop
inc
dec
inc
lock
stos
fwait
dec
sub
rol
dec
imul
and
xchg
ret
in
cld
cmp
xchg
add
out
mov
inc
shr
pusha
outs
pop
fdivr
hlt
mov
add
into
inc
jp
add
movs
out
outs
out
cmp
add
inc
std
push
xor
xor
mov
rcl
pop
cmps
add
push
or
ins
repnz
icebp
pop
stos
push
inc
mov
cmp
jae
call
dec
or
and
mov
(bad)
fstp
jo
mov
in
test
inc
loop
add
bound
(bad)
jae
and
add
jp
test
sub
xchg
mov
dec
call
sub
(bad)
xchg
in
xchg
sar
dec
mov
dec
sbb
cmps
and
mov
(bad)
rcr
outs
ins
push
fild
in
or
std
pop
xchg
push
ins
xchg
pop
or
rcl
out
shl
push
mov
or
int
push
loopne
leave
fild
clc
(bad)
fidiv
sub
addr16
test
in
mov
test
data16
mov
mov
ss
mov
push
out
test
mov
sahf
addr16
jo
pmaxsw
push
pop
es
cli
cs
push
stos
xchg
call
ds
test
stos
xor
fbld
jp
sbb
push
mov
and
mov
jb
xchg
or
dec
(bad)
push
test
push
cmp
jo
leave
adc
mov
sahf
mov
(bad)
movs
fiadd
fild
xor
jne
jge
sahf
push
test
out
mov
fld
sbb
xlat
sbb
mov
adc
jl
jae
cmp
xchg
sub
jle
dec
sbb
jbe
mov
(bad)
pop
pop
sbb
lods
ins
scas
pop
and
in
xchg
xchg
(bad)
sbb
nop
inc
enter
mov
sub
add
sbb
xchg
stc
add
ror
push
jmp
pop
sub
sbb
jle
mov
std
in
cmp
cs
gs
pop
daa
xor
inc
dec
stos
bound
enter
popa
aas
movs
out
pop
dec
inc
jge
sbb
aas
ins
js
mov
ret
imul
ja
movs
lea
cmp
cmp
ss
push
fcomip
jno
and
es
and
mov
iret
push
jle
jb
fcomi
xchg
movs
pop
push
xchg
mov
out
sbb
dec
fiadd
(bad)
jb
pushf
mov
mov
fisub
push
xchg
mov
cld
cmp
jo
mov
stos
jmp
mov
nop
push
xor
inc
test
lea
sub
fsubr
add
mov
lods
ins
sbb
movs
ror
xor
fld
sub
lds
pop
stc
rcl
clc
sbb
xchg
sbb
add
jp
add
push
mov
cmc
pop
mov
sub
mov
inc
inc
pop
mov
and
pop
sub
scas
lods
mov
mov
pop
mov
ret
dec
jecxz
sti
(bad)
fcmovb
stos
xlat
jne
dec
les
ds
adc
stos
test
jb
adc
test
das
dec
push
pop
cld
clc
jne
clc
fmul
loopne
mov
dec
sbb
mov
cmp
mov
and
sar
or
cmp
iret
add
jo
mov
fsqrt
sub
inc
xlat
sub
mov
sti
pop
cmp
sbb
iret
pop
ins
sbb
cmc
movs
xchg
push
push
into
pop
adc
ja
sub
jno
lea
nop
cmps
cmp
test
fwait
xchg
mov
das
and
cmp
imul
ret
in
push
ficom
mov
pop
add
nop
inc
cmc
xor
fadd
jmp
ds
sub
repnz
jg
dec
test
scas
rcl
push
stos
and
fnstcw
imul
mov
or
cs
or
pop
push
sahf
stos
push
popf
dec
xchg
fmul
out
jmp
xchg
addr16
sbb
pop
cmc
push
mov
retf
je
jno
jmp
pop
push
rcr
sbb
faddp
shl
imul
add
pusha
jb
aad
xlat
lods
retf
jl
add
fdiv
xchg
fs
ror
push
mov
mov
pop
int3
call
(bad)
dec
into
and
rol
mov
imul
cmps
retf
js
mov
or
mov
mov
test
ret
adc
mov
pop
adc
ret
mov
or
ds
lods
push
add
sbb
mov
arpl
or
push
dec
ds
aad
push
push
push
adc
cwde
jge
aas
push
fwait
jae
adc
push
push
push
xchg
jge
aas
test
dec
int
out
and
and
mov
xor
add
leave
pop
xor
in
pop
stos
mov
int
jp
rcr
call
xchg
jbe
sti
cmp
mov
jbe
test
in
mov
fidiv
cwde
jecxz
adc
xchg
or
jbe
in
mov
repnz
mov
cmp
dec
push
mov
xchg
add
mov
imul
shr
inc
cmp
stos
jmp
gs
or
sub
mov
mov
stos
mov
dec
data16
sub
push
rol
push
add
pop
jmp
inc
cmp
cli
jmp
shl
ret
and
rcr
xor
sar
pop
pop
std
movs
xchg
sbb
xchg
cmp
pop
sbb
mov
scas
outs
jno
fbld
push
retf
mov
ss
icebp
xchg
loope
popa
adc
in
pusha
pushf
add
mov
fmul
pop
dec
mov
pop
jae
call
push
loop
mov
add
test
mov
pop
(bad)
sbb
cs
pop
lock
push
outs
xor
inc
inc
lods
in
inc
add
xchg
add
call
push
cmp
sub
fsub
rcr
cmovg
cmp
mov
sub
loopne
cmps
fmul
call
mov
loope
xchg
test
xchg
(bad)
fcmovbe
imul
sbb
test
push
je
loopne
rcr
arpl
sub
jo
push
add
dec
mov
aaa
nop
cld
fdiv
mov
sub
cdq
inc
pop
xor
add
inc
pop
sbb
in
ror
(bad)
mov
cdq
sub
jge
cwde
push
sbb
bound
mov
out
lock
jbe
jl
xor
jecxz
mov
out
test
xor
push
std
jmp
test
and
cmc
lock
jg
ret
popf
out
push
add
inc
loope
inc
xor
scas
popa
push
and
pop
mov
xor
jecxz
or
xor
lock
ins
sahf
lahf
xor
push
in
js
mov
push
mov
push
add
pop
ins
or
pop
mov
cdq
arpl
push
pop
pop
cmp
icebp
sbb
stos
test
xor
and
dec
or
mov
cmc
icebp
or
sub
retf
xchg
and
hlt
cmp
dec
sahf
retf
and
mov
ss
rcl
out
pop
xor
jecxz
inc
inc
sub
sar
pop
jb
shl
or
ins
push
dec
or
sub
mov
push
aas
cmps
xchg
inc
neg
movs
popf
add
movs
arpl
cmps
mov
jbe
sbb
(bad)
outs
sub
in
test
lods
popa
push
adc
ret
jmp
mov
jae
js
ret
add
aaa
xchg
inc
and
jecxz
jnp
pusha
jmp
or
nop
inc
dec
inc
js
adc
sar
(bad)
mov
adc
or
cmp
popa
nop
push
xchg
adc
sub
out
sar
cmps
aaa
repz
pop
js
es
dec
ss
imul
stc
fcmove
mov
or
stos
inc
inc
push
sti
push
lock
or
mov
(bad)
adc
and
push
xor
mov
fadd
lahf
ficomp
push
in
inc
xchg
jns
xor
push
jmp
and
and
jo
out
mov
or
mov
jecxz
mov
outs
push
repnz
shl
jl
lahf
push
dec
xchg
pop
mov
addr16
xor
ret
jmp
xlat
xchg
ins
jns
lea
xlat
call
data16
push
mov
lds
xchg
sbb
xchg
push
jle
js
xor
push
adc
sub
scas
hlt
(bad)
and
mov
dec
inc
pop
aad
ins
fidiv
xchg
inc
jnp
retf
mov
mov
in
jl
cli
jmp
jmp
pushf
jmp
leave
sahf
lods
popw
or
fwait
std
or
out
sub
shr
dec
push
dec
mov
add
imul
jle
dec
mov
adc
cmp
sub
in
xor
jle
retf
adc
jg
out
fisubr
outs
outs
icebp
ins
sub
lds
imul
dec
hlt
mov
rcr
or
sbb
test
cmp
mov
cmp
leave
sub
mov
in
cwde
jns
dec
or
cmps
repnz
rcr
pop
les
dec
mov
sbb
addr16
xchg
mov
xor
fs
mov
test
mov
jnp
sbb
aaa
sar
and
push
xchg
js
cmp
mov
add
adc
cmp
pop
stos
push
jl
jno
jo
and
outs
add
test
sbb
xor
cmp
or
sub
inc
mov
sub
aas
add
cmp
cli
jae
and
repnz
sub
mov
lea
in
sbb
push
pop
cmp
add
jecxz
and
es
les
xchg
sbb
arpl
cmp
or
jnp
test
and
add
add
clc
out
sub
xchg
and
pop
in
retf
cmps
test
popa
cld
sti
je
imul
pop
push
test
xchg
dec
or
sbb
cmp
lahf
test
(bad)
ja
stos
outs
jp
jns
pop
dec
add
add
pop
inc
addr16
fimul
sub
mul
in
nop
mov
jmp
cwde
push
shl
fidiv
and
fs
repz
(bad)
and
jmp
popf
fbld
adc
out
push
clc
cwde
mov
mov
pop
cli
aam
push
jmp
inc
xchg
jae
pop
pop
sbb
(bad)
cli
je
cmp
mov
gs
aam
popa
das
mov
cmp
adc
es
jbe
or
sahf
adc
inc
jbe
(bad)
adc
ss
push
mov
je
aam
dec
(bad)
out
scas
mov
mov
and
fsub
inc
stos
push
sahf
std
adc
mov
ret
pop
ds
mov
jne
sub
mov
pop
pop
mov
fld
(bad)
sti
(bad)
jmp
addr16
ret
xchg
fld
and
cld
adc
(bad)
movs
int
mov
inc
arpl
sbb
(bad)
idiv
out
adc
leave
cs
dec
dec
adc
call
mov
repz
ins
xor
xor
inc
cwde
pusha
stos
sbb
xchg
lods
out
push
inc
into
call
in
lods
test
add
push
loop
hlt
outs
in
gs
pop
iret
fwait
jl
push
mov
inc
cmp
sti
sub
in
fbld
cmp
addr16
mov
fst
fwait
add
outs
sbb
cli
imul
xor
sahf
test
and
cmp
loope
add
push
push
gs
sbb
xchg
cmova
add
nop
es
js
xor
outs
and
dec
cmps
ret
fisub
adc
add
jae
sub
and
outs
lea
xor
jne
loope
mov
leave
(bad)
movs
jl
jl
jmp
icebp
inc
sub
jl
(bad)
jmp
cmp
and
push
push
sub
fwait
icebp
lods
pop
loop
dec
int
fdiv
jb
sub
or
pushf
dec
xchg
bound
or
cmp
xor
mov
push
mov
daa
cli
mov
leave
cdq
(bad)
and
cdq
mov
inc
mov
test
arpl
lods
mov
push
push
ja
sub
cmp
xor
ja
scas
or
mov
xchg
pop
push
cmps
int3
cmp
sub
movs
aam
sbb
out
mov
ja
sub
xchg
mov
push
bnd
mov
hlt
daa
jecxz
aas
in
cmc
mov
cdq
repz
sub
in
stos
dec
push
outs
xor
jl
add
fcom
iret
sbb
mov
and
(bad)
shl
ds
sub
lahf
push
jp
sub
push
popa
sbb
lods
mov
(bad)
cmp
imul
inc
pushf
cli
call
pop
jg
dec
fisttp
pop
xchg
call
dec
es
int3
ja
mov
sbb
fisub
(bad)
mov
fwait
jae
bound
daa
adc
retf
or
mov
retf
adc
stos
stc
or
inc
leave
fstp
push
pusha
jbe
or
xor
div
or
jno
loope
mov
int3
dec
mov
call
loop
(bad)
aas
xor
cmp
sti
pop
pcmpeqw
test
cmps
rcl
shl
les
cmps
gs
loop
call
sbb
in
adc
and
bound
in
dec
stos
sar
and
pop
push
clc
dec
pop
mov
popa
dec
hlt
(bad)
xchg
test
(bad)
gs
into
pusha
xchg
fcomp
fimul
rcl
push
sub
xchg
int
cmp
cmp
mov
loop
mov
popf
test
jne
and
push
cmp
mov
arpl
jb
(bad)
jno
js
jae
add
mov
mov
mov
push
enter
dec
movs
lods
stos
fmulp
sbb
cmps
das
stos
das
neg
push
cli
lea
sub
mov
ja
les
xor
sbb
mov
dec
bound
lods
jmp
call
or
lock
add
mov
in
scas
xor
pop
or
pop
icebp
adc
or
pop
retf
cld
jle
mov
mov
adc
inc
jle
bound
dec
aaa
sub
inc
mov
mov
dec
into
inc
jo
sbb
lds
push
xchg
and
cmp
dec
push
pop
xor
lods
lods
out
ss
jo
aas
inc
(bad)
jnp
mov
imul
icebp
inc
std
fcomp
sub
ficom
jp
jmp
xlat
cmp
(bad)
adc
clc
stc
loopne
addr16
mov
cmp
repz
neg
pop
jb
vmwrite
stos
cmc
sbb
cmp
lds
out
jmp
pop
add
cld
mov
mov
in
sar
inc
retf
push
push
imul
movs
jbe
jo
adc
push
add
push
out
int
rcl
daa
adc
mov
in
aad
stos
js
outs
jecxz
ss
jl
nop
jae
bswap
mov
ficomp
lods
nop
sti
ficom
adc
aad
mov
pop
pop
pop
sbb
push
aaa
(bad)
enter
cmps
outs
in
dec
xor
sub
xchg
jmp
adc
jo
aas
bound
inc
imul
push
sbb
pop
repnz
dec
jne
mov
add
lds
mov
clc
cmp
pop
int
cld
jg
lods
out
pop
xlat
inc
pushf
aam
cmp
pushf
pop
cmps
iret
das
outs
adc
jae
mov
ficom
sub
sub
jmp
cld
lods
pusha
jl
push
or
das
rol
mov
jg
pop
jmp
addr16
jg
cmp
(bad)
push
cli
sar
ret
loopne
ror
out
sub
jecxz
sti
loope
dec
jns
fild
push
xchg
ss
(bad)
aaa
or
sbb
(bad)
aaa
fcom
js
pop
jnp
push
clc
(bad)
jle
and
cmc
pop
adc
dec
pusha
jbe
jmp
dec
aaa
push
jno
mov
jbe
cdq
adc
rcr
stc
xchg
pop
lds
and
out
or
sub
out
inc
inc
and
mov
(bad)
sti
jmp
jl
inc
push
cmp
pop
into
sbb
sub
js
call
gs
mov
popf
pop
scas
dec
retf
mov
xor
jge
jp
inc
sub
repnz
cli
and
mov
or
cmps
daa
jmp
cmp
jp
int
stos
les
iret
inc
sub
sti
fimul
stos
mov
push
cmp
xchg
data16
das
adc
push
lods
sub
mov
movs
fnsave
repz
leave
fcom
cs
jns
sub
cmp
push
(bad)
cs
(bad)
add
mov
sar
bound
fadd
(bad)
xchg
movs
pusha
lods
sbb
loop
and
push
sbb
inc
mov
ds
inc
jne
mov
and
mov
loopne
shl
adc
test
or
push
or
lea
fadd
push
jl
push
cmp
push
jmp
sub
sub
das
fidiv
int3
loopne
nop
(bad)
into
in
outs
and
xchg
retf
clc
dec
mov
jmp
push
pusha
ror
fsub
fwait
push
movs
inc
fnsave
fwait
jle
sub
add
xchg
paddq
ins
jb
xor
adc
out
arpl
iret
lahf
push
ja
xchg
push
fsubrp
stc
test
std
ror
test
jo
imul
xchg
xchg
xchg
lock
jle
pop
lds
ins
dec
in
aas
jmp
dec
rol
xchg
fdivr
sbb
mov
sub
sahf
bnd
add
inc
cmc
sahf
ja
mov
dec
repz
cmp
or
cmp
loop
movs
stos
leave
dec
popf
movs
into
pop
pop
adc
mov
xchg
fmul
cmps
fisttp
ins
sbb
mov
fmul
stos
inc
(bad)
clc
sbb
mov
ins
xchg
jns
cli
(bad)
mov
pop
hlt
add
and
imul
cmc
pop
jne
loopne
xchg
pop
aam
or
in
cmp
inc
sub
dec
push
jmp
ja
fdivr
cs
ficom
gs
call
dec
xlat
cmps
test
xchg
adc
and
in
jl
outs
adc
neg
dec
adc
fstp
inc
pop
cs
dec
mov
mov
adc
pop
mov
mov
inc
into
xchg
call
stos
add
cmp
aaa
cdq
jmp
sub
and
clc
call
ins
lahf
mov
scas
pop
mov
mov
loop
fnstsw
es
into
and
shr
fnstcw
jg
retf
mov
ds
adc
jl
into
rcl
jmp
imul
add
add
jbe
dec
nop
fistp
sbb
leave
dec
adc
daa
cld
sbb
arpl
out
call
and
fcmovnu
fidiv
jl
movs
test
push
dec
cs
sbb
(bad)
adc
in
popf
fisttp
aaa
cmp
jl
dec
fld
scas
mov
ss
enter
mov
adc
lahf
std
xlat
iret
push
enter
push
xor
sti
xchg
mov
dec
outs
sub
xchg
mov
std
mov
ds
ja
leave
push
push
push
fwait
call
ss
ins
les
scas
lods
push
mov
sbb
(bad)
int3
dec
pusha
sub
test
test
xlat
and
(bad)
hlt
outs
les
cmp
pop
or
jmp
xchg
xor
(bad)
mov
push
sti
fcom
or
fld
and
pop
mov
icebp
xor
push
inc
add
sti
dec
clc
mov
les
(bad)
(bad)
gs
jg
(bad)
xor
push
xchg
gs
(bad)
pop
out
sbb
shr
xchg
stos
push
stos
dec
popf
fsubp
xchg
xor
pop
iret
xchg
mov
clc
jmp
push
mov
dec
pop
lods
iret
push
and
ret
sbb
out
arpl
mov
fs
rol
imul
ja
fld
mov
pop
aad
aam
stos
test
sbb
lds
push
xor
add
jae
dec
adc
in
jge
out
inc
outs
lods
fs
mov
sbb
adc
jle
loopne
mov
gs
gs
adc
xlat
in
add
cmps
or
ret
jo
das
ins
add
scas
mov
pop
jbe
dec
icebp
jmp
add
mov
mov
data16
pop
mov
lea
jp
and
imul
and
(bad)
test
pop
push
call
or
adc
cmp
mov
mov
xor
aaa
sbb
rcl
imul
sbb
mov
ret
sub
pop
imul
sub
sbb
dec
inc
push
addr16
loopne
push
mov
repz
ss
fcom
mov
(bad)
jle
in
xor
enter
dec
sbb
movs
lock
dec
pop
lds
jge
(bad)
xlat
sar
leave
sbb
and
lds
jl
int3
mov
add
inc
(bad)
mov
xchg
sbb
inc
mov
or
std
call
imul
mov
dec
mov
lods
sbb
mov
hlt
cmps
into
mov
mov
adc
and
sbb
add
cmp
mov
jb
sar
popa
or
cmp
das
int
xchg
popa
in
aaa
fbstp
sbb
repz
xchg
cmovp
jecxz
sub
or
sub
test
paddw
cmp
les
push
push
fwait
int
and
lahf
lods
push
mov
mov
jo
movs
dec
pop
pop
lock
ror
mov
sbb
ds
mov
lahf
push
add
inc
cmp
popf
mov
cmp
push
push
jnp
xchg
inc
std
inc
mov
shr
fwait
push
adc
dec
mov
sub
shl
and
push
add
dec
inc
and
and
dec
cmp
lods
aad
nop
mov
jo
retf
lahf
xchg
pop
out
clc
out
ins
aad
mov
mov
push
inc
sbb
(bad)
ret
mov
rol
or
mov
cmc
cld
add
fwait
xchg
jo
add
mov
daa
jle
inc
retf
dec
outs
adc
fs
sbb
jge
cmp
sbb
pop
xor
fsubr
sbb
mov
js
sahf
sbb
call
rol
push
and
pop
inc
sahf
or
mov
mov
icebp
xchg
xor
fsub
fisttp
in
cli
push
push
fisttp
lahf
pop
sub
sbb
ins
mov
(bad)
xor
test
dec
xor
icebp
xlat
cs
lods
cmp
sbb
outs
mov
out
jle
add
jbe
mov
jo
int
rcl
add
clc
xor
add
inc
enter
fimul
movs
imul
sbb
sbb
mov
inc
(bad)
jecxz
int
or
sub
jl
addr16
in
inc
add
aas
cmp
sbb
push
retf
daa
pop
jmp
scas
jg
adc
adc
jmp
stos
outs
and
pop
outs
xor
cmp
mov
test
cwde
out
sub
aas
push
fwait
inc
mov
mov
push
add
cmp
and
mov
mov
lods
test
call
cmc
inc
dec
fcom
jbe
cmps
fisttp
cs
inc
test
retf
mov
pusha
lds
out
push
pop
push
push
pop
and
retf
adc
mov
sub
and
mov
fwait
pop
sbb
add
out
in
xchg
push
add
pop
cdq
push
leave
enter
inc
mov
stos
cli
hlt
lea
aad
xor
arpl
(bad)
retf
test
stos
(bad)
stos
sbb
in
test
add
sbb
or
retf
pusha
lahf
js
ins
cmp
jmp
ud1
nop
add
enter
(bad)
sub
or
(bad)
cmp
mov
rcr
repz
call
or
or
les
sbb
jo
nop
inc
xchg
je
adc
pop
and
pop
mov
mov
fadd
push
sub
call
adc
lock
outs
or
xchg
std
fisubr
push
mov
adc
in
mov
inc
adc
xchg
nop
sti
sub
xchg
push
dec
jns
sti
in
dec
imul
mov
sub
pop
inc
push
je
rcr
push
or
push
mov
xlat
inc
ret
push
std
popa
pop
aaa
jmp
ja
jo
sti
leave
inc
sti
rol
pop
repnz
ds
xchg
hlt
iret
or
mov
scas
xchg
mul
mov
cdq
mov
gs
(bad)
bound
xchg
mov
retf
or
add
sti
sbb
cdq
nop
cmps
mov
pop
xor
xchg
mov
rol
(bad)
adc
push
cmps
and
add
mov
jg
ret
mov
adc
jl
inc
adc
es
out
jmp
rep
hlt
push
lock
xchg
mov
jne
ja
add
pop
push
(bad)
adc
xor
jne
mov
fbstp
dec
and
inc
into
in
push
cmp
and
xchg
sub
mov
mov
pop
clc
lods
sbb
lods
push
call
push
into
cmc
push
in
mov
pop
inc
jnp
mov
fwait
push
sub
lahf
fwait
imul
pop
dec
add
sub
mov
and
mov
add
push
push
sbb
scas
enter
xlat
jne
add
lods
jge
xchg
addr16
jp
aad
mov
mov
mov
out
mov
add
jge
daa
push
xchg
popf
mov
repz
sbb
iret
movs
pop
sti
push
les
jno
sbb
jae
sub
pop
mov
push
jae
popa
mov
push
mov
jmp
push
pop
ja
repz
push
aaa
leave
and
out
mov
iret
loop
mov
test
mov
in
dec
int
sub
push
js
jo
mov
adc
into
jle
scas
(bad)
out
das
mov
mov
jmp
xchg
fidivr
adc
xor
repz
lahf
dec
ror
sbb
jno
mov
iret
push
retf
and
cwde
nop
xchg
div
stos
(bad)
push
enter
enter
repnz
mov
dec
xchg
call
add
fdivr
push
lds
mov
jbe
(bad)
mov
xchg
adc
stc
xchg
addr16
in
and
dec
mov
cwde
in
in
mov
mov
and
fsubr
mov
add
pop
fld
shl
cmp
or
mov
jl
or
sub
mov
cdq
jge
sbb
mov
call
data16
daa
ds
nop
mov
xor
mov
xor
stc
cmp
(bad)
mov
sbb
shl
jg
xchg
pop
das
adc
retf
dec
js
dec
add
leave
xor
je
sbb
ret
shl
push
dec
bound
addr16
ins
push
outs
fist
push
jecxz
push
jge
ja
xor
icebp
or
sbb
cld
dec
gs
cmps
scas
ret
div
mov
movs
jecxz
sub
pop
stc
jp
and
inc
ja
scas
hlt
push
js
ror
fs
stos
std
sub
adc
add
inc
adc
inc
leave
lahf
sbb
(bad)
adc
jo
iret
jg
lods
imul
dec
jle
aaa
cs
jp
mov
out
fisubr
cmps
sub
ret
push
lods
iret
dec
scas
sub
xor
mov
adc
ins
mov
push
sbb
add
pop
mov
cli
or
cmps
dec
pop
mov
cmps
pop
outs
test
stos
xor
fwait
sbb
pop
stos
lods
dec
xchg
mov
retf
arpl
out
jnp
aad
cmc
xchg
pop
je
out
cmps
sub
xor
(bad)
ja
test
dec
jge
ins
mov
and
pop
sbb
mov
ss
(bad)
inc
mov
add
vmread
cmp
sahf
in
out
outs
jne
mov
inc
retf
shl
adc
arpl
sbb
std
push
lods
dec
inc
xlat
das
push
xchg
dec
mov
mov
inc
fcom
test
ds
outs
jp
mov
(bad)
sbb
lock
les
cmps
push
xchg
scas
dec
cmp
sbb
mov
xchg
sub
jmp
outs
adc
pop
mov
ror
mov
add
pop
or
iret
jae
sbb
xchg
pop
shl
dec
mov
ins
adc
lods
xor
jae
bound
xchg
bound
dec
sbb
mov
mov
mov
in
mov
jmp
push
repnz
mov
aas
add
and
inc
inc
enter
pop
jno
fist
aam
pop
jmp
hlt
pop
(bad)
sti
cwde
(bad)
mov
cmps
mov
(bad)
xchg
lahf
popa
xchg
mov
fistp
test
call
out
pop
loope
clc
int3
gs
(bad)
in
rcl
mov
test
sub
cdq
loop
jb
out
inc
popa
pushw
cmps
mov
inc
jp
in
dec
(bad)
sti
and
iret
mov
loopne
mov
cmp
loope
mov
fild
sbb
mov
adc
div
(bad)
sbb
or
popf
pop
pop
push
mul
aaa
sbb
xchg
push
lods
push
loopne
xor
xchg
and
cmp
inc
ret
mov
nop
xchg
fidivr
cld
pop
daa
fwait
les
mov
or
jl
aam
mov
int
xchg
sub
xor
mul
test
pop
jg
clc
adc
inc
mov
pop
push
and
cmp
arpl
sub
sub
or
cdq
pop
shl
jmp
fadd
in
jns
imul
aaa
(bad)
and
fnstcw
hlt
sbb
sbb
pop
fstp
push
dec
mov
(bad)
jmp
cmps
shr
jbe
aam
fstp
gs
cmps
lock
fwait
ret
cmc
mov
icebp
outs
sti
jg
bound
inc
adc
cmp
dec
popf
jge
jecxz
mov
push
mov
out
mov
mov
(bad)
jmp
add
aas
std
mov
inc
mov
xchg
sbb
popa
sbb
ja
dec
add
iret
inc
sbb
xchg
lods
pop
sub
(bad)
dec
les
cmp
and
in
and
or
jg
mov
test
adc
shl
(bad)
or
fucomp
gs
mov
mov
push
cld
inc
rcr
sub
js
pop
push
add
inc
ja
sub
push
test
push
imul
aas
xor
mov
dec
dec
sbb
and
addr16
movs
push
inc
jno
sahf
shl
mov
(bad)
jns
aad
pop
xchg
xor
or
pushf
ss
or
jns
pop
jmp
push
outs
lock
(bad)
nop
xlat
and
shl
xor
add
jle
mov
clc
fld
xchg
mov
retf
xchg
movs
inc
imul
es
inc
add
fwait
push
jle
dec
sub
and
jge
test
sti
psrld
movs
push
sub
pop
call
jge
popf
pop
mov
neg
and
pop
sbb
jae
out
lods
add
lock
iret
cmp
xchg
mov
and
push
jb
out
sbb
inc
fs
mov
xor
retf
or
jne
or
test
test
or
lahf
adc
sti
jno
push
data16
hlt
inc
loope
push
jne
pop
sar
dec
test
jbe
pop
adc
out
into
push
or
push
(bad)
jnp
mov
xor
inc
bound
mov
mov
int
fisttp
lds
je
gs
stos
loope
shl
pop
cmove
xchg
retf
pop
dec
lea
hlt
jns
fdiv
inc
lea
out
icebp
js
push
or
xchg
mov
sub
mov
jns
lods
cwde
push
pop
into
jne
jmp
out
outs
in
pop
jne
aad
sbb
sub
sub
mov
mov
(bad)
fmul
mov
and
movs
test
test
inc
(bad)
stos
ss
cli
push
sbb
adc
push
pop
dec
mov
imul
ins
movs
push
sbb
sbb
and
jns
push
sub
test
xchg
or
retf
es
retf
cmp
aam
push
push
push
add
ret
jns
dec
(bad)
dec
sub
xor
fmul
arpl
jmp
mov
lea
je
stos
jnp
pusha
out
sbb
inc
sub
or
in
mov
mov
cld
jmp
rcl
movs
das
mov
or
lea
mov
ret
mov
stos
lods
and
jmp
lahf
mov
dec
sub
iret
cmp
xor
lock
push
enter
xor
pushf
and
not
cwde
lods
out
sub
xchg
adc
stc
js
push
dec
push
out
pop
inc
mov
inc
push
sub
and
arpl
enter
rol
je
cld
ins
retf
pop
mov
ficom
sbb
add
add
jle
xchg
(bad)
xchg
scas
and
cmc
addr16
shl
hlt
rol
mov
daa
fdivr
pop
push
(bad)
mov
push
add
jnp
pop
cmp
sti
jne
pop
dec
jae
jae
pop
outs
xlat
(bad)
fld
fisubr
mov
dec
jp
aam
hlt
shl
mov
outs
xor
fwait
xchg
sub
(bad)
in
push
jbe
lds
js
(bad)
mov
mov
xor
movs
xchg
out
jb
and
fs
lods
cmp
shl
int3
scas
sbb
stos
es
shl
adc
je
inc
stos
popf
and
lahf
(bad)
aam
mov
enter
sub
cmps
jl
test
jmp
loop
in
clc
fisub
jmp
popa
sbb
jmp
and
mul
fstp
and
jg
out
std
cld
std
imul
jns
add
mov
cmc
cmp
gs
jo
mov
cwde
sub
and
and
lods
or
imul
es
fcmovb
test
cmc
ins
sub
jno
not
fdivr
cmp
jno
call
movs
test
rcr
not
inc
mov
and
and
retf
jb
mov
xor
adc
not
xchg
adc
cs
rcr
mov
xchg
std
jno
or
out
dec
xlat
cmc
nop
xlat
push
inc
(bad)
cwde
pop
lods
outs
adc
xchg
clc
lea
jo
mov
inc
rcl
mov
lds
xor
dec
ins
push
sbb
xchg
xchg
or
cmc
in
scas
jb
ins
push
and
fwait
or
pop
cmc
xchg
add
rcl
push
ds
adc
push
mov
cld
dec
dec
push
push
pop
add
push
xor
push
movs
xchg
or
in
sbb
stos
push
sbb
rcr
stc
sub
mov
and
xor
pushf
pop
fucomp
(bad)
sbb
cmp
retf
(bad)
lock
test
mov
ins
add
dec
into
fisttp
fwait
mov
push
in
out
jge
daa
aaa
xor
or
mov
popf
cmps
(bad)
sbb
push
mov
cld
dec
cdq
xchg
sub
mov
adc
push
mov
test
addr16
inc
mov
push
dec
dec
cmc
fdivr
mov
jo
sbb
mov
mov
mov
sub
cmovne
inc
and
xchg
push
shl
loop
sbb
sbb
test
rol
retf
pop
hlt
xor
jle
call
pop
ss
call
(bad)
pop
xchg
push
push
or
bound
sbb
pop
jns
rol
adc
loop
aaa
cdq
xchg
lahf
pop
test
rcl
inc
cmp
movs
push
js
popf
mov
neg
test
cmp
cmc
add
xor
jb
mov
sub
mov
inc
js
add
popa
jno
popf
push
(bad)
pop
ror
sub
pushf
pop
imul
fld
mov
and
mov
lock
add
(bad)
gs
push
push
and
dec
dec
out
out
ja
add
fcomp
pop
cmps
mov
mov
mov
addr16
xor
mov
dec
(bad)
loopne
pusha
(bad)
jmp
iret
es
rcl
jle
dec
and
inc
mov
fadd
mov
ja
sbb
test
jb
pop
ins
sbb
std
mov
jns
jo
pop
pushf
out
out
nop
imul
cmp
jle
aam
int
add
mov
sub
or
xchg
mov
movs
cmp
icebp
jae
jae
test
pusha
push
inc
dec
sbb
and
mov
add
outs
xchg
or
cmps
mov
jle
lock
xchg
and
mov
jle
or
cmc
push
cmps
aad
add
int
loope
loop
jae
outs
xchg
jmp
inc
xchg
fild
add
test
pop
loope
mov
inc
xor
rcr
ins
push
pusha
stos
push
push
mov
lods
shl
cmps
fstp
lea
dec
xchg
add
lods
jo
xor
xor
fcom
cdq
retf
ja
scas
cmps
xchg
out
inc
les
fist
lahf
sbb
pusha
or
pop
vucomiss
push
dec
jmp
ret
push
frstor
call
mov
outs
stc
adc
imul
sub
std
dec
out
pop
or
xor
cmc
cli
(bad)
push
lea
xor
aad
xor
add
cmp
xor
inc
rol
jae
sub
jle
xchg
dec
out
sbb
enter
jl
fisubr
fcmovb
cmp
push
movs
mov
xchg
sbb
ficomp
adc
nop
enter
push
jle
repz
test
ss
bound
sbb
stc
or
aas
jge
jg
inc
xchg
xlat
xchg
inc
inc
cwde
in
cmps
pop
xchg
arpl
lea
jmp
pop
xor
jmp
pop
outs
pop
sti
sub
cli
cmp
add
gs
mov
inc
aad
push
jo
adc
mov
mov
xlat
inc
fs
pop
inc
out
(bad)
shl
lods
push
out
lock
sbb
pop
(bad)
jne
ret
mov
add
jmp
sbb
in
test
jl
outs
dec
push
and
or
test
jo
xor
outs
leave
ss
dec
push
or
in
push
arpl
ins
mov
mov
xor
xor
jecxz
outs
cdq
and
jp
inc
xchg
add
into
xchg
adc
(bad)
adc
call
in
mov
test
bound
mov
ins
sub
mov
adc
into
cmps
leave
mov
call
xlat
data16
int3
xlat
imul
iret
(bad)
pusha
add
int
sbb
push
push
jg
xchg
pmaddwd
ins
mov
pushf
repz
outs
(bad)
scas
or
clc
cmps
shl
(bad)
mov
clc
(bad)
xor
pop
cmps
and
int
jno
sbb
outs
lahf
mov
lods
rcl
fisttp
outs
bound
dec
xor
les
jge
mov
cmp
pop
pop
dec
dec
mov
in
xor
ret
xor
neg
xchg
sub
or
xlat
test
jb
cmp
test
cmc
stos
enter
push
test
jbe
cmp
mov
xchg
in
mov
xor
push
cmp
ja
inc
fsubr
ja
test
sahf
sub
inc
pop
jecxz
aam
sbb
pop
mov
add
add
jae
mov
dec
xchg
xchg
and
jae
add
mov
pushf
dec
and
push
jno
movs
mov
inc
hlt
mov
jmp
sub
sub
in
in
outs
jp
and
ins
cld
shl
repnz
and
stos
loopne
push
cwde
inc
nop
xchg
inc
dec
xchg
and
push
pop
cli
je
push
mov
loope
or
jbe
cmp
sbb
xchg
add
or
sub
das
jl
mov
ds
adc
(bad)
icebp
and
fisttp
dec
aam
push
outs
int
dec
daa
outs
jne
dec
push
dec
pop
xor
in
or
jb
mov
xchg
pop
mov
inc
xchg
test
mov
lods
pop
and
jne
sub
mov
cli
sbb
add
sbb
adc
popa
add
loope
je
enter
xor
sub
or
pop
jg
inc
cmps
xor
dec
jg
mov
xchg
ins
hlt
jo
mov
push
repnz
in
iret
cs
sbb
xchg
sub
inc
repnz
mov
sub
push
shl
mov
sub
sub
xchg
test
pop
sti
cmps
dec
pop
mov
addr16
sub
mov
movs
pop
jnp
iretw
ins
pop
and
lea
dec
mov
test
xor
aad
les
fwait
ss
inc
(bad)
aam
gs
pop
push
inc
cmps
inc
mov
das
sbb
int
pop
sub
push
inc
shl
push
ds
hlt
mov
js
xor
and
cs
sub
out
mov
sub
xchg
call
inc
out
sbb
sub
das
xor
xchg
pusha
or
out
add
js
fstp
shl
imul
jb
inc
es
adc
fiadd
and
mov
out
push
jg
mov
jmp
mov
jl
cmp
xchg
fsub
xchg
push
dec
call
sbb
repz
jnp
or
jp
mov
mov
push
das
sbb
adc
adc
inc
movs
push
pop
adc
xchg
xlat
addr16
ins
stc
xor
pop
aaa
shl
mov
lea
pop
jbe
ror
jne
fist
xchg
push
cld
xchg
sub
loope
into
pop
inc
dec
push
jmp
add
jns
add
movs
lods
lahf
mov
fadd
js
dec
cli
stos
push
pop
cmp
mov
push
push
js
call
push
(bad)
and
xor
retf
xor
pop
(bad)
cli
or
push
in
js
mov
enter
(bad)
popa
mov
jmp
scas
scas
loope
xchg
stos
idiv
inc
fcomi
or
xor
mov
(bad)
sub
push
sti
sub
jno
cdq
sbb
sbb
aaa
push
fs
xlat
pop
mov
add
fnstcw
int3
(bad)
lock
lods
call
ja
fldcw
xchg
mov
stos
push
mov
arpl
ror
gs
mov
lock
inc
mov
fidivr
or
lahf
sbb
adc
xor
dec
rol
dec
jne
pop
ins
cli
clc
mov
or
stc
(bad)
jno
cmp
xchg
dec
nop
(bad)
ficom
(bad)
mov
mov
mov
xchg
repnz
mov
push
pop
lods
stc
sahf
mov
and
sub
dec
sub
and
adc
iret
jne
cli
loope
pop
sbb
pop
mov
mov
jno
test
ins
dec
aam
mov
bound
fs
out
mov
dec
push
dec
xor
dec
cmp
xlat
inc
aam
xchg
ret
retf
sub
cmps
cmp
ret
or
pushf
or
sahf
stc
or
push
mov
sub
in
scas
dec
jo
mov
push
mov
push
fdiv
push
cmp
xor
addr16
sbb
fs
add
add
outs
outs
stos
leave
rcr
in
shr
cmps
pop
sub
mov
mov
clc
push
pop
out
xchg
fs
imul
xlat
cmp
inc
pusha
sub
adc
pop
sub
pop
inc
pop
mov
int3
inc
jp
aas
sahf
dec
iret
loop
mov
push
fdivp
scas
movs
xchg
(bad)
jge
movs
nop
cmp
test
add
cdq
pop
fimul
aaa
sbb
test
jo
outs
mov
xor
sub
(bad)
jmp
es
(bad)
push
mov
mov
xchg
mov
cmp
int
std
xchg
push
inc
push
jecxz
add
mov
sbb
or
(bad)
out
or
xor
jle
loope
cmp
and
ret
add
imul
cmp
dec
push
fisubr
push
out
test
loope
push
rcr
ss
sbb
mov
fstp
push
int
jb
jg
sub
(bad)
sbb
push
out
or
aas
imul
push
and
ins
into
dec
loopne
mov
(bad)
test
mov
jecxz
scas
xor
stos
jg
mov
pusha
add
xchg
aad
jmp
mov
inc
xchg
cmp
js
fwait
xchg
in
(bad)
js
push
add
and
mov
dec
sbb
xor
and
mov
sub
sbb
jno
retf
cmps
call
iret
sbb
push
fstp
or
cmp
sbb
or
mov
ja
sub
push
cld
hlt
aaa
sbb
add
fs
je
sub
and
xchg
mov
inc
inc
xchg
out
rcl
call
jnp
mov
push
pcmpgtd
addr16
add
movs
mov
pop
pushf
push
les
dec
mov
aad
push
sbb
push
repnz
push
das
lock
enter
cwde
pushf
pop
fwait
pop
lock
mov
add
push
shl
adc
or
sub
stos
mov
sub
adc
gs
fdecstp
jl
adc
sub
sub
js
sti
push
aad
dec
sub
movs
jns
lods
jmp
xor
enter
xchg
clc
ins
push
stc
rcr
imul
and
test
xchg
outs
add
mov
mov
mov
dec
add
cmp
outs
adc
arpl
push
in
pop
xchg
inc
inc
inc
push
add
aaa
cs
test
mov
xchg
add
ss
fidiv
cmp
retf
xchg
sbb
rcl
adc
push
les
pop
stc
hlt
dec
test
outs
nop
inc
repnz
jecxz
and
(bad)
out
xor
in
int3
call
pop
test
inc
fmul
shr
xchg
xchg
mov
mov
repnz
mov
lea
sbb
(bad)
cmc
sahf
ins
call
mov
jmp
xor
imul
push
int3
mov
paddusb
sar
mov
pop
dec
(bad)
and
mov
outs
shl
popf
add
sub
xchg
and
push
inc
mov
mov
inc
dec
mov
in
push
and
ret
and
scas
ja
jmp
add
mov
loope
jbe
and
les
(bad)
jmp
sar
mov
adc
mov
cmc
dec
jmp
fisttp
push
push
push
sub
mov
cmp
dec
aas
ret
test
pushf
jmp
push
mov
dec
aaa
enter
(bad)
mov
fiadd
xchg
popf
add
sete
ret
sub
adc
sbb
mov
imul
rol
cld
and
hlt
jo
test
cwde
inc
popf
or
cli
mov
and
out
dec
movs
inc
aaa
in
mov
repz
mov
and
cmp
fcmovnu
repz
pop
test
imul
hlt
ins
jmp
js
dec
or
ficom
dec
rol
addr16
xor
shl
sub
repnz
out
(bad)
cdq
ins
(bad)
retf
mov
mov
bound
fcomp
call
dec
or
xlat
out
cmc
inc
cwde
es
stos
push
in
and
lds
pop
pop
push
sub
fwait
xchg
push
mov
pop
mov
ror
stc
mov
outs
cs
mov
pop
sub
or
mov
shr
out
mov
sbb
cmc
gs
cmps
dec
hlt
mov
and
fstp
std
scas
repz
sbb
dec
lea
push
and
sub
xchg
sub
cmp
hlt
xor
loop
lods
dec
les
cmps
fdivr
aaa
adc
adc
jae
rcr
add
cmp
cmp
xchg
call
xor
icebp
mov
das
push
dec
cmp
ret
sbb
daa
fidivr
(bad)
or
cmp
dec
add
fcmove
sub
and
inc
cdq
and
inc
outs
mov
mov
scas
das
xchg
(bad)
and
aas
pop
(bad)
mov
push
dec
push
repz
addr16
outs
gs
lock
mov
mov
adc
mov
icebp
sub
pop
mov
pop
sbb
inc
rcr
inc
rcr
daa
jb
or
jb
push
test
push
in
mov
das
movs
sbb
dec
sbb
xor
ins
cs
sub
sub
dec
jbe
pop
dec
fcom
icebp
and
(bad)
outs
push
(bad)
xor
and
mov
ds
loop
inc
sti
ins
fnsave
pop
test
pop
dec
xor
xchg
imul
mov
or
xchg
jo
(bad)
std
add
ret
pop
test
out
push
mov
dec
inc
dec
cmp
xor
and
cmc
jnp
es
dec
jns
iret
xchg
das
jmp
retf
mov
sub
jmp
mov
lods
frstpm(287
jmp
mov
(bad)
fidivr
sub
lds
les
xchg
dec
pop
cmps
push
cli
mov
dec
or
mov
cmp
gs
jecxz
arpl
mov
(bad)
lahf
sub
(bad)
xchg
call
(bad)
dec
repz
lea
push
push
stos
mov
mov
test
add
xchg
mov
push
cld
inc
mov
arpl
jmp
popa
ins
pop
pop
jmp
cmc
sub
mov
shl
call
imul
xor
repnz
push
aam
fsubp
imul
xchg
ja
sbb
xchg
jmp
jle
adc
fs
mov
add
stos
push
cmp
cmps
out
sbb
add
pop
(bad)
and
int3
add
jl
add
push
xchg
add
loope
ss
inc
jno
xchg
out
ror
push
lods
adc
ja
jmp
scas
icebp
mov
sar
bound
icebp
stos
cmp
pop
out
packssdw
push
mov
adc
cmp
enter
test
mov
cmp
dec
fs
cmp
xlat
call
popa
lds
jmp
repnz
repz
stos
lahf
jmp
icebp
pusha
add
mov
(bad)
out
cmp
(bad)
pop
sbb
push
mov
xor
dec
loopne
cmp
cs
imul
rcr
inc
ret
or
rsm
xor
data16
movs
repnz
sti
(bad)
in
pop
pushf
gs
shr
xor
lods
lods
jge
retf
popa
sbb
add
loop
neg
ret
ss
cdq
mov
push
sbb
or
sub
(bad)
(bad)
(bad)
fwait
stos
in
outs
or
les
sub
(bad)
lea
retf
cmp
mov
sbb
push
push
repnz
jmp
add
jbe
mov
lds
lfs
aaa
fistp
fstp
adc
mov
mov
or
inc
jmpw
jle
pop
push
mov
fistp
xchg
js
cmp
or
dec
movs
jnp
dec
xor
iret
jg
inc
nop
cmps
je
or
scas
mov
rol
cmp
(bad)
mov
push
cmp
add
dec
aam
xchg
inc
cmp
mov
push
dec
pushf
push
push
in
adc
add
sbb
push
cmp
adc
pushf
bound
int3
sub
push
imul
push
imul
jp
inc
cmps
nop
into
test
xchg
repnz
(bad)
fldenv
jb
ret
mov
stos
jae
adc
xor
shr
xor
test
push
aad
inc
xchg
sti
adc
cmp
or
sbb
out
mov
call
dec
jp
setno
sbb
jge
jno
dec
jno
fs
lahf
iret
gs
loope
jb
rcl
lods
in
ss
sbb
inc
sbb
cdq
push
aad
mov
xchg
ror
cmc
jle
mov
mov
ret
pop
xor
adc
and
jae
cmp
xor
(bad)
cli
test
pushf
sub
add
fnstcw
ja
nop
cmp
xchg
outs
repnz
inc
leave
and
pop
adc
std
test
fdivp
ss
adc
imul
sub
jbe
xlat
push
(bad)
pop
or
outs
and
pop
sbb
mov
fcom
xchg
adc
das
push
in
mov
out
or
shl
xor
sbb
pop
out
js
sti
sub
outs
iret
cmp
mov
and
push
xchg
test
nop
inc
fnstcw
mov
ss
aam
inc
(bad)
out
lds
sbb
inc
scas
push
jg
adc
call
sub
in
mov
or
test
sub
adc
rcl
adc
iret
dec
push
mov
lock
adc
ja
stos
push
push
faddp
mov
adc
popf
inc
xor
mov
or
movs
push
arpl
out
or
fidiv
ds
movs
and
xchg
xlat
mov
sub
push
mov
xor
in
popf
inc
popa
test
movs
inc
(bad)
cmps
xor
(bad)
lahf
test
pop
(bad)
mov
into
inc
mov
out
mov
cmp
sub
test
enter
push
int
data16
call
movs
call
xor
repnz
jecxz
mov
mov
dec
popf
sahf
and
dec
push
push
clc
loope
jg
add
cs
xchg
lds
mov
push
jo
ins
ds
or
or
jle
inc
outs
pop
es
and
aas
mov
mov
xchg
cld
mov
cmp
xchg
cs
mov
mov
gs
dec
push
sub
sub
add
mov
and
sbb
xor
fadd
sbb
shl
(bad)
sbb
out
sbb
xlat
push
jno
jo
pop
cmp
xor
js
pop
outs
add
xchg
jmp
or
sbb
and
dec
out
ret
cmc
test
in
mov
xchg
inc
mov
cmc
sub
mov
push
or
sub
jns
out
outs
adc
jle
xlat
pushf
inc
jge
aam
xchg
(bad)
sar
inc
idiv
(bad)
sub
pop
adc
outs
adc
je
fidiv
outs
ret
in
adc
fdivr
jbe
jb
bound
jp
pop
ja
pop
and
loop
jo
pushf
aad
test
stos
shl
aaa
sbb
push
call
shl
pop
dec
pop
mov
test
stos
mov
xor
cmp
jo
(bad)
fsub
std
add
iret
mov
adc
push
int3
cs
cmp
icebp
dec
push
push
push
jl
add
imul
fsubr
mov
arpl
sbb
pop
dec
in
pop
fpatan
sti
retf
fdiv
cs
pop
data16
pop
inc
mov
jno
mov
ror
in
add
clc
push
mov
fstp
test
pusha
push
xor
(bad)
mul
push
call
and
inc
or
(bad)
bnd
inc
and
add
mov
push
mov
das
push
retf
in
mov
in
mov
not
les
dec
pop
inc
dec
push
add
sti
sbb
pop
stos
cwde
(bad)
bound
add
imul
or
adc
push
arpl
inc
test
sub
xor
in
dec
xor
test
retf
mov
cmps
enter
bts
pop
inc
adc
add
sahf
cmp
stc
movs
repnz
ret
fxch
sub
dec
call
das
outs
mov
jle
outs
sub
call
push
mov
jb
hlt
add
push
test
pop
fwait
stos
ins
mov
add
xchg
jnp
pop
xchg
sub
sub
or
sub
retf
call
call
inc
mov
into
xchg
adc
dec
movs
sub
shl
sbb
cmp
add
call
mov
scas
pop
mov
repz
mov
call
xor
push
inc
lds
or
adc
mov
shr
scas
out
cs
push
popf
nop
mov
jnp
xor
xchg
sub
or
and
xchg
bound
adc
mov
fwait
or
add
mov
or
add
and
(bad)
inc
call
dec
jecxz
dec
sahf
push
mov
cdq
es
call
sub
fiadd
ret
sub
adc
inc
sub
pop
scas
pop
es
mov
inc
rol
lea
into
adc
repz
ins
and
mov
stos
push
xchg
push
dec
adc
pop
jmp
sub
push
and
xor
sub
nop
cmp
rol
pop
fcom
dec
jl
cmps
adc
xchg
xchg
adc
nop
lods
int
dec
jb
nop
or
push
or
ret
bound
xor
cmps
sub
dec
and
ret
movs
leave
fcmovbe
xchg
mov
out
xchg
ret
and
imul
in
ficomp
loop
sub
(bad)
aaa
test
xor
lahf
fbstp
xor
or
sub
in
sub
sub
dec
enter
push
pop
test
fabs
mov
xchg
test
sub
fcomp
cmp
xchg
xor
add
(bad)
or
jbe
mov
clc
test
cmp
and
push
imul
int
xlat
imul
fcmovu
xchg
adc
mov
jcxz
push
in
and
pusha
enter
mov
dec
or
mov
aad
cmp
sbb
aaa
fmul
mov
daa
into
inc
xor
pop
cmp
mov
xor
push
xor
pop
shl
or
in
out
inc
ret
jle
mov
out
push
int
sub
jbe
sub
fadd
sti
test
mov
dec
inc
mov
xchg
ins
push
jecxz
sbb
leave
mov
gs
ins
int
and
xor
aaa
dec
adc
adc
into
mov
aam
xor
sub
adc
mov
push
fldlg2
data16
sar
xor
mov
adc
xchg
int3
push
idiv
cmp
cdq
retf
xchg
xchg
ja
jp
adc
push
add
cwde
ja
fbstp
xor
into
stos
inc
js
out
sbb
sbb
xchg
(bad)
jp
out
push
mov
xchg
cli
(bad)
jmp
cmp
stos
aaa
xchg
das
xchg
movs
xchg
inc
retfw
pop
scas
add
adc
xchg
jne
lock
jle
adc
fst
mov
loop
loopne
dec
pop
into
les
gs
pop
add
mov
jle
dec
xchg
mov
loop
int3
aaa
push
jns
ficomp
add
and
sub
gs
sub
inc
sub
xor
xor
jno
and
adc
sbb
aam
push
mov
daa
mov
sub
jne
pop
sub
push
sbb
sub
and
fmul
lock
push
sti
lods
cmp
in
mov
fstp
cmc
add
lock
pop
or
ret
mov
cmp
inc
es
ret
leave
inc
fisubr
call
sar
int3
sbb
or
mov
(bad)
ficom
nop
push
imul
dec
jg
mov
xchg
outs
cmc
in
test
mov
imul
call
inc
or
mov
(bad)
call
jmp
jecxz
inc
pusha
inc
dec
pusha
jmp
stc
jb
xlat
rcr
mov
out
push
out
mov
loop
pop
sbb
ins
inc
pusha
fsubr
out
cli
leave
sub
push
jmp
lds
loopne
push
xor
int3
lea
xor
and
mov
jns
jae
outs
loopne
ret
mov
push
fisttp
cs
aam
xor
push
cmp
inc
inc
or
stos
mov
popf
xor
push
call
mov
imul
mov
jns
fisttp
sahf
subps
fisubr
dec
loopne
int
fucomi
test
and
enter
scas
xchg
inc
cmc
adc
rol
xor
out
rep
aas
pop
and
cmps
lods
and
test
(bad)
mov
xor
adc
outs
shl
add
jge
test
sbb
adc
inc
and
cmp
add
cmp
fbstp
ret
test
dec
ja
outs
int3
mov
not
iret
mov
ins
dec
push
jns
add
idiv
into
pop
mov
scas
or
cdq
out
jne
push
std
xchg
je
jl
mov
enter
jmp
lock
out
ins
sbb
mov
jbe
xchg
ficomp
pop
add
(bad)
dec
imul
mov
ins
mov
and
ins
dec
push
or
out
call
jmp
push
and
jecxz
enter
ret
add
jns
dec
xchg
xor
ins
mov
test
call
fcmove
xor
push
leave
jle
sub
mov
dec
inc
sub
loop
and
aad
lds
pop
adc
mov
movs
mov
lods
dec
enter
shl
clc
mov
adc
int
adc
jecxz
sti
add
push
ins
ins
ds
jge
in
data16
xor
lock
mov
push
mov
dec
rcr
aaa
sti
in
xchg
sbb
clc
and
aaa
or
movs
jno
xlat
or
dec
pop
cwde
ins
and
aas
movs
push
dec
in
pop
mov
test
mov
cld
arpl
mov
cli
popf
shr
rcr
ret
ret
xor
xchg
xchg
pop
pop
dec
pop
ins
mov
xchg
sahf
out
dec
push
scas
cmp
xor
imul
cwde
xchg
adc
js
pusha
adc
sahf
jmp
add
lods
inc
jg
repnz
jmp
xor
and
cld
pusha
dec
addr16
arpl
mov
and
jge
and
(bad)
jne
xchg
push
in
shr
mov
push
leave
dec
add
jnp
mov
loop
adc
repnz
push
icebp
mov
sbb
cld
jns
mov
xchg
test
test
inc
sbb
inc
push
arpl
fwait
(bad)
repz
out
cmp
movs
pop
inc
dec
outs
push
pushfw
cmp
out
(bad)
ror
out
imul
lea
jne
push
lea
and
sub
fstp
mov
cmp
mov
(bad)
cmc
shr
cwde
out
and
mov
dec
fimul
lahf
mov
ret
int
cdq
sub
repz
lods
or
mov
mov
dec
je
ror
jmp
fisttp
xor
pop
or
pop
xchg
fs
inc
js
mov
mov
daa
mov
scas
lods
and
mov
sub
aaa
ja
ret
jnp
in
lahf
movs
(bad)
ins
mov
shr
adc
adc
loope
mov
rcl
sbb
pop
mul
ins
sbb
(bad)
mov
hlt
pop
pop
cmc
fucomi
mov
inc
mov
push
cli
mov
stos
mov
fistp
mov
mov
iret
push
inc
into
mov
inc
repnz
inc
pop
sbb
test
fcom
jne
movs
bound
mov
jb
add
push
out
mov
and
add
xlat
or
adc
iret
out
push
ret
daa
push
pop
in
or
sub
pop
lock
arpl
rcl
into
mov
xchg
(bad)
ins
mov
push
jge
inc
xor
aas
cmp
jp
inc
mov
scas
dec
jb
or
pop
add
das
cli
inc
std
inc
cs
dec
in
cmp
sbb
dec
jns
imul
mov
ja
mov
test
nop
bound
adc
sub
lock
test
test
fs
adc
scas
std
jmp
xchg
movs
mov
fldenv
clc
fs
or
xor
xchg
adc
adc
and
out
and
dec
xor
push
xchg
cs
xchg
jo
imul
sbb
push
ret
jp
xchg
jo
adc
and
or
xlat
mov
mov
push
jp
xchg
cmp
jp
fcmovu
cmp
dec
stos
push
mov
push
push
jg
pushf
sub
mov
(bad)
and
pop
dec
(bad)
adc
repz
neg
cmp
scas
sub
push
aas
fst
dec
in
gs
inc
sub
into
sub
(bad)
mov
xchg
fisub
loop
jo
dec
pop
addr16
pop
mov
jns
adc
xchg
push
lds
pop
(bad)
push
add
loop
js
dec
jae
fist
mov
sbb
mov
mov
xchg
sbb
fstp
jne
fs
jae
es
jp
adc
loopne
push
add
not
or
js
add
ret
mov
daa
push
jecxz
push
sub
dec
jmp
cmps
jecxz
push
add
add
shl
repnz
mov
ret
sbb
adc
or
add
jnp
addr16
call
out
and
lods
jmp
cmps
mov
push
cmps
in
sub
and
repnz
or
cmp
xor
xor
sub
fistp
mov
out
(bad)
cli
pushf
ins
xor
leave
push
xor
cmp
daa
arpl
call
xor
jne
mov
fld
daa
mov
push
ins
and
sbb
fistp
sbb
ret
xchg
cmp
scas
aad
outs
inc
cwde
sti
push
and
jnp
test
push
xchg
dec
pushf
aas
out
cmps
scas
pop
in
inc
xchg
cwde
lods
push
out
dec
repz
cmps
and
pop
jb
dec
popa
mov
bound
iret
std
inc
push
mov
and
mov
loopne
sbb
int
pop
add
sub
cmp
loope
push
rcr
fcomp
fiadd
js
stos
sbb
in
push
jbe
mov
adc
pop
stos
xor
stc
mov
dec
movs
dec
mov
push
xlat
dec
fiadd
mov
sahf
push
mov
mov
dec
into
lods
cmp
popf
dec
sahf
sbb
sub
dec
and
pop
mov
and
test
movd
jge
stos
imul
ret
sub
fnstsw
push
and
jle
stc
mov
push
adc
inc
add
stos
mov
or
stos
sub
pop
xchg
std
cmp
push
sbb
sbb
mov
sbb
ins
cmp
data16
cmc
rol
ficom
xchg
pop
dec
in
push
xlat
scas
addr16
xor
dec
jmp
data16
je
movs
sbb
daa
cmp
test
mov
xchg
data16
sahf
cmp
retf
mov
aam
jmp
aad
ins
addr16
aas
pop
stos
call
sahf
repnz
or
je
mov
ins
or
jno
cmp
add
int
pop
xchg
push
std
and
push
gs
lods
jp
mov
outs
shl
xchg
jb
adc
mov
outs
daa
push
rcr
sbb
dec
clc
push
push
adc
mov
stos
ret
fimul
ss
push
sub
lods
cmove
(bad)
clc
adc
xchg
sahf
jmp
adc
cmp
scas
mov
xchg
out
xor
(bad)
dec
jns
shl
mov
scas
push
repnz
mov
mov
xlat
pop
push
movs
cmps
push
call
and
sbb
or
and
xchg
mov
xchg
or
loopne
cli
pusha
xchg
jg
jmp
dec
mov
inc
mov
and
ret
enter
out
add
adc
out
aad
mov
inc
inc
push
shl
pushf
gs
sbb
mov
lock
dec
lock
out
shr
retf
mov
adc
add
cmp
mov
ret
das
xor
adc
dec
mov
push
and
ficomp
or
test
sub
sbb
sub
arpl
and
fadd
push
mov
shr
fidiv
call
mov
lock
es
and
cmp
ss
or
mov
dec
imul
mov
xlat
pop
stos
pop
and
and
push
retf
cmps
cmp
out
je
iret
and
shl
mov
jb
(bad)
push
xchg
sub
adc
xchg
shl
call
ja
iret
mov
cwde
scas
and
imul
pop
icebp
inc
pop
addr16
and
pop
inc
test
add
xchg
jle
mov
and
jno
cdq
sub
adc
test
int3
mov
xchg
in
mov
mov
mov
sbb
sahf
ins
jmp
adc
addr16
dec
pusha
call
ins
or
repnz
mov
pop
sbb
or
xlat
addr16
fidiv
sbb
je
mov
sub
lock
fisubr
push
stos
movs
cmp
loopne
stos
jae
sbb
push
pop
(bad)
sbb
loopne
cmp
sub
popf
sbb
xor
outs
popa
or
stos
push
inc
pop
sub
or
arpl
sub
mov
adc
mov
add
jge
int
test
add
xor
add
cmp
xchg
lods
cmp
(bad)
jb
gs
or
cmp
jno
jne
adc
popa
idiv
adc
pop
outs
ret
cmp
cmp
mov
mov
dec
cmp
(bad)
push
xor
sub
sar
sbb
call
mov
int3
hlt
adc
std
call
push
iret
call
ja
cmps
jb
pop
dec
push
cli
sti
and
pop
inc
cmp
add
xchg
retf
int
inc
loopne
pop
pushf
add
imul
inc
push
or
fcmovnu
xor
imul
into
psllq
lods
dec
cmp
lock
lea
mov
stos
xor
inc
ret
sub
xchg
inc
pop
sub
pop
bound
(bad)
jmp
loope
sbb
cmps
push
cdq
loopne
adc
popa
iret
leave
shl
shl
adc
jne
mov
xchg
mov
push
shr
pop
and
jmp
mov
sbb
jne
outs
cli
test
mov
sub
mov
bound
sub
inc
pop
mov
(bad)
in
pop
sub
pop
adc
nop
xor
fisttp
pop
imul
retf
call
fld
icebp
(bad)
mov
sbb
adc
ret
aam
mov
loope
lds
movs
inc
mov
push
mov
aaa
xchg
cmp
repnz
lods
push
out
ffree
push
sbb
inc
scas
clc
stos
jne
xchg
popf
nop
and
mov
pop
push
cdq
or
xchg
add
pop
xchg
mov
ds
cmps
lods
sub
dec
imul
jne
repz
inc
scas
fiadd
outs
rol
shl
popf
icebp
xor
cmp
test
and
loope
stc
imul
mov
or
(bad)
rcl
jae
sub
fmul
mov
loopne
sbb
sbb
push
dec
push
push
push
fcmovbe
mov
fld
shr
ds
dec
adc
ins
mov
aaa
push
outs
cmc
jb
push
ds
or
sar
mov
mov
push
jle
and
mov
(bad)
jmp
dec
imul
movs
mov
pop
movs
aas
add
stc
(bad)
mov
cdq
test
inc
loop
out
dec
leave
jp
js
pushf
inc
loop
cmp
test
dec
sbb
outs
xchg
jbe
jmp
adc
jno
mov
mov
mov
and
es
add
out
es
movs
adc
scas
sbb
mov
cwde
push
in
enter
lods
pop
lock
test
pop
sub
pop
fwait
aad
js
dec
repz
in
jo
mov
push
inc
imul
sub
(bad)
fistp
adc
jecxz
std
ror
ss
mov
ficomp
mov
jmp
inc
ins
mov
dec
fstp
push
jl
jle
xchg
pushf
in
nop
inc
sub
xchg
nop
enter
jno
mov
mov
sub
scas
add
dec
push
fisub
call
push
xchg
pusha
add
push
and
or
and
xchg
xor
ret
ror
mov
cmp
sub
push
(bad)
fs
js
dec
dec
add
cmp
(bad)
mov
mov
stc
sub
aas
pusha
imul
adc
pop
cmps
inc
sbb
sbb
pop
loop
rol
jne
mov
mov
add
mov
mov
clc
and
sub
mov
fidiv
fcomp
xchg
mov
cdq
mov
and
lahf
addr16
stos
push
dec
jo
out
popa
popf
xor
cli
in
mov
add
add
mov
in
fwait
repz
xchg
cs
pop
cmps
push
test
inc
cmp
and
pop
movs
fimul
xchg
adc
adc
fwait
pop
pop
add
xchg
cmp
imul
mov
dec
ins
cmp
xchg
xchg
(bad)
jmp
loopne
rcr
aad
shr
(bad)
adc
add
(bad)
loop
(bad)
aas
cmp
stc
setne
fist
out
and
adc
jo
sbb
push
pusha
in
inc
mov
jmp
sub
repnz
cmp
clc
movs
clc
std
cmp
cmp
ror
sbb
sti
adc
or
adc
sub
inc
retf
retf
add
ret
inc
lods
xor
in
xor
daa
std
clc
jp
mov
cmp
loope
sub
or
sub
pop
or
mov
jno
cmps
ret
into
test
mov
jmp
jge
xchg
mov
sub
loope
push
mov
cwde
idiv
jns
in
shl
mov
pushf
sahf
sahf
adc
popf
cmps
pop
or
lds
adc
mov
repz
imul
enter
xor
jbe
push
dec
jmp
enter
sahf
leave
lock
and
sub
fsubr
mov
add
inc
mov
pushf
movs
sar
call
and
stc
arpl
mov
xchg
mov
mov
mov
mov
test
push
mov
or
clc
add
jb
mov
mov
xlat
pop
arpl
or
fdivr
jne
inc
pop
mov
in
or
and
pop
addr16
sub
(bad)
fst
mov
int
fwait
shl
mov
mov
push
sub
lods
dec
jne
lock
and
push
iret
sti
pop
push
neg
aas
mov
mov
and
dec
aaa
mov
add
mov
pusha
test
shl
mov
push
aam
rol
push
lds
cs
aam
mov
dec
sti
fisttp
mov
jmp
aaa
pop
mov
xchg
sti
inc
jmp
ret
cmp
fs
repz
mov
or
push
adc
inc
test
cmp
push
mov
in
sub
jmp
jg
dec
out
fcom
add
xchg
sub
mov
retf
repz
jae
and
ror
jno
call
push
ins
(bad)
adc
xchg
jecxz
adc
mov
pop
or
iret
mul
sar
adc
sbb
push
or
(bad)
or
mov
sub
mov
xor
mov
call
bnd
sbb
into
mov
mov
movs
adc
sbb
cmc
inc
(bad)
das
mov
and
add
add
jbe
pop
mov
jmp
(bad)
stc
sbb
or
dec
mov
rcl
and
push
mov
mov
bound
out
test
push
adc
ret
hlt
mov
jmp
imul
mov
add
lods
add
pushf
xor
inc
mov
jno
sub
push
fistp
pop
and
and
movs
sbb
ja
test
inc
dec
and
call
jmp
movs
mov
xor
jg
inc
sbb
leave
nop
dec
stos
xchg
lods
pushf
add
add
out
stc
and
pop
popf
mov
mov
call
sbb
dec
inc
das
ror
stos
sti
mov
adc
jns
adc
cmp
and
sbb
cmp
adc
std
mov
xor
into
mov
mov
pushf
fnstsw
and
lods
jbe
(bad)
sti
pop
stos
scas
cli
(bad)
pop
loop
xor
inc
mov
add
dec
sets
ja
pop
mov
and
mov
je
xchg
jns
sbb
aam
ror
test
call
das
push
fcom
adc
cmp
and
(bad)
(bad)
out
test
add
mov
stos
rcl
cmps
nop
and
das
adc
mov
xchg
mov
mov
or
(bad)
retf
or
push
cmp
jae
add
je
lds
data16
bound
idiv
aas
mov
call
pop
sbb
dec
mov
adc
or
imul
push
je
rcr
call
cmps
in
sbb
xchg
pop
push
and
push
cmp
sbb
jns
lea
inc
dec
jmp
sub
int
xor
jb
aas
push
mov
mov
out
inc
mov
jb
mov
cmp
dec
cmp
fiadd
adc
mov
aaa
cmp
dec
fmul
pushf
dec
add
xchg
dec
adc
icebp
cdq
jg
xchg
arpl
ds
add
retf
sbb
jl
test
and
xor
jns
add
or
xchg
jne
sti
ret
or
pop
sub
jnp
in
add
xchg
mov
mov
in
ror
loopne
scas
and
aad
cld
jg
lods
scas
mov
test
les
in
cld
add
mov
add
jnp
dec
ror
rcr
call
jmp
push
push
inc
cwde
cli
movups
arpl
pushf
xchg
call
or
mov
cmp
jns
(bad)
and
in
aad
sbb
xchg
adc
cmp
xor
push
xor
test
cs
pop
pop
loopne
in
cli
outs
push
scas
inc
hlt
(bad)
jmp
movs
inc
(bad)
test
icebp
stc
data16
cmps
xchg
leave
push
pop
fstp
jle
xor
test
push
adc
or
daa
pop
adc
loop
or
mov
fisub
jmp
lods
(bad)
outs
or
xor
les
mov
dec
outs
cmp
aam
pop
retf
call
out
cmp
mov
fstp
jb
ret
cmp
arpl
mov
or
mov
xchg
mov
mov
adc
cmp
mov
push
int
inc
pop
mov
xor
ins
(bad)
fsub
inc
movs
add
dec
call
rol
xchg
sbb
stc
cli
fisttp
das
cs
xchg
inc
xchg
jns
stos
repnz
ret
aas
pop
inc
fld
xchg
ins
(bad)
mov
add
adc
inc
add
cmc
cld
sbb
push
sub
push
leave
dec
adc
lods
cmc
mov
push
sti
shl
icebp
fadd
mov
ins
shl
fld
jae
fsubp
mov
mov
xchg
out
hlt
mov
int3
hlt
sbb
add
mov
fistp
out
xchg
leave
lods
aaa
pop
cmps
sub
loope
push
popa
or
std
mov
aaa
sub
or
or
jmp
dec
mov
mov
stos
sar
mov
and
loopne
sbb
mov
xlat
adc
stos
sbb
dec
jecxz
xor
jge
jl
dec
dec
stos
fist
mov
imul
arpl
pop
lds
or
pop
loope
aaa
out
adc
cld
mov
xor
and
(bad)
dec
xor
(bad)
aam
jo
inc
dec
xor
mov
mov
cmps
cs
dec
repz
or
(bad)
div
mov
mov
aad
push
test
dec
lods
xchg
adc
out
aas
ja
or
inc
dec
mov
stc
pop
dec
and
jno
xor
mov
inc
rol
pop
aad
xchg
adc
movs
mov
add
add
inc
fs
outs
dec
push
gs
jnp
xor
call
imul
dec
in
jl
jmp
popf
xor
loopne
test
pop
pop
mov
(bad)
loopne
xchg
out
int3
dec
fs
adc
sub
movs
xlat
in
cmps
loopne
(bad)
mov
aaa
dec
mov
stos
pop
sar
pop
mov
in
imul
pop
sbb
loopne
sub
pop
mov
into
(bad)
jb
add
sbb
add
(bad)
int3
or
mov
out
lods
call
data16
sub
aas
lds
fsubr
mov
es
xor
mov
cdq
ins
push
jns
sbb
jne
retf
ficom
sub
mov
imul
adc
inc
movs
push
add
jo
daa
or
std
in
cmc
mov
cmp
xlat
or
scas
jmp
loop
jne
fidivr
jmp
and
test
push
push
or
sbb
sub
test
pop
and
sub
add
jne
sbb
inc
adc
xlat
test
scas
jle
and
neg
lods
pop
sub
xor
imul
or
pop
cli
call
xchg
add
stos
aaa
and
enter
fdiv
int
adc
leave
or
sbb
adc
icebp
jbe
ins
addr16
call
mov
je
out
mov
addr16
fcmovnbe
mov
inc
stos
xor
fld
jmp
into
and
jo
jl
test
sbb
and
retf
pop
cmp
das
es
aad
lods
push
je
pushf
ins
fcomp
xor
cdq
pusha
jge
dec
(bad)
(bad)
dec
sbb
pop
popa
xor
xchg
out
fistp
fidivr
xor
scas
cmp
scas
addr16
mov
push
mov
in
mov
pop
and
sub
ror
xchg
or
popf
xchg
dec
push
adc
bound
rcr
and
push
mov
addr16
call
push
mov
mov
leave
(bad)
xchg
adc
mov
mov
xlat
stos
outs
sbb
popf
push
mov
mov
add
ret
or
pop
rol
in
sub
call
es
paddsb
call
aaa
cdq
cmp
push
hlt
syscall
ror
outs
mov
hlt
js
jmp
cdq
inc
mov
push
add
mov
fbld
push
mov
dec
push
xchg
xchg
iret
dec
sub
and
jmp
je
pop
xor
je
loopne
xchg
arpl
cld
lahf
inc
sbb
in
popf
pop
push
inc
clc
scas
inc
cdq
cmps
test
loopne
and
repnz
lods
sti
inc
test
iret
jl
add
jae
jne
xor
pop
jmp
sub
jmp
xchg
jmp
xchg
xor
cs
xchg
in
mov
(bad)
loopne
es
add
popf
jp
xor
out
mov
inc
ffreep
mov
push
xchg
push
xchg
mov
iret
mov
fsubp
dec
stos
dec
xor
xchg
(bad)
pushf
jnp
or
fucomip
ret
ins
in
(bad)
nop
mov
dec
cmp
pushf
test
loope
jne
jge
dec
test
pop
xchg
sub
adc
mov
add
mov
cld
(bad)
fdiv
mov
jmp
push
pop
bound
cmp
dec
pop
add
jno
dec
dec
and
mov
sbb
mov
or
(bad)
fist
jnp
pop
mov
repnz
movs
mov
scas
in
xor
push
cwde
xchg
cmp
cwde
push
mov
push
add
dec
scas
pop
fdivr
mov
jl
sbb
mov
idiv
push
icebp
inc
mov
inc
fdivr
mov
fmul
out
and
das
cmp
vmovmskps
test
mov
dec
in
imul
movs
pop
xor
nop
sub
lods
or
std
mov
add
dec
leave
adc
and
lea
(bad)
in
sub
and
dec
aaa
jae
fcomi
or
inc
cmps
pop
adc
push
or
xchg
sbb
and
dec
push
or
lea
(bad)
in
cmp
icebp
fiadd
cmp
or
inc
test
push
mov
xchg
sub
and
imul
or
or
icebp
popf
jae
out
sbb
scas
adc
or
fs
scas
jo
nop
fmul
or
sub
cdq
sbb
or
fadd
push
or
pop
(bad)
aas
out
outs
call
(bad)
shl
lds
jmp
cmps
ss
jo
cmc
std
lahf
shl
jo
shl
push
inc
sbb
or
cli
and
out
jmp
lock
jno
clc
or
sbb
and
fdivr
imul
pop
lea
es
mov
ds
cli
ss
rcr
pop
or
or
pop
jb
cld
in
pop
out
in
or
(bad)
push
sbb
cmp
add
pusha
loop
pop
pop
into
dec
stc
sbb
cmp
cli
pop
mov
stos
adc
sub
sub
cdq
out
push
pop
xchg
mov
repnz
rcr
sti
mov
call
adc
pop
lods
fsubr
mov
add
lods
pop
retf
pop
or
sbb
or
sub
shl
or
ins
xchg
inc
mov
nop
mov
call
pop
les
xor
sub
add
adc
test
jbe
mov
push
sub
jecxz
(bad)
vandps
push
ret
sub
sub
push
adc
fst
loopne
mov
(bad)
xor
dec
xchg
stc
js
xchg
lahf
mov
pop
daa
jnp
out
jecxz
mov
sar
sub
rcr
push
out
mov
(bad)
cli
cdq
test
lds
out
loop
cwde
mov
xor
mov
test
scas
pop
jmp
lods
xchg
out
mov
mov
retf
add
push
mov
js
jo
dec
sbb
mov
mov
loope
push
dec
bound
pop
in
ror
das
mov
out
mov
sub
adc
pop
adc
in
dec
xchg
repnz
push
jge
and
int3
xchg
xchg
pop
xchg
shl
pop
dec
push
ja
mov
das
sub
fild
add
cmps
sbb
das
in
fwait
popa
and
fwait
out
or
out
dec
out
cmps
xchg
mov
inc
pop
xchg
jge
(bad)
mov
xor
mov
aad
jge
adc
pop
push
cmps
pop
mov
daa
or
out
mov
stc
push
stos
pop
repnz
call
dec
sti
mov
jmp
neg
dec
lea
outs
das
in
mov
sbb
cmp
imul
push
fist
push
inc
movs
mov
(bad)
add
push
mov
or
inc
push
cdq
jb
imul
or
push
xchg
rol
(bad)
mov
shl
sub
js
lods
mov
repz
jmp
repnz
jmp
sub
xor
dec
push
inc
fs
outs
test
mov
enter
ror
mov
rcr
mov
mov
xlat
ret
xchg
out
cwde
jb
outs
arpl
shl
dec
dec
fadd
fsubrp
mov
test
and
or
and
push
or
jle
pusha
pusha
retf
ficomp
jmp
repz
pop
fidiv
inc
mov
push
popf
ins
dec
stc
sub
int
inc
in
or
mov
pop
adc
mov
push
add
call
test
in
cmp
mov
cmps
pop
mov
int
jns
retf
adc
leave
xor
sub
or
sub
jmp
aam
cmp
xchg
adc
mov
mov
xchg
test
lahf
fild
jmp
into
jge
ins
cwde
push
dec
push
add
cli
sub
das
icebp
shl
pop
sub
cmps
push
mov
(bad)
rcl
(bad)
shr
adc
xchg
pop
or
dec
fst
and
mov
repz
jns
jnp
aaa
or
test
dec
(bad)
bound
inc
rcl
xor
ins
int
and
and
cmp
or
fsubr
sbb
js
push
jp
aas
movs
mov
hlt
inc
jae
in
sbb
mov
cmp
jne
fsub
mov
lea
pop
mov
fisub
daa
retf
jae
ret
pop
test
or
ins
or
adc
cmps
scas
repz
dec
test
loope
push
lods
dec
loope
cmp
push
sub
lds
or
retf
imul
in
pop
imul
pop
sbb
pop
rcl
add
enter
jne
adc
das
dec
push
fbstp
adc
xor
cmp
mov
xchg
or
adc
pop
hlt
inc
mov
fs
cmp
or
jge
cmp
or
cwde
inc
and
jle
dec
outs
mov
inc
inc
mov
cmps
pusha
xor
(bad)
lods
xchg
jbe
sub
(bad)
stc
cs
movs
bound
cmp
xchg
or
mov
stos
pop
mov
mov
cdq
inc
and
jl
fistp
aad
mov
icebp
sub
inc
pop
xchg
jne
sbb
mov
(bad)
mov
inc
jo
mov
dec
iret
xchg
sub
push
stc
jecxz
adc
pop
xchg
in
jns
jg
daa
cmps
cmp
aad
stc
sha1msg2
jl
dec
pop
xor
jmp
lods
xchg
loope
cwde
outs
jbe
sbb
mov
shr
sbb
in
sar
lahf
sar
fwait
test
mov
cmp
shr
movs
cmp
push
push
fs
mov
outs
and
pop
push
inc
stc
ins
test
ret
adc
in
std
add
xchg
inc
or
popf
ds
mov
push
cmp
inc
mov
xchg
ins
fsubr
movs
mov
lock
popf
sub
pushf
in
sbb
popf
cld
pop
lods
pop
je
pop
dec
mov
mov
push
mov
xchg
jne
scas
xor
sbb
pop
jne
mov
sbb
cmp
sbb
inc
call
sti
pusha
imul
or
mov
lea
inc
outs
call
movs
mov
or
les
mov
push
or
or
enter
rcl
fnsave
xchg
dec
mov
pusha
push
repz
push
mov
loope
out
popf
and
test
or
sahf
aas
dec
jns
cld
stos
push
mov
aam
int
jnp
icebp
fcom
fsub
ret
add
xchg
out
add
jne
in
lahf
outs
dec
(bad)
xchg
jle
mov
mov
jg
sar
pushf
call
cmp
cmp
push
(bad)
pop
cmp
add
mov
test
aad
add
ret
jmp
cmp
sub
mov
nop
ror
loop
scas
iret
mov
mov
fwait
(bad)
dec
xlat
adc
jg
pusha
leave
xor
sub
lock
jno
sbb
dec
dec
dec
enter
(bad)
retf
sub
rol
fnstenv
aam
push
mov
mov
pop
addr16
jl
inc
push
mov
lock
sub
in
push
outs
xchg
mov
push
xchg
icebp
out
ja
aas
bound
mov
mov
popa
pop
push
fadd
cmp
enter
stos
cmp
jmp
(bad)
mov
and
fstp
xchg
xchg
push
mov
xchg
adc
int
lds
mov
jecxz
sub
add
pop
jg
shl
clc
or
mov
mov
pusha
fild
inc
and
sahf
pop
mov
jnp
ja
mov
and
mov
out
pop
or
lahf
sub
push
xor
dec
clc
xchg
mov
add
sbb
xchg
popa
or
pop
pop
enter
add
adc
cmps
fimul
test
mul
dec
mov
inc
cld
or
xchg
call
aaa
mov
cmp
outs
sub
xor
enter
std
mov
cmp
mov
iret
cld
shl
cs
xchg
dec
cmp
das
adc
xchg
xor
cdq
rcl
neg
or
adc
pop
or
and
test
das
and
cmp
mov
xor
pop
pop
in
cs
add
test
pop
cmps
adc
jne
push
mov
xor
fisub
ins
stos
push
sbb
repz
push
push
jns
(bad)
int
aaa
mov
lahf
mov
jnp
cli
sti
iret
and
std
(bad)
jmp
push
push
test
test
iret
movs
js
xor
clc
xchg
xor
inc
frstor
iret
pop
loopne
or
pop
add
and
(bad)
mov
retf
out
pop
repnz
hlt
js
shl
mov
xchg
js
into
cmp
push
(bad)
out
imul
xchg
push
pusha
add
xor
fcomp
pop
ret
jne
int3
int
bound
or
xchg
inc
xchg
inc
xchg
xchg
std
push
mov
ret
adc
(bad)
and
push
jmp
mov
cmps
sbb
mov
push
pop
push
mov
mov
icebp
pop
mov
pop
rcl
dec
inc
jmp
scas
jmp
sbb
jmp
mov
add
js
popa
jl
gs
out
mov
jecxz
mov
in
retf
mov
nop
mov
icebp
or
icebp
test
(bad)
adc
mov
imul
sub
jmp
stos
adc
adc
or
in
push
cmp
mov
sub
bound
sbb
jge
jecxz
inc
cmps
lods
mov
or
jo
inc
mov
inc
xor
fwait
jl
(bad)
int3
xchg
rol
add
push
sbb
aam
rcr
aam
test
or
mov
mov
inc
scas
pop
div
fnstsw
fdiv
or
jno
add
jbe
in
mov
add
mov
daa
pop
cmp
dec
lods
jmp
mov
(bad)
scas
je
mov
movs
xchg
dec
jg
inc
nop
idiv
inc
stos
adc
mov
inc
and
pop
mov
dec
mov
or
dec
ror
stos
mov
imul
and
adc
mov
cmp
(bad)
movs
push
add
push
fimul
sbb
(bad)
unpckhps
sbb
es
jae
push
mov
test
rcl
int
cmps
dec
pop
addr16
movs
loop
jae
call
(bad)
imul
mov
pop
je
arpl
in
pop
in
setbe
dec
dec
es
add
adc
std
out
xchg
int
push
sbb
jo
and
retf
inc
fwait
out
test
(bad)
mov
xor
movs
and
popa
cwde
pop
push
cmc
or
movs
pop
jno
inc
mov
imul
adc
sbb
dec
mov
and
test
js
mov
push
imul
push
mov
jae
int3
aad
xchg
dec
and
xlat
cmps
loope
inc
sbb
add
aad
repz
pop
icebp
lods
dec
out
mov
inc
push
mov
mov
add
sbb
daa
sub
imul
jl
jle
int3
mov
mov
xchg
scas
fdiv
sub
cmc
ja
pop
sub
cwde
xchg
and
jl
mov
dec
or
inc
test
inc
stos
int
popa
stc
cld
dec
aad
shl
push
mov
add
vmovq
cs
fsubr
cdq
jp
in
push
imul
xor
jmp
mov
lods
sub
daa
ret
xchg
dec
jno
mov
dec
icebp
(bad)
fiadd
jbe
imul
mov
ja
test
mov
add
loop
xchg
sbb
and
mov
scas
jecxz
fdiv
sub
mov
ds
mov
pop
jae
cmp
pop
(bad)
stc
fdiv
and
or
mov
pop
inc
inc
sub
lahf
out
inc
sub
push
out
xchg
xchg
cmc
bts
arpl
sti
enter
jbe
mov
dec
xchg
movs
ss
into
clc
cmp
lea
jecxz
inc
stc
adc
lea
in
mov
inc
(bad)
outs
cmp
xchg
in
mov
inc
dec
inc
push
mov
lock
lock
lds
es
jecxz
mov
jmp
ins
mov
jecxz
add
cmps
js
mov
imul
mov
gs
leave
mov
jp
xor
mov
js
retf
(bad)
js
stc
sub
mov
cmps
cmp
mov
cmp
repz
mov
ret
je
out
ds
add
cli
mov
dec
pop
ror
push
dec
aas
cmp
mov
fcom
add
jg
xor
in
inc
dec
dec
stc
mov
fst
icebp
mov
movs
mov
and
lods
mov
or
fs
arpl
add
and
mov
cmp
xchg
inc
lods
xchg
sahf
sub
fsubr
mov
jl
ret
cli
in
fdivr
add
or
cs
jge
in
test
clc
pusha
loope
rcl
adc
test
lods
fcom
ins
mov
test
in
call
std
fiadd
mov
shr
xchg
fwait
sub
sub
sbb
pop
mov
les
popf
inc
jae
loopne
pop
stos
mov
popf
cmp
sbb
cld
adc
sub
sub
daa
imul
xchg
sahf
out
mov
sbb
mov
sbb
jge
fwait
sub
mov
xchg
inc
mov
das
fwait
mov
retf
adc
mov
int
xor
in
sbb
and
retf
repz
hlt
cld
test
and
cmp
jmp
shr
adc
dec
push
aad
sbb
pop
fbstp
mov
push
in
sub
jne
mov
call
into
jno
sbb
xchg
jo
pop
cdq
sub
ja
cmp
fs
ret
push
stos
push
sbb
mov
adc
or
xchg
add
fimul
call
mov
cld
imul
out
xchg
cs
in
leave
mov
loope
pop
xchg
lahf
push
retf
das
fimul
mov
inc
iret
or
lahf
jmp
addr16
push
sahf
xor
popa
jmp
mov
inc
cmp
xor
call
lods
or
push
inc
loop
xor
or
aad
xchg
cwde
arpl
dec
jmp
lock
push
mov
dec
iret
sub
jne
mov
arpl
mov
mov
lods
dec
cmp
push
in
inc
int
cmp
shr
outs
rcr
(bad)
sub
fwait
dec
out
js
pop
cli
inc
mov
sub
or
fstp
shl
pop
fwait
and
sub
(bad)
mov
mov
push
(bad)
xor
test
and
push
cmc
test
mov
pushf
test
ins
mov
aam
inc
dec
fidiv
(bad)
jmp
std
add
(bad)
cmps
push
hlt
or
jge
(bad)
(bad)
pop
sbb
pop
ins
and
adc
jl
test
cmp
movs
mov
sti
popf
into
psrld
inc
addr16
imul
inc
jle
and
sbb
mov
test
sbb
add
mov
xor
(bad)
ins
stc
and
fldcw
pop
cmp
(bad)
sub
lahf
add
add
mov
jb
leave
xchg
jmp
stc
(bad)
cmp
adc
popa
lds
mov
and
mul
mov
and
loop
arpl
inc
or
cdq
repz
out
inc
jmp
adc
leave
cdq
xor
jae
aas
(bad)
jp
mov
mov
mov
dec
adc
cmp
inc
mov
cmps
push
dec
popf
cs
or
push
and
sti
stos
sub
daa
adc
sub
xor
add
mov
rcr
xlat
jne
sti
adc
mov
xor
or
stos
push
xchg
pop
iret
in
fisttp
(bad)
inc
scas
inc
(bad)
rcl
add
retf
test
out
test
aad
add
xchg
mov
mov
mov
xchg
das
sbb
sub
in
test
scas
mov
mov
cmp
movs
das
dec
or
aam
push
jns
gs
jecxz
lock
in
pop
in
fld
mov
ja
jmp
lock
js
mov
and
xchg
fld
mov
cmp
dec
cli
movs
in
pop
cmps
inc
fisttp
pop
shl
movs
jge
leave
xchg
les
not
fwait
xlat
icebp
jmp
adc
or
mov
sub
inc
inc
retf
sub
in
xchg
ss
push
shl
(bad)
cmp
hlt
pop
inc
adc
aad
jp
lods
and
pop
dec
inc
retf
or
rcr
clc
sbb
xchg
mov
and
shl
enter
pop
lds
mov
scas
test
or
mov
jg
xchg
inc
ins
or
mov
inc
jle
in
ss
nop
cdq
mov
cmp
sub
lods
or
dec
xlat
or
outs
aaa
jnp
enter
xchg
mov
push
test
xor
icebp
mov
das
sbb
xchg
popf
stos
cmps
and
(bad)
sub
inc
dec
inc
sahf
ins
push
dec
mov
inc
inc
gs
push
add
jns
mov
dec
xor
outs
add
(bad)
ds
and
sbb
sahf
cdq
call
push
mov
push
add
jle
adc
jle
leave
stos
sbb
jp
push
mov
pop
pop
pop
inc
jb
pop
or
aaa
sbb
sahf
dec
and
lock
add
scas
cmp
imul
push
push
mov
shr
movs
or
or
jmp
mov
jp
es
inc
cwde
in
fldcw
push
inc
add
std
rol
cmp
icebp
xor
in
xchg
ins
outs
loope
loopne
push
loop
aas
(bad)
fcmovne
stc
or
add
sub
shl
fbld
sub
call
cmp
and
sbb
dec
fidivr
es
cdq
ins
popa
sbb
add
in
sub
test
test
stc
pop
dec
cmc
int3
imul
push
xor
pop
rol
mov
test
mov
ins
and
cld
dec
xchg
lahf
mov
int3
cmp
jp
ins
cmps
fistp
jnp
imul
nop
call
shl
mov
jnp
or
test
mov
call
sub
scas
pop
loopne
cmc
fisub
ret
rcr
sbb
cld
jmp
pop
jp
or
push
clc
(bad)
repnz
xchg
mov
xor
hlt
add
inc
push
std
out
fild
inc
data16
fwait
cmc
or
mov
movs
mov
sti
dec
mov
inc
dec
or
push
rcr
xchg
cmc
jp
push
test
push
in
jmp
sbb
xchg
aaa
out
jl
cmp
inc
movs
xor
fcmovnbe
mov
mov
xchg
repz
push
mov
mov
imul
mov
pop
xchg
sub
jnp
out
call
pop
mov
popf
scas
push
xchg
clc
mov
test
xor
daa
sub
arpl
pop
push
fst
call
repnz
push
dec
outs
sbb
cs
cmp
xor
das
xor
or
aad
(bad)
aad
and
cmpxchg
push
ins
sub
call
sub
adc
mov
or
jmp
push
pop
mov
add
fmul
cdq
lods
xrelease
add
daa
fsub
gs
es
xchg
adc
hlt
push
jl
pop
ret
push
fnsave
xchg
adc
cld
dec
inc
dec
xrelease
retf
rcr
and
cmp
mov
add
pop
mov
popa
pop
and
add
es
xor
int3
jns
mov
mov
lods
push
fadd
cwde
out
stos
aam
xchg
scas
ror
push
mov
cmc
mov
sub
adc
and
pop
rcl
les
pop
ja
pop
adc
push
sub
push
shl
xor
das
jp
iret
clc
mov
add
lahf
xor
data16
or
shl
mov
fadd
inc
leave
out
push
data16
push
jecxz
dec
jge
mov
mov
push
pop
dec
shl
jle
test
je
cs
int3
push
mov
int
call
adc
iret
dec
mov
(bad)
adc
push
cli
movs
jmp
mov
cmp
jnp
out
jno
jb
mov
fstp
lock
mov
popa
std
and
inc
hlt
or
iret
pop
out
cdq
sub
mov
out
sbb
pop
ja
sub
mov
das
shl
mov
imul
out
cmps
fwait
cdq
sub
cmps
or
cmc
dec
sub
mov
inc
iret
xor
pushf
ins
fimul
and
push
sub
bswap
add
sbb
lds
push
in
enter
mov
sub
in
inc
lea
add
inc
je
popa
aas
cmp
ja
mov
push
ja
push
adc
mov
mov
addr16
fiadd
cmps
adc
cmp
inc
movs
sub
das
enter
jp
cmp
mov
jnp
idiv
data16
pop
outs
hlt
imul
xlat
push
cmp
xchg
repz
mov
movs
cmp
jle
cmp
and
mov
and
fst
or
hlt
dec
test
(bad)
lods
pop
sub
dec
jo
out
ja
mov
fdivp
push
(bad)
leave
pusha
jnp
sbb
in
mov
inc
add
into
int
add
movs
outs
data16
(bad)
in
out
or
clc
jo
mov
rcr
jle
push
inc
xchg
lock
mov
dec
xchg
push
xor
es
int
mov
adc
cmp
in
lods
add
pop
fst
fistp
cmc
cmps
loope
push
movs
push
cwde
js
(bad)
retf
xor
dec
out
test
call
inc
mov
cmp
push
mov
or
mov
fs
sub
movs
out
sti
ds
aad
and
adc
stos
pop
not
cmp
aad
mov
xchg
cli
push
movs
les
div
push
xchg
pop
and
in
mov
fdivr
pop
or
jge
lods
pop
adc
mov
lahf
and
pop
ss
(bad)
mov
or
mov
adc
jno
mov
cli
enter
sub
nop
cmp
push
enter
bswap
lods
cmps
sub
mov
(bad)
adc
mov
in
cmps
cmp
pop
ret
or
(bad)
sbb
sub
out
push
mov
arpl
jae
cmps
aam
mov
lods
push
jnp
shl
sub
je
mov
jbe
scas
and
inc
test
push
(bad)
loopne
sbb
xchg
ret
ins
aas
xchg
cld
movs
and
cdq
nop
fs
pushf
aas
xor
jl
(bad)
cdq
push
fst
xchg
repnz
pop
mov
cmp
add
rep
fcompp
loop
cwde
test
enter
xor
xor
into
gs
je
std
loop
mov
ins
lods
out
mov
repz
addr16
adc
js
ds
pop
fadd
jle
inc
inc
lahf
cmp
add
xchg
shl
xchg
push
pop
jle
movs
les
xchg
mov
loopne
pop
ins
mov
movs
(bad)
ret
inc
mov
stos
clc
mov
movs
test
aas
dec
pop
push
push
into
push
and
outs
add
lods
loope
jne
inc
push
cmp
xchg
ja
(bad)
lahf
popa
sti
pop
dec
push
sbb
in
mov
das
push
mul
pop
in
call
adc
or
imul
shr
push
mov
ret
mov
pop
nop
sti
pop
add
not
pusha
hlt
cmp
inc
(bad)
push
int3
jg
push
cli
in
and
cmp
jmp
addr16
mov
stos
jmp
xchg
mov
imul
cmp
jbe
sbb
push
mov
cmc
add
mov
arpl
jae
xchg
or
fild
ins
fistp
mov
jo
push
xchg
xorps
mov
inc
mov
xor
fnstenv
lahf
inc
mov
add
push
ss
repnz
fwait
add
mov
repz
sbb
lods
xchg
pop
jb
test
adc
stos
jmp
jns
mov
call
fild
inc
cmp
test
cmps
mov
in
ret
sbb
shl
not
add
xchg
fild
jns
pop
push
xor
fs
mov
cld
mov
sub
cmp
sbb
sbb
xchg
lock
adc
xor
jge
rcl
out
mov
fstp
sub
jecxz
cld
out
fistp
out
ja
mov
lds
fmul
mov
rol
out
dec
out
fisub
rep
fisub
outs
aas
pop
stos
dec
(bad)
push
and
aaa
mov
out
shl
or
or
xchg
xor
ins
test
and
into
jae
shl
shl
clc
pop
mov
adc
inc
cli
add
mov
and
pop
sub
xlat
xchg
rcl
mov
bound
in
push
je
sbb
jg
sub
push
sub
cmc
retf
mov
(bad)
cmp
ja
adc
(bad)
or
adc
js
rol
stos
arpl
call
and
inc
push
daa
mov
add
jnp
outs
xor
(bad)
or
push
push
fisttp
inc
cmp
out
xor
jmp
and
or
(bad)
push
and
jg
mov
idiv
fcomp
mov
xchg
into
stc
sbb
add
test
jb
jno
test
jmp
mov
adc
or
mov
xchg
repnz
outs
inc
cs
aas
inc
rol
mov
sub
push
mov
inc
and
mov
pop
mov
dec
dec
in
push
mov
xlat
fs
aas
jge
(bad)
dec
inc
rcl
mov
call
daa
sbb
inc
popa
nop
rdmsr
out
out
jnp
das
daa
jecxz
mov
xchg
rcr
mov
add
add
out
ds
adc
lahf
xor
mov
push
inc
cmp
lods
mov
inc
inc
jg
add
jle
jbe
cmp
inc
mov
adc
shl
push
add
nop
in
push
setp
in
bound
jae
push
lods
iret
addr16
int
inc
retf
mov
push
ret
(bad)
fdivr
retf
sti
and
nop
shl
sahf
stos
xor
(bad)
dec
in
loope
ret
or
or
popa
fild
push
in
mov
int3
in
inc
xchg
inc
imul
sar
ins
data16
mov
sahf
jecxz
dec
push
adc
xchg
sub
mov
sub
fcomip
jo
xchg
std
push
sub
jae
sbb
mov
enter
mov
or
xchg
stc
add
inc
or
or
or
inc
cmp
push
xchg
out
push
pushf
sbb
(bad)
jge
push
xchg
(bad)
mov
sub
mov
jle
jp
imul
mov
or
imul
popf
push
inc
test
enter
mov
sub
fcomp
adc
pop
adc
push
lahf
push
retf
cmp
es
and
fbstp
dec
ret
mov
jb
(bad)
fwait
test
sub
(bad)
icebp
push
or
mov
test
add
push
cmp
pop
pop
sub
dec
sub
fdivrp
dec
lahf
(bad)
call
sbb
lods
int
cmp
test
pop
retf
popa
push
and
retf
xor
jb
or
pop
int3
(bad)
ja
mov
jle
fnstenv
test
xor
in
xchg
sub
pop
sub
pop
mov
lock
aad
jae
es
adc
test
xor
je
outs
pushf
push
inc
lahf
xor
adc
mov
add
xchg
xchg
in
push
jg
and
(bad)
loopne
xchg
iret
popa
add
jg
stos
push
xchg
add
in
cmc
cdq
inc
cli
jmp
ds
xchg
adc
jg
cmps
mov
mov
xor
xor
dec
jg
loop
movs
sub
sbb
addr16
sbb
adc
popa
xchg
mov
call
or
dec
mov
push
mov
(bad)
or
cmp
pushf
(bad)
je
popf
cmp
rol
mov
sub
lds
mov
aam
test
aas
stos
mov
cmp
mov
lds
or
bound
mov
mov
lods
cmp
call
pop
std
mov
xchg
mov
sub
cmc
mov
mov
adc
jo
adc
add
and
mov
sahf
xchg
push
pop
jge
xlat
cli
sbb
push
ja
repz
mov
test
sub
push
dec
lds
lock
aas
or
xchg
int
das
push
test
div
adc
ds
or
and
pop
int
cmc
and
xchg
adc
shl
jmp
ror
js
cmp
jle
and
or
pand
sub
ror
mov
mov
call
pop
xchg
xor
leave
inc
ins
lahf
add
dec
jb
push
leave
adc
xchg
dec
cmp
xchg
mov
xor
clc
sar
jno
sub
fwait
push
push
push
inc
mov
mov
ret
inc
dec
push
push
push
dec
es
ret
jbe
cmps
retf
push
dec
jl
gs
scas
or
sahf
leave
cmp
aas
mov
mov
or
inc
xchg
stos
movs
mov
ret
adc
es
pusha
call
push
(bad)
aam
pop
inc
pop
popf
in
mov
ins
xor
xchg
add
cmp
mov
push
xor
retf
adc
lea
add
mov
aas
jno
mov
or
shl
mov
jb
dec
sub
aad
mov
mov
ins
push
xor
jl
pcmpgtd
inc
out
repz
dec
leave
ja
pop
mov
mov
sbb
fcom
pop
jle
sub
call
aas
dec
adc
mov
(bad)
shl
push
add
in
lods
cld
mov
mov
cmp
sub
mov
in
out
mov
fistp
retf
rol
pop
push
jns
adc
leave
test
fs
push
jb
outs
stos
jb
cmps
aam
js
int
push
sbb
bound
mov
sbb
stos
js
aaa
adc
dec
jmp
aad
adc
adc
or
loopne
xchg
push
loop
cmp
mov
push
inc
lahf
fisubr
jno
ja
shl
dec
pop
sahf
into
dec
mov
ror
push
mov
inc
addr16
add
and
jle
jge
cmps
cld
cli
loope
cld
or
or
jmp
xchg
repz
push
push
inc
hlt
movs
stc
pop
movntq
and
shrd
pop
adc
add
dec
stc
jecxz
ss
push
or
jge
mov
loop
and
cmp
popf
pop
and
mov
out
push
sbb
xchg
or
sub
inc
mov
daa
fsubr
sub
xchg
cmps
popf
ins
jg
lods
in
mov
cmp
test
xchg
dec
add
(bad)
aas
mov
retf
mov
movs
and
(bad)
pop
jl
fdiv
and
push
and
inc
cs
in
or
nop
cld
cmp
adc
shl
add
mov
arpl
sub
nop
cmp
(bad)
aam
outs
pusha
and
pop
aas
or
repnz
fs
sbb
and
push
sub
push
push
fs
(bad)
iret
aas
cmp
leave
push
nop
push
and
in
les
loopne
lahf
ins
cmp
xor
ins
ret
add
lds
ret
in
stos
fcmovu
scas
enter
mov
sbb
dec
lock
ja
adc
and
push
dec
into
inc
ins
xchg
out
bound
jg
call
aas
xor
mov
sub
ret
adc
inc
inc
mov
enter
fwait
shl
dec
addr16
pop
pop
movs
aas
push
mov
leave
sti
aad
loop
inc
mov
in
dec
mov
(bad)
jg
inc
xor
je
jmp
mov
js
add
scas
movs
mov
xchg
xor
loopne
jg
fbstp
add
sub
gs
add
inc
sub
or
popf
inc
adc
xor
imul
cwde
mov
adc
cmps
dec
mov
push
adc
call
push
out
movs
in
out
cli
mov
mov
(bad)
pop
and
pusha
sbb
push
mov
or
dec
pop
xlat
sub
mov
data16
scas
add
mov
pop
loope
icebp
arpl
add
int
dec
shr
mov
cmps
imul
inc
mov
fwait
dec
sar
data16
stos
pop
pop
push
push
sbb
dec
movs
retf
inc
ret
bnd
push
pop
cld
(bad)
adc
ds
add
sahf
scas
inc
xchg
or
adc
out
xchg
dec
push
jnp
adc
xchg
add
lds
pop
xor
not
push
add
jecxz
sbb
sub
pusha
or
and
sar
call
(bad)
push
into
inc
adc
sar
ret
mov
gs
cwde
and
xchg
xor
call
jl
ja
es
and
scas
(bad)
enter
js
inc
cld
xlat
sbb
xchg
xchg
mov
movs
or
sar
xchg
ins
xor
inc
xor
ins
cmp
data16
push
sbb
imul
push
jnp
js
or
sub
aaa
inc
out
add
jl
push
pusha
(bad)
in
push
mov
scas
push
xor
lock
mov
and
(bad)
push
cmc
mov
sti
adc
mov
push
sahf
mov
cdq
pop
popa
inc
jmp
dec
pushf
dec
jo
pop
fucomp
jo
xor
adc
cmps
jo
or
jg
(bad)
sub
inc
mov
xchg
xor
add
in
in
dec
and
xchg
lock
cwde
into
cmc
mov
sbb
in
scas
ds
sub
icebp
rol
nop
retf
dec
and
outs
xchg
add
sub
xchg
shr
in
and
aam
sub
pusha
paddq
xlat
lahf
xor
movs
gs
fisubr
lea
mov
mov
mov
cmps
cwde
dec
jge
push
mov
mov
jmp
enter
outs
repnz
aam
push
dec
and
push
push
mov
loopne
dec
test
cwde
jl
mov
pop
hlt
dec
mov
sahf
mov
push
enter
or
ds
test
fsubr
fwait
test
dec
inc
cmc
mov
and
pop
(bad)
shl
icebp
lds
push
cmp
sbb
push
cmp
fidiv
push
mov
sti
outs
cmp
xchg
jp
mov
xchg
test
call
scas
aam
shl
out
xchg
jns
ret
push
cli
mov
mov
cmp
xor
fisttp
dec
iret
pop
inc
push
repnz
lock
pop
add
pusha
iret
(bad)
aad
dec
pop
gs
fsubr
and
cmp
mov
dec
int
fsub
loopne
dec
cdq
je
jg
or
xor
adc
icebp
scas
cmc
lds
xor
not
out
adc
shl
jge
xchg
cld
into
push
add
dec
sbb
aam
stc
(bad)
movs
mov
shl
iret
test
int
call
jp
jne
loop
(bad)
dec
push
push
push
aam
sub
mov
jnp
loop
into
inc
push
aas
pop
mov
repz
push
mov
cmp
sub
nop
cmp
jge
cdq
scas
pop
fsin
xchg
repz
int
int3
dec
add
js
imul
ins
jne
(bad)
mov
xchg
outs
sub
dec
es
inc
cs
mov
mov
fnstcw
stos
stos
sub
inc
lahf
adc
rcr
jecxz
mov
outs
pop
sbb
lea
iret
in
scas
jo
inc
add
retf
pop
jo
fist
stc
mov
xchg
add
jno
xor
inc
test
int
pop
mov
pop
mov
lock
fsub
jno
or
adc
cmp
push
adc
dec
pushf
pop
inc
adc
leave
mov
cmp
lahf
or
std
and
daa
mov
shl
call
mov
aad
sbb
pop
rol
mov
data16
(bad)
xor
dec
inc
movs
mov
dec
pop
loop
and
xchg
jmp
test
test
fadd
sub
aaa
out
mov
ja
sahf
cmp
ins
shl
xchg
jo
push
hlt
push
imul
(bad)
out
popf
and
pop
or
mov
hlt
ret
cwde
int
add
jecxz
sub
inc
mov
std
mov
xor
mov
sub
pushf
mov
pop
dec
xor
mov
pusha
mov
mov
mov
pop
or
xchg
mov
inc
test
test
int
dec
cmps
in
mov
jae
pushf
scas
in
dec
inc
xchg
enter
paddq
sti
retf
xor
adc
(bad)
sub
scas
mov
(bad)
lea
shl
mov
and
outs
fs
xor
and
push
js
push
cmc
push
pop
cld
jbe
sbb
movs
cmp
jbe
inc
sub
pop
popf
ja
data16
mov
in
push
push
xchg
out
xlat
js
xlat
cmp
fidivr
rcr
push
xor
adc
sub
adc
add
and
push
scas
add
or
ret
movs
mov
addr16
fiadd
jl
add
out
dec
pop
ins
imul
mov
sub
dec
cmp
in
ss
jmp
mov
inc
or
sbb
nop
xchg
inc
xchg
push
xchg
mov
test
mov
pushf
loope
mov
cdq
mov
movs
ins
and
jbe
xchg
scas
ret
add
jbe
pop
jnp
fs
cmp
outs
scas
ktestq
ror
pop
stc
(bad)
fstp
retf
add
adc
shl
pop
imul
shl
mov
mov
out
cmp
mov
or
addr16
sub
scas
mov
sbb
or
into
and
xchg
or
mov
pop
mov
sbb
inc
mov
xor
out
mov
pop
cmps
add
mov
add
cmp
imul
mov
shl
test
jo
stos
xchg
outs
fistp
(bad)
mov
enter
cli
fidivr
and
cmp
cld
retf
xchg
pusha
xchg
stc
and
pop
jle
jp
icebp
jb
es
dec
cld
out
(bad)
aaa
or
inc
loopne
pop
ins
dec
adc
sbb
in
push
mov
mov
jp
jb
cs
out
sti
mov
xor
or
xchg
mov
or
add
xchg
push
call
jns
in
in
sub
aam
retf
or
es
imul
shl
or
leave
clc
inc
les
xchg
or
mul
ja
pop
shr
dec
ins
dec
je
and
fstp
pop
js
inc
in
or
xor
cmp
into
int
or
punpckhbw
inc
hlt
adc
cli
cmp
jecxz
dec
xchg
jl
jne
hlt
mov
dec
cli
dec
in
cmp
sbb
push
ja
xlat
aas
test
test
inc
xor
pop
lea
sub
mov
pop
cmp
xor
loope
inc
or
xlat
adc
or
sbb
test
call
pusha
mov
sbb
mov
out
xlat
mov
call
iret
ror
pop
push
ret
fsubr
outs
fldcw
adc
xchg
in
cdq
and
movs
imul
stos
dec
movs
shl
mov
bnd
(bad)
xor
les
sbb
mov
pop
clc
mov
test
sub
lods
pop
cmp
pop
cs
pop
adc
shr
das
stos
or
scas
xor
fnsave
(bad)
and
mov
jno
fwait
aad
cli
dec
enter
adc
cmps
cs
xchg
in
cmp
stc
into
jmp
pushf
fnstsw
cmps
dec
cdq
(bad)
mov
sub
addr16
fld
(bad)
ror
mov
outs
fs
jmp
mov
out
mov
jge
adc
push
push
sti
call
inc
icebp
cmc
les
int3
push
in
jmp
iret
sbb
and
xor
xchg
stc
icebp
repnz
mov
jo
xor
stos
dec
cmps
dec
and
movd
mov
push
movs
(bad)
dec
in
in
sbb
fmul
div
mov
ins
adc
mov
daa
out
fnsave
gs
pusha
inc
pop
lea
pusha
cmps
lods
cmc
imul
(bad)
js
pop
push
pop
xchg
mov
cld
out
loopne
sbb
dec
aas
sti
pushf
fsub
rol
jb
pop
xor
xor
pop
test
scas
xor
aam
retf
xchg
mov
cdq
sbb
jb
and
cmp
xor
ficom
mov
mov
mul
ss
sub
mov
push
in
push
xchg
adc
ins
cmp
xor
ins
push
xchg
cmp
xor
lds
or
shr
sub
xchg
mov
movs
mov
cdq
js
sbb
shr
push
cmp
pop
out
es
cmps
push
cmc
packsswb
movs
push
sub
loope
dec
loope
ftst
sub
jp
inc
jbe
and
sbb
xor
clc
(bad)
mov
test
mov
cmp
(bad)
retf
push
mov
clc
xchg
or
fist
push
pop
jb
fwait
mov
movs
fcomp
retf
ds
pop
push
les
mov
ins
(bad)
jb
add
dec
xor
rol
pop
ficomp
daa
loopne
inc
test
cvttps2pi
ret
sar
jnp
jmp
push
jp
mov
mov
adc
dec
mov
sbb
xor
ins
xchg
mov
les
(bad)
stc
jmp
mov
fdiv
leave
adc
dec
das
test
jnp
inc
je
mov
inc
pushf
dec
sbb
cmps
dec
and
push
fbld
adc
rcr
xchg
mov
lods
aad
cmc
inc
jo
daa
ret
cmp
inc
xchg
jb
mov
jnp
xchg
cmp
retfw
mov
sbb
dec
gs
cmc
fwait
and
lock
aam
pop
mov
or
jns
adc
aas
pop
loopne
retf
mov
xor
es
mov
sbb
sbb
mov
inc
add
daa
pop
push
mov
aaa
cmp
push
fwait
icebp
mov
(bad)
out
stos
pop
aaa
pop
call
sub
shl
inc
shl
inc
cmp
sub
and
xchg
popf
add
mov
cs
rcr
adc
cmp
ja
stc
mov
xor
retf
jns
fbstp
popa
jmp
adc
fst
and
inc
shl
mov
rcr
rol
push
xchg
mov
push
sahf
(bad)
dec
ret
add
adc
inc
(bad)
leave
movs
mov
out
xchg
cmp
ins
inc
sub
pop
enter
pop
imul
imul
rcr
mov
hlt
xchg
inc
outs
test
popa
mov
pusha
jns
sbb
repz
push
jp
cs
pop
jg
or
loop
pop
leave
fs
sub
pop
mov
adc
inc
lods
inc
lods
ret
adc
dec
xchg
add
or
mov
pop
outs
xchg
xchg
sbb
fyl2x
or
ret
xchg
push
adc
prefetch
or
or
stc
xor
sbb
mov
mov
or
push
jl
add
repz
adc
in
add
add
mov
cmc
push
push
xor
arpl
dec
mov
fcmove
mov
fistp
shr
fidiv
fnstenv
nop
cli
cmps
jno
sbb
cmp
es
xchg
int
dec
imul
leave
cmps
add
inc
nop
mov
mov
sbb
push
out
push
cld
neg
jg
jb
out
add
cmp
cld
or
jne
xor
adc
popf
jb
adc
das
push
and
mov
sub
sub
mov
add
(bad)
xchg
cmc
aaa
pop
push
scas
imul
repz
dec
jmp
ret
rcl
xchg
rcr
cmps
ret
adc
mov
sbb
dec
adc
xor
adc
xor
and
ret
dec
fsubr
(bad)
lods
jno
push
shl
dec
and
push
(bad)
and
pop
imul
jne
mov
and
lds
lds
cmp
pop
mov
xchg
or
push
dec
xor
and
mov
add
or
pop
sbb
aam
mov
out
mov
and
in
fnstenv
push
push
cwde
jp
sti
mov
mov
mov
mov
outs
pop
pop
push
dec
xor
xor
adc
fisttp
push
aad
js
shr
sub
out
push
scas
pop
rcr
jmp
loop
jne
mov
popa
sahf
or
scas
mov
loopne
cmp
xor
fsubp
stos
jecxz
jmp
hlt
in
stos
mov
loopne
pop
xchg
sbb
adc
addr16
ficom
out
cmp
mov
mov
rol
cmp
imul
cmp
mov
pop
leave
xchg
ret
jnp
pop
mov
movs
push
jle
mov
sbb
mov
out
push
or
jp
push
enter
and
add
loop
xlat
imul
push
jle
sub
aas
push
ret
mov
(bad)
push
pop
leave
sub
mov
push
mov
jo
in
dec
pop
clc
jl
adc
stc
mov
inc
sbb
daa
inc
jge
xchg
jmp
loop
xor
call
sbb
inc
mov
sub
sub
sbb
xchg
inc
jne
and
out
ss
sub
std
adc
fidivr
add
sar
inc
dec
cdq
out
mov
xchg
add
call
mov
call
xor
mov
sbb
cmp
mov
sbb
mov
lea
xor
sub
sub
int3
pushf
cld
shl
sbb
jno
jbe
fcomp
push
loope
pop
sbb
jg
inc
aaa
rcr
jg
popf
pop
gs
mov
xor
add
retf
sbb
mov
in
jp
jo
movs
ins
or
lea
and
fist
shr
mov
fild
ins
push
jo
xchg
hlt
ror
xchg
adc
js
fst
je
call
pop
and
mov
jne
outs
cmp
or
std
test
sbb
leave
pop
sbb
pop
popf
sbb
inc
mov
mov
loope
add
pop
into
or
in
push
shl
add
aad
test
or
outs
sti
dec
es
in
add
jp
jg
outs
neg
clc
jno
xchg
xchg
fnstenv
add
xchg
ds
loopne
dec
jmp
ret
mov
pop
jb
sbb
or
dec
jp
mov
push
inc
lock
or
and
rcl
inc
jmp
xlat
test
push
pop
adc
lea
out
jmp
cmps
adc
adc
adc
(bad)
dec
jmp
and
lock
popa
shr
ja
sbb
sbb
daa
mov
fst
mov
cdq
sti
xchg
(bad)
fstp
into
cs
popa
or
add
or
xchg
xlat
inc
and
fs
aam
shl
mov
(bad)
in
jl
(bad)
lock
in
int3
sub
mov
ror
leave
cmp
jo
movs
pop
jecxz
push
or
jmp
test
aad
retf
out
mov
jge
mov
xchg
sub
fistp
sub
add
test
mov
inc
pop
jecxz
lea
pop
cwde
push
ror
lds
fmul
push
loop
push
clc
and
push
jecxz
xchg
enter
adc
rcr
adc
dec
retf
(bad)
icebp
mov
push
push
and
dec
push
mov
mov
mov
imul
cld
xchg
lods
out
(bad)
cmps
mov
arpl
xchg
cld
out
sahf
(bad)
sub
scas
sub
imul
sbb
jno
mov
call
xor
nop
mov
addr16
fcmovbe
mul
fwait
outs
jmp
cmc
fcomp
int
sub
sqrtps
ffree
ret
test
and
jge
aad
int
lods
sbb
stc
push
xor
mov
movs
int
cli
push
add
enter
xchg
(bad)
pusha
lods
dec
add
test
scas
and
jae
inc
sub
mov
push
push
add
mov
in
std
adc
call
adc
je
enter
ror
and
adc
mov
rol
mov
pop
loop
xor
aad
dec
retf
dec
or
repz
and
stc
mov
outs
out
fs
add
cmc
adc
mov
jmp
and
sub
enter
es
sbb
inc
fstp
cmps
sbb
stos
call
sbb
and
jmp
out
or
sti
(bad)
push
sar
movs
retf
int
icebp
xchg
xor
outs
outs
pushf
jno
push
in
(bad)
cmp
mov
mov
push
or
jb
daa
loopne
cs
jno
rcl
sbb
movs
mov
enter
rcl
std
xchg
push
jne
xchg
add
iret
into
movs
arpl
pop
mov
push
cmp
call
sub
cmp
out
sbb
mov
retf
pop
or
xlat
add
mov
imul
xor
imul
iret
mov
xchg
shl
nop
jmp
push
hlt
addr16
jbe
or
cmps
and
call
add
nop
push
idiv
ins
les
and
mov
out
clc
jno
in
sbb
sub
sahf
mov
mov
cmp
pop
add
sub
outs
in
lahf
xchg
pop
mov
and
mov
mov
mov
mov
xor
sub
sub
inc
imul
cmps
call
fistp
int
cwde
mov
sub
bound
xor
push
(bad)
mov
stos
imul
xchg
sub
push
(bad)
add
pop
jbe
lods
sub
cmp
push
xor
sahf
dec
jns
enter
inc
lock
or
push
adc
gs
test
lahf
nop
push
jmp
iret
lods
adc
retf
sbb
jg
jns
lods
jp
adc
jns
mov
mov
jle
push
call
(bad)
jl
push
xsavec
scas
push
jae
xchg
rcl
mov
dec
(bad)
loope
sub
fnstsw
(bad)
out
arpl
shr
ret
stos
lds
leave
mov
or
pop
mov
mov
add
mov
jb
lock
cdq
fs
push
push
out
jnp
and
or
test
push
outs
pop
retf
in
out
add
and
loopne
inc
cmps
fdivr
(bad)
xchg
ins
clc
cs
inc
ficom
pop
mov
cdq
or
leave
scas
inc
and
pop
daa
cmp
add
sti
push
push
shr
xchg
adc
push
mov
test
xchg
mov
aad
fdiv
daa
or
les
sub
push
pop
mov
xchg
lds
fimul
(bad)
in
cdq
mov
xchg
and
xor
add
push
sub
imul
cs
jg
mov
or
mov
(bad)
scas
cmps
je
mov
xor
inc
mov
(bad)
outs
sub
ret
pop
mov
and
sbb
or
loope
fxam
in
clc
sub
and
aad
adc
rcl
test
in
repnz
add
jmp
pop
pushf
or
mov
pop
lea
or
out
mov
inc
mov
leave
sbb
mov
pop
or
inc
sub
(bad)
push
jle
mov
jge
cmp
es
test
add
(bad)
or
repz
adc
hlt
mov
mov
cld
pop
xor
adc
addr16
sub
mov
aam
aam
and
dec
fild
pop
dec
mov
cmp
push
popa
push
inc
xor
stos
out
pop
cmp
pop
mov
(bad)
aam
clc
pusha
xchg
mov
ss
inc
es
add
fs
and
fcomp
add
cld
test
or
out
iret
fist
xchg
dec
push
xlat
mov
jl
push
and
mov
sbb
stc
mov
mov
pop
addr16
cmps
jmp
fs
adc
pop
and
leave
pop
mov
pop
fcomi
or
dec
scas
push
setno
stos
pop
std
pop
inc
out
mov
fdivr
outs
aad
das
inc
fs
loopne
mov
(bad)
loopne
cmp
mov
mov
push
js
fadd
or
and
inc
lahf
inc
gs
jb
mov
sbb
int3
jo
ja
ss
sbb
test
inc
ret
xlat
stc
fstp
mov
ins
mov
sahf
mov
loop
push
mov
sub
stos
sbb
ja
sub
mov
es
jecxz
cmp
push
(bad)
xchg
fistp
sbb
int
or
ja
lahf
xor
sub
sti
mov
and
mov
cmp
fcom
or
bound
add
mov
or
add
mov
sbb
int
mov
xor
xchg
mov
call
mov
js
jg
mov
in
xchg
jne
stc
popa
scas
push
fbstp
movs
inc
xor
test
mov
in
aaa
in
or
movs
inc
imul
jbe
fdiv
or
dec
add
cmp
push
adc
movs
inc
xor
pop
sbb
imul
js
mov
dec
test
mov
lods
dec
idiv
dec
sub
stos
stos
sub
sbb
pop
je
cs
shl
push
mov
and
mov
rol
pop
outs
stos
out
sbb
mov
shl
xchg
sub
loopne
xchg
add
adc
sbb
ja
leave
retf
hlt
jnp
push
push
fld
bound
jg
es
push
xchg
mov
xchg
dec
fcom
(bad)
loop
les
inc
call
jl
push
scas
add
pop
mov
gs
ss
inc
cmp
mov
mov
ja
xor
test
leave
inc
inc
aad
mov
pop
add
mov
xlat
(bad)
fisub
mov
int
shr
imul
add
cld
enter
xor
movs
xchg
mov
lods
fs
mov
iret
outs
inc
mov
jmp
in
test
jb
inc
movs
pop
into
sbb
test
lahf
stos
jmp
xor
lods
scas
lods
and
nop
div
cmps
in
mov
add
hlt
mov
sub
push
dec
call
int3
and
xchg
test
inc
repnz
sbb
mov
imul
cmc
repnz
mov
xor
xchg
mov
aad
jns
mov
mov
mov
arpl
push
(bad)
iret
xor
les
jmp
pusha
sbb
adc
mov
dec
adc
cmc
pop
in
jno
or
outs
mov
xchg
call
das
mov
pop
mov
push
dec
retf
hlt
clc
(bad)
leave
xor
sbb
fwait
xchg
popa
dec
inc
add
sahf
and
cli
mov
cmps
jnp
dec
outs
or
jno
xchg
test
loopne
jne
sbb
shr
push
dec
and
ficom
or
sbb
test
bound
call
call
rol
pop
das
div
pop
pop
adc
jmp
and
fidivr
sub
lahf
xor
fld
ficomp
fadd
mov
and
mov
dec
test
das
cmp
in
stc
jo
jns
mov
push
xor
sbb
dec
dec
gs
xchg
inc
mov
aam
cmp
xor
sub
nop
sahf
into
push
jmp
jns
mov
and
movs
and
add
mov
push
pop
jl
jmp
mov
popa
mov
sub
lods
fnsave
sub
pop
fcmovnb
adc
inc
fst
dec
mov
call
xor
cmp
xor
xchg
test
js
dec
dec
sub
pop
gs
in
rcl
xor
add
adc
daa
cld
mov
imul
xchg
adc
and
pop
inc
mov
sbb
jge
push
pop
and
xchg
xchg
lea
push
cmp
push
popf
call
push
jae
sub
fistp
loop
ret
pushf
test
bound
popa
cmp
ret
mov
rcl
inc
shl
jns
(bad)
popf
mov
adc
movs
enter
(bad)
jns
xor
call
pop
test
int3
mov
xor
pop
push
adc
pop
sub
inc
or
xchg
repz
ins
xor
(bad)
gs
lea
push
test
sbb
push
jecxz
mov
lds
(bad)
rcr
cs
sbb
mov
fsubr
push
dec
sar
mov
std
sahf
rol
mov
mov
jbe
cmp
cmps
pushf
dec
and
adc
pop
push
xchg
xchg
addr16
(bad)
hlt
ret
pop
retf
cmps
pusha
ins
mov
push
or
cmc
movs
mov
xor
mov
and
xchg
bound
call
in
dec
push
lahf
jb
dec
xchg
es
icebp
mov
add
hlt
jno
dec
xchg
dec
mov
shl
icebp
cmp
pop
lahf
jp
xchg
popa
add
cmp
fcmovu
ja
adc
(bad)
and
push
(bad)
sahf
js
jge
rcr
ss
fs
test
adc
lahf
add
iret
mov
inc
pop
push
ds
mov
pop
cmp
mov
sub
xor
popf
jecxz
push
mov
stc
rol
mov
fucomip
ins
jo
add
mov
mov
(bad)
mov
es
pusha
repnz
pusha
(bad)
lea
or
adc
xchg
and
sbb
xchg
xor
xor
or
add
outs
mov
adc
add
repz
and
jne
popf
addr16
imul
addr16
aas
nop
addr16
cmps
push
dec
jne
iret
clc
sub
sbb
retf
inc
sub
xor
cmp
fadd
scas
mov
test
out
and
sub
dec
aas
xor
jl
out
shl
jnp
cs
pushf
bound
mov
outs
pop
scas
mov
out
inc
push
xchg
div
dec
in
shr
jmp
jmp
pop
cdq
add
in
clc
ret
stc
pusha
aad
pop
sub
ds
imul
stos
cmp
xlat
(bad)
fisub
or
or
mov
loop
lds
jge
push
mov
div
cmp
jl
test
sub
inc
cwde
or
lds
stos
mov
ds
scas
fiadd
dec
push
into
sub
cmps
scas
data16
adc
push
stos
nop
and
fsub
popa
mov
cmp
or
mov
push
xchg
push
inc
ds
jmp
bound
xchg
or
jmp
pop
sub
mov
scas
adc
neg
je
out
jns
shl
jle
mov
jl
out
daa
fisubr
sbb
out
rcr
stos
xor
dec
or
repz
cmp
std
pop
sub
cmp
inc
jne
leave
sbb
mov
sahf
shl
mov
xchg
jne
and
mov
jle
ret
mov
or
movs
sub
std
std
push
shl
in
or
and
jnp
jmp
xor
xchg
pop
call
out
xchg
cmp
pop
ret
stos
push
sbb
(bad)
or
cmc
pop
stos
jbe
mov
je
mov
sbb
cli
adc
clc
push
scas
cmp
ficomp
inc
sub
cmp
adc
aas
adc
jnp
push
jb
inc
mov
sub
scas
mov
xlat
lods
inc
fwait
mov
(bad)
push
out
sbb
push
dec
add
nop
jge
fistp
pop
fidiv
sub
aad
jbe
dec
mov
mov
jp
aad
ds
mov
test
pushf
jg
jmp
sbb
imul
ins
pop
pushf
xchg
out
jge
sbb
lea
es
push
rcl
mov
xor
sub
loope
nop
shl
dec
sbb
jno
cmp
add
xchg
ror
xchg
repz
inc
xor
push
pop
mov
sub
mov
mov
(bad)
cmc
imul
rcl
dec
out
add
mov
pop
adc
xor
xchg
lahf
mov
shl
ror
mov
add
mov
cmps
lods
and
loope
lahf
js
cmp
sti
dec
aam
stc
mov
and
sbb
jecxz
leave
int3
sub
(bad)
cmp
sub
xor
mov
imul
adc
aam
aam
xchg
stos
xchg
sti
sub
leave
bound
js
adc
sahf
jp
dec
in
and
jmp
add
in
xchg
mov
inc
mov
stos
pop
test
in
mov
adc
(bad)
out
lock
cmp
mov
mov
mov
sub
push
pop
inc
adc
or
xor
imul
xchg
pop
or
xlat
test
ret
mov
into
aaa
jnp
pop
jne
pop
xchg
jno
sti
out
fisub
call
(bad)
sbb
ins
lods
mov
pop
inc
dec
dec
mov
(bad)
out
xor
pop
sahf
call
lds
mov
jo
ins
or
xchg
or
cdq
ja
sti
or
mov
js
loope
std
cmp
cmps
call
scas
repnz
or
push
sbb
adc
adc
loop
adc
(bad)
cmp
std
dec
in
xchg
scas
sbb
push
adc
pusha
adc
jo
daa
das
and
pop
(bad)
mov
fmul
cmp
mov
mov
clc
(bad)
mov
xor
mov
sti
xchg
mov
add
sub
sbb
scas
cmp
mov
fist
fcomi
sbb
sub
pop
and
icebp
cs
outs
pop
(bad)
or
sti
jp
int
cmp
fldcw
xchg
es
sbb
scas
xor
adc
add
mov
inc
pop
sbb
dec
test
push
div
add
ret
scas
and
das
mov
inc
cmp
lahf
cmp
jb
cld
imul
mov
lods
arpl
ja
xchg
sti
mov
aaa
cmp
iret
in
aaa
dec
inc
lods
sub
movs
xchg
rcl
repnz
js
xchg
leave
outs
test
pushf
jbe
cmp
das
mov
sub
inc
dec
add
mov
mov
mov
adc
adc
add
popa
(bad)
xlat
sub
sub
clc
retf
dec
push
inc
adc
inc
es
and
stc
pop
xor
stc
adc
jmp
pop
js
and
inc
jmp
fld
imul
cmps
mov
ds
(bad)
add
xor
ds
push
dec
pop
mov
(bad)
mov
test
mov
push
sahf
xor
inc
ss
jnp
(bad)
stos
enter
scas
cmps
xor
cmp
imul
bound
cmps
int3
stos
imul
rol
sub
sbb
dec
sbb
sub
add
sub
seta
repnz
loopne
jnp
(bad)
sub
mov
das
imul
adc
gs
not
mov
mov
out
sbb
and
xchg
in
popa
jg
jmp
out
outs
cdq
repz
inc
jmp
bound
push
add
bound
adc
pop
loope
xor
jno
pop
gs
out
or
mov
adc
std
mov
add
mov
jl
test
shl
jno
inc
scas
mov
pusha
sti
xor
es
(bad)
movs
sbb
test
ja
js
xor
mov
jae
movs
xchg
ret
mov
stos
jg
xor
icebp
mov
lods
loope
popf
mov
cmp
or
movs
xchg
popf
mov
or
mul
fsub
cmp
lods
in
push
xor
jp
ret
push
cwde
lods
add
fdivp
push
jp
out
rcr
hlt
push
mov
jl
mov
cld
mov
jnp
pop
out
push
loopne
xor
push
xor
cmc
xor
inc
xchg
jmp
sbb
int3
inc
xlat
call
pop
lods
fwait
push
mov
xchg
inc
or
in
mov
xor
pop
daa
cmp
sub
popa
retf
shl
dec
lea
fwait
pop
pop
mov
add
mov
ins
dec
sub
jmp
cmp
pop
js
mov
cmp
ror
aas
ror
push
adc
push
jecxz
int
pop
cmp
sbb
adc
in
pop
push
cmp
cmp
pushf
jle
mov
out
adc
shl
pushf
nop
adc
xor
push
or
jmp
sbb
mov
dec
pop
sub
or
add
imul
sub
mov
ins
inc
sbb
cwde
addr16
es
ins
push
(bad)
jmp
out
ss
std
dec
inc
jns
icebp
enter
xor
lods
dec
jnp
enter
jge
fst
adc
aaa
dec
sti
lods
push
pop
or
scas
and
les
xchg
mov
xor
jg
mov
les
lahf
mov
adc
outs
arpl
mov
mov
mov
(bad)
int
mov
stos
fstp
pop
add
inc
adc
dec
jne
mov
aaa
aam
lahf
adc
xchg
out
lods
div
mov
sar
mov
dec
inc
jle
cli
push
in
adc
cs
dec
cwde
not
cmps
(bad)
mov
test
fild
or
or
lea
or
mov
inc
rol
stos
rcl
imul
or
inc
sub
stos
push
cmps
std
xor
jb
ins
sbb
cdq
xchg
es
push
dec
mov
iret
ds
loope
nop
add
ror
pop
popf
lds
or
cmp
(bad)
xchg
cmp
pop
clc
in
ja
sbb
pop
aam
scas
lea
daa
and
or
dec
mov
mov
mov
jge
aam
push
add
adc
dec
fcom
cmp
lods
adc
ret
aaa
in
outs
and
lds
xchg
stos
pop
in
adc
scas
js
ret
xlat
inc
inc
div
xchg
daa
sahf
(bad)
in
sub
or
out
in
ins
test
or
pop
lahf
sti
lods
mov
in
in
xor
stos
push
xchg
out
fimul
mov
mov
dec
mov
dec
retf
xor
cdq
ret
xchg
stc
je
mov
mov
out
dec
ret
pushf
cwde
out
ret
pop
aam
dec
loopne
and
pop
sbb
stos
leave
mov
aad
bound
push
pop
mov
data16
jmp
push
mov
pop
jb
fiadd
mul
cmps
pusha
dec
loopne
es
or
out
sbb
cmp
push
into
jno
jmp
sti
fisubr
dec
jmp
cmps
mov
cmp
cmp
pop
push
mov
mov
sbb
sbb
lea
fwait
cmps
cld
mov
ja
in
in
aam
(bad)
(bad)
pop
push
jl
cmp
push
mov
clc
mov
(bad)
cli
outs
pop
xor
push
(bad)
xor
fld
jb
mov
adc
(bad)
hlt
(bad)
mov
cli
sbb
push
mov
push
ret
mov
scas
ror
and
shl
aam
mov
icebp
imul
addr16
add
(bad)
aaa
out
xor
or
sbb
cmp
es
or
sbb
push
cs
adc
mov
fwait
bound
repnz
xchg
call
pop
sbb
test
mov
jo
imul
icebp
outs
push
cmp
dec
jb
call
imul
mov
xchg
pop
xor
imul
leave
adc
(bad)
gs
fadd
std
jns
xchg
repz
(bad)
dec
mov
stos
push
test
retf
lea
mov
popa
adc
loop
push
fldenv
mov
inc
dec
add
mov
and
or
dec
lahf
cmp
pop
pusha
lahf
mov
(bad)
sbb
inc
pop
fwait
mov
cmp
loope
push
mov
imul
push
dec
dec
push
ret
test
test
iret
out
add
addr16
je
mov
idiv
jno
xchg
and
push
mov
pop
pop
test
push
in
or
bound
xor
and
cmp
iret
inc
adc
ja
push
inc
inc
add
scas
pop
je
daa
lods
dec
(bad)
es
scas
mov
inc
scas
pop
sub
pop
popa
push
ret
mov
(bad)
scas
add
sub
or
rcr
es
out
pop
loop
rcr
push
je
and
stos
sbb
sbb
fnstcw
mov
adc
cdq
mov
mov
dec
(bad)
loopne
das
fisub
ds
dec
lock
shr
sub
push
adc
xchg
xchg
xor
inc
(bad)
push
fisubr
daa
jnp
int
pop
fisttp
xor
inc
push
js
loop
fbld
je
in
aad
fcom
xchg
rcl
xor
pop
add
cmp
push
pop
fcom
int3
push
pop
adc
sbb
cld
nop
imul
cli
sahf
jge
lahf
adc
sbb
loopne
sbb
call
ret
sti
add
les
cld
mov
add
cmps
pop
mov
dec
mov
ror
addr16
pop
lock
sbb
jns
sbb
(bad)
fmul
outs
je
adc
jmp
jmp
jne
sub
and
aam
in
or
or
push
mov
ficomp
add
sub
mov
retf
inc
cmp
dec
inc
(bad)
pop
sub
int
or
push
add
test
lods
mov
retf
mov
in
scas
ss
sub
inc
aam
xchg
push
sub
(bad)
push
movs
xchg
pop
push
fidiv
cmp
dec
(bad)
test
jne
les
pop
lock
sahf
out
push
mov
iret
not
mov
push
mov
mov
rdmsr
stos
(bad)
jecxz
stc
lds
aaa
out
dec
xchg
(bad)
iret
stc
push
pop
mov
hlt
jecxz
sar
mov
in
mov
add
xor
in
mov
sbb
dec
sub
mov
pop
enter
jnp
pop
sbb
sbb
mov
and
inc
pop
jl
mov
ins
pop
xor
dec
xchg
and
inc
cmp
inc
mov
call
and
mov
adc
add
outs
icebp
retw
dec
cwde
mov
mov
aad
out
dec
cdq
push
cmp
(bad)
ins
cmp
pop
not
jl
iret
add
mov
cmps
add
mov
or
imul
add
mov
js
clc
sbb
jp
or
pcmpeqd
inc
popa
scas
xchg
fstp
stc
ds
imul
or
stos
push
popf
rcr
mov
adc
es
pop
push
fbld
out
inc
dec
mov
ins
int3
pop
into
add
add
mov
clc
mov
retf
cmp
mov
je
sbb
cmp
inc
sub
push
gs
les
mov
pop
adc
sahf
dec
stos
mov
xor
ret
mov
fistp
push
out
cld
daa
cmc
push
cmp
stos
mov
fsubr
sub
lds
bnd
xchg
test
addr16
test
push
add
dec
scas
int
adc
jae
pop
sub
mov
inc
jecxz
jg
and
js
cmp
mov
cmps
fstp
loope
jl
int3
js
mov
push
jecxz
std
scas
idiv
ins
out
rcl
setl
mov
sub
sbb
aas
pop
jo
pop
pop
jo
loopne
mov
fimul
sti
(bad)
sbb
sub
mov
xchg
call
xchg
xor
mov
and
push
mov
mov
inc
sbb
inc
sbb
sbb
mov
inc
fst
mov
outs
ins
iret
(bad)
sub
scas
enter
mov
jb
add
mov
(bad)
nop
imul
cmp
aaa
cmp
sbb
mov
or
dec
dec
pop
xor
(bad)
xlat
mov
call
pop
cmps
dec
leave
sbb
pop
and
lods
jbe
out
shl
jl
xor
push
cdq
and
test
je
das
adc
lahf
repnz
sub
in
loop
imul
xor
adc
pop
das
mov
xlat
jge
and
add
out
mov
jmp
cmps
aam
adc
pushf
or
xchg
pop
mov
and
ror
jmp
sbb
cmp
mov
push
sub
dec
mov
aas
mov
cmc
cli
rcr
js
push
js
xchg
or
lock
jae
rcl
and
push
jbe
stos
or
and
aas
shl
enter
(bad)
aas
mov
fimul
jns
pop
sar
mov
sbb
rol
fs
loop
xor
fsub
daa
mov
inc
repz
popf
(bad)
cmc
mov
pop
push
and
fldcw
jg
popa
test
(bad)
push
push
pop
das
enter
jne
mov
call
test
imul
mov
xchg
sbb
sar
push
stos
jl
mov
test
nop
jle
aas
or
jb
arpl
push
and
push
push
mul
jle
lods
sbb
or
and
sub
pop
cmps
sub
out
xchg
and
call
jmp
sbb
in
and
sub
sti
push
sbb
push
les
dec
mov
aaa
test
sbb
or
adc
data16
inc
std
pop
out
inc
cmp
mov
sub
adc
mov
in
mov
and
js
add
ret
addr16
jl
cli
lahf
scas
or
or
xchg
jno
lock
xor
repz
sub
pop
xchg
mov
inc
loope
mov
or
adc
cwde
fist
scas
or
data16
mov
imul
push
cmp
mov
das
(bad)
mov
mov
in
jnp
and
pop
xor
cmps
test
es
(bad)
stos
mov
rcl
outs
mov
jmp
inc
(bad)
out
sar
ret
xor
mov
mov
xor
mov
fstp
out
sbb
mov
jno
lahf
mov
clc
xor
xchg
leave
das
or
in
inc
push
cdq
stos
jno
test
or
lods
jge
push
jns
xor
adc
(bad)
add
pop
fst
or
and
jae
dec
dec
cmps
stc
add
pusha
call
mov
mov
sub
int3
ror
pop
aas
xchg
les
enter
mov
pop
imul
sub
cli
and
lods
lods
cmps
add
mov
test
repnz
(bad)
or
sbb
xchg
mov
xor
mov
les
stc
test
ret
sahf
out
icebp
pusha
icebp
dec
cmps
dec
jbe
push
sub
retf
adc
add
dec
mov
pop
dec
jmp
xor
lds
into
sub
mov
inc
xchg
scas
or
enter
sahf
xchg
stos
mov
loop
retf
cmps
(bad)
jbe
xchg
mov
sub
jbe
jne
(bad)
push
js
(bad)
ret
out
fbstp
das
mov
inc
ins
xor
pusha
sbb
dec
jmp
adc
jmp
and
ret
jmp
mov
pop
js
push
dec
loopne
jle
jle
sbb
or
mov
xchg
movs
dec
cdq
fnstcw
sub
mov
gs
pop
(bad)
fwait
retf
sub
std
push
sti
inc
or
or
cmp
(bad)
shr
xchg
jg
lods
push
stos
inc
fwait
cmp
push
ds
cli
popf
mov
mov
(bad)
int3
mov
mov
icebp
loop
cmp
iret
(bad)
int3
xchg
pusha
jnp
sub
(bad)
pop
fdivr
ja
cmp
outs
jmp
(bad)
call
sbb
daa
sbb
stc
mov
loope
lea
fs
out
movs
or
(bad)
popa
call
ficom
movs
pop
ja
div
idiv
push
inc
jmp
or
dec
ficom
lahf
xchg
outs
mov
sbb
test
aaa
not
mov
pop
inc
sbb
retf
pushf
lea
push
or
rol
call
pop
sbb
adc
dec
pop
or
loopne
inc
stc
enter
addr16
scas
or
jnp
mov
lods
arpl
pop
pop
dec
cmp
xchg
scas
xlat
cli
es
inc
fwait
sar
test
cmc
and
dec
adc
inc
xchg
xor
mov
mov
hlt
and
in
retf
mov
imul
fistp
fcom
mov
cmp
lods
jno
leave
and
iret
fdivrp
(bad)
ficomp
int3
bound
mov
lods
adc
scas
push
mov
cmps
xchg
addr16
(bad)
pop
adc
jecxz
(bad)
les
aaa
(bad)
sar
jl
int3
loop
and
inc
not
(bad)
mov
in
dec
mov
mov
lea
inc
out
mov
je
call
rcr
mov
movs
mov
je
aad
dec
sub
dec
fxch
cwde
in
inc
jl
cwde
test
sbb
dec
sub
mov
ret
cs
cmp
pop
and
xor
jns
or
mov
dec
outs
push
shl
jnp
dec
add
mov
mov
stos
add
inc
sti
cdq
jb
pop
sbb
shr
test
push
jge
int
shr
pop
jecxz
sbb
lahf
sub
jmp
pop
mov
jecxz
pop
fadd
cmp
jecxz
pop
sub
push
push
movs
dec
fidiv
push
(bad)
in
mov
inc
sbb
rcr
or
les
mov
lods
xchg
add
sahf
cs
call
out
pop
(bad)
jecxz
xlat
stos
xor
add
arpl
sbb
ins
mov
in
jbe
jecxz
imul
arpl
mov
sbb
or
sar
dec
xor
cmps
adc
aad
mov
pop
push
icebp
lds
adc
jmp
dec
jb
dec
push
sahf
loope
ds
pop
xchg
mov
inc
or
ret
and
push
sti
outs
pop
mov
les
in
ja
or
pop
cs
adc
jl
xchg
mov
add
scas
cdq
popa
call
ficomp
pop
test
cmp
lock
push
sbb
jle
jle
cmp
in
xor
push
mov
or
xor
fsub
xchg
cmps
mov
mov
pop
xchg
jb
gs
pusha
loope
das
jecxz
outs
mov
leave
movs
adc
lods
aaa
in
les
ror
lahf
mov
js
sub
pushf
mov
add
inc
movs
gs
xor
pop
pop
pop
mov
int
or
adc
push
je
mov
inc
xor
sub
xchg
jmp
hlt
sahf
in
fwait
cmp
xchg
add
into
js
js
pop
push
jno
push
xchg
jmp
shl
aaa
data16
lea
sbb
call
call
inc
xchg
das
(bad)
fwait
sub
jno
hlt
(bad)
outs
scas
imul
pop
daa
ins
rol
jnp
int3
sub
xchg
xor
leave
test
movs
fild
xchg
mov
lods
gs
ret
mov
add
sbb
or
shl
fisttp
sbb
repz
mov
lods
and
sub
push
mov
mov
out
aas
pop
leave
ret
mov
(bad)
and
xlat
cmp
and
cmp
bound
ja
fdivr
mov
and
shl
movs
xor
mov
(bad)
adc
jp
adc
pop
mov
gs
sub
push
or
jmp
out
mov
lods
inc
mov
and
cmp
adc
or
retf
push
xchg
or
int3
iret
mov
es
pop
sub
fimul
inc
push
mov
mov
outs
sbb
jle
or
and
je
sbb
mov
or
ss
or
in
les
cmp
mov
clc
cmc
pusha
(bad)
rol
repz
movs
inc
mov
bound
fiadd
movs
movs
mov
leave
mov
pop
pop
or
mov
test
or
jns
jmp
cli
hlt
xor
aas
outs
adc
sysret
or
mov
mov
jmp
mov
fisub
popa
out
inc
adc
lods
std
ret
xchg
sbb
mov
jl
ror
mov
mov
jns
call
mov
leave
jns
mov
sub
leave
fsub
jo
data16
aam
xchg
lea
sub
pushf
xchg
jbe
xor
mov
cmps
jne
loope
ret
mov
outs
adc
div
ja
fsubr
pop
arpl
rol
sbb
rol
mov
mov
inc
inc
fwait
arpl
sbb
push
sti
popa
add
jmp
ror
or
in
test
xor
mov
xor
test
outs
loop
out
mov
sahf
out
loop
pop
mov
gs
fwait
jmp
pop
lods
sti
hlt
data16
push
in
test
bound
sub
mov
(bad)
fs
add
dec
in
jp
cmp
and
cmp
mov
xlat
shr
mov
loop
push
jb
clc
cmp
retf
(bad)
mov
(bad)
push
lds
in
dec
mov
mov
test
idiv
push
and
call
push
xor
inc
in
retf
push
fwait
cmc
push
sbb
sub
movs
mov
and
nop
stos
sbb
lods
mov
pop
lods
and
and
in
int3
cld
fidiv
hlt
jb
ffree
jp
push
retf
loop
retf
push
loop
fs
popf
outs
mov
mov
ja
mov
dec
scas
cwde
in
aam
and
jge
ss
xchg
jmp
loope
or
fisub
test
and
dec
jo
lds
and
mov
push
cmp
out
std
lods
ds
rcl
mov
or
hlt
js
fcmovnb
dec
dec
adc
outs
push
outs
mov
mov
ins
sub
mov
mov
push
sub
inc
popf
cmp
sbb
dec
adc
lahf
inc
retf
add
sub
adc
enter
jmp
loope
fwait
adc
pop
ins
jmp
jo
cdq
pop
addr16
loop
jg
mov
dec
nop
call
xchg
add
mov
fimul
push
aam
mov
cmp
sub
mov
ret
jmp
adc
std
addr16
sub
movs
mov
jge
in
cmps
inc
jne
pushf
xchg
sub
lea
aaa
adc
mov
mov
mov
lods
je
(bad)
jmp
cmps
leave
mov
xor
cmp
push
mov
dec
call
imul
(bad)
mov
inc
adc
or
loop
jbe
and
xchg
retf
stos
dec
xor
aad
mov
cwd
sbb
stc
ss
pop
mov
jmp
add
mov
ins
fild
jmp
(bad)
push
lea
push
add
mov
xchg
jp
jg
cdq
mov
scas
mov
sbb
pop
or
daa
mov
dec
dec
shl
ret
cmp
jmp
popa
test
cmp
jo
sbb
mov
adc
fsubr
mov
push
cmc
push
rcr
pop
xor
aad
aad
cmps
pop
movs
(bad)
gs
movs
add
sahf
test
(bad)
imul
fxch
cmps
fld
daa
sub
mov
int3
inc
fdiv
jle
int3
sub
ss
add
(bad)
cli
jo
scas
mov
lods
jmp
inc
lods
fisttp
mov
jbe
sub
adc
sbb
scas
(bad)
mov
shl
mov
retf
dec
add
test
sbb
dec
adc
cmps
sub
sbb
into
aas
lahf
lock
pusha
ins
mov
sub
sub
or
ror
jnp
jecxz
lock
out
icebp
scas
mov
mov
jno
cmp
pop
aaa
test
sub
scas
jo
jecxz
addr16
mov
rcr
retf
pop
push
push
arpl
leave
pop
sbb
mov
push
test
adc
push
popa
fist
jle
push
sbb
lods
stc
daa
neg
sti
cdq
push
mov
cmp
mov
mov
or
xchg
mov
and
inc
mov
sub
cld
outs
out
(bad)
mov
scas
shr
add
icebp
call
hlt
stos
stc
loop
aas
and
mov
sub
xlat
and
mov
adc
sbb
out
pop
xchg
xchg
mov
pop
ins
ss
add
iret
pop
in
mov
leave
fisub
mov
xor
push
sti
(bad)
jno
ret
movs
shl
(bad)
xchg
jne
retf
jbe
xor
adc
adc
test
popa
cmp
loop
out
push
mov
add
jmp
pop
jbe
std
adc
fisttp
inc
jmp
mov
jo
push
jne
ja
fild
lea
(bad)
xchg
int3
movs
ret
out
jo
mov
fwait
sbb
jo
jg
mov
inc
sub
(bad)
(bad)
movs
mov
test
lahf
sbb
push
lods
mov
aas
mov
cdq
inc
(bad)
dec
lahf
iret
mov
cmp
je
inc
jb
ds
or
and
mov
mov
pusha
add
inc
into
fs
into
cmp
xor
push
cld
adc
xor
mov
add
in
stos
fs
jmp
out
mov
dec
sub
and
cwde
or
sahf
sti
out
push
pop
or
in
push
pop
mov
push
stc
out
push
jae
data16
sbb
push
shl
cmp
pop
js
and
push
jbe
push
(bad)
fs
icebp
aas
xor
dec
push
gs
xchg
push
pop
push
mov
scas
in
xchg
push
out
adc
cmps
aam
xchg
and
icebp
pop
sbb
pop
mov
and
xchg
popa
outs
out
cdq
out
cld
add
jge
add
jbe
inc
pop
mov
inc
ins
cmp
cli
js
fild
call
sbb
lods
lds
mov
fstp
dec
pusha
lods
adc
pop
call
popw
inc
jmp
aaa
leave
nop
fs
add
mov
or
ds
mov
gs
mov
fisub
pop
adc
and
cwde
cli
mov
add
mov
and
lahf
cli
(bad)
push
nop
push
sti
jno
jns
(bad)
pop
add
cmp
fs
and
test
sub
mov
jne
push
mov
push
outs
sbb
adc
outs
pop
jo
xchg
xchg
mov
clc
pop
add
mov
mov
test
sub
adc
cld
clc
dec
movs
push
inc
cmp
inc
sub
stos
or
add
sub
aad
mov
loope
mov
or
in
(bad)
(bad)
imul
pop
call
loopne
cmp
call
push
jo
inc
xchg
cmp
xchg
jmp
inc
mov
lahf
(bad)
(bad)
pop
or
or
int
xchg
xor
lahf
ins
loope
ret
inc
mov
push
mov
inc
popf
cs
mov
shl
or
fsub
push
imul
in
test
ret
jl
and
retf
inc
and
push
data16
data16
pop
dec
and
das
jmp
push
cmp
or
int3
loope
xlat
test
push
repz
jae
loop
mov
dec
aad
xor
mov
sub
adc
rcr
jge
(bad)
sti
(bad)
mov
shr
pusha
add
leave
mov
pusha
mov
push
cmps
mov
sub
out
retf
popa
lea
repz
jnp
sub
outs
pop
xchg
hlt
fdiv
jl
popf
(bad)
cmovge
aam
or
dec
ret
and
jp
out
mov
mov
xchg
and
lahf
jmp
push
imul
imul
xchg
test
mov
cmp
jne
xchg
lea
inc
outs
xchg
push
add
push
cmps
rol
movs
hlt
(bad)
ret
in
in
mov
fsub
mov
dec
test
arpl
add
movs
push
loop
test
cmp
dec
test
fisttp
xchg
popf
sbb
and
fdiv
inc
xlat
xchg
mov
dec
adc
push
add
imul
push
pop
retf
jb
mov
jnp
mov
gs
clc
dec
and
gs
arpl
jp
out
mov
sbb
sbb
sub
out
loope
pop
xor
neg
int
xchg
add
(bad)
dec
push
jns
sahf
pop
push
lods
sbb
rcl
mul
jl
popa
ins
int
outs
mov
xor
mov
movs
jle
cmc
cmp
mov
fild
push
push
inc
ss
adc
test
mov
sbb
arpl
mov
sub
pushf
cmc
sahf
push
je
retf
xor
jns
popa
xor
dec
xchg
pop
in
add
adc
pop
nop
fld
fdivr
sahf
inc
inc
test
and
fadd
mov
imul
pop
inc
(bad)
test
sub
sbb
retf
inc
sub
movs
push
mov
repnz
lods
enter
lock
jle
and
mov
adc
add
sbb
sub
outs
out
sub
daa
mov
xchg
aas
rcl
clc
mov
xor
(bad)
bnd
push
add
dec
daa
mov
or
aam
xchg
je
js
ja
xor
ret
nop
movs
jno
fistp
fistp
out
scas
out
cmp
rol
adc
mov
loope
daa
stos
pop
jge
sbb
lods
nop
stos
push
cmp
int
pusha
stos
aad
xchg
es
cdq
or
pop
or
bound
sar
je
ins
jmp
into
cmp
dec
cmp
cmc
repz
mov
(bad)
and
jne
sub
rcl
sub
jnp
ret
fmul
mov
inc
arpl
inc
mov
lahf
or
pop
aad
mov
lock
int3
rcl
or
cmc
push
cmp
mov
push
push
dec
jno
je
in
jo
pushf
xchg
sbb
mov
nop
sub
sub
es
or
bound
les
jbe
adc
xchg
fistp
ficomp
loope
jmp
push
xor
or
inc
out
push
retf
mov
add
sub
cdq
imul
mov
arpl
je
cmp
in
xchg
iret
scas
mov
hlt
adc
or
sub
cs
into
ins
dec
fnstenv
xor
sub
data16
scas
in
sbb
push
nop
retf
pop
sar
std
xor
adc
ins
mov
pop
push
test
sub
push
xchg
sahf
sbb
lock
pop
mov
mov
(bad)
mov
in
shl
dec
ror
mov
iret
jae
dec
pop
ins
push
push
lods
lahf
mov
sti
pop
xor
dec
push
ins
cmp
mov
sbb
cmp
pop
push
mov
mov
sbb
and
retf
aaa
fwait
jo
dec
jnp
ja
dec
ins
mov
pop
and
jp
and
arpl
xchg
sar
jb
xor
imul
enter
or
cmp
sahf
mov
dec
sub
push
call
cdq
jecxz
xchg
fnstenv
ss
icebp
cmp
xor
mov
inc
or
or
push
add
push
mov
adc
ins
mov
inc
std
jmp
xchg
sahf
dec
cmp
mov
lods
adc
enter
nop
fwait
in
(bad)
fimul
jnp
ins
test
jp
or
shl
pop
jmp
out
or
adc
aas
add
dec
cmps
ins
ss
retf
pusha
mov
mov
pop
and
jno
sbb
aad
in
imul
fwait
and
inc
dec
pop
mov
ret
je
pusha
rcl
push
mov
mov
push
cmp
mov
inc
jns
push
sbb
loope
data16
mov
hlt
and
sub
retf
ins
sbb
jl
and
and
jmp
mov
lods
popf
inc
pusha
ds
data16
mov
mov
cmps
fadd
data16
aad
cmp
cwde
sbb
xchg
loope
mov
and
cwde
push
imul
mov
xchg
out
xor
sbb
sbb
mov
(bad)
aad
dec
xlat
ins
test
imul
xchg
push
je
clc
jl
dec
cmp
lds
mov
call
xor
sbb
les
scas
popa
jl
jo
lods
icebp
adc
lods
jnp
fidiv
mov
adc
xor
xchg
imul
call
add
push
mov
jb
lea
jns
mov
mov
sbb
inc
movs
inc
movs
xchg
lea
sbb
jb
inc
sbb
add
add
jno
cmp
mov
or
mov
out
cld
jge
jb
ret
leave
les
sbb
jns
add
xor
ret
pushf
add
gs
push
repz
or
mov
jge
sub
dec
cwde
aaa
dec
sahf
xchg
mov
stos
cmp
cwde
mov
inc
mov
sbb
jbe
cdq
sbb
out
stos
outs
rcl
sbb
call
dec
jle
aaa
std
imul
ret
lock
mov
icebp
jge
scas
(bad)
ss
mov
ja
xor
push
int
pop
scas
jmp
and
dec
in
inc
dec
sti
inc
std
retf
in
ds
addr16
dec
shl
ins
(bad)
aam
retf
adc
xor
xchg
push
ds
retf
jl
cmp
cmps
fadd
adc
push
fist
sub
stos
or
nop
push
sub
cmps
lds
std
stos
shl
stos
loop
mul
pop
out
retf
jp
jns
stos
in
rol
push
dec
cmps
jecxz
jnp
nop
push
add
xchg
lahf
jge
repnz
mov
nop
inc
and
into
out
and
inc
jge
jg
or
cmp
fldcw
gs
jmp
fwait
out
je
add
retf
dec
in
inc
fdivr
test
mov
cmps
mov
sti
out
fmul
pop
pusha
les
loope
or
jmp
sub
add
aad
data16
je
dec
sti
ins
(bad)
fstp
sub
jge
mov
xchg
pop
cmp
mov
imul
movs
test
outs
inc
out
jmp
inc
mov
fucomip
add
test
push
or
or
mov
sub
xor
mov
aas
inc
fisub
sub
or
out
data16
dec
mov
push
out
addr16
dec
jle
or
cmp
or
rcl
or
pusha
xchg
fld
jl
add
sbb
ins
jl
inc
retf
lods
jl
stos
les
mov
cmp
xchg
cmps
jbe
mov
(bad)
and
js
jp
dec
pop
cmp
aam
add
test
and
adc
add
ret
movs
std
pop
xlat
xor
fcomp
push
adc
bound
mov
pop
push
add
(bad)
ror
mov
mov
fidiv
mov
jns
jmp
addr16
adc
outs
mov
mov
dec
and
fwait
call
add
stc
inc
cmp
jb
pop
movs
or
jl
in
or
fsub
mov
and
leave
jmp
(bad)
and
loop
lods
ds
lods
mov
je
in
mov
sub
fcmovnu
jnp
dec
mov
xor
xchg
out
xor
sbb
das
cmp
mov
lea
pop
out
mov
inc
dec
sub
xor
das
jl
test
fidivr
or
cmp
xor
xchg
call
xor
ficomp
cwde
adc
call
cdq
xchg
sar
outs
js
das
adc
add
clc
sub
push
mov
inc
and
call
cs
xor
mov
lods
sbb
dec
add
(bad)
adc
lods
loop
xor
scas
jno
lods
xor
pop
bnd
ret
(bad)
sub
adc
ja
out
mov
stos
sbb
ins
int3
mov
mov
nop
sbb
lock
outs
stos
inc
mov
lods
adc
sub
lods
cld
cmc
cmp
mov
enter
xchg
pushf
push
cs
adc
into
daa
or
push
cs
imul
pop
pop
push
cmp
jmp
fs
es
pop
jns
sti
dec
movs
nop
outs
imul
adc
cmp
adc
out
mov
int3
scas
pop
and
stos
jmp
or
aas
outs
stos
addr16
and
popa
jp
dec
xor
sub
mov
xor
dec
test
retf
xchg
sub
push
jmp
int3
push
retf
test
pop
inc
test
sub
lods
cmp
dec
pop
mov
cmp
xchg
icebp
jmp
push
or
ins
aad
xchg
push
icebp
sahf
jnp
jns
inc
inc
mov
sbb
jb
ins
adc
call
sti
ins
xchg
sti
mov
int3
pop
into
test
movs
sbb
mov
add
mov
movs
or
xlat
pop
adc
and
mov
test
adc
lea
jge
stos
(bad)
sub
das
and
mov
xor
cmp
push
test
mov
xchg
pinsrw
inc
sahf
test
add
cdq
lock
sbb
hlt
je
call
push
add
sub
std
mov
cmp
mov
mov
pop
fsub
mov
ss
push
ss
xchg
or
push
arpl
jl
adc
fwait
jmp
jbe
repnz
sub
jmp
je
sar
jae
or
(bad)
push
xchg
adc
scas
dec
sti
cmp
adc
repnz
and
inc
lods
mov
jns
xchg
or
cdq
cli
mov
sbb
dec
xchg
and
inc
pop
cli
fnsave
jno
inc
sbb
cmp
rcr
or
int3
shl
aad
test
and
(bad)
push
lock
lods
movs
and
or
aam
pop
push
xor
ins
loopne
pop
mov
popf
retf
cmp
leave
xchg
adc
mov
mov
(bad)
leave
cmp
or
js
mov
mov
arpl
and
rol
outs
adc
clc
inc
add
add
cmp
dec
adc
test
sub
xchg
jo
fcmovnbe
xchg
sbb
mov
outs
adc
outs
and
jmp
sbb
in
fdivr
in
scas
call
sub
jae
inc
call
sub
leave
xchg
mov
push
in
mov
jge
mov
jle
scas
movs
aam
outs
repz
cmp
xchg
mov
mov
fisubr
mov
and
out
or
jno
aad
les
js
stos
and
call
test
sar
inc
add
imul
fwait
mov
sbb
loopne
cmp
pop
or
sbb
push
mov
and
mov
mov
cmps
or
fisubr
push
inc
loopne
jae
daa
scas
mov
imul
push
in
std
icebp
out
pushf
xchg
pop
imul
repz
mul
dec
pop
cmc
es
jae
test
sbb
or
(bad)
mov
push
shr
scas
dec
out
push
clc
mov
sbb
jo
fsubp
xchg
mov
stc
fadd
ins
int3
hlt
mov
jge
xchg
add
pop
xlat
ss
ins
and
push
ja
xor
jge
std
rol
ret
mov
outs
shr
mov
fwait
in
cwde
pop
mov
shl
data16
and
sub
add
dec
imul
leave
movs
mov
xor
fisubr
and
arpl
scas
fisubr
xor
stos
stos
mov
add
cmp
or
int
aaa
jmp
push
loop
jne
mov
inc
rcr
or
mov
and
mov
sub
mov
and
leave
test
push
push
xchg
out
mov
dec
jl
or
(bad)
push
ss
adc
push
call
ds
push
xchg
mov
cld
push
js
in
pushf
fst
je
adc
pop
shl
mov
mov
in
test
xor
popa
arpl
out
stc
stc
arpl
clc
lds
cli
add
cdq
cmps
fcmove
xchg
imul
lock
cs
cmps
inc
pop
xchg
in
xor
inc
inc
adc
push
inc
(bad)
stc
mov
std
in
dec
(bad)
mov
jle
in
xor
pop
adc
jle
jno
outs
mov
cmp
or
jecxz
clc
cs
mov
popf
add
xor
dec
cmp
popf
fdivr
lea
mov
push
jmp
add
and
mov
jmp
in
movs
xor
call
or
into
inc
call
mov
xchg
ds
sub
call
addr16
add
lea
sub
xchg
dec
mov
mov
cmps
int3
inc
(bad)
pop
mov
mov
(bad)
mov
cmp
mov
inc
sub
jg
add
dec
test
mov
aas
xchg
pop
dec
rol
jnp
fisttp
imul
mov
aam
in
or
mov
outs
test
(bad)
mov
add
xor
cmp
inc
jb
arpl
movs
push
arpl
inc
xchg
adc
rcr
test
stos
pushf
pop
in
cmc
popa
or
jbe
push
or
popf
leave
fcmovnu
mov
add
push
sti
mov
mov
dec
xchg
mov
mov
adc
add
push
fs
and
add
xor
jno
or
call
mov
call
or
push
in
dec
addr16
in
sbb
inc
aad
xor
push
jb
add
mov
stos
push
in
sub
cwde
fdiv
pop
cmp
pop
or
mov
add
push
mov
out
test
aad
sbb
or
into
aam
pop
jo
(bad)
fdiv
fdivr
std
inc
ret
call
enter
fild
(bad)
test
add
add
sbb
inc
inc
cmps
jne
cmp
sbb
sub
sub
enter
mov
sbb
call
adc
push
fimul
scas
ins
(bad)
mov
xchg
pop
lods
jp
push
xchg
pop
adc
sbb
test
sbb
mov
mov
mov
fistp
(bad)
xchg
jo
fbstp
std
or
xchg
inc
mov
xor
mov
jmp
and
jno
sbb
(bad)
mov
adc
data16
stos
(bad)
pop
mov
push
leave
pop
mov
aaa
scas
mov
js
xchg
out
lods
std
enter
push
(bad)
cmc
dec
push
cli
cmp
mov
lods
test
mov
sub
dec
cdq
add
xor
pop
add
adc
xchg
xor
mov
ret
jnp
cmp
and
jns
std
mov
jmp
std
mov
push
test
(bad)
xchg
in
pop
xor
sahf
loop
jl
and
retf
inc
mov
or
lods
(bad)
pusha
shr
push
mov
or
add
cs
clc
or
in
dec
and
mov
fsub
xchg
dec
pop
stos
fwait
sti
jp
loopne
shl
dec
loope
in
sbb
pop
pop
adc
lahf
jp
popa
pop
arpl
ins
lods
(bad)
fnstenv
jb
xchg
jmp
ins
popa
into
cmp
pop
enter
push
cli
jl
std
nop
cmp
into
xchg
xchg
jecxz
mov
mov
dec
sub
add
fild
mov
and
mov
add
repz
test
sub
add
scas
pushf
daa
out
call
(bad)
push
nop
mov
mov
jne
sub
out
mov
sub
cli
neg
sbb
sbb
ror
add
mov
les
sar
outs
repnz
xchg
les
into
movs
xchg
rcl
mov
cs
imul
cmps
leave
fiadd
xchg
and
dec
push
outs
jns
xchg
inc
sahf
or
jno
int3
into
nop
stc
dec
mov
test
mov
jl
aas
popf
xchg
jg
dec
mov
call
imul
sbb
jmp
sub
in
cmp
jmp
pop
int
test
test
fisttp
cmp
push
xchg
in
enter
scas
cmp
sti
in
dec
push
sub
xor
mov
mov
repz
cmp
stos
dec
imul
cdq
and
xchg
push
test
add
inc
or
dec
and
fs
cdq
sub
sbb
sub
cld
pop
(bad)
cwde
sar
sub
mov
sbb
pusha
ds
pusha
and
lds
lea
sahf
cmp
mov
mov
pushf
in
cmp
loop
fld
(bad)
xchg
in
stos
nop
(bad)
jbe
mov
mov
pop
xor
pop
and
test
and
inc
aaa
mov
mov
mov
add
sti
pop
inc
or
mov
jge
mov
test
mov
gs
imul
call
mov
xchg
mov
inc
movs
mov
fiadd
fwait
cmps
in
pop
sub
enter
xchg
addr16
cmps
push
ins
fidiv
mov
cmc
minps
lods
push
fisttp
lahf
ins
lahf
dec
dec
shl
daa
cmp
jmp
pop
(bad)
inc
jg
dec
shl
inc
cli
mov
aas
jnp
push
pop
mov
xchg
loop
sub
inc
or
adc
cwde
or
mov
int3
xor
(bad)
pop
mov
sbb
retf
repz
and
or
mov
or
(bad)
(bad)
pop
sbb
adc
xor
into
push
xchg
lods
jp
mov
add
aad
fs
fs
sbb
popa
popf
loop
cmp
mov
aaa
fstp
stos
mov
xchg
imul
xchg
xchg
mov
retf
and
inc
cmp
fld
loopne
mov
jmp
inc
test
xchg
jle
aad
fidiv
loope
(bad)
hlt
push
adc
fnsave
cwde
pop
push
ret
sbb
scas
or
add
mov
shr
outs
adc
div
pop
test
lahf
loopne
add
cmps
fisttp
stos
cmps
cmp
lock
jnp
adc
sbb
pushf
ds
fnstsw
outs
loope
adc
adc
mov
cld
adc
mov
addr16
jmp
hlt
xor
outs
jne
mov
int
into
test
inc
add
cmp
mov
pusha
mov
jb
push
hlt
std
jmp
jae
or
std
sti
jg
addr16
and
retf
push
pop
inc
cdq
cmp
pop
and
int3
pop
inc
ja
(bad)
or
push
in
jbe
jg
repz
push
(bad)
xchg
pop
cli
dec
in
gs
sbb
fisubr
mov
xchg
ret
add
jmp
das
push
call
dec
mov
(bad)
sti
mov
fs
push
sub
jno
xchg
pop
mov
mov
lds
bound
xor
dec
sbb
retf
mov
mov
ins
jbe
mov
cs
sbb
mov
scas
retf
mov
mov
call
mov
or
push
jecxz
mov
call
movs
cmp
jl
gs
fwait
sbb
inc
call
in
xchg
adc
loop
(bad)
ins
push
fistp
test
mov
sub
cmp
setb
add
sub
or
mov
xor
pushf
xchg
dec
xchg
inc
push
std
fs
addr16
or
aad
fdiv
int
add
mov
mov
test
test
out
jbe
retf
out
push
cmp
pop
call
push
jp
add
cmp
mul
mov
sub
fucomip
dec
in
je
fisttp
mov
retf
jg
fisubr
scas
movs
pop
popf
jmp
sub
aas
sub
pop
push
jbe
movs
sub
cmps
pop
outs
jecxz
push
std
push
pop
clc
aad
retf
call
shl
out
lods
mov
sbb
cmps
ins
ins
lods
mov
xlat
sbb
sahf
lods
imul
mov
inc
out
jl
mov
scas
dec
shl
mov
add
aas
cmp
test
xor
aaa
pop
xchg
fisubr
imul
js
fadd
enter
push
add
jmp
and
jno
pop
push
pop
cmp
sub
add
lock
(bad)
jo
cmps
cmps
mov
pop
mov
mov
ins
imul
mov
xchg
in
sbb
jo
inc
dec
xchg
je
mov
xlat
out
pop
mov
stos
xchg
dec
leave
sub
iret
jb
jne
lods
xchg
retf
lds
and
and
push
lods
loopne
ins
imul
mov
sbb
mov
es
or
(bad)
rcl
fistp
push
jns
inc
mov
xchg
cmp
jbe
push
push
(bad)
jb
pushf
jns
xor
pop
xchg
retf
out
pop
arpl
and
and
cmp
fnstcw
jbe
jmp
ja
fistp
mov
xlat
sbb
in
jb
in
sbb
xchg
gs
push
xor
idiv
xchg
les
add
retf
sahf
mov
int
and
jbe
addr16
repnz
jno
popa
sbb
mov
add
push
inc
repnz
cs
ss
test
mov
test
push
push
fs
adc
pop
push
xor
cmp
sbb
add
imul
xchg
and
fldenv
jmp
fwait
xor
stos
jnp
pop
div
cdq
or
xlat
xor
and
repz
into
cld
mov
add
xchg
xor
jmp
(bad)
out
in
xor
aam
call
scas
mov
xor
imul
enter
mov
sbb
mov
(bad)
int3
popf
ds
xchg
stos
xor
xchg
cmps
xchg
shl
xlat
jge
jp
jo
jge
into
push
rcl
xor
ja
push
jb
dec
out
in
dec
fs
bnd
(bad)
outs
neg
or
clc
shr
pop
fwait
rcl
iret
int
mov
(bad)
repnz
inc
std
fidiv
aam
add
ret
int3
(bad)
cmps
aam
dec
inc
sub
jge
fld
leave
lea
sub
(bad)
movs
movs
push
mov
mov
cmp
push
mov
mov
and
push
jmp
sar
mov
fucomi
scas
aaa
fist
mov
xor
push
sub
bound
and
dec
xlat
ret
mov
push
mov
xor
jo
in
sbb
adc
outs
(bad)
or
in
dec
xor
dec
arpl
sbb
sbb
mov
and
(bad)
imul
xchg
mov
jl
dec
bound
xchg
pop
fcomp
adc
test
sbb
popf
xlat
cld
inc
ficom
jo
(bad)
mov
imul
loope
jp
call
sahf
(bad)
mov
sahf
add
les
cmc
fadd
sub
out
cmps
gs
jno
(bad)
js
jo
popa
ins
call
in
ins
mov
icebp
cdq
(bad)
xor
lock
adc
daa
sub
add
ja
pop
aas
movaps
dec
inc
adc
push
or
xchg
sbb
jp
pop
(bad)
push
ret
and
cs
dec
fcmove
imul
(bad)
and
mov
imul
shl
dec
(bad)
or
fwait
add
outs
shl
(bad)
pop
(bad)
jo
jno
test
adc
sub
pop
mov
mov
push
std
mov
push
mov
mov
clc
jge
les
daa
in
scas
cmps
jecxz
jmp
lds
push
pop
sub
push
sbb
rol
push
inc
call
into
pop
push
xor
xchg
xor
out
xchg
cmp
loope
cli
ret
pusha
push
js
push
jbe
jo
mov
sub
mov
ret
jae
scas
outs
pop
dec
out
sub
cmp
aad
stos
xchg
inc
pop
mov
scas
xchg
stc
mov
jbe
dec
xor
cld
repz
call
pop
(bad)
add
xor
movs
push
retf
push
push
xlat
sbb
mov
sub
outs
xchg
xchg
cmp
enter
lahf
mov
mov
fcmovb
dec
fnstenv
sbb
add
stos
mov
mov
dec
nop
dec
daa
sar
cmp
mov
jecxz
aas
repz
les
push
ficomp
xor
pop
dec
xchg
xor
adc
cwde
pop
sbb
pop
mov
jecxz
pop
xlat
mov
cmps
retf
imul
leave
icebp
aam
jl
scas
sub
jae
pop
cmp
or
(bad)
inc
pop
dec
jno
stos
sar
clc
xor
pusha
push
shl
shl
or
xchg
push
sub
jl
sbb
clc
dec
retf
clc
cld
or
adc
ss
jmp
xchg
adc
and
dec
les
int
icebp
aad
mov
into
shr
mov
es
xor
inc
xchg
inc
call
shl
imul
add
add
cmp
fisttp
xor
mov
dec
retf
xchg
push
hlt
ror
retf
sub
mov
stos
pop
(bad)
adc
jecxz
call
adc
add
xchg
push
xor
jg
pop
mov
xlat
les
(bad)
ror
mov
or
mov
dec
add
cld
xor
call
mov
mov
test
std
repnz
lods
sub
in
cmp
mov
pop
out
stc
add
leave
fst
cmp
movs
stos
xor
in
rcl
call
ret
or
inc
imul
cdq
xchg
stos
test
mov
mov
stos
adc
stc
adc
mov
ss
and
pop
(bad)
stos
pop
(bad)
ins
out
popf
add
js
xor
pop
nop
cmp
jnp
xchg
xor
mov
xor
jns
jno
mov
mov
gs
xor
dec
push
pop
lods
cmp
inc
sub
xchg
aaa
push
clc
imul
outs
ds
call
add
repnz
add
adc
pop
sbb
gs
sti
aam
inc
daa
pop
or
stos
mov
jg
sbb
mov
xchg
test
inc
imul
fldpi
mov
cmp
(bad)
sub
scas
inc
inc
sbb
ror
fadd
inc
sar
mov
pop
mov
call
mov
fistp
cli
dec
mov
rol
pop
push
push
xor
(bad)
(bad)
arpl
mov
cli
push
dec
retf
out
(bad)
fsub
mov
cmp
lea
pop
or
pop
repnz
sub
xor
xor
mov
mov
rcl
push
test
lahf
shr
xchg
test
cld
lods
push
mov
sub
or
mov
sbb
xchg
lea
lea
push
(bad)
push
add
xchg
pop
mov
mov
call
loop
aad
dec
mov
cdq
std
or
in
cs
loop
dec
pop
pop
jg
nop
xor
sbb
sub
mov
sbb
cmp
std
dec
mov
adc
bound
rol
fst
jp
div
in
rcl
pop
lods
mul
iret
cmps
add
stos
(bad)
sub
fisubr
mov
jge
mov
(bad)
cmp
add
jecxz
and
stos
adc
cwde
pop
fidiv
mov
cs
iret
cwde
cmp
ud1
(bad)
cmovo
ins
or
sbb
imul
jb
xlat
jnp
inc
loopne
test
neg
gs
adc
repnz
add
mov
jae
cmp
stc
add
push
(bad)
mov
and
xchg
mov
cmp
add
jns
test
fisub
fdivr
stos
int
into
ds
int3
daa
pop
xor
ror
jo
adc
aaa
add
pop
stc
mov
cmps
and
aaa
rol
jae
in
fldcw
add
push
in
cmp
sub
mov
ja
cwde
pop
pop
lods
cmps
adc
iret
fdiv
in
fwait
push
ins
jl
(bad)
jmp
das
arpl
sbb
fisttp
push
dec
dec
imul
rol
inc
adc
xchg
cmp
and
xchg
sub
popf
out
in
dec
mov
or
and
sub
ds
pushf
push
arpl
jne
sar
movs
sub
inc
jle
es
test
stos
(bad)
jb
test
sub
and
xor
dec
sub
das
loope
std
push
xchg
inc
bound
clc
xor
loope
push
pusha
push
imul
mov
sar
xchg
cmps
xor
and
mov
(bad)
int
pop
or
dec
jmp
and
xor
add
jno
sbb
imul
ins
sub
fisubr
icebp
push
daa
cmp
jb
movs
jg
jecxz
cld
cmp
data16
or
pop
ret
pushf
bound
sub
xchg
xchg
(bad)
pop
in
scas
push
mov
scas
mov
fcom
mov
mov
movs
sub
mov
push
aas
jle
shr
sahf
push
mov
out
jl
sub
ficomp
loope
ins
and
sub
sub
xor
mov
mov
and
cmc
cs
sub
cmp
std
or
add
cmp
ja
retf
ret
pop
sub
jle
call
sbb
cmp
int
test
and
adc
pop
frstor
pop
js
(bad)
mov
fisub
push
dec
mov
xor
jno
js
push
std
mov
fdiv
mov
mov
outs
dec
sbb
fs
out
(bad)
xchg
add
jmp
cs
fcomp
and
or
or
sahf
add
out
push
shl
cmp
in
sub
adc
or
mov
imul
add
std
outs
(bad)
mov
mov
jb
stc
sub
push
dec
imul
xchg
mov
or
and
scas
add
les
xor
jg
inc
out
lds
mov
push
mov
fcom
shr
jg
or
cmp
xchg
xchg
and
cmp
push
in
or
lds
ffree
call
retf
imul
mov
inc
sub
ja
clc
pop
pop
call
outs
add
cdq
mov
mov
jecxz
and
pop
xchg
jmp
xor
(bad)
icebp
xchg
clc
into
not
outs
jmp
sub
pushf
push
(bad)
or
xchg
retf
addr16
and
cs
fisttp
sbb
mov
add
mov
(bad)
movs
es
adc
push
cmps
push
test
or
fstp
fimul
ss
sbb
test
stc
adc
add
xchg
push
loop
jbe
nop
jb
scas
mov
aaa
popf
es
add
mov
mov
jmp
and
in
cmp
test
das
xor
aaa
in
bndstx
pop
fwait
inc
cmps
push
cmp
dec
add
xor
push
neg
xchg
mov
or
cmp
pop
or
jecxz
movs
mov
out
sub
sbb
dec
cmp
fcomp
pop
outs
push
add
es
pushf
aam
fisubr
push
xor
dec
stc
xor
add
xor
mov
mov
inc
retf
adc
adc
sbb
push
mov
mov
or
js
add
(bad)
icebp
ret
pop
retf
leave
add
xor
les
test
push
nop
mov
stos
cwde
pop
adc
test
fist
pop
in
xor
mov
jns
cmp
jno
dec
push
cmp
repnz
(bad)
xchg
lea
(bad)
cmp
cwde
daa
imul
adc
or
xor
mov
imul
out
jl
pop
sar
jmp
or
jmp
jns
lahf
or
xchg
or
bound
push
cmc
push
inc
lahf
fimul
cwde
cmp
scas
xor
cmps
jnp
add
inc
imul
enter
mov
ret
outs
popf
pop
jb
xchg
sbb
cmp
in
pop
into
push
and
sub
and
daa
mov
jmp
sub
div
mov
pusha
adc
lock
and
adc
call
aam
or
repnz
fimul
stos
xchg
xor
aad
and
les
idiv
push
inc
cmp
sub
sbb
cmp
jecxz
fidivr
pop
inc
push
fadd
lods
xlat
or
mov
adc
mov
popa
mov
int3
pop
lods
mov
int
scas
pop
sub
xchg
push
xchg
and
push
ret
jmp
call
xchg
push
in
fs
jmp
sub
adc
sub
mov
loopne
xor
mov
icebp
pop
jge
cmp
cmp
xor
mul
cmps
push
imul
cmc
movs
mov
mov
mov
add
cmp
xor
movs
xchg
or
inc
xor
sub
sbb
rol
mov
mov
shl
(bad)
mov
loope
cmp
jmp
inc
test
outs
call
cmps
or
mov
add
ins
int
mov
jl
pop
(bad)
or
cmp
pop
scas
add
nop
xor
adc
fidivr
inc
scas
add
sub
mov
dec
or
aas
fs
xchg
fistp
xor
xchg
xlat
adc
sar
pop
push
pusha
cs
mov
int
cs
loope
nop
and
dec
dec
sahf
sti
adc
adc
cmp
lds
sub
mov
sub
aam
fwait
or
(bad)
mov
pop
cmp
push
push
es
int3
outs
fucomi
es
into
push
addr16
mov
or
mov
dec
jmp
lea
ins
inc
cli
ficomp
retf
ja
add
jae
mov
ds
iret
bound
daa
outs
fisub
dec
mov
xchg
dec
pop
movs
dec
mov
popf
sub
xchg
in
mov
outs
ds
pop
aam
dec
mov
dec
cdq
jno
and
ds
mov
mov
pop
xchg
inc
inc
inc
stc
jg
(bad)
es
add
jb
inc
out
xlat
push
add
and
sub
mov
dec
or
lods
xor
cmp
inc
and
icebp
int3
jnp
sbb
pusha
loop
cmp
sti
cwde
(bad)
push
test
pushf
jne
mov
adc
pop
inc
nop
jge
pop
lea
(bad)
cmc
pop
push
add
mov
jg
iret
ss
xchg
mov
jbe
xor
(bad)
std
jmp
or
mov
xchg
movs
pop
ret
frstor
test
fldcw
lahf
cs
popf
test
nop
mov
out
hlt
xchg
bound
sub
or
popa
xor
or
pop
inc
push
push
push
and
inc
pop
sbb
mov
mov
fincstp
xor
rol
jle
pop
shl
test
mov
stos
pop
jecxz
mov
imul
mov
and
jmp
or
ja
repz
in
push
pop
cli
pop
fdivr
jnp
js
ret
aaa
repnz
js
adc
leave
(bad)
push
mov
call
jecxz
aaa
mov
scas
push
mov
and
fst
push
add
lock
mov
dec
dec
(bad)
sti
xchg
(bad)
js
sub
dec
push
and
add
aam
bound
pop
pop
out
lds
push
ss
out
(bad)
fldcw
loopne
dec
sti
mov
and
xchg
mov
aas
or
pop
and
pop
(bad)
mov
out
mov
cwde
fwait
sub
iret
int3
(bad)
int
mov
int3
lahf
pop
(bad)
lock
dec
repz
xchg
sub
popa
jecxz
cmps
imul
retf
cld
lds
inc
movs
adc
or
loope
cmp
cld
xor
mov
dec
daa
sbb
into
dec
lahf
ss
ror
cdq
rcr
push
cmp
aas
xor
std
adc
sub
(bad)
movs
adc
and
inc
pop
out
dec
cli
ret
dec
and
xchg
data16
push
sbb
icebp
scas
imul
push
lahf
sbb
mov
xchg
sub
ffree
rol
icebp
mov
jecxz
shl
mov
jmp
jg
sar
mov
mov
popa
cs
or
out
pushf
mov
cli
push
(bad)
jae
mov
call
cmps
xor
ror
daa
pop
sub
pop
and
push
pop
nop
jle
add
jle
xchg
mov
call
mov
js
aam
pushf
jl
pop
xor
pop
xchg
adc
rol
rcr
xchg
aad
sub
dec
stc
xor
xchg
or
shr
ins
mov
mov
cs
arpl
out
cwde
addr16
mov
or
rcl
jl
pop
dec
js
loop
into
and
scas
mov
add
xchg
xor
xchg
in
imul
and
mov
es
or
jl
jns
or
shr
not
xchg
ja
jmp
jl
push
dec
dec
push
pop
test
inc
out
mov
ss
sub
jl
jmp
arpl
(bad)
rol
cmps
mov
lea
les
bound
or
pop
jg
adc
push
jl
lds
pop
and
xor
je
ss
and
jne
outs
jbe
(bad)
or
pop
sub
pop
mov
shl
and
or
dec
fbstp
xchg
aam
mov
lds
or
push
je
sub
retf
ins
push
push
popa
les
push
retf
pop
retf
cld
mov
pop
fisub
loope
xchg
push
inc
jae
inc
mov
mov
mov
call
into
sti
xchg
mov
mov
in
call
shl
jns
xchg
nop
fsubr
inc
fwait
pop
aad
ror
sub
loopne
push
and
mov
retf
pop
jne
mov
inc
imul
inc
idiv
jmp
mov
retf
cmp
xor
mov
push
scas
call
or
dec
lods
lock
xor
div
mov
xchg
mov
in
movs
xchg
jp
std
rol
xlat
mov
lods
cdq
imul
jg
mov
push
or
std
hlt
ins
adc
fiadd
pushf
sbb
mov
std
retf
stos
cmc
dec
rol
loop
scas
jle
inc
sub
fnstcw
(bad)
jne
mov
and
cmp
aaa
pop
ficomp
imul
je
dec
call
jecxz
ror
pop
and
mov
loope
mov
xchg
test
pop
jae
and
xchg
jg
xchg
lods
push
dec
lea
sbb
imul
or
xor
inc
mov
xchg
mov
sbb
mov
sar
aaa
cmp
outs
retf
dec
push
fnstsw
clc
sti
test
xor
pop
sub
jae
xchg
push
in
sub
inc
ins
or
pop
cmp
jl
pop
dec
cld
in
out
int
(bad)
bound
shl
sbb
icebp
ja
stc
stos
mov
inc
(bad)
std
ror
(bad)
jmp
jp
sbb
dec
lods
cmp
cmp
daa
cmp
mov
push
jmp
pushf
push
bound
test
mov
aaa
test
fs
mov
sub
mov
ja
cmp
rol
shr
cli
mov
mov
mov
movs
or
dec
daa
out
repnz
push
in
mov
in
es
mov
mov
rcr
and
(bad)
int3
cmp
pop
mov
setbe
lea
mov
jnp
in
std
sbb
retf
or
sbb
jecxz
lods
sti
test
aaa
dec
or
aam
and
sub
inc
push
(bad)
mov
lods
adc
nop
shr
sti
sar
xor
stos
retf
loope
sub
movs
lds
jle
xchg
push
mov
repz
sbb
pop
sti
sbb
mov
adc
gs
inc
adc
mov
mov
sbb
fdiv
mov
imul
adc
fist
movs
lds
jo
push
xlat
or
ins
je
mov
ror
cmp
adc
ficom
jmp
xchg
movs
sub
lahf
jl
sub
jns
stc
fidivr
pop
ins
clc
je
xchg
cmp
push
or
adc
push
test
sbb
jne
jmp
imul
sbb
push
add
dec
push
mov
sbb
enter
mov
ret
cld
xor
push
ret
cmp
aam
pushf
xchg
in
add
cmp
jg
fmul
pop
dec
popf
adc
call
(bad)
shl
mov
stos
jae
pop
adc
add
mov
imul
in
cmp
sub
and
dec
add
call
mov
sub
fwait
test
pushf
push
imul
lahf
test
mov
stos
loope
ret
mov
fimul
ret
cdq
fdivr
push
xchg
(bad)
sub
(bad)
ja
iret
in
mov
(bad)
mov
data16
movs
cmp
inc
mov
mov
shl
xchg
int3
or
(bad)
cdq
cmp
fst
scas
push
mov
mov
(bad)
mov
push
ror
scas
test
ja
out
push
test
(bad)
(bad)
(bad)
xchg
not
ins
and
push
mov
ja
pop
mov
or
cwde
jle
sub
pmaddwd
mov
sub
fisttp
mov
dec
jnp
cmp
add
int3
push
mov
add
rol
popa
ja
fild
push
inc
mov
loop
add
fwait
xor
(bad)
pop
push
adc
cmp
sub
aas
sbb
out
leave
and
cli
or
push
icebp
loope
add
cs
out
pop
stos
ficom
mov
add
ds
test
loope
inc
inc
gs
or
mov
jnp
ds
dec
loopne
in
retf
cmp
(bad)
clc
rcr
xchg
mov
push
dec
add
mov
dec
ins
retf
cmp
int3
or
out
sub
popf
fidivr
inc
adc
fadd
sbb
shl
rol
pop
dec
jmp
mov
ret
ja
cmp
pop
cmps
and
add
pop
fs
mov
inc
sbb
inc
cmp
inc
aad
pop
push
std
adc
cli
leave
aas
loopne
inc
ds
push
lea
inc
dec
enter
repz
adc
mov
dec
inc
js
sub
out
je
jnp
inc
push
cmp
gs
mov
les
int3
rcl
dec
cmps
mov
sbb
call
es
loop
pop
ret
mov
data16
jno
adc
mov
cs
push
lock
gs
call
ins
xor
xor
cmp
push
and
mov
mov
jge
xor
jb
add
pop
adc
movs
mov
lds
xor
popf
push
jecxz
push
sbb
sub
fs
pop
nop
dec
(bad)
xor
adc
imul
ins
stos
cmp
shl
les
mov
int
lea
fdivr
xor
je
mov
dec
jbe
ins
mov
xchg
jmp
aad
push
mov
(bad)
ja
aaa
sbb
ins
sub
xchg
cmp
rol
jg
and
jbe
gs
fcmovnbe
or
sub
inc
imul
dec
or
lds
cmp
loop
in
(bad)
dec
adc
xchg
pop
imul
inc
test
daa
xchg
inc
mov
mov
inc
xor
sahf
xor
mov
dec
cs
cdq
sub
popf
adc
movs
lock
mov
int
movs
repnz
mov
test
test
int
sub
pop
push
push
push
mov
mov
dec
fdivr
adc
stos
and
(bad)
mov
lock
pop
and
or
mov
xor
fs
adc
rol
or
stos
mov
or
sub
outs
mov
adc
std
jns
mov
cld
add
inc
fs
sahf
dec
out
pop
push
cmps
gs
(bad)
cmp
mov
cmp
scas
add
mov
jl
pop
pop
aaa
cmc
push
idiv
and
sar
pop
add
xchg
cmp
fs
imul
fs
xchg
dec
adc
add
dec
imul
dec
sbb
jmp
xor
xchg
pushf
in
jb
out
pop
gs
add
mov
mov
push
dec
loope
shl
data16
cmp
out
mov
vmwrite
cmps
cmc
dec
fist
mov
test
test
xchg
sahf
jecxz
mov
mov
cmc
pop
imul
xchg
imul
lahf
inc
mov
sti
loope
fs
sti
and
neg
movs
cmp
into
jo
and
ins
jns
pop
(bad)
ror
stc
stc
sbb
cld
out
cs
jnp
inc
ss
push
jl
in
test
inc
leave
dec
or
sti
or
test
stos
loope
std
mov
ins
adc
push
movs
dec
and
mov
loopne
pushf
xchg
mov
data16
xchg
and
test
rol
or
xchg
jle
jne
pop
iret
retf
les
adc
imul
mov
adc
or
cmp
or
mov
mov
mov
pop
push
shr
mov
gs
shl
imul
cdq
in
scas
cmp
sbb
lea
out
aad
xor
add
out
std
pop
frstor
(bad)
adc
push
ins
dec
mov
std
inc
imul
xor
mov
ins
mov
(bad)
jmp
cmp
nop
and
mov
std
fiadd
lahf
sbb
cs
js
loope
out
scas
mov
imul
ret
jmp
arpl
pop
push
xor
xchg
sbb
add
rcr
(bad)
or
adc
out
movs
ret
js
cmps
(bad)
push
pop
jle
arpl
sahf
pop
lea
push
bound
jns
dec
add
mov
push
and
shr
mov
in
loop
lods
jo
lods
mov
ins
push
loopne
mov
repnz
dec
mov
hlt
mov
imul
xor
icebp
addr16
aad
mov
mov
mov
imul
xor
mov
adc
sub
pop
push
imul
add
stos
les
rcr
(bad)
jle
dec
sub
int
push
sahf
inc
(bad)
jl
pop
sbb
xchg
pop
sahf
in
sbb
es
push
sbb
pop
ficomp
mov
push
call
clc
repz
jmp
pop
push
outs
fistp
jnp
cmp
jmp
fs
jmp
jne
xchg
or
retf
sub
sbb
(bad)
pop
sub
sbb
(bad)
(bad)
mov
xchg
jo
push
test
icebp
add
push
xchg
cmp
push
xor
daa
rcl
jns
push
inc
cbw
adc
int
fst
loope
push
adc
scas
inc
shr
xchg
mov
mov
clc
sti
and
repnz
xchg
lock
stos
loop
mov
add
mov
mov
out
dec
adc
(bad)
aas
push
sub
rol
dec
pop
dec
les
addr16
add
or
aas
lahf
inc
(bad)
mov
push
(bad)
pop
mov
push
xor
(bad)
je
jae
test
lock
sbb
inc
fisubr
jb
in
pop
cmp
or
jnp
dec
leave
add
cmp
stos
fbld
cmps
mov
addr16
push
dec
fwait
pop
inc
dec
iret
cwde
pop
test
pop
cs
pop
cmp
pop
popf
mov
jnp
in
rcl
repz
shr
push
jno
dec
jle
mov
inc
or
mov
ret
fwait
(bad)
pushf
inc
xchg
mov
ror
or
ret
enter
jp
xchg
mov
dec
sbb
sub
cld
arpl
mov
repnz
dec
dec
sbb
xchg
pop
ficom
xchg
sbb
enter
mov
rcr
sti
jne
mov
jl
out
bound
(bad)
repz
(bad)
repz
mov
retf
adc
mov
out
pop
adc
cli
call
rcl
out
popa
lods
or
jmp
iret
loop
jle
mov
jae
jne
fiadd
ret
(bad)
xor
sub
ror
push
xor
ret
bound
lods
mov
hlt
shr
pop
imul
pop
xchg
bound
add
test
pmulhw
icebp
fnsave
in
movs
dec
fstp
shl
or
adc
jge
ficom
pop
xchg
add
mov
jl
ret
or
in
mov
loop
push
fs
mov
lods
mov
scas
fwait
sub
fsubr
push
gs
bndldx
add
mov
push
cmps
dec
cmc
fsub
add
xchg
mov
inc
aam
sahf
mov
dec
imul
jnp
outs
cld
jecxz
xchg
stos
dec
ds
jp
inc
ror
sub
jp
push
rcr
(bad)
or
call
dec
pop
xor
inc
call
jno
ins
inc
in
add
pusha
mov
das
add
sbb
out
xchg
mov
xlat
add
add
add
out
ja
leave
sub
retf
in
inc
in
repnz
jae
sbb
scas
sbb
and
push
cmp
out
sub
xor
mov
ins
idiv
adc
xchg
sub
into
rcr
dec
dec
ret
pushf
(bad)
and
ja
fisub
aas
pop
adc
push
push
push
movs
push
sbb
jg
dec
add
pop
pop
scas
add
jb
push
jmp
inc
dec
jne
mov
lea
mov
push
dec
mov
stos
ins
inc
lods
cli
xor
adc
push
test
les
inc
jns
inc
jmp
mov
in
sub
xor
sar
stc
mov
out
jns
pop
and
or
push
(bad)
or
fiadd
xor
sbb
pop
addr16
push
movs
(bad)
ja
repnz
fcom
lds
sub
mov
mov
mov
cmp
(bad)
mov
cld
mov
push
sub
(bad)
in
sbb
daa
test
out
loopne
jle
test
sbb
outs
into
adc
test
adc
xor
mov
popf
cmps
or
mov
into
nop
xor
cmp
mov
and
sbb
dec
cmp
add
cld
mov
dec
mov
adc
jmp
pop
stc
or
js
adc
dec
jae
cdq
in
clc
clc
sbb
fnstenv
xchg
mov
sbb
scas
jb
fistp
sbb
mov
stos
mov
xchg
call
lods
or
das
adc
push
hlt
sti
mov
jecxz
pop
push
jb
loope
ret
mov
xor
mov
mov
(bad)
sahf
cmps
fs
popf
jl
cli
and
ror
inc
push
int
mov
lods
jmp
pop
and
xor
sbb
outs
and
test
ror
div
jbe
add
test
(bad)
cmps
sub
inc
in
sti
xchg
(bad)
fst
lea
out
xchg
icebp
fistp
and
std
aad
arpl
(bad)
nop
ss
jae
push
icebp
fst
lock
iret
rcl
sub
jae
xchg
test
pusha
lods
xor
sbb
xor
push
(bad)
and
(bad)
lds
xlat
dec
outs
mov
rcl
push
inc
les
jp
mov
jnp
or
sahf
outs
stos
int
mov
jmp
aaa
mov
mov
lods
jne
adc
dec
fwait
(bad)
mov
(bad)
loope
sbb
aad
out
jg
call
mov
loope
scas
and
lods
mov
push
mov
jae
sub
mov
adc
mov
ins
xchg
lds
shr
retf
(bad)
push
pop
out
cmc
aad
pop
inc
and
sub
ret
push
adc
fs
jnp
test
or
popf
loop
mov
sbb
lea
push
jp
lods
adc
mov
sbb
jl
mov
pop
fadd
retf
call
ret
dec
dec
jp
xchg
jbe
hlt
arpl
jne
js
pop
loope
les
mov
cdq
mov
mov
mov
jb
movs
sub
fcomp
and
jmp
daa
jns
sub
adc
or
sti
into
ret
xor
cmps
push
or
int
not
adc
pop
test
adc
sbb
fwait
sbb
(bad)
mov
dec
xchg
pop
loope
add
push
stos
push
mov
loope
sbb
pushf
dec
lahf
ja
and
sub
aaa
call
cmp
jl
scas
shl
mov
pushf
cld
(bad)
pop
ins
popa
jmp
sub
mov
test
(bad)
dec
into
push
jne
inc
xlat
jg
xchg
stc
outs
lea
cwde
dec
rcl
les
jecxz
push
xchg
and
aad
dec
packuswb
out
dec
sbb
popa
loope
ds
pop
stc
iret
inc
jmp
xor
dec
inc
xchg
rcl
push
mov
movs
repz
and
test
(bad)
aad
shr
mov
fstp
loopne
sub
bound
and
and
mov
ins
push
xor
pop
in
dec
test
fstp
cwde
and
outs
loop
and
fbstp
cmps
push
call
out
mov
in
sub
fnstsw
popf
xchg
daa
lds
cli
(bad)
fdivp
dec
mov
mov
imul
dec
lock
jp
lods
mov
out
xchg
push
cmp
dec
sbb
inc
call
(bad)
arpl
popa
in
mov
dec
dec
test
repz
aaa
xlat
adc
push
imul
xlat
stc
popf
in
jnp
and
sbb
pop
clc
les
and
in
test
mov
xlat
hlt
jns
jnp
or
addr16
dec
int
in
je
loope
lods
adc
loope
jle
cs
sbb
fdivr
loope
fdiv
scas
mov
mov
imul
xchg
in
inc
or
cmps
and
popf
dec
pop
div
push
pop
(bad)
ret
int
xor
and
and
fucomi
pop
ret
fistp
movs
shr
cwde
icebp
iret
cmp
bound
pushf
xchg
sub
pop
ret
lock
int3
push
push
data16
popa
pop
mov
fild
or
scas
lods
push
inc
cli
cdq
into
sbb
test
xchg
adc
pop
sub
cli
(bad)
push
mov
sub
and
mov
lods
rep
pop
ss
ja
cmp
out
(bad)
in
in
stc
jb
sub
jle
xor
cmp
ret
lods
mov
cs
dec
adc
pop
shl
dec
add
call
rol
jns
std
test
add
fisubr
stos
and
(bad)
or
lea
sti
inc
mov
or
jecxz
jae
bound
or
mov
fisubr
push
cdq
fwait
push
or
xchg
cmp
pop
call
cmps
jmp
cli
(bad)
sub
push
dec
and
in
mov
out
sub
fwait
xor
sub
and
inc
mov
and
sbb
retf
sbb
jo
and
xchg
adc
cmp
jno
push
jle
minps
test
sbb
ret
es
movs
and
mov
int
stc
push
jae
mov
loope
push
add
hlt
push
adc
xchg
aaa
arpl
adc
cld
inc
jo
retf
and
mov
movs
ror
outs
mov
push
mov
fwait
cmp
mov
enter
enter
lahf
xchg
das
stc
inc
sar
nop
jg
adc
xor
sbb
pop
int3
cmp
cmps
pusha
mov
scas
xchg
mov
dec
mov
ins
popf
stos
jmp
push
sub
fisubr
mov
pop
or
cmps
movs
daa
cmps
xor
popf
ror
mov
dec
push
jae
mov
sub
push
jp
mov
adc
sbb
push
das
clc
xor
push
cld
bound
inc
ins
jle
test
and
push
in
dec
xchg
jp
mov
jle
jae
aas
in
in
dec
lock
test
loop
pop
push
sub
sbb
adc
aas
sti
push
push
imul
pop
iret
(bad)
gs
push
and
inc
mov
or
shl
xor
movs
in
mov
repz
sub
sub
test
mov
retf
dec
or
movs
hlt
sbb
pop
jg
jb
cmp
pop
sbb
add
mov
sar
xor
sbb
and
cwde
retf
pop
clc
jge
sub
pop
ret
xchg
cmp
retf
jns
jmp
rcr
xlat
ja
xchg
mov
add
pop
aad
test
push
test
mov
iret
jns
mov
cld
jb
push
cmp
clc
mov
jne
sub
in
and
fs
mov
sub
pop
test
repz
pushf
inc
jge
test
push
xchg
fwait
dec
cmps
aam
add
push
jne
in
mov
adc
xchg
jnp
lea
adc
ror
stc
sub
movs
or
aas
cmc
hlt
sbb
test
ficomp
sbb
jle
pop
lods
mov
(bad)
xchg
push
aas
cmp
(bad)
add
jno
mov
nop
sub
cmp
xchg
retf
push
xor
pop
mov
lock
pop
or
sbb
pushf
vmovhpd
ret
lods
(bad)
xchg
mov
or
fwait
xchg
movs
ins
mov
mov
clc
daa
sub
loop
mov
nop
in
ds
sahf
mov
mov
jl
rcr
es
jae
push
inc
cs
fnstenv
mov
sbb
pusha
jae
cmp
ror
stos
pop
mov
mov
inc
push
inc
pusha
in
xor
inc
cdq
jnp
or
into
and
sti
mov
jne
leave
dec
rol
jb
scas
mov
out
mov
cdq
or
jle
ret
and
retf
outs
mov
lea
shl
sbb
fdivr
lahf
int3
push
xor
in
and
je
mov
sub
push
xor
sub
cli
fimul
enter
adc
aaa
push
aam
arpl
lock
cmp
pop
stos
mov
scas
cmp
inc
(bad)
xchg
xchg
(bad)
adc
jo
mov
mov
stos
mov
push
mov
xchg
pop
inc
call
push
bound
and
js
mov
add
icebp
cmp
xchg
dec
ins
pop
xlat
cmp
or
movs
sub
stc
cmp
pop
inc
cmps
loopne
inc
mov
in
popa
retf
jo
mov
xchg
pop
xchg
lods
lahf
fnstenv
fxch
ins
(bad)
jl
mov
gs
xchg
inc
push
pop
gs
jge
mov
fsubr
call
mov
cmps
je
xor
ret
push
push
addr16
call
test
movs
adc
rcl
cli
jp
dec
mov
cmovl
mov
jmp
inc
into
loopne
int
sbb
es
cs
mov
mov
cmp
push
aas
mov
scas
dec
inc
adc
pop
mov
jnp
or
pop
das
or
je
mov
stos
(bad)
retf
repz
cli
in
pop
jno
das
rol
sbb
js
and
sub
ss
(bad)
ja
dec
mov
cmp
sub
cmps
xor
je
ret
pop
adc
xor
aaa
pop
xchg
dec
sub
mov
cmp
jbe
pop
int
movlps
test
(bad)
fnstenv
scas
mov
je
cmps
aam
add
(bad)
shl
cmp
bound
cmps
js
xor
xor
mov
inc
mov
retf
fistp
inc
mov
mov
rol
pushf
mov
mov
repnz
mov
mov
cmp
popa
xchg
add
add
sub
mov
jge
jo
lahf
sub
scas
loopne
and
ret
(bad)
out
out
(bad)
sahf
fimul
loop
pushf
scas
std
cmp
pop
cmp
sbb
jb
xchg
mov
jge
mov
inc
fimul
loopne
movs
cdq
lods
iret
out
mov
cdq
xor
pop
gs
adc
mov
pop
cmp
adc
dec
adc
push
bnd
mov
pushf
enter
out
js
(bad)
je
gs
xlat
pop
xlat
mov
inc
sar
data16
cmp
pmaxsw
imul
lods
loopne
xor
stos
lea
jmp
mov
or
jge
pop
ror
bound
pop
call
ins
mov
int
out
fld
mov
repz
rcl
jp
(bad)
mov
push
inc
mov
mov
dec
scas
xchg
xchg
xchg
retf
cmp
pop
ins
ror
xchg
push
int3
pop
popa
xchg
xchg
pop
or
pop
pop
les
add
dec
add
ret
or
dec
hlt
nop
in
aad
cs
popa
xchg
pop
jp
jg
or
cmp
jmp
jns
push
xchg
jne
xchg
adc
fsubr
lahf
adc
sub
ja
adc
xchg
sahf
imul
shl
and
jmp
pop
or
xchg
cmp
fsubr
mov
adc
ret
jnp
sub
test
nop
in
out
iret
pushf
adc
aam
pop
pusha
add
sub
iret
xor
inc
xchg
fadd
pushf
mov
mov
add
add
inc
lods
mov
lock
das
aaa
in
(bad)
fdivp
fldenv
push
jecxz
das
cmp
xchg
cwde
jmp
movs
loop
mov
inc
sbb
iret
mov
loopne
rol
sbb
inc
rcl
jl
jno
mov
fld
mov
jge
cld
jmp
push
je
cmp
pop
test
dec
xor
aaa
add
xchg
cmps
xchg
ins
mov
out
repnz
jmp
je
test
lds
mov
test
jae
int3
pop
xchg
lock
stos
outs
push
int
xor
fld
and
or
das
lods
sub
push
or
aad
pop
(bad)
inc
sbb
lods
mov
jb
test
add
imul
leave
rcr
(bad)
ficomp
enter
aad
inc
xor
lea
sti
out
arpl
movs
xchg
mov
sub
int3
out
push
mov
cmp
xchg
fistp
jns
xchg
ds
aaa
pop
jl
jb
ror
cmp
pop
aaa
cmp
adc
jae
sar
dec
xchg
(bad)
iret
add
rcl
fist
sub
fnstenv
mov
pop
in
das
pop
sub
(bad)
repz
bound
mov
or
or
or
mov
ins
aad
das
in
add
adc
and
jb
inc
jnp
mov
push
into
popa
inc
(bad)
push
add
and
cmp
push
out
push
cwde
add
not
pop
dec
and
pop
dec
add
jl
repz
ret
mov
dec
or
jl
and
dec
jns
pusha
cmp
repz
inc
pop
ds
jbe
(bad)
xlat
adc
rol
fs
adc
jecxz
stos
mov
repnz
stos
jnp
ficom
loopne
jge
ins
test
ins
dec
retf
test
adc
cmp
inc
mov
lea
dec
out
cmc
cld
xor
jle
mov
mov
out
or
dec
inc
push
lahf
sbb
pop
(bad)
cmp
rcr
mov
and
add
adc
pop
push
push
in
out
dec
mov
mov
ja
aad
lods
sbb
mov
fnsave
cwde
mov
popf
pop
sbb
leave
cmps
iret
retf
cmp
and
mov
les
inc
push
out
adc
fyl2xp1
cmps
test
mov
jno
arpl
ins
call
dec
add
(bad)
sti
and
inc
pop
xchg
xchg
rdmsr
bound
cmp
mov
jmp
ins
(bad)
xor
das
fidivr
stos
enter
fimul
(bad)
repz
mov
add
pop
mov
test
dec
push
iret
sbb
xor
adc
jb
aam
mov
loop
shl
ficomp
daa
pusha
push
push
xchg
retf
mov
int
lods
jp
mov
inc
rol
cdq
jbe
xchg
sti
add
and
in
mov
xor
rcr
pop
repz
mov
scas
dec
pop
xor
sbb
leave
(bad)
int3
or
fwait
jbe
in
xchg
icebp
mov
js
mov
or
or
push
ror
test
sbb
fwait
(bad)
jp
cmp
(bad)
mov
in
push
imul
clc
push
fdivp
mov
xor
jg
xor
mov
sahf
es
icebp
movs
mov
test
repz
mov
jg
shr
daa
cwde
jecxz
xchg
test
into
xor
retf
cmp
(bad)
ror
xor
mov
into
xor
mov
xchg
ja
pop
fcomip
ins
add
inc
in
retf
and
sub
jg
mov
in
pop
cmps
jne
(bad)
pushf
push
in
lods
nop
mov
push
ficomp
jnp
sub
hlt
jg
scas
sbb
(bad)
scas
or
fild
pop
sbb
mov
punpckhwd
pop
retf
js
pusha
or
adc
mov
jge
xlat
push
aam
dec
jnp
pop
pop
cs
inc
jl
push
or
fwait
adc
cli
adc
test
dec
mov
hlt
push
and
(bad)
(bad)
repnz
movs
out
xor
fcomp
adc
fstp
in
xor
neg
cld
sub
jge
push
xor
test
xchg
gs
mov
dec
sbb
sbb
pop
or
out
jl
sbb
jmp
clc
add
mov
push
jb
and
xchg
iret
cli
lock
int3
push
ins
mov
in
jno
xchg
dec
or
adc
jnp
test
sbb
mov
push
sbb
lds
jle
xchg
movs
sub
dec
scas
call
in
out
mov
int3
pop
mov
sbb
rol
cwde
out
rcl
push
cmp
ror
adc
jnp
cdq
int
test
inc
pusha
scas
xchg
mov
cmp
ret
js
sub
and
sub
adc
inc
sahf
stos
cmp
pop
or
push
or
ret
(bad)
fistp
add
cmp
push
jl
scas
inc
retf
fild
into
jae
mov
cdq
ds
fidiv
sahf
enter
mov
inc
clc
or
and
inc
cmc
jmp
inc
mov
push
jmp
je
ror
pop
iret
call
inc
sub
mov
jns
fsubr
bound
(bad)
lods
add
repz
or
aam
into
pop
scas
add
push
cli
out
clc
(bad)
loope
sbb
aaa
mov
sbb
mov
mov
add
les
ins
cmps
sbb
or
adc
and
mov
stos
in
out
xor
cmp
icebp
pop
pop
adc
pop
mov
sti
jo
and
leave
cmps
push
jno
xchg
outs
adc
cwde
retf
fiadd
mov
dec
pop
inc
cs
pop
xor
push
test
int3
pusha
leave
inc
lods
jmp
lock
pop
and
in
loop
test
xor
sub
(bad)
and
mov
jle
xchg
popa
cmp
das
cmp
inc
pop
jg
cmp
je
dec
das
ss
repnz
mov
aaa
repz
or
fisttp
loopne
rol
sbb
dec
pop
lea
pop
inc
je
scas
or
mov
mov
mov
and
cdq
inc
ficomp
dec
adc
sbb
aam
pop
int
mov
push
add
xchg
mov
sbb
xor
cmp
leave
xchg
push
push
add
enter
pop
mov
rcl
jg
bound
mov
call
enter
adc
jb
js
or
mov
jo
sub
add
popf
mov
add
test
adc
aam
dec
cmp
and
sbb
add
in
shr
pop
popa
mov
and
mov
cli
mul
mov
mov
scas
and
pop
mov
mov
xchg
jle
or
fwait
dec
mov
bound
and
stos
and
repz
cmp
add
mov
cmp
fild
or
sbb
int3
mov
cmp
aaa
ins
cmps
outs
cmp
dec
jno
call
adc
cmp
test
fidivr
mov
leave
or
repz
movs
outs
jbe
fsubr
dec
(bad)
mov
cwde
jmp
nop
lock
js
inc
push
ins
mov
push
push
pop
cli
(bad)
jno
rcr
inc
retf
inc
stos
xchg
outs
int3
ins
jbe
mov
fdiv
test
dec
cvtdq2ps
cmp
out
xor
jbe
add
push
or
mov
jbe
adc
and
xor
add
fidiv
ss
pop
xor
idiv
repnz
cmp
into
jmp
push
push
adc
out
gs
fabs
sub
adc
fidiv
sub
jecxz
fsubr
fst
mov
jecxz
and
pop
ja
fild
retf
push
adc
push
and
mov
mov
dec
or
xchg
sbb
jmp
push
lahf
mov
aaa
in
(bad)
shr
jp
xlat
jecxz
nop
jle
add
xor
fs
out
dec
dec
jge
xchg
ret
into
and
and
xor
lds
enter
(bad)
inc
pop
and
cs
ss
int3
push
mov
ror
leave
dec
push
lods
jae
add
jb
jb
rol
rcr
xchg
mov
cmp
loop
lds
sbb
(bad)
(bad)
out
sbb
dec
jg
sub
scas
mov
sbb
shr
loope
xchg
outs
cwde
fisub
jmp
nop
(bad)
inc
push
push
xor
cmp
int3
ret
(bad)
lock
daa
and
jmp
sbb
or
push
jae
xchg
fdiv
or
jnp
jbe
sub
or
lods
dec
mov
retf
or
je
add
jnp
pop
sbb
mov
mov
fbld
or
fstp
sar
aas
jp
jae
and
inc
xchg
or
arpl
xchg
or
leave
xchg
pop
daa
enter
repnz
fnstsw
pop
add
fwait
jo
and
in
in
jg
mov
outs
imul
(bad)
(bad)
sbb
mov
xchg
cmp
cwde
scas
or
jne
addr16
rcr
fs
sub
mov
and
lea
or
je
mov
call
sbb
sbb
inc
shr
cld
xchg
xor
lahf
adc
xor
fiadd
test
push
mov
adc
cmp
fisubr
test
sub
add
jbe
outs
mov
or
daa
mov
push
mov
jns
mov
mov
xlat
mov
add
xor
mov
fs
imul
imul
popa
pop
(bad)
mov
shl
add
sbb
(bad)
dec
jmp
sub
mov
sbb
pop
lea
jno
xchg
gs
shl
inc
fs
xor
pusha
into
dec
mov
xchg
lahf
inc
inc
shl
inc
and
push
repnz
mov
xlat
mov
push
pop
mov
imul
sub
pop
inc
xchg
mov
xchg
mov
fwait
mov
dec
inc
(bad)
fs
data16
push
adc
adc
sbb
loopne
pop
fdiv
shl
inc
nop
push
or
lea
fst
pop
mov
test
xor
enter
inc
imul
jecxz
div
pop
mov
scas
rcr
clc
pop
into
and
inc
out
pop
lods
in
arpl
test
dec
div
mov
bound
jo
ins
jmp
outs
lods
sub
dec
test
xchg
test
(bad)
in
dec
rol
test
push
aas
out
push
pop
loope
inc
arpl
xor
or
mov
mov
outs
inc
das
xor
mov
test
mov
icebp
mov
and
sahf
dec
(bad)
push
ja
icebp
repz
mov
repz
lock
(bad)
push
xor
xchg
aam
scas
ret
imul
jge
fnstsw
push
push
test
inc
xchg
mov
push
addr16
call
pop
mov
push
in
xor
adc
jae
push
push
xchg
sbb
int3
mov
mov
fwait
pop
cmps
mov
adc
pop
sti
ret
xor
imul
add
pop
mov
xchg
push
imul
scas
sbb
arpl
outs
inc
fmul
ds
lahf
mov
call
xor
fwait
popf
pop
push
popf
adc
aas
popf
jmp
ret
(bad)
in
cmp
lods
rep
jns
lds
mov
sub
add
ret
pop
je
int3
fsubr
mov
jno
shl
(bad)
inc
push
(bad)
(bad)
mov
or
lock
xlat
or
dec
xchg
movs
fst
cli
mov
mov
sahf
ds
sbb
scas
nop
inc
xor
jecxz
stc
rcr
popa
(bad)
test
xchg
fcompp
test
enter
dec
(bad)
dec
hlt
xchg
add
sbb
cwde
(bad)
out
inc
dec
sbb
(bad)
retf
push
daa
mov
mov
xor
daa
dec
add
jne
movs
adc
jge
mov
mov
jp
mov
loop
pop
jmp
and
shl
sbb
fist
push
cwde
daa
fadd
fnsave
xchg
stos
retf
lea
add
xchg
(bad)
sahf
sti
adc
add
add
stc
movs
outs
imul
and
mov
aas
sub
lock
mov
inc
enter
pushf
jmp
pop
and
cmps
sub
not
adc
xchg
mul
(bad)
cs
jnp
mov
xchg
mov
adc
jge
push
and
cmp
add
imul
ret
mov
mov
mov
push
or
jp
(bad)
in
pop
pop
js
xchg
and
sbb
inc
push
mov
fldenv
mov
and
push
fisub
push
(bad)
shr
pop
call
cmp
cld
inc
(bad)
dec
movs
adc
and
mov
sub
stos
sbb
and
mov
jmp
xor
loopne
dec
pop
jb
dec
cli
test
in
cmp
mov
ss
or
xor
fbstp
pushf
or
cmc
mov
pusha
pop
test
fs
cli
xchg
into
scas
jp
call
imul
retf
sub
inc
cld
ja
stc
xor
mov
xor
or
ret
add
cmp
jmp
pop
sahf
or
out
cmp
mov
push
jae
push
push
xor
add
or
inc
test
mov
sbb
(bad)
popa
fwait
mov
shl
mov
or
cmp
adc
ret
pop
mov
xor
lahf
pop
cwde
je
enter
fisttp
mov
jno
in
out
push
inc
inc
ins
mov
or
xchg
jle
adc
call
xchg
das
mov
dec
jecxz
sbb
mov
hlt
ins
dec
hlt
cmps
add
loope
lea
xor
js
dec
(bad)
adc
pop
push
stos
ss
jg
fnstsw
push
xor
(bad)
das
into
loopne
pop
cmp
adc
cmp
sbb
add
xchg
(bad)
(bad)
hlt
cmp
dec
popa
mov
xchg
ret
inc
loop
jb
cwde
pop
retf
arpl
push
push
mov
dec
and
(bad)
rcr
ins
or
(bad)
call
frstor
and
mov
xor
clc
and
mov
sub
or
or
xchg
jmp
ret
add
sub
sub
sbb
sahf
cdq
mul
xor
pushf
call
loope
ins
add
lods
popf
cmps
das
icebp
pop
xchg
mov
dec
dec
fbld
in
mov
(bad)
std
sub
jbe
cmp
arpl
mov
mov
adc
mov
movs
adc
dec
sub
jmp
or
jno
stc
add
(bad)
out
shl
mov
xchg
pop
mov
shr
add
xchg
jmp
aaa
and
mov
add
xchg
jmp
loop
push
add
cld
add
add
dec
jo
xchg
hlt
and
and
sub
inc
and
cmps
sub
fnsave
xchg
and
add
rcr
add
loope
cmp
xlat
call
sbb
cld
xor
fadd
pop
fmul
dec
pop
sub
mov
or
shr
test
pop
dec
dec
pop
fcomp
pop
mov
sub
sub
push
xchg
mov
data16
mov
or
pop
mov
shl
xchg
xor
lock
enter
xchg
movs
add
jmp
xchg
stc
popa
mov
or
jmp
ins
xchg
jne
pop
retf
ret
jg
inc
xchg
adc
pusha
pop
out
das
dec
adc
fimul
mov
mov
scas
pop
test
popf
ds
push
in
out
sub
(bad)
shl
shl
xor
jae
mov
and
mov
mov
mov
leave
mov
push
inc
mov
jmp
sub
push
cmp
dec
mov
stos
aam
and
add
sub
mov
jmp
mov
mov
dec
nop
fmul
add
mov
icebp
xchg
scas
test
out
ins
cmc
or
dec
cli
pusha
fwait
inc
mov
stos
sub
pop
lahf
add
mov
cmp
sub
cld
jbe
push
nop
add
push
jge
mov
shl
and
leave
or
inc
cmp
adc
inc
retf
ret
loope
test
jl
cmp
push
dec
div
not
and
(bad)
push
fs
call
sbb
ss
fld
and
aaa
gs
loop
(bad)
push
dec
xchg
mov
xlat
xchg
dec
jno
mov
js
adc
shl
repnz
cmp
enter
shl
aam
add
sub
mov
sub
inc
push
lock
push
mov
pop
es
xchg
push
movs
cdq
mov
nop
mov
cwde
imul
mov
cmp
xor
mov
shr
fld
lods
jl
fsubr
mov
sub
ret
retf
jb
imul
xchg
mov
aas
enter
ret
and
cli
repnz
mov
imul
idiv
jmp
push
add
jge
pop
shl
(bad)
xlat
mov
push
loope
xchg
push
mov
mov
push
je
nop
shl
aad
hlt
pushf
adc
pop
outs
mov
add
xor
pusha
xor
mov
mov
icebp
jbe
xchg
mov
pop
(bad)
jmp
das
(bad)
daa
mov
jno
mov
and
sar
or
stos
inc
mov
imul
mov
ret
fs
dec
push
iret
mov
mov
dec
adc
fisttp
loope
mov
repz
ins
das
fidivr
pusha
xchg
mov
outs
neg
jno
xor
xchg
sbb
js
jl
xchg
push
out
in
fst
and
(bad)
xchg
jp
pushf
jecxz
add
pop
imul
retf
pusha
mov
cmp
mov
dec
adc
mov
cwde
sub
(bad)
cli
sub
jle
add
(bad)
aaa
cmp
in
dec
and
jmp
mov
add
aad
loopne
(bad)
rol
jmp
ss
jno
push
mov
test
cmp
mov
mov
test
ins
js
jnp
mov
inc
hlt
or
jbe
std
push
out
dec
add
jle
xchg
lock
test
pushf
push
js
push
dec
jp
jns
mov
repz
shl
xor
or
or
jno
mov
sbb
cmp
mov
adc
fdivr
jmp
das
call
xor
(bad)
jb
add
cmp
les
cmp
mov
mov
pop
inc
push
mov
lods
jo
das
je
fld
add
cwde
sbb
mov
sbb
out
pop
jmp
sub
mov
imul
sahf
out
adc
loopne
call
push
pop
outs
repnz
std
mov
sub
add
and
jns
xchg
mov
sbb
stos
xchg
push
push
out
sti
call
loop
cmp
inc
mov
call
mov
mov
test
dec
mov
out
cmc
pop
ins
stc
das
push
cmp
int
xor
ror
mov
outs
mov
and
push
leave
cli
sbb
fstp
aad
and
test
retf
jle
rcl
sahf
hlt
in
lea
call
retf
movs
inc
and
add
lock
push
cmp
xchg
in
sub
enter
push
jge
aaa
mov
je
mov
sbb
jecxz
mov
jo
cmp
mov
and
mov
paddsw
pop
loope
in
pop
mov
test
pushf
fstp
pop
out
jle
gs
pop
ins
xor
add
pandn
xor
shl
mov
mov
jmp
sub
mov
pop
add
sub
aam
xchg
inc
adc
mov
mov
jb
scas
push
arpl
stos
sar
fld
std
imul
jmp
xchg
shl
fnstsw
add
push
pop
xchg
mov
cmp
(bad)
je
inc
mov
push
adc
pop
xchg
xchg
xchg
fisub
or
call
dec
mov
mov
and
cdq
imul
ret
cmp
shl
dec
bound
xchg
movs
test
fisub
xchg
cmc
cmps
jecxz
(bad)
jne
push
pop
fdivr
ins
fldln2
cmps
push
in
sbb
pushf
mov
inc
rcl
call
push
mov
scas
(bad)
stc
inc
retf
jecxz
adc
mov
retf
mov
clc
cmp
test
call
dec
xchg
adc
xor
xchg
jmp
push
idiv
stc
dec
cmps
xchg
lods
jo
xor
aad
div
mov
pop
int3
pushf
mov
ss
cmc
ret
push
or
daa
add
rol
dec
inc
mov
aad
inc
call
ds
mov
or
cmp
repnz
sub
and
daa
xchg
out
mov
jo
movs
dec
xor
loop
mov
cmp
dec
mov
sub
data16
popf
pusha
stc
add
add
les
mov
pop
dec
mov
add
dec
enter
call
cmp
movs
loope
mov
pusha
cmp
adc
xchg
xchg
push
mov
jmp
pop
mov
stos
int3
aam
shl
and
imul
imul
sub
add
push
(bad)
jns
dec
add
fbld
icebp
sub
fcmovb
pop
sub
jmp
aam
push
into
jp
jmp
cdq
sbb
pop
xor
stos
enter
adc
pop
inc
scas
jae
dec
mov
cli
xchg
dec
jnp
dec
mov
(bad)
lods
fdiv
jle
xchg
push
pop
dec
xor
adc
mov
neg
pushf
or
mov
imul
scas
sahf
nop
pop
(bad)
and
dec
cwde
dec
mov
pushf
jmp
outs
aad
(bad)
inc
inc
ret
adc
mov
sbb
stos
fs
mov
xchg
aas
mov
inc
adc
mov
rol
adc
daa
ret
shl
cmps
add
in
sub
adc
es
out
retf
inc
xor
iret
aas
pop
dec
movs
mov
dec
or
adc
and
cmps
add
loope
mov
dec
lock
or
mov
cmp
aas
sub
mov
stos
add
dec
ror
or
loop
lahf
js
jle
sbb
sbb
mov
(bad)
xlat
dec
dec
mov
dec
xchg
push
(bad)
and
push
xchg
fbld
or
(bad)
sahf
xchg
xor
xchg
push
out
mov
xor
and
mov
test
cmp
cmp
sub
outs
test
sbb
movntps
call
call
jge
call
movs
imul
mov
jno
pop
cmps
pop
cmp
add
sbb
mov
outs
inc
test
cs
mov
inc
jg
sbb
ret
loope
mov
fwait
mov
adc
xor
or
mov
inc
sub
xchg
int3
lahf
repnz
and
xchg
int
stos
movs
xchg
cld
aad
pop
aas
clc
jmp
jg
repnz
adc
xchg
loope
inc
cdq
mov
call
not
jo
mov
fmul
imul
pop
sahf
lods
adc
cmp
loop
inc
test
std
sub
mov
xchg
sub
imul
cmp
mul
test
xchg
and
fnstsw
jl
mov
test
xchg
(bad)
mov
push
mov
jne
jbe
pop
iret
icebp
sbb
xchg
jle
xchg
mov
(bad)
fistp
lods
imul
imul
out
mov
ja
or
push
test
push
xchg
mov
rcl
aas
addr16
call
xchg
andps
push
repz
lods
or
push
sbb
iret
sbb
stc
pop
sub
daa
xchg
xor
adc
pop
cmps
cmps
sub
xchg
xchg
outs
xlat
xor
inc
lds
hlt
mov
cmps
imul
or
stc
stos
and
inc
dec
mov
or
sub
sub
lock
dec
fild
ficomp
mov
inc
add
mov
mov
retf
dec
lods
ss
add
aad
cli
aam
(bad)
pop
push
xor
fstp
in
pop
inc
arpl
and
push
(bad)
mov
iret
push
outs
xchg
or
dec
cwde
adc
shl
leave
dec
cli
test
cmp
stc
xchg
or
gs
push
mov
and
jne
xor
call
ins
jge
xor
add
push
sub
pusha
mov
xchg
aam
daa
and
bound
dec
imul
movs
xchg
sbb
in
stos
sbb
xchg
jge
out
loope
inc
in
jnp
mov
sbb
dec
ret
sbb
stos
inc
cmp
cwde
pop
pop
int3
das
test
cdq
ins
inc
fcomp
addr16
jp
sar
xor
ss
out
popf
movs
out
aaa
push
dec
test
fdiv
scas
xor
push
pop
(bad)
shr
xlat
aas
gs
pop
(bad)
fstp
int
push
or
aam
cld
mov
pop
mov
xchg
(bad)
in
test
dec
aam
loop
mov
xor
hlt
lods
push
test
cmp
cmp
push
dec
out
adc
add
imul
add
adc
mov
cmp
lods
push
movs
mov
mov
dec
mov
ins
ret
mov
aaa
pop
sub
xor
out
loop
mov
sbb
jns
mov
mov
arpl
pop
mov
xor
adc
sahf
cmps
mov
xchg
jnp
xor
pop
dec
fwait
jg
cmp
cli
cmps
or
cmc
enter
cwde
mov
push
js
(bad)
fsubr
pop
cmc
push
cmp
or
call
lods
loope
mov
lds
mov
fnstsw
add
pop
adc
dec
sti
and
jae
cmps
jl
repz
cli
or
mov
adc
movs
(bad)
leave
fwait
add
mov
scas
ja
push
mov
fidiv
cmp
clc
xchg
adc
adc
jl
fmul
jmp
pop
in
dec
pop
cmps
gs
adc
nop
adc
xor
xchg
into
cmp
movs
loopne
je
into
loopne
mov
sub
xchg
cwde
in
std
pop
inc
sbb
ss
daa
je
xor
mov
mov
jno
sbb
xchg
and
jg
je
arpl
retf
pop
mov
fisubr
int3
jae
xchg
outs
adc
inc
mov
jo
rcr
test
cwde
imul
mov
jmp
jo
pop
stos
add
popa
sub
pop
sub
leave
imul
dec
and
popa
mov
dec
out
pop
repz
xchg
outs
addr16
xchg
xchg
cld
stc
cmp
movs
mov
and
pop
sub
pop
inc
jge
data16
into
or
push
push
ret
mov
mov
cmp
cdq
out
mov
outs
xor
xchg
xchg
ja
mov
mov
rcl
nop
or
pop
xchg
out
ins
inc
cmp
inc
mov
fcmovb
push
or
sti
cli
sub
xor
in
or
fs
enter
dec
or
pop
jmp
fs
sbb
lock
xlat
xchg
mov
mov
or
ins
call
sbb
(bad)
in
lds
movs
add
enter
mov
or
mov
xor
sub
out
or
and
fidivr
imul
add
js
test
leave
push
cs
inc
fmul
sahf
mov
aad
jne
adc
mov
adc
inc
test
into
jne
shr
mov
inc
fs
in
ins
cmps
fs
mov
aam
popf
inc
push
pop
push
mov
cmp
mov
cmps
movs
mov
add
mov
clc
jae
fstp
mov
fist
push
movs
movq
dec
pop
cmp
test
push
mov
in
in
out
or
das
fild
inc
push
in
ret
cs
lods
mov
daa
imul
lock
ror
or
and
xor
fstp
dec
test
cmp
pusha
adc
cmp
(bad)
stc
mov
int
cmp
pop
push
dec
xor
jo
(bad)
cld
pop
test
rol
cmps
jg
mov
push
jno
popa
mov
and
push
fwait
sub
cld
js
jb
mov
add
xchg
outs
inc
dec
sub
inc
neg
jecxz
jo
cmp
jle
scas
and
call
test
push
sbb
fstp
mov
sub
push
frstor
call
inc
cld
mov
bnd
loope
aam
mov
inc
adc
shl
xor
nop
xchg
mov
repz
mov
adc
stc
push
push
ins
jmp
or
mov
sub
pop
sbb
adc
ja
mov
jg
or
js
and
mov
stos
jmp
xlat
inc
nop
jecxz
int3
fxch
add
mov
(bad)
and
in
cmp
imul
cli
js
mov
mov
push
fs
scas
pop
mov
fs
push
xor
adc
adc
test
mov
mov
or
(bad)
push
pop
sub
js
jg
xor
cli
add
in
arpl
jbe
pop
addr16
jmp
fstp
(bad)
stc
pop
cmc
ins
dec
outs
sbb
outs
inc
push
mov
sub
sub
xlat
call
inc
pop
cmp
std
(bad)
add
xchg
mov
mov
popa
shl
mov
push
les
repnz
out
xor
mov
ds
retf
dec
inc
jl
test
jmp
adc
pop
(bad)
push
add
or
clc
stos
mov
lods
jnp
popa
xor
ds
ins
inc
fdivp
jge
movs
cli
mov
xlat
cmp
mov
fstp
or
adc
stos
inc
scas
mov
les
add
dec
sbb
xchg
popa
lods
jp
xchg
jne
ja
sub
cmp
(bad)
js
cmp
test
push
add
dec
add
repz
or
or
push
popa
(bad)
mov
int
sub
mov
ret
jne
jno
mov
push
sti
push
les
fidiv
push
ret
imul
fidivr
sub
mul
nop
or
mov
mov
or
sub
xchg
in
mov
lods
mov
mov
jl
sub
jle
or
dec
movs
addr16
dec
xor
or
retf
xchg
push
js
jnp
and
fist
or
inc
xchg
call
retf
movs
dec
jge
add
aaa
fcmovne
xchg
push
cmp
shl
ja
pop
inc
mov
out
and
fisub
lahf
movs
mov
les
ret
xchg
push
dec
jo
movzx
outs
cmps
adc
adc
mov
cmp
stc
out
jbe
fcom
mov
(bad)
cmc
fs
add
mov
sub
addr16
xchg
add
push
or
stos
ins
stos
push
adc
xchg
out
cs
loopne
dec
xor
jo
push
rcl
jno
int3
and
jo
dec
and
mov
sbb
mov
mov
ret
dec
pop
sbb
nop
jl
scas
pop
sub
cwde
imul
push
cmp
int3
or
dec
xor
mov
aam
and
add
sbb
das
mov
inc
fdivr
xor
sub
hlt
shl
xchg
xchg
push
or
and
add
faddp
in
clc
lock
test
adc
push
jae
enter
mov
mov
inc
xchg
and
fs
repnz
xchg
and
dec
repz
in
push
or
imul
push
popf
mov
adc
icebp
adc
jmp
xchg
xor
(bad)
cli
(bad)
stos
sub
xor
cmp
pushf
div
mov
test
mov
adc
dec
dec
gs
shr
mov
adc
cmp
repz
call
sub
pop
pop
ret
scas
sbb
mov
sbb
fidiv
mov
cmp
xchg
js
mov
xor
test
xor
jmp
call
inc
sbb
add
dec
xchg
push
cld
add
jns
adc
fnstenv
shl
outs
shl
int
sbb
push
std
cmp
pop
inc
and
test
xor
or
lods
push
and
outs
dec
xor
xor
jae
lods
stos
ja
aas
mov
mov
mov
or
cs
mov
xchg
xor
xchg
xchg
jns
repnz
scas
jne
pushf
push
or
jle
inc
and
add
sbb
xor
add
push
jp
adc
mul
push
sbb
ror
cmp
out
stos
mov
dec
inc
data16
mov
dec
fisttp
cwde
mov
pusha
shr
in
lahf
add
pusha
clc
jmp
adc
scas
add
ja
mov
jb
dec
loop
cli
arpl
mov
and
ret
mov
das
sbb
sbb
rol
jno
repnz
push
movs
add
lea
(bad)
adc
retf
popf
jle
stos
cmp
fs
movs
push
add
push
xor
push
xor
cld
stos
stos
add
sbb
sbb
jp
ficom
clc
adc
pop
iret
ds
popf
xchg
mov
mov
or
sbb
sub
inc
mov
add
add
popf
mov
jbe
or
(bad)
(bad)
call
pop
iret
mov
dec
ret
loop
mov
jge
out
in
je
sbb
jecxz
test
xor
dec
mov
cmp
cli
fnsave
adc
imul
jmp
push
daa
push
fistp
xor
jge
aaa
fild
sub
xchg
dec
jecxz
cmp
dec
mul
mov
xor
test
popf
cdq
dec
arpl
jnp
into
nop
cmp
sar
mov
jo
dec
mov
jno
fist
cmp
popfw
(bad)
push
sbb
mov
sahf
sbb
shl
xchg
imul
(bad)
movs
jo
popf
mov
repz
xchg
xchg
dec
loope
sar
data16
and
sbb
push
inc
sbb
adc
sbb
push
mov
mov
xchg
(bad)
cdq
xchg
mov
das
std
(bad)
shl
aaa
sub
mov
je
les
aam
and
aas
imul
jae
aaa
outs
ret
(bad)
imul
mov
and
and
mov
jecxz
push
cdq
dec
push
fs
dec
mov
out
adc
shl
cdq
jo
int
mov
mov
add
out
stc
test
sahf
xchg
cmps
cli
push
stos
pop
lods
xlat
pop
jae
mov
mov
cwde
test
mov
(bad)
in
stos
inc
rcl
push
mov
sub
mov
lds
push
rcl
test
int
add
cs
and
pavgw
or
lods
repz
mov
and
test
adc
xor
jge
loope
fisttp
mov
mov
aad
leave
xor
out
push
call
jbe
retf
sub
ja
mov
sbb
mov
and
dec
mov
movs
rcl
xchg
pop
and
sbb
dec
out
mov
rcr
sti
icebp
outs
mov
(bad)
mov
sar
loopne
(bad)
pop
movs
sbb
jmp
(bad)
mov
mov
repz
jecxz
fxch
mov
test
stos
mov
jbe
xchg
mov
sti
mov
cmp
(bad)
sahf
cld
sub
ret
test
xchg
push
add
les
and
fcomp
jno
lea
cmp
fbld
mov
mov
stos
or
xchg
jne
sbb
sahf
lea
inc
stos
retf
imul
push
add
js
pop
add
dec
add
stos
scas
sbb
cmp
xor
push
or
inc
shl
add
mov
xchg
sub
add
cmc
sub
lock
push
add
mov
sub
push
out
int
call
lahf
sbb
pop
mov
loop
pop
or
xchg
mov
shl
loopne
or
pop
sub
jo
pop
mov
lahf
pop
inc
push
pop
jo
cmc
sbb
mov
mov
sbb
cdq
sub
pop
pop
outs
add
fdivr
out
mov
xor
mov
jns
enter
inc
mov
test
jg
jbe
stc
out
xchg
push
test
fnstcw
jl
mov
sar
in
push
sbb
into
push
xchg
inc
ins
adc
call
clc
inc
pop
jno
in
cmp
inc
jg
push
add
push
pop
sbb
outs
pop
popa
fisttp
fst
adc
ss
fcom
lahf
sbb
adc
sub
in
inc
int3
xchg
push
stos
pusha
cwde
shr
mov
je
pushf
xor
fsubrp
lods
sbb
lods
pop
into
pusha
imul
jge
xor
add
stc
out
bound
dec
dec
imul
ss
mov
jl
lock
aaa
int3
pop
in
push
or
xchg
pop
test
into
sub
stos
out
stc
into
mov
aas
push
cmps
cmp
ja
dec
adc
or
out
nop
mov
xlat
(bad)
sbb
xor
push
aaa
xor
addr16
push
cld
add
mov
push
mov
dec
push
repz
mov
in
(bad)
(bad)
mov
lock
pop
mov
clc
adc
inc
dec
cs
scas
ins
call
mov
jp
nop
inc
mov
cld
or
in
leave
(bad)
inc
(bad)
cld
and
rol
adc
inc
mov
icebp
test
jmp
stc
iret
popa
pop
jnp
sbb
mov
daa
in
and
fadd
into
in
daa
push
outs
xchg
or
mov
push
mov
leave
mov
pop
or
dec
inc
into
mov
ffreep
movs
dec
push
lahf
scas
outs
leave
lods
data16
pop
jae
aad
mov
fsub
xchg
xor
xor
jns
imul
cmp
mov
xor
inc
adc
pop
fidivr
popf
adc
mov
mov
mov
int3
sahf
rol
fdivr
lahf
pop
mov
mov
xchg
imul
sub
adc
test
mov
cmc
xor
es
pop
(bad)
out
jmp
into
hlt
mov
xchg
int3
mov
cmp
outs
cld
aas
test
js
push
inc
cmp
or
out
sub
movsx
adc
sub
mov
add
and
loope
ffree
test
les
add
sbb
outs
fld
mov
push
add
jns
cmp
push
mov
fst
push
arpl
inc
adc
xchg
adc
(bad)
lock
and
inc
sar
xor
xchg
retf
or
mov
neg
stos
xchg
adc
jae
jo
pop
jge
(bad)
loope
jns
(bad)
dec
fisub
outs
in
(bad)
fist
pop
dec
jnp
xor
call
imul
mov
mov
pop
jmp
in
or
push
sahf
lea
aad
fsub
lock
fsubr
repz
mov
mov
pop
xchg
jmp
test
out
push
sub
jecxz
(bad)
push
loop
cmps
dec
arpl
xor
data16
inc
and
mov
cmps
mov
sub
ficomp
xor
mov
ss
pusha
dec
cmc
mov
sbb
les
imul
jg
cmp
push
mov
fstp
cli
shl
fsubr
cmp
retf
adc
mov
mov
cmp
stc
outs
xor
push
adc
test
rol
shr
xor
add
stos
sti
retf
addr16
cwde
test
cmps
add
push
jns
pop
add
cli
div
xor
xor
inc
out
and
aaa
mov
into
loopne
sub
shl
xor
sbb
cwde
arpl
movs
and
mov
mov
lods
xlat
pop
push
adc
cmp
inc
iret
test
push
retf
mul
mov
mov
jmp
sub
pop
add
cmp
lea
jmp
out
xchg
out
mov
sbb
add
xor
fst
mov
fst
sub
inc
mov
aad
dec
fwait
xchg
fild
repz
push
rcr
mov
test
enter
push
or
push
add
cmp
inc
pop
mov
retf
add
mov
dec
(bad)
xor
inc
out
cdq
pushf
pop
movs
(bad)
mov
add
jns
gs
scas
imul
xchg
mov
loopne
retf
inc
mov
pop
retf
daa
mov
das
xchg
ja
mov
lock
cmps
xchg
in
in
call
sub
mov
mov
xchg
mov
es
loop
addr16
test
(bad)
(bad)
icebp
or
mov
lds
fs
lods
lods
rol
mov
push
imul
sbb
call
ja
mov
int
sbb
nop
test
cmp
jecxz
inc
out
xlat
sub
fcom
jo
mul
aam
lahf
jmp
or
retf
mov
mov
jne
outs
and
pop
mov
retf
pop
push
jae
push
inc
pop
dec
movs
aam
cdq
in
jmp
sahf
xchg
mov
test
jno
stos
xor
mov
retf
inc
mov
mov
xchg
push
mov
lods
inc
and
pop
popf
repnz
in
or
mov
mov
and
das
add
movs
jecxz
in
fisttp
jns
mov
and
mov
mov
ror
inc
jecxz
mov
inc
or
ret
scas
sbb
dec
mov
xor
xor
test
mov
inc
rsm
push
inc
sub
push
inc
sets
cld
mov
dec
(bad)
retf
aam
iret
aas
adc
stos
sub
mov
int3
or
inc
push
adc
sub
(bad)
mov
xor
mov
cmp
cmp
out
test
mov
jno
(bad)
adc
jmp
xchg
stos
enter
sub
ss
sbb
mov
inc
or
sub
cmp
leave
ret
xor
cmp
cli
(bad)
stos
dec
push
pop
out
pushf
daa
jp
out
retf
push
mov
cwde
inc
fist
sub
popf
daa
in
mov
(bad)
iret
retf
addr16
call
rcl
(bad)
shl
out
retf
idiv
pop
push
mov
inc
movs
test
mov
mov
jle
aas
retf
push
jo
jecxz
daa
add
sbb
dec
psraw
inc
jmp
jmp
arpl
add
mov
sub
push
pop
add
push
retf
(bad)
out
xchg
sub
cwde
lock
xor
(bad)
cdq
ror
pop
mov
or
movs
xor
cmc
xchg
shr
sbb
(bad)
or
sbb
dec
xchg
div
sbb
sbb
fld
outs
push
outs
cld
jno
rol
aam
addr16
xchg
jno
shr
sub
loop
sub
rcr
and
rol
fistp
add
cmp
lods
lahf
jae
daa
iret
pop
mov
mov
inc
xchg
xchg
push
data16
push
jnp
fxam
jecxz
call
push
cld
jnp
cmps
movs
out
push
pop
bound
leave
dec
jmp
bound
jbe
push
int3
lahf
or
inc
sub
aam
sbb
dec
std
cmps
dec
lea
stc
stc
clc
mov
lods
or
cld
lods
iret
lea
mov
test
ds
loope
jae
mov
in
sbb
adc
jecxz
adc
ins
stc
je
push
jae
or
inc
mov
inc
pop
cmp
in
stc
sub
add
pop
fwait
rol
jmp
pop
stos
mov
sub
test
sub
ret
out
xchg
(bad)
sahf
jnp
fidiv
dec
js
int
in
jl
inc
pop
sub
adc
xor
adc
pop
fld
retf
fadd
movs
(bad)
in
in
sbb
push
mov
mov
fst
(bad)
clc
call
sbb
and
out
jmp
adc
push
adc
aad
xchg
xchg
push
mov
mov
xchg
icebp
xchg
or
scas
dec
cmp
sub
arpl
bound
inc
xchg
scas
xchg
push
mov
sub
scas
in
fwait
lock
pop
or
movs
mov
inc
and
cmp
dec
stos
enter
dec
jl
fs
pop
mov
xor
or
xor
scas
and
mov
xchg
mov
nop
std
imul
mov
ss
jge
clc
sar
adc
jl
bound
imul
pop
int
aas
and
cmp
or
scas
jbe
push
cmp
mov
jns
jo
inc
sahf
xchg
or
or
loope
sub
and
outs
test
fnstcw
mov
ja
fidiv
or
clc
iret
dec
mov
mov
dec
jno
xchg
out
jl
mov
lds
call
cld
aaa
dec
push
jo
cmc
out
mov
push
pop
(bad)
sar
mov
out
mov
cmps
ins
cld
jns
fwait
shl
mov
retf
in
daa
or
mov
cmp
icebp
stc
mov
les
popf
cwde
mov
mov
pop
fisubr
scas
or
add
inc
mov
mov
cmp
and
dec
mov
repnz
jmp
cmp
xchg
bound
(bad)
jmp
pop
mov
mov
ret
inc
cmp
in
push
xchg
fwait
or
(bad)
out
aas
sub
pop
and
lods
int3
push
out
js
xor
push
pop
jne
inc
addr16
repnz
xor
inc
xchg
aad
neg
add
pop
cli
in
mov
mov
cmps
mov
daa
aas
cli
xchg
and
movs
jge
dec
xor
mov
add
es
mov
std
sub
sub
and
mov
outs
mov
sbb
fnstenv
pop
jns
dec
xor
cmp
fidiv
enter
fs
test
cmp
mov
test
popa
out
xor
cmp
aad
cmps
cld
out
and
aad
movs
push
jns
pop
popf
rcl
mov
dec
in
jecxz
lods
imul
xor
mov
mov
imul
call
in
jp
mov
cmp
dec
aas
fstp
sbb
(bad)
stc
inc
addr16
jl
repz
daa
cmp
ins
xchg
test
sbb
in
cwde
xchg
ror
or
into
hlt
enter
rol
sti
inc
aad
lods
cmp
mov
dec
jmp
or
inc
pusha
(bad)
sub
mov
(bad)
fucomip
mov
imul
jb
cs
and
fwait
inc
cmp
push
push
sub
cmps
or
mov
and
movs
mov
jnp
push
movs
lds
fisub
shr
std
cmps
mov
xor
jge
sbb
rcr
(bad)
adc
jae
dec
inc
mov
pop
jg
and
pop
xchg
dec
dec
cmp
jge
hlt
jge
ja
sbb
mov
test
sbb
push
xor
push
xchg
outs
xor
gs
mov
aam
int
gs
out
jae
jne
int
or
out
xor
popa
mov
cdq
test
int
adc
je
movs
popf
leave
aam
inc
shr
call
mov
lods
scas
into
(bad)
hlt
ret
and
mov
xor
sub
dec
inc
lahf
pop
push
into
jo
and
add
push
sbb
(bad)
das
mov
repnz
fst
out
dec
jno
dec
pop
mov
push
xor
(bad)
stc
inc
(bad)
cld
push
inc
adc
jmp
bound
pop
mov
movs
(bad)
call
and
add
leave
movzx
pop
sub
or
addr16
out
xchg
add
inc
into
outs
push
mov
sub
(bad)
gs
je
and
jmp
push
mov
add
pop
ss
dec
loope
andps
xor
sub
mov
imul
int3
shr
xor
in
mov
sub
aad
adc
leave
push
iret
into
adc
sbb
xchg
mov
xor
mov
sbb
mov
mov
mov
and
iret
sar
and
inc
loop
push
xor
inc
js
mov
jne
pop
xor
aam
fwait
xor
jne
cmp
test
fmul
mov
ins
cmps
adc
sub
enter
push
pop
ins
push
or
repnz
inc
ins
int
mov
pushf
xor
push
push
mov
les
and
mov
mov
mov
dec
xlat
dec
pop
repnz
adc
repnz
and
imul
jo
ds
push
cmp
adc
call
clc
jns
push
lock
inc
push
int3
loopne
mov
daa
add
adc
xchg
cmp
dec
ins
sbb
out
adc
rol
(bad)
int
or
xchg
sbb
jmp
jo
aaa
jne
xchg
jnp
cmp
ins
jns
mov
xchg
xor
mov
sub
add
adc
push
loop
pushf
jecxz
adc
jb
jle
push
sub
cli
imul
and
xlat
or
jo
outs
sahf
in
repnz
mov
jmp
push
stos
mov
sub
sahf
std
add
bound
push
clc
jnp
xor
clc
jnp
mov
rcr
or
adc
scas
push
loop
jl
sldt
push
mov
mov
out
daa
ins
movs
scas
js
fdiv
lock
jecxz
outs
push
pop
es
jl
mov
ds
arpl
jnp
lahf
inc
repnz
lods
add
xor
and
lods
jno
sub
pushf
out
xor
mov
imul
retf
adc
popf
mov
push
sar
push
test
add
movs
sub
das
aas
xor
or
dec
pop
add
jo
add
xor
arpl
int3
mov
out
push
aad
mov
push
and
adc
xchg
sub
jmp
jecxz
and
pop
fidivr
push
rcr
popf
xchg
cmp
jmp
(bad)
fmulp
sbb
mov
push
pop
pusha
in
cli
xchg
cmp
and
pop
mov
push
inc
xchg
sbb
xor
push
mov
outs
ins
(bad)
and
adc
pop
mov
(bad)
fcomp
imul
stc
mov
dec
cmp
cld
xor
lods
in
cmc
pop
clc
aas
push
outs
cmp
dec
jmp
sbb
mov
pop
xor
das
xchg
xor
ja
adc
adc
mov
xchg
and
pop
push
mov
xchg
and
(bad)
xchg
dec
pop
push
ret
nop
int
mov
add
cmp
scas
bound
dec
imul
stos
shl
enter
cdq
xor
inc
mov
mov
mov
cmps
sub
lahf
pop
cli
push
jne
xchg
sub
xor
xchg
and
sbb
cmps
ret
xor
push
dec
daa
jae
pop
in
dec
je
pop
cmp
dec
mov
jns
jnp
ror
pop
scas
mov
push
das
mov
jnp
pusha
mov
inc
test
adc
xchg
jne
lahf
add
sub
fcom
test
mov
fst
pop
or
fld
scas
test
push
inc
aad
xchg
and
mov
push
movs
and
or
neg
cdq
test
xchg
cli
push
out
popa
push
pop
popa
int3
lock
in
push
jmp
fisttp
out
xor
pop
push
inc
mov
pushf
jecxz
inc
pop
xor
cvtps2pi
(bad)
push
iret
iret
in
dec
jbe
mov
xchg
or
push
test
out
push
ret
and
dec
fucom
cmp
cmc
jecxz
arpl
cmc
out
cmp
push
cs
mov
das
lock
rcr
imul
xchg
call
xor
repnz
inc
mov
mov
xchg
push
push
arpl
xor
and
push
and
dec
adc
into
cmp
je
cmp
jno
adc
jge
dec
jmp
mov
sub
jnp
mov
or
stos
inc
mov
test
ins
cs
in
jecxz
jb
cmps
adc
ret
mov
sbb
icebp
sub
lds
or
cmp
mov
dec
and
mov
loopne
lods
jmp
ret
pop
adc
jnp
out
adc
or
cmp
push
inc
cmp
sbb
int
add
xor
jo
push
mov
xor
mov
push
cmp
retf
inc
inc
rol
xchg
or
mov
int
push
into
jnp
mov
jae
xchg
adc
call
jbe
les
dec
ds
mov
data16
dec
jp
fdiv
push
test
cmp
fs
jge
lahf
pop
ins
pop
in
push
or
sub
(bad)
mov
aad
sub
cmp
ins
or
inc
movs
push
pop
outs
mov
dec
push
nop
cmp
int3
cmp
ret
out
mov
mov
mov
int
ret
in
mov
mov
pop
mov
iret
xchg
jg
aaa
aaa
call
(bad)
cwde
mov
xor
scas
mov
lods
xchg
test
in
dec
loopne
mov
mov
clc
mov
shr
fmul
push
sbb
movs
js
and
mov
add
jmp
pop
popa
ret
jb
add
out
or
jmp
pop
cmps
jg
xor
cmp
jp
mov
and
sti
inc
outs
in
push
inc
movs
sub
dec
out
pop
fcmovnb
mov
or
jg
add
adc
out
dec
cmps
push
adc
das
adc
push
repz
dec
imul
add
retf
xor
test
push
sub
mov
jle
push
xchg
pop
fwait
pushf
push
xor
sbb
mov
xor
mov
test
stos
adc
movs
xor
inc
in
adc
or
jp
shl
push
loope
and
mov
inc
neg
leave
inc
rcl
sub
int
lods
jmp
xor
jmp
not
mov
shl
ret
aas
sub
dec
imul
cdq
add
mov
retf
or
pusha
push
pop
call
inc
mov
stc
imul
fstp
in
add
movs
retf
adc
push
jns
inc
mov
inc
dec
push
lods
pop
pushf
push
pop
xchg
sub
pop
(bad)
cmp
lods
pusha
repz
lods
dec
or
cmc
js
or
push
mov
icebp
je
bound
mov
sub
mov
and
jl
cmp
mov
sbb
nop
push
mov
scas
test
mov
push
ins
pslld
stos
(bad)
cmc
push
dec
cmps
cli
xchg
dec
inc
fistp
repnz
inc
nop
into
sub
mov
mov
cmps
pushf
es
jne
mov
mov
inc
call
pop
call
xchg
lock
xor
loop
hlt
aaa
cmps
icebp
pop
fsqrt
push
push
mov
jne
in
dec
fnsave
adc
movs
jns
out
mov
xor
lock
hlt
push
in
test
addr16
sbb
mov
and
sub
jns
test
mov
retf
adc
cmps
mov
or
(bad)
aam
xor
(bad)
push
mov
movs
mov
or
mov
gs
adc
or
mov
test
test
ret
bound
pop
push
push
and
jl
outs
sbb
lods
ret
add
inc
repnz
push
xor
(bad)
mov
sbb
xchg
stos
mov
inc
cmp
ffree
xchg
dec
sbb
fidiv
mov
fwait
jg
mov
push
dec
inc
shr
pop
add
or
pushf
call
out
ret
std
in
cmp
push
out
and
not
clc
sub
loopne
cdq
(bad)
test
and
mov
cmp
call
in
cli
xor
(bad)
and
mov
js
cmp
pop
cmps
adc
test
mov
jne
ds
leave
les
xchg
fcom
fbstp
pop
jno
and
xor
call
gs
scas
dec
adc
sbb
div
add
xchg
and
or
popf
pop
dec
out
shl
pop
or
ret
jl
in
mov
dec
loop
and
jmp
inc
cdq
out
add
mov
jge
push
test
pop
and
mov
and
inc
inc
and
repz
ins
xchg
ds
sbb
popa
mov
inc
hlt
mov
popa
mov
and
stos
mov
adc
jle
or
sbb
xchg
out
jg
js
pop
mov
dec
ds
bound
fs
dec
add
(bad)
sub
(bad)
mov
imul
cmp
syscall
fsubr
cmp
xchg
cmps
adc
pop
mov
pop
add
and
inc
pop
xchg
jns
xchg
stc
xor
jmp
out
mov
dec
pop
sbb
sbb
dec
xor
cmp
fdivr
loopne
cmp
ret
xor
(bad)
mov
xchg
pop
cmc
pusha
jns
cmps
push
jae
(bad)
std
xor
movs
(bad)
(bad)
inc
in
out
test
loop
push
jge
xor
dec
inc
scas
xchg
sub
jp
add
mov
ret
arpl
dec
push
add
outs
fst
inc
mov
push
test
jp
adc
fwait
ror
cmc
add
sbb
scas
push
mov
aaa
cmp
ds
inc
or
mov
mov
fs
add
push
out
xor
add
xor
ins
nop
dec
outs
jo
fistp
in
mov
int
outs
dec
and
xchg
cmp
inc
in
out
outs
inc
pop
ins
push
push
xchg
out
push
cld
inc
push
inc
das
test
mov
push
push
out
pop
xor
mov
or
ja
dec
and
or
lea
lahf
sbb
bound
push
punpckhbw
ret
or
cmp
or
xlat
cs
pop
inc
popf
mov
aam
and
fisub
push
in
(bad)
nop
inc
add
pop
es
jns
push
inc
add
and
enter
jbe
or
dec
jnp
add
cmp
push
sub
inc
adc
cld
(bad)
add
push
jbe
and
rep
cmp
jmp
add
sub
ins
shl
test
movs
in
xor
xchg
(bad)
rol
inc
call
mov
in
inc
loopne
mov
popa
mov
inc
test
cmp
out
clc
mov
cmp
sbb
outs
xor
seto
in
sbb
xchg
xor
div
das
nop
aas
lds
repnz
xor
loope
sbb
push
pushf
and
ret
jmp
fmul
cmps
(bad)
scas
mov
cmps
jle
stos
fistp
popa
rol
clc
xor
out
dec
jmp
rcr
stos
and
(bad)
jmp
mov
popa
or
jnp
imul
in
push
pop
fcmovb
iret
pop
mov
xor
fnstenv
pop
call
sahf
fisub
in
pop
cmp
gs
loope
pop
les
pop
xchg
and
(bad)
add
mov
jae
dec
xor
push
je
jae
movs
test
sub
xchg
nop
scas
sahf
inc
sbb
sahf
hlt
dec
inc
fimul
in
and
cmp
inc
add
fcom
mov
mov
scas
adc
dec
jmp
or
inc
cli
dec
mov
cmp
fisub
push
lds
pop
inc
(bad)
and
sbb
cmp
pop
jmp
jno
jl
or
out
inc
pop
test
dec
enter
xchg
sbb
repz
jbe
xchg
sbb
lock
mov
(bad)
test
xlat
sbb
sbb
cmps
in
nop
xor
test
les
fsubr
xchg
dec
call
or
mov
push
aaa
sub
popa
inc
je
cmp
in
xor
lea
cli
mov
mov
pusha
cmc
add
inc
add
shl
out
(bad)
inc
fimul
aad
cdq
inc
adc
pop
dec
push
sbb
hlt
int3
enter
neg
jg
lea
jbe
popa
push
(bad)
mov
adc
arpl
fild
dec
dec
mov
fadd
pop
cmp
push
aam
shr
pop
mov
dec
adc
les
inc
test
sbb
xchg
call
cmp
pop
mov
leave
call
dec
es
push
and
push
loop
call
dec
aaa
scas
sbb
ror
cld
dec
dec
push
js
iret
sar
inc
or
loope
pop
sub
pop
xor
jbe
push
dec
cs
and
daa
pop
fadd
outs
xor
mov
movs
data16
sub
ret
mov
mov
fsub
lods
xor
ja
mov
ror
lock
add
push
mov
cmc
bound
fbstp
int3
sub
mov
or
inc
push
sub
pop
lods
push
ret
out
xor
mov
add
out
pop
jae
sahf
pop
push
mov
push
(bad)
mov
dec
sbb
push
cs
push
cmp
xchg
aam
jl
add
js
jbe
jne
and
push
or
jne
or
ins
call
outs
xchg
mov
and
stos
ja
dec
popa
adc
sbb
(bad)
fisub
rol
(bad)
aam
mov
sbb
and
dec
cs
lock
ja
push
icebp
mov
or
mov
(bad)
ss
inc
iret
inc
dec
inc
or
retf
lds
(bad)
cmovbe
or
movs
adc
loop
(bad)
sub
repz
jecxz
push
xchg
pop
mov
cmp
and
scas
lahf
scas
mov
push
fild
push
aas
clc
into
jae
pop
lea
xchg
mov
adc
push
xlat
jo
mov
pop
inc
and
xor
push
scas
push
add
test
dec
add
push
and
gs
das
and
stos
nop
inc
ror
xchg
xchg
ss
push
je
ins
dec
jle
nop
stos
lea
out
out
adc
jb
dec
movs
loopne
gs
adc
data16
pop
jmp
mov
mov
int3
xor
and
(bad)
std
cmp
and
loop
in
xchg
or
pop
mul
jbe
outs
inc
int3
mov
es
imul
popa
lock
xlat
pop
repz
mov
fcom
imul
sbb
scas
scas
retf
lods
popf
arpl
rol
cld
je
sahf
pusha
mov
pop
mul
lds
inc
ja
inc
xor
xchg
push
imul
jnp
push
movs
int
pop
push
pop
sbb
hlt
ret
std
cmp
call
ret
lahf
mov
adc
je
and
ret
mov
mov
inc
nop
test
mov
test
mov
inc
mov
add
sub
imul
xchg
mov
inc
jecxz
mov
or
mov
ret
mov
std
pusha
lea
into
arpl
xchg
pop
(bad)
cmp
add
sub
add
out
dec
mov
push
icebp
inc
in
arpl
ror
adc
stos
push
and
and
fmul
ret
sbb
nop
addr16
push
retf
mov
movs
aas
jnp
(bad)
popf
in
push
test
xchg
sbb
loop
jnp
or
mov
cmp
xor
adc
jmp
mov
mov
cli
leave
cmps
push
pop
mov
xchg
lods
fcom
bound
loop
mov
fs
(bad)
ror
fmul
sbb
or
push
outs
xor
clc
add
mov
mov
push
and
mov
or
sbb
xor
ficom
pop
mov
(bad)
loop
cmp
test
or
or
loop
ja
int
mov
mov
adc
sub
call
cwde
icebp
add
paddusw
mov
mov
popf
jmp
xchg
jp
sub
jo
dec
pop
outs
aas
ror
daa
mov
mov
cs
sub
ficomp
sub
mov
add
pop
dec
hlt
adc
push
enter
int
leave
pop
pop
mov
mov
addr16
mov
sub
add
lahf
sbb
adc
sub
dec
mov
adc
retf
mov
(bad)
mov
or
xchg
gs
and
into
cmp
iret
stos
pop
jmp
xchg
push
xchg
mov
xchg
sbb
ss
or
fldenv
mov
or
inc
sub
lds
pushf
call
mov
or
push
aad
in
sbb
mov
add
inc
jmp
ror
enter
push
or
pop
ja
clc
mov
test
or
adc
cmp
(bad)
hlt
xchg
add
mov
imul
inc
inc
or
imul
sub
and
jbe
push
in
test
add
test
mov
lock
(bad)
test
and
and
movs
mov
dec
into
in
stos
ins
lahf
aas
xchg
dec
fadd
sub
jmp
arpl
mov
jecxz
pop
jne
add
cs
pop
mov
(bad)
(bad)
push
stc
mov
push
outs
mov
in
out
xlat
sahf
invd
movs
jmp
test
arpl
cwde
aas
aad
mov
push
imul
mov
inc
scas
push
sbb
cmp
cld
mov
xchg
(bad)
mov
sub
inc
jge
push
push
jmp
pop
add
pop
inc
ds
iret
pushf
inc
add
mov
xchg
mov
test
mov
stos
cdq
popa
repnz
mov
stos
(bad)
call
test
(bad)
push
dec
mov
sbb
in
sub
sub
pop
mov
adc
nop
shl
je
(bad)
xchg
pop
cmps
icebp
adc
out
daa
jecxz
pop
sbb
nop
sub
inc
push
rol
fs
ss
jge
pop
lods
cld
sub
ret
fs
pusha
ins
xor
or
cld
fs
cmp
xor
mov
cld
sar
mov
cmp
inc
retf
add
or
or
mov
std
and
retf
jmp
out
aas
dec
pusha
pop
call
push
and
leave
xor
and
jmp
dec
mov
add
dec
push
pop
shl
sti
jg
or
push
in
mov
mov
adc
retf
cmp
aam
xor
daa
cdq
std
in
cmp
add
sti
xchg
mov
sbb
add
dec
dec
rcr
sbb
xchg
pop
mov
loopne
clc
pop
icebp
add
sub
dec
fwait
ja
jns
mov
mov
pusha
xor
icebp
retf
mov
leave
cmp
stos
mov
gs
pop
pop
in
add
stc
jl
or
ret
adc
fmul
push
adc
pop
je
adc
sub
rcl
cmps
jge
and
cmp
push
nop
(bad)
or
cmp
mov
enter
out
and
dec
pop
xchg
xchg
in
add
or
push
and
pop
jl
es
jbe
cmps
scas
pop
adc
scas
add
push
fsubp
pop
mov
sub
not
mov
adc
(bad)
call
mov
xchg
xor
je
add
xor
and
inc
sub
rcl
(bad)
or
sti
add
cmp
shr
mov
sub
lods
int3
mov
call
xor
xchg
out
jbe
into
mov
in
jae
loope
xchg
fwait
sub
jae
mov
push
je
adc
adc
icebp
cwde
jns
neg
jne
fisub
jbe
or
(bad)
repz
lock
adc
dec
out
and
in
es
xchg
jg
pop
scas
sbb
jbe
jle
lock
popf
test
pushf
(bad)
jae
fsubr
daa
call
mov
fisub
jnp
mov
add
mov
jmp
push
and
sub
mov
add
imul
idiv
mov
mov
je
ror
xor
and
js
dec
loopne
data16
lods
call
retf
(bad)
mov
sbb
sar
xchg
adc
sub
lds
mov
xor
mov
sbb
je
or
push
loope
sub
dec
cmp
cmps
cwde
cmp
ja
pop
ret
dec
dec
sar
jge
jl
push
outs
mov
fild
dec
stos
call
sub
movs
xchg
pop
out
mov
retf
out
arpl
add
mov
imul
rcr
and
mov
push
jp
call
dec
or
cld
and
or
mov
sbb
pop
imul
cmp
push
push
icebp
(bad)
sbb
jl
push
loope
imul
cmps
add
retf
lds
inc
stos
mov
and
pop
mov
xor
add
lods
adc
pop
loope
dec
inc
(bad)
pop
fstp
or
mov
mov
ja
cdq
add
repz
movs
shl
sub
std
arpl
xor
mov
mov
std
mov
adc
and
fs
mov
popf
loopne
mov
mov
pushf
cmp
or
ins
lea
jg
or
mov
fcom
stos
sbb
es
rol
(bad)
sub
and
mov
shr
inc
add
sbb
in
jb
push
sti
or
adc
cli
mov
jno
test
inc
iret
pop
stc
lock
pop
lock
push
push
mov
dec
cmp
fidivr
fnstcw
sub
xor
xchg
mov
cli
mov
(bad)
and
shr
jl
fsubr
sub
das
pusha
mov
sbb
lock
sbb
sahf
ja
add
jmp
mov
dec
jle
and
cmp
cld
les
mov
test
and
fdiv
push
retf
test
push
repz
sti
stos
movs
mov
jmp
int3
test
loop
loope
lods
push
adc
pop
mov
mov
ss
or
or
jge
into
mov
sub
jno
or
jo
aas
ds
jnp
pop
into
in
adc
and
lods
sbb
xor
mov
push
lds
pop
push
cdq
push
fidivr
(bad)
bound
imul
es
sub
rcr
fild
lds
scas
mov
xchg
jle
daa
xchg
mov
xor
fldcw
jbe
adc
(bad)
pop
cmps
mov
scas
pop
xchg
lods
xchg
sub
jmp
aas
(bad)
jmp
mov
shl
loope
inc
lock
dec
jl
push
push
and
adc
xor
pop
int3
mov
and
pop
(bad)
push
cmp
push
add
push
xor
ins
and
dec
add
jns
mov
enter
popa
xor
ret
dec
rcl
xchg
xchg
(bad)
push
ss
out
pop
xor
hlt
push
jae
xchg
push
leave
xor
push
mov
push
dec
lea
adc
cmc
cmp
iret
mov
jmp
xor
daa
and
pop
push
aas
dec
mov
fwait
jmp
test
push
lods
repz
sbb
test
test
retf
test
mov
out
cmp
sbb
mov
inc
push
pop
es
dec
adc
push
fcom
mov
fnstsw
sub
sbb
xchg
cwde
out
ds
stc
cs
sar
lds
into
ss
inc
fdivr
mov
rcl
xchg
xchg
test
or
inc
mov
out
jae
dec
sub
sahf
push
hlt
inc
adc
popf
xchg
daa
add
or
(bad)
and
mov
fdivr
inc
pop
ret
sahf
mov
mov
push
adc
sub
popw
imul
xlat
push
sbb
mov
rcr
test
mov
cmps
jne
sahf
sbb
popa
sub
mov
jmp
movs
sbb
rol
sub
mov
sbb
fs
pop
aaa
aad
sbb
sbb
mov
dec
jns
aaa
xchg
inc
retf
fisttp
cmp
add
push
push
mov
inc
add
push
jne
dec
mov
adc
and
inc
pop
push
sub
cdq
les
add
adc
sub
push
mov
lock
sub
mov
sbb
jl
push
mov
repz
out
inc
pushf
cmc
retf
add
lahf
mov
nop
xchg
repnz
inc
test
int
push
pop
pop
test
scas
adc
int
push
and
push
lahf
stos
(bad)
cmp
div
push
or
and
jbe
jge
jmp
and
test
jnp
inc
fsubr
mov
adc
mov
dec
and
loope
loopne
call
xor
cmp
mov
aam
or
mov
enter
in
mov
(bad)
sub
cld
jno
xor
hlt
fldcw
mov
mov
cmp
repnz
mov
fwait
pop
xor
mov
dec
mov
dec
xchg
pop
mov
jmp
or
pop
push
outs
or
push
jo
sbb
(bad)
pop
loop
sbb
sbb
daa
add
pop
loop
mov
imul
xor
jbe
add
add
sub
jmp
ret
xor
mov
mov
mov
add
add
push
dec
xchg
(bad)
in
pop
push
fwait
jg
lea
fwait
ss
mov
dec
out
fs
ret
(bad)
cdq
aam
(bad)
retf
push
mov
pop
add
inc
inc
pop
lods
pop
sbb
icebp
mov
or
jbe
push
shr
or
leave
mov
fstp
mov
dec
stc
xor
repnz
movs
jmp
push
mov
movs
mov
adc
pop
cmps
dec
and
cs
xor
push
loope
popa
das
pop
lods
aaa
sub
adc
and
cwde
sbb
pop
dec
dec
or
inc
cmp
lahf
cmp
stc
cmp
add
xlat
cmp
pop
xchg
mov
out
lds
(bad)
aad
add
ret
jo
not
es
pop
adc
fmul
and
jmp
test
movs
mov
jbe
xor
nop
outs
stos
sub
push
inc
xchg
push
scas
or
or
mov
jp
jmp
lock
sar
xor
and
pop
les
inc
das
shr
cmp
mov
pop
mov
jno
inc
or
outs
enter
fstp
sbb
mov
leave
in
aaa
dec
push
and
hlt
and
mov
test
sbb
dec
int
sub
sahf
shr
retf
mov
jmp
das
push
cmp
(bad)
(bad)
lock
and
pusha
sub
ins
cmps
pop
aam
std
sub
mov
cmps
mov
fcomp
sbb
stos
div
add
fcomp
xor
sahf
retf
fxch
adc
shr
cwde
rol
cmp
fiadd
mov
mov
popa
mov
cmp
call
ja
jne
out
xchg
into
cdq
fist
arpl
loop
das
sbb
adc
add
scas
mov
and
sub
in
pop
and
iret
call
mov
add
push
sbb
sbb
mov
xchg
test
outs
int
add
sbb
ds
inc
sbb
xchg
xor
pop
sbb
shl
xchg
fisub
repz
test
inc
iret
pop
jo
mov
int3
lds
sbb
popf
or
cmp
push
xlat
jp
jmp
and
fcom
jp
add
mov
lahf
pop
jmp
adc
or
nop
push
mov
push
push
xchg
push
paddb
mov
pusha
cmp
iret
mov
jg
shl
aam
lock
mov
pop
rcr
mov
stc
scas
dec
mov
add
stc
mov
xchg
dec
xor
(bad)
(bad)
into
push
add
adc
mov
jbe
inc
aad
ror
retf
xchg
push
ds
test
inc
stos
lahf
cmc
mov
xchg
inc
push
adc
fadd
fdiv
and
lods
pop
jbe
sbb
pop
imul
retf
xor
icebp
and
(bad)
icebp
aaa
hlt
inc
mov
(bad)
mov
dec
pusha
into
lock
imul
or
dec
ror
inc
sti
das
mov
cmps
(bad)
xor
adc
shufps
add
stc
mov
jbe
clc
or
jno
dec
sub
pushf
sub
xor
jecxz
mov
adc
test
xchg
nop
cdq
js
in
jmp
adc
repnz
mov
sub
data16
popf
mov
adc
mov
dec
shl
ret
leave
int
xchg
cmps
into
adc
xor
push
gs
mov
or
aas
loope
mov
lods
mov
mov
add
nop
fld
sti
arpl
jb
in
xchg
lods
jl
xor
and
loope
mov
out
adc
mov
lods
jmp
loop
mov
hlt
not
ins
xchg
lock
xchg
lods
xchg
(bad)
adc
pop
in
adc
daa
adc
jecxz
icebp
adc
jbe
and
sbb
arpl
or
xchg
or
inc
mov
popa
loop
cmp
and
jb
push
mov
mov
dec
stc
inc
js
or
sbb
ins
shl
mov
mov
aam
loope
std
out
add
pop
jmp
fnstsw
test
mov
push
call
mov
jge
and
ins
adc
fadd
data16
loopne
cmps
pop
pop
mov
cdq
aam
mov
push
loop
cmp
fidiv
add
add
stos
mov
frstpm(287
mov
(bad)
adc
sub
into
movs
mov
add
xor
mov
mov
inc
int
lock
push
fcmovnb
daa
cs
cmp
push
mov
scas
cmc
cmp
cdq
pop
jle
inc
and
sub
in
aam
dec
adc
in
sbb
pushf
inc
mov
push
sahf
xchg
call
inc
jae
fsub
out
or
aaa
mul
out
shl
call
jle
imul
movs
or
or
add
daa
xchg
jge
xchg
xor
mov
test
retf
rcr
inc
loope
lods
nop
mov
ja
test
mov
mov
sbb
cmp
test
shl
std
shr
int
into
call
push
cld
fcom
fs
lds
int3
mov
mov
fistp
jno
dec
fisttp
sbb
retf
sbb
test
mov
arpl
loope
test
adc
xchg
jge
das
inc
shl
(bad)
or
ret
mov
push
adc
nop
retf
sub
xor
push
fsubr
shl
and
fimul
cbw
xchg
push
popf
or
push
mov
je
stos
or
outs
mov
scas
cld
aad
movs
jecxz
in
or
int3
xor
push
mov
stos
loop
jg
mov
mov
cmp
out
dec
cmps
dec
test
push
xor
popa
(bad)
push
dec
mov
mov
sub
jmp
(bad)
scas
and
aas
and
push
pop
cmp
dec
jnp
cdq
xor
ja
push
dec
add
add
js
xor
icebp
xchg
scas
cwde
test
pop
mov
das
adc
aaa
jp
out
sbb
jmp
retf
movs
add
or
je
mov
leave
mov
sbb
add
xlat
mov
sub
(bad)
loop
ins
std
fnsetpm(287
push
int3
mov
cmp
aaa
cmp
push
cmp
push
and
sar
xchg
call
adc
and
out
lds
retf
mov
pop
pushf
int3
inc
nop
leave
sti
in
out
pushf
scas
jo
fucomp
dec
mov
cmp
repz
push
cmp
clc
push
jne
cld
push
ret
and
pop
inc
loop
xchg
pop
jmp
add
xchg
(bad)
movs
jl
loop
mov
daa
cld
sbb
sub
rol
addr16
clc
jle
sub
ret
inc
push
mov
mov
(bad)
(bad)
xor
std
(bad)
or
sahf
push
es
pop
(bad)
ret
pusha
cs
addr16
mov
stos
rcl
sbb
sbb
mov
mov
fldenv
or
xor
pop
mov
add
add
scas
rcr
inc
and
stc
ins
mov
loop
adc
adc
jno
retf
push
pop
mov
stos
retf
or
out
int3
dec
mov
jge
adc
fdivr
enter
cld
mov
push
imul
sbb
sub
lock
push
daa
mov
or
fwait
rcr
int3
call
pop
cmp
push
mov
clc
cmp
sub
movs
pop
jno
push
clc
imul
aas
dec
push
in
cmp
adc
inc
pop
xor
mov
adc
adc
mov
cmps
aad
sar
inc
test
rcl
and
aad
cmp
adc
dec
mov
icebp
sahf
dec
push
xor
sub
lds
pop
jno
sub
mov
xor
pusha
ins
cdq
pop
sub
pusha
xchg
fcompp
xor
push
test
jae
pop
or
ds
mov
rcr
scas
sub
jb
and
(bad)
call
pop
(bad)
fsub
lahf
cli
pop
mov
push
dec
mov
(bad)
push
xor
cmps
out
lock
push
mov
icebp
in
pop
adc
(bad)
rcl
lea
xchg
ins
in
mov
dec
adc
ins
fcmovnu
mov
(bad)
pusha
jecxz
fisttp
xchg
loopne
(bad)
jmp
iret
xlat
sub
sar
loopne
mov
sbb
int3
test
sub
movs
test
mov
test
jge
xchg
clc
rcl
int3
test
mov
inc
sahf
push
mov
hlt
popf
pop
dec
jb
cs
sub
push
fadd
and
test
jmp
cmp
(bad)
or
nop
hlt
and
aaa
dec
out
test
jns
out
xor
add
cmp
repnz
out
daa
nop
call
(bad)
jbe
neg
enter
out
push
add
xchg
inc
dec
mov
pop
stos
je
cmp
mov
nop
push
push
mul
ds
push
inc
inc
or
pop
rcr
movs
fwait
add
sahf
sti
add
stos
outs
lods
call
loop
out
pop
adc
or
jbe
cmp
aas
mov
popf
popa
(bad)
sub
js
push
ficom
sub
mov
retf
mov
cmp
mov
stos
js
and
jbe
dec
retfw
push
inc
in
and
xor
sbb
in
push
ins
xor
pop
popa
popf
xchg
or
and
jmp
push
and
mov
lods
mov
rcl
es
xchg
pop
sub
movs
int
ror
add
retf
sbb
mov
ret
mov
call
or
psubb
mov
cli
ror
mov
and
adc
push
std
xchg
fwait
mov
xor
push
test
pushf
mov
xor
ret
mov
push
jmp
(bad)
mov
adc
arpl
mov
push
adc
loop
sub
pop
or
fldcw
jp
adc
dec
mov
jbe
dec
sar
jecxz
faddp
mov
jecxz
pop
mov
pop
push
ins
pop
cmp
mov
or
cdq
loop
enter
cmp
cmp
adc
xchg
imul
push
jns
xor
jno
mov
push
add
js
jmp
cmps
daa
sbb
lods
shl
ss
adc
adc
jmp
neg
mov
ret
push
cs
mov
js
push
cdq
sub
js
pop
(bad)
(bad)
movs
or
div
inc
adc
ins
cmps
mov
fsubr
popf
cs
cli
call
ret
jbe
mul
arpl
(bad)
pusha
mov
dec
popa
je
les
gs
leave
mov
imul
hlt
jmp
mov
jno
shl
retf
sub
retf
ret
xor
sbb
(bad)
repnz
enter
out
jno
xchg
out
sbb
frstor
inc
mov
pop
inc
mov
test
or
pop
icebp
push
cmp
inc
sbb
mov
cs
inc
sahf
rol
cmps
pop
add
add
add
adc
cmps
pop
mov
hlt
out
add
xchg
dec
and
inc
cmp
xor
push
stos
and
jno
mov
cwde
adc
mov
dec
jg
inc
and
push
stos
dec
jmp
jnp
sbb
push
ds
jl
ja
dec
das
jg
adc
mov
test
sahf
jmp
push
xchg
cmp
cmp
sbb
sbb
mov
xchg
cmp
int
sbb
adc
sub
mov
test
cmps
popa
xchg
sbb
jecxz
cmp
xor
das
or
and
adc
sahf
or
imul
icebp
or
fwait
sbb
pop
aaa
call
xor
inc
sub
pop
movs
sbb
ins
mov
dec
mov
cmp
inc
mov
ja
loop
mov
and
xor
mov
xchg
adc
inc
jb
popf
movs
sub
sbb
mov
test
daa
sub
mov
xchg
mov
repnz
imul
cmps
(bad)
fcmovbe
pop
adc
out
loope
scas
mov
loope
test
fistp
mov
pop
push
pop
fninit
push
ret
xchg
cmc
xchg
jbe
mov
or
push
xor
jb
push
inc
jmp
adc
sub
fmul
pop
dec
in
(bad)
jecxz
sar
xchg
push
mov
repnz
sbb
xchg
fsubr
jmp
popa
ror
out
xchg
push
xadd
mov
mov
add
jb
lods
mov
paddsw
mov
pop
into
or
es
iret
adc
dec
jge
jbe
jp
jnp
clc
daa
jo
(bad)
out
iret
push
cmp
cmp
loopne
mov
aam
adc
jo
jbe
jnp
mov
dec
call
repz
add
int3
sbb
sub
stos
push
lock
xor
lds
and
xor
das
push
stc
daa
sbb
push
out
adc
xor
jmp
ss
or
adc
xchg
ss
mov
xor
push
sub
addr16
cld
(bad)
cmc
mov
push
in
jmp
mov
push
mov
test
out
sub
arpl
adc
sub
mov
ret
test
jno
push
stos
sbb
sar
je
mov
(bad)
add
mov
sub
fldcw
dec
les
mov
(bad)
sbb
pop
popf
xchg
(bad)
pusha
inc
shl
pop
cmps
imul
xor
hlt
cmp
call
pop
(bad)
mov
mov
mov
lods
mov
retf
movs
hlt
repz
out
add
inc
jge
pushf
mov
mov
es
mov
sbb
pop
cmp
pop
outs
std
movs
add
cld
push
dec
mov
addr16
test
mov
pop
adc
dec
rcr
inc
xor
dec
jnp
xor
iret
cmovb
pop
pop
stos
cmp
sbb
xchg
es
dec
adc
ror
clc
gs
inc
cdq
retf
push
pop
xchg
sbb
xchg
test
test
jae
retf
jge
adc
or
and
movs
add
sbb
jbe
adc
sub
scas
xchg
out
mov
ja
mov
xor
push
add
push
xchg
outs
push
ret
cmp
dec
adc
std
dec
or
mov
sbb
sub
sub
es
add
in
xchg
jbe
cmp
adc
aaa
out
jbe
jmp
ins
leave
fwait
es
test
sar
or
jbe
into
and
aaa
test
arpl
ds
ds
pop
mov
sub
jmp
sub
xor
cmp
mov
dec
jb
dec
xchg
push
sbb
rcl
in
out
das
or
mov
mov
or
cmp
mov
xchg
das
jmp
movs
aad
and
cmp
cs
pop
xchg
push
es
mov
mov
not
xor
cmp
bound
ins
nop
cmp
fidiv
mov
cli
int3
ret
mov
movs
mov
lahf
jo
loop
jmp
dec
cmp
or
inc
ins
xlat
ins
pop
sub
inc
cmps
stc
(bad)
ror
inc
sbb
mov
test
mov
cmp
sub
dec
test
sub
aaa
inc
or
imul
mov
test
inc
jae
call
jle
add
mov
dec
dec
stc
imul
jg
es
sub
std
test
repz
push
sub
ins
out
mov
cmovae
out
push
push
inc
pop
mov
(bad)
dec
pop
es
dec
pop
outs
data16
inc
sbb
and
dec
and
jbe
into
inc
fdivp
xor
sub
jo
call
pavgb
sbb
mov
xor
mov
lahf
out
push
adc
adc
stos
inc
fs
daa
or
xchg
movs
pop
jbe
and
das
xlat
out
xchg
sar
jb
mov
addr16
out
mov
dec
popf
out
js
ror
push
pop
jnp
mov
scas
ss
jae
data16
repnz
mov
add
iret
add
and
push
mov
push
rcl
add
hlt
mov
lods
fnsave
sub
inc
shr
into
fsub
and
fild
fmul
pop
jnp
mov
call
push
fdiv
mov
sbb
loopne
inc
xchg
div
mov
cwde
sub
popa
or
test
pop
mov
dec
sub
movs
xor
retf
push
sbb
mov
shl
imul
pushf
inc
pop
and
out
mov
dec
test
pop
jno
clc
fidiv
int3
add
sbb
movs
fidivr
pop
nop
jb
or
mov
cmp
int
pop
ins
mov
shl
jl
lods
jne
scas
xchg
xchg
cmp
popf
dec
mov
push
enter
icebp
scas
adc
mov
in
or
pop
pop
cdq
jle
jno
fcomp
cld
stos
cmp
sub
mov
in
add
jecxz
outs
imul
inc
pop
pop
mov
stos
mov
xchg
ja
adc
xor
cmp
imul
repnz
push
out
imul
pop
dec
and
int3
cmp
call
sbb
sbb
and
lock
daa
(bad)
pusha
add
neg
lahf
fcmovnb
mov
loope
(bad)
inc
test
sbb
cmp
fmul
loopne
pusha
jmp
pusha
and
sar
cmp
sti
data16
add
xchg
jmp
pop
scas
and
loop
loope
pop
aad
jae
in
jo
rcr
retf
mov
xchg
push
xlat
cmp
movs
and
pop
stc
push
nop
mov
adc
(bad)
pop
aad
test
jae
js
dec
mov
jno
and
mov
dec
add
pop
in
js
mov
pop
das
cld
enter
enter
cld
dec
xor
(bad)
retf
mov
pop
jnp
push
jle
xor
mov
or
mov
mov
in
or
hlt
or
test
aam
xchg
popf
dec
and
ret
xchg
cmp
xchg
imul
js
and
(bad)
push
ss
pop
adc
jecxz
out
cmps
xor
ret
cmp
ins
popa
mov
stos
das
movs
scas
mov
retf
cmc
lea
mov
add
mov
mov
adc
arpl
mov
loope
scas
add
lds
pop
hlt
jmp
sahf
cmp
inc
push
mov
repz
adc
push
jg
mov
mov
lds
popa
mov
fwait
push
fsub
mov
sub
std
mul
sub
sar
pusha
jmp
mov
sti
loope
bound
sbb
xchg
mov
add
es
test
pop
xor
test
sahf
push
out
mov
aaa
hlt
test
mov
dec
or
idiv
sbb
add
jp
sub
int3
mov
cmc
mov
dec
mov
out
lods
inc
rcl
data16
push
xor
xchg
sub
ss
shr
cmp
nop
jnp
mov
retf
mov
mov
xor
mov
push
xor
clc
dec
stos
pop
mov
aas
repnz
cwde
mov
xchg
arpl
xchg
and
ds
and
stos
push
push
jo
cli
pop
pop
ror
jns
xchg
cmps
cli
call
pop
mov
addr16
test
adc
xchg
xor
cmp
neg
and
outs
dec
in
ret
sar
out
xchg
mov
not
ins
cmc
es
dec
aam
in
stos
retf
pop
rol
rcl
push
mov
xor
fidivr
in
or
mov
test
xor
jmp
pusha
mov
or
add
pop
xchg
push
ja
push
push
push
push
sub
cmc
push
jmp
cs
mov
loope
sbb
jb
jno
jge
cmp
out
iret
inc
or
xchg
pop
imul
jae
xor
(bad)
lock
pusha
adc
aaa
adc
in
popa
sub
pop
data16
or
push
mov
test
popa
mov
sbb
pop
inc
cmp
movlps
js
xor
ficomp
xchg
loopne
adc
xchg
cmp
loope
shr
add
aad
cli
mov
in
add
sbb
inc
and
mov
hlt
je
jbe
in
retf
mov
outs
push
push
movs
int3
mov
(bad)
into
pop
pop
fidiv
leave
dec
lds
push
je
or
mul
or
add
adc
mov
mov
mov
lea
push
jnp
jmp
paddsw
or
sti
mov
sar
arpl
loopne
daa
adc
jle
int
and
fild
movs
sar
push
push
inc
mov
push
xchg
in
mov
add
test
(bad)
sbb
mov
gs
mov
neg
int
into
mov
iret
imul
cmc
enter
pop
lods
cs
rcl
or
in
mov
scas
inc
outs
mov
out
jg
(bad)
sbb
inc
inc
adc
ja
mov
dec
jg
call
ror
pop
jae
adc
pop
inc
jmp
mov
arpl
lock
sub
and
fisubr
dec
push
xchg
pop
cld
jmp
popa
xor
push
push
xchg
mov
aad
inc
mov
xchg
popa
loop
lahf
mov
ins
(bad)
ja
ret
cld
mov
scas
jg
sub
inc
add
and
xchg
cmp
cmp
nop
lods
mov
in
(bad)
jp
xchg
mov
es
mov
test
shr
enter
cli
push
ja
shr
(bad)
push
in
cmp
xchg
cmp
mov
xchg
lods
lock
mov
cmp
mov
adc
jbe
cmc
or
mov
dec
jns
add
cli
and
inc
shr
loop
cld
xor
and
inc
pop
sub
in
add
lods
push
mov
inc
daa
dec
mov
outs
neg
fcomp
push
jp
push
jbe
mov
xor
retf
lahf
inc
jecxz
jo
jbe
dec
jge
(bad)
xor
adc
fld
aas
and
cmp
jge
ds
mov
aas
jmp
mov
stos
pop
mov
push
and
lods
int
in
je
push
adc
push
mov
sub
addr16
dec
cli
push
test
bound
jae
ficomp
aad
clc
jl
mov
inc
enter
in
js
je
sbb
cmps
dec
out
push
xlat
sahf
cmps
push
jmp
cmp
push
jnp
imul
xchg
mov
jmp
icebp
dec
inc
shr
imul
inc
inc
sbb
or
rcl
daa
xor
xor
ret
or
pop
sub
enter
dec
jns
punpcklwd
sbb
mov
cdq
xchg
pop
pusha
mov
gs
jge
(bad)
xor
xchg
lds
fwait
iret
inc
lods
ins
leave
cmps
pop
mov
cmps
fsub
pop
jp
sar
int3
imul
push
loop
in
lds
push
iret
fdivr
jp
dec
mov
adc
dec
push
mov
pop
popf
mov
adc
std
div
loope
popa
enter
adc
imul
mov
daa
icebp
xchg
pop
cmc
in
cld
ss
xchg
mov
(bad)
xchg
jp
jno
or
and
mov
repz
stc
adc
jnp
mov
jmp
xor
clc
cwde
xchg
sub
(bad)
and
mov
(bad)
loope
mov
sti
rcl
(bad)
fldcw
das
push
sti
(bad)
cld
push
lods
mov
retf
pop
mov
sbb
sbb
or
out
in
inc
push
aaa
mov
sbb
sub
pop
jle
pop
mov
xor
dec
cld
js
(bad)
pushf
fsub
pop
cwde
sub
ss
test
in
cmp
je
jle
jb
shr
jae
iret
mov
imul
pusha
lock
pop
in
mov
xor
in
inc
in
mov
ja
lods
out
dec
mov
xor
pop
xor
arpl
cmp
pop
mov
mov
pop
in
das
xor
inc
aam
rol
or
pop
adc
jp
ret
rcl
call
movs
adc
imul
pop
loopne
add
jns
test
fs
(bad)
jmp
cmp
jae
sbb
out
test
fisttp
outs
cld
sbb
nop
push
push
xor
ins
arpl
mov
in
stos
xchg
jmp
arpl
mov
das
repz
jbe
cmp
in
adc
and
jbe
pusha
mov
(bad)
cmp
pop
mov
mov
sub
popf
jmp
jg
or
(bad)
push
ss
rcr
out
in
dec
sbb
lds
cli
dec
push
sub
mov
retf
mov
call
lahf
aaa
dec
pusha
cmp
pop
sbb
sub
xchg
jle
adc
pop
movs
outs
fdiv
imul
sbb
pop
cmp
mov
sbb
cwde
adc
xor
popa
cmp
add
or
xlat
scas
inc
dec
sahf
jl
lods
mov
mov
jne
je
test
sbb
xor
inc
sbb
cs
(bad)
shl
imul
cli
out
out
or
cmp
pop
daa
jae
jns
or
pushf
cmp
mov
pop
es
nop
stos
cmp
gs
cmps
test
sub
xor
pop
pop
mov
cwde
ins
sahf
dec
inc
fld
xchg
mov
and
dec
adc
xchg
push
test
setl
and
jmp
pusha
adc
dec
imul
fst
mov
xor
push
das
xor
push
fld
pop
not
rcl
xchg
jmp
arpl
data16
rol
sub
popf
loope
ret
sub
sbb
iret
bound
in
sar
clc
cmp
cmc
jne
and
les
jecxz
stos
in
hlt
push
adc
pushf
pop
mov
sar
mov
(bad)
cmc
fadd
pop
pop
mov
mov
aas
inc
test
push
lds
inc
push
shr
enter
xchg
ins
xchg
and
std
mov
outs
or
call
xor
inc
and
lds
ret
hlt
xor
dec
int
mov
clc
out
sbb
jg
dec
add
stos
and
jo
adc
cmp
sub
adc
fistp
fisttp
and
push
das
dec
aaa
out
mov
mov
mov
xchg
in
sbb
(bad)
test
dec
test
pop
dec
jmp
arpl
cmps
mov
or
cld
dec
ret
or
mov
sub
outs
std
or
aad
(bad)
scas
pop
sbb
rcr
pop
das
sti
les
sbb
outs
call
in
retf
mov
cmps
neg
outs
pop
mov
inc
in
inc
mov
cmp
rcr
ret
push
dec
adc
ja
mov
enter
cmc
fwait
bound
push
xchg
fptan
repnz
add
jle
xchg
mov
lock
loop
jp
inc
pop
jmp
xchg
(bad)
mov
outs
mov
scas
ins
sbb
inc
inc
cmp
jnp
mov
add
add
cmp
mov
mov
in
mov
inc
push
sbb
dec
xchg
jo
mov
jbe
div
inc
(bad)
pusha
inc
pop
retf
inc
lahf
cmp
add
cmovno
pop
xor
jmp
mov
inc
or
mov
rcr
pop
movs
lahf
pop
cdq
je
(bad)
(bad)
(bad)
and
cli
push
mov
loopne
neg
add
int
sub
pop
jne
jl
jno
retf
shr
pop
mov
cs
(bad)
add
cdq
cmps
cld
fiadd
xor
sub
sbb
jle
push
inc
cli
push
(bad)
cmp
mov
test
lods
jne
pusha
(bad)
dec
outs
sar
stos
mov
cli
mov
js
xor
inc
push
or
add
lea
int
adc
push
fsub
mov
ffreep
sbb
jnp
mov
out
sub
je
or
sar
add
sub
sbb
mov
cld
ss
inc
jbe
sub
fnstcw
jp
dec
push
rcl
sbb
shl
cmp
mov
xor
cwde
outs
imul
fisttp
xchg
out
enter
jmp
mov
add
aam
jmp
pop
cmp
add
fisttp
daa
cli
ret
sbb
adc
into
or
jnp
ins
out
shl
mov
add
sti
sub
lods
xor
sub
cli
gs
cdq
outs
push
adc
retf
mov
inc
es
adc
mov
cmp
dec
je
mov
cmovle
push
adc
pop
adc
add
movs
and
pop
adc
or
imul
nop
xchg
cmp
sbb
in
push
adc
push
cmps
retf
add
rcr
adc
push
mov
jecxz
adc
fsubr
xchg
out
sub
(bad)
pop
fsubr
adc
cwde
int
adc
jg
xchg
imul
out
pop
daa
fisttp
scas
dec
and
mov
shl
(bad)
test
xchg
pop
xor
mov
out
scas
imul
xchg
or
xchg
in
aad
dec
pop
inc
dec
pop
aaa
lds
mov
(bad)
mov
xchg
fimul
(bad)
adc
xchg
xor
(bad)
push
iret
fmul
cmp
jmp
pop
es
in
sub
mov
movs
sub
mov
inc
lahf
mov
(bad)
mov
loop
and
ret
mov
dec
mov
xchg
jecxz
leave
call
xchg
push
jge
jb
xor
rcl
dec
pop
cmp
mov
sub
cmp
pop
dec
dec
push
mov
ja
out
shr
inc
iret
mov
jmp
mov
xchg
xchg
loop
lods
mov
xor
mov
in
push
imul
adc
gs
jno
pop
push
frstor
sbb
ins
cmp
(bad)
fcomp
dec
popa
ja
push
cmp
dec
stos
adc
pusha
lds
push
gs
scas
xchg
xchg
cwde
fstp
std
xchg
jmp
mov
cs
je
mov
popa
dec
mov
or
outs
inc
aaa
ss
sbb
mov
in
sbb
sub
adc
aaa
xchg
(bad)
cs
mov
dec
push
or
loope
test
adc
adc
call
cmc
mov
xchg
inc
mov
mov
mov
dec
dec
inc
jnp
std
lods
out
fs
sbb
scas
mov
xchg
in
(bad)
pop
mov
mov
add
push
mov
sar
retf
xlat
push
cld
adc
jmp
xchg
and
int
stos
(bad)
lock
bnd
fsubr
mov
sar
shr
ror
jbe
inc
mov
fidivr
out
das
ds
sar
(bad)
mov
dec
xchg
mov
cmp
xor
pusha
mov
push
push
ds
out
outs
adc
adc
or
cmp
pop
or
sub
or
hlt
call
iret
inc
lods
ss
movs
push
xlat
fimul
cmp
iret
push
js
leave
sub
jbe
test
fsubr
pop
(bad)
std
pop
mov
pop
adc
out
and
hlt
sbb
sub
das
mov
or
iret
and
push
pop
out
push
movs
call
mov
xchg
jno
ins
pop
fldlg2
fs
mov
mov
push
jecxz
outs
(bad)
popf
stc
cmc
cwde
test
sub
cmps
mov
jp
jmp
sub
push
jb
mov
cdq
pop
ror
sbb
dec
adc
adc
mov
mov
lgs
inc
and
and
adc
dec
outs
mov
dec
push
cmps
and
pop
mov
mov
push
aaa
bound
in
xor
pop
or
test
pushf
push
inc
(bad)
push
add
pushf
sbb
mov
pop
xchg
xchg
jp
cmc
and
std
hlt
je
sbb
dec
adc
jle
xor
pop
ins
mov
xchg
ja
fsubr
mov
movs
xchg
aaa
cwde
(bad)
add
(bad)
bnd
pop
push
push
push
popf
push
cmp
cmc
fstp
and
xchg
in
sub
pop
cmp
xlat
popf
cmps
xchg
inc
pop
sub
ret
xor
inc
scas
jmp
aad
ja
(bad)
jns
movs
sub
fcmovne
neg
ja
ror
jp
cwde
inc
mov
push
fidiv
pop
rcr
jns
lahf
retf
mov
fsubr
lds
adc
adc
cmp
mov
pop
mov
push
push
pop
mov
sbb
jae
fdivr
packssdw
shl
aas
cmp
xor
cmp
inc
(bad)
mov
pop
neg
mov
jnp
imul
js
mov
cwde
jne
pop
in
inc
retf
mov
cmp
mov
xchg
(bad)
cmp
cdq
shl
frstor
aam
jmp
fsubr
(bad)
out
push
out
xchg
lods
outs
scas
scas
fdivr
popf
repz
mov
jmp
sbb
pop
or
push
out
xor
daa
jno
pop
pop
iret
push
ins
fadd
sbb
adc
and
mov
pop
lods
imul
(bad)
fistp
mov
enter
into
sbb
ds
sbb
cmp
movs
imul
imul
sbb
cdq
mov
imul
sub
inc
aas
retf
mov
test
cmp
int3
inc
imul
cmc
test
call
retf
arpl
or
jo
mov
mov
fcom
cmc
dec
xchg
xchg
(bad)
rcr
push
(bad)
pop
icebp
jb
icebp
cdq
sbb
cmps
pop
arpl
outs
and
fistp
je
sti
packsswb
adc
mov
push
or
push
dec
out
stos
fcomp
ret
das
ret
push
mov
mov
lds
pop
clc
inc
dec
(bad)
les
movs
mov
xor
xchg
mov
pop
add
pop
retf
out
lods
push
ror
jge
retf
mov
xor
dec
outs
hlt
fisub
pop
push
mov
stos
stc
(bad)
cli
mov
mov
sbb
hlt
lods
fs
je
xor
sbb
sbb
sti
jbe
push
push
out
push
sbb
or
ret
adc
dec
fidiv
inc
daa
add
and
cmp
aam
in
and
jb
dec
fadd
dec
outs
cmc
push
sbb
imul
mov
xor
ds
leave
mov
jp
jge
push
add
and
sbb
test
scas
mov
jle
mov
hlt
xor
pop
or
xchg
pop
adc
repnz
xchg
hlt
mov
sub
push
mov
inc
ins
pop
fimul
cli
jg
arpl
ins
adc
and
popa
sub
enter
sbb
icebp
xchg
daa
inc
mov
xor
sbb
rol
xchg
rol
xlat
enter
push
push
sbb
not
arpl
dec
jne
test
out
mov
push
fmul
xor
shl
push
jp
jecxz
inc
or
stos
xor
sti
fcom
mov
and
rol
cli
sbb
pop
test
call
mov
retf
xor
lds
jmp
cmps
jns
fmul
imul
mov
or
bound
push
dec
cld
js
sub
push
int3
sbb
data16
iret
jg
cli
arpl
cmps
repz
inc
cmp
mov
arpl
pop
out
inc
pushf
cld
ret
mov
lods
cli
cmp
sbb
out
mov
adc
adc
mov
loopne
mov
movs
inc
ret
xchg
lods
(bad)
aaa
inc
and
mov
sub
push
shr
(bad)
stos
xchg
cmp
jb
fmul
or
sbb
dec
enter
jmp
lock
mov
jo
test
mov
push
je
push
and
cwde
xchg
pop
sahf
sub
adc
mov
xchg
lods
sbb
push
loopne
mov
sub
mov
mov
or
lods
mov
mov
fcom
loopne
ins
xor
pop
pop
popa
lds
xchg
sbb
pop
add
fsub
dec
jno
rcl
mov
cmp
add
ins
inc
dec
in
pop
je
and
or
lahf
popf
cmp
xor
push
cdq
add
cld
sti
dec
push
mov
mov
pushf
xor
enter
stos
test
mov
cmp
add
inc
add
repz
xor
pop
sti
fdivrp
sub
imul
out
rcr
push
mov
loopne
aad
push
mov
xor
bound
(bad)
in
enter
imul
movsx
jb
les
shl
pusha
daa
or
sbb
cmp
mov
out
pop
int
cmp
aaa
pop
sub
sahf
and
push
retf
inc
fmulp
sbb
mov
test
xor
inc
js
cs
std
repz
and
and
cmp
mov
(bad)
add
arpl
push
mov
push
add
fsub
and
mov
mov
cdq
mov
push
cmc
paddusw
(bad)
mov
xor
stos
shl
adc
mov
cmps
mov
repz
icebp
mov
pop
loope
nop
inc
mov
ja
aas
jg
lea
pop
push
dec
pop
imul
cld
pop
pop
or
sbb
div
mov
xchg
int
jmp
ret
pop
fsub
stos
xchg
pop
fnstsw
jle
mov
pop
or
fs
stos
adc
xor
sub
lahf
rcr
add
int3
and
cmc
iret
inc
je
mov
lods
in
add
push
inc
sub
jecxz
pop
adc
jecxz
adc
ret
pop
sbb
daa
add
push
jno
not
xor
sub
movs
jnp
jl
mov
lods
ror
xchg
pop
cli
jae
nop
dec
push
sti
pusha
mov
push
fadd
gs
in
adc
add
pop
(bad)
out
test
stc
(bad)
pop
sahf
xor
mov
call
mov
push
cmp
rol
push
(bad)
shl
sub
dec
aad
mov
push
jae
sbb
mov
sbb
ss
shl
or
pop
(bad)
in
add
inc
mov
fstp
cdq
call
ret
or
cdq
xor
outs
js
test
jl
sub
int3
xchg
cmp
xchg
add
test
popa
xor
(bad)
imul
das
add
pop
call
mov
sub
in
and
ss
into
adc
xchg
xchg
xor
retf
cmp
js
sbb
cmps
adc
leave
pop
or
mov
fwait
outs
or
int
push
mov
inc
and
cwde
adc
dec
test
xchg
lock
xchg
or
pop
lods
imul
mov
(bad)
div
add
into
mov
mov
clts
add
cmp
cmps
or
retf
mov
dec
lahf
jnp
pop
ss
div
ficomp
clc
mov
cli
mov
inc
dec
cmps
xchg
nop
retf
jno
pop
inc
jmp
arpl
jge
push
push
(bad)
int
pop
rcr
in
xor
and
push
jne
mov
adc
std
pop
xor
test
mov
int3
dec
into
aas
mov
stc
test
cld
inc
adc
sub
mov
mov
out
and
jle
mov
add
push
icebp
daa
xor
test
cwde
sbb
fst
scas
clc
and
inc
fdivr
(bad)
imul
lods
gs
inc
and
and
lahf
in
inc
outs
mov
mov
dec
cmp
enter
mov
sub
call
pop
mov
ror
test
out
jnp
std
and
fistp
mov
pop
cmp
int
into
cmps
add
adc
add
push
add
inc
push
data16
xchg
iret
outs
mov
jecxz
cmp
(bad)
into
inc
lea
repz
mov
cmp
nop
mov
xlat
iret
retf
adc
add
std
stos
in
ror
dec
mov
addr16
mov
imul
cmp
sub
out
sbb
xor
mov
ins
shl
mov
jbe
dec
cmp
or
inc
test
mov
dec
pusha
adc
mov
xlat
or
jle
outs
lahf
imul
and
sbb
dec
outs
leave
sub
aas
and
adc
sbb
repz
sbb
mov
cs
fidiv
or
cmp
cmp
fmulp
add
and
mov
push
xchg
adc
outs
xlat
out
mov
mov
(bad)
bound
imul
ins
mov
mov
adc
inc
jp
xor
xchg
pushf
mov
mov
call
pop
mov
outs
or
(bad)
mov
inc
add
repz
in
les
pop
addr16
push
das
je
cdq
jo
clc
(bad)
shl
ja
pop
jne
sub
jno
mov
cmps
rcl
lods
inc
adc
int3
sbb
fdiv
shr
ss
or
lea
push
jo
lds
pop
sbb
repz
(bad)
fs
stos
retf
jmp
stos
test
out
pop
inc
fiadd
retf
cmp
sbb
stos
ss
sbb
pop
ds
adc
adc
pop
cli
or
cs
xor
push
stos
shr
pop
jb
pop
add
mov
push
mov
rol
std
icebp
fsub
mov
xlat
in
test
loope
inc
shr
mov
in
sub
ds
pushf
test
xor
mov
aad
arpl
inc
xchg
inc
lock
test
jle
cmp
in
or
push
es
pop
cmp
mov
push
in
icebp
add
mov
enter
fwait
lds
out
retf
(bad)
mov
cs
push
inc
cmp
stc
fnstenv
test
mov
mov
add
mov
xlat
test
addr16
cmps
into
cmps
dec
mov
or
lods
xlat
aas
in
shl
test
call
mov
mov
loope
fxch
leave
dec
mov
add
lods
cs
xor
loopne
mov
adc
lea
daa
cmps
jp
inc
xchg
xor
in
push
lea
js
inc
push
mov
(bad)
in
push
sbb
adc
xchg
dec
movs
inc
daa
pop
or
mov
popa
inc
outs
nop
pusha
stos
add
(bad)
div
cld
sar
push
xchg
mov
inc
pop
sbb
mov
mov
adc
in
retf
movs
push
pop
mov
xor
ror
call
cmc
cmp
or
mov
jno
mov
mov
push
cmp
jb
rcr
cmp
ret
out
mov
jae
movs
ror
out
stos
adc
sub
push
add
retf
adc
or
sahf
jg
aaa
jg
repz
int
fstp
fwait
cmp
push
and
imul
fist
jmp
pusha
clc
jae
stc
cs
add
mov
add
nop
mov
adc
ins
in
bnd
push
fwait
out
cdq
pushf
sar
push
adc
adc
cmps
sub
jge
lds
push
rcl
inc
xor
sub
test
pop
inc
sub
ss
mov
and
inc
pop
xlat
xor
add
cs
inc
lods
icebp
aam
lods
fdiv
sbb
ins
mov
out
aam
mov
add
loope
jnp
inc
dec
fs
hlt
inc
fsub
lea
test
inc
and
fs
(bad)
scas
scas
mov
sar
daa
leave
aam
icebp
iret
push
in
pop
mov
aad
(bad)
daa
int3
(bad)
adc
dec
sbb
addr16
mov
cli
mov
mov
add
push
clc
sbb
sbb
xor
or
adc
pop
scas
sbb
push
xchg
scas
test
adc
test
pop
mov
dec
jb
sahf
enter
push
neg
pop
cmp
sub
rcl
dec
or
or
pop
loop
add
out
into
(bad)
push
fisubr
popf
enter
sub
cwde
addr16
or
pop
arpl
adc
push
dec
xor
leave
jmp
xchg
mov
xlat
push
stos
in
xor
enter
mov
(bad)
in
(bad)
stos
ja
popf
hlt
adc
xchg
push
icebp
rcl
cdq
jae
jecxz
jmp
inc
ror
sub
stos
adc
enter
adc
imul
aam
mov
popw
cmc
sub
out
scas
push
pop
pushf
loope
out
adc
cmp
fs
out
xchg
and
out
xchg
fild
repz
or
sar
or
aad
push
push
add
mov
mov
test
imul
mov
cmps
sbb
jb
or
or
sbb
retf
jge
cmps
jle
jp
jae
xchg
(bad)
xor
xchg
cld
movs
xor
xchg
pop
rcl
inc
push
dec
or
cmps
addr16
bound
test
pop
cdq
es
sbb
pop
jae
cs
(bad)
push
mul
add
push
iret
mov
and
dec
stc
xor
mov
push
push
jecxz
push
das
lods
xchg
repnz
cmpxchg
push
pop
xchg
mov
test
aaa
cdq
(bad)
or
ret
test
sub
std
(bad)
repz
sub
push
shr
cwde
aad
daa
pop
mov
mov
pop
in
pop
popa
popa
cwde
or
pop
pusha
sbb
mov
fist
jbe
and
call
jecxz
pop
push
adc
pop
pop
mov
out
stos
int3
sbb
aad
retf
repz
and
repz
sti
ror
repnz
pop
mov
int
pop
repnz
push
std
rcl
push
scas
add
xlat
dec
or
push
jmp
out
hlt
jbe
repnz
adc
mov
dec
dec
mov
lock
inc
loopne
pusha
repnz
jge
ss
mov
inc
cmp
fidivr
aaa
jno
leave
icebp
dec
dec
jecxz
inc
movs
push
mov
inc
call
mov
retf
repz
sub
xor
add
fnstenv
push
add
repz
push
push
push
out
push
shl
jns
icebp
(bad)
dec
inc
cmp
cmp
sub
dec
xchg
(bad)
aad
fsub
dec
adc
and
ret
jmp
xlat
and
ss
xchg
push
cmp
test
cmc
xor
enter
imul
mov
lds
popa
ins
pop
dec
or
fdiv
test
dec
pop
dec
pop
dec
mov
cmp
fldcw
mov
movs
dec
lock
adc
mov
sub
fidiv
jbe
hlt
cdq
loop
stos
fisub
cli
push
xchg
leave
push
retf
fwait
lock
jl
cmp
loop
jg
push
mov
jmp
fcom
jmp
push
mov
iret
int3
int
hlt
(bad)
enter
call
mov
cmps
mov
mov
xchg
cmp
imul
in
adc
xchg
jae
jnp
add
or
jns
push
das
lahf
mov
sub
jne
push
sub
xor
ret
push
cmps
inc
sbb
in
loopne
out
push
or
dec
push
loop
adc
add
adc
xchg
pop
jge
fisub
cmp
push
pop
fs
xchg
leave
mov
sti
mov
jmp
movs
cmp
jo
mov
sub
ret
lock
rcr
sub
ja
aam
dec
lods
jecxz
pop
push
xchg
xlat
aas
adc
fistp
jge
data16
fistp
out
add
das
dec
inc
movs
dec
xor
xchg
fcom
xchg
adc
imul
push
mov
test
call
xchg
into
das
rcpps
mov
push
pop
xchg
push
xor
lea
je
inc
movs
dec
out
push
dec
aas
aaa
out
push
in
in
or
jecxz
inc
in
mov
jg
ret
movs
mov
adc
and
fist
sti
mov
repz
xchg
fwait
scas
clc
enter
ret
bound
out
cmp
push
or
inc
jmp
and
mov
mov
and
xor
(bad)
and
mov
mov
adc
dec
fisttp
iret
pop
clc
lods
pop
cmp
rcr
jle
jne
loope
aas
cmp
or
jg
popf
enter
(bad)
call
mov
std
jp
(bad)
xor
das
call
sub
xor
mov
jb
mov
mov
dec
pop
adc
inc
imul
(bad)
and
in
mov
add
out
sti
stos
sbb
cmp
or
push
mov
loopne
pusha
icebp
add
cmp
mov
ss
mov
xlat
jle
es
loope
icebp
(bad)
movs
dec
or
sub
js
fsub
shl
call
sbb
pop
shl
inc
sbb
adc
inc
mov
mov
loope
and
push
in
clc
cmp
dec
push
push
xor
jo
mov
sub
xchg
fst
xchg
mov
test
xor
cmp
cmps
or
mov
pop
mov
jle
jmp
outs
mov
and
jmp
push
jne
and
rcr
xchg
xor
or
inc
push
arpl
xchg
cld
lds
shl
jecxz
cmovbe
sti
xchg
loopne
add
cs
adc
xchg
push
mov
xor
push
dec
dec
hlt
pushf
loopne
pop
stos
sbb
sbb
ins
push
push
repz
jge
sub
fisubr
test
ins
out
or
and
or
ins
mov
dec
push
js
int3
stos
lods
mov
cwde
das
cmp
mov
cld
pushf
aaa
daa
push
mov
lods
jbe
jb
leave
pop
ja
push
pop
ja
outs
(bad)
inc
(bad)
retf
das
cmp
xchg
out
(bad)
push
or
mov
test
push
stos
jecxz
cdq
fisttp
xchg
mov
repz
inc
loope
xchg
cmc
pop
es
loop
shr
mov
test
popa
cmp
add
mov
rol
lahf
cmc
scas
fbstp
jl
cmp
push
jl
ror
jo
fld
aaa
cs
and
cmps
push
out
das
das
mov
add
cmps
daa
xor
pop
aaa
(bad)
shl
sti
shl
mov
add
mov
cdq
adc
std
xchg
xchg
xor
clc
mov
inc
mov
clc
std
add
cmps
ja
add
aaa
mov
les
lss
(bad)
call
cmc
hlt
call
sub
loope
xchg
pop
sub
push
lock
add
pop
cmp
push
ret
div
std
jmp
or
push
test
push
dec
int3
inc
or
pop
data16
stc
push
lods
into
icebp
mov
out
pop
sahf
shr
push
imul
xchg
in
xor
popa
cmp
movs
mov
ror
pextrw
dec
and
sub
stos
dec
pushf
out
pop
outs
xor
cld
popf
in
inc
leave
dec
dec
in
dec
dec
js
shr
aas
xor
fsubr
inc
jmp
call
pusha
test
cmp
sbb
lea
fnstsw
jmp
test
add
popf
call
cmp
fistp
cmp
test
call
mov
jge
xor
imul
retf
loope
jo
popf
scas
xor
pop
pop
jb
aad
xchg
adc
pop
lods
loop
mov
mov
daa
mov
shl
stos
fs
pop
xchg
and
push
leave
inc
lea
stos
adc
dec
jne
retf
jnp
cmp
sub
cmp
inc
(bad)
loopne
jnp
mov
xor
sub
addr16
pcmpeqb
cli
pop
or
fisttp
shr
out
inc
sub
xchg
inc
push
(bad)
inc
out
jl
or
mov
push
mov
leave
xchg
sub
out
scas
pop
div
test
aaa
call
sbb
fidivr
ret
cmc
xchg
(bad)
int
mov
mov
inc
fisttp
xchg
test
rol
aad
push
ret
pop
or
ins
sub
push
or
push
mov
adc
and
jp
lods
xor
mov
add
loopne
in
sub
jnp
dec
and
push
popa
stc
popa
cmp
inc
repnz
cmps
outs
dec
fucom
cmp
jp
or
ror
leave
(bad)
arpl
xor
cld
pop
mov
std
adc
jns
sbb
aaa
add
and
aaa
ja
in
(bad)
(bad)
mov
ficomp
sub
stc
pop
aaa
call
adc
and
jb
int3
lahf
stc
mov
fldenv
sti
pop
cli
adc
mov
jecxz
inc
cmp
fnsave
mov
rcr
in
mulps
and
add
or
lods
cmc
(bad)
fdiv
jecxz
mov
lea
loopne
enter
lock
jo
cmps
retf
cli
test
mov
add
lea
in
out
nop
inc
cdq
xor
cdq
push
aad
test
nop
dec
push
push
data16
repz
sar
fbld
xlat
add
in
pusha
repnz
aad
inc
mov
xor
fsubr
cmp
or
and
out
lds
pop
sbb
lock
xchg
mov
mov
(bad)
jo
clc
out
push
retf
mov
pop
stos
or
cmp
or
xor
hlt
nop
jle
push
inc
cmc
mov
nop
not
sbb
loop
push
sub
xchg
xchg
jnp
inc
add
ficomp
mov
out
data16
cmp
dec
xor
aam
rcl
out
jge
rcl
cmc
mov
icebp
out
loopne
xor
fldenv
mov
(bad)
mov
scas
movs
xchg
adc
cmp
ins
int
aam
outs
push
sub
retf
aaa
ficomp
pushf
xor
mov
and
pop
xor
mov
jbe
cmps
adc
mov
fsub
daa
mov
add
mov
inc
aam
popf
adc
add
xchg
das
jbe
mov
pop
adc
fdiv
das
scas
test
jb
fsubrp
xchg
test
int
mov
ret
xor
cmc
sbb
les
push
(bad)
nop
add
inc
jg
cmc
mov
lods
push
ds
into
xor
adc
add
aam
out
pop
jle
adc
mov
fdivr
in
int3
xchg
adc
mov
cmps
mov
or
pop
inc
in
mov
and
arpl
xchg
push
xor
loop
cmp
and
add
stc
in
test
sub
ds
mov
mov
arpl
cmc
out
mov
outs
test
scas
inc
sub
xor
mov
mov
xchg
pop
icebp
xchg
icebp
loop
add
push
sbb
jno
pusha
sysexit
repz
mov
pusha
mov
pusha
sub
loopne
aas
pop
mov
fist
test
fdiv
mov
popf
pop
test
jne
aaa
or
ret
jnp
pop
jmp
sbb
cmps
mov
adc
add
push
in
lahf
sub
and
mov
adc
stos
lahf
sub
dec
popa
pop
ret
pop
in
popf
or
xchg
mov
mov
ss
loop
mov
xchg
fwait
or
sbb
(bad)
repnz
ja
(bad)
fwait
and
ins
shr
push
mov
les
dec
cmps
daa
mov
stc
add
and
out
in
inc
pop
out
push
dec
test
jne
call
xor
retf
retf
(bad)
mov
sub
les
aaa
pop
aad
out
stos
bound
es
or
sub
out
inc
scas
mov
jmp
sub
out
fcomp
pusha
arpl
loopne
(bad)
xor
imul
mov
ficomp
jle
cmp
cmc
cdq
pop
loopne
mov
and
lahf
pushf
loop
fldenv
lock
xchg
and
retf
mov
ficomp
in
movs
jo
fild
dec
mov
push
xor
(bad)
(bad)
addr16
mov
cli
lea
mov
push
daa
pop
pop
push
fdivr
sub
adc
retf
out
loopne
aas
mov
enter
inc
ins
push
jmp
xor
add
jae
inc
xchg
add
xor
loop
pop
pushf
(bad)
jge
sti
pop
push
call
push
sar
adc
or
shr
arpl
das
or
stos
sti
rol
scas
ins
inc
push
scas
outs
cdq
fcomi
or
xor
push
iret
retf
push
lahf
jmp
jmp
jecxz
push
or
xor
retf
add
mov
arpl
shr
cmp
push
jl
sub
mov
lahf
loop
xor
cli
je
outs
js
xchg
cmps
push
fidiv
(bad)
mov
mov
adc
pop
ret
inc
out
lahf
jmp
and
aas
fmul
retf
xlat
sti
test
xor
or
and
inc
gs
jmp
fbstp
mov
push
pop
ret
pop
mov
cmps
inc
stc
xor
inc
xchg
xor
add
push
push
repnz
fnstenv
xor
shr
xchg
jmp
add
sbb
mov
bound
mov
push
sub
xchg
lea
dec
sub
pop
or
sub
lock
fisubr
sub
imul
adc
scas
inc
loopne
or
sub
ror
and
sbb
repz
dec
or
jno
loopne
(bad)
retf
ins
jo
scas
mov
hlt
and
cdq
mov
jmp
mov
loop
sbb
mov
jno
push
mov
mov
hlt
(bad)
sahf
retf
mov
mov
into
rcl
inc
repnz
sub
std
cs
fwait
dec
xchg
js
sahf
mov
jne
xor
sub
mov
mov
xor
pushf
(bad)
push
sbb
cli
ss
mov
jle
lock
inc
mov
mov
and
aam
ret
rol
push
dec
xchg
out
mov
(bad)
mov
stos
out
push
lock
arpl
mov
add
aad
cmp
lods
mov
jle
push
xor
ror
pop
mov
enter
pop
xor
jle
add
into
jl
out
out
cmp
xchg
fbstp
out
stc
cmp
sub
in
mov
cmp
mov
das
gs
add
mov
in
push
popa
pop
mov
lahf
xor
adc
sbb
sbb
pushf
ss
inc
mov
leave
retf
push
fwait
push
ret
or
std
ficomp
cmc
and
ficomp
xchg
int3
jmp
inc
imul
xchg
ret
mov
sahf
in
push
mov
mov
ror
mov
retf
ror
xlat
or
mov
mov
iret
cli
(bad)
in
out
es
cli
adc
stos
mov
inc
(bad)
fst
mov
lods
xor
ror
sub
add
(bad)
(bad)
enter
loope
mov
es
mov
dec
dec
adc
mov
ficomp
sub
xchg
dec
fwait
test
mov
test
sub
addr16
inc
or
sbb
int
xor
xchg
int3
dec
push
dec
les
mov
out
or
cmp
call
mov
mov
(bad)
push
cmp
cmp
jp
inc
ss
push
pop
jo
fidivr
cmp
icebp
arpl
sub
aad
imul
mov
xor
push
xlat
mov
test
in
pop
and
leave
les
repz
adc
pop
call
xor
les
jg
add
lds
inc
mov
xor
movs
or
gs
mov
das
mov
imul
jge
or
lea
xor
ss
addr16
jns
mov
int3
xor
sub
lahf
(bad)
in
xor
push
push
or
jge
xchg
mov
test
inc
lahf
inc
or
dec
loopne
(bad)
pop
scas
jo
sub
arpl
fs
inc
retf
fwait
sti
mov
sub
adc
int
pop
mov
les
sbb
mov
jmp
call
cs
call
rcr
movs
push
push
lods
std
dec
int3
adc
not
pop
or
fistp
lods
rcl
(bad)
jp
sub
sbb
aad
mov
sbb
and
inc
stos
mov
fldcw
mov
pop
ror
mov
push
stos
inc
test
pavgb
ror
push
les
ret
xor
std
xor
sub
enter
cmp
iret
mov
dec
pop
repnz
mov
mov
or
iret
pop
xor
xchg
adc
push
xchg
out
fld
dec
xchg
jg
ja
in
xchg
mov
pop
mov
retf
sbb
sub
into
ret
push
fld
mov
jmp
jg
imul
(bad)
add
push
mov
xor
xchg
dec
(bad)
cmp
stos
mov
(bad)
aad
push
cmc
mov
xchg
fwait
test
lods
jl
and
xchg
cmp
(bad)
int3
fmul
xor
sub
inc
mov
jge
les
cmp
mov
xlat
(bad)
cli
lods
es
push
lods
or
dec
add
shl
push
xlat
repz
mov
outs
or
xchg
xor
cmp
loop
pop
sbb
adc
les
nop
arpl
xchg
mov
loop
movs
xor
xchg
mov
cmc
in
mov
adc
and
sub
arpl
shr
stos
pop
lahf
aas
fisttp
inc
adc
(bad)
xor
xor
ficomp
lods
pop
cli
iret
int3
das
dec
mov
fcomp
cmp
shl
shr
dec
xor
xchg
mov
sbb
mov
xor
stos
mov
mov
mov
add
mov
aam
sub
pop
in
dec
inc
mov
mov
out
and
add
loopne
pop
jns
stos
add
shl
sbb
jg
jnp
loop
mov
mov
dec
aad
mov
ins
mov
pop
fisttp
push
push
inc
or
out
and
hlt
nop
popf
(bad)
mov
xchg
sar
or
hlt
jg
inc
xor
push
lea
ds
dec
gs
cmp
xchg
stos
sub
cmp
rcr
imul
fwait
ins
mov
fs
pop
mov
das
mov
out
jo
xchg
cld
mov
mov
push
call
dec
push
cli
je
repz
popf
mov
hlt
out
loop
test
add
mov
retf
xchg
ss
pop
scas
xchg
adc
in
test
fnstcw
cmp
shl
and
out
mov
xor
daa
inc
out
pushf
jno
add
pusha
test
jecxz
enter
mov
js
mov
jnp
adc
ret
mov
cdq
nop
mov
fisub
loope
jge
out
cmp
cmps
loope
ds
mov
movs
adc
imul
cwde
(bad)
sub
cwde
add
nop
jmp
clc
inc
xchg
lods
xor
mov
retf
dec
pop
or
jo
mov
imul
and
inc
adc
add
arpl
mov
push
push
xor
enter
xor
sahf
mov
add
add
arpl
inc
aad
mov
call
fcomp
aaa
jl
push
in
ins
aaa
in
repz
adc
sti
mov
sub
adc
mov
in
add
add
sub
mov
sahf
mov
mov
pop
mov
test
(bad)
mov
mov
mov
xor
ins
and
pop
jo
pop
test
or
adc
cli
stos
jge
loop
xchg
sub
and
sub
scas
cmps
push
add
nop
xchg
in
sbb
lods
fisub
in
and
cmp
inc
test
push
pop
push
jne
jno
inc
sbb
add
mov
inc
or
scas
out
push
mov
pop
(bad)
test
sbb
push
shr
ret
pop
lock
jno
loopne
and
int3
sbb
arpl
inc
mov
cmc
adc
sbb
pusha
inc
aaa
lods
cwde
scas
(bad)
mov
lock
xchg
and
mov
frstor
xchg
loope
in
jecxz
jnp
pop
arpl
daa
jne
les
cli
push
pop
inc
ja
aad
leave
das
and
mov
jae
mov
pushf
adc
pop
pop
cmp
ja
bound
xchg
hlt
mov
mov
clc
out
ins
pop
adc
sbb
jbe
(bad)
mov
add
iret
cmp
jmp
push
and
les
push
dec
xor
pop
add
call
sbb
(bad)
int3
push
inc
sub
loopne
jge
dec
inc
inc
add
cmps
leave
mov
xor
and
push
mov
dec
imul
dec
xchg
mov
test
leave
add
adc
imul
mov
movs
and
inc
enter
(bad)
jecxz
stos
std
sti
cwde
mov
or
add
rol
or
std
ins
jo
fadd
aad
stos
cmp
aam
and
cdq
xor
mov
stos
jl
add
loope
mov
fdivr
sub
xchg
mov
mov
pop
jmp
enter
sub
addr16
repnz
inc
xor
mov
xchg
inc
cmp
loop
int
mov
addr16
add
stos
(bad)
mov
pop
int
bound
bound
mov
pop
mov
jae
sti
test
popa
ror
jno
jno
jne
rol
mov
dec
out
dec
call
push
pop
fdivr
(bad)
mov
or
ret
jp
rcr
xor
push
and
add
fnstcw
shl
shl
dec
mov
stc
in
std
idiv
add
aad
jecxz
fdivr
int3
sti
and
mov
shl
pop
pop
test
pop
stos
js
push
rcl
jmp
adc
test
dec
push
cmp
shl
mov
xchg
adc
xchg
faddp
cmp
or
pop
mov
sub
cmp
rcl
sbb
imul
dec
mov
mov
mov
test
inc
and
adc
lahf
lods
push
xor
sbb
pop
ins
aam
jecxz
dec
mov
daa
adc
adc
push
cmp
push
jle
clc
mov
mov
inc
or
xchg
into
mov
inc
mov
mov
gs
lea
jae
(bad)
imul
xor
push
movs
and
xchg
mov
test
es
loopne
xchg
push
inc
pop
jno
(bad)
pop
mov
fistp
or
scas
jle
ins
pop
mov
mov
inc
cmp
sti
push
jne
daa
adc
fldcw
inc
sbb
sbb
out
loopne
aad
(bad)
jge
(bad)
jb
icebp
jbe
stos
or
mov
cs
adc
and
pop
das
cmp
outs
sahf
sbb
push
inc
loope
es
shl
das
popa
sbb
nop
cwde
out
jnp
pop
sub
adc
outs
jg
cld
jb
fstp
dec
push
and
adc
fild
push
fs
mov
adc
mov
retf
nop
ficomp
in
out
mov
popa
and
mov
leave
and
xchg
jno
mov
lahf
addr16
mov
(bad)
pop
push
daa
and
mov
out
inc
adc
sbb
add
js
mov
lds
out
int
pop
shr
push
ror
mov
xchg
add
jmp
vlddqu
adc
das
sbb
dec
xchg
or
sbb
int
dec
jo
adc
ds
callw
enter
adc
pop
ficomp
loope
nop
jnp
mov
mov
lods
dec
aad
dec
icebp
stos
sbb
pop
popf
out
inc
ins
movs
jge
mov
add
out
mov
inc
xor
aad
retf
adc
sahf
push
into
or
jmp
int
push
loop
sbb
fwait
shr
xchg
push
push
jmp
aam
sbb
scas
retf
cmp
sbb
fdiv
out
int3
test
mov
cmp
push
push
jb
and
shr
into
push
into
sub
loopne
mov
out
sub
(bad)
mov
retf
pop
xchg
inc
lock
inc
sbb
test
mov
and
fsub
mov
(bad)
pop
(bad)
xchg
fnstsw
(bad)
pop
dec
xlat
aaa
data16
adc
retf
leave
inc
adc
cli
leave
pusha
data16
xor
iret
out
or
fwait
test
retf
iret
(bad)
icebp
arpl
stc
xchg
or
mov
daa
shl
jl
or
test
jnp
or
or
cmp
std
leave
and
and
rcr
mov
pop
xor
sahf
ror
mov
cld
call
add
imul
fcmovb
in
or
cs
imul
lods
setg
mov
lods
push
int3
add
mov
jae
inc
mov
daa
jmp
imul
movs
pop
sbb
lock
aaa
mov
push
adc
adc
jmp
fwait
scas
mov
xor
repnz
mov
mov
cmps
add
ins
lds
mov
enter
out
and
rcl
call
out
cld
adc
shl
ret
sti
xchg
jb
or
loopne
push
adc
ret
adc
(bad)
mov
dec
cmc
adc
cmp
mov
mov
mov
jno
fdiv
adc
mov
arpl
mov
es
jmp
sub
sti
out
jno
hlt
jg
popa
adc
stc
(bad)
mov
pushf
cs
xchg
outs
into
outs
mov
add
xor
fidiv
test
into
pop
pop
repz
mov
pop
inc
lds
xchg
mov
loope
pop
pop
mov
jp
jg
sbb
loopne
push
rcl
inc
div
mov
scas
sub
mov
and
sti
pop
xchg
jne
adc
pop
popf
push
sub
outs
int
push
in
xor
out
add
jmp
sbb
mov
push
stc
mov
(bad)
xor
mov
adc
xchg
pop
adc
sbb
out
xchg
mov
mov
xchg
mul
ja
mov
or
adc
test
test
jno
cdq
mov
int3
pop
mov
jb
fild
jmp
add
xchg
mov
rol
mov
rcr
je
inc
jp
push
jb
jle
loope
jb
add
mov
test
add
test
scas
adc
cmp
lahf
inc
inc
push
or
fwait
loopne
loopne
add
dec
cmps
loopne
jle
push
daa
jno
fisub
bound
repnz
or
xor
mov
push
leave
scas
adc
cmp
inc
fstp
lahf
loop
add
cwde
dec
jmp
das
lds
shl
out
leave
(bad)
pop
pop
movs
xor
(bad)
xor
cmc
(bad)
cld
push
cmp
cmps
enter
sub
push
je
sub
pop
add
or
xchg
scas
xor
ins
popf
ins
fcomp
enter
adc
push
fcos
jbe
mov
dec
daa
add
stos
movs
jb
sbb
mov
repz
sub
pop
push
sub
fbstp
out
adc
inc
mov
inc
bnd
xchg
adc
jbe
pop
bound
jae
enter
inc
clc
addr16
add
xor
xor
dec
jnp
pop
ja
in
xchg
add
inc
in
jns
mov
mov
jle
mov
push
pop
aas
xor
push
shl
test
jmp
les
mov
aas
xchg
fcmovu
or
inc
and
jb
dec
push
mov
dec
pusha
cmp
js
cmc
stc
jmp
jl
ret
mov
cmp
sub
push
and
in
xchg
test
fild
xchg
imul
push
push
(bad)
cmps
pop
loopne
adc
adc
xchg
cmp
loop
sbb
enter
sub
fwait
pop
loop
cmp
rol
lea
dec
push
(bad)
outs
imul
(bad)
jbe
mov
and
daa
adc
pop
ins
(bad)
sbb
popf
or
fsubr
in
xor
jl
mov
out
ins
repz
cwde
add
ins
jge
dec
push
mov
cmc
ret
or
dec
mov
in
adc
movs
out
push
mov
add
in
jl
es
mov
arpl
add
fmul
add
(bad)
fidivr
sbb
arpl
adc
push
mov
xchg
and
mov
jbe
mov
addr16
jae
outs
dec
(bad)
retf
cli
jne
jmp
pop
lds
sbb
out
cmp
push
std
retf
mov
sbb
retf
dec
cdq
aas
out
(bad)
nop
jp
sub
and
pop
sar
popa
or
les
jle
fistp
pop
sbb
pop
lds
jo
inc
inc
pop
jae
cli
arpl
mov
in
or
mov
xor
cld
stos
rcl
ss
cmp
cwde
(bad)
int3
pusha
push
sub
xor
fxch
pop
fidivr
xchg
jne
ror
shl
popa
mov
aam
stos
iret
popf
mov
push
movs
sbb
into
mov
dec
out
inc
int3
dec
jne
jecxz
aam
mov
jg
js
jl
push
nop
lock
sti
dec
pop
xlat
inc
adc
sbb
jns
out
or
mov
or
les
xor
inc
retf
fs
dec
enter
push
pop
push
arpl
jmp
pop
adc
push
sbb
enter
arpl
or
ins
xchg
sub
mov
adc
pusha
cld
js
xchg
sti
je
fsqrt
cwde
stos
dec
add
sbb
or
and
out
push
push
sar
retf
cli
test
pop
mov
pusha
stos
mov
jge
push
scas
push
fwait
jecxz
xchg
xchg
loop
mov
sub
out
pop
cmp
push
xchg
sahf
ds
adc
fwait
into
pop
cmc
ret
adc
in
push
cmps
cmc
and
imul
cdq
pop
retf
(bad)
(bad)
pop
push
adc
int
sbb
sar
and
inc
fucomi
out
pushf
mov
mov
and
add
push
sbb
les
js
xchg
push
pop
jl
sub
sar
add
xchg
mov
lock
popa
push
mov
ds
ret
fwait
sbb
scas
pop
fs
sub
outs
push
push
ret
adc
in
sub
xor
jge
ins
addr16
mov
out
fbstp
and
aad
mov
es
cmps
pop
pavgw
inc
sar
(bad)
push
fstp
cmps
pop
push
(bad)
scas
clc
and
push
jae
rol
sbb
mov
xor
lods
ror
jl
cs
jnp
outs
div
mov
stos
jg
xor
xchg
inc
leave
cdq
add
sbb
es
shl
mov
je
xchg
pmulhw
daa
pop
call
imul
pop
push
mov
jmp
das
into
and
adc
pop
lea
mov
test
pmaxub
das
jge
std
sbb
jg
adc
push
add
sbb
cli
pop
mov
sbb
ins
push
ficom
mov
test
loopne
int3
jmp
push
cmps
or
mov
cmc
adc
sub
xchg
cmps
or
xlat
mov
sub
pop
jns
icebp
jno
mov
or
outs
adc
pop
popf
inc
mov
jb
movs
cdq
mov
or
lods
inc
and
mov
scas
in
mov
mov
sub
(bad)
test
or
test
je
pop
(bad)
retf
inc
mov
adc
sbb
cmp
push
pop
push
rcr
pop
xor
cld
sub
cmc
xlat
jl
mov
cld
add
jg
mov
in
(bad)
rol
sub
mov
loopne
aam
pop
xrelease
pusha
cmp
ds
inc
mov
pop
adc
adc
push
or
movs
inc
jl
push
fld
jmp
fcompp
stos
jno
xchg
mov
out
pop
out
scas
aam
jle
jp
lods
mov
jns
fcomp
push
imul
cmp
adc
jp
cld
jbe
ficomp
cmp
cwde
jecxz
cmps
push
push
add
mov
jmp
lods
mov
test
xor
xor
mov
sub
sub
pop
jbe
fs
aad
stc
rol
sub
and
xchg
rcr
dec
xor
call
inc
push
adc
xchg
mov
pop
dec
push
or
pop
jecxz
cmp
push
cmp
fs
xor
cs
pop
adc
pop
mov
pop
push
or
stc
xlat
(bad)
push
jmp
lock
pushf
inc
inc
sub
pop
cmp
(bad)
retf
hlt
mov
xchg
rol
stos
xor
(bad)
cld
aas
retf
add
out
dec
cmp
jecxz
pop
jle
jbe
pop
popa
mov
xor
fs
rcl
pushf
mov
or
push
imul
shl
and
sbb
mov
enter
mov
or
mov
gs
or
or
inc
xchg
add
add
outs
mov
push
jp
ret
add
mov
fisttp
mov
push
add
fstp
xchg
stc
push
mov
pop
into
mov
fdiv
sub
in
jo
cld
outs
aaa
jae
and
shl
xchg
dec
(bad)
sbb
ret
ins
inc
outs
loop
push
jns
jle
ins
retf
mov
jo
lock
cmp
ret
xchg
pop
xchg
xor
jecxz
test
hlt
inc
in
pslld
cmp
shr
aam
xchg
jg
add
ja
ss
cmp
push
imul
into
or
cmps
stos
pop
xchg
dec
ins
dec
mov
scas
aaa
rcr
mov
or
mov
shr
sbb
in
mov
mov
outs
jbe
test
gs
jl
and
inc
cli
fstp
cs
fldenv
jmp
test
xor
xchg
mov
xor
cmp
ret
mov
xchg
push
xchg
add
in
sbb
ins
pop
add
aad
sub
mov
les
inc
xchg
fnstsw
cmp
mov
inc
jge
ss
mov
movs
gs
retf
fstp
iret
push
rcr
in
aam
cmc
jge
mov
sbb
and
inc
xchg
pop
retf
cmp
loope
sub
cmp
push
jno
scas
and
dec
into
sub
test
(bad)
loope
push
outs
mov
pop
stos
pop
(bad)
jno
jp
mov
loope
popa
xchg
int
mov
cli
xor
pop
add
test
cli
dec
pop
bound
test
adc
adc
add
sti
xor
mov
fist
movs
idiv
cs
mov
or
sbb
retf
shr
mov
or
aas
loop
xchg
cld
and
hlt
stos
cmp
mov
pop
pop
pop
sbb
jmp
lahf
daa
xor
aaa
push
push
fld
cmps
cmc
(bad)
in
lahf
sub
jae
xor
cwde
fs
test
fadd
jmp
jp
std
cmp
pop
mov
xor
iret
cmp
cs
out
ror
mov
bound
scas
test
inc
mov
pop
ins
(bad)
nop
xor
inc
test
mov
mov
out
retf
in
test
inc
push
cwde
xchg
sub
mov
push
popa
jno
push
pop
(bad)
(bad)
pop
push
hlt
adc
scas
cmp
and
and
adc
out
ret
mov
imul
jge
pop
mov
pusha
jmp
lock
jl
and
cmc
daa
mov
lock
aam
or
adc
cmps
loopne
(bad)
jo
mov
mov
jg
cmp
stc
iret
neg
fs
adc
hlt
add
icebp
dec
add
or
xor
inc
shl
inc
mov
outs
jecxz
sub
jle
jle
jns
(bad)
push
cmps
lea
in
xor
(bad)
cli
push
sub
fsubr
add
xor
push
fsubr
mov
mov
retf
and
retf
fdivr
scas
cmp
xor
mov
in
cli
mov
call
xor
ins
(bad)
icebp
jne
aam
push
push
jno
loop
iret
inc
xchg
mov
lahf
pop
idiv
cs
lahf
mov
dec
xchg
mov
push
sbb
xor
xor
arpl
jmp
add
sbb
ins
push
sbb
repnz
sub
push
outs
sar
cmp
push
mov
(bad)
jne
pop
into
or
sbb
sub
adc
jl
jb
neg
repnz
push
push
cwde
pushf
fadd
cmps
adc
fdivr
xchg
repz
push
sub
dec
sahf
jp
mov
and
and
and
push
fldz
icebp
mov
in
add
loope
or
mov
aas
out
mov
inc
(bad)
sbb
cmp
cmc
inc
data16
int
push
jp
lock
les
pop
sub
adc
outs
into
fwait
adc
mov
ret
pushf
pushf
mov
pop
and
lds
daa
enter
xchg
dec
aam
jbe
(bad)
push
xchg
(bad)
into
pusha
call
and
sar
sub
fild
call
iret
jmp
mov
call
mov
int
or
xchg
and
ret
xchg
or
dec
mov
nop
xor
mov
out
pop
arpl
mov
pop
sbb
outs
dec
mov
mov
xlat
mov
inc
xchg
fs
imul
mov
outs
not
cwde
cmp
xchg
adc
mov
jo
mov
fisubr
sahf
sub
dec
add
add
rdmsr
cs
ror
sbb
mov
addr16
gs
lods
adc
cmc
mov
jecxz
adc
push
xchg
(bad)
in
cmps
jge
or
cmp
out
popa
mov
fld
mov
inc
sub
xor
jmp
inc
sbb
jno
fisttp
movs
jge
pop
mov
xchg
pop
sti
test
pop
out
jns
pushf
mov
jbe
aas
inc
dec
or
arpl
push
sub
jg
lock
push
jnp
shl
stos
sbb
push
inc
cli
push
sbb
imul
cmp
std
(bad)
dec
jo
out
pop
out
push
pop
xchg
xchg
in
pop
mov
jne
imul
push
push
aam
scas
mov
or
stc
mov
cmp
xchg
mov
or
mov
dec
adc
imul
outs
das
add
xlat
shl
xor
dec
xchg
jg
pop
imul
out
in
jno
push
jmp
pusha
mov
sbb
fldln2
mul
call
cmp
les
jle
mov
call
push
jbe
(bad)
xchg
mov
mov
mov
call
data16
cmps
adc
mov
push
jl
outs
std
aaa
push
and
xor
or
xchg
and
dec
mov
xchg
call
push
lods
inc
xor
jmp
dec
test
retf
push
fmul
cld
(bad)
je
or
(bad)
lods
cmps
jl
jge
ds
cli
mov
push
hlt
lods
pop
repnz
fs
(bad)
stc
inc
xchg
inc
xor
out
mov
sbb
fiadd
dec
mov
cmps
or
test
jnp
fdivr
pop
adc
cdq
or
sbb
je
push
out
enter
cld
mov
push
(bad)
gs
pushf
pop
push
and
fidivr
fisub
push
jmp
jae
(bad)
and
lock
bound
ret
xchg
jecxz
or
inc
imul
mov
sbb
and
add
and
out
add
xor
xchg
push
nop
dec
imul
inc
pop
imul
shl
int3
mov
fsubr
retf
rcr
hlt
dec
lds
loop
jmp
mov
repz
unpcklps
outs
movs
jae
sub
adc
jno
xor
or
xchg
shl
mov
push
mov
call
data16
mov
js
sub
mov
out
jne
jo
(bad)
leave
mov
out
inc
in
cmp
pop
inc
lea
inc
jnp
ror
cmp
fadd
push
repnz
push
je
cdq
je
cli
dec
xor
out
sar
gs
test
jmp
movs
push
popf
push
mov
mov
or
mov
mov
das
loopne
out
xchg
popa
sahf
sbb
(bad)
sbb
test
stos
mov
jne
ret
loop
mov
std
mov
dec
movzx
lds
mov
(bad)
lahf
cmp
mov
fxch
and
cmp
out
xor
call
xchg
repz
jle
inc
outs
ds
fidivr
inc
pop
aam
stos
and
rol
sti
jge
movs
pop
sbb
push
mov
loope
cdq
add
sbb
lods
fnsave
stos
xchg
movs
aad
cmp
adc
nop
cmp
mov
pop
jno
and
push
add
es
addr16
cmp
push
shld
fistp
pop
repnz
inc
inc
movs
js
inc
gs
cmc
popa
lods
es
jmp
je
aaa
ss
in
in
xlat
imul
lods
sti
cld
push
iret
shr
cmc
cwde
out
xlat
stos
hlt
stos
test
jle
add
add
pusha
and
jnp
outs
mov
mov
enter
pop
adc
fsub
push
jns
push
(bad)
push
jp
xchg
clc
dec
jns
sub
sbb
cld
fcom
aad
xchg
xchg
gs
(bad)
mul
jp
lock
push
pop
mov
xchg
ins
mov
xor
xchg
cmp
mov
cmp
and
fldcw
mov
in
es
(bad)
push
push
bound
add
(bad)
out
in
movs
push
pusha
jl
mov
arpl
lds
mov
ret
sbb
fisub
push
jge
jnp
push
dec
call
push
sbb
add
dec
xor
(bad)
cmp
pop
push
push
shl
pop
pop
dec
push
mov
push
in
shl
aaa
mov
and
sar
movs
outs
scas
stos
lds
inc
push
daa
outs
jecxz
dec
pop
test
pop
jp
ret
and
push
sahf
leave
shl
mov
aad
clc
cmp
in
shl
pop
jg
add
imul
jbe
(bad)
adc
dec
mov
mov
mov
cmp
and
bound
mov
mov
adc
stos
push
push
push
test
frstor
dec
jne
mov
pop
mov
retf
inc
rol
fnstenv
sahf
mov
cld
jmp
sub
jns
dec
sbb
mov
cdq
cmp
sbb
or
mov
pop
pop
cmp
daa
pop
lods
mov
cli
rcr
test
dec
aam
sti
fnstcw
adc
jge
out
fwait
jo
sub
push
rsqrtps
mov
add
xchg
cmp
jb
cmc
dec
adc
or
dec
bound
jbe
dec
aad
dec
and
add
jne
push
or
call
jp
jo
dec
inc
mov
stos
mov
(bad)
jl
sbb
in
xchg
mov
jge
shl
adc
mov
jo
pop
push
or
jge
out
leave
sbb
adc
loope
xchg
ret
xchg
retf
test
dec
outs
(bad)
adc
push
ficom
cmp
fldenv
xchg
mov
lea
rol
add
push
int
ins
(bad)
fsubr
nop
(bad)
cdq
ficom
test
mov
pop
ss
mov
pop
test
xor
mov
fdiv
outs
adc
add
sbb
aam
push
lahf
jmp
add
les
push
sbb
mov
jmp
mov
nop
xor
outs
imul
add
sbb
ret
call
inc
inc
jl
adc
stos
pusha
cdq
push
fldenv
sub
pop
das
push
jmp
leave
(bad)
int
or
cmp
xchg
pop
wbinvd
fiadd
pop
adc
push
dec
jge
or
shr
xchg
scas
push
ss
mov
stos
popf
hlt
enter
jno
cdq
jp
push
cs
out
xor
or
cmp
mov
add
jge
mul
into
mul
shl
or
cmc
add
jo
xor
(bad)
pop
(bad)
push
shl
push
push
ror
or
(bad)
dec
mov
jg
not
(bad)
aas
or
mov
xlat
jne
arpl
fucomi
dec
out
cmp
lds
push
sbb
fnstcw
mov
call
mov
xchg
pop
sti
xor
mov
jne
lods
lods
jne
in
iret
std
cmp
or
push
mov
mov
jl
xchg
xor
adc
pop
lea
xor
fidivr
pop
cmc
lods
push
mov
cmps
mov
jne
sbb
lock
push
mov
hlt
add
in
pop
push
mov
fst
rol
(bad)
hlt
jbe
in
cmp
push
cmps
jo
ror
push
add
test
rcl
xor
jno
adc
les
add
dec
xchg
sbb
jmp
cmc
dec
jmp
aaa
lahf
xlat
mov
in
jle
mov
pop
mov
mov
inc
adc
inc
dec
rcl
fstp
xor
cs
in
sub
jmp
pop
mov
jmp
sub
mov
or
ins
mov
sub
out
xor
call
mov
push
xchg
push
jg
pop
(bad)
lods
jle
fcom
dec
lahf
mov
inc
icebp
iret
fldenv
add
mov
pop
into
pop
inc
sbb
cmp
repz
pop
mov
(bad)
jns
jmp
sub
shr
cmp
std
pop
out
ret
aaa
jg
popf
or
jmp
pop
pushf
nop
icebp
js
xchg
add
jecxz
dec
push
pop
fadd
add
pcmpgtw
or
or
xor
mov
mov
xlat
sbb
in
dec
mov
sbb
pop
and
xchg
outs
xor
pusha
jns
adc
xchg
pop
inc
lds
nop
ja
xchg
ficomp
iret
cs
lahf
cmp
mov
pop
call
jmp
lods
lods
lahf
xchg
popa
pusha
imul
stc
or
adc
fisubr
mov
(bad)
pop
nop
xchg
and
cmp
and
jns
push
loopne
cmp
sar
fwait
jae
ret
shl
iret
stos
jae
sbb
xlat
pop
(bad)
icebp
jnp
push
movs
xchg
bound
mov
pop
mov
adc
outs
dec
int3
xchg
mov
push
aas
jmp
in
cmp
sahf
mov
mov
mov
pushf
and
rcr
std
xchg
nop
dec
inc
std
sub
jle
inc
mov
mov
xchg
shl
mov
lds
sub
out
mov
mov
push
ins
and
sub
cmp
pop
push
sahf
xchg
pop
jle
dec
sbb
popa
jne
cmp
mov
aas
mov
loope
ror
mov
sbb
push
xor
mov
jbe
or
add
lods
cli
xor
sub
jae
xlat
jl
inc
inc
loope
pop
js
mov
cmovae
dec
pop
loop
mov
adc
inc
sbb
(bad)
sar
xchg
and
mov
call
jmp
mul
test
adc
sbb
fsub
mov
or
pop
adc
inc
fisubr
adc
fstp
push
ja
mov
jns
xchg
ds
icebp
add
neg
inc
loope
and
xchg
in
dec
dec
jnp
cmp
jb
mov
sbb
sub
cli
mov
dec
pop
pusha
fsubr
jns
repz
push
jne
aaa
leave
pop
movs
inc
inc
lds
scas
repz
and
lods
in
stc
in
in
xchg
hlt
mov
loopne
mov
mov
popa
xchg
stos
sbb
lods
jp
adc
int
or
popa
jae
dec
mov
and
rcr
xor
sub
jmp
add
jne
into
inc
sahf
xor
test
and
sbb
push
js
or
cmps
lods
shr
or
out
mov
fcmovne
stos
lds
or
and
cmp
in
call
or
xchg
cs
imul
cmp
xchg
enter
inc
imul
aam
rol
scas
ins
movs
ss
mov
fcomp
fistp
xor
test
mov
push
jno
mov
adc
jle
push
shr
fcomp
cdq
movs
out
loopne
stos
lock
mov
cmp
shl
or
mov
scas
outs
pop
(bad)
fcmove
gs
into
or
add
pusha
sar
aas
mov
fist
lods
mov
outs
lahf
fldcw
mov
sbb
adc
push
fimul
fdiv
pop
pop
(bad)
sar
jnp
les
dec
cs
sbb
leave
test
sbb
sbb
push
mov
inc
dec
lods
dec
add
sub
and
mov
mov
xchg
popf
xchg
mov
jno
in
add
push
(bad)
imul
inc
mov
bound
push
fadd
sti
jg
cmp
xor
pop
out
enter
xchg
jmp
ds
adc
pop
(bad)
shl
mov
ins
ss
pminub
int
test
xor
or
jmp
jl
cld
mov
xchg
je
imul
adc
stos
push
or
jno
cmc
mov
ficom
pop
ficomp
out
mov
adc
jbe
or
aad
mov
xor
es
xor
pop
cli
ret
test
xor
out
xor
dec
cdq
push
cmc
push
inc
sbb
call
dec
mov
mov
jmp
sbb
push
mov
pop
mov
adc
dec
sub
pop
push
mov
cli
out
ret
aad
jecxz
js
in
add
cmps
xor
xchg
push
sahf
xchg
mov
pop
mov
out
and
hlt
jmp
rcr
add
cmp
sub
jecxz
in
xor
sbb
pop
dec
je
(bad)
jnp
mov
mov
test
daa
push
bound
xchg
add
adc
scas
sub
retf
adc
repnz
mov
push
jmp
movs
cld
lea
mov
stos
sti
jne
push
(bad)
jnp
jnp
nop
pop
sbb
cmps
jns
out
in
mov
adc
or
das
dec
mov
stos
enter
xchg
out
jae
rcl
test
inc
pop
popf
fadd
loopne
pop
aaa
repz
or
call
retf
retf
ret
mov
adc
or
push
aas
lods
jne
mov
into
push
repz
mov
or
das
je
ficom
js
inc
cmp
adc
shr
leave
test
adc
jbe
ficom
sar
push
push
xlat
jns
sbb
call
push
cwde
ja
aam
pop
cmp
adc
pop
xchg
ret
adc
fbld
shr
xor
cmp
retf
cmp
fstp
enter
lds
loop
dec
popa
nop
test
push
test
add
out
or
xor
ins
cmp
xchg
pop
xchg
call
or
push
test
jno
daa
loopne
mov
inc
shr
in
(bad)
aad
mov
es
pop
sbb
mov
xchg
test
jle
add
xor
dec
mov
iret
iret
(bad)
mov
(bad)
mov
movs
dec
in
dec
cmps
pop
out
xchg
mov
adc
pushf
cmp
push
sbb
pushf
loope
cmps
mov
xor
iret
movs
sub
out
stc
bound
xlat
gs
(bad)
sub
xchg
shr
add
pop
retf
in
xchg
pop
lods
mov
mov
mov
push
xchg
scas
pop
sbb
adc
or
sub
sbb
addr16
test
mov
mov
fmulp
inc
rol
pop
mov
push
push
push
aaa
mov
repz
gs
es
lods
(bad)
retf
push
imul
adc
inc
rcr
mov
jecxz
mov
dec
mov
jne
and
fcmovnbe
sahf
sahf
mov
pop
mov
sub
lock
pop
sub
cwde
jo
add
(bad)
sub
ror
pusha
sub
or
test
jno
fwait
(bad)
enter
mov
fild
pop
xchg
sub
outs
mov
cmps
icebp
nop
xchg
dec
(bad)
test
adc
sbb
jg
mov
adc
sub
or
cdq
push
xor
mov
pop
pop
pushf
repz
jmp
in
jle
dec
(bad)
xlat
mov
jle
fstp
ds
retf
pusha
jp
adc
test
das
neg
xchg
pop
jp
mov
movs
and
repnz
mov
imul
cld
or
nop
or
bound
cld
icebp
imul
fldcw
pmuludq
into
std
add
aaa
xchg
fdivr
dec
sar
adc
pop
int3
in
vpshuflw
push
ins
mov
xor
pop
int3
sbb
jecxz
inc
push
sub
xchg
arpl
sbb
pop
outs
outs
mov
(bad)
xchg
pop
sbb
dec
rcl
pop
lods
pop
dec
xlat
cmp
adc
push
lods
xchg
xor
or
stc
pop
mov
cmps
into
jno
out
cmps
cli
pop
(bad)
bound
into
mov
aas
out
shr
ror
xchg
push
ret
test
test
hlt
sbb
icebp
cmp
leave
movs
sub
inc
cmp
adc
out
add
aam
xchg
sar
adc
and
cmp
and
shl
out
sbb
dec
jae
imul
cmp
retf
xor
enter
mov
push
inc
and
push
sbb
das
les
mov
daa
add
aam
xchg
add
lock
jl
shl
popf
retf
ins
shl
jl
aaa
clc
sub
ret
adc
add
icebp
adc
out
inc
int3
call
pop
mov
or
xchg
and
and
jecxz
jo
repz
inc
pop
popa
ror
jl
pop
jge
sti
sar
sbb
stc
mov
inc
imul
ins
enter
pop
sbb
mov
imul
popf
sub
inc
push
jo
add
stc
stos
mov
in
sbb
push
and
sar
aam
xor
and
pop
cmp
das
sub
fucomip
retf
pop
ins
jmp
ins
jecxz
ret
dec
xchg
outs
ret
jg
jno
push
rcr
repz
cmps
push
mov
pop
movs
pop
pusha
scas
mov
fsub
adc
push
aad
push
sti
ret
adc
jns
scas
std
out
jecxz
js
clc
fcomp
pop
add
out
fiadd
xlat
jl
cs
icebp
mov
mov
arpl
retf
rcr
pop
fcom
mov
ins
jb
add
add
adc
add
pop
es
out
into
xor
int3
pop
mov
pusha
in
mov
jae
and
movs
mov
gs
fst
cld
dec
push
test
push
mov
lahf
call
jg
push
rcr
xlat
lds
mul
out
fstp
dec
and
loop
mov
jge
fld
lods
imul
jb
jnp
leave
sub
add
xor
mov
pop
sbb
retf
sub
or
inc
arpl
xchg
and
inc
mov
jbe
lahf
pop
adc
mov
xchg
jns
mov
fistp
into
push
add
push
call
xchg
jno
adc
jmp
pop
fucom
jae
loop
push
inc
je
inc
mov
lods
mov
cli
sub
pop
xchg
fnstcw
ror
fld
(bad)
jge
fnstcw
leave
(bad)
iret
xor
sbb
jnp
dec
fwait
(bad)
loopne
xchg
mov
pop
xchg
data16
bound
std
pop
pushf
mov
dec
imul
xchg
or
mov
sub
lock
pop
mov
bound
nop
loop
jbe
out
pop
mov
dec
or
clc
jmp
in
mov
mov
xor
or
pushf
in
add
test
cmc
inc
mov
dec
out
in
pop
adc
out
ficom
fs
(bad)
sbb
jae
outs
out
jnp
iret
or
mov
scas
mov
lods
out
mov
pop
xor
fdivr
lods
sub
ins
jl
dec
ret
adc
sbb
jge
inc
fstp
sbb
fsub
jbe
or
retf
xor
add
cmp
aam
add
cld
xlat
jp
adc
jb
stos
adc
push
sub
mov
gs
and
rcr
fisub
movs
and
cmc
or
leave
hlt
xor
pushf
data16
inc
aam
push
pop
outs
cmp
test
pop
mov
outs
pop
fstp
div
mov
sbb
ins
inc
out
adc
jno
fcmovnb
jae
fsubr
mov
cmc
push
sbb
shr
mov
adc
(bad)
in
cwde
scas
cdq
sbb
sub
adc
sahf
icebp
pop
repnz
loopne
or
add
xchg
dec
inc
daa
out
or
mov
push
stos
hlt
test
jge
mov
repz
sbb
or
cs
xor
push
jae
leave
cmps
sbb
mov
xchg
adc
sub
dec
mov
pop
xor
adc
push
add
xchg
inc
adc
adc
or
or
xor
or
outs
dec
push
dec
inc
dec
rol
arpl
add
adc
cmp
inc
js
enter
movs
jecxz
(bad)
push
dec
dec
cmp
ins
pop
pop
fst
add
and
inc
lahf
cld
xor
test
jne
dec
sub
jns
cmps
inc
dec
sbb
xchg
jbe
dec
pop
movs
mov
cdq
mov
push
or
fld
shl
fdivr
mov
fcom
push
jae
adc
push
xor
jle
in
mov
adc
and
popa
push
sub
nop
rcl
dec
dec
loope
add
dec
mov
inc
movs
(bad)
push
out
pop
popa
aaa
sar
adc
cwde
lock
lock
cld
push
pop
adc
leave
int3
shl
(bad)
aad
jmp
mov
mov
and
inc
aaa
inc
nop
cmp
lea
and
test
jbe
inc
pop
mov
iret
cdq
cmp
cmp
imul
(bad)
fistp
movs
pop
xor
pop
inc
mov
adc
lock
movs
or
dec
mov
in
push
cmps
dec
je
sbb
sbb
retf
jo
push
mov
pop
shr
stos
jmp
ret
add
dec
test
mov
inc
sub
scas
push
ins
and
ror
movs
sbb
imul
ss
inc
js
jecxz
jecxz
and
retf
mov
dec
xchg
sbb
inc
xchg
xor
retf
outs
scas
add
add
out
pop
xchg
push
dec
pop
outs
push
push
adc
inc
cmps
pop
or
inc
movs
mov
lods
aas
xchg
sbb
jmp
push
das
cli
xor
cmp
(bad)
jne
ins
mov
push
push
sbb
xlat
jne
mov
pop
rcr
xchg
fild
push
sbb
mov
out
sbb
push
jnp
jb
add
add
mov
retf
stos
cli
mov
movs
cmp
rcr
jmp
mov
es
jp
jbe
or
dec
xchg
clc
dec
out
dec
push
jge
jg
in
cmps
jns
sbb
mov
mov
add
mov
xchg
(bad)
jns
push
mov
dec
mov
pusha
dec
push
sbb
stos
pop
and
ss
mov
std
jnp
lea
and
push
xchg
cli
mov
outs
mov
xor
pop
ret
out
test
sub
(bad)
fldenv
fs
or
rcr
sub
rol
inc
enter
dec
adc
into
cmp
or
arpl
mov
cmps
mov
xlat
test
arpl
rol
scas
rcr
mov
in
mov
das
pushf
mov
pop
mov
sub
cld
sub
push
sahf
js
mov
dec
jne
push
(bad)
mov
cs
inc
mov
pop
clc
pop
mov
loope
test
(bad)
pop
mov
xchg
inc
cmp
sti
mov
sub
and
pop
sbb
adc
movs
(bad)
jge
xchg
les
add
clc
in
cmp
xchg
xchg
fld
ficom
ss
(bad)
outs
in
imul
fcomp
and
das
pop
cld
in
out
xchg
mov
jnp
out
add
or
shr
and
bound
in
push
or
mov
adc
cmps
ss
in
sbb
fist
or
xlat
fst
in
scas
int
mov
call
and
add
mov
inc
jmp
jns
mov
nop
xchg
mov
cmps
and
gs
stos
inc
jnp
int3
push
push
cs
push
ret
xor
iret
fistp
ss
rcl
loope
or
pop
(bad)
push
leave
out
ror
pop
ins
xor
jg
mov
gs
scas
jnp
mov
add
cmp
lds
test
test
(bad)
push
push
ins
rol
mov
mov
dec
sub
lods
es
push
mov
add
pop
int3
jg
test
push
cmp
inc
aam
ror
add
push
jmp
jmp
repnz
inc
xchg
not
sbb
fsub
leave
in
push
and
cwde
mov
push
xchg
mov
push
movs
xor
outs
addr16
cdq
xor
jmp
leave
cld
dec
xor
cmp
outs
cmp
aad
add
leave
cmp
dec
out
mov
cmp
(bad)
sbb
hlt
sbb
push
out
jno
mov
cs
inc
dec
sub
es
(bad)
push
(bad)
mov
dec
imul
push
xlat
sbb
jecxz
stos
pop
sub
jb
sub
shl
clc
dec
push
aaa
aaa
lods
(bad)
mov
popf
mov
xchg
jno
fild
cmp
scas
(bad)
lock
mov
mov
sub
sub
inc
in
inc
jg
jns
ret
call
mov
adc
stc
retf
mov
pop
in
inc
mov
push
or
add
je
addr16
mov
sub
aaa
push
(bad)
ja
add
test
fisub
xchg
jle
xchg
outs
xchg
jmp
in
(bad)
fld
popa
sbb
sub
dec
out
(bad)
mov
aad
dec
add
scas
pop
cmc
xchg
jne
sahf
dec
pusha
fs
loop
rcl
xchg
push
mov
sti
push
jns
sbb
cld
mov
jne
cmp
test
daa
xchg
and
shl
jecxz
cmps
rol
retf
sysret
push
pop
inc
add
push
test
push
sub
addr16
inc
add
int
sahf
ss
or
(bad)
in
iret
or
push
test
cdq
movs
pop
inc
in
push
scas
lods
addr16
js
cmp
add
dec
xchg
mov
aam
imul
es
call
pop
dec
xchg
retf
inc
repnz
xchg
mov
stos
pushf
cmps
addr16
pop
ds
(bad)
pop
popa
stc
out
dec
mov
mov
sahf
and
xchg
scas
pushf
test
enter
stc
test
adc
ja
sbb
aad
shl
pop
jb
pop
pushf
inc
cmp
stc
fimul
nop
jp
jle
ja
sbb
xchg
adc
daa
cmps
enter
jb
pop
jno
out
bound
js
cwde
xor
das
scas
and
push
jle
jno
cdq
rcr
jne
not
mov
test
or
es
jmp
cmp
add
sbb
rcl
dec
mov
jb
mov
pop
mov
and
dec
cdq
pop
xor
mov
and
add
into
dec
aad
loope
cli
stos
clc
or
les
xor
int
pop
jb
bound
mov
mov
xor
mov
adc
mov
inc
aad
push
dec
pop
cmp
add
jno
sub
jg
(bad)
mov
sub
adc
mov
sahf
xchg
imul
sub
jmp
stc
dec
xor
(bad)
xchg
repz
outs
push
arpl
cli
xchg
dec
lock
pop
jns
xchg
pop
sub
mov
test
in
pop
pop
ja
dec
shr
fsubr
or
push
jmp
or
arpl
mov
test
mov
adc
mov
(bad)
int3
adc
xchg
mov
repnz
iret
das
sbb
sub
sbb
push
mov
in
cmp
call
lea
into
or
adc
pusha
mov
fnstsw
arpl
adc
rol
jae
mov
cmp
jge
cmps
xchg
add
call
(bad)
cmc
adc
dec
or
jmp
adc
stc
inc
rcr
hlt
cli
adc
xor
jae
mov
fldenv
and
pop
into
bound
and
imul
test
mov
inc
or
leave
enter
pop
xchg
mov
not
movs
mov
push
call
mov
or
cld
adc
push
es
xlat
inc
test
es
aad
lods
cmp
ret
mov
nop
addr16
popf
or
dec
push
retf
scas
inc
push
or
mov
sub
jecxz
out
jae
pop
add
stos
js
sub
pop
and
jg
scas
push
cmps
push
lods
call
push
out
adc
push
inc
icebp
aaa
jl
adc
mov
mov
add
mov
mov
and
jmp
push
stc
or
repz
push
retf
push
cmc
jmp
sub
std
div
jecxz
clts
ror
jnp
xor
(bad)
jno
or
test
jbe
cmp
xchg
inc
inc
ret
sbb
mov
fs
push
nop
fcomp
and
push
lods
mov
(bad)
sub
xchg
ss
push
sub
js
cmp
(bad)
scas
jg
jmp
pop
mov
and
sbb
xchg
ins
mov
mov
ror
adc
lahf
mov
(bad)
test
mov
addr16
rcr
(bad)
push
push
jmp
push
and
dec
xchg
lea
ficomp
iret
xchg
dec
fucom
popa
retf
xchg
test
pop
mov
inc
js
and
or
in
idiv
hlt
imul
sbb
jb
push
sbb
or
inc
pop
and
out
(bad)
das
bound
lds
mov
inc
adc
scas
push
xchg
xlat
cli
movs
push
mov
loope
mov
aas
lods
or
xchg
lods
scas
aam
cvtpi2ps
int
arpl
and
movs
iret
xchg
or
fucomip
push
mov
sub
pop
test
ins
pop
mov
cmp
std
mov
xor
outs
sub
push
fdivrp
lahf
retf
inc
outs
ds
push
xchg
mov
inc
sub
imul
in
ret
into
sbb
scas
(bad)
loope
jge
inc
call
xchg
jmp
add
cs
das
stc
cmp
push
and
inc
fwait
retf
sub
ficom
popf
dec
icebp
pop
xchg
data16
push
repz
sub
jnp
sub
cdq
xchg
adc
fwait
ja
cmp
sbb
pop
nop
mov
lock
repz
inc
jmp
cmp
inc
sub
test
addr16
or
cwde
movs
jne
xor
sahf
sub
and
cmps
fbld
mov
mov
imul
call
outs
ror
add
jae
pushf
sub
xor
int
loope
jle
cmp
aaa
gs
int
push
ja
loope
(bad)
fidivr
imul
pusha
mul
xchg
sub
xchg
std
push
movs
mov
or
jmp
shl
repnz
jmp
xor
test
adc
jmp
leave
xchg
scas
mov
adc
push
jle
nop
ja
add
clc
jne
scas
stos
sub
aaa
sti
jns
sti
jp
push
les
loopne
jno
sub
jge
xchg
cs
std
mov
sub
xchg
or
(bad)
es
loop
and
(bad)
popf
aaa
hlt
dec
pop
add
fadd
(bad)
jge
mov
add
or
das
jb
gs
add
aad
in
dec
iret
cmc
iret
in
jo
inc
call
clc
je
lods
test
fcomp
dec
outs
fcomp
out
mov
test
xor
test
(bad)
fstp
inc
fcomp
movs
and
repz
and
hlt
or
sub
sbb
fldcw
or
push
jecxz
xchg
fist
pop
mov
push
je
dec
loop
ret
jno
aam
sub
cld
cmp
into
lahf
icebp
inc
cmp
pop
dec
popf
inc
and
jecxz
stos
pop
(bad)
sub
inc
pop
and
sub
ret
adc
push
push
enter
xchg
mov
pop
jne
loop
or
mov
fdivp
mov
mov
fidivr
or
xchg
dec
dec
dec
sub
mov
add
sbb
lods
test
sahf
loopne
or
push
xchg
pop
cli
ds
test
stos
leave
xchg
aaa
lea
rcr
addr16
rol
pushf
dec
sar
jo
outs
or
xchg
adc
mov
(bad)
jmp
es
ins
mov
ret
mov
pop
jecxz
lods
inc
or
std
call
push
lock
ds
icebp
fimul
mov
pusha
ror
or
(bad)
xor
sub
dec
sub
ja
lods
push
aad
push
loop
mov
dec
pop
idiv
cmp
mov
add
int3
or
jecxz
pusha
inc
sub
shr
inc
gs
ins
fs
es
or
(bad)
outs
xlat
add
cmp
pop
cmp
(bad)
data16
aad
fstp
jno
fmul
and
ret
inc
adc
and
leave
mov
xchg
repnz
ror
out
retf
mov
mov
or
ins
mov
rcr
mov
or
sbb
es
loop
jo
adc
jg
sbb
push
imul
pop
call
dec
das
pop
enter
(bad)
pop
out
adc
test
or
sub
call
popf
pop
les
jo
dec
or
loopne
mov
cmp
inc
pop
mov
xchg
sub
test
scas
mul
sub
xchg
dec
leave
cmps
dec
bound
gs
push
(bad)
sbb
mov
dec
(bad)
adc
leave
retf
lea
call
jmp
call
pop
sub
shr
icebp
cs
std
cmp
popa
push
jae
inc
add
pop
aas
loopne
and
ds
mul
mov
dec
sti
mov
sbb
xchg
mov
xor
cmp
into
add
aas
fnstsw
mov
daa
jno
mov
jno
push
push
pop
and
inc
movs
mov
push
dec
test
inc
retf
lds
in
dec
nop
xchg
xlat
(bad)
sub
jl
std
inc
int3
test
or
retf
arpl
or
or
icebp
inc
sub
cs
(bad)
xchg
cmps
daa
mov
pop
nop
les
mov
inc
add
mov
repnz
shl
adc
mov
push
aaa
sahf
cdq
(bad)
sub
jle
sbb
mov
or
inc
jecxz
pusha
cmps
inc
iret
mov
imul
in
inc
ret
test
adc
sub
and
movs
sub
push
retf
out
dec
push
retf
xor
adc
dec
xor
shr
dec
push
dec
mov
xlat
popa
std
dec
jns
dec
add
les
sub
sub
(bad)
bound
loopne
cmp
scas
ds
clc
les
ins
inc
out
mov
dec
fstp
(bad)
add
xchg
in
inc
lea
rol
call
xchg
adc
cmp
add
bound
retf
cwde
mov
test
mov
jb
and
cmovns
add
in
push
fwait
test
sbb
push
movs
add
repz
and
shr
(bad)
ds
ja
and
ror
out
add
loope
std
mov
(bad)
out
cmc
fldl2e
addr16
(bad)
outs
pop
push
cwde
mov
das
inc
pop
push
and
inc
test
mov
mov
and
jmp
jg
and
xchg
(bad)
jmp
pop
jo
jo
idiv
add
(bad)
shl
ins
les
fscale
cmp
jbe
dec
sub
inc
xchg
test
fnsave
jae
or
xchg
sbb
(bad)
xlat
push
stos
imul
fsub
inc
out
sub
scas
mov
not
push
pop
xchg
(bad)
imul
std
xchg
dec
stos
mov
outs
in
pop
jbe
addr16
mov
sub
repz
mov
cmps
fs
xchg
out
movs
loopne
and
or
mov
imul
pop
dec
add
mov
cmps
test
test
popf
cmps
xor
dec
icebp
in
mov
adc
add
arpl
dec
dec
mov
mov
cmp
mov
aaa
cwde
outs
push
inc
pusha
inc
enter
push
stos
dec
aam
lds
push
loopne
pop
cwde
sbb
jge
cmps
call
mov
add
and
push
jbe
data16
adc
mov
add
frstor
cwde
mov
mov
(bad)
call
xchg
jno
jno
mov
js
std
inc
arpl
mov
xchg
leave
leave
rcl
ret
add
pop
jns
icebp
and
fbstp
xchg
cmp
xor
pop
xor
inc
adc
loope
adc
add
dec
ja
dec
ja
mov
jl
pop
add
lods
fimul
xor
mov
aad
add
sub
xor
and
jae
out
aas
cmp
push
retf
loope
ret
push
(bad)
dec
leave
mov
ror
ins
jp
push
lahf
add
and
addr16
rol
cmps
and
stc
push
jl
fucomi
pop
(bad)
adc
out
inc
ins
outs
iret
ror
(bad)
aad
gs
(bad)
and
rcl
jmp
ins
xor
and
int
cmp
(bad)
mov
and
xor
leave
jg
adc
xchg
mov
imul
add
inc
leave
cmp
cmp
fucomp
(bad)
or
dec
pop
jnp
lds
push
(bad)
jne
mov
aam
cld
scas
pop
dec
daa
add
pop
imul
in
add
test
mov
je
sbb
cmp
jns
push
cmp
cmovp
jl
mov
fcomp
adc
imul
xor
iret
xchg
inc
jbe
inc
mov
stc
test
popa
sahf
and
add
and
je
or
call
inc
out
sbb
or
mov
mov
jmp
mov
sbb
jecxz
or
push
xchg
in
adc
mov
iret
mul
or
dec
xor
sbb
cmps
fsubr
or
je
jae
sbb
inc
and
or
and
(bad)
fwait
pop
test
fcomp
jnp
cmp
jmp
jno
jle
sbb
sub
mov
dec
dec
ja
jle
push
int
dec
pusha
aam
inc
add
popf
ins
pushf
mov
in
pop
or
ins
xchg
sbb
imul
shr
xchg
cmp
ins
xchg
out
(bad)
test
adc
sub
mov
pop
fucomip
je
and
jmp
mov
or
xchg
popa
(bad)
test
mov
(bad)
cmc
(bad)
not
xor
stc
xlat
adc
fnstsw
stos
fst
sbb
add
adc
nop
xor
pop
mov
cs
xor
call
lahf
adc
sbb
outs
(bad)
mov
or
xor
ss
bnd
adc
jbe
fmul
dec
or
xchg
xlat
and
pop
data16
lods
xchg
nop
adc
fs
and
or
sub
or
rcl
js
cmp
dec
sub
mov
sahf
iret
fidiv
daa
mov
push
out
push
add
leave
daa
iret
(bad)
(bad)
push
jg
fnstenv
or
jnp
sbb
sbb
sahf
in
fdiv
(bad)
ja
and
popa
dec
mov
mov
xlat
(bad)
aaa
push
pushf
sbb
test
sahf
mov
retf
scas
popa
lock
jb
fisttp
pop
popf
ds
ins
adc
or
adc
jbe
(bad)
xor
push
cmp
jno
sbb
psrad
sbb
inc
jecxz
retf
xor
cmp
jle
shl
xchg
mov
pop
(bad)
in
mov
out
xor
(bad)
pop
fcom
add
and
mov
mov
ficomp
stc
or
push
jo
ins
mov
mov
fs
loop
lods
sub
scas
mov
popa
loope
in
(bad)
and
imul
out
retf
jecxz
shr
in
push
dec
lods
sahf
sar
xor
test
mov
or
js
sub
push
mov
xchg
inc
inc
ins
and
sbb
mov
mov
in
repnz
mov
cmp
lea
inc
hlt
jnp
cwde
ds
xlat
dec
jmp
jmp
push
mov
gs
inc
ss
mov
sub
or
movs
neg
cmp
sub
pop
les
adc
sar
movs
add
repnz
mov
sbb
mov
mov
adc
sub
jno
add
shl
xor
add
adc
paddsb
sub
iret
inc
sbb
push
cwde
mov
shl
retf
mov
sbb
fist
xchg
stos
rcr
cmps
lods
fild
pop
cwde
mov
test
xor
add
pop
comiss
dec
jne
xor
setle
out
(bad)
sbb
in
cdq
sub
ja
push
push
dec
dec
mov
mov
daa
imul
unpcklps
jmp
clc
out
mov
or
ins
into
cmp
fsub
xor
adc
into
mov
inc
mov
sub
inc
out
sub
in
jmp
dec
or
or
inc
mov
dec
mov
push
mov
sbb
mov
xchg
mov
pushf
ds
stos
or
mov
push
adc
jl
xchg
xchg
fwait
jle
push
and
outs
dec
add
je
jbe
adc
add
in
jle
ja
leave
adc
popf
xchg
xor
pop
add
cli
mov
cmc
mov
dec
adc
pop
xchg
xor
jl
dec
cdq
bound
dec
loop
ror
or
cmc
(bad)
push
mov
sbb
hlt
lahf
hlt
ds
jmp
or
xor
ja
popa
je
jno
inc
das
and
inc
push
out
inc
jne
pop
pop
mov
xchg
push
test
pop
jmp
(bad)
mov
cmp
jmp
pushf
mov
jge
dec
sbb
mov
cmp
test
frstpm(287
mov
jbe
pusha
mov
xor
pop
xlat
or
nop
(bad)
movs
mov
push
fldenv
ins
sahf
jns
jmp
mov
jns
jg
cld
stos
scas
(bad)
push
and
cdq
fs
push
cwde
and
lahf
mov
inc
mov
and
pop
push
mov
jbe
dec
inc
cmp
xor
fisttp
call
fadd
sub
push
outs
retf
(bad)
addr16
arpl
xchg
fs
or
sub
inc
xchg
pop
xchg
out
popa
cli
or
scas
pop
lock
jl
enter
popa
sub
mov
fs
sub
xlat
cli
(bad)
sbb
push
clc
mov
addr16
int3
dec
push
pop
pop
mov
imul
xchg
sbb
pop
cmps
mov
xlat
inc
mov
and
int
jmp
loope
inc
sub
xor
mov
pop
lds
stos
daa
xchg
xor
test
push
dec
xlat
cmp
imul
sbb
or
test
out
push
sub
inc
test
dec
mov
mov
xor
jmp
imul
add
push
sti
adc
mov
stos
mov
mov
(bad)
out
cmp
sbb
push
fwait
sar
neg
cmp
cmp
scas
mov
dec
clc
cmps
pop
dec
mov
and
scas
stos
sbb
lea
pusha
adc
gs
inc
sbb
lods
sbb
out
outs
iret
mov
(bad)
dec
mov
jecxz
mov
cmps
xlat
jnp
popf
xchg
lea
or
jnp
dec
sub
out
in
call
inc
lahf
dec
pop
add
loop
fstp
es
enter
mov
jno
push
bound
cs
fldenv
daa
fcmovnbe
(bad)
jl
les
mov
adc
sub
xor
pusha
dec
push
mov
test
and
addr16
rcl
inc
cmc
imul
xchg
adc
pushf
scas
ror
sub
outs
sbb
sahf
or
rcr
xchg
and
dec
std
pusha
mov
push
push
mov
jg
les
ins
sub
nop
jle
mov
add
dec
int
inc
js
xchg
movs
pop
cdq
pop
stc
dec
iret
inc
dec
mov
lods
aas
movs
(bad)
div
push
inc
fld
ja
inc
push
mov
jb
aad
push
mov
cmp
mov
mov
ret
adc
adc
into
test
scas
and
test
std
test
call
mov
xor
movs
pop
fidivr
push
jge
and
adc
xchg
bound
nop
mov
stos
adc
jecxz
mov
jne
xor
out
fld
dec
push
pop
(bad)
mov
adc
xor
int
retf
push
sbb
(bad)
xchg
jbe
test
arpl
(bad)
out
test
jmp
iret
add
int3
jns
aas
sahf
cdq
and
in
jno
cwde
sbb
les
add
inc
inc
vmaxpd
mov
ret
adc
xchg
out
cmp
pop
cli
jne
ins
cdq
add
test
clc
mov
xchg
call
xchg
and
lds
and
out
mov
out
shl
rol
jecxz
cmp
js
sbb
push
push
imul
add
scas
or
lahf
xor
out
mov
mov
add
call
outs
fs
addr16
xchg
call
cmps
aad
les
xchg
push
popf
ffreep
lods
sbb
sbb
ins
cli
aaa
or
xchg
loop
sbb
je
sar
or
test
mov
push
aam
jp
inc
sbb
mov
ficom
sub
mov
xchg
sbb
pop
pop
push
fld
(bad)
push
push
out
fiadd
cmp
and
(bad)
call
push
lods
pop
scas
(bad)
fwait
mov
adc
es
fidivr
pop
add
int3
mov
stos
add
fiadd
xor
xor
je
mov
mov
jmp
jns
adc
mov
adc
add
or
or
mov
popa
cmp
xchg
jnp
xchg
fs
add
xor
mov
lock
fcomi
test
xchg
addr16
das
addr16
adc
adc
or
es
out
out
xchg
retf
dec
jno
(bad)
data16
and
xor
loope
jmp
dec
inc
outs
ds
retf
repz
lock
mov
pop
ficomp
xchg
sbb
fldcw
inc
(bad)
imul
jmp
add
xchg
xor
pop
sbb
stc
mov
adc
push
mov
mov
into
mov
cmps
xor
dec
mov
sbb
mov
ret
mov
call
dec
movs
repz
jne
sbb
les
jae
ja
hlt
adc
xor
and
into
cmp
pop
es
xor
jae
xor
int
out
mov
mov
das
xchg
mov
sbb
push
fs
add
popf
scas
mov
xor
mov
lahf
fistp
jl
sar
es
mov
fadd
jmp
je
pop
pop
or
inc
test
xor
ss
mov
jmp
shr
gs
pusha
mov
or
adc
aaa
pop
hlt
or
fdiv
stos
imul
loop
popf
cwde
xchg
dec
stos
dec
(bad)
lock
pop
adc
dec
and
movs
inc
aam
or
into
push
mov
inc
mov
mov
ret
dec
inc
scas
sub
adc
mov
push
dec
mov
cmpps
push
leave
xchg
push
push
ror
cs
setae
and
ror
nop
push
fistp
in
ds
add
call
jne
ds
mov
movs
mov
and
(bad)
enter
lods
push
pop
rcl
lahf
mov
mov
mov
and
xor
(bad)
out
sub
cli
jg
in
dec
push
int
xor
out
movs
into
push
pop
sub
sahf
xchg
pop
stc
sbb
pop
sub
sbb
inc
push
and
adc
dec
and
adc
and
sar
cdq
jg
push
popa
xchg
mov
pop
setae
loop
sub
and
popa
cmp
push
xchg
lods
ficomp
in
sub
in
ret
in
je
or
sub
adc
lea
nop
mov
push
add
dec
clc
ficomp
test
repnz
push
scas
mov
sub
inc
lods
xchg
nop
sub
fdivr
lods
loope
stos
test
pop
(bad)
fld
scas
mov
inc
mov
out
xor
lds
sub
sar
aad
fwait
pop
or
ror
aaa
adc
clc
lds
or
adc
xchg
mov
loopne
dec
addr16
cli
dec
jle
jecxz
loope
mov
xor
mov
je
adc
es
xor
jo
push
test
mov
pop
sub
push
xchg
shr
adc
dec
es
dec
pcmpeqw
pop
xor
std
inc
xchg
movs
mov
dec
sub
adc
push
xchg
stc
dec
add
jle
(bad)
mov
and
lea
jbe
adc
xchg
push
shl
push
and
aad
xor
test
add
add
in
cmp
iret
xchg
mov
or
mov
pop
inc
xchg
(bad)
cmc
scas
loopne
mov
ins
and
cdq
mov
jnp
loope
sbb
lods
pop
sbb
inc
fdiv
in
aam
pop
inc
scas
xchg
pop
repz
call
ins
cmps
xchg
add
scas
js
push
push
dec
rcr
jb
mov
push
adc
and
mov
lahf
mov
pop
cmc
sbb
add
push
pop
mov
outs
in
cdq
out
sub
push
adc
xor
stos
inc
data16
nop
inc
aas
out
inc
dec
clc
pop
scas
fdivr
mov
(bad)
repz
xchg
int3
and
or
xor
mov
xchg
retf
mov
paddb
fsub
mov
sub
dec
mov
stc
xchg
cld
sbb
in
xlat
cmp
dec
jb
scas
(bad)
or
xor
pop
(bad)
fadd
mov
mov
and
or
add
inc
gs
test
(bad)
push
idiv
ins
sbb
sar
shr
jmp
(bad)
cli
sbb
jae
jg
mov
mov
inc
xchg
ret
sub
add
xor
push
inc
mov
sub
pop
jo
mov
jae
sub
loopne
movs
fmul
dec
pop
jns
xor
das
arpl
xchg
add
out
pop
add
mov
das
enter
dec
bound
in
jb
ins
cmps
adc
fisub
bound
jne
dec
fsub
aas
pop
adc
and
cmp
lods
popf
xchg
lds
pop
sahf
test
push
inc
arpl
mov
mov
out
xor
mov
enter
loopne
(bad)
push
dec
cli
jge
mov
adc
mov
adc
lock
lahf
xchg
cmp
push
aas
arpl
addr16
push
or
lock
and
push
aas
push
scas
push
jne
mov
jo
pop
arpl
add
mov
retf
icebp
(bad)
xchg
pop
ror
lahf
xor
sub
and
pop
sub
cmps
call
mov
pop
cmps
(bad)
retf
or
retf
imul
outs
mov
xlat
data16
in
std
mov
lods
sbb
and
les
outs
in
stc
xor
and
mov
(bad)
mov
ds
push
outs
or
popf
test
test
mov
xchg
sbb
adc
mov
and
inc
imul
mov
into
hlt
pop
test
(bad)
leave
lock
loop
ret
retf
xor
jnp
(bad)
retf
jbe
fsubr
ror
xchg
sub
xchg
das
mov
shl
fldcw
sbb
dec
cld
mov
jmp
in
sbb
(bad)
std
jmp
loope
mov
ins
int
jo
mov
cdq
stc
repz
push
pop
mov
inc
and
loop
lods
fucomp
or
test
pop
push
xor
cmp
fidiv
mov
mov
xchg
sbb
imul
out
adc
mov
out
sub
cwde
popa
popa
outs
lea
div
out
mov
jmp
cmp
push
imul
test
jb
shl
xor
mov
dec
xchg
cli
dec
push
pop
mov
jbe
outs
sbb
sahf
jne
enter
and
push
cmp
scas
jno
sub
fwait
mov
or
fld
dec
addr16
sbb
and
in
inc
rcr
xor
mov
xor
jae
shl
jae
cmp
jmp
jg
fld
and
sub
or
sub
dec
pop
jle
xchg
xchg
or
pop
repnz
add
stos
jecxz
sbb
pop
fucomp
push
mov
cmp
(bad)
dec
mov
cdq
xchg
sbb
sar
push
pushw
shl
fcom
fdivr
mov
sbb
arpl
mov
xor
adc
frstpm(287
jg
inc
push
ss
or
pushf
pop
mov
call
jmp
test
dec
neg
xchg
(bad)
lock
jmp
sub
test
movs
lock
ret
nop
mov
cmp
adc
mov
in
adc
cmp
and
mov
sub
pusha
stos
xchg
jo
inc
jmp
cdq
xlat
push
stos
fchs
or
adc
mov
jne
mov
adc
sub
add
shl
fnstsw
adc
(bad)
aaa
int3
leave
jnp
cmp
pop
retf
inc
(bad)
adc
and
aas
in
aas
jle
test
cmp
(bad)
mov
jne
iret
adc
mov
popa
ret
push
push
arpl
mov
or
add
mov
pop
add
je
or
adc
je
bnd
stos
imul
push
xchg
(bad)
(bad)
mov
cli
push
jbe
cs
outs
dec
jo
icebp
gs
dec
imul
test
pop
jmp
aas
sub
test
sbb
mov
sbb
jno
out
xor
adc
ja
xlat
mov
nop
(bad)
xchg
pop
adc
push
sub
jmp
mov
adc
sbb
sbb
movs
rcl
cld
inc
sar
pop
cdq
push
mov
inc
call
pop
mov
repz
aas
xor
mov
pop
sbb
push
or
pop
sbb
adc
es
jle
movs
lahf
mov
mov
and
fs
cdq
lahf
stos
out
(bad)
call
xor
jne
mov
stos
push
lds
not
adc
mov
mov
loope
mov
add
ret
mov
sub
imul
adc
or
mov
cmp
dec
mov
shr
test
and
in
mov
or
dec
jmp
sub
xchg
test
mov
movs
aam
inc
ret
dec
mov
ja
(bad)
dec
or
mov
icebp
sahf
ds
test
jle
xor
dec
mov
arpl
sub
push
popf
push
adc
out
xor
pop
pop
movs
dec
loopne
loop
sahf
xchg
inc
into
das
ds
and
or
cs
mov
xchg
inc
or
push
mov
mov
idiv
add
enter
xchg
ret
fnstenv
lahf
fcom
in
popa
mov
pop
ror
shr
and
mov
jmp
mov
sub
fisttp
std
and
enter
adc
ret
ds
pop
aaa
test
cmps
cdq
dec
xchg
scas
stc
xchg
test
push
xchg
and
ins
cmp
dec
mov
addr16
adc
es
and
cvtps2pi
and
dec
sub
sbb
xlat
test
xchg
ds
mov
addr16
adc
or
aaa
fcom
adc
xchg
sbb
dec
imul
stc
cmps
popa
pop
push
scas
les
pop
mov
(bad)
sbb
outs
retf
clc
ds
mov
das
inc
xor
loop
push
mov
jne
dec
imul
not
ja
icebp
jl
mov
xor
lods
jmp
maskmovq
test
mov
aam
das
and
repz
push
and
nop
sar
jbe
xor
retf
dec
ret
push
pop
cli
movs
mov
ins
pushf
mov
xchg
stos
and
xchg
dec
mov
mov
scas
je
fldcw
ja
rcr
or
cwde
dec
pop
or
fld
int
pop
mov
mov
dec
iret
pop
fwait
or
push
sbb
test
inc
cmp
test
into
add
jbe
pop
lahf
call
lods
jle
ror
sub
or
mov
out
retf
mov
xchg
inc
(bad)
jmp
push
sbb
test
sub
(bad)
icebp
sub
mov
mov
cld
xchg
pusha
push
sub
jle
cdq
add
int
sbb
inc
bound
aad
xor
(bad)
adc
arpl
jge
mov
cmps
retf
retf
adc
push
dec
stos
jp
pop
pop
icebp
(bad)
jne
aas
mov
pop
shr
push
mov
or
in
sti
loopne
retf
rcl
inc
mov
dec
sbb
out
xchg
cmp
xchg
or
xor
add
fnstenv
push
sbb
out
sub
ret
xchg
mov
lods
les
jge
ja
test
sbb
cmp
lahf
test
fdivr
jecxz
pop
inc
daa
pextrw
push
and
push
mov
pushf
push
ins
dec
adc
lock
xchg
ja
xchg
mov
ds
fsub
sti
cwde
add
adc
cwde
stos
cmp
sti
xchg
mov
imul
fldln2
push
scas
int3
push
test
lock
fs
(bad)
mov
mov
push
pop
add
or
push
gs
jg
xchg
arpl
in
jmp
fild
mov
xor
imul
sahf
jo
jp
inc
pop
push
xchg
mov
jg
pop
mov
std
cs
enter
call
scas
sub
shl
pop
mov
in
ret
cs
add
sub
repnz
mov
daa
pop
bound
fld
sbb
sub
xchg
test
xchg
out
mov
rol
fild
jno
push
not
aam
mov
ret
sar
in
out
jns
inc
dec
cmp
xor
xor
mov
xor
dec
adc
fld
cdq
bound
les
inc
push
pop
jb
inc
in
mov
push
add
loop
xchg
test
xor
mov
xchg
cmc
mov
pushaw
push
mov
jae
retf
jb
hlt
rcr
add
jo
jge
push
in
mov
(bad)
fnstsw
out
aas
jp
aas
push
pop
inc
and
repz
popf
inc
test
aas
test
or
mov
dec
fsub
sbb
(bad)
and
mov
or
dec
push
mov
add
inc
lock
cmps
xchg
push
pop
xchg
mov
jle
xchg
sti
shl
sub
das
(bad)
sub
stos
sub
cmp
pop
mov
cmp
dec
cld
pop
xchg
ins
icebp
in
pop
out
sub
sbb
stos
stos
xchg
imul
sub
push
cmp
mov
and
mov
xor
or
iret
stos
scas
or
push
ins
fstp
out
jnp
std
or
xchg
push
ret
inc
arpl
push
retf
jb
std
call
cmps
bound
or
call
pusha
rep
stc
iret
mov
(bad)
cmc
leave
xor
pushf
imul
inc
sbb
fidivr
imul
pop
out
inc
mov
leave
mov
ss
data16
jg
xchg
mov
int
paddq
dec
aaa
ins
push
fwait
sub
cmp
call
adc
in
adc
sub
repnz
xor
lds
cld
jp
pop
daa
js
movs
lods
out
adc
xchg
lahf
loopne
or
das
xchg
(bad)
out
or
dec
test
mov
jae
xor
outs
xor
data16
mov
cmp
cmp
pusha
daa
mov
shld
push
sub
push
xchg
cld
pushf
fistp
jecxz
xor
push
sbb
iret
stos
(bad)
push
imul
popf
sbb
enter
call
xchg
out
ret
xchg
mov
jmp
inc
(bad)
sub
add
(bad)
cdq
in
pushf
mov
cmc
je
retf
push
push
or
hlt
loope
xchg
loope
mov
je
pusha
xchg
sbb
pop
jge
add
mov
jge
push
mov
imul
(bad)
enter
and
scas
hlt
inc
call
jo
lock
jmp
pop
jmp
stos
push
xchg
lahf
shr
aam
xor
int3
mov
xchg
sub
cmp
cmps
jns
adc
mov
std
lds
sbb
enter
mov
inc
mov
add
add
sbb
test
pusha
add
adc
push
xchg
add
add
dec
out
mov
rol
mov
xor
test
dec
clc
or
xor
arpl
data16
nop
mov
(bad)
in
aam
popf
sti
sub
cmp
or
in
add
data16
cld
aam
add
mov
xchg
popa
inc
push
call
mov
test
xchg
and
je
jl
adc
xlat
jp
dec
pop
dec
add
call
out
sub
xchg
cld
outs
add
fbld
imul
cmp
xchg
jp
std
mov
dec
mov
inc
(bad)
push
jnp
push
jns
test
push
dec
xor
and
xor
add
mov
psubq
inc
(bad)
mov
pop
(bad)
lea
sbb
pushf
fdivr
cld
add
or
pop
xor
not
mov
mov
pop
mov
stos
add
fild
call
out
ret
repnz
mov
das
push
test
adc
push
cmp
(bad)
xchg
popa
pusha
(bad)
push
sub
jb
sar
lea
pop
fimul
arpl
popa
jmp
xor
sub
rcl
cmps
loop
cmp
test
sbb
cmps
repnz
sbb
mov
cmp
adc
push
addr16
pop
xchg
daa
pushf
push
jns
adc
adc
mov
xor
inc
push
cmp
or
lods
pop
into
push
ror
xchg
addr16
leave
push
es
inc
mov
push
sbb
fwait
in
(bad)
rol
cmp
sbb
cmp
inc
jmp
movs
add
mov
add
retf
test
xor
iret
rcl
(bad)
mov
xor
je
push
repz
rcl
inc
mov
mov
dec
pop
jne
fs
into
inc
pop
gs
stos
fidivr
jae
or
pop
shl
dec
dec
jge
fwait
jnp
stos
scas
push
push
cmp
inc
loopne
xchg
stc
out
mov
push
cli
mov
mov
cs
cmp
int
es
fwait
inc
adc
fidivr
add
(bad)
les
sub
adc
cmp
call
push
dec
stos
ret
leave
inc
jmp
sbb
inc
push
fiadd
jg
or
ret
movs
sbb
fsub
lea
push
inc
daa
mov
lock
inc
in
pop
out
adc
jmp
xor
js
in
adc
or
fstp
lahf
xchg
out
std
sar
jno
shr
jl
mov
mov
jp
loop
xchg
pop
xchg
aas
stos
jne
aam
sub
xchg
pop
push
xor
push
pop
mov
adc
data16
xchg
nop
and
and
mov
data16
mov
inc
xor
sar
out
jge
mov
fsubr
in
and
das
jmp
or
mov
xor
cmp
mov
adc
xor
rcr
adc
lds
outs
out
sbb
aaa
loop
add
je
mov
add
fisttp
cmp
pop
xlat
shl
cmc
xor
push
sti
inc
out
xor
sub
loope
push
(bad)
or
sbb
(bad)
add
test
dec
fisttp
dec
xor
std
xor
fmul
sbb
xchg
sub
out
push
fidivr
sbb
fisttp
cmp
mov
dec
ins
sub
push
jae
fs
adc
enter
or
mov
push
adc
bound
adc
xor
jmp
push
sbb
daa
jecxz
pop
or
lods
mov
pop
or
push
lahf
xchg
xor
(bad)
jmp
arpl
dec
ret
je
mov
or
(bad)
in
sbb
adc
push
cmps
data16
imul
cwde
nop
ins
mov
sbb
std
add
mov
sahf
loope
ss
jae
loope
fwait
movs
ja
sbb
fnsave
ret
cmp
ds
push
push
adc
ss
call
jmp
jg
or
gs
call
sub
not
int
jno
aaa
lods
pop
xchg
pop
jae
inc
mov
xor
stos
or
nop
scas
xchg
fnstcw
fsubr
in
(bad)
xchg
fsubr
imul
in
mov
xchg
cwde
xor
dec
fidiv
mov
cdq
xor
repz
jno
ds
sub
inc
xchg
(bad)
mov
jae
jb
dec
test
lahf
add
adc
dec
sbb
sub
dec
xor
dec
sbb
lods
dec
xor
jp
scas
loope
out
cdq
push
push
push
(bad)
icebp
ds
push
or
popa
cmp
frstor
pushf
stc
lds
dec
neg
ins
jnp
(bad)
mov
sti
fisubr
sub
into
clc
add
cmp
inc
sar
cld
ja
jno
loopne
inc
mov
pop
push
mov
ins
mov
imul
(bad)
mov
icebp
scas
push
adc
dec
cli
cs
xchg
cmp
push
clc
jbe
test
cmp
in
adc
dec
retf
icebp
push
ja
mov
ja
jl
mov
xlat
loop
test
hlt
es
push
xor
cs
sub
fcmove
mov
jae
pop
mov
dec
push
retf
mov
into
loope
jge
lods
sub
mov
jb
push
sbb
inc
imul
jp
js
mov
mov
cmp
scas
rol
inc
(bad)
je
fs
pusha
(bad)
std
xchg
call
jg
pop
cmc
outs
or
repnz
dec
sub
pop
pusha
sub
pop
ins
outs
push
popa
ss
pop
sub
inc
sub
push
retf
add
lahf
cmps
jnp
dec
neg
popa
lea
push
std
jb
ins
xchg
pop
enter
std
mov
cdq
div
test
fld
and
pop
bound
and
sbb
daa
je
inc
dec
fst
out
std
inc
adc
pop
mov
mov
(bad)
(bad)
adc
sbb
mov
sub
in
pmullw
(bad)
icebp
std
pop
iret
cli
mov
sbb
dec
lds
fiadd
ret
mov
push
xchg
clc
repz
and
and
shl
xchg
fcomp
repnz
test
loopne
aaa
xchg
pop
fsubr
movs
sbb
sub
pop
pushf
jbe
fs
add
rol
retf
sub
jns
or
imul
and
add
pop
je
push
pop
mov
aam
jmp
push
or
and
das
xchg
jno
mov
addr16
lahf
sbb
movs
inc
mov
and
cld
pop
ret
xor
mov
daa
shl
xor
mov
ret
pop
xchg
cs
sbb
lahf
out
xor
in
or
xchg
jmp
mov
push
iret
test
movs
daa
shr
pop
pop
xchg
mov
std
mov
jo
mov
pop
push
fucomp
stos
or
cmp
(bad)
xor
xor
out
pop
movs
adc
xchg
call
repz
pushf
daa
ret
xchg
jmp
push
jns
data16
sbb
out
into
lds
mov
stos
pushf
fst
shl
mov
sar
repnz
sbb
dec
ds
add
sub
call
xor
jp
rol
xor
inc
jno
xor
jl
mov
mov
fist
inc
out
fwait
mov
pop
xchg
jne
push
sbb
loope
and
mov
inc
(bad)
shl
inc
test
sbb
push
sti
lahf
arpl
cdq
xor
pop
repnz
xchg
cs
lea
dec
paddusw
pop
mov
add
lods
mov
js
mov
cld
mov
jmp
out
mov
test
fdiv
mov
cli
inc
push
mov
mov
dec
adc
retf
cmp
int3
mov
mov
cdq
xlat
cmp
push
fs
and
js
bound
or
lea
outs
call
adc
jmp
adc
mov
adc
cmp
outs
fdiv
push
cld
adc
bound
dec
mov
fstp
jae
iret
pusha
scas
inc
cmp
inc
push
mov
fldcw
push
mov
push
push
cmc
stc
pusha
adc
scas
push
test
push
fdivr
and
popf
ror
out
or
in
jae
pop
loop
push
mov
cmp
mov
fst
mov
mov
jne
cmp
ds
les
pop
cmps
cmc
shl
loope
pushf
pusha
outs
jmp
mov
lods
es
je
jae
jle
std
out
or
in
stos
xchg
adc
jecxz
(bad)
push
hlt
push
pushf
xchg
pop
sbb
idiv
imul
ds
xchg
jmp
idiv
jo
mov
dec
pusha
or
cmp
pop
fs
fimul
fld
aas
movs
cmp
fistp
mov
int3
mov
aad
jnp
in
shl
ror
fidiv
inc
ins
or
xchg
inc
mov
bound
sar
sub
stc
xchg
xor
adc
neg
and
imul
mov
outs
or
xlat
sbb
push
mov
faddp
cmp
lock
jl
movs
mov
sbb
in
lds
cmp
cli
xor
mov
mov
popf
in
retf
js
jb
call
out
sahf
dec
pop
hlt
mov
push
sub
pop
mov
sub
jne
das
into
add
imul
lahf
mov
rcl
jae
ret
rcl
inc
imul
dec
bound
cs
adc
lea
pop
daa
lods
adc
sbb
pop
xor
mov
pushf
mov
sub
cmps
ret
xor
xor
outs
xor
pop
mov
push
pop
mov
pop
jne
data16
xor
(bad)
mov
(bad)
idiv
das
sub
mov
iret
sub
(bad)
lahf
call
scas
test
cmp
cmps
das
clc
movs
test
pop
jb
out
jmp
test
dec
jb
xchg
cs
bound
dec
sbb
cli
ja
scas
adc
cmp
adc
test
in
push
jle
ficomp
or
and
or
fstenv
and
(bad)
mov
retf
inc
test
mov
fwait
lods
inc
mov
shl
enter
jb
stos
jbe
ja
mov
jne
lock
test
push
mov
int3
cwde
aas
or
(bad)
sti
adc
std
hlt
cmp
mov
shl
stos
movs
fwait
repz
frstor
in
iret
mov
mov
jae
shl
xchg
xchg
std
aad
xchg
mov
(bad)
xor
scas
jnp
jae
pop
cmp
sbb
xchg
test
and
jmp
add
loop
cld
pop
mov
sbb
mov
adc
test
add
lds
dec
and
inc
push
jecxz
repnz
pusha
outs
sbb
push
jge
mov
mov
mov
pop
pop
pusha
push
pop
mov
inc
sbb
call
in
(bad)
mov
dec
iret
je
rcr
js
dec
hlt
and
bound
xchg
sbb
loope
sbb
lods
dec
pop
cmp
or
inc
mov
xor
jns
jnp
idiv
lea
popa
(bad)
into
rol
push
xchg
jp
dec
arpl
lahf
stos
jae
sub
int3
xchg
cwde
rep
push
and
rcr
cmp
mov
mov
push
rcr
aam
jl
xchg
mov
adc
dec
push
xlat
aam
fwait
pop
loope
loop
retf
lods
fiadd
jns
imul
aaa
mov
dec
sbb
cmp
test
or
push
(bad)
rcl
xchg
xchg
mov
jb
jle
movs
cmp
jge
pop
mov
xor
std
mov
jg
push
movs
pop
sbb
push
cmp
and
rol
dec
lods
enter
xchg
xchg
mov
imul
sub
inc
add
test
sbb
sti
mov
jmp
lods
or
(bad)
mov
dec
ins
outs
out
fidivr
mov
sub
mov
je
shl
mov
pop
in
pop
and
mov
fsub
test
inc
call
ret
adc
sub
retw
je
out
cmp
lods
test
push
sahf
shl
mov
frstor
scas
xor
cmp
mov
test
adc
and
fldenv
clc
cmps
call
mov
mov
into
cli
xchg
into
xchg
fsub
cwde
imul
lds
test
dec
fisttp
fxch
pop
icebp
dec
or
iret
sbb
mov
fwait
sub
dec
push
movs
dec
mov
mov
pop
inc
sar
adc
hlt
pop
loope
push
mov
pusha
or
xor
and
push
into
dec
jecxz
sub
jns
mov
fist
addr16
arpl
xchg
dec
push
ficom
mov
mov
fidivr
arpl
inc
(bad)
leave
mov
ins
sub
retf
mov
mov
cmp
jge
je
mov
bound
icebp
(bad)
icebp
pop
and
bound
jne
push
push
(bad)
repz
gs
push
sub
lea
popa
sar
stc
mov
push
mov
jg
mov
xor
pop
push
shl
adc
dec
and
dec
pop
push
pop
je
adc
out
fs
lds
jbe
cs
cmp
mov
sbb
xor
mov
jl
mov
sub
or
test
loop
iret
(bad)
je
std
icebp
js
and
jo
ja
repnz
movs
inc
imul
jl
push
adc
sub
repnz
pop
bound
push
jge
jle
(bad)
fwait
sbb
add
mov
inc
int3
out
jb
mov
imul
xchg
or
retf
cmps
mov
add
mov
mov
jb
mov
test
mov
in
inc
sbb
jbe
btr
cmp
mov
je
add
fimul
pushf
push
popf
mov
fbstp
jb
inc
push
push
jo
push
inc
jnp
mov
retf
fs
ror
xchg
ror
loope
call
enter
(bad)
mov
sar
stos
out
mov
(bad)
inc
pop
and
add
dec
xchg
jo
daa
arpl
(bad)
call
(bad)
call
push
add
xor
adc
(bad)
jmp
adc
mov
jno
and
es
xchg
mov
rcl
push
pop
add
(bad)
iret
retf
das
cmc
jb
nop
fbstp
adc
sub
mov
inc
addr16
cdq
repz
inc
mov
int
cld
rol
xchg
jnp
push
mov
pop
and
fimul
sbb
stc
push
rcr
cmp
je
pop
(bad)
rcl
mov
(bad)
cmp
jecxz
aaa
test
pop
mov
inc
dec
(bad)
icebp
js
mov
loop
aad
sub
and
adc
or
iret
mov
test
imul
dec
or
push
dec
(bad)
in
lods
iret
or
add
cld
jmp
mov
aam
sbb
push
push
in
sahf
pushf
dec
mov
neg
mov
push
pop
inc
repnz
mov
fidiv
fldenv
in
das
clc
outs
adc
ds
call
popf
pusha
xor
rcl
jp
and
(bad)
adc
fcomp
push
or
outs
aad
call
test
rcl
add
fisttp
and
sub
jge
dec
xor
push
sub
sub
push
mov
xchg
dec
scas
stc
out
movs
jle
dec
aad
and
fst
out
add
mov
inc
inc
lock
adc
aas
mov
xchg
mov
jmp
mov
fucomi
pop
dec
inc
imul
retf
aad
add
scas
pop
out
outs
xor
cmps
fwait
mov
xchg
scas
jmp
xor
and
mov
data16
push
xor
or
pop
mov
hlt
mov
out
sub
mov
loope
jg
xchg
std
sar
call
sub
sub
mov
xchg
addr16
out
mov
lods
mov
add
dec
mov
and
pop
mov
clc
lds
ss
imul
and
or
(bad)
fnstcw
xor
add
arpl
dec
aad
cld
imul
repnz
imul
(bad)
pop
mov
arpl
arpl
or
(bad)
sbb
dec
lods
sbb
mov
iret
xchg
(bad)
cs
xor
cmps
mov
pop
push
daa
ret
stos
rcr
enter
mov
fwait
scas
xor
mov
cdq
das
push
retf
int
add
or
jno
inc
cli
sbb
in
leave
adc
sbb
mov
jnp
hlt
pop
ja
loopne
cmps
leave
inc
outs
test
sbb
(bad)
repz
sti
sbb
fisub
adc
fsubr
sub
fistp
test
and
fimul
je
popf
sub
repnz
jb
loopne
jbe
test
ss
inc
leave
pusha
inc
mov
outs
pop
sahf
inc
ja
call
dec
fmul
and
imul
iret
int3
daa
jge
aaa
push
aas
xor
cmp
jge
xor
call
push
mov
retf
or
or
sar
mov
js
add
cmp
dec
cmp
adc
movs
neg
aas
pusha
aam
retf
shl
out
xchg
sahf
out
cmc
push
arpl
sub
fwait
or
add
pop
rcr
imul
mov
push
push
dec
mov
xchg
stos
mov
cmps
fistp
test
iret
xor
add
push
jmp
sub
inc
pushf
sti
mov
xchg
push
mov
jb
or
ins
jne
jge
stos
iret
or
jg
sbb
xor
loopne
sub
and
add
mov
lods
cmp
push
(bad)
jge
or
fisttp
mov
(bad)
mov
into
stc
xchg
out
out
mov
add
mov
mov
stc
cld
aad
mov
in
fcom
adc
add
lds
shld
test
je
add
stc
(bad)
cmp
add
std
test
sub
pop
call
out
mul
lods
inc
mov
jmp
dec
pop
add
add
in
test
or
jb
es
in
lods
cmps
xor
xchg
(bad)
lods
(bad)
das
push
push
xchg
call
fwait
mov
in
and
pushf
pop
cmp
cmp
(bad)
sahf
pop
add
mov
(bad)
ret
imul
or
rol
push
xchg
enter
pop
pop
and
(bad)
push
ja
mov
arpl
icebp
int3
jnp
mov
out
shl
mov
mov
pop
cmc
add
sub
iret
lahf
inc
cli
adc
sub
pop
shr
cmp
dec
daa
jl
fisttp
xchg
mov
outs
push
xor
pop
out
dec
dec
sub
aad
es
sub
dec
dec
or
mov
jmp
fldenv
mov
(bad)
dec
pop
mov
movs
mov
jbe
gs
in
mov
outs
mov
(bad)
aad
hlt
in
sub
pop
sub
lahf
loopne
cmc
xor
jae
inc
daa
mov
(bad)
xchg
jmp
mov
cmp
js
aaa
jl
xor
sbb
stos
aam
cmps
mov
mov
out
sub
mov
xlat
dec
mov
mov
outs
popf
cmp
jl
mul
fld
add
in
add
push
div
mov
adc
mov
jge
inc
test
pop
add
lahf
stc
mov
inc
xor
jno
mov
xchg
fistp
sbb
pop
pop
pusha
mov
mov
shr
data16
lods
lock
cmp
and
out
icebp
movs
scas
repz
(bad)
lahf
neg
std
mov
loopne
fidiv
jp
push
push
sub
movs
scas
fidivr
outs
(bad)
or
sub
mov
gs
sbb
jmp
mov
in
lahf
dec
mov
push
xor
gs
test
sub
mov
xchg
daa
or
enter
out
push
fild
stos
aad
repz
fadd
cld
xor
imul
bound
loop
repz
jle
shr
in
mov
sbb
and
ins
fcomp
cld
or
ss
inc
cs
out
xchg
mul
add
add
lods
call
arpl
in
pusha
and
loop
out
ins
repnz
iret
xor
shl
cmp
es
mov
xchg
ja
add
sbb
add
test
gs
jmp
fadd
or
repnz
retf
sbb
adc
push
test
xchg
stos
mov
sbb
call
inc
xor
sbb
dec
or
push
aam
mov
mov
push
test
sub
out
dec
push
inc
repz
in
pop
push
xor
rcl
jns
sub
add
fld
hlt
cdq
mov
xchg
aaa
sub
mov
call
pop
ror
jb
mul
jmp
mov
call
stc
and
sbb
les
das
mov
cld
mov
fmul
adc
popf
(bad)
sub
repz
in
dec
out
movs
xchg
cmps
fwait
in
bound
call
cmp
retf
or
das
cli
push
es
movs
add
imul
add
sbb
shl
jmp
(bad)
adc
jg
add
out
test
mov
out
dec
mov
jns
not
stc
jp
or
mov
adc
xchg
push
add
sbb
les
cdq
mov
ss
and
arpl
add
mov
dec
sub
adc
jp
push
test
rep
stos
xchg
cdq
jecxz
xor
xor
mov
fild
aad
shl
jae
retf
sti
lock
sbb
mov
jbe
sub
cwde
push
sub
push
jns
adc
and
out
and
mov
popf
and
scas
jle
push
fistp
mov
adc
popf
push
pop
movs
fcom
sbb
xchg
shl
dec
xchg
push
xchg
or
mov
push
mov
jmp
mov
mov
rcl
pop
pop
xor
rep
fild
push
fist
mov
std
sbb
lods
inc
ror
nop
and
mov
adc
add
mov
sbb
(bad)
nop
xor
test
pop
push
xor
hlt
aas
add
add
xchg
scas
jmp
repz
fst
mov
test
(bad)
mov
ds
repnz
or
add
jp
add
or
xor
mov
pop
clc
dec
mov
retf
mov
lock
sbb
imul
pusha
inc
mov
push
retf
popf
mov
fistp
call
shl
pop
inc
sbb
test
cmp
addr16
push
cmp
lahf
outs
sub
inc
sub
fwait
cwde
mov
add
leave
ins
test
adc
xor
cld
fisubr
dec
or
enter
pop
es
(bad)
fdivr
fidiv
nop
(bad)
lods
fs
and
addr16
aam
mov
gs
adc
push
das
jl
mov
(bad)
jmp
leave
dec
adc
mov
in
fstp
pop
adc
xchg
and
adc
sbb
inc
and
inc
inc
mov
inc
adc
jg
or
out
mov
aaa
div
cmps
in
adc
dec
adc
xor
sbb
test
inc
icebp
jp
pop
inc
and
stos
call
aad
aam
sub
xor
adc
sbb
call
stos
call
adc
adc
xchg
arpl
jnp
sub
out
add
mov
ss
fistp
adc
mov
adc
fwait
retf
dec
cmps
jbe
inc
aas
aas
mov
pop
mov
into
jmp
xlat
in
sub
mov
data16
pushf
cmp
loope
xchg
adc
cmp
add
sahf
pop
aaa
sahf
imul
mov
fadd
pop
fldcw
pop
cmp
or
cmp
xor
cmp
shr
(bad)
dec
movs
xchg
xchg
fs
call
lahf
or
fwait
sti
nop
(bad)
jo
xor
mov
ficom
cwde
in
cdq
(bad)
fisttp
mov
fcom
add
push
lods
arpl
fs
das
retf
mov
mov
adc
arpl
fldenv
sahf
das
xchg
aaa
ja
sbb
popf
or
dec
mov
mov
sub
sbb
js
xchg
xchg
pusha
xor
mov
xor
adc
out
lods
(bad)
cmp
push
int
sar
add
test
faddp
retf
adc
ins
jbe
adc
fnstsw
add
aad
xchg
int
sbb
loope
add
sahf
call
stos
pop
ds
ins
mov
xchg
ret
and
sub
and
add
jmp
pushf
and
sub
push
cmp
in
sbb
mov
vmwrite
mov
pop
pop
and
mov
imul
call
cmc
xor
xor
inc
jecxz
enter
movs
mov
pop
mov
lea
adc
leave
fstp
jmp
and
(bad)
mov
dec
(bad)
pop
xlat
and
das
repz
daa
push
ins
mov
aad
cmps
and
ins
stos
lock
push
mov
pop
xchg
and
aam
inc
lock
push
adc
into
les
call
repnz
mov
ins
hlt
ret
cmp
ror
in
cmp
dec
mov
pushf
mov
aas
jmp
adc
mov
pop
push
adc
jo
mov
std
pop
cmps
inc
movs
jo
jno
inc
push
jg
test
test
iret
loopne
mov
dec
or
scas
imul
add
add
retf
and
push
stc
daa
add
sbb
cmp
fcom
mov
cmc
sbb
retf
dec
leave
imul
pop
xchg
push
sar
push
jg
cmps
clc
fild
jo
aas
stc
xchg
pop
add
xor
push
cwde
leave
cmp
test
fisubr
stos
ins
sub
into
push
loop
and
push
add
sub
bsf
fwait
xchg
rcr
pop
shl
movs
dec
mov
addr16
pop
mov
jae
stos
xchg
dec
push
test
push
jno
xchg
(bad)
pop
push
pop
pop
add
and
(bad)
dec
mov
jmp
pop
cmps
cmp
sub
aad
(bad)
sbb
xchg
push
jnp
loopne
imul
jns
jns
push
pop
xor
push
sbb
cwde
xor
das
(bad)
mul
retf
rcr
ret
dec
loope
fwait
test
pop
fst
cmps
js
or
test
in
imul
inc
call
sub
stos
add
lds
iret
cmp
stc
inc
cmp
add
(bad)
push
les
pop
aad
mov
mov
add
add
jl
pop
push
ret
push
in
fisub
add
movs
xchg
adc
push
out
sub
mov
aaa
inc
mov
sub
in
popa
sbb
rcr
in
add
add
and
pop
lock
mov
pop
push
xchg
mov
cli
into
mov
pushf
inc
sahf
outs
jo
mov
fcomp
adc
shl
repz
jbe
pop
arpl
adc
retf
lock
clc
enter
jae
and
pop
scas
xor
add
cli
push
rcr
icebp
cmp
xchg
pop
shl
es
sbb
cmp
neg
push
pop
(bad)
popf
or
in
outs
push
leave
ds
mov
repz
test
push
pop
mov
push
mov
xor
fwait
(bad)
jb
ins
dec
dec
add
fadd
out
movs
and
mov
inc
mov
sub
or
cmp
test
rcl
loop
ja
aam
data16
cmp
mov
test
repz
xchg
adc
mov
call
jnp
xchg
int3
lods
pop
dec
push
and
pop
jno
mov
xchg
push
mov
mov
add
jmp
lea
aad
sbb
adc
pop
mov
adc
ret
xchg
push
iret
stos
adc
test
lods
xchg
sbb
mov
das
xlat
mov
into
mov
mov
aam
ffreep
mov
ds
xor
mov
mov
xchg
in
das
xchg
dec
pop
int3
jle
jecxz
or
push
mov
loop
jle
mov
xor
mov
sub
cwde
jl
inc
jg
sub
sub
cmps
dec
push
(bad)
mov
jle
(bad)
rcr
inc
jae
mov
mov
out
mov
mov
loopne
jo
adc
inc
gs
mov
add
push
mov
in
ss
and
dec
sbb
push
in
dec
push
(bad)
fsubr
rcr
pop
fild
arpl
iret
xchg
inc
jmp
in
mov
leave
sub
adc
pop
cmp
loope
dec
fcomp
out
adc
lock
dec
js
jo
or
shr
ret
add
or
retf
scas
sub
and
adc
sub
repz
or
icebp
pushf
fistp
outs
mov
js
mov
sbb
xchg
mov
fst
ss
mov
fdivr
out
pop
inc
mov
in
shl
mov
dec
lea
sbb
imul
mov
mov
jmp
(bad)
in
inc
push
inc
jl
bound
mov
arpl
add
mov
jmp
retf
inc
and
(bad)
daa
dec
mov
xor
jnp
sub
dec
repnz
shl
cmp
push
pop
jnp
rcl
xor
adc
popf
mov
mov
push
imul
popa
aam
and
mov
push
cmc
rcl
xchg
stc
rcl
add
pop
xchg
or
jecxz
pop
test
pop
cmp
inc
outs
fld
inc
ins
je
jle
jae
sti
out
aam
fcom
test
add
cmp
in
add
xlat
jmp
call
or
in
push
add
inc
mov
mov
jnp
lods
test
scas
addr16
add
sbb
pop
dec
in
imul
fisubr
outs
outs
push
iret
in
sti
pop
push
shl
loop
call
call
push
dec
xchg
in
cmp
lock
cdq
dec
xor
out
push
in
fisubr
shl
enter
ss
push
push
loope
xchg
fdiv
(bad)
push
into
lock
stc
fmul
adc
xchg
repz
sub
imul
cmp
xchg
loope
jno
cmp
je
xchg
repz
(bad)
adc
mov
aad
adc
rcr
sub
mov
movs
xchg
xchg
aas
mov
dec
(bad)
in
dec
fisttp
mov
inc
cmp
jmp
mov
cmp
mov
mov
stos
sub
or
and
mov
mov
sub
std
scas
xor
xchg
push
sar
test
into
mov
mov
xchg
mov
clc
or
(bad)
or
add
inc
cs
pop
and
mov
cs
jb
jg
mov
(bad)
rol
mov
xchg
add
jo
imul
and
retf
int
ds
mov
jl
jecxz
aaa
pop
outs
pop
jle
js
(bad)
jno
daa
fst
lds
pop
dec
push
div
cld
adc
ret
mov
mov
adc
jge
imul
stos
(bad)
jns
out
out
lods
aam
aas
push
mul
inc
mov
cmp
aaa
mov
ins
pop
arpl
call
xor
cdq
jp
add
mov
xor
push
push
sub
sub
jge
and
movs
stos
adc
sub
test
xchg
and
push
addr16
or
cmp
shl
inc
leave
mov
or
(bad)
loope
or
lock
jl
inc
mov
mov
pop
push
pusha
ret
mov
push
xchg
out
sahf
scas
push
cmps
and
mov
ss
lahf
stos
ss
and
cmp
add
jno
pop
test
sub
je
sub
push
fadd
and
enter
or
pop
sub
add
push
fcom
push
mov
das
cmp
mov
(bad)
(bad)
(bad)
retf
add
aam
sar
ds
icebp
xchg
arpl
or
push
adc
daa
mov
sub
std
push
jns
lds
sub
and
daa
mov
imul
arpl
outs
fwait
sti
jg
dec
xor
retf
dec
(bad)
retf
cli
hlt
inc
inc
js
aas
repz
push
aas
mul
data16
shl
ret
jmp
shr
clc
dec
test
xchg
xor
cmp
ja
sub
push
xchg
jne
mov
pop
xchg
daa
(bad)
gs
std
ins
dec
push
sbb
test
imul
int
leave
enter
shl
dec
xlat
std
enter
push
stc
pop
test
aas
paddusb
mov
scas
cmp
push
xlat
push
or
sti
ficom
es
pop
inc
(bad)
lock
test
push
mov
neg
and
push
stc
pop
or
sub
je
cli
and
cmps
icebp
mov
retf
jg
mov
icebp
xlat
adc
out
fsubr
sub
inc
test
addr16
or
cmp
sti
or
hlt
push
add
dec
xchg
mov
icebp
pop
enter
jmp
and
mov
not
in
dec
xchg
adc
add
iret
stos
adc
popa
cmps
pop
mov
jae
push
mov
mov
add
ret
push
pop
lahf
daa
out
gs
cmp
adc
mov
cmp
fild
call
sub
int
jno
out
push
gs
cmp
(bad)
xor
cmc
sahf
xchg
gs
mov
dec
movs
sar
sbb
mov
jecxz
dec
mov
sbb
jnp
jo
fs
mov
pop
div
outs
out
mov
dec
pop
xchg
mov
rcr
sbb
jle
test
outs
outs
out
jae
mov
repz
inc
adc
addr16
cmp
(bad)
adc
mov
mov
cld
add
(bad)
cmc
aad
(bad)
je
sub
int
inc
push
aas
lea
mov
in
jne
inc
xchg
or
hlt
sbb
jae
dec
fmul
fnstcw
or
sar
sub
fldenv
adc
in
inc
sub
mov
js
cmp
and
cmc
imul
or
retf
test
add
ret
xor
fs
ins
in
pushf
(bad)
in
lock
adc
mov
xchg
js
(bad)
mov
sbb
sbb
jge
movs
lock
(bad)
or
push
push
xchg
imul
movs
fdivr
push
stc
unpcklps
mov
(bad)
pop
fstp
add
mov
sbb
outs
jne
or
or
jmp
sar
aam
mov
retf
mov
gs
call
inc
lock
add
je
or
jne
xchg
cmp
call
clc
or
(bad)
mov
dec
cmp
push
sbb
jno
mov
in
int3
fldenv
push
xor
and
mov
mov
mov
dec
les
mov
dec
push
outs
cmps
daa
add
mov
push
jl
xor
rcr
mov
fist
(bad)
mov
mov
(bad)
aam
pop
vpsraw
fucom
jmpw
in
in
sbb
cmps
imul
std
mov
dec
adc
mov
outs
out
jbe
sar
pop
js
jp
or
sub
inc
jb
add
pop
jmp
jno
hlt
sub
adc
inc
lahf
lods
cli
jmp
sti
xchg
mov
adc
lods
sbb
retf
jnp
pop
push
loop
stos
and
adc
in
int
sbb
jo
ins
mov
inc
repz
aaa
sbb
dec
push
pop
(bad)
xchg
pop
bound
mov
mov
xchg
out
xchg
retf
iret
xorps
add
int3
test
fs
push
mov
mov
jp
push
sub
fidiv
sbb
(bad)
shl
push
aad
mov
cmp
stos
push
stc
movs
hlt
push
leave
or
fnstsw
add
loopne
pop
fsubr
into
scas
push
in
cmps
jmp
mov
je
inc
shr
lds
dec
mov
aas
stos
xchg
push
mov
dec
scas
leave
popa
xchg
push
mov
loop
push
add
loop
cmp
scas
clc
mov
pop
cmp
call
pop
jno
adc
imul
hlt
dec
add
xor
in
ficom
jbe
or
aam
in
mov
xor
sahf
xchg
push
les
call
popf
(bad)
mov
cmps
icebp
in
popa
mov
loope
fisttp
dec
aas
pushf
cld
jg
repz
dec
arpl
xor
mov
fnstsw
icebp
add
test
mov
(bad)
sbb
stos
retf
inc
xchg
sub
mov
lds
scas
leave
retf
xor
mov
rol
mov
adc
ret
enter
dec
fcomp
ret
cmp
cmp
inc
jle
add
fbstp
(bad)
(bad)
movs
dec
cmp
and
mov
aad
adc
sbb
repz
fwait
pop
xchg
xor
mov
mov
pop
ins
retf
inc
and
jle
je
hlt
jbe
inc
jmp
pop
push
mov
test
enter
sbb
je
xor
jno
pop
xchg
cmps
gs
stc
fstp
xor
jns
pop
jle
not
push
rcl
push
call
mov
out
and
sbb
mov
cmp
call
sbb
sub
sub
pop
ins
inc
pop
adc
sub
std
pop
xor
repz
mov
adc
ss
retf
sub
cmp
inc
xchg
in
loop
pop
outs
int
adc
mov
stos
jp
or
xchg
push
movs
and
pop
sahf
pop
popa
repnz
inc
pop
mov
xlat
cmp
xor
push
xchg
pusha
movs
sub
mov
mov
and
mov
test
jns
cmc
(bad)
fwait
test
sub
jmp
pop
xor
push
fcmovnu
sbb
jb
push
js
sbb
or
in
stc
test
std
cmps
das
push
mov
cmp
sbb
rcr
(bad)
mov
jne
mov
or
cwd
pop
mov
jmp
mov
clc
cmps
movs
xchg
and
xchg
fcom
mov
xor
jne
push
out
sahf
and
popa
test
cld
xchg
shl
sbb
mov
dec
or
pop
or
mov
addr16
mov
xchg
push
mov
pop
dec
lock
(bad)
popf
aaa
ret
adc
je
or
pop
dec
fnstsw
fisttp
es
(bad)
sub
iret
enter
movs
adc
mov
fidivr
dec
lods
pusha
cdq
in
inc
cli
pop
ins
aas
push
push
sbb
lea
loop
mov
mov
push
(bad)
repz
lds
les
(bad)
sbb
fwait
shl
gs
sub
mov
jnp
pop
push
xor
and
fwait
cmp
mov
lods
std
cmp
xchg
cwde
push
ficomp
ret
cmp
in
jo
jnp
das
into
dec
test
mov
inc
div
mov
das
jecxz
jnp
or
mov
jle
outs
out
inc
xor
or
jne
fsub
inc
in
mov
mov
cmp
sbb
call
inc
pushf
xor
jmp
mov
mov
sub
call
(bad)
out
pop
mov
inc
pop
push
(bad)
mov
jle
enter
stc
nop
in
jae
jp
sub
fcmove
push
mov
or
int3
fcomip
or
mov
adc
pop
out
sub
sbb
test
sub
rol
jl
jb
inc
mov
jno
aad
pop
jns
loop
jae
out
pusha
pop
sbb
jge
rcl
ret
ficomp
shl
push
sbb
pop
or
loopne
in
inc
xor
cmc
popf
sbb
inc
es
and
or
xchg
dec
enter
push
pop
push
jge
movs
in
xor
xor
mov
adc
adc
pop
inc
sbb
mov
mov
out
xadd
and
cmp
mov
(bad)
mov
sub
or
(bad)
enter
loop
jl
psllw
or
dec
and
iret
xor
push
adc
jmp
stc
stc
std
lods
aam
inc
inc
je
inc
mov
cmp
dec
les
jmp
pop
mov
cmp
sbb
je
cmp
xchg
push
out
adc
scas
int3
mov
jecxz
dec
loopne
mov
push
sahf
mov
stos
sub
(bad)
jmp
pop
mov
outs
stos
mov
sti
xor
inc
or
cmp
cmps
in
mov
inc
call
popf
pop
inc
sub
pop
or
pop
or
lahf
jmp
jb
and
cdq
pushf
pop
sar
hlt
xchg
imul
jae
or
(bad)
cli
or
adc
repnz
mov
jge
or
jge
push
adc
mov
js
retf
adc
fcom
and
sahf
mov
test
aam
sub
iret
in
mov
jns
mov
mov
cmps
and
dec
adc
pushf
add
rcr
jge
jg
sub
int3
arpl
call
jb
rol
sub
into
pop
jno
push
add
fcmovbe
sbb
mov
pop
jb
cmp
inc
lahf
cdq
or
in
push
mov
xchg
xchg
clc
repnz
loopne
or
cmp
in
add
push
pop
cwde
mov
cwde
mov
cmp
dec
repz
pop
(bad)
jmp
mov
clc
clc
push
inc
lea
lock
jo
mov
nop
push
jge
xchg
dec
movs
iret
iret
xor
cwde
mov
xor
pop
dec
bound
mov
pusha
push
adc
(bad)
ds
jp
aam
inc
mov
mov
das
sahf
sbb
dec
in
and
popf
dec
(bad)
mov
stc
cmp
or
mov
cmp
push
lea
lahf
dec
cmp
add
mov
in
xor
or
adc
(bad)
mov
push
inc
sbb
and
cmc
neg
or
mov
adc
call
repz
jecxz
mov
mov
call
jno
in
ins
push
pop
sub
repz
mov
sub
jb
ret
mov
mov
jg
lds
ret
iret
popf
sbb
pop
pop
add
mov
pop
rcr
jbe
push
jp
lock
mov
or
bnd
xchg
adc
or
inc
cmp
xor
fcomp
(bad)
ds
jmp
mov
sbb
xlat
paddusb
and
rol
loopne
popf
cmp
inc
xchg
es
call
cmp
ja
lods
outs
inc
push
inc
in
pop
cwde
fisubr
aas
mov
(bad)
xchg
or
sbb
pop
push
adc
out
out
jecxz
adc
mov
push
dec
pop
jmp
or
jnp
jne
shr
push
in
stos
shr
and
in
popa
pusha
gs
outs
sbb
dec
into
sub
inc
ds
inc
shl
cmp
cmp
inc
scas
test
imul
cmp
outs
pop
cli
xlat
test
stos
jno
(bad)
mov
and
fmul
xchg
repz
call
dec
into
adc
ret
loop
lods
out
lds
setl
(bad)
xor
xor
add
mov
ficom
(bad)
stos
fldcw
dec
(bad)
mov
inc
dec
inc
or
jns
push
sbb
dec
jb
inc
shl
dec
jg
cwde
and
xor
into
sbb
pushf
retf
fucomi
xor
out
fidiv
cmp
xchg
cmp
sub
sbb
mov
sbb
push
xchg
call
inc
gs
pop
pop
push
mov
sbb
icebp
and
and
mov
test
adc
data16
push
adc
in
and
or
or
addr16
mov
adc
sbb
fcom
gs
cmp
outs
icebp
dec
sti
cmp
xchg
mov
lock
aaa
cmps
mov
(bad)
into
cld
jae
push
inc
cmp
ins
jnp
inc
jl
jbe
xor
lahf
outs
std
fs
xchg
scas
push
mov
dec
dec
inc
repnz
pop
cld
adc
add
xchg
fnstsw
shl
loopne
push
sti
xlat
xchg
cmps
ficomp
ins
imul
and
cmp
int
xchg
(bad)
inc
outs
cmp
add
call
(bad)
xor
mov
sub
ret
mov
aaa
pop
jno
movs
sbb
add
push
jge
xchg
cmp
inc
fucomi
push
cmp
jo
sub
jge
dec
add
nop
leave
jp
nop
aam
fwait
ret
lock
sub
mov
fcomp
inc
or
test
inc
loope
and
pusha
mov
int
pop
fs
scas
sbb
das
push
jno
dec
cmps
in
push
jmp
sbb
or
jb
out
shr
(bad)
fs
dec
cmp
xchg
fild
ja
mov
je
scas
leave
inc
sbb
ja
adc
cmps
int
and
jo
xchg
fstp
xchg
outs
cwde
lods
call
mov
cmp
push
lea
aam
mov
cli
add
div
loope
jbe
adc
add
hlt
in
repz
shr
icebp
test
ficom
es
pop
lock
push
sub
or
dec
jp
(bad)
es
int
shr
out
mov
jecxz
in
js
sbb
inc
outs
mov
push
pop
push
pop
pop
cmps
mov
fs
call
(bad)
std
cld
cmp
int
or
inc
mov
lods
ret
adc
push
iret
cdq
jecxz
cs
fstp
adc
add
and
inc
cmp
les
jmp
jp
cli
ss
icebp
gs
xor
fwait
push
cmp
or
iret
ja
test
ja
push
std
sti
mov
repnz
jae
jae
inc
dec
fld
pop
sub
cmc
lock
leave
sub
loop
jbe
mov
and
scas
mov
cmc
pop
pushf
movs
ja
repnz
js
sbb
sub
push
adc
mov
jmp
outs
pop
mov
cld
jle
or
pop
dec
push
cmc
out
push
mov
dec
inc
inc
cs
cmp
and
dec
aas
loopne
inc
push
pop
inc
adc
mov
jmp
mov
mov
inc
retf
or
je
mov
dec
sub
test
pop
out
lds
leave
mov
loopne
jecxz
xor
test
inc
leave
pop
mov
xor
bound
mov
inc
mov
mov
sbb
je
mov
dec
(bad)
xor
push
outs
inc
mov
cmp
jp
push
cdq
xchg
jge
sub
in
es
sbb
ret
ficomp
js
add
lock
sbb
std
adc
sub
rcr
adc
push
sub
lods
stos
popf
jo
fld
fbstp
cmp
add
mov
outs
in
mov
cmc
dec
sbb
retf
xchg
xor
cdq
jge
in
fld
imul
loope
xchg
sbb
cmp
dec
pop
outs
jecxz
add
mov
in
inc
cwde
cmp
fwait
lock
inc
(bad)
clc
cs
je
adc
sbb
jg
cmc
add
cmp
pusha
outs
outs
mov
imul
jno
js
js
(bad)
clc
movs
add
and
(bad)
pop
xor
or
sbb
xor
cmp
jne
scas
jge
loopne
movs
aas
push
cmp
inc
in
in
daa
fisubr
dec
fcmovne
sbb
ror
lahf
mov
mov
enter
mov
cmp
rol
mov
rcr
test
and
pushf
jno
and
xlat
jns
cmp
in
sbb
and
jecxz
jnp
sbb
(bad)
cmp
cld
xor
scas
push
inc
push
fldpi
pop
add
test
es
or
cmp
xchg
inc
xchg
aad
aaa
dec
arpl
push
std
dec
mov
lahf
inc
stc
sub
lahf
std
mov
out
rcr
inc
mov
mov
sub
jmp
div
pop
cdq
sub
or
pop
mov
sbb
enter
sbb
fs
and
pop
xchg
dec
xchg
mov
xor
or
fstp
dec
jno
jp
xchg
loop
imul
pop
jnp
cmps
pop
sub
lea
mov
sbb
je
hlt
mov
sub
mov
lds
push
(bad)
and
fisttp
dec
mov
jb
and
and
test
(bad)
pushf
pop
dec
retf
push
mov
xor
sar
xchg
xchg
xor
adc
mov
icebp
test
pop
mov
jge
mov
jg
xlat
das
pop
movs
scas
stos
(bad)
and
sbb
int
mov
add
in
cmp
jae
push
mov
push
pop
pusha
cmp
popa
fdivr
jl
stos
add
add
cs
pop
mov
test
mov
stos
cmc
xor
adc
aad
adc
fstp
add
jmp
fdiv
xchg
in
ss
ret
sti
fs
pop
push
inc
add
cdq
inc
into
pop
popf
pop
mov
jo
outs
cmp
pop
jae
mov
xchg
rcr
mov
pusha
inc
sbb
xlat
pushf
retf
xchg
inc
leave
xor
jmp
stos
js
in
add
pop
sub
fsubr
clc
add
mov
pushf
xchg
addr16
idiv
mov
cmp
jmp
mov
add
(bad)
sub
(bad)
mov
ja
or
stos
clc
fidivr
mov
imul
and
cmp
daa
jo
fidivr
les
mov
push
fbstp
jo
aam
mov
mov
test
pop
cmc
in
je
jne
pop
mov
pop
cmc
sub
add
and
mov
cmps
(bad)
cmp
sub
ss
repnz
scas
imul
or
fsub
and
push
enter
mov
not
movs
add
mov
out
imul
test
sti
lods
je
sbb
sbb
enter
dec
xchg
sbb
mov
sti
jg
mov
mov
rcr
add
xchg
jge
paddb
test
or
sbb
retf
mov
iret
(bad)
ficomp
and
or
hlt
stos
loopne
test
dec
mov
fcomp
jp
pop
or
(bad)
movs
sahf
pop
mov
std
mov
adc
pop
popa
xlat
aaa
mov
in
mov
add
push
data16
xchg
faddp
pop
mul
repnz
adc
(bad)
and
das
inc
xchg
(bad)
xor
add
call
imul
(bad)
jg
rol
xchg
add
rol
jecxz
ins
add
fmul
jmp
xor
mov
mov
sub
je
xor
bound
not
test
std
mov
push
or
js
lock
fadd
cmp
repz
mov
popa
or
mov
cmp
mov
sub
stc
inc
in
pop
push
leave
retf
lahf
or
jno
jmp
aaa
and
mov
jae
sub
sub
jg
push
ss
pop
mov
cmp
pop
jmp
pop
jecxz
push
ret
jb
ret
push
loopne
push
rcl
adc
push
push
jo
mov
mov
cli
jb
jle
clc
xchg
sbb
mov
pop
mul
dec
mov
cmps
test
cmps
mov
sti
rcr
jno
or
movs
mov
push
and
jg
cld
xor
dec
xlat
shl
add
jp
popf
mov
popa
jmp
iret
fadd
stos
sub
xchg
inc
cs
loope
adc
inc
mov
pop
nop
sbb
scas
inc
pop
adc
ret
sbb
lods
cmp
out
mov
pop
pop
outs
popf
fld
test
jmp
jle
fisub
sar
pushf
push
cmps
lods
fsub
(bad)
fistp
rcr
jg
test
sub
xchg
out
retfw
adc
xchg
or
push
in
addr16
loope
pop
add
gs
push
jb
push
push
fwait
pop
js
out
pop
inc
sub
jp
add
dec
call
jecxz
jns
jp
enter
mov
ins
pop
rol
rcl
lock
jp
and
inc
mov
call
mov
aam
fdiv
(bad)
movs
and
push
lods
icebp
push
push
adc
mov
popa
mov
sti
clc
push
ds
mov
mov
fadd
and
add
call
lock
div
arpl
or
lods
mov
and
push
daa
sbb
cmp
arpl
ins
cdq
sbb
mov
retf
jno
loopne
das
imul
cmps
xor
pusha
mov
jno
push
or
and
cmp
mov
dec
adc
sub
inc
or
dec
sbb
fsub
jno
cmp
into
test
sar
lods
jne
out
aas
int
inc
inc
in
and
movs
cmp
fst
(bad)
inc
add
mov
ins
xchg
mov
mov
in
or
cmp
nop
sahf
push
(bad)
call
fsub
pushf
sbb
mov
add
xlat
cmps
nop
mov
cmp
lahf
jge
aas
repnz
or
sti
or
lds
jo
iret
adc
lea
pop
clc
dec
fdivp
lds
jbe
mov
call
daa
bound
or
scas
jno
lds
scas
jo
in
push
enter
mov
mov
xor
inc
js
push
test
js
or
push
and
pushf
adc
mov
(bad)
dec
pop
sub
cmp
clc
movs
rcr
sbb
ins
dec
es
movs
jp
inc
mov
xchg
push
ins
(bad)
leave
xchg
dec
adc
les
mov
rcr
test
xchg
sar
jge
jmp
add
push
sar
stc
(bad)
push
ss
or
mov
out
stc
xlat
ins
out
xor
imul
mov
ret
loop
inc
push
mov
shl
icebp
jbe
les
or
rcl
sub
mov
scas
addr16
arpl
pushf
fstp
xchg
sbb
or
fidivr
mov
dec
add
retf
and
lods
push
xchg
fwait
sbb
sub
sar
xor
sub
in
mov
mov
lock
pop
in
mov
inc
sub
aad
xor
sbb
sbb
retf
sar
pop
stos
dec
lahf
mov
pop
pop
imul
push
clc
out
mov
mov
je
cmp
neg
fld
sub
fimul
cmps
sahf
push
push
sbb
imul
stc
jge
enter
inc
adc
xor
(bad)
call
push
push
ret
xor
mov
xor
stc
test
xor
call
inc
(bad)
and
into
add
stc
stos
mov
es
sub
jmp
fdiv
aad
cmps
and
in
fidiv
ss
outs
arpl
jae
or
push
xor
sbb
and
test
inc
fmulp
xor
loopne
stc
rcl
push
cld
shl
loop
dec
mov
mov
jecxz
aas
ja
stos
mov
int
das
xchg
aam
ror
imul
test
retf
push
(bad)
fnstenv
jae
cmp
js
loop
jecxz
or
mov
push
call
xchg
dec
arpl
loopne
cwde
cmp
jns
sub
jge
mov
(bad)
fisttp
(bad)
xor
dec
out
mov
cld
and
out
xchg
imul
pop
popf
scas
dec
xchg
sub
sbb
js
push
push
iret
dec
movs
stos
clc
xchg
cmp
mov
std
outs
xor
pop
mov
ffreep
sub
dec
push
not
cmp
push
ja
mov
enter
jecxz
in
mov
inc
mov
jno
mov
inc
pop
dec
sbb
or
les
jnp
adc
fistp
pop
cmp
inc
fdiv
bound
scas
mov
hlt
popa
pop
shl
xchg
jmp
fs
push
and
fidiv
push
clc
mov
popa
imul
sub
lahf
cmp
sub
adc
sar
add
push
stos
not
or
call
in
xor
jbe
nop
inc
mov
icebp
std
sti
das
popf
push
outs
cmp
xor
mov
xor
xor
repnz
push
mov
es
push
jno
fist
mov
fld
cmp
dec
pop
or
sti
mov
sti
sbb
inc
rcr
xchg
cmps
push
or
xor
stc
dec
jg
jne
and
int
fnstcw
mov
or
repnz
pop
mov
cmp
cli
mov
jnp
movs
adc
adc
pop
idiv
xor
scas
pop
push
mov
div
dec
repz
in
jbe
ret
in
movs
or
sbb
add
push
adc
pop
not
stos
stos
mov
jecxz
pop
and
inc
inc
ins
dec
jmp
das
adc
out
lods
retf
cli
ret
jbe
mov
cmc
fxch
test
test
xchg
mov
adc
sbb
int3
or
pop
push
dec
(bad)
ss
cmp
xchg
inc
inc
cmp
and
fimul
or
or
jns
adc
addr16
fs
hlt
adc
xchg
call
mov
xchg
lods
pop
fsubr
fs
mov
cmp
dec
xchg
push
push
(bad)
loop
cmp
and
(bad)
mov
pop
es
pop
xchg
pop
jne
jbe
jb
push
(bad)
push
push
and
and
cmp
and
mov
inc
or
pop
cmp
pop
jp
es
xor
dec
mov
dec
pop
dec
and
add
call
jge
outs
or
loopne
bound
popa
lods
dec
jl
dec
mov
adc
outs
jmp
cmps
jg
dec
mov
or
cdq
es
cmova
xor
ins
ins
adc
mov
es
cmps
cmp
sub
in
dec
mov
sbb
sbb
mov
pop
ret
pop
fidiv
mov
or
js
fiadd
and
cmps
fwait
push
or
pop
cmp
ins
mov
inc
jns
shl
scas
ss
lods
loope
or
cmc
call
loope
scas
or
xchg
dec
sbb
lock
jb
jmp
lods
dec
sbb
xchg
leave
(bad)
addr16
or
aas
stos
push
cmp
fwait
test
movntq
ja
xor
out
iret
pop
shr
mov
imul
ja
or
sahf
xchg
ret
inc
lods
je
or
test
mov
and
nop
jg
les
adc
sub
xor
(bad)
xchg
or
xchg
lods
xor
mov
mov
cmc
sbb
add
jnp
and
ret
outs
mov
and
dec
ret
ret
(bad)
sub
add
sub
cmp
cmc
xor
call
(bad)
sbb
movs
sar
mov
mov
iret
fst
aad
neg
js
fsubr
lods
(bad)
adc
sbb
(bad)
loope
and
xchg
cmp
pop
es
in
out
(bad)
push
mov
int3
rol
push
dec
ins
ret
icebp
outs
dec
or
inc
cmp
ror
inc
cdq
or
xor
cmp
movs
outs
mov
xor
cmc
mov
xor
in
xchg
jp
out
cdq
dec
or
mov
out
jge
xchg
popa
movs
cmc
lahf
jge
mov
sbb
mov
mov
sbb
xor
add
xor
jno
cmps
cmp
int3
mov
data16
cmc
pop
lods
jbe
mov
repz
mov
(bad)
cmp
push
aad
sub
cmp
inc
add
add
push
mov
xchg
sub
inc
dec
idiv
sub
sahf
mov
pop
int3
dec
je
mov
scas
fs
mov
adc
push
into
imul
jo
adc
test
dec
mov
add
jo
in
push
mov
inc
jp
push
sub
inc
xchg
pushf
test
imul
jl
addps
pop
push
jge
mov
lds
cmovg
imul
imul
add
test
xor
mov
and
js
dec
mov
push
jnp
cdq
jns
mov
mov
jg
ja
jg
ins
outs
jg
(bad)
mov
xchg
sub
push
mov
sar
add
mov
pop
outs
int3
jae
add
leave
fxch
xchg
add
and
pop
shl
push
pop
mov
or
or
adc
clc
(bad)
addr16
fwait
and
inc
xchg
inc
mov
jns
cmp
add
ja
retf
ret
inc
popf
xor
ja
test
inc
imul
xchg
outs
pop
(bad)
jmp
neg
mov
push
das
sbb
lods
cdq
inc
sbb
xor
jg
bound
les
bound
movs
jnp
loopne
in
mov
push
stc
ds
int
adc
sbb
mov
lods
cmps
mov
(bad)
(bad)
push
or
(bad)
pop
loope
cmps
adc
add
gs
push
jg
or
shl
ja
mov
jg
dec
mul
push
rcl
pop
sub
sub
sbb
dec
xchg
push
sahf
xor
xchg
fsub
pop
sub
cmp
ret
dec
cmc
sbb
or
cmp
outs
dec
or
popf
mov
add
jp
cmp
loopne
pop
jns
push
sbb
imul
fcom
or
xor
(bad)
push
iret
lds
pop
inc
jns
clc
outs
outs
inc
mov
mov
std
or
shl
jge
cmp
xchg
in
test
stc
fs
pop
popf
cs
cmovo
ins
mov
(bad)
das
stc
ficomp
xor
cmp
xlat
ins
jno
addr16
pop
dec
and
sbb
push
cmp
stc
mov
push
xchg
enter
xchg
leave
pop
in
aad
leave
fwait
cmp
idiv
push
iret
(bad)
in
lods
pop
popa
adc
cmp
lahf
xor
(bad)
es
div
dec
cli
fldenv
cs
cwde
hlt
gs
movs
xor
jmp
mov
pop
popf
sbb
or
pusha
lods
lods
lods
imul
movs
sbb
xchg
daa
jge
mov
push
adc
jae
sbb
loop
dec
xor
out
mov
jae
test
cli
push
stc
cmp
push
sub
push
adc
int
jg
push
xor
sub
call
push
psubusb
dec
push
jp
fisttp
iret
ins
loopne
xchg
sub
mov
(bad)
(bad)
shl
push
mov
lea
movs
popa
xchg
pushf
push
push
aad
enter
cmp
inc
jnp
cmps
add
mov
mov
xor
pop
aaa
out
loopne
daa
or
and
clc
mov
and
cmc
pusha
sti
jae
mov
mov
dec
xchg
pop
hlt
add
movs
jo
pop
in
push
out
inc
fcmovnb
movs
call
lahf
test
pop
js
out
loop
adc
in
pushf
adc
or
mov
cmp
xor
mov
aas
(bad)
xchg
into
in
mov
adc
and
sub
xor
dec
jle
mov
sub
retf
jno
jecxz
push
in
push
(bad)
stc
sbb
mov
scas
aam
outs
inc
add
jp
mov
test
movs
mov
movs
xchg
mov
(bad)
cmps
pushf
fwait
sub
call
test
cmps
mov
rcr
div
sub
imul
idiv
pop
add
fbld
jne
jmp
xor
pop
push
hlt
cmp
lahf
test
add
jmp
adc
mov
pop
adc
(bad)
xor
movs
sub
popa
jle
xor
cmps
sbb
fscale
sti
push
dec
cld
mov
dec
test
jle
popf
adc
cdq
xchg
sub
mov
cmp
rcl
(bad)
jno
in
cli
dec
loop
arpl
outs
xor
outs
xor
pop
shl
adc
sbb
imul
clc
xor
add
sub
aas
and
movzx
pusha
xor
sbb
ret
pusha
(bad)
adc
ret
sub
xchg
push
mul
mov
fcomip
ror
dec
aad
adc
cmpxchg
fild
pop
test
aad
push
fadd
pop
out
adc
adc
add
nop
ins
jb
mov
jp
and
lea
call
(bad)
clc
call
mov
rcr
push
sbb
sub
mov
adc
int
adc
std
push
add
and
push
out
jno
mov
out
add
push
dec
loopne
out
cmc
xor
and
movs
pushf
ins
add
mov
std
lods
mov
or
mov
push
adc
or
mov
lods
movs
mov
jae
je
cmps
and
imul
add
cmc
mov
cld
imul
dec
sub
xor
aam
cmps
sub
mov
cdq
retf
dec
mov
jo
imul
out
sti
in
pop
dec
iret
pop
adc
out
sbb
jns
sbb
nop
adc
int3
daa
call
retf
lea
xor
jp
loop
out
mov
popf
mov
dec
sub
gs
es
(bad)
into
sar
scas
pop
sbb
add
jg
mov
jb
sbb
mov
xadd
pushf
movs
sub
push
stos
and
pop
add
(bad)
test
imul
cmp
dec
lea
push
std
call
mov
test
lds
loope
into
mov
push
hlt
cmp
out
out
inc
shr
dec
adc
in
mov
cld
mov
jg
or
xor
adc
outs
sbb
push
(bad)
push
mov
push
fisub
test
rcl
mov
xchg
mov
ds
in
es
and
popf
push
xor
adc
jae
cmovns
es
sbb
or
mov
fbld
je
xchg
iret
test
xchg
je
xchg
sub
lods
and
jp
push
sbb
hlt
adc
popa
fwait
pusha
loopne
fstp
cmps
xor
xchg
cmps
jp
push
retf
adc
out
push
lahf
stos
xchg
test
in
retf
push
mov
mov
mov
aad
je
ret
pop
pop
in
ror
sbb
mov
repnz
fbstp
pop
sahf
sub
movs
or
adc
inc
pop
lods
cwde
out
xor
repnz
imul
push
jmp
std
add
sub
mov
dec
rcl
ret
push
mov
movs
add
aaa
mov
push
mov
imul
pushf
jmp
pop
adc
add
test
jae
xor
adc
leave
inc
mov
push
dec
xchg
pop
mov
add
add
jnp
loopne
lahf
idiv
adc
mov
pop
mov
jae
sub
pusha
pop
ins
rcr
push
rcl
mov
sub
push
dec
repnz
mov
loope
push
mov
add
inc
dec
fbstp
ja
adc
inc
(bad)
jle
xchg
pop
pop
push
pop
inc
add
or
inc
out
push
sbb
mov
mov
dec
mov
jb
mov
and
jl
into
cmp
movs
stos
out
shr
call
int3
mov
data16
jnp
test
and
inc
cmp
inc
fiadd
mov
xchg
imul
ror
or
or
mov
pusha
arpl
cdq
jo
and
and
repz
mov
adc
shr
sbb
test
mul
ret
imul
push
xlat
mov
ds
ds
repnz
aas
rol
sub
push
add
in
mov
adc
clc
mov
gs
mov
clc
cmp
or
mov
pop
pop
sbb
and
sub
inc
inc
mov
dec
cdq
mov
mov
sub
pop
cmp
int3
lahf
lock
push
or
jmp
aam
cld
dec
pop
push
jge
inc
movs
xor
sub
mov
jmp
jmp
push
fistp
sbb
ror
cmc
cmps
jno
fild
(bad)
test
movs
test
sbb
mov
fwait
jne
and
(bad)
xchg
push
inc
shr
out
sub
cmps
adc
pop
mov
into
imul
or
ss
call
add
jnp
adc
mov
dec
xchg
fild
fwait
outs
call
push
jp
jmp
test
jle
inc
xor
ins
mov
sub
icebp
shl
jno
mov
cmp
add
adc
popa
cwde
jbe
lahf
ror
xchg
enter
add
adc
or
jl
mov
xor
outs
in
popf
mov
out
fimul
inc
(bad)
aad
jg
sbb
aaa
mov
push
dec
fcom
arpl
mov
mov
push
outs
add
add
clc
test
sub
shr
repz
popa
sahf
ja
and
or
into
add
and
fiadd
ret
mov
ret
push
xor
sbb
imul
mov
fidiv
call
sahf
push
in
jne
dec
push
sub
jp
jbe
scas
or
int
xor
jmp
xchg
(bad)
jg
pop
jmp
dec
jmp
jnp
adc
add
(bad)
mov
out
push
mov
addr16
xchg
mov
dec
sti
mov
loopne
sbb
or
shl
scas
jne
ins
adc
ins
sub
mov
mov
mov
pop
dec
jg
and
mov
push
jg
or
call
cmp
sti
icebp
aaa
add
int3
mov
jo
adc
or
aas
fdiv
cmp
lods
mov
scas
test
and
out
inc
and
stos
fucomp
mov
pop
aas
cmp
xchg
out
xchg
rcr
pop
(bad)
scas
push
sbb
adc
cld
adc
add
in
mov
cmc
nop
push
sub
mov
bound
stos
sahf
adc
mov
dec
xor
mov
shl
mov
popf
pop
fadd
mov
or
les
ins
cmp
cmc
mov
cld
aas
adc
fistp
jle
icebp
repnz
ss
fdivr
(bad)
jl
rol
arpl
retf
out
cli
jae
add
es
call
test
pop
sbb
mov
jp
mov
mov
stc
fnstenv
or
nop
sub
out
lock
aad
cs
popa
out
retf
sbb
stos
mov
movs
add
inc
jo
push
pop
mov
cmps
sub
inc
xchg
movs
xor
dec
or
out
jns
jae
and
cwde
lds
imul
add
mov
shr
dec
(bad)
loop
pop
ret
movs
sbb
ret
mov
(bad)
es
ds
xor
push
add
sbb
cmp
sub
mov
lods
adc
mov
sub
popa
ss
xor
add
rol
hlt
ss
adc
or
mov
adc
(bad)
inc
xor
pusha
aad
popf
xor
add
push
lea
test
jl
mov
xlat
in
fisub
and
mov
adc
push
in
aam
outs
stos
sub
jmp
mov
je
pop
out
aad
pop
jns
xlat
repnz
out
data16
dec
bound
adc
test
add
dec
xchg
inc
mov
pop
jg
dec
hlt
mov
push
cmp
fmul
inc
xchg
pop
cdq
retf
xchg
outs
cmp
jmp
gs
ret
fisttp
dec
sub
fld
jb
mov
sub
sbb
call
sbb
sbb
cmp
sbb
push
jae
addr16
pop
retf
out
repnz
in
jl
lods
sbb
arpl
stos
imul
ret
lea
add
shr
add
mov
ja
(bad)
mov
div
and
mov
pop
mov
daa
dec
mov
in
add
xor
lock
mov
repz
mov
xor
out
fwait
pop
mov
push
les
xchg
xchg
inc
mov
hlt
dec
pop
dec
cmps
int3
out
pop
xchg
dec
pop
cs
xor
cli
fmul
adc
push
test
add
mov
lods
loopne
ret
jl
mov
pop
mov
cli
call
js
(bad)
sbb
cmps
lea
mul
cs
mov
jl
mov
outs
mov
push
jno
mov
mov
outs
fcom
inc
aaa
cli
shr
mov
in
mov
mov
leave
push
test
jno
cmp
fdiv
aad
xlat
inc
test
iret
sbb
xor
jecxz
imul
icebp
repnz
add
out
push
jno
jmp
pop
das
sbb
aas
xchg
mov
jnp
jne
mov
loopne
add
push
mov
out
lods
mov
jl
mov
iret
sub
fdiv
jne
mov
leave
xchg
mov
rcl
es
or
or
sub
out
retf
rcl
xlat
inc
bound
add
push
loope
pop
test
repnz
mov
rol
scas
lahf
repnz
pop
adc
pop
in
(bad)
adc
dec
sbb
dec
mov
fs
pop
icebp
aam
xchg
in
pop
mov
movs
in
sbb
leave
ret
xchg
pop
sub
adc
adc
fdivr
sub
mov
test
dec
xor
mov
popf
sub
dec
jl
enter
dec
push
mov
pop
sti
aaa
bound
mov
jg
pop
cmp
adc
dec
test
push
mov
cs
int
daa
and
leave
push
(bad)
jecxz
popa
shr
and
push
test
mov
jmp
fcmovne
jno
sub
popa
mov
arpl
xchg
mov
push
mov
jne
(bad)
fst
ja
loopne
cmps
jle
or
sti
add
and
dec
call
xchg
and
xchg
cs
popa
out
push
test
mov
sub
iret
leave
mov
jns
push
sbb
les
jmp
ret
xlat
das
and
addr16
fimul
mov
cld
mov
dec
shl
inc
jno
add
(bad)
out
or
cwde
sbb
pop
dec
enter
add
lock
stc
test
aas
pop
aaa
in
push
outs
idiv
mov
cmps
sub
mov
xchg
inc
in
adc
cmp
fldcw
mov
ins
clc
sub
adc
jae
adc
pop
pop
and
pushw
pop
ins
ret
sub
imul
ins
xchg
pop
aas
popa
mov
push
xchg
cmp
sub
mov
pusha
push
adc
xlat
sub
mov
add
lds
jmp
xchg
jmp
fadd
ret
or
xor
outs
mov
mov
xchg
lods
dec
mov
out
push
cwde
cmc
sahf
pop
imul
pop
call
mov
sbb
cmc
cmp
fcompp
xor
add
jo
sbb
push
sar
ror
cmp
rcl
das
mov
jae
cmp
gs
sbb
jg
cmp
js
stos
sbb
lea
and
cmp
lods
mov
and
jo
test
dec
out
or
add
outs
addr16
mov
jecxz
sub
mov
mov
repnz
jbe
or
into
sub
les
and
inc
jo
mov
in
mov
in
shl
bnd
jmp
fistp
or
pop
cmp
cmp
fbld
lock
push
gs
mov
add
das
inc
inc
ss
ror
ins
mov
fistp
push
scas
push
loopne
data16
aam
fwait
mov
pushf
and
enter
sbb
mov
pusha
and
retf
stos
loope
imul
push
xchg
(bad)
iret
cmp
pop
mov
cmp
sub
fs
mov
push
pop
xchg
fistp
and
ins
into
shl
dec
inc
in
fisub
adc
mov
mov
cmp
pop
iret
fwait
call
cdq
out
stos
movs
addr16
out
fwait
mov
pushf
mov
dec
lods
xchg
fdivr
pusha
pop
dec
stos
cmp
or
dec
and
push
stc
cmps
sahf
jl
mov
jns
push
aam
mov
rcr
and
sub
lahf
ret
retf
mov
cmc
pop
sbb
inc
repz
outs
push
mov
sub
repnz
mov
adc
sub
adc
push
shr
sbb
jb
xor
daa
jbe
mov
cwde
and
push
pop
fld
adc
pop
sub
add
shl
popf
test
mov
mov
inc
rcl
arpl
add
es
cmp
dec
xchg
cwde
out
add
(bad)
sbb
mov
daa
shl
addr16
xchg
inc
ret
add
test
add
xor
push
mov
push
dec
pop
(bad)
fmul
and
xor
xor
cmp
fwait
pop
adc
xchg
fiadd
lods
lea
arpl
mov
shl
sbb
pop
add
fnstenv
gs
out
push
mov
mov
cmp
mov
outs
xchg
retf
push
inc
pop
in
ret
bound
sbb
xchg
mov
jae
xchg
popa
xchg
outs
sbb
mov
inc
adc
mov
xor
sub
das
aad
imul
aad
pop
push
sti
test
sub
xor
adc
xor
(bad)
aas
adc
into
(bad)
xchg
(bad)
std
xor
shl
outs
lods
mov
hlt
jle
and
sbb
aaa
outs
mov
outs
dec
mov
dec
cmp
pop
mov
ror
ret
cmp
cmp
push
gs
jl
jge
inc
and
add
popf
jmp
mov
cmps
mov
retf
or
add
nop
jns
xchg
mov
(bad)
mov
pop
mov
jecxz
sub
popf
xchg
into
popf
ins
cmp
add
and
add
add
lods
mov
or
mov
push
mov
jb
xor
dec
scas
sub
push
arpl
aas
fs
mov
xor
or
repz
ss
(bad)
jle
sub
sub
mov
mov
in
inc
cmp
mov
dec
and
aad
in
pusha
jo
rcr
(bad)
rcl
xchg
sbb
fs
ins
mov
jmp
fdiv
popw
ret
sbb
test
cmps
in
push
dec
mov
adc
mov
dec
adc
dec
sub
or
cmp
sub
in
out
cdq
in
fldenv
mov
mov
int
popa
es
in
mov
push
xchg
push
inc
inc
jmp
dec
sbb
in
outs
loope
stos
sub
out
or
push
retf
mov
or
fsub
rol
push
outs
mov
jl
jne
stos
mov
xchg
push
cwde
inc
dec
fld
xchg
xchg
pop
pusha
imul
sbb
test
mov
dec
jecxz
popa
rcr
sub
(bad)
ja
inc
bound
outs
or
nop
cmps
lds
cli
jbe
mov
popf
mov
sahf
add
jmp
in
ins
cld
push
jle
or
jae
call
xchg
mov
(bad)
pusha
mov
sti
in
xchg
int
in
inc
shl
in
retf
add
add
into
mov
imul
sti
shl
or
gs
hlt
jne
push
dec
outs
dec
push
fidiv
aam
ins
repz
jmp
out
sbb
in
in
sub
cmp
sub
outs
mov
mov
xchg
out
(bad)
cmp
cmc
xchg
push
pfcmpeq
inc
test
cld
imul
jl
jns
mov
adc
sbb
xchg
retf
add
pusha
mov
clc
and
mov
rol
fiadd
dec
push
iret
test
xchg
jecxz
repnz
jo
cmp
cld
dec
test
add
popf
sub
jl
inc
sub
(bad)
sub
inc
mov
sub
pop
rol
mov
add
fild
add
aaa
iret
retf
gs
mov
mov
push
bnd
call
loopne
mov
fwait
addr16
add
stc
pop
push
dec
out
cmp
mov
mov
int3
lahf
das
pop
int
add
rcl
inc
jmp
mov
fisttp
mov
rol
add
pushf
popa
imul
lahf
cmp
repz
push
xor
jl
or
fld
push
(bad)
cmp
fcomp
add
imul
aas
sub
jmp
pop
repz
pop
sbb
mov
sahf
inc
xor
(bad)
cli
sbb
cwde
mov
add
retf
xor
adc
xor
gs
push
popa
mov
int3
rcr
mov
in
jge
and
test
xlat
pop
out
sub
pop
sbb
out
sbb
inc
fiadd
fisttp
popa
aas
xchg
test
cmc
xchg
outs
push
mov
jmp
std
ret
int
pop
scas
jecxz
ret
mov
out
cmp
jp
scas
das
push
inc
xor
shr
sbb
pop
push
dec
ss
and
bound
inc
popa
sub
sbb
cli
jae
arpl
mov
cwde
or
sbb
add
push
adc
ror
push
stos
jge
push
jecxz
into
push
sbb
mov
aad
and
pusha
jmp
jmp
sub
sub
pop
je
sub
push
dec
retf
addr16
es
ds
jp
push
je
jae
sub
popa
cli
push
fs
test
jecxz
adc
xor
xchg
out
je
rcr
push
dec
push
stos
mov
mov
sar
jp
push
sbb
loop
pusha
lahf
xor
stos
dec
loopne
loop
jno
neg
repnz
pop
push
mov
inc
fsub
pop
into
add
test
mov
sbb
icebp
xor
repnz
mov
jne
lock
fld
das
int3
jmp
retf
xchg
clc
test
adc
sbb
int
xchg
mov
jno
leave
push
mov
ror
hlt
(bad)
arpl
cmp
fnstsw
rcl
xchg
add
mov
dec
cmp
(bad)
div
jp
lods
int
gs
mov
pop
push
retf
in
fist
push
into
dec
loopne
in
lea
cmps
pop
dec
push
xor
ins
jge
mov
cs
movs
add
in
inc
mov
fucomp
sbb
pop
imul
add
fisub
test
pop
sbb
or
and
retf
mov
jmp
jo
fld
cld
jne
leave
imul
pushf
cmp
vmovmskpd
dec
sahf
dec
sbb
xor
rol
dec
cmp
mov
sub
mov
mov
jns
jg
dec
retf
push
pusha
(bad)
dec
enter
pop
push
or
sub
xchg
jecxz
pop
pop
fdivr
js
xchg
ja
dec
mov
arpl
fdivr
std
out
out
jnp
cli
(bad)
daa
push
mov
xchg
imul
mov
es
mov
pop
cwde
mov
push
jne
in
rol
push
sahf
push
(bad)
fadd
(bad)
mov
jbe
sbb
mov
nop
(bad)
and
mov
jle
push
and
add
jmp
mov
outs
rol
fild
ret
xchg
icebp
mov
dec
jb
push
aas
jno
and
test
mov
rcr
(bad)
jge
cmp
je
xchg
adc
es
mov
inc
pop
pop
loopne
leave
push
arpl
mov
fwait
adc
mov
aaa
int
mov
cmc
push
push
outs
repz
out
mov
daa
dec
mov
xor
and
in
rcl
ret
mov
xchg
lock
call
popf
je
sbb
mov
mov
in
mov
mov
pushf
int
mov
mov
fcmovne
sahf
fcmovnbe
ss
ret
(bad)
cmp
jge
outs
ror
test
and
mov
cmps
scas
xlat
xor
bnd
ss
dec
mov
pop
cmps
imul
inc
es
fwait
(bad)
cmps
aad
push
cmp
xchg
push
jbe
hlt
mov
scas
rol
mov
jecxz
push
in
lds
fiadd
cmp
cmp
retf
stos
(bad)
addr16
jmp
in
and
cmc
sahf
pop
imul
push
sahf
shr
int3
mov
dec
and
jmp
ins
dec
dec
mov
cmp
adc
inc
mov
rdmsr
xor
les
push
inc
enter
xor
jo
jmp
dec
jecxz
pop
sub
xchg
aad
pusha
add
test
add
pop
inc
bound
push
inc
repnz
dec
iret
repnz
dec
add
out
inc
mov
push
mov
dec
add
cmp
rcl
mov
loopne
ret
out
cli
data16
aam
test
jle
and
add
leave
and
or
fistp
jno
mov
sbb
add
test
mov
xor
mov
jns
xor
push
or
sbb
adc
inc
jo
test
jmp
cmp
das
adc
(bad)
push
adc
retf
push
sub
push
or
xor
rcl
xor
cmp
ss
iret
jo
out
enter
loop
mov
adc
sub
arpl
aam
xchg
jo
sub
pop
inc
push
xchg
sub
mov
push
rol
push
adc
or
cmp
lea
lods
sahf
push
mov
imul
test
dec
sbb
inc
outs
gs
movs
or
call
jmp
xchg
mov
adc
fwait
lock
pop
fwait
and
mov
daa
inc
into
std
xor
mov
xchg
clc
std
retf
or
pop
fistp
sbb
sub
cdq
cmc
iret
shr
bound
outs
inc
test
js
aas
es
mul
out
mov
out
(bad)
loopne
scas
sbb
ss
pop
loop
das
call
jmp
movs
xchg
sub
je
sub
outs
jle
fild
inc
loope
push
push
jb
lea
push
sub
leave
push
mov
jo
push
aaa
jg
movs
mov
jmp
mov
outs
mov
ins
fsubr
data16
call
cmps
in
fisub
mov
mov
xlat
mov
sti
jb
cmp
call
pop
pop
shl
mov
xchg
jmp
movs
pop
sub
and
jg
test
xor
cmps
fcomip
outs
imul
js
je
addr16
cwde
pushf
dec
push
sbb
mov
fisubr
dec
adc
jp
dec
test
clc
cmc
rol
add
lods
ins
and
sbb
fstp
pop
mov
inc
push
bound
push
mov
mov
xchg
in
std
enter
ror
loop
sub
test
mov
mov
mov
sub
stos
je
idiv
or
sub
dec
push
aam
enter
test
ins
addr16
push
xor
je
mov
sub
out
inc
test
cmp
rcr
cmp
jno
cmp
sbb
push
fsubr
test
push
aas
call
jmp
adc
sub
aam
mov
das
in
push
dec
cmp
out
inc
jg
or
cmp
pop
outs
xchg
push
mov
out
mov
(bad)
(bad)
fst
popa
(bad)
sbb
out
(bad)
xor
and
mov
inc
cmc
xlat
inc
int
jno
push
adc
dec
pop
dec
adc
and
imul
addr16
call
or
cmp
lock
imul
lahf
fidiv
mov
sbb
pop
xchg
int
inc
ret
out
outs
(bad)
outs
xor
push
das
rcr
and
jmp
pop
inc
nop
mov
sbb
mov
int
lock
in
xchg
pop
cmp
pop
cwde
mov
jecxz
sub
add
int3
jmp
adc
mov
add
and
xchg
fdiv
push
icebp
xorps
scas
sbb
mov
neg
sub
xchg
xlat
mov
ficom
adc
sar
jp
in
jbe
push
xchg
mov
mov
loope
in
sub
mov
xchg
cmp
adc
jge
and
outs
sbb
popf
push
add
mov
xchg
cmp
mov
daa
in
repnz
test
imul
push
enterw
mov
push
jno
repnz
cmps
ror
or
jle
in
and
imul
call
mov
(bad)
lods
stos
inc
aad
mov
push
sub
xchg
jle
sub
push
ds
sbb
jbe
and
cmp
adc
fld1
enter
pusha
repnz
aad
jae
icebp
test
pop
jbe
movs
and
add
mov
mov
out
std
into
inc
mov
lods
movs
mov
div
sbb
or
fcom
and
jmp
(bad)
sbb
popf
mov
pop
inc
mov
fwait
jbe
or
jb
stos
xchg
sbb
sbb
sub
adc
xchg
push
mov
sbb
(bad)
xchg
xor
fisttp
jnp
lock
(bad)
xor
outs
ror
adc
cmp
div
sbb
push
jl
cli
add
add
in
loope
sahf
jno
and
xchg
push
imul
xor
retf
cmp
lock
inc
jb
popa
or
and
lods
daa
inc
mov
xchg
cmp
shl
enter
or
icebp
test
js
sbb
(bad)
mov
dec
outs
cwde
aam
fcom
lods
dec
ds
and
mov
inc
pop
(bad)
std
add
jg
push
cdq
add
and
jmp
fisttp
call
jmp
dec
xchg
aas
sub
push
sub
or
bound
rcl
(bad)
test
sbb
mov
aam
dec
lods
jl
retf
mov
add
jbe
lds
inc
mov
mov
push
or
outs
test
daa
popf
push
push
movs
and
xchg
inc
cwde
(bad)
iret
into
test
xchg
test
or
das
loopne
(bad)
popw
adc
and
test
(bad)
lahf
rcl
ins
mov
add
imul
or
aad
outs
std
xlat
test
shl
mov
ss
dec
es
jbe
mov
jns
and
and
mov
cmc
inc
inc
cwde
cmc
xor
add
or
xlat
(bad)
(bad)
mov
pop
retf
outs
ins
xchg
shl
scas
test
xchg
inc
cmp
xchg
hlt
adc
shr
pop
in
es
mov
mov
pop
repnz
or
sbb
xchg
inc
leave
sub
inc
cwde
xor
mov
fnsave
test
cdq
repnz
sub
movs
jle
popf
(bad)
dec
dec
ja
pop
je
and
fsub
or
ja
retf
in
scas
dec
cmp
mov
div
in
and
add
test
mov
bound
adc
push
rcpps
fstp
popa
sub
pop
add
dec
cs
(bad)
or
pop
dec
sbb
int3
enter
adc
push
into
push
push
sbb
lea
cmp
dec
scas
out
mov
sahf
push
aas
in
pusha
pushf
fist
shrd
pop
or
out
ins
sbb
fisub
cwde
or
frstor
int
in
inc
das
sbb
xchg
jmp
imul
cmc
lock
leave
jo
fcmove
sub
add
ds
ret
and
sbb
mov
in
adc
mov
popa
push
jge
xchg
repz
mov
cli
or
push
call
mov
mov
enter
jp
dec
in
cmp
or
add
xchg
daa
adc
je
pop
frstor
sahf
xchg
sbb
retf
loopne
adc
jns
push
push
xor
iret
pop
xchg
pop
xchg
pop
mov
ins
movs
inc
outs
sub
jl
iret
add
xchg
adc
dec
leave
jge
nop
mov
sub
fwait
mov
and
cli
shl
into
sbb
inc
add
or
add
jl
not
(bad)
cwde
adc
jge
out
mov
mov
pop
fcomp
push
(bad)
add
out
mov
ins
push
push
add
pop
outs
adc
dec
call
ja
test
lea
sub
xor
outs
into
mov
jg
fdiv
mov
fsubr
mov
mov
cld
adc
nop
ins
sub
lahf
sbb
push
xor
popf
cmps
fnstenv
jnp
and
pop
mov
ins
(bad)
jbe
test
(bad)
icebp
xchg
inc
mov
dec
mov
icebp
leave
mov
or
imul
sbb
lock
xlat
fisub
shl
ja
out
pop
mov
js
inc
jp
xor
push
mov
dec
pop
xor
push
xor
in
int
xchg
mov
ds
cmps
xchg
sbb
xlat
ss
mov
add
enter
sahf
fcom
popf
add
leave
mov
(bad)
lds
mov
loopne
pop
adc
and
jg
push
and
out
aas
mov
cmp
sbb
xchg
ins
pop
mov
pop
sub
pop
aam
cs
cli
sub
inc
ret
mov
push
call
fsub
pushf
pop
into
and
out
push
in
xor
lock
fsub
add
ss
int
adc
mov
test
sti
or
lea
xor
push
jo
dec
retf
cwde
lods
pusha
ss
inc
pop
push
sub
ror
cli
mov
fcom
add
adc
cmp
ret
rcl
mov
or
and
shr
sub
outs
sbb
bound
xor
adc
leave
out
xor
loop
and
hlt
int
clc
bound
push
xchg
sub
(bad)
cmp
inc
sbb
pop
ret
mov
(bad)
sahf
xchg
xchg
pop
iret
call
iretw
(bad)
popf
(bad)
jl
(bad)
icebp
leave
inc
adc
adc
aam
fimul
je
jo
outs
clc
jmp
mov
movs
sbb
popf
pop
jmp
jb
outs
ror
ins
xchg
loope
jae
lods
xchg
jp
stos
inc
jle
xchg
mov
(bad)
out
push
aas
mov
mov
ins
and
add
mov
sub
xchg
lea
dec
frstor
and
aam
mov
in
xchg
sbb
(bad)
scas
dec
aas
cdq
ja
fs
sbb
out
xchg
adc
lea
imul
ins
lods
fld
jge
jle
int3
stos
fldenv
sbb
jmp
scas
jge
sub
out
nop
jnp
enter
dec
int3
cmp
and
dec
repnz
sbb
inc
mov
fisubr
mov
pop
pop
or
sub
cmp
ror
ins
push
(bad)
push
mov
out
pop
sar
stc
div
dec
sbb
icebp
mov
movs
pop
adc
cdq
sti
cmp
addr16
sub
cs
push
mov
and
ficomp
xchg
scas
inc
pop
mov
movs
int3
rol
ds
call
mov
cs
fld
push
jns
cmc
add
cmps
shl
and
ins
dec
dec
into
mov
div
jns
jp
call
sti
cld
dec
lahf
test
int
mov
sub
inc
popa
mov
ror
mov
xor
daa
pop
in
bound
(bad)
xor
js
and
rcl
push
inc
jmp
and
cmc
jmp
inc
movs
fcomp
repz
cmp
ret
std
in
fs
push
mov
test
(bad)
mov
push
lods
into
es
je
popa
cmp
push
adc
ficomp
mov
adc
fld
lds
jno
or
movsx
and
mov
mov
pop
add
jo
fmul
jmp
push
pop
push
jns
jne
fadd
add
add
outs
xchg
mov
and
lock
loope
fsub
mov
cmp
int3
mov
outs
pop
inc
xchg
mov
mov
cmp
adc
mov
push
mov
es
inc
sbb
aaa
cmp
mov
pop
ret
arpl
cld
in
(bad)
mov
fld
inc
and
movs
cmp
gs
or
xor
dec
arpl
leave
hlt
fwait
loope
xchg
retf
cmp
mov
inc
sub
test
test
sbb
std
sub
call
sub
mov
(bad)
fsubr
add
push
int
pop
or
cmp
das
aaa
mov
jp
pop
jmp
xor
cmp
fdivr
(bad)
ret
push
and
iret
jle
int
int3
aam
mov
or
cmp
in
dec
add
out
imul
xchg
xor
cmps
add
add
pop
arpl
mov
clc
mov
push
xchg
aam
jae
jne
jp
xchg
lods
cmp
ins
inc
mov
mov
dec
fist
gs
enter
mov
sub
push
rcl
daa
xchg
xchg
rcl
jmp
jae
push
or
cmp
cmps
push
cmp
fcmovnbe
mov
mov
frndint
retf
push
sbb
cmp
dec
cmc
ss
mov
aaa
and
inc
(bad)
mov
cmp
dec
lahf
mov
sub
sbb
add
fst
or
pop
pop
sub
mov
sbb
jb
loope
pop
nop
cmc
and
in
jge
pop
mov
and
or
addr16
clc
stc
xlat
lods
add
and
mov
movs
mov
gs
lods
cdq
in
inc
mov
jge
mov
inc
call
pop
call
xchg
xor
es
jge
into
sub
scas
cmp
pusha
aas
mov
add
push
add
and
out
jle
pop
sbb
aad
dec
adc
mov
(bad)
jne
pop
jno
int
push
ret
xlat
push
xor
in
cmp
(bad)
rol
xchg
jbe
jns
mov
repz
rcl
or
mov
mov
dec
ins
push
mov
cli
test
ficom
retf
pop
add
mov
sub
lea
leave
aad
mov
test
retf
int3
rcr
ret
aaa
push
leave
data16
imul
fstp
adc
sbb
out
dec
hlt
adc
mov
clc
out
jno
int
shr
mov
sar
xchg
nop
fadd
mov
add
jne
xchg
nop/reserved
and
mov
jecxz
push
fcomp
xchg
add
test
adc
mov
dec
fwait
sub
pushf
rol
sbb
lock
pop
mov
and
in
mov
retf
add
or
repnz
fs
cli
ja
icebp
push
retf
stos
hlt
leave
daa
pop
dec
movups
gs
mov
xchg
and
jge
push
call
dec
aad
popf
cmp
mov
mov
and
push
gs
sbb
gs
les
cmp
mov
sbb
int3
add
sbb
into
and
sbb
jle
dec
sbb
lock
inc
push
inc
movs
gs
inc
push
or
mov
into
jno
cmp
or
push
(bad)
sbb
sbb
adc
test
cmp
pop
sbb
pop
sub
dec
loop
mov
sub
add
ss
out
adc
sbb
fwait
adc
xor
(bad)
out
adc
or
adc
fisubr
sbb
ds
js
sub
or
mov
fimul
in
xchg
or
retf
data16
std
out
jne
int
sbb
test
mov
fs
outs
fs
movs
xchg
shl
stc
call
lods
fcomp
movhps
jnp
fidivr
push
xchg
jb
sub
fisubr
outs
inc
lods
mov
int
inc
das
scas
addr16
mov
stc
loope
test
add
leave
ja
pop
js
aad
fwait
das
pop
jle
push
fstp
iret
iret
daa
xchg
loope
rcl
sbb
(bad)
sub
movs
mov
in
aaa
add
je
pop
repnz
call
std
shl
dec
movs
outs
movs
pop
outs
enter
push
jmp
mov
in
ja
sbb
xchg
adc
or
into
and
out
test
in
xchg
retf
and
mov
jl
test
push
mov
dec
push
xor
sub
pop
mov
(bad)
lahf
or
sbb
adc
sub
into
cmp
mov
stos
lahf
mov
rcl
pop
test
inc
jmp
call
xor
daa
(bad)
not
out
mov
ficom
js
mov
fistp
aam
jo
lods
and
dec
(bad)
push
aad
sbb
adc
cs
fadd
call
enter
fild
in
imul
cwde
mov
and
mov
pop
sbb
cmps
mov
mov
mov
cld
xlat
or
ret
inc
mov
shr
cmp
mov
push
imul
popa
(bad)
sbb
dec
mov
cmp
aam
mov
shl
popf
jmp
sub
imul
test
and
cmp
bnd
mov
sub
add
rcr
movs
push
dec
jmp
push
ins
mov
cmp
mov
sub
push
xor
push
ret
aas
adc
sahf
sbb
add
repz
daa
int3
add
jle
inc
dec
fisubr
cmps
fwait
test
mov
test
cmps
mov
lods
outs
xchg
xor
dec
xor
popa
push
popa
addr16
xchg
imul
fldenv
pop
sub
lock
ret
or
stos
mov
loop
repnz
mov
adc
test
loopne
push
and
je
inc
jmp
scas
push
outs
add
daa
add
hlt
push
cmp
in
jmp
lods
mov
pop
lock
xlat
(bad)
jne
mov
(bad)
stos
jnp
mov
hlt
ins
test
in
mov
mov
ja
jmp
lahf
lea
or
ret
idiv
xchg
test
aas
mov
mov
add
push
aad
adc
cmc
in
add
mov
out
sahf
ror
mov
imul
call
mov
jae
mov
push
sub
fimul
push
mov
or
mov
xchg
bnd
mov
sub
loop
pop
repz
cmc
mov
test
push
pop
addr16
scas
pop
popa
dec
push
or
add
cmp
pop
pop
cmps
cmp
mov
xchg
mov
add
dec
sbb
adc
and
das
cs
push
adc
outs
clc
push
pop
pushf
jbe
push
imul
in
xor
push
pusha
add
xor
(bad)
in
and
xchg
push
popa
push
ror
aaa
mov
dec
in
lods
xor
mov
jmp
xchg
mov
jae
and
inc
jae
movs
addr16
cmp
mov
rcr
pop
add
in
int3
iret
ret
cwde
push
push
push
dec
inc
and
sub
ret
mov
jbe
out
push
stc
fild
mov
int3
mov
in
mov
pop
pushf
ins
sbb
iret
mov
sbb
es
mov
xor
sar
mov
ss
add
aas
sbb
xchg
jmp
addr16
cmp
cmc
lods
enter
ds
pushf
rcl
push
mov
inc
daa
mov
es
and
call
mov
sub
repnz
push
xchg
or
sub
(bad)
(bad)
(bad)
addr16
push
loop
jb
div
es
adc
test
test
and
dec
xor
adc
xor
adc
add
jp
dec
jns
lds
(bad)
fcom
lock
fs
inc
js
xor
add
push
mov
mov
repnz
xchg
mov
mov
jno
jbe
les
ds
fidivr
sahf
sub
push
dec
push
outs
into
daa
mov
daa
cmp
and
jp
retf
out
aaa
push
push
cld
stos
cwde
call
mov
pop
lods
adc
rcr
hlt
(bad)
test
test
adc
jo
gs
mov
in
cmp
xchg
sbb
pop
js
sti
stos
mov
(bad)
pop
aaa
movs
jne
dec
xchg
loop
retf
inc
cmp
add
push
sub
xchg
outs
lea
inc
fstp
jnp
cs
cs
xchg
and
xchg
cld
aad
aaa
stos
(bad)
push
and
cs
lods
or
sbb
and
inc
lods
cmp
cmp
test
sbb
adc
push
xlat
jo
adc
jbe
sahf
test
cmp
cmp
add
int3
xchg
xchg
movs
push
sbb
cmp
arpl
cmp
test
lods
aas
outs
mov
test
xchg
lock
jecxz
js
jae
bound
jb
adc
movzx
pop
inc
push
(bad)
and
sbb
ins
add
push
(bad)
sbb
inc
out
sahf
retf
mov
aad
pop
sbb
xor
pop
push
enter
push
xchg
fdivr
(bad)
shl
aad
mov
lea
add
aas
es
push
test
sub
rcr
inc
ss
stos
mov
call
mov
retf
lds
sub
jae
ret
mov
xchg
lahf
call
sub
sbb
and
or
leave
cmc
dec
cdq
cmp
or
and
mov
push
sub
(bad)
in
pop
pusha
adc
int3
loope
test
clc
and
movs
jp
ror
ficom
or
xor
adc
(bad)
loope
cmp
mov
sub
sbb
mov
cmp
movs
mov
out
pop
retf
and
jbe
push
stc
inc
inc
pushf
mov
mov
repnz
adc
pop
ss
shl
jmp
or
out
adc
ja
clc
jge
sbb
push
sub
pop
test
or
push
movs
in
mov
ret
inc
ja
pop
lods
pop
pop
das
mov
aam
add
or
popf
mov
cmps
aaa
lea
mov
cmp
and
inc
push
lds
push
ds
xchg
pop
and
fdiv
int
or
movs
adc
and
jnp
xchg
nop
jne
movs
mov
mov
inc
or
aaa
lahf
dec
inc
mov
idiv
cli
mov
push
push
push
ftst
jmp
aaa
push
pushf
jne
aaa
int3
adc
sti
enter
icebp
push
es
ins
inc
xor
cmp
movq
loop
dec
call
sub
sbb
cmp
ins
mov
cmp
int
call
and
add
bound
std
jbe
inc
lds
jge
aam
add
cmp
adc
sti
(bad)
cmp
mov
jp
movs
mul
add
cmp
jp
jo
fimul
pop
out
ins
addr16
imul
mov
or
sbb
outs
jmp
mov
nop
mov
push
push
xor
outs
mov
cmp
push
cs
mov
jl
repnz
push
sbb
push
mov
ficom
ins
mov
pushf
push
mov
pop
xchg
jno
or
mov
jg
into
mov
pop
hlt
sub
fwait
dec
xor
xlat
or
or
jnp
int3
push
sbb
int
pushf
lods
push
inc
add
sbb
xchg
enter
sar
inc
pushf
and
(bad)
out
popf
mov
adc
icebp
gs
inc
push
xchg
icebp
and
test
ror
mov
xor
pop
cwde
stos
adc
sub
cmp
movs
sub
(bad)
mov
push
popaw
(bad)
(bad)
in
outs
add
xchg
jg
fimul
lods
mov
jmp
out
cmp
iret
sti
and
push
shl
mov
xchg
jmp
fimul
push
clc
sbb
push
sub
ficomp
not
lods
mov
cld
and
aad
std
sar
cmp
test
call
dec
dec
fcom
adc
sti
jge
repz
cmp
or
es
pop
ret
cmp
lods
test
jnp
add
push
push
xor
xor
and
dec
test
inc
push
mov
jl
icebp
retf
(bad)
fcom
fidiv
add
(bad)
xchg
mov
shl
mov
retf
arpl
out
std
cmps
fcomp
out
jmp
adc
lahf
xor
popa
inc
adc
xchg
cmps
rol
popa
aam
and
mov
mov
lahf
inc
xor
mov
or
add
jns
test
push
(bad)
sbb
adc
push
xchg
es
aam
ins
test
stos
(bad)
fnstcw
(bad)
jmp
xchg
mov
xchg
ja
adc
cmp
cld
sub
sbb
cmc
(bad)
pop
ret
or
xchg
iret
and
out
xchg
mov
daa
(bad)
pop
cwde
adc
push
and
push
jp
jae
pop
lods
push
stos
push
xor
mov
xchg
call
(bad)
pop
jg
lods
(bad)
inc
sub
mov
(bad)
retf
pop
or
adc
mov
retf
cli
popa
add
push
adc
mov
push
popa
out
ins
and
inc
jnp
aam
mov
lds
jle
outs
jnp
fist
test
xchg
test
pop
push
or
jne
xor
movs
inc
jecxz
aaa
sti
aam
iret
lahf
nop
add
sbb
popa
cmps
push
push
leave
enter
cmp
xchg
or
mov
retf
or
cmps
push
test
or
cdq
pop
das
xchg
ins
pop
or
daa
ret
cmp
and
mov
mov
retf
push
call
retf
test
push
mov
xor
mov
in
inc
sub
mov
lods
imul
mov
inc
sub
mov
sbb
int3
jmp
cmp
sbb
mov
fs
xor
jg
push
dec
cmps
xchg
(bad)
shr
sub
cmps
aam
sbb
cmp
mov
into
loop
dec
inc
pop
retf
stc
fld
inc
sub
sbb
popf
lods
rcr
pushf
push
pusha
call
adc
mov
sti
inc
out
sbb
inc
sub
pop
jns
xchg
(bad)
and
jae
mov
repz
adc
hlt
xchg
sbb
dec
addr16
xchg
hlt
or
jge
mov
repnz
retf
jecxz
int3
xor
retf
mov
nop
sbb
xchg
enter
pop
jmp
xchg
mov
sub
cli
push
xchg
pop
inc
hlt
sar
pop
xchg
add
mov
jecxz
and
ja
test
(bad)
bnd
test
cmp
scas
dec
adc
test
enter
push
inc
xor
cmps
or
cmp
icebp
stos
sbb
or
push
movs
bound
scas
shl
mov
dec
shr
dec
xchg
in
test
push
xchg
jne
shl
dec
fwait
inc
gs
aas
ret
mov
and
inc
jbe
sbb
and
mov
test
fnstsw
jae
sti
sahf
imul
add
mov
cmc
cmc
(bad)
sbb
or
call
addr16
mov
dec
cmps
mov
das
xor
adc
rcr
popf
leave
adc
jle
xchg
add
push
fild
pop
mov
mov
jnp
hlt
push
clc
mov
mov
call
jmp
mov
popa
mov
mov
pop
mov
dec
push
mov
or
dec
adc
nop
js
pushf
sub
movs
add
fsubrp
fnstenv
neg
mov
xlat
pop
retf
loopne
adc
inc
jp
ss
sbb
cmps
jmp
xchg
rcl
dec
dec
adc
mov
push
xchg
sbb
jno
dec
jecxz
cmp
or
ins
scas
mov
jmp
mov
xchg
push
mov
sbb
mov
and
and
push
sbb
lods
sbb
lea
loop
jle
push
xchg
ret
adc
test
addr16
or
push
stos
pushf
mov
inc
dec
sub
cmps
std
leave
fld
mov
jb
xchg
or
dec
mov
mov
stc
fwait
jge
jg
sub
jb
arpl
mov
jle
add
push
pop
and
sub
cld
lahf
adc
mov
mov
inc
cld
adc
sar
push
xlat
lds
ins
pop
fsubp
xor
in
jg
sbb
arpl
xor
jge
mov
out
jecxz
add
cli
xchg
push
push
sub
push
mov
cs
in
pop
mov
and
ja
push
push
aas
cmp
push
(bad)
popa
daa
out
out
add
iret
int3
dec
addr16
nop
dec
test
jne
sbb
mov
pop
repz
adc
aam
rcr
icebp
idiv
stos
sbb
jmp
shl
fidiv
nop
xor
and
shl
add
ins
sete
cdq
xor
loopne
mov
int
xchg
xchg
fsubr
mov
int
mov
aad
dec
mov
int
pop
stos
adc
add
(bad)
pop
scas
jmp
dec
cmps
in
ror
call
ret
mov
faddp
ss
xlat
int3
jmp
ss
mov
fisttp
pop
pop
stos
pop
mov
add
dec
mov
xor
pop
sbb
inc
jne
and
fs
push
xchg
mov
mov
jmp
inc
push
clc
outs
push
mov
or
scas
mov
mov
xor
jno
ins
dec
int
test
xor
imul
xchg
mov
jge
addr16
in
jnp
cmp
outs
in
rcl
nop
jecxz
jl
sub
aad
ins
sub
out
fisub
int
xor
or
and
xor
lds
ins
mov
pop
out
rcr
dec
jp
push
push
mov
jle
lea
(bad)
test
out
(bad)
fcmovnu
retf
pop
dec
pusha
data16
push
das
push
push
repnz
je
jmp
imul
mov
mov
mov
rcr
mov
repnz
ins
out
shr
cmp
mov
hlt
jp
cmp
shld
repz
mov
mov
sahf
mov
repz
sahf
loope
(bad)
pop
stc
push
bound
xor
inc
std
jecxz
mov
cld
movs
jmp
xchg
lods
data16
push
xor
dec
pop
mov
pop
mov
out
js
and
push
mov
test
xchg
mov
inc
mov
add
arpl
dec
lods
or
or
das
out
out
daa
(bad)
ds
ret
(bad)
fbstp
mov
push
les
(bad)
loopne
push
mov
test
lahf
jmp
(bad)
mov
test
mov
(bad)
ret
(bad)
outs
int
or
sub
(bad)
(bad)
fcmove
xor
es
xor
aam
imul
xchg
add
or
mov
sub
jo
mov
imul
loopne
cld
cmps
leave
mov
mov
cld
icebp
dec
shl
sub
loopne
mov
or
pushf
xor
mov
shl
sub
push
std
retf
dec
xchg
xor
cmp
push
jge
scas
mov
test
pushf
sub
imul
or
imul
mov
aad
sub
xor
sub
or
cmps
xor
xlat
gs
mov
in
stos
rol
data16
cdq
push
ret
mov
aad
push
xor
(bad)
aad
mov
jne
clc
aad
(bad)
or
loopne
pop
js
add
pushf
clc
mov
test
retf
ds
ror
xor
jbe
rcr
and
sti
xlat
stos
call
popa
lods
sbb
cli
adc
mov
popf
retf
aas
imul
in
and
push
dec
inc
fcom
ret
daa
add
jbe
call
movs
iret
call
into
ds
sub
daa
shr
sbb
and
cmp
jecxz
stc
test
mov
xchg
call
dec
push
ret
ficom
lds
or
inc
pop
std
cld
sti
gs
mov
pop
into
mov
je
jnp
xchg
mov
ja
and
scas
lds
add
les
sbb
ja
test
dec
jmp
(bad)
xlat
cli
rol
stc
and
sub
imul
mov
mov
scas
scas
(bad)
xchg
mov
popf
aam
mov
cmp
in
add
mov
or
outs
retf
mov
mov
clc
(bad)
imul
adc
adc
aam
mov
ds
add
fwait
hlt
sub
mov
mov
sbb
xlat
mov
ret
push
mov
je
xlat
jne
mov
sub
(bad)
mov
push
pop
xor
or
cmc
test
fiadd
and
push
pop
xchg
cli
clc
inc
sbb
or
hlt
out
aaa
in
mov
xlat
test
call
imul
or
jnp
gs
(bad)
movs
and
cs
mov
pop
push
ja
adc
mov
ja
std
mov
leave
fsub
mov
push
jns
rol
mov
sbb
mov
outs
je
push
jl
sub
inc
xchg
cmp
sub
stos
pusha
and
adc
add
leave
out
test
lods
es
cwde
cmp
arpl
and
retf
push
inc
retf
mov
adc
inc
push
loop
outs
scas
dec
in
cwde
jo
scas
mov
cs
movs
xor
into
xor
mov
fnstcw
mov
sar
das
repnz
or
das
test
inc
gs
ret
rcl
and
imul
add
or
pop
mov
cdq
sbb
xchg
mov
loope
fld
out
ss
(bad)
rcr
pop
aad
xchg
inc
fisubr
push
in
fcom
nop
icebp
add
xor
cwde
add
mov
sub
in
test
lea
arpl
fsub
push
pshufw
test
jp
retf
jmp
ins
out
add
jae
xor
repnz
test
mov
pop
std
push
add
pop
std
sbb
cmp
cdq
or
inc
(bad)
mov
sub
add
test
and
sbb
lds
push
sbb
xchg
push
scas
ins
dec
or
xor
loop
popa
out
fldpi
test
pushf
ss
ins
mov
bound
das
std
push
ffree
sub
movs
stc
test
(bad)
cmp
lods
and
loopne
xor
pop
dec
inc
add
popa
inc
sti
test
dec
dec
stos
fistp
test
xchg
ja
retf
nop
xchg
jp
inc
add
sub
sub
sbb
dec
cmp
fnop
inc
sbb
(bad)
call
pop
add
pop
xchg
sbb
nop
outs
xchg
mov
movs
pop
jg
jge
loopne
jp
clc
lods
push
rol
inc
xchg
jb
je
pop
mov
aaa
stos
push
dec
mov
inc
jne
lods
dec
stos
data16
jmp
mov
pop
fidiv
lods
jnp
xchg
mov
enter
cmp
push
lods
imul
sbb
inc
cdq
mov
bound
or
frstor
mov
pop
cld
in
push
mov
jno
xchg
mov
ds
push
arpl
pop
test
ins
(bad)
mov
je
pushf
xchg
lahf
lahf
in
les
test
push
iret
mov
fadd
jb
loop
imul
mov
mov
les
les
call
xor
add
repnz
(bad)
gs
push
sti
and
scas
and
pop
imul
mov
fwait
inc
adc
int3
arpl
push
pushf
jecxz
xchg
inc
inc
out
aas
imul
arpl
lock
jmp
push
jg
xchg
ficom
sub
fcom
dec
mov
popa
mov
xchg
sbb
mov
outs
(bad)
jmp
outs
scas
js
pop
push
inc
jge
pop
out
sahf
push
jge
adc
sub
jmp
jmp
loope
cmps
jno
rcl
mov
lods
xchg
mov
sar
mov
push
or
sbb
dec
inc
pop
xchg
out
jmp
cmps
mov
aam
ret
jecxz
pusha
adc
jno
fimul
xchg
xor
jl
push
frstor
sub
cmp
gs
adc
fcomp
xor
sbb
inc
inc
repnz
dec
push
or
or
mov
mov
xor
fistp
ret
retf
aam
dec
add
xchg
xchg
adc
pop
xchg
lahf
or
mov
test
nop
and
jge
int
jecxz
shl
sbb
sbb
jmp
mov
mov
data16
stos
pop
pop
cwde
aas
mov
inc
push
pop
mov
dec
aaa
loope
lods
pusha
popf
cwde
push
push
jne
xor
(bad)
sbb
mov
adc
push
mov
xor
or
rol
push
out
sub
sahf
fild
pop
stos
add
lahf
pop
cwde
movs
ret
push
rdpmc
xchg
mov
test
arpl
pop
dec
test
push
cmps
push
push
sbb
div
retf
dec
(bad)
ins
inc
ret
sbb
add
pop
jle
(bad)
push
pop
daa
shr
clc
xchg
xchg
les
sbb
sub
sub
call
xchg
repz
sar
mov
cmp
push
movs
cmc
stos
xor
pop
xchg
pop
fucomp
sub
add
test
dec
int3
inc
sbb
stos
iret
push
retf
cli
cdq
nop
mov
add
(bad)
iret
leave
cmp
loope
xchg
movs
stos
adc
ficom
dec
mov
mov
cwde
sbb
add
ror
cld
icebp
fisubr
sub
cwde
cmps
outs
faddp
mov
iret
xchg
test
bound
bnd
pop
sub
retf
stos
and
in
popf
jg
aam
shl
fbld
dec
mov
mov
bound
pop
lock
add
or
mov
push
push
aam
sbb
cld
out
mov
(bad)
pop
sub
sbb
loopne
scas
lods
loop
xor
rcr
push
lods
iret
mov
icebp
js
stc
and
(bad)
dec
std
or
cmp
shr
nop
out
inc
xor
adc
adc
dec
pop
test
push
xchg
nop
pop
fld
pop
sbb
push
addr16
add
ficom
fild
mov
repz
mov
jge
outs
dec
loope
pop
or
in
dec
sub
lds
jmp
dec
fist
js
dec
sahf
aas
cmp
pop
movs
hlt
repz
pop
jb
push
sbb
mov
retf
mov
xchg
pushf
push
mov
ss
arpl
mov
add
loope
es
mov
xlat
clc
cmp
ss
cmp
inc
gs
aam
scas
cmp
cwde
xor
es
add
js
jo
in
and
mov
cmps
int
cmps
add
cdq
mov
mov
ret
cmp
je
fld
mov
or
cmc
sub
push
mov
stos
ret
test
shr
adc
sub
lock
mov
jecxz
pop
sub
iret
cmp
shl
ret
pop
cmps
pushf
pop
rcr
pop
add
or
repnz
mov
sar
leave
movs
sub
jns
scas
test
mov
pop
into
pop
jne
mov
pop
adc
ffreep
push
sbb
jmp
push
fwait
cld
cmp
mov
and
popa
mov
push
or
push
mov
jae
lods
sahf
pop
xchg
push
enter
xor
retf
pop
mov
mov
cs
mov
pop
inc
(bad)
sub
xor
std
add
pusha
leave
cmp
and
or
dec
cmps
add
jno
adc
sbb
sub
cmc
add
jns
mov
lock
nop
mov
push
or
jb
sub
stos
clc
jne
loopne
shl
cmp
jmp
or
add
(bad)
pusha
mov
rcr
shl
stos
add
pushf
mov
popa
push
data16
jl
fwait
in
mov
jmp
pop
sbb
adc
sbb
push
icebp
xchg
ds
mov
outs
inc
inc
pop
gs
js
fistp
adc
and
sbb
(bad)
leave
popf
xor
push
add
mov
loope
aaa
dec
pop
mov
fadd
xchg
imul
and
call
mov
std
or
ins
cld
cmp
push
xor
dec
inc
inc
cs
cmps
retf
jecxz
jne
bound
cs
pusha
adc
inc
call
sbb
mov
jb
ss
pop
pop
shl
nop
adc
test
or
or
sub
mov
adc
xchg
dec
vprotq
movs
xchg
xchg
push
adc
test
and
mov
(bad)
aad
mov
stos
xchg
mov
fadd
retf
dec
sub
out
int3
retf
inc
mov
sar
aam
fild
mov
jae
fsubr
mov
xor
in
add
dec
jg
ins
cwde
ja
aam
repnz
mov
mov
sub
inc
cmp
mov
cmps
sub
fwait
mov
and
sti
mov
dec
or
pop
fist
dec
sub
loopne
adc
jle
outs
push
(bad)
jo
push
test
imul
cmps
(bad)
sbb
outs
dec
ret
ja
xchg
fiadd
mov
pop
data16
shr
into
adc
mov
pop
lds
repnz
mov
pop
mov
inc
add
les
stc
pop
mov
cmp
in
cmp
adc
fs
shl
repz
mov
iret
jge
movs
loop
and
jge
pop
jmp
mov
jp
cmp
lds
dec
movs
jno
fbld
mov
adc
stos
daa
test
je
stos
loop
sub
push
test
(bad)
nop
aad
je
mov
jmp
mov
inc
cld
cmp
outs
mov
mov
and
loopne
mov
sbb
pop
inc
adc
mov
(bad)
lods
push
call
cmps
(bad)
retf
shl
loopne
and
out
out
jo
cld
ins
enter
xchg
test
shr
bnd
in
rol
pop
dec
and
out
outs
sbb
shl
je
or
aas
rcl
adc
pop
cmp
jp
jne
or
push
sar
adc
retf
fwait
mov
inc
iret
or
cdq
push
push
pop
jo
mov
js
jle
ja
pusha
lods
mov
xchg
jge
lods
cld
xchg
jp
jge
mov
xchg
cmc
stos
and
sti
mov
nop
and
pop
cmc
enter
fs
test
inc
repz
push
jnp
shl
aaa
out
xlat
jae
jae
(bad)
(bad)
jmp
mov
mov
dec
mov
pop
js
dec
hlt
mov
nop
in
or
fmul
pop
add
ins
dec
adc
xchg
popa
cdq
sbb
jmp
mov
cs
addr16
shr
mov
ins
sbb
jno
loope
cmp
retf
pop
xchg
push
dec
ins
daa
mov
fs
(bad)
dec
ret
in
cmp
mov
sub
popf
mov
out
clc
push
pop
xlat
sti
mov
lods
adc
mov
pop
pop
mov
sahf
sahf
std
adc
ins
cmp
sti
adc
cmp
arpl
dec
(bad)
xchg
or
cmc
stos
(bad)
xchg
adc
jo
push
fndisi(8087
leave
adc
sar
adc
jno
xor
sbb
add
daa
pusha
add
mov
jne
push
lods
inc
sub
(bad)
in
popa
mov
jecxz
aaa
nop
adc
outs
cmps
fist
dec
jo
in
or
call
pop
push
inc
sub
sbb
popf
xchg
(bad)
repz
xchg
sub
pop
mov
jmp
xchg
jo
sub
stos
dec
inc
jo
cwde
add
mov
adc
mov
mov
pusha
add
cdq
inc
cli
xor
or
ret
cmp
popf
push
cmps
or
push
push
xor
mov
loopne
mov
pop
clc
aad
and
add
adc
mov
xchg
mov
rol
sbb
sub
adc
or
push
push
and
arpl
mov
xlat
push
xchg
addr16
fdiv
fsubr
loop
push
mov
mov
repz
imul
sbb
mov
mov
inc
das
push
je
imul
je
popa
call
es
mov
jnp
fisttp
out
mov
xor
push
outs
and
(bad)
and
repnz
mov
psrlq
jo
(bad)
sub
call
ret
arpl
dec
out
xlat
and
pushf
scas
xor
sub
xlat
jmp
je
push
mov
fwait
xchg
mov
sbb
sub
xor
(bad)
jnp
ja
fldenv
into
sbb
add
je
fnstenv
bound
mov
jg
retf
mov
push
xchg
(bad)
repz
jp
mov
mov
mov
xor
pop
sbb
fmul
cmc
push
mov
jg
in
and
mov
out
gs
xor
and
xchg
fsubr
or
call
mov
nop
enter
pop
dec
pop
outs
imul
mov
(bad)
fcomp
das
inc
sbb
mov
push
out
sbb
stos
ret
fcom
cmp
mov
or
mov
mov
iret
aaa
adc
push
jmp
sbb
mov
xlat
pop
pop
inc
push
pop
pop
jns
nop
push
pop
js
rcl
fdiv
out
aas
cmp
cwde
adc
aad
inc
cmp
int
js
and
xchg
pushf
rcr
mov
dec
neg
shr
(bad)
xchg
inc
and
js
xchg
nop
addr16
in
loopne
jmp
push
sbb
xchg
pop
mov
loopne
loopne
arpl
loop
and
outs
inc
jno
jns
jnp
fcmovne
push
mov
or
adc
xchg
xchg
(bad)
std
fcomp
in
mov
xlat
jae
or
add
gs
pop
lock
loope
(bad)
int3
mov
push
fadd
es
pop
cwde
jecxz
xlat
pop
cmp
movs
mov
add
and
aad
fld
in
push
aam
xchg
data16
xchg
lds
push
idiv
(bad)
les
fcom
lds
push
mov
jno
std
xchg
inc
xlat
sub
and
jbe
repz
div
aaa
add
adc
les
inc
jl
jecxz
(bad)
div
jp
push
jnp
xchg
cmp
dec
leave
movs
aas
cmp
xchg
int
push
sub
aaa
fld
sar
test
inc
pushf
adc
add
shl
push
into
mov
test
test
xchg
jle
or
fdiv
add
call
fnstcw
leave
xchg
or
push
rcl
cmp
in
fcmovb
cmp
arpl
std
cmp
xchg
and
iret
je
cmp
mov
xchg
pop
jae
(bad)
fcom
add
pop
ss
sbb
push
mov
scas
(bad)
je
leave
add
mov
jb
and
cmp
adc
jae
mov
sbb
mov
rol
(bad)
lahf
es
sub
xlat
pop
dec
push
or
or
aaa
hlt
ficom
imul
push
(bad)
xor
(bad)
fld
cmp
rcr
ja
retf
daa
popf
inc
xchg
push
aad
sub
fsubr
push
mov
iret
push
das
adc
pop
pop
pop
sbb
ins
call
pop
push
retf
ror
dec
sub
cmp
push
xor
mov
and
test
add
pop
inc
dec
mov
adc
(bad)
xchg
mov
nop
out
imul
jmp
out
xor
in
and
pop
sbb
sbb
sub
and
dec
movs
leave
int3
add
jo
daa
adc
mov
in
pop
loop
int
cs
int3
aas
or
pushf
cmp
jg
shl
add
and
dec
xor
push
pop
push
outs
inc
mov
jg
push
xchg
(bad)
retf
and
fdiv
and
imul
xor
data16
cmp
mov
cmc
je
adc
adc
std
jl
xlat
push
es
lods
lock
adc
scas
jle
ins
jg
ficom
push
ins
add
sar
fstp
ret
popa
dec
sub
adc
and
inc
mov
mov
jo
xchg
mov
test
xchg
push
imul
(bad)
lds
stc
add
xchg
loope
cmp
mov
fldcw
xchg
adc
data16
adc
aaa
pop
out
int
inc
push
dec
push
adc
stos
add
inc
cmp
call
pusha
js
dec
inc
daa
mov
xchg
inc
mov
or
cmps
or
mov
shl
call
(bad)
sub
jbe
call
ret
out
(bad)
jb
xchg
jmp
in
rcr
mov
sub
test
mov
enter
cmc
iret
mov
(bad)
pop
jns
pop
popf
jnp
adc
mov
add
(bad)
shl
push
in
fcomp
ret
bound
fld
mov
dec
(bad)
mov
pop
das
lds
cmp
push
mov
mov
push
ret
fdiv
stos
pop
sbb
pop
les
arpl
mov
pusha
xor
mov
outs
icebp
clc
adc
mov
dec
ins
cs
xchg
pop
in
cmp
movs
scas
scas
neg
fldcw
ds
mov
push
adc
mov
in
mov
je
iret
cwde
jae
shl
ins
sbb
fldenv
adc
test
es
out
inc
mov
dec
dec
or
inc
fild
mov
movs
outs
shl
add
sub
jne
int
inc
cmp
loopne
add
ret
mov
fiadd
push
mov
repnz
ja
out
inc
or
cmp
adc
out
idiv
ror
mov
pop
daa
pushf
mov
mov
inc
div
loopne
mov
sub
arpl
loopne
repnz
(bad)
mov
enter
mov
les
inc
jne
jle
pop
outs
sbb
and
sub
and
cmp
out
cmp
mov
in
mov
(bad)
loope
popa
xor
mov
test
ror
mov
jns
push
cmp
loop
inc
sbb
scas
mov
and
stc
dec
mov
aaa
cdq
cmp
aas
stc
out
pop
loopne
rol
mov
fild
jl
fild
inc
psrlq
cmp
push
xor
adc
add
pusha
sbb
mov
and
push
adc
xchg
sub
sub
jb
sahf
(bad)
loopne
js
fiadd
popf
jne
shr
push
cmp
or
iret
das
outs
mov
js
xchg
imul
pop
xchg
into
mov
lds
(bad)
pop
push
aas
shr
add
xchg
dec
jmp
sti
outs
xor
xchg
sub
out
movs
push
ss
lock
icebp
and
scas
mov
int
xchg
cmp
int
add
xchg
test
pushf
or
push
icebp
dec
jecxz
cmp
call
mov
xchg
dec
dec
shl
pop
retf
es
fidiv
jg
cdq
pop
push
mov
ja
dec
xor
xchg
nop
fsubr
fxch
les
stos
xor
pop
cdq
xchg
mov
(bad)
aas
out
ins
mov
jle
dec
sub
fwait
pop
pop
or
pop
inc
test
aaa
push
dec
add
(bad)
jmp
fisttp
(bad)
loopne
lods
(bad)
arpl
mov
int3
xchg
es
(bad)
jg
ss
(bad)
and
outs
add
int
mov
cli
stc
jns
mov
popa
and
out
sub
das
xchg
mov
sub
or
sub
inc
or
mov
xlat
cmp
in
push
repz
pop
cmp
(bad)
xchg
xor
dec
sbb
lods
cmc
test
xor
sub
shr
scas
daa
mov
stos
cs
xchg
ins
mov
and
xor
int
in
push
icebp
push
pusha
jmp
sub
aas
sbb
enter
sub
cmp
arpl
das
cdq
push
out
sbb
cmc
inc
adc
mov
mov
add
aad
sub
or
mov
call
call
sbb
outs
sbb
pop
mov
fs
jge
dec
pushf
mov
aas
scas
fcomip
sub
mov
dec
idiv
mov
pop
pop
and
inc
xchg
pop
mov
mov
stos
adc
mov
fs
xchg
cmp
inc
jmp
mov
fidiv
pop
cld
add
arpl
push
and
fwait
mov
ins
repnz
nop
mov
pop
add
xchg
loope
cmps
in
mov
mov
jne
not
test
popf
mov
push
xchg
and
push
cmp
iret
dec
mov
mov
sti
sub
or
xchg
sbb
lahf
dec
jl
lock
mov
push
hlt
bound
mov
popa
push
hlt
and
dec
jo
add
inc
je
daa
cmc
repz
ss
adc
adc
sub
stc
sbb
(bad)
and
sub
dec
cmp
dec
inc
pop
and
inc
mov
jb
jg
hlt
or
mov
outs
pop
sbb
outs
retf
push
das
cdq
or
add
push
nop
jmp
popf
gs
inc
ror
ins
xchg
adc
mov
mov
mov
or
inc
xchg
jg
fmul
xchg
jle
inc
stc
icebp
mov
cwde
or
mov
add
push
mov
xchg
pop
and
push
enter
push
cli
xchg
xchg
add
(bad)
xchg
pop
xor
mov
inc
mov
lds
aam
mov
pop
imul
cmp
and
hlt
sahf
pop
push
xor
call
fs
mov
inc
xchg
pop
stos
or
add
stos
leave
jae
and
pusha
scas
mov
and
jmp
dec
scas
jl
dec
outs
out
movs
sti
sbb
jle
mov
shl
test
dec
pop
and
imul
mov
fs
xor
in
jno
and
add
inc
add
push
and
ins
inc
scas
fcomp
loop
xor
sbb
xchg
test
cmp
sti
fisubr
dec
cli
hlt
mov
sbb
jb
loopne
cmc
pop
les
jbe
test
aas
xor
sub
cwde
mov
and
vdivps
das
pop
dec
adc
loopne
loopne
mov
jge
adc
mov
(bad)
and
je
sub
jb
dec
loope
test
call
sbb
jmp
out
clc
shl
adc
or
cmps
in
adc
mov
sbb
xchg
retf
mov
rcl
adc
push
mov
xor
daa
push
dec
ss
mov
xor
mov
xchg
mov
pop
pop
sti
mov
or
jle
xor
push
test
repnz
shl
test
and
scas
and
fst
adc
adc
mov
dec
in
lock
cli
mov
pop
ret
or
les
pushf
sub
push
popf
fbld
shl
lock
cli
sub
enter
jmp
hlt
out
aad
xchg
xchg
into
xor
pop
mov
mov
stc
(bad)
fucomip
mov
enter
das
xor
xchg
scas
adc
jmp
push
arpl
push
and
add
sub
jg
test
jecxz
ins
nop
sbb
mov
cmp
lds
in
movs
fstp
jnp
fidiv
xchg
inc
dec
mov
xchg
out
lds
ret
js
jo
push
and
adc
pushf
outs
mov
xchg
call
rcr
mov
or
xchg
movs
sbb
aam
sahf
mov
cmps
ror
das
jge
sub
and
das
push
lods
rcl
push
pop
push
movs
leave
outs
jp
lahf
daa
aas
sbb
sub
mov
jmp
mov
mov
mov
cmp
loop
adc
lahf
jecxz
scas
pop
mov
xchg
xor
push
push
mov
enter
leave
inc
dec
dec
push
mov
cmp
adc
and
aam
movs
add
imul
pop
xchg
outs
pop
xchg
addr16
scas
jnp
lods
jno
xor
movs
ja
rol
scas
dec
cli
jmp
sti
dec
xor
pop
inc
sbb
adc
xchg
(bad)
ins
ror
lahf
add
or
pop
nop
push
popf
loopne
adc
(bad)
pop
and
out
in
sub
cmps
jle
cmp
js
rcl
mov
cmp
adc
call
retf
cmp
jg
addr16
pop
daa
cmp
jno
push
rcl
rcl
push
repnz
push
sbb
jno
rol
mov
xor
iret
repz
cwde
dec
test
iret
out
mov
xchg
xchg
dec
xchg
cmps
dec
xor
pushf
(bad)
sub
or
cmp
adc
add
push
adc
sbb
pop
aam
test
outs
sbb
mov
icebp
rcl
pop
test
xchg
jbe
jne
retf
call
dec
out
xchg
and
ficomp
inc
jae
jns
(bad)
cmps
add
add
int3
data16
push
test
stos
mov
jnp
mov
jle
jmp
xor
stos
cmp
fidiv
mov
aas
cmp
out
cmp
push
jo
ins
fistp
call
xchg
stc
xchg
sub
lea
push
mov
adc
push
xchg
fiadd
dec
inc
jno
sub
xlat
inc
inc
xor
xchg
ror
shr
mov
aas
xchg
jns
dec
jecxz
dec
ins
test
pop
inc
push
xchg
out
inc
adc
jbe
addr16
dec
lods
adc
retf
xor
jecxz
xlat
ret
mov
cld
les
cmp
nop
inc
popf
ds
aas
mov
mov
jne
dec
rcr
aam
or
daa
or
mov
popa
sub
inc
repnz
fs
mov
and
cmp
cmp
and
sahf
mov
mov
push
xor
cmp
mov
add
adc
ins
mov
shl
lahf
sar
jns
jg
xchg
popa
rcl
jp
ins
inc
icebp
dec
xchg
outs
gs
rol
jno
cld
inc
lahf
jbe
fcmovb
cld
aaa
mov
out
aaa
jecxz
out
jge
(bad)
out
xchg
fwait
jmp
scas
push
fwait
hlt
inc
jmp
jo
mov
ins
int
out
out
pop
cmps
adc
or
fild
lea
adc
fadd
xor
and
add
in
xchg
xor
or
pop
into
jnp
mov
sbb
xor
aam
mov
sbb
mov
push
icebp
mov
xor
lea
jg
add
cmp
mov
sub
popa
std
cmp
mov
cmp
jle
in
or
mov
pop
ds
ret
push
call
scas
or
scas
adc
jno
inc
push
jns
or
ins
mov
jl
(bad)
lods
xor
outs
mov
aad
pop
ins
or
jl
sub
test
aad
in
enter
mov
pop
dec
sub
mov
cli
sbb
and
out
jmp
ret
clc
xor
jno
push
adc
mov
jg
jb
ret
push
lea
xchg
iret
sub
dec
(bad)
frstor
sbb
aad
retf
mov
sub
retf
into
sub
rol
lahf
imul
push
cld
cwde
and
xor
lock
hlt
sbb
pop
mov
ja
ins
iret
aaa
div
jns
push
sub
cmp
fs
add
or
or
mov
pushf
ja
xor
adc
add
add
xchg
stc
jb
or
sbb
or
xchg
mov
lahf
(bad)
fld
addr16
movs
icebp
lds
mov
fnop
int3
mov
retf
fild
aam
mov
out
clc
adc
retf
std
jae
xlat
test
and
push
and
pop
xor
shr
repz
fwait
dec
into
movs
inc
pop
mov
mov
or
dec
cdq
sbb
lock
jge
push
(bad)
retf
dec
bound
jbe
popf
pop
xchg
jne
sbb
fcmovnb
jnp
and
jge
inc
popa
inc
mov
fimul
shl
push
lds
cmp
jbe
js
fs
cwde
imul
pop
repz
inc
jno
out
nop
adc
cmc
rcr
jb
fstp
cmps
xchg
cdq
ret
loopne
sbb
bound
sbb
ficom
sub
loop
dec
call
sub
jbe
gs
ds
stos
cli
outs
dec
xor
dec
sub
pop
addr16
imul
cmp
out
lods
fsubr
div
gs
and
dec
outs
inc
or
dec
cmp
fmul
fsubr
mov
ins
inc
cmc
add
cld
ret
xchg
fwait
test
mov
or
push
add
imul
dec
xor
inc
pop
xor
cmp
retfw
iret
mov
aam
push
pushf
push
inc
(bad)
mov
in
icebp
push
or
out
mov
ss
imul
iret
adc
rcl
shl
push
pop
fs
dec
movs
cmps
and
data16
test
call
gs
add
loop
imul
hlt
dec
or
mov
jmp
sbb
ins
push
sbb
shl
mov
sbb
mov
inc
shl
pop
dec
das
lods
adc
xchg
mov
mov
fcomip
or
dec
push
xlat
rol
push
xor
cwde
push
std
cmp
mov
push
loop
mov
dec
mov
xchg
sub
push
add
clc
iret
mov
lea
popa
xchg
mov
mov
test
xor
stos
jmp
cwde
adc
jp
into
xchg
out
sbb
and
cdq
jne
sub
sbb
sub
xor
fisttp
jmp
mov
in
inc
add
xor
xchg
pop
push
retf
aam
aas
xchg
mov
cli
mov
pop
loop
add
dec
xchg
and
(bad)
mov
xchg
push
enter
leave
arpl
inc
sub
sub
movs
aas
mov
rol
aam
jnp
lock
inc
stc
add
jb
(bad)
cmps
jmp
sbb
out
cmp
repnz
cmp
mov
(bad)
lods
shr
dec
dec
jnp
ss
sbb
mov
cmp
pop
out
cmp
les
scas
hlt
popa
pop
push
mov
pop
lds
cmc
add
jg
fmul
mov
aas
(bad)
mov
bound
icebp
sbb
les
xchg
ficom
inc
ds
mov
call
push
jo
inc
xor
cmps
xchg
mov
pop
mov
out
or
out
lock
xchg
outs
retf
xlat
inc
mov
lahf
cmp
ret
push
movs
enter
add
and
cmps
sahf
sub
clc
or
pop
jl
out
test
(bad)
push
push
packssdw
mov
leave
xchg
out
out
(bad)
lea
xor
mov
xchg
mov
sub
popa
adc
jle
cmp
dec
stos
inc
inc
jp
push
cmp
fwait
xchg
mov
mov
cmp
push
data16
xchg
lods
fistp
sbb
repz
xchg
mov
dec
fld
jne
fistp
imul
fmul
std
and
stos
mov
out
and
enter
outs
xchg
cmp
lods
inc
jo
xor
push
mov
and
ror
cld
mov
jmp
icebp
sti
call
(bad)
add
inc
movs
mov
and
mov
je
or
nop
test
jge
pop
popf
jmp
adc
pop
out
mov
mov
(bad)
fs
push
sbb
cli
mov
imul
cli
mov
push
adc
pop
stos
sub
inc
hlt
in
bsf
and
inc
push
xchg
xchg
dec
stos
enter
xchg
stos
(bad)
std
xchg
repnz
or
imul
and
adc
stc
(bad)
(bad)
icebp
inc
mov
pop
neg
cli
fidivr
mov
sbb
cmp
add
xchg
push
mov
in
mov
push
jmp
(bad)
pop
mov
js
fstp
sbb
in
xor
xor
sbb
repnz
or
sbb
xchg
cmps
fnstsw
push
sti
xor
loop
lock
cmp
pop
fldenv
or
cld
xchg
push
ds
iret
test
xchg
ds
and
dec
gs
aas
outs
push
sbb
xchg
ins
ficom
aam
mov
jl
ja
jns
test
push
jae
xchg
pop
daa
daa
out
inc
mov
div
adc
sar
cmp
out
and
dec
mov
data16
push
std
scas
or
int
je
ret
xor
aam
pop
bnd
(bad)
xor
sub
loopne
cmps
inc
mov
popf
mov
sbb
(bad)
sub
in
sbb
jge
stos
out
test
and
jp
push
pusha
sub
ret
cli
int
add
cmp
call
lock
stos
jl
jbe
sbb
mov
ins
out
inc
adc
imul
ja
mov
daa
iret
xor
stos
xchg
push
cwde
in
sub
cmp
je
add
mov
stos
mov
inc
add
add
add
test
mov
call
or
mov
mov
mov
(bad)
(bad)
loop
xlat
test
or
mov
pop
push
rol
xor
cmps
push
jae
mov
loopne
xchg
and
sti
in
fcomp
cld
movs
movs
icebp
call
sar
ret
inc
in
mov
adc
es
sub
xor
gs
in
imul
mov
jnp
xlat
xchg
repz
cs
not
mov
and
hlt
and
pop
fisttp
(bad)
and
leave
push
int
push
les
dec
push
mov
je
adc
jl
je
cld
mov
inc
adc
fadd
mov
dec
rcr
add
jl
jne
pop
ss
adc
lea
mov
adc
or
cmp
cmp
and
(bad)
imul
cld
mov
in
xlat
stos
in
lods
add
sbb
gs
call
jg
or
push
imul
outs
mov
jmp
inc
dec
repnz
inc
retf
xor
push
lds
div
push
sub
inc
sub
dec
es
dec
xlat
mov
xor
cdq
jno
scas
sbb
in
sar
cmc
xchg
sbb
lds
aaa
jl
sbb
cmc
and
out
ins
out
aam
add
stos
sti
push
fsub
xchg
(bad)
mov
sub
es
ds
mov
daa
call
(bad)
pusha
xchg
sbb
fs
adc
es
adc
inc
sub
in
pop
sbb
xlat
int3
cmp
ja
mov
mov
les
mov
outs
scas
jno
cmp
in
das
xchg
fisttp
sub
pop
and
sbb
scas
out
or
push
mov
jl
push
jne
popa
mov
es
ins
sub
xchg
cmp
ret
stos
in
mov
mov
push
mov
jmp
out
push
iret
(bad)
sti
cld
sub
sbb
add
pop
xchg
std
mov
mov
add
cmc
iret
inc
xchg
pop
mov
pop
sahf
aaa
in
jno
jae
mov
mov
xchg
sub
aam
sti
and
pop
jge
push
jle
sbb
mov
add
cmps
mov
ficom
(bad)
sti
hlt
cs
(bad)
jmp
cmc
add
stos
xor
pusha
out
mov
mov
mov
les
pop
dec
mov
pop
sub
xchg
or
sub
repz
push
sbb
test
sub
xlat
fld
dec
ffree
sbb
pushf
cmc
push
lock
add
sub
test
scas
sub
mov
sbb
bound
inc
pop
clc
or
mov
lods
xor
or
adc
aad
sbb
sbb
in
ins
sub
js
mov
push
sub
mov
cli
adc
js
loopne
lahf
sbb
mov
and
push
iret
xchg
stos
xor
int
jno
stos
sbb
jbe
bound
sahf
icebp
dec
sbb
(bad)
mov
inc
dec
dec
loopne
pusha
in
sahf
cwde
ds
test
ror
pop
pop
cmp
add
in
cmp
sub
jno
sub
cmp
pop
dec
fstp
ds
cmp
cli
cmp
(bad)
mov
xchg
cmp
dec
out
push
retf
pusha
out
out
xor
daa
call
mov
inc
pop
sar
cmc
xchg
shl
hlt
and
test
xchg
ins
cmp
loop
adc
mov
ret
jp
div
mov
pop
xchg
popa
int3
les
(bad)
xchg
(bad)
xor
xchg
out
xor
push
cdq
icebp
cmc
std
jae
push
xchg
push
xchg
xor
aaa
cs
mov
mov
push
cmovg
pop
aas
call
ins
mov
shl
mov
arpl
lock
je
call
dec
enter
xchg
inc
jns
cmp
shr
cmp
mov
popf
in
dec
cmps
or
scas
sahf
ret
xchg
add
popa
sbb
pop
and
lods
xchg
mov
pop
ror
cmp
mov
add
and
ds
repz
loop
fbstp
xchg
enter
cmp
aad
and
push
sub
mov
inc
std
cwde
or
out
and
adc
scas
iret
and
dec
xchg
adc
fwait
outs
sar
xor
cli
loop
leave
fwait
mov
or
pop
in
aam
out
mov
ret
mov
hlt
mov
xchg
mov
adc
xchg
lods
dec
cmp
sub
pop
rcl
dec
pop
mov
jo
in
enter
dec
gs
or
icebp
xchg
xor
aas
(bad)
jl
ins
xor
xor
loop
cmp
pop
lock
dec
aaa
scas
cmp
push
cmp
popa
scas
or
pop
aam
mov
inc
jne
aad
scas
mov
mov
cli
rcr
out
mov
add
fidivr
jge
stos
inc
ins
pop
mov
jmp
mov
inc
push
sbb
iret
std
out
(bad)
dec
sbb
lods
enter
ss
int3
aaa
daa
gs
sbb
sub
cmp
test
xchg
jmp
movs
int
dec
bound
imul
xor
cmp
dec
lea
or
mov
jbe
fisubr
xchg
(bad)
retf
adc
sbb
aad
test
push
std
(bad)
daa
mov
jl
pop
clc
lea
test
sub
pop
movs
pop
mov
sbb
(bad)
outs
clc
ds
(bad)
push
mov
out
inc
mov
imul
test
inc
stc
mov
aaa
fcomp
leave
push
cli
leave
xchg
dec
inc
sub
test
dec
push
and
sbb
cmps
mov
xchg
xchg
cmp
aad
les
cmc
cwde
and
call
ss
or
inc
mov
hlt
loopne
(bad)
fst
data16
add
cmps
adc
cld
sahf
fbld
jle
ret
push
cmps
aad
xchg
idiv
ret
mov
sbb
jmp
idiv
add
jb
fcomp
in
mov
into
retf
pusha
add
mov
inc
jecxz
into
or
inc
repz
(bad)
xor
mov
test
divps
cmp
cmc
icebp
sub
(bad)
and
cli
ss
lods
out
lods
shr
sbb
xor
cmp
popf
add
jne
outs
or
mov
retf
ss
fisttp
mov
enter
lods
in
inc
adc
xchg
ret
cdq
lods
pop
push
push
mov
std
dec
xlat
push
jecxz
dec
pop
cmp
fsubr
in
rcr
jle
sbb
sub
inc
pop
sub
sbb
mov
cmp
repz
ja
mov
in
xor
jmp
sbb
bound
inc
jmp
data16
xchg
in
out
xchg
add
xor
test
pop
repz
mov
adc
mov
clc
stos
xor
bound
int3
ins
ins
popf
movs
push
inc
ret
and
dec
ret
fdivp
scas
dec
or
dec
xor
fld
cs
sbb
adc
push
in
add
mov
pop
in
call
adc
and
sahf
in
movs
jb
xor
fidiv
imul
jo
rcl
dec
int
mov
ds
retf
or
hlt
cmp
mov
sbb
mov
push
mov
sub
daa
popf
sub
mov
frstor
dec
xchg
xor
fistp
dec
jmp
mov
pop
pop
and
jp
mov
lock
add
icebp
shr
fldcw
out
xor
jg
inc
std
and
loope
xor
dec
ret
loopne
into
sub
and
into
pop
jbe
sbb
sub
gs
imul
(bad)
fwait
xlat
neg
inc
pop
aas
and
mov
fcom
daa
push
ret
inc
inc
je
outs
mov
test
das
fisub
mov
push
mov
call
mov
pop
in
dec
xchg
push
out
cmp
pop
dec
leave
arpl
fild
adc
lods
fiadd
xchg
add
push
mul
mov
std
lahf
mov
pop
lahf
xor
(bad)
cdq
xchg
fldcw
fidiv
fwait
inc
int
mov
jno
out
jg
sbb
nop
xor
ss
retf
imul
xchg
xchg
push
push
das
add
mov
mov
jmp
arpl
pop
lods
xor
dec
call
div
xchg
push
pop
xchg
enter
mov
js
std
sbb
mul
ja
pusha
pop
in
mov
mov
repnz
xchg
xchg
sbb
into
and
and
inc
out
outs
bound
in
jmp
pop
mov
sbb
and
popf
fwait
xor
sbb
add
xchg
retf
outs
fmul
inc
dec
loope
std
or
adc
pop
jecxz
add
xabort
xor
sahf
test
ja
push
nop
pop
mov
out
loopne
pop
inc
retf
ins
push
dec
mov
mov
xor
jp
imul
scas
ins
pause
cmp
push
sub
adc
sbb
ds
sub
mov
push
and
aad
sbb
push
mov
lahf
hlt
push
mov
or
and
sub
imul
mov
mov
mov
or
fild
int3
xor
and
mov
lods
pop
(bad)
xchg
and
or
sub
mov
add
and
ror
jns
jmp
or
ror
les
xchg
int
and
out
cmp
stc
jno
movs
sub
dec
and
and
popf
sbb
xchg
or
jns
sbb
xchg
sbb
lods
imul
loop
xchg
mov
cmp
pop
mov
mov
cmps
sub
inc
sbb
mov
sbb
xchg
out
push
mov
imul
outs
push
pop
mov
jmp
lea
push
scas
mov
jae
mov
cdq
je
inc
adc
mov
push
cmp
jae
push
in
cmp
mov
add
ins
mov
push
in
mov
inc
call
enter
dec
xor
(bad)
in
pop
add
push
arpl
xlat
pushf
fldcw
cmps
enter
jno
or
adc
jg
movs
sub
dec
sar
and
icebp
cmps
mov
inc
inc
add
xor
add
fmul
stos
scas
dec
or
sbb
cmp
jle
test
loope
sar
movs
sbb
add
push
pop
(bad)
pop
sar
jp
sbb
sub
jecxz
dec
and
push
call
aaa
fmul
xchg
add
in
iret
push
adc
neg
or
mov
adc
xor
push
test
sub
and
cmp
fld
mov
mov
ror
xchg
(bad)
popf
(bad)
xchg
stos
sub
dec
jle
lea
cmp
push
xor
lea
mov
mov
retf
ja
adc
or
cmc
inc
sbb
sub
fs
mov
sar
mov
push
jmp
mov
adc
mov
loope
es
push
bsf
sub
adc
in
fnstcw
iret
daa
enter
cmp
movs
imul
pop
ror
std
xchg
dec
leave
(bad)
push
in
bound
test
hlt
aam
lahf
cmp
int3
iret
push
dec
or
lock
fiadd
lahf
push
sub
mov
repnz
jge
push
lock
mov
dec
repnz
jl
adc
(bad)
mov
les
fistp
jmp
mov
shr
xor
js
enter
xchg
(bad)
xchg
push
jbe
mov
push
dec
fwait
stc
and
mov
mov
bound
jo
(bad)
popf
enter
jle
repz
xchg
pusha
jl
xor
icebp
out
jecxz
adc
inc
(bad)
jge
and
pop
xlat
add
or
xchg
into
ror
div
and
inc
out
sbb
add
sub
aas
div
pop
cmp
inc
sahf
adc
or
sub
cld
hlt
sub
lds
(bad)
fld
pop
jle
xchg
push
jp
dec
xchg
jo
and
cmp
and
fs
popf
jmp
mov
inc
idiv
dec
rcl
sar
adc
not
test
scas
push
mov
push
cmp
call
mov
mov
dec
imul
icebp
mov
loop
cmp
or
(bad)
and
push
pop
in
fdiv
ss
call
push
stc
cmp
sub
test
iret
lods
add
inc
pop
shl
push
mov
std
jmp
cld
push
mov
jmp
test
out
cmp
mov
icebp
es
add
adc
pop
stos
inc
and
sar
adc
sub
fcos
stos
pop
bound
and
sahf
pop
pushf
xor
push
das
xchg
push
(bad)
in
aaa
inc
imul
(bad)
pop
jmp
mov
mov
push
ss
adc
adc
lods
cmp
sbb
cmp
or
ja
mov
jg
push
lods
enter
fisub
test
sbb
mov
rcr
sub
dec
or
int
inc
push
cld
sar
mov
dec
rol
xchg
mov
sub
and
xlat
mov
das
fmul
dec
pusha
rcl
js
xor
push
xchg
lock
jl
mov
inc
sbb
mov
sub
xchg
sahf
lock
hlt
dec
jmp
pop
test
and
sub
adc
dec
mov
jp
jle
sub
mov
nop
loopne
adc
xchg
lds
dec
scas
jp
std
pop
daa
not
jmp
aaa
js
pop
push
out
push
add
test
vmovaps
cmp
push
dec
(bad)
iret
aam
daa
fwait
dec
jnp
mov
pop
popf
xchg
inc
cmp
mov
aad
sub
jmp
std
inc
inc
(bad)
call
daa
push
sbb
hlt
add
mov
pop
cmp
out
cmp
iret
adc
ins
std
arpl
add
xchg
sub
div
loop
jl
xor
std
sub
std
sbb
cdq
adc
test
push
dec
(bad)
pop
das
adc
cmc
xchg
std
and
mov
(bad)
cmp
ins
movs
lock
mov
das
fcom
cmp
and
xor
push
(bad)
adc
out
rcr
xor
daa
jp
pop
test
mov
ins
inc
add
cmp
and
dec
pop
ins
or
add
mov
mov
mov
scas
mov
inc
ins
fild
test
cmc
and
repz
dec
add
popa
xchg
pop
xchg
fsub
ss
into
mov
repz
sbb
jl
pop
jp
sub
js
mov
lgs
cmp
jo
repnz
out
call
pop
bound
pop
jl
pop
jmp
shl
gs
push
(bad)
out
push
push
lods
test
pop
pop
aad
pop
out
jae
jbe
jle
movs
scas
inc
xchg
sti
dec
xchg
sub
jmp
or
dec
dec
stc
mov
imul
dec
add
and
and
sub
arpl
xor
(bad)
mov
lods
loope
mov
xchg
(bad)
mov
inc
je
cwde
test
push
fldenv
cld
add
jmp
aam
mov
cmp
shl
push
(bad)
pop
pop
stos
inc
push
lea
outs
sub
dec
pop
iret
sub
mov
cmc
rcr
aad
stc
pop
mov
enter
rol
pushf
xchg
mov
and
sub
adc
cld
cmp
pop
jp
pop
shl
shr
dec
leave
cmp
mov
aad
pop
jg
lahf
ret
bswap
or
jl
cmp
in
pop
fwait
cli
mov
push
fcomp
xchg
in
sahf
das
retf
call
sahf
dec
sti
aam
add
mov
pop
xor
out
jnp
scas
hlt
shl
adc
icebp
cmp
ret
fld
retf
nop
push
xor
sub
sbb
addr16
or
jns
jnp
jo
outs
add
jne
push
fild
pop
retf
push
popa
loope
leave
cmp
(bad)
pop
cmp
sbb
sub
jns
and
call
add
and
bswap
xlat
fcomp
and
ja
cmp
fadd
xchg
fadd
nop
jge
jp
jne
sar
leave
jge
xchg
fimul
hlt
data16
in
pinsrw
push
jnp
cmp
jnp
and
sub
inc
test
mov
dec
jmp
cmp
ss
mov
sub
in
xchg
addr16
ins
jmp
pop
test
fsub
outs
dec
xchg
in
push
mov
mov
push
push
adc
(bad)
out
cld
addr16
lock
je
sbb
fs
jbe
jmp
(bad)
jmp
fcomp
jb
repz
mov
aam
cdq
mov
add
cld
or
xlat
jg
jo
push
int
dec
mov
or
push
arpl
loopne
xor
mov
push
inc
sbb
jmp
jae
push
mov
call
mov
sub
pop
retf
pop
mov
mov
mov
sub
push
mov
dec
test
dec
mov
mov
test
xor
add
icebp
mov
cmps
out
cmp
sbb
jno
gs
inc
jae
nop
xlat
push
addr16
add
mov
and
sub
xor
adc
inc
stos
fild
and
pop
dec
jno
outs
inc
in
hlt
outs
daa
test
das
add
iret
int3
bound
shr
loop
icebp
(bad)
mov
lds
fwait
in
mov
leave
js
lds
push
les
out
js
ds
ja
push
pop
mov
jp
mov
pop
xchg
dec
out
stos
ins
add
loop
mov
adc
xchg
int
push
jl
jmp
adc
xchg
stos
mov
push
jne
pusha
stc
stos
popa
aaa
and
cmp
mov
add
xchg
cmps
imul
inc
ror
retf
test
jo
adc
adc
dec
outs
xchg
test
pop
ret
test
movd
out
ret
dec
imul
sub
aad
lock
dec
ss
mov
or
inc
dec
(bad)
movs
aad
ins
xor
sub
mov
cwde
jno
or
pop
inc
lock
pop
jno
sbb
push
xor
(bad)
sbb
jbe
(bad)
jmp
outs
out
cmp
jno
dec
lea
xor
fisttp
push
and
inc
ror
adc
cmp
mov
lods
xchg
jle
ja
xchg
sub
dec
mov
inc
movs
sub
call
les
jmp
sbb
stos
loopne
push
addr16
mul
mov
jecxz
fadd
jns
pop
jbe
inc
add
int
xchg
fcomip
ficomp
(bad)
cli
mov
xchg
lds
ins
dec
adc
jbe
sub
and
mov
test
addr16
fld
fwait
xor
lods
add
xchg
retf
xor
outs
test
adc
adc
retf
pop
push
ss
(bad)
test
pop
int
pop
push
aam
fist
fadd
in
cmp
pop
pop
nop
jae
rcr
test
lods
mov
add
sbb
jge
dec
test
sahf
or
sub
out
push
xlat
stc
aad
std
sub
hlt
mov
xchg
sbb
xchg
cmp
push
cmps
inc
(bad)
outs
in
jge
cs
mov
sbb
cmc
push
call
retf
and
neg
(bad)
cmc
stos
push
xor
cmps
in
jmp
xor
ja
mov
pop
jbe
adc
js
jmp
in
inc
mov
in
push
cdq
movs
pop
movs
lds
loop
cmc
pop
(bad)
fwait
mov
ins
rol
sbb
jnp
jbe
pop
sahf
pop
pmulhuw
and
pushf
sbb
fadd
xlat
mov
aas
and
xor
call
push
ins
xor
pusha
push
push
mov
pop
popa
add
imul
call
adc
dec
and
or
enter
mov
push
int3
je
in
jecxz
rol
fs
cmp
push
(bad)
idiv
int3
cmp
inc
aam
jge
out
leave
adc
fsub
mov
fstp
enter
sbb
sub
mov
and
int3
mov
adc
(bad)
(bad)
mov
push
std
pushf
and
dec
popa
lds
mov
shl
mov
dec
movs
lea
xchg
outs
inc
int
dec
sbb
fidivr
ret
pop
cs
repz
dec
test
mov
jno
cmp
and
bound
mov
daa
in
jmp
xor
addr16
std
dec
aam
and
clc
dec
jmp
push
add
pop
mov
aas
xchg
and
mov
out
xor
jg
cdq
cmp
popa
in
mov
xchg
cmp
ins
mov
mov
shl
inc
add
sub
or
and
adc
or
out
fwait
mov
push
test
mov
das
in
mov
pop
int
xor
lods
mov
gs
adc
out
loope
xchg
push
ds
xor
fdivp
les
xchg
dec
cdq
cmp
popf
inc
mov
mul
xchg
daa
das
xor
add
stos
js
shr
mov
fisttp
(bad)
push
pop
loope
push
call
outs
jb
jmp
out
mov
xchg
and
outs
daa
sbb
mov
mov
mov
jmp
xchg
sbb
xor
scas
push
cli
aaa
mov
shl
push
out
add
mov
mov
retf
or
fcmovnbe
adc
int
fild
aam
gs
mov
pop
pop
xchg
fmul
mov
push
push
jae
lds
push
bound
dec
pop
add
aaa
jle
loope
or
add
mov
sahf
ficomp
add
hlt
fs
ret
inc
out
xchg
fs
inc
adc
push
xor
jno
inc
nop
inc
scas
adc
pop
ss
mov
enter
xor
aam
adc
or
imul
mov
dec
sbb
jns
cmp
pop
jmp
fadd
out
outs
mov
and
xor
(bad)
not
and
inc
arpl
(bad)
push
mov
cmp
or
adc
push
sub
jecxz
mov
cmp
xor
and
js
call
rol
mov
mov
stc
xor
xor
inc
mov
or
enter
mov
add
repnz
inc
sbb
in
scas
cmp
lock
push
je
stos
push
iret
cli
mov
int
ret
loopne
mov
pop
cmp
sub
nop
mov
adc
mov
push
jne
leave
and
dec
push
xor
repnz
dec
sub
mov
test
fstp
lock
adc
sub
push
xor
xchg
fidiv
jle
retf
jne
mov
loopne
push
or
outs
test
data16
or
mov
ret
mov
xchg
add
ds
and
sahf
stos
inc
push
(bad)
(bad)
bound
ror
popa
mov
and
cmp
jmp
mov
dec
(bad)
dec
retf
mov
test
in
pop
std
out
mov
lea
(bad)
add
jae
leave
sbb
xor
mov
jne
sub
(bad)
jge
pusha
mov
ret
mov
dec
push
adc
icebp
cmp
fldcw
repz
dec
and
in
stc
mov
sbb
nop
loop
cli
(bad)
rcl
add
daa
cmp
mov
jecxz
hlt
mov
push
popa
jbe
leave
mov
xor
ins
das
xor
or
jno
sub
or
arpl
mov
fist
pusha
sti
dec
iret
xlat
in
sbb
sahf
xchg
(bad)
out
mov
push
sti
inc
add
setno
lods
mov
out
hlt
leave
(bad)
fucomi
cld
inc
gs
fcomp
jmp
aad
mov
int3
jnp
popf
adc
pop
push
sbb
outs
sub
imul
neg
mov
pop
sub
sbb
add
fs
adc
repz
mov
je
xchg
les
mov
jle
add
mov
fs
mov
mov
sub
push
in
dec
xchg
stos
and
adc
std
jmp
movs
ins
aam
push
jnp
ffreep
push
push
push
xor
mov
stc
retf
cmp
mov
cwde
cdq
xor
add
aad
js
pop
cld
ss
jmp
fldcw
stc
lods
bound
lds
mov
in
fs
push
mov
test
ins
dec
mov
dec
lods
repnz
or
imul
jbe
cmp
sbb
jnp
mov
jecxz
ins
dec
in
fwait
and
push
cmp
jecxz
pop
mov
outs
ret
inc
out
dec
cdq
outs
mov
mov
add
ds
adc
mov
sbb
jg
pusha
and
jae
fisubr
jp
popf
outs
xchg
adc
jecxz
push
push
dec
adc
jmp
int
mov
fwait
push
push
repz
ficom
gs
add
add
ins
movs
retf
sub
push
(bad)
sub
fwait
mov
pop
ret
add
movs
add
pushf
stc
cmp
mov
adc
cmc
jl
movs
pusha
icebp
ja
pop
inc
dec
leave
rol
xchg
std
pop
add
mov
sub
sbb
outs
shr
repz
fs
and
lods
inc
test
push
mov
(bad)
pop
mov
pop
dec
adc
pop
cmp
div
mov
push
jmp
(bad)
pop
or
bound
jp
mov
(bad)
pop
std
test
cdq
(bad)
cld
cdq
les
pop
das
sar
xchg
ss
xor
sbb
cwde
movs
loope
pop
dec
cmp
inc
pop
sbb
push
pop
mov
xchg
pop
xlat
jb
jg
or
mov
retf
lds
cmp
not
push
xor
inc
push
sub
movs
arpl
out
dec
out
xchg
cmc
mov
and
out
les
sub
fimul
add
pusha
mov
outs
aam
jae
jae
mov
jo
scas
(bad)
adc
mov
adc
pmulhuw
aam
scas
cmps
add
daa
das
shl
push
fdiv
out
fmul
(bad)
fidiv
or
cmps
test
dec
fcomp
inc
sti
pop
popa
popa
int3
test
cs
pop
sub
mov
mov
sbb
push
fidiv
pop
mov
cmc
ret
cmc
popf
mov
call
js
mov
jb
arpl
mov
sbb
or
dec
cmps
lds
test
sub
push
mov
and
cmp
sub
mov
shr
repz
neg
pop
sub
repnz
pusha
shl
imul
xor
pop
enter
cmps
stos
push
aam
fidivr
fdivr
call
lods
mov
ins
jmp
push
pusha
clc
add
adc
dec
stos
cdq
xor
cmps
pop
stos
jmp
movs
mov
scas
bound
rol
test
mov
add
jg
jae
jmp
stos
and
cmc
and
sbb
mov
retf
imul
sub
pop
jp
mov
(bad)
fdiv
adc
loop
pop
jnp
fist
in
repnz
stc
(bad)
mov
mov
loopne
sbb
jle
test
mov
jg
popa
sub
dec
pop
adc
adc
xchg
stos
jb
sub
push
shl
ret
mov
ds
aas
(bad)
pushf
jecxz
ss
sub
jo
mov
repnz
loope
jge
or
sbb
fwait
cmps
or
xchg
push
sahf
pusha
sbb
xchg
sub
leave
mov
adc
sub
data16
mov
inc
xchg
jg
mov
pop
movs
xchg
leave
cmp
and
mov
mov
cmp
sbb
pop
sbb
outs
outs
xor
pop
mov
dec
push
(bad)
mov
or
stos
das
daa
fmul
and
loopne
adc
inc
ja
push
rcl
popa
in
lods
mov
dec
adc
(bad)
dec
jne
ds
jge
pop
loop
mov
mov
in
dec
xchg
add
mov
fstp
or
add
xor
outs
sub
mov
inc
repnz
inc
mov
call
fsub
imul
sahf
scas
ins
mov
test
bound
add
cmp
sub
adc
into
imul
dec
mov
cmp
and
fstp
in
call
nop
mov
dec
and
adc
neg
cmp
out
loope
jo
in
stc
mov
sub
jnp
xor
sub
fcom
ds
inc
jge
sub
dec
dec
add
mov
inc
push
inc
fdiv
inc
mov
sub
add
lods
sbb
fidivr
jb
in
sub
aaa
pop
inc
sti
outs
inc
mov
cwde
push
xchg
sub
sub
lods
enter
aad
sbb
lds
and
sbb
and
(bad)
mov
sbb
sub
pusha
xchg
fnstsw
or
retf
(bad)
sbb
lds
retf
push
push
std
jmp
inc
stc
mov
jmp
loopne
cmp
fs
icebp
dec
adc
mov
and
ja
les
jge
lods
dec
inc
movs
xor
sub
cmp
sar
add
sbb
scas
pop
push
push
cmps
pop
rol
test
cmp
fsubr
add
mul
stos
add
test
inc
(bad)
push
or
mov
ficom
push
pop
mov
loop
fidiv
ret
cmp
mov
pusha
arpl
add
test
and
jecxz
xchg
fdiv
fild
cld
pop
movs
pop
push
push
fwait
les
iret
adc
sub
fs
addr16
sbb
cmp
cmp
cmps
lock
popa
jne
icebp
pop
nop
scas
in
loope
cmp
adc
mov
cs
jbe
inc
lock
cmps
js
xor
push
aaa
mov
pop
add
ror
in
jno
mov
xchg
loop
jo
call
pop
mov
xor
adc
out
sub
pop
sar
ins
sahf
pop
cmp
fsubr
sub
cmp
jge
ds
jg
mov
sub
int3
dec
xlat
cmp
inc
cmps
cli
push
xchg
sub
pop
ins
lods
into
cmp
push
push
lock
mov
mov
pop
pop
retf
out
push
pushf
cwde
mov
adc
test
call
in
pop
add
push
gs
ret
stc
out
stos
push
loopne
xchg
ss
mov
(bad)
inc
loope
std
inc
out
xchg
pop
cdq
jmp
lahf
out
cmp
mov
stos
push
sbb
sbb
aaa
bound
addr16
jmp
jo
xchg
mov
les
repz
add
test
xchg
inc
adc
cmp
fld
imul
pop
mov
pop
shl
or
cmp
dec
sub
cdq
nop
jle
mov
iretw
leave
push
adc
pop
rcl
hlt
mov
enter
ins
adc
es
and
sbb
jne
frstor
xchg
mov
inc
jmp
push
inc
(bad)
or
cmps
and
enter
mov
movs
int
sbb
add
retf
jae
das
(bad)
jbe
mov
fsubr
pop
stc
and
lock
movs
aaa
adc
pop
mov
fsubp
loope
imul
mov
add
dec
rcl
outs
bound
loopne
fsubr
and
movs
pushf
into
js
in
pop
pop
leave
mov
xchg
out
xchg
cmp
mov
pop
add
sub
mov
sub
dec
movs
sbb
cli
out
fnstsw
pop
out
inc
popf
mov
ror
xor
and
sti
inc
popa
fnstsw
out
pop
enter
fidiv
xor
push
fsub
jne
fld
fbstp
call
aad
xor
xor
mov
push
movs
dec
int
dec
or
add
rcl
mov
stos
(bad)
shr
test
cmc
(bad)
repnz
mov
mov
dec
rol
xor
mov
xor
sub
(bad)
jl
inc
push
and
sbb
int3
xchg
mov
cmp
inc
lea
mov
outs
call
xchg
hlt
ins
test
push
js
imul
js
xchg
imul
int
xor
icebp
ins
sub
xchg
jb
and
mov
cmps
inc
sbb
repnz
xchg
lods
adc
jns
(bad)
fcmovu
jb
pusha
pop
mov
test
pop
fmul
clc
out
cmp
mov
inc
jae
and
test
xor
fwait
mov
pop
ret
ins
mov
cmp
(bad)
repz
and
je
push
jae
jle
in
in
rcr
push
dec
pop
push
add
aam
test
jae
push
ja
int
ins
cdq
sbb
sub
mov
adc
movs
fisttp
cmovnp
scas
push
loopne
xchg
dec
sbb
mov
dec
fcomp
mov
movs
in
pop
sub
push
addr16
popf
mov
scas
mov
add
push
ds
in
jae
jle
mov
mov
ss
fbld
test
jbe
sbb
loope
in
sbb
push
cmp
mov
clc
xor
jge
cld
and
in
jns
aaa
jl
mov
jmp
pop
push
mov
add
outs
sub
pop
push
sub
mov
mov
adc
mov
or
mov
clc
jmp
inc
xchg
inc
ins
or
js
lahf
sete
dec
stc
pcmpeqb
loope
add
das
inc
mov
dec
xor
gs
cmps
sub
mov
hlt
add
push
sbb
jmp
popf
cmp
cmp
addr16
sbb
rcr
and
mov
mov
rol
loope
mov
add
(bad)
cmp
pop
and
adc
xchg
jno
xor
outs
sbb
cmp
lea
mov
pushf
add
xchg
popa
in
jl
cmp
int3
xlat
jae
add
test
adc
test
mov
fs
into
cmps
xchg
gs
arpl
mov
mov
pop
fs
cs
pop
aas
gs
push
jb
cmp
mov
xchg
test
mov
mov
push
and
push
imul
push
mov
pop
pop
fcomp
aad
push
leave
sahf
mov
add
dec
mov
and
xor
mov
and
pop
pop
sub
jno
lods
mov
xchg
or
ret
test
leave
lds
ss
push
(bad)
jmp
push
xchg
jbe
pushf
fild
jg
xor
adc
(bad)
cmps
shl
or
mov
cmps
adc
das
dec
or
inc
imul
bound
pop
jg
cdq
cdq
xor
xchg
leave
es
mov
inc
lods
lods
xchg
cmp
or
jb
adc
mov
cdq
mov
add
inc
dec
mov
ret
into
xor
shr
(bad)
int3
sbb
jne
inc
fisubr
call
jecxz
lock
xor
pop
xlat
out
sub
adc
lea
push
in
mov
mov
jmp
movaps
mov
loope
sbb
cmp
or
dec
mov
les
sbb
(bad)
inc
push
or
pop
ret
mov
imul
pop
(bad)
mov
fbstp
mov
or
pop
outs
cmp
inc
jno
test
jle
test
in
push
add
and
mov
int3
test
sub
cmp
outs
push
sbb
jle
shr
cmps
aas
pop
and
jb
or
cmp
(bad)
inc
cmp
mov
dec
sub
xchg
jp
sar
popa
in
sbb
fadd
iret
data16
adc
add
mov
hlt
addr16
in
xchg
or
push
loop
leave
std
call
fild
inc
xor
ds
fwait
cmp
out
mov
xor
jmp
mov
adc
or
imul
gs
xor
xor
or
pop
cmp
pop
mov
add
cmps
hlt
fcomip
push
xchg
in
pop
push
xor
add
fs
sbb
cmp
sub
mov
cmp
cs
int
pop
sub
push
and
inc
std
pop
inc
stos
imul
xchg
push
nop
sbb
test
imul
mov
daa
ss
mov
test
lea
mov
mov
mov
sbb
lea
(bad)
and
imul
(bad)
mov
xor
dec
shl
pop
sbb
mov
inc
jb
stc
call
xchg
dec
imul
push
cmc
mov
fimul
dec
xor
xchg
xchg
pop
push
shr
aad
imul
cmps
ds
fdivp
jecxz
mov
mov
mov
pop
lock
jge
das
fist
pop
retf
push
jae
aad
ror
ds
cli
cmp
lahf
ror
xor
and
call
ret
xor
xor
mov
xchg
mov
adc
js
or
push
repnz
jmp
and
and
and
ret
test
add
cmps
ds
jg
into
retf
hlt
mov
mov
dec
cmps
aaa
test
ret
jb
mov
pusha
inc
inc
ret
push
in
ror
xor
je
mov
cld
jecxz
dec
fist
enter
sahf
hlt
loop
mov
fisubr
call
pop
push
add
mov
sbb
(bad)
sar
repz
xchg
jnp
push
cwde
push
nop
(bad)
cmp
mov
enter
mov
in
nop
or
in
repnz
push
das
ins
lds
push
sar
sub
add
out
cli
jbe
call
inc
(bad)
jle
inc
and
sub
inc
sbb
into
stc
pusha
movs
stos
xchg
xlat
mov
and
test
ins
js
shr
cmp
in
inc
jbe
adc
repnz
(bad)
out
or
add
sub
(bad)
jmp
jns
xchg
and
test
xor
push
(bad)
xor
jmp
cld
pop
dec
pushf
sbb
fsub
mov
popf
mov
push
int
inc
xchg
sbb
push
(bad)
and
mov
frstor
and
jmp
fcomp
mov
push
pop
fstp
inc
into
dec
sar
jno
movs
sub
gs
add
out
and
shr
xchg
dec
mov
dec
arpl
inc
push
cmp
into
movs
arpl
mov
dec
das
and
xor
test
mov
adc
in
or
pop
dec
ret
add
mov
add
dec
idiv
mov
pop
or
popa
into
xchg
cmp
fld
arpl
hlt
dec
ja
in
cmp
fld
dec
push
dec
jns
push
out
mov
clc
xchg
movs
xor
mov
pusha
out
bound
cmp
cwde
jns
fsubr
cmp
enterw
mov
sub
movs
xchg
(bad)
gs
add
add
xchg
out
popa
push
loop
jg
rol
xchg
shl
push
mov
ret
pop
push
sahf
in
jg
stc
lahf
adc
jb
sbb
adc
in
in
mov
xchg
add
dec
mov
adc
(bad)
popf
mov
jno
outs
xor
enter
inc
mov
rcr
shl
dec
rcr
or
scas
cwde
mov
adc
or
adc
sub
pop
add
xor
mov
cwde
dec
sub
jle
and
mov
and
sub
xchg
idiv
pushf
mov
lds
push
ss
cmp
xor
out
retf
(bad)
mov
loope
mov
inc
sbb
out
add
adc
cmp
sub
sbb
shr
lahf
cli
lods
stos
call
sbb
fstp
inc
fist
xchg
add
out
ds
out
lahf
xchg
out
jl
nop
push
xchg
cld
sbb
loopne
sbb
idiv
aam
(bad)
(bad)
mov
int3
push
out
ficomp
(bad)
or
adc
call
or
and
idiv
mov
nop
sub
sub
div
mov
pop
jbe
not
sbb
call
repz
mov
sub
xchg
adc
bound
pop
or
xchg
imul
test
jmp
xchg
ss
dec
dec
add
mov
out
jge
inc
test
cld
jne
imul
push
pop
jle
lods
or
add
lock
lods
push
or
mov
mov
sbb
aaa
clc
test
fldcw
xchg
adc
cmc
push
jg
xchg
sti
into
shr
mov
sub
ds
dec
out
dec
push
stc
adc
movs
in
aam
jb
loop
pop
popa
dec
outs
nop
lods
vaddss
mov
or
ja
sub
bound
jno
sub
mov
paddusb
hlt
jo
les
ret
sub
jmp
int
pop
xor
inc
retf
xchg
push
out
push
adc
aas
jecxz
and
xchg
cli
xchg
iret
ins
(bad)
sbb
mov
mov
xchg
xchg
std
push
inc
adc
test
push
jno
mov
sbb
jo
push
cmp
pop
mov
jae
xchg
cwde
out
xor
pop
out
and
inc
sub
pop
cmp
dec
adc
mov
lods
add
pop
pop
test
add
clc
sbb
lds
cmps
jmp
or
scas
aad
xchg
int3
cmps
or
xchg
inc
(bad)
jb
imul
push
sti
xchg
push
jp
push
add
or
xor
fwait
pop
xor
fiadd
xor
adc
mov
idiv
push
mov
dec
or
sub
idiv
xchg
dec
xchg
stos
ficomp
fcmovbe
mov
cld
ja
mov
add
ds
(bad)
mov
scas
cld
xchg
mov
xor
or
loopne
and
movs
mov
xor
lahf
das
xlat
mov
in
mov
and
ss
sbb
fadd
pop
and
fistp
push
fxch
hlt
push
mov
pushw
clc
pop
cmp
xor
sub
repnz
mov
loopne
dec
imul
out
sub
or
mov
pusha
out
inc
retf
mov
adc
imul
pop
or
jmp
jno
xor
(bad)
ja
sbb
pop
imul
inc
mov
adc
sub
mov
movs
push
scas
repz
stos
loop
cs
mov
jmp
jmp
mov
add
adc
xchg
imul
xchg
push
push
xchg
int3
fcomi
sbb
in
jnp
push
aam
jle
and
mov
(bad)
in
dec
out
stc
pop
add
repz
pop
das
sbb
scas
cmps
mov
sbb
loop
call
cmp
sub
std
xchg
add
dec
inc
int
clc
aam
dec
pop
cmp
(bad)
fld
mov
ret
push
pop
jmp
jae
push
ret
lds
mov
pop
jbe
les
mov
(bad)
push
jmp
jno
cmp
sub
jne
and
xchg
inc
add
ins
mov
rol
mov
repz
or
test
and
pop
and
int3
mov
not
or
pop
in
(bad)
lods
ror
cdq
xor
adc
outs
xor
mov
jae
loope
mov
std
inc
addr16
sbb
xor
fimul
jb
dec
rcr
popa
adc
mov
jnp
cdq
inc
loopne
xor
push
repz
call
jne
inc
test
mov
jmp
rcl
imul
aaa
ret
mov
add
fsubr
sub
(bad)
xchg
popa
popa
xchg
ss
enter
aad
cmp
in
pop
jne
xchg
(bad)
into
mov
xor
repz
lds
repnz
xor
test
das
stos
cli
mov
mov
test
sub
inc
inc
jbe
mov
popf
sbb
das
sahf
and
es
out
pop
inc
xchg
sub
popa
rcl
push
out
cs
arpl
jbe
push
xchg
and
jae
jl
dec
jmp
ins
mov
mov
ret
xor
adc
mov
jnp
lahf
xchg
sub
lods
aas
out
inc
pop
dec
push
call
imul
(bad)
repz
cld
iret
call
bound
aad
inc
inc
sub
jae
pop
xchg
jno
sahf
and
mov
fiadd
bound
(bad)
test
fwait
int3
pop
lock
xlat
mov
push
imul
mov
mov
pop
aaa
bound
jecxz
xor
neg
movs
push
or
dec
fisub
xchg
enter
daa
mov
imul
cmp
(bad)
adc
mov
jl
mov
iret
and
ds
push
mov
sub
xchg
mov
enter
(bad)
mov
sbb
pop
cmp
lods
shr
mov
cmp
and
fnop
aam
stos
or
idiv
dec
or
sti
cli
retf
push
jne
cmp
cs
xchg
cmp
rcl
es
pop
movs
mov
or
push
fcomp
lods
cmps
add
(bad)
adc
xlat
mov
ror
shr
dec
dec
pop
imul
push
(bad)
xor
inc
cmove
aas
sub
fbld
nop
xchg
xchg
sub
retf
mov
stos
jmp
imul
adc
mov
mov
rcl
mov
fisub
(bad)
cmp
mov
sub
inc
push
out
xor
adc
in
xchg
adc
and
std
mov
sub
mov
sbb
iret
icebp
call
(bad)
faddp
push
adc
stos
or
mov
sbb
fldenv
push
xor
push
test
lds
out
aaa
and
push
mov
lock
jmp
iret
push
mov
sbb
mov
in
ds
sub
sbb
mov
out
push
mov
test
rcr
pop
(bad)
and
int
fs
and
jmp
fist
mov
xor
inc
push
(bad)
add
push
fcomp
and
retf
pop
data16
jns
add
(bad)
cmp
repnz
mov
pop
stos
aas
js
shr
pop
cli
xchg
pop
ins
das
pop
pop
pop
cmps
lods
clc
cmp
out
test
loope
sti
repnz
dec
fcom
retf
inc
shl
stc
or
cmp
neg
mov
inc
xchg
dec
cmps
jg
ins
xor
jne
fisttp
add
les
clc
int
mov
(bad)
(bad)
cmps
xchg
ror
addr16
aad
sti
(bad)
jl
add
scas
jg
push
mov
stc
mov
xchg
loopne
repnz
cs
sub
push
lock
jo
mov
push
mov
xor
iret
out
pop
shr
into
push
cld
aaa
mov
stos
xchg
(bad)
jmp
pop
adc
pop
test
pop
adc
mov
cmp
shl
mov
dec
cmc
jge
adc
das
push
pop
pop
jge
int3
push
pusha
ins
lock
ret
sbb
mov
mov
sub
arpl
test
dec
(bad)
jecxz
jmp
add
rcl
adc
sub
mov
xchg
popa
inc
bound
in
dec
(bad)
push
jb
rcr
sbb
xchg
mov
punpckhqdq
push
and
cmc
hlt
lods
retf
cmp
cdq
scas
ja
pushf
movs
xor
and
mov
in
adc
sub
and
cmp
leave
and
popf
(bad)
imul
mov
ins
or
sbb
cld
add
(bad)
or
test
jp
dec
push
outs
bound
jo
daa
pop
sub
mov
mov
test
jp
test
arpl
mov
lods
lock
or
jmp
inc
adc
call
mov
js
adc
push
push
jno
or
hlt
or
icebp
push
dec
sti
push
sub
popa
ret
mov
push
xchg
sub
fcomip
cmp
ss
lods
xchg
pushf
pop
pop
stos
aam
leave
out
cmps
(bad)
cdq
xchg
push
in
mov
fidiv
fwait
jne
inc
mov
out
repnz
mov
sbb
or
add
mov
cli
stos
sbb
scas
jl
into
cdq
clc
popa
daa
lods
xchg
or
mov
imul
add
add
outs
or
pushf
add
push
jp
dec
loop
(bad)
push
pop
fucomi
push
(bad)
addr16
cmp
mov
rcr
je
out
cmp
dec
dec
xchg
sub
sbb
les
mov
call
fnstcw
mov
xor
pop
icebp
pop
repz
es
je
adc
in
sti
push
push
and
push
mov
jbe
jno
jl
enter
add
(bad)
repz
pusha
jmp
ret
hlt
pop
and
or
dec
sar
outs
out
imul
pop
(bad)
mov
xchg
dec
and
loopne
in
push
xor
fcomip
rcl
add
mov
add
xchg
lahf
push
fndisi(8087
and
mov
int3
inc
cmp
pop
lods
popf
dec
push
push
and
jmp
sbb
mov
call
shl
in
ins
mov
pop
dec
(bad)
loope
ins
ret
dec
hlt
mov
adc
bound
add
loopne
pop
(bad)
lock
push
inc
movs
mov
ins
lea
fst
in
xlat
xchg
fidiv
jno
retf
adc
push
ja
loopne
or
(bad)
xlat
rol
fcomp
pushf
loopne
cmps
ins
add
xor
shl
cmc
ss
pop
arpl
(bad)
or
rcr
je
and
push
inc
test
sbb
sub
pop
mov
jnp
jl
fs
jae
xor
pop
aaa
repz
sahf
xlat
loopne
jno
mov
call
popa
mov
push
xchg
popa
pop
or
sahf
jb
arpl
xor
enter
cmp
push
fidivr
(bad)
lods
inc
and
dec
iret
gs
(bad)
and
add
push
(bad)
outs
push
retf
adc
fnstenv
pusha
cld
push
in
daa
inc
cmps
push
add
imul
push
xchg
(bad)
jae
not
shl
rol
add
mov
fisttp
jbe
bound
cmc
sahf
xchg
int
scas
stos
cmp
in
fsub
into
add
fisub
shl
or
loope
and
xlat
inc
mov
stos
popa
outs
cwde
ret
retf
shld
call
or
fbld
sbb
cmps
lods
pop
and
mov
dec
fsubrp
enter
pushf
test
push
(bad)
cld
mov
push
add
in
rcl
cmps
aam
inc
mov
lahf
xchg
js
mov
hlt
aaa
push
ja
mov
mov
inc
push
into
cmp
sub
arpl
pop
jns
pop
lea
fistp
and
(bad)
aaa
jb
and
cmp
nop
jecxz
mov
(bad)
das
and
sub
daa
adc
mov
xchg
cmp
(bad)
adc
pushf
aaa
into
sub
ins
pusha
or
jp
jne
stc
dec
bound
(bad)
xlat
rcl
ins
arpl
and
ins
ins
mov
pop
mov
pop
movs
cdq
fcomp
fidiv
fwait
push
adc
test
sub
les
and
pop
and
cli
ja
sub
xchg
pusha
push
jnp
or
repnz
fcmovnbe
cmp
dec
mov
jmp
imul
xchg
retf
mov
pop
and
push
leave
push
stc
pop
in
mov
(bad)
pop
and
dec
add
adc
clc
sub
das
lahf
jmp
jbe
ins
mov
inc
aas
xor
cdq
sub
push
cmp
mov
mov
jmp
push
mov
xchg
daa
cmp
fdivr
in
aaa
xchg
mov
inc
bound
cmp
ret
bnd
lahf
rcl
out
stos
aas
aad
shr
cmps
mov
mov
mov
mov
cld
aas
jmp
jns
out
dec
jl
mov
cli
xor
int
dec
(bad)
jae
cmp
xchg
cld
xchg
add
in
add
cmps
cmp
add
loop
xor
sbb
fstp
leave
push
mov
sbb
leave
aam
lock
cmp
adc
in
sar
mov
adc
fmulp
ss
or
mov
dec
dec
imul
mov
outs
dec
inc
xor
mov
ret
in
inc
mov
xchg
addr16
xor
jno
leave
dec
inc
xchg
retf
sbb
test
add
xor
xchg
out
jns
pop
mov
xchg
pop
call
stos
pushf
scas
jmp
push
sub
loop
mov
mov
cmp
stos
scas
xor
out
not
xlat
xchg
sub
xchg
adc
ss
inc
mov
(bad)
das
fdivr
in
mov
rol
mov
daa
sub
les
icebp
or
lods
xchg
cdq
adc
bnd
and
ins
movaps
xchg
fwait
inc
sub
repnz
or
mov
or
cdq
out
rol
xchg
xchg
and
fdivr
rcl
sbb
jo
inc
mov
test
mov
das
sbb
mov
ins
mov
jnp
stos
fisttp
in
and
mov
mov
push
pop
cmp
hlt
neg
cld
dec
shr
jb
sbb
cmc
jle
jg
(bad)
or
inc
inc
mov
sbb
shl
imul
(bad)
icebp
fdiv
xor
sub
pop
retf
jp
adc
mov
popa
sub
jbe
or
popa
mov
mov
and
ret
scas
or
xor
jp
xchg
mov
and
or
loop
adc
in
mov
gs
cmp
ja
sbb
shl
sub
adc
xor
dec
add
sahf
jmp
cmp
jo
nop
fstp
popf
inc
in
in
sbb
dec
rcl
lods
adc
and
inc
repnz
push
repnz
out
pop
jmp
stos
xor
or
jo
inc
stc
sub
mov
pop
sub
and
loop
cmp
push
ins
(bad)
push
imul
xchg
xor
nop
push
or
dec
in
xchg
mov
xor
in
sbb
add
jae
out
sub
jle
push
mov
or
mov
jl
shl
dec
xor
movs
mov
popf
push
adc
outs
add
sbb
and
mov
cmp
adc
add
cwde
mov
xchg
call
sbb
xor
pop
(bad)
push
sub
sbb
xchg
and
es
adc
scas
fcom
xchg
pop
call
push
js
(bad)
mov
lds
mov
mov
add
or
call
inc
add
ja
xor
jecxz
dec
push
mov
and
in
ins
mov
or
(bad)
fidiv
into
sbb
adc
jns
fild
mov
rcl
xchg
loop
or
scas
out
xchg
xchg
popf
movs
movs
(bad)
and
or
jo
nop
out
rcr
mov
jge
inc
or
ds
mov
movs
retf
hlt
int
daa
push
inc
and
push
movs
test
mov
sahf
xchg
sar
sbb
add
loop
daa
and
jle
pop
mov
push
das
mov
add
jecxz
test
mov
int3
jle
dec
pop
sbb
ret
pop
pop
or
mov
mov
lahf
pusha
addr16
loop
push
or
xchg
mov
shl
inc
mov
inc
(bad)
dec
arpl
mov
pop
lahf
popa
mov
fs
sub
mov
inc
pop
mov
push
adc
mov
pop
cs
iret
xor
adc
ds
add
ds
xchg
sbb
push
iret
enter
in
ret
test
mov
jmp
and
add
jns
mov
std
sahf
fdivr
clc
cmp
cmp
mov
(bad)
cld
adc
ficom
cmp
arpl
push
int
cdq
fwait
sbb
mov
pop
sbb
inc
xchg
cwde
hlt
mov
add
fst
jg
repz
lds
cmc
push
not
adc
mov
dec
aas
mov
es
pop
(bad)
sbb
and
lods
xchg
pushf
or
add
popf
jl
adc
lds
cmp
adc
inc
push
pushf
jne
int3
inc
(bad)
out
push
shl
and
sub
mov
mov
ss
pop
enter
(bad)
call
mov
fyl2x
jmp
ret
arpl
cwde
icebp
stos
lea
test
pusha
lods
pop
sub
inc
data16
sbb
cmps
cs
leave
stos
mov
iret
sbb
or
outs
jns
(bad)
xlat
xor
in
sbb
pusha
fdivrp
adc
into
adc
gs
adc
sti
dec
je
mov
(bad)
int3
jno
mov
pop
inc
mov
pop
call
loopne
lock
daa
push
or
ins
sbb
lods
xor
cld
or
pop
(bad)
mov
and
mov
ret
jg
xchg
sbb
daa
clc
push
mov
mov
and
jno
loop
js
add
pop
fimul
mov
xlat
mov
xor
int3
jb
cdq
pop
cmp
(bad)
sub
xor
ins
add
mov
xchg
test
gs
jge
mov
jg
jle
push
movs
ins
dec
mov
jge
jo
xor
fst
xor
test
in
push
in
xchg
call
xlat
xchg
pop
mov
or
int
xchg
or
xor
push
mov
or
cwde
push
xchg
int
enter
cli
sub
popa
sbb
popa
xchg
imul
xchg
pop
sub
retf
cmp
shl
push
adc
loopne
fisub
mov
rol
retf
xchg
xor
adc
in
aaa
and
adc
dec
ds
lods
in
lock
js
dec
in
xchg
jge
cmp
pop
call
inc
sbb
(bad)
xlat
mov
(bad)
cwde
pop
cmp
lahf
xor
pop
outs
pushf
lea
xor
mov
push
popf
test
emms
cmps
or
scas
mov
test
push
adc
aas
push
sub
mov
ins
cld
pop
mov
fisub
fild
pop
dec
in
push
js
jle
retf
mov
xchg
(bad)
or
pop
push
fbld
pusha
sub
push
push
sbb
xor
sub
sub
(bad)
hlt
and
pop
jno
or
shl
test
cmc
test
test
frstor
add
xor
and
inc
std
inc
add
arpl
and
mov
in
shl
test
das
stos
in
push
and
cwde
(bad)
(bad)
lds
mov
(bad)
mov
cmp
js
fwait
xor
das
fsin
iret
or
sbb
xor
adc
mov
data16
mov
inc
rol
push
js
push
shl
mov
adc
cli
push
adc
mov
outs
pushf
pop
jb
xor
ffree
jno
cmp
pusha
hlt
call
dec
jno
out
mov
movs
jno
mov
jmp
popf
cmc
imul
mov
mov
ds
icebp
jbe
cld
dec
jg
ja
(bad)
sbb
icebp
test
(bad)
xor
mov
rol
lods
scas
clc
frstor
add
pop
(bad)
or
ins
mov
cmp
push
push
push
mov
clc
or
ss
out
(bad)
jne
loope
call
cmp
mov
jle
ror
out
mov
mov
int3
sbb
push
lds
bound
pop
sbb
and
scas
mov
ds
mov
adc
sbb
push
maskmovq
mul
(bad)
mov
in
outs
cli
dec
and
jno
bound
mov
pop
stos
jae
shr
or
loopne
or
cli
fs
mov
fidiv
cwde
iret
in
mov
jle
cmps
loope
sbb
and
pop
cmc
rol
in
push
or
neg
bound
stos
div
iret
xchg
mov
pop
mov
push
add
icebp
push
and
pop
in
in
cmp
mov
shl
add
xor
call
ror
add
jne
dec
es
and
loop
pop
es
xchg
cmps
add
xchg
and
jp
jnp
and
mov
xchg
outs
mov
and
mov
sub
and
mov
cli
cmp
add
arpl
xchg
jae
aas
xor
pop
jnp
lds
jae
add
mov
jbe
arpl
jle
(bad)
xchg
sahf
enter
mov
push
sbb
nop
push
push
pop
fcom
cmp
inc
jne
repz
inc
aam
push
xchg
js
or
add
adc
mov
adc
mov
push
loope
mov
in
cdq
adc
push
fwait
loop
inc
or
mov
and
movs
gs
and
pop
in
aad
mov
jo
jle
add
xor
jecxz
mov
fwait
ins
mov
mov
(bad)
push
add
cld
cli
and
leave
dec
mov
or
dec
or
pop
pop
aad
mov
mov
mov
mov
dec
adc
dec
mov
push
shr
jmp
jl
(bad)
pop
pop
ins
sbb
arpl
push
int3
ins
scas
mov
adc
push
push
sbb
adc
dec
aaa
jo
dec
jmp
push
adc
mov
pusha
popf
dec
cmp
jb
mov
test
mov
mov
ins
jp
sbb
jo
ds
or
sti
fbstp
out
in
cmp
leave
mov
sahf
rcr
das
fistp
cwde
or
int3
jmp
cmp
mul
jnp
mov
and
jno
push
movs
(bad)
xor
dec
in
jg
mov
cmp
cld
jb
out
push
cmps
xor
inc
dec
xchg
sar
out
jne
sbb
les
aam
ja
leave
dec
call
push
ss
hlt
mov
fadd
mov
xchg
fnsave
shl
xchg
push
pop
stos
lods
test
mov
(bad)
mov
fld
dec
pop
scas
mov
fucomp
(bad)
(bad)
(bad)
sbb
scas
into
rcl
lock
das
stos
movs
mov
call
inc
or
sahf
mov
push
adc
fdivr
dec
cmp
or
pop
outs
cli
loope
ja
mov
cmp
fst
or
test
das
pushf
sbb
push
gs
push
fld
ss
xchg
xor
mov
mov
push
xchg
(bad)
mov
into
lea
dec
jno
jae
dec
les
cmp
mov
mov
std
lods
mov
cmp
cmp
jle
sub
movs
mov
stos
rcr
mov
sub
jb
cmps
inc
mov
push
aas
loope
out
sub
or
adc
(bad)
xor
jmp
push
mov
sbb
test
sub
scas
mov
ss
jl
mov
mov
sti
add
add
ds
fstp
int
cmp
int
popa
dec
sub
je
in
mov
rcl
pop
call
adc
sub
aaa
and
sar
cmc
arpl
(bad)
lods
repnz
les
jecxz
push
cwde
sub
mov
test
gs
adc
(bad)
cmp
(bad)
push
cmc
dec
xchg
adc
fistp
mov
lock
mov
mov
mov
adc
mov
push
fld
mov
jmp
cmps
cs
jo
call
xchg
mov
xor
lea
xchg
bound
push
cmp
push
mov
adc
sub
jnp
mov
and
mov
cmp
inc
es
int3
sub
jae
(bad)
cmc
clc
pop
pop
or
xchg
nop
out
jbe
sbb
push
jecxz
jge
mov
jae
cmps
stc
or
push
movs
std
imul
lock
adc
test
inc
cmp
cli
rcr
sub
cs
cld
cmp
pop
cs
ret
sub
inc
test
push
jle
fs
jp
pop
sub
ret
add
mov
movs
jle
or
pop
retf
jg
mov
lods
mov
lds
and
movs
test
fs
or
(bad)
out
mov
xor
push
cmp
and
pop
daa
jb
mov
xchg
inc
and
fs
inc
movs
mov
shr
leave
in
inc
sahf
inc
pop
rol
in
mov
rcl
adc
mov
aas
popa
push
xchg
in
mov
mov
jl
jnp
mov
sahf
arpl
jle
aad
shr
pop
bound
stos
pop
bound
jns
jp
xchg
push
hlt
or
push
cmp
shr
adc
nop
cmp
aad
imul
inc
cli
xchg
iret
push
sub
add
clc
xchg
div
aas
dec
enter
jae
push
inc
and
mov
mov
movs
movs
push
xchg
push
sub
test
mov
or
jge
mov
arpl
mov
add
ror
sbb
mov
dec
inc
jg
arpl
outs
data16
je
pop
sub
int3
jne
pop
repnz
inc
xchg
retf
cli
out
jg
in
daa
daa
jne
dec
bound
bound
ds
xchg
inc
std
pop
popa
add
mul
adc
(bad)
push
repz
dec
sbb
inc
scas
fstp
mov
inc
xlat
in
mov
pop
rcl
lea
ins
jns
sub
cmp
ins
adc
jnp
adc
test
or
sahf
and
enter
int3
jbe
sbb
jae
xchg
pushf
xchg
pop
adc
pop
add
cmps
dec
xchg
test
ja
das
and
jge
inc
sbb
repnz
shl
sar
sub
and
add
dec
mov
xchg
xor
aam
and
(bad)
das
(bad)
mov
dec
ja
mov
push
fidiv
(bad)
or
dec
pop
mov
lods
xchg
jmp
cmps
sbb
push
outs
xchg
es
test
cmp
and
int
rcl
fidivr
sbb
xchg
mov
pop
scas
and
pusha
inc
fimul
(bad)
jnp
inc
mov
sub
ss
repz
ss
xor
jb
mov
dec
(bad)
int3
cmp
jmp
ss
loope
xchg
cmp
outs
or
sbb
sub
jbe
inc
int3
out
ja
mov
jp
fimul
enter
add
popa
jb
scas
(bad)
test
cmp
cmp
or
mov
mov
aam
int
or
call
mov
sbb
push
ror
add
dec
test
cmp
push
in
sub
shl
cmps
dec
popa
xchg
xchg
adc
or
jg
adc
pop
inc
loop
mov
int
xchg
or
sub
mov
shl
jl
adc
jl
cwde
rcl
jp
inc
sar
out
out
cmp
ss
dec
aam
dec
shl
mov
mov
cmp
pop
outs
ja
jl
mov
cmp
icebp
retf
jl
mov
out
nop
mov
push
jmp
mov
cmp
ficom
inc
lock
inc
inc
push
mov
jp
repnz
shl
xor
jmp
cmp
std
mov
cmp
loopne
cmp
xchg
test
xor
pop
in
scas
pop
add
(bad)
loopne
cmp
push
neg
pusha
jbe
fidivr
mov
pop
sub
adc
mov
inc
stc
lds
push
inc
aam
fwait
popa
into
jmp
(bad)
icebp
(bad)
or
sub
and
retf
mov
out
ficomp
jecxz
jo
or
push
dec
push
les
jmp
enter
mov
mov
pusha
cmp
pop
push
pop
and
ficomp
xchg
sbb
inc
fild
adc
jl
dec
push
cmp
add
lods
loope
scas
stos
jp
inc
sub
pusha
jbe
fs
into
sti
cmc
es
cmps
mov
out
int
(bad)
and
loop
pop
push
ds
xchg
push
sub
mov
push
into
les
pop
mov
daa
mov
dec
aaa
inc
shl
mov
inc
adc
outs
jp
push
xor
mov
in
ficom
push
sub
pop
xchg
in
or
call
push
or
imul
xlat
jmp
inc
ffree
push
sbb
push
call
(bad)
mov
leave
jmp
imul
div
pushf
daa
jmp
and
popf
es
mov
sahf
mov
std
int3
stos
or
fiadd
stos
mov
mov
or
data16
ins
dec
sar
jle
rcl
cmp
push
mov
ret
sub
sbb
xchg
and
int3
sti
popa
call
int
or
mov
dec
jnp
add
imul
xlat
jmp
retf
cmp
int3
repz
retw
stos
outs
pop
push
sub
add
loopne
add
inc
test
push
mov
fild
cmp
push
sahf
ficom
stos
xchg
sub
call
pushf
mov
(bad)
xor
movs
mov
mov
out
loope
cli
addr16
pop
repnz
cmp
retf
pop
test
(bad)
mul
jno
sub
add
repnz
out
fcom
mov
mov
push
(bad)
sub
mov
mov
hlt
sub
mov
inc
xlat
or
loopne
xchg
in
sbb
or
sbb
stos
add
add
fcmovu
nop
mov
push
cld
retf
out
lods
das
shr
inc
mov
push
and
cmps
xor
cdq
xchg
shl
push
adc
pop
or
push
pop
dec
repz
jbe
icebp
xchg
xlat
sub
xor
xchg
push
mov
daa
fisub
enterw
inc
lahf
sbb
int
shl
xor
pop
cld
enter
or
jmp
xor
adc
(bad)
loopne
loopne
lds
or
sub
lahf
dec
and
pop
sbb
or
shl
cmps
sti
mov
fldenv
push
mov
sbb
pop
xchg
xor
add
add
mov
es
or
inc
cmp
gs
mov
mov
fs
push
mov
jle
cmp
pcmpgtd
ja
leave
and
mov
lock
or
xor
lea
jns
cmp
ret
xor
jae
jno
cmp
aad
addr16
add
and
xor
add
stc
stos
dec
jnp
sahf
adc
stc
mov
repnz
fs
mov
neg
mov
iret
dec
aaa
mov
stc
mov
adc
pop
mov
adc
aaa
out
in
aam
lods
add
cmp
fprem1
aaa
inc
(bad)
dec
sub
cmp
ret
sub
int
cmp
pushf
lods
dec
mov
sar
lds
fwait
call
xor
add
sbb
or
addr16
stos
test
sahf
sub
cwde
retf
lds
dec
jp
es
inc
hlt
sbb
push
dec
ins
sbb
loope
mov
inc
repz
outs
movs
jmp
or
fisubr
(bad)
fadd
mov
out
cs
or
sahf
addr16
push
test
mov
sub
cmps
push
adc
and
push
push
pop
inc
aam
imul
std
pop
fs
dec
out
mov
xor
xchg
pop
xlat
mov
push
test
adc
pusha
mov
adc
sub
or
call
retf
inc
sbb
cld
or
mov
sub
sub
push
imul
cwde
add
rcl
add
cmc
push
xchg
cmc
test
inc
sub
sbb
cmp
inc
mov
adc
retf
inc
mov
jmp
cli
xor
and
(bad)
cli
outs
imul
pop
hlt
push
data16
xor
sahf
in
ins
pushf
repnz
jns
shl
cmp
jb
cmc
pop
scas
or
xchg
int
xlat
mov
jnp
or
adc
dec
pop
movs
and
cmc
mov
(bad)
iret
int
enter
xor
aam
jl
(bad)
lds
cmp
neg
cmp
pop
and
repnz
test
imul
mov
lods
sub
pop
in
loop
scas
ficomp
xlat
(bad)
jg
aam
mov
retf
push
add
cwde
sar
jns
push
int
push
mov
push
(bad)
mov
retf
dec
test
or
aam
jmp
test
cmp
gs
sbb
fld
enter
fs
mov
pop
les
sbb
cmps
cmp
call
stos
adc
shl
movs
mov
retf
test
sub
call
jge
js
rcl
mov
mov
cmp
ret
inc
cmp
lds
loope
cmp
dec
or
xchg
ins
neg
pop
cdq
xchg
push
shl
jp
add
sub
mov
dec
imul
std
in
and
sub
shl
movs
stos
pusha
mov
and
mov
mov
shl
call
leave
fwait
and
and
inc
(bad)
(bad)
dec
push
cmp
mov
push
pop
xchg
sub
rcr
scas
aad
sub
pop
sbb
outs
stos
adc
ret
stos
fcomip
or
cmp
pusha
int
dec
add
inc
cmp
add
mov
cmps
neg
xchg
loope
dec
cdq
inc
pop
cmps
push
sbb
scas
sbb
and
inc
shl
out
xchg
xchg
jnp
ins
push
and
lock
mov
pushf
mov
data16
popf
loopne
pop
int3
push
mov
movs
xchg
ja
xor
les
cld
pop
add
int
dec
adc
mov
jb
add
mov
add
(bad)
or
jbe
mov
aad
jb
lods
cmps
mov
jl
mov
inc
rcr
cld
shl
js
cmp
call
call
jmp
pop
imul
in
fnstenv
jmp
push
lods
cmc
inc
test
loopne
xor
and
test
xlat
mov
sbb
test
cmp
cmp
adc
addr16
cmp
jbe
nop
sbb
stc
fadd
arpl
fs
jae
push
sub
enter
mov
sub
inc
dec
adc
ja
mov
stc
mov
fcom
pop
mov
xchg
add
test
mov
jge
mov
in
and
jno
dec
addr16
ds
xor
or
pop
push
sbb
sbb
or
add
into
iret
sbb
jae
test
dec
jp
xchg
aaa
adc
scas
adc
mov
cmc
ret
sub
push
jecxz
jb
sub
std
mov
xor
sub
fisubr
add
movs
pop
aaa
ja
lods
sar
inc
push
out
dec
adc
loop
(bad)
jno
pop
ins
mov
sti
test
cs
ficom
sbb
in
and
push
mov
xchg
inc
sbb
(bad)
scas
pop
and
loop
sub
leave
pop
xchg
pop
xchg
sti
scas
das
xor
xor
mov
es
sahf
pop
pop
dec
cmp
adc
lods
sar
mov
jns
nop
pop
add
jns
pop
repnz
pop
cld
cmp
cli
sbb
add
dec
test
ins
xchg
push
or
dec
scas
lea
sbb
ret
cmc
sbb
and
in
or
mov
jne
inc
stc
mov
pop
mov
rol
sbb
xor
jns
xchg
fisttp
jp
popa
add
hlt
cmc
xchg
jo
push
sbb
mov
pop
add
pushf
nop
les
shr
jbe
add
jne
jb
push
cmps
jle
push
mov
sub
jmp
fs
in
or
xchg
push
sub
out
jmp
mov
outs
push
push
fdiv
push
hlt
sar
mov
scas
fld
jle
sub
ds
add
sbb
call
add
std
stos
fcom
adc
xchg
mov
mov
push
ja
mov
cmp
iret
hlt
push
int3
(bad)
jb
enter
pop
scas
popa
lods
aas
out
retf
mov
daa
imul
ja
dec
pop
pop
jge
js
jbe
nop
add
dec
popf
adc
xor
lods
pop
mov
outs
mov
cwde
or
or
pop
adc
add
ror
in
out
or
loop
xchg
or
pop
jb
add
lods
inc
dec
repnz
pop
xor
dec
sbb
push
pop
int
mov
mov
xchg
sbb
les
pop
cmps
lea
fldcw
xchg
pop
pop
xlat
test
push
pop
adc
sbb
das
dec
outs
in
in
das
(bad)
jb
rcl
cwde
cmp
(bad)
js
sbb
adc
fidivr
mov
in
dec
mov
cmp
fwait
push
push
pop
and
dec
lds
mov
adc
cmps
mov
add
push
into
sbb
and
pop
mov
retf
cdq
mov
fwait
adc
sbb
icebp
test
add
inc
mov
repz
cmp
pop
ror
loopne
jecxz
cmps
lea
mov
ja
dec
cs
sbb
movs
adc
sbb
cmps
add
adc
push
dec
pop
sbb
cmp
mov
test
pop
xchg
cwde
jmp
stos
and
or
test
and
lods
xchg
mov
and
sub
movs
xor
(bad)
xor
jbe
dec
data16
sbb
sub
jnp
jo
mov
push
xchg
jne
std
mov
xor
fs
xor
cmp
fwait
mov
or
push
fld
mov
into
mov
jmp
jle
jmp
push
push
je
sti
movs
add
mov
loop
loop
jbe
sbb
rcr
jg
shr
cmp
jecxz
dec
stc
cdq
mov
cmp
jno
push
mov
jmp
call
inc
aam
fild
jnp
(bad)
retf
xchg
pop
cwde
mov
cld
push
pop
call
jns
movs
ret
in
jecxz
cdq
imul
cwde
mov
mov
je
stc
loop
mov
fwait
call
sbb
xor
out
push
out
inc
fisttp
push
(bad)
pop
jmp
or
cmp
xor
pop
dec
rcl
jb
mov
jl
jb
fs
xor
loope
sub
mov
jg
ret
sub
sbb
aas
clc
pop
fstp
int3
retf
into
pop
popf
add
dec
pop
mov
dec
dec
push
add
fstp
test
vpermilps
test
and
out
sub
ret
xchg
push
jg
mov
cdq
cdq
std
lahf
nop
dec
clc
adc
sub
xor
pushf
mov
movs
(bad)
int
ret
xor
adc
ins
pushf
push
pop
sbb
in
inc
in
test
xor
sub
(bad)
ss
cmps
push
pop
sub
add
cmp
daa
int
cmp
imul
mov
push
adc
(bad)
inc
pop
aaa
data16
repnz
sub
lods
push
jmp
out
mov
popa
or
xchg
inc
ret
add
aas
inc
xchg
cmps
dec
mov
into
dec
loopne
dec
not
inc
sahf
out
adc
lahf
jge
leave
in
push
dec
pavgb
repz
stos
mov
pop
xor
add
push
stos
ror
test
sti
pushf
mov
and
fwait
std
sub
dec
call
sbb
jo
retf
cmp
stos
ins
fsubr
cli
call
jne
jge
mov
lahf
loopne
clc
into
pop
hlt
or
push
das
add
test
inc
int
lods
nop
neg
test
adc
pop
call
xchg
rcl
push
pop
call
sbb
ror
pop
movs
mov
(bad)
cmp
mov
call
pop
or
fcmovnbe
loopne
ds
mov
xchg
and
test
das
cmp
aam
pop
or
mov
fild
or
ds
add
jle
xchg
out
fsub
inc
cmp
shl
and
and
out
cmps
neg
jge
xlat
sub
(bad)
dec
jnp
icebp
mov
mov
in
jmp
add
leave
fucomip
in
mov
sbb
nop
mov
xor
adc
adc
out
pop
aas
pop
nop
xor
or
cmp
and
dec
and
jmp
jp
sahf
pop
inc
or
test
pop
pop
retf
mov
repnz
and
outs
sbb
cmp
cld
(bad)
neg
mov
push
(bad)
les
enter
jmp
jns
ss
xor
xor
js
xabort
push
jne
xchg
mov
bound
stos
add
fwait
sbb
popa
sbb
fimul
mov
cmp
outs
es
cmp
jno
dec
inc
call
and
dec
jmp
pop
xchg
test
dec
xor
jp
les
movs
loope
fsubr
xor
mov
and
xor
cmp
mov
mov
(bad)
ss
aad
mov
pop
mov
imul
imul
rcr
or
mov
ds
jp
lock
test
test
mov
ins
les
aad
xchg
sbb
mov
mov
push
sub
rcr
rcr
les
(bad)
out
push
icebp
test
push
xor
inc
in
mov
inc
lock
mov
add
ror
pop
rep
add
push
pop
adc
ss
clc
add
stos
mov
push
(bad)
es
mov
mov
stos
dec
add
pop
int3
mov
sbb
adc
sar
cmp
sub
push
adc
bound
push
add
in
gs
mov
test
mov
jno
mov
push
xor
fnstsw
mov
sub
xor
popa
mov
sub
(bad)
arpl
sub
cdq
aaa
rol
les
aad
std
arpl
push
dec
sub
ins
repz
rcl
(bad)
pop
int
ffree
in
iret
pop
jg
fisttp
adc
or
xor
into
cmp
jns
xor
inc
mov
out
and
mov
mov
les
dec
sub
cdq
fcmovnb
push
lods
xchg
int
push
int3
add
aam
or
(bad)
lock
adc
shl
or
ret
fsubrp
test
mov
test
and
add
dec
xchg
movs
sbb
or
rol
jne
xor
cs
cmp
add
cmp
ret
enter
stc
divps
out
imul
adc
call
jb
push
sbb
fistp
cli
inc
mov
sub
pop
pop
dec
cmps
in
push
lahf
inc
mov
push
gs
push
pop
pop
jecxz
rdmsr
jbe
and
mov
inc
mov
clc
fld
cmp
mov
jo
push
mov
push
pop
aas
dec
jl
xchg
test
xor
hlt
std
cmp
pop
xchg
lahf
loopne
mov
ss
in
popf
mov
clc
pop
dec
pop
stos
mov
lods
std
shl
cmps
mov
push
add
inc
mov
out
xor
pushf
and
les
fs
xor
add
xchg
mov
xchg
fcom
xchg
call
das
stos
call
xchg
jecxz
js
imul
cwde
outs
jecxz
mov
push
fisubr
xor
(bad)
fdiv
xor
scas
sbb
push
xchg
in
shl
cmps
stos
int3
clc
cmova
mov
xor
or
adc
test
sbb
rcl
jno
imul
xor
int3
or
dec
jmp
mov
int3
in
(bad)
scas
call
mov
push
cmp
in
and
in
fs
and
out
adc
cmp
add
ja
jle
cli
int
repz
inc
sub
jo
push
dec
cmps
pop
cmp
repz
ret
jb
sbb
sbb
cmp
mov
push
mov
jmp
pop
ins
xlat
ret
ins
neg
cs
gs
ret
jmp
das
or
aas
cmp
sbb
ja
dec
add
dec
push
shl
lock
loop
jno
or
lea
sbb
hlt
mov
inc
aam
and
les
iret
sbb
(bad)
rcl
sbb
rcr
or
xchg
inc
fistp
mov
push
icebp
push
retf
cmps
xor
mov
sbb
ret
xor
scas
lds
fnstsw
(bad)
mov
lds
mov
dec
cs
imul
movs
popf
xor
mov
inc
repnz
pop
jg
ret
xor
jl
xchg
xlat
xor
int
jmp
sbb
das
add
inc
jge
out
icebp
sbb
fwait
or
(bad)
fnsave
add
sahf
pusha
push
cld
int3
inc
sbb
xchg
push
(bad)
in
popa
clc
pop
dec
sbb
jp
imul
daa
cwde
neg
test
(bad)
int
xchg
mov
jmp
jg
add
xchg
ss
jl
popa
hlt
outs
outs
ds
add
inc
xor
jle
pop
inc
std
jmp
lea
add
aad
push
lahf
sub
push
imul
shl
lods
out
loope
xchg
jle
fist
mov
inc
jg
mov
mov
fnstcw
fs
jge
and
jo
xor
call
sahf
add
jg
das
xchg
fst
add
jge
stos
inc
mov
repnz
test
clc
and
ficomp
scas
andps
cmp
push
inc
test
pop
sub
js
mov
into
xor
xor
outs
pop
retf
scas
pusha
in
fucom
jo
pop
mov
mov
call
out
call
stos
aad
stc
mov
adc
ret
mov
pusha
out
lock
push
sub
cmp
jb
(bad)
stos
mov
(bad)
imul
loopne
dec
mov
outs
push
inc
push
mov
xor
cwde
push
out
cmp
arpl
adc
(bad)
repz
mov
jo
aas
inc
(bad)
adc
mov
dec
sub
je
jge
jb
je
(bad)
mov
mov
pusha
pop
ret
lock
sub
lock
inc
movs
cmp
iret
or
dec
jl
jp
cdq
mov
retf
cmp
or
dec
fild
pop
xchg
fimul
aaa
div
gs
imul
shr
mov
cmp
push
out
stc
ret
sub
and
xor
and
ja
sti
cmc
movs
outs
stc
push
lods
dec
mov
adc
lods
push
pop
cwde
dec
cmps
stos
test
xchg
dec
idiv
pop
outs
add
cmp
das
inc
or
xchg
pop
cmp
sbb
pop
cmp
cmp
jb
je
gs
pop
ja
in
ds
inc
cmp
jbe
inc
sbb
adc
sbb
add
jo
push
aas
mov
dec
ins
inc
adc
cmp
xor
lods
jnp
daa
cmp
push
pop
jbe
inc
push
clc
or
xor
push
scas
xchg
xor
xchg
loop
and
mov
ins
das
add
xchg
jne
fidiv
cld
scas
call
adc
jo
pop
cmps
imul
and
push
lods
add
fcmovnb
push
inc
call
pop
mov
push
(bad)
and
ror
inc
test
cs
cli
add
sub
xor
frstor
mov
stc
xbegin
test
pusha
lahf
mov
push
dec
sbb
gs
(bad)
in
xor
push
mov
and
and
jo
xlat
sub
arpl
jne
cs
fdiv
outs
jecxz
sub
mov
push
add
movs
test
scas
loop
mov
(bad)
inc
and
sbb
mov
adc
ds
jmp
lea
ss
test
jno
mov
add
pop
cdq
xchg
and
shl
sub
loope
or
call
xor
test
std
inc
cmp
div
or
in
mov
xchg
pop
retf
pop
jl
mov
xor
jb
xchg
jle
pop
mov
cwde
clc
out
and
neg
mov
push
add
jno
dec
mov
arpl
dec
xchg
dec
mov
cmp
mov
mov
inc
xchg
fiadd
xchg
adc
cmp
inc
sbb
mov
in
inc
es
iret
popf
adc
scas
div
das
call
rol
out
lods
cld
scas
sti
mov
cmp
test
push
out
push
xor
fbstp
xor
fwait
inc
mov
xor
mov
out
push
xchg
das
inc
sti
push
xlat
inc
(bad)
and
jp
lods
sbb
push
adc
test
pop
push
inc
imul
cmp
dec
daa
dec
mov
dec
xor
cmp
inc
pop
cmps
push
movs
and
mov
into
sbb
popf
push
pop
pop
in
jbe
push
dec
xchg
int
xchg
jg
js
inc
adc
out
pop
push
stos
div
rol
cmc
pop
xor
mov
sub
in
cmp
lea
jmp
cmp
mov
call
ror
mov
loope
inc
js
ret
inc
jns
xchg
aas
das
add
dec
loop
sbb
push
not
jecxz
sbb
jecxz
inc
xor
repz
pusha
lock
xchg
mov
stos
ja
sti
xor
into
in
xchg
stos
inc
aam
stos
fnstenv
mov
pop
xchg
pop
iret
out
test
ja
popa
jb
adc
and
shr
jno
lods
pop
inc
mov
xchg
push
mov
into
xor
xchg
cmps
jo
adc
pop
out
sub
sbb
fcmovnb
movs
shl
dec
dec
(bad)
imul
sbb
mov
gs
movs
ret
ja
jnp
xchg
push
mov
and
sub
cmp
js
xchg
ins
retf
out
(bad)
std
mov
inc
(bad)
cmp
adc
push
xor
pop
xor
lahf
in
pusha
inc
out
push
stos
lods
movs
retf
push
retf
dec
push
stos
div
mov
mov
lds
inc
lock
mov
fwait
out
jmp
out
int3
mov
add
xor
mov
test
loopne
out
jbe
mov
jb
call
push
mov
cli
sbb
dec
test
icebp
popf
add
sbb
stc
mov
sub
jnp
push
aad
out
xor
rcl
inc
dec
(bad)
enter
in
sbb
mov
gs
xchg
(bad)
dec
lods
(bad)
pop
sar
rcr
fnsave
rcl
popf
shr
or
call
cmps
and
lods
jae
and
and
push
sub
dec
or
dec
jmp
(bad)
retf
lods
jmp
les
rcl
mov
mov
into
add
push
push
ins
sbb
xor
mov
dec
cmps
stos
sbb
(bad)
jge
adc
adc
xchg
out
outs
aas
cli
ret
stc
test
clc
pop
sbb
mov
das
pop
pop
sbb
int3
push
inc
(bad)
push
cli
fist
or
nop
push
mov
sbb
pop
sub
call
xor
mov
dec
mov
xchg
jo
jp
mov
or
pop
inc
xor
add
mov
aas
in
jle
mul
loopne
and
mov
mov
pop
sbb
lods
push
out
add
call
adc
arpl
adc
xchg
pushw
cwde
jp
cmp
add
sub
setge
inc
and
sti
enter
retf
dec
mov
fs
adc
outs
pop
mov
mov
dec
xor
call
imul
xor
test
pop
inc
pop
popa
in
xlat
loope
cwde
stos
cmp
cmp
mov
test
fld
inc
xchg
out
(bad)
mov
enter
mov
clc
div
into
pop
xchg
jnp
or
mov
add
(bad)
jns
test
xchg
loopne
in
jecxz
int3
fstp
sub
pop
pop
and
xchg
add
fs
cmc
xchg
mov
sbb
pop
cwde
mov
(bad)
push
test
dec
add
or
adc
jle
scas
and
xor
lock
adc
or
push
cmp
xchg
aad
pushf
xor
sbb
push
pop
xor
test
mov
outs
pop
adc
jl
mov
inc
test
neg
push
mov
test
mov
daa
xor
or
loope
cmc
pop
icebp
adc
cmc
in
cmc
(bad)
test
std
inc
add
std
jo
and
sbb
das
mov
add
pop
stos
ss
mov
loop
dec
rol
lock
retf
mov
cmp
(bad)
jecxz
or
outs
cdq
pop
movs
sbb
adc
pop
rol
mov
or
mov
push
mov
(bad)
popa
int
push
mov
leave
push
adc
popa
fdiv
xchg
popf
push
(bad)
cdq
push
lods
cmp
retf
clc
sbb
dec
sbb
jmp
mov
xchg
and
jnp
int3
adc
idiv
push
or
jne
sbb
or
test
in
ss
jecxz
not
imul
test
daa
sti
sar
sahf
(bad)
int3
adc
jge
jmp
push
movs
fcmove
ficom
aas
outs
pop
or
mov
(bad)
xor
mov
movs
test
pop
mov
mov
push
out
dec
loopne
add
mov
dec
cs
xchg
addr16
adc
lods
and
sub
imul
jae
rcl
shr
jns
fcomp
out
movs
xchg
in
popf
xchg
inc
call
cmps
and
mov
lahf
les
or
pop
repz
aad
es
mov
shr
cmc
call
and
push
mov
scas
mov
nop
cdq
rcl
inc
or
xlat
cdq
inc
aad
inc
push
(bad)
ins
aad
xchg
lds
pop
cmp
loopne
pop
inc
jnp
xlat
repz
inc
mov
addr16
adc
test
or
jns
xchg
sub
push
test
mov
cwde
mov
das
mov
mov
jns
leave
jno
mov
xor
cmps
retf
xchg
jmp
das
stos
movs
xor
movs
inc
dec
jo
adc
or
lea
pop
push
pop
movs
(bad)
dec
cdq
icebp
mov
iret
rol
cmc
ja
cmp
xor
mov
repnz
lahf
hlt
call
sub
pop
fisttp
xchg
out
fcom
push
sub
push
jmp
shr
sub
ins
jecxz
(bad)
fisub
test
cmp
neg
or
xchg
rcl
or
repz
mov
dec
out
shr
movs
inc
in
cmp
ja
loope
loope
cwde
test
jbe
mov
dec
adc
mov
pop
mov
inc
xor
call
inc
jae
jae
pop
push
sbb
inc
cmp
ret
sub
pop
shr
shr
cmc
push
mov
add
cld
inc
mov
mov
fdivr
popf
(bad)
add
or
pop
mov
(bad)
test
dec
mov
and
pop
leave
test
add
xchg
aam
pop
pushf
bswap
scas
pop
mov
out
sub
cmc
(bad)
sbb
hlt
(bad)
mov
push
xchg
sti
dec
mov
push
sbb
rcl
jmp
hlt
add
jb
retf
loope
scas
dec
test
push
hlt
scas
mov
cs
and
add
aaa
fsub
push
add
or
dec
std
test
mov
mov
inc
adc
(bad)
out
pop
dec
or
mov
ror
cmps
addr16
push
pop
cmp
ja
fimul
mov
adc
test
xor
out
xchg
into
and
sub
lock
mov
xor
cmps
stos
sahf
pop
sbb
aam
out
ins
sub
add
(bad)
mov
fs
outs
mov
mov
lds
mov
shl
push
dec
mov
pusha
or
stos
call
out
dec
mov
xor
sahf
push
cwde
and
inc
mov
(bad)
gs
retf
jmp
sti
fisttp
cmp
and
add
int3
test
jge
in
cmp
mov
mov
in
mov
inc
cdq
xor
mov
xor
push
addr16
ss
pushf
push
sub
or
cmp
retf
in
daa
sub
mov
sbb
sti
sub
adc
xor
stos
fsub
mov
cmp
cdq
sti
xchg
push
xor
dec
test
push
push
fmul
stos
cmps
sysenter
push
and
enter
pop
rol
pop
xchg
not
das
pop
cs
xchg
dec
or
cmp
mov
(bad)
test
popf
or
or
sti
mov
iret
das
les
mov
fwait
in
jmp
xlat
test
dec
pop
mov
cmp
adc
pop
push
jo
enter
cmp
xlat
mov
in
adc
push
in
cs
jmp
push
out
sbb
sbb
dec
adc
mov
scas
add
loopne
sbb
div
push
jmp
fs
xchg
(bad)
hlt
test
pop
loop
dec
inc
sahf
pop
dec
test
xor
stos
imul
xchg
lock
clc
push
pop
aas
and
sub
sar
fild
jb
call
mov
movs
sbb
or
adc
int3
push
adc
lahf
lds
repz
or
fcomp
cwde
mov
inc
inc
arpl
mov
sbb
xchg
push
inc
call
scas
adc
dec
test
mov
loope
push
out
icebp
sub
push
out
or
movs
call
dec
cmc
add
popa
ss
ret
je
and
lock
mov
sub
cmc
jns
cmp
aad
mov
mov
dec
and
jg
or
xchg
or
jbe
or
jge
push
xchg
lods
mov
(bad)
stc
push
or
lods
pop
shl
dec
adc
nop
and
adc
cmp
scas
mov
test
xor
inc
js
scas
pop
rcr
pushf
and
push
xchg
fldcw
jnp
imul
cmp
popa
jmp
test
mov
jmp
pop
movs
ror
aaa
add
dec
cmp
sar
add
movs
data16
leave
aaa
push
mov
les
add
inc
popf
and
jb
jmp
ror
cmp
sbb
scas
sbb
push
out
sub
rol
fs
nop
add
pushf
out
fstp
push
adc
test
push
push
add
xor
pop
mov
ins
adc
mov
push
sub
repnz
imul
jne
lods
sub
adc
jno
dec
sbb
sbb
pop
leave
jbe
sbb
adc
pushf
xchg
iret
pop
and
and
scas
mov
jae
iret
mov
dec
mov
mov
mov
shrd
dec
lods
or
pop
xor
jbe
std
jns
cmp
or
shl
jae
out
in
inc
ficom
push
nop
(bad)
jmp
les
pop
stos
mov
div
mov
sbb
test
cmp
data16
hlt
dec
cdq
ret
inc
pop
sbb
ss
adc
stos
leave
ds
inc
jecxz
xlat
adc
inc
shl
inc
mov
lods
pushf
and
ins
pop
mov
fcmovnb
lahf
in
mov
ins
nop
fidiv
stos
pop
(bad)
push
ja
gs
and
es
cld
jne
lds
pop
dec
movs
and
aas
inc
sub
jo
je
push
lock
and
xchg
in
enter
sbb
retf
inc
inc
mov
sub
retf
xchg
arpl
push
cmp
xor
jns
pop
jmp
pop
out
cmps
(bad)
push
lods
mov
fucomi
adc
mov
test
adc
sbb
push
pop
jae
ret
daa
in
cmc
aas
popf
push
ja
dec
scas
(bad)
out
test
leave
je
mov
in
movs
pop
fisttp
push
mov
out
mov
xor
sbb
rcl
inc
jg
dec
repnz
sbb
push
(bad)
fcmovnu
xor
out
test
loopne
mov
adc
aas
and
rcl
jnp
jns
sar
pop
mov
jg
test
or
inc
pusha
adc
inc
repz
jmp
pusha
popf
(bad)
aad
clc
mov
cli
test
push
out
paddb
sbb
jmp
int3
xor
sub
jmp
dec
call
movs
and
pusha
push
ins
popa
cld
jne
retf
popa
jmp
dec
or
sbb
out
scas
(bad)
xor
fs
mov
das
std
cmp
push
movs
retf
push
xchg
imul
push
mov
or
push
jmp
(bad)
int3
mov
adc
sar
test
push
outs
xor
popa
sahf
out
call
fcom
(bad)
das
std
ds
out
sub
mov
push
jnp
dec
lea
cmp
(bad)
cmps
adc
fsub
repz
fsub
pop
pushf
inc
jmp
dec
stos
inc
int3
push
neg
and
or
mov
adc
cmp
ror
ds
jl
mov
push
add
cmp
jo
pop
ss
dec
inc
rcl
pop
pop
add
fsub
cdq
adc
daa
in
and
adc
aam
mov
data16
out
aaa
in
pop
idiv
mov
je
or
adc
push
xor
xchg
lea
or
xlat
es
daa
pop
jo
add
inc
sahf
xchg
mov
mov
mov
inc
int
dec
sbb
outs
in
imul
add
add
dec
lods
jbe
aas
and
pop
xchg
mov
mov
rol
fcmovb
mov
xor
inc
mov
scas
mov
jle
cmp
or
popf
daa
lods
sub
dec
push
(bad)
cmp
mov
fcom
popa
sbb
add
repnz
js
jmp
push
jg
sbb
push
out
gs
sahf
jae
in
ss
mov
ret
aas
add
sub
mov
or
lock
adc
cli
push
mov
popa
imul
sbb
shl
stos
(bad)
pop
mov
xchg
adc
dec
jns
cmps
movs
(bad)
fiadd
cmp
inc
push
mov
sti
retf
ins
lea
jl
add
adc
es
lock
or
cmps
(bad)
shl
arpl
cs
sub
inc
scas
repnz
inc
sub
and
les
mov
jnp
sbb
mov
jle
push
adc
int3
pop
arpl
lock
(bad)
shl
ret
pop
push
lahf
cmp
loopne
mov
iret
fisubr
or
inc
outs
js
add
arpl
mov
xor
lods
cmps
shl
xchg
outs
fbld
sbb
ror
fs
gs
dec
test
pushw
adc
(bad)
add
push
mov
adc
pop
das
outs
jbe
test
adc
bound
add
push
mov
push
push
aaa
dec
(bad)
div
iret
inc
mov
nop
jne
cmps
cmp
psubb
push
std
mov
jns
sbb
push
inc
ins
cld
fs
jle
arpl
(bad)
push
popfw
imul
and
push
not
daa
and
inc
adc
repz
outs
jbe
sbb
dec
out
js
and
xchg
xchg
inc
push
mov
mov
sbb
out
mov
push
std
cmc
mov
dec
hlt
push
pop
sub
jmp
pop
out
cli
push
popa
mov
jae
and
(bad)
sub
movs
scas
sbb
xor
rcl
jmp
lods
repz
ins
sbb
jb
outs
dec
cmps
mov
adc
and
lahf
pop
mov
(bad)
xor
fld
push
jb
push
bound
cmp
mov
sub
retf
ficomp
scas
(bad)
ds
add
jmp
or
add
fidivr
inc
add
lea
int3
jo
cmc
and
xchg
fdivr
sub
popa
sahf
mov
mov
fsub
es
push
or
dec
cmp
add
aas
sbb
mov
jmp
(bad)
jae
xor
lock
and
stc
loop
dec
fnsave
xchg
mov
cmp
and
or
fstp
adc
jmp
or
paddusb
imul
ror
pop
sbb
test
jne
(bad)
test
in
or
aas
sti
(bad)
and
out
mov
dec
pop
in
sub
int3
scas
dec
jns
mov
inc
push
xor
adc
fs
das
xor
mov
pop
fsub
out
or
inc
push
xchg
movs
dec
mov
add
cwde
fdivr
es
hlt
lds
mov
pop
or
out
jb
dec
dec
mov
sub
or
ds
hlt
fmul
ins
retf
in
xchg
ss
cmp
bound
mov
jl
dec
mov
mov
or
add
pop
add
xchg
pop
stc
pop
repz
icebp
ins
aaa
fsubr
pop
push
popf
push
jne
jle
fldcw
pop
repz
inc
retf
mov
cmp
(bad)
sar
pop
pop
idiv
push
sub
das
and
push
(bad)
jne
mov
neg
xor
rcl
and
sbb
dec
rcr
jmp
add
jle
js
inc
stc
stos
cs
add
mov
jae
out
or
adc
std
dec
or
and
fs
add
and
imul
adc
adc
jae
cmps
dec
cmp
fdivp
jae
jmp
and
sub
sbb
cmp
out
mov
cmp
pop
xchg
fimul
cs
test
icebp
cmp
je
sahf
fistp
mov
je
pop
dec
fsubr
push
push
lds
mov
cmps
mov
xchg
fdivr
push
cdq
iret
pop
popf
out
stos
inc
rol
lahf
test
pop
nop
or
lahf
jmp
repnz
into
jmp
cmp
xlat
push
(bad)
stos
push
mov
cmp
add
test
cli
call
pop
mov
mov
sbb
push
pop
pop
sub
mov
mov
jnp
jns
add
clc
jle
inc
cmp
xchg
in
clc
loopne
enter
mov
or
or
popf
sub
jns
div
jae
mov
aad
mov
push
pop
mov
in
aam
dec
aam
les
dec
mov
test
mov
xor
mov
inc
sbb
xchg
add
std
pop
inc
mov
shl
jnp
fadd
pop
rcl
and
push
and
dec
xchg
mov
push
test
or
xchg
add
xchg
sti
les
jb
adc
cmps
nop
adc
xchg
adc
jo
rol
cmp
dec
adc
jo
not
mov
nop
xchg
aaa
mov
sbb
adc
call
ins
test
call
jo
shl
push
test
les
dec
sub
mov
or
add
mov
sub
cmp
sub
mov
ins
aam
outs
push
dec
inc
xchg
pop
dec
js
and
add
adc
movs
xchg
and
inc
daa
neg
pop
enter
mov
mov
popa
(bad)
xor
push
jg
adc
pop
nop
xor
xchg
sbb
xor
ret
jle
ds
es
imul
jl
mov
push
mov
in
fld
adc
pop
out
adc
xchg
mov
test
mov
pop
pop
(bad)
out
push
and
xchg
stos
pop
arpl
mov
shl
xchg
mov
add
jno
(bad)
fs
sbb
mov
push
jle
sub
pop
pusha
(bad)
push
rcr
shr
sbb
jns
gs
and
mov
ret
xchg
lock
ret
mov
sub
xor
cmp
shr
stc
pop
sahf
scas
mov
enter
out
pusha
xchg
xchg
add
dec
fsub
in
ficom
adc
xor
or
sub
sbb
cmc
jb
scas
scas
mov
add
add
inc
pop
pop
cmp
jecxz
jmp
das
shl
xor
inc
aad
clc
std
dec
cld
mov
call
push
xor
retf
lock
call
inc
adc
sub
jl
and
enter
movs
xlat
xchg
mov
and
mov
mov
rol
mov
out
loopne
div
adc
mov
xlat
or
lods
mov
(bad)
or
jne
js
dec
int3
push
jmp
repnz
jmp
retf
retf
inc
dec
xor
cmp
inc
fucomip
mov
adc
mov
test
jns
(bad)
(bad)
fistp
sub
jbe
cwde
xlat
sbb
sbb
mov
fs
inc
call
leave
jnp
inc
jo
lea
and
push
add
pop
pop
fs
fdiv
adc
rcl
and
cmp
sub
icebp
fdiv
movs
inc
call
in
sbb
(bad)
sbb
movs
cld
arpl
push
popa
lock
mov
mov
(bad)
addr16
jp
dec
leave
and
js
add
adc
adc
into
mov
mov
not
dec
xor
and
and
ret
out
add
mov
pop
ficom
dec
fsub
pop
mov
xchg
sub
sub
mov
pop
and
fisttp
mov
scas
push
cli
push
retf
and
sbb
stc
pop
xlat
dec
push
adc
mov
icebp
mov
mov
loope
inc
shl
mov
imul
push
clc
xor
jge
shl
sub
mov
push
jl
loope
xor
fnstenv
fild
fiadd
int
dec
lock
xor
gs
hlt
movs
push
push
out
dec
inc
(bad)
xlat
mov
sar
pop
cmps
out
mov
out
std
xchg
and
out
mov
aaa
nop
loope
add
mov
ror
jb
pop
pop
mov
adc
stos
out
das
mov
js
lds
jne
leave
retf
dec
out
loopne
pop
cmp
test
out
sbb
test
push
xchg
mov
sar
cwde
cmp
sbb
rol
jp
or
fld
and
jnp
xor
adc
es
std
push
pushf
test
or
repz
sub
mov
inc
xchg
and
push
jae
cmp
add
xor
adc
or
cs
xchg
aaa
cdq
pop
mov
(bad)
xlat
cs
add
shl
mov
inc
mov
push
cmp
(bad)
cwde
jp
lea
jae
and
mov
cld
std
mov
jg
dec
test
iretw
std
xor
fisubr
inc
js
mov
dec
jno
push
jge
push
in
jae
js
lods
and
sbb
out
test
sbb
movs
aaa
fchs
jle
mov
adc
test
fmul
shl
cmps
or
sbb
out
sbb
clc
and
fldenv
shr
(bad)
jp
sub
pop
emms
cmps
out
mov
loop
ins
mov
dec
add
out
in
mov
jnp
ficom
mov
lods
cmp
jmp
fs
cli
je
mov
jne
jecxz
cmps
cdq
sbb
pop
mov
push
sar
mov
in
sbb
stos
cmp
add
mov
sub
push
pop
mov
sbb
not
ret
xor
rcl
ret
stc
add
add
outs
mov
sti
out
add
popa
movs
arpl
pop
cmps
push
xor
jae
test
mov
inc
leave
ja
out
mov
mov
(bad)
stc
push
dec
fcmovu
bound
or
xor
push
pop
jbe
lgs
jmp
movs
mul
cwde
push
neg
inc
push
imul
mov
into
push
mov
pop
mov
sub
sbb
test
outs
int
sbb
add
js
and
dec
scas
test
sbb
sbb
and
sahf
aas
mov
xchg
lods
mov
mov
es
outs
loop
div
movs
pop
pop
mov
loop
out
or
fs
je
add
retf
movs
mov
sbb
fiadd
leave
enter
adc
cmp
inc
pop
or
iret
mov
icebp
cli
xchg
cmps
test
pop
inc
jmp
dec
push
mov
sti
mov
jns
daa
retf
test
out
and
es
shl
sub
aam
inc
pop
xchg
and
xchg
(bad)
out
into
xchg
ins
sbb
adc
jl
push
add
xor
ins
jb
cmp
ins
inc
retf
lock
cmp
mov
adc
push
xchg
push
or
or
(bad)
mov
sahf
mov
les
push
(bad)
sar
cmp
sub
(bad)
mov
mov
js
pop
push
retf
jge
loopne
in
in
in
sbb
rol
sbb
mov
mov
popf
movs
sub
dec
in
push
into
inc
fmul
les
mov
xchg
fdivr
sub
sbb
aad
dec
sbb
movs
dec
or
nop
push
xchg
dec
xor
mov
jmp
sbb
push
pop
mov
dec
fisubr
stos
mov
xchg
mov
js
(bad)
jecxz
ret
push
iret
push
ins
jp
cld
stos
or
(bad)
or
enter
adc
mov
stos
push
call
out
pop
rol
out
cwde
scas
mov
mov
dec
sub
jmp
push
mov
sti
fs
fisttp
stos
dec
cld
out
imul
xchg
shr
sbb
les
sbb
stos
sti
inc
mov
test
push
imul
cs
pop
xchg
arpl
addr16
imul
sbb
xchg
mov
repz
push
mov
inc
pop
adc
ins
daa
sbb
inc
cmc
rcr
xor
cli
les
mov
fsub
gs
lahf
ins
ds
ds
std
mov
jle
cmp
leave
xlat
gs
and
dec
std
cmc
imul
or
mov
xor
cdq
aad
mov
mov
mov
test
(bad)
mov
cmps
test
jae
loope
shl
lock
std
dec
jno
mov
or
add
(bad)
pop
ins
outs
jne
mov
(bad)
jmp
sub
aaa
jo
out
ret
jmp
push
out
jns
inc
push
lock
cmp
ret
sbb
xor
cli
pop
aad
ins
mov
mov
repz
scas
mov
ins
jmp
mov
mov
leave
pushf
mov
cmp
clc
scas
push
cmc
int
add
xor
add
xchg
xchg
adc
movs
lea
in
or
cli
test
or
shl
push
sub
into
and
mov
sahf
icebp
and
int
fstp
(bad)
cld
cmps
lea
adc
jns
inc
pop
popa
in
adc
cli
lea
das
pop
sbb
mov
mov
or
inc
inc
and
and
pop
push
sub
icebp
mov
fcmovnu
(bad)
dec
adc
iret
and
into
in
mov
mov
jg
popa
and
ret
jg
jmp
stos
xor
mov
or
outs
mov
movs
ins
jmp
movs
xor
add
std
mov
fcom
xor
lds
sbb
rcr
arpl
fcomp
jl
pop
jne
shr
fld
inc
pusha
pop
pop
mov
fisub
jg
dec
inc
fild
ret
or
dec
pop
xchg
push
or
lods
cli
loope
leave
push
test
mov
mov
dec
imul
rcr
mov
jecxz
or
jg
les
icebp
or
test
out
xchg
clc
adc
adc
push
adc
fwait
pushf
std
stos
fwait
mov
outs
enter
adc
push
push
adc
sbb
push
sub
jns
xor
js
ds
dec
in
cli
mov
dec
bound
daa
mov
sbb
pop
mov
stos
xchg
repnz
pop
aad
mov
fimul
shr
cmc
lods
movs
inc
(bad)
int
aaa
jns
lods
inc
mov
imul
adc
sbb
scas
inc
or
arpl
sub
hlt
mov
fstp
mov
in
and
sub
push
xor
pop
add
icebp
mov
enter
outs
inc
push
or
int
adc
or
pop
leave
sbb
call
xchg
jmp
movs
loop
push
cmp
dec
sar
add
(bad)
xor
mov
fsubr
push
(bad)
hlt
sbb
je
inc
inc
mov
popa
inc
loopne
es
retf
rol
lahf
adc
mov
pop
imul
sub
jg
mov
in
shl
(bad)
fstp
scas
movs
xchg
xor
sub
mov
mov
push
add
pop
shl
and
je
add
call
adc
(bad)
cs
push
fld
and
push
cld
xlat
push
and
lods
rcr
inc
ret
retf
push
clc
push
in
add
mov
clc
pop
mov
and
loop
out
mov
lds
dec
xchg
or
jle
fst
(bad)
mov
and
mov
enter
inc
fst
mov
pop
es
leave
cmp
sub
arpl
mov
and
add
nop
mov
sti
pop
lock
mov
jmp
call
fldenv
dec
push
add
or
push
sub
adc
mov
jne
loope
pop
mov
out
mov
mov
loope
pusha
fisub
ins
pop
inc
and
aad
mov
xchg
jmp
inc
sbb
jnp
std
mov
dec
cmp
das
(bad)
sub
jg
push
inc
cmps
out
imul
ror
mov
xchg
pushf
pop
rol
adc
or
xor
add
jae
pop
je
shl
and
rcr
jl
inc
scas
mov
icebp
cwde
xchg
push
cmp
cmp
not
test
imul
fwait
xor
stos
and
push
or
inc
mov
into
jo
xchg
ror
cmp
inc
arpl
mov
mov
test
daa
mov
ror
je
inc
inc
push
inc
pop
and
and
cmp
sub
xor
(bad)
ror
pushf
pop
jne
mov
xchg
sub
jb
xchg
push
and
add
btc
pusha
call
sbb
in
add
add
adc
jne
jns
cmp
sub
arpl
call
mov
jp
shl
push
pop
stos
jno
cmove
adc
outs
xchg
icebp
mov
mov
pusha
shl
test
scas
push
fcomp
lock
call
fcmovbe
shl
bound
mov
and
test
(bad)
movs
add
lods
pop
add
xchg
inc
push
inc
ror
imul
dec
pop
push
scas
or
in
or
sub
xor
add
sub
push
repz
psubd
outs
dec
int
pop
jnp
cmp
ss
inc
popf
aam
mov
or
mov
pop
loope
shr
leave
dec
(bad)
iret
neg
adc
ins
jbe
cmp
fadd
arpl
popf
(bad)
xor
enter
push
mov
or
rcl
sar
pop
test
test
dec
xor
sahf
inc
inc
mov
mov
jg
icebp
les
ret
clc
and
add
and
rcr
sbb
cmp
retf
shl
push
hlt
mov
sar
dec
loope
push
ficom
and
int
fcmovb
sbb
mov
mov
inc
xor
xchg
push
stc
ss
dec
(bad)
push
ffreep
sub
daa
inc
and
inc
shl
fisub
inc
lods
cmp
test
xchg
int3
out
dec
inc
call
sti
hlt
xor
cmp
push
pop
and
ret
pop
cmp
sub
in
enter
push
xor
lods
fidivr
add
dec
adc
pop
icebp
xchg
loope
jne
mov
pop
inc
xrelease
popa
and
call
xchg
leave
push
cmp
jg
xchg
push
and
xor
xchg
call
or
add
push
loope
retf
jae
sub
es
pushf
loopne
mov
popa
(bad)
(bad)
cmp
arpl
mov
jo
(bad)
mov
jnp
je
mov
push
xchg
int
js
push
into
pop
mov
movs
mov
loope
mov
pop
xor
push
mov
call
pop
shl
mov
aam
sub
jmp
pop
xchg
push
push
mov
mov
sahf
fild
test
fidiv
dec
mov
mov
sub
mov
sbb
dec
xchg
push
mov
sub
sti
or
mov
sub
sub
sbb
jae
cmp
aaa
pusha
pop
sub
lahf
xor
push
(bad)
aam
and
inc
jnp
pop
push
xchg
xor
sbb
sbb
sbb
inc
adc
dec
mov
jae
dec
inc
shl
or
push
sbb
cmp
xchg
call
repz
fbld
sbb
xor
mov
es
and
cs
jne
push
jl
dec
and
cwde
mov
scas
rol
mov
add
fcom
retf
adc
mov
xor
add
sub
sub
shl
xchg
push
aam
xchg
movs
add
call
dec
std
repnz
lds
push
pop
mov
adc
pusha
sub
pop
inc
push
dec
in
loopne
sub
mov
in
neg
sbb
fadd
clc
mov
lahf
and
loope
mov
inc
in
scas
jecxz
jns
xor
mov
dec
mov
icebp
rcl
mov
mov
ds
mov
inc
jl
mov
xchg
xchg
add
dec
shl
adc
xor
(bad)
cld
scas
add
jmp
sar
pushf
sbb
xchg
mov
mov
xchg
bound
push
add
icebp
lods
xchg
pop
jbe
push
sbb
adc
cmp
mov
or
retf
xor
mov
pop
test
mov
and
mov
push
or
loopne
sbb
(bad)
jl
fnsave
or
or
(bad)
enter
ins
push
pop
dec
sbb
mov
cdq
mov
mul
cli
jne
sbb
jbe
les
(bad)
inc
pop
fwait
adc
out
ins
add
jmp
out
xchg
or
out
int
or
xor
sub
xchg
or
adc
pushf
mov
shl
mov
loope
jecxz
in
popf
add
mov
cmp
int
and
hlt
push
and
rcl
add
out
jb
inc
adc
pusha
xor
xchg
mov
or
cdq
iret
sub
mov
in
cdq
mov
mov
mov
pop
sbb
ja
pusha
outs
adc
mov
mov
shl
mov
lods
push
inc
jno
or
int3
scas
sbb
lahf
or
js
add
jb
pop
xor
(bad)
adc
jle
shr
dec
inc
and
pop
not
cmp
lea
dec
and
sub
in
xchg
jae
int3
inc
loop
and
imul
jns
popa
push
in
or
setb
cwde
test
loope
mov
mov
inc
mov
in
retf
sub
jmp
out
mov
xor
add
add
test
fisttp
push
into
jbe
int
scas
daa
repnz
aaa
test
mov
in
shr
loopne
add
dec
scas
add
ret
sub
imul
push
sidtd
mov
imul
ret
sbb
dec
mov
push
retf
mov
add
std
lds
xor
fucom
test
idiv
(bad)
fcom
out
xchg
inc
dec
dec
mov
sub
in
stc
jge
aas
push
push
dec
cmp
xchg
arpl
adc
mov
and
clc
xchg
in
out
xor
push
out
lods
rcl
push
jns
push
movs
pop
test
and
pop
jl
pop
sub
and
sti
push
jmp
cli
imul
out
xor
mov
retf
jae
push
rcl
xchg
retf
shr
bound
(bad)
aaa
call
add
mov
cmps
aam
pop
enter
(bad)
jo
ret
add
mov
test
stc
ret
ret
jle
mov
mov
xor
inc
inc
into
call
aas
pushf
pop
jp
mov
cmp
jg
cmc
inc
jnp
jae
(bad)
dec
movs
jmp
mov
jg
loope
push
pusha
sub
pop
add
xor
lods
xchg
int
retf
dec
imul
mov
xchg
mov
ret
aam
sbb
fs
in
fs
movs
mov
iret
dec
popf
idiv
into
add
lahf
fwait
sub
sahf
shr
enter
mov
imul
popf
test
xchg
clc
sbb
mov
das
adc
mov
jns
ins
addr16
lods
icebp
mov
or
les
pusha
pusha
jmp
cmp
ror
dec
outs
int3
not
or
xchg
sub
mov
push
mov
add
xor
adc
cmp
or
mov
xor
cs
adc
mov
(bad)
es
sbb
stc
mov
jae
or
out
lods
push
bound
stc
jecxz
neg
sbb
pop
dec
sbb
out
push
cmp
add
fcom
arpl
push
int3
or
jns
adc
imul
mov
es
jnp
inc
or
push
sbb
pop
movs
jbe
lock
jl
sub
pop
push
dec
movs
std
inc
cmp
jl
enter
mov
lock
inc
lock
nop
xchg
mov
mov
nop
rcr
(bad)
aaa
scas
mov
mov
adc
ds
push
ror
lahf
sbb
mov
pop
test
jno
icebp
(bad)
and
jmp
retf
cmp
sbb
or
std
sbb
or
mov
sti
inc
ret
adc
loope
cmps
xchg
or
jmp
leave
ror
(bad)
mov
call
dec
fld
aas
and
dec
push
les
sub
repnz
mov
sub
enter
xchg
xchg
adc
test
cli
pop
(bad)
dec
loop
and
push
push
movs
aad
sbb
bound
jle
pop
sub
addr16
xchg
cli
mov
js
retf
daa
inc
rcl
popf
dec
mov
cs
dec
stos
mov
test
sahf
push
scas
add
push
dec
leave
xor
pop
int3
call
fidiv
adc
in
(bad)
mov
out
imul
pop
adc
daa
cdq
out
cld
fwait
cs
aad
sub
loopne
jmp
pop
call
sub
and
test
pop
fsub
lea
inc
xchg
aas
sar
nop
aas
jmp
sbb
call
aam
call
mov
sub
or
cli
mov
div
cmp
ja
lahf
(bad)
aas
xor
imul
loope
dec
popf
or
rcr
and
(bad)
lods
push
(bad)
aam
jmp
es
les
imul
fwait
out
fs
ins
enter
cmp
push
push
repnz
movs
fisub
in
jnp
out
shr
test
mov
add
lds
xchg
int3
lock
adc
outs
add
pop
jecxz
pop
aas
dec
push
xchg
push
pop
fdivr
fwait
sar
popf
mov
jg
mov
psllq
test
clc
aaa
push
xchg
add
mov
mov
xor
loop
and
inc
mov
push
call
cmp
cld
in
(bad)
adc
adc
xchg
movs
pop
and
mov
repnz
mov
push
inc
push
enter
mov
mov
jns
fldcw
fstp
mov
lock
push
xchg
pop
dec
pop
sbb
adc
cmp
mov
outs
in
sub
call
scas
enter
fisttp
imul
or
cmc
mov
mov
xlat
cmp
int3
dec
push
dec
mov
ds
add
ins
push
mov
popa
sahf
push
or
aaa
jmp
jo
dec
push
in
popf
loop
cmc
stc
mov
cmc
cwde
int
jl
scas
scas
pushf
sbb
inc
adc
rcl
imul
(bad)
enter
enter
mov
xchg
adc
test
shl
inc
jns
add
test
iret
mov
mov
in
bnd
cmp
jbe
inc
cmp
call
or
adc
adc
(bad)
aad
jl
in
inc
(bad)
in
adc
xor
dec
adc
mov
adc
jns
in
jae
push
jne
call
cmps
popf
or
outs
fcom
add
in
int3
ret
bswap
and
mov
jle
xor
ds
pop
mov
mov
iret
gs
in
xchg
cmp
inc
jl
jns
test
nop
loope
jb
pop
add
cwde
pop
dec
ret
mov
jmp
push
lahf
retf
xor
and
sub
or
int
inc
xchg
inc
push
test
fdiv
sbb
inc
sub
(bad)
ds
pop
fst
(bad)
sbb
out
outs
or
imul
adc
dec
out
xor
or
leave
dec
loop
jno
pop
int
or
pusha
add
dec
or
mov
pop
cmps
nop
cmps
pusha
jmp
adc
outs
push
or
lds
out
or
popa
data16
cmp
imul
ret
mov
pop
adc
sbb
xor
pop
fstp
iret
jne
cmp
inc
inc
fstp
repz
fidiv
neg
mov
mov
cmp
icebp
repz
(bad)
in
je
jne
stos
fwait
mov
xor
push
lea
aam
es
pop
jg
or
ins
or
sbb
cmp
inc
popf
nop
je
out
gs
push
jbe
jecxz
test
sbb
and
mov
cmps
pushf
leave
add
adc
cwde
lahf
dec
test
js
xchg
inc
pop
lods
or
les
mov
xor
cmp
mov
lea
mov
cmp
mov
mov
ins
retf
pop
imul
ins
icebp
mov
out
cmp
jmp
dec
shl
dec
jno
jnp
sar
pop
sbb
and
popw
test
adc
jae
pop
ja
xchg
mov
and
mov
xchg
cmps
imul
lods
ror
ins
dec
xor
mov
popf
pushf
pusha
out
jbe
mov
popa
cmp
mov
test
or
xor
icebp
fsubp
stos
or
les
hlt
cmps
test
popf
mov
aas
das
lods
mov
adc
mov
idiv
sub
cmp
mov
loopne
mov
push
int
pusha
push
ret
in
popa
jmp
xor
xlat
fwait
lods
shr
popf
sub
fidivr
iret
inc
push
arpl
xor
stos
aad
ud2
jo
daa
into
add
pop
mov
imul
pop
sti
or
stos
inc
cmp
cmp
mov
(bad)
jbe
cmc
cwde
xchg
jge
mov
push
gs
xor
dec
cmp
mov
ds
xchg
loope
fcomp
repnz
gs
into
hlt
and
mov
sahf
retf
test
cdq
std
cmp
pop
jmp
hlt
xchg
out
sub
int3
ds
adc
inc
sub
xchg
int3
add
ins
mov
outs
sti
mov
inc
cmc
js
stos
sbb
push
cmp
push
ret
outs
mov
leave
lock
lds
pop
and
jno
int
imul
(bad)
arpl
jp
inc
lahf
mov
mov
mov
fs
fs
push
or
cmp
or
aaa
cli
mov
add
xchg
cs
add
mov
vhaddpd
mov
jmp
sbb
mov
movs
lock
pop
or
xchg
popf
jg
or
jmp
inc
imul
mov
sub
(bad)
jns
jmp
cmp
aas
push
push
mov
xchg
icebp
(bad)
sbb
test
mov
mov
jo
mov
out
popf
push
fistp
rcr
adc
jg
xor
(bad)
mov
mov
dec
out
cmps
jp
and
xchg
imul
frstor
xor
dec
out
mov
xchg
mov
aam
cmc
bound
cli
adc
hlt
popf
ret
popa
adc
retf
bound
pushf
sti
sub
add
mov
lahf
inc
xchg
mov
out
iret
outs
pop
inc
clc
dec
inc
pop
call
xor
or
sahf
mov
add
and
not
stos
std
int
and
mov
mov
data16
inc
xor
outs
stos
push
out
mov
pop
jmp
test
push
xor
idiv
shl
or
jmp
outs
ret
mov
pop
push
xchg
shl
or
xchg
repz
scas
pop
fldl2t
mov
in
jp
inc
imul
cmps
test
loopne
pushf
jg
sub
(bad)
push
xchg
pop
push
cmp
or
xchg
pop
popa
fmul
lahf
adc
mov
xchg
xchg
push
stc
and
mov
repz
and
xchg
repnz
mov
cdq
out
jno
inc
add
leave
adc
xlat
jbe
fxch
int
mov
lods
and
cmp
xchg
popf
jno
mov
rcr
fcmovnb
out
in
retf
add
sbb
ret
das
sub
jne
and
es
xchg
movaps
push
add
mov
mov
or
int3
and
fsub
pusha
mov
cmp
icebp
iret
mov
and
test
add
sub
call
pop
ds
loopne
test
in
je
cmp
cmc
aaa
aam
retf
dec
mov
jmp
dec
sub
mov
js
adc
(bad)
mov
daa
lods
arpl
popa
stos
adc
inc
xor
es
scas
test
popa
inc
xchg
or
leave
pop
sbb
retf
xor
cmovl
sbb
aam
xchg
ins
inc
xchg
mov
dec
into
or
adc
ret
push
imul
scas
pop
mov
pusha
or
es
out
ss
retf
inc
push
mov
loopne
add
adc
popf
cdq
into
nop
push
push
add
cmp
sbb
dec
sar
rep
int
adc
aad
cmps
fsubr
jg
or
rcl
mov
scas
into
inc
mov
cld
sub
fdiv
mov
mov
sub
mov
call
adc
ds
jae
xor
out
dec
sbb
mov
call
shl
cmps
xchg
cld
js
xchg
out
rcl
loope
cmps
push
mov
retf
or
call
ror
leave
add
addr16
or
mov
test
cld
sub
add
popf
cmps
mov
inc
adc
inc
or
adc
into
sahf
xchg
xchg
sti
(bad)
jns
inc
mov
pusha
xor
stc
pop
test
ss
mov
loopne
sub
or
jnp
rcr
xor
leave
adc
fist
out
xchg
adc
mov
bound
push
cmp
inc
rcl
lods
push
lds
jp
mov
cli
jle
nop
xor
aad
mov
jl
sbb
cdq
push
mov
sbb
imul
push
sub
outs
popa
xchg
mov
dec
iret
mov
cmps
mov
movs
or
lods
popa
cmps
int
cli
(bad)
pop
ins
fistp
mov
push
or
inc
addr16
mov
jmp
ret
ins
mov
adc
mov
or
inc
mov
mov
bound
jl
add
adc
into
xchg
jecxz
out
mov
cmc
test
cwde
sbb
and
into
dec
gs
iret
cmc
fnstsw
imul
adc
pusha
mov
movs
cmps
icebp
sub
adc
ins
retf
fisubr
mov
push
call
sahf
in
adc
add
cmp
js
xor
enter
leave
addr16
scas
(bad)
repnz
push
mov
push
sub
sub
jns
lahf
jb
sbb
lds
adc
xchg
sbb
fwait
xor
retf
rcl
(bad)
repnz
sahf
mov
lods
mov
int3
mov
or
aam
add
xchg
mov
div
lods
popa
sti
stc
sar
cmc
xchg
leave
jl
or
xchg
inc
xchg
lea
pop
outs
mov
pop
pop
jmp
retf
sub
neg
xchg
cmps
fprem
mov
pop
pop
or
mov
xchg
sti
xchg
inc
mov
sub
cmp
mov
lock
punpckhdq
pop
dec
sub
or
and
jmp
inc
adc
shl
mov
movs
inc
jbe
pop
fwait
and
mov
pop
lock
sti
into
inc
inc
xor
retf
mov
test
nop
les
int
push
push
(bad)
and
or
inc
mov
and
sbb
fmul
je
mov
sbb
mov
adc
vorps
fucomi
pop
adc
jb
ret
ja
sub
stc
inc
sub
push
or
mov
repnz
scas
test
(bad)
pop
sbb
cmp
sbb
inc
outs
int
pop
retf
cmps
pusha
inc
aam
mov
ss
cwde
test
push
fdiv
adc
(bad)
sub
ds
dec
push
adc
ret
sub
inc
(bad)
sbb
sub
push
icebp
into
xchg
sub
cli
push
shr
push
push
or
mov
inc
cld
push
pop
je
lea
pop
adc
pusha
arpl
push
adc
add
hlt
mov
or
add
xchg
pop
mov
mov
xchg
push
scas
in
pop
hlt
repnz
loop
lahf
jmp
in
clc
fist
pop
cmp
cli
call
outs
jae
lods
and
pop
popw
outs
xchg
and
mov
js
out
sbb
mov
adc
int
pop
or
rol
mov
test
in
xchg
dec
pusha
mov
ja
shl
hlt
mov
cwde
ret
(bad)
push
movs
out
stc
sub
fs
cmps
sahf
mov
ret
jp
das
jg
cld
adc
popa
jns
movs
dec
cmp
int
dec
adc
mov
mov
xor
les
(bad)
dec
add
jmp
lock
jle
out
icebp
out
lods
fwait
pop
jg
repz
or
sbb
lods
aas
push
cmp
jp
out
sub
lea
out
fwait
fs
pusha
bound
add
mov
jmp
imul
sub
inc
retf
movs
jae
es
in
fadd
or
pushf
sub
mov
cli
ja
iret
fnsetpm(287
shl
pop
stos
out
lahf
mov
mov
loope
shl
inc
pop
jp
mov
push
aad
fild
xchg
adc
jmp
jle
mov
loop
imul
mov
inc
or
cs
push
add
sbb
loope
dec
pop
xchg
cmp
cmp
mov
adc
mov
and
ror
pop
xor
repz
aas
push
sub
arpl
adc
ret
cld
mov
lods
mov
add
jne
test
push
stos
cmp
les
xor
cmp
int
pusha
dec
push
cli
add
inc
js
mov
pusha
push
scas
cli
loope
sbb
dec
xchg
sbb
arpl
ret
dec
xchg
not
call
out
push
jns
pop
sbb
fld
or
or
cmp
add
test
int3
mov
jmp
jmp
push
lahf
not
mov
xor
or
xor
add
jl
cmp
jg
call
and
push
out
loop
pop
fucomi
das
cmps
daa
ja
rol
ins
(bad)
mov
mov
arpl
cmp
push
outs
cs
adc
add
mov
pop
imul
(bad)
xor
pushf
fiadd
dec
push
rcl
sar
jecxz
scas
pushf
les
sti
lock
sbb
dec
dec
cmc
and
jmp
inc
inc
pop
jbe
add
fldcw
es
shl
xor
int
push
or
and
aam
ds
xor
adc
repz
push
sbb
mov
adc
ret
jp
dec
dec
mov
aam
nop
js
shr
or
xchg
mov
mov
pushf
sbb
scas
mov
cdq
(bad)
(bad)
call
int
mov
ret
mov
mov
cld
sub
mov
imul
popf
repnz
dec
mov
loopne
cdq
adc
xchg
push
bound
inc
mov
jno
inc
mov
mov
inc
sbb
bsf
loop
je
jp
pop
gs
ffree
rol
adc
shl
pop
inc
pop
scas
mov
pop
sbb
nop
stc
push
adc
adc
pop
or
repz
inc
mov
push
or
inc
sbb
and
lods
rcl
inc
cmp
sbb
xlat
jnp
icebp
and
scas
movs
push
push
lods
popf
sub
test
sub
aam
lods
lods
test
xchg
xor
div
sar
das
loop
add
repz
jmp
xchg
lahf
inc
sbb
dec
(bad)
gs
cld
cld
jle
jecxz
retf
ret
sbb
test
js
xchg
jecxz
cmc
xor
pusha
pop
xor
ins
stc
dec
jle
test
xchg
jle
loop
test
or
push
add
in
outs
nop
dec
push
sub
sbb
ja
and
movs
fcomi
cli
mov
inc
xor
fwait
outs
int3
ins
not
repz
popa
cmc
sbb
mov
cmp
movs
xchg
xchg
add
ins
and
mov
xor
rcr
out
inc
jge
outs
in
mov
stos
fistp
bound
sub
icebp
(bad)
iret
ss
lds
fwait
out
pop
imul
rol
cmp
out
jae
sbb
ficomp
xchg
cmp
stos
inc
aad
bound
xchg
movs
(bad)
or
arpl
mov
stc
xor
les
push
add
je
mov
fsub
sahf
sub
cmp
jae
rol
pop
cdq
nop
and
cmp
sbb
mov
ds
hlt
inc
xchg
dec
mov
pop
add
cmp
and
leave
cmp
mov
out
xor
outs
les
sbb
fsub
js
and
imul
out
inc
jmp
mov
cmps
cmp
dec
std
mov
xchg
addr16
xchg
lahf
into
fiadd
mov
int
push
push
cld
sbb
sub
and
add
ins
out
clc
repz
xchg
clc
cli
and
push
fimul
out
xchg
(bad)
inc
loope
push
xor
xchg
inc
leave
leave
je
cmp
(bad)
fucom
dec
inc
int
sub
movs
xchg
xchg
mov
cmp
pop
pop
in
xor
sub
test
jo
xchg
inc
lods
arpl
jno
int3
xchg
mov
pop
pop
in
sbb
out
cli
push
mov
mov
loope
das
jae
cmps
xchg
imul
lods
addr16
xlat
icebp
outs
repz
pop
out
and
sub
sbb
mov
push
sbb
push
das
int3
dec
adc
stos
push
cwde
adc
les
sub
adc
or
call
sahf
scas
xchg
test
outs
arpl
cwde
mov
cmps
pop
jns
iret
pop
ret
repz
shl
(bad)
sbb
ins
mov
int
loope
sub
mov
mov
pop
test
les
mov
push
jnp
dec
push
fucom
push
mov
xor
das
ret
sahf
pop
mov
xchg
push
retw
sub
in
xchg
cmp
pop
out
pop
cmp
mov
test
in
inc
shr
push
mov
cmp
inc
or
ds
cmps
rol
retf
or
outs
and
ret
rol
inc
ins
call
inc
rol
jb
mov
or
xchg
adc
cmp
mov
bswap
mov
js
dec
add
xchg
cmp
mov
and
mov
into
mov
mov
add
cmp
mov
mov
mov
add
popf
ins
out
fwait
and
mov
arpl
scas
pop
pop
and
ret
jecxz
cmp
repnz
iret
mov
add
inc
mov
cmp
dec
dec
in
mov
das
idiv
in
add
mov
dec
gs
stos
out
jecxz
ins
mov
cmp
push
dec
xor
push
ins
and
mov
ins
push
cld
jo
outs
in
mov
xlat
and
lods
cmp
movs
adc
sbb
add
out
mov
stos
jbe
(bad)
lahf
pop
outs
and
mov
pop
(bad)
fs
sub
push
jle
inc
out
mov
xchg
adc
add
add
leave
int3
outs
iret
push
sbb
pop
jmp
add
(bad)
jmp
std
nop
jne
mov
stos
pop
hlt
xchg
adc
add
into
shl
cmp
sar
repnz
add
mov
jle
in
ins
add
stos
mov
shl
mov
rol
pop
test
out
add
sub
xchg
mov
xchg
dec
jbe
pop
lea
call
sar
adc
shl
dec
cs
sub
push
sub
fwait
test
sub
xlat
mov
adc
sbb
mov
test
cs
jmp
(bad)
ja
mov
lea
sbb
fcmovnu
and
push
mov
test
dec
imul
nop
(bad)
repz
retf
cmp
adc
add
sti
adc
and
int3
cmp
add
adc
test
popa
(bad)
mov
pusha
fisttp
add
out
popf
inc
fcomp
inc
test
mov
jo
icebp
enter
xchg
sub
int
dec
arpl
iret
(bad)
xor
adc
(bad)
xor
in
push
imul
jo
icebp
inc
cmc
lock
adc
add
out
push
push
adc
iret
mov
(bad)
movs
inc
push
in
loopne
mov
movs
fist
fistp
jge
xchg
xchg
ror
mov
test
jbe
ja
lock
je
jae
xor
pop
das
leave
cli
xlat
mov
inc
pop
mov
retf
hlt
mov
(bad)
stos
mov
leave
loop
outs
inc
nop
daa
iret
sbb
cwde
(bad)
push
sbb
xchg
iret
cmp
pop
pop
js
dec
add
inc
add
adc
popf
or
and
mov
jns
pop
mov
(bad)
cmps
das
jecxz
sbb
mov
lock
icebp
imul
icebp
add
xor
pop
jge
and
jns
dec
mov
loop
jnp
cmp
jb
daa
adc
adc
pop
inc
sbb
push
(bad)
(bad)
fabs
mov
in
cwde
arpl
pop
xor
data16
pop
xchg
add
sbb
iret
dec
neg
(bad)
clc
sbb
dec
rcl
sub
xchg
and
mov
(bad)
xchg
test
xchg
sub
sahf
lods
aam
add
fild
ret
int3
pop
xchg
shl
pop
(bad)
xchg
mov
(bad)
outs
xchg
cmc
cmc
out
repz
fnsave
retf
aam
pop
ja
or
mov
(bad)
outs
mov
jecxz
cmc
push
aam
retf
sub
lahf
cmps
jecxz
pop
push
sub
lds
cmp
sar
mov
adc
sbb
imul
(bad)
adc
aad
out
mov
mov
xor
imul
xchg
mov
ins
gs
inc
and
push
bound
mov
and
or
lock
or
pop
pop
shl
and
push
fdiv
add
movs
mov
ret
shr
mov
bound
fstcw
jb
pop
sbb
cmp
inc
xor
jnp
pop
(bad)
(bad)
shr
lds
fwait
movs
daa
mov
push
sbb
add
sub
sbb
test
inc
pop
inc
in
test
dec
inc
retf
mov
rcl
(bad)
xchg
test
cs
lock
mov
xchg
jnp
mov
pop
into
jb
sar
out
arpl
scas
(bad)
sar
dec
push
ins
adc
mov
fstp
cwde
shl
popa
inc
ins
sub
imul
jne
and
push
fmul
xchg
mov
shl
fs
mov
and
jmp
pop
enter
push
sub
push
test
push
mov
mov
(bad)
(bad)
push
mov
mov
repnz
push
outs
cmp
sub
jmp
sbb
mov
pusha
mov
jmp
lods
movups
lahf
in
jnp
icebp
adc
mov
neg
imul
mov
mov
cwde
xchg
xchg
mov
retf
mov
loop
retf
or
mov
mov
stos
push
push
cmp
popf
aad
retf
pop
(bad)
call
cmp
sbb
xchg
movs
dec
and
adc
repz
bound
lods
(bad)
push
xor
jne
mov
ror
and
js
cs
cmc
(bad)
retf
data16
jbe
fstp
jne
xchg
push
fdivr
(bad)
adc
cmp
mov
cmp
shl
daa
jae
jo
push
mov
add
dec
cmp
inc
cmps
popa
dec
in
mov
sub
xlat
out
aam
sbb
jb
iret
jno
push
xchg
cmp
loope
in
movhps
ror
sti
sub
sub
stc
mov
pop
jge
inc
stc
fadd
imul
or
jecxz
sbb
mov
push
lea
sbb
pop
cld
pop
ss
add
(bad)
rcr
mov
pop
push
aaa
pop
out
dec
inc
je
hlt
sar
sar
push
call
shr
shr
es
mov
mov
adc
aam
sbb
sbb
xor
enter
pop
bound
int3
popa
mov
cmp
pop
test
mov
std
add
retf
loopne
dec
repz
movs
cdq
je
sbb
add
cli
jb
jg
lahf
outs
inc
lds
mov
fdiv
adc
dec
jo
sar
(bad)
push
(bad)
into
lahf
mov
sti
mov
in
retf
pop
ja
mov
test
bound
mov
inc
and
sbb
push
ret
cs
mov
xor
mov
cmp
mov
pushf
aaa
jp
push
pop
pop
fdivp
adc
jle
mov
adc
xchg
rcl
dec
nop
nop
sar
jmp
mov
aas
(bad)
addr16
mov
cmp
fs
lds
ins
hlt
shl
xchg
add
movs
lods
mov
shl
shr
dec
pop
sahf
call
and
dec
xchg
adc
xchg
mov
pop
les
push
ja
mov
inc
adc
retf
inc
sti
cs
dec
xlat
inc
mov
fs
mov
fmul
mov
ja
out
mov
mov
inc
addr16
push
aad
fnsave
pop
add
retf
(bad)
es
shl
adc
pusha
xchg
pop
jbe
or
fwait
jmp
(bad)
fldenv
stos
js
inc
das
daa
xor
dec
add
bound
sbb
push
jmp
movs
and
lds
cmp
jo
movs
pushf
mov
aad
and
or
shl
sbb
pop
cmp
push
scas
cmps
inc
xchg
sub
pop
mov
pop
xor
mov
inc
pop
and
and
neg
and
out
add
fcomp
or
xlat
cld
jno
or
cmp
call
retf
xchg
lea
pop
cs
dec
inc
xchg
idiv
and
sub
inc
cmp
adc
arpl
jns
retfw
bound
and
test
cmp
inc
xor
aaa
out
in
jb
pop
repz
push
pop
in
cmps
ret
xlat
xchg
pop
(bad)
lea
cmp
sub
mov
xchg
pushf
push
test
shl
fstp
dec
cmc
gs
or
and
sahf
adc
sbb
repnz
mov
cli
sub
sbb
gs
mov
push
xchg
clc
pop
sub
lea
pop
push
mov
mov
mov
(bad)
sbb
aas
sub
test
sbb
gs
xchg
push
sbb
dec
pop
jnp
adc
loope
xor
xchg
leave
scas
push
inc
fld
ins
inc
or
rcr
(bad)
push
fimul
sbb
loopne
lods
ja
int
test
mov
xlat
cdq
test
sub
adc
push
(bad)
stc
jo
es
adc
mov
inc
adc
es
cli
xlat
cdq
fldenv
jmp
ror
mov
sbb
mov
lods
arpl
fwait
jp
xchg
retf
test
xchg
xor
inc
mov
jnp
cmp
mov
nop
add
pop
sbb
fst
cmc
out
lds
pushf
xchg
cmp
mov
iret
hlt
push
cli
mov
hlt
in
stos
pop
scas
test
pop
es
or
pop
xchg
jb
bound
scas
xchg
retf
jge
or
call
xor
fmul
cmp
sbb
repnz
and
mov
call
jmp
and
fcom
sti
and
dec
pop
adc
or
arpl
repz
aas
adc
pop
lods
jo
xchg
mov
lds
add
mov
cmp
aad
lock
and
mov
scas
out
dec
sub
mov
cmp
pusha
jns
xrelease
fdivrp
int3
retf
dec
shl
call
cmps
pop
retf
dec
aaa
adc
jb
push
jo
push
test
mov
not
push
xchg
fadd
jmp
mov
shl
arpl
add
jp
lods
scas
sub
pop
mov
pop
fiadd
or
imul
ins
lds
sbb
arpl
and
inc
repnz
lds
sbb
retf
cmps
dec
xchg
cmc
ins
addr16
cmps
inc
bound
dec
jmp
jae
retf
sub
icebp
inc
retf
gs
arpl
call
and
push
jge
xchg
setge
ficom
movs
ret
in
fxch
inc
mov
or
pop
fs
iret
pop
addr16
pop
cmp
scas
cmc
mov
fsub
iret
push
stos
test
sbb
xor
xor
mov
fstp
mov
pop
jecxz
push
sbb
adc
arpl
add
jns
in
jmp
xor
rcr
fistp
pavgb
aaa
rol
inc
mov
fwait
mov
mov
fisubr
ins
(bad)
iret
mov
jbe
stos
inc
push
jno
outs
mov
xlat
repz
dec
push
in
dec
xchg
xor
stos
push
out
out
rol
aad
mov
pop
mov
or
xchg
popf
mov
xor
(bad)
xor
daa
lds
xchg
fsubr
xchg
je
ja
push
jmp
mov
cld
mov
adc
or
dec
pushf
pushf
sub
push
jne
adc
cmps
cdq
xchg
pushf
scas
lods
mov
(bad)
enter
cmps
and
pop
dec
and
movs
arpl
inc
or
aad
add
cld
xor
cmp
mov
pop
xor
cli
mov
shr
xchg
jge
ror
ja
jmp
lods
ret
fiadd
aam
dec
ret
sbb
push
scas
call
xlat
test
push
xchg
cs
adc
out
movs
bound
in
cld
or
add
mov
hlt
scas
popf
cmps
repnz
adc
mov
mov
test
aas
daa
lods
mov
or
adc
xchg
ds
stos
test
jmp
in
rcr
adc
xchg
shl
or
and
push
xor
push
dec
movsx
jmp
aam
mov
dec
mov
and
in
stc
fs
lods
lods
retf
mov
lods
daa
jg
mov
jbe
scas
inc
jne
or
iret
(bad)
test
imul
rol
js
out
jmp
ja
jl
lods
inc
(bad)
jnp
shr
sub
mov
sub
mov
xchg
es
sub
stos
push
in
push
cmp
mov
xor
jnp
(bad)
ror
mov
data16
jbe
push
xor
dec
push
std
jb
push
scas
lds
es
(bad)
shr
int
mov
cmp
cmp
aas
bts
push
sbb
inc
add
sti
in
xchg
ror
lock
mov
add
in
mov
fs
retf
mov
cld
mov
inc
dec
retf
popa
cmps
jmp
pop
dec
pushf
mov
jo
sub
mov
inc
mov
clc
stc
cld
sbb
cmc
ss
sub
mov
aam
adc
inc
imul
inc
cdq
out
mov
xchg
rcr
xor
pusha
mov
ss
jecxz
imul
idiv
sub
aam
ret
fimul
cmp
(bad)
out
fistp
adc
jg
jmp
jg
xchg
fisttp
pushf
add
lds
(bad)
cmp
or
inc
repz
int3
scas
pop
mov
adc
test
xor
jge
pop
dec
enter
rcr
and
and
test
out
out
jnp
(bad)
scas
fdivr
cmp
pop
div
arpl
jmp
shl
mov
add
add
add
sti
mov
arpl
push
jb
gs
aas
imul
loopne
adc
(bad)
loope
jmp
adc
dec
ret
imul
mov
cdq
mov
outs
mov
inc
cmp
sbb
mov
sahf
jmp
xor
or
adc
and
es
sar
jge
test
data16
xchg
inc
cmp
jg
cli
(bad)
cli
leave
dec
push
xor
inc
jnp
xor
sbb
int
(bad)
and
jb
data16
rcr
cmp
mov
push
ret
or
mov
mov
mov
ss
aaa
ffreep
pop
or
cmp
lea
jno
push
sub
add
mov
jecxz
idiv
jo
cmc
mov
mov
cmp
cmc
sub
test
fisttp
sbb
jo
loope
cmc
ret
out
stc
jbe
gs
sbb
leave
jns
cwde
adc
clc
outs
cmp
fsubr
adc
mov
push
div
or
sub
sub
or
repz
gs
mov
inc
xlat
mov
push
jge
push
sar
adc
lock
xor
cmp
mov
push
xchg
cmc
push
ja
cmps
retf
jl
sbb
(bad)
sbb
cmc
leave
xchg
xor
mov
mov
jbe
mov
leave
jp
adc
inc
fsubr
mov
add
dec
lahf
fcmovb
or
test
fimul
ja
sub
addr16
cmp
pusha
mov
push
push
adc
jno
sti
rcl
pop
ret
and
mov
fnsave
cwde
or
ret
cmp
xchg
add
lahf
mov
clc
fdivr
inc
fnsave
nop
push
hlt
lds
bound
mov
xlat
adc
retf
out
movs
faddp
in
mov
retf
sub
(bad)
mov
jmp
pop
xchg
pop
cli
retf
retf
neg
in
mov
std
(bad)
lock
fwait
lods
adc
push
fisttp
jge
push
push
cmps
lahf
add
lods
or
pop
lods
pop
and
jno
pop
inc
pushf
xor
loop
xor
idiv
lods
inc
neg
mov
jge
xchg
iret
jg
movs
cli
inc
fwait
call
(bad)
imul
jnp
jmp
inc
mov
test
loop
ss
inc
sub
sbb
push
aam
dec
and
ja
jo
cmps
adc
mov
scas
and
and
mov
out
(bad)
cld
adc
add
lock
aam
or
lods
pop
stc
xor
retf
(bad)
shl
add
mov
nop
fldl2t
or
rcl
mov
xor
mov
adc
mov
mov
inc
mov
and
mov
enter
mov
(bad)
test
and
push
fnop
dec
add
mov
pop
add
and
mov
shr
ror
sbb
add
jmp
ja
outs
cmp
popa
gs
adc
cmc
sub
mov
adc
dec
(bad)
sbb
sub
mov
pop
iret
loope
mov
xor
adc
add
push
addr16
cmp
dec
or
mov
daa
fs
sub
ds
aas
dec
call
test
mov
fld
test
sub
retf
dec
pop
jp
shr
or
repnz
in
pop
scas
pop
mov
call
xchg
xchg
sti
adc
sbb
cmps
rcl
pop
out
loop
dec
xchg
add
lds
xchg
sbb
lods
jb
mov
add
sahf
adc
shr
add
xchg
lds
pop
dec
mov
inc
push
aad
inc
ret
xchg
inc
and
scas
cmp
add
jmp
pusha
mov
clc
jp
add
fucom
adc
loopne
cmp
xchg
push
(bad)
push
dec
push
shl
push
mov
push
leave
ins
sub
lods
into
bound
sbb
call
push
push
xor
into
jne
pop
inc
cmp
in
ins
adc
cmps
rcl
(bad)
loop
or
cdq
jmp
clc
sbb
inc
jno
push
sahf
popa
call
jg
bound
push
out
shl
pop
sbb
or
xchg
mov
mov
inc
cmp
jg
mov
imul
inc
clc
push
rcr
call
iret
in
sub
mov
push
sub
jmp
jmp
sahf
ins
pop
shl
rol
(bad)
mov
cmp
and
and
mov
mov
test
and
ret
dec
push
sbb
pop
lds
cmp
jno
mul
daa
pop
lahf
leave
add
inc
in
adc
imul
jmp
jo
adc
test
jo
xchg
ret
stos
mov
sbb
ins
retf
xchg
shl
retf
sub
mov
mov
cmp
pop
fcmovnb
or
ficomp
jno
mov
cmp
nop
(bad)
push
xchg
sbb
cmps
jmp
xchg
or
jo
cwde
fisubr
leave
frstor
dec
test
inc
push
cmp
fs
gs
test
mov
shr
scas
push
mov
out
xor
cmps
pop
(bad)
iret
jne
fnstsw
inc
pop
add
inc
add
mov
sub
xlat
add
cmps
neg
loopne
out
sti
ins
(bad)
adc
outs
not
loope
push
and
xor
sub
(bad)
mov
lods
and
or
mov
dec
je
sbb
jnp
jle
movs
fsubr
push
fadd
adc
jmp
test
jge
adc
mov
(bad)
sub
ins
mov
add
and
adc
mov
popa
mov
mov
fld
(bad)
cmp
into
dec
inc
shl
mov
mov
or
cmp
xchg
repz
pop
jb
adc
xchg
fdivr
xor
xchg
lds
lock
add
cmps
sahf
push
push
add
ds
stos
out
fiadd
test
mov
dec
pop
cmp
dec
test
lds
or
push
cmps
cmp
dec
and
in
mov
popf
inc
into
xor
fmul
adc
inc
cld
push
fstp
sub
jmp
lods
in
pop
mov
loopne
push
dec
adc
push
std
adc
pushf
lahf
push
or
cmps
jns
imul
push
push
add
xchg
push
sub
cmp
push
sbb
mov
pusha
nop
jbe
shl
jg
sub
push
mov
mov
mov
mov
fsub
addr16
mov
push
cmp
mov
retf
inc
(bad)
idiv
xor
mov
cmps
out
push
xchg
jmp
push
aaa
rcl
hlt
fiadd
push
arpl
test
dec
dec
pop
scas
(bad)
nop
jns
inc
mov
sahf
cmp
mov
jo
popa
ret
jecxz
dec
adc
mov
add
loop
sti
xchg
leave
push
jmp
pusha
leave
sahf
popf
leave
daa
xor
sti
mov
outs
jmp
stos
push
xchg
fist
fsubr
outs
dec
inc
in
cdq
loope
cwde
cmc
mov
fcom
sahf
adc
loopne
loope
ret
or
add
stos
int3
mov
mov
ror
xor
and
and
or
je
ret
and
imul
leave
fsubr
jnp
lods
and
add
mov
lahf
lods
adc
out
mov
dec
push
dec
jbe
fnstenv
mov
(bad)
clc
mov
ret
out
arpl
push
movs
xor
jle
out
inc
ins
xchg
ins
call
jp
inc
ja
sahf
test
dec
call
aad
pop
jb
clc
and
push
dec
push
lds
inc
fild
pop
psubusw
push
dec
hlt
or
lahf
or
ret
adc
sti
int
je
aad
jle
fwait
ret
clc
imul
push
xor
mov
inc
mov
xchg
clc
ss
cmps
loope
das
loop
icebp
shl
(bad)
or
hlt
inc
or
or
jnp
sti
or
cmp
push
mov
xchg
je
mov
jae
stos
push
mov
xchg
xor
aaa
mov
pop
sub
dec
lea
push
xchg
lds
xor
jns
pusha
sbb
adc
pop
popa
shr
out
push
sti
inc
jecxz
add
push
jbe
or
imul
xchg
push
loop
in
add
retf
test
iret
mov
jmp
bnd
aas
push
or
jno
cdq
clc
inc
jge
mov
fld
in
xor
adc
shr
movs
fcompp
cmp
ins
lds
mov
and
jge
sub
jg
xchg
into
and
mov
popf
pop
mov
das
mov
sub
xchg
hlt
frstor
sbb
in
sbb
push
pushw
aam
lock
mov
hlt
pushf
mov
outs
xchg
mov
loopne
dec
pop
mov
arpl
dec
les
out
ins
mov
ins
fwait
in
sub
or
aaa
imul
mov
test
and
mov
int
sub
xor
cdq
mov
dec
xchg
mov
mov
rcr
inc
xchg
jae
push
add
out
cdq
outs
push
dec
fcomp
xor
mov
xchg
jle
push
or
mov
out
popa
push
js
fcomp
push
imul
aad
fimul
or
cmp
in
or
mov
jl
retf
mov
xchg
mov
sub
stos
pusha
dec
je
add
inc
cmc
mov
shl
dec
ja
cmps
and
sub
cld
data16
out
mov
ret
shl
mov
jb
and
cmps
dec
(bad)
dec
mov
in
hlt
repz
dec
aas
xor
pushf
jo
nop
dec
mov
jg
aad
lahf
loope
dec
and
xchg
(bad)
stc
and
adc
test
mov
xor
mov
icebp
jge
mov
addr16
arpl
sub
clc
aad
jecxz
push
inc
pop
sbb
(bad)
outs
push
fild
jl
sbb
or
dec
sub
cmps
xchg
loope
icebp
adc
jae
aaa
mov
push
mov
pop
cmps
xchg
mov
call
cmp
xor
gs
sbb
cmc
imul
lds
inc
ret
ficom
pop
fadd
pop
movs
cmp
movs
xchg
jo
in
dec
xor
div
mov
dec
push
or
sbb
mov
not
test
inc
cmp
std
xchg
ds
add
jbe
fisttp
leave
cld
mov
outs
mov
test
iret
mov
adc
in
mov
sub
mov
repnz
jmp
push
inc
fwait
sbb
ss
add
or
lock
mov
add
mov
outs
mov
in
out
push
cmps
mov
xchg
ins
maxps
push
in
inc
pop
loope
or
dec
ds
lahf
gs
xchg
xor
mov
(bad)
neg
push
stos
push
or
inc
int3
mov
and
aam
and
push
icebp
xor
sbb
scas
sbb
dec
xor
arpl
test
jns
or
xchg
add
ret
pop
outs
ror
push
nop
cs
cmp
aas
cmps
out
add
(bad)
(bad)
xor
xor
jnp
dec
js
imul
mov
pusha
nop
es
cmp
mov
add
jnp
xchg
ficomp
push
sub
shr
xor
xchg
and
cmp
adc
push
xchg
enter
nop
dec
and
mov
xor
call
(bad)
sub
sub
mov
loop
aaa
mov
push
ins
xchg
pop
pop
xchg
xchg
das
or
sub
jg
inc
mov
push
sbb
dec
inc
or
loope
or
cmp
les
in
mov
call
(bad)
jp
psllq
mov
out
test
jae
add
sub
jl
mov
(bad)
daa
cmp
mov
test
pop
loopne
in
cs
dec
je
stos
push
das
outs
pop
loopne
adc
push
dec
es
les
xor
xor
sub
mov
(bad)
mov
xlat
test
add
std
add
push
sbb
xor
mov
mov
sub
shr
cmps
mov
stc
leave
push
jae
and
pop
(bad)
mov
cmp
icebp
ret
jne
xchg
or
xchg
adc
ss
xlat
sti
outs
jmp
sahf
xor
hlt
cld
xchg
or
hlt
test
xchg
or
sti
pop
test
sar
frstor
loopne
es
push
std
sub
pop
stc
repnz
push
xchg
jmp
sbb
mov
xchg
push
inc
movs
mov
inc
cld
clc
scas
(bad)
les
imul
pop
and
add
icebp
sub
cmp
xor
cmp
out
jl
or
pcmpgtd
cmp
cmp
inc
inc
int3
dec
pop
ds
xor
test
and
xor
and
stos
(bad)
or
xor
add
or
add
adc
fwait
dec
daa
push
mov
add
cs
and
mov
bound
dec
or
push
leave
jnp
xchg
retf
adc
stc
les
mov
out
fwait
(bad)
sub
ins
ret
lods
movs
add
(bad)
mov
sahf
or
sub
std
dec
dec
xchg
or
mov
add
inc
dec
inc
add
mov
mov
or
sub
xor
hlt
cmp
(bad)
add
fsubr
popa
out
pop
mov
ror
int
sbb
jae
test
cmp
add
loopne
xchg
es
mov
jno
loopne
movs
movs
test
dec
jae
out
sbb
aam
fisttp
into
jp
aaa
pop
js
adc
dec
bound
lods
adc
sti
out
cwde
js
dec
les
test
sub
push
or
(bad)
inc
imul
movs
xchg
dec
aam
jbe
(bad)
fcmovnu
add
outs
and
dec
jmp
inc
das
test
shr
out
repz
xchg
fistp
pushw
xlat
test
ds
aaa
jmp
jp
gs
js
mov
stos
and
int
sahf
cdq
imul
jg
(bad)
aad
mov
inc
sub
pop
jae
sub
std
and
out
mov
push
enter
fsubr
dec
mov
inc
(bad)
pop
dec
jbe
std
jle
enter
pushw
inc
cmp
daa
lds
movlps
imul
xor
jae
sbb
aaa
movs
adc
fmul
mov
imul
or
dec
sub
fs
nop
retf
xchg
inc
mov
jae
ret
test
mov
call
rcl
iret
psubusw
call
sbb
jle
and
outs
pop
iret
sub
movs
clc
repnz
and
mov
dec
iret
cmp
xchg
test
push
add
retf
dec
or
xor
mov
loopne
xlat
and
imul
lea
mov
xor
pop
lods
sti
lea
jl
push
adc
cli
stos
cmp
or
test
pop
adc
pushf
cld
fld
scas
cld
pop
cmc
adc
or
(bad)
div
mov
jne
out
cmps
xor
adc
cmp
mov
jns
dec
add
ss
mov
xlat
(bad)
mov
pop
mov
lds
frndint
mov
idiv
xor
retf
fs
dec
and
sbb
test
addr16
mov
or
or
mov
ds
hlt
mov
and
jle
pusha
inc
jmp
jae
pusha
sub
push
out
mov
xor
jb
das
lock
cmp
add
jl
push
lods
lds
pop
cwde
push
lock
jo
inc
push
int
in
pop
mov
dec
pop
jo
shl
lods
in
fisub
jnp
push
or
repnz
jmp
frstor
jecxz
sahf
xor
rcl
and
mov
nop
jno
add
(bad)
xor
push
inc
popf
xor
add
inc
adc
mov
xchg
lea
pop
shr
test
pop
test
cmp
retf
ja
out
push
in
jnp
jmp
fcom
sub
xchg
in
sub
lods
cmp
adc
mov
cmp
mov
add
cld
ret
jns
add
add
in
stos
cmps
xor
dec
ret
clc
call
mov
mov
inc
lea
mov
mov
dec
jb
dec
cs
(bad)
dec
ins
push
xchg
add
pop
arpl
pop
das
stos
push
jb
cmp
ins
ret
call
mov
sbb
adc
push
push
inc
inc
mul
dec
test
(bad)
cmp
push
and
ret
nop
(bad)
std
test
movd
stos
xchg
sysenter
(bad)
pop
ds
shr
dec
mov
sub
mov
xchg
jg
shl
dec
inc
out
xor
ss
xchg
pop
cmp
into
int3
jl
pop
pop
iret
and
sub
xchg
push
push
(bad)
in
stos
in
and
sub
call
daa
or
repnz
mov
mov
jnp
xor
fild
cmp
cmp
inc
xchg
or
rol
mov
ja
pop
cmps
jns
imul
addr16
shl
dec
push
xchg
push
inc
mov
retf
pop
shl
sahf
inc
xchg
adc
mov
mov
jmp
shl
popa
repz
push
or
mov
addr16
mov
jno
retf
fdivr
xchg
mov
(bad)
mov
loop
cmps
push
xor
sbb
mov
lods
ja
mov
and
stos
jne
js
cdq
(bad)
ret
or
mov
ror
cmp
mov
cmp
int3
sbb
pop
pop
mov
jae
sbb
dec
imul
sar
movs
inc
test
fbstp
aaa
(bad)
or
mov
gs
hlt
sub
movs
dec
pop
jnp
scas
loopne
lods
sahf
jbe
inc
ds
inc
aam
mov
int
aaa
(bad)
(bad)
or
add
ins
mov
sbb
jno
inc
mov
loope
push
sub
ss
sahf
inc
xchg
outs
hlt
stos
stc
jmp
imul
push
inc
jo
xchg
(bad)
add
xor
imul
movs
jb
stc
sbb
cmps
cs
adc
pop
sar
aaa
ins
pop
aaa
cmp
sbb
inc
xor
dec
mov
push
xor
adc
scas
jbe
jnp
addr16
hlt
(bad)
loope
test
sbb
mov
mov
rcl
mov
add
pop
sar
mov
cs
pop
fistp
push
push
bound
int3
movs
inc
cli
and
add
sbb
aas
iret
fcmovu
in
std
fcom
fnstsw
mov
ins
inc
ins
call
repnz
(bad)
rcl
pop
mov
push
jb
mov
mov
and
push
sub
fisttp
outs
rol
and
repnz
push
popf
outs
mov
cli
add
test
fsub
scas
add
cli
or
je
movs
popf
jg
movs
adc
lods
mov
outs
ds
fwait
and
cs
mov
and
mov
push
aam
popa
add
xchg
ins
pop
iret
pop
int
hlt
add
outs
movs
adc
and
ror
int
adc
sbb
nop
add
xor
pop
add
shl
jbe
test
xchg
or
shr
sti
pushf
push
jno
aaa
add
arpl
or
movs
or
jns
and
mov
push
repnz
jmp
out
test
ja
rcl
aas
xor
jmp
inc
loope
sbb
sar
dec
and
sub
sbb
cmc
jmp
je
outs
loop
mov
sbb
in
mov
in
fmul
repnz
add
imul
out
xlat
xor
inc
xor
jp
sbb
(bad)
mov
adc
dec
call
xchg
fcomp
repz
mov
adc
data16
mov
mov
rcl
or
pop
dec
aam
adc
push
pop
test
add
adc
dec
mov
and
imul
xchg
mov
daa
inc
or
cld
jl
ret
inc
xor
adc
cmp
or
out
sub
sti
mov
mov
xor
imul
inc
add
sbb
sti
sar
nop
arpl
cwde
mov
sbb
jmp
xchg
mov
in
push
jmp
lods
call
mov
sar
out
sub
cwde
into
xchg
jbe
jns
or
test
inc
jmp
das
ret
pop
pusha
cmp
and
fisttp
sub
out
out
pop
adc
sub
repnz
xor
rcr
inc
mov
adc
loope
dec
xchg
mov
gs
mov
bound
dec
cmp
dec
or
outs
xchg
adc
dec
rcl
test
cdq
push
hlt
sbb
daa
adc
dec
cli
je
retf
cmp
ds
imul
dec
scas
fistp
xor
rcr
sbb
rcr
or
hlt
or
daa
stc
inc
fsubp
mov
mov
(bad)
pop
daa
lahf
pushf
in
mov
mov
cmp
lahf
ret
jmp
gs
inc
push
ror
and
fld
pop
(bad)
iret
test
fs
push
push
dec
js
fnsave
sub
mov
jbe
adc
in
enter
cmp
movs
or
mov
xor
cmp
shl
cmp
add
in
dec
loope
xchg
xlat
icebp
test
or
mov
adc
aaa
adc
xchg
bound
mov
call
jb
pop
test
adc
dec
sbb
dec
mov
xor
xchg
xor
mov
loop
xchg
inc
bound
pop
enter
pop
les
repnz
mov
mov
xor
repz
dec
push
ret
cdq
rol
pop
stos
retf
iret
arpl
adc
xchg
mov
adc
dec
or
stos
jmp
xor
or
and
push
jl
mov
pop
push
mov
in
xor
clc
dec
inc
push
jmp
nop
aaa
test
popf
adc
jbe
scas
pop
lods
jg
inc
mov
sub
in
or
mov
sub
fidiv
jne
pop
cdq
push
(bad)
or
inc
and
cmp
mov
loop
enter
cmp
mov
call
js
xor
jmp
(bad)
cdq
in
and
(bad)
fistp
pavgw
test
clc
mov
or
fwait
and
enter
mov
pop
es
jg
push
inc
mov
mov
inc
loop
stos
sbb
loope
mov
movs
inc
adc
jmp
daa
div
jnp
sub
cmpxchg
lods
xor
push
xor
xchg
jnp
inc
neg
push
cmp
fstp
add
xchg
push
sub
movs
push
push
jns
lea
jmp
inc
sub
popa
jns
aaa
mov
mov
jge
pop
xchg
jnp
add
or
push
add
mov
sub
push
stos
fnsave
sub
(bad)
aad
xlat
add
pop
xchg
jbe
(bad)
(bad)
in
jp
pop
pop
aas
adc
and
adc
or
jg
xchg
inc
lock
cli
pusha
(bad)
dec
push
xor
cmp
xor
stos
dec
adc
xchg
mov
mov
xor
dec
ins
in
dec
xchg
xchg
stos
xchg
add
test
and
pop
jnp
inc
(bad)
mov
test
cs
mov
test
and
lea
enter
cld
out
ins
push
pop
and
mov
inc
dec
xchg
mov
push
rcr
shl
addr16
sbb
pusha
es
popf
jo
mov
push
mov
mov
xchg
int
ins
mov
jecxz
ror
mov
retf
aas
cmp
repz
inc
push
icebp
std
push
and
(bad)
jo
rol
lds
or
inc
jb
mov
fs
ret
xor
pushf
or
out
cmp
add
xor
inc
out
xchg
jae
and
retf
mov
pop
pop
out
push
sbb
fst
in
sbb
lods
ins
cmps
les
cmp
mov
(bad)
ja
add
and
rcl
sbb
mov
mov
sub
std
xchg
ja
lods
movs
repnz
pop
icebp
push
int3
or
fadd
add
mov
add
mov
call
xor
mov
in
jle
bound
addr16
sbb
xchg
js
dec
jmp
movd
in
mov
mov
hlt
lods
push
scas
in
bound
fs
mov
lods
loopne
jae
cs
cmp
dec
mov
mov
dec
mov
stos
push
aam
push
adc
xor
jg
and
jno
mov
(bad)
xor
add
int3
aaa
daa
mov
add
push
gs
mov
repnz
push
fcomp
imul
cmp
(bad)
in
or
loope
inc
lods
in
jp
or
sti
dec
clc
retf
test
idiv
mov
pop
jnp
int3
fnstenv
fwait
add
mov
mov
fld
mov
mov
lods
push
xor
(bad)
mov
outs
adc
push
leave
mov
dec
ficomp
cmp
jmp
popa
les
push
and
cmc
outs
push
pop
jmp
div
mov
xor
(bad)
arpl
or
adc
adc
dec
in
nop
out
(bad)
pop
es
cmp
sub
movs
inc
push
rol
int
dec
mov
ficom
cdq
(bad)
dec
or
dec
int
dec
in
out
clc
or
sub
or
inc
lds
mov
rol
xchg
(bad)
mov
sub
xchg
neg
cmp
dec
xor
mov
(bad)
jg
cmp
and
jmp
push
dec
cmovg
jl
pop
jmp
mov
inc
push
imul
adc
pop
push
inc
ds
test
es
add
ins
mov
push
push
in
aad
sub
or
add
cmp
xchg
sar
cmp
repnz
and
in
mov
pushf
retf
rcr
enter
call
sub
xchg
xchg
add
sub
js
fstp
adc
mov
push
xchg
jbe
push
shl
icebp
xor
ins
mov
mov
shr
mov
int
add
jno
inc
fs
cwde
retf
mov
in
push
outs
test
lods
add
js
sbb
jns
dec
xchg
push
mov
jne
and
xchg
es
jmp
outs
sbb
push
jbe
sub
jge
enter
test
jp
loop
add
xchg
push
loop
loopne
icebp
pop
or
xlat
pop
icebp
mov
(bad)
out
test
jmp
xor
call
fwait
sub
sbb
jae
cmp
jge
sbb
or
push
(bad)
shl
ret
mov
cmp
nop
jle
push
loop
scas
pop
mov
xchg
fmulp
ret
jae
daa
call
ja
leave
cmp
sub
jg
mov
outs
cdq
mov
push
add
leave
dec
stos
enter
jl
jg
nop
mov
or
jle
nop
push
lods
add
enter
dec
lds
mov
mov
push
mov
jmp
xor
dec
xchg
mov
(bad)
pop
cmps
pop
mov
cli
pop
(bad)
fnstsw
pop
sahf
enter
xchg
ret
and
repz
mov
and
ins
ins
aam
je
(bad)
lock
call
and
dec
and
arpl
mov
stos
push
inc
fs
test
scas
xchg
cld
addr16
pop
dec
xchg
xchg
adc
mov
adc
imul
imul
and
loope
stc
cmc
jp
and
sahf
int3
cmps
or
dec
leave
sub
and
xor
outs
loope
loopne
dec
bswap
jle
xor
fwait
xor
enter
push
mov
sub
add
add
mov
inc
call
mov
sub
movs
or
dec
(bad)
test
cli
push
pop
jnp
fisubr
push
xor
cmp
in
or
and
and
mov
call
mov
dec
add
or
sub
jb
popf
fstp
push
and
(bad)
dec
dec
xor
or
ins
inc
sbb
mov
inc
aas
iret
push
xchg
xchg
inc
(bad)
popa
cdq
retf
rol
fst
mov
rcl
mov
jnp
cmp
lahf
xor
jb
jp
test
cmp
fiadd
push
sub
sti
popf
jge
mov
adc
dec
movs
das
loope
lods
adc
test
test
push
add
mov
dec
das
dec
or
push
mov
jo
je
jne
or
fcom
push
fistp
xchg
(bad)
sub
and
xor
mov
das
mov
sahf
fiadd
mov
mov
push
add
or
int
mov
sub
mov
xor
addr16
push
add
stos
inc
pop
ja
pop
pop
mov
and
loope
leave
gs
cwde
jo
ds
fidiv
fist
mov
cmp
ds
lods
cs
jg
and
int
aaa
dec
(bad)
loopne
xor
ds
add
sub
and
mov
cmps
pushf
cli
pop
jecxz
pop
xchg
ds
cmp
dec
in
inc
mov
(bad)
(bad)
sbb
into
jne
call
aam
out
loope
lods
pop
test
jmp
stc
mov
sbb
sahf
adc
xchg
jmp
cmp
mov
pusha
mov
mov
mov
into
inc
retf
mov
mov
cmps
in
pop
jns
pop
adc
cmp
(bad)
jae
push
xor
fwait
cmc
mov
push
les
ficomp
sbb
xor
jg
mov
sub
pop
dec
jle
xor
dec
push
enter
mov
in
mov
mov
nop
shl
pop
gs
sbb
(bad)
pop
jmp
inc
xlat
or
xor
mov
fisub
retf
popf
call
dec
sar
and
sti
rcl
jb
push
stos
push
idiv
int3
(bad)
fsubp
scas
int3
jnp
adc
inc
cmps
pop
push
inc
mov
stos
xchg
test
rcl
ret
pop
pushf
mov
lea
test
addr16
mov
popa
or
push
adc
sub
stos
dec
mov
pop
jne
fucomi
push
outs
dec
adc
or
cmp
repz
add
not
inc
sub
mov
sub
in
stos
je
push
cmps
jecxz
mov
push
xor
mov
cs
xlat
add
adc
lods
or
cmps
in
call
dec
popf
jnp
mov
push
dec
jno
cmp
jl
pop
mov
or
or
cld
push
in
ret
in
ds
push
std
mov
mov
(bad)
pop
movs
jge
repnz
cmp
mov
jle
cs
xchg
arpl
push
pop
sub
ret
fimul
cmp
popf
inc
xchg
dec
push
les
out
mov
or
cmp
push
sub
fbld
xlat
aad
scas
mov
daa
das
dec
dec
push
data16
cmp
dec
dec
sbb
mov
cmp
adc
mov
sub
shr
ss
dec
jl
or
inc
add
sub
or
dec
push
je
stc
loop
pop
ja
arpl
fisub
mov
dec
sub
call
cld
dec
(bad)
std
jmp
(bad)
jge
and
and
inc
arpl
and
ret
push
test
inc
cmp
fdiv
mov
int
es
repz
sbb
cmp
push
sub
sbb
and
pusha
call
push
cmps
aam
cmp
fwait
ds
and
sub
call
cld
sbb
inc
fs
loop
mov
or
mov
aam
push
add
sbb
out
add
xchg
push
daa
sub
pop
das
push
push
mov
jno
jno
jne
sbb
fucom
sbb
loopne
ja
pusha
and
in
mov
test
mov
scas
in
mov
cmp
pop
mov
pop
int
mov
enter
jmp
mov
pushf
cmp
test
ins
or
out
int3
shl
mov
mov
in
pop
(bad)
xchg
nop
clc
adc
push
daa
iret
daa
sub
aaa
lds
stos
fs
stos
pop
mov
aam
push
add
cdq
std
push
xor
aam
xor
sbb
movs
aad
ja
add
pop
xchg
cmp
lods
sar
push
cs
dec
gs
into
je
fs
lock
ss
int
xor
stc
neg
cmp
cmc
lahf
sub
cmp
push
das
fsub
leave
sub
iret
jbe
(bad)
shr
loopne
repnz
jl
push
pop
scas
lods
push
shl
mov
xchg
fidivr
pop
retf
cmp
pop
sbb
rcr
mov
pop
jge
and
or
push
pop
loopne
dec
push
adc
jmp
test
je
push
jns
mov
mov
fcmovnb
jp
popf
push
cmc
jae
je
retf
sbb
dec
push
xchg
in
cmp
call
cmp
sar
inc
push
add
xchg
cld
xor
and
and
add
in
push
or
push
mov
push
call
cmps
xor
aas
enter
mov
cmp
test
jne
mov
mov
test
adc
cmp
scas
jnp
mov
call
pop
and
dec
dec
xchg
ret
aas
test
std
and
rol
and
nop
dec
dec
sbb
xchg
dec
in
sub
mov
and
das
call
cmc
sub
inc
cmp
jp
sahf
sbb
and
mov
or
int
loopne
cmps
enter
outs
leave
xor
mov
aas
js
(bad)
out
adc
xor
bnd
jp
sti
les
stc
gs
xchg
add
cld
es
jo
daa
cmps
stos
lods
sbb
leave
xchg
out
jl
lods
mov
inc
jae
xchg
dec
call
lds
or
test
out
lods
jecxz
or
retf
push
mov
cmps
inc
mov
scas
pop
or
call
jmp
cwde
push
nop
xor
nop
loopne
ret
test
and
leave
addr16
adc
cmc
std
cmc
sbb
les
stos
pushf
cmp
adc
lock
inc
sub
push
lods
push
out
imul
cmp
add
mov
ficomp
sbb
and
inc
mov
jl
sbb
addr16
je
mov
inc
stc
and
adc
jg
inc
movs
xor
das
movlps
inc
or
cmp
mov
xor
inc
xchg
popa
push
adc
push
pop
sub
push
add
dec
sub
retf
mov
push
ins
and
sbb
jns
into
jmp
cmp
push
dec
add
jge
je
fdiv
xor
push
arpl
dec
fmul
pop
pusha
or
jle
inc
push
xchg
sbb
retf
dec
or
ins
and
aad
jecxz
xor
pop
sbb
lock
and
in
cmp
outs
mov
arpl
lods
pusha
in
adc
cmps
out
shl
jmp
loop
mov
ss
cwde
out
and
push
push
cmp
mov
in
sar
shl
sub
ror
movs
js
dec
mov
pushf
add
popa
mov
loope
jmp
lods
add
std
fdiv
sahf
out
lods
in
imul
xor
out
pop
arpl
push
enter
adc
cmp
(bad)
cmp
mov
mov
repnz
jl
adc
fcom
cli
loope
mov
pop
push
mov
sub
mov
or
pusha
cli
xor
push
iret
rcr
dec
je
sbb
jl
sahf
call
xor
jmp
inc
xor
mulps
push
mov
fmul
sbb
bound
rcl
push
jecxz
cmp
push
and
dec
sub
push
mov
je
div
xor
out
ins
adc
into
pop
pushf
clc
retf
xor
test
xchg
movs
push
push
cdq
out
add
fist
daa
(bad)
scas
sbb
daa
mov
sbb
in
push
jg
or
xor
or
out
xor
fsubrp
fdivr
loop
jge
mov
nop
nop
ds
mov
(bad)
int3
xchg
jae
jl
mov
sbb
sub
dec
mov
pop
scas
imul
push
adc
pop
rcr
orps
push
lods
int
imul
int3
jle
stc
dec
cmp
(bad)
movs
fild
movs
int
mov
lods
lea
jb
adc
ror
xor
ds
movs
or
stos
ja
jmp
arpl
cmp
aad
(bad)
mov
cmp
pop
jae
out
arpl
add
mov
icebp
xchg
mov
ins
test
push
mov
push
retf
mov
inc
sub
nop
jbe
out
loop
and
fimul
rcl
inc
pushf
mov
frstpm(287
idiv
cmps
dec
aas
addr16
lods
addr16
jmp
sbb
fcom
mov
ret
mov
mov
ror
shl
xchg
mov
scas
gs
out
or
arpl
inc
imul
pop
jb
xchg
movs
popa
inc
sbb
stos
adc
sub
es
mov
sub
test
jno
cmps
jmp
stc
xchg
mov
jl
jp
shl
push
movs
dec
jp
iret
jmp
cmp
push
cmc
xchg
push
in
xchg
addr16
jnp
es
aas
dec
iret
sbb
test
dec
popa
or
daa
mov
sub
popa
mov
lods
sub
push
lds
adc
jmp
call
xchg
dec
daa
add
cmps
pop
jmp
neg
xchg
mov
and
mov
cmp
inc
mov
xlat
lods
jge
int
mov
nop
jmp
and
dec
jbe
sbb
call
shl
cmps
shr
mov
jb
daa
ret
mov
test
pusha
or
sub
daa
jae
add
or
dec
mov
and
mov
inc
push
scas
loope
pop
xlat
mov
adc
es
jmp
ins
mov
push
daa
test
jg
dec
enter
and
popf
or
mov
int3
xor
mov
clc
xor
dec
sub
cmp
(bad)
aad
stos
imul
xor
call
xor
push
xchg
cmps
out
or
xchg
or
add
ins
push
or
aaa
push
dec
movs
fsubr
push
jecxz
(bad)
mov
dec
aam
jmp
xor
(bad)
jne
pop
(bad)
call
add
scas
xchg
cs
stos
fucom
pop
sti
into
jo
xor
out
jge
jae
xchg
inc
and
in
push
mov
jmp
xor
sahf
xor
addr16
scas
sbb
jp
fbld
adc
sub
aad
pop
cmps
cmp
push
pop
dec
leave
in
test
mov
xchg
sbb
xchg
cmp
push
popf
mov
sbb
jo
and
push
fdivr
sete
mov
push
push
push
mov
mov
rcr
mov
mov
add
mul
sbb
lock
repnz
pop
jo
imul
ins
inc
je
mov
dec
nop
leave
and
xor
ins
test
mov
mov
lea
jb
mov
int3
cwde
sub
jb
cmps
neg
stos
bound
in
adc
pop
in
jp
xchg
ror
mov
xchg
pavgw
and
push
xor
mov
cmps
sahf
dec
cmp
mov
out
push
cld
jno
or
inc
xchg
push
jb
aaa
pop
gs
xchg
ret
lods
bound
add
add
fisubr
pop
in
fmul
loope
mov
or
in
sahf
mov
das
aaa
xor
and
mov
jl
sti
imul
jae
scas
sub
loopne
push
add
imul
(bad)
push
jbe
std
shl
(bad)
mov
popf
sub
popf
movs
rol
lahf
pop
push
outs
adc
inc
add
xor
xor
or
retf
pusha
xchg
jo
mov
mov
push
sub
push
out
fisub
loop
jno
lods
arpl
adc
shr
pop
aad
inc
hlt
test
jecxz
xchg
adc
ret
call
inc
lods
or
cmp
addr16
call
pop
pop
cmc
lock
sbb
je
cwde
dec
ins
dec
dec
push
add
hlt
mov
mov
xor
xchg
loope
pushf
adc
push
xchg
adc
dec
xlat
and
scas
aaa
scas
bound
rol
ss
leave
jmp
int3
call
or
(bad)
mov
xchg
ja
fucomip
jb
xchg
adc
mov
ret
movs
mov
loopne
iret
test
jbe
jmp
mov
scas
int3
push
dec
pop
mov
cwde
shr
adc
xchg
mov
or
(bad)
mov
jl
pop
add
sti
aas
adc
sbb
outs
fnsave
imul
scas
mov
dec
add
(bad)
lock
ins
fs
ficomp
in
add
outs
clc
xchg
rcr
pop
adc
fxtract
sbb
iret
pop
xchg
ss
std
fistp
arpl
add
and
nop
mov
jnp
cmp
jbe
pop
(bad)
stos
dec
dec
nop
fidivr
lea
cdq
stc
adc
cmp
addr16
adc
nop
arpl
call
cs
mov
sbb
bound
push
push
sbb
fdiv
jmp
repz
mov
ror
sti
sub
mov
pop
outs
mov
mov
dec
lea
cmp
sub
jge
ja
enter
fist
retf
mov
mov
aas
and
and
std
enter
imul
arpl
push
ret
push
pusha
sbb
out
iret
in
cmp
xor
jae
cdq
or
mov
push
adc
aas
aam
xor
shr
sbb
mov
xor
fdivr
cmp
lock
retf
or
sar
call
loope
cmps
inc
rol
daa
jge
pop
xor
xor
mov
push
je
cmps
add
lea
dec
sti
adc
push
scas
cmp
dec
enter
and
scas
sub
push
jno
pop
pop
inc
or
mov
movs
sub
stos
cmp
adc
jae
nop
fisttp
sbb
(bad)
jmp
xlat
ret
mov
xchg
(bad)
and
int
mov
pop
pop
stc
mov
add
push
aas
add
mov
xor
mov
jbe
add
jbe
jle
dec
cmps
push
cmp
lea
popf
mov
lods
sub
dec
call
rcl
clc
and
ret
or
aas
stos
cmc
data16
cld
xlat
adc
das
mov
dec
iret
hlt
outs
and
mov
sbb
mov
out
sub
dec
in
jns
popf
push
jecxz
adc
dec
mov
add
call
retf
retf
xchg
mov
mov
lea
je
call
jo
test
cmc
mov
sti
fcomp
ins
div
xlat
sbb
mov
dec
jg
aam
pop
ror
and
inc
adc
int
mov
lahf
mov
and
repnz
fwait
mov
mov
push
mov
test
cwde
mov
pop
jno
add
es
cmp
pop
hlt
jno
(bad)
jmp
and
xor
fwait
mov
test
pop
js
(bad)
mov
pushf
ret
es
fidiv
dec
sbb
push
xor
movs
cmp
pop
jb
jp
mov
stos
stos
es
fstp
ss
jnp
mov
in
or
mov
xor
dec
jbe
sbb
shl
int
popa
imul
sub
ret
add
sbb
inc
jmp
fisubr
dec
cmps
pop
retf
mov
push
jmp
jmp
or
pop
dec
loop
arpl
out
movs
popf
int
in
fadd
pop
push
fist
lock
(bad)
stc
xor
imul
adc
imul
fadd
es
push
int
sahf
bound
cmc
loop
sub
or
xor
ficom
xchg
fistp
in
xchg
cmp
call
rcr
xor
push
sbb
out
add
scas
jmp
and
(bad)
adc
ret
push
sbb
ror
xchg
pop
cmp
fst
sub
xor
push
adc
popa
lods
sub
ss
xchg
jne
xchg
aas
xor
inc
cli
pop
mov
pop
push
sub
mov
mov
pop
cwde
or
push
or
fwait
cmp
retf
push
dec
das
out
sbb
mov
xchg
popa
mov
clc
sbb
xor
enter
test
movs
xor
jg
(bad)
mov
adc
and
stos
aaa
dec
add
in
dec
in
dec
cmp
out
mov
rcl
jmp
ins
cmp
inc
shl
pop
cmp
sti
inc
mov
add
in
clc
mov
inc
(bad)
sbb
push
ret
push
sbb
add
rep
sub
aam
call
out
mov
clc
mov
daa
pop
mov
pop
test
add
rcl
pop
fwait
fwait
push
xchg
xor
mov
out
cmp
push
mul
int
xchg
retf
std
loop
fbstp
repnz
ins
mov
jae
imul
adc
test
inc
das
lock
mov
jp
test
add
sti
dec
popf
or
inc
iret
out
inc
pusha
jbe
cmps
shr
popf
adc
mov
fdivr
pop
mov
shr
jg
xor
lahf
ja
je
das
fs
cmps
je
push
int
jmp
hlt
mov
movs
cmps
fwait
jle
jo
or
cmps
pop
and
add
push
mov
enter
push
ins
push
jnp
call
jmp
push
pop
adc
push
stos
fs
imul
retf
push
js
enter
ret
inc
mov
(bad)
sub
fist
push
iret
add
sbb
imul
xchg
xchg
or
and
inc
xchg
adc
fld
push
scas
scas
xchg
push
adc
push
test
or
(bad)
mov
or
sub
nop
pop
mov
rol
mov
sub
or
add
mov
mov
xchg
lods
cs
(bad)
in
push
in
sbb
xchg
xchg
ret
loope
sub
test
sub
push
int
imul
adc
out
retf
scas
add
shl
ret
add
mov
sbb
jg
fwait
mov
jmp
xor
and
call
push
jle
inc
mov
in
dec
loop
and
bound
dec
add
(bad)
mov
in
xlat
out
sub
jns
je
je
outs
mov
(bad)
adc
push
xor
daa
adc
in
push
jle
iret
mov
in
test
pop
or
xchg
aad
jge
and
mov
out
or
mov
add
cmovnp
push
add
jo
xchg
movs
pop
pop
out
fimul
(bad)
shl
sub
mov
dec
mov
sbb
xor
int
xor
aaa
push
sbb
call
out
push
cmp
outs
and
add
data16
call
in
aas
loope
(bad)
sti
out
mov
xchg
aad
pop
add
mov
jmp
mov
aad
out
add
add
shr
mov
or
in
lods
push
xor
sbb
sbb
ror
push
mov
mov
inc
fbstp
jmp
lahf
add
enter
xchg
mov
sbb
ja
cdq
pmulhw
pushf
dec
push
pushf
sbb
lahf
mov
imul
pop
ins
cmc
ret
push
into
adc
push
ret
(bad)
jmp
test
xlat
inc
call
nop
ja
outs
push
retf
loopne
push
mov
pop
xchg
adc
int
mov
test
jmp
js
popa
pop
das
dec
into
mov
movs
xor
and
push
jmp
fcom
jl
imul
cli
push
or
call
mov
or
mov
jp
fcmove
sbb
pop
test
pop
xchg
shr
or
or
loopne
dec
sahf
or
out
or
cli
and
inc
and
sub
cmps
mov
(bad)
stc
adc
stc
push
add
dec
adc
cmps
or
mov
sti
or
lock
jmp
stc
fst
xor
xor
dec
idiv
mov
enter
jmp
enter
and
jle
mov
and
in
fs
mov
je
cmp
mov
or
out
jp
jmp
pop
dec
dec
xor
sub
jno
inc
out
call
xchg
test
xchg
mov
xor
shl
outs
repz
or
sar
and
pop
and
xor
lock
mov
and
inc
ret
loopne
pop
inc
mov
pop
or
pop
push
mov
das
push
test
enter
mov
lods
cld
sbb
loope
ror
pop
cmp
hlt
(bad)
mov
pop
pusha
jb
mov
add
pusha
inc
add
pop
(bad)
into
ror
fwait
mov
sub
scas
es
idiv
sbb
sbb
je
cmp
fidiv
fist
in
aas
and
pop
cmps
dec
nop
adc
aaa
sahf
scas
add
mov
mov
xor
imul
bound
xor
xchg
leave
cmp
loope
sbb
or
jns
ror
scas
aam
xor
rcl
hlt
cmp
repz
fist
les
jmp
or
enter
jg
push
lods
retf
(bad)
xor
bound
xchg
(bad)
(bad)
push
lods
dec
pushf
ds
mov
jge
fcomp
push
mov
xchg
aaa
sub
ds
sbb
and
mov
add
inc
je
push
push
add
jmp
xchg
sbb
icebp
js
retf
scas
ins
adc
jp
push
inc
call
mov
mov
adc
in
out
clc
pop
sbb
xor
ins
test
add
mov
lea
sub
inc
add
jns
add
(bad)
rcr
jp
fdivr
jl
lods
cmps
sub
or
mov
inc
sar
sub
xchg
call
jo
or
dec
and
dec
dec
jl
adc
aam
out
mov
and
inc
xor
xchg
add
mov
jmp
fisttp
mov
dec
push
neg
nop
xchg
aad
adc
pop
cmp
xor
inc
cmps
clc
not
lahf
xchg
jp
or
clc
push
in
mov
mov
rcl
fisttp
mov
and
mov
stos
pop
sub
in
jle
cwde
call
add
div
test
fld
es
ret
xor
sbb
test
inc
xchg
scas
push
and
push
sbb
out
scas
push
push
mov
(bad)
stos
cmp
popa
add
sbb
sbb
mov
in
cld
sbb
dec
or
mov
xor
xchg
xchg
pop
xchg
stc
inc
clc
pop
repz
aad
enter
aad
sbb
mov
fcomip
mov
jecxz
add
xor
aad
fisubr
gs
jnp
out
sub
mov
cmp
add
aad
or
mov
(bad)
movs
jmp
pop
jl
imul
jo
or
cmp
jne
test
les
mov
mov
mov
xor
ret
cmp
outs
ins
int3
ds
pop
add
ss
jb
cld
enter
cmp
xchg
mov
sbb
call
fs
mov
mov
adc
out
hlt
mov
repnz
and
or
xchg
xor
imul
lds
jp
daa
mov
cmp
sbb
add
cmp
pushf
(bad)
sar
(bad)
jle
dec
shr
and
xchg
fdiv
cmps
loope
test
pop
jb
(bad)
add
call
lds
push
ret
aad
mov
mov
push
fisubr
or
mov
sub
hlt
pop
loopne
or
dec
xlat
adc
xchg
jle
sbb
push
rcl
adc
fcom
lea
mov
cmps
mov
cmp
sub
jb
loopne
push
pop
dec
xchg
mov
pop
ret
mov
or
cmp
fadd
daa
push
and
popa
scas
shl
ret
pop
or
jp
ror
sbb
es
lock
fisub
mov
cmp
pop
dec
stc
push
cmp
and
rcr
push
pop
pop
inc
bound
mov
and
addr16
mov
fld
js
dec
ret
jle
test
dec
retf
icebp
dec
cmp
aas
jle
add
pop
cmp
xchg
xlat
sbb
scas
mov
in
ror
rol
push
neg
jecxz
dec
pop
dec
addr16
loop
ins
sub
ins
sbb
inc
adc
pop
out
ins
outs
test
lods
or
jae
retf
popf
movs
push
jbe
ret
push
inc
jp
out
out
dec
fdiv
stos
inc
pop
bound
or
xchg
retf
ins
inc
call
fwait
and
jmp
int
xchg
sahf
out
adc
cld
mov
rcl
jmp
and
jns
loop
popf
dec
vzeroupper
iret
aad
sbb
and
pop
or
and
pop
in
into
ror
retf
cmps
cmps
retf
jg
xor
mov
xchg
lock
add
push
jge
push
repnz
jp
mov
inc
les
adc
lods
ds
ja
call
sub
aaa
inc
cld
adc
or
mov
dec
(bad)
shl
fnstcw
push
push
cmp
popa
mov
pop
sub
(bad)
jle
cmc
or
retf
mov
retf
mov
mov
cmp
popa
jno
mov
loop
cli
repnz
pop
mov
in
or
pushf
and
stc
jecxz
cmps
inc
popa
scas
pushf
mov
std
pop
popa
in
shl
cmp
int
popa
call
int
prefetch
or
(bad)
dec
push
hlt
aam
mov
ja
int
adc
mov
jmp
xchg
xor
das
or
not
adc
xor
pop
(bad)
cdq
enter
cmps
jne
fstp
(bad)
cmp
and
add
push
jp
test
adc
in
sbb
xor
jp
xor
fcmovnbe
std
or
mov
mov
out
xor
or
cmp
outs
loope
or
mov
repz
mov
aaa
sub
sbb
int3
pop
push
mov
imul
inc
mov
sar
dec
jmp
cli
jno
sar
add
pop
es
addps
cdq
outs
pop
or
push
cmp
dec
xor
mov
xor
sar
adc
out
div
xlat
fcom
loopne
pop
push
outs
sub
mov
xchg
push
sbb
mov
inc
jg
out
movs
pop
and
dec
jmp
pop
and
loope
arpl
in
in
push
stos
in
scas
into
and
int
ds
jecxz
jge
mov
xchg
rcl
not
pop
call
fistp
xor
cmp
sub
jnp
xor
jecxz
cmp
shr
sub
mov
mov
jb
push
push
sar
xchg
cmp
call
rcr
cld
into
or
sub
jle
repnz
test
mov
test
in
push
xor
inc
cdq
sbb
dec
or
add
pop
dec
call
retf
imul
call
cmp
xchg
xchg
xchg
loop
add
lds
inc
inc
sub
inc
out
es
xor
sbb
bswap
clc
test
push
cmp
push
dec
jae
test
jecxz
mov
fwait
lock
mov
ror
into
sbb
mov
xlat
sbb
repnz
cwde
imul
mov
imul
xor
inc
or
popf
in
pushf
cmp
bswap
(bad)
ret
out
rcr
cdq
jmp
push
mov
and
test
nop
addr16
lds
nop
ficomp
and
(bad)
adc
xchg
(bad)
popa
in
stos
mov
jnp
mov
iret
das
cmp
add
xchg
mov
and
or
adc
cld
sub
dec
cmp
cmc
mov
cmps
jo
dec
sub
mov
and
test
in
mov
inc
dec
loopne
and
enter
iret
cdq
add
out
(bad)
out
jb
cld
ror
gs
xchg
jb
arpl
js
fcomp
mov
movs
jb
fsub
in
hlt
mov
dec
sbb
sbb
or
cmp
dec
dec
or
in
xchg
call
and
xchg
sar
jnp
inc
test
test
pop
pop
ret
add
inc
ins
or
xor
inc
and
mov
stos
dec
jb
sub
fadd
fwait
cmc
sub
xchg
jo
pop
dec
cmp
mov
add
push
ja
frstor
nop
add
enter
mov
repz
push
xchg
adc
jnp
add
sub
dec
jp
movs
xchg
push
cmps
neg
jns
js
out
jo
jg
or
ins
or
or
mov
jo
push
jp
out
cmp
ret
aaa
int
jne
cmp
and
sbb
les
mov
in
add
mov
jp
xchg
or
dec
test
and
movs
shl
fldcw
cwde
lock
cmp
pop
nop
mov
pop
pop
addr16
ins
lods
cs
imul
pushf
leave
sub
iret
add
pop
ror
(bad)
adc
mov
adc
mov
dec
std
cmc
or
adc
mov
sub
push
push
adc
mov
jecxz
inc
jmp
cmovs
clc
lods
fist
add
pop
int
mov
popf
add
ja
and
pop
std
and
hlt
adc
rol
cli
cmp
das
je
idiv
add
xor
cs
cmp
ss
(bad)
xor
mov
ins
or
and
sub
adc
aas
xor
stos
es
aas
pop
lods
mov
dec
push
push
inc
std
dec
xor
and
fstp
xchg
jg
push
cld
sub
call
jle
jnp
adc
das
mov
pop
leave
imul
cmp
push
jbe
pop
jg
(bad)
clc
push
rdtsc
loopne
sub
and
lahf
fwait
adc
push
js
rcr
and
jmp
jecxz
jecxz
ins
xchg
mov
mov
xchg
mov
aam
pop
mov
jnp
mov
mov
push
add
fidiv
dec
mov
or
push
jbe
mov
xor
cmp
das
les
sub
fiadd
xor
xchg
shl
mov
(bad)
jmp
add
sub
movs
mov
js
sar
push
cmp
nop
dec
xchg
ss
call
shl
rol
adc
mov
sub
pop
test
sub
add
push
(bad)
fistp
int
push
scas
xchg
add
fs
mov
push
jle
jnp
aaa
xor
in
dec
adc
xchg
inc
cld
jnp
sub
ja
imul
out
inc
pop
and
mov
push
retf
imul
inc
adc
cmp
loopne
adc
(bad)
add
fnsave
clc
(bad)
shl
aad
mov
jge
mov
push
cmc
enter
pushf
das
cmps
dec
int
or
and
lods
hlt
push
scas
xor
popf
jecxz
mov
in
lods
sbb
nop
sub
ss
loop
mov
xchg
int3
stos
fimul
retf
or
pop
les
and
adc
int3
push
jle
adc
test
fiadd
iret
mov
sbb
int3
in
adc
sub
arpl
sbb
ss
jle
add
into
dec
mov
push
in
push
mov
fistp
cmp
dec
jno
loopne
mov
jmp
loop
(bad)
fucomip
and
(bad)
inc
pop
add
(bad)
lahf
(bad)
int3
std
or
push
fistp
pop
test
dec
and
icebp
retf
xor
or
int3
ins
dec
mov
ss
adc
imul
lahf
cwde
mov
sub
or
jl
mov
mov
and
shl
pop
push
sbb
cmp
add
call
jg
ror
dec
lods
dec
pop
stos
or
fsubr
aad
into
mov
and
or
xor
loop
xchg
int
(bad)
fadd
rol
pop
xchg
test
sbb
mov
dec
mov
in
loope
es
and
push
cmc
mov
stos
inc
xor
or
lods
mov
sub
add
rcr
rol
adc
mov
ss
jnp
sub
aam
pop
mov
rcl
inc
out
std
sbb
ins
adc
lahf
loopne
xchg
cld
mov
cmp
add
sbb
sti
xor
push
sub
jmp
pop
or
mov
mov
mov
not
shr
adc
in
dec
xlat
mov
and
cmp
mov
xor
movs
xabort
xor
dec
in
aad
and
cmp
repz
mov
sbb
div
sub
popf
daa
aad
mov
cmp
sub
jecxz
mov
mov
cmp
in
or
neg
ins
sti
mov
inc
hlt
std
xor
inc
push
sbb
fadd
ss
std
mov
pop
rol
les
fmul
call
loope
inc
add
xchg
fwait
cli
mov
ret
mov
pusha
add
fs
or
cmp
push
out
mov
cmc
sti
and
rcr
stc
out
hlt
xchg
mov
lods
data16
daa
dec
cmc
xchg
sbb
cmc
xchg
add
int3
xor
and
pop
and
rcr
ret
sub
clc
out
and
lea
sub
daa
xor
pop
sbb
mov
sbb
scas
adc
xor
fdiv
mov
jmp
add
push
add
je
fwait
lock
or
add
movs
and
cmp
mov
push
in
ds
lea
fdivr
inc
dec
cmp
loop
in
jle
cmp
ficomp
inc
pusha
sbb
or
xchg
mov
sahf
stc
dec
js
cwde
fdivr
call
lock
ret
xchg
ror
inc
addr16
ins
push
xor
xor
retf
mov
mov
xor
fwait
in
dec
mov
mov
das
leave
stc
xor
je
xor
xchg
outs
xlat
mul
into
repz
dec
out
pop
loopne
lahf
push
push
pop
sbb
or
leave
call
fsub
scas
mov
dec
sub
sub
outs
aad
ror
rcl
jmp
pop
stos
in
xchg
xor
xchg
test
dec
fimul
jg
dec
xchg
and
into
xor
jae
push
add
(bad)
sti
and
and
jmp
inc
add
adc
stos
lods
fidiv
jge
sbb
mov
sysret
dec
mov
bndstx
mov
adc
scas
jo
jae
cmp
int3
ror
jne
pop
cli
mov
mov
cli
pop
repz
ss
aas
cmc
add
xor
push
in
inc
sbb
call
sbb
and
shl
jb
adc
xlat
pop
lock
cmp
sub
call
dec
fs
dec
rcr
mov
int
xor
test
and
in
dec
sbb
icebp
retf
push
sub
cli
push
pop
push
push
mov
adc
arpl
sar
out
out
daa
iret
out
aas
xchg
push
pop
xchg
std
enter
sbb
xchg
jne
test
shl
xchg
add
and
add
mov
jecxz
sbb
js
adc
shl
cdq
xor
fcom
fidiv
aad
mov
aas
pop
rcl
adc
cld
adc
add
adc
pop
les
mov
dec
leave
pop
sar
cld
shr
(bad)
xchg
jl
jl
mov
mov
loope
adc
std
pop
mul
mov
mov
popf
inc
das
std
mov
retf
push
mov
fistp
lock
les
xor
jbe
pop
ins
adc
loope
dec
fnsave
pop
xchg
lods
in
sub
push
add
repz
pushf
fwait
test
xor
mov
shl
sub
rcl
xor
or
cmp
out
std
jp
pop
mov
push
pop
mov
imul
mov
iret
sar
mov
rcr
cmc
fsubr
ins
test
add
inc
inc
pop
jno
js
mov
push
rcr
cmps
sbb
adc
shl
pop
pop
jbe
xchg
dec
retf
addr16
gs
or
mov
sub
ss
jo
jbe
xchg
clc
xchg
mov
jg
jb
add
sar
jo
dec
cmp
in
test
push
fist
ds
lock
push
jo
sub
popa
hlt
out
ins
arpl
popa
mov
fld
fistp
in
pop
mov
xchg
adc
cdq
mov
into
movs
add
daa
movs
aam
int
stc
mov
out
ret
ret
adc
inc
lods
xchg
test
mov
ds
and
je
dec
aaa
int
sbb
push
mov
or
inc
cmps
or
adc
xor
inc
outs
out
mov
enter
xchg
enter
shr
xchg
mov
mov
mov
jl
inc
(bad)
and
imul
mov
or
and
repz
xchg
or
add
sbb
jae
js
outs
mov
add
cmp
fs
cmp
pop
xchg
mov
jle
mov
inc
int3
fwait
sub
fisttp
retf
cmp
jl
ret
call
xlat
scas
or
scas
dec
add
cs
xor
call
sub
popa
inc
fwait
sbb
in
pop
arpl
mov
into
pop
pop
cmp
cli
and
test
dec
xor
int
xchg
movs
mov
vcvttsd2si
add
inc
add
sahf
add
(bad)
rol
pop
jp
stos
add
add
outs
pop
jge
pop
push
stc
pusha
cli
sub
xlat
push
std
nop
sub
xchg
retf
cmp
bnd
pop
ins
and
pop
mov
jg
enter
cwde
sar
mov
xlat
pop
ret
sub
adc
jbe
mov
dec
rcr
aas
pop
pop
cmp
xchg
stos
or
cmps
clc
sar
fist
add
aas
retf
lods
mov
adc
sbb
mov
mov
dec
aam
sub
mov
adc
adc
out
mov
jp
or
retf
cmp
mov
xchg
mov
stos
fs
cmps
push
(bad)
gs
push
jbe
xlat
jl
dec
ret
les
iret
stos
xchg
cmp
outs
sub
xchg
shr
adc
lods
and
inc
imul
xchg
add
push
dec
popf
add
imul
mov
xor
mov
and
and
xor
sub
es
daa
inc
std
imul
call
adc
pop
push
pop
test
push
popa
add
push
dec
mov
scas
lods
call
sar
movs
fwait
cmp
mov
test
mov
int
repz
pop
push
fadd
push
stos
mov
add
ret
pop
call
bound
rcl
xchg
les
inc
outs
cwde
jmp
mov
adc
pop
cld
mov
mov
out
jecxz
xor
pop
cwde
jns
jns
sub
data16
xchg
inc
jmp
ja
aaa
ins
bound
xchg
sub
mov
fstp
and
or
and
and
cmp
cmp
movs
fwait
mov
aaa
scas
add
ins
dec
call
fld
in
and
cmp
fcomp
xor
mov
fst
sub
adc
mov
adc
mov
(bad)
adc
loope
into
mov
cmp
pop
ins
out
mov
mov
shl
inc
mov
fistp
nop
leave
pop
or
stos
or
adc
push
dec
mov
pop
(bad)
aad
into
int
dec
xchg
mov
sti
test
mov
cwde
mov
sub
jecxz
retf
div
mov
jl
es
jae
jmp
mov
addr16
adc
mov
aaa
popf
pop
or
sub
retf
adc
pop
jge
sub
mov
hlt
push
gs
out
jb
lods
outs
inc
in
into
inc
mov
or
push
leave
movs
xchg
and
or
inc
std
mov
or
ja
sbb
push
adc
ret
cmp
sbb
lds
adc
shl
add
add
mov
xchg
add
xchg
dec
adc
xor
pop
cmp
enter
mov
dec
ins
cmp
pop
fsub
jae
or
std
adc
dec
dec
shl
aaa
sub
(bad)
sub
dec
cmp
pop
ins
cwde
stc
cmp
js
adc
sbb
hlt
inc
repz
inc
cdq
out
mov
sbb
movs
and
jge
lea
fstp
pop
ss
iret
mov
iret
(bad)
sar
je
jmp
xor
pop
pop
sub
fmul
push
loop
mov
cld
repnz
mov
out
mov
push
in
xor
add
mov
imul
jl
xchg
inc
jecxz
xchg
leave
mov
xchg
adc
cmps
push
push
in
push
sub
dec
cmp
pop
aaa
aam
cmp
jge
(bad)
inc
es
jmp
clc
sub
xchg
pop
and
adc
shl
push
ins
adc
xlat
xchg
adc
inc
aam
push
cmps
inc
jecxz
ror
lahf
sub
pop
push
pop
jne
test
lea
pop
pop
imul
xchg
xchg
pop
std
jge
outs
rol
or
aas
mov
out
nop
xchg
mov
nop
mov
push
ins
pop
sti
pop
(bad)
mov
(bad)
mov
add
xchg
iret
jne
sub
div
jecxz
xchg
dec
mov
sbb
push
or
push
mov
out
movs
sahf
ins
popa
inc
push
stos
cmp
mov
dec
pop
iret
jns
pop
outs
(bad)
in
pop
mov
mov
ror
rcl
popa
call
pop
adc
xchg
imul
(bad)
es
out
sub
jbe
retf
aam
leave
pop
mov
adc
push
sbb
mov
test
lahf
xchg
push
repz
mov
pop
mov
fs
pop
fild
jno
lahf
jae
add
sbb
mov
sar
outs
dec
pop
test
add
push
pop
pushf
and
sub
fld
xchg
je
popf
dec
dec
aas
outs
(bad)
dec
push
(bad)
lods
loopne
pusha
cmp
pop
outs
cmps
xchg
into
mov
push
jnp
fldcw
pop
dec
add
inc
shr
mov
pop
inc
ja
repnz
jmp
mov
retf
xlat
int3
ret
arpl
add
add
icebp
cmp
mov
cwde
adc
gs
mov
in
call
(bad)
fld
jae
dec
out
hlt
jecxz
sbb
cmps
ret
aas
mov
(bad)
and
arpl
pusha
pop
movs
movs
push
pop
dec
xchg
cdq
(bad)
pop
pusha
lods
loopne
cmp
test
inc
adc
jb
std
mov
fidivr
fbld
popf
mov
adc
iret
sub
push
aad
(bad)
out
pop
stos
pop
pop
push
xchg
lods
enter
aaa
pop
cs
push
dec
call
push
xchg
rcl
repz
adc
addr16
mov
jecxz
inc
inc
fwait
adc
test
call
in
add
jo
dec
(bad)
je
into
ds
fwait
mov
dec
std
jp
jne
mov
sar
jp
jne
aad
dec
and
outs
xchg
and
inc
lds
or
mov
xchg
sub
jnp
pop
adc
dec
jno
(bad)
aaa
jne
cmp
jns
push
into
arpl
push
or
lds
mov
and
nop
xchg
(bad)
fbld
xchg
xlat
aaa
xchg
shl
and
stos
xchg
scas
sar
in
or
(bad)
mov
sub
into
jecxz
imul
pop
in
stos
adc
or
inc
fist
std
xor
add
cmp
pop
mov
daa
xor
jo
xchg
outs
hlt
mov
or
leave
add
popf
and
loop
pop
dec
cmp
aam
pushf
retf
sahf
push
daa
adc
nop
movs
sub
stc
adc
jl
or
mov
pop
std
pop
add
lock
xabort
lods
xor
out
sub
sbb
xchg
and
cmp
jg
fbld
cmp
es
xor
inc
shl
call
outs
jle
jmp
test
jle
cmp
push
xchg
fiadd
xchg
xchg
sbb
jne
lods
cmp
dec
call
cmps
inc
cld
nop
(bad)
sti
add
push
adc
and
inc
xchg
sbb
sub
cmps
push
iret
mov
(bad)
stc
shl
out
rcr
adc
xlat
push
xor
pop
cmp
adc
rol
sbb
lds
(bad)
xchg
je
jl
xor
mov
jp
mov
cmp
adc
xchg
in
cwde
xchg
fs
bound
mov
mov
mov
lahf
add
pop
jmp
push
fcomp
cmc
mov
mov
pmaddwd
fdivr
xlat
fwait
jo
cmp
mov
dec
repz
lods
clc
icebp
cmp
mov
mov
mov
mov
cmp
mov
jno
xor
fisubr
imul
out
push
imul
and
mov
pop
cli
and
mov
fisttp
sbb
loope
pop
int
shl
sbb
lods
into
out
mov
outs
lock
mov
adc
loope
je
jne
les
pop
pushf
pop
inc
aaa
je
sbb
retf
imul
push
mov
mov
jb
jmp
cld
push
sbb
call
xor
and
push
jl
push
inc
mov
adc
into
out
icebp
push
in
sub
sub
pop
push
sub
push
xor
mov
jle
jle
int3
leave
loopne
pop
mov
push
jge
enter
ret
adc
xchg
fistp
dec
cwde
mov
jp
xor
lds
test
or
hlt
sbb
test
jl
dec
jge
mov
test
std
aaa
xor
push
int3
out
mov
or
pop
push
icebp
sub
xor
es
ficom
push
cdq
inc
jno
mov
mov
les
es
push
cmps
js
and
call
cmp
mov
xor
add
adc
add
movs
pop
enter
scas
dec
pop
sbb
es
inc
dec
hlt
pushf
dec
lods
ret
fdivr
push
mov
shl
mov
dec
fisubr
movs
int3
and
sbb
out
aaa
dec
cli
xor
cmp
xchg
xchg
rol
out
pop
and
push
push
jns
mov
lahf
test
mov
mov
push
mov
fs
cmc
or
shl
cmp
test
pushf
rcr
sbb
mov
dec
pop
jg
pushf
arpl
and
rcl
and
xchg
fsubp
inc
ins
xor
and
add
jecxz
stos
in
test
cld
mov
dec
add
jne
and
push
in
or
or
test
ins
(bad)
lea
inc
dec
cld
mov
sub
test
sti
call
pop
mov
mov
xchg
inc
lock
aam
lea
iret
cmps
pop
fcom
jg
push
pusha
cmp
retf
xchg
int3
loopne
cli
(bad)
cdq
in
iret
popa
sbb
dec
lea
push
addr16
or
mov
pop
push
std
enter
popa
push
xchg
xchg
outs
cmps
xor
fld
test
loope
(bad)
inc
pop
cwde
xchg
jmp
cmp
mov
in
jo
data16
jle
push
push
aaa
mov
stos
and
add
mov
mov
mov
pushf
push
inc
cli
stc
pop
dec
xor
cdq
inc
mov
in
std
in
jmp
movs
xchg
cdq
inc
daa
cmp
popf
fdivr
pop
gs
ins
ins
loopne
and
adc
sub
inc
add
inc
repnz
xchg
div
jno
mov
sti
jp
pop
xor
xor
jge
repnz
js
mov
sti
or
cmp
sub
cmc
shr
dec
(bad)
cmp
jb
mov
adc
(bad)
and
mov
loop
push
mov
jns
mov
outs
sbb
aad
xchg
cmps
fidivr
sub
sbb
cmp
push
mov
mov
cmp
mov
sub
pop
mov
bound
mul
leave
popa
jae
or
mov
ror
sbb
rcr
sbb
fistp
and
jae
test
sub
adc
les
mov
ins
repz
xor
push
sbb
jne
and
sbb
shl
comiss
int3
dec
xchg
cmp
lea
inc
adc
(bad)
ds
push
fmul
mov
adc
popa
sub
ret
cmp
adc
or
pop
jb
mov
mov
into
test
aad
dec
ret
sbb
add
and
sub
mov
je
adc
and
add
pop
pop
pop
gs
cmp
dec
xchg
push
test
pushf
gs
mov
or
pop
out
add
xchg
inc
xor
jae
shr
ja
sbb
inc
retf
mov
xor
pushf
and
iret
push
xor
call
push
icebp
dec
mov
repz
cdq
lahf
xor
jecxz
and
add
ds
out
and
cwde
add
pop
cmp
add
dec
pop
or
mov
cs
addr16
mov
fdivr
call
lods
mov
pop
retf
cmp
ja
xchg
in
jmp
fcom
mov
fsub
xor
scas
pop
int3
lock
push
push
add
mov
mov
mov
dec
cmp
push
add
je
push
xor
mov
std
ins
and
(bad)
ret
inc
inc
fs
call
nop
test
xchg
mov
daa
ds
mov
sbb
retf
sub
int3
fidiv
repz
(bad)
mov
les
dec
sahf
loopne
int3
and
ret
mov
push
sti
pop
push
das
popa
pop
inc
mov
ret
jb
jno
sbb
ja
cmps
mov
or
ror
pop
or
xchg
jp
mov
pop
cdq
sbb
push
outs
add
xchg
mov
adc
dec
xor
(bad)
in
and
mov
mov
add
jns
and
jmp
sbb
inc
sbb
cmp
lods
jmp
test
or
or
fucomip
mov
inc
ret
repnz
pop
xor
(bad)
xchg
dec
or
inc
in
into
cdq
pop
in
sahf
gs
lods
cmp
or
pop
jno
dec
aas
cmps
sahf
arpl
int3
shl
idiv
fdivr
fsubr
mov
or
add
adc
add
mov
addr16
pop
sar
sbb
fnstenv
mov
or
fild
add
adc
cwde
pop
mov
add
sub
and
fadd
push
xchg
ins
enter
xchg
mov
pop
ret
inc
dec
xchg
pop
imul
jl
or
sub
loopne
jnp
popa
sub
xchg
xchg
sub
mov
out
xor
fwait
add
xor
adc
mov
out
fisub
std
clc
das
shr
adc
dec
mov
or
sbb
stos
neg
into
adc
(bad)
fbld
mov
call
mov
sub
mov
jbe
inc
dec
aad
int
mov
add
pop
aas
jp
iret
dec
add
test
loop
rol
fdiv
add
push
jmp
xchg
retf
shl
clc
test
push
xor
mov
mov
mov
xor
push
loope
imul
push
mov
in
retf
dec
pop
das
cmp
int3
sub
test
jmp
and
cmp
or
sbb
push
(bad)
ins
fiadd
ins
inc
pop
xchg
js
(bad)
test
int3
xor
xchg
ja
inc
jne
or
outs
sbb
sub
icebp
in
test
sbb
dec
movs
inc
stos
out
mov
(bad)
clc
mov
add
xchg
lods
push
adc
popa
sub
fist
ss
jb
or
inc
loope
xchg
xchg
pop
outs
cmp
aas
das
into
daa
aas
lds
cmp
sbb
jmp
or
push
int3
fdivrp
add
cmp
mov
push
mov
jg
enter
lods
and
into
push
neg
push
mov
dec
sti
(bad)
lock
cmps
pop
push
lods
mov
fdiv
lods
ins
movs
lods
jno
(bad)
xor
add
xor
push
retf
inc
leave
push
sahf
push
jg
jo
icebp
and
push
or
iret
fndisi(8087
cmp
xor
mov
mov
jp
std
push
ja
jne
jne
xor
fldcw
call
fild
mov
jae
pop
jae
sub
xor
fsubr
adc
jne
xchg
mov
out
aam
cmc
retf
sbb
sub
dec
mov
push
pop
xor
mov
jb
int3
xchg
mov
arpl
xor
neg
(bad)
inc
mov
cdq
test
lods
adc
enter
sub
mov
mov
fiadd
rcl
aas
gs
retf
in
repz
push
mov
and
out
adc
mov
js
and
cwde
cli
pop
lea
clc
mov
xchg
inc
aas
lds
or
dec
add
adc
adc
mov
(bad)
cmp
jmp
or
push
pop
retf
xor
or
or
movs
add
mov
nop
adc
ret
mov
rcr
jae
sbb
loop
jl
jmp
mov
fs
xor
dec
in
sbb
in
(bad)
fnstsw
iret
daa
sahf
adc
pop
push
enter
cld
adc
out
movs
mov
cs
iret
push
hlt
hlt
sub
mov
inc
lds
js
add
out
jp
push
mov
neg
mov
fdivr
mov
push
icebp
adc
ficomp
mov
data16
inc
mov
leave
sub
pop
adc
test
mov
mov
push
test
(bad)
cmp
int3
dec
xchg
sbb
jns
stos
int3
xchg
in
sbb
(bad)
pop
das
popf
mov
popf
test
loop
sub
test
fisttp
movs
dec
cmp
mov
push
add
int3
out
sti
outs
stos
rol
inc
jmp
clc
push
(bad)
mov
inc
je
sub
xor
nop
repz
imul
psrlw
push
jg
dec
cmp
xchg
(bad)
fucomi
leave
sbb
ss
cwde
(bad)
pop
inc
inc
xchg
aad
sub
lea
in
out
retf
mov
add
adc
ins
pop
pop
clc
xor
mov
push
repz
pop
xchg
(bad)
or
cmps
fnsave
dec
cmp
dec
lock
jg
sub
fld
inc
movs
lods
ror
ss
pushf
xlat
push
das
stos
je
out
mov
mov
icebp
fbld
mov
mov
dec
(bad)
jge
mov
and
fisttp
fwait
je
shl
std
(bad)
jae
pop
cwde
not
mov
call
cmps
mov
clc
call
fmul
push
jecxz
ins
mov
daa
xchg
jecxz
mov
xor
js
cmp
and
ficom
mov
test
loop
add
jae
jl
addr16
not
push
mov
jo
cmp
shr
mov
test
stc
in
pop
arpl
jmp
xor
dec
fadd
idiv
retf
int
and
ret
sbb
mov
inc
mov
cmps
or
mov
add
lahf
test
imul
ror
jbe
out
aam
(bad)
or
adc
push
loope
repz
fldenv
pop
lods
inc
bound
sbb
iret
inc
in
dec
lock
mov
dec
call
push
jmp
arpl
(bad)
lahf
ret
jns
faddp
mov
inc
in
jmp
push
pop
add
mov
sub
xor
xor
xchg
inc
pop
jo
cmps
popf
leave
ds
test
xor
dec
jno
mov
or
fisub
jp
call
sti
scas
adc
and
sub
popf
ret
xchg
jbe
mov
inc
imul
xor
xor
cmp
jmp
repz
push
(bad)
adc
xor
lds
cmp
out
lahf
clc
lea
in
not
cmp
jb
stc
inc
jne
retf
jae
shl
lds
jb
call
add
popa
jle
mov
pop
aaa
rcl
das
sbb
xchg
add
(bad)
xchg
mov
dec
aaa
cld
or
jbe
sbb
mov
scas
jmp
sbb
or
dec
adc
hlt
pop
add
dec
and
(bad)
out
cs
sub
retf
xor
outs
mov
repz
cwde
repnz
mov
xchg
mov
(bad)
lea
xchg
adc
ficomp
ror
call
leave
jecxz
repz
or
pusha
pop
(bad)
push
mov
sbb
fsubr
mov
and
dec
scas
and
sbb
addr16
mov
retf
xor
(bad)
(bad)
ja
pop
add
pop
and
adc
add
and
sub
ficom
pop
add
mov
add
jecxz
sbb
(bad)
xchg
mov
push
pushf
call
and
loopne
iret
iret
jp
out
bnd
fnstenv
mov
loop
cs
jnp
jle
xchg
hlt
stos
(bad)
lock
cmp
adc
pushf
pop
pop
push
sub
push
es
enter
mov
out
addr16
sbb
leave
adc
fidivr
push
mov
cmp
addr16
retf
pop
(bad)
xor
pop
shl
sbb
neg
data16
std
dec
mov
daa
mov
sub
ins
push
mov
imul
lock
push
push
dec
add
xor
push
jbe
call
jae
mov
add
jb
mov
add
push
and
into
out
jge
sub
dec
jecxz
sar
or
fnsave
retf
iret
add
(bad)
sub
push
pop
fs
repnz
jge
push
pop
xor
xchg
(bad)
retf
rcr
sbb
cdq
leave
into
dec
(bad)
push
add
aam
mov
js
ja
stc
add
clc
mov
xchg
fdiv
mov
mov
xchg
test
and
jl
adc
and
outs
int3
ins
cmp
lds
rcl
call
lock
add
lods
cmp
ret
and
enter
mov
xor
out
test
inc
jl
inc
(bad)
aas
mov
jp
pop
xor
sbb
xor
inc
and
mov
lods
pop
adc
mov
ins
les
pop
test
xor
inc
mov
fwait
mov
mov
jmp
call
inc
cwde
xchg
lea
imul
jg
adc
jnp
pop
aad
rol
out
jb
stos
mov
add
pusha
xchg
ins
js
mov
or
mov
mov
sub
shl
mov
sbb
scas
(bad)
fstp
cmc
pop
js
mov
imul
call
scas
jne
pop
add
sub
mov
std
ins
(bad)
sbb
jle
mov
sub
pop
enter
jmp
inc
add
(bad)
push
pop
pushf
jne
fwait
jecxz
fmul
cmp
pop
xchg
loop
pop
sbb
ja
stc
and
mov
ds
or
xchg
mov
ins
fs
mov
sub
mov
xchg
jbe
sub
xor
lds
push
shr
sbb
dec
sub
jecxz
jne
je
adc
(bad)
jmp
sub
inc
push
loopne
xchg
push
ror
pop
scas
cmp
sti
leave
stos
mov
add
cmp
popf
jb
push
iret
add
sub
xor
ret
movs
es
jbe
loope
jg
push
leave
jecxz
pop
imul
push
sub
(bad)
push
out
in
dec
or
jecxz
mov
mov
lock
or
cmp
arpl
lahf
(bad)
int
stc
movaps
xchg
(bad)
adc
scas
push
mov
mov
push
mov
addr16
rcr
hlt
xchg
jle
std
ret
popa
retf
xchg
dec
sub
jecxz
loopne
pop
mov
fldcw
jne
adc
push
or
cwde
sbb
loopne
sbb
and
cmp
add
retf
push
sub
jb
pop
xchg
scas
pusha
mov
sub
xor
bound
adc
movs
cmp
inc
fnstcw
jmp
repnz
int3
cdq
loopne
stc
(bad)
fcmovne
mov
sub
or
inc
sbb
stos
lods
mov
leave
ret
push
out
out
or
cmp
and
add
inc
test
out
pop
add
test
sti
xchg
jbe
je
pusha
jl
int3
cmp
push
adc
mov
fist
sub
push
div
int3
daa
mov
mov
push
push
jns
fwait
cmp
dec
iret
xchg
aam
leave
sbb
outs
dec
jno
jg
and
aaa
rol
into
or
aas
xlat
jno
repnz
xor
std
mov
cli
pop
daa
mov
sahf
mov
ss
ins
dec
mov
arpl
dec
jns
scas
das
jne
adc
cmp
(bad)
and
sbb
jmp
les
xchg
cs
in
push
loope
fcomp
cmps
inc
xlat
(bad)
enter
mov
or
ins
push
cmps
push
fadd
sbb
inc
dec
loop
push
int3
(bad)
in
push
push
adc
xchg
stos
jo
mov
mov
add
or
or
arpl
mov
in
ret
jecxz
stc
adc
dec
imul
cmps
dec
or
ret
test
ss
inc
mov
aad
jg
jp
cmp
outs
scas
dec
daa
mov
jge
dec
xchg
(bad)
cwde
push
push
(bad)
popf
inc
shl
hlt
les
sbb
stos
xchg
clc
(bad)
pop
push
push
and
xor
push
mov
xor
or
pop
mov
out
xlat
(bad)
in
add
(bad)
std
mov
jae
inc
pop
pop
jae
mov
int
sti
cmps
js
mov
nop
sti
mov
sub
in
mov
popa
(bad)
sbb
repnz
or
lods
mov
add
mov
push
adc
pop
adc
xor
adc
dec
cld
mov
xchg
jge
idiv
fnstsw
jp
fsub
xchg
icebp
out
sub
jb
scas
into
jnp
pop
popa
xchg
pop
xlat
rep
test
int
test
pop
add
inc
and
push
je
cmp
adc
dec
mov
out
int
test
jle
fwait
es
arpl
sub
out
(bad)
mov
stos
(bad)
push
sbb
add
ficomp
out
das
mov
js
mov
xchg
fild
gs
sub
es
je
out
in
dec
sbb
inc
imul
test
adc
push
movs
pop
(bad)
call
mov
jg
imul
or
pop
pop
dec
mov
push
xchg
lock
adc
pop
xchg
jmp
dec
add
test
cwde
cmp
mov
stos
sti
nop
in
and
jg
sub
adc
std
inc
rcr
pusha
add
add
pop
outs
dec
xchg
mov
stc
xchg
shl
pop
sub
pop
(bad)
shl
popa
in
dec
dec
(bad)
dec
cmps
fmul
outs
jmp
sahf
mov
inc
inc
fidiv
popa
cld
mov
cs
adc
hlt
cmp
dec
mov
daa
xor
or
fldenv
scas
or
pop
pop
imul
mov
pop
and
add
cli
pushf
mov
call
test
and
mov
push
jne
add
pop
ja
or
pop
std
inc
jno
(bad)
dec
push
or
sub
retf
pusha
cmps
dec
and
out
dec
jmp
cmp
rol
mov
stc
ror
inc
or
pusha
imul
stos
or
dec
loopne
push
call
pop
cmps
sub
and
push
(bad)
adc
or
push
leave
dec
xor
popa
aaa
icebp
arpl
dec
adc
shl
clc
inc
xor
pusha
scas
dec
jl
mov
push
inc
jp
out
or
cmp
daa
pop
dec
leave
repnz
scas
sub
test
sub
lea
cmp
fadd
pop
or
les
pop
jns
mov
div
add
aaa
outs
shr
xlat
rol
pop
jle
rcr
comiss
and
jmp
mov
rol
outs
ficomp
xchg
fimul
aam
je
cmp
push
repnz
int
pop
inc
lds
sub
aas
icebp
dec
xor
lods
popf
cmp
repz
cmp
mov
fcomp
adc
lods
sbb
pop
cmp
cmps
cmp
cmp
add
sbb
add
add
retf
js
lds
(bad)
aam
mov
icebp
mov
daa
lahf
clc
jbe
and
cmc
aam
retf
imul
xchg
pop
aaa
pop
test
add
in
dec
mov
add
lods
mov
popf
stos
mov
cmp
cmps
aam
xchg
add
hlt
and
mov
in
std
mov
mov
cmp
aam
retf
push
mov
scas
jmp
push
jno
stos
cmp
mov
popf
int3
rep
cmp
xchg
mov
repnz
mov
jl
push
mov
lods
sub
test
jl
idiv
cmp
sbb
movs
dec
mov
adc
jp
rcr
jmp
popf
movs
les
cld
adc
je
sti
dec
sar
sbb
rcr
cmps
aam
push
push
call
mov
mov
(bad)
mov
jne
mov
inc
fld
outs
jge
cdq
push
lea
mov
arpl
xor
in
push
sub
jbe
not
inc
std
(bad)
movs
outs
push
dec
not
dec
retf
xor
push
outs
aad
cmc
push
lods
daa
movs
dec
test
cmp
shl
jne
cmps
sbb
es
in
add
outs
or
(bad)
inc
adc
jmp
test
retf
popa
sbb
fild
lock
sub
push
jle
je
add
gs
jns
sbb
cld
xchg
retf
jp
inc
add
(bad)
lods
mov
adc
(bad)
out
xlat
dec
sbb
mov
pop
shl
retf
int
adc
pop
and
inc
push
iret
mul
mov
inc
fsub
add
adc
not
lahf
lahf
push
paddsb
hlt
inc
mov
jl
stc
jbe
loop
dec
mov
and
pop
loope
push
push
sahf
test
cwde
jne
test
add
or
dec
setp
mov
(bad)
sub
inc
push
push
push
pop
push
xor
jge
leave
imul
adc
test
push
xchg
add
in
xchg
js
jp
push
jmp
xor
in
push
jecxz
clc
cmp
jae
jg
mov
pusha
repnz
clc
in
mov
mov
nop
adc
push
stos
cmp
std
cmp
jle
fstp
inc
retf
sub
mov
or
xor
faddp
push
xor
ret
pop
mov
mov
mov
(bad)
mov
mov
push
mov
xchg
jbe
cmp
das
out
or
mov
add
add
mov
mov
cmp
sub
mov
inc
fdivr
adc
shr
arpl
es
mov
dec
rcr
popf
or
jle
cmc
mov
retf
sub
outs
cmp
fdiv
and
jnp
pop
xor
or
inc
lods
adc
sub
sub
mov
lods
mov
dec
ret
or
mov
dec
fmul
aaa
fld
pop
mov
jmp
xor
mov
lods
std
mov
add
pop
add
test
xchg
(bad)
mov
and
std
in
push
(bad)
out
call
mov
mov
test
not
adc
inc
je
loop
or
add
(bad)
mov
sbb
and
and
jl
std
add
mov
pop
mov
xchg
lea
sub
pop
push
cld
push
fmul
fwait
jmp
push
jmp
shl
call
das
and
ds
and
inc
test
mov
dec
jbe
in
lock
pusha
fdiv
or
out
test
aad
lods
in
es
lock
mov
nop
mov
push
xor
xlat
mov
sub
call
pop
mov
ret
nop
retf
bound
or
and
idiv
mov
cvttps2pi
xchg
jae
fist
cld
pop
add
fdiv
cmps
push
pop
test
lahf
aad
(bad)
clc
mov
mov
cmp
shl
jmp
xchg
cmp
push
mov
ret
cmp
loop
punpckhbw
mul
lahf
push
(bad)
dec
mov
jg
mov
xchg
shl
dec
inc
push
and
test
les
and
jp
jnp
fbstp
xor
call
adc
mov
mov
pop
pop
xchg
push
cmp
popa
aam
stc
mov
sbb
push
mov
out
icebp
sub
jbe
mov
sbb
gs
dec
ret
add
imul
dec
fnstenv
adc
ret
int
nop
adc
cmp
(bad)
xchg
jle
push
fidivr
cwde
add
inc
mov
in
aaa
pop
push
adc
rol
out
lods
sbb
xor
das
lahf
push
jns
shl
mov
lea
pushf
(bad)
fisttp
and
sbb
adc
add
je
jmp
xor
popf
repz
std
add
pop
les
sbb
sbb
pop
sbb
mov
pop
scas
fdiv
test
hlt
adc
(bad)
cmc
movs
dec
aaa
aad
mov
outs
rol
push
je
mov
xchg
call
inc
inc
pop
push
into
mov
cs
fcmovb
push
(bad)
out
fdiv
xor
add
or
sti
retf
into
and
jns
gs
test
in
je
or
imul
mov
outs
xor
jae
and
jmp
xor
outs
push
popf
in
(bad)
mov
repnz
arpl
std
or
push
pusha
nop
les
int3
jmp
leave
mov
mov
mov
sti
or
cdq
fadd
adc
mov
arpl
fs
bound
lock
dec
mov
cwde
adc
mov
mov
mov
jl
push
fld
outs
iret
pop
xor
dec
pusha
mov
bound
movs
dec
push
adc
fist
(bad)
lock
xchg
call
in
mov
sar
push
push
lods
mov
pop
add
xor
pop
inc
bound
pop
movs
imul
stos
loopne
call
add
push
repnz
mov
jae
imul
jnp
sub
inc
mov
shl
pop
movs
(bad)
into
inc
sub
sub
pop
mov
rcl
or
adc
fdivr
jnp
mov
sbb
mov
xchg
pop
pop
sbb
push
jecxz
mov
in
xchg
neg
mov
call
mov
stc
sbb
or
bound
push
out
jae
mov
inc
xor
and
retf
push
iret
inc
xor
and
cmp
add
cmps
hlt
gs
lock
bound
unpckhps
cdq
cmp
pop
jo
ret
mov
push
xchg
pop
or
jmp
scas
jb
xor
je
(bad)
sti
div
in
jmp
jne
fnop
ins
pop
adc
std
cs
cmp
xchg
sahf
icebp
fs
out
push
sub
sub
and
imul
add
in
pop
clc
push
imul
(bad)
call
push
inc
fist
dec
sahf
shl
lods
ins
out
jg
jle
or
lods
add
nop
sub
inc
xchg
add
pop
xchg
jp
repnz
aaa
cmps
add
add
out
push
ror
add
adc
lods
or
sahf
setae
and
mov
popf
xor
sub
cmps
out
jp
jo
pop
adc
fcmovnb
jnp
push
outs
stc
push
test
es
sub
(bad)
jle
lds
cmp
popa
mov
jle
push
jb
inc
cld
nop
inc
sahf
and
jle
jns
fldenv
push
xchg
xchg
ss
in
push
push
pop
fisubr
ss
mov
std
sbb
cmp
push
xor
xchg
or
adc
and
push
sbb
or
sbb
inc
inc
adc
adc
arpl
(bad)
int
push
sub
leave
ins
aas
cmp
jno
jg
std
pop
and
sub
dec
lods
and
test
dec
nop
lock
cmp
cmp
mov
mov
xor
mov
mov
cwde
push
cli
fldcw
loop
repnz
bound
jecxz
inc
stos
adc
xchg
fild
in
shr
jle
sbb
adc
dec
sahf
mov
int
xlat
add
inc
dec
xor
push
imul
sbb
inc
dec
push
test
jmp
add
shr
scas
cs
loop
loopne
push
xchg
push
js
cs
cmp
and
add
add
add
mov
sub
test
ror
stc
retf
and
adc
mov
je
push
jo
jno
inc
push
repnz
and
int
outs
ja
js
mov
pusha
out
add
js
loopne
inc
jmp
int
mov
rcr
rcl
aas
iret
(bad)
out
jle
in
pop
sbb
movs
sar
scas
in
es
hlt
xchg
imul
mov
or
jecxz
pop
sbb
ret
ins
mov
and
fsub
lahf
inc
stos
scas
jmp
cwde
adc
outs
lahf
dec
pop
jge
cld
addr16
mov
int
cdq
pop
adc
mov
inc
ja
sahf
and
ror
inc
add
hlt
fcom
(bad)
add
rol
mov
dec
mov
test
shl
pop
fst
pop
daa
shl
push
test
aad
popf
mov
sbb
mov
iret
jae
mov
shr
pop
lahf
repnz
mov
mov
and
shl
frstor
stos
mov
ins
icebp
mov
test
jne
inc
xlat
pop
mov
sub
xor
adc
ret
js
sub
inc
in
imul
pop
xchg
test
imul
mov
add
mov
xchg
jbe
into
(bad)
fwait
sub
push
rcl
ror
xor
inc
push
(bad)
in
xchg
popf
in
mov
out
cmc
jp
push
inc
cmc
dec
push
adc
cmps
dec
pop
or
push
jmp
xor
inc
retf
fisttp
pop
sub
cmp
out
mov
cld
js
push
aaa
fwait
pop
inc
or
cld
pusha
adc
idiv
iret
fadd
or
sbb
movs
pusha
jmp
or
pop
jecxz
rcr
pop
jg
out
inc
mov
jbe
jmp
mov
in
jg
push
sub
push
jno
mov
push
sbb
xlat
mov
loope
cld
ficomp
xchg
mov
sub
test
mov
aaa
pop
jecxz
push
pop
adc
or
movs
fwait
dec
xor
aam
push
test
push
popf
jne
sti
test
cmp
fadd
inc
movups
mov
xchg
lds
cmps
jle
scas
sub
push
icebp
js
or
or
out
push
xchg
inc
push
adc
cld
mov
inc
sbb
jbe
adc
mov
scas
rol
fistp
add
aas
das
das
push
movs
mov
leave
mov
in
cs
fdivr
sub
cmp
or
add
jge
xor
fisttp
shl
loope
add
pushf
xchg
les
push
inc
clc
fsub
ds
dec
add
(bad)
in
cmp
push
push
or
inc
inc
add
cmp
adc
xor
int3
or
sti
test
cmps
fstp
xchg
jp
fucomip
loop
mov
test
cmc
stos
xchg
out
mov
jne
(bad)
mov
std
fwait
mov
movs
sub
mov
sub
movs
xchg
pop
inc
push
add
adc
sub
jmp
mov
jmp
in
push
mov
mov
(bad)
mov
test
mov
jno
jmp
inc
loop
sbb
mov
push
fstp
adc
mov
mov
fisttp
retf
jmp
xchg
movs
jo
movs
push
and
sbb
pop
pop
test
adc
popf
and
and
mov
sbb
jecxz
and
jmp
lods
mov
mov
inc
sar
popa
jge
mov
repz
xchg
in
and
jbe
fiadd
push
push
mov
or
xor
sub
data16
inc
fstp
repz
fld
mov
push
xor
xchg
cmps
je
retw
sub
shr
aaa
iret
lods
ret
push
mov
jmp
cmps
xor
and
jae
mov
mov
imul
aaa
cmp
popf
inc
sbb
push
gs
xchg
loop
call
iret
dec
mov
fisubr
psubusw
xchg
arpl
ds
jnp
push
mov
xlat
mov
cmp
adc
jns
cmp
push
dec
inc
in
cmp
pushf
fstp
shr
add
pop
aas
xlat
in
push
imul
lea
cmps
add
retw
das
inc
fldenv
jmp
add
cmp
fwait
loopne
push
nop
jle
scas
call
call
cmc
push
hlt
xchg
add
pop
repz
add
inc
scas
xor
xchg
or
out
fwait
ror
(bad)
pushf
lea
call
inc
and
adc
fwait
test
(bad)
and
fcmovnu
and
and
es
leave
cmp
ja
lahf
mov
dec
out
xor
popw
cmp
jge
lock
shr
sub
push
das
xchg
sub
adc
jnp
imul
aaa
popf
stos
xchg
or
in
xchg
stc
adc
push
sahf
xchg
cmp
les
jno
inc
adc
dec
aam
adc
sub
(bad)
stc
clc
dec
adc
xchg
jb
ja
cmp
xchg
or
pusha
ds
aas
inc
adc
adc
hlt
std
and
adc
(bad)
fstp
pop
sbb
cmp
out
outs
retf
add
rcl
xchg
inc
std
fcmovu
int3
mov
and
js
lgs
cli
xchg
loop
mov
(bad)
in
push
pop
sbb
jecxz
mov
out
cmp
xor
pop
ins
ins
repnz
aas
mov
sub
mov
adc
or
cmc
movs
call
push
cli
pop
pop
lods
mov
push
mov
loopne
ret
sub
out
xchg
(bad)
loope
and
add
in
dec
xchg
mov
ja
mov
(bad)
xchg
dec
adc
or
pop
mov
mov
cwde
adc
test
mov
xchg
cli
inc
clc
or
sbb
fstp
retf
jne
cwde
jge
and
cmp
push
push
rcl
ror
test
jb
and
xchg
and
(bad)
push
(bad)
arpl
mov
cmp
pop
test
inc
mov
and
mov
arpl
bsr
(bad)
stos
jns
jne
and
(bad)
nop
int3
out
dec
xchg
lock
pop
les
xor
(bad)
mov
sbb
jnp
shl
lahf
mov
pop
ret
je
scas
push
xor
push
movs
push
xchg
iret
mov
sub
mov
fisubr
scas
jno
jbe
adc
sub
test
sub
or
xor
sub
rcr
adc
sbb
sub
inc
popa
inc
lock
push
sub
pop
jno
cmps
iret
dec
lods
(bad)
mov
pusha
es
aad
clc
or
mov
adc
cmp
sbb
into
adc
fwait
jnp
mov
mov
mov
sbb
mov
xchg
sbb
aam
xchg
pop
pop
in
xchg
jno
fs
and
icebp
fmul
(bad)
popa
stos
inc
hlt
loope
push
sub
cmps
jmp
xor
sti
inc
pop
cs
sub
lods
test
dec
pop
sub
leave
shl
jecxz
sahf
stos
data16
pop
ror
pop
adc
sbb
lahf
daa
xor
movs
repnz
int
ror
lods
pop
xor
fmul
inc
sbb
jns
rol
stc
push
fsubr
dec
inc
shl
xchg
adc
jne
jb
(bad)
out
(bad)
jnp
popf
sbb
data16
push
rcl
int3
pop
mov
sar
push
mov
(bad)
stc
jg
mov
push
add
dec
mov
push
mov
rcr
retf
popf
adc
aad
cdq
push
inc
js
sar
(bad)
lock
mov
jne
pop
bound
mov
and
mov
xor
mov
popf
push
dec
push
adc
pop
adc
sub
adc
cmps
and
lds
push
shl
ret
rol
cld
xor
cmps
loopne
xor
adc
xchg
cmp
inc
inc
shr
mov
ja
inc
xor
test
sbb
push
repnz
es
sti
cmp
mov
cwde
adc
jl
dec
std
mov
adc
jne
imul
imul
pop
or
dec
lods
in
cld
mov
fs
ret
sub
stc
and
or
jbe
or
xchg
(bad)
fdiv
dec
in
or
fdiv
clc
pop
je
dec
inc
add
invd
and
in
loopne
test
loope
sbb
movs
mov
std
push
pop
ror
or
in
in
xchg
jnp
adc
mov
xor
push
add
sub
push
xchg
dec
(bad)
sbb
xor
or
and
mov
sti
jp
adc
inc
dec
cld
sbb
dec
popf
cmc
xchg
inc
shl
adc
(bad)
aad
or
movs
push
push
xlat
loopne
popa
sti
xchg
jne
lock
jmp
outs
mov
dec
pushf
push
icebp
pop
jnp
adc
mov
sub
cmp
nop
call
mov
aad
outs
cmp
jns
addr16
xchg
ret
mov
in
icebp
jb
aaa
pop
add
scas
gs
cmps
push
sbb
mov
push
aad
call
pop
fwait
jecxz
mov
(bad)
call
push
jns
movs
imul
mov
hlt
jmp
push
inc
nop
xchg
lods
lea
stos
ffreep
div
retf
push
call
push
fimul
push
adc
fmul
mov
call
pusha
pop
xlat
les
mov
mov
lahf
pop
xor
int
movs
jo
push
and
imul
add
js
mov
jecxz
into
push
xchg
clc
cwde
jmp
xor
mov
dec
pushf
mov
pop
pop
mov
cs
fdivr
movs
imul
pop
jno
in
mov
ins
sar
ret
sub
ret
cmps
outs
fs
out
gs
jne
xchg
xchg
pop
or
inc
(bad)
cmp
jne
cmp
dec
scas
adc
enter
mov
and
mov
sub
js
loope
cwde
xlat
imul
fadd
cmp
inc
movs
popw
out
push
xor
push
sub
stos
fst
fcom
ja
bound
xchg
stos
rol
addr16
cmps
ins
bound
and
jecxz
cld
xchg
loop
test
or
inc
pusha
add
dec
dec
and
int3
xchg
or
shl
dec
sub
pop
push
in
repnz
shl
inc
fdivrp
fistp
jne
in
or
push
push
jl
imul
adc
jo
adc
fbld
aam
push
xchg
mov
jb
inc
mov
and
je
sbb
outs
mov
pusha
push
or
pop
mov
sbb
mov
scas
das
in
mov
cs
(bad)
and
jbe
inc
mov
adc
and
call
mov
cmp
pop
adc
mov
and
das
jmp
add
xchg
cmp
dec
mov
es
lock
mov
ins
mov
add
push
mov
and
stc
int3
mov
add
sub
mov
fwait
push
pop
or
lods
jae
adc
mov
sar
repnz
js
pop
(bad)
jmp
jecxz
jno
frstor
mov
test
and
jno
push
je
adc
xchg
pop
add
cmp
sti
data16
test
mov
pop
fwait
outs
rcl
stc
cs
cmc
scas
sub
bound
cli
or
arpl
inc
inc
cmc
test
stos
pop
xchg
mov
xor
enter
push
jbe
xor
std
jb
sbb
inc
xchg
aam
or
xchg
loope
inc
add
xchg
(bad)
imul
in
xlat
pop
je
test
pushf
mov
and
fwait
repnz
add
movs
sahf
jne
sub
movs
(bad)
clc
lds
test
xor
pop
mov
fsub
test
js
sbb
int
push
push
retf
aam
fsubr
push
mov
pop
inc
mov
push
jo
nop
dec
jne
mov
scas
xor
fsubr
cdq
sbb
pop
nop
jae
mov
fld
(bad)
fcom
pop
or
pop
push
push
pop
movs
or
icebp
dec
jecxz
mov
lock
xor
fwait
push
sub
jp
pushf
push
mov
cmp
in
test
jns
sbb
pop
pop
and
lds
cmps
pop
inc
or
cli
or
xchg
pop
adc
jg
xor
push
mov
sub
jge
mov
fist
or
retf
push
out
ret
outs
pusha
mov
call
(bad)
in
pop
test
mov
cmc
jnp
sbb
sbb
mov
adc
pusha
nop
adc
das
aam
mov
(bad)
cdq
pop
xchg
mov
data16
hlt
jl
scas
mov
and
adc
loop
sub
cmps
ja
jae
cdq
int3
fmul
jne
movs
ins
mov
push
js
movs
mov
pop
in
cdq
and
cld
or
cmp
jg
sub
ja
rcr
jmp
(bad)
mov
pop
mov
scas
call
mov
pop
inc
lds
sti
popa
jmp
mov
push
add
and
outs
inc
daa
aad
push
mov
pop
in
mov
mov
(bad)
pop
mov
bound
stos
fdiv
sahf
mov
and
ror
xor
adc
mov
(bad)
cmp
xchg
fwait
cmp
mov
cmp
loop
ror
inc
jns
cwde
sub
add
enter
in
xchg
dec
imul
nop
loope
push
push
add
int
mov
mov
mov
and
push
mov
popa
or
mov
sub
push
test
sbb
pop
mov
sbb
dec
in
push
jl
push
jmp
pop
ficomp
fild
fisub
stos
and
sub
fild
sub
mov
push
cmp
jo
xor
sub
or
mov
adc
jecxz
popf
imul
dec
in
push
cmp
mov
(bad)
and
sub
or
dec
stos
es
retf
sub
sub
mov
sub
add
imul
mov
adc
xor
mov
pop
inc
jo
xchg
sub
pop
or
clc
ja
sbb
aas
fwait
mov
xchg
inc
in
cmp
xchg
mov
sbb
(bad)
rol
jb
cdq
jg
mov
adc
pop
jns
inc
(bad)
push
sbb
mov
and
clc
lahf
mov
inc
push
movs
(bad)
jmp
xchg
punpckldq
inc
out
test
test
adc
shl
cs
fdiv
pop
sub
push
cld
stos
gs
fst
mov
nop
outs
clc
xor
icebp
add
lea
dec
fimul
sub
(bad)
fistp
arpl
push
inc
or
(bad)
mov
es
mov
cmp
retf
mov
inc
hlt
jecxz
in
mov
mov
or
out
ja
mov
test
test
je
popf
jmp
or
sbb
push
push
adc
rcl
lods
mov
xchg
bound
mov
bound
bound
cwde
fistp
hlt
xchg
jmp
xchg
add
aam
jle
inc
stc
inc
vhaddpd
cmp
std
mov
pop
les
aas
sbb
(bad)
mov
lock
and
in
lahf
retf
xchg
pop
cmps
ins
mov
adc
or
js
ja
mov
and
dec
add
jnp
loopne
bound
or
dec
fidivr
lock
push
mov
outs
pop
sub
jbe
push
push
jmp
sbb
xchg
sub
das
pop
sbb
pop
lods
mov
jno
int3
(bad)
in
inc
dec
add
fs
push
cmp
hlt
mov
inc
mov
aas
call
xlat
nop
inc
sbb
xor
adc
xor
inc
es
lods
clc
dec
loope
fdivr
adc
push
into
clc
lea
fwait
inc
jmp
mov
mul
add
xchg
ret
cmp
xor
adc
pop
or
je
(bad)
js
call
leave
pop
sbb
(bad)
cmp
cmovb
sbb
mov
sub
mov
sub
inc
fld
scas
pop
sbb
sbb
jle
out
arpl
adc
pop
out
mov
lods
out
fsubr
mov
adc
lahf
add
mov
int3
add
add
pop
inc
daa
or
stos
cmc
push
int
mov
jecxz
push
push
shl
pop
mov
jle
sub
call
inc
(bad)
mov
shr
and
cmp
push
push
hlt
loopne
mov
outs
push
push
outs
js
dec
lahf
sub
fist
outs
adc
xor
push
scas
fcomp
mov
call
push
retf
pop
adc
std
or
(bad)
fadd
mov
movs
sbb
mov
outs
out
jne
mov
(bad)
jl
fdiv
inc
mov
cmc
jae
mov
push
sbb
mov
xchg
push
xchg
mov
dec
mov
or
test
data16
mov
jnp
rcr
push
inc
stc
stos
inc
adc
jge
dec
jecxz
mov
rol
mov
inc
lahf
outs
adc
add
jmp
dec
sar
dec
in
(bad)
ror
pop
cmp
stos
jle
sbb
in
js
call
shl
sahf
jne
popa
mov
scas
aas
js
bswap
push
(bad)
cmp
out
add
iret
mov
push
sar
mov
dec
fcom
mov
imul
dec
dec
jbe
mov
(bad)
pop
cmps
add
ror
dec
inc
call
stc
sub
add
jmp
cs
dec
jmp
mov
test
les
mov
je
fisubr
jl
pop
fwait
jle
es
dec
ret
jmp
leave
in
or
mov
inc
daa
mov
mov
add
or
icebp
in
lahf
dec
jp
fdiv
jecxz
leave
(bad)
sti
and
fdiv
or
out
in
sub
je
or
mov
imul
sbb
pop
xor
shr
jecxz
popw
loop
sbb
add
pop
dec
fcomip
fmul
adc
fist
xchg
mov
imul
mov
and
pushf
jg
xchg
adc
and
pop
cmp
sbb
cmp
pop
(bad)
repnz
iret
cs
inc
mov
mov
jle
outs
in
or
out
in
arpl
repnz
gs
mov
daa
call
arpl
out
(bad)
pop
mov
daa
les
push
mov
neg
adc
retf
ins
sub
cli
sub
jbe
sub
jecxz
push
call
cli
adc
nop
int
ss
fiadd
fucomip
in
xlat
mov
xchg
das
jge
sbb
(bad)
mov
loopne
stos
lea
repz
cwde
jmp
xor
xchg
in
call
pop
cs
adc
pop
push
in
icebp
popa
dec
inc
xor
cmp
test
cmp
fild
inc
mov
je
mov
cmp
or
add
and
push
test
or
rcl
and
call
push
cmc
sbb
cmp
scas
outs
(bad)
lock
xchg
xchg
in
add
js
push
repz
cdq
sub
cmp
mov
xchg
fcmovu
repnz
cmp
sbb
mov
popa
push
or
cli
mov
js
outs
cmp
mov
cmp
mov
(bad)
aam
movs
fwait
lea
mov
and
mov
nop
lods
cmp
mov
adc
loope
mov
(bad)
inc
shr
add
clc
add
sub
jne
das
xchg
addr16
out
in
jae
dec
jmp
jb
jecxz
mov
ds
xor
dec
jge
add
movs
push
dec
sub
mov
clc
ins
or
into
push
push
mov
xor
shr
mov
sbb
cwde
push
mov
inc
in
or
xchg
inc
arpl
mov
mov
adc
jle
ss
sar
cmc
xchg
not
mov
addr16
xchg
pop
mulps
retf
sub
lock
push
test
inc
fadd
js
popa
dec
test
fisubr
fcom
repnz
mov
push
pop
jbe
xchg
ins
push
mov
mov
jecxz
shl
imul
adc
mov
scas
in
cmps
dec
mov
addr16
jbe
jns
add
into
mov
mov
outs
iret
xchg
ret
gs
fild
dec
ja
or
jbe
repnz
movs
jnp
fadd
ds
dec
idiv
add
hlt
sub
inc
in
stos
inc
and
push
xor
retf
and
push
inc
cmp
jg
xor
imul
dec
cmp
stos
ret
jne
lock
push
ja
sbb
mov
xchg
lods
bsr
xlat
popf
retf
adc
test
add
xchg
cld
mov
stos
inc
jecxz
out
xchg
sti
(bad)
loop
fist
mov
repnz
add
fs
popf
popf
adc
inc
fcmove
jmp
dec
clc
add
xchg
outs
movs
cs
arpl
pop
adc
mov
mov
jb
stc
fimul
hlt
mov
add
lea
and
sti
mov
pop
jl
add
or
jns
lock
adc
mov
pop
jmp
into
shl
add
or
scas
pop
test
sahf
pop
xchg
mov
mov
jp
pop
add
bound
ss
(bad)
mov
int
dec
aaa
neg
dec
xchg
and
sbb
sub
mov
mov
add
or
adc
dec
sub
dec
or
or
push
pop
scas
aas
push
lods
scas
stos
and
or
sub
mov
dec
sub
mov
jge
test
(bad)
xor
ins
cmp
jae
sub
xchg
daa
iret
cmc
pop
icebp
add
mov
mov
push
mov
add
jge
mov
stc
push
mov
mov
mov
add
pop
(bad)
loope
scas
cmps
test
pop
add
and
push
daa
aam
xor
xchg
xchg
popf
ins
jg
out
jle
aaa
out
dec
cld
ret
(bad)
push
(bad)
jle
dec
addr16
scas
lea
xchg
pop
aad
test
lds
dec
cld
xor
sbb
or
aad
mov
add
adc
push
test
and
dec
mov
mov
or
or
dec
scas
mov
pop
loopne
xchg
jo
pop
and
ficomp
cmp
push
sbb
stos
mov
aam
and
push
pop
cld
test
sar
sbb
push
nop
push
and
sub
inc
shr
jp
stos
arpl
dec
jns
adc
test
int
xor
mov
xchg
xor
mov
ins
mov
xchg
mov
mov
pop
int
jecxz
jmp
lahf
mov
inc
adc
and
outs
xchg
stos
cmp
mov
or
pop
(bad)
(bad)
push
push
or
and
fnstsw
dec
clc
shl
push
push
mov
aaa
daa
cld
inc
push
dec
ficom
xchg
and
fs
ds
cmp
ja
iret
cwde
call
push
mov
cmp
stc
mov
fild
fild
es
ret
arpl
loopne
add
push
std
sahf
cmp
lahf
pushf
ret
sbb
adc
movs
inc
lock
scas
aas
push
xor
sti
dec
ret
adc
xchg
fcomp
dec
push
mov
imul
test
inc
ds
imul
hlt
or
mov
cli
fsub
shr
jns
sbb
mov
pop
test
frstor
outs
dec
mov
pop
in
push
pop
rcr
scas
mov
sub
lods
cmp
jmp
mov
retf
dec
int3
nop
movs
fcmovne
enter
cld
clc
pop
(bad)
xlat
pop
(bad)
xchg
lods
jne
ja
daa
jbe
std
xlat
inc
pop
pop
jbe
lock
sbb
hlt
add
ret
jne
xor
jbe
dec
test
push
pop
sbb
loopne
push
mov
mov
pop
loop
mov
mov
push
inc
lods
or
bound
adc
cld
lds
(bad)
rcl
cld
outs
fwait
test
push
adc
pop
dec
lds
mov
mov
and
clc
mov
popa
das
xchg
jge
call
ins
sbb
add
loop
outs
cli
sti
xor
jbe
fldenv
add
jmp
sbb
sub
and
daa
test
push
cmps
lea
sbb
jbe
mov
cmps
call
mov
mov
push
ja
cmp
push
arpl
into
xor
(bad)
dec
fcmovbe
jne
in
xor
js
cmp
cmp
mov
pop
pusha
and
mov
in
cmp
xchg
pusha
inc
cmp
(bad)
and
xor
jge
fistp
icebp
fs
cmps
(bad)
mov
out
rcr
test
xchg
lahf
jae
pusha
mov
lock
imul
into
ds
sbb
aaa
test
cwde
mov
cli
jge
sbb
jmp
retf
(bad)
push
jmp
wbinvd
mov
call
pop
add
not
outs
shr
(bad)
pushf
push
rcl
pop
call
mov
jle
out
call
add
imul
movs
adc
(bad)
gs
jne
sub
pusha
ds
jnp
pop
adc
(bad)
sub
aas
jp
(bad)
jno
xor
lods
mov
imul
loopne
mov
mov
sbb
pop
jno
out
jae
mov
push
push
push
(bad)
cdq
mov
jno
mov
mov
jbe
xor
jbe
and
call
loope
cmp
inc
lods
cld
adc
mov
std
idiv
sub
int3
jns
dec
call
pop
aam
jp
dec
cmp
ffreep
imul
mov
ins
fs
mov
popf
jl
add
mov
ja
call
or
fcom
push
inc
adc
shl
jne
adc
push
add
dec
shr
outs
test
mov
adc
mov
xchg
cmps
repz
test
pushf
pop
or
dec
lods
mul
outs
inc
push
shr
scas
push
push
cmp
shl
js
jl
aad
mov
ins
(bad)
lock
aam
arpl
mov
leave
popa
xchg
push
inc
call
stos
jne
and
add
sahf
adc
aam
ins
ret
hlt
inc
pop
xchg
pusha
inc
or
mov
imul
shl
cld
pusha
or
ja
test
fdivr
add
data16
lea
stc
adc
xchg
pop
xchg
pop
mov
jle
retf
dec
mov
pop
(bad)
ds
pop
fidivr
mov
jge
js
scas
push
fstp
jmp
std
dec
jge
out
dec
in
(bad)
fs
ret
dec
lds
xchg
push
xchg
mov
shl
sub
jle
and
add
movs
cwde
js
fcom
xor
sahf
mov
ret
je
gs
xor
aam
out
inc
imul
mov
sti
mov
dec
cmp
in
sbb
imul
mov
xor
push
clc
mov
out
sub
adc
fdiv
lea
in
pop
mov
or
mov
pop
imul
rcr
sbb
data16
cs
mov
xchg
add
iret
xchg
(bad)
pop
test
xor
out
(bad)
imul
fbld
movs
xchg
and
aam
cdq
cwde
dec
pop
xlat
test
cdq
out
lds
cmp
stos
jb
mov
sbb
xchg
call
inc
jnp
inc
pop
repz
jl
jl
and
or
pusha
sbb
scas
test
std
ds
jp
fld
loope
xor
xor
mov
test
jb
arpl
mov
iret
sub
test
cmps
push
push
pop
jb
mov
or
sbb
or
repnz
mul
ror
cmp
sub
sahf
es
lods
push
loop
leave
or
dec
dec
mov
inc
lds
gs
dec
cmp
dec
arpl
leave
les
xchg
mov
inc
jge
mov
imul
or
cmp
lds
inc
loope
sbb
or
sbb
lods
sbb
cmp
dec
adc
in
loop
dec
sbb
ja
mov
and
inc
pop
inc
mov
xchg
cmc
jp
call
aaa
fnstsw
push
adc
dec
lock
ins
inc
mov
xor
sub
mov
cld
mov
aaa
dec
xchg
pop
push
ins
aad
cmp
mov
in
dec
mov
pusha
xor
int3
and
loopne
jge
xor
jg
shufps
adc
dec
mov
mov
mov
pop
retf
les
jno
xor
cli
sbb
jmp
test
(bad)
jl
cmps
jecxz
pushf
movs
or
shl
mov
ins
xor
fstp
test
pop
or
cmps
in
xchg
or
in
mov
mul
cmp
jle
ds
jnp
jmp
ds
sbb
je
mov
inc
and
mov
or
rol
nop
and
dec
jno
shr
mov
sub
das
jnp
int
add
leave
int
fwait
dec
call
stc
fisttp
cmp
stos
aas
scas
aam
call
fild
cmp
mov
cmp
lahf
repnz
mov
into
rol
sub
pushf
mov
or
xchg
jbe
push
mov
(bad)
enter
sub
xchg
pop
mov
cmps
jo
fild
mov
sti
inc
imul
mov
test
in
test
data16
mov
push
loopne
dec
fnstsw
sub
push
movs
lea
push
mov
dec
mov
arpl
mov
movs
shl
arpl
call
cmps
dec
sbb
or
aaa
and
cmps
fdiv
inc
and
pushf
mov
jo
inc
das
lods
sub
cwde
and
(bad)
out
jecxz
inc
pop
cli
fwait
repz
pop
push
aad
in
movs
lods
arpl
mov
xchg
out
pop
jg
fnstcw
outs
pop
in
mov
add
fdiv
mov
or
inc
popa
out
inc
out
pusha
cmp
cmps
pop
xor
in
repz
xchg
adc
repz
or
push
inc
mov
fimul
das
jb
or
cmps
out
test
and
cmp
inc
mov
cmp
call
shl
daa
push
mov
and
unpckhps
in
dec
xchg
test
shl
in
sbb
push
gs
xchg
pop
mov
or
jno
(bad)
enter
jbe
bound
adc
push
aam
push
(bad)
test
outs
iret
push
push
das
rol
add
retf
adc
icebp
(bad)
push
xor
xchg
pop
fs
pop
es
jmp
push
outs
jns
lock
jne
rcr
pop
(bad)
call
loop
jg
cmc
repz
xchg
mov
push
jle
fdivr
sar
mov
sti
mov
imul
fiadd
shl
mov
lea
cmps
stc
dec
add
push
lahf
dec
in
sub
mov
stos
dec
jge
xchg
shl
(bad)
cwde
push
mov
fs
(bad)
cs
push
xlat
fiadd
jp
mov
loop
mov
and
mov
xor
pop
hlt
clc
pop
ret
aaa
mov
test
xlat
push
mov
mov
movs
add
xchg
(bad)
rol
jbe
lea
jno
xchg
fndisi(8087
pushf
and
xor
ja
jecxz
cmps
aaa
cmps
jne
iret
bnd
bound
sub
adc
retf
jbe
pop
push
aaa
jnp
pop
nop
add
arpl
mov
mov
mov
inc
sub
xchg
loopne
inc
or
mov
cmp
and
mov
adc
jmp
lea
pop
mov
mov
mov
add
dec
loope
in
mov
es
addr16
aaa
dec
inc
popf
xchg
fwait
loope
mov
add
sbb
(bad)
push
out
mov
aaa
mov
loop
mov
mov
dec
(bad)
cmp
inc
lods
mov
std
in
and
out
xchg
loopne
push
lahf
pop
repz
lods
dec
or
jnp
xchg
(bad)
sub
cwde
sbb
dec
cmp
jg
cmp
push
pushf
mov
ret
dec
mov
jnp
jmp
dec
addr16
sub
repz
cld
and
pop
inc
cmp
jo
mov
cli
pop
add
jecxz
adc
sub
mov
not
and
icebp
pop
mov
jno
mov
arpl
fs
pop
pusha
daa
mov
movs
int3
je
adc
fld
mov
sub
add
je
stc
push
jecxz
jge
lahf
pop
mov
mov
aaa
adc
cmps
in
aas
push
popa
std
stos
mov
pop
cs
fwait
gs
sub
inc
rcr
or
call
rcr
mov
sbb
fimul
sub
inc
jmp
repnz
pop
fcom
add
arpl
xor
mov
neg
jno
pop
pushf
cmp
mov
movs
nop
xchg
shl
gs
xchg
adc
inc
and
(bad)
cld
xchg
inc
mov
and
push
mov
repnz
adc
(bad)
ds
push
xchg
fadd
pop
or
add
mov
aam
pop
(bad)
out
mov
jl
sub
lea
ins
movs
adc
ins
xchg
xchg
cs
dec
mov
mov
sti
mov
jecxz
in
loopne
add
cmps
push
repz
push
jecxz
mov
adc
push
pop
dec
sbb
push
ror
sub
shl
adc
pusha
bound
push
stc
sbb
xor
pop
jmp
sbb
bound
mov
jmp
sbb
pop
test
pop
(bad)
loop
pop
mov
push
sti
cmc
xor
push
pop
mov
rol
xchg
pop
jl
sub
cmc
movs
cmp
adc
push
adc
ja
xor
mov
shr
xchg
ror
je
daa
aam
(bad)
das
push
psllw
mov
jne
lea
or
add
pushf
or
lahf
inc
dec
sub
jge
jb
aad
inc
rol
jno
pop
hlt
jbe
xlat
jne
mov
(bad)
push
stc
mov
inc
sbb
and
xor
stc
or
call
inc
loopne
cs
aam
mov
test
fnsave
cmp
stos
dec
mov
or
xchg
cmp
popf
xor
sbb
(bad)
mov
inc
ror
jmp
std
jecxz
adc
inc
movs
and
ins
std
adc
test
mov
sub
mov
mov
imul
push
stos
call
jge
mov
jbe
pop
repz
pusha
jo
fs
lds
mov
fld
and
sub
mov
rcr
jg
adc
ret
mov
ret
sub
sbb
sbb
and
push
sti
aas
adc
cmp
inc
shl
ins
cs
fsub
es
(bad)
loope
enter
sub
popf
push
sar
mov
mov
pushf
push
div
ficomp
add
pop
dec
mov
retf
into
mov
jmp
and
mov
sar
lock
sbb
adc
jns
pop
xchg
lds
js
xchg
lods
jne
aam
and
adc
xor
ror
repnz
dec
arpl
lea
push
dec
pop
pop
adc
add
lea
test
ret
mov
shl
fistp
push
pop
and
lods
(bad)
fwait
sbb
adc
lods
inc
xchg
xor
sub
inc
movs
lds
mov
inc
push
mov
into
sahf
loop
pop
jle
cmp
sub
out
xor
(bad)
fstp
ss
lods
fst
and
dec
ja
ins
es
call
stos
loopne
jae
push
ins
stos
and
sub
push
in
lea
or
call
imul
dec
sar
(bad)
(bad)
call
push
xchg
sub
mul
dec
dec
cmps
mov
ds
inc
nop
bound
and
ror
sbb
sti
cld
loope
ja
cli
imul
sbb
inc
jns
mov
push
leave
mov
fimul
cdq
cli
retf
repnz
inc
xor
fstp
repnz
mov
(bad)
loop
add
push
xor
cmp
or
inc
in
sbb
pop
pop
mov
jg
scas
out
cmp
arpl
jp
and
pop
inc
popa
mov
or
cmps
sbb
int
ret
inc
and
test
mul
mov
jecxz
jge
sub
mov
cdq
loope
sbb
ins
jae
fdiv
cvtps2pi
xor
inc
pop
or
dec
push
inc
mov
add
cmp
ins
into
jmp
mov
xor
(bad)
int
(bad)
in
or
pusha
mov
sar
push
and
cwde
jge
add
sbb
inc
out
pop
pop
cmps
mov
movs
(bad)
loopne
ja
fisub
in
popf
and
dec
lods
dec
inc
cdq
dec
mov
pop
inc
imul
ror
fadd
ins
add
jne
xor
xchg
pop
lock
in
lock
dec
mov
add
add
outs
inc
test
sub
cmp
and
fdivr
nop
fdivr
inc
bound
adc
xor
pop
and
aad
aas
inc
arpl
scas
fs
jae
xchg
in
ret
dec
mov
add
jmp
into
mov
dec
in
dec
adc
inc
mov
(bad)
lods
fldcw
das
xchg
cli
aaa
dec
push
fisub
xor
dec
push
push
dec
push
fimul
stc
pop
add
push
daa
lods
iret
scas
xchg
lock
sbb
sbb
cli
add
aas
pop
add
leave
addr16
sub
sub
jb
mov
packuswb
jmp
jns
mov
jge
add
pop
inc
gs
xor
fmul
mov
push
mov
clc
sub
push
or
push
mov
pop
pop
cmp
mov
xchg
test
jb
aad
gs
gs
cli
mov
mov
cmp
sar
test
push
imul
retf
mov
jo
mov
aas
ret
les
sahf
cmp
sub
xor
clc
inc
mov
xchg
push
or
mov
sub
mov
dec
mov
lods
xchg
fwait
in
ret
mov
(bad)
(bad)
mov
jmp
lahf
jp
adc
cmp
enter
inc
pop
loopne
dec
mov
add
jge
lea
es
mov
or
xor
jecxz
inc
mov
mov
jmp
lea
enter
xchg
jno
dec
test
mov
push
out
mov
mov
js
push
push
aas
mov
mov
test
loop
jge
cmp
push
cmp
pushf
or
jl
inc
adc
into
test
(bad)
mov
lods
fild
mov
xchg
jns
jmp
xor
push
dec
xchg
push
mov
dec
xchg
sub
cmc
leave
sbb
scas
ret
outs
fmul
push
dec
cmp
outs
dec
jecxz
out
mov
imul
mov
into
or
out
(bad)
jno
jmp
cmp
(bad)
pcmpgtb
out
or
add
es
test
jle
push
fidiv
dec
retw
call
lds
jp
cmp
outs
mov
mov
push
push
xor
add
push
lods
push
push
add
es
cmc
mov
or
push
push
out
adc
(bad)
das
(bad)
jmp
(bad)
out
or
add
cmp
push
aas
jl
mov
in
scas
pop
or
shl
rcl
gs
sub
(bad)
sbb
sub
aas
sbb
xchg
leave
(bad)
pop
fsubr
sbb
enter
outs
mov
fistp
cmc
arpl
ins
rol
xlat
or
dec
pop
adc
stos
out
or
xchg
test
imul
bound
mov
cmc
ficomp
stos
add
sub
pop
ins
dec
cmp
pop
xchg
jne
pop
pop
cld
mov
dec
cdq
jmp
pop
test
dec
xchg
pop
inc
shl
ret
(bad)
mov
stos
push
mov
mov
cmps
cwde
leave
mov
jg
or
imul
pop
ins
loopne
(bad)
out
dec
cmp
dec
hlt
iret
mov
xor
ds
lock
jo
fimul
mov
pop
sbb
inc
mov
lahf
enter
push
jne
mov
mov
xor
gs
movs
sbb
cmps
mov
dec
stos
test
inc
mov
int3
push
adc
clc
jmp
rcr
or
(bad)
idiv
pop
or
aaa
movs
jp
pop
fld
dec
cld
pop
mov
(bad)
jle
cmc
add
inc
mov
cmp
imul
mov
add
inc
xor
lahf
dec
out
movs
xor
aad
adc
sbb
cmp
add
pop
jns
fcmovbe
pop
jge
xor
add
mov
cld
in
cs
dec
repz
xor
sbb
hlt
(bad)
xor
mov
(bad)
pop
xchg
ds
es
out
jbe
or
add
cmp
and
out
mov
mov
popa
mov
cmp
sbb
jl
mov
mov
shl
mov
or
sahf
mov
nop
mov
clc
sub
and
fild
xor
xchg
cmps
jg
jns
les
sub
xchg
mov
lds
aaa
or
call
jecxz
pushf
or
mov
push
rcl
jmp
mov
mov
je
scas
and
ret
adc
adc
dec
or
xor
jnp
jbe
cmp
lods
or
cmp
retf
mov
mov
shl
stos
icebp
jmp
fwait
in
push
mov
push
jmp
mov
sti
push
jns
mov
mov
xor
dec
xchg
test
sub
jne
loope
push
fbld
neg
ror
mov
daa
dec
and
loopne
test
sub
and
fistp
sub
adc
xchg
xchg
mov
and
mov
std
inc
mov
mov
fcmovbe
push
cmp
fnstcw
pop
sbb
add
mov
or
rol
int3
sti
addr16
push
sbb
cmp
neg
xchg
(bad)
fild
xor
js
jne
mov
inc
arpl
out
push
mov
data16
jbe
(bad)
fisttp
mov
js
jle
jnp
popf
repz
cmp
jno
add
jle
shl
test
mov
out
(bad)
jge
popa
outs
lods
out
std
fscale
jae
cmp
sub
and
cmp
and
add
call
push
into
pop
push
stos
inc
cdq
cmp
or
pop
jecxz
test
jns
jl
push
js
das
dec
lahf
cmps
ror
cmp
sub
mov
push
add
jp
clc
mov
int
gs
and
mov
inc
adc
jecxz
cwde
push
scas
cmp
or
out
push
jge
icebp
and
fstp
or
fild
dec
mov
sbb
push
push
xor
jbe
push
push
push
leave
mov
and
mov
mov
and
loopne
lods
addr16
inc
fild
inc
pushf
scas
sub
stos
movs
hlt
fmul
aas
mov
or
iret
adc
jae
loop
push
daa
stos
imul
movs
jecxz
bnd
adc
out
cdq
pop
fldenv
jae
fld
ins
dec
push
cmp
mov
call
cmp
leave
and
jmp
sub
rol
fsubrp
xchg
cmp
dec
retf
pushf
push
ins
sbb
sub
scas
mov
jb
jno
cmp
inc
inc
js
pop
sbb
and
or
xchg
xchg
leave
dec
push
call
dec
or
push
test
mov
push
adc
push
sahf
(bad)
jnp
rcl
push
xor
sub
mov
xchg
push
(bad)
(bad)
cmp
js
xchg
out
mov
loop
pop
in
and
push
inc
sbb
loopne
push
xchg
lock
xor
jno
jb
test
push
scas
movs
cwde
cmp
aad
push
arpl
int
jno
int
xchg
add
sub
and
fst
xchg
xchg
push
inc
add
or
outs
jmp
mov
(bad)
mov
add
sbb
xchg
xlat
fdiv
inc
ja
(bad)
mov
std
mov
pop
cld
outs
jae
lock
int3
mov
retf
(bad)
jmp
call
jb
cmp
mov
push
jmp
adc
call
in
add
repz
mov
or
lock
pop
int3
pop
jecxz
call
xchg
ss
fdivr
out
sub
mov
sub
aam
test
lods
cmp
repnz
xor
xchg
mov
(bad)
movs
int
and
mov
mov
xchg
imul
mov
je
ror
cmps
push
scas
sub
xchg
xor
xchg
dec
test
xor
sub
js
movs
clc
daa
inc
cdq
jae
sub
in
mov
cmp
push
jp
ja
mov
push
inc
in
(bad)
jecxz
cmp
sbb
rol
cmp
mov
xor
es
sub
fsubr
(bad)
fadd
ror
fs
adc
je
push
in
(bad)
push
push
cld
repz
jge
aaa
retf
into
stc
or
jecxz
loopne
lock
(bad)
(bad)
int
push
cwde
outs
mov
sbb
test
mov
stos
sub
jge
pop
or
and
les
push
jo
outs
mov
adc
push
sbb
xchg
(bad)
fild
jns
es
mov
xchg
cmps
jmp
repz
xchg
mov
add
or
shr
sub
dec
sub
cmp
cmp
je
xchg
(bad)
movs
adc
push
adc
repnz
jge
adc
pop
push
dec
push
loop
xchg
lock
ret
or
scas
inc
jge
fisub
aas
mov
and
fsub
jb
fwait
dec
or
pop
jge
or
aaa
push
jl
jae
int
jmp
mov
jae
inc
sub
repz
pushf
into
adc
or
inc
iret
and
dec
jne
jnp
cmps
or
xchg
jmp
jg
sub
call
pop
enter
xchg
sub
and
push
inc
cmps
mov
div
and
mov
popf
jmp
aad
xor
push
shr
dec
cs
inc
les
clc
pop
mov
jb
fimul
das
inc
jmp
es
and
inc
rcl
xchg
in
add
cmp
out
outs
push
popf
test
loope
fiadd
shr
inc
inc
add
test
or
js
retf
(bad)
push
or
sbb
loopne
repnz
cdq
cmps
dec
lea
xchg
imul
arpl
push
jl
push
push
xor
stc
pop
outs
pop
pop
jmp
sub
movs
sti
and
lahf
daa
ss
je
inc
pop
sar
mov
xlat
stos
and
xchg
adc
retf
fidivr
(bad)
enter
in
pushf
cmps
dec
pushf
or
(bad)
dec
fimul
inc
mov
mov
sbb
rol
push
ja
out
(bad)
lods
push
div
icebp
addr16
and
cwde
lods
or
push
and
aad
cmp
xor
daa
mov
mov
test
push
mov
xchg
daa
jne
push
and
pop
les
repz
jge
xchg
xor
pop
and
pop
loope
sub
jne
jge
adc
in
out
xchg
aaa
push
das
sub
stos
xchg
or
cmp
nop
ret
in
(bad)
jmp
stc
std
mov
int
pop
je
jne
ret
dec
in
cmp
in
inc
ret
in
adc
and
pop
retf
(bad)
call
je
mov
inc
xchg
test
(bad)
mov
pop
shrd
loop
dec
ffreep
lea
fbstp
dec
or
mov
(bad)
aaa
daa
nop
in
sub
(bad)
jge
ja
mov
pop
lods
fidivr
loopne
push
fnstenv
push
(bad)
lock
lahf
stc
mov
pop
inc
mov
out
lock
iret
lds
sbb
aam
fcom
inc
not
jno
clc
gs
pop
xor
mov
mov
dec
shl
rol
sahf
jecxz
pop
addr16
push
pop
dec
pop
inc
jp
xor
and
fisub
out
cmps
jl
lods
sti
inc
and
jecxz
adc
or
fistp
outs
ret
jge
cmps
mov
pop
push
inc
push
aam
dec
repnz
mov
mov
jo
fwait
daa
retf
imul
or
imul
call
cmp
mov
imul
fdiv
adc
les
cmps
pop
retf
push
mov
call
shr
xchg
fisubr
lods
mov
jno
outs
jno
stos
clc
int3
xor
xor
jnp
ret
sbb
and
and
jge
fstp
inc
outs
xor
push
adc
or
pop
sub
inc
enter
ror
out
and
pop
ds
lea
out
jo
lods
int3
ss
stc
clc
and
std
pop
adc
mov
(bad)
sti
push
add
push
xchg
xor
cmp
(bad)
nop
add
xchg
retf
mov
test
mov
add
out
stc
das
int3
movs
js
adc
lods
ret
ds
and
mov
cwde
jl
cli
test
jae
aam
jmp
pop
je
popf
lea
les
in
int3
sbb
adc
repz
cmp
jae
repz
xchg
es
cmp
push
pop
cmp
pop
cld
pop
daa
in
xchg
mov
cld
mov
dec
xor
add
js
dec
test
fcomp
mov
mov
jecxz
lods
pop
cli
mov
sub
jne
(bad)
in
and
test
add
add
pop
pop
lds
les
imul
cmp
icebp
mov
dec
mov
inc
xor
adc
sbb
outs
push
xor
or
ins
push
and
(bad)
fild
ret
test
dec
sbb
test
inc
sbb
cdq
dec
ret
push
push
push
mov
ins
adc
cmp
fcomp
loope
retf
and
jb
mov
les
and
xor
stos
jl
(bad)
retf
sub
mov
test
retf
dec
sbb
xchg
sahf
mov
xchg
sub
mov
push
cli
xor
ja
mov
mov
lock
cdq
mov
lods
stos
das
ficom
jno
fs
mov
inc
stos
jo
jp
push
in
inc
loop
dec
inc
lahf
pop
mov
pusha
(bad)
jnp
cmp
xlat
movs
call
repz
sti
mov
bound
(bad)
les
cs
mov
aas
retf
mov
cmps
and
lea
or
(bad)
jmp
(bad)
mov
jns
pop
fwait
js
fidivr
lds
std
xchg
int3
stos
lea
outs
jo
and
fldenv
mov
js
stos
or
add
cmp
dec
imul
je
cmps
adc
mov
ins
push
dec
aaa
(bad)
movs
sar
push
mov
fwait
fwait
cmp
scas
jle
ja
push
call
and
aas
(bad)
out
mov
xchg
out
test
cmp
stc
mov
pop
jecxz
aam
mov
test
das
sbb
pop
mov
mov
sub
retf
call
mov
mov
pop
dec
xchg
mov
lods
mov
mov
xor
push
push
movs
xchg
lds
sub
inc
lds
xchg
sbb
mov
pop
or
mov
mov
lahf
push
retf
aad
jg
cs
sbb
adc
and
les
adc
adc
jecxz
push
test
mov
mov
rcr
cld
pop
in
out
cdq
popf
inc
push
cld
sub
or
xchg
fimul
xchg
pop
pop
push
fucomp
imul
outs
icebp
pop
fs
call
mov
mov
addr16
jns
icebp
xchg
cmp
test
cmc
js
mov
and
pop
and
or
jmp
icebp
xor
into
inc
push
xor
inc
mov
sbb
mov
popa
sbb
adc
jne
jnp
jge
out
scas
lock
test
inc
jo
fs
sbb
xchg
jle
es
aas
(bad)
stc
mov
(bad)
mov
mov
jmp
es
rcl
adc
in
imul
cmp
iret
sub
shl
scas
mov
mov
dec
xor
in
or
(bad)
fiadd
dec
jbe
repz
mov
test
cmp
inc
ret
xor
mov
sub
repz
loopne
mov
data16
outs
push
mov
mov
lock
sahf
pusha
add
sahf
xchg
mov
pop
jecxz
push
inc
stc
and
enter
ficomp
push
sub
dec
fcmovnbe
mov
mov
sbb
push
stc
jbe
icebp
jae
jmp
call
adc
mov
aad
fucom
cmp
(bad)
bound
mov
mov
push
sahf
outs
jnp
add
mov
sbb
mov
cwde
fnsave
add
std
jecxz
out
(bad)
(bad)
mov
xor
sub
call
and
test
or
xlat
pusha
fisttp
movs
stc
iret
mov
arpl
hlt
mov
and
loope
inc
sub
ins
or
sub
xor
mov
sbb
mov
add
cmp
cmc
jg
ror
mov
xor
fadd
aam
jg
into
ss
hlt
out
call
jmp
adc
js
out
xchg
add
not
fisttp
pop
sbb
arpl
fld
arpl
add
or
inc
iret
ins
push
sub
mov
inc
mov
xchg
stos
adc
out
outs
scas
sub
adc
xor
shl
sti
pop
imul
dec
pop
ins
add
mov
pop
addr16
sbb
pusha
enter
repnz
and
aam
or
mov
sbb
xor
or
cld
rol
push
fst
and
push
and
jae
fld
sub
data16
pop
pop
repz
or
sbb
dec
imul
ja
std
outs
mov
ret
push
mov
pop
arpl
pop
mov
test
cmp
or
clc
pop
cmp
out
stc
sbb
cs
jns
cmp
neg
std
dec
retf
push
fucom
(bad)
and
adc
push
xchg
mov
mov
call
xor
xchg
pusha
(bad)
call
add
outs
int3
inc
jmp
call
mov
cmp
add
mov
pop
xchg
daa
dec
xchg
adc
mov
add
cwde
mov
mov
fyl2xp1
in
inc
inc
outs
push
sbb
aaa
(bad)
jo
and
aad
jb
and
mov
push
xor
arpl
mov
jbe
mov
in
fiadd
dec
push
pop
(bad)
adc
imul
stc
cmc
in
adc
sbb
adc
out
inc
cdq
cmps
inc
cwde
stc
mov
sbb
imul
cdq
mov
cmp
das
lods
jp
call
or
loop
mov
shr
or
mov
push
aas
(bad)
inc
stos
aaa
mov
stos
out
outs
int3
outs
pusha
dec
xchg
xor
mov
jl
mov
pop
dec
and
xor
(bad)
clc
pop
movs
stc
into
add
add
lds
sar
or
js
xor
(bad)
lahf
dec
sub
iret
pop
mov
adc
cmp
xor
into
sti
inc
sub
(bad)
mov
jmp
shr
and
add
xor
pop
mov
mov
jns
or
cs
push
inc
inc
sub
adc
mov
pop
pop
ror
mov
lock
push
repnz
xchg
mov
add
std
mov
jl
jnp
mov
aad
jne
xchg
pop
rcr
lock
push
hlt
mov
int
mov
mov
adc
pop
loope
cmp
mov
jb
pop
pop
pop
or
sub
in
push
loope
pop
popa
ins
imul
cmp
jge
cmovs
call
jp
fiadd
jl
movs
cld
fdiv
mov
fst
mov
shr
ficomp
(bad)
mov
sub
rcr
inc
ffree
retf
xchg
cli
mov
loopne
std
sahf
(bad)
les
imul
mov
jp
(bad)
bound
mov
push
cmp
sub
lds
xchg
add
xchg
sbb
jecxz
(bad)
dec
inc
mov
cmp
invd
mov
pmaxub
fmul
cmps
mov
push
pusha
mov
or
sub
xor
in
ins
cmc
cdq
sbb
or
or
sti
xchg
xchg
cmp
popf
movs
mov
ins
mov
sbb
popa
ret
iret
xchg
sbb
out
mov
std
cdq
sbb
aas
dec
xchg
cli
xor
cld
int3
inc
cmp
out
enter
mov
fs
pop
mov
mov
dec
jbe
das
fwait
dec
out
cdq
enter
jg
arpl
pop
ins
je
add
outs
cmp
pushf
(bad)
cmp
xchg
(bad)
in
mov
mov
in
xchg
retf
test
push
fsub
jbe
xor
mov
aaa
sbb
push
mov
inc
test
push
hlt
clc
repz
push
push
xchg
out
mov
lods
xor
lea
sahf
daa
outs
sbb
lds
xchg
dec
ss
es
imul
mov
leave
out
or
push
xchg
push
xchg
pop
aad
mov
and
pop
jmp
mov
fstp
(bad)
out
xor
loopne
sub
pop
jo
icebp
fucomi
mov
loope
jecxz
rcl
adc
xor
cmp
pop
xchg
scas
in
xchg
mov
add
ins
loopne
jg
(bad)
cli
out
pop
sbb
aam
pop
add
nop
int3
jae
pop
dec
mov
mov
sub
repz
(bad)
enter
push
pop
add
ds
arpl
jmp
xchg
not
mov
pop
das
jae
inc
bound
test
mov
(bad)
in
sub
jmp
dec
cwde
ins
sub
or
retf
ficom
add
jbe
inc
xor
daa
fld
repz
mul
jp
les
imul
mov
sbb
xchg
cmove
adc
sub
push
pop
movs
ds
mov
in
aaa
retf
in
(bad)
les
cmp
sbb
or
push
push
cmp
pop
mov
lods
jne
shr
push
xchg
pop
shl
ror
pop
stos
push
fwait
sar
push
lea
(bad)
js
or
push
aad
fidiv
cmps
lds
mov
push
mov
mov
pop
call
in
inc
bound
jns
add
imul
loop
fsubp
push
add
jl
and
or
push
fist
bound
cmp
inc
ret
adc
sbb
add
mov
out
pop
add
push
push
mov
das
mov
imul
cli
and
lds
test
dec
sahf
and
outs
cmps
mov
das
mov
popa
push
fs
jbe
mov
jmp
cmp
(bad)
cmp
sub
mov
shr
sub
scas
mov
inc
test
pop
mov
(bad)
int3
add
cs
inc
test
std
xchg
ja
(bad)
sub
popf
push
fsubr
and
jg
push
enter
(bad)
(bad)
xchg
inc
or
pusha
test
mov
push
push
sub
and
rcl
out
movs
ins
mov
mov
jbe
sbb
jno
xor
pop
out
pslld
or
xchg
adc
mov
lods
jl
inc
mov
xchg
sbb
xchg
(bad)
fdiv
mov
les
ins
push
gs
mov
xchg
push
test
dec
fdiv
aaa
push
add
hlt
push
stos
pushf
mov
adc
and
loop
mov
addr16
out
mov
out
cmp
aam
sti
fcmovb
jb
push
jmp
add
pushf
cwde
mov
test
mov
sub
daa
lds
cmp
inc
pop
aas
popf
(bad)
adc
inc
retf
sbb
inc
ss
jns
mov
fdiv
icebp
fsubrp
loopne
add
in
repz
imul
xor
(bad)
call
or
or
lock
into
sbb
stc
ja
pop
sbb
sub
fwait
fs
push
imul
clc
and
mov
adc
sbb
hlt
rcl
mov
push
sub
fsub
fcomp
nop
in
fsubr
mov
mov
cdq
std
repz
sbb
call
cmp
and
test
pop
add
(bad)
push
dec
xchg
mov
mov
ror
hlt
mov
fs
punpckhdq
or
enter
pop
ret
push
and
addr16
jp
lds
pop
cmps
push
out
dec
inc
femms
dec
sub
arpl
fsub
xor
das
fmulp
pop
lea
sti
jbe
xlat
or
adc
js
jge
and
std
pop
sub
hlt
xlat
push
hlt
cli
lds
push
rcr
neg
es
in
push
dec
jge
push
stos
fstp
icebp
jno
xchg
fstp
xor
push
or
ja
movs
(bad)
in
push
and
push
inc
mov
adc
sbb
loope
push
xor
xchg
(bad)
lods
or
out
in
fcom
out
aas
xchg
mov
cwde
ss
mov
fisubr
call
push
test
inc
ficomp
xchg
inc
ds
pusha
gs
jp
loopne
push
les
out
add
sbb
add
push
and
stos
and
or
fstp
mov
hlt
arpl
sbb
cmp
clc
in
cmp
sbb
jmp
mov
dec
push
repnz
mov
sub
test
aas
icebp
push
jne
retf
inc
rcl
push
(bad)
xchg
rol
push
pop
mov
pop
gs
jae
mov
cmp
pop
xor
xchg
rol
or
cmp
sbb
jecxz
cmp
leave
adc
pop
sbb
popf
cmps
and
inc
(bad)
int
bound
shl
add
rep
js
stos
push
jp
dec
pop
add
jae
dec
inc
jmp
mov
test
repz
jb
mov
in
sub
int3
mov
aaa
out
pusha
pop
sbb
pop
retf
jno
mov
test
fsub
and
jmp
leave
push
xor
mov
scas
or
cmc
or
push
jecxz
mov
adc
sub
dec
dec
jmp
sbb
cdq
out
cmp
test
ficomp
cli
call
cmp
loop
aam
xchg
cmp
sbb
pusha
(bad)
or
mov
mov
(bad)
xlat
sti
lea
into
cmp
test
push
xchg
scas
xor
rcl
int
add
and
(bad)
adc
sub
pop
jmp
int3
push
ds
push
add
mov
inc
daa
or
imul
sbb
dec
outs
cs
call
jge
adc
cmp
push
xchg
sub
call
clc
mov
mov
jg
dec
jns
mov
imul
(bad)
in
add
stc
mov
dec
arpl
mov
lock
outs
inc
gs
mov
ds
jo
cmps
push
test
cmps
jmp
shl
fadd
ins
nop
fiadd
ds
shl
loop
mov
lds
xchg
fs
dec
inc
retf
rcr
fwait
sbb
xchg
mov
mov
(bad)
gs
mul
frstor
jae
dec
xor
push
popf
int3
repnz
inc
out
sbb
pop
nop
push
cmps
fucomi
jbe
std
push
retf
mov
dec
cwde
cmp
nop
sub
inc
leave
jle
jmp
int
jbe
pop
inc
mov
ins
adc
jb
push
push
scas
jmp
cdq
add
xor
stos
jp
mov
cmp
jmp
repnz
mov
(bad)
nop
mov
mov
data16
stos
ret
push
(bad)
iret
dec
arpl
adc
mov
pushfw
xchg
call
out
(bad)
lock
or
mov
push
rcl
mov
push
lods
fiadd
xor
mov
out
repnz
add
pop
sbb
mul
jl
xor
cli
mov
clc
cld
mov
push
shl
cmp
pop
aad
jmp
gs
mov
repnz
jbe
sbb
pop
lds
xchg
push
loopne
pop
push
mov
jg
jno
xor
xor
pushf
push
lea
and
adc
out
aad
jg
imul
sar
arpl
add
mov
out
aas
adc
pop
xchg
mov
mov
jle
sbb
in
mov
adc
mov
jbe
test
sub
leave
xor
ficom
xchg
mov
aas
xchg
xchg
in
jmp
sub
retf
cmp
xor
jnp
add
loop
cmps
ret
pop
jbe
adc
fwait
mov
xor
mov
sbb
sub
xchg
xchg
mov
jne
sub
or
jne
xchg
mov
cs
mov
mov
and
cmp
mov
ins
or
repz
jae
mov
ret
test
pop
sbb
int3
push
iret
outs
sahf
outs
xor
int3
mov
mov
jg
fist
call
push
stc
ret
sbb
xchg
(bad)
jecxz
ss
stos
cmps
ja
jl
add
xor
inc
pop
stos
sub
nop
popf
mov
add
lock
push
dec
mov
std
mov
popa
mov
int3
push
shl
xchg
cli
lds
pop
movq
fdiv
sti
pusha
int3
mov
mov
popa
fbld
sbb
(bad)
mov
popf
xor
jne
ins
stos
cmp
scas
xor
jns
ret
jge
mov
pushf
and
aas
cmp
pop
jmp
jmp
popa
movs
xor
cmps
push
leave
pop
sub
sbb
inc
sub
pop
jb
das
cmp
enter
ret
xor
xchg
xlat
adc
aas
mov
fdiv
and
sub
xlat
in
das
xor
pushf
mov
xchg
jecxz
ins
retf
das
stos
and
jp
and
(bad)
js
and
lods
popa
mov
add
mov
mov
psllw
inc
jecxz
cwde
dec
imul
mov
lea
jle
jb
aaa
xchg
div
stos
inc
or
push
push
xchg
lea
and
aas
in
jmp
sub
in
int3
ret
xor
stos
xor
imul
adc
mov
(bad)
scas
loop
(bad)
push
mov
pop
div
out
loopne
sub
pop
(bad)
rcr
add
lock
ins
in
(bad)
pusha
stos
jns
icebp
fbld
mov
shl
or
data16
aam
fcom
mov
shr
popa
call
push
scas
fbstp
imul
sbb
jnp
xchg
sub
js
mov
sbb
dec
sbb
(bad)
pushf
sbb
push
sti
sbb
mov
ds
mov
pusha
push
das
sti
out
loop
ficom
pusha
aam
(bad)
jmp
inc
jno
push
ins
fidiv
leave
adc
out
pop
in
popf
add
and
mov
xor
pop
mov
daa
retf
push
xor
sbb
inc
xchg
sbb
mov
loop
or
aad
bound
movs
rcr
or
mov
jmp
inc
inc
stos
xchg
scas
test
repz
call
(bad)
push
js
movs
mov
mov
test
jne
std
adc
push
inc
imul
sbb
inc
adc
les
xchg
sub
cmp
out
dec
ins
enter
pusha
and
shl
or
adc
hlt
add
std
ins
inc
add
jne
(bad)
icebp
add
scas
daa
rol
into
cmp
cmc
call
test
xlat
xchg
pushf
sub
push
pop
pop
cmc
inc
jl
movups
mov
call
(bad)
test
or
jge
mov
sbb
pop
xchg
jg
or
scas
in
sbb
inc
loope
mov
jbe
dec
loope
dec
push
frstor
xchg
dec
sbb
arpl
xchg
loop
mov
xchg
jb
imul
jp
mov
lahf
fcom
jge
mov
fist
mov
xchg
mov
and
push
fstp
nop
popf
pop
int3
fisub
or
jbe
dec
mov
inc
or
inc
sub
mov
adc
dec
or
push
jmp
pop
xor
cmps
daa
aad
adc
xor
and
outs
mov
sar
or
push
adc
jnp
dec
xchg
je
aas
scas
dec
daa
mov
jge
in
sub
sti
sub
leave
lahf
jle
div
dec
lods
imul
call
lock
in
sbb
mov
pop
adc
mov
sub
or
mov
xor
jo
adc
loop
in
pop
icebp
sar
dec
jecxz
gs
xchg
daa
mov
push
mov
adc
fisttp
or
aam
ja
ins
and
pop
push
aaa
sub
in
cmp
mov
cli
in
aam
shl
out
adc
in
mov
aad
ins
xor
ins
imul
ret
das
call
xchg
mov
xchg
xor
mov
mov
ds
rcl
push
add
push
cmp
xchg
push
adc
ja
rcl
sub
fwait
mov
mov
adc
add
scas
ins
or
or
mov
popa
idiv
push
inc
mov
retf
mov
dec
call
inc
in
je
mov
aad
js
ins
jmp
push
add
push
adc
push
adc
mov
inc
mov
dec
cs
pop
cld
cmp
push
lods
xor
pop
pop
and
adc
sti
and
ja
and
push
xor
add
retf
xchg
adc
push
mov
sar
call
sbb
gs
mov
dec
rol
add
scas
mov
inc
sub
mov
inc
xor
jge
popf
pop
mov
idiv
in
jne
and
push
js
jo
or
sahf
push
xchg
add
scas
and
pop
mov
jmp
xor
test
repz
mov
inc
xchg
jp
retf
ret
adc
xor
fmul
dec
outs
cs
cwde
or
xor
pop
jbe
clc
inc
nop
dec
jl
cmps
aad
adc
neg
(bad)
stc
clc
lods
mov
call
xchg
int
xor
pop
xchg
mov
mov
lods
leave
pop
pop
or
std
test
pushf
lahf
dec
ins
ds
adc
pop
shl
pop
lods
mov
cmps
aam
or
or
or
ds
and
mov
xor
jo
stos
pop
fimul
xchg
vpaddw
and
frstor
push
add
test
jns
inc
(bad)
imul
sub
push
js
pop
clc
call
ss
jb
retf
pop
push
or
inc
sub
stos
adc
or
dec
ins
aaa
and
and
mov
(bad)
fst
jns
rol
cmp
out
adc
daa
cmp
xchg
jmp
mov
mov
dec
iret
pop
xchg
jle
xchg
fistp
mov
pop
cmp
dec
neg
test
jg
xchg
popa
ret
jmp
js
daa
aad
pusha
sar
xchg
fnstenv
fucomip
outs
mov
fdiv
call
add
hlt
fnstenv
sbb
pop
cmc
push
cdq
xchg
jmp
retf
mov
dec
fldenv
f2xm1
test
lea
mov
daa
cdq
mov
push
out
int
jle
mov
push
push
xlat
adc
mov
xchg
lods
push
ins
pop
sbb
arpl
jp
fld
mul
cmc
adc
pop
sub
inc
push
ds
dec
(bad)
jo
xchg
scas
je
xchg
imul
inc
jmp
and
mov
ret
test
push
bound
fwait
mov
sbb
push
pop
and
push
push
in
push
adc
push
pop
or
cmc
bswap
and
sub
jle
mov
add
cmp
data16
call
mov
jl
cmp
and
inc
mov
sub
hlt
std
aaa
push
mov
retf
cmps
outs
cdq
scas
xchg
adc
dec
inc
inc
sbb
sbb
aad
les
dec
daa
jle
mov
bound
ficom
adc
js
or
movs
jbe
aaa
arpl
ret
mov
addr16
jp
in
fnstsw
xchg
xchg
cmp
inc
inc
add
dec
loop
setae
sbb
mov
je
fisub
(bad)
mov
rol
test
fsubr
jecxz
sbb
mov
xor
gs
bound
adc
mov
mov
sub
mov
into
push
loope
sahf
in
inc
xor
lods
shr
rol
add
addr16
stc
lock
test
movs
std
les
push
mov
stc
iret
lods
add
xchg
push
jmp
imul
(bad)
sbb
cmp
jge
sub
dec
sub
jno
bswap
aam
ret
inc
leave
adc
jno
mov
jbe
push
test
dec
aas
cs
xor
mov
xchg
add
and
ins
add
pop
popa
push
mov
test
popa
jp
aaa
sbb
stc
lds
in
adc
fiadd
ins
lods
mov
adc
jle
cmp
mov
stc
push
xchg
nop
mov
or
adc
dec
(bad)
cmp
mov
in
aas
mov
lea
outs
outs
sbb
inc
sub
frstor
sar
sbb
mov
aad
cmp
and
sbb
jmp
(bad)
cs
push
or
xchg
mov
push
push
add
or
loope
fild
inc
ins
pop
test
add
in
fsub
loopne
cmp
cmc
ins
(bad)
pop
dec
ins
imul
xchg
ins
xchg
cdq
dec
add
xchg
inc
in
icebp
mov
xchg
xor
sbb
push
in
cmp
pop
rcr
jne
lods
loop
cmp
sub
xchg
jnp
cdq
sar
hlt
jecxz
arpl
stos
sub
pop
cmps
das
push
cmp
test
cld
and
into
outs
test
or
mov
out
or
push
inc
test
mov
mov
dec
sbb
and
cli
sub
das
ret
fs
dec
popa
sbb
leave
adc
and
js
pop
pop
dec
xchg
inc
daa
jle
cld
imul
lahf
jecxz
mov
dec
inc
stos
into
dec
cmp
les
out
adc
cmp
stc
add
aaa
dec
xchg
or
nop
js
cmp
bound
mov
cmp
adc
popf
jecxz
or
fs
mov
and
js
movs
mov
adc
push
and
xor
loop
int3
and
adc
shl
xor
movs
stos
ret
stos
cld
xchg
(bad)
ds
(bad)
js
call
arpl
mov
outs
mov
aaa
outs
jno
xchg
adc
jge
mov
sbb
push
dec
sub
xlat
addr16
scas
xlat
or
aad
cdq
mov
outs
mov
pushf
xor
xchg
outs
cld
ss
sti
or
mov
ret
aam
es
rol
xor
jae
mov
cmp
mov
mov
cmp
int3
mov
pop
mov
push
mov
inc
fsubp
add
dec
xchg
xor
push
or
arpl
dec
test
test
xor
inc
repz
mov
mov
cs
push
pop
test
or
cmp
and
std
int
stc
xchg
add
sub
jmp
dec
and
and
dec
es
rcr
mov
repnz
stc
fadd
push
push
mov
aas
out
sbb
push
xor
stos
mov
jmp
add
cmc
mov
mov
loop
dec
add
iret
push
popf
test
cdq
rcl
adc
adc
(bad)
jb
out
int
add
pop
jns
dec
mov
pushf
lods
fdiv
data16
inc
enter
and
add
mov
jmp
pop
lahf
out
jae
mov
ss
mov
and
ret
xchg
ds
(bad)
dec
mov
(bad)
sub
jb
int
inc
sbb
shl
inc
das
adc
adc
loop
mov
push
mov
sar
add
push
inc
(bad)
and
and
scas
loopne
push
add
jge
sbb
mov
add
aam
add
cmps
test
pop
dec
xlat
retf
movs
stos
ret
mov
out
mov
sub
mov
stos
mov
mov
pop
out
mov
in
adc
in
or
sbb
jns
add
aad
jne
js
movs
xor
dec
cmp
fdivp
jecxz
rcr
sbb
pop
mov
cs
push
ss
in
lods
loopne
fstp
lods
retf
inc
or
inc
xchg
mov
push
test
das
popf
jne
lock
(bad)
adc
adc
out
mov
sub
dec
and
(bad)
retf
outs
jno
in
or
push
mov
ss
mov
popf
cwde
stc
and
out
loop
or
pop
adc
call
test
jp
mov
sub
sti
(bad)
jmp
xor
xchg
cmp
mov
or
mov
xchg
dec
cwde
test
adc
fcmove
lahf
call
cmc
sbb
xchg
cmp
retf
iret
fistp
shr
mul
enter
aaa
pop
jp
sub
push
pop
xor
inc
hlt
mov
pop
xchg
mov
idiv
sub
cs
loopne
(bad)
aas
adc
add
pop
retf
jp
sbb
cmp
(bad)
sub
sbb
es
sbb
int
retf
retf
imul
jb
retf
mov
ror
mov
repnz
mov
push
mov
mov
aam
xlat
jnp
clc
and
aad
push
push
cdq
addr16
test
dec
(bad)
cmp
mov
or
mov
imul
mov
(bad)
mov
or
and
or
add
jle
push
jb
fwait
sbb
adc
sub
fcmovnbe
dec
sub
in
vhsubpd
and
adc
(bad)
fnsave
pop
push
push
lds
jno
push
push
and
bound
ins
daa
je
fiadd
cmps
push
sub
popa
lahf
jmp
in
mov
mov
dec
xor
ins
sbb
sbb
and
xor
or
test
sub
cs
or
adc
cmp
jecxz
into
mov
jmp
(bad)
xchg
pop
push
aas
or
push
xor
dec
test
cmp
sub
gs
push
cmp
scas
xchg
stos
dec
repz
push
cmp
push
pop
sbb
sub
ins
and
daa
dec
add
jno
push
xor
inc
jge
pop
daa
push
sub
push
imul
outs
sbb
aam
mov
out
dec
aas
dec
and
mov
int
mov
mov
fld1
mov
call
or
mov
lods
(bad)
(bad)
test
mov
jbe
in
shl
adc
aas
dec
movs
les
xchg
icebp
mov
sub
test
lods
std
stos
call
pusha
sub
cmp
dec
jbe
stos
sub
sbb
movs
pop
addr16
inc
loope
repnz
add
lahf
ret
les
retf
push
and
(bad)
add
mov
inc
xor
push
pushf
retf
add
call
push
outs
push
bound
or
xchg
icebp
xchg
jmp
add
dec
mov
sub
xchg
mov
sahf
cld
dec
pop
pop
and
mov
shl
pop
es
or
stos
ja
inc
adc
(bad)
push
xor
inc
sub
pushf
or
push
(bad)
(bad)
mov
inc
ret
in
jl
xor
ret
nop
hlt
test
loopne
mov
cwde
out
in
ror
xor
cmc
cwde
cli
lods
mov
sub
jmp
pop
ret
mov
add
xchg
retf
js
and
pop
bound
or
adc
mov
xchg
add
pop
pop
pusha
or
fsub
test
pop
sub
pop
adc
sub
jae
dec
cmp
inc
and
bound
dec
xor
clc
stos
mov
imul
adc
or
push
mov
cli
int
jp
cmp
cmp
les
push
push
bound
mov
dec
cmp
jmp
sti
cwde
repz
dec
xchg
jle
dec
jl
test
imul
(bad)
jp
push
xor
pop
adc
adc
int
and
pop
sub
mov
xchg
fmul
lds
dec
and
cmp
sbb
outs
ret
fisttp
data16
xchg
shl
sub
(bad)
in
cmp
cmc
xchg
aad
popa
add
push
jmp
jecxz
ja
sbb
pop
lahf
jmp
xor
push
dec
fs
mov
std
test
cmp
fs
cmps
loop
(bad)
pop
xor
push
xchg
(bad)
mov
stos
cdq
mov
pop
jl
and
pop
sbb
jp
in
fisubr
ss
adc
adc
pop
or
imul
and
jns
outs
sbb
and
or
push
ins
neg
iret
lods
out
aam
scas
cli
retf
inc
adc
sbb
cld
xchg
loop
cli
mov
sbb
cmp
aas
push
sbb
repnz
xchg
fild
fwait
clc
in
cdq
jbe
and
sub
pop
int
push
and
sahf
imul
idiv
mov
pop
(bad)
sub
rol
cmps
int3
das
arpl
inc
ins
pop
dec
add
fidivr
fisub
jecxz
aaa
inc
dec
daa
xor
jns
cmp
push
ds
sub
imul
in
mov
daa
ins
outs
and
repz
repnz
xchg
stc
les
or
push
ins
sbb
or
sbb
cmps
sbb
fiadd
dec
sub
(bad)
shl
sub
xor
jnp
fsubr
sub
je
or
leave
in
push
and
mov
mov
out
inc
sti
iret
xchg
loop
iret
mov
xchg
fidivr
stc
adc
call
sub
mov
arpl
dec
sbb
popa
popf
fisub
push
jbe
in
xchg
mov
or
les
dec
fsubr
add
xor
add
repnz
sahf
out
xchg
mov
sub
jbe
xor
aam
xor
shl
or
mov
lds
inc
dec
sbb
push
mov
jmp
fdiv
add
add
js
ret
shl
mov
jg
aam
call
pop
cld
pushf
push
aaa
data16
lahf
in
push
dec
pop
test
jbe
arpl
dec
cmp
imul
(bad)
xor
ds
retf
iret
repnz
lds
cmp
or
in
movs
sub
je
push
fisub
inc
jge
push
std
xchg
xor
mov
sub
rcl
dec
pop
cmp
or
jno
xlat
enter
and
movs
mul
and
inc
add
aaa
inc
jae
js
daa
es
sub
shl
xor
sub
test
sbb
dec
sub
ret
pop
push
lods
sar
or
fisttp
pop
out
cmp
shl
ror
push
daa
pop
pop
fs
xor
arpl
and
sub
inc
jb
jns
pop
cmp
dec
cmp
xor
inc
ja
dec
ss
jl
pop
push
ins
cs
or
es
loope
loope
test
cmps
shl
fwait
ret
jo
adc
push
and
jae
inc
gs
sub
daa
jae
jp
jmp
iret
ds
adc
push
fwait
js
cmp
add
or
aad
fcomp
fldenv
scas
and
rol
xor
ss
in
fcomp
lock
dec
test
mov
pop
les
popf
mov
cmp
or
loopne
fld
push
mov
mov
mov
cmp
test
in
jmp
inc
mov
test
ins
lahf
xchg
pop
stos
gs
ret
sub
pop
loop
push
(bad)
push
mov
xchg
aaa
push
leave
inc
lods
cmps
gs
jge
jae
and
dec
adc
addr16
ds
mov
pop
or
test
push
sbb
xor
xor
push
xchg
bound
sbb
inc
ret
xchg
(bad)
pop
mov
cmp
cmp
call
repz
sub
lds
out
ss
push
mov
mov
imul
dec
mov
jle
jge
nop
aaa
add
mov
fmul
ja
addr16
dec
cmp
fidivr
inc
mov
push
or
xor
mov
or
lea
mov
cmp
sub
sbb
mov
rol
inc
out
and
or
not
and
es
cmp
mov
push
cwde
call
sub
push
mov
dec
lods
jns
jmp
or
loope
mov
and
enter
mov
cwde
dec
xchg
jge
mov
leave
inc
rcl
sbb
and
jl
nop
xor
jb
jo
rol
fidiv
stc
xor
adc
out
xlat
aaa
retf
pop
hlt
pop
pushf
mov
mov
push
lds
movs
cmp
lds
inc
ret
cmp
sahf
test
mov
inc
shl
fstp
aaa
add
inc
mov
mov
inc
or
push
xchg
ret
jae
push
sub
arpl
popa
ror
repz
in
les
loop
fidivr
add
ja
cwde
das
stos
jb
push
mov
push
fild
mov
mov
test
mov
mov
nop
jg
push
mov
adc
jb
jl
lea
mov
adc
and
in
das
out
cmp
cs
dec
in
xor
sub
movs
xchg
push
rol
lock
repz
bound
das
and
push
mov
mov
stos
es
loop
(bad)
aas
jmp
out
inc
mov
aam
hlt
pop
sbb
ds
adc
sub
or
xchg
cmp
pop
int3
cmp
pop
aam
in
fidivr
mov
jnp
call
int
hlt
pop
popa
sbb
jbe
imul
mov
pop
stos
push
sub
add
fistp
inc
mov
mov
mov
or
imul
int
mov
imul
loope
retf
jo
mov
inc
xchg
mov
out
jo
sub
pop
mov
cmp
sbb
sub
retf
pop
lods
ins
cmps
fs
xor
pushf
mov
jnp
inc
lods
sub
mov
fwait
mov
popf
jbe
(bad)
fisub
mov
outs
mov
imul
push
leave
push
into
cmp
inc
or
push
sbb
push
mov
cmps
pop
test
xchg
xchg
lahf
pusha
int
add
jno
js
push
rcl
retf
add
cmp
add
fidivr
push
retf
mov
lods
outs
lods
test
pop
lock
scas
cwde
call
gs
xchg
(bad)
push
xchg
sub
add
or
inc
fwait
push
push
pushf
movs
inc
(bad)
sub
inc
aaa
loopne
add
push
in
push
mov
stos
das
or
xchg
jne
sbb
repnz
clc
sbb
sub
cmps
dec
ret
push
fimul
leave
sub
cmps
pop
in
cld
popa
lods
gs
scas
mov
fld
retf
push
mov
inc
mov
add
cmp
add
cld
mov
dec
test
cmp
mov
aaa
loop
repz
and
push
mov
cli
push
add
inc
xchg
jge
lods
mov
cdq
lea
test
or
mov
call
sbb
fnsave
or
imul
icebp
mov
sahf
pusha
movs
and
adc
movs
data16
or
and
outs
ret
push
mov
mov
cmp
retf
mov
mov
sub
inc
leave
cmp
sub
xor
dec
int
or
pop
or
cmp
sbb
mov
outs
sahf
rol
imul
and
ret
xchg
das
in
pop
shl
test
mov
(bad)
fistp
and
xor
sub
xor
ss
cmc
inc
lds
movs
ins
mov
jmp
in
and
sub
xor
pusha
add
push
fnstcw
inc
mov
adc
xacquire
add
daa
shr
dec
sub
loopne
test
dec
aas
fadd
sub
sbb
aad
xchg
ins
mov
pop
lds
adc
cmp
imul
push
add
pop
mov
adc
jl
mov
(bad)
outs
call
jbe
xchg
pop
enter
cli
sbb
cmp
sub
mov
mov
sbb
jns
inc
movs
jo
jno
push
cmp
sub
push
pop
dec
rol
imul
ret
cmp
hlt
pop
cli
push
add
cli
sub
sbb
mov
outs
ret
fst
pop
mov
cmp
pushf
(bad)
call
mov
rol
int3
xor
mov
les
sbb
cli
xor
not
and
sub
cmp
push
sub
pop
les
icebp
cmp
sub
pusha
ror
fisttp
test
jbe
xchg
and
inc
sub
xlat
jl
stos
mov
push
or
sbb
sub
dec
shl
out
lods
jnp
das
hlt
xor
jle
je
dec
or
test
add
push
(bad)
xor
xlat
cmp
xchg
cwde
xchg
enter
sbb
out
arpl
retf
add
out
and
and
fstp
dec
mov
mov
jmp
cli
cmp
sbb
cmp
clc
mov
les
xor
adc
rol
add
dec
xchg
inc
lds
pusha
sub
or
pop
aam
mov
dec
add
sahf
hlt
sub
jno
fs
outs
aaa
das
in
push
not
push
es
clc
push
gs
and
and
dec
cmps
pop
leave
pop
rol
inc
or
out
or
fbld
fcomp
adc
or
ss
dec
add
daa
mov
fmul
bound
cmp
inc
mov
push
mov
daa
pop
aad
fsubr
iret
pop
push
fbld
repnz
or
cs
repnz
je
push
sub
cmp
aas
add
or
sahf
mov
pop
mov
xlat
cmp
pop
(bad)
lods
xchg
push
lods
outs
inc
cmp
enter
je
adc
test
add
add
and
sbb
adc
pop
or
push
mov
cmps
in
sub
sbb
pop
lock
push
mov
adc
pop
or
xchg
outs
test
cwde
jbe
test
pop
movs
push
mov
enter
push
mov
in
in
or
jmp
out
mov
push
stos
js
mov
xor
add
pop
stos
gs
and
fcom
push
neg
sbb
pop
mov
retf
test
in
sub
push
cli
inc
add
jne
adc
or
sbb
sbb
test
jge
dec
ds
and
dec
mov
xchg
imul
mov
push
fst
daa
addr16
mov
cld
sbb
popf
into
mov
mov
xor
or
mov
movs
and
nop
ret
pop
outs
(bad)
ins
out
xchg
cmc
xchg
into
or
dec
repnz
(bad)
loopne
mov
punpckhdq
imul
mov
nop
fldcw
rol
mov
mov
mov
fstp
jae
dec
add
outs
adc
inc
or
cvtps2pd
add
inc
push
jg
or
pop
gs
dec
cmp
jp
imul
cdq
mov
cmp
fs
mov
xor
pushf
movs
(bad)
fsubr
(bad)
mov
rol
mov
ins
fmul
ja
push
or
cmp
inc
fisttp
mov
das
sbb
sub
inc
pop
push
adc
scas
fst
mov
(bad)
lods
fistp
sbb
lea
out
mov
(bad)
jmp
call
inc
adc
jne
sti
pop
(bad)
pop
lock
std
push
add
popa
cs
and
push
add
pop
(bad)
fnstsw
pop
iret
inc
xor
inc
adc
mov
pushf
add
sub
sbb
cmp
inc
les
pop
push
jmp
xchg
ret
call
retf
mov
test
sti
push
sub
cmp
mov
or
fsubr
cmp
mov
ss
sub
adc
icebp
xchg
jp
cmp
int3
mov
loope
jp
rol
mov
stos
test
xchg
aad
and
pop
push
xor
enter
adc
jle
sub
movs
sbb
retf
nop
loope
mov
outs
push
cmp
inc
xor
cmp
dec
sbb
scas
inc
lock
mov
sub
psubq
mov
xchg
int
xchg
shl
lds
mov
scas
fs
mov
(bad)
cdq
test
leave
fbld
mov
xor
adc
dec
sub
stc
xchg
rcr
cli
lahf
daa
data16
sub
mov
lods
(bad)
mov
xchg
cmc
jns
jl
gs
cs
pop
xchg
fisub
pop
mov
jne
inc
sti
cmps
cwde
lods
pushf
mov
pop
push
daa
inc
adc
xor
and
test
dec
add
dec
or
jecxz
pop
outs
adc
mov
cld
xchg
out
jb
jmp
inc
jb
out
out
jge
dec
sti
call
stc
outs
std
mov
cmps
cmc
xchg
clc
mov
xchg
int3
mov
mov
pushf
out
lahf
hlt
mov
out
(bad)
(bad)
mov
cmp
shl
inc
test
pushf
xchg
cwde
pop
(bad)
das
adc
sub
pop
std
lds
pop
pusha
or
jns
data16
pusha
push
push
pusha
xor
jne
push
pop
gs
dec
add
daa
pop
dec
jnp
jo
push
xor
sub
inc
xor
jb
inc
add
adc
push
and
push
xor
push
xor
dec
jae
pop
das
push
and
pop
pusha
or
jns
data16
pusha
push
push
pusha
xor
jne
push
pop
gs
dec
add
daa
pop
dec
jnp
jo
push
xor
sub
inc
xor
jb
inc
add
adc
push
and
push
xor
push
xor
dec
jae
pop
das
push
and
pop
pusha
or
jns
data16
pusha
push
push
pusha
xor
jne
push
pop
gs
dec
add
daa
pop
dec
jnp
jo
push
xor
sub
inc
xor
jb
inc
add
adc
push
and
push
xor
push
xor
dec
jae
pop
das
push
and
pop
pusha
or
jns
data16
pusha
push
push
pusha
xor
jne
push
pop
gs
dec
add
daa
pop
dec
jnp
jo
push
xor
sub
inc
xor
jb
inc
add
adc
push
and
push
xor
push
xor
dec
jae
pop
das
push
and
pop
pusha
or
jns
data16
pusha
push
push
pusha
xor
jne
push
pop
gs
dec
add
daa
pop
dec
jnp
jo
push
xor
sub
inc
xor
jb
inc
add
adc
push
and
push
xor
push
xor
dec
jae
pop
das
push
and
pop
pusha
or
jns
data16
pusha
push
push
pusha
xor
jne
push
add
jge
cmp
sar
xchg
movs
popf
scas
fimul
cdq
in
mov
scas
fwait
into
cmp
gs
jl
pop
xor
push
arpl
aaa
pop
les
(bad)
mov
mov
rcl
cmps
shr
dec
pop
daa
gs
cmp
inc
jo
jmp
and
scas
fmul
sub
imul
or
imul
pusha
pop
or
cmp
mov
popa
add
push
add
sbb
pop
dec
cmp
jnp
pusha
sub
pop
xor
sbb
popa
adc
pop
(bad)
test
mov
cmps
fwait
scas
mov
and
(bad)
or
push
add
scas
das
pop
cdq
(bad)
sub
imul
mov
scas
cli
mov
mov
not
add
(bad)
sub
mov
mov
jns
(bad)
call
xchg
dec
js
int
std
inc
xor
adc
out
sahf
out
inc
dec
sbb
int3
pushf
in
(bad)
pop
cmp
xor
es
je
or
cld
push
adc
push
(bad)
lea
mov
sub
jno
cmc
or
pop
das
ins
pop
or
ret
call
int3
scas
cmp
push
or
ret
cmp
enter
in
cwde
imul
mov
or
cdq
mov
inc
adc
sub
xchg
push
pusha
jmp
dec
cs
add
dec
push
js
shr
repz
loopne
sub
xchg
imul
mov
imul
fwait
iret
lods
cdq
in
jno
dec
or
cmp
lds
cmp
lahf
ror
or
sub
fwait
pushf
into
dec
and
lea
jo
mov
pop
pop
mov
fdivr
push
in
(bad)
pop
es
int3
(bad)
fucomi
ror
jmp
sbb
dec
in
and
ret
cmp
push
fnstcw
or
icebp
sbb
out
pop
ror
push
cmp
xor
or
push
mov
int
loope
daa
fldcw
mov
stos
in
call
arpl
daa
push
stos
xchg
pop
imul
inc
adc
popf
stc
xor
xchg
imul
mov
rcl
jo
mov
cmp
rol
xchg
icebp
call
fsub
addr16
fiadd
mov
xchg
test
test
jne
cmps
sahf
push
addr16
retf
pop
or
cmps
ret
(bad)
call
mov
mov
push
dec
cs
int3
scas
jbe
loope
ins
cmp
movs
imul
mov
cld
test
xor
loopne
cdq
fisttp
popa
sub
adc
sbb
pop
or
pop
and
clc
mov
aaa
dec
cmp
in
pop
in
mov
out
lea
int3
mov
cmp
jbe
xchg
in
scas
push
dec
xor
pop
or
ins
es
adc
dec
jp
pop
ds
and
cmp
ds
or
imul
sub
inc
or
jns
pop
cmp
inc
jns
adc
or
jae
ins
and
push
pop
push
dec
xor
pop
or
ins
es
adc
dec
jp
pop
ds
and
cmp
ds
or
imul
sub
inc
or
jns
pop
cmp
inc
jns
adc
or
jae
ins
and
push
pop
push
dec
xor
(bad)
test
movs
pop
fnstsw
(bad)
xchg
mov
in
xchg
xchg
cmc
sahf
jmp
in
mov
stc
xchg
fmul
jmp
fst
into
cld
(bad)
fistp
retf
cmps
(bad)
mov
sahf
out
(bad)
call
(bad)
inc
xchg
mov
in
xchg
xchg
cmc
sahf
jmp
in
mov
stc
xchg
fmul
jmp
fst
into
cld
(bad)
fistp
retf
cmps
(bad)
mov
sahf
out
(bad)
call
(bad)
inc
xchg
mov
in
xchg
xchg
cmc
sahf
jmp
in
mov
stc
xchg
fmul
jmp
fst
into
cld
(bad)
fistp
retf
cmps
(bad)
mov
sahf
out
(bad)
call
(bad)
inc
xchg
mov
in
xchg
xchg
cmc
sahf
jmp
in
mov
stc
xchg
fmul
jmp
fst
into
cld
(bad)
fistp
retf
cmps
(bad)
mov
sahf
out
(bad)
call
(bad)
inc
xchg
mov
in
xchg
xchg
cmc
sahf
jmp
in
mov
stc
xchg
fmul
jmp
fst
into
cld
(bad)
fistp
retf
cmps
(bad)
mov
sahf
out
(bad)
call
(bad)
inc
xchg
mov
in
xchg
xchg
cmc
sahf
jmp
in
mov
stc
xchg
fmul
jmp
fst
into
cld
(bad)
fistp
retf
cmps
(bad)
mov
sahf
out
(bad)
call
(bad)
inc
xchg
mov
in
xchg
xchg
cmc
sahf
jmp
in
mov
stc
xchg
fcomp
jnp
push
sbb
inc
fstp
frstpm(287
shl
adc
mov
sbb
sbb
dec
(bad)
test
iret
lahf
into
xchg
aam
mov
jne
cld
mov
jmp
pushf
xchg
mov
xor
test
and
xor
pushf
xor
mov
cmps
jle
xor
imul
add
cmps
test
fstp
iret
inc
retf
hlt
lods
push
mov
adc
sub
shl
cmp
mov
(bad)
(bad)
movs
jmp
xchg
mov
int3
lods
sbb
jo
push
inc
pop
cs
and
cmp
sbb
mov
loop
lds
ds
mov
mov
cdq
retf
stos
stos
out
mov
jmp
cmp
fistp
sub
push
out
pmuludq
xor
push
sti
inc
scas
sbb
mov
cs
or
add
call
(bad)
ja
(bad)
dec
mov
call
mov
mov
lods
stos
test
cld
aaa
popa
test
inc
inc
add
adc
cmp
or
cmp
pop
sbb
push
pop
test
(bad)
jg
add
ins
sbb
push
clc
pop
hlt
push
(bad)
sbb
or
push
jbe
xor
es
mov
jmp
shr
jae
mov
ds
xor
cmp
icebp
cmp
inc
add
fisubr
or
inc
ficom
xchg
repz
test
addr16
add
push
sub
and
inc
div
push
clc
adc
xor
push
rdmsr
std
jns
sbb
sbb
stc
pop
cld
dec
stos
rol
and
mov
mov
ss
je
rcl
fucom
aad
inc
int3
and
jb
dec
adc
push
push
jne
push
pop
xchg
sub
sub
pop
mul
jbe
jg
mov
sbb
jbe
adc
sahf
scas
xor
fild
(bad)
push
mov
xchg
sub
loopne
mov
mov
daa
push
and
pushf
add
xchg
dec
ins
adc
imul
out
cdq
fcmovbe
imul
in
aam
data16
pop
xchg
sbb
ds
addr16
add
pop
sbb
(bad)
adc
jbe
jmp
push
sub
dec
jmp
xchg
(bad)
push
push
mov
aaa
popa
jne
pop
cs
mov
sub
ds
not
sub
retf
xor
(bad)
dec
mov
(bad)
es
push
or
cmps
scas
cmps
jne
pop
adc
inc
mov
ss
(bad)
(bad)
cmp
pop
push
xchg
cmps
lods
lods
cli
sbb
jo
test
ins
mov
ins
adc
cmp
std
jo
pop
mov
rol
div
stos
clc
inc
(bad)
stos
xor
sbb
fsubr
mov
(bad)
mov
sbb
std
aaa
push
nop
scas
(bad)
(bad)
fidivr
rol
jmp
push
sbb
and
mov
in
pop
lea
test
jo
pop
mul
test
jns
pushf
xchg
jno
push
lahf
outs
scas
mov
xchg
jae
fwait
pop
lods
pop
movs
cdq
mov
xchg
out
adc
xlat
inc
mov
stos
nop
cmps
mov
ja
pop
or
pop
ds
push
jmp
push
and
jae
xchg
js
dec
mov
push
dec
xchg
jne
push
retf
adc
adc
fist
cmps
pop
cmps
xchg
ins
test
xchg
cmp
jnp
pusha
pushf
sbb
sar
sub
shr
clc
es
add
pushf
mov
mov
jnp
push
dec
sbb
jbe
gs
inc
add
push
loop
out
ret
jl
ins
and
mov
movs
ins
inc
pop
movs
or
jge
sbb
jae
add
shl
repnz
sbb
xchg
sahf
hlt
and
repz
jae
scas
lods
in
pop
dec
cmp
mov
enter
adc
inc
call
push
int3
push
jae
js
movs
add
pop
xchg
xchg
aad
pop
dec
mov
loop
icebp
fiadd
stc
in
inc
or
sub
pop
stos
(bad)
mov
and
fwait
inc
pusha
cmps
cmp
pop
or
xor
xchg
dec
adc
outs
(bad)
test
pop
adc
add
aam
pop
lock
sbb
or
sub
jo
adc
pop
int
jnp
push
sbb
hlt
push
mov
into
sbb
rcl
shl
inc
jmp
shl
mov
popa
push
and
(bad)
mov
loop
cmp
repz
cmp
mov
adc
and
jl
jp
pop
or
mov
cmps
cmp
iret
in
dec
dec
inc
fisttp
xor
mov
xor
jbe
inc
fld
push
sbb
lods
movs
fs
dec
sub
dec
and
cmp
pop
pushf
pop
mov
lods
and
push
sbb
and
pop
inc
shl
or
and
ja
jne
mov
fs
and
pop
push
xor
or
icebp
dec
mov
lods
les
inc
jbe
es
xlat
pop
mov
imul
rol
mov
retf
popa
loop
and
push
test
das
or
arpl
fbld
sub
sbb
loopne
mov
repz
xor
mov
pop
mov
pop
cmp
inc
dec
sbb
ret
hlt
dec
shr
add
scas
cmps
sar
fdivr
adc
or
mov
xchg
in
lahf
addr16
sbb
dec
pop
into
popf
mov
jl
cmp
or
mov
scas
movs
xchg
popf
pushf
jmp
xchg
fadd
add
or
push
fnstsw
fmul
pop
sbb
push
xlat
inc
lahf
je
jno
inc
pop
push
mov
add
or
movs
stc
xchg
aam
loop
test
or
push
or
xchg
out
dec
add
push
fs
loop
mov
dec
inc
inc
mov
jb
and
rcr
and
outs
jg
movs
mov
pop
scas
xor
jmp
inc
dec
out
mov
outs
xchg
push
push
movs
push
idiv
sahf
push
js
sbb
or
stc
adc
xor
fimul
cld
xchg
sub
dec
stos
dec
adc
sub
ret
xchg
and
lds
adc
imul
add
aaa
int3
in
hlt
mov
xor
sub
pop
inc
sub
xchg
cmp
or
jbe
out
fcom
rcr
mov
sub
repz
in
dec
popf
push
add
out
(bad)
sub
adc
mov
fimul
(bad)
xlat
ret
inc
nop
popf
ret
add
and
or
icebp
inc
pop
mov
and
test
mov
(bad)
pop
sub
out
adc
dec
fwait
sub
or
cmps
push
and
jae
sti
pop
add
adc
push
push
mov
mov
add
add
outs
push
jnp
adc
repnz
fisubr
mov
xor
stos
push
xor
add
pop
and
push
(bad)
fsub
cli
jl
xchg
fsubr
mov
mov
adc
(bad)
bnd
push
or
pop
add
and
jmp
int
callw
xor
cmp
or
dec
mov
(bad)
enter
daa
and
lock
loop
sbb
fnstcw
call
in
cld
in
dec
mov
retf
jb
aas
pop
push
mov
push
sub
mov
add
je
scas
push
jmp
push
fimul
push
out
jmp
out
mov
shl
sbb
dec
or
push
or
das
xor
(bad)
cmp
and
fiadd
je
ins
(bad)
jno
pop
shl
adc
hlt
lods
shl
sbb
ss
lds
retf
data16
add
cmp
inc
stc
inc
mov
mov
mov
mov
push
mov
lods
push
and
aas
cs
add
adc
and
fist
cld
push
aam
out
out
lods
mov
pop
sbb
sub
push
and
dec
mov
inc
dec
mov
ret
pop
xchg
cmp
pop
call
out
inc
es
jp
repnz
push
in
mov
jecxz
addr16
mov
test
sub
add
std
das
addr16
or
jne
xor
pop
and
and
push
ss
adc
push
sbb
add
cdq
mov
adc
mov
xor
data16
jnp
(bad)
ret
xchg
loopne
and
jge
sti
clc
sub
sub
dec
lahf
sahf
jle
jmp
cs
sbb
inc
loope
cli
test
repnz
adc
xor
int
int
out
rcl
hlt
pushf
jbe
cwde
mov
iret
(bad)
adc
push
push
add
retf
les
xchg
arpl
add
out
push
int
mov
xchg
ret
mov
sbb
inc
mov
mov
imul
mov
arpl
fimul
xor
mov
push
add
adc
sub
and
sbb
dec
mov
ror
cmps
mov
test
fdivr
push
jmp
mov
pop
fistp
pop
sti
nop
outs
scas
add
loope
mov
mov
cli
mov
js
jg
xchg
(bad)
jne
cmovge
cmp
out
cmp
sub
int
pop
xchg
mov
xchg
cmps
int3
or
icebp
cmp
clc
jg
jb
jp
xchg
(bad)
js
xor
xchg
xchg
push
loopne
xor
xor
sbb
aaa
aas
sub
imul
jbe
ins
and
pop
retf
sbb
inc
adc
mov
mov
mov
cmp
in
cmp
cdq
mov
test
imul
fcomp
js
sbb
nop
push
(bad)
cmp
adc
pop
shl
cmp
pop
idiv
fist
mov
inc
cdq
fisttp
sub
or
fcomp
push
das
or
ret
mov
adc
loopne
mov
cmps
in
mov
inc
push
inc
mov
imul
loope
aad
xchg
sub
xor
iret
dec
lds
dec
and
xchg
pop
sti
jb
cmp
push
aaa
jno
test
cmps
loopne
les
xor
popf
out
xor
enter
mov
aas
mov
mov
loope
sahf
hlt
sub
push
xchg
pop
mov
adc
dec
pop
int
mov
loopne
pop
bound
outs
js
sub
minps
xlat
adc
inc
aaa
les
sbb
sti
mov
sub
mov
adc
rcr
jnp
(bad)
out
mov
or
pop
mov
mov
mov
cmc
lea
sti
fnstenv
and
(bad)
js
push
sbb
fdivrp
clc
out
(bad)
mov
fsubp
xchg
mov
push
sub
dec
or
cmp
jmp
test
cmp
(bad)
loopne
mov
mov
or
mul
mov
xchg
aam
inc
repz
jnp
out
dec
je
mov
push
out
jge
imul
adc
or
push
sbb
or
aaa
or
popa
push
imul
iret
stos
mov
pop
adc
pusha
push
sahf
cmps
xchg
fprem1
mov
shl
loope
mov
add
cmp
inc
lods
mov
in
movs
xchg
jno
push
dec
fisubr
aaa
push
sbb
xor
(bad)
call
into
or
push
add
xchg
fadd
xor
cdq
call
and
inc
fadd
mov
mov
xor
cld
push
scas
jle
adc
prefetcht0
or
nop
push
(bad)
sbb
push
mov
data16
gs
dec
or
and
fwait
jge
jo
jbe
dec
xchg
aas
add
sbb
adc
xchg
jmp
mov
mov
sub
pop
mov
shl
push
sbb
popa
test
jne
mov
inc
femms
pslld
add
sub
inc
fild
xchg
xchg
retf
dec
retf
adc
dec
not
sbb
ins
dec
ins
ud1
test
lahf
neg
cmp
sbb
xor
push
jmp
test
les
add
push
cs
mov
scas
mov
cli
lock
xor
jno
or
loop
lds
shr
add
popa
pop
out
shl
and
xor
lock
(bad)
repz
xchg
add
adc
jne
xlat
movq
push
xchg
or
repnz
aam
push
jp
mov
bnd
adc
fild
sbb
sub
cld
or
shl
leave
jbe
xor
cwde
in
inc
push
ja
push
pop
or
out
mov
xor
mov
sbb
or
mov
repz
test
or
bound
or
cmp
mov
mov
dec
sbb
cwde
lock
daa
inc
sahf
push
push
add
sti
pushf
test
push
xchg
fwait
xchg
(bad)
retf
loopne
cmp
bound
rcl
movs
cwde
aas
pop
sbb
and
jge
call
leave
jmp
stos
inc
test
jmp
sub
dec
or
xor
cmps
mov
pop
pop
call
jle
iret
inc
cmp
in
dec
dec
push
cmp
mov
mov
jbe
and
mov
jle
pop
add
cmp
sub
cmc
xchg
and
dec
scas
sar
sub
ret
loopne
clc
push
or
sub
(bad)
loope
sbb
imul
sbb
add
mov
pop
or
xor
xlat
das
add
sbb
ja
(bad)
cmp
inc
das
das
fcomp
or
cmc
mov
push
fisttp
pop
xchg
xor
(bad)
mov
pop
out
push
ss
repnz
mov
inc
pop
int
inc
xor
jns
xor
sbb
mov
mov
cmp
xchg
movs
popf
scas
fimul
popa
(bad)
jnp
cli
scas
fcomp
sub
dec
lock
xor
lock
mov
sbb
or
xchg
mov
fsubr
sbb
aam
fimul
call
or
loope
sub
into
inc
mov
in
mov
frstor
jmp
mov
retf
adc
fisttp
jp
pop
aad
out
pusha
enter
mov
mov
jo
daa
adc
shr
dec
adc
pop
fsub
pop
xor
cmp
aaa
sbb
sbb
ss
ss
(bad)
daa
push
loope
call
pop
pop
or
pop
add
sbb
or
cmp
pop
aas
cmp
dec
add
out
sub
adc
push
shl
add
aaa
or
jbe
sbb
dec
cmp
or
push
out
inc
rcl
push
adc
jns
push
sbb
sbb
clc
outs
push
(bad)
sub
or
jb
je
cli
push
scas
int
fisttp
pop
inc
and
push
jge
inc
xchg
div
nop
sti
call
je
ins
sub
lea
pop
sbb
dec
inc
cmp
mov
lods
clc
xchg
add
xlat
ficomp
mov
iret
jne
in
or
aad
pop
and
ins
sub
push
call
or
mov
mov
in
hlt
sahf
jle
jnp
pop
adc
cmp
cmp
jmp
mov
imul
sbb
push
jmp
or
not
or
mov
loope
pop
cdq
add
ret
repz
jo
adc
mov
imul
sub
sahf
hlt
add
jge
jno
(bad)
popa
ret
adc
adc
ins
xlat
pop
dec
js
push
or
add
sbb
cmps
pop
bound
(bad)
loope
inc
pop
lahf
leave
jbe
test
loop
sahf
mov
int3
pusha
sub
inc
add
shl
arpl
push
xchg
les
push
pushw
inc
bnd
push
ret
lahf
ret
ins
popa
pop
(bad)
imul
(bad)
loope
pop
add
sub
sub
jge
dec
pop
imul
jbe
pop
adc
push
push
imul
loopne
(bad)
jl
jg
cli
push
inc
push
xor
add
repnz
and
or
jmp
loopne
or
mov
addr16
mov
and
cmp
dec
ficom
and
call
cmp
mov
je
jb
jl
stc
pop
fbstp
sbb
mov
fwait
inc
scas
push
cwde
mov
xchg
arpl
mov
mov
and
aam
xchg
lea
xchg
jp
xchg
jmp
sahf
lock
xor
and
call
add
sbb
xor
repz
rcl
adc
pop
and
sub
int
xchg
sub
maskmovq
neg
repz
inc
les
mov
fadd
jl
add
push
out
cmp
sbb
pop
daa
jno
je
scas
mov
mov
clc
mov
add
pop
lods
push
pop
fstp
aad
xchg
(bad)
pop
std
push
cli
push
xchg
xor
cli
and
fcom
fsub
fnstcw
cs
adc
not
adc
pop
add
sub
popf
xor
xchg
xchg
lahf
jmp
out
maxps
sbb
adc
or
ja
push
sbb
sub
or
in
inc
fmul
dec
xor
movs
mov
sbb
in
mov
push
pop
sar
push
xchg
pushf
mov
stos
mov
push
iret
cmps
jp
call
add
cmp
xchg
xor
mov
push
orps
in
pop
and
inc
xor
inc
add
lods
push
jecxz
not
push
test
and
iret
mov
rcl
inc
(bad)
xchg
add
ins
push
enter
and
push
adc
xchg
out
jns
push
das
int3
mov
pop
psllq
mov
(bad)
push
dec
clc
scas
sub
pop
adc
sub
or
or
inc
sahf
fadd
sbb
pop
les
inc
jmp
mov
mov
pop
xor
jp
iret
xor
mov
adc
les
xor
repnz
mov
mov
adc
idiv
call
scas
sub
mov
test
mov
(bad)
sub
dec
cwde
mov
gs
popa
pop
mov
ret
call
add
icebp
imul
jp
xchg
xchg
loop
in
mov
adc
xchg
sub
loopne
mov
or
pop
or
xor
sub
jns
int3
aaa
xchg
cmp
std
mov
into
fiadd
scas
pop
addr16
ins
dec
xchg
push
or
(bad)
push
and
pop
sub
pushf
add
clc
icebp
xchg
sbb
nop
pushf
ret
mov
imul
sbb
mov
into
sub
mov
jne
imul
or
jne
jno
mov
in
add
jo
jno
jmp
popa
adc
pop
jne
out
jae
adc
add
mov
in
and
or
mov
sbb
test
scas
push
aad
xchg
ss
(bad)
test
jmp
movs
inc
bswap
(bad)
repnz
and
arpl
cmp
fcomp
imul
in
jae
inc
sar
aas
cld
ds
shl
fcom
imul
mov
jmp
es
rcl
fnstcw
fstp
lock
inc
mov
(bad)
out
pop
loopne
and
mov
cmp
fwait
cmp
xchg
jo
xor
sub
mov
mov
push
aas
jl
sub
das
inc
xor
cmp
gs
pop
xor
cmp
loop
scas
jmp
add
je
fsub
xchg
ret
add
nop
mov
adc
pop
push
pop
or
dec
dec
and
inc
and
inc
sti
mov
in
lds
repz
pop
add
jle
clc
ret
fldenv
xor
sub
jb
(bad)
lods
shr
and
aas
xor
mov
sbb
fcom
mov
adc
mov
stc
sar
inc
test
scas
xchg
xor
in
lds
out
repz
pop
cmp
daa
cmc
sub
adc
sbb
mov
and
lock
icebp
cdq
in
lahf
lds
outs
shl
fist
push
mov
push
retf
jno
fst
pusha
xchg
aad
jo
stc
mov
cmp
in
cmp
sub
inc
and
add
cmps
adc
adc
mov
push
add
push
mov
int
jnp
lea
shl
pop
and
mov
xchg
xchg
in
cwde
or
inc
mov
jae
jmp
(bad)
cmc
inc
cdq
and
jnp
pop
mov
adc
jmp
adc
add
outs
es
leave
sub
fs
mov
cmp
dec
pop
xchg
mov
call
into
iret
in
shl
or
das
sub
mov
pop
pop
sub
jmp
mov
sbb
or
call
stos
xchg
cli
mov
ds
lds
popf
js
(bad)
fiadd
adc
or
pushf
je
pop
add
pop
(bad)
fs
addr16
imul
fucomp
mov
xchg
and
mov
sti
xchg
(bad)
mov
mov
lods
fnstenv
dec
and
repnz
add
aas
push
or
rcr
push
push
push
cmp
scas
call
mov
xchg
fwait
mov
iret
cmp
push
or
arpl
pop
xor
add
je
sub
or
add
cmps
call
pushf
ss
adc
push
scas
mov
(bad)
push
in
test
fcmovne
retf
mov
xchg
adc
mov
add
mov
ror
mov
cmps
cdq
cwde
mov
push
xor
adc
inc
aad
test
les
push
gs
mov
jle
lea
or
inc
in
pop
(bad)
xor
out
sahf
bound
sti
pop
jmp
adc
inc
mov
sar
leave
jb
scas
icebp
jle
jl
xchg
mov
lds
push
fisub
test
pop
ins
mov
retf
sub
lea
xor
clc
xchg
xor
pop
push
mov
add
shl
les
cmps
add
fdivr
not
sbb
xor
sahf
xor
xchg
(bad)
nop
outs
shr
test
adc
pop
pop
jno
mov
mov
je
xchg
dec
mov
dec
mov
sub
jno
ja
push
lds
push
add
sbb
gs
push
or
ret
aam
mov
cdq
cmp
lock
pop
lahf
imul
xchg
push
mov
das
lods
cdq
pop
xor
cmp
(bad)
jmp
mov
jmp
out
(bad)
push
les
test
push
mov
or
jnp
jbe
cmp
out
mov
test
cld
jno
in
jmp
dec
out
cdq
jmp
sub
xchg
scas
ret
test
xchg
inc
idiv
pop
pop
pop
pop
in
das
xchg
out
mov
mov
cmp
call
push
rcl
push
xchg
js
neg
fbstp
pop
sub
jecxz
add
rcl
inc
xlat
mov
in
mov
(bad)
shl
mulps
jo
mov
in
outs
out
mov
mov
jl
mov
outs
adc
adc
pusha
int
mov
cmp
or
sahf
movs
lea
call
cwde
sub
neg
or
push
inc
sub
push
adc
jle
mov
retf
movs
mov
pop
and
cmps
rcr
enter
fisubr
lahf
mov
(bad)
imul
cs
adc
push
mov
push
cwde
test
jb
imul
mov
mov
dec
adc
and
cs
fwait
cld
dec
sbb
and
inc
add
and
dec
sbb
frstor
adc
xlat
inc
fnstcw
stos
xlat
adc
mov
adc
sbb
jg
pop
cmps
jo
dec
aad
out
test
xor
je
bnd
cli
mov
out
cld
pusha
loopne
cli
jb
xchg
retf
out
repnz
or
inc
in
fistp
add
test
retf
jmp
push
in
sub
sub
add
or
adc
dec
iret
push
shl
data16
bound
lods
js
imul
jmp
cmp
cmp
add
es
loope
fiadd
push
mov
das
scas
mov
fs
lds
jmp
lahf
out
sub
in
jge
xchg
mov
sbb
inc
pop
pop
fdivr
jb
bound
jnp
and
inc
sub
jmp
and
hlt
lods
into
push
stos
(bad)
jecxz
add
push
call
cs
mov
ret
mov
scas
retf
ret
xchg
cmp
push
mov
fld
push
push
xchg
cld
sbb
mov
adc
std
neg
and
adc
(bad)
(bad)
push
in
add
fiadd
jle
push
xor
jp
xor
ret
push
movs
ret
xchg
xchg
adc
sbb
jmp
std
outs
push
into
arpl
fmulp
enter
aam
call
push
lods
xchg
test
rcr
and
int
pop
rcl
(bad)
mov
push
mov
mov
pop
mov
lods
push
imul
outs
clc
ins
xchg
enter
add
(bad)
sub
sbb
call
jne
jmp
test
dec
dec
das
out
scas
adc
in
push
stos
sbb
xchg
mov
test
sub
adc
ins
add
pop
jne
mov
mov
iret
cli
ss
sti
(bad)
loope
and
cmp
fs
and
inc
xor
ja
pop
push
sub
jno
push
pop
add
and
and
iret
fidiv
cmp
pop
dec
sbb
inc
sbb
jge
push
and
je
sbb
outs
push
addr16
xchg
xchg
mov
ror
fldenv
sub
cmp
mov
scas
stos
cwde
int3
jns
mov
daa
cld
pop
in
cmps
nop
scas
jbe
inc
add
push
or
dec
add
adc
test
mov
adc
movs
mov
inc
dec
leave
scas
push
icebp
sub
mov
aas
sub
add
adc
ss
pop
or
fstp
std
jp
xchg
inc
fwait
mov
clc
dec
mov
data16
push
pop
call
js
daa
dec
fimul
mov
hlt
push
or
das
jmp
movs
xchg
lods
hlt
mov
mov
loop
xchg
mov
jns
shl
inc
mov
xor
xor
adc
pop
hlt
sub
pop
or
push
(bad)
cmp
cs
adc
jo
mov
arpl
pop
xor
scas
xchg
into
mov
mul
mov
stc
bound
dec
sbb
sub
aad
test
mov
xor
xor
test
jmp
pop
enter
mov
jo
cmps
mov
add
jo
jecxz
call
pop
adc
(bad)
push
cmp
pushf
jne
cmp
imul
dec
push
loopne
xor
cli
xor
xor
repnz
jns
inc
push
sti
mov
gs
clc
jmp
mov
push
add
mov
(bad)
cmp
gs
nop
jno
sbb
dec
inc
hlt
sub
loopne
out
cmp
(bad)
pop
mov
pushf
sahf
aad
pushf
cdq
push
push
or
jns
add
mov
rcr
stc
jl
mov
out
inc
(bad)
loopne
xor
xor
dec
xor
dec
xchg
push
sub
jno
cmp
push
mov
fldz
sbb
pop
xor
test
int3
jo
popa
not
movs
pop
and
in
stc
sbb
pop
popf
iret
test
push
pop
rcl
push
mov
(bad)
pop
gs
sub
sbb
jle
cmp
mov
mov
pop
jmp
and
mov
inc
daa
dec
sub
push
jl
fidiv
pop
or
std
or
test
push
sub
xchg
mov
or
int3
add
xchg
aas
repz
loop
fs
mov
pop
jno
inc
clc
xor
(bad)
(bad)
mov
sub
les
dec
loopne
dec
shr
xchg
data16
adc
in
rcl
out
inc
and
in
add
in
repnz
es
not
add
xchg
(bad)
icebp
push
fst
in
dec
setns
sub
popa
(bad)
out
jne
dec
pcmpgtb
sahf
retf
(bad)
aad
sahf
or
pop
jle
push
mov
or
pop
cmp
push
test
call
shl
xchg
or
iret
pop
shl
or
lods
repz
(bad)
mov
test
movs
in
cs
mov
add
std
jns
inc
mov
add
outs
add
and
clc
cmp
cmps
(bad)
mov
jb
dec
pop
and
imul
int
mov
and
in
stos
dec
sbb
inc
in
loopne
jmp
or
pop
or
dec
add
fiadd
mov
xchg
mov
je
lea
sbb
pop
dec
(bad)
jg
add
sub
mov
cmp
inc
(bad)
das
sub
or
or
inc
leave
sub
dec
mov
les
mov
imul
xchg
ret
pop
mov
xchg
dec
shl
sbb
cmps
mov
ret
in
shl
adc
jbe
popa
ror
push
jmp
call
je
inc
stc
mov
out
test
popa
in
adc
xor
mov
outs
adc
icebp
(bad)
lds
adc
push
pop
aam
or
dec
xchg
xchg
imul
test
fwait
xchg
int
shl
and
mov
sub
or
add
js
inc
cmps
mov
aaa
jo
inc
ins
cmp
in
clc
arpl
pusha
add
shl
push
repnz
jno
pxor
xor
add
push
jmp
lods
xchg
cmp
imul
push
inc
adc
sub
jb
int
je
cmp
mov
sub
bound
sub
dec
sub
cld
ret
pushf
cmc
jmp
and
outs
ins
retf
push
in
sub
dec
adc
outs
mov
pushf
xchg
xor
mov
add
adc
push
adc
fistp
cmc
push
mov
mov
sub
mov
sub
stc
and
mov
sahf
and
test
xchg
in
mov
mov
xchg
(bad)
std
mov
jg
fistp
jo
hlt
sub
ss
int
push
xchg
xchg
pand
jecxz
in
ins
aad
sbb
sbb
mov
test
or
out
xor
push
adc
fwait
mov
dec
mov
pop
sti
gs
das
jno
pop
mov
inc
mov
jnp
xlat
adc
nop
int3
stc
(bad)
mov
std
xchg
test
mov
or
fld
add
adc
lahf
lods
mov
(bad)
sub
cs
into
call
mov
imul
jno
jp
pop
scas
(bad)
mov
push
sub
repnz
xor
test
test
popa
dec
add
jle
nop
mov
fwait
adc
adc
inc
inc
ds
add
(bad)
fdivr
push
test
int3
xor
test
mov
push
sub
inc
push
scas
adc
inc
sti
sub
jno
or
(bad)
popa
push
mov
mov
ret
xlat
frstor
pop
mov
push
pop
xor
xchg
add
ins
or
addr16
rcr
jo
push
ins
mul
pop
push
push
lahf
iret
test
jmp
clc
dec
xchg
or
js
or
popf
jne
ja
or
(bad)
adc
inc
cs
xor
jl
inc
or
int
scas
mov
xor
mov
es
in
in
imul
dec
arpl
inc
movs
mov
arpl
out
sahf
push
xor
mov
(bad)
pushf
test
test
cmp
push
add
popa
adc
xor
push
pusha
pop
cmp
jb
and
cmp
pop
mov
adc
retf
outs
ins
or
mov
nop
iret
sti
dec
aam
movs
in
mov
sbb
mov
pop
enter
cmp
ret
pop
add
popa
movs
mov
mov
and
jne
arpl
retf
add
stos
dec
into
jnp
push
mov
dec
mov
xchg
test
mov
aam
out
pop
retf
bndstx
lea
mov
(bad)
movs
mov
push
push
stc
jne
pop
adc
jo
jp
or
imul
mov
xchg
int
and
mov
daa
push
cmp
dec
xchg
pop
sahf
mov
pop
mov
mov
add
and
mov
push
in
in
sahf
xchg
mov
mov
adc
adc
jmp
ins
clc
xchg
cmps
sbb
add
sbb
gs
imul
xchg
pop
mov
adc
cmp
sbb
sahf
xor
inc
ret
cs
movs
mov
mov
and
das
std
pop
jmp
cmp
cli
push
lds
adc
fld
sbb
adc
test
xchg
retf
cmps
nop
xchg
mov
mov
mov
dec
sbb
push
aad
xchg
fdivr
jae
aam
and
mov
cmp
mov
xchg
jo
popf
out
xor
jmp
push
xchg
test
ss
jmp
adc
dec
inc
or
addr16
popf
repz
fist
jle
add
and
cmp
retf
push
mov
sub
jo
sub
stos
cmp
xchg
mov
fstp
cs
mov
and
into
dec
inc
sbb
jbe
dec
(bad)
mov
push
movs
pop
sub
inc
aas
inc
xor
push
pop
data16
mov
loope
out
call
mov
gs
in
(bad)
mov
jae
dec
jl
push
fcomp
xor
dec
push
mov
jns
inc
jno
jmp
cdq
xor
xchg
cmps
dec
pop
xchg
scas
cmp
rcr
mov
mov
add
cmp
retf
(bad)
mov
(bad)
push
sub
cmp
sbb
inc
inc
std
lods
in
addr16
(bad)
out
or
sub
mul
xor
lds
inc
add
sbb
and
xchg
(bad)
or
xor
scas
xchg
(bad)
in
leave
adc
xor
cmp
inc
mov
push
mov
popf
ret
inc
data16
lahf
nop
pop
js
or
xchg
and
stc
std
std
bound
mov
fwait
(bad)
sbb
push
and
lods
adc
out
sub
push
dec
call
in
jns
xchg
adc
xchg
sub
sub
xor
(bad)
fdiv
ins
imul
aam
shl
ins
mov
xchg
dec
jmp
cdq
sbb
mov
push
dec
jo
xlat
test
push
jae
loopne
ds
es
stos
sub
jne
push
adc
xchg
in
int
or
fs
mov
xor
popf
push
adc
and
call
dec
retf
adc
xor
shr
jne
(bad)
in
pop
in
xchg
les
mov
test
add
mov
das
retf
shl
mov
adc
pop
in
mov
and
sub
adc
and
push
or
adc
pop
clc
and
shr
sub
xchg
pop
or
clc
ret
pusha
int
mov
imul
fstp
cmp
pop
cmc
das
repnz
xor
xor
aaa
fisub
icebp
push
repz
pop
and
or
pop
out
push
push
sahf
cmp
sbb
aas
sub
add
push
adc
sub
cs
pop
imul
and
aas
daa
dec
sub
jbe
imul
scas
retf
cmp
jno
ss
and
test
leave
jmp
or
repz
dec
sbb
pop
push
add
outs
sbb
or
mov
inc
or
sbb
inc
or
mov
mov
mov
push
add
fnsave
ins
sbb
outs
cld
test
pushf
lods
iret
test
push
and
js
cmp
jle
push
sbb
fld
loop
xor
adc
mov
jg
test
call
je
push
or
sub
mov
mov
push
aas
push
pop
cmp
sub
xor
in
push
daa
mov
(bad)
cmp
retf
mov
jl
mov
cli
test
popa
ret
xor
ins
sub
loop
repnz
xchg
mov
test
out
std
mov
cmp
dec
mov
ss
je
fscale
xchg
ret
cmp
aaa
jp
and
out
pop
cmps
dec
imul
ins
pushf
or
sub
push
mov
mov
push
mov
mov
inc
or
pop
xchg
xor
hlt
adc
fcom
int
sbb
jmp
jno
inc
outs
ffree
push
adc
(bad)
sbb
cmp
fcomp
ret
add
dec
fcom
repz
and
stos
jbe
enter
and
daa
pop
ds
jmp
sub
mov
mov
xchg
pusha
movs
mov
pushf
xchg
cmps
bound
jecxz
push
leave
out
mov
jmp
xchg
dec
fidiv
adc
mov
mov
mov
ins
sub
jmp
cmp
int
and
ret
out
xchg
mov
imul
sti
add
dec
add
mov
xchg
sub
in
pop
sbb
js
push
mov
pop
cmp
popa
and
pop
sahf
les
cs
add
sti
pop
pop
xor
cmp
inc
stos
fnstsw
jmp
fstp
add
sahf
leave
jg
(bad)
pop
add
scas
shl
cmp
js
retf
dec
sub
ss
adc
sub
xchg
ror
or
pop
or
mov
dec
add
cdq
add
inc
fwait
shr
mov
shr
cli
out
fst
jo
mov
and
cmp
mov
outs
add
or
in
jno
inc
add
aam
sub
fadd
out
lea
jecxz
xchg
iret
mov
jp
fs
jbe
dec
call
mov
dec
mov
mov
fistp
loopne
xlat
cmp
pop
fsubr
sbb
and
ret
dec
jmp
aam
fidiv
mov
inc
ror
in
xchg
dec
mov
pop
mov
js
aaa
cld
mov
shl
outs
adc
cmp
mov
scas
enter
repnz
inc
paddb
mov
retf
or
and
sub
push
fidiv
jo
push
(bad)
xchg
cmp
inc
call
dec
dec
pop
mov
out
and
sti
add
cmps
pop
repz
mov
cmp
stc
cmps
ret
sub
mov
fcom
push
and
ins
adc
sub
daa
pusha
or
add
ss
jmp
ret
or
and
add
push
push
jnp
xor
pop
or
and
popf
scas
mov
cmp
jg
je
jle
mov
jb
xchg
mov
stos
dec
retf
adc
and
xchg
jne
bound
fldcw
imul
out
mov
dec
lods
pop
ret
push
rol
aam
or
add
repnz
int3
cmp
add
dec
cwde
ins
scas
jbe
sbb
sahf
jl
cmps
mov
test
imul
mov
lahf
mov
mov
mov
xchg
mov
and
mov
jbe
jae
inc
std
ss
push
sbb
loope
pop
add
and
push
add
sub
rol
outs
movs
popa
cmps
push
rol
xor
test
arpl
dec
xchg
fist
sbb
adc
adc
add
mov
jmp
push
ret
and
xor
push
rcl
xchg
les
jmp
int
pop
(bad)
fwait
mov
adc
sti
xchg
adc
fs
clc
mov
mov
add
pop
xchg
call
imul
jae
xor
mov
mov
bound
mov
pop
or
mov
pop
adc
or
arpl
ret
ss
aad
clc
mov
push
xchg
ins
shl
inc
sub
movs
sbb
aad
cmp
in
jae
inc
xlat
test
jbe
shl
mov
dec
fadd
add
retf
jg
dec
jmp
push
movs
push
test
jno
mov
jp
jecxz
sahf
lsl
stc
xchg
fsubr
(bad)
pusha
aaa
test
(bad)
call
fstp
inc
inc
cmps
mov
adc
mov
outs
mov
jmp
jns
xchg
(bad)
pop
popa
cmp
(bad)
fdivr
pusha
xchg
sub
sar
inc
xchg
mov
jmp
pop
mov
mov
inc
sub
cmp
xor
add
mov
movs
aam
aam
dec
lea
imul
popf
in
sbb
daa
push
push
cmp
mov
(bad)
xor
mov
arpl
adc
pusha
(bad)
pop
fist
lods
shr
aas
das
push
and
in
xchg
in
push
and
mov
enter
sbb
fs
in
mov
mov
repz
add
push
push
call
call
pushf
rol
or
ret
fs
js
inc
pop
jmp
or
movs
sbb
imul
mov
arpl
inc
out
fld
cdq
dec
lock
neg
je
std
sub
add
loope
sbb
add
pop
loopne
push
icebp
push
xchg
mov
stos
outs
lock
out
movs
push
test
and
jb
jge
sbb
out
sbb
sub
dec
loope
aam
sbb
cmp
adc
and
lock
mov
in
jne
pop
call
cwde
mov
ins
scas
pushf
cmps
cmps
pop
mov
pop
sahf
lea
mov
fldcw
stos
and
xor
fsub
push
mov
mov
mov
cmp
adc
popa
ret
jg
mov
jb
xchg
dec
ss
jb
add
inc
adc
pop
xchg
imul
repnz
or
add
fcomp
mov
adc
lock
pusha
or
ins
stos
leave
imul
push
test
adc
mov
mov
lahf
lock
ja
data16
pushf
in
pop
aas
hlt
cmp
(bad)
data16
or
shl
xchg
rcr
mov
and
iret
dec
sbb
push
push
pop
sub
lock
rep
retf
lods
in
bound
dec
pop
jbe
fwait
adc
(bad)
aam
sub
rcr
pop
pop
mov
outs
or
xchg
sub
jb
push
mov
mov
aas
lea
xor
rcl
jns
sbb
push
and
sub
lds
sub
enter
and
pop
push
mov
ins
cmp
xchg
dec
cmp
push
imul
test
leave
mov
pop
sahf
mov
repnz
mov
dec
mov
scas
(bad)
sbb
lods
xchg
sahf
scas
fld
pop
jle
push
aad
inc
jle
dec
cmp
or
sbb
jo
push
fistp
push
adc
jb
mov
pusha
mov
xchg
fs
add
mov
dec
loopne
jp
or
cs
sbb
retf
fcom
push
out
pop
mov
loopne
cwde
loopne
and
scas
mov
push
daa
xchg
fcomp
repnz
push
pop
les
bsf
inc
fstp
scas
ins
jb
iret
lea
test
pop
mov
call
cmp
rcl
and
fsqrt
cmp
or
xor
dec
and
fld
pop
sahf
cmp
loopne
mov
jp
repnz
pop
mov
mov
stos
pop
pop
pop
scas
pop
inc
xchg
test
mov
add
rol
shr
loope
xor
mov
movs
es
jbe
outs
pop
mov
push
mov
pop
(bad)
int
cld
pop
ds
inc
mov
dec
or
clc
xor
imul
sub
clc
cmc
inc
mov
(bad)
enter
mov
adc
in
mov
rcl
aad
mov
lds
jl
mov
arpl
add
mov
or
mov
add
popa
icebp
mov
xor
fldenv
fmul
dec
les
adc
leave
and
cmps
addr16
add
fadd
xor
or
(bad)
jmp
sbb
es
shl
loop
fwait
das
or
(bad)
in
sub
push
outs
push
pop
daa
sbb
pop
scas
push
sub
arpl
ja
mov
lahf
enter
mov
popf
ss
cwde
pop
std
sbb
push
enter
in
ds
in
xchg
movs
cmp
adc
and
scas
jle
outs
in
push
rcr
int3
inc
add
js
stos
jl
data16
hlt
dec
rcl
mov
sbb
inc
add
jge
push
mov
sub
inc
cmp
mov
dec
adc
and
push
pop
dec
out
aam
mov
jle
rep
mov
call
cmp
sub
data16
pushf
mov
push
mov
lods
mov
mov
ss
or
movs
sub
cmp
adc
and
pop
mov
push
mov
mov
add
cmp
xor
imul
inc
icebp
cmp
pop
push
lock
dec
mov
add
pop
out
in
jecxz
into
jo
pop
icebp
jns
jl
jl
add
cs
inc
(bad)
aaa
cli
sbb
imul
lods
ins
retf
into
push
mov
add
clc
cmp
ds
or
mov
mov
and
or
cmps
les
aaa
inc
shl
push
sub
lods
(bad)
inc
mov
std
je
movs
xchg
stos
aaa
xor
mov
xor
adc
jne
imul
jno
movs
out
pop
aaa
add
cmp
or
mov
retf
adc
test
aam
inc
cmp
push
call
(bad)
call
in
(bad)
jecxz
xchg
lods
fisubr
lods
std
xchg
adc
xchg
into
jbe
jmp
inc
imul
mov
iret
cli
loop
push
dec
shl
pop
retf
lahf
mov
popf
push
iret
(bad)
aas
and
stos
scas
sub
fnsave
stos
int
lea
and
rcr
pop
dec
inc
test
add
inc
mov
sbb
jbe
xor
xor
addr16
xchg
or
stc
and
(bad)
pop
and
mov
stc
adc
popf
jle
push
pop
or
call
push
push
push
mov
add
xchg
mov
push
es
mov
dec
adc
dec
and
jmp
cmc
add
sbb
cmp
rol
jl
push
jl
push
in
jb
pop
cmp
pop
mov
sbb
addr16
push
aam
add
pushf
movs
dec
mov
repnz
sti
pop
jecxz
sub
mov
cmps
addr16
push
cmp
sub
je
jge
jne
outs
iret
lea
scas
pop
jmp
sub
jns
cmp
cmp
add
cmps
pop
mov
cmps
into
scas
mov
ret
lods
xchg
mov
mov
sbb
xor
mov
xchg
test
shl
fstp
push
mov
mov
mov
test
outs
mov
stc
adc
outs
daa
adc
sbb
sbb
loope
push
out
mov
dec
or
jg
xchg
sbb
in
mov
mov
(bad)
out
hlt
xchg
imul
inc
jmp
fdivr
adc
pop
pusha
sub
inc
push
dec
push
xor
aam
mov
mov
cmps
ret
mov
mov
cmps
into
cwde
into
sahf
outs
xchg
leave
ret
jb
in
sub
iret
stc
mov
mov
xor
call
pushf
add
xlat
test
push
rol
enter
pop
stos
imul
inc
sbb
test
jo
ja
xor
in
repnz
xor
popf
repnz
test
xor
test
inc
je
jmp
cwde
iret
cmp
stos
out
mov
xlat
ret
jb
push
mov
cmp
mov
stos
add
fmul
and
scas
scas
adc
(bad)
mov
ficom
loop
loopne
es
pusha
xor
imul
std
and
clc
mov
sub
jle
or
lods
mov
cdq
outs
test
and
loope
dec
stc
pop
mov
mov
cmp
cmp
cld
add
sub
mov
mov
dec
or
int
icebp
fcomp
out
in
stos
aas
dec
xor
xor
shl
aas
push
xchg
xchg
xchg
aad
retf
adc
pusha
xchg
mov
and
outs
mov
mov
(bad)
movs
ror
call
or
sbb
maskmovq
div
add
push
movs
jno
and
or
inc
add
pop
xor
ins
dec
jp
loopne
add
imul
jmp
xlat
push
jmp
push
push
call
jbe
dec
adc
adc
inc
mov
cmp
repz
add
xlat
and
sbb
ins
lock
push
aaa
ds
ds
and
push
dec
push
pop
sbb
sub
push
xor
out
inc
mov
xor
xor
je
mov
pop
mov
xor
add
jnp
pop
sub
sub
mov
test
data16
(bad)
cmp
sbb
xchg
pop
add
aas
jmp
outs
ss
jo
sbb
retf
jg
add
push
sbb
aad
ins
in
popa
in
or
rol
pop
mov
int
cld
lea
fsubr
inc
cmc
xchg
mov
or
pop
mov
arpl
push
dec
cli
push
call
pop
add
dec
mov
xor
and
adc
and
xor
call
mov
je
sbb
and
xor
pop
sar
and
cs
sub
push
or
xchg
in
mov
out
mov
jns
aaa
dec
add
repnz
xchg
jae
(bad)
lahf
mov
cdq
ret
xchg
cwde
lods
movs
mov
rol
pop
or
dec
or
cld
mov
push
pop
mov
repz
xchg
rcr
scas
shr
inc
cmp
push
fld
xor
adc
cmc
push
or
fsub
jne
jae
mov
js
xor
jecxz
push
pop
bound
push
dec
pop
fistp
data16
icebp
cmps
loope
aam
jmp
ror
pop
fbld
cmps
in
shr
or
imul
pop
cmps
mov
pusha
enter
fwait
pop
loope
test
cld
xchg
sub
movs
and
xchg
je
ins
and
xchg
sub
rol
push
xor
pop
adc
cs
test
sbb
(bad)
clc
sbb
or
inc
xor
push
adc
sti
mov
sbb
dec
dec
push
test
cli
loopne
cwde
pop
adc
jnp
icebp
sub
mov
cmps
fs
lea
int3
mov
or
push
jmp
jecxz
sahf
mov
cmc
inc
jecxz
push
push
inc
pop
jo
(bad)
ins
leave
mov
mov
outs
cmps
xlat
nop
loope
fldenv
cmp
push
rcl
lock
scas
enter
repz
fidivr
outs
push
push
xor
out
xchg
test
push
xchg
xchg
sub
enter
ret
pop
and
lods
movs
retf
jp
lea
or
xchg
jno
jp
or
push
iret
mov
or
pop
frstor
in
push
xor
hlt
je
aaa
adc
adc
pop
jmp
outs
in
add
call
stos
popf
jecxz
movs
stc
mov
scas
fs
fild
inc
test
add
mov
dec
or
push
push
pop
xor
mov
xor
aaa
pop
push
inc
sti
mov
xchg
out
scas
popf
movs
aaa
pusha
dec
jae
sub
jns
in
std
jl
inc
out
aaa
mov
sbb
xchg
pop
push
arpl
push
sbb
div
mov
xor
dec
or
mov
dec
jo
loopne
hlt
sbb
fisttp
test
rcl
push
fs
mov
pop
aam
addr16
adc
push
sbb
rol
gs
push
xor
lods
(bad)
js
aam
and
push
int3
push
fcom
addr16
pop
xchg
xchg
jns
pop
jecxz
sub
aad
test
xchg
in
xchg
hlt
inc
and
retf
cs
mov
imul
push
and
retf
out
imul
inc
push
or
sbb
sar
pop
mov
fs
add
int
sahf
jns
adc
test
sbb
dec
enter
add
sub
mov
bound
sar
inc
fbstp
xor
inc
add
and
out
jmp
push
dec
out
mov
(bad)
test
adc
jae
pushf
dec
or
xchg
jmp
loop
sbb
cmps
fimul
mov
pop
aad
into
imul
cmp
jae
popf
(bad)
mov
jns
aas
jecxz
mov
sbb
nop
stos
retf
jno
inc
(bad)
cs
or
enter
lock
inc
push
jns
dec
add
adc
xchg
xor
scas
ins
xor
add
cmp
sbb
out
inc
mov
jecxz
mov
pop
ds
pop
mov
mov
add
std
inc
scas
ret
outs
call
outs
fild
(bad)
movs
shl
ret
sbb
(bad)
push
add
sti
mov
jb
imul
lahf
adc
daa
push
arpl
movs
je
xchg
lahf
push
cmp
add
push
cmp
dec
cmp
and
sub
cmps
int3
jl
mov
int
aad
fxch
cmps
sti
ret
adc
mov
and
mov
lods
int3
gs
imul
xchg
push
or
(bad)
cdq
cmps
shr
dec
pop
nop
add
add
add
add
(bad)
inc
add
sbb
push
inc
add
add
adc
add
add
pop
mov
int
mov
push
push
cmp
jg
outs
and
outs
outs
outs
je
bound
jb
outs
and
and
and
fs
add
add
add
add
add
dec
add
loope
cmp
add
add
add
add
or
add
add
xor
add
add
add
add
add
mov
pop
or
and
add
add
add
add
add
add
add
add
add
add
add
add
dec
cmp
pop
add
add
add
inc
test
add
add
adc
add
add
add
adc
add
add
add
sbb
push
add
add
add
add
add
add
rol
push
add
add
add
push
cmp
or
add
add
add
add
add
add
add
add
add
add
add
dec
sub
or
add
add
sbb
add
add
add
and
add
add
add
add
cmp
or
sub
add
add
popa
add
add
add
add
add
add
add
add
add
sbb
pop
add
add
add
pusha
cs
popa
je
add
cmp
add
add
add
jae
sbb
add
add
add
add
add
add
cs
jb
add
add
add
jbe
or
add
push
add
inc
add
inc
cs
ins
or
sbb
add
add
add
add
add
cwde
add
jb
adc
push
add
add
push
pop
add
add
add
adc
jae
adc
pop
add
add
adc
add
add
push
sbb
add
add
push
pop
add
add
adc
add
add
jo
adc
push
add
add
adc
add
adc
add
add
add
sbb
dec
sbb
or
add
add
sbb
push
add
add
sbb
push
add
add
sbb
add
add
add
add
add
add
add
add
add
sbb
add
add
push
and
add
add
add
sbb
push
add
add
add
icebp
mov
add
add
push
jns
je
ins
cs
gs
jne
arpl
cs
sbb
jle
push
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
push
aaa
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
jl
jg
imul
push
jne
je
ins
gs
gs
jne
arpl
gs
add
cmp
add
push
inc
inc
push
inc
inc
push
mov
add
jmp
retf
add
add
shl
adc
push
js
je
ins
cs
gs
jne
arpl
cs
gs
jne
arpl
sub
jg
and
outs
jb
imul
jae
outs
outs
cmp
xor
xor
js
push
jbe
gs
jb
ins
sub
push
jne
ins
imul
imul
push
sub
xor
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
pop
jae
jne
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
dec
ins
push
inc
push
inc
inc
push
push
je
add
add
add
add
add
add
add
add
add
gs
ja
jb
imul
xor
and
arpl
imul
adc
aas
and
cmp
popa
jae
and
jb
imul
xor
and
ins
and
sub
je
cmp
das
jae
push
cs
imul
je
arpl
dec
inc
je
bound
das
xor
xor
xor
das
ins
imul
ds
push
imul
jae
je
outs
outs
dec
outs
outs
ds
and
popa
je
xor
xor
sub
sub
xor
xor
cmp
cmp
xor
xor
aaa
cmp
inc
popa
je
ds
and
push
push
push
inc
push
dec
inc
pop
cmp
inc
jne
push
or
xor
jae
jb
je
outs
outs
dec
outs
outs
ds
push
jb
addr16
add
and
and
cmp
outs
outs
outs
push
jb
addr16
or
and
and
push
jne
push
gs
jne
cmp
inc
outs
popa
bound
ds
and
and
popa
aas
pop
push
push
inc
push
dec
inc
pop
cmp
push
jae
jb
fs
and
dec
cmp
jg
push
jno
addr16
or
and
imul
outs
outs
push
add
imul
and
and
and
gs
ins
jae
cmp
inc
cmp
bound
aas
or
and
push
imul
outs
outs
push
jb
addr16
add
and
push
jb
addr16
ds
push
jb
outs
arpl
popa
ins
daa
add
and
and
jb
outs
arpl
popa
ins
and
cmp
push
or
and
and
fs
push
push
inc
push
dec
inc
pop
cmp
push
jae
jb
fs
xor
and
and
outs
outs
outs
push
jns
gs
outs
je
jb
arpl
gs
outs
sub
xor
dec
outs
outs
outs
push
jns
gs
and
and
jne
dec
gs
ins
push
jbe
imul
jb
jbe
ins
gs
push
jne
dec
gs
ins
ds
and
dec
jg
ins
bound
popa
ins
ds
das
push
jb
outs
arpl
popa
ins
jae
or
pop
outs
ja
imul
and
and
cmp
jne
je
jo
gs
outs
jae
popa
outs
add
imul
je
jo
js
jae
imul
ins
je
jo
xor
jp
ins
bound
push
outs
ins
imul
and
and
imul
push
sub
fs
outs
inc
popa
je
gs
gs
popaw
ins
jae
cmp
inc
imul
popa
ins
ins
jne
dec
dec
outs
inc
popa
je
gs
gs
or
and
je
jo
push
pop
arpl
fs
outs
inc
popa
je
gs
gs
je
jne
cmp
push
je
jo
inc
outs
or
inc
ins
inc
pusha
je
gs
gs
or
and
ins
ins
outs
ja
popa
jb
push
push
push
jns
push
jne
ds
ins
jae
cmp
inc
ins
ins
outs
ja
popa
jb
push
gs
imul
push
and
and
cmp
je
jb
push
push
popa
imul
jb
adc
cmp
bound
push
push
popa
imul
or
and
and
jne
sbb
gs
gs
outs
jb
inc
jbe
imul
popa
ins
jae
cmp
push
jne
push
jnp
jp
addr16
gs
outs
jb
inc
jbe
imul
or
and
and
es
jbe
popa
ja
imul
and
and
and
cmp
je
jo
outs
dec
fs
gs
daa
pop
and
ja
cmp
push
je
jo
outs
dec
fs
gs
outs
fs
and
and
pop
arpl
jno
dec
outs
dec
fs
gs
ins
jae
cmp
push
gs
popa
jb
dec
outs
dec
or
push
and
and
cmp
dec
fs
gs
gs
imul
and
and
cmp
push
jne
jge
ja
jb
dec
outs
inc
gs
popa
outs
fs
jne
cmp
inc
ins
ins
outs
ja
je
cmp
imul
ds
and
gs
jne
cmp
cmova
push
gs
and
imul
ins
jae
cmp
dec
imul
and
and
cmp
jne
dec
outs
ins
jns
dec
fs
gs
ins
jae
cmp
push
pop
js
imul
ins
gs
and
popa
imul
push
jne
ds
pop
outs
imul
gs
outs
push
jne
ds
and
je
outs
outs
ins
inc
popa
bound
ins
imul
das
inc
js
arpl
imul
dec
imul
and
and
cmp
jb
outs
jb
je
ds
cmp
push
jb
outs
jb
je
ds
sub
je
imul
and
cmp
arpl
outs
jae
inc
outs
outs
je
push
push
xor
inc
jbe
push
or
and
or
and
and
jb
push
pop
dec
dec
inc
inc
push
dec
dec
dec
pop
cmp
inc
outs
ins
ins
popa
outs
fs
xor
sub
arpl
or
das
inc
arpl
outs
jae
or
popa
jae
inc
and
adc
add
adc
add
sub
add
add
add
add
sub
add
adc
add
add
add
add
add
sub
push
sub
sbb
or
fld
add
jno
adc
pop
jno
add
jo
sub
add
or
adc
adc
adc
(bad)
adc
ds
add
add
add
sub
add
mov
add
add
add
xchg
cmp
push
pop
sbb
add
jo
sub
add
or
add
pop
jle
add
or
add
sbb
add
adc
add
cmp
inc
adc
adc
sub
jae
add
inc
dec
push
adc
sub
add
or
or
or
xor
sub
add
or
or
mov
add
lea
jo
adc
push
adc
push
and
add
add
or
inc
adc
adc
sub
adc
jnp
inc
sbb
pop
cvtpi2ps
add
push
push
inc
adc
adc
sub
jae
add
or
push
add
add
imul
sbb
push
push
inc
adc
adc
sub
jae
add
or
adc
pop
sub
adc
add
or
(bad)
adc
sbb
add
inc
add
push
push
inc
adc
adc
sub
jae
sbb
add
or
pop
inc
adc
adc
sub
adc
jnp
add
add
pop
sub
push
push
pushf
and
adc
sub
jae
add
or
add
or
push
(bad)
sub
add
or
adc
add
sub
add
or
adc
add
add
add
or
adc
add
add
pop
inc
sub
and
sbb
pop
sub
adc
add
sub
pop
add
sbb
sbb
pop
adc
adc
jnp
add
sbb
and
xor
add
inc
sub
add
adc
adc
inc
adc
adc
sub
jae
sbb
add
adc
jnp
add
add
or
adc
adc
sub
add
push
inc
adc
adc
sub
push
push
or
or
or
clc
add
add
adc
add
or
sub
add
or
or
inc
adc
add
add
nop
sub
add
or
adc
adc
sub
xor
push
sbb
pop
adc
pop
adc
sub
add
or
adc
adc
inc
push
inc
adc
adc
sub
xor
rcl
aad
sbb
add
adc
add
adc
push
push
adc
mov
or
adc
jnp
xor
or
movups
push
mov
add
push
push
inc
adc
adc
sub
jae
sbb
or
add
nop
(bad)
adc
add
adc
(bad)
adc
adc
adc
adc
sbb
push
(bad)
mov
add
or
push
adc
jnp
add
add
or
(bad)
adc
sbb
add
inc
add
push
push
mov
movhps
or
add
jp
adc
pop
sub
sub
add
or
add
adc
adc
push
adc
adc
add
add
or
inc
adc
adc
sub
adc
push
add
adc
sub
add
push
inc
adc
adc
sub
jae
add
or
push
add
cmp
or
pop
adc
sub
add
push
inc
adc
adc
sub
jae
add
or
adc
jnp
cmp
add
inc
add
push
adc
adc
sub
jae
add
or
add
add
add
retf
or
adc
adc
add
ins
and
or
pop
add
add
add
add
sub
push
cmp
pop
adc
adc
add
inc
adc
adc
sub
adc
outs
adc
add
add
add
add
aam
sbb
sbb
sub
add
add
add
(bad)
adc
add
add
popa
cmp
ficom
add
or
or
or
adc
add
fiadd
add
or
sub
inc
pop
add
add
add
xor
add
add
add
ins
add
add
add
add
sbb
cmp
add
daa
add
adc
jle
add
add
sub
add
or
sub
jb
add
or
add
outs
les
add
jae
add
or
pop
and
add
jle
add
pop
and
add
add
or
add
sub
add
add
add
add
sub
push
sub
inc
xor
add
sub
add
xor
add
add
add
add
adc
sub
add
jb
aaa
cmp
add
add
lds
add
or
add
sub
add
push
sub
add
or
push
add
add
add
add
sub
add
or
add
add
add
(bad)
push
xor
or
adc
add
sbb
add
adc
sub
add
push
outs
enter
or
sbb
push
add
push
outs
leave
add
or
add
sub
add
sbb
add
add
add
add
adc
xor
add
pop
inc
or
sub
add
add
add
pop
sub
add
or
pop
sub
add
pusha
cmp
jb
add
add
inc
or
sub
sub
add
push
adc
push
dec
add
push
jae
add
or
aam
push
or
add
add
add
or
sub
add
or
fadd
add
add
add
xor
add
and
sub
add
add
xor
add
add
add
add
jo
inc
or
add
sub
push
sub
xor
add
or
add
add
add
xor
movs
sbb
adc
jle
add
add
or
sbb
add
add
jle
add
add
sbb
add
adc
add
add
inc
adc
add
add
or
jle
add
add
sbb
adc
fst
add
add
add
outs
sbb
add
or
outs
sbb
add
adc
or
adc
adc
sub
jle
add
add
jle
add
add
outs
sbb
add
or
add
push
pop
(bad)
or
add
pop
(bad)
or
adc
pop
adc
xor
add
pop
and
sbb
add
push
fisubr
add
or
jle
add
add
add
add
sbb
add
add
add
add
jle
add
add
sub
add
or
add
or
add
or
add
jge
adc
add
add
add
add
add
add
add
str
fld
or
add
add
sub
push
and
add
add
add
and
add
sub
fiadd
add
add
or
sbb
ins
daa
add
or
add
add
add
add
add
or
add
add
add
push
inc
add
push
add
sub
add
push
add
push
outs
sub
add
add
pop
outs
sub
add
add
pop
outs
push
sub
sub
add
add
sub
push
add
sub
add
push
outs
or
sub
je
adc
add
add
sub
add
or
add
add
jae
add
or
jae
xor
add
add
add
xor
add
add
add
or
jae
add
push
xchg
add
add
add
xor
add
add
add
add
add
add
add
cmp
sbb
das
add
sub
xor
add
add
add
jle
add
add
cmp
add
or
sbb
pop
xor
add
add
add
add
adc
jle
add
add
cmp
add
or
add
sub
adc
adc
add
adc
jle
add
add
cmp
add
or
add
sub
xor
add
push
or
add
add
add
add
cmp
add
or
add
sub
xor
add
add
xor
sbb
add
jp
add
add
add
add
jge
add
add
jnp
add
add
sub
push
sub
adc
xor
add
or
add
add
jnp
add
add
add
push
sub
add
and
dec
aas
out
or
sub
add
inc
add
or
add
jl
add
add
add
add
push
cmp
sbb
add
add
add
adc
add
adc
add
push
add
add
push
or
or
pop
add
add
add
out
add
jle
add
add
inc
push
(bad)
data16
or
add
add
add
sub
add
or
add
or
push
adc
sub
pop
push
pop
add
lea
add
add
inc
add
or
add
or
sub
add
add
or
das
sbb
add
jle
add
add
add
add
sub
add
or
inc
add
or
add
add
jae
adc
js
jae
xor
add
and
sub
and
add
or
add
or
or
stc
add
inc
(bad)
adc
jb
add
jo
lea
add
add
dec
add
or
sbb
or
inc
add
or
pop
or
add
or
add
or
adc
add
in
das
adc
push
add
add
add
add
sub
add
or
add
or
fadd
sub
js
or
add
lea
or
add
add
lea
repnz
add
add
inc
add
or
or
add
add
(bad)
push
add
add
outs
dec
add
or
add
add
adc
or
add
add
add
sub
add
or
add
add
xor
add
add
add
adc
add
add
and
add
sub
add
or
add
sub
add
xor
add
add
cmp
sbb
add
or
sub
push
sub
xor
add
add
add
add
adc
rol
add
sub
push
sub
xor
add
add
adc
add
add
sub
add
or
and
adc
add
adc
add
add
add
and
add
sub
add
or
add
adc
adc
add
add
add
adc
add
dec
add
or
sub
push
sub
xor
add
adc
adc
rol
add
add
add
add
or
add
sub
xor
add
add
jg
adc
add
add
or
add
sub
xor
add
add
add
add
stc
add
pop
sub
sub
add
sub
sub
sub
add
push
sub
xor
add
push
or
add
add
adc
push
add
add
sub
add
arpl
sbb
push
add
add
xor
add
add
add
add
adc
jle
add
or
xchg
sub
add
adc
or
add
or
sub
push
sub
add
add
sub
sbb
add
jae
add
or
add
add
add
add
add
cmp
add
jae
add
or
push
add
or
add
and
add
add
outs
and
add
sbb
and
xor
add
add
adc
jle
add
add
or
sbb
add
add
jle
and
add
or
add
add
sbb
add
inc
adc
add
add
or
push
or
pop
outs
sbb
add
pop
ficom
add
sub
or
add
outs
sbb
add
or
outs
sub
sbb
pop
push
adc
inc
push
inc
adc
adc
sub
jle
add
add
jle
add
fs
add
or
add
or
add
pop
(bad)
or
add
pop
(bad)
or
adc
pop
adc
arpl
add
add
sbb
add
push
fisubr
add
or
jle
add
add
xor
add
outs
pop
add
or
add
add
add
sub
add
or
add
or
add
fimul
add
sub
add
or
fadd
add
sub
add
adc
add
add
add
add
add
xor
add
add
add
add
adc
add
sub
add
add
add
inc
sub
or
sub
add
add
add
pop
add
or
add
or
add
sub
add
(bad)
push
add
add
add
add
add
add
and
add
adc
push
add
add
sbb
push
add
add
or
add
push
add
outs
pop
add
or
add
add
push
jb
dec
cmp
and
sbb
add
or
add
or
add
add
push
sub
add
inc
or
or
add
add
push
adc
pop
or
or
pusha
add
or
or
add
or
push
push
cmp
pop
add
jo
bound
add
add
outs
and
add
adc
adc
fs
push
or
add
or
add
add
push
push
outs
add
or
add
add
popa
inc
cld
or
jae
data16
or
add
add
push
pop
outs
add
or
add
push
and
add
js
or
push
inc
sub
add
add
push
outs
imul
pop
outs
push
add
add
adc
inc
sbb
sbb
add
or
adc
imul
or
add
add
or
outs
and
add
sbb
sbb
lsl
jb
add
jo
bound
add
add
and
add
add
add
add
add
jl
nop
add
or
add
outs
jo
add
add
jb
add
jo
jno
add
add
push
or
sbb
sub
xor
add
add
add
add
adc
jnp
add
add
sub
push
sub
adc
pop
jno
add
add
sub
add
add
outs
outs
add
or
add
out
sbb
add
add
or
add
sub
add
adc
add
adc
add
add
add
add
add
sub
add
add
sub
xor
add
cmp
pop
pop
add
jbe
add
pop
sub
or
sbb
sbb
pop
add
jo
jge
adc
add
add
or
add
jo
push
sub
add
or
add
add
xor
or
jp
add
add
add
add
push
call
push
call
das
jns
add
push
inc
adc
adc
sub
jle
add
add
call
add
cmp
ltr
call
sub
add
push
inc
adc
adc
sub
jae
add
or
jge
push
add
jb
add
jo
jle
add
add
outs
jge
add
pop
outs
jg
add
add
sub
jo
add
jo
add
or
add
jo
push
add
or
add
or
add
sbb
jo
sub
add
push
inc
adc
adc
sub
sub
stos
sbb
add
outs
test
add
or
push
inc
adc
adc
sub
jae
add
or
add
pop
outs
test
add
add
outs
jge
add
sub
xchg
add
outs
jle
bound
sbb
imul
add
jo
mov
add
add
outs
mov
add
sub
and
jo
add
add
call
sub
add
push
inc
adc
adc
sub
add
and
sub
add
sub
add
push
inc
adc
adc
sub
sub
add
push
adc
cmp
add
mov
add
add
add
add
add
call
sub
add
push
into
sbb
sub
add
add
call
sub
add
push
inc
adc
jae
xor
sub
add
push
adc
adc
sub
sub
add
jle
add
add
call
sub
add
or
inc
adc
adc
sub
sub
add
push
adc
adc
sub
sub
(bad)
jge
add
add
or
jo
sub
add
push
inc
adc
adc
sub
push
sub
and
and
sub
add
jle
add
add
or
and
or
inc
adc
adc
cmp
add
jle
add
add
or
adc
jle
add
sbb
or
add
add
or
or
add
jo
sub
add
push
inc
xor
sbb
mov
add
jb
add
jo
pop
sub
add
or
add
push
xchg
or
add
jo
pop
sub
add
or
add
mov
add
push
inc
adc
xor
pop
adc
add
or
lea
add
sub
add
add
or
push
sub
xor
add
xlat
add
jo
push
push
and
add
add
add
or
jne
add
jb
add
jo
pop
sbb
or
xchg
add
or
or
add
or
add
or
or
dec
add
push
adc
dec
dec
icebp
push
add
or
add
or
add
jo
add
or
add
or
add
fild
sbb
push
jno
add
or
or
or
add
jo
jle
add
add
or
lea
add
push
sub
sbb
adc
jo
add
sbb
add
sbb
add
add
sbb
pop
adc
add
add
sbb
or
add
or
adc
pop
outs
sbb
rol
add
sub
add
add
or
cwde
add
or
add
or
adc
mov
adc
sub
add
jle
add
add
setp
add
jo
sub
daa
adc
stc
add
and
and
jle
add
or
add
jo
outs
popf
add
or
or
sbb
jne
lahf
add
or
add
or
push
adc
jb
add
jo
sub
add
push
(bad)
ja
sbb
adc
or
jo
in
add
jo
lahf
add
or
add
jle
add
add
and
add
sub
add
push
inc
adc
adc
sub
add
add
add
adc
jbe
sub
add
push
inc
adc
adc
sub
sub
add
push
outs
mov
icebp
jnp
jle
pop
add
sub
add
outs
mov
add
add
add
adc
inc
push
and
push
inc
adc
adc
sub
add
add
add
adc
jo
pop
inc
adc
or
and
and
sub
sub
add
add
add
cmp
jo
sub
add
push
inc
adc
adc
sub
add
adc
or
sbb
add
or
add
jle
add
add
adc
add
sub
add
push
(bad)
push
push
lock
adc
adc
cmp
add
jle
add
add
push
call
add
pop
call
add
jo
mov
and
and
adc
jb
add
jo
adc
in
adc
adc
xor
jb
add
jo
lea
push
adc
push
adc
loopne
add
adc
adc
adc
pop
lea
add
and
and
pop
pushf
adc
sub
and
aas
adc
sub
add
or
adc
add
sub
add
or
movs
add
or
add
or
add
sbb
adc
adc
push
sub
add
push
adc
jle
add
add
sbb
sbb
add
adc
xchg
add
or
adc
add
jo
sub
add
push
inc
adc
adc
inc
and
push
adc
jb
add
jo
mov
inc
adc
jb
add
jo
xchg
or
inc
pop
adc
jb
add
jo
mov
inc
pop
adc
adc
sub
adc
and
adc
mov
add
add
adc
add
or
cmps
add
or
add
sbb
adc
sub
adc
mov
add
add
adc
add
or
cmps
add
push
sub
add
add
sbb
jo
sub
add
push
inc
adc
adc
cmp
and
add
add
sbb
add
add
sbb
add
add
sbb
js
add
add
sub
add
push
inc
adc
adc
sub
adc
pop
inc
adc
sub
das
push
pop
jb
add
jo
sub
add
push
inc
adc
adc
sub
adc
pop
xor
cmp
sub
pop
jb
add
jo
sub
add
push
inc
adc
adc
sub
inc
sub
cmps
add
or
sub
adc
jb
add
jo
sub
add
push
inc
adc
sub
cmp
sbb
cmps
add
or
add
push
sub
jb
add
jo
lea
sbb
push
push
jle
add
add
sbb
adc
adc
call
adc
pop
sub
add
adc
adc
push
pop
pushf
adc
sub
and
nop
sub
adc
push
pushf
sub
rcl
add
add
add
add
sub
add
add
sbb
push
push
sub
add
push
or
add
or
pop
call
xor
push
add
push
inc
adc
adc
sub
sub
xor
jo
xchg
add
or
cmp
add
add
add
add
pop
call
sub
add
push
inc
adc
cmp
sub
inc
add
jo
xchg
add
or
cmp
add
add
push
cmp
push
sbb
jo
sub
add
push
inc
adc
adc
sub
sub
adc
push
js
nop
add
or
cmp
add
add
pop
call
sbb
pop
inc
adc
adc
sub
sub
je
add
xchg
add
or
sub
jge
add
add
pop
call
sub
add
push
inc
adc
adc
sub
cmp
or
add
jo
xchg
add
or
sub
jle
add
add
pop
jmp
jae
sub
add
push
inc
adc
adc
sub
sub
push
add
add
or
call
sub
add
push
inc
adc
adc
sub
adc
push
xor
sbb
add
or
add
or
sbb
sbb
outs
lods
add
or
adc
outs
lods
add
or
sbb
adc
or
add
jle
add
add
sub
add
es
pop
and
or
sbb
adc
or
adc
cmps
add
or
sub
add
or
add
add
add
inc
xor
add
adc
sub
add
push
add
add
adc
add
add
add
add
add
add
add
pop
add
add
add
add
xor
add
add
add
sub
mov
mov
add
sbb
add
pop
sub
pop
mov
add
sub
sub
add
inc
cmp
or
or
add
push
sub
adc
add
inc
add
add
add
adc
sub
test
mov
add
sbb
add
pop
sub
jb
add
jo
sub
and
xor
dec
aaa
cmp
pop
sub
jb
add
jo
sub
or
jb
add
jo
sub
add
pop
xor
add
add
add
adc
add
ss
add
add
adc
cmovb
adc
das
dec
add
push
or
inc
add
push
or
sub
add
or
push
outs
cdq
add
or
and
ins
cmp
and
add
add
pop
adc
add
ret
fimul
and
or
add
scas
sub
or
add
add
add
add
inc
inc
add
adc
add
adc
push
add
add
push
sbb
sub
outs
mov
add
or
add
mov
fisubr
outs
pop
push
fdiv
add
or
push
mov
add
mov
xchg
pop
or
mov
push
or
push
pop
mov
add
add
(bad)
and
add
add
pushf
add
pop
(bad)
or
or
add
daa
sub
add
push
mov
add
sub
add
sub
push
sub
xor
add
add
add
sbb
add
add
add
add
or
pop
push
inc
or
mov
add
add
fidivr
cmp
add
sub
add
or
add
add
add
adc
add
add
add
sbb
push
or
xor
pop
add
add
add
adc
jb
add
jo
sub
mov
add
mov
pop
add
adc
xchg
add
or
or
sub
mov
sub
or
add
sub
add
push
call
sub
sub
add
sub
mov
add
or
add
pop
sub
add
add
add
add
add
sub
add
xor
add
xor
push
and
add
sub
mov
mov
sub
outs
mov
jb
add
or
outs
mov
mov
rol
or
jb
add
jo
push
push
adc
jb
add
jo
mov
add
sub
pop
add
add
add
dec
cs
rol
add
outs
rol
or
add
add
stos
add
and
jne
add
add
add
mov
pop
sub
add
add
add
or
add
fimul
or
sub
xor
rol
pop
or
add
sub
sbb
add
add
add
add
add
add
add
add
mov
sbb
pop
add
add
xor
add
add
adc
jb
add
jo
ret
or
or
add
sub
add
adc
add
adc
add
adc
jb
add
dec
sub
xchg
sub
push
sub
add
adc
add
adc
add
adc
jb
add
pop
add
mov
sub
push
sub
add
xor
outs
add
push
add
sub
add
push
or
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
addr16
add
and
add
and
add
add
and
jb
outs
addr16
sub
push
sub
add
add
push
push
add
add
and
dec
inc
add
add
adc
or
inc
ins
outs
bound
add
add
add
add
add
push
mov
add
jae
aas
cmp
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
sub
add
or
add
adc
add
ja
sbb
add
add
add
add
add
add
add
cmp
add
add
add
add
add
mov
add
add
add
or
xor
push
add
add
pop
xchg
add
add
add
add
add
add
add
add
xor
dec
add
add
add
add
add
add
add
add
add
pop
mov
push
add
add
add
or
or
add
mov
push
add
add
or
or
or
or
or
add
mov
push
add
mov
ins
cmp
mov
pop
add
add
add
add
or
adc
or
(bad)
push
add
ret
add
add
mov
inc
cmp
into
or
or
add
or
or
add
inc
or
add
add
or
add
aaa
pop
add
adc
push
or
push
out
adc
xchg
or
scas
or
test
lahf
sgdtd
fmul
test
push
adc
adc
inc
push
es
push
add
loope
adc
push
push
add
add
add
push
mov
push
add
push
mov
arpl
xor
loopne
or
xor
adc
push
add
mov
push
add
(bad)
push
add
inc
or
add
adc
mov
push
add
bswap
movhps
fisttp
enter
and
add
rsm
cs
movhps
cld
bswap
movhps
push
adc
movhps
sbb
enter
ja
or
ja
mov
add
adc
add
add
adc
add
add
scas
or
add
inc
or
add
xor
adc
adc
or
add
adc
adc
or
add
adc
adc
add
add
adc
add
add
adc
adc
or
add
sbb
sbb
adc
add
adc
adc
push
add
mov
outs
add
add
add
ss
sbb
adc
add
adc
adc
add
add
retf
add
or
pop
mov
push
add
add
add
adc
add
add
adc
add
sub
sbb
add
add
inc
adc
push
adc
je
mov
push
add
xor
adc
(bad)
adc
lock
cld
adc
or
sbb
or
cs
dec
push
dec
add
add
push
or
or
or
scas
or
add
pop
push
add
sbb
adc
or
add
add
add
pop
inc
or
add
pop
push
push
add
sbb
add
sbb
push
push
add
add
push
push
add
push
push
add
or
add
add
add
add
add
add
add
add
adc
sub
aaa
add
push
add
add
add
add
add
add
add
add
aaa
add
add
sbb
push
add
add
add
add
add
add
sbb
adc
or
sbb
add
add
add
add
add
add
cmp
pop
sub
add
add
xchg
add
add
add
add
add
add
add
adc
push
add
add
add
add
add
add
add
push
cmp
or
add
and
dec
add
add
add
add
add
add
add
add
add
add
and
push
add
add
add
add
add
xor
push
add
jbe
jb
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cs
xor
or
pop
adc
adc
dec
add
mov
add
pop
add
add
pop
add
cmp
push
xchg
add
add
add
or
or
or
sub
add
xor
add
adc
push
adc
adc
push
add
xchg
add
add
lock
or
xchg
add
add
add
add
add
add
or
add
cmp
xor
adc
push
or
add
sub
adc
dec
add
add
add
sub
push
add
add
add
dec
add
add
add
das
add
add
push
sbb
or
add
inc
add
add
add
add
sbb
add
adc
push
pop
add
sbb
add
add
add
or
add
add
add
add
sbb
cmp
add
fsubr
add
add
adc
inc
add
add
hlt
das
add
add
adc
(bad)
or
add
xor
add
add
or
add
add
add
push
or
add
ss
add
add
or
add
xor
add
add
add
add
xor
adc
add
add
add
add
sbb
add
add
add
ss
push
add
add
add
inc
add
add
add
add
sbb
push
xor
add
add
pushf
add
add
add
inc
add
scas
add
add
or
or
add
xor
add
add
add
add
xor
add
pop
setnp
mov
xor
add
add
add
add
xor
add
add
add
lods
or
add
xor
add
add
sbb
add
add
add
add
movs
add
add
imul
add
add
sbb
add
add
add
sbb
add
add
add
mov
sub
or
mov
add
add
pop
add
add
sbb
add
add
add
adc
add
pop
add
add
inc
or
add
xor
and
inc
or
call
add
add
add
pop
add
add
push
add
pinsrw
add
adc
dec
add
add
add
sbb
mov
sub
sldt
add
add
add
add
add
add
add
and
or
add
add
add
add
add
add
add
add
add
aam
add
add
push
add
add
int3
add
dec
add
add
add
adc
push
add
in
add
add
push
add
add
add
inc
add
add
inc
xor
adc
inc
add
add
push
add
sbb
push
add
add
dec
add
add
push
jnp
add
add
push
add
add
inc
add
add
push
sbb
add
add
or
add
push
or
add
inc
add
dec
cmp
add
sbb
add
add
add
push
or
add
clc
daa
add
add
adc
or
add
push
add
sub
add
add
sbb
add
add
add
push
inc
add
sbb
add
add
push
add
add
push
push
add
add
add
sbb
push
add
add
add
add
push
push
add
add
add
add
add
sub
add
pop
add
add
add
add
pop
and
add
add
pop
jne
cmp
add
add
add
pusha
mov
jle
add
push
or
add
add
pop
xchg
aas
add
add
add
push
add
pop
mov
aas
add
add
dec
sub
add
jl
add
add
adc
fisttp
cmps
add
xchg
sub
add
add
or
mov
add
or
or
sub
add
add
sbb
add
sub
add
add
sbb
add
sub
add
add
add
add
sub
adc
mov
rol
inc
add
add
or
add
add
add
jae
sbb
stos
add
add
add
add
add
add
add
add
inc
add
add
add
and
inc
add
add
add
add
add
bound
add
add
fld
add
add
sub
sbb
sldt
add
mov
add
mov
add
add
or
pop
add
add
fadd
and
add
add
add
add
add
add
add
add
jnp
jo
adc
add
xchg
add
pushf
add
sbb
add
add
js
adc
add
add
dec
push
add
add
add
add
add
pop
add
jae
sbb
test
xchg
push
add
or
mov
add
push
add
add
retf
push
add
push
sub
or
add
retf
push
add
add
les
add
add
retf
push
add
add
les
add
add
mov
add
pop
add
add
sub
add
add
ss
add
add
cmp
add
push
sbb
push
and
add
pop
add
add
ss
add
add
cmp
add
add
dec
xor
or
add
sub
add
add
xchg
pop
add
add
popf
pop
add
add
movs
pop
add
add
in
xor
or
add
add
add
pop
add
add
fld
add
add
fld
inc
sbb
push
in
add
add
out
add
add
add
add
sub
cdq
add
add
or
add
add
add
add
sub
add
add
add
add
add
test
adc
loope
loop
sbb
or
add
add
add
or
add
add
and
or
add
add
add
add
add
maskmovq
test
test
add
add
push
or
add
add
or
add
ds
add
add
cmp
add
add
add
add
add
or
add
add
stos
or
add
add
pop
mov
or
mov
mov
add
add
add
or
add
add
xor
inc
or
lods
or
add
mov
fiadd
popa
add
add
add
add
and
or
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
cmp
mov
add
add
add
add
push
mov
pushf
push
pop
push
mov
bsf
mov
mov
rol
add
setae
rol
add
add
imul
add
add
add
mov
jecxz
rol
mov
sub
fs
cmp
or
(bad)
add
add
add
add
add
pop
rol
sub
cmp
aad
(bad)
add
mov
sub
mov
add
add
xor
push
loope
xor
sub
in
add
add
add
add
stc
add
add
dec
or
add
add
add
mov
cmp
adc
add
add
add
inc
add
add
adc
add
sbb
daa
pop
cmp
push
adc
add
(bad)
add
add
adc
add
add
add
enter
mov
sub
popa
add
add
out
adc
add
adc
das
bextr
jbe
mov
sub
jnp
test
add
sub
div
js
push
adc
jns
je
lea
mov
jns
xchg
adc
mov
add
add
add
adc
adc
add
add
test
rol
xor
or
push
add
add
add
adc
fld
jb
scas
add
repnz
push
call
add
sub
icebp
add
add
adc
add
lds
mov
add
add
aam
jns
mov
sub
cdq
add
mov
adc
add
sub
jmp
add
add
adc
add
lock
repz
add
adc
add
add
or
mov
push
adc
inc
adc
push
cdq
add
xor
add
int
sbb
adc
push
cdq
add
enter
dec
adc
adc
sbb
mov
fld
xor
mov
retf
add
add
add
dec
push
cli
ds
sbb
test
call
adc
mov
lahf
push
xchg
add
and
cmps
or
adc
mov
int3
push
rol
int
fiadd
imul
jo
loopne
cld
add
sub
xchg
add
push
hlt
push
xchg
add
stc
push
mov
push
lds
jg
add
mov
push
mov
push
mov
push
js
xchg
add
daa
pop
or
pop
dec
add
push
and
imul
test
pop
jns
mov
pop
xor
jns
jns
add
add
pop
add
add
add
xchg
sbb
lsl
rol
mov
mov
fld
mov
sub
loope
mov
push
add
add
add
cmp
cld
add
add
add
or
add
adc
add
sbb
add
adc
and
mov
add
add
add
add
sbb
or
or
add
add
add
or
add
adc
cs
daa
movs
or
cmp
add
add
add
add
push
jne
in
inc
add
aad
dec
add
add
pusha
add
cld
add
jnp
push
add
and
add
aad
arpl
jae
in
imul
add
add
add
xor
je
add
add
add
add
pop
scas
push
outs
add
add
add
add
push
add
add
aad
ret
add
aad
mov
add
push
add
add
aad
jecxz
fwait
add
add
add
loopne
inc
push
pop
add
add
push
add
add
add
add
sub
add
add
add
add
mov
add
add
ret
add
ret
add
cmp
ret
add
add
ret
add
add
xor
iret
add
cld
add
add
push
add
add
xchg
pop
jecxz
imul
add
add
add
add
add
jmp
push
add
add
add
add
mov
add
xor
or
jnp
push
add
add
add
pop
inc
add
aad
pusha
add
aad
add
cmp
shld
add
add
add
push
add
add
aad
loopne
jnp
push
add
add
xchg
cmp
add
add
imul
add
add
aad
and
jnp
push
add
jnp
push
add
popa
andps
add
add
add
mov
add
add
push
add
add
leave
or
add
add
add
and
add
inc
add
add
pusha
add
add
ds
add
add
add
loopne
mov
push
add
add
add
and
mov
mov
pop
mov
pop
xchg
add
rol
add
loopne
xchg
add
add
(bad)
cmp
daa
or
or
or
or
or
add
mov
or
or
cld
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
call
add
add
add
add
add
add
push
call
push
aam
jmp
or
in
cmp
pop
xor
fild
lahf
add
add
add
add
add
add
pop
or
add
add
add
add
add
add
add
add
mov
je
add
and
or
add
add
add
add
add
add
add
add
add
fdivr
adc
jecxz
cmp
add
std
add
pop
push
cmp
add
jle
mov
jns
lock
add
push
or
or
add
add
add
add
add
add
adc
add
add
add
add
add
add
or
add
or
add
add
adc
sbb
push
add
add
add
adc
add
aaa
add
add
add
add
push
adc
add
cmp
sbb
add
dec
add
add
add
sbb
add
cmp
or
add
and
add
push
add
add
or
xchg
add
add
add
add
add
push
add
add
mov
push
pop
add
add
pop
add
add
or
add
mov
jae
adc
jns
rol
add
add
add
add
add
push
add
add
test
adc
inc
sbb
pop
add
add
mov
jb
add
add
mov
xchg
add
add
lea
mov
push
add
add
add
add
add
add
sbb
add
add
or
add
or
adc
add
add
dec
sbb
or
add
add
add
add
add
add
add
add
add
add
xchg
or
add
add
add
add
add
sldt
add
add
add
js
sbb
pop
adc
add
add
add
jb
add
add
add
pop
add
push
and
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
aaa
add
add
add
add
add
or
add
add
sbb
add
cmp
outs
fs
gs
arpl
ins
or
inc
push
jae
jae
data16
push
imul
jae
arpl
dec
jns
jo
ins
imul
ins
add
jb
imul
dec
jns
outs
ins
jo
je
jb
dec
jns
inc
inc
jbe
addr16
dec
jns
outs
jb
jae
dec
jns
bound
jb
imul
jb
inc
jno
gs
bound
arpl
outs
jbe
fs
xor
inc
outs
jb
xor
jae
and
ins
arpl
inc
outs
je
add
outs
push
inc
add
dec
inc
inc
push
push
pop
dec
dec
inc
dec
push
dec
inc
ins
push
pop
dec
add
inc
push
push
push
push
pop
dec
dec
inc
dec
push
dec
inc
push
dec
dec
dec
add
jae
jne
arpl
inc
adc
jno
imul
push
gs
jne
arpl
add
push
gs
imul
push
fs
imul
jo
jb
jns
dec
imul
je
adc
jae
outs
inc
popa
jae
arpl
inc
jo
ins
imul
push
gs
imul
je
imul
outs
jb
jae
jo
ins
imul
inc
popa
jae
add
arpl
push
imul
fs
outs
dec
imul
jne
add
jae
gs
cs
and
jle
pusha
jbe
outs
outs
jae
inc
outs
gs
arpl
dec
imul
jns
je
ins
dec
jle
imul
outs
arpl
pop
pop
inc
dec
inc
dec
imul
outs
add
xor
daa
fs
jb
dec
outs
inc
jb
popa
je
dec
popa
imul
dec
imul
bound
push
imul
ins
inc
popa
jae
arpl
inc
gs
arpl
add
ins
jo
je
jb
jp
data16
add
je
inc
outs
ins
jo
je
jb
ins
pop
inc
outs
ins
jo
je
jb
pop
inc
imul
fs
addr16
inc
jo
ins
imul
add
sub
push
arpl
outs
jbe
fs
push
jae
jb
addr16
push
jae
jb
push
addr16
jp
jno
bound
arpl
outs
jbe
fs
addr16
inc
outs
jb
jae
ins
sub
push
bound
arpl
outs
jbe
fs
addr16
push
bound
adc
push
jno
ins
pop
dec
jns
bound
jb
imul
arpl
outs
jbe
pop
jno
push
inc
jno
ins
imul
add
jb
jae
push
bound
jb
imul
jne
inc
outs
jb
xor
ins
pop
inc
outs
jb
xor
jae
je
inc
outs
jb
xor
push
xor
push
popa
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
jae
gs
cs
sbb
popa
jo
das
inc
outs
jb
jae
inc
outs
jb
add
outs
jae
popa
outs
arpl
inc
imul
pop
dec
outs
jae
popa
outs
arpl
pop
add
jae
popa
outs
arpl
push
jns
je
ins
inc
jns
pusha
push
bound
outs
jae
dec
popa
jae
je
bound
ins
pop
inc
outs
jb
inc
imul
arpl
add
jne
ins
jae
outs
add
je
popa
jae
inc
outs
fs
ja
inc
fs
jns
add
je
imul
pop
inc
gs
outs
jae
adc
outs
push
outs
pop
push
push
push
je
je
arpl
ins
jne
add
je
outs
jae
and
pop
inc
push
add
jo
jae
outs
add
jae
gs
cs
outs
push
dec
jl
pusha
ins
jne
outs
fs
add
outs
outs
je
imul
ins
jo
outs
outs
add
push
imul
outs
ins
jo
outs
outs
je
inc
jne
je
outs
add
aas
push
add
je
inc
jne
je
outs
xor
jae
je
inc
jne
je
outs
xor
push
or
dec
jo
outs
je
push
popa
ins
jne
add
jb
xor
outs
popa
add
je
outs
outs
dec
and
imul
fs
gs
imul
push
ins
add
imul
imul
outs
gs
xor
add
je
outs
fs
gs
sbb
outs
fs
add
imul
jae
jne
js
je
outs
fs
push
dec
ins
outs
add
js
jae
imul
dec
popa
ins
add
gs
dec
jb
dec
pusha
ins
add
ins
popa
addr16
dec
outs
jbe
inc
imul
jae
sbb
dec
push
gs
imul
ins
xor
add
imul
ins
add
fs
push
jns
jne
add
outs
arpl
jb
push
dec
inc
add
outs
arpl
jb
cmp
or
inc
fs
imul
gs
push
je
imul
fs
ja
dec
je
jno
add
popa
add
jns
add
je
popa
push
outs
jne
fs
dec
dec
push
js
jb
jae
je
jo
add
imul
add
je
jg
pop
gs
bound
imul
dec
jae
imul
imul
gs
jo
dec
ins
data16
gs
addr16
dec
jae
push
inc
add
push
popa
outs
bound
imul
jno
jae
popa
jb
add
inc
imul
jae
push
inc
add
gs
ins
bound
jae
popa
jo
ins
imul
dec
popa
ins
add
ins
ins
popa
push
jge
arpl
add
outs
arpl
jae
je
jb
bound
gs
je
jb
popa
fs
aas
dec
pusha
outs
popa
ja
gs
imul
dec
popa
outs
fs
gs
arpl
popa
je
outs
and
je
popa
jno
outs
jbe
jb
outs
ins
outs
je
arpl
jb
outs
je
imul
or
pusha
jb
jne
dec
outs
outs
add
outs
arpl
jae
outs
outs
jb
popa
je
and
bound
push
inc
outs
outs
je
js
add
gs
add
outs
je
pop
inc
sbb
xor
gs
push
inc
outs
outs
je
js
add
je
push
dec
push
je
push
outs
ja
xor
gs
push
inc
outs
outs
je
js
add
inc
jns
push
jo
arpl
jae
gs
outs
jb
add
outs
arpl
jae
bound
gs
fs
dec
jg
jbe
arpl
data16
bound
data16
imul
gs
gs
adc
pop
js
ja
push
jb
arpl
jae
gs
outs
jb
add
je
jae
jb
je
gs
ins
ins
popa
jo
imul
arpl
outs
add
jb
jne
ins
inc
ins
pop
push
ja
jle
imul
popa
fs
jae
add
addr16
add
outs
je
inc
jp
push
fs
ins
gs
push
add
je
jns
jo
add
dec
inc
add
inc
jle
je
jne
add
add
popa
add
ins
jo
je
bound
push
popa
ins
push
pop
inc
ja
add
outs
arpl
jae
popa
outs
fs
add
gs
fs
popa
outs
fs
xor
jl
bound
dec
add
gs
fs
add
jp
add
jae
jb
divps
or
data16
je
jo
push
imul
arpl
push
gs
jb
gs
bound
jno
je
push
je
dec
jne
jo
je
push
je
inc
jb
outs
jb
push
jns
cmp
push
fs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
jb
add
js
addr16
popa
outs
add
jae
gs
cs
ins
outs
bound
imul
add
jbe
jnp
addr16
outs
outs
add
jae
jne
arpl
jne
je
jb
add
je
push
push
dec
jl
ja
fs
popa
outs
popa
addr16
addr16
inc
jne
je
jb
add
je
inc
add
ins
js
add
je
push
inc
add
ins
je
jb
add
push
jns
je
ins
or
ins
push
jne
popa
je
outs
outs
add
jo
imul
push
gs
imul
arpl
gs
jne
je
outs
jae
popa
outs
arpl
popa
fs
popa
outs
fs
sbb
sbb
bound
fs
popa
outs
fs
gs
outs
arpl
bound
arpl
jbe
outs
je
sub
inc
ja
outs
push
popa
jbe
push
gs
imul
outs
fs
add
add
push
je
inc
gs
jne
je
addr16
push
gs
imul
push
jb
inc
js
gs
imul
je
ins
cs
imul
dec
jge
add
outs
arpl
jae
push
je
imul
ins
popa
je
push
jne
je
push
inc
inc
jne
dec
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
pop
push
jne
je
ins
gs
outs
je
jb
jo
gs
imul
push
push
jge
push
gs
data16
dec
jne
ins
dec
jb
ins
jo
jns
inc
outs
outs
arpl
xor
jb
jne
add
jb
add
je
outs
outs
jbe
jb
gs
push
outs
dec
outs
je
cs
xor
addr16
push
imul
outs
je
add
je
add
push
jne
jbe
inc
jb
popa
jns
inc
ins
outs
arpl
outs
jo
add
je
jns
gs
dec
and
bound
addr16
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
push
jae
jbe
push
jb
push
arpl
je
add
je
jb
push
arpl
jb
push
xor
jo
jae
arpl
jae
jns
add
ins
ins
add
gs
jb
jb
push
pop
ins
pop
js
ins
jae
push
jns
je
ins
cs
arpl
imul
jb
jae
push
push
jg
ins
arpl
fs
outs
fs
arpl
imul
bound
add
push
gs
jae
inc
je
jb
bound
add
jb
gs
xor
cs
ins
add
pop
jb
sub
ins
add
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
dec
arpl
push
je
jne
je
popa
jns
jne
inc
je
jb
bound
add
outs
adc
gs
jb
push
inc
je
jb
bound
add
ins
popa
outs
popa
pop
dec
push
add
jae
gs
cs
push
imul
imul
bound
addr16
inc
outs
jne
je
addr16
inc
popa
jo
arpl
jns
addr16
addr16
jge
outs
add
je
dec
jae
ins
imul
pop
dec
je
ins
add
ins
outs
add
imul
inc
popa
jo
arpl
jns
push
jns
je
ins
cs
jne
je
pop
js
inc
ins
ins
jo
ins
gs
gs
imul
outs
je
ins
gs
gs
jo
dec
addr16
data16
bound
arpl
ins
jne
add
add
imul
push
imul
popa
je
bound
gs
push
outs
fs
outs
add
je
outs
ds
jno
ins
popa
ins
gs
gs
push
outs
fs
outs
addr16
gs
jne
je
inc
jne
sbb
jp
pusha
pusha
je
outs
outs
dec
outs
fs
je
dec
jae
imul
jae
xor
jb
add
fs
inc
outs
popa
bound
imul
jns
gs
jae
je
cmp
imul
imul
js
je
push
push
ja
dec
outs
xor
jge
jae
push
push
ja
push
je
ins
add
je
dec
popa
imul
je
data16
jb
jb
ja
popa
bound
je
jb
bound
add
imul
jne
arpl
je
je
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
das
push
bound
add
outs
gs
je
fs
outs
fs
je
jb
bound
add
dec
je
pusha
jo
imul
jb
bound
add
inc
push
push
inc
add
jbe
add
jne
addr16
je
jo
push
push
and
jle
add
popa
outs
fs
jb
dec
outs
fs
gs
je
jb
bound
add
push
inc
push
bound
gs
popa
ins
gs
je
jb
bound
add
jae
gs
cs
outs
ins
or
imul
outs
fs
cs
gs
outs
add
ins
jo
gs
outs
jb
inc
je
push
je
jbe
add
addr16
outs
je
js
gs
imul
je
ins
pop
pusha
jge
imul
imul
addr16
outs
jbe
arpl
imul
inc
push
inc
outs
outs
je
outs
ins
add
je
dec
jae
imul
add
outs
push
inc
ja
jo
fs
push
je
ins
jae
inc
gs
gs
jne
arpl
je
imul
outs
push
jb
je
outs
outs
inc
js
gs
imul
imul
inc
jae
popa
je
dec
outs
jae
popa
outs
arpl
addr16
dec
outs
outs
gs
js
adc
bound
add
je
dec
gs
popa
add
ins
outs
jbe
add
ins
jo
outs
aaa
pop
outs
push
dec
jp
jb
jne
inc
outs
ins
ins
arpl
outs
inc
je
jb
bound
add
jo
addr16
jne
je
arpl
je
imul
outs
ins
push
imul
ss
popa
gs
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
pusha
ins
bound
pop
pop
xor
popa
xor
popa
xor
inc
jbe
outs
je
popa
outs
fs
and
addr16
addr16
dec
outs
popa
add
imul
ins
add
jae
gs
cs
push
push
ins
addr16
add
ins
outs
jb
push
outs
imul
gs
add
jae
outs
fs
gs
add
outs
je
inc
outs
outs
je
je
ins
add
popa
jo
imul
adc
pop
inc
outs
outs
je
push
jns
je
ins
inc
outs
ins
outs
jb
add
je
inc
outs
outs
ds
ja
inc
arpl
inc
popa
jb
add
je
inc
outs
jb
inc
outs
ins
outs
jb
jae
je
dec
cmp
jge
ins
outs
add
je
dec
popa
ins
add
je
push
imul
pop
push
popa
arpl
bound
inc
jne
je
outs
inc
popa
jae
add
je
push
gs
add
je
push
adc
dec
gs
pusha
ins
push
je
ins
gs
popa
arpl
outs
ins
outs
jb
inc
outs
outs
je
imul
jae
ins
ins
add
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
sub
ins
push
popa
popa
ins
gs
outs
fs
je
inc
jne
outs
push
arpl
gs
outs
fs
pop
outs
push
inc
outs
push
imul
je
outs
ins
inc
outs
ins
ins
arpl
outs
jbe
push
outs
je
outs
ins
jae
jae
je
dec
jo
arpl
jns
jae
je
push
push
push
add
je
push
push
push
popa
jae
bound
add
jae
ins
gs
push
inc
jnp
jb
inc
gs
outs
gs
outs
gs
je
fs
je
jb
bound
gs
ins
fs
jb
gs
push
push
gs
jns
je
jb
bound
xor
push
fs
imul
outs
outs
ins
add
outs
arpl
jae
je
jb
jne
push
arpl
jae
data16
push
imul
imul
sub
inc
data16
pusha
add
jae
gs
cs
gs
add
arpl
imul
gs
pop
inc
dec
dec
add
je
je
imul
imul
ins
jo
jb
push
imul
add
ins
imul
gs
push
ins
gs
dec
jo
inc
jae
imul
inc
outs
ins
jo
jb
push
je
imul
pop
push
je
jb
dec
push
push
jge
jne
jne
inc
imul
push
jb
arpl
jae
imul
cmp
push
je
jne
push
imul
jns
add
je
inc
js
arpl
popa
bound
pop
inc
imul
jae
je
inc
jb
jne
outs
je
add
jae
gs
cs
arpl
inc
ins
je
push
jae
outs
arpl
popa
ins
add
outs
outs
ja
dec
fs
je
je
add
push
outs
je
push
imul
jb
outs
arpl
popa
ins
add
outs
outs
adc
outs
jne
outs
push
outs
ins
add
dec
outs
push
outs
ins
add
je
push
jae
push
push
jle
bound
add
jae
ins
bound
inc
gs
outs
je
jns
jae
gs
jno
add
je
dec
outs
arpl
imul
pop
push
gs
add
popa
jb
je
jbe
inc
jb
add
jbe
jb
outs
ins
outs
je
push
jo
arpl
ins
inc
outs
ins
fs
sbb
imul
ins
fs
popa
je
add
jae
gs
cs
dec
add
ins
add
dec
ins
jge
add
popa
fs
ins
ins
inc
jns
gs
push
jb
je
inc
ins
ins
inc
jns
gs
jne
js
add
je
gs
jo
popa
je
add
js
add
ins
bound
add
pop
inc
inc
outs
add
jo
popa
arpl
push
jb
je
inc
ins
ins
push
gs
add
imul
jnp
je
inc
gs
gs
add
ins
gs
je
jb
bound
gs
push
aaa
inc
pop
jp
jno
bound
gs
push
imul
outs
arpl
dec
popa
arpl
push
jns
dec
jae
outs
push
jne
dec
gs
inc
gs
popa
ins
jne
add
je
popa
ins
jne
add
push
popa
jp
jno
outs
ins
jo
je
jb
dec
imul
je
push
imul
dec
jne
sub
push
gs
imul
imul
outs
js
add
xor
bound
je
jns
push
imul
ins
jne
dec
imul
adc
pusha
ja
inc
outs
outs
ins
gs
outs
add
ja
popa
je
inc
imul
dec
popa
je
pop
jns
push
inc
imul
jo
add
je
jb
arpl
outs
add
addr16
and
inc
bound
ins
je
dec
jae
inc
outs
js
je
ins
add
addr16
outs
js
push
jne
je
inc
jge
push
outs
ins
outs
je
inc
gs
jne
je
ins
gs
imul
inc
push
outs
bound
push
jns
je
ins
inc
imul
jns
push
push
push
je
ds
push
dec
ja
jb
ins
outs
je
je
je
add
je
jo
jb
ins
outs
je
je
inc
js
dec
jae
jb
je
outs
addr16
jns
je
ins
add
je
dec
push
push
gs
imul
jo
outs
outs
add
je
push
gs
imul
pop
dec
popa
push
jb
and
ins
aas
xor
push
outs
inc
outs
outs
ins
gs
outs
add
jae
jp
add
je
js
inc
gs
pop
je
arpl
je
gs
jne
arpl
popa
ins
gs
inc
gs
bound
arpl
dec
dec
jle
jno
bound
add
outs
arpl
jae
outs
fs
add
outs
jne
adc
ja
inc
gs
jne
jb
outs
je
jb
arpl
jae
push
jb
arpl
jae
pop
pop
popa
pusha
arpl
ins
ins
arpl
outs
add
je
dec
outs
fs
gs
push
gs
fs
bound
outs
ins
ins
arpl
outs
inc
popa
jae
add
je
outs
jne
gs
je
jb
push
jne
pop
inc
je
jb
outs
je
addr16
dec
outs
fs
gs
popa
ins
add
outs
add
pusha
push
push
jno
ins
add
jbe
dec
gs
add
je
jb
arpl
jae
jae
jns
dec
jl
add
fs
outs
arpl
jno
popa
ins
jae
addr16
inc
jae
gs
bound
dec
imul
inc
popa
jae
add
outs
arpl
outs
outs
imul
je
pop
jns
arpl
push
gs
imul
js
je
push
popa
jbe
add
push
arpl
jge
inc
outs
outs
je
outs
ins
add
arpl
outs
jb
jns
arpl
imul
popa
sbb
ja
jg
add
jne
outs
ja
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
data16
ja
add
jb
imul
ins
xor
jb
jae
jne
arpl
cmp
ja
push
gs
jne
arpl
cs
jae
jne
arpl
add
pop
jle
popaw
ins
gs
je
jb
bound
add
jne
imul
jae
pop
popa
addr16
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
bound
addr16
ins
gs
outs
ins
jo
je
bound
imul
bound
add
push
jns
outs
js
imul
outs
outs
inc
je
jb
bound
add
imul
je
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
push
inc
ins
push
gs
bound
outs
jo
jb
addr16
jb
bound
add
jg
push
jb
fs
je
je
jb
bound
add
jae
ins
bound
jno
jae
outs
jns
je
jb
bound
add
jae
ins
bound
gs
jb
sbb
arpl
jne
jb
bound
add
jae
ins
bound
imul
pop
dec
imul
jbe
arpl
gs
add
add
or
add
xor
jge
and
je
xor
add
outs
add
add
je
jns
and
arpl
popa
add
and
cmp
add
and
bound
add
add
add
add
add
add
push
sbb
push
imul
add
add
cmp
imul
outs
add
ins
add
pop
add
ss
add
jb
jae
imul
inc
add
jb
ins
add
jb
add
cmp
popa
add
xor
outs
add
outs
add
ins
add
pop
add
add
(bad)
jle
imul
add
inc
add
arpl
add
je
imul
add
inc
add
xor
add
and
inc
add
add
imul
cmovb
jne
je
je
outs
add
sub
add
jb
ins
add
add
pop
push
add
jb
jbe
imul
imul
sub
add
or
jb
popa
add
jae
add
jl
add
xor
dec
es
imul
add
add
js
add
inc
das
add
and
add
push
cmp
jge
outs
add
add
add
outs
add
data16
jb
pop
add
and
js
bound
dec
add
add
add
add
add
add
das
cmp
pop
add
sub
push
add
je
imul
add
and
add
add
je
push
jne
add
jb
jne
outs
add
jae
add
inc
add
jo
inc
add
sbb
jns
pop
add
add
add
add
ins
add
adc
push
add
inc
add
cmp
inc
add
adc
dec
add
inc
add
add
dec
add
add
add
add
popa
add
imul
add
add
js
add
sub
add
jb
push
xor
add
add
add
add
add
add
jo
add
je
add
adc
and
and
das
add
dec
add
add
add
add
add
jae
add
inc
add
add
inc
add
add
arpl
jb
outs
add
outs
add
je
pop
add
jns
push
add
ja
jae
pop
add
jne
jb
jb
add
je
push
add
cmp
push
je
push
add
add
ins
add
arpl
imul
pop
add
sub
push
ja
jne
add
add
inc
add
popa
add
ins
add
dec
add
inc
add
sub
adc
add
pop
add
push
add
push
add
dec
add
push
dec
push
push
pop
inc
add
pop
add
outs
add
je
ja
popa
add
add
add
push
adc
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
jo
adc
jo
jb
add
je
push
add
jb
jae
imul
pop
add
jne
bound
imul
add
add
pop
add
jns
jae
je
add
add
jns
arpl
bound
ins
add
push
add
jae
imul
add
jb
add
inc
add
pop
sbb
popa
add
add
je
add
pop
add
jo
jo
inc
add
je
popa
dec
inc
push
pop
add
popa
add
imul
pop
add
sbb
add
outs
add
jb
inc
sbb
add
je
popa
add
sub
add
jo
inc
add
je
popa
jns
sbb
push
ins
add
popa
add
add
add
jo
pop
add
add
add
add
pop
and
cmp
add
jbe
bound
arpl
add
js
add
adc
add
jae
pop
sbb
pop
add
add
sbb
jo
jo
dec
add
jne
outs
add
push
or
add
jae
jbe
arpl
push
add
add
js
add
popa
adc
or
add
je
add
popa
add
add
js
add
add
add
js
adc
add
add
jae
xor
xor
add
add
add
outs
add
pop
sbb
add
add
add
add
add
add
(bad)
add
imul
ins
add
push
jl
push
jb
add
push
add
add
inc
add
add
push
push
sbb
push
push
add
inc
add
add
push
add
add
jae
add
jbe
imul
das
add
add
outs
add
jb
arpl
add
add
add
repz
jno
mov
xor
or
xor
mov
mov
pop
jg
pushf
xor
push
add
add
add
sbb
push
adc
or
sbb
add
inc
sub
add
adc
adc
add
adc
pop
push
adc
or
add
sbb
push
adc
sbb
adc
push
adc
adc
add
adc
pop
push
adc
sbb
sbb
push
add
add
or
add
sbb
add
adc
or
adc
add
add
and
push
adc
xor
add
and
push
add
adc
add
add
add
xor
add
adc
add
push
adc
add
dec
sub
add
add
add
and
add
add
and
adc
add
add
add
push
adc
or
add
add
adc
add
adc
sub
adc
cmp
pop
add
or
push
or
and
add
or
add
or
push
or
add
or
push
sbb
add
add
sbb
add
sbb
push
or
add
add
add
push
cmp
or
add
add
add
or
add
add
add
push
sbb
add
sbb
adc
xor
jl
push
or
or
add
or
adc
or
add
add
jae
adc
or
sbb
or
or
add
sbb
push
or
add
or
add
push
push
imul
add
add
or
push
adc
add
add
xor
cmp
pop
ss
add
xor
cmp
or
push
add
adc
push
sbb
add
add
jae
adc
adc
add
add
add
add
sbb
add
adc
add
imul
pop
add
push
push
add
push
push
push
push
push
add
or
add
sbb
add
pop
imul
sbb
add
adc
add
adc
es
sbb
jno
es
add
or
or
sbb
or
or
sbb
dec
or
add
push
sub
and
add
push
and
add
add
or
adc
add
sbb
pop
adc
or
and
add
and
add
adc
add
or
add
or
push
add
add
add
sbb
and
add
add
pop
or
or
or
adc
add
xor
or
sbb
add
sbb
and
sbb
add
add
add
add
add
push
pop
add
or
push
gs
jo
popa
ss
sub
das
xor
xor
add
add
add
add
add
push
adc
or
adc
sbb
adc
adc
adc
adc
sbb
add
or
pop
add
sbb
add
add
adc
pop
add
sbb
add
or
cs
outs
ins
jo
je
jb
sbb
or
or
cs
outs
jb
jae
add
add
push
dec
jns
inc
jo
ins
imul
sbb
or
add
dec
jns
push
jae
jb
add
add
push
dec
jns
push
bound
jb
imul
push
or
adc
add
add
and
pop
add
push
add
push
push
sbb
add
pop
xor
sbb
push
add
add
inc
push
and
add
adc
pop
pop
push
add
adc
syscall
push
push
add
add
add
and
pop
and
push
push
push
push
pop
add
sbb
outs
js
push
outs
ja
cs
outs
jb
jae
inc
outs
jb
adc
gs
je
pop
cmp
pusha
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
pop
cmp
push
jae
push
arpl
outs
jb
jae
add
add
add
jns
pop
jns
sub
cs
gs
imul
outs
je
arpl
jae
push
outs
popa
jo
push
popa
jnp
outs
push
jb
je
arpl
adc
gs
je
pop
pop
dec
outs
jae
popa
cmp
jg
pop
adc
jae
outs
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
add
adc
adc
add
add
add
and
add
inc
add
pop
xor
or
or
add
adc
push
and
add
or
add
push
and
add
add
adc
add
push
and
inc
sub
add
and
add
adc
add
mov
pop
test
adc
adc
adc
adc
inc
jne
ins
jae
aaa
add
add
add
or
dec
add
push
sbb
sbb
push
adc
add
push
add
add
or
add
or
push
add
cmp
cmp
adc
add
sbb
and
imul
mov
add
sbb
add
push
sbb
or
or
push
add
push
add
add
push
push
add
push
pop
add
adc
cmp
arpl
jge
adc
and
sbb
add
sbb
and
adc
sub
or
adc
add
adc
pop
sbb
adc
push
sbb
push
add
add
and
add
adc
or
add
sbb
add
sub
add
push
adc
adc
push
adc
adc
add
add
add
add
push
push
push
push
adc
add
sbb
add
add
mov
xor
add
pop
add
adc
add
add
adc
add
adc
or
add
add
or
and
add
push
add
cmp
push
pop
and
add
adc
push
sbb
xor
sbb
add
adc
and
adc
adc
sbb
pop
add
jge
xchg
mov
add
add
add
imul
adc
sbb
pop
and
push
push
adc
inc
add
xor
jae
gs
cs
gs
jne
arpl
inc
outs
jbe
push
das
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
xor
add
sub
xor
xor
add
add
adc
push
and
add
sbb
or
add
imul
je
push
imul
jne
imul
gs
das
push
gs
imul
imul
gs
imul
imul
inc
outs
gs
je
jb
xor
xor
xor
xor
add
push
das
sbb
or
cs
gs
imul
and
add
and
add
sbb
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
cmp
gs
push
push
add
add
xor
xor
xor
xor
add
add
and
xor
adc
push
xor
sub
sub
sub
xor
xor
xor
dec
and
sbb
add
inc
outs
jo
jb
addr16
and
xor
xor
add
jae
push
imul
xor
xor
add
test
add
mov
and
add
or
mov
pop
inc
pop
outs
dec
jbe
dec
pusha
imul
jb
gs
ins
add
add
add
and
bound
add
imul
add
dec
cmp
add
add
add
add
add
sub
add
push
push
inc
push
fidiv
xor
mov
xchg
out
retf
popa
call
add
sbb
dec
inc
push
push
and
xor
jb
imul
jae
jb
imul
jne
ins
pop
inc
bound
pop
jae
jb
imul
add
sbb
push
add
add
inc
adc
add
add
sbb
add
add
inc
cmp
push
add
add
add
push
add
add
cmp
sbb
push
add
add
adc
add
add
dec
sub
or
add
add
push
or
add
add
or
add
add
sbb
add
sub
add
add
ins
daa
sbb
pop
add
add
add
add
add
inc
cmp
mov
add
add
add
mov
add
mov
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
xor
add
xor
adc
push
add
add
add
add
jg
add
add
jns
sysret
add
add
pusha
add
add
add
add
add
sub
adc
add
add
add
add
nop
add
add
add
add
adc
pop
add
add
add
add
add
add
add
add
adc
add
add
mov
add
add
add
stos
cmp
or
add
add
add
add
add
add
add
add
add
add
push
pop
add
add
add
add
add
add
add
add
adc
add
add
lock
add
add
add
add
add
adc
push
add
add
add
add
add
add
add
add
les
add
adc
add
add
add
lds
add
add
pusha
retf
add
add
adc
add
add
add
iret
add
call
add
add
add
add
and
or
add
add
pop
fild
add
in
add
adc
or
add
add
add
add
ret
mov
add
pusha
in
add
mov
sbb
push
add
add
add
add
add
push
add
push
add
push
add
xor
push
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
je
sbb
inc
add
add
add
popa
add
inc
add
ins
add
dec
add
push
sbb
push
add
add
add
push
add
popa
add
jae
ins
add
je
imul
add
add
add
mov
adc
add
add
push
add
add
outs
add
inc
add
and
dec
add
data16
add
in
add
add
add
add
add
add
add
add
sub
xor
add
inc
add
add
add
imul
inc
add
jae
arpl
jb
sbb
add
outs
add
add
add
jae
add
jbe
imul
xor
jl
sub
push
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
dec
add
addr16
add
outs
add
ins
add
popa
add
add
add
add
jbe
and
jg
popa
add
add
js
add
add
adc
add
dec
add
add
ins
add
add
jb
imul
je
add
inc
add
jo
jns
jb
imul
jo
and
test
add
add
add
add
add
add
dec
add
jne
popa
add
outs
add
ins
add
imul
outs
add
ins
add
add
cmp
pop
jno
jbe
imul
add
js
add
add
add
add
add
cmp
ja
bound
je
arpl
je
dec
add
ins
add
add
add
jae
add
jbe
cmp
jge
bound
xor
add
add
add
add
or
add
push
add
outs
add
add
sub
push
add
jb
jae
imul
add
xor
add
add
add
add
add
sbb
add
add
jae
jae
add
bound
ins
add
and
push
add
dec
sub
push
outs
add
add
xor
add
add
add
add
add
add
add
add
add
sbb
daa
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
mov
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
ja
ja
ja
jg
(bad)
(bad)
dec
(bad)
jmp
icebp
cld
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
ja
ja
inc
addr16
je
ja
ja
jg
ja
ja
ja
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
adc
clc
cld
add
push
sub
push
add
add
xchg
lds
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
pop
add
add
add
add
add
add
inc
add
out
lock
div
add
add
add
adc
add
add
jo
adc
push
add
add
adc
add
adc
add
add
add
sbb
dec
sbb
or
add
add
sbb
push
add
add
sbb
push
add
add
sbb
add
or
xor
push
add
add
add
push
or
add
add
adc
add
add
xor
sbb
add
add
je
adc
add
sbb
push
add
add
sbb
push
add
add
inc
adc
add
add
sbb
add
add
inc
cmp
push
add
add
add
push
add
add
cmp
sbb
push
add
add
adc
add
add
dec
sub
or
add
add
push
or
add
add
or
add
add
sbb
add
sub
add
add
ins
daa
sbb
pop
add
add
sbb
add
add
add
or
add
sbb
add
(bad)
inc
add
add
xor
pop
syscall
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
push
sbb
pop
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
(bad)
inc
add
adc
push
add
add
adc
add
inc
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
sbb
dec
sbb
or
add
add
div
push
div
push
div
call
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
(bad)
shr
icebp
lock
idiv
div
idiv
div
idiv
div
idiv
div
idiv
inc
inc
inc
inc
inc
call
popa
pop
test
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
jo
repnz
inc
inc
inc
inc
inc
inc
push
div
push
div
inc
inc
push
out
lock
repz
icebp
hlt
in
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
icebp
push
out
lock
inc
push
div
push
div
inc
inc
push
out
lock
in
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
(bad)
cmc
in
icebp
push
out
lock
inc
push
div
push
div
inc
inc
push
out
lock
in
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
in
icebp
push
out
lock
inc
push
div
push
div
inc
inc
push
out
lock
repz
repnz
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
in
icebp
push
out
lock
inc
push
div
push
div
inc
inc
push
out
lock
mov
in
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
in
icebp
push
out
lock
inc
push
div
push
div
inc
inc
push
out
lock
in
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
imul
cmc
imul
icebp
push
out
lock
inc
push
div
push
div
inc
inc
push
out
lock
mov
in
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
mov
in
icebp
push
out
lock
inc
push
div
push
div
inc
inc
push
out
lock
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
mov
in
lock
out
lock
inc
push
div
push
div
inc
inc
inc
inc
jmp
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
(bad)
jp
dec
clc
inc
inc
inc
inc
inc
inc
inc
push
div
push
div
inc
inc
inc
inc
jmp
gs
test
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
jp
test
inc
inc
inc
inc
push
div
push
div
inc
inc
inc
inc
push
dec
cmc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jmp
ja
test
inc
inc
inc
inc
push
div
push
div
push
div
push
div
inc
into
loop
lock
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
(bad)
sar
clc
repz
push
div
push
div
push
div
inc
add
add
adc
jae
adc
pop
add
add
inc
add
adc
add
add
push
sbb
add
add
inc
add
add
add
add
add
add
push
sbb
push
pop
add
add
add
add
xchg
(bad)
add
add
add
add
rol
jo
in
or
std
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
inc
sbb
add
adc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
ja
ja
ja
ja
ja
ja
(bad)
push
ja
imul
jbe
ja
ja
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
push
call
std
(bad)
(bad)
(bad)
push
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
push
inc
std
(bad)
(bad)
(bad)
push
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
push
jmp
std
(bad)
(bad)
(bad)
push
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
push
dec
std
(bad)
(bad)
(bad)
push
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
push
dec
jecxz
icebp
cli
cld
(bad)
(bad)
(bad)
push
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
push
call
(bad)
(bad)
(bad)
(bad)
push
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
push
call
(bad)
(bad)
(bad)
push
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
push
ja
pop
imul
jbe
ja
ja
push
ja
ja
ja
ja
ja
ja
(bad)
push
ja
push
bound
jbe
ja
ja
push
ja
ja
ja
ja
ja
ja
(bad)
push
ja
inc
ins
jns
je
ja
ja
(bad)
push
ja
ja
ja
ja
ja
ja
(bad)
(bad)
(bad)
(bad)
inc
jecxz
stc
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
adc
add
add
(bad)
(bad)
push
std
(bad)
inc
add
add
adc
add
add
add
push
add
add
cmp
sbb
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
adc
inc
add
add
add
add
add
add
add
add
add
add
sbb
push
add
add
inc
add
out
lock
div
add
push
or
add
add
or
add
add
sbb
add
sub
add
add
ins
daa
sbb
pop
add
add
sbb
add
add
add
or
add
sbb
add
cmp
push
add
add
push
pop
add
add
add
adc
jae
adc
pop
add
add
adc
add
add
push
sbb
add
add
push
pop
add
add
adc
add
add
jo
adc
push
add
add
adc
add
adc
add
add
add
sbb
dec
sbb
or
add
add
sbb
push
add
add
sbb
push
add
add
sbb
add
or
xor
push
add
add
add
push
or
add
add
adc
add
add
xor
sbb
add
add
je
adc
add
sbb
push
add
add
jecxz
push
add
add
inc
adc
add
add
sbb
add
add
inc
cmp
push
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
cmp
pop
or
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
push
syscall
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
sbb
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
or
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
syscall
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
push
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
syscall
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
push
or
add
add
add
add
add
add
add
add
add
add
add
add
push
adc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
and
or
add
add
add
add
add
add
add
add
add
add
add
add
pop
or
pop
and
add
or
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
sbb
push
add
add
add
push
or
add
add
adc
add
add
(bad)
(bad)
(bad)
dec
aad
lock
add
and
add
inc
add
add
add
add
add
add
add
add
or
add
push
xor
push
push
add
add
sbb
push
add
add
inc
adc
add
add
sbb
add
add
inc
cmp
push
add
add
add
push
add
add
cmp
sbb
push
add
add
adc
add
add
dec
sub
or
add
add
push
or
add
add
or
add
add
sbb
add
add
add
div
push
div
push
div
push
div
push
div
dec
fdivr
clc
cmc
cmc
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
fwait
shr
div
hlt
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
test
in
div
cmc
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
adc
cmc
icebp
cmc
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
xchg
ret
jmp
repz
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
(bad)
into
loop
lock
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
(bad)
sar
clc
repz
push
div
push
div
push
div
push
div
push
div
push
div
jmp
cmc
idiv
div
idiv
div
idiv
div
idiv
inc
inc
inc
inc
inc
inc
inc
push
jle
icebp
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
call
outs
push
icebp
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jmp
js
repz
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
call
pop
dec
stc
icebp
hlt
idiv
div
idiv
div
idiv
div
idiv
inc
inc
inc
inc
inc
inc
inc
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
ja
cmc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
pop
push
icebp
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jmp
js
cmc
repz
idiv
div
idiv
div
idiv
div
idiv
inc
inc
inc
inc
inc
push
out
lock
in
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
mov
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
in
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
inc
(bad)
cmp
icebp
lock
idiv
div
idiv
div
idiv
div
idiv
inc
inc
inc
inc
inc
push
out
lock
in
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
in
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
repz
icebp
hlt
in
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
inc
jmp
addr16
div
div
push
div
push
div
push
div
inc
inc
inc
inc
push
out
lock
in
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
(bad)
cmc
in
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
in
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
inc
call
jno
icebp
lock
idiv
div
idiv
div
idiv
div
idiv
inc
inc
inc
inc
inc
push
out
lock
repz
repnz
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
in
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
mov
in
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
inc
inc
push
stc
repz
idiv
div
idiv
div
idiv
div
idiv
inc
inc
inc
inc
inc
push
out
lock
in
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
imul
cmc
imul
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
mov
in
lock
out
lock
out
lock
out
lock
out
lock
out
lock
inc
dec
imul
hlt
idiv
div
idiv
div
idiv
div
idiv
inc
inc
inc
inc
inc
push
out
lock
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
mov
in
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
in
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
inc
(bad)
jp
dec
clc
cmc
cmc
idiv
div
idiv
div
idiv
div
idiv
inc
inc
inc
inc
inc
push
out
lock
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
in
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
in
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
inc
jmp
ja
div
hlt
idiv
div
idiv
div
idiv
div
idiv
inc
inc
inc
inc
inc
push
out
lock
xlat
in
imul
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
in
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
inc
push
jle
icebp
icebp
cmc
idiv
div
idiv
div
idiv
div
idiv
inc
inc
inc
inc
inc
push
out
lock
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
in
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
in
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
inc
dec
div
push
div
push
div
push
div
inc
inc
inc
inc
push
out
lock
in
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
in
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
in
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
inc
push
imul
cmc
idiv
div
idiv
div
idiv
div
idiv
inc
inc
inc
inc
inc
push
out
lock
mov
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
in
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
in
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
inc
call
popa
pop
div
hlt
idiv
div
idiv
div
idiv
div
idiv
inc
inc
inc
inc
inc
push
out
lock
in
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
repz
icebp
hlt
in
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
inc
jmp
addr16
repz
idiv
div
idiv
div
idiv
div
idiv
inc
inc
inc
inc
inc
push
out
lock
(bad)
cmc
in
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
in
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
in
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
inc
(bad)
jp
push
stc
cmc
div
push
div
push
div
push
div
inc
inc
inc
inc
push
out
lock
in
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
mov
in
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
in
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
inc
jmp
jae
icebp
repnz
idiv
div
idiv
div
idiv
div
idiv
inc
inc
inc
inc
inc
push
out
lock
imul
cmc
imul
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
mov
in
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
mov
in
icebp
push
out
lock
out
lock
out
lock
out
lock
out
lock
inc
call
jnp
div
cmc
idiv
div
idiv
div
idiv
div
idiv
inc
inc
inc
inc
inc
inc
inc
dec
push
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jmp
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
(bad)
jp
dec
clc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jmp
gs
div
hlt
idiv
div
idiv
div
idiv
div
idiv
inc
inc
inc
inc
inc
inc
inc
push
jp
test
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
dec
cmc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jmp
ja
test
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
push
repz
idiv
div
idiv
div
idiv
div
idiv
inc
inc
inc
inc
inc
inc
inc
(bad)
cmp
clc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
call
jae
repnz
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
jle
icebp
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
call
outs
push
icebp
repnz
push
div
push
div
push
div
inc
inc
inc
inc
inc
inc
jmp
js
repz
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
call
pop
dec
stc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
ja
cmc
lock
idiv
div
idiv
div
idiv
div
idiv
inc
inc
inc
inc
inc
inc
inc
inc
pop
push
icebp
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jmp
js
cmc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
imul
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
pop
dec
cmc
cmc
div
push
div
push
div
push
div
inc
inc
inc
inc
inc
inc
jmp
arpl
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
(bad)
cmp
icebp
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
call
popa
pop
test
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
jo
repnz
hlt
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
(bad)
jmp
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
xchg
shr
div
div
push
div
push
div
push
div
push
div
push
div
push
div
call
cmc
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
ret
lock
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
adc
hlt
repnz
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
movs
(bad)
lock
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
into
jmp
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
div
idiv
mov
in
repnz
idiv
div
idiv
dec
cmp
inc
cmp
push
add
add
add
push
add
add
cmp
sbb
push
add
add
adc
add
add
dec
sub
or
add
add
push
or
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
sbb
add
sub
add
add
ins
daa
sbb
pop
add
add
sbb
cli
cld
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
adc
add
add
sub
add
add
xor
add
add
add
adc
add
add
and
push
add
and
add
sbb
in
add
add
add
add
add
add
and
add
add
add
add
add
add
add
mov
ins
ins
and
jb
imul
dec
pop
bound
outs
imul
inc
sub
je
outs
fs
ins
outs
outs
gs
das
cmp
jae
gs
bound
js
ins
outs
jae
and
outs
cmp
push
sub
arpl
jae
data16
arpl
cmp
ins
cs
and
ins
popa
outs
imul
jae
imul
xor
ds
popa
jae
gs
bound
andps
jb
and
jb
imul
xor
xor
xor
and
ins
gs
jle
imul
je
outs
outs
cs
jo
and
ds
je
jne
je
outs
data16
push
push
jne
outs
cmp
push
sub
outs
jae
data16
arpl
pop
sub
outs
das
jbe
and
or
and
arpl
imul
and
xor
jne
jae
gs
jb
jbe
ins
gs
js
ins
outs
jae
and
push
sub
push
ins
popa
jae
ins
imul
je
arpl
cmp
ins
cs
and
adc
and
and
gs
gs
gs
js
arpl
imul
bound
outs
fs
ins
cmp
outs
jbe
imul
and
inc
arpl
jae
cmp
jp
and
ds
and
and
jb
jno
gs
gs
jb
jbe
adc
cmp
or
and
and
jae
arpl
imul
cmp
je
jne
push
push
gs
aas
or
jae
gs
bound
or
add
add
add
add
or
xor
push
add
add
add
push
or
add
add
adc
add
add
xor
sbb
add
add
je
adc
add
sbb
push
add
add
sbb
push
add
add
inc
adc
add
add
sbb
add
add
inc
cmp
push
add
add
add
push
add
add
cmp
sbb
push
add
add
adc
add
add
add
add
add
add
shl
add
dec
sub
or
add
add
push
or
add
add
or
add
add
sbb
add
sub
add
add
ins
daa
sbb
pop
add
add
sbb
add
add
add
or
add
sbb
add
cmp
push
add
add
push
pop
add
add
add
adc
jae
adc
pop
add
add
adc
add
add
push
sbb
add
add
push
pop
add
add
add
add
adc
jne
push
dec
aaa
jo
xor
inc
inc
inc
pop
inc
pop
xor
or
ins
push
je
cmp
push
jbe
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
sub
add
mov
add
and
jb
outs
addr16
add
add
push
add
xchg
add
add
push
push
add
add
add
add
inc
push
dec
inc
add
add
add
add
inc
ins
outs
bound
add
add
add
add
add
push
push
add
or
add
add
add
add
add
add
add
sbb
add
add
add
add
add
push
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
push
add
add
add
add
add
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jae
push
add
add
add
add
add
add
add
add
add
add
xor
push
add
mov
push
add
mov
push
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
push
add
or
add
add
add
add
add
add
xchg
add
pop
add
add
add
add
add
add
add
add
add
add
xchg
add
and
add
imul
add
add
add
add
add
add
add
add
fwait
add
add
sub
sbb
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
mov
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
iret
add
add
outs
add
add
xchg
add
add
fwait
add
add
add
add
fwait
add
add
add
lldt
add
add
add
add
add
add
add
add
sub
add
add
cdq
add
add
add
cmp
outs
fs
gs
outs
gs
jae
imul
dec
pop
bound
ins
cs
add
jb
xor
ins
jae
outs
jb
imul
gs
add
push
arpl
outs
je
add
je
xor
dec
popa
imul
add
je
add
je
add
outs
popa
ins
imul
outs
jb
push
jns
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
imul
jne
add
ins
push
imul
je
jb
bound
add
jae
gs
cs
gs
arpl
outs
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
gs
imul
imul
jns
je
ins
cs
arpl
imul
imul
add
arpl
imul
jae
imul
imul
arpl
imul
outs
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
outs
gs
jae
imul
dec
pop
bound
ins
add
addr16
push
jns
je
ins
cs
gs
add
arpl
imul
pop
inc
push
inc
dec
dec
add
je
jns
gs
ins
outs
je
add
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
jae
ins
bound
addr16
inc
jae
gs
bound
push
jns
je
ins
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
inc
gs
bound
arpl
je
imul
pop
dec
outs
addr16
add
jo
outs
ins
popa
imul
inc
jne
jb
outs
je
outs
ins
popa
imul
add
je
jns
gs
push
gs
popa
arpl
inc
imul
ins
popa
addr16
inc
imul
outs
jbe
imul
ins
bound
add
jae
gs
cs
arpl
imul
jb
imul
inc
outs
fs
je
jb
bound
add
cmp
push
pop
pop
xor
jb
jae
jne
arpl
add
add
add
add
xor
push
add
jns
dec
add
jo
imul
add
bound
inc
add
dec
add
dec
add
dec
add
add
add
add
add
add
push
add
push
je
add
imul
add
add
inc
add
adc
xor
cmp
add
pop
add
xor
dec
add
adc
jo
cmp
je
dec
add
outs
add
outs
add
adc
add
jbe
imul
add
add
add
add
add
jae
jo
adc
cmps
movs
dec
pop
aaa
not
add
mov
pop
push
sbb
mov
push
sbb
push
sbb
add
sbb
add
add
add
add
add
add
add
push
add
add
add
cmp
add
or
pop
add
add
add
inc
add
push
push
add
adc
dec
add
add
push
push
and
add
adc
and
sbb
add
add
push
add
or
or
add
pop
push
and
adc
add
adc
and
push
push
push
or
add
adc
sbb
adc
add
add
sub
add
bound
bound
fs
sub
sub
sub
aaa
cmp
add
add
add
add
sbb
outs
inc
cmp
cmp
pop
inc
dec
pushw
dec
inc
bound
inc
push
push
push
inc
fs
add
pop
add
sbb
push
push
inc
ja
inc
pop
cmp
jns
push
jae
outs
xor
push
add
adc
add
xor
xor
xor
add
and
add
jno
cmp
xor
cmp
jae
pop
inc
imul
ss
inc
inc
ja
add
and
add
jo
push
jno
xor
cmp
outs
jno
push
inc
dec
data16
pop
inc
jns
push
imul
push
dec
dec
pop
jo
push
dec
bound
dec
fs
dec
dec
push
dec
imul
fs
add
or
add
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
test
jae
gs
cs
arpl
imul
imul
cs
arpl
imul
jae
imul
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
imul
gs
imul
outs
outs
add
add
or
add
add
add
and
add
add
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
