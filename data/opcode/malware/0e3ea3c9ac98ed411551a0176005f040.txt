push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
cwde
rol
js
inc
and
mov
and
dec
inc
and
cld
add
push
bound
inc
(bad)
ins
mov
jnp
cmp
stos
mov
add
xor
add
jmp
inc
(bad)
mov
pusha
in
retf
or
add
mov
inc
mov
cmp
and
cmovp
imul
add
sbb
jmp
mov
jg
jmp
je
and
sub
scas
xor
or
(bad)
ins
test
add
add
mov
adc
mov
inc
add
mov
cdq
jmp
dec
mov
push
leave
retf
push
jne
clc
xor
add
(bad)
and
into
call
mov
or
mov
add
inc
and
jb
cdq
scas
or
js
xor
push
out
jns
push
inc
jmp
add
mov
add
add
or
icebp
inc
and
ds
jge
add
inc
jecxz
dec
mov
sub
mov
jg
jmp
movs
inc
jnp
test
pop
mov
enter
ds
add
lods
add
add
div
and
test
jmp
mov
sub
mov
sub
test
jg
call
loopne
aam
jmp
xor
sub
push
add
(bad)
push
pop
push
push
inc
inc
and
mov
dec
push
add
sbb
push
add
inc
or
push
add
add
add
js
add
dec
sub
push
inc
mov
inc
test
jecxz
add
(bad)
jmp
iret
and
je
jmp
mov
sub
mov
dec
test
xor
add
shl
mov
je
ins
sbb
add
mov
mov
daa
mov
or
mov
add
retf
lods
jecxz
push
sub
aas
cli
jmp
jae
outs
or
xchg
dec
or
add
xor
inc
(bad)
ins
mov
xchg
inc
mov
lods
mov
arpl
add
lahf
push
shl
adc
jecxz
and
inc
(bad)
cmove
lds
dec
mov
push
mov
push
and
sbb
and
inc
mov
jmp
aam
stos
push
add
inc
pop
ins
inc
dec
lock
stos
dec
add
adc
push
jnp
or
mov
add
sysenter
ror
add
test
inc
loope
jns
add
xchg
(bad)
jmp
adc
mov
push
push
mov
inc
scas
dec
cdq
pop
add
add
inc
and
and
inc
sub
jne
add
add
fisubr
jmp
inc
cmp
push
add
push
fld
out
dec
add
push
je
movs
pushf
or
sbb
mov
outs
add
add
gs
pop
pop
pop
mov
(bad)
and
adc
push
cld
(bad)
jmp
data16
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
addr16
and
pop
inc
push
inc
mov
mov
mov
jmp
mov
mov
sti
(bad)
adc
add
jmp
mov
cmc
into
scas
jb
cmp
sub
(bad)
std
add
add
inc
sub
mov
and
daa
ror
pop
inc
fidiv
inc
and
bsr
add
addr16
add
imul
out
(bad)
out
sub
mov
sti
dec
ins
add
in
rol
mov
rol
mov
pop
test
icebp
add
add
jge
sub
dec
fsub
je
jmp
mov
mov
and
je
jmp
mov
nop
or
cmps
fwait
out
xchg
test
add
jmp
outs
jns
xor
mov
pop
je
sbb
sbb
xor
pushf
adc
test
add
into
rol
jmp
(bad)
aam
cmps
push
add
sbb
fild
mov
(bad)
cmove
std
scas
jge
jmp
mov
add
push
mov
hlt
jbe
movs
cmp
xor
pop
add
push
add
cmps
cmp
ror
xor
scas
pop
inc
and
mov
mov
das
add
add
loope
mov
add
push
pop
pop
pop
mov
cmp
and
mov
mov
repz
and
mov
popf
cmps
cmps
shl
data16
push
mov
push
push
push
and
sub
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
call
mov
call
call
mov
call
call
xor
lea
pop
pop
pop
pop
ret
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
mov
mov
idiv
pop
mov
adc
and
xchg
es
pop
test
add
and
sub
inc
inc
jmp
leave
xor
inc
and
aam
xor
add
call
and
sub
jo
(bad)
sub
dec
das
add
cmp
add
arpl
popa
mov
mov
rol
add
ror
add
adc
add
shl
mov
popa
mov
jmp
mov
lea
xchg
sub
jmp
xchg
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
movsx
mov
and
xor
or
mov
sub
sub
mov
mov
shl
mov
mov
jmp
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
add
pop
pop
ret
mov
mov
mov
movsx
mov
and
xor
or
mov
sub
sub
mov
mov
shl
mov
mov
jmp
int3
int3
push
mov
push
push
push
and
sub
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
adc
or
add
mov
je
add
sbb
mov
mov
call
mov
pop
add
das
add
add
add
jp
fld
sub
and
icebp
add
mov
sub
rcr
cmc
jg
dec
add
add
push
jno
icebp
mov
je
add
leave
inc
and
movs
jbe
xchg
jge
cmc
call
jecxz
add
add
mov
or
add
inc
add
xor
dec
add
fisttp
and
add
mov
sub
add
add
add
(bad)
mov
or
test
jnp
push
jmp
mov
cmp
sub
add
jecxz
xor
add
sub
mov
dec
inc
mov
add
adc
push
sub
cmp
mov
add
ret
jp
fs
leave
mov
cs
jl
add
or
cmp
and
xor
leave
add
mov
jmp
gs
add
scas
sti
xchg
mov
cmp
ins
add
jecxz
frstor
arpl
cmps
cmp
add
pop
add
frstor
mov
add
sahf
popa
add
pop
dec
(bad)
leave
push
mov
aas
add
push
add
mov
and
test
inc
mov
xchg
mov
or
inc
mov
popa
add
mov
or
mov
(bad)
js
add
mov
and
mov
add
add
lea
mov
popa
cld
push
add
xor
mov
lods
mov
push
xor
into
fucomip
scas
mov
add
mov
mov
call
sahf
mov
test
add
add
push
frstor
mov
test
or
iret
ret
mov
loope
test
popf
mov
fldenv
or
mov
test
mov
mov
mov
dec
add
inc
mov
and
mov
repz
xchg
inc
fld
add
in
mov
push
xchg
paddsb
mov
mov
mov
and
mov
mov
jmp
cs
std
ret
mov
push
movs
inc
add
lea
and
add
or
adc
mov
(bad)
cmps
in
lea
inc
xchg
jo
sub
cmp
add
mov
(bad)
xor
add
cmp
or
push
cmps
in
add
mul
mov
and
mov
jbe
call
mov
lea
and
add
or
std
out
xchg
add
shl
call
lea
clc
push
add
mov
mov
call
add
test
mov
add
push
and
add
leave
push
xchg
and
add
mov
push
fld
mov
es
data16
dec
lods
add
inc
and
call
lea
and
add
fldcw
and
retf
add
and
and
add
popf
and
adc
out
shl
and
add
mov
and
add
jecxz
jecxz
add
or
and
je
add
imul
repz
and
xor
addr16
push
add
add
inc
mov
add
dec
push
inc
(bad)
adc
push
movs
in
das
sub
(bad)
js
fcom
add
inc
scas
(bad)
jmp
nop
push
mov
push
push
push
and
sub
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
and
mov
sbb
je
add
xchg
hlt
add
add
nop
add
add
mov
mov
test
stos
movs
sub
sbb
xchg
xor
jae
test
add
add
mov
and
mov
data16
jae
iret
and
and
retf
frstor
add
sub
mov
fdiv
or
mov
dec
mov
add
mul
add
jno
mov
aam
sub
gs
jmp
call
jecxz
retf
xlat
pop
lea
and
or
add
push
fldcw
loopne
mov
sub
mov
daa
int3
add
add
add
jae
add
lods
mov
add
jmp
mov
and
add
retf
xor
test
add
sbb
add
xor
mov
test
lds
or
mov
gs
mov
mul
mov
add
mov
jg
and
mov
push
loopne
and
int
push
test
sub
test
add
adc
or
out
add
mov
and
nop
add
jg
movs
add
add
add
add
sub
mov
dec
and
sub
aad
add
add
adc
outs
test
fadd
shl
add
repz
and
mov
cld
shl
leave
mov
add
test
cmps
sub
xor
cs
loopne
add
sub
std
test
mov
nop
cmovne
sbb
mov
loopne
add
sub
mov
je
jmp
xor
cwde
mov
test
das
and
dec
add
add
add
add
add
mov
and
movs
sub
je
in
and
add
mov
call
mov
add
(bad)
and
add
inc
ds
mov
in
pop
push
rol
and
add
push
add
in
in
add
add
cmp
mov
test
mov
cmp
mov
push
mov
scas
mov
add
retf
add
pop
std
add
add
mov
sub
mov
mov
add
jmp
xor
mov
test
test
mov
out
sbb
add
add
add
mov
and
add
add
inc
add
mov
mulps
aaa
mov
inc
loopne
add
sub
mov
jl
repz
or
jmp
mov
mov
sbb
add
or
add
add
add
push
mov
(bad)
sbb
mov
ds
inc
add
fst
gs
jbe
gs
retf
add
loopne
nop
retf
pushf
jne
pop
inc
jmp
add
add
jae
add
test
and
out
sti
lock
inc
and
je
jmp
mov
sub
inc
pop
test
in
add
add
jae
and
add
movs
add
push
imul
add
out
mov
shr
mov
lds
addr16
jae
retf
mov
sub
pop
shl
cmp
and
mov
add
dec
out
add
mov
cs
or
add
int3
add
add
add
sub
mov
dec
add
repz
mov
mov
xchg
call
jg
movs
add
add
mov
rcr
stos
lods
sbb
add
xor
sub
cdq
loopne
add
dec
out
and
and
jg
jns
add
sbb
dec
add
mov
je
stos
xchg
add
add
add
mov
dec
and
mov
xchg
add
(bad)
cmp
daa
jo
add
sub
inc
(bad)
push
xor
retf
cmps
add
jmp
mov
loopne
add
pop
mov
and
fnsave
mov
retf
add
test
sub
mov
stos
test
add
add
mov
add
mov
jnp
mov
shl
sbb
add
add
mov
xchg
add
add
cmp
and
dec
add
in
add
and
and
or
test
jge
test
jl
ror
and
add
movs
sub
mov
xchg
mov
loope
add
mov
fdiv
fdiv
add
movzx
mov
sbb
inc
mov
add
xor
mov
lods
test
add
dec
sbb
fld
mov
jmp
test
je
ror
add
nop
retf
and
mov
or
or
pop
mov
mov
lea
add
or
sti
data16
inc
aad
into
les
jmp
mov
add
inc
movs
sub
jmp
add
inc
and
push
xchg
add
mov
into
ret
call
add
inc
push
mov
and
inc
and
movs
sub
sets
movs
mov
add
add
mov
jmp
mov
mov
push
jb
add
clc
les
add
mov
add
fisttp
add
ret
and
mov
and
cmp
add
push
add
nop
add
mov
cmp
(bad)
mov
and
sub
fisttp
add
mov
hlt
add
add
hlt
je
sar
mov
push
mov
add
add
cli
or
cmp
add
mov
pop
add
and
retf
fld
lods
mov
gs
add
rol
add
sub
push
add
add
sbb
or
and
add
add
out
add
dec
jl
xor
add
add
jo
and
add
add
mov
xchg
and
add
int
xor
and
add
mov
enter
(bad)
cmp
dec
pop
cld
rol
ds
mov
retf
mov
mov
add
and
(bad)
ds
add
inc
and
call
call
call
sar
(bad)
dec
add
mov
jmp
clc
xchg
fs
add
retf
mov
retf
(bad)
or
mov
test
fnstenv
mov
pop
test
add
cwde
jns
test
add
sub
and
ins
mov
jmp
mov
add
xchg
push
sub
xchg
xchg
and
dec
add
mov
jmp
clc
retf
ss
and
mov
add
add
inc
ror
add
movs
add
add
add
mov
std
(bad)
xchg
jmp
mov
and
add
nop
retf
ss
sbb
std
lea
inc
test
add
add
add
add
movs
jmp
add
add
movs
add
les
and
mov
mov
aam
add
add
test
and
jae
dec
push
push
mov
test
mov
test
add
sub
mov
push
add
call
ret
in
mov
dec
fwait
mov
jmp
cli
lock
add
add
mov
add
adc
in
retf
int
or
mov
test
add
add
jp
pop
ret
mov
setle
push
mov
add
test
pusha
(bad)
call
ret
and
mov
add
test
nop
add
adc
dec
mov
inc
ds
inc
and
sub
sub
retf
mov
mov
mov
xor
xchg
popa
outs
inc
sbb
call
mov
mov
daa
js
add
fwait
ret
push
cs
test
inc
add
sub
inc
iret
mov
mov
mov
mov
std
(bad)
and
inc
and
add
retf
inc
and
sub
stos
shr
mov
push
in
inc
add
retf
add
mov
or
and
mov
add
jg
add
add
add
std
rcl
pop
test
add
add
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jbe
mov
int
out
add
add
add
add
mov
cmps
test
repnz
jns
mov
outs
lods
pop
mov
test
ret
dec
and
add
int3
lea
mov
leave
lea
mov
mov
mov
add
jmp
and
add
add
(bad)
sbb
or
add
std
adc
cld
add
cmp
add
mov
mov
add
repnz
and
mov
add
pusha
mov
or
add
out
pushf
and
xchg
leave
sub
and
out
cmps
mov
and
stos
mov
std
pop
add
and
add
or
and
xchg
add
leave
in
mov
or
cmp
out
out
add
fld
out
and
inc
mov
add
sub
mov
std
add
mov
jecxz
repz
add
and
add
xchg
add
inc
push
cld
sub
add
call
mov
jns
add
(bad)
in
and
sub
add
inc
inc
and
or
add
mov
and
ret
mov
(bad)
cmps
xor
add
add
add
inc
sub
std
mov
leave
mov
movzx
jge
or
add
test
js
add
sub
sub
sub
jbe
sub
add
mov
(bad)
pusha
add
out
test
add
mov
or
add
xchg
loop
add
scas
add
add
inc
add
test
std
mov
sbb
add
repnz
ss
je
add
shl
test
or
jg
adc
ins
rol
xchg
in
add
add
sub
add
out
and
in
ret
add
add
add
add
call
inc
or
add
lea
and
add
add
mov
add
add
xor
mov
int
mov
daa
in
push
cmps
jns
jmp
movs
and
and
push
test
push
std
mov
add
call
mov
lea
and
add
add
std
adc
or
add
add
cmps
adc
xchg
loop
push
stos
out
stos
je
dec
xacquire
je
jecxz
repz
loop
cmp
lea
sti
add
add
lea
mov
mov
add
pushf
and
inc
add
jmp
and
mov
shl
add
je
jecxz
push
xor
jle
or
adc
enter
sar
add
lea
aad
das
add
mov
lock
sub
add
add
stos
test
test
inc
jmp
xor
sub
repnz
dec
and
add
out
dec
dec
ror
hlt
mov
sub
mov
mov
jg
push
sub
add
add
sub
test
int
add
(bad)
mov
adc
test
pop
cs
jnp
psrad
test
and
and
jmp
enter
add
add
mov
(bad)
push
int
add
test
not
add
mov
hlt
push
stos
test
sub
inc
test
(bad)
and
add
jmp
mov
add
jbe
mov
dec
mov
je
jmp
sahf
adc
enter
aad
cwde
mov
push
add
sub
add
xchg
add
test
inc
push
test
mov
add
cmovae
scas
repnz
hlt
or
and
add
std
cmp
lds
mov
test
cmp
add
(bad)
and
out
dec
add
inc
mov
sub
mov
je
adc
push
mov
mov
cmps
add
sub
and
add
add
add
add
add
jg
or
jmp
xor
add
shrd
add
jbe
and
add
(bad)
sub
jnp
and
or
add
jb
add
adc
leave
mov
hlt
cmp
outs
test
cmps
add
jbe
out
pop
inc
add
and
add
push
ins
loopne
mov
sub
add
add
jmp
jns
and
add
std
sub
mov
add
dec
js
hlt
add
dec
cmp
and
push
cmps
add
mov
and
add
add
add
add
loope
addr16
cmp
add
(bad)
scas
leave
std
add
jmp
mov
and
inc
ret
inc
call
out
sub
cmps
add
jmp
jbe
and
add
add
jge
(bad)
cmp
and
add
add
jns
or
add
rol
push
fs
cmp
add
test
js
inc
jg
rol
add
xrstors
add
ret
rol
inc
sub
mov
or
add
je
cld
xchg
add
push
nop
add
das
sub
mov
test
add
add
out
test
add
add
stos
add
jp
add
test
add
jmp
mov
sub
mov
add
cmp
add
add
out
mov
sub
int3
sub
aam
add
mov
test
ret
std
jmp
sub
(bad)
fs
or
mov
adc
add
sub
mov
das
add
jmp
mov
and
cmps
jns
push
mov
hlt
add
sub
pop
pop
inc
add
dec
test
daa
cmp
fneni(8087
mov
jg
dec
add
inc
mov
push
int3
jmp
jecxz
cmps
add
je
adc
xchg
add
mov
add
add
mov
jg
xchg
out
mov
sub
retf
lahf
add
add
test
iret
test
add
call
cmp
mov
dec
jns
inc
add
out
push
and
dec
jnp
repnz
add
jmp
ins
test
jno
add
adc
or
out
add
test
add
outs
inc
test
mov
push
test
jl
mov
je
mov
std
add
lock
(bad)
sub
and
add
add
lods
sub
sbb
hlt
cmp
push
jmp
mov
inc
add
mov
and
add
add
add
mov
out
sahf
test
fnstenv
ret
test
add
push
jg
nop
add
outs
inc
and
test
je
and
add
add
test
mov
add
jbe
and
adc
xchg
sub
mov
out
out
add
and
add
add
add
in
and
add
imul
mov
inc
xor
int3
jecxz
(bad)
adc
add
sub
xchg
jne
and
add
add
fldenv
add
add
mov
and
test
iret
xlat
sbb
add
add
mov
sub
mov
jecxz
add
int3
or
jmp
push
dec
and
cmc
cmp
sub
fild
popa
shl
add
jmp
lock
and
add
mov
adc
mov
repnz
inc
and
out
jmp
inc
test
nop
add
add
and
test
jns
add
xor
mov
jmp
fs
mov
mov
cmp
mov
adc
add
sbb
mov
add
push
sub
test
add
add
arpl
add
and
inc
jnp
dec
jns
rol
cmps
add
outs
jns
lea
xchg
leave
and
add
push
cmps
add
ror
in
cmp
je
jecxz
add
int3
add
leave
jmp
movs
test
add
add
mov
and
outs
inc
test
cmps
add
add
ins
add
add
mov
pop
cmps
cld
mov
sub
inc
mov
out
add
test
push
adc
add
mov
and
push
add
mov
ret
and
add
punpckhbw
add
add
and
add
inc
sub
dec
test
mov
(bad)
je
dec
push
int3
or
fnstenv
xchg
leave
pop
clc
test
or
add
(bad)
and
jns
lods
test
add
mov
add
mov
inc
cmp
add
add
xchg
add
add
add
sub
mov
lfs
das
add
mov
in
popa
int3
out
and
repnz
ret
std
add
int
add
adc
in
jle
mov
dec
push
mov
cmps
jns
into
sub
fs
sub
dec
inc
and
mov
add
repnz
mov
sub
mov
(bad)
and
add
(bad)
out
add
mov
sub
mov
je
xchg
jle
add
mov
jecxz
add
dec
popf
pushf
inc
and
cmovbe
hlt
add
jmp
mov
push
mov
popa
add
jmp
cmp
repnz
push
(bad)
mov
mov
hlt
cmp
das
ins
test
add
add
add
je
inc
std
add
add
add
rcr
push
and
inc
and
pshufw
cmp
(bad)
rol
add
mov
and
add
add
dec
packsswb
and
add
add
sub
outs
inc
(bad)
test
leave
sub
(bad)
icebp
loop
cmps
rcl
dec
out
jmp
mov
sub
inc
jnp
cmp
add
jnp
call
adc
nop
leave
sub
test
cmc
cmp
push
jecxz
dec
jmp
lea
and
rcr
add
mov
mov
loope
add
les
out
adc
add
cmp
(bad)
push
cmps
add
test
fwait
add
dec
jmp
mov
mov
and
inc
add
pusha
add
(bad)
je
add
out
adc
add
inc
mov
push
hlt
add
add
mov
fild
call
sub
cld
(bad)
jecxz
add
test
add
xchg
ret
sti
and
jne
xchg
imul
cs
out
cld
xchg
cmp
push
jb
or
cmps
pop
outs
cmovne
add
jmp
mov
ret
xor
test
out
std
add
add
test
inc
and
call
mov
cdq
ja
imul
ret
cmpxchg
(bad)
add
out
pop
adc
xchg
cs
jl
pushf
dec
dec
xchg
jge
inc
mov
mov
mov
dec
imul
cmp
add
bnd
dec
daa
je
xor
cmc
int
add
dec
gs
xchg
jb
jno
outs
cmp
sub
ror
add
sub
stc
mov
pusha
jbe
test
or
jl
retf
sub
xchg
mov
mov
xchg
add
jmp
mov
repnz
data16
or
xchg
and
or
out
dec
adc
add
mov
ret
jbe
and
iret
cmps
repnz
mov
and
dec
and
std
adc
ror
mov
and
call
mov
out
test
je
push
add
test
add
jae
or
or
pop
xor
add
aas
mov
(bad)
cmps
add
movs
add
int3
mov
test
fsubr
xchg
in
xor
hlt
cmp
and
mov
pop
mov
inc
jmp
out
cmps
and
add
test
dec
xchg
mov
mov
mov
inc
test
add
add
popf
push
add
add
add
add
(bad)
jecxz
cmps
add
mov
mov
outs
inc
or
call
add
lock
dec
add
mov
call
jle
add
cmps
jg
mov
and
add
out
push
and
je
xor
mov
in
adc
or
rcr
push
xchg
cwde
daa
inc
test
add
cmp
mov
add
test
add
add
shl
clc
ret
mov
mov
shl
xor
out
fs
inc
ror
add
call
je
push
add
test
and
shl
js
add
mov
mov
mov
mov
mov
xor
(bad)
jmp
test
add
psubsw
in
and
stos
sub
les
add
cmovne
mov
jmp
mov
mov
and
inc
lods
add
(bad)
jo
xchg
add
add
sbb
add
(bad)
jmp
add
and
and
add
jmp
ret
add
cmp
inc
test
test
add
jmp
lods
or
mov
hlt
add
das
add
ret
sbb
and
or
add
test
test
add
add
xchg
cmp
ret
and
xor
int
mov
test
adc
cmp
xchg
out
imul
add
add
rol
add
sub
cdq
stos
add
ret
jge
popa
or
mov
add
dec
cs
std
add
add
sub
jo
sub
add
sbb
and
add
adc
dec
add
test
test
or
jo
hlt
pop
pop
pushf
cli
xor
mov
out
add
out
push
add
cmps
mov
repnz
movs
repnz
das
ja
sub
jecxz
lods
pop
sub
jnp
cli
mov
and
dec
inc
repnz
or
push
and
hlt
cmp
and
test
movs
pop
movs
or
mov
mov
dec
adc
xor
add
adc
mov
sbb
or
add
cld
test
add
add
loopne
in
jmp
adc
add
add
add
adc
mov
(bad)
jg
add
add
mov
mov
and
mov
jo
mov
je
push
add
and
call
sub
add
add
add
add
cmp
add
fcomip
and
mov
and
and
outs
dec
or
(bad)
mov
sub
std
add
add
in
jmp
sahf
adc
aas
and
sbb
test
cmps
jns
or
data16
push
mov
push
push
push
and
sub
jmp
call
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
add
push
scas
test
pusha
aaa
call
mov
xchg
push
xor
xchg
setne
add
aas
jmp
aaa
addr16
in
retf
inc
scas
mov
fiadd
xor
jmp
mov
pop
sub
cmp
in
pop
push
add
jmp
mov
pop
push
sub
mov
je
adc
mov
push
sub
das
test
mov
jg
jmp
mov
and
sub
mov
push
test
add
add
cmp
add
mov
mul
psubq
add
fistp
lea
cs
pusha
aaa
call
mov
add
mov
push
sahf
ficomp
loop
fwait
and
adc
add
add
aas
jle
inc
cwde
push
sub
cmp
mov
add
jmp
mov
sub
mov
in
mov
add
jmp
(bad)
pop
push
sub
in
test
(bad)
sbb
add
xor
mov
jecxz
enter
mov
into
ret
je
jmp
aaa
addr16
nop
add
sbb
dec
add
mov
xor
mov
jnp
adc
cmp
add
add
rcr
and
cmps
add
cs
inc
and
je
jmp
cmp
and
sub
mov
or
test
mov
inc
and
sub
xchg
inc
data16
pop
jmp
mov
pop
scas
scas
les
loopne
add
outs
or
add
add
(bad)
mov
add
call
mov
mov
and
ud1
xor
(bad)
adc
add
lods
pop
push
fisttp
mov
add
mov
ds
shl
out
pop
inc
mov
add
add
xor
mov
inc
and
cmp
cmp
jmp
mov
mov
popf
cmp
add
add
or
mov
push
push
pop
je
movs
add
stos
push
add
movs
add
mov
mov
leave
cs
push
add
mov
loop
shr
and
jmp
mov
mov
push
cmps
xor
add
inc
cli
pop
pop
mov
mov
(bad)
cmp
aaa
movs
add
(bad)
push
js
push
add
data16
add
rcl
mov
rcr
and
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
call
mov
mov
add
mov
mov
jmp
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
call
add
pop
pop
ret
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
leave
or
lods
sbb
add
mov
mov
add
test
add
add
(bad)
sbb
scas
test
push
add
mov
jae
and
out
or
add
movs
add
add
sub
mov
mov
xor
mov
mov
cdq
pop
add
daa
jmp
mov
and
clc
add
fs
mov
movs
sbb
add
fisub
test
leave
jns
add
mov
add
dec
clc
add
add
stos
mov
loop
or
or
or
mov
mov
add
popf
out
jns
fnstenv
add
add
mov
ror
jmp
test
add
or
xor
mov
or
cmp
and
add
adc
daa
mov
repnz
clc
push
mov
ins
clc
sbb
jmp
mov
add
pushf
jg
mov
add
paddw
add
jmp
mov
fs
cmp
ja
out
add
jmp
add
and
add
mov
jmp
inc
and
add
pop
push
add
add
sub
cmp
(bad)
and
test
add
mov
mov
inc
and
mov
test
mov
jecxz
pop
(bad)
sbb
sub
fst
and
push
and
mov
jmp
push
lahf
and
add
ror
fild
pop
jmp
icebp
test
add
or
mov
inc
stos
jle
pop
add
add
imul
mov
or
inc
and
sysenter
adc
dec
fucomip
sub
test
fdiv
imul
push
add
fisub
popa
dec
fld
pop
push
mov
mov
call
add
repnz
ins
clc
sahf
test
add
or
mov
add
aaa
dec
(bad)
sbb
in
std
and
push
add
movs
push
inc
and
je
cld
and
test
sbb
add
adc
mov
jg
mov
xchg
int3
daa
cmp
and
add
add
jno
and
sbb
xchg
or
(bad)
mov
sub
mov
adc
add
push
xchg
mov
xchg
jns
sub
shl
call
jmp
add
or
inc
movs
ins
inc
add
mov
jmp
mov
push
lahf
push
sbb
sbb
cdq
dec
jge
add
into
sub
mov
sub
mov
and
add
add
pop
mov
cld
test
xor
test
out
jns
cmps
add
add
fild
ss
sub
inc
fdivr
punpcklwd
pop
sub
add
sub
std
repnz
dec
mov
adc
jns
mov
test
xchg
add
sub
cmp
inc
(bad)
and
add
jmp
out
and
add
add
push
push
sti
add
fisub
pop
sbb
add
sub
fld
cmovs
add
jmp
mov
sub
add
test
add
add
add
add
xor
sbb
or
int3
push
inc
ds
test
in
add
pop
add
mov
sub
mov
and
bswap
movs
add
add
sbb
add
out
or
mov
mov
dec
or
or
add
addr16
leave
cmps
add
(bad)
in
or
ins
pop
add
sbb
adc
lea
sub
add
addr16
pop
xor
std
inc
adc
xchg
add
add
sub
test
add
add
mov
fistp
mov
pushf
test
add
pop
cmps
add
jnp
push
test
sbb
add
xchg
in
add
add
pop
mov
and
xor
add
xlat
fld
add
sbb
mov
jno
and
dec
retf
dec
and
call
ss
cli
mov
repnz
add
in
add
add
(bad)
xchg
fstp
call
into
test
add
mov
mov
jmp
mov
mov
movs
pop
add
adc
add
scas
add
push
adc
add
add
add
in
jns
mov
int3
daa
mov
sar
or
repnz
add
xor
cmp
cmovl
sbb
add
mov
mov
and
int3
daa
mov
data16
add
in
and
add
add
mov
test
push
and
add
loop
add
(bad)
mov
add
add
cmps
add
and
in
add
and
ins
jmp
mov
sahf
jbe
sub
mov
add
test
not
or
mov
add
in
pop
add
mov
add
arpl
fs
add
mov
repz
imul
xchg
int3
add
inc
pop
inc
mov
jmp
mov
aaa
add
xor
add
imul
add
and
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
or
(bad)
dec
dec
push
outs
paddb
add
mov
mov
mov
mov
and
mov
clc
rol
mov
and
mov
cwde
jmp
sti
inc
and
sub
cwde
inc
and
femms
lods
add
add
jecxz
add
mov
and
sub
mov
jg
jmp
mov
sub
adc
sbb
fild
cmps
adc
add
lds
sub
jmp
fld
rcl
add
jmp
push
inc
and
sub
mov
and
pmuludq
add
jmp
mov
sub
mov
lock
xchg
dec
retf
add
(bad)
ds
and
mov
test
and
add
mov
bound
cdq
mov
jp
ror
rdtsc
xchg
inc
add
jo
push
sahf
push
push
sub
cs
cli
inc
push
inc
inc
sti
pmaddwd
retf
repz
mov
std
jb
stc
pop
ja
test
add
(bad)
push
into
inc
jne
mov
mov
adc
inc
dec
repnz
clc
jbe
add
cmp
shl
mov
add
call
enter
jmp
js
dec
add
inc
and
add
fld
mov
cwde
or
mov
and
inc
inc
cld
iret
jmp
inc
movs
and
jecxz
add
sbb
lea
(bad)
js
and
lea
pop
ret
call
cmp
dec
add
xor
cmp
add
(bad)
xor
popf
xchg
pop
jmp
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
jmp
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
pop
cmova
div
add
aaa
mov
add
mov
add
(bad)
xor
lds
add
call
push
dec
and
add
add
scas
add
jp
add
out
push
add
into
test
add
xchg
mov
mov
add
xor
pop
shr
add
test
stos
add
add
mov
and
add
add
rcr
lea
outs
cli
test
scas
inc
add
test
add
sub
add
dec
inc
jmp
popa
add
push
sbb
jae
out
add
sbb
xchg
add
mov
dec
mov
push
add
ror
add
add
jmp
pop
or
xor
mov
jle
ins
push
add
add
xor
sub
add
sub
mov
(bad)
(bad)
and
add
jmp
clc
imul
cwde
test
mov
add
cmp
pop
add
add
mov
jecxz
xchg
add
popf
ins
and
add
jmp
mov
(bad)
jns
fnstcw
push
and
add
popa
je
jmp
in
and
jae
add
into
cmp
xor
add
add
add
popa
cmp
add
dec
jge
mov
or
(bad)
jb
add
out
jle
xchg
imul
arpl
je
sar
mov
mov
add
fimul
in
cvtps2pi
add
or
(bad)
and
in
mov
jmp
mov
jb
adc
shr
popf
and
andnps
outs
jae
cmova
jle
adc
add
dec
sub
stos
inc
into
outs
jg
jmp
mov
sub
mov
and
jo
jmp
mov
xor
mov
jg
cmp
popa
add
mov
sub
xchg
bswap
clc
jle
xchg
jmp
mov
push
dec
sahf
adc
pop
jg
jmp
pop
jmp
sbb
and
bsf
pop
add
cmp
and
add
add
sub
inc
pop
inc
dec
and
(bad)
mov
add
add
test
arpl
xchg
mov
test
add
add
mul
outs
not
mov
aaa
leave
dec
je
xchg
add
and
add
add
mov
inc
mov
and
jmp
test
rol
popa
sub
mov
jae
verw
rol
jle
sbb
xchg
add
mov
(bad)
stos
scas
and
xor
add
clc
imul
sbb
and
je
cmps
pop
xor
sub
add
sub
mov
xchg
add
xchg
add
inc
add
mov
shr
pop
mov
xchg
add
fiadd
add
add
jnp
add
add
xor
inc
lock
jl
mov
push
xchg
loop
xor
pavgb
enter
and
je
jmp
push
test
add
add
mov
and
jno
mov
add
jmp
mov
add
sub
mov
aad
imul
add
int3
test
loop
add
(bad)
ja
xor
jmp
pop
test
add
fisubr
out
leave
sbb
ret
or
jle
jnp
add
add
and
add
xor
mov
test
fild
add
mov
sub
mov
aam
in
add
push
sldt
int3
cli
mov
add
mov
dec
mov
or
lods
mov
add
out
imul
and
fiadd
add
cli
test
inc
jg
loop
sub
mov
mov
and
sub
ds
and
outs
test
fiadd
aam
jae
verw
and
loop
add
dec
outs
mov
add
and
test
lods
add
call
add
jl
mov
xchg
dec
add
xchg
into
mov
add
mov
and
fiadd
aam
fnstenv
add
and
add
add
add
aaa
mov
mov
xchg
add
and
mov
jmp
out
adc
(bad)
add
fcmovbe
add
test
add
psubsw
test
aaa
add
retf
xchg
add
add
js
add
mov
or
mov
in
and
in
add
xor
and
add
xchg
cmovae
mov
add
retf
mov
test
pop
add
jmp
mov
(bad)
fcomp
xor
add
add
add
cmove
mov
jmp
out
cmc
jmp
aam
jmp
mov
jg
xchg
push
and
add
mov
add
test
in
push
cmp
popa
add
push
pop
and
outs
jae
loope
xor
add
mov
fwait
mov
pop
(bad)
int
sbb
clc
xchg
leave
mov
mov
imul
jmp
sub
mov
pop
add
test
lods
add
xor
add
(bad)
jmp
mov
add
xchg
imul
add
sub
test
lods
add
add
je
jmp
mov
lea
pop
and
ret
push
adc
dec
xor
and
jmp
add
les
jp
cmp
test
in
add
mov
retf
add
xor
pop
add
(bad)
hlt
and
mov
test
in
add
cmps
xchg
jmp
nop
out
pop
push
pop
repz
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
popf
inc
enter
pop
out
inc
add
sti
dec
aas
jb
add
mov
inc
dec
jb
mov
aaa
inc
and
stos
into
popa
aad
jmp
adc
dec
rol
mov
mov
dec
out
add
repz
or
mov
xchg
sub
add
or
mov
add
pop
sahf
and
sub
imul
fimul
fsqrt
add
dec
out
jle
mov
mov
retf
cmp
and
and
je
jmp
imul
mov
mov
jno
inc
mov
mov
pop
jnp
and
ret
cdq
stos
xor
or
sub
add
jmp
mov
into
mov
mov
sbb
icebp
inc
mov
and
out
sbb
jo
inc
pusha
test
push
je
loop
add
xchg
push
inc
out
sub
mov
mov
dec
add
push
movs
add
jle
rol
sub
aaa
mov
inc
add
lods
in
cmp
or
mov
mov
test
xchg
inc
jg
push
add
push
out
inc
and
sub
mov
mov
add
or
and
jo
popw
add
dec
bndstx
add
add
mov
and
sub
pop
jno
cmc
and
mov
lock
and
sub
mov
int3
ins
sbb
add
and
daa
mov
and
mov
out
test
lock
es
and
sub
imul
(bad)
sbb
push
out
add
test
popa
call
add
aad
add
add
mov
inc
enter
sbb
add
jle
mov
and
or
inc
and
inc
dec
add
add
mov
mov
mov
sub
add
out
add
add
mov
sub
sbb
pop
and
out
lock
lods
mov
in
(bad)
pop
mov
adc
test
pop
add
add
out
jmp
loop
mov
mov
add
jnp
pcmpgtw
mov
outs
repz
sub
add
add
cli
(bad)
test
ud0
fbld
push
jle
mov
add
or
jmp
mov
inc
and
outs
jmp
sbb
(bad)
xchg
add
push
inc
and
add
add
jmp
add
mov
and
add
add
inc
and
stos
mov
aad
inc
mov
jmp
stos
push
add
add
push
fnstenv
add
movzx
and
(bad)
sub
sub
int3
les
fimul
and
mov
add
lock
shl
jnp
cli
add
push
xchg
push
std
imul
or
and
(bad)
stc
and
add
cmp
and
aaa
add
outs
and
jmp
jno
add
push
mov
mov
add
mov
push
(bad)
cli
cmp
push
add
dec
retf
and
jmp
mov
mov
and
push
in
lock
and
mov
das
pushf
add
inc
pop
(bad)
data16
add
in
(bad)
inc
outs
inc
and
jmp
sahf
inc
and
inc
(bad)
pop
mov
mov
je
fcmovb
xchg
inc
ins
repnz
jmp
mov
les
je
add
mov
mov
ins
mov
add
lock
mov
and
jmp
test
ss
add
lea
adc
pop
ret
mov
stos
push
add
xor
add
and
add
movups
(bad)
dec
and
es
add
or
ret
loop
pop
and
(bad)
pop
movs
(bad)
(bad)
dec
pop
test
add
add
push
mov
push
push
push
and
mov
call
mov
mov
lea
mov
lea
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovl
mov
jmp
mov
jmp
mov
mov
jmp
mov
lea
mov
mov
mov
call
mov
mov
call
lea
mov
mov
call
lea
mov
mov
mov
mov
call
mov
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
jmp
mov
mov
jmp
mov
mov
movzx
movzx
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
add
mov
mov
jmp
lea
mov
movzx
mov
mov
add
add
sub
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
call
lea
mov
call
lea
mov
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
jmp
lea
mov
call
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
lea
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmovne
mov
jmp
mov
call
mov
mov
cmp
cmove
mov
jmp
lea
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
call
lea
mov
call
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
jmp
lea
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
lea
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
cmp
setb
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
jmp
mov
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
call
sub
inc
mov
mov
lea
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
imul
mov
call
mov
mov
jmp
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
call
lea
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
lea
mov
mov
sub
sub
add
mov
shl
add
mov
mov
mov
mov
mov
call
lea
mov
lea
mov
mov
sub
add
mov
add
sub
sub
mov
shl
add
mov
shl
add
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
lea
lea
mov
mov
mov
mov
mov
call
sub
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
call
lea
mov
lea
mov
sub
sub
add
mov
shl
add
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
jmp
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
sub
mov
call
mov
xor
and
mov
lea
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
inc
mov
mov
mov
lea
mov
call
mov
xor
and
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
inc
mov
mov
mov
lea
mov
call
mov
xor
and
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
inc
mov
mov
mov
lea
mov
call
mov
xor
and
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
movzx
mov
mov
movzx
mov
mov
mov
lea
inc
mov
mov
mov
mov
mov
lea
mov
call
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
call
lea
mov
mov
xor
mov
mov
div
mov
mov
mov
movzx
mov
mov
movzx
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
lea
mov
mov
add
sub
sub
mov
shl
add
mov
mov
mov
mov
mov
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
lea
mov
mov
add
sub
sub
mov
shl
add
mov
mov
mov
mov
mov
mov
call
lea
mov
movzx
mov
mov
sub
mov
movzx
mov
mov
mov
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
movzx
mov
mov
add
add
sub
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
sub
mov
lea
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
call
sub
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
lea
mov
mov
mov
call
sub
lea
mov
mov
call
mov
jmp
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
lea
mov
mov
mov
call
sub
lea
mov
mov
call
mov
jmp
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
call
mov
lea
lea
add
mov
mov
mov
mov
mov
call
lea
mov
mov
movzx
mov
mov
mov
sub
mov
sub
add
sub
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
lea
mov
mov
mov
call
sub
lea
mov
mov
call
mov
jmp
mov
mov
mov
shl
mov
cmp
cmovne
mov
jmp
mov
mov
call
shl
mov
mov
jmp
lea
mov
mov
mov
mov
add
add
sub
add
add
sub
mov
sub
add
add
sub
add
add
mov
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
lea
mov
mov
mov
call
sub
lea
mov
mov
call
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
lea
mov
mov
mov
call
sub
lea
mov
mov
call
mov
jmp
mov
mov
jmp
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
add
mov
cmp
setne
and
mov
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
add
sub
add
mov
mov
mov
mov
call
mov
mov
mov
jmp
mov
jmp
lea
lea
mov
mov
mov
mov
mov
lea
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
lea
mov
mov
mov
call
sub
lea
mov
mov
call
mov
jmp
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
lea
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
lea
mov
mov
mov
call
sub
lea
mov
mov
call
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
call
mov
lea
lea
add
mov
mov
mov
mov
mov
call
lea
lea
mov
mov
mov
mov
mov
lea
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
lea
mov
mov
mov
call
sub
mov
call
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
mov
call
sub
mov
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
lea
mov
mov
mov
call
mov
mov
call
lea
mov
mov
call
lea
mov
mov
mov
mov
call
mov
mov
jmp
mov
jmp
mov
mov
jmp
lea
mov
call
mov
mov
jmp
lea
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
call
sub
inc
mov
mov
lea
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
imul
mov
call
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
call
lea
mov
lea
mov
sub
sub
add
mov
shl
add
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
sub
mov
call
and
mov
lea
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
inc
mov
mov
mov
lea
mov
call
and
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
inc
mov
mov
mov
lea
mov
call
and
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
inc
mov
mov
mov
lea
mov
call
and
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
movzx
mov
not
mov
neg
movzx
mov
mov
mov
lea
inc
mov
mov
mov
mov
mov
lea
mov
call
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
call
lea
mov
xor
mov
mov
mov
div
mov
mov
mov
movzx
mov
mov
movzx
mov
mov
add
add
sub
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
lea
mov
mov
sub
add
mov
shl
add
mov
mov
mov
mov
mov
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
lea
mov
mov
add
sub
sub
mov
shl
add
mov
mov
mov
mov
mov
mov
call
lea
mov
movzx
mov
mov
add
add
sub
mov
movzx
mov
mov
mov
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
movzx
mov
mov
sub
add
add
mov
shl
add
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
sub
mov
lea
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
lea
mov
mov
mov
call
sub
lea
mov
mov
call
mov
jmp
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
add
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
sub
mov
add
mov
sub
sub
add
add
add
mov
mov
mov
mov
call
mov
mov
jmp
lea
mov
mov
mov
call
sub
lea
mov
mov
call
mov
jmp
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
cdq
mov
mov
popf
ret
data16
ss
xor
pop
jb
call
pop
mov
xor
iret
movs
pop
lds
test
inc
pushf
or
jmp
mov
sbb
push
pop
dec
mov
xor
in
mov
xchg
sti
in
rol
ins
int
int
or
pop
adc
sar
loop
inc
retf
inc
jmp
xchg
clc
int
test
mov
sti
push
fisttp
jnp
sub
and
add
sahf
out
adc
mov
jmp
imul
mov
or
lods
adc
popf
add
scas
ret
pop
pop
sbb
repz
out
pop
pop
(bad)
push
movs
jle
loopne
fdivr
mov
ss
test
pop
mov
js
or
cmc
fwait
cs
fiadd
ins
or
out
retf
out
dec
mov
push
mov
xor
icebp
popf
lods
je
inc
addr16
mov
add
jmp
push
int3
pop
mov
data16
inc
sbb
or
xchg
pop
cmc
(bad)
pusha
inc
sub
adc
mov
sub
pop
xchg
(bad)
and
jnp
adc
xchg
jge
mov
inc
mov
add
sar
aas
fdiv
mov
sub
(bad)
lock
aas
loope
xor
ins
fwait
jo
in
movs
push
jl
outs
pop
movs
jo
call
cmp
or
cmps
pop
fisubr
lahf
dec
xor
out
pushf
fmul
inc
mov
iret
(bad)
push
(bad)
push
adc
out
mov
mov
inc
(bad)
outs
mov
in
loop
sub
fnstcw
xchg
push
jg
push
jb
jl
jno
loopne
dec
and
aas
das
mov
inc
push
dec
aam
or
(bad)
aad
(bad)
push
or
push
dec
pop
loope
popf
pop
(bad)
outs
ja
mov
xlat
in
mov
cmp
sbb
ror
clc
and
and
das
(bad)
xor
arpl
dec
mul
movs
jg
sub
push
dec
jbe
xlat
inc
popa
mov
push
fucom
push
sub
daa
test
(bad)
sub
stos
xlat
cmp
fnsave
push
movs
arpl
sbb
retf
cwde
aad
out
pop
sub
imul
mov
leave
cmp
sbb
lahf
jl
adc
and
ret
or
ins
xchg
push
push
mov
xchg
not
test
fsub
not
jmp
iret
push
xor
sub
and
sub
inc
loope
loop
mov
push
int
in
mov
fisubr
rcr
pop
out
cmps
adc
and
add
test
out
mov
mov
or
dec
cmp
jle
aas
pop
dec
and
mov
inc
mov
cmp
movs
inc
cwde
fcomp
in
outs
jge
jmp
adc
mov
mov
jmp
jbe
mov
sub
xchg
dec
or
aaa
repnz
push
addr16
ret
fbstp
mov
cwde
add
jae
jle
jnp
retf
fidivr
mov
pop
dec
mov
add
mov
xor
sahf
out
fst
jg
mov
lock
mov
sbb
les
mov
iret
adc
sub
mov
in
imul
add
movs
mov
loop
hlt
cmp
mov
xor
and
push
or
clc
lds
sbb
mul
jle
pop
push
xchg
mov
mov
dec
test
push
loopne
push
push
cmp
sti
addr16
inc
or
inc
push
and
push
pop
leave
sub
pop
xchg
mul
jle
xlat
or
repz
repnz
adc
hlt
cmovp
(bad)
stc
push
es
pop
arpl
dec
or
arpl
sub
sub
pop
shl
push
call
xchg
loopne
inc
cmp
aas
push
sbb
hlt
movs
cdq
inc
scas
je
ds
sbb
xchg
hlt
sub
inc
xchg
in
cmp
xor
inc
xchg
or
inc
sahf
xchg
rol
push
addr16
repnz
std
test
out
xor
fidiv
pop
rcl
pop
inc
fisub
cs
lods
addr16
iret
mov
pushf
es
clc
xor
adc
cmp
pushf
call
fs
gs
hlt
pop
out
pop
fwait
test
call
dec
push
dec
lods
fcomp
dec
xor
mov
mov
jbe
int
xlat
xor
fwait
mov
add
mov
inc
movs
xchg
into
pop
mov
shl
adc
cmp
rcr
xor
js
cmc
jg
sub
push
jb
pop
jmp
push
call
sbb
(bad)
fistp
clc
mov
retf
shrd
sub
xchg
inc
push
sahf
test
and
cld
fcmove
frstor
pop
test
or
fistp
pop
loope
xor
mov
repnz
test
mov
cmp
and
dec
adc
adc
xlat
(bad)
xchg
sub
movs
mov
lock
imul
scas
cmp
sub
dec
stos
cmp
and
adc
inc
fnstcw
int3
scas
jl
mov
cmp
adc
and
jbe
mov
out
in
rcr
ja
not
mov
mov
sbb
ins
movs
je
mov
or
inc
mov
fs
pusha
mov
movs
sbb
ficom
jmp
adc
cmp
loopne
leave
mov
jne
or
or
test
dec
test
mov
xor
inc
in
inc
sbb
popa
cmp
push
dec
retf
push
cmp
lock
inc
stc
add
fisubr
not
push
pusha
or
ins
push
and
test
add
mov
sub
out
pop
cdq
push
push
mov
loop
mov
nop
mov
inc
jbe
(bad)
int
ror
sbb
add
fistp
cmp
inc
xchg
faddp
jo
jmp
cmp
xchg
mov
adc
mov
xchg
pushf
cmp
shl
cli
(bad)
sub
push
jg
lods
pop
ffree
mov
mov
jb
fcmovnb
ins
in
sbb
mov
cmp
inc
xchg
retfw
shr
(bad)
lea
mov
call
lds
sbb
mov
jns
jbe
mov
shl
or
int
pop
xlat
sbb
cmp
mov
(bad)
test
xor
or
(bad)
or
mov
addr16
mov
scas
ja
inc
dec
scas
push
stos
repnz
test
lock
inc
sub
mov
sbb
pop
adc
mov
popf
sbb
dec
mov
out
sbb
mov
(bad)
cli
repz
jnp
xor
scas
mov
jb
push
xor
add
jmp
sub
xchg
xchg
inc
retf
pop
adc
mov
push
enter
lods
inc
movs
pop
les
dec
pop
inc
cmp
imul
fistp
push
jecxz
scas
add
cld
sbb
mov
dec
mov
mov
inc
movs
xchg
push
adc
test
xchg
mov
mov
cmp
imul
retf
inc
outs
xchg
sub
stos
xchg
add
stos
pop
gs
dec
mov
dec
fnsave
adc
je
shr
loope
sbb
push
adc
pop
mov
(bad)
fs
push
(bad)
rcr
(bad)
aas
(bad)
fnstsw
fwait
push
outs
(bad)
mov
(bad)
test
xchg
(bad)
pop
jp
mov
push
daa
sub
jne
repz
(bad)
pushf
mov
jl
fld
lods
mov
rcl
test
mov
and
sbb
xchg
in
mov
stc
jle
mov
pushf
mov
dec
fwait
xchg
mov
retf
mov
stos
push
das
retf
jecxz
in
mov
sub
mov
das
pop
leave
xchg
xchg
out
push
xchg
test
cmp
add
rcr
xchg
pushf
pop
xchg
mov
cmp
mov
sub
xchg
inc
ins
and
les
xor
pushfw
push
jno
ficomp
jns
ins
mov
jge
sbb
aad
jl
hlt
adc
cmc
xor
xor
stc
enter
sub
enter
add
ror
mov
dec
aas
xor
out
pusha
pop
(bad)
out
out
dec
dec
inc
mov
or
xor
ja
stos
popw
retf
out
prefetcht0
fst
push
or
repz
sub
xchg
ret
push
shr
int3
push
inc
call
mov
cmps
push
outs
lea
xor
(bad)
(bad)
sahf
xchg
out
call
sub
fstp
jae
je
inc
enter
dec
push
or
inc
call
test
cli
aas
lock
(bad)
int
push
iret
fild
cwde
mov
inc
fwait
jnp
push
cmp
hlt
push
add
leave
cmps
push
(bad)
mov
stos
fucomp
lahf
test
sub
fwait
cmp
mov
pop
adc
fistp
in
xor
mov
cmp
mov
sbb
fst
sub
sti
popa
(bad)
jb
inc
imul
cs
mov
loope
push
jecxz
mov
mov
loopne
add
out
mov
movs
jns
pop
out
cwde
mov
cwde
mov
xor
in
mov
pop
pop
fistp
cld
inc
data16
hlt
clc
and
fcom
fsubr
mov
sub
push
xchg
sub
add
into
pop
stos
leave
inc
aam
popf
and
data16
bound
xor
loopne
and
fnstenv
sbb
mov
inc
repnz
xor
adc
fcmovbe
xor
call
sahf
not
retf
inc
add
xchg
test
and
aaa
cmp
xchg
ja
inc
dec
repnz
pop
fwait
xchg
es
cdq
inc
or
dec
or
out
cmp
mov
add
call
xor
and
sbb
test
adc
ret
adc
into
popf
mov
ds
and
(bad)
imul
xchg
jae
mov
arpl
ins
pop
push
pop
int3
or
int
fsubp
dec
cmp
adc
aaa
jmp
add
dec
or
icebp
shr
cld
add
leave
test
int3
cmp
jbe
mov
jnp
push
loopne
push
adc
push
sbb
test
loope
mov
sub
fdivr
call
inc
aad
and
mov
into
leave
push
xor
xor
mov
inc
aad
test
movs
(bad)
sub
test
and
mov
shr
fs
ins
test
pop
sbb
mov
lea
out
xor
jmp
cwde
mov
inc
(bad)
stos
or
xor
or
mov
jnp
lods
addr16
add
mov
shl
lds
mov
mov
mov
cwde
inc
jns
push
loopne
push
pop
mov
mov
dec
cmp
jmp
out
cmp
lock
ss
mul
xchg
call
cs
dec
cdq
jns
ja
jge
jmp
imul
mov
jae
or
repz
inc
ret
mov
sub
movs
in
inc
aad
cmp
addr16
fiadd
dec
dec
push
packuswb
iret
mov
iret
sub
out
mov
xchg
sub
(bad)
out
jl
jno
das
jnp
or
rcr
ja
call
mov
sbb
stos
in
loopne
cmps
xor
jle
out
mov
imul
and
dec
das
xchg
jmp
mov
mov
mov
xor
(bad)
stc
or
ss
or
inc
inc
in
sub
rcr
(bad)
mov
movs
sbb
or
enter
pop
jg
dec
in
xor
jmp
or
mov
arpl
dec
fcmovbe
jecxz
int
aaa
loope
adc
cdq
fwait
into
mov
sbb
iret
out
movs
xor
cmp
mov
xchg
loope
push
pop
call
and
(bad)
sbb
stc
repz
aaa
cs
cmp
mov
aas
(bad)
fidivr
mov
cmp
xor
je
and
lods
test
dec
or
std
dec
iret
fdiv
xchg
add
pusha
xor
xor
sub
ja
arpl
add
jmp
mov
cld
in
(bad)
aam
or
ret
push
mov
push
jle
pop
idiv
xchg
mov
cmps
or
push
mov
fistp
sub
dec
call
std
adc
or
inc
das
mov
or
daa
fdivr
or
lds
jns
stc
mov
pop
aas
aas
mov
retf
and
jo
movs
mov
pushf
(bad)
mov
(bad)
sar
mov
mov
cdq
in
or
and
jge
jae
popf
aas
call
test
pop
stos
pop
pop
js
out
push
loope
jne
arpl
imul
dec
out
cmps
(bad)
mov
test
push
adc
xchg
jg
(bad)
jmp
jmp
out
push
mov
jnp
xor
and
lahf
add
pop
cmc
daa
sar
fstp
push
mov
loope
(bad)
sti
pushf
outs
jnp
adc
cld
sub
(bad)
xor
ret
retf
jbe
retf
aam
lea
shr
jmp
int
pop
ins
out
fcomp
cmp
fs
bound
sub
mov
arpl
aas
ficomp
movs
pusha
fisttp
xchg
js
xor
lods
push
es
sbb
lock
scas
and
sub
aaa
loope
or
add
mov
and
adc
cmp
loop
aam
cmp
out
fidiv
out
push
jle
lds
push
mov
mov
loop
daa
mov
push
pop
(bad)
mov
push
mov
add
movs
sub
add
xchg
out
je
loopne
or
imul
jbe
pop
and
push
fdiv
mov
or
mov
and
loop
add
inc
cwde
pushf
jae
ror
mov
movs
mov
pop
sub
cwde
jo
dec
or
jbe
fwait
into
js
sbb
cmps
adc
ret
ficomp
sub
stos
sbb
push
push
aad
sbb
leave
sub
test
shl
inc
rol
sub
js
sahf
sub
or
pop
mov
stc
pop
out
xor
xchg
sti
and
xchg
mov
into
and
and
xor
mov
sbb
mov
push
or
or
(bad)
in
push
data16
fiadd
pop
in
add
arpl
stc
inc
mov
jno
sar
je
jb
or
pop
leave
and
test
add
fwait
enter
mov
pop
mov
(bad)
aam
mov
add
cli
dec
jl
ins
retf
test
sub
jle
(bad)
ins
ds
push
inc
enter
xor
dec
outs
cli
ins
repnz
push
gs
data16
and
adc
icebp
cmp
fisttp
daa
aad
adc
ins
std
scas
dec
fsubr
movs
push
dec
add
inc
inc
mov
add
jmp
cmps
or
leave
mov
retf
test
or
push
pop
mov
ss
int3
outs
inc
mov
out
dec
jmp
(bad)
pusha
iret
out
gs
scas
adc
iret
mov
sbb
neg
mov
scas
mov
add
mov
push
cld
idiv
(bad)
cmove
push
leave
nop
push
cmps
aad
fisttp
scas
mov
lahf
shl
pop
jbe
cmp
push
jns
push
imul
clc
dec
(bad)
in
sub
mov
adc
ins
loopne
aaa
jmp
retf
cmc
push
cmp
pop
and
or
jl
outs
into
stc
test
fs
sub
jnp
jnp
sar
pushf
cs
sbb
bound
mov
add
ins
imul
(bad)
outs
lahf
(bad)
shl
arpl
sbb
cmps
(bad)
jns
push
push
iret
test
or
sbb
dec
jle
call
leave
jne
ds
cmp
sub
in
fwait
(bad)
jecxz
loopne
ret
mov
je
nop
dec
mov
ret
and
shl
mov
fmul
cdq
jl
daa
and
ja
mov
adc
repz
fnstsw
adc
adc
cmc
mov
or
push
mov
mov
cmp
dec
mov
adc
or
pop
pop
and
push
cwde
ror
out
fmul
pop
push
and
mov
(bad)
icebp
pushf
aaa
mov
push
daa
and
in
(bad)
lock
cmp
(bad)
sub
add
ret
xchg
xchg
dec
push
mov
cmp
outs
cmp
bound
(bad)
mov
mov
or
add
stos
aad
jnp
je
clc
xchg
fild
add
pop
rcl
into
xor
pop
add
push
mov
pop
cmp
inc
lahf
cwde
aas
cmps
dec
(bad)
mov
mov
dec
stos
test
lods
or
and
pushf
fst
jmp
xor
add
pop
iret
push
dec
sbb
aam
mov
sar
adc
cdq
mov
movs
push
mov
aam
out
pop
jge
loope
stos
push
stc
lahf
cmp
retf
sbb
mov
add
aas
into
rcl
xor
mov
lea
ins
(bad)
aas
jo
vpmacswd
in
into
inc
nop
mul
or
jl
adc
add
test
fimul
push
mov
hlt
adc
cld
imul
push
ret
idiv
or
jno
adc
and
jp
sbb
jle
sub
jo
jns
aas
jmp
loope
sahf
cdq
inc
push
fsub
enter
sub
sub
(bad)
pop
xor
jl
add
shr
xchg
test
retf
push
gs
jge
popf
bound
clc
stc
out
fst
stos
repnz
out
mov
imul
stos
int3
mov
dec
push
out
icebp
add
cdq
cwde
dec
std
pop
aaa
aam
(bad)
fstp
test
mov
jno
out
stc
icebp
ret
jo
mov
mov
pop
xchg
ins
xchg
dec
mov
clc
xchg
mov
sub
leave
dec
push
mov
dec
pop
popf
das
jae
packssdw
nop
adc
rcpps
rdtsc
mov
cs
mov
faddp
jmp
aas
cli
push
les
adc
inc
mov
test
cmp
adc
xchg
pop
sbb
sub
sti
popa
sub
aam
mov
ds
jbe
in
cmp
(bad)
je
push
jno
xor
xchg
rcr
mov
push
popa
icebp
xchg
push
repz
and
or
inc
mov
push
push
in
sbb
in
sub
(bad)
fstp
jecxz
dec
lock
cwde
mov
inc
lods
loopne
sbb
adc
mov
inc
cmp
test
sbb
retf
jns
xchg
sbb
nop
lock
ins
adc
push
cmp
imul
jg
dec
sub
or
inc
(bad)
fwait
stc
(bad)
out
mov
xchg
inc
bnd
test
retw
(bad)
jno
ins
add
mov
cmp
xor
jns
fld
lods
sar
jmp
mov
mov
movs
popf
call
inc
pusha
repnz
jbe
mov
xchg
pop
pop
shl
loopne
adc
mov
mov
mov
or
mov
xor
push
mov
outs
call
xchg
pop
mov
sub
loope
mov
inc
push
cli
std
push
out
loop
xchg
pop
push
pop
fstp
retf
cmc
pop
inc
les
les
call
jbe
mov
add
jbe
cmp
or
mov
retf
out
mov
fdivr
and
call
cmps
dec
fdivr
jecxz
mov
xchg
lea
xchg
xor
mov
mov
loop
aas
pop
retf
dec
jg
add
movs
dec
mov
outs
pop
int
icebp
sbb
pop
std
into
repz
push
adc
test
sub
aas
stc
call
cmp
and
sub
(bad)
jmp
mov
sub
(bad)
test
bound
sbb
xchg
cmp
arpl
sbb
les
dec
aas
xor
fadd
mov
adc
enter
daa
xchg
inc
or
dec
jmp
or
inc
cld
es
push
lods
cmc
push
xchg
pusha
xor
mov
mov
lock
sbb
push
xchg
cmps
mov
ret
fidivr
iret
pusha
loop
pop
xchg
test
pop
cmps
xor
lods
jmp
shl
(bad)
jmp
out
lods
mov
mov
and
in
into
loop
imul
(bad)
jmp
sub
loope
and
mov
xor
nop
mov
fnstcw
cmps
movs
mov
xor
inc
mov
pop
push
mov
ret
and
jae
push
xchg
dec
sbb
pop
daa
pop
cmp
or
in
cmp
das
aam
popf
(bad)
xor
cld
sbb
mov
jge
pop
mov
pop
out
out
arpl
lock
aas
or
xor
and
xchg
gs
add
sub
out
in
sti
pushf
test
or
mov
fist
and
mov
jmp
xor
ins
pop
xor
idiv
ja
pop
mov
hlt
sbb
add
sbb
rcl
ds
popa
hlt
int
test
stos
inc
push
scas
mov
fucom
mov
adc
add
sbb
mov
sub
outs
sub
jnp
cmp
lock
cmp
sub
loopne
xchg
aam
mov
mov
in
fisttp
iret
cs
stc
inc
scas
lds
cmp
pop
je
ror
inc
push
adc
inc
jge
cmp
in
pop
push
cmp
aam
mov
outs
aad
call
push
icebp
cmp
xor
leave
test
lea
sahf
push
or
movs
add
pop
outs
sti
lds
xor
ficom
(bad)
push
not
or
rol
xchg
and
(bad)
in
mov
addr16
repnz
inc
add
xchg
push
add
out
adc
jl
push
test
arpl
or
clc
fld
push
sahf
sar
aas
fnsave
mov
sahf
retf
cmp
aam
test
jmp
data16
or
popf
adc
ret
pop
div
pop
sbb
mov
sub
fst
rcl
(bad)
mov
jecxz
in
outs
jns
sbb
es
outs
inc
cld
outs
adc
mov
mov
repnz
inc
out
sub
sub
cs
mov
ins
sahf
mov
loop
out
adc
push
fidiv
pop
scas
int
or
add
push
jns
adc
and
das
dec
cs
add
jnp
push
rcr
xchg
push
cdq
das
or
xchg
jle
mov
pop
pop
shl
(bad)
loopne
xchg
add
or
test
lock
mov
pop
mov
ret
cmp
and
and
lock
sbb
ror
jmp
push
cld
mov
mov
in
xor
inc
xor
sbb
lods
mov
cmp
retf
imul
jns
je
not
cmps
mov
fmul
jno
mov
in
bound
and
jg
stc
sbb
out
mov
cmp
jle
and
inc
dec
cdq
or
push
cmp
inc
jl
xchg
daa
retf
jne
pop
sahf
daa
push
jecxz
push
ss
xchg
popa
mov
inc
loop
sbb
cmp
(bad)
dec
sbb
inc
retf
dec
ficomp
jge
aam
cmps
popf
xchg
pop
leave
hlt
pop
shl
(bad)
mov
mov
mov
test
and
mov
(bad)
cmp
push
jb
cmp
popf
and
inc
xchg
or
push
cmps
inc
fucom
inc
sub
cmps
push
pop
cmp
imul
shr
mov
adc
icebp
loop
div
jle
xchg
daa
inc
dec
pop
imul
int
mov
push
lds
mov
xchg
das
jne
lds
test
sbb
xchg
ja
das
test
mov
mov
and
test
cmp
int
sub
pop
push
push
test
sbb
pop
packsswb
mov
adc
aam
jmp
push
jo
(bad)
popa
rcl
mov
or
fwait
enter
loopne
jecxz
(bad)
aaa
imul
(bad)
and
arpl
pop
retf
inc
mov
sbb
xchg
out
fcomi
xchg
adc
in
fild
or
and
lahf
movs
jnp
iret
test
int
outs
or
gs
mov
sti
jne
add
aam
int3
repnz
mov
lods
dec
not
jne
jl
ins
cmp
inc
sbb
imul
sbb
lock
in
mov
pcmpgtb
xchg
push
pop
lds
jg
aam
inc
retf
ret
pop
addr16
pop
mov
push
xchg
cmp
rcr
xchg
lea
addps
inc
js
dec
mov
out
jmp
shl
jno
push
mov
retf
es
cmc
mov
sub
in
mov
movs
xor
lods
push
pop
mov
test
popf
and
stos
lock
in
popw
cmp
mov
loopne
cli
aas
leave
dec
mov
enter
sahf
jb
mov
sbb
mov
data16
into
push
ds
(bad)
iret
pop
xor
or
adc
cmp
call
sar
mov
imul
ret
jle
dec
dec
jae
adc
rdpmc
ret
icebp
mov
scas
mov
jp
inc
pop
lea
hlt
or
cmp
fimul
int
xchg
mov
push
pop
(bad)
mov
lods
mov
(bad)
push
jbe
shl
xor
push
push
inc
mov
fnstenv
xchg
in
fistp
jle
setbe
xor
jno
and
and
stos
cmp
jl
push
pushf
mov
xor
pop
xchg
sub
loope
in
in
or
das
out
scas
mov
idiv
adc
outs
pop
xor
push
arpl
and
xor
cdq
(bad)
addr16
inc
nop
fs
add
adc
imul
(bad)
xor
ret
mov
jnp
jp
pop
shl
jge
cli
mov
jnp
arpl
add
pop
enter
xchg
xor
add
and
xchg
iret
and
mov
lock
cmp
mov
cmps
arpl
adc
aad
xchg
inc
daa
push
in
fmul
mov
cmp
mov
aaa
cmp
cdq
or
call
pop
add
out
pop
push
test
cmp
sub
sbb
dec
enter
dec
cli
xabort
or
sahf
fild
xchg
iret
adc
movs
push
mov
popf
adc
mov
fsubp
jmp
jp
sub
xchg
sbb
or
cmp
and
(bad)
outs
lods
add
into
xchg
xchg
push
rol
stc
stos
stos
sub
adc
push
(bad)
fs
inc
lahf
xchg
jno
adc
lea
mov
push
xchg
fld
dec
movs
inc
xchg
arpl
xchg
xchg
test
adc
and
inc
push
mov
push
ins
ffree
sub
xchg
jp
loope
xchg
ret
out
xchg
push
mov
sbb
mov
ds
cmp
aas
aaa
(bad)
pop
cmp
and
push
int3
movs
add
xchg
sub
or
pushf
imul
pop
push
mov
pop
das
fcom
fcmovu
sbb
dec
jno
test
imul
ja
mov
adc
ins
imul
jmp
cmp
(bad)
jno
xchg
xchg
outs
dec
pop
inc
dec
or
mov
mov
adc
mov
sub
ins
lahf
in
stc
iret
in
fs
(bad)
cmp
sbb
sub
fnstcw
adc
rcr
jae
jge
dec
inc
aas
imul
mov
(bad)
arpl
loop
sti
ss
xchg
dec
aaa
(bad)
cmp
ins
lea
mov
inc
stos
in
xchg
mov
add
sub
jl
(bad)
pushf
es
fnsave
mov
movs
add
or
cmp
xchg
int
jns
cmp
jp
in
cli
pop
or
push
lahf
pop
mov
cmc
repz
jmp
ret
and
lahf
lea
fcomp
dec
jge
stos
dec
stc
and
stos
pop
sub
cmp
mov
addr16
fcom
enter
push
push
xor
loope
pop
int3
xchg
loope
test
les
xor
push
sub
in
fisub
adc
and
mov
inc
(bad)
inc
fstp
or
or
lahf
addr16
mov
int3
push
ror
lds
dec
mov
pop
test
cmc
popa
fs
(bad)
nop
jo
jno
push
push
movs
das
pop
cmc
mov
mov
add
les
out
inc
or
inc
dec
xor
test
pop
fsubr
cmp
mov
xor
enter
enter
in
cmp
cmp
dec
inc
ins
aaa
je
push
fadd
inc
int3
test
push
(bad)
cmps
add
push
xlat
retf
xor
push
mov
test
mov
ret
sub
sub
jecxz
out
push
sbb
or
jp
and
lea
adc
outs
leave
mov
out
or
fldcw
cmp
and
jno
int3
mov
push
mov
xlat
fisttp
add
mov
xchg
push
imul
mov
xor
dec
scas
repz
sbb
push
mov
iret
add
test
jmp
mov
psllw
test
(bad)
pop
inc
shr
xor
icebp
loopne
jae
add
retf
lods
ins
xor
and
dec
ins
data16
jnp
icebp
nop
cli
jecxz
push
mov
cmps
icebp
sub
mov
mov
sub
repnz
sar
ret
pop
ror
dec
dec
dec
icebp
or
xlat
jg
(bad)
repz
pop
outs
inc
xor
xor
imul
pop
xchg
or
sub
imul
(bad)
scas
adc
aam
adc
xor
(bad)
iret
push
je
add
adc
mov
add
sbb
stos
aaa
loopne
pop
scas
sbb
add
lods
retf
inc
in
shl
fwait
pop
mov
xchg
pusha
stc
adc
cmp
push
jle
(bad)
std
bound
and
daa
cmp
and
ret
jns
inc
sti
mov
jl
mov
mov
jmp
imul
cmc
adc
test
cmc
add
cdq
push
inc
out
mov
and
push
pop
pop
call
dec
hlt
int
cmp
bound
(bad)
jo
arpl
mov
test
sub
test
adc
jmp
bound
mov
enter
xchg
fmulp
jne
xor
outs
xor
cmc
call
inc
pop
push
das
movs
(bad)
jns
cs
pop
mov
jae
mov
sub
lock
loope
add
(bad)
int3
cmp
xor
scas
out
add
jae
jecxz
mov
js
ret
sti
or
je
bound
xchg
and
sub
xchg
sbb
cmps
cmp
jbe
fnstenv
sahf
xlat
neg
(bad)
and
ret
xor
mov
and
bound
dec
sub
push
test
sbb
sub
lds
mov
nop
cmp
rcl
addr16
inc
nop
stc
lds
es
add
jns
sbb
lods
mov
mov
add
and
mov
mov
js
pop
icebp
pop
adc
loop
mov
call
sahf
std
rol
retf
cmp
fcom
outs
cmp
es
mov
mov
xor
add
mov
pusha
push
sub
nop
push
lock
je
(bad)
bound
jp
retf
inc
inc
mov
jne
fdiv
mov
les
mul
pop
and
inc
or
(bad)
and
and
dec
mov
cmc
dec
inc
repnz
test
pop
stos
imul
mov
call
repnz
mov
test
cmp
(bad)
nop
jecxz
adc
in
in
pusha
outs
mov
movs
js
push
fbstp
pusha
sbb
stos
test
test
xchg
sbb
mov
or
cmc
xor
fldz
sbb
js
sbb
dec
loopne
dec
jecxz
pop
fs
jl
ret
shl
ins
icebp
or
sbb
mov
movs
les
pop
adc
je
div
loop
or
sub
push
mov
xor
cmps
or
sbb
jg
jl
daa
outs
mov
call
mov
inc
sbb
bound
nop
mov
inc
xor
or
outs
push
ss
cs
inc
mov
lds
or
pushf
sub
movs
scas
(bad)
(bad)
sub
lock
xchg
iret
jmp
add
add
xor
js
xchg
shl
or
hlt
mov
xlat
imul
ss
xchg
mov
shl
sbb
push
movs
loope
lock
idiv
dec
jmp
sbb
or
xchg
sub
rol
jne
not
out
pop
or
das
mov
dec
sahf
(bad)
sahf
outs
pop
dec
push
mov
aaa
neg
ss
loope
dec
ins
sbb
call
cdq
and
test
icebp
fldenv
pop
pop
cwde
jno
and
dec
xlat
adc
aam
adc
lods
or
and
imul
out
or
mov
dec
test
out
arpl
ret
and
jb
xchg
gs
pop
jl
cs
sbb
test
inc
xchg
out
ret
neg
mov
sub
(bad)
pop
push
cmps
mov
bound
or
mov
sti
int3
mov
jp
(bad)
not
mov
inc
and
mov
sti
jmp
pop
test
clc
clc
xchg
mov
int3
adc
mov
jo
popf
inc
push
pop
icebp
cmp
rcl
sub
push
out
das
or
mov
not
stos
add
mov
cmp
add
pop
cld
dec
xor
or
imul
adc
mov
js
fs
(bad)
int
or
mov
nop
adc
ds
clc
sbb
cli
and
sbb
mov
fdivrp
cmp
mov
sub
aam
arpl
jno
ror
mov
mov
stos
and
add
or
mul
call
mov
in
icebp
add
daa
out
outs
test
cmc
pop
test
js
mov
pusha
jbe
xchg
push
mov
inc
mov
inc
add
xchg
mov
add
mov
bound
outs
test
test
mov
ret
inc
(bad)
inc
clc
xor
fwait
mov
mov
and
cli
outs
mov
cbw
mov
xchg
ja
dec
lock
pop
sbb
les
xchg
or
and
add
inc
test
lea
inc
sub
jns
xchg
cmps
cs
ret
call
and
fidiv
dec
cld
add
sahf
dec
mov
shl
mov
or
lods
mov
inc
mov
lods
test
in
imul
adc
mov
and
imul
in
mov
xchg
mov
xchg
in
pusha
(bad)
mov
popf
inc
and
sub
adc
xor
jecxz
push
hlt
out
push
sub
test
loope
pop
loop
cs
fwait
sti
push
aad
push
(bad)
cdq
stc
mov
xchg
or
or
pop
pop
loopne
cmp
(bad)
out
xchg
mov
sbb
cwde
imul
xor
inc
ja
mov
push
test
data16
or
sahf
adc
popf
lods
inc
mov
cmp
jmp
xchg
fcmovnu
add
ret
adc
hlt
dec
test
ror
sub
jle
xchg
ret
repnz
jge
cs
movs
adc
shl
mov
jmp
push
push
into
pop
jne
enter
iret
mov
mov
xor
push
outs
daa
jmp
push
adc
addr16
dec
outs
sub
sub
stos
call
and
jmp
jnp
xor
stos
mov
jle
add
outs
pop
mov
mov
clc
iret
shr
imul
int3
mov
jle
mov
xchg
fmul
mov
out
push
into
fisttp
ins
(bad)
pop
es
subps
mov
or
xor
(bad)
ret
rcl
aam
shr
pop
jmp
enter
pop
ins
das
mov
mov
mov
aaa
js
inc
fld
in
add
cmp
cli
and
in
xor
cld
push
scas
jbe
sahf
mov
daa
xchg
sbb
fisubr
pushf
jmp
push
popa
mov
xchg
pop
xor
pop
sti
cmp
(bad)
lods
sbb
fisttp
stos
push
je
pop
mov
mov
sbb
jae
jl
jl
retf
pop
mov
inc
iret
fistp
lock
jge
mov
and
add
scas
int3
jae
(bad)
or
aaa
sbb
cmc
pop
mov
or
(bad)
or
xor
xor
ja
lods
nop
xchg
push
or
or
mov
and
xor
and
daa
add
in
mov
sub
cmp
test
scas
ror
scas
sub
in
mov
sbb
dec
fistp
adc
jge
in
inc
xchg
push
repnz
int3
lods
xchg
xor
or
jg
mov
xor
fisttp
outs
push
pop
mov
cdq
mov
fistp
mov
adc
hlt
daa
and
std
push
ss
in
in
mov
mov
sbb
xchg
xchg
xchg
mov
add
pop
aam
mov
(bad)
jl
jnp
xor
sub
int
rcr
mov
loop
mov
rcl
mov
lods
repnz
fadd
jge
pop
pop
mov
and
fnstenv
mov
fisttp
mov
or
into
dec
sub
cmc
mov
xchg
jge
xchg
add
popf
fld
jmp
pusha
xchg
and
cdq
cmpxchg
int
sub
inc
dec
mov
cmp
jno
dec
mov
and
pop
lahf
arpl
js
scas
icebp
ror
(bad)
ja
jnp
inc
iret
(bad)
push
pop
mov
pop
outs
jbe
jae
dec
popa
popa
js
aam
ss
adc
fist
iret
and
mov
and
inc
test
outs
sub
shr
add
mov
sbb
mov
pop
mov
sub
xchg
enter
add
add
mov
call
cmp
fldcw
addr16
dec
pop
push
ja
and
movs
sahf
mul
addr16
loopne
cmp
mov
jmp
mov
mov
outs
iret
bound
out
xchg
in
pop
mov
mov
jno
sahf
in
or
repnz
jae
loop
shl
push
pop
sbb
(bad)
mov
bound
adc
stos
(bad)
(bad)
mov
in
or
daa
xchg
bound
js
jne
jle
dec
int
inc
lea
pop
repnz
pop
ds
fst
jmp
rcl
jl
or
mov
rcl
dec
je
jb
and
jge
adc
inc
imul
popa
ds
movs
daa
clc
mov
fst
cli
adc
or
xchg
jae
inc
xor
mul
in
sub
shr
xchg
fcom
sub
inc
push
(bad)
popf
pop
inc
add
int
xchg
adc
pusha
fwait
push
push
jp
sti
pusha
inc
cmc
sti
stc
enter
cmc
arpl
(bad)
sub
icebp
sub
sti
mov
icebp
push
mov
mov
rcl
pop
inc
and
inc
nop
in
shl
and
outs
imul
or
push
cdq
xor
out
jae
lods
xchg
or
mov
jnp
adc
mov
les
fs
lods
lea
lds
add
dec
pop
or
jmp
aad
add
fwait
mov
test
adc
fcmovu
in
rcr
mov
xchg
in
sbb
popf
push
lods
(bad)
and
adc
movs
data16
mov
ins
or
push
mov
hlt
sub
xchg
mov
popf
pop
mov
xchg
sar
pop
mov
nop
frstor
stos
stos
mov
stos
into
push
stc
pop
sub
push
push
push
add
and
int
sub
xchg
ins
or
in
aas
or
adc
nop
mov
xor
sub
sahf
xor
jmp
adc
lock
minps
jb
jbe
mov
ror
test
rcr
aas
popf
push
loopne
jmp
add
ins
loope
or
mov
add
ret
retf
ds
out
clc
(bad)
jo
mov
mov
imul
cmp
push
sub
out
dec
mov
pushf
in
pop
repz
stos
in
(bad)
cmp
lock
call
xchg
cmp
outs
cmp
int
mov
inc
jb
cmp
aaa
xchg
sahf
div
or
(bad)
push
pop
and
les
in
(bad)
ins
loopne
out
dec
adc
dec
xchg
jno
xlat
sbb
push
xor
jl
(bad)
sub
pop
xor
in
mov
pop
fs
xchg
loope
and
xchg
fcmove
sub
pop
sub
jmp
mov
cmp
dec
fistp
sahf
add
in
rol
pop
aaa
pushf
mov
dec
push
(bad)
rcl
pop
push
dec
xchg
inc
cmp
cmp
and
sub
push
inc
add
lds
lahf
pop
dec
and
adc
dec
mov
ss
popf
aad
loop
mov
repnz
dec
cwde
sub
test
sub
pop
movs
and
fisub
mov
ret
ror
mov
icebp
and
arpl
les
popa
ja
inc
cmp
add
pop
cmp
rol
inc
cmp
xchg
in
or
cmps
and
fdiv
cs
adc
fbstp
pop
(bad)
shl
dec
xor
mov
test
xor
push
ret
push
stos
ret
mov
ss
cmp
mov
xor
addr16
xor
and
fdivr
rcl
push
mov
retf
or
loopne
inc
test
mov
and
fisttp
mov
out
outs
fwait
mov
fiadd
adc
add
jno
mov
scas
loopne
xchg
xor
adc
lods
push
sti
les
mov
popa
push
repz
jge
out
and
xchg
xor
jb
pop
arpl
jg
pop
mov
sub
mov
jecxz
js
out
xchg
jbe
(bad)
xor
loop
xchg
loope
leave
mov
sbb
dec
fs
test
dec
enter
mov
fistp
mov
pop
test
bswap
sahf
loope
sbb
call
fwait
and
cld
arpl
lods
mov
add
xlat
inc
repnz
add
sub
mov
or
jle
neg
cmp
xchg
lahf
jmp
inc
xchg
test
xchg
and
adc
(bad)
mov
mov
fiadd
mov
cmc
pop
das
movs
test
shl
pop
pop
mov
out
xchg
push
sub
and
xor
xor
test
add
shl
and
mov
mov
(bad)
mov
fmul
cmp
jmp
cmp
add
sub
pop
lds
rol
pop
dec
ja
in
fcom
xchg
or
gs
inc
push
mov
adc
ror
adc
pop
jmp
ds
mov
std
or
push
lahf
(bad)
lods
popf
xchg
cmp
xchg
and
stos
or
stos
xchg
test
dec
sahf
out
retf
dec
jge
cli
cmp
mov
and
mov
sub
mov
mov
and
xor
test
clc
xor
cmp
jmp
popf
jge
call
shl
rcr
dec
daa
outs
dec
in
pop
jae
inc
daa
add
xor
in
inc
icebp
fcom
lods
fnstenv
call
and
outs
add
ins
adc
sub
jnp
in
pusha
(bad)
adc
mov
je
mov
pop
mov
aam
push
xchg
ss
stos
cwde
mov
sub
cdq
jnp
aam
inc
les
xor
pop
dec
movs
dec
sahf
rcr
fiadd
fidiv
pop
jne
test
xor
jno
mov
pop
test
mov
ins
in
pop
mov
jmp
in
int3
pop
(bad)
enter
mov
in
loopne
lods
repz
shl
pop
push
add
fabs
mov
fwait
or
adc
mov
fcomp
mov
xchg
and
test
int3
sar
loopne
(bad)
dec
mov
inc
adc
cld
enter
out
add
cmp
(bad)
pop
xchg
es
in
jecxz
sbb
sbb
sbb
prefetcht0
int3
stos
cwde
(bad)
(bad)
stc
pop
inc
es
inc
pop
js
daa
adc
cld
mov
sbb
scas
fs
or
add
in
cli
cmp
or
cmps
inc
shl
jnp
fld
shl
(bad)
cmps
in
pop
pop
pushf
pop
mov
mov
push
int3
push
stos
fcomip
cmp
mov
jl
sbb
movs
push
dec
push
dec
imul
push
sub
sbb
xor
sbb
popa
push
fidiv
mov
push
test
inc
in
es
jge
pusha
je
inc
retf
push
push
ins
inc
fcmovbe
mov
retf
test
jnp
adc
or
or
jb
mov
adc
sbb
mov
loopne
pop
mov
push
(bad)
lea
ror
shr
iret
leave
dec
sbb
repnz
push
sub
inc
(bad)
in
jmp
aam
inc
inc
(bad)
out
mov
fcmovu
mov
movs
and
cmc
pop
xor
push
sub
mov
xchg
popa
jl
out
jae
cld
stc
sti
movs
retf
lds
std
and
scas
add
mov
push
imul
(bad)
les
lods
pop
pop
enter
jecxz
js
mov
inc
sbb
ss
or
cmp
jno
arpl
repnz
inc
pop
addr16
jb
inc
mov
push
hlt
out
fwait
popf
push
je
outs
fwait
inc
push
xchg
xchg
inc
cmc
ret
std
adc
mov
jp
mov
fnsave
push
dec
mov
daa
sub
sar
sbb
retf
mov
loope
xchg
repnz
push
mov
ins
aad
cmp
test
stos
in
mov
sti
mov
mov
mov
mov
mov
dec
enter
cld
in
mov
mov
sub
jno
sbb
pop
adc
dec
cmc
jns
das
add
pusha
and
stos
pop
fst
jns
xor
and
add
and
test
in
mov
mov
ds
add
or
cmp
jp
mov
stos
lods
push
mov
fild
test
xchg
call
jno
not
sub
aaa
inc
aad
popf
jmp
pop
out
sub
and
and
mov
xchg
and
xor
dec
shr
xchg
xchg
pop
fs
xchg
bnd
push
jmp
push
cmps
cmps
lea
lods
add
and
cmc
sub
push
and
push
and
or
xor
shl
mov
stos
sbb
push
mov
icebp
iret
int
sahf
inc
sbb
xor
aad
dec
cmp
fadd
add
adc
push
sahf
lods
add
adc
push
add
jno
idiv
fadd
lea
cmp
mov
mov
sti
popf
xchg
cmp
fimul
les
add
stos
adc
mov
add
lock
adc
in
push
jmp
jle
fild
(bad)
out
retf
icebp
cmp
lea
loopne
xchg
pop
mov
dec
cmp
in
mov
jecxz
inc
xor
test
clc
sahf
les
pop
and
call
iret
adc
xor
jns
sar
dec
or
retf
mov
mov
push
jbe
add
loope
push
ds
or
(bad)
cmp
std
mov
push
pop
or
js
inc
inc
hlt
jno
loope
cmc
or
stos
mov
sbb
jmp
cmp
and
sub
sar
enter
sahf
wbinvd
add
adc
movs
inc
imul
stos
gs
or
xchg
cmp
adc
sub
repnz
pop
xchg
cdq
call
imul
js
pop
xchg
lds
(bad)
and
outs
mov
fnsave
fmul
sub
daa
dec
sub
ror
test
sub
ins
data16
sub
repnz
dec
sbb
pop
gs
les
enter
sub
popf
lahf
jmp
inc
or
inc
stc
bound
mul
cmp
sub
loop
test
ror
add
popf
das
das
cs
cmps
dec
xor
mov
cmp
scas
xchg
jae
test
push
xor
inc
mov
aaa
int
jge
cs
push
enter
sub
int3
mov
sbb
pop
in
stos
(bad)
sbb
(bad)
stc
push
mov
pop
adc
add
lods
cs
fcom
xchg
and
xor
pop
mov
push
jno
xlat
repnz
pop
bnd
cli
rol
(bad)
ds
pusha
inc
test
adc
jp
out
push
inc
xor
dec
and
jge
mov
scas
or
out
mov
in
push
xor
inc
ins
adc
ins
shl
stc
lock
or
cmp
ficom
ins
adc
mov
int
xchg
dec
lahf
mov
ret
push
mov
fisttp
pop
add
mov
(bad)
push
pop
mov
sbb
add
pop
sbb
mov
adc
adc
mov
pop
ror
jne
sub
cmp
mov
mov
mul
lds
fisubr
rcl
gs
stos
sbb
cmp
mov
xor
pop
sub
je
jmp
rol
sbb
cwde
xchg
mov
and
aam
sbb
test
in
jnp
test
jp
fld
neg
test
rcl
fistp
nop
cmp
rol
popa
and
daa
or
xchg
fidivr
pop
enter
push
ja
pop
xchg
popf
ja
xchg
mov
sub
cmc
pushf
fidivr
mov
add
mov
loopne
scas
popf
sbb
(bad)
inc
pop
xor
mov
cmc
mov
dec
jae
and
mov
enter
xchg
mov
mov
scas
cmps
in
out
push
cmp
ja
cli
out
aas
jg
add
and
int
jecxz
inc
cmp
or
push
enter
dec
push
icebp
mov
loop
ins
call
inc
sti
ret
sub
and
cmp
call
je
dec
jmp
pop
push
jb
or
test
push
stc
and
pop
enter
cli
mov
fstp
jmp
std
cmp
add
pop
enter
fnstenv
cmp
loope
push
std
mov
cs
adc
iret
lea
mov
and
jmp
jp
fwait
aad
std
rcr
loopne
loopne
pop
sbb
pop
xchg
js
inc
rcr
xor
pop
test
xchg
mov
dec
call
pusha
repnz
adc
sti
int
mov
xchg
int3
fwait
cmps
mov
not
outs
fld
sbb
cmps
ret
push
dec
adc
mov
pop
int
scas
pop
sub
xchg
cmps
sub
arpl
jns
ins
adc
daa
or
shl
sar
sahf
(bad)
or
stos
inc
into
pop
(bad)
shr
or
mov
neg
in
xor
cmc
daa
dec
pop
and
jp
pop
call
call
and
push
inc
adc
ret
mov
pop
sbb
(bad)
outs
lock
dec
int
jo
add
daa
sahf
xor
shl
xlat
data16
jmp
mov
push
mov
inc
xchg
push
jne
(bad)
lods
daa
test
pop
js
enter
imul
sbb
mov
and
mov
mov
adc
mov
mov
mov
shl
ss
mov
dec
or
adc
inc
stos
adc
mov
pop
cmp
sub
cmp
push
xor
mov
into
cdq
(bad)
cdq
fwait
push
inc
jbe
push
pop
mov
pop
popf
fadd
inc
mov
cld
fld
ins
xchg
pop
dec
push
dec
(bad)
push
inc
aam
test
mov
dec
dec
(bad)
mov
dec
cmc
jae
ss
or
and
daa
mov
cwde
sub
or
fimul
push
push
std
ins
cmp
pop
mov
ret
xchg
pop
push
jmp
sbb
jle
dec
pop
and
out
(bad)
shl
push
mov
fwait
sub
push
pop
aam
mov
jmp
shl
add
xchg
push
cmp
inc
jne
xchg
shr
int
fnstsw
out
ins
mov
mov
fidivr
fdivp
jb
jecxz
add
push
sti
push
dec
stos
push
push
pushf
in
in
cmp
cmp
dec
adc
push
push
popa
jb
pusha
and
rcl
adc
inc
loop
lock
or
ins
push
in
adc
mov
inc
retf
loop
lea
mov
stos
adc
out
movs
and
movs
cmps
lods
dec
outs
arpl
and
sub
mov
mov
test
not
pushf
pop
pop
scas
aad
ror
popa
int
movs
(bad)
jbe
pop
push
xlat
xchg
jbe
push
out
je
push
lea
mov
loop
and
aad
mov
push
push
cmp
inc
(bad)
jno
cdq
dec
inc
push
sbb
test
ror
test
mov
in
leave
mov
inc
pop
int3
loope
cmc
int
xor
xor
sbb
test
sub
sub
call
jbe
push
add
push
arpl
xchg
popf
sub
aad
cmp
repz
sub
and
ds
xlat
inc
sbb
gs
imul
and
or
(bad)
popa
(bad)
xchg
fcomp
ins
jp
bound
and
inc
in
clc
push
hlt
sti
jg
or
aam
dec
fdivr
movs
or
(bad)
mov
lock
mov
add
mov
push
std
cmp
sbb
pushf
int
ret
cmp
mov
mov
mov
inc
jb
imul
call
(bad)
xor
dec
inc
sub
imul
dec
gs
out
push
rol
fidiv
mov
jl
cmps
push
ja
inc
adc
sbb
ins
leave
mov
push
cmp
ret
or
xor
dec
jo
add
jnp
jmp
cmp
pop
pop
sbb
popf
iret
xchg
cdq
fldcw
and
std
jb
ret
dec
inc
push
fwait
sbb
xor
dec
push
popa
jg
and
push
mov
jl
call
and
pop
mov
add
jmp
xor
repz
add
inc
das
adc
stos
mov
jb
push
cmp
mov
pop
bswap
pop
push
rol
rcl
outs
mov
pusha
dec
cmp
mov
cwde
movs
shl
sbb
pop
inc
test
adc
add
inc
push
call
jle
in
jg
addr16
adc
mov
pop
out
sbb
push
test
xchg
pop
sbb
push
cmp
aam
loope
pop
pop
retf
js
push
and
mov
mov
push
mov
aad
cmp
repz
iret
jno
movs
jecxz
inc
xor
jne
fimul
cwde
xchg
aad
sbb
retf
mov
fucomip
sbb
fsubr
fisubr
jecxz
adc
mov
xor
fsub
push
lods
push
dec
adc
outs
xchg
movs
pop
xchg
pusha
gs
and
in
or
aam
call
xchg
and
push
(bad)
ins
cdq
popf
mov
(bad)
xchg
ins
and
xor
mov
push
add
jg
inc
xor
inc
int
sub
scas
push
xchg
sub
inc
mov
xchg
cdq
les
inc
mov
jns
scas
mov
ret
movs
xchg
cmps
in
scas
mov
add
fadd
push
add
pop
push
arpl
retf
xchg
xchg
outs
jmp
inc
and
jle
mov
dec
call
mov
cmp
inc
jno
test
(bad)
or
sti
popa
lock
or
cwde
fsubr
or
call
sbb
out
iret
mov
es
cmp
xchg
retf
ficom
xor
mov
test
inc
je
pop
repnz
in
and
push
ins
jl
aam
hlt
iret
nop
ss
xlat
pop
test
jae
cli
mov
add
adc
xor
test
mov
or
push
mov
mov
push
(bad)
cmps
add
cmp
inc
aas
jg
cmps
and
inc
mov
fimul
mov
(bad)
jne
jnp
cmp
xlat
jg
rol
fiadd
test
cld
(bad)
icebp
loop
in
push
and
ins
push
out
ins
push
cwde
js
jb
adc
dec
cli
dec
setne
call
clc
gs
cmp
pop
pop
dec
or
inc
dec
jo
or
popa
dec
int3
loopne
dec
repnz
sahf
xchg
cmp
jecxz
mov
pop
lods
pop
pop
and
xor
xor
call
popfw
mov
test
and
test
xchg
push
mov
fst
adc
add
add
repnz
enter
and
shr
ins
cmps
repnz
dec
ret
call
pop
pop
test
fnstcw
js
aaa
push
pop
adc
das
stos
jge
sbb
push
je
cmp
or
and
dec
lahf
rcr
xchg
sub
mov
fucom
loop
movs
and
pop
ds
or
mov
das
add
cs
adc
mov
jmp
leave
pop
ins
and
mov
sub
call
inc
push
pop
dec
and
fcomip
imul
cwde
je
(bad)
stos
pop
xchg
sahf
jle
daa
xor
adc
ss
dec
mov
fild
xlat
call
mov
jo
sbb
sub
fcom
cmp
fwait
test
jge
stos
mov
mov
xchg
jae
cld
sub
sbb
jp
cmp
jecxz
ds
comiss
sub
pop
mov
popa
xchg
add
pop
stos
push
je
or
and
jge
pop
lmsw
ins
sub
ins
sahf
or
sbb
mov
dec
mov
pop
cmps
xor
sahf
add
inc
cwde
sti
push
fisttp
cld
xlat
push
inc
mov
mov
mov
mov
sbb
call
mov
(bad)
leave
dec
jns
adc
cli
aam
inc
push
inc
enter
xchg
cs
pop
(bad)
and
inc
movs
adc
sub
pushf
xchg
sti
xor
pushf
ret
fisttp
cli
out
outs
iret
jne
push
retf
or
push
loopne
movs
movd
jo
in
or
and
mov
popf
jnp
sbb
cld
and
xlat
daa
mov
clc
(bad)
xchg
cmp
aam
rcr
fwait
es
fidivr
enter
inc
pop
outs
cmp
aas
lea
and
iret
dec
in
cmp
dec
xchg
adc
jae
mov
imul
out
ins
dec
fistp
cwde
push
pop
mov
jbe
out
inc
(bad)
cmp
jb
jmp
and
push
mov
mov
jl
jae
xlat
sbb
sub
lea
sub
sbb
pop
neg
and
mov
nop
pop
in
and
cmc
jnp
loope
dec
out
mov
inc
inc
daa
xor
lods
loope
sub
xchg
cwde
jge
or
xchg
pop
mov
imul
inc
push
pop
jle
inc
push
lahf
out
xor
out
cmps
sbb
adc
or
pop
or
inc
popa
ins
xor
xor
cdq
or
mov
mov
xor
js
mov
imul
jns
pop
or
and
jp
frstor
xor
js
stos
mov
ret
imul
imul
icebp
in
and
jle
cmc
idiv
jno
jo
pop
cmc
and
xchg
ds
movs
sub
lahf
pop
das
aaa
push
xchg
(bad)
mov
xchg
cmp
inc
mov
cdq
iret
mov
push
out
in
jmp
pusha
adc
sbb
ret
repnz
aam
stc
xchg
mov
test
add
aad
sub
cmps
dec
and
call
in
pusha
pop
xlat
cmp
lods
cmp
mov
fldenv
dec
shr
sub
dec
mov
jne
addr16
aaa
cmp
mov
inc
pop
rcl
push
mov
mov
ret
jmp
stos
pop
call
lods
in
xor
xchg
test
cdq
and
and
mov
mov
test
das
rol
test
cmp
mov
jb
jp
xor
fst
cmps
jmp
es
lahf
ret
pop
out
xor
xor
sub
mov
test
icebp
push
push
jmp
arpl
popf
cmp
aaa
sar
(bad)
lock
sbb
jae
dec
sub
call
loope
push
xchg
rep
jb
pop
mov
jae
sub
dec
jnp
ror
dec
test
mov
dec
sbb
shr
xchg
jbe
das
and
call
mov
pop
mov
jnp
popf
and
in
and
mov
ret
daa
fst
je
adc
shl
or
adc
xchg
fcmovu
test
pusha
inc
ja
sbb
not
sbb
adc
shl
jnp
mov
out
xchg
rol
add
jo
outs
test
mov
sub
xor
pop
inc
inc
int3
es
(bad)
mov
int3
out
adc
cmps
iret
dec
mov
inc
mov
sbb
int
adc
cmp
sub
imul
iret
fsubrp
and
in
leave
push
lds
outs
inc
and
rcl
iret
in
ret
rol
int
jno
add
adc
push
jge
hlt
(bad)
call
cmps
lds
fcom
aaa
pop
push
mov
mov
xor
js
movs
pop
jg
data16
aam
and
call
pop
add
repz
gs
add
sti
inc
cmc
jae
push
add
and
dec
idiv
(bad)
xor
call
pop
ins
sub
sahf
outs
div
pop
(bad)
cdq
fcom
and
add
daa
mov
mov
pop
sbb
pop
mov
(bad)
xchg
jmp
xor
dec
mov
daa
jae
inc
ja
jno
dec
out
xchg
test
dec
test
test
jl
pop
pop
mov
test
stc
push
inc
xchg
adc
xchg
adc
or
adc
ins
sbb
or
dec
mov
cld
stos
nop
push
push
mov
hlt
add
xchg
inc
sub
xor
test
jae
or
cmp
lds
enter
cmp
inc
mov
sbb
jae
or
or
xchg
xor
and
cmp
push
mov
pop
pop
and
add
adc
es
inc
clc
mov
scas
loope
dec
daa
test
mov
outs
in
xchg
xor
std
dec
sahf
pop
sub
stos
and
and
aad
aad
(bad)
dec
add
push
push
jo
dec
mov
arpl
fmul
pop
inc
int3
xchg
mov
pop
repz
pusha
hlt
ds
out
push
cmp
enter
sbb
ss
add
pop
mov
push
das
mov
retf
pop
cmp
scas
inc
lock
xchg
cmp
fnsave
mov
pop
sub
sar
das
adc
scas
inc
lea
fnstenv
xor
mov
xor
cmps
out
cmp
out
gs
or
movs
in
rcl
lods
daa
cmp
aam
arpl
xor
push
mov
jmp
push
dec
mov
jne
arpl
mov
jnp
adc
mov
dec
push
add
out
dec
sub
mov
adc
xor
dec
mov
push
stc
pop
jl
pop
stos
add
push
adc
and
pop
adc
push
inc
stc
sub
jns
cld
add
adc
cli
mov
push
arpl
mov
cmps
fnsave
push
pusha
test
sbb
dec
outs
lea
retf
fld
jb
retf
mov
sbb
lea
rol
mov
push
stos
push
aaa
and
daa
dec
adc
fnstenv
inc
gs
in
sub
cmp
imul
mov
mov
js
fisubr
sub
push
jp
pop
or
push
inc
aam
repnz
pop
ret
lods
add
nop
mov
call
dec
ins
mov
mov
sahf
push
mov
mov
pop
push
sub
dec
sub
dec
out
sahf
pop
add
push
or
shr
jmp
cli
and
push
add
iret
lea
sub
jae
ds
add
dec
in
mov
xchg
adc
jae
xchg
dec
cmp
adc
push
xor
popa
lock
out
loope
xor
ds
xlat
inc
jl
adc
pop
(bad)
shl
mov
jbe
cwde
fisubr
imul
sahf
leave
lds
iret
mov
mov
or
sbb
outs
inc
push
clc
retf
push
cli
adc
or
mov
cmp
adc
xchg
mov
rol
movs
cdq
pop
es
mov
push
mov
adc
or
adc
mov
push
xor
sbb
pop
(bad)
repnz
jns
dec
arpl
xchg
cmp
cdq
aad
sbb
push
sbb
and
push
jo
xor
pop
ins
pop
sahf
mov
push
mov
std
mov
ja
push
adc
cwde
jb
ins
mov
mov
faddp
daa
out
mov
aaa
xor
push
loop
cmp
cmp
cmc
dec
pop
dec
movs
sub
loop
add
mov
shl
cmp
sbb
mov
xchg
jg
dec
div
hlt
sub
add
and
fcos
cmp
jecxz
outs
mov
and
das
xor
mov
push
adc
cmps
lahf
stc
dec
(bad)
scas
xchg
pop
inc
xchg
and
outs
inc
jmp
cmps
adc
lds
mov
lods
push
cld
and
sbb
mov
cmp
xlat
popf
mov
and
push
jge
shl
xor
(bad)
pop
(bad)
std
arpl
mov
aad
dec
out
sbb
jle
call
or
ficomp
cmps
pop
jmp
push
mov
mov
pop
test
mov
popf
add
mov
adc
jp
mov
cmc
(bad)
fadd
mov
xchg
retf
jecxz
hlt
jg
push
popa
into
mov
pop
int3
fist
sbb
jmp
xlat
mov
push
int
cmp
(bad)
ss
xlat
mov
test
adc
push
adc
arpl
daa
test
and
and
pop
rcr
xchg
mov
lea
push
mov
push
scas
cmp
add
ss
nop
jns
fstp
(bad)
out
inc
or
add
popf
arpl
sub
rol
mov
out
xor
push
adc
adc
jl
cmp
add
xchg
xor
inc
jle
dec
pop
movs
stos
inc
icebp
add
pusha
xchg
data16
adc
jmp
pop
repz
fild
rol
lahf
sahf
sub
popa
nop
jno
xlat
mov
fimul
fsubr
ja
mov
xchg
jno
std
lock
mov
ds
imul
ror
dec
je
jl
dec
xor
sub
inc
adc
lahf
sub
enter
sbb
and
aaa
add
int
adc
mov
push
jne
hlt
mov
lods
dec
setl
xor
add
cwde
aaa
aam
shl
test
dec
xchg
sbb
sti
pushf
cmp
je
mov
mov
pop
cld
mov
stc
mov
lds
jle
movs
inc
dec
in
std
test
sbb
or
inc
sub
lahf
adc
out
xchg
es
sbb
inc
aad
test
call
scas
ret
jb
rcl
rcr
iret
mov
pop
repnz
aaa
push
jle
mov
inc
and
dec
enter
pushf
fpatan
sbb
xchg
cmp
mov
jp
pusha
push
add
fst
mov
idiv
shr
pop
clc
mov
mov
lock
sbb
mov
sbb
push
and
push
mov
push
into
pop
fldl2e
push
stc
shr
ror
mov
pop
dec
cmp
scas
(bad)
outs
(bad)
pusha
popa
jns
and
sub
sub
fldenv
pop
fild
jnp
and
and
loope
adc
js
rol
or
push
add
inc
lods
bound
std
hlt
retf
cmp
push
ror
ja
shr
sub
or
test
ins
mov
retf
in
imul
push
sbb
movs
cld
into
dec
push
inc
test
lock
js
and
xchg
push
pop
jns
sbb
clc
daa
cld
or
pop
mov
jmp
cmc
mov
dec
into
adc
sbb
inc
jl
jmp
stos
popa
add
push
shl
pop
pop
mov
out
pushf
pop
push
jne
leave
aad
adc
inc
cmc
or
scas
inc
cmps
les
fdiv
in
or
push
call
jmp
movs
fistp
adc
jge
shr
(bad)
out
inc
cdq
(bad)
pop
scas
mov
cwde
jns
pop
push
jne
das
pop
test
mov
mov
mov
push
mov
xchg
sbb
jnp
mov
add
add
out
pcmpgtb
dec
fsub
iret
test
jle
dec
push
jmp
or
xchg
xor
call
jne
addr16
and
mov
loopne
adc
(bad)
enter
mov
pop
(bad)
dec
inc
jle
test
jmp
lock
sbb
ret
sbb
inc
mov
loop
jecxz
pop
adc
rcr
shl
cmp
push
cs
jl
enter
inc
sbb
pop
sub
sub
sahf
add
sub
aaa
fisttp
movs
cmp
inc
mov
adc
je
call
(bad)
cmp
jo
xchg
add
jge
fisttp
mov
lock
or
sbb
movs
jo
fcom
mov
loop
inc
in
xor
add
movs
sub
push
mov
movs
iret
mov
pusha
ins
push
pushf
out
dec
je
std
add
cmps
mov
mov
icebp
imul
mov
dec
mov
mov
adc
pop
jno
into
repnz
jne
dec
fisub
xchg
in
xor
push
ret
imul
mov
dec
movs
fstp
xor
pop
mov
mov
ja
into
loope
call
add
in
and
jl
div
jmp
pusha
bound
shr
xor
xchg
ret
lahf
addr16
and
and
pop
cvttps2pi
xor
mov
aas
mov
push
xor
inc
out
xor
jmp
xchg
and
cmp
mov
dec
push
outs
into
leave
dec
das
push
mov
daa
mov
iret
aam
jo
add
sub
fcmovne
sbb
sbb
inc
mov
out
xchg
sub
out
out
lods
sub
sbb
into
inc
int
xor
popa
push
scas
pop
mov
sbb
fxch
(bad)
out
out
cmps
cmp
push
into
out
je
dec
jae
outs
(bad)
(bad)
sar
rol
cmp
pushf
ja
out
jmp
push
enter
push
clc
stos
out
jecxz
bound
sbb
xor
ss
cwde
ins
mov
stc
lods
pop
pop
test
inc
jbe
sbb
jne
inc
and
jmp
inc
nop
stos
inc
rcr
cmp
or
push
jne
outs
cmp
shl
dec
loopne
sub
aas
push
mov
add
jne
xchg
push
fucomi
dec
xchg
mov
ja
(bad)
jb
xor
and
out
sbb
inc
hlt
stos
mov
push
in
mov
xor
pop
push
lock
and
mov
out
cmp
lods
fimul
aas
fdivr
and
push
push
or
cdq
and
scas
xchg
ror
out
cmp
inc
push
daa
jo
mov
je
sbb
enter
sub
lods
xchg
push
daa
or
inc
sub
jmp
inc
adc
ret
and
dec
iret
inc
cmc
mov
leave
call
or
jecxz
in
jg
add
cmc
(bad)
xor
in
add
pop
lock
ins
sbb
shl
nop
xchg
aas
cwde
or
xchg
retf
dec
popf
movs
in
std
rol
mov
test
movs
dec
inc
jnp
retf
adc
sbb
ret
add
mov
out
test
data16
jmp
jp
mov
jmp
int
mov
xchg
push
arpl
dec
fsubrp
adc
test
retf
sbb
cdq
lock
scas
cmp
pop
imul
lahf
sahf
lods
add
aad
inc
pop
sbb
and
hlt
xor
dec
ss
test
mov
mov
ror
call
inc
mov
cmp
repz
gs
gs
test
lock
stos
mov
sbb
push
sbb
inc
bound
mov
cli
out
add
jno
and
in
push
loope
repz
and
push
fild
scas
nop
pusha
cmps
mov
mov
sub
cmp
scas
imul
xchg
retf
mov
sub
sbb
in
ss
inc
sbb
(bad)
add
add
scas
sbb
cmp
push
loope
clc
lock
es
push
push
sub
(bad)
inc
repz
dec
fimul
enter
fisttp
pop
imul
iret
lea
lock
mov
or
pusha
lahf
aaa
imul
add
push
daa
mov
mov
sub
ds
mov
in
xlat
pop
jbe
cmps
mov
or
ret
sti
jae
mov
inc
das
leave
add
jo
sub
popf
arpl
adc
inc
push
mov
fs
add
xor
jge
in
pop
xchg
int
and
fwait
xchg
jle
dec
xor
loop
and
or
shl
mov
call
dec
add
(bad)
fimul
jge
jg
std
dec
sbb
mov
xchg
push
jno
div
pop
sbb
movs
out
shl
in
fistp
and
jo
stos
ins
xor
jg
iret
push
mov
fs
push
xchg
bound
mov
out
aad
scas
xchg
dec
setg
call
dec
or
ja
add
inc
or
clc
mov
adc
push
cmp
xchg
mov
int
cmps
in
cmps
std
int3
jg
(bad)
sub
addr16
cmc
loopne
or
xchg
sti
clc
xor
jne
mov
sbb
jb
pop
adc
ror
inc
das
rol
mov
pop
mov
push
sub
mov
dec
or
dec
test
pop
mov
test
outs
(bad)
in
push
imul
fdiv
push
xor
adc
in
inc
cmp
pop
ret
push
add
ja
xchg
and
retf
or
xchg
sub
or
loopne
mov
les
xlat
sub
rcr
xchg
fs
int3
dec
pop
shl
and
fist
pop
mov
js
dec
mov
mov
cld
push
xor
and
dec
retf
out
add
test
mov
xor
dec
rcl
adc
mov
sub
jle
out
sub
xchg
cmp
dec
add
push
xchg
fsubr
fisttp
les
mov
cli
das
xchg
xchg
aas
movs
dec
adc
movs
pop
and
ret
pop
es
fwait
cmp
adc
rol
cs
mov
rcl
das
xor
inc
or
add
jge
mov
mov
jae
inc
dec
pop
aam
int
cs
jecxz
mov
sar
aam
and
clc
in
mov
lods
lods
imul
(bad)
inc
push
sbb
cmps
cmp
js
pop
xchg
mov
clc
add
sbb
jae
sti
test
xor
rol
popa
or
mov
xlat
jb
cmp
and
cmp
mov
pop
mov
in
jmp
nop
repz
push
and
(bad)
jb
mov
mov
scas
mov
cmp
and
sbb
adc
xlat
jnp
neg
loope
mov
jl
fcomp
ins
add
movs
sbb
test
sub
test
movs
or
retf
jnp
mov
es
retf
stc
addr16
jbe
or
cmps
daa
inc
or
call
push
in
sub
inc
jnp
mov
pop
add
inc
mov
(bad)
into
outs
mov
fild
pop
and
cmp
push
lods
mov
out
jo
sahf
test
in
xchg
or
mov
fadd
and
aas
sub
das
(bad)
or
inc
movs
pusha
mov
ins
inc
mov
mov
push
das
sub
and
jle
pop
in
fwait
neg
cli
inc
ins
adc
cmp
cmps
xchg
jb
call
xor
aad
lods
adc
cmps
push
jmp
hlt
cmp
xchg
jno
lea
push
cmp
xor
arpl
add
fsub
and
mov
je
fcom
xchg
fsubr
or
jne
movs
push
ss
popf
fdecstp
mov
pop
jp
(bad)
je
and
and
in
pop
dec
ret
inc
xchg
xchg
sbb
(bad)
ds
mov
outs
enter
mov
mov
sbb
mov
dec
stos
pop
and
push
pushf
fdiv
and
movs
dec
test
xchg
xor
push
ret
xchg
and
dec
sbb
dec
fild
push
call
sahf
xor
pushf
test
inc
sbb
cmc
push
mov
fs
xor
sub
adc
lea
ins
inc
loopne
dec
mov
dec
xor
jne
jb
mov
(bad)
movs
ret
mov
mov
cmp
sub
dec
inc
sub
mov
ins
cmc
sub
pop
dec
out
pop
shl
test
cmp
jmp
xor
xor
cmps
in
daa
inc
icebp
adc
push
pop
push
adc
push
out
lds
lods
mov
cmp
pop
and
and
enter
xchg
aad
sub
jb
pop
mov
jnp
adc
pushf
push
hlt
sbb
jecxz
pop
jmp
xchg
xchg
jnp
ins
shr
fst
jnp
fmul
lods
jle
or
inc
out
pop
stos
mov
and
(bad)
jne
imul
jle
pop
cld
clc
es
jmp
mov
test
sbb
stos
(bad)
hlt
repz
jnp
ficom
dec
mov
xor
aas
fidiv
sub
clc
jns
aad
xchg
dec
or
es
push
ins
inc
adc
aad
mov
ja
gs
jo
cmp
loope
dec
ret
dec
jge
push
out
popa
ror
ins
pop
ds
(bad)
out
dec
xor
shl
cwde
repnz
(bad)
pop
pop
cmp
mov
add
pop
mov
in
stos
mov
xchg
mov
push
sbb
jae
or
scas
dec
pusha
shl
push
or
pop
jmp
repnz
scas
call
sbb
(bad)
popa
pop
jmp
aad
ret
sub
jnp
inc
add
cs
das
lock
or
sahf
sbb
in
shl
mov
sub
inc
nop
push
jbe
scas
aad
push
mov
mov
pop
inc
loopne
xor
aaa
or
imul
ds
(bad)
enter
test
pop
jo
xchg
jmp
inc
push
movs
xchg
pop
push
pop
pusha
jb
mov
sub
xor
out
cmp
push
jnp
stc
fcomp
cmps
mov
push
push
push
test
mov
shr
ficomp
es
(bad)
mov
pop
pop
cmp
mov
popf
lods
ret
cdq
jmp
sub
(bad)
xor
(bad)
retf
adc
iret
cli
ss
je
icebp
repnz
in
xchg
cwde
je
and
stos
scas
ds
ja
xchg
add
test
outs
sub
and
fidiv
xor
aam
mov
add
call
fwait
push
ret
fiadd
fucomip
pop
jg
or
and
fbld
xor
push
nop
dec
inc
sbb
jecxz
fwait
jne
inc
jg
sbb
cli
les
ror
leave
cmp
jge
jae
pop
mov
sub
icebp
sub
fmul
fs
sub
jnp
adc
jns
jecxz
pop
mov
lock
out
push
jl
mov
dec
das
es
sub
push
out
test
pop
es
neg
in
push
inc
dec
mov
daa
stc
jle
xchg
xchg
mov
mov
sub
sub
sbb
pop
pop
mov
lock
jl
mov
mov
mov
jge
int3
push
aad
cmp
and
std
outs
movs
out
jle
(bad)
mov
push
lock
inc
inc
gs
add
mov
cmp
stc
inc
retf
dec
aaa
into
cmp
mov
mov
ret
or
or
je
imul
retf
and
adc
outs
shr
(bad)
dec
mov
mov
pop
aas
popa
inc
sub
push
fdiv
int3
add
jb
xor
sbb
xchg
test
xlat
push
mov
mov
into
cmp
cmp
aas
sbb
inc
pusha
jmp
in
xchg
sbb
fsub
and
sub
ds
call
mov
cmp
jne
(bad)
aas
test
mov
in
cmp
jle
call
out
(bad)
(bad)
pop
out
mov
sbb
cmc
nop
rcr
jp
scas
mov
inc
fnsave
add
mov
and
int3
out
pushf
dec
test
mov
and
adc
sahf
loop
adc
mov
adc
xor
aad
mov
push
je
push
sub
add
sahf
fwait
cdq
pause
in
test
push
adc
(bad)
mov
push
test
test
jmp
mov
fcom
int3
mov
mov
add
in
fwait
push
xchg
add
add
xchg
out
push
arpl
xchg
popa
xor
shl
call
out
push
mov
scas
push
fistp
push
sar
jnp
cli
std
icebp
sbb
pop
cmp
adc
sbb
sar
cmc
jnp
icebp
xor
(bad)
sub
rol
leave
retf
lea
(bad)
dec
sbb
and
push
jmp
mov
push
mov
loop
pop
sub
(bad)
scas
cmp
icebp
fnsave
mov
mov
es
jmp
fnsave
pusha
pop
add
hlt
mov
pop
mov
push
loop
daa
repz
sbb
movs
or
adc
cmp
pop
in
xor
movs
inc
retf
call
into
(bad)
sub
das
shl
mov
imul
(bad)
or
sbb
inc
mov
in
retf
loopne
test
ret
test
aas
push
scas
fstp
mov
push
jno
adc
push
in
cmp
add
cmp
lea
sar
jno
cmp
sbb
dec
mov
or
inc
jbe
xchg
and
push
addr16
gs
movs
mov
cmp
and
test
mov
and
mov
sbb
js
in
(bad)
les
xor
sbb
dec
xor
pop
mov
xchg
out
or
add
loopne
cs
dec
inc
mov
loopne
(bad)
stc
scas
pop
int3
bound
and
das
xor
push
cwde
mov
scas
arpl
div
dec
jmp
lods
sub
bound
aam
pop
pop
push
or
adc
(bad)
in
sub
frstor
ins
(bad)
repz
mov
jmp
jae
movs
add
adc
xchg
adc
or
xchg
jae
dec
ins
(bad)
sub
test
pop
xchg
dec
int
push
test
out
shl
mov
sub
xor
add
jmp
mov
mov
(bad)
sbb
push
jnp
ret
out
push
pop
gs
fwait
retf
sbb
aad
repnz
(bad)
icebp
mov
enter
jge
xchg
push
mov
pop
shl
das
add
loope
arpl
cwde
or
fs
push
mov
pop
inc
jp
and
inc
mov
test
mov
mov
into
test
retf
divps
cwde
jp
outs
sub
push
out
(bad)
lods
repnz
(bad)
mov
inc
bnd
(bad)
xor
xchg
mov
mov
dec
mov
mov
aas
enter
cmps
and
mul
aad
(bad)
sbb
push
jne
mov
adc
and
mov
aaa
push
inc
xlat
push
div
mov
dec
fwait
stc
push
(bad)
(bad)
jmp
xchg
adc
or
xchg
xchg
pop
mov
dec
loopne
add
mov
repnz
adc
sar
out
pop
mov
es
je
sbb
inc
add
mov
shl
xor
std
xchg
push
ficom
pop
pop
repz
jl
pop
out
iret
xor
jle
dec
ret
adc
test
retf
ins
cmp
jecxz
sbb
mov
inc
cld
cwde
inc
sbb
jne
inc
movs
(bad)
mov
stos
push
jge
sub
add
sbb
cwde
sbb
xchg
movs
or
scas
nop
xor
pop
leave
dec
pop
pop
outs
sbb
jecxz
(bad)
push
mov
or
adc
pop
push
movs
xchg
dec
ins
cmps
nop
lds
(bad)
js
sub
loopne
mov
sub
(bad)
lea
cdq
(bad)
adc
inc
leave
call
adc
test
cmp
lods
add
jge
push
aas
add
xchg
call
in
adc
inc
movs
ins
pop
xor
mov
sar
cmc
aas
repnz
push
retf
pop
inc
jmp
stos
mov
out
mov
imul
pop
sbb
cmc
rol
loopne
enter
arpl
mov
add
mov
enter
adc
xor
mov
shr
inc
bound
inc
outs
sub
add
scas
and
sbb
(bad)
aas
imul
aas
push
imul
or
fnsetpm(287
cmp
mov
cmp
push
mov
push
aam
lods
not
hlt
mov
jle
ret
dec
add
or
xor
add
pop
movs
ins
test
jae
xor
cwde
and
mov
ret
shl
cdq
mov
xor
lock
(bad)
mov
das
dec
jbe
popf
inc
jmp
mov
mov
mov
retf
mov
lock
aaa
cmp
scas
dec
pop
mov
pushf
sbb
jno
mov
cmp
adc
jg
es
fstp
and
jno
inc
push
push
add
(bad)
ret
test
jo
fnstsw
cmp
enter
shr
int3
inc
inc
push
dec
jp
pop
xchg
hlt
out
cmps
fwait
jne
xchg
push
mov
cld
push
mov
push
std
pop
mov
imul
(bad)
cli
inc
jae
sub
sub
mov
push
or
adc
inc
jmp
imul
cmp
test
add
je
cli
xchg
cld
bound
cmps
mov
aas
dec
mov
cmp
pop
xor
mov
xchg
mov
addr16
(bad)
enter
mov
outs
dec
popf
popa
xchg
sbb
mov
pop
mov
push
or
and
sub
push
inc
pushf
popf
sub
imul
and
adc
xor
mov
pop
pop
cli
sub
in
pushf
out
xlat
sbb
cmp
aam
aad
or
pop
dec
icebp
mov
push
lahf
enter
xchg
dec
call
pop
sub
jp
mov
push
sub
xor
dec
add
add
mov
dec
or
test
inc
je
loope
mov
out
and
jae
push
mov
add
retf
rol
and
xchg
sub
jle
(bad)
lock
cmc
outs
jecxz
cmc
mov
mov
dec
or
and
sbb
mov
rol
jae
adc
movs
fnstenv
sti
add
add
and
iret
pop
cmps
ds
xlat
sub
fscale
ss
cmps
sbb
gs
rcr
push
push
(bad)
jnp
shl
jl
nop
sub
movs
shr
cmp
sbb
(bad)
rol
mov
lahf
(bad)
mov
cmp
in
retf
and
cli
out
fldcw
dec
iret
xor
sub
jno
clc
addr16
and
imul
aad
xor
cmp
cmp
pop
lods
push
test
add
cmp
cmp
cmps
into
add
cmp
(bad)
iret
pop
sbb
push
mov
ficomp
sbb
pop
mov
jg
movs
sub
cmpps
push
out
sub
call
aam
mov
mov
push
test
jg
dec
mov
xchg
sbb
sub
fiadd
xor
jle
xchg
mov
es
hlt
mov
loop
stos
retf
pop
adc
sbb
adc
je
test
push
or
cdq
(bad)
in
pop
ds
mov
sbb
add
bound
sbb
pusha
ja
jo
or
test
xor
push
and
mov
mov
mov
pop
add
fisubr
mov
nop
add
xchg
jno
dec
stos
call
loope
cs
inc
add
adc
jl
inc
push
aad
dec
dec
pop
das
mov
sub
mov
aad
mov
xor
mov
sbb
pop
int
cmp
dec
cmp
lds
inc
mov
xchg
dec
dec
sar
push
ins
pop
fdiv
rcr
or
pop
jo
mov
es
fsub
movs
sub
push
ret
add
adc
jae
aam
and
cmp
push
ror
and
in
add
shl
fcomi
jo
mov
inc
inc
xlat
popf
cmp
popw
movs
add
loopne
mov
dec
retf
xor
add
sub
fisubr
jno
mov
mov
sub
or
out
out
imul
enter
xchg
bswap
mov
mov
(bad)
movs
push
aaa
imul
adc
clc
jp
retf
lea
pusha
int3
xor
and
(bad)
loop
sbb
call
mov
call
push
bound
pop
sbb
cmp
dec
mov
and
inc
xor
mov
xor
cmp
out
adc
mov
xchg
inc
and
mov
mov
scas
addr16
jecxz
or
push
xor
ror
or
dec
sub
xor
sbb
cmps
and
dec
retf
cmps
sti
xchg
jno
add
pop
mov
adc
out
gs
lahf
stc
lods
std
pop
xor
add
shl
push
aaa
or
shr
jl
aad
fnstenv
fs
das
push
mov
(bad)
ret
(bad)
sub
adc
xchg
stos
and
repnz
cmp
jae
or
cmp
out
(bad)
sbb
sub
xor
loop
push
xlat
sub
gs
jno
repz
inc
ins
retf
mov
xor
or
jns
test
je
fimul
(bad)
sbb
inc
push
cmp
jb
add
aas
pop
in
jmp
cmp
cs
out
aaa
jo
fsub
test
mov
xor
pop
jp
fwait
das
test
push
pop
ret
dec
sub
mov
fisttp
mov
pop
cmp
repnz
movs
ror
retf
retf
retf
jmp
and
ins
fisttp
in
add
push
mov
js
(bad)
jge
adc
movs
jp
or
mov
pop
not
push
leave
rcr
mov
aad
dec
outs
repz
(bad)
sub
or
pop
out
es
inc
fbld
arpl
pop
repz
add
(bad)
jmp
push
jl
pop
mov
cmp
cmc
mov
sbb
addr16
mov
cmps
sub
rcr
aaa
and
mov
sub
mov
xchg
inc
ja
mov
mov
rcl
sub
xchg
and
cmp
adc
lods
jo
daa
lods
fs
push
cmp
out
add
mov
loop
movs
sbb
imul
scas
xchg
call
fild
xchg
push
and
rol
and
gs
mov
pop
iret
repz
sub
push
pop
or
not
stos
adc
mov
call
enter
push
in
dec
pop
sbb
jns
outs
fist
aaa
bound
sti
push
in
les
cs
fdivr
repz
repnz
neg
aad
(bad)
popf
addr16
dec
out
mov
imul
dec
fs
imul
dec
data16
xchg
mov
ror
cmp
push
adc
imul
lock
cmp
das
adc
sbb
mov
sub
mov
push
xor
mov
mov
xchg
mov
dec
or
jmp
test
mov
(bad)
loope
adc
jbe
pushf
retf
xchg
adc
dec
dec
push
popa
jecxz
fidiv
arpl
mov
dec
daa
(bad)
add
fst
ja
xchg
mov
je
(bad)
out
cwde
push
and
pop
push
movs
jno
es
fiadd
das
ds
sbb
jnp
lds
cdq
cmp
mov
lahf
jns
fwait
aad
mov
jg
hlt
sub
sbb
cwde
add
in
xchg
shl
lea
push
cmp
cdq
stos
jp
mov
in
iret
mov
int
dec
or
dec
inc
adc
(bad)
std
imul
cmps
shl
adc
or
push
pop
sahf
pop
mov
ja
aad
dec
into
sbb
mov
xchg
cmps
retf
dec
fild
call
in
jmp
mov
leave
out
jle
sar
mov
in
(bad)
sub
adc
scas
mov
(bad)
daa
test
aad
sbb
add
shr
addr16
sbb
dec
xor
out
or
aas
loope
dec
outs
cs
pop
xchg
inc
or
cmp
cli
add
add
adc
or
cdq
bnd
aaa
mov
mov
inc
pop
out
aas
sub
mov
loop
in
popf
jbe
dec
(bad)
jmp
in
call
mov
fcomp
imul
cmp
xor
jbe
adc
(bad)
mov
pushf
retf
(bad)
daa
adc
(bad)
iret
aaa
add
out
and
jle
dec
or
and
sbb
inc
data16
mov
mov
xchg
daa
adc
mov
cwde
movs
sub
xchg
retf
imul
cwde
sub
std
xchg
in
dec
xor
push
scas
repz
xchg
mov
ins
lock
add
ins
in
or
add
inc
sar
jg
ret
pop
cmp
jbe
ss
stos
sbb
movs
outs
xlat
out
arpl
jnp
(bad)
ficom
popf
in
cmp
jmp
out
xchg
jo
xchg
shl
pop
lds
mov
ror
xchg
fwait
popa
popa
test
inc
stos
(bad)
adc
cmp
mov
outs
ret
call
mov
mov
push
in
das
bnd
dec
sbb
fcom
pushf
faddp
in
sub
arpl
jl
call
es
sar
jb
(bad)
cwde
sahf
hlt
mov
out
jg
xchg
push
daa
pop
call
sub
dec
xchg
(bad)
fwait
dec
call
xor
dec
xchg
or
xchg
in
sub
xchg
xor
movs
lods
fisub
int3
fwait
cmc
pop
out
cs
jne
bound
test
or
push
push
call
adc
bound
mov
loopne
test
sub
dec
scas
xchg
push
pop
cdq
ins
(bad)
jnp
call
das
pop
push
mov
sub
sbb
lock
dec
scas
int3
cs
and
mov
aas
dec
and
(bad)
gs
loopne
and
fldenv
sbb
pop
and
inc
(bad)
iret
or
xchg
xchg
mov
pop
jbe
push
fld
arpl
inc
jmp
pop
jmp
jecxz
ss
jge
rcr
xor
or
dec
adc
push
gs
jmp
js
dec
fisub
xchg
mov
pop
retf
ins
pushf
xchg
rcr
dec
and
ins
inc
push
and
or
pop
ror
pop
ss
out
mov
rcl
cmp
nop
test
sar
iret
mov
cld
push
hlt
add
pop
cmps
mov
add
jae
shl
out
and
outs
inc
neg
(bad)
hlt
and
adc
pop
xor
jmp
cmc
push
scas
adc
ret
(bad)
mov
push
out
sbb
lock
mov
shl
int
test
ror
pusha
fbstp
sub
sbb
sbb
push
fcmovnbe
rcr
mov
out
sahf
jmp
daa
rol
jne
sub
outs
jecxz
ror
mov
xchg
lods
scas
mov
lods
cmc
cwde
sahf
outs
lods
fild
aaa
repnz
pop
mov
push
aaa
xchg
jg
aaa
mov
iret
mov
xor
sbb
int
mov
xchg
or
push
sub
pop
cdq
lahf
xchg
xor
neg
shl
adc
pop
arpl
bsr
fdivr
std
loope
lods
retf
pcmpgtw
mov
clc
test
xlat
lods
adc
cmp
jo
dec
ret
jo
or
push
or
xchg
loopne
(bad)
jle
rcr
jb
in
ja
sahf
shl
and
scas
imul
adc
stc
cmc
aad
dec
arpl
mov
mov
cmp
loope
add
sbb
pop
out
pop
cmp
push
adc
stc
stos
inc
jns
jbe
jne
daa
sbb
or
stc
push
or
xlat
rol
jge
test
mov
int3
push
mov
jo
cdq
mov
inc
ja
pop
cmp
mov
pop
test
out
jno
dec
adc
(bad)
push
cmp
shl
add
rol
fistp
data16
sbb
or
je
jno
fistp
add
das
aaa
std
popf
mov
(bad)
push
inc
aas
fidiv
xlat
pop
sub
out
ror
imul
sbb
and
pop
mov
das
cmp
pop
push
mov
jne
sbb
mov
pop
jno
aam
push
push
push
mov
sahf
sub
fdivr
rol
jg
(bad)
sub
arpl
cmps
into
nop
or
jnp
and
sahf
xchg
lods
inc
loopne
mov
(bad)
in
xchg
sbb
mov
pop
(bad)
scas
call
stos
ins
sub
jb
clc
imul
inc
jmp
lods
cmps
push
mov
pop
mov
cmp
inc
and
rcl
and
mov
fdiv
dec
sub
movs
retf
mov
pop
or
aas
mov
mov
fcomp
and
xor
test
fdiv
movs
cmp
inc
ja
pop
and
stos
aad
ja
ins
pushf
iret
mov
jo
sub
ins
inc
mov
inc
mov
sbb
pop
les
rol
and
pop
ds
cdq
xchg
add
mov
push
sets
sub
sbb
inc
loope
push
push
ins
rcl
hlt
les
mov
popf
xchg
or
out
sbb
pop
mov
ins
icebp
sub
lods
repnz
mov
std
(bad)
lea
lds
hlt
repz
mov
dec
fcom
inc
out
test
mov
mov
mov
fst
call
arpl
adc
xchg
retf
popa
imul
inc
(bad)
push
hlt
adc
xchg
bound
out
cdq
inc
das
inc
sti
fadd
test
or
push
jg
pop
mov
outs
(bad)
pop
rcr
jbe
mov
pushf
mov
and
pop
mov
sub
ins
push
retf
sbb
and
out
push
push
neg
mov
call
fnstenv
test
mov
pop
sbb
xor
pop
cwde
pop
int3
ja
jae
ror
loop
add
adc
in
pop
xor
ins
push
ins
mov
sub
cmps
scas
inc
retf
xchg
inc
push
scas
sub
clc
jecxz
jg
jns
mov
xchg
popf
xor
jbe
outs
mov
push
push
cwde
test
inc
aas
popf
jecxz
sti
adc
into
mov
retf
lods
rcl
xor
or
xor
mov
pusha
and
(bad)
cmp
mov
in
nop
sbb
xor
dec
cmp
adc
call
pusha
loope
sub
or
lods
loop
xor
sbb
push
mov
movs
clc
mov
in
mov
push
push
cld
xchg
enter
mov
cmp
sub
dec
aas
jb
and
jecxz
inc
ret
jl
data16
mov
push
mov
mov
xchg
adc
adc
lock
inc
pop
mov
sti
adc
sahf
dec
adc
shl
shl
mov
push
xor
cmp
sbb
jno
retf
mov
lea
xor
xlat
xor
or
cld
cmp
pop
mov
and
or
xor
and
movs
into
mov
xor
out
in
dec
stos
out
add
and
sbb
push
ins
jg
jns
mov
shl
in
cmp
scas
pop
xor
and
push
pop
dec
out
sub
addr16
push
cmp
enter
adc
sub
sbb
fst
in
or
xor
push
jbe
fimul
fbld
std
dec
mov
inc
in
or
mov
out
add
cmp
repz
mov
int
xor
jmp
adc
cmp
cmp
aad
jg
xchg
into
das
repz
mov
test
mov
adc
ret
gs
lock
cld
ss
push
mov
push
adc
into
or
jns
adc
xor
cmp
fwait
retf
pop
mov
data16
outs
sbb
sub
adc
xor
cmp
cwde
sbb
add
inc
mov
inc
retf
fistp
(bad)
fdiv
icebp
cmp
inc
adc
and
cmp
jnp
inc
rcr
sahf
pusha
xor
mov
clc
dec
jmp
adc
jge
sbb
iret
jnp
aam
sar
call
mov
mov
out
cld
jmp
xor
and
xchg
lods
xor
sbb
mov
retf
mov
cs
push
cmc
sbb
push
ror
lods
loope
xor
xchg
loope
(bad)
lahf
daa
adc
mov
enter
lods
sub
mov
push
adc
push
adc
sub
lods
or
arpl
stc
jmp
clc
sbb
mov
cmc
das
pop
inc
aaa
mov
and
sub
fimul
add
fs
imul
mov
sbb
dec
jmp
pusha
shl
inc
xlat
mov
mov
inc
js
inc
sbb
inc
out
mov
nop
xchg
fimul
mov
cmp
mov
sub
push
and
repz
adc
cld
jle
not
loop
mov
scas
lea
test
loopne
shl
enter
push
push
dec
adc
jg
out
xlat
mov
mov
out
cmp
stos
sbb
fld
jg
mov
scas
pop
xchg
xchg
fwait
addr16
retf
mov
ins
jae
(bad)
mov
jl
push
xchg
sub
jbe
lahf
loopne
fmulp
inc
arpl
jge
push
xor
mul
jmp
ror
xchg
arpl
gs
push
je
jno
xor
inc
stos
outs
cld
xor
xor
jae
xor
(bad)
mov
dec
mov
std
ja
jbe
adc
mov
adc
sbb
sbb
fwait
inc
out
cwde
ds
inc
and
xor
daa
clc
xor
mov
cld
xor
and
test
je
mov
and
ror
or
and
jbe
repz
adc
cmp
out
cmc
jnp
mov
lods
mov
push
pop
cld
push
nop
and
icebp
mov
push
push
cmps
pop
ins
sub
popa
xchg
mov
push
cmc
mov
mov
push
ja
dec
xor
in
ins
mov
loope
mov
(bad)
pusha
mov
iret
repnz
cmc
mov
mov
cwde
push
loopne
xchg
dec
adc
or
or
jp
sub
or
xlat
pop
pop
jg
dec
inc
je
jae
pop
pop
sbb
in
imul
aam
les
cmps
popf
inc
mov
js
in
mov
and
arpl
ins
or
sbb
jg
dec
push
paddsb
(bad)
push
std
push
pop
mov
rol
inc
push
addr16
pusha
mov
mov
inc
adc
cmps
pop
mov
cmps
push
mov
mov
inc
outs
call
mov
clc
lds
dec
mov
neg
fcmovne
outs
arpl
pop
xor
adc
cld
in
add
hlt
cmp
sub
shl
(bad)
adc
mov
jmp
mov
sub
jp
stos
pop
add
mov
push
stos
sar
ss
fs
int3
lock
int
cmp
pusha
xchg
fst
jge
push
test
dec
mov
loopne
xchg
out
(bad)
jge
jmp
cmp
mov
sar
push
pcmpeqd
push
fs
repnz
jno
lock
inc
imul
cmp
and
mov
jecxz
neg
out
jecxz
loope
jle
adc
mov
aad
mov
ins
cmps
and
xchg
into
and
nop
or
sbb
or
push
mov
sbb
mov
out
shr
mov
(bad)
dec
lahf
div
iret
inc
xor
mov
sub
and
(bad)
mov
test
mov
dec
and
into
test
aaa
jl
add
adc
push
dec
xchg
push
adc
dec
js
icebp
pushf
pusha
ds
enter
and
mov
sbb
sbb
sbb
mov
add
add
imul
xor
outs
or
clc
push
add
mov
mov
es
inc
js
mov
jecxz
cmp
jmp
retf
cmps
in
mov
or
and
sub
xor
(bad)
repz
test
jmp
stos
lods
mov
jmp
fdiv
sub
add
call
hlt
sub
sbb
dec
cmp
cs
and
push
out
or
mov
mov
cmp
jne
push
ss
ret
mov
cmc
nop
jge
lock
ins
adc
mov
ss
pop
or
inc
mov
sti
inc
out
jmp
imul
test
sbb
sub
and
ins
inc
adc
std
pop
mov
mov
cmp
adc
in
(bad)
pop
(bad)
sar
jnp
inc
sub
push
movsx
sub
adc
mov
pop
stos
xchg
add
mov
mov
add
mov
sti
scas
jmp
mov
sbb
shl
sahf
mov
lods
xlat
jmp
pop
pop
fwait
addr16
call
repnz
sub
shl
cmc
enter
mov
pop
push
fimul
cmp
fisubr
sub
scas
sbb
scas
mov
push
pop
xlat
or
dec
not
cmps
imul
imul
ror
xor
icebp
cmp
or
jbe
fwait
and
pop
jmp
mov
inc
sbb
jle
mov
mov
aam
repnz
fsub
mov
xchg
sbb
adc
cmp
bound
sub
cmp
into
dec
inc
in
push
cs
es
aas
inc
aaa
dec
les
mov
mov
jmp
gs
push
xchg
adc
cmp
mov
or
push
call
inc
pop
ins
jp
repz
mov
test
jmp
and
gs
push
scas
jno
dec
mov
push
inc
adc
data16
and
aad
aaa
int3
or
movs
scas
dec
sbb
xor
pop
add
sub
lods
xchg
data16
je
cmp
out
std
mov
out
pop
or
sbb
enter
mov
jbe
loop
jb
stc
mov
int
xchg
cs
imul
jns
mov
jmp
sbb
imul
inc
jb
pop
push
or
sbb
jnp
adc
or
add
add
sbb
cli
cmp
and
push
lods
mov
fisttp
cmps
push
sub
push
and
ret
add
or
mov
das
mov
jmp
es
data16
ret
xor
jnp
gs
mov
jo
pop
leave
ss
or
jl
int
or
pushf
xor
stos
lock
push
hlt
in
cmp
stos
pop
and
sbb
fsub
sbb
add
fwait
repnz
adc
xlat
inc
push
shl
lods
enter
add
out
cdq
rol
mov
dec
push
pop
xlat
jecxz
jl
icebp
loope
movs
xchg
add
mov
xchg
lods
inc
inc
lea
nop
xor
mov
mov
jmp
add
jne
pushf
(bad)
push
push
push
push
dec
jo
add
bsf
xchg
je
mov
jg
and
jecxz
sbb
sbb
lods
mov
mov
lods
or
jmp
mov
mov
outs
cmp
je
scas
push
adc
adc
cli
out
sub
data16
cs
test
jae
(bad)
fimul
ficomp
movs
push
ja
test
(bad)
outs
data16
mov
push
(bad)
pop
jecxz
fist
inc
inc
iret
jb
pop
dec
arpl
loopne
es
enter
leave
add
pop
sbb
or
add
sub
inc
and
jl
cmps
aas
and
lea
jle
or
xor
sub
outs
or
repz
ja
aaa
push
and
or
hlt
dec
mov
and
dec
jmp
(bad)
pushf
xor
cmps
fwait
push
pop
adc
pop
jbe
fdivr
or
sahf
das
jle
icebp
mov
test
(bad)
push
mov
jmp
jo
scas
add
data16
ds
ret
das
sub
out
sub
test
and
cmp
cmp
inc
xchg
xor
jne
xchg
cdq
push
mov
ffree
iret
push
movd
or
rcr
mov
sti
inc
(bad)
call
push
test
jo
or
sub
pop
xor
sbb
pop
loop
pushf
shl
inc
xor
pushf
adc
adc
jne
pop
adc
or
test
pop
sub
push
fs
inc
sbb
xor
mov
iret
fidivr
sub
retf
pusha
aad
jmp
xchg
push
and
adc
aam
inc
sar
add
repz
mov
popf
inc
and
paddusb
ret
jecxz
in
(bad)
in
test
pop
mov
(bad)
add
mov
sub
xchg
mov
aas
cmps
in
test
rcr
idiv
rcr
das
lods
and
mov
imul
das
mov
push
enter
loopne
push
les
push
pop
push
or
aam
xchg
xor
or
xchg
jno
jbe
dec
std
mov
and
add
popa
in
pop
call
pop
aad
adc
sub
clc
outs
inc
in
loop
cmps
jge
inc
les
leave
in
mov
ret
push
add
mov
ds
cli
add
add
popa
push
dec
inc
adc
cmp
adc
call
loopne
test
cdq
imul
fs
repnz
jb
inc
or
mov
lock
sub
jae
stos
pop
sti
cmp
add
iret
test
les
adc
data16
iret
stos
pushf
enter
mov
mov
pop
movs
sub
mov
mov
pop
adc
(bad)
mov
das
mov
push
jb
adc
outs
fidivr
in
or
call
sbb
cs
loope
cld
in
inc
ret
jb
ds
cmp
jb
jmp
out
and
call
clc
xorps
adc
call
shl
dec
leave
ins
je
jge
into
xchg
lahf
mov
mov
leave
adc
mov
stc
mov
aad
data16
fisub
retf
push
loop
(bad)
fwait
mov
repz
pop
movs
mov
repnz
xlat
shr
lods
xor
xor
fbld
or
clc
rcr
je
jne
jbe
xor
test
jmp
push
pop
jle
icebp
mov
aam
aaa
push
cdq
jno
and
mov
cmps
dec
push
gs
mov
mov
in
sub
neg
dec
ror
test
cmp
cmp
pop
jecxz
in
call
jbe
psrad
arpl
sub
mov
dec
lods
inc
(bad)
ret
data16
mov
fcom
jns
cmc
cmp
loop
mov
xor
jb
and
dec
out
or
test
dec
adc
or
ins
ss
ins
mul
aaa
pop
call
mov
cwde
jg
inc
imul
les
call
ror
js
push
and
in
scas
cli
jmp
mov
aaa
aam
xlat
gs
cli
push
xchg
les
aad
into
xlat
pop
inc
xchg
es
bnd
mov
inc
add
neg
movs
enter
cmp
sahf
dec
daa
hlt
sti
out
mov
add
sbb
mul
repnz
jmp
sbb
xchg
sbb
dec
jl
out
or
jmp
les
and
retf
pop
inc
aad
loop
(bad)
mov
or
mov
pop
fwait
call
icebp
pop
(bad)
jmp
aam
rcr
push
les
cmp
(bad)
xchg
int3
jae
or
in
push
dec
inc
ss
sub
pop
cmp
sub
jmp
in
test
xchg
lock
push
push
xor
cmps
ror
fldln2
mov
cmp
(bad)
or
sbb
ret
xchg
loope
sti
jnp
cwde
movs
jmp
pop
pop
outs
jmp
push
frstor
js
cmp
repz
xor
and
daa
pop
xor
inc
les
mov
inc
not
imul
pop
out
test
inc
stos
adc
pushf
xlat
aam
sub
xor
hlt
imul
(bad)
in
mov
mov
mov
add
js
or
shl
mov
fidiv
sbb
in
aas
and
fdivr
cmp
cli
or
cmp
call
jecxz
cmc
js
lods
adc
jp
cmp
popa
cwde
fdivr
xchg
test
sub
outs
xchg
mov
lea
cmp
fidivr
(bad)
push
and
cmps
movs
fld
int3
cmp
call
out
sub
fcmovnu
loopne
mov
sbb
fimul
out
aaa
pop
call
aas
test
adc
dec
sar
or
daa
arpl
pusha
or
gs
dec
test
fidiv
stos
in
xor
sahf
mov
dec
repnz
adc
add
pop
test
or
sub
arpl
cmp
loopne
lock
cld
fwait
xchg
jnp
inc
sbb
cdq
sahf
jo
cmc
inc
test
iret
and
adc
mov
push
pop
cmp
or
ror
inc
addr16
cmp
pop
adc
xor
or
stos
or
shl
adc
(bad)
sbb
mov
shl
aam
or
push
(bad)
jmp
adc
cmp
mov
xor
call
pop
ins
xor
inc
and
xchg
adc
mov
sub
pop
jle
xchg
lds
xchg
xor
stc
popf
fisttp
out
inc
mov
fwait
add
pop
stc
adc
ss
pop
xor
rcl
fstp
mov
sbb
lods
push
mov
adc
and
test
add
mov
cmp
in
lods
inc
cmp
cmp
pop
mov
mov
test
lods
dec
push
dec
hlt
retf
fst
cwde
add
(bad)
inc
adc
mov
xchg
leave
lds
clc
fcmovnbe
mov
mov
add
lods
sub
adc
mov
mov
inc
rcl
gs
cmps
adc
dec
scas
ins
inc
or
outs
mov
in
mov
sub
mov
sahf
cmp
mov
dec
xchg
cli
mov
mov
enter
cmps
mov
lahf
xchg
mov
out
xor
xchg
xchg
mov
ins
cwde
dec
jb
icebp
jne
add
xor
adc
aam
cli
push
(bad)
shl
fadd
data16
nop
imul
dec
mov
cmp
pop
xor
mov
xor
pop
cmps
dec
xor
sub
mov
pop
call
jnp
jno
pop
sar
les
mov
mov
shr
addr16
push
mov
pop
(bad)
sbb
ins
outs
xor
inc
xchg
mov
mov
vmulsd
or
(bad)
xlat
jne
shr
fcom
aaa
in
jbe
mov
ins
je
add
push
int
jp
and
inc
pop
lds
enter
(bad)
out
xchg
adc
cmp
std
call
scas
or
mov
pop
loop
lods
shr
jns
push
call
mov
mov
into
in
int3
add
inc
or
sbb
push
pop
idiv
das
(bad)
mov
mov
jae
push
sub
in
add
cli
ret
mov
push
int
pop
add
sub
aaa
cmp
data16
sub
mov
cwde
xchg
mov
and
call
call
mov
push
retf
je
push
fwait
icebp
mov
mov
and
mov
cli
dec
add
or
inc
and
mov
push
dec
aaa
lock
not
pop
aam
idiv
xchg
in
leave
jae
push
cmc
test
test
iret
cld
ins
sub
dec
cmp
leave
fild
push
rcl
out
add
adc
in
dec
pop
sub
test
cdq
push
dec
xor
lahf
push
xchg
ret
mov
icebp
stos
loop
ds
iret
pushf
cmps
stc
enter
mov
push
loopne
addr16
ins
push
(bad)
jmp
adc
cmp
xchg
ins
dec
std
jmp
jmp
mov
in
test
jo
aad
push
idiv
pop
mov
dec
repnz
in
aam
mov
cmp
jmp
mov
stos
sbb
push
pop
adc
xchg
std
fsubr
jge
test
dec
test
add
aas
mov
mov
inc
xchg
or
add
pop
out
jo
lea
add
jnp
in
out
pop
ret
ja
mov
mov
mov
jg
cld
repnz
push
lods
and
icebp
out
dec
imul
not
call
fisub
mov
mov
mov
ja
or
sub
bound
addr16
mov
stc
inc
test
mov
mov
pushf
cmc
inc
dec
out
loope
mov
stos
daa
mov
loop
mov
ins
mov
add
add
js
and
xchg
inc
push
push
ret
mov
cmp
mov
sbb
adc
push
adc
dec
sbb
or
and
aas
inc
test
mov
(bad)
cmp
cmp
movs
ds
jmp
in
movs
js
sbb
rcr
and
mov
fidivr
hlt
out
jg
mov
sub
fldenv
out
(bad)
jmp
mov
adc
scas
sub
add
sahf
xchg
fadd
int3
ror
das
int3
nop
neg
add
test
out
fs
xor
xlat
jle
shl
and
add
sbb
icebp
fadd
dec
lahf
sar
sbb
jmp
call
sbb
mov
ss
xor
jecxz
lods
cdq
and
ja
out
inc
int
test
pop
cld
mov
ret
ror
jmp
sar
out
or
popf
lock
nop
test
push
sbb
daa
adc
nop
and
cmp
scas
and
cmc
jge
push
xlat
cmp
aaa
jle
stos
jle
sar
adc
aam
pop
(bad)
cmp
xchg
push
mov
movs
ss
cs
stc
hlt
bound
stos
shr
sbb
xchg
gs
push
cmp
mov
mov
lock
scas
mov
cld
xor
xor
inc
mov
mov
jle
inc
cli
and
mov
je
shl
fdivr
sahf
(bad)
repz
push
xchg
dec
pop
dec
xor
not
mov
add
je
jns
cmp
fild
lods
jae
int3
(bad)
(bad)
sbb
jmp
in
jbe
fadd
ret
or
mov
push
test
or
sub
sub
or
dec
pop
mov
fsub
xchg
and
cmp
in
add
sbb
out
adc
scas
shr
imul
mov
cwde
outs
addr16
inc
and
fdiv
ret
daa
outs
stos
das
loopne
sbb
dec
ret
mov
dec
inc
ins
or
je
inc
mov
sbb
outs
mov
mov
jmp
cmp
mov
dec
mov
sti
popa
adc
lods
mov
mov
aas
cmp
mov
adc
(bad)
dec
sti
(bad)
aad
int
popf
movs
gs
stos
adc
out
add
push
pop
shr
add
push
bound
pushf
or
sub
int
gs
iret
leave
ror
and
ds
mov
xor
push
mov
pop
jne
push
je
jne
arpl
mov
sbb
mov
or
mov
std
(bad)
mov
mov
mov
jne
ror
iret
inc
cmp
imul
out
test
add
inc
xchg
mov
dec
mov
stos
adc
repnz
sub
movs
push
jmp
popa
inc
jne
aad
push
sbb
sti
and
in
sub
fmul
mov
mov
inc
adc
adc
add
sub
test
push
stos
add
cmc
les
xchg
shl
ret
add
int3
add
or
dec
or
dec
or
jecxz
fbld
jg
loope
sub
in
jg
inc
mov
push
cmps
xor
fstp
mov
jmp
mov
mov
test
loopne
in
push
pop
jl
inc
lahf
dec
sub
sbb
bnd
push
mov
and
in
adc
pop
xlat
lea
mov
jecxz
call
mov
sub
xchg
std
cli
xchg
cs
es
push
or
adc
push
out
jmp
mov
push
xchg
aam
jmp
jmp
popf
out
cld
nop
xchg
xchg
call
mov
std
je
xchg
mov
out
test
mov
push
cmp
pop
out
ficomp
add
dec
fild
test
inc
inc
or
outs
imul
push
add
mov
test
inc
mov
imul
jle
xor
push
neg
stos
dec
(bad)
mov
js
ds
jp
arpl
shr
sbb
cmc
sub
dec
fstp
rol
push
imul
pop
mov
jecxz
pushf
and
cld
in
int
repnz
or
add
scas
sti
push
sub
aaa
adc
mov
gs
jo
fdivr
mov
xor
out
or
hlt
sub
add
xchg
sbb
dec
iret
push
mov
out
push
inc
cld
call
lods
and
adc
fist
sbb
mov
cmp
mov
pop
xchg
retf
push
sahf
jecxz
pop
test
loopne
mov
cmp
je
cmp
fild
ds
jae
in
adc
fcomp
dec
cmp
shl
pop
mov
imul
ds
stos
sbb
dec
jge
aaa
cmp
mov
call
pop
outs
xor
pop
sahf
push
push
cmp
cmps
ins
and
retf
dec
and
dec
std
fdivp
lods
stc
in
retf
popa
dec
push
bswap
push
push
nop
push
pop
imul
dec
lods
movs
pop
push
mov
or
scas
cld
aam
fxch
mov
ror
(bad)
pop
mov
and
les
cld
jno
js
pop
jae
cmc
mov
inc
xor
movs
mov
dec
arpl
in
pusha
retf
pusha
dec
test
adc
arpl
stc
call
ins
je
ret
sbb
push
mov
sbb
and
imul
das
mov
addr16
cmp
xchg
inc
in
mov
test
mov
mov
mov
shr
mov
shl
mov
jne
int3
mov
out
mov
xor
sar
jae
cmp
sbb
mov
or
out
mov
pop
leave
fwait
scas
mov
or
aas
lods
dec
cli
push
jge
loope
push
adc
push
loope
inc
inc
pop
ins
pop
and
jne
(bad)
mov
and
mov
fcomp
test
adc
push
push
jge
fsub
and
cmp
ds
mov
inc
mov
jns
aas
xchg
fimul
adc
inc
sub
mov
jbe
jne
cld
push
loope
scas
into
mov
outs
cmp
and
jne
int3
mov
mov
xor
adc
inc
push
in
int3
std
xchg
jl
enter
mov
pop
mov
outs
pushf
xchg
outs
mov
sub
clc
call
lods
dec
mov
add
mov
mov
mov
rcr
aas
call
and
ins
dec
(bad)
xor
inc
rcr
lahf
cmc
pop
vcvtsi2sd
daa
xchg
inc
add
sub
mov
aam
dec
sbb
or
imul
push
sahf
pop
mov
pop
lahf
sbb
shl
ret
xchg
in
outs
mov
adc
add
cmp
jbe
cmp
dec
push
jmp
aam
sbb
jge
loope
js
iret
inc
push
sub
push
cmp
test
cwde
add
jne
or
sbb
lods
retf
test
mov
push
pop
loopne
xchg
cmp
stc
movs
ja
leave
inc
dec
clc
dec
xor
jmp
retf
sbb
fsubr
rcl
lods
push
add
jne
adc
sbb
sti
add
ret
cdq
xchg
or
and
adc
out
aad
inc
xor
stc
inc
ins
or
mov
dec
xor
push
je
daa
adc
ror
inc
pop
mov
std
les
cdq
outs
out
popf
cld
xor
cmovge
lods
xor
xor
ja
pusha
pop
fs
inc
mov
push
xor
inc
enter
or
cwde
xchg
mov
xlat
pop
fdivr
jnp
cmp
or
inc
mov
xor
or
lods
add
mov
ds
push
clc
int
aas
cmps
cmps
movs
mov
pop
shl
add
scas
sbb
mov
shl
and
fwait
loope
(bad)
push
sbb
les
dec
fcmovnu
xchg
add
add
sbb
mov
inc
and
mov
xchg
jae
aam
not
(bad)
hlt
jb
adc
jns
les
mov
add
js
nop
push
inc
(bad)
pusha
push
cmps
mov
or
ror
or
ja
inc
stc
test
cmps
jae
jmp
ret
cmps
mov
shl
scas
nop
jnp
dec
dec
sbb
cmp
sub
mov
dec
mov
adc
push
loope
test
add
xlat
jle
jae
data16
push
stc
inc
ret
sub
inc
imul
repz
cmovl
nop
mov
mov
and
ss
add
mov
mov
jg
cdq
and
xchg
retf
(bad)
sub
xor
aaa
sub
xchg
sub
fld
cmp
stos
hlt
in
stos
mov
and
retf
mov
push
in
push
enter
sub
fsub
pop
cmp
test
ins
push
xchg
push
pushf
and
loop
mov
push
mov
bound
dec
std
mov
movs
inc
call
pop
mov
add
fistp
fldcw
call
frstor
mov
or
adc
and
mov
daa
xor
mov
add
xlat
fmulp
pop
and
call
fdivr
bound
add
scas
jne
add
or
dec
dec
cmp
inc
addr16
stc
sub
mov
adc
scas
sub
sub
pusha
mov
lods
cmc
(bad)
jg
ds
mov
adc
jns
jo
cmp
inc
int3
(bad)
pop
fcom
dec
jecxz
or
cmp
scas
jnp
stos
push
mov
adc
lea
sub
fs
dec
cdq
in
mov
push
dec
enter
out
or
fsub
repz
and
shr
cmp
push
fisub
test
sub
bound
and
mov
cmp
push
les
fld
stos
movs
shr
mov
lds
sbb
adc
mov
xchg
ds
jne
adc
push
lahf
mov
sub
sbb
sub
mov
out
fnstenv
out
pop
mov
test
enter
inc
sub
pop
test
ins
cmp
jp
pop
xchg
add
sti
std
jg
inc
(bad)
test
add
ror
and
lea
mov
imul
cmp
daa
cmp
lods
xor
push
fcom
mov
jecxz
(bad)
popa
je
(bad)
xchg
cmp
cmp
mov
test
test
gs
jne
out
fwait
cdq
repnz
push
sub
daa
sahf
ins
adc
ja
(bad)
mov
inc
mov
pop
loopne
jae
enter
jle
bound
mov
ret
adc
jo
jae
arpl
std
jmp
add
sti
bound
call
cmp
out
push
xor
or
mov
sub
jns
push
xchg
shl
jle
and
and
add
(bad)
xchg
xor
cs
out
pop
push
(bad)
or
fsubr
out
xchg
fld
in
mov
jmp
retf
icebp
mov
mov
fstp
test
or
inc
retf
retf
test
sub
inc
add
je
adc
jb
mov
push
xchg
and
push
in
xor
add
(bad)
imul
cdq
xchg
sub
js
clc
xchg
xchg
cmp
test
js
sub
mov
ret
shl
bt
test
dec
aas
int
fild
cld
mov
push
cmp
pop
add
pop
cs
idiv
fsub
out
push
mov
stc
aaa
enter
sar
or
xor
call
aad
ds
pop
dec
xor
mov
or
adc
ret
nop
sar
sbb
sbb
sahf
xchg
mov
xchg
nop
scas
aad
stos
(bad)
cli
lods
push
into
mov
pop
es
cmp
test
ds
push
sti
inc
pusha
ret
cmp
sbb
cli
pusha
push
sub
xchg
mov
div
jle
mov
xchg
xor
pop
out
mov
(bad)
mov
jl
mov
mov
movs
mov
push
and
int
xor
jl
stc
fld
cdq
bound
sbb
jno
xor
pop
sbb
in
stos
test
dec
and
mov
push
xor
add
dec
sub
xor
arpl
cld
dec
sbb
movs
rcl
mov
popf
test
ror
test
lahf
fcomp
retf
int
call
es
mov
pop
mov
retf
les
jl
pushf
outs
mov
add
adc
xor
test
jns
das
ins
ret
mov
sbb
jae
xor
loope
gs
cmp
lahf
cmp
jge
fidivr
aas
xlat
pop
mov
dec
icebp
cdq
enter
xlat
jns
movs
push
adc
mov
jl
test
push
inc
push
cmps
clc
test
out
push
bound
cld
cmps
add
not
push
js
pop
dec
pop
stos
xchg
dec
pop
jmp
mov
sbb
dec
test
std
js
int
xchg
xor
and
cmc
mov
pop
(bad)
and
or
xlat
inc
inc
loopne
jecxz
shr
jecxz
xchg
ret
nop
or
push
inc
inc
dec
outs
push
test
cmp
mov
cmps
push
fisub
addr16
mov
mov
hlt
mov
(bad)
movs
pop
mov
dec
fucom
(bad)
push
add
push
add
in
fwait
and
smsw
sar
sahf
sub
jecxz
xlat
mov
clc
in
gs
sub
ds
sbb
and
xor
sbb
jge
sbb
inc
push
mov
jns
(bad)
add
outs
mov
jmp
jl
or
jl
div
movs
sub
sub
ins
mov
aam
jge
cmp
imul
adc
cmp
jnp
adc
cmp
adc
jnp
in
mov
pushf
inc
cld
lods
(bad)
xor
mov
mov
mov
repz
jl
pop
push
call
sbb
push
ret
mov
pop
or
adc
lar
sbb
mov
scas
bound
(bad)
popa
adc
jmp
dec
in
inc
adc
inc
test
push
test
jmp
adc
mov
sub
loop
add
(bad)
arpl
icebp
xchg
xchg
mov
mov
pusha
out
hlt
add
jo
inc
lods
dec
push
sbb
arpl
test
ret
or
push
add
and
ds
in
icebp
or
into
aaa
jg
jge
mov
ins
xchg
call
bound
cmp
aam
sub
(bad)
adc
xor
les
(bad)
repz
pop
xchg
mov
iret
adc
lods
sti
arpl
out
aas
popf
push
cmps
xchg
mov
int
stc
lods
or
xchg
int3
leave
and
pop
adc
push
mov
push
out
shr
mov
pop
and
in
add
xchg
imul
frstor
and
(bad)
sbb
icebp
call
arpl
dec
cmp
sbb
mov
mov
or
std
out
and
jge
dec
ss
and
and
ret
cmps
dec
popa
add
neg
sub
in
test
mov
jecxz
test
dec
cmp
jno
mov
mov
mov
mov
sub
(bad)
xchg
inc
repz
leave
cli
push
jl
(bad)
call
add
ins
inc
data16
(bad)
mov
std
mov
sahf
les
xor
test
mov
mov
jmp
add
fcmovu
into
js
mov
and
mov
or
outs
push
xchg
sbb
sub
in
iret
aas
push
jg
pop
jecxz
int
pushf
stos
mov
into
mov
jae
aam
xchg
inc
adc
xor
xchg
push
cmps
add
xchg
rcr
push
rcl
dec
bound
scas
pop
mov
lea
mov
leave
and
xchg
icebp
das
mov
push
pop
mov
xchg
mov
jns
gs
das
xor
ja
mov
(bad)
mov
jno
inc
mov
test
or
xchg
push
cmp
lds
nop
in
push
inc
or
sti
jg
enter
mov
push
push
mov
fadd
(bad)
pminsw
dec
stos
dec
pop
mov
ja
dec
push
jb
and
sbb
pop
push
bound
jae
cmps
mov
inc
cmp
ins
retf
fmul
xchg
rol
and
ret
test
ins
jae
push
shl
arpl
or
dec
push
push
test
sahf
sub
popa
cmp
ror
inc
or
inc
jg
add
mov
outs
outs
iret
das
call
pextrw
add
fbld
in
jmp
jne
inc
div
aaa
jo
dec
cwde
outs
test
sub
out
and
push
retf
addr16
push
loop
inc
outs
jp
std
add
mov
iret
pop
xor
js
imul
sbb
ret
add
out
fwait
dec
nop
inc
mov
mov
add
rcl
imul
(bad)
mov
nop
popf
cwde
cli
pushf
add
jbe
adc
push
ds
leave
out
imul
movs
ret
cmp
leave
cmp
jge
icebp
jns
jnp
cmc
std
mov
mov
xchg
sbb
sub
pop
adc
mov
xchg
pop
xor
add
(bad)
ja
inc
pop
(bad)
mov
sbb
pop
inc
jns
frstor
push
ror
(bad)
dec
cdq
inc
sti
xchg
cld
loop
add
loop
mov
ret
xchg
add
jb
outs
(bad)
push
mov
cdq
xor
dec
cmc
loop
cs
stc
dec
xor
ret
push
mov
in
dec
lock
sub
cli
dec
scas
pop
cmp
push
adc
push
lods
fisub
ror
aaa
js
in
fdiv
loope
hlt
jns
add
and
adc
mov
and
bnd
int
sub
jmp
fidivr
std
stos
xchg
sbb
mov
push
scas
shl
mov
adc
jnp
pop
fs
xchg
push
xchg
mov
sti
mov
daa
lods
in
ret
mov
fcom
inc
and
repz
mov
mov
and
add
clc
xor
imul
fwait
popf
dec
xor
sti
sbb
sub
jne
jae
and
push
xchg
push
dec
stos
in
out
xor
loope
and
sbb
mov
ror
xchg
adc
movs
xchg
test
and
mov
xor
ins
mov
sbb
sahf
mov
mov
mov
nop
fistp
imul
jmp
jne
sbb
hlt
in
(bad)
fild
xchg
shr
retf
cmp
cwde
inc
pop
in
push
dec
repnz
imul
inc
jb
cdq
pusha
mov
push
test
mov
adc
shl
shl
add
ret
test
not
dec
ret
or
adc
cs
in
es
retf
js
lds
xor
or
and
leave
stos
or
cdq
pusha
jo
and
and
jne
retf
push
(bad)
sub
imul
ins
das
add
not
xor
sbb
pop
xchg
mov
adc
loopne
out
pop
push
jb
mov
xchg
mov
cs
cmp
inc
dec
add
movs
xchg
mov
lock
mov
addr16
jle
leave
adc
test
mov
icebp
push
push
sbb
clc
loope
push
out
stc
iret
(bad)
lahf
movs
mov
loop
sbb
sar
push
arpl
movs
mov
sbb
rol
add
sub
leave
iret
pop
lahf
retf
fcom
dec
or
push
dec
lahf
pop
and
leave
add
and
mov
fdivr
bound
xchg
movs
jne
sti
popa
fidiv
xchg
(bad)
imul
loope
rcl
push
(bad)
ss
pushf
sbb
ss
pop
stos
adc
mov
mov
dec
ret
sub
cmp
mov
adc
dec
or
sbb
inc
lahf
or
sbb
ror
or
sub
cld
loopne
std
xor
scas
icebp
sbb
jle
mov
add
jne
xchg
pop
jecxz
outs
adc
xor
inc
adc
or
xchg
mov
retf
add
pop
xchg
xchg
add
cmp
(bad)
rol
scas
xor
(bad)
ins
mov
xchg
(bad)
enter
test
mov
jne
cld
call
out
or
cmp
stos
cmps
cmp
ret
adc
retf
ror
mov
(bad)
jo
jg
std
test
int
(bad)
lods
inc
daa
aas
loope
mov
push
outs
iret
and
stos
fstp
dec
stos
fdivr
cwde
mov
ja
test
xor
nop
ins
in
push
adc
and
push
jmp
mov
mov
bound
sbb
repnz
out
dec
sbb
xor
mov
mov
clc
mov
adc
adc
push
mov
lock
dec
mov
out
jecxz
les
xor
sahf
pop
jle
push
fimul
jae
ja
cwde
xor
sar
sub
mov
lods
ror
or
(bad)
sbb
cwde
pop
cli
loop
mov
arpl
cmp
jno
cmp
adc
mov
sbb
rcr
adc
cmp
loopne
inc
add
pop
add
add
iret
push
int3
jecxz
xchg
(bad)
imul
mov
lahf
mov
inc
ret
retf
push
nop
xor
stos
sub
xor
push
jbe
std
pop
into
cdq
push
mov
xchg
sub
mov
mov
es
lods
daa
jg
in
or
outs
call
stc
push
push
ins
jle
and
std
shr
seto
jl
jae
xor
or
xchg
pop
xchg
sbb
push
mov
retf
pop
js
adc
pop
push
pop
das
inc
adc
in
ja
push
imul
adc
xchg
shl
jno
cdq
out
sub
sub
adc
cmp
jo
xlat
sub
xchg
fst
dec
pop
fist
push
mov
mul
dec
xchg
shl
test
popf
push
call
dec
mov
inc
cmp
arpl
cmps
cli
xchg
fsubr
cdq
repnz
push
cmp
lods
dec
test
dec
(bad)
inc
mov
mov
and
scas
xchg
sub
ins
rcr
sub
popa
or
jne
mov
pushf
aam
cmp
and
and
cmp
ror
pushf
ret
pop
mov
push
test
sub
mov
push
adc
imul
(bad)
jle
std
fsubr
fcomp
js
mov
movs
xlat
ret
js
call
in
xchg
push
cmc
push
mov
push
outs
push
sbb
mov
imul
arpl
cmp
sti
jo
nop
sub
sbb
call
lock
test
mul
mov
fdiv
mov
mov
ret
aas
mov
xor
jmp
in
leave
jmp
je
sbb
ss
cmc
jne
iret
sbb
mov
out
je
fist
jno
cmp
cmps
cdq
outs
popa
mov
mov
daa
xor
enter
dec
pop
mov
repz
dec
jl
cmp
xor
mov
push
mov
push
cmp
xor
xor
dec
sub
lea
push
lahf
dec
in
iret
sbb
leave
xchg
aas
sbb
jbe
jmp
mov
xor
jecxz
in
push
addr16
popa
jns
cmps
in
jnp
aas
sub
sti
(bad)
(bad)
ret
loop
cdq
and
inc
ds
icebp
jae
fs
mov
lss
sbb
nop
mov
mov
sub
cmp
sub
adc
shl
inc
leave
fidiv
sahf
or
xchg
cmp
mov
cmp
xor
sbb
je
push
adc
push
stc
push
xchg
test
mov
mov
jae
inc
xchg
pop
mov
mov
ret
push
mov
call
movs
(bad)
stc
repz
in
div
pop
xchg
popf
or
cmp
or
and
mov
push
xor
push
jnp
jb
cld
inc
cli
adc
pop
test
sub
shl
jno
add
push
push
sub
icebp
(bad)
out
sbb
mov
adc
retf
in
jnp
mov
repnz
cdq
cmp
addr16
mov
sub
stos
sub
movs
add
psubsb
retf
ins
pop
jbe
cmp
rcr
not
add
adc
mov
jo
xchg
pop
dec
mov
in
sbb
mov
icebp
loopne
sub
mov
push
call
sub
cmps
jae
dec
pop
dec
xchg
pop
mov
retf
hlt
iret
sub
enter
jle
add
adc
sub
rcl
ds
sbb
push
push
mov
mov
cdq
test
inc
add
fldenv
pop
or
xor
ja
add
mov
push
fwait
ret
fdivr
pop
sahf
jmp
out
(bad)
jl
xchg
mov
pop
or
sub
jecxz
int
repz
jecxz
or
test
xchg
in
cdq
cmp
test
daa
sub
and
aaa
pusha
pop
xchg
jle
sub
pop
fcom
iret
pop
or
inc
mov
mov
adc
push
cmp
sub
daa
(bad)
jmp
int
enter
push
jmp
scas
mov
rol
adc
mov
sahf
pslld
dec
push
cmp
out
pusha
push
mov
loope
test
call
jmp
inc
cmps
mov
jnp
cli
pop
push
das
ror
in
test
test
xor
cmc
jg
mov
test
shl
add
repz
mov
test
stc
lods
and
mov
lock
mov
mov
cld
xchg
mov
add
aad
push
xor
sub
sbb
arpl
cld
cmp
inc
adc
adc
les
xor
push
xor
xchg
pop
lock
cmp
jl
pop
pop
dec
sub
push
pop
daa
les
inc
xchg
sbb
cdq
cdq
cmp
add
rol
xor
ja
mov
mov
dec
xor
(bad)
push
push
jge
test
jmp
jecxz
mov
retf
push
shr
pop
cmp
imul
das
ss
call
les
and
sub
sbb
hlt
sub
pop
call
mov
inc
pop
push
in
lods
dec
mov
push
(bad)
fwait
cs
aad
loopne
popf
(bad)
xchg
scas
jb
jno
out
sbb
sbb
sahf
mov
mov
mov
pop
gs
cmps
push
xchg
iret
jecxz
xor
cmp
daa
fs
ret
mov
and
leave
les
es
jge
lods
xor
lock
pop
fadd
std
(bad)
and
xchg
mov
push
cmp
push
jmp
push
and
push
xchg
pop
xor
jo
das
imul
mov
xor
imul
je
add
loop
mov
sahf
je
and
addr16
mov
sbb
sahf
inc
shl
mov
mov
dec
pop
imul
inc
dec
sub
test
je
and
cmps
push
shl
mov
cld
ins
inc
push
mov
sub
mov
ins
cld
sbb
jmp
pop
hlt
xor
dec
or
pop
jp
or
mov
(bad)
mov
mov
sbb
cmp
mov
push
pop
mov
sbb
jp
out
jge
jg
pop
jne
or
rol
push
sbb
lds
xor
jmp
push
jnp
out
aad
mov
lods
pop
ins
loope
and
mov
inc
cmp
(bad)
jmp
movs
in
cmp
in
push
fimul
aas
clc
jno
jno
pop
sahf
cmp
sbb
scas
mov
ret
or
mov
cmc
out
adc
fisubr
data16
push
aaa
xchg
test
add
clc
cmp
repz
xchg
sub
daa
xor
dec
adc
es
int
mov
out
ret
xchg
je
mov
ins
add
cwde
sub
or
xor
loope
mov
jp
jmp
sti
mov
aam
mov
(bad)
in
int
shl
mov
add
push
and
outs
dec
and
into
pop
adc
jmp
add
popf
inc
daa
repz
sbb
repnz
sbb
mov
jge
mov
push
xchg
js
gs
and
adc
adc
pop
or
mov
movs
repz
sti
inc
rol
in
xchg
(bad)
cmp
add
mov
aam
rep
fdivr
lods
mov
call
sub
xor
jmp
fs
dec
cmp
stos
jb
pop
stos
fbstp
mov
cmps
movs
xor
xchg
xchg
loop
daa
or
bound
pop
fbld
mov
sti
mov
mov
pop
jle
add
or
push
mov
arpl
scas
stc
int
dec
push
push
stc
inc
pop
sub
pop
and
pop
jp
and
(bad)
fdiv
fs
dec
enter
shr
or
imul
mov
xor
jecxz
lock
and
sbb
dec
pop
sbb
mov
sysret
cwde
(bad)
push
xchg
cmp
dec
xchg
or
stos
test
mov
push
iret
int
in
stc
mov
or
inc
jl
and
stos
xor
fisubr
ins
jmp
mov
inc
adc
(bad)
mov
push
addr16
pop
js
pop
cs
adc
jmp
jge
adc
jge
mov
adc
cld
sub
fistp
lods
jmp
imul
and
scas
arpl
shl
sbb
or
movs
pop
pop
inc
adc
mov
lahf
adc
mov
cmp
fwait
cmp
mov
xchg
test
(bad)
js
imul
imul
jl
jl
mov
shl
lods
js
js
ret
pop
xchg
inc
mov
pop
sbb
push
cmps
js
and
or
jg
imul
das
push
sbb
nop
(bad)
xlat
lea
xchg
add
movs
pop
ret
pushf
test
cld
fwait
adc
fisubr
and
imul
idiv
out
jg
fiadd
stc
repnz
aaa
(bad)
not
test
mov
jno
movs
int
push
xor
xor
mov
rcr
xchg
pushf
jecxz
inc
out
clc
lea
xor
ins
lock
out
and
jp
pop
in
inc
sbb
pop
add
mov
xchg
inc
xor
push
pop
xchg
ss
fs
data16
sub
jmp
jb
inc
sub
xor
ins
or
mov
adc
popa
jge
cwde
in
or
loope
fdiv
out
call
loopne
dec
inc
inc
aaa
mov
sbb
adc
(bad)
scas
stos
daa
es
call
repnz
mov
jecxz
pop
pop
jg
ins
jnp
nop
cbw
dec
xchg
ja
pop
sub
inc
lods
(bad)
das
cwde
mov
in
cmc
out
das
push
jle
or
xchg
pop
pop
aaa
mov
add
inc
cmp
or
stc
fstp
data16
sbb
xchg
xlat
sbb
leave
dec
push
pop
jmp
dec
xchg
test
and
ds
repz
and
dec
out
int
cli
nop
push
iret
ds
aaa
dec
mov
push
sub
sbb
(bad)
gs
in
xor
xor
jns
xor
cmps
cmps
int3
int
add
mov
hlt
outs
mov
jbe
retf
in
sbb
or
cmp
adc
mov
inc
mov
addr16
ja
or
mov
pop
xchg
ret
call
dec
lods
daa
push
inc
rcl
js
mov
out
or
pop
mov
add
(bad)
fs
lds
jg
mov
ret
call
sub
adc
sbb
scas
int3
xchg
ins
or
pop
and
and
int
cmp
pop
popa
test
xor
adc
ds
repnz
xor
adc
call
clc
cmc
jge
jb
gs
movs
mov
ret
xlat
adc
loopne
add
out
dec
mov
pop
imul
imul
call
xchg
lods
or
stc
addr16
loopne
(bad)
xchg
or
jbe
pop
push
pop
sub
loop
scas
mov
xor
outs
push
popa
iret
or
jne
int3
push
call
mov
popf
sbb
mov
or
in
sub
mov
push
push
xchg
shr
out
js
mov
pop
lock
mov
pusha
and
xchg
jb
or
int
jg
fs
pop
fsubr
lods
mov
and
pop
or
scas
loop
or
sbb
jecxz
jmp
dec
sub
mov
clc
jbe
movs
lods
pop
pop
call
mov
fcomp
cmps
add
fidiv
mov
in
(bad)
shl
movs
ins
daa
mov
add
(bad)
test
pop
push
cmp
sbb
sbb
cwde
sbb
cmc
inc
in
add
cmp
push
mov
ret
cmps
mov
xchg
or
sbb
stos
es
sbb
(bad)
sbb
call
test
mov
cmp
xchg
aad
fmul
test
and
movs
mov
xor
mov
hlt
and
jbe
pop
adc
sti
cmp
inc
test
lahf
cmp
jle
in
mov
lahf
add
push
jnp
xchg
int3
push
ror
sub
mov
inc
aas
xor
call
mov
(bad)
lahf
xchg
jo
icebp
jno
retf
add
sub
pop
pop
out
adc
cld
pushf
mov
pop
adc
mov
mov
adc
sub
ins
ror
jb
sbb
mov
sbb
loop
push
jl
imul
ins
iret
sbb
lock
outs
mov
cmp
add
loope
cmp
neg
cs
in
cmc
loop
movs
jne
push
mov
les
loopne
cs
adc
dec
pop
xlat
dec
mov
cld
sbb
cmp
cs
inc
lods
xor
and
dec
cmp
pusha
(bad)
jecxz
aaa
mov
popa
jno
aad
loop
jb
retf
add
mov
and
pop
push
pop
stc
adc
mov
bound
out
fimul
mov
inc
jae
call
or
jmp
(bad)
nop
cmps
aas
shl
fld
xor
je
pop
xor
xchg
or
sub
push
inc
loopne
stos
cli
add
test
mov
adc
pop
xchg
mov
mov
push
adc
mov
cmc
mov
pop
push
adc
lea
jmp
mov
test
push
imul
mov
cmp
dec
repnz
xchg
push
mov
add
cs
xor
stos
(bad)
out
push
fistp
sub
fs
jecxz
cmps
pop
cmp
mul
adc
(bad)
pop
or
push
push
mov
and
fiadd
loopne
push
pushf
sbb
jge
pop
neg
push
push
(bad)
mov
test
jmp
inc
fcom
sub
mov
or
ins
xchg
idiv
pop
in
push
lods
loop
pop
mov
cmc
push
stc
btc
das
mov
sbb
iret
xor
mov
(bad)
shl
repz
mov
gs
rol
mov
in
cmp
pop
cmp
fstp
mov
mov
sti
into
pop
mov
into
pusha
pusha
push
push
jmp
push
mov
and
lods
ja
add
in
imul
mov
imul
or
addr16
fldenv
dec
adc
lea
sbb
cs
lahf
mov
ds
xchg
ds
clc
xchg
jnp
mov
shl
out
and
sub
mov
in
adc
call
ret
mov
shr
out
mov
push
stos
repnz
xchg
jmp
xor
call
daa
jecxz
mov
(bad)
jbe
sub
sbb
cmp
shl
movs
das
fistp
je
gs
fimul
fs
repnz
lahf
pop
in
push
in
popf
jo
xchg
call
lods
adc
aaa
adc
es
iret
inc
mov
ret
repz
addr16
dec
stos
push
dec
bound
outs
pop
inc
fwait
sub
mov
pusha
inc
mov
je
sub
vandps
pop
fdivr
cmp
daa
enter
pop
(bad)
int3
sahf
dec
(bad)
adc
add
retf
adc
xchg
pop
jae
mov
mov
mov
cld
repnz
mov
sub
mov
retf
add
xor
shr
jae
ins
adc
mov
push
ss
jmp
out
dec
adc
push
inc
and
push
ds
enter
(bad)
lock
jp
mov
int3
lahf
aas
and
inc
bound
movs
outs
sbb
movs
arpl
cmc
je
add
pop
sysret
jae
add
inc
jbe
and
stc
xchg
outs
push
cmp
pop
sbb
dec
or
sub
and
dec
pop
jb
fmul
dec
add
cmp
jno
shl
add
pop
push
in
dec
cmps
mov
push
xor
fistp
arpl
pop
mul
pusha
ficomp
pop
pop
in
jns
jns
xchg
outs
push
xor
adc
push
sbb
psubd
mov
and
int3
add
mov
pop
pop
jo
movs
pop
jg
retf
cmp
lock
ret
sub
sbb
and
xchg
and
cmp
test
aad
dec
fld
pusha
push
fwait
in
push
in
out
outs
push
into
push
in
retf
adc
and
and
xchg
es
jg
ins
daa
and
inc
and
call
jp
lods
inc
fs
out
cmp
cmp
pushf
or
or
cmp
clc
mov
retf
stos
ret
out
or
div
xchg
arpl
xlat
sub
push
retf
push
loope
inc
sub
push
scas
sbb
adc
nop
loop
stc
or
je
outs
cmp
aaa
adc
sbb
jge
mov
and
lds
cmp
sbb
fnstenv
jne
in
pop
push
or
xchg
add
pop
arpl
and
(bad)
hlt
inc
and
inc
sbb
push
jne
sbb
out
out
std
pushf
iret
jge
sti
loope
push
clc
mov
adc
popf
add
sub
add
fst
rcr
cmps
lods
xlat
sub
or
call
pushf
in
idiv
xchg
call
mov
jge
mov
jnp
push
xor
jge
mov
aaa
push
cmc
scas
sahf
test
test
xor
sbb
pop
les
mov
xor
xchg
ja
(bad)
and
xchg
mov
nop
(bad)
std
or
mov
and
sbb
pop
and
push
and
lods
movs
mov
mov
call
jbe
mov
push
and
pop
pop
jmp
hlt
out
sbb
jbe
mov
sub
sbb
bound
sbb
sbb
push
enter
pushf
shr
xchg
in
test
stos
enter
(bad)
jge
cmp
in
es
adc
cmp
enter
mov
cwde
les
dec
pop
sbb
leave
inc
aaa
mov
cmp
mov
fdivr
(bad)
retf
sub
sub
je
pop
inc
rol
and
mov
ret
sti
call
adc
pop
jmp
and
cmp
cdq
and
mov
loopne
aaa
int
idiv
clc
or
xchg
movs
sbb
sbb
mov
cmp
xchg
xchg
mov
loope
jae
ret
jae
jecxz
je
fcom
(bad)
jecxz
leave
jmp
jecxz
in
push
shr
rol
push
fisub
sbb
cdq
mov
sub
xchg
mov
pushf
(bad)
adc
or
cmp
jae
xchg
inc
jge
adc
mov
push
ret
arpl
jne
dec
ret
(bad)
retf
out
add
push
mov
pop
fiadd
pusha
call
mov
mov
stos
ret
adc
imul
in
pop
jp
inc
xchg
adc
movs
in
pop
add
pop
inc
test
into
jbe
mov
xchg
pop
cmp
add
inc
cmp
fisttp
xor
mov
out
bound
add
cmc
sub
sbb
dec
push
outs
js
push
dec
out
leave
imul
fwait
jbe
fidiv
loop
repz
sub
xchg
bound
cwde
push
push
mov
stos
xchg
jp
fcmovu
push
adc
inc
xor
js
and
adc
mov
imul
push
and
and
sub
add
mov
movs
cs
es
adc
shr
sbb
or
std
inc
dec
repnz
outs
fstp
sar
push
push
mov
sub
jp
push
in
or
jb
mov
cmp
pop
out
pop
jbe
mov
mov
das
jg
lods
jecxz
xchg
repnz
jmp
iret
ret
mov
or
inc
mov
sar
test
and
in
mov
dec
add
sahf
cmps
or
adc
lods
mov
fild
push
jo
std
dec
sub
inc
jmp
cld
sub
mov
adc
ja
inc
inc
add
and
lahf
popa
lods
inc
(bad)
mov
std
xor
cmps
mov
aad
cmp
fld
cmc
out
and
les
mov
ds
mov
mov
mov
enter
and
or
sar
mov
cmp
lock
cmp
inc
loop
and
and
fisubr
addr16
xor
sub
xlat
retf
add
ja
mov
mov
inc
mov
mov
cmp
inc
sub
hlt
cld
je
in
les
jbe
mov
(bad)
(bad)
pop
aad
fldpi
dec
iret
aad
jle
add
stos
jp
pop
cmp
inc
div
xchg
fldenv
nop
pop
rol
cmp
xor
xor
sbb
or
or
div
jo
pop
xor
cmp
cli
xchg
push
xchg
adc
ficomp
inc
or
enter
mov
pop
pop
sub
loop
dec
mov
cmp
bound
mov
add
mul
push
das
mov
loopne
std
aam
mov
sub
xor
pusha
test
hlt
pop
movs
push
mov
out
aam
(bad)
fist
mov
mov
dec
inc
sub
cmp
daa
dec
test
arpl
test
push
lock
inc
cmps
add
and
(bad)
movs
adc
jo
push
test
sub
pop
sbb
mov
rol
mov
push
sub
mov
mov
pushf
pop
pop
push
or
mov
pop
dec
test
inc
jg
shl
in
arpl
mov
call
mov
cwde
and
dec
pop
and
adc
pop
fild
fcom
ja
add
gs
xlat
xor
xor
test
fwait
and
xchg
mov
mov
mov
cmp
stos
ins
xor
mov
sbb
xlat
dec
pop
inc
je
out
sub
inc
xchg
cmp
cmp
mov
scas
ja
inc
inc
adc
ret
push
mov
mov
dec
and
mov
mov
and
pushf
hlt
loopne
sub
xor
xchg
pop
iret
pop
in
sti
pusha
cmp
pop
xor
jne
push
push
enter
cli
jg
mov
mov
sub
and
mov
scas
mov
mov
inc
mov
aad
jmp
nop
mov
repnz
daa
inc
cmp
inc
pushf
lahf
mov
or
push
jb
lds
pushf
int3
jecxz
push
fs
popf
dec
lea
mov
sub
cmp
aas
shl
es
mov
and
sub
xor
push
jl
jne
iret
(bad)
dec
sub
stc
or
mov
sbb
pop
sub
inc
mov
sbb
call
xchg
jl
sub
fstp
inc
push
and
js
jmp
sbb
setg
sbb
mov
movs
cmp
call
(bad)
mov
or
int3
or
in
xchg
(bad)
sahf
push
out
(bad)
call
or
or
pop
stc
push
ret
data16
cmp
loopne
mov
inc
or
sub
idiv
jecxz
and
sub
out
cmc
in
mov
imul
leave
pop
into
cmps
test
jmp
add
xchg
xchg
mov
or
mov
jnp
bnd
mov
xchg
leave
add
xchg
inc
or
(bad)
pop
pop
pop
jg
and
(bad)
aam
mov
in
push
(bad)
sub
inc
lds
mov
xor
push
mov
xor
mov
jle
aad
test
mov
shl
xor
pop
cli
cli
repz
imul
xor
jge
add
(bad)
jne
into
cmps
icebp
mov
mov
inc
inc
cmp
cmps
fwait
push
pop
scas
jp
cli
es
outs
xor
fcmovnb
xlat
cmp
cwde
push
loopne
cmp
and
std
mov
xor
cmp
pop
pop
(bad)
shl
push
jno
sub
pop
(bad)
inc
mov
fisub
frstor
pop
or
inc
nop
(bad)
mov
xchg
imul
imul
adc
inc
icebp
and
xor
mov
push
pop
retf
(bad)
mov
movs
sbb
(bad)
retf
cld
clc
pop
mov
and
xor
test
or
mov
mov
pop
jns
scas
aam
loopne
neg
push
push
jnp
(bad)
cmp
call
test
xchg
in
ins
in
js
fadd
mov
lods
(bad)
call
mov
xor
test
fild
lea
or
ss
jo
sahf
lock
jbe
inc
mov
mov
pop
dec
xchg
adc
jl
sub
push
xchg
push
(bad)
or
mov
pop
add
mov
call
jge
sahf
(bad)
icebp
inc
dec
adc
mov
out
jae
and
call
mov
imul
mov
pop
fsubr
je
or
ds
xchg
scas
(bad)
pop
mov
sub
loopne
sbb
cmp
dec
inc
xchg
cmp
ror
xchg
fiadd
rcl
loop
ret
mov
push
lea
cmp
cdq
sar
sub
pop
dec
ss
pop
and
sbb
(bad)
repnz
ja
jmp
cld
lock
pop
push
cmp
arpl
stos
push
push
dec
cs
mov
push
jne
cmp
pop
mov
aam
xchg
sbb
outs
leave
jg
ins
bound
inc
xor
movntq
call
mov
cmp
bound
sbb
ins
test
ja
mov
jl
movs
mov
addr16
ins
ds
or
imul
int
inc
inc
add
mov
pop
cmp
mov
test
mov
sub
sub
mov
mov
jg
pop
add
mov
xchg
mov
and
adc
repnz
mov
out
std
hlt
adc
cmp
aad
sahf
xchg
out
adc
xchg
out
sahf
ins
sub
outs
sub
xor
cmp
cmp
cli
data16
cmp
inc
sbb
jne
inc
clc
mov
movs
xchg
leave
jg
xchg
(bad)
and
mov
fistp
(bad)
xor
loop
andps
push
out
add
dec
cmp
addr16
loopne
int3
in
dec
push
push
rcr
jne
aad
mov
sbb
mov
(bad)
test
not
imul
or
push
cmp
and
cmps
jge
loop
xchg
xchg
mov
mov
(bad)
lods
inc
xchg
and
xchg
arpl
mov
or
push
int
mov
sub
fcomip
sbb
mov
aaa
fdivrp
clc
jle
aaa
cli
push
sbb
adc
(bad)
cli
adc
imul
cld
pop
mov
imul
ss
mov
arpl
(bad)
out
test
push
push
retf
jmp
mov
mov
retf
sbb
arpl
jle
add
fst
repnz
xchg
cmp
inc
pop
pop
cmp
fdiv
adc
cmp
xor
aas
or
add
inc
bound
push
ins
out
adc
jp
jmp
mov
mov
aas
xchg
adc
cmp
mov
xchg
sar
(bad)
mov
cli
(bad)
je
das
push
inc
inc
jle
lods
mov
jns
test
pop
(bad)
push
xchg
gs
jns
test
mov
repz
(bad)
cmp
cs
arpl
gs
sub
mov
in
xchg
dec
(bad)
inc
pop
outs
mov
push
inc
(bad)
pop
cld
dec
nop
retf
fisubr
mov
xchg
pop
cmp
ret
lods
icebp
test
add
leave
data16
mov
jecxz
mov
icebp
test
ss
xor
test
pusha
mov
pop
data16
xor
movs
push
mov
loop
(bad)
outs
out
in
push
xlat
lods
sub
fisttp
aad
icebp
xor
jmp
dec
xor
mov
movs
push
xchg
sub
cmps
sub
sbb
push
movs
lods
or
dec
pop
fadd
ins
pop
cmps
dec
adc
or
popf
call
jo
call
imul
out
cmp
fld
lea
idiv
cmc
pop
ins
mov
and
lock
push
aad
and
outs
pushf
add
test
mov
and
sbb
in
jnp
stc
clc
cli
dec
mov
adc
sub
push
push
mov
mov
repz
jo
out
(bad)
sahf
loopne
inc
std
mov
mov
xchg
enter
xlat
mov
or
mov
fcomp
cld
popa
xchg
jo
(bad)
fmul
test
js
lea
cmp
mov
cmp
ret
mov
pop
cmp
scas
mov
xchg
daa
fild
mov
xor
test
mov
xor
test
nop
hlt
addr16
adc
mov
pop
outs
stos
int
sub
and
pop
mov
retf
xor
add
pop
inc
(bad)
mov
sub
movs
mov
mov
iret
jl
cmp
ret
data16
jle
stos
xchg
scas
pushf
xor
mov
ret
aam
fcomp
jge
jmp
mov
or
lahf
call
and
jp
mov
rol
sbb
xchg
shl
jmp
loop
in
gs
jp
jo
leave
ss
jmp
xor
ja
jp
dec
sahf
ret
lea
ss
dec
outs
(bad)
sub
dec
hlt
test
jmp
mov
xchg
icebp
inc
imul
adc
push
shl
outs
cmp
test
(bad)
mov
xor
pop
into
push
cli
out
pusha
ror
fdiv
sub
loopne
stc
(bad)
(bad)
ror
shl
add
nop
ja
cmc
mov
cmp
pop
in
adc
xchg
mov
cmps
xor
xchg
bound
add
xor
js
fldcw
outs
or
pop
(bad)
mov
mov
imul
mov
lock
sub
cmps
push
mov
mov
movs
popw
xor
inc
sub
daa
xchg
(bad)
retf
sbb
cwde
hlt
test
sub
mov
cmp
sbb
and
xchg
div
fcmovnb
repnz
in
inc
push
(bad)
int
push
idiv
cmp
dec
(bad)
and
cs
xlat
push
adc
cld
lock
pop
lahf
and
sub
xchg
push
ficomp
push
arpl
hlt
call
xchg
push
arpl
sbb
fdivr
icebp
dec
xchg
and
pop
pop
jns
cmp
in
inc
mov
ja
hlt
outs
mov
jg
gs
or
or
fcomi
stos
rol
cmp
or
es
fs
ror
mov
popf
xor
pop
jne
mov
sbb
je
ret
pop
es
lods
cmp
aad
outs
or
inc
retf
out
sahf
push
sub
test
adc
mov
fld
out
pop
sbb
or
out
and
add
mov
mov
loopne
add
xchg
push
or
shr
js
pop
cmp
rcl
mov
mov
shr
mov
or
dec
dec
cwde
or
inc
cmp
mov
add
pop
fisub
in
ret
push
mov
lahf
movs
dec
test
pushf
frstor
in
sti
inc
push
ret
das
cmps
iret
dec
push
in
aaa
pop
mov
test
mov
sub
jne
out
mov
jne
and
mov
and
and
dec
pop
dec
es
(bad)
or
mov
mov
stc
push
jo
sbb
adc
das
pop
imul
mov
imul
mov
mov
cmps
call
xor
mov
ja
sbb
(bad)
dec
or
sbb
adc
sahf
(bad)
dec
mov
mov
jae
sbb
sub
mov
mov
sub
idiv
jbe
(bad)
fcom
mov
pop
jle
push
sbb
and
stos
scas
push
outs
jnp
dec
(bad)
jmp
push
cmp
mov
movs
ss
mov
sbb
js
pop
jae
sar
push
es
test
adc
addr16
bound
mov
jnp
lods
mov
(bad)
pop
(bad)
ins
or
adc
ja
jae
les
push
jnp
cmp
dec
xchg
pop
pop
fwait
sub
jae
cmp
dec
and
pusha
sub
neg
xchg
lods
pop
mov
mov
mov
call
xchg
fs
pop
movs
out
cli
ficomp
jg
dec
jecxz
mov
sbb
jp
mov
retf
ret
dec
int3
add
out
pop
cmp
sub
xor
outs
jl
jecxz
test
fs
rcr
mov
fistp
mov
cmp
mov
and
inc
test
pop
sbb
xlat
out
pop
aam
push
jb
cmp
das
sub
cs
mov
out
jl
cwde
jnp
idiv
fild
inc
xchg
loopne
lock
sahf
or
or
ins
or
inc
mov
xchg
mov
out
sub
shrd
(bad)
arpl
inc
inc
jmp
ja
ret
sub
pop
pushf
jae
lods
or
pop
lods
jne
add
call
mov
xchg
pop
adc
ins
jne
mov
adc
inc
mov
and
inc
es
jno
std
mov
mov
aaa
fwait
and
fcmovb
push
mov
push
push
pop
outs
jbe
test
mov
push
push
sbb
imul
cmp
test
mov
or
fist
pusha
shl
test
or
xchg
cwde
cld
cmp
inc
cmc
sbb
push
mov
outs
repz
imul
push
stos
shr
mov
mov
xor
cmp
fmul
loop
jmp
xchg
cli
sub
cmps
jbe
cmp
jns
pop
adc
rol
je
xchg
xchg
mov
sahf
xchg
push
scas
mov
and
cmp
inc
popa
aaa
cmp
ds
pop
mov
ret
inc
enter
clc
jge
mov
mov
or
cmp
push
lods
ins
xchg
push
(bad)
lods
ror
push
push
shl
cmp
jo
imul
repz
test
sub
sub
aas
inc
stos
movs
mov
std
xchg
in
add
nop
jl
js
ret
iret
jmp
mov
outs
lods
je
(bad)
enter
xor
cld
pop
add
ficom
aas
push
adc
in
loopne
std
dec
out
cmps
call
mov
cmc
in
loope
fmul
add
mov
cmp
ret
arpl
mul
mov
aad
xchg
lea
jmp
xor
or
sti
and
inc
ins
mov
std
or
xor
jbe
inc
dec
mov
dec
inc
or
or
imul
pop
sub
add
mov
fist
mov
xor
cwde
mov
mov
cmp
sbb
leave
pop
mov
repnz
cld
lock
scas
push
mov
push
or
add
outs
cmp
inc
adc
mov
inc
in
jo
loop
inc
cmp
sub
pop
fmul
cmps
sbb
ret
repnz
mov
sbb
bound
or
in
call
mov
jae
mov
jae
popa
fbstp
fnstsw
ins
or
in
jp
and
iret
shl
push
mov
pop
outs
sub
jae
jns
jbe
cld
mov
ins
pop
pop
lahf
mov
les
xor
enter
sbb
pop
sub
inc
sbb
jmp
pop
jb
iret
push
mov
push
sbb
jg
or
or
mov
(bad)
int
mov
hlt
pop
clc
mov
mov
push
dec
adc
mov
dec
dec
mov
add
dec
mov
push
xor
test
push
jne
loope
enter
shr
cmp
repz
in
pop
fxch
ss
mov
cli
scas
ins
jmp
push
out
cdq
or
loopne
mov
push
(bad)
jecxz
sti
dec
ret
push
nop
sar
mov
mov
pop
stos
jo
xor
hlt
cmps
jb
add
mov
retf
jle
jecxz
pop
jp
xchg
mov
loopne
fimul
xchg
adc
das
ins
cdq
imul
mov
(bad)
jbe
(bad)
jmp
xchg
sahf
adc
in
jl
fld
dec
es
fld
sub
jecxz
jb
call
jmp
in
dec
ins
push
inc
pop
cmps
dec
mov
jnp
popf
adc
or
jo
push
ja
cld
cmp
das
es
out
or
adc
loope
dec
add
adc
in
movs
mov
push
ror
out
das
pop
test
push
pop
hlt
and
mov
into
aaa
leave
loope
mov
push
and
adc
fiadd
cmp
call
add
adc
movs
cmps
push
inc
xchg
cmp
xchg
(bad)
jmp
loopne
xchg
fist
xor
(bad)
and
dec
jb
(bad)
pop
mov
out
pop
lahf
mov
cmps
mov
(bad)
dec
idiv
(bad)
pop
adc
call
icebp
cmp
jae
retf
push
pop
mov
popa
sub
hlt
dec
ss
arpl
jmp
xor
popf
dec
adc
xchg
pushf
shl
push
xchg
retf
sub
mov
and
in
les
pop
out
out
movs
jo
jbe
mov
dec
add
jecxz
sub
mov
fild
call
jmp
das
sbb
push
jle
add
pop
js
jmp
mov
xor
pop
stos
xchg
mov
popa
inc
sub
lods
scas
daa
test
pop
outs
into
and
scas
fnstcw
mov
retf
sbb
pop
xor
add
(bad)
jmp
push
xrelease
jp
enter
test
outs
add
add
or
mov
pop
cmp
xlat
sub
rol
xchg
fiadd
sbb
push
pop
scas
and
inc
adc
out
fmul
icebp
in
lar
add
aam
ins
lea
je
and
inc
xchg
(bad)
rol
mov
lock
pop
jns
stos
push
(bad)
ret
in
test
or
inc
repz
sbb
mov
inc
movs
icebp
push
dec
movs
xlat
outs
fnstenv
clc
and
fsubr
xchg
les
stos
mov
rcl
and
clc
les
mov
inc
mov
lock
add
(bad)
cmps
add
test
dec
mov
dec
lods
xchg
pop
mov
aas
jmp
aad
xor
enter
ss
jge
mov
push
sub
mov
mov
cwde
sbb
xchg
mov
sbb
add
cmp
and
jmp
xor
mov
mov
test
cld
xchg
in
mov
retf
popa
mov
push
cmp
sbb
mov
mov
add
cmp
mov
xchg
retf
in
jl
stos
cmp
std
push
jl
(bad)
push
mov
mov
imul
dec
ins
popa
ret
ins
mov
cmp
shl
retf
cli
jbe
shr
rep
repnz
xor
aas
stos
sti
mov
mov
out
mov
(bad)
neg
aas
ficomp
cli
repz
outs
pop
jbe
mov
ret
icebp
stos
ss
dec
lock
sub
out
shl
not
cdq
mov
lock
pop
sti
repnz
xchg
mul
cmc
sbb
and
mov
or
xchg
push
mov
inc
xlat
pusha
loopne
adc
sbb
mov
mov
xchg
loope
and
jo
mov
push
sbb
push
lds
dec
jmp
fisttp
jbe
xor
inc
(bad)
xchg
lock
imul
add
jp
mov
or
mov
cs
addr16
pop
imul
imul
lea
push
jb
iret
pop
in
call
dec
xchg
mov
lods
mov
int3
add
push
mov
(bad)
sub
xchg
or
outs
mov
shr
ss
js
inc
xchg
cmps
push
mov
mov
adc
mov
pop
jp
pop
adc
adc
add
pop
ror
mov
cmp
jp
test
xchg
fsubr
mov
and
in
inc
push
xchg
dec
jl
cmps
mov
mov
sub
cmps
cld
sub
pop
pop
out
add
sbb
jmp
ss
xchg
sbb
mov
out
pop
ret
cmp
loope
add
push
dec
mov
fdivr
cdq
cmc
ret
or
mov
jae
pop
cmp
stc
inc
fsub
inc
jl
shl
mov
add
push
hlt
fstp
rol
fyl2xp1
jno
retf
sbb
cmp
leave
mov
outs
xor
je
icebp
mov
jb
scas
sbb
sub
ret
lods
dec
push
mov
cmp
cmc
aam
mov
inc
and
xor
out
(bad)
push
push
mov
aaa
sub
sahf
fst
pusha
(bad)
xchg
aam
cld
cmp
inc
lods
fs
pop
rcl
mov
mov
data16
shl
cld
adc
dec
inc
sahf
sbb
xchg
push
xchg
mov
(bad)
sub
enter
mov
ins
mov
into
mov
fnstenv
cmp
test
ret
pop
aas
xor
jge
jnp
cdq
sar
pop
lock
mov
sbb
icebp
mov
push
stos
add
fisttp
xor
inc
imul
add
inc
cs
data16
adc
add
test
add
psraw
imul
add
mov
xor
cmps
es
fiadd
test
lock
in
and
add
ficom
rol
mov
dec
jecxz
sub
mov
outs
outs
mov
stos
pop
les
ss
out
and
bound
clc
neg
hlt
xchg
mov
adc
adc
mov
or
and
lahf
not
push
jns
daa
mov
sahf
fs
xchg
pop
pop
sub
jmp
adc
repnz
and
aam
sub
icebp
inc
movs
cmp
pop
pop
add
ins
and
ret
repz
shl
cdq
cmp
repnz
in
jle
fild
mov
loope
xchg
add
clc
mov
push
sub
or
lea
push
outs
outs
cwde
pop
cmp
push
push
in
xchg
jmp
adc
into
dec
sti
adc
rol
inc
mov
cwde
jno
mov
stc
repnz
push
jl
int
cmp
sbb
add
jg
data16
dec
pop
int3
movs
jmp
ds
xor
inc
int
iret
daa
xchg
and
mov
out
pushf
(bad)
push
iret
adc
inc
or
daa
jo
inc
jmp
or
and
jbe
add
pop
xchg
adc
and
ret
mov
cmp
xchg
repnz
ja
pop
lock
frstpm(287
fistp
ret
cmc
lods
mov
ret
call
hlt
nop
shr
jo
jmp
call
daa
push
clc
ins
pop
mov
dec
cmp
adc
dec
or
inc
cld
imul
imul
cmp
jae
or
retf
nop
pop
aaa
scas
xor
test
cmp
loopne
gs
inc
imul
cmps
ret
repz
sti
inc
jo
push
pop
test
mov
mov
or
add
pop
fdiv
js
pushf
fdiv
push
daa
(bad)
jp
loope
es
pop
enter
dec
loop
fcom
repz
pop
(bad)
fstp
int3
loope
(bad)
dec
mov
pop
lods
repz
out
fst
jle
in
add
dec
cdq
mov
ret
inc
fnsave
sub
pop
pop
in
mov
xor
(bad)
cdq
cdq
push
cmp
ins
(bad)
scas
or
and
inc
fdivr
add
int3
scas
fsub
jae
ins
mov
adc
pushf
lock
or
shl
in
mov
mov
jl
cwde
sbb
inc
movs
ins
dec
loopne
fmul
sub
jns
loopne
pop
sbb
into
in
outs
jb
add
test
xchg
add
xchg
das
mov
shl
es
mov
loop
and
ins
and
fild
rol
fstp
mov
jle
pop
rcl
retf
pop
ins
mov
push
mov
push
jle
lods
loop
sbb
outs
icebp
inc
sub
(bad)
neg
in
inc
popa
popa
test
iret
pop
xor
push
or
jmp
jle
pop
out
lods
ins
into
in
sub
loopne
retf
icebp
cmp
std
es
sub
jae
clc
pushf
mov
dec
pop
xchg
ja
mov
test
push
add
pusha
xlat
cmc
in
mov
adc
cdq
and
mov
jo
ds
pop
popf
adc
mov
call
mov
fmul
lds
ret
dec
arpl
movs
in
je
inc
(bad)
push
push
sbb
mov
push
and
mov
fidivr
or
mov
stos
mov
adc
mov
xor
xor
rol
add
push
mov
ret
dec
ds
pop
test
cs
pop
mov
or
popa
ret
or
out
loope
icebp
xor
pop
rcr
dec
sub
dec
scas
cmc
jge
add
pop
ffreep
jl
dec
bound
add
div
cmp
and
ficom
icebp
outs
int
sub
(bad)
xor
test
xchg
stc
xchg
loopne
into
pushf
cmps
mov
scas
mov
(bad)
gs
or
xor
outs
inc
repnz
pusha
pop
jnp
mov
sti
jb
jbe
fisttp
lds
cs
jmp
jp
jg
or
mov
pop
sbb
lds
xor
sti
test
xchg
cmp
jns
jae
pushf
xor
jecxz
jne
in
add
sbb
adc
cs
rol
scas
sar
stos
retf
les
jbe
and
push
add
into
leave
push
ja
pop
out
retf
(bad)
sub
aad
mov
lock
mov
pusha
cmps
cmp
stos
icebp
lods
repnz
imul
call
fld
adc
outs
js
or
addr16
shr
in
je
sbb
outs
mov
arpl
lock
cmp
and
bound
(bad)
fldcw
jbe
(bad)
call
sbb
clc
js
sti
pop
push
jmp
and
pop
xor
pop
js
pop
jns
ret
dec
fistp
aad
fcmovnbe
xor
jb
jae
mov
int
repz
and
fsub
jmp
movs
cli
cmp
daa
bound
or
and
jg
test
je
pop
imul
fisubr
inc
push
mov
add
mov
lock
(bad)
(bad)
push
and
test
mov
jb
add
sahf
shr
bound
xor
and
pop
jle
push
andps
pop
xchg
stos
mov
push
in
inc
inc
cmp
movs
iret
pop
call
shl
dec
mov
enter
stc
cmc
sbb
mov
das
stos
rcl
popa
pop
or
or
jnp
ret
aad
push
clc
push
ds
dec
pop
pop
(bad)
mov
cwde
xor
xchg
xchg
jp
in
jge
in
or
imul
adc
fs
mov
popa
cmp
sbb
pop
mov
pop
pcmpgtb
bnd
neg
div
shl
xchg
popa
push
nop
mov
inc
add
mov
enter
mov
ds
adc
or
lock
inc
pop
jbe
xchg
cmp
pop
call
sub
loopne
pop
call
js
mov
test
(bad)
push
dec
int3
mov
inc
xchg
pusha
fdiv
xor
sahf
fidivr
ret
cmc
xchg
mov
jno
xor
add
mov
shr
mov
xor
or
jbe
loopne
retf
arpl
dec
or
repnz
pop
outs
jns
(bad)
mov
arpl
cmovne
jp
lods
add
mov
loope
aad
dec
es
mov
(bad)
bound
int3
in
pop
in
pop
mov
add
loopne
add
cs
mov
sub
daa
iret
cmps
les
fstp
push
scas
mov
pop
and
addr16
mov
movs
frstor
jnp
dec
fist
pop
jecxz
addr16
cmp
pop
cmc
and
int3
mov
mov
pop
inc
xchg
xor
adc
rol
pop
adc
cmp
cmp
add
cmp
push
cli
test
and
imul
pop
pop
and
not
or
mov
push
or
(bad)
aam
add
mov
in
pushf
fwait
hlt
test
sub
loopne
jmp
repnz
outs
adc
push
rcl
xor
lahf
jmp
je
imul
mov
pop
ret
or
clc
test
mov
(bad)
sub
div
mov
xchg
adc
enter
ins
sbb
ret
push
(bad)
lock
push
or
scas
adc
cmp
outs
nop
stc
dec
stos
jg
iret
and
(bad)
outs
les
repnz
sbb
aam
into
ret
sub
push
int3
or
dec
mov
sub
cmp
xchg
mov
mov
je
add
sbb
cmps
repnz
ds
mov
into
inc
push
les
aaa
out
retf
jmp
pop
adc
pop
std
ds
mov
inc
xor
dec
adc
xchg
dec
add
mov
data16
sbb
arpl
cmp
sbb
lods
pushf
mov
pop
jecxz
aas
mov
pop
leave
in
aaa
xchg
fnstcw
sahf
sub
mov
sbb
bound
in
into
sub
in
aaa
inc
loope
scas
or
fwait
pushf
loop
iret
mov
mov
mov
cld
in
or
add
pop
jmp
mov
dec
call
call
adc
cmps
aaa
mov
add
pop
inc
dec
lods
mov
dec
pop
push
pop
movs
pop
pop
arpl
fwait
in
sti
jb
cwde
pop
ror
inc
scas
test
in
or
sbb
add
jp
cmps
mov
retf
lds
retf
push
mov
neg
popa
sar
rcr
pop
pop
aam
sbb
lahf
lods
xor
and
mov
dec
sbb
rcr
adc
jmp
loop
loope
aas
mov
lahf
mov
and
ins
inc
rol
adc
mov
mov
fld
ret
idiv
mov
xor
mov
hlt
jbe
fs
loope
mov
outs
jmp
jno
push
call
out
lods
pop
sti
jge
push
pop
gs
ss
jle
add
loope
adc
xor
push
add
imul
jge
xor
jecxz
jge
mov
jno
pop
(bad)
(bad)
scas
out
pop
fcmovb
imul
or
add
or
jno
xchg
mov
(bad)
cmc
std
out
arpl
jmp
ss
(bad)
jmp
cdq
pop
in
in
bound
inc
movs
hlt
pop
imul
sbb
dec
cmp
mov
call
sub
jle
pop
fcom
pop
ror
mov
fcmovnb
inc
fld
call
pop
ins
push
mov
ins
xchg
ja
mov
sub
push
xchg
lds
cmp
xor
inc
inc
cs
push
mov
data16
in
sbb
mov
cmps
repnz
jl
mov
jne
jb
adc
pop
add
xchg
cmc
inc
and
arpl
inc
or
cmps
dec
add
cmps
and
loop
fcomp
rcr
ficom
ss
daa
enter
retf
nop
sbb
jo
sbb
ins
aam
int
mov
retf
cmps
sar
inc
jge
sub
mov
mov
inc
push
add
arpl
mov
sub
loop
mov
push
lock
push
in
aaa
xchg
mov
add
jge
jmp
and
xchg
mov
add
ins
in
mov
fst
js
xchg
das
fidiv
out
add
ret
mov
jl
inc
ss
idiv
in
fcmovne
in
inc
pop
call
stc
dec
int
das
inc
xor
dec
ss
jecxz
cmp
mov
xchg
clc
or
sub
mov
call
pop
cmp
imul
fmul
adc
int
call
dec
add
add
lods
retf
out
movs
and
lds
add
repz
mov
scas
xlat
fadd
popfw
sbb
(bad)
mov
xlat
stc
add
std
fadd
jmp
xchg
mov
add
mov
dec
arpl
shl
xor
pop
adc
out
ret
popf
cmp
mov
mov
push
xchg
push
stos
(bad)
out
jge
cmp
xor
pushf
cwde
pop
jae
or
ins
in
cs
xchg
dec
in
repz
icebp
ja
xor
pop
sar
jne
fild
loop
call
adc
jne
and
shl
push
lods
loop
cmp
mov
shr
cmp
dec
aad
icebp
je
aad
cmp
fsubr
jl
fadd
mov
jle
(bad)
int3
inc
fisttp
into
add
cmp
mov
and
sub
lods
mov
add
push
stc
pushf
clc
inc
pop
test
mov
mov
xor
inc
mov
leave
mov
cmc
retf
lahf
fscale
fldcw
cld
mov
or
push
or
adc
mov
retf
mov
gs
addr16
mov
out
mov
push
arpl
jmp
sbb
sub
call
pop
cli
sar
push
adc
mov
pop
jp
lea
xchg
hlt
inc
pop
loopne
and
in
popa
mov
jo
fldcw
jnp
cld
sub
mov
dec
das
xchg
in
imul
xchg
and
sbb
push
pop
retf
cmps
int3
xchg
mov
and
pop
test
or
cmc
pop
stos
jbe
jb
hlt
gs
dec
(bad)
adc
sti
and
mov
mov
test
ror
cmp
les
xchg
imul
test
stc
bound
xchg
bound
fcomip
mov
mov
mov
ret
inc
out
popf
adc
jmp
xchg
test
add
fnclex
cmc
fild
ror
mov
aaa
(bad)
and
dec
retf
shr
shr
jg
mov
into
inc
adc
ins
and
adc
mov
cmp
pop
movs
test
add
dec
jg
push
stos
jmp
xchg
hlt
sbb
in
fnsetpm(287
cli
in
aad
pop
stc
nop
lahf
push
adc
aas
out
dec
test
fwait
ins
sub
out
loop
sbb
xor
jns
cmp
cmps
in
fdivr
add
fcom
push
pop
sub
imul
outs
in
movs
pop
or
mov
sahf
test
ror
icebp
ffree
mov
jge
pusha
lds
(bad)
jmp
mov
xchg
pop
sbb
mov
jmp
dec
pop
add
fidiv
cmp
rol
mov
retf
sub
dec
clc
test
ror
sub
mov
push
pop
mov
cmp
lds
sahf
or
mov
arpl
ret
xor
sbb
jbe
(bad)
aam
xchg
fidivr
jmp
jb
in
push
cdq
das
mov
xchg
(bad)
jo
(bad)
mov
push
lods
xchg
enter
jl
and
rol
retf
jo
cld
adc
call
popa
jae
cdq
add
dec
mov
adc
xor
mov
add
stos
or
scas
mul
and
dec
lds
adc
inc
mov
repnz
inc
into
sub
icebp
push
xor
add
and
test
imul
xor
add
cdq
mov
shl
jns
pop
mov
jg
push
das
scas
aam
ret
jg
cmp
sar
lahf
(bad)
jmp
cwde
outs
ret
stos
cmps
std
loop
call
sbb
inc
sbb
retf
in
lds
mov
inc
jge
(bad)
push
cmp
push
and
fdiv
aad
mov
pop
scas
xor
jno
shl
adc
mov
pop
dec
out
sbb
adc
cmc
cmp
push
add
cmp
dec
push
dec
cmc
add
adc
jmp
xchg
in
mov
xchg
je
xchg
xchg
repnz
sbb
pop
add
pop
dec
jbe
ds
ja
test
push
jp
(bad)
int
fild
je
mov
mov
mov
push
mov
push
mov
mov
mov
jmp
xchg
stc
cmps
repz
mov
sti
call
pop
movs
call
inc
ror
jmp
push
ins
cmc
mov
fwait
add
mov
ret
nop
fistp
cmp
sbb
call
dec
shl
(bad)
pop
sub
and
inc
cmp
test
mov
sbb
shl
inc
or
test
mov
and
pop
dec
sbb
adc
mov
ret
xchg
jge
mov
and
mov
push
cmps
inc
or
out
xchg
or
pop
or
aas
retf
xchg
arpl
test
out
jle
jb
repnz
imul
not
pop
inc
or
lds
out
mov
js
neg
in
inc
xor
mov
(bad)
loop
lea
push
cmp
(bad)
jb
xchg
adc
jno
xor
sbb
mov
test
push
sbb
inc
lods
lahf
adc
jne
jge
pop
adc
adc
test
sub
sbb
cmp
xchg
mov
hlt
push
stos
cmp
lods
xchg
fstp
xchg
sbb
ret
ds
adc
stos
sub
cmp
mov
popf
inc
xor
ins
jecxz
fwait
mov
push
(bad)
fadd
sbb
das
jo
adc
iret
out
xchg
pop
stc
and
imul
stc
jge
int
(bad)
lock
pop
push
cmp
xor
pop
call
pop
sub
stos
jmp
out
(bad)
jp
and
retf
xchg
or
mov
bound
or
xchg
out
fiadd
push
retf
xor
sub
adc
stc
and
sbb
and
push
sub
sub
ds
xor
sbb
dec
pop
mov
shl
jp
jg
lea
rcpps
and
(bad)
mov
xchg
and
cdq
sti
bound
jns
aaa
lods
out
xor
jnp
add
(bad)
lods
call
xor
in
shl
pop
dec
jecxz
in
stc
lods
jge
call
mov
push
sbb
push
xor
push
cmp
dec
and
xor
mov
xchg
imul
mov
dec
mov
js
lea
dec
je
xor
test
xor
jbe
fwait
stos
pop
xchg
popf
or
dec
nop
pop
sbb
aaa
fs
mov
adc
sar
adc
xchg
jb
stos
lods
or
popf
jbe
add
cmc
or
popa
ror
mov
sbb
cld
jmp
aaa
and
loop
loop
mov
call
mov
and
std
repz
sub
jnp
std
(bad)
cmp
repz
pop
lea
rcr
stc
scas
daa
sahf
mov
push
xchg
add
dec
pop
fwait
jb
cwde
adc
xchg
jl
fld
movs
das
inc
fidivr
popf
cmps
icebp
dec
dec
mov
dec
and
call
mov
dec
imul
into
xlat
imul
or
loopne
(bad)
pop
(bad)
bound
mov
lahf
fild
ret
out
gs
sbb
movsx
xor
jmp
sti
ja
lock
or
or
push
adc
jmp
sar
fs
mov
mov
vmovaps
cmc
mov
nop
push
or
push
jecxz
push
inc
test
lock
mov
adc
in
cmp
arpl
ja
test
test
jl
jmp
inc
(bad)
icebp
push
or
jns
test
outs
repz
ins
add
shl
push
cmp
jmp
in
cld
jg
imul
mov
aaa
dec
add
sbb
and
pop
loop
gs
mov
pusha
or
push
or
aad
pop
leave
lods
ss
xor
cwde
lea
inc
in
(bad)
xor
test
and
push
xchg
cs
mov
dec
mov
and
arpl
dec
and
inc
or
jle
dec
bound
inc
mov
test
ret
ret
or
pusha
call
lahf
mov
or
loop
mov
push
xchg
clc
call
xlat
push
ins
xchg
sbb
and
adc
mov
movs
xchg
bnd
sbb
cmp
push
lea
sbb
ret
fs
sbb
mov
jb
clc
repnz
pop
jle
ret
ins
fucomp
inc
ret
dec
and
and
out
pop
pop
sub
mov
shl
dec
adc
(bad)
ja
ins
pop
jae
push
xor
cld
adc
les
inc
jae
adc
push
sahf
fsub
pop
test
xor
sti
mov
clc
cwde
out
xchg
leave
xchg
outs
mov
test
retf
mov
ds
or
xlat
pusha
rcl
cwde
and
inc
jecxz
popa
adc
js
in
addr16
sbb
addr16
bound
jge
adc
shl
cld
stos
pusha
(bad)
(bad)
and
push
push
or
call
scas
aas
cmc
cmp
scas
leave
lock
jb
mov
mov
cmps
add
daa
push
sbb
std
xchg
push
mov
into
sbb
mov
sub
jae
je
add
outs
fst
outs
inc
iret
inc
and
loop
push
sub
sub
call
mov
mov
push
shl
std
div
das
call
sbb
cmp
mov
inc
jnp
mov
mov
mov
xor
pop
jmp
(bad)
stc
dec
push
retf
xor
jns
jmp
and
push
xchg
push
cmps
(bad)
push
dec
cmp
stc
mov
repz
retf
imul
outs
cmc
cmps
lea
pop
push
jle
cwde
push
or
mov
and
sar
ins
adc
mov
cmc
outs
and
adc
les
(bad)
stos
sub
mov
cmp
in
in
lods
and
gs
nop
jbe
push
or
inc
cmc
pop
xchg
add
inc
out
add
and
dec
js
and
icebp
push
pop
pop
xor
imul
inc
daa
pop
jl
call
adc
push
push
out
inc
(bad)
cwde
push
jmp
call
jnp
sbb
add
popa
hlt
adc
clc
dec
push
mov
xchg
rcr
inc
push
adc
xchg
ret
add
mov
cwde
dec
fidivr
pop
cwde
sbb
fstp
xor
sub
les
fld
jmp
mov
call
addr16
mov
jno
and
sub
rol
test
xchg
ror
(bad)
stos
push
mov
aad
bound
jnp
jp
out
nop
int
outs
dec
mov
sahf
xlat
pop
lea
stc
fs
(bad)
aam
dec
pop
lea
cmps
or
inc
cmp
ret
or
xor
jo
push
nop
or
pop
mov
jae
fwait
sub
jnp
cmp
loopne
cdq
mov
rdtsc
jg
jmp
push
aam
ss
in
arpl
xchg
push
aam
adc
jnp
add
iret
mov
ss
push
rcr
mov
dec
inc
(bad)
adc
pop
xor
les
rcr
add
xchg
mov
mov
idiv
push
mov
loopne
xor
xor
(bad)
pop
repz
in
inc
in
push
scas
pop
mov
xor
out
lods
pushf
push
push
imul
icebp
inc
push
mov
adc
jge
lahf
ret
mov
pop
hlt
add
stos
stos
xor
sub
ja
sbb
xchg
arpl
test
js
mov
ret
movs
icebp
xchg
das
test
xor
daa
mov
shl
(bad)
jmp
cwde
adc
adc
mov
leave
mov
out
sbb
pop
inc
pop
ins
sbb
xchg
(bad)
mov
inc
pushf
cmp
lods
sbb
in
push
sbb
pop
cld
lds
icebp
in
jns
xor
xor
call
dec
daa
pop
mov
jbe
sub
test
fdiv
fs
jns
mov
in
dec
push
pop
push
scas
ja
sub
stos
bound
hlt
(bad)
xchg
sbb
xor
call
aaa
mov
out
mov
retf
imul
imul
addr16
push
xor
dec
and
pop
xchg
out
dec
jge
add
adc
lock
cmc
sub
shr
mov
sub
jg
jbe
call
es
fwait
call
dec
jnp
in
aas
imul
and
pop
ret
jnp
push
push
or
mov
inc
sub
sbb
out
ret
add
xor
push
out
mov
jmp
out
leave
je
or
in
pop
in
and
gs
adc
pop
mov
and
mov
test
movs
icebp
add
and
jmp
lahf
int
repnz
mov
or
push
fistp
jp
inc
and
arpl
xchg
into
shr
dec
sub
jae
xlat
ins
test
or
xchg
cwde
mov
ja
dec
mov
xchg
lock
repz
icebp
clc
fsub
cmp
loope
cmps
rol
adc
jmp
xor
sbb
arpl
jo
inc
push
fs
fimul
repnz
xor
cwde
jo
mov
sub
int
push
cmps
mov
hlt
loope
pop
or
lahf
loope
repz
cmps
or
or
mov
addr16
cmp
xchg
je
add
sub
bound
in
mov
adc
pushf
std
lds
adc
call
mov
push
jb
ss
sbb
jb
mov
xor
adc
lea
hlt
call
lahf
iret
jnp
repnz
sbb
jno
and
push
lahf
sbb
aam
lahf
pop
stos
xchg
or
retf
aad
int
inc
and
(bad)
shr
cmp
lahf
or
jmp
and
dec
pop
cmp
xchg
dec
add
xor
arpl
mov
sbb
mov
inc
sbb
jecxz
out
out
cs
push
cmc
mov
xchg
jp
aam
lds
jecxz
into
push
ss
and
add
test
jo
adc
(bad)
iret
jnp
or
test
xor
xor
loopne
iret
fstp
or
stos
pop
(bad)
push
in
je
jmp
js
ret
lea
repz
jle
and
mov
and
lods
stc
jl
mov
out
sbb
inc
mov
dec
sub
mov
enter
xor
movs
and
and
lock
(bad)
xor
mov
lds
lods
inc
mov
fist
and
pop
je
mov
lods
and
adc
mov
dec
xchg
push
stc
or
xchg
add
xchg
inc
rcl
movntps
nop
and
push
jae
stos
mov
push
repz
pusha
xchg
mov
adc
jb
cmp
or
push
ret
shl
dec
shr
mov
add
or
mov
mov
aas
inc
ins
out
push
pop
mov
nop
das
fdivr
jae
or
inc
test
push
not
psubd
inc
add
cmp
pop
mov
inc
inc
add
inc
or
jle
aas
mov
dec
es
je
fldcw
xchg
push
sar
daa
in
xchg
pop
xchg
xchg
fwait
mov
es
pop
jb
out
in
xor
popf
pop
nop
mov
data16
and
data16
stos
iret
dec
inc
cmp
lock
icebp
sub
popa
push
mov
clc
and
mov
sbb
push
ins
xor
imul
jecxz
sbb
ss
out
mov
int3
pop
inc
stc
aaa
and
mov
cld
les
pop
dec
iret
adc
pop
add
into
hlt
loope
dec
in
xchg
push
setne
test
inc
and
gs
div
push
sub
mov
add
xlat
push
mov
sbb
icebp
and
push
and
xchg
jae
mov
lahf
mov
dec
or
jg
les
xchg
sub
jno
and
mov
push
sbb
push
add
add
push
inc
sbb
retf
lods
retf
mov
inc
pop
jmp
cwde
mov
int3
and
fnstenv
lahf
jg
arpl
push
add
idiv
loopne
jecxz
fadd
shl
scas
inc
xchg
popa
jp
inc
lock
mov
and
xor
adc
in
or
add
outs
jae
push
stos
popf
fsubr
imul
sahf
lea
xor
mov
and
push
int3
pop
push
add
hlt
adc
or
sar
sub
int
aaa
add
xchg
add
retf
fwait
sbb
pushf
iret
mov
adc
xchg
repnz
xor
pop
mov
leave
xchg
retf
cmp
imul
xchg
jmp
jno
or
addr16
push
jl
inc
push
repnz
(bad)
sbb
imul
das
jae
cmp
aad
sbb
mov
mov
jge
dec
dec
das
push
test
lds
rcr
inc
in
adc
(bad)
mov
fidiv
data16
aas
add
xchg
add
dec
sub
aam
fnsave
push
aad
lock
sub
loope
and
mov
retf
idiv
jmp
pop
hlt
into
es
adc
rcl
xor
(bad)
fidivr
rcr
pusha
mov
(bad)
enter
fild
pop
(bad)
arpl
imul
je
loopne
mov
or
xor
dec
retf
sub
push
leave
xchg
fwait
inc
cwde
mov
popa
fldenv
loop
adc
(bad)
shl
stos
rcl
movs
adc
dec
xchg
jecxz
add
out
sub
clc
cdq
push
pop
in
cwde
jl
fs
sbb
push
jmp
ds
and
movs
sbb
inc
push
std
jg
dec
jo
outs
add
push
ds
adc
mov
xor
rcr
out
jo
fcomp
aaa
xchg
inc
out
sub
dec
mov
pop
call
mov
add
or
iret
fcmovu
push
push
rcr
js
cmps
shl
push
cmp
adc
xchg
test
imul
sbb
nop
jb
cmp
push
xlat
in
stos
das
mov
mov
pop
in
xor
jns
in
call
add
pop
inc
mov
dec
(bad)
ds
sti
test
xor
addr16
shl
popa
div
(bad)
xchg
push
call
in
and
aam
call
xor
dec
and
arpl
add
pop
mov
fbstp
mov
shl
adc
xchg
out
inc
lods
ret
cmp
ja
xchg
in
in
sbb
(bad)
sti
jne
rcl
mov
shr
hlt
ficomp
xchg
fs
in
dec
retf
and
push
mov
ror
call
mov
inc
and
jle
ror
jae
dec
cmp
pop
cs
fsubr
push
mov
mov
xchg
je
or
push
ja
mov
or
pop
and
pop
mov
daa
cmp
cmp
(bad)
aaa
inc
lea
jmp
cs
lods
jno
mov
push
std
xchg
or
sub
adc
fisubr
mov
mov
push
rcr
lock
xchg
cmp
in
sub
call
fstp
pop
out
mov
repz
lea
and
jb
int
xchg
jnp
pop
xchg
push
cli
cwde
daa
sti
adc
xchg
sbb
mov
aaa
fwait
inc
mov
loope
jl
aas
ins
adc
fst
and
test
and
vaddss
sbb
je
je
outs
sub
and
test
dec
or
loopne
outs
out
xchg
mov
std
test
xchg
add
icebp
mov
inc
movs
jne
arpl
jo
jle
hlt
cmp
xor
les
pop
adc
outs
xor
bound
add
in
and
cmp
lahf
inc
jnp
pop
mov
xchg
xor
mov
jns
rcr
sbb
jmp
arpl
push
push
sahf
pop
push
xlat
jb
add
jne
mov
dec
test
movs
les
and
mov
xor
jl
mov
and
pop
dec
cmp
xor
sahf
xchg
jg
add
push
dec
dec
mov
pop
or
imul
in
xor
leave
push
xchg
les
test
arpl
repnz
jg
adc
jmp
add
push
leave
repz
int3
mov
(bad)
mov
and
and
and
push
dec
daa
jno
dec
ret
pop
std
call
les
pop
scas
pop
cmp
dec
mov
es
gs
outs
dec
test
adc
pop
fcom
dec
(bad)
inc
add
imul
or
mov
sub
test
sti
or
xor
clc
enter
jae
pop
push
push
sbb
lea
ror
or
repnz
out
add
outs
test
(bad)
fnstsw
xor
cmps
lods
out
clc
das
std
mov
add
and
jge
fdivr
jae
lds
hlt
leave
add
fs
mov
push
imul
xchg
gs
outs
inc
jno
or
sahf
loope
or
adc
loopne
jmp
pop
and
dec
sub
int3
mov
sbb
xchg
cmp
cld
or
pop
pushf
mov
cmp
(bad)
jno
nop
fild
adc
cmps
sub
mov
stc
scas
icebp
jg
sar
sbb
cmp
mov
and
imul
jp
sub
loope
aam
(bad)
cmp
xor
cli
ret
inc
jmp
dec
jnp
bswap
popa
push
neg
aaa
mov
pop
or
mov
ret
lods
call
jae
mov
in
xchg
daa
cmp
add
(bad)
cmps
(bad)
pop
sbb
push
pop
inc
or
or
sbb
sub
mov
ret
push
mov
push
movs
or
(bad)
nop
int
push
fcom
movs
push
ret
aam
xor
mov
retf
mov
sti
mov
mov
add
jle
or
out
dec
mov
or
xor
popf
push
xchg
jbe
ror
(bad)
fstp
(bad)
cmp
pop
jno
cmc
sbb
xor
cmp
push
mov
mov
leave
add
push
sbb
xchg
arpl
aas
leave
hlt
cmp
add
rcl
ss
mov
sub
ins
pop
xchg
rcr
add
sbb
(bad)
add
enter
mov
test
sbb
repz
mov
jne
call
mov
mov
fdiv
cmp
or
add
jle
or
cli
div
dec
push
(bad)
xchg
jle
lea
aaa
lea
add
mov
ins
enter
mov
mov
test
ss
xor
xor
sahf
push
pop
dec
movs
lock
mov
jmp
mov
in
ins
enter
inc
cmp
cmp
fwait
pop
push
inc
and
jle
or
(bad)
lock
jmp
push
loop
aaa
fs
add
not
push
shl
je
inc
xchg
stc
(bad)
mov
xchg
call
dec
xor
adc
pop
fwait
popa
pushf
xor
(bad)
or
std
push
sub
loop
cmp
arpl
inc
sub
loope
stc
aaa
in
inc
(bad)
out
clc
jbe
cmp
cmp
adc
push
push
test
mov
repz
cmp
mov
cmp
neg
cmps
(bad)
sub
mov
adc
sub
(bad)
mov
scas
cmc
(bad)
mov
inc
mov
dec
inc
xchg
jns
ja
(bad)
(bad)
adc
and
pop
es
pop
or
je
dec
es
movs
adc
adc
dec
data16
popf
dec
sti
pop
dec
cli
aaa
sbb
mov
bound
nop
ins
scas
mov
inc
hlt
ret
test
mov
test
ror
and
mov
movs
cmp
cmc
or
mov
movs
test
xchg
aas
mov
mov
mov
jbe
inc
push
sti
setp
std
arpl
dec
cmp
sahf
and
pop
jns
mov
mov
ins
or
inc
xor
inc
sbb
pop
rcr
push
ja
ja
stc
jne
cmps
pop
sub
aam
xor
test
adc
cwde
or
mov
ret
mov
stos
cmp
xchg
jbe
fwait
aam
lock
or
jg
fcomp
inc
ds
xor
inc
xor
sbb
hlt
push
loope
stc
and
into
mov
mov
data16
imul
pop
ja
ins
xlat
xor
xor
cmps
and
lock
leave
loop
sub
mov
bound
xor
add
dec
add
jge
xor
test
popf
or
call
sub
inc
sub
in
mov
pop
push
pop
jmp
pusha
jnp
pop
out
std
sbb
mov
add
and
xchg
mov
icebp
xchg
ret
aaa
mov
idiv
in
(bad)
lds
sbb
ins
imul
pop
cwde
or
test
and
push
adc
xor
rcl
(bad)
mov
popa
push
cmps
xor
add
inc
pop
and
mov
adc
rol
jle
mov
xchg
mov
push
imul
movs
jecxz
mov
sbb
adc
and
out
mov
mov
pop
push
and
jmp
pop
sub
dec
inc
inc
frstor
movs
pop
jnp
icebp
(bad)
out
scas
mov
sub
fisub
sar
add
jge
repz
(bad)
out
push
repnz
es
mov
sar
and
cmc
js
(bad)
cmp
xchg
mov
adc
adc
test
sub
inc
hlt
cmp
aam
(bad)
push
dec
cli
pop
sub
gs
push
mov
fwait
(bad)
adc
fs
adc
add
(bad)
and
jae
jb
and
add
cmc
aad
aam
aad
jmp
mov
mov
xor
je
mov
outs
das
dec
ret
cmp
dec
test
int3
icebp
pop
ss
pop
fwait
add
cs
out
in
arpl
or
pop
sti
jp
stc
inc
push
les
xchg
frstor
add
ret
pop
ret
inc
imul
cmc
lods
push
lea
sbb
jg
dec
mov
pop
movaps
repnz
mov
dec
leave
jle
out
xchg
jmp
std
add
dec
add
pop
call
ror
fld
add
popa
add
test
(bad)
sbb
inc
ret
xchg
cdq
xchg
aas
movs
mov
adc
call
pop
(bad)
sbb
aas
mov
xor
sar
in
xlat
mov
mov
xor
jo
adc
clc
or
call
cld
cmc
std
xor
cld
bound
mov
mov
mov
test
push
sbb
push
mov
call
in
ins
inc
imul
popa
addr16
loop
and
inc
(bad)
push
icebp
mov
call
mov
pop
or
repz
int
(bad)
das
imul
sahf
shl
ins
sbb
cmp
out
(bad)
ins
call
xchg
jl
xchg
adc
imul
sub
jbe
sbb
jp
cmps
adc
cmp
mul
mov
cmp
jmp
mov
push
out
ds
cdq
retf
push
es
jnp
and
sti
jge
(bad)
dec
cwde
xchg
push
int
jbe
mov
fidivr
in
mov
mov
fiadd
mov
xchg
inc
popa
or
adc
jle
aaa
arpl
mov
in
mov
sahf
in
fidiv
pop
stc
fbld
retf
jne
sub
or
bound
cmps
jne
jno
and
retf
xor
add
gs
mov
pop
fld
sub
sbb
js
sbb
(bad)
jge
in
aam
loop
push
mov
push
mov
or
clc
jmp
scas
mov
js
jg
fidivr
sbb
(bad)
xchg
cmp
jl
in
ins
xchg
out
popa
inc
in
inc
ins
mov
add
mov
push
and
mov
ins
xor
sbb
outs
push
pop
sbb
sbb
ret
sbb
or
aaa
js
and
dec
pop
xchg
out
mov
xchg
adc
push
scas
dec
repnz
push
in
ror
and
nop
stos
sbb
xchg
ret
lahf
test
mov
stc
out
cli
cdq
or
mov
adc
add
fsub
(bad)
jne
mov
mov
ss
xchg
and
scas
std
fild
cwde
mov
and
out
lods
xor
inc
ret
fs
cli
call
outs
xchg
sub
push
mov
add
in
jmp
jl
pop
aam
stos
pusha
add
push
sbb
add
pusha
shr
mov
or
xor
inc
in
enter
test
mov
loopne
add
cmp
cmp
jae
push
ss
mov
data16
mov
mov
xor
ds
out
rcl
pop
xor
dec
or
add
xor
enter
mov
mov
push
int
push
fld
sar
fistp
call
hlt
mov
shl
mov
mov
data16
cmp
xor
rol
dec
mov
dec
or
icebp
imul
in
push
dec
mov
and
or
aas
sub
loopne
jmp
xor
dec
lods
xchg
cdq
lds
in
cld
cdq
dec
pushw
scas
in
std
imul
sub
enter
loope
adc
cmp
jle
fs
jb
or
mov
retf
xchg
lahf
inc
test
out
ret
outs
movs
popa
dec
sbb
cdq
data16
or
jbe
adc
xchg
push
movs
lahf
sub
(bad)
stc
retf
test
cmp
mov
fs
or
mov
fwait
daa
sub
cmp
mov
ins
jmp
sahf
pop
mov
mov
aaa
mov
js
fs
dec
int3
test
pop
into
arpl
pusha
push
xchg
jp
imul
aaa
in
add
lock
shl
or
mov
repnz
enter
push
repnz
shl
cmp
dec
punpckldq
(bad)
call
pop
adc
adc
in
jg
add
into
(bad)
ds
js
bound
cmp
jmp
fwait
pop
iret
cmp
ss
push
shl
mov
sub
in
dec
daa
cdq
xchg
jmp
adc
test
scas
lods
call
inc
(bad)
nop
jmp
cmp
sub
popf
mov
sub
and
and
xor
sbb
push
push
out
inc
and
scas
cmp
fs
add
lods
dec
mov
mov
out
xor
ds
cmps
xchg
dec
ja
cmp
enter
sahf
cmp
jns
movs
xchg
jns
dec
jae
ror
xor
xor
add
enter
rol
outs
loopne
push
jo
mov
out
loop
dec
pop
dec
xchg
(bad)
(bad)
or
enter
mov
test
fmul
push
out
dec
xor
inc
popa
inc
jle
push
ins
movs
fadd
iret
shl
ds
mov
rcr
jnp
test
pop
mov
test
push
pop
nop
cmp
sbb
out
outs
inc
mov
xchg
inc
nop
jp
clc
push
or
pop
ins
jo
fsubrp
hlt
jnp
jnp
arpl
sub
sub
movs
sbb
jnp
xchg
test
(bad)
jb
mov
fwait
adc
adc
and
sbb
call
loopne
neg
inc
mov
pop
aas
div
retf
jo
or
add
repz
in
jno
shr
inc
push
adc
dec
stc
inc
cld
xlat
fst
mov
clc
fcom
(bad)
repnz
dec
aad
(bad)
pop
jg
dec
test
daa
mov
(bad)
sub
fcomp
in
cmp
das
(bad)
dec
ficom
cmp
mov
int3
dec
dec
pop
sbb
jae
xor
daa
or
stc
sub
outs
jae
addr16
in
test
mov
cdq
jmp
add
aam
mov
scas
mov
cwde
movs
mov
cmp
fnstcw
arpl
sbb
dec
hlt
add
mov
cmps
jl
xor
sbb
loope
dec
rcl
addr16
mov
bound
ins
mov
in
clc
fcom
mov
xlat
sbb
push
test
lods
cs
into
xor
sbb
fadd
inc
ds
sub
shl
(bad)
xor
jl
mov
in
mov
xor
fwait
stos
arpl
das
stos
loopne
outs
dec
ja
nop
push
adc
mov
jno
add
sti
scas
bound
stc
mov
mov
leave
xor
inc
(bad)
(bad)
adc
pop
xor
mov
dec
call
sbb
sti
in
inc
adc
shr
stos
(bad)
jnp
retf
cmps
sbb
xchg
mov
pop
lods
jecxz
mov
add
int
aam
outs
pop
das
clc
mov
clc
inc
sbb
mov
stos
jne
popa
mov
dec
fucomip
and
movs
outs
add
loopne
int3
xor
fidivr
imul
stos
cli
aaa
(bad)
sub
adc
pop
movaps
and
and
push
pop
popa
cli
mov
mov
mov
dec
push
lods
(bad)
(bad)
sahf
fidivr
cmp
enter
cwde
adc
scas
(bad)
inc
inc
mov
icebp
fnstcw
jp
retf
inc
pop
pop
dec
cmp
adc
jecxz
inc
and
sub
sahf
mov
push
adc
push
test
popa
loopne
cwde
or
jae
fild
lock
fiadd
jmp
loopne
add
sbb
sub
nop
enter
push
retf
jno
push
ds
xchg
aam
jns
aas
cmps
and
popa
dec
dec
repz
imul
mov
pop
pop
pop
adc
push
sub
jne
jb
and
adc
push
(bad)
cwde
cwde
scas
sbb
les
jne
dec
jg
xor
fs
push
ja
call
(bad)
cmp
mov
(bad)
pop
fcmove
stc
mov
bound
test
push
das
pop
mov
xchg
push
pop
jp
cmp
mov
jne
xor
adc
adc
(bad)
adc
add
pop
bound
out
adc
pop
jge
and
aas
jle
popa
sbb
xchg
adc
cwde
sub
daa
xchg
push
adc
mov
cwde
adc
das
mov
pusha
add
mov
aaa
loope
fmul
jne
add
xchg
dec
jmp
add
xchg
xchg
adc
and
inc
mov
shr
mov
jmp
push
jo
std
clc
dec
cmovns
dec
loopne
add
jecxz
mov
pop
sub
jle
std
loop
xor
retf
loope
jecxz
aad
dec
sub
aam
cmp
aad
inc
(bad)
cs
xor
call
and
sub
xor
and
mov
add
adc
cmp
push
cs
adc
cwde
shr
mov
repz
pop
daa
js
cmp
popa
add
mov
jmp
jae
test
add
jle
sbb
xlat
or
pop
inc
jmp
lahf
push
mov
out
jmp
sub
loopne
out
in
cld
(bad)
das
mov
adc
jmp
or
js
dec
pop
test
dec
mov
cmc
out
lahf
add
ins
imul
cmp
repz
ja
push
mul
pop
movs
pop
jle
mov
nop
add
add
sti
xor
xchg
or
and
xchg
imul
xchg
mov
push
mov
pop
test
das
fisub
xlat
out
cdq
out
jl
and
jg
aad
rcl
mov
xor
in
nop
int3
push
add
cli
inc
(bad)
mov
push
retf
fwait
ja
inc
cmp
retf
push
mov
in
cmp
mov
mov
cmp
out
push
sub
fcomi
rcr
adc
ins
add
cmp
sub
jl
cmp
out
mov
call
xchg
inc
adc
sub
pop
int
mov
daa
and
fwait
adc
pop
pop
inc
sbb
fld
ss
fnstcw
fstp
mov
loopne
mov
dec
jl
cmp
pop
pop
add
jne
call
pop
ret
jmp
mov
movs
push
mov
inc
sub
pop
jne
lods
scas
stos
ret
mov
outs
xchg
inc
in
jp
push
fnstenv
movs
shl
pushf
pop
jmp
sub
push
rol
mov
xor
lods
aad
dec
xchg
xor
mov
push
std
cmps
cwde
and
xchg
mov
mov
add
mov
sbb
out
imul
jno
fisubr
aad
aad
gs
mov
stc
aaa
movs
jle
fwait
js
loope
imul
enter
cmps
add
adc
xchg
(bad)
(bad)
imul
push
and
xor
xor
(bad)
xlat
push
scas
inc
sbb
les
jg
adc
fs
ins
sub
xor
outs
call
lea
enter
jl
(bad)
aas
mov
mov
call
dec
ror
out
aad
dec
and
push
pop
pop
les
repnz
shl
iret
cld
xor
mov
and
outs
push
mov
inc
out
out
jge
mov
js
add
out
int3
pop
cmp
xor
lock
dec
mov
sub
aad
cmp
out
push
stos
mov
sbb
or
in
popf
sub
ds
aas
xchg
call
gs
int3
js
loopne
mov
not
sbb
mov
jmp
jo
les
arpl
or
jmp
sti
enter
add
and
js
pop
mov
mov
out
int
retf
xchg
jmp
xchg
clc
les
mov
clc
push
and
dec
psrlw
es
(bad)
push
fnop
(bad)
shl
inc
xor
cbw
aam
add
dec
mov
mov
push
pushf
sub
mov
pushf
adc
jmp
(bad)
add
addr16
xor
push
fwait
in
pusha
rcl
sbb
dec
cmps
sub
add
mov
fdiv
and
cmp
cs
inc
cmp
xor
xchg
adc
sti
push
jbe
stos
dec
int3
stos
dec
stc
and
cmp
adc
xchg
leave
xchg
out
xchg
sbb
xor
jbe
push
xchg
stos
jge
je
mov
leave
repz
cmp
sbb
movs
mov
adc
cld
ds
and
sbb
scas
mov
push
sahf
jl
xor
aad
adc
repnz
mov
mov
or
cmp
xor
aas
or
js
mov
std
adc
(bad)
fidiv
or
xor
jo
inc
xchg
loopne
mov
add
ins
add
cwde
dec
arpl
ficomp
jbe
(bad)
shl
call
xor
rcr
(bad)
xor
sbb
push
arpl
add
in
pop
in
push
cli
mov
jne
fwait
push
hlt
or
inc
and
cmc
mov
add
jnp
xchg
adc
sub
(bad)
movs
inc
ret
pop
xchg
mov
xor
xchg
push
rol
dec
(bad)
adc
adc
addr16
out
je
jl
loopne
sub
or
int3
loop
mov
pop
inc
shr
ss
jp
push
xchg
popa
and
push
xchg
stc
dec
jecxz
or
cmps
loop
adc
pop
mov
pop
pop
cmp
inc
sub
push
es
cld
sub
ss
call
dec
jae
inc
aad
outs
mov
hlt
gs
jne
in
mov
mov
stc
loopne
call
clc
sbb
fdivr
xchg
jmp
push
mov
mov
xor
je
xchg
pop
push
mov
shr
push
ret
sub
cmps
push
sub
movs
or
aad
pop
pop
push
sahf
inc
(bad)
mov
mov
mov
and
mov
test
test
into
imul
sbb
jge
lahf
pushf
call
push
test
inc
ins
mov
nop
aas
sahf
call
mov
ja
mov
enter
sub
shr
js
or
fldenv
test
call
inc
test
jmp
cmp
sbb
cmp
adc
std
push
pop
mov
push
sbb
lods
out
arpl
sub
ins
xlat
in
rol
out
mov
clc
xchg
ins
pop
dec
imul
mov
sbb
dec
fdiv
ror
ins
retf
retf
data16
out
mov
adc
adc
cmp
cld
mov
add
inc
mov
xlat
xchg
sub
jae
dec
xlat
fcomp
inc
movs
inc
xor
xlat
ja
cmp
mov
pop
mov
dec
push
rcl
push
cs
dec
xchg
bound
xor
sbb
mov
jbe
aas
cmp
or
pop
loop
add
pop
ins
push
xchg
mov
pushf
inc
adc
aaa
test
pop
jno
sub
push
fwait
fs
out
cmp
addr16
jmp
cld
call
(bad)
arpl
inc
mov
xor
or
loop
stos
inc
pop
xchg
dec
add
sahf
jg
fcmovbe
xchg
mov
jmp
sbb
add
js
jmp
int
sbb
or
ret
dec
adc
sub
lock
add
fwait
jne
xlat
mov
xor
loop
and
mov
dec
into
add
mov
jno
idiv
push
sti
push
mov
lock
mov
mov
push
push
sub
fst
int3
arpl
jmp
les
test
out
xor
call
sahf
xor
jge
jecxz
pop
gs
loope
add
jnp
sbb
icebp
and
xchg
iret
push
sbb
sbb
in
mov
adc
mov
mov
cmp
or
mov
add
adc
bound
test
mov
fwait
ret
in
(bad)
call
add
jno
sahf
mov
in
dec
xchg
shl
mov
out
shr
xchg
mov
stos
add
and
adc
push
cmp
test
mov
(bad)
popa
imul
xchg
add
(bad)
push
test
std
and
mov
pop
jp
fcmovnbe
imul
fadd
loope
fidiv
fs
xchg
or
movs
jp
push
popa
out
cmps
mov
imul
or
mov
dec
xchg
mov
mov
retf
and
rep
fcmove
int
and
add
push
int
cld
stos
fstp
in
sbb
jle
(bad)
neg
push
pop
pop
cdq
sbb
imul
xor
or
sbb
rcr
test
iret
jo
out
xchg
leave
(bad)
ins
fistp
test
xchg
mov
stos
pop
inc
movs
std
(bad)
jp
sub
jecxz
ja
out
xor
mov
lahf
sbb
cmp
(bad)
cld
sub
fld
mov
and
xor
cmp
adc
jnp
fmul
nop
inc
daa
outs
inc
xor
add
pop
call
and
or
movs
aam
aas
mov
pushf
cmp
jmp
mov
int
rcl
xor
movs
(bad)
cmps
cmps
fsubr
add
pop
mov
(bad)
daa
cwde
inc
and
xor
or
push
cld
cmps
dec
outs
jb
lea
jmp
xor
xor
call
add
mov
xor
jae
xor
dec
fisttp
loopne
imul
jns
jo
sub
aad
sbb
(bad)
mov
call
inc
pop
pop
cmp
pop
dec
arpl
(bad)
mov
into
xchg
adc
inc
push
jecxz
f2xm1
jecxz
lahf
call
scas
mov
mov
pop
not
mov
xor
fst
ret
shl
mov
repnz
and
mov
clc
pushf
out
sbb
into
pop
loop
pop
dec
mov
sub
movs
cmp
or
xor
sub
add
jmp
nop
pop
je
add
push
adc
clc
add
xlat
js
mov
icebp
push
adc
and
call
fcmovbe
mov
(bad)
shrd
pusha
cld
xchg
sbb
scas
push
sub
dec
xchg
push
scas
stos
mov
jl
aad
not
cmp
inc
jbe
cwde
inc
xor
fucompp
dec
mov
pop
pop
mov
pop
cmps
push
mov
jo
int
ja
outs
jne
pushfw
sar
je
fiadd
rcl
test
mov
icebp
mov
lods
pushf
(bad)
dec
inc
adc
(bad)
mov
and
lods
es
push
movs
out
inc
sbb
jmp
cmp
xchg
movs
adc
gs
jle
outs
and
enter
add
clc
push
outs
fs
pop
sbb
cmp
jbe
jmp
push
mov
pop
aaa
push
push
mov
(bad)
mov
or
stos
add
rol
add
dec
stos
mov
imul
cli
scas
lods
push
mov
pushf
sub
inc
mov
ja
mov
dec
xchg
sar
cmp
jo
inc
adc
retf
and
inc
mov
jle
test
xor
ret
adc
sub
xchg
pop
mov
add
xor
std
loopne
jle
in
stc
jno
sub
cmps
mov
and
jmp
(bad)
sub
cs
aas
push
jp
xchg
cmp
adc
fcom
or
mov
cmp
jno
jnp
(bad)
fs
addr16
sub
push
lds
inc
or
pop
xor
sbb
xor
mov
mov
xor
adc
dec
cmp
xor
push
fild
pop
and
out
push
mov
jbe
loop
not
es
add
or
mov
sub
mov
scas
pop
xlat
push
test
(bad)
int
(bad)
sub
in
shr
mov
pop
cwde
mov
shl
(bad)
and
push
jmp
xor
add
sbb
or
dec
ror
inc
xor
push
sub
mov
call
jns
fnstsw
je
or
hlt
cdq
dec
cmp
dec
sub
or
in
jne
inc
pop
cli
out
pop
xor
mov
mov
lea
push
jmp
jns
pop
dec
test
adc
mov
test
and
add
mov
adc
(bad)
mov
mov
dec
outs
jle
pop
std
jmp
scas
jecxz
mov
push
pop
mov
mov
stos
cmp
sbb
mov
stos
repnz
xor
mov
jmp
test
arpl
int
inc
fadd
imul
mov
sub
daa
sub
jnp
dec
jmp
pop
jo
sub
jg
pop
je
mov
pop
push
pop
or
cwde
clc
pop
mov
inc
pop
pop
inc
adc
imul
scas
gs
shl
mov
dec
bound
push
push
into
jle
mov
test
popf
in
fadd
xchg
aad
imul
out
sub
dec
push
(bad)
addr16
std
pop
xchg
inc
cli
ins
(bad)
xor
mov
push
iret
xchg
or
(bad)
mov
scas
pop
or
mov
xchg
fmul
jae
fstp
xchg
jbe
fwait
ins
mov
mov
mov
push
xor
repnz
aas
imul
sub
in
sbb
sub
cmp
mov
rol
mov
mov
pop
aam
lods
cmps
out
hlt
sub
shr
cmp
and
movs
cmp
jnp
lahf
outs
jle
dec
ins
repnz
jmp
jp
push
rcr
lea
adc
adc
inc
push
mov
in
sub
imul
jmp
push
xlat
(bad)
and
mov
dec
rcl
sbb
sub
pop
mov
push
sub
lods
ret
jle
jns
inc
imul
or
mov
xor
retf
(bad)
mov
xchg
mov
dec
add
push
out
add
push
xchg
xor
in
sbb
push
outs
push
xchg
ins
sar
ja
setnp
mov
int3
lahf
sub
jmp
lods
jb
pushf
pop
iret
retf
inc
pop
mov
ins
cmps
sbb
sbb
enter
inc
mov
lock
sub
push
sub
es
inc
jno
xchg
iret
out
outs
cmp
out
sub
mov
out
xchg
mov
mov
(bad)
sbb
aad
push
cmp
mov
dec
div
push
inc
movs
(bad)
mov
jmp
jae
push
dec
outs
mov
jg
sub
int
adc
add
mov
pop
pop
add
mov
fistp
xor
mov
jno
mov
imul
fdiv
jae
mov
inc
inc
cmp
sti
aaa
sub
pop
popa
or
dec
xor
cmps
iret
mov
dec
jg
jnp
sub
(bad)
in
pop
mov
jl
lock
sar
mov
ret
xchg
inc
sub
in
aam
shl
stos
jo
pop
pop
mov
ins
stos
pop
scas
dec
mov
pop
ror
ret
adc
and
jne
mov
retf
rol
dec
xchg
cmps
adc
jbe
ds
jecxz
dec
cmc
jge
test
jmp
jl
and
or
loope
xchg
adc
push
jp
pop
ins
or
into
(bad)
stc
test
jl
pusha
xchg
pop
call
ss
add
loope
ins
add
pop
push
shl
cdq
pop
ret
sbb
xchg
cli
dec
xchg
mov
lahf
xchg
popa
mov
jl
imul
ficom
fidiv
je
push
jnp
outs
cld
inc
pop
(bad)
mov
enter
xor
loop
lea
and
sub
lds
shr
mov
and
stos
push
(bad)
(bad)
cmp
add
fldenv
clc
addr16
mov
idiv
push
outs
ins
pop
jp
cmp
clc
test
lods
dec
xor
inc
arpl
mov
pusha
in
xchg
sbb
mov
mov
(bad)
repnz
test
retf
iret
out
adc
jbe
jnp
add
adc
ins
jp
(bad)
dec
fwait
cmps
jmp
pop
or
or
rcr
pop
addr16
test
mov
in
or
jae
adc
inc
xor
push
push
out
jle
sub
push
jecxz
ror
in
es
js
cmp
popa
adc
jp
mov
pop
stos
or
outs
retf
imul
jae
aas
xchg
jno
xor
xor
mov
lods
push
sub
xchg
xlat
in
inc
jno
enter
rol
xor
mov
pop
lods
cmp
retf
into
mov
leave
ret
xlat
xor
jmp
mov
sbb
mov
lds
clc
ja
xor
jmp
pop
jl
enter
leave
sbb
dec
sbb
sbb
pcmpeqd
ins
add
repz
jl
fsub
data16
inc
xor
mov
dec
dec
inc
imul
icebp
and
push
cli
les
jbe
inc
cli
cmp
xor
push
sbb
sbb
pop
add
xor
fsubr
fs
xor
sbb
popf
cwde
mov
mov
jno
mov
pop
lahf
xchg
outs
xchg
cmp
cmp
outs
cpuid
sti
int3
lahf
test
mov
sub
cdq
call
pop
cmp
inc
jnp
xchg
pop
ds
movs
or
and
mov
scas
mov
call
or
and
das
leave
test
sbb
adc
jo
ret
hlt
push
pop
cmps
scas
push
adc
cld
add
sahf
cmp
fiadd
adc
ret
sar
(bad)
sti
sbb
add
mov
push
mov
xchg
mov
movs
popf
mov
push
add
inc
fwait
loop
push
ret
xchg
cmp
push
(bad)
mov
push
outs
cmp
dec
ss
hlt
into
fdivr
dec
icebp
or
ds
push
arpl
fild
dec
and
adc
and
add
mov
mov
inc
cld
shl
int3
jecxz
xchg
imul
fisub
jno
and
mov
clc
stc
test
mov
and
sbb
sahf
scas
(bad)
ins
cmp
pop
call
cld
push
dec
test
loop
sub
push
push
xchg
daa
jmp
jno
(bad)
repz
fcomp
test
dec
xchg
sub
bound
mov
call
ror
xchg
xchg
std
cmp
dec
not
je
das
sbb
lea
xchg
outs
ins
pop
aad
movs
mov
(bad)
mov
out
js
jle
loopne
or
adc
jno
adc
add
cmps
(bad)
movs
push
(bad)
addr16
jge
jge
xchg
jmp
test
mov
fisttp
jb
push
cmp
popf
bound
pop
mov
comiss
jp
or
invd
xlat
fdiv
cmps
inc
or
lea
mov
rol
jle
mov
and
adc
call
hlt
sbb
stos
ss
push
pop
repz
add
aad
sub
gs
xlat
jp
inc
leave
mov
repnz
mov
stc
ret
imul
retf
ins
cmp
xchg
dec
add
pop
enter
push
jg
adc
test
ja
aas
xor
xchg
push
pusha
out
inc
sub
xlat
jmp
daa
inc
mul
clc
cld
ins
std
sub
xchg
pop
xchg
inc
std
and
inc
mov
jo
dec
mov
mov
popf
int3
cwde
jmp
je
hlt
and
leave
fnsave
int
in
test
hlt
dec
gs
repnz
jb
sbb
jl
dec
jne
mov
pop
ret
popa
pusha
sahf
dec
inc
sti
std
mov
push
jmp
add
cmps
inc
rcr
inc
sub
sahf
test
call
mov
jae
dec
mov
popf
iret
and
or
pop
ss
pop
inc
pusha
in
out
fldcw
mov
imul
call
int3
pop
bound
pusha
cmp
out
(bad)
fistp
int3
(bad)
xchg
push
call
inc
cdq
test
push
push
push
ja
shld
retf
cmp
pop
cmp
pop
movs
fdiv
pcmpeqb
cmps
leave
dec
cmp
je
inc
push
mov
xor
pop
adc
out
inc
cmp
jmp
mov
(bad)
hlt
xor
dec
add
pop
mov
sub
sbb
pop
mov
xor
aas
add
sbb
fwait
aaa
ins
mov
sub
or
dec
lods
int
sar
jg
enter
daa
sti
mov
cli
clc
sub
inc
xchg
bnd
mov
inc
xor
mov
mov
jbe
pop
dec
ja
mov
add
pusha
push
je
sub
gs
(bad)
ja
fs
gs
and
inc
gs
loopne
lock
dec
add
imul
push
pop
jg
aas
push
xor
fdivr
(bad)
mov
ss
cwde
inc
into
dec
jne
lods
mov
and
add
mov
pop
js
cmps
aas
scas
lea
jnp
fadd
retf
loopne
jl
xor
loopne
mov
mov
mov
sub
mov
mov
inc
push
jno
pop
movs
mov
and
sti
nop
adc
xor
inc
loopne
xlat
test
cmps
ret
ds
in
mov
push
sbb
imul
dec
xlat
je
enter
test
xor
push
pop
jb
les
cmp
sqrtps
call
push
icebp
(bad)
lods
inc
lods
xchg
into
scas
stos
add
jne
push
mov
ins
or
pusha
pop
out
ret
jle
in
ss
sahf
or
xchg
sub
je
xchg
push
mov
pop
push
clc
jb
add
xchg
shl
rol
fstp
add
xchg
loop
(bad)
sbb
push
add
lods
xor
sbb
(bad)
in
inc
loopne
retf
mov
adc
xor
in
xchg
cmps
or
jns
adc
mov
xor
cs
pop
cmp
iret
jp
or
push
lock
jb
adc
inc
xor
jo
hlt
jmp
mov
dec
std
in
sbb
adc
movs
pop
retf
pusha
cs
pushf
mov
dec
loop
mov
test
imul
loopne
aaa
out
cld
daa
push
loop
sbb
jle
mov
shr
cmp
popf
repnz
lods
not
fimul
and
in
jb
js
adc
dec
push
jg
and
cmp
jecxz
daa
adc
les
jb
aam
cwd
outs
adc
into
bound
and
mov
add
xchg
pop
xchg
xchg
xor
ss
rol
sub
movs
loop
and
push
or
push
pushf
inc
cmps
ficom
(bad)
stos
xor
lahf
icebp
inc
(bad)
dec
and
sub
push
hlt
int3
mov
and
inc
mov
mov
or
mov
xchg
xor
xor
call
es
xchg
jmp
or
pop
pop
test
repnz
add
lds
or
fs
das
or
(bad)
out
ins
jl
xchg
mov
aad
inc
sbb
inc
xor
dec
es
rcr
add
fimul
xlat
sub
and
sbb
inc
mov
cmp
xchg
add
and
or
push
push
fimul
out
dec
push
xor
xchg
rol
pop
mov
(bad)
fst
push
es
push
adc
jmp
and
jne
add
ds
lods
repnz
pop
enter
jbe
int
loop
cmp
fs
test
push
cmps
repnz
lods
fwait
add
xor
and
push
ss
cdq
sbb
push
outs
xor
imul
nop
mov
jb
int3
push
ss
imul
aas
or
fcmove
lds
hlt
fstp
and
fdivr
sbb
sar
jno
inc
add
retf
bndldx
pop
(bad)
jae
je
xor
sahf
lock
cmovo
pop
(bad)
imul
loope
cmp
xor
cs
add
ins
add
addr16
nop
xchg
call
jg
sbb
cmp
mov
sub
push
mov
cwde
cmp
mov
adc
clc
dec
lahf
test
addr16
fistp
loope
mov
push
fidivr
icebp
or
out
test
sbb
cmp
das
jns
jecxz
fimul
ror
pop
jle
jge
inc
movs
jmp
sub
push
in
push
aaa
and
mov
or
je
cli
rcl
jnp
test
mov
jae
(bad)
iret
push
jg
add
mov
push
les
ret
fst
mov
mov
pop
xlat
inc
xchg
in
imul
retf
xor
fadd
test
out
popa
retf
stos
aad
rcr
xchg
jmp
inc
int
add
test
mov
push
daa
enter
je
jmp
adc
stc
add
cmp
dec
pushf
test
mov
mov
adc
or
stos
mov
push
jmp
jbe
xor
mov
out
pop
or
push
aam
retf
lods
imul
iret
data16
fild
stos
shl
aad
test
sub
fist
lea
jecxz
mov
sub
xchg
and
mov
jmp
or
fadd
cmp
(bad)
jbe
ret
jmp
add
sub
int3
call
hlt
or
fs
bound
jp
in
mov
jp
bt
and
mov
pusha
xchg
pop
xchg
cmp
enter
pop
mov
cwde
mov
jno
cs
and
aam
fucomp
add
jmp
inc
jg
jae
xor
dec
and
xchg
gs
ja
fmulp
ja
sub
xchg
fisttp
mov
xlat
stos
jge
inc
loop
fist
mov
aaa
ja
push
std
cmp
push
aaa
push
into
arpl
rcl
adc
cld
aaa
movs
sub
inc
jmp
inc
test
(bad)
jmp
mov
mov
lds
xchg
mov
cmp
pop
mov
inc
movs
jmp
(bad)
push
mov
retf
movs
test
pop
inc
das
xchg
inc
shl
jp
outs
jo
mov
xor
in
mov
neg
(bad)
stc
sbb
inc
dec
push
(bad)
jo
ins
sbb
jl
add
cmp
jle
setp
retf
fwait
xor
jmp
inc
jle
push
sbb
loopne
ja
and
xor
imul
ret
leave
pop
fistp
or
fwait
pop
sub
mov
outs
pop
mov
data16
pop
retf
out
cwde
xchg
cmp
je
inc
sub
lea
movs
ret
sub
in
jbe
xchg
push
adc
mov
push
out
inc
dec
in
lea
sbb
mov
pusha
in
retf
cmp
jne
retf
xor
pop
pop
ror
mov
lods
jo
xchg
add
not
push
js
out
mov
fwait
mov
add
mov
icebp
shl
mov
mov
pop
repnz
push
jge
ret
std
sti
ret
(bad)
int
or
mov
push
loop
xchg
gs
lds
sub
(bad)
dec
cmp
sahf
outs
mov
(bad)
pop
cwde
fcmovbe
daa
outs
iret
stos
push
adc
je
push
push
and
pop
pop
movs
dec
xchg
inc
sahf
arpl
pop
inc
cmc
(bad)
sbb
pop
jo
out
push
or
loop
sbb
jns
adc
or
jb
std
jle
bound
out
or
outs
push
out
jne
xchg
fs
push
and
pusha
mov
ins
sub
inc
int3
rol
and
js
inc
add
jbe
xchg
xchg
fimul
stos
pusha
push
cmp
mov
mov
add
mov
or
cld
cmc
jno
repz
loopne
js
adc
push
or
mov
iret
aas
dec
lock
data16
fmul
mov
sti
mov
or
dec
in
movs
pushf
cmp
cmps
test
mov
rcr
retf
ret
add
dec
adc
stc
nop
bound
mov
sub
xor
ins
push
mov
dec
iret
pop
je
sar
gs
adc
fsubr
cmp
or
mov
dec
mov
mov
jno
mov
(bad)
sbb
pop
fidivr
dec
jmp
out
dec
sahf
and
das
push
pusha
pop
cmp
les
pop
(bad)
cld
sub
mov
jle
movs
mov
and
(bad)
cmps
add
adc
push
sti
mov
pop
movs
pop
je
adc
mov
ins
dec
lock
add
xor
imul
mov
push
dec
jne
jge
adc
clc
pop
add
jle
stc
sub
fiadd
aas
mov
xor
dec
sub
dec
adc
out
jbe
pop
dec
cdq
loopne
xchg
(bad)
push
ss
mov
sub
shr
cmp
pop
mov
cdq
out
sub
dec
xchg
cmp
in
retf
lahf
movs
or
call
js
scas
mov
adc
xchg
adc
sub
fwait
or
cli
sub
bound
mov
div
iret
sbb
pop
fild
xor
out
jbe
and
les
sbb
pop
shl
jle
xor
cmp
adc
and
mov
stos
mov
imul
mov
scas
mov
add
add
add
aaa
adc
shl
add
shl
push
imul
je
jecxz
test
push
sub
sbb
adc
sub
test
cmps
dec
aam
xchg
dec
aaa
or
nop
jo
add
mov
mov
test
je
movzx
bt
jae
mov
push
mov
rep
jmp
mov
cmp
jl
bt
jb
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
cmp
je
push
push
push
call
test
jne
push
call
mov
call
push
call
pop
mov
pop
pop
ret
push
mov
push
and
push
lea
push
push
push
call
mov
add
test
jne
cmp
je
call
test
je
call
mov
mov
mov
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
push
push
call
and
xor
mov
test
setne
test
jne
call
mov
call
xor
jmp
xor
mov
test
setne
test
je
xor
cmp
setne
test
je
call
mov
mov
test
jne
call
mov
jmp
and
cmp
jne
call
mov
push
lea
push
push
call
add
jmp
push
push
push
push
call
add
mov
mov
mov
call
mov
call
ret
mov
mov
push
call
pop
ret
push
mov
push
push
push
call
add
pop
ret
push
mov
push
push
mov
push
push
push
test
je
mov
test
je
mov
test
jne
call
mov
call
xor
pop
pop
pop
leave
ret
cmp
je
or
xor
div
cmp
ja
mov
imul
test
mov
je
mov
jmp
mov
mov
test
je
mov
and
je
mov
mov
test
je
js
cmp
jae
mov
mov
push
push
push
call
mov
sub
add
add
sub
add
jmp
cmp
jb
test
je
push
call
pop
test
jne
mov
mov
test
je
xor
div
mov
sub
mov
jmp
mov
push
push
push
call
pop
push
call
add
cmp
je
mov
mov
cmp
ja
mov
add
sub
cmp
jb
mov
jmp
mov
push
movsx
push
call
pop
pop
cmp
je
inc
mov
dec
mov
test
jg
xor
inc
mov
test
jne
mov
jmp
or
sub
mov
xor
div
jmp
push
push
call
cmp
je
cmp
je
xor
mov
test
setne
test
jne
call
mov
call
xor
call
ret
push
call
pop
and
push
push
push
push
call
add
mov
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
push
mov
push
mov
push
or
test
jne
call
mov
call
or
jmp
test
je
push
call
push
mov
call
push
call
push
call
add
test
jns
or
jmp
cmp
je
push
call
and
pop
and
mov
pop
pop
pop
ret
push
push
call
or
mov
xor
mov
test
setne
test
jne
call
mov
call
mov
call
ret
test
je
and
jmp
push
call
pop
and
push
call
pop
mov
mov
mov
call
jmp
mov
mov
push
call
pop
ret
call
jmp
push
push
call
call
movzx
push
call
pop
mov
cmp
je
xor
jmp
mov
cmp
jne
mov
cmp
jne
xor
cmp
jbe
cmp
setne
mov
call
test
jne
push
call
pop
call
test
jne
push
call
pop
call
and
call
test
jns
push
call
pop
call
mov
call
mov
call
test
jns
push
call
pop
call
test
jns
push
call
pop
push
call
pop
test
je
push
call
pop
call
push
push
push
push
call
mov
mov
test
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmp
jne
push
call
call
mov
mov
call
ret
push
mov
cmp
jne
call
push
call
push
call
pop
pop
pop
ret
call
mov
imul
add
mov
shr
and
mov
ret
push
mov
call
mov
mov
pop
ret
push
mov
push
push
lea
push
call
mov
mov
push
add
push
adc
push
push
call
cmp
jl
jg
cmp
jbe
or
mov
mov
test
je
mov
mov
leave
ret
push
mov
push
mov
mov
mov
test
jne
call
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
mov
test
jne
or
mov
mov
jmp
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
cmp
jne
mov
test
jne
call
mov
call
mov
pop
ret
mov
test
je
push
push
push
push
pop
push
sub
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
test
je
cmp
je
movzx
movzx
pop
pop
sub
pop
pop
ret
push
push
push
call
add
pop
ret
push
mov
sub
lea
push
push
push
call
mov
test
je
mov
test
jne
call
mov
call
mov
jmp
mov
push
cmp
jne
push
pop
push
sub
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
test
je
cmp
je
jmp
movzx
lea
push
push
call
movzx
movzx
lea
push
push
lea
call
add
movzx
lea
test
je
cmp
je
movzx
movzx
sub
pop
cmp
pop
pop
je
mov
and
mov
leave
ret
push
mov
push
push
and
add
push
mov
mov
mov
sub
push
push
mov
xor
movzx
mov
cmp
jne
mov
jmp
mov
cmp
jle
mov
and
push
pop
cmp
ja
movdqu
jmp
push
pxor
movzx
pop
movzx
psrldq
pinsrw
xor
cmp
je
add
movzx
dec
jne
mov
mov
mov
and
cmp
ja
movdqu
pcmpistri
jbe
add
mov
jmp
jae
pcmpistri
lea
mov
mov
mov
and
mov
cmp
ja
mov
and
cmp
ja
movdqu
movdqu
pcmpistri
jno
js
mov
add
add
jmp
movzx
xor
cmp
je
cmp
je
add
jmp
movzx
and
cmp
je
cmp
jne
add
add
jmp
add
jmp
mov
jmp
jne
movzx
mov
movd
pshuflw
push
pshufd
pxor
pop
mov
and
cmp
ja
movdqu
movdqa
pcmpeqw
pcmpeqw
por
pmovmskb
test
jne
add
jmp
bsf
mov
shr
lea
movzx
xor
cmp
je
movzx
cmp
jne
mov
mov
and
cmp
ja
mov
and
cmp
ja
movdqu
movdqu
movdqa
pcmpeqw
pcmpeqw
movdqa
pcmpeqw
por
pmovmskb
test
jne
add
add
jmp
bsf
mov
and
add
add
movzx
and
cmp
je
cmp
jne
add
add
jmp
mov
add
jmp
mov
jmp
mov
movzx
test
je
and
mov
mov
sub
push
mov
pop
test
je
movzx
test
je
movzx
movzx
sub
mov
mov
jne
add
cmp
jne
jmp
mov
cmp
je
mov
add
add
movzx
mov
test
jne
xor
pop
pop
mov
pop
mov
pop
ret
push
mov
cmp
mov
push
jne
test
jns
push
push
jmp
push
push
mov
push
push
call
mov
pop
pop
ret
push
mov
cmp
mov
push
push
mov
push
je
push
pop
mov
add
neg
push
mov
pop
mov
xor
div
mov
lea
cmp
ja
lea
mov
add
test
jne
xor
mov
sub
movzx
mov
mov
mov
sub
add
cmp
jb
pop
pop
pop
pop
ret
push
mov
push
mov
cmp
ja
push
push
mov
test
jne
call
push
call
push
call
mov
pop
pop
test
je
mov
jmp
xor
inc
push
push
push
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
jne
jmp
call
mov
call
mov
mov
pop
pop
jmp
push
call
pop
call
mov
xor
pop
pop
ret
test
jne
pxor
jmp
movd
punpcklbw
punpcklwd
pshufd
push
push
mov
and
test
jne
mov
and
shr
je
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
test
je
mov
shr
je
jmp
lea
movdqa
lea
dec
jne
and
je
mov
shr
je
movd
lea
dec
jne
and
je
mov
inc
dec
jne
pop
pop
ret
neg
add
sub
push
mov
and
je
mov
inc
dec
jne
shr
je
movd
lea
dec
jne
pop
jmp
push
mov
and
sub
push
xor
inc
or
push
call
test
je
xor
mov
mov
cpuid
push
mov
push
lea
or
mov
mov
mov
mov
test
mov
je
or
mov
mov
test
je
or
mov
mov
push
xor
pop
cpuid
lea
mov
mov
mov
mov
test
mov
je
or
mov
xor
xor
cpuid
lea
mov
mov
mov
mov
cmp
jne
cmp
jne
cmp
jne
xor
inc
xor
cpuid
mov
mov
mov
mov
mov
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
or
mov
pop
pop
xor
pop
leave
ret
call
test
jne
mov
ret
add
ret
push
mov
push
call
mov
push
mov
call
pop
mov
call
mov
pop
pop
ret
call
test
jne
mov
ret
add
ret
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
lea
push
pop
cmp
sbb
and
add
pop
ret
mov
pop
ret
call
xor
test
setne
mov
mov
ret
push
mov
push
mov
test
je
push
xor
pop
div
cmp
jae
call
mov
xor
jmp
imul
test
jne
inc
xor
cmp
ja
push
push
push
call
mov
test
jne
cmp
je
push
call
pop
test
jne
mov
test
je
jmp
mov
test
je
mov
mov
pop
pop
ret
push
mov
sub
mov
xor
mov
cmp
push
je
push
call
pop
and
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
call
pop
test
jne
test
jne
cmp
je
push
call
pop
mov
xor
pop
call
leave
ret
push
mov
mov
mov
pop
ret
push
mov
push
call
test
je
pop
jmp
push
push
push
push
push
call
int3
xor
push
push
push
push
push
call
add
ret
push
call
test
je
push
pop
int
push
push
mov
push
push
call
push
call
add
pop
ret
mov
push
push
pop
test
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
pop
mov
test
jne
push
push
mov
call
pop
pop
mov
test
jne
push
pop
pop
ret
xor
mov
mov
add
lea
cmp
jge
mov
jmp
xor
pop
ret
call
cmp
je
call
push
call
and
pop
ret
mov
ret
push
mov
push
mov
mov
cmp
jb
cmp
ja
mov
sub
sar
add
push
call
or
pop
jmp
lea
push
call
pop
pop
ret
push
mov
mov
cmp
jge
add
push
call
mov
pop
or
pop
ret
mov
add
push
call
pop
ret
push
mov
mov
mov
cmp
jb
cmp
ja
and
sub
sar
add
push
call
pop
pop
ret
add
push
call
pop
ret
push
mov
mov
mov
cmp
jge
and
lea
push
call
pop
pop
ret
add
push
call
pop
ret
push
push
call
xor
mov
mov
push
call
pop
mov
mov
mov
cmp
jge
mov
mov
test
je
test
jne
test
jne
lea
cmp
ja
lea
push
call
pop
test
je
mov
push
push
call
pop
pop
mov
mov
test
je
push
push
call
pop
pop
inc
jmp
mov
mov
jmp
push
call
pop
mov
mov
mov
test
je
push
mov
mov
add
push
call
mov
mov
add
push
call
mov
mov
mov
mov
test
je
and
mov
mov
mov
mov
or
mov
call
mov
call
ret
mov
push
call
pop
ret
push
mov
push
push
push
xor
and
push
mov
xor
push
mov
mov
jmp
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
call
mov
call
xor
jmp
mov
jmp
xor
or
jmp
mov
or
xor
inc
inc
mov
test
je
mov
test
je
movsx
cmp
jg
je
sub
je
sub
je
dec
je
sub
je
sub
je
sub
jne
cmp
jne
mov
or
jmp
or
jmp
test
jne
or
jmp
mov
jmp
test
jne
and
and
or
or
jmp
cmp
jne
mov
or
jmp
sub
je
sub
je
dec
je
sub
je
sub
jne
test
jne
or
jmp
test
jne
inc
and
jmp
test
jne
inc
or
jmp
test
jne
or
jmp
mov
test
je
xor
jmp
or
inc
mov
test
jne
mov
test
je
jmp
inc
cmp
je
push
push
push
call
add
test
jne
push
add
pop
jmp
inc
cmp
je
cmp
jne
inc
cmp
je
push
push
push
call
add
test
jne
add
or
jmp
push
push
push
call
add
test
jne
add
or
jmp
push
push
push
call
add
test
jne
add
or
jmp
inc
cmp
je
cmp
jne
push
push
lea
push
push
push
call
add
test
jne
inc
mov
xor
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
push
push
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
push
mov
mov
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
push
mov
xor
mov
mov
mov
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
lea
mov
mov
lea
mov
test
je
mov
call
mov
mov
test
js
jle
mov
cmp
jne
cmp
je
push
call
add
test
je
push
push
call
add
mov
mov
call
mov
mov
cmp
je
push
push
mov
call
mov
mov
mov
cmp
je
jmp
mov
mov
mov
cmp
jne
test
je
jmp
mov
jmp
cmp
je
push
push
mov
mov
call
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
push
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmp
jne
push
mov
call
mov
mov
call
jmp
pop
add
pop
pop
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
push
push
push
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
push
push
push
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
push
call
add
pop
ret
push
mov
push
mov
push
push
call
pop
mov
mov
test
jne
call
mov
or
or
jmp
test
je
call
mov
jmp
push
xor
test
je
mov
test
je
mov
and
mov
mov
mov
and
or
mov
mov
test
jne
call
add
cmp
je
call
add
cmp
jne
push
call
pop
test
jne
push
call
pop
test
je
mov
mov
lea
mov
mov
sub
dec
mov
mov
test
jle
push
push
push
call
add
mov
jmp
or
mov
jmp
cmp
je
cmp
je
mov
mov
and
sar
shl
add
jmp
mov
test
je
push
push
push
push
call
and
add
cmp
je
mov
mov
mov
jmp
xor
inc
push
mov
lea
push
push
call
add
mov
cmp
je
or
or
jmp
movzx
pop
pop
pop
pop
ret
push
mov
mov
test
jne
call
mov
call
or
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
bt
jae
rep
jmp
cmp
jb
mov
xor
test
jne
bt
jb
bt
jae
test
jne
test
jne
bt
jae
mov
sub
lea
mov
lea
bt
jae
movq
sub
lea
movq
lea
test
je
bt
jae
movdqa
lea
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
jmp
movdqa
lea
lea
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
jmp
movdqa
lea
mov
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
cmp
jl
movdqu
sub
lea
movdqa
lea
jmp
bt
jae
mov
sub
lea
mov
lea
bt
jae
movq
sub
lea
movq
lea
mov
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
or
or
inc
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
(bad)
or
add
add
add
add
add
add
add
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
inc
add
or
add
or
add
pop
ret
nop
mov
mov
mov
pop
pop
ret
nop
mov
mov
mov
mov
mov
pop
pop
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
or
inc
add
add
ror
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
call
or
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
push
inc
add
add
add
inc
add
pop
ret
nop
mov
mov
mov
pop
pop
ret
lea
mov
mov
mov
mov
mov
pop
pop
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
lea
push
mov
and
test
jne
mov
and
shr
je
lea
nop
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
test
je
mov
shr
test
je
lea
movdqa
movdqa
lea
lea
dec
jne
and
je
mov
shr
je
mov
mov
lea
lea
dec
jne
mov
and
je
mov
mov
inc
inc
dec
jne
lea
pop
pop
pop
ret
lea
jmp
int3
int3
int3
mov
sub
sub
push
mov
mov
and
je
mov
mov
inc
inc
dec
jne
shr
je
mov
mov
lea
lea
dec
jne
pop
jmp
push
push
call
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
and
shl
mov
movsx
and
je
push
call
pop
and
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
and
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
and
call
mov
call
or
call
ret
push
mov
mov
call
mov
xor
mov
mov
mov
xor
push
mov
mov
mov
mov
mov
cmp
jne
xor
jmp
test
jne
call
and
call
mov
call
or
jmp
push
push
mov
sar
mov
and
shl
mov
mov
mov
mov
add
sar
cmp
je
cmp
jne
mov
not
test
jne
call
and
call
mov
call
jmp
mov
test
je
push
push
push
push
call
add
push
call
pop
test
je
mov
mov
test
je
call
mov
xor
cmp
lea
push
mov
sete
mov
push
mov
call
test
je
cmp
je
test
je
call
mov
and
mov
mov
mov
cmp
jbe
xor
mov
mov
test
jne
mov
xor
cmp
sete
mov
mov
mov
cmp
je
mov
mov
push
lea
mov
and
push
jmp
movsx
push
call
pop
test
je
mov
mov
sub
add
cmp
jbe
push
push
lea
push
call
add
cmp
je
mov
inc
inc
jmp
push
push
lea
push
call
add
cmp
je
mov
xor
push
push
inc
inc
push
mov
lea
push
push
lea
push
push
push
call
mov
test
je
push
lea
push
push
lea
push
mov
mov
push
call
test
je
mov
mov
add
cmp
jl
cmp
je
push
lea
push
push
lea
push
mov
mov
mov
push
call
test
je
cmp
jl
inc
inc
jmp
cmp
je
cmp
jne
movzx
xor
cmp
mov
mov
sete
add
add
mov
mov
mov
cmp
je
cmp
jne
push
call
pop
cmp
jne
add
cmp
je
push
pop
push
mov
call
pop
cmp
jne
inc
inc
mov
mov
cmp
jb
jmp
mov
mov
mov
inc
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
test
je
mov
xor
mov
test
jne
mov
mov
cmp
jbe
xor
sub
mov
lea
mov
cmp
jae
mov
inc
inc
mov
cmp
mov
mov
jne
inc
mov
inc
inc
mov
mov
mov
inc
inc
mov
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
mov
push
call
test
je
add
mov
cmp
jl
mov
sub
cmp
mov
jb
jmp
mov
cmp
jne
mov
cmp
jbe
mov
and
mov
mov
sub
mov
lea
cmp
jae
movzx
add
add
mov
cmp
jne
push
pop
mov
mov
add
add
add
mov
add
add
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
mov
mov
push
call
mov
mov
test
je
add
mov
mov
cmp
jl
mov
mov
sub
cmp
jb
jmp
mov
mov
test
je
mov
and
mov
sub
mov
lea
cmp
jae
movzx
add
add
mov
cmp
jne
push
pop
mov
mov
add
add
mov
add
add
cmp
jb
xor
push
push
push
lea
push
lea
sub
cdq
sub
sar
push
mov
push
push
push
call
mov
mov
mov
test
je
xor
mov
push
sub
lea
push
push
lea
add
mov
push
mov
mov
push
call
test
je
mov
add
mov
mov
cmp
jg
jmp
call
mov
mov
mov
mov
cmp
jg
mov
mov
mov
sub
mov
cmp
jb
jmp
push
lea
push
push
push
push
call
test
je
mov
xor
jmp
call
mov
mov
test
jne
test
je
push
pop
cmp
jne
call
mov
call
mov
jmp
push
call
pop
jmp
mov
mov
mov
test
je
cmp
jne
xor
jmp
call
mov
call
and
or
jmp
sub
mov
pop
pop
mov
xor
pop
call
leave
ret
push
mov
push
mov
test
jne
push
call
pop
jmp
push
call
pop
test
je
or
jmp
test
je
push
call
push
call
pop
neg
pop
sbb
jmp
xor
pop
pop
ret
push
mov
push
push
mov
xor
mov
and
cmp
jne
test
je
push
mov
sub
test
jle
push
push
push
call
pop
push
call
add
cmp
jne
mov
test
jns
and
mov
jmp
or
or
pop
mov
and
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
call
xor
mov
and
push
call
pop
and
xor
mov
mov
cmp
jge
mov
mov
test
je
test
je
push
push
call
pop
pop
mov
mov
mov
test
je
cmp
jne
push
call
pop
cmp
je
inc
mov
jmp
test
jne
test
je
push
call
pop
cmp
jne
or
and
call
inc
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
call
cmp
mov
je
mov
call
ret
mov
mov
push
call
pop
ret
push
push
call
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
and
shl
mov
movsx
and
je
push
call
pop
and
mov
test
je
push
call
pop
mov
jmp
call
mov
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
and
call
mov
call
or
call
ret
push
mov
push
push
mov
push
call
pop
cmp
je
mov
cmp
jne
test
jne
cmp
jne
test
je
push
call
push
mov
call
pop
pop
cmp
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
pop
mov
sar
and
mov
shl
mov
test
je
push
call
pop
or
jmp
xor
pop
pop
pop
ret
push
mov
push
mov
test
je
test
je
push
call
and
xor
pop
mov
mov
mov
pop
pop
ret
push
mov
mov
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
pop
ret
call
int3
push
call
pop
xor
ret
push
mov
push
call
mov
test
je
mov
push
mov
mov
cmp
je
add
lea
cmp
jb
lea
cmp
jae
cmp
je
xor
test
je
mov
test
je
cmp
jne
and
xor
inc
jmp
cmp
jne
or
jmp
mov
push
mov
mov
cmp
jne
push
pop
mov
add
and
cmp
jl
cmp
mov
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
jmp
push
and
call
pop
mov
or
pop
jmp
xor
pop
pop
pop
ret
push
push
call
mov
test
je
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
push
call
pop
and
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
call
push
call
pop
mov
mov
test
je
push
call
pop
cmp
je
cmp
je
cmp
jne
push
call
pop
mov
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
push
mov
call
mov
pop
test
jne
push
push
call
mov
pop
pop
test
je
push
push
call
pop
pop
test
je
push
push
call
pop
pop
call
or
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
push
push
call
mov
mov
and
xor
inc
mov
mov
push
pop
mov
mov
mov
and
push
call
pop
and
push
call
mov
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
push
call
pop
mov
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
call
call
test
jne
call
xor
ret
push
call
pop
mov
cmp
je
push
push
push
call
mov
pop
pop
test
je
push
push
call
pop
pop
test
je
push
push
call
pop
pop
call
or
mov
xor
inc
pop
ret
call
xor
pop
ret
mov
cmp
je
push
call
or
pop
jmp
push
mov
push
push
xor
push
cmp
jne
call
push
pop
mov
call
mov
jmp
mov
test
je
call
test
jne
call
test
jne
xor
inc
xor
push
push
push
push
mov
push
push
call
mov
test
jne
call
push
call
pop
xor
jmp
add
push
call
pop
mov
test
je
push
push
push
push
push
push
call
test
jne
call
push
call
push
call
and
pop
jmp
xor
inc
pop
pop
leave
ret
push
mov
push
lea
push
push
push
call
test
je
push
push
call
test
je
push
call
leave
ret
push
mov
push
call
pop
push
call
int3
push
mov
call
push
call
pop
push
call
int3
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
cmp
je
push
call
pop
test
je
push
call
pop
call
push
push
call
pop
pop
test
jne
push
push
push
call
pop
mov
mov
jmp
mov
test
je
call
add
cmp
jb
cmp
pop
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
mov
push
push
push
call
add
pop
ret
push
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
jmp
push
mov
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
call
pop
ret
push
call
pop
ret
push
push
call
push
call
pop
and
cmp
je
mov
mov
mov
cmp
jne
push
mov
call
mov
mov
test
je
push
call
mov
mov
mov
mov
sub
mov
cmp
jb
push
call
cmp
je
cmp
jb
push
call
mov
push
call
mov
call
push
mov
call
mov
push
call
mov
cmp
jne
cmp
je
mov
mov
mov
mov
mov
jmp
push
push
call
pop
pop
push
push
call
pop
pop
mov
call
cmp
jne
mov
push
call
pop
push
call
cmp
je
push
call
pop
ret
call
ret
push
mov
push
push
push
call
add
pop
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
jne
push
call
push
call
pop
pop
ret
push
mov
mov
xor
cmp
je
inc
cmp
jb
xor
pop
ret
mov
pop
ret
push
mov
sub
mov
xor
mov
push
mov
push
push
call
mov
pop
test
je
push
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
je
cmp
je
push
push
push
call
add
xor
test
jne
push
push
push
mov
call
mov
test
jne
push
push
push
call
add
test
jne
push
call
inc
pop
cmp
jbe
push
call
lea
mov
sub
push
sar
push
sub
push
push
call
add
test
jne
push
push
mov
push
call
add
test
jne
push
push
push
call
add
test
jne
push
push
push
call
add
jmp
push
call
mov
test
je
cmp
je
xor
mov
mov
mov
cmp
je
inc
cmp
jb
push
lea
push
lea
push
mov
call
pop
push
lea
push
push
call
pop
mov
pop
xor
pop
call
leave
ret
push
push
push
push
push
call
int3
push
push
call
push
call
pop
xor
mov
push
push
pop
push
call
pop
pop
mov
mov
test
jne
push
lea
push
push
call
add
or
jmp
mov
mov
add
cmp
jae
mov
or
mov
and
mov
and
mov
mov
mov
mov
add
mov
mov
jmp
lea
push
call
cmp
je
mov
test
je
mov
mov
add
mov
add
mov
mov
cmp
jl
mov
mov
xor
inc
mov
cmp
jge
push
push
call
pop
pop
mov
mov
test
jne
mov
mov
mov
mov
mov
mov
cmp
jge
mov
cmp
je
cmp
je
mov
test
je
test
jne
push
call
mov
test
je
mov
sar
mov
and
shl
add
mov
mov
mov
mov
mov
mov
push
lea
push
call
inc
mov
mov
inc
mov
mov
inc
mov
add
mov
jmp
mov
add
mov
add
cmp
jae
mov
or
mov
and
mov
mov
mov
add
mov
jmp
inc
mov
mov
jmp
mov
cmp
jge
mov
shl
add
mov
cmp
je
cmp
je
movsx
or
mov
jmp
mov
test
jne
push
pop
jmp
lea
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
mov
and
cmp
jne
movsx
or
jmp
cmp
jne
movsx
or
mov
push
lea
push
call
inc
jmp
movsx
or
mov
mov
mov
test
je
mov
mov
inc
jmp
mov
call
xor
call
ret
push
call
pop
ret
push
mov
push
push
cmp
jne
call
push
push
push
push
mov
xor
push
push
mov
call
mov
mov
test
je
cmp
jne
mov
lea
push
lea
push
push
push
push
call
mov
add
cmp
jae
mov
cmp
jae
lea
cmp
jb
push
call
mov
pop
test
je
lea
push
lea
push
lea
push
push
push
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
push
mov
mov
push
mov
push
and
mov
mov
mov
push
mov
test
je
mov
add
mov
xor
mov
cmp
jne
xor
test
sete
inc
mov
mov
mov
jmp
inc
test
je
mov
mov
inc
mov
mov
movzx
push
inc
call
pop
test
je
inc
test
je
mov
mov
inc
inc
mov
test
je
mov
test
jne
cmp
je
cmp
jne
test
je
mov
jmp
dec
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
cmp
je
mov
test
je
mov
add
mov
mov
inc
xor
inc
xor
jmp
inc
inc
cmp
je
cmp
jne
test
jne
cmp
je
lea
cmp
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
jmp
dec
test
je
mov
inc
inc
test
jne
mov
test
je
cmp
jne
cmp
je
cmp
je
test
je
movsx
push
call
pop
test
je
test
je
mov
mov
inc
inc
inc
mov
mov
inc
jmp
test
je
inc
inc
inc
inc
jmp
test
je
mov
inc
inc
jmp
mov
pop
pop
pop
test
je
and
mov
inc
pop
ret
cmp
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
inc
pop
add
mov
test
jne
lea
push
push
call
mov
pop
pop
mov
test
je
mov
push
cmp
je
push
call
cmp
pop
lea
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
jne
add
add
cmp
jne
mov
push
call
and
and
mov
xor
pop
pop
pop
pop
ret
push
call
and
or
jmp
xor
push
push
push
push
push
call
int3
push
mov
mov
mov
pop
ret
push
mov
mov
test
js
cmp
jle
cmp
jne
mov
jmp
mov
mov
mov
pop
ret
call
mov
call
or
pop
ret
push
mov
sub
mov
and
and
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
lea
push
call
mov
xor
mov
call
xor
call
xor
lea
push
call
mov
xor
lea
xor
xor
cmp
jne
mov
jmp
test
jne
mov
or
shl
or
mov
not
mov
pop
pop
leave
ret
push
push
mov
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
push
mov
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
mov
push
push
call
mov
xor
test
je
push
mov
cmp
je
add
cmp
jne
add
cmp
jne
push
push
push
push
sub
push
sar
inc
push
push
push
push
call
mov
test
je
push
call
mov
pop
test
je
xor
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
xor
push
call
mov
jmp
push
call
xor
pop
pop
pop
leave
ret
push
mov
mov
xor
je
push
call
pop
ret
pop
jmp
push
mov
mov
xor
push
je
call
pop
ret
call
pop
ret
push
mov
mov
xor
push
je
call
pop
ret
call
pop
ret
push
mov
mov
xor
push
push
je
call
pop
ret
call
pop
ret
push
mov
sub
lea
push
call
test
je
movzx
leave
ret
push
pop
leave
ret
push
mov
push
push
mov
test
jns
mov
xor
xor
mov
je
push
lea
push
call
cmp
jne
inc
mov
xor
test
setg
pop
leave
ret
push
push
push
call
mov
mov
push
push
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
mov
push
push
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
pop
mov
pop
ret
push
mov
push
call
pop
ret
push
mov
push
call
push
call
pop
ret
push
mov
push
call
push
call
pop
ret
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzx
push
call
pop
test
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
push
mov
push
push
mov
push
mov
push
call
cmp
je
push
call
mov
test
je
push
call
cmp
je
push
call
mov
test
je
push
call
push
pop
lea
mov
cmp
je
cmp
je
push
call
mov
cmp
je
cmp
je
push
call
mov
add
dec
mov
jne
mov
add
push
call
pop
pop
pop
pop
ret
push
mov
push
push
mov
xor
mov
push
test
je
cmp
je
mov
test
je
cmp
jne
mov
test
je
cmp
jne
push
call
push
call
pop
pop
mov
test
je
cmp
jne
push
call
push
call
pop
pop
push
call
push
call
pop
pop
mov
test
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
push
call
add
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
push
pop
lea
lea
mov
cmp
je
mov
test
je
cmp
jne
push
call
push
call
pop
pop
mov
cmp
je
mov
test
je
cmp
jne
push
call
pop
mov
add
add
dec
mov
jne
push
call
pop
pop
pop
pop
pop
ret
push
mov
push
mov
test
je
push
push
mov
push
call
cmp
je
push
call
mov
test
je
push
call
cmp
je
push
call
mov
test
je
push
call
push
pop
lea
mov
cmp
je
cmp
je
push
call
mov
cmp
je
cmp
je
push
call
mov
add
dec
mov
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
push
push
call
call
mov
mov
test
je
cmp
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
push
lea
push
call
pop
pop
mov
mov
mov
call
jmp
mov
push
call
pop
ret
push
mov
push
mov
test
je
mov
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmp
pop
jne
cmp
je
push
call
pop
mov
pop
jmp
xor
pop
pop
ret
cmp
jne
push
call
pop
mov
xor
ret
push
mov
mov
sub
je
sub
je
sub
je
dec
je
xor
pop
ret
mov
pop
ret
mov
pop
ret
mov
pop
ret
mov
pop
ret
push
mov
sub
lea
push
call
mov
and
cmp
jne
mov
call
jmp
cmp
jne
mov
call
jmp
cmp
jne
mov
mov
mov
cmp
je
mov
and
leave
ret
push
mov
push
mov
push
push
push
xor
lea
push
push
call
xor
movzx
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
lea
push
push
call
xor
mov
test
je
mov
mov
inc
cmp
jb
mov
mov
lea
jmp
movzx
movzx
jmp
cmp
jae
mov
inc
cmp
jbe
add
mov
test
jne
push
push
lea
push
push
lea
push
push
push
call
push
push
lea
push
push
push
lea
push
push
push
push
call
add
lea
push
push
push
push
push
lea
push
push
push
push
call
add
mov
movzx
test
je
or
mov
jmp
test
je
or
mov
mov
jmp
mov
inc
cmp
jb
jmp
push
lea
pop
sub
mov
mov
add
add
mov
add
cmp
ja
or
lea
jmp
cmp
ja
or
lea
mov
jmp
mov
mov
inc
lea
cmp
jb
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmp
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
mov
call
jmp
mov
push
call
pop
ret
push
push
call
or
call
mov
mov
call
mov
push
call
pop
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
mov
rep
xor
mov
push
push
call
pop
pop
mov
mov
test
jne
mov
push
call
test
mov
jne
mov
cmp
je
push
call
pop
mov
mov
push
call
mov
test
jne
test
jne
push
call
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jge
mov
mov
inc
jmp
mov
mov
cmp
jge
mov
mov
inc
jmp
mov
cmp
jge
mov
mov
inc
jmp
push
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
mov
call
jmp
mov
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
mov
jmp
xor
mov
call
ret
push
mov
sub
mov
xor
mov
push
push
push
mov
call
mov
pop
mov
test
jne
push
call
pop
xor
jmp
push
xor
mov
mov
mov
cmp
je
inc
add
mov
cmp
jb
cmp
je
cmp
je
movzx
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
mov
xor
inc
add
mov
cmp
jbe
cmp
lea
je
mov
test
je
movzx
movzx
jmp
or
inc
cmp
jbe
add
cmp
jne
lea
mov
or
inc
dec
jne
push
call
add
mov
mov
jmp
mov
xor
movzx
mov
shl
or
lea
stos
stos
stos
jmp
cmp
je
push
call
jmp
or
jmp
push
lea
push
push
call
mov
add
imul
lea
mov
cmp
mov
je
mov
test
je
movzx
movzx
jmp
cmp
jae
mov
or
movzx
inc
cmp
jbe
add
cmp
jne
mov
inc
add
mov
cmp
jb
mov
push
mov
mov
call
add
mov
push
lea
lea
pop
mov
mov
lea
lea
dec
jne
push
call
pop
xor
pop
mov
pop
xor
pop
call
leave
ret
push
mov
mov
sub
cmp
je
push
push
lea
call
mov
mov
test
jne
mov
lea
cmp
ja
add
movzx
movzx
jmp
mov
push
cmp
jae
push
call
pop
pop
test
jne
movzx
movzx
jmp
movzx
mov
movzx
movzx
jmp
lea
push
push
lea
push
push
push
call
add
test
jne
movzx
movzx
jmp
movzx
cmp
pop
je
mov
and
leave
ret
push
push
call
mov
cmp
je
push
call
pop
and
push
push
call
pop
pop
mov
mov
call
call
ret
push
call
pop
ret
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mul
mov
mov
mul
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
push
mov
push
call
test
je
push
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
push
mov
mov
mov
pop
ret
and
ret
cmp
jne
repz
jmp
push
push
call
xor
mov
push
call
pop
and
push
pop
mov
cmp
jge
mov
mov
test
je
test
je
push
call
pop
cmp
je
inc
mov
cmp
jl
mov
mov
add
push
call
mov
push
call
pop
mov
and
inc
jmp
mov
call
mov
call
ret
mov
push
call
pop
ret
push
mov
push
mov
cmp
jne
push
call
pop
test
jne
push
call
pop
push
call
pop
pop
ret
push
push
mov
mov
push
mov
test
je
cmp
je
push
call
push
call
and
pop
add
cmp
jl
pop
cmp
je
cmp
jne
push
call
add
cmp
jl
pop
pop
ret
push
push
call
cmp
jne
call
push
call
push
call
pop
pop
mov
cmp
jne
push
call
pop
mov
test
jne
call
mov
xor
jmp
push
call
pop
and
cmp
jne
push
push
call
mov
jmp
push
call
pop
mov
call
xor
inc
call
ret
push
call
pop
ret
push
push
mov
mov
cmp
jne
mov
push
push
add
call
add
cmp
jl
xor
pop
inc
pop
ret
push
mov
mov
push
call
pop
ret
push
mov
push
push
xor
push
push
push
call
mov
add
test
jne
cmp
jbe
push
call
lea
mov
cmp
jbe
or
cmp
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
xor
push
call
mov
pop
test
jne
test
je
push
call
mov
lea
mov
cmp
jbe
or
cmp
jne
pop
pop
mov
pop
pop
ret
push
mov
push
push
xor
push
push
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
mov
cmp
jbe
or
cmp
jne
mov
pop
pop
pop
ret
push
push
call
and
xor
mov
test
setne
test
jne
call
push
pop
mov
call
mov
jmp
or
xor
cmp
setne
test
je
cmp
je
mov
and
neg
sbb
inc
je
and
push
push
push
push
push
push
lea
push
call
add
mov
mov
mov
call
test
je
or
mov
call
ret
mov
mov
cmp
je
test
je
mov
mov
sar
and
shl
mov
and
push
call
pop
ret
push
mov
push
and
lea
push
push
call
pop
pop
test
jne
or
leave
ret
push
push
push
push
push
push
push
push
call
push
mov
call
add
mov
pop
leave
ret
push
mov
push
push
push
push
push
push
call
add
pop
ret
push
mov
push
push
push
push
call
add
pop
ret
push
mov
sub
push
mov
test
jne
xor
jmp
push
push
push
lea
call
mov
xor
cmp
jne
push
push
push
call
add
mov
jmp
mov
test
je
mov
test
jne
call
mov
call
mov
jmp
movzx
mov
dec
mov
inc
test
push
mov
pop
je
test
jne
movzx
mov
mov
test
jne
mov
movzx
jmp
mov
test
jne
mov
jmp
shl
movzx
or
inc
movzx
mov
movzx
mov
mov
inc
test
push
pop
je
test
jne
mov
jmp
mov
dec
test
je
shl
movzx
or
movzx
inc
cmp
jne
test
je
mov
test
jne
jmp
sbb
and
dec
cmp
pop
pop
je
mov
and
mov
pop
leave
ret
push
mov
push
push
push
push
call
add
pop
ret
push
mov
sub
lea
push
push
push
push
call
mov
xor
test
je
mov
cmp
jne
push
push
push
call
add
mov
jmp
mov
test
je
mov
test
jne
call
mov
call
mov
jmp
movzx
mov
mov
movzx
dec
inc
test
mov
je
test
jne
movzx
mov
test
jne
mov
movzx
mov
jmp
mov
test
jne
mov
jmp
shl
movzx
or
mov
movzx
inc
mov
mov
mov
cmp
jb
cmp
ja
add
jmp
cmp
jb
cmp
ja
add
jmp
mov
movzx
test
je
movzx
mov
mov
movzx
mov
mov
movzx
inc
test
je
test
jne
mov
jmp
mov
dec
test
je
shl
movzx
or
mov
movzx
inc
mov
cmp
jb
cmp
ja
add
jmp
cmp
jb
cmp
ja
add
jmp
mov
movzx
push
test
mov
pop
je
mov
movzx
mov
mov
cmp
jne
test
je
mov
test
jne
jmp
sbb
and
dec
cmp
pop
pop
pop
je
mov
and
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
add
push
movzx
movzx
add
xor
add
push
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmp
sete
mov
ret
mov
mov
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
xor
cmp
jne
mov
cmp
sete
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
push
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jbe
lea
mov
mov
mov
cmp
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
push
mov
mov
cmp
jne
call
mov
jmp
test
js
cmp
jae
mov
sar
and
mov
shl
movsx
and
pop
ret
call
mov
call
xor
pop
ret
push
push
call
or
mov
mov
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
mov
and
shl
mov
movsx
and
je
push
call
pop
and
mov
mov
test
je
push
push
push
push
call
add
mov
mov
jmp
call
mov
call
and
mov
mov
mov
mov
call
mov
jmp
mov
mov
mov
push
call
pop
ret
call
and
call
mov
call
mov
mov
call
ret
push
mov
push
push
push
mov
push
push
call
or
pop
cmp
jne
call
mov
mov
mov
jmp
push
lea
push
push
push
push
call
test
jne
call
push
call
pop
jmp
mov
sar
and
mov
shl
and
mov
mov
pop
pop
leave
ret
push
mov
inc
push
mov
push
call
pop
mov
mov
test
je
or
mov
jmp
or
lea
mov
mov
mov
and
mov
pop
pop
ret
push
mov
sub
push
lea
call
mov
movzx
mov
movzx
and
cmp
je
mov
and
leave
ret
push
mov
push
push
call
pop
pop
pop
ret
push
push
call
mov
mov
sar
mov
and
shl
add
cmp
jne
push
call
pop
and
cmp
jne
push
lea
push
call
inc
mov
call
mov
sar
and
shl
mov
add
add
push
call
xor
inc
call
ret
mov
push
call
pop
ret
push
push
call
or
mov
and
push
call
pop
test
jne
or
jmp
push
call
pop
and
xor
mov
cmp
jge
mov
test
je
mov
mov
add
cmp
jae
test
jne
cmp
jne
push
call
pop
mov
cmp
jne
push
lea
push
call
inc
and
call
mov
test
jne
lea
push
call
test
je
lea
push
call
add
jmp
mov
mov
mov
push
call
pop
ret
mov
test
jne
mov
or
mov
sub
sar
mov
shl
add
mov
cmp
jne
inc
jmp
push
push
call
pop
pop
mov
mov
test
je
mov
add
mov
add
cmp
jae
mov
or
and
add
mov
jmp
mov
shl
mov
mov
sar
mov
and
shl
mov
mov
push
call
pop
test
jne
or
mov
mov
call
mov
call
ret
mov
push
call
pop
ret
push
mov
mov
push
push
test
js
cmp
jae
mov
sar
mov
mov
and
shl
test
je
cmp
je
cmp
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
or
xor
jmp
call
mov
call
and
or
pop
pop
pop
ret
push
mov
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
and
mov
shl
test
je
mov
pop
ret
call
and
call
mov
call
or
pop
ret
push
mov
mov
push
push
test
js
cmp
jae
mov
sar
mov
mov
and
shl
cmp
jne
cmp
push
mov
jne
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
mov
xor
pop
jmp
call
mov
call
and
or
pop
pop
pop
ret
push
mov
mov
mov
and
sar
shl
mov
add
add
push
call
pop
ret
push
mov
sub
push
push
mov
test
je
mov
test
je
cmp
jne
mov
test
je
xor
mov
xor
pop
pop
leave
ret
push
push
lea
call
mov
cmp
jne
mov
test
je
movzx
mov
xor
inc
jmp
lea
push
movzx
push
call
pop
pop
test
je
mov
cmp
jle
cmp
jl
xor
cmp
setne
push
push
push
push
push
push
call
mov
test
jne
cmp
jb
cmp
je
mov
jmp
xor
cmp
setne
xor
inc
push
push
mov
push
push
push
push
call
test
jne
call
or
mov
cmp
je
mov
and
mov
pop
jmp
push
mov
push
push
push
push
call
add
pop
ret
push
mov
push
mov
cmp
jne
call
mov
cmp
jne
mov
leave
ret
push
lea
push
push
lea
push
push
call
test
je
mov
leave
ret
push
push
call
mov
cmp
jne
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
mov
and
shl
mov
movsx
and
je
push
call
pop
xor
mov
mov
mov
test
je
push
call
pop
push
call
test
jne
call
mov
mov
test
je
call
mov
call
mov
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
mov
call
or
call
ret
push
push
call
call
mov
test
je
and
call
jmp
xor
inc
ret
mov
mov
call
int3
push
call
mov
ret
push
push
push
call
pop
pop
mov
push
call
mov
mov
test
jne
push
pop
pop
ret
and
xor
pop
ret
push
push
call
call
and
push
call
pop
mov
mov
mov
call
mov
call
ret
mov
call
ret
push
mov
push
push
push
mov
push
push
call
push
mov
call
mov
mov
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
mov
add
cmp
jb
push
push
call
pop
pop
test
jne
lea
cmp
jb
push
push
call
pop
pop
test
je
sar
push
lea
call
mov
push
call
lea
push
mov
call
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
call
neg
sbb
neg
pop
dec
pop
ret
push
xor
push
call
mov
add
cmp
jb
pop
ret
push
mov
mov
mov
pop
ret
push
mov
mov
mov
pop
ret
push
call
ret
push
mov
mov
mov
mov
mov
mov
pop
ret
push
push
call
xor
mov
xor
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
push
push
call
pop
pop
add
mov
mov
jmp
mov
sub
je
sub
je
dec
je
call
mov
call
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
xor
inc
mov
push
call
mov
cmp
je
test
jne
push
call
test
je
push
call
pop
and
cmp
je
cmp
je
cmp
jne
mov
mov
and
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
mov
add
cmp
jge
mov
imul
mov
and
inc
mov
mov
jmp
push
call
mov
mov
mov
call
cmp
jne
push
push
call
pop
jmp
mov
mov
mov
test
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
push
mov
mov
mov
push
mov
cmp
je
mov
imul
add
add
cmp
jb
imul
add
cmp
jae
cmp
jne
mov
jmp
xor
pop
pop
ret
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
mov
test
je
mov
test
je
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
cmp
je
add
dec
jne
test
je
sub
movzx
mov
lea
test
je
dec
jne
xor
test
jne
mov
call
push
jmp
push
mov
push
mov
test
je
mov
test
je
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
mov
sub
movzx
mov
lea
test
je
dec
jne
xor
pop
test
jne
mov
call
push
jmp
push
mov
mov
mov
add
test
jne
sub
sar
dec
pop
ret
push
mov
mov
mov
push
test
jne
test
jne
cmp
jne
xor
jmp
test
je
mov
test
je
test
jne
xor
mov
jmp
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
push
mov
mov
cmp
jne
sub
movzx
mov
lea
test
je
dec
jne
jmp
sub
movzx
mov
lea
test
je
dec
je
dec
jne
test
jne
xor
mov
test
pop
pop
jne
cmp
jne
mov
xor
push
mov
pop
jmp
xor
mov
call
push
jmp
push
mov
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
xor
push
mov
call
mov
mov
call
mov
cmp
jne
push
push
push
call
mov
test
jne
call
cmp
jne
push
call
mov
test
je
push
push
call
test
je
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
mov
test
je
push
push
call
push
call
mov
mov
call
test
je
mov
test
je
push
call
cmp
je
push
pop
jmp
cmp
je
push
call
push
jmp
mov
mov
cmp
je
cmp
je
push
call
push
mov
call
mov
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
test
jne
mov
or
jmp
mov
cmp
je
push
call
test
je
call
mov
test
je
mov
cmp
je
push
call
test
je
push
call
mov
mov
push
call
test
je
push
push
push
push
call
jmp
xor
mov
pop
pop
xor
pop
call
leave
ret
push
mov
sub
push
push
lea
call
movzx
mov
mov
test
jne
xor
cmp
je
mov
mov
movzx
and
jmp
mov
test
je
xor
inc
cmp
pop
je
mov
and
mov
leave
ret
push
mov
push
push
push
push
call
add
pop
ret
push
mov
push
mov
test
je
mov
test
je
mov
test
jne
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
mov
sub
mov
mov
inc
test
je
dec
jne
pop
test
jne
mov
call
push
jmp
xor
jmp
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
push
mov
push
mov
test
je
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
pop
ret
push
mov
push
push
mov
xor
mov
push
push
mov
push
test
jle
mov
mov
dec
cmp
je
inc
test
jne
or
mov
sub
dec
cmp
lea
jl
mov
mov
xor
test
jne
mov
mov
mov
mov
mov
xor
cmp
push
setne
push
push
push
lea
push
push
call
mov
mov
test
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
mov
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
mov
jmp
xor
test
je
push
push
push
push
push
push
call
test
je
mov
push
push
push
push
push
push
call
mov
add
test
je
mov
test
je
mov
test
je
cmp
jg
push
push
push
push
push
push
call
add
jmp
test
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
jmp
xor
test
je
push
push
push
push
push
push
call
add
test
je
xor
push
push
cmp
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
pop
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
mov
test
je
sub
cmp
jne
push
call
pop
pop
ret
push
mov
push
mov
xor
mov
mov
push
push
push
xor
test
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
test
jne
xor
jmp
jle
cmp
ja
lea
cmp
ja
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
jmp
mov
test
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
push
push
push
push
call
mov
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
push
mov
mov
cmp
jne
xor
leave
ret
mov
cmp
jae
movzx
mov
movzx
jmp
lea
push
push
lea
push
push
call
neg
sbb
and
movzx
movzx
and
leave
ret
push
mov
mov
test
jle
push
push
call
pop
pop
push
push
push
push
push
push
call
add
pop
ret
push
mov
call
push
mov
call
push
call
cmp
pop
pop
jne
push
call
pop
push
call
pop
pop
ret
push
mov
sub
push
call
test
je
push
pop
int
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
imul
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
call
leave
ret
push
mov
xor
mov
cmp
jbe
mov
cmp
je
inc
add
cmp
jb
pop
ret
push
mov
push
push
push
xor
mov
lea
cdq
sub
mov
sar
push
push
push
call
add
test
je
jns
lea
jmp
lea
cmp
jle
or
jmp
mov
pop
pop
pop
pop
ret
push
mov
cmp
je
push
call
pop
test
js
cmp
jae
mov
pop
ret
xor
pop
ret
push
mov
mov
xor
je
xor
push
push
push
push
push
push
push
push
push
call
pop
ret
push
push
push
push
push
push
call
pop
push
call
pop
ret
push
mov
push
mov
xor
test
je
mov
push
push
mov
push
pop
push
pop
sub
mov
jmp
push
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
dec
je
test
je
cmp
je
movzx
movzx
pop
sub
pop
pop
pop
ret
push
mov
cmp
jne
push
call
pop
pop
ret
push
mov
test
jne
push
call
pop
xor
jmp
push
jmp
test
jne
inc
push
push
push
push
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
mov
xor
pop
pop
pop
ret
call
mov
call
push
call
pop
mov
jmp
call
mov
call
push
call
pop
mov
mov
jmp
push
mov
sub
push
call
test
je
push
push
call
push
call
mov
test
jne
or
jmp
mov
call
test
mov
je
and
and
mov
mov
mov
mov
mov
lea
push
push
mov
push
push
push
call
jmp
or
push
push
push
push
push
push
push
call
pop
leave
ret
push
mov
sub
push
xor
test
push
mov
mov
mov
mov
je
mov
mov
jmp
mov
mov
lea
push
call
pop
test
jne
mov
mov
test
jne
test
jne
cmp
je
or
mov
and
mov
sub
je
dec
je
dec
je
call
mov
mov
or
call
push
pop
mov
call
mov
jmp
mov
jmp
test
je
test
je
mov
mov
jmp
mov
jmp
mov
mov
mov
push
push
pop
push
pop
mov
sub
je
sub
je
sub
je
sub
je
sub
jne
cmp
sete
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
and
mov
cmp
jg
je
test
je
cmp
je
cmp
je
cmp
jne
mov
jmp
push
jmp
push
pop
jmp
cmp
je
cmp
je
cmp
je
call
mov
mov
or
call
push
pop
mov
call
jmp
push
jmp
xor
inc
mov
mov
mov
mov
test
je
mov
not
and
test
mov
js
xor
inc
mov
test
je
or
or
mov
mov
mov
test
je
or
mov
test
je
or
mov
test
je
or
jmp
test
je
or
mov
call
mov
mov
cmp
jne
call
mov
or
call
mov
call
mov
pop
pop
pop
leave
ret
push
mov
push
mov
push
lea
push
push
push
push
call
add
mov
cmp
jne
mov
mov
mov
and
cmp
jne
test
je
push
lea
push
and
push
push
push
mov
push
push
call
add
mov
cmp
jne
mov
mov
sar
and
mov
shl
and
call
push
call
pop
call
mov
jmp
push
call
test
jne
mov
mov
sar
and
mov
shl
and
call
mov
push
call
pop
push
call
test
jne
call
mov
jmp
cmp
jne
or
jmp
cmp
jne
or
push
push
call
mov
pop
pop
mov
mov
sar
and
mov
shl
or
mov
mov
mov
sar
and
mov
shl
mov
and
mov
mov
and
mov
jne
test
jns
test
je
push
push
push
push
call
mov
and
add
mov
mov
cmp
jne
call
cmp
je
push
call
jmp
push
lea
push
push
mov
call
add
test
jne
cmp
jne
push
push
push
call
add
cmp
je
push
push
push
push
call
and
add
cmp
je
mov
mov
test
jns
test
jne
mov
and
jne
or
jmp
or
mov
mov
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
and
cmp
jne
mov
jmp
mov
test
je
mov
test
jne
mov
mov
and
cmp
je
cmp
je
cmp
jne
test
je
push
pop
cmp
jbe
cmp
jbe
cmp
je
jmp
push
push
push
push
call
add
or
je
push
push
push
push
call
and
add
cmp
je
push
lea
push
push
call
add
cmp
je
mov
push
pop
cmp
je
cmp
jne
cmp
jne
mov
jmp
and
cmp
jne
push
call
pop
call
push
pop
mov
jmp
cmp
jne
push
push
push
push
call
and
add
cmp
je
mov
jmp
test
je
push
pop
cmp
jbe
cmp
ja
push
push
push
push
call
add
or
je
push
push
push
push
call
and
add
cmp
jne
jmp
push
pop
movsx
mov
dec
je
dec
jne
mov
jmp
push
pop
mov
mov
mov
sub
push
lea
add
push
push
call
add
cmp
je
mov
add
cmp
jg
mov
mov
sar
and
mov
shl
mov
xor
and
xor
mov
mov
mov
sar
and
mov
shl
shr
mov
shl
and
or
mov
mov
cmp
jne
test
je
mov
mov
sar
and
mov
shl
or
mov
mov
mov
mov
and
cmp
jne
test
je
push
call
push
lea
push
and
push
push
push
push
push
call
add
cmp
jne
call
push
call
mov
mov
sar
and
mov
shl
and
push
call
pop
jmp
mov
mov
sar
and
mov
shl
mov
mov
jmp
push
push
push
push
push
call
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
test
je
sub
test
je
movzx
cmp
jne
test
cmove
inc
sub
jbe
test
jne
lea
and
cmp
ja
mov
cmp
jne
sub
jbe
lea
add
not
and
test
je
xor
pop
pop
ret
lea
sbb
or
pop
pop
ret
push
mov
cmp
push
jne
cmp
jne
call
mov
call
mov
jmp
cmp
je
mov
cmp
jbe
call
mov
call
mov
jmp
pop
pop
jmp
push
push
push
push
call
add
pop
pop
ret
push
mov
sub
cmp
je
push
push
push
push
lea
call
mov
mov
test
je
mov
test
je
mov
cmp
jbe
call
mov
call
jmp
mov
cmp
jne
push
push
push
call
add
mov
jmp
sub
movzx
lea
push
push
call
mov
movzx
lea
push
push
call
add
inc
dec
je
test
je
cmp
je
sub
cmp
je
mov
and
pop
mov
pop
pop
leave
ret
xor
leave
ret
mov
cmp
je
cmp
je
push
call
ret
xor
push
push
push
push
push
push
push
call
mov
ret
call
test
je
push
call
pop
test
je
push
call
test
je
push
pop
int
push
push
push
call
add
push
call
int3
push
mov
cmp
jne
call
mov
call
or
pop
ret
push
push
push
call
pop
ret
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
push
mov
sub
push
push
push
mov
xor
push
push
push
push
mov
mov
call
mov
mov
and
add
mov
cmp
je
push
push
push
push
call
mov
and
add
cmp
je
mov
mov
sub
sbb
mov
js
jg
test
je
push
push
call
push
call
mov
test
jne
call
mov
call
mov
pop
pop
pop
leave
ret
push
push
call
pop
mov
mov
pop
test
jl
jg
cmp
jb
mov
jmp
mov
push
push
push
call
add
cmp
je
cdq
sub
mov
sbb
mov
js
jg
test
je
jmp
call
cmp
jne
call
mov
or
or
push
push
call
pop
pop
push
push
call
push
call
jmp
test
jg
jl
test
jae
push
push
push
push
call
and
add
cmp
je
push
call
pop
push
call
neg
sbb
neg
dec
cdq
mov
mov
mov
and
mov
cmp
jne
call
mov
call
mov
call
mov
and
cmp
je
push
push
push
push
call
and
add
cmp
je
xor
jmp
push
mov
sub
mov
push
push
mov
push
push
pop
xor
mov
mov
mov
cmp
jne
call
mov
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
mov
and
shl
mov
mov
mov
test
je
cmp
jbe
call
mov
call
mov
jmp
test
je
test
jne
cmp
jne
call
and
jmp
mov
add
sar
mov
movsx
dec
je
dec
jne
mov
not
test
je
and
mov
mov
jmp
mov
not
test
je
shr
cmp
jae
push
pop
push
call
pop
mov
test
jne
call
mov
call
mov
jmp
push
push
push
push
call
mov
add
mov
mov
mov
mov
mov
mov
mov
test
mov
je
mov
cmp
je
test
je
mov
xor
lea
mov
inc
dec
cmp
mov
mov
je
mov
mov
cmp
je
test
je
mov
mov
inc
push
dec
cmp
mov
pop
mov
jne
mov
mov
cmp
je
test
je
push
pop
mov
mov
push
inc
pop
mov
dec
mov
push
call
test
mov
pop
je
mov
test
je
lea
push
push
call
mov
test
je
cmp
jne
push
lea
push
mov
shr
mov
push
push
push
call
test
jne
call
push
call
pop
or
mov
jmp
mov
lea
mov
jmp
mov
mov
push
lea
push
push
push
push
call
test
je
mov
test
js
cmp
ja
mov
add
mov
mov
test
jns
cmp
je
test
je
mov
cmp
jne
or
jmp
and
mov
mov
mov
lea
mov
mov
cmp
jae
push
pop
mov
mov
cmp
je
cmp
je
mov
inc
inc
jmp
mov
dec
cmp
jae
lea
cmp
jne
push
pop
add
mov
jmp
mov
inc
mov
jmp
push
lea
push
push
lea
push
mov
inc
push
call
test
jne
call
test
jne
cmp
je
mov
mov
test
je
push
pop
push
cmp
jne
mov
inc
jmp
mov
mov
mov
inc
mov
jmp
cmp
jne
push
pop
cmp
jne
mov
inc
push
pop
cmp
jb
jmp
push
push
push
push
call
mov
add
push
pop
cmp
je
push
pop
mov
inc
jmp
mov
push
pop
mov
inc
jmp
mov
mov
test
jne
or
mov
jmp
mov
mov
inc
mov
mov
sub
cmp
jne
test
je
dec
mov
test
js
inc
jmp
movzx
xor
inc
cmp
jne
mov
cmp
jg
cmp
jb
dec
inc
movzx
cmp
je
mov
movzx
movsx
test
jne
call
mov
jmp
inc
cmp
jne
add
jmp
mov
mov
test
je
mov
inc
mov
mov
cmp
jl
mov
mov
mov
mov
inc
cmp
jne
mov
mov
mov
inc
sub
jmp
neg
mov
cdq
push
push
push
push
call
add
mov
mov
shr
push
push
sub
push
push
push
push
call
mov
test
je
mov
xor
mov
cmp
setne
add
mov
mov
mov
cmp
je
push
call
pop
cmp
je
mov
mov
jmp
cmp
je
mov
mov
cdq
sub
sar
mov
mov
lea
cmp
jae
push
mov
pop
movzx
cmp
je
cmp
je
mov
add
add
jmp
lea
cmp
jae
push
add
pop
cmp
je
push
pop
push
pop
mov
add
cmp
jb
jmp
mov
mov
or
mov
mov
sub
and
jmp
test
je
mov
push
pop
cmp
mov
jne
or
jmp
and
mov
mov
mov
lea
mov
mov
cmp
jae
push
pop
mov
mov
movzx
cmp
je
cmp
je
mov
jmp
mov
add
cmp
jae
push
pop
cmp
mov
jne
push
pop
add
mov
jmp
mov
add
add
jmp
push
lea
push
push
lea
push
mov
add
push
call
test
jne
call
test
jne
cmp
je
mov
mov
test
je
push
pop
push
cmp
jne
mov
add
jmp
pop
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
add
mov
push
pop
cmp
jb
jmp
cmp
jne
push
pop
cmp
jne
mov
add
jmp
push
push
push
push
call
mov
add
push
pop
cmp
je
push
pop
mov
add
jmp
mov
push
pop
mov
add
jmp
mov
mov
test
jne
or
mov
jmp
mov
mov
add
mov
mov
sub
jmp
call
push
pop
cmp
jne
call
mov
call
mov
jmp
cmp
jne
xor
jmp
xor
jmp
call
mov
call
mov
call
or
pop
pop
pop
leave
ret
push
mov
mov
test
jne
call
mov
call
push
pop
pop
ret
mov
mov
xor
pop
ret
push
mov
push
push
mov
mov
sar
and
shl
push
mov
mov
movzx
and
mov
mov
add
movsx
mov
sar
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
or
mov
mov
mov
and
or
mov
jmp
or
mov
mov
mov
and
or
jmp
and
mov
jmp
or
mov
mov
and
cmp
pop
pop
pop
jne
mov
pop
ret
neg
sbb
and
lea
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
push
mov
sub
lea
push
push
push
call
mov
mov
cmp
jae
mov
cmp
jle
lea
push
push
push
call
mov
add
jmp
mov
movzx
and
test
je
cmp
mov
movzx
je
mov
and
mov
jmp
cmp
je
mov
and
mov
jmp
mov
cmp
jle
mov
sar
mov
lea
movzx
push
push
call
pop
pop
test
je
mov
push
mov
mov
mov
pop
jmp
call
mov
xor
mov
mov
inc
mov
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
test
jne
cmp
je
mov
and
jmp
cmp
jne
cmp
movzx
je
mov
and
jmp
movzx
movzx
shl
or
cmp
je
mov
and
mov
pop
pop
leave
ret
push
mov
sub
lea
push
push
call
mov
lea
cmp
ja
mov
mov
movzx
jmp
mov
sar
mov
lea
movzx
push
push
call
pop
pop
test
je
mov
push
mov
mov
mov
pop
jmp
xor
mov
mov
inc
mov
push
push
lea
push
push
lea
push
lea
push
push
call
add
test
jne
cmp
je
mov
and
xor
jmp
movzx
and
cmp
je
mov
and
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mul
add
mov
mul
add
pop
ret
jmp
jmp
push
mov
push
push
push
and
sub
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
clc
inc
les
cs
add
inc
pop
sub
mov
sub
ror
inc
xor
mov
test
dec
add
add
add
pop
xchg
mov
or
inc
and
je
jmp
mov
and
out
sbb
pop
jmp
sahf
inc
sub
cmps
inc
jns
sti
mov
(bad)
add
add
data16
loopne
mov
sbb
cmp
mov
and
je
and
add
pop
inc
mov
mov
sub
add
fadd
mov
and
jmp
mov
add
outs
daa
or
or
dec
and
sub
mov
mov
or
lock
imul
mov
mov
sar
add
xchg
push
leave
fiadd
add
xor
or
add
xor
mov
xor
aas
mov
add
push
lea
aam
and
jl
adc
in
jge
mov
aas
push
call
sbb
and
sti
jmp
add
add
out
or
add
add
sub
jns
xchg
add
mov
xor
pop
pop
push
add
adc
and
add
add
add
in
push
push
and
sub
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
(bad)
cs
add
add
jns
outs
xchg
jnp
and
sub
lods
mov
push
and
cmp
stos
push
jg
jmp
mov
cmp
dec
mov
cmovbe
add
push
dec
cwd
inc
add
adc
xor
inc
mov
add
sub
and
sub
mov
(bad)
mov
cdq
inc
retf
dec
adc
hlt
mov
test
pop
cmp
xchg
and
gs
sbb
scas
add
xor
fwait
out
sub
mov
and
je
retf
dec
adc
hlt
mov
sbb
and
(bad)
sbb
add
xor
fcomp
outs
loop
adc
xcrypt-ecb
cmps
or
add
scas
add
jno
xor
in
je
push
add
push
sub
pop
inc
and
(bad)
push
mov
add
fisttp
and
jnp
add
pop
pop
seto
add
mov
scas
mov
ins
jmp
mov
sbb
push
mov
(bad)
inc
pop
mov
test
push
add
and
and
inc
add
in
mov
mov
xor
and
add
inc
mov
mov
fisub
or
call
mov
or
push
dec
out
mov
push
sub
sbb
and
mov
scas
add
xor
sbb
add
add
fadd
push
add
sub
adc
mov
or
dec
xor
call
ja
mov
jae
jmp
mov
jecxz
and
jmp
mov
mov
mov
and
adc
ins
cmc
(bad)
retf
mov
mov
sub
mov
fwait
jmp
aaa
adc
(bad)
lods
or
sub
jno
pop
out
hlt
shr
add
ins
sbb
mov
cmp
(bad)
call
cmps
bound
mov
nop
push
mov
push
push
push
and
sub
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
not
mov
lahf
dec
sti
cmp
push
mov
cmps
mov
pop
add
add
in
dec
xor
sub
sbb
dec
sbb
mov
mov
sub
push
mov
add
sbb
add
jecxz
and
test
jge
lea
and
fisttp
add
inc
and
sub
mov
(bad)
or
fist
pusha
jle
jae
sub
mov
mov
add
(bad)
add
into
mov
sub
pop
test
stos
jns
and
fcomp
test
add
mov
sub
inc
(bad)
scas
xchg
inc
cmovp
add
xor
ja
add
mov
and
cmp
sti
mov
adc
(bad)
mov
test
push
add
xchg
aas
cmp
xor
rol
sbb
fistp
and
frstor
cld
mov
bound
test
nop
add
sub
pop
push
icebp
sub
pop
add
test
push
add
add
lock
rol
lods
xor
je
jmp
jmp
mov
mov
jo
sbb
push
inc
mov
adc
psubsw
and
mov
jmp
mov
push
dec
mov
mov
mov
and
loop
push
mov
xor
add
inc
push
xor
icebp
pop
jmp
das
add
pusha
cmc
jecxz
and
sub
sub
mov
xor
inc
and
repnz
out
add
mov
out
repnz
pop
scas
pop
cmp
imul
test
cs
(bad)
cmp
jp
cmc
cmp
xor
sti
xor
(bad)
jmp
pop
inc
add
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
shl
into
or
add
les
dec
mov
sub
add
std
fimul
and
dec
scas
enter
mov
mov
add
ss
add
mov
mov
mov
fisub
idiv
mov
stos
jmp
sub
ret
jl
test
add
mov
outs
movs
add
popa
pop
and
mov
ins
adc
jmp
ds
ins
xchg
pushf
shl
mov
mov
dec
and
or
jecxz
xor
ffree
jmp
scas
mov
cmps
test
dec
lahf
jmp
sahf
inc
and
sub
mov
outs
mov
xor
fisttp
jmp
inc
ret
pop
jmp
adc
add
inc
outs
pop
dec
(bad)
mov
cwde
mov
and
cmp
add
add
test
push
jo
inc
xor
add
jmp
mov
daa
ret
jge
jmp
add
jmp
rcr
and
xlat
mov
lea
shl
dec
add
or
cs
lock
push
in
inc
mov
sbb
add
add
mov
shl
repnz
mov
je
lods
jae
xor
ins
sub
mov
inc
and
rol
ret
into
add
xchg
es
test
inc
(bad)
jge
iret
mov
add
or
add
mov
sub
les
bound
jmp
adc
ins
push
or
movups
pmulhw
or
jmp
mov
sub
mov
cmps
(bad)
sbb
add
adc
push
sti
mov
and
cmp
call
push
sub
xchg
(bad)
cmps
(bad)
rol
add
dec
out
add
fisttp
push
lea
je
jmp
mov
pusha
ret
mov
sbb
dec
out
jecxz
inc
and
sub
call
test
add
inc
imul
ret
push
dec
xchg
inc
btc
test
out
jecxz
dec
xor
push
push
jne
inc
imul
add
jmp
inc
inc
and
sub
outs
inc
and
je
jmp
mov
mov
mov
mov
dec
inc
add
add
add
cmp
wbinvd
rcl
and
jmp
mov
mov
adc
jl
inc
and
test
imul
push
add
add
sub
aas
pop
push
test
repz
jmp
mov
jbe
mov
fisttp
inc
jmp
call
mov
fdivp
or
pop
xor
or
and
add
add
add
mov
mov
sub
sbb
popa
add
add
add
add
(bad)
in
cmp
add
(bad)
shl
pop
mov
and
and
sub
add
add
into
jmp
(bad)
xor
mov
mov
cdq
and
add
add
inc
and
inc
mov
je
mov
xor
test
or
rcr
pop
test
sbb
add
sub
outs
aam
int3
pop
adc
inc
and
pop
inc
push
jmp
xor
mov
push
add
sub
mov
(bad)
cmps
and
adc
jmp
xor
inc
and
movs
mov
jmp
mov
inc
and
mov
lahf
mov
test
dec
jg
inc
inc
je
stc
pop
mov
xor
dec
mov
dec
test
rol
push
(bad)
clc
pop
fiadd
dec
es
pop
iret
mov
test
xor
(bad)
cdq
sbb
dec
(bad)
retf
hlt
xor
pop
ret
mov
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
mov
in
xor
inc
add
add
or
add
add
sub
mov
mov
add
mov
sub
add
mov
test
test
shl
sub
add
push
and
add
add
shr
inc
add
and
add
add
dec
and
or
pop
(bad)
call
add
add
add
and
mov
xchg
inc
lds
sbb
inc
push
je
dec
and
jg
jmp
mov
cmp
mov
(bad)
cli
xchg
add
add
inc
div
pop
pop
dec
iret
idiv
push
add
add
add
loop
loope
fs
icebp
lods
mov
jno
sbb
shr
sub
mov
pop
add
add
add
mov
mov
sub
mov
pop
psrad
sub
add
dec
retf
jecxz
sbb
ds
add
test
add
cmp
sbb
ret
and
cmovle
add
add
jmp
inc
and
inc
push
fwait
aas
push
imul
sbb
nop
add
test
ss
lds
je
and
add
outs
dec
je
cdq
pop
dec
imul
add
lock
and
jmp
pop
lds
test
cmp
sub
and
sub
imul
test
mov
inc
mov
inc
repnz
inc
and
out
test
inc
mov
or
fmul
mov
mov
mov
jg
jmp
mov
sub
mov
aad
ss
fadd
retf
inc
and
dec
push
not
out
sbb
add
mov
sub
mov
pcmpgtw
mov
jmp
mov
jns
je
call
(bad)
sbb
lock
mov
mov
sbb
adc
(bad)
inc
fcmove
add
js
rol
mov
sub
das
inc
les
add
in
add
and
sub
sbb
(bad)
mov
add
add
inc
xchg
adc
je
jmp
mov
xchg
shr
inc
and
mov
add
test
add
or
xlat
(bad)
iret
inc
and
mov
sub
dec
jmp
popa
add
imul
ret
mov
push
mov
movs
ror
and
xor
jo
sub
loopne
xchg
add
popa
mov
jns
add
and
add
add
scas
mov
add
add
add
(bad)
pushf
out
or
or
add
mov
call
call
jb
adc
call
icebp
loope
mov
data16
imul
add
mov
push
jle
(bad)
sub
inc
jge
mov
add
ret
add
cmp
imul
push
in
and
add
add
rol
add
sub
and
mov
mov
mov
cld
inc
jno
ror
add
sub
add
mov
mov
push
mov
jnp
and
add
add
mov
scas
add
ss
xchg
mov
inc
mov
call
or
das
aas
(bad)
and
dec
fsub
add
mov
mov
push
retf
nop
mov
mov
adc
add
xchg
pop
xchg
mov
(bad)
pop
fiadd
add
sub
clc
inc
and
add
mov
and
add
xchg
jmp
mov
sub
jg
(bad)
icebp
test
xchg
movs
bound
add
jno
inc
and
call
xchg
add
test
test
inc
aam
addr16
scas
cmp
add
inc
mov
lea
pop
ret
in
sub
dec
sbb
ds
popa
add
nop
add
cmp
mov
cs
push
add
int
cld
mov
add
inc
xchg
and
add
sub
pop
imul
test
push
mov
dec
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
sub
add
add
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
ret
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
push
mov
push
push
push
and
sub
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
cmp
add
(bad)
mov
fdivr
mov
push
add
test
xchg
add
add
shl
push
inc
mov
add
add
icebp
pop
add
inc
jne
inc
and
push
xor
or
hlt
les
add
call
mov
mov
and
call
jno
cmc
add
(bad)
add
je
cmp
sbb
push
(bad)
dec
imul
and
add
mov
test
add
fisubr
lods
push
aaa
mov
cmps
(bad)
ds
nop
sbb
adc
mov
mov
push
ds
aas
(bad)
push
add
rol
call
add
xor
pusha
mov
pop
cmp
jmp
cmp
xchg
add
les
mov
add
xchg
(bad)
add
add
xor
add
add
mov
xchg
jg
shl
rol
mov
jl
dec
into
mov
sub
xor
add
pop
icebp
jmp
add
inc
sub
mov
push
push
jg
jmp
mov
and
scas
fbstp
je
inc
es
pop
and
add
popf
add
mov
test
mov
jmp
mov
push
mov
sti
repz
pop
test
add
add
dec
retf
xor
mov
ds
fidivr
sahf
scas
xchg
stos
test
mov
ins
or
je
ins
add
push
hlt
and
push
mov
pop
or
pop
inc
adc
pmaxub
cmp
add
mov
(bad)
xchg
add
retf
xchg
mov
mov
mov
(bad)
jp
pusha
aas
(bad)
and
add
add
call
fiadd
sbb
cli
movs
inc
mov
and
jnp
xor
test
push
add
jge
and
xor
push
cmp
jmp
and
pop
add
mov
fnstcw
mov
mov
sub
mov
cmpxchg
rol
xor
adc
sti
xchg
add
mov
repnz
and
mov
dec
rsqrtps
xchg
mov
add
add
dec
inc
dec
push
dec
inc
and
jg
jmp
adc
sahf
cld
xchg
fdivr
or
add
aas
pop
aas
add
inc
lahf
sub
inc
and
(bad)
and
hlt
(bad)
jmp
mov
sub
push
inc
adc
jne
add
(bad)
jmp
mov
and
add
(bad)
push
jg
fld
add
add
test
add
pop
sub
je
jmp
mov
jne
xchg
add
pop
fidivr
test
add
xchg
add
add
add
sub
mov
inc
add
je
mov
sub
mov
mov
add
pop
mov
lods
call
dec
mov
fnstcw
mov
mov
fnstenv
or
inc
and
je
jmp
and
fiadd
sub
mov
xor
das
add
push
jmp
cmp
push
ds
sub
mov
mov
mov
in
xor
aad
(bad)
add
sbb
dec
adc
test
cmc
les
jmp
mov
adc
push
idiv
adc
mov
icebp
add
jmp
jmp
int3
ror
push
leave
inc
dec
retf
in
cmp
js
add
or
xchg
jmp
mov
jmp
adc
add
jae
inc
cdq
enter
mov
fimul
cmp
mov
icebp
add
and
add
je
xor
cmp
mov
jecxz
xchg
or
pop
mov
add
and
mov
cmp
aad
xchg
mov
popf
push
push
add
(bad)
ss
add
jo
jae
inc
jmp
mov
mov
and
shl
add
add
pop
or
add
mov
add
je
mov
(bad)
adc
add
je
cwde
xchg
jmp
mov
mov
xor
pop
icebp
add
cmovne
std
aad
push
xchg
jo
jmp
dec
mov
jns
mov
xor
iret
add
push
mov
mov
call
or
mov
and
test
movs
add
add
scas
add
(bad)
(bad)
mov
je
add
xlat
jmp
or
test
les
add
mov
jb
add
xor
add
mov
xchg
jmp
xor
movs
add
add
xor
add
adc
sti
mov
gs
pop
scas
pop
pop
ret
pop
test
je
push
cmp
and
add
mov
sub
fidivr
mov
(bad)
call
test
add
xor
jmp
(bad)
lock
mov
jo
push
add
movs
add
les
pop
cli
(bad)
call
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
int3
stos
push
add
jl
add
ja
add
or
movs
adc
add
sbb
test
mov
and
mov
pop
popa
(bad)
push
or
mov
pop
inc
and
test
jnp
add
hlt
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
and
sub
jmp
call
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
xor
fmul
fs
mov
add
mov
add
jnp
jle
jmp
arpl
add
add
ja
stc
inc
mov
seto
mov
add
mov
add
add
mov
movntq
out
sldt
jmp
mov
es
add
add
mov
test
add
push
mov
jmp
mov
mov
sub
mov
in
cmps
add
add
hlt
lods
mov
xchg
add
inc
icebp
popf
dec
mov
xchg
dec
cmp
and
cmp
pushf
loopne
sub
add
sub
mov
loop
add
loop
mov
and
inc
add
jne
mov
je
(bad)
jb
mov
jmp
mov
add
(bad)
sbb
xchg
pop
sub
jo
add
mov
xor
sbb
clc
sbb
daa
inc
and
jg
sbb
mov
scas
sub
push
inc
jl
cmp
jmp
aas
sbb
sbb
add
mov
nop
je
jmp
mov
add
mov
push
mov
test
sbb
mov
and
add
pushf
sub
xchg
jmp
jmp
jmp
mov
sbb
add
or
cmp
sbb
and
add
add
sbb
push
mov
mov
add
add
add
inc
add
cmp
jle
mov
pop
jg
jmp
mov
sbb
scas
sbb
mov
shl
jg
mov
scas
add
mov
inc
sub
mov
lods
(bad)
mov
pushf
or
add
mov
adc
pop
gs
(bad)
mov
inc
jg
jmp
mov
sub
mov
lods
add
add
jne
sbb
jg
add
pop
or
and
je
jmp
xchg
mov
sub
data16
mov
adc
sbb
add
jge
mov
xchg
add
add
mov
fwait
mov
mov
inc
add
shl
add
cmp
inc
and
mov
add
fadd
sbb
and
pop
hlt
sub
mov
int3
scas
add
add
add
adc
mov
mov
test
add
loopne
test
scas
add
mov
sbb
add
add
xor
in
ds
mov
add
add
ins
add
mov
dec
cdq
dec
mov
sbb
test
push
pop
add
add
sbb
sbb
xchg
cmp
jns
test
sahf
dec
add
scas
jmp
test
daa
and
adc
xchg
add
pop
add
add
mov
je
jmp
jmp
mov
jge
iret
sti
or
add
lea
pusha
mov
and
xor
add
jle
es
mov
and
sbb
sub
xchg
sti
cmp
adc
cs
mov
xor
and
or
repz
rol
and
xor
and
add
mov
mov
mov
popf
xchg
shl
mov
mov
addr16
add
fdiv
lea
pusha
mov
or
add
pushf
imul
add
xchg
data16
add
inc
xchg
add
inc
xor
mov
fmul
pusha
mov
push
inc
add
stc
sub
jae
and
pushf
add
add
add
add
hlt
inc
mov
add
mov
add
xchg
cmp
mov
inc
fcomp
minps
xchg
lods
and
mov
add
ds
loopne
mov
lea
xchg
and
arpl
add
xchg
mov
inc
add
inc
rcl
and
pop
push
sbb
cs
add
jnp
shl
mov
cwde
add
add
mov
pushf
arpl
scas
mov
mov
mov
cmp
inc
add
or
mov
cmps
shl
cwde
add
in
jmp
mov
loop
scas
add
(bad)
add
clc
rol
pop
jmp
movs
xlat
clc
push
fwait
adc
sbb
hlt
(bad)
stc
iret
cwde
arpl
or
int3
fcomp
cmps
push
sbb
add
pushf
loopne
add
mov
(bad)
out
cwde
add
scas
inc
xor
add
lea
pop
pop
outs
inc
int
add
mov
add
test
stos
xor
cmp
iret
jge
arpl
mov
mov
int3
stos
push
add
cmp
inc
add
ror
cmp
out
ror
sbb
add
mov
add
push
test
cli
(bad)
dec
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fisttp
mov
add
inc
jmp
leave
xor
arpl
mov
mov
test
test
add
add
call
sbb
imul
nop
add
jl
push
sbb
mov
jl
lock
dec
jmp
mov
or
add
mov
out
in
sub
mov
and
mov
pop
add
xor
mov
and
imul
push
mov
punpckldq
sbb
jb
and
repz
fs
jne
push
shl
ins
jecxz
add
sub
mov
sbb
ins
add
push
jge
adc
sub
repnz
sub
rcr
or
add
jns
pusha
int3
in
and
stc
inc
sbb
add
cdq
add
xchg
adc
sub
repnz
sub
ins
add
and
add
mov
cs
push
sub
add
(bad)
sbb
add
leave
add
mov
xor
mov
test
out
mov
test
add
add
dec
pop
add
sti
inc
and
add
push
pop
leave
add
xor
add
dec
test
in
and
je
jecxz
add
add
sub
sub
adc
subps
jnp
in
add
(bad)
xchg
sbb
mov
cs
(bad)
sbb
add
test
ins
push
jge
and
sub
mov
and
fdivr
ins
jnp
or
js
fxtract
jl
mov
scas
test
sub
mov
add
sbb
mov
and
add
mov
ins
jmp
inc
ss
mov
je
pop
leave
xor
cdq
mov
sub
mov
fadd
dec
or
dec
mov
imul
jmp
pop
sbb
xor
adc
sub
mov
(bad)
add
add
jmp
jno
jmp
mov
push
test
cmove
xchg
adc
xchg
push
paddsw
rcr
add
int
and
popa
repz
add
out
aas
mov
bound
add
add
add
or
add
push
dec
and
jno
std
(bad)
stc
pop
test
arpl
mov
test
inc
(bad)
(bad)
fnsave
mov
add
ucomiss
mov
test
and
call
mov
shl
add
add
movs
rcr
mov
int3
add
ins
push
sar
xor
xchg
pop
je
sbb
sub
jno
retf
push
inc
add
sbb
mov
jbe
mov
sub
mov
sub
inc
test
push
adc
test
jnp
test
add
add
xchg
ret
or
ins
dec
pushf
cmp
or
jmp
out
clc
int3
out
push
mov
int
int3
mov
jb
add
inc
ror
ins
add
call
mov
call
xchg
test
in
jl
jo
(bad)
mov
mov
adc
and
jmp
mov
sub
mov
add
add
add
mov
jl
int
add
mov
frstor
stc
xchg
jmp
mov
lea
ret
adc
add
call
mov
or
sub
dec
scas
rcl
inc
(bad)
inc
ins
push
movzx
jge
in
mov
xor
inc
and
call
(bad)
inc
(bad)
mov
add
std
xor
mov
add
add
jle
inc
mov
test
adc
scas
jo
adc
inc
add
and
xchg
mov
push
iret
mov
inc
adc
or
inc
call
imul
mov
mov
add
xchg
ds
data16
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
push
jmp
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
scas
add
add
in
popf
push
mov
arpl
mov
and
and
add
add
(bad)
ja
cmps
add
inc
mov
das
xor
and
call
cmp
add
add
xor
and
sbb
add
mov
mov
and
call
movzx
push
movzx
outs
pop
xchg
ins
and
test
or
ins
mov
lods
add
ins
lods
mov
and
add
jle
outs
inc
cmp
outs
setns
adc
mov
sub
and
dec
and
psrad
add
stos
inc
add
arpl
push
and
cmp
sbb
adc
(bad)
lock
add
call
cmp
jmp
lods
add
rol
inc
mov
xchg
mov
cmp
adc
jmp
outs
js
cmp
mov
dec
je
test
mov
outs
cmp
fs
and
xchg
mov
sbb
inc
mov
sub
mov
fs
test
add
dec
jmp
sub
js
and
pusha
js
add
mov
and
sub
popf
adc
into
mov
add
add
inc
and
or
xchg
inc
and
ins
test
xor
jmp
call
leave
retf
fs
xor
je
or
jmp
aad
sub
dec
mov
mov
mov
cmp
pop
faddp
mov
or
adc
pop
rcl
jne
add
test
cmp
inc
aaa
out
js
dec
add
add
mov
in
push
add
add
js
push
outs
bound
add
mov
jle
outs
inc
inc
jg
jne
sub
call
in
mov
hlt
inc
cmp
xor
inc
loope
(bad)
jmp
js
dec
add
test
dec
push
add
mov
mov
fcmovb
(bad)
dec
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
jmp
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
jge
xor
xlat
lea
add
add
mov
add
and
in
add
loope
icebp
stc
add
aas
sldt
mov
xlat
nop
mov
mov
(bad)
pusha
dec
add
add
int3
jno
and
sub
add
mov
in
and
add
add
call
mov
sbb
mov
(bad)
pusha
dec
les
fidiv
(bad)
jmp
add
add
fild
clc
test
cld
lds
mov
adc
add
mov
scas
jae
xchg
dec
add
add
gs
sub
fistp
pinsrw
les
jecxz
add
xlat
mov
cmp
out
and
sub
mov
add
jb
psraw
test
mov
lds
(bad)
fs
scas
mov
cmp
and
popa
inc
sbb
mov
jmp
out
sub
add
push
test
ds
(bad)
jecxz
add
jmp
mov
add
aas
jmp
add
cvtps2pi
add
(bad)
mov
pop
pop
xchg
mov
pop
out
sti
push
fs
and
mov
add
jno
add
add
add
sar
psubsw
adc
test
add
jge
dec
add
mov
add
add
out
inc
imul
enter
inc
and
add
add
int
ficom
jb
mov
loope
pop
push
mov
(bad)
fadd
add
(bad)
sldt
add
add
jmp
and
add
add
test
mov
and
fs
lods
push
dec
test
xor
nop
mov
int3
pop
ins
out
add
test
rcr
cvtps2pi
add
cmps
(bad)
nop
add
int3
pop
push
or
out
loope
sar
aas
sub
mov
and
add
xlat
jg
jmp
mov
retf
mov
mov
add
add
push
dec
add
aam
add
add
inc
mov
jmp
fisttp
(bad)
and
add
jmp
dec
inc
ins
rol
add
inc
mov
and
jae
outs
ret
test
mov
or
mov
and
pop
out
mov
add
add
pop
and
mov
jmp
mov
lods
add
gs
mov
jl
add
jnp
jmp
pop
adc
shl
mov
js
add
jg
jmp
mov
inc
pinsrw
mov
je
add
lahf
test
(bad)
and
dec
or
add
add
dec
arpl
and
push
add
cmovs
add
dec
fiadd
xlat
nop
add
mov
sub
sti
mov
add
gs
push
mov
add
mov
mov
(bad)
and
int3
jmp
mov
sub
push
test
imul
dec
cmp
int3
push
add
pop
xlat
pop
jb
scas
jmp
cdq
test
lods
mov
and
add
add
(bad)
and
pinsrw
xor
xlat
mov
mov
add
jns
cmps
sbb
out
gs
or
aas
out
pop
les
dec
int
rcl
add
mov
int3
mov
add
test
add
add
mov
je
jmp
sbb
push
in
add
sub
outs
test
and
add
xor
nop
add
test
jae
and
mov
mov
dec
out
add
cvtps2pi
dec
add
mov
add
mov
jg
inc
add
sti
add
add
sub
dec
test
add
xor
test
out
add
test
scas
int
add
in
sub
add
(bad)
sbb
add
jmp
dec
inc
ins
repz
add
mov
test
add
int3
mov
add
test
fidivr
psubsw
push
mov
jae
add
pop
outs
int3
mov
ins
out
mov
(bad)
pop
mov
jecxz
dec
xor
je
jmp
stc
test
add
sub
mov
punpckhbw
sti
(bad)
add
add
mov
jmp
repz
xor
xor
add
test
dec
mov
adc
and
add
(bad)
cmovnp
add
jmp
mov
sub
in
and
add
gs
jmp
mov
loopne
dec
add
push
shl
cmp
add
out
jmp
jo
and
add
add
dec
cdq
out
rol
imul
or
outs
and
mov
shl
iret
into
in
lahf
dec
int
sub
xlat
nop
(bad)
add
add
mov
imul
jns
pop
dec
int
adc
xlat
nop
mov
add
add
add
in
and
mov
add
outs
test
add
add
(bad)
mov
add
jmp
mov
add
jns
pusha
cmp
and
add
cmps
(bad)
push
add
add
add
fild
mov
loopne
add
dec
sub
mov
or
nop
mov
(bad)
outs
add
outs
jmp
mov
retf
fld
test
xor
jmp
mov
push
add
mov
mov
add
jge
cmps
daa
add
jmp
mov
and
out
add
mov
jg
cs
add
xlat
sbb
cdq
test
clc
outs
add
mov
test
aas
test
rol
dec
sub
mov
inc
add
jb
(bad)
repz
jmp
mov
ret
rol
test
test
lock
pinsrw
jo
add
fcmovbe
nop
mov
mov
sub
mov
in
add
aas
add
dec
add
fiadd
xlat
nop
add
outs
int3
sub
mov
jg
jmp
test
sub
mov
push
jb
outs
ret
(bad)
mov
out
jmp
mov
jmp
mov
nop
mov
(bad)
mov
outs
int3
jmp
out
test
test
fild
mov
out
xlat
add
and
xchg
add
add
add
sub
mov
cmps
(bad)
dec
add
add
add
str
(bad)
dec
push
xor
and
outs
int3
mov
(bad)
jle
gs
test
mov
add
mov
nop
jb
jmp
mov
and
add
add
mov
bound
add
jmp
push
mov
dec
push
add
push
out
mov
jg
jmp
cmp
ins
add
mov
xor
jmp
mov
nop
mov
xor
imul
aas
jmp
add
aas
jmp
dec
int
pop
add
in
mov
mov
arpl
add
add
and
add
aas
and
cmc
les
add
add
adc
mov
jb
int
and
in
call
fwait
sar
cmc
mov
je
sub
mov
rol
dec
push
movs
hlt
adc
outs
add
dec
sub
hlt
add
rol
aas
and
or
inc
ins
lods
xor
xlat
lahf
xor
jae
add
mov
and
add
mov
cmp
adc
aas
str
inc
std
dec
xor
jns
jo
outs
mov
sub
jb
and
add
add
inc
push
or
add
aaa
xor
add
xor
add
outs
sub
mov
push
push
scas
sti
add
es
pop
pop
add
mov
mov
xor
in
gs
add
add
mov
add
mov
add
unpcklps
add
mov
int3
add
gs
daa
mov
retf
inc
pusha
xor
add
mov
add
or
jecxz
sub
add
jg
fadd
aas
out
mov
ret
repz
xlat
sub
mov
push
mov
and
je
jmp
mov
imul
cmp
in
test
add
les
test
inc
add
jmp
stc
test
scas
int
ins
sub
and
test
add
cmovo
inc
add
add
mov
or
outs
aas
aas
test
gs
pop
add
out
(bad)
mov
mov
sub
out
and
mov
sti
jmp
dec
inc
and
add
cli
popa
gs
lods
inc
dec
mov
test
pop
add
fisttp
(bad)
(bad)
fs
scas
lock
cmp
test
mov
out
fadd
add
out
sub
fild
mov
movzx
nop
mov
mov
test
scas
add
mov
into
fcomp
mov
mov
xor
xor
or
add
pop
outs
inc
inc
ror
pop
cmp
add
mov
les
dec
int
rol
nop
cdq
cmp
fs
and
psubsw
add
out
ins
add
add
jg
sar
cvtps2pi
ja
mov
test
mov
push
and
add
add
sub
outs
and
aas
add
les
add
repz
nop
add
mov
rdmsr
clc
add
out
sbb
sti
push
test
add
(bad)
jmp
and
mov
outs
jmp
jmp
adc
xor
fdivr
mov
add
sub
test
add
add
xchg
or
push
add
test
sgdtd
aas
icebp
cwde
out
mov
add
mov
aam
jmp
mov
mov
inc
push
mov
and
add
cmp
cmovl
dec
mov
xor
add
add
mov
push
push
inc
add
mov
xchg
ror
cld
cli
fistp
xchg
mov
add
aad
inc
mov
call
icebp
enter
cdq
adc
inc
fisub
add
and
add
jmp
jbe
mov
and
add
in
and
mov
out
dec
jbe
and
add
les
and
mov
(bad)
bound
outs
int3
mov
mov
dec
push
inc
out
mov
mov
add
add
add
nop
rol
jb
mov
xchg
mov
aad
out
add
add
mov
mov
jb
and
aaa
jo
(bad)
inc
mov
mov
nop
xor
int3
mov
ins
add
call
sti
out
push
les
cs
or
xor
ins
add
add
xor
inc
add
jno
and
in
add
(bad)
inc
test
add
add
cmps
out
mov
jmp
mov
cmp
and
and
int3
cld
mov
and
add
add
sti
add
and
mov
mov
lea
cmp
or
fwait
mov
add
test
mov
repz
push
add
add
syscall
rcl
add
mov
mov
add
add
push
scas
sti
fistp
mov
dec
fst
mov
ret
inc
or
out
gs
push
test
lar
les
xlat
nop
adc
stc
test
pop
ins
int3
mov
outs
xchg
sti
imul
add
call
retf
outs
movs
jns
jae
icebp
shl
outs
int3
cmovne
aas
loope
shl
adc
add
mov
lahf
or
cdq
add
xlat
jmp
(bad)
jmp
jmp
ins
mov
add
and
mov
sub
push
push
mov
and
add
ins
adc
rol
push
mov
fadd
pinsrw
add
add
add
jb
scas
out
add
xor
mov
sti
fistp
mov
dec
mov
mov
mov
sti
jo
bound
pop
inc
add
lea
mov
mov
mov
mov
add
and
dec
ja
out
test
mov
xchg
dec
add
jo
dec
ror
cmp
and
mov
fadd
add
rol
fild
aas
add
add
pop
sub
fadd
jb
out
and
retf
mov
outs
xor
adc
sar
add
add
add
add
mov
jb
sub
sub
mov
jle
(bad)
call
add
and
add
dec
ret
mov
ins
push
xor
mov
rol
nop
add
and
outs
je
pop
out
aam
pop
aam
mov
idiv
push
cmovne
xor
add
jo
add
add
jb
loop
push
add
add
and
inc
and
call
mov
mov
cmp
retf
inc
retf
and
add
jmp
mov
enter
add
and
test
ins
out
xchg
push
fdiv
and
add
add
cdq
add
add
jmp
add
or
inc
xor
std
lods
add
mov
mov
sub
mov
jmp
or
add
(bad)
ret
rol
ret
cld
(bad)
add
iret
xor
inc
add
shl
and
add
add
jle
or
(bad)
lods
add
sbb
mov
mov
mov
and
and
imul
or
mov
hlt
mov
mov
add
add
xchg
and
nop
mov
mov
add
add
(bad)
hlt
sbb
add
out
inc
sbb
add
outs
inc
out
fistp
add
mov
xchg
add
jb
inc
or
add
or
add
ins
out
js
in
xrelease
cmp
cmp
inc
xchg
ret
mov
add
pushf
and
add
lods
loop
shl
add
add
fiadd
mov
imul
add
push
add
and
int
mov
fucom
add
(bad)
lock
and
add
fbstp
mov
add
xor
rcl
in
mov
push
mov
cmp
movaps
mov
ss
add
(bad)
mov
pop
adc
rol
jb
int
add
outs
mov
and
gs
and
add
sub
mov
fs
(bad)
add
add
in
mov
and
add
outs
xchg
in
add
test
out
push
add
push
add
jmp
mov
add
outs
add
cmp
out
adc
xor
mov
cmp
fcom
jne
test
outs
int3
mov
outs
in
add
mov
out
add
add
ret
add
and
in
(bad)
(bad)
mov
outs
loope
rol
add
ffreep
test
rol
add
add
outs
clc
mov
sub
mov
sbb
add
mov
out
mov
mov
mov
enter
xchg
sub
add
pop
test
aas
add
mov
ss
add
add
add
les
pop
pop
mov
xor
mov
and
add
inc
xchg
xchg
ins
in
add
dec
sti
cld
str
dec
pushf
and
xor
add
adc
jp
aaa
jecxz
push
int3
mov
call
sub
mov
push
inc
sbb
out
add
(bad)
lea
or
in
mov
in
inc
dec
add
add
loopne
aas
jns
stc
cmp
inc
mov
movzx
in
mov
mov
mov
mov
loopne
add
out
add
push
push
add
add
add
add
mov
in
and
jl
popa
and
sbb
mov
pop
call
lea
sbb
mov
and
add
add
add
sub
mov
xchg
dec
add
mov
dec
inc
out
ror
add
dec
xor
xchg
dec
add
outs
add
sub
mov
in
ret
test
xchg
dec
add
(bad)
mov
mov
mov
and
mov
sar
dec
adc
or
add
push
inc
test
add
jo
and
fld
add
and
sub
daa
(bad)
inc
int
jecxz
nop
add
inc
dec
xor
imul
mov
jmp
lea
sbb
mov
mov
inc
inc
mov
inc
and
add
out
jmp
sti
add
add
jge
(bad)
(bad)
dec
xor
xchg
sbb
inc
adc
mov
add
sub
add
add
jno
or
addr16
and
add
mov
call
retf
hlt
test
inc
mov
jb
cdq
pop
pop
inc
repnz
xlat
mov
add
sbb
add
add
clc
test
adc
dec
xor
add
add
add
mov
call
mov
jmp
sbb
add
add
mov
dec
inc
and
add
dec
(bad)
mov
pop
xchg
mov
mov
loop
int
jmp
jmp
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
jmp
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
pop
fsubr
scas
(bad)
jmp
mov
add
lods
add
mov
mov
dec
inc
dec
inc
clc
xor
inc
aam
nop
jnp
inc
push
add
(bad)
aas
mov
inc
outs
dec
inc
and
sub
mov
or
jmp
mov
inc
add
jmp
xor
test
hlt
jne
push
pop
add
xor
add
push
sub
mov
out
xor
pop
pop
mov
jmp
pop
or
sub
mov
mov
add
rol
add
addr16
xchg
xchg
and
jno
inc
and
mov
jge
add
add
in
add
inc
and
sub
push
inc
out
imul
dec
add
add
aaa
add
mov
and
popf
or
and
and
add
cmc
jne
add
sbb
pop
add
test
in
pop
add
add
mov
outs
and
jle
mov
test
dec
les
jmp
mov
scas
mov
inc
and
(bad)
cmc
cmc
jne
jmp
mov
sub
mov
je
jle
add
dec
mov
test
sar
leave
xchg
fisttp
enter
jno
add
scas
mov
mov
adc
mov
push
iret
cli
add
add
push
fisttp
(bad)
jae
inc
jmp
(bad)
xchg
push
xchg
(bad)
xor
mov
pushf
cdq
add
and
mov
push
inc
add
in
mov
repz
mov
or
xlat
dec
les
mov
mov
call
cli
fmulp
sub
add
adc
dec
add
adc
add
inc
stos
inc
mov
mov
or
push
xchg
mov
mov
xchg
and
mov
add
add
pushf
stos
push
add
shr
inc
int3
xchg
push
repz
mov
and
mov
pop
sbb
in
push
mov
and
sbb
mov
inc
mov
mov
pop
leave
mov
mov
and
call
mov
les
dec
mov
push
in
lahf
mov
mov
ror
xchg
ins
add
cmc
fdivr
dec
enter
push
add
mov
add
inc
sahf
or
jae
add
mov
mov
mov
in
and
mov
fs
jp
mov
out
inc
fist
add
mov
enter
mov
mov
mov
jl
and
inc
sub
loopne
push
add
or
(bad)
pop
and
mov
mov
push
mov
cmps
or
dec
aam
push
add
or
sbb
out
dec
mov
mov
inc
and
call
mov
mov
ds
push
push
and
mov
push
clc
inc
and
call
mov
mov
mov
mov
mov
push
retf
mov
call
xchg
mov
push
add
add
and
loopne
mov
and
mov
dec
mov
call
xchg
mov
inc
and
mov
ds
and
mov
mov
and
mov
call
mov
mov
mov
(bad)
push
loopne
mov
mov
and
popf
cmp
add
les
jle
or
mov
mov
mov
(bad)
test
imul
mov
push
(bad)
imul
inc
add
inc
and
ds
loop
jmp
dec
inc
dec
push
cld
nop
mov
lock
sti
(bad)
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
add
pop
pop
ret
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
mov
mov
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
jmp
lea
imul
add
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
lea
imul
add
mov
mov
jmp
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
lea
mov
add
mov
call
mov
mov
add
mov
mov
mov
shl
mov
add
shl
add
mov
mov
mov
shl
mov
mov
shl
add
add
sub
mov
add
shl
add
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
sub
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
jmp
mov
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
jmp
mov
add
add
sub
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
add
add
sub
mov
mov
mov
mov
mov
sub
sub
mov
sub
mov
sub
add
mov
sub
sub
add
mov
mov
mov
mov
sub
add
add
mov
mov
sub
add
add
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
jmp
mov
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
mov
sub
sub
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
add
add
sub
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
movzx
mov
sub
mov
sub
mov
mov
movzx
mov
xor
and
xor
and
mov
xor
and
and
or
or
xor
mov
mov
mov
mov
mov
mov
movzx
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
add
add
sub
mov
mov
jmp
mov
mov
add
add
sub
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
mov
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
sub
sub
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
movzx
mov
mov
sub
mov
sub
add
sub
mov
mov
movzx
mov
xor
and
xor
and
mov
xor
and
and
or
or
xor
mov
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
add
add
sub
mov
mov
mov
jmp
mov
mov
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
push
mov
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
add
pop
ret
mov
mov
mov
jmp
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
jmp
xchg
push
mov
push
push
push
and
sub
jmp
jmp
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
gs
xchg
mov
and
out
fxam
cmp
adc
push
add
jae
jns
xor
push
arpl
sbb
jl
and
(bad)
and
cmp
mov
mov
jp
xchg
jmp
mov
jg
jmp
mov
mov
jo
jmp
sub
test
add
jne
aaa
add
jle
xchg
push
out
stc
sub
jp
stos
and
and
and
sbb
add
sub
mov
and
(bad)
jge
rol
push
add
add
int
mov
mov
mov
sub
retf
adc
xor
push
nop
sbb
and
psllq
add
rol
adc
mov
sub
repz
test
mov
aaa
das
cmc
pop
add
add
mov
iret
out
adc
aas
add
push
test
sub
mov
je
jmp
mov
dec
sub
mov
test
cmc
add
add
mov
sub
mov
push
mov
sbb
xchg
sub
or
push
scas
sahf
leave
jl
dec
mov
cmp
cmove
jmp
mov
cmps
inc
out
add
cmp
jb
add
add
and
add
shl
shr
add
into
and
xlat
enter
fldcw
add
add
cmp
dec
dec
fild
jb
add
mov
gs
pop
sahf
sub
in
jge
mov
jmp
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
jmp
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
or
dec
pop
add
and
daa
dec
(bad)
cmp
adc
mov
push
(bad)
out
dec
push
inc
mov
or
inc
and
cwde
nop
stos
cmp
xchg
(bad)
mov
xor
dec
mov
adc
xchg
fld
add
jmp
mov
daa
xor
push
aad
adc
(bad)
and
rol
jmp
mov
ficomp
and
jl
jmp
cdq
or
xor
ret
push
ja
in
call
(bad)
add
pop
mov
shl
and
fcmovb
add
xor
ror
dec
sbb
test
mov
add
add
fidiv
into
leave
(bad)
fwait
mov
fadd
scas
fisubr
jmp
mov
aas
les
rol
adc
jmp
pop
dec
pop
aam
jno
and
sub
fmul
js
aad
outs
add
jne
add
add
sbb
mov
or
test
jne
add
sub
mov
and
je
jmp
jmp
in
mov
fisub
pop
lahf
test
cli
dec
add
add
and
jmp
mov
jns
jnp
loop
jmp
add
cmp
scas
push
add
(bad)
leave
js
ret
in
xor
cmp
pushf
or
into
leave
je
mov
xchg
jmp
mov
mov
xchg
sbb
stos
mov
xchg
and
adc
scas
push
add
inc
js
and
pop
pop
pop
pop
ret
(bad)
push
cmp
cmp
dec
pop
add
in
push
push
and
sub
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
inc
dec
mov
outs
test
out
bound
mov
add
mov
mov
mov
jmp
test
add
add
inc
add
jmp
psubq
add
add
icebp
test
outs
jle
fist
xchg
lahf
test
jg
push
gs
add
add
jo
inc
pminub
add
(bad)
cwde
push
mov
add
xor
mov
mov
arpl
add
add
pop
push
mov
(bad)
jp
pop
xchg
outs
add
test
lock
push
out
jmp
ins
loope
add
add
mov
and
inc
jp
(bad)
in
fisub
cs
add
add
sub
mov
add
pop
je
mov
pop
add
add
icebp
test
add
fild
mov
push
retf
dec
ret
in
push
mov
(bad)
and
enter
add
add
and
add
iret
xchg
test
(bad)
sahf
jb
add
das
push
fild
sub
ja
add
out
xor
test
add
out
sub
add
jmp
mov
adc
add
shl
pop
out
push
test
rsm
call
add
ins
test
out
add
mov
(bad)
jp
mov
xchg
add
inc
arpl
add
mov
(bad)
call
and
out
add
sbb
pop
add
mov
repnz
and
add
add
(bad)
xor
add
add
mov
mov
add
enter
je
jmp
mov
repnz
dec
lods
mov
dec
xchg
add
cmova
out
add
add
mov
mov
add
sub
arpl
jmp
add
test
jae
mov
jp
test
sub
add
mov
out
cmp
sldt
cmps
add
pop
add
add
xor
jne
aad
fbld
add
add
call
add
add
out
jmp
je
mov
jp
hlt
(bad)
pop
adc
enter
test
push
add
fcmovnb
shl
cmps
ins
loope
add
je
sub
ja
and
add
fild
(bad)
enter
popf
ss
add
add
mov
dec
add
pop
add
jmp
xor
jp
or
push
mov
and
add
enter
push
add
aam
and
add
add
sbb
fcmovu
add
add
test
sub
add
dec
add
mov
add
add
mov
outs
xchg
and
enter
pop
lds
add
dec
add
add
mov
popa
fist
dec
retf
add
add
test
add
pop
adc
add
xor
retf
push
adc
imul
inc
jg
je
cmp
and
cmps
pop
and
outs
add
push
test
ret
nop
add
add
test
add
add
aam
test
add
gs
aam
and
mov
and
(bad)
jp
add
add
das
add
sub
inc
test
aam
add
test
add
gs
fldenv
mov
push
sub
jmp
out
add
add
aam
bound
jo
icebp
cli
stc
mov
jne
add
push
add
mov
sub
cmp
(bad)
(bad)
adc
out
dec
out
add
mov
sub
mov
test
add
jp
sub
fbld
push
add
add
mov
and
jg
and
add
add
cmps
add
mov
shl
mov
add
pop
sub
add
sub
mov
pop
(bad)
push
enter
add
xor
mov
add
add
push
mov
cmp
add
add
(bad)
das
add
mov
dec
add
add
sub
outs
push
and
mov
aam
add
cmps
add
pop
add
inc
mov
dec
add
mov
inc
test
out
add
mov
imul
gs
add
test
mov
fdivrp
bound
daa
rol
outs
add
push
push
add
mov
sub
mov
push
fisttp
jmp
inc
loope
push
sbb
mov
and
je
xchg
add
and
add
push
sub
mov
jg
cmp
mov
and
fs
jo
adc
fidiv
and
in
outs
add
enter
cmp
sub
push
nop
punpckhwd
gs
add
adc
int3
add
movs
inc
and
cvtdq2ps
add
outs
jmp
mov
sub
mov
cmp
(bad)
hlt
out
add
out
add
outs
jns
jne
add
inc
inc
fidivr
jne
ret
add
das
add
mov
add
add
sub
inc
jbe
xor
(bad)
hlt
add
out
add
add
ins
test
pop
add
push
push
into
mov
and
je
jmp
mov
add
mov
imul
mov
jo
cmp
mov
ret
test
add
add
or
test
add
mov
add
add
enter
push
and
add
add
sahf
movs
mov
mov
mov
add
jmp
mov
and
sub
add
mov
je
mov
ins
test
pop
mov
sub
cs
and
call
add
mov
lock
add
aaa
add
mov
and
movs
fwait
and
lods
jmp
add
add
add
sub
in
inc
and
je
popf
imul
xor
add
sub
movs
inc
sti
scas
popa
xlat
imul
enter
enter
ret
add
aam
push
mov
test
aaa
int3
add
xor
test
add
add
mov
push
add
test
add
sbb
xor
ins
and
add
sub
std
mov
iret
(bad)
jp
sub
rcl
xchg
jns
mov
outs
test
mov
dec
in
add
fdivr
int3
add
add
imul
mov
fiadd
mov
out
push
pop
mov
push
jle
pusha
fadd
xchg
and
jne
add
cmc
add
inc
aas
mov
or
add
add
pop
push
test
xor
add
cmps
movs
add
mov
(bad)
mov
add
mov
xchg
pop
adc
fisttp
mov
sti
ret
shl
add
add
aad
add
stos
in
add
mov
xlat
loopne
movs
ss
add
ret
push
or
add
push
mov
mov
jmp
mov
rcr
push
out
add
out
mov
inc
dec
and
sub
fisttp
adc
adc
push
movd
fdivrp
sbb
add
cmps
add
add
jmp
(bad)
lock
ss
or
mov
mov
add
sbb
and
xchg
retf
jno
or
and
add
sbb
add
add
inc
es
iret
push
jne
mov
add
sub
ja
add
add
push
in
mov
(bad)
in
cli
sbb
test
mov
add
add
test
add
cmp
aaa
add
test
add
add
sahf
popa
fucomip
sub
add
mov
cmps
test
or
out
pop
fild
add
mov
arpl
jmp
int3
mov
xchg
push
add
outs
xchg
xchg
shl
add
add
add
pop
lock
stc
sub
lock
add
add
sbb
jp
sbb
and
outs
push
add
jbe
xor
pop
lea
jnp
mov
iret
push
add
test
add
mov
mov
cs
rol
push
add
mov
or
add
mov
mul
pop
je
mov
add
add
and
add
test
rcl
out
push
(bad)
inc
rol
and
out
out
test
pop
add
add
int3
cmp
xchg
pop
pop
pusha
(bad)
dec
leave
out
mov
pop
test
scas
add
add
cmp
add
fld
out
mov
mov
or
add
xchg
sbb
test
or
add
add
and
mov
add
pop
pop
pop
(bad)
bound
mov
mov
jmp
(bad)
lock
ss
push
fiadd
add
sbb
push
cs
ins
and
enter
adc
add
push
imul
jnp
inc
test
jnp
sub
outs
push
add
sbb
enter
test
add
add
mov
xor
test
scas
out
jmp
xchg
std
jmp
jge
and
int
jp
icebp
mov
jmp
test
enter
test
add
cmps
add
(bad)
fst
add
add
add
add
sub
mov
sub
aaa
(bad)
(bad)
(bad)
call
aas
mov
dec
mov
and
add
sub
and
jne
add
push
add
inc
dec
sbb
fbld
(bad)
stos
in
or
add
mov
pop
ficomp
cmc
(bad)
dec
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
js
or
cmp
inc
rcr
mov
outs
xor
and
sbb
add
mov
jmp
sbb
add
int
cmp
test
dec
(bad)
fiadd
mov
test
repnz
jno
pop
add
mov
dec
xchg
add
add
shl
mov
test
add
add
dec
repz
jmp
aam
push
add
int
jp
push
sub
mov
sbb
fs
add
jmp
mov
faddp
xchg
addr16
mov
ret
add
add
ins
adc
lea
dec
jae
mov
int3
fwait
repz
jno
(bad)
and
push
cmp
mov
inc
movs
retf
mov
dec
cld
(bad)
loopne
add
repz
and
jo
sahf
loopne
fcmovbe
mov
cvtps2pi
sbb
add
call
test
jmp
mov
call
(bad)
and
add
test
dec
add
sub
jp
jnp
add
bndldx
cmp
jmp
mov
mov
ds
test
outs
add
add
(bad)
and
call
add
cmc
mov
loopne
(bad)
lea
cmps
ins
lahf
cvtps2pi
test
dec
test
jmp
ins
jb
(bad)
cmc
mov
movzx
ins
add
add
lahf
test
mov
sbb
dec
dec
int
test
cld
(bad)
add
add
dec
add
test
pusha
and
test
rol
add
outs
repz
add
sahf
inc
test
cmp
mov
cmp
ret
or
add
test
int3
add
or
neg
sbb
pop
(bad)
cmps
add
repz
mov
add
xlat
pop
jo
int
sbb
and
and
add
lahf
cmps
(bad)
mov
adc
jmp
mov
mov
add
sub
mov
ret
add
lahf
add
sbb
ror
loopne
inc
stos
push
add
outs
(bad)
inc
add
add
add
pop
add
add
jp
fwait
(bad)
jle
test
sbb
inc
add
repz
in
xlat
add
add
sub
inc
rcr
jg
jmp
mov
sub
mov
xlat
out
add
add
xchg
add
sahf
jmp
mov
test
(bad)
in
test
pop
ror
outs
mov
pop
add
jno
pop
push
push
mov
movaps
lahf
add
adc
add
ja
(bad)
(bad)
cmp
sbb
repz
test
add
sbb
dec
add
add
jge
xlat
inc
mov
test
mov
test
sbb
shl
add
mov
mov
paddd
add
mov
mov
test
and
and
repz
int3
add
add
xchg
add
add
jno
sub
inc
test
add
cmp
mov
add
add
shl
add
add
mov
push
dec
add
int
mov
and
cmps
add
sub
and
mov
adc
inc
(bad)
rol
mov
jmp
js
and
lahf
add
loopne
retf
mov
bndstx
add
jmp
js
and
(bad)
lea
test
add
pop
(bad)
pusha
cmps
add
jmp
mov
fdivrp
and
out
and
add
add
or
add
cmp
test
adc
jp
and
je
mov
sahf
int
fdivr
lahf
sub
ret
js
inc
imul
repz
add
sub
mov
test
push
lods
mov
jmp
cwde
test
add
dec
ficom
mov
das
pmaddwd
lahf
add
mov
mov
clc
sbb
mov
sub
jae
add
int
jp
and
dec
test
adc
push
icebp
add
add
repz
(bad)
inc
and
nop
add
add
cmps
out
and
sahf
add
test
mul
mov
add
repz
and
jo
add
fidivr
sti
arpl
retf
add
add
sbb
sub
mov
je
jmp
aam
mov
sub
push
inc
and
mov
add
xchg
add
add
and
jmp
jnp
cdq
mov
imul
test
add
add
jo
mov
mov
add
jmp
aam
mov
sub
mov
mov
adc
dec
jmp
in
and
add
add
mov
ret
push
add
jmp
mov
add
xchg
inc
outs
mov
test
add
xchg
repnz
mov
mov
pop
xor
inc
and
test
movs
add
test
test
add
repz
xchg
mov
pmaddwd
sahf
add
fmul
add
test
mov
fmul
xor
pop
and
cld
test
mov
cmc
and
int3
push
cmp
mov
mov
add
mov
ja
add
add
sub
mov
and
je
pop
xchg
adc
xchg
test
add
add
pushf
scas
xor
int
ror
ins
lahf
add
add
sub
cmp
inc
test
add
repz
and
add
sub
mov
ret
add
jmp
out
and
add
mov
outs
out
cmova
sbb
add
in
jnp
add
test
(bad)
cmps
xor
sbb
add
addr16
add
mov
jp
jnp
add
add
dec
into
add
mov
sub
add
dec
add
cmp
inc
xchg
xor
(bad)
pusha
mov
add
add
jnp
lahf
int
mov
aam
ret
mov
rcl
lods
add
inc
ror
sahf
jmp
sub
lea
lea
add
xor
push
sbb
add
pusha
test
add
add
and
mov
pop
je
in
lods
pop
std
(bad)
mov
retf
xor
xor
cmp
add
mov
add
inc
retf
cmp
add
repz
das
jmp
or
pop
add
sbb
add
test
adc
add
mov
mov
int3
dec
repnz
add
mov
int
retf
and
cmps
add
xchg
mov
mov
mov
movzx
mov
jp
and
call
mov
mov
dec
add
add
xchg
and
add
mov
(bad)
xchg
cmp
dec
add
leave
stos
xchg
fsubr
xchg
outs
repz
mov
(bad)
test
add
ins
add
rcl
mov
or
pop
add
push
mov
sbb
inc
push
add
imul
add
sar
(bad)
mov
(bad)
jmp
and
add
sahf
add
fidivr
mov
aas
dec
repz
dec
ins
dec
or
repz
rcr
iret
push
add
mov
add
dec
add
add
inc
lock
mov
add
add
xchg
xchg
ror
mov
add
test
adc
sbb
mov
push
xchg
mov
mov
call
xchg
cmp
dec
add
jmp
mov
add
add
add
jbe
sar
dec
rcr
ins
lahf
add
mov
sbb
add
mov
jp
and
add
jmp
mov
mov
and
pop
outs
adc
sbb
mov
test
push
add
add
cmps
ins
pop
test
cmp
jg
mov
mov
push
rcr
jo
add
dec
jmp
and
cmp
orps
mov
jmp
mov
mov
call
(bad)
cmc
mov
jmp
test
add
add
and
jmp
mov
inc
mov
add
repz
push
in
and
mov
fiadd
dec
(bad)
ins
add
mov
adc
jp
pop
mov
test
inc
mov
dec
or
or
pop
jmp
fdivr
add
fwait
(bad)
call
(bad)
xor
or
add
or
push
xor
pushf
add
dec
js
out
jmp
pop
pop
pop
pop
add
cmp
sub
add
pushf
and
add
repz
rcl
add
(bad)
add
add
into
(bad)
call
and
int3
add
push
add
cmp
and
ins
lahf
add
and
add
add
xchg
and
sbb
adc
pusha
and
repz
(bad)
ja
push
jo
add
mov
add
(bad)
and
test
adc
loope
rcr
cmc
(bad)
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
lea
pop
pop
ret
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
call
add
mov
mov
mov
sub
add
add
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
nop
push
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
add
pop
ret
mov
mov
mov
jmp
mov
jmp
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
movzx
mov
mov
mov
add
add
sub
mov
movzx
mov
mov
mov
add
add
mov
add
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
sub
sub
mov
movzx
mov
mov
mov
add
add
mov
add
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
call
mov
jmp
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmovne
cli
dec
adc
dec
adc
jne
mov
clc
inc
and
fisttp
(bad)
push
and
mov
gs
mov
in
mov
xchg
and
xchg
xchg
push
and
mov
add
retf
add
out
retf
and
xchg
push
fst
mov
and
sub
mov
add
cld
fs
pop
pop
pop
mov
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
pop
mov
mov
mov
jg
in
push
(bad)
fwait
and
add
jmp
adc
pusha
inc
add
add
inc
and
mov
inc
and
mov
cld
inc
and
mov
mov
cmp
push
outs
add
call
fwait
add
add
aaa
enter
add
add
push
rcl
and
mov
ins
jns
and
mov
and
(bad)
sub
mov
cmps
dec
and
sbb
jmp
mov
test
fstp
inc
pop
or
test
pop
add
add
jne
inc
ficom
daa
xor
sahf
sub
pop
xchg
push
or
enter
fwait
inc
and
(bad)
cld
add
jns
and
scas
cmp
add
add
sub
push
sub
mov
(bad)
lods
enter
add
test
push
sub
jns
and
mov
jne
(bad)
push
pop
outs
movs
push
mov
jne
inc
imul
jmp
xchg
add
add
mov
and
sub
aas
xchg
and
mov
pop
xchg
fild
jne
mov
add
add
mov
imul
adc
xchg
push
xor
sub
add
jmp
mov
push
mov
(bad)
jp
mov
cmovl
pusha
add
add
inc
and
cmp
mov
bound
je
add
add
dec
add
add
mov
cld
pop
mov
sbb
or
add
jmp
mov
lods
push
xchg
sbb
daa
and
and
rol
sbb
js
mov
sub
mov
rdmsr
std
jne
(bad)
mov
(bad)
xchg
cdq
add
mov
mov
cmps
mov
inc
lock
inc
xchg
(bad)
add
scas
call
and
arpl
dec
fiadd
lods
adc
mov
inc
lock
cmp
shl
mov
das
pop
add
aad
pushf
and
sub
xchg
ret
add
sub
sub
add
mov
fs
and
mov
inc
mov
fisubr
daa
in
or
fisttp
cmps
xchg
lea
aad
xor
and
jno
arpl
sti
push
add
sub
mov
lea
pop
mov
mov
add
add
inc
add
add
enter
in
iret
adc
add
(bad)
add
in
ret
(bad)
adc
(bad)
pushf
test
cmp
pop
mov
pop
(bad)
mov
arpl
bsr
neg
mov
stc
add
and
ud0
clc
addr16
and
aad
cld
test
push
add
push
pop
mov
mov
jmp
add
mov
pusha
sub
mov
call
jge
lock
mov
(bad)
loop
push
sub
cs
mov
std
dec
mov
mov
and
cmps
push
and
add
push
sar
lock
daa
sbb
jl
xor
pop
adc
mov
inc
out
in
adc
and
push
push
lea
fadd
cmp
add
lock
inc
test
ja
lock
pushf
pop
add
(bad)
fild
lea
fistp
pop
pop
pop
xor
add
dec
push
imul
mov
push
xchg
add
add
retf
sub
and
cmp
sub
rcr
pop
sub
push
fistp
mov
mov
mov
pusha
xchg
pop
sub
and
adc
and
pushf
and
ins
mov
cmp
mov
pushf
pusha
mov
mov
xchg
sub
add
ror
lea
sbb
lods
aas
or
aaa
or
add
add
mov
add
(bad)
in
ret
pop
pop
inc
lods
pop
lods
adc
mov
fsubr
sub
and
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
jmp
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
(bad)
mov
sar
arpl
xrelease
add
pop
adc
add
sbb
add
jbe
dec
test
add
add
in
dec
dec
add
loop
add
jmp
and
jmp
test
dec
jmp
add
add
(bad)
jmp
in
push
mov
add
ror
add
mov
jbe
add
aaa
mov
add
icebp
xchg
xchg
(bad)
lock
bswap
add
add
dec
jp
sub
mov
add
(bad)
mov
jmp
test
mov
add
mov
bswap
ret
push
add
jmp
pushf
push
and
lea
add
bswap
fs
mov
xchg
shl
cmp
stos
add
add
and
call
or
add
add
test
add
sub
add
dec
dec
add
jmp
mov
sub
push
fsub
(bad)
cmp
add
fld
add
test
sub
lds
and
cmp
call
ins
and
inc
add
imul
cmp
add
dec
jmp
nop
inc
jbe
sub
out
push
jp
add
pop
call
in
add
mov
aaa
test
in
add
xor
dec
nop
add
dec
sub
mov
test
lahf
cwde
add
bound
in
cwde
(bad)
jp
mov
push
xor
call
retf
cmp
inc
pop
fld
and
mov
and
add
mov
add
push
fsubr
out
dec
cmp
inc
lahf
add
and
add
inc
(bad)
(bad)
out
jbe
dec
jg
jmp
mov
adc
inc
mov
aaa
ins
add
jmp
(bad)
(bad)
es
xor
pop
sub
mov
and
inc
data16
inc
add
mov
sub
repz
and
movzx
add
add
add
add
cwde
add
pusha
inc
and
bswap
and
add
sar
nop
add
add
mov
das
je
fs
test
jmp
jecxz
push
xor
movnti
add
jp
add
add
mov
mov
adc
test
pop
fwait
dec
add
adc
inc
jbe
inc
pushf
or
outs
add
repz
and
or
add
add
add
mov
(bad)
in
daa
push
mov
inc
and
je
jmp
dec
test
sub
and
xchg
(bad)
lods
add
add
add
add
cwde
add
sub
mov
and
bsf
add
pusha
jl
add
mov
or
add
inc
fidivr
sbb
(bad)
and
add
jmp
mov
mov
out
adc
mov
out
dec
inc
jbe
jmp
mov
or
outs
dec
push
fnstcw
adc
or
add
in
add
jmp
cmps
rcr
mov
rol
outs
jmp
mov
add
sub
mov
push
add
lahf
mov
test
add
add
mov
or
in
test
addr16
mov
sub
mov
popa
enter
add
add
add
dec
call
mov
mov
and
cmp
add
jbe
dec
ror
pushf
add
add
mov
lods
imul
cwde
add
cli
call
inc
ror
add
std
mov
mov
mov
mov
xchg
pusha
(bad)
in
lahf
xchg
inc
rol
and
inc
jbe
jmp
and
push
fs
mov
(bad)
pop
add
lea
mov
out
dec
js
dec
add
cli
and
mov
mov
scas
jnp
xchg
mov
add
mov
lea
cdq
add
loopne
ja
mov
dec
xchg
and
call
inc
lea
add
jmp
add
pop
adc
and
add
lahf
adc
and
add
inc
mov
and
add
repz
(bad)
(bad)
es
pop
call
inc
add
add
jmp
mov
add
call
jmp
(bad)
mov
push
(bad)
in
jmp
add
inc
sahf
clc
mov
add
out
mov
pop
mov
add
sub
mov
mov
xchg
sbb
sub
add
add
ret
inc
mov
mov
pop
ins
mov
mov
cmp
int
add
cmove
mov
add
jp
cmc
xchg
mov
pop
pop
or
stos
jmp
pop
cs
mov
and
add
xor
cmp
fcmovnb
mov
sar
repnz
jp
imul
sbb
lods
inc
add
ror
imul
add
nop
add
lods
add
pop
pop
or
add
adc
inc
jbe
mov
mov
mov
pop
call
add
lahf
adc
and
cmp
add
call
add
pop
adc
fs
or
stc
(bad)
dec
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
lea
mov
push
pop
popa
add
movs
test
sbb
icebp
add
(bad)
add
mov
and
jmp
xor
push
push
sub
inc
mov
jmp
ds
mov
enter
or
mov
mov
and
fld
ins
add
ret
xor
enter
xchg
dec
add
and
mov
mov
jne
and
shl
inc
outs
dec
rol
jl
dec
add
add
outs
inc
add
and
mov
pop
push
mov
push
push
retf
mov
mov
lea
mov
mov
inc
mov
inc
add
add
mov
push
mov
gs
aaa
inc
lds
inc
(bad)
dec
mov
sub
cmps
sub
add
mov
pusha
mov
inc
mov
and
or
add
xchg
cmp
mov
popa
addr16
mov
movs
push
sub
jge
pop
sbb
gs
pusha
pop
pop
ret
nop
push
mov
push
and
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
call
add
mov
mov
mov
mov
jmp
mov
mov
lea
pop
pop
ret
mov
call
mov
mov
mov
mov
sub
mov
call
add
mov
mov
mov
jmp
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
jmp
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
gs
or
push
or
pop
sbb
add
fst
adc
add
xchg
cmp
add
add
add
(bad)
dec
and
add
add
push
and
add
add
and
inc
pop
test
jmp
out
push
std
and
sbb
ja
test
add
mov
(bad)
dec
and
add
add
test
and
inc
add
rol
mov
fcomip
test
in
add
ja
test
call
mov
pop
mov
add
add
add
mov
repz
aam
fadd
jns
xchg
rol
mov
and
add
mov
aam
add
bswap
and
outs
shr
add
add
mov
inc
jmp
arpl
add
loop
outs
push
sbb
add
mov
pushf
movs
adc
inc
int
inc
jg
cmp
add
add
inc
add
dec
rcr
mov
in
add
xchg
and
add
fmul
(bad)
sub
and
add
leave
not
cmp
sbb
push
fild
repnz
sub
mov
cmps
jns
rcl
add
iret
add
add
mov
sub
mov
mov
test
add
add
add
sub
mov
jg
es
add
sub
sub
out
hlt
mov
(bad)
adc
and
add
out
add
push
pop
fdiv
out
bnd
adc
xchg
xchg
push
mov
call
add
add
jmp
inc
fidivr
mov
lods
and
inc
fisttp
sbb
add
push
mov
shr
inc
jno
test
or
xchg
jmp
mov
add
add
add
call
movs
repz
shl
ret
add
add
adc
cld
xor
add
gs
sub
out
hlt
test
add
sub
add
mov
xlat
fsub
add
sub
lock
je
jmp
mov
fmul
mov
and
add
or
test
pop
inc
sar
add
out
sub
mov
mov
adc
js
pop
add
int3
add
outs
ror
sub
stos
test
(bad)
rol
add
and
add
jmp
xchg
xchg
push
fdiv
ins
adc
inc
test
fild
mov
push
pop
sub
add
sub
lock
add
add
mov
inc
add
jb
scas
scas
cmps
and
inc
add
xor
mov
arpl
push
fcomip
test
add
in
sub
cdq
repz
call
add
add
or
(bad)
adc
cld
arpl
aaa
adc
ja
xor
add
mov
jg
jmp
lods
test
fsubr
inc
add
jp
je
je
jmp
cld
xor
iret
movs
and
cld
mov
xchg
and
ja
iret
and
add
mov
fidiv
inc
je
jbe
or
mov
test
add
mov
push
add
jmp
mov
(bad)
jmp
fs
jmp
mov
sub
or
jg
dec
inc
outs
ror
mov
add
popa
shl
iret
inc
mul
ja
in
push
jmp
mov
and
in
add
push
adc
cmovo
add
add
in
hlt
rol
add
sub
addr16
bound
jp
sar
sbb
add
push
std
leave
lds
add
cmp
mov
jg
scas
outs
ror
add
add
jmp
jp
jp
je
sar
jno
in
sbb
add
pop
and
iret
mov
loopne
in
popa
call
add
add
jmp
mov
mul
add
add
mov
cmp
sbb
add
add
add
mov
fild
pop
add
add
test
fdivr
repz
mov
rol
jp
sbb
fadd
add
jl
inc
and
ret
add
mov
add
add
sub
scas
data16
cmpps
out
push
fild
add
sbb
es
mov
lods
ret
inc
add
add
and
add
mov
(bad)
out
cmp
in
adc
repz
mov
sbb
add
add
mov
cmc
js
push
out
hlt
and
cmps
int
inc
add
repz
cmp
push
add
jbe
mov
xor
test
add
inc
add
fadd
add
sub
mov
pminsw
add
or
mov
test
fadd
add
imul
push
mov
cld
test
fistp
mov
test
add
cmp
inc
out
sbb
cmp
shl
mov
push
and
cmp
repz
push
cmp
test
add
add
jl
add
add
add
sub
je
jmp
mov
and
add
add
outs
inc
and
paddq
es
mov
pop
and
mov
add
out
and
je
retf
cmc
add
inc
mov
fadd
cmp
retf
fadd
je
jmp
jmp
xor
mov
(bad)
xor
push
rol
repz
inc
xchg
mov
jmp
test
mov
and
call
add
mov
or
add
add
dec
popa
repz
dec
mov
test
add
fadd
mov
jmp
mov
mov
or
mul
cmp
repz
cmovne
fstp
fsubr
add
hlt
cmp
mov
mov
jmp
mov
addr16
cmp
add
or
out
sbb
fbstp
jne
add
jmp
dec
es
cli
and
or
add
and
push
cmp
xchg
and
add
inc
mov
or
add
pushw
inc
add
test
xchg
xchg
push
fadd
add
add
mov
mov
arpl
ror
setno
cmp
je
jns
add
add
add
and
add
add
mov
mov
mov
sub
cmp
add
mov
repnz
leave
adc
sar
inc
lods
add
int
mov
jmp
loope
and
and
out
retf
pusha
sbb
in
fisttp
jns
xchg
and
add
add
mov
add
mov
enter
retf
inc
mov
js
je
js
add
push
push
cmp
and
iret
mov
mov
lock
mov
add
mov
sub
add
sar
xor
je
fild
jns
aad
call
call
mov
arpl
xchg
and
add
shrd
add
mov
xchg
xchg
push
lock
mov
mov
call
iret
add
jmp
test
stos
add
add
sar
(bad)
jmp
push
addr16
sti
mov
mov
mov
int
dec
inc
movs
pop
mov
add
add
sbb
and
mov
mov
add
in
add
mov
dec
mov
add
adc
(bad)
es
add
outs
shr
and
add
cmp
jmp
jns
cwd
and
add
adc
add
add
mov
add
aad
xlat
pop
mov
cmp
and
and
fild
add
iret
mov
cmp
test
loope
and
add
mov
mov
jmp
ficom
dec
sti
mov
pusha
jnp
mov
sbb
add
stos
inc
sbb
lea
clc
js
and
push
fistp
cdq
and
jbe
add
and
add
jno
and
aam
and
lods
add
fst
add
imul
mov
add
mov
add
ret
dec
fadd
ror
jmp
les
cmp
and
sti
sbb
add
add
in
(bad)
cdq
xor
add
mov
stc
rol
idiv
jmp
pop
inc
add
push
mov
push
push
push
and
sub
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
movzx
stos
add
push
push
or
xchg
add
inc
xchg
scas
add
add
or
fiadd
adc
add
mov
bound
pushf
add
dec
add
int3
add
nop
and
popf
add
adc
mov
test
xchg
sbb
add
test
or
add
mov
mov
and
add
add
adc
mov
mov
mov
add
or
out
jmp
test
shr
cdq
push
popf
or
jg
jmp
mov
mov
adc
jl
cmp
sbb
adc
add
add
adc
mov
or
jg
std
popf
add
add
add
fwait
(bad)
xor
dec
sbb
jg
jmp
mov
sub
(bad)
movs
push
jg
movs
add
add
inc
test
add
aas
mov
inc
lds
cmp
sbb
jp
add
add
in
add
push
mov
mov
and
out
rol
add
jmp
pop
test
test
(bad)
and
inc
or
lds
fild
sbb
add
test
mov
mov
and
cvtpi2ps
dec
aam
add
add
sub
mov
daa
inc
rol
or
jp
shr
adc
mov
inc
and
data16
add
add
mov
mov
mov
mov
repz
add
fwait
push
and
add
add
fstp
ret
repz
push
int3
mov
popf
add
mov
sbb
mov
(bad)
mov
add
cmps
add
dec
movs
pop
test
add
fistp
and
daa
inc
push
mov
sbb
add
or
and
out
inc
push
je
jmp
mov
test
add
adc
and
unpckhps
retf
add
or
xchg
test
in
sub
fdiv
pusha
std
mov
out
test
dec
add
dec
pop
test
test
add
mov
mov
add
add
add
add
sub
(bad)
movs
push
fsubr
pop
add
aam
pop
add
add
sub
mov
je
cmp
add
fwait
test
add
or
sti
enterw
aam
in
mov
lahf
test
sub
mov
je
or
cmps
xchg
mov
sub
mov
and
je
cmp
xor
adc
add
mov
add
inc
sbb
sub
push
and
mov
push
jmp
or
sub
test
test
iret
push
std
movs
push
mov
add
or
movs
xlat
imul
add
loope
rol
dec
push
add
add
xchg
or
sbb
test
add
mov
inc
test
add
and
add
mov
mov
cmp
lds
(bad)
add
xchg
jmp
fwait
push
popf
test
add
add
int
mov
mov
adc
std
xor
lods
out
test
and
movs
push
and
xchg
cmp
jmp
mov
push
sub
mov
adc
add
retf
add
or
mov
fwait
push
and
dec
loopne
and
add
dec
cmove
mov
jmp
mov
jae
cmp
push
mov
ror
sbb
xchg
les
adc
add
inc
test
push
call
jmp
push
lods
out
mov
pop
fucomi
cmp
sub
mov
and
xchg
imul
mov
push
add
mov
mov
mov
ret
mov
ror
add
adc
add
mov
(bad)
xchg
lock
mov
test
sub
inc
rol
sbb
in
sub
push
dec
and
jmp
mov
mov
xor
imul
test
sub
call
add
mov
sbb
add
jmp
mov
mov
and
add
add
or
add
add
ss
mov
pop
and
add
add
aam
add
test
clc
mov
xor
pop
std
and
add
aam
dec
adc
test
mov
add
loop
sbb
sub
out
js
push
and
sub
adc
dec
mov
push
dec
les
add
cmp
rcr
xor
sub
retf
xor
loop
xchg
add
mov
pop
mov
sub
add
push
and
test
mov
mov
add
mov
and
add
add
nop
and
xchg
add
lds
xchg
pop
xchg
and
add
sub
cmps
or
mov
dec
mov
clc
aam
mov
sbb
sbb
retf
add
in
push
and
sub
add
add
add
popf
mov
loop
movs
sub
add
pop
test
mov
add
pop
pop
ret
rol
and
add
mov
jae
cli
(bad)
dec
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
shl
mov
sub
sub
shl
mov
call
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
jmp
call
mov
cmp
setne
and
mov
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
shl
mov
call
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
lea
mov
mov
sub
add
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
cmp
cmova
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
jmp
lea
mov
mov
add
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
jmp
mov
jmp
lea
lea
lea
cmp
sete
and
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
add
mov
mov
mov
sub
sub
add
mov
mov
mov
add
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
cmp
cmova
mov
jmp
mov
mov
mov
jmp
lea
mov
mov
add
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
add
add
mov
mov
mov
sub
add
mov
mov
mov
cmp
cmova
mov
mov
jmp
mov
mov
mov
jmp
lea
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
call
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
call
mov
mov
jmp
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
jmp
call
mov
mov
jmp
mov
lea
mov
mov
sub
add
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
jmp
lea
mov
mov
add
mov
mov
mov
call
lea
mov
mov
add
add
sub
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
call
mov
jmp
mov
jmp
mov
mov
call
mov
jmp
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
iret
mov
ror
jne
mov
mov
fwait
test
mov
idiv
lods
pop
add
lods
and
inc
gs
add
fisubr
jnp
in
test
mov
js
enter
mov
inc
add
pop
sub
mov
add
cwde
add
jnp
(bad)
(bad)
push
ins
add
add
add
add
mov
call
pop
xchg
add
stos
adc
pusha
mov
add
mov
daa
into
and
add
add
lods
mov
les
sbb
cmp
sub
and
enter
add
add
outs
add
pop
test
add
jnp
cmp
mov
and
add
add
add
add
test
add
jae
repnz
and
lods
enter
jb
mov
add
mov
aaa
sbb
ds
mov
jp
sbb
test
sub
and
test
fstp
sbb
call
mov
push
out
scas
lahf
add
adc
add
pusha
and
add
jb
xor
sbb
psrld
add
add
add
sub
mov
and
pop
add
add
fiadd
cmp
ss
jmp
mov
jb
push
ins
outs
rcr
test
add
sub
mov
and
xchg
(bad)
mov
add
add
add
mul
xchg
inc
push
mov
pop
jmp
call
sar
sbb
add
mov
xchg
(bad)
mov
add
add
mov
test
ss
punpcklbw
enter
add
add
ins
shl
icebp
and
inc
and
xcrypt-cfb
cmps
and
add
add
add
sbb
neg
ins
ja
mov
nop
test
add
add
pusha
mov
jb
add
and
(bad)
jbe
add
rol
call
add
cdq
and
daa
fisttp
jns
in
cmp
jb
mov
sub
fistp
dec
dec
pop
call
push
test
pushf
pop
sbb
inc
add
xor
out
and
je
shl
lods
enter
ins
add
and
add
sub
in
fimul
sbb
inc
add
ss
add
leave
inc
adc
sar
call
jmp
mov
sub
mov
add
add
stos
add
mov
in
iret
pop
dec
mov
je
test
add
fld
ins
ds
sti
pop
mov
mov
add
add
in
and
add
add
mov
and
sbb
add
add
add
test
add
imul
mov
jb
daa
into
and
call
test
pop
add
inc
pop
pushf
popa
pop
mov
mov
out
enter
add
jl
call
lods
and
mov
jg
jmp
mov
mov
lea
clc
je
jmp
xor
add
sub
mov
setle
inc
gs
call
pushf
add
xor
mov
jns
jmp
adc
xchg
add
in
inc
mul
mov
call
pextrw
xchg
gs
fistp
add
xchg
shr
es
xchg
and
in
add
jb
xchg
lods
lds
fld
mov
jp
lahf
stos
sti
add
add
popa
fcmovnb
test
jb
idiv
sar
mov
push
cwde
lods
add
pop
and
mov
popf
add
mov
and
adc
jnp
loopne
and
jb
mov
sti
add
push
xchg
test
add
sub
add
mov
ret
mov
push
fdivrp
jmp
daa
js
and
and
lock
shl
test
lods
add
jg
jb
cli
stos
mov
rcr
mov
call
xor
fsub
add
push
lahf
mov
lock
test
enter
and
ins
rol
data16
sbb
dec
xchg
ret
in
fwait
and
and
pop
mov
stos
add
jmp
pop
mov
mov
xchg
and
idiv
cmovne
add
add
dec
sub
add
lods
add
fild
mov
movs
pop
dec
jmp
mov
mov
and
add
add
jp
in
pop
(bad)
stc
adc
ins
add
push
add
out
lds
add
add
mov
bnd
mov
neg
outs
lea
stos
(bad)
hlt
and
repnz
and
add
lods
mov
cmp
add
xchg
test
mov
add
repnz
ins
xor
mov
sbb
sahf
stos
adc
jle
push
xchg
aam
mov
add
mov
add
add
loop
add
sbb
mov
mov
in
xor
mov
and
push
dec
and
sub
or
push
cli
add
stos
jecxz
adc
add
lods
sub
jle
and
ins
add
push
test
add
ds
call
sbb
push
pop
pop
ret
test
adc
lods
add
enter
push
mov
loopne
jmp
(bad)
push
mov
js
out
jmp
(bad)
sub
add
add
in
(bad)
jmp
data16
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
dec
clc
sub
movs
inc
and
mov
mov
(bad)
jo
pop
(bad)
add
push
push
mov
daa
outs
retf
adc
movsx
inc
add
mov
pop
sub
mov
and
(bad)
int
sub
movs
add
add
and
adc
jge
pop
jae
jg
repz
push
out
xor
hlt
pop
sub
add
jb
adc
(bad)
cmp
mov
sub
rcr
push
sub
mov
std
mov
cmp
mov
add
(bad)
cmp
jo
ss
and
mov
(bad)
add
push
add
inc
and
add
inc
and
jg
ror
inc
and
push
bound
and
jg
lds
add
jo
inc
and
cmp
push
out
jmp
mov
pusha
ins
cmps
sbb
push
add
jl
lods
add
or
mov
out
add
enter
pop
jmp
mov
std
nop
aad
les
add
inc
jmp
icebp
inc
pop
lock
mov
mov
dec
scas
ins
jmp
mov
sub
fiadd
shrd
add
mov
std
cmp
add
inc
scas
pop
psubw
jl
jmp
dec
jge
pop
sub
mov
mov
fiadd
jmp
mov
and
sub
mov
and
inc
test
add
add
aam
add
mov
and
push
push
or
mov
pop
je
and
add
mov
and
sub
rol
je
jmp
fsubr
cmp
cmp
jge
(bad)
imul
inc
add
cmp
in
mov
and
test
scas
ins
pop
(bad)
inc
add
mov
lahf
stos
sahf
sub
add
mov
pusha
sbb
cmp
xchg
and
mov
jmp
xchg
cmp
add
xor
ret
lock
sub
inc
imul
jl
scas
xchg
in
mov
jmp
mov
xchg
dec
add
mov
mov
out
mov
mov
scas
mov
and
jmp
(bad)
call
jg
jmp
mov
mov
and
xor
add
mov
mov
fisub
cmp
ds
jmp
xor
lea
sbb
push
movs
fdiv
(bad)
mov
mov
mov
pop
out
push
push
add
jg
retf
xor
sahf
sub
xchg
or
jp
mov
cmp
mov
jmp
data16
push
mov
push
push
push
and
sub
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xchg
dec
imul
mov
aas
pop
cdq
add
mov
mov
mov
and
rol
fist
dec
mov
in
push
das
inc
jne
sbb
mov
xchg
dec
mov
dec
dec
add
not
pop
call
inc
push
lock
sub
jmp
xchg
dec
and
jae
mov
inc
(bad)
or
adc
sbb
mov
pop
neg
sbb
setbe
iret
outs
pop
xchg
or
adc
(bad)
stos
test
icebp
and
adc
rcr
mov
mov
jg
jmp
cmp
(bad)
stc
bound
inc
in
popf
add
add
add
add
mov
sub
mov
cmp
add
add
add
outs
(bad)
ret
sub
mov
cli
arpl
add
add
adc
xchg
inc
xor
aad
xor
test
fild
add
sbb
xchg
and
sub
mov
inc
add
add
mov
nop
adc
lock
inc
and
inc
out
add
loopne
ins
sbb
adc
sahf
mov
xor
cmc
pop
xor
sbb
mov
add
pusha
mov
and
sub
mov
push
adc
add
pop
add
add
inc
jmp
push
add
aas
add
ins
sub
mov
push
adc
sbb
fiadd
sbb
sub
mov
popa
cmovnp
add
outs
jmp
jmp
mov
gs
adc
jl
and
cmp
rcpps
ret
sahf
mov
jmp
(bad)
dec
and
aad
xor
or
add
call
xor
and
(bad)
pusha
and
add
bound
daa
inc
and
daa
stc
(bad)
(bad)
jmp
mov
arpl
repnz
mov
push
and
shr
mov
add
add
mov
icebp
jmp
mov
(bad)
pop
or
mov
mov
movzx
mov
cmp
div
ret
in
fwait
outs
jecxz
cmps
inc
add
out
mov
ret
add
mov
ret
push
imul
pop
mov
clc
xchg
add
(bad)
sahf
mov
clc
test
fwait
in
iret
outs
pop
ds
dec
sub
jo
lods
rol
neg
xor
sahf
inc
xor
push
xor
add
outs
lea
add
fcmovnb
mov
mov
or
pmullw
dec
jle
xor
cdq
loop
xor
arpl
xor
arpl
icebp
xor
and
and
mov
out
mov
mov
and
xchg
mov
pop
(bad)
push
xor
adc
test
dec
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
fimul
push
scas
or
pop
aaa
dec
add
sti
mov
xor
xchg
movs
xchg
and
add
(bad)
jo
imul
mov
add
jle
cmp
cmps
cmp
add
add
idiv
and
add
jo
xchg
add
test
dec
hlt
jg
call
push
pop
ret
add
add
add
add
mov
(bad)
jae
jecxz
add
xchg
scas
pop
dec
pushf
add
sub
dec
jge
xor
fadd
mov
paddd
cld
add
cdq
add
xchg
cmps
lds
add
jg
jp
sahf
movs
mov
psllw
fdivrp
nop
jmp
mov
pop
xor
or
test
hlt
jo
jae
mov
mov
mov
sub
mov
add
adc
paddd
sti
hlt
cdq
add
add
mov
or
enter
add
fimul
arpl
push
push
jle
fiadd
add
mov
ds
inc
pop
jge
and
add
add
(bad)
movs
add
add
sub
test
jle
add
jnp
jb
cmp
and
add
add
test
or
add
mov
sub
stc
xchg
and
and
sub
dec
add
add
add
mov
and
add
add
push
cwde
mov
mov
add
cli
or
nop
sub
push
jno
mov
adc
add
sub
push
test
and
sub
jg
jmp
cmc
pop
and
add
nop
scas
cmp
mov
add
add
test
add
pop
add
and
mov
test
fiadd
add
(bad)
iret
add
add
pop
and
add
nop
scas
cmps
push
lds
jo
xchg
test
and
(bad)
les
pop
adc
add
sub
mov
jno
and
sti
add
adc
mov
cmp
lds
dec
add
je
add
push
test
add
sti
mov
mov
clc
je
hlt
add
jmp
mov
and
add
pop
outs
test
hlt
test
cmp
test
adc
add
ror
outs
int3
hlt
jg
aad
and
mov
jmp
mov
scas
xor
mov
add
hlt
je
outs
adc
and
inc
dec
add
mov
mov
(bad)
iret
add
sti
add
add
sub
clc
test
rol
hlt
jg
pop
(bad)
and
add
and
fucomi
mov
test
push
scas
jno
sti
sti
(bad)
and
jo
jmp
mov
outs
adc
add
push
sti
pop
and
gs
add
jg
test
add
cwde
pop
jno
jl
fist
add
pop
icebp
and
(bad)
movs
test
(bad)
pop
fiadd
add
in
mov
jle
pop
and
add
nop
sub
call
je
les
test
adc
in
mov
pusha
jle
repnz
lods
add
nop
jg
push
sti
add
add
xchg
and
add
sub
adc
add
jecxz
add
fsubrp
and
nop
sbb
not
jnp
sbb
movs
add
add
scas
and
hlt
jg
mov
movs
push
add
sub
sbb
jle
into
lock
in
add
mov
add
or
test
add
jmp
mov
loopne
pop
xchg
mov
jo
test
mov
mov
sbb
and
jo
add
mov
test
bswap
imul
add
add
enter
add
mov
je
jmp
jl
fnstsw
add
add
mov
sti
lock
add
in
jmp
mov
repz
imul
stc
idiv
hlt
pmuludq
pop
xchg
xor
add
stos
test
add
or
xchg
test
push
jle
push
fcom
jno
add
sti
hlt
sub
mov
and
add
add
test
add
add
mov
sub
fadd
ror
cwde
add
idiv
mov
add
add
test
jo
add
add
add
jle
sub
sbb
aaa
je
js
sti
add
jmp
mov
addr16
es
and
jno
xor
add
jns
add
add
test
jo
sti
fld
daa
sahf
inc
and
das
mov
mov
mov
movs
add
repz
lahf
hlt
test
add
cdq
inc
add
xchg
add
add
shl
mov
sbb
(bad)
int3
add
add
push
add
mov
sub
call
jne
pop
outs
sbb
and
cmps
lds
add
jg
add
xchg
call
fist
add
add
sti
add
outs
aad
sub
test
add
add
mov
add
jg
sub
gs
xchg
push
pop
(bad)
pop
add
fsubrp
add
nop
add
test
gs
sti
fld
dec
outs
lods
test
test
inc
dec
hlt
jmp
mov
adc
push
jle
int
dec
test
push
push
dec
jg
jmp
mov
cmp
pusha
es
imul
jg
jmp
mov
push
lock
aaa
xor
add
jmp
mov
sub
mov
inc
dec
into
movs
add
hlt
xchg
inc
add
add
add
test
leave
fmul
js
sti
hlt
jo
pop
xchg
sub
dec
hlt
jg
out
repz
mov
jno
mov
add
jmp
mov
(bad)
pop
and
xor
(bad)
push
add
add
inc
dec
hlt
jg
test
clc
mov
jle
or
xor
or
inc
clc
jg
je
add
add
add
add
fst
cmp
test
push
add
xchg
fdivrp
nop
add
add
ror
aas
mov
call
push
add
jb
cmps
aaa
jle
pop
add
add
xchg
add
sti
test
adc
add
or
mov
lods
add
mov
ins
push
add
test
add
nop
scas
ja
fidivr
mov
je
jmp
pushf
add
add
add
jge
(bad)
hlt
sysexit
xor
add
call
test
sub
mov
add
add
add
sub
add
add
fcmove
ror
fadd
rol
add
add
sar
hlt
jo
xor
cmp
imul
add
add
pmaddwd
fadd
aaa
push
add
nop
mov
add
in
adc
and
mov
pop
mov
add
mov
mov
jbe
fbld
add
loop
mov
and
dec
hlt
jg
mov
hlt
mov
add
adc
fstp
mov
or
add
ret
inc
shl
push
sbb
dec
(bad)
jo
sbb
add
nop
ror
jmp
lea
or
jo
and
add
jo
dec
sub
add
dec
and
test
mov
vmovsldup
mov
add
inc
jnp
mov
add
jmp
sbb
in
loopne
xchg
aaa
add
jo
xchg
mov
add
outs
sar
add
xchg
xor
jle
mov
mov
call
add
inc
push
xor
out
xor
inc
dec
hlt
jg
mov
dec
jg
sti
jns
add
mov
clc
test
add
add
xchg
test
mov
mov
jmp
mov
jmp
inc
jnp
jb
sbb
and
add
adc
jb
add
add
inc
sahf
add
mov
(bad)
shl
add
add
add
add
add
hlt
(bad)
hlt
xor
arpl
mov
dec
test
(bad)
cmp
stos
mov
test
xor
add
mov
lock
jo
add
sub
add
in
cmp
and
add
add
cmp
cld
xchg
mov
pop
jbe
adc
and
sub
inc
xor
add
in
pop
test
add
sub
mov
cwde
in
fild
add
jne
add
xchg
and
mov
outs
sbb
hlt
add
add
in
add
sti
add
sbb
(bad)
sti
je
add
inc
and
add
add
inc
add
rol
and
cmc
add
inc
pop
cmps
mov
and
mov
mov
mov
jne
and
xchg
and
add
add
push
sbb
hlt
jg
int3
mov
add
ja
mov
mov
mov
adc
psadbw
add
xor
and
movs
pop
(bad)
(bad)
mov
mov
mov
mov
jmp
xor
sbb
mov
add
imul
pop
and
in
add
jmp
mov
mov
mov
add
lahf
push
mov
add
mov
jbe
add
add
test
add
dec
jns
mov
pop
xchg
(bad)
dec
jle
cmp
and
add
add
cs
jmp
mov
shl
add
add
jecxz
add
add
add
pushf
add
sbb
add
push
jle
faddp
jg
fwait
add
jno
xor
pop
mov
add
imul
mov
mov
and
mov
xor
sti
ja
leave
retf
jmp
mov
and
cmc
jo
dec
loope
jnp
out
hlt
sar
data16
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
lods
mov
adc
ror
fidivr
dec
push
and
mov
jl
and
xchg
dec
pop
sbb
push
inc
js
je
arpl
and
mov
call
add
mov
mov
jecxz
mov
and
aad
nop
inc
inc
add
loopne
pop
or
test
adc
int3
out
(bad)
dec
sub
ret
nop
push
mov
push
push
push
and
sub
jmp
call
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
sbb
daa
cmp
pusha
xor
and
mov
int
mov
sub
and
nop
sbb
sti
(bad)
mov
push
nop
lods
and
mov
and
xchg
and
aam
add
mov
jge
mov
punpcklwd
add
mov
add
fwait
mov
xchg
and
mov
inc
and
sub
mov
jg
add
mov
xor
or
sbb
mov
mov
add
pusha
das
stos
lods
sub
mov
bound
adc
pop
sbb
push
inc
int
movntps
add
jmp
mov
sub
test
adc
jmp
repz
push
sub
mov
mov
out
add
stos
add
add
push
inc
and
sub
mov
out
mov
add
push
nop
mov
xor
(bad)
shufps
add
nop
add
dec
sub
sbb
mov
dec
jmp
pop
inc
stos
push
les
inc
retf
push
jmp
xchg
lods
dec
push
mov
and
cmp
add
add
leave
inc
and
sub
mov
push
adc
add
sub
imul
mov
mov
ss
or
add
add
icebp
pusha
movs
add
push
aam
inc
cmps
stos
pop
sub
pop
movs
mov
jmp
add
jmp
mov
mov
mov
cmp
loope
or
add
add
hlt
add
cdq
inc
add
lock
add
shr
cmps
jmp
add
mov
or
mov
and
jmp
push
icebp
inc
dec
jne
je
mov
jae
loop
cmovne
loopne
bound
into
fwait
add
imul
mov
inc
inc
and
pusha
push
(bad)
cmp
mov
out
add
dec
and
jo
sti
mov
dec
add
mov
pushf
inc
mov
push
mov
je
fs
popf
daa
cmp
sub
add
aam
out
stos
mov
stos
jp
stc
in
mov
mov
jmp
adc
pop
lds
mov
add
mov
and
mov
bound
jmp
and
mov
or
in
add
mov
out
rol
int
add
add
and
es
inc
js
or
movs
out
mov
iret
gs
dec
stos
inc
xor
mov
idiv
(bad)
jmp
pop
test
add
add
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sbb
adc
push
adc
or
dec
and
mov
je
adc
not
jae
and
or
push
and
mov
and
push
and
je
das
xor
jmp
and
dec
and
mov
movs
jg
or
inc
and
mov
mov
dec
jae
test
int3
int3
int3
int3
int3
push
mov
push
and
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
call
add
mov
mov
mov
mov
jmp
mov
mov
lea
pop
pop
ret
mov
call
mov
mov
mov
mov
sub
mov
call
add
mov
mov
mov
jmp
nop
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
iret
mov
inc
add
add
or
dec
cmp
add
ins
dec
mov
mov
mov
rol
push
stos
jmp
sti
and
push
add
sbb
and
add
mov
rol
rol
mov
mov
and
lds
mov
lock
or
out
out
and
adc
add
mov
and
and
test
jmp
and
add
retf
push
dec
add
mov
fld
add
jmp
push
test
add
add
mov
dec
jg
xor
xchg
inc
test
loopne
jle
xchg
sub
fs
fisttp
jmp
cli
cmp
movs
(bad)
bound
add
sub
test
(bad)
and
inc
out
add
dec
call
sub
stos
test
lds
mov
daa
or
add
dec
cmp
ins
dec
add
cwde
mov
mov
and
add
retf
add
jmp
mov
ins
addr16
inc
into
mov
test
movs
fld
les
scas
sar
retf
cwde
sub
outs
in
outs
adc
add
setl
add
add
add
push
jle
sub
test
scas
add
iret
jecxz
ins
add
push
test
push
and
scas
ja
add
inc
add
fild
ins
dec
call
sub
mov
and
outs
les
syscall
in
or
xchg
jmp
mov
retf
ja
stos
pop
cwde
test
movs
add
xchg
jns
outs
(bad)
jmp
hlt
mov
sub
leave
bound
ins
dec
adc
and
inc
add
mov
(bad)
and
mov
add
pop
movs
fld
cmp
inc
and
test
lss
add
add
mov
jb
add
sub
mov
dec
lods
jbe
add
jmp
mov
inc
push
add
or
add
cmp
movs
fld
xchg
add
sub
add
bndldx
add
inc
out
pop
dec
jb
add
mov
cmp
and
add
add
add
xor
sti
sub
mov
aaa
inc
mov
bound
jmp
push
test
add
inc
sub
test
je
test
mov
push
dec
add
ds
ss
push
test
cmovnp
add
add
mov
data16
ja
mov
jmp
dec
jmp
mov
stos
out
popf
mov
add
setp
push
inc
add
fisttp
add
sub
mov
dec
cmps
popf
ret
jmp
mov
and
mov
leave
mov
and
inc
add
andps
ins
add
adc
add
mov
std
mov
rcr
mov
mov
call
and
add
out
sub
cwde
xchg
add
(bad)
cli
add
inc
and
inc
scas
cmp
jg
sub
ret
mov
les
add
gs
add
fld
sub
mov
test
sub
add
dec
mov
ret
ins
dec
sub
push
test
femms
push
or
add
add
sub
sub
std
aaa
add
popa
dec
and
mov
add
sbb
fild
inc
sahf
cld
cwde
fimul
movs
(bad)
test
inc
add
retf
les
add
pop
in
mov
ret
fild
bound
dec
add
fld
and
add
(bad)
(bad)
pop
mov
cvtpi2ps
popf
fsubr
rol
and
sbb
mov
out
add
(bad)
and
mov
xchg
sldt
xchg
mov
outs
add
imul
and
add
add
inc
retf
les
add
mov
mov
ins
pextrw
and
adc
jmp
cs
cmp
add
shl
test
add
les
add
xchg
add
js
fld
je
jno
sub
mov
popa
dec
jo
mov
jmp
mov
ins
or
sbb
dec
add
(bad)
aaa
adc
adc
inc
and
jg
sub
mov
punpckhwd
add
ins
mov
cs
and
xchg
add
inc
jbe
mov
jo
mov
add
inc
add
dec
cmp
out
ins
sub
mov
(bad)
test
add
jmp
mov
and
xlat
aaa
xchg
mov
and
dec
pop
fld
jmp
call
sub
iret
addr16
mov
add
jmp
mov
and
dec
cmp
fidivr
mov
and
add
jmp
mov
sub
mov
je
jmp
mov
sub
outs
inc
jmp
popf
dec
adc
dec
fld
dec
cmp
add
xacquire
cvtpi2ps
cmp
add
into
and
add
add
mov
and
dec
test
cmp
xchg
mov
adc
sub
push
test
movs
fldcw
add
test
and
lds
add
sbb
and
mov
add
cmp
out
out
outs
sub
adc
mov
je
jmp
test
data16
cld
or
test
ins
add
inc
dec
add
mov
movs
hlt
jecxz
fsubr
mov
test
in
xchg
add
add
and
ins
add
(bad)
lock
dec
mov
sbb
outs
les
add
nop
sub
mov
je
dec
sub
and
add
add
dec
into
pop
dec
je
mov
mov
not
push
and
minps
add
mov
sti
sub
xchg
scas
dec
sub
mov
je
mov
cs
cmp
add
sub
iret
addr16
cld
test
je
add
add
add
inc
cmp
and
je
retf
add
mov
mov
mov
fs
maxps
dec
add
jmp
cwde
and
cmp
add
sti
test
mov
inc
paddsw
dec
mov
fldcw
out
loopne
psubq
add
add
mov
sbb
add
sub
mov
stos
test
and
add
imul
mov
mov
and
add
cmp
dec
mov
cmp
add
cli
inc
mov
jns
fmul
add
jmp
xor
or
inc
test
push
xchg
scas
dec
add
cmp
add
xor
add
(bad)
into
and
add
add
mov
and
xchg
pop
lock
adc
ins
ror
add
test
add
push
pop
js
dec
add
lock
je
ja
adc
out
sar
jmp
dec
retf
and
add
scas
mov
pop
es
xor
and
add
jmp
mov
xchg
xor
inc
add
sub
mov
mov
cmp
add
mov
call
mov
jmp
dec
test
xchg
scas
add
mov
(bad)
into
xor
push
ret
add
dec
test
add
add
cmp
mov
fld
add
mov
test
into
inc
push
xchg
dec
push
adc
add
add
repnz
mov
jmp
mov
sbb
and
dec
add
aam
add
add
add
cmp
add
in
pop
mov
rol
bound
les
icebp
scas
add
dec
push
inc
add
rol
frstor
scas
fiadd
ins
ret
mov
mov
jmp
in
loopne
mov
lock
add
push
sub
ja
mov
xchg
and
fadd
add
cli
inc
and
outs
retf
mov
sti
and
xchg
add
inc
test
add
mov
mov
mov
sub
(bad)
ret
xchg
outs
add
mov
(bad)
outs
scas
stos
retf
mov
and
add
cmp
and
mov
push
add
(bad)
mov
mov
mov
ret
dec
add
dec
push
inc
add
rcr
add
ret
add
add
cmp
sbb
add
jg
(bad)
mov
adc
push
jmp
(bad)
jmp
adc
movs
loop
dec
cmp
xchg
inc
js
repnz
push
and
add
add
iret
push
add
fisttp
add
jmp
(bad)
into
xor
cmp
int
scas
inc
and
in
scas
dec
jle
seto
cmp
inc
add
push
test
ins
dec
adc
xchg
and
fadd
xchg
and
add
or
idiv
iret
and
add
add
xor
add
mov
push
add
dec
mov
mov
mov
push
inc
add
add
add
jmp
sbb
inc
add
add
xchg
and
add
add
dec
add
fiadd
fld
test
aas
retf
jmp
(bad)
js
in
dec
test
jmp
sub
mov
ret
ins
add
adc
outs
les
jnp
add
pop
sbb
test
movs
add
fld
and
add
outs
outs
repz
shr
pop
add
push
inc
add
mov
mov
int3
xor
inc
add
ror
std
pop
mov
mov
add
test
es
xor
(bad)
adc
xlat
add
add
(bad)
cmp
loope
adc
add
mov
push
inc
add
pop
sub
test
loopne
cmp
jp
push
inc
add
mov
test
add
add
scas
sub
mov
jmp
test
ret
add
push
inc
add
mov
adc
add
add
outs
les
add
rol
xchg
and
inc
or
dec
add
test
add
js
mov
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
xchg
sub
test
jl
xchg
(bad)
add
imul
test
add
add
add
mov
test
add
cmp
or
push
add
in
sub
add
mov
dec
xor
adc
add
jl
(bad)
imul
cmp
add
add
(bad)
in
push
mov
cmp
mov
and
mov
repnz
and
cmp
ja
aaa
(bad)
sub
lock
jns
add
mov
movs
push
repz
cmps
je
test
mov
xchg
jbe
mov
push
scas
mov
push
out
mov
sub
mov
add
mov
(bad)
inc
add
mov
test
mov
fldcw
loopne
cmc
and
mov
mov
imul
test
sub
mov
(bad)
jmp
shl
add
add
xor
and
push
pop
pop
or
test
dec
fidivr
mov
push
mov
out
stc
jmp
pop
test
loopne
iret
jl
test
cmp
jg
or
xor
add
aam
sub
mov
aam
add
je
aaa
clc
mov
and
add
add
imul
(bad)
and
out
stc
inc
loop
cmc
or
add
or
adc
mov
jl
add
pop
mov
test
xor
mov
sub
data16
lea
fidivr
add
mov
sub
mov
mov
add
add
add
out
add
adc
and
jg
jmp
mov
sub
mov
aaa
xor
add
adc
imul
mov
mov
add
add
jge
mov
loop
add
add
mov
(bad)
test
stc
inc
add
int3
fadd
add
or
mov
mov
imul
add
add
(bad)
and
mov
jmp
push
imul
add
inc
scas
sbb
mov
pop
and
mov
add
in
xchg
xor
add
push
test
add
jno
jo
and
add
add
mov
add
add
mov
sub
mov
xchg
add
ja
retfw
pop
add
jmp
cmp
add
hlt
pop
outs
call
mov
(bad)
mov
shl
add
lahf
mov
test
test
mov
aaa
add
mov
fldenv
dec
add
imul
fidivr
imul
dec
aad
stc
add
push
pop
int3
mov
and
add
add
test
add
and
mov
add
repnz
add
mov
(bad)
and
cmp
add
retf
or
add
sub
pop
test
and
mov
mov
add
mov
xchg
add
pop
dec
ficom
mov
(bad)
dec
(bad)
stc
scas
add
add
push
and
and
ja
shl
xor
add
repnz
pop
cmp
mov
test
sub
mov
bswap
dec
add
and
test
mov
add
ffreep
jge
scas
imul
cwde
cmp
fiadd
add
mov
add
mov
dec
nop
add
add
mov
fistp
mov
and
add
add
sbb
add
loop
add
mov
or
add
sub
mov
test
add
imul
test
add
add
mov
mov
mov
mov
fld
add
add
test
popf
add
sub
pop
mov
mov
cmp
pop
add
add
out
add
inc
in
cmc
mov
and
add
and
push
fidivr
and
mov
add
imul
test
fcomp
add
mov
mov
aam
push
mov
mov
imul
mov
mov
cdq
cmc
push
inc
and
test
add
add
pop
add
mov
add
add
jnp
and
lods
mov
add
add
add
dec
add
sub
aas
sub
lahf
test
add
pushf
cmp
mov
mov
add
sub
sub
sbb
cmp
add
add
add
add
cmp
add
push
dec
jne
adc
pop
mov
add
mov
add
sbb
inc
and
test
rol
and
mov
sub
mov
sbb
loop
add
mov
jecxz
and
clc
inc
imul
cvtps2pd
add
add
add
add
sbb
sub
mov
jmp
mov
sub
into
inc
and
(bad)
out
add
cmp
aas
and
add
add
sub
push
in
test
fiadd
add
push
mov
(bad)
stc
add
mov
sbb
add
jmp
mov
add
pop
test
inc
and
bsf
add
out
mov
aam
and
jb
inc
and
je
int
fidivr
or
imul
xchg
mov
aaa
test
(bad)
add
jmp
jmp
mov
cmp
repnz
add
sbb
add
jbe
add
sub
mov
rol
or
or
jnp
mov
xor
mov
ja
js
add
jnp
mov
dec
stc
out
add
mov
mov
add
(bad)
xchg
sub
add
mov
imul
and
mov
jo
and
inc
add
mov
add
add
and
jp
and
add
mov
add
add
movs
fistp
mov
and
int3
pusha
inc
imul
leave
mov
and
rol
and
ret
repz
mov
add
hlt
out
add
test
fstp
add
dec
aam
jmp
mov
int3
add
imul
and
ss
imul
dec
mov
fidivr
mov
and
fadd
add
hlt
xor
inc
add
rol
in
add
test
add
rol
and
add
push
xchg
lahf
sub
mov
jns
and
add
add
mov
adc
xor
add
loop
inc
or
inc
mov
add
add
ficom
inc
dec
sub
cmps
in
sbb
mov
mov
and
cmp
arpl
add
xor
add
int
fidivr
adc
cmp
sti
aam
jmp
cdq
or
dec
adc
out
stc
int3
std
and
add
and
out
icebp
into
mov
imul
ja
add
je
add
add
mov
shr
xor
xor
ror
mov
add
or
add
add
imul
add
mov
ins
in
add
sub
adc
rol
sub
aam
jmp
lea
add
scas
and
add
add
mov
and
out
add
add
pop
mov
and
add
movs
(bad)
or
(bad)
scas
out
jae
mov
add
push
and
loope
and
call
push
test
inc
lea
outs
or
fidiv
mov
imul
movs
cmps
jo
add
jb
jo
iret
test
sbb
mov
sbb
mov
add
imul
add
aas
sub
xor
or
add
mov
adc
mov
add
add
mov
push
cli
add
add
jmp
adc
mov
add
fld
out
mov
call
mov
mov
cmp
mov
add
aas
and
add
mov
pop
cmc
add
add
dec
pop
sub
jecxz
and
add
neg
cmovne
mov
jmp
std
repz
jecxz
mov
sti
aam
jmp
mov
loopne
and
add
shr
jge
add
add
or
sub
add
add
mov
std
retf
clc
inc
imul
add
jmp
fild
ror
push
cmps
cli
push
add
sbb
add
cmp
add
sub
mov
test
mov
mov
push
push
and
call
psubw
or
mov
add
mov
jge
adc
add
out
mov
cmps
add
add
sti
movs
jmp
mov
or
mov
add
inc
sbb
imul
add
mov
add
mov
add
daa
and
jbe
loop
test
xchg
aas
sub
and
mov
add
push
ja
dec
mov
ds
mov
add
imul
push
adc
add
pop
fwait
cmp
iret
clc
inc
add
loope
popf
jo
push
inc
add
rol
and
mov
repnz
ja
mov
jmp
lea
test
jmp
leave
or
retf
and
inc
add
xchg
xor
add
mov
sub
(bad)
icebp
fiadd
cmp
dec
rol
retf
fld
add
cmc
xor
add
pop
lock
jae
mov
rol
add
sbb
add
sar
mov
push
daa
jmp
and
add
shr
xor
(bad)
call
test
(bad)
jns
mov
test
cmp
(bad)
mov
mov
imul
mov
push
jbe
mov
data16
cmp
imul
loop
jne
lods
fmul
sar
stos
mov
dec
mov
sbb
add
iret
mov
add
sub
mov
mov
mov
mov
and
scas
sar
mov
dec
add
and
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
dec
push
adc
or
frstor
sub
add
data16
sbb
push
call
add
in
mov
add
test
add
add
fadd
add
aam
or
sub
add
loopne
mov
add
repnz
push
add
ins
xchg
cld
sar
add
add
mov
(bad)
pop
aam
add
add
add
mov
imul
add
push
or
push
mov
es
sar
add
push
arpl
add
push
jo
les
add
jg
jmp
arpl
sub
jbe
rcr
push
cmp
lock
mov
repnz
ficomp
sar
in
pop
ret
add
add
mov
fnstsw
mov
xor
add
jg
mov
mov
xor
add
sub
mov
out
fstp
lock
jbe
or
loopne
add
add
mov
dec
xchg
inc
mov
cwde
jmp
inc
or
push
aam
(bad)
lock
aam
mov
mov
add
add
call
add
and
rol
add
dec
sub
mov
movq
sub
jmp
das
aam
loopne
mov
call
test
mov
push
das
cli
push
add
add
add
mov
repnz
sub
mov
minps
add
jmp
mov
out
add
mov
mov
add
out
dec
test
bnd
push
add
add
sub
mov
fidiv
(bad)
dec
or
add
add
add
mov
lock
fnstcw
lods
sub
add
(bad)
repz
movs
add
arpl
fidiv
(bad)
in
sub
mov
jo
lock
pcmpeqd
or
sub
add
add
mov
sub
mov
jg
jmp
mov
loopne
add
cmc
out
inc
aaa
mov
repnz
(bad)
cmp
mov
add
mov
adc
pop
and
add
push
jg
jmp
dec
test
add
data16
and
sub
ins
xchg
(bad)
test
push
jmp
mov
aam
jp
and
test
movs
push
add
(bad)
push
or
mov
add
shr
cmp
mov
mov
add
jg
jmp
fld
add
(bad)
sub
jbe
and
in
add
dec
xchg
rol
add
add
push
add
or
sub
mov
icebp
pop
in
or
add
cmp
je
mov
stc
add
iret
outs
inc
out
test
test
fld
sar
jmp
mov
add
outs
jnp
or
loopne
inc
adc
repnz
jae
add
mov
(bad)
add
add
jbe
and
add
add
add
mov
sub
jnp
and
add
add
ins
sbb
test
mov
sub
mov
je
add
jg
adc
sub
ret
and
add
add
popa
test
inc
shl
test
retf
fadd
push
je
loopne
add
aam
das
mov
and
rep
add
(bad)
add
add
mov
popa
and
cmp
add
push
je
cmp
add
es
data16
outs
or
movs
fld
call
add
mov
xor
xor
mov
add
iret
addr16
out
test
les
add
shr
int3
or
push
mov
and
add
lock
out
mov
add
add
pop
sar
add
mov
cmc
das
lods
fisttp
repnz
aam
out
(bad)
cmp
in
push
cmp
add
fsubr
mov
test
add
add
das
test
call
jnp
ins
test
(bad)
add
pop
sahf
xlat
add
sbb
icebp
sub
dec
loop
adc
cdq
ret
mov
(bad)
in
jg
xor
add
mov
sub
jnp
and
add
add
xor
jg
add
test
fcomp
cvtps2pd
jo
or
std
(bad)
and
inc
pop
test
add
lea
mov
icebp
add
paddq
or
add
push
loopne
in
test
movs
add
sub
sub
pshufw
push
cmp
ret
and
f2xm1
push
sub
out
jbe
cmp
push
add
adc
in
add
mov
fdiv
mov
mov
test
repnz
(bad)
add
add
pop
jnp
add
popa
jg
test
add
push
je
jmp
jns
and
movs
add
cmp
and
test
sub
add
jno
jmp
mov
adc
add
outs
push
cmps
stos
dec
test
add
add
and
pop
call
rol
je
shl
push
add
push
je
and
add
outs
loope
data16
movs
push
call
pop
in
cmp
mov
test
add
test
or
add
push
out
mov
loopne
movs
add
mov
jg
jmp
push
test
adc
add
sbb
out
test
mov
ins
and
aad
add
ret
inc
pop
sub
mov
int3
icebp
push
add
(bad)
fisubr
add
sub
repnz
mov
outs
mov
in
push
xor
or
fcomp
fild
push
stc
mov
ret
popf
popf
adc
(bad)
and
add
jmp
mov
sub
mov
add
push
imul
(bad)
lahf
push
add
das
test
push
add
sub
mov
lock
add
cmp
add
stc
add
dec
test
add
movs
pop
test
or
add
outs
test
loopne
add
sub
mov
push
add
jg
jmp
dec
loop
adc
movs
push
sub
mov
je
jmp
push
je
mov
sub
int
mov
or
test
push
push
add
jg
jmp
mov
out
cmp
add
jns
and
sub
add
fs
lds
sbb
push
add
fidiv
add
add
mov
in
add
cmp
(bad)
sbb
add
push
mov
int
jno
into
mov
je
jmp
mov
add
jo
(bad)
in
add
imul
call
test
add
in
mov
test
fadd
lock
repz
jmp
dec
loop
loopne
push
add
mov
fadd
add
minps
jmp
add
add
add
add
lock
cwde
xchg
mov
imul
sub
xor
in
sub
dec
test
add
fdivr
fbld
add
stc
jmp
dec
test
add
sub
ja
mov
out
xlat
or
add
sti
(bad)
inc
outs
mov
aad
jo
push
test
int3
add
montmul
cmps
ret
ret
jmp
mov
sub
mov
sub
test
arpl
add
je
sub
loopne
fist
mov
and
push
add
cvtps2pi
add
rcl
in
add
mov
fsubr
jo
(bad)
rol
add
and
mov
add
mov
icebp
dec
clc
pop
mov
loopne
add
(bad)
loope
data16
movs
push
add
mov
sub
mov
punpcklwd
push
add
jp
(bad)
jnp
fucom
sub
ret
xchg
adc
mov
mov
inc
add
cmp
cld
loopne
lock
aam
or
mov
data16
call
jmp
sbb
ret
fadd
cmc
adc
push
add
sub
(bad)
and
add
jmp
mov
loopne
add
ja
and
add
add
test
push
cmp
add
and
push
stc
sub
mov
and
movs
push
add
sub
jmp
mov
cmp
add
cmp
dec
test
repnz
push
(bad)
addr16
cld
in
mov
and
f2xm1
add
imul
pop
addr16
add
add
add
adc
mov
and
sub
out
test
add
repz
sub
pop
in
add
jne
dec
xchg
add
add
(bad)
and
fdiv
mov
mov
ret
cmc
jp
fwait
mov
nop
add
add
add
add
sub
mov
clc
mov
add
pop
(bad)
and
sub
jmp
dec
loop
loopne
push
add
jbe
(bad)
jp
mov
add
lock
pop
cmp
lock
jb
or
out
push
pop
or
push
add
out
add
add
add
lock
sub
mov
je
add
mov
fidiv
(bad)
in
and
inc
cld
jl
aam
add
stc
jmp
mov
adc
add
sub
mov
je
jmp
mov
fsubr
mov
je
test
outs
add
jmp
mov
(bad)
cld
xchg
jo
pop
xor
into
add
loopne
test
add
sub
xchg
sbb
test
or
add
sbb
add
test
sub
mov
out
test
movs
push
add
arpl
rol
fisubr
jns
fs
xor
add
push
mov
loopne
add
dec
add
mov
ins
pop
push
add
pop
retf
rol
add
loopne
cmp
outs
repz
and
imul
(bad)
mov
repnz
mov
and
add
add
mov
jmp
dec
f2xm1
push
jb
or
sub
mov
std
test
add
jmp
mov
adc
jb
xor
aam
imul
sbb
movs
add
add
sub
pop
inc
and
je
jmp
push
test
adc
add
sub
mov
out
inc
add
bnd
arpl
(bad)
add
add
mov
dec
add
add
push
ret
fadd
push
test
loopne
add
sub
jo
and
pcmpgtb
rep
push
call
add
jmp
mov
loopne
test
add
stc
add
mov
int
int3
data16
jnp
and
je
jmp
jne
and
add
dec
in
jmp
call
add
mov
dec
test
add
repnz
inc
mov
xor
push
cmps
add
in
mov
cmp
cmp
push
add
mov
je
(bad)
sahf
add
rol
jmp
xchg
je
xor
push
add
and
add
ret
cmp
paddq
add
add
loopne
add
sub
mov
add
ret
mov
sub
fld
(bad)
pop
rol
jmp
jmp
mov
popa
adc
and
jb
les
shl
stos
call
inc
adc
push
add
push
or
add
push
jns
mov
(bad)
loope
add
and
add
ficomp
mov
inc
mov
or
ret
push
and
add
add
inc
pop
js
lods
pop
ret
xchg
xor
push
mov
ins
test
fld
add
xor
mov
mov
js
and
add
test
lods
inc
aas
pop
jnp
jmp
(bad)
dec
adc
les
add
jmp
push
cwde
mov
mov
jnp
and
in
(bad)
push
dec
add
jmp
xchg
jge
add
add
out
aaa
inc
xchg
mov
shr
add
aam
fcmovnu
lock
imul
lock
add
add
add
cmp
pop
fucomi
or
ret
clc
or
add
jno
add
sub
xchg
and
out
add
repnz
add
jmp
mov
inc
(bad)
inc
jo
pop
xchg
fld
ret
dec
cld
mov
jmp
jp
or
cwde
jecxz
xchg
xchg
add
ror
dec
mov
pop
or
add
xlat
mov
mov
in
loopne
(bad)
in
repnz
push
je
jmp
jecxz
cmp
rol
pop
aam
add
stc
(bad)
pop
(bad)
cmp
push
call
add
cmp
mov
mov
push
add
and
add
sub
add
jae
push
add
mov
cmp
jmp
sub
add
add
movs
add
gs
sbb
add
mov
mov
loopne
pusha
jmp
(bad)
fnstsw
sbb
add
mov
in
inc
or
push
add
mov
push
inc
stos
mov
and
add
add
sub
add
mov
push
add
mov
add
dec
add
call
mov
mov
and
jmp
and
add
add
mov
sbb
ret
dec
ret
push
mov
cs
ret
and
add
movs
jmp
inc
pop
pop
sub
xor
test
add
ret
popf
sar
sbb
mov
ins
outs
and
in
add
pop
stos
add
rcr
add
mov
clc
adc
add
add
add
call
add
mov
mov
jne
fcomi
or
cmp
repnz
push
mov
in
data16
add
sub
out
xchg
dec
push
cld
adc
add
adc
add
test
add
add
nop
push
call
inc
add
jno
mov
and
cmovne
mov
sub
add
mov
mov
mov
clc
add
add
mov
and
and
inc
add
call
test
(bad)
cmp
ret
cld
adc
add
mov
and
add
stc
sub
imul
das
test
call
jmp
xchg
call
mov
mov
fnstcw
lds
add
mov
in
add
leave
and
jmp
pop
and
add
in
jl
cmp
imul
test
add
sub
imul
add
mov
and
add
movs
mov
fstp
add
add
cli
inc
or
fadd
mov
inc
xor
pop
repnz
push
add
jge
and
add
in
mov
ret
add
add
jmp
mov
add
add
push
cmovne
sub
in
sar
jmp
mov
xchg
jge
in
ret
sub
(bad)
sbb
cmps
push
call
ror
in
mov
and
rcr
mov
aam
mov
add
movs
and
add
add
inc
(bad)
mov
jmp
xor
and
add
shl
loope
add
mov
lea
xor
push
stc
mov
mov
xor
call
mov
sar
adc
js
push
mov
enter
fadd
fdiv
pop
inc
retf
(bad)
add
loopne
popf
add
add
add
dec
int3
in
add
mov
or
mov
sub
and
icebp
push
stc
jmp
jp
int3
xchg
std
(bad)
aam
and
call
add
in
jmp
mov
sub
repnz
xchg
test
inc
inc
rcl
idiv
ret
pop
mov
or
(bad)
out
repnz
mov
arpl
fiadd
add
cmp
mov
jnp
fld
sub
ret
test
movs
(bad)
pop
jnp
in
push
add
nop
add
add
inc
clc
cmp
lock
mov
loopne
(bad)
loop
push
add
movs
fist
add
add
pop
test
in
push
add
mov
or
and
add
loopne
shl
cmps
jae
inc
call
jb
movs
rcr
icebp
or
cmp
add
fcomp
sbb
add
out
fs
add
inc
cmps
or
dec
(bad)
add
test
add
add
icebp
ret
test
cmp
add
es
sahf
xlat
or
repnz
fld
dec
icebp
add
add
mov
and
add
add
add
mov
sbb
add
movs
fld
add
pop
mov
jnp
adc
add
lock
jge
int
add
mov
mov
jmp
(bad)
jp
fild
in
ret
inc
inc
and
f2xm1
push
mov
and
(bad)
adc
add
add
out
add
cld
clc
push
stc
sub
test
repnz
outs
mov
add
inc
push
fcmovnb
add
cmp
(bad)
pop
and
icebp
push
add
xchg
arpl
gs
add
add
mov
push
test
call
mov
leave
test
ret
add
inc
push
inc
stos
jmp
fild
mov
jb
add
jbe
inc
or
add
rol
clc
and
add
fstp
adc
add
mov
add
loop
test
mov
mov
sbb
ret
fst
and
sti
add
out
test
loope
ret
and
add
dec
xor
and
cld
add
jbe
lea
aad
add
mov
mov
push
stc
add
mov
push
mov
push
and
add
(bad)
cmp
push
add
cwde
and
xor
stc
add
test
add
movs
add
test
add
add
sub
jmp
test
add
fadd
lock
jge
add
add
in
jbe
add
call
add
push
add
test
in
add
pop
gs
aas
jmp
mov
mov
add
dec
movs
sub
jnp
or
xor
shl
rcr
ret
test
add
add
or
add
(bad)
lods
and
loope
add
mov
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
int
adc
dec
xchg
mov
aam
xor
mov
inc
xchg
mov
xchg
push
dec
into
xchg
add
(bad)
clc
mov
adc
add
jg
ret
add
add
lea
(bad)
test
add
adc
push
sbb
int
add
inc
push
cmps
in
add
fiadd
add
nop
add
add
add
xor
sbb
(bad)
xor
add
jmp
mov
imul
add
push
or
in
add
setnp
popf
add
(bad)
xchg
and
pop
add
mov
add
add
jmp
add
and
mov
movs
xchg
and
add
nop
nop
sbb
cmp
add
sub
mov
pcmpgtd
add
in
inc
add
adc
and
pop
add
pop
pop
dec
sbb
and
or
cmp
add
mov
add
add
mov
mov
fisub
bound
lods
or
or
int3
mov
je
jns
or
adc
xchg
stos
mov
sbb
shr
ins
and
add
add
shl
add
jnp
fimul
mov
add
mov
inc
add
aad
str
add
push
lock
mov
mov
jg
clc
add
pop
adc
sbb
loop
pusha
mov
test
or
add
add
xlat
sahf
sbb
test
add
jg
cmps
retf
test
mov
add
pusha
sbb
add
fisub
sub
or
mov
mov
lock
or
add
call
mov
mov
pcmpgtd
xor
and
add
sub
mov
mov
(bad)
test
and
mov
mov
rcr
add
jg
je
add
fwait
or
add
add
test
ret
sbb
jmp
mov
sub
retf
test
push
add
add
jmp
mov
sub
mov
sbb
ror
inc
add
add
add
add
add
test
add
inc
inc
or
add
add
and
add
imul
dec
xor
adc
(bad)
pop
sbb
add
xchg
aad
ror
jmp
mov
mov
bswap
or
add
mov
xor
add
add
mov
or
cmp
jg
fimul
inc
mov
sub
mov
add
add
or
sbb
push
and
add
add
sub
mov
xchg
jg
jmp
mov
add
mov
pop
(bad)
int3
dec
sbb
jmp
mov
bound
test
jl
jg
dec
(bad)
and
add
mov
pushf
jne
add
add
mov
je
jmp
int
mov
add
pop
sub
retf
pushf
and
and
cmp
dec
and
push
or
pop
add
mov
xor
add
pop
add
rol
bound
sub
mov
ins
adc
and
jg
call
call
sub
mov
and
sbb
je
shl
push
and
add
add
mov
push
(bad)
push
pop
adc
jmp
mov
and
loopne
inc
push
and
fisttp
pop
add
add
add
add
popf
sub
mov
pmaxub
or
cmp
add
dec
add
and
add
sbb
test
pop
xchg
popf
adc
mov
push
and
mov
icebp
xlat
pop
or
add
lahf
(bad)
in
pop
pop
adc
add
mov
and
add
or
pushf
mov
(bad)
and
mov
inc
add
nop
push
test
add
pop
sub
mov
push
add
push
shld
add
jmp
mov
imul
ins
cmps
popf
test
inc
add
jg
mov
adc
mov
test
push
add
sub
mov
imul
mov
jg
call
mov
xor
sub
retf
test
add
add
cs
add
dec
add
add
mov
mov
je
stc
aad
sbb
fisub
sub
(bad)
dec
and
xchg
sbb
fwait
pop
add
add
push
test
adc
pop
cmp
mov
je
in
or
add
add
sub
mov
mov
adc
add
add
nop
push
xchg
and
adc
repz
ins
and
add
movhps
fimul
add
test
sub
mov
das
(bad)
cs
add
int3
mov
movs
dec
retf
(bad)
mov
test
xchg
add
xchg
test
in
sbb
fiadd
sub
mov
and
xchg
add
add
std
jg
inc
add
add
sub
mov
psubusw
or
add
imul
lock
add
mov
out
and
add
ror
add
sbb
cmp
test
psubusw
or
add
mov
add
mov
xor
inc
add
(bad)
and
nop
add
popf
add
add
mov
sub
retf
pushf
jne
or
cmp
sahf
(bad)
xchg
add
push
mov
test
add
add
aam
and
add
inc
jg
jmp
mov
sub
push
test
add
or
xchg
popf
adc
xchg
and
add
sbb
push
and
add
(bad)
cs
add
lock
mov
pop
jg
rcr
and
add
adc
(bad)
dec
add
jmp
mov
sub
sbb
jg
jmp
mov
cmp
inc
pop
(bad)
sbb
test
add
leave
xor
add
bound
mov
mov
jg
jns
add
add
xchg
and
inc
add
sub
test
add
bswap
cmp
add
fimul
jle
add
mov
xor
add
jg
mov
mov
pop
sbb
mov
mov
cmps
mov
cmpps
add
(bad)
pop
adc
mov
sub
mov
jg
cmps
add
add
fild
mov
mov
test
xchg
mov
add
mov
add
cmp
(bad)
jmp
(bad)
rol
and
add
add
add
mov
loope
adc
enter
fldl2t
add
inc
dec
mov
add
xchg
lea
add
add
sub
mov
lahf
adc
add
stc
mov
add
test
in
and
add
jg
add
pop
lock
add
sub
mov
push
adc
add
and
mov
jmp
mov
sub
test
dec
add
test
or
xchg
jmp
mov
lock
adc
sub
add
add
pushf
and
add
add
test
add
je
cmps
push
add
add
test
add
xlat
fisttp
add
push
(bad)
mov
popf
add
adc
add
mov
and
pop
inc
sub
mov
xor
add
xchg
add
add
fimul
lods
mov
push
lahf
lods
add
inc
jmp
mov
sub
sbb
mov
or
jmp
push
test
add
add
mov
xor
add
add
(bad)
and
mov
stos
add
push
add
cmp
or
imul
push
or
fild
add
test
adc
test
and
add
and
mov
add
(bad)
out
add
adc
mov
mov
mov
je
jmp
mov
imul
add
loope
test
inc
add
pop
add
add
mov
mov
sub
mov
add
dec
push
add
and
push
or
pop
add
mov
push
(bad)
xor
push
and
mov
sub
(bad)
dec
and
add
xchg
dec
add
mov
ins
add
add
dec
adc
add
add
ror
add
add
add
mov
je
je
add
add
add
sub
xchg
test
add
or
dec
int3
jnp
add
add
jg
imul
mov
adc
jns
add
add
cmp
sbb
sub
test
test
add
pop
adc
add
add
fmul
pusha
inc
and
bswap
fwait
fwait
add
mov
add
inc
add
or
test
mov
inc
icebp
ins
add
mov
add
aas
add
sbb
push
add
add
add
sub
pop
push
and
je
jmp
mov
loope
scas
pushf
pop
or
sbb
es
add
call
mov
sub
xchg
adc
jmp
call
retf
and
int
xchg
scas
sub
and
sbb
ret
add
out
add
mov
sub
mov
je
jmp
mov
bound
push
sub
(bad)
(bad)
push
xchg
test
add
add
sub
mov
dec
pushf
or
add
jl
add
dec
mov
fisttp
dec
xor
inc
and
add
adc
fwait
test
inc
sbb
xor
add
inc
imul
ja
sbb
xlat
adc
(bad)
lock
add
cwde
sbb
je
jmp
mov
(bad)
jmp
inc
aad
xlat
jp
add
mov
xchg
and
add
sub
xchg
inc
and
pmullw
and
in
cmp
mov
sub
mov
cmp
xor
add
adc
push
and
mov
and
je
xor
add
test
mov
retf
pop
mov
data16
test
push
add
jmp
mov
sub
mov
sysret
rol
add
add
add
mov
cdq
retf
setl
push
and
in
add
cmp
add
dec
mov
jo
rol
add
cld
add
loopne
mov
sub
mov
je
jmp
mov
sub
iret
inc
and
je
jns
popf
add
mov
add
pop
inc
sub
pmullw
cmp
add
int3
add
mov
je
xchg
inc
add
add
jmp
popf
adc
sub
sub
leave
xchg
xchg
jne
add
or
dec
add
(bad)
inc
mov
jmp
sub
fistp
mov
and
and
add
xor
call
xchg
mov
add
xor
cdq
arpl
icebp
fdiv
out
jno
out
xchg
add
inc
sub
xchg
xor
push
add
xor
push
inc
(bad)
mov
and
clc
popa
push
add
mov
fwait
mov
mov
or
add
pop
into
ds
add
stos
or
test
add
jmp
mov
rol
pop
stos
and
push
and
mov
jmp
(bad)
fstp
or
lahf
mov
jge
add
inc
cdq
add
add
push
mov
shl
pop
and
add
ss
mov
test
leave
mov
add
or
add
jo
hlt
add
fisub
add
inc
popa
fdivr
push
xchg
xor
cmp
pop
ins
int3
pusha
mov
add
xchg
add
ror
pop
mov
bound
add
add
pop
pop
ret
test
sbb
push
leave
imul
inc
in
mov
mov
add
cli
push
add
mov
clc
sbb
lahf
movq
stos
xchg
sub
jmp
add
add
dec
rol
and
inc
add
call
mov
mov
mov
mov
add
add
inc
dec
or
add
mov
xchg
inc
mov
test
mov
add
sldt
cmp
cmovl
fisttp
jg
mov
in
xchg
addr16
leave
mov
psubsw
xor
test
mov
inc
add
cdq
add
mov
mov
jmp
cmp
xor
mov
xor
ret
push
push
sbb
inc
add
sbb
test
and
add
fisttp
je
push
add
add
cmp
and
pop
adc
addr16
add
add
xchg
test
add
or
mov
xchg
jmp
sar
and
add
sbb
inc
adc
add
mov
add
add
add
xor
or
jg
add
add
sbb
jmp
mov
jmp
je
stos
mov
loopne
add
jmp
mov
mov
and
sbb
add
call
test
or
add
test
and
dec
test
mov
nop
jg
pusha
int3
stc
pop
add
inc
mov
test
add
add
test
ret
pop
and
add
adc
inc
add
sbb
jmp
mov
jmp
mov
mov
jnp
add
add
mov
and
fisttp
or
inc
add
and
pop
adc
add
push
and
pusha
out
pushf
and
int
xchg
or
iret
push
xchg
adc
dec
push
call
dec
ret
xchg
shl
add
add
add
jns
add
adc
cmp
iret
fisttp
mov
add
jmp
dec
cmp
add
and
add
jmp
(bad)
fnstenv
inc
add
jmp
scas
jmp
test
hlt
add
cmp
nop
sbb
fst
hlt
add
add
mov
jg
mov
mov
pop
add
mov
data16
push
add
push
test
mov
data16
jmp
add
stc
pop
mov
jmp
mov
jmp
mov
mov
adc
xor
mov
add
add
icebp
cld
cmp
clc
call
imul
xchg
xor
mov
mov
add
cmp
pop
jmp
adc
test
jmp
add
outs
sar
bound
popf
adc
aam
xor
add
jmp
out
and
cmp
add
and
jmp
(bad)
pop
bound
hlt
xchg
popf
add
mov
icebp
retf
xchg
mov
add
and
add
and
add
fucompp
pushf
add
mov
popf
adc
gs
dec
rcr
pop
fcmovnu
movs
sub
add
dec
inc
dec
fwait
or
or
add
add
add
add
or
int
(bad)
fnstenv
add
add
push
clc
jmp
retf
mov
jg
sbb
fadd
add
rol
add
nop
popf
(bad)
test
adc
mov
cmp
jmp
xor
mov
test
add
imul
mov
mov
jnp
add
sbb
add
sub
add
add
adc
test
xor
xchg
dec
jmp
fwait
xor
imul
sbb
xchg
xor
add
jg
push
inc
mov
pop
fwait
xor
add
inc
add
test
adc
pop
rcr
ror
call
sub
mov
pop
cdq
inc
stos
adc
mov
add
inc
mov
nop
sbb
inc
lea
add
add
jmp
mov
les
add
mov
mov
push
test
add
add
push
mov
stos
add
(bad)
mov
add
xchg
sbb
mov
je
add
(bad)
or
add
add
xchg
add
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
aam
adc
or
or
xchg
ror
inc
add
inc
and
add
add
sub
jne
xchg
sub
adc
sub
xchg
mov
aaa
jmp
add
mov
mov
add
add
mov
push
add
add
jae
test
imul
std
add
mov
neg
pop
mov
mov
icebp
in
pop
out
mul
or
add
ins
add
inc
add
je
sub
mov
mov
fs
repnz
cmps
xchg
add
cmp
inc
mov
and
aad
out
adc
and
mov
pushf
bound
add
add
aam
and
add
and
jg
leave
add
add
add
sub
mov
jg
jmp
mov
sub
mov
or
jmp
stc
add
cmps
add
(bad)
clc
add
add
mov
psrlw
add
add
add
test
mov
fadd
loopne
push
shl
fs
lahf
add
add
test
js
mov
int3
and
fimul
jmp
push
test
or
sub
mov
loop
js
pop
or
fs
std
add
rol
test
fsubr
add
mov
xchg
add
add
and
pop
add
fs
pop
and
cmc
rcr
inc
push
pop
add
add
add
add
sbb
add
test
cld
xchg
in
out
(bad)
or
add
jmp
mov
sub
add
xor
(bad)
mov
scas
and
aad
pop
add
clc
and
and
add
or
and
dec
and
add
add
mov
add
add
add
add
jno
addr16
test
add
add
(bad)
and
add
leave
inc
add
mov
retf
rcl
mov
or
je
jmp
mov
add
fwait
jno
mov
add
(bad)
clc
and
jmp
pop
test
clc
add
add
jb
dec
test
(bad)
and
add
test
add
add
pop
xchg
sub
mov
out
add
and
inc
jmp
mov
clc
add
mov
std
js
pushf
add
sldt
mov
sldt
out
test
add
std
sub
mov
imul
inc
add
mov
pop
out
mov
push
mov
xchg
add
or
test
add
jmp
mov
sub
mov
das
(bad)
and
aad
add
add
jae
and
test
add
retf
mov
mov
add
out
test
or
pop
jmp
adc
imul
fld
mov
or
add
add
add
das
mov
aaa
scas
(bad)
enter
dec
or
add
test
data16
add
xchg
sub
push
movs
fiadd
aad
or
scas
add
jmp
add
iret
repnz
dec
jnp
add
and
xchg
add
inc
add
push
adc
mov
emms
and
scas
sub
test
add
mov
sub
inc
inc
sub
add
inc
dec
mov
add
dec
add
ja
ja
add
test
into
lock
add
repnz
dec
and
je
lea
(bad)
clc
xchg
rol
mul
sub
mul
or
test
lods
je
xchg
in
mov
into
add
sub
mov
imul
add
std
cmps
out
add
and
sub
mov
sub
add
test
add
add
imul
jmp
pop
test
fadd
add
sbb
scas
std
mov
xchg
add
add
scas
sub
add
add
and
inc
and
pcmpgtb
add
pop
in
lahf
std
add
test
sub
xlat
xchg
and
jae
jmp
mov
shl
xor
jmp
inc
and
push
test
inc
sahf
add
jbe
(bad)
clc
add
mov
dec
aam
out
inc
pop
cmp
out
add
and
test
add
push
push
mov
test
add
add
test
mov
add
test
pop
aad
psllq
clc
add
add
inc
jne
and
loop
invd
pop
or
fadd
add
out
test
bound
push
loop
inc
and
je
jmp
mov
sub
mov
je
loopne
add
pop
xchg
sub
and
cwde
test
add
leave
(bad)
pop
add
pop
add
add
add
mov
test
add
jmp
sbb
sbb
add
sub
mov
je
in
add
add
test
fdiv
shld
add
jmp
mov
cmp
push
fmul
test
out
loopne
daa
adc
pop
add
std
dec
test
cmp
scas
mov
aas
inc
add
jmp
jmp
mov
mov
mov
rol
inc
shl
cld
xchg
in
add
dec
int
or
add
mov
mov
(bad)
call
aam
mov
mov
pop
je
sbb
and
inc
retf
and
add
add
sbb
neg
mov
jmp
add
add
cmp
cmove
std
dec
test
fstp
mov
cld
scas
sub
jmp
std
int
(bad)
adc
add
add
fnstenv
(bad)
inc
cdq
test
cld
add
add
mov
clc
add
cmp
out
xor
loopne
add
in
add
add
inc
ror
pop
in
add
add
mov
and
add
add
sub
fild
inc
enter
inc
pop
pop
and
clc
scas
mov
inc
inc
jae
xchg
add
adc
sub
mov
mov
jae
mov
ror
sahf
jmp
out
cmp
scas
add
add
(bad)
or
or
cmps
push
add
mov
add
add
inc
and
mov
mov
call
mov
cmp
ficom
mov
mov
jmp
pop
jmp
xchg
or
out
or
pop
add
add
lea
movs
fs
pop
aad
jmp
pop
cmp
test
int3
test
add
add
sbb
add
dec
push
sbb
jmp
pop
test
mov
xchg
add
addr16
mov
fild
mov
mov
sti
out
add
aam
test
mov
sahf
mov
xchg
in
add
movs
add
add
test
add
or
xor
or
ds
std
add
cmp
test
add
add
dec
add
add
xlat
push
and
pop
out
inc
adc
outs
in
add
lea
clc
in
add
icebp
rcr
test
daa
add
and
pop
dec
mov
mov
into
loopne
add
xchg
add
add
mov
mov
mov
mov
fwait
dec
jle
inc
mov
push
test
xlat
add
add
pop
out
(bad)
clc
add
or
inc
push
xor
jmp
mov
or
loopne
inc
gs
push
add
ret
mov
add
test
push
test
fadd
aad
popa
cmp
add
push
add
add
add
add
mov
mov
and
sub
into
adc
adc
sbb
cld
add
xor
inc
and
xor
inc
add
add
cli
rcr
ret
inc
add
lock
cld
xchg
add
mov
xor
add
xchg
mov
les
and
mov
shl
or
jl
daa
add
test
test
cld
inc
add
test
or
data16
push
mov
push
push
push
and
sub
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
mov
adc
mov
hlt
rcl
or
pop
and
jg
add
test
add
lds
(bad)
xchg
jnp
xor
add
test
mov
and
fld
fcmovnb
test
mov
sbb
and
xor
mov
dec
mov
gs
mov
sub
and
and
das
add
mov
add
je
add
push
fadd
out
add
add
lock
je
test
sbb
add
(bad)
js
add
xchg
add
gs
dec
out
stos
sub
mov
push
inc
add
add
push
mov
cli
mov
es
mov
and
fwait
(bad)
xor
add
add
xchg
test
pop
add
sub
fs
and
jg
jmp
and
and
das
add
sub
xchg
sub
jmp
ins
sti
mov
add
add
(bad)
aas
add
pusha
dec
jle
outs
jmp
mov
sub
repnz
and
and
pop
add
psubq
add
repz
test
mov
bndstx
(bad)
cld
jmp
mov
dec
xchg
mov
leave
nop
jg
jmp
mov
and
das
xor
and
dec
fistp
pop
add
add
hlt
adc
sub
mul
dec
pop
jg
sub
add
stos
mov
and
xor
mov
sbb
stc
pop
scas
adc
mov
sbb
fld
xor
cld
add
mov
mov
jg
dec
cdq
cld
adc
pcmpeqb
add
add
add
stos
jnp
test
xchg
sub
push
mov
add
add
jg
or
mov
shl
retf
dec
fild
cmp
lock
add
sub
mov
inc
je
adc
add
mov
mov
add
sub
dec
stc
fwait
repz
add
jmp
mov
inc
sub
iret
fs
and
retf
jp
das
jmp
mov
(bad)
xchg
mov
add
bound
(bad)
sbb
mov
jg
dec
hlt
popf
sub
fs
and
inc
stos
jnp
(bad)
jmp
mov
add
and
mov
push
pop
test
add
jmp
sbb
sbb
add
dec
(bad)
aas
add
test
(bad)
jmp
mov
and
add
add
inc
mov
or
call
xchg
add
test
mov
add
and
jmp
test
ins
out
sar
out
in
add
in
sub
and
and
adc
add
jo
jae
add
jg
test
imul
test
in
add
add
and
sbb
out
sub
out
leave
call
jnp
fistp
add
add
sti
es
mov
sbb
test
out
add
add
fnstsw
and
je
push
and
out
stos
cli
cli
add
xor
psadbw
jae
fild
mov
test
nop
add
cld
nop
stos
and
call
mov
mov
out
cdq
aam
cld
(bad)
jmp
push
xor
sti
add
mov
jmp
arpl
hlt
xchg
add
add
fwait
js
in
lock
dec
add
add
add
sti
jmp
mov
sub
push
xchg
and
add
sbb
ret
cmp
add
add
add
lds
outs
das
pop
pop
add
cmc
test
mov
and
out
push
add
test
or
out
add
out
and
add
lock
and
pop
mov
sbb
(bad)
sti
sahf
fisub
imul
add
jmp
mov
outs
mov
mov
add
gs
mov
add
stos
je
(bad)
mov
mov
scas
outs
retf
xchg
adc
mov
mov
arpl
add
xchg
call
imul
shr
add
add
sbb
and
add
add
imul
add
(bad)
push
and
add
sub
inc
mov
add
xchg
mov
mov
cwde
add
stos
lock
and
xor
push
cmp
nop
psubq
pop
cmp
sahf
mov
add
jno
push
vaddsubps
and
jg
add
test
outs
add
retf
cdq
pop
jmp
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repnz
mov
mov
mov
mov
mov
fdivr
and
pop
add
call
and
pop
(bad)
cwde
shl
les
fdiv
std
push
add
jmp
mov
call
and
movzx
lea
mov
mov
push
lahf
inc
test
jl
(bad)
add
mov
loopne
add
mov
enter
inc
js
test
lea
sbb
sub
enter
lods
out
add
(bad)
ds
jns
mov
and
sub
ds
mov
emms
xchg
cmp
ins
sti
add
js
sub
mov
mov
add
leave
sub
add
stos
sbb
in
mov
dec
fs
xchg
mov
xchg
jmp
add
sub
mov
and
mov
into
jmp
clc
inc
add
sub
dec
inc
and
psadbw
imul
popa
add
and
aad
xchg
or
add
add
add
inc
and
sub
add
cld
cmp
add
(bad)
xlat
repnz
and
out
in
push
lock
mov
pop
adc
ins
adc
stos
inc
pop
je
xchg
and
cpuid
rol
push
mov
ds
add
sub
das
add
test
shl
nop
movs
cmp
sub
(bad)
sbb
mov
inc
and
sub
inc
jmp
add
nop
add
add
xchg
dec
push
mov
add
xchg
jmp
mov
mov
mov
aaa
test
in
add
mov
sbb
and
je
xlat
add
add
push
inc
and
cmovb
xlat
add
add
imul
int3
and
sub
mov
and
je
rcr
add
ins
cdq
inc
and
mov
mov
lods
test
into
add
add
mov
xlat
inc
and
add
jg
rcr
jl
cli
imul
retf
dec
ds
and
jmp
mov
in
test
(bad)
jmp
das
rcr
pop
mov
jl
retf
loop
jmp
shl
mov
mov
cmp
js
add
(bad)
ror
add
lea
xor
mov
mov
add
or
cmps
lds
mov
je
jb
xchg
add
push
mov
push
test
mov
inc
and
les
movs
inc
scas
push
dec
mov
mov
and
das
cmps
jns
add
inc
dec
cmps
add
mov
add
and
mov
mov
jmp
dec
cld
js
add
dec
dec
addr16
add
mov
and
mov
mov
mov
mov
call
stos
or
xchg
pop
ins
or
fbstp
xchg
xchg
add
and
lea
pop
addr16
pop
scas
sbb
push
add
inc
cmc
into
(bad)
fnstenv
gs
cld
(bad)
call
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
jmp
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
je
add
xlat
adc
add
lea
(bad)
shl
fld
mov
add
cmps
jle
lock
add
iret
add
scas
mov
sub
(bad)
pop
out
mov
arpl
add
add
xor
(bad)
cmp
je
lahf
add
inc
cmp
add
iret
ds
and
fisttp
je
cmps
and
add
mov
add
push
and
jl
add
and
inc
and
add
push
outs
mov
call
mov
mov
sub
mov
and
jmp
and
add
add
push
rcr
add
and
add
push
xchg
cmps
ds
scas
sub
shl
lds
mov
add
mov
and
jbe
add
(bad)
dec
rol
pop
mov
add
jmp
mov
mov
test
jl
sti
jnp
(bad)
push
outs
add
inc
rol
add
out
add
add
sub
test
push
add
jg
pop
mov
and
add
sub
xchg
test
ret
test
add
je
or
ffree
mov
sub
jmp
jg
imul
iret
mov
test
push
sub
sub
mov
rdmsr
(bad)
btc
mov
out
add
add
jle
mov
lock
add
add
add
mov
mov
test
punpckhbw
fld
sub
mov
lahf
inc
add
test
je
nop
adc
outs
dec
test
ror
and
mov
in
mov
pop
cmps
jle
sti
je
add
cmp
ret
loop
fs
pop
sub
sub
add
push
movzx
movs
jle
sub
mov
add
inc
and
push
je
mov
add
aas
test
je
jmp
mov
fs
add
xchg
and
int
add
add
push
add
mov
cmps
in
mov
xchg
mov
and
movs
add
jg
adc
add
pusha
rol
test
mov
mov
mov
test
sub
add
(bad)
and
or
xor
add
add
loope
mov
call
test
push
fld
mov
add
mov
add
cmp
add
cmps
add
test
stc
add
sub
mov
je
es
and
fisttp
add
test
inc
add
mov
add
cmps
jle
add
add
xor
retf
inc
and
int
mov
test
add
xor
push
je
xchg
sub
mov
inc
adc
cmps
jle
(bad)
push
lahf
add
jmp
dec
dec
xchg
out
fisttp
je
xor
mov
or
add
packsswb
in
outs
loope
cmc
test
adc
es
mov
and
das
fld
ret
mov
add
cmps
jle
mov
call
push
mov
mov
add
xchg
fs
add
mov
jle
add
and
add
jmp
mov
sub
mov
rol
xchg
mov
and
add
cmps
sub
std
sbb
add
add
loope
iret
add
jmp
mov
and
or
add
mov
stos
mov
hlt
ret
out
mov
and
cmp
lds
cmps
push
(bad)
adc
cmp
(bad)
xchg
add
add
sub
ret
pop
leave
iret
push
add
je
xchg
add
mov
sub
mov
call
(bad)
dec
or
add
add
mov
mov
sub
mov
mov
add
add
je
mov
add
out
add
and
loopne
cmps
psllw
or
sti
jmp
xchg
jmp
rcl
repz
test
shl
add
(bad)
cmp
add
push
add
mov
call
jle
sub
push
test
add
jg
jmp
add
adc
add
sub
mov
aam
add
jg
mov
cmps
add
lock
call
sub
cmp
out
jmp
mov
sub
mov
movups
adc
add
rol
add
mov
mov
xchg
mov
add
dec
sub
add
add
mov
sub
xchg
jmp
add
in
ret
xor
and
add
imul
ror
(bad)
pop
sbb
out
add
pop
and
add
add
pop
das
mov
loope
test
add
in
in
add
add
mov
and
add
je
movs
out
add
jmp
mov
rol
mov
add
mov
jg
popf
lahf
push
outs
add
add
sub
std
test
mov
ffree
jg
jmp
mov
mov
push
jmp
iret
mov
add
out
sub
or
inc
and
add
jno
mov
psubq
add
add
test
ror
cs
mov
rsqrtps
retf
jmp
xor
(bad)
add
lahf
fiadd
and
outs
ror
add
jmp
ins
xor
add
arpl
dec
iret
jle
mov
jnp
dec
data16
es
mov
mov
push
je
and
pop
cmc
aas
test
mov
sbb
je
add
add
in
in
int
mov
mov
add
int
cmp
add
pop
mov
test
ret
sti
sub
out
and
add
add
inc
mov
add
je
mov
add
aam
jo
mov
repnz
add
sbb
outs
jmp
inc
test
add
pusha
jle
scas
and
add
fisttp
(bad)
out
add
and
add
add
mov
mov
add
jmp
mov
and
add
add
ret
add
ret
xor
push
loope
jmp
inc
in
rol
dec
mov
jg
ret
add
dec
test
rol
add
sub
das
test
add
jnp
movs
push
add
jmp
xchg
jmp
fld
shl
test
jne
add
(bad)
inc
add
sub
add
fwait
shl
inc
xchg
mov
pcmpeqb
jno
push
xchg
ror
mov
and
push
test
ins
jne
sub
pop
fld
ret
test
fs
add
mov
pcmpeqb
add
lahf
add
in
and
ret
call
and
sub
jg
push
add
add
add
add
test
outs
add
iret
add
mov
push
and
or
add
cmp
test
mov
(bad)
xchg
add
add
jle
sti
inc
inc
sbb
pop
add
push
jnp
pop
or
add
fld
ret
xor
add
sub
jb
mov
cmovg
add
add
fld
add
add
and
gs
mov
push
add
add
lahf
add
add
in
stc
ins
xchg
ins
mov
and
fmul
add
cmps
add
out
test
sub
mov
and
add
sti
psubq
add
outs
sub
iret
add
cmp
scas
add
fldcw
test
rsqrtps
add
out
add
add
add
(bad)
sub
inc
add
rol
repz
fldl2t
add
push
add
scas
sub
add
mov
jg
jmp
jo
and
add
add
dec
test
add
add
add
sub
fild
arpl
sub
mov
hlt
sti
mov
add
outs
ror
mov
mov
(bad)
(bad)
in
mov
jmp
mov
and
stc
add
js
cmps
dec
test
add
add
cmp
add
add
add
mov
push
test
or
add
mov
ret
cmp
loope
add
test
popf
add
sub
dec
test
into
add
(bad)
add
add
je
add
xchg
cmps
add
out
loop
cmp
xor
and
add
add
(bad)
adc
add
jmp
mov
sub
mov
psraw
iret
mov
jmp
test
and
test
ret
out
mov
fwait
loope
add
add
add
stc
add
movs
addr16
test
fild
mov
(bad)
(bad)
push
add
je
add
or
mov
xor
into
mov
adc
sbb
shr
iret
add
add
push
sub
test
mov
arpl
add
add
sub
lahf
add
pushf
xchg
xchg
jbe
xor
add
push
add
popf
dec
push
sub
test
add
mov
leave
(bad)
cwde
sbb
add
push
add
xor
mov
add
fs
add
test
ret
out
xor
add
loope
test
add
jle
xchg
mov
dec
cld
add
add
test
mov
out
add
and
shl
fwait
pop
ins
mov
mov
and
add
add
cmp
add
add
dec
fs
sub
add
je
popf
xchg
or
fisttp
add
(bad)
mov
and
add
add
test
push
add
dec
call
lahf
add
retf
test
add
add
add
dec
test
rol
add
mov
test
push
add
test
or
shl
add
and
add
add
mov
int3
dec
test
mov
add
xchg
mov
test
or
add
in
mov
bound
mov
and
fld
add
test
add
cs
push
inc
ret
rol
mov
push
imul
das
or
add
sbb
add
jmp
add
mov
sti
stos
pop
cli
mov
rdmsr
pop
or
jle
inc
sub
mov
and
(bad)
add
lock
das
mov
add
test
add
sub
jb
push
rol
lahf
push
popa
inc
dec
mov
or
mov
rol
sub
mov
je
jbe
add
ror
add
je
daa
fist
push
enter
mulps
in
mov
push
outs
addr16
cmc
jg
adc
in
sbb
push
std
retf
add
scas
fisttp
add
in
(bad)
out
mov
and
jecxz
add
mov
mov
lahf
push
je
test
add
push
je
xor
fucomp
test
mov
cmps
jmp
mov
mov
sub
add
add
loopne
add
add
add
test
add
add
mov
mov
push
mov
sub
fcomp
ret
xor
sub
mov
mov
je
adc
jp
add
inc
test
hlt
aad
cmps
and
test
add
sbb
sti
je
rol
aaa
inc
test
je
jmp
dec
test
sar
add
mov
(bad)
push
push
outs
add
mov
test
dec
and
dec
mov
mov
push
or
cmps
jmp
adc
and
add
shl
hlt
jp
push
mov
sub
add
test
add
xor
add
ret
and
add
ins
jg
test
add
push
popa
test
add
jmp
mov
sub
std
scas
and
add
(bad)
test
add
arpl
add
pop
fcmovnbe
jle
mov
minps
or
mov
fisttp
mov
test
das
cli
and
je
add
sbb
lods
int
mov
push
add
push
inc
ret
mov
add
test
add
mov
or
push
mov
add
scas
or
ret
retf
popa
loope
sub
add
sub
inc
xor
add
(bad)
test
pop
je
ret
add
mov
mov
jle
mov
nop
call
add
iret
cmp
std
fs
sub
mov
call
sbb
add
sub
je
mov
xor
es
mov
ja
sub
fadd
out
mov
inc
test
cmps
jle
mov
jno
mov
and
je
jmp
add
sub
mov
test
bound
add
cmps
jle
add
mov
iret
test
add
mov
mov
sub
add
add
xor
pop
pcmpgtw
add
jmp
adc
and
ins
add
sub
mov
je
out
add
sub
ret
pop
das
xbegin
jno
xchg
pop
je
jmp
dec
dec
xchg
out
add
fldenv
add
sbb
push
rol
inc
mov
pop
lahf
add
cmp
pop
mov
test
fisttp
add
mov
fs
sub
mov
test
lahf
push
xchg
into
mov
add
add
cmps
cmc
ss
test
adc
mov
push
repz
add
pop
lahf
jbe
lahf
xor
stos
and
xchg
je
ret
add
push
inc
and
mov
arpl
mov
inc
mov
leave
add
jmp
mov
and
or
add
dec
mov
pop
fs
jmp
cmc
test
fs
push
sub
dec
inc
and
je
jmp
mov
sub
mov
shl
add
jmp
cmc
jg
add
je
adc
inc
jmp
je
jmp
mov
sub
mov
push
mov
cmps
add
jg
adc
or
jl
test
rol
mov
push
mov
sub
mov
je
sub
add
mov
push
or
mov
add
jecxz
clc
pop
mov
dec
dec
add
add
test
mov
add
or
test
or
cmps
mov
std
sbb
sbb
shl
mov
std
jp
sub
xchg
jne
cld
out
mov
out
in
mov
lock
inc
add
add
mov
cmp
and
add
add
push
das
in
cmp
cs
mov
out
test
out
add
ins
and
jl
je
stos
or
add
jmp
into
ds
shl
add
mov
and
add
add
test
and
stc
je
add
add
adc
and
add
ror
cld
(bad)
mov
cmp
setl
and
mov
mov
push
push
mov
push
sub
pop
lock
adc
outs
add
or
mov
jmp
mov
outs
test
jmp
mov
mov
and
add
add
adc
mov
(bad)
push
std
je
je
or
in
aad
add
add
add
push
ins
and
movs
add
mov
lahf
jmp
or
(bad)
mov
icebp
out
xchg
mov
add
ret
add
movzx
mov
lahf
jecxz
add
mov
pop
add
je
or
mov
in
add
add
cmc
jmp
dec
rol
mov
mov
mov
and
add
jo
mov
add
je
or
and
add
add
lea
mov
movzx
xchg
mov
sub
mov
mov
sub
outs
pop
jns
outs
add
and
add
mov
and
jbe
add
add
add
inc
add
add
add
xor
and
add
std
jl
add
push
enter
mov
call
xor
push
add
add
and
pop
pop
push
(bad)
(bad)
mov
mov
mov
add
jnp
push
mov
es
mov
(bad)
pop
sub
add
add
inc
jmp
jmp
dec
loop
mov
nop
repz
add
addr16
dec
lds
fst
inc
jns
and
cmp
cmovl
push
mov
add
je
jnp
add
pop
out
in
mov
inc
out
push
imul
mov
mov
pop
je
sti
je
pop
push
push
outs
lea
dec
or
inc
mov
push
inc
push
add
adc
jp
cmp
out
pushf
ret
jg
loopne
rcr
and
mov
mov
adc
sub
jmp
imul
mov
mov
jne
inc
fisttp
add
jmp
xor
iret
repnz
std
scas
sub
or
add
mov
xor
jmp
mov
jmp
inc
mov
mov
adc
and
inc
and
pushf
repnz
call
mov
cmp
out
jmp
add
not
and
mov
add
test
je
add
inc
add
xchg
mov
mov
jbe
or
fist
mov
cmovl
mov
je
mov
out
add
and
sub
or
mov
add
cmc
stos
sub
je
sti
add
pop
add
cmp
mov
add
dec
and
push
adc
(bad)
mov
xor
fisttp
pushf
ret
add
das
inc
xor
push
outs
shl
mov
add
mov
pop
dec
hlt
mov
add
je
ins
movs
addr16
and
add
sti
popf
push
sbb
add
ds
and
fild
add
mov
je
mov
mov
lahf
je
add
lods
add
add
and
add
add
xor
jne
add
outs
rol
fisttp
je
das
and
mov
add
retf
test
add
ret
add
jno
and
popa
loope
push
dec
sub
sti
add
mov
cmp
pslld
pop
sub
add
add
pop
add
add
cmc
sbb
je
mov
add
(bad)
pop
jmp
sub
outs
iret
pop
shl
add
sub
mov
mov
add
pop
pop
mov
out
and
(bad)
xchg
add
ins
ror
jne
cmovne
mov
jmp
pop
test
and
ja
std
jmp
add
add
popa
cli
and
add
sti
mov
pop
mov
rol
add
shl
pop
push
fld
jmp
mov
pusha
cmp
add
shl
add
add
mov
jmp
mov
mov
mov
and
popa
add
pop
ret
mov
je
ror
(bad)
mov
add
test
sub
cs
push
add
or
fld
add
pop
xchg
mov
add
ret
gs
jge
and
(bad)
mov
push
add
add
inc
pop
xchg
test
add
outs
sub
int3
add
add
aam
push
add
add
(bad)
pop
out
in
add
(bad)
fucomi
add
and
add
add
add
add
outs
js
les
cmp
setne
stos
loope
test
aas
test
dec
mov
or
in
push
jns
or
mov
xchg
xchg
(bad)
add
movd
mov
pop
mov
in
inc
sbb
je
add
iret
mov
test
inc
cmp
out
add
xchg
ret
add
add
mov
jmp
mov
int
shl
repnz
mov
add
ret
pushf
ror
or
inc
shl
mov
mov
xchg
enter
mov
add
fadd
inc
or
xor
add
fld
add
push
inc
add
aaa
xor
and
or
lahf
push
mov
sub
add
iret
jo
and
or
add
xor
jmp
sub
mov
xor
test
rol
sti
je
add
cvtdq2ps
int
mov
lds
add
mov
std
rol
je
das
and
inc
sar
dec
test
mov
out
pushf
dec
xchg
mov
sbb
mov
sahf
(bad)
das
test
add
add
xchg
jne
push
mov
test
popf
test
or
(bad)
pop
and
shl
cmp
jl
je
cmps
jle
test
mov
push
push
and
add
push
push
dec
sub
sub
test
gs
pop
mov
jg
je
push
outs
rcr
mov
add
sub
add
or
ret
mov
lahf
mov
jp
call
cmp
push
jmp
push
outs
jb
mov
xchg
arpl
pcmpeqb
retf
test
add
add
in
jmp
lea
out
or
push
fild
and
(bad)
call
and
add
outs
mov
cwde
int3
mov
pop
rol
mov
mov
jmp
lea
lea
mov
mov
pop
call
out
rol
jle
sub
add
add
sub
sub
or
sub
pop
aas
add
(bad)
or
add
shr
cmp
je
ror
test
mov
mov
arpl
add
sbb
je
add
sti
cwde
push
pop
jmp
(bad)
sbb
sbb
ror
inc
xchg
and
sub
mov
xor
add
add
add
add
push
mov
(bad)
mov
test
add
add
xor
adc
(bad)
add
out
aas
inc
xchg
add
inc
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
and
adc
pop
inc
and
enter
jnp
and
mov
push
jmp
mov
lar
sti
(bad)
add
mov
sub
jb
and
push
test
adc
jmp
push
push
int
sub
mov
inc
and
test
dec
add
add
enter
mov
psubq
sti
sbb
inc
add
push
push
int
sub
gs
and
je
lea
add
mov
lods
and
dec
outs
cmp
xchg
pop
push
add
add
pop
je
adc
add
in
sbb
cmps
push
add
add
cpuid
jp
push
imul
mov
jg
sti
cmp
adc
cmp
and
mov
jo
or
xchg
mov
mov
arpl
jmp
and
mov
add
add
add
inc
pop
adc
xchg
xor
dec
and
mov
pop
cmps
push
add
stos
cmp
mov
add
mov
push
adc
jmp
add
mov
push
cmp
ret
xor
pop
add
in
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lods
inc
push
mov
call
xor
mov
mov
mov
or
idiv
jmp
not
frstor
aad
add
call
add
cdq
idiv
sub
cmp
add
mov
mov
mov
and
loop
add
test
rcr
mov
mov
mov
add
lahf
add
aad
sub
mov
and
rcl
mov
add
add
(bad)
mov
or
add
loop
sub
xchg
add
test
push
add
jmp
xor
xchg
add
and
add
add
(bad)
mov
add
and
xor
adc
mov
xchg
or
lea
add
mov
and
add
add
pusha
cmc
and
jg
xor
rcr
dec
imul
jmp
and
and
mov
dec
mov
mov
push
add
test
jmp
mov
sub
mov
and
scas
add
cvttps2pi
add
push
add
js
add
adc
sahf
mov
outs
jg
jmp
mov
sub
add
jg
jmp
mov
sub
mov
and
add
add
add
mov
and
add
add
jmp
cmc
pushf
adc
add
(bad)
repz
mov
sahf
je
add
sub
imul
call
adc
mov
mov
popa
pop
adc
add
pop
imul
adc
push
and
add
add
mov
and
scas
mov
mov
push
add
mov
sub
pop
fist
mov
rol
sbb
lar
outs
push
add
cmps
inc
add
push
iret
and
xchg
test
mov
add
add
sub
mov
mov
and
add
loop
test
xchg
add
add
std
cld
out
mov
divps
add
mov
sahf
je
add
retf
js
sbb
add
add
adc
aaa
jmp
jb
add
mov
jg
mov
mov
enter
(bad)
sub
jo
movs
setl
mov
mov
enter
sub
mov
xlat
add
jmp
xor
xchg
add
not
ins
jg
jmp
mov
and
add
xor
add
or
pop
cmps
mov
add
test
sub
mov
and
clc
test
push
rol
jmp
mov
add
ds
jg
sub
cwde
pusha
je
mov
mov
sub
mov
test
add
mov
add
sub
cwde
enter
sub
mov
push
jae
add
add
add
rcr
mov
fild
add
xor
and
lods
test
mov
mov
test
es
idiv
ret
mov
je
jmp
sub
cwde
dec
add
add
inc
rcr
test
mov
adc
scas
add
xor
test
adc
add
add
xor
and
mov
in
mov
jecxz
pop
mov
fst
pop
add
aad
mov
mov
dec
inc
je
push
jecxz
add
mov
pop
fidivr
arpl
rol
sbb
xchg
add
add
test
jns
out
pop
pop
mov
push
pop
add
jmp
aaa
test
add
xchg
scas
mov
lods
pusha
in
test
pop
add
cld
fstp
xor
push
and
add
mov
mov
pop
add
push
add
push
imul
mov
call
rol
adc
fdivr
enter
sub
sub
mov
dec
add
add
push
add
imul
not
inc
adc
sbb
add
mov
mov
add
movs
mov
cmps
add
(bad)
add
xchg
rol
cwde
test
sub
es
xchg
push
loop
ins
add
add
adc
xor
inc
aaa
movs
pusha
test
mov
add
add
loop
inc
cmc
or
dec
cmpxchg
adc
jmp
mov
sub
add
sub
sbb
rol
shl
mov
outs
sub
mov
or
push
add
loop
xor
and
stos
lea
sub
add
lock
add
dec
mov
ror
loop
or
add
mov
pushf
test
mov
add
clc
add
adc
mov
sub
imul
jmp
repz
rcl
add
pop
dec
dec
push
add
jge
cmps
imul
add
loope
and
not
sub
scas
adc
add
(bad)
xchg
pop
adc
sub
cmp
btc
mov
fst
add
mov
xchg
mov
add
std
dec
add
lahf
xchg
inc
push
out
add
add
rol
or
das
call
cmp
and
mov
add
mov
ret
and
add
(bad)
rol
pop
add
pop
add
loopne
add
mov
(bad)
int
push
and
add
dec
push
xstore-rng
cmps
ror
idiv
fld
pop
add
mov
mov
mov
or
pop
xor
pop
sbb
movs
push
lea
dec
add
push
adc
mov
outs
cmp
scas
or
mov
and
cmovne
mov
jmp
mov
mov
cmps
pop
push
loop
mov
adc
add
mov
inc
add
xor
and
add
add
add
retf
mov
mov
rol
pop
imul
outs
adc
add
test
add
xor
push
call
add
mov
mov
pusha
dec
add
mov
lds
add
cmp
cmp
push
scas
mov
movs
push
mov
icebp
add
push
and
add
xor
sbb
rol
aam
and
outs
add
inc
sbb
mov
and
add
or
rcr
push
and
adc
add
scas
add
cs
mov
or
adc
adc
rcl
mov
add
mov
retf
retf
cmps
jmp
add
sub
pushf
test
pop
xor
mov
jmp
(bad)
fisttp
(bad)
pop
xchg
mov
call
test
add
add
jae
rol
rcr
rcl
add
dec
add
mov
cdq
dec
jp
xchg
and
add
mov
rol
rol
add
mov
jo
add
dec
add
and
xor
sar
aaa
add
add
jge
retf
and
add
push
mov
push
add
adc
rcl
mov
lods
stos
hlt
mov
std
jp
scas
ror
add
jg
add
add
loopne
(bad)
dec
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
inc
or
adc
aad
and
cmc
pop
mov
and
mov
and
mov
cdq
cmp
rol
addr16
jnp
dec
and
add
jmp
cwde
push
and
sub
mov
add
jle
jmp
mov
sub
mov
jg
mov
or
add
mov
cmp
test
add
cmp
add
gs
dec
mov
pushf
test
inc
and
jg
jmp
cwde
inc
and
aas
ins
or
jne
inc
and
psubd
rol
jmp
mov
or
or
cld
(bad)
sbb
adc
add
aad
mov
cwde
popf
add
sub
sub
test
add
int3
fld
add
or
sub
mov
push
fwait
inc
loopne
paddw
add
ror
mov
jae
lods
inc
and
je
jmp
mov
aaa
pop
jmp
mov
pop
and
(bad)
sbb
rol
out
add
mov
mov
inc
mov
pavgw
add
sbb
add
mov
sub
mov
sbb
add
rol
mov
aaa
out
mov
je
out
dec
pop
adc
mov
inc
jp
jge
sub
add
out
add
mov
or
dec
and
je
sti
les
xchg
cmc
inc
and
cwde
ja
sbb
je
adc
pop
adc
add
jmp
mov
dec
add
mov
stos
pop
mov
and
add
and
call
fbstp
inc
and
data16
add
stos
ins
fcmovu
pop
fistp
add
jb
sahf
xchg
mov
mov
and
call
mov
push
sub
aam
mov
cwde
push
and
test
jae
aam
mov
and
jmp
(bad)
sub
mov
jmp
mov
pop
add
mov
sti
popf
pop
mov
call
mov
push
or
shl
je
pop
add
inc
and
jb
add
pop
sbb
retf
jp
js
jle
add
inc
and
(bad)
(bad)
jmp
mov
jmp
mov
sub
dec
xlat
push
add
mov
mov
add
xchg
jle
rol
inc
retf
cmp
call
mov
hlt
dec
pop
dec
pop
pop
cdq
ss
es
lock
xchg
adc
dec
push
mov
push
push
push
and
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
mov
popf
xchg
imul
mul
lock
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
jmp
mov
lea
imul
add
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
lea
imul
add
mov
mov
jmp
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
add
pop
pop
ret
mov
jmp
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
loopne
adc
xor
add
add
add
adc
add
add
test
in
mov
pop
add
and
add
sbb
daa
push
mov
xchg
rol
mov
jnp
inc
and
retf
add
mov
xor
inc
test
sub
xchg
test
add
add
inc
inc
add
pop
push
add
add
mov
adc
pop
add
imul
pop
or
or
test
sub
mov
getsec
loope
add
jmp
mov
jnp
inc
jne
aaa
mov
movzx
add
add
inc
test
jg
nop
popa
cmp
and
mov
jns
jnp
jmp
cmp
pop
adc
rol
nop
inc
test
sbb
imul
pop
sub
mov
pop
(bad)
and
add
add
add
inc
dec
xchg
fadd
pop
add
mov
je
xchg
sbb
add
jmp
add
jae
mov
stos
mov
xor
cmps
jnp
out
add
mov
mov
sub
inc
or
add
unpcklps
add
loopne
and
add
or
jnp
add
inc
call
pop
add
add
xor
sub
mov
jo
mov
iret
loopne
and
pop
mov
les
add
(bad)
pop
out
retf
pop
add
pop
add
add
sub
add
add
lahf
test
int3
int
add
add
sbb
shl
test
pop
test
imul
add
mov
add
or
mov
mov
and
add
add
add
add
add
cmp
sub
outs
test
add
mov
add
add
add
mov
mov
mov
mov
dec
int
cmovnp
pop
pop
add
pop
add
add
test
out
add
jecxz
add
jnp
out
(bad)
and
add
and
add
mov
fsubr
ins
mov
mov
add
add
and
add
add
add
xchg
ss
ror
add
pmuludq
add
add
retf
add
test
mov
out
dec
test
add
add
add
out
int
mov
sub
mov
int
cmp
test
test
adc
retf
add
ror
push
js
(bad)
add
mov
hlt
adc
adc
sbb
sub
mov
les
pop
test
add
jnp
mov
fdiv
js
or
add
mov
jmp
mov
add
dec
inc
push
pop
xor
jmp
cmp
ins
lods
dec
adc
mov
jg
jmp
mov
out
mov
shr
add
mov
add
cmp
ja
and
icebp
mov
rol
mov
pop
mov
push
popf
add
push
repnz
jmp
add
pop
push
repz
cmp
pop
add
mov
mov
xor
cdq
add
and
mov
mov
xchg
inc
jmp
je
jmp
mov
sub
mov
mov
sub
add
and
adc
aam
or
imul
test
cmp
add
mov
ud0
mov
test
pop
add
and
fst
add
int
dec
dec
fadd
pop
add
mov
je
fmul
pop
add
add
retf
sub
mov
cmp
mov
add
inc
in
pop
int3
add
dec
add
mov
outs
add
add
jmp
ret
mov
sbb
test
add
mov
cmp
inc
add
ja
mov
add
add
add
setne
dec
mov
sub
cmp
add
mov
ins
repnz
add
stc
(bad)
es
retf
xchg
and
or
mov
or
sahf
and
add
add
add
mov
dec
jp
cmp
test
sub
sub
test
fs
dec
mov
add
mov
add
out
and
mov
es
jmp
ret
mov
test
loopne
add
jmp
ss
out
push
lea
call
add
jg
add
xchg
inc
and
add
xlat
test
arpl
out
inc
jne
aaa
mov
(bad)
xchg
sub
int3
mov
ret
inc
or
dec
dec
mov
idiv
add
mov
mov
cmp
repz
movzx
inc
test
lea
add
add
sbb
xchg
call
rcl
stos
mov
int3
mov
jmp
xor
inc
add
dec
int
test
and
add
iret
mov
add
and
add
cli
cli
in
into
retf
paddb
or
int3
cmp
inc
movs
mov
mov
fild
ret
xor
inc
cs
add
mov
add
mov
mov
jg
add
cmp
fs
xor
loopne
xor
pop
add
test
push
inc
add
add
sbb
and
add
add
aaa
mov
add
dec
pop
pop
xor
iret
or
mov
sbb
or
lods
cmp
cli
jmp
inc
jo
imul
hlt
sbb
iret
jmp
retf
mov
pop
mov
mov
mov
add
add
add
ret
cmp
mov
jl
repz
mov
lods
push
movs
or
dec
iret
sbb
psllw
jmp
mov
dec
mov
or
retf
add
mov
and
call
std
test
xor
scas
(bad)
jbe
xchg
add
add
add
add
mov
inc
pop
and
mov
add
mov
mov
add
enter
add
add
mov
cmp
add
inc
push
adc
enter
mov
inc
and
add
xor
sbb
adc
mov
es
dec
jmp
data16
pushf
loopne
cmp
test
and
movzx
vmwrite
mov
hlt
add
add
(bad)
mov
cmp
inc
stos
(bad)
mov
inc
jb
repz
inc
and
mov
sub
out
cmp
retf
cld
add
add
mov
add
add
mov
xor
mov
jmp
je
pop
data16
mov
and
mov
dec
leave
xor
push
js
add
push
and
std
inc
adc
add
ins
push
mov
ret
retf
add
inc
and
jmp
mov
xor
sbb
add
mov
mov
xchg
push
and
pop
mov
pushf
push
fnstcw
test
repz
jmp
cmp
enter
push
dec
test
test
or
mov
or
push
mov
and
data16
mov
cmp
retf
xor
js
jg
xor
xchg
repz
cwde
(bad)
call
xor
xor
xor
fcomi
(bad)
jp
test
imul
inc
je
cld
(bad)
jmp
sbb
jmp
mov
mov
pop
xchg
mov
and
add
into
inc
xchg
pinsrw
arpl
or
dec
repz
or
mul
movzx
add
cmp
push
and
(bad)
jbe
or
sbb
and
and
mov
mov
out
jmp
repnz
add
shl
mov
xor
loopne
pop
mov
add
int3
add
jg
add
shl
sbb
dec
stos
add
pop
add
add
mov
add
sub
out
cmp
and
add
in
or
ret
test
or
add
add
nop
dec
int
inc
mov
mov
and
add
push
push
jg
ss
inc
inc
and
pop
add
or
mov
mov
and
add
add
pop
pop
ret
(bad)
dec
and
add
mov
aam
jmp
(bad)
mov
jnp
int
aad
mov
(bad)
dec
pop
test
add
add
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
adc
nop
test
mov
and
dec
add
nop
add
js
and
and
test
inc
add
leave
daa
xor
dec
cwde
pop
sbb
add
add
add
ret
add
add
inc
test
and
add
xchg
mov
mov
scas
xor
push
add
mov
sbb
add
mov
(bad)
into
or
dec
mov
shl
icebp
adc
add
add
jmp
sahf
adc
adc
str
sbb
mov
push
or
pop
add
mov
mov
add
add
mov
push
xchg
or
mov
xchg
mov
add
(bad)
fld
jmp
sub
mov
add
and
add
iret
add
add
leave
add
add
push
in
bound
test
add
add
(bad)
cmp
or
push
add
mov
jp
and
repz
mov
std
add
add
mov
sub
mov
test
movs
pop
add
jmp
mov
call
xor
ja
and
in
dec
add
(bad)
sti
push
add
jmp
adc
mov
mov
mov
add
icebp
push
pop
xchg
stos
shr
jmp
test
dec
xor
addr16
push
mov
and
xchg
add
jg
jmp
mov
sub
and
jg
jmp
stc
test
dec
dec
add
sub
mov
jg
gs
add
mov
xchg
add
mov
minps
in
add
pop
mov
add
and
dec
xor
and
xchg
fimul
mov
fmul
jmp
rol
sub
mov
movs
pop
test
add
arpl
in
add
test
add
xor
adc
mov
add
add
jl
add
xchg
sub
js
and
stos
add
jg
arpl
jb
add
and
add
xor
mov
neg
pop
add
pop
jmp
pusha
test
jecxz
retf
dec
and
inc
mov
and
xor
add
add
pop
cmp
(bad)
data16
pop
add
xchg
je
jge
push
stos
ror
add
sub
mov
pop
add
sldt
cmp
or
jmp
pop
retf
pop
xchg
jmp
in
sbb
add
add
ins
dec
push
add
arpl
ja
add
xor
sub
mov
and
fwait
sbb
jg
add
add
fsub
nop
jmp
sub
sbb
add
rol
call
pop
inc
add
sub
adc
add
mov
rcl
add
mov
in
add
add
test
push
add
pop
dec
add
add
mov
and
add
or
(bad)
xchg
add
sar
dec
add
add
sub
mov
add
dec
lock
mov
lods
dec
add
test
sub
pop
adc
mov
add
(bad)
and
add
cmps
mov
pop
xchg
mov
dec
add
add
pop
ins
jmp
add
inc
add
add
add
mov
and
mov
sub
add
(bad)
mov
add
jmp
mov
inc
add
add
jnp
loopne
add
add
mov
mov
mov
rol
add
jg
jmp
mov
les
mov
mov
add
in
bswap
retf
add
add
sbb
xchg
add
mov
mov
icebp
add
fwait
(bad)
rol
add
iret
add
and
in
add
(bad)
cmp
movlps
rol
mov
sub
mov
jg
fwait
add
dec
add
add
xor
movs
ror
mov
je
jmp
pop
adc
jne
imul
add
add
sbb
add
stos
cmp
add
jmp
add
mov
mov
je
lock
mov
mov
ror
sub
js
and
jg
es
add
mov
sub
(bad)
mov
mov
test
push
mov
jmp
mov
cmps
pop
(bad)
push
jle
jne
cmp
add
add
es
mov
imul
fdivr
sub
test
push
call
cmp
add
lock
sub
pop
ins
and
add
inc
in
jmp
adc
sar
mov
inc
jmp
mov
sub
test
xor
cmovne
loopne
add
ror
add
add
test
test
add
add
in
add
pop
retf
pop
and
sbb
or
add
add
xchg
add
retf
mov
pop
mov
mov
mov
out
iret
(bad)
jmp
mov
and
add
packuswb
add
mov
fmul
gs
add
dec
add
add
sbb
jmp
add
add
out
dec
add
cmovp
aas
test
pop
add
add
add
add
xchg
add
add
icebp
add
mov
je
es
mov
jb
retf
pop
dec
add
add
mov
js
(bad)
and
add
pop
rol
add
mov
arpl
aad
test
adc
add
add
add
shr
inc
and
je
out
fwait
sbb
mov
add
add
unpckhps
add
add
add
movs
into
inc
sub
fs
imul
inc
dec
fwait
add
mov
mov
sbb
and
dec
mov
jne
xchg
ins
xor
and
je
cmp
test
add
in
sub
xchg
and
je
jmp
pop
retf
nop
jmp
sub
mov
(bad)
add
add
in
add
mov
inc
add
dec
mov
(bad)
in
dec
mov
and
cwde
or
dec
add
bound
add
icebp
add
pusha
mov
push
femms
xor
add
add
xor
add
sub
mov
je
cmps
test
pop
add
add
fmul
test
dec
xor
mov
test
mov
je
sbb
add
add
jmp
sbb
inc
and
je
jmp
les
sub
add
xor
add
add
xor
(bad)
adc
add
sub
mov
mov
test
jmp
add
test
in
dec
xor
out
push
and
xorps
add
cmps
out
add
sbb
dec
lock
mov
pop
jb
add
add
sub
mov
push
test
add
add
add
out
imul
test
mov
jmp
stc
test
add
cmovp
pop
shr
pop
add
js
add
icebp
call
push
push
dec
push
mov
mov
cmp
subps
aas
push
and
add
add
loopne
ins
or
mov
cmp
iret
(bad)
xor
inc
hlt
ja
retf
and
xor
add
pop
add
and
add
xchg
pop
cli
cs
xchg
push
lea
jmp
add
xor
mov
pop
test
add
add
mov
jmp
(bad)
fsub
add
xchg
mov
adc
add
mov
mov
jmp
xor
lds
add
dec
mov
and
add
or
dec
or
xor
mov
test
add
mov
xchg
jmp
shl
add
sub
scas
out
stos
mov
add
and
in
add
mov
rol
and
add
or
add
mov
mov
rol
jmp
add
pop
div
mov
call
mov
xchg
mov
mov
(bad)
(bad)
cmp
add
add
add
add
fiadd
into
inc
mov
sti
inc
leave
and
or
add
mov
add
mov
add
retf
push
jmp
add
and
add
or
mov
(bad)
jmp
add
dec
mov
add
sbb
push
pop
xchg
jmp
adc
sbb
inc
mov
and
add
mov
call
jbe
push
mov
(bad)
push
mov
mov
jmp
jae
js
pause
jmp
add
and
or
or
or
(bad)
dec
mov
add
fwait
push
inc
ret
mov
and
add
add
enter
sbb
icebp
add
hlt
pusha
movs
mov
and
rol
add
js
jmp
pop
mov
jb
popa
and
xor
lsl
add
add
enter
pop
jmp
add
and
mov
and
lock
(bad)
push
and
into
inc
movs
push
out
dec
add
mov
and
or
add
jbe
(bad)
push
imul
inc
mov
mov
ror
sub
dec
xor
test
push
je
(bad)
pop
jl
add
add
add
sbb
fcmove
dec
cdq
mov
or
stos
mov
push
inc
adc
test
js
jmp
arpl
sbb
add
add
add
add
cmovp
xchg
cmp
cmp
xchg
mov
add
rol
and
add
mov
add
add
jmp
add
mov
fwait
nop
adc
mov
test
retf
(bad)
mov
mov
jmp
(bad)
adc
in
cmp
je
xor
xor
sbb
add
add
pop
mov
add
sbb
mov
add
inc
and
daa
(bad)
jle
inc
adc
movs
shl
xor
dec
fwait
add
inc
retf
and
rcl
dec
add
rol
add
pusha
call
xchg
mov
pop
test
into
add
arpl
adc
mov
call
xchg
mov
(bad)
push
nop
add
sbb
cs
add
add
add
add
jge
adc
or
add
mov
test
rol
jmp
pop
test
stos
rol
pusha
loope
into
(bad)
mov
add
xor
dec
add
por
inc
add
rcr
in
or
test
sbb
push
(bad)
iret
and
mov
add
xchg
sub
and
add
add
add
add
add
sbb
add
test
xor
add
pop
pop
ret
(bad)
pop
cmp
retf
aam
mov
add
test
add
add
xchg
stos
rol
test
lahf
dec
out
fwait
or
test
pop
dec
add
loopne
mov
add
mov
mov
add
nop
pusha
jge
pop
add
xchg
and
int
inc
and
push
mov
add
(bad)
push
push
mov
hlt
pusha
movs
mov
pop
lock
inc
push
mov
add
add
jmp
sub
add
add
neg
add
push
push
in
sub
sub
dec
and
sar
and
add
add
mov
sbb
add
inc
call
add
inc
add
adc
mov
mov
pop
or
mov
test
push
push
inc
sbb
add
jmp
mov
and
rol
add
dec
and
mov
and
push
mov
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
jmp
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
into
loopne
jo
mov
push
inc
add
rcr
push
cli
inc
add
dec
test
out
hlt
les
sbb
cmp
mov
add
and
jno
or
loop
mov
cmp
mov
mov
int3
(bad)
cmp
add
add
add
add
mov
push
jecxz
add
(bad)
xchg
inc
fiadd
jmp
jl
inc
mov
add
int3
int3
add
add
add
(bad)
pop
add
add
mov
and
jo
xchg
sub
push
test
movaps
add
add
fiadd
add
mov
sub
mov
and
inc
add
jg
sub
mov
mov
jno
sub
mov
xlat
add
inc
sqrtps
jo
neg
mov
mov
out
add
mov
mov
or
add
cwde
cmp
xchg
mov
sub
test
add
inc
jg
ja
add
add
inc
ret
sub
addr16
fstp
add
push
imul
jle
and
jecxz
cmps
sub
pop
test
jno
add
(bad)
and
sahf
neg
mov
jl
les
sub
mov
xor
push
test
mov
dec
mov
test
add
add
js
add
ret
out
hlt
les
add
sub
mov
je
jmp
mov
sub
mov
mov
paddsw
add
jmp
dec
test
shl
mov
add
out
jle
sti
pop
cmc
add
mov
sbb
jo
xor
lock
dec
inc
ret
add
(bad)
jnp
hlt
(bad)
jmp
aam
leave
xor
add
pop
ins
mov
and
add
add
loop
rol
add
mov
and
fild
add
sub
les
and
add
jg
sub
out
add
mov
sub
mov
push
stos
hlt
pop
mov
aam
fsubrp
mov
test
add
add
mov
jg
push
add
add
mov
pop
hlt
pop
arpl
fiadd
pmuludq
xchg
pusha
inc
ret
mov
sub
mov
and
add
mov
xchg
cmc
jmp
or
add
xrelease
sub
out
sub
ret
add
jo
or
add
data16
add
mov
out
jno
sub
lock
aaa
jo
add
mov
imul
shl
add
je
mov
out
mov
mov
add
sub
clc
test
hlt
add
verr
add
and
fild
add
std
test
ret
je
jmp
mov
xchg
enter
clc
test
mov
cmps
add
cmp
inc
add
mov
and
add
or
mov
sti
inc
scas
mov
add
mov
adc
sti
mov
in
pop
mov
add
add
sti
sbb
add
je
stos
jl
cmp
add
hlt
retf
cmp
jmp
gs
mov
hlt
pop
xor
add
sar
and
add
bound
hlt
add
dec
adc
and
pop
in
mov
cmc
(bad)
outs
into
add
mov
add
pop
shl
jnp
mov
(bad)
cmovo
or
add
add
add
add
and
jno
jp
loop
je
jmp
mov
(bad)
cmp
jp
inc
retf
add
mov
add
add
(bad)
in
add
xchg
add
fsubr
aaa
inc
mov
mov
pop
inc
ficomp
jmp
and
ret
fldcw
cmp
in
add
(bad)
repz
add
add
add
mov
mov
add
aas
add
je
ja
add
add
add
xchg
mov
loope
cmp
cmc
pop
or
add
sub
mov
rol
jp
add
mov
sub
mov
punpckhdq
jno
jle
cmc
add
cmps
add
sub
push
hlt
mov
je
jmp
push
das
or
pop
mov
mov
jle
and
add
loop
sub
add
inc
cmove
push
test
test
je
test
out
hlt
(bad)
inc
(bad)
(bad)
and
mov
push
dec
jmp
mov
mov
and
add
add
mov
jmp
add
xchg
and
add
ret
addr16
mov
and
mov
test
add
out
call
mov
mov
mov
cli
add
adc
cmove
add
inc
and
cmps
add
add
mov
movs
add
add
in
dec
je
add
xor
mov
and
add
hlt
dec
lods
and
pop
and
sub
add
out
jno
mov
rol
pop
call
add
inc
add
mov
mov
and
div
adc
mov
mov
mov
mov
jecxz
(bad)
mov
sub
mov
mov
and
add
loop
adc
pop
add
mov
mov
idiv
out
and
add
add
lahf
jecxz
(bad)
mov
dec
dec
mov
mov
and
mov
leave
xor
add
shl
cmc
pop
xchg
and
rol
call
mov
push
inc
mov
mov
and
add
bound
and
add
cmp
add
mov
mov
add
dec
add
mov
cs
mov
and
add
pop
inc
and
sbb
xchg
div
iret
dec
retf
hlt
add
jecxz
inc
sbb
add
mov
xor
jno
adc
retf
and
(bad)
cmps
or
add
inc
push
cld
and
add
(bad)
(bad)
fild
ret
add
mov
gs
and
add
add
popf
xchg
inc
and
sub
sbb
jno
cmc
(bad)
movd
add
add
stos
loop
(bad)
inc
fiadd
jo
sub
mov
and
add
mov
mov
loopne
mov
popa
pushf
pop
add
cdq
jns
(bad)
(bad)
mov
and
inc
ins
mov
and
rol
mov
and
inc
push
add
mov
jl
add
iret
mov
add
add
dec
loop
dec
les
push
add
jo
push
add
add
xor
addr16
push
add
shl
cmc
pop
xchg
sub
loop
(bad)
mov
mov
mov
jl
push
cwde
add
iret
adc
mov
and
les
pushf
fwait
out
add
out
(bad)
jmp
cmc
add
push
add
js
push
add
add
xor
repz
and
add
out
jge
and
add
(bad)
(bad)
mov
dec
adc
push
add
jl
push
add
rcl
add
mov
(bad)
call
std
out
bound
out
add
test
(bad)
(bad)
mov
mov
mov
mov
cwde
mov
pushf
mov
mov
mov
call
push
rol
add
jg
mov
mov
mov
push
jmp
and
sub
sbb
mov
sub
add
cdq
and
(bad)
(bad)
mov
inc
or
mov
and
fild
add
and
mov
mov
call
mov
mov
mov
push
or
inc
add
rol
sbb
jg
lea
jo
xchg
je
and
add
inc
rcl
call
add
hlt
add
inc
add
mov
out
xor
or
in
cmps
xchg
add
jns
jecxz
inc
shr
test
arpl
add
add
sub
out
adc
and
jo
add
(bad)
(bad)
dec
add
dec
scas
aam
add
hlt
mov
xchg
sub
sbb
jno
add
dec
mov
mov
add
add
mov
mov
add
or
mov
sbb
and
jmp
xlat
mov
jo
pop
test
clc
bound
push
or
(bad)
dec
mov
mov
mov
and
mov
and
inc
retf
rcl
or
pop
mov
inc
ficomp
daa
add
test
add
xchg
mov
inc
rol
ret
out
jge
popf
xchg
inc
and
(bad)
sbb
or
mov
out
jno
call
mov
sub
mov
mov
and
jecxz
cmps
mov
and
add
mov
mov
call
mov
xlat
hlt
mov
mov
and
add
iret
xlat
retf
and
add
cmp
add
add
mov
sbb
(bad)
(bad)
mov
push
lock
mov
mov
imul
mov
mov
and
scas
sbb
in
mov
sub
inc
mov
push
inc
add
adc
push
add
test
xor
push
dec
and
add
add
xchg
add
xchg
ret
daa
xor
iret
pushf
cli
cmps
add
jle
inc
retf
add
call
jle
cmp
mov
mov
idiv
loope
sar
and
hlt
add
inc
(bad)
pop
and
add
sahf
or
(bad)
push
out
hlt
imul
addr16
push
add
neg
and
xchg
cmc
jmp
pop
cmps
rol
inc
push
jge
mov
and
jne
(bad)
iret
xlat
retf
rol
std
cmp
add
pop
add
pop
fdivrp
inc
push
call
test
add
cmps
add
arpl
add
mov
xor
add
sub
xor
add
pop
jo
add
das
mov
mov
push
mov
add
mov
and
add
je
push
add
and
add
dec
gs
pop
mov
pop
ret
jl
sbb
add
add
sbb
jno
push
adc
push
retf
and
add
jo
ret
(bad)
dec
add
add
xor
push
add
int
and
add
hlt
dec
lods
cmp
test
and
jno
cmc
(bad)
mov
(bad)
jmp
inc
fidiv
xor
mov
and
add
adc
mov
mov
and
push
addr16
jmp
mov
mov
mov
pmuludq
mov
test
add
add
and
scas
cmp
(bad)
(bad)
jp
out
add
push
dec
mov
mov
cmp
in
mov
push
mov
add
retf
mov
ror
or
(bad)
dec
sahf
add
add
mov
mov
cwde
add
add
adc
jmp
bound
stos
ror
les
add
mov
call
mov
mov
mov
xor
push
loope
mov
and
mov
pop
or
pop
cwde
scas
fdivr
jmp
add
je
mov
out
mov
and
add
add
and
mov
mov
fdivr
call
add
mov
mov
sbb
stos
cwde
xchg
cmps
pop
push
and
call
test
and
call
inc
add
add
mov
mov
mov
loopne
inc
popf
sbb
sbb
mov
add
add
and
jno
add
add
push
adc
aas
add
add
test
add
idiv
dec
and
scas
neg
(bad)
(bad)
jp
add
add
mov
mov
and
pop
in
add
sub
inc
and
(bad)
xor
add
mov
dec
leave
(bad)
(bad)
mov
mov
aas
jo
push
add
cwde
add
dec
adc
jge
and
(bad)
pop
and
add
add
mov
and
push
(bad)
(bad)
mov
mov
mov
mov
mov
push
mov
mov
ret
rol
inc
fdivrp
dec
mov
(bad)
(bad)
mov
mov
mov
mov
dec
adc
mov
cwde
test
jno
push
dec
and
addr16
(bad)
(bad)
aas
loop
add
add
mov
cli
call
adc
mov
mov
and
inc
add
ret
addr16
(bad)
jmp
mov
sahf
cmp
pmuludq
imul
inc
test
stc
shl
pop
jecxz
(bad)
dec
bound
add
or
push
add
mov
loopne
add
fs
pushf
cmp
xor
xchg
mov
and
call
mov
push
or
mov
bound
hlt
add
and
jle
cmp
pop
add
add
xchg
(bad)
call
add
push
add
mov
push
inc
add
mov
or
jecxz
add
arpl
jo
jle
sub
scas
inc
add
mov
xor
arpl
das
jmp
leave
xchg
cmc
add
push
add
add
into
adc
stc
dec
mov
or
add
add
and
adc
(bad)
(bad)
mov
mov
mov
xor
mov
mov
add
stos
and
xchg
add
cmc
push
dec
mov
(bad)
call
rol
add
cld
mov
mov
and
add
xlat
retf
and
add
and
pop
add
in
mov
xlat
mov
add
out
add
rcr
popa
and
add
add
add
and
add
fidiv
dec
rcr
call
mov
mov
ret
pushf
mov
and
out
hlt
les
and
(bad)
sbb
in
add
cli
cdq
pop
fsin
(bad)
mov
and
mov
imul
add
push
add
mov
or
ret
addr16
fsin
jmp
mov
add
add
mov
mov
nop
jo
add
or
popf
bswap
lods
aaa
and
add
je
int
movs
mov
and
add
les
adc
mov
fild
add
mov
or
(bad)
fdivr
call
call
test
pushf
add
pop
add
pop
inc
fiadd
popa
sbb
or
bound
add
inc
out
adc
jmp
pop
inc
add
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
pop
and
or
xchg
or
dec
addr16
push
and
or
mov
mov
inc
inc
and
out
addr16
jmp
jo
ficomp
fld
ss
xchg
dec
push
popa
mov
add
and
mov
sub
mov
or
add
push
pop
xor
xchg
push
sub
mov
and
mov
jmp
or
mov
in
iret
mov
inc
(bad)
inc
add
add
or
mov
shl
loop
stos
mov
(bad)
nop
pushf
add
add
dec
mov
mov
cld
xlat
sti
xchg
cmp
add
inc
add
push
pop
inc
mov
mov
jg
jmp
enter
lods
ror
mov
inc
bound
scas
test
test
add
rcr
lods
adc
cmp
ins
add
add
mov
inc
and
je
imul
inc
outs
(bad)
sub
mov
je
jmp
mov
sbb
invd
push
and
scas
add
add
scas
jmp
push
enter
out
movs
imul
cmp
sbb
add
add
jmp
cdq
inc
and
sub
adc
test
ins
add
jmp
mov
and
sub
mov
cmp
add
jmp
push
sbb
add
and
rol
add
mov
mov
mov
and
call
fstp
fwait
pusha
mov
pop
lahf
add
cmp
out
ret
cmp
addr16
push
ss
add
mov
cmove
std
out
test
data16
adc
add
les
dec
(bad)
fwait
test
sbb
fisub
mov
add
xchg
sub
jge
and
scas
ret
fmul
add
mov
mov
mov
jp
mov
add
out
test
je
pop
mov
and
shld
aad
pop
or
nop/reserved
xor
and
fild
fwait
ror
mov
je
(bad)
inc
test
jmp
(bad)
push
sti
pop
add
add
dec
inc
and
lds
mov
js
and
mov
or
add
add
or
imul
mov
out
mov
test
adc
mov
aad
fwait
and
fs
(bad)
jmp
dec
and
mov
mul
dec
fimul
dec
cmp
(bad)
dec
pop
add
add
push
mov
push
push
push
and
sub
jmp
call
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
(bad)
sub
test
scas
pusha
pop
inc
and
fist
and
mov
adc
add
inc
and
stos
inc
daa
dec
jg
xchg
add
push
pop
sub
mov
sbb
add
add
sbb
add
and
sub
cmp
xor
pop
mov
add
inc
sub
mov
xchg
mov
and
sbb
sbb
add
test
daa
dec
sub
mov
and
pi2fw
add
jnp
adc
dec
mov
stos
inc
and
jg
jmp
xchg
xor
mov
add
cwde
add
add
retf
stos
test
sub
test
jl
add
test
add
mov
sbb
inc
and
movhps
in
add
jge
add
add
clc
pop
data16
mov
and
ss
add
ds
add
sbb
push
leave
mov
cmovge
sbb
retf
add
repz
and
lahf
lahf
pop
das
fnstsw
pminsw
add
jmp
data16
dec
sub
mov
je
jmp
dec
sub
(bad)
in
inc
xchg
adc
test
add
add
add
add
out
adc
add
inc
and
test
fwait
add
jno
add
xchg
ret
sbb
mov
mov
mov
pop
pusha
mov
add
into
dec
test
and
jno
add
add
nop
sub
add
pusha
cmps
push
add
sbb
rol
lods
adc
inc
add
rol
push
pop
sti
mov
sub
add
add
add
test
fbld
fcomi
mov
and
retf
inc
and
add
add
cmp
clc
jmp
shl
add
or
test
dec
sub
add
sar
and
jmp
lock
scas
pop
arpl
repnz
dec
adc
pusha
cmps
push
add
es
test
scas
pop
mov
dec
xor
mov
add
inc
and
mov
nop
cmp
add
mov
pop
bound
mov
mov
pop
cwde
mov
retf
(bad)
ret
fild
out
cs
data16
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sar
adc
or
add
call
add
jo
inc
and
imul
test
add
test
cmp
mov
xchg
stos
and
ins
imul
std
mov
ror
ins
sbb
sub
iret
inc
and
adc
mov
bswap
push
add
out
or
add
mov
sub
mov
psubw
add
add
inc
and
jl
mov
and
imul
inc
add
iretw
pop
add
mov
and
sub
mov
addr16
push
jbe
test
add
outs
add
sub
dec
test
add
add
xchg
mov
dec
addr16
rol
add
and
add
and
sub
mov
inc
shld
add
add
dec
ret
jmp
inc
stos
inc
shr
add
outs
add
mov
sub
mov
es
sub
cmp
pop
inc
retf
push
push
cmp
stc
sbb
outs
dec
ror
and
sub
int
sbb
push
test
ja
add
aaa
add
inc
sub
mov
and
jg
jmp
ret
xchg
push
mov
cmc
inc
and
je
data16
pop
jne
mov
sub
sub
sbb
and
outs
add
fisubr
jne
es
loope
inc
(bad)
jne
les
sub
mov
and
jg
xchg
add
pop
or
sub
fsubr
pusha
and
pop
inc
add
add
push
push
add
mov
xchg
push
dec
jbe
mov
test
pop
or
inc
es
jl
add
ja
add
bound
sub
adc
test
add
add
mov
ins
mov
(bad)
xchg
cmps
adc
test
pop
add
jne
mov
mov
mov
push
mov
test
add
add
mov
sub
inc
sbb
push
test
dec
add
les
mov
mov
pop
ins
les
mov
dec
rol
movs
loop
add
adc
xchg
rol
mov
mov
ins
cdq
and
add
mov
repnz
inc
ins
bound
outs
add
ror
sub
mov
shl
dec
jmp
mov
add
and
jg
xor
ins
push
and
mov
mov
jmp
pop
loopne
jp
iret
dec
stos
push
shl
imul
push
jecxz
or
add
mov
jmp
jmp
lds
or
add
pop
add
mov
cmovne
movsx
and
add
mov
stos
inc
dec
ins
mov
adc
cmp
sub
mov
jne
dec
mov
add
(bad)
xor
mov
jge
jmp
pop
inc
push
mov
mov
jge
mov
imul
add
add
cmps
inc
and
mov
(bad)
or
shl
xchg
dec
shl
pop
push
add
adc
add
inc
aaa
xor
out
mov
movs
mov
mov
and
and
add
rol
mov
iret
jbe
jnp
jge
out
mov
lahf
stos
cld
(bad)
dec
pop
add
in
push
push
and
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
aaa
lock
push
add
inc
add
or
sub
ret
sahf
es
loop
fcom
and
jo
push
add
sub
xor
arpl
cmp
sub
push
pop
aad
hlt
gs
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
jmp
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
ja
or
add
add
mov
sbb
mov
xchg
mov
pop
(bad)
addr16
fsub
add
outs
xchg
add
add
push
test
and
loop
mov
xchg
jp
aam
dec
add
and
mov
mov
add
leave
add
and
cli
add
add
test
jle
pop
push
jmp
xchg
(bad)
iret
add
je
mov
add
add
das
mov
jecxz
jmp
mov
xor
cli
jns
imul
jmp
push
add
push
jmp
mov
fmul
mov
or
and
sbb
sbb
add
jmp
cmc
fldenv
add
imul
jnp
jl
xchg
add
add
jae
mov
cli
out
mov
sub
mov
jg
jmp
and
je
lock
shl
add
add
jne
out
add
push
push
jle
(bad)
addr16
sub
jp
pop
mov
or
jmp
ins
test
add
add
mov
in
in
add
add
add
nop
add
adc
daa
mov
add
(bad)
data16
leave
jmp
sbb
int3
add
add
icebp
push
push
sbb
add
jno
rol
jecxz
jmp
mov
aas
dec
and
test
js
nop
cli
add
out
add
outs
test
sbb
aad
icebp
xchg
test
add
pmulhuw
xchg
mov
out
add
test
int3
je
mov
lock
ficomp
(bad)
loop
add
push
add
add
fld
int3
add
sub
sbb
xchg
add
adc
add
add
add
test
add
add
ror
jae
ret
nop
add
add
xchg
and
add
add
jecxz
mov
mov
mov
jg
jmp
mov
mov
mov
xchg
push
add
jno
sbb
nop
add
add
and
test
jg
mov
repz
gs
add
push
add
xchg
cli
mov
rcl
push
push
ret
mov
adc
xchg
test
add
cld
jmp
inc
addr16
xchg
cli
add
xchg
popa
push
mov
inc
and
jg
or
nop
add
add
aas
mov
stos
xchg
mov
test
add
xchg
add
add
rol
add
mov
inc
and
packuswb
loopne
add
push
adc
and
mov
pop
sbb
sbb
add
jmp
xchg
cli
and
pop
add
sub
mov
pxor
add
add
mov
adc
std
inc
and
repz
out
add
mov
rcl
push
sub
aam
(bad)
fs
jmp
mov
fiadd
add
mov
jnp
pop
add
add
mov
mov
das
not
out
ins
pop
je
psubd
add
jmp
mov
sub
mov
repz
add
add
jp
xchg
cli
ins
pusha
cmp
push
add
sub
mov
and
packuswb
imul
pop
in
add
add
test
scas
hlt
std
inc
and
je
jmp
mov
sub
xchg
cmp
packuswb
imul
push
add
add
pop
in
(bad)
adc
test
push
add
sub
in
xor
add
mov
jmp
mov
mov
ror
pusha
cmc
push
add
jmp
loopne
mov
add
push
sub
mov
or
pop
add
add
in
xor
jp
or
inc
and
jno
add
add
add
add
push
add
mov
daa
xor
test
jbe
add
add
leave
mov
int3
not
call
test
add
jle
xor
jecxz
mov
mov
fwait
in
and
or
xlat
cld
mov
jecxz
mov
sub
ins
pop
je
adc
imul
mov
int3
push
add
sub
mov
or
in
xchg
cli
out
cdq
and
push
push
add
mov
test
in
add
adc
jmp
stos
xchg
sub
sub
inc
xchg
xchg
test
pop
jecxz
jmp
mov
mov
add
cmps
(bad)
mov
mov
push
and
add
add
push
add
shr
add
mov
and
nop
mov
mov
add
loopne
call
jge
adc
xchg
cli
mov
mov
cmp
inc
jns
call
mov
jmp
mov
mov
jmp
jno
rol
mov
add
out
sbb
mov
push
add
rol
add
add
mov
mov
push
ret
inc
xchg
xchg
test
jle
jecxz
adc
pop
push
shl
mov
and
add
pop
test
add
and
sbb
and
add
jle
push
dec
in
in
sbb
add
add
lea
fmul
inc
test
pusha
outs
std
push
push
mov
mov
and
out
add
add
cmp
setne
js
sti
add
mov
mov
jns
add
jmp
jno
mov
jne
pusha
fimul
add
add
inc
push
cmp
jmp
test
add
add
test
fucompp
push
jae
dec
cli
out
mov
add
mov
(bad)
in
add
test
retf
add
cld
add
and
sub
shl
sub
fdivr
call
out
rcl
mov
dec
imul
add
lock
cld
mov
add
and
out
add
add
add
mov
cmp
pmullw
test
rcl
add
add
inc
addr16
xchg
cli
out
rcl
add
test
jecxz
imul
std
jmp
es
jb
(bad)
mov
add
add
stos
add
je
js
sbb
jecxz
mov
pusha
out
in
cdq
and
push
add
lea
pop
and
sahf
(bad)
addr16
add
add
mov
jmp
mov
int
imul
add
add
rcl
mov
jecxz
mov
in
mov
(bad)
xor
mov
mov
sub
and
jp
ins
std
dec
add
and
rol
sbb
daa
mov
imul
sbb
fadd
add
fwait
lods
daa
in
mov
inc
lock
mov
fldenv
mov
clc
loop
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
adc
dec
aad
push
or
jne
mov
and
in
dec
and
mov
mov
mov
sub
mov
and
in
in
bound
fimul
push
dec
adc
push
repz
(bad)
(bad)
sbb
add
add
cmp
mov
movs
or
cli
dec
outs
aaa
add
lea
adc
aas
ins
mov
and
push
call
add
retf
(bad)
into
add
inc
and
ss
push
aam
jmp
jno
and
sub
add
and
retf
add
mov
in
jb
sahf
inc
movs
cmp
icebp
fild
mov
(bad)
sbb
add
add
push
push
xchg
xchg
push
mov
and
ss
cmps
cmp
loope
sub
ds
inc
stc
paddw
add
jmp
mov
es
inc
movs
sbb
test
add
add
pop
add
mov
(bad)
arpl
inc
and
psraw
add
in
mov
sub
data16
and
(bad)
mov
push
mov
pusha
mov
or
test
add
or
adc
mov
pushf
mov
int
mov
jne
(bad)
add
add
das
push
aam
mov
sub
push
inc
and
wbinvd
and
add
jmp
mov
inc
fstp
push
pop
push
and
je
or
es
xchg
sgdtd
add
sub
push
mov
sub
outs
and
cmovb
and
jmp
mov
sti
inc
and
imul
out
pop
mov
inc
push
retf
add
add
mov
ds
and
xor
fmul
mov
lds
or
mov
in
stc
push
mov
cs
movs
pop
push
ret
sub
add
cmps
and
xor
push
mov
nop
cs
mov
lock
or
dec
cmovne
jle
inc
jmp
(bad)
fist
add
inc
xor
imul
xor
fs
add
bound
push
xchg
xchg
nop
jmp
or
inc
rol
cli
dec
xchg
loope
mov
inc
loop
jmp
jmp
dec
fbld
imul
pop
rol
add
mov
icebp
dec
movs
push
jg
and
mov
xor
xor
in
lock
pop
sbb
(bad)
repz
inc
pop
xchg
ret
stc
sar
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
(bad)
cmp
sti
aad
add
cmove
and
cli
jmp
jmp
mov
or
cmp
(bad)
fnstsw
jg
jmp
mov
and
inc
scas
inc
add
jg
icebp
add
cld
ret
xchg
cmps
mov
sti
je
and
add
add
push
xor
pop
or
imul
add
mov
inc
push
scas
mov
mov
mov
or
inc
and
sub
mov
prefetch
add
add
pop
xor
and
jmp
enter
dec
add
popf
mov
xor
call
test
add
jg
inc
jmp
clc
dec
dec
outs
cli
inc
inc
and
rsm
cmps
popa
add
mov
xor
jp
xlat
movs
push
mov
add
jmp
jmp
push
cmps
or
adc
test
add
jg
add
add
enter
xor
leave
sbb
sbb
pop
and
mov
retf
or
jmp
in
add
mov
mov
or
mov
xor
mov
dec
mov
jmp
push
jmp
sub
mov
jmp
movzx
dec
or
and
mov
mov
push
and
cmp
add
mov
icebp
aas
inc
xor
mov
(bad)
das
add
dec
xchg
pop
and
inc
jecxz
pusha
add
and
mov
mov
and
mov
icebp
jg
cmps
(bad)
(bad)
mov
mov
jmp
inc
pop
cmps
inc
das
stc
mov
jmp
mov
inc
out
push
sub
sub
mov
push
pop
inc
inc
sar
popa
add
push
gs
pop
fstp
ret
lea
loopne
push
add
or
mov
jns
mov
icebp
and
or
add
cdq
inc
jle
add
sub
mov
mov
adc
jmp
mov
and
mov
mov
sar
add
mov
mov
add
add
dec
mov
scas
jecxz
leave
fsub
cmp
or
and
mov
or
adc
rcr
(bad)
(bad)
stc
inc
and
pusha
cld
sub
jmp
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cmp
and
add
add
mov
mov
rol
dec
inc
and
mov
setne
pop
rol
fwait
add
sbb
add
push
lods
mov
and
jg
jmp
mov
mov
ds
je
jmp
outs
jmp
sub
ror
das
mov
inc
and
jno
jbe
add
add
add
mov
and
sub
mov
cdq
add
add
xchg
in
and
dec
sub
sub
sub
jle
jmp
out
and
sub
xchg
xchg
push
adc
test
in
xlat
add
out
inc
dec
add
and
mov
lock
add
mov
out
mov
pop
and
jge
es
scas
jmp
mov
inc
test
and
iret
test
lods
add
sbb
add
pop
out
sub
pop
jbe
sahf
test
in
add
scas
imul
mov
mov
mov
mov
and
or
bound
pop
and
jmp
mov
and
or
xchg
shr
add
imul
mov
sub
add
sub
dec
sub
loopne
sahf
rcl
add
dec
out
mov
and
jmp
pop
inc
and
xlat
or
add
add
jp
sub
pop
mov
add
xchg
add
push
ror
or
mov
in
call
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
fisttp
mov
sub
or
add
test
push
or
(bad)
mov
jg
(bad)
add
jo
(bad)
sbb
sbb
add
jmp
(bad)
je
icebp
xor
xorps
add
jmp
rcr
ror
jns
xlat
and
adc
sub
add
jmp
gs
and
sub
mov
arpl
add
pop
mov
(bad)
jnp
bound
jg
jmp
mov
je
imul
addr16
jmp
popa
mov
mov
and
ins
and
mov
sbb
aaa
jecxz
add
jl
mov
mov
ja
inc
ror
stos
inc
and
hlt
or
scas
xrelease
jg
jmp
jmp
(bad)
je
movs
into
ja
fild
test
mov
or
sub
inc
and
adc
inc
add
jmp
gs
and
sub
mov
fadd
xchg
add
fwait
stos
sbb
je
fcomp
cmp
scas
inc
and
clc
(bad)
sbb
add
jecxz
jmp
and
sub
mov
je
cmp
push
fwait
stos
inc
jl
and
in
sbb
xchg
sbb
pusha
add
je
imul
and
xchg
test
out
add
mov
sub
push
and
loope
sbb
push
add
jmp
(bad)
sbb
and
jge
jmp
mov
sub
and
mov
sbb
inc
add
add
jb
sub
push
dec
xchg
test
xlat
xchg
add
nop
jae
xchg
dec
jnp
and
cmovno
add
rol
jmp
xchg
inc
sub
cwde
add
jmp
mov
popa
jg
mov
punpcklwd
add
add
add
int3
xchg
and
dec
adc
add
add
or
ja
add
outs
jl
xchg
mov
adc
pop
shl
add
fild
mov
sti
pushf
lahf
aam
add
jmp
mov
sub
fild
imul
shl
add
pop
add
xor
push
push
mov
clc
test
ja
stos
out
inc
inc
and
sub
mov
inc
je
jb
add
add
and
mov
push
test
add
jbe
pop
and
add
stos
add
add
rcl
fisub
add
add
and
jmp
mov
pusha
inc
into
sbb
mov
gs
cmps
mov
jmp
jmp
cli
inc
or
mov
mov
and
add
xchg
adc
add
repnz
inc
push
inc
retf
cmp
mov
add
push
jmp
and
mov
mov
movzx
stos
jmp
das
retf
push
add
lods
arpl
add
jmp
lods
mov
lods
push
and
clc
and
cmp
cmove
mov
loop
add
ins
push
inc
add
add
mov
idiv
int
dec
enter
fld
inc
and
nop
inc
push
jne
fwait
add
add
xlat
aas
dec
mov
inc
mov
mov
add
xor
jbe
add
mov
and
add
add
add
mov
xchg
sbb
push
into
add
add
fs
xchg
pop
fld
mov
jmp
(bad)
pop
aas
mov
add
jecxz
stos
add
stos
and
push
int
aad
dec
mov
lsl
jmp
cdq
push
pop
push
sub
scas
not
nop
pusha
add
push
and
push
inc
mov
mov
and
adc
and
adc
add
not
js
punpckldq
jmp
data16
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sar
sbb
pop
lds
and
add
data16
inc
stos
and
mov
mov
or
and
xor
add
aam
jmp
add
ret
cmc
iret
jmp
mov
call
(bad)
xor
jb
out
add
mov
lea
mov
lods
push
and
mov
push
adc
inc
jnp
fsubr
(bad)
call
rol
(bad)
cmps
and
dec
(bad)
mov
aaa
lahf
inc
sti
sbb
mov
adc
icebp
sti
dec
jmp
(bad)
sbb
add
add
inc
and
sub
mov
scas
xor
test
jp
add
ja
daa
mov
sub
mov
sti
add
add
xor
cmp
(bad)
pop
fcomp
sar
dec
add
test
mov
jo
adc
inc
and
psubb
add
jmp
sbb
call
repz
add
jmp
pop
sub
mov
mov
inc
add
add
lods
cmp
sbb
add
add
(bad)
into
add
xor
sub
mov
test
jecxz
add
dec
inc
add
inc
bound
sub
add
and
je
jmp
mov
xlat
mov
mov
or
test
xlat
not
dec
inc
ret
pop
stos
mov
sbb
and
sets
jmp
add
sub
inc
and
fnstsw
jecxz
ficomp
fiadd
and
movzx
mov
xor
mov
and
xor
and
sti
fs
and
mov
sbb
dec
jmp
(bad)
jo
mov
jmp
inc
add
mov
dec
and
mov
push
inc
inc
ror
out
or
fiadd
retf
mov
and
push
xor
into
mov
pop
pop
mov
jge
(bad)
pop
movzx
mov
cmp
mov
fcom
push
sti
enter
mov
mov
ins
imul
inc
cmp
mov
in
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
sete
and
movzx
mov
mov
mov
jmp
mov
mov
pop
ret
mov
call
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
call
lea
mov
mov
mov
mov
call
mov
mov
mov
mov
call
sub
mov
mov
sub
mov
je
jmp
jmp
add
pop
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
jmp
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
bound
mov
and
mov
push
inc
push
jo
inc
and
call
js
rol
(bad)
sub
mov
fisttp
jg
into
xor
add
je
sub
mov
pcmpgtb
add
add
lahf
add
adc
lea
dec
fisub
bswap
cmp
add
imul
jbe
(bad)
sub
mov
setae
jb
add
add
add
pusha
fnstcw
mov
pusha
inc
and
mov
fst
add
mov
add
cmp
hlt
mov
add
lahf
jmp
push
jmp
clc
mov
call
ror
add
inc
and
out
cdq
data16
or
dec
mov
add
jmp
inc
and
jge
mov
and
movd
add
popf
jbe
add
mov
sub
mov
mov
ret
pop
add
ja
inc
pop
push
xor
sub
fld
paddq
in
jae
add
add
fs
pusha
inc
lahf
sahf
pop
fbstp
test
pop
add
sub
out
loop
push
fisttp
test
add
add
addr16
fbld
(bad)
js
adc
and
je
jmp
and
sub
pop
jg
jno
shl
add
imul
add
add
xor
sub
pop
and
punpckhbw
dec
add
jmp
pusha
adc
mov
je
jmp
mov
ins
jg
add
test
add
fistp
jmp
add
inc
and
xor
pop
sub
inc
and
je
adc
jmp
add
cmps
dec
ret
push
push
jae
cli
mov
xchg
pop
jg
sub
lods
inc
push
ins
mov
fisttp
mov
mov
mov
sub
add
add
out
popf
lahf
add
jge
xor
(bad)
ss
fld
lods
cdq
pop
out
jmp
mov
mov
lahf
add
shl
add
mov
mov
and
or
adc
inc
and
jmp
mov
test
adc
fs
bound
and
jmp
mov
mov
jmp
pusha
fnstcw
arpl
jmp
inc
add
add
sahf
mov
(bad)
jmp
mov
mov
mov
add
adc
cmc
mov
inc
fild
jmp
lea
mov
pop
pop
js
inc
mov
pushf
xchg
aaa
ja
add
add
sbb
mov
das
add
ss
push
add
call
outs
lahf
imul
pop
es
mov
fwait
lock
(bad)
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
jmp
mov
add
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
mov
jmp
mov
mov
shl
add
mov
mov
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
jmp
mov
lea
imul
add
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
lea
imul
add
mov
mov
mov
mov
mov
mov
call
sub
lea
imul
add
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
sub
add
add
mov
mov
jmp
mov
jmp
add
pop
pop
ret
mov
jmp
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
cmp
jge
mov
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
movzx
cmp
setge
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
movzx
cmp
jl
jmp
mov
mov
mov
add
add
sub
mov
movzx
sub
add
mov
mov
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
movzx
cmp
jl
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
sub
add
add
mov
movzx
sub
add
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
movzx
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
cmp
jge
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
sub
add
mov
movzx
mov
shl
shl
mov
mov
add
add
sub
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
sub
add
add
mov
jmp
mov
cmp
jne
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
add
pop
pop
pop
pop
ret
mov
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
movzx
sub
add
mov
mov
jmp
movzx
mov
mov
mov
mov
mov
jmp
mov
mov
mov
sub
sub
mov
movzx
mov
shl
shl
mov
mov
add
add
sub
mov
jmp
mov
mov
jmp
mov
jmp
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
imul
and
cmp
sete
mov
cmp
setl
or
test
mov
mov
mov
mov
jne
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
sub
mov
mov
mov
mov
mov
mov
shl
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
sete
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
mov
jne
jmp
mov
test
jne
jmp
mov
mov
jmp
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
cmp
sete
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
jmp
mov
mov
cmp
mov
jbe
mov
cmp
setl
mov
mov
test
jne
jmp
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
cmp
jge
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmovne
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
mov
add
mov
shl
add
mov
mov
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
cmp
jae
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
add
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jge
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
add
mov
jmp
mov
mov
jmp
mov
mov
cmp
mov
je
mov
mov
mov
cmp
setb
mov
mov
test
jne
jmp
mov
mov
mov
sub
mov
mov
mov
mov
cmp
jb
mov
mov
mov
mov
add
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
cmp
sete
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
add
mov
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
cmp
sete
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
sub
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
mov
add
sub
mov
mov
mov
mov
sub
cmp
jge
mov
mov
mov
mov
sub
mov
cmp
jge
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
cmp
jge
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
mov
cmp
mov
jbe
mov
cmp
setl
mov
mov
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
cmp
jge
mov
cmp
jne
jmp
jmp
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
add
mov
and
mov
mov
mov
mov
mov
mov
shl
shl
add
mov
shl
add
mov
mov
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sar
mov
movzx
add
mov
mov
mov
add
mov
mov
mov
add
mov
and
mov
mov
mov
mov
mov
shl
mov
movzx
mov
sub
mov
mov
mov
sar
add
imul
shl
add
mov
mov
mov
cmp
setge
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
sub
mov
mov
mov
mov
cmp
setae
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
shl
mov
mov
and
mov
mov
mov
mov
add
mov
shl
add
mov
mov
shl
add
mov
mov
mov
cmp
setb
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sar
mov
movzx
add
mov
mov
mov
mov
shl
mov
mov
cmp
setne
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
mov
mov
mov
mov
add
add
mov
mov
cmp
jne
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
cmp
jl
jmp
jmp
mov
cmp
jge
mov
mov
mov
mov
shl
add
mov
mov
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sar
mov
movzx
add
mov
mov
mov
mov
shl
mov
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
mov
mov
mov
mov
add
add
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
add
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
cmp
jne
mov
mov
mov
cmp
jge
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
cmp
setl
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
sub
mov
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
sub
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
jmp
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
mov
mov
mov
mov
add
mov
mov
shl
add
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
setb
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sar
mov
movzx
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmovl
mov
mov
mov
add
mov
mov
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
mov
mov
mov
mov
add
mov
mov
shl
add
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sar
mov
movzx
add
mov
mov
mov
mov
add
mov
mov
shl
shl
add
mov
mov
shl
add
mov
mov
cmp
setb
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sar
mov
movzx
add
mov
mov
mov
cmp
sete
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
jmp
mov
mov
mov
cmp
jae
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
add
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
cmp
cmovl
mov
mov
mov
mov
sub
mov
mov
mov
mov
cmp
jb
mov
mov
mov
mov
add
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
cmp
sete
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
mov
mov
mov
mov
add
mov
mov
shl
add
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sar
mov
movzx
add
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
mov
mov
mov
mov
add
mov
mov
shl
add
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
setb
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sar
mov
movzx
add
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
cmp
cmovl
mov
mov
mov
add
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sar
mov
movzx
add
mov
mov
mov
mov
add
mov
mov
shl
shl
add
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
mov
mov
mov
mov
add
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
setb
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sar
mov
movzx
add
mov
mov
mov
mov
add
mov
mov
shl
shl
add
mov
mov
mov
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
add
mov
mov
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
setb
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sar
mov
movzx
add
mov
mov
mov
mov
shl
mov
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
mov
mov
mov
mov
add
add
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
add
mov
cmp
jne
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
shl
mov
mov
sub
mov
mov
mov
mov
add
mov
mov
cmp
setl
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
add
mov
mov
mov
add
mov
cmp
setl
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
jmp
mov
mov
jmp
mov
shl
shl
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
add
mov
mov
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sar
mov
movzx
add
mov
mov
mov
mov
shl
mov
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
mov
mov
mov
mov
add
add
mov
jmp
mov
mov
add
mov
cmp
jne
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
sub
mov
cmp
setge
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
sar
sub
mov
mov
mov
and
or
mov
mov
cmp
jge
mov
mov
mov
mov
mov
shl
mov
mov
mov
add
mov
shl
add
mov
sub
shl
add
add
mov
mov
jmp
mov
mov
sub
mov
mov
cmp
jae
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
shr
mov
mov
mov
shl
mov
mov
mov
cmp
jb
mov
mov
mov
mov
sub
mov
mov
mov
or
mov
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
add
mov
cmp
setne
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
add
mov
mov
mov
mov
shl
mov
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
shl
add
mov
mov
mov
cmp
setb
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
setb
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sar
mov
movzx
add
mov
mov
mov
mov
shl
mov
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
or
mov
mov
mov
mov
shl
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
add
mov
cmp
setne
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
add
mov
cmp
jne
mov
mov
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
add
mov
mov
mov
mov
cmp
jbe
mov
mov
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
sub
mov
cmp
seta
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
add
mov
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
jmp
mov
mov
mov
sub
mov
mov
mov
mov
cmp
jb
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
add
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
cmp
jne
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
cmp
setne
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
mov
test
mov
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
cmp
setb
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
mov
jmp
mov
test
jne
jmp
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
cmp
setb
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
mov
add
sub
mov
mov
sub
mov
cmp
jge
mov
mov
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
cmp
setl
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
pop
pop
pop
pop
ret
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
sub
mov
mov
mov
mov
mov
mov
shl
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmovne
mov
mov
jmp
mov
mov
mov
mov
mov
mov
add
mov
shl
add
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
jmp
mov
mov
jmp
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sar
mov
movzx
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
and
mov
mov
mov
mov
mov
shl
mov
movzx
mov
mov
sub
mov
mov
mov
sar
add
imul
shl
add
mov
mov
jmp
mov
mov
mov
mov
sub
mov
mov
jmp
mov
mov
shl
mov
mov
and
mov
mov
mov
mov
add
mov
shl
add
mov
mov
shl
add
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sar
mov
movzx
add
mov
mov
mov
mov
shl
mov
jmp
jmp
jmp
jmp
jmp
mov
mov
add
mov
jmp
mov
mov
jmp
jmp
mov
mov
sub
mov
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sar
mov
movzx
add
mov
mov
mov
mov
add
mov
mov
shl
shl
add
mov
mov
shl
add
mov
jmp
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sar
mov
movzx
add
mov
mov
jmp
mov
mov
add
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
jmp
mov
mov
jmp
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
cmp
cmovl
mov
mov
mov
add
mov
mov
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sar
mov
movzx
add
mov
mov
mov
mov
add
mov
mov
shl
shl
add
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
mov
mov
mov
mov
mov
add
add
mov
jmp
jmp
mov
mov
mov
shl
mov
mov
sub
mov
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
jmp
mov
mov
sub
mov
jmp
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
jmp
mov
mov
add
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
shl
add
mov
mov
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
jmp
mov
mov
add
mov
jmp
mov
mov
mov
mov
jmp
jmp
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
add
mov
jmp
mov
mov
jmp
jmp
jmp
jmp
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
jmp
mov
mov
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
xor
cmp
inc
and
(bad)
mov
xor
mov
cmp
sub
push
mov
mov
lods
sub
pop
test
add
pop
and
sub
mov
mov
fdivr
and
sub
mov
jg
sub
add
add
xor
mov
je
jmp
mov
adc
jo
fs
and
jg
jmp
jl
and
sub
inc
out
and
lds
mov
add
jmp
mov
sub
mov
adc
add
shr
jp
cmp
arpl
(bad)
in
mov
and
je
and
add
mov
shr
mov
je
push
add
mov
sub
mov
paddd
movs
add
pop
jl
mov
arpl
out
out
add
test
add
les
mov
push
add
mov
pop
cdq
and
cmp
cmovle
xchg
add
scas
sbb
push
das
sahf
mov
sub
sub
add
pop
call
(bad)
pop
popf
xor
adc
jmp
add
mov
and
mov
dec
sbb
mov
in
add
cmp
mov
enter
mov
mov
and
scas
jmp
dec
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movs
ins
pop
mov
jns
xlat
mov
and
fadd
xchg
mov
fwait
lahf
add
add
adc
loopne
jl
sbb
outs
pop
mov
add
je
add
pop
sub
(bad)
movs
gs
nop
adc
sub
mov
mov
ror
jmp
or
mov
addr16
inc
mov
sub
fwait
pusha
sub
repnz
cli
sub
push
pop
mov
add
add
imul
and
mov
(bad)
pmulhuw
daa
add
fisttp
push
mov
and
jg
jmp
mov
sub
mov
(bad)
sbb
xchg
add
add
and
icebp
js
mov
adc
and
maskmovq
not
fild
loopne
jmp
and
pop
pop
mov
dec
jg
xor
adc
dec
pop
test
inc
and
unpcklps
jns
add
mov
icebp
not
adc
adc
data16
or
adc
add
adc
pop
xchg
(bad)
mov
jg
adc
add
add
and
sub
push
sub
lods
add
add
add
loopne
adc
ins
sub
mov
cdq
pop
inc
add
add
pop
cmp
shl
or
(bad)
ins
adc
loopne
fwait
add
repnz
mov
xchg
cwde
xchg
mov
inc
and
movlps
xchg
add
lahf
imul
mov
pcmpgtb
add
jns
mov
sub
mov
imul
jmp
mov
or
push
movs
rcr
adc
sub
jmp
mov
sahf
(bad)
inc
retf
and
test
mov
push
and
sub
mov
std
pop
repnz
add
xor
mov
mov
fmul
sub
cdq
add
(bad)
pop
and
mov
sub
mov
rcl
jle
add
jmp
adc
and
pop
add
mov
adc
mov
repnz
pop
xchg
add
push
ret
and
mov
test
add
add
ret
repnz
mov
pusha
jle
mov
nop
add
jmp
movs
gs
int
add
push
mov
je
jmp
mov
push
jno
mov
rol
imul
add
mov
mov
arpl
ins
add
add
lods
sbb
js
jle
add
xchg
setb
js
add
rcr
and
jmp
adc
cwde
test
and
add
add
mov
jno
and
outs
repnz
fstp
jmp
pop
mov
inc
jae
and
add
fmul
out
mov
out
xor
sub
loopne
add
in
fwait
mov
xchg
push
jl
loop
mov
fwait
movzx
mov
xor
sub
or
push
inc
xor
and
rep
xrelease
and
adc
xlat
or
mov
mov
and
jl
mov
dec
adc
cmp
xchg
test
mov
cmps
gs
jo
out
add
mov
push
js
mov
fadd
pminub
loopne
and
jmp
aam
les
sub
mov
stos
js
stos
rol
fwait
lahf
mov
cli
in
and
mov
add
inc
push
or
imul
and
pop
inc
push
sub
lahf
imul
test
out
ins
add
sub
pop
loop
div
and
mov
(bad)
xor
add
pop
mov
jo
pusha
mov
fist
js
iret
mov
jl
add
mov
or
mov
or
sub
ret
pop
dec
pop
push
fdiv
and
xchg
add
dec
push
ret
mov
fimul
adc
aad
mov
xor
mov
mov
and
jae
and
mov
inc
inc
inc
and
shl
sbb
imul
push
or
jmp
nop
push
mov
push
push
push
and
sub
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
adc
or
cmp
js
sti
push
lea
shl
and
mov
add
test
cld
jo
clc
out
cmp
sub
jbe
es
push
stos
sub
mov
mov
cli
call
inc
arpl
mov
sub
mov
inc
sub
stc
add
add
add
add
jmp
mov
inc
and
dec
(bad)
scas
add
cld
cdq
dec
add
aas
sub
inc
sbb
inc
and
paddsw
add
add
add
cdq
(bad)
call
mov
xor
adc
mov
cld
add
mov
sub
mov
push
dec
paddsw
jbe
jo
add
add
sbb
mov
(bad)
or
add
add
mov
mov
pop
sub
jg
mov
add
mov
pop
push
cmp
clc
adc
mov
cli
(bad)
lods
add
add
add
mov
mov
sub
jmp
add
add
dec
aas
add
jle
pop
push
mov
inc
push
xchg
jns
dec
add
add
add
inc
xchg
sub
shl
test
add
dec
aas
sub
and
sub
xor
xchg
leave
jmp
add
add
mov
nop
xchg
mov
xor
pop
jb
jo
xor
ror
sub
out
adc
and
test
pop
mov
stc
or
btc
mov
push
add
xor
retf
sub
mov
imul
lods
bound
add
add
dec
retf
mov
inc
test
aas
add
add
inc
mov
sub
mov
(bad)
adc
add
cwde
sub
(bad)
jnp
js
xlat
ins
add
jmp
mov
push
fs
and
out
add
adc
add
push
sbb
and
btc
inc
add
and
and
sub
mov
je
pop
xor
and
pop
mov
es
inc
and
je
mov
add
mov
push
popf
sub
mov
je
jmp
cld
push
add
in
fistp
mov
ja
and
aas
add
cmp
inc
ror
arpl
mov
mov
add
and
xchg
xchg
sbb
add
add
push
mov
cmp
lahf
add
mov
mov
push
adc
scas
add
es
mov
mov
cmp
cmovne
inc
ja
jmp
jmp
dec
push
js
lea
mov
and
mov
mov
mov
pop
mov
push
rcl
mov
and
cdq
xchg
add
dec
xchg
idiv
and
mov
mov
jmp
(bad)
jmp
push
cdq
and
add
mov
mov
and
dec
inc
ins
sti
jecxz
mov
add
dec
daa
shr
xchg
sbb
scas
mov
adc
les
fisub
sub
(bad)
sub
add
cdq
add
add
mov
jmp
xchg
inc
mov
inc
add
arpl
mov
and
pop
rcl
call
inc
add
push
mov
push
push
push
and
push
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
pop
add
dec
add
mov
(bad)
gs
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
jmp
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
jge
mov
mov
ret
jg
mov
js
xchg
mov
fld
add
mov
loop
or
add
jle
(bad)
into
and
add
add
and
aam
jo
pop
shl
jg
add
mov
(bad)
dec
pop
mov
xor
mov
add
xor
mov
and
add
dec
or
add
(bad)
and
add
jmp
mov
and
dec
add
mov
sub
je
inc
adc
push
(bad)
mov
sub
add
add
inc
cli
xlat
inc
add
dec
scas
sub
mov
aam
add
push
add
mov
jne
jmp
shl
sub
mov
push
cmp
outs
test
add
jmp
mov
sub
mov
add
test
add
dec
test
or
add
jp
and
add
scas
(bad)
and
mov
add
outs
test
xchg
dec
(bad)
and
add
add
test
pop
dec
mov
std
sub
aam
mov
mov
jnp
or
and
add
jmp
mov
sub
cmp
popa
sub
das
and
add
add
sub
ret
and
add
(bad)
add
add
mov
mov
dec
add
sub
mov
and
add
add
js
add
jmp
cdq
test
addr16
adc
mov
and
add
jne
jp
add
jmp
mov
dec
repnz
mov
jo
test
adc
mov
pop
aam
cdq
add
add
mov
jo
into
ins
mov
jg
mov
cmp
add
mov
jg
jmp
js
and
add
add
sub
and
add
add
add
mov
inc
cmp
push
mov
pmaddwd
add
jmp
mov
dec
add
fst
mov
fisttp
and
add
cdq
add
outs
add
test
push
add
jmp
mov
and
pextrw
add
add
aam
pop
outs
xor
push
mov
jg
loope
add
add
add
sub
xor
sub
pop
jns
jo
xchg
add
dec
(bad)
jp
shr
out
test
add
cld
(bad)
movs
jmp
mov
xchg
sbb
out
dec
test
jp
add
(bad)
sub
add
jmp
cmc
test
repnz
mov
or
aam
jg
cwde
or
add
add
pop
inc
add
add
mov
mov
scas
add
add
add
or
outs
test
mov
add
add
test
and
add
add
sub
pop
test
xchg
popa
es
jp
jmp
inc
test
dec
add
sub
xor
je
jmp
mov
add
xchg
sub
add
jl
mov
add
dec
add
xchg
addr16
mov
push
test
stos
dec
add
mov
add
xchg
mov
dec
add
jg
loope
add
add
and
repnz
add
scas
lock
jg
stos
or
push
das
adc
add
mov
mov
cmp
jne
sub
jg
jmp
in
and
mov
and
mov
jle
test
mov
add
xchg
xchg
data16
jo
out
or
mov
xchg
add
add
add
add
cmc
ja
dec
add
cwde
jl
test
ds
test
jp
jmp
inc
test
add
jle
imul
add
aaa
xor
add
jo
sub
add
mov
je
and
add
add
add
add
aas
in
cmp
sbb
pop
movs
jo
outs
jmp
fiadd
sub
mov
je
jmp
cs
dec
adc
add
add
add
mov
add
push
das
add
jp
mov
sub
sub
and
add
and
loop
jnp
add
ins
mov
and
mov
enter
cmp
mov
sub
mov
cld
(bad)
mov
add
pop
test
add
test
xchg
pop
pop
mov
jg
call
mov
and
add
dec
mov
(bad)
std
cmp
ud0
add
inc
add
add
(bad)
sub
add
retf
sub
mov
ucomiss
add
add
mov
sub
push
and
add
jmp
repz
pop
mov
adc
add
test
dec
aad
jo
or
lahf
mov
je
mov
sub
pushf
dec
adc
add
push
and
add
add
outs
inc
add
push
add
add
and
mov
cmovg
add
add
add
sub
stc
inc
and
popa
test
add
test
jp
test
add
add
jp
jmp
push
test
leave
sbb
add
(bad)
add
mov
les
push
test
add
lods
add
add
add
push
cmp
ins
fild
sahf
add
add
sub
add
retf
push
lea
push
adc
pop
mov
add
pop
test
sub
mov
psrlw
jle
add
xchg
add
retf
cmc
test
push
add
cmp
mov
mov
sub
mov
js
xor
sub
test
add
repz
xor
add
shr
cmps
test
add
add
retf
jle
ins
es
push
mov
dec
mov
sub
sub
xchg
mov
and
outs
add
cld
repz
and
ja
jmp
js
and
add
add
mov
mov
outs
jmp
dec
(bad)
and
or
add
div
push
add
mov
mov
scas
and
xchg
add
cmp
ds
xchg
mov
and
adc
mov
pmuludq
add
mov
test
add
add
cwde
lock
push
mov
cmp
add
sbb
test
jno
into
fs
and
and
xchg
mov
cs
inc
push
mov
push
mov
mov
sub
push
dec
outs
test
push
ja
ds
push
test
repz
jmp
test
sub
jl
inc
and
pop
inc
push
jl
add
sbb
add
cmc
ja
push
add
xor
inc
and
sbb
sub
add
add
add
ins
(bad)
cld
cmp
in
fmul
add
cmp
movsx
adc
add
pop
push
mov
mov
leave
int
push
mov
sub
add
add
test
ror
add
mov
adc
mov
aas
mov
out
sub
add
add
add
push
pusha
mov
jmp
xchg
cmp
es
mov
inc
or
add
push
dec
or
repz
stos
mov
fs
aad
and
cmp
jb
pop
add
add
mov
test
js
add
sub
inc
mov
fidiv
ins
or
add
pop
add
push
test
pop
dec
pusha
(bad)
(bad)
mov
or
add
add
mov
mov
mov
and
or
cld
(bad)
mov
pop
jns
aad
mov
cmp
cmovne
mov
inc
adc
jp
mov
mov
and
repnz
jmp
repnz
jne
mov
add
add
imul
or
add
adc
shr
xchg
jl
push
add
sub
(bad)
mov
sub
add
add
add
pop
mov
and
call
(bad)
and
lock
ret
cdq
mov
add
add
mov
pop
jg
add
mov
add
or
and
add
pusha
mov
mov
jo
adc
adc
inc
add
or
or
jg
add
mov
push
xchg
in
nop
mov
test
call
ret
outs
xor
cmp
mov
add
mov
add
push
ds
add
mov
push
retf
inc
or
out
xchg
add
movs
mov
test
mov
adc
inc
add
jecxz
dec
(bad)
and
add
retf
cmc
test
dec
add
scas
adc
mov
lea
inc
add
mov
mov
push
jnp
add
mov
daa
jg
retf
add
inc
add
and
repnz
mov
adc
movzx
pop
xchg
xchg
adc
inc
add
ret
outs
test
or
add
add
ret
popf
and
shl
mov
mov
mov
mov
(bad)
dec
jo
mov
mov
js
add
mov
mov
fwait
add
add
cmp
sub
and
mov
or
dec
and
pop
inc
mov
(bad)
(bad)
mov
mov
cmp
cmovl
mov
jmp
(bad)
and
and
xor
add
add
jmp
add
mov
xor
and
sub
add
add
fidiv
mov
mov
add
mov
ss
cmps
pop
(bad)
dec
add
sub
or
add
out
push
repz
les
iret
jg
repz
sub
pushf
or
imul
mov
jle
jmp
push
add
xchg
stos
push
add
jo
add
loop
add
or
mov
test
repnz
or
mov
jo
aam
mov
or
outs
test
add
add
add
and
test
inc
test
push
lock
jno
ret
jmp
dec
test
add
add
add
mov
and
mov
and
add
add
mov
jo
cmp
and
mov
mov
jb
inc
and
call
mov
mov
cmp
and
dec
stc
add
push
jmp
mov
jmp
and
sbb
add
test
push
add
dec
lea
mov
test
loop
in
dec
adc
retf
mov
pop
mov
push
mov
add
inc
mov
add
retf
jmp
sbb
xor
add
push
add
xchg
jmp
jle
jmp
(bad)
cld
(bad)
mov
mov
and
repnz
mov
bound
push
mov
aam
pop
jno
cdq
push
outs
test
test
or
add
add
(bad)
dec
and
add
add
fldenv
adc
mov
std
cmp
cmps
inc
rcr
loop
or
add
adc
add
cmc
ja
leave
add
movs
xor
xchg
call
in
test
add
add
movs
out
jmp
mov
jg
lds
mov
add
add
cmovne
mov
sbb
dec
mov
push
add
add
cli
sub
cld
inc
add
add
mov
(bad)
das
jl
push
add
add
add
test
add
xchg
mov
test
and
loope
loopne
inc
xchg
stos
push
add
add
add
inc
mov
test
jnp
mov
mov
mov
(bad)
mov
xchg
stos
push
add
push
(bad)
mov
add
add
call
jle
xor
and
add
pop
inc
in
push
and
aad
xchg
pop
xchg
mov
and
add
add
pop
scas
mov
adc
cmp
jmp
mov
and
call
mov
add
mov
cwde
ds
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
call
mov
jmp
mov
mov
call
mov
jmp
add
pop
ret
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
popa
sub
leave
vsubss
clc
loop
push
adc
dec
inc
mov
cld
aaa
or
mov
add
add
int3
aas
cdq
sub
inc
add
mov
and
out
(bad)
loope
cdq
mov
xor
and
lea
ret
ins
inc
mov
sbb
(bad)
and
mov
and
jg
jmp
mov
pop
sub
mov
sets
xor
add
in
mov
mov
pop
(bad)
add
les
sub
jbe
inc
inc
(bad)
and
gs
sar
sbb
mov
or
mov
out
aam
lds
jmp
mov
sub
mov
or
add
add
inc
and
sub
inc
inc
and
aaa
inc
xor
add
lods
add
add
sub
cmp
enter
jle
dec
mov
shr
or
pop
std
pop
mov
or
mov
add
and
mov
cmp
pusha
test
or
inc
and
bound
add
jmp
mov
mov
shl
jg
jmp
mov
and
sub
mov
(bad)
ds
add
push
fld
rol
inc
jnp
fs
mov
and
psubsw
add
jmp
inc
fwait
inc
shr
call
movsx
dec
repnz
add
enter
and
sub
mov
and
sahf
push
or
add
and
jmp
mov
adc
mov
div
add
push
das
sbb
add
(bad)
dec
mov
xchg
cmp
jno
jne
enter
call
(bad)
mov
inc
add
mov
leave
imul
jae
mov
and
jmp
mov
sbb
cmp
movs
xchg
inc
imul
jmp
pop
rol
cwde
mov
test
add
mov
imul
and
not
setbe
inc
jnp
adc
xor
add
mov
loope
push
mov
xchg
shr
add
and
pusha
push
loope
popa
jle
and
jmp
ret
pop
(bad)
xchg
out
lods
aad
mov
push
cmp
shl
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
ins
or
add
mov
mov
and
cmp
sbb
add
add
add
add
push
add
lea
cmp
xor
mov
rol
test
dec
repz
jmp
fdivr
add
mov
jns
mov
push
mov
mov
ins
(bad)
and
out
movs
repz
add
or
daa
pop
mov
int3
clc
add
test
add
jmp
mov
ret
add
sub
add
(bad)
and
add
dec
and
push
aas
jno
inc
loope
mov
aaa
add
fimul
ret
add
repnz
and
add
dec
cmp
pop
not
out
lea
add
(bad)
and
fiadd
jmp
adc
clc
dec
add
fstp
arpl
leave
rcr
add
mov
add
mov
sub
mov
jg
jmp
ins
leave
xlat
or
push
or
mov
scas
add
test
jp
add
xlat
out
cdq
repz
jg
js
fadd
xor
add
push
aas
xlat
out
xor
dec
repz
jno
fisttp
xor
scas
add
ds
push
mov
sub
mov
sub
(bad)
fild
add
jmp
mov
rol
mov
sahf
das
push
xchg
push
or
je
jmp
mov
sub
jl
and
pop
arpl
jmp
add
add
add
mov
and
or
add
mov
inc
sub
add
add
push
mov
and
add
retf
es
mov
push
test
push
or
jg
jmp
ret
sub
and
push
aas
sub
mov
and
repz
pop
lea
xor
cmp
push
aas
add
and
cli
nop
add
push
jg
shl
add
jp
cmp
mov
mov
ins
bound
add
lock
mov
sub
mov
scas
lss
cmc
add
pop
arpl
add
and
dec
repz
mov
add
add
ss
add
add
aam
aas
add
outs
test
(bad)
or
add
add
and
add
sbb
jnp
jl
fadd
add
add
js
and
add
push
sub
mov
push
js
(bad)
and
clc
add
test
scas
cmp
sbb
inc
inc
je
test
add
add
add
ror
out
mov
jg
adc
add
add
add
pop
mov
and
xor
ins
add
dec
js
and
add
add
cli
stos
sub
(bad)
sbb
add
fild
add
aam
add
adc
(bad)
mov
aad
and
jmp
add
xor
add
test
aam
add
pop
fs
sbb
daa
inc
and
jg
jmp
mov
daa
fiadd
add
add
test
add
cmp
jmp
pop
add
ins
cli
int
inc
cli
pop
jg
jmp
mov
adc
add
clc
gs
and
xor
retf
out
add
fiadd
sub
mov
jg
jmp
and
add
sub
outs
inc
imul
add
or
xor
jo
mov
jg
jmp
mov
inc
xor
repz
jle
dec
mov
and
jge
adc
dec
add
add
cmp
scas
push
outs
inc
imul
add
mov
cmp
outs
mov
movntq
out
out
add
fs
mov
sub
mov
(bad)
and
add
aam
add
cmc
mov
retf
sub
adc
inc
jbe
je
jmp
mov
sub
daa
inc
sbb
cli
(bad)
and
add
pop
add
ins
test
add
add
mov
and
add
add
inc
add
mov
and
add
add
add
gs
jmp
mov
sub
sub
shr
sbb
jno
cmp
dec
repz
or
daa
paddq
and
jp
add
pop
mov
add
dec
mov
sub
mov
push
sub
test
ins
cmc
push
add
dec
sub
mov
jge
shl
add
and
add
pinsrw
or
test
add
or
xor
mov
sub
daa
inc
sbb
pop
test
add
pop
mov
out
repz
mov
ins
jnp
adc
jns
xchg
and
clc
dec
scas
cmp
pop
jnp
mov
ret
repz
mov
push
add
mov
and
clc
dec
add
push
add
add
add
add
fld
and
push
mov
test
add
mov
jmp
inc
clc
js
fdivr
mov
and
cmc
add
std
add
daa
mov
xlat
push
add
add
push
add
push
mov
mov
jmp
mov
rol
xor
and
add
dec
addr16
int3
mov
and
push
or
mov
cmp
add
(bad)
stc
std
push
arpl
add
(bad)
out
mov
or
call
mov
push
test
mov
cmp
add
pop
add
arpl
(bad)
ret
and
mov
fild
cmp
mov
push
mov
add
sti
add
pop
xchg
ret
inc
mov
add
jmp
(bad)
mov
in
add
add
xor
jmp
fld
(bad)
jg
out
add
fisttp
call
mov
inc
sbb
adc
psubb
add
outs
mov
dec
repz
push
add
add
or
addr16
int3
outs
jmp
bnd
fadd
add
cmp
and
aas
pop
arpl
sub
add
mov
mov
aam
in
mov
fsub
dec
add
(bad)
rcl
and
out
add
xlat
xchg
in
mov
shl
xor
lods
add
scas
mov
call
test
cmp
jp
test
test
add
shl
add
mov
fadd
push
or
sahf
sbb
fcmovnb
xor
adc
and
push
aas
pop
jmp
pop
or
fld
add
xor
fadd
scas
add
xchg
add
cmp
add
add
gs
pop
add
mov
fadd
add
pusha
dec
inc
xchg
ja
push
add
test
add
add
xor
std
dec
add
add
add
jbe
mov
call
outs
test
add
add
xor
sahf
xchg
inc
pop
add
add
aas
pop
mov
movs
xor
and
add
test
xor
fadd
add
jmp
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
jmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sti
inc
retf
jle
or
add
add
pusha
in
mov
mov
mov
mov
(bad)
sbb
add
mov
and
add
push
add
add
cwde
push
add
test
jne
leave
inc
mov
int3
jo
cmp
xchg
rcl
sub
add
imul
cwde
push
add
mov
adc
test
enter
fild
jge
pop
cwde
push
add
mov
leave
add
add
mov
icebp
add
cmp
cdq
mov
int3
mov
enter
pop
jg
and
mov
jne
inc
mov
sub
call
add
add
add
sti
test
add
out
(bad)
pop
mov
push
mov
nop
jne
test
push
jl
inc
mov
call
add
(bad)
aas
ret
jo
add
add
test
inc
xchg
and
(bad)
sub
inc
add
jg
mov
je
test
add
adc
and
xchg
je
add
mov
rol
cmc
cld
jg
mov
jmp
add
add
add
adc
add
pusha
shr
daa
cdq
aad
and
add
add
popw
add
jmp
mov
in
aas
add
rcr
or
mov
and
add
jmp
xchg
retf
add
add
in
push
sub
mov
dec
aad
add
jl
mov
add
pop
test
add
jmp
gs
mov
add
and
add
jmp
mov
jge
xchg
dec
mov
add
test
mov
mov
rol
sti
inc
and
jbe
cdq
retf
push
fisub
mov
fbld
add
test
add
push
jl
aam
mov
test
add
jg
lahf
add
cdq
out
test
popa
add
inc
mov
mov
add
(bad)
jg
pop
imul
mov
sub
mov
jns
(bad)
loop
push
dec
mov
test
push
add
inc
js
mov
lock
icebp
jo
cmp
add
cdq
ins
test
popa
inc
xchg
add
test
test
aad
jns
add
or
shl
inc
and
add
mov
enter
test
mov
bound
in
add
mov
fistp
mov
mov
mov
sub
mov
out
xor
pop
rcr
test
add
jl
dec
fist
jo
add
(bad)
mov
xor
(bad)
jno
xchg
and
pusha
in
push
add
test
pop
xlat
xor
lea
jg
jmp
mov
shl
mov
ror
push
mov
jg
jmp
int
and
add
add
mov
mov
out
test
pandn
cli
or
je
push
(bad)
clc
test
jmp
mov
rcl
jo
jge
jnp
mov
mov
mov
pusha
add
addr16
cdq
test
push
out
lods
cmc
lea
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
psubb
int3
call
jmp
mov
push
pop
add
add
mov
inc
mov
add
jmp
(bad)
and
add
(bad)
(bad)
mov
and
repnz
out
dec
push
xchg
add
mov
and
add
push
sub
mov
lods
push
add
add
ror
jo
jmp
fild
std
mov
xchg
test
add
dec
dec
add
xchg
test
in
add
fsub
or
test
add
jo
inc
sbb
add
jbe
shr
or
test
add
jmp
mov
add
jg
bound
pmullw
leave
(bad)
cmp
test
cmp
add
outs
dec
test
(bad)
jl
add
jmp
mov
pushf
pop
test
pop
popf
mov
cmp
cmp
jmp
test
mov
mov
je
jmp
fiadd
inc
jae
xor
je
jmp
test
and
mov
and
stc
ret
push
jl
add
call
and
(bad)
cmp
pop
pop
sar
push
mov
iret
add
add
cmp
add
test
pop
pop
add
cld
xlat
shl
in
jecxz
hlt
rol
add
jmp
jmp
mov
mov
and
add
add
icebp
arpl
add
mov
and
add
(bad)
sub
add
(bad)
fucom
ret
add
mov
add
add
test
xor
add
add
retf
xchg
inc
daa
xchg
jl
add
addr16
lock
test
and
jl
call
inc
jl
daa
mov
mov
ss
sbb
mov
adc
test
add
add
mov
test
add
inc
fwait
mov
and
add
jo
test
add
add
out
mov
stos
add
or
inc
add
rcl
in
pop
mov
fmul
add
jle
add
rol
icebp
sub
inc
sbb
mov
xchg
sub
sub
and
pop
test
jle
xor
fild
call
sti
inc
and
cmp
jbe
mov
hlt
add
add
push
in
add
pusha
test
mov
retf
push
jl
add
jbe
push
add
add
mov
add
imul
jmp
mov
fldenv
sbb
mov
fmul
add
add
dec
inc
ror
(bad)
cmp
add
mov
jnp
push
clc
(bad)
jmp
mov
xlat
outs
xor
fmul
icebp
cmp
jbe
cmovne
xchg
jl
bound
in
mov
js
add
inc
(bad)
and
add
add
jno
inc
sbb
test
in
mov
and
jmp
enter
pop
mov
rol
jg
mov
call
jnp
aam
add
sti
test
add
add
outs
or
arpl
cli
(bad)
sti
dec
pop
outs
mov
lods
aad
and
pop
test
test
push
add
inc
test
das
add
add
xor
mov
and
add
add
cli
fnstenv
and
in
push
pop
jmp
mov
(bad)
repnz
not
add
jo
mov
cdq
jmp
data16
and
add
add
sub
add
mov
xchg
mov
(bad)
(bad)
cmp
mov
and
out
add
or
jmp
xchg
data16
dec
mov
mov
in
pop
add
add
loop
inc
add
int3
mov
ret
rol
sub
add
cmps
inc
sub
pop
mov
sbb
leave
add
lea
adc
xchg
mov
mov
mov
mov
(bad)
jge
(bad)
in
add
cmp
(bad)
cmp
std
mov
add
sbb
push
mov
in
push
mov
inc
inc
and
push
mov
rol
enter
movs
mov
jmp
mov
mov
mov
add
add
rol
dec
pop
test
jmp
fmul
pop
hlt
and
cmp
add
add
mov
sbb
mov
jnp
hlt
mov
pop
cmp
test
les
add
rcr
jmp
lea
test
add
add
in
sub
push
add
in
and
scas
jg
leave
add
add
jo
mov
hlt
add
jbe
ret
mov
(bad)
add
inc
pop
or
add
in
mov
jmp
