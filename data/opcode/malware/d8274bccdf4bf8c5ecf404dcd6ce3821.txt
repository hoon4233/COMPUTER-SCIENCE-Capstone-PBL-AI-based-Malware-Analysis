mov
adc
add
inc
outs
outs
ins
gs
outs
add
or
add
mov
ins
jae
add
jb
lea
sub
add
push
outs
(bad)
test
pop
dec
outs
je
addr16
and
rcr
xor
add
jns
ins
daa
push
outs
jb
add
pop
jns
inc
outs
(bad)
mov
repz
add
cwde
or
jae
jb
addr16
push
int
pop
push
xor
jnp
out
push
nop
xchg
mov
xor
xor
or
dec
inc
pop
push
dec
bound
arpl
pop
sbb
repnz
ins
dec
push
push
jns
gs
mov
adc
(bad)
dec
int3
sbb
sub
rcr
call
pushf
add
inc
and
clc
jmp
adc
inc
or
int3
inc
mov
in
in
xchg
xchg
gs
call
sbb
push
add
or
ins
pop
ds
adc
push
mov
les
jo
push
adc
loope
sar
mov
jmp
setl
xchg
nop
mov
jb
jb
mov
test
jl
je
jb
jb
ins
push
jb
lods
pop
pop
push
jb
jb
(bad)
sar
aam
int3
jb
jb
dec
inc
inc
cmp
mov
call
les
add
mul
fucomp
jmp
je
movzx
mov
ss
pop
ret
(bad)
cmp
daa
daa
daa
xor
and
and
daa
and
mov
std
jmp
add
push
add
enter
add
jg
mov
mov
mov
ret
lea
outs
(bad)
dec
push
inc
cmp
jne
mov
mov
mov
push
nop
mov
add
std
outs
ja
scas
mov
mov
xchg
ins
test
xchg
mov
mov
mov
jmp
lods
mov
mov
adc
add
jne
mov
mov
adc
ret
out
cld
mov
mov
mov
mov
mov
add
rcr
lock
out
push
or
push
or
ret
and
mov
outs
in
hlt
mov
push
or
inc
add
adc
or
aaa
sub
jne
(bad)
mov
cmp
call
push
(bad)
fisttp
sbb
xor
mov
add
loopne
mov
into
int
bound
jne
mov
ss
ins
shl
or
mov
dec
ret
jmp
pop
mov
pop
shl
add
iret
pop
repnz
sub
stos
fiadd
sub
mov
lock
pop
ret
mov
aam
or
or
xor
sbb
scas
sbb
sti
jne
sbb
nop
int
add
es
mov
cmp
mov
add
imul
adc
push
jg
mov
mov
test
je
mov
mov
cmp
(bad)
mov
push
sub
inc
lock
push
mov
data16
jge
stos
sub
rol
push
lahf
push
xchg
mov
add
mov
add
in
mov
pop
sbb
fucomip
mov
mov
pop
in
mov
call
test
mov
adc
in
es
(bad)
sbb
ja
mov
add
cmp
ja
cmp
jp
sub
or
or
loopne
hlt
outs
cmc
push
icebp
push
or
add
jo
out
sub
jne
mov
not
cmp
sbb
jno
scas
and
ins
sbb
xor
sub
imul
aas
jns
hlt
mov
mov
and
sbb
div
add
sbb
rcr
sub
or
lds
mov
rcr
cmp
add
xor
mov
cmp
or
fidiv
or
jbe
mov
push
ficom
sub
adc
dec
or
cmp
mov
mov
(bad)
xor
cmp
jmp
scas
mov
(bad)
sub
or
sbb
rol
jae
mov
cmp
jae
std
add
add
and
xchg
leave
add
cld
std
mov
cwde
clc
mov
(bad)
aas
or
add
icebp
mov
jnp
pop
shl
cmp
jg
push
xlat
stc
hlt
scas
outs
dec
movs
push
lods
cld
je
mov
inc
jmp
fnsave
jbe
xchg
out
fs
pop
add
test
push
div
cmp
movs
and
push
inc
in
mov
jge
in
(bad)
cli
fcomp
add
je
cmp
ds
or
jle
add
(bad)
mov
mov
xor
lea
or
mov
mov
add
pusha
pop
fcom
dec
xchg
ins
test
fwait
dec
lea
in
hlt
add
test
xchg
jmp
ret
sbb
cmc
jne
xchg
cmp
jnp
add
cmp
sub
loope
dec
inc
popf
adc
adc
xchg
xchg
pop
push
jge
cmove
aaa
jecxz
cmp
lock
jae
mov
ret
add
or
pop
inc
xchg
mov
xor
je
imul
push
cmps
add
je
add
adc
xor
jecxz
jl
add
sbb
std
cmp
push
push
push
mov
push
ja
dec
cmp
and
jno
mov
push
test
cmps
mov
or
sar
xor
jle
hlt
inc
cmp
jo
and
in
mov
mov
mov
pop
ds
pop
pop
push
adc
jmp
push
xor
enter
mov
cmp
pop
pop
out
mov
sbb
or
push
sahf
test
fiadd
rcr
push
mov
adc
imul
(bad)
mov
or
jp
ins
jne
or
jle
cmp
mov
mov
scas
push
mov
stos
sbb
inc
xor
fld
in
lock
pop
xlat
cmp
or
adc
stc
imul
xor
test
jns
add
sar
mov
mov
or
or
fnstenv
das
sub
mov
outs
(bad)
dec
and
js
shr
das
call
dec
or
push
mov
cmp
or
sbb
cmp
cld
inc
add
mov
js
lods
ret
in
push
adc
fimul
or
sbb
mov
inc
sub
test
cld
ins
jno
lahf
push
in
test
jp
jl
or
rcl
jo
or
loope
add
and
jle
xor
xor
je
add
lods
xor
lods
enter
ret
(bad)
sbb
add
je
mov
fcomp
jb
sub
cmp
cmp
test
add
push
lsl
mov
xor
cmc
fstp
or
fsub
test
jne
mov
test
out
not
bound
and
mov
iret
std
mov
(bad)
adc
dec
or
jp
and
rol
or
movs
fimul
lea
sub
cld
scas
(bad)
ins
sar
sub
sub
cmp
jge
retf
pop
inc
mov
je
adc
jecxz
sti
loopne
cld
lea
and
in
je
pop
aaa
mov
lds
or
ins
jae
lea
shl
xchg
and
sbb
nop
or
inc
and
jae
add
movs
mov
test
retf
adc
out
test
mov
fcom
hlt
dec
adc
mov
cmp
sar
jno
jmp
js
adc
jb
add
push
ins
fsubrp
sub
cmp
or
fs
pusha
scas
jb
mov
and
cmp
adc
or
mov
daa
cmp
mov
mov
xchg
sbb
or
cmps
shl
lea
movs
movs
mov
xchg
test
pushf
or
or
cld
daa
push
ds
mov
cmp
pusha
xchg
clc
xor
mov
inc
push
adc
repz
imul
(bad)
sub
sub
clc
pop
mov
dec
adc
pop
mul
outs
out
sub
add
adc
adc
aam
sbb
movs
pop
rcr
les
push
call
ret
js
mov
mov
sbb
mov
xor
sar
cmp
or
push
adc
or
arpl
pop
lock
add
shr
sub
mov
js
(bad)
jnp
lods
cs
pop
mov
cmp
pop
pop
jmp
sub
in
aam
dec
sbb
mov
add
movs
sub
cmp
push
rol
inc
add
out
aad
xor
sub
pop
sub
xor
jmp
adc
or
add
xchg
leave
jmp
repnz
jne
sbb
pop
pop
xor
and
fwait
pop
out
sbb
sub
or
je
sti
clc
stos
jle
pop
inc
or
ja
leave
push
push
cmc
sub
xor
add
or
sti
out
pusha
sub
test
jg
xor
pop
or
sbb
jns
mov
pop
inc
scas
shl
sub
or
xor
mov
cmp
mov
cmp
add
or
mov
in
jbe
bswap
and
sbb
cmp
sar
sub
mov
add
arpl
sbb
loop
jmp
inc
in
ss
sbb
jae
and
push
adc
push
or
aad
sbb
mov
test
or
jo
lods
nop
xchg
pop
xor
mov
push
test
jne
test
ja
test
or
call
push
js
push
add
loope
push
or
add
or
test
and
or
cmp
inc
push
sbb
pandn
in
ret
mov
cmp
addps
cmp
in
and
add
cmp
aas
mov
adc
ret
sbb
cli
call
add
or
or
jmp
mov
cmp
(bad)
pop
push
or
adc
or
push
shl
sbb
sar
scas
jmp
dec
and
mov
cmp
add
out
mov
mov
sub
jge
loope
in
mov
lds
(bad)
mov
(bad)
lock
adc
jno
nop
sub
not
rol
xchg
(bad)
jge
sub
neg
add
mov
pusha
pushf
mov
fstp
push
cwde
or
and
fimul
punpckhwd
(bad)
jmp
or
cmp
cmp
jecxz
push
call
je
scas
xor
dec
daa
add
call
add
mov
or
push
dec
add
push
shr
sub
cwde
jge
loopne
mov
loop
sub
paddsb
xchg
or
inc
daa
sub
test
test
add
ret
add
ret
sbb
or
mov
or
dec
addr16
push
fcom
retf
sbb
adc
push
mov
dec
mov
icebp
lahf
sysret
adc
add
ss
adc
popa
shl
mov
fild
xor
add
adc
retf
xchg
dec
sbb
jbe
mov
lahf
nop
add
shl
test
adc
std
jle
call
or
mov
(bad)
lock
add
xor
sbb
enter
or
add
mov
add
sub
(bad)
sub
bound
shl
arpl
add
mov
shr
xchg
dec
sbb
ret
shl
add
inc
icebp
pop
inc
push
sbb
sub
xor
jg
mov
loop
inc
mov
cmp
fs
dec
sbb
or
jo
movzx
add
icebp
(bad)
cwde
dec
adc
inc
pop
int3
ud1
(bad)
loopne
adc
and
ret
push
push
push
xor
pop
mov
xchg
fidiv
rcl
pop
ds
jl
ret
fwait
dec
mov
or
je
pop
(bad)
jg
jg
sbb
ret
sub
inc
fdivr
sar
(bad)
mov
inc
rep
jmp
icebp
mov
test
leave
jmp
mov
jmp
mov
hlt
push
mov
mov
add
pop
adc
stos
nop
sbb
(bad)
mov
fistp
div
je
dec
js
rep
xchg
mov
scas
mov
xor
lea
xor
std
xor
jnp
or
mov
jle
fnclex
fldcw
add
cmp
pop
sub
fist
ret
movs
loope
fwait
pop
pop
inc
mov
push
test
clc
add
adc
ss
adc
sub
xchg
dec
sub
(bad)
(bad)
cmps
imul
loop
jmp
cmp
pop
mov
je
cmp
and
pop
add
sbb
out
(bad)
call
sbb
div
outs
pop
shl
das
or
and
jmp
jne
call
mov
test
adc
push
fistp
cmp
push
pop
arpl
rol
(bad)
mov
sbb
retf
jp
mov
or
sbb
xchg
stc
dec
xchg
ror
inc
das
sar
dec
ja
add
push
shr
je
mov
pop
cmp
jne
mov
rol
mov
pop
add
aaa
mov
fwait
neg
loop
push
adc
add
and
je
mov
cmp
cld
dec
jne
dec
je
mov
cmp
jne
or
add
outs
pop
loopne
sbb
and
pop
cmp
cmp
jne
shr
(bad)
outs
cwde
push
aam
sbb
not
into
shr
repz
loope
mov
inc
dec
dec
pop
repz
out
add
or
ret
and
imul
dec
dec
dec
and
int
dec
sbb
dec
add
mov
jl
mov
add
push
pusha
push
add
jmp
fst
fcomi
pop
rcr
test
sub
add
add
neg
sub
dec
in
hlt
ffree
add
push
mov
idiv
fidiv
adc
pushf
sub
sbb
sbb
out
sbb
adc
adc
sahf
out
or
sti
push
loopne
pop
or
pop
push
push
outs
pop
sbb
ins
and
mov
push
inc
pop
and
int
div
add
je
and
je
mov
je
xor
dec
and
sti
jnp
inc
fidiv
add
sub
or
cmp
ja
(bad)
mov
push
add
push
push
out
int
std
jg
mov
sar
jmp
inc
mov
fdivr
js
pop
sub
jmp
inc
fnstsw
cli
inc
jmp
mov
fild
aaa
in
lods
xchg
and
add
or
in
shl
stos
aad
cwde
pop
xor
mov
mov
xor
mov
(bad)
std
in
cs
cmp
mov
inc
mov
dec
jne
shl
repz
test
jecxz
add
dec
je
adc
xor
ss
jmp
ja
in
push
pop
sub
add
je
das
xchg
sub
popa
out
inc
sub
jmp
xchg
mov
jge
mov
xor
movs
xor
push
frstor
fmul
fcomp
stos
push
push
bound
(bad)
jg
aas
mov
nop
daa
enter
inc
pushf
or
enter
ret
mov
adc
in
pop
and
sbb
add
mov
and
movs
aam
pop
add
mov
sub
sub
pop
jecxz
(bad)
out
jle
mov
lds
mov
jbe
imul
cmp
out
call
mov
bound
cmp
cld
fwait
jg
xlat
fadd
outs
xor
xchg
push
or
push
push
(bad)
fbld
ret
inc
mov
push
pop
test
enter
mov
inc
(bad)
(bad)
call
and
daa
(bad)
retf
into
pop
inc
test
xchg
clc
js
aas
sbb
pop
(bad)
(bad)
(bad)
(bad)
jmp
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
sub
(bad)
jmp
inc
aad
iret
dec
js
inc
mov
stos
mov
cmp
or
mov
(bad)
inc
pop
out
sub
imul
(bad)
div
jl
xor
cmp
call
mov
(bad)
call
jle
push
inc
mov
push
sbb
sar
repnz
test
es
ror
nop
fild
daa
movs
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
inc
pop
pushf
mov
pop
pushf
mov
fs
(bad)
(bad)
(bad)
call
repz
loope
jp
iret
inc
bound
ds
push
cmps
scas
mov
pop
or
(bad)
(bad)
push
xchg
leave
dec
dec
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmps
lock
cld
rcl
popa
je
fsub
addr16
repz
mov
sar
inc
mov
push
pusha
les
outs
bound
xor
jmp
fisttp
fisttp
pop
jne
push
sbb
cmps
repz
rcl
inc
cmc
inc
cmp
hlt
movzx
pop
mov
push
push
push
and
mov
dec
or
xor
inc
hlt
sahf
cmps
imul
data16
add
inc
mov
and
inc
sub
int
test
out
jecxz
and
clc
data16
jl
fwait
pop
aas
or
fwait
mov
ret
push
dec
(bad)
(bad)
(bad)
inc
push
inc
push
inc
pop
inc
outs
jb
popa
outs
fs
inc
gs
jo
imul
push
dec
popa
jae
fmul
imul
jne
fninit
fwait
std
rcr
(bad)
mov
aas
cld
xlat
mov
xor
mov
inc
xchg
or
mov
rol
mov
or
dec
cld
jne
dec
mov
loope
das
shl
push
out
jne
jb
inc
mov
adc
fisub
inc
fdiv
mov
shl
adc
push
enter
pop
pop
sti
sbb
push
call
jnp
push
in
test
or
and
push
movups
retf
push
mov
pop
pop
lahf
push
test
xor
test
loopne
mov
ds
scas
mov
jl
mov
psllw
dec
fdiv
rcl
add
stos
pop
and
sub
fadd
push
mov
or
mov
jmp
cmp
std
push
fdivr
je
pop
mov
add
jae
xchg
push
mov
mov
mov
lahf
mov
jne
aas
lods
lahf
add
(bad)
mov
mov
jbe
sub
cmp
push
clc
jmp
mov
adc
inc
xchg
cmp
xchg
jae
paddd
shufps
and
loope
adc
pop
and
add
cmp
pop
jnp
inc
mov
clc
push
cld
mov
dec
mov
out
and
clc
xor
xchg
jnp
mov
ficom
add
mov
mov
push
push
mov
push
add
pop
lea
test
pop
imul
and
sub
cmp
and
dec
setne
lahf
(bad)
mov
in
and
lock
xor
pop
and
loop
push
rcr
jne
jb
cmp
mov
push
or
jne
or
ret
cwde
push
inc
inc
fcom
mov
jmp
add
outs
adc
and
(bad)
outs
loopne
test
mov
mov
cmp
je
mov
leave
jne
loope
jecxz
mov
xchg
nop
push
xchg
jmp
retf
xchg
mov
dec
or
mov
or
mov
inc
neg
pop
add
sub
cs
mov
retf
sbb
jmp
enter
mov
cmp
mov
mov
idiv
push
lds
push
data16
cld
mov
data16
adc
pop
ror
mov
popa
lock
out
dec
sahf
xchg
xor
mov
ror
pop
popa
pop
bound
mov
cmp
sbb
jmp
into
dec
jne
icebp
fucomi
sbb
add
sbb
sbb
cmps
pop
jecxz
dec
cmp
scas
lahf
sbb
enter
addr16
imul
fcomp
sbb
mov
call
add
mov
add
xor
hlt
xor
into
adc
out
sar
mov
mov
mov
or
or
sub
es
sub
cmps
cmps
pop
cwde
or
or
test
and
aaa
adc
push
clc
push
imul
add
in
inc
push
mov
pop
or
sbb
push
stos
jnp
or
jg
pop
lea
pop
out
cmp
add
add
sbb
inc
popa
data16
cli
in
push
call
pop
loopne
jns
push
pusha
push
push
cmp
ficomp
xchg
cmp
dec
cs
add
pop
or
add
and
pop
test
push
and
sbb
jmp
jmp
or
jne
movsx
inc
inc
jmp
add
ss
addr16
jecxz
sub
mov
and
fdivr
test
rcl
jecxz
pop
(bad)
or
or
inc
add
jne
stos
out
cmp
push
dec
adc
outs
xchg
and
add
je
aam
in
out
xor
pop
jmp
out
push
je
dec
sub
aaa
lods
xor
sub
sub
or
mov
add
arpl
mov
enter
adc
jne
jbe
adc
pop
xor
add
mov
sub
ss
rcr
push
xor
loopne
cmp
sub
push
daa
adc
push
sub
dec
cwde
mov
inc
add
aaa
rol
add
div
inc
pop
daa
out
mov
mov
out
inc
or
dec
mov
js
outs
je
dec
or
pushf
push
retf
push
add
adc
or
jle
std
vmulps
lds
aaa
sbb
clc
add
cmp
adc
loope
jne
in
push
jmp
inc
inc
mov
jg
push
sbb
movs
scas
push
dec
jne
movs
shl
lds
jmp
sbb
sbb
and
push
adc
adc
shl
mov
add
xchg
cmp
push
dec
loope
or
inc
icebp
push
popf
jo
xor
add
pushf
jae
cmp
ret
push
sub
dec
xchg
pop
or
and
inc
sub
push
push
push
mov
stos
sar
stc
mov
cmp
js
rcr
inc
or
sbb
test
adc
rcl
adc
adc
push
ins
fimul
jae
mov
adc
and
push
lods
pop
(bad)
fdivr
add
hlt
loop
xor
mov
xchg
test
push
or
daa
mov
(bad)
cs
cmp
je
cmp
push
sub
cmp
sub
je
jmp
add
sub
in
inc
jb
je
jmp
cmp
cmp
adc
mov
jmp
sub
cmp
mov
jmp
mov
jmp
mov
(bad)
(bad)
dec
jmp
mov
jmp
push
sbb
into
jmp
mov
jmp
mov
jmp
mov
jmp
push
(bad)
retf
movzx
push
or
movs
jp
pop
add
jno
jecxz
jg
lea
jns
push
stos
ss
or
dec
pop
test
mov
add
sbb
jbe
pusha
mov
or
push
inc
jmp
push
fmul
sub
in
mov
fld
push
adc
or
adc
xor
scas
or
mov
movs
fmul
sti
faddp
mov
or
adc
xor
cmp
test
test
call
repnz
cmp
jne
and
add
mov
sbb
jle
js
pushf
cdq
cmp
mov
je
add
cmp
sub
adc
mov
cmp
adc
sub
sub
sub
inc
pop
fldcw
cmp
jle
dec
ds
jle
xor
inc
xlat
iret
cmp
jg
inc
mov
mov
sbb
mov
inc
stc
pushf
(bad)
inc
cmp
add
add
ret
jne
xchg
add
xchg
mov
sbb
mov
push
push
mov
add
dec
loopne
dec
jne
pop
pop
out
imul
or
in
shl
add
mov
mov
daa
lock
add
icebp
mov
add
adc
and
and
(bad)
dec
fstp
mov
push
add
loopne
inc
or
ror
xor
div
push
rcr
sbb
xchg
rol
mov
fisttp
mov
sbb
push
add
mov
mov
test
movs
push
leave
out
xchg
pop
fistp
push
cmp
sub
cmp
mov
mov
mov
push
push
test
add
lock
xor
add
cmp
xor
adc
adc
cmp
sbb
pusha
lock
lock
add
sub
adc
lods
sub
and
ret
jge
inc
lock
icebp
cmp
adc
outs
icebp
or
add
ds
or
fild
xor
arpl
mov
aam
adc
sbb
scas
js
mov
and
cmp
je
pop
jmp
aaa
inc
ins
and
add
push
mov
ins
add
sbb
mov
adc
jo
les
mov
mov
int
aam
xchg
cmp
in
pop
pop
fstp
dec
rol
pop
cwde
dec
clc
dec
jl
lock
hlt
push
lea
pop
cs
out
push
(bad)
mov
push
sbb
add
or
loop
jne
push
push
call
inc
inc
jg
and
call
ret
dec
sbb
pop
pop
jmp
jbe
xchg
add
not
xchg
jle
test
push
add
daa
icebp
lea
mov
or
retf
push
cld
adc
add
push
push
fistp
mov
mov
das
rol
call
push
ds
cmp
xor
jl
mov
dec
ss
or
push
mov
movs
add
push
sbb
mov
add
cld
jbe
std
es
fdivr
out
(bad)
pop
fsubr
add
sub
or
mov
adc
inc
out
jl
int
mov
and
test
sub
fistp
sahf
cmp
pop
sbb
add
cld
(bad)
cmp
mov
mov
or
mov
mov
pop
rcl
sbb
sbb
call
fidivr
pop
neg
shr
pop
(bad)
pop
sub
and
pop
pop
or
push
push
addr16
in
inc
ds
add
adc
or
or
mov
mov
add
scas
mov
pop
pop
xor
pop
stos
clc
mov
push
and
xor
adc
fnstcw
mov
inc
add
sbb
xor
ret
push
aas
test
fcomip
mov
mov
push
cld
add
cmp
pop
and
mov
adc
hlt
sbb
and
jmp
xchg
cmp
adc
or
and
or
mov
imul
xor
loopne
cld
add
out
inc
or
dec
mov
cli
lds
mov
add
pop
push
into
or
add
mov
jmp
adc
mov
xor
mov
imul
cld
dec
jmp
dec
mov
or
push
cmp
fs
dec
jne
mov
pop
out
ja
jge
and
push
paddd
aaa
add
dec
jmp
and
inc
pushf
sbb
push
ss
add
pop
dec
jne
push
xor
xchg
dec
add
pop
lea
jmp
xchg
dec
pop
add
push
sub
adc
imul
ja
pop
xor
and
add
pop
outs
cmp
push
mov
dec
add
loope
mov
daa
xchg
and
jmp
aam
pop
lods
or
fist
scas
inc
das
lods
push
add
add
movs
inc
in
mov
je
push
scas
pop
jmp
adc
dec
gs
lea
loop
jecxz
es
mov
out
xor
or
jbe
fisubr
inc
es
jl
cmp
jge
sub
out
xchg
sbb
push
lds
adc
shr
in
jmp
and
jne
in
(bad)
xor
popa
ror
xchg
retf
jl
sub
rcr
mov
icebp
mov
add
stc
add
lea
inc
xor
movs
push
push
dec
xor
push
or
lahf
cdq
mov
push
clc
sti
icebp
pop
mov
sub
xlat
adc
imul
aaa
cld
in
clc
add
gs
cmp
mov
mov
lea
push
pusha
sub
mov
movs
jmp
icebp
cmp
mov
push
ins
sti
jge
std
dec
js
mov
inc
jb
adc
adc
cmps
pusha
sbb
pop
and
pop
fmul
inc
jno
mov
pop
xchg
and
xlat
push
nop
dec
and
lods
and
sbb
cmp
push
or
loopne
or
sbb
jecxz
mov
jo
(bad)
xchg
jmp
out
aad
div
(bad)
arpl
cli
pop
cmp
ficomp
stos
shl
pop
mov
or
ret
push
push
(bad)
rcr
in
add
adc
push
jbe
add
das
loopne
mov
inc
lock
(bad)
cmps
in
mov
push
cmp
call
mov
xor
pop
push
inc
test
jmp
pop
push
nop
pop
pop
clc
jle
push
cld
(bad)
jb
push
in
in
aaa
in
or
dec
ds
pop
sbb
dec
aaa
enter
xor
sub
ret
mov
sub
add
lsl
and
stos
mul
xor
add
add
xlat
out
pop
add
cmp
scas
jb
push
push
inc
and
add
cmp
fwait
pop
push
add
pushw
in
mov
arpl
jg
rcl
xchg
mov
loope
add
sbb
jge
shl
jl
dec
cmp
nop
pushf
call
sub
cmp
push
lods
add
add
or
jle
sub
lahf
je
jle
cdq
xor
ret
stos
or
mov
not
leave
xchg
test
mov
push
or
add
xchg
jl
push
sbb
push
mov
aas
cmp
pop
movs
jp
jg
aaa
sahf
mov
pop
inc
sbb
jp
icebp
(bad)
jg
cmp
je
cmp
je
cmp
je
cmp
je
cmp
mov
je
mov
push
sbb
sbb
cmps
(bad)
adc
mov
add
shl
mov
and
out
jmp
call
fld
pop
jo
pop
cs
cs
adc
cmp
pop
push
rcr
xor
pop
sub
stos
and
mov
es
or
pop
call
adc
mov
call
loopne
or
and
ds
pop
jbe
test
dec
jo
push
mov
adc
out
imul
int3
jg
dec
and
push
int
fdivr
pop
emms
xor
jo
outs
es
dec
and
repz
or
inc
jae
mov
test
test
out
lods
sbb
cmp
ds
icebp
jmp
daa
xchg
pop
cmp
sbb
adc
and
adc
mov
mov
lea
outs
cld
or
clc
push
push
xchg
sar
add
add
outs
pop
push
mov
cmp
fwait
fwait
fwait
pop
xor
or
je
or
xor
cmp
jo
adc
mov
pop
xor
ins
arpl
or
pop
jmp
and
aam
lea
xor
cs
lock
call
mov
or
fs
jmp
aas
add
(bad)
mov
and
cwde
lea
ds
scas
aam
in
jne
arpl
add
clc
sub
add
mov
push
sub
popa
jge
inc
push
mov
jno
add
pop
mov
sub
repnz
dec
xor
or
std
adc
data16
mov
cmp
cmp
or
ja
sti
pop
fild
aaa
inc
jmp
test
cmp
add
in
dec
into
inc
fmul
inc
cmp
daa
shl
popa
adc
in
pop
jo
or
nop
mov
(bad)
cmp
mul
ror
and
add
push
adc
pop
pop
ret
aaa
adc
pop
xchg
cmp
dec
lahf
push
loope
inc
pop
cmp
cmc
imul
addr16
or
test
retfw
add
mov
test
jg
cs
rol
mov
adc
inc
test
ss
lock
mov
pop
clc
sub
push
push
movzx
add
add
add
push
xor
or
outs
and
mov
imul
fild
cmps
in
idiv
cmp
je
sbb
and
cmp
loopne
add
mov
cmp
jge
push
sbb
fisttp
jecxz
cmps
imul
sub
(bad)
mov
lea
mov
(bad)
mov
pop
dec
or
ret
mov
mov
sub
or
fmulp
test
cli
in
push
sub
into
stos
xchg
add
call
cld
fstp
cmc
inc
add
mov
or
js
mov
push
lock
test
sar
cmp
jle
cwde
or
into
and
rcl
inc
and
fwait
push
xor
fimul
adc
lods
lds
xor
mov
retf
clc
loop
in
push
adc
popf
or
dec
clc
jne
xor
push
in
add
mov
sahf
inc
inc
pop
inc
sub
mov
mov
pop
push
sbb
mov
mov
jo
jl
push
push
push
lock
out
das
cld
inc
clc
pop
pop
mov
ss
in
sbb
shl
cdq
enter
push
pusha
loope
fidiv
mov
jmp
test
jnp
jne
push
ret
jo
bound
push
and
ret
mov
xlat
fimul
jecxz
cwde
inc
adc
adc
pop
mov
ja
das
lock
xor
sbb
or
xchg
ret
ffreep
clc
cwde
mov
mov
dec
imul
(bad)
push
jmp
sbb
fcomp
test
pop
push
or
push
and
enter
call
cdq
rcl
mov
push
inc
dec
pusha
dec
mov
add
xor
push
imul
cmp
push
das
popf
test
hlt
dec
notrack
cwde
or
in
push
cwde
sub
inc
push
cmp
add
repz
inc
aas
pusha
cmp
jmp
sub
jmp
mov
xchg
cmps
sub
lea
mov
or
sub
inc
cmp
inc
sbb
data16
addr16
xor
pop
cmp
push
xor
fdivrp
cwde
lea
mov
test
mov
mov
sbb
push
mov
jg
(bad)
imul
test
pop
call
(bad)
gs
gs
xor
cs
ins
pop
out
(bad)
fild
outs
outs
addr16
popa
je
dec
popa
ins
gs
daa
xchg
(bad)
jle
jecxz
sar
sti
imul
mov
int3
push
xchg
movs
cs
add
cs
mov
add
ja
or
xchg
mov
scas
dec
push
lahf
loope
pop
sbb
pop
and
dec
movs
into
out
inc
stc
dec
mov
cmp
mov
fwait
rol
add
push
repnz
test
push
xchg
daa
pop
cmp
sar
jecxz
push
out
mov
add
js
push
xor
cmp
mov
loopne
repz
or
mov
cwde
je
ds
mov
add
cmp
lock
cmp
jne
or
rol
adc
inc
add
sub
sbb
jne
push
jbe
push
cmp
dec
sub
icebp
je
das
outs
repz
(bad)
xor
cmc
add
ins
mov
mov
popa
jb
sti
mov
or
mov
jae
mov
popa
xor
adc
mov
in
cmp
pop
xchg
xor
adc
adc
call
jle
outs
inc
and
cmp
jne
mov
mov
scas
cmp
mov
mov
pop
call
pop
adc
push
mov
cmp
mov
dec
push
aad
ja
cmps
lock
add
push
mov
enter
push
mov
xchg
push
or
ret
dec
sub
jno
(bad)
pop
or
lahf
sbb
inc
inc
ror
in
push
inc
add
inc
dec
adc
pop
and
add
call
lahf
mov
pop
mov
cmp
cmp
mov
test
jne
cvtpi2ps
pop
mov
ret
in
push
or
sbb
loopne
lock
mov
(bad)
rcr
mov
push
inc
mov
cwde
sub
push
mov
(bad)
rol
push
mov
mov
(bad)
cmps
pop
sbb
dec
loope
pop
ret
sbb
arpl
push
lock
in
xor
inc
jns
and
sbb
add
mov
push
inc
ror
or
and
mov
add
push
js
sub
xchg
mov
imul
jbe
daa
cmp
fisttp
or
loope
or
adc
lds
cld
mov
pop
mov
or
xchg
push
or
or
dec
inc
cmp
ja
mov
call
jmp
cmp
pop
add
pop
cld
ja
(bad)
imul
jg
shr
or
mov
adc
sbb
and
test
adc
push
xor
push
jmp
pusha
add
dec
pusha
rol
mov
or
cmp
jb
or
dec
mov
mov
xor
mov
lods
jbe
pop
add
cmp
lea
and
sub
ret
lock
mov
mov
xchg
in
out
dec
xor
pop
call
cld
mov
js
dec
mov
xor
rol
adc
loope
fistp
and
je
cmp
fiadd
or
mov
dec
mov
cmp
shl
or
mov
push
ss
push
lea
inc
dec
cld
mov
std
cmp
inc
inc
nop
(bad)
jbe
shl
xor
add
fdivr
mov
mov
mov
xor
aaa
stos
sbb
(bad)
mov
loop
xor
sbb
sub
cs
jb
inc
adc
test
mov
add
je
push
psubusw
jecxz
(bad)
pop
jb
mov
adc
sbb
mov
in
add
and
pop
xor
push
jmp
xor
pop
dec
inc
xor
fldenv
or
jmp
adc
enter
pop
or
mov
cmp
sbb
push
xchg
loopne
daa
into
call
jmp
adc
test
das
dec
sahf
mov
js
clc
inc
adc
pop
jns
aaa
in
cwde
xchg
cmp
aam
pop
xor
push
xlat
pop
and
and
pop
mov
lahf
fimul
ret
xchg
push
push
lahf
sbb
mov
cwde
xor
adc
inc
std
stos
pop
dec
sub
mov
rcr
inc
or
loopne
xor
and
mov
and
lods
jmp
add
pop
lea
push
push
(bad)
cmps
cmp
and
jp
xor
mov
sbb
xchg
je
(bad)
shl
retf
lock
ret
cmp
call
and
mov
adc
mov
movs
enter
scas
clc
cld
push
jne
dec
sub
add
push
cmp
pop
xor
fs
and
imul
addr16
xchg
adc
jns
cmp
dec
mov
adc
call
cmp
dec
mov
add
or
add
imul
clc
add
push
ror
or
push
dec
inc
pop
pop
pushf
jg
or
mov
clc
mov
leave
dec
pop
push
in
fadd
push
dec
fcom
xchg
les
clc
(bad)
out
jle
cld
cmp
hlt
push
shl
lock
or
jmp
push
mov
or
dec
push
and
test
jne
mov
rol
mov
lods
add
loopne
add
mov
mov
movs
inc
jp
cmp
shl
out
popf
jg
shl
test
cmp
mov
dec
mov
es
mov
inc
add
test
or
or
imul
xchg
rol
or
cmp
sub
stos
inc
stos
xchg
cs
ficom
jecxz
adc
(bad)
inc
and
call
xchg
xchg
mov
sti
push
add
outs
add
push
or
xchg
add
and
ja
jo
add
xor
fisub
gs
(bad)
(bad)
aad
gs
jb
jns
es
imul
mov
adc
inc
push
outs
arpl
in
out
jg
inc
gs
jne
je
dec
outs
je
imul
mov
jae
fbstp
ds
outs
inc
arpl
or
ret
xor
jle
inc
xor
xor
add
outs
ins
bound
outs
js
imul
ja
nop
pop
pop
cmp
sub
sti
andps
outs
dec
inc
xor
je
dec
add
jns
push
hlt
cmp
jbe
das
ret
in
in
in
call
in
(bad)
aam
in
in
int3
enter
in
in
mov
in
lods
test
mov
pushf
cwde
xchg
nop
in
in
mov
in
jl
je
in
in
ins
push
in
pop
pop
push
push
in
in
dec
dec
inc
inc
in
in
cmp
xor
in
in
sub
and
in
in
sbb
adc
sbb
in
or
add
in
in
verr
loopne
in
in
fcom
shl
in
in
enter
in
in
mov
in
lods
test
mov
pushf
cwde
xchg
nop
in
in
mov
in
jl
je
in
in
ins
push
in
pop
pop
push
push
in
in
dec
dec
inc
inc
in
in
cmp
xor
in
in
sub
and
in
in
sbb
adc
jb
xor
ins
(bad)
push
jb
push
push
pop
fs
jb
dec
dec
inc
inc
jb
jb
cmp
xor
jb
jb
sub
and
jb
jb
sbb
adc
jb
jb
or
add
cmp
sbb
(bad)
lock
cmp
in
call
cmp
(bad)
aam
jb
jb
int3
mov
jb
jb
mov
jb
lods
test
mov
pushf
cwde
xchg
nop
jb
jb
mov
jb
jl
je
jb
jb
ins
push
jb
pop
pop
push
push
jb
jb
dec
dec
inc
inc
outs
pop
jb
cmp
xor
xor
dec
dec
sub
and
in
inc
dec
sbb
adc
in
in
or
add
xor
in
cld
(bad)
clc
hlt
jb
jb
lock
call
jb
(bad)
aam
jb
jb
int3
enter
jb
sar
mov
test
jb
jb
mov
jb
jb
mov
jb
jl
je
jb
jb
ins
push
jb
pop
pop
push
jb
jb
push
dec
dec
inc
jb
jb
inc
cmp
xor
jb
jb
sub
and
jb
jb
sbb
adc
jb
jb
or
add
sbb
add
ret
clc
hlt
outs
inc
pusha
cmp
xor
out
in
mov
aam
int3
sbb
mov
mov
dec
cld
jmp
pop
sbb
sahf
out
pop
or
adc
sbb
add
(bad)
push
push
mov
xchg
ret
jae
mov
add
lods
mov
and
scas
jp
imul
mov
cmps
or
fwait
iret
push
add
imul
or
push
or
mov
push
or
pop
pop
sahf
sbb
push
scas
dec
xchg
imul
pusha
xchg
or
inc
pop
or
add
loopne
xchg
mov
cli
add
gs
data16
or
push
dec
inc
inc
dec
add
outs
xor
imul
pop
push
and
dec
push
inc
push
dec
pop
and
mov
xor
push
pop
sub
push
inc
dec
in
fdivr
dec
dec
dec
inc
push
das
mov
imul
js
mov
sbb
or
jecxz
fisttp
mov
sub
imul
stos
pop
xchg
scas
mov
addr16
imul
jl
icebp
pushf
pushf
pushf
pushf
repnz
cmc
pushf
pushf
pushf
pushf
div
clc
stc
pushf
pushf
pushf
pushf
cli
sti
cld
std
pushf
pushf
pushf
pushf
(bad)
jmp
loope
pushf
pushf
pushf
loop
in
pushf
pushf
pushf
pushf
out
call
pushf
jmp
pushf
out
out
rcl
pushf
pushf
pushf
pushf
rcl
aam
pushf
pushf
pushf
pushf
(bad)
xlat
fcomp
pushf
pushf
pushf
pushf
fcmovu
(bad)
pushf
pushf
pushf
pushf
(bad)
rol
pushf
pushf
pushf
ret
lds
enter
pushf
pushf
retf
int
pushf
pushf
pushf
into
iret
mov
pushf
pushf
pushf
pushf
mov
mov
pushf
pushf
pushf
pushf
mov
mov
pushf
mov
pushf
pushf
pushf
mov
pushf
pushf
pushf
mov
pushf
pushf
pushf
cmps
cmps
test
xchg
mov
aad
adc
xor
xor
xchg
inc
xor
mov
jg
jmp
inc
js
gs
imul
rcl
call
test
outs
jb
nop
lock
lock
mov
gs
sar
xor
dec
outs
mov
clc
aas
xchg
cld
mov
ins
or
dec
jne
dec
dec
gs
mov
jns
test
test
lahf
and
inc
dec
outs
mov
in
(bad)
outs
push
add
inc
jb
and
push
add
outs
xchg
cmp
push
mov
sbb
adc
mov
pop
mov
push
sbb
jo
call
outs
or
imul
outs
nop
lods
inc
cs
push
push
jle
popa
outs
shr
pop
or
push
out
jno
xor
inc
dec
sbb
push
dec
inc
sti
inc
and
scas
pop
stos
in
je
jo
jbe
inc
sti
sbb
jo
int3
scas
int3
push
push
xchg
jb
fnsave
and
jmp
and
rcl
scas
scas
pusha
mov
outs
sbb
fs
aam
lock
(bad)
movsx
imul
fcom
enter
mov
popa
jae
lea
pop
in
push
mov
or
inc
inc
dec
shr
push
movs
adc
adc
mov
jae
xchg
dec
push
pop
adc
push
dec
je
add
daa
dec
je
jb
pop
ins
mov
ins
adc
mov
push
and
inc
jp
imul
cmp
cld
mov
mov
ret
adc
ins
inc
test
(bad)
push
jne
sbb
orps
imul
adc
js
pop
cmp
add
lea
jbe
nop
pop
pop
out
jbe
sbb
cwde
push
repnz
out
ins
mov
popf
sub
or
jo
out
mov
xchg
or
inc
push
stos
push
or
inc
shl
and
in
ret
popa
data16
cmp
ss
(bad)
adc
cs
xor
add
(bad)
es
inc
ins
jae
pop
inc
lock
add
and
aas
fwait
sub
aas
push
lds
push
push
in
cld
push
push
pop
les
ins
(bad)
pop
push
int3
add
sub
and
nop
mov
pushf
sbb
and
xchg
out
gs
inc
aam
or
jnp
out
push
sbb
add
fdivrp
jg
xchg
adc
sbb
push
loopne
sbb
inc
in
pop
mov
dec
push
adc
aas
xor
aaa
cmp
(bad)
jl
push
dec
jne
push
mov
and
outs
push
fsubr
outs
arpl
cmp
adc
push
shr
div
and
add
mov
aas
mov
push
retf
mov
jl
jp
mov
into
sub
pushf
mov
pop
sub
enter
inc
ins
xor
shl
add
cmp
adc
or
mov
mov
mov
mov
outs
out
push
aaa
or
and
out
add
mov
add
jns
sub
sti
inc
test
jp
fdiv
mov
aaa
repnz
movzx
cmp
push
cmp
ja
sub
push
inc
cld
and
sbb
out
cmp
sub
popa
cmp
push
cmc
or
inc
jp
or
sar
jbe
push
jecxz
mov
je
pusha
sbb
push
(bad)
jl
mov
(bad)
rcr
retf
ret
cmps
jne
arpl
jle
loop
add
loopne
les
inc
inc
inc
cld
neg
or
or
push
push
les
mov
call
inc
sub
sbb
and
add
lea
add
neg
je
movzx
sub
out
push
sbb
cmp
je
cmp
add
into
jbe
fistp
sub
idiv
sbb
xchg
jmp
sub
jne
pop
cmp
je
shr
shr
pop
ins
cmp
mov
jl
mov
pop
pop
(bad)
bound
push
rcr
pop
int3
sar
test
pusha
xor
push
shl
xchg
push
rdpmc
push
add
mov
pop
ret
and
movs
dec
lods
fadd
xchg
mov
pop
mov
nop
pop
(bad)
push
push
adc
les
add
daa
mov
lea
dec
mov
mov
jl
jl
jmp
jbe
adc
movs
lds
pop
dec
sub
clc
push
sub
fld
jle
inc
mov
sub
add
push
mov
xor
pop
dec
jae
push
xchg
push
push
add
sub
jb
sub
add
add
adc
jae
cmp
fistp
ins
dec
and
mov
inc
xor
push
or
stc
jbe
sub
or
xchg
mov
dec
jne
jmp
sub
mov
fidiv
cld
jecxz
push
jne
sar
mov
ins
xchg
mov
inc
dec
sbb
dec
push
shr
ds
mov
pop
push
mov
ret
push
push
(bad)
jmp
inc
pop
pop
sub
sub
jbe
add
mov
sub
jmp
mov
dec
jne
push
mov
sub
xor
push
outs
cdq
jl
repnz
jnp
xchg
inc
sub
adc
sar
xor
ja
and
jo
push
mov
neg
sbb
(bad)
ins
sbb
mov
fisttp
cmps
mov
add
or
or
psubusw
mov
dec
or
dec
ja
scas
xor
js
ret
push
cli
push
and
fistp
ret
(bad)
in
fstp
add
add
sub
add
ror
(bad)
fdivr
mov
dec
or
cmp
cli
pop
sub
mov
fstsw
sahf
jae
fldcw
pop
ffree
ffree
dec
ss
clc
ffree
ffree
pop
aad
(bad)
add
aam
pop
add
and
movs
shl
pop
sub
ins
push
inc
imul
sub
xchg
and
cmp
aas
cmp
lock
and
adc
scas
mov
push
inc
xchg
js
push
pop
cld
out
push
mov
fild
inc
aam
imul
movs
(bad)
jo
mov
sete
fs
mov
xlat
hlt
fsubr
inc
mov
inc
add
daa
ds
sbb
(bad)
dec
mov
or
nop
ins
nop
sub
xor
add
sar
enter
movs
or
add
shl
bswap
dec
jle
xor
mov
jg
inc
pop
test
mov
mov
pop
inc
pusha
push
pop
mov
imul
pop
jnp
dec
into
sub
mov
or
xchg
push
pop
hlt
lods
add
jo
(bad)
in
adc
jg
cdq
or
scas
push
sbb
fxch
aas
iret
lock
mov
lea
cmc
add
xchg
inc
adc
ins
lock
loope
cmp
jmp
cmp
push
(bad)
pop
outs
or
add
cwde
or
add
ret
das
xchg
push
pop
ja
cvtps2pi
sbb
sub
mov
in
sub
or
inc
adc
adc
and
test
por
and
faddp
mov
shl
ror
or
add
out
cmp
ja
ror
loop
(bad)
scas
inc
ja
inc
sub
push
push
mov
push
sub
dec
mov
mov
or
rep
xor
mov
loop
mov
adc
jae
shl
push
loope
leave
adc
xor
jp
push
cwde
jne
mov
das
add
cld
popf
adc
adc
inc
or
data16
fistp
add
push
(bad)
mov
dec
ffreep
addr16
sbb
movs
adc
xchg
pop
ds
loop
xchg
out
sbb
push
movs
xlat
lahf
jne
dec
into
aaa
aad
pop
jg
(bad)
xlat
cli
pushf
dec
adc
hlt
sar
mov
push
adc
or
and
cdq
mov
pop
xlat
pop
cmp
sbb
scas
pop
push
xor
push
push
and
ret
scas
dec
jno
sub
push
sbb
nop
bound
dec
cmp
cld
sub
(bad)
cld
imul
fiadd
add
pop
hlt
adc
enter
sbb
or
dec
mov
and
loopne
mov
ret
sub
sub
(bad)
movs
push
out
mov
pop
xchg
mov
ret
das
lea
daa
xchg
mov
loopne
inc
sub
in
(bad)
dec
movs
jne
hlt
not
mov
cwde
retf
lods
jecxz
daa
add
rcr
ret
add
sbb
dec
retf
mov
inc
sub
pop
cli
mov
mov
mov
(bad)
pop
pusha
lahf
and
lahf
jno
pop
xor
repnz
adc
inc
stc
cmp
iret
push
cmps
cld
(bad)
pop
ds
mov
xor
xor
repz
mov
mov
jbe
dec
rol
rcr
ror
xor
dec
je
outs
pushf
mov
cmp
or
mov
add
fistp
jmp
add
add
mov
cmp
mov
cmp
cmp
jne
scas
test
(bad)
push
inc
fdivp
or
or
cs
mov
pop
sub
jbe
sbb
pop
xchg
loopne
sbb
(bad)
lods
xor
mov
push
add
mov
jne
lock
arpl
daa
mov
fs
add
rol
push
pop
push
jl
cdq
dec
jb
lock
cmp
sbb
xchg
mov
(bad)
out
cdq
xor
cmp
cwde
neg
cli
mov
jmp
ror
clc
cmp
jne
div
add
retf
mov
mov
add
cmp
stos
adc
push
and
jg
xor
mov
sub
or
pusha
xchg
fdivr
add
sbb
call
ja
or
mov
pop
dec
addr16
push
jmp
into
(bad)
pop
add
pop
shr
jge
adc
or
push
or
jne
bnd
aad
sub
repnz
lods
mov
call
sub
neg
fsubr
jne
cs
and
lods
jmp
enter
dec
mov
inc
mov
sub
mov
jmp
sub
test
jae
fild
sub
test
jae
rol
xchg
pop
mov
rep
bound
call
or
scas
std
imul
pop
pop
mov
sub
icebp
pop
and
xor
cmp
ja
imul
scas
movs
pop
rol
and
in
or
jne
dec
mov
cmp
jg
ror
cmp
ret
je
out
std
adc
cmp
movs
imul
xor
mov
call
mov
xchg
int
mov
xchg
push
pop
mov
lahf
cmps
(bad)
aas
pop
mov
pop
fdivr
int
add
pop
mov
xor
mov
ret
or
shr
cld
dec
sbb
and
fwait
add
cmc
data16
lahf
out
imul
jmp
movs
fldcw
cmps
pop
outs
adc
jo
repnz
cld
hlt
out
sbb
ja
cmp
jne
loope
push
sbb
add
mov
aad
mov
lock
xor
inc
inc
mov
mov
mov
mov
in
aam
cld
aas
and
mov
inc
cld
call
pop
js
mov
add
call
fdiv
cmp
mov
or
cmp
ds
jecxz
dec
mov
mov
call
sub
(bad)
out
ret
jge
aam
pushf
mov
outs
mov
inc
je
mov
jnp
outs
mov
mov
inc
je
mov
dec
je
dec
jl
pop
out
dec
mov
pop
cmp
jbe
mov
ret
sbb
scas
jo
adc
mov
pop
mov
cmovp
xchg
mov
inc
iret
sub
mov
xchg
ret
xor
push
add
mov
cmp
mov
sub
out
popf
enter
inc
les
test
jle
test
jl
mov
stos
cld
jne
lock
repnz
jg
mov
cmp
push
jge
mov
jg
std
es
sqrtps
fnstcw
xchg
out
jns
fnstenv
(bad)
push
add
scas
and
retf
jns
(bad)
jne
ins
jge
sbb
fstp
dec
cld
lea
call
or
dec
icebp
mov
dec
cmp
jl
jmp
add
push
(bad)
icebp
jle
add
push
xchg
jne
(bad)
pop
xlat
adc
jge
lods
add
fcom
jle
xor
stos
or
inc
jge
mov
neg
jmp
or
fdiv
pusha
test
mov
stos
xchg
push
mov
cmps
mov
je
push
call
inc
dec
mov
jmp
cmp
(bad)
mov
jne
pop
pop
mov
mov
sar
sti
mov
test
inc
icebp
repnz
mov
repnz
in
rol
adc
pop
adc
add
mov
jge
imul
(bad)
jle
ret
mov
jl
mov
adc
jb
fcomp
add
jg
jge
mov
movzx
sub
clc
je
sbb
dec
test
add
int3
sti
mov
inc
xlat
in
pop
adc
je
add
or
mov
pop
cmp
popf
jo
pop
push
sub
add
rcr
lods
jmp
out
pop
popf
xor
push
xor
inc
pop
fwait
jle
dec
lods
or
xor
jge
loopne
xchg
fst
sub
dec
aam
and
mov
cmp
sbb
dec
stos
outs
aaa
pop
or
je
mov
stos
neg
sbb
stos
jmp
(bad)
mov
je
stos
loop
movlps
stos
add
clc
dec
xchg
add
out
mov
cld
push
mov
xchg
out
xor
mov
cmp
add
pop
lock
fs
mov
mov
mov
dec
cmp
ins
dec
cmp
adc
mov
sbb
es
mov
or
repz
inc
test
push
test
dec
jne
sbb
call
call
sbb
add
call
jne
pop
(bad)
test
outs
pop
push
jecxz
or
repnz
pop
mov
lea
push
cli
iret
mov
je
push
push
cmp
movs
add
adc
call
add
add
inc
loop
push
mov
adc
or
and
mov
sti
mov
add
and
and
adc
and
sub
inc
sub
xor
sub
jnp
jnp
sbb
and
sub
sub
pushf
or
sub
sub
sub
mov
adc
add
aas
push
or
jle
xor
xchg
jge
xor
mov
and
sub
test
std
or
cmp
iret
mov
mov
jle
fld
je
or
hlt
imul
mov
out
fabs
push
scas
ds
mov
mov
fld
pop
stos
jg
fstsw
fwait
mov
test
je
fidiv
jne
cmp
std
call
or
mov
nop
shr
and
add
fbstp
sbb
cmp
jge
jns
hlt
inc
mov
call
or
call
jae
cmp
jb
mov
js
dec
and
cld
ja
jmp
data16
pusha
xor
jmp
mov
mov
je
not
adc
xlat
pop
in
shr
mov
add
xchg
out
lods
xchg
fs
adc
arpl
add
scas
ror
je
(bad)
sub
push
into
neg
sbb
aam
and
or
push
add
pop
mov
cmps
sbb
jae
sbb
rol
mov
fild
inc
xor
cmp
data16
fidiv
fwait
mov
push
xchg
push
es
scas
das
pushf
and
jne
dec
sub
cmp
pop
in
fsub
jmp
dec
adc
sub
mov
cmp
div
or
or
sbb
js
push
iret
inc
pop
aas
jbe
xchg
xchg
push
add
jle
jns
fwait
dec
push
fldz
cmps
add
cmp
in
dec
mov
jne
inc
stc
adc
jbe
adc
pusha
jne
inc
sbb
(bad)
in
icebp
je
and
fistp
sub
add
jg
rol
cwde
jne
mov
sahf
add
mov
mov
dec
ja
das
adc
aas
jmp
fstp
lods
test
mov
(bad)
mov
fadd
ins
and
push
int
cmp
clc
outs
and
sub
add
jae
fimul
cmps
(bad)
fiadd
jmp
aaa
mov
dec
mov
stc
es
out
add
clc
push
inc
imul
push
cmp
aaa
lock
push
xchg
stos
mov
xchg
fimul
adc
sbb
push
mov
cld
ret
movs
in
(bad)
push
shr
pop
fistp
xchg
int3
add
mov
or
std
outs
shl
(bad)
mov
nop
fild
mov
sbb
aam
cmp
sub
fstp
fwait
pop
push
and
out
add
cs
test
xor
ret
or
mov
loopne
adc
adc
ins
mov
xor
push
adc
sbb
push
mov
sbb
jg
aas
sar
or
inc
dec
shl
or
cmp
inc
stc
inc
in
pop
(bad)
mov
mov
data16
add
shr
jmp
add
adc
call
(bad)
(bad)
or
xchg
fadd
out
setp
fstp
fwait
movs
fs
call
xchg
mov
push
sbb
mov
lods
cmps
push
hlt
inc
xchg
call
mov
push
push
int
test
cmp
test
xor
xchg
add
push
pop
jp
and
pop
and
fldcw
push
add
and
mov
add
aam
popa
push
add
movhps
loop
std
add
les
add
lea
(bad)
mov
xchg
add
jle
shl
or
jb
sti
and
je
cmp
ja
adc
cmp
add
inc
dec
jne
sub
js
jg
dec
mov
aas
cdq
idiv
imul
sti
xor
add
sub
ds
lock
ds
add
pusha
ret
or
lods
ret
loopne
(bad)
out
std
rol
les
sbb
leave
call
dec
in
test
jg
pushw
sbb
hlt
or
xchg
adc
inc
pop
ja
fwait
add
stc
mov
push
add
inc
add
and
jge
shl
lods
mov
cmp
add
or
dec
lock
ins
sub
imul
fcom
movzx
mov
pop
sbb
add
add
ss
sub
mov
inc
mov
or
lock
push
lods
inc
adc
dec
mov
popf
rcr
(bad)
dec
cmp
jb
adc
sub
inc
jmp
aas
sbb
out
rol
hlt
push
sbb
ds
mov
movs
into
jbe
cmp
daa
inc
hlt
and
ja
push
clc
test
mov
addr16
xchg
inc
test
pop
cmp
inc
and
test
jg
mov
cmp
cdq
cld
inc
shl
ficomp
push
dec
addr16
fcom
adc
cmps
fldz
add
dec
iret
push
sub
mov
add
pop
aas
cmps
sbb
dec
push
jp
push
movs
add
(bad)
push
mov
push
rcr
mov
mov
jne
sbb
pop
ror
push
sbb
mov
push
pop
mov
mov
dec
sti
je
mov
out
adc
mov
hlt
lock
or
push
cmp
sub
cmc
jbe
mov
jo
add
push
lea
or
xchg
cwde
mov
cdq
mov
jo
fbstp
push
in
jge
jae
pop
cs
add
mov
xchg
jbe
es
or
xchg
rcr
cmp
jo
inc
add
out
out
repnz
add
push
pop
gs
cdq
add
sbb
stos
mov
xchg
or
and
mov
mov
xchg
push
mov
mov
or
dec
cmps
dec
inc
je
or
jne
cmps
add
sti
cmps
or
pop
cmp
sub
inc
mov
adc
jne
xchg
mov
mov
push
(bad)
dec
dec
adc
xor
mov
ret
jmp
xor
or
xor
es
sub
cmp
scas
addr16
repnz
pop
iret
in
ret
repnz
ret
sub
adc
jg
int
jbe
mov
cdq
jmp
jmp
cdq
sbb
das
je
jecxz
push
inc
cmp
xchg
lock
push
or
loopne
inc
add
mov
add
add
xchg
fs
add
aam
or
fcmovbe
add
fidivr
xor
cmp
mov
xchg
fldenv
pop
gs
add
sub
inc
(bad)
shr
add
loope
nop
ins
mov
xchg
or
stos
jle
jp
mov
daa
fild
sbb
in
lock
jp
dec
fxsave
daa
mov
add
popa
xchg
mov
lahf
movs
sub
adc
sub
test
sar
dec
inc
dec
mov
dec
ret
push
(bad)
fisubr
push
mov
add
and
cmp
test
or
or
enter
or
adc
push
pop
add
or
mov
mov
or
or
jge
int
stc
mov
fwait
mov
pushf
cmp
out
call
jno
out
jns
lahf
iret
repnz
movs
fild
test
pop
retf
cmp
add
loopne
call
mov
and
mov
and
jbe
push
lea
and
fcomp
aam
add
aam
dec
rol
sbb
xor
lock
or
push
inc
sub
push
jo
xor
leave
jbe
adc
je
add
and
jg
aad
push
lahf
adc
add
or
dec
and
mov
xchg
fist
xchg
scas
mov
pop
cs
aaa
xor
aam
or
push
add
in
sub
dec
jg
je
mov
add
call
jmp
sub
je
pop
je
jmp
push
jne
jmp
movs
(bad)
mov
jae
xchg
shld
sub
mov
cmp
jne
into
add
adc
cmps
fiadd
mov
inc
shl
sub
xor
fmulp
adc
test
jmp
or
fcmove
mov
sbb
ins
sbb
leave
or
repz
pusha
mov
fiadd
sbb
out
add
xor
xor
das
nop
retf
sbb
xchg
in
sub
dec
sysret
jne
sub
mov
ja
push
add
sbb
stos
loop
jl
add
ror
imul
add
out
stos
dec
xchg
ja
adc
xchg
pushf
push
jmp
and
mov
les
jnp
pop
stos
imul
jb
push
add
add
mov
retf
mov
mov
push
iret
add
push
jmp
rol
mov
push
lods
popf
test
xchg
pop
imul
cmp
jno
or
push
cmp
fnsave
sbb
movs
daa
(bad)
cmp
dec
rcl
pop
sub
daa
pop
sub
mov
push
push
jmp
int3
stos
xchg
sbb
cmp
cld
clc
push
adc
push
cmps
mov
aam
pop
fsubr
jp
push
pop
adc
jbe
into
xchg
mov
add
test
cmc
add
pop
clc
pop
into
sahf
cmp
push
sub
inc
ret
imul
mov
xchg
push
jo
(bad)
pop
or
inc
push
scas
pop
cmp
dec
(bad)
cmp
jg
mov
jmp
je
mov
pmuludq
neg
mov
test
sbb
xchg
sub
push
add
idiv
shl
add
or
mov
aaa
ins
nop
(bad)
adc
inc
add
sub
jae
add
pop
pop
arpl
sahf
sbb
xchg
ss
sub
xor
add
fimul
adc
xchg
xchg
rcl
(bad)
cld
cmp
(bad)
mov
ret
xor
(bad)
xchg
cmp
push
sub
stos
in
cmp
aad
or
adc
add
(bad)
mov
jmp
clc
movs
and
and
jl
xor
std
inc
push
(bad)
cmp
jne
shl
cmp
xchg
sub
hlt
inc
and
sub
je
dec
fs
in
std
outs
sub
je
jmp
mov
jmp
push
push
push
inc
fidivr
mov
mov
jle
faddp
xlat
add
add
aad
jmp
mov
pusha
and
mov
jno
cmp
jl
pop
pop
call
aas
call
(bad)
pop
mov
mov
jo
js
mov
(bad)
sti
popa
jne
add
pop
mov
xor
or
inc
ret
adc
sar
inc
cmp
xchg
cmp
cmp
rol
cs
mov
sub
add
into
fs
idiv
hlt
imul
add
js
add
adc
pop
cld
jmp
sbb
into
mov
dec
cld
gs
scas
fsub
fadd
loopne
cmp
cmps
imul
js
or
loopne
pusha
jnp
push
repz
or
jnp
movs
adc
push
bnd
mov
sbb
(bad)
push
jl
mov
dec
sub
cmps
add
js
xchg
pusha
jbe
in
sbb
push
in
cmp
sbb
stos
jl
or
or
fisttp
lods
xchg
push
test
cli
cmp
test
movzx
nop
add
pop
out
or
jns
das
rol
in
mov
data16
add
and
cmp
push
lock
es
in
lahf
xlat
je
lock
sahf
out
xor
lock
out
bound
in
cmp
cld
aad
popf
jg
mov
lods
jo
jge
add
dec
add
fsubr
mov
adc
rcl
pop
data16
mov
adc
aaa
add
cmp
jle
fwait
mov
fs
jne
mov
add
or
repz
xor
or
sahf
je
or
xor
push
pushf
daa
pop
or
arpl
xor
ficom
sub
call
in
inc
lds
popa
xchg
and
addr16
fsubr
inc
call
fsub
fsubr
push
jne
aam
ror
sbb
not
ret
and
and
cmps
fadd
push
or
add
mov
(bad)
pop
xor
gs
mov
call
inc
or
mov
(bad)
in
sahf
in
and
dec
test
movs
and
jp
and
push
mov
div
ret
mov
(bad)
jp
sub
or
scas
and
jmp
push
or
inc
scas
dec
mov
fcmove
out
je
test
xor
add
add
or
nop
xchg
pop
xlat
add
push
push
test
ret
cmp
je
repnz
ds
adc
test
adc
xor
push
clc
push
daa
js
push
pop
sub
fsubr
retf
cmp
cs
add
push
pop
inc
(bad)
data16
mov
push
daa
lods
cmp
push
push
ins
pop
daa
add
mov
jno
in
loop
add
(bad)
mov
adc
adc
cdq
mov
ret
jne
arpl
push
add
fstp
fcomp
jmp
daa
jb
pop
fsubr
sbb
mov
add
les
fisubr
dec
push
push
push
push
push
adc
sub
mov
outs
aaa
sbb
and
or
adc
push
retf
xchg
in
(bad)
xchg
enter
inc
xor
out
mov
and
add
pop
jmp
cmp
mov
daa
fprem
push
add
ret
xor
bound
daa
add
and
mov
mov
pop
pop
push
and
pushf
add
in
xchg
jbe
pop
dec
loopne
and
imul
push
add
das
lods
cmp
ja
ins
gs
sar
or
push
push
xchg
mov
jmp
ror
inc
inc
dec
retf
fcomp
or
jl
or
mov
xchg
mov
inc
and
jae
sub
sti
or
cmps
sub
push
ror
pop
add
dec
rcl
int
sbb
shl
in
dec
call
xchg
sub
call
shl
lods
mov
aam
fstp
sbb
inc
xor
jae
jl
je
xchg
add
xchg
cmp
xor
xor
les
ds
mov
aad
pop
xchg
mov
xchg
ins
jno
retf
inc
fidivr
mov
inc
mov
mov
call
loopne
xchg
in
mov
mov
je
mov
sti
xor
pop
cmp
pop
jns
dec
jbe
sbb
outs
push
push
push
push
inc
push
je
pop
aam
xor
xlat
(bad)
pop
xchg
dec
jne
push
push
inc
add
jl
xchg
pusha
mov
sub
(bad)
mov
ins
nop
sti
jne
scas
pop
xchg
adc
mov
and
and
mov
add
add
sub
(bad)
pop
and
and
xchg
push
jmp
je
sub
je
mov
push
scas
xor
add
mov
pop
jle
test
out
lods
arpl
test
mov
je
xchg
shl
adc
test
inc
lock
add
sbb
mov
outs
jnp
(bad)
sbb
dec
mov
ja
add
mov
enter
add
jmp
mov
jns
pinsrw
icebp
ret
and
pop
je
jne
ss
or
xchg
or
in
in
jle
cmp
jnp
in
mov
inc
xlat
addr16
and
jo
pop
aaa
fild
out
add
sub
and
jmp
dec
sub
retf
das
mov
sti
xchg
enter
jbe
sar
and
out
(bad)
sbb
sbb
sbb
cmp
cwde
outs
out
adc
idiv
dec
and
xchg
push
lahf
rcr
jmp
sub
pop
xor
push
inc
sti
scas
push
mov
inc
push
repz
ret
xor
pusha
mov
mov
das
push
push
loopne
rcr
fsub
(bad)
inc
push
xchg
pop
fsubr
mov
add
cs
bound
add
cld
push
enter
ja
or
xchg
out
and
test
lods
add
out
push
and
mov
inc
in
jae
push
mov
sar
pop
ja
ja
mov
stc
push
lea
push
or
pushf
xchg
jge
shl
pcmpgtd
add
adc
das
push
xor
dec
fsub
push
push
pop
mov
or
xor
cdq
push
fnstsw
mov
dec
mov
sbb
hlt
mov
push
ins
cld
pusha
xchg
jmp
push
add
popa
cmp
nop
adc
adc
lds
mov
inc
pop
test
push
push
out
xor
pop
mov
stos
scas
inc
lea
in
test
ins
rol
sub
rcl
push
(bad)
mov
add
dec
jb
or
jns
int3
les
rol
pop
add
mov
sbb
cmp
ja
pop
adc
es
mov
adc
fwait
mov
clc
adc
adc
aas
cmp
and
jo
jle
push
or
inc
inc
push
data16
jmp
movs
add
pop
dec
jg
cmp
sbb
mov
mov
sub
sbb
inc
outs
ss
or
and
jo
pop
pop
cmp
fisttp
aas
dec
mov
or
std
jo
add
sar
retf
cmp
sub
jb
xchg
sar
imul
add
inc
push
cmp
pop
outs
inc
xor
inc
jmp
mov
push
cmc
les
sahf
inc
loopne
adc
xor
sbb
int3
push
mov
rol
cmc
cld
mov
ror
call
ins
fidiv
or
jge
clc
push
in
js
in
mov
fmul
sub
mov
jns
mov
sub
stos
inc
mov
lahf
or
add
mov
stos
ins
add
movs
sbb
jne
mov
(bad)
icebp
and
adc
rol
pusha
fiadd
push
daa
(bad)
mov
xchg
stos
and
imul
pop
pslld
xchg
push
push
cmp
je
jmp
xor
xchg
retf
leave
jmp
xor
xor
sbb
add
mov
add
push
shl
or
add
ss
pop
pushf
pop
movs
movs
dec
mov
sbb
mov
adc
mov
mov
dec
xchg
sti
mov
dec
mov
clc
pop
cld
cmp
movaps
push
inc
dec
jae
pop
and
ret
inc
or
pop
jge
xor
int3
push
mov
mov
fld
sbb
and
push
test
sahf
(bad)
(bad)
in
clc
inc
lea
add
mov
mov
ins
(bad)
stc
cs
jae
or
enter
pop
int3
mov
lock
mov
inc
ja
pop
outs
pushf
jae
repnz
sbb
jge
mov
retf
enter
movs
test
and
push
call
sub
add
or
mov
adc
and
sbb
lds
cld
std
rol
or
sbb
outs
push
or
imul
ror
and
xor
rcr
ret
hlt
add
xchg
in
or
lock
in
adc
xchg
rcl
int3
mov
nop
sub
(bad)
push
cmp
montmul
cmps
test
scas
xchg
and
outs
mov
xchg
add
mov
add
push
or
push
jbe
jnp
aam
jo
push
cli
cli
pop
sahf
fbld
or
mov
hlt
sbb
mov
nop
in
gs
stc
sbb
nop
ja
cmps
inc
loope
sti
sbb
add
daa
in
inc
pusha
movs
test
inc
pushf
pushf
repz
lock
inc
and
nop
popa
ret
mov
xor
jb
xchg
dec
dec
ins
dec
xchg
mov
dec
mov
and
mov
adc
enter
adc
(bad)
into
sbb
and
cmps
mov
adc
mov
mov
push
lahf
int3
lahf
cmp
cdq
jl
pcmpeqw
cmp
loope
jb
add
call
clc
ins
dec
mov
sub
in
gs
clc
mov
lock
sbb
rol
jae
daa
and
jb
pop
dec
movs
fisubr
test
push
into
ja
xor
cwde
inc
js
cmp
mov
sub
and
and
push
mov
fwait
push
pop
push
push
clc
mov
cmp
nop
das
cmp
or
inc
mov
imul
dec
les
xor
cmp
and
jb
mov
sub
and
(bad)
jns
dec
or
inc
enter
jmp
or
lea
mov
pusha
cmps
and
or
jno
inc
je
int
aas
cmc
retf
pusha
fidiv
leave
cmp
(bad)
add
mov
or
or
cmps
and
or
xor
mov
jg
mov
mov
cmp
pop
sbb
cmp
jl
adc
test
and
jge
mov
add
xor
jp
add
and
pop
(bad)
cmp
hlt
jge
jl
jne
sbb
sbb
enter
or
mov
adc
dec
sbb
jle
fnsave
imul
mov
dec
cmp
push
xchg
rcr
jg
xchg
or
or
mov
movs
or
call
sbb
(bad)
cmp
es
jbe
ss
jge
pop
mov
jns
out
push
je
ret
sub
cmp
add
push
daa
xchg
mov
das
pop
and
mov
iret
push
xor
adc
push
(bad)
(bad)
dec
push
push
iret
xor
push
mov
ret
push
and
nop
xor
rcr
mov
loop
jp
adc
add
inc
or
lods
fisub
test
pop
pop
jne
es
jge
jb
sbb
xchg
adc
test
mov
inc
inc
cmp
inc
add
stos
clc
mov
out
add
cld
add
je
scas
push
push
push
enter
cmp
daa
aaa
sub
sub
add
and
sub
sar
cli
jbe
loop
icebp
push
jo
test
jnp
inc
scas
mov
pushf
push
ins
imul
das
and
inc
and
or
(bad)
push
xor
dec
fcom
mov
inc
(bad)
jne
jg
and
add
jge
in
push
je
fiadd
dec
add
test
xor
sub
jb
inc
mov
inc
push
js
jl
stos
(bad)
sbb
retf
jne
mov
sbb
push
pop
jne
sbb
mov
jg
lods
int
mov
cmp
inc
add
or
or
in
out
dec
loopne
movs
mov
test
and
inc
test
dec
outs
outs
adc
shr
mov
mov
test
iret
pop
cmp
add
pavgw
lods
les
add
punpckhdq
push
movs
xchg
ror
push
sbb
cwde
pop
push
test
aam
push
pop
xchg
add
clc
test
xchg
nop
dec
jne
push
cli
and
mov
mov
fwait
sbb
pusha
pop
sub
scas
pop
adc
xchg
ficom
mov
hlt
cmps
push
lock
pusha
popf
or
inc
or
mov
pop
inc
call
std
sbb
cmp
mov
push
mov
push
sbb
mov
mov
xchg
(bad)
(bad)
pop
jb
inc
mov
mov
dec
movs
dec
aam
call
jl
fcomp
mov
push
fstp
sahf
in
jb
sar
les
addr16
mov
sub
nop
in
int3
mov
dec
fimul
hlt
enter
lods
xor
mov
stc
ficomp
les
sbb
leave
xchg
rol
bswap
mov
push
ret
sbb
push
mov
div
xor
cmp
push
jb
lock
xchg
push
add
ret
sar
out
pop
mov
outs
xchg
ins
das
fs
inc
scas
fwait
jmp
pop
ins
add
fs
lahf
add
scas
jne
imul
push
push
push
and
push
and
sbb
test
int3
pop
push
cmp
push
pop
cmp
xor
push
movs
and
in
pusha
clc
dec
mov
mov
(bad)
into
xchg
cmp
sbb
push
mov
jnp
add
mov
jbe
adc
inc
xchg
pushf
hlt
int
mov
mov
mov
jns
and
rcl
dec
cmp
es
or
add
mov
inc
push
stos
rcl
add
icebp
jo
add
idiv
mov
nop
repnz
fild
push
push
jmp
fidivr
push
(bad)
lods
push
and
sbb
pop
or
sahf
add
jmp
gs
add
mov
call
dec
call
inc
call
dec
ret
xchg
dec
mov
sub
mov
aaa
jo
ds
call
mov
or
movd
adc
ins
cld
icebp
inc
cmp
popf
jo
adc
movzx
cld
jns
cmp
adc
pusha
jle
sbb
retf
into
inc
or
xchg
adc
cmc
ds
push
xor
and
addr16
loopne
or
jns
cmp
push
jmp
xchg
add
push
xor
pop
inc
add
call
jne
push
loopne
sbb
mov
fild
call
scas
jg
ret
addr16
inc
mov
cmp
clc
sub
daa
mov
loope
xchg
inc
ins
adc
mov
(bad)
pop
push
fwait
add
nop
fsubp
pop
and
lea
mov
inc
mov
and
loope
retf
jg
pusha
pop
jns
dec
xor
and
inc
or
call
inc
imul
adc
sbb
mov
retf
ja
sub
xchg
pop
aad
(bad)
out
fldcw
sub
xchg
rcr
(bad)
mov
and
les
pop
out
and
dec
(bad)
jb
idiv
(bad)
mov
push
sbb
xor
enter
push
sbb
fs
adc
dec
aaa
(bad)
fucomip
sbb
std
cmp
and
and
data16
sub
mov
or
pop
adc
seta
les
cmp
mov
popa
sbb
and
mov
jge
add
inc
jne
mov
fisub
enter
sub
in
xchg
ret
inc
ror
test
inc
dec
cmp
mov
inc
jo
stc
ret
mov
(bad)
or
rcr
mov
mov
loope
lock
inc
or
add
cmp
je
fidivr
mov
mov
popa
out
and
mov
shl
mov
dec
enter
jg
adc
push
fisttp
cmp
push
int
in
inc
xor
ror
cmp
or
or
adc
call
xor
jge
dec
mov
(bad)
mov
mov
aaa
and
frstor
mov
adc
mov
jno
adc
(bad)
or
jne
cmp
inc
fsub
(bad)
imul
xchg
inc
mov
lss
aaa
cmp
fnstcw
sub
xor
in
(bad)
inc
movs
xchg
into
mov
(bad)
jmp
(bad)
sub
adc
lock
add
cmp
sar
cld
or
xchg
hlt
or
in
iret
jnp
out
xchg
in
fsubr
movs
aam
call
fmul
cmp
mov
sub
xor
dec
repz
adc
pushf
xor
mov
jl
sahf
idiv
je
dec
ins
cs
jnp
fs
sbb
push
sub
idiv
dec
hlt
cmp
sahf
cmps
stc
sahf
jo
pop
in
sub
and
ja
repz
cmps
sbb
inc
add
jns
scas
sbb
nop
pop
adc
push
addr16
(bad)
or
or
fs
add
add
xchg
out
adc
sbb
lock
in
push
xchg
leave
cmp
call
cdq
push
dec
fsubp
mov
fmul
out
nop
aam
ror
xchg
ja
dec
int3
cs
enter
cmps
pushf
mov
pop
mov
fwait
add
mov
in
stc
mov
mov
lods
pop
repnz
cmp
push
and
test
movs
pop
cld
(bad)
dec
fmulp
xor
cwde
fmulp
jae
pop
xor
sbb
dec
mov
in
mov
xchg
out
push
pusha
mov
pop
iret
xchg
add
and
jo
mov
aaa
mov
test
lods
mov
idiv
cwde
dec
daa
jb
(bad)
enter
pushf
mov
jb
lods
mov
jnp
mov
fadd
cmps
pop
sub
xchg
adc
pop
sub
in
add
and
enter
push
mov
shl
mov
iret
pop
jns
inc
inc
sub
jae
mov
pop
test
add
popa
cmps
shl
retf
mov
sbb
or
or
inc
mov
or
sub
cmp
out
js
cwde
and
nop
mov
mov
das
idiv
jl
mov
popa
adc
data16
adc
faddp
xor
dec
jp
ret
dec
aaa
pop
loopne
mov
or
mov
in
jmp
test
adc
inc
mov
pop
xor
inc
sbb
or
sbb
ret
inc
icebp
rcr
xlat
push
shl
dec
push
test
adc
ret
inc
and
rol
leave
sbb
cmp
add
mov
sbb
jecxz
dec
ds
movs
clc
clc
lea
outs
mov
adc
inc
cmc
sbb
inc
ins
add
and
adc
dec
sub
xlat
push
fidiv
fisub
sbb
xchg
mov
sbb
sbb
jno
adc
jb
ror
ss
xchg
rol
imul
pusha
nop
fild
sbb
push
nop
shl
jecxz
aam
in
push
(bad)
adc
aam
inc
pop
or
pop
inc
or
mov
mov
nop
inc
lea
jo
in
jmp
lods
adc
jnp
pushf
pushf
pushf
je
mov
cmp
xor
jns
clc
adc
pop
ja
mov
stos
add
ret
hlt
mov
push
push
mov
pop
mov
cmp
mov
pop
mov
sbb
push
cs
dec
hlt
lods
js
cmp
and
mov
xlat
mov
xchg
dec
es
adc
dec
es
mov
cdq
fs
sub
cdq
fs
enter
dec
sub
xchg
dec
sub
cld
sahf
xchg
dec
sub
shr
xchg
dec
loopne
jl
dec
sahf
xchg
in
ror
sub
sub
pushf
dec
sahf
xchg
hlt
adc
int3
clc
aam
sbb
jle
je
dec
add
add
cmp
jns
pop
daa
dec
gs
retf
xchg
fbld
movq
fs
jne
das
mov
jne
inc
imul
fs
pop
push
cdq
pop
outs
dec
jb
pop
outs
jb
ins
xchg
out
(bad)
xchg
jo
inc
jb
ins
push
je
pop
push
and
sbb
jns
ja
pusha
sub
aas
inc
jae
pop
inc
jns
pop
pusha
outs
and
les
(bad)
fdivr
cmps
pop
mov
mov
add
out
fisttp
stos
add
and
pop
out
push
adc
sub
xor
mov
js
mov
sbb
add
fsubr
pop
push
pop
pop
dec
pusha
(bad)
in
iret
rol
and
push
cmp
pop
fmulp
out
std
pop
push
and
sub
push
push
xor
xchg
push
adc
dec
dec
push
push
cmp
nop
or
cs
xor
hlt
adc
sub
add
fnstcw
(bad)
jne
inc
add
and
lea
push
or
lods
loopne
enter
test
add
adc
ins
add
or
and
mov
push
cmp
jle
inc
jb
retf
adc
(bad)
adc
out
jmp
or
adc
scas
inc
cs
js
adc
xchg
fs
fadd
nop
sub
xchg
dec
cmp
outs
fiadd
and
inc
inc
fcomp
and
ror
inc
fadd
gs
leave
mov
sbb
lods
lods
and
jb
pop
jp
ins
jo
xchg
adc
enter
adc
mov
xchg
mov
push
outs
div
fisub
(bad)
int
(bad)
and
and
arpl
xchg
inc
dec
jle
ds
xchg
cwde
cmp
cld
cmovbe
mov
pushf
fnstenv
fisubr
lods
mov
mov
popa
in
add
in
(bad)
inc
inc
jg
in
adc
fwait
jmp
ret
call
mov
call
sub
in
in
repnz
(bad)
ds
add
clc
adc
xor
enter
fbld
adc
pmulhuw
xchg
add
and
inc
push
into
fistp
loopne
nop
adc
pop
clc
(bad)
and
push
loopne
aad
loop
cmp
sub
jg
cmp
sbb
in
dec
es
sub
pop
add
(bad)
(bad)
scas
shl
sub
dec
je
sbb
xchg
sbb
xor
nop
es
jbe
add
clc
push
dec
cmp
lock
inc
mov
xchg
test
dec
pop
jns
stc
leave
into
loopne
mov
iret
and
dec
hlt
mov
iret
and
test
mov
mov
pusha
jae
mov
dec
call
les
nop
push
mov
shl
jb
clc
inc
rol
sub
push
mov
shr
enter
pop
ror
and
les
call
fmul
pop
shl
and
bound
or
loop
rcl
and
dec
loopne
or
pop
inc
jl
arpl
shl
jbe
mov
sub
mov
ss
bndldx
adc
and
nop
addr16
iret
push
jecxz
pmulhuw
xor
iret
mov
inc
jl
movs
data16
jecxz
xchg
add
rol
sar
out
adc
lahf
ret
add
sbb
add
jecxz
xor
pop
xor
inc
or
(bad)
(bad)
cs
gs
xchg
jne
pushf
xchg
scas
pop
bts
jmp
pop
shl
into
mov
pusha
lea
push
rcl
sbb
ret
pop
cld
lahf
test
fisub
cld
jnp
or
inc
add
jle
add
cmp
sti
(bad)
js
movzx
or
shr
or
test
adc
les
adc
push
mov
in
rcl
and
sbb
popf
or
jl
inc
xor
lea
lea
sub
or
pop
inc
mov
and
pusha
push
xchg
inc
sub
add
pop
dec
inc
lahf
and
cmp
mov
inc
sub
iret
aam
in
repz
dec
jnp
ja
popf
shl
in
out
test
outs
xor
in
cwde
cmp
mov
ins
push
jne
push
cld
shl
push
outs
popa
shl
push
xor
adc
or
imul
jne
and
mov
pop
fs
inc
sub
or
adc
fst
div
and
sub
and
sar
mov
jmp
xor
retf
mov
cmp
mov
sub
push
jne
ret
aas
push
sahf
pop
enter
(bad)
clc
fimul
inc
inc
add
cmp
jae
or
mov
sbb
xchg
add
loopne
test
adc
or
loopne
std
stc
sub
push
push
jno
enter
sub
shl
adc
pop
or
adc
inc
xchg
aad
dec
call
in
cmp
mov
ret
outs
cmp
xchg
jp
inc
push
pop
aad
lock
jmp
push
mov
sub
mov
cdq
push
xchg
pusha
mov
add
lahf
ss
push
adc
dec
push
adc
mov
call
add
cmps
daa
loop
sbb
outs
fisubr
add
pop
cmp
adc
cmp
je
add
xor
or
(bad)
adc
and
repz
inc
(bad)
dec
jmp
(bad)
push
inc
ins
push
mov
cdq
cmp
and
shr
cmc
pop
jl
test
addr16
je
pop
jne
pop
pop
cs
not
les
inc
add
or
pop
mov
out
nop
add
fsub
(bad)
or
xor
test
pop
(bad)
mov
mov
mov
cmc
test
leave
sbb
enter
loopne
or
pop
mov
jmp
(bad)
enter
or
mov
push
dec
je
or
outs
and
inc
push
adc
or
ss
jmp
inc
lock
cwde
and
shl
add
mov
data16
inc
pop
es
and
jmp
punpckhwd
cmps
(bad)
jmp
fld
(bad)
push
pop
push
push
fadd
add
xchg
mov
jp
hlt
jae
mov
jae
test
mov
fistp
pop
inc
sbb
jmp
mov
mov
test
xor
outs
cdq
cmps
call
inc
push
mov
push
repnz
jne
enter
lds
enter
or
ins
jecxz
ss
inc
cmp
rcl
icebp
mov
mov
sub
or
pop
daa
daa
sbb
adc
enter
clc
add
shr
outs
mov
cmp
mov
cmp
ja
fadd
ds
mov
out
(bad)
loope
sbb
cmp
pop
ja
out
ins
pushf
push
repz
fnsetpm(287
inc
out
daa
mov
push
in
mov
es
dec
loopne
cmp
adc
out
sbb
data16
retf
mov
mov
enter
adc
(bad)
xor
cmps
pusha
add
sub
(bad)
sbb
cmp
and
lock
(bad)
fiadd
push
add
xor
fst
dec
in
dec
cmp
dec
call
lahf
sub
pop
rcl
dec
sti
shl
loopne
ja
xor
jb
dec
fmul
mov
and
adc
xor
and
fnsave
rcr
shr
sbb
cmp
jne
mov
push
ret
enter
inc
fcmovu
dec
push
enter
xor
scas
nop
je
dec
je
add
pop
jo
xor
fist
or
imul
stos
jo
icebp
in
mov
mov
sub
(bad)
mov
out
call
(bad)
cmps
jge
out
inc
call
jns
addr16
xchg
lods
add
sar
or
fld
jno
daa
xchg
pop
in
mov
loope
pusha
and
mov
mov
pusha
ja
lods
cmp
les
jns
xor
test
movs
rol
inc
mov
cmp
mov
xor
sbb
add
mov
js
push
nop
mov
(bad)
dec
mov
(bad)
(bad)
dec
dec
gs
sub
js
adc
mov
aaa
icebp
mov
cmp
adc
test
in
inc
out
in
add
and
icebp
scas
retf
int
or
push
lods
mov
mov
fucomi
push
fist
mov
aam
icebp
cmp
adc
add
xor
xchg
push
dec
repnz
mov
repnz
xor
adc
aad
xrelease
xor
jne
mov
push
loopne
and
movs
in
loopne
repnz
sub
nop
in
repz
dec
or
aas
xchg
sub
cmp
imul
push
mov
repz
out
pop
jns
data16
jae
jl
jg
push
push
cmc
daa
leave
addr16
in
push
cmp
cmp
dec
ss
or
ss
dec
cmp
push
xor
inc
cmp
or
test
push
cmp
fdiv
sbb
in
in
sahf
adc
(bad)
loopne
nop
es
mov
ins
or
pop
mov
sub
sbb
and
aam
add
ret
pop
loopne
mov
push
int
xor
cmp
and
add
mov
pop
cmp
xor
test
cmp
dec
mov
pop
sub
dec
mov
out
stos
retf
inc
cli
push
cmps
out
cmps
sub
push
in
lahf
outs
mov
and
les
cwde
sbb
inc
push
es
mov
lds
imul
mov
mov
inc
dec
dec
pop
popa
dec
mov
pop
fwait
mov
and
lods
mov
test
add
adc
test
ret
dec
pop
mov
adc
cmp
adc
ja
pushf
jno
and
outs
dec
pop
pop
aaa
leave
jno
cmps
and
and
test
xor
push
add
(bad)
push
nop
jmp
or
mov
add
cmp
nop
add
enter
call
or
movs
cmps
test
pop
xchg
add
lods
aas
(bad)
mov
add
xor
data16
pop
add
add
mov
shl
aam
iret
push
sbb
push
pop
loope
les
or
mov
push
or
add
sub
fimul
das
push
pop
cwde
fstp
fwait
mov
mov
push
add
js
push
xchg
lea
cmc
jmp
(bad)
cmp
push
or
push
adc
aas
add
movs
xor
fdivrp
clc
in
dec
adc
mov
out
dec
jmp
jns
dec
jne
xor
sub
pop
(bad)
and
popa
into
xor
add
mov
push
ds
pop
jnp
ins
add
inc
outs
jne
xchg
jb
adc
div
outs
arpl
into
or
ss
nop
pop
dec
pusha
mov
sbb
outs
addr16
mul
movlps
call
popa
cmp
outs
imul
pop
xor
and
arpl
inc
xor
push
dec
push
add
inc
jns
mov
xor
and
into
xor
aaa
ss
mov
clc
mov
adc
(bad)
pop
inc
ins
sti
and
ss
and
xlat
cmp
inc
xor
in
ss
mov
mov
push
js
pop
jmp
(bad)
loopne
lea
and
vdivss
sbb
push
add
call
es
sbb
sub
mov
add
adc
test
stc
xchg
push
dec
pop
or
cmp
popf
cld
(bad)
xchg
in
es
fmul
mov
dec
inc
outs
jns
mov
ins
and
push
add
push
gs
push
sbb
cmp
jle
popa
shl
add
cld
or
xor
adc
add
or
xchg
push
stc
inc
jo
std
push
jle
mov
call
sbb
add
cmp
sub
push
mov
push
ins
dec
jb
dec
in
fmul
mov
push
or
rcr
iret
push
arpl
call
adc
add
mov
hlt
pop
mov
adc
ds
aaa
icebp
ins
jge
cmp
pop
push
loop
je
pop
(bad)
adc
dec
and
mov
or
pop
pop
pop
div
inc
jle
imul
push
cmp
mov
or
ret
test
sub
add
int3
fwait
cmp
push
or
adc
pop
push
bound
ret
push
les
pusha
mov
push
sti
dec
pushf
sbb
dec
pop
sub
inc
add
xchg
push
mov
add
cmp
or
(bad)
repz
(bad)
push
push
and
inc
xor
aaa
cmp
xor
pop
xchg
fadd
aaa
aam
mov
add
add
and
dec
and
mov
add
cmp
out
sar
cmp
pop
pop
ins
mov
pop
add
pop
dec
mov
test
mov
jb
or
jbe
push
dec
sbb
mov
cmp
push
add
loopne
lea
out
div
test
mov
lahf
jno
inc
push
sub
loope
test
es
jne
add
loope
pusha
xchg
fs
aaa
das
lock
add
mov
add
add
and
mov
jno
jg
jl
inc
xor
dec
sbb
dec
add
pop
cmp
lock
dec
add
sbb
ds
dec
adc
cld
push
out
pop
jp
mov
loop
(bad)
loopne
inc
inc
dec
jne
cdq
add
cs
cwde
add
(bad)
pop
mov
mov
nop
inc
and
mov
mov
mov
pop
push
cmp
adc
fdiv
and
inc
pop
jns
arpl
dec
add
test
jmp
cmp
mov
call
ficom
adc
hlt
add
dec
lods
mov
xor
mov
jns
fcom
nop
shr
xor
gs
dec
xchg
add
pusha
xchg
and
inc
jo
dec
fs
push
push
adc
ds
stos
lods
lods
scas
enter
scas
nop
xchg
xchg
enter
xchg
xchg
xchg
xchg
enter
xchg
cwde
cdq
call
popf
sahf
enter
lahf
add
add
xchg
or
add
add
add
into
inc
test
cmps
jne
push
push
add
jle
add
push
push
scas
fiadd
dec
add
adc
inc
mov
mov
jecxz
movaps
push
sbb
test
jne
lock
pop
gs
jmp
cs
dec
xor
cmp
jle
sbb
or
pop
cld
ret
pop
cmp
add
neg
cmp
xor
jp
mov
rcr
mov
test
mov
or
dec
into
inc
addr16
loope
mov
dec
mov
mov
or
ins
and
cmps
fisttp
add
pop
or
push
or
sbb
(bad)
push
add
mov
ins
mov
retf
je
mov
and
sbb
outs
mov
iret
inc
mov
(bad)
jmp
jle
in
je
jmp
jp
pop
fdivr
mov
ins
sbb
test
out
jne
xor
fild
mov
mov
cmp
je
(bad)
in
or
add
dec
ja
jecxz
lea
fild
jmp
inc
mov
cmp
div
and
jb
or
ret
mov
cmps
cdq
mov
cmp
add
dec
push
fimul
mov
push
adc
mov
retf
or
(bad)
or
in
mov
call
(bad)
out
mov
xor
ins
cmp
lods
mov
jmp
sar
push
push
lock
push
mov
sbb
test
add
push
adc
movzx
pop
bound
fsubrp
adc
mov
xor
iret
pop
sbb
jle
xchg
xlat
mov
push
or
push
xor
xchg
in
(bad)
push
(bad)
aas
int
jle
jb
inc
cmp
pop
push
push
xlat
or
(bad)
cld
(bad)
call
dec
or
lods
cmp
test
rcl
ror
xlat
xchg
nop
inc
sub
sti
les
mov
test
xor
or
pxor
adc
inc
sub
and
imul
ja
mov
loope
adc
mov
mov
scas
sbb
and
or
inc
ja
jmp
cmc
pushf
jo
in
xor
ds
mov
emms
xchg
les
inc
cmp
sub
push
sbb
aam
dec
inc
jp
hlt
xor
rol
imul
scas
idiv
and
cld
xor
jecxz
xlat
movs
aaa
es
mov
cmp
aas
sub
(bad)
xor
fadd
ror
sub
add
mov
xchg
cmp
ins
ret
push
xor
iret
lods
movs
repnz
pop
ja
or
(bad)
mov
or
push
enter
jmp
or
push
add
loopne
xchg
pop
inc
jnp
add
pop
inc
xlat
mov
push
ja
in
xor
out
lock
adc
push
fld
fstp
jge
repnz
adc
pop
add
inc
add
or
pushw
or
cmp
mul
fmul
(bad)
sub
pop
retf
add
mov
mov
jge
dec
movs
mov
pop
xchg
pop
jae
or
or
xchg
inc
in
jns
shl
(bad)
mov
and
pop
out
sub
or
adc
push
in
dec
popf
push
fistp
dec
nop
pop
sub
ja
jns
test
push
cmp
loopne
lock
or
add
cmp
jmp
adc
push
and
leave
sub
mov
inc
push
fmul
cmps
mov
mov
jp
add
pop
sar
add
xor
fild
sbb
adc
and
add
xor
sar
pop
add
mov
mov
ins
in
ja
jae
cld
cmp
jne
pop
adc
sub
add
jae
imul
icebp
jbe
fld
in
xchg
mov
out
jp
cmovne
cmp
(bad)
add
or
jmp
into
test
or
cmps
data16
mov
stos
(bad)
lar
or
and
pop
call
loop
push
or
inc
pop
pop
and
mov
inc
or
pop
in
dec
push
add
push
inc
imul
stc
xor
call
dec
cs
data16
outs
push
sar
imul
sbb
sbb
adc
sub
outs
inc
ins
outs
sbb
adc
lods
fidivr
outs
ins
jns
inc
ins
popa
es
dec
es
shr
shl
and
ss
add
push
push
mov
or
jle
into
fnsave
or
cmps
or
dec
imul
jmp
mov
nop
adc
test
or
dec
sub
add
pop
sub
add
dec
adc
dec
push
add
hlt
xor
out
nop
dec
add
push
mov
inc
cs
dec
gs
outs
fdiv
mov
cmps
inc
ror
jne
or
(bad)
or
cmp
or
jbe
push
adc
cmp
add
push
or
push
add
mov
push
ins
fild
loopne
mov
or
test
outs
inc
jb
dec
dec
pop
mov
sub
push
or
icebp
pop
and
mov
andnps
and
dec
lods
outs
shl
mov
scas
ds
mov
mov
aam
push
leave
xchg
aam
(bad)
inc
pop
dec
mov
and
adc
nop
mov
cmp
mov
scas
test
rcl
sub
inc
and
inc
sbb
sub
loopne
cmps
(bad)
cwde
popa
add
nop
adc
cmp
mov
adc
ins
in
into
dec
imul
in
and
je
in
push
sub
sub
pop
dec
adc
push
xchg
add
inc
sahf
ins
jo
push
or
mov
xchg
mov
outs
movaps
push
sub
nop
jb
or
outs
inc
dec
sbb
cmp
mov
sub
mov
call
add
mov
push
sar
jb
div
pusha
fs
iret
je
push
pop
jnp
cs
push
je
mov
cmps
imul
sub
mov
add
(bad)
(bad)
fcomp
sub
fldenv
ror
test
or
pop
and
jo
test
add
inc
and
or
out
pop
jnp
cs
dec
int3
int3
lds
push
fst
jmp
xor
adc
push
mov
rol
loopne
icebp
add
cmp
dec
push
jmp
pop
xchg
adc
pop
xor
cmp
aad
nop
shr
(bad)
cmovns
jae
fs
jo
vdivss
jg
xor
pushf
jae
push
rcl
sahf
cmps
sbb
sub
adc
not
mov
pushf
or
xlat
jmp
mov
aas
xlat
push
outs
push
inc
inc
div
inc
psubb
jnp
repz
in
xchg
dec
mov
or
fistp
dec
ss
push
cwde
aas
pop
addr16
mov
jo
push
push
rol
das
repz
call
int3
and
and
add
or
adc
sbb
lock
mov
xor
cli
xchg
es
xchg
add
dec
mov
inc
dec
rcr
fnsave
inc
add
sahf
mov
cmp
push
jbe
dec
and
dec
pushf
push
push
fwait
xor
aam
push
outs
push
push
lods
push
iret
test
push
ss
dec
dec
xor
or
in
push
sub
dec
outs
xor
xchg
push
jo
adc
cmps
jns
mov
out
push
sbb
mov
loope
scas
mov
shl
push
push
inc
mov
sbb
mov
add
ss
cs
jno
dec
mov
push
in
push
push
mov
lahf
adc
(bad)
ds
add
jns
push
fbld
push
cmp
mov
call
push
dec
(bad)
bound
push
dec
cs
mov
movs
(bad)
mov
out
shl
cld
xlat
sbb
repnz
or
adc
mov
adc
add
js
cwde
xor
mov
movs
loope
dec
jnp
pop
test
pop
in
popa
int
repz
hlt
not
or
mov
inc
out
mov
cmps
cmp
push
(bad)
popf
hlt
inc
mov
or
nop
add
nop
or
adc
nop
add
sbb
add
nop
add
daa
movs
bound
jmp
in
in
mov
out
push
into
lahf
lods
and
out
sahf
out
dec
pop
addr16
repnz
or
jb
bound
adc
push
sbb
inc
push
out
lods
sbb
imul
test
call
mov
lahf
out
enter
push
dec
je
adc
aas
stos
lock
stos
or
push
and
add
inc
pop
(bad)
mov
sub
mov
dec
mov
ins
pop
pop
mov
lahf
jle
hlt
fbld
scas
push
push
push
jle
sbb
data16
ins
push
test
js
movs
data16
xor
addr16
push
cmp
and
inc
add
jl
popa
lock
xor
push
js
icebp
or
inc
daa
push
mov
dec
or
push
inc
fcom
fist
xchg
lock
push
pop
call
or
jmp
rcl
stos
mov
ror
mov
mov
mov
movs
fwait
test
adc
aam
xchg
inc
push
aam
mov
out
push
shl
(bad)
jmp
add
pop
sbb
inc
(bad)
int
dec
add
std
push
nop
lahf
cmp
add
pop
inc
add
lods
je
movs
sbb
push
ja
pop
and
icebp
mov
dec
xor
int3
fwait
inc
adc
inc
jg
xchg
mov
xchg
test
push
jo
push
mov
clc
xor
shl
enter
in
dec
xchg
or
je
mov
(bad)
jmp
ins
cld
(bad)
sti
pop
cli
(bad)
stc
(bad)
clc
push
push
push
push
push
dec
jnp
mov
cli
icebp
push
call
push
push
cmp
test
out
dec
pop
push
jl
mov
ins
push
pop
imul
out
movs
push
or
cmp
pop
push
ret
xlat
add
dec
(bad)
sbb
pop
add
cmp
or
pop
imul
test
push
popa
addr16
out
repnz
and
adc
repz
scas
mov
dec
popf
aas
iret
jnp
and
push
add
adc
jge
add
arpl
inc
imul
in
test
pushf
ret
mov
xchg
adc
cmps
push
pop
pop
test
mov
sahf
fs
enter
repz
push
add
xor
add
out
push
add
pop
push
call
shr
push
and
lds
and
dec
add
or
fmul
or
add
sub
xor
pop
rcl
push
push
fidivr
push
les
adc
cdq
push
add
add
add
xchg
mov
push
or
cmp
jb
or
les
outs
add
add
jb
jne
(bad)
pusha
push
leave
jae
scas
pusha
and
mov
inc
call
loopne
or
and
pop
push
pusha
add
xor
push
mov
dec
mov
cmp
xlat
bound
mov
fsubr
xchg
xor
cmp
or
adc
add
pop
pusha
adc
test
pop
or
xor
adc
sti
rol
je
sub
sub
adc
xchg
or
jmp
xor
sbb
outs
jmp
adc
mov
add
sbb
cmp
pusha
lahf
stc
mov
stos
dec
ret
mov
repnz
inc
inc
add
ror
sbb
pop
or
loope
les
pusha
inc
fcomp
add
test
dec
out
pusha
adc
dec
call
adc
dec
jae
xchg
sbb
or
fistp
sar
clc
mov
cmp
ins
lods
and
lods
movs
sbb
pop
pop
jmp
lods
stos
jl
and
pop
sbb
loop
mov
pop
pop
mov
ror
mov
pop
or
clc
and
push
inc
or
(bad)
lds
js
fs
push
or
jne
pop
mov
daa
hlt
(bad)
in
inc
or
xchg
pop
and
sub
dec
sub
add
in
in
(bad)
xor
in
inc
sbb
mov
xchg
push
and
pop
enter
adc
movs
push
adc
movs
ss
setge
cmp
aas
sbb
clc
inc
ds
fcom
cwde
pop
mov
pop
push
xchg
(bad)
or
rcr
adc
repnz
movs
mov
push
and
add
sbb
add
xchg
mov
mov
lds
or
sub
imul
je
jo
mov
imul
and
sbb
imul
jecxz
icebp
pusha
mov
inc
push
push
addr16
mov
cmp
(bad)
call
sbb
fdivr
pop
cmp
add
pusha
fcmovbe
cmp
inc
adc
mov
adc
dec
push
lea
dec
mov
test
mov
cld
in
jl
inc
xor
out
inc
dec
jne
xor
mov
imul
test
sahf
sub
outs
lds
inc
and
or
sbb
jg
pusha
inc
int
aam
rcr
nop
sub
pop
jmp
xchg
js
pusha
dec
popf
(bad)
dec
sti
add
xchg
dec
cmps
inc
mov
dec
(bad)
cdq
clc
jge
dec
das
test
pop
or
hlt
fdiv
mov
sub
jmp
rol
pusha
add
add
shl
dec
inc
(bad)
sbb
pop
push
sbb
int3
dec
and
adc
push
dec
or
jl
inc
push
call
ret
xor
xor
xor
inc
pop
sbb
lock
jae
sub
cmp
push
xor
mov
(bad)
jecxz
(bad)
(bad)
fcmovnb
movs
lock
call
dec
sub
(bad)
pop
pop
lea
mov
mov
adc
cmps
and
dec
xchg
sub
pop
retf
out
test
enter
es
shr
pop
mov
sbb
in
int
ror
sar
(bad)
mov
dec
xchg
mov
xor
cmp
test
ror
push
repz
sub
add
inc
inc
xchg
ins
jne
cwde
dec
fstp
lahf
cli
fimul
loop
les
and
scas
mov
dec
sub
or
mov
and
lds
mov
rcr
scas
leave
enter
fadd
rol
xchg
and
mov
dec
int
cmp
dec
jae
out
movs
scas
xor
in
sub
or
shl
inc
sbb
ret
jo
jp
sub
xor
jb
test
inc
lock
cwde
push
and
cmps
push
pop
and
sub
ins
loop
enter
adc
adc
hlt
sti
mov
mov
or
scas
add
adc
sbb
loope
les
lahf
enter
dec
jmp
sbb
cdq
in
cld
jne
fwait
les
add
int3
in
sbb
jp
in
in
and
jmp
and
mov
ins
cmp
shl
js
push
pop
sbb
mov
mov
inc
mov
pop
leave
or
mov
das
in
inc
lods
mov
fwait
into
mov
stos
or
push
or
mov
nop
inc
jno
sub
dec
push
adc
push
adc
or
daa
rol
loope
dec
jae
addr16
icebp
and
or
or
adc
sub
les
cmp
sbb
mov
xchg
js
push
ss
cld
cmp
add
popa
and
lock
pop
bsf
js
jne
or
and
jbe
sti
js
fs
mov
outs
test
fsubr
lea
add
or
xchg
xchg
dec
cld
mov
jmp
add
movs
ret
jmp
rol
push
call
add
xor
pop
mov
push
add
mov
mov
sub
xchg
dec
ret
fistp
inc
loopne
add
cwde
fcom
shr
mov
pop
jecxz
pop
cmp
inc
fisubr
ja
xor
daa
aam
fcom
sub
cwde
loope
mov
pop
ds
push
aaa
mov
push
and
lahf
sub
ret
sbb
sbb
imul
rcr
pop
dec
adc
sahf
push
mov
or
or
push
sti
mov
fcom
loop
(bad)
pop
test
dec
dec
je
clc
and
sbb
mov
ror
mov
xchg
dec
adc
ins
inc
sub
push
int3
popf
xchg
das
or
sbb
or
cmp
aas
or
push
in
jl
aas
cmovle
pop
data16
push
push
mov
(bad)
call
call
mov
xor
daa
cld
int
adc
mov
push
or
jmp
(bad)
adc
in
adc
and
idiv
pop
test
cmp
fstp
xor
into
je
mov
jo
je
mov
fisttp
adc
ret
add
(bad)
ds
aas
sub
mov
or
inc
xor
inc
dec
lods
xchg
repnz
shr
mov
aad
cld
mov
or
adc
adc
cmp
test
cmp
call
ja
fist
cdq
xchg
popf
and
mov
push
and
loop
ins
xor
aas
add
dec
add
sbb
or
rol
cmp
std
(bad)
cmp
xor
jmp
inc
aas
jmp
leave
sub
fs
lahf
adc
sub
adc
hlt
das
out
add
pop
inc
sbb
cmc
call
add
sbb
jmp
adc
dec
pop
xor
mov
add
not
mov
inc
daa
(bad)
test
(bad)
arpl
push
or
fsubp
loopne
mov
icebp
push
ins
add
lock
mov
pop
pop
fbstp
sub
pop
xchg
push
jp
rcl
xchg
dec
in
lods
in
outs
ss
xchg
xor
mov
inc
and
push
and
inc
cmps
add
mov
push
ins
rol
xchg
retf
arpl
aaa
jmp
and
pop
pop
test
pop
or
cmp
rcr
pop
xor
test
(bad)
jmp
inc
cmp
jge
add
adc
jne
sbb
jp
rcr
std
lds
dec
leave
jle
and
adc
push
push
or
jecxz
sub
and
add
imul
push
mov
mov
aam
mov
iret
shl
push
push
adc
sub
out
cmps
jmp
fadd
rol
and
ror
(bad)
xchg
ins
shl
pop
shl
xchg
mov
adc
adc
dec
pop
or
xlat
push
jns
mov
mov
mov
mov
pop
sub
out
and
loopne
fs
cmps
jmp
mov
cmp
(bad)
sub
jg
dec
push
dec
dec
inc
sbb
pop
dec
push
sbb
pop
pusha
xchg
push
xchg
mov
and
lds
sbb
inc
aad
mov
adc
(bad)
dec
enter
daa
xlat
mov
push
jns
push
inc
pop
frstor
jle
adc
daa
fucompp
push
adc
enter
and
test
inc
and
inc
dec
lds
add
or
jo
fidivr
cmps
adc
stos
and
push
pop
cmp
pop
xor
cmp
cmp
ret
faddp
bound
mov
(bad)
dec
(bad)
sbb
sbb
call
scas
dec
adc
cmp
mov
mov
jp
cli
add
test
aaa
and
cwde
or
sar
mov
add
add
sbb
pop
adc
ds
out
je
add
cmps
push
retf
enter
dec
push
rcr
fs
es
push
(bad)
adc
rcr
push
sbb
call
cmp
push
cmp
jae
sar
je
stos
adc
btr
xchg
jl
inc
adc
arpl
cld
aam
clc
out
fmul
dec
inc
outs
dec
test
mov
out
adc
cli
pop
ja
and
bt
jb
dec
jecxz
mov
shl
in
add
push
fs
ret
ret
inc
cmp
sub
push
inc
dec
jne
pop
mov
mov
push
sbb
cmp
inc
sub
jae
das
repnz
mov
or
pusha
ficomp
xchg
push
gs
inc
push
imul
sub
mov
add
cdq
rcr
ret
in
aas
test
add
movs
inc
outs
imul
mov
pop
and
xor
cmp
mov
leave
ret
mov
int
mov
xchg
xchg
push
(bad)
and
sub
ds
fsub
lods
xchg
sbb
xor
jne
pusha
adc
adc
sub
and
mov
dec
sub
imul
pop
aam
loopne
dec
sub
cmc
or
mov
jmp
add
add
aas
or
sub
pop
push
push
inc
inc
sub
sbb
aam
xchg
sbb
jmp
add
xchg
xchg
pop
pop
jle
jmp
xchg
sbb
or
dec
dec
repz
sub
in
mov
ins
shr
cmp
pop
add
(bad)
xchg
sbb
adc
int
test
outs
xlat
pusha
jnp
test
cmp
xchg
and
xchg
(bad)
or
mov
inc
aas
inc
inc
iret
xor
or
cs
lock
push
jae
sub
call
adc
or
push
mov
pop
xor
(bad)
pusha
cmp
inc
xor
push
inc
inc
(bad)
push
sbb
jg
add
and
add
inc
jge
loop
jecxz
and
mov
add
mov
adc
in
or
add
shr
popf
inc
jg
bound
pop
cwde
rcl
rcr
adc
aaa
mov
outs
mov
mov
sub
mov
daa
daa
(bad)
dec
clc
int
test
les
add
adc
add
sub
cmp
jp
addr16
std
push
push
dec
inc
mov
or
(bad)
lods
inc
pop
dec
xchg
add
pop
bound
push
dec
adc
push
pop
and
cmps
xchg
push
sidtd
add
inc
mov
push
cmp
xchg
xor
jp
(bad)
xchg
cld
lock
jle
push
in
sbb
(bad)
idiv
xor
jne
(bad)
mov
fs
inc
in
inc
shr
lea
mov
xor
mov
hlt
inc
lock
push
sbb
jo
push
jb
gs
inc
(bad)
rol
inc
cmps
lock
sub
dec
mov
inc
dec
ret
fcom
jnp
sub
cld
inc
add
push
aaa
(bad)
xchg
(bad)
xor
dec
xchg
(bad)
sbb
fsub
sbb
hlt
and
adc
add
lock
or
sub
xchg
inc
inc
rol
xor
sbb
push
jb
sbb
inc
loope
push
loopne
pop
push
xor
lock
inc
hlt
adc
mov
push
push
lods
cmp
push
call
dec
retf
nop
fisttp
and
pop
loopne
test
les
test
mov
and
pop
out
ret
fs
pop
in
pop
cld
scas
dec
dec
xor
das
test
adc
pop
sbb
cmp
sub
(bad)
lock
and
mov
jmp
cld
(bad)
call
inc
jg
jo
cmp
dec
ret
or
dec
cld
xor
or
sub
ins
inc
pusha
and
push
out
inc
mov
push
xor
in
push
repnz
and
daa
repnz
adc
add
cmp
mov
test
ret
inc
gs
jl
test
fldcw
dec
xbegin
mov
loopne
call
sub
retf
les
xchg
sub
jecxz
mov
cmps
retf
outs
adc
cmps
enter
add
ins
out
or
pop
loop
popa
and
add
arpl
or
push
add
jmp
push
loopne
dec
js
mov
dec
pop
push
sbb
xchg
mov
and
xchg
add
add
pop
aas
imul
and
aas
cmp
or
inc
sub
test
das
fnsave
xchg
and
sub
jno
cmovs
inc
bound
mov
rcl
icebp
pop
aad
add
add
dec
sbb
dec
and
pop
dec
push
xchg
and
mov
fadd
aaa
sbb
loope
adc
in
dec
fist
sub
dec
pop
add
dec
jns
cmp
push
into
fadd
or
push
sbb
adc
in
and
mov
jno
dec
sub
mov
inc
scas
(bad)
dec
ficom
pop
mov
push
mov
xchg
inc
push
push
dec
fnstsw
shr
pop
jno
push
push
jo
mov
adc
inc
or
dec
mov
push
sub
clc
sbb
ins
adc
movs
pop
das
and
xor
mov
fwait
mov
pop
sti
sar
or
cmp
in
dec
stos
adc
jns
pop
pop
add
cwde
mov
int
add
pop
mov
sub
clc
adc
mov
clc
inc
loopne
adc
xchg
xchg
adc
cmp
in
push
icebp
enter
add
iret
mov
shr
imul
icebp
movs
(bad)
add
data16
inc
js
xor
or
outs
dec
mov
jmp
mov
test
cli
call
xor
jmp
out
xor
in
outs
sti
cs
call
clc
jmp
sbb
push
jg
in
jne
cmp
add
adc
cmp
mov
push
dec
jl
adc
mov
in
add
mov
test
adc
mov
cdq
push
lea
and
repz
imul
iret
adc
adc
test
js
sti
or
mov
sub
test
gs
mov
addr16
inc
push
jg
mov
dec
or
out
fidiv
pusha
outs
cmps
mov
add
cmp
and
mov
mov
jnp
mov
inc
ds
or
sbb
pop
xchg
into
outs
xchg
sub
wrmsr
xor
pusha
mov
sbb
scas
push
rcl
test
and
pop
adc
cmp
push
sbb
mov
sub
test
lea
xchg
pusha
jge
cmp
imul
jnp
cmp
nop
pop
cmp
adc
add
jno
mov
leave
xchg
sbb
jae
mov
mov
xchg
mov
mov
rol
adc
sub
fs
in
push
fcom
aaa
xor
movs
cmp
leave
sbb
mov
fisttp
ins
xchg
test
int3
xchg
retf
inc
ret
push
and
sbb
mov
dec
arpl
sbb
cmp
les
into
add
lock
daa
nop
imul
(bad)
stc
fnsave
leave
rol
mov
xor
add
lock
out
xor
mov
add
or
mov
mov
imul
cmc
inc
add
add
scas
ror
dec
inc
adc
rol
dec
or
cmp
dec
mov
(bad)
jmp
mov
push
adc
ret
xor
mov
jne
movs
fsubr
fldcw
add
sbb
imul
jg
add
xchg
jle
add
sub
push
in
fiadd
xor
jp
popa
aam
mov
in
scas
aaa
xchg
sbb
push
in
das
out
add
mov
push
mov
repnz
add
(bad)
mov
rcr
push
mov
push
(bad)
xor
mov
xor
retf
inc
mov
lock
aad
int
pop
sub
xor
adc
test
arpl
inc
push
ror
sbb
mov
add
and
ret
and
lea
push
mov
ror
cmp
mov
push
in
movhps
sbb
(bad)
scas
stc
nop
cdq
adc
mov
ja
ins
adc
mov
jl
inc
xor
inc
inc
xchg
adc
add
shr
dec
pop
jmp
push
dec
in
je
or
and
pop
call
jl
cld
lahf
into
add
mov
pop
lock
mov
mov
xchg
mov
or
add
jge
sbb
jle
fwait
pop
dec
sbb
push
pusha
hlt
jl
xor
shl
dec
int
sbb
inc
and
je
ins
mov
cdq
nop
add
push
(bad)
mov
sbb
mov
adc
shr
lock
adc
popf
imul
test
xchg
xchg
pop
popf
sub
push
mov
and
shl
inc
dec
push
jnp
inc
lds
js
shl
or
sbb
xchg
add
call
(bad)
adc
rcr
inc
or
pop
out
addr16
push
addr16
sbb
rol
out
mov
ret
fistp
jno
jb
sub
mov
add
fwait
call
sub
in
inc
fstp
sub
xchg
loope
ins
cmp
cmp
add
pop
aam
and
dec
jbe
and
adc
sbb
sbb
mov
sbb
dec
push
shl
cmps
xchg
xor
arpl
xchg
mov
push
ror
in
adc
push
out
lea
push
fadd
hlt
mov
ins
adc
call
fdiv
ins
sbb
add
cdq
rol
sqrtps
pop
pusha
xor
jb
jne
add
xor
push
push
inc
out
or
jo
sub
nop
mov
add
or
or
adc
mov
ret
mov
sbb
pop
push
in
mov
pop
repnz
inc
(bad)
outs
leave
in
add
push
cmps
lea
repnz
imul
pop
int
sbb
gs
enter
or
mov
or
sbb
stc
inc
sti
add
add
jbe
or
ret
shr
cwde
add
or
call
or
push
cmp
add
fcomp
jbe
add
sbb
push
sar
inc
aam
or
jecxz
rcr
sub
push
mov
xor
data16
inc
in
shl
cmps
or
in
dec
movs
lea
cmps
lock
in
sbb
movs
leave
sbb
pop
mov
pop
jo
xchg
pop
call
clc
sbb
mov
dec
(bad)
inc
push
fld
push
(bad)
clc
call
pop
jno
jno
or
add
out
pop
lods
inc
push
mov
in
pop
pop
mov
jne
sub
imul
and
ins
shr
and
pushf
mov
and
or
ror
fadd
in
pusha
cmps
mov
hlt
movs
and
jne
add
add
adc
and
cwde
cli
sub
mov
jnp
pop
or
xor
lods
push
jb
inc
cmp
xchg
xchg
dec
add
push
sbb
in
add
shr
sahf
xlat
xchg
jo
ror
cmp
loopne
mov
fmul
add
pop
inc
jno
and
mov
test
mov
push
push
aaa
jl
jp
jl
or
jnp
call
fwait
sub
not
pop
cmp
or
cmp
call
aam
jno
xor
add
je
dec
or
adc
add
push
fdivr
nop
scas
test
dec
int3
cmps
add
iret
dec
sbb
add
cs
sbb
mov
inc
jo
jecxz
push
and
ficom
popa
jp
jecxz
pop
and
mov
ror
cmp
jmp
test
adc
repnz
push
or
into
std
jp
idiv
data16
add
pop
inc
add
add
or
loopne
add
mov
lods
or
leave
js
sbb
je
push
jne
push
sbb
push
adc
js
mov
jmp
mov
daa
or
dec
imul
mov
data16
mov
daa
cmp
mov
or
cmp
dec
inc
dec
jle
cmp
jle
or
sub
or
add
mov
mov
lods
ins
lods
push
mov
xchg
ins
mov
dec
mov
enter
into
lahf
dec
inc
cdq
(bad)
mov
add
cmp
pop
test
push
xchg
push
mov
cdq
inc
ret
ins
sub
icebp
fsubr
sub
pop
nop
add
xchg
xchg
pop
dec
xor
mov
sbb
out
xchg
push
push
add
pop
mov
bnd
clc
dec
movs
pop
pusha
xor
inc
lods
scas
movs
adc
dec
push
fdivr
cmp
popa
cld
dec
pop
fistp
pop
push
sub
retf
cld
daa
inc
mov
sbb
or
dec
retf
(bad)
fild
ja
xor
pop
outs
inc
sahf
sub
cmp
imul
sahf
sbb
mov
mov
ficomp
push
jbe
push
daa
call
popf
idiv
out
or
outs
jo
imul
sub
mov
jo
inc
sub
mov
lock
nop
iret
mov
or
sub
or
inc
call
sub
adc
stc
pop
mov
xchg
mov
jmp
mov
pusha
fidivr
retf
add
push
out
mov
xor
adc
inc
sbb
cmps
jle
outs
xor
mov
imul
mov
inc
dec
inc
or
cmc
push
adc
mov
push
or
add
push
jecxz
inc
jae
fadd
cmp
sub
push
imul
cmp
inc
out
and
jbe
inc
and
lea
iret
retf
and
add
(bad)
sbb
adc
jmp
fidiv
adc
shr
jae
push
dec
hlt
(bad)
loope
adc
mov
outs
or
adc
je
test
sbb
scas
pop
pusha
jl
sub
pop
cmp
jo
jns
(bad)
cld
rcr
and
pop
leave
push
pop
stc
cs
dec
rcr
and
into
(bad)
imul
or
adc
aam
inc
adc
mov
mov
and
enter
lea
xchg
dec
arpl
xor
ja
movs
inc
cmp
mov
bound
retf
daa
dec
cmp
adc
cmp
arpl
xchg
icebp
push
push
imul
outs
xor
sbb
aam
pop
inc
movs
rdtsc
hlt
or
out
fsub
sub
popf
lock
in
push
js
push
lock
adc
fistp
movs
push
ja
inc
pop
mov
xor
cwde
icebp
add
jl
xchg
fsub
cdq
mov
dec
ret
push
add
loope
dec
popf
push
and
add
cmp
fstp
xchg
sbb
cs
fs
mov
inc
push
jb
fs
pop
add
add
cmp
int3
xchg
gs
fcomp
and
pop
ja
je
xchg
iret
lock
or
cmp
xor
adc
out
pop
inc
inc
pusha
pusha
out
xchg
mov
xchg
push
cmp
je
dec
mov
xchg
sub
add
leave
sbb
xchg
pop
retf
pop
mov
sub
pop
push
mov
(bad)
lahf
mov
or
xor
nop
leave
push
rcr
inc
mov
or
add
ret
mov
sub
js
sbb
data16
adc
xchg
xchg
mov
xchg
popa
(bad)
cmp
dec
jp
push
xchg
dec
adc
ja
ret
inc
add
dec
lods
fst
dec
arpl
mov
out
jg
ins
movs
inc
adc
push
adc
add
or
adc
mov
dec
(bad)
jbe
mov
adc
adc
sbb
push
bound
sbb
stos
add
mov
adc
sub
jb
mov
hlt
mov
hlt
fcomp
paddusb
mov
inc
jne
(bad)
fimul
push
nop
addr16
add
jle
push
jne
enter
pop
push
push
and
dec
movs
(bad)
adc
cmp
inc
retf
cmp
jae
int3
and
sub
arpl
es
fcom
xor
sbb
cs
add
movs
leave
and
mov
das
inc
xchg
inc
not
push
push
cmp
jmp
loop
rol
add
cmp
into
data16
retf
pusha
xchg
idiv
push
aam
and
push
popa
(bad)
in
push
push
pop
jecxz
cmp
leave
fisub
or
mov
fdivr
add
pop
imul
jge
in
add
arpl
imul
pusha
cmp
jne
aad
jno
push
or
jne
pop
cmp
add
sub
shr
imul
mov
imul
add
loop
xor
sub
push
xor
cwde
sub
dec
adc
gs
sub
push
lea
cmp
mov
push
into
cmps
sti
and
xor
cmc
jecxz
hlt
inc
jl
js
mov
pop
mov
xor
or
jbe
icebp
rcl
sub
in
out
xor
xor
push
mov
cmp
pop
mov
cli
xor
xchg
pop
cwde
jno
jne
inc
add
iret
pop
ins
xchg
dec
and
test
adc
cmp
or
xchg
iret
dec
aam
xchg
je
xor
xlat
jnp
mov
es
dec
jne
and
cmps
add
mov
push
shl
js
mov
mov
jmp
arpl
and
outs
add
and
push
push
xchg
loop
sbb
jecxz
call
dec
jne
jp
fdivr
sub
(bad)
jne
adc
sub
sbb
clc
jmp
into
nop
popf
out
xchg
sbb
in
or
test
sub
adc
ret
in
std
push
lock
ficomp
push
(bad)
jmp
inc
mov
jle
mov
cmp
(bad)
inc
test
jbe
adc
mov
xchg
lods
ja
clc
sbb
fld
push
sub
fwait
mov
cmp
retf
cs
loopne
cmp
or
jne
pop
aas
fadd
adc
adc
dec
cs
xor
pop
xchg
adc
mov
cmp
push
cmp
adc
xchg
xchg
ins
inc
out
mov
adc
mov
bound
in
movs
fwait
ins
mov
inc
cmps
in
shl
or
div
mov
pop
sbb
jno
jge
ins
(bad)
pushf
pop
dec
jne
aad
mov
inc
or
xchg
mov
mov
fiadd
jge
cs
imul
inc
and
sbb
das
cmpxchg
(bad)
xor
and
pop
mov
sbb
addr16
adc
adc
xor
sbb
retf
inc
and
and
cmps
push
mov
and
and
fisub
mov
sbb
imul
mov
sub
push
pop
lods
pop
mov
cld
jle
icebp
lds
std
dec
mov
and
sbb
cmp
test
test
push
pushf
fs
xor
not
and
aaa
int3
ret
or
fisttp
mul
mov
add
xchg
mov
mov
call
push
pop
das
jecxz
dec
sbb
call
gs
xor
push
popf
das
mov
mov
pop
js
jbe
pop
int
das
mov
addr16
jo
ret
popa
mov
call
cmp
sbb
sub
mov
in
stos
sub
xchg
jo
imul
sub
xor
push
jno
and
bound
mov
dec
sbb
adc
add
or
pop
inc
lods
lock
dec
sub
retf
shl
inc
das
(bad)
(bad)
ins
push
mov
push
and
(bad)
pop
test
pop
or
add
(bad)
pop
hlt
adc
push
sub
mov
xor
xor
add
aam
adc
jns
shl
out
or
jne
inc
sub
cmp
inc
dec
xchg
jno
sub
in
adc
repnz
movs
pushf
loopne
mov
pop
push
mov
or
sub
inc
sub
ins
dec
inc
inc
nop
push
adc
lock
dec
pushf
sub
jae
adc
adc
test
in
jo
je
adc
push
imul
adc
fdiv
cmp
sbb
fimul
ins
popa
retf
inc
mov
push
dec
push
jno
inc
xchg
jae
pop
adc
add
pop
push
mov
add
sub
outs
sbb
lea
ds
pop
popa
sbb
add
js
or
mov
sbb
sbb
jb
push
sbb
add
stc
pop
cmps
(bad)
pop
in
call
xor
mov
mov
inc
cs
retf
sbb
cs
ret
fld
xor
add
dec
push
int3
pop
aaa
push
xchg
mov
mov
push
adc
or
mov
shl
mov
pop
int
sub
fsub
or
out
jae
ja
inc
adc
movs
mov
jge
pop
call
dec
imul
pop
xor
pop
je
fs
mulps
push
nop
out
sbb
pop
pop
bound
es
in
jmp
cmp
and
jmp
jmp
(bad)
mov
shl
xor
jne
ja
cld
imul
jge
popa
sub
xor
popa
mov
sti
cmp
clc
dec
mov
sub
out
sbb
cwde
call
into
aam
inc
and
xchg
mov
pop
gs
mov
adc
dec
ficom
mov
push
cmp
and
std
xor
add
xor
enter
add
jl
and
add
fld
and
and
adc
xor
or
sub
call
data16
rcr
and
outs
popa
or
outs
mov
mov
retf
ins
add
fisubr
add
ja
loop
adc
and
das
popa
dec
push
into
cmp
dec
inc
adc
inc
test
ficomp
sub
nop
aaa
jb
cld
pop
ja
das
sbb
nop
out
jl
mov
cmp
test
xchg
mov
inc
jle
xlat
rol
inc
sub
mov
push
and
jmp
xchg
stc
sbb
mov
push
mov
cs
cmps
ret
or
jecxz
enter
adc
in
dec
mov
cdq
jecxz
lds
push
mov
push
inc
add
mov
add
sti
mov
add
mov
mov
jne
ret
cmp
jnp
ucomiss
push
nop
mov
pop
cmp
xchg
inc
add
je
xor
shl
inc
or
adc
add
imul
pushf
cmp
mov
add
add
xchg
outs
(bad)
fsub
cld
jb
push
push
pop
es
push
and
cwde
sub
push
jg
adc
sbb
and
mov
hlt
movs
fisub
aad
sti
mov
in
ret
xchg
mov
sub
stos
cld
pushf
jnp
leave
das
dec
fmul
and
xor
add
mov
adc
push
dec
xchg
mov
test
jmp
test
sbb
cs
cmp
mov
push
aam
outs
pop
sbb
lods
das
cmc
lea
lods
hlt
ins
movs
(bad)
mov
cmp
push
add
sbb
data16
pop
add
mov
cmp
push
jl
sub
cmp
sub
sub
adc
test
inc
add
cs
adc
add
cdq
push
dec
out
ins
dec
jmp
lods
adc
xlat
mov
sub
je
sbb
fwait
stos
imul
cmp
movs
lods
pop
dec
cmp
ret
aaa
fadd
repnz
sub
mov
arpl
out
or
mov
lahf
inc
add
jl
sbb
sub
jno
(bad)
call
mov
cmp
add
sbb
and
xchg
sahf
cmp
in
je
mov
push
cmp
xor
xor
sub
and
sbb
pop
jge
cld
xor
sbb
add
nop
mov
imul
mov
jge
js
aas
ror
sub
or
aad
or
(bad)
cmp
clc
jge
nop
test
inc
mov
and
cmps
or
mov
or
sbb
rol
add
retf
inc
daa
add
mov
cwde
sbb
gs
imul
or
test
sbb
cld
cmp
ja
pop
cmp
sar
push
addr16
(bad)
cmps
stc
pop
jg
test
stc
sahf
jmp
sub
pusha
mov
sbb
dec
call
push
cmc
pop
xor
xor
or
std
xor
xor
mov
inc
in
adc
adc
mov
test
sbb
loopne
into
imul
(bad)
fsubr
lds
lods
cmp
or
inc
cs
retf
call
cmp
push
mov
xchg
dec
sbb
fcomp
push
sti
mov
lock
add
fwait
mov
adc
movs
cli
shr
pop
retf
and
aam
ror
imul
and
je
movs
imul
push
aam
cdq
ins
xor
add
push
aas
sti
or
pop
fmul
ret
or
or
in
fdivr
mov
mov
ret
inc
rcl
(bad)
inc
ds
cwde
fcom
mov
sbb
mov
(bad)
pop
imul
and
cld
shl
jmp
dec
rol
aaa
rcl
add
fcomp
arpl
ret
enter
mov
hlt
ror
dec
sbb
movs
cmp
xchg
cmp
xor
das
inc
clc
sbb
xchg
mov
add
das
jo
cmc
sbb
pop
mov
(bad)
rcl
jne
xchg
push
mov
xor
jno
add
sar
ror
mov
fs
out
add
addr16
jns
sbb
sub
add
add
fs
outs
sbb
lods
movs
fiadd
cmp
call
xor
(bad)
mov
or
mov
push
adc
jecxz
and
sbb
retf
adc
add
xor
das
das
xchg
push
daa
adc
sbb
or
mov
in
mov
fst
or
push
and
pop
pop
fistp
cmp
push
or
jmp
pop
sbb
xchg
xchg
ret
sub
test
sbb
ins
arpl
ja
pop
xor
push
jo
xor
xor
stos
dec
ret
or
lock
push
movs
push
(bad)
call
cmp
sbb
adc
pop
stos
or
jecxz
jbe
mov
test
mov
xchg
sub
dec
adc
pop
ja
bts
jmp
adc
movs
enter
inc
ja
out
cmp
inc
daa
push
(bad)
mov
fadd
sbb
cmp
xor
mov
ret
shl
push
in
pop
pushf
xor
mov
aaa
aad
das
xor
xchg
into
lds
push
inc
xchg
jne
stos
cmp
pop
mov
xchg
push
je
adc
js
adc
dec
pop
push
mov
dec
dec
imul
arpl
cmp
adc
dec
sub
and
push
retf
jae
push
xchg
fnstsw
imul
je
jmp
adc
inc
clc
(bad)
cmp
aas
inc
mov
push
cmp
pusha
das
push
mov
pop
arpl
in
add
mov
hlt
ror
cmps
pushf
dec
loopne
out
or
sub
xchg
cmp
xchg
or
push
inc
add
cmps
mov
or
mov
pop
inc
mov
xor
jmp
and
in
jo
imul
sar
scas
cmp
daa
mov
leave
xchg
mov
repz
sbb
mov
adc
cwde
push
xchg
adc
push
push
and
(bad)
push
dec
pop
mov
push
cmp
sahf
mov
pop
out
cmp
shl
fucomi
push
repnz
adc
pop
sub
lock
push
push
stos
adc
xchg
fld
dec
icebp
mov
and
add
into
int
loope
pop
(bad)
mov
add
jl
aas
pop
sar
push
mov
pusha
sbb
jbe
mov
cmp
ror
mov
and
repnz
or
mov
mov
dec
add
fwait
in
hlt
mov
pusha
fcomp
lea
cwde
mov
sti
iret
sub
hlt
adc
pop
es
fadd
ret
ret
jmp
test
dec
inc
cmp
aaa
pop
mov
inc
pop
dec
add
call
repnz
mov
or
jo
push
sti
jae
inc
or
cmps
(bad)
daa
je
cmp
lods
test
out
jns
pop
call
cmp
add
push
add
dec
in
xor
nop
pop
adc
test
iret
adc
and
(bad)
push
and
outs
call
rcl
popa
popa
fs
mov
push
clc
out
dec
push
mov
mov
inc
dec
call
adc
and
mov
ret
sbb
pop
aam
and
sbb
leave
push
test
int
xor
push
sub
ins
push
out
sub
and
loop
add
push
pop
add
push
lock
mov
jle
pop
and
adc
sub
xchg
outs
push
and
ss
jg
js
pop
loope
scas
jne
adc
lods
cmc
mov
mov
icebp
add
bound
hlt
pop
mov
xchg
call
sbb
inc
sub
jb
jp
mov
sbb
ret
shl
mov
outs
xchg
je
cmps
enter
pop
fcomp
lock
stos
mov
lock
retf
lods
jno
lods
sub
mov
dec
out
xor
mov
mov
sti
cmp
cmps
or
cmps
cmp
or
add
nop
call
pusha
xor
mov
mov
or
sar
sub
aas
sbb
xor
cmp
sub
test
ret
neg
mov
dec
jle
mov
enter
push
shr
cs
(bad)
jp
lahf
ja
mov
pop
cs
push
and
(bad)
xor
cmps
adc
or
xchg
cwde
in
shl
sub
and
jbe
jl
push
je
or
xchg
mov
cmp
jmp
xchg
sub
ret
dec
sbb
daa
in
pop
inc
cdq
clc
xor
ins
sub
shr
(bad)
xor
ins
jmp
daa
aam
(bad)
sti
xchg
sub
fsubr
inc
push
lea
xor
jecxz
int3
jmp
and
mov
add
std
(bad)
in
or
xchg
push
adc
pop
pop
and
scas
(bad)
jne
into
fwait
(bad)
dec
or
dec
push
dec
das
rcr
sbb
sub
fadd
add
fadd
dec
scas
pop
and
push
xchg
lods
adc
jmp
cmp
or
sbb
or
call
sti
add
jl
or
xor
push
cmp
(bad)
add
cmp
fdivr
and
fist
push
add
add
or
mov
call
adc
xor
je
and
add
mov
xchg
push
xor
mov
in
or
add
vprotw
or
(bad)
pop
xor
fst
rcl
mov
xchg
or
mov
push
ds
push
sar
push
jmp
sti
xor
sub
xchg
fistp
addr16
mov
add
xchg
sbb
sti
adc
push
pop
sar
mov
dec
pop
sar
adc
sar
cmp
je
sbb
js
jg
xchg
adc
std
adc
popa
lods
ja
push
jmp
or
(bad)
xor
pop
aam
xchg
push
xor
aaa
gs
outs
hlt
push
cmp
push
int3
mov
fnstsw
dec
scas
mov
mov
push
sbb
fsub
jle
xchg
test
(bad)
cmp
js
jbe
das
mov
adc
jne
cmp
ret
push
sub
or
in
pop
mov
sbb
fst
es
and
loopne
xlat
jg
cmp
and
pop
stos
fcmovnb
adc
pop
push
or
sbb
jb
inc
mov
mov
xchg
ss
das
cli
hlt
pop
jp
aas
arpl
xchg
adc
pop
inc
push
adc
dec
cs
dec
movs
mov
sar
mov
add
shl
pop
sbb
add
cwde
sbb
outs
xchg
adc
fnstcw
les
pop
stos
mov
or
ret
mov
pop
adc
pop
jg
pop
mov
pop
je
mov
cdq
(bad)
in
pop
adc
out
adc
arpl
(bad)
mov
dec
lock
cmps
(bad)
cmp
(bad)
push
data16
sub
sbb
stos
pop
xchg
sbb
sbb
sub
adc
jb
pop
mov
pop
add
pop
jo
lahf
xor
sub
xchg
addr16
or
(bad)
adc
sbb
xlat
xor
in
adc
add
inc
xor
sub
push
and
xchg
add
sub
inc
and
and
mov
add
scas
pop
xchg
fisubr
cmp
bound
add
sbb
daa
lock
mov
jae
aam
adc
ret
stos
xor
lods
xchg
jbe
pop
and
adc
cmp
jmp
mov
jmp
mov
icebp
push
sub
pop
adc
out
sbb
mov
adc
pusha
mov
sub
dec
or
nop
outs
loop
les
adc
loop
or
lahf
jb
shl
sbb
popf
adc
jo
pop
adc
(bad)
mov
sub
or
adc
jmp
mul
dec
add
rcr
xor
mov
mov
mov
jl
push
push
jge
push
push
push
pop
pop
pop
dec
dec
repz
mov
push
jo
or
push
fwait
or
push
xchg
sar
cwde
push
pop
add
mov
inc
inc
push
push
js
dec
mov
cmps
scas
dec
gs
outs
jo
and
and
mov
pop
xor
mov
inc
daa
mov
pop
pop
arpl
inc
int
dec
dec
pop
arpl
xchg
mov
add
scas
xchg
vaddsubps
or
jne
cmp
jne
das
sbb
loope
mov
and
xlat
or
adc
dec
inc
(bad)
push
retf
je
push
mov
pop
cmp
push
pusha
sar
xor
fs
mov
mov
hlt
pop
inc
imul
(bad)
jge
cmp
sub
and
in
sbb
fadd
pop
psubsw
inc
dec
jne
push
sub
sbb
ror
jno
das
(bad)
fistp
add
and
mov
mov
pop
push
das
(bad)
jmp
jmp
aaa
xchg
stos
xor
cmp
pop
dec
stos
push
inc
sub
add
adc
pop
add
dec
movs
mov
jmp
add
fld
out
bound
mov
xor
xor
into
jge
es
cmp
jg
push
dec
cmp
xchg
jge
gs
jne
nop
cdq
sub
popa
(bad)
adc
sbb
or
jb
jne
sbb
or
and
call
or
inc
add
rol
adc
or
ss
aas
lods
adc
add
sub
sbb
iret
mov
or
out
mov
jmp
lods
mov
retf
or
push
ret
fmul
sbb
xor
dec
cmp
and
inc
and
es
repnz
and
jl
xor
jbe
xchg
jge
xor
test
inc
and
xchg
adc
or
add
xchg
or
add
xchg
dec
mov
jno
xlat
ins
(bad)
or
inc
rcl
dec
hlt
mov
mov
or
popa
add
adc
pusha
push
add
das
addr16
out
in
cmp
nop
or
js
add
sub
and
(bad)
sub
xchg
cmp
lock
loope
imul
ror
ds
pusha
or
out
shl
dec
or
sub
dec
and
jo
pop
push
push
adc
aaa
clc
vcvtsd2si
adc
jmp
cmp
ret
imul
sbb
push
daa
out
inc
pop
inc
retf
jne
sub
add
pop
pop
xchg
jle
jns
xchg
sub
ja
call
push
mov
and
daa
js
cmp
xchg
cmps
xchg
xor
mov
add
cmp
out
inc
inc
inc
mov
inc
je
dec
push
neg
aaa
and
xlat
sub
stos
ret
adc
out
mov
and
repz
lods
adc
sbb
add
loop
sbb
mov
in
ret
inc
ins
not
es
sbb
retf
cmp
jne
pusha
adc
jmp
nop
cmp
out
xor
mov
cmp
or
dec
adc
or
or
out
mov
adc
cs
jle
inc
fs
pop
adc
xchg
pop
mov
xlat
iret
cmps
adc
push
xchg
daa
mov
outs
pop
btc
add
or
test
adc
jge
push
sbb
cs
retf
(bad)
lods
movs
das
add
in
leave
add
ror
(bad)
adc
in
add
add
neg
mov
frstor
movs
mov
jle
jo
movs
fiadd
dec
inc
retf
fcomp
xor
loop
popf
push
or
sbb
or
and
arpl
cmp
xlat
pop
sti
jne
fistp
std
sahf
test
add
add
push
jo
ins
push
add
repnz
inc
daa
std
sub
inc
cwde
mov
and
mov
mov
add
popa
dec
cmps
pop
pop
retf
xchg
pslld
adc
add
hlt
add
adc
cmp
cmp
sahf
add
mov
inc
mov
xchg
out
jg
cmps
xor
mov
movs
mov
mov
into
aad
test
ret
xchg
jp
add
sbb
mov
lock
mov
pop
mov
pusha
movs
movs
pusha
call
fcomp
inc
fdivr
pop
push
js
xor
inc
xor
pop
loopne
push
pop
add
and
mov
push
sbb
push
scas
sub
xlat
adc
rcr
xchg
mov
pop
(bad)
fsubr
or
mov
ja
adc
push
xlat
or
(bad)
test
loopne
xchg
jmp
in
and
mov
jb
int
sar
cmps
xor
mov
add
jp
popa
dec
xchg
pop
or
jne
and
add
sbb
adc
fdivr
neg
sub
inc
inc
adc
add
sub
test
or
sbb
popf
lods
push
and
sub
imul
jb
(bad)
aaa
or
lods
xor
push
mov
pusha
push
test
aaa
inc
nop
aas
push
cmps
lds
shr
push
fdiv
and
shl
cmp
js
xor
adc
sub
test
add
adc
stos
movs
mov
push
ret
inc
add
add
mov
std
cs
push
mov
clc
aam
out
add
mov
les
or
mov
mov
out
shr
lea
outs
adc
inc
inc
pop
or
add
mov
and
or
out
in
push
test
cld
pcmpeqb
xor
adc
pop
mov
pop
dec
test
or
xchg
loopne
sbb
scas
adc
psrlw
pop
mov
push
pusha
mov
cmp
dec
or
adc
ins
adc
and
outs
xor
shl
jnp
fwait
jp
pop
mov
cli
sar
push
xor
call
fwait
xor
fcom
adc
jae
outs
pushf
and
sbb
adc
icebp
mov
inc
adc
mov
fmul
fidiv
push
stos
add
popf
stc
fidiv
les
push
in
sti
pushf
lock
test
mov
cmp
les
cmps
xor
pop
or
loop
jge
retf
pop
pop
xor
in
out
and
adc
mov
mov
or
mov
lahf
fdivr
test
inc
mov
pop
xchg
adc
cmp
and
cmp
aaa
es
cmps
arpl
inc
in
popa
retf
dec
gs
mov
fs
sbb
sub
ret
cmp
rcr
pop
je
pop
and
or
das
sub
push
repnz
pop
shl
pop
(bad)
cmp
pop
sub
cld
adc
das
test
jbe
test
ins
add
cmp
rsm
inc
dec
mov
adc
jb
jnp
inc
push
iret
aam
inc
xchg
aam
mov
pop
push
mov
push
lea
test
pop
adc
push
jecxz
mov
push
cmp
cmp
add
cmp
inc
dec
popf
(bad)
mov
mov
cmp
mov
jmp
adc
jmp
mov
loopne
add
xchg
(bad)
js
and
aaa
mov
add
inc
or
or
pop
cdq
fadd
aas
sub
and
sbb
das
lock
(bad)
out
fmul
add
or
add
mov
jmp
mov
pop
sub
test
cmps
mov
test
push
call
jmp
push
test
or
shl
mov
movs
or
jnp
jne
outs
dec
pop
add
ror
add
add
xor
sbb
mov
and
out
xor
pop
cmp
and
fdiv
jbe
and
pushf
rol
loop
mov
rcr
xlat
xchg
hlt
xchg
xor
enter
fwait
lock
lods
push
and
cmp
jmp
xchg
imul
dec
mov
and
ror
xor
xchg
pop
scas
jmp
cmp
movs
jno
adc
(bad)
addr16
add
test
retf
xor
inc
mov
cmp
cmps
ins
call
int
pop
movs
lsl
and
sub
dec
(bad)
(bad)
mov
mov
push
test
addr16
lods
pop
movs
push
popf
adc
stos
cmp
shl
hlt
popa
(bad)
sbb
sbb
lds
mov
push
movs
shl
push
push
pop
rol
jne
(bad)
in
cdq
mov
call
inc
shr
push
imul
in
add
test
adc
popf
stc
sub
jnp
mov
daa
daa
jo
jb
daa
daa
daa
daa
je
jbe
daa
daa
daa
daa
js
jp
daa
daa
daa
daa
jl
jle
daa
daa
daa
daa
pusha
popa
bound
daa
daa
daa
fs
daa
daa
daa
push
daa
daa
daa
ins
ins
outs
outs
daa
daa
daa
daa
push
push
push
push
daa
daa
daa
daa
push
push
push
push
daa
daa
daa
daa
pop
pop
pop
pop
daa
daa
daa
daa
pop
pop
pop
pop
daa
daa
daa
daa
inc
inc
inc
inc
daa
daa
daa
daa
inc
inc
inc
inc
daa
daa
daa
daa
dec
dec
dec
dec
nop
push
mov
fild
mov
test
adc
push
into
ins
outs
sub
mov
inc
test
fcom
in
psrlw
or
mov
jb
jb
sbb
and
std
xchg
sub
push
inc
sbb
add
sbb
or
ret
ins
xchg
adc
lods
mov
fsubr
aaa
mov
fwait
jae
pusha
xchg
or
nop
jo
add
ror
dec
jl
xor
mov
push
je
ins
cdq
loope
sbb
xor
data16
enter
jnp
or
je
arpl
adc
xor
adc
gs
imul
cdq
inc
ds
int
(bad)
cmp
add
cs
es
outs
int
lock
fild
pop
jo
outs
sbb
push
inc
popa
jae
add
jns
je
sbb
or
push
inc
or
sar
dec
outs
jae
adc
les
into
or
dec
sub
inc
(bad)
xchg
mov
inc
ins
cmps
push
push
push
imul
je
push
inc
jns
mov
adc
nop
and
xchg
adc
imul
adc
mov
jbe
xor
(bad)
adc
push
aas
mov
loopne
ret
mov
adc
mov
and
jne
dec
pop
movhps
adc
bound
add
push
dec
jl
jp
or
push
mov
arpl
cs
inc
imul
pop
inc
outs
jb
jae
fmul
jae
pop
outs
fadd
add
mov
call
mov
pop
out
or
std
call
mov
aad
mov
or
or
xor
xor
cmps
xchg
mov
and
mov
cmps
inc
xchg
ins
out
or
call
cmp
sahf
imul
(bad)
and
nop
mov
daa
cmp
mov
sub
and
retf
add
icebp
iret
pop
adc
ins
pop
or
ins
into
push
add
pop
aas
rcl
sti
ret
cmp
(bad)
mov
inc
push
add
jmp
and
loop
les
push
dec
test
push
inc
ins
push
mov
les
int
add
or
jmp
push
or
add
dec
inc
add
ja
mov
enter
out
enter
fdivr
enter
add
nop
push
mov
cs
push
xchg
mov
cmp
add
xlat
sbb
pop
sbb
ffreep
xchg
pop
or
adc
pop
rol
pusha
icebp
call
scas
pop
xchg
jl
and
add
add
rcr
add
xor
cmp
pop
mov
les
push
mov
mov
mov
stos
movs
mov
mov
sar
test
ret
fistp
xlat
add
add
fs
inc
sar
(bad)
jmp
rcr
aam
pop
aam
fwait
or
dec
(bad)
adc
cmp
pop
jne
pop
sub
outs
push
aad
lahf
jbe
cmp
push
and
fisubr
popa
pusha
jae
pop
sbb
mov
fs
shl
test
mov
or
out
lds
and
pop
aas
push
xchg
or
fmul
sbb
fdiv
(bad)
mov
cld
fdiv
dec
adc
push
and
xchg
ret
sbb
xor
fstp
(bad)
jge
jnp
int3
repz
fst
out
outs
and
lahf
iret
mov
es
cli
ror
mov
sbb
and
push
sub
nop
das
les
das
adc
inc
cs
in
push
icebp
push
sub
adc
add
xchg
out
addr16
xchg
movhps
repnz
jl
mov
rcr
inc
xor
pop
pop
cld
push
cmp
loopne
or
pop
nop
push
or
and
and
test
pop
packssdw
sbb
push
push
fsub
dec
ins
popa
addr16
loopne
fidivr
inc
in
push
xor
and
add
mov
es
or
sbb
inc
xchg
repnz
fdivr
mov
je
inc
mov
inc
nop
add
ins
jnp
inc
add
add
les
push
js
push
mov
dec
adc
push
sbb
or
jno
fnclex
dec
lods
adc
sahf
xlat
mov
dec
fmul
push
rcr
pop
push
enter
int
jle
push
int3
adc
xchg
addr16
addr16
pop
sbb
mov
jo
mov
cwde
(bad)
fisubr
push
or
hlt
pop
in
bound
mov
call
xor
add
xor
xchg
xchg
push
xlat
xchg
sbb
push
add
inc
mov
sbb
inc
pushf
sbb
xor
fidivr
xchg
cs
push
lock
jbe
es
fs
hlt
pop
sbb
(bad)
cmp
mov
pop
push
(bad)
jo
cmp
jns
pop
jo
aam
xchg
dec
popa
outs
nop
(bad)
jmp
adc
mov
mov
xor
rol
xor
inc
dec
jne
test
jo
mov
inc
fmul
add
inc
push
cmp
addr16
test
and
dec
pop
mov
aaa
ja
sbb
pop
shl
push
repnz
je
hlt
jmp
add
or
je
sbb
sub
dec
add
fsub
push
rol
sti
mov
gs
cmp
xor
aad
push
in
sbb
ficom
or
xchg
sub
push
mov
cmps
add
dec
aas
add
dec
(bad)
or
arpl
add
lods
inc
(bad)
leave
and
inc
retf
sub
arpl
mov
sub
dec
(bad)
lock
add
adc
retf
data16
cmp
add
mov
and
sub
cdq
adc
jns
sub
mov
sub
jmp
imul
mov
sub
dec
jbe
(bad)
or
mov
popf
or
je
or
xchg
mov
and
push
repnz
iret
bound
push
jl
in
pop
enter
inc
jle
xor
sub
aad
jg
add
iret
ror
iret
call
fild
jle
adc
jle
add
push
pop
sbb
fucomip
mov
in
lock
shl
xchg
es
or
adc
pop
js
scas
leave
test
mov
call
in
adc
retf
xor
cld
ficom
inc
xor
shl
or
lahf
shl
movs
push
dec
jmp
outs
cmp
and
popa
jb
outs
outs
inc
xlat
mov
outs
pop
dec
das
stc
out
repnz
imul
jbe
add
add
ins
bnd
ins
gs
push
gs
ins
pop
nop
jg
add
addr16
imul
gs
imul
iret
pop
gs
ins
outs
ja
jmp
neg
jne
push
adc
jle
jno
popa
mov
pop
pop
or
jns
push
fadd
add
ja
jge
pop
inc
ins
inc
dec
adc
adc
data16
push
add
add
pop
xor
retf
das
cmovae
add
push
aaa
pop
jo
push
pop
imul
push
xchg
and
mov
in
das
jp
out
adc
outs
inc
push
xchg
dec
nop
fld
pop
ins
fs
or
in
jg
pop
dec
jle
gs
or
lods
das
push
dec
daa
pop
sub
sub
add
ins
sbb
sub
mov
push
mov
push
and
or
lock
(bad)
stc
jg
fild
int3
(bad)
repz
adc
jbe
add
adc
xor
data16
outs
inc
push
sbb
outs
jne
inc
mov
adc
pop
lea
iret
or
lahf
cmp
or
dec
cs
push
arpl
adc
mov
imul
push
mov
outs
das
cmp
pop
jmp
or
cmc
das
or
mov
sbb
(bad)
pop
xor
push
mov
push
mov
inc
cmp
cmp
pop
and
ret
sahf
xchg
cwde
int3
xchg
or
push
adc
mov
add
addr16
pop
(bad)
pop
outs
test
mov
sbb
dec
inc
push
push
inc
push
add
inc
inc
inc
push
dec
push
xor
not
dec
inc
dec
dec
arpl
in
cmovge
push
adc
inc
push
dec
dec
push
shr
pusha
mov
shl
mov
or
popa
out
inc
inc
mov
adc
xor
xor
adc
inc
dec
inc
and
(bad)
test
xor
inc
dec
mov
stc
sbb
dec
push
dec
dec
mov
imul
push
(bad)
das
sbb
mov
and
inc
inc
dec
push
mov
dec
inc
dec
push
out
push
dec
pop
push
repz
push
push
push
dec
push
inc
scas
lods
jecxz
jns
inc
dec
push
mov
xor
pop
(bad)
mov
mov
sti
mov
pop
cli
inc
mov
push
push
pop
inc
test
call
and
and
out
out
sbb
dec
or
jne
add
add
or
mov
mov
sbb
xchg
sbb
and
sbb
mov
inc
cmpxchg
sbb
dec
sbb
pop
mov
mov
xor
jmp
enter
or
jmp
add
enter
(bad)
or
shl
jbe
mov
inc
adc
dec
sbb
sbb
lods
test
sbb
or
fcomp
into
test
das
push
mov
mov
xchg
jo
scas
and
mov
or
fs
loopne
sbb
icebp
outs
mov
ins
xchg
pop
and
retf
das
pusha
dec
dec
jb
dec
mov
jnp
xchg
mov
(bad)
cmp
je
jne
les
dec
out
mov
cmp
sbb
mov
inc
cmp
loop
bound
iret
sub
sub
adc
inc
adc
pop
inc
in
inc
mov
adc
(bad)
pop
shl
scas
mov
bound
sbb
sub
xor
rol
(bad)
fild
out
jo
jl
add
mov
loope
add
inc
and
adc
div
mov
mov
cmp
and
inc
adc
inc
test
xchg
ds
or
js
movs
rol
lods
stc
sbb
les
enter
jbe
add
sub
pop
not
nop
xor
mov
mov
sbb
or
pop
test
loopne
inc
push
adc
xchg
add
mov
fcom
imul
cmp
sahf
dec
(bad)
mov
fst
sub
les
mov
cwde
out
movs
push
inc
mov
dec
add
push
cmp
mov
xchg
sub
push
(bad)
fisttp
(bad)
enter
pop
jmp
(bad)
push
repz
aad
mov
pop
lods
push
or
jp
xlat
add
inc
xlat
or
dec
xlat
mov
int3
sahf
inc
or
test
add
xor
sub
adc
xor
out
mov
xchg
jmp
xor
mov
xor
shr
and
mov
rcl
mov
mov
mov
push
inc
inc
mov
pop
jge
loope
iret
adc
imul
js
(bad)
lock
xor
and
mov
mov
jecxz
jno
int3
or
retf
and
fimul
push
das
cmp
aaa
fild
neg
push
sub
mov
or
mov
push
mov
out
mov
push
add
mov
mov
movs
and
sbb
jo
das
and
bound
adc
or
push
leave
add
or
mov
xchg
call
inc
sub
xchg
cmp
mov
add
test
add
and
iret
mov
adc
push
mov
sub
rcr
iret
inc
and
sub
jb
movaps
shr
xor
addr16
pop
xor
mov
sbb
add
js
sbb
rol
adc
mov
pop
and
shl
or
add
mov
pushf
mov
pop
movs
cld
adc
js
jbe
pusha
pop
cmp
mov
mov
lods
pusha
leave
mov
pusha
js
dec
retf
adc
test
inc
mov
in
(bad)
in
(bad)
ins
pop
xor
shl
vpmacssww
jp
or
ror
pop
and
push
nop
js
nop
sbb
test
xchg
push
out
mov
outs
mov
fisttp
ror
mov
movs
mov
cld
xor
(bad)
push
add
test
lock
in
inc
aam
push
mov
pop
dec
sub
call
not
ins
das
shl
jmp
mov
and
add
jmp
mov
mov
dec
jmp
jbe
push
adc
cwde
mov
sub
in
pop
shl
lock
imul
mov
adc
pop
mov
inc
test
(bad)
nop
inc
mov
dec
das
loope
and
aam
nop
pop
pop
fdivr
mov
mov
or
es
xchg
retf
(bad)
inc
add
mov
cmp
adc
or
xor
and
mov
aad
adc
sub
pop
adc
cmps
add
clc
jb
push
test
adc
loop
pop
shl
nop
iret
jge
movs
lock
adc
loopne
xor
call
jge
dec
retf
xor
mov
push
mov
ja
sti
push
or
push
add
or
pop
or
or
mov
push
push
or
push
cwde
mov
push
xor
or
xchg
pop
sti
xchg
dec
pop
imul
sbb
xchg
sub
nop
or
cmp
fadd
(bad)
push
aaa
ret
xor
rol
sbb
xchg
add
int3
mov
outs
pop
fld
dec
mov
cmp
adc
sbb
sub
call
push
sbb
jo
push
in
add
test
or
xchg
ins
jge
push
ins
push
xchg
movs
dec
imul
int3
fsubr
inc
push
sbb
inc
sbb
retf
int3
(bad)
mov
dec
cmp
test
add
bound
aam
leave
adc
in
adc
bswap
sub
jge
xchg
jbe
push
sbb
je
dec
js
stos
fldenv
push
or
(bad)
in
aaa
and
(bad)
cmp
daa
push
fdivr
push
add
add
gs
cmc
mov
fmul
jb
jae
jg
in
dec
dec
cmp
pop
jg
inc
add
mov
mov
in
sbb
adc
and
fstp
and
add
std
mov
or
(bad)
cmp
jl
test
imul
inc
aad
imul
xor
inc
test
jge
push
ins
leave
lock
pop
sbb
dec
jp
jae
dec
mov
outs
not
and
je
mov
mov
test
add
enter
lods
jnp
adc
test
pushf
aas
xor
es
adc
push
cmp
add
sbb
and
sub
or
mov
add
cmp
out
fist
not
and
(bad)
and
adc
lock
je
push
push
dec
inc
jmpw
push
and
xchg
idiv
rol
dec
push
add
nop
mov
nop
or
cmps
outs
or
ja
push
push
dec
fst
pop
inc
push
jns
or
mov
out
push
adc
test
cmp
bound
jne
xor
cmp
add
les
and
sbb
(bad)
push
adc
in
bound
loop
daa
idiv
xchg
(bad)
std
add
cs
das
sti
mov
test
add
and
adc
mov
int3
inc
sub
lock
out
push
in
cmp
fld
nop
pop
adc
and
scas
sbb
pop
test
xchg
mov
fisub
push
dec
mov
mov
push
adc
lea
add
test
add
fnsave
fcomp
mov
out
rol
(bad)
cmp
mov
int
add
xadd
ds
enter
hlt
(bad)
mov
lea
mov
call
pop
cmp
and
push
push
cmp
out
add
adc
pushf
mov
shr
bound
ins
xchg
push
inc
jns
imul
in
lods
loope
iret
fld
and
bound
sahf
mov
rcl
push
je
cmp
js
mov
(bad)
fcomp
in
push
dec
es
jle
push
das
push
jno
out
pop
in
inc
or
mov
arpl
adc
fild
hlt
cmp
adc
neg
inc
inc
(bad)
shl
add
dec
(bad)
jmp
fadd
ror
scas
inc
sub
in
scas
fiadd
fincstp
shl
fldcw
retw
mov
test
mov
fsubr
jmp
rol
jne
pop
mov
jne
movs
jne
xor
sbb
mov
out
adc
fdiv
push
jle
loopne
cwde
stos
add
push
shl
cdq
or
shl
in
xchg
cli
push
inc
adc
loop
xor
add
cld
lea
fadd
mov
loope
push
mov
in
retf
pusha
xor
push
pop
push
jmp
sbb
and
ja
mov
add
sub
dec
jmp
xchg
mov
dec
and
add
sbb
jge
push
pop
lock
das
add
int
cmc
fs
mov
sbb
loopne
xor
add
or
add
and
cli
leave
xchg
movs
mov
call
add
punpckhdq
jmp
fiadd
scas
fisub
pop
shl
(bad)
mov
pop
mov
lea
push
add
inc
pop
add
add
call
dec
sbb
sub
adc
mov
sar
aas
dec
ret
adc
or
(bad)
mov
lea
pop
pop
or
jo
pop
pop
push
(bad)
mov
add
adc
adc
adc
push
pop
push
sbb
sub
or
push
push
adc
sbb
out
in
cmps
mov
std
sbb
dec
js
loope
add
pop
jmp
mov
jns
jmp
int3
and
(bad)
mov
aad
mov
sub
shl
mov
mov
jmp
ins
jg
mov
and
mov
and
and
sbb
cmp
inc
ret
adc
mov
or
jnp
or
cmp
add
jne
ds
ds
rol
xchg
inc
sub
std
jnp
mov
lea
sbb
push
pop
push
cmp
cs
movs
rcr
jmp
addr16
data16
jae
nop
mov
cld
sbb
sbb
(bad)
icebp
fsubr
mov
imul
movs
sahf
mov
test
cwde
cmp
xor
clc
cmp
add
inc
jl
scas
push
sbb
fdivp
inc
mov
push
push
add
xchg
and
mov
or
and
add
cld
push
cmp
retf
pop
or
mov
pop
push
push
or
dec
pop
clc
sub
clc
int3
popa
ss
xor
rcr
aas
push
aas
mov
dec
or
pusha
mov
repnz
jbe
or
clc
or
movups
out
sbb
add
xor
push
add
and
enter
push
sub
out
aas
adc
je
push
push
test
dec
loopne
and
push
and
or
mov
push
pop
jbe
mov
dec
push
cwde
rol
xor
and
cmova
mov
icebp
adc
push
test
iret
push
sub
rcl
test
adc
(bad)
lock
xchg
add
jne
ins
loope
or
sub
ret
push
jb
scas
imul
xchg
push
xor
cli
fwait
out
mov
mov
mov
push
aaa
outs
adc
add
in
sub
pop
xor
pop
push
pop
pop
adc
shr
and
and
repnz
das
jns
sbb
push
out
add
mov
cs
push
repnz
out
jl
or
outs
adc
add
mov
sub
adc
mov
xchg
sub
pop
jbe
fld
pusha
jne
ss
lods
imul
stos
dec
sub
xor
test
jle
cmp
jl
cmps
aaa
ss
add
mov
enter
cmp
jle
les
inc
loope
adc
fbstp
jno
lock
aam
imul
dec
sbb
sar
or
shr
dec
push
movs
pusha
and
push
push
pop
push
inc
mov
stos
adc
sbb
psubusb
or
jmp
xor
lods
xchg
sbb
scas
push
inc
xor
or
in
and
sub
xchg
push
das
adc
fdivr
test
rcl
push
sub
xlat
test
mov
mov
ins
mov
fs
js
mov
jg
or
jl
push
cmp
mov
dec
add
dec
nop
pop
std
adc
sahf
inc
dec
jne
add
rcr
add
pop
out
inc
pop
xor
ret
loop
cld
(bad)
std
jmp
repnz
add
sub
mov
and
jne
xor
and
rol
nop
pop
rcr
push
dec
enter
add
add
(bad)
test
sub
test
sahf
and
jbe
nop
pop
mov
sbb
ins
mov
push
mov
sub
aaa
sbb
add
pop
xor
cmp
rcr
jge
inc
rol
repz
mov
out
mov
mov
mov
mov
pop
aas
adc
outs
mov
mov
test
xchg
jmp
inc
aaa
ds
cmp
bound
pop
and
imul
pop
or
les
push
jmp
sbb
xor
mov
add
pop
out
mov
dec
mov
aas
repnz
jl
mov
js
cmp
sub
jb
je
iret
inc
mov
or
sub
mov
adc
scas
add
jg
sbb
or
jle
or
fild
jmp
ins
push
add
jmp
punpckldq
jmp
adc
cmp
mov
xor
cmps
test
adc
and
jae
pop
and
sub
push
gs
pusha
sub
inc
or
add
dec
cmp
pop
ins
push
adc
retf
and
fld
lea
adc
push
dec
sub
sub
sbb
adc
leave
ss
or
add
ret
xchg
(bad)
sbb
push
adc
add
adc
hlt
jo
adc
repz
sbb
out
or
xchg
pop
or
scas
and
(bad)
mov
push
sar
rcr
or
pop
idiv
mov
jae
icebp
push
inc
inc
in
clc
xor
daa
int
hlt
hlt
jmp
adc
xchg
push
(bad)
xchg
mov
cmp
add
clc
call
dec
outs
xchg
dec
ret
dec
call
sbb
test
lods
mov
mov
dec
or
add
dec
out
add
enter
push
in
add
hlt
int3
movs
mov
in
add
push
clc
call
movs
cmp
hlt
loopne
add
cmp
xor
inc
xor
sub
int3
push
push
scas
push
pop
jno
mov
or
add
add
mov
adc
adc
sub
int
or
xor
mov
call
push
lods
or
push
sub
jp
mov
mov
mov
mov
mov
add
adc
mov
scas
scas
cwde
add
dec
fld
lock
aad
cmp
int
out
in
aad
push
hlt
loopne
fcom
clc
call
sar
int3
adc
xor
cs
shr
add
retf
cmps
icebp
lods
mov
pop
shl
pop
mov
je
jl
ror
xor
push
or
push
push
bound
push
xor
xchg
mov
adc
pop
nop
aaa
xchg
inc
push
xor
inc
push
nop
iret
and
cmp
test
lock
add
popa
js
movs
jmp
retf
or
sbb
popa
add
fmul
fdivr
push
or
leave
mov
imul
jne
and
xchg
inc
loope
test
int3
add
gs
sbb
dec
hlt
push
add
hlt
mov
lahf
adc
retf
or
push
repnz
rcr
push
sub
pusha
fdivr
push
aaa
jo
lods
push
add
lahf
jno
xor
cmp
test
xor
add
push
and
push
sub
xchg
nop
retf
mov
cld
push
shl
cld
ds
adc
pop
pop
int3
sbb
(bad)
adc
or
mov
or
lahf
int3
adc
push
(bad)
(bad)
mov
scas
cmps
push
or
jno
iret
jg
sbb
pop
xchg
mov
jg
aas
cmp
call
add
jmp
xlat
clc
jb
and
pop
adc
sbb
(bad)
enter
add
lods
hlt
js
push
or
movs
mov
and
mov
jecxz
mov
loope
xchg
out
sub
or
or
jl
dec
pop
pop
jmp
jnp
imul
mov
in
add
ret
jo
jge
dec
mov
jmp
dec
in
sbb
push
adc
mov
or
imul
fs
add
pop
add
pusha
fimul
ja
and
add
(bad)
and
imul
lds
shl
add
mov
test
(bad)
imul
push
lds
add
aas
cli
mov
and
repnz
or
push
ins
cmc
or
adc
popf
sub
xor
out
xchg
jo
adc
shl
push
mov
in
fnstenv
pop
pop
addr16
add
(bad)
xchg
rcl
push
div
clc
pushf
adc
or
aaa
stc
pushf
(bad)
dec
or
sub
xchg
adc
out
pop
jmp
cmp
es
dec
adc
mov
xor
int3
push
fsub
mov
pop
rol
sub
dec
leave
inc
pop
test
add
sbb
add
push
dec
nop
jne
add
xlat
sub
or
dec
inc
scas
mov
push
push
rcl
inc
pushf
jbe
ds
xor
inc
ins
push
inc
fst
cmp
jb
inc
adc
push
mov
or
push
ins
enter
or
mov
and
in
(bad)
pop
aas
sahf
lock
sahf
retf
jle
or
jns
or
xchg
je
lock
daa
sub
jp
leave
adc
les
cmp
inc
call
neg
test
pushf
enter
out
adc
mov
cmp
aam
bound
fiadd
jne
aam
es
sbb
mov
(bad)
or
loopne
dec
pop
gs
sbb
and
add
add
or
or
ror
in
sub
mov
sahf
iret
cmp
adc
and
and
dec
inc
jne
sub
je
or
add
pop
and
fiadd
inc
or
mov
cmp
mov
mov
cwde
push
outs
call
mov
in
xchg
jmp
jae
xchg
push
cmp
sub
rcl
nop
fild
stos
ror
out
or
mov
(bad)
jmp
aas
and
ins
pop
fild
or
sti
mov
ret
mov
xchg
pop
add
sub
and
push
mov
sbb
dec
add
or
lea
js
xor
fimul
adc
gs
and
lods
mov
(bad)
fistp
int3
sub
push
or
push
pushf
gs
mov
cmp
dec
add
mov
out
mov
fdivr
cmps
hlt
cmp
jmp
stos
add
in
lods
mov
jbe
je
scas
jle
ins
add
dec
xor
cmp
and
ins
dec
fidiv
mov
(bad)
outs
cmp
je
mov
pmaxsw
adc
push
adc
adc
sbb
inc
mov
add
arpl
fisubr
fcomip
or
pop
mov
push
mov
test
js
xchg
dec
dec
cmp
jne
adc
jbe
xchg
test
nop
and
cmp
out
mov
inc
pop
add
pop
int
and
fisttp
pop
fs
dec
aaa
(bad)
sbb
in
jmp
ins
inc
int3
xor
imul
jg
mov
pop
mov
add
mov
adc
xor
fisub
popa
and
jb
fild
jmp
mov
sub
in
xor
mov
shl
in
pusha
pop
adc
mov
pushf
jnp
or
or
(bad)
rol
push
add
je
cld
jmp
push
shl
push
lods
dec
repnz
xchg
std
xchg
pop
repnz
fsub
mov
aas
xor
sbb
fcom
in
ja
xor
loopne
sbb
mov
in
dec
imul
adc
and
xchg
dec
call
inc
inc
and
push
inc
or
in
loope
loopne
or
sub
pusha
cmp
loope
xor
sbb
and
in
jl
lea
or
rol
into
(bad)
cdq
jne
pop
lock
inc
js
xchg
or
inc
mov
inc
pop
inc
in
add
xchg
and
fdivr
pusha
or
gs
cmp
push
movs
xor
sbb
add
push
fist
adc
push
in
mov
shl
inc
lods
or
inc
bswap
cmp
xor
leave
(bad)
shrd
mov
add
in
mov
xchg
inc
aaa
inc
imul
mov
hlt
and
or
inc
out
add
and
inc
test
or
call
js
out
push
add
psubsb
xor
add
scas
pop
xchg
retf
jns
lock
add
xchg
lock
stos
imul
jge
sub
push
push
and
loope
cs
js
in
and
xor
or
lea
aaa
dec
rcr
pop
in
push
aas
(bad)
test
call
xchg
mov
call
cmp
out
and
ins
(bad)
lods
stos
test
fs
sub
inc
jbe
add
dec
aam
movs
mov
test
adc
div
mov
xchg
clc
scas
push
daa
loopne
fld
jo
mov
jmp
adc
xor
and
and
xor
inc
test
cmp
xchg
jbe
test
fwait
mov
fs
and
jns
pop
add
cmp
es
lods
and
push
jmp
jne
stos
xchg
pop
out
push
test
movs
push
call
jno
mov
mov
jmp
or
pop
in
add
xor
cdq
push
clc
mov
or
cwde
movs
dec
sub
pop
sahf
(bad)
(bad)
and
sub
inc
jo
xlat
test
jp
pop
cmp
cmp
push
and
inc
dec
neg
push
or
add
je
add
pop
mov
add
fisttp
fdiv
adc
jmp
push
rol
sub
loopne
xor
ror
(bad)
retf
or
int
scas
push
pop
adc
adc
jle
mov
sub
pop
push
inc
ret
not
inc
adc
and
sbb
mov
lods
and
lods
push
sbb
jmp
(bad)
movzx
push
dec
in
scas
ror
sbb
sub
out
lds
add
push
adc
jl
fwait
cmp
push
dec
hlt
jmp
popa
neg
inc
adc
mov
int3
imul
dec
push
out
sub
cmps
cwde
mov
fadd
shl
add
enter
in
jecxz
push
nop
or
and
scas
call
cwde
sub
dec
inc
or
inc
in
mov
inc
sbb
pop
and
loop
pop
sbb
inc
loopne
dec
movs
push
jnp
xor
mov
stos
or
cmp
and
inc
sbb
xor
pop
mov
das
adc
xor
push
gs
push
lds
mov
jmp
xor
in
bound
jge
inc
xchg
call
in
inc
mov
add
aad
(bad)
(bad)
push
mov
or
repnz
rol
rcr
and
test
and
imul
push
in
dec
ins
add
mov
sub
and
pop
cmc
clc
sbb
scas
lods
jle
push
push
push
in
sub
pop
mov
add
inc
sub
mov
mov
push
fadd
ror
in
xchg
inc
sbb
push
or
jmp
cld
cmp
jne
sbb
cmps
add
jmp
and
xor
les
fimul
push
inc
je
mov
sbb
out
pop
in
or
pushf
cmp
iret
xor
dec
jne
hlt
inc
lea
jmp
mov
push
cmp
and
clc
pop
adc
pop
sub
pop
pop
and
push
pop
mov
inc
xor
jb
sub
sbb
inc
or
pop
mov
pop
mov
mov
mov
or
mov
push
push
jl
bound
sub
ja
jae
inc
icebp
sbb
test
mov
pop
sub
ret
xor
jne
imul
inc
ins
movs
inc
push
dec
fild
push
lock
mov
and
(bad)
cmp
or
inc
xchg
xchg
dec
outs
rcr
sub
sub
jmp
mov
push
xor
xor
dec
cdq
bound
or
mov
push
or
push
dec
cmp
(bad)
inc
adc
cld
xchg
inc
xor
push
xor
inc
or
outs
sub
mov
xchg
test
fcom
cmp
dec
movs
adc
fmul
adc
out
popf
loopne
retf
pop
xor
push
hlt
push
sub
or
loope
or
fsub
popa
add
sub
jmp
cmp
jno
aam
sub
push
dec
jl
adc
mov
push
and
mul
xchg
add
or
and
pop
js
(bad)
lods
jecxz
add
mov
sub
rol
call
shl
or
jae
and
and
loope
shl
test
sub
lea
add
or
js
cld
rol
sbb
test
or
jo
fisub
sbb
and
push
push
jo
add
das
sub
jmp
mov
adc
fbld
cld
daa
ins
sbb
fild
jle
or
mov
cwde
xchg
inc
add
mov
out
or
dec
dec
and
nop
lds
push
mov
mov
or
aas
push
and
dec
mov
cmp
cwde
push
push
fst
or
cmp
xchg
(bad)
es
xchg
loopne
cs
test
ffreep
fild
dec
loopne
mov
dec
or
add
fldenv
lods
pop
(bad)
mov
rol
mov
push
dec
mov
les
adc
pop
mov
jle
mov
or
cmp
ret
out
or
std
jae
or
sub
add
mov
cdq
sub
push
dec
push
push
xchg
push
cmps
je
pop
cmp
lahf
vpshufhw
fisub
push
adc
inc
dec
enter
push
xchg
pop
pop
sbb
ins
and
and
and
pop
and
or
add
ficomp
in
push
or
pop
or
mov
dec
clc
push
inc
in
or
je
adc
xor
sub
mov
addr16
push
push
sbb
cmp
inc
push
in
xchg
xchg
inc
aam
je
inc
xor
gs
dec
loope
movs
mov
or
xchg
sub
jb
out
ret
cs
mov
sub
mov
fbstp
jmp
ror
push
es
adc
xchg
adc
xor
add
cmp
adc
dec
cmp
sbb
mov
jno
push
and
xor
lods
xchg
sub
lods
add
aam
jmp
jbe
mov
add
mul
mov
sbb
rol
int3
sbb
inc
mov
xor
pop
or
add
push
cmp
mov
or
xchg
movs
and
inc
ja
cmovb
inc
and
or
rcr
jle
loopne
movs
push
mov
into
pop
and
(bad)
mov
leave
push
mov
adc
inc
xchg
pop
fmul
sub
pusha
jno
push
in
out
push
or
or
sbb
(bad)
stos
push
lds
pop
dec
and
push
fs
gs
inc
push
and
out
dec
jb
fsubr
xchg
adc
rcr
cwde
and
mov
loopne
pop
push
inc
push
ret
dec
lock
fist
je
call
dec
daa
jmp
iret
add
adc
or
push
push
push
repz
push
sbb
sub
sbb
sahf
int3
push
popf
cld
or
fs
test
or
adc
shl
adc
push
test
or
pop
push
jle
mov
xor
aaa
adc
lock
sbb
iret
or
cld
imul
jge
es
ret
sbb
aam
rcr
lods
dec
daa
lock
scas
test
dec
adc
adc
or
xor
mov
pusha
outs
push
cmps
mov
add
(bad)
push
and
inc
loopne
fsubr
inc
push
jmp
add
dec
(bad)
cmp
sbb
pusha
ret
cmp
push
sub
adc
push
jo
cwde
int
mov
mov
lea
adc
or
adc
rol
aaa
dec
or
xchg
sub
xchg
or
or
or
mov
in
inc
adc
mov
push
jecxz
and
inc
mov
sub
push
sbb
pop
mov
and
out
es
adc
and
movs
sbb
ret
fwait
dec
in
sub
(bad)
push
dec
sub
pop
or
aad
cmp
dec
rol
ficom
je
lods
and
adc
std
push
inc
push
sbb
xlat
mov
lahf
enter
inc
js
push
adc
es
hlt
jno
arpl
adc
icebp
jge
sbb
push
mov
leave
xchg
cmps
int3
or
jo
dec
imul
addr16
inc
cli
pusha
and
sbb
cli
arpl
or
je
mov
ret
dec
and
inc
inc
sbb
xchg
adc
cwde
retf
push
(bad)
call
aam
xchg
les
fimul
mov
retf
jne
adc
mov
test
hlt
lds
ror
loopne
inc
or
shl
jbe
pop
ins
out
mov
dec
lahf
jb
and
push
xchg
adc
popf
xor
ror
push
push
push
nop
push
or
sub
test
dec
daa
popa
scas
xor
cld
ds
inc
cmp
cwde
jecxz
jno
outs
add
call
lea
out
or
jne
pop
retf
cmp
push
inc
xor
or
imul
or
ss
inc
gs
or
mov
and
xor
sub
dec
je
pop
inc
or
adc
in
pusha
jo
sbb
or
inc
fmul
jae
out
pop
sbb
adc
out
daa
and
dec
cwde
movs
mov
pop
(bad)
or
jge
les
jbe
mov
je
add
and
or
je
fadd
jb
push
fistp
jle
lods
add
(bad)
jbe
or
cmp
xor
aas
inc
fist
je
ss
jns
(bad)
(bad)
test
push
mov
mov
pop
sub
push
cmp
sbb
mov
xchg
outs
fidivr
inc
sbb
test
jbe
push
ret
and
dec
int
xchg
push
addr16
sbb
pop
jmp
push
inc
pop
mov
mov
sbb
aad
js
xlat
inc
mov
sbb
and
pop
or
sbb
mov
addr16
dec
sbb
pop
xor
sub
mov
add
mov
sbb
imul
and
cdq
adc
cmp
mov
mov
mov
popf
push
lods
jmp
test
push
add
mov
sub
test
sub
cmp
add
sbb
sub
sbb
push
dec
fld
aaa
sbb
fstp
sbb
mov
mov
jnp
sub
adc
pop
bound
and
adc
sub
enter
ret
popf
mov
jne
cmc
sub
push
pop
sbb
add
inc
call
mov
aad
test
and
add
jb
call
cmps
mov
and
mov
adc
add
xor
xchg
inc
cld
ja
sbb
mov
ror
cmp
and
inc
test
cmps
mov
(bad)
adc
ror
xor
fstp
cld
add
pop
add
mov
cmp
movs
xchg
pop
out
(bad)
pop
add
sbb
cdq
(bad)
(bad)
stos
into
es
pop
retf
push
push
mov
loop
push
add
ret
imul
popf
nop
pop
lods
jg
fdivr
xchg
outs
lahf
movs
or
sbb
cmp
leave
inc
pop
sub
and
and
shl
sub
dec
fdivr
es
fiadd
push
xor
mov
imul
pop
aaa
sub
push
mov
adc
mov
pop
xor
rol
pop
inc
daa
push
sbb
or
cs
push
mov
rcl
mov
push
mov
scas
rcl
mov
or
enter
mov
jb
add
rcl
add
fsubr
xor
jb
movs
add
cmp
cmp
pop
mov
add
pop
cs
rcl
mov
leave
adc
fwait
jle
imul
test
cdq
push
push
movs
jp
xor
inc
ja
or
pushf
sbb
dec
mov
daa
pushf
pushf
setns
or
inc
popa
lahf
pop
pop
inc
or
aam
sub
adc
cld
and
push
test
into
cmps
adc
jle
les
push
popa
push
cmp
cwde
or
(bad)
dec
imul
jp
cmps
xchg
sbb
push
cli
adc
jbe
outs
pop
pop
add
add
jbe
je
je
pop
add
inc
rcr
push
and
dec
and
and
je
ss
aas
and
lods
call
add
ss
mov
in
aaa
push
les
inc
mov
add
movs
lds
(bad)
cmc
stos
adc
adc
les
xchg
ins
mov
push
xor
adc
jne
pusha
ja
loopne
mov
arpl
mov
pop
and
jge
push
rcl
add
movs
mov
pop
mov
ins
add
out
pmulhuw
lock
and
jns
repnz
push
or
or
xor
sbb
loope
pusha
sbb
clc
outs
in
adc
outs
arpl
jne
cmp
cdq
jp
jle
push
lea
aad
pop
or
mulps
(bad)
loopne
test
pop
adc
and
inc
jmp
sbb
inc
cmp
frstor
addr16
(bad)
xor
retf
dec
ret
ror
repz
std
jbe
push
and
lahf
test
(bad)
xchg
mov
leave
and
and
lods
push
xor
pop
mov
cld
and
or
push
jo
ins
lock
fnstenv
stc
out
mov
hlt
and
mov
sbb
in
xor
xchg
adc
lahf
test
and
pushf
push
sbb
repz
fdiv
mov
xchg
in
in
call
(bad)
cmp
aam
sub
ficom
or
inc
clc
test
adc
and
rol
and
test
in
rcr
dec
fdiv
stc
sti
adc
and
mov
adc
dec
gs
lods
aaa
les
dec
fdivr
mov
push
jge
mov
ret
lods
xchg
mov
imul
push
scas
ja
sbb
pop
je
hlt
bound
and
mov
add
ins
fisttp
cmp
xor
mov
enter
push
or
nop
push
push
and
push
clc
pop
and
ficom
cs
ds
inc
out
mov
sbb
inc
call
nop
inc
or
aaa
rcr
and
es
sub
in
push
aaa
jo
inc
dec
add
pop
mov
mov
rol
xchg
fsub
leave
dec
jl
jl
nop
shl
mov
add
ja
dec
je
rol
pop
lods
xor
jne
add
or
mov
mov
jmp
fld
movs
and
popa
sbb
shl
add
adc
push
xor
lock
or
cwde
cli
cmps
mov
mov
add
or
sbb
inc
jbe
iret
add
leave
mov
sub
or
pusha
sbb
inc
mov
pavgb
cmp
cmp
fcom
ror
cmp
cmp
enter
cmp
cmp
mov
cmp
cmp
das
mov
fadd
test
cmp
scas
sbb
jns
mov
xor
aam
mov
test
dec
and
push
div
xor
mov
jg
je
out
sbb
mov
sbb
sub
loopne
adc
mov
pop
push
out
sub
test
(bad)
imul
or
jb
push
stc
in
mov
loopne
push
(bad)
popa
add
fsubr
push
cmp
lock
imul
mov
daa
push
sub
mov
js
add
push
pop
push
jmp
jmp
retf
(bad)
fbld
sub
jb
je
add
lods
scas
mov
jae
mov
xchg
push
inc
or
xchg
xchg
fisubr
push
adc
xchg
push
push
xlat
pop
adc
sti
or
dec
adc
loope
and
pop
test
mov
pop
and
inc
push
sbb
ss
fcmovb
imul
shl
daa
mov
cmp
jle
push
pop
jmp
mov
mov
test
shr
sub
rol
push
jl
adc
sbb
jne
sub
push
xor
mov
dec
or
cmp
adc
sub
repz
pop
push
cmp
movs
mov
aam
or
lock
cdq
adc
nop
sbb
daa
adc
dec
adc
das
add
adc
push
sub
and
ret
xor
push
sbb
fsubr
ss
es
xor
test
and
lock
int
mov
inc
or
add
das
inc
sbb
adc
bound
jne
mov
shr
outs
xor
dec
xor
cmp
les
lods
pusha
cmp
jb
jp
jl
adc
jl
or
push
or
jecxz
or
clc
sti
pop
in
push
adc
jle
lea
movs
add
inc
and
clc
loopne
(bad)
ds
jb
push
sub
je
add
push
cld
add
cs
push
push
dec
inc
pop
push
jns
adc
sbb
sbb
inc
xor
inc
push
sahf
dec
and
js
sbb
cmp
test
adc
daa
mov
push
mov
jge
cmps
xor
mov
push
sub
pop
pop
mov
mov
mov
sbb
enter
and
cmp
mov
cmp
and
xor
cmp
xor
clc
push
dec
loopne
sub
ja
fcom
enter
or
mov
pop
js
mov
ss
sub
outs
inc
dec
or
push
jmp
ds
jle
ja
add
adc
push
and
les
adc
inc
outs
outs
clc
add
jne
xchg
ja
add
push
xchg
push
xor
sbb
lock
add
or
in
sub
adc
cmps
repnz
call
ds
ret
push
push
inc
push
sbb
add
jns
and
push
xor
xor
scas
pop
mov
ja
jg
cwde
cmc
imul
prefetchw
ss
mov
test
pop
xchg
cld
mov
pop
rcl
mov
adc
lods
cmp
inc
je
pop
sbb
loopne
or
stc
mov
push
(bad)
push
adc
adc
inc
enter
push
imul
movs
or
cs
ja
dec
lock
xchg
test
fs
xor
sahf
and
or
mov
or
popa
call
lods
jle
dec
and
jnp
scas
push
adc
(bad)
cmp
fisub
test
sbb
das
or
add
inc
gs
adc
mov
xor
pop
jo
enter
fcomp
fmul
aam
dec
(bad)
fsubr
movs
xchg
and
inc
sub
cwde
sub
repz
cmp
xor
iret
fwait
movs
scas
imul
iret
repz
mov
stos
sub
imul
dec
inc
cdq
(bad)
icebp
sbb
xchg
cmp
xor
(bad)
jg
inc
outs
xor
dec
loop
push
inc
mov
movs
leave
aam
xor
sub
add
aaa
call
cli
pop
pop
add
xchg
xor
ss
movs
gs
jo
or
and
int3
cmp
sbb
pop
cmovge
aas
daa
daa
dec
xor
fwait
aam
adc
xor
mov
pop
aas
dec
out
push
test
cld
and
aas
mov
clc
mov
cmp
outs
jmp
mov
push
or
adc
ror
inc
inc
sbb
jnp
es
push
scas
adc
pop
push
mov
jae
jb
jnp
pop
jg
fsubr
imul
push
inc
and
clc
sub
sbb
not
xchg
sub
mov
jmp
and
mov
retf
les
out
add
sbb
test
cmp
push
xor
es
add
aam
cmp
push
mov
add
jp
dec
test
inc
inc
pusha
inc
iret
lods
retf
inc
sub
fstp
mov
adc
and
dec
call
dec
jne
mov
cs
mov
adc
xor
cmp
or
arpl
lods
daa
nop
cmp
ror
mov
inc
ret
sub
sub
adc
mov
call
enter
sub
ror
outs
pusha
and
imul
mov
les
mov
mov
inc
ucomiss
mov
test
jle
dec
jne
sbb
add
sub
imul
inc
lea
mov
into
and
test
pop
cmp
jb
lock
les
push
(bad)
mov
cmps
test
xor
loop
cmc
fnstsw
add
xor
shr
rcl
hlt
fldenv
cmp
or
push
pop
rcr
or
test
lock
jp
daa
or
lock
imul
or
mov
in
inc
pop
fcom
dec
cmp
sub
adc
mov
je
div
mov
stos
push
(bad)
cli
je
in
lods
and
sub
sub
ret
jne
test
sbb
ret
loopne
push
and
ss
cdq
pop
in
ds
mov
fadd
jno
out
mov
(bad)
cmp
loope
add
hlt
icebp
jp
fwait
pop
inc
dec
mov
test
pop
data16
int3
inc
icebp
pushf
shl
lock
in
xor
int
dec
xor
pop
aam
adc
out
jmp
or
dec
ror
push
(bad)
sbb
cmp
or
mov
cwde
cmp
and
loopne
add
add
sbb
or
mov
fnstsw
nop
push
cmps
data16
int3
movs
cmps
cmp
add
hlt
js
rcl
call
test
(bad)
aam
imul
xchg
out
stos
cld
adc
sbb
add
dec
rol
ficomp
fdiv
mov
pusha
inc
push
adc
push
cmp
(bad)
(bad)
fiadd
mov
jne
inc
loopne
dec
loopne
xor
mov
adc
out
sub
add
xor
xor
and
mov
xchg
mov
cmp
adc
lahf
ins
pop
sbb
add
jb
pop
stos
aam
sbb
and
punpckhdq
ds
jp
or
(bad)
mov
fwait
call
pop
loopne
fcom
push
iret
cmp
int3
pop
jmp
adc
loopne
les
sbb
push
jno
hlt
jno
sub
in
add
dec
or
pop
jo
lock
hlt
(bad)
lds
jmp
idiv
retf
stos
sar
ret
sbb
sbb
xor
call
add
not
(bad)
sbb
adc
dec
xor
cmc
mov
shl
sub
push
xor
sbb
aad
pusha
mov
inc
jne
jmp
push
imul
cwde
mov
or
je
in
ror
or
xchg
dec
out
fcmovnbe
fidiv
fbld
push
mov
pop
ds
lds
mov
or
dec
je
or
das
push
sbb
cs
adc
sti
or
jmp
stc
aaa
mov
sbb
jmp
(bad)
push
sbb
adc
repnz
adc
add
inc
(bad)
xor
movs
add
in
push
fld
bound
cmp
sbb
loope
loopne
mov
daa
loope
hlt
sub
and
loopne
ss
dec
lods
outs
adc
and
inc
adc
push
pop
ret
out
inc
and
lock
or
inc
cmp
out
push
(bad)
daa
pop
ins
test
inc
fbld
inc
sbb
pop
sbb
jmp
pop
cdq
dec
sahf
adc
pushw
aam
xor
pop
and
mov
pop
mov
and
rol
cmp
or
sub
push
adc
enter
adc
xchg
dec
enter
(bad)
jle
xchg
pop
add
cmp
test
inc
pushf
aam
add
push
cmp
cmp
popa
push
ins
jne
stc
je
pop
mov
xchg
inc
cs
cmp
pop
inc
in
inc
pop
mov
outs
ret
push
add
mov
mov
dec
xchg
dec
mov
add
leave
jmp
xor
in
fcomp
rcl
and
dec
js
adc
sub
push
loopne
push
cmp
jbe
and
outs
push
cld
push
cmp
adc
dec
or
dec
je
fiadd
pop
lock
cmp
shl
pop
push
and
push
jo
jns
jb
and
retf
pop
jo
mov
pop
js
out
pop
push
mov
mov
xchg
pusha
enter
pop
push
test
xchg
jo
rcr
arpl
arpl
and
ja
call
mov
inc
xor
sub
(bad)
push
inc
daa
push
sub
int3
inc
maxps
retf
pop
and
das
push
inc
outs
ins
inc
adc
add
pop
add
ja
mov
sub
test
pop
outs
jae
inc
mov
push
(bad)
and
add
nop
or
inc
ins
xor
push
addr16
ds
jo
in
mov
add
rol
xchg
push
push
push
push
mov
xchg
nop
mov
(bad)
mov
sbb
cmp
push
(bad)
jns
dec
mov
push
mov
push
inc
jb
dec
xlat
mov
scas
and
sub
dec
mov
dec
rcl
add
push
add
pop
xorps
or
adc
or
xor
and
jnp
ss
jbe
dec
cmp
push
add
dec
out
cmps
adc
sbb
ja
and
sbb
test
mov
mov
mov
mov
les
rcl
mov
in
mov
pop
mov
add
mov
mov
and
mov
repz
jg
dec
mov
cmp
push
cwde
push
sub
xchg
mov
mov
dec
adc
pop
dec
shl
add
pop
mov
ins
sahf
push
cmp
adc
jl
nop
retf
mov
mov
mov
rcl
nop
retf
mov
add
sbb
dec
gs
sub
pusha
xchg
add
pushf
push
movs
xor
shr
enter
push
sbb
(bad)
call
aam
fadd
xchg
lods
adc
and
xor
inc
xor
xchg
add
push
in
adc
lock
sbb
mov
cld
mov
or
enter
xor
xchg
or
or
xchg
dec
push
push
adc
adc
push
movs
xor
sbb
sbb
retf
cmp
push
sub
push
sbb
sub
sub
xor
xchg
add
push
movs
xor
lock
or
(bad)
push
dec
out
add
xor
gs
gs
or
ins
outs
jae
and
jnp
ret
sub
cwde
or
add
shr
or
scas
aas
push
popa
jb
clc
add
les
outs
test
je
inc
push
test
mov
fstp
mov
jae
jnp
adc
scas
pop
test
cld
dec
dec
arpl
jae
pop
xor
fs
ficom
or
jns
jp
mov
int3
mov
pop
imul
push
outs
pop
pop
aaa
movs
mov
pop
pop
das
pop
inc
inc
ficomp
stc
popa
int3
or
lock
jbe
(bad)
push
or
adc
inc
pusha
mov
pop
mov
pop
dec
xor
das
bound
(bad)
cld
iret
mov
adc
ror
mov
push
xor
test
fisubr
outs
popa
and
or
daa
pop
cmp
jge
fstp
pop
cmp
in
pop
xchg
pop
sub
sub
jl
loope
cdq
ret
and
fs
jg
and
inc
loope
je
addr16
fidivr
ins
outs
das
pop
mov
outs
ins
fs
inc
imul
push
das
pop
test
cmp
arpl
or
pop
push
xchg
xchg
pop
daa
push
pop
mov
jbe
ficom
add
dec
add
ret
add
ins
add
add
mov
jne
xchg
push
add
xlat
mov
repnz
aad
pop
and
jno
pop
test
or
push
pushf
xchg
out
or
jno
in
add
push
xor
in
ds
push
movs
cmp
push
mov
xor
cmpps
fbld
sub
ins
xchg
push
fnstenv
and
xor
xor
dec
imul
hlt
sub
fadd
je
outs
add
neg
repnz
add
push
arpl
imul
inc
outs
pop
jnp
(bad)
js
bound
pop
es
dec
mov
jb
jb
popa
or
sbb
out
jge
dec
es
ins
bound
jbe
es
cmp
xchg
ja
imul
jo
addr16
mov
sahf
addr16
add
mov
arpl
ins
daa
mov
imul
sti
ficomp
ins
das
je
cmps
sbb
bound
jnp
and
pop
call
cmp
pop
je
xchg
jb
arpl
jns
xchg
mul
das
add
mov
lods
pop
or
outs
pop
loopne
inc
jge
jno
xor
sbb
xor
cwde
mov
inc
adc
and
push
pop
aam
xchg
cwde
add
dec
cld
or
ffreep
test
or
inc
lock
fild
cmp
es
add
or
sti
adc
ins
loopne
out
fdivr
xchg
or
pop
mov
aas
xor
test
js
and
js
push
adc
and
sbb
loopne
arpl
dec
push
mov
mov
pop
jbe
dec
pop
mov
mov
inc
push
jne
mov
je
dec
xlat
sbb
test
inc
pop
stos
pop
mov
mov
cld
call
test
rcl
mov
and
rcl
movs
or
push
and
jl
sub
xchg
in
push
and
out
mov
cmp
dec
cdq
int
adc
xchg
jecxz
ss
pop
out
mov
mov
jl
push
popa
push
test
jmp
mov
push
xchg
retf
jmp
sbb
or
nop
loope
nop
int3
push
or
je
int
mov
or
ret
ja
mov
test
xchg
or
cmp
xchg
xchg
add
cmc
sub
iret
repz
(bad)
fistp
sbb
add
xor
add
add
mov
sub
mov
das
(bad)
and
add
(bad)
mov
push
add
pop
or
or
or
or
or
or
push
movups
adc
jns
out
adc
push
pop
lahf
out
sahf
sbb
sbb
sbb
push
iret
shl
and
and
sbb
push
push
aaa
dec
pop
cmp
repz
jnp
popf
scas
stc
cmp
repz
pop
out
sahf
cmps
adc
ss
pop
sahf
out
sahf
imul
lahf
out
iret
loopne
add
repz
repz
sub
dec
push
mov
xchg
fs
in
dec
xchg
imul
dec
xor
and
or
xchg
retf
or
and
adc
cs
push
or
xchg
push
sbb
sbb
sbb
push
movs
jb
in
and
and
pop
push
mov
sub
adc
and
adc
dec
in
cmp
inc
push
pop
push
mov
sbb
sbb
and
sbb
jmp
sbb
sub
imul
bound
arpl
xchg
and
inc
sub
and
retf
push
mov
jno
add
imul
or
cmps
mov
add
test
push
sbb
movs
rcr
xchg
cmps
xor
out
pop
inc
inc
mov
(bad)
push
lea
lea
mov
js
rcr
pop
je
mov
and
add
push
fmul
mov
adc
push
add
shr
xchg
hlt
lock
jle
cwde
lock
cmp
add
mov
mov
in
sub
loopne
cld
pop
movs
repnz
add
dec
int3
mov
ja
pusha
or
xor
and
pusha
push
push
neg
push
sbb
inc
mov
push
ret
push
out
and
cld
mov
(bad)
popa
pop
add
sbb
out
push
mov
rcl
es
inc
hlt
xchg
push
add
push
stos
cdq
shr
pop
mov
enter
cmp
inc
xor
pop
or
inc
es
adc
pop
xor
inc
fs
sbb
fs
and
jb
sub
and
xchg
or
xchg
ins
jmp
and
jo
(bad)
cwde
inc
fist
bound
sbb
daa
adc
popa
nop
pop
dec
adc
aaa
adc
fnstcw
popa
jbe
inc
ins
mov
and
and
or
ins
fs
addr16
pop
jae
or
or
inc
and
pushf
imul
and
inc
jle
daa
adc
outs
je
jno
and
cdq
enter
pop
push
in
adc
ins
into
inc
(bad)
cmovs
mov
jae
mov
pop
mov
push
mov
xchg
inc
ret
xor
dec
mov
(bad)
push
popa
jo
mov
(bad)
fidivr
enter
(bad)
popa
push
stc
loopne
sti
ror
dec
outs
arpl
pop
ins
mov
mov
xchg
les
adc
inc
jp
push
imul
(bad)
dec
mov
loopne
loop
mov
dec
mov
ja
or
outs
dec
pop
in
mov
dec
gs
pop
inc
add
xchg
outs
pop
adc
or
scas
ins
inc
add
mov
jae
pop
data16
es
adc
push
jne
(bad)
fadd
popa
mov
xchg
sbb
pop
ret
pop
imul
adc
xor
ins
jmp
push
cs
pusha
and
adc
dec
or
in
lods
js
stos
pop
push
push
popa
mov
jo
sbb
or
adc
iret
adc
inc
imul
in
add
ins
jae
mov
and
outs
ja
add
enter
test
adc
or
popa
jmp
lock
(bad)
push
jno
mov
push
daa
mov
imul
das
inc
imul
push
imul
mov
mov
js
jg
repnz
or
sbb
cmps
add
xor
lahf
int
sub
adc
out
cmp
enter
cmp
sub
mov
and
or
and
ja
es
push
das
sub
cmp
and
das
mov
ins
shr
pop
fist
push
fisttp
popa
imul
lds
scas
loop
push
mov
xchg
nop
dec
mov
xor
mov
in
push
ret
xor
xor
das
adc
add
mov
adc
and
xchg
adc
inc
nop
test
pusha
push
iret
adc
xlat
lahf
leave
push
rcl
addr16
imul
das
fist
xor
jo
aaa
push
inc
mov
call
dec
push
pop
inc
xchg
adc
mov
push
jne
xchg
jae
cmps
pop
adc
jg
xor
cmps
adc
ret
and
adc
or
pop
sub
pop
ja
or
xchg
aas
outs
unpcklps
add
arpl
xor
shl
aas
sbb
fs
or
inc
push
or
dec
nop
stos
xchg
daa
(bad)
adc
outs
push
jmp
xor
mov
mov
push
sub
xor
aam
jae
arpl
adc
inc
outs
pop
jnp
mov
fcom
push
add
aad
ror
xchg
in
test
inc
mov
push
(bad)
lahf
xor
dec
inc
outs
cmp
xchg
aaa
cmps
adc
adc
inc
add
mov
mov
jp
cmc
adc
les
aaa
xor
mov
push
dec
pop
pop
sub
jbe
cmps
push
sbb
jbe
dec
jae
sub
mov
adc
je
xor
(bad)
pop
test
call
out
pop
mov
sbb
das
movs
loopne
add
adc
das
(bad)
xchg
sbb
inc
push
(bad)
rcpps
imul
js
xchg
dec
inc
or
enter
sub
push
push
push
test
addr16
rol
popa
cmp
stos
stos
sbb
pop
mov
mov
repnz
xlat
dec
push
je
add
mov
mov
inc
and
je
int3
sub
repz
and
jb
sbb
xor
add
and
xor
xor
sub
imul
adc
imul
dec
jmp
push
push
pop
push
inc
aas
les
cmp
push
xchg
(bad)
or
ins
(bad)
ins
ret
push
shl
test
shr
add
or
jae
ins
rcr
fnstsw
je
inc
add
mov
xor
mov
or
add
ins
xchg
or
pop
add
sub
sbb
dec
outs
rcpps
and
mov
in
push
jl
inc
jge
out
xchg
mov
aam
inc
inc
fistp
lods
and
pop
in
push
xchg
xchg
xchg
add
pop
jne
cli
mov
ins
xadd
jo
dec
xor
push
sub
add
mov
xchg
sbb
push
stos
mov
dec
mov
mov
and
sbb
inc
mov
push
inc
and
inc
js
cmp
inc
push
(bad)
leave
das
or
mov
jne
outs
enter
sub
cmp
or
or
pusha
jb
mov
push
xor
mov
mov
idiv
out
cmp
or
cmp
xchg
lea
mov
push
cmp
popa
pop
pop
enter
das
sbb
jge
push
les
pop
pop
adc
enter
outs
jl
outs
mov
inc
jl
outs
out
mov
leave
adc
outs
cld
outs
pusha
or
pop
pushf
jo
add
jmp
jno
je
ins
push
dec
jo
cmc
rol
add
sbb
jmp
jmp
ds
cs
push
pop
sub
or
inc
add
and
sub
pop
push
xor
mov
lods
stos
pop
add
pop
pop
stos
dec
adc
adc
aad
fadd
adc
dec
stos
je
jge
push
pushf
test
pop
pop
xor
pop
pop
add
jmp
mov
jo
hlt
inc
sub
dec
shl
imul
sbb
sbb
mov
push
jle
(bad)
sub
xor
js
or
pop
add
sub
rcr
ds
jmp
pop
ret
fcom
cmp
xchg
xchg
mov
adc
dec
loope
cmp
rol
shl
cmps
cmp
sbb
cmps
test
add
push
push
or
mov
pusha
add
mov
mov
scas
xlat
mov
sbb
mov
lahf
sbb
ret
dec
popa
in
ret
ins
pop
mov
or
push
sar
add
loopne
test
jle
pop
xor
shl
sbb
dec
adc
nop
jae
clc
xchg
push
push
xor
inc
dec
or
mov
(bad)
cmps
aam
mov
jg
jno
sbb
hlt
add
mov
popa
or
in
xor
mov
push
out
outs
adc
daa
pop
pop
test
add
repnz
outs
add
leave
lods
and
mov
test
xchg
xor
push
into
push
pop
or
dec
outs
outs
fbstp
inc
ins
ins
pop
push
outs
pop
mov
(bad)
jmp
dec
or
xchg
push
sti
icebp
shr
jae
(bad)
ss
dec
fldenv
mov
pop
adc
push
in
dec
mov
call
adc
ret
into
sub
lea
jl
lds
ret
js
dec
xchg
mov
fs
xor
ins
fs
addr16
push
imul
ins
shr
cmp
adc
arpl
fwait
push
xchg
cmp
dec
mov
nop
dec
push
push
add
push
cs
(bad)
dec
cld
dec
push
and
xor
popf
inc
les
daa
iret
cmp
cmp
fdiv
enter
xor
movs
test
in
loopne
cmp
inc
lock
and
je
sub
or
add
clc
pop
test
cmp
je
outs
test
mov
ins
ret
es
lock
in
mov
out
jns
and
nop
stos
pop
enter
stos
sbb
nop
(bad)
out
std
mul
push
add
gs
pop
mov
pop
neg
push
imul
pop
es
popf
jne
jb
das
cmp
mov
mov
jne
jbe
push
and
clc
xchg
inc
in
xchg
jg
call
xchg
inc
add
xchg
popf
push
test
mov
add
mov
and
cld
mov
jns
xchg
dec
add
or
outs
icebp
push
or
jp
jl
cmp
inc
xor
bound
and
add
das
xor
sbb
iret
add
xchg
add
pushf
sbb
scas
or
jae
xlat
rcl
lea
mov
xor
cwde
add
add
push
inc
dec
jl
inc
jns
sub
popa
sub
fs
or
cmp
sub
popf
jnp
icebp
popa
ins
push
cs
jb
pop
aam
add
lds
sub
mov
in
mov
cld
ds
test
cmps
out
mov
repz
add
data16
cmp
data16
xor
xor
add
(bad)
add
cs
and
sbb
jl
mov
test
scas
mov
mov
sub
push
es
push
mov
and
sbb
ror
les
mov
or
test
dec
adc
ins
jns
xor
mov
add
cmp
xchg
mov
jg
in
pusha
int3
pop
clc
hlt
xchg
dec
xchg
mov
inc
repnz
js
pop
jp
jp
loop
xchg
js
(bad)
mov
and
movs
cs
cmp
jnp
loopne
hlt
adc
(bad)
ficomp
cmp
loop
pop
rol
and
enter
xchg
jp
push
sbb
mov
nop
lods
cld
pop
aam
push
nop
scas
or
movaps
push
push
sbb
adc
mov
push
inc
pop
dec
xchg
lock
ins
int3
pop
mov
mov
inc
call
outs
imul
dec
pop
cmp
rol
mov
push
fiadd
jge
fdivr
sbb
inc
jns
sbb
jg
mov
pop
cld
mov
cmp
cdq
mov
mov
pushf
push
fadd
sar
in
enter
cs
lock
sbb
dec
and
mov
out
test
cmp
nop
push
hlt
neg
jge
scas
cmp
push
nop
mov
movs
push
add
adc
adc
js
lock
add
out
inc
fsub
inc
jne
add
xor
int
jge
bound
(bad)
fisub
pop
ins
bound
jle
push
jae
leave
pop
dec
repnz
mov
or
das
add
xchg
adc
adc
jp
or
and
and
(bad)
sbb
fbld
js
mov
pushf
cmps
push
dec
std
or
jne
or
xchg
lock
(bad)
ja
or
or
lods
retf
xor
fs
jb
out
adc
or
fmul
das
sub
dec
imul
fs
push
imul
imul
or
mov
push
ins
xchg
push
inc
lods
cmp
jbe
outs
jb
add
imul
or
pop
or
rcl
pop
imul
jne
or
enter
xchg
mov
ret
icebp
adc
mov
xlat
pop
pop
add
iret
inc
and
mov
push
adc
or
mov
mov
pushf
adc
adc
adc
xchg
add
test
or
or
js
pop
sar
push
or
lea
dec
repnz
adc
ds
xchg
add
imul
sbb
xchg
mov
add
sbb
mov
add
ins
jnp
xor
mov
xor
or
xchg
push
pop
dec
nop
out
jge
test
lds
stos
adc
pop
add
and
ror
or
outs
xor
lods
or
pusha
call
or
add
outs
adc
mov
push
push
push
and
mov
inc
aam
sub
xor
add
mov
push
mov
jno
push
(bad)
pop
cmp
cmp
xor
dec
push
push
clc
push
sbb
fisub
repz
shr
sbb
(bad)
nop
mov
dec
inc
jb
jo
in
out
push
or
xchg
out
mov
mov
js
ja
arpl
mov
lods
jmp
jl
jp
loopne
push
push
jno
push
iret
addr16
xor
addr16
sbb
mov
leave
jmp
pop
test
jg
dec
gs
add
push
int
add
js
mov
add
mov
pop
lds
fadd
push
leave
mov
fld
or
jecxz
shr
xchg
sub
xchg
adc
daa
sbb
mov
or
or
and
adc
aam
jbe
mov
fimul
adc
sti
repnz
add
add
sar
cmp
dec
fld
xchg
jae
or
xor
ds
cs
(bad)
or
xchg
dec
xor
cmp
add
adc
fisttp
nop
inc
sbb
popa
js
push
rcl
pop
inc
emms
in
ins
dec
bound
popa
sbb
retf
punpcklbw
cmp
(bad)
sub
sub
(bad)
mov
push
inc
adc
pop
push
jo
push
adc
jmp
xor
(bad)
jo
mov
push
jo
jo
mov
mov
rcl
les
jge
fmul
push
xor
bound
push
out
push
loop
ror
cmp
push
mov
push
and
retf
push
arpl
out
enter
push
hlt
jge
int
(bad)
frstor
mov
out
imul
push
ds
jmp
push
pop
int3
dec
retf
es
fisub
mov
inc
cwde
lods
shl
ror
cmps
(bad)
mov
dec
inc
ss
inc
push
sbb
mov
jmp
mov
add
push
add
inc
(bad)
(bad)
mov
add
add
add
or
or
mov
mov
or
(bad)
push
or
sbb
cmp
inc
mov
(bad)
(bad)
(bad)
out
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fdivrp
(bad)
fdivr
(bad)
(bad)
fcos
fdivr
xlat
call
call
call
call
call
call
call
(bad)
stc
das
es
into
dec
dec
dec
dec
int
les
enter
mov
pusha
in
ins
mov
mov
push
inc
out
out
ds
shl
mov
out
idiv
jmp
pop
repnz
mov
cmp
test
fs
test
hlt
iret
mov
adc
xchg
push
inc
in
xchg
fsub
fidiv
inc
movs
es
push
test
push
and
jnp
fwait
int
loop
fisubr
jecxz
fcom
mov
sbb
push
sub
jo
push
cwde
xlat
imul
aad
ss
jge
pop
fld
enter
push
mov
mov
adc
mov
push
test
mov
ds
add
push
or
scas
hlt
(bad)
les
sar
jl
push
or
push
push
xor
xchg
ja
jno
sbb
mov
jmp
rol
mov
cmp
inc
mov
inc
cmp
jmp
mov
cs
add
loop
ja
inc
loopne
add
fld
and
inc
lock
out
add
pop
daa
pop
inc
inc
jo
and
jo
pop
stos
and
scas
add
add
cwde
mul
inc
ret
call
test
daa
mov
pop
or
adc
jo
push
xchg
fdivr
inc
add
inc
add
jl
inc
or
xor
repnz
or
and
lods
repnz
scas
pop
mov
xchg
push
xor
inc
(bad)
rol
ror
nop
dec
ss
dec
or
test
and
cdq
jns
sbb
mov
call
mov
xchg
mov
out
xchg
jp
idiv
mov
add
or
push
sub
sbb
cmp
or
lock
jbe
outs
call
or
pop
js
cmp
adc
xchg
cs
cs
adc
push
pop
(bad)
pop
fst
or
mov
loop
or
mov
or
stc
cmps
enter
nop
add
aam
repz
sti
push
nop
xchg
pop
out
jle
inc
test
mov
and
lock
repz
inc
push
mov
push
xchg
sub
cmc
xlat
jl
inc
mov
out
inc
cmp
imul
test
js
push
cwde
push
movs
cmp
in
mov
adc
outs
mov
jnp
xor
pushf
clc
imul
inc
popf
lods
mov
push
inc
add
fwait
int
push
dec
or
push
or
or
in
dec
mov
ins
mov
test
pop
aaa
dec
rcr
adc
dec
repnz
push
sbb
aaa
or
nop
ins
mov
mov
or
add
push
(bad)
inc
mov
add
add
add
add
pop
cs
and
add
add
sbb
push
into
push
add
fmul
add
mov
mov
mov
dec
loope
pop
mov
pop
push
mov
mov
mov
mov
jmp
xor
mov
mov
mov
mov
and
and
mov
mov
loope
inc
mov
add
push
mov
xor
cmp
clc
(bad)
jg
sbb
xchg
in
inc
inc
inc
inc
inc
inc
inc
inc
fild
std
(bad)
mov
push
ret
(bad)
mov
out
(bad)
stc
mov
mov
mov
mov
mov
mov
lock
sbb
jl
cmps
push
jo
in
sbb
iret
dec
ins
nop
call
xor
out
push
pushf
shl
cmp
push
sub
ss
lock
sub
mov
mov
mov
add
push
inc
sub
pusha
xchg
push
fadd
cs
(bad)
repz
jns
aam
and
push
and
out
in
xor
adc
push
cmp
dec
xor
out
push
lods
hlt
sbb
cwde
div
xor
test
mov
out
mov
pop
xor
pusha
jnp
out
push
pop
xor
int
mov
xor
mov
mov
daa
mov
cmp
call
rcl
inc
mov
aam
movs
and
test
and
and
loopne
push
idiv
retf
mov
push
add
xor
ds
aas
or
dec
xchg
xchg
fidiv
stos
sub
sub
cmp
in
push
loopne
push
nop
and
add
lock
loopne
in
(bad)
xor
and
nop
pop
and
xchg
push
out
pop
fcom
loopne
and
mov
in
nop
daa
push
push
inc
hlt
push
inc
cmp
invd
mov
pop
aad
xchg
rol
loope
and
mov
outs
int
adc
xchg
outs
xchg
iret
test
pop
xchg
jb
xor
cwde
dec
add
int
dec
nop
aam
hlt
push
push
test
push
mov
jl
push
push
xchg
pop
out
mov
push
dec
cmp
inc
cdq
jbe
pop
push
out
xchg
and
jbe
mov
hlt
test
adc
je
sub
dec
and
pop
xchg
fucomi
and
jmp
(bad)
xchg
push
or
fdivr
or
or
adc
or
sub
sbb
mov
ins
inc
push
sbb
or
out
add
add
adc
out
sbb
xor
loop
cmp
pop
push
addr16
icebp
xchg
icebp
pushf
cs
inc
cwde
pop
and
ds
pop
imul
fild
pushf
adc
push
lahf
fcom
es
fnstcw
je
push
add
test
je
jg
rcr
(bad)
mov
mov
ins
pop
das
push
push
fsubp
cwde
rol
inc
in
ds
push
dec
xchg
dec
dec
mov
pop
cld
mov
jo
ret
push
dec
out
in
pop
les
dec
xor
ffreep
xchg
adc
ret
int3
test
hlt
and
pop
sbb
sbb
les
mov
lea
xor
ins
jb
stos
sub
movs
sub
pop
or
add
inc
add
xchg
add
sbb
ret
push
push
cmc
adc
les
neg
rol
jne
cmc
mov
add
lea
xor
xor
ds
cmp
pop
or
jne
xchg
bound
test
mov
icebp
or
push
xlat
mov
daa
sbb
adc
xchg
jo
xor
sub
or
inc
mov
jb
mov
test
pop
sbb
pop
dec
inc
pop
mov
push
fimul
pop
inc
call
daa
push
inc
repnz
mov
push
in
loopne
xchg
inc
daa
push
jo
daa
cmp
retf
or
inc
ins
popa
jno
fcom
dec
outs
sbb
ins
imul
or
cmovl
push
popa
push
mov
fidiv
ror
jp
add
lock
pop
addr16
inc
ret
mov
lods
fld
mov
arpl
cmps
pop
and
push
nop
lock
adc
inc
cmp
jmp
inc
retf
inc
imul
sub
cs
(bad)
mov
jge
xor
xchg
xor
cmps
test
test
inc
mov
cmc
add
push
cmovo
and
jmp
fldcw
jecxz
inc
iret
and
dec
inc
pop
pop
inc
arpl
mov
add
mov
adc
xchg
lock
mov
mov
adc
push
xchg
rcl
sub
into
pop
in
(bad)
fmul
retf
mov
cmp
mov
sahf
loopne
aad
fistp
and
adc
add
or
cmps
mov
pushf
cmps
xchg
inc
cmp
std
mov
jo
sbb
add
jne
pop
cli
xchg
cmp
jl
adc
adc
sub
pusha
mov
sbb
or
pop
xchg
mov
dec
mov
(bad)
xchg
adc
mov
push
pop
push
pop
es
pop
cld
clc
mov
and
ss
mov
dec
repz
pop
inc
ret
add
push
add
ret
push
daa
fistp
daa
leave
arpl
cli
and
inc
add
mov
dec
sbb
(bad)
push
adc
xor
movs
mov
dec
dec
jne
pop
sbb
jmp
icebp
xor
push
sbb
es
adc
jae
push
pop
mov
dec
push
daa
and
push
cmp
mov
out
call
or
adc
cmps
imul
imul
imul
mov
popf
and
cmp
jg
arpl
mov
dec
fbld
jo
imul
data16
push
fs
mov
fwait
icebp
and
cmp
jg
pop
xor
je
sub
pop
cmps
ins
mov
arpl
xchg
sub
dec
sbb
je
and
sti
dec
and
mov
inc
fs
xor
add
lods
mov
enter
sbb
fwait
adc
outs
hlt
adc
add
mov
scas
or
and
jp
adc
ror
sub
xor
push
rol
add
ss
dec
lods
pop
sbb
or
xchg
stos
xchg
loope
jns
retf
xor
in
pop
aam
cdq
mov
(bad)
shl
push
data16
jmp
sbb
dec
fmul
repz
lahf
mov
scas
xchg
cdq
nop
inc
ret
adc
mov
leave
mov
add
mov
inc
sbb
lods
inc
int
or
inc
or
pop
xor
mov
sub
mov
mov
pop
push
push
jle
lods
aas
mov
pusha
mov
(bad)
data16
pop
mov
movs
mov
push
(bad)
fadd
mov
icebp
popa
popf
and
mov
or
fstp
inc
inc
add
popf
and
and
sbb
inc
pop
inc
mov
jmp
pop
and
xor
xchg
xchg
add
inc
cmp
mov
jae
mov
inc
pop
addr16
ret
adc
dec
or
and
loop
dec
push
dec
pusha
(bad)
and
cmps
sub
fidiv
fld
mov
push
pusha
mov
sbb
mov
dec
dec
lea
fs
repz
push
fs
cmp
call
js
cmp
pop
mov
in
mov
push
outs
(bad)
enter
aaa
aad
mov
sub
cmp
or
nop
(bad)
popf
sbb
repnz
sbb
repz
dec
or
out
lock
dec
push
sub
fwait
push
jnp
dec
adc
dec
or
leave
in
jle
or
xchg
mov
call
fdivp
ficomp
xchg
and
sbb
push
popa
sub
ss
fcmove
leave
pop
loopne
cmps
xor
les
jg
mov
cmp
xor
adc
mov
scas
jge
ja
add
pop
lock
loope
repz
jb
jne
mov
jmp
cmp
jne
push
or
or
cli
dec
and
dec
add
fild
retf
les
pop
or
call
shl
add
mov
loopne
push
pop
mov
fsubrp
jecxz
push
xchg
cmp
ror
adc
aam
rol
sub
repz
call
(bad)
rcl
push
inc
je
sbb
mov
in
sub
mov
push
imul
dec
and
sub
inc
pop
inc
push
hlt
fisubr
movs
xor
cmps
jle
dec
adc
push
cmp
rol
push
sub
inc
push
or
jecxz
dec
add
rcl
mov
js
sub
retf
mov
xchg
sbb
mov
in
cmp
je
fisttp
pop
add
jo
and
sub
mov
shl
ds
push
mov
lea
adc
das
cmp
sti
sub
pop
mov
adc
add
adc
std
xor
and
add
fadd
add
daa
xor
mov
shl
ja
loopne
cmp
lock
cmp
sbb
mov
pop
lea
je
call
rol
inc
in
xchg
and
pop
das
shl
push
inc
pop
cmp
inc
inc
ins
idiv
fsub
mov
adc
sti
add
and
pop
jno
pop
mov
inc
or
sbb
dec
jne
aam
sub
cmp
mov
push
and
mov
popa
and
inc
add
mov
sub
(bad)
and
(bad)
test
and
std
mov
pop
and
js
jmp
les
sbb
inc
shl
pop
in
sbb
movs
jo
pop
hlt
or
lock
xchg
test
mov
dec
call
xchg
sahf
push
push
xchg
push
jne
inc
iret
xchg
fst
shl
dec
push
push
xchg
push
in
cmp
and
adc
sbb
mov
jp
lea
sub
inc
cmp
push
dec
aas
cdq
adc
mov
jmp
lgs
push
fucomi
pop
sbb
mov
jmp
mov
sbb
sbb
sub
pop
rcl
or
pop
retf
jp
pop
fdiv
ins
(bad)
push
or
(bad)
and
mov
pop
pop
or
mov
dec
and
and
xor
je
cmp
adc
adc
dec
adc
dec
jne
push
xchg
cmc
pusha
popa
aaa
call
inc
std
ds
in
jns
movs
aam
hlt
push
nop
clc
xor
xchg
adc
mov
out
ret
clc
cmp
jne
arpl
clc
fcmovnbe
sub
pop
out
dec
test
in
fdivr
mov
push
fiadd
sub
add
or
fwait
mov
loopne
and
cdq
cld
cmc
inc
shl
test
sbb
xchg
xor
push
out
sub
inc
xor
loope
pop
mov
adc
push
sbb
sub
lock
pop
push
dec
movs
imul
dec
out
cli
test
iret
jl
mov
xor
adc
xchg
in
push
add
push
ins
ret
les
mov
pop
(bad)
je
cmp
fbld
sar
cs
sbb
sbb
loopne
mov
mov
mov
cmovae
xor
and
or
test
jne
cmp
mov
test
adc
xor
ret
mov
push
pop
out
loop
xor
pop
test
mov
xchg
adc
dec
pop
fs
mov
(bad)
xlat
sbb
jl
adc
cli
or
jmp
cmps
call
pusha
pop
and
(bad)
hlt
daa
rcr
mov
scas
xor
imul
inc
push
push
loop
add
sbb
cmp
adc
sub
adc
outs
or
les
add
xor
xor
js
dec
mov
xor
xor
dec
push
sub
dec
lock
rcl
pop
ins
ja
mov
adc
adc
movs
mov
ja
jg
mov
sahf
add
(bad)
lea
lea
jmp
les
adc
pop
lods
or
dec
or
adc
mov
fstp
fwait
jmp
sub
inc
xor
cmp
sub
xchg
and
imul
mov
adc
cli
imul
arpl
xor
fwait
sub
pop
mov
outs
adc
sbb
call
pop
sub
out
or
fadd
call
adc
pop
pop
cmp
inc
dec
dec
add
xor
jo
sbb
aam
movs
ret
fcmovbe
dec
retf
sub
dec
cs
std
repnz
adc
fs
xor
test
and
jns
jne
or
popf
add
xchg
jecxz
in
sub
(bad)
aam
xchg
and
xor
fadd
inc
sub
xchg
dec
push
fnstenv
pushf
push
mov
shl
cmp
sub
sub
out
icebp
jne
dec
add
push
jmp
js
mov
xchg
out
jmp
sub
call
mov
push
push
sub
add
dec
add
mov
jno
push
pop
sbb
rsqrtps
lea
test
adc
les
cmps
dec
push
mov
sub
mov
cld
adc
mov
push
jne
dec
mov
push
cmp
(bad)
push
inc
bound
repz
jmp
adc
and
dec
xchg
jnp
xchg
or
or
sub
leave
pop
iret
retf
inc
inc
xchg
add
sub
ss
stos
fwait
xor
das
push
(bad)
rol
add
inc
add
mov
adc
mov
and
cld
xor
sub
add
cmp
or
test
sub
adc
sbb
cli
jmp
and
cs
mov
and
les
ret
push
sub
adc
adc
dec
mov
lods
or
arpl
(bad)
push
pop
int
xchg
jbe
je
mov
bound
ins
test
inc
add
loope
nop
cmp
inc
mov
jns
add
loope
mov
fucomip
and
jno
test
or
jmp
fisttp
xor
push
xchg
int
pop
in
pop
mov
add
pushf
loope
adc
mov
adc
cdq
loopne
and
fs
out
or
sub
enter
daa
in
into
mov
xchg
ins
xor
and
test
shl
call
mov
fdivr
cmc
idiv
sub
push
and
dec
not
cmps
adc
mov
in
arpl
mov
cmp
mov
mov
adc
aam
je
mov
retf
jecxz
sub
xchg
xchg
repz
stc
push
in
push
push
add
test
rol
mov
fld
add
sbb
mov
aad
retf
sbb
rol
mov
imul
adc
xchg
mov
inc
cmps
add
clc
and
test
add
inc
fwait
or
sbb
(bad)
fwait
add
(bad)
push
or
in
mov
stos
inc
cmp
dec
mov
into
gs
ins
cld
xchg
setl
mov
mov
xor
mov
add
les
jmp
lods
push
(bad)
mov
jae
dec
cmp
dec
sbb
and
ja
not
into
mov
add
stc
nop
cmps
aad
inc
std
test
cmps
jo
cmps
mov
dec
cwde
pop
sub
dec
movs
mov
icebp
fiadd
inc
dec
add
wrmsr
mov
pop
lea
jnp
jmp
pop
in
mov
mov
jl
in
mov
push
pop
rol
sub
add
adc
xlat
adc
cmp
adc
pop
add
xchg
pop
pop
pusha
sub
enter
sbb
pop
push
rol
pop
in
dec
cmp
push
xchg
das
jle
rcl
aas
ret
pop
or
dec
push
add
sbb
or
addr16
in
pop
pop
push
push
adc
or
or
xchg
cmp
aam
sbb
jmp
std
aaa
add
jmp
cmp
je
mov
test
jbe
push
adc
movs
mov
jge
cmp
push
or
sub
pop
je
sar
adc
mov
pop
cmp
cmp
dec
pop
je
cmp
or
mov
sbb
mov
test
daa
sub
frstor
icebp
or
stos
(bad)
stos
cli
rcr
into
sbb
inc
xchg
cmp
jbe
push
(bad)
mov
add
push
jl
popf
jne
(bad)
push
cmp
jne
cmc
push
cmp
sahf
in
or
mov
(bad)
mov
cmps
add
in
adc
fist
push
ret
mov
dec
enter
nop
xchg
out
mov
mov
call
outs
pop
and
push
sub
out
mov
or
push
or
sbb
push
icebp
adc
inc
cmp
fdivr
call
lea
jl
sahf
das
xchg
lods
das
jmp
cmp
loop
fstp
push
push
mov
xor
fst
and
mov
ins
mov
xchg
(bad)
sub
pop
jnp
popf
sbb
add
mov
inc
sahf
arpl
lock
add
outs
cmp
or
inc
jg
add
test
and
dec
adc
icebp
or
inc
jg
mov
dec
and
add
push
inc
xor
mov
(bad)
cmp
mov
ja
inc
pop
test
mov
and
xchg
pushf
or
xchg
and
or
inc
inc
jno
add
add
(bad)
rcl
sti
mov
add
(bad)
jo
pop
add
jecxz
bound
lea
cmp
cs
aas
aas
xor
cwde
repnz
fcom
dec
out
or
mov
sar
rol
ret
pop
and
ja
mov
pushf
inc
push
xrelease
push
and
mov
inc
in
mov
nop
inc
popa
push
sbb
xor
pop
mov
dec
je
sbb
fmul
or
mov
push
add
pop
pop
mov
sbb
add
and
outs
dec
jp
jmp
ror
int
ds
add
mov
dec
outs
sbb
lods
ret
jo
aas
dec
and
mov
mov
dec
ins
inc
cmps
sbb
mov
push
das
call
push
mov
sahf
cwde
xor
mov
mov
add
jg
mov
jle
jmp
push
inc
ins
test
popf
mov
sbb
movs
sbb
fldenv
loopne
(bad)
xor
(bad)
pop
mov
and
and
mov
(bad)
movs
outs
out
je
lea
or
and
fist
loopne
jo
pop
mov
jb
inc
and
xor
stos
mov
lock
pop
inc
cmp
shrd
not
dec
(bad)
enter
(bad)
dec
fwait
push
cmp
test
and
inc
call
inc
xchg
pop
inc
adc
fadd
cmp
push
adc
addr16
and
adc
iret
fcomp
mov
pop
jmp
or
(bad)
cmp
sbb
mov
fchs
inc
addr16
rcl
push
xchg
xchg
jns
mov
inc
or
call
out
cmp
sbb
loope
aas
and
pop
in
push
hlt
inc
fmul
mov
dec
xor
xor
loopne
test
sub
adc
std
mov
add
ins
or
dec
xchg
stos
pop
sub
inc
xlat
test
cmp
mov
dec
(bad)
lods
jge
push
or
add
or
jno
mov
or
add
pop
jae
cmp
jne
sahf
jmp
xor
xor
movs
cmp
clc
addr16
push
jmp
cmp
mov
daa
dec
es
jo
enter
imul
pop
mov
xchg
nop
movs
mov
dec
imul
in
loopne
test
clc
push
je
cli
cmp
push
pop
dec
sub
setb
cmp
jg
sub
std
sub
ret
jne
xor
call
and
pop
fiadd
sbb
in
dec
push
push
dec
inc
add
push
inc
mov
sar
xchg
or
shr
daa
rcl
shl
fadd
aam
mov
pop
aam
xchg
cmp
jne
mov
sbb
sub
je
mov
mov
mov
push
push
push
rcr
mov
mov
and
inc
mov
pop
pusha
enter
add
test
add
iret
xchg
mov
xor
clc
jecxz
jb
pop
dec
inc
test
mov
popa
push
les
popf
push
add
in
nop
sete
mov
adc
sub
xchg
add
push
adc
adc
sar
xchg
push
jbe
cmp
add
sub
outs
cmp
dec
mov
dec
push
xor
mov
inc
adc
loopne
add
shl
push
xchg
jg
fadd
sub
pusha
inc
xor
jge
xchg
in
outs
sub
das
pop
sub
cmps
call
push
dec
dec
enter
mov
aad
mov
fbstp
inc
dec
add
aad
mov
dec
push
xchg
dec
add
add
add
push
inc
or
(bad)
dec
das
out
in
in
push
mov
out
push
sbb
inc
sbb
mov
sub
dec
cmp
sti
pop
and
int3
xlat
push
push
js
inc
and
les
in
fst
mov
popa
push
mov
and
in
add
push
sbb
adc
mov
inc
xchg
inc
clc
in
sbb
fcomp
dec
xor
mov
das
arpl
loopne
movs
(bad)
(bad)
loopne
nop
jno
cmc
nop
add
arpl
add
mov
pusha
push
xor
iret
inc
dec
ins
sbb
push
mov
push
ror
adc
jmp
adc
daa
cld
add
mov
popf
es
clc
out
push
loopne
and
sub
pop
inc
or
xor
add
dec
test
and
or
mov
add
add
xchg
push
sbb
jmp
inc
sub
mov
xor
add
lds
int
div
dec
ins
not
or
xchg
mov
inc
xchg
xor
shl
push
sub
xlat
mov
pop
jle
add
ins
int3
test
aam
mov
and
xchg
push
repnz
sbb
mov
call
xchg
and
add
adc
xchg
add
xchg
mov
cmc
jp
inc
sub
push
or
and
enter
cwde
dec
dec
repnz
mov
add
rcl
call
mov
std
loop
add
push
sub
test
xor
jp
pushf
ss
aam
call
cmps
xchg
ret
dec
mov
mov
add
xor
mov
sbb
inc
inc
in
push
stc
and
inc
and
sub
cmp
or
xor
(bad)
cdq
mov
ins
or
div
sti
cmp
ud2
add
mov
dec
add
popf
stos
int3
sbb
(bad)
retf
push
cmp
push
push
mov
or
mov
push
cmp
je
ja
push
inc
jmp
adc
push
(bad)
das
xchg
sbb
add
add
test
xchg
sub
imul
out
lods
jle
add
and
adc
je
div
cwde
dec
not
sbb
mov
sub
xor
add
push
push
push
ficom
gs
nop
and
test
fistp
pop
push
rcl
cmp
and
adc
pop
push
xchg
dec
mov
xchg
push
adc
in
jmp
add
cmp
je
lock
adc
outs
bound
xchg
das
sub
jg
or
inc
inc
cld
test
je
mov
out
dec
in
adc
and
cdq
(bad)
movs
or
inc
shrd
sub
ins
sbb
inc
sub
pop
mov
inc
clc
gs
bound
retf
inc
mov
stc
jne
dec
(bad)
cmps
cmp
push
adc
sbb
mov
mov
cmovnp
push
inc
inc
inc
cmps
sbb
cmp
sbb
add
ja
repnz
gs
push
and
aaa
xor
pop
push
je
fwait
push
in
bnd
mov
push
jbe
mov
retf
dec
mov
scas
or
retf
push
stc
ftst
or
sahf
pop
push
add
and
or
(bad)
sar
adc
cdq
int3
inc
xchg
xchg
push
movs
es
daa
mov
or
and
push
mov
and
mov
mov
mov
add
pop
mov
pusha
stos
adc
dec
call
cmp
xchg
dec
xlat
xor
lods
jne
aaa
dec
pop
mov
xchg
lods
cmp
dec
outs
pop
je
mov
mov
dec
and
cmp
dec
pop
popf
test
in
js
imul
push
pusha
sbb
das
adc
xor
push
inc
(bad)
js
or
js
pushf
and
adc
or
je
mov
jle
leave
sub
jb
push
aas
or
jge
cmp
nop
cdq
sbb
mov
(bad)
mov
dec
xor
jl
and
push
jo
mov
pop
xor
xchg
mov
dec
mov
and
push
pusha
cmp
xlat
pop
push
and
js
mov
cmp
dec
cmp
push
mov
sub
lock
sbb
xor
mov
pop
stos
into
addr16
outs
clc
push
mov
pop
cmp
mov
(bad)
jae
js
lods
in
xor
mov
mov
sub
scas
loop
ss
and
je
add
ds
xor
xor
adc
dec
mov
xchg
mov
adc
xchg
push
mov
pop
and
add
mov
cmp
push
and
dec
dec
mov
rcr
loope
mov
mov
rcl
push
mov
aaa
or
pop
pop
adc
jle
add
mov
push
cmps
rol
cmp
or
ret
pop
dec
pushf
mov
dec
and
out
bound
bound
push
inc
and
and
cmc
and
(bad)
out
mov
aaa
imul
push
mov
imul
cld
push
add
pusha
pop
push
adc
push
jo
outs
dec
add
and
cmp
aas
push
cmp
or
rcl
retf
sbb
mov
sbb
test
repnz
adc
sub
cmp
iretw
inc
mov
daa
inc
and
cmp
test
or
mov
inc
retf
out
jns
cmp
cmp
push
pop
cmp
lods
outs
cmp
inc
loop
test
(bad)
and
sub
mov
sub
xchg
(bad)
scas
or
adc
mov
mov
push
loopne
ror
jg
jo
movs
cmp
mov
mov
test
or
cmp
inc
std
and
push
inc
loopne
cld
add
push
mov
inc
mov
sbb
jnp
sub
mov
push
lods
test
aaa
je
js
mov
xor
adc
mov
out
adc
push
jp
daa
pop
rcl
rep
lea
pop
mov
xchg
mov
or
add
dec
mov
adc
mov
adc
mov
jno
js
xchg
je
je
pop
and
mov
push
pop
fcomp
js
push
std
add
xor
ret
add
int
sti
or
sbb
lods
out
sbb
or
add
mov
mov
pop
xor
dec
add
das
and
add
xor
add
push
sbb
repnz
sbb
retf
lods
and
sbb
int3
push
mov
imul
pop
pop
push
cmp
mov
pop
ja
mov
adc
adc
cmps
in
repz
xchg
sbb
sbb
loop
and
sbb
outs
xor
pusha
jecxz
fiadd
mov
ins
sub
ror
adc
and
adc
call
add
inc
adc
loope
mov
aaa
cmp
xor
movs
fwait
lea
fisttp
sbb
(bad)
or
cli
mov
add
mov
(bad)
aas
icebp
or
push
dec
outs
sub
inc
sub
or
clc
sbb
and
test
fcomp
fnstcw
out
push
mov
mov
push
push
shl
and
je
es
iret
lods
pushf
xchg
aaa
mov
or
mov
add
popa
js
adc
call
mov
mov
add
test
jo
aam
or
sub
cmp
aad
ins
jecxz
inc
fsubr
das
hlt
neg
mov
ret
mov
add
mov
icebp
sbb
neg
imul
mov
std
cmps
push
jge
lahf
movs
call
xchg
pushf
ret
inc
adc
sub
mov
es
inc
cmp
sbb
dec
imul
cmp
jl
loope
jmp
sub
loopne
clc
js
mov
push
inc
ret
es
es
shl
xor
add
adc
lock
ret
push
or
adc
cwde
mov
shr
dec
dec
pop
cwde
inc
mov
test
mov
xchg
(bad)
cmps
loopne
cmp
dec
shr
outs
mov
loopne
jmp
sbb
and
add
sub
sbb
mov
xor
or
jg
ret
dec
add
call
sub
adc
and
in
or
lods
inc
add
(bad)
pop
push
(bad)
aaa
call
mov
loopne
in
or
inc
in
push
or
fsub
cmp
push
aaa
sub
push
shl
daa
push
es
dec
cmp
cs
es
mov
(bad)
cmp
les
jne
and
hlt
js
xchg
pushf
je
mov
out
mov
stos
jb
je
cmp
xor
retf
add
movs
or
xchg
add
movs
or
scas
mov
ins
sub
ins
add
les
inc
sub
and
adc
fidivr
dec
fdivp
out
mov
sbb
ror
pusha
xor
nop
xchg
pop
movs
gs
push
(bad)
pop
(bad)
add
xor
inc
rol
inc
xchg
inc
xor
xchg
pop
rcr
in
jmp
and
add
xor
jmp
push
enter
js
sbb
neg
xchg
hlt
xor
mov
xor
sbb
(bad)
mov
push
mov
lea
cs
ja
sar
xchg
jl
jne
stos
in
inc
dec
shr
push
shr
cwde
mov
adc
dec
xchg
cdq
pop
daa
mov
pop
mov
mov
movs
ret
inc
fsub
or
push
pushf
fcomp
push
or
popa
sbb
push
add
test
jnp
js
or
or
push
mov
adc
js
jne
cdq
fcom
imul
xor
and
les
jb
nop
cmp
fadd
sti
pop
ror
sbb
loopne
mov
jnp
iret
add
stos
popa
(bad)
sbb
sbb
inc
push
mov
(bad)
ins
mov
pop
adc
sbb
mov
lods
sbb
jmp
xchg
xchg
dec
sbb
lsl
xchg
sahf
cmps
sti
add
cmp
pop
loope
push
and
add
mov
add
iret
sbb
inc
jp
int3
pop
add
jle
inc
in
adc
dec
lea
jp
pop
cmps
test
outs
xchg
mov
sub
test
mov
sub
loope
xchg
jae
mov
scas
inc
rol
pop
popa
(bad)
sub
cdq
xor
and
into
cmp
jecxz
cmp
jno
stos
out
int3
(bad)
enter
cs
push
dec
cmp
sbb
ins
cmps
dec
ins
test
mov
sbb
call
movs
pop
dec
scas
push
xor
push
add
adc
or
add
xchg
ret
mov
shr
lock
je
push
push
jbe
mov
push
ror
adc
retf
push
jmp
sub
sub
or
or
or
xchg
or
pop
adc
xor
(bad)
fnstsw
cmp
dec
enter
and
sub
push
jmp
push
sub
add
rol
or
or
movs
jns
add
jmp
sub
push
add
push
pop
mov
clc
or
dec
sub
fs
lods
pushf
ins
xor
add
rol
push
ror
mov
test
push
mov
dec
mov
jl
ins
mov
mov
ins
jmp
ins
jae
imul
dec
add
inc
or
test
scas
dec
jp
inc
sub
dec
js
and
lods
dec
mov
inc
xchg
in
adc
sbb
(bad)
clc
test
adc
add
or
mov
retf
cmp
out
out
inc
add
cmp
cmp
add
mov
mov
xchg
retf
fadd
pushf
add
sar
scas
jb
div
cmp
cs
xor
add
mul
add
dec
pop
sub
bound
in
dec
je
add
pop
jmp
ret
push
outs
jae
fidivr
mov
pop
add
movs
jmp
add
sub
or
jle
push
(bad)
jmp
daa
int
mov
adc
and
pop
fs
fstp
inc
sbb
push
push
icebp
mov
mov
or
clc
fidiv
into
xor
fimul
es
sub
xor
test
jmp
cmp
inc
or
dec
add
add
sub
gs
in
cmps
sbb
ror
je
test
add
jmp
mov
sbb
xchg
add
xchg
jecxz
adc
fnsave
mov
push
xor
mov
mov
xor
xor
pop
mov
push
sub
pop
cwde
xor
adc
sti
and
mov
xor
pop
pop
fs
(bad)
dec
cmp
fsubr
rcl
cld
xchg
cmp
clc
xor
pop
lahf
lahf
das
dec
sbb
inc
sub
inc
add
xor
loop
pop
mov
aas
imul
pusha
fs
push
fisubr
cmp
sub
and
movs
jne
aas
test
pushf
div
or
sbb
in
fsubr
sbb
dec
repnz
sub
sub
sub
mov
test
pop
pop
pusha
pusha
ror
aam
shr
clc
rol
inc
push
xor
jg
mov
call
das
push
pop
js
sbb
lock
test
push
cmp
inc
add
and
dec
sbb
aam
and
sahf
stc
jmp
movsx
or
lds
(bad)
ffree
psllw
push
add
or
mov
sbb
inc
push
adc
jno
jno
jl
xchg
pop
sbb
dec
inc
popa
test
jmp
fdivr
pop
or
ret
add
cmp
stos
fwait
add
mov
je
gs
sub
mov
push
dec
xchg
xor
dec
and
pop
push
mov
mov
mov
dec
call
mov
(bad)
mov
retf
xchg
fs
or
mov
enter
push
mov
pop
enter
scas
add
mov
scas
pop
mov
ficomp
push
cmps
push
mov
mov
adc
in
jne
mov
jnp
popa
xchg
dec
sbb
mov
shl
(bad)
cmp
adc
jns
mov
mov
inc
cmp
loop
mov
imul
pop
adc
cdq
push
shr
and
rol
adc
push
sbb
add
ins
imul
inc
or
fild
or
adc
nop
mov
je
mov
push
inc
push
sub
in
jmp
(bad)
lock
sbb
pop
adc
das
xchg
aaa
xor
aas
add
push
xchg
fcomip
add
loop
fmul
sbb
test
sbb
inc
mov
sbb
pop
fwait
mov
and
lds
aas
popa
pusha
cmp
jg
sbb
in
mov
retf
rcr
pop
ret
sub
je
pop
outs
jbe
jg
enter
jmp
mov
xor
push
dec
push
or
repz
pusha
adc
adc
jle
rcl
adc
or
retf
movs
adc
lds
or
jl
add
sbb
inc
sbb
sub
inc
sbb
push
cmp
fadd
and
add
add
push
jl
in
inc
add
push
inc
and
sub
ins
retf
and
jbe
xchg
inc
(bad)
push
and
pop
pop
pop
popa
je
xlat
adc
add
push
rol
(bad)
adc
xchg
or
fwait
jmp
rol
and
push
cmps
int
je
pusha
jg
adc
pop
aam
sbb
or
add
ret
gs
loop
or
adc
xchg
sbb
xchg
sub
fdivr
dec
(bad)
lea
mov
xchg
or
nop
ror
pop
ss
mov
jl
out
(bad)
scas
push
xor
inc
adc
sbb
add
pop
cs
xor
aaa
pop
popa
cmp
mov
or
sbb
nop
test
cmp
push
retf
aaa
lock
addr16
adc
or
loope
inc
lahf
xor
in
adc
fisubr
sbb
ret
mov
daa
or
inc
arpl
je
lock
mov
fs
rcr
mov
xor
push
add
popa
dec
mov
or
loopne
mov
inc
mov
push
inc
or
jp
dec
mov
pop
push
xor
test
sub
lods
out
dec
jb
test
mov
or
aaa
cmps
or
sub
aaa
fcmovu
loop
mov
dec
push
ins
icebp
sub
jno
inc
add
sub
repnz
mov
dec
inc
pop
pop
popa
mov
into
xchg
cs
in
das
or
cmps
lock
or
push
mov
xor
jp
xchg
pop
out
sub
popa
xchg
push
fwait
mov
pop
xor
outs
sub
mov
imul
and
aaa
imul
clc
fnsave
mov
aam
nop
out
mov
adc
xchg
adc
push
push
adc
adc
fmul
ins
jl
sbb
lahf
xor
cmp
push
xchg
fldcw
test
aaa
(bad)
and
data16
adc
inc
adc
ret
ficom
add
push
(bad)
in
inc
es
jg
or
rcl
and
sbb
and
arpl
dec
mov
lods
in
mov
call
push
test
mov
pop
outs
(bad)
sub
in
sub
out
(bad)
push
popa
movs
add
(bad)
mov
mov
lahf
out
push
sub
sbb
sbb
dec
ret
xchg
adc
test
sbb
mov
pop
xor
push
push
mov
push
aas
sub
dec
mov
xchg
(bad)
sub
inc
sbb
(bad)
fld
mov
mov
sbb
sbb
fwait
push
fiadd
xor
test
aam
ss
xor
dec
mov
push
xor
dec
jg
mov
xor
adc
cli
adc
add
jns
adc
movs
jg
push
add
ins
cmp
push
add
gs
fidivr
cmp
or
fwait
lock
sbb
mov
xor
xor
and
mov
shl
and
test
add
fsub
add
xor
je
xchg
jmp
bnd
in
aam
int3
or
rcl
pop
or
sbb
inc
add
ror
cmp
mov
scas
call
push
inc
or
xor
pop
rcr
gs
push
out
mov
sbb
push
pop
cmps
cmp
sbb
aaa
mov
xchg
test
inc
pop
sbb
stos
push
iret
dec
pop
sbb
sbb
push
mov
(bad)
aam
inc
jae
loop
push
jns
adc
adc
adc
ret
adc
cmps
retf
adc
dec
jmp
or
aaa
or
shl
sub
test
lea
adc
mov
rcr
jo
out
adc
imul
sub
mov
adc
test
jnp
inc
sbb
push
sbb
clc
xchg
xchg
adc
inc
mov
inc
mov
push
stc
iret
clc
mov
xor
daa
in
mov
xor
xor
movs
mov
div
xchg
sbb
jle
pop
cmp
retf
and
jo
test
ins
pop
sub
fst
add
lods
pusha
sub
test
add
aas
xor
xor
aam
cwde
pop
ret
sbb
push
arpl
inc
cmc
add
into
loopne
jecxz
xor
add
xchg
rcl
mov
cld
jne
mov
cmp
and
push
cld
inc
jmp
mov
shr
jl
dec
scas
stos
aam
sub
xchg
div
jo
loope
mov
push
mov
sbb
mov
jae
lock
call
jne
xlat
call
out
lock
mov
mov
fadd
stc
cwde
mov
test
xor
add
(bad)
xor
pushf
cmp
aas
xor
dec
xor
sub
sbb
or
push
dec
or
dec
jne
enter
pop
push
rcr
mov
fimul
push
loop
cli
mov
movs
xchg
inc
pusha
and
sub
sub
jb
xchg
mov
pop
scas
ss
std
nop
popa
sub
sub
sub
dec
cmps
mov
and
add
push
in
jl
cmp
mov
mov
add
outs
sbb
add
xchg
hlt
ret
or
inc
out
ja
add
cmc
fisttp
cmps
add
or
cmp
popf
or
shr
mov
lahf
(bad)
loop
in
pop
pop
inc
lahf
pop
in
sbb
aaa
jecxz
fist
xor
loop
mov
clc
mov
mov
ss
ja
out
lds
add
sahf
ds
pop
daa
outs
cld
(bad)
out
pop
test
inc
inc
setg
jmp
adc
inc
dec
push
push
dec
rcr
and
sahf
and
cmp
dec
mov
cmp
dec
shl
adc
push
or
call
or
xchg
dec
push
rcl
cwde
(bad)
test
mov
xacquire
cmp
jmp
xor
in
mov
and
xor
sub
dec
popf
dec
dec
dec
xor
sub
sub
mov
and
xchg
xchg
inc
ror
pop
push
sbb
push
push
popa
add
cld
mov
je
adc
adc
imul
or
jmp
cmp
(bad)
mov
out
cmp
or
ins
sbb
sbb
mov
cli
xchg
add
stos
shl
push
jns
mov
or
xchg
jbe
xchg
inc
mov
call
and
std
add
mov
xor
popf
mov
gs
test
test
mov
fsubr
pusha
sbb
jno
loopne
xchg
sub
xchg
lock
or
jb
sub
or
popa
or
add
mov
or
add
push
in
aaa
ja
aaa
adc
xchg
scas
out
mov
pop
stc
ret
mov
jnp
dec
arpl
mov
sbb
sbb
add
jle
mov
in
jo
dec
stos
or
xor
adc
push
sbb
mov
jmp
pop
xor
es
out
push
push
mov
rcr
shr
mov
pusha
mov
cli
ret
dec
dec
adc
bound
cmp
xchg
movs
xor
jnp
int
add
mov
fpatan
cmp
mov
fadd
enter
inc
push
daa
xor
(bad)
in
inc
sub
popa
cmp
sbb
and
test
xchg
loop
hlt
push
lock
inc
retf
ins
lea
inc
add
prefetcht1
mov
bound
sub
xchg
sbb
cmp
mov
pop
pop
jne
int
add
cmp
outs
jmp
mov
mov
xor
adc
clc
daa
pop
cmp
or
mul
sbb
mov
addr16
icebp
scas
and
or
gs
mov
test
pop
jne
cmp
mov
cmp
add
idiv
add
cmp
jge
push
sbb
or
fadd
in
fldcw
iret
lahf
xchg
lock
mov
rcl
sub
addr16
mov
out
pop
cmps
jne
mov
add
xor
ror
sbb
repz
js
push
aad
(bad)
and
and
inc
dec
arpl
inc
add
out
int
cld
push
popa
jne
push
push
and
daa
pushf
les
adc
cmp
pop
scas
sbb
add
pop
adc
ds
inc
add
sub
ss
push
adc
dec
je
movs
and
jne
xchg
nop
cmp
push
aad
les
or
add
add
push
in
and
xor
pushf
sbb
mov
mov
scas
or
mov
in
mov
addr16
sub
dec
imul
pop
or
dec
dec
sbb
stos
push
cmp
es
mov
(bad)
cmp
inc
pop
aas
jmp
xchg
pop
(bad)
outs
inc
cmp
pusha
push
out
in
jg
adc
das
inc
cwde
ror
mov
jne
and
adc
bound
adc
imul
add
lahf
nop
into
fnsave
adc
(bad)
fsubr
inc
iret
imul
inc
xor
inc
and
imul
push
dec
sub
into
jp
mov
scas
xor
ss
mov
xchg
dec
push
lds
push
in
cmp
and
cmps
and
scas
adc
loopne
retf
shl
popa
shl
inc
(bad)
push
das
inc
inc
and
cdq
aad
cld
clc
push
jo
rol
aam
rcr
fild
sub
add
jle
cmp
add
xchg
aas
add
add
inc
mov
jl
jo
shr
mov
inc
and
and
xchg
rcl
jp
inc
and
sub
into
test
push
repnz
sbb
jne
push
inc
or
ror
add
enter
cmp
lahf
sbb
xchg
rcr
or
sbb
mov
clts
ss
test
les
cdq
add
mov
mov
mov
jl
out
mov
outs
test
pop
sbb
xchg
fidivr
jmp
adc
or
and
push
ss
int
cdq
sti
mov
inc
(bad)
icebp
pop
jmp
jmp
pop
mov
push
fmul
push
(bad)
in
ins
mov
add
jmp
mov
sub
or
mov
or
popa
outs
loopne
ds
daa
adc
idiv
in
jmp
mov
sub
arpl
pop
fidivr
mov
je
add
sbb
dec
movs
ret
scas
push
out
loopne
movs
daa
movs
sbb
push
call
cdq
add
and
pop
inc
loop
cmp
and
les
mov
popf
test
pop
and
repz
je
repz
mov
push
or
in
and
loopne
enter
retf
dec
adc
inc
adc
mov
sub
mov
add
nop
es
pop
add
movs
(bad)
dec
jb
inc
and
mov
lea
(bad)
jge
push
push
push
or
imul
push
repnz
cmps
cmp
pop
dec
and
or
inc
adc
or
pop
jle
inc
retf
inc
cmp
out
sbb
cmp
adc
and
or
aam
dec
push
sub
test
or
call
xor
or
add
and
imul
and
pop
std
add
(bad)
in
push
xchg
sub
(bad)
lds
push
mov
jb
jb
pushf
arpl
cld
jae
test
inc
je
fwait
cs
xchg
xor
je
(bad)
or
sub
ss
cmps
or
inc
out
cld
push
out
and
or
pop
test
pushf
mov
or
clc
inc
and
in
cwde
jnp
mov
inc
je
and
mov
sar
repz
xor
aas
push
or
sub
aaa
sub
ins
dec
push
push
and
mov
ss
xchg
sbb
not
hlt
sub
mov
sahf
nop
lahf
aam
pop
adc
stc
xchg
fs
jmp
ret
xor
gs
stos
push
add
hlt
xor
cmp
xchg
fimul
fs
push
inc
inc
call
(bad)
sbb
or
into
repz
adc
xor
rol
push
cli
cdq
movs
push
push
nop
or
pushf
test
adc
popa
xchg
mul
cmp
mov
cmp
pushf
dec
sbb
cmps
xchg
fbld
dec
mov
cs
neg
adc
dec
jae
xchg
adc
js
or
hlt
sbb
or
movs
(bad)
push
rol
jecxz
jecxz
cmp
loopne
call
aas
add
clc
xchg
neg
das
sub
les
xor
pusha
ucomiss
mov
movs
clc
cmp
add
jb
sbb
mov
adc
inc
popa
jne
sub
xchg
movs
xchg
and
movs
or
imul
retf
cmp
shr
adc
inc
sub
addr16
pop
inc
div
inc
or
sbb
aas
outs
and
(bad)
cs
dec
jo
inc
jge
mov
daa
ret
xor
pop
test
outs
jne
jnp
mov
pop
test
xlat
popa
ds
imul
adc
mov
aad
mov
xchg
xchg
or
and
mov
pop
movs
or
test
outs
adc
xchg
adc
fadd
sub
xor
call
fiadd
jmp
push
push
stos
inc
or
and
movs
cmp
arpl
ss
test
dec
test
jecxz
stc
mov
add
outs
jns
retf
test
add
xchg
cwde
fild
xlat
retf
hlt
ss
add
xlat
inc
push
jge
pop
in
xor
inc
add
arpl
stc
mov
push
ins
retf
(bad)
xchg
xchg
js
pop
xchg
or
pusha
or
adc
mov
repz
dec
sub
ret
rol
adc
adc
push
sub
jle
ror
xchg
je
pop
xor
push
push
sbb
lea
jmp
push
retf
cmp
or
inc
mov
xchg
dec
xor
sub
sbb
adc
mov
sbb
or
inc
jg
inc
or
adc
adc
pop
jne
sbb
sar
mov
repnz
std
nop
call
fimul
js
sti
clc
push
(bad)
je
mov
sub
je
in
in
jmp
aam
xchg
xor
add
xchg
xor
add
add
push
mov
cmp
mov
jge
sbb
add
sub
xchg
pop
cmp
mov
push
nop
or
or
and
adc
je
mov
adc
sbb
mov
je
adc
inc
pusha
push
inc
mov
push
sub
xchg
mov
nop
fs
scas
xor
jne
data16
push
fadd
test
dec
adc
adc
ret
daa
add
adc
stos
xor
pop
fadd
daa
ja
push
inc
or
jmp
scas
and
adc
stc
and
hlt
and
xor
shr
rcl
inc
and
xor
dec
push
add
push
inc
push
sbb
xor
sbb
aam
ror
hlt
lods
xchg
inc
je
clc
popf
clc
add
loop
sbb
lahf
and
pop
or
and
push
push
push
push
adc
mov
mov
pop
cmp
pop
pop
add
repz
cmps
cmp
add
hlt
stos
adc
mov
data16
xor
inc
ror
jmp
stos
push
jmp
in
pop
push
mov
dec
sbb
dec
and
sbb
cvtps2pi
pop
js
dec
movs
cmps
fst
push
(bad)
xchg
cmp
fmul
in
lea
push
inc
or
jnp
sar
push
mov
jne
xor
aaa
in
fwait
inc
sub
ins
mov
loop
xchg
nop
jle
daa
add
lahf
popa
or
out
pop
dec
mov
cmps
jno
aam
int3
repnz
add
sub
popf
cmp
inc
and
mov
or
fcomp
lock
mov
sub
and
sbb
sbb
sar
sub
push
inc
or
movaps
xor
or
push
loope
add
dec
cdq
mov
aam
add
mov
or
mov
fcomp
add
adc
loope
dec
test
mov
xor
xchg
pop
xor
xchg
and
inc
or
ret
lock
es
xchg
call
es
shl
fnsave
scas
rcl
mov
pusha
sbb
(bad)
jmp
inc
sub
repnz
ret
mov
nop
and
sbb
or
push
mov
sub
sbb
mov
jne
jno
push
jmp
xchg
popf
cmp
mov
mov
pop
adc
dec
gs
add
jbe
pop
daa
add
fiadd
and
call
fs
test
popa
dec
imul
jbe
rcr
jnp
stos
pusha
push
sbb
dec
aas
inc
add
retf
hlt
mov
dec
mov
jne
nop
cwde
cmp
hlt
and
xchg
fs
int
enter
dec
mov
pop
imul
(bad)
jl
in
jecxz
add
(bad)
out
mov
mov
mov
push
push
pusha
fadd
enter
sub
push
mov
addr16
outs
ja
or
addr16
pop
adc
nop
jmp
jmp
xchg
retf
xor
test
sub
pop
or
and
and
xchg
or
scas
xchg
push
fwait
mov
jp
jne
jo
icebp
pop
cs
sub
pop
and
and
imul
test
cmp
jbe
add
add
jmp
movs
je
and
add
inc
imul
and
inc
fdiv
xchg
dec
dec
fisttp
xor
sub
cmp
pop
dec
jae
sbb
fstp
xchg
popf
ins
mov
outs
clc
or
sbb
(bad)
ror
cmp
dec
stos
push
add
dec
xchg
call
ret
mov
jg
mov
adc
cmps
push
adc
out
fist
xor
es
or
jns
inc
bound
add
sbb
cmp
push
aas
xchg
int3
jo
icebp
nop
dec
hlt
cmp
add
jnp
push
mov
xchg
xor
pop
jnp
sub
and
xor
retf
push
push
push
test
add
add
dec
mov
scas
dec
cmps
xor
inc
and
fldenv
xchg
cmps
hlt
lock
leave
arpl
sbb
add
jo
sbb
adc
xchg
arpl
fstp
mov
lods
jge
pop
pop
xchg
adc
leave
jne
adc
sbb
adc
cdq
and
scas
aad
ins
repz
push
in
retf
popf
cwde
rol
retf
jge
mov
fimul
test
lea
imul
call
movs
call
xor
jbe
call
pop
adc
mov
and
sbb
mov
xor
je
addr16
and
sbb
pop
mov
into
adc
lds
aas
xor
out
sbb
fidivr
clc
xchg
movs
push
push
iret
in
or
ret
mov
xor
sbb
inc
inc
sahf
in
clc
or
shl
or
mov
rol
inc
adc
jnp
int3
mov
push
popa
fisttp
int
dec
sub
sbb
cmp
and
adc
xor
popf
mov
xchg
xchg
lea
and
mov
and
cmc
dec
inc
call
add
fsubr
mul
inc
mov
bound
rol
xchg
cdq
push
jo
dec
and
push
scas
sub
xor
push
pop
popa
xor
test
fcomp
inc
sbb
cld
cld
or
add
jp
add
push
xchg
xor
stos
fs
inc
mov
cdq
push
shl
xchg
div
add
sub
and
or
ficom
jo
pop
inc
in
lock
push
cmp
mov
mov
cld
and
movs
fs
push
xor
stos
enter
(bad)
push
imul
les
inc
sub
sbb
bound
dec
cmp
sti
iret
adc
push
bound
sub
test
push
add
dec
push
fmul
sub
push
cmp
inc
sbb
sub
mov
lods
push
and
sub
adc
clc
push
mov
adc
(bad)
and
adc
aam
inc
sbb
fild
fist
mov
cld
(bad)
pop
jo
adc
or
test
or
sub
aas
xchg
fnstenv
scas
dec
sbb
dec
inc
out
push
leave
cld
add
outs
fstp
loope
std
inc
int
rcr
add
xor
in
xchg
rcr
mov
inc
xchg
enter
hlt
ja
inc
sub
jne
mov
mov
or
movs
es
pop
daa
test
loopne
adc
add
test
xor
es
adc
ret
ror
in
inc
mov
adc
push
aas
jp
adc
inc
cli
cmp
cmps
or
cli
mov
cmp
mov
push
mov
popa
jp
(bad)
rcl
inc
(bad)
jmp
mov
add
and
mov
sbb
push
push
sbb
js
mov
xchg
psubb
push
retf
push
adc
or
push
outs
mov
addr16
lods
or
sub
inc
pop
mov
ret
scas
add
inc
add
push
pop
movs
jo
std
add
shr
push
loope
jne
lods
sbb
add
push
sbb
shl
sbb
pop
mov
cmp
inc
cwde
pop
inc
add
dec
shr
adc
push
adc
mov
or
or
int
test
rol
sbb
out
fs
test
add
out
or
pop
aaa
mov
inc
mul
mov
xchg
pop
sbb
inc
(bad)
and
sar
adc
rcl
rol
dec
sti
sbb
js
push
sbb
rcl
inc
adc
ret
mov
nop
cmps
cmp
mov
sub
add
jnp
pop
movsx
lds
ja
sub
inc
cmp
ss
inc
dec
(bad)
xchg
cdq
xchg
adc
lods
add
cmp
ror
xchg
retf
mov
aam
and
mov
rcl
rol
cld
aaa
inc
bswap
das
adc
mov
cmp
daa
add
or
add
and
jmp
nop
mov
ja
sbb
dec
push
dec
pusha
jno
xchg
ror
inc
stos
(bad)
mov
push
mov
bound
dec
jae
dec
sbb
cmp
cmp
mov
or
and
xchg
adc
ret
cmps
inc
push
cmove
and
add
mov
mov
pusha
popa
or
int3
xchg
retf
dec
cmp
xchg
xchg
xchg
adc
sbb
or
inc
cmp
mov
movaps
rcl
test
and
add
sub
xchg
lahf
xchg
hlt
inc
add
dec
frstor
aas
rcl
in
and
shr
push
add
pop
(bad)
mov
cmp
jl
push
mov
push
mov
or
ins
dec
(bad)
movs
dec
(bad)
ret
out
push
imul
ss
pop
inc
retf
arpl
shr
jle
mov
cmp
mov
fs
push
dec
cli
push
push
add
xchg
add
xlat
push
cld
out
add
push
sar
push
mov
inc
fwait
pop
cmp
jno
lds
pop
lea
mov
nop
xchg
fcom
lods
outs
dec
add
repnz
pop
(bad)
hlt
mov
mov
daa
(bad)
clc
fcmovbe
xor
clc
icebp
addr16
sub
pop
sti
leave
jne
or
push
adc
mov
pop
sbb
das
sbb
and
(bad)
push
and
push
aam
add
faddp
fisttp
sbb
push
test
aas
xchg
rol
test
ja
test
pusha
dec
jmp
push
adc
mov
inc
xor
(bad)
sbb
addr16
push
(bad)
mov
add
add
daa
lods
mov
dec
mov
cmp
shrd
aas
imul
cmp
mov
out
fstp
lea
or
push
shl
fcomi
sub
rcr
jno
and
pop
imul
sub
cmps
call
push
inc
or
aam
xor
call
(bad)
(bad)
daa
adc
and
and
mov
xor
daa
frstor
sbb
sub
pop
sub
adc
push
sbb
and
sbb
and
adc
push
mov
ja
rcr
shl
push
lock
inc
into
lahf
sub
dec
xchg
add
inc
sub
mov
shr
add
inc
nop
sub
sub
popa
sub
sbb
pusha
dec
pop
pop
or
adc
les
mov
push
adc
add
dec
mov
push
pop
fcomp
cmp
xchg
pop
mov
inc
mov
or
pusha
(bad)
jnp
cmp
pop
mov
inc
loope
out
sbb
add
ss
add
ret
and
ins
or
and
into
int3
pop
jae
sbb
sub
mov
jo
inc
adc
add
test
scas
sub
pop
sub
mov
jbe
xchg
add
mov
clc
pop
or
cmp
push
push
sbb
add
ret
push
push
mov
sbb
xor
sbb
inc
fnstcw
mov
pop
aas
sub
push
ins
out
jmp
(bad)
sbb
jns
bound
and
loopne
aam
mov
inc
push
or
mov
test
popa
test
pop
push
mov
test
mov
fsubr
pop
ss
aaa
call
je
push
and
dec
add
adc
xor
scas
icebp
xchg
out
bound
or
xor
sti
add
scas
(bad)
scas
inc
and
in
and
inc
inc
icebp
enter
sti
push
jne
or
je
adc
mov
iret
mov
mov
pop
inc
add
setb
ja
or
in
lea
pusha
sub
or
sub
out
scas
shr
push
outs
repnz
jae
rcl
dec
out
movs
popa
lods
fidivr
push
dec
in
stc
add
inc
sub
mov
aad
inc
sub
leave
cmp
pop
stos
popa
test
xlat
mov
les
rcl
jle
jo
shl
xor
ret
xchg
mov
lds
mov
clc
jmp
test
loopne
dec
push
pushf
or
pop
push
ret
adc
fmul
movs
push
movs
mov
pusha
mov
bound
push
cwde
add
inc
retf
push
inc
add
xchg
jo
sub
aam
jno
fiadd
inc
sete
adc
sti
mov
xor
nop
jbe
jmp
sbb
lea
mov
call
and
cmp
xchg
push
dec
cs
ret
sub
xchg
(bad)
push
nop
adc
and
sub
cdq
push
add
push
test
inc
xchg
scas
stos
pop
adc
xchg
rol
cmp
add
lock
punpckhdq
adc
js
daa
jo
xchg
push
and
jp
xor
push
rcr
mov
ins
pop
mov
repz
push
leave
dec
xchg
xchg
test
fnstenv
and
or
push
fidiv
push
xchg
test
pop
js
mov
sbb
or
jg
sub
jo
inc
in
dec
daa
imul
pop
imul
test
xor
aaa
add
jmp
push
inc
inc
cmp
sub
and
pop
pop
and
mov
jle
test
pop
xor
mov
xor
ins
cmp
add
popa
sbb
mov
sub
jmp
ins
pop
and
imul
vmptrst
loopne
lods
jnp
inc
add
add
add
icebp
pop
xor
jmp
cmp
mov
pop
leave
sub
arpl
sub
inc
jne
inc
pop
aad
push
adc
adc
pop
ror
rol
clc
imul
xchg
clc
loop
test
(bad)
fst
dec
push
sbb
push
push
aad
mul
dec
shl
add
mov
sbb
mov
add
push
dec
mov
jb
sbb
(bad)
(bad)
enter
xor
dec
mov
mov
and
adc
sub
cs
loop
jmp
clc
sbb
mov
inc
or
cwde
sub
xchg
push
je
adc
pop
jmp
add
jb
dec
xor
lea
out
in
add
lds
jns
adc
jo
xor
xchg
daa
es
cmps
sub
xchg
push
ret
into
pop
imul
ins
inc
xchg
or
(bad)
dec
push
sbb
daa
push
sub
jmp
add
add
pop
iret
adc
jbe
movs
aas
jns
inc
xor
lods
popa
dec
and
neg
pop
or
out
and
add
and
mov
addr16
push
sbb
repnz
sbb
sbb
push
jge
(bad)
daa
sti
or
les
shl
shl
pop
jmp
dec
and
aas
sbb
sub
or
(bad)
out
out
push
push
cmp
jmp
les
xor
fcom
mov
fist
popa
pop
xchg
jbe
or
mov
mov
ins
adc
xor
xchg
scas
out
mov
mov
jecxz
xchg
je
nop
pop
icebp
lods
mov
ss
inc
add
and
mov
xchg
jmp
je
sub
xor
push
sti
adc
enter
jge
xor
inc
cli
cwde
dec
sbb
vmovlps
cmp
sub
stos
inc
lahf
push
add
add
push
imul
or
loop
mov
add
or
xchg
bound
dec
mov
data16
(bad)
ds
or
xor
xor
psllw
inc
and
jmp
retf
jne
jl
outs
jmp
inc
add
sub
add
push
inc
xor
mov
int
dec
lods
cmps
and
or
inc
sbb
std
pop
cmps
push
in
nop
mov
adc
push
inc
loopne
fcmovne
jl
push
inc
sub
test
fbstp
jg
mov
in
or
and
xchg
jno
mov
pop
mov
lahf
cmp
test
xor
nop
call
scas
daa
mov
lea
cmp
jmp
sub
and
daa
test
addps
sub
adc
lds
gs
mov
fnsave
add
in
add
or
(bad)
cwde
sub
or
neg
ret
mov
jle
adc
dec
push
mov
mov
mov
out
inc
cs
loope
loopne
sbb
mov
rol
je
jge
nop
mov
call
mov
add
ret
inc
call
movs
inc
xchg
popa
or
daa
inc
jns
(bad)
call
shl
and
fcom
and
scas
pop
or
cmp
adc
adc
or
dec
push
and
imul
adc
dec
and
add
std
and
ror
inc
sbb
pop
inc
cs
add
or
push
pop
or
dec
push
fcom
lea
pop
mov
sbb
inc
addr16
and
dec
or
aaa
mov
add
inc
test
cwde
das
sub
cmps
mov
out
mul
bound
test
sub
add
xor
add
and
push
mov
mov
daa
dec
cwde
es
repnz
nop
or
push
or
mov
mov
adc
or
hlt
gs
addr16
add
jne
or
cmp
mov
pushf
daa
js
pop
add
das
xor
push
mov
xor
push
cmp
or
rol
rcr
adc
nop
or
arpl
jbe
lahf
xor
mov
jp
(bad)
sub
lods
or
xchg
dec
xor
outs
push
call
lock
push
add
stos
arpl
scas
xor
ror
sar
sub
int3
pusha
mov
xlat
loope
retf
add
lea
cmps
and
dec
xchg
scas
das
mov
add
ins
push
test
sar
xchg
add
mov
daa
xchg
(bad)
stos
push
test
inc
mov
(bad)
hlt
inc
jmp
ret
loopne
push
xor
sub
xor
pop
sub
push
or
and
enter
shr
inc
xlat
sub
dec
inc
or
fisubr
or
jno
lock
cmp
cli
add
xchg
push
sbb
add
dec
push
ret
je
mov
pusha
pop
sbb
add
or
outs
sti
adc
sbb
inc
inc
aas
or
int3
adc
pop
popf
mov
add
popa
sbb
shl
jecxz
sub
sub
icebp
add
or
inc
xor
psraw
xchg
rcr
sub
ins
int3
push
outs
mov
xchg
cli
imul
cmp
push
add
rol
xor
sub
jge
and
pushf
push
dec
retf
dec
aas
jge
mov
push
loopne
loopne
dec
aam
icebp
add
in
cs
adc
sbb
dec
mov
enter
jge
and
or
sbb
rol
call
loop
adc
aad
neg
and
xor
loope
stc
ret
jg
fisubr
inc
push
int3
hlt
xchg
add
sub
movs
add
mov
mov
cdq
pop
es
xor
pop
adc
adc
or
adc
or
sbb
or
mov
and
mov
adc
sub
daa
mov
and
mov
jne
movs
add
xlat
mov
push
shl
mov
pushf
mov
aad
adc
inc
cli
stos
sub
dec
ss
mov
sub
adc
jno
or
daa
ins
and
sub
push
clc
clc
lock
movs
cmp
repnz
inc
jne
ins
imul
or
je
push
pusha
jb
or
xchg
adc
mov
add
xlat
dec
mov
stos
pop
mov
mov
inc
mov
xchg
dec
mov
ins
fbstp
sbb
pop
push
imul
push
adc
or
je
push
or
mov
popa
and
mov
shl
inc
xor
cmovl
inc
push
out
or
outs
call
fsubr
test
in
sub
jmp
pop
add
or
fst
shl
push
rcl
mov
dec
add
mov
mov
dec
or
dec
shr
add
mov
add
cs
neg
push
les
cmp
jae
test
and
xchg
mov
jge
adc
push
sub
loopne
push
fiadd
rcl
mov
cs
(bad)
xchg
data16
les
push
mov
neg
test
add
add
xchg
jb
int3
dec
sub
mov
adc
mov
and
cmps
mov
jns
cmp
mov
and
lahf
jmp
mov
inc
dec
add
xchg
jo
push
les
data16
loopne
pop
xchg
jecxz
xchg
add
xor
fdivr
sbb
fsub
xor
inc
retf
fmul
or
mov
fadd
jmp
xchg
or
dec
les
sbb
add
or
add
push
inc
mov
aas
add
adc
jl
mov
add
sar
lock
inc
outs
add
mov
arpl
jge
pusha
add
call
mov
sub
jnp
mov
fimul
dec
xchg
jge
ja
cs
dec
test
add
clc
repz
sar
cmp
and
lea
adc
je
xchg
leave
push
sbb
ins
stos
test
das
adc
aam
imul
in
jge
in
in
pop
cmps
xor
sub
test
push
test
adc
mov
dec
sub
jo
fmul
sub
dec
push
into
ds
add
out
xor
cmps
sub
or
dec
mov
sub
push
call
mov
jmp
inc
inc
push
ret
dec
add
fdiv
add
and
cld
add
or
add
shr
dec
enter
add
push
pop
adc
pusha
pop
mov
in
dec
movs
imul
inc
inc
cdq
nop
add
add
and
mov
dec
je
xchg
adc
jp
push
(bad)
push
add
jmp
or
adc
push
add
cmc
xor
mov
not
iret
push
inc
adc
push
adc
es
pop
add
inc
or
stos
jne
or
or
pop
int3
ins
adc
je
xchg
push
xchg
cmp
(bad)
dec
aaa
pop
ja
xchg
and
fcom
aam
xor
xor
xchg
(bad)
dec
popa
call
lea
mov
cmp
add
mov
in
sbb
enter
aam
ds
mov
or
push
cmp
adc
or
and
cld
or
div
sbb
mov
sub
cmps
ret
mov
mov
test
add
sbb
nop
fwait
add
jne
or
aam
outs
xlat
movs
mov
mov
fwait
ins
or
es
and
pop
and
mov
ret
and
xchg
xor
push
stos
xlat
hlt
fwait
push
pop
dec
sub
fidiv
push
mov
adc
xchg
mov
aam
mov
jne
ins
dec
xchg
pop
clc
dec
add
push
pop
pop
lahf
lock
pusha
and
dec
push
stos
mov
les
sub
mov
dec
nop
pop
cmps
inc
adc
or
das
and
xchg
hlt
scas
jnp
enter
mov
test
or
jmp
mov
or
sub
ret
in
adc
adc
data16
jg
fs
ror
mov
shl
or
retf
add
aaa
and
jmp
test
inc
mov
or
ret
das
or
adc
lea
mov
push
jns
clc
mov
mov
or
les
es
test
imul
pop
add
xor
call
inc
push
mov
cmp
not
and
nop
dec
add
xor
bound
iret
cmp
dec
xor
add
mov
xor
xor
(bad)
mov
xchg
add
cmp
or
daa
and
cmps
push
sub
lods
test
cmp
add
daa
adc
movs
mov
lock
jo
xchg
std
hlt
xor
enter
jmp
inc
push
pop
mov
jecxz
aam
add
les
sub
pop
nop
into
jo
retf
xor
sub
jo
movs
inc
mov
das
or
xchg
lock
arpl
cmps
and
test
dec
clc
or
adc
mov
adc
push
sbb
mov
dec
scas
add
xor
xor
and
test
xor
stos
fist
jg
or
adc
sub
jle
int3
les
inc
sbb
addr16
fcom
gs
sar
and
test
outs
pop
jbe
mov
and
or
push
xchg
cmps
sti
dec
add
cmp
sub
fdiv
adc
inc
jb
push
push
imul
or
test
sbb
aam
fist
dec
inc
cmp
cmp
sub
or
enter
xor
inc
fidiv
cmp
les
aam
jle
cmps
pop
ror
repnz
daa
and
mov
inc
xor
test
cld
or
pop
push
inc
mov
loopne
add
add
push
inc
call
dec
jnp
or
push
cmp
jge
daa
int3
inc
push
or
mov
movs
mov
(bad)
mov
dec
call
or
sub
dec
fwait
xor
push
mov
sbb
xor
test
add
cmp
ret
or
cli
pop
inc
nop
clc
fs
cmp
dec
(bad)
jo
imul
adc
add
sbb
mov
das
sbb
or
cmp
sbb
add
push
or
imul
add
or
and
call
push
cdq
push
xor
sub
cmp
push
scas
pop
inc
mov
mov
mov
lahf
sbb
movs
vlddqu
push
gs
mov
pop
inc
mov
or
test
cmc
mov
(bad)
mov
or
int
xchg
rol
add
pop
ins
inc
pop
in
push
sbb
adc
pop
sbb
sbb
mov
jne
push
mov
out
jns
arpl
daa
cmp
or
inc
add
in
fld
ds
add
mov
inc
xor
sbb
hlt
imul
mov
mov
or
or
ret
sbb
(bad)
jg
call
push
jge
js
xlat
call
or
add
xor
jmp
xchg
xchg
test
jae
mov
jo
test
je
enter
aas
cmp
or
mov
stos
inc
push
out
popf
inc
mov
pop
push
bound
push
mov
xchg
sub
ret
jmp
lods
jo
in
or
adc
fbld
or
dec
cmp
(bad)
es
cmp
les
add
pop
inc
movs
xchg
pop
(bad)
ins
xchg
int
inc
fadd
sbb
inc
jp
jmp
nop
daa
shl
hlt
jmp
jmp
cmp
je
pop
inc
or
lock
mov
inc
test
inc
ins
rep
add
sti
popa
push
fild
mov
test
rol
xor
arpl
push
cmp
es
fistp
or
mov
sub
pop
js
test
add
xor
dec
(bad)
cmp
sub
aaa
fcomp
mov
lea
lds
jl
sbb
dec
es
add
push
lahf
loop
xor
daa
pushf
iret
jnp
les
(bad)
leave
test
imul
rcl
mov
mov
add
add
sbb
push
(bad)
(bad)
push
rcr
and
mov
inc
ds
inc
aaa
xchg
xchg
retf
mov
cmp
sbb
add
aam
repnz
rol
je
cmc
inc
dec
and
jmp
mov
imul
sub
mov
mov
cmp
adc
sbb
inc
fs
xor
xor
push
add
sub
sbb
adc
(bad)
mov
inc
mov
and
clc
xchg
xchg
fbstp
neg
dec
or
hlt
push
dec
inc
cmp
jbe
es
add
add
inc
loopne
push
jmp
mov
popa
mov
sub
hlt
jbe
xor
rcr
cmps
add
xchg
dec
adc
and
jle
inc
mov
push
add
mov
outs
adc
hlt
call
jbe
(bad)
xor
xchg
nop
inc
scas
cli
fisttp
jge
push
imul
adc
sbb
or
stc
cs
(bad)
xor
fst
push
mov
sub
es
fidivr
mov
mov
jne
test
scas
mov
jnp
adc
add
gs
or
(bad)
in
sahf
mov
mov
cmp
jne
icebp
sbb
leave
pop
inc
cmps
les
ss
mov
repz
mov
fsubr
cmp
ins
fwait
lods
xor
push
call
dec
xor
push
and
imul
push
add
sub
jmp
adc
jmp
add
push
add
ret
and
mov
mov
cmp
add
(bad)
test
pop
inc
mov
adc
pusha
mov
(bad)
jmp
sbb
push
adc
mov
jmp
inc
add
ss
mov
movs
aaa
xchg
rcr
mov
jne
push
(bad)
daa
or
push
retf
loopne
leave
push
daa
scas
fs
retf
pop
sub
outs
adc
mov
xchg
cwde
sub
xchg
inc
ret
dec
repz
hlt
int3
add
xchg
mov
movs
mov
loop
cld
mov
sbb
test
jno
(bad)
imul
mov
repz
push
dec
inc
dec
add
movs
push
cmp
inc
xchg
push
(bad)
mov
add
mov
and
cmps
pop
ficom
shl
sbb
in
push
cmps
adc
push
dec
pop
add
adc
pushf
dec
ins
sbb
jp
push
test
aam
call
push
adc
bound
jp
mov
push
cmps
dec
pop
and
adc
jg
add
or
sbb
pop
ds
outs
cmp
jo
imul
retf
push
cmc
mov
jmp
sub
dec
adc
push
sbb
jl
je
clc
mov
add
pop
fadd
xchg
add
aaa
jo
mov
cmps
adc
xor
and
mov
pop
mov
dec
in
jg
ud2
lods
dec
fiadd
add
add
(bad)
mov
nop
aam
xor
(bad)
repnz
es
not
inc
adc
(bad)
xlat
mov
add
mov
mov
inc
dec
xchg
xchg
nop
jne
dec
push
sub
sbb
dec
fidivr
(bad)
push
mov
xchg
jle
push
push
pop
dec
retf
ins
mov
les
mov
rcr
sub
dec
or
xor
mov
ret
or
mov
and
cs
out
imul
mov
cmp
stos
jle
jmp
call
mov
les
ret
adc
lock
ret
in
in
jmp
hlt
jg
add
sar
ss
ret
dec
pop
(bad)
inc
shl
fs
adc
dec
out
xchg
mov
in
adc
lds
xor
out
mov
jecxz
or
sar
cmp
imul
inc
and
and
xor
inc
push
pop
fcom
pop
gs
push
xor
sbb
in
adc
ja
lock
fisttp
ret
or
or
inc
ins
ret
inc
jle
ror
jg
imul
xchg
(bad)
fsub
push
pop
into
rcl
pop
clc
add
sbb
cdq
dec
add
aaa
mov
nop
or
pop
retf
out
xchg
sbb
enter
adc
fs
rcl
mov
movups
jle
add
jle
fisubr
push
(bad)
or
pop
mov
and
push
popa
and
adc
adc
xor
dec
icebp
and
fisubr
popf
jmp
mov
cmp
sbb
retf
mov
lds
dec
shr
push
imul
add
inc
add
(bad)
wrmsr
pop
js
rol
daa
cld
sub
add
pop
or
mov
gs
xchg
int3
mov
(bad)
cs
adc
jge
xor
cli
inc
push
pop
push
mov
push
mov
xor
pushf
or
pop
adc
(bad)
mov
fisubr
xor
xchg
cs
or
or
pop
ret
sub
ror
push
aaa
push
fs
pop
sbb
pusha
push
sbb
sub
jne
jmp
or
loop
inc
bound
add
adc
jo
add
push
sbb
dec
dec
retf
test
push
xor
or
hlt
sub
sbb
push
lock
mov
jg
jnp
inc
push
inc
and
add
adc
dec
mov
(bad)
adc
mov
push
mov
jmp
push
xchg
js
push
add
inc
ret
push
and
pushf
pusha
fucomip
sbb
push
jl
push
int
xchg
ret
mov
nop
push
fcom
ins
push
pop
int
test
cmp
push
sub
aaa
xor
inc
push
inc
mov
(bad)
mov
xor
popf
test
pop
and
sbb
ret
pop
fs
inc
dec
ins
jmp
adc
fdiv
adc
mov
add
inc
mov
push
pop
data16
test
xor
ja
sbb
push
mov
cmps
or
sbb
sbb
sbb
lods
adc
aas
pop
adc
push
add
rcr
or
jmp
mov
daa
sbb
or
in
cmp
imul
das
push
aaa
fldenv
mov
daa
dec
jo
lods
or
jno
sbb
out
jne
sbb
and
add
and
dec
shl
inc
xchg
cmps
sub
or
sbb
or
imul
push
and
sbb
movlps
mov
hlt
or
sbb
daa
sbb
add
cwde
scas
adc
add
jg
sar
inc
add
cmp
and
xchg
add
stos
jno
xchg
add
mov
or
inc
(bad)
aas
and
cmp
jge
in
dec
jns
clc
jmp
adc
pop
push
xchg
jl
or
sbb
push
xchg
jge
sbb
jg
idiv
imul
and
sub
(bad)
loopne
sbb
push
inc
add
ret
nop
add
sbb
mov
adc
gs
(bad)
jne
scas
fdivrp
dec
push
add
inc
retf
mov
push
add
add
add
test
add
dec
adc
cmc
mov
fwait
test
sbb
and
mov
xor
inc
loopne
or
add
xor
or
adc
mov
lock
xchg
add
add
nop
in
ss
pop
and
int
clc
not
jle
push
inc
ficom
popf
fwait
inc
sub
jmp
retf
push
enter
push
sub
dec
dec
or
or
pop
adc
test
mov
inc
pop
test
jge
push
mov
cdq
call
xor
dec
pop
clc
mov
cmp
stc
xchg
push
mov
jmp
call
lods
jge
push
hlt
adc
push
arpl
or
add
adc
or
jle
ss
and
adc
xor
inc
(bad)
lahf
pop
rcl
pop
push
inc
cwde
jno
aad
imul
adc
xor
and
and
arpl
inc
(bad)
fld
inc
rol
rol
push
pop
(bad)
outs
call
outs
xor
in
mov
movs
xchg
je
add
in
rcr
ficomp
jmp
pop
inc
adc
sub
adc
push
jo
scas
es
mov
inc
lock
mov
clc
pusha
rol
dec
test
inc
inc
daa
cld
cmp
pop
cmp
xchg
dec
jo
int3
jns
jg
fistp
lock
rcl
pop
lock
sub
mov
push
and
cld
je
out
daa
sub
add
jb
cmps
inc
push
retf
imul
test
pop
mov
fmul
test
pusha
dec
push
imul
push
adc
cmp
jg
add
xor
push
adc
sub
adc
pop
enter
cs
pop
scas
sti
movs
mov
or
add
pop
jecxz
outs
add
loopne
cmp
push
mov
jbe
aam
in
es
outs
out
mov
inc
xor
into
push
fsubr
push
pop
jle
sub
push
inc
mov
ror
jns
inc
mov
xor
inc
lods
sub
daa
fmul
out
and
jo
jge
inc
sbb
lods
mov
and
shl
jns
imul
fcom
xor
or
mov
or
mov
movs
rol
add
in
fadd
dec
jmp
out
cmp
add
iret
add
mov
mul
xor
xor
lds
mov
shl
icebp
adc
inc
inc
cmc
(bad)
in
push
pop
adc
retf
mov
mov
and
out
imul
xchg
jge
or
adc
or
in
dec
in
(bad)
jl
xlat
sbb
or
enter
adc
(bad)
rcl
in
retf
dec
and
mov
aaa
stc
cmp
ss
adc
and
inc
push
push
cmps
mov
pop
cld
outs
xchg
aad
xor
outs
inc
mov
inc
push
pop
fs
out
add
or
or
out
jbe
xor
dec
xchg
dec
sbb
inc
mov
fs
cmps
sbb
mov
push
xor
push
sbb
sbb
les
imul
or
inc
xor
mov
or
pop
mov
adc
mov
fsubp
test
dec
push
aaa
add
jns
jo
and
add
add
or
adc
pop
mov
pusha
movs
bound
inc
jle
les
outs
push
test
xchg
fnstenv
das
retf
cmp
and
iret
inc
cwde
xchg
sbb
bound
loope
push
dec
mov
jne
mov
xor
push
cmps
std
add
sbb
sbb
bswap
and
test
cdq
and
fwait
inc
add
mov
and
cmp
jmp
adc
sbb
out
and
mov
add
into
hlt
je
sbb
nop
retf
icebp
pop
sbb
inc
sbb
dec
test
mov
mov
ins
or
js
xlat
pusha
inc
push
push
or
cmps
pusha
mov
pusha
(bad)
and
or
xor
sbb
jb
pop
or
in
hlt
or
inc
hlt
inc
inc
mov
jecxz
enter
icebp
add
add
clc
sar
jns
push
jmp
or
dec
dec
xor
sub
push
ss
jne
add
hlt
add
or
and
cmp
movs
jl
pop
push
push
adc
dec
imul
push
fdiv
pusha
loopne
or
aam
lea
mov
push
pop
push
outs
sbb
pop
test
or
sbb
add
or
sbb
out
cmp
mov
rcr
leave
fs
mov
dec
daa
sbb
cmp
push
push
mov
and
xchg
mov
pop
add
mov
dec
adc
jno
cdq
mov
mov
sbb
sbb
popf
ror
xchg
mov
xchg
or
enter
hlt
or
push
sbb
gs
adc
test
int3
test
jmp
add
sahf
and
mov
jnp
xchg
fstp
ins
fstp
jp
sub
rcl
push
push
sbb
mov
dec
arpl
sbb
enter
or
sahf
das
or
mov
mov
inc
or
and
sbb
test
jnp
push
xchg
sbb
int
cli
or
mov
or
adc
fwait
pusha
sub
push
dec
or
jle
outs
out
cdq
or
dec
xor
or
lods
and
jecxz
movs
or
jmp
mov
lea
inc
sbb
pop
sbb
or
sar
outs
sbb
ja
push
pop
and
inc
adc
adc
cs
xlat
leave
cdq
jg
fld
jle
mov
(bad)
mov
cmp
addr16
mov
lods
in
pop
fist
fld
xchg
mov
int
mov
lea
(bad)
sbb
gs
push
push
adc
retf
sbb
xor
inc
inc
or
and
dec
cmps
xor
daa
lea
push
mov
inc
imul
inc
push
sub
out
scas
and
addr16
inc
cs
sub
les
inc
dec
scas
mov
adc
add
dec
inc
adc
lods
pop
inc
push
aaa
aas
adc
out
inc
mov
pusha
mov
lods
jle
or
sub
xlat
adc
leave
push
and
cmp
retf
out
xor
dec
popa
fst
or
daa
add
adc
mov
daa
inc
in
(bad)
shl
xchg
cmc
inc
push
sub
and
xor
(bad)
inc
and
xlat
xchg
or
xchg
repnz
push
loopne
cld
aad
add
sahf
cmps
cmp
inc
lock
and
xchg
dec
daa
movs
mov
jbe
pmulhuw
xchg
push
test
stos
js
or
jo
movs
mov
(bad)
aas
adc
sub
fcom
mov
add
xor
dec
sub
hlt
cmp
sbb
dec
imul
or
cmp
pop
sbb
inc
or
(bad)
and
mov
lock
es
xchg
arpl
inc
call
jmp
mov
daa
mov
fist
popa
clc
js
pop
push
clc
stos
hlt
call
shl
daa
xor
sub
jns
or
sub
bnd
lea
jae
and
push
ds
xor
popa
mov
add
adc
(bad)
jne
pop
pop
add
das
adc
add
mov
adc
xchg
fcomip
fidiv
adc
(bad)
push
or
imul
jns
sbb
xor
cs
adc
or
pop
xchg
adc
pop
pusha
xchg
enter
push
cs
icebp
push
add
add
popa
and
inc
or
mov
push
je
push
stc
inc
pop
and
cs
push
fiadd
xchg
mov
sahf
pop
enter
mov
repz
cmp
cmp
adc
lds
push
push
sub
daa
push
jge
add
aad
and
and
or
dec
pop
xor
mov
minps
push
fwait
es
xchg
pop
shl
loopne
push
and
shr
dec
retf
jmp
jae
add
sbb
inc
rol
jge
or
inc
jns
fmul
test
mov
pusha
lock
xor
inc
sbb
push
jbe
add
jmp
addr16
xor
add
adc
aas
sub
enter
rcr
lods
cdq
xor
push
adc
mov
pusha
and
inc
sbb
(bad)
jle
lea
enter
lods
jmp
xor
pop
cld
je
test
xchg
mov
das
xor
sbb
xchg
inc
mov
adc
jle
xchg
cdq
and
ins
push
mov
fiadd
push
mov
and
test
push
mov
dec
jo
shl
aam
or
add
loop
or
add
add
clc
push
adc
mov
arpl
mov
push
enter
in
cmps
add
adc
dec
mov
or
fisub
out
ss
fisubr
daa
ss
ss
stos
adc
cmps
mov
push
and
sub
(bad)
sub
adc
and
cli
cmp
push
popa
dec
pop
lods
sbb
add
sub
lods
lock
jle
and
push
xor
adc
call
shl
and
jo
in
in
sbb
adc
pop
ret
mov
mov
jmp
outs
mov
inc
push
sar
add
push
sbb
bound
add
pop
adc
add
push
stc
pop
(bad)
sub
sbb
jge
jbe
ins
out
aaa
sub
xor
retf
(bad)
cdq
mov
in
cdq
retf
in
adc
inc
push
jnp
bound
pop
dec
das
test
dec
push
xchg
stos
loope
ins
push
jo
movs
add
dec
pop
xchg
dec
retf
sti
and
xor
push
pop
jmp
adc
test
inc
cmp
cld
push
push
ret
(bad)
fild
push
out
ja
mov
(bad)
or
dec
jg
adc
pop
adc
cmp
cmp
sti
mov
sbb
lods
test
xchg
xor
pop
ins
jno
sub
clc
xchg
mov
jno
add
xor
scas
and
add
adc
test
stos
cmp
or
jmp
popf
outs
in
inc
adc
add
add
adc
sbb
push
adc
dec
test
in
mov
stos
inc
xchg
lahf
sbb
xor
xor
adc
or
and
adc
inc
add
inc
cmp
mov
retf
jl
in
jo
pop
mov
ds
rol
push
pop
add
test
call
daa
sub
xor
push
xor
add
clc
cmp
sub
daa
cmps
fidiv
pushf
shl
ss
jg
lods
imul
inc
sbb
sbb
ret
(bad)
fdiv
mov
aad
loopne
jmp
mov
jle
push
inc
mov
fmul
cmps
pop
sbb
outs
cmp
cmp
movs
or
dec
inc
test
sub
add
sub
inc
add
inc
push
adc
mov
adc
push
pop
dec
sub
and
or
sub
pop
or
push
dec
scas
and
outs
pop
das
mov
sub
xchg
pop
xor
push
test
add
adc
pusha
push
aam
push
xor
aam
test
sub
xchg
ficom
add
(bad)
lods
cmp
jl
push
arpl
cmp
mov
mov
ss
mov
neg
sbb
jmp
shl
bound
popa
mov
aam
xchg
js
jge
fcom
out
stc
and
push
sbb
mov
inc
loopne
rcl
imul
js
add
lea
add
or
(bad)
clc
dec
les
pusha
aas
and
add
add
inc
jle
push
pop
xor
jg
jmp
xchg
xchg
or
add
scas
or
hlt
outs
mov
adc
(bad)
pusha
add
daa
int3
je
cmc
jb
movs
xor
test
mov
push
mov
mov
cld
pop
push
sti
jnp
adc
xlat
add
cmp
jae
outs
jne
lea
sbb
dec
adc
inc
xchg
mov
push
nop
les
mov
xor
dec
mov
pop
dec
or
das
sbb
pop
fadd
mov
mov
xor
push
pop
xor
call
or
ret
(bad)
push
push
loop
jo
add
dec
call
dec
ror
dec
push
adc
inc
in
(bad)
rol
fiadd
icebp
and
pop
and
add
in
pushf
fmul
(bad)
lea
mov
inc
adc
fadd
mov
popa
(bad)
pop
add
pop
add
jo
add
lds
pop
stc
test
jne
jg
lods
jl
adc
xchg
or
adc
fimul
inc
or
and
aaa
pop
nop
add
mov
and
jae
push
outs
bound
mov
mov
adc
ss
and
xchg
mov
sbb
cmp
inc
mov
sub
adc
shl
xor
jmp
adc
push
and
sbb
pop
and
cmp
lods
mov
pop
add
imul
mov
jmp
icebp
push
fist
pop
or
fild
in
and
push
popa
sbb
jnp
jle
push
jmp
adc
pusha
cs
sub
and
cmp
sbb
dec
imul
adc
cmp
xor
pusha
inc
sub
pop
add
int
xchg
inc
popf
adc
stc
sbb
xchg
es
push
(bad)
push
push
cmp
fmulp
inc
ror
in
mov
sub
test
mov
adc
pop
clc
sub
dec
in
fadd
stos
hlt
cdq
nop
xchg
or
mov
inc
sub
push
and
test
push
adc
jae
xchg
or
js
test
sbb
enter
add
pop
out
push
dec
dec
jmp
and
dec
dec
push
add
inc
add
ins
inc
ins
ret
add
dec
push
inc
gs
in
ins
aaa
mov
add
inc
jbe
xchg
je
imul
jne
test
or
mov
and
jo
pop
sbb
jno
das
popa
lea
out
fadd
outs
lahf
fild
dec
jae
pop
cmp
jno
jp
dec
jo
cmc
sbb
push
push
sahf
mov
and
div
scas
push
mov
add
ss
aas
inc
push
int
test
jb
cmp
and
inc
das
jmp
sti
jnp
xchg
aad
push
sub
push
mov
or
mov
cmp
repnz
or
test
and
xor
loopne
shl
daa
in
adc
loope
ret
mov
jmp
mov
je
fcomp
stos
or
pop
mov
icebp
pop
daa
mov
sub
ins
xchg
sub
pop
mov
sub
sbb
leave
jae
shl
cmp
or
in
jne
ret
loope
adc
nop
pop
movs
stos
ins
bound
push
test
movs
ds
mov
pop
mov
call
pop
js
loope
xchg
xchg
inc
cmp
enter
ror
(bad)
pop
add
and
cmp
mov
mov
test
xor
add
mov
ret
js
mov
cwde
jbe
sbb
(bad)
mov
jge
add
and
mov
sub
inc
imul
mov
arpl
fsub
pusha
or
cmps
inc
push
or
(bad)
lea
lock
retf
cmp
stos
xchg
lea
push
sub
mov
fcmovbe
push
jae
jae
pop
cmp
outs
inc
outs
pop
mov
or
jo
xlat
inc
mov
adc
pop
and
inc
cmp
and
dec
mov
or
es
movs
aas
sbb
sbb
iret
sub
pop
ins
call
sbb
cmp
adc
adc
jl
adc
mov
nop
sti
inc
mov
fst
xlat
fidiv
add
mov
sbb
cmp
nop
pop
nop
(bad)
xchg
inc
inc
xchg
inc
or
adc
sub
jns
(bad)
out
out
adc
cmp
pop
xchg
sahf
out
xchg
xor
push
iret
sbb
shl
call
mov
outs
out
sbb
sar
xchg
sbb
nop
jp
xchg
(bad)
or
adc
ror
dec
nop
jp
test
sahf
push
push
dec
pop
xchg
inc
jl
inc
aam
xor
cwde
fiadd
std
inc
sub
call
test
lock
or
sub
rol
push
retf
lods
aas
or
dec
lods
pop
sub
mov
mov
pushf
mov
pop
sar
in
ds
enter
mov
inc
loope
pop
(bad)
jo
nop
pop
pop
sub
outs
xchg
xlat
aaa
inc
xchg
cwde
push
fcomp
push
cmp
enter
mov
dec
add
add
out
(bad)
outs
jl
add
or
push
xor
or
push
mov
push
adc
cmovl
ffree
ds
je
cmps
inc
(bad)
dec
out
sahf
ja
pusha
push
je
pushf
mov
repz
(bad)
fsubr
add
repz
and
sub
cmp
repz
cmp
xchg
jmp
inc
or
xchg
and
je
loopne
lea
pop
add
fsub
push
xor
push
jp
mov
aaa
ins
cwde
out
inc
lock
test
pusha
jne
retf
sbb
(bad)
and
loopne
sub
test
scas
and
sub
mov
jle
cld
pop
mov
pop
mov
add
imul
or
lea
inc
adc
or
pop
and
(bad)
pop
sbb
ror
sbb
jb
fdiv
mov
(bad)
lods
movs
pusha
(bad)
movs
jnp
or
push
jo
repz
cs
mov
push
push
and
inc
mov
adc
call
mov
mov
add
xor
add
add
mov
sbb
add
inc
ds
add
jo
fiadd
and
sub
mov
(bad)
or
sub
adc
ja
sub
jmp
xor
or
data16
lock
and
mov
push
sbb
push
xor
add
aad
jne
js
test
leave
jo
jmp
nop
daa
ror
cmps
scas
jge
mov
sbb
xchg
mov
nop
jo
xchg
adc
inc
je
ds
aaa
cmp
jne
jle
lahf
mov
jle
fldl2t
and
fmul
arpl
inc
cdq
(bad)
movs
and
pop
mov
mov
loopne
lock
sub
xor
loope
rol
ins
adc
cwde
scas
mov
pop
or
sub
mov
adc
mov
adc
(bad)
xor
jb
mov
fsubr
stc
mov
mov
adc
mov
inc
data16
or
or
push
and
mov
sbb
sbb
inc
xor
cmp
add
sub
or
lock
dec
xchg
mov
mov
add
inc
fptan
(bad)
nop
mov
or
int3
mov
fsub
sbb
add
cmp
push
push
push
inc
push
loop
(bad)
daa
xchg
les
sub
add
jecxz
adc
pop
xchg
sbb
add
sbb
add
add
adc
aam
add
xchg
mov
add
inc
lahf
loop
dec
and
fs
js
(bad)
dec
push
imul
je
outs
adc
dec
adc
cmp
lea
test
jb
scas
mov
adc
jae
add
jnp
and
xlat
pop
inc
dec
or
xor
dec
dec
cmp
cmp
xchg
xchg
add
pop
pop
mov
push
adc
ds
cs
xor
push
jbe
adc
dec
mov
mov
sbb
cmps
scas
test
div
pop
push
daa
push
xor
push
out
push
pop
enter
pop
imul
jmp
sub
adc
leave
adc
pushf
jns
mov
scas
cdq
(bad)
jnp
jle
out
push
jnp
push
sbb
movs
inc
ins
add
xor
push
push
std
mov
repnz
ins
sbb
ja
test
jb
mov
neg
or
xlat
pop
clc
or
push
arpl
push
or
or
ltr
cdq
mov
sub
or
inc
mov
add
push
(bad)
(bad)
dec
stc
sar
ja
or
adc
aad
push
pop
lds
lock
js
aad
mov
inc
je
jb
(bad)
je
lea
inc
sbb
jge
inc
xor
inc
jb
push
add
(bad)
and
add
scas
mov
inc
mov
pop
inc
cs
jg
test
mov
cmp
cmp
je
xor
fidivr
in
adc
adc
or
js
or
mov
pop
pop
adc
sbb
cmp
out
add
push
and
sbb
les
push
xchg
pop
mov
add
daa
daa
inc
sbb
xchg
fwait
pop
pop
sti
jg
sbb
or
aad
fcom
repnz
outs
sbb
dec
stc
test
or
scas
add
aas
and
nop
inc
or
shl
or
adc
ds
mov
cs
adc
sbb
adc
xchg
add
sub
in
sub
sbb
cs
or
jmp
add
scas
pop
mov
aad
dec
enter
adc
fisubr
(bad)
mov
push
loopne
jmp
in
jbe
aaa
call
xor
add
push
mov
pop
mov
jle
and
test
ja
pop
(bad)
aam
mov
test
push
shr
int3
lods
inc
stos
dec
popf
(bad)
mov
or
sub
test
loopne
or
cwde
hlt
sub
adc
adc
add
test
jnp
pop
aaa
pop
xor
adc
adc
scas
dec
sub
lock
je
dec
xor
int3
mov
ret
out
adc
iret
push
sbb
fsub
mov
sbb
lea
adc
mov
xchg
sub
popa
arpl
inc
mov
out
inc
push
das
or
mov
dec
adc
add
imul
add
inc
or
rcl
xor
jl
cmp
sar
mov
xor
loope
scas
ficom
inc
add
sbb
inc
mov
sub
jne
dec
push
lods
lods
add
fcmovb
test
in
sbb
movs
pop
cmc
push
inc
xchg
into
cmp
shrd
pop
shl
sbb
movs
pop
daa
test
popa
or
add
lods
or
add
add
adc
adc
cmp
ret
cmp
icebp
das
adc
rol
sub
mov
jl
pop
std
pop
leave
pop
retf
movs
inc
icebp
cmp
lds
or
loope
pop
clc
sbb
sub
in
out
jp
or
sbb
push
sub
inc
mov
push
pop
xchg
or
adc
test
xchg
ins
mov
adc
push
addr16
popf
mov
out
sahf
jl
data16
das
inc
cmp
dec
dec
js
addr16
cmps
pop
or
or
test
push
adc
pop
adc
jb
mov
mov
cmp
xor
inc
icebp
mov
jae
push
add
xchg
inc
push
movlps
(bad)
in
pop
fstp
test
loope
cmp
inc
pop
and
inc
lahf
cwde
xchg
jmp
mov
enter
lock
sbb
rol
cmp
adc
pop
mov
nop
inc
sbb
mov
push
cmp
sub
popa
add
cmp
and
add
lock
cmp
mov
or
pop
and
pop
ins
cmovne
mov
mov
push
(bad)
jg
and
jle
sub
adc
(bad)
or
push
push
int
std
pop
enter
xchg
pop
js
cld
inc
mov
rcl
mov
pushf
loope
popa
xor
fadd
xor
mov
test
xor
fdiv
imul
mov
fimul
mov
cmp
fxch
sbb
xor
rcl
push
call
jnp
xor
push
push
and
xchg
push
aas
push
pop
push
popa
cmp
xor
shl
add
rol
sbb
xor
test
mov
push
pop
aaa
push
xchg
movs
add
pusha
inc
inc
add
jnp
fld
inc
adc
mov
push
adc
mov
jnp
enter
xor
add
cwde
rcl
ret
sbb
inc
pop
movs
sti
adc
adc
fcomp
xchg
popa
inc
mov
(bad)
cld
jo
pop
or
inc
or
test
call
dec
(bad)
push
add
dec
sub
or
addr16
adc
test
add
xchg
adc
dec
or
mov
push
(bad)
xor
push
adc
pop
in
fwait
inc
idiv
cmps
fmul
xchg
xchg
xor
stc
fisub
sub
imul
sti
lahf
stos
jg
sbb
int
test
lock
cmc
jl
fdivr
dec
adc
cmp
jne
int3
jmp
inc
add
in
jp
sbb
mov
in
ret
add
call
adc
mov
loope
mov
adc
cmps
lods
ret
cmp
call
leave
add
in
daa
lock
dec
mov
ret
pop
pop
sub
leave
(bad)
sti
fwait
cmp
aas
jne
movs
retf
test
(bad)
outs
pop
mov
or
ja
inc
mov
or
inc
push
inc
ret
xor
and
retf
push
cmp
movs
dec
jne
aaa
fist
call
movs
jno
and
je
mov
pushf
in
outs
arpl
gs
sub
pop
and
xor
mov
or
sbb
es
push
and
in
scas
fdecstp
and
push
cmp
and
(bad)
jl
pop
adc
and
ret
fpatan
scas
lea
je
or
sub
icebp
mov
pop
jne
fdiv
add
push
mov
and
jnp
cmp
inc
pusha
and
xchg
adc
test
push
push
jmp
mov
push
outs
and
mov
(bad)
xlat
es
fild
or
add
fwait
ins
push
xor
dec
inc
dec
dec
mov
jmp
popa
add
dec
add
ja
xchg
add
xchg
push
in
mov
add
imul
imul
clc
add
scas
(bad)
pop
xchg
clc
pop
sbb
je
bound
mov
mov
jmp
test
rcl
adc
cmp
sub
in
mov
psubd
pop
clc
ds
enter
rcl
inc
or
enter
inc
fdivp
adc
mov
add
push
add
sbb
add
mov
xchg
xchg
push
mov
cmp
inc
jle
add
xchg
or
add
(bad)
scas
shl
fisttp
jne
jp
or
pushf
mov
mov
mov
dec
mov
dec
adc
push
ins
or
xor
enter
push
and
sub
dec
mov
nop
outs
jb
in
dec
in
imul
in
mov
push
cli
mov
imul
sub
xor
loopne
adc
fmul
mov
sub
jae
mov
cs
mov
add
dec
inc
imul
(bad)
adc
jl
lahf
pop
fisub
push
rcr
lods
nop
inc
bound
es
dec
in
mov
ror
push
loopne
push
(bad)
dec
add
inc
loopne
aam
test
mov
cmp
push
or
mov
aaa
xchg
pop
xchg
and
shl
(bad)
sub
mov
mov
js
das
or
cli
mov
leave
lods
inc
add
stos
mov
test
popa
add
mov
pop
and
lock
imul
sub
pop
sub
out
adc
inc
call
xchg
test
inc
dec
cmp
test
mov
or
xchg
xchg
and
test
and
or
lock
mov
or
mov
ins
push
repnz
ins
mov
outs
xchg
mov
std
adc
pop
or
sbb
and
adc
mov
inc
or
(bad)
ss
mov
dec
clc
cmp
jne
ror
xchg
ins
add
rol
mov
scas
cld
ret
cmp
stos
cmps
cmp
mov
and
push
outs
and
clc
test
enter
mov
hlt
into
enter
repz
mov
push
inc
outs
dec
jbe
cld
mov
add
add
shr
jl
cmp
mov
xor
xchg
push
jne
ins
cdq
mov
adc
xchg
je
(bad)
pop
dec
or
nop
std
pop
lock
ret
push
stos
mov
add
dec
pop
cmp
mov
mov
leave
xor
pop
lahf
ins
dec
shl
add
enter
jno
and
mov
and
shr
add
cmps
pusha
and
ret
outs
jne
outs
push
and
and
jmp
(bad)
fcmovnu
mov
jbe
pop
or
or
popa
jb
add
mov
and
ins
jmp
out
add
push
shl
pop
add
push
bound
ins
fucomp
inc
(bad)
loopne
mov
retf
pusha
push
popa
enter
sbb
inc
dec
jmp
add
(bad)
jg
sbb
gs
push
mov
fst
inc
fs
arpl
add
inc
icebp
push
pop
(bad)
push
mov
sbb
add
cdq
push
aaa
aaa
int
fisubr
int3
fidivr
sbb
add
add
ins
cdq
ficom
and
enter
popa
fnstcw
or
mov
pop
fisubr
in
adc
mov
retf
es
fiadd
vmovdqu
inc
jl
int
outs
ror
or
inc
jnp
aaa
and
ds
push
push
call
iret
test
pop
push
mov
or
sub
jns
nop
mov
push
test
enter
out
les
add
pop
mov
pop
stos
add
out
jmp
mov
inc
cmp
inc
jge
enter
aad
add
cli
xor
enter
data16
or
ins
out
loopne
cwde
repz
sbb
ja
pop
add
ret
xor
pop
sti
mov
sbb
int
rcr
jp
push
in
repz
je
push
gs
lock
imul
push
xchg
add
movs
test
adc
test
test
add
or
push
ret
pop
cmp
xchg
add
retf
push
mov
inc
nop
dec
test
jae
cmp
add
mov
sahf
add
or
cs
mov
adc
loopne
inc
push
cmp
scas
dec
cwde
jo
inc
dec
add
mov
and
ror
out
sbb
std
adc
mov
cs
push
sti
shl
pop
or
or
loope
adc
xchg
cmp
cmp
push
mov
pop
xchg
out
(bad)
cmp
mov
jmp
addr16
js
or
cmps
or
jns
push
ins
pop
inc
ja
pop
loopne
push
cs
xor
call
hlt
mov
inc
add
xor
cmp
pop
or
repnz
add
movnti
jp
jl
jns
shl
jne
or
adc
dec
shl
fs
cli
out
adc
jae
fidivr
mov
mov
imul
adc
inc
adc
cwde
or
loopne
cwde
cwde
fild
repz
add
and
in
push
pop
mov
xor
or
jmp
mov
test
pop
addr16
pop
in
add
add
adc
in
imul
pusha
xor
cmp
out
pop
das
daa
fs
mov
sbb
or
loopne
add
pop
sbb
add
inc
xor
scas
push
(bad)
lods
out
add
pop
es
out
enter
jno
mov
aaa
pop
mov
test
add
ret
fwait
(bad)
cmps
enter
push
imul
pop
or
jns
add
pop
push
pop
or
mov
jo
add
pop
pop
in
imul
test
add
or
xor
adc
pop
dec
pop
or
add
cdq
dec
int3
mov
nop
outs
mov
into
mov
je
test
rcl
stc
clc
adc
or
popf
xchg
fistp
sub
mov
or
or
or
ret
dec
push
les
ins
xor
ret
jo
adc
or
push
inc
inc
sar
push
inc
mov
push
jb
arpl
push
xor
je
fnstenv
jnp
xor
jg
add
pop
(bad)
fcom
cmps
cmp
jae
add
sub
xlat
add
ins
popa
sbb
mov
adc
outs
sbb
mov
in
pop
and
push
sbb
int
inc
outs
inc
mov
add
mov
movs
push
mov
fcomp
mov
push
int3
(bad)
mov
push
nop
pop
pop
and
push
or
inc
pusha
ss
or
mov
sbb
push
and
cmp
and
cwde
and
and
cdq
popa
nop
and
mov
out
imul
jecxz
or
sbb
push
and
mov
push
cld
jo
or
repnz
jo
cld
xchg
xor
nop
aam
(bad)
push
mov
sbb
mov
and
loopne
inc
sti
movs
jno
mov
push
add
jl
cmp
inc
mov
push
add
out
and
xor
xor
dec
ret
xor
xor
inc
jo
dec
dec
jg
add
dec
dec
dec
dec
dec
dec
xor
push
push
push
pop
pop
ins
sub
push
mov
jecxz
rcr
xlat
mov
fiadd
sub
in
or
inc
sbb
pop
retf
rol
mov
inc
jmp
out
and
shr
call
mov
inc
std
scas
data16
adc
ret
inc
add
pop
mov
jns
jns
call
outs
jg
shl
call
pop
xchg
(bad)
push
push
xor
add
(bad)
aaa
add
movs
xchg
enter
stc
and
icebp
aas
inc
inc
(bad)
(bad)
clc
sub
clc
inc
jae
xor
or
je
push
icebp
cmps
pop
inc
adc
sti
or
or
mov
sbb
inc
call
or
sar
mov
dec
rcl
test
loopne
lods
lea
test
or
mov
ret
add
dec
jmp
sub
inc
sbb
push
stc
mov
xor
mov
or
imul
or
push
aaa
call
ret
loope
or
inc
mov
test
push
mov
sub
(bad)
out
dec
mov
retf
jmp
and
fidiv
pop
and
pop
nop
xchg
dec
adc
mov
adc
pop
xchg
adc
and
push
push
pop
popa
push
inc
mov
rol
or
sub
sar
iret
ficom
push
bswap
or
pop
popa
and
sti
jmp
mov
add
xchg
imul
sbb
or
add
sbb
gs
cmp
push
mov
jmp
leave
test
das
inc
jmp
popa
or
xchg
dec
or
mov
pop
mul
ror
das
push
mov
dec
fist
scas
add
inc
adc
adc
or
jmp
inc
mov
add
adc
and
mov
xor
mov
jae
fistp
cmp
(bad)
jle
neg
xchg
inc
shl
mov
das
int3
and
popf
fcomip
mov
and
lock
and
shl
cmps
sti
push
stos
cwde
sahf
aas
mov
and
pusha
fild
adc
xor
(bad)
jbe
mov
add
jmp
mov
arpl
cmp
jg
pop
and
arpl
adc
add
mov
arpl
fisttp
in
test
add
jae
hlt
dec
pop
and
out
pop
xor
stos
bound
inc
mov
lock
jmp
jp
xor
pop
lock
das
ds
loope
add
jne
jle
pop
mov
add
sub
ja
rcpps
push
out
(bad)
out
out
fnstsw
mov
jmp
cmp
je
in
jmp
aaa
add
pop
rcr
shl
or
jbe
cmp
fist
in
icebp
mov
lahf
jbe
(bad)
adc
pop
dec
mov
addr16
pop
pop
repnz
dec
loope
add
and
cmps
test
ins
aaa
dec
and
dec
or
adc
push
and
pop
rcl
mov
imul
je
jo
push
jb
push
cwde
cs
xchg
imul
addr16
and
(bad)
jge
add
push
inc
and
outs
mov
cmp
jo
in
fld
xor
aas
cmp
(bad)
gs
or
add
ret
addr16
or
pushw
(bad)
stos
sub
xchg
cmp
mov
xchg
or
test
daa
sub
loopne
mov
and
das
cmp
inc
repnz
lock
inc
pop
xor
pop
xor
mov
ds
aaa
cmp
pop
or
in
push
inc
aas
dec
mov
add
pusha
dec
mov
mov
mov
sar
or
mov
push
cmp
add
aas
adc
clc
lds
(bad)
mov
enter
mov
or
cmp
add
cwde
inc
sbb
add
out
pop
fwait
test
and
mov
(bad)
icebp
leave
dec
jg
cmp
adc
or
js
fadd
loopne
bound
push
lahf
push
js
rcr
xor
mov
push
cmp
adc
jmp
dec
pop
jmp
pop
(bad)
les
pop
or
push
aaa
loope
aam
xchg
mov
je
mov
ins
lock
pop
imul
inc
mov
inc
fsubrp
dec
mov
lock
jae
enter
in
sbb
xor
jnp
mov
jne
mov
mov
es
xchg
inc
jae
pusha
stos
les
add
xor
xor
adc
inc
retf
into
aas
loope
imul
mov
jle
and
fld
adc
mov
mov
dec
fild
xor
mov
jo
adc
fld
or
mov
jmp
mov
or
mov
ins
sbb
je
sbb
jbe
jo
mov
cmp
push
adc
dec
mov
popa
les
mov
xchg
loop
push
adc
xchg
and
sbb
mov
sub
add
es
les
lock
sahf
or
idiv
adc
mov
push
and
dec
adc
aad
call
push
or
push
fild
or
xor
mov
dec
movs
jo
outs
or
fcom
xor
nop
push
add
and
pusha
cwde
add
dec
sbb
mov
pop
jo
ret
xor
adc
in
in
mov
les
or
mov
fcom
push
cmp
mov
inc
cmp
outs
mov
inc
inc
ret
add
push
jb
pop
loop
mov
adc
test
and
xor
dec
inc
test
daa
lock
add
mov
sbb
mov
add
(bad)
xor
push
inc
call
gs
adc
adc
push
test
mov
and
jnp
call
mov
add
lock
xchg
ins
out
pop
loopne
movs
cwde
and
sti
cwde
push
and
pop
add
push
push
in
dec
inc
cmp
add
adc
mov
cmp
xor
stos
push
mov
dec
cmp
jo
or
iret
inc
cmp
sbb
sbb
xchg
or
adc
add
pop
fdivr
push
icebp
test
and
and
mov
es
pop
jecxz
pop
nop
lea
or
inc
or
sbb
fsub
sahf
xor
and
pop
cmp
or
cmp
dec
mov
adc
or
or
icebp
inc
mov
push
push
icebp
ds
call
pop
and
add
mov
daa
dec
lea
xchg
in
push
in
and
cmp
fst
clc
fsubr
or
fstp
loope
mov
lea
outs
jecxz
or
adc
xor
push
and
push
ror
or
or
push
test
je
(bad)
adc
inc
inc
sti
es
xchg
xor
mov
aas
ja
pop
mov
add
cmc
jne
and
mov
iret
and
add
test
test
push
mov
push
adc
fwait
cld
mov
leave
ret
xor
jle
out
and
dec
ins
jbe
scas
or
inc
cmp
or
dec
xchg
test
mov
iret
fst
sbb
or
mov
adc
sbb
(bad)
push
call
mov
mov
push
mov
add
ret
sbb
or
adc
retf
jecxz
xchg
nop
popa
rol
dec
and
adc
inc
or
icebp
add
xchg
inc
dec
js
adc
nop
xchg
mov
ins
bound
mov
jecxz
fild
ins
or
dec
mov
inc
pusha
mov
push
(bad)
fcomp
sbb
pop
nop
imul
pop
xor
and
or
or
rcl
adc
push
dec
(bad)
cld
mov
cmp
inc
iret
xchg
dec
push
fld
sub
cmps
jo
push
jo
mov
gs
iret
xchg
pop
xor
pop
inc
mov
in
enter
push
test
jo
test
movaps
jne
jge
push
cld
xor
out
sar
cmp
inc
cdq
pop
inc
adc
inc
pop
ss
and
(bad)
mov
push
xor
out
or
mov
push
jo
push
ret
add
lea
lods
call
dec
xor
mov
ret
retf
fild
cmp
and
add
sub
add
test
mov
add
and
sub
xor
jmp
push
pop
pusha
dec
push
add
sbb
cld
jno
rol
out
xchg
xchg
sub
xor
mov
add
sbb
inc
cmp
mov
cmp
bound
adc
jmp
sbb
mov
cmovnp
mov
lock
inc
jb
cwde
add
dec
arpl
test
cmp
out
arpl
cmp
data16
arpl
enter
xchg
pop
adc
fnstenv
ins
inc
mov
(bad)
push
add
jl
mov
push
cmps
inc
adc
sbb
rcl
push
and
or
(bad)
push
inc
clc
jno
sub
sub
push
enter
sub
pop
lock
inc
cmp
push
rol
pop
cmps
xor
pop
outs
or
test
mov
and
lea
mov
popa
adc
cmc
sub
inc
nop
bound
rcl
mov
das
sbb
fisub
xor
ins
les
iret
push
lea
pop
into
hlt
mov
das
rol
and
adc
cmps
mov
stos
cmc
imul
clc
or
aad
sbb
jne
xchg
fdiv
adc
push
inc
xor
mov
aas
leave
lock
rcl
push
lock
dec
add
inc
push
jns
add
(bad)
pop
fistp
ror
mov
xchg
dec
lock
push
sbb
or
aad
loopne
mov
and
aad
jae
jge
fs
fcom
aaa
fistp
ret
push
mov
and
lahf
sbb
add
jne
mov
mov
xor
jne
loope
fcomp
imul
cmp
jl
or
push
rcl
cmp
pushf
add
and
add
or
nop
fs
dec
loopne
and
adc
bound
push
test
xlat
pusha
ficomp
daa
xchg
pushf
or
movs
add
cmp
mov
mov
sub
in
cwde
add
ret
or
ret
sub
imul
or
movaps
push
or
jp
test
cmp
test
cmp
mov
pusha
bound
or
call
fsub
lds
dec
pusha
inc
mul
xchg
call
cmp
in
bound
stos
dec
mov
adc
(bad)
les
dec
test
daa
nop
clc
shr
and
dec
stos
call
adc
clc
leave
push
and
sbb
or
sub
or
push
addr16
lock
add
fdivr
push
inc
repnz
out
lods
xchg
mov
cmps
ins
sbb
cmp
popa
add
outs
or
sbb
mov
push
inc
outs
movs
repnz
call
test
outs
(bad)
in
les
mov
push
cdq
or
pop
push
add
loopne
mov
and
cmp
pop
cmp
mov
and
lods
inc
push
mov
jle
ins
pushf
xchg
cwde
loopne
repnz
sbb
and
shl
pop
or
adc
loopne
mov
pop
and
push
or
and
dec
je
pop
daa
pusha
sbb
pop
push
sbb
and
lods
imul
call
rol
add
and
fsubr
push
shr
jae
je
sbb
jns
dec
sub
(bad)
cmps
inc
push
sbb
xor
mov
sbb
and
rcl
call
jl
test
(bad)
cmp
jmp
push
or
pop
sbb
cmp
sbb
dec
jno
pop
sbb
jns
push
sub
xchg
div
or
scas
push
add
leave
pop
xor
daa
leave
dec
lock
and
jl
mov
ficomp
add
adc
js
lods
adc
mov
loope
loope
popf
sub
cwde
cld
(bad)
jmp
sbb
sub
sbb
jmp
outs
push
ja
or
in
in
test
jmp
dec
test
idiv
sbb
das
repz
push
or
stc
bound
scas
ds
fimul
mov
adc
inc
cmp
mov
push
or
inc
pop
pusha
leave
xchg
inc
cmp
ja
sbb
adc
push
mov
mov
das
mov
ret
int
inc
push
and
cdq
(bad)
mov
pop
pop
rol
jp
shr
imul
pop
inc
add
aam
jle
retf
lds
push
movs
add
push
lock
mov
xor
dec
les
inc
or
lock
fwait
adc
ret
dec
js
sub
dec
fistp
call
inc
mov
adc
adc
sub
inc
leave
out
push
leave
fs
pop
adc
aas
cmp
xor
adc
mov
push
xchg
daa
ret
std
cmp
je
mov
imul
js
and
ret
inc
clc
dec
lods
js
rol
rol
popf
movs
push
out
cmp
in
lea
je
or
sahf
xchg
lods
ss
out
adc
in
hlt
cmps
xchg
mov
das
nop
stos
add
sub
sti
mov
fsubr
out
aas
je
(bad)
xor
fisttp
and
mov
push
aam
adc
ja
sbb
in
inc
mov
test
or
aaa
xor
(bad)
xor
pushf
push
cmp
xor
outs
test
mov
ret
outs
(bad)
adc
ds
inc
push
cs
add
inc
inc
push
or
(bad)
pop
lods
mov
mov
popa
fs
lea
inc
repz
(bad)
sbb
cmp
jnp
inc
loope
psubd
and
ret
sbb
jecxz
inc
iret
ficomp
xlat
mov
sbb
adc
jmp
out
jg
xor
pop
cwde
pop
call
dec
call
retf
pop
add
and
lods
sub
cmp
pop
mov
aad
mov
mov
and
jo
arpl
call
lds
fidiv
xchg
push
js
adc
xchg
add
xor
and
lock
inc
pop
cmps
mov
loope
aas
jbe
and
pop
fndisi(8087
mov
or
popa
inc
daa
or
push
les
mov
xchg
cdq
and
stos
pop
push
popa
dec
and
adc
adc
jo
fistp
jnp
push
scas
cmp
xor
xchg
and
rcl
or
ror
jmp
sub
push
or
lahf
gs
or
lahf
xor
(bad)
lods
jae
fistp
or
outs
adc
xor
je
cmp
mov
das
sub
cmp
mov
add
jmp
enter
mov
inc
and
arpl
loopne
cmc
sahf
adc
sar
arpl
in
or
sar
dec
retf
pop
and
ds
adc
and
and
push
xor
pop
scas
je
inc
ja
push
xor
inc
sub
inc
dec
test
xor
or
fstp
xchg
push
cwde
jg
fsubr
xchg
mov
adc
push
adc
jecxz
inc
or
(bad)
and
and
sbb
add
add
push
dec
inc
mov
jns
popa
out
das
inc
dec
or
pop
xlat
xchg
jnp
bound
inc
sahf
or
jnp
inc
inc
inc
mov
stc
inc
scas
mov
xor
fisubr
nop
rol
addr16
pop
mov
test
sub
mov
mov
or
jo
pminsw
xlat
aad
stc
pop
inc
aaa
in
aaa
enter
sub
pop
cmp
cwde
jmp
sbb
bound
cmp
fucomip
add
je
mov
cmp
jnp
popa
adc
cwde
sub
shl
jae
mov
push
xchg
mov
adc
push
mov
mov
daa
cli
xchg
pop
addr16
movs
imul
movs
cmp
and
mov
push
fcom
jb
inc
pop
xor
int
test
fs
jg
inc
call
xchg
add
adc
sub
jle
or
pop
push
cmp
xchg
xchg
add
pusha
mov
mov
es
add
mov
dec
jg
jne
cmp
cs
mov
xchg
ss
inc
and
ins
and
pop
leave
sub
xor
inc
jb
cmp
nop
pop
and
inc
or
je
sbb
add
test
(bad)
std
push
imul
sbb
inc
outs
int
lds
pop
mov
mov
jg
shr
xor
xor
push
movs
or
mov
fisttp
mov
push
push
ret
ja
enter
jl
jl
sbb
js
pop
jmp
icebp
icebp
fiadd
pop
cmp
add
bound
into
nop
cmp
and
dec
sbb
and
jmp
inc
or
inc
push
push
lock
pop
sbb
loope
or
fsub
add
sar
dec
xchg
adc
cmovp
rcr
xor
int
xor
sub
in
daa
inc
push
sbb
pop
vmovntps
inc
rol
call
stos
test
pop
or
add
fsubr
dec
aam
loope
and
inc
cld
push
cmp
mov
and
fst
jae
add
nop
mov
movs
ins
dec
loope
xor
mov
sbb
adc
in
hlt
mov
jbe
imul
sub
mov
mov
push
shl
xchg
mov
std
dec
mov
aaa
push
dec
adc
jns
add
call
retf
inc
les
scas
std
add
add
sub
es
inc
sub
and
fisttp
imul
sbb
xchg
fwait
pop
loopne
les
xchg
hlt
sbb
or
mov
mov
sbb
pop
imul
inc
or
sbb
or
clc
mov
sub
int3
shr
mov
rcr
and
imul
test
pop
mov
jl
pop
push
and
cmp
popa
and
pop
dec
xor
aam
fs
sbb
in
ins
fdiv
xlat
je
push
sbb
shl
mov
cmp
push
out
mov
mov
xlat
fiadd
adc
int3
jne
cdq
out
push
cmp
dec
shl
pop
cmp
lods
cli
nop
mov
in
lahf
dec
adc
pop
cdq
inc
push
xchg
xor
ret
int
xor
sub
pop
(bad)
lock
mov
xor
adc
inc
jmp
fwait
out
xor
(bad)
loope
adc
dec
or
cld
cmps
fstp
test
sbb
nop
mov
lds
adc
jns
in
xor
mov
jnp
cmp
dec
jmp
inc
(bad)
or
ror
pop
inc
inc
pop
pushf
xchg
cmp
lods
cs
jle
in
add
mov
dec
pop
sub
mov
rcl
aam
push
sbb
jge
rcr
push
jo
sar
xor
std
mov
dec
movs
(bad)
jl
data16
pop
movs
add
xchg
sbb
sti
arpl
retf
jne
mov
sub
push
arpl
lods
pop
xchg
sbb
in
push
mov
or
sub
and
xchg
in
jecxz
inc
pop
ror
mov
call
lods
ror
repnz
arpl
aaa
xchg
out
imul
cmp
fcomp
jg
xor
adc
fisubr
jge
loopne
outs
cmp
inc
push
jne
nop
cmp
add
pushf
mov
movs
rol
movs
add
dec
loop
inc
inc
sub
dec
adc
push
ins
int
test
push
jp
mov
sub
jl
inc
pusha
in
pop
iret
sub
repnz
push
cmp
jp
mov
jo
inc
inc
ret
cs
inc
sbb
push
cmp
xchg
std
mov
inc
xchg
test
daa
add
pop
jne
dec
fst
loope
in
fsub
fmul
aaa
dec
jle
inc
xor
adc
int3
add
add
xchg
cmp
adc
jmp
dec
lock
add
gs
sub
test
ins
add
adc
push
or
dec
mov
les
clc
dec
and
sub
cwde
lea
jmp
cdq
sub
inc
xor
ins
xor
push
pusha
jl
cmp
cmps
add
mov
enter
or
push
xor
(bad)
inc
sti
adc
jcxz
test
stos
inc
xor
mov
jns
xchg
and
sub
inc
stc
and
loope
push
add
ficom
inc
mov
mov
xchg
push
test
jp
pop
add
mov
shl
call
retf
sub
les
stc
add
pusha
xchg
hlt
xchg
out
xor
or
cwde
and
inc
mov
retf
enter
fdivr
fisttp
add
ror
dec
call
cmp
lods
jmp
jmp
add
push
jo
add
aaa
pop
push
cmps
or
call
clc
jmp
adc
mov
div
fnstcw
js
in
mov
xchg
sbb
out
sbb
lods
pop
sahf
xchg
daa
je
ins
xchg
add
mov
cdq
mov
jl
inc
mov
inc
or
int3
imul
es
les
dec
add
cmc
dec
js
mov
into
aas
rcr
les
cli
inc
cli
add
cmp
cli
adc
div
mov
(bad)
or
arpl
adc
sbb
mov
cmps
pusha
inc
and
add
arpl
or
dec
and
adc
push
inc
or
jmp
mov
inc
xchg
xchg
sbb
popf
hlt
inc
or
push
jmp
jo
push
sar
loope
es
ins
rcl
pop
pushf
pushf
mov
movs
mov
or
add
push
push
xor
sub
xchg
and
sete
push
push
in
pop
aaa
xor
inc
and
ret
or
popa
test
cmps
push
retf
xor
or
popa
and
sti
mov
fs
adc
or
outs
mov
std
pop
mul
dec
popa
jns
jne
jae
ja
and
jmp
add
fs
push
(bad)
push
gs
jb
jo
push
add
shr
ss
mov
and
jp
cmp
cmps
cmp
sar
or
sbb
jo
call
repnz
aam
lock
test
push
popf
lods
mov
add
push
and
fnstenv
inc
or
je
sbb
mov
dec
and
test
dec
inc
add
lahf
repnz
inc
inc
jo
ja
and
stos
nop
cwde
ss
fwait
cli
dec
pop
adc
xor
sub
lds
movs
shr
xchg
adc
dec
int
pop
popa
ins
jge
cli
(bad)
mov
adc
push
cli
inc
mov
sbb
imul
sbb
adc
cmp
cli
popa
rol
add
xor
fwait
test
cmp
popa
cs
jp
into
sub
shl
inc
mov
and
dec
sbb
adc
cmp
les
pop
adc
movs
loope
fld
nop
and
bound
enter
mov
(bad)
rol
sub
popa
stc
add
js
push
hlt
call
xor
pop
sbb
fsub
fnstcw
or
mov
push
cli
bound
add
(bad)
and
shr
dec
push
dec
push
jl
test
sbb
push
inc
lds
jmp
je
pop
sub
arpl
push
or
popa
call
xchg
test
xor
out
sub
and
and
sub
add
xchg
stos
mov
loopne
leave
xchg
add
xor
push
sub
lods
or
pop
inc
and
scas
ja
sub
(bad)
fbld
cli
add
rol
ret
xor
inc
ret
ret
lahf
les
mov
ret
mov
fcomp
add
jno
pop
cmp
sbb
jg
lea
outs
cmp
imul
imul
sbb
repnz
retf
clc
xor
ret
into
dec
or
dec
rol
cmp
(bad)
mov
xor
scas
add
add
and
xchg
xchg
retf
imul
sbb
add
mov
movs
sub
inc
cmp
or
(bad)
jb
xchg
mov
mov
or
rol
inc
loopne
std
icebp
nop
ins
sub
push
sbb
sbb
pop
pop
adc
mov
or
lea
cmp
pushf
mov
sar
add
and
pop
sub
jl
das
add
les
arpl
movs
xor
push
adc
mov
aas
and
dec
test
and
loopne
jb
inc
fist
sbb
sbb
test
mov
inc
xor
out
or
mov
(bad)
test
jl
arpl
mov
jg
add
sbb
push
or
pop
pop
sahf
aaa
test
inc
fnstsw
out
pop
adc
mov
mov
add
mov
inc
pusha
cmp
adc
cmp
addr16
les
dec
inc
dec
repnz
inc
cs
dec
cmc
les
sbb
test
push
ror
dec
nop
mov
pop
scas
xor
xor
into
xchg
test
movs
dec
sbb
push
ror
add
xor
in
mov
loop
cmp
leave
inc
sub
adc
push
push
dec
or
push
sub
add
push
pop
in
add
cmp
inc
imul
push
arpl
in
fsubr
sub
sbb
jmp
movs
pop
cmp
mov
adc
mov
and
test
aaa
adc
in
pop
dec
inc
xor
xchg
push
and
icebp
icebp
xchg
mov
inc
retf
shl
inc
adc
lods
dec
in
pop
xlat
xchg
xchg
xchg
cdq
jnp
lock
cmp
push
jns
clc
sub
inc
lahf
sub
ja
inc
or
js
ja
push
and
push
dec
inc
call
xlat
out
repz
cs
xor
pop
(bad)
lock
push
adc
je
or
pop
xor
ficomp
sbb
jl
adc
out
jne
call
adc
je
add
or
pop
lock
jb
and
test
popa
and
xor
scas
xchg
test
jle
pop
xchg
add
xor
mov
sbb
adc
mov
in
aaa
in
sbb
dec
idiv
je
xchg
sbb
ss
inc
mov
clc
add
xor
xor
cld
mov
push
add
adc
mov
add
lock
stos
movs
(bad)
call
xor
movs
inc
int
sub
out
dec
js
or
adc
cld
pushf
xlat
inc
inc
add
jns
lahf
inc
adc
ret
test
loopne
aam
mov
fdiv
dec
daa
xchg
iret
push
sbb
add
add
scas
dec
mov
cmp
or
push
call
mov
fs
inc
cmp
inc
pop
xchg
mov
sbb
push
cmp
sub
adc
mov
mov
(bad)
mov
movs
adc
inc
cmp
mov
sbb
sbb
mov
push
mov
pop
rcl
jne
mov
mov
nop
ss
cmp
jne
xor
aaa
lock
cmp
jns
push
ret
ja
ins
add
mov
push
jl
and
repnz
idiv
add
das
jmp
outs
mov
jbe
adc
push
cmp
es
mov
sub
adc
xchg
add
addr16
sti
aad
or
sub
sub
je
inc
pop
add
add
ins
das
sub
xchg
add
mov
imul
not
or
loope
push
cdq
or
xor
ds
xor
jp
inc
push
pushf
add
les
jl
jl
add
pop
mov
out
push
adc
mov
sbb
sub
and
xor
jecxz
(bad)
jmp
pop
mov
add
jbe
loopne
dec
fdiv
cli
and
sub
sub
lea
xchg
add
arpl
loopne
inc
or
sub
dec
xchg
and
and
sub
lea
pop
inc
or
jge
dec
or
push
clc
ds
test
push
add
mov
sbb
mov
pop
test
push
mov
mov
lock
and
xchg
mov
add
call
fmul
dec
pushf
sub
ret
cmp
xchg
in
stc
inc
sbb
inc
sbb
call
les
in
fdiv
dec
ins
sub
xor
mov
enter
jmp
sbb
sub
add
pushf
movs
mov
pop
mov
enter
pop
fdivrp
sbb
add
in
adc
in
je
fmul
jecxz
sub
in
mov
or
mov
in
or
xor
inc
or
aam
arpl
mov
xchg
cmp
cmp
sbb
cmp
and
loope
loope
fsub
je
push
sbb
mov
(bad)
push
dec
mov
imul
dec
inc
rol
jmp
inc
lods
push
add
push
pop
jge
push
nop
sbb
mov
imul
xor
push
inc
or
sbb
inc
movs
nop
dec
dec
shr
shl
add
push
push
sahf
and
fst
fild
push
or
jecxz
mov
fs
(bad)
fst
aas
hlt
jl
inc
pop
push
inc
pop
jmp
mov
jmp
dec
jmp
add
xor
or
xlat
xchg
add
cmc
fbld
xchg
sub
add
lock
mov
or
add
inc
push
lahf
xor
inc
and
ret
xor
pop
cmp
pusha
dec
mov
adc
jmp
jg
xor
retf
(bad)
cmp
shl
movs
cwde
sub
xor
mov
and
pop
cli
es
push
inc
add
ret
and
push
add
sub
js
xchg
and
or
fcomip
fs
xor
(bad)
adc
dec
mov
(bad)
and
pushf
dec
add
pushf
loope
pop
mov
push
test
mov
xor
shl
or
loopne
(bad)
mov
jge
movs
adc
dec
mov
jmp
and
popa
in
loopne
pop
inc
outs
xor
inc
addr16
inc
call
push
(bad)
ret
(bad)
loopne
rcr
jmp
ret
dec
rcr
fnsave
in
push
mov
stos
add
test
xor
or
rcr
push
into
sbb
sbb
nop
push
test
sti
mov
sbb
inc
xor
push
je
add
fadd
pop
xchg
dec
sub
daa
jge
lea
jmp
or
and
inc
dec
xor
imul
pop
cmp
sahf
cmp
adc
jmp
sti
es
add
cmps
adc
push
lock
(bad)
mov
cmp
mov
adc
mov
jne
stos
mov
pop
sub
sbb
cs
(bad)
neg
inc
jg
xchg
stos
inc
scas
lock
mov
push
push
call
mov
aas
adc
xor
movs
and
sbb
test
(bad)
retf
or
sbb
fmul
les
xchg
scas
fcom
cmp
inc
bound
ret
push
sub
pop
adc
ja
daa
cmp
sbb
adc
lahf
adc
faddp
add
push
cmp
cmp
jnp
push
add
add
out
xchg
cld
lea
lea
shl
cld
lock
xchg
in
iret
jnp
out
xchg
call
loopne
sahf
sar
xchg
fmul
pop
iret
repz
out
(bad)
shr
adc
cmp
inc
and
pusha
xor
jne
sbb
enter
pop
adc
ins
shr
xchg
add
xor
push
adc
scas
out
repnz
mov
mov
and
fadd
lds
xor
xor
test
jo
or
cmp
mov
inc
xor
mov
paddusb
ds
lock
arpl
out
cwde
add
jp
sbb
mov
hlt
cmp
push
add
jne
ss
adc
je
mov
lea
push
jae
and
sbb
jae
test
nop
dec
add
enter
adc
(bad)
mov
xor
add
add
and
add
aam
add
mov
push
cmp
fimul
adc
fdivr
or
pop
pop
ds
shl
or
or
invlpg
rcr
add
cmp
sbb
lar
xor
xor
sbb
inc
add
or
sbb
pop
sub
dec
dec
shr
pop
or
fsub
aaa
lahf
adc
dec
iret
rcl
xchg
jae
pop
or
and
xor
push
push
push
pop
xchg
les
or
inc
fidiv
cmp
ins
or
inc
sahf
pop
imul
ins
bound
push
ds
or
arpl
sub
(bad)
mov
mov
or
nop
and
dec
loopne
les
outs
mov
cmp
imul
(bad)
adc
in
dec
inc
imul
in
pop
popa
js
pop
and
pop
inc
es
push
es
xor
aad
add
push
add
aas
lock
inc
scas
cld
inc
test
inc
add
push
inc
movs
push
inc
mov
and
push
inc
adc
mov
adc
les
add
pop
inc
pop
ins
fisttp
(bad)
cld
and
pop
push
adc
cmc
(bad)
lods
aam
xor
adc
jo
push
mov
cmp
scas
pop
xor
mov
sysexit
in
jl
inc
int
mov
inc
adc
je
ror
in
xor
inc
sahf
or
or
mov
pop
ret
aas
movs
or
push
lods
push
inc
add
scas
mov
sbb
dec
pop
jae
dec
and
push
push
in
add
daa
push
adc
or
add
cmp
push
adc
push
bound
or
(bad)
sti
pusha
dec
or
cld
pop
xor
bound
dec
sub
adc
xchg
or
outs
xchg
jl
prefetch
or
dec
imul
add
sub
dec
add
jmp
das
mov
pop
or
jo
xlat
(bad)
mov
or
into
sub
xchg
jl
mov
loope
int
pop
add
loopne
adc
xchg
cmp
int
leave
movs
adc
jne
inc
sub
xchg
sub
or
or
repnz
or
add
fs
adc
adc
mov
push
rcr
neg
push
xchg
arpl
mov
jge
and
outs
jne
sbb
adc
aaa
add
loop
lods
sahf
push
or
add
nop
(bad)
iret
adc
lahf
addr16
retf
pop
ror
outs
mov
pop
adc
adc
data16
adc
dec
and
push
out
add
mov
lea
shr
pop
or
int3
loopne
xor
add
pusha
sub
ret
mov
sbb
pop
cmp
fs
mov
push
jb
ins
and
xor
popa
jb
or
fdiv
sbb
cmps
mov
scas
stc
pop
je
push
outs
push
sub
mov
bnd
add
mov
inc
or
pop
ds
or
fcomp
(bad)
sahf
out
sub
xchg
cmp
popa
or
imul
test
iret
inc
sub
add
xchg
gs
mov
push
rcr
push
jns
test
xchg
mov
pop
jns
outs
outs
add
xor
dec
fild
fld
int3
xchg
out
inc
loope
push
adc
dec
jae
push
push
push
dec
fdivr
add
inc
idiv
sub
frstor
xchg
sbb
test
sar
push
arpl
and
pop
push
pop
xchg
mov
sbb
fs
add
fs
sbb
retf
jo
or
sbb
or
js
mov
dec
jb
enter
inc
(bad)
call
adc
(bad)
and
enter
test
repnz
push
add
fs
and
sub
push
push
bound
lock
push
pop
imul
pop
(bad)
push
push
nop
psubb
in
push
sbb
aaa
and
xchg
les
(bad)
cwde
imul
xchg
add
push
pop
mov
push
test
mov
inc
ins
mov
cmp
cmps
inc
or
push
in
pop
push
fstp
add
movs
nop
mov
in
add
add
jns
bound
daa
bound
lods
jl
lock
inc
sbb
add
add
add
adc
pop
add
add
jle
and
test
add
add
bound
popf
fcom
add
sbb
ins
add
add
mov
mov
je
inc
xor
and
or
push
mov
inc
inc
cmc
fld
sbb
xor
add
fwait
push
or
mov
mov
rol
fistp
jmp
jbe
jmp
inc
add
test
sub
in
repz
fiadd
xor
push
aam
jl
push
mov
mov
cmp
pop
xchg
rcl
call
mov
inc
cwde
fdiv
pusha
sub
fldcw
push
pushf
fwait
movs
stos
cmp
popf
push
jo
fwait
out
sahf
lods
lods
mov
fs
cmp
dec
repz
les
mov
or
sub
jnp
ja
sahf
(bad)
and
mov
jnp
push
pop
je
movs
fidiv
(bad)
lea
dec
data16
imul
mov
in
sub
imul
sti
push
mov
push
inc
inc
scas
push
hlt
shr
test
mov
dec
add
push
(bad)
(bad)
pop
and
out
adc
lds
jmp
les
pusha
mov
loop
cld
pop
or
inc
add
mov
push
das
cmp
pusha
xor
push
xor
sub
push
addr16
xor
mov
pushf
push
pop
arpl
cmp
leave
cmp
add
pop
rol
pop
or
jle
xchg
fs
cmp
test
cs
or
clc
pop
pop
ret
stos
rcl
icebp
cs
mov
jns
clc
push
pop
or
jo
popa
inc
ins
enter
and
mov
add
mov
mov
int3
popa
imul
test
je
dec
loopne
pop
sub
sub
push
test
xlat
adc
loopne
aad
pop
loop
pop
push
dec
(bad)
push
aaa
add
sahf
mov
fdivr
pop
inc
je
sub
jp
fstp
test
pop
cmps
inc
and
inc
les
jp
arpl
add
dec
sahf
dec
add
(bad)
mov
je
mov
inc
sbb
cmps
cmp
add
push
xor
test
cmp
cwde
test
retf
addr16
sbb
fbld
jbe
test
xchg
dec
sbb
imul
add
fstp
xchg
scas
loope
pop
(bad)
nop
pop
push
pop
movs
fldenv
mov
pop
sbb
shl
push
and
enter
push
cmp
add
rcr
push
shl
xchg
inc
and
adc
mov
pushf
or
or
mov
cs
sbb
aas
scas
mov
jmp
add
push
jae
pop
jl
or
pop
adc
or
and
stc
je
and
sub
je
push
movs
mov
fwait
and
jo
mov
stc
js
xchg
fs
cmp
daa
inc
mov
push
shr
or
test
pop
hlt
sub
sub
cld
and
sub
sub
mov
movs
stc
push
test
int
sub
enter
cmp
ja
push
sbb
or
mov
xor
or
sub
pop
xchg
les
les
and
movs
stc
dec
mov
sub
jmp
fwait
inc
dec
inc
aas
dec
shl
add
adc
sub
and
push
pop
dec
xor
and
jo
jb
and
hlt
mov
or
push
and
pushf
ret
call
xor
mov
xchg
in
call
fcom
js
jae
data16
(bad)
retf
mov
and
cmc
sub
bnd
xor
rcr
add
in
inc
or
cmp
push
loopne
dec
inc
jl
aaa
bnd
xor
mov
shl
pop
shr
push
dec
or
dec
aas
popa
sbb
fs
rol
xor
mov
push
imul
dec
cdq
pusha
push
into
sbb
push
adc
cmp
xchg
mov
or
add
fsub
inc
push
mov
fild
mov
push
add
xor
fist
cmp
loope
addr16
cmp
es
inc
xchg
ds
xchg
cwd
fwait
jo
pusha
xchg
or
aas
push
js
mul
mov
inc
test
cmp
outs
mov
push
ror
inc
add
inc
sub
in
jo
xor
inc
shl
sbb
mov
ret
mov
inc
mov
pusha
and
rol
xchg
fs
enter
inc
or
mov
pop
mov
pop
inc
add
sbb
scas
into
pop
repnz
call
ret
or
fld
iret
(bad)
lock
test
dec
add
call
jns
mov
popf
or
popa
movs
je
js
repnz
mov
outs
or
push
fmul
rol
jns
jbe
mov
aaa
adc
dec
dec
pop
xor
in
sahf
lock
xchg
or
pop
sbb
or
dec
mov
inc
(bad)
fcomp
add
das
push
add
dec
or
shl
call
rcl
loopne
fisubr
loopne
arpl
push
rcr
cld
push
pop
repnz
push
lods
scas
fild
dec
lock
add
cmp
cmp
adc
(bad)
shl
push
sub
out
fcomp
pop
repnz
dec
loopne
add
enter
xor
mov
js
pop
fwait
sbb
rcr
cmp
add
cmps
into
and
aaa
push
push
push
push
pop
push
hlt
test
jns
adc
pop
in
mov
pop
sub
lods
clc
add
or
clc
add
enter
mov
retf
pop
in
jbe
inc
jns
loopne
mov
icebp
fadd
data16
popa
lahf
jns
add
in
dec
clc
dec
or
sbb
bound
outs
cmp
in
sbb
pop
int3
ds
jns
cmp
out
jl
or
outs
test
sub
inc
adc
mov
stc
mov
push
outs
mov
mov
mov
mov
ss
cmps
loopne
je
pop
mov
daa
sub
jmp
adc
pop
pop
sub
push
inc
mov
cmp
pop
seto
je
idiv
jecxz
or
push
inc
scas
lock
pop
inc
iret
dec
push
mov
(bad)
mov
xor
mov
fbld
inc
and
inc
pop
add
cmps
sysret
sbb
mov
push
xor
and
pop
mov
inc
xchg
nop
shr
packuswb
add
jno
nop
or
pop
out
ins
dec
cmp
nop
inc
jle
mov
dec
retf
xor
cmp
pop
push
popa
or
paddusb
add
in
push
andps
rol
xchg
pop
pop
or
shl
pusha
jmp
add
seto
inc
(bad)
cmp
and
std
add
and
or
je
and
int3
or
sbb
push
aam
cmps
mov
push
add
popa
jo
add
inc
je
mov
pop
fsub
pop
hlt
add
mov
shl
jno
sub
push
sub
movs
sub
pop
mov
xchg
ret
sbb
mov
hlt
sti
mov
ss
jae
hlt
mov
mov
sar
inc
xor
add
pop
scas
sbb
loopne
inc
inc
iret
mov
xchg
inc
cld
xchg
sub
cmp
gs
push
(bad)
cmp
or
inc
not
nop
stc
movs
fs
(bad)
not
jo
push
dec
or
sbb
lods
xor
sub
dec
aam
dec
push
(bad)
xchg
dec
retf
mov
je
stos
ss
push
adc
shr
or
in
mov
mov
les
fnstenv
lods
rcl
jg
or
cmp
inc
lahf
je
dec
mov
ret
mov
xor
bnd
push
cmps
gs
daa
imul
aam
cmp
inc
mov
std
bound
mov
mov
fwait
add
push
inc
dec
dec
and
icebp
mov
out
adc
xchg
sub
mov
test
dec
xchg
je
nop
xchg
ret
cmp
fidiv
inc
and
sbb
cmp
sub
push
loopne
adc
adc
jp
inc
push
test
xor
or
adc
out
pop
sahf
add
or
adc
cmp
push
ror
add
xchg
callw
mov
mov
out
cwde
lahf
or
adc
test
fcmovb
adc
adc
add
add
sbb
and
push
pop
inc
(bad)
sub
cld
mov
add
mov
xchg
pop
pop
inc
gs
mov
add
jbe
dec
mov
mov
mov
sti
popa
ja
sub
nop
add
(bad)
(bad)
and
ss
jmp
and
pushf
inc
xchg
xchg
add
inc
inc
stos
dec
bound
ret
mov
add
mov
mov
pop
add
mov
mov
inc
or
repnz
and
or
and
ins
add
ds
push
inc
add
inc
pop
aas
dec
pop
cmp
sub
(bad)
cmp
add
mov
cmp
cwde
or
push
mov
aas
dec
es
dec
adc
or
std
pop
lods
add
cmp
sub
dec
push
jg
ins
or
push
adc
jg
mov
aam
mov
or
stos
inc
jmp
pop
add
(bad)
je
ja
mov
and
adc
dec
inc
test
inc
inc
add
in
lea
jge
xchg
pushf
add
popa
ins
inc
or
dec
retf
mov
jno
push
inc
pop
or
add
dec
adc
dec
inc
dec
sbb
mov
dec
push
scas
mul
(bad)
jno
dec
dec
sbb
imul
sbb
adc
xchg
lods
int
fcomp
movs
mov
cmp
sti
lock
cmp
push
cmp
xchg
xchg
cmp
adc
bound
or
hlt
(bad)
add
and
ror
outs
repnz
inc
adc
pop
cmp
fdivr
add
or
xor
or
and
push
inc
add
lock
sbb
outs
cmp
jo
or
fmul
pop
mov
xchg
and
jl
cli
mov
push
xor
adc
sbb
mov
and
push
outs
jns
sbb
pop
sub
neg
jmp
arpl
mov
enter
push
xchg
cli
inc
pusha
jo
xor
mov
mov
test
or
mov
and
fsubr
push
mov
int
pop
stos
dec
aam
leave
(bad)
mov
pop
jmp
adc
push
sbb
or
shr
dec
sar
pushf
rol
pop
adc
push
sbb
cmp
and
fs
(bad)
mov
mov
push
shl
es
mov
adc
daa
inc
pop
movs
in
js
les
inc
xor
adc
imul
loopne
scas
cmp
or
jmp
mov
sbb
inc
jecxz
enter
andps
jmp
shl
cs
jbe
call
or
inc
cmp
and
repz
cld
jo
or
sub
adc
add
jle
and
push
xor
(bad)
popa
mov
pop
sub
pop
pop
add
mov
fisttp
cmp
dec
push
fcom
or
and
in
and
adc
cmps
xchg
(bad)
jge
mov
jle
pop
lds
or
and
push
sbb
ds
mov
add
outs
xor
ja
and
into
push
jmp
daa
dec
js
call
inc
shl
and
adc
sub
and
sub
ror
sub
add
es
js
mov
out
mov
ss
fs
in
sub
xor
vpackusdw
mov
ret
pop
gs
adc
inc
loopne
mov
fdivr
push
and
mov
pop
cmps
inc
inc
sbb
arpl
inc
ret
test
push
jae
adc
test
cmp
je
test
sub
add
in
inc
pop
sub
pop
cmp
sbb
or
adc
xchg
jo
jne
xchg
and
imul
jp
scas
call
test
mov
cmps
mov
or
dec
pop
das
into
cmps
loopne
push
out
fnstcw
add
enter
ins
sub
shr
pop
mov
sahf
pusha
sbb
call
adc
xchg
and
(bad)
es
dec
and
ficom
rcl
push
ja
fdivr
pushf
add
xor
aas
xor
or
xor
js
leave
dec
imul
mov
mov
adc
test
jge
aas
pop
push
inc
mov
bound
add
or
sub
jbe
sbb
aad
(bad)
popa
aaa
scas
add
xor
cld
mov
out
inc
xor
(bad)
pop
xchg
rol
push
sub
add
xchg
lods
mov
adc
push
xor
sbb
test
cmp
and
sub
enter
mov
dec
pop
lock
push
or
pushf
iret
and
xchg
mov
jmp
push
sbb
xchg
int3
inc
loope
and
jbe
add
push
sbb
sbb
inc
dec
stos
mov
xchg
ja
pusha
and
dec
mov
adc
adc
or
in
push
push
or
pop
and
or
not
popa
pop
cmp
inc
mov
inc
add
lea
add
loopne
xchg
add
retf
xchg
adc
pop
in
or
je
test
je
xchg
dec
ficom
test
call
setnp
and
xor
add
fs
mov
nop
hlt
iret
enter
aaa
xor
xchg
push
sub
xchg
and
jb
inc
mov
add
mov
fild
xor
and
jg
add
push
adc
cmp
or
mov
ret
fs
in
nop
aad
scas
movs
pop
mov
dec
ins
stos
ret
add
lock
and
push
lock
inc
mov
out
lahf
dec
add
aam
cli
retf
ja
inc
bound
dec
test
shl
mov
lds
mov
in
mov
int3
ss
xchg
cdq
or
fadd
adc
jp
push
in
push
shl
popa
adc
add
adc
inc
push
inc
or
outs
sub
cmpxchg
cmp
push
pop
add
adc
ja
xchg
pop
adc
sub
outs
mov
inc
sbb
(bad)
mov
jne
and
outs
pop
dec
imul
xor
test
xchg
sub
push
inc
mov
sbb
test
loope
pop
push
ret
xor
add
in
addr16
or
and
mov
and
or
mov
and
dec
icebp
lea
mov
sub
out
cmps
js
test
pushf
pusha
sbb
sbb
sbb
out
lea
push
xor
push
xchg
or
mov
mov
push
sbb
fcomp
mov
sbb
call
jmp
add
push
push
lea
push
adc
jp
mov
cs
adc
(bad)
(bad)
std
mov
outs
or
lds
pop
mul
mov
or
pop
mov
fstp
jle
mov
ja
xor
mov
mov
inc
pop
loopne
ins
dec
or
sbb
push
imul
sbb
adc
imul
or
cmp
dec
adc
xchg
push
hlt
fiadd
adc
sub
sbb
cmp
inc
fcomp
and
sub
dec
fcom
fisttp
in
push
in
sbb
xchg
add
not
inc
add
sub
add
iret
jmp
stos
aaa
enter
ja
es
mov
or
sets
add
xchg
scas
jb
pop
dec
je
fadd
imul
add
out
cs
push
fsubr
stos
and
xchg
mov
jl
xor
pop
repnz
pop
pop
xchg
cmp
adc
popa
mov
imul
mov
push
fwait
jne
test
inc
or
in
push
push
outs
mov
inc
and
rol
scas
popa
test
xor
shl
sub
lock
adc
sub
js
xlat
add
push
or
fidiv
and
in
inc
adc
into
mov
and
cli
sbb
(bad)
in
(bad)
xchg
jbe
jmp
cmp
sbb
or
int3
dec
out
(bad)
retf
jo
dec
cmp
pop
push
stos
call
popa
jo
es
(bad)
sbb
test
push
xlat
push
or
mov
test
pop
mov
(bad)
or
xor
sbb
lock
sbb
pop
aas
fcom
pop
mov
sar
stos
ja
cmp
mov
add
pop
adc
and
jp
mov
mov
pop
pop
fiadd
in
inc
in
aaa
sbb
pop
cmp
nop
or
dec
fcomp
dec
add
(bad)
and
mov
imul
push
imul
or
cwde
in
imul
jno
xlat
ret
push
es
mov
test
idiv
mov
and
mov
inc
mov
daa
push
xor
aas
add
in
mov
jnp
je
mov
neg
(bad)
sbb
ja
sbb
jp
mov
shl
xor
in
aam
(bad)
daa
adc
adc
mov
pop
mov
adc
push
imul
pop
push
mov
iret
cmp
inc
sbb
pop
or
push
clc
jle
xor
ret
iret
js
repz
mov
and
iret
pop
jo
fstp
adc
mov
shr
in
(bad)
std
lea
mov
enter
aaa
stos
jnp
adc
jecxz
xchg
fist
sar
in
xor
es
sar
push
sub
pop
mov
cmp
(bad)
xchg
aam
in
ret
xor
push
cld
sbb
sbb
or
rcr
mov
mov
jle
jae
mov
into
inc
repnz
(bad)
scas
je
push
in
sbb
push
into
pop
add
or
dec
pop
pop
imul
nop
inc
add
pop
call
cs
(bad)
push
add
xchg
(bad)
sub
jo
add
imul
stos
push
or
test
in
ja
xchg
arpl
retf
(bad)
adc
jb
xchg
test
push
sub
popa
shl
pop
sbb
dec
adc
lea
cmp
mov
lods
xadd
cmp
mov
push
pop
fisub
mov
sub
jle
adc
test
ds
cmps
repz
imul
fnsave
or
sbb
or
cmp
nop
jbe
and
in
repz
ins
pop
rol
imul
xchg
imul
push
xchg
sub
ja
push
or
or
int3
adc
sahf
or
clc
xchg
push
dec
or
adc
fisttp
out
ret
(bad)
xchg
jns
jecxz
loope
iret
xor
or
fs
pop
adc
adc
jb
mov
dec
sbb
and
cmc
jne
mov
mov
lahf
add
mov
je
pushf
je
dec
inc
pop
mov
sub
ror
mov
push
ds
sahf
sub
daa
push
mov
mov
cmp
push
pop
mov
dec
(bad)
sahf
movs
movs
fist
add
test
repz
fadd
add
ficom
and
hlt
aaa
add
and
cmp
xor
(bad)
fcomp
cmp
adc
test
test
retf
inc
mov
mov
xor
enter
mov
or
test
jo
sub
sub
popf
xchg
push
mov
push
add
mov
pop
clc
nop
aam
add
mov
shl
dec
pop
pusha
adc
push
in
jbe
rcr
mov
push
jl
push
das
mov
and
inc
lahf
retf
mov
add
mov
inc
dec
ins
leave
ja
inc
and
adc
or
push
(bad)
lock
and
mov
mov
add
dec
add
xlat
ins
das
cli
or
xor
and
sbb
adc
and
inc
out
test
push
ret
mov
or
sbb
inc
cld
(bad)
nop
cmp
push
test
sub
and
test
push
or
clc
es
mov
push
inc
xor
adc
sbb
mov
rcl
dec
pop
cs
and
sub
dec
fnstsw
aaa
sbb
inc
mov
ret
mul
jle
sbb
mov
xchg
pop
adc
jmp
xor
inc
add
sahf
cmc
pusha
mov
cmp
jl
xor
(bad)
mov
pop
cmp
sbb
jp
pop
or
ja
push
xchg
cmp
or
sub
or
adc
pop
stos
add
test
into
add
and
fdiv
mov
pop
push
bound
frstor
movs
push
popa
ret
mov
inc
push
in
mov
fsub
push
jmp
cmp
pusha
push
dec
cmp
add
adc
add
push
mov
dec
adc
es
cwde
repnz
inc
enter
das
mov
dec
loopne
ror
cmc
and
add
fwait
mov
lods
or
xchg
aaa
aad
or
pop
cdq
retf
sbb
adc
add
mov
xor
push
cmps
pushf
inc
adc
cld
or
sbb
pop
les
push
inc
push
xchg
adc
mov
shr
pop
pop
retf
push
push
les
and
dec
mov
fwait
mov
sbb
xchg
sbb
mov
in
or
cmp
(bad)
dec
mov
rcl
pop
add
int3
(bad)
movs
adc
bound
jns
jmp
aaa
ja
push
or
nop
sbb
ret
sbb
or
mov
add
adc
test
pop
enter
movs
mov
mov
test
sti
or
adc
or
dec
cmp
loopne
sar
push
dec
iret
push
imul
imul
addr16
add
ret
(bad)
nop
rcl
and
movs
push
push
mov
clc
jne
enter
mov
mov
pusha
xor
cmps
adc
jge
call
les
adc
mov
dec
dec
add
imul
mov
cli
inc
jg
je
xor
jb
or
jnp
and
jecxz
or
test
pop
aam
jmp
jmp
jg
cmp
dec
aad
lock
jl
xchg
cmps
stos
xor
xor
mov
scas
lock
dec
fdivr
sub
adc
sbb
fwait
ret
cmp
or
xchg
xor
fsubr
into
jmp
jmp
pusha
sub
ins
cdq
add
loopne
mov
sbb
pop
pop
push
cmps
dec
mov
jae
push
fs
stc
and
mov
mov
jne
push
sub
mov
or
or
or
add
dec
add
test
or
cmp
jo
cmp
jb
cwde
scas
inc
es
push
mov
retf
sbb
test
add
xchg
jns
mov
loope
adc
scas
mov
dec
sbb
inc
add
cmp
movs
xor
(bad)
in
push
fisubr
test
dec
test
andps
(bad)
shl
lock
jnp
mov
push
or
and
pop
add
and
outs
in
add
dec
aaa
clc
cmp
mov
inc
outs
mov
add
nop
mov
in
outs
and
sbb
sbb
mov
cmps
push
jae
ds
test
nop
add
adc
lock
leave
pop
add
and
sub
lea
push
lock
lock
adc
aam
pusha
mov
add
mov
inc
int
and
inc
lock
dec
int3
leavew
xchg
movs
xor
leave
nop
or
or
es
leave
nop
cmp
lock
mov
dec
add
aaa
sti
clc
cs
mov
jb
jecxz
cmp
mov
push
ins
cmp
(bad)
leave
lea
data16
(bad)
sub
cmc
adc
push
xor
add
lods
jg
mov
sub
xor
cmove
jge
ret
sbb
sub
mov
scas
add
movs
ds
hlt
xchg
push
mov
push
push
movs
scas
sub
adc
aam
jns
jne
or
dec
jp
or
jg
outs
ret
imul
mov
test
pusha
daa
adc
jnp
xchg
mov
dec
add
aaa
sub
test
fdivr
dec
xlat
shr
xchg
loope
sbb
sti
xor
mov
adc
mov
pop
enter
addr16
mov
das
pop
inc
xchg
dec
mov
movs
cmovne
sbb
test
fst
pop
add
add
inc
enter
push
or
sti
jmp
xlat
shl
sbb
jmp
inc
call
fiadd
ret
adc
test
push
push
data16
mov
mov
and
ins
add
push
sbb
pushf
sbb
pop
lods
dec
test
dec
dec
int3
cmp
ror
mov
(bad)
mov
call
in
lods
push
sub
or
das
lea
outs
cld
add
(bad)
mov
pop
pop
cmp
int
fs
je
push
or
fdivr
rcr
in
repnz
sbb
mov
loope
jo
push
je
sub
inc
mov
test
jp
jnp
lods
inc
das
sub
(bad)
clc
mov
lea
xor
nop
out
fsub
inc
xor
in
pop
jb
mov
sbb
inc
cmp
xlat
jmp
inc
add
pop
mov
imul
pop
or
or
pop
xor
iret
cmp
ret
push
push
pop
cs
fst
add
lea
(bad)
ss
mov
or
nop
xchg
lock
jge
js
pop
adc
daa
jbe
loopne
or
jne
cmp
sbb
jnp
sbb
cmp
cwde
jb
jmp
dec
mov
adc
inc
sub
add
jno
xchg
mov
aaa
push
cmp
pop
and
xchg
adc
xor
push
aaa
or
adc
dec
and
sbb
lea
add
nop
fbld
cli
nop
and
cmp
and
add
mov
fs
aas
adc
pop
xor
fs
inc
or
push
push
mov
sbb
popa
rol
mov
test
add
stos
mov
clc
fistp
sub
mov
gs
les
and
inc
(bad)
mov
test
or
add
shl
das
pusha
adc
jo
add
neg
clc
add
outs
comiss
imul
test
mov
test
pusha
adc
shl
cmps
in
cwde
adc
(bad)
jp
inc
imul
data16
sbb
add
loope
adc
test
add
(bad)
adc
jp
les
and
call
cmp
rcl
test
dec
pop
sbb
or
xchg
xor
test
addr16
push
add
jp
and
xor
test
fcmovnb
out
ja
neg
mov
add
aaa
daa
loope
pop
jmp
jmp
push
mov
push
nop
arpl
or
(bad)
lock
(bad)
jp
jo
movs
inc
movs
jns
popa
clc
add
cmp
mov
sbb
inc
xor
push
lock
mov
arpl
call
ja
ret
cmps
ss
adc
adc
pusha
add
jmp
cmp
jne
and
cwde
mov
int
xor
push
inc
pop
xor
pop
or
jno
ret
clc
je
mov
adc
sbb
enter
aas
inc
ss
sar
push
sub
imul
push
xor
jl
lahf
sub
rol
aam
repnz
add
mov
mov
sbb
les
inc
scas
cmp
dec
or
shl
sub
imul
and
adc
pop
(bad)
je
push
push
adc
test
dec
cmp
pmuludq
lock
xor
cmp
(bad)
mov
add
push
out
push
add
ret
dec
or
lds
adc
or
in
int
add
dec
jle
add
push
jb
mov
shl
or
cmp
add
dec
inc
jno
pop
sbb
cmp
mov
mov
fs
movs
dec
push
or
push
jo
jo
and
xchg
das
add
jb
shr
aam
and
add
ficomp
jl
inc
jo
daa
out
neg
sub
jnp
pop
fcomp
in
ret
(bad)
aam
mov
sbb
add
(bad)
or
inc
jmp
imul
inc
mov
jl
jne
and
sbb
sbb
or
frstor
mov
aam
xchg
add
adc
xchg
mov
mov
mov
push
jbe
adc
movs
fstp
pop
inc
jns
add
jo
or
repnz
inc
push
add
adc
nop
sub
ret
popf
mov
repz
sub
jb
sbb
movs
pop
inc
sub
push
jge
jge
pop
or
inc
les
rcl
pop
cmp
mov
dec
add
jp
fmul
dec
push
loope
or
in
movs
push
lds
lods
add
push
cmp
and
sub
arpl
call
cmp
cmp
stos
jo
cmp
sti
sbb
out
mov
push
call
sub
xchg
sub
jecxz
adc
push
xor
adc
shr
imul
inc
dec
pusha
out
or
push
mov
pop
(bad)
lods
sbb
imul
push
dec
rcl
jnp
dec
shl
lods
add
push
pop
pop
ret
push
sub
mov
inc
dec
adc
add
push
addr16
push
and
ret
icebp
mov
add
xchg
push
mov
and
pop
or
leave
or
cmp
rcr
inc
mov
call
scas
test
mov
mov
add
je
je
jno
jmp
dec
sbb
jb
shr
or
in
retf
adc
or
test
dec
out
and
iret
sbb
fcomp
push
mov
sub
ins
push
add
adc
pop
in
sbb
cmp
pop
ins
fbld
inc
sub
jp
adc
add
inc
js
daa
aas
mov
test
or
loopne
jmp
push
sub
jmp
xchg
sub
sbb
daa
mov
xor
mul
(bad)
and
mov
lahf
jmp
sbb
addr16
into
enter
pop
icebp
and
inc
jecxz
outs
ror
or
dec
mov
iret
adc
push
sbb
add
ins
ja
movs
pop
push
or
lahf
inc
inc
in
rol
add
xchg
fdiv
and
inc
cmp
pop
cmp
add
in
repz
lea
ss
mov
jb
dec
jmp
in
pop
inc
mov
call
rcl
xchg
or
pop
daa
arpl
push
inc
call
jmp
mov
add
pop
xchg
fwait
jmp
xchg
push
movs
adc
or
lods
gs
xchg
inc
lods
sbb
hlt
jbe
and
mov
inc
add
callw
pusha
push
sahf
or
jmp
out
loope
cld
data16
dec
lea
test
in
dec
pop
dec
cmp
sbb
sub
ror
leave
fs
dec
ror
nop
inc
aaa
nop
adc
(bad)
adc
xchg
not
sbb
add
push
or
sbb
ret
aas
push
cmp
pop
bound
popa
add
sub
dec
jmp
xor
inc
mov
cmp
jb
outs
sub
pop
rcl
jmp
pop
add
pop
cmps
and
sar
jbe
icebp
dec
inc
xlat
js
or
jo
or
mov
push
test
dec
ins
push
pusha
test
cdq
jge
cmc
bound
mov
adc
rcl
aaa
pop
shl
inc
or
xor
add
mov
nop
xor
xor
adc
or
daa
sub
and
call
sub
jns
dec
jmp
sti
mov
pop
fst
ss
jle
lock
push
sub
and
hlt
inc
add
inc
dec
push
pop
in
adc
dec
call
scas
or
inc
mov
mov
inc
jo
jb
add
jne
lea
ffree
or
sahf
pusha
aam
ins
dec
or
push
loopne
push
inc
or
imul
cmps
imul
sub
add
and
sbb
cld
pusha
xor
mov
dec
shr
out
lea
mov
pop
inc
adc
shl
dec
sub
mov
jne
cmp
enter
adc
inc
dec
call
daa
add
jle
movs
mov
mov
test
add
add
pop
xor
or
mov
sub
jae
jnp
call
mov
mov
inc
cmp
jne
xor
rcr
popa
jmp
cmp
into
lods
mov
xor
or
je
dec
mov
fwait
inc
add
or
and
dec
jge
xor
mov
adc
cli
ficom
ja
mov
xor
ficomp
dec
enter
xor
and
aas
pop
add
adc
xchg
cmp
popa
mov
xchg
xor
rcr
mov
xor
push
jns
lahf
sahf
inc
dec
or
retf
outs
xor
mov
addr16
cmp
(bad)
add
mov
jge
imul
mov
fcmovnb
adc
mov
fbld
js
adc
pushf
add
sbb
fs
mov
enter
jno
dec
dec
mov
or
adc
adc
and
or
pop
sbb
frstor
lahf
adc
cdq
js
push
inc
jle
fs
fsubr
icebp
(bad)
mov
mov
xor
cs
outs
push
ins
cmp
dec
add
pop
push
cmp
mov
mov
cmp
test
sub
xor
xchg
enter
hlt
sbb
js
daa
mov
cli
mov
sub
loope
sub
pop
xor
lahf
inc
add
push
dec
dec
icebp
or
enter
mov
xlat
cmp
lods
xor
aam
or
push
xor
dec
add
add
pop
rcr
xchg
jo
int3
mov
sub
out
dec
mov
inc
not
and
outs
ins
adc
(bad)
out
add
sbb
pop
gs
inc
fnsave
cli
lods
pop
xchg
nop
cmp
xchg
add
cmp
adc
sub
xor
je
and
pop
int3
cmp
and
mov
cmp
movs
push
mov
ror
fistp
mov
mov
dec
mov
cmp
pop
jmp
pusha
or
dec
adc
add
lock
adc
and
arpl
sbb
sahf
dec
xor
inc
mov
mov
push
push
or
dec
inc
cmp
iret
je
cmp
je
mov
retf
mov
idiv
clc
adc
lods
mov
imul
mov
ins
test
or
pusha
xchg
(bad)
sbb
add
sbb
(bad)
stc
pop
inc
xchg
pop
push
aam
ficomp
enter
adc
cs
aad
ds
cmp
sub
adc
sbb
out
xchg
push
mov
push
(bad)
loopne
sbb
mov
sub
add
mov
push
outs
rcl
rcl
or
and
leave
pushf
imul
stc
xchg
loope
push
jp
inc
push
sub
cmp
push
cmps
pop
push
pop
shr
and
jbe
pop
je
or
mov
dec
inc
test
ret
mov
pusha
pop
lock
and
or
fcomi
dec
daa
push
ds
cmp
push
inc
cli
add
jle
data16
inc
test
loop
mov
pushf
rol
in
push
inc
pop
repnz
add
push
mov
(bad)
imul
jg
push
jne
gs
addr16
stos
or
add
cwde
dec
outs
shr
push
ret
jo
xchg
or
sub
push
xchg
das
js
push
lea
xor
xor
or
lods
lock
imul
sub
mov
fnstcw
mov
add
aaa
nop
test
ins
or
adc
push
xor
xchg
aad
ret
pop
inc
adc
xor
popf
ins
popa
xor
std
gs
jg
cwde
mov
xchg
or
loope
jns
adc
sub
int
mov
dec
repz
and
int3
mov
mov
sub
ficomp
fwait
add
mov
xchg
lds
xor
push
(bad)
push
mov
pop
sbb
nop
outs
sbb
add
sbb
cmp
or
hlt
outs
push
sub
add
inc
or
lods
movs
adc
mov
imul
push
mov
jns
or
imul
pop
inc
ror
jne
xchg
ins
push
push
add
or
add
sbb
pop
scas
ins
fsubr
and
xor
push
jbe
stos
mov
in
es
cmp
aam
xlat
dec
pop
ins
sbb
dec
inc
sub
add
mov
jecxz
sub
sbb
dec
frstor
pop
jecxz
retf
cmp
lock
jo
cmp
lea
sahf
dec
jns
jle
pop
call
mov
mov
aad
xlat
lods
out
adc
rcl
jb
pop
lods
test
hlt
mov
cmp
ins
dec
or
xchg
sbb
push
jg
pusha
dec
cmps
xor
mov
xchg
push
cmp
inc
push
pop
adc
inc
mov
jo
mov
fadd
inc
stos
imul
mov
mov
scas
xor
push
cmp
or
mov
test
in
rol
mov
sbb
in
test
mov
shl
cmp
inc
fist
bound
jp
(bad)
dec
sbb
xchg
sub
cli
daa
mov
push
xchg
mov
rol
add
adc
outs
retf
mov
mov
mov
pop
dec
cmp
inc
adc
(bad)
fdiv
rcr
mov
push
adc
mov
test
ret
mov
jmp
stos
cmp
push
jmp
imul
icebp
loopne
call
iret
cmps
ret
mov
icebp
push
mov
or
push
not
sub
adc
jp
push
inc
fsubr
aam
or
inc
or
adc
mov
sbb
add
pusha
xor
jne
pop
hlt
ds
jne
mov
ret
lods
pop
xchg
popa
dec
adc
sbb
ss
dec
sbb
inc
sbb
nop
pop
or
push
dec
jmp
in
jo
pop
out
mov
imul
adc
add
jecxz
mov
iret
add
jp
call
outs
add
scas
dec
mov
mov
pop
add
jecxz
inc
pop
mov
rol
iret
adc
(bad)
movs
xchg
push
fbstp
fdivr
xbegin
cs
cmp
add
leave
neg
inc
xchg
dec
fild
or
pop
pop
cmps
inc
jmp
add
push
inc
and
push
call
adc
fcmovnb
pop
es
mov
pop
add
call
add
pop
test
enter
dec
jmp
mov
scas
adc
sbb
setbe
pop
adc
out
or
add
mov
jmp
mov
icebp
jl
and
xor
mov
adc
cmc
ss
adc
es
repz
ins
sub
mov
sbb
xchg
dec
cmp
popf
add
scas
enter
jecxz
jmp
rcr
(bad)
jecxz
out
jmp
sbb
pop
adc
push
xchg
js
lea
sub
and
imul
jl
lock
mov
mov
pushf
and
or
sub
lock
jmp
dec
sbb
jl
push
push
or
rol
add
lock
hlt
and
push
mov
add
xor
jle
je
dec
dec
xchg
aam
mov
lahf
push
sub
sbb
adc
mov
sub
in
inc
push
imul
and
cmp
ss
sbb
sbb
dec
addr16
les
shr
sbb
jno
or
mov
add
icebp
mov
lahf
fcom
(bad)
outs
jecxz
cmp
sub
push
dec
dec
mov
adc
inc
xchg
loope
mov
xchg
je
outs
jae
adc
stos
dec
test
sbb
jne
cmp
add
sub
jle
or
push
and
in
iret
push
dec
and
cmp
and
pop
loopne
lock
imul
add
gs
and
stc
dec
clc
icebp
inc
xor
add
cmp
movs
add
es
ret
shr
and
fisttp
inc
xor
adc
add
mov
seta
add
mov
jbe
add
sar
xor
mov
or
inc
jl
cdq
or
fdivr
sub
jb
popa
pop
cmp
jmp
push
inc
pop
ins
adc
cli
add
inc
in
pop
shr
jb
leave
mov
rol
and
pusha
loopne
loopne
daa
out
or
je
bound
or
and
imul
xchg
jb
sbb
jmp
add
xchg
inc
pop
add
clc
cwde
movs
ret
adc
frstor
add
repnz
mov
cmp
mov
lods
fnsave
dec
add
pop
push
int3
mov
mov
shl
jne
and
pop
dec
sar
(bad)
rol
aaa
test
pop
add
bound
xor
imul
lds
inc
mov
sti
rcl
cs
add
mov
cmps
gs
lods
xchg
add
add
xor
cli
loopne
add
add
sahf
lods
(bad)
in
pop
jne
jnp
jno
sub
outs
push
shrd
sub
gs
dec
push
mov
in
xor
dec
xor
test
add
mov
and
add
add
jl
jo
cmp
inc
(bad)
shl
jmp
adc
mov
and
bound
push
jmp
lds
add
or
scas
das
adc
push
gs
pop
add
jno
popa
pusha
(bad)
and
pop
(bad)
mov
xchg
(bad)
in
add
pop
push
ret
mov
pusha
shr
lds
adc
add
mov
or
xchg
shl
ins
lea
(bad)
pop
test
mov
test
dec
fisttp
and
mov
aad
mov
(bad)
out
mov
das
dec
xor
pop
sub
jle
dec
add
mov
push
add
stc
mov
sti
cmps
or
inc
adc
pop
and
pop
xor
push
int3
jmp
pop
cmp
jae
mov
inc
popa
in
js
je
push
sbb
sbb
shl
add
push
andps
inc
mov
or
push
push
cld
bnd
(bad)
std
add
xor
ror
test
rcl
inc
daa
out
push
cmps
inc
in
push
sti
add
popf
ret
jmp
xchg
ror
jl
and
loope
and
jmp
or
in
mov
push
test
lea
inc
sub
jmp
cdq
pop
nop
rcr
ds
xchg
mov
sbb
xchg
adc
and
inc
pop
lock
test
and
pop
xchg
push
add
sub
push
mov
and
push
jb
out
leave
or
scas
xchg
adc
cmp
fcmovnb
inc
sbb
mov
and
por
je
jmp
call
xor
pusha
rcr
enter
xor
mov
pextrw
pop
cmps
inc
int
inc
sub
cwde
add
(bad)
call
repnz
ror
inc
pop
cmps
mov
int3
cmps
adc
pop
dec
mov
inc
mov
mov
add
xor
pushf
stos
push
xor
pop
mov
loopne
out
lahf
je
aad
movs
add
mov
nop
xchg
loopne
and
add
inc
shl
adc
mov
mov
jg
mov
push
fcom
icebp
fist
add
cmp
dec
js
xor
ss
xor
add
je
inc
cmp
sbb
shl
xor
pop
mov
pop
cmps
add
inc
call
push
sar
inc
fnsave
inc
lock
add
jmp
retf
mov
or
cmp
mov
push
or
jb
aam
add
gs
lods
mov
xchg
inc
arpl
ss
and
adc
addr16
push
sbb
and
push
out
xor
sbb
xor
inc
adc
or
cmps
jo
push
jge
add
test
je
xor
aam
inc
ja
and
xchg
lock
sbb
cmp
aad
sbb
or
and
cmp
mov
pop
rol
jo
push
daa
xchg
push
test
adc
inc
bound
xor
call
jl
shl
test
push
dec
fistp
hlt
rcr
mov
(bad)
dec
imul
xchg
xor
and
test
add
in
jmp
sbb
push
(bad)
xchg
pop
mov
sar
mov
ret
sbb
inc
or
mov
mov
lods
dec
mov
add
das
jne
nop
inc
loopne
dec
pop
sbb
sbb
nop
bound
adc
ror
push
jb
adc
rcr
or
inc
lock
test
add
push
cmp
outs
xchg
jb
stos
ds
neg
mov
push
ror
or
ins
test
dec
push
xchg
or
push
pushf
pushf
or
or
mov
shl
(bad)
xchg
push
adc
adc
daa
push
dec
mov
xchg
mov
jl
dec
sbb
sbb
adc
out
sub
mov
or
inc
pop
fsubr
lea
popf
fcom
ror
ins
fmul
gs
fcom
jo
push
adc
mov
icebp
mov
icebp
xchg
adc
and
retf
js
outs
add
mov
lock
pusha
xor
retf
or
adc
ret
cmp
je
xor
mov
lods
cs
add
add
inc
fisttp
push
add
push
lds
iret
mov
adc
cmps
lea
xor
and
push
inc
fisttp
add
and
jno
(bad)
clc
push
in
stc
push
cmp
xchg
imul
outs
cmp
retf
mov
and
call
sub
mov
test
mov
hlt
das
(bad)
cld
dec
jmp
mov
es
fidivr
nop
fisub
mov
dec
wrmsr
ss
add
daa
cdq
and
jmp
loop
mov
pop
or
or
cli
sbb
and
nop
fdiv
retf
jg
and
add
dec
push
adc
ret
outs
ja
int
cmps
xchg
sub
loop
jge
jno
inc
mov
cmps
push
popa
inc
mov
mov
add
dec
call
mov
pop
ror
add
cmc
inc
jb
xchg
adc
dec
mov
pop
adc
ret
test
ror
inc
mov
test
mov
jns
dec
pop
push
sbb
lods
mov
aaa
in
sub
xor
add
add
sbb
stos
aam
lea
enter
mov
sbb
mov
inc
(bad)
sti
sub
adc
mov
add
sbb
and
retf
push
mov
xchg
add
add
xchg
or
imul
inc
inc
cmps
sar
xchg
mov
rcr
int3
dec
loope
int3
mov
cmp
or
cmp
add
(bad)
jmp
push
popa
pop
lahf
add
lods
inc
and
lods
retf
add
sbb
es
cmps
jge
je
mov
test
push
out
arpl
nop
in
dec
or
dec
and
lock
pop
mov
and
ss
lock
cmp
nop
rcr
movs
and
mov
or
add
call
sbb
mov
fmul
test
mov
sub
pop
sub
test
jg
sbb
sub
sub
inc
add
mov
or
mov
add
xor
add
mov
mov
stc
movs
adc
xor
xor
push
test
cmps
xor
jmp
(bad)
pushf
mov
ja
aam
cs
icebp
cmp
sub
or
lahf
xlat
fmul
stos
xor
push
adc
jg
arpl
int3
xchg
es
add
pop
movs
xchg
pop
adc
les
out
dec
mov
ret
or
mov
(bad)
stos
sahf
mov
sbb
adc
fadd
xchg
push
xchg
xchg
xor
adc
push
push
and
and
pop
jl
xchg
cmp
pop
or
dec
mov
inc
xchg
add
js
mov
mov
and
pop
and
mov
out
push
sbb
popa
pop
shr
das
xchg
loopne
mov
mov
or
push
inc
test
xchg
imul
cmp
push
dec
xor
cmp
cmp
pop
test
xchg
push
jo
inc
pop
mov
mov
xor
add
cmp
mov
pop
sub
mov
xchg
mov
dec
cmps
sbb
pop
dec
and
in
dec
dec
dec
stc
adc
ficom
adc
pop
add
push
adc
adc
mov
pmaxub
dec
ss
push
xchg
dec
push
adc
iret
inc
push
call
fs
xchg
cmps
shl
xchg
jmp
and
sub
lea
imul
shr
imul
pop
push
and
jnp
out
dec
imul
fsub
push
call
pop
xchg
pop
jp
add
ins
jg
add
sti
out
jl
or
jle
ss
jmp
cmp
add
retf
cmp
xchg
inc
push
out
or
pop
pop
repnz
cmp
dec
or
and
inc
adc
or
aas
ficom
mov
mov
aas
mov
push
in
(bad)
fdivr
sbb
jp
jnp
pop
and
mov
pop
pop
out
repnz
ins
addr16
adc
pushf
pop
adc
stos
js
sub
adc
(bad)
or
out
mov
sar
xchg
jmp
add
je
pop
lock
mov
jmp
movs
shl
adc
cmp
jmp
or
sbb
adc
or
mov
xor
xchg
ror
sbb
imul
pop
mov
call
cmp
sub
outs
mov
mov
icebp
push
rcr
jne
cmp
stos
ret
js
enter
xor
cmp
push
iret
fwait
cmp
pop
adc
jno
int3
xor
xor
ins
out
call
add
test
jbe
mov
inc
and
out
inc
cwde
and
xor
stos
xor
popa
add
dec
(bad)
js
pop
ret
ins
sbb
movs
jge
jp
scas
stos
rcr
pop
aaa
sub
aaa
add
dec
add
scas
fist
test
jne
cmp
mov
jp
lea
push
and
xchg
dec
push
xor
cmp
jne
lahf
xor
(bad)
or
cmp
cmc
sub
and
sbb
adc
xchg
add
aas
xor
jae
jae
mov
mov
jne
dec
or
and
push
sbb
dec
pop
push
jl
pusha
and
pop
repz
fucomip
mov
cmp
push
stos
mov
cs
xor
push
mov
push
xor
jl
lods
dec
mov
inc
pushf
shl
inc
mov
ins
(bad)
push
mov
(bad)
ret
push
dec
dec
ror
inc
imul
rol
(bad)
sub
push
xchg
out
mov
sbb
(bad)
lock
mov
xchg
adc
sub
test
stc
outs
sbb
xor
dec
call
shl
js
add
mov
sub
je
pop
dec
inc
pop
mov
xor
inc
xor
push
icebp
push
or
loopne
add
pop
push
xor
mov
add
jg
mov
push
test
pop
add
jbe
imul
mov
loope
jns
and
dec
jmp
test
into
retf
adc
dec
and
shr
sbb
pop
dec
inc
or
mov
sahf
cmp
mov
ficom
(bad)
adc
bound
dec
inc
dec
or
cmc
inc
les
add
jbe
cmp
shr
sub
ret
fldenv
dec
or
dec
pop
inc
add
mov
push
jl
dec
ror
loop
cmp
sbb
jne
pop
mov
shl
icebp
js
adc
cmc
in
xchg
mov
pop
pop
mov
inc
int
sahf
xlat
or
sbb
sbb
fnstcw
pop
push
lock
or
repz
ror
or
pop
sbb
xor
jecxz
jo
inc
mov
pop
mov
push
aad
push
inc
or
add
ins
cmp
sub
push
rcl
(bad)
mov
dec
cmp
es
sbb
inc
fild
xchg
out
xchg
test
sar
sbb
pop
lock
xor
lock
or
add
sbb
iret
adc
and
xor
xchg
push
or
enter
cmp
pop
add
cmp
das
pop
outs
ror
mov
mov
xor
push
add
push
push
test
test
xchg
clc
xchg
call
inc
aam
pop
fidivr
mov
arpl
add
(bad)
dec
(bad)
inc
inc
pop
hlt
je
inc
sbb
sahf
clc
push
adc
ret
mov
and
add
(bad)
cmp
ins
or
inc
pop
sbb
sub
js
pop
sub
iret
loop
push
sub
mov
sbb
div
add
xor
jl
mov
sbb
sbb
imul
jno
cli
es
test
rol
repz
mov
addr16
jle
adc
clc
push
les
nop
test
pop
adc
add
sub
push
add
jns
les
dec
sbb
iret
inc
xchg
repz
mov
and
movs
inc
ins
sbb
mov
sub
xchg
mov
xchg
jmp
xchg
je
in
les
jbe
pop
dec
mov
push
not
rcr
stos
arpl
mov
xchg
pavgw
jb
jmp
sysret
add
test
mov
stos
push
fadd
cmp
and
jne
cdq
xor
test
loop
mov
pop
fstp
neg
fistp
cmp
jmp
cmp
inc
pop
dec
push
add
mov
rcl
icebp
aaa
popf
gs
add
add
mov
int
jne
mov
cmps
inc
adc
pop
leave
adc
push
xor
loopne
mov
inc
test
ret
add
pusha
(bad)
loop
addr16
fild
mov
pop
adc
push
jbe
mov
mov
sbb
mov
call
jbe
inc
xor
add
hlt
dec
sub
popf
inc
mov
cmp
loopne
or
jp
cmp
adc
xor
ret
add
outs
in
xchg
pop
mov
adc
ret
ror
inc
sbb
ret
or
or
retf
or
mov
xchg
mov
cmp
mov
loope
shl
dec
test
add
cdq
xchg
arpl
mov
mov
and
pop
push
sub
cmps
xor
pop
adc
or
in
lahf
pop
mov
add
or
xlat
je
mov
adc
inc
(bad)
out
or
dec
sbb
aas
test
mov
jne
adc
push
dec
repnz
ins
iret
bound
test
or
dec
mov
shl
jnp
movs
loop
xchg
xor
imul
push
sbb
and
mov
cmp
ins
mov
mov
jl
xor
je
or
movs
jns
mov
push
jb
inc
retf
lods
push
xor
xchg
sub
adc
scas
push
aam
inc
(bad)
push
arpl
daa
or
pop
mov
div
mov
cmp
and
pop
lea
mov
(bad)
mov
je
mov
lea
cmps
inc
jg
push
push
nop
inc
in
adc
add
pop
sti
mov
call
mul
cmp
or
dec
adc
dec
dec
inc
dec
dec
sub
out
pop
mov
cwde
xchg
add
or
adc
mov
sub
jo
sbb
(bad)
inc
sbb
sbb
mov
ds
mov
xchg
vmload
bound
sub
rol
xor
push
xchg
popf
mov
lods
add
sub
push
cmp
je
jl
inc
les
push
ftst
daa
inc
mov
add
enter
dec
rcl
xchg
adc
mov
(bad)
adc
test
retf
pop
and
leave
adc
bound
inc
sbb
cwde
mov
mov
inc
mov
push
rcr
ror
sbb
push
out
push
in
add
aam
movs
pop
and
stc
add
imul
or
test
jbe
xor
movs
enter
lods
mov
xor
dec
aam
inc
jns
out
fsubr
inc
das
repnz
pop
push
pop
cmp
inc
sub
mov
enter
lods
movs
jns
int
aam
mov
sti
push
inc
cli
(bad)
adc
pop
ins
cmp
int3
sbb
sbb
sbb
or
pusha
pushf
ss
pusha
mov
add
mov
stos
into
inc
mov
push
and
js
inc
mov
inc
cs
repz
jp
push
nop
add
pop
pop
pop
dec
mov
mov
cmps
push
daa
sbb
push
aas
xchg
int
jb
scas
mov
dec
xchg
dec
cmc
cmp
cmp
cs
(bad)
pop
call
lock
dec
push
enter
or
pop
adc
or
sub
add
cdq
(bad)
js
pushf
nop
inc
imul
ror
aad
in
retf
jne
push
(bad)
in
mov
or
or
add
xchg
pop
imul
adc
mov
hlt
mov
mov
sbb
(bad)
push
push
jb
xor
lea
mov
sub
push
xchg
pop
sub
push
shr
ret
or
dec
jne
dec
push
ret
sbb
pop
sar
fild
xor
mov
push
mov
xchg
inc
fsubr
pop
loope
add
inc
mov
into
arpl
mov
nop
lock
hlt
ins
cld
out
js
lods
cmps
pop
sub
inc
jnp
dec
pop
adc
ins
adc
fcom
xlat
icebp
dec
ja
scas
ds
cmp
iret
or
outs
cmp
mov
or
(bad)
jnp
mov
(bad)
cmp
hlt
loopne
xchg
jmp
mov
adc
inc
lods
les
mov
pop
test
xor
adc
dec
xor
cdq
js
jo
in
add
arpl
sbb
popa
(bad)
leave
mov
mov
sbb
sub
cmp
add
addr16
mov
dec
jo
loopne
xchg
inc
xchg
scas
cmc
rol
bound
push
push
add
add
test
add
cld
rol
dec
add
xor
mov
push
mov
dec
pop
mov
add
shr
inc
dec
and
push
push
fprem
dec
or
sub
or
movs
pop
sbb
add
call
test
rcl
pusha
jmp
cmp
push
xor
in
cmp
sbb
outs
dec
enter
stos
inc
fs
fldcw
(bad)
sbb
jg
adc
add
ja
pop
pop
xchg
xor
mov
jnp
mov
push
inc
sti
aam
adc
fwait
iret
aam
stos
xchg
aam
(bad)
clc
sbb
mov
ficomp
add
bound
shr
add
jle
inc
sub
je
test
movs
add
cs
and
ins
mov
sub
add
inc
rcr
sbb
loope
ds
retf
adc
xor
and
adc
fbld
fild
xor
in
pop
add
(bad)
dec
outs
call
sub
xor
jge
in
dec
sbb
jl
ret
popf
out
test
jecxz
stos
sbb
xor
stos
std
xchg
jg
mov
cld
test
jp
jb
pop
ret
sub
cmp
js
sti
in
and
sbb
mov
pop
mov
add
mov
sub
cmp
icebp
sbb
xchg
mov
sbb
cmp
adc
sbb
ins
fcomp
jbe
xchg
push
(bad)
aas
rcl
aad
add
jmp
movs
cmps
jno
rcr
sbb
addr16
(bad)
arpl
push
jb
test
aam
sbb
aaa
fild
dec
sub
push
inc
push
mov
jne
cs
jle
pop
test
scas
rcl
ss
mov
rcl
into
mov
loope
aad
stc
push
mov
pusha
adc
mov
mov
ffree
pop
fwait
call
pop
push
xor
in
lods
loopne
sub
jne
dec
push
or
out
sbb
push
adc
or
in
sbb
es
cmp
add
push
sub
push
movs
(bad)
fs
test
outs
add
or
test
mov
loop
push
cmp
sbb
push
xchg
lock
(bad)
jb
sbb
push
aad
pop
xor
sbb
ret
pop
pop
dec
xor
daa
in
lods
loope
xor
aad
xchg
das
sub
(bad)
and
pop
pop
jne
int
fidiv
fild
aam
shl
pop
add
sub
jae
data16
fcomp
sub
sub
mov
cmp
or
xchg
fwait
jmp
sub
xchg
or
dec
or
mov
adc
mov
movs
daa
jbe
ins
je
cmps
mov
push
xor
pop
gs
push
pop
xor
or
pop
lds
mov
and
sub
sbb
dec
pop
rol
sub
addr16
inc
inc
pop
inc
xlat
or
inc
push
add
out
sub
cmp
adc
push
pop
mov
call
outs
xor
push
push
addr16
sahf
and
out
test
or
into
pop
daa
lock
xor
cmovbe
cmp
mov
or
or
rcr
sub
add
inc
mov
and
add
addr16
xchg
rcpps
cmp
push
xor
jmp
(bad)
pop
xchg
jo
and
adc
fcomp
mov
pop
aas
add
or
dec
or
(bad)
pop
add
inc
cmp
mov
push
in
pop
je
inc
gs
sbb
test
dec
or
daa
in
or
mov
and
and
in
pop
pop
xor
cmp
mov
sub
xor
pop
pop
sbb
adc
sub
jmp
add
sub
lock
jne
dec
in
add
cmp
mov
inc
pop
push
sbb
js
add
fcomip
inc
mov
ud2
jno
dec
pop
pusha
idiv
add
and
mov
sbb
add
sub
adc
xor
scas
add
pusha
jmp
push
xlat
cmp
pop
push
xchg
mov
push
jnp
cmp
in
jne
pop
add
iret
(bad)
xchg
outs
cli
mov
mov
pop
rcr
jl
cmp
pop
xor
xor
mov
or
pop
mov
push
add
cmp
aaa
pop
pop
xor
adc
cmps
(bad)
das
adc
call
xor
mov
adc
cmp
xchg
adc
out
test
mov
outs
inc
jl
cmp
mov
cmp
cmp
adc
jl
sub
pop
cmp
adc
and
sub
jo
or
dec
test
and
sbb
inc
cmp
popf
ss
push
sbb
ret
push
test
push
int3
jmp
adc
push
aas
ret
xlat
push
test
imul
pop
adc
int3
add
lods
sahf
adc
mov
rcr
sub
in
xor
mov
cmp
fild
loopne
inc
arpl
xchg
and
pop
sbb
pusha
push
in
jns
or
je
dec
daa
int3
pop
cmp
xor
cmc
mov
or
push
hlt
jmp
paddsb
push
adc
xchg
cwde
inc
cmp
aad
xchg
aam
pushf
mov
sbb
push
add
imul
(bad)
and
movs
pop
inc
sub
pop
sub
mov
add
out
rol
pop
lahf
pop
fcomp
mov
pop
add
fs
add
cmp
jns
sub
loopne
shl
cmp
mov
jne
aad
or
push
pop
jp
(bad)
mov
mov
adc
lds
(bad)
rol
stc
inc
cld
xchg
adc
loope
lahf
xchg
xor
jg
imul
adc
test
lahf
cmp
ret
addr16
mov
sti
shr
popa
ds
inc
ds
lods
add
loop
add
mov
or
mov
inc
clc
fs
mov
(bad)
cmps
xchg
push
nop
adc
lods
lock
add
inc
(bad)
inc
mov
jg
jno
outs
sub
or
sbb
sub
dec
adc
mov
sbb
test
sub
inc
lods
add
out
imul
in
(bad)
outs
adc
movs
fstp
jmp
xor
rcl
pushf
xor
pop
jle
xchg
and
std
and
sbb
sub
pop
push
add
ror
sub
or
inc
daa
or
cmp
push
ins
jne
mov
retf
popa
pop
cmp
jne
ret
jmp
sub
fcmovnbe
lods
hlt
and
or
cli
sub
imul
cli
xchg
lock
call
add
push
lock
lock
inc
jecxz
xor
pop
add
cmp
ins
or
sub
fcomp
mov
fistp
fwait
js
jno
addr16
test
stos
pop
shr
sar
jbe
and
sbb
dec
mov
imul
in
push
into
arpl
xor
lock
add
adc
or
enter
add
add
mov
mov
mov
scas
shl
xlat
mov
mov
lods
inc
add
data16
or
inc
mov
loopne
push
xor
stos
lahf
add
xchg
or
ret
pop
clc
adc
addr16
fisubr
jbe
push
add
xchg
ret
mov
sbb
jbe
test
adc
mov
jbe
test
inc
push
loope
add
adc
stos
test
xchg
xor
movs
out
ret
pop
cmp
xor
dec
setb
jb
inc
clc
add
aaa
test
cmps
scas
adc
push
imul
ret
(bad)
push
clc
sahf
aad
(bad)
mov
lock
cmp
cmp
adc
mov
cmp
call
jecxz
mov
pop
dec
sbb
sub
outs
inc
pop
sbb
sbb
pop
push
inc
std
pop
inc
cs
mov
(bad)
jl
and
std
xchg
push
inc
jnp
fsub
jle
outs
cmp
cmp
clc
addr16
xchg
mov
push
sbb
pop
jne
xor
mov
push
push
push
pop
inc
push
into
mov
div
xor
inc
add
cmps
(bad)
loop
lea
mov
inc
call
and
mov
mov
movzx
rcr
sbb
mov
jg
int
sahf
push
dec
not
add
imul
sub
sub
aas
rol
add
inc
or
pop
jl
mov
xor
sub
int3
sbb
add
add
push
and
cmp
or
clc
daa
inc
push
dec
enter
add
and
sub
sbb
adc
sub
test
or
aas
push
sahf
xchg
pusha
jns
and
loope
pop
in
lods
mov
rol
inc
push
mov
sbb
dec
pushf
imul
mov
jbe
jge
sbb
mov
dec
aam
scas
leave
add
sub
cmp
push
or
in
call
or
jg
lods
add
movs
scas
clc
std
out
or
call
dec
adc
xchg
or
ins
or
push
push
cmp
jne
adc
fnstenv
hlt
inc
dec
sbb
sub
mov
adc
pop
add
cmps
push
sbb
sub
add
int3
ret
sbb
jns
hlt
lock
ret
dec
dec
lock
jmp
sub
inc
fstp
daa
mov
outs
rcl
dec
inc
xchg
mov
test
dec
inc
pop
pop
xlat
hlt
and
mov
jmp
or
dec
adc
jb
jp
popa
inc
mov
cmp
jg
int3
sti
add
adc
cmp
jmp
inc
push
cmps
push
les
cmp
pop
test
cmp
(bad)
outs
mov
rol
add
or
nop
jmp
mov
and
dec
xlat
mov
push
mov
mov
sub
cmps
push
or
pop
pop
sub
jne
jbe
and
fs
jmp
xchg
xchg
xlat
nop
shr
push
sbb
and
jbe
inc
push
xchg
jmp
pcmpgtb
jmp
arpl
add
test
mov
imul
ret
mov
sar
in
jge
pusha
xor
hlt
mov
pop
sub
(bad)
loop
inc
shr
xor
sbb
enter
test
test
and
cs
adc
add
push
mov
popf
push
loopne
sbb
daa
push
mov
dec
loop
pop
or
or
mov
jo
sbb
shl
jp
and
and
sbb
pusha
add
push
(bad)
movaps
push
mov
pop
in
shl
xor
call
stos
cmc
push
data16
sub
shl
in
push
ficom
or
adc
add
adc
inc
mov
adc
fdiv
add
neg
adc
clc
gs
push
cli
fist
jle
add
cmp
dec
sbb
and
sub
lea
stc
out
shl
in
mul
loopne
test
xor
sbb
hlt
sub
enter
or
sbb
mov
pop
inc
shl
or
cmp
add
loop
jmp
push
inc
and
pop
stos
or
or
sub
and
adc
inc
retf
out
or
daa
push
hlt
sub
call
jno
stos
mov
pusha
test
push
mov
ret
adc
ins
adc
movs
jl
nop
push
sub
dec
push
ds
lods
adc
pop
add
call
xor
cdq
int3
jp
cmp
xchg
cmp
shl
mov
add
(bad)
mul
arpl
(bad)
sbb
test
add
out
inc
test
scas
fdivr
mov
push
push
push
and
push
jne
jo
sbb
fnsave
jns
aaa
pusha
cmp
adc
push
fwait
inc
ret
je
push
in
and
jg
test
loope
sar
(bad)
ins
jnp
adc
cs
mov
sub
jge
pop
add
icebp
loopne
rcl
sbb
jne
and
sub
shl
pop
inc
fmul
shr
(bad)
call
aas
push
or
add
sub
push
dec
daa
lock
push
scas
mov
dec
ficom
xchg
mov
scas
daa
sbb
es
sbb
aaa
mov
jge
fmul
push
mov
mov
cmp
dec
sbb
dec
xor
jnp
mov
dec
adc
aad
repnz
mov
aaa
and
fldcw
scas
add
and
pop
adc
xchg
sahf
inc
lods
pop
addr16
mov
jle
and
push
or
cmps
repnz
jmp
ins
xor
out
int3
and
and
pusha
add
mov
cmps
adc
pop
or
nop
or
adc
(bad)
clc
aas
adc
pushf
pop
sbb
jecxz
pop
dec
outs
es
xlat
mov
ins
cmp
shr
push
retf
mov
adc
jne
mov
inc
or
mov
(bad)
fdiv
int3
push
loopne
mov
addr16
cmp
mov
lods
add
movs
or
test
dec
or
(bad)
aas
jmp
pop
push
mov
fild
inc
cmp
xchg
dec
call
jne
cmc
movs
or
mov
lea
int
jb
and
mov
cld
rcl
jl
lea
xor
xor
pop
sub
mov
test
push
je
or
lods
jo
icebp
mov
lea
mov
mov
cmp
out
or
mov
pop
add
nop
xor
sbb
inc
arpl
popa
mov
adc
pop
pushf
and
scas
push
add
xor
adc
push
jg
xchg
mov
add
mov
aam
push
sub
int3
mov
dec
enter
push
dec
jns
imul
mov
fistp
pop
sahf
sub
xchg
fwait
cmps
aam
adc
stos
push
adc
fadd
enter
cmp
pusha
pusha
mov
(bad)
shr
retf
loopne
add
push
mov
cmp
sub
mov
sub
lods
in
xor
sbb
inc
fistp
pop
out
add
push
adc
fimul
add
out
jmp
ds
add
push
rol
shl
and
mov
mov
or
les
das
call
cmp
mov
fdiv
lock
adc
inc
loopne
cmps
std
xchg
inc
lea
iret
ss
cwde
or
pop
mov
or
add
mov
ror
adc
xchg
cmp
es
xchg
adc
xchg
sbb
push
pop
pop
push
sub
xchg
adc
test
jbe
or
push
setns
mov
sub
into
in
mov
jb
cli
push
loopne
or
add
test
mov
add
fstp
xchg
push
sar
js
les
mov
push
into
push
lahf
dec
es
dec
dec
outs
inc
cmp
je
test
aaa
(bad)
dec
fwait
mov
add
shl
shl
das
add
and
inc
add
mov
add
add
ret
xchg
push
cs
dec
loop
in
and
loopne
enter
sar
movs
clc
inc
mov
inc
push
ins
xchg
in
ficomp
in
fs
gs
je
inc
shr
(bad)
(bad)
dec
rol
ror
sub
push
mov
or
push
jecxz
in
aas
outs
loopne
std
mov
mov
mov
and
inc
or
jo
mov
mov
in
popa
aaa
(bad)
xor
mov
dec
ror
dec
mov
mov
push
mov
cdq
call
sbb
sahf
inc
pop
or
stc
dec
sub
or
mov
xor
ins
cmp
xlat
cmp
xor
and
idiv
inc
dec
jno
inc
inc
dec
das
mov
inc
cld
xchg
loopne
push
movs
arpl
xor
int3
push
ret
push
bound
fdiv
push
nop
fs
js
sbb
bt
sbb
das
loopne
jecxz
push
adc
mov
inc
add
cdq
mov
push
and
(bad)
push
pop
pop
scas
pop
sbb
pop
xor
pop
push
imul
test
xchg
sbb
(bad)
neg
js
sar
inc
pusha
push
mov
or
sub
adc
(bad)
pop
std
jg
js
shr
loope
sub
bound
inc
and
sti
mov
cmp
and
pop
xor
sub
push
push
or
loope
enter
sub
add
mov
cmp
dec
mov
mov
add
shl
int
jl
in
jbe
xor
sbb
mov
mov
push
xchg
fadd
(bad)
(bad)
push
push
push
mov
pop
xor
push
push
mov
dec
or
in
pop
xor
xchg
cs
fdivr
add
sbb
retf
xor
mov
ds
mov
(bad)
fadd
imul
lahf
add
repz
adc
and
or
mov
std
fwait
mov
out
fisubr
fsub
cld
jge
pushw
xor
mov
shr
inc
lods
cli
(bad)
mov
xor
fdivr
xor
xor
xor
js
mov
pop
cld
(bad)
sub
mov
xor
out
dec
ins
loope
sub
cs
and
cld
pop
sub
cmp
(bad)
test
rcl
mov
push
add
add
stos
ins
mov
push
xor
push
lock
mov
jecxz
fdivr
and
loopne
mov
add
scas
sbb
xchg
and
push
sbb
pop
out
neg
sbb
pop
(bad)
dec
or
pop
daa
xor
xchg
inc
xor
lea
mov
pop
aaa
lock
je
add
rcr
sub
cmp
ret
xchg
dec
pusha
js
sub
mov
pushf
push
inc
rol
or
inc
(bad)
cmp
pop
sbb
ret
mov
mov
rcr
push
mov
mov
sti
cld
sbb
repnz
mov
pop
mov
inc
or
adc
mov
(bad)
mov
mov
add
mov
mov
gs
inc
mov
or
sub
xlat
push
(bad)
and
fld
xchg
cmp
imul
das
mov
add
cli
mov
mov
push
push
push
cmp
out
aaa
sub
movs
jg
sbb
fisubr
adc
xor
fs
mov
jp
loopne
mov
rcl
lods
push
mov
push
mov
sbb
pop
adc
add
aas
ret
div
push
repnz
add
or
sbb
outs
nop
xlat
push
adc
fild
lock
xchg
iret
or
stc
stc
ficom
add
and
or
rcl
xor
xor
pop
fdivr
fild
add
adc
push
inc
repnz
mov
aaa
shl
inc
sub
fstp
ins
stos
dec
sbb
xor
xor
(bad)
je
add
or
mov
in
pop
jl
or
sub
sub
shr
fwait
test
or
jp
pop
scas
loop
sub
push
and
cmc
add
add
jne
mov
mov
mov
ret
mov
movaps
pop
fs
sub
gs
data16
push
fcomip
jnp
inc
test
jne
aas
push
lds
adc
inc
mov
xor
popa
pop
pop
lock
(bad)
push
push
sar
push
mov
ret
mov
repnz
mov
dec
mov
sub
sub
daa
fs
push
nop
(bad)
popf
nop
pop
ret
aas
mov
(bad)
or
or
xchg
call
in
loop
(bad)
not
mov
and
and
or
aaa
dec
add
sbb
js
cld
test
or
mov
repnz
mov
sbb
movs
pop
or
dec
dec
xor
pop
push
push
pop
sbb
loopne
or
sbb
dec
or
push
(bad)
ss
ficomp
jb
push
dec
jno
push
lahf
or
jae
push
popf
sub
push
sbb
push
mov
adc
mov
imul
not
mov
push
mov
sub
mov
retf
(bad)
sti
enter
rol
lock
xchg
addr16
stc
mov
add
inc
pop
add
push
clc
gs
sbb
and
pusha
call
fscale
mov
mov
test
add
es
adc
xlat
sbb
push
ret
jg
jecxz
imul
fs
xor
mov
sbb
dec
fstp
push
push
pop
xor
cmp
push
repnz
or
pusha
jae
call
call
push
jge
retf
fcmovb
dec
retf
xor
mov
jmp
push
movs
ret
adc
pop
inc
inc
bound
ret
mov
mov
ja
add
mov
mov
cli
cmc
and
call
xchg
loopne
cs
ins
mov
mov
cli
cdq
ficom
les
xor
sub
xor
push
add
enter
pop
xor
pop
or
xchg
cld
idiv
push
or
pushf
clc
jecxz
adc
ins
in
dec
clc
imul
call
loope
add
lahf
or
add
mov
push
xor
cmp
js
jmp
ret
xor
(bad)
loop
add
sbb
mov
sub
sbb
shr
aas
xchg
or
cli
cmp
push
or
inc
and
inc
jnp
dec
jp
jnp
movs
adc
into
cli
xor
add
mov
lock
mov
es
rol
aam
(bad)
jg
xchg
sub
add
mov
push
pop
dec
lea
(bad)
call
mov
mov
xchg
xchg
xchg
mov
xor
adc
(bad)
cmp
lock
pushf
in
inc
clc
mov
in
retf
out
or
frstor
(bad)
mov
xor
push
dec
pop
fcomip
sub
scas
mov
clc
adc
mov
cli
fstp
inc
ret
mov
lods
push
call
es
fmul
call
(bad)
call
fsubr
iret
mov
les
repnz
retf
icebp
mov
aaa
jmp
push
push
loope
fsub
mov
cmp
in
dec
jl
shr
pusha
sbb
xor
mov
pop
pop
jle
out
clc
push
push
push
mov
mov
sar
sub
add
dec
fdivrp
mov
aam
retf
xor
fsub
inc
xor
or
and
or
shl
mov
jae
sub
stos
adc
mov
shl
mov
xor
add
and
js
dec
loopne
mov
ds
add
sub
pop
mov
sbb
jb
pusha
call
mov
jmp
dec
add
mov
mov
pop
inc
mov
imul
xchg
shl
mov
jbe
pop
sbb
xor
loope
fst
div
jmp
js
and
daa
retf
or
sbb
mov
and
cdq
sbb
sbb
jg
xchg
xor
mov
push
rcl
pop
(bad)
gs
div
jp
iret
adc
gs
dec
sub
mov
ds
lock
jp
push
fadd
sub
add
jns
in
bnd
dec
xchg
loope
mov
fdivr
je
pop
add
mov
cmps
cwde
mov
mov
mov
mov
(bad)
pop
push
rcr
sub
mov
or
mov
mov
mov
inc
call
adc
xor
and
xor
xchg
call
call
and
pusha
add
mov
stos
mov
fcos
or
scas
repnz
mov
cmp
inc
pop
cmc
aas
cwde
inc
scas
or
addr16
loop
sbb
mov
add
cli
sub
mov
pop
pop
sub
int3
adc
inc
les
cld
out
fsubr
pusha
or
inc
fadd
or
idiv
mov
outs
(bad)
mov
fild
add
aam
add
mov
or
cmp
mov
add
xchg
push
dec
jb
cli
pop
ja
mov
in
jle
ins
sub
mov
mov
and
xor
data16
loope
pop
jecxz
add
pop
push
or
and
js
inc
repnz
adc
into
mov
sbb
clc
mov
sub
mov
bound
sub
xor
inc
add
inc
addr16
pop
sti
cmp
clc
mov
inc
movs
int3
scas
ss
lock
xchg
xor
pop
jg
loop
leave
cmp
xchg
mov
add
mov
mov
leave
fidivr
ret
outs
cmp
dec
dec
nop
push
mov
pop
pop
sub
sub
ja
mov
mov
dec
ror
jle
(bad)
mul
or
mov
xchg
xor
dec
inc
mov
repz
ffreep
add
rcl
in
outs
(bad)
mov
movs
add
push
in
mov
test
fsub
loop
dec
dec
add
rol
retf
add
and
dec
stos
and
data16
ds
mov
jns
lock
ret
cmp
loopne
(bad)
stos
push
add
js
(bad)
add
retf
add
sbb
add
pop
loopne
mov
sar
mov
adc
push
push
lock
push
leave
cmp
mov
sbb
int
sbb
push
push
or
arpl
sbb
scas
cli
pop
daa
call
sbb
lods
dec
or
movs
(bad)
mov
mov
call
rol
mov
cli
sub
mov
push
push
rol
mov
fdivr
adc
mov
and
sbb
push
jo
sbb
ja
shl
sub
push
mov
xchg
int
stc
ins
ins
jb
xor
sub
jecxz
xchg
loop
(bad)
das
scas
aam
mov
inc
fs
(bad)
mov
mul
sbb
cli
gs
jle
xlat
ficom
jns
cmc
dec
jle
or
js
test
sbb
fsubp
in
aaa
outs
iret
es
pop
rcr
inc
out
repz
es
xchg
push
out
(bad)
sub
xchg
adc
mov
sub
retf
mov
dec
push
rol
mov
mov
fmul
shld
sbb
loopne
les
ss
add
lds
ds
or
sbb
test
add
push
clc
iret
sbb
push
push
scas
sti
out
dec
js
iret
inc
pop
xchg
pop
dec
(bad)
(bad)
sub
mov
lods
pop
add
(bad)
mov
pop
mov
mov
pop
pusha
add
sbb
add
pop
cmp
dec
and
mov
sbb
idiv
lds
dec
sub
mov
movs
or
ret
test
sub
xor
push
rcr
pop
push
mov
push
ins
sti
(bad)
push
js
add
inc
inc
adc
mov
test
cmps
add
(bad)
pop
cld
cmps
push
inc
inc
pop
jns
sar
sub
mov
push
pop
mov
add
mov
test
add
in
fist
sbb
sbb
lock
mov
(bad)
pop
and
into
mov
outs
outs
pop
add
mov
or
fistp
mov
add
mov
and
xlat
idiv
(bad)
test
jnp
jle
lea
call
xor
test
mov
and
call
repnz
mov
cmp
sub
pop
lock
jns
push
inc
sub
or
nop
push
xor
mov
sub
fnstsw
shr
and
lahf
cmp
or
dec
sar
shl
outs
aam
inc
mov
movs
imul
fstp
repnz
fnsave
retf
inc
sti
push
fdivr
mov
push
mov
add
clc
gs
xor
mov
fs
and
add
repnz
(bad)
retf
call
add
lods
popf
push
sbb
das
call
mov
pop
fcmovnu
cmps
dec
and
mov
cli
mov
retf
mov
jecxz
shl
test
into
sub
cld
in
or
jmp
push
or
mov
push
mov
test
ja
jg
daa
push
mov
mov
je
jl
(bad)
sub
add
pop
xor
pop
inc
scas
or
xor
pusha
sbb
or
jns
loopne
sub
enter
mov
xchg
sbb
lock
jb
(bad)
mov
fdivr
stos
lock
popf
int3
sbb
cmp
cli
inc
sub
pushf
pop
mov
adc
push
xor
bound
loopne
mov
dec
shl
mov
cmp
ret
or
sbb
int
adc
inc
pop
adc
loopne
xor
call
add
rcr
div
sbb
adc
add
inc
loopne
and
fiadd
add
push
pop
mov
cmp
repnz
jmp
rol
mov
inc
xchg
push
inc
sub
(bad)
(bad)
sbb
sub
outs
mov
sub
mov
jg
mov
das
inc
xor
push
jns
arpl
mov
push
xor
mov
dec
mov
cld
xchg
sub
and
sti
lds
dec
js
test
test
jg
pop
jmp
aas
jmp
scas
out
cmps
or
adc
jle
pop
faddp
icebp
in
in
repnz
jl
imul
cmp
fnstcw
push
dec
cmps
es
ins
je
dec
sub
cs
sbb
hlt
dec
mov
mov
mov
xor
cld
or
jle
fst
out
push
aad
fwait
inc
cld
cwde
sbb
xchg
add
xor
fbld
pusha
sar
dec
idiv
cs
mov
aas
cmp
out
jle
fbstp
iret
push
mov
jge
pusha
(bad)
cdq
and
mov
adc
imul
ins
mov
out
call
inc
adc
add
mov
mov
in
in
(bad)
dec
mov
call
and
arpl
sahf
mov
jno
dec
sti
aas
icebp
push
sub
xor
mov
xor
fwait
jmp
repnz
ds
mov
call
in
mov
add
jl
xor
push
mov
cmps
ja
inc
out
fisubr
mov
(bad)
jnp
mov
sub
mov
jnp
aaa
rcr
push
loope
push
pop
fdivr
test
aas
sub
fiadd
rcl
cld
div
fild
mov
ror
dec
call
jecxz
lock
sbb
(bad)
sub
sahf
rcl
dec
ret
add
stos
add
aaa
outs
jb
out
push
add
test
sbb
xchg
add
mov
frndint
or
push
add
mov
sub
push
dec
rcl
scas
sub
cmp
or
cmp
push
rcl
adc
retf
sbb
add
cld
mov
xor
ss
jmp
mov
pop
ds
xchg
mov
imul
(bad)
mov
and
mov
outs
mov
call
sbb
cmp
int3
test
sbb
pop
xchg
rol
sbb
stos
pop
cmp
in
call
add
jo
mov
mov
sar
push
jo
stc
jp
cs
stc
xchg
shl
stos
sub
mov
sbb
add
out
xchg
ins
ffreep
sub
icebp
fs
daa
test
dec
call
cmp
cmp
or
jl
xlat
mov
mov
jnp
and
push
pop
add
mov
loope
rcr
(bad)
cmp
aad
mov
mov
sub
push
mov
lds
in
mov
push
pop
mov
enter
mov
cmp
sub
shr
or
pop
pusha
test
pop
lock
inc
jns
loopne
jne
jl
push
push
sbb
inc
pop
ds
jmp
mov
sbb
aaa
sub
dec
sahf
(bad)
retf
add
cmc
outs
sbb
not
mov
jp
or
sbb
xchg
lock
data16
mov
aas
ret
push
pop
xchg
mov
inc
add
in
call
add
add
push
mov
(bad)
push
aaa
jae
inc
jbe
imul
shl
test
retf
loopne
jecxz
jne
(bad)
(bad)
hlt
loope
pop
test
in
icebp
adc
enter
pop
iret
mov
sub
add
or
push
aaa
jno
je
imul
scas
out
or
or
shr
cmps
imul
and
sbb
adc
pop
or
sub
and
inc
mov
pop
aaa
call
fisttp
popf
jmp
cmp
pop
mov
ret
ror
mov
pop
jecxz
sub
ret
mov
test
outs
outs
sahf
add
popf
sub
fadd
add
add
lock
sub
push
aam
sub
std
add
xor
mov
dec
out
lods
aaa
add
loope
(bad)
in
es
adc
push
add
jmp
dec
iret
mov
sbb
pushf
and
jne
stos
pop
mov
pop
dec
adc
xor
in
mov
ds
(bad)
cmp
leave
xor
ret
clc
mov
(bad)
fcmovnb
add
(bad)
into
pop
mov
fsub
mov
jbe
xor
mov
dec
sbb
cmp
xor
sub
jle
jne
daa
cmp
scas
clc
fiadd
inc
xchg
dec
in
sub
retf
pusha
push
pop
das
ret
pop
sub
sub
lods
sub
add
jge
fwait
mov
call
out
in
inc
xchg
jg
jecxz
ja
xor
xor
jle
sbb
cli
mov
or
xor
jl
jle
mov
scas
ret
xor
xor
(bad)
mov
sbb
and
mov
mov
jle
adc
cli
or
aaa
sbb
out
std
jl
adc
lods
add
pusha
jg
cdq
jb
dec
ficomp
mov
es
loop
and
popa
sahf
scas
loopne
cli
or
pop
js
sbb
nop
test
cmp
test
add
jo
adc
sbb
and
adc
and
add
nop
xor
mov
fs
shr
jmp
xor
je
ja
dec
inc
xor
sub
add
mov
and
(bad)
scas
(bad)
pop
mov
pop
inc
push
movs
je
mov
inc
xchg
arpl
in
mov
icebp
aaa
ss
iret
add
jns
loopne
in
and
ja
sbb
xchg
ss
(bad)
fisttp
js
dec
out
ins
and
sub
push
sbb
jle
(bad)
adc
add
push
xor
das
scas
iret
or
sbb
fbstp
xor
pop
add
push
push
daa
shl
mov
leave
bound
(bad)
in
mov
cli
cwde
pop
add
add
(bad)
outs
and
xchg
xchg
or
mov
js
sub
(bad)
push
jg
div
mov
add
xchg
jbe
and
adc
test
iretw
mov
jns
xchg
inc
outs
push
xor
add
mov
test
xchg
jp
loop
mov
test
mov
nop
or
xor
clc
lea
aaa
and
cli
lock
fcmovb
imul
das
mov
shr
popa
mov
inc
adc
mov
hlt
xchg
sbb
loop
cld
push
loopne
(bad)
aam
js
xchg
outs
cwde
test
ins
(bad)
mov
hlt
push
pop
dec
mov
mov
add
push
xor
inc
test
jne
aas
pop
rcr
inc
hlt
cwde
jb
in
adc
js
loope
add
add
add
or
rcr
mov
je
add
clc
cmp
dec
sub
iret
mov
mov
push
outs
retf
sbb
test
push
push
dec
sbb
push
(bad)
imul
add
into
mov
xchg
mov
push
add
mov
ins
xchg
sub
inc
mov
add
mov
std
mov
dec
jg
add
loope
test
push
or
sub
fist
loop
fdivr
mov
xor
cmp
mov
test
cmp
pop
cdq
hlt
not
pop
lock
dec
lea
dec
js
xchg
add
jmp
idiv
adc
shl
adc
fwait
xor
mov
pop
je
mov
push
sbb
push
jp
sub
mov
jnp
lds
sbb
test
jo
nop
les
outs
lods
jmp
sar
mov
mov
push
sbb
mov
mov
aam
add
test
ins
xor
mov
aaa
ret
loop
inc
out
mov
icebp
fsub
xchg
es
xor
mov
lods
(bad)
mov
pop
loop
pop
js
add
into
add
mov
xor
leave
scas
int
push
mov
cmp
aad
add
xor
test
add
stc
mov
rcr
aaa
retf
jnp
aas
adc
mov
jp
xor
xlat
into
int3
push
jg
fidivr
pop
fist
jl
and
lahf
aas
pop
sub
aam
scas
jle
jg
xlat
in
pusha
add
mov
scas
jecxz
add
push
ret
mov
es
in
add
fsub
leave
xor
xchg
adc
ds
int
aaa
xor
mov
push
pop
out
jbe
fisttp
div
(bad)
clc
outs
push
mov
jno
mov
movs
scas
fbstp
sbb
push
outs
mov
pop
inc
pop
loope
pop
push
push
mov
cli
mov
mov
jns
push
push
push
loope
mov
jnp
add
adc
in
jmp
loopne
rol
cli
mov
sub
(bad)
jns
sub
sti
sbb
sbb
or
and
idiv
or
(bad)
shl
clc
jae
dec
pop
add
fistp
not
or
pop
push
aaa
jb
cmps
lods
pusha
add
hlt
enter
push
(bad)
mov
push
xor
in
mov
push
pop
stc
mov
push
push
mov
pop
add
retf
sti
xchg
push
ret
mov
sbb
cmp
xchg
out
jne
jl
(bad)
(bad)
mov
pop
mov
int
cmp
ss
sub
mov
mov
sub
mov
jecxz
jge
sub
out
mov
scas
bound
xor
mov
fisttp
ret
fadd
js
xor
fild
loope
inc
mov
mov
cmp
lock
outs
ins
push
sub
cmps
loope
or
jmp
push
out
adc
rcr
int3
xchg
lock
int3
cdq
mov
in
loopne
clc
stos
cmp
sub
push
aas
dec
mov
js
sub
sub
ja
aas
adc
and
or
adc
add
and
push
mov
sub
test
jnp
dec
add
or
ins
sub
cld
mov
cwde
aaa
push
jg
popf
sub
lahf
mov
sub
(bad)
(bad)
fild
xchg
and
and
je
sbb
inc
lods
aas
push
xchg
cdq
js
jns
mov
cmp
(bad)
push
mov
xchg
jmp
data16
inc
push
mov
inc
fisubr
cmp
push
mov
mov
aam
mov
(bad)
sbb
mov
mov
push
(bad)
aad
ss
and
add
fs
mov
push
clc
cld
cmp
xchg
out
add
or
(bad)
dec
sbb
out
jmp
adc
mov
push
dec
test
xchg
mov
fs
ret
add
mov
push
push
mov
xchg
mov
mov
(bad)
neg
enter
cmp
mov
fisub
add
loopne
(bad)
rol
(bad)
or
es
xchg
test
push
rcr
add
outs
dec
cli
mov
(bad)
mov
mov
clc
pop
cld
or
cmp
adc
enter
ss
cdq
inc
jge
dec
das
fimul
imul
repnz
inc
out
mov
sbb
push
hlt
jnp
loope
out
in
fisttp
add
inc
add
or
and
lock
(bad)
sub
sub
mov
push
jl
cmps
xchg
movs
pop
lock
pop
and
sbb
enter
pop
dec
dec
jge
je
pop
xor
sub
xchg
outs
mov
jmp
sub
call
int
jnp
jnp
(bad)
das
and
pop
cld
sbb
inc
or
xor
ja
mov
aam
test
fadd
cmps
ins
dec
sub
jne
pop
enter
push
mov
ins
xor
int3
fwait
aaa
mov
sub
xchg
mov
outs
jne
inc
cwde
mov
push
pop
xor
xlat
pushf
ret
ja
mov
push
(bad)
jmp
pop
jo
adc
jg
mov
mov
push
aam
ret
(bad)
js
or
add
movs
inc
add
jge
jmp
mov
fdivr
jmp
mov
push
mov
xor
ret
pop
cmp
ror
ret
jg
adc
(bad)
cmps
and
mov
xor
loopne
das
clc
dec
(bad)
popf
mov
add
cmp
adc
sbb
test
inc
outs
pop
icebp
mov
(bad)
cmp
inc
aaa
xor
and
push
mov
mov
mov
test
(bad)
inc
and
pop
inc
ss
int
sub
inc
clc
adc
cmp
scas
in
mov
sub
bound
fiadd
fdiv
data16
mul
(bad)
xlat
jmp
sbb
xor
pop
loopne
and
mov
xor
out
sahf
fild
ja
inc
movs
and
push
mov
loopne
and
js
or
(bad)
fistp
cmp
out
xchg
dec
push
es
and
ficom
pop
mov
or
add
into
(bad)
adc
sar
jb
ret
std
shl
or
clc
jno
shr
iret
in
js
mov
xor
lds
cli
mov
ins
cmp
or
inc
mov
mov
cmp
mov
lahf
mov
jns
jmp
mov
mov
aaa
cmps
push
mov
xor
xor
mov
add
mov
add
jecxz
idiv
mov
fsubr
mov
(bad)
(bad)
xchg
sti
xchg
jmp
pop
add
xchg
out
push
ds
retf
loopne
push
cdq
call
mov
sti
push
mov
pop
xor
mov
ss
loopne
mov
clc
sbb
jne
out
cmp
fcomip
add
inc
shr
sub
sub
icebp
sbb
mov
push
add
add
push
push
mov
mov
push
(bad)
push
pushf
in
push
cmp
jl
sbb
adc
ins
push
mov
adc
jp
stos
jl
shr
push
and
sti
dec
pop
dec
mov
jae
shl
jmp
xor
xchg
ret
dec
(bad)
xchg
mov
and
adc
test
or
aam
outs
inc
push
icebp
or
xchg
das
ret
pop
fmul
or
lock
(bad)
sub
mov
sub
push
mov
call
ins
sar
dec
adc
in
push
mov
inc
or
mov
inc
or
in
retf
sbb
mov
repz
add
test
mov
ds
mov
in
pusha
xor
fidivr
dec
and
fimul
dec
ret
outs
cwde
cld
dec
push
push
jecxz
adc
sub
fbstp
mov
push
sahf
test
dec
(bad)
push
xchg
dec
mov
add
ror
hlt
dec
dec
into
inc
dec
inc
xchg
into
mov
adc
mov
mov
sub
mov
jge
es
lea
dec
lock
mov
fwait
add
dec
mov
rcl
push
and
fisubr
ja
int
add
inc
push
cdq
add
fisubr
cld
xchg
and
std
jp
loopne
add
mov
sub
imul
retf
pop
sub
mov
mov
cwde
neg
aaa
and
imul
sbb
popf
jmp
dec
test
jb
retf
sbb
ror
shl
jno
mov
pop
pop
mov
inc
dec
dec
daa
scas
push
ins
sub
mov
inc
jle
push
mov
add
push
inc
and
add
or
cmp
rcr
xor
or
(bad)
sti
mov
add
xchg
call
push
sub
adc
test
std
(bad)
popa
mov
imul
sar
data16
pop
push
mov
aad
add
into
repnz
(bad)
repnz
jg
push
push
push
or
cmp
je
push
idiv
cmp
jne
push
mov
jle
push
and
inc
jmp
fisubr
clc
inc
push
mov
push
adc
jl
pusha
jle
add
jl
jp
lea
les
pop
xor
add
jle
cmp
push
sbb
dec
inc
ins
pop
aam
ins
scas
push
add
ins
inc
fs
(bad)
add
ret
dec
(bad)
outs
xor
ds
inc
popa
ins
popa
and
mov
outs
add
push
test
jne
es
gs
das
jnp
and
mov
rol
xchg
js
pop
imul
mov
aam
addr16
jle
jb
and
(bad)
popa
ret
test
push
and
cmp
outs
dec
dec
push
sbb
and
push
mov
cmp
adc
pop
mov
test
js
cmp
mov
sub
imul
mov
jle
imul
cmps
iret
outs
fs
imul
pop
popa
jb
jb
loopne
cmp
mov
dec
cmovb
or
lods
out
data16
imul
push
(bad)
in
fsubr
leave
pop
jns
cld
and
jo
adc
je
aam
add
cmp
sbb
(bad)
nop
in
aas
or
mov
adc
adc
mov
loop
nop
mov
jmp
pop
mov
dec
lods
je
(bad)
mov
mov
mov
dec
popf
pusha
shl
xor
push
add
xor
je
hlt
sti
inc
cld
dec
inc
sti
shl
push
inc
jle
xor
mov
imul
mov
xchg
fucomp
in
push
push
cmps
and
xchg
xchg
js
mov
push
call
push
push
push
adc
push
dec
mov
popa
xchg
xor
les
inc
jmp
call
cmp
out
inc
je
popf
mov
sbb
push
nop
sbb
push
push
mov
jne
dec
ins
push
mov
arpl
mov
out
push
mov
push
sahf
dec
in
xor
rcr
cmp
inc
jg
add
lea
je
je
test
jg
mov
xor
std
jne
push
jbe
inc
aaa
mov
sub
jne
jne
in
pop
xchg
cmp
jne
mov
not
mov
push
ss
push
enter
xor
cmc
enter
jne
aam
data16
sub
call
add
sbb
xor
add
push
mov
arpl
(bad)
inc
cmp
add
mov
mov
pop
dec
mov
and
add
pop
jmp
dec
add
jae
mov
mov
(bad)
jmp
add
xor
and
inc
(bad)
mov
aas
add
movs
out
in
scas
xchg
mov
(bad)
sbb
(bad)
(bad)
push
bound
pop
out
dec
jmp
(bad)
push
pop
jno
jnp
push
inc
aaa
sub
mov
pop
xor
mov
idiv
(bad)
jge
add
fimul
mov
inc
mov
out
xor
or
and
ret
mov
mov
inc
aaa
mov
in
(bad)
jg
(bad)
pop
sti
ins
dec
lahf
inc
push
mov
aas
mov
dec
inc
pop
inc
(bad)
enter
cld
mov
shl
sub
les
push
dec
cli
std
(bad)
in
mov
adc
mov
das
mov
jp
jmp
aas
inc
ret
add
ret
push
ret
jmp
pop
(bad)
jmp
call
inc
add
or
inc
aas
cmps
sub
xchg
mov
push
mov
ret
pusha
mov
xor
adc
fisub
inc
out
push
push
(bad)
mov
pop
cld
(bad)
dec
push
pop
arpl
or
push
out
shl
scas
jmp
(bad)
aaa
dec
cmp
jg
pop
(bad)
(bad)
or
sub
inc
cmp
push
pop
cmc
out
inc
mov
mov
fsub
fdivr
jg
push
xor
or
jmp
mov
inc
xlat
xchg
or
inc
dec
inc
sbb
loop
int3
out
pop
add
out
add
jg
add
mov
icebp
push
sbb
inc
les
inc
cmp
fild
into
rol
enter
push
ins
pop
mov
or
out
mov
fbld
xor
mov
mov
jo
out
mov
push
lahf
xchg
add
pop
push
(bad)
call
(bad)
xor
and
pop
loop
arpl
bound
std
add
mov
enter
loope
movs
cld
jge
add
pop
inc
and
(bad)
push
jmp
add
aas
out
std
add
int
mov
int
cli
inc
cmc
mov
mov
push
mov
mov
add
add
mov
push
xor
dec
jns
mov
mov
jmp
push
mov
ret
pop
inc
imul
(bad)
dec
in
cmp
lahf
push
push
mov
inc
mov
inc
adc
dec
dec
push
pop
and
push
outs
xor
mov
mov
push
mov
inc
je
pop
adc
mov
mov
and
repz
es
loopne
jae
test
mov
fdiv
jne
jae
push
inc
ss
push
mov
inc
ror
pop
movd
mov
sub
scas
pusha
mov
in
jl
push
mov
pop
arpl
mov
mov
(bad)
pop
jae
imul
inc
fcmovb
push
outs
pop
lock
ret
mov
add
cmp
int
(bad)
mov
and
adc
add
push
dec
mov
mov
jmp
ret
imul
stos
jl
rcr
cmp
add
push
sub
ins
sub
and
aas
or
mul
lds
mov
jnp
push
and
mov
hlt
push
idiv
sar
aas
mov
lock
mov
sub
std
sub
add
in
(bad)
pusha
scas
jb
je
pop
loope
xor
mov
or
mov
jmp
in
mov
mov
pop
jmp
outs
mov
jmp
mov
sub
cmp
add
retf
push
add
das
pop
lock
mov
movs
xlat
dec
out
aas
cli
add
cld
(bad)
cld
ror
mov
test
in
mov
sub
enter
loop
xlat
call
mov
pop
push
add
repnz
add
rol
jo
gs
and
cmp
push
add
sbb
sbb
call
mov
mov
mov
inc
pop
mov
inc
mov
and
jg
inc
icebp
or
xor
or
cld
jae
pop
or
dec
(bad)
cmp
ret
test
xchg
data16
pop
mov
imul
ror
loop
rcr
jae
jmp
mov
hlt
add
aaa
(bad)
movs
mov
clc
sti
jmp
sar
cmp
test
outs
dec
add
mov
jmp
xchg
pop
cmp
fisub
cmc
or
or
xor
sub
pop
jb
inc
rol
xor
dec
mov
add
add
test
adc
in
ja
mov
scas
jmp
repz
mov
aas
add
xchg
outs
mov
call
and
scas
xchg
pop
dec
add
push
sti
call
fisttp
mov
or
bound
inc
fs
cld
imul
mov
fadd
lods
ja
sbb
div
aaa
jmp
(bad)
lahf
add
out
nop
cld
mov
inc
(bad)
sti
mov
inc
add
or
mov
cmp
inc
rcr
inc
push
push
jbe
and
or
jl
aad
cs
(bad)
add
mov
inc
andps
and
or
into
mov
stos
pop
jl
inc
(bad)
aam
pushf
div
dec
rol
test
pop
repz
sub
push
loopne
sub
mov
(bad)
dec
das
adc
jle
retf
mov
mov
inc
out
outs
xor
mov
dec
imul
pop
cmc
xor
push
push
inc
push
outs
inc
push
or
dec
test
ja
push
push
inc
(bad)
mov
gs
dec
stc
xor
xlat
retf
(bad)
shl
xor
ret
sbb
jo
scas
jmp
add
js
adc
mov
lahf
call
call
sti
cli
(bad)
push
sti
mov
cdq
adc
sbb
cld
test
imul
push
(bad)
pop
js
add
scas
pop
ins
jae
or
iret
aad
or
add
lds
adc
pusha
sbb
mov
push
xor
hlt
mov
jg
jno
lds
or
ret
inc
xor
inc
sti
and
inc
ret
retf
inc
out
pusha
jae
mov
mov
inc
out
cs
adc
lea
cmps
aas
(bad)
ss
daa
mov
aas
fcomip
pop
sub
fsubr
push
pop
cmp
jnp
add
push
test
dec
sar
mov
jbe
js
jo
scas
test
inc
pop
xor
inc
mov
pop
push
std
arpl
(bad)
lds
call
push
sbb
outs
fdivr
pop
mov
(bad)
and
pop
inc
das
add
xor
xor
pop
call
fld
dec
idiv
mov
add
(bad)
push
pop
shl
xchg
xchg
sbb
xchg
adc
enter
test
inc
xor
rcr
and
cli
xor
adc
inc
arpl
lds
pop
mov
or
mov
inc
push
call
jmp
aas
out
mov
fidiv
(bad)
inc
pop
fs
push
sti
mov
ret
shr
and
fisubr
ret
or
adc
fstp
cdq
aaa
(bad)
fistp
sbb
mov
mov
std
jae
xor
mov
pop
inc
pop
cmps
push
add
clc
sub
inc
(bad)
inc
mov
adc
sub
mov
js
adc
or
mov
mov
popa
dec
call
repz
adc
pop
push
xor
(bad)
and
sti
cmc
cmp
xchg
dec
enter
jae
mov
(bad)
icebp
push
outs
js
in
ins
ret
xchg
(bad)
into
add
cs
fistp
(bad)
out
mov
or
xor
push
outs
adc
pop
or
add
push
in
fidiv
ret
mov
sbb
sti
enter
jle
mov
rcr
mov
sti
push
push
test
mov
(bad)
rol
ins
rsqrtss
js
jp
je
repnz
imul
mov
pop
mov
(bad)
not
mul
std
aaa
sub
and
aaa
xlat
push
mov
jmp
mov
hlt
jg
jle
ss
cld
dec
pop
push
pop
test
(bad)
adc
ficomp
and
jl
cld
fistp
jae
ins
mov
xor
std
jg
clc
fwait
adc
aas
push
arpl
mov
jmp
enter
pop
mov
(bad)
aaa
loop
fisttp
cmp
xchg
mov
push
add
xrelease
dec
inc
test
cmp
out
aad
lock
sbb
les
in
sti
repnz
outs
xor
lods
std
call
je
fistp
(bad)
call
jmp
mov
pop
push
pusha
in
mov
cli
inc
cmc
test
mov
pop
push
add
mov
inc
dec
out
ins
into
or
scas
sub
add
pop
ret
jg
xor
enter
mov
mov
inc
sbb
popa
into
cli
jnp
out
aas
fdivr
sahf
cli
test
adc
adc
push
ret
ja
not
inc
push
mov
adc
cmp
xchg
enter
jae
jae
pop
inc
mov
shr
shl
mov
mov
push
clc
jmp
clc
dec
mov
sti
inc
out
sahf
sti
dec
xchg
aad
add
mov
(bad)
push
ret
push
pop
stos
in
(bad)
std
push
push
pusha
xchg
pop
xor
(bad)
hlt
or
push
or
cmp
iret
stos
mov
lds
mov
add
xor
ins
sub
(bad)
pushf
or
push
inc
cwde
fwait
mov
push
mov
xor
cmp
xor
inc
push
stc
or
adc
mov
gs
data16
lock
jmp
push
inc
xor
call
call
aas
out
xchg
mov
out
pop
mov
xchg
dec
adc
das
mov
xor
cmp
sub
mov
ror
call
es
jmp
dec
mov
mov
sti
mov
out
sub
int
mov
add
lahf
mov
int3
sar
pop
repz
adc
add
cld
dec
inc
std
out
inc
in
dec
out
pop
hlt
loope
mov
test
or
cmc
(bad)
push
push
push
add
push
mov
test
loope
clc
ret
int
push
add
dec
add
pusha
(bad)
fwait
sbb
je
mov
mov
(bad)
cli
jb
xor
jle
dec
push
inc
gs
pop
add
push
jae
repnz
(bad)
hlt
push
xchg
out
cmp
inc
sti
or
cld
mov
add
fs
mov
jg
test
inc
cmp
push
xchg
cmp
dec
jno
cmps
aas
inc
(bad)
xor
xor
stos
fcomip
sub
stos
pop
inc
or
push
out
mov
out
mov
xor
fcmovb
outs
push
dec
mov
lahf
fistp
push
add
adc
repz
sbb
stos
pop
cmp
test
cmc
sti
mov
inc
retf
mov
das
pop
out
(bad)
pop
je
mov
jmp
jl
sub
inc
loope
fild
out
arpl
sar
jg
mov
inc
inc
mov
neg
push
sbb
mov
push
arpl
jg
mov
sbb
cmp
push
out
bound
pop
add
push
imul
xor
sub
out
pop
add
cli
push
je
and
pop
test
xor
outs
out
js
inc
gs
pop
sbb
xchg
push
mov
dec
out
inc
inc
movs
mov
mov
gs
in
aas
dec
mov
pushf
push
jl
(bad)
pop
imul
mov
pop
mov
push
mov
das
sbb
jbe
dec
cs
xlat
jmp
mov
add
add
ret
add
add
out
xor
cli
stos
xchg
and
jmp
pusha
ja
mov
xor
adc
inc
inc
inc
push
cld
stos
mov
lahf
pop
(bad)
push
test
pop
add
dec
mov
mov
push
inc
mov
mov
add
push
pop
into
push
pop
aaa
jge
xlat
mov
add
jmp
sub
fcomip
movs
outs
fwait
dec
retf
xor
outs
or
pop
(bad)
sti
and
mov
inc
(bad)
jl
jne
dec
rol
out
mov
in
mov
dec
dec
push
jae
bound
jnp
mov
jg
bound
mov
add
dec
call
out
mov
mov
sar
(bad)
lock
rcr
jl
shl
mov
fwait
in
and
dec
leave
ror
push
loop
ins
jmp
push
aaa
or
repz
add
xchg
in
mov
es
mov
add
mov
out
push
inc
adc
adc
mov
sahf
jbe
cmp
pop
das
sub
test
mov
adc
fild
ss
sub
es
cld
jg
cs
add
mov
add
adc
pop
inc
je
sar
in
pop
mov
stos
push
mov
add
lahf
(bad)
inc
mov
sti
aam
mov
inc
out
jle
xchg
jecxz
add
in
xor
mov
ret
sbb
neg
sahf
mov
jg
xchg
(bad)
sahf
mov
dec
jb
push
and
add
(bad)
fist
sub
mov
pop
repz
stc
jbe
xchg
add
mov
js
test
(bad)
fidivr
stos
icebp
mul
fidiv
adc
inc
xor
pop
fadd
jmp
adc
fcmovb
out
ret
add
xor
jmp
or
(bad)
cmp
push
lahf
pop
lock
mov
pop
mov
mov
inc
lods
add
or
mov
mul
xor
inc
inc
dec
fimul
inc
lock
xlat
mov
mov
ds
cwde
mov
fistp
test
pop
mov
iret
pop
fld
test
jb
or
or
inc
xor
(bad)
fcmovnu
and
call
outs
cmp
fimul
add
push
test
inc
mov
pop
sub
pusha
mov
arpl
stos
dec
sbb
mov
pop
jbe
mov
inc
inc
sar
adc
cmp
(bad)
jmp
mov
ror
push
idiv
push
add
dec
(bad)
popf
pop
call
out
call
not
das
cli
ja
fcom
lock
mov
and
sub
loope
mov
clc
daa
adc
pop
add
mov
(bad)
aas
adc
inc
mov
(bad)
fisubr
pop
or
xchg
jmp
pop
and
push
pop
adc
pusha
mov
push
out
push
(bad)
push
push
mov
sti
ror
mov
dec
mov
mov
inc
pop
pop
mul
outs
fbld
or
cmp
mov
std
sti
push
mov
mov
inc
or
dec
pop
dec
stc
ret
mov
add
xor
dec
pop
fstp
jno
repnz
add
push
and
js
push
mov
lahf
fs
xchg
mov
and
adc
dec
jg
inc
cli
loope
adc
sbb
xor
cmp
ss
lods
hlt
imul
bound
das
movs
test
push
into
pop
movs
mov
mov
cmc
call
ret
scas
cmp
retf
add
pop
je
pause
mov
std
jae
ret
adc
pop
add
fdivr
mov
iret
sbb
rcr
stc
outs
jae
loop
pusha
jmp
test
rcl
rcr
or
outs
call
enter
sub
out
sub
(bad)
push
js
xor
(bad)
out
and
add
in
and
rcr
dec
xor
jge
push
jl
adc
xor
(bad)
(bad)
dec
stc
mov
in
inc
jmp
xor
pop
out
inc
mov
(bad)
dec
loope
jp
push
xchg
pop
adc
imul
inc
(bad)
inc
ret
stos
add
add
out
xor
jmp
movs
adc
or
or
add
or
add
jmp
or
js
add
ja
cli
test
cmp
jecxz
or
(bad)
add
sbb
pusha
add
div
xchg
rcl
adc
out
add
pop
lock
cli
xchg
push
add
push
mov
fidivr
mov
mov
jg
dec
mov
and
pop
aaa
add
loopne
rcr
push
inc
mov
or
mov
mov
(bad)
dec
ret
mov
pop
sti
sbb
mov
mov
cld
add
jae
jmp
das
and
imul
fadd
(bad)
xor
add
inc
ret
ret
(bad)
cmps
movs
in
cli
ins
jg
mov
inc
or
sub
ret
adc
or
fs
out
add
mov
cmp
mov
mov
in
push
les
lods
je
mov
push
iret
push
das
scas
out
pop
hlt
call
pop
add
lds
imul
add
inc
cwde
and
dec
push
mov
(bad)
xor
aaa
shl
add
or
(bad)
mov
(bad)
aad
push
ins
jb
and
push
inc
inc
jbe
(bad)
jge
add
and
popa
inc
lahf
clc
(bad)
call
push
jae
mov
aas
pop
daa
inc
xchg
inc
xor
fdecstp
mov
mov
movs
pop
sti
dec
sbb
jge
xchg
repz
pop
or
xchg
jp
sbb
scas
push
cmps
movs
cwde
fcomi
cmc
jmp
(bad)
(bad)
pop
jns
enter
dec
retf
xor
scas
test
das
shl
test
push
sbb
ffreep
xor
stos
lock
add
stos
das
fs
mov
aas
(bad)
jle
jmp
mov
or
bound
aas
sti
loop
mov
es
(bad)
mov
test
icebp
sub
inc
arpl
out
rcl
mov
xchg
dec
dec
cmp
cmc
sub
dec
mov
nop
int3
mov
dec
pop
jmp
into
jmp
out
pop
pop
pop
sar
cwde
sti
arpl
mov
std
mov
mov
sub
imul
pop
bound
ja
(bad)
repz
fdivp
mov
sti
pop
cld
retf
imul
repnz
aaa
adc
stos
data16
mul
rcl
loopne
les
aad
jmp
mov
push
cmc
mov
push
push
mov
or
lds
xchg
add
mov
pop
popa
jnp
ja
xchg
jg
mov
test
retf
jg
cld
pop
movs
ret
push
aas
push
aam
pop
(bad)
je
xor
clc
jae
and
inc
inc
dec
ret
cmp
sbb
xchg
outs
push
scas
inc
das
cmp
jmp
fist
jb
sub
mov
in
jg
mov
pop
xor
push
loop
inc
repnz
inc
add
(bad)
pusha
mov
pop
inc
jle
clc
inc
out
js
fs
mov
test
je
inc
inc
xchg
and
pop
sar
pop
pop
je
cmc
add
inc
push
sub
mov
call
push
mov
push
fiadd
shr
jmp
inc
or
pop
loopne
dec
ret
cld
and
push
push
test
jg
(bad)
jg
fistp
fld
js
pop
pop
push
pop
push
xor
(bad)
mov
add
mov
add
ins
out
mov
sub
(bad)
push
mov
je
std
mov
sub
add
or
push
inc
push
dec
mov
adc
jae
adc
std
add
sub
(bad)
fbld
es
ret
repz
mov
mov
not
jo
jg
repnz
rol
dec
dec
out
inc
cmp
inc
cmp
sti
or
xor
cmp
fidiv
push
ja
push
cld
mov
xor
inc
imul
outs
mov
add
inc
loope
lahf
shl
cmp
add
push
mov
push
jl
movs
das
jp
cli
aas
enter
es
(bad)
mov
inc
(bad)
call
add
adc
out
loope
cs
dec
jmp
adc
shl
push
jl
xlat
sbb
pop
adc
inc
cli
add
jmp
pop
jl
scas
xchg
out
cmp
pop
pusha
jl
daa
add
adc
or
push
push
sti
call
jno
outs
adc
mov
mov
or
pop
push
lock
inc
dec
push
pop
outs
mov
imul
cmp
mov
pushf
jns
xor
je
repz
push
mov
retf
out
fisttp
cmc
or
sti
ins
mov
inc
cs
rcl
xor
add
scas
(bad)
fucomip
(bad)
jmp
fisub
dec
inc
cmp
xchg
push
into
test
or
into
push
add
adc
mov
clc
or
aas
push
ret
xlat
(bad)
fwait
inc
add
inc
ins
ds
mov
or
test
dec
jne
mov
dec
lahf
jl
scas
cmp
push
adc
fs
pop
jnp
and
dec
js
adc
mov
(bad)
pop
and
jb
mov
es
std
dec
sti
sbb
inc
add
fidiv
mov
(bad)
punpcklbw
xchg
mov
pop
or
dec
(bad)
mov
jmp
popf
pop
push
sti
ret
ss
inc
add
add
cmps
fcmovu
inc
mov
sbb
jbe
ss
jmp
sbb
fidiv
dec
je
inc
xor
dec
add
fs
cmp
mov
pop
cmp
cmp
adc
sbb
(bad)
(bad)
jg
inc
mov
add
rcr
bound
inc
inc
imul
pop
fwait
aam
lds
or
mov
in
sti
(bad)
loopne
shl
push
lock
push
vxorps
adc
jmp
pop
mov
jae
mov
fadd
mov
loopne
lock
js
pop
mov
(bad)
fst
aam
cmps
mov
aas
ret
dec
or
ss
pop
call
out
jae
jl
and
push
xchg
stc
mov
sub
sub
jmp
je
in
outs
jg
xor
sub
dec
jb
pop
(bad)
push
mov
jmp
mov
dec
push
pop
cdq
fsub
push
or
and
cmp
push
std
in
mov
imul
push
inc
mov
mov
out
sbb
and
sub
jb
and
xchg
dec
(bad)
cli
aaa
or
ret
inc
adc
inc
enter
jo
aas
mov
je
pop
push
pusha
fistp
add
mov
(bad)
test
adc
or
add
inc
adc
mov
outs
dec
(bad)
pop
xchg
mov
mov
(bad)
mov
sub
in
jb
mov
and
jae
arpl
sub
(bad)
out
mov
pop
aas
jbe
jno
or
push
clc
push
dec
cld
inc
sbb
or
ds
add
ret
cmp
ret
fcomip
mov
pushf
push
push
cvtps2pd
push
ins
inc
out
(bad)
inc
adc
mov
mov
pop
jo
mov
outs
jne
mov
inc
lahf
add
add
push
cmps
push
xor
clc
pop
cld
add
std
addr16
sbb
inc
jne
out
ror
sbb
or
push
push
(bad)
ss
inc
xor
pop
out
inc
scas
add
into
test
inc
(bad)
sub
xor
mov
or
(bad)
add
or
rcr
(bad)
cli
out
sub
outs
inc
pop
(bad)
or
mov
ret
cmp
jae
clc
or
xlat
(bad)
(bad)
jmp
inc
inc
xchg
push
je
call
pop
outs
add
aas
jae
add
and
std
mov
jne
test
mov
sub
or
dec
mov
pusha
sar
inc
in
sbb
ret
or
shr
inc
stos
call
jg
push
out
les
(bad)
outs
clc
jg
test
inc
push
add
xlat
mov
mov
push
add
inc
out
scas
push
ss
lock
outs
jle
cmp
xor
outs
pop
add
pop
jb
aas
mov
mov
dec
xlat
jns
push
cld
pop
mov
jmp
jae
mov
cmp
(bad)
push
je
sti
not
or
ins
fimul
test
sub
push
inc
jg
fdiv
xchg
lahf
shl
ret
push
mov
mov
retf
loope
pop
lock
inc
rol
and
inc
inc
mov
push
rep
adc
inc
in
test
aam
push
sar
out
std
jnp
xor
inc
adc
out
mov
aas
inc
arpl
jl
ror
adc
adc
or
cmp
jle
(bad)
out
cmp
dec
test
out
outs
pop
pop
test
and
push
push
push
or
out
js
inc
jae
push
or
push
sub
push
daa
fiadd
push
dec
mov
or
push
(bad)
mov
arpl
out
mov
jecxz
push
jmp
aad
pop
mov
dec
inc
je
adc
bound
cmp
int
call
push
fisttp
sti
mov
mov
arpl
rcl
or
aad
sbb
inc
sbb
push
jo
inc
mov
in
pop
(bad)
dec
or
inc
sbb
int3
add
int3
mov
jmp
add
outs
push
or
jle
mov
xchg
mov
clc
(bad)
(bad)
out
lock
adc
inc
add
shl
std
push
or
pop
jle
mov
inc
pop
jmp
aas
add
xchg
push
sub
add
adc
out
xor
mov
pop
cwde
loopne
push
iret
add
push
dec
ret
xchg
mov
dec
push
test
add
call
std
push
pop
in
sbb
or
(bad)
pop
(bad)
mov
mov
ret
mov
data16
cmp
ret
push
fmul
and
jmp
sbb
dec
jecxz
out
adc
cmp
hlt
adc
mov
push
inc
and
jl
not
cmc
jmp
inc
inc
scas
mov
cli
sti
ficomp
mov
fmul
scas
or
push
int3
inc
out
inc
or
add
mov
out
aas
mov
cmc
or
mov
push
imul
fild
inc
xchg
add
add
push
pop
add
ss
push
add
mov
mov
cmp
lds
pusha
out
mov
into
inc
out
aas
inc
cmp
mov
fild
jecxz
es
push
xchg
push
xor
inc
mov
xchg
dec
jge
or
add
mov
ret
mov
js
mov
xor
sar
mov
push
adc
loopne
cmp
jle
movzx
push
mov
pop
inc
ficom
je
sub
rol
push
pop
xor
dec
mov
or
push
add
mov
add
xchg
push
out
lds
inc
gs
jg
fwait
loopne
aad
mov
out
je
lds
cmp
enter
int
sbb
or
lahf
aam
or
cmc
(bad)
(bad)
fisttp
imul
aas
(bad)
mov
lahf
dec
add
mov
aaa
and
(bad)
cmps
add
and
test
(bad)
imul
jp
or
pop
(bad)
je
arpl
sub
mov
push
(bad)
cmp
ret
js
pop
xlat
pop
(bad)
mov
adc
push
call
dec
repz
dec
xor
sub
fs
push
loope
scas
jge
mov
clc
test
push
mul
or
jmp
cld
das
mov
out
rol
add
test
adc
imul
imul
scas
jg
pop
xchg
fucomi
xor
xor
add
ret
lahf
inc
fs
mov
out
xor
jg
mov
out
push
inc
or
sbb
call
push
ret
aaa
idiv
out
xor
jae
jge
dec
lahf
mov
out
cli
push
push
mov
push
sti
loopne
mov
cld
(bad)
jg
push
sti
call
and
xor
nop
inc
arpl
pop
sbb
xor
pop
in
arpl
push
sub
mov
xchg
fsubr
imul
inc
cmc
inc
loope
outs
int3
cmp
inc
adc
(bad)
cmp
push
(bad)
out
mov
mov
addr16
loope
sub
fs
out
ins
jg
(bad)
mov
loop
loop
dec
aas
jmp
mov
add
movs
jl
mov
mov
(bad)
call
mov
adc
jmp
mov
mov
mov
cmp
sti
mov
jg
pop
pop
pop
or
gs
or
xabort
push
sub
push
add
push
and
and
out
adc
and
xlat
jg
mov
dec
(bad)
cmp
fcmovne
xchg
mov
gs
add
add
jmp
or
movs
push
push
push
push
sub
xor
or
outs
out
ins
jg
mov
data16
stc
jg
pop
not
pusha
add
scas
arpl
enter
add
mov
arpl
aaa
lds
push
pusha
sbb
mov
add
add
movs
push
aas
fcomip
ja
push
cmp
inc
add
cmp
ss
test
dec
idiv
jns
pop
add
fwait
add
xor
mov
fs
or
mov
add
adc
add
mov
add
sti
jle
(bad)
mov
xlat
dec
xor
adc
addr16
mov
cmp
inc
aas
push
xor
or
push
ds
mov
sub
mov
sbb
jg
pop
xchg
loop
lock
gs
sbb
mov
inc
(bad)
inc
out
add
call
cmps
fiadd
jbe
hlt
outs
outs
or
arpl
in
adc
jo
fldenv
outs
jo
mov
xor
mov
out
das
sub
and
push
adc
pop
add
repz
call
out
add
push
mov
mov
pop
fwait
punpcklbw
push
add
ret
push
mov
dec
(bad)
inc
cmp
out
test
sub
pop
arpl
push
call
fwait
cwde
(bad)
jno
mov
pop
push
and
ins
repnz
or
aaa
aaa
(bad)
xlat
inc
imul
mov
div
test
push
out
jg
push
test
mov
and
sbb
add
jle
inc
mov
add
dec
sub
nop
sbb
cld
pop
fist
push
xchg
pusha
repz
sbb
cmps
adc
je
or
jae
les
dec
pmuludq
sub
inc
push
rol
fwait
jge
ret
xchg
clc
bound
or
std
jnp
(bad)
inc
ret
mov
fadd
jmp
ret
dec
fistp
or
xchg
(bad)
xor
pop
stc
fsubp
push
jl
mov
dec
pop
out
push
ins
add
dec
add
fs
(bad)
jg
ja
adc
mov
add
je
rcl
push
add
inc
sbb
pusha
mov
jmp
sbb
test
loopne
or
clc
mov
aam
pop
call
pop
retf
ret
push
sub
jg
xor
aas
pop
cmc
add
outs
lods
lock
idiv
dec
jno
cmp
ins
or
inc
inc
gs
add
jo
inc
inc
pop
push
cli
cmc
jg
out
jp
pusha
hlt
push
add
ins
add
add
lods
test
pop
lds
inc
dec
or
je
dec
movs
ss
mov
imul
(bad)
std
push
adc
mov
pop
je
scas
aad
xor
push
sub
not
dec
clc
add
mov
inc
es
mov
mov
dec
mov
call
(bad)
pop
std
jae
(bad)
ja
push
repz
or
test
mov
pop
add
ret
jns
or
int3
add
and
cmp
dec
out
push
mov
sbb
sub
enter
imul
and
jnp
jae
pop
test
pop
sbb
clc
aas
sbb
jle
mov
pop
xchg
push
cmc
repnz
xlat
dec
pop
pop
mov
lock
movs
push
dec
test
add
xchg
ret
sti
repz
aas
inc
or
sar
mov
iret
es
mov
lahf
xchg
cli
inc
xor
add
(bad)
pop
ins
call
fcmovne
inc
test
ja
scas
mov
and
imul
add
push
test
mov
push
gs
es
cld
arpl
xchg
rcl
sbb
call
xchg
jp
addr16
mov
cmp
mov
adc
xchg
rol
push
aas
mov
inc
inc
mov
inc
pop
add
cld
aaa
pop
adc
push
jp
inc
pop
jmp
dec
add
fmul
xchg
ins
jb
mov
and
xlat
ret
sub
mov
adc
in
int
push
int3
dec
xor
sti
xor
add
sub
jg
inc
fstp
pop
sub
dec
imul
aaa
sbb
rcl
inc
mov
pop
call
fisub
pop
mov
or
sbb
test
add
and
xlat
lahf
add
mov
sub
push
int3
xor
mov
ret
pusha
push
and
mov
add
push
out
(bad)
push
(bad)
fild
(bad)
and
mov
inc
or
dec
push
out
or
add
shr
cmp
and
mov
pop
loopne
mov
out
xor
ror
jp
mov
test
gs
cmps
add
xchg
and
pop
ins
sbb
dec
inc
or
(bad)
mul
pop
pop
mov
ins
je
add
jb
xchg
jno
add
push
pop
cld
jae
(bad)
(bad)
and
xchg
cmps
jae
xor
push
cmp
mov
push
test
loop
inc
mov
or
mov
inc
push
adc
sbb
xchg
ds
sub
add
pop
cs
jno
mov
jmp
hlt
(bad)
cmps
push
jo
or
ret
js
sbb
add
push
or
out
push
aaa
ins
mov
jp
fucom
retf
mov
enter
jmp
bound
inc
mov
(bad)
jle
add
sti
adc
inc
aas
inc
or
sti
pop
pushf
gs
repz
lahf
inc
and
repz
inc
pop
inc
inc
or
jno
mov
inc
sub
mov
mov
push
fld
jecxz
mov
mov
fnstenv
mov
jp
repz
inc
inc
rol
hlt
jnp
sub
in
inc
push
(bad)
aas
adc
pminub
push
aad
jmp
or
xlat
mov
sbb
dec
call
emms
mov
mov
mov
dec
cmps
mov
cli
(bad)
jmp
(bad)
(bad)
xor
sbb
data16
push
mov
out
mov
(bad)
aas
imul
mov
pop
xlat
fs
(bad)
ss
ret
test
or
inc
ret
push
jno
out
mov
call
(bad)
sti
fisttp
iret
push
outs
dec
out
pop
sti
scas
imul
jno
(bad)
pop
pop
inc
jl
push
mov
and
adc
jl
inc
(bad)
push
rcl
mov
call
pusha
ror
sub
mov
ja
cmp
mov
add
pusha
stos
ret
pop
or
cld
outs
adc
rcr
jae
xor
ss
sbb
add
not
mov
inc
mov
call
out
in
hlt
fwait
hlt
add
push
cmp
add
and
mov
aam
sti
ja
push
jg
mov
jae
push
std
stos
aad
add
cs
mov
add
cld
jmp
push
inc
mov
test
cmp
test
mov
pop
pop
pop
pop
fidiv
pop
std
lds
arpl
das
pop
fwait
pop
sti
aas
mov
jp
xor
out
push
jl
push
or
out
(bad)
mov
and
jb
mov
or
outs
pop
inc
in
loopne
add
inc
inc
jmp
cmp
xor
call
cmp
adc
mov
mov
dec
loop
push
cld
mov
(bad)
push
fsub
enter
pop
pusha
inc
mov
stc
mov
out
aaa
sub
outs
cmp
push
pop
fs
outs
jecxz
cmc
push
enter
ins
(bad)
jmp
jge
jg
add
mov
rol
mov
mov
outs
sbb
aaa
push
sti
je
ins
mov
retf
jo
jl
sbb
inc
ficom
loopne
add
nop
cmps
push
dec
je
rcr
jmp
push
sti
mov
mov
jne
adc
push
dec
cmps
lods
ret
add
mov
push
mov
xor
push
inc
clc
fsubr
add
stos
aaa
lods
imul
adc
pop
mov
dec
imul
je
and
out
xchg
xor
std
ja
adc
sub
inc
inc
mov
dec
stos
mov
mov
mov
jmp
repnz
ss
push
adc
mov
not
(bad)
mov
or
add
out
dec
gs
mov
fiadd
inc
loop
mov
push
mov
(bad)
lahf
pop
movs
jmp
out
jae
inc
lock
xchg
lock
mov
out
cs
not
outs
test
add
push
out
and
jle
add
ds
dec
inc
out
sar
mov
cmps
ins
pop
nop
clc
jmp
aas
adc
push
mov
adc
push
push
jge
inc
js
jmp
dec
push
adc
mov
enter
add
mov
icebp
call
mov
xlat
jae
and
push
ret
inc
sbb
inc
call
mov
sti
pop
add
mov
inc
(bad)
mov
and
add
add
jg
mov
pop
mov
(bad)
inc
mov
jnp
mov
push
sti
(bad)
fisubr
jno
inc
inc
pop
pop
aaa
out
xor
push
push
ss
dec
out
mov
or
fisub
push
in
push
imul
int3
pusha
shl
imul
fbld
das
jg
gs
jge
stos
lea
mov
sbb
inc
ret
stc
xor
ret
add
adc
jmp
mul
xor
inc
add
or
xchg
pop
jnp
pop
jmp
ret
cmp
dec
jae
pop
inc
jb
mov
pop
jmp
add
test
stos
sbb
sub
out
cmp
repnz
daa
jae
ja
mov
outs
inc
mov
push
aas
clc
mov
(bad)
sahf
pop
add
std
or
scas
inc
sti
mov
adc
inc
push
inc
inc
es
fwait
mov
ins
or
mov
cli
sbb
out
lahf
outs
std
mov
fwait
mov
(bad)
fistp
or
sub
xor
(bad)
in
(bad)
mov
jg
add
sub
add
cmc
mov
and
out
aas
ins
out
mov
inc
adc
fwait
lock
or
push
ret
mov
mov
mov
shr
sub
jmp
push
inc
repnz
(bad)
retf
inc
cmp
sbb
enter
jmp
mov
dec
push
mov
ins
ds
cmp
dec
std
icebp
jmp
mov
pop
inc
ja
sbb
icebp
out
add
jne
stos
mov
or
(bad)
std
sub
es
rol
test
jmp
aas
nop
rcl
push
push
(bad)
fs
adc
ret
mov
pop
ret
arpl
cmp
pop
ret
jnp
je
inc
xchg
shl
cmp
call
in
inc
inc
ficom
cmp
sbb
je
dec
call
dec
xchg
xor
repnz
ja
jp
and
pop
jae
outs
xchg
or
call
xlat
add
gs
repz
(bad)
push
inc
test
mov
xchg
lds
and
xor
mov
div
jge
lock
xor
add
jecxz
and
xor
retf
jl
outs
xor
add
call
shr
test
ins
sahf
test
mov
push
push
shr
xchg
mov
outs
jmp
(bad)
div
inc
out
mov
retf
mov
jae
call
retf
inc
add
add
jae
xlat
pop
push
mov
retfw
fdivr
pop
imul
outs
inc
(bad)
mov
xlat
push
mov
xor
and
dec
xor
mov
sbb
pop
retf
aas
aas
inc
pop
pusha
cld
stos
shl
inc
ret
repz
push
mov
sbb
call
mov
inc
push
pop
mov
add
lock
pop
and
scas
jg
push
mov
gs
clc
adc
push
shl
pop
arpl
inc
push
arpl
mov
add
mov
dec
or
add
aas
xchg
(bad)
push
aas
ins
bound
push
jle
inc
aas
cmp
mov
sub
setbe
data16
scas
dec
xchg
xchg
addr16
out
mov
mov
cld
push
(bad)
outs
xchg
cld
fwait
push
mov
mov
das
(bad)
mov
inc
ret
adc
sub
cmc
(bad)
popa
push
inc
push
mov
inc
inc
dec
test
cmps
clc
test
mov
sar
inc
push
adc
sti
icebp
call
mov
add
jae
mov
pop
inc
cmp
sub
(bad)
xor
push
aas
ret
movs
push
aam
mov
pusha
outs
xlat
(bad)
aas
stos
aam
pop
cs
jb
pop
adc
mov
jmp
call
add
add
dec
mov
push
pop
sub
dec
cld
xor
mov
add
cmp
js
dec
push
and
inc
test
test
inc
(bad)
fiadd
shl
mov
pop
fadd
icebp
inc
or
aas
std
sbb
mov
jg
xor
xor
sti
cld
sub
fcomip
mov
bound
mov
test
out
mov
les
mov
mov
or
jg
cmp
je
or
add
call
not
je
fisubr
jmp
sub
add
add
nop
nop
ins
pop
push
loop
sub
fsubr
or
loopne
rep
jle
mov
test
and
pop
pop
fmul
push
out
lock
dec
nop
enter
push
inc
mov
(bad)
dec
sahf
rep
inc
std
ret
rol
js
ret
inc
push
test
je
pop
mov
out
loop
push
out
lds
ret
(bad)
dec
pop
xchg
mov
cmps
bound
aas
jb
(bad)
aaa
fisubr
xor
je
adc
add
ret
xor
cld
aad
dec
mov
arpl
(bad)
(bad)
bound
ja
sub
add
mov
xor
push
imul
adc
push
jb
dec
inc
cmp
or
fistp
(bad)
out
push
pop
(bad)
repz
imul
and
ret
mov
aad
popa
ret
mov
lahf
sub
out
pop
lock
push
sub
mov
popa
jb
inc
inc
mov
push
in
push
arpl
jecxz
sar
cld
jmp
jmp
mov
mov
mov
lds
std
inc
inc
out
mov
and
dec
push
inc
and
mov
pop
ins
lock
fs
mov
mov
jnp
pop
pop
xchg
cmps
outs
inc
add
cmps
bnd
(bad)
jg
push
rol
dec
dec
cld
ror
jl
aas
shl
outs
sbb
adc
dec
imul
mov
lds
push
std
dec
xor
stos
(bad)
jb
ins
sar
sti
mov
inc
push
jg
mul
cmp
add
popa
es
push
add
mov
loopne
ret
or
jl
sub
or
add
push
jae
jl
fld
lock
in
(bad)
jge
mov
push
add
mov
inc
adc
push
inc
jg
mov
jae
je
(bad)
outs
jb
mov
std
sbb
icebp
push
add
add
xor
push
jmp
fwait
mov
jle
cmp
(bad)
mov
(bad)
xchg
jmp
leave
jae
call
jo
jmp
and
das
add
out
(bad)
jmp
push
jae
fidivr
ins
mov
xor
test
adc
and
test
or
push
mov
push
cmps
mov
mov
jae
(bad)
mov
invd
pop
push
jg
outs
dec
cs
push
imul
or
xchg
pop
scas
add
dec
or
pop
jg
or
or
add
mov
dec
inc
adc
popf
fucomip
pop
call
add
int
enter
inc
jmp
push
stos
sbb
pop
sbb
inc
movs
lods
(bad)
mov
ins
dec
cmp
out
inc
push
push
add
mov
add
add
cmp
mov
call
pop
ret
call
in
cwde
movs
das
add
add
cli
aas
push
mov
in
mov
pop
mov
mov
inc
sti
inc
inc
pop
fimul
aas
enter
pop
js
jecxz
xchg
or
mov
xchg
pop
add
mov
jmp
or
inc
jae
shr
dec
or
sbb
(bad)
dec
mov
push
mov
add
and
les
xchg
lahf
es
popa
mov
inc
subps
call
icebp
jmp
popa
test
xor
mov
push
mov
(bad)
mov
pop
ins
cld
fbld
jg
and
imul
call
add
nop
(bad)
xchg
imul
sti
mov
inc
inc
repz
scas
mov
push
or
mov
push
push
mov
adc
(bad)
retf
fcomip
dec
imul
mov
ret
xlat
call
hlt
addr16
pop
movs
and
sbb
(bad)
pop
adc
(bad)
jg
ret
je
fbld
push
repz
or
pop
xor
jno
(bad)
arpl
cmp
idiv
mov
mov
imul
shl
or
and
sbb
push
add
and
cld
clc
(bad)
sbb
push
and
call
cmp
lods
test
cmps
push
cli
sbb
loopne
sbb
out
adc
out
test
pop
mov
nop
rcr
test
inc
out
xor
jmp
inc
out
aas
push
dec
sub
rol
jge
xor
enter
ret
cmp
push
xor
push
(bad)
jg
sub
adc
mov
pop
out
clc
or
fcomip
pop
inc
stc
cli
out
(bad)
cld
fmul
jbe
push
pop
hlt
or
jg
push
test
iret
xor
icebp
aas
cmp
xchg
mov
jg
lock
sub
push
and
adc
mov
fwait
jle
mov
fcmovnu
pop
or
push
inc
je
inc
jg
ins
pop
sbb
mov
outs
dec
outs
test
jmp
push
loopne
and
out
push
push
mov
clc
(bad)
into
push
pop
aas
nop
not
or
and
pop
push
dec
popf
pop
rol
or
adc
mov
pop
(bad)
pop
ret
les
push
fsub
rol
bound
inc
enter
push
gs
test
xchg
lahf
push
xlat
data16
mov
push
xchg
mov
and
mov
in
imul
lds
inc
out
jb
cld
adc
std
fwait
mov
mov
out
cmc
iret
sti
aas
mov
std
vsqrtss
jb
mov
cld
dec
inc
add
mov
xlat
daa
add
pop
jle
hlt
lods
add
ret
pop
ss
push
sti
clc
add
adc
dec
hlt
push
icebp
and
data16
mov
(bad)
jg
lock
dec
ret
mov
pop
push
push
pop
push
dec
dec
xchg
inc
xlat
push
inc
out
out
dec
(bad)
sbb
or
cmp
jle
push
push
call
fadd
mov
js
add
pop
sub
pop
xchg
dec
mov
inc
mov
ss
outs
outs
mov
fiadd
dec
push
call
or
nop
and
mov
push
les
add
xchg
aad
in
jmp
ret
xchg
outs
xchg
fwait
int
and
or
adc
adc
inc
bound
ror
(bad)
retf
fdiv
jmp
add
out
ret
out
jecxz
hlt
sbb
push
js
sti
push
inc
jae
ret
popa
ret
or
sub
add
or
jg
aas
div
dec
cmp
pcmpgtd
mov
adc
test
mov
cld
aaa
loopne
je
jns
add
jecxz
mov
sub
cwde
dec
rol
ins
lds
push
inc
inc
pop
jge
aas
aas
ret
mov
shr
adc
sti
(bad)
add
nop
retf
xlat
cmps
push
xor
xor
push
mov
cld
outs
js
xor
(bad)
idiv
inc
sahf
dec
fidiv
das
push
sub
ds
pop
(bad)
jmp
inc
pop
std
adc
addr16
imul
mov
cmp
mov
outs
push
call
cld
inc
mov
pusha
and
jmp
loop
push
mov
call
sbb
std
and
ror
xchg
clc
icebp
add
(bad)
pop
into
jle
or
or
inc
sbb
jl
xor
jae
push
retf
mov
add
push
shl
inc
sub
repnz
(bad)
jbe
or
mov
cmp
mov
adc
mov
mov
xor
fisub
inc
add
xor
inc
mov
sti
sti
arpl
lods
aas
addr16
mov
fisttp
jae
cmp
outs
mov
out
xor
sbb
sub
jg
mov
aas
ds
jno
push
jl
jbe
loope
ja
in
(bad)
outs
ret
push
sub
inc
push
out
xchg
push
icebp
mov
inc
push
out
push
pop
add
sti
inc
and
mov
clc
es
or
(bad)
jp
ret
inc
push
pop
aas
out
test
push
out
inc
jnp
fsubr
pop
icebp
mov
pop
cmp
mov
test
fadd
push
push
(bad)
push
movaps
lahf
outs
dec
inc
xor
nop
out
sub
dec
push
out
or
mov
sub
add
das
(bad)
fwait
btr
retf
mov
pop
dec
sbb
mov
xchg
scas
or
adc
cld
push
cmp
fnstcw
jmp
scas
push
lds
(bad)
mov
mul
je
je
add
retf
mov
mov
push
test
ja
add
ja
sahf
xor
inc
shr
(bad)
out
pop
js
(bad)
(bad)
clc
xor
inc
addr16
or
add
push
into
test
lea
aas
dec
mov
adc
dec
or
out
call
imul
je
outs
pop
add
adc
inc
xor
mov
sub
call
add
or
dec
sti
dec
dec
and
int
mov
rol
cmps
int3
xchg
loope
out
jno
adc
fwait
sbb
pop
pusha
out
ficomp
push
mov
pop
pusha
push
pop
lock
cmp
add
jne
shr
shl
push
dec
ret
push
mov
mov
test
lea
dec
fdiv
sbb
sbb
clc
and
xor
push
add
mov
cmps
das
js
cmp
cmp
ret
add
xlat
xor
jbe
add
mov
and
adc
ret
mov
pop
aas
js
inc
call
jmp
mov
push
xchg
mov
dec
mov
js
rcr
sbb
mov
ror
cmps
push
mov
sbb
ret
inc
xchg
inc
imul
out
push
dec
call
and
jnp
mov
mov
jg
mov
inc
test
pop
adc
std
pop
sub
adc
inc
push
or
cli
cmp
jnp
test
imul
and
add
dec
push
push
pop
lock
popa
xchg
hlt
pop
ret
test
xor
inc
fcomip
retf
imul
into
mov
sub
(bad)
mov
sar
imul
mov
sar
scas
jg
inc
push
mov
pop
adc
sub
cmp
or
pop
arpl
data16
pop
call
test
jg
mov
call
add
aas
mov
cmp
pop
mov
lods
inc
mov
call
mov
push
mov
dec
adc
adc
xor
adc
dec
inc
add
mov
or
or
lds
mov
pop
jno
imul
push
mov
push
push
(bad)
ja
inc
add
push
neg
inc
addr16
pop
arpl
test
add
test
test
sbb
mov
mov
ret
(bad)
xchg
and
mov
scas
ds
loope
jmp
jmp
cld
push
pusha
and
call
sub
arpl
jl
mov
push
push
inc
sbb
inc
and
pop
std
xor
call
aas
adc
pop
or
loopne
test
mov
cmp
push
sbb
nop
fs
call
call
or
add
lock
sahf
mov
jbe
lds
mov
mov
fsub
xchg
add
inc
xchg
sti
sbb
enter
dec
imul
pop
in
or
jl
or
adc
rcr
or
imul
mov
inc
dec
dec
out
xrelease
arpl
adc
add
fbld
adc
inc
pop
xor
jno
dec
std
pop
pusha
pushf
ins
push
push
push
dec
je
pop
jae
ret
push
inc
pop
scas
mov
jmp
push
xor
inc
push
shl
push
ficom
xchg
jle
xchg
call
jg
out
je
fs
dec
add
and
mov
adc
fsubr
dec
mov
ja
inc
jae
movs
pusha
cmp
inc
outs
add
push
js
push
push
aaa
add
mov
dec
call
mov
retf
mov
jle
adc
(bad)
das
out
jge
mov
std
xadd
mov
cmp
das
out
ficom
fld
xchg
pop
xchg
aas
push
or
cwde
xchg
sub
mov
je
adc
jle
add
(bad)
pop
imul
xor
and
mov
cmp
ja
xor
mov
xor
or
add
sti
or
dec
add
addr16
adc
cmp
and
mov
inc
inc
inc
loop
add
je
cli
pop
out
sbb
push
sub
out
imul
(bad)
jmp
pop
ins
and
xor
fiadd
sbb
inc
lahf
popa
mov
mul
mov
jg
mov
jg
xchg
pop
test
repz
ror
adc
jl
dec
mov
loopne
aaa
into
scas
shr
cwde
das
fstp
lock
shr
(bad)
pop
mov
inc
jbe
and
jae
push
std
push
in
je
dec
cmp
sub
push
jg
dec
test
inc
outs
std
add
dec
push
sub
xor
push
mov
into
aas
add
inc
sahf
or
stos
movs
jmp
or
(bad)
ins
add
ret
lds
inc
mov
mov
and
add
fimul
cmc
jmp
loop
xchg
sub
ss
pop
inc
or
addr16
jge
sbb
inc
call
xlat
mov
ins
imul
xchg
dec
outs
inc
rol
dec
or
push
dec
sbb
sbb
add
jo
mov
pop
add
jae
fdivr
das
inc
xor
inc
icebp
xor
inc
mov
ret
xor
pushf
or
add
lds
add
or
mov
jae
xor
outs
mov
dec
enter
pop
mov
mov
cli
push
rol
addr16
push
ffreep
fs
xchg
adc
das
shr
inc
shl
cli
mov
add
dec
ret
push
out
inc
sbb
dec
or
push
jge
mov
ins
clc
sbb
push
(bad)
push
push
sbb
imul
dec
mov
test
sti
imul
dec
cli
out
mov
or
inc
inc
jmp
(bad)
out
pop
sub
xor
adc
mov
pop
(bad)
mov
fcomp
or
lahf
outs
js
inc
inc
rcr
dec
jg
and
call
rcl
test
jbe
pop
adc
stos
cmc
mov
jnp
jbe
sbb
(bad)
mov
out
jno
add
mov
sub
scas
xlat
pop
out
push
je
enter
test
adc
jmp
sub
inc
push
cmps
shr
sbb
lods
fidiv
mov
or
jle
hlt
add
inc
jmp
pop
pop
mov
arpl
shr
sub
add
sub
push
iret
pop
inc
inc
call
mov
inc
rol
adc
add
data16
dec
ja
xlat
out
mov
out
ret
jbe
mov
stos
fs
sbb
mov
cs
push
test
cmp
cmps
xor
lods
or
pop
addr16
mov
add
dec
loopne
mov
out
stos
aas
jmp
repz
call
pop
movs
add
scas
std
leave
nop
cmp
inc
mov
std
mov
cli
out
inc
les
xchg
sub
aaa
out
cmp
pop
cmp
out
or
int3
adc
inc
repnz
aad
out
mov
or
loopne
and
outs
xchg
jb
mov
dec
cli
callw
inc
pop
inc
nop
jp
fldenv
or
push
and
dec
inc
dec
add
add
(bad)
call
lods
loopne
js
push
(bad)
cld
sti
mov
pop
(bad)
out
inc
and
xor
(bad)
(bad)
mov
fsubr
out
pop
or
mov
ret
add
adc
fs
mov
adc
sub
iret
jae
nop
inc
adc
call
arpl
jecxz
pop
out
arpl
pop
jo
imul
sbb
inc
add
add
icebp
hlt
rol
or
sahf
push
jp
xchg
inc
mov
push
xchg
dec
outs
test
push
mov
add
(bad)
test
push
arpl
add
ret
icebp
lock
sub
add
inc
push
fiadd
dec
out
push
dec
pop
adc
dec
popf
cli
dec
jae
dec
cmc
enter
jo
and
pop
add
cld
(bad)
mov
adc
(bad)
mov
js
pop
cld
out
adc
mov
hlt
ins
lds
sbb
mov
mov
sub
push
mov
call
cmp
inc
pop
add
or
dec
inc
hlt
cwde
js
xor
xor
neg
sbb
stos
mov
pop
push
aaa
pushf
inc
xchg
mov
push
push
out
mov
xor
and
mov
popa
fs
(bad)
cmps
add
mov
mov
cli
shl
pop
cmp
loop
fisubr
cmc
jmp
imul
or
sahf
arpl
(bad)
cmp
jl
call
aaa
mov
add
dec
clc
push
inc
ror
mov
push
pop
lock
je
lds
outs
imul
mov
ret
cmp
mov
rol
or
idiv
push
push
xor
cwde
push
adc
retf
stos
jae
mov
dec
ins
cmp
inc
mov
cli
xchg
mov
dec
jbe
es
mov
jno
fdiv
dec
call
das
scas
sub
xor
add
mov
mov
mov
loop
pop
popa
cld
aas
ins
aas
aas
shl
addr16
xlat
sbb
jle
lock
sti
push
or
add
dec
mov
bound
add
popa
pop
xchg
inc
xor
jg
outs
cmp
std
and
or
test
mov
push
popa
jl
and
pop
add
cld
aaa
loopne
les
cmp
add
xor
addr16
ins
pop
and
sub
(bad)
(bad)
inc
mov
push
in
dec
(bad)
clc
aas
or
inc
(bad)
push
je
push
adc
ja
rol
push
std
sbb
clc
(bad)
mov
inc
dec
or
or
aaa
add
dec
test
cmp
ins
loop
ins
mov
pop
call
pushf
adc
out
inc
in
je
ins
pop
or
jbe
retf
xchg
idiv
or
out
push
jg
out
mov
dec
pop
mov
(bad)
inc
add
loop
jmp
cmp
pop
add
gs
push
push
xchg
mov
es
pop
ins
mov
sub
xor
mov
sti
and
pop
adc
(bad)
jmp
jae
out
mov
test
inc
repnz
push
xor
vmaxps
std
push
xchg
add
mov
fst
or
jmp
push
(bad)
std
lods
loopne
xor
add
push
push
call
push
sti
iret
sub
jmp
ins
adc
push
ins
pop
jno
or
dec
test
mov
xor
pop
sahf
mov
jne
rol
push
jno
xor
mov
adc
(bad)
fiadd
sbb
sbb
out
push
add
ret
push
ret
and
mov
pusha
mov
je
inc
inc
dec
mov
out
add
jecxz
les
ret
mov
adc
(bad)
sbb
test
lods
mov
xor
imul
push
repz
in
(bad)
ss
mov
pop
or
jle
mov
sti
and
sbb
push
dec
(bad)
dec
push
push
ja
mov
jge
inc
pop
out
ret
ret
jae
push
add
mov
cs
inc
mov
aas
shl
jl
jae
xchg
sbb
(bad)
jg
test
or
fdivr
rol
cli
fs
ret
call
bound
and
arpl
jg
add
push
cmp
fwait
rol
inc
push
sar
cdq
cmp
shl
sub
adc
push
pusha
(bad)
dec
stos
add
mov
jg
scas
inc
jecxz
xor
in
xchg
sti
pop
scas
pop
int3
arpl
xlat
mov
jmp
dec
addr16
sbb
pop
inc
paddd
pop
add
fiadd
adc
js
das
(bad)
add
push
sub
pop
stos
jp
rol
add
sti
outs
mov
dec
(bad)
sub
enter
inc
iret
test
repz
cmp
mov
pop
mov
ficom
(bad)
arpl
push
pop
add
push
mov
dec
aas
fstp
jbe
clc
imul
call
repz
mov
pop
push
push
fisub
scas
mov
sar
mov
dec
add
or
call
(bad)
pop
push
xbegin
dec
leave
inc
loop
xchg
mov
adc
dec
add
adc
adc
cs
ret
sti
mov
and
add
inc
shl
pop
and
sub
pop
inc
js
imul
(bad)
cmp
(bad)
pop
add
sub
rcl
scas
sub
call
neg
cld
jg
sbb
out
push
push
push
rcr
into
sti
ss
sbb
aas
(bad)
aas
test
fadd
dec
shl
test
outs
push
js
movs
movs
sahf
(bad)
cli
cli
cmp
pop
(bad)
je
jmp
ficomp
inc
sbb
push
adc
adc
fidiv
das
inc
rol
sbb
ins
push
adc
sub
jle
cdq
inc
adc
ret
mov
pop
mov
adc
out
movs
inc
jae
(bad)
sti
mov
mov
aas
xchg
fbld
loopne
cli
mov
arpl
addr16
std
push
adc
adc
or
mov
(bad)
pop
pop
dec
pop
mov
dec
std
pop
pop
jno
and
xor
stos
jge
ret
pop
mov
mov
cmp
stos
jmp
test
cmps
mov
(bad)
out
mov
xor
jg
push
sub
(bad)
cld
ja
or
das
mov
inc
pop
push
jg
(bad)
mov
push
dec
push
or
das
movs
cmc
aas
sub
sbb
aas
dec
outs
aas
xlat
inc
mov
mov
adc
mov
out
push
add
push
xor
(bad)
call
(bad)
mov
inc
jg
jmp
or
xchg
ins
dec
shl
add
sbb
mov
(bad)
and
sub
add
fs
cmp
lock
outs
pop
mov
(bad)
call
inc
jmp
jle
out
cmp
arpl
das
je
mov
ret
mov
ror
jmp
fdivp
lds
mov
add
pop
out
(bad)
hlt
cmp
mov
(bad)
mov
add
std
test
sbb
push
(bad)
fsubr
(bad)
jmp
sub
cli
jg
push
or
jle
stos
adc
cmp
data16
adc
mov
dec
mov
scas
sbb
mov
jb
pop
(bad)
pop
push
add
jmp
adc
jg
push
cs
cld
push
pop
clc
stos
in
std
push
add
sti
enter
(bad)
push
je
xor
lock
add
mov
add
(bad)
call
pop
gs
je
inc
aas
add
inc
push
mov
sysexit
adc
(bad)
mov
add
dec
dec
pop
gs
jae
fisttp
test
dec
push
ins
inc
pop
mov
(bad)
pop
add
data16
lds
out
jmp
xchg
pop
cli
or
jecxz
test
es
in
arpl
jbe
dec
cmp
sbb
scas
test
and
mov
fsub
les
xchg
add
push
loopne
in
lods
sbb
(bad)
retf
inc
push
or
or
sti
sti
jmp
inc
mov
adc
inc
ins
or
bound
xchg
or
pop
arpl
test
xlat
jp
inc
cmp
out
mov
imul
mov
jl
sbb
mov
mov
add
xlat
push
and
mov
push
sub
add
push
icebp
fcom
adc
mov
xor
dec
aam
cli
inc
mov
push
(bad)
jg
dec
(bad)
cmp
push
sub
jae
add
cmp
sub
or
adc
lock
inc
pop
push
ret
xchg
push
test
sub
dec
fistp
lods
dec
mov
pop
push
push
(bad)
in
mov
xchg
loope
sbb
sti
or
xchg
sub
push
aam
das
cld
jmp
mov
mov
ret
mov
inc
idiv
dec
sar
aaa
dec
outs
aam
cmp
sub
jmp
inc
cld
inc
imul
mov
fs
add
bound
std
fnstenv
pop
jae
add
xchg
sbb
pop
mov
cs
cli
push
outs
pop
jp
add
pop
pusha
sbb
rcr
into
test
xchg
push
mov
outs
sar
dec
jp
push
inc
fiadd
(bad)
sub
push
imul
xchg
out
jae
mov
sti
push
cld
es
push
add
push
aas
inc
inc
ds
pop
add
call
fs
fisub
repz
pop
or
xor
gs
mov
sbb
jecxz
mov
sub
mov
nop
fstp
add
and
cli
into
pop
mov
sbb
sahf
or
ins
push
(bad)
mov
(bad)
mov
test
cld
rcr
xchg
jle
or
xchg
shr
add
js
cmp
xchg
fmul
lds
dec
int3
or
ins
(bad)
sti
cs
mov
pop
std
mov
pusha
mov
test
ret
adc
fbld
mov
je
add
call
jp
cmp
mov
mov
aas
clc
mov
outs
inc
push
std
addr16
sbb
ja
sub
pop
(bad)
dec
jb
inc
inc
test
add
adc
out
shl
mov
aas
inc
dec
das
add
or
test
nop
arpl
sar
outs
jle
jmp
adc
inc
add
(bad)
(bad)
jg
shl
jo
inc
aam
lds
cmp
(bad)
pop
imul
mov
leave
and
scas
mov
mov
test
mov
dec
movs
data16
call
aaa
jecxz
ret
mov
out
push
dec
mov
sbb
icebp
add
je
out
cld
xor
inc
punpckhwd
push
jb
ffreep
sub
call
lock
(bad)
jg
mov
(bad)
cli
and
(bad)
cmps
out
fild
xor
mov
mov
cmc
inc
jmp
xor
push
adc
movs
xchg
sub
mov
cmc
or
adc
add
loop
or
or
scas
push
imul
mov
sti
cmp
mov
(bad)
push
cld
arpl
pop
aas
jg
mov
mov
or
lods
cmp
imul
cmc
lods
(bad)
in
mov
mov
retf
mov
enter
jmp
aaa
mov
mov
add
dec
jae
aas
or
js
(bad)
jl
aas
fiadd
outs
adc
inc
inc
inc
(bad)
cdq
push
sbb
push
jmp
shl
inc
pop
jl
jbe
mov
dec
and
jb
sbb
cld
and
push
imul
add
ins
jb
mov
adc
or
add
push
out
arpl
add
jae
mov
pop
test
ucomiss
or
(bad)
mov
jb
inc
out
inc
or
mov
out
jno
(bad)
jb
jb
loop
mov
mov
ja
xchg
adc
aas
(bad)
cmp
sbb
mov
sti
dec
sub
and
sbb
fdivr
int
std
(bad)
repnz
bound
push
jmp
cmp
push
jmp
je
ret
cmp
cwde
pop
and
ins
add
pusha
or
outs
test
add
fld
sub
mov
(bad)
mov
dec
jae
add
outs
retf
cld
sti
(bad)
pusha
pop
gs
std
or
add
adc
call
test
inc
ret
mov
xchg
ins
pop
add
pop
cmps
push
repz
lods
jb
pop
pop
test
mov
or
jo
add
inc
imul
pop
bound
sbb
add
push
dec
dec
ins
add
sbb
adc
xor
xchg
add
and
push
call
les
adc
je
and
loope
cmp
jmp
push
movs
(bad)
stc
div
inc
rol
cmp
out
rol
mov
fwait
and
pop
jecxz
dec
add
(bad)
fsub
cmp
push
ins
call
mov
sti
pop
sbb
addr16
inc
icebp
es
jg
cmc
in
dec
aas
jae
jmp
clc
jmp
arpl
mov
adc
or
jno
adc
mov
cmp
sti
shr
pop
jg
mov
add
jecxz
fcom
aas
(bad)
nop
ret
aas
push
jno
push
das
mov
std
xchg
loope
out
pop
cwde
hlt
jecxz
inc
cld
fist
cmp
outs
inc
mov
pop
mov
sbb
cmps
out
sahf
stos
jecxz
or
dec
cmp
inc
das
push
push
dec
xor
ret
lidtd
sbb
pop
dec
les
inc
or
movs
cmps
(bad)
jg
clc
loope
or
(bad)
addr16
retf
les
sbb
pusha
aad
mov
sub
jae
mov
fs
sar
fistp
pop
not
jl
mov
addr16
arpl
add
in
or
xor
outs
adc
cwde
add
aas
mov
hlt
fistp
push
into
jae
sub
hlt
inc
test
jg
cmp
push
data16
or
pop
xor
sub
sar
cmp
ds
sub
mov
je
dec
sti
mov
mov
lds
inc
lea
dec
test
ins
push
and
lods
add
pop
jmp
enter
dec
or
mov
repz
and
cli
push
inc
imul
jno
push
sbb
jne
dec
add
mov
dec
mov
add
xlat
das
mov
clc
jle
mov
loope
pop
ret
adc
fiadd
nop
jmp
inc
bound
and
arpl
xchg
shl
aas
scas
push
cli
jg
pop
dec
mov
push
push
mov
inc
mov
inc
sbb
cmp
xor
cmps
adc
inc
cmp
sub
jg
mov
dec
fdiv
dec
mov
movs
loop
add
mov
mov
add
pusha
mov
push
fadd
pop
pop
outs
test
out
or
xor
cmp
add
xor
call
loope
dec
inc
push
or
mov
mov
aas
shl
cmc
lds
outs
sbb
dec
ret
jns
std
gs
and
pop
dec
xchg
and
inc
(bad)
adc
icebp
imul
pop
lods
add
inc
xlat
add
push
dec
(bad)
div
inc
jg
fadd
jecxz
es
arpl
ret
das
inc
cmps
inc
push
xlat
fs
ret
cmp
enter
hlt
dec
jmp
cmp
jmp
jbe
or
jg
ror
ins
cmps
push
pop
add
cmp
out
adc
pop
pop
ja
jmp
add
imul
gs
clc
inc
mov
psubsb
push
or
pop
sti
xor
adc
cmp
mov
mov
dec
call
imul
sbb
jecxz
adc
push
xchg
out
mov
fwait
jmp
repz
jge
nop
out
add
clc
fiadd
adc
loopne
or
scas
dec
push
inc
mov
enter
mov
jl
pop
movs
mov
(bad)
(bad)
pop
je
sub
push
jg
push
sub
adc
mov
add
(bad)
sahf
pop
aas
sahf
sahf
inc
popa
inc
shr
sbb
mov
movs
pop
por
pop
aaa
mov
mov
xor
addr16
adc
adc
aas
inc
sar
test
cli
dec
arpl
out
xlat
inc
push
(bad)
sbb
clc
(bad)
dec
out
xchg
rol
xor
rcr
inc
pop
aam
jne
jg
int3
fsub
push
in
or
and
jg
and
push
aam
ret
cmc
mov
je
cli
pop
inc
sub
inc
shl
pop
fiadd
or
movs
(bad)
fistp
mov
push
out
cmp
pop
out
jbe
out
adc
jmp
stos
sub
ins
jno
inc
data16
adc
or
sbb
sbb
push
push
push
inc
jmp
jge
fild
mov
imul
push
loope
mov
push
(bad)
pop
mov
pop
cmps
or
mov
pop
je
aas
jle
jecxz
mov
test
mov
inc
xlat
aaa
cs
arpl
and
ds
jg
jg
lds
(bad)
xor
xor
sti
jmp
lahf
mov
ret
adc
mov
fimul
shl
add
adc
dec
sbb
aas
inc
jmp
inc
loopne
or
paddb
mov
scas
jmp
cli
or
cmp
hlt
sti
dec
jg
cmc
add
xor
inc
add
adc
pop
jno
repz
aas
ret
jno
jmp
test
fcmove
add
xchg
scas
call
mov
lds
adc
(bad)
push
ficom
(bad)
fs
or
je
int
scas
pop
xlat
dec
jecxz
add
dec
add
cwde
ret
jb
addr16
je
jge
inc
shl
push
mov
push
mov
rcl
inc
scas
push
mov
add
or
rol
cmp
arpl
or
jae
mov
movs
xlat
das
and
pop
das
push
jmp
mov
xlat
pop
out
and
or
mov
mov
add
mov
ror
cmp
cli
jg
jmp
mov
xor
data16
shr
push
ret
stos
test
scas
dec
or
pop
jl
out
inc
dec
push
push
xchg
xchg
mov
add
bound
push
icebp
push
add
sub
push
(bad)
not
ja
cmp
ret
inc
pushf
shl
inc
xchg
cmp
arpl
aaa
xor
ret
xlat
inc
inc
(bad)
push
pop
or
ret
push
xor
(bad)
(bad)
js
rol
xor
sti
sub
scas
pop
inc
fidiv
push
or
enter
jmp
loope
inc
mov
inc
jae
repz
sub
ins
or
fiadd
mul
pop
add
mov
scas
pop
or
add
test
inc
push
hlt
cwde
push
dec
xlat
pop
fs
test
enter
call
or
jb
mov
nop
inc
ror
out
test
addr16
add
push
test
mov
push
jge
add
inc
int
inc
sti
mov
cmp
out
push
add
push
test
add
and
xchg
ins
add
inc
mov
cs
add
inc
out
out
jbe
repz
ror
push
dec
xor
jbe
fs
std
inc
push
sub
or
sbb
jl
(bad)
sub
ins
daa
mov
sub
dec
clc
dec
add
pop
or
pop
cmp
fild
push
sti
out
int3
dec
add
cld
imul
pop
adc
push
or
outs
shr
push
xor
jle
fwait
mov
push
fsubr
call
ins
and
mov
inc
add
ss
sbb
jle
pop
mov
imul
dec
hlt
repz
mov
inc
mov
cmc
pop
je
pop
push
imul
stos
xchg
xor
adc
mov
jecxz
test
iret
ret
push
mov
pop
mov
pop
xchg
jge
mov
inc
and
xor
sbb
adc
outs
mov
arpl
pop
jecxz
dec
dec
add
je
sbb
test
mov
fst
(bad)
ret
rol
push
pop
or
add
mov
cli
add
xor
or
push
sahf
jo
xchg
and
retf
xchg
push
add
mov
(bad)
mul
js
inc
jg
xchg
mov
dec
adc
fidiv
jae
push
cmps
inc
addr16
stos
icebp
and
sbb
into
push
inc
dec
ret
inc
xor
ret
(bad)
je
sbb
mov
sub
jecxz
add
fnstenv
jge
push
mov
je
cld
call
and
dec
xor
jns
inc
xchg
pop
add
pop
mov
mov
xchg
jg
mov
cld
sub
test
or
call
(bad)
adc
inc
aaa
xor
into
inc
pop
mov
ss
xor
inc
scas
push
xlat
fidiv
stos
xlat
cli
mov
mov
jg
stos
out
jg
lahf
pop
icebp
inc
aam
mov
pop
or
fcom
sbb
mov
dec
push
aas
inc
jmp
jmp
push
std
pop
cmp
or
arpl
arpl
icebp
icebp
add
cmp
xor
sub
dec
out
mov
out
pop
push
std
fisttp
movs
pop
push
lods
mov
jmp
pusha
pop
pop
dec
stos
xlat
dec
iret
dec
xchg
dec
lock
cwde
aam
and
mov
(bad)
jne
cmp
inc
mov
mov
push
mov
aas
(bad)
jmp
inc
aas
mov
movs
retf
cmp
or
add
cmp
jno
arpl
repnz
pop
mov
sbb
test
or
cld
xor
mul
jg
pusha
add
push
inc
jmp
dec
add
ds
inc
lds
sub
sub
mov
test
inc
mov
adc
dec
pusha
inc
mov
push
or
sub
push
pop
or
jbe
gs
test
cli
cmp
inc
fcmovnb
sub
xchg
xor
inc
xchg
mov
inc
xchg
adc
outs
or
push
pop
inc
jle
ret
adc
es
test
loopne
scas
xchg
int3
push
call
sub
in
inc
scas
add
pop
dec
adc
sbb
jmp
pop
sub
sahf
stos
lods
shr
or
in
inc
call
std
push
mov
mov
sbb
add
pop
dec
mov
jmp
adc
arpl
pop
dec
cld
std
jge
ret
cmp
aad
inc
ds
and
and
and
push
mov
push
retf
inc
call
mov
push
inc
add
pop
repz
clc
dec
(bad)
dec
add
xchg
mov
fcomp
psubq
adc
movs
out
inc
cmp
rcl
call
sbb
sub
mov
movs
retf
je
jae
mov
cwde
test
ja
test
dec
ret
cmp
(bad)
outs
jae
push
rol
mov
add
retf
pop
cwde
retf
add
or
cld
(bad)
xchg
inc
xchg
ss
jge
ss
je
fbld
jmp
and
mov
or
mov
sub
sub
pop
popf
inc
ja
inc
lods
fimul
pop
dec
sti
test
inc
hlt
mov
sub
xor
call
inc
xchg
(bad)
outs
jo
xor
ja
xchg
mov
loopne
jbe
loop
or
or
and
repnz
add
dec
xor
das
xchg
mov
fdiv
mov
pop
(bad)
pop
inc
and
push
repz
shr
repz
(bad)
outs
jae
dec
pop
out
sub
outs
mov
dec
mov
pop
xchg
and
add
dec
cmps
cmps
lea
cmp
add
pop
cli
mov
jno
mov
xor
add
jae
add
mov
xchg
push
push
cmc
inc
es
add
xor
mov
sti
inc
pop
cmp
mov
icebp
(bad)
aad
dec
mov
pop
push
(bad)
cmp
push
lds
(bad)
call
and
inc
push
ja
data16
inc
jmp
mov
cmp
call
bound
int3
push
xchg
mov
push
stos
popf
push
test
add
xor
push
ret
ss
pop
xchg
mov
(bad)
or
ja
xor
xlat
or
out
out
retf
outs
arpl
add
ins
sub
jnp
mov
pop
mov
sbb
sbb
out
adc
and
je
add
pop
test
jno
aas
xlat
cmp
mov
inc
pusha
test
std
ret
cld
jbe
add
ss
inc
dec
jnp
repz
test
loope
aas
test
jb
and
jmp
div
mov
out
fild
push
inc
mov
shl
pop
shl
add
inc
ret
push
daa
jno
xchg
mov
(bad)
addr16
jo
or
es
std
sti
rol
or
inc
cwde
adc
push
push
enter
repz
mov
cmp
adc
cli
aas
(bad)
jo
add
mov
push
mov
or
clc
ja
push
add
mov
push
(bad)
pop
retf
nop
mov
jecxz
test
inc
pop
loope
pop
pop
test
xchg
mov
mov
jmp
aaa
sub
xchg
outs
jo
mov
and
stc
mov
shl
ret
lds
ret
repz
jo
sub
xchg
push
cli
cmp
test
outs
js
or
lds
add
loopne
dec
xor
sub
lock
push
sub
loope
push
jne
mov
les
sub
je
je
fwait
(bad)
mov
push
dec
cmc
inc
push
sub
mov
push
dec
pop
add
retf
dec
mov
and
mov
pop
stc
(bad)
inc
es
xchg
or
dec
mov
std
mov
jmp
cwde
inc
ret
mov
lds
push
or
clc
jmp
dec
cli
inc
mov
ret
das
inc
mov
adc
and
pop
jl
rcl
scas
xor
push
aas
add
xor
mov
jmp
fcom
pop
scas
inc
fimul
mov
mov
js
ret
and
jle
(bad)
mov
inc
sbb
or
mov
lock
adc
xor
push
inc
movsx
jae
push
mov
cmp
pop
jmp
ins
dec
fwait
aaa
xchg
popa
cli
add
in
and
or
das
and
frstor
loopne
mov
ss
call
and
es
jmp
or
je
ret
cwde
push
adc
int3
adc
push
inc
inc
jmp
adc
arpl
jnp
ds
mov
xor
mov
sbb
inc
inc
loopne
mov
ret
out
pop
xor
std
mov
stos
mov
outs
sub
lsl
push
mov
inc
cmp
gs
inc
sub
cs
leave
mov
push
arpl
lods
cmp
lea
push
fistp
push
pop
sti
add
push
cs
(bad)
fidiv
pop
pop
outs
pop
clc
mov
xor
pop
idiv
out
mov
jl
pop
out
outs
mov
sub
or
jg
xor
or
shl
inc
pushf
and
xor
or
mov
add
push
rol
xchg
shl
loopne
div
xchg
call
lods
adc
aas
push
sti
pusha
push
dec
scas
sub
mov
and
les
dec
jmp
jg
mov
arpl
out
mov
test
add
pop
addr16
ds
inc
mov
pop
adc
fcomip
idiv
dec
xor
bnd
jmp
inc
or
jmp
je
jae
dec
or
pop
dec
aam
cmps
push
cwde
add
mov
add
scas
pop
jo
cmp
jmp
or
jo
out
int
xor
jbe
push
inc
adc
mov
cli
enter
dec
inc
jg
pop
sub
ret
push
push
shr
inc
jp
inc
std
dec
add
(bad)
out
push
adc
fdivp
ret
sbb
aas
scas
lock
shr
or
dec
mov
push
ret
xchg
add
and
jne
inc
pop
xchg
adc
mov
sti
std
push
mov
sbb
add
js
jae
cmp
sti
inc
add
xor
arpl
pop
jmp
adc
daa
sbb
or
inc
sbb
inc
mov
pop
adc
jns
fild
std
mov
mov
ss
sbb
add
pop
inc
cli
or
dec
arpl
push
mov
jg
fucomip
lds
dec
sub
sbb
dec
adc
pop
add
mov
ret
(bad)
sti
sti
or
add
(bad)
dec
repnz
pop
pop
jle
and
imul
clc
popf
mov
fs
jl
jae
pop
mov
xchg
aaa
adc
ss
pop
and
jecxz
dec
es
aas
mov
push
adc
retf
sbb
gs
xor
jle
movs
add
ret
or
or
or
mov
std
sub
mov
adc
sub
add
push
idiv
jmp
mov
push
(bad)
fimul
jbe
and
cmp
pusha
mov
mov
ret
cmp
jbe
mov
call
pop
(bad)
jno
loope
(bad)
xchg
jae
pop
and
add
pop
add
aaa
sti
jmp
push
jmp
ret
xor
push
xchg
add
ds
sbb
movs
xchg
std
inc
push
sbb
out
jnp
stc
ins
fs
arpl
push
push
bnd
xor
inc
rcr
cmp
cmp
pop
jl
mov
dec
add
(bad)
pop
ins
inc
push
push
es
mov
inc
jb
push
inc
lds
or
push
cli
xor
xor
xchg
or
pop
cwde
push
mov
inc
mov
bound
stos
(bad)
out
cli
fcmove
push
ret
jne
sub
sub
mov
or
call
std
call
sbb
jp
mov
mov
das
add
or
mov
sub
or
repz
mov
mov
pop
out
add
(bad)
in
or
cmps
aas
add
out
inc
movq
jns
lock
or
dec
fistp
inc
sbb
xlat
adc
js
xchg
jmp
lds
mov
(bad)
aas
xor
fcom
jecxz
fs
add
and
fs
xchg
xor
and
test
xlat
add
pop
jo
cmc
adc
mov
js
or
push
sbb
push
inc
jmp
nop
sub
std
(bad)
adc
push
push
ds
push
call
sub
inc
inc
add
ret
mov
pop
pop
and
xor
cmp
push
pop
dec
mov
xchg
mov
aaa
add
push
mov
call
(bad)
call
pop
dec
lds
mov
add
add
(bad)
jge
push
out
mov
cmp
fidivr
ds
pop
lahf
mov
sbb
(bad)
jae
stc
pusha
mov
xor
pop
fs
rcr
lock
add
and
pusha
loopne
xchg
push
ret
(bad)
push
mov
js
inc
mov
nop
push
pop
outs
jae
out
fimul
js
out
mov
inc
and
out
adc
into
shl
mov
imul
pushf
rol
in
(bad)
xchg
mov
ja
cmp
ret
iret
das
sar
inc
adc
add
push
pop
pop
clc
adc
stos
in
call
and
in
lahf
(bad)
in
mov
cmp
add
cmp
dec
in
cli
inc
pop
or
adc
mov
aas
out
add
dec
dec
js
inc
mov
or
pop
push
call
pop
out
add
cmp
jb
dec
dec
retf
inc
lods
or
cmps
add
fs
and
jle
std
mov
xlat
inc
in
test
jnp
fadd
test
aas
jo
pop
push
ret
push
inc
dec
cli
in
push
jmp
je
pop
arpl
sbb
add
add
ins
retf
mov
pop
and
xchg
xchg
ror
cli
cmp
cmp
jmp
stos
add
push
inc
rol
pop
mov
add
jmp
dec
pop
mov
inc
dec
pop
jg
add
ret
push
adc
loop
cwde
xor
dec
ficom
and
call
(bad)
push
xor
inc
mov
inc
(bad)
fidiv
inc
push
mov
(bad)
and
in
ds
and
push
inc
push
mov
jge
movs
imul
popf
shl
out
push
cmp
sub
pop
shr
fs
push
inc
and
push
add
loopne
xchg
push
stos
in
push
outs
pop
or
push
ds
into
mov
xor
mov
(bad)
stos
arpl
shl
add
add
(bad)
pop
dec
or
mov
neg
add
int3
repz
cld
ret
sti
sub
inc
inc
aas
xor
inc
and
rcl
loopne
lds
mov
inc
pop
pusha
adc
pop
rcl
call
je
cmp
ins
jne
jge
(bad)
das
cli
mov
loopne
sub
stos
mov
mov
inc
sbb
inc
add
addr16
les
mov
std
jmp
loopne
aam
pop
lds
push
push
add
(bad)
cmp
outs
cli
outs
push
cmps
sbb
add
or
cmp
adc
adc
inc
retf
add
push
out
jmp
jno
dec
ret
pop
leave
jbe
mov
add
fld
dec
xor
xchg
mov
pop
push
mov
adc
dec
lods
sbb
lds
out
push
push
or
push
dec
mov
dec
jl
push
(bad)
add
xchg
pop
inc
cdq
push
pop
ins
sbb
call
xlat
add
mov
and
add
jae
jge
je
jnp
or
lahf
sbb
pop
sbb
pop
add
pop
dec
dec
adc
aas
out
inc
adc
cmps
ret
fiadd
push
stos
mov
xchg
mov
sub
test
pop
sub
cmp
ds
sub
mov
jp
lods
pusha
add
push
inc
xchg
and
xchg
xchg
clc
dec
push
inc
test
lds
mov
xor
cs
push
inc
je
adc
loop
mov
adc
addr16
sub
and
push
and
jmp
mov
sbb
aas
aaa
in
das
cli
je
pusha
out
dec
ret
xor
ret
adc
(bad)
pop
push
xor
jae
out
test
shr
std
ins
out
shr
pop
xor
scas
clc
inc
jecxz
jg
add
sti
imul
movs
jp
mov
mov
xor
add
cdq
or
sti
hlt
outs
mov
pop
dec
dec
pop
scas
sbb
add
imul
sti
pop
(bad)
cs
adc
dec
std
mov
add
adc
pop
aaa
push
js
fadd
icebp
out
lahf
xchg
popf
add
cs
push
(bad)
fs
push
mov
mov
mov
or
inc
push
pop
and
ret
in
ret
cld
stos
sub
jbe
push
repz
pop
mov
or
add
mov
sahf
std
jg
or
cs
add
loop
inc
lods
aad
and
inc
lods
mov
add
dec
or
dec
or
imul
jmp
(bad)
pusha
mov
xor
ret
push
in
dec
(bad)
fs
pop
(bad)
in
out
jmp
inc
out
rcr
push
ja
pop
mov
inc
dec
add
mov
(bad)
in
add
sti
mov
push
repnz
ret
adc
fadd
push
dec
sub
sbb
push
mov
and
pop
or
lods
cwde
clc
aad
cs
add
mov
lahf
(bad)
lods
sub
scas
es
ret
ins
out
push
jb
inc
mov
push
sar
add
or
out
dec
out
shl
in
push
scas
pop
inc
mov
dec
test
sbb
call
test
dec
arpl
or
jmp
xlat
pop
mov
add
cmovs
add
and
pop
add
bound
pop
mov
sbb
outs
mov
add
cmp
jmp
adc
mov
fild
call
(bad)
mov
aas
push
adc
fwait
jle
aad
daa
xor
adc
je
and
or
std
addr16
mov
and
retf
inc
std
mov
cmps
(bad)
int3
test
std
push
adc
out
mov
sub
xor
out
mov
pop
mov
xor
inc
push
jmp
or
push
ja
xor
push
ins
(bad)
jmp
pop
pop
mov
mov
pusha
int
(bad)
pop
add
jmp
iret
push
jmp
push
inc
shld
mov
fcomi
jg
out
clc
inc
mov
push
pop
int3
push
sbb
adc
mov
addr16
jecxz
push
movs
cli
lock
mov
out
inc
add
mov
mov
adc
cmp
arpl
push
and
ret
mov
push
or
lock
push
repz
aam
add
inc
pop
sbb
out
sahf
div
call
jo
mov
pop
fdiv
imul
xchg
push
inc
cwde
enter
cs
mov
lds
inc
cmp
or
and
aaa
xor
aaa
dec
ficom
test
xchg
mov
xor
inc
std
push
xor
imul
adc
fidiv
add
mov
shl
and
mov
sub
fild
rcl
push
and
push
push
ss
retf
mov
dec
(bad)
mov
and
data16
add
sbb
pop
push
add
or
jl
inc
ret
add
iret
or
fiadd
sub
stos
dec
(bad)
cld
push
push
jp
fistp
dec
mov
nop
fcomip
out
mov
inc
add
jmp
push
jb
inc
cmp
adc
in
adc
retf
repz
loopne
dec
xor
(bad)
jmp
or
add
imul
add
dec
les
jo
clc
mov
pusha
stos
cmps
push
inc
test
sahf
vmaskmovdqu
dec
test
adc
fs
xchg
adc
mov
sti
mov
hlt
outs
add
rcr
ins
mov
jae
push
ror
inc
mov
inc
inc
sub
test
call
je
mov
push
dec
leave
shl
out
(bad)
outs
inc
xor
add
jns
inc
dec
pop
sbb
aaa
push
xor
inc
(bad)
jmp
(bad)
test
mov
jg
fdivr
jnp
add
movs
push
das
jp
je
push
inc
adc
pop
in
push
push
ret
inc
sbb
stc
arpl
xor
retf
inc
mov
icebp
adc
push
adc
ds
jmp
loopne
out
xor
div
and
cdq
add
loopne
popa
add
ret
push
or
int
je
sbb
ror
cmps
cli
sbb
adc
mov
inc
jmp
fidivr
add
test
ja
push
mov
mov
or
jp
bound
cmp
and
clc
out
jb
je
sbb
(bad)
adc
mov
prefetchwt1
sub
adc
push
cwde
adc
aaa
inc
out
push
cmps
pop
(bad)
arpl
(bad)
jg
push
adc
pop
inc
ror
mov
dec
add
jle
push
pop
add
push
dec
(bad)
call
push
clc
or
xor
push
jecxz
mov
pop
ret
push
pop
adc
aas
std
jbe
das
shl
and
mov
(bad)
sti
jmp
pushf
add
std
test
neg
cmp
fsub
jae
jg
inc
cs
jg
push
add
out
push
inc
iret
(bad)
dec
or
sti
add
and
in
and
dec
sbb
test
dec
les
inc
add
out
ds
call
je
mov
add
mov
add
aaa
push
sub
mov
push
loop
mov
rcr
xchg
push
js
push
mov
sbb
mov
call
mov
pusha
dec
scas
aam
ret
jp
mov
adc
inc
push
hlt
adc
xor
push
nop
je
add
pop
out
dec
mov
in
mov
mov
out
jp
pop
xlat
aaa
cdq
movs
das
loopne
mov
add
mov
jmp
fdivr
adc
jmp
xchg
call
inc
ror
mov
retf
push
clc
inc
push
inc
fcomp
pop
jae
sbb
mov
add
pop
aas
pop
adc
cwde
xchg
inc
push
mov
(bad)
add
dec
ja
mov
fmul
inc
push
add
xchg
jp
(bad)
mov
fimul
arpl
movs
push
or
pop
sub
mov
les
inc
dec
mov
push
mov
mov
mov
rcl
ins
mov
mov
pop
pop
pop
ret
mov
inc
mov
add
cmp
lock
cmp
inc
mov
scas
cli
movq
xor
std
jnp
ficom
cld
jo
movs
and
ror
mov
ror
or
push
pop
rol
xor
mov
data16
and
stc
std
jmp
pop
or
mov
fdivp
add
xchg
stos
jmp
sub
pushf
push
ret
add
lods
add
and
jle
ins
test
pop
shl
push
inc
mov
aas
js
inc
push
aaa
mov
xor
adc
rcr
mov
add
mov
dec
cwde
mov
inc
dec
add
movs
mov
into
inc
scas
fisttp
mov
mov
or
mul
(bad)
bound
xor
adc
inc
dec
cmps
jmp
mov
(bad)
dec
push
xor
mov
add
gs
lahf
mov
xor
shr
icebp
jle
(bad)
mov
les
mov
xor
cmp
mov
in
shl
adc
jg
mov
rcl
rol
add
inc
jne
(bad)
mov
pop
mov
inc
mov
dec
shl
jecxz
clc
scas
or
bound
and
mov
mov
repz
cld
ror
and
or
cmp
mov
add
jecxz
call
mov
add
mov
out
mov
clc
or
lmsw
js
fs
pop
inc
inc
mov
mov
ret
or
pop
enter
add
imul
inc
test
(bad)
or
sub
push
(bad)
out
aam
(bad)
out
xchg
cdq
add
nop
dec
(bad)
mov
ret
out
or
push
icebp
mov
sub
sub
and
lahf
inc
adc
inc
push
xor
scas
jle
inc
xor
push
sar
out
sub
call
(bad)
mov
ret
xor
add
dec
mov
push
into
sti
sub
pop
and
js
sar
inc
test
dec
scas
fmul
push
inc
lahf
sub
inc
push
xchg
call
xchg
pop
push
je
add
jl
cli
fild
jno
inc
cmp
pop
mov
fs
ds
pushf
out
bound
sbb
xor
xor
inc
jle
inc
ret
out
mov
add
xchg
jb
pop
jl
adc
dec
fcom
inc
cmc
jle
dec
std
fimul
add
dec
pop
iret
mov
mov
and
xlat
mov
mov
inc
mov
mov
jae
pop
push
jbe
mov
and
add
daa
retf
push
adc
jg
int3
call
mov
aas
das
inc
test
or
lock
(bad)
setb
repz
arpl
add
and
inc
call
adc
and
(bad)
push
(bad)
xor
and
pusha
inc
jmp
push
or
sti
sub
add
mov
add
inc
aam
xchg
push
push
bnd
(bad)
fmul
pusha
and
into
push
dec
mov
jle
mov
fcomi
repnz
inc
pop
in
es
dec
gs
jmp
adc
ret
push
fsub
sbb
dec
mov
call
mov
pop
dec
iret
pop
jp
sub
push
and
sub
push
pop
jl
cmc
ret
dec
sub
out
adc
and
jl
rcr
ss
ja
je
inc
jmp
cmp
jbe
add
or
sub
sub
xor
scas
xchg
into
imul
add
sbb
(bad)
pop
add
xchg
bound
cli
sahf
push
mov
shl
mov
outs
rol
adc
das
adc
movs
pop
jae
loope
dec
pop
pop
mov
push
inc
dec
call
jmp
or
cmp
cld
gs
or
pop
jmp
mov
cs
inc
pop
fcom
and
(bad)
sti
ins
inc
in
inc
mov
sar
dec
add
add
push
stc
add
jg
mov
pop
xor
mov
fdiv
mov
mov
dec
jg
repnz
or
popa
pop
shl
pop
les
data16
jae
mov
push
dec
pop
mov
cmc
not
aas
jecxz
mov
or
repnz
sbb
xor
inc
cmps
out
ret
push
mov
lahf
push
clc
idiv
aam
push
call
sbb
stc
pusha
mov
inc
cmp
nop
ret
je
push
push
or
ret
pusha
pop
icebp
or
mov
jmp
pop
push
xor
sub
mov
adc
hlt
je
pop
and
(bad)
mov
mov
pop
mov
js
jae
or
inc
sub
sub
scas
inc
mov
push
sti
sub
xchg
inc
mov
push
xor
inc
test
mov
and
add
cld
inc
mov
ret
inc
push
add
jge
and
push
in
jae
sub
mov
mov
push
sub
loop
push
rol
lods
sti
push
xchg
fstp
mov
out
rcr
pop
xchg
jmp
xor
or
pop
mov
jle
add
mov
mov
jge
pop
ret
jo
dec
jg
adc
gs
outs
into
arpl
shr
out
mov
add
ja
(bad)
jnp
int
ss
popf
js
mov
aaa
jg
and
mov
jbe
mov
push
ins
pop
mov
add
and
retf
clc
call
pop
mov
inc
pop
and
arpl
add
ins
push
aam
das
ret
sub
add
jae
jp
jb
and
cmp
cli
lods
and
jb
repnz
sbb
push
mov
add
mov
dec
mov
add
add
push
dec
add
fidivr
les
dec
clc
add
push
cld
(bad)
add
stos
mov
icebp
and
cmp
add
cmp
out
movs
jecxz
shl
cld
mov
mov
(bad)
call
inc
neg
push
aam
imul
clc
test
add
ret
jnp
out
mov
xchg
dec
clc
mul
neg
addr16
push
xchg
js
inc
push
fcom
pop
pop
pop
ins
mov
push
fmul
inc
ins
sti
lock
hlt
pop
icebp
aaa
jne
dec
cmc
jno
aas
adc
inc
push
xor
xlat
mov
sub
jl
outs
daa
mov
(bad)
sbb
call
ja
mov
out
and
ins
mov
mov
jg
pop
or
arpl
xor
push
imul
movs
add
mov
ss
llwpcb
stos
push
ret
mov
fist
inc
dec
sbb
adc
mov
dec
sub
out
sbb
in
ret
repz
aaa
or
mov
cmp
retf
aaa
loopne
cli
push
add
pushf
inc
pop
popf
sub
shl
sub
(bad)
out
mov
dec
sub
or
jl
add
sub
sti
push
xchg
idiv
xchg
idiv
push
les
sbb
adc
or
out
loop
ss
jae
cmps
call
xchg
mov
adc
mov
(bad)
xor
push
stos
(bad)
push
out
mov
sub
into
jg
call
and
and
add
and
mov
(bad)
and
mov
jmp
fistp
sbb
push
and
xor
repnz
push
outs
lds
cmp
mov
test
nop
jecxz
je
in
and
or
jne
mov
xor
mov
es
sub
pop
xor
mov
jge
jmp
mov
mov
out
js
mov
out
push
ficom
je
sub
(bad)
xchg
push
adc
test
test
inc
lahf
fst
and
sub
add
bound
das
cld
ss
add
push
dec
rcr
jmp
push
iret
push
cld
sub
ja
mov
pop
ret
jmp
push
pop
nop
test
sar
(bad)
movs
cwde
sub
ret
jle
xchg
pop
add
or
pop
mov
call
inc
or
stc
pop
push
add
out
pop
les
jb
sbb
shl
arpl
sbb
pop
sub
mov
inc
ins
mov
push
test
mov
out
lock
sub
mov
cdq
sbb
cmp
inc
int
sar
rol
cmp
jo
add
cli
aas
inc
(bad)
xchg
test
and
xchg
inc
mov
call
add
(bad)
adc
sub
(bad)
ja
(bad)
cmp
pop
inc
je
inc
inc
icebp
mov
movs
mov
outs
out
sub
xchg
pusha
sahf
loopne
aaa
jno
inc
inc
loopne
dec
mov
inc
cmp
or
mov
mov
push
inc
push
out
arpl
ret
cmp
pop
(bad)
(bad)
cld
cmovg
add
out
push
or
inc
pop
pop
lahf
fcom
inc
inc
lds
stc
add
push
inc
sbb
ret
sbb
mov
sub
retf
mov
jmp
adc
xor
dec
jg
push
or
(bad)
mov
push
arpl
repnz
sub
ror
and
inc
pop
rcl
adc
inc
repz
(bad)
loopne
or
cld
or
mov
inc
inc
add
in
dec
xchg
lods
jl
sbb
push
loopne
or
cmp
test
pushf
rcl
adc
mov
mov
add
arpl
pop
sti
enter
call
sbb
shl
add
xchg
ret
add
xchg
ret
cmps
and
lds
pop
mov
dec
cmp
xor
adc
in
or
add
mov
cs
out
aam
repnz
sbb
push
cli
pop
or
mov
ret
adc
cld
or
sar
or
js
xchg
out
adc
enter
out
jb
dec
out
xchg
mov
cmp
and
jb
cmc
(bad)
es
fs
inc
ficom
dec
icebp
inc
aas
add
xor
inc
inc
pop
mov
adc
jg
push
xor
and
inc
push
sub
push
xor
ins
(bad)
mov
or
mov
inc
je
dec
cmp
shl
jecxz
mov
(bad)
fld
lods
std
jmp
inc
pop
jae
pop
cmp
test
adc
jae
jmp
jmp
gs
jmp
stos
mov
mov
ret
xchg
ret
xchg
mov
popa
and
mov
dec
ret
xor
push
jge
stc
inc
data16
add
push
test
call
movs
sbb
inc
pop
and
inc
mov
js
mov
jl
les
div
mov
test
push
icebp
std
jg
popa
and
clc
(bad)
(bad)
gs
out
mov
loopne
fiadd
jae
pop
bound
push
mov
cmp
and
pop
ficom
add
inc
ins
mov
rol
sub
dec
fdiv
jg
sbb
push
je
xchg
inc
ret
inc
sti
add
sbb
push
push
inc
add
fcomi
test
inc
dec
inc
scas
sbb
mov
gs
add
adc
or
lods
es
fs
sti
sub
jmp
(bad)
jl
add
icebp
jle
in
(bad)
out
or
aad
fwait
inc
cli
or
in
sub
lock
adc
call
mov
or
das
pop
mov
mov
xor
push
cmc
outs
pop
xor
push
mov
sbb
and
jle
hlt
ja
fmul
and
jo
mov
clc
dec
mov
dec
out
ret
movs
std
push
ficom
int
or
sti
add
in
enter
or
ret
mov
dec
lds
sbb
push
jp
adc
mov
pop
add
jg
lds
mov
jmp
or
cmp
(bad)
(bad)
jmp
mov
repnz
add
pop
(bad)
fild
xlat
enter
jmp
je
add
add
push
adc
fs
or
je
mov
jg
sub
or
cmp
mov
clc
cmp
add
add
push
jb
sub
mov
(bad)
jmp
call
mov
pusha
pop
inc
loopne
jmp
mov
movsx
mov
ret
lsl
stos
xor
pop
adc
ror
cmc
imul
push
cmps
jb
mov
je
call
or
(bad)
out
pop
sbb
aas
push
fdivrp
pop
in
mov
fstp
inc
sbb
ss
pushf
ja
(bad)
mov
out
cmp
jbe
pop
jp
add
sbb
mov
into
ror
ret
push
mov
(bad)
ins
pop
inc
jle
rcl
imul
shl
call
aaa
mov
and
inc
push
push
out
sbb
mov
pop
mov
shl
mov
cmps
iret
sub
hlt
add
or
fiadd
cmp
jle
jmp
ja
lds
jl
fisttp
loopne
fiadd
cmps
es
(bad)
jg
icebp
mov
fptan
push
push
jb
outs
mov
jae
inc
iret
or
pusha
out
shr
dec
push
in
dec
aas
mov
adc
jle
call
add
cmc
sub
dec
dec
cmps
add
xchg
pop
mov
dec
je
dec
push
cmc
lahf
add
mov
es
push
(bad)
jge
mov
ja
xchg
adc
xchg
mov
and
adc
cld
mov
(bad)
lds
aas
rcl
jp
push
outs
and
push
int
pop
into
out
add
mov
and
or
pop
ret
sti
push
or
js
not
movs
add
ss
or
call
scas
adc
pop
bound
stc
and
jno
mov
or
adc
call
(bad)
pop
push
pop
cmp
cli
and
xchg
mov
(bad)
dec
xor
cmp
cmp
(bad)
add
add
inc
shl
daa
out
cli
shr
dec
(bad)
in
add
add
inc
mov
add
adc
test
mov
mov
push
inc
cmp
clc
fwait
or
(bad)
in
fadd
repz
ficom
push
xchg
mov
push
add
stos
inc
mov
or
xchg
sbb
lods
(bad)
jmp
push
dec
push
mov
add
fdiv
add
imul
rol
jle
cmp
add
push
cli
fadd
mov
in
mov
mov
cmp
shl
gs
aas
add
push
or
pop
call
and
add
mov
cmp
cmp
retf
mov
mov
mov
fwait
mov
mov
inc
mov
mov
inc
and
push
stos
and
(bad)
push
scas
nop
cmp
or
rol
fiadd
jmp
sbb
pop
(bad)
sub
mov
gs
aad
pop
ins
mov
ret
(bad)
(bad)
jg
movs
clc
push
cmp
and
out
inc
jmp
mov
inc
mov
push
js
inc
repz
fisttp
mov
es
stos
jo
inc
mov
jb
ret
gs
fbld
push
pop
or
cs
push
test
imul
mov
push
push
xlat
dec
aad
pop
mov
ins
fld
mov
jp
push
xchg
jp
cmp
jmp
enter
call
jmp
std
mov
push
xchg
mov
xchg
xchg
and
sar
stos
in
dec
cmps
es
call
ret
inc
mov
inc
jne
dec
jmp
dec
(bad)
sbb
jge
fdivr
inc
xchg
pop
retf
pop
xor
out
cmps
sbb
les
mov
add
mov
ja
inc
fs
(bad)
lahf
(bad)
jge
sbb
inc
(bad)
mov
jp
in
push
ret
inc
xor
adc
inc
adc
jg
mov
shr
dec
out
dec
inc
push
shr
sub
stos
or
mov
aas
in
sub
pop
jne
cli
xor
pop
mov
push
adc
mov
aas
push
frstor
pop
push
or
mov
mov
hlt
inc
shr
pop
je
rol
inc
addr16
in
push
(bad)
cld
not
push
scas
dec
mov
fs
std
push
enter
add
pop
inc
sti
(bad)
js
or
hlt
ret
pop
dec
cmp
push
mov
dec
inc
cmp
push
ret
mov
pushf
adc
out
clc
mov
std
mov
pop
maskmovq
div
aas
mov
daa
or
sub
inc
add
pop
xor
ja
(bad)
fist
mov
push
call
add
out
fldcw
fidivr
aas
push
movs
loopne
aaa
aas
ret
push
stos
mov
(bad)
idiv
xchg
pop
sbb
add
pop
xor
mov
(bad)
mov
inc
inc
adc
push
inc
aas
rcl
mov
out
lds
add
mov
pop
mov
sub
test
(bad)
test
sti
sub
jle
mov
cmp
sub
mov
aad
scas
clc
pop
gs
mov
cwde
inc
jle
pop
inc
retf
or
repz
push
mov
jb
jg
aas
lahf
add
sub
mov
pusha
(bad)
out
aas
inc
xchg
jecxz
inc
inc
fiadd
inc
and
rcr
add
jmp
(bad)
repz
push
or
add
add
push
arpl
ret
mov
arpl
rcr
mov
push
inc
rcl
push
jmp
mov
pop
lock
(bad)
inc
int3
mov
jno
push
dec
(bad)
rol
mov
nop
mov
std
ja
xor
mov
std
mov
and
clc
dec
dec
add
cld
(bad)
fisttp
fidivr
inc
inc
stc
aas
cmps
add
mov
sahf
ret
aad
psubusb
aas
out
inc
and
add
jb
stos
mov
jmp
mov
add
movntq
loop
pop
je
mov
mov
or
sahf
inc
pop
xchg
dec
add
xor
adc
sub
jg
inc
fimul
je
cmp
mov
inc
outs
inc
scas
xor
pop
pop
(bad)
rol
ret
inc
inc
dec
pop
sbb
aas
or
adc
jecxz
scas
push
cmp
out
mov
bound
jae
call
push
mul
mov
cld
pop
jg
add
inc
sti
dec
mov
dec
icebp
outs
sbb
jg
mov
push
add
mov
jp
ss
xlat
dec
adc
cs
dec
or
mov
lds
xlat
sar
stos
add
add
out
ins
cmp
lds
sbb
pop
outs
call
mov
cld
inc
(bad)
js
add
pop
test
inc
test
xor
jbe
fs
sub
addr16
cmp
push
add
xor
ret
push
lahf
adc
push
jmp
ret
push
adc
jmp
push
fs
out
call
and
push
outs
pop
add
and
imul
std
jg
dec
out
mov
push
out
(bad)
push
scas
fcomip
sbb
mov
pop
jge
mov
test
xor
add
or
push
push
fidivr
shld
sub
push
jle
push
fsub
(bad)
xor
or
add
xchg
jecxz
mov
push
mov
movs
or
fadd
mov
cmp
and
jbe
mov
sub
inc
rol
push
je
out
xor
(bad)
(bad)
sub
in
pop
es
mov
jle
ret
pop
cld
out
mov
xor
pop
and
(bad)
mov
(bad)
mov
bound
sub
test
cmp
adc
and
and
mov
test
(bad)
mov
mov
jg
dec
outs
mov
inc
pop
sar
gs
inc
mov
add
(bad)
jg
test
out
les
adc
xchg
popa
mov
(bad)
mov
(bad)
fwait
mov
and
push
mov
scas
and
or
and
pop
ins
cmp
and
pop
addr16
hlt
outs
pop
jmp
mov
mov
mov
std
adc
div
(bad)
sub
arpl
fwait
pop
xor
push
push
push
jmp
in
adc
add
pop
inc
mov
pop
and
loopne
jo
inc
push
sbb
push
(bad)
js
aaa
sbb
mov
inc
dec
push
in
xor
jmp
ret
mov
movs
pop
js
or
jnp
sbb
mov
adc
mov
add
mov
in
mov
aaa
add
aas
or
outs
inc
pusha
mov
pop
inc
ret
pop
sahf
inc
loope
inc
cwde
mov
add
jge
and
and
jp
(bad)
xchg
xor
cmc
adc
mov
dec
arpl
mov
ja
sbb
test
pop
xlat
add
inc
and
inc
cmp
aas
aam
add
mov
dec
inc
outs
xchg
out
cld
leave
out
push
dec
popa
or
fisubr
mov
inc
mov
add
push
or
mov
add
pop
add
add
xchg
clc
ja
inc
cmp
outs
(bad)
jae
movs
and
and
rol
push
test
(bad)
jbe
add
push
cmp
ret
ret
cmp
dec
xlat
pop
and
add
out
pop
lahf
or
xchg
inc
adc
lods
test
jmp
cmp
addr16
imul
inc
sub
add
and
jg
adc
mov
pushf
mov
and
enter
sub
mov
mov
jmp
add
xor
mov
dec
or
inc
xchg
mov
gs
push
add
or
mov
xor
ja
jmp
aad
jmp
xor
cmp
in
inc
imul
not
cmc
push
cwde
call
adc
jg
pop
and
add
mov
jmp
ins
cmp
je
pop
mov
fwait
dec
shl
jmp
gs
fs
inc
pop
sbb
xchg
(bad)
outs
aam
pop
(bad)
mov
add
add
push
cmps
add
jmp
daa
dec
mov
fld
cmp
cmp
and
inc
jae
pop
sbb
add
add
pusha
push
mov
add
inc
or
pop
add
sbb
mov
fistp
sbb
movups
(bad)
fcmovnb
inc
mov
jbe
mul
(bad)
mov
add
cmp
push
hlt
jl
out
push
inc
ret
pop
dec
cmp
jno
out
aas
test
dec
xchg
ror
jmp
xchg
jge
add
sbb
test
lock
and
mov
pop
push
or
xchg
into
mov
push
imul
ds
std
fs
xlat
mov
in
std
out
xor
and
ins
adc
pop
cmp
clc
pop
lahf
rol
mov
(bad)
mov
push
ins
arpl
xchg
mov
bnd
push
addr16
aaa
mov
add
fcomip
add
inc
push
sub
push
inc
mov
pop
add
(bad)
push
mov
jg
inc
lds
dec
test
dec
jo
movs
push
repz
mov
xor
out
fcomp
sbb
xlat
mov
nop
inc
mov
pop
dec
clc
ja
sub
cld
mov
mov
xchg
jecxz
dec
add
fwait
in
ret
adc
cmp
dec
mov
es
mov
clc
push
jp
(bad)
dec
sbb
neg
jb
iret
mov
or
sbb
inc
ins
add
xchg
jae
sar
jbe
push
mov
outs
jle
cmp
call
add
adc
(bad)
pop
ret
(bad)
mov
sbb
mov
pop
ja
mov
into
fiadd
jo
data16
inc
inc
mov
je
xor
sub
inc
in
cmp
add
dec
popf
sub
sar
cmp
push
in
arpl
xor
(bad)
push
aas
mov
adc
xchg
push
ror
xor
mov
inc
lods
clc
call
(bad)
jmp
adc
stos
push
dec
out
inc
cmp
arpl
push
dec
and
aaa
scas
add
mov
push
ret
(bad)
jg
jae
cmp
pop
xor
(bad)
mov
aam
repnz
in
sar
je
fwait
mov
and
daa
inc
in
fiadd
dec
mov
inc
pushf
pop
push
outs
(bad)
ss
fnstenv
push
ret
(bad)
jg
dec
out
and
dec
pop
add
inc
mov
push
adc
std
push
(bad)
out
cli
rcr
shr
js
adc
(bad)
jmp
(bad)
bswap
mov
out
push
push
outs
(bad)
xchg
inc
ret
jb
(bad)
add
fsub
jg
push
std
adc
add
popa
mov
push
add
or
or
adc
dec
add
inc
mov
clc
stos
or
out
pop
pop
das
out
cli
xor
repnz
mov
adc
pop
xor
call
mov
push
aas
jmp
sbb
add
jp
test
idiv
mov
cld
xor
out
pop
mov
push
dec
inc
mov
loopne
std
std
cld
out
int
xchg
(bad)
push
repz
int
push
pusha
jmp
jp
in
clc
or
jmp
xchg
jecxz
sbb
cmp
(bad)
cmp
stos
push
imul
outs
mov
mov
repz
(bad)
pushf
push
movs
jae
cli
int
pop
add
fld
outs
ret
sub
jno
add
mov
push
fild
std
data16
inc
lock
enter
test
xor
lds
inc
sbb
mov
mov
push
imul
gs
jmp
je
pandn
pop
ror
cmp
mov
(bad)
(bad)
mov
and
mov
mov
out
imul
scas
cli
pop
test
out
inc
xlat
sti
inc
jnp
xor
ret
mov
push
add
push
push
aaa
stos
sahf
adc
jmp
mov
ret
push
push
mov
cmc
mov
mov
ret
call
aaa
xlat
hlt
jmp
stos
cmc
cli
jno
jmp
add
inc
sar
out
jbe
push
in
add
pop
sub
fisttp
inc
pop
imul
lods
pop
inc
dec
scas
pop
leave
fmul
mov
push
mov
imul
into
cs
sbb
or
push
add
fisubr
lock
shl
push
gs
nop
data16
adc
mov
in
xor
fild
or
mov
data16
sar
inc
retf
jae
xchg
(bad)
mov
add
push
(bad)
(bad)
mov
shr
iret
xchg
sbb
sbb
(bad)
mov
das
cmc
repz
add
mov
scas
stos
add
cld
or
jne
add
dec
mov
pop
cmps
es
pop
jnp
movs
shr
xor
dec
lds
jo
mov
push
ins
cmp
in
push
mov
add
dec
aam
inc
xchg
add
push
test
pop
hlt
jns
ficomp
outs
fisttp
lock
out
cwde
fcom
mov
mov
add
mov
mov
mov
mov
mov
int3
rol
div
jg
dec
or
inc
(bad)
std
mov
fadd
aaa
jne
cdq
call
jo
adc
pop
inc
or
out
pop
(bad)
jo
and
call
sbb
sti
inc
add
mov
mov
jae
inc
sti
(bad)
pop
mov
in
inc
ins
dec
icebp
push
outs
mov
or
and
jb
mov
sti
pusha
pop
or
hlt
cmps
push
xchg
add
jecxz
or
rol
dec
sbb
fsubr
aas
ret
clc
or
inc
lds
(bad)
fild
add
(bad)
push
(bad)
jmp
inc
xchg
aaa
sbb
ds
pop
mov
sub
inc
xchg
fisub
aam
test
cld
sbb
fsubrp
push
das
xor
xlat
imul
rol
out
push
out
jmp
mov
mov
aaa
ins
dec
inc
outs
sub
jmp
mov
and
dec
sti
(bad)
in
jmp
inc
add
dec
cmc
pop
inc
jg
or
out
xlat
ret
and
cmps
xor
scas
sbb
out
ins
mov
ret
outs
dec
sub
adc
sbb
loop
and
sbb
mov
daa
rol
scas
inc
ret
movs
repnz
pop
mov
clc
arpl
outs
xchg
jo
pop
mov
cld
sti
mov
inc
xchg
out
mov
add
fs
cli
or
out
mov
cwde
mov
ret
fisubr
dec
cld
fisubr
test
pop
pop
lds
mov
push
sti
add
fst
hlt
push
push
inc
(bad)
fwait
jo
aam
je
movs
pop
pop
push
ret
push
pusha
cmp
pop
mov
cmp
add
or
cmps
mov
repnz
and
or
inc
inc
xlat
idiv
push
jmp
fs
lahf
pop
inc
xchg
popa
add
imul
je
add
aad
idiv
adc
das
adc
or
neg
jmp
dec
mov
and
and
out
inc
inc
pop
mov
outs
push
pop
pop
mov
and
fisttp
jmp
mov
add
cmc
ins
mov
dec
mov
fbld
pusha
xchg
fs
add
ja
dec
mov
adc
rol
xchg
jmp
xor
call
push
clc
add
xchg
mov
out
mov
aad
dec
lds
sbb
push
sar
es
pushf
dec
jbe
mov
shr
inc
pop
inc
add
adc
mov
or
push
add
lods
(bad)
push
dec
pop
test
push
inc
push
xor
cmc
scas
push
into
movs
push
je
std
xchg
test
lods
arpl
hlt
or
jp
jbe
pop
(bad)
fbld
ds
aas
inc
arpl
test
dec
retf
push
jae
fst
inc
aam
rol
gs
pushf
pop
dec
add
mov
ins
push
rcr
and
neg
cmp
fcmovnbe
adc
adc
(bad)
call
add
lods
push
mov
jnp
mov
pop
inc
cwde
and
jnp
xor
inc
outs
sbb
arpl
mov
mov
mov
pop
out
and
inc
(bad)
xor
pop
retw
jg
call
push
mov
xchg
ret
push
or
inc
adc
mov
pop
popa
cmps
shr
outs
xor
jg
cmc
pop
or
mov
int
push
ret
push
out
sldt
dec
loop
loope
or
mov
or
mov
fs
and
nop
jmp
mov
ret
sbb
cli
pop
ret
sbb
lods
pop
xchg
mov
mov
pop
(bad)
in
out
inc
sti
dec
mov
push
in
mov
push
aaa
fsub
jg
lock
dec
(bad)
xlat
out
std
cmp
fild
sti
pop
jae
not
push
inc
add
enter
std
cmp
mov
(bad)
jno
add
or
stos
or
add
out
clc
sbb
fild
ret
int
outs
jg
adc
retf
mov
std
add
mov
ja
fist
inc
mov
adc
or
pusha
or
je
idiv
mov
(bad)
adc
cli
pop
lds
inc
push
jae
push
sub
or
inc
(bad)
int
retf
and
inc
dec
aas
push
and
xchg
or
mov
cmp
ja
adc
outs
jae
xor
jmp
rol
pop
add
mov
sub
stos
jmp
js
jp
cmp
mov
(bad)
out
sub
and
sub
test
je
adc
cld
xchg
push
inc
es
fisttp
xor
retf
mov
inc
jmp
in
fadd
jmp
pop
adc
fs
test
mov
(bad)
fisttp
outs
push
push
iret
je
dec
mov
pop
aaa
in
jnp
sbb
aam
sar
fbld
push
inc
stos
inc
inc
fsub
cmps
adc
mov
mov
test
xchg
pop
inc
push
stos
call
in
mov
mov
inc
arpl
rcr
mov
inc
pop
dec
enter
ret
mov
push
and
jp
icebp
push
adc
jecxz
mov
gs
scas
sti
test
or
loopne
pop
pop
pop
and
ss
and
add
outs
add
pop
add
cs
mov
call
inc
imul
pusha
xchg
dec
cli
fild
out
sbb
cmc
jg
mov
sbb
pop
clc
push
ins
push
inc
inc
sbb
jne
inc
adc
sub
push
or
xor
jle
inc
mov
xor
std
call
pop
fs
inc
inc
adc
les
call
add
xchg
xchg
repz
pop
cmp
jecxz
adc
in
imul
mov
shr
pushf
out
pop
xchg
out
(bad)
aas
clc
outs
lock
inc
pop
or
stos
sar
(bad)
(bad)
fs
inc
fidiv
add
inc
sub
std
jg
inc
push
pop
mov
repz
or
add
pop
and
dec
lods
mov
lds
mov
add
dec
inc
scas
sub
sti
add
pop
ins
add
fs
lods
pop
cmp
dec
mov
jmp
sti
jp
mov
sbb
add
(bad)
lahf
jmp
jl
xor
dec
fiadd
sbb
push
bound
and
les
pusha
sbb
pop
or
or
repz
aas
inc
mov
or
jl
clc
cmp
cmc
mov
adc
dec
pusha
pop
inc
pop
inc
inc
stos
mov
test
xchg
add
push
pop
push
xor
dec
push
mov
jecxz
or
dec
mov
add
mov
nop
or
mov
gs
xor
into
or
add
xchg
jae
les
ret
or
pop
test
pop
int
xlat
fst
push
xchg
loope
ja
push
add
inc
add
add
push
sub
push
ret
jp
mov
mov
add
(bad)
sti
inc
pop
pop
mov
call
pop
ds
push
inc
pop
aad
inc
inc
mov
jno
xlat
in
cmps
aas
push
jle
lock
mov
fidiv
lds
inc
push
push
inc
jge
xchg
outs
das
pop
xor
add
pop
lds
and
dec
ins
scas
fst
cdq
xor
popa
je
into
vmovhps
arpl
adc
mov
sbb
pop
xor
ss
inc
je
retf
fisttp
imul
add
push
arpl
xor
aas
pusha
xor
add
add
fwait
push
stos
in
out
loop
test
or
sti
imul
ret
pop
and
popa
inc
(bad)
sub
push
bound
scas
pop
pusha
xlat
mov
(bad)
and
cmp
push
lods
sub
jae
js
ss
mov
test
push
call
jno
xchg
or
push
jl
call
sub
aas
inc
lock
lahf
push
inc
jae
loopne
push
and
not
inc
aas
push
or
add
xchg
jnp
push
or
mov
fs
inc
or
clc
jmp
push
mov
inc
(bad)
jae
pop
mov
jae
std
add
cmp
xchg
out
dec
aaa
movs
add
out
ret
add
mov
fild
(bad)
jl
dec
pop
mov
and
inc
pop
les
repnz
add
xor
and
pop
or
sub
stc
xchg
ficomp
pop
std
call
add
mov
cmp
imul
or
ret
pop
cmc
aad
inc
test
inc
inc
ss
inc
call
push
xor
sub
push
dec
icebp
test
inc
aas
and
and
inc
mov
or
stc
sahf
push
aam
ins
pop
xor
inc
test
push
ins
add
add
inc
movs
addr16
pop
ret
inc
jmp
cli
(bad)
scas
xchg
sahf
xchg
sbb
call
sub
pop
add
clc
aas
sbb
mulps
cmp
outs
push
mov
mov
cmp
in
inc
cmps
shr
test
pop
mov
out
mul
jae
add
out
out
xlat
cmp
cwde
jle
jno
add
mov
push
inc
adc
call
ins
fs
add
push
push
(bad)
adc
pop
push
nop
hlt
mov
lds
dec
adc
push
jae
push
lock
pop
adc
fst
sub
pcmpgtb
pop
retf
inc
adc
daa
popa
add
pop
inc
dec
mov
add
inc
pushf
pop
push
inc
jge
sbb
add
and
xchg
ins
enter
mov
mov
je
ins
cmps
jle
jae
out
add
jae
push
in
inc
sbb
data16
mov
inc
or
lar
sar
push
adc
mov
pop
sub
dec
rol
dec
fidiv
or
push
(bad)
loopne
shr
std
aad
pop
inc
aas
mov
xor
xchg
lds
or
ins
push
std
mov
cmps
or
pop
mov
jno
mov
sti
outs
xchg
mov
pop
pop
xor
jmp
das
jmp
pop
(bad)
loopne
je
push
add
dec
cld
loop
out
outs
aas
xor
cmp
nop
and
aas
ret
push
pop
push
idiv
sub
loope
jmp
jb
int
(bad)
imul
(bad)
shl
shl
inc
rcl
pop
ret
aad
(bad)
scas
push
add
ds
and
in
mov
rcr
mov
inc
mov
or
addr16
xchg
push
imul
add
ins
and
jl
lds
(bad)
inc
out
adc
add
mov
mov
mov
out
inc
jae
mov
pop
clc
fild
repnz
or
and
jns
cwde
mov
add
sub
jnp
or
ins
in
cmp
fcmovbe
mov
push
inc
test
movs
jg
jmp
pushf
dec
pop
shl
add
or
aam
iret
dec
mov
inc
pop
out
adc
or
cmp
shr
lds
xchg
xchg
hlt
push
lea
ins
add
cmp
adc
mov
pop
pop
dec
xchg
shr
(bad)
fild
(bad)
fstp
addr16
loopne
mov
jmp
sbb
adc
or
test
jmp
xor
lods
xchg
push
push
daa
dec
test
xlat
push
push
and
sub
retf
shl
add
inc
adc
pop
popa
jp
inc
push
pop
xor
adc
xlat
dec
(bad)
dec
push
clc
in
stos
sahf
rcl
inc
inc
jb
jl
call
mov
(bad)
sahf
out
mov
jnp
mov
xlat
lock
js
add
or
inc
bound
mov
scas
pop
ins
or
ret
xor
add
movs
ret
pop
std
xlat
inc
clc
dec
adc
out
jno
pop
je
jp
(bad)
fbstp
stos
sbb
add
jg
add
icebp
imul
test
loopne
sub
pop
push
inc
aas
jle
dec
dec
mov
int3
xor
loope
mov
out
cmp
outs
xor
jmp
out
mov
xor
pop
aad
mov
(bad)
mov
sub
ret
push
pop
add
adc
push
inc
jle
(bad)
xor
cli
jmp
fiadd
imul
xor
arpl
jle
fld
sbb
fisttp
jmp
(bad)
inc
mov
jo
mov
iret
aas
cmp
fnstsw
inc
loopne
idiv
jg
mov
dec
mov
pop
mov
and
dec
arpl
xchg
xchg
mov
(bad)
jae
push
dec
ins
adc
pop
cmc
push
pop
shl
fnstenv
mov
inc
mov
fwait
or
dec
or
and
ds
pop
pop
and
pusha
aaa
push
sub
ret
or
scas
lahf
inc
add
jmp
gs
mov
movnti
pusha
push
(bad)
in
and
jbe
mov
addr16
shr
gs
je
cmp
ror
stos
scas
movs
xchg
jno
add
ret
dec
add
je
fdivr
or
js
mov
jmp
test
mov
cmc
std
jg
and
jmp
out
cld
jle
scas
loope
pop
xchg
mov
ins
das
into
xchg
push
or
adc
(bad)
pushf
fisub
add
push
in
push
(bad)
push
(bad)
pop
cmp
cld
dec
std
(bad)
std
jo
outs
adc
add
sbb
xor
(bad)
mov
pop
ret
push
clc
cli
sti
xlat
inc
add
test
mov
stos
add
aas
pop
ficomp
inc
ins
adc
lock
ret
mov
jmp
xchg
lds
mov
jmp
(bad)
inc
stos
mov
xor
sbb
sbb
or
outs
inc
je
sub
aam
xchg
add
rcl
loopne
add
push
cmp
outs
(bad)
pop
jp
push
sub
dec
jae
cmp
mov
inc
add
xchg
fidiv
call
push
(bad)
push
ror
pop
pop
pop
(bad)
cli
mov
lds
sub
mov
mov
jmp
push
mov
out
add
arpl
inc
shr
jbe
movs
add
mov
push
cwde
or
cld
stc
push
xor
bound
or
outs
clc
adc
aas
push
aas
adc
aas
idiv
cmp
mov
push
pop
xor
fninit
rol
add
pop
sub
mov
and
jb
inc
aam
mov
aaa
mov
cli
jmp
inc
in
test
add
dec
mov
mov
lahf
pop
sahf
mov
cmp
cld
pop
dec
aaa
and
neg
enter
or
nop
inc
aaa
retf
repz
scas
add
(bad)
int3
mov
cmove
inc
lods
ficomp
inc
std
aaa
mov
or
mov
lds
loope
add
push
inc
cmp
in
test
inc
mov
cli
std
jp
add
scas
xor
sub
push
test
mov
xchg
(bad)
gs
call
inc
test
arpl
inc
add
test
loopne
pop
loop
pop
jb
mov
scas
sahf
aas
scas
(bad)
movs
test
add
cmp
or
xor
inc
mov
(bad)
repz
mov
add
and
mov
loop
lahf
sbb
push
in
mov
pop
add
adc
aaa
inc
clc
dec
jo
test
inc
pop
clc
add
ret
sbb
pop
and
scas
cli
mov
jle
cmps
xchg
fdivr
xor
sub
in
test
(bad)
rcl
mov
mov
ret
popf
(bad)
scas
dec
add
je
inc
adc
add
jl
les
jl
bound
dec
adc
aaa
sbb
fcomp
jnp
pop
pusha
pop
adc
test
push
loop
es
mov
lahf
jmp
and
jmp
jg
pop
and
cmc
push
dec
jg
pop
imul
inc
nop
ja
mov
dec
mov
call
in
popa
adc
sbb
and
adc
pop
mov
ret
das
cwde
mov
fist
mov
push
add
mov
lds
xor
or
sbb
sub
inc
pusha
inc
or
ins
adc
dec
clc
outs
call
lock
cmp
inc
je
test
pop
inc
icebp
rol
fs
psllq
leave
test
int3
dec
cmp
inc
loopne
mov
repz
adc
mov
sub
das
std
ret
dec
(bad)
and
(bad)
push
xor
sbb
(bad)
fwait
std
mov
and
pop
sbb
movs
retf
pop
inc
mov
cmp
jno
sub
cmovle
sub
mul
jle
inc
ins
adc
mov
sti
mov
stos
in
add
and
aaa
inc
cmp
push
or
add
push
sbb
aas
mov
(bad)
push
push
ja
jo
out
std
jg
jo
dec
pop
xor
sbb
push
mov
pop
jg
sbb
inc
call
inc
mov
or
mov
inc
daa
popa
inc
jbe
jne
arpl
pusha
shr
sbb
pop
add
gs
adc
mov
add
add
mov
dec
adc
sbb
les
xchg
mov
pop
xchg
add
dec
(bad)
fisttp
add
not
jg
ret
cmp
cmp
mov
and
dec
mov
adc
pop
out
mov
jne
hlt
lock
sbb
adc
pop
outs
hlt
lds
adc
push
inc
mov
xchg
(bad)
fstp
(bad)
jnp
call
push
fs
sti
(bad)
jecxz
repz
pop
fs
stos
leave
jae
xor
add
mov
mov
push
imul
dec
call
sub
jbe
add
stos
add
pop
clc
inc
xlat
add
aam
daa
pop
gs
add
jmp
push
add
mov
cmp
adc
inc
push
mov
call
pop
and
(bad)
sbb
mov
mov
outs
sub
test
pop
dec
dec
xchg
sti
xor
push
ret
sbb
add
xor
sar
push
mov
ret
sub
(bad)
add
inc
mov
pop
pusha
mov
cld
dec
sub
or
addr16
inc
pop
fadd
neg
inc
or
pop
add
jo
fwait
in
push
inc
jmp
loop
or
jb
adc
call
mov
ds
sbb
adc
or
stc
ss
sub
rol
push
call
dec
pop
and
jae
add
sub
sub
sbb
jg
in
pushf
repz
jmp
push
es
push
(bad)
jge
mov
arpl
mov
dec
(bad)
inc
ret
fild
pop
mov
imul
clc
push
xor
inc
jnp
mov
push
pop
fwait
sub
xor
dec
dec
cwde
inc
mov
mov
mov
xlat
test
add
jae
mov
pop
sbb
fwait
mov
sahf
lea
movups
xor
inc
ins
ret
test
shl
dec
in
aaa
adc
or
nop
mov
mov
add
sub
mov
push
mov
or
adc
mov
sar
aaa
pop
je
push
ficomp
std
inc
push
jl
push
dec
xor
pop
cmc
sbb
pusha
sar
push
mov
mov
cld
pop
lds
clc
jno
sti
inc
and
mov
ret
pusha
cmp
out
aad
(bad)
and
ins
add
scas
add
or
jmp
xchg
aam
jnp
arpl
mov
push
jmp
dec
movs
lock
(bad)
out
ins
adc
dec
dec
retf
fst
ds
pop
pop
push
sub
inc
cmp
sub
adc
std
xor
pop
or
jmp
xlat
cmc
mov
xchg
nop
das
jg
mov
out
aaa
add
ret
inc
test
rol
mov
mov
fwait
mov
(bad)
das
inc
(bad)
sub
arpl
call
pop
jg
mov
les
mov
mov
sub
mov
dec
arpl
mov
lods
or
or
dec
push
add
out
cmp
sbb
std
pop
pop
add
es
pop
ret
pusha
jb
sbb
mov
inc
ret
imul
lea
(bad)
cmp
pop
inc
je
inc
xchg
(bad)
pop
lock
retf
imul
xor
sub
pop
or
or
add
dec
inc
cld
jmp
dec
dec
xchg
xor
(bad)
xchg
xor
cmc
into
ins
icebp
pop
fldz
ss
add
mov
add
jne
out
ret
push
or
scas
js
hlt
sub
mov
mov
sti
dec
lock
jmp
and
arpl
dec
jmp
ficom
lds
pop
movups
pop
les
loopne
pop
add
mov
mov
out
mov
in
(bad)
mul
in
mov
pop
pop
pop
rol
xor
jle
inc
sub
repz
xchg
sub
xor
mov
retf
out
mov
jecxz
je
mov
push
ss
(bad)
ret
adc
es
add
or
inc
push
out
inc
add
or
sbb
inc
pushf
dec
repz
sub
adc
push
push
pop
dec
ins
push
inc
or
dec
push
ret
and
dec
call
xchg
fs
pop
hlt
ja
xchg
daa
adc
sti
xor
push
push
sub
push
inc
jg
sub
mov
push
sar
lods
aad
repz
adc
ss
pop
mov
sub
inc
mov
pop
push
cld
adc
pop
inc
push
mov
pop
mov
ret
ret
mov
out
mov
jno
and
xor
and
or
jne
or
aas
push
and
xchg
or
dec
jg
shl
div
push
in
outs
add
mov
jb
loop
fmul
sti
add
push
cld
lahf
or
pop
arpl
pop
test
das
pop
std
ret
jecxz
mov
pop
or
repz
ins
inc
sub
mov
inc
sub
mov
outs
pop
add
neg
push
mov
pop
inc
jae
cmp
and
ror
push
mov
call
aas
ret
push
pop
(bad)
(bad)
push
xlat
arpl
add
mov
ins
or
rcl
pop
(bad)
or
lds
add
add
dec
(bad)
pop
adc
data16
sub
adc
jae
pop
mov
(bad)
pop
add
dec
pop
and
btc
popa
outs
out
mov
movs
icebp
push
xchg
xchg
popa
ins
jg
jae
cmps
push
cwde
(bad)
stos
int3
int
out
mov
sbb
int3
lock
out
fmul
push
pop
cli
jg
jl
add
xchg
jg
mov
mov
repz
mov
mov
sub
pop
je
xor
mov
aas
call
pop
sbb
frstor
cdq
and
cs
and
mov
enter
inc
jmp
inc
std
addr16
push
jmp
xor
stos
push
retf
call
inc
addr16
jg
fisub
mov
sti
(bad)
jb
cmp
pop
cmc
adc
cmc
sub
call
sbb
push
jb
and
and
mov
jmp
pop
add
pop
and
icebp
adc
retf
or
mov
and
push
or
hlt
call
push
adc
adc
jo
mov
ins
call
rol
add
shr
fnstcw
dec
push
inc
sar
inc
es
arpl
jae
add
add
push
imul
push
out
loop
mov
inc
pxor
mov
loope
mov
mov
(bad)
push
xor
inc
das
fadd
pop
jae
arpl
mov
push
or
test
push
adc
mov
inc
add
pop
add
pop
mov
sbb
fild
imul
inc
shl
push
cmc
rcr
sbb
std
in
inc
inc
inc
add
mov
pusha
pop
mov
inc
push
add
push
jecxz
and
or
int3
sti
xlat
out
add
push
rcr
xor
push
cmp
(bad)
dec
mov
jnp
and
jae
sti
mov
sbb
addr16
out
scas
and
icebp
lock
in
cmp
fcmovb
mov
and
push
mov
push
loope
dec
inc
pop
stos
dec
push
mov
adc
cwde
cmp
lahf
push
xor
add
add
(bad)
repz
icebp
ds
stos
add
adc
jae
inc
ror
pop
pop
push
inc
push
and
add
jg
jb
les
push
(bad)
push
cmps
rcr
inc
mov
outs
and
and
and
mov
or
jmp
mov
adc
or
das
mov
mov
cwde
sbb
xchg
or
add
dec
jmp
jno
mov
hlt
sbb
ins
push
push
das
dec
mov
push
imul
iret
inc
aas
xchg
xor
test
inc
inc
xchg
push
icebp
fwait
add
(bad)
push
inc
adc
mov
inc
add
lahf
mov
(bad)
scas
pop
jg
xor
mov
imul
push
sbb
(bad)
pop
std
or
sar
jmp
psubsb
pop
dec
jae
call
xor
add
clc
ret
repz
or
xor
repnz
mov
dec
sbb
mov
pop
add
jae
pop
xchg
xor
or
mov
sbb
jmp
adc
add
inc
out
(bad)
sub
cmp
ins
or
fimul
or
call
clc
jl
(bad)
jno
push
and
(bad)
adc
aaa
dec
pop
mov
inc
mov
mov
out
inc
rcl
push
adc
inc
inc
and
dec
clc
test
push
(bad)
adc
mov
scas
inc
sbb
out
(bad)
cdq
lea
jo
xor
push
lock
adc
dec
pop
jmp
cld
and
movs
sti
gs
inc
jecxz
add
fistp
mov
xor
outs
push
std
aas
or
arpl
push
clc
dec
dec
jmp
std
and
inc
mov
mov
(bad)
cdq
push
add
cmps
inc
out
xchg
jmp
dec
push
call
add
popf
xor
push
pop
mov
sub
add
seta
arpl
and
les
scas
mov
ret
addr16
jbe
cmp
jmp
and
adc
adc
push
jg
adc
jle
pop
add
outs
std
add
pop
aas
idiv
sar
call
push
jno
jno
adc
adc
and
ret
push
popa
pop
add
nop
scas
test
loopne
cmp
fistp
dec
jmp
mov
ret
sbb
adc
xchg
mov
(bad)
push
call
fistp
pop
xchg
(bad)
(bad)
std
cmps
inc
mov
or
xlat
jge
xor
add
mov
arpl
int3
inc
xor
pushf
mov
fdivr
and
sbb
push
arpl
add
or
add
loop
push
lods
xchg
jle
push
inc
cmp
out
inc
xchg
inc
outs
add
dec
xchg
ret
cmp
lods
lock
adc
(bad)
mov
add
cmp
inc
inc
ret
int
jl
icebp
inc
push
jg
repnz
pusha
adc
or
(bad)
cmp
mov
or
or
jne
jmp
retf
lahf
jmp
adc
scas
inc
and
inc
and
cmp
in
sub
pushf
out
inc
std
ret
sub
jmp
push
repz
inc
jnp
push
pop
or
xchg
mov
mov
ja
inc
jl
and
jmp
cmps
aad
std
pop
or
jle
xor
add
shr
(bad)
outs
add
xchg
adc
mov
ss
or
adc
jle
xor
or
cmp
aad
imul
iret
aas
inc
jbe
pop
enter
sti
inc
mov
pushf
xchg
out
jo
cli
add
loopne
test
sub
repz
cmp
mov
or
xchg
jle
inc
cli
fisttp
mov
test
mov
fwait
mov
std
iret
std
jl
and
and
mov
inc
inc
mov
gs
in
push
out
dec
aam
mov
mov
adc
repnz
mov
jbe
lahf
(bad)
xchg
or
pop
push
(bad)
pop
mov
ret
cmps
add
add
cs
pop
cmc
add
mov
(bad)
xchg
add
mov
xor
mov
push
out
xchg
mov
adc
jnp
pop
cmp
mov
mov
xchg
in
ins
pop
out
mov
repz
push
jmp
icebp
jae
pandn
add
(bad)
(bad)
outs
push
mov
fist
cmp
adc
add
jbe
and
xor
inc
and
jnp
xchg
icebp
push
dec
jmp
or
je
jg
add
(bad)
fild
mov
xchg
sub
cmc
pop
and
lock
arpl
push
jg
ret
adc
pop
xor
(bad)
sbb
imul
std
(bad)
out
fistp
jno
(bad)
xor
lds
retf
xor
xchg
fdivr
fucom
idiv
dec
call
std
pop
arpl
int3
mov
pop
inc
sbb
into
and
push
sbb
daa
cld
push
adc
pminsw
xor
jne
sti
mul
sub
dec
push
sahf
clc
pop
xchg
jge
pop
mov
imul
arpl
adc
xor
push
pop
or
pop
add
jge
ror
or
add
out
stos
push
fdiv
xlat
add
sbb
mov
aas
or
sub
lods
retf
mov
xchg
dec
push
mov
inc
xor
loop
adc
(bad)
dec
lods
push
sti
or
(bad)
fdivr
mov
mov
das
push
je
shl
cs
je
jl
xchg
mov
in
mov
cmp
stc
dec
jl
add
lds
or
push
adc
out
or
cmp
mov
pop
inc
or
pop
ret
jae
push
addr16
inc
sahf
lods
cli
sahf
push
push
push
std
idiv
xor
pop
out
xor
push
inc
addr16
outs
aad
imul
sbb
out
or
cmc
sti
pop
retf
out
inc
push
jb
fimul
cld
addr16
std
sbb
add
adc
jo
(bad)
stc
pop
dec
xor
sub
inc
push
outs
adc
inc
arpl
push
inc
mov
and
fimul
ins
rsm
and
mov
adc
(bad)
fsubr
cmpps
sbb
inc
(bad)
loop
pusha
pop
pop
test
lock
pop
(bad)
dec
sub
push
pushf
or
xor
clc
or
(bad)
in
mov
aas
mov
cmps
add
jae
(bad)
pop
jmp
sub
add
inc
idiv
jb
jge
(bad)
push
sti
inc
push
mov
push
das
inc
das
mov
cld
pop
mov
aad
pop
fistp
movs
jae
(bad)
in
sub
ja
int
cld
add
xchg
mov
add
(bad)
inc
lds
mov
in
sbb
and
ja
push
mov
scas
loopne
sbb
xor
mov
es
add
rcr
or
cmp
ins
pop
xchg
adc
xchg
jle
pusha
aas
pop
ds
bound
(bad)
adc
mov
xchg
hlt
adc
sti
movs
dec
push
mov
mov
xchg
ret
call
push
ja
aas
and
ss
jb
arpl
and
pushf
test
pop
push
fwait
retf
jle
push
(bad)
jg
jp
dec
stos
add
outs
outs
aaa
inc
jb
inc
in
adc
aad
sub
inc
xchg
jbe
inc
add
or
imul
cwde
inc
add
cld
adc
xor
push
addr16
fsub
add
rcl
pop
fstp
jmp
push
inc
pop
fdiv
jg
div
loopne
add
(bad)
je
sub
das
sub
(bad)
jmp
add
or
pop
mov
pop
(bad)
jno
inc
out
leave
je
outs
pop
cmp
adc
push
es
adc
es
pop
or
inc
inc
mov
jge
jp
push
inc
mov
inc
das
mov
or
fs
je
mov
ror
mov
out
sub
mov
fwait
rcr
ins
enter
int3
add
(bad)
ja
xor
push
inc
mov
push
movs
mov
popa
hlt
sbb
std
fwait
mov
dec
inc
mov
xor
jae
pop
dec
or
adc
ret
xchg
dec
push
fild
jg
nop
shl
sahf
and
mov
mov
scas
cmp
add
inc
aas
aas
fs
dec
loop
mov
rol
pusha
add
fdivrp
ja
dec
loop
out
pop
out
enter
mov
retf
psubq
(bad)
jbe
aas
push
cmp
mov
retf
stos
or
or
push
mov
adc
cmp
call
and
add
outs
mov
popa
sub
mov
clc
js
and
sbb
ret
or
fimul
xor
sti
add
clc
inc
arpl
(bad)
adc
aas
int
sti
cmc
push
das
mov
and
popf
mov
out
cwde
nop
adc
bound
aam
cmp
jl
pusha
push
xchg
por
push
mov
add
repz
out
mov
sub
xchg
ja
inc
sbb
sub
jmp
dec
imul
cmp
and
jae
pop
adc
mov
mov
inc
xor
dec
xor
fucomi
xchg
push
jl
das
es
fild
or
and
jg
pop
shl
push
cmp
dec
out
adc
or
(bad)
out
xor
fiadd
mov
pop
add
aaa
adc
jmp
jmp
sub
and
(bad)
dec
addr16
inc
add
adc
data16
in
fisubr
sbb
lds
loop
test
inc
inc
mov
test
mov
js
add
popf
cli
push
std
sbb
or
movs
push
add
add
aas
push
xchg
cld
jne
mov
test
sbb
outs
inc
ss
mov
scas
push
rcl
mov
js
loope
movs
adc
push
lock
mov
dec
cmp
xor
in
xchg
jb
test
jo
inc
and
int
and
pop
inc
jg
inc
sbb
push
push
pop
je
pop
sar
jae
fwait
mov
push
inc
outs
jb
adc
mov
mov
lds
hlt
call
mov
dec
and
xor
xor
ror
icebp
mov
dec
xchg
imul
les
outs
in
inc
ins
mov
or
aam
adc
into
inc
ds
fbld
pop
push
xor
out
mov
add
and
jns
xchg
out
xchg
out
mov
jnp
icebp
inc
sub
jne
xor
and
jbe
cmc
xor
inc
mov
add
and
jmp
push
and
add
mov
fs
mov
lods
and
and
jmp
arpl
lods
dec
adc
or
test
pop
lds
sbb
mov
xchg
push
sub
push
enter
dec
std
mov
cmp
or
fmul
ficomp
mov
pop
repnz
pop
mov
xlat
lods
mov
lock
std
mov
scas
add
mov
push
call
or
scas
xchg
fadd
clc
mov
sar
pop
les
adc
mov
mov
or
lds
aas
pop
gs
mov
ret
inc
xchg
hlt
xchg
and
jmp
aam
push
test
jnp
hlt
mov
dec
dec
bound
or
push
enter
pop
dec
call
repz
retf
xchg
add
fcom
loopne
inc
inc
test
sbb
cmps
icebp
fwait
dec
dec
div
aaa
imul
je
ins
outs
sbb
dec
out
pop
pop
mov
add
inc
jl
xor
movs
mov
sbb
mov
push
cli
cmps
adc
lods
cli
ins
retf
jmp
je
add
ins
push
push
std
push
lock
mov
mov
add
icebp
dec
mov
jne
das
jb
inc
push
push
test
adc
xor
xchg
sti
test
out
aas
enter
adc
mov
leave
dec
test
loopne
and
(bad)
test
jmp
outs
jp
inc
dec
add
lds
enter
rol
out
and
push
pop
or
aas
xor
push
dec
pop
inc
mov
inc
and
test
fsqrt
push
dec
add
mov
inc
retf
clc
or
ds
or
dec
or
adc
pop
pop
aas
aam
sub
push
test
(bad)
add
(bad)
xor
cmp
pop
fwait
sub
(bad)
dec
jo
jno
or
popw
pop
scas
adc
repz
ror
adc
call
in
or
fisub
add
fbld
mov
inc
ret
inc
pop
add
jp
dec
inc
inc
lahf
add
cmc
das
add
movq
xor
xlat
paddd
mov
push
or
add
xor
outs
xchg
out
mov
or
mov
js
xchg
pop
(bad)
icebp
push
and
mov
and
pop
mov
imul
pop
or
pop
or
fbld
bound
std
jnp
mov
mov
sbb
add
ret
imul
sbb
not
int3
push
mov
add
xchg
inc
xchg
mov
int3
adc
mov
push
cmp
pop
add
push
mov
ret
inc
inc
mov
push
inc
cli
xor
pop
dec
mov
xchg
or
stos
(bad)
std
outs
jl
aam
es
lods
push
or
sub
add
or
(bad)
jg
push
sbb
daa
mov
mov
out
nop
mov
mov
pusha
cli
jmp
mov
sub
cld
ret
(bad)
jg
or
je
mov
ror
cmp
(bad)
push
inc
jge
test
icebp
mov
stos
inc
or
les
xor
retf
retf
not
cmc
push
or
in
jae
push
rcl
add
inc
cld
ret
or
outs
retf
and
inc
xlat
adc
sbb
fisub
jbe
pusha
xchg
add
lock
mov
inc
nop
scas
add
mov
push
pop
push
mov
(bad)
in
scas
xor
or
mov
out
ret
out
pop
jae
mul
mov
rcr
push
jmp
push
or
push
wbinvd
test
mov
adc
stc
mov
pop
add
pop
mov
aaa
add
into
ss
push
fs
loopne
pop
test
mov
cmp
repz
outs
mov
inc
sub
shl
into
cmp
adc
(bad)
mov
jg
mov
aas
aaa
and
dec
(bad)
cli
sti
add
out
inc
ret
add
sbb
je
pusha
mov
mov
push
push
xchg
fisttp
sbb
and
dec
je
and
(bad)
(bad)
fisttp
push
pop
jb
jecxz
out
jno
mov
aas
add
adc
cs
jge
test
mov
test
in
das
ror
jecxz
std
mov
sbb
adc
xor
sub
dec
and
cmp
clc
scas
cmp
mov
ret
test
out
jo
retf
addr16
inc
push
clc
pop
add
xor
test
xchg
mov
inc
in
fwait
or
inc
repnz
ret
pop
mov
or
pop
pop
add
mov
aaa
mov
jmp
pop
sahf
call
es
sahf
cmps
mov
adc
mov
pop
sbb
pop
push
clc
or
dec
add
and
mov
jns
inc
inc
sub
scas
cmp
xor
lahf
sub
jne
loopne
cmp
jae
ret
inc
or
mov
adc
fsub
jmp
sub
mov
xchg
out
cld
cmp
push
int3
rcl
pop
adc
ret
mov
or
cmp
jp
adc
lahf
adc
daa
cdq
jmp
ss
mov
inc
xor
pop
mov
out
cmp
outs
(bad)
jg
xor
dec
iret
lds
push
sub
icebp
xchg
(bad)
cmps
je
imul
dec
mov
das
xchg
and
je
addr16
ret
lea
fs
jae
pusha
scas
sub
sbb
push
sti
data16
ret
(bad)
and
jecxz
adc
stc
(bad)
xchg
dec
add
push
int
(bad)
xchg
(bad)
sbb
pop
(bad)
push
inc
out
mov
jle
and
gs
retf
imul
mov
fs
cwde
ret
push
(bad)
xor
or
mov
fwait
add
adc
inc
fadd
stc
ins
aas
mov
xchg
jb
call
mov
add
data16
dec
and
dec
add
in
pop
or
in
repz
and
or
adc
mov
neg
add
bound
mov
mov
inc
mov
std
pop
je
test
mov
mov
(bad)
xlat
mov
and
cmp
mov
or
xchg
sbb
(bad)
test
into
sbb
jae
add
and
jmp
mov
xchg
enter
push
inc
push
scas
xor
mov
mov
inc
mov
jnp
je
stos
clc
fnstsw
in
scas
add
ret
inc
push
mov
or
sbb
test
mov
in
adc
les
ins
and
test
cmp
lds
outs
inc
add
inc
iret
adc
xlat
add
adc
inc
xor
cmp
movs
mov
mov
test
sub
adc
and
loopne
les
je
jnp
shr
sbb
inc
sahf
pop
daa
pop
pop
pop
ret
cmove
push
cmp
mov
mov
aaa
mov
loopne
(bad)
jg
push
push
test
std
fistp
out
adc
aas
call
in
aas
jg
sub
fs
(bad)
push
std
mov
out
cli
push
out
sub
hlt
inc
je
pop
nop
push
mov
add
aaa
aad
dec
arpl
push
or
push
add
add
sar
push
mov
or
hlt
mov
fld
jg
mul
push
inc
js
mov
das
cmp
mov
jbe
(bad)
jg
cli
xor
dec
push
cli
in
pusha
outs
adc
jge
cmp
xor
outs
jmp
adc
and
in
jg
fisttp
(bad)
mov
cmp
lock
xor
sbb
aas
mov
fbstp
test
fs
sub
dec
add
push
test
jl
mov
jge
add
mov
sbb
outs
mov
push
dec
pop
pop
or
and
and
in
dec
call
mov
sub
sbb
mov
enter
std
pop
icebp
call
add
retw
xor
sub
push
sub
adc
aaa
or
jg
dec
fimul
outs
nop
adc
outs
leave
mov
jp
scas
cli
dec
ret
dec
add
je
add
push
or
inc
cmps
std
and
aad
adc
fst
mov
cld
ror
cmc
loop
pop
ret
adc
sub
fidivr
jae
mov
pop
jno
mov
add
dec
into
inc
push
push
mov
rcr
add
jb
adc
ret
and
cmp
mov
mov
adc
mov
jl
push
retf
mov
adc
xchg
cmp
sbb
dec
push
rcl
add
or
or
pusha
mov
pop
or
sbb
pop
pop
or
aas
xchg
push
imul
mov
add
ret
mov
frstor
in
fisub
cmc
popa
cld
cmp
sahf
aas
sar
and
add
lods
xchg
std
imul
dec
jae
add
mov
rcr
mov
dec
mov
out
add
or
ds
add
rol
bound
inc
push
jb
xchg
push
adc
test
(bad)
inc
aas
call
adc
add
pop
lock
(bad)
(bad)
cli
sti
inc
(bad)
xor
aas
mov
inc
push
add
ret
es
push
adc
pushf
lds
mul
push
lods
mov
pop
into
jmp
or
or
jbe
cmps
(bad)
xchg
push
push
sub
dec
pop
pop
push
push
daa
sub
clc
push
push
push
jb
test
pop
wrmsr
add
fdivr
push
test
mov
mov
add
aam
dec
add
loopne
adc
fistp
mov
lar
sti
into
jo
ds
cld
jmp
push
mov
repnz
out
(bad)
das
mov
dec
out
pop
inc
test
pop
xor
add
cs
mov
inc
out
jg
adc
mov
jae
imul
sbb
jbe
push
mov
cmp
xchg
lock
mov
push
dec
das
and
sbb
xchg
mov
add
les
push
add
dec
loopne
test
stos
fstp
or
out
jb
clc
ins
or
adc
jl
push
retf
clc
sub
pop
data16
sbb
cli
aaa
mov
sti
retf
cli
pop
push
ficom
inc
ret
push
mov
gs
arpl
add
sub
xlat
outs
je
std
nop
aas
xor
(bad)
mov
sti
dec
push
ins
mov
mov
dec
xor
ret
pslld
outs
pusha
pop
int
loopne
movs
mov
ja
fadd
call
std
je
add
or
lds
pop
or
imul
cmovbe
fstp
ss
mov
pandn
inc
cld
pop
hlt
out
pop
and
(bad)
pop
test
jmp
mov
inc
xchg
call
adc
xor
std
out
jmp
inc
iret
dec
ins
ret
call
ret
push
add
iret
mov
mov
sub
inc
mov
push
nop
cli
inc
pop
add
push
or
fst
loop
je
adc
ins
ret
(bad)
arpl
repnz
inc
lds
dec
or
xchg
les
fbstp
je
dec
sub
adc
es
arpl
out
xchg
cmp
jg
and
(bad)
loopne
mov
mov
das
push
lods
sbb
inc
xchg
mov
adc
inc
loop
or
in
das
push
add
ja
repz
in
fst
add
add
inc
mov
aad
in
push
repz
push
lods
ja
fiadd
pop
clc
add
add
lods
inc
(bad)
sti
sbb
push
xor
dec
jb
sub
stos
(bad)
cmc
inc
inc
pop
add
aas
sub
jnp
jmp
pop
mov
pop
lds
inc
imul
inc
jl
push
mov
push
jg
std
pop
ss
sar
sti
jge
fiadd
enter
mov
or
ret
dec
fild
push
ins
push
push
adc
ret
and
aad
mov
ret
aas
iret
cmc
or
push
retf
(bad)
sahf
jl
inc
add
arpl
movs
lods
pushf
mov
sti
jecxz
ret
cmc
scas
cmp
adc
test
loope
sbb
xchg
idiv
xchg
aad
add
cmp
or
pusha
and
out
fadd
mov
or
xchg
cmc
sti
cld
jle
adc
out
jmp
shr
movs
inc
ds
push
dec
mov
out
into
mov
mov
out
(bad)
(bad)
rcr
(bad)
and
retf
ins
arpl
xchg
jbe
or
mov
dec
sub
adc
pop
dec
add
pop
aaa
sahf
pop
mov
mov
dec
or
es
mov
pop
dec
xchg
scas
and
clc
push
jnp
cmp
xor
pop
inc
pop
mov
mov
mov
or
cmp
dec
stos
daa
or
push
dec
inc
jmp
scas
mov
mov
ror
std
cld
inc
push
cmp
mov
sar
sub
arpl
or
sbb
jecxz
and
lock
test
test
cli
push
pop
lds
outs
add
(bad)
mov
outs
push
push
pop
clc
leave
mov
inc
pop
inc
or
inc
jmp
fimul
inc
(bad)
scas
xchg
loopne
rol
aam
dec
cmovno
jmp
aas
push
loopne
jne
pop
aas
pop
inc
push
cld
scas
stos
or
mov
ret
and
push
sub
cld
aaa
loopne
add
jmp
call
push
push
mov
(bad)
pop
sbb
mov
jmp
ror
cmp
pushf
cmp
and
movs
mov
sbb
movs
ret
mov
pop
scas
aaa
and
pushf
test
add
adc
mov
paddb
inc
outs
adc
es
in
dec
imul
and
push
jbe
mov
iret
add
mov
outs
leave
loopne
mov
mov
inc
ficomp
jmp
loop
das
pop
mov
call
ret
pusha
pop
add
jecxz
ret
cli
inc
test
jne
mov
jae
les
xchg
gs
aaa
test
push
cmp
pop
pop
mov
mov
out
out
gs
out
mov
cld
aaa
cli
hlt
daa
pop
jmp
ds
mov
stos
jle
add
inc
jne
mov
es
jb
out
inc
scas
mov
ins
js
mov
dec
inc
xchg
cmp
(bad)
outs
mov
(bad)
ja
mov
add
mov
inc
je
xchg
cmp
sbb
dec
jl
dec
shr
pop
push
add
out
jle
and
jbe
add
nop
(bad)
int3
out
xor
mov
dec
lahf
inc
xchg
inc
popa
sub
mov
adc
xchg
mov
(bad)
sub
out
or
or
lock
mov
push
call
mov
sbb
cmp
mov
mov
sbb
pop
std
out
sti
test
aad
addr16
inc
dec
or
stos
mov
aas
dec
pusha
in
mov
bound
call
fs
push
inc
jle
(bad)
fiadd
cld
pop
ins
cmp
and
xchg
test
lds
and
or
icebp
(bad)
(bad)
(bad)
ret
push
(bad)
(bad)
dec
inc
out
mov
gs
ds
movs
jle
in
ins
jno
scas
inc
bnd
inc
call
pop
cs
test
pop
cmp
nop
lock
repz
test
add
les
pusha
out
ret
inc
retf
push
cmp
mov
addr16
and
push
mov
sub
dec
std
inc
mov
(bad)
and
iret
call
pop
call
and
add
jae
psubd
fild
lods
ret
jae
(bad)
xchg
ret
or
out
mov
mov
and
cmc
dec
push
push
xor
in
idiv
pop
dec
sar
retf
pop
out
ret
stc
add
sti
(bad)
jmp
jmp
jae
aad
aas
pop
test
cld
jmp
mov
add
clc
sub
gs
adc
pop
ret
push
in
aaa
mov
inc
inc
xor
test
or
lea
push
or
jb
ja
inc
push
push
add
mov
loope
pop
cmp
xor
push
sbb
inc
mov
add
ss
inc
mov
mov
inc
dec
inc
out
inc
mov
pop
jo
xor
hlt
fbld
inc
cmps
ins
mov
(bad)
cli
adc
enter
mov
pop
push
pop
inc
sub
mov
pop
xor
inc
sar
jmp
inc
xor
jo
jmp
(bad)
int3
dec
xchg
test
repnz
mov
(bad)
mov
dec
leave
les
dec
out
xlat
out
or
movs
jo
push
outs
fsub
cmp
dec
(bad)
push
mov
push
icebp
cmp
add
push
cmp
sar
into
(bad)
sub
ficom
jbe
mov
pop
or
or
mov
(bad)
jl
add
cmp
test
pop
or
mov
shl
(bad)
js
shr
xchg
add
xchg
jo
mov
xchg
and
sbb
cld
lahf
jb
sti
jmp
cli
dec
mov
pop
pop
inc
and
out
cmp
mov
jno
bnd
adc
scas
repnz
mov
and
out
ret
(bad)
lock
dec
or
ja
sti
push
mov
icebp
push
movs
scas
push
add
int3
mov
add
jg
arpl
addr16
retf
cmp
adc
mov
aad
fs
ret
and
sar
jmp
ret
pusha
call
push
aas
inc
xchg
inc
xchg
push
jmp
mov
adc
or
ror
lods
inc
xor
adc
mov
shr
aas
call
loopne
dec
pop
and
out
sbb
cs
sbb
sbb
jmp
dec
adc
daa
mov
shl
add
sahf
repz
mov
mov
mov
mov
es
test
inc
sbb
mov
jmp
dec
or
(bad)
idiv
pop
push
sbb
or
retf
inc
xor
adc
add
jl
sub
test
jae
mov
scas
pop
fs
cli
mul
push
push
std
repz
add
sbb
nop
fisub
dec
or
ss
fs
jae
pop
and
dec
add
adc
cld
fdiv
mov
push
sub
xor
push
cmc
rol
stc
into
ins
xor
mov
outs
out
xchg
cli
(bad)
and
or
dec
adc
mov
push
cmp
push
dec
push
mov
pop
xchg
clc
mov
sub
pop
cmp
adc
enter
adc
loope
or
pop
pop
inc
xor
push
jp
jl
addr16
adc
ja
out
or
dec
mov
xor
jmp
outs
xor
or
mov
das
sti
retf
movs
mov
pop
push
inc
pop
push
inc
adc
jae
pop
mov
add
clc
sub
dec
outs
sub
jmp
add
push
cmp
inc
mov
aas
pop
sti
push
ret
(bad)
pop
mov
fsub
mov
or
mov
test
push
add
inc
call
(bad)
lahf
(bad)
js
and
jmp
(bad)
dec
inc
pusha
jg
pusha
call
mov
jae
or
add
dec
cmp
mov
cmp
and
pop
or
aaa
or
xlat
add
mov
ret
push
jg
fld
pop
jmp
dec
xor
cmp
aaa
je
xor
stos
retf
cmp
int
xchg
or
dec
push
ret
push
jge
dec
inc
mov
push
movs
aas
or
leave
pop
xor
xchg
push
mov
mov
ret
push
call
push
retf
pop
fdivr
outs
cmp
pop
in
inc
inc
pop
pop
jle
dec
jb
push
xor
mov
add
jl
add
mov
mov
add
jle
mov
shr
neg
mov
pop
inc
push
inc
test
xchg
mov
mov
mov
mov
mov
sti
mov
push
sub
aad
cmps
das
jp
sub
add
xchg
push
mov
and
(bad)
das
cld
or
pop
push
test
call
or
in
xchg
inc
mov
push
xor
scas
loop
mov
adc
scas
pop
pop
sar
mov
addr16
aam
out
push
dec
mov
std
mov
xchg
adc
inc
ret
add
jmp
dec
sbb
out
add
lock
fimul
mov
(bad)
mov
jge
and
lahf
dec
pop
or
xor
ret
jae
adc
inc
test
es
sbb
mov
jmp
pop
adc
push
fiadd
sub
add
cmp
pop
xchg
add
inc
jae
outs
sub
xchg
and
sbb
and
hlt
ds
jno
and
sub
dec
dec
pop
and
in
fadd
arpl
je
(bad)
jg
lock
push
push
mov
add
(bad)
sbb
push
popa
and
jae
xor
inc
div
mov
push
out
dec
sbb
es
inc
stc
mov
mov
inc
or
push
push
scas
es
js
jecxz
mov
adc
add
xchg
pushf
inc
(bad)
inc
push
mov
std
mov
stos
fs
sbb
fimul
mov
sub
js
mov
and
(bad)
movs
test
stos
clc
and
sub
dec
mov
jmp
add
(bad)
js
mov
mov
fdivp
and
jge
push
xor
ret
adc
aaa
sti
or
mov
push
xchg
jns
dec
jmp
push
dec
out
not
sub
test
sub
add
xchg
(bad)
fcomip
fistp
adc
sbb
pop
or
jge
add
inc
pop
and
stos
dec
add
pop
dec
xor
inc
out
push
or
mov
jnp
pop
mov
addr16
sti
inc
rcr
xor
rcl
push
data16
cld
inc
sbb
xlat
call
mov
inc
mov
mov
hlt
jnp
push
add
les
jg
xor
inc
inc
cmp
mov
cs
enter
dec
push
jo
sub
fimul
test
(bad)
call
add
test
fsub
add
xor
sbb
ret
pop
cmp
inc
sbb
pop
jne
xor
mov
mov
mov
popf
in
aas
std
jbe
add
ss
call
dec
mov
stos
mov
xor
idiv
fisttp
movs
sub
out
or
pop
pop
push
sub
mov
call
mov
jnp
loopne
inc
add
jmp
and
push
fwait
call
(bad)
xchg
dec
stos
pop
or
inc
sub
mov
ret
pop
mov
xor
loope
icebp
(bad)
jno
je
inc
sub
push
mov
aaa
push
in
xchg
out
int3
outs
test
jl
jmp
add
dec
aad
arpl
jmp
adc
jecxz
ja
inc
arpl
(bad)
mov
dec
ins
retf
and
shl
jae
dec
repnz
mov
push
cld
pop
lock
fmul
cmc
pop
stc
retf
inc
test
inc
adc
ud2
jmp
or
inc
sbb
jge
sub
mov
xchg
ss
push
cmp
popa
or
adc
add
vmaxps
out
ret
rol
push
inc
pop
mov
je
xor
repnz
aam
scas
fadd
(bad)
scas
(bad)
push
(bad)
aad
pop
push
jecxz
ret
cmp
inc
xchg
or
push
jne
pop
push
mov
jg
dec
push
(bad)
sbb
dec
mov
das
call
imul
(bad)
mov
mov
inc
mov
xchg
cld
inc
call
push
pop
add
or
inc
adc
cmp
(bad)
xor
mov
add
sub
push
inc
xor
clc
push
xlat
dec
std
ins
pop
push
pop
(bad)
je
cmps
js
das
test
cmp
mov
sar
add
or
rol
je
out
sbb
add
jb
inc
sbb
arpl
jmp
mov
inc
or
mov
sbb
mov
dec
adc
(bad)
(bad)
in
loopne
dec
(bad)
adc
pop
inc
adc
inc
jmp
jmp
pop
fimul
pop
out
dec
or
lods
add
sub
jl
inc
dec
in
push
xchg
sub
call
fs
inc
mov
dec
dec
inc
sbb
(bad)
(bad)
push
ins
(bad)
fiadd
mov
mov
fs
xor
cmp
add
aad
aaa
inc
mov
aam
pop
sti
add
xchg
jg
push
push
push
inc
fadd
or
mov
xlat
xlat
or
pop
adc
inc
icebp
jns
sar
xchg
xchg
inc
adc
or
xchg
and
fcomi
jae
punpcklbw
outs
adc
data16
mov
das
dec
cmp
aas
rol
jg
addr16
add
imul
inc
push
pop
ret
push
ret
int3
ja
xchg
icebp
jmp
inc
add
(bad)
fcmovbe
jmp
dec
add
or
xlat
stos
pop
mov
pop
xchg
sub
cld
xor
cli
sub
jmp
pop
adc
(bad)
(bad)
dec
fcos
test
adc
mov
shl
or
sub
cld
fiadd
aas
xchg
xor
mov
inc
xbegin
push
scas
sub
aad
sbb
test
cmps
pop
mov
fisttp
sbb
inc
jae
xchg
jmp
inc
cmovg
je
jmp
div
add
inc
pusha
mov
add
sub
dec
js
xchg
(bad)
es
pop
xor
and
mov
mov
inc
cmp
mov
je
and
mov
outs
adc
or
jae
(bad)
(bad)
ror
fs
dec
add
dec
jmp
adc
add
mov
stos
jle
cmp
cld
outs
push
repz
and
sbb
push
jge
mov
push
data16
jle
pop
inc
adc
mov
sbb
xchg
call
pop
xchg
sbb
sub
mov
scas
sti
js
mov
pop
and
push
jmp
ret
aaa
add
or
mov
add
push
mov
arpl
push
mov
jg
int
sti
pop
repnz
xchg
mov
cmp
pop
jle
ds
push
pop
mov
aas
mov
mov
adc
ficomp
shl
and
call
cli
xor
fild
paddd
pop
aas
mov
inc
and
dec
push
mov
mov
je
je
mov
pop
add
push
add
or
sub
jb
lea
add
test
sar
mov
addr16
aas
xor
dec
cmp
(bad)
pop
es
inc
mov
shr
imul
jmp
adc
sbb
or
push
xor
pusha
pop
fst
mov
gs
sar
pop
ja
sbb
call
xchg
add
cli
inc
int3
add
push
add
(bad)
mov
cli
add
pop
mov
aam
pop
xor
fist
inc
xor
push
sub
repz
lock
sbb
sub
iret
mul
ret
mov
sbb
push
jmp
mov
push
fadd
arpl
pop
xor
cli
dec
(bad)
push
inc
addr16
and
fimul
lds
adc
inc
jo
outs
pusha
js
inc
test
rcl
xor
fadd
inc
xor
xchg
add
dec
in
cmps
mov
mov
jae
sub
sub
pusha
(bad)
jmp
call
xchg
(bad)
aaa
mov
icebp
cmp
enter
out
call
sub
push
and
ret
vmovq
push
pop
push
nop
out
push
xlat
add
ja
or
push
cmps
in
pop
push
(bad)
pop
jno
mov
add
pushf
stc
jae
fistp
cmp
xor
arpl
add
sub
mov
jb
(bad)
push
or
jmp
mov
fiadd
inc
inc
mov
cld
xor
popa
jae
pop
xchg
sub
or
rcl
add
jmp
inc
mov
push
shr
sub
hlt
sbb
(bad)
sub
push
cmc
out
fsub
push
nop
xor
sub
and
add
rol
mov
add
pop
shl
lahf
sub
jmp
sub
sub
pusha
cmp
mov
call
movs
cmc
out
mov
push
jae
jg
add
push
ror
mov
aaa
adc
push
mov
(bad)
pop
dec
imul
add
pop
or
movs
add
repnz
nop
or
rcr
fdivrp
jo
std
out
dec
fidiv
dec
fimul
dec
inc
push
add
xlat
xor
sbb
fdiv
add
add
je
push
mov
push
sar
sbb
xor
adc
add
call
xchg
mov
xchg
in
push
adc
inc
add
pusha
scas
jb
stos
hlt
jg
imul
dec
and
xchg
jp
lock
ss
cs
xlat
arpl
push
mov
imul
or
xor
wbinvd
add
ins
sub
cmp
repz
push
add
scas
adc
xchg
mov
jp
pop
dec
push
mov
or
sub
enter
pop
mov
cmc
inc
jmp
cmp
aam
addr16
push
jmp
test
pop
xchg
imul
pop
mov
ret
mov
push
test
aad
popa
ja
into
push
(bad)
sbb
adc
(bad)
(bad)
je
xor
pop
test
mov
mov
ficomp
aaa
imul
sti
or
mov
jmp
pop
inc
loopne
movs
les
sub
or
mov
lods
fldcw
inc
add
mov
js
mov
dec
ss
mov
sub
mov
test
push
pop
dec
jecxz
hlt
add
ins
aam
scas
cmp
aad
inc
dec
mov
sbb
mov
fisub
lock
jp
sub
rol
sbb
sar
xchg
nop
xchg
aaa
add
adc
inc
xchg
adc
jl
mov
popa
(bad)
clc
fwait
ds
adc
add
out
adc
inc
movs
or
adc
repz
dec
dec
push
out
xchg
aas
ja
pop
mov
or
not
ss
idiv
mov
push
test
ror
call
add
sub
jmp
adc
pop
imul
mov
fcom
push
mov
aad
jge
ret
mov
push
in
(bad)
clc
shr
das
inc
mov
es
xchg
mov
sbb
push
push
push
sbb
mov
inc
je
lock
mov
call
xor
sub
jb
add
aaa
sub
repnz
(bad)
std
dec
dec
(bad)
cld
push
cmp
jg
push
std
mov
dec
xchg
js
call
mov
mov
ds
arpl
(bad)
mov
jae
gs
sub
mov
xor
pop
xchg
mov
ja
push
jne
test
xlat
cmp
out
jmp
sub
push
mov
or
cli
pop
icebp
add
retf
mov
dec
xchg
mov
inc
out
mov
in
push
inc
jg
mov
or
arpl
add
ret
outs
inc
inc
pop
sub
das
adc
xor
mov
and
pop
loop
nop
movs
add
mov
int3
fnsave
lock
bound
shr
inc
mov
mov
push
mov
or
jae
mov
cld
add
inc
inc
push
add
xchg
push
cmc
es
push
jp
ds
shr
jns
std
mov
add
stos
and
ficom
adc
push
or
cmc
rol
frstor
cli
mov
fild
imul
and
xchg
fild
mov
daa
mov
sub
out
test
jbe
xor
pop
pop
xchg
inc
cli
popa
xor
add
shr
sub
or
push
out
inc
mov
jmp
jnp
icebp
push
inc
inc
out
imul
leave
scas
push
fdiv
push
mov
xor
push
push
xor
dec
mov
aaa
jnp
fwait
inc
stos
cld
jae
jmp
push
mov
push
jb
xchg
mov
cli
jbe
add
adc
dec
cmp
inc
adc
mov
mov
pop
jge
jmp
sub
std
(bad)
xor
call
push
inc
dec
or
test
pop
enter
outs
add
sbb
out
(bad)
fild
mov
pop
int3
cli
push
pop
push
mov
cs
inc
sti
jnp
loope
lock
push
(bad)
xor
pusha
fwait
push
das
sub
inc
rcr
mov
test
push
fbstp
(bad)
mov
cld
lahf
not
jg
xor
mov
pop
push
or
and
jb
std
or
pop
call
add
ret
mov
xor
and
push
inc
push
mov
test
jmp
in
and
add
psubq
add
mov
cld
jmp
and
out
jg
add
fiadd
cmp
daa
or
inc
add
les
xor
or
and
add
jg
scas
add
sub
add
icebp
fnstsw
mov
adc
jp
mov
(bad)
ins
cmp
cwde
add
xor
enter
out
adc
out
fwait
jle
inc
std
ret
ss
das
test
pop
imul
scas
pop
or
(bad)
(bad)
fwait
mov
sub
or
jmp
push
outs
pop
mov
out
(bad)
cmc
mov
sub
pusha
adc
mov
je
pop
repnz
aaa
ret
popf
push
jl
xor
cwde
xor
add
out
add
rcr
sub
fisub
inc
fisttp
pop
inc
jmp
jmp
xor
in
push
icebp
jle
inc
inc
jg
and
adc
mov
imul
leave
and
sub
add
les
add
push
push
sub
cmp
call
(bad)
push
push
push
sbb
inc
push
add
push
push
xchg
out
inc
iret
mov
or
hlt
rcr
mov
xor
push
xchg
scas
xlat
sti
mov
bound
xchg
cmp
lods
inc
dec
inc
ss
push
mov
out
inc
xchg
sub
pusha
jbe
sub
inc
ret
test
push
mov
push
aaa
push
cli
fbld
xor
mov
inc
ret
aam
pusha
jbe
inc
mov
loopne
pop
clc
sbb
mov
fsub
lahf
cld
retf
cmp
sbb
add
and
shr
mov
sub
das
out
dec
aas
arpl
in
adc
rol
mov
imul
push
xchg
inc
add
cmp
aas
imul
das
add
add
js
pop
cmp
or
dec
add
(bad)
repnz
int
pop
add
jo
or
mov
pop
in
push
fnstenv
jo
js
shr
int3
xor
das
mov
pop
xchg
sbb
mov
mov
sti
mov
push
jg
pop
(bad)
rol
sbb
adc
inc
fld
mov
(bad)
dec
cld
dec
push
test
ror
jb
movs
pop
inc
add
frstor
daa
or
mov
cmp
add
subps
cli
sti
test
push
add
inc
aaa
inc
sub
xchg
push
in
(bad)
or
sub
ret
mov
call
inc
push
mov
movs
addr16
xor
cmp
pop
cwde
mov
mov
andnps
(bad)
aam
pop
push
pop
je
sti
(bad)
dec
out
fiadd
mov
push
jae
es
add
xchg
(bad)
mov
hlt
jmp
not
jae
(bad)
addr16
adc
push
or
(bad)
and
pushf
fcmovnb
inc
push
out
dec
jnp
push
add
cld
or
in
mov
xchg
aad
mov
adc
push
add
(bad)
jg
mul
jae
inc
clc
push
or
data16
xchg
lods
adc
(bad)
inc
mov
mov
add
sbb
or
hlt
add
imul
rcr
inc
cli
ins
add
inc
adc
sub
sbb
mov
mov
ss
imul
pop
adc
aad
(bad)
test
call
jp
xor
pop
mov
sbb
sub
sti
fdiv
mov
sbb
test
dec
cmp
sbb
popa
adc
inc
gs
dec
pop
je
das
adc
cmp
ds
push
(bad)
mov
mov
add
mov
cmp
or
call
imul
rcl
enter
data16
dec
int
push
mov
pusha
cmps
sbb
mov
ss
dec
repnz
cmp
rcl
push
loopne
xor
inc
jb
sbb
hlt
scas
pop
and
add
icebp
std
out
add
scas
xlat
cmc
add
les
fbld
sbb
call
or
dec
cmp
or
mov
cld
ja
cld
aaa
sbb
imul
adc
pop
inc
ss
clc
and
xchg
cwde
mov
(bad)
mov
mov
(bad)
cmps
fwait
pop
sub
mov
mov
push
mov
xor
xchg
mov
out
lds
repnz
add
dec
inc
push
cmps
fiadd
cli
ja
cmp
or
push
cld
ret
aaa
pop
adc
ret
sbb
jl
(bad)
xor
outs
cli
inc
out
dec
xor
cmp
push
add
out
fst
clc
out
es
out
add
mov
sti
jmp
push
shl
pop
inc
inc
call
inc
in
dec
les
popa
pop
sbb
enter
inc
mov
data16
adc
mov
je
sti
jmp
stc
add
mov
dec
aaa
inc
dec
(bad)
xchg
mov
ss
sub
in
sub
jne
pop
jmp
in
data16
aas
jnp
add
adc
ss
(bad)
cli
(bad)
in
ret
add
mov
pop
(bad)
sbb
add
pop
sub
enter
(bad)
cmp
add
jge
mov
sbb
pop
dec
push
ret
pop
iret
pop
mov
xchg
mov
bndldx
shr
stc
sub
das
xor
inc
add
fistp
retf
sar
fistp
mov
iret
jecxz
pop
shl
inc
jmp
inc
push
add
sti
mov
pop
and
into
enter
sbb
mov
add
or
jo
jmp
imul
pop
ret
test
jle
sub
mov
call
cmp
enter
dec
pushf
mov
ss
mov
dec
mov
mov
xor
push
retf
jno
ds
mov
push
(bad)
repz
and
xchg
xchg
data16
dec
je
jg
pop
inc
sub
mov
sahf
push
and
and
mov
(bad)
das
test
push
xchg
mov
or
in
aas
ret
cmp
aad
call
mul
loopne
pusha
inc
push
jge
(bad)
stos
xor
jb
dec
out
mov
cmps
and
pop
inc
jnp
out
mov
dec
sub
outs
add
shl
aas
sub
lock
ss
repz
cli
shl
mov
mov
test
dec
and
inc
std
pop
add
test
call
outs
add
inc
push
mov
mov
cmps
in
mov
push
retf
out
xor
inc
sub
imul
inc
(bad)
pop
add
(bad)
xor
aam
popf
dec
jmp
and
pop
push
inc
(bad)
pop
ret
fs
push
pop
jo
xchg
not
(bad)
cmp
dec
rol
nop
mov
sub
inc
and
sbb
pusha
xor
mov
and
call
dec
push
aaa
das
movs
outs
dec
inc
or
imul
dec
xor
add
and
and
outs
inc
inc
add
cld
sbb
outs
xor
dec
ret
jne
dec
loope
stos
xor
dec
sub
adc
cmps
and
cld
inc
imul
mov
lds
xchg
push
fdiv
pop
ins
jle
lods
and
(bad)
push
pop
je
gs
add
ja
adc
retf
outs
inc
das
xchg
(bad)
ret
push
mov
(bad)
das
push
add
ins
mov
imul
sti
imul
jg
into
push
xlat
les
or
inc
das
push
imul
addr16
push
mov
jmp
test
ret
mov
pop
push
push
pop
cli
or
cmp
mov
pop
test
mov
or
aas
in
pop
cmps
push
lds
jae
mov
xor
cmp
mov
xor
jle
mov
add
retf
test
fs
(bad)
inc
jmp
sbb
pop
mov
inc
mov
dec
mov
jno
and
jmp
dec
mov
aam
inc
ret
jecxz
aas
adc
int3
fadd
cmp
(bad)
jae
inc
inc
mov
and
adc
push
out
jne
mov
out
add
jge
add
add
fs
xor
repnz
adc
pop
mov
add
jp
test
hlt
aaa
mov
xchg
adc
clc
call
xor
test
jno
inc
std
das
inc
fisttp
xor
aad
sub
dec
jp
(bad)
mov
add
nop
daa
xchg
sub
add
push
inc
lahf
jle
mov
cli
jmp
popa
lock
adc
rsqrtps
ret
(bad)
mov
and
mov
cmp
add
fcomp
ds
sbb
mov
ins
or
jg
outs
push
or
(bad)
xor
pop
push
or
or
ins
fsub
aam
push
dec
fwait
pop
push
adc
mov
mov
ins
add
js
addr16
sub
(bad)
out
push
and
add
pusha
or
fst
iret
cld
pop
test
dec
add
push
out
ficom
(bad)
mov
cmp
pop
repz
out
mov
cs
bound
jbe
mov
push
repz
push
or
inc
pop
or
or
or
jmp
mov
inc
jg
push
jae
imul
pop
movs
js
push
dec
dec
cld
push
or
push
popa
stos
std
jle
jno
jp
(bad)
cli
dec
adc
inc
clc
mov
mov
mov
mov
xchg
call
sub
jl
inc
pop
sub
inc
das
jbe
ret
(bad)
out
inc
mov
das
or
retf
jae
pop
inc
add
scas
sbb
and
xor
pop
(bad)
(bad)
imul
sub
xlat
xlat
mov
cmp
jl
test
pusha
xchg
cmp
cli
out
invd
out
addr16
push
adc
inc
sub
aad
dec
data16
push
in
ror
pop
xlat
inc
mov
imul
or
mov
or
js
inc
lds
push
push
in
ins
movs
push
in
not
mov
and
pop
dec
loope
mov
push
lock
inc
loopne
cmp
cmc
pop
and
dec
outs
mov
jge
ret
test
mov
dec
fmul
mul
push
xlat
push
inc
dec
mov
clc
and
xor
jmp
pop
xor
mov
add
nop
mov
(bad)
imul
or
sub
mov
dec
mov
das
pop
das
cmp
ret
shr
add
push
nop
jae
mov
popf
mov
scas
dec
(bad)
and
in
mov
cmps
in
out
rcr
inc
cwde
push
ins
ret
add
or
fild
pop
mov
ret
xor
inc
adc
std
push
adc
out
push
outs
jno
test
push
ins
jmp
and
daa
(bad)
(bad)
jg
out
and
xchg
inc
sti
loop
mov
inc
adc
(bad)
push
inc
js
outs
inc
mov
out
rcr
jge
(bad)
cmp
and
xor
jmp
mov
outs
and
rol
aam
scas
mov
mov
inc
dec
aad
mov
mov
pop
pop
mov
jmp
pop
jb
mov
in
inc
mov
jmp
pop
mov
and
inc
je
adc
ins
dec
loopne
outs
cli
rol
add
pusha
push
cmc
mov
mov
jmp
arpl
out
mov
hlt
neg
push
jl
sbb
inc
stos
cmp
test
loope
rol
(bad)
addr16
sub
mul
mov
or
push
or
cmc
nop
repz
mov
push
std
inc
fs
call
movs
push
push
dec
inc
and
out
es
xor
push
ret
push
pop
shr
push
aas
and
sub
test
or
jmp
or
(bad)
retf
inc
gs
inc
rol
jo
int3
inc
xchg
in
pop
test
cmp
mov
stos
out
add
(bad)
fist
in
cmp
and
mov
and
clc
add
and
std
stos
test
mov
std
inc
push
out
add
aas
push
jo
call
pop
jae
je
mov
jnp
jg
mov
or
(bad)
pop
sbb
push
push
cmp
cmp
ret
and
pop
je
pop
pop
or
sub
imul
jle
mov
in
add
nop
jno
test
push
repz
mov
fidiv
outs
xlat
out
mov
mov
push
add
mov
push
add
inc
(bad)
aas
jp
test
stc
add
adc
cli
push
inc
aas
add
dec
cld
mov
loopne
pop
loop
call
fwait
mov
jnp
inc
test
outs
add
dec
dec
lahf
add
add
dec
push
push
push
arpl
add
mov
inc
jge
aam
jl
in
out
jg
mov
out
or
stos
or
mov
popa
cld
inc
fiadd
push
pop
mov
pop
dec
js
inc
jmp
ret
sar
jmp
jmp
and
clc
adc
jae
push
popa
xor
push
shl
out
mov
sub
dec
neg
xchg
push
or
sbb
arpl
fadd
sub
pop
push
jmp
bound
add
sbb
nop
mov
je
out
mov
(bad)
imul
mov
ss
inc
fidivr
(bad)
pop
or
ins
and
xchg
rol
mov
xchg
jl
movs
push
mov
das
push
or
sbb
sub
add
out
aad
sbb
jae
ret
inc
mov
les
jl
inc
int
fdivr
dec
lods
sahf
mov
sub
mov
push
push
or
repnz
adc
jbe
lock
inc
inc
dec
pop
cmp
and
mov
cwde
mov
mov
pop
(bad)
push
bound
add
dec
xor
xor
add
jmp
or
add
sar
xor
fadd
sar
sub
mov
and
push
sti
jae
pop
arpl
adc
jo
sub
ret
adc
inc
jl
cmp
aas
dec
(bad)
imul
push
rcl
call
push
cld
ins
adc
dec
(bad)
adc
mov
push
mov
pop
jle
sar
es
inc
sbb
ds
and
sub
inc
pop
fimul
retf
push
add
stos
das
adc
mov
add
jmp
sub
pop
in
sbb
inc
or
push
mov
jmp
jmp
imul
mov
mov
adc
adc
das
pop
mov
mov
jb
pop
test
adc
clc
sub
push
(bad)
aaa
push
aas
xchg
sti
ret
add
jae
xor
push
lods
loop
push
mov
xor
mov
sbb
jb
inc
xor
aam
add
adc
aas
ja
fbstp
add
push
call
cli
sub
fmul
add
xchg
les
xchg
cmp
sti
pop
jg
xor
fistp
call
push
mov
inc
mov
(bad)
pop
pop
outs
sbb
call
ret
mov
mov
pop
hlt
xchg
rcl
jge
jg
pop
repnz
pop
or
jno
dec
pop
mov
xor
xor
idiv
ss
xor
mov
fist
inc
sbb
leave
add
dec
sbb
idiv
xchg
add
popa
shl
mov
pop
mov
shl
and
arpl
push
nop
cld
inc
ins
leave
cmp
sbb
scas
(bad)
jmp
jmp
dec
fs
mov
inc
push
inc
shr
aas
push
add
rcr
push
jo
add
cmps
(bad)
mov
fisttp
cmc
lock
jae
shl
ret
push
in
and
adc
inc
je
pop
push
adc
mov
jo
lds
inc
push
pop
jp
call
inc
mov
push
hlt
inc
out
pop
xchg
inc
lock
and
das
adc
ss
and
cmp
fs
jmp
cmc
outs
(bad)
mov
pop
(bad)
mov
mov
sub
fadd
out
pop
push
enter
hlt
jg
push
rol
fadd
in
jbe
or
and
sbb
jno
mov
pop
pop
push
mov
or
out
add
jle
or
sti
ja
mov
retf
dec
sbb
add
mov
pop
push
inc
jg
in
mov
mov
inc
es
lock
lods
mov
rol
pop
scas
fwait
ds
fsubr
or
push
push
xchg
add
fs
movs
pop
dec
outs
(bad)
jmp
sbb
(bad)
sbb
or
inc
adc
test
pop
js
shr
mov
lods
sahf
inc
mov
fs
mov
(bad)
call
cld
push
out
std
inc
and
inc
sub
fisubr
add
inc
mov
xchg
or
push
inc
jb
jp
jae
dec
inc
sub
sub
cld
pusha
pop
test
or
and
add
loopne
cli
div
out
inc
adc
into
push
cli
cld
das
fld
popa
xor
clc
loopne
jp
data16
sub
aam
push
cmp
call
dec
mov
test
inc
test
ucomiss
mov
test
xor
cld
add
data16
pop
rcpps
add
cmp
addr16
push
jmp
fimul
lock
inc
aas
mov
push
cld
pusha
(bad)
int3
call
icebp
jl
mov
inc
jle
test
adc
pop
jp
mov
mov
out
outs
mov
inc
test
mov
aam
stc
sbb
add
jno
inc
aas
sbb
push
pop
sahf
je
sbb
pop
lahf
out
outs
jmp
sbb
dec
add
mov
pop
and
fdivr
inc
sub
pusha
pushf
mov
das
add
add
inc
dec
(bad)
pop
add
xchg
fidivr
(bad)
mov
hlt
and
dec
inc
sti
pop
out
mov
mov
test
pusha
or
mov
sub
in
(bad)
mov
sbb
dec
mov
dec
std
cmp
push
cmp
cmp
jne
pop
in
vmovdqu
inc
add
dec
jbe
sti
jmp
je
arpl
sbb
(bad)
push
je
jae
(bad)
jmp
int3
cmc
int
lock
mov
mov
mov
std
add
lock
push
mov
inc
add
mov
pop
sbb
jmp
test
movs
mov
add
pop
pop
mov
ins
mov
pcmpgtw
push
cmps
xchg
ret
mov
jbe
and
xor
cmc
push
jb
jle
push
mov
sti
xor
jmp
stos
(bad)
pop
ins
adc
outs
mov
pop
pop
add
add
add
dec
mov
mov
or
push
add
pop
pop
pop
sub
cld
dec
cld
pop
add
std
cwde
jp
pop
cmp
pop
icebp
inc
push
jb
ret
and
cs
fdiv
jno
pop
push
test
xchg
xor
aas
ret
mov
dec
mov
inc
add
je
mov
xor
jg
ds
mov
out
or
cdq
xchg
mov
mov
je
iret
rcr
add
inc
call
pop
std
inc
(bad)
scas
add
inc
bound
mov
pop
and
add
stos
sbb
loopne
push
mov
pop
pop
outs
inc
lds
dec
xlat
fs
add
sbb
xor
adc
(bad)
arpl
dec
sar
retf
fimul
inc
sbb
add
out
and
cli
ret
out
mov
adc
data16
pop
(bad)
call
ss
inc
add
pop
std
retf
fist
inc
movs
push
jmp
xlat
inc
call
push
dec
mov
sti
sahf
hlt
xor
push
cld
stc
mov
(bad)
(bad)
mov
jo
add
(bad)
gs
add
ret
clc
xchg
adc
daa
add
call
push
sti
popf
add
rcl
inc
push
pop
add
inc
mov
add
adc
sub
cmp
imul
cmc
mov
push
or
aas
xor
and
test
dec
mov
gs
add
mov
inc
mov
mov
ss
dec
in
inc
adc
inc
jmp
jle
and
xor
call
push
(bad)
jne
pop
idiv
or
pushf
push
add
pop
and
ins
mov
mov
ins
push
or
inc
and
loop
xchg
pop
push
jbe
or
xor
add
mov
(bad)
mov
mov
xor
push
xor
mov
aam
push
add
test
xor
xchg
sbb
cmp
stc
out
sbb
or
shl
or
out
and
xor
xor
ins
push
loop
icebp
dec
push
add
dec
add
sbb
(bad)
idiv
sbb
add
cld
das
xchg
jp
shr
je
jnp
inc
jl
jmp
jmp
add
add
xchg
cmp
jmp
jp
(bad)
xlat
inc
pop
mov
dec
lar
(bad)
in
out
mov
mov
xor
imul
xor
ret
mov
push
cld
js
ja
aam
push
data16
loopne
and
mov
pushf
inc
add
jmp
mov
dec
repnz
sbb
jecxz
jg
test
cmc
push
cmc
add
inc
jae
cli
hlt
shr
cld
push
xor
jl
push
mov
mov
test
add
imul
push
and
mov
inc
or
push
stc
and
or
fidiv
or
fild
and
sub
pop
arpl
fild
arpl
xchg
jae
pop
mov
jbe
inc
push
fdivp
(bad)
dec
push
add
daa
(bad)
xor
push
out
pop
push
mov
add
add
xor
das
mov
add
pop
mov
ins
mov
mov
pusha
add
ror
je
push
sub
fbld
xchg
test
scas
push
pop
push
inc
gs
stc
jmp
adc
shr
(bad)
lahf
mov
jae
pop
inc
inc
adc
icebp
dec
pop
add
js
jbe
outs
mov
mov
das
std
jg
push
push
or
or
movs
pop
inc
push
jg
sub
cmp
cwde
(bad)
movs
pop
out
add
mov
jg
mov
les
sbb
inc
push
mov
fs
neg
adc
cwde
adc
sbb
mov
pop
je
sbb
sub
inc
sti
call
pop
cmps
push
in
or
psubusw
mov
int3
push
jg
jg
mov
arpl
jbe
imul
bound
cmc
and
mov
sahf
xchg
pop
inc
clc
int
frstor
ret
mov
std
imul
out
inc
xor
jbe
or
cwde
push
arpl
sbb
cmp
jns
inc
sbb
mov
(bad)
(bad)
or
shl
dec
pop
adc
and
jg
ds
pop
dec
lds
cmp
out
cmps
stos
(bad)
cli
out
movntq
pop
push
lds
imul
test
bound
mov
mov
rol
addr16
add
mov
xor
dec
ret
lock
pop
jne
jecxz
push
adc
arpl
cli
jg
loopne
push
das
repz
daa
ja
xchg
add
jbe
mov
or
jo
pushf
mov
inc
mov
ret
pop
fwait
jmp
push
pop
call
jnp
mov
mov
xchg
nop
adc
mov
jg
(bad)
cmp
and
cs
ins
cmove
jl
ret
popa
add
push
mov
mov
imul
imul
xor
lock
iret
mov
xor
mov
jmp
fnstsw
cmp
pop
jae
cmc
add
jmp
mov
jl
jmp
inc
cmp
sti
rcl
ret
dec
xchg
add
pop
scas
add
mov
loopne
mov
inc
jge
push
icebp
mov
add
mov
sbb
fcom
cli
(bad)
in
mov
jae
gs
in
xchg
lds
fmul
push
pop
add
jb
inc
xor
mov
or
cmps
mov
jmp
xchg
fs
pop
(bad)
mov
pop
add
xor
add
jae
dec
js
fadd
out
cli
dec
fs
or
imul
je
add
pop
test
push
cmp
addr16
fild
sbb
xlat
jmp
sbb
mov
mov
jg
or
mov
mov
inc
mov
loop
jo
xor
out
hlt
ret
and
inc
mov
mov
stc
mov
scas
(bad)
shl
jnp
push
jae
mov
sbb
ss
ret
xor
add
mov
and
ins
scas
push
outs
neg
pop
shl
mov
imul
mov
cwde
loopne
push
and
or
js
pop
test
out
icebp
out
std
pop
push
das
inc
and
mov
test
(bad)
rol
jno
pop
jmp
mov
es
pop
and
cmc
cmpps
or
fnsave
push
arpl
ror
(bad)
dec
xor
xchg
mov
or
mov
xchg
ret
mov
sbb
std
push
xchg
aaa
out
aas
and
jno
or
adc
jb
push
cmc
dec
repnz
pop
addr16
mov
push
cdq
lds
das
fs
jg
daa
imul
push
sub
xchg
mov
fisubr
mov
cld
cli
repz
sbb
cmc
es
push
iret
and
loopne
push
pop
repnz
ror
lock
push
mov
mov
aas
(bad)
(bad)
sbb
or
fsubr
jo
push
pusha
and
mov
(bad)
xchg
mov
mov
(bad)
mov
cld
loope
arpl
ret
out
ret
inc
ficomp
inc
mov
pusha
xor
xchg
stc
pop
inc
mov
add
pop
push
je
test
pop
or
dec
lock
add
(bad)
fisttp
sbb
out
lds
ja
(bad)
js
shl
sub
mov
inc
cli
arpl
jle
scas
push
pop
ins
mov
or
or
cmps
sti
inc
lods
cs
aad
test
and
add
push
inc
arpl
adc
mov
push
add
repz
std
dec
test
pushw
push
ror
(bad)
loopne
loop
add
bound
adc
fadd
add
and
in
pop
repnz
push
push
add
es
(bad)
outs
cmc
div
add
(bad)
mov
lds
add
inc
dec
pop
push
add
push
lahf
dec
les
and
loope
xchg
cmp
cmp
sub
stos
push
call
test
clc
mov
push
pop
pop
add
ror
pop
adc
ret
jle
mov
je
dec
push
push
sti
inc
adc
inc
or
lods
mov
shl
adc
aad
add
sub
rol
test
arpl
std
inc
dec
sub
hlt
mov
push
sti
popa
mov
mov
lds
ja
jns
std
ss
xchg
iret
fidiv
test
push
cli
inc
dec
rcl
mulps
aaa
inc
ror
imul
hlt
sar
jg
jae
das
mov
mov
pop
iret
dec
add
aas
pop
mov
icebp
ret
pop
mov
inc
(bad)
das
sub
mov
xchg
push
add
std
shr
test
stos
or
add
call
adc
sahf
mov
push
sar
(bad)
iret
push
push
mov
and
xor
push
inc
pop
cld
cmp
push
call
push
mov
pop
sbb
(bad)
pop
call
jmp
js
ret
inc
push
inc
pop
out
jae
arpl
je
aas
add
mov
ret
dec
adc
inc
aas
xchg
jbe
sbb
xor
jae
out
pop
cld
je
mov
test
repnz
idiv
inc
push
sub
(bad)
(bad)
sub
inc
lods
xchg
inc
push
xor
xchg
icebp
inc
and
dec
stc
lock
pop
jo
mov
cld
aas
or
add
shl
pop
das
lgdtd
rcl
outs
xchg
sbb
jg
(bad)
cmp
jecxz
mov
inc
cld
add
mov
sub
push
add
test
inc
jo
pop
test
add
push
cli
fimul
fst
jbe
adc
mov
and
(bad)
jmp
arpl
jmp
mov
xor
or
(bad)
jmp
mov
ret
add
iret
push
cld
jg
sti
sti
aaa
(bad)
jmp
inc
pop
repz
retf
cmps
push
ret
and
outs
mov
jae
push
mov
(bad)
sti
adc
mov
test
sbb
cmp
bound
aam
jmp
and
sub
add
leave
sub
sub
xor
outs
sbb
cmp
or
(bad)
inc
sbb
adc
out
jne
inc
add
test
scas
dec
and
or
xor
and
pusha
div
mov
jle
jmp
push
call
dec
out
rcl
add
mov
enter
add
inc
gs
or
pop
jmp
inc
jg
test
bound
or
push
fdiv
inc
dec
in
mov
fcom
lahf
sti
cmp
(bad)
div
lods
retf
jp
pop
add
mov
call
outs
pop
je
push
call
inc
add
dec
addr16
popa
fwait
xor
loopne
cli
inc
jae
adc
add
cmps
pop
inc
xor
icebp
imul
push
inc
sub
lahf
or
stos
xchg
jae
adc
xchg
jbe
or
(bad)
mov
std
mov
mov
cmp
pop
inc
and
aas
sub
fcom
jmp
clc
test
and
hlt
or
inc
push
or
das
adc
cld
aaa
mov
inc
cmp
fadd
aaa
jmp
addr16
add
inc
sti
sub
inc
std
push
pop
pop
push
cmps
cli
jl
adc
add
popf
push
cwde
dec
jbe
sbb
inc
inc
or
cmp
inc
or
jge
adc
mov
add
inc
adc
cmp
dec
mov
ins
shl
pop
inc
xor
ficomp
add
int
stos
(bad)
push
push
push
sti
dec
ret
mov
(bad)
pop
cmc
add
pusha
out
imul
les
inc
out
div
mov
out
mov
shl
hlt
or
push
and
cmp
(bad)
std
mov
iret
xor
xchg
ins
inc
daa
xor
icebp
iret
pop
push
push
push
test
lea
gs
mov
hlt
outs
call
adc
(bad)
adc
pop
cmp
xchg
push
sar
or
pop
sbb
or
pop
mov
pop
addr16
dec
mov
ret
stos
add
pop
mov
imul
test
dec
into
pusha
(bad)
sti
pop
inc
movs
mov
out
lods
sbb
adc
icebp
xchg
add
and
push
outs
div
js
sub
movs
push
mov
push
or
push
(bad)
inc
popa
rcl
pop
jp
bswap
sbb
(bad)
loop
add
scas
lds
add
mov
pop
mov
mov
add
push
cmp
push
sar
dec
jecxz
or
dec
add
test
or
add
hlt
xor
jp
imul
dec
fcmove
push
sti
jns
and
xor
fst
inc
or
inc
mov
fidivr
pop
add
cli
add
dec
or
fdivr
ret
sub
cmp
mov
xlat
sub
stos
add
or
(bad)
sub
outs
test
add
add
popa
adc
jmp
mov
inc
pop
cld
push
sbb
jbe
repz
xor
mov
mov
dec
or
call
sahf
jno
in
add
inc
bound
ret
and
sbb
jmp
pop
aam
out
inc
fild
pop
push
lock
clc
mov
fwait
icebp
pusha
add
or
mov
jl
(bad)
ins
add
rcl
outs
push
inc
aam
mov
push
xchg
je
mov
ins
pop
and
ret
inc
dec
push
cs
in
out
ds
mov
lds
jne
aam
xor
sti
inc
dec
jmp
(bad)
cmps
aam
inc
jb
inc
xor
pusha
dec
inc
fsubr
mov
push
ret
inc
push
inc
inc
outs
sbb
gs
in
add
xchg
sbb
lods
retf
repz
mov
add
jg
and
and
movntq
cmp
and
add
sub
xor
repnz
push
inc
add
inc
or
dec
fistp
jp
(bad)
repnz
or
ret
sar
xor
push
inc
int3
jmp
test
push
mov
int3
pop
vsubps
add
mov
ins
movs
lock
sub
nop
or
cmp
mov
push
mov
fimul
les
xor
hlt
dec
arpl
inc
xlat
mov
dec
pop
adc
push
outs
jbe
in
or
cmps
xor
push
rcl
jmp
aaa
and
or
add
mov
aad
(bad)
aas
push
xor
and
inc
jle
pop
pop
add
jo
mov
sti
or
jo
add
xor
add
das
jb
adc
mov
push
hlt
pop
xchg
xor
out
pop
retf
inc
pop
dec
movs
and
dec
shl
lock
sub
sbb
test
stc
std
xchg
(bad)
sub
jmp
xor
mov
sub
inc
pop
ret
sub
pop
or
mov
lea
cmp
pop
fidiv
add
ins
loopne
std
ret
sti
xchg
in
(bad)
inc
push
arpl
jae
fbld
push
pop
or
mov
outs
cld
mov
pop
mov
bound
ins
in
push
pop
stc
or
cmp
or
stc
add
inc
mov
aas
je
dec
jns
add
add
jno
sbb
shr
lock
sub
push
inc
adc
sub
add
pusha
dec
es
or
push
mov
xor
pop
adc
aam
add
div
ficom
cmp
lahf
mov
xor
imul
jp
les
inc
outs
inc
inc
and
dec
es
mov
and
sbb
imul
aas
add
mov
xchg
ds
inc
fimul
pop
ret
dec
or
mov
inc
pop
test
xor
add
push
mov
ss
scas
rol
jge
xchg
push
adc
aad
ss
outs
mov
inc
sti
pop
gs
out
shr
pop
xchg
ja
or
jl
call
adc
xchg
mov
add
cmp
fstp
sti
not
ins
lahf
test
and
inc
js
mov
fwait
or
retf
xor
sar
repz
or
xchg
dec
xor
out
cmp
mov
mov
adc
outs
adc
sub
sbb
dec
add
(bad)
loope
cdq
icebp
clc
dec
mov
jmp
into
jg
mov
ins
cld
mov
or
out
pop
jp
jg
push
sub
idiv
push
and
ja
sub
mov
add
add
std
(bad)
mov
jl
aas
std
push
cli
mov
mov
adc
pop
aam
add
aas
inc
idiv
mov
outs
jge
inc
add
retf
mov
sbb
jle
mov
adc
arpl
je
mov
xor
push
neg
adc
cli
mov
or
inc
xor
push
popf
push
neg
arpl
pop
lds
aam
ins
inc
test
dec
mov
arpl
std
aaa
add
inc
xor
mov
adc
xor
xlat
fistp
arpl
mov
push
xchg
sub
aas
js
mov
xlat
pusha
or
cli
mov
imul
sbb
push
je
out
inc
and
ret
mov
push
pushf
test
adc
xchg
into
sub
adc
loope
dec
sti
ret
std
daa
add
pop
js
fisttp
or
push
(bad)
in
mov
push
cli
retf
cmp
inc
(bad)
inc
out
pop
out
lea
push
or
jle
aaa
add
call
test
xchg
mov
pop
cmp
pop
add
aam
push
adc
packsswb
(bad)
cs
les
ss
mov
add
jbe
push
pop
inc
add
jmp
loopne
sti
push
outs
dec
fs
and
mov
and
or
inc
xor
sbb
aas
pop
aas
(bad)
jb
add
jmp
mov
push
pop
push
push
jmp
inc
pop
sti
je
sbb
test
or
cmp
clc
fs
pop
jnp
mov
push
mov
and
mov
icebp
mov
xor
shl
ins
jbe
mov
or
lods
add
scas
inc
fmul
test
add
int3
in
jo
or
sbb
daa
pusha
add
jae
lds
outs
mov
or
sub
and
shr
inc
hlt
repz
ret
push
dec
dec
add
(bad)
movs
aaa
xchg
in
cmp
out
fwait
call
imul
push
pop
inc
inc
ret
loopne
add
scas
pop
push
ss
add
push
jecxz
hlt
outs
or
pop
push
test
cs
sub
inc
enter
xchg
inc
push
push
sub
push
adc
pop
pop
sti
pop
add
mov
mov
xchg
das
pusha
xchg
inc
cmp
jg
push
ja
(bad)
ret
lods
dec
push
fisttp
scas
or
mov
lahf
(bad)
mov
ret
inc
das
out
add
push
sbb
jg
lock
jmp
hlt
retf
inc
mov
add
inc
pop
jp
ins
jbe
pop
fs
xor
xchg
mov
inc
inc
aad
mov
dec
add
xor
or
or
adc
shl
js
iret
mov
cmp
inc
mov
pop
and
and
inc
je
cmp
add
ficomp
mov
(bad)
push
nop
push
fsub
popf
test
aam
outs
(bad)
cmp
adc
mov
(bad)
cmp
sbb
test
inc
mov
pop
xchg
pop
push
cmps
(bad)
test
inc
mov
cld
(bad)
mov
leave
cmp
cmp
mov
add
and
outs
je
pop
adc
pop
mov
push
inc
and
verw
cmp
mov
pop
loop
(bad)
addr16
xor
pop
mov
call
(bad)
jl
outs
sbb
outs
sbb
mov
add
fwait
(bad)
outs
mov
call
pop
out
retf
iret
add
ret
aam
(bad)
xor
loopne
sbb
xor
sar
sub
shr
imul
enter
mov
pop
cwde
mov
cld
inc
xor
xor
inc
inc
inc
xchg
adc
cli
stc
xor
movs
popa
in
cmp
sub
mov
cmp
xchg
mov
or
ret
pusha
lahf
add
inc
cmp
movs
adc
cmp
xor
pop
or
push
jp
dec
imul
jae
cdq
js
fdivr
add
fs
in
mov
call
dec
add
inc
mov
enter
punpckhbw
sbb
mov
in
out
test
or
push
sub
jp
push
push
inc
repz
aas
inc
out
or
outs
jo
push
mov
mov
inc
call
sti
sahf
outs
cli
add
outs
stos
jmp
xchg
push
push
aad
jg
movs
inc
add
adc
inc
inc
inc
sti
add
add
das
cli
pop
and
inc
jmp
aad
fdivr
sbb
retf
cmc
call
dec
sub
into
jo
fbstp
sbb
repz
add
inc
add
pop
and
loope
sbb
hlt
pop
inc
sbb
dec
xchg
jmp
dec
dec
(bad)
sti
xlat
push
cmc
pop
icebp
adc
push
add
add
jb
push
dec
das
jmp
pop
dec
xor
mov
mov
mov
jle
ja
out
and
dec
sti
push
push
out
pop
jl
fild
pop
mov
sbb
pop
dec
jae
arpl
movs
ret
aas
and
jnp
wbinvd
add
neg
inc
(bad)
pop
popa
mov
mov
std
(bad)
daa
push
cmp
inc
(bad)
sub
inc
push
dec
mov
inc
aam
pop
in
pop
(bad)
inc
dec
mov
(bad)
(bad)
pop
movs
ins
and
test
inc
adc
mov
push
mov
std
(bad)
jmp
xchg
stos
or
lods
adc
or
jnp
ror
cmp
add
or
shr
mov
pop
out
retf
imul
(bad)
mov
or
or
and
push
sub
retf
push
sahf
(bad)
jnp
pop
mov
jl
and
cmp
ret
xchg
cli
ins
xchg
loop
mov
js
dec
mov
dec
adc
clc
pop
and
push
cmp
inc
(bad)
scas
cwde
popa
jne
imul
(bad)
dec
jmp
inc
mov
push
push
mov
cmp
dec
pop
lods
scas
cmp
not
jae
adc
std
sub
cmp
push
dec
pop
ror
and
mov
and
les
pop
cmp
mov
pop
call
fldcw
push
xchg
jecxz
enter
rcl
lock
aam
inc
aas
ins
mov
imul
fs
and
mov
cmp
add
mov
inc
hlt
sar
or
inc
lods
adc
ja
pop
jae
call
loope
hlt
pop
add
inc
hlt
aaa
call
repz
test
call
pop
adc
adc
push
mov
mov
call
jle
clc
ret
das
jle
imul
imul
out
js
fstp
xor
pushf
xor
scas
(bad)
and
add
test
inc
or
enter
ja
mov
dec
dec
or
pop
inc
call
comiss
and
out
ror
inc
test
add
jp
xchg
push
xchg
(bad)
ja
hlt
jg
dec
push
or
add
mov
mov
(bad)
lods
add
push
inc
or
cmp
jg
aad
add
cmp
ins
inc
and
or
sub
repz
sbb
sahf
fs
sub
xchg
out
inc
sub
pop
sub
dec
call
adc
xor
test
aas
sbb
mov
push
jg
inc
push
outs
push
(bad)
or
or
jmp
(bad)
dec
out
sahf
(bad)
(bad)
ret
push
jmp
and
mov
jmp
xor
sbb
mov
xchg
inc
ins
fs
aas
cmps
inc
add
retf
cmp
stc
popa
fs
push
std
inc
cmp
inc
xchg
sub
mov
(bad)
adc
inc
cmp
inc
in
loop
push
adc
ss
aas
xchg
(bad)
xchg
les
add
mov
xchg
mov
dec
sub
jle
dec
sub
repz
ja
retf
cmc
add
pop
int
push
or
dec
das
add
add
xor
jo
dec
movs
pop
jae
lahf
add
scas
jmp
or
cwde
pop
sub
add
retf
lds
call
icebp
sbb
mov
and
push
jmp
and
xor
popa
jmp
mov
push
mov
xchg
(bad)
push
sub
jg
ss
inc
cld
loope
or
ret
pop
dec
xchg
push
inc
test
push
mov
lahf
xor
jno
ja
sbb
xchg
xor
int3
call
ss
enter
or
icebp
es
pop
das
mov
push
ret
aas
aam
jmp
out
in
out
je
or
fimul
aaa
xor
nop
mov
inc
(bad)
ins
mov
pushf
dec
pop
call
jp
mov
fmul
movs
repnz
and
leave
mov
push
call
adc
jecxz
mov
push
xor
std
in
adc
mov
fcmovnu
add
lahf
lods
push
or
scas
push
imul
inc
pusha
cmp
std
inc
std
scas
and
jbe
ret
mov
rcr
js
fist
inc
inc
arpl
push
sbb
adc
out
mov
mov
repz
pushf
ret
or
xor
aas
ficom
movs
not
cmp
test
ins
inc
xchg
xor
sub
add
add
aam
fs
addr16
ret
inc
and
lods
xor
inc
push
inc
bound
cld
sbb
pusha
test
pop
addr16
les
ss
hlt
fidiv
mov
mov
(bad)
out
cmp
inc
push
ds
adc
das
sbb
cld
mov
adc
mov
outs
cmp
(bad)
jo
ins
and
mov
jl
lds
mov
rol
adc
dec
repnz
not
daa
lsl
push
inc
repz
mov
call
shl
jb
cmp
fadd
jg
clc
mov
push
clc
dec
pop
rol
xchg
test
push
arpl
(bad)
ins
cmc
loop
inc
ret
inc
mov
stos
dec
inc
not
push
sbb
fiadd
fdivr
rcl
fnsave
test
inc
inc
shr
inc
mul
inc
and
jle
adc
jbe
and
pop
xchg
pop
lods
retf
sub
mov
ret
inc
mov
(bad)
pop
imul
out
imul
add
cmps
sar
mov
inc
sbb
cmp
sbb
push
les
or
push
out
pusha
cmp
mov
std
xchg
pop
jb
outs
cmps
mov
mov
push
xlat
push
out
ret
fild
in
cmovb
pop
jo
xchg
(bad)
sbb
mov
push
sbb
clc
ret
sbb
cmps
aam
push
adc
push
mov
xlat
and
push
adc
push
jl
loop
inc
pop
sbb
nop
hlt
scas
mov
bnd
pushf
adc
loopne
mov
dec
add
jae
pop
aaa
mov
inc
pushf
dec
test
and
pop
sti
ret
xchg
cmp
mov
jmp
out
inc
sti
test
cli
fcom
and
mov
inc
or
jmp
cmp
jg
mov
pop
mov
pop
jle
test
inc
ins
mov
cmp
or
or
push
(bad)
call
ds
pop
mov
call
pop
mov
mov
jbe
out
aad
sti
das
or
sub
mov
push
inc
ss
xor
jg
sar
push
push
out
mov
(bad)
sti
push
push
xor
mov
mov
ret
or
call
sbb
push
push
inc
pop
xor
pusha
mov
xchg
inc
dec
and
dec
dec
cld
push
or
mov
and
fdiv
inc
sbb
adc
jge
push
mov
push
dec
adc
or
mov
xchg
adc
cs
test
fld
xchg
sbb
std
mov
jne
call
xor
sahf
inc
cld
add
sbb
aaa
mov
fs
repz
pop
aad
cmp
(bad)
cmp
sub
add
cmp
add
pushf
dec
stos
shr
or
xlat
xor
adc
sbb
and
xchg
stos
shr
adc
(bad)
imul
and
out
sti
stos
or
bound
(bad)
cld
sbb
add
je
pop
mov
out
push
enter
add
ins
aas
wrmsr
(bad)
mov
lods
movs
xor
mov
sbb
cwde
inc
test
sbb
mov
xchg
jb
cmp
scas
scas
jb
jp
pushf
add
mov
call
xor
(bad)
sbb
outs
pop
adc
test
xchg
out
push
xchg
add
add
inc
push
dec
pop
test
fmul
js
dec
adc
add
cmp
xchg
mov
inc
outs
je
pop
test
shr
adc
ja
mov
dec
test
mov
test
inc
stos
adc
xor
or
xchg
xor
xchg
ret
std
push
mov
pop
pusha
fimul
out
add
and
sbb
stos
sub
add
pop
or
push
mov
sbb
je
test
sbb
dec
cwde
in
push
mov
pop
(bad)
adc
js
mov
push
push
adc
xor
xchg
push
icebp
sets
rcr
jo
jbe
shr
int3
jle
and
sbb
(bad)
dec
and
jnp
push
inc
jno
push
push
sbb
inc
out
out
(bad)
aas
outs
adc
push
jmp
dec
pop
(bad)
mov
mov
mov
fs
data16
pusha
pop
test
push
jae
cs
push
jmp
jae
add
mov
mov
or
das
adc
cld
in
inc
inc
lahf
aas
mov
xchg
sbb
(bad)
adc
mov
sbb
call
xchg
ret
add
mov
sub
and
mov
and
mov
ret
enter
or
mov
pusha
xchg
sbb
jmp
int3
(bad)
push
mov
out
mov
jae
lods
adc
mov
pop
cmp
out
jl
out
and
jl
xchg
cli
popf
xchg
rol
adc
mov
inc
out
or
es
jmp
sahf
mov
loope
adc
mov
xor
lds
mov
fucomi
pop
inc
ds
adc
lds
arpl
adc
div
push
test
cmps
xor
dec
outs
cmc
arpl
mov
out
jle
and
mov
push
xor
adc
mov
mov
mov
imul
mov
jb
repz
out
std
aaa
test
dec
cmp
jmp
push
jg
(bad)
(bad)
cmp
jge
mov
sub
push
add
lods
or
clc
adc
mov
or
ret
cdq
sub
push
pop
fs
and
adc
or
sub
scas
push
mov
add
add
add
and
jns
rol
mul
add
xlat
aas
pop
inc
pop
pop
mov
inc
inc
push
push
xchg
les
pop
movhps
mov
mov
inc
maxps
add
imul
call
push
sbb
mov
stos
imul
mov
mov
fiadd
(bad)
push
vmovntpd
and
into
mov
test
retf
push
lods
cmp
outs
mov
call
repnz
adc
out
(bad)
xchg
adc
call
test
add
sub
cli
inc
sbb
jb
inc
lods
outs
retw
dec
pop
ss
daa
inc
cli
mov
sti
cmp
push
push
sub
outs
xchg
jge
lahf
hlt
sub
ret
leave
inc
and
or
pop
mov
cld
mov
sub
pushf
and
aam
xor
inc
or
or
push
add
ss
sbb
fsub
add
shr
pop
sub
ret
pop
pop
mov
imul
sbb
rol
add
in
call
or
adc
sti
mov
mov
xor
push
out
mov
sub
(bad)
sti
xchg
vcmppd
and
jp
mov
int
or
mov
add
and
pop
mov
add
imul
add
and
adc
aam
neg
ret
inc
adc
push
cmc
inc
icebp
inc
data16
les
jae
sbb
es
cmp
ss
out
inc
inc
arpl
cdq
call
mov
cmp
lahf
ins
mov
inc
add
test
jmp
imul
jg
fcmovb
inc
push
aaa
inc
ret
stos
pop
ret
mov
mov
in
daa
shr
dec
mov
loopne
test
stos
mov
sbb
adc
nop
(bad)
mov
mov
pop
stos
pop
mov
out
dec
xor
jns
inc
push
cld
and
(bad)
arpl
rol
cmp
and
adc
xchg
out
dec
xchg
add
push
test
aad
ja
add
add
test
pop
clc
jne
mov
js
or
outs
fptan
shr
das
out
mov
mov
inc
inc
ins
adc
std
popf
nop
mov
(bad)
ins
rol
inc
dec
jmp
or
inc
xlat
or
repnz
add
sbb
xlat
jmp
fadd
cwde
outs
push
pop
mov
and
push
lods
inc
push
push
mov
(bad)
call
or
jg
adc
cmp
add
cmp
test
or
add
inc
xor
dec
call
add
(bad)
cli
ret
lahf
dec
pusha
rol
mov
test
hlt
dec
cld
pop
xchg
mov
mov
add
xchg
popa
adc
push
addr16
sbb
jg
pop
push
cmp
add
inc
dec
out
cmp
cmp
out
sbb
mov
push
push
push
fdiv
xchg
xor
fstp
xor
add
je
xor
(bad)
mov
cmc
out
inc
das
outs
pop
xlat
out
dec
in
std
std
adc
ja
leave
mov
pop
mov
icebp
and
aaa
sahf
add
ds
out
sahf
fdiv
jg
push
dec
sti
sar
stc
outs
sti
push
js
mov
xchg
inc
cmp
into
push
push
sub
(bad)
outs
rcr
mov
les
out
inc
(bad)
ds
aaa
or
or
out
mov
pop
inc
sub
mov
(bad)
(bad)
fild
ret
push
cli
and
ret
ja
and
mov
or
inc
inc
inc
xchg
es
mov
jmp
xor
inc
pusha
ret
js
subps
dec
fdiv
loop
sar
or
xchg
mov
(bad)
mov
daa
jnp
ror
sbb
int3
(bad)
aas
or
inc
pop
inc
adc
mov
ja
inc
dec
jg
mov
xor
hlt
or
aas
out
aam
(bad)
out
or
stc
aaa
mov
aaa
sbb
inc
xor
xchg
shl
adc
aad
movs
jmp
add
push
ret
outs
jo
pop
mov
adc
loopne
cli
(bad)
(bad)
jmp
push
pop
and
add
movs
out
dec
dec
cdq
ret
mov
pop
pop
mov
shl
mov
fbld
jp
sti
fsub
outs
dec
jle
mov
sbb
xor
jg
push
scas
or
mov
pop
push
lods
adc
cld
out
add
pop
mov
test
aaa
or
dec
mov
sbb
ret
outs
add
inc
sub
add
inc
not
cmp
mov
or
mov
aaa
push
push
mov
pop
or
mov
inc
outs
cli
inc
idiv
(bad)
hlt
sti
aas
arpl
aad
add
mov
inc
mov
dec
aam
(bad)
xor
retf
dec
imul
inc
aam
enter
cld
ja
fwait
sub
and
pop
das
add
and
(bad)
mov
ja
or
icebp
imul
dec
xchg
pop
out
jmp
xchg
aas
add
mov
add
xchg
push
out
inc
(bad)
pop
xor
aas
loop
rep
inc
push
imul
inc
add
jp
xor
loop
loopne
xlat
(bad)
addr16
xor
(bad)
fstp
mov
aas
jle
jg
movs
dec
pop
xor
dec
mov
retf
(bad)
mov
mov
xor
es
xor
pop
mov
shl
test
or
pop
mov
outs
es
pushf
popa
fstp
adc
ficomp
add
imul
stos
adc
sti
pop
mov
mov
push
and
pop
cs
jno
dec
je
add
xchg
sub
shl
push
into
and
test
mov
mov
mov
out
jmp
outs
and
pop
push
fucomip
(bad)
clc
pop
adc
test
sub
add
sbb
add
xchg
push
jns
inc
out
outs
cmp
lds
inc
xor
call
xor
jmp
push
jl
adc
dec
daa
addr16
repz
enter
rol
or
or
and
push
outs
adc
push
cmp
mov
cmp
dec
js
ja
add
inc
and
lds
lds
add
dec
in
sbb
adc
adc
cwde
inc
(bad)
push
push
icebp
push
xlat
dec
mov
les
mov
dec
push
xchg
mov
mov
loopne
(bad)
shr
mov
pop
out
cmps
jae
pop
and
push
dec
dec
std
push
ss
test
sahf
rol
inc
into
adc
outs
mov
out
in
neg
(bad)
push
dec
and
outs
xor
lahf
xchg
push
or
add
mov
mov
cmp
cli
mov
imul
sbb
out
adc
pop
dec
push
fs
(bad)
aas
mov
jl
fldcw
push
dec
push
repnz
xor
pop
sub
test
mov
inc
lock
dec
pusha
retf
pop
ror
das
xchg
loope
mov
test
outs
pop
mov
and
dec
jae
push
mov
ss
fwait
dec
or
inc
add
stc
add
and
add
or
out
stc
pop
hlt
ret
movs
adc
add
out
push
inc
sub
push
pusha
(bad)
repnz
ret
add
mov
pusha
add
and
mov
aam
inc
push
clc
fs
cmc
inc
mov
dec
pop
cmc
inc
xchg
pop
sti
aam
test
lds
std
or
sar
jmp
hlt
mov
xchg
add
push
inc
jg
jl
inc
out
and
std
mov
pop
dec
dec
inc
(bad)
pop
jae
ret
cmps
test
movd
inc
ret
xor
and
jno
xor
dec
lods
cmps
dec
sub
aam
xchg
pop
btr
dec
outs
je
pop
and
sub
sub
ror
movs
jmp
lods
(bad)
fs
xlat
sti
add
pusha
inc
popa
add
pop
sbb
mov
dec
repz
(bad)
mov
nop
std
or
inc
or
pop
mov
and
stos
ss
cmp
fidivr
outs
dec
jmp
or
mov
mov
call
push
push
sti
jl
mov
xor
mov
adc
mov
call
sbb
cmp
inc
add
or
inc
mov
cmps
sbb
sti
jbe
jmp
pop
mov
add
dec
jbe
fimul
inc
xchg
push
dec
(bad)
sbb
add
inc
jle
outs
and
add
inc
outs
push
or
cld
fst
mov
ret
pop
push
sub
xchg
enter
mov
aaa
adc
jl
dec
mov
or
pop
sti
psllq
cmp
cld
or
(bad)
arpl
cmp
inc
aaa
clc
fnstsw
push
mov
std
ret
sub
clc
or
fstp
mov
dec
add
jg
push
outs
and
pop
test
adc
jmp
daa
enter
dec
mov
adc
movs
pop
xor
fwait
sub
(bad)
cli
mov
pop
xchg
pop
inc
mov
shr
push
pop
cmp
out
sub
mov
std
mov
paddw
add
xor
sbb
cmps
dec
add
pop
sub
mov
pop
dec
test
cli
add
jl
arpl
sahf
mov
(bad)
and
mov
sub
mov
push
add
and
fistp
mov
mov
scas
or
push
shr
(bad)
je
pop
popa
mov
imul
out
sbb
sub
sbb
add
mov
xor
push
mov
cld
(bad)
mov
and
cmp
(bad)
fwait
ret
cmps
jg
add
mov
adc
sbb
inc
pop
dec
sbb
add
mov
inc
mov
cmp
(bad)
adc
call
add
mov
mov
mov
add
retf
mov
add
pop
call
call
push
test
fisub
inc
sub
push
mov
adc
fstp
aaa
jle
inc
jae
add
pusha
xor
fild
adc
mov
inc
es
sub
or
in
push
cmp
dec
mov
and
aaa
loopne
inc
sar
ret
cld
mov
xor
cli
or
dec
xor
pop
out
mov
int3
mov
mov
jl
gs
adc
cmp
adc
movs
add
adc
mov
mov
inc
xor
inc
push
inc
push
and
inc
xchg
jae
les
add
xchg
mov
aam
imul
mov
fsubrp
cmp
(bad)
idiv
pop
mov
stos
shr
or
pop
add
loop
(bad)
call
je
fadd
push
add
lds
test
in
lahf
aad
adc
push
adc
xor
pop
lea
jecxz
mov
inc
jmp
std
cmp
jmp
inc
movs
inc
jbe
inc
push
pop
mov
jle
(bad)
sbb
ja
jae
cld
js
or
fld
jno
ret
std
sti
(bad)
stos
xchg
mov
jmp
add
(bad)
sbb
inc
jg
push
push
mov
ds
int3
and
jo
cmp
jp
push
aam
in
hlt
cmps
xchg
jle
mov
jge
fild
mov
mov
mov
gs
xchg
ret
or
push
ins
adc
addr16
aaa
adc
ss
push
jl
dec
dec
inc
adc
or
int
add
mov
cmp
adc
test
pop
fnstcw
add
pop
mov
sub
xor
shl
jp
adc
cld
ja
jbe
add
and
dec
nop
push
sti
dec
xor
dec
mov
add
jae
push
xlat
les
mov
cli
xor
jp
cmp
inc
lods
pmullw
mov
iret
or
ret
and
jae
lds
sti
rol
jmp
dec
rol
aam
mov
add
push
lahf
pusha
adc
jmp
add
test
jg
add
outs
dec
cdq
add
add
mov
adc
or
push
adc
imul
vandps
movs
push
inc
ret
es
adc
xor
sbb
jmp
mov
push
mov
jg
jle
or
xor
(bad)
(bad)
mov
retf
rcl
or
repz
mov
dec
gs
in
pop
in
inc
mov
div
pop
int
mov
stos
xchg
ret
ins
iret
and
dec
cld
mov
cmps
aas
xor
hlt
dec
sub
cmp
mov
xchg
mov
(bad)
mov
pop
fadd
push
cmp
pop
mov
ja
push
or
jo
movs
push
test
int
out
or
loopne
lock
add
outs
sbb
test
pushf
mov
adc
pop
or
adc
arpl
pop
or
adc
mov
xchg
out
xchg
jae
xchg
pusha
dec
mov
shr
dec
sub
push
ror
(bad)
mov
dec
cs
xchg
scas
jecxz
mov
sub
jbe
mov
xlat
ss
pop
push
lahf
mov
test
std
loop
or
add
mov
idiv
add
(bad)
push
or
jg
pop
inc
sub
repz
pop
ja
sti
mov
sub
sti
arpl
aaa
xor
rol
inc
dec
add
fbld
jmp
add
or
add
(bad)
sub
std
push
mov
xor
mov
mov
cmc
or
jno
or
cmc
mov
mov
add
test
dec
clc
jg
adc
sub
push
mov
jmp
(bad)
and
loop
fidiv
test
pop
inc
sub
(bad)
or
movs
push
pop
out
push
jp
mov
add
sbb
pop
std
bound
lahf
mov
or
mov
dec
arpl
fs
pusha
mov
cmp
loop
inc
dec
xor
jmp
or
pusha
pop
dec
loopne
(bad)
repz
sbb
lahf
push
daa
and
mov
in
dec
out
mov
call
or
cmp
jno
out
push
pop
(bad)
not
enter
xor
inc
ror
xchg
call
addr16
inc
pop
mov
retf
dec
sub
outs
cmp
mov
mov
loop
adc
outs
and
inc
out
loope
ja
adc
hlt
xchg
push
(bad)
xchg
repnz
and
jnp
mov
mov
das
loopne
sti
cwde
call
lock
pop
enter
in
mov
xor
or
push
cmp
loop
sub
pop
adc
sbb
and
mov
cmp
call
sub
repz
cli
(bad)
jmp
hlt
cld
cli
mov
jle
mov
push
out
out
mov
popf
pop
sub
(bad)
and
test
pop
push
(bad)
ror
cmp
aam
push
add
jae
jae
mov
push
cli
jg
addr16
pop
retf
(bad)
mov
out
mov
inc
ret
sub
dec
je
pop
mov
mov
sub
adc
out
shl
dec
ins
mov
dec
dec
inc
enter
(bad)
jmp
mov
xlat
out
push
sbb
sub
mov
sub
jbe
mov
mov
dec
push
arpl
sti
test
outs
outs
loope
das
xchg
xchg
sbb
cmp
rol
dec
sar
loop
shl
fcmove
in
mov
mov
xor
inc
dec
cmp
std
movs
jno
inc
aas
pop
test
mov
and
(bad)
jnp
push
jg
out
mov
and
sbb
xchg
loop
xor
and
mov
mov
jae
jl
add
mov
adc
pusha
jmp
add
add
arpl
ror
jle
loopne
push
es
(bad)
cmps
imul
adc
mov
rol
mov
jmp
fdivr
push
or
inc
pop
and
push
inc
hlt
jl
dec
pop
cwde
loopne
inc
test
mov
arpl
jns
inc
aam
jp
ret
and
mov
fiadd
ror
xor
dec
inc
pop
adc
mov
sub
icebp
add
add
(bad)
pop
mov
inc
pop
add
imul
clc
mov
or
mov
xchg
push
xchg
push
aaa
inc
mov
lock
jmp
push
xchg
xor
inc
ret
pop
pusha
and
sti
repz
jmp
scas
inc
rol
and
push
mov
jns
lahf
rcr
mov
sar
inc
ror
mov
test
jle
stos
ds
test
xor
inc
sbb
lods
in
pop
sar
pop
inc
pop
mov
pop
inc
push
arpl
dec
fimul
mov
xchg
jmp
pop
ret
sbb
fimul
clc
add
mov
cmp
push
xor
xchg
stos
or
out
les
adc
(bad)
cmc
push
into
jbe
add
xor
jnp
cdq
push
sub
jge
lods
inc
dec
stos
fist
mov
cmp
ja
call
das
jl
aas
add
or
imul
loopne
je
add
push
call
and
adc
imul
mov
inc
mov
jnp
in
dec
sbb
enter
imul
add
add
inc
pop
ror
add
pop
cmp
adc
ds
pop
jno
popf
mov
and
and
adc
lahf
shr
fcomp
adc
iret
dec
jg
dec
pusha
push
or
jmp
dec
es
inc
or
pushf
cli
cmp
fnstsw
push
lock
bound
arpl
add
outs
xchg
fs
or
dec
add
mov
xchg
je
jmp
fadd
jmp
and
sub
(bad)
push
push
cmc
or
nop
test
enter
ins
adc
jb
cmp
mov
fiadd
mov
jae
jecxz
or
jl
clc
mov
mov
(bad)
data16
jb
dec
out
inc
cs
ins
in
shr
and
pop
and
mov
mov
mov
mov
jmp
ret
mov
dec
inc
mov
jle
std
dec
jmp
pop
das
stos
fsub
outs
push
shl
jle
push
dec
cmp
cld
repz
aas
in
add
popa
mov
rol
mov
xor
shl
imul
in
pop
inc
aaa
sar
add
sbb
dec
adc
sbb
das
push
(bad)
mov
dec
(bad)
mov
jne
scas
xor
enter
and
ret
(bad)
push
fcmovbe
mov
xchg
ins
xor
adc
and
test
inc
mov
pop
inc
adc
inc
or
repnz
in
test
retf
inc
and
ret
fstp
lds
out
mov
dec
call
fs
repz
mov
movs
cs
jmp
lds
dec
push
scas
aam
cmp
fdiv
idiv
pop
inc
frstor
sbb
push
ss
loopne
dec
stos
add
jg
xor
and
push
xor
or
push
fstp
(bad)
out
mov
rcr
inc
mov
lahf
out
fs
fsubr
inc
add
inc
iret
pop
inc
mov
ins
ins
fild
scas
mov
mov
jle
lock
or
imul
ret
push
das
xor
(bad)
pushw
pusha
(bad)
hlt
push
add
xor
std
and
or
je
mov
or
xchg
mov
push
jno
int
push
mov
sbb
jle
push
cmc
xor
cmp
shr
das
or
add
int3
aaa
int3
cmp
cmp
mov
inc
push
inc
mov
in
pusha
inc
test
or
mov
pop
loope
and
cmp
push
adc
add
mov
(bad)
mov
xor
cs
loope
cmp
vunpckhps
jmp
push
add
imul
add
xor
mov
push
or
ret
xor
xlat
mov
jl
(bad)
shl
inc
inc
jg
push
data16
jmp
mov
mov
push
(bad)
inc
add
mov
jmp
jge
hlt
pusha
jl
jae
div
xchg
aaa
or
add
inc
ins
cmp
(bad)
lds
dec
ss
std
mov
or
cs
div
mov
inc
dec
sbb
mov
or
pop
and
(bad)
cdq
(bad)
clc
inc
mov
mov
push
ret
jg
test
push
add
(bad)
je
mov
xchg
lock
push
mov
idiv
repz
push
xlat
push
out
loop
mov
popf
aam
lds
pop
push
mov
push
test
gs
inc
std
scas
or
sub
outs
sbb
clc
push
dec
add
xor
cli
or
jo
mov
je
cli
add
dec
mov
push
test
pop
sub
or
dec
mov
cmp
fs
inc
sti
sub
and
sub
or
inc
(bad)
test
inc
out
add
fisttp
(bad)
jmp
xchg
inc
mov
cmp
and
jae
imul
das
out
lds
mov
js
clc
jp
mov
or
das
scas
inc
pop
call
sub
mov
dec
sub
push
hlt
dec
mov
fsub
in
add
sub
add
lods
(bad)
jg
jbe
xchg
jmp
mov
adc
sbb
jmp
sti
aaa
pop
nop
push
mov
mov
arpl
std
outs
icebp
mov
je
push
fiadd
div
mov
push
idiv
dec
dec
xor
push
fld
or
xor
add
inc
mov
or
xor
and
push
stos
stos
dec
dec
mov
xlat
mov
shl
pop
sti
pop
xor
loopne
loope
stos
jl
push
scas
fs
add
or
out
pop
lods
mov
sub
cmp
mov
add
lods
sti
adc
xor
cmp
mov
push
sbb
retf
xlat
outs
and
(bad)
fstp
(bad)
adc
mov
push
mov
jb
(bad)
adc
in
mov
cmps
pop
in
call
mov
push
adc
clc
mov
xchg
inc
pushf
in
pop
ss
mov
test
inc
inc
jnp
int
sub
popa
cs
push
mov
in
add
mov
mov
and
and
sti
in
xchg
pop
std
mov
and
sbb
mov
sub
jl
xchg
ficomp
aaa
dec
xor
in
call
fmul
out
sbb
xchg
jbe
lock
je
push
(bad)
sti
(bad)
xor
sahf
call
aam
imul
mov
xor
pop
inc
out
add
(bad)
aaa
push
mov
inc
sub
mov
sti
pop
cmp
jbe
mov
inc
fidivr
inc
mov
jle
mov
mov
mov
inc
xor
js
cmps
add
call
and
add
std
or
je
cmps
into
cmc
inc
ins
xchg
inc
push
push
aam
jmp
(bad)
scas
inc
add
inc
call
mov
push
adc
xor
or
std
imul
cmp
jmp
into
ins
repz
cmc
cmp
inc
outs
pop
xchg
push
test
xchg
fsub
or
mov
std
es
inc
pop
or
ret
(bad)
mov
sbb
imul
or
cld
shr
push
push
push
dec
in
js
jl
pop
mov
jb
cwde
pop
cmp
add
sub
inc
inc
jl
xor
hlt
or
xchg
sti
inc
test
sbb
adc
or
mov
dec
cld
test
sub
outs
sbb
js
inc
leave
cmp
mov
into
scas
xchg
lds
xchg
inc
inc
mov
icebp
outs
inc
fistp
dec
push
push
or
icebp
out
sub
mov
(bad)
mov
test
test
ficomp
and
mov
dec
inc
add
add
mov
and
imul
and
stos
call
call
mov
iret
mov
mov
mov
add
mov
inc
push
xor
ja
(bad)
cld
and
jae
adc
pop
mov
fmul
jmp
enter
repz
mov
mov
xchg
dec
push
ds
cli
jmp
aas
out
(bad)
imul
push
adc
and
test
add
lock
inc
arpl
mov
dec
jmp
js
imul
test
inc
inc
fs
das
dec
or
inc
pushw
adc
jmp
ins
imul
cmp
(bad)
push
inc
jmp
je
jbe
pop
pop
adc
mov
xchg
out
mov
xchg
pop
ror
(bad)
dec
inc
push
icebp
add
out
adc
add
test
outs
fwait
push
jl
pop
jae
jnp
div
sbb
addr16
jae
jbe
mov
sub
xor
xor
inc
gs
push
fdivr
ret
imul
add
ins
and
dec
cwde
cli
push
mov
add
sub
mov
push
pop
xor
ds
call
mov
pop
and
call
jae
call
mov
(bad)
mov
adc
ins
cld
cmovno
mov
jb
mov
and
(bad)
(bad)
cmp
out
push
mov
mov
pop
pop
out
ror
add
mul
xor
cmp
pusha
mov
inc
mov
aad
aad
pushf
xchg
mov
scas
fidiv
cmp
inc
div
pusha
mov
jle
popa
add
xchg
out
or
or
jo
data16
ja
retf
and
call
mov
mov
pop
imul
inc
aas
pop
mov
outs
mov
stos
inc
mov
cmp
loopne
sahf
mov
xchg
inc
(bad)
and
(bad)
call
push
pushf
sub
mov
sub
std
push
xchg
push
adc
dec
dec
pop
outs
mov
cmp
mov
pusha
mov
push
rol
imul
sub
iret
dec
pop
mov
pop
jg
add
dec
outs
adc
or
imul
call
pop
neg
out
mov
push
push
cmp
iret
cs
div
xor
mov
js
jmp
or
(bad)
sub
inc
inc
jmp
out
fiadd
add
mov
retf
mov
scas
mov
inc
test
add
pop
imul
mov
and
jle
(bad)
bound
(bad)
loopne
aad
retf
test
scas
jl
cmp
in
sti
pop
shl
inc
sar
xor
or
in
mov
into
cmp
jg
inc
sbb
jp
loop
push
out
add
aam
or
retf
dec
pusha
add
cwde
(bad)
sbb
psllq
mov
xor
add
sbb
retf
mov
jb
je
pop
mov
and
je
bound
and
mov
clc
mov
into
pop
dec
push
jl
jl
jae
push
jg
or
dec
xchg
cmp
adc
sub
(bad)
push
inc
push
pop
imul
inc
add
mov
call
mov
cmps
ret
add
iret
pop
pop
dec
dec
mov
add
sub
adc
test
in
and
je
pop
push
jmp
mov
pop
xor
pop
inc
jmp
test
not
and
cs
jno
adc
inc
xlat
gs
ret
fwait
jo
add
mov
mov
dec
mov
adc
call
mov
pop
add
movs
je
xor
movs
and
call
enter
inc
pusha
xor
add
add
loop
push
push
mov
xor
jns
jmp
enter
push
jb
xchg
add
pusha
inc
ja
push
cwde
(bad)
jge
add
mov
fdivr
aaa
pop
xor
push
sti
jae
pop
add
and
data16
clc
outs
or
push
push
jmp
push
adc
or
mov
push
mov
cwde
jb
test
add
rol
dec
dec
mov
clc
aas
outs
jg
ret
hlt
add
push
out
hlt
fdiv
mov
mov
fs
fwait
jg
stos
add
mov
xor
sar
jmp
push
pop
popa
loop
mov
cmp
xor
xlat
jg
sbb
movnti
movd
cmp
je
push
jmp
mov
inc
loop
ins
in
or
icebp
std
jecxz
scas
fidiv
out
push
jmp
mov
test
mov
data16
out
or
aaa
add
xor
cmp
adc
xor
fdiv
adc
inc
daa
cld
or
inc
xor
mov
inc
mov
adc
repnz
mov
test
lock
and
push
sub
dec
pop
vorps
mov
cvtpi2ps
push
inc
shr
or
jno
movs
mov
fmul
movs
jo
pop
jl
leave
ficomp
rcl
mov
push
cli
mov
add
push
aas
inc
aaa
or
xor
mov
inc
jge
xor
xor
repnz
or
rcl
pop
lock
outs
inc
xchg
pop
xor
mov
sbb
cmp
inc
and
push
pusha
xchg
mov
loopne
push
(bad)
sti
out
add
addr16
mov
imul
dec
jmp
pop
neg
add
std
shl
mov
das
sbb
gs
(bad)
enter
push
add
hlt
xchg
gs
cmp
retf
sbb
ds
ret
ins
mov
movs
add
or
fild
into
push
jmp
xor
dec
(bad)
pop
cmp
mov
imul
and
clc
movs
es
in
inc
outs
js
adc
push
mov
nop
push
push
ja
dec
pop
mov
jecxz
push
std
(bad)
aam
jo
das
pop
fs
xchg
in
lahf
or
out
inc
add
mov
js
push
or
movs
in
(bad)
aas
in
xor
aad
add
jge
stos
push
pop
jne
shr
or
or
xor
mov
dec
mov
aas
inc
jno
mov
pop
out
inc
push
add
cmp
pop
jmp
aam
pop
mov
clc
ja
xchg
inc
add
xchg
test
push
pushf
push
dec
mov
lea
add
fild
add
add
inc
rcr
jb
cdq
mov
add
push
and
and
out
gs
lock
sub
add
mov
add
push
out
or
mov
ret
push
cmps
mov
(bad)
clc
push
push
jb
adc
lods
add
mov
fmul
inc
imul
mov
test
push
add
mov
and
xchg
or
out
mov
fistp
push
jecxz
icebp
xor
(bad)
push
and
inc
ror
cmp
xlat
mov
mov
mov
push
mov
loop
pop
push
sub
loopne
jmp
jnp
mov
inc
add
sub
push
ins
mov
sti
pop
pop
into
xor
ret
mov
fcmovnu
add
mov
test
arpl
addr16
push
sbb
dec
test
mov
push
push
xor
out
add
add
push
sbb
pop
jl
arpl
add
pop
push
ret
adc
out
pusha
test
and
sbb
xor
xor
xchg
cmovo
(bad)
inc
data16
and
sar
(bad)
mov
inc
cli
adc
jno
mov
and
pop
test
shr
push
push
push
inc
add
cli
adc
popa
jmp
or
imul
(bad)
jl
inc
mov
xchg
add
or
inc
sub
inc
bound
adc
cmp
push
stos
out
call
sbb
or
jmp
sub
aas
xchg
hlt
inc
add
shl
call
mov
sbb
inc
cmp
or
push
cld
ret
dec
fs
dec
adc
dec
nop
add
mov
clc
push
ret
inc
inc
mov
push
sbb
add
addr16
pop
(bad)
out
es
call
rcl
mov
mov
std
test
or
push
test
mov
push
jecxz
not
push
out
bound
jp
pop
xor
or
pusha
and
sbb
scas
out
je
mov
jae
xchg
dec
sbb
aas
aas
dec
scas
jnp
xor
sar
(bad)
jmp
jl
fdiv
addr16
das
sub
xor
cld
ret
pop
jg
dec
aaa
hlt
inc
in
mov
inc
outs
xchg
adc
loopne
(bad)
push
add
and
icebp
inc
call
sbb
in
mov
xchg
pop
(bad)
push
mov
jo
dec
lock
mov
push
sub
rcl
xchg
(bad)
sti
xor
outs
xor
lds
push
inc
pop
ror
push
loope
cdq
imul
add
sub
inc
pop
inc
jg
cwde
jo
stc
outs
push
sti
adc
adc
mov
sti
int
add
enter
stos
dec
std
xchg
pop
andnps
push
imul
std
mov
fs
in
sbb
lock
lods
aad
mov
rcl
not
pop
das
mov
push
cmp
xor
pushf
push
xor
cmp
cmps
in
cmp
or
sar
outs
ret
stos
in
ror
test
fs
sbb
xor
out
inc
mov
jns
test
je
(bad)
push
ret
jg
and
fidiv
das
movs
mov
(bad)
cld
add
stos
(bad)
jb
or
(bad)
call
xlat
xor
mov
push
imul
push
std
movsx
dec
ja
sbb
lock
adc
adc
repz
and
aas
je
cdq
stos
out
les
mov
push
cwde
aam
mov
sbb
add
not
or
cli
jnp
lahf
mov
jecxz
das
push
add
adc
cwde
ror
inc
pop
test
movs
repz
inc
mov
push
inc
pusha
inc
jp
cmp
inc
mov
xchg
cmp
pop
xor
cli
or
cmp
sub
std
sub
xchg
imul
push
add
(bad)
aaa
sar
cmc
dec
pop
and
push
iret
lea
in
(bad)
aad
imul
xchg
icebp
or
das
dec
aam
das
dec
jmp
rcr
call
sbb
out
(bad)
jnp
vunpcklpd
cmp
and
add
pop
ss
loopne
std
fcomip
arpl
mov
or
icebp
bound
lods
add
push
cli
movs
std
or
movs
es
xchg
inc
jg
adc
mov
data16
sbb
rol
push
adc
mov
dec
push
mov
outs
dec
or
imul
rol
fmul
ja
pusha
and
inc
sbb
jo
jnp
loope
push
mov
fidiv
mov
ds
jmp
add
jg
inc
jmp
into
ins
ins
ror
into
mov
out
pop
ret
inc
retf
fcom
out
mov
push
add
jmp
pop
add
mov
push
lahf
xor
sub
gs
das
mov
mov
jnp
sbb
cmps
es
les
test
pop
push
aas
dec
mov
pop
out
fucomp
lods
inc
jmp
clc
std
jns
out
push
inc
sti
push
mov
ss
out
mov
arpl
in
xor
add
pop
addr16
clc
rol
and
xor
or
jo
sbb
out
outs
mov
ror
loopne
pop
inc
cmps
sahf
inc
mov
mov
push
bound
cmp
stc
mov
lahf
adc
cmp
and
inc
or
sti
dec
fld
cmp
xchg
(bad)
daa
mov
or
jo
(bad)
jg
sub
jo
ror
dec
outs
xchg
dec
(bad)
icebp
mov
cmp
push
std
add
icebp
adc
dec
inc
pop
mov
add
mov
push
push
xor
pop
jmp
aas
pop
ret
cs
sti
cmps
repz
xchg
mov
mov
lock
pop
adc
outs
jp
mov
mov
push
cmp
add
or
push
push
and
add
fst
jmp
jne
jmp
dec
add
fs
(bad)
int
dec
das
mov
xor
in
stos
aam
add
or
rol
rcl
push
mov
xchg
sub
mov
lock
or
fdivr
mov
inc
xor
adc
into
aam
sbb
sti
inc
mov
out
out
jmp
cli
add
js
pop
jmp
aaa
repz
lahf
loop
dec
jge
jecxz
add
psubq
adc
in
inc
cmps
ret
je
xchg
icebp
pop
mov
out
ins
mov
push
or
inc
call
dec
dec
(bad)
mov
xchg
mov
outs
inc
push
adc
add
cmc
test
sbb
sti
arpl
inc
mov
and
outs
lods
mov
jmp
out
and
cmp
adc
pop
push
pcmpgtw
ds
sub
pop
nop
jg
ret
mov
jmp
(bad)
pop
jmp
add
add
cli
lea
jmp
mov
mov
aad
pop
ret
jno
push
jle
mov
inc
inc
loopne
out
mov
fistp
ret
pop
sub
inc
cli
mov
mov
xor
mov
mov
inc
and
jg
sub
or
and
inc
mov
out
jo
mov
mov
inc
dec
lds
stc
retf
sbb
mov
stos
or
mov
inc
adc
push
xor
ret
in
xchg
loopne
mov
fs
jp
inc
cmp
dec
dec
daa
(bad)
inc
sub
push
adc
gs
js
push
int3
push
inc
push
xor
mov
add
mov
cmp
loope
pop
lods
mov
inc
add
in
inc
repz
clc
(bad)
in
add
pop
(bad)
pushf
inc
sub
mov
lahf
mov
dec
not
jg
dec
pop
jns
shl
jmp
dec
xchg
imul
jo
mov
inc
dec
(bad)
in
push
xchg
lds
or
call
(bad)
loope
or
imul
sahf
jmp
aas
repz
adc
mov
ss
push
inc
push
loopne
and
clc
test
mov
icebp
test
fnstenv
nop
push
outs
jmp
inc
jne
out
clc
add
or
cld
ret
inc
or
mov
add
mov
mov
pop
xor
mov
sub
inc
push
(bad)
mov
inc
jo
jo
stos
pop
pop
out
mov
imul
(bad)
mov
push
jno
pop
neg
gs
add
push
and
test
push
loope
sahf
xchg
arpl
icebp
mov
dec
(bad)
data16
push
push
jo
push
in
out
outs
(bad)
xchg
aam
dec
ror
mov
dec
(bad)
dec
shl
lods
inc
add
add
out
inc
add
mov
jp
neg
sbb
shr
rcr
jecxz
sar
inc
lods
add
out
add
imul
cmp
lods
dec
mov
jnp
fwait
dec
arpl
cmp
dec
add
pop
and
or
enter
jge
stos
or
inc
ret
dec
rol
mov
sub
ret
cmp
inc
ja
ret
rcr
push
and
rol
mov
sub
pop
pop
adc
push
mov
sub
shl
cmp
js
cs
push
add
pop
xor
push
or
fadd
push
push
xchg
sbb
push
mov
push
jecxz
mov
xor
sar
inc
mov
or
das
push
inc
arpl
cmc
and
xor
mov
cli
(bad)
sbb
inc
ret
into
rcr
jg
lds
add
aas
lahf
(bad)
out
(bad)
adc
xchg
inc
pop
mov
test
add
test
aaa
or
push
cld
mov
jmp
ret
stc
shl
add
lock
cmps
inc
sbb
fiadd
pop
dec
sub
out
scas
dec
xor
push
add
and
icebp
idiv
sbb
jbe
xor
pusha
adc
add
jg
add
mov
pusha
push
pusha
xor
add
call
push
cmp
ins
dec
js
jg
ud1
push
pop
inc
add
xchg
ret
push
(bad)
inc
jle
mov
out
shr
or
inc
es
jg
ret
stc
xlat
jno
out
pop
mov
cmp
push
mov
pop
out
add
sbb
xchg
push
or
add
xor
cs
push
jmp
jl
mov
ret
sub
add
mov
lds
mov
pop
sub
xchg
lds
loope
pusha
inc
in
add
mov
push
aas
add
push
fbstp
inc
and
dec
cmc
adc
cmps
in
xchg
inc
and
and
dec
je
sahf
sti
ret
pop
jl
inc
mov
inc
or
mov
inc
mov
adc
dec
mov
sub
adc
or
xchg
mov
fwait
and
sbb
xor
loope
jnp
mov
retf
aas
fs
mov
lahf
inc
fild
pop
adc
test
pop
arpl
bound
jp
jecxz
dec
adc
stc
mov
in
adc
xchg
ret
and
fs
mov
sbb
push
pop
out
ins
cld
mov
out
imul
mov
adc
or
jle
jl
inc
adc
sub
bound
(bad)
dec
mov
pusha
dec
sub
jae
rcl
(bad)
push
xor
pop
jp
pop
es
lea
mov
jmp
adc
int3
repz
dec
adc
jmp
leave
fcom
fcom
inc
add
push
pop
lock
inc
push
arpl
dec
add
or
ret
dec
in
data16
add
sub
inc
inc
push
jo
rcr
cs
mov
les
add
scas
push
call
jbe
hlt
gs
fistp
(bad)
addr16
out
xlat
test
cld
xlat
add
push
jg
pop
mov
cwde
sbb
test
adc
dec
aam
dec
inc
pop
add
mov
imul
and
inc
push
xchg
add
and
mov
push
pop
(bad)
cmc
out
jg
push
sbb
imul
arpl
je
sbb
mov
push
mov
es
dec
xor
sub
push
adc
sti
push
push
pusha
enter
mov
mov
jo
push
sahf
out
mov
jbe
sub
mov
jmp
outs
and
(bad)
(bad)
rol
std
push
pusha
add
imul
and
mov
adc
or
jae
mov
add
fs
scas
clc
add
jg
push
call
enter
dec
dec
push
pop
jo
jmp
or
cmps
inc
jmp
daa
or
cmp
and
push
xchg
xchg
cli
jg
icebp
push
dec
(bad)
sti
pop
aas
inc
or
add
mov
adc
out
ds
adc
pop
or
std
leave
and
outs
mov
jg
rol
out
scas
push
jg
mov
inc
ror
repnz
fcmovnu
in
xor
add
inc
cs
pop
push
fist
adc
xor
dec
add
push
mov
or
push
aam
fcmovb
dec
ins
or
xchg
sub
xchg
ss
jmp
jbe
inc
add
jl
jmp
adc
inc
cmp
ins
add
(bad)
dec
ins
sbb
xchg
push
dec
or
mov
cmp
sbb
test
sar
rcr
stos
pusha
pop
xchg
add
inc
inc
inc
and
inc
pop
xchg
out
out
add
jne
ins
pop
jo
mov
push
cmp
push
test
outs
fcmovu
mov
jg
shl
repz
loop
or
lock
push
pop
std
ss
adc
sbb
ror
xlat
pop
mov
dec
std
sub
repnz
arpl
dec
mov
adc
pop
and
or
xchg
or
bnd
mov
add
mov
or
dec
add
outs
or
mov
call
xchg
hlt
pcmpeqb
dec
mul
loop
adc
loopne
push
out
(bad)
mov
(bad)
dec
jmp
ja
out
cmp
out
sub
mov
cmc
sbb
(bad)
xor
arpl
ret
pop
test
das
std
sub
xchg
adc
add
outs
push
sar
sar
inc
jb
rol
sar
scas
js
mov
lahf
and
pop
imul
mov
pop
arpl
adc
sub
adc
jl
mov
cs
rcr
dec
push
lods
dec
(bad)
sub
jge
cdq
shl
xchg
xrelease
pusha
pop
fild
xlat
(bad)
das
scas
nop
xor
cld
add
pop
xchg
adc
inc
or
mov
and
pop
jo
clc
jmp
imul
and
mov
les
add
push
clc
and
test
xchg
ret
or
sub
sti
xchg
scas
inc
adc
clc
xchg
imul
mov
jg
or
inc
repz
ins
inc
inc
out
sbb
repz
sar
dec
jle
or
mov
xor
leave
repnz
mov
dec
imul
mov
mov
ss
or
dec
add
je
sti
test
cmc
(bad)
inc
aas
jg
jo
movs
mov
dec
mov
inc
jmp
ss
add
outs
inc
pop
sbb
out
lods
jb
xchg
inc
jmp
inc
inc
inc
into
nop
cld
cmp
test
pop
call
fidiv
clc
jno
sbb
arpl
cmp
add
push
test
jmp
aas
pop
push
xor
test
(bad)
add
jle
push
cmp
(bad)
aas
cld
xchg
pusha
add
retf
int
call
(bad)
mov
aas
dec
mov
add
add
setnp
mov
pop
add
cdq
imul
dec
pop
push
aad
gs
fisubr
inc
mov
dec
std
dec
addr16
das
or
pop
test
cld
pop
inc
add
add
call
jmp
xchg
or
sti
jl
retf
dec
repnz
push
pop
loopne
push
enter
sub
ret
rol
sub
repz
imul
idiv
mov
pop
sti
xchg
iret
xor
repz
sub
sti
dec
dec
push
pop
mov
lds
fdivr
pop
cmp
dec
xchg
xor
nop
sub
cmp
or
(bad)
xchg
inc
sbb
pop
sub
inc
mov
cmps
(bad)
call
or
add
push
in
call
scas
(bad)
rol
sahf
stos
cmc
xchg
mov
gs
or
xchg
jle
sahf
inc
pop
pop
push
pusha
fnstcw
or
mov
pop
inc
xlat
mov
pop
fs
mov
mov
test
sti
pop
(bad)
and
test
inc
add
inc
jecxz
mov
or
movs
add
sbb
or
add
test
lock
test
cmp
mov
adc
rol
xchg
mov
add
pop
jno
mov
add
add
outs
loopne
inc
push
sub
dec
ret
xchg
mov
ret
call
mov
pop
inc
inc
les
sub
xchg
and
push
pop
movs
adc
sbb
sbb
push
xchg
push
loope
cmp
xor
je
out
mov
imul
inc
fcom
xor
inc
pop
jae
icebp
mov
push
adc
es
enter
push
mov
add
mov
inc
leave
push
mov
jg
ret
gs
cli
jmp
inc
push
or
add
jp
mov
or
mov
aas
cmp
enter
push
inc
cmps
lea
pop
adc
test
movs
lahf
or
nop
sbb
fs
iret
pop
pop
dec
inc
inc
or
add
push
push
pusha
lock
mov
sub
adc
imul
push
inc
inc
xor
add
lods
cdq
xchg
jmp
xor
add
int3
fs
movs
and
dec
(bad)
mov
mov
mov
sahf
ret
inc
inc
ss
in
xchg
(bad)
mov
js
and
arpl
inc
jae
out
add
or
jg
mov
xor
or
bound
or
and
add
stos
faddp
push
xor
add
push
adc
push
pop
cmps
jno
mov
sahf
mov
jmp
inc
repz
sar
pusha
aas
dec
out
paddd
mov
mov
rcl
jno
sub
test
jbe
add
xor
fadd
bound
call
mov
fcomip
inc
out
aam
xlat
out
sub
fsub
arpl
add
mov
scas
push
shl
in
jl
and
mov
sbb
sbb
inc
pop
push
add
inc
jmp
jbe
das
mov
ins
mov
push
adc
add
mov
mov
jecxz
add
mov
xor
xor
scas
aad
jbe
out
call
push
loop
xchg
inc
into
sti
jmp
ins
adc
(bad)
dec
pop
xor
mov
call
cli
push
rol
xchg
push
retf
aad
mov
sub
push
mov
icebp
inc
pop
cld
push
(bad)
jle
jecxz
xchg
pop
pop
push
push
cmp
dec
push
outs
inc
pop
adc
sbb
mov
ss
or
pop
sar
or
mov
into
inc
dec
inc
jnp
push
add
xor
loopne
addr16
cmp
dec
pop
push
mov
adc
nop
and
mov
daa
lea
push
xchg
lahf
call
dec
pop
push
inc
and
add
aaa
test
inc
out
add
jl
and
lds
lea
std
shl
sahf
dec
add
mov
iret
push
mov
in
jle
ds
sbb
(bad)
sbb
and
cmp
and
loope
mov
push
mov
out
aad
sub
sbb
push
stos
sub
lock
icebp
mov
inc
imul
mov
or
pop
ss
lock
dec
inc
jl
push
mov
clc
mov
mov
inc
clc
aaa
and
xchg
int3
mov
mov
push
and
and
inc
pop
or
cwde
push
shl
inc
sti
arpl
cmp
aam
mov
push
xchg
cmps
inc
out
xor
mov
dec
cmps
pop
xor
fld
arpl
scas
xchg
icebp
outs
adc
jb
push
dec
xor
push
in
(bad)
mov
(bad)
outs
das
ror
jns
addr16
or
(bad)
pusha
fiadd
sub
outs
inc
mov
(bad)
xor
xchg
xor
inc
push
mov
mov
call
push
sub
push
lds
jecxz
add
cs
repz
pop
iret
mov
shl
xor
mov
sub
push
test
mov
cdq
sub
dec
jne
pop
loop
jmp
mov
addr16
push
inc
outs
mov
scas
stos
(bad)
inc
fcomi
lods
nop
ret
bound
nop
(bad)
pop
mov
add
out
pop
jae
sub
jge
sub
push
inc
lahf
std
(bad)
mov
out
or
jl
jnp
fild
adc
loop
dec
pop
(bad)
mov
dec
je
iret
add
mov
or
and
jg
arpl
imul
jbe
push
stos
push
xor
aad
js
mov
push
mov
or
jne
inc
rcr
call
aas
push
dec
(bad)
or
jl
je
lea
and
or
dec
cmp
push
div
xor
std
and
xlat
dec
sub
mov
add
jb
stc
jns
rcr
adc
pusha
xchg
cmp
jb
fdiv
mov
repz
ret
dec
adc
mov
cwde
mov
or
add
add
add
(bad)
pop
add
outs
retf
aam
aas
adc
mov
test
mov
fs
inc
loop
test
repnz
add
imul
mov
inc
cmps
or
push
add
add
retf
jle
dec
cld
jnp
inc
inc
ret
ror
push
sub
jbe
ret
addr16
add
sub
adc
les
sbb
mov
or
push
call
and
addr16
ins
fs
fs
aas
out
mov
mov
add
fs
inc
dec
mov
shr
add
add
adc
xchg
jmp
push
in
sub
data16
sbb
inc
enter
and
aas
sub
mov
cs
adc
jbe
or
test
xor
scas
int3
dec
push
add
xchg
sti
dec
push
gs
ret
inc
and
push
test
mov
call
out
inc
or
push
push
lds
ret
jl
shl
dec
push
int3
mov
pop
fsubr
jo
or
add
push
ret
js
repz
out
test
(bad)
ins
inc
data16
mov
and
and
(bad)
pop
out
aas
retf
test
cmps
adc
out
mov
pop
adc
aas
push
dec
pop
push
clc
mov
std
adc
pop
adc
sbb
loopne
call
jae
and
sub
cmp
cmp
push
jg
cli
jmp
add
(bad)
and
adc
adc
xchg
sub
inc
mov
push
shl
test
dec
imul
pop
add
nop
push
sub
cmps
or
cli
rep
cmps
mov
sbb
mov
xor
add
mov
mov
jb
ret
loopne
call
(bad)
or
dec
xchg
xchg
mov
inc
inc
and
mov
add
push
dec
pop
stos
inc
loope
out
pop
jmp
xchg
in
test
mov
and
ret
pop
adc
and
mov
dec
pop
mov
or
mov
mov
xor
xor
stos
ret
sti
mov
mov
js
not
scas
push
test
(bad)
imul
sbb
mov
dec
(bad)
mov
ss
gs
out
ficomp
cmp
std
imul
adc
lods
out
test
pop
aam
jnp
or
call
dec
inc
and
sub
ja
test
out
das
add
ret
mov
(bad)
lods
shl
sbb
sbb
dec
sbb
rcr
dec
xlat
mov
push
inc
ins
mov
mov
out
xor
and
adc
push
mov
inc
stos
call
jp
pop
adc
inc
or
mov
ins
xor
pop
test
and
mov
ss
jae
add
ror
rol
sbb
mov
(bad)
lahf
sti
(bad)
je
add
push
fs
ja
inc
repz
test
jmp
ret
mov
xlat
sub
inc
cmp
push
cmc
mov
mov
xchg
xor
push
repz
mov
in
and
jmp
fnstenv
out
scas
popf
xchg
fidiv
lods
pop
jg
dec
clc
adc
mov
dec
cmp
mov
mov
push
push
sbb
cmp
out
dec
enter
pop
add
lods
pop
and
push
test
and
retf
sub
and
aam
outs
test
and
cmp
out
mov
and
(bad)
sub
pop
and
jmp
fsub
call
push
jbe
mov
mov
call
jmp
pushf
adc
pop
jo
jo
in
shr
xchg
and
pop
push
bound
xchg
pop
add
hlt
push
mov
mov
jb
or
inc
add
inc
mov
sbb
mov
or
je
jae
pop
add
add
dec
ret
test
(bad)
and
push
sbb
jg
xor
inc
(bad)
icebp
outs
push
clc
cwde
pop
icebp
push
or
sbb
ja
cmp
add
push
ret
pop
and
lahf
sbb
cmp
pop
push
push
jle
mov
in
data16
inc
ins
push
out
ret
add
adc
fadd
aam
push
pop
xor
push
nop
or
mov
loop
(bad)
push
mov
cld
push
(bad)
pop
sub
jl
pushf
and
(bad)
in
ja
push
push
xlat
ja
outs
dec
mov
enter
adc
add
xor
lods
ror
adc
fs
mov
fbstp
arpl
fsubp
pusha
add
iret
into
push
loop
push
adc
sti
jmp
add
mov
je
jmp
dec
or
xor
popf
dec
int
outs
sbb
mov
mov
int3
add
xor
test
push
aas
shr
add
pextrw
adc
popa
sbb
test
push
xchg
out
outs
es
xchg
cdq
add
stos
jnp
pusha
cmp
inc
cli
das
cmps
jo
add
out
dec
ret
add
int
rol
loopne
jmp
push
mul
dec
cs
mov
and
push
je
cmc
mov
retf
ud0
je
ja
jp
daa
loopne
mov
push
jb
out
mov
clc
and
(bad)
add
adc
sbb
jo
pop
movs
sahf
arpl
mov
dec
pop
jo
cld
adc
add
movs
outs
xlat
or
adc
popa
daa
lods
push
gs
fcomp
hlt
gs
ds
mov
ret
(bad)
(bad)
pop
add
inc
(bad)
ds
aad
add
ins
jmp
push
push
jecxz
pop
pop
mov
test
sub
xchg
test
adc
inc
and
pop
mov
fild
neg
jecxz
pop
mov
push
std
add
mul
push
pusha
inc
es
xor
jnp
dec
(bad)
out
ret
mov
add
dec
out
adc
xchg
bound
mov
sbb
and
stos
inc
sti
(bad)
fcomip
(bad)
sti
outs
arpl
push
mov
jp
outs
call
add
clc
not
test
cmps
aaa
aaa
or
mov
push
add
cld
mov
add
sbb
and
or
fiadd
rol
scas
mov
push
pop
dec
mov
sbb
minps
gs
sar
pop
inc
pop
clc
jl
inc
test
loop
dec
mov
mov
shl
fs
mov
das
int
call
out
into
push
cli
je
xor
aad
mov
cmp
dec
outs
imul
outs
out
xor
arpl
pop
lods
das
(bad)
dec
sbb
ret
jae
adc
push
loope
add
pop
cmp
pop
pop
arpl
int
mov
pop
cld
retf
cmp
or
(bad)
in
mov
ret
(bad)
xchg
scas
inc
xor
mov
jmp
cmps
mov
pop
or
sub
push
ss
add
inc
push
jbe
add
rcr
ret
pop
pop
push
jl
or
ret
adc
std
in
inc
push
loope
mov
loop
je
dec
xor
clc
dec
gs
inc
mov
fsubr
mov
cmp
or
add
cdq
mov
xchg
mov
mov
and
add
out
mov
xchg
xor
xchg
inc
mov
adc
call
mov
test
or
mov
test
push
push
(bad)
jmp
ja
adc
std
inc
sti
ret
adc
mov
fdivp
adc
and
inc
or
mov
or
xchg
mov
inc
test
das
pop
jg
inc
dec
push
mov
xor
inc
cmps
popw
ror
les
xor
jmp
fist
add
shr
or
dec
mov
cmp
xor
and
div
cld
pushf
sbb
mov
jae
add
add
mov
sub
sbb
push
jmp
mov
mov
pop
dec
jne
dec
mov
pop
test
enter
xchg
jne
cmp
inc
sbb
test
xchg
clc
mov
xor
add
les
ret
jl
inc
mov
in
mov
push
out
mov
enter
mov
xchg
ret
jg
test
das
test
sar
cmovb
inc
scas
jo
push
sbb
std
imul
stos
loop
pop
scas
loopne
scas
mov
out
out
(bad)
rcl
and
lds
into
imul
xor
iret
fild
imul
ror
arpl
jno
dec
mov
je
cmp
aas
inc
out
sub
inc
mov
mov
push
add
mov
adc
imul
ss
cmp
add
push
jl
add
dec
mov
mul
fs
outs
add
inc
sub
mov
mov
call
pusha
push
dec
mov
and
iret
mov
mov
mov
sti
std
sbb
xchg
push
arpl
inc
in
fisubr
int3
loop
jg
out
and
mov
(bad)
out
push
sub
idiv
or
fistp
mov
add
adc
inc
sub
cld
das
ret
mov
test
jno
ret
fcmovnb
fiadd
and
cld
mov
ins
add
pop
pop
jp
std
out
rcl
pop
daa
(bad)
push
or
ins
push
jmp
sub
mov
xchg
das
test
push
je
(bad)
sbb
rcl
jae
mov
pop
test
out
push
push
(bad)
jl
jae
add
dec
inc
mov
(bad)
aas
mov
call
and
test
and
mov
outs
pusha
and
mov
jb
retf
jl
dec
add
adc
shl
imul
inc
push
lods
adc
push
push
dec
retf
push
dec
(bad)
jmp
ins
aad
mov
mov
xor
jecxz
mov
inc
mov
jbe
jmp
dec
pop
shl
sbb
mov
pop
imul
sub
cli
or
js
mov
mov
loope
hlt
mov
cmps
xlat
ds
or
mov
idiv
inc
sti
dec
scas
inc
in
jge
or
add
aad
ins
pop
inc
cld
mov
out
leave
pop
sub
add
pop
mov
xor
pop
ss
call
sar
xor
shl
mov
mov
jae
sub
inc
inc
jmp
mov
or
(bad)
call
sbb
loop
mov
pop
push
aas
xchg
mov
std
psubusw
xchg
and
je
shl
int3
xor
lock
and
and
jno
add
mov
adc
pop
sbb
inc
call
sti
adc
jbe
outs
in
rol
int3
cmp
pop
add
mov
adc
or
and
stos
add
ret
aam
or
pusha
mov
add
mov
add
pop
xor
add
or
rol
dec
dec
cli
dec
jmp
fcomi
inc
inc
sub
es
add
enter
and
mov
cld
xchg
inc
dec
inc
outs
in
lock
pop
jmp
rsm
or
cmp
lock
call
pusha
xchg
cmp
mov
(bad)
mov
pop
or
sub
and
mov
push
aaa
push
adc
popa
mov
mov
(bad)
inc
push
xor
movntq
out
mov
xor
jmp
ret
fs
mov
or
add
adc
inc
sar
push
dec
jno
es
bound
or
inc
out
repnz
inc
add
xor
inc
idiv
add
mov
pop
cmc
sar
pop
in
jmp
push
je
mov
cmp
add
push
mov
(bad)
stos
les
xchg
inc
neg
(bad)
aas
out
xor
sub
(bad)
test
jmp
dec
cwde
std
mov
mov
push
add
call
cld
mov
add
inc
inc
or
ret
ja
mov
mov
push
retf
ret
loop
ret
bound
adc
dec
out
add
aaa
movs
dec
dec
hlt
pop
or
std
je
push
ret
sti
lods
mov
nop
out
retf
xchg
push
adc
sub
push
jmp
add
inc
push
pop
or
jae
aam
jmp
xor
cs
sub
add
clc
sahf
pop
inc
jae
aas
add
add
inc
cli
outs
test
fcom
(bad)
adc
push
dec
ja
pop
aaa
mov
sbb
xchg
push
jle
mov
out
rol
sub
(bad)
out
pop
mov
mov
inc
mov
cld
push
jb
retf
adc
sub
nop
jle
xor
hlt
lock
dec
outs
sbb
daa
jecxz
sti
mov
lock
mov
xchg
(bad)
push
pusha
daa
xor
rcl
mov
or
push
adc
(bad)
or
push
loope
push
and
inc
(bad)
aam
mov
jae
adc
aaa
daa
and
gs
enter
add
cmps
inc
sub
mov
jae
mov
into
das
aaa
mov
cld
mov
and
inc
push
and
sti
push
das
test
jmp
cmp
jmp
icebp
or
add
push
inc
inc
adc
add
and
dec
pop
imul
sub
cmp
hlt
(bad)
inc
push
add
aas
jl
add
inc
mul
jmp
dec
pop
pop
(bad)
pop
jp
and
mov
(bad)
xchg
inc
mov
jmp
fmul
and
ds
mov
add
rcr
jg
cli
cld
mov
sahf
pusha
out
xor
mov
test
das
xor
jg
or
mov
inc
fwait
adc
(bad)
loope
out
dec
xor
ret
clc
ret
dec
add
add
dec
(bad)
push
jmp
push
loop
or
push
mov
ins
add
call
and
call
pop
xor
mov
adc
or
(bad)
mov
xchg
push
cmp
push
xchg
out
mov
shl
fs
mov
xor
xor
sub
clc
retf
add
xchg
xchg
data16
std
inc
retf
shr
or
movs
mov
mov
jae
add
(bad)
cld
sar
xchg
out
lds
and
add
(bad)
jg
repz
push
jl
mov
xor
pop
jmp
out
jmp
add
cli
data16
sti
push
mov
add
add
pop
aas
into
add
push
jo
jmp
(bad)
cmp
sbb
xchg
or
out
mov
das
mov
icebp
sbb
xor
je
outs
push
push
mov
jbe
jg
lock
pop
mov
push
pop
sti
jl
imul
jne
cli
sar
cld
cmp
fisubr
lods
pop
inc
sub
(bad)
daa
dec
int3
push
hlt
push
mov
clc
lock
jnp
(bad)
les
loopne
mov
inc
fisubr
aas
cmps
rcl
retf
inc
push
mov
add
inc
ins
mov
push
data16
mov
pop
sub
test
sar
pop
ins
aas
jae
sub
std
inc
dec
outs
jle
cmp
jne
(bad)
cmp
jae
rol
jbe
das
cdq
cmp
pop
mov
add
mov
repnz
movs
arpl
pop
mov
inc
imul
adc
not
mov
and
adc
cmp
xor
push
cwde
push
lds
shl
sub
or
xor
into
(bad)
mov
retf
dec
out
jmp
xlat
ror
ins
jmp
out
aas
adc
movs
mov
jg
cld
xchg
loopne
pop
push
imul
lock
mov
jae
clc
push
std
mov
sti
ins
out
mov
mov
pop
neg
rol
fs
ins
cld
pop
or
(bad)
in
or
movs
push
mov
xor
push
lock
jo
mov
sti
xor
sub
clc
jmp
inc
aad
ss
das
mov
jmp
mov
or
das
or
out
xchg
test
outs
mov
sub
jg
push
pop
(bad)
fadd
arpl
xchg
sbb
cli
inc
or
sub
pop
sbb
xchg
mov
mov
jmp
mov
ror
xchg
movs
jg
jbe
dec
inc
jg
pop
fild
jg
stos
mov
stc
out
push
div
lods
mov
cld
out
lods
inc
pop
fucomip
(bad)
bound
out
pop
jmp
pop
inc
and
clc
pop
test
push
push
cwde
call
jle
push
xor
dec
cvtps2pi
(bad)
outs
adc
ins
jmp
ja
or
je
pop
inc
pop
jo
lock
sti
popa
dec
mov
repz
pusha
sub
pop
inc
idiv
and
mov
test
mov
inc
xor
xor
outs
push
cmp
push
jae
(bad)
push
sar
push
xor
push
dec
adc
cs
mov
idiv
ja
sbb
inc
sti
imul
xchg
and
jmp
loope
push
mov
out
aad
dec
sub
inc
fcmovbe
out
mov
inc
and
lods
or
mov
add
adc
movs
call
gs
jno
inc
pop
pop
test
fwait
dec
push
(bad)
mov
das
adc
loop
bound
out
rcl
(bad)
jg
outs
gs
push
movs
aas
cmp
push
adc
push
add
xlat
pop
mov
fisttp
pop
test
jmp
ja
add
fs
test
les
add
mov
pop
test
adc
movs
add
leave
fidivr
mov
mov
lds
mov
sbb
aas
push
pop
add
add
inc
loopne
mov
std
aas
clc
xor
(bad)
das
mov
xchg
mov
ret
adc
inc
pop
mov
push
cmp
add
mov
push
lods
jae
hlt
jmp
inc
mov
jbe
div
addr16
add
adc
push
(bad)
mov
dec
call
(bad)
adc
js
(bad)
dec
add
jnp
emms
dec
pop
cmc
sti
movs
mov
scas
enter
add
ret
gs
jno
add
mov
add
jae
jae
imul
jge
aaa
add
or
or
push
jae
jmp
sub
sub
fadd
mov
pop
inc
loope
sub
call
pushf
push
ret
(bad)
push
or
jp
adc
inc
add
push
test
push
inc
sub
dec
and
mov
pop
(bad)
dec
mov
xor
aas
dec
cmps
jecxz
movs
mov
ins
test
mov
mov
js
and
cwde
(bad)
fld
xor
or
pop
cmp
jb
loopne
ins
es
ror
clc
mov
(bad)
adc
test
adc
pop
jge
gs
cmp
mov
mov
mov
test
mov
push
mov
push
fldcw
inc
inc
cmc
or
mov
cs
jge
icebp
das
pop
jmp
push
js
or
hlt
xchg
jle
push
mov
mov
sub
jae
add
fs
xlat
inc
adc
add
fbstp
movs
sti
jne
dec
idiv
mov
pop
pop
aad
jmp
inc
ret
cld
push
adc
or
daa
pop
mov
data16
jmp
mov
jno
cwde
sub
mov
jmp
mov
call
clc
inc
shl
dec
out
dec
movs
loope
inc
add
adc
dec
jb
sub
pop
icebp
cld
inc
cmp
fdivrp
add
add
mov
xchg
cmc
add
pop
clc
push
cmp
pop
add
mov
movs
or
jp
sub
pop
add
push
iret
push
and
fcom
push
cld
hlt
jecxz
add
pop
or
je
pop
push
cs
aam
push
popf
inc
xor
popa
pushf
push
loope
jmp
fiadd
fcmovnb
jg
clc
and
cmp
inc
retf
dec
add
lods
lds
jo
stc
jg
repz
enter
pop
pop
je
dec
ja
call
ss
test
pop
adc
call
add
add
arpl
syscall
cld
jb
call
scas
inc
pop
xor
inc
add
pop
pop
stos
pop
mul
popa
cld
mov
add
jmp
inc
xchg
js
inc
xchg
adc
mov
mov
jmp
pusha
jmp
xor
mov
or
inc
inc
sub
sub
dec
loop
in
xor
or
jp
dec
loope
es
mov
push
push
cli
loope
mov
ret
xchg
fs
sub
and
ins
lahf
mov
fimul
call
dec
dec
js
sub
mov
add
mov
push
mov
(bad)
pop
pop
outs
adc
sub
cli
cmps
xor
jb
dec
(bad)
(bad)
sbb
aaa
cmp
retf
jmp
cli
xor
pop
cmp
retf
ret
mov
xchg
in
ja
pop
push
ret
add
pop
pop
push
enter
(bad)
adc
add
(bad)
std
sbb
mov
(bad)
jmp
mov
inc
retf
inc
aad
sub
rcr
xchg
push
ret
xor
mov
movs
mov
popa
push
nop
lds
cld
into
add
call
ret
sti
and
inc
inc
inc
push
and
in
cli
inc
mov
or
mov
das
mov
bound
test
jae
popa
(bad)
arpl
std
hlt
add
mov
mov
ins
data16
les
stc
add
or
jmp
or
(bad)
clc
cmps
aad
mov
outs
clc
xor
outs
mov
pusha
ins
xchg
ds
imul
add
inc
out
push
(bad)
and
or
inc
mov
jmp
or
mov
mov
(bad)
imul
ret
inc
aaa
mov
inc
lods
dec
hlt
add
dec
outs
mov
dec
xor
dec
ret
loope
dec
push
dec
je
add
inc
rcr
test
movs
hlt
adc
inc
cs
out
fwait
fwait
pop
xchg
stos
xchg
xchg
inc
adc
xchg
sub
mov
lods
outs
dec
int3
lds
mov
push
ja
cmp
out
or
mov
mov
and
pop
enter
cmp
add
sub
das
mov
mov
fldenv
add
arpl
int
mov
dec
test
adc
mov
aad
mov
add
jmp
arpl
sbb
ins
mov
sub
inc
mov
mov
rcl
dec
ret
retf
push
xchg
out
inc
inc
(bad)
mov
repz
inc
stos
sub
ja
dec
inc
test
sbb
add
add
loopne
push
mov
(bad)
fstp
test
inc
out
dec
push
add
out
add
sbb
lds
pop
inc
call
add
mov
dec
adc
clc
fistp
xchg
pop
data16
aas
scas
fdivr
pop
ret
ja
xchg
add
xchg
cli
stos
add
lock
mov
pusha
lds
mov
addr16
and
lods
cs
pop
aas
sub
adc
jmp
or
inc
scas
mov
xchg
pop
or
pop
js
push
push
(bad)
push
and
sub
shr
and
stos
call
aas
push
mov
xlat
out
(bad)
cmp
mov
inc
push
(bad)
fucomi
push
cmps
leave
add
ficomp
or
sub
adc
and
push
rol
out
push
js
pop
les
and
add
xchg
or
sar
and
inc
(bad)
xchg
inc
ss
inc
push
xor
outs
pop
jg
xchg
inc
neg
cmp
mov
fcmove
inc
pop
mov
add
add
pop
jmp
mov
cwde
add
xchg
pop
retf
cmps
xor
sub
push
in
mov
(bad)
movups
out
cmp
stos
add
add
mov
jne
sbb
pop
push
adc
inc
adc
aam
push
fcom
push
push
ret
ret
mov
dec
sub
sbb
add
mov
jmp
pop
pop
mov
push
mov
mov
bound
shl
cld
scas
mov
repnz
jne
(bad)
push
mov
je
imul
cld
sbb
mov
mov
adc
and
xchg
aad
and
mov
sahf
xor
inc
inc
push
adc
push
xor
jo
push
(bad)
(bad)
mov
imul
push
push
and
ficom
rcr
aam
ret
adc
mov
addr16
ss
push
push
js
add
xor
mov
into
sub
jae
push
inc
dec
dec
movs
jmp
cld
sub
dec
pop
xor
out
jb
imul
(bad)
jo
sub
aas
mov
imul
and
push
dec
or
inc
push
call
(bad)
dec
cmp
scas
outs
cld
xor
(bad)
pop
retf
in
jmp
daa
cmp
arpl
push
mov
inc
jmp
not
inc
xchg
jl
jmp
sbb
out
stos
mov
inc
push
pop
mov
push
dec
bound
repnz
push
mov
adc
mov
dec
jae
mov
clc
add
xor
add
inc
dec
jmp
jno
xor
out
aas
push
sti
xchg
lods
jp
cld
test
pop
adc
sub
sti
call
push
inc
adc
xor
ret
or
rol
push
es
icebp
or
push
(bad)
or
or
inc
cmp
mov
sub
mov
pop
idiv
pop
das
and
call
scas
add
add
mov
push
inc
pop
adc
ret
or
pop
bound
inc
lahf
jg
fbstp
jns
pop
mov
pop
push
pop
aas
out
or
rol
js
inc
ror
inc
pushf
std
pop
inc
sub
mov
sub
ret
in
jg
fidivr
shl
(bad)
sub
neg
xor
or
ret
jg
outs
(bad)
out
fs
imul
pusha
bound
jg
loop
add
pusha
add
inc
pop
xlat
repnz
pop
or
inc
std
inc
pop
mov
mov
shl
jmp
outs
aas
inc
lahf
inc
inc
push
mov
push
or
mov
xchg
leave
mov
(bad)
out
aam
pop
jge
mov
aas
addr16
xor
adc
sti
pop
and
push
cmp
push
scas
xlat
scas
int
outs
jle
adc
out
ds
dec
mov
mov
mov
adc
je
xchg
add
or
push
push
clc
xor
test
mov
dec
add
loope
jbe
inc
fcom
hlt
jmp
push
adc
fadd
and
(bad)
aaa
addr16
inc
fs
inc
pop
xchg
push
aas
dec
jae
mov
cmp
add
pop
pop
out
test
xchg
and
push
(bad)
scas
or
push
(bad)
push
xor
dec
xor
dec
push
(bad)
ds
xor
sbb
sub
cwde
and
arpl
pop
ror
and
call
add
push
pop
xchg
mov
pop
push
mov
mul
ret
pop
hlt
mov
xor
dec
test
out
cvtps2pi
pop
cli
add
(bad)
sbb
fcomip
push
lods
pop
mov
mov
in
(bad)
in
call
call
call
cmp
push
mov
gs
sub
fs
mov
cld
add
dec
adc
or
cld
fdivp
mov
call
clc
pusha
jl
push
test
addr16
pop
mov
jno
fnstenv
int3
and
adc
inc
pop
add
cmp
jecxz
ins
push
push
adc
je
jg
xchg
cmp
sbb
sbb
je
or
and
cmp
jno
loopne
jns
adc
and
pusha
xchg
pop
test
out
jle
ror
jb
das
sub
cld
pop
retf
lds
jae
shl
std
inc
mov
add
sbb
lahf
add
imul
call
loopne
retf
or
(bad)
xchg
mov
popa
ror
dec
jmp
out
jnp
loop
(bad)
mov
jo
push
push
cmp
dec
aas
hlt
jmp
adc
adc
out
push
and
aas
adc
mov
mov
push
xor
sti
sti
xor
dec
inc
push
add
ins
push
enter
sbb
ins
call
and
clc
stos
mov
call
cmp
fimul
lods
jns
jmp
dec
les
sub
push
pop
mov
sbb
xchg
or
jo
sub
xchg
xchg
or
clc
mov
icebp
ja
jp
cmp
mov
sbb
mov
jo
retf
bound
xor
add
mov
rol
add
(bad)
adc
ret
push
mov
dec
aaa
enter
fdivr
(bad)
mov
pop
cmps
mov
mov
out
inc
pop
or
jbe
xchg
inc
dec
fstp
test
in
inc
(bad)
stos
jbe
jnp
(bad)
in
push
jno
js
mov
loopne
add
push
push
add
fwait
add
mov
dec
lock
fdivrp
push
and
xchg
push
xchg
fild
or
mov
mov
ss
(bad)
lock
jmp
bound
pop
or
mov
std
or
fdiv
push
dec
or
and
in
and
cmp
rol
xor
adc
test
out
adc
mov
add
out
adc
neg
xor
cmp
into
push
lds
push
mov
mov
push
pop
xchg
cld
(bad)
pushf
sub
mov
push
cmp
and
(bad)
mov
mov
jmp
adc
imul
jge
arpl
les
push
xor
jae
jae
clc
fcomip
in
pushf
xor
pop
jg
div
inc
push
fst
pop
inc
arpl
mov
add
mov
jecxz
mov
gs
sti
add
jbe
nop
or
xchg
jae
test
or
mov
ins
inc
mov
out
cld
cwde
test
mov
test
test
sub
int
sub
out
push
inc
push
inc
mov
jae
inc
inc
test
jmp
call
mov
daa
adc
sar
jp
mov
push
jmp
cld
(bad)
lods
rol
mov
jmp
push
rcr
add
ins
mov
out
sbb
sub
pop
sub
push
adc
cmps
push
push
pop
ror
push
sub
mov
fnstenv
pop
and
jle
and
call
mov
dec
jae
aas
sti
inc
clc
int
aaa
bound
mov
popa
test
sar
sbb
ret
pop
mov
inc
xchg
cs
in
mov
out
inc
or
dec
jg
mov
push
cli
(bad)
push
inc
std
aam
std
scas
outs
test
shr
test
test
jmp
dec
gs
push
je
ret
xchg
les
outs
push
jle
ficomp
push
dec
push
pmuludq
push
cmc
ss
fsub
pop
or
and
mov
mov
dec
add
fsincos
pop
hlt
shl
rcr
sahf
adc
inc
out
shl
adc
call
mov
jl
xchg
jmp
clc
pop
test
xor
push
pop
inc
idiv
out
(bad)
fld
inc
pop
mov
rol
pop
push
mov
fdiv
cmp
xor
adc
add
(bad)
push
pop
mov
mov
inc
out
das
xchg
icebp
in
idiv
pop
mov
mov
mov
les
sbb
ror
mov
dec
add
pop
std
call
inc
scas
jo
and
mov
mov
test
mov
cmp
rcr
aas
sahf
add
push
xlat
inc
mov
cli
mov
add
test
pop
xlat
mov
jbe
add
fwait
arpl
mov
inc
pop
enter
out
in
jb
pop
or
cs
dec
dec
bound
fwait
or
shr
mov
pop
push
aas
push
inc
mov
jmp
xor
(bad)
in
std
push
and
jmp
push
push
mov
jmp
mov
dec
bound
mov
cmp
retf
aas
inc
jmp
and
inc
push
adc
je
pop
push
cmp
sar
xchg
dec
inc
add
jg
cmc
(bad)
cmp
outs
xchg
push
inc
into
scas
mov
mov
(bad)
je
inc
mov
xchg
push
mov
push
mov
xor
ja
push
pop
leave
cmp
inc
push
out
ret
pop
mov
call
or
arpl
lock
in
push
out
pop
hlt
inc
jno
rol
ret
fsubr
hlt
pop
cmp
inc
push
lds
xchg
jae
fiadd
bnd
mov
mov
push
sub
mov
ret
inc
and
rcl
int
inc
mov
xchg
cwde
mov
adc
jmp
push
jmp
dec
pop
xchg
or
xchg
sar
dec
sub
jg
push
push
cld
inc
xlat
add
int
sub
push
pop
mov
xor
add
ss
pop
add
push
mov
je
mov
jle
loop
int3
imul
popa
mov
pusha
mov
js
fs
dec
jmp
movs
xchg
int3
push
push
push
sub
test
in
out
call
clc
lods
mov
(bad)
mov
fs
dec
(bad)
cmc
mov
setp
inc
cmp
and
icebp
or
jb
or
aad
dec
pop
mov
ret
mov
pop
xchg
and
outs
scas
je
mov
xchg
push
pop
js
xor
or
sub
inc
icebp
call
scas
sti
or
add
add
mov
mov
push
dec
pop
mov
cmp
repnz
je
retf
dec
std
test
push
mov
in
sub
cmp
xlat
push
fcomp
ds
or
add
xchg
sar
outs
push
call
out
mov
xor
adc
mov
les
xchg
lock
adc
dec
arpl
and
loopne
(bad)
pop
icebp
cli
dec
stos
pop
adc
jae
add
addr16
push
jae
in
or
daa
dec
xor
sub
dec
push
pop
es
lods
or
ss
cld
dec
cmp
inc
jl
adc
cwde
xchg
mov
add
fist
mov
xor
mov
xor
add
add
stc
les
loop
out
pop
and
(bad)
pop
inc
nop
test
pop
jp
pop
mov
test
cli
std
mov
leave
ins
add
jecxz
xchg
dec
inc
pushf
inc
(bad)
es
scas
push
mov
mov
adc
xchg
jo
push
adc
push
push
jne
sub
push
sbb
xor
inc
std
bound
or
sub
aad
mov
not
push
push
xor
push
ret
inc
fadd
xlat
jmp
inc
jmp
mov
aas
mov
addr16
mov
fs
ret
dec
mov
push
cs
adc
shl
ror
(bad)
fdivrp
push
jmp
sbb
mov
pop
paddd
cmp
add
fcom
enter
aaa
(bad)
dec
jae
ins
xor
or
xchg
dec
dec
mov
scas
loope
adc
xchg
(bad)
repnz
or
adc
pop
inc
loopne
jb
pop
aaa
adc
adc
stos
add
xchg
(bad)
xor
ins
adc
test
xchg
adc
inc
out
mov
xchg
adc
mov
push
xor
pop
or
in
xchg
fcom
add
sub
ins
pop
or
mov
jb
push
add
add
jae
inc
sub
add
clc
dec
jmp
inc
imul
mov
jae
push
adc
inc
fwait
push
inc
mov
dec
sub
jno
push
or
hlt
scas
mov
rol
push
idiv
inc
pop
jmp
inc
ret
push
out
ins
(bad)
jnp
cmp
mov
pop
jle
sub
add
inc
or
call
and
test
shr
mov
and
add
xchg
add
add
xchg
mov
jmp
sti
(bad)
std
call
test
test
mov
pop
and
arpl
mov
jae
xor
inc
out
cmp
mov
mov
dec
pop
addr16
loop
sbb
fcmovu
or
sub
dec
sub
and
dec
fwait
sub
outs
(bad)
mov
mov
pusha
ins
add
mov
xchg
cwde
js
add
add
pop
cld
scas
fdivp
mov
pop
pop
adc
out
pop
mov
mov
and
or
(bad)
mov
push
jmp
mov
cmp
call
scas
pop
add
push
ds
xchg
cld
adc
fwait
sbb
arpl
into
xchg
cmps
aas
inc
sbb
mov
sub
and
scas
inc
and
or
dec
fs
adc
add
in
mov
sub
add
ins
fmul
das
jl
aas
mov
(bad)
mov
jne
lock
push
aaa
idiv
xchg
dec
xor
or
div
call
das
add
xchg
mov
inc
(bad)
xchg
mov
sti
or
mov
data16
(bad)
call
push
inc
jp
stos
dec
(bad)
mov
sti
dec
movs
jg
call
cld
dec
cmp
pop
ja
dec
mov
fimul
dec
enter
call
dec
cli
or
xor
pop
jg
in
pop
jmp
pop
push
add
stos
shl
cmp
mov
fild
push
mov
mov
sub
out
dec
cmp
out
jb
aam
push
pop
adc
fwait
test
jmp
push
inc
dec
inc
fcmovbe
out
adc
add
push
movs
lahf
out
push
adc
sbb
test
cmc
mov
mov
mov
not
cmc
test
push
out
imul
jg
sbb
aas
sbb
add
inc
stos
test
cmp
or
nop
jno
into
dec
inc
imul
add
sbb
jno
jle
jle
in
cmp
out
sub
push
ja
adc
inc
ja
jmp
rol
pop
jno
mov
jmp
test
add
jmp
xlat
bound
xchg
dec
int3
std
add
inc
fbstp
lods
fcomip
pusha
xor
nop
pop
push
sbb
ror
das
stos
inc
outs
ror
jecxz
cwde
nop
nop
dec
jns
out
ret
add
add
dec
pop
shr
sbb
mov
pop
aad
inc
add
cmc
fild
lahf
or
outs
scas
pop
inc
dec
and
es
enter
push
std
sub
pop
and
ins
inc
xor
cmps
push
arpl
push
sub
inc
pop
jg
cmps
fisubr
loopne
je
mov
sar
lods
xor
std
dec
aad
sar
ficom
and
inc
das
cli
ret
add
std
push
repz
xor
std
aas
sbb
sub
js
stos
rcl
movs
mov
fild
push
push
push
mov
fs
adc
add
push
fsubr
xchg
mov
add
jbe
pop
in
adc
adc
inc
sbb
outs
add
dec
arpl
inc
add
push
das
pop
inc
into
mov
icebp
add
inc
or
pop
add
jp
add
pop
jbe
nop
ds
mov
xchg
jo
mov
outs
xchg
mov
add
mov
mov
imul
push
and
jo
pop
adc
mov
push
xor
push
fmul
mov
aaa
cdq
adc
push
xchg
mov
outs
aas
push
imul
xchg
pop
mov
add
aas
pop
pusha
das
pop
pop
adc
inc
push
cwde
jbe
aaa
mov
js
in
pop
and
inc
xchg
sti
xchg
je
ror
inc
pop
mov
adc
inc
pop
and
and
mov
mov
sub
int3
clc
popa
jle
rol
jbe
arpl
or
sbb
je
hlt
add
ret
mov
test
cmps
push
fidiv
add
cmp
pop
adc
xor
mov
adc
out
adc
out
clc
xor
imul
jl
xchg
retf
clc
daa
dec
out
ret
jno
and
inc
add
fld
mov
fs
es
ffreep
jg
pop
xor
mov
inc
shr
std
iret
inc
sti
mov
imul
xchg
or
(bad)
mov
jecxz
push
inc
adc
stc
push
cmp
inc
rol
pop
fmul
jmp
call
ret
jns
imul
mov
push
add
inc
mov
xchg
pop
and
int
fisub
jmp
mov
or
dec
std
and
stos
test
mov
sub
clc
outs
or
xor
je
sbb
and
ficomp
cmp
push
pop
pop
hlt
pop
fs
(bad)
addr16
add
call
aas
mov
adc
jmp
sub
pop
imul
jg
lods
cmp
xor
retf
aas
cmp
jmp
daa
mov
arpl
add
clc
inc
or
std
dec
and
mov
call
call
bound
mov
jb
les
call
adc
cli
mov
xor
mov
xchg
add
dec
std
add
inc
bound
aam
mov
or
dec
xchg
retf
cmp
inc
outs
(bad)
fidivr
mov
lds
test
sub
add
jae
xor
icebp
sub
cli
jae
aas
(bad)
ror
push
sub
or
pop
mov
(bad)
ret
or
mov
inc
and
scas
pop
mov
or
std
mov
jmp
add
add
and
not
cmp
add
push
shl
inc
fcom
mov
pop
sti
jg
std
mov
mov
or
mov
dec
push
inc
repz
xor
ss
or
or
add
mov
inc
test
push
out
ret
push
or
cmps
dec
fstp
pop
ret
dec
test
sub
outs
data16
es
mov
icebp
add
sbb
adc
xor
sub
mov
repz
ret
lock
add
ss
sbb
cld
aaa
xchg
stos
pop
xchg
sub
ins
rcl
rol
and
mov
pop
xor
push
push
loope
loop
fistp
xor
mov
(bad)
or
movs
xor
inc
mov
ror
sahf
sub
stos
sti
in
in
inc
xor
xor
add
or
jl
fadd
mov
mov
imul
jmp
pop
mov
add
mov
mov
lock
sub
jmp
repnz
mov
push
clc
out
mov
xor
add
mov
or
and
fwait
inc
fidivr
loope
idiv
pop
sub
cmp
repz
fsub
or
out
in
stos
inc
and
sahf
or
aam
or
loopne
pop
push
mov
jl
adc
cmp
sahf
inc
shr
mov
(bad)
call
xor
mov
mov
xor
add
jg
test
jbe
push
pop
mov
xor
dec
sub
mov
enter
lea
fcomp
mov
popf
(bad)
sti
or
imul
loop
and
mov
shr
mov
(bad)
jg
push
mov
cs
cwde
inc
lods
sub
mov
sbb
les
sbb
mov
xor
xchg
push
mov
and
xor
mov
(bad)
mov
imul
inc
mov
push
push
out
or
test
jne
out
test
jp
inc
inc
pop
dec
jno
dec
push
(bad)
(bad)
mov
icebp
xor
sub
sub
add
mov
mov
push
sub
sti
or
popf
in
cmp
or
jo
push
inc
inc
enter
test
jne
xor
in
cld
mov
into
sub
mov
loope
aam
mov
push
outs
icebp
imul
shr
add
ret
test
push
xor
fistp
cmp
dec
mov
xor
cmp
mul
sub
inc
and
call
pop
es
inc
mov
or
and
push
and
outs
ficom
xchg
or
xor
arpl
sub
mov
cmp
lods
pop
dec
xor
scas
adc
push
jb
xchg
xchg
lea
adc
dec
dec
inc
idiv
(bad)
adc
je
(bad)
mov
loop
retf
and
int
popa
loopne
xor
xor
hlt
dec
movs
jns
xor
shl
xor
xor
push
icebp
mov
pop
retf
and
hlt
inc
pop
add
add
hlt
mov
adc
or
fidivr
and
or
fild
shl
mov
(bad)
mov
mov
jle
mov
clc
mov
or
fistp
test
add
add
mov
cwde
sbb
add
pop
add
jbe
xchg
adc
test
sar
add
(bad)
test
sub
mov
rcr
hlt
(bad)
out
fcomip
sar
loop
mov
jg
inc
adc
add
sub
push
mov
push
pop
jmp
cli
fidiv
push
or
retf
mov
mov
xchg
jmp
shr
loopne
xchg
mov
adc
lock
add
mul
into
les
xlat
xchg
mov
shr
dec
pop
xchg
push
ss
cdq
sub
cli
loopne
push
(bad)
cld
dec
push
sbb
push
add
push
mov
pop
test
cmp
ret
add
xor
pusha
add
(bad)
pop
mov
ret
lock
xchg
mov
push
pop
xchg
xlat
mov
out
adc
popf
in
xor
retf
repz
xor
and
sub
sub
or
inc
adc
push
mov
sub
add
jmp
dec
jo
movs
pusha
mov
ret
add
pop
mov
retf
jge
adc
cmps
hlt
add
fnstcw
mov
mov
(bad)
pop
push
lahf
dec
add
mov
repnz
xchg
pop
add
or
or
xor
retf
sub
(bad)
add
in
pop
mov
or
mov
fiadd
sar
fistp
mov
inc
push
cmp
and
jmp
and
(bad)
nop
retf
push
scas
sub
push
mov
idiv
cmp
retf
ror
add
dec
rcl
sbb
push
sbb
xor
idiv
rcr
test
fdivr
dec
add
mov
cli
fwait
inc
loopne
arpl
push
xor
jl
mov
stc
jg
iret
push
pop
shr
or
sub
mov
nop
mov
enter
pop
jmp
push
cmp
pop
pushw
sub
mov
in
das
or
data16
mov
adc
es
(bad)
fild
mov
inc
retf
repz
mov
xchg
add
mov
jo
adc
ret
mov
adc
inc
sbb
or
je
aas
gs
pop
fnstcw
add
push
call
dec
pusha
jo
out
cli
out
pop
mov
pop
or
jno
xchg
enter
jb
neg
dec
cmp
push
pop
xchg
mov
dec
loope
fsubr
jle
ret
movs
arpl
mov
shr
loop
mov
aaa
pushf
mov
stos
and
add
loopne
inc
mov
lock
aam
inc
call
fisubr
in
cmp
mov
or
clc
xor
mov
std
scas
mov
js
cmp
in
fs
cs
ror
adc
add
lock
cmps
push
push
pop
call
cmp
mov
das
mov
lds
clc
mov
xchg
fild
jae
shl
rcr
mov
movs
cld
mov
outs
mov
pop
cmc
movs
or
mov
and
cld
shl
xlat
mov
cmps
in
or
jae
aad
or
aam
mov
cmp
push
push
pop
pushf
mov
fmul
mov
pop
(bad)
fistp
bnd
xchg
jns
push
imul
xchg
sub
je
addr16
jg
imul
leave
add
add
pop
add
lods
clc
xchg
push
std
sbb
sbb
pop
mov
mov
out
mov
stos
jne
enter
sub
test
mov
or
mov
push
retf
je
mov
sti
lock
adc
outs
inc
xchg
or
test
js
mov
cs
dec
bound
and
push
clc
jb
inc
add
mov
dec
lock
lock
aad
add
fs
cmp
std
and
inc
(bad)
cld
and
ins
sub
call
add
or
sar
loope
test
xlat
push
ret
lock
(bad)
pop
mov
add
inc
pop
jl
test
cdq
ret
ret
pop
lock
cmp
and
aam
mov
sub
xor
cmp
jmp
ret
adc
mov
mov
sub
pop
or
ret
pop
sub
fdivr
aaa
cld
pop
push
pop
push
mov
clc
jge
pop
xor
add
fwait
pop
rcr
bound
out
scas
mov
xor
cmp
dec
ds
clc
repz
lock
push
gs
sub
xor
mov
je
or
mov
xor
mov
test
push
test
test
add
mov
cmp
pop
mov
and
inc
push
repz
shl
mov
test
pop
int3
sbb
mov
push
js
aas
loope
aaa
into
add
sub
add
xor
xor
inc
aaa
loope
outs
scas
sub
or
and
sub
in
add
fcomp
fisttp
call
mov
adc
mov
repz
add
int3
jbe
xor
and
ret
dec
js
into
mov
out
or
push
add
pop
dec
pop
mov
loope
dec
pop
pushf
push
push
mov
or
mov
pushf
rol
adc
pop
fwait
enter
mov
mov
mov
and
(bad)
mov
test
mov
push
sub
xor
jg
sub
xor
fdivr
xlat
xor
mov
mov
jmp
fistp
mov
xor
pop
pop
mov
xor
rol
add
mov
repz
cld
aaa
outs
inc
add
gs
inc
push
mov
mov
sub
push
(bad)
dec
mov
push
or
mov
or
dec
sbb
or
mov
cmp
dec
mov
sub
or
xor
xlat
ret
imul
jg
ret
xlat
(bad)
lea
in
push
js
add
jnp
aaa
mov
iretw
icebp
mov
mov
dec
out
push
hlt
mov
jmp
push
jmp
in
test
iret
mov
sbb
nop
adc
xlat
and
repnz
(bad)
aaa
mov
popa
mov
pop
xor
xor
xchg
mov
loope
push
hlt
imul
enter
inc
pop
xor
pop
xor
mov
sub
call
mov
js
mov
loop
call
sqrtps
mov
movs
pop
xor
mov
les
outs
data16
hlt
call
fmul
pop
inc
xor
add
dec
addr16
clc
shl
into
pop
pop
aaa
clc
xor
(bad)
aad
or
push
pop
cmp
jg
bound
pop
adc
lock
call
pop
mov
add
data16
push
adc
ins
pop
mov
sti
rol
psllq
or
test
shl
and
and
in
push
div
ja
xor
or
(bad)
push
js
sbb
ins
lahf
xor
clc
clc
sbb
fdiv
aas
jp
sbb
hlt
pop
call
mov
ins
jbe
cmp
lods
lods
dec
push
mov
outs
xor
mov
rcr
jp
dec
xor
or
sub
ins
(bad)
std
ret
loop
loopne
aam
loopne
pop
mov
and
fidivr
inc
sbb
xlat
(bad)
jge
pop
test
cwde
xor
js
mov
cmp
lods
test
es
sub
and
or
dec
mov
pop
shl
xchg
mov
pop
jne
mov
je
test
imul
inc
nop
stos
dec
or
cmp
fwait
loopne
adc
cli
sub
pop
sub
jle
inc
xor
mov
mov
push
cmp
jno
mov
not
mov
mov
loope
sub
int
and
fstp
jge
dec
pop
js
ret
enter
test
aaa
push
xor
popa
shl
dec
mov
adc
adc
and
adc
pop
daa
adc
add
or
aaa
cld
(bad)
inc
sbb
and
add
and
push
pop
push
pop
sub
or
sbb
sar
shr
(bad)
xor
xor
xor
inc
cmp
rol
push
dec
push
dec
push
pop
pop
inc
inc
dec
inc
dec
inc
push
cld
call
dec
dec
inc
dec
pop
pop
pop
pusha
pop
pop
outs
jb
jns
jo
jne
ja
js
arpl
ja
hlt
addr16
mov
ins
and
xchg
mov
mov
pop
(bad)
dec
xchg
icebp
movs
movs
fucom
idiv
fwait
mov
jmp
jge
stc
loop
(bad)
stos
call
aad
fdivp
out
call
in
sahf
(bad)
cmp
(bad)
push
ftst
xchg
(bad)
cmc
lahf
in
cld
mov
xchg
(bad)
shr
mov
mov
(bad)
dec
nop
scas
mov
(bad)
out
cmps
jmp
jmp
lods
lea
lds
add
(bad)
retf
inc
je
imul
sbb
std
inc
cld
rcr
in
lahf
jmp
pop
sbb
jmp
push
lahf
icebp
sbb
inc
xchg
mov
cld
sahf
or
dec
fimul
mov
sbb
test
stos
fild
fisttp
cs
lahf
xchg
shl
push
xchg
xchg
ficom
push
(bad)
or
add
jmp
ss
inc
xchg
mov
clc
adc
cmp
push
inc
pop
adc
fisubr
ins
adc
push
imul
adc
xchg
adc
sub
pop
jecxz
fcmovnu
ds
and
push
sbb
mov
push
add
cmps
pop
sbb
lods
movs
xor
std
int
jmp
push
or
pop
mov
lods
pop
adc
push
aas
cld
bound
xchg
cld
adc
xchg
repz
hlt
rol
or
push
(bad)
je
pop
pusha
pop
xchg
pop
cmc
and
xchg
fldenv
xor
pop
cmps
jmp
es
loop
xchg
icebp
push
cmc
ins
dec
daa
in
or
mov
sbb
ds
cmps
rcl
xchg
pop
shl
mov
pop
xchg
add
(bad)
fidiv
cmc
inc
pop
and
inc
and
fsub
scas
add
test
movs
inc
inc
lds
std
fldcw
push
xchg
adc
xchg
dec
push
es
call
jmp
leave
push
inc
inc
adc
mov
xchg
sbb
sub
jg
mov
inc
aaa
fdivr
out
pop
sti
outs
js
pop
fdivr
pop
lahf
adc
cwde
fmul
add
push
cmp
or
xor
push
sub
cmp
dec
dec
add
dec
dec
imul
ss
jno
dec
and
sti
fisttp
fs
pop
jmp
test
pushf
and
pushf
lods
in
scas
push
cld
bound
test
jmp
jae
out
or
cld
(bad)
(bad)
(bad)
fsub
pop
(bad)
adc
xchg
sbb
pusha
or
rol
mov
cmp
adc
imul
ins
or
cmp
add
pop
pop
inc
sub
add
cwde
push
cmp
jbe
sbb
fstsw
shl
addr16
or
fdiv
push
pop
fdivr
imul
iret
inc
xor
inc
(bad)
or
outs
lahf
sbb
adc
dec
push
in
fldenv
(bad)
neg
jecxz
popf
stc
das
inc
adc
test
add
sbb
push
mov
loop
add
std
cmp
jmp
jnp
jnp
and
inc
sbb
jge
je
adc
add
or
out
jmp
mov
jnp
ins
sbb
retf
xlat
nop
pop
sub
push
xchg
push
or
push
inc
jl
or
lock
cmp
and
sub
push
ror
add
push
push
imul
adc
pushf
loopne
lds
add
inc
ror
and
mov
adc
push
sbb
pop
xor
adc
pushf
arpl
fidiv
xor
or
jmp
cmp
inc
adc
popa
jns
xor
scas
inc
jne
push
jp
arpl
pop
bound
cmp
outs
inc
pop
pop
inc
bound
jns
push
popa
in
sti
jb
outs
bound
push
lds
sbb
movs
adc
adc
xchg
push
xchg
or
mov
fdiv
in
xor
pop
xor
mov
add
je
in
fstp
dec
sbb
cmp
in
pop
or
ins
cmp
nop
clts
in
pop
mov
sub
lahf
fld
lods
imul
js
adc
or
inc
push
xor
sub
shr
das
add
out
xor
add
into
mov
lock
dec
sbb
jno
das
test
ins
xlat
lods
(bad)
dec
xor
dec
add
mov
mov
push
push
push
lods
xchg
dec
cmp
xlat
cmp
mov
inc
cmc
or
mov
das
outs
inc
fist
xchg
sbb
cli
cli
xor
test
and
and
mov
cmp
push
sar
dec
inc
cmps
ror
pusha
adc
fisttp
sub
adc
jge
xchg
adc
sbb
lahf
out
adc
push
adc
retf
sbb
data16
add
cmps
fnstenv
pop
adc
cmp
shl
and
adc
(bad)
cmp
cli
cmp
adc
push
pop
aam
pop
add
aam
or
sub
add
aam
lds
adc
push
mov
add
iret
test
in
ret
add
push
sub
sbb
adc
in
sub
push
add
icebp
ror
or
mov
dec
lahf
(bad)
retf
pop
dec
or
or
jecxz
and
sub
cld
mov
jmp
mov
vmovsd
inc
xchg
or
jecxz
or
push
aaa
out
push
cmp
pop
lods
ror
adc
cmp
rcr
add
and
jl
mov
sbb
sbb
inc
mov
add
inc
jecxz
loop
ins
and
inc
sahf
add
rcl
sub
(bad)
cmp
and
ja
std
fistp
push
or
fld
data16
jo
js
js
push
in
jmp
push
bound
or
in
or
popa
in
add
adc
cmp
add
es
sar
(bad)
sbb
add
sbb
sbb
add
lods
call
pop
fcmove
add
ins
fcomi
lock
jo
nop/reserved
(bad)
fwait
cmp
or
cmp
repnz
sbb
inc
cs
adc
pop
in
push
dec
ins
andps
lods
repnz
inc
adc
sub
push
es
mov
or
and
cmp
push
fimul
dec
test
lahf
sbb
(bad)
mov
sub
outs
push
dec
sbb
xchg
retf
jns
and
ds
aaa
or
dec
inc
sub
jb
cmp
xchg
dec
add
dec
outs
mov
bound
lahf
add
addr16
and
dec
cmp
push
dec
mov
aas
adc
pop
and
je
jp
jbe
sbb
mov
inc
inc
jb
(bad)
jmp
lods
xor
daa
dec
lea
push
mov
and
popf
add
iret
(bad)
pushf
pushf
fsubr
cmp
int3
mov
add
mov
jb
cmp
aas
or
sub
dec
fsub
repnz
fistp
xchg
push
pop
sbb
mov
pop
xor
fisttp
arpl
push
push
xchg
repnz
setae
aad
xor
jge
inc
in
sbb
jbe
mov
cmp
push
sbb
cmps
sar
add
lahf
stos
xchg
inc
xchg
sbb
xchg
adc
(bad)
(bad)
(bad)
(bad)
push
repz
sbb
fdivr
imul
xchg
push
pop
fisttp
scas
ret
loopne
dec
clc
test
inc
adc
fsubr
adc
adc
sbb
scas
je
mov
xchg
dec
or
and
or
inc
adc
lea
xchg
pop
sar
aas
aaa
ds
xchg
inc
mov
dec
pop
aas
cmc
imul
and
mov
push
mov
pop
sbb
jmp
mov
aas
push
imul
mov
imul
inc
dec
test
shl
cmp
dec
pop
cli
(bad)
outs
adc
ins
mov
bound
add
adc
push
adc
into
xchg
and
xchg
jns
mov
or
mov
push
ret
pusha
sti
imul
cmp
ins
adc
pop
repnz
outs
add
xchg
pop
jbe
pop
push
and
ret
pop
adc
shl
push
jmp
adc
sbb
std
and
rol
or
dec
fstp
outs
and
adc
out
xchg
adc
call
inc
jle
retf
(bad)
mul
aaa
cli
push
ror
ret
push
out
pop
in
adc
cmps
mov
push
out
sti
lds
push
adc
pop
je
aam
out
pop
push
cmps
(bad)
movs
imul
leave
pushf
jb
cmps
test
jb
(bad)
mov
mov
mov
das
adc
and
pop
js
mov
inc
pop
cmp
add
mov
jmp
mov
pop
xchg
cmp
aad
aas
xor
aas
push
sub
fs
jmp
or
loope
sti
adc
(bad)
scas
fstp
movs
mov
xchg
jmp
fist
inc
mov
adc
push
add
(bad)
pop
pop
scas
outs
xchg
xchg
adc
imul
dec
mov
sti
rcr
or
and
popf
cmp
das
jp
pop
adc
and
nop
aas
mul
fs
lahf
sbb
(bad)
fs
and
sub
dec
jmp
rcl
jae
and
out
cmp
mov
lods
xor
adc
nop
enter
out
add
xor
push
pop
data16
or
jg
sbb
add
or
dec
or
cmp
or
(bad)
cmps
ja
(bad)
xor
mov
cmp
mov
add
repnz
shl
aas
imul
sbb
shl
in
push
out
pop
ds
hlt
cmp
nop
imul
daa
out
aad
int3
jne
inc
sahf
imul
call
icebp
pop
mov
jnp
test
out
and
imul
movs
enter
sub
mov
dec
mov
cmp
ss
icebp
nop
rcr
mov
push
push
maxps
cmps
sub
fst
fstp
cmps
jl
xor
jns
rol
xchg
rol
cmp
ss
xchg
cmp
push
cmp
fdiv
inc
es
in
stc
or
mov
or
(bad)
lock
xchg
mov
stc
aaa
test
adc
or
ins
clc
scas
pop
xchg
out
aam
fwait
(bad)
xchg
mov
popf
(bad)
test
pop
push
or
rcl
imul
js
adc
add
jmp
jecxz
pop
sbb
ja
and
or
js
inc
push
sbb
ss
je
sub
push
jbe
pop
je
dec
aaa
mov
fwait
jmp
call
(bad)
adc
iret
dec
movs
popf
mov
lds
frstor
or
and
inc
or
das
in
adc
sbb
cmp
cmp
sbb
imul
add
cld
adc
pop
ds
inc
inc
push
mov
je
sub
hlt
mov
mov
les
pop
xchg
push
cmps
add
inc
int3
mov
test
jae
sbb
fucom
add
and
arpl
ss
out
ja
sbb
mov
sub
push
push
cmp
xchg
(bad)
imul
outs
jmp
push
sti
mov
jmp
fwait
add
jo
lods
push
(bad)
aam
jle
adc
pop
mov
test
fcomp
adc
mov
ret
adc
add
test
cwde
sti
scas
jmp
lods
dec
push
sub
movs
pop
mov
mov
pop
jmp
mov
or
push
pop
or
xchg
test
imul
(bad)
(bad)
inc
adc
push
sbb
jnp
xchg
or
cmps
sahf
ja
cdq
add
sahf
adc
sub
fsubp
not
call
jmp
mov
push
out
adc
sbb
shl
cdq
jne
jbe
pop
xchg
adc
push
fisub
or
inc
xchg
adc
ins
push
cld
adc
fmul
retf
push
(bad)
xor
adc
push
jne
shl
add
aas
pop
loopne
sbb
xchg
sbb
push
and
fsub
cmp
fistp
scas
jne
xchg
ret
cli
aaa
stos
ss
adc
shr
jae
sub
(bad)
jge
ror
imul
jle
and
fdivr
mov
push
retf
xchg
(bad)
jmp
add
xchg
pop
out
mov
push
sbb
shl
pop
cmp
lds
fadd
gs
jmp
pop
mov
fcomp
jl
call
daa
mov
icebp
pop
pop
pusha
sti
sbb
and
jp
sub
and
les
clc
adc
xlat
fnstsw
adc
add
sbb
mov
adc
adc
push
xchg
pop
out
rol
data16
jmp
fsub
cmp
pop
xchg
out
sub
mov
xchg
pop
xchg
pop
cmp
jmp
cmp
push
adc
push
dec
adc
sbb
fwait
cmp
inc
pusha
outs
mov
or
sub
adc
mov
hlt
jmp
sub
daa
fcom
or
popa
dec
mov
or
pop
es
push
clc
pop
add
cmp
(bad)
pop
cdq
and
and
ret
pop
movs
clc
addr16
inc
xchg
and
or
push
push
mov
loope
adc
rcl
xchg
cld
sub
lods
xor
sub
fmul
in
loope
jmp
add
cmp
out
sbb
add
aam
rol
shl
loopne
push
pop
mov
mov
dec
and
dec
popa
mov
pop
int3
icebp
and
stos
xor
fs
sub
outs
mov
das
stos
cmp
lds
inc
or
inc
pop
int
fwait
mov
pushf
or
lds
fld
icebp
scas
mov
or
push
pop
setne
adc
pop
mov
sbb
xchg
dec
es
pop
and
outs
sub
or
xchg
inc
test
jmp
sbb
xor
jmp
sbb
mov
or
pusha
mov
sbb
sub
sbb
dec
mov
pop
inc
fdiv
push
adc
call
inc
jmp
adc
mul
xchg
imul
adc
xlat
xor
(bad)
cmp
ror
push
add
xchg
adc
inc
sbb
and
mov
xor
push
or
or
retf
mov
add
in
sub
movs
mov
fst
or
jbe
sub
cld
adc
pop
dec
scas
shr
push
loopne
add
xchg
xchg
test
jno
retf
inc
push
movs
pushf
adc
dec
push
add
or
xchg
rol
jbe
jmp
sub
adc
jmp
jp
fsub
push
cs
adc
fisub
adc
arpl
sub
cdq
pop
mov
test
test
ds
out
sbb
or
lods
mov
ror
add
pop
mov
mov
dec
sbb
mov
sub
jae
mov
out
adc
mov
jmp
xor
mov
in
pop
int
shl
jg
xchg
xchg
lahf
or
test
ja
add
lahf
xchg
js
js
adc
xchg
add
push
loope
inc
and
mov
or
div
aas
inc
das
lods
adc
xor
push
cs
jl
push
ret
xchg
aas
inc
adc
imul
xchg
adc
inc
mov
rol
cmp
or
inc
cli
inc
clc
push
xchg
add
fsub
sbb
xchg
add
sbb
and
inc
push
sub
or
sbb
xchg
add
or
leave
retf
daa
pop
dec
jg
pop
hlt
aaa
push
jo
jg
fdivr
ret
sub
fsub
retf
in
cmps
fsubr
mov
inc
mov
stos
jno
cmp
fdiv
xchg
push
loopne
xor
xchg
movs
in
stc
mov
icebp
push
pushf
sub
ss
loopne
ja
adc
pushf
cmps
adc
xchg
add
cmp
mov
xor
xchg
adc
clc
jmp
pop
ja
push
subps
mov
pop
jo
ja
sbb
and
cmps
mov
dec
sbb
dec
daa
adc
xor
inc
mov
sbb
add
pop
pusha
add
xchg
imul
sub
cmp
cmc
cmp
add
or
inc
pushf
mov
loop
sbb
and
inc
jne
mov
gs
cli
test
cmp
jle
nop
inc
push
out
ret
jmp
cmpxchg
shl
ja
jmp
call
ins
pop
test
out
add
push
cmps
mov
test
fwait
pop
pop
in
icebp
das
femms
jp
add
retf
pop
(bad)
jmp
sti
(bad)
cdq
jnp
lds
sub
test
or
cs
jb
loope
dec
mov
dec
inc
and
dec
enter
sbb
add
jp
inc
out
add
or
or
into
mov
ds
fwait
push
and
(bad)
xchg
xchg
dec
xor
pcmpgtb
xchg
sbb
jnp
cmp
xor
mov
bound
shl
arpl
sbb
sbb
sahf
inc
cmp
call
xchg
push
sbb
push
daa
cmps
cmp
mov
sbb
imul
fnstsw
call
xor
jecxz
cmp
xchg
fcomp
push
ins
imul
lock
or
test
mov
push
push
cmp
sbb
(bad)
xchg
repz
sub
push
std
xor
icebp
xchg
aaa
(bad)
xor
mov
mov
call
and
clc
pop
mov
fist
adc
or
aas
pop
imul
outs
cmps
leave
cli
sbb
adc
lahf
or
out
in
xchg
xor
push
fimul
jmp
and
inc
pop
cmp
sub
ret
and
lods
cmps
xor
and
std
(bad)
mov
dec
outs
xor
pusha
xchg
ss
lahf
fs
stos
cmp
add
push
pop
adc
ret
mov
inc
mov
pop
shr
std
iret
cmp
inc
jecxz
daa
out
push
push
sbb
mov
xor
call
or
es
push
(bad)
cmps
lods
aaa
lock
sub
sub
pop
popf
add
pop
jmp
icebp
push
loopne
xor
mov
lods
pushaw
sti
xchg
nop
and
sti
add
mov
jmp
pop
or
add
mov
sub
(bad)
mov
jmp
inc
pop
or
dec
movs
mov
inc
dec
dec
xchg
das
inc
rol
call
add
call
mov
push
imul
pop
xchg
push
out
mov
sub
in
jo
ret
mov
sub
arpl
mov
xchg
popf
add
or
cmps
xchg
rcr
sub
add
ja
fwait
xor
rcr
test
(bad)
fdiv
xor
pop
xor
aam
(bad)
mov
sbb
and
inc
sub
add
xchg
sahf
in
push
test
cs
or
fist
push
dec
imul
std
movs
cmps
mov
cmps
retf
jp
fcmovb
xchg
int3
add
fbld
pop
cmps
adc
or
sub
in
sbb
or
push
cmp
push
dec
and
sti
jnp
push
sahf
push
sbb
jmp
sub
lds
fdivrp
jmp
sbb
sbb
xchg
shl
idiv
sub
inc
ins
push
pop
cs
jmp
jmp
dec
sbb
mov
sub
xchg
or
ror
add
lahf
adc
or
rcr
inc
xor
sub
push
sub
inc
inc
add
je
or
push
jno
mov
xlat
wrmsr
inc
add
push
or
imul
test
mov
mov
test
aad
add
pushf
mov
add
and
lea
and
outs
xchg
pop
push
bound
rcl
or
add
inc
not
hlt
cmps
adc
vmread
sub
jg
pop
fsubr
stos
loope
push
or
mov
cmp
cmc
jae
sub
mov
push
inc
inc
pop
dec
arpl
outs
popa
jbe
push
jns
dec
jne
inc
inc
push
jb
pop
outs
data16
outs
jp
adc
into
test
enter
ins
push
sub
neg
rcr
pop
push
aaa
pop
test
cmp
fadd
outs
mov
push
loope
lods
add
or
push
loopne
dec
and
pop
outs
xor
fcomip
ret
cmp
outs
push
cwde
test
dec
call
lahf
xchg
mov
xchg
nop
dec
repz
dec
sub
(bad)
test
inc
mov
sub
int3
sbb
ja
xchg
push
adc
shr
pop
xchg
bound
sbb
mov
add
xor
push
dec
imul
shr
inc
fiadd
cmp
pop
xchg
sub
sub
enter
xchg
shr
rcl
xor
mov
pop
xchg
mov
and
xchg
xchg
(bad)
movs
in
mov
xchg
sbb
sbb
xor
add
jae
fisub
mov
sub
dec
jo
sub
pusha
call
fiadd
dec
jg
push
pop
cli
xchg
adc
inc
scas
adc
add
xchg
(bad)
sub
jne
mov
repz
jbe
adc
dec
cmp
and
dec
scas
pop
jmp
push
inc
dec
dec
cmps
movaps
inc
icebp
xchg
jp
iret
add
inc
lds
mov
mov
lahf
inc
inc
and
mov
out
leave
inc
add
les
jnp
adc
sbb
aaa
movs
and
popa
enter
jno
cmp
mov
popf
adc
jns
mov
or
dec
jmp
sbb
(bad)
add
jmp
pop
or
imul
push
jmp
jo
sbb
ss
dec
cmps
fsubr
or
mov
push
cdq
sbb
dec
mov
mov
xchg
add
test
pop
jmp
or
cmp
xor
sub
(bad)
cmps
or
jp
mov
or
and
adc
lods
jo
sbb
pop
into
test
fstp
adc
cmps
ror
push
fs
imul
inc
or
add
add
cmps
ss
out
aam
cmc
enter
jne
test
jns
and
(bad)
pop
outs
xchg
inc
call
push
fcom
or
into
xchg
sub
sar
sub
test
sub
inc
mov
jbe
loopne
lahf
and
fidivr
xchg
aam
jmp
xchg
mov
adc
ficomp
(bad)
lahf
ds
pop
xchg
dec
add
mov
push
and
mov
in
sub
ret
dec
shl
push
jp
fcomp
jno
repz
pop
mov
add
xor
dec
dec
imul
xor
cdq
xor
cdq
sahf
fisttp
fcomp
retf
cdq
mov
(bad)
(bad)
bound
or
pop
enter
in
jbe
xchg
add
sbb
sar
mov
jbe
sbb
sub
push
jmp
or
xor
les
push
test
inc
sti
pop
ret
or
call
inc
movs
adc
push
sbb
aad
push
push
addr16
adc
cmps
or
push
lods
repnz
push
add
sub
pop
jmp
fistp
inc
push
xchg
jmp
sub
xchg
pop
out
fsubr
and
inc
cld
jg
sub
out
fucomi
or
push
out
shr
out
mov
scas
aam
std
movs
jmp
call
ret
mov
or
mov
sbb
or
xor
mov
stc
xor
pop
outs
jnp
and
das
pop
dec
aas
mov
inc
das
and
push
sub
movs
aaa
xchg
add
mov
jne
and
cld
cmps
daa
adc
mov
popa
inc
push
leave
in
mov
call
test
xor
scas
and
movs
pop
jmp
or
enter
je
loop
jl
jo
or
stos
adc
xchg
dec
push
repnz
mov
sbb
sub
mov
and
inc
scas
mov
and
std
xchg
pop
jmp
into
xchg
or
adc
scas
adc
shl
out
mov
repz
jmp
mov
int
addr16
cmp
mov
pop
cld
mov
xchg
ins
mov
ret
cmp
xchg
cmp
mov
sub
dec
mov
aas
shr
xchg
sbb
fs
js
icebp
mov
dec
ror
xor
in
sub
loop
adc
in
daa
sub
test
imul
fsub
xor
mov
aam
dec
and
push
imul
and
sar
cmp
and
mov
xchg
pop
sbb
mov
dec
ret
pop
scas
mov
fsub
add
inc
adc
xchg
fadd
mov
out
in
test
daa
cld
adc
adc
mov
imul
sbb
sti
test
or
dec
cmp
sub
xchg
and
sub
repz
add
add
or
call
outs
retf
mov
movs
into
fistp
adc
js
and
pop
loopne
fbld
cmp
add
imul
mov
add
xchg
jno
xor
mov
inc
inc
(bad)
xor
and
adc
add
or
pop
ror
mov
jno
je
mov
push
jne
ret
nop
je
or
movs
bnd
xor
cmp
adc
adc
adc
mov
mov
add
fimul
ss
in
xchg
xor
leave
cli
xor
add
fdivr
ds
fisttp
hlt
and
imul
and
cmps
cmps
outs
xor
test
push
imul
add
in
fmul
xchg
clc
inc
clc
sub
fs
push
add
sub
sub
add
dec
adc
(bad)
fnstenv
mov
cwde
jecxz
popa
imul
adc
cmps
stos
sar
sub
dec
and
add
lock
sbb
out
jecxz
adc
xchg
jmp
or
je
and
popf
cmps
and
fst
jmp
pop
add
and
or
and
std
lds
add
dec
inc
icebp
dec
mov
lods
pop
dec
pop
mov
mov
adc
and
test
imul
test
jbe
push
out
sub
(bad)
fwait
(bad)
or
push
push
pop
(bad)
in
jmp
mov
ins
int
add
lock
push
scas
jg
xor
pop
inc
fcomp
fcomp
or
(bad)
sub
mov
dec
dec
xchg
inc
push
sub
inc
(bad)
pop
lds
or
push
jle
mov
mov
sub
xchg
mov
pusha
add
pop
ds
lods
mov
cmps
cmps
mov
mov
inc
cs
psrad
adc
into
gs
sar
fld
sub
(bad)
rcr
xor
fcmovnb
enter
(bad)
jmp
or
add
es
fmul
shl
(bad)
mov
add
xchg
or
push
iret
ret
push
sbb
mov
add
or
dec
aaa
aam
sbb
mov
pop
and
clc
push
out
inc
xchg
mov
data16
adc
fnsave
sar
add
push
inc
cmp
push
outs
or
push
xor
cmp
jmp
pop
xchg
ror
shr
ror
mov
fist
dec
jmp
sbb
dec
arpl
fisttp
xchg
mov
push
jl
mov
sbb
dec
pop
jmp
xor
jno
test
push
outs
(bad)
lahf
xor
push
or
sbb
sti
xchg
inc
(bad)
sbb
fisttp
cmps
sbb
pop
(bad)
pusha
test
jno
ins
mov
outs
cmps
jg
adc
je
inc
cmp
xchg
mov
add
pop
aas
fnstcw
adc
jle
xchg
jmp
jmp
aam
fistp
push
(bad)
adc
enter
std
sahf
in
or
mov
lds
sbb
mov
sbb
dec
push
mov
inc
ret
frstor
or
loope
std
jmp
adc
fisttp
mov
xor
sar
aaa
and
push
jmp
cli
pop
unpcklps
aaa
fsub
push
imul
mov
sar
dec
adc
out
inc
imul
jmp
push
jmp
mov
(bad)
jmp
mov
pop
mov
ret
dec
adc
pop
jl
popf
xchg
dec
cmp
or
shl
das
clc
mov
ja
ret
(bad)
cs
adc
sbb
inc
repz
jle
xchg
xchg
mov
sbb
adc
sbb
cld
and
mov
cmp
jmp
dec
fsub
inc
mov
xor
add
fistp
mov
mov
sbb
jmp
jg
mov
dec
pusha
add
pop
repz
repz
pop
xor
test
sbb
es
jg
lahf
add
js
jl
mov
imul
out
cmc
loop
call
scas
push
inc
sub
sbb
in
push
adc
dec
cmp
xchg
shl
jmp
cmps
mov
xchg
cld
pop
or
push
xchg
adc
cs
addr16
push
jl
(bad)
out
add
stos
lock
jg
jmp
les
sub
pop
push
pop
mov
das
stc
xchg
inc
in
xchg
inc
mov
mov
and
icebp
mov
ja
dec
sbb
data16
sub
xchg
add
push
and
dec
test
sbb
jo
aas
in
imul
inc
push
dec
sbb
out
pushf
test
inc
(bad)
dec
mov
sbb
jb
in
not
xchg
add
xchg
(bad)
cmp
shr
add
(bad)
mov
dec
dec
mov
jg
xor
sbb
push
inc
lods
arpl
or
push
fsubr
imul
or
popf
cmps
push
jmp
addr16
aaa
in
(bad)
(bad)
cld
pop
jmp
jnp
push
lock
jnp
sar
aaa
lea
rcl
jmp
mov
sub
mov
and
(bad)
sbb
cmps
in
pop
aas
adc
pop
call
iret
daa
push
cld
pop
mov
cmps
fnstsw
pusha
cmps
lahf
jb
repnz
fiadd
inc
dec
outs
in
adc
push
lods
jmp
mov
out
call
jnp
sub
mov
sub
nop
arpl
or
xchg
pushf
nop
jnp
or
add
inc
cmps
aad
add
std
pop
cmp
xor
out
adc
hlt
xor
mov
or
push
fs
pop
adc
add
aas
sbb
push
int3
jg
dec
shl
xor
or
add
cmps
push
sbb
xchg
add
add
aas
(bad)
jmp
push
pusha
imul
fs
cs
and
xlat
jecxz
push
add
sbb
repz
pop
outs
jae
add
jae
push
scas
out
enter
or
packsswb
xor
aas
xchg
clc
stos
retf
mov
mov
mov
dec
aas
lahf
sub
(bad)
clc
loop
je
cmp
inc
adc
adc
mov
and
cmps
jb
nop
jg
xchg
cmp
out
dec
cmp
and
cmp
and
or
outs
push
je
or
and
add
nop
retf
pushf
adc
add
add
pop
inc
nop
and
pop
add
dec
in
enter
xchg
scas
(bad)
jge
jmp
mov
inc
(bad)
sub
jl
(bad)
dec
push
pop
ins
dec
jg
js
mov
movq
push
sbb
icebp
push
add
loope
pop
int3
or
cli
popa
mov
inc
out
out
add
les
(bad)
push
mov
mov
adc
cmp
push
pop
cmp
push
std
cmp
push
cmp
js
jmp
sbb
xchg
dec
adc
out
cli
fbstp
xor
lods
xchg
inc
adc
sub
push
sub
or
pop
jmp
add
xor
lods
pop
or
out
jbe
dec
out
or
jo
jns
dec
pop
fs
mov
lods
jl
xchg
push
xchg
pushf
out
adc
es
sbb
pop
cmp
jne
mov
pop
adc
(bad)
cmps
push
nop
or
loopne
jmp
nop
inc
push
sub
and
test
cmps
jp
push
sbb
and
cmp
add
inc
cmps
add
adc
out
pop
pop
fs
jae
add
and
js
aam
(bad)
(bad)
push
mov
mov
lds
xadd
out
inc
cmps
loope
jge
mov
jmp
les
xor
add
(bad)
mov
cmove
adc
fwait
xchg
adc
sbb
sbb
sub
xchg
fdiv
xchg
rcr
rol
jg
inc
jg
imul
add
mov
jg
sbb
jb
mov
and
mov
jbe
test
call
sahf
pop
inc
or
mov
lods
xchg
jnp
idiv
mov
xchg
iret
cmp
stos
ss
(bad)
inc
or
xchg
jmp
cmp
adc
pop
cmps
dec
out
in
std
fs
or
test
rcr
xor
sti
mov
push
dec
out
push
ds
(bad)
adc
popf
fisubr
leave
adc
imul
jmp
jmp
popa
lods
repz
dec
clc
aam
rcl
mov
and
daa
dec
fild
cmp
inc
call
int3
les
xor
aam
push
push
test
ins
lock
data16
mov
lds
ss
inc
clc
lahf
mov
imul
scas
div
(bad)
sahf
or
or
outs
std
xchg
cmps
mov
sub
add
dec
aaa
aas
inc
dec
jle
or
pop
inc
dec
adc
xchg
adc
mov
push
rcl
mov
mov
in
push
movs
jns
sbb
mov
inc
pop
outs
das
int3
nop
mov
mov
cmps
push
cmps
sub
in
fcomp
and
or
pusha
inc
loop
pop
add
push
(bad)
fmul
pop
or
inc
stos
sbb
jbe
lahf
or
jmp
out
nop
add
dec
jg
les
call
mov
mov
xor
xor
movs
adc
lods
push
movs
fst
sbb
ficomp
lods
cmps
fcomp
test
data16
or
jne
adc
addr16
out
xor
add
repnz
cmps
pushf
les
cmps
add
jae
cmp
xchg
daa
fucomip
mov
and
ror
push
int
arpl
xchg
dec
push
lods
push
mov
or
cmp
adc
push
xor
pop
dec
dec
sbb
cmps
xchg
cmps
jmp
mov
in
jp
mov
jnp
addr16
fadd
mov
cld
sub
loopne
in
mov
cmps
cld
jle
sti
imul
pop
inc
stos
lds
in
fdivrp
xor
mov
push
loop
ja
sbb
(bad)
pop
and
push
and
ja
ja
push
cwde
sbb
ret
sub
arpl
mov
fbld
scas
sbb
mov
sbb
jbe
ja
sub
xchg
retf
mov
lahf
stos
pop
and
inc
mov
(bad)
into
(bad)
sti
(bad)
dec
retf
cmp
imul
imul
pop
in
add
dec
popa
or
or
mov
(bad)
cmp
repz
(bad)
cmp
cmp
aaa
leave
cmp
inc
outs
pop
jns
xchg
jbe
std
cmps
pop
xchg
fwait
sar
cmp
pop
push
in
jmp
(bad)
pop
dec
cmove
cmp
cmp
push
push
cdq
in
cmp
daa
pop
add
xchg
retf
pop
sub
inc
pop
bound
in
push
(bad)
(bad)
jmp
add
inc
pop
lock
bound
sub
test
add
das
add
fild
std
dec
pushf
in
inc
out
ins
idiv
(bad)
jg
sbb
push
dec
lock
sbb
mov
aas
lock
dec
lods
mov
pop
stos
stos
mov
add
(bad)
mov
xchg
xchg
jg
xlat
cmc
push
lahf
into
pop
pop
cld
push
dec
pop
cmp
in
jg
out
jmp
inc
ror
push
jl
popa
outs
push
retf
add
neg
call
lock
repz
cmp
mov
mov
bound
add
adc
std
dec
(bad)
fstp
adc
(bad)
xchg
pop
pop
rol
mov
or
jbe
inc
cmp
xchg
(bad)
das
clc
inc
pop
jl
into
push
xor
pop
fstp
push
inc
mov
(bad)
mov
push
ficom
jmp
add
dec
test
xchg
cmp
adc
jmp
pop
or
lock
cmc
mov
dec
shl
or
pusha
mov
cs
sbb
test
std
inc
xchg
adc
mov
push
push
pop
mov
in
outs
adc
outs
nop
and
xlat
mov
loope
call
dec
cmp
mov
lods
inc
dec
scas
mov
loopne
sbb
call
fnstsw
pop
push
push
jno
push
in
je
or
dec
dec
movzx
loope
lods
hlt
push
mov
loope
cmps
loopne
pop
xchg
mov
pushf
es
stos
leave
call
xor
(bad)
mov
(bad)
pop
pop
fadd
mov
in
(bad)
jg
in
lock
jmp
adc
xchg
ret
sub
inc
rol
pop
sbb
cmc
xchg
mov
xchg
sub
or
mov
pop
sbb
xlat
push
scas
(bad)
mov
clc
jbe
cmp
dec
mov
add
fisttp
inc
pop
fldz
das
xchg
repnz
push
push
call
xlat
outs
rcr
sti
sbb
in
pop
mov
mov
in
in
jge
inc
or
jl
mov
neg
out
test
(bad)
push
adc
inc
sub
mov
sti
fsubr
shl
add
push
ret
ins
push
call
jne
shr
imul
(bad)
cdq
jo
sub
or
out
push
(bad)
cmp
int
iret
or
pop
(bad)
jns
lods
add
out
mov
pusha
add
bound
sti
mov
or
add
lock
inc
inc
(bad)
out
clc
mov
js
nop
shl
and
cld
mov
popa
sbb
(bad)
(bad)
out
jne
mov
xlat
dec
rcr
xor
or
pop
add
mov
call
cs
pop
push
(bad)
mov
(bad)
mov
call
xchg
in
xor
xor
(bad)
(bad)
stc
jmp
adc
cmp
add
inc
out
fldenv
sbb
gs
push
jbe
mov
daa
or
shr
xchg
push
fistp
dec
les
(bad)
fcomip
mov
cmps
lods
pop
(bad)
mov
leave
add
or
fdiv
jle
dec
fdivr
mov
inc
idiv
jg
es
sbb
fsubr
lods
in
gs
mov
ins
fwait
mov
popa
movs
adc
mov
xchg
add
pop
hlt
push
inc
dec
cmps
sub
cmp
cmp
mov
movq
xchg
pop
fistp
push
sbb
dec
pop
aam
jo
or
repz
mov
lahf
sbb
inc
gs
in
sub
or
idiv
inc
cmps
pop
es
inc
jle
jle
dec
sbb
lock
jge
fsub
fdiv
push
loope
cmp
das
inc
in
adc
clc
push
mov
xor
in
fprem1
lahf
pusha
add
mov
js
add
sub
bound
fdivrp
jnp
loop
pop
mov
cmps
sub
rol
push
outs
xlat
repz
add
clc
cmps
add
pusha
in
shl
lds
jp
mov
(bad)
call
pop
jbe
sub
jg
fcom
shl
shl
test
ja
xlat
sbb
es
test
shr
cli
pop
mov
fild
mov
bound
fdiv
jb
dec
jg
ds
mov
movs
aas
jo
in
bound
pop
and
sbb
fist
cmp
jb
sti
out
pop
push
repz
retf
lods
push
in
adc
fist
(bad)
aas
scas
into
mov
sub
xor
scas
mov
sbb
mov
pop
ins
fcomip
cld
cmp
dec
xchg
dec
out
into
adc
mov
dec
pop
cmps
xlat
mov
js
(bad)
(bad)
out
fistp
cmp
outs
out
pushf
mov
fist
loop
xchg
adc
scas
sar
movs
es
pusha
rol
pop
push
es
in
pusha
mov
aas
inc
mov
xchg
dec
adc
sub
dec
adc
(bad)
(bad)
jmp
xor
repz
inc
mov
mov
add
xchg
and
inc
das
jbe
pusha
sbb
aaa
cli
mov
push
(bad)
test
mov
inc
jle
jge
sub
mov
pop
and
inc
dec
and
pop
add
mov
aaa
(bad)
(bad)
call
aas
jg
jmp
repnz
add
pushf
pop
shl
into
push
idiv
adc
lds
mov
hlt
push
and
shl
shr
loope
lods
shl
aas
lahf
(bad)
out
jo
mov
(bad)
aaa
jmp
aas
sub
xlat
cmp
sub
sbb
cmps
jnp
ins
mul
xor
pusha
xchg
ja
adc
(bad)
jmp
push
(bad)
les
out
push
data16
retf
jnp
mov
rcl
outs
mov
in
fcomi
pop
ss
daa
int
int
ins
sar
push
sbb
(bad)
jecxz
in
scas
pop
jle
sub
ret
imul
lods
jmp
shl
jge
js
xchg
pop
mov
adc
dec
push
ja
outs
push
cmp
pop
sub
in
or
xchg
mov
mov
adc
inc
mov
ss
adc
pop
xor
mov
(bad)
cmps
cmps
or
fadd
outs
jne
leave
inc
cmp
or
pop
pop
or
jl
outs
mov
jg
cmp
sbb
xor
pmaxub
adc
loop
push
or
mov
icebp
stos
sbb
dec
adc
xchg
out
adc
push
jmp
mov
(bad)
(bad)
mov
inc
or
or
call
fwait
retf
gs
or
lods
scas
cmps
test
outs
sub
mov
int
mov
pusha
cmps
push
adc
cmps
mov
cmps
stos
mov
jb
jns
xor
mov
add
mov
adc
rcr
mov
imul
addr16
neg
inc
rcl
or
fldl2e
in
jmp
inc
out
cs
mov
and
les
loope
or
scas
inc
cmps
popa
and
or
scas
pop
inc
sbb
fucom
imul
dec
lods
jno
dec
aam
lods
test
call
push
test
test
cmp
sbb
push
dec
dec
pop
jmp
int
push
push
mov
sub
test
ficomp
in
aaa
lahf
inc
jne
mov
add
mov
hlt
aas
js
ja
mov
jne
out
test
sbb
cmp
jmp
push
adc
test
jne
shl
les
mov
loopne
out
or
adc
push
sbb
and
xor
sub
nop
or
(bad)
cmp
push
hlt
pop
call
pop
push
add
aam
xchg
mov
lods
ins
(bad)
aam
arpl
push
xor
nop
out
sub
jmp
jnp
sub
scas
push
cmps
jnp
jle
repnz
retf
xchg
push
cmps
xchg
push
lods
rol
lods
push
add
cmp
mov
sbb
cmps
lds
cmp
arpl
mov
pop
fiadd
jmp
mov
mov
or
sbb
mov
jecxz
cmps
test
and
jns
pop
push
dec
movs
out
popa
(bad)
hlt
dec
push
sbb
mov
sahf
add
dec
mov
fwait
mov
retf
add
(bad)
fcmovu
fs
ds
(bad)
cwde
fsubr
sbb
cmp
sbb
ja
pop
sbb
sar
ins
cmp
xlat
and
test
in
rcr
sar
in
push
daa
frstor
push
scas
out
sub
mov
sub
fnstsw
mov
jmp
mov
xchg
sahf
push
fchs
push
aas
fimul
mov
js
stc
mov
(bad)
add
mov
and
push
push
xlat
sbb
xchg
sbb
shl
fldenv
xchg
dec
push
xchg
fist
int3
inc
cmp
mov
mov
in
xor
retf
cmps
lea
inc
cmps
push
nop
(bad)
in
rcr
cs
xchg
sti
in
repnz
pslld
movs
pop
out
cwde
xchg
jb
out
mov
jmp
push
mov
dec
popf
xchg
rcl
cmp
aad
(bad)
repz
dec
dec
jge
or
xchg
fwait
retf
and
cmps
mov
sbb
cs
lods
xchg
mov
jb
mov
scas
cmps
mov
retf
or
std
fnstsw
jl
rcr
cmps
pop
sti
in
call
sub
inc
mov
sar
leave
mov
sbb
into
hlt
mov
push
cmps
pop
mov
jmp
sbb
test
mov
mov
imul
sbb
pushf
into
jl
mov
fsub
nop
ss
stos
push
push
dec
(bad)
(bad)
loope
outs
xor
xchg
loop
mov
pusha
(bad)
cmp
adc
add
(bad)
jle
cmp
adc
cmp
ret
movs
lahf
jbe
std
cmp
inc
retf
call
cmps
cmps
add
mov
idiv
cs
call
pop
mov
mov
scas
sub
call
cli
jmp
pop
lock
lahf
xor
mov
and
leave
rcl
repnz
sar
pop
ror
(bad)
xchg
jle
adc
xchg
inc
test
icebp
jg
jg
xor
xor
xchg
jg
push
jge
mov
pop
ds
in
popf
das
xor
in
test
lods
pushf
mov
inc
repnz
fistp
push
lods
adc
xor
fs
adc
in
pop
ins
or
es
lods
inc
pushf
sbb
jg
fs
pusha
cmp
fst
inc
out
mov
pop
push
pop
sub
sbb
and
pusha
xor
repnz
jb
pop
mov
dec
sbb
into
mov
nop
sub
pop
adc
call
cld
loopne
push
xchg
mov
sbb
sar
xor
addr16
in
outs
bswap
js
out
push
pushf
mov
add
(bad)
mov
sbb
rcl
sub
scas
aas
xchg
das
cld
idiv
fild
gs
add
sbb
mov
push
mov
out
in
pop
aas
pop
mov
inc
cmp
pop
jle
in
push
push
jmp
inc
pushf
lock
mov
(bad)
iret
sbb
push
aad
in
xchg
sub
cmps
fs
mov
(bad)
ss
xchg
lods
call
mul
adc
pop
push
push
lock
mov
loope
in
pop
sar
ins
pop
cmc
(bad)
sti
mov
cmc
pop
nop
out
ins
fsub
es
es
cld
cmp
inc
(bad)
jle
xchg
dec
out
mov
push
pop
in
not
push
cmp
scas
adc
inc
fld
cs
or
(bad)
lock
mov
push
in
pusha
(bad)
jge
sbb
shl
jle
adc
dec
jo
(bad)
clc
sbb
inc
sbb
outs
sbb
xchg
xor
cmc
cmp
lock
stc
ja
fistp
(bad)
pop
lock
xor
jbe
add
jle
dec
inc
jb
ror
(bad)
retf
jg
mov
sbb
sbb
mov
cmp
push
in
dec
ror
fdiv
add
mov
(bad)
adc
xchg
out
jmp
inc
push
adc
fldcw
or
call
rol
sbb
sub
in
lds
(bad)
mov
cmp
shr
aam
outs
jns
iret
push
push
ins
push
scas
js
cmovb
cmp
sbb
call
in
mov
imul
shl
xchg
aam
lds
jb
dec
mov
inc
inc
sub
lods
fiadd
mov
sub
mov
cmp
push
sbb
cmp
inc
xchg
xchg
inc
std
mov
loopne
dec
mov
repnz
xor
das
std
mov
sar
jge
jge
fdiv
std
(bad)
jg
(bad)
test
push
push
pop
xor
dec
loop
les
add
sbb
inc
jg
mov
mov
mov
sbb
hlt
mov
aas
mov
js
sbb
jle
pop
jle
lds
inc
inc
xchg
das
sbb
gs
in
fmul
xchg
jg
mov
push
fcmovne
sti
jle
lahf
adc
pop
imul
(bad)
sub
lods
mov
cmp
add
retf
push
jbe
push
sub
inc
xlat
mov
jmp
aam
and
sub
aas
add
out
pop
add
push
js
aaa
(bad)
fisttp
push
and
imul
mov
dec
inc
inc
mov
and
or
push
in
ss
pop
or
ror
xchg
and
imul
rcr
mov
shl
jg
icebp
push
lds
retf
clc
add
add
ficom
das
fwait
jbe
push
inc
adc
push
xor
and
cmp
mov
mov
cmps
cmps
aam
in
dec
mov
mov
sbb
iret
popf
cmps
cmps
pop
fisub
xchg
out
mov
push
(bad)
stos
rcr
je
rol
dec
test
int3
mov
fstp
mov
cmps
adc
sbb
jge
in
cmps
push
rcr
xchg
cmps
in
into
in
bnd
repnz
(bad)
fisub
xchg
xor
pop
es
push
dec
repnz
mov
cmps
clc
in
cmps
loope
int
movs
mov
out
jae
in
cmps
mov
cmps
outs
in
retf
dec
in
xchg
adc
jne
(bad)
cdq
in
cmps
cmp
iret
pop
pop
mov
and
movs
xor
(bad)
mov
fcmovb
inc
aam
push
loop
(bad)
and
pop
jmp
mov
cmps
(bad)
into
mov
push
xor
and
aaa
mov
jle
(bad)
int3
xlat
pop
rol
jecxz
out
inc
stos
outs
jae
scas
dec
cmps
imul
add
add
movs
ror
sub
fidivr
aaa
xor
retf
mov
cmp
mov
pop
sub
mov
mov
sbb
xor
mov
cmp
and
xchg
cmp
lahf
mov
mov
jae
push
dec
and
or
jne
jmp
mov
jne
ret
and
xchg
xchg
pop
dec
mov
sub
leave
mov
aaa
scas
pop
add
cmp
cmps
or
push
movs
add
and
push
sar
push
mov
cmp
mov
mov
pop
jle
fstp
js
xor
jmp
and
mov
xchg
jl
out
inc
mov
and
mov
jns
daa
jb
out
retf
pop
leave
pop
in
fiadd
in
mov
adc
pop
loop
bnd
enter
outs
fild
mov
mov
aaa
popa
sbb
adc
dec
xor
or
adc
sbb
xchg
out
and
adc
sbb
mov
push
call
dec
xchg
pop
inc
pusha
outs
push
mov
and
inc
mov
fwait
jbe
ror
adc
xchg
mov
add
stos
sbb
movs
stos
rcl
lock
xchg
push
ss
and
lods
js
lods
xchg
mov
test
mov
enter
das
push
cmps
ds
and
nop
mov
mov
push
mov
adc
xchg
dec
pop
in
dec
arpl
outs
mov
stos
imul
dec
ror
not
rcr
ss
xchg
fild
sbb
aam
xor
cmp
fidiv
leave
cmc
add
adc
xchg
push
dec
jg
jg
cmps
xor
mov
lds
fcmovbe
and
or
retf
scas
push
in
int3
or
(bad)
fcmovnu
pop
in
xchg
cmp
out
cmp
aas
adc
or
push
(bad)
mov
xchg
sub
(bad)
pop
jns
idiv
inc
lahf
adc
rol
std
xlat
xlat
mov
sub
pop
das
mov
add
(bad)
jecxz
popa
int
mov
inc
add
add
inc
out
or
int
mov
ja
mov
mov
lock
dec
cs
inc
lahf
sub
cmp
cmp
clc
iret
dec
sub
sub
fldcw
int
inc
(bad)
mov
push
push
aam
iret
mov
movs
mov
sbb
or
aad
outs
call
nop
inc
sub
mov
test
fdiv
dec
inc
imul
mov
loopne
sbb
cmp
hlt
fcom
jae
inc
or
cmps
lock
cmp
xchg
outs
mov
popf
ror
cwde
mov
add
or
out
mov
outs
adc
jg
or
icebp
adc
mov
xor
aad
cmps
push
fsubp
adc
rcr
imul
and
inc
rcr
fwait
add
push
jg
in
cwde
adc
or
nop
mov
xor
sbb
xor
dec
inc
mov
mov
mov
sub
pop
xchg
jb
retf
push
aad
lock
int3
xchg
fistp
int3
cmps
call
or
xlat
and
aad
imul
sbb
loopne
cmps
std
imul
adc
gs
fld
pop
mov
dec
xchg
push
inc
das
or
mov
sbb
pop
sub
xchg
fdiv
fistp
inc
ja
repnz
in
jo
les
or
push
push
ds
fucomp
jl
sub
push
mov
inc
push
pop
cmps
cmps
cdq
mov
imul
push
sahf
pop
pop
test
cmp
(bad)
jno
fisubr
ficomp
nop
cmp
(bad)
mov
mov
adc
fdivr
adc
leave
xchg
or
adc
daa
mov
lods
xchg
popf
adc
lods
pop
cs
leave
jg
leave
inc
repnz
test
int3
sub
pop
inc
addr16
xchg
push
aaa
cmp
fist
jbe
test
adc
push
push
inc
push
push
leave
ins
add
bsf
lods
jl
push
mov
or
lock
jmp
or
xchg
add
sbb
add
jns
repnz
push
cmp
pop
push
sub
sub
add
cs
ins
dec
add
les
cmps
ficomp
clc
inc
lods
cmp
rcl
xchg
or
out
int3
inc
sub
fsub
and
cli
enter
cmp
popf
cdq
jmp
xchg
addr16
sar
int3
jmp
lods
sbb
es
jg
clc
or
or
dec
mov
sbb
sub
jnp
outs
lds
test
cdq
daa
adc
sub
dec
cmps
jge
enter
inc
call
stc
xchg
mov
sbb
or
sbb
mov
pop
int3
aaa
clc
dec
std
hlt
adc
mov
sub
xlat
mov
and
ret
add
mov
fwait
(bad)
or
jmp
arpl
aas
adc
dec
dec
or
adc
mov
imul
mov
cmps
sbb
cmps
hlt
push
add
mov
cmp
neg
push
fistp
dec
sbb
ds
adc
mov
lahf
std
leave
mov
and
mov
mov
popf
sbb
cs
movs
je
cmps
dec
add
pop
xor
xchg
xor
adc
nop
xchg
cmc
jmp
push
jns
cmp
loopne
cmp
push
popf
mov
add
adc
mov
fisttp
xor
scas
lock
pushf
test
xchg
mov
jle
jmp
jecxz
add
add
mov
add
mov
sub
cld
push
push
sbb
shl
leave
hlt
xchg
fist
mov
mov
ss
in
dec
stos
mov
xchg
jno
rcr
cld
xchg
add
jecxz
xchg
push
lea
xchg
(bad)
and
and
mov
lods
scas
cld
test
neg
aaa
mov
cld
push
pop
sbb
add
and
add
pop
add
nop
sub
and
cmp
sbb
fimul
lds
dec
adc
mov
dec
je
lock
pop
push
aaa
(bad)
mov
jp
rcl
mov
repz
popf
bnd
(bad)
jmp
icebp
push
imul
cld
cmp
sahf
(bad)
mov
adc
ret
loope
js
xchg
adc
xor
push
mov
ins
push
mov
mov
fs
ja
dec
int
cld
xchg
xchg
and
pushf
push
(bad)
push
add
and
data16
or
inc
in
or
out
add
dec
xchg
rcl
stos
xor
jmp
jl
pop
xor
and
or
cli
push
pop
mov
dec
adc
xor
ja
fbld
ds
bound
mov
inc
aam
pop
cmps
add
dec
sub
dec
push
imul
xchg
shl
stos
fldenv
add
xchg
sub
repnz
stc
push
gs
fstp
mov
aam
mov
test
fstp
xchg
or
inc
xchg
cmp
ss
pop
stc
pop
clc
fisub
push
clc
ficom
push
xchg
xchg
arpl
sbb
call
xchg
psubusw
cmp
push
lsl
jnp
inc
cmps
xchg
mov
jbe
fimul
imul
cmp
mov
adc
dec
loopne
mov
imul
cmp
inc
push
nop
rep
inc
xchg
xchg
mov
fst
add
arpl
jae
shl
movs
cmp
sbb
cmps
sub
cmp
adc
jecxz
add
ret
inc
mov
push
xchg
aaa
xchg
xor
nop
and
pop
jl
test
cmp
jbe
neg
rcl
cmps
and
mov
cdq
addr16
call
lahf
mov
out
int
stos
jle
xchg
mov
fldcw
std
cmps
inc
retf
ret
cmps
adc
add
jecxz
mov
ins
push
inc
retf
(bad)
retf
adc
cmps
lahf
push
push
pop
push
jns
ja
cmps
retf
adc
jbe
sbb
mov
(bad)
pop
push
leave
add
repnz
mov
jl
mov
gs
xchg
ins
xchg
adc
fucomip
sti
loop
xchg
pop
sbb
cmps
adc
xor
jne
ins
cli
neg
and
dec
xchg
adc
daa
inc
ja
sub
repnz
cmps
adc
lock
mov
lods
ja
cmp
inc
mov
(bad)
sbb
jne
add
mov
loop
enter
pop
jae
adc
aam
aam
add
in
aam
aam
mov
jmp
aam
aam
mov
leave
pop
aam
aam
test
adc
in
retf
sbb
or
jo
movs
cli
pop
and
xor
mov
cmp
out
pmuludq
inc
lods
cmp
cmps
xchg
and
test
dec
hlt
aam
(bad)
push
cld
adc
jmp
mov
leave
inc
in
pop
xor
(bad)
mov
adc
cmp
xchg
push
and
or
push
add
imul
(bad)
jbe
retf
cmps
or
sbb
ror
sahf
test
mov
scas
jo
in
hlt
shl
push
and
sbb
fistp
push
pop
pop
mov
in
sahf
mov
xor
mov
jmp
and
pop
fnstcw
repz
das
and
mov
sub
mov
popf
pop
mov
mov
sbb
jns
gs
and
xor
movs
push
lods
adc
and
out
repz
xchg
ror
jb
fs
adc
xchg
ins
jo
sbb
imul
(bad)
adc
pusha
sub
lds
inc
jl
mov
sbb
hlt
mov
lock
dec
stos
inc
xchg
aaa
lds
sbb
in
daa
cmc
and
in
(bad)
xchg
sbb
adc
add
and
aam
imul
sub
mov
leave
je
ds
mov
js
and
js
(bad)
sbb
scas
ss
pop
xchg
jns
stos
movlps
arpl
movs
mov
sub
pushf
jo
adc
sti
pusha
pusha
or
adc
and
or
add
cmp
pusha
bound
jmp
lods
lods
adc
push
ficom
leave
or
pop
neg
pop
lods
cmps
dec
ins
mov
adc
lods
mov
aas
sbb
sbb
lahf
mov
das
rcl
sbb
and
out
inc
sub
mov
mov
add
cmp
aaa
mov
adc
adc
shl
mov
rol
out
dec
popa
xor
fld
pushf
out
jmp
ss
and
inc
(bad)
frstor
fsubp
or
xchg
jl
loop
mov
pop
gs
pop
rcl
xchg
(bad)
lock
(bad)
jmp
cmc
cmp
ret
not
repnz
jno
loop
or
in
ins
or
scas
(bad)
adc
sub
(bad)
mov
push
mov
(bad)
cmps
cmp
dec
sbb
cmp
mul
jg
ja
ret
test
mov
inc
and
repz
jecxz
lods
in
mov
lea
gs
xor
xchg
sbb
inc
add
ins
push
(bad)
jmp
aam
and
call
retf
or
(bad)
sub
add
js
aam
mov
sbb
or
adc
cmp
pop
push
mov
pop
cdq
cmp
xchg
loopne
add
or
ds
(bad)
mov
jbe
xchg
add
leave
xor
push
retf
loopne
stos
dec
xchg
fild
xchg
lods
sahf
(bad)
loop
or
mov
cmps
add
cli
enter
add
icebp
test
sub
ja
fsub
dec
inc
ins
mov
scas
xor
adc
sub
push
in
mov
dec
adc
and
xchg
push
xchg
jnp
inc
mov
xchg
mov
loop
retf
sub
xchg
into
cmps
inc
fs
lahf
xchg
leave
sahf
jl
dec
ficom
cmp
cmp
leave
inc
jnp
cmp
or
lahf
pop
scas
or
enter
repnz
(bad)
repnz
(bad)
es
push
mov
mov
(bad)
push
pop
stc
retf
pop
add
shl
loope
leave
scas
or
test
jge
jecxz
test
adc
lahf
(bad)
stc
sub
stc
call
scas
cmp
xchg
adc
mov
ds
fwait
push
clc
jmp
ins
and
aad
xor
sbb
out
int
mov
adc
and
ss
int3
fist
(bad)
call
jge
add
inc
cmp
sahf
(bad)
arpl
or
dec
cmp
mov
jl
ins
aaa
cmp
sahf
xor
cmp
xchg
enter
(bad)
inc
(bad)
jns
mov
lock
loopne
cmp
dec
and
mov
loop
(bad)
(bad)
(bad)
call
jg
push
popf
(bad)
jmp
adc
rcl
and
out
and
dec
ja
or
push
mov
popf
xchg
dec
xor
cmp
out
movs
inc
loopne
jmp
(bad)
(bad)
(bad)
(bad)
jmp
jno
add
sub
int3
mov
sub
(bad)
add
and
(bad)
fiadd
clc
in
push
inc
jmp
jbe
rol
mov
xchg
push
ins
jle
inc
jb
jle
iret
(bad)
(bad)
(bad)
inc
mov
adc
loop
and
imul
mov
(bad)
(bad)
mov
inc
clc
pop
aas
xchg
stos
or
inc
pop
cmp
dec
xchg
sub
into
jo
ror
leave
popa
cdq
mov
fisttp
inc
pop
in
imul
cli
cmp
std
cli
lahf
(bad)
jle
push
mov
xor
loop
pop
mov
mov
scas
xor
aas
adc
adc
inc
mov
add
bnd
(bad)
xlat
out
sbb
movs
add
xchg
push
pop
rcl
mov
(bad)
jmp
or
add
mov
mov
mov
or
imul
xchg
fnstenv
mov
xchg
sbb
jge
pop
sub
retf
int3
fmul
xchg
sbb
push
movs
add
sbb
dec
sbb
add
outs
retf
sub
mov
dec
in
data16
mov
sbb
js
fbstp
pop
aad
pop
jae
add
js
cmps
cmp
inc
mov
ja
not
sbb
outs
into
mov
je
adc
out
leave
mov
adc
pop
inc
ds
out
inc
aaa
add
xor
shl
sbb
mov
(bad)
xlat
or
add
push
call
mov
adc
adc
ds
or
push
pop
ins
rcl
hlt
outs
pop
ret
push
inc
or
sti
cmp
ror
movs
(bad)
sub
jp
in
out
rcl
out
cmp
cmp
rol
(bad)
cmps
xchg
fnstenv
js
xor
adc
outs
out
into
mov
pop
lods
cli
lods
js
ret
repnz
out
ds
test
gs
sub
and
dec
cmps
and
pop
mov
in
or
out
(bad)
rcl
sub
mov
or
or
and
inc
or
jb
out
fst
clc
pop
push
into
mov
(bad)
mov
cwde
inc
clc
mov
test
aaa
stos
adc
leave
or
scas
ret
out
lods
sub
js
or
clc
cmp
imul
pop
and
or
lea
ret
sahf
mov
sti
or
rcr
in
mov
inc
pop
add
rol
lds
jmp
test
adc
mov
retf
or
adc
xchg
repz
fld
call
push
xchg
clc
into
aad
adc
frstor
pop
push
jl
jp
retf
repnz
inc
sbb
xchg
popa
inc
cmp
pop
push
push
fs
inc
push
sahf
leave
push
stos
call
push
lea
dec
and
sub
lods
retf
je
and
and
fst
jmp
inc
jp
and
sahf
out
sbb
fldenv
jne
cwde
sbb
inc
lock
fild
repz
enter
cmp
mov
sbb
(bad)
push
(bad)
xlat
jae
retf
jecxz
adc
stos
cmp
clc
push
pop
fxch
lds
xlat
cmp
jge
hlt
ret
mov
sahf
mov
push
jns
dec
jmp
popf
cmp
jmp
jmp
mov
xchg
cmps
(bad)
(bad)
fisttp
push
fldcw
cmp
sbb
scas
fsub
add
dec
dec
test
mov
mov
out
adc
pop
cmps
rcr
cs
cmp
pusha
xchg
push
stos
mov
push
mov
push
nop
pop
jg
shr
out
mov
icebp
(bad)
sub
add
ror
mov
mov
mov
stos
push
sbb
push
add
or
mov
lds
lods
cmp
xor
aad
pop
xor
or
add
mov
fdiv
jb
das
ja
(bad)
mov
mov
xor
arpl
pushf
(bad)
jno
xor
inc
in
aam
sbb
jmp
clc
adc
sbb
add
or
ins
cmp
push
mov
pop
repnz
scas
cmps
add
mov
jmp
mov
mov
add
imul
lock
test
sbb
sub
push
sbb
test
(bad)
jp
fnsave
call
cwde
xchg
cld
fwait
push
ins
pop
sti
dec
xor
call
cmps
or
call
(bad)
shl
dec
fld
adc
inc
jle
push
nop
int
mov
or
and
and
xor
fs
scas
or
cwde
imul
pop
adc
les
mov
cmp
mov
or
out
loop
jecxz
loop
arpl
mov
stos
xor
push
stc
sti
fwait
cmps
cmp
mov
sub
shl
push
repnz
gs
nop
or
add
sbb
xor
retf
popf
add
stc
and
push
or
loope
xor
imul
hlt
cmps
ret
mov
sub
pop
jbe
dec
jmp
pop
mov
sub
in
call
pop
cmps
(bad)
mov
push
jb
aas
cmps
mov
jo
sbb
pop
shl
jge
dec
cmps
dec
ja
jo
or
cld
dec
cdq
scas
cmp
out
dec
ret
mov
ds
push
jmp
cli
aam
mov
push
aam
sbb
sub
sbb
xor
cmc
int
movs
jmp
sbb
or
cmp
daa
push
dec
cmp
pop
jp
or
lahf
stc
cld
sbb
dec
mov
pop
aad
dec
cwde
repnz
stos
fadd
dec
sbb
sub
add
int3
xor
shl
rcl
iret
xor
repnz
xchg
sub
xchg
aaa
xchg
lock
aaa
daa
iret
cmps
adc
enter
(bad)
jbe
(bad)
push
mov
nop
hlt
and
xchg
bswap
add
jae
out
push
in
add
popf
in
adc
jg
lods
cmp
fst
cmps
xchg
xchg
push
pop
ret
clc
fsubp
lds
ins
(bad)
push
popa
and
popf
mov
bound
xchg
aaa
push
inc
cmp
or
out
in
and
shr
cmc
sbb
inc
jle
ret
dec
popa
repnz
push
jmp
push
add
pop
cdq
pop
jp
sub
sub
pop
imul
mov
pop
mov
in
scas
int3
sar
mov
jb
mov
and
in
(bad)
push
sbb
mov
cmp
sar
or
ficomp
enter
mov
es
inc
pop
and
sbb
pushf
sbb
(bad)
(bad)
xlat
rcr
xlat
and
sub
xchg
pop
dec
push
cmp
mov
fstp
pop
mov
jmp
pusha
inc
mov
je
or
repnz
mov
push
inc
rcr
push
jmp
ret
inc
pop
jo
xchg
mov
sbb
rcl
aaa
mov
fsubr
cmp
loopne
jp
adc
rcl
inc
(bad)
(bad)
mov
pop
add
imul
xchg
xchg
push
shl
sub
(bad)
sti
test
mov
js
sbb
(bad)
out
xchg
and
rcr
pop
(bad)
dec
inc
imul
add
mov
je
mov
test
jl
popf
repz
xor
adc
fmul
adc
adc
dec
adc
pop
sub
outs
hlt
scas
imul
ins
adc
push
iret
dec
sub
mov
loope
xchg
test
(bad)
adc
lods
lock
int
shl
in
test
jnp
add
pop
adc
rcr
adc
xchg
mov
cld
icebp
shl
movs
aam
xchg
add
loopne
push
mov
add
sbb
aad
bswap
test
(bad)
fs
adc
shl
push
add
aad
xchg
lock
cmps
addr16
push
xchg
div
pushf
pop
pop
imul
test
and
or
clc
call
test
sbb
mov
les
loopne
ds
rol
jle
push
xchg
test
xchg
outs
pop
jmp
test
test
pop
ja
jno
pop
fidiv
ja
nop
scas
sub
cmp
inc
inc
xor
jmp
ds
int3
cs
mov
lods
mov
test
ret
aad
mov
cmps
scas
cmps
leave
xchg
iret
jne
lods
(bad)
or
xchg
fidivr
stos
jle
push
fidiv
sub
dec
stos
dec
dec
neg
pusha
xchg
add
pcmpgtb
lock
popf
jl
movs
adc
inc
je
cmp
and
jecxz
and
sbb
dec
dec
loope
fimul
(bad)
call
(bad)
out
cmps
push
push
clc
je
lds
aad
jae
xor
shl
xchg
div
xchg
mov
xor
sahf
sbb
mov
or
addr16
xor
sub
pop
imul
cmps
add
mov
dec
(bad)
loop
popa
aaa
pop
sbb
cmps
mov
cmps
(bad)
dec
lods
mov
or
push
pop
fisubr
inc
icebp
push
cmps
or
repnz
test
mov
pop
or
das
scas
adc
imul
adc
int3
fadd
or
ja
mov
(bad)
cmps
sub
push
or
cmps
sub
jg
lahf
sub
pop
iret
mov
push
sub
cs
ficomp
stc
movs
push
jne
lods
fild
inc
xchg
sbb
mov
mov
xchg
retfw
mov
scas
fidivr
pop
pop
jp
int3
adc
xchg
sbb
pop
inc
xchg
jmp
dec
jmp
stc
mov
loope
iret
rcr
sub
lock
into
xchg
pop
pop
(bad)
jmp
test
add
enter
dec
popa
cmps
cmps
fcomip
xchg
xor
xor
stos
enter
jno
mov
bound
inc
xchg
mov
sbb
in
dec
jno
scas
adc
lods
js
outs
or
fnsave
xor
inc
gs
push
pushf
mov
cmp
dec
jnp
lods
and
lods
xor
test
rol
das
(bad)
rcl
sbb
sbb
or
cmp
sbb
frstor
ficom
adc
xchg
mov
inc
mov
add
fisubr
pop
cmp
and
jne
call
mov
in
xchg
push
idiv
sub
jb
push
mov
xchg
pop
cmp
stos
jg
inc
mov
js
push
or
retf
retf
lock
shr
adc
push
out
add
jl
sbb
or
adc
sub
push
lods
ret
loope
inc
or
jnp
jle
dec
cmps
adc
rcl
jnp
adc
mov
jcxz
xchg
and
shr
or
pop
push
mov
lahf
aas
xchg
add
sbb
mov
xchg
push
sub
stos
inc
inc
mov
pop
add
pop
ins
out
retf
ins
into
inc
ja
dec
sub
cmp
loop
adc
sbb
es
sbb
adc
add
push
inc
stos
daa
repnz
mov
xchg
mov
pop
jge
in
add
cmp
push
mov
fimul
push
sbb
aam
mov
pusha
in
or
adc
fadd
fwait
mov
jno
cmp
je
push
pop
js
xchg
inc
sbb
or
dec
add
xor
jg
push
mov
lods
and
std
and
into
test
dec
test
inc
push
xlat
cmp
mov
and
jno
sti
jl
sbb
loop
ins
xlat
dec
sbb
cmc
or
ret
popf
or
icebp
jle
pop
mov
mov
and
dec
pop
fwait
cwde
stc
sbb
(bad)
(bad)
mov
scas
popf
mov
cmps
cmps
movs
pop
lods
jg
jl
call
pop
ja
xor
(bad)
(bad)
inc
jnp
mov
add
cli
clc
xchg
pop
cmp
dec
test
mov
push
rcl
cdq
fucom
sahf
int3
imul
icebp
xor
and
hlt
mov
(bad)
fs
aad
sbb
mov
inc
call
push
sub
add
stos
cmps
rol
mov
cmps
js
in
leave
loopne
loope
call
(bad)
(bad)
(bad)
jmp
mov
pushf
lock
in
test
pusha
jle
gs
bnd
(bad)
(bad)
inc
xor
sbb
fistp
jb
fprem1
fcom
jmp
aam
or
lahf
bound
jbe
(bad)
(bad)
(bad)
jmp
pop
dec
inc
push
and
add
sub
int
movs
push
adc
loop
or
xchg
mov
(bad)
(bad)
dec
test
dec
mov
adc
sbb
not
and
(bad)
fild
mov
jmp
mov
pop
inc
dec
outs
rol
jmp
ret
stos
pushf
and
jecxz
or
push
and
or
adc
jl
dec
jmp
adc
pop
add
add
jmp
cmp
inc
rsm
adc
stc
inc
adc
cmp
mov
nop
rcr
(bad)
mov
(bad)
cmp
in
adc
pop
mov
push
ins
sar
fsubrp
push
jno
mov
cli
imul
sub
call
jmp
add
push
mov
dec
and
pop
jmp
and
(bad)
sar
mov
in
stos
mov
in
push
lss
jmp
imul
mov
das
jge
jge
mov
inc
cld
and
stos
adc
imul
xchg
repz
adc
cmc
add
adc
pop
ret
jl
adc
js
fldpi
cdq
mov
loopne
imul
jo
add
inc
dec
xor
dec
xchg
add
fild
sbb
or
add
ror
(bad)
fstp
sbb
sub
add
push
mov
imul
icebp
sbb
ds
es
je
and
loop
xchg
ret
jp
stos
pop
daa
(bad)
retf
jp
and
dec
or
cmps
jae
fs
mov
mov
jl
pop
lock
pop
inc
mov
fisttp
scas
jg
loope
xchg
ss
cmc
jmp
inc
not
shl
inc
mov
ss
fdivr
imul
sbb
outs
repz
or
sbb
push
xchg
mov
mov
inc
cmp
push
js
scas
jns
test
adc
adc
fcmovnb
pop
ret
mov
dec
sbb
fstp
inc
pop
inc
mov
dec
mov
fwait
test
and
xchg
(bad)
shr
mov
cdq
cs
jecxz
(bad)
sub
cld
jo
ret
retf
cmp
lock
repz
sbb
add
aad
jp
jmp
mov
je
(bad)
imul
mov
fist
movs
cmps
push
fmul
nop
into
jo
sbb
cwde
adc
add
pop
nop
xlat
cld
add
cmp
into
out
mov
mov
neg
shr
in
(bad)
cdq
jnp
adc
xor
out
xchg
fmul
aam
mov
pop
sar
rcr
xor
inc
xchg
add
inc
ss
push
add
cs
xor
jge
mov
adc
adc
cmp
jmp
cli
sete
das
loope
ja
xor
cmp
push
out
rcr
add
cmps
sar
and
or
call
(bad)
jno
mov
test
dec
cmc
cli
add
jb
inc
add
cmp
sbb
sub
push
push
hlt
jmp
pop
outs
fwait
ret
shr
js
lock
cmp
jmp
movs
sub
cmps
loop
mov
in
jmp
cdq
push
mov
dec
mov
cmp
in
retf
inc
fwait
or
lock
push
popf
cmp
aam
or
adc
daa
xor
or
idiv
sbb
call
imul
and
inc
loop
wbinvd
loope
shr
lds
sub
mov
frstor
adc
or
mov
inc
cmps
xor
cmps
dec
stos
(bad)
cmp
out
jb
xchg
add
lds
sbb
pop
mov
addr16
add
psadbw
fmul
mov
push
(bad)
sub
or
aaa
jns
or
lea
fisttp
and
call
sbb
pop
cmps
xor
cmps
xchg
fprem
push
or
movs
push
into
cmps
sbb
stos
adc
cmp
adc
dec
sbb
mov
stc
jl
aas
jle
movs
cmps
add
jbe
xor
pusha
(bad)
cs
sbb
shl
and
adc
mov
sbb
test
push
mov
mov
or
ins
sub
cmps
xlat
pusha
or
or
dec
mov
iret
stos
and
out
idiv
push
jp
push
loopne
dec
fcom
sub
sub
push
imul
rcl
ror
xlat
aaa
mov
adc
rcl
sbb
inc
call
dec
cmp
push
and
mov
inc
and
add
inc
push
movs
jge
stos
(bad)
inc
fstp
int
xor
cdq
pop
bnd
sar
div
pop
jmp
jge
mov
jne
xchg
dec
out
dec
pop
scas
in
sbb
daa
sar
push
in
inc
sub
fwait
mov
(bad)
ins
fwait
icebp
pop
fadd
push
pop
push
xor
sub
sar
movs
int
cmp
cdq
pop
or
jle
pusha
or
enter
pop
mov
and
xlat
adc
movs
cmp
xor
int
outs
loop
stc
xlat
and
or
adc
xor
sub
adc
pusha
mov
push
sbb
xstore-rng
cmps
inc
rcr
cmp
or
cmp
pop
das
push
push
push
pop
dec
inc
add
enter
xchg
inc
mov
and
out
retf
ins
lahf
ins
leave
repz
xchg
mov
xor
sub
loope
std
sub
int
sub
xor
pop
or
inc
clc
hlt
ret
cmp
inc
cmps
add
out
mov
enter
cmps
icebp
lock
scas
cmp
and
es
(bad)
xor
push
or
inc
dec
cwde
retf
push
pusha
repz
rcr
(bad)
mov
cld
stc
dec
loope
xchg
in
das
iret
push
ffreep
js
enter
(bad)
loop
mov
dec
sub
mov
or
xchg
mov
icebp
mov
xchg
mov
jl
jmp
icebp
pop
xor
les
add
jmp
fstp
ss
imul
cmp
sbb
cmp
fcomp
fistp
jmp
xor
add
pop
dec
retf
out
mov
aaa
mov
and
cmp
adc
pushf
push
inc
pop
sub
neg
call
repnz
loop
fnsave
fild
xor
repnz
jl
mov
add
or
loop
pop
jne
mov
xor
or
push
pop
outs
and
mov
sti
push
cwde
pop
pop
or
xchg
xchg
xor
ror
push
lods
sub
cmp
jns
repz
mov
movs
ja
push
loopne
jecxz
js
pop
mov
xchg
cdq
popa
mov
push
or
in
fadd
(bad)
lock
inc
in
jo
jnp
cmp
ds
pop
repnz
mov
sahf
mov
(bad)
(bad)
(bad)
into
in
and
repnz
cmp
cmps
adc
cs
lods
add
(bad)
mov
std
je
popa
fwait
push
ret
jle
je
sti
xchg
or
daa
pop
push
lods
lahf
adc
xchg
pop
(bad)
inc
movs
sbb
aam
cmps
addr16
sti
mov
sahf
and
test
fistp
and
popf
or
daa
cmp
test
sbb
mov
inc
sub
paddusw
(bad)
stos
jl
and
sub
je
mov
call
mov
jmp
and
clc
push
dec
mov
pop
sub
ja
pop
test
dec
arpl
and
and
sbb
enter
mov
loopne
enter
sub
lods
fstp
pop
and
jge
sub
loope
inc
and
add
fist
sti
add
push
push
imul
aam
es
test
jg
adc
push
jmp
xchg
add
les
frstor
mov
ds
and
lock
push
imul
xchg
or
add
push
(bad)
mov
lock
cmp
mov
push
fiadd
push
cmp
sbb
jnp
movs
test
sbb
call
sti
mov
aam
fisttp
adc
cmps
xchg
retf
jmp
cmp
mov
movs
stc
fs
and
sub
add
or
mov
mov
dec
adc
jnp
jl
scas
jmp
iret
loopne
out
call
lods
es
mov
int
xor
mov
pop
mov
mov
lods
cmps
aas
not
jne
sub
jo
xor
pop
sub
fistp
aaa
adc
pop
cld
mov
sub
aad
mov
push
scas
add
mov
add
inc
call
or
pop
sub
mov
sub
mov
or
fild
(bad)
leave
leave
jge
adc
lahf
xor
lods
adc
mov
in
jp
mov
jbe
lahf
mov
cli
fdivr
cmp
mov
mov
mov
fisttp
cmp
sbb
dec
imul
dec
adc
sti
sbb
pop
scas
add
push
xor
dec
sbb
and
sub
(bad)
(bad)
jmp
(bad)
push
cs
dec
cs
xchg
or
fcom
or
adc
push
popa
loopne
imul
aam
mov
dec
ret
xor
aas
imul
adc
mov
in
stos
sbb
add
rol
adc
mov
add
ss
test
xchg
mov
mov
call
or
mov
lods
jl
repnz
sti
enter
add
fst
inc
ss
mov
fwait
(bad)
loope
xchg
inc
nop
and
aad
inc
push
repnz
add
xchg
push
jecxz
xchg
push
sti
xchg
inc
loopne
(bad)
xor
in
xchg
test
aaa
imul
xor
add
add
inc
icebp
outs
ins
jbe
or
dec
movs
jae
std
xchg
fst
jae
or
lds
or
lock
adc
or
call
mov
arpl
or
inc
xlat
mov
ret
popf
sub
dec
sub
xchg
cmp
cs
cmp
mov
lods
add
gs
lock
or
cwde
mov
nop
(bad)
enter
mov
leave
pushf
mov
xchg
pop
cmps
mov
adc
inc
mov
fidivr
jg
icebp
mov
xchg
lock
pop
je
add
push
shl
retf
imul
pop
(bad)
adc
xor
push
cdq
inc
mov
out
(bad)
in
xor
scas
and
ficom
das
push
stc
fadd
and
sbb
jo
popf
xchg
(bad)
inc
int
add
jmp
pop
xchg
add
sbb
add
xor
pop
(bad)
cmp
fisttp
sub
icebp
xor
sahf
scas
fucomip
or
fiadd
cs
dec
sub
and
push
(bad)
dec
dec
(bad)
jnp
push
mov
adc
mov
sbb
add
pop
or
mov
cmps
or
sub
cmp
push
stos
push
sbb
sar
ret
ds
mov
and
inc
dec
cs
popf
call
add
pushf
jns
xchg
sub
mov
nop
xchg
adc
cld
(bad)
out
ret
mov
pop
arpl
leave
popf
push
push
clc
cs
jle
lahf
gs
xchg
mul
jecxz
imul
or
cmc
push
or
pop
push
cmpps
data16
mov
cmp
cmp
cmps
loopne
cmps
jle
xchg
rcl
adc
xchg
sti
dec
popa
xchg
into
inc
sar
ret
mov
mov
inc
loop
fsubr
aam
imul
imul
cmp
cwde
lds
fbld
aas
in
mov
imul
es
imul
repz
sub
aas
sahf
push
cmps
inc
fcom
mov
mov
call
xchg
in
xchg
fild
inc
and
mov
sub
or
xchg
fdivr
or
xchg
not
jge
(bad)
xor
adc
cmp
push
ret
pushf
sbb
adc
stos
lock
and
and
dec
add
mov
inc
or
push
das
inc
pop
mov
movs
(bad)
loope
mov
cwde
dec
sub
pop
cwde
test
jae
inc
push
or
cs
add
push
das
(bad)
outs
(bad)
(bad)
cmp
test
push
je
jp
xor
out
mov
je
xlat
test
test
gs
jmp
fld
inc
add
movs
mov
and
push
bound
nop
ja
inc
lahf
adc
dec
add
or
push
push
xlat
mov
ret
arpl
jecxz
test
mov
xchg
xor
into
pop
xchg
xchg
sbb
mov
cld
sub
psubb
in
and
fdivr
mov
je
pop
sub
sub
push
sbb
mov
bnd
(bad)
xlat
pop
leave
xor
xchg
sub
loopne
or
test
das
shr
jp
pushf
fld
fsub
ins
mov
(bad)
push
sbb
adc
mov
loopne
xchg
mov
adc
ficomp
xor
xchg
(bad)
int3
pop
stos
gs
test
lods
mov
xchg
pop
test
iret
popf
mov
jno
mov
or
lock
inc
mov
cmp
sbb
test
push
into
je
push
add
adc
jmp
repnz
mov
pop
test
push
(bad)
fs
cmp
fmul
(bad)
dec
int
verr
cmp
xchg
repz
loop
fst
into
out
push
pop
add
adc
or
mov
fild
dec
cmps
xchg
sar
xchg
mov
sbb
ss
vmread
adc
pusha
mov
xor
aas
inc
cmps
stos
movs
rcr
sbb
push
push
sub
cmp
xchg
(bad)
dec
inc
imul
movs
(bad)
cmps
sub
mov
sub
adc
cmp
nop
in
mov
pop
or
retf
mov
cmps
sbb
pop
cmp
pusha
out
mov
sub
int
push
mov
and
shl
and
(bad)
arpl
dec
cmp
push
scas
or
sbb
or
out
test
je
in
repz
xor
xor
pop
and
leave
dec
mov
(bad)
aad
push
sbb
push
push
jp
xchg
adc
xchg
jo
push
jns
xchg
sbb
test
shl
mov
jo
retf
push
int
add
jmp
push
and
cmc
aam
cmp
jbe
loopne
inc
movnti
js
xchg
out
in
adc
retf
sbb
lahf
mov
sbb
aam
fisttp
test
dec
jp
pop
add
int
push
test
les
add
imul
lea
in
(bad)
test
idiv
jge
push
adc
psubsw
out
lock
sub
xor
cmc
inc
cli
add
inc
outs
loope
or
pop
adc
fadd
sub
stc
or
call
scas
cmp
mov
in
add
movs
repnz
popf
cmps
and
xchg
cmps
daa
add
dec
dec
adc
pushf
retf
enter
movs
xor
inc
sbb
scas
pushf
cld
xchg
mov
dec
mov
xchg
jp
and
(bad)
daa
loopne
or
adc
jmp
inc
sbb
push
imul
test
or
push
push
xchg
add
fwait
mov
(bad)
std
sub
inc
std
(bad)
dec
hlt
je
cmps
pop
add
cli
push
popf
arpl
xor
xor
(bad)
es
xchg
xchg
popf
push
ins
out
ret
pop
pop
aaa
prefetch
xchg
int3
or
sbb
dec
in
out
xchg
adc
cli
ins
ins
xchg
and
and
cli
push
ret
xor
adc
iret
retf
pushf
or
dec
add
popf
and
sti
rol
push
add
sbb
loop
adc
pop
int3
cmp
sbb
adc
aaa
or
scas
and
add
jb
or
data16
sub
adc
in
jmp
mov
jmp
fsqrt
lahf
pop
outs
enter
js
sbb
jmp
ret
fcomp
adc
sbb
xor
ds
(bad)
mov
fld
imul
mov
stos
sti
sbb
dec
fsub
(bad)
add
xchg
mov
out
imul
mov
andps
test
popf
std
lods
push
and
or
je
xor
mov
sub
enter
push
rcr
xchg
push
data16
adc
pop
xor
jbe
mov
rcr
pushf
mov
sti
and
push
or
arpl
in
inc
adc
mov
cld
sbb
sbb
cmp
fistp
xchg
sbb
or
push
fldenv
scas
cli
lods
sub
imul
leave
imul
pop
lahf
cmp
in
adc
xchg
fldcw
imul
imul
jmp
mov
cmps
mov
lds
ret
push
leave
dec
inc
sti
push
sub
hlt
rcr
mov
dec
mov
xor
or
(bad)
sub
dec
shr
retf
in
pop
sub
mov
ins
inc
pop
popf
xlat
xchg
sub
les
adc
ss
or
inc
fsub
daa
loope
lock
movs
mov
call
int3
xor
fwait
div
int3
outs
xchg
mov
or
mov
in
ins
iret
out
adc
lock
(bad)
or
lds
sub
enter
lahf
gs
nop
daa
xchg
das
or
gs
and
add
or
sub
fild
sub
je
sahf
and
push
enter
mov
fs
add
adc
pop
in
mov
and
and
imul
add
lods
js
mov
sub
ja
outs
xor
pop
scas
repz
cmc
cmp
cmp
xchg
imul
imul
mov
cmps
adc
xor
or
int
test
test
(bad)
rcr
jb
lods
repz
movs
mov
push
fisttp
xor
nop
mul
stc
sahf
inc
stos
push
sub
les
push
sbb
dec
ds
sub
popf
je
cmc
movs
jecxz
cmp
popa
fs
pop
cmp
and
in
xchg
inc
push
add
lock
add
xchg
jb
or
bound
ss
pop
movs
inc
jno
mov
or
sahf
in
jle
fcomi
inc
push
sbb
pop
fbld
mov
adc
sbb
pushf
js
aam
(bad)
jg
ror
xor
adc
jbe
retf
cmc
cmp
and
into
sahf
cmp
arpl
inc
ja
jb
sahf
pop
pop
mov
inc
pop
push
dec
adc
sbb
inc
push
jns
jmp
xchg
sbb
lahf
and
jmp
add
pop
ins
rcr
sbb
sub
or
jg
jg
fstp
ss
xlat
xor
rcl
sbb
xor
aam
(bad)
(bad)
aas
(bad)
call
inc
cld
ins
fsub
push
mov
sti
cmp
(bad)
sbb
imul
dec
dec
jg
push
fsubr
ds
mov
push
aam
(bad)
(bad)
(bad)
jmp
sub
cli
fsubr
push
push
dec
pop
lea
pop
in
repnz
aad
cwde
add
(bad)
fisttp
cs
pop
and
push
inc
pop
into
push
lea
inc
cld
or
pop
(bad)
fild
fistp
push
push
inc
cwde
mov
rcr
pop
mov
push
out
aas
in
mov
xchg
fist
push
dec
xor
(bad)
mov
and
call
jae
add
and
xor
jno
div
mov
inc
push
sbb
mov
fcmovnu
sbb
ins
cld
cmp
lock
inc
jbe
or
cmp
push
dec
push
cwde
es
movs
fmul
(bad)
xor
cld
stc
push
int
cmp
aam
jno
dec
mov
fdivr
xor
pop
sub
or
lock
jae
aad
jg
xchg
add
inc
pop
stos
jo
test
shl
enter
fwait
xchg
iret
mov
rcl
xchg
mov
out
xchg
popa
sub
and
dec
ret
ins
pop
push
daa
mov
outs
fs
cdq
xchg
hlt
(bad)
(bad)
lods
sbb
or
and
shl
jge
mov
add
das
in
xor
aad
xlat
mov
sti
jmp
and
hlt
and
in
idiv
push
aam
(bad)
cwde
inc
cmps
add
or
jle
dec
xchg
fwait
mov
cmps
outs
dec
sbb
jnp
mov
add
cs
push
jle
shr
mov
cdq
ficomp
ss
(bad)
sbb
push
xchg
push
movs
aas
call
dec
fcom
inc
mov
cmp
(bad)
pop
movs
imul
adc
dec
(bad)
sbb
fsub
dec
rcr
cld
call
mov
xchg
mov
push
cmp
inc
push
pop
jg
icebp
loopne
xor
dec
push
call
or
mov
push
push
dec
call
mov
lea
bound
lea
pop
cld
outs
xchg
fistp
cmp
aaa
inc
mov
call
add
cmp
cs
aam
push
or
mov
sar
data16
push
sub
dec
je
adc
call
cmp
(bad)
icebp
mov
push
ins
aaa
inc
daa
adc
(bad)
aas
push
jnp
pop
fucomi
adc
daa
mov
push
in
inc
sbb
outs
es
stos
pop
push
cmp
dec
sti
mov
imul
not
mov
xchg
cmp
inc
(bad)
bound
jl
leave
xchg
xchg
or
repz
(bad)
imul
dec
xchg
cmc
jbe
ficom
pop
pop
sbb
pop
fsub
jbe
adc
loope
scas
jmp
mov
imul
push
jmp
mov
xchg
ins
cmove
or
adc
cld
adc
push
test
out
test
inc
mov
(bad)
mov
cmp
repz
addr16
mov
shl
sbb
shr
xor
mov
jbe
mov
push
ins
xor
jge
sbb
xchg
out
es
imul
bound
or
push
out
xchg
ret
xor
out
bound
jle
ins
mov
loope
push
fisttp
push
mov
or
adc
jecxz
mov
repz
cmps
sbb
data16
into
data16
jg
bound
bound
sti
adc
ss
int
cmp
sbb
mov
mov
add
test
push
mov
xchg
sub
cmps
inc
rcr
mov
sbb
xchg
push
ins
xor
xchg
xor
ins
mov
sub
and
(bad)
push
fs
and
inc
out
xor
int
fldcw
cmp
sbb
sub
cmc
or
and
push
repz
mov
push
in
jae
fwait
xor
xor
add
mov
cmps
repz
fs
ror
mov
xor
xor
data16
and
mov
mov
enter
call
rcr
mov
sahf
data16
scas
sbb
mov
inc
push
sahf
test
push
lea
fsin
jge
cmp
sar
aaa
push
mov
xor
adc
inc
out
popf
xchg
repz
mov
pcmpgtd
push
inc
mov
inc
adc
imul
int
and
dec
add
push
inc
clts
int
imul
cmp
adc
ins
push
pop
mov
lea
add
dec
adc
dec
mov
pop
jl
fisubr
add
fwait
mov
pop
fcomp
and
xchg
nop
dec
cli
push
xchg
mov
daa
fwait
mov
outs
xchg
test
xchg
call
dec
scas
imul
ins
fdivrp
outs
xchg
dec
jmp
pop
stos
mov
mov
sbb
push
js
dec
das
ins
nop
fnstenv
mov
sub
(bad)
xchg
(bad)
dec
iret
jnp
or
das
mov
push
jge
jle
cmc
shr
pop
xchg
(bad)
xchg
mov
sub
fld
fist
xchg
sbb
cli
or
movs
or
(bad)
pop
mov
dec
fdivp
shld
out
adc
into
push
pop
and
xchg
adc
jg
jg
and
sub
sub
nop
icebp
adc
rcr
out
div
(bad)
adc
out
inc
pop
push
test
sbb
ret
adc
mov
(bad)
rol
cmps
inc
inc
inc
adc
mov
stos
scas
es
fdivr
adc
adc
xchg
inc
fcomp
scas
lds
repnz
xchg
mov
mov
cmp
sbb
jmp
lea
gs
cmps
jne
dec
push
lds
add
and
lahf
push
shl
(bad)
fadd
shr
add
push
js
and
(bad)
xor
mov
cmps
aas
in
and
out
sub
or
jge
xchg
mov
repz
popf
mov
int3
loope
pop
mov
iret
push
aam
mov
hlt
mov
pop
jl
nop
xchg
add
or
jno
push
and
pop
fidivr
cmp
jle
adc
jl
cmp
mov
scas
loop
in
fdivrp
and
cmps
xor
movs
lock
pop
adc
hlt
dec
mov
add
cmp
sbb
cmp
xlat
mov
popa
jae
ss
jle
outs
jae
dec
pop
jg
xor
fild
pcmpgtw
cmp
and
mov
in
in
mov
test
mov
mov
mov
lods
inc
jge
imul
out
mov
stos
arpl
sbb
jge
cmps
ins
fldenv
jmp
dec
mov
cs
cmp
(bad)
push
sbb
mov
push
fiadd
push
pop
fidiv
sub
mov
mov
ret
sbb
ins
cld
rcl
fs
push
sbb
sub
jo
mov
loop
ror
popf
mov
idiv
stos
leave
ds
or
stos
jo
retf
xchg
clc
bound
sub
cld
fcomip
dec
pop
loopne
mov
fsubrp
push
dec
(bad)
shl
lods
adc
jnp
adc
mov
xor
stos
out
cmps
out
xor
in
imul
jmp
mov
mov
bound
or
cmp
imul
sub
test
adc
dec
xchg
xchg
dec
jbe
jmp
sbb
loopne
hlt
jae
xor
adc
(bad)
(bad)
and
lock
dec
dec
cmps
mov
hlt
cmps
in
or
je
xchg
and
pop
stc
inc
adc
lods
xchg
mov
dec
cs
je
xchg
cdq
jae
and
xor
jae
sbb
mov
cmp
jbe
xchg
test
add
leave
cmps
sar
inc
iret
dec
jo
dec
(bad)
cmp
je
jns
loop
inc
retf
in
jns
je
inc
repnz
mov
dec
add
ss
rol
stc
inc
outs
sbb
inc
add
mov
scas
xchg
pop
lods
ja
or
inc
pusha
cmp
push
fs
enter
rcr
inc
inc
pusha
xor
outs
add
xchg
stc
adc
shl
jne
jge
ds
and
mov
stos
jns
popf
in
inc
aad
mov
or
push
stc
cld
mov
sbb
or
lock
sub
(bad)
xchg
pop
jbe
and
aam
jo
mov
xchg
dec
sbb
in
push
push
sub
movs
test
inc
nop
mov
cwde
sbb
inc
inc
lds
fdivr
jmp
cmp
push
not
cli
mov
pushf
clc
cwde
xchg
call
push
out
sub
push
movs
jmp
bound
int3
jno
xchg
pop
add
adc
inc
int
push
fcmovnu
outs
push
movs
pusha
loopne
rcr
inc
arpl
mov
popa
adc
xor
repnz
jp
sbb
or
mov
aam
shl
pop
inc
repz
pop
std
repz
add
sbb
xor
sub
jne
add
test
cmp
adc
jbe
xchg
jbe
lods
call
or
ret
lahf
lods
(bad)
push
inc
adc
fisub
or
add
xlat
sbb
sub
sbb
jb
repz
push
lods
mov
lea
and
push
leave
push
in
nop
xchg
adc
outs
pop
sbb
or
and
cmps
inc
rol
add
inc
jp
retf
mov
das
shl
test
in
scas
pop
aad
fnsetpm(287
in
sbb
outs
xor
fimul
mov
leave
and
push
(bad)
dec
nop
ror
add
push
mov
and
outs
mov
ficomp
mov
cmp
dec
push
fidivr
xchg
mov
aaa
fbld
push
jnp
mov
xor
repnz
push
adc
mov
inc
pop
(bad)
mov
or
(bad)
int3
and
sahf
adc
jmp
push
xor
out
loope
jp
xchg
lods
sar
leave
out
(bad)
add
pusha
pop
pusha
or
repz
dec
scas
ffreep
ret
add
leave
(bad)
mov
into
mov
out
in
repnz
imul
xchg
repnz
pop
sbb
(bad)
int3
and
push
outs
and
ins
add
mov
clc
jg
mov
inc
test
sbb
cs
dec
push
xor
cmp
cmp
xor
cmp
cmp
es
sti
sub
xor
add
sub
int3
nop
(bad)
adc
adc
push
test
push
dec
pop
sti
les
ret
pop
cli
xor
(bad)
pop
cmp
push
ds
push
sbb
add
mov
cmp
div
sti
movs
cmp
mov
sbb
pop
jnp
cmps
leave
inc
inc
test
stos
cmps
js
clc
outs
sbb
cs
and
js
mov
test
retf
push
imul
dec
icebp
adc
cld
mov
or
test
lods
gs
sbb
or
int3
pop
ret
push
aas
push
fild
pop
cwde
fcomip
and
xor
cwde
cs
mov
adc
mov
push
jle
call
rcl
inc
xor
or
or
and
enter
cmp
imul
adc
jb
shl
add
imul
mov
into
pop
pop
inc
mov
fcmovnb
mov
imul
mov
jno
pop
movs
in
enter
pop
adc
mov
inc
shl
movs
arpl
mov
xchg
inc
mov
nop
lods
out
enter
rcl
push
fdivr
enter
(bad)
adc
lods
or
jne
xchg
mov
call
loope
push
dec
fwait
cli
daa
pop
pop
pop
xchg
add
and
dec
mov
push
jbe
outs
inc
mov
add
movs
cmp
sbb
or
and
in
cs
jmp
fwait
pop
pusha
pusha
sti
cmp
call
imul
add
jno
test
inc
add
xor
and
ror
or
jne
in
rol
(bad)
(bad)
shl
in
in
sti
and
bound
jmp
pop
into
pop
inc
jmp
dec
inc
aas
mov
dec
pop
ja
cli
cs
pop
dec
inc
dec
outs
dec
push
cmp
push
inc
push
inc
push
dec
sbb
sbb
sbb
xor
sbb
or
jmp
outs
jae
js
jb
fdiv
js
mov
cmp
cmp
xor
sub
cmp
push
push
dec
dec
push
push
inc
pop
pop
push
push
push
in
cwde
xor
aam
inc
data16
call
pop
pop
inc
inc
dec
ja
popa
js
je
outs
outs
jbe
jns
pop
jb
xor
ss
push
push
push
aaa
cmp
aaa
cmp
sbb
cmp
xchg
imul
push
ss
jno
adc
(bad)
imul
ror
dec
add
inc
mov
cmps
das
cmp
outs
nop
inc
sub
popf
es
jb
and
adc
call
pop
(bad)
iret
iret
rcl
xchg
dec
mov
test
sub
adc
pop
arpl
neg
add
mov
mov
pop
mov
in
mov
(bad)
stos
dec
lahf
pop
jmp
mov
jno
xor
xor
and
mov
cmp
cmp
push
add
ret
jns
sub
dec
mov
je
add
mov
movs
mov
mov
sbb
dec
ins
xlat
jmp
out
enter
fs
cmp
pop
loope
fst
sbb
movs
mov
push
mov
sub
jge
dec
(bad)
retf
cmps
and
adc
shl
out
je
jl
xchg
mov
fadd
dec
cld
jl
fistp
movs
(bad)
mov
pop
mov
cmps
mov
or
push
sub
leave
icebp
sti
xchg
mov
shl
data16
adc
xchg
retf
push
(bad)
stc
push
ins
std
imul
push
cmp
mov
retf
enter
jp
(bad)
scas
lds
mov
mov
pop
or
mov
sbb
xor
mov
xchg
xchg
xchg
pop
cmp
inc
pop
jbe
stos
sti
push
and
(bad)
cwde
push
pop
and
jbe
ficom
imul
jo
mov
cmp
mov
cmps
adc
call
sar
loopne
loop
lods
push
xchg
retf
in
push
sbb
push
inc
cdq
mov
fsubr
inc
arpl
xor
mov
adc
inc
test
pop
adc
push
cmp
push
dec
test
cmp
ret
aaa
add
pop
mov
xchg
xor
adc
(bad)
mov
and
sbb
in
mov
mov
fcomp
jb
pop
addr16
inc
mov
sti
adc
add
cmp
sbb
es
retf
mov
mov
adc
cmps
retf
in
shr
pop
sub
call
push
sbb
cs
scas
xchg
outs
aad
nop
mov
pop
sub
xchg
add
xchg
xlat
add
jo
adc
adc
adc
(bad)
xlat
and
dec
cmp
pop
cmp
adc
xchg
mov
push
sub
xchg
dec
and
add
cwde
fadd
xchg
mov
or
aad
jecxz
enter
sahf
repnz
mov
cmps
or
pop
add
jmp
inc
pop
pop
pop
sub
pop
lock
inc
scas
adc
popf
bnd
scas
(bad)
cwde
adc
inc
ds
push
clc
xchg
mov
dec
shl
push
nop
cmp
mov
sub
sbb
inc
in
mov
cwde
cmp
push
adc
cmp
in
ins
mov
xchg
pop
cmps
shl
mov
mov
iret
jge
gs
jp
mov
adc
xor
imul
pop
jbe
dec
jmp
rol
jmp
and
pop
fsub
fdiv
sub
ins
xor
scas
xor
lock
and
inc
icebp
icebp
int3
retf
sub
inc
push
xchg
int3
popf
fild
ins
out
popa
or
inc
pop
sub
push
xchg
jl
adc
je
aam
in
jmp
in
mov
inc
sbb
into
mov
clc
xor
pop
xor
(bad)
sub
movs
adc
pop
inc
dec
daa
das
stos
ret
xchg
les
dec
loopne
int3
mov
jmp
hlt
lods
and
xor
xchg
push
in
cmps
adc
les
xchg
outs
jne
rcr
adc
sbb
test
int
pop
pop
fnstcw
sbb
imul
mov
ja
jl
add
es
lea
and
retf
mov
imul
push
ss
(bad)
adc
adc
les
dec
mov
adc
or
pop
js
stc
(bad)
leave
pop
loopne
pop
or
push
and
xor
lahf
pop
out
inc
ret
sbb
inc
out
sbb
pop
icebp
dec
mov
rcr
movs
cmp
jae
xor
fist
lods
scas
jle
fsubp
mov
jge
xchg
dec
fimul
in
mov
loop
sbb
jp
push
xor
mov
add
inc
xchg
fiadd
add
push
ins
fld
data16
in
in
or
cmp
pusha
in
add
sub
adc
dec
push
push
popa
lock
adc
lods
arpl
jno
ja
aaa
and
scas
(bad)
stc
retf
imul
jmp
sbb
pop
xchg
push
mov
cmp
pop
and
and
ja
push
mov
scas
adc
sbb
mov
cmp
adc
call
cmps
inc
aam
or
pop
push
pause
mov
xchg
xchg
inc
jmp
add
test
movs
cmp
cmps
jmp
sub
jmp
icebp
fisubr
jmp
in
arpl
cmp
xchg
sbb
shr
adc
add
pop
push
jne
test
mov
popa
ss
gs
je
jmp
data16
pop
das
add
or
xchg
movs
push
mov
jmp
or
shl
cmp
icebp
xor
movs
inc
mov
movs
test
in
adc
dec
cmp
jb
ja
imul
cmp
stos
daa
sbb
int3
stos
adc
jmp
aam
retf
imul
cwde
push
pop
jmp
aaa
(bad)
push
cmp
pop
loopne
scas
cmps
jle
pop
pop
repnz
adc
adc
popa
(bad)
arpl
push
cmps
gs
mov
sar
push
inc
rcl
push
pop
pop
out
in
xchg
and
(bad)
call
loopne
xor
dec
mov
popa
cs
fcmovbe
jbe
sub
mov
and
pop
in
test
sub
icebp
add
in
pop
mov
fdiv
dec
sbb
jp
push
mov
mov
jmp
aaa
or
push
repnz
push
xchg
pushf
imul
daa
pop
imul
daa
retf
aas
push
add
inc
sbb
pop
mov
xor
push
and
mov
enter
mov
inc
push
shl
repz
pop
push
dec
dec
mov
xor
push
mov
sbb
(bad)
fimul
inc
ret
cmp
fsubr
pop
fs
int3
and
mov
fild
cmp
loope
imul
jno
pop
jb
in
daa
mov
and
jb
wrmsr
loop
cmps
mov
pusha
movs
mov
adc
retf
das
fidivr
std
cmp
(bad)
cmps
outs
call
pop
shr
ret
adc
rcr
hlt
and
int3
jmp
dec
push
mov
or
lock
sbb
push
ror
inc
repnz
mov
xchg
or
jo
std
xor
cmp
push
push
out
xor
lock
call
sub
mov
cmp
(bad)
pop
add
push
cmp
inc
pop
push
dec
mov
dec
or
lods
gs
sub
xchg
cmps
mov
mov
sbb
push
sbb
aam
inc
call
rol
push
idiv
cmps
inc
jns
push
mov
loopne
add
sbb
and
jns
push
push
adc
aas
mov
pop
in
movs
or
mov
mov
jnp
clc
jno
in
nop
push
sbb
mov
js
outs
sbb
pushf
inc
(bad)
jmp
jmp
stos
jg
lahf
dec
retf
or
test
xlat
or
sub
push
pop
inc
ds
call
(bad)
shl
aad
in
test
out
fdivrp
jne
sub
cdq
je
push
adc
in
(bad)
(bad)
fild
loopne
scas
jecxz
shl
mov
sub
arpl
fiadd
cld
add
into
adc
mov
mov
pushf
push
test
in
loopne
push
arpl
arpl
and
je
sub
aaa
sub
adc
adc
es
das
or
and
repnz
outs
das
cmp
movs
fild
adc
pop
adc
or
pop
not
sti
rcl
sub
jno
repz
lods
ja
inc
ds
fcom
mov
jmp
sbb
(bad)
pop
and
xchg
and
ss
stos
dec
leave
xlat
add
or
mov
xchg
jl
sub
jnp
iret
and
inc
jb
dec
bswap
xor
mov
loopne
and
sbb
xor
aad
push
imul
jno
adc
ins
enter
dec
push
std
push
mov
(bad)
cmp
sub
retf
and
mov
sti
sbb
movs
sbb
push
rcr
iret
cmps
ds
shl
push
rcr
sub
cld
push
shl
pop
sub
scas
int3
cmps
inc
call
addr16
push
in
add
imul
xor
fist
cmc
push
repnz
movs
jmp
adc
push
pushf
cmp
enter
jb
push
inc
pop
sahf
inc
movs
inc
jmp
mov
mov
xor
mov
sbb
dec
ds
add
stc
mov
mov
(bad)
push
sbb
dec
or
cmps
scas
push
movs
add
iret
add
sbb
in
dec
out
push
jl
cwde
lds
add
jmp
push
(bad)
push
(bad)
cmps
mov
sub
dec
movs
movs
ret
and
mov
dec
xor
nop
xchg
or
stos
xchg
retf
mov
adc
push
test
stos
addr16
jb
pushf
push
pop
popf
nop
xchg
pop
aaa
leave
popa
push
jmp
in
movs
shr
cwde
add
pop
push
cs
(bad)
xor
jbe
mov
push
mov
mov
add
mov
retf
cmp
jl
pop
dec
mov
or
cmp
push
fild
xchg
retf
in
push
outs
pop
adc
sub
push
test
cmp
jb
mov
cmp
push
rol
push
mov
inc
fist
fbstp
nop
retf
cmp
xor
cmc
cmp
nop
cmp
xor
retf
xor
repnz
enter
fistp
push
jns
pop
or
outs
push
sub
xchg
or
lea
sub
sub
mov
mov
sahf
outs
adc
test
cmp
retf
add
xchg
inc
and
outs
int3
fstp
xchg
outs
bound
cdq
dec
outs
pop
or
add
sbb
jb
pop
add
add
mov
cmp
or
mov
in
vshufps
lahf
adc
in
sbb
mov
scas
stos
in
dec
in
jno
cmps
xchg
dec
in
jbe
inc
cmps
mov
cs
mov
popf
mov
xor
and
iret
push
push
test
cmc
mov
push
shr
pop
rol
repz
jb
pop
xchg
outs
xor
adc
int3
xchg
int3
inc
sub
das
xchg
mov
fst
mov
test
sub
shr
push
mov
in
repnz
mov
dec
aad
jl
dec
gs
out
mov
cdq
mov
retf
gs
mov
mov
cs
sub
aad
adc
(bad)
fild
sbb
xchg
mov
jge
push
jns
or
cmp
mov
adc
mov
aaa
jmp
fst
push
mov
jl
adc
fs
std
inc
pop
movs
xor
xchg
pop
xor
scas
dec
ins
aaa
jb
cmps
push
repnz
cs
adc
jge
pop
ret
rcr
sub
imul
dec
popa
cmp
mov
das
xchg
mov
cmp
jb
in
mov
inc
pop
pop
mov
pop
mov
add
nop
xchg
daa
adc
in
fwait
bnd
repnz
cmp
cmp
inc
pop
push
repz
icebp
cmp
enter
add
fwait
outs
cmp
in
cmp
cmps
aaa
jne
push
sahf
mov
repnz
leave
enter
fwait
(bad)
mov
or
aaa
add
push
sahf
mov
into
mov
les
cmps
dec
js
mov
xchg
mov
add
xor
mov
inc
jmp
jecxz
sbb
push
dec
jnp
call
xchg
and
ret
xchg
xor
push
enter
adc
xor
and
or
xchg
xchg
push
cmp
aam
pop
cmps
inc
shl
retf
loopne
cmps
inc
xor
ds
push
and
cmp
out
pop
pop
retf
adc
pop
retf
mov
dec
inc
outs
arpl
sti
fmulp
sub
lock
and
xor
mov
push
xchg
dec
jge
push
sub
dec
mov
call
rcr
push
sbb
push
sahf
imul
lods
push
xor
cmps
(bad)
shr
xor
inc
in
dec
adc
add
jmp
or
or
jle
mov
or
rol
jge
jp
adc
xor
sbb
mov
daa
push
xor
inc
inc
cli
mov
jae
sbb
ss
pop
sub
jbe
outs
je
sbb
pop
sub
mov
jnp
aaa
add
xor
je
and
push
push
jbe
push
jmp
(bad)
xor
ins
in
fs
cs
add
aas
fwait
in
mov
cmps
push
dec
xchg
xor
sbb
jmp
test
dec
and
push
jns
bound
or
outs
push
or
inc
das
push
nop
xor
dec
(bad)
sbb
mov
push
push
sahf
cmps
cmp
cmps
push
push
dec
mov
push
jns
out
dec
jbe
leave
sti
out
sahf
out
in
sar
int
push
es
iret
repz
sti
mov
in
stc
cmp
repz
cmp
sahf
cmps
push
xor
jns
push
add
cmp
repz
cmp
cmp
repz
in
mov
mov
pop
push
cmp
cmp
repz
mov
iret
popf
mov
es
dec
addr16
jge
(bad)
add
jns
cmps
rcr
pop
cmp
repz
push
pop
jp
repz
repz
mov
iret
cmp
mov
mov
inc
jp
ror
repz
add
repz
jmp
iret
repz
shl
rol
stc
cmp
adc
or
xor
out
sahf
out
jl
out
in
out
sahf
ror
mov
cmp
repz
pop
sbb
iret
repz
iret
repz
xchg
(bad)
mov
repnz
cmp
repz
mov
push
iret
repz
sub
cmp
pop
cmp
repz
ins
(bad)
jge
imul
mov
jns
out
inc
addr16
dec
out
xor
int3
adc
add
bound
dec
les
add
xchg
aas
jle
cmp
pop
add
push
add
sbb
repz
jnp
repnz
mov
push
cmps
rol
push
je
dec
jbe
adc
loopne
jns
int
push
scas
push
push
sub
out
cmp
popf
push
sbb
jp
dec
jns
ins
mov
mov
push
mov
out
jns
adc
iret
push
or
fdivp
fdivp
es
ss
mov
sti
es
push
mov
iret
cmp
add
in
cmps
es
adc
push
jbe
push
push
push
lods
ss
lock
out
add
sub
fisubr
adc
push
scas
cmp
jns
cmp
cs
push
in
or
mov
sahf
out
lock
push
shl
sar
into
jp
out
sbb
push
pop
ds
push
push
iret
mov
jnp
jae
sti
in
xchg
jle
adc
lds
ins
outs
and
leave
sar
jns
jns
(bad)
int3
push
leave
scas
pop
je
int3
out
jo
xchg
fdivp
xchg
addr16
jbe
push
es
inc
retf
out
or
mov
jl
mov
dec
xchg
xchg
sbb
iret
inc
push
in
fdiv
inc
add
cmp
cmp
ss
mov
sbb
repnz
popf
ss
mov
dec
leavew
ds
cmp
(bad)
push
sbb
mov
mov
add
mov
jns
es
push
pop
push
sbb
cs
push
aad
pop
cmps
pop
jns
pop
div
addr16
js
push
jp
dec
pushf
sar
push
push
and
ror
inc
pop
addr16
test
cmps
push
or
loopne
push
adc
push
outs
dec
(bad)
(bad)
imul
rcr
mov
jns
add
cwde
mov
daa
retf
xor
fwait
pop
rol
xor
and
repnz
enter
in
out
call
sbb
cwde
jbe
ins
test
out
sahf
mov
and
cmp
repz
sbb
cmp
rep
(bad)
mov
mov
loopne
iret
ror
mov
adc
jns
fild
push
sbb
pop
push
dec
je
dec
sahf
out
jl
int3
rol
bnd
cmps
mov
sub
cmp
push
pop
dec
jp
neg
imul
(bad)
mov
jns
jns
bound
jne
outs
jp
jns
push
arpl
test
outs
fs
fidiv
data16
dec
popa
and
jne
imul
ss
and
fcmovne
mov
jns
push
imul
fisttp
ror
jbe
je
bound
imul
dec
gs
lahf
pop
lock
or
fisub
jae
push
and
pushw
in
adc
push
xchg
xor
ficom
xor
adc
ins
call
fcmovu
std
shl
jns
jne
jecxz
popa
je
adc
jg
push
int
cmp
xor
stos
inc
push
ins
cmp
jne
outs
jne
jns
add
push
fisub
sub
jnp
mov
pop
ss
or
pop
mov
push
fild
jo
adc
ins
cmp
cwde
nop
push
push
outs
addr16
inc
jns
test
and
xlat
outs
out
inc
ficom
inc
mov
and
neg
loopne
add
outs
imul
dec
gs
or
pop
pop
pop
and
shl
jp
or
push
inc
sbb
mov
pop
and
push
cmp
ss
in
inc
ficomp
(bad)
ffreep
pop
push
push
jbe
bound
pop
arpl
pop
or
inc
jns
push
daa
(bad)
pop
outs
inc
mov
mov
mov
add
cmp
push
sbb
push
xor
addr16
push
imul
lahf
idiv
ret
(bad)
xchg
cs
sub
push
xor
add
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
(bad)
(bad)
jmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
(bad)
(bad)
(bad)
jnp
or
sub
xor
xor
pop
xor
pusha
xor
arpl
fnsave
mov
movs
(bad)
(bad)
(bad)
jg
xor
cld
sbb
pop
xor
mov
cmp
cmp
cmp
cmp
stos
cmp
(bad)
(bad)
cmp
xor
or
xor
jns
ins
xor
enter
mov
push
nop
xor
xchg
xor
push
aaa
sbb
xor
ds
push
aaa
inc
aaa
pop
aaa
addr16
(bad)
(bad)
push
fs
xchg
aaa
sti
aaa
ret
aaa
mov
aaa
or
cmp
cmp
cmp
cmp
aas
das
(bad)
(bad)
push
imul
jge
cmps
cmp
cmp
cmp
cmp
inc
inc
mov
inc
mov
mov
popa
ds
ds
into
lea
and
push
cmp
dec
movs
cmp
cmp
sar
cmp
ror
xor
xor
xor
xor
dec
or
xor
xor
xor
xor
xor
xor
xor
xor
and
sub
xor
pcmpeqd
jno
jmp
xor
xor
jno
addr16
xor
xor
ss
jg
or
push
sub
xchg
ret
xor
or
xor
(bad)
(bad)
call
xor
cmp
cmp
pop
cmp
cmp
xor
cmp
aaa
xchg
cmp
aaa
aam
pushf
aaa
push
aaa
cmp
aas
or
sub
sub
push
paddd
or
jno
mov
cmp
cmp
rcr
cld
(bad)
jmp
inc
rol
inc
push
ds
xlat
cmp
cmp
inc
sti
mov
dec
xor
xor
xor
xor
sahf
pop
cld
(bad)
jmp
xor
pop
xor
je
popa
xor
xor
xchg
stos
xor
xor
xor
push
xor
dec
mov
jecxz
inc
test
cmp
loopne
xchg
fdiv
pushf
xor
xor
xor
cmp
inc
ss
test
inc
call
arpl
enter
stos
cmp
push
popf
xchg
sahf
xor
aaa
xor
(bad)
(bad)
(bad)
jne
bound
xchg
xor
xor
and
or
ss
(bad)
(bad)
cmp
dec
ss
ss
ss
ss
mov
div
in
jmp
into
fist
xor
xor
inc
xor
ja
fnsave
mov
(bad)
(bad)
(bad)
jmp
xor
xor
xor
cmp
cmp
dec
cmp
imul
cmp
(bad)
(bad)
(bad)
fnstsw
stc
cmp
cmp
cmp
cmp
cmp
mov
and
sub
(bad)
mov
inc
test
iret
inc
mov
retf
inc
and
and
inc
pop
ds
ds
ds
outs
enter
aad
int3
shl
(bad)
(bad)
ds
ds
cmp
cmp
cmp
cmp
mov
cmp
xchg
cmp
xor
xor
(bad)
(bad)
push
pop
xor
cli
xor
xor
xor
xor
xor
xor
xor
lock
(bad)
jmp
ss
imul
out
daa
xor
xor
ins
xor
call
jb
pop
and
push
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
(bad)
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aas
cmp
dec
aas
pop
aas
fcom
or
aas
loopne
cmps
aas
clc
aas
aam
sbb
(bad)
mov
cmp
cmp
cmp
inc
sbb
inc
(bad)
jg
call
xchg
inc
fwait
inc
test
inc
push
ds
ds
mov
fidivr
xchg
ds
pop
cmp
jle
mov
mov
out
mov
pop
push
or
xor
and
pop
xor
xor
xor
xor
xor
xor
(bad)
jmp
cmp
(bad)
pop
xor
sahf
js
mov
scas
xor
add
push
lods
inc
inc
xor
adc
sbb
inc
cmp
jmp
cmp
cmp
cmp
cmp
xor
xor
jb
add
xchg
mov
cmp
cmp
cmp
xor
call
cmp
outs
and
(bad)
cmp
cmp
cmp
cmp
aas
cmp
jnp
adc
cld
(bad)
(bad)
cmp
cmp
cmp
test
inc
xchg
inc
rol
xchg
ds
jmp
(bad)
jmp
cmp
cmp
ds
cmp
xor
clc
jns
popa
cmp
call
aas
mov
xor
xor
cli
jns
(bad)
cmp
pop
mov
mov
push
add
xchg
xor
bound
xor
xor
dec
std
call
push
outs
xor
fwait
xor
ss
ss
xchg
mov
call
add
mov
xor
xor
call
pusha
cmc
xor
xor
pusha
cmp
xor
(bad)
(bad)
push
mov
popf
xor
cmp
cmp
cmp
icebp
cmp
cmp
xor
jg
(bad)
push
bound
lahf
aaa
into
aaa
mov
cmp
jl
(bad)
cmp
(bad)
(bad)
inc
inc
inc
inc
mov
ds
sub
pop
cmp
mov
cmp
loopne
add
xor
cmp
xor
fist
push
xor
xor
xor
(bad)
xor
sub
dec
sub
xor
pop
call
mov
ss
push
push
mov
test
cmp
mov
cmp
test
xor
xor
movs
xor
cmp
lahf
(bad)
(bad)
(bad)
cmp
xor
cmp
inc
xor
repz
aaa
mov
cld
aaa
xchg
aaa
push
aas
dec
hlt
adc
aas
arpl
xchg
aas
out
scas
cmp
cmp
imul
in
pop
in
inc
pop
xor
sar
iret
les
push
cmp
sub
mov
xor
xor
je
jmp
xor
shr
sbb
inc
xor
int
icebp
xor
ss
mov
push
(bad)
jp
outs
pop
xor
xor
mov
int3
cmp
ret
pop
pop
(bad)
push
pop
xor
stos
xor
push
push
push
mov
imul
std
mov
cmp
mov
fistp
call
add
mov
jge
mov
pop
xor
xor
into
(bad)
(bad)
call
push
xor
ss
xor
dec
xor
xor
or
dec
cmp
cmp
cmp
xor
xor
ins
and
cmp
cmp
push
xor
test
sbb
cmps
(bad)
jmp
jmp
call
ds
jle
fimul
mov
cmp
adc
jl
(bad)
fcmovb
xor
pop
shl
jecxz
jg
and
push
xor
xor
jg
push
icebp
(bad)
loop
xchg
cmps
xor
div
stc
xor
xor
adc
mov
cmp
and
mov
mov
sahf
fnstcw
sar
retf
mov
aas
xor
mov
out
and
pop
jg
cmp
pop
cmp
cmp
xor
std
dec
lds
sub
aas
inc
aas
pop
aas
nop
cmp
cmp
stos
dec
add
cmp
lods
cld
inc
clc
jmp
xor
xchg
xchg
xor
xor
xor
sub
xor
xor
shl
loopne
mov
xor
cmp
cli
jg
xchg
std
cli
cmp
xchg
mov
push
sar
inc
cmp
cmp
imul
cmp
out
repnz
js
(bad)
jl
aad
mov
std
xor
xor
outs
ror
inc
push
jmp
retf
xor
xor
sub
add
loopne
mov
inc
adc
xor
xor
adc
jg
lds
sbb
xor
mov
xor
xor
xor
dec
jne
xchg
cmp
xor
aad
das
aaa
pop
aaa
mov
call
cmp
cmp
push
or
xor
inc
cmp
cmp
inc
push
inc
or
dec
add
sbb
mov
mov
sar
push
sbb
aaa
cmp
mov
nop
ja
aaa
loope
js
xor
pop
jmp
mov
sar
or
(bad)
xor
dec
inc
ss
mov
xor
or
cmp
cmp
jle
(bad)
push
cmp
cmp
fwait
xor
rcl
xor
xor
fisttp
push
pop
cmp
cmp
adc
(bad)
(bad)
inc
jp
mov
lods
aaa
shl
aaa
scas
aaa
(bad)
dec
cmp
cmp
cmp
cmp
(bad)
(bad)
inc
cmp
aas
addr16
stos
aas
fidivr
ret
cmp
cmp
repz
cmp
inc
push
ret
ds
out
ds
cmp
adc
add
add
jno
pop
cmp
inc
xor
(bad)
jne
mov
or
shl
adc
pop
jmp
inc
pop
loopne
xor
pop
xor
xor
xor
pop
inc
test
xor
cld
xor
jbe
int
(bad)
repnz
add
sahf
cmp
inc
cmp
jp
movs
ss
in
lods
outs
ret
addr16
xor
fadd
shl
jg
retf
cdq
cmp
cmp
push
add
ja
add
xor
xor
retf
jmp
das
cmp
mov
pop
cmp
mov
adc
or
push
pop
sbb
xor
test
xchg
xchg
mov
aaa
mov
or
ss
cmp
cmp
cmp
fild
pop
out
jmp
or
and
aaa
aas
pop
aas
jns
ja
(bad)
aas
sti
aas
loope
mov
fnstcw
popf
aas
jmp
pop
push
cmp
cmp
fnstsw
test
repnz
daa
inc
sub
inc
bound
mov
mov
inc
fs
add
(bad)
cs
add
sub
inc
push
ds
mov
addr16
ins
ds
call
fnstsw
outs
mov
stos
lock
out
mov
shl
out
ds
repnz
jne
retf
cmps
(bad)
jae
adc
data16
call
call
add
xchg
inc
mov
mov
xor
popf
xor
xor
lods
xor
xor
xor
cmp
inc
inc
push
adc
and
pop
xor
xor
fild
xor
xor
xor
xor
mov
cmp
cli
inc
xor
ds
loopne
push
data16
jp
xor
xchg
xor
outs
(bad)
aad
xor
cli
jmp
retf
aad
scas
in
xor
jl
mov
xchg
xor
out
shl
xor
xor
xor
cmp
ds
sub
add
and
add
adc
mov
pop
xor
xor
push
mov
dec
xor
pop
es
push
loop
xor
push
xchg
mov
(bad)
(bad)
dec
jl
mov
jmp
adc
aad
out
xor
xor
inc
mov
shl
xor
xor
ret
mov
mov
adc
and
pop
ss
sub
cld
fisttp
or
pop
ss
fistp
xchg
push
fiadd
ss
ss
ss
loope
cmp
jp
push
cmp
scas
les
out
push
xor
push
jmp
pop
(bad)
sbb
push
push
je
jp
xor
xchg
xor
xor
push
call
and
inc
mov
mov
xor
xor
xor
mov
sub
add
lods
xor
jbe
jg
cmp
cmp
cmp
add
sub
push
repnz
mov
dec
jl
cmp
xor
cmp
cmp
(bad)
jmp
dec
cmp
jbe
je
jp
cmp
out
les
ins
cmp
(bad)
(bad)
jl
mov
(bad)
jg
bnd
mov
sar
aad
out
cmp
cmp
jg
inc
push
sar
cmp
cmp
cmp
cmp
cmp
cmp
xor
xor
xor
xor
add
sub
push
xor
or
repnz
xor
loop
xor
dec
cmp
push
xor
push
xor
inc
xor
pop
xor
jbe
clc
inc
cld
xor
xor
ins
xor
or
push
(bad)
xor
xor
xor
xor
mov
mov
xor
xor
push
in
xchg
xor
and
xor
pop
cmp
xor
aas
shl
js
cmp
cmp
bound
add
lock
(bad)
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
movs
add
movs
mov
rol
cmp
sbb
adc
leave
cmp
es
xor
leave
ja
aas
outs
lahf
je
jns
call
out
push
leave
add
inc
xor
push
add
add
imul
adc
sub
pop
inc
inc
retf
jg
sub
xor
rcr
adc
cdq
cmp
(bad)
lods
add
mov
addr16
jns
and
inc
or
pop
bound
imul
add
add
add
gs
mov
dec
and
push
dec
dec
pop
cld
das
clc
fbld
and
ja
jb
(bad)
clc
add
jo
imul
jp
out
fild
jp
jbe
push
outs
js
outs
push
lahf
stos
fdiv
dec
pop
pop
dec
dec
xor
push
dec
pop
dec
pop
inc
inc
push
push
inc
dec
push
inc
inc
dec
dec
dec
dec
dec
fnstenv
sti
mov
inc
pop
push
inc
pop
push
dec
inc
xor
push
dec
pop
fcmovne
int3
lods
pusha
push
adc
sub
dec
dec
push
push
mov
(bad)
pop
pop
xchg
dec
inc
pop
inc
dec
inc
inc
inc
inc
sub
cdq
(bad)
cmp
inc
push
ss
in
mov
idiv
stos
inc
adc
inc
(bad)
(bad)
int3
in
int3
les
movs
jle
mov
and
data16
push
call
ins
add
pop
pop
jl
and
inc
push
pop
les
xor
imul
dec
inc
pusha
push
repnz
sub
mov
xor
xor
(bad)
mov
call
xor
xchg
lods
fstp
(bad)
fcom
ficom
mov
out
dec
and
(bad)
int3
dec
popf
or
jbe
mov
pop
sbb
add
shl
inc
sbb
sbb
bound
dec
ds
sahf
sbb
and
int3
ins
pusha
pusha
push
and
sbb
pusha
cmps
xor
inc
rcr
imul
stos
dec
jl
xor
pop
inc
cdq
sbb
mov
xor
xor
ins
data16
fcom
mov
jbe
mov
ret
pop
or
push
jbe
cli
jb
clc
(bad)
loop
sbb
push
push
push
inc
les
les
cmp
inc
dec
test
jo
lock
pop
jo
and
call
mov
sti
jo
dec
inc
jo
push
push
cmp
inc
mov
pusha
call
hlt
inc
cdq
loope
popa
mov
rcr
sahf
xchg
push
mov
pop
stos
xor
push
loopne
jns
cmp
push
dec
aad
loope
int
mov
jmp
xchg
pop
pop
stos
dec
pop
add
add
xor
or
out
out
xor
mov
inc
test
sbb
fsubr
call
jo
pop
xor
rcl
rcl
int3
jbe
push
xor
or
pop
push
inc
push
jl
pop
jb
or
pop
vpunpcklwd
mov
cli
and
or
pop
dec
inc
cmp
int3
int3
cmp
pop
mov
outs
mov
cmp
pop
xor
dec
shr
enter
cmp
ret
rcr
add
cmp
fadd
je
inc
pop
(bad)
push
imul
fstp
and
jbe
cmps
test
jo
sub
into
loope
inc
data16
add
fsin
inc
push
mov
and
mov
sub
push
dec
dec
mov
mov
loope
(bad)
mov
push
data16
ins
aaa
mov
icebp
jno
pop
fimul
inc
out
clc
cmp
shr
into
push
aaa
mov
jle
jle
dec
adc
test
sub
fs
mov
dec
sbb
or
and
ror
fisub
mov
adc
cmp
retf
push
mov
into
inc
ror
retf
sbb
wrmsr
pop
pushf
pushf
(bad)
mov
pop
or
push
sbb
adc
jnp
jae
mov
call
loope
xor
mov
xchg
and
je
xor
inc
inc
dec
stos
loopne
inc
scas
inc
cmp
mov
jb
sbb
(bad)
into
push
sub
xor
test
pushf
ffree
push
int3
inc
sub
mul
ins
mov
or
cmp
sbb
add
pshufw
push
or
xor
sbb
mov
cmp
ret
xlat
jo
mov
sbb
jmp
sbb
jmp
dec
out
mov
loopne
cwde
sbb
ds
in
adc
sbb
aas
add
loope
icebp
sbb
js
mov
mov
into
hlt
call
inc
outs
mov
inc
sub
popa
and
or
push
lock
pop
out
xchg
push
cmp
sbb
xchg
dec
(bad)
inc
fsubr
adc
rol
xchg
mov
dec
jnp
xchg
lock
ja
or
pop
sbb
rcl
pop
nop
xchg
fnstsw
jae
pop
xchg
std
test
xchg
fist
xchg
xchg
cmc
rol
add
das
mov
test
dec
dec
lahf
lahf
fnstsw
std
mov
and
and
and
and
sub
and
std
std
in
and
adc
sub
daa
and
inc
and
and
push
daa
and
mov
cmp
daa
and
and
and
or
data16
fisubr
sub
sub
daa
sub
and
sub
and
pop
imul
and
int3
in
int3
les
adc
data16
js
sbb
(bad)
jmp
es
inc
out
fcomp
movs
sub
addr16
add
in
push
and
dec
adc
popf
fstp
and
push
or
into
int3
call
pushf
push
mov
push
or
mov
lods
and
neg
and
add
sbb
push
cmp
cs
sub
sub
xor
push
mov
imul
sbb
daa
stos
and
ss
mov
cwde
or
(bad)
test
aaa
xor
pop
and
add
cmp
mov
jbe
inc
jmp
sbb
sbb
push
and
and
dec
and
jle
add
push
jmp
inc
loopne
dec
jbe
push
xlat
popa
xor
or
adc
and
xor
loopne
pop
je
pusha
fimul
in
call
and
loope
mov
and
sub
ja
ja
ret
les
mov
sbb
push
loopne
mov
cwde
(bad)
cmp
xchg
push
lock
adc
push
push
inc
push
aaa
push
and
call
and
xor
push
in
imul
addr16
cld
sub
cwde
push
jmp
sbb
neg
dec
sub
ret
mov
rol
inc
pop
sub
push
and
xor
add
sub
push
ss
sub
cs
int3
mov
xor
scas
push
shl
jo
push
addr16
xor
call
popa
jecxz
daa
xchg
and
push
add
mov
inc
mov
jb
sbb
and
cmp
cmp
hlt
dec
and
sub
jb
loope
int
sub
push
and
inc
movs
test
movs
jle
and
daa
and
cmps
js
das
push
daa
es
shr
data16
push
dec
je
pop
cmp
aam
sub
es
cdq
sbb
mov
sub
cmp
fldcw
out
and
pushf
and
xor
xor
fcomp
ret
cdq
rcl
into
dec
daa
inc
js
mov
mov
xor
mov
sub
in
and
cmp
pop
lods
sub
and
mov
jmp
(bad)
xchg
or
pushf
adc
pop
fadd
sbb
and
push
and
pop
mov
pushf
sbb
jbe
xchg
xchg
xchg
jbe
sub
xor
pushw
scas
rol
pop
inc
jl
jp
mov
jbe
sub
into
adc
jnp
jo
retf
mov
xlat
retf
mov
(bad)
test
lock
xor
push
mov
jb
retf
clc
hlt
xchg
add
call
lods
cld
jo
sub
pop
mov
ss
cwde
rol
and
xor
clc
cmp
outs
mov
sar
fidivr
xor
push
or
mov
sub
js
add
mul
mov
push
xchg
mov
mov
ret
jmp
fsubr
push
cmp
call
sbb
cmps
xchg
jns
test
sub
pop
sbb
push
and
or
gs
mov
out
mov
js
xor
dec
and
sub
fsub
inc
sbb
shl
ret
push
xor
leave
push
fist
pop
ins
or
adc
adc
cmp
xchg
dec
les
nop
arpl
arpl
dec
fbstp
pop
xor
int
push
pop
push
or
mov
jg
cmps
stc
mov
shl
outs
rep
lahf
adc
ins
dec
mov
iret
sbb
outs
fsub
xlat
push
lods
add
xor
add
ss
int
or
or
nop
cmps
pusha
and
ss
xor
sub
daa
xchg
inc
push
int
lahf
out
xor
sub
repz
in
cmps
lods
movs
fdivp
int
xor
inc
add
jl
inc
add
ins
ds
stc
push
aam
movs
jl
sub
ins
sti
imul
inc
push
mov
(bad)
out
cmps
fld
push
out
push
dec
iret
sar
adc
pop
fsubr
pop
mov
mov
inc
(bad)
push
hlt
jbe
inc
outs
ds
fild
pop
push
push
lock
shl
test
js
in
fwait
int
push
adc
loopne
sub
inc
stc
inc
add
mov
pushf
outs
dec
outs
dec
aaa
icebp
and
mov
outs
pop
test
loope
xchg
adc
mov
test
jmp
rcl
xor
popf
imul
les
inc
int
jae
nop
push
add
mov
inc
adc
adc
fldcw
pop
dec
clc
and
mov
or
(bad)
(bad)
dec
int3
enter
enter
fcomp
fxch
(bad)
(bad)
loopne
jecxz
in
pop
(bad)
lahf
adc
jne
je
ins
and
fwait
mov
popa
je
xor
xor
adc
xor
adc
push
push
adc
aam
ins
sbb
xchg
ja
sub
inc
or
dec
adc
test
aaa
ret
mov
scas
push
push
xor
test
test
scas
aas
data16
jns
call
and
imul
jns
mov
enter
jns
fsub
call
out
add
sbb
repz
and
xor
inc
dec
cmp
repz
pop
pusha
push
repz
mov
iret
mov
popa
xor
add
and
in
dec
punpckhbw
je
cmp
jns
int3
and
jl
jae
inc
sahf
mov
dec
je
mov
push
jne
pop
pop
kmovw
jbe
cmps
call
jg
mov
xlat
aas
sahf
ffreep
or
adc
adc
adc
mov
iret
imul
push
hlt
or
sbb
out
sahf
out
dec
pop
ins
sbb
mov
rcr
cmp
jns
add
adc
lods
neg
adc
popf
push
out
mov
push
inc
xor
jmp
ins
jnp
xchg
call
xchg
out
lods
out
or
dec
pusha
or
sub
lods
rol
out
cmp
loopne
fdivr
and
aas
and
aas
push
adc
iret
aas
iret
and
rol
inc
cmps
xor
jae
adc
jmp
imul
mov
mov
add
retf
fadd
cmps
retf
fdivr
push
in
sahf
idiv
add
or
ret
push
add
jns
out
or
add
out
sahf
out
adc
adc
mov
les
fcomp
sbb
sbb
les
adc
jns
out
or
out
sahf
sbb
add
rcr
pop
repz
out
add
lds
sbb
clc
cmp
sbb
fistp
pop
out
fdivp
push
add
adc
jns
xchg
add
cmp
sub
pop
push
(bad)
push
add
cmp
repz
repz
lods
or
out
cmp
mov
(bad)
mov
jns
inc
mov
mov
jns
out
mov
out
sahf
fidivr
(bad)
(bad)
jno
adc
add
add
out
push
lods
cmp
or
or
push
sub
punpckldq
ret
lods
xor
pop
pop
(bad)
in
(bad)
or
out
jge
jnp
or
mov
sub
cs
push
sub
iret
repz
dec
pop
push
pause
movs
mov
shl
lock
adc
and
iret
repz
pusha
jo
pop
stc
iret
repz
mov
cli
cli
add
addr16
scas
lock
add
jmp
xor
fadd
jl
cmc
xchg
push
cli
jmp
add
fidiv
clc
inc
fdivr
lock
out
or
add
ud0
scas
mov
out
aad
push
fisubr
add
fidivr
(bad)
mov
(bad)
(bad)
cli
add
(bad)
in
cli
lock
cld
cli
int
movs
jns
and
jmp
in
add
popf
jg
fidivr
mov
je
scas
jns
dec
ror
mov
sahf
out
and
pop
pop
add
cli
sub
or
push
(bad)
add
xor
mov
mov
pusha
outs
or
movs
sub
push
shr
outs
pusha
hlt
movs
pusha
out
loop
addr16
mov
mov
push
call
mov
and
stc
out
push
mov
add
mov
int
aas
add
out
jg
xchg
jp
je
(bad)
pop
mov
call
jmp
(bad)
cli
cli
rol
ror
or
(bad)
bound
push
jg
cdq
fwait
bound
sahf
push
mov
(bad)
stc
out
js
movs
and
nop
lock
add
mov
add
push
call
aas
(bad)
jl
jle
push
cwde
sti
cwde
add
int
add
mov
(bad)
cld
repz
add
or
jo
mov
add
fdivr
cmp
ror
mov
pop
lahf
aas
dec
push
lock
add
cli
call
stc
out
add
mov
add
out
add
aas
(bad)
cld
mov
fsub
add
fs
in
jle
or
jg
cld
push
dec
xor
push
rol
sub
inc
loopne
add
retf
shl
mov
jle
gs
add
imul
out
int3
dec
sbb
jo
into
rol
lock
sahf
mov
fisub
mov
sar
lahf
ja
mov
nop
ins
pop
add
cld
repz
xchg
test
rol
lods
cdq
xor
add
cli
mov
push
mov
hlt
push
(bad)
adc
sub
addr16
(bad)
mov
loop
stc
out
push
mov
xchg
jo
add
scas
pushf
dec
call
movzx
add
out
sub
cmc
repz
add
fidiv
add
frstor
popa
add
fdivr
mov
xor
adc
mov
mov
fdivrp
ds
out
add
sub
ja
cdq
add
scas
xlat
cdq
mov
out
in
inc
cmp
jbe
jge
pop
mov
jo
sub
imul
push
aaa
pop
push
xor
add
imul
cmp
dec
dec
push
fadd
xor
inc
into
imul
push
test
les
repz
aam
daa
jb
out
fisubr
pushf
lods
jnp
out
mov
dec
repz
in
push
hlt
cld
or
adc
cmp
repz
sub
add
push
int3
push
cwde
outs
add
or
nop
pop
mov
push
inc
push
std
loopne
iret
repz
lock
add
jns
clc
sub
cmp
jns
out
push
cmc
fs
sahf
out
sahf
js
mov
pushf
icebp
jns
out
mov
(bad)
out
fsub
jns
out
in
in
cld
in
leave
repz
adc
int3
daa
into
dec
xor
jno
pop
data16
and
xor
xchg
pusha
or
ror
das
std
xor
inc
or
or
add
add
xlat
xchg
xchg
mov
data16
add
jns
or
add
mov
mov
outs
jb
nop
mov
add
add
add
pop
jno
mov
jnp
push
adc
mov
xor
adc
add
fmul
lahf
and
jb
mov
push
xchg
pop
add
outs
xchg
stc
mov
out
mov
jns
out
(bad)
inc
add
out
sahf
test
stos
sbb
jns
add
ss
sub
inc
test
inc
pop
jle
out
add
stos
adc
in
push
add
mov
call
push
int3
push
sub
mov
adc
or
fld
inc
pushf
push
cs
pop
push
mov
fsubr
popa
or
adc
je
mov
push
push
movs
push
inc
data16
xlat
int3
fisttp
push
call
push
push
loopne
mov
dec
(bad)
cmps
jge
mov
outs
mov
out
sar
test
je
push
xchg
ret
add
cmp
mov
jnp
xor
pusha
test
neg
or
sub
push
enter
fisubr
xchg
mov
out
add
add
in
lods
push
fsubr
mov
pop
sbb
sub
div
xrelease
add
dec
jnp
idiv
test
lahf
sar
(bad)
xor
es
xchg
lods
jnp
mov
out
mov
or
jl
and
xor
jnp
or
inc
inc
ds
out
dec
(bad)
jo
mov
inc
cmp
pop
lods
(bad)
(bad)
hlt
cmps
jbe
add
add
or
call
and
adc
push
push
pop
mov
mov
ss
push
pop
push
cmp
lock
es
stos
sahf
dec
rol
test
mov
or
js
push
out
jl
ficom
enter
scas
out
mov
enter
cmps
jo
jl
jns
scas
das
push
fs
mov
adc
adc
(bad)
sar
dec
and
jae
pop
scas
hlt
dec
xlat
push
fsubr
jl
push
push
scas
clc
into
lock
xor
(bad)
movs
scas
es
mov
mov
inc
inc
mov
into
xor
jmp
xchg
scas
pop
sar
mov
and
push
nop
aaa
mov
lds
pop
push
retf
inc
pop
mov
out
sub
out
shr
dec
dec
outs
jl
aaa
dec
jnp
cmp
inc
rcl
mov
lock
jb
ja
cbw
lock
jae
fs
test
push
pushf
es
out
cmp
push
dec
ja
je
mov
push
fidivr
les
(bad)
xor
in
and
push
add
push
or
loopne
add
mov
and
or
and
add
add
stos
push
add
add
dec
add
add
push
mov
inc
add
fidivr
dec
push
adc
push
mov
ss
add
cmp
xor
lahf
inc
imul
mov
retf
ins
pop
inc
sahf
das
pop
call
add
jl
inc
mov
mov
xchg
pop
es
push
inc
cld
jg
clc
daa
iret
xchg
das
aas
push
pop
jmp
rol
cmps
lods
cmp
add
pop
or
push
aas
xor
xchg
(bad)
jg
add
push
repnz
push
add
int
cmp
or
push
mov
pop
fistp
add
cwde
fsub
add
ss
ins
out
push
out
ficomp
dec
ret
out
out
ja
add
loopne
mov
ret
dec
lock
sbb
pop
push
(bad)
aas
lods
mov
aas
pop
pop
add
mov
mov
ss
repz
xor
pop
std
ret
repz
push
fld
ins
iret
repz
jl
inc
add
jle
pop
fbstp
rol
jo
lds
pop
pop
repz
enter
aas
push
daa
ffreep
xor
push
add
nop
mov
jg
push
add
and
iret
nop
into
push
add
repz
or
mov
sti
retf
daa
add
add
psllw
mov
pop
outs
daa
add
sub
clc
push
mov
lock
aas
rcr
mov
add
push
inc
pop
sub
(bad)
outs
clc
pop
adc
jmp
add
int
jnp
xlat
pop
sbb
mov
mov
inc
nop
ds
xchg
or
mov
add
fstp
adc
adc
adc
pop
mov
add
aad
add
addr16
cld
pop
test
xchg
int
push
fsubr
aaa
cmp
test
dec
jo
jno
mov
cs
std
ins
sbb
cmp
or
push
sub
imul
inc
add
inc
add
mov
xor
sbb
push
push
sbb
cmp
push
aaa
cmc
iret
retw
sub
ret
shl
cmp
or
sbb
push
sbb
or
mov
mov
test
xchg
pop
cmp
xchg
or
bound
imul
jae
neg
inc
fisubr
push
and
pop
jle
push
je
ins
sbb
outs
popa
cmp
and
or
js
sbb
inc
mov
data16
inc
mov
pop
push
push
add
faddp
jnp
ins
sub
ins
inc
jo
outs
shl
mov
outs
xor
je
jnp
jnp
jne
jo
pop
shl
mov
das
add
sub
xor
add
jae
mul
adc
push
jge
lock
jmp
popa
push
push
push
pop
cmp
outs
fisubr
out
xchg
outs
mov
and
daa
push
mov
outs
ins
and
pop
jbe
pop
mov
dec
setg
ins
clc
scas
adc
out
jae
jns
(bad)
push
push
sub
push
imul
gs
outs
jne
jp
sbb
loop
cmp
pop
dec
arpl
inc
lock
fs
fs
cmp
jg
addr16
pop
cmp
pop
add
js
gs
xchg
mov
push
jb
(bad)
push
and
or
jne
aaa
mov
add
mov
pop
mov
lock
cmp
push
in
inc
gs
adc
fisttp
out
loop
jae
in
and
js
xor
jae
(bad)
fwait
ins
aad
cmps
outs
sbb
retf
cmp
es
cli
jbe
scas
add
jle
xchg
sub
add
ficom
outs
inc
ds
scas
pop
fcomi
into
add
push
inc
dec
mov
mov
inc
popa
sub
push
and
jo
mov
dec
addr16
jmp
or
pop
mov
push
(bad)
add
retf
ja
jge
loopne
cs
pop
arpl
repz
lock
add
pop
mov
(bad)
sub
mov
dec
add
ins
retf
imul
das
xlat
xor
pop
je
pop
outs
mov
cmp
jp
xor
(bad)
ja
ja
sbb
inc
jno
ins
push
arpl
sub
scas
inc
nop
stos
mov
xor
arpl
ja
mov
add
sbb
sub
in
pop
fs
addr16
push
jne
in
add
cmps
add
ins
nop
iret
pop
jecxz
mov
pop
xor
dec
pop
xchg
mov
mov
pop
add
cld
mov
pop
sbb
mov
jns
es
outs
mov
adc
jbe
imul
imul
dec
adc
enter
and
pop
inc
and
sub
add
loopne
adc
(bad)
fs
popa
fadd
mov
in
call
stos
mov
mov
add
mov
push
cdq
fisubr
je
cmp
push
mov
repnz
sub
bound
sahf
mov
pop
out
stc
mov
ret
fwait
jbe
imul
cmp
rol
out
xchg
jae
repz
outs
inc
xor
loopne
cmp
sub
and
push
jae
adc
fucom
or
inc
pop
mov
dec
out
and
or
imul
loop
mov
pop
arpl
imul
pop
cmp
adc
sbb
pop
ja
mov
push
mov
push
push
bound
sub
mov
cmp
add
mov
das
push
sti
xchg
mov
inc
mov
out
push
mov
pop
sbb
aas
mov
pop
jbe
sub
repnz
cs
adc
jns
(bad)
pop
sub
jne
sbb
push
mov
repz
push
adc
in
jae
mov
and
sub
imul
fisubr
cmp
xchg
add
ja
pop
rcl
xlat
addr16
adc
fiadd
mov
arpl
ss
mov
out
xor
and
cmps
leave
pop
int
mov
call
pop
mov
pop
sbb
sub
jo
je
add
push
addr16
outs
pop
cmp
test
and
add
aaa
sahf
cwde
rcr
jg
je
xor
xor
loop
sbb
jb
jae
or
adc
(bad)
fwait
scas
inc
cmp
mov
lds
fidiv
loope
xlat
push
retf
pop
add
mov
push
test
shl
push
cmp
mov
(bad)
in
push
push
sub
xor
mov
out
sbb
jge
and
daa
(bad)
shl
inc
sbb
jge
sub
arpl
and
cs
sbb
loop
int
outs
addr16
and
add
shl
stos
out
xor
ret
outs
aad
popf
sahf
aaa
push
push
cmp
inc
cmp
gs
outs
jno
loopne
jns
mov
(bad)
mov
xor
(bad)
ss
icebp
xchg
mov
inc
les
pop
push
adc
mov
sub
mov
push
repz
scas
adc
in
dec
pop
repz
cli
push
cmc
ror
cs
out
pop
sbb
add
imul
or
adc
xchg
aas
arpl
ins
iret
inc
and
push
stos
cmp
pop
xchg
push
imul
sbb
push
push
cli
jmp
and
sub
xor
ins
add
sub
daa
cmp
pop
pop
fld
pusha
add
daa
mov
loop
ja
mov
jns
push
jb
pop
arpl
movs
dec
inc
mov
and
sub
lock
aaa
mov
adc
or
mov
icebp
shl
inc
bound
cmc
into
cmp
adc
push
inc
loop
imul
das
ds
sub
loop
cmp
ins
inc
adc
loop
adc
addr16
fndisi(8087
sahf
aaa
(bad)
out
jb
mov
imul
inc
hlt
mov
dec
rep
ud2
jl
dec
aaa
adc
sub
sub
paddusw
test
jmp
out
and
jb
mov
retf
inc
not
ins
xchg
or
outs
jae
push
mov
aaa
lahf
jne
daa
daa
(bad)
retf
sbb
sub
xchg
xor
test
cmp
or
add
call
xchg
scas
mov
push
mov
add
cmps
cmp
mov
psadbw
mov
mov
out
int
mov
retf
jb
cmp
call
or
pop
cmps
add
mov
in
shl
lahf
scas
in
loopne
and
mov
and
push
xchg
and
scas
sbb
fadd
add
push
je
popa
or
data16
sub
arpl
cmp
cwde
cmps
retw
pop
add
or
adc
iret
pop
adc
aaa
sbb
mov
pop
dec
(bad)
push
lea
sbb
add
cmp
cmp
inc
and
jp
loope
outs
and
add
inc
xor
mov
mov
sub
pop
sbb
pop
shl
mov
(bad)
jae
repz
jmp
shl
aam
inc
fild
pop
cmps
push
lods
mov
stos
enter
dec
fld
rol
push
dec
inc
inc
xor
sbb
outs
sbb
adc
push
inc
repz
or
aas
jne
push
je
push
inc
adc
fwait
addr16
jno
cmp
push
sub
adc
sbb
xor
jo
sub
adc
mov
out
mov
pusha
pop
arpl
push
dec
out
inc
cmc
pop
cmps
mov
fist
cmp
das
cmp
cmp
popw
and
shr
xor
sbb
shl
and
pop
mov
neg
test
repz
aam
or
cmp
cmp
sub
or
or
mov
push
mov
icebp
mov
mov
inc
cmp
pop
jmp
mov
fisubr
fcmovb
jmp
pop
mov
fs
imul
and
loopne
outs
movzx
and
cmps
push
sub
outs
xchg
xchg
push
shr
xlat
test
jp
outs
(bad)
push
xor
arpl
xchg
push
mov
xchg
ret
adc
(bad)
dec
push
pop
mov
mov
pop
jg
sub
and
cmp
dec
cmp
xor
repz
add
fwait
cmp
fiadd
jb
je
jno
adc
(bad)
xchg
adc
lock
push
pop
and
and
rol
pop
dec
cmp
fild
push
xor
jae
add
fcmovnb
ss
out
adc
adc
ins
stos
mov
mov
pop
add
pop
mov
sub
pop
or
pop
add
scas
push
clc
and
jo
adc
pop
pusha
push
int
and
dec
leave
ins
cmps
inc
popa
inc
inc
adc
ins
imul
push
inc
xor
adc
mov
adc
jbe
arpl
fs
push
gs
idiv
jmp
ret
outs
ins
ins
inc
je
cmp
popa
bound
adc
mov
test
jbe
push
push
adc
push
pop
bound
into
pop
sbb
push
inc
outs
movs
sbb
cmp
ret
or
adc
add
shr
and
out
test
js
pop
mov
sub
push
dec
adc
add
sub
mov
sub
out
push
dec
out
rol
xor
out
arpl
inc
movs
sub
inc
or
(bad)
mov
ja
mov
inc
ins
addr16
retf
rcr
jmp
imul
jmp
mov
popa
sti
sbb
add
loopne
add
add
xor
and
enter
popa
popa
mov
jl
pop
or
inc
ret
inc
or
xrelease
arpl
mov
cmp
loopne
jnp
ret
or
retf
add
or
rcl
fs
push
push
add
jg
push
add
popf
or
or
in
pop
fisttp
dec
out
mov
add
fcmovne
or
add
bound
pop
dec
(bad)
add
add
leave
xchg
pop
leave
add
push
pop
xor
add
push
inc
in
je
or
add
gs
mov
jae
mov
jae
jb
jo
inc
adc
add
popa
inc
or
cmp
dec
push
mov
ins
pusha
int3
mov
popa
sbb
fbstp
push
jp
outs
ret
mov
gs
xchg
inc
shl
and
push
pop
push
out
add
ja
clc
int3
test
push
dec
(bad)
sbb
dec
retfw
and
call
inc
imul
cmp
inc
js
fsubr
cmp
pop
sbb
dec
imul
sahf
mov
cwde
add
cmp
sbb
xor
sub
bound
mov
sti
sbb
fcomp
dec
push
push
test
adc
fmul
adc
inc
gs
and
and
test
gs
(bad)
sbb
or
sbb
add
or
push
cmc
cs
ret
ret
dec
push
addr16
inc
das
xor
push
cmp
sbb
jb
pop
xchg
gs
inc
and
mov
in
sub
daa
int
inc
data16
fild
or
inc
jp
push
adc
push
jnp
push
(bad)
aad
sub
popa
gs
or
imul
jnp
test
mov
sub
add
cmc
dec
in
add
fs
inc
pop
sbb
int
adc
cmp
add
mov
cmp
pop
shl
inc
xchg
arpl
outs
sbb
adc
dec
adc
jo
rcl
push
push
stc
cmps
pop
mov
ret
push
pop
iret
inc
loopne
dec
popa
sbb
sbb
xchg
add
pop
cmp
mov
mov
inc
scas
fdiv
push
mov
js
je
add
outs
push
in
mov
shl
inc
sahf
jge
and
mov
imul
jo
dec
xor
mov
aam
aaa
fld
sub
movs
loopne
push
add
arpl
jne
jns
hlt
adc
push
adc
inc
jge
pop
xchg
or
jnp
or
mov
or
pop
add
and
inc
mov
mov
mov
pop
std
mov
cmps
pop
pop
arpl
imul
retf
fs
ins
inc
sub
sti
scas
add
push
je
ja
adc
imul
push
inc
xor
inc
mov
imul
mov
add
sbb
fidiv
repnz
xchg
mov
dec
push
adc
nop
inc
push
ss
sub
not
and
pop
jl
rol
push
or
mov
dec
mov
sub
and
das
int
sbb
sub
sub
push
ins
(bad)
ja
add
adc
xlat
inc
imul
cmp
sub
mov
(bad)
repz
xchg
add
or
icebp
adc
sub
arpl
ins
cmc
mov
dec
jb
js
lea
sub
movs
and
inc
sbb
xchg
imul
adc
sti
mov
(bad)
adc
gs
popa
bound
lahf
(bad)
mov
ins
test
sbb
leave
push
mov
das
inc
mov
test
sub
and
xor
pop
dec
add
retf
pop
adc
jnp
lds
or
shr
and
loopne
add
and
add
push
push
jno
and
dec
cmps
sub
adc
mov
shl
pusha
push
push
inc
sbb
aad
fs
mov
dec
and
popa
sub
gs
nop
sub
pop
sbb
inc
arpl
js
mov
add
enter
pusha
or
sbb
test
sub
std
jg
mov
mov
fisub
test
iret
or
test
movs
jb
inc
jae
mov
sub
daa
adc
sub
ret
jmp
lods
pop
sbb
je
sub
jnp
push
jo
push
cmp
shl
mov
jl
or
mov
popa
gs
cmps
mov
ins
lock
mov
and
add
sub
add
and
adc
jo
ret
jae
mov
mov
gs
sti
repz
sub
sbb
add
ret
test
test
jno
sub
or
fist
xchg
inc
push
inc
dec
cmp
push
loope
outs
imul
adc
in
pop
inc
add
ins
outs
lea
jp
pusha
jp
fcomi
sub
test
add
push
jg
push
es
enter
sub
mov
test
sbb
push
mov
jbe
cmp
sbb
sbb
movs
sbb
add
sub
pop
add
into
enter
fcmovnbe
adc
mov
mov
add
pusha
jno
jno
xchg
cmc
inc
(bad)
jo
mov
rcl
xor
sbb
fidiv
in
xlat
add
or
ret
ret
sbb
fidiv
inc
adc
xchg
xchg
jbe
xchg
or
out
xor
and
ss
outs
sbb
out
add
fwait
sbb
and
adc
loope
cmps
shl
shr
sub
push
retf
cmp
es
push
outs
inc
aas
fs
je
jne
and
outs
arpl
sbb
imul
lods
jp
call
popf
adc
ret
inc
dec
cdq
rcr
sbb
mov
loopne
dec
cmp
retf
sbb
sahf
or
mov
fadd
jge
loope
in
sbb
loop
dec
jae
and
jo
idiv
and
imul
adc
adc
fcomp
add
retf
jo
sub
inc
loope
sub
jmp
and
push
xchg
sbb
push
pop
jge
sbb
fbld
sbb
mov
inc
pop
inc
scas
stos
ins
jno
inc
sbb
pop
test
outs
mov
mov
or
lds
test
and
jne
push
adc
inc
inc
inc
add
test
xor
jo
sub
jnp
mov
imul
pop
mov
mov
and
shr
dec
or
jae
daa
ins
ret
push
cmp
xchg
in
das
sub
mov
loopne
and
sbb
add
test
js
outs
aaa
adc
outs
(bad)
mov
inc
cmps
lods
ja
adc
outs
cdq
mov
imul
loope
push
ins
pop
sub
push
inc
sub
pop
test
adc
xor
mov
test
popa
(bad)
mov
and
and
cs
push
jo
iret
mov
movs
les
jbe
pop
adc
and
xchg
scas
popf
xor
and
jl
sub
ss
sbb
or
inc
dec
data16
pushf
xchg
jg
pop
jbe
mov
scas
and
sub
cmp
inc
sub
mov
jmp
out
or
lods
push
imul
repz
mov
ins
and
dec
outs
adc
mov
adc
xor
fs
or
add
test
test
(bad)
xor
arpl
pop
pop
adc
add
add
sub
cwde
in
fmul
(bad)
stc
jg
xor
fisttp
xchg
dec
add
pop
inc
sub
and
loopne
pop
add
ret
sub
push
adc
ss
push
mov
pop
add
paddsw
or
push
inc
(bad)
adc
rcr
pop
outs
pusha
xor
or
adc
or
mov
lock
sbb
leave
push
lahf
inc
dec
inc
inc
scas
xor
add
cld
pusha
bound
sub
inc
mov
xchg
aam
pop
not
data16
repnz
inc
push
push
mov
clc
test
dec
add
pusha
popa
add
push
repnz
dec
and
(bad)
and
and
call
sub
inc
push
gs
(bad)
xor
or
pushf
push
sub
add
dec
push
daa
js
popf
(bad)
dec
add
jne
or
dec
xchg
and
add
add
add
add
add
add
add
inc
add
inc
xchg
test
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
mov
dec
add
add
