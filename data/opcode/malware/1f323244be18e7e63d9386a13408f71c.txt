int
pop
mov
mov
sub
aas
ja
arpl
ja
arpl
jne
push
cld
sub
scas
jle
mov
xchg
(bad)
das
xor
push
inc
xor
sub
mov
cld
mov
pop
cmp
dec
mov
xlat
xor
(bad)
pop
arpl
xor
add
mov
arpl
ja
dec
mov
fwait
inc
xor
and
cld
sub
cmp
outs
cmps
jmp
mov
test
inc
aad
mov
rcl
cld
sub
outs
mov
jmp
gs
(bad)
fdiv
jnp
addr16
ins
dec
xchg
jo
add
cmp
inc
xor
daa
ret
sub
mov
mov
div
movs
add
jne
mov
dec
hlt
stos
mov
xor
sub
cmp
stos
cmp
stos
jge
pop
in
mov
int3
xor
div
mov
in
dec
push
mov
dec
push
stos
jns
and
sub
rcl
cld
mov
inc
ret
pop
movs
jp
dec
push
mov
cld
jno
outs
add
mov
and
mov
(bad)
xlat
mov
mov
adc
mov
cmp
xor
lock
adc
jno
xor
add
mov
gs
push
pop
add
movs
add
mov
xor
sub
dec
xor
sub
xor
stos
cmp
call
xor
sub
xchg
and
mov
and
mov
push
cld
sub
fld
pop
iret
leave
cmp
jb
shl
sub
hlt
hlt
xlat
jb
dec
push
fdiv
push
inc
xor
inc
mov
sub
mov
les
repz
imul
nop
inc
xor
sub
cld
inc
dec
iret
sbb
push
cld
sub
sub
cld
sub
jne
sub
jb
inc
frstor
mov
or
(bad)
fsubr
jnp
addr16
scas
pusha
and
and
xor
icebp
imul
inc
pop
cld
inc
inc
pop
aam
add
jb
inc
cmp
sub
iret
leave
add
jb
xlat
jb
dec
push
iret
leave
or
jb
mov
inc
fsub
pop
add
shl
sub
xor
sub
in
fs
xor
xor
cld
jnp
addr16
mov
mov
ror
mov
cld
inc
inc
pop
cld
inc
inc
pop
cld
sub
xchg
or
jo
sar
jge
in
ja
sub
retf
add
add
push
pop
cld
movs
ret
(bad)
mov
xor
movs
ret
(bad)
mov
dec
cld
sub
add
xor
fisubr
jb
movs
ret
add
lods
rcl
sub
hlt
lock
xor
out
test
inc
mov
cmp
fwait
mov
lock
jge
aad
les
stos
xchg
mov
adc
ror
div
mov
pusha
xchg
sub
paddb
inc
pop
cld
inc
inc
pop
cld
xlat
xor
pop
dec
fadd
inc
xor
(bad)
neg
fidiv
xor
call
pop
iret
mov
inc
loopne
inc
iret
mov
mov
dec
cld
sub
test
mov
xor
fidiv
xor
call
mov
xor
sub
lock
add
jne
jbe
mov
jge
aad
jle
(bad)
hlt
add
enter
jne
js
sub
sub
cld
xlat
xor
pop
dec
fsub
dec
(bad)
mov
lock
sbb
and
pop
pop
pop
cld
xlat
xor
add
fdivr
out
mov
dec
cld
sub
mov
lock
and
mov
xchg
add
cld
ja
stc
aas
jge
aad
les
stos
jg
inc
lock
add
stos
inc
fs
ja
mov
jne
fbld
shl
mov
mov
xor
mov
jmp
ins
mov
jne
fbld
aam
ins
fwait
mov
mov
or
add
adc
repz
inc
xor
xchg
push
push
(bad)
xor
xlat
pop
mov
sub
add
xlat
add
ja
push
or
ins
mov
enter
xor
xlat
pop
mov
sub
add
xlat
add
ja
dec
mov
mov
pop
mov
mov
xlat
mov
xor
ja
imul
inc
xor
sub
arpl
mov
mov
jge
dec
(bad)
mov
xlat
mov
xor
sub
int3
jne
mov
pop
mov
sub
add
out
ret
xlat
mov
(bad)
pop
cmp
enter
gs
mov
inc
xor
xlat
mov
fidiv
mov
repnz
into
movs
add
mov
sar
inc
xor
xlat
mov
xor
xlat
sbb
loope
gs
(bad)
fsub
jnp
addr16
dec
idiv
jns
jne
mov
mov
cdq
ror
jne
mov
lods
push
adc
ds
mov
or
jns
icebp
or
xchg
sti
jmp
into
loopne
mov
iret
and
outs
jle
cmp
jne
out
inc
sub
mov
stos
mov
adc
mov
repz
cmp
stos
mov
mov
mov
aad
into
add
mov
fcmovb
movs
dec
cld
sub
dec
hlt
xchg
xchg
jge
cmp
mov
push
das
xchg
jecxz
lea
jg
es
and
stc
pop
repz
mov
pop
xor
mov
jne
fbld
enter
mov
cmps
loope
gs
(bad)
fsubr
jnp
addr16
push
mov
add
daa
and
mov
jb
mov
add
repz
inc
or
outs
ret
dec
aas
inc
cmp
or
inc
add
lods
sub
mov
mov
push
add
add
jne
mov
imul
adc
pop
dec
(bad)
adc
jge
sbb
cld
sub
xor
pop
dec
pop
mov
rol
mov
das
outs
pop
push
data16
mov
dec
add
data16
mov
adc
jbe
repz
jle
mov
mov
sub
cmp
xor
cld
mov
inc
pop
add
inc
xor
inc
inc
pop
cld
sar
iret
sub
rcl
inc
sub
sbb
sbb
loope
gs
push
arpl
xchg
cmp
enter
idiv
fist
test
adc
ja
inc
iret
mov
sub
jnp
mov
in
adc
jne
mov
jne
mov
inc
cld
sub
outs
cmps
loope
gs
(bad)
(bad)
jnp
addr16
dec
(bad)
jns
adc
inc
enter
push
cld
stos
and
inc
inc
fadd
xor
mov
xchg
cmp
cld
sub
repz
adc
sub
cmc
repz
lods
cmp
add
cmc
call
not
mov
sub
jne
js
pop
lea
inc
mov
daa
daa
fcomi
jne
scas
cmp
xchg
inc
out
mov
push
int3
and
cmp
xor
sub
aas
mov
add
jne
jbe
cmc
repz
lods
cmp
add
cmc
call
pop
fcomi
jle
cmp
xlat
mov
inc
cld
sub
mov
jge
aad
sbb
cld
rol
stos
xchg
in
mov
push
inc
xor
cmp
sub
aaa
jg
aas
test
pushf
add
aas
js
inc
xor
mov
repz
nop
push
push
sub
iret
add
into
repz
fist
in
fist
int3
xlat
adc
jge
xor
sub
adc
cld
test
inc
pop
add
inc
xor
cmps
iret
add
pop
iret
mov
xchg
(bad)
std
inc
mov
mov
xlat
mov
retf
add
(bad)
hlt
lock
xor
or
inc
fnstenv
lods
outs
xor
fbld
add
pop
mov
clc
js
or
jg
mov
or
dec
mov
sub
jg
mov
xor
sub
push
add
(bad)
or
add
inc
xor
lock
repz
int3
jne
adc
dec
push
inc
sti
stos
bound
inc
xor
repz
mov
pusha
gs
sub
xor
jno
call
call
jne
mov
repz
movs
add
lods
movs
xor
jg
push
mov
cld
sub
sub
ret
xlat
adc
jne
mov
xor
and
xchg
mov
push
mov
(bad)
xlat
push
or
jne
mov
mov
jns
mov
mov
add
lods
pop
push
pusha
ja
mov
xor
mov
idiv
push
repz
xlat
mov
cmp
lods
fwait
iret
add
xor
jne
outs
call
pusha
mov
xchg
pusha
mov
iret
stos
and
(bad)
lds
aas
jle
mov
lods
pop
push
xor
jbe
jne
sbb
loope
gs
(bad)
fdiv
jnp
addr16
or
shl
add
mov
mov
int3
cld
mov
ja
rep
retf
sub
mov
xor
inc
xor
mov
bound
cld
ret
aas
mov
jg
push
inc
pushf
mov
inc
xor
sbb
cmp
sbb
mov
mov
xchg
mov
imul
test
test
inc
idiv
mov
jb
sub
cmp
dec
mov
aam
mov
cmp
adc
pop
dec
repz
ret
cmpxchg
retf
imul
cld
sbb
add
cmp
pop
inc
or
pop
inc
fucomi
mov
ja
lds
or
push
inc
mov
aam
mov
pop
cmp
cld
outs
int3
jne
test
add
daa
ret
xlat
mov
mov
aam
inc
repz
xor
xchg
sbb
jo
shl
jne
outs
enter
xor
sub
xor
scas
add
mov
sub
inc
cld
sub
jne
mov
pop
mov
sub
add
movs
or
lods
jp
inc
hlt
xlat
xor
adc
aaa
xor
inc
inc
mov
inc
sar
sar
cld
sub
fbld
pop
mov
xor
jge
aad
test
cld
sar
sub
stos
xchg
xchg
sbb
int
into
repz
inc
pop
sbb
add
xor
mov
mov
into
add
mov
xlat
mov
mov
and
jne
outs
call
adc
xor
inc
cld
sub
mov
xlat
mov
ss
sub
mov
add
ss
mov
or
cld
pop
mov
cld
movs
ret
(bad)
mov
jb
js
or
jg
mov
mov
mov
sar
xlat
mov
iret
call
sub
jne
test
inc
cmp
ret
sub
jns
mov
lods
pop
push
pusha
ja
mov
int3
jne
jbe
jne
les
sub
out
inc
xor
repnz
mov
iret
jg
dec
mov
add
mov
iret
add
in
pop
push
mov
fs
xor
movs
ret
(bad)
mov
jb
js
or
jg
mov
rep
xchg
aaa
cld
sub
mov
xchg
mov
mov
sub
jl
mov
aas
js
inc
xor
inc
inc
pop
mov
lods
mov
fsub
in
dec
mov
dec
xlat
mov
shl
jmp
add
into
repz
ret
(bad)
mov
xor
lods
jnp
cld
sub
jns
mov
mov
add
pusha
pop
imul
jg
dec
aas
dec
lods
cmc
iret
add
xor
sub
xchg
dec
xlat
mov
pop
dec
push
xor
lods
xor
mov
mov
mov
pop
sub
add
jno
ror
add
(bad)
hlt
lock
xor
xchg
sub
(bad)
push
push
mov
add
add
xlat
mov
iret
add
inc
inc
imul
ret
(bad)
mov
pop
std
inc
xchg
mov
imul
jg
dec
or
mov
sub
jb
movs
cli
int
(bad)
mov
iret
add
mov
idiv
mov
xor
inc
inc
pop
push
retf
xchg
js
jno
ror
adc
xor
xchg
sub
mov
push
mov
add
sahf
or
mov
iret
add
inc
inc
imul
ret
(bad)
mov
mov
fidivr
xor
inc
inc
pop
pop
retf
xchg
js
jno
rol
add
(bad)
hlt
lock
xor
xchg
sub
mov
push
mov
add
push
or
mov
iret
add
inc
inc
imul
ret
(bad)
mov
pop
std
inc
rcl
mov
imul
jg
dec
or
mov
xor
sub
xchg
sub
mov
push
pop
lods
mov
xor
mov
add
mov
idiv
mov
xor
inc
inc
pop
test
add
jno
shl
lock
xor
das
mov
push
mov
add
jmp
jp
add
inc
inc
loope
inc
pop
mov
add
iret
add
adc
inc
fdivr
or
mov
xor
sub
jge
cmp
dec
xlat
mov
idiv
pop
repz
sub
mov
xlat
mov
retf
push
fucomi
out
inc
inc
dec
push
xor
out
cld
mov
test
lock
repz
inc
(bad)
sub
jbe
jne
retf
xlat
mov
in
add
mov
addr16
int3
cmc
call
inc
xor
dec
add
pop
mov
add
or
jg
mov
aad
into
repz
mov
xor
sub
xchg
sub
mov
add
test
add
les
std
daa
leave
cwde
cld
sub
bt
xor
dec
xor
sub
iret
std
sub
jno
(bad)
add
pop
mov
add
mov
xlat
mov
iret
stos
xor
repz
inc
xor
xchg
iret
add
pop
pop
ins
retf
add
iret
add
pop
mov
cld
sub
jne
mov
arpl
sub
jns
mov
mov
xlat
mov
iret
imul
xor
mov
jbe
jne
les
sub
jmp
lods
scas
iret
add
pop
mov
add
or
jg
mov
mov
scas
loop
sub
jns
mov
mov
xlat
mov
iret
stos
adc
jne
mov
test
jns
inc
xor
mov
ret
(bad)
mov
aam
(bad)
mov
iret
add
pop
mov
jne
mov
inc
jmp
inc
mov
retf
into
mov
xlat
mov
xchg
or
mov
enter
pop
lods
mov
xor
mov
fcom
in
dec
mov
les
and
sub
cld
shl
sub
call
add
retf
xlat
mov
sar
xlat
mov
pop
cld
sub
hlt
call
xlat
mov
mov
xlat
mov
iret
add
retf
xlat
mov
mov
adc
into
xlat
inc
sub
xor
fnclex
mov
add
(bad)
xor
sub
pop
mov
mov
shl
jge
mov
cld
sub
rep
(bad)
xor
sub
xchg
push
xlat
mov
cwde
add
mov
jb
mov
mov
and
sub
cld
mov
dec
pop
cld
sub
rep
push
xor
sub
mov
xlat
mov
cwde
add
mov
addr16
mov
cmp
mov
add
inc
aas
jns
inc
xor
stos
loop
add
mov
xor
inc
inc
fcom
inc
inc
xor
mov
mov
mov
xlat
mov
mov
xlat
mov
iret
add
retf
xlat
mov
inc
add
mov
xlat
inc
sub
xor
fnclex
mov
add
(bad)
xor
sub
pop
mov
mov
mov
jge
jle
cld
sub
rep
ss
sub
xchg
je
mov
mov
xchg
pop
movs
jb
mov
mov
and
sub
cld
mov
dec
mov
sub
jg
iret
iret
add
inc
aas
js
inc
xor
movs
ret
(bad)
mov
test
xlat
mov
iret
add
pop
mov
jne
mov
xor
retf
into
mov
xlat
mov
dec
add
dec
mov
sub
call
cmp
lods
mov
cld
sub
lea
ret
lock
sub
jns
mov
test
mov
add
add
add
inc
mov
jno
int
sub
jae
inc
xor
lods
mov
add
inc
xor
sub
iret
add
retf
xlat
mov
sar
xlat
mov
pop
cld
sub
hlt
call
mov
mov
iret
mov
pop
mov
into
add
repnz
mov
int
js
mov
xlat
mov
int
(bad)
mov
xor
stos
cmp
retf
xlat
mov
sar
xlat
mov
pop
cld
sub
hlt
in
mov
test
add
xor
ja
ret
iret
add
pop
mov
inc
mov
xor
fbld
add
mov
xchg
add
mov
into
add
lds
add
mov
into
add
add
jle
mov
add
add
jle
iret
jns
mov
aam
(bad)
mov
into
add
(bad)
xlat
mov
into
add
xor
cmp
inc
mov
aas
mov
mov
data16
stos
cli
loopne
(bad)
mov
mov
xlat
mov
iret
stos
and
aas
xchg
sub
pop
mov
mov
in
(bad)
mov
mov
xlat
mov
iret
stos
and
mov
xlat
mov
iret
stos
and
mov
xlat
mov
iret
stos
and
and
sub
pop
mov
mov
rol
(bad)
mov
data16
rcr
xlat
sbb
loope
gs
sub
jb
inc
frstor
mov
sub
lods
dec
into
adc
jg
pop
arpl
out
add
scas
add
imul
mov
dec
sbb
cmp
cmp
xor
sub
mov
sub
push
loopne
inc
xor
inc
fcom
adc
inc
inc
and
js
add
inc
xor
dec
mov
dec
and
mov
fcmovnu
out
add
std
sub
ja
fwait
repz
scas
idiv
or
pop
and
sbb
cld
ret
jecxz
mov
xlat
sbb
mov
in
cld
sub
xor
mov
clc
rcl
mov
cmp
test
sub
pop
fldcw
pop
cld
inc
inc
fmul
out
adc
adc
inc
sub
fbld
mul
mov
adc
ja
dec
mov
outs
clc
jne
mov
xor
les
cld
nop
into
das
cld
sub
mov
arpl
xor
jg
mov
and
jo
sub
xor
sub
jge
xchg
cmp
sub
xor
sub
jne
add
mov
push
xchg
jo
inc
xor
adc
dec
mov
add
mov
icebp
xor
jno
push
inc
iret
stc
pop
repz
sbb
movs
cmp
(bad)
sar
push
inc
or
inc
fnstenv
pop
scas
mov
adc
les
inc
xor
sub
inc
inc
icebp
mov
xor
pop
cs
xor
push
ds
sub
iret
stc
adc
jno
rol
sub
xor
sub
push
inc
sti
sbb
xor
xor
fbld
icebp
jl
pop
scas
mov
mov
xor
xlat
jo
shr
xlat
mov
in
push
xor
pop
inc
add
push
xor
sub
icebp
(bad)
adc
xor
scas
mov
xlat
mov
scas
mov
sbb
xor
scas
mov
sub
test
pop
imul
or
inc
inc
sti
sbb
xor
scas
mov
or
cld
out
inc
fsub
inc
xor
sub
dec
(bad)
mov
scas
mov
sbb
xor
outs
clc
jne
(bad)
cmp
(bad)
out
inc
je
imul
je
mov
test
mov
xor
jbe
jne
(bad)
cmp
mov
sub
fsub
inc
xor
adc
jno
mov
xchg
cld
push
inc
xchg
adc
inc
xor
adc
jno
rcr
imul
cld
ror
popa
imul
cld
sar
cld
sub
xor
jg
mov
sub
inc
std
dec
xor
fbld
icebp
jg
jg
mov
sub
int
scas
out
std
sub
icebp
xor
jno
or
push
jmp
inc
(bad)
sbb
jmp
inc
xchg
lods
mov
pusha
pop
push
cmp
adc
add
mov
jl
inc
xor
sub
(bad)
xlat
arpl
jl
pop
scas
mov
xlat
inc
inc
dec
push
fcmovnbe
mov
xor
pop
or
xor
push
adc
in
push
xor
sbb
cld
sub
clc
aad
into
icebp
add
mov
in
push
xor
inc
mov
pop
pop
out
cld
mov
add
jne
dec
xchg
pop
out
cld
or
iret
jne
daa
icebp
xor
jg
inc
mov
mov
sub
js
inc
xor
test
(bad)
mov
and
jo
nop
dec
dec
cld
sub
mov
or
xor
pop
ins
fidiv
sub
ins
push
fidiv
sub
and
mov
or
xor
sub
inc
fcmovnb
test
xabort
arpl
cld
test
clc
std
loopne
icebp
jne
add
mov
int3
fidiv
stos
cmps
aaa
je
mov
sbb
cmp
cld
pop
inc
mov
and
jo
sub
adc
cld
ret
pop
mov
lock
iret
xor
adc
jno
xlat
inc
cmp
push
pop
xor
sub
xor
or
sub
adc
cld
ret
pop
mov
lock
iret
xor
and
cld
xlat
inc
cmp
push
push
xor
sub
xor
test
lock
ins
push
lods
ss
mov
cld
sub
imul
pop
stos
xchg
pop
jp
push
lods
mov
inc
(bad)
sbb
mov
xor
or
sub
not
scas
imul
std
jb
jg
jns
sub
in
mov
xor
xor
fbld
not
scas
sbb
or
std
jb
jg
sub
int3
mov
xor
scas
cmp
movs
mov
repz
inc
adc
stos
xchg
or
cs
call
add
das
mov
push
mov
jmp
out
add
in
inc
xor
inc
call
adc
retf
mov
mov
cld
sub
cdq
rol
pop
dec
push
xor
stos
and
cld
xlat
inc
inc
dec
push
mov
clc
inc
mov
outs
inc
xor
retf
into
jne
mov
inc
idiv
sub
xor
movs
inc
inc
inc
push
mov
mov
xor
sub
aas
test
xor
out
add
dec
push
jno
sti
mov
cld
sub
pop
movs
add
lods
inc
inc
xor
sub
jne
js
and
jge
cmps
or
sub
jne
js
xor
jecxz
xchg
sub
add
fdivr
xor
out
add
mov
std
rol
cld
sub
xor
inc
inc
pop
cld
inc
inc
pop
cli
xlat
xor
adc
and
shl
scas
jmp
stc
pop
repz
movs
add
lods
xlat
xor
add
int3
jne
ret
inc
mov
loop
xor
ja
imul
stos
sub
ins
mov
mov
aad
into
add
mov
mov
into
jge
stos
and
cld
sbb
jne
inc
inc
pop
cld
inc
inc
mov
mov
shr
pusha
xchg
xlat
mov
add
inc
mov
inc
mov
and
jne
mov
repz
arpl
arpl
test
inc
iret
stc
pop
repz
xlat
xor
xchg
xlat
mov
xor
int
fdiv
jnp
addr16
dec
mov
mov
xchg
push
jp
cld
sub
enter
retf
sub
cld
sub
aam
icebp
je
sub
cld
sub
loopne
icebp
je
sub
cld
sub
in
daa
icebp
je
sub
iret
cld
sub
js
inc
xor
mov
inc
xor
call
sub
mov
sub
dec
xchg
push
jle
rep
shl
cld
sub
retf
icebp
and
adc
xor
mov
dec
xchg
ds
mov
retf
inc
aas
dec
cmp
or
pop
sub
repz
inc
ss
xor
pop
sbb
dec
ins
mov
xor
inc
sti
jb
js
popa
mov
jge
pop
cs
and
cli
sti
jb
jp
fsubr
ins
mov
gs
movs
adc
stc
sub
loopne
ins
mov
jne
mov
inc
xor
clc
mov
inc
xor
sub
fsub
icebp
jne
inc
xchg
adc
loop
push
xor
sub
iret
stc
pop
repz
test
push
clc
pop
adc
cli
sub
jnp
rol
fdivr
test
ss
pop
pop
mov
jl
inc
xor
sbb
inc
aas
dec
sub
or
pop
push
or
mov
into
enter
mov
arpl
mov
retf
sub
xchg
jne
push
xor
sub
rcl
inc
cdq
mov
inc
xor
rol
cs
inc
lods
mov
(bad)
or
sub
jbe
rol
fdivr
daa
icebp
xor
adc
xor
rol
xor
pop
push
gs
movs
adc
stc
sub
loopne
lock
fdivr
mov
push
mov
add
scas
xor
jge
mov
cld
sub
or
sub
bound
cmpxchg
cs
inc
mov
mov
or
sub
push
jne
(bad)
fdivr
test
ss
pop
je
add
scas
xor
sahf
inc
rcl
xor
pop
inc
or
mov
scas
xchg
cmps
sub
test
sub
inc
mov
cld
sub
mov
sub
cld
daa
lds
mov
mov
adc
stos
xlat
inc
inc
dec
push
mov
int
lods
aaa
jl
jns
mov
add
cld
pop
mov
add
inc
xor
pop
push
jbe
ins
dec
sbb
(bad)
call
cld
stos
cmp
mov
cmp
and
int
into
enter
fdivr
mov
inc
dec
push
aas
dec
sub
or
mov
jp
cld
sub
fsubr
dec
mov
jbe
inc
mov
add
jle
add
fcmovnu
mov
pop
mov
cld
mov
inc
jmp
inc
loopne
ins
mov
mov
fmul
and
xor
(bad)
retf
stc
pop
int3
mov
xlat
into
ret
outs
loopne
rol
std
clc
(bad)
fdivr
mov
je
jno
pop
xor
mov
inc
dec
push
mov
xlat
outs
enter
xor
clc
mov
scas
mov
cld
sub
repz
adc
cmp
cmp
scas
inc
add
mov
outs
cmps
loope
gs
jmp
inc
fdivr
jno
xor
sar
out
add
inc
fmul
xor
sub
jl
inc
idiv
cwde
iret
add
xor
dec
push
aaa
jl
movs
out
add
inc
inc
in
daa
icebp
mov
(bad)
mov
push
inc
push
xor
idiv
aas
dec
lods
mov
add
(bad)
or
dec
sti
jb
sub
xor
jbe
xchg
test
add
mov
cmp
adc
jb
jns
xchg
cmps
sub
imul
push
xor
sahf
rol
adc
mov
cmp
idiv
jb
jns
sar
mov
mov
test
movs
sub
imul
xor
fild
xlat
inc
aas
dec
lods
mov
add
sub
loop
jnp
and
ret
xlat
mov
iret
add
dec
xchg
test
add
movs
xor
push
adc
inc
xor
lods
fnsave
sub
imul
movs
xor
push
pusha
imul
add
inc
inc
dec
push
mov
retf
cwde
iret
add
dec
mov
sub
adc
mov
call
stc
pop
repz
mov
mov
es
sub
into
mov
(bad)
mov
adc
scas
xchg
movs
sub
cmp
inc
mov
add
add
cld
adc
les
xlat
mov
mov
xlat
mov
xor
xlat
inc
inc
dec
push
mov
les
mov
add
inc
xor
popf
stos
fild
xlat
mov
iret
adc
mov
cmp
ins
mov
mov
test
iret
add
int3
lods
jl
mov
iret
jne
xchg
(bad)
jmp
mov
(bad)
clc
adc
lea
mov
mov
sub
cld
pop
call
pop
dec
mov
cld
sub
mov
idiv
repz
cmp
jge
inc
sar
xor
in
mov
fcom
xlat
mov
mov
add
jle
adc
mov
iret
add
mov
xor
popf
lahf
out
add
scas
add
inc
xor
sahf
rol
adc
mov
and
or
jo
mov
mov
iret
add
int3
movs
or
mov
mov
cmp
aam
cmp
mov
mov
fild
xlat
xchg
(bad)
mov
xchg
(bad)
sub
int3
std
loop
cmp
xlat
ret
xlat
mov
iret
add
inc
xor
pop
lock
stc
pop
repz
test
shl
xlat
mov
outs
inc
push
fcomp
xor
out
add
into
repnz
cmp
or
sub
imul
mov
idiv
out
add
int3
movs
idiv
xor
mov
mov
iret
add
mov
mov
jns
cwde
iret
add
mov
iret
add
mov
add
test
idiv
xor
mov
mov
iret
add
mov
add
mov
iret
add
mov
xor
cs
cld
mov
mov
mov
add
lods
cmp
inc
dec
xor
sub
iret
pop
mov
xor
repz
rol
adc
mov
mov
xlat
movs
xchg
out
add
into
cmp
sbb
jo
daa
icebp
movs
vmptrst
mov
mov
(bad)
mov
xor
jp
add
jns
cwde
iret
add
xchg
jns
inc
xor
test
cmp
daa
ret
or
sub
jns
test
add
icebp
xor
rol
pop
dec
mov
and
js
inc
xor
rcr
int3
mov
(bad)
mov
xor
sub
push
xlat
retf
sub
mov
idiv
out
add
inc
mov
int3
cwde
iret
add
mov
mov
sub
sbb
(bad)
fdivr
test
xor
rol
xor
test
xor
rol
sub
cmp
pop
repz
daa
icebp
movs
pop
idiv
mov
add
(bad)
mov
idiv
ss
xor
pop
push
mov
cld
sub
fadd
movs
add
clc
mov
mov
fcomi
mov
mov
mov
(bad)
xchg
mov
fnstcw
out
add
inc
aas
dec
mov
xchg
(bad)
mov
mov
mov
adc
inc
inc
aam
jnp
(bad)
sub
cld
pop
pop
mov
adc
inc
inc
call
sub
cld
pop
dec
mov
adc
inc
inc
jmp
clc
repz
ret
xlat
mov
mov
and
loopne
icebp
mov
(bad)
mov
in
and
mov
iret
add
xor
add
(bad)
hlt
lock
shl
xlat
mov
xchg
or
mov
les
xlat
mov
jmp
sbb
mov
mov
iret
jns
test
add
mov
inc
sub
inc
inc
dec
push
(bad)
aam
iret
jl
mov
add
inc
aas
dec
lods
mov
add
sub
loop
jnp
and
ret
xlat
mov
repz
push
sbb
cmp
mov
jmp
dec
mov
jne
out
add
std
movs
cmp
jno
xor
cld
sub
pop
mov
outs
bnd
mov
add
inc
daa
inc
xor
fninit
mov
push
das
inc
xor
fninit
mov
dec
xor
mov
jmp
mov
(bad)
inc
fucomi
mov
mov
inc
cli
test
iret
clc
ret
dec
mov
(bad)
inc
mov
(bad)
push
inc
sbb
inc
xor
ins
mov
xor
mov
mov
aas
jns
inc
xor
test
iret
std
daa
icebp
jae
adc
cmp
ins
adc
cld
fbld
enter
mov
mov
sub
add
xor
ins
mov
xor
(bad)
sar
stos
mov
retf
dec
mov
push
mov
xor
imul
and
sar
stos
mov
jne
sub
mov
sub
jl
inc
xor
sub
jne
add
cld
daa
icebp
xor
fild
cld
pop
dec
(bad)
mov
test
iret
clc
test
int
test
int
daa
lds
xlat
mov
fucomi
mov
mov
inc
cli
test
iret
std
ret
dec
mov
aam
mov
aam
inc
sbb
(bad)
mov
xor
add
jne
mov
mov
sub
clc
test
iret
std
daa
icebp
jne
ja
imul
adc
stos
mov
push
sbb
nop
sbb
cld
sub
mov
cld
sub
pop
cld
shr
jg
mov
xor
es
or
je
aaa
cmp
cld
ret
inc
jg
xlat
inc
dec
adc
imul
dec
adc
sub
stos
xchg
call
loope
sub
sbb
mov
cmp
xlat
xor
jno
inc
rol
xlat
pop
fdivr
jg
xor
xor
fbld
iret
add
cmps
iret
add
aas
cld
sub
cmp
jbe
jne
outs
enter
outs
xor
jns
(bad)
ins
add
xor
dec
add
mov
xchg
sub
pop
cld
shl
aas
jge
aad
les
stos
jg
movs
mov
sub
xor
inc
inc
pop
jl
inc
xor
sub
xor
sub
iret
mov
scas
shr
mov
dec
lock
ss
dec
mov
sub
(bad)
pushf
gs
xor
call
adc
and
xor
(bad)
lock
js
jo
mov
xor
mov
cmp
cld
fbld
not
sub
cmp
dec
mov
jno
mov
inc
or
mov
test
adc
push
xor
mov
cmp
loope
gs
push
pusha
scas
jle
(bad)
cwde
ins
lea
lods
xor
sub
xor
inc
inc
pop
cld
inc
inc
pop
cld
sub
add
fdiv
out
(bad)
into
add
add
daa
mov
cmps
add
cld
inc
inc
pop
cld
inc
inc
data16
adc
cmp
jmp
(bad)
or
sub
leave
jne
sub
bound
rcr
cld
sub
pusha
xchg
sub
rcr
inc
data16
adc
sbb
push
inc
xor
iret
into
jne
mov
push
cld
sub
mov
mov
adc
jge
sub
cld
sub
xor
inc
inc
pop
cld
inc
inc
pop
cld
sub
add
fmul
xor
into
enter
idiv
mov
fcmovne
inc
inc
pop
cld
inc
inc
data16
push
xor
inc
inc
mov
mov
mov
and
xchg
xor
nop
js
cld
sub
mov
mov
mov
adc
stos
mov
mov
mov
aam
ds
sub
jne
lods
aaa
repz
inc
push
std
jmp
or
xlat
xor
imul
jne
mov
adc
xchg
adc
fs
sub
hlt
in
sbb
loop
das
add
loopne
inc
xor
dec
jae
jne
dec
adc
mov
push
cld
pop
inc
idiv
push
imul
jle
sbb
push
fmul
jnp
xor
dec
mov
add
add
or
mov
add
imul
stos
and
and
inc
lock
add
out
outs
inc
ja
mov
jne
fbld
enter
mov
push
push
fcom
xor
daa
icebp
xor
js
add
push
in
dec
ja
fbstp
jb
rol
cld
sub
mov
aam
cmp
sub
outs
cmps
loope
gs
(bad)
fmul
jnp
addr16
and
in
cdq
cmp
sub
mov
push
sub
cdq
les
cdq
rol
int3
inc
mov
addr16
add
xor
fnclex
mov
loop
xor
test
and
pop
inc
push
cmp
sub
mov
pop
xor
fcmovnu
mov
add
jne
dec
xchg
sub
inc
jne
test
iret
(bad)
pop
inc
mov
les
xchg
xlat
inc
mov
xlat
inc
inc
sub
mov
jne
lahf
mov
repz
pop
xor
fcmovnu
daa
icebp
jne
daa
icebp
je
fld
lock
add
jl
mov
pop
adc
into
call
jl
mov
xor
sub
pop
mov
int3
jne
daa
lock
dec
aas
dec
cmp
xchg
call
dec
xchg
sub
aam
gs
mov
repz
or
or
into
jne
sub
aam
jmp
pop
cld
sub
jne
daa
lock
mov
adc
xchg
sub
aam
ins
dec
aas
dec
push
dec
xchg
ins
mov
outs
cmps
loope
push
ins
mov
inc
and
pop
xor
cmp
add
mov
mov
imul
ins
push
xlat
jo
mov
xlat
mov
ins
mov
lahf
mov
es
inc
cmp
add
je
sbb
mov
mov
pop
mov
hlt
mov
xchg
mov
xlat
mov
ins
mov
xlat
mov
in
aad
repz
mov
and
cld
sub
movs
mov
inc
call
jp
cld
mov
xlat
mov
ins
mov
xlat
mov
ins
mov
xlat
mov
ins
mov
xlat
mov
ins
mov
xlat
mov
ins
mov
xlat
mov
add
inc
and
or
add
mov
sub
enter
ins
mov
inc
and
xlat
mov
ins
mov
xlat
mov
ins
mov
pop
xor
mov
cmp
sbb
pusha
ins
mov
(bad)
mov
or
xlat
mov
ins
mov
or
add
add
mov
mov
ror
mov
inc
cmp
xlat
mov
ins
mov
add
mov
cmp
sbb
pusha
ins
mov
(bad)
mov
or
xlat
mov
ins
mov
jno
enter
int3
mov
mov
ror
mov
xlat
mov
adc
jmp
gs
(bad)
(bad)
jnp
addr16
dec
mov
mov
push
and
jmp
fmulp
jne
mov
scas
(bad)
cdq
(bad)
into
jne
mov
add
cld
sub
mov
adc
mov
add
bnd
mov
repnz
jmp
cld
pop
inc
idiv
shl
sbb
mov
aaa
cld
sub
dec
jge
mov
or
into
icebp
ja
cmps
test
je
mov
inc
mov
dec
mov
into
call
dec
cmp
mov
outs
cli
je
dec
xchg
ss
cld
sub
in
mov
dec
xchg
daa
icebp
jge
add
push
cld
sub
in
jne
mov
xor
sub
jne
js
gs
inc
aas
dec
ins
mov
shr
retf
pop
fmul
addr16
xor
js
call
fsub
xor
arpl
int
into
add
add
repz
add
adc
iret
add
imul
stos
or
xor
cmp
fdiv
mov
cld
sub
cmp
jne
mov
std
loop
retf
mov
loopne
mov
into
ror
into
jne
mov
cli
jb
sub
aaa
int
scas
js
sub
mov
and
mov
and
repz
call
inc
xor
sahf
cmp
cmp
adc
ins
and
cmp
cld
mov
scas
addr16
cmp
cmp
adc
into
out
call
adc
movs
inc
xor
xor
fbld
not
lock
xor
jmp
pusha
adc
or
cld
stos
sub
loopne
jb
mov
into
call
jmp
sbb
or
mov
cmp
(bad)
lea
xchg
add
inc
and
sub
jne
ret
push
mov
cmp
int3
and
int
les
sub
in
push
xor
lock
jb
adc
enter
int
sub
mov
sub
cmp
test
dec
cli
xchg
in
and
jb
rcr
xor
xchg
jge
sub
dec
xor
lock
jne
dec
xchg
jmp
into
or
jge
addr16
cld
sub
jb
mov
cli
jb
js
inc
mov
inc
mov
and
clc
inc
push
mov
jne
mov
jne
(bad)
mov
mov
xchg
add
jne
sub
clc
inc
push
xor
in
jb
adc
les
push
mov
jne
inc
shl
call
jmp
sbb
mov
xchg
add
lea
pop
sahf
mov
inc
push
aas
dec
jge
loope
mov
add
lea
mov
cli
jb
daa
icebp
gs
movs
mov
mov
xchg
add
mov
mov
push
test
mov
pop
adc
dec
xchg
sub
inc
push
pusha
adc
mov
cmp
sub
xor
sub
iret
mov
scas
mov
mov
ins
scas
pusha
add
arpl
pop
mov
xor
call
sub
js
sub
mov
inc
xor
call
mov
test
cmp
xor
jnp
addr16
adc
lods
test
inc
mov
pop
repz
add
movs
pop
iret
sbb
sbb
jl
sub
jecxz
dec
push
popa
jne
mov
cmp
aaa
outs
cli
jne
push
mov
jne
iret
movs
add
mov
xor
push
scas
sbb
dec
push
mov
and
jmp
pop
sbb
mov
(bad)
repnz
mov
mov
xor
mov
idiv
mov
shl
test
mov
xor
add
mov
(bad)
jne
stos
int
xlat
into
div
mov
pop
ins
mov
jb
movs
ret
xlat
mov
xor
inc
inc
pop
cld
inc
inc
pop
cld
inc
inc
pop
cld
sub
jno
mov
fcom
mov
add
into
rcl
into
test
dec
mov
xor
sub
int
xlat
pop
pop
std
xor
xchg
sar
jb
xlat
repnz
xlat
mov
xor
popf
mov
add
scas
imul
jnp
in
sbb
xlat
mov
gs
inc
mov
cmp
mov
jb
movs
ret
xlat
mov
xor
xor
sub
xor
mov
mov
(bad)
mov
xor
test
adc
sub
xchg
inc
cmps
jb
inc
cmp
mov
sub
fdiv
sub
jg
adc
cld
ja
imul
pop
stos
mov
outs
fidivr
sub
stc
pop
repz
test
inc
mov
aam
mov
mov
inc
js
repz
xor
pop
dec
iret
mov
scas
cmc
mov
inc
mov
cmp
pop
mov
sub
add
pop
mov
xor
pop
push
iret
mov
scas
std
mov
inc
iret
mov
scas
xchg
mov
inc
outs
mov
int
addr16
cld
pop
jno
mov
add
jne
mov
ja
sub
and
pop
push
iret
mov
inc
hlt
shl
sub
hlt
in
mov
test
mov
push
(bad)
inc
pop
clc
inc
inc
mov
mov
mov
cmp
inc
xor
stos
sub
jne
gs
push
pusha
stos
xchg
movs
cmp
or
(bad)
jbe
inc
xor
mov
pusha
xchg
sub
ss
sub
cld
inc
inc
pop
cld
xlat
xor
pop
dec
fdivr
popa
inc
xor
call
lods
pop
add
iret
mov
inc
loopne
inc
iret
mov
mov
jns
sub
mov
inc
add
movs
js
sub
pop
cmp
enter
test
pusha
inc
xor
call
adc
stos
jg
inc
call
mov
inc
inc
movs
mov
xor
sub
enter
div
mov
xor
inc
inc
iret
mov
inc
hlt
rcr
cld
sub
mov
lock
adc
jne
js
pop
cld
inc
inc
iret
mov
mov
js
sub
mov
inc
add
and
sub
pop
aas
mov
js
sub
mov
shl
mov
aas
jge
aad
js
addr16
inc
add
add
xor
sub
adc
add
cld
js
jns
sub
mov
jnp
xor
nop
jb
adc
enter
lock
inc
xor
sub
xor
inc
ja
sub
int3
sub
mov
xor
cld
and
fucomi
xlat
jb
sub
fmul
inc
xor
mov
ret
mov
inc
outs
mov
inc
loopne
jge
call
je
sub
and
jne
dec
repz
jle
mov
lds
adc
cld
mov
(bad)
or
and
dec
mov
jne
inc
repnz
xlat
xor
adc
wrmsr
cld
stos
cmp
adc
cmp
lock
ds
aas
outs
(bad)
or
sub
bnd
dec
xor
sub
cs
cmpxchg
cs
inc
jmp
sub
and
movs
mov
ja
dec
jo
push
sar
dec
pusha
adc
add
cld
mov
lahf
mov
loop
mov
mov
cmp
mov
mov
ins
dec
xor
dec
add
dec
mov
mov
jbe
stc
aas
jge
aad
les
stos
jg
ins
hlt
out
add
mov
ins
mov
shr
inc
arpl
add
cld
mov
xchg
xlat
jg
dec
addr16
push
inc
mov
or
test
mov
lods
es
inc
add
cmp
dec
aas
dec
sub
mov
pop
iret
xor
outs
jl
add
mov
xor
ret
(bad)
dec
push
mov
mov
cld
sub
mov
xchg
pop
xor
sub
jg
in
or
push
jmp
stos
mov
stos
mov
sbb
fsubr
outs
inc
xor
push
push
add
aas
dec
ins
mov
lahf
ja
mov
mul
inc
bnd
mov
mov
mov
inc
xor
add
addr16
sbb
jmp
lahf
xor
test
add
les
cld
movs
ret
(bad)
mov
fsubr
in
dec
mov
mov
inc
cmp
pop
inc
add
jle
cld
sub
lea
mov
data16
add
cld
sbb
xor
pop
push
fsub
inc
xor
lahf
iret
add
jmp
cld
sub
pop
sar
in
aad
mov
add
call
ja
xchg
iret
add
retf
sub
cld
jg
jo
test
mov
jp
xor
retf
into
mov
xlat
mov
inc
hlt
inc
inc
xor
sub
mov
retf
into
mov
xlat
mov
jne
mov
mov
iret
mov
pop
mov
mov
add
mov
iret
add
cmps
jb
xlat
xor
adc
add
cld
stos
cmp
data16
jb
xlat
repnz
add
mov
xor
dec
fmul
xor
inc
xor
mov
leave
jg
inc
dec
out
inc
mov
mov
xlat
mov
xor
stos
cmp
mov
dec
xor
sub
mov
sub
lahf
sub
fistp
iret
add
adc
leave
add
jne
sub
hlt
in
mov
test
lods
ins
inc
xor
inc
xor
mov
leave
jg
inc
dec
out
inc
mov
mov
xlat
mov
xor
stos
cmp
pop
cmps
jb
xlat
repnz
add
mov
xor
dec
fsub
ins
inc
xor
inc
xor
mov
leave
jg
inc
dec
out
inc
mov
mov
xlat
mov
xor
stos
cmp
fild
xor
xchg
dec
xor
sub
mov
sub
lahf
sub
fistp
iret
add
adc
leave
add
je
sub
hlt
in
xlat
xor
cmp
int3
add
mov
jb
js
icebp
mov
cmp
call
adc
add
cld
xchg
dec
xor
sub
mov
push
iret
dec
aam
into
add
std
je
sub
hlt
hlt
inc
dec
sar
xlat
mov
xor
stos
cmp
dec
add
cld
xchg
dec
xor
sub
mov
push
iret
dec
aam
into
add
lds
(bad)
hlt
hlt
inc
inc
sar
xlat
mov
xor
stos
cmp
jmp
add
mov
sub
fistp
adc
add
cld
xchg
and
cld
sub
mov
inc
jns
mov
ins
inc
xor
push
fmul
inc
xor
inc
xor
mov
leave
scas
inc
mov
lea
xlat
mov
jae
sub
mov
xlat
mov
and
mov
pop
sub
add
jae
sub
hlt
fadd
cmc
jae
sub
cmp
sub
or
(bad)
retf
fcomp
xor
inc
xor
mov
leave
scas
mov
mov
jb
jg
lods
mov
cmp
in
sub
pop
mov
mov
jae
sub
cmp
sub
or
(bad)
retf
push
pop
or
add
iret
add
scas
mov
cmp
scas
jns
sub
imul
inc
xor
mov
and
repnz
add
mov
xor
dec
fcomp
imul
and
cld
mov
leave
jg
inc
dec
out
inc
mov
mov
xlat
mov
xor
stos
cmp
ret
cmp
sub
cmps
sbb
inc
iret
mov
mov
xlat
mov
sar
push
xor
push
fsub
push
xor
inc
xor
mov
leave
jg
inc
dec
out
inc
mov
mov
xlat
mov
xor
stos
cmp
lahf
add
xor
sub
mov
push
iret
dec
aam
into
add
xchg
jb
sub
hlt
hlt
rcl
cld
sub
cmp
sub
or
(bad)
retf
fdivr
xor
inc
xor
mov
leave
scas
mov
mov
jb
jg
dec
mov
cmp
dec
fsubr
dec
mov
sub
jg
xchg
add
inc
fnstcw
lods
inc
xor
xlat
inc
mov
pop
inc
xor
retf
into
mov
xlat
mov
xchg
inc
xlat
mov
mov
add
ret
aad
or
mov
mov
add
cli
mov
aad
aas
dec
adc
mov
cld
sub
mov
sub
inc
stos
hlt
mov
movs
icebp
push
sub
movs
dec
xlat
mov
neg
sub
sar
sub
jno
sub
hlt
call
aad
mov
xchg
mov
xor
pop
ret
iret
dec
fdivr
sub
inc
xor
xlat
pop
mov
add
push
sbb
inc
pusha
adc
push
xor
stos
sub
(bad)
cld
sub
mov
sub
fistp
and
repnz
add
mov
xor
dec
fsub
and
cld
mov
leave
jg
inc
dec
out
inc
mov
mov
xlat
mov
xor
stos
cmp
pop
push
xor
xchg
dec
xor
sub
mov
push
iret
dec
aam
into
add
adc
sub
hlt
hlt
test
mov
iret
jns
mov
enter
or
mov
cdq
add
mov
int
test
inc
fnstcw
inc
xor
pop
mov
add
or
cld
sub
(bad)
cld
sub
jb
sub
unpckhps
xor
mov
(bad)
xor
adc
enter
aas
jg
inc
xor
mov
mov
int
xlat
xor
jno
jb
movs
ret
aad
pusha
adc
pop
xor
stos
cmp
mov
add
(bad)
clc
add
or
sub
leave
jne
and
add
test
add
xchg
mov
xor
lods
shl
cld
sub
mov
xlat
mov
enter
hlt
clc
mov
mov
into
add
xor
add
int3
mov
xlat
mov
sar
push
pop
fsubr
push
inc
xor
mov
leave
jg
inc
dec
out
inc
sbb
mov
xlat
mov
xor
stos
cmp
jmp
dec
cld
sub
mov
sub
fistp
and
repnz
add
mov
xor
dec
fdivr
pop
inc
xor
inc
xor
mov
leave
jg
inc
dec
out
inc
mov
mov
xlat
mov
xor
stos
cmp
popf
mov
add
scas
popa
shr
iret
jns
mov
(bad)
pop
mov
mov
xor
xlat
mov
iret
add
adc
hlt
fistp
mov
add
xchg
jns
mov
sar
xlat
mov
xor
stos
cmp
ret
and
cld
sub
mov
sub
fistp
and
repnz
add
mov
xor
dec
fcomp
pop
inc
xor
inc
xor
mov
leave
jg
inc
dec
out
inc
mov
mov
xlat
mov
xor
stos
cmp
sar
cld
xchg
dec
xor
sub
mov
push
iret
dec
aam
into
add
pop
paddb
(bad)
hlt
hlt
inc
jne
mov
xlat
mov
xor
stos
cmp
lock
call
ret
mov
sub
fistp
adc
jns
cld
xchg
and
cld
sub
mov
inc
jns
mov
push
inc
xor
push
fdiv
xor
inc
xor
mov
leave
jg
inc
dec
out
inc
sbb
mov
xlat
mov
xor
stos
cmp
dec
jns
cld
xchg
dec
xor
sub
mov
push
iret
dec
aam
into
add
lds
cld
sub
hlt
hlt
sar
sub
cmp
sub
or
(bad)
retf
push
pop
or
add
iret
add
scas
ins
ret
mov
and
frstpm(287
inc
inc
xor
jns
cld
xchg
dec
xor
sub
mov
sub
lahf
sub
fistp
iret
add
adc
leave
add
or
in
inc
outs
sar
xlat
mov
xor
stos
cmp
jecxz
xor
xchg
dec
xor
sub
mov
push
iret
dec
aam
into
add
lods
or
hlt
nop
dec
je
sub
iret
add
into
repz
xor
jb
xlat
repnz
add
mov
xor
dec
fdivr
inc
xor
inc
xor
mov
leave
jg
inc
dec
out
inc
mov
mov
xlat
mov
xor
stos
cmp
xor
int3
add
mov
xor
dec
mov
xor
retf
into
mov
xlat
mov
or
imul
inc
xor
mov
and
repnz
add
mov
xor
dec
mov
add
mov
xlat
mov
sar
adc
push
fadd
adc
xor
inc
xor
mov
leave
jg
inc
dec
out
inc
mov
mov
xlat
mov
xor
stos
cmp
sub
int3
add
mov
xor
dec
mov
mov
xor
sar
cld
sub
cmp
sub
or
(bad)
retf
push
pop
or
add
iret
add
scas
in
shr
mov
and
mov
inc
xor
mov
and
sub
ja
mov
pop
adc
add
or
sub
hlt
in
shr
cld
sub
cmp
sub
or
(bad)
retf
push
pop
or
add
iret
add
scas
mov
cmp
(bad)
cmp
sub
pop
mov
mov
out
mov
xlat
mov
xor
stos
cmp
(bad)
xor
xchg
dec
xor
sub
mov
push
iret
dec
aam
into
add
add
sub
hlt
hlt
rol
sub
cmp
sub
or
(bad)
retf
fmul
inc
xor
inc
xor
mov
leave
scas
mov
mov
jb
jg
ffree
sub
cmp
das
loopne
push
iret
dec
aam
into
add
mov
hlt
hlt
inc
inc
pop
cld
inc
inc
pop
cld
inc
inc
pop
cld
sub
add
fadd
scas
iret
add
into
call
add
scas
int
sub
cld
movs
cli
les
(bad)
mov
int3
add
mov
int
rcl
adc
mov
xor
xlat
repnz
add
mov
xor
jl
adc
jg
cld
mov
mov
repz
sub
xor
jg
pop
sub
mov
cld
ret
jl
add
mov
jne
js
mov
jns
mov
sbb
cld
inc
shr
sub
mov
(bad)
mov
xor
test
in
xlat
mov
jne
sub
jne
adc
inc
inc
inc
inc
pop
(bad)
test
xor
test
or
add
jb
inc
lods
out
mov
sub
fcomp
in
addr16
cmp
repz
mov
xor
jnp
addr16
and
(bad)
sbb
mov
lods
add
mov
mov
sub
cmp
cmps
xor
xlat
int
xlat
int3
jne
mov
inc
xor
retf
int
xlat
into
enter
mov
aad
iret
jne
jbe
ja
dec
mov
stos
sar
cld
sub
gs
movs
adc
stc
push
movs
pop
aad
iret
stos
shr
cld
sub
mov
aad
iret
add
scas
test
test
aad
iret
jno
dec
xor
mov
xlat
mov
mov
retf
sub
jns
mov
nop
add
mov
xor
sub
add
mov
iret
adc
jo
cld
mov
aaa
int
xlat
retf
sub
mov
xor
inc
xor
xlat
mov
xor
inc
inc
call
retf
mov
add
inc
pop
in
inc
inc
mov
add
inc
lds
inc
fdiv
cmc
or
sub
xor
sub
jns
mov
lahf
and
pop
dec
test
jl
mov
hlt
fsub
xchg
jle
sub
sub
cmp
and
cld
sub
fbstp
dec
inc
xor
mov
add
sbb
inc
xor
mov
mov
add
stc
enter
dec
mov
repnz
dec
movs
mov
mov
dec
mov
iret
add
repnz
add
mov
int
xlat
pop
fcom
fidivr
mov
add
xchg
jle
xchg
leave
sub
cmp
mov
cld
sub
nop
and
mov
add
and
sub
adc
ret
xlat
mov
into
add
pop
fadd
inc
xor
test
add
mov
xor
inc
add
movs
ret
xlat
mov
xor
stos
sub
xor
sub
cmp
inc
xor
sub
idiv
mov
mov
lods
mov
sub
out
ret
xlat
mov
sbb
cmp
js
cld
adc
mov
int
xlat
pop
mov
add
xor
sub
mov
(bad)
mov
fsub
dec
mov
sub
add
scas
sub
sub
adc
inc
xor
iret
into
mov
aad
iret
jne
mov
iret
xchg
cmp
out
mov
(bad)
mov
or
sub
hlt
in
out
ret
xlat
mov
enter
div
mov
pop
mov
add
xor
mov
pop
pop
adc
inc
xor
jae
cld
test
pop
add
mov
int
xlat
jnp
mov
dec
jmp
jge
xor
inc
xor
xlat
int
xlat
inc
inc
test
cld
sub
pop
clc
sub
jno
mov
arpl
jb
cld
inc
inc
pop
xchg
test
add
pop
fsubr
mov
or
mov
les
cld
ret
push
mov
mov
iret
add
(bad)
fist
inc
xor
das
les
cld
movs
ret
xlat
mov
xor
test
inc
data16
je
cld
inc
inc
iret
dec
mov
add
sub
iret
adc
je
cld
mov
mov
(bad)
sbb
mov
imul
mov
stos
mov
or
call
iret
mov
scas
or
sub
ds
into
add
inc
iret
mov
adc
ds
into
gs
xor
adc
jae
cld
mov
mov
adc
jae
cld
mov
mov
dec
ins
mov
xor
lock
xchg
aas
dec
jge
mov
xchg
sub
mov
cld
sub
mov
xor
jne
mov
add
lods
mov
pop
push
cld
sub
hlt
lock
xor
jne
(bad)
lock
js
lods
int
inc
mov
or
xor
xlat
xor
lahf
add
jno
inc
xor
int
inc
iret
mov
dec
xchg
sub
retf
sub
fcom
daa
lock
movs
add
stc
daa
lock
xchg
aas
dec
jge
mov
adc
jbe
cld
nop
mov
xlat
jne
scas
mov
lods
inc
inc
xchg
adc
inc
inc
pop
cld
rcl
xchg
xlat
adc
cld
sbb
jno
mov
add
sub
enter
jne
mov
jbe
cld
mov
sbb
aas
jge
aad
pusha
pop
xor
rcl
stos
mov
push
mov
mov
(bad)
sbb
mov
mov
mov
mov
add
mov
enter
inc
and
mov
sub
cmp
xchg
js
inc
xor
test
inc
arpl
popf
adc
xlat
scas
fxch
sub
cmp
dec
lock
mov
iret
add
fdiv
xor
outs
enter
lock
xchg
cmps
iret
add
xor
movs
ret
xlat
mov
rol
xlat
pop
data16
push
inc
enter
add
and
adc
xlat
scas
movs
enter
cmp
dec
lock
mov
iret
add
fmul
sbb
jge
loopne
cld
sub
mov
sbb
xor
sub
mov
test
or
adc
push
addr16
dec
mov
xchg
(bad)
(bad)
shl
sub
sar
into
imul
sub
mov
mov
pop
mov
mov
adc
cld
iret
add
inc
shl
gs
mov
cmp
fdiv
out
add
int3
mov
idiv
jle
push
mov
add
jge
sub
cmp
scas
sbb
imul
inc
xor
mov
and
fsub
xor
mov
xor
stos
cmp
das
jae
cld
xchg
dec
xor
sub
mov
sub
lahf
sub
fistp
rol
xlat
adc
test
add
adc
adc
inc
xor
push
fdiv
sbb
inc
and
cld
mov
leave
jg
inc
dec
call
sub
mov
enter
shr
hlt
test
inc
pop
retf
leave
add
rol
xlat
pop
fsubr
inc
xor
dec
fdiv
inc
xor
inc
xor
mov
leave
jg
inc
dec
call
sub
mov
enter
shr
cld
sub
hlt
hlt
shl
cld
sub
cmp
sub
or
(bad)
retf
outs
fsubr
dec
inc
xor
mov
leave
scas
movs
cli
xor
mov
jb
movs
cli
xor
mov
xor
stos
and
pop
push
pop
out
leave
add
rol
xlat
pop
pop
(bad)
add
rol
xlat
pop
fcom
sbb
jg
push
mov
cmp
inc
add
sub
cmp
sub
or
(bad)
retf
push
pop
or
add
rol
xlat
pop
fcomp
sbb
jg
dec
pop
test
xor
inc
rol
xlat
pop
fdiv
sbb
jg
dec
fdiv
inc
xor
inc
xor
mov
leave
jg
inc
dec
call
sub
mov
enter
shl
hlt
inc
inc
sar
enter
rcl
hlt
mov
sbb
inc
and
cld
mov
leave
jg
inc
dec
aad
xor
cld
sub
push
cld
sub
or
adc
iret
add
push
inc
sub
pop
into
sub
cmp
das
sbb
inc
mov
add
dec
into
sub
cmp
scas
or
sub
imul
inc
xor
mov
and
fsub
xor
mov
xor
stos
cmp
cmp
mov
add
add
rol
xlat
pop
fmul
sbb
jg
dec
fmul
inc
xor
inc
xor
mov
leave
jg
inc
dec
call
sub
mov
enter
ror
sub
hlt
hlt
inc
pop
sar
enter
sar
hlt
test
inc
fmul
xor
inc
xor
mov
leave
jg
inc
dec
call
sub
mov
enter
ror
hlt
xlat
xor
lods
inc
rol
xlat
pop
pop
shl
add
rol
xlat
pop
fdiv
inc
xor
push
fcom
and
cld
mov
leave
jg
inc
dec
call
sub
mov
enter
ror
cld
sub
hlt
hlt
inc
inc
sar
enter
shl
cld
sub
hlt
hlt
shl
sub
cmp
sub
or
(bad)
retf
push
pop
or
add
rol
xlat
pop
fsubr
dec
mov
sub
or
into
mov
idiv
int
sub
adc
inc
xor
mov
and
sub
jno
inc
rol
xlat
adc
test
add
adc
adc
inc
xor
push
fdiv
sbb
inc
and
cld
mov
leave
jg
inc
dec
call
sub
mov
enter
shr
hlt
inc
cdq
out
mov
enter
rcl
hlt
mov
ret
xlat
mov
add
sub
cmp
sub
or
(bad)
retf
push
pop
or
add
rol
xlat
pop
fcomp
inc
xor
dec
fcomp
inc
xor
mov
leave
jg
inc
dec
aad
or
cld
sub
push
cld
sub
or
adc
iret
add
push
inc
sub
jne
sub
cmp
das
loopne
push
mov
add
gs
sub
cmp
sub
xor
sub
mov
sub
jns
cwde
iret
add
inc
mov
add
shr
inc
pop
cld
movs
cli
enter
lods
movs
cli
xor
mov
out
add
scas
sbb
dec
aam
iret
add
sbb
mov
add
cld
ja
imul
stos
mov
stos
jg
mov
cmp
sub
lods
add
mov
fist
inc
xor
dec
arpl
imul
mov
inc
xor
ror
add
into
enter
mov
sar
test
adc
push
les
xlat
jmp
sbb
mov
call
xlat
sub
jns
mov
(bad)
sbb
mov
pop
cld
movs
ret
xlat
mov
xor
inc
inc
xor
sub
mov
aad
iret
lods
inc
call
test
push
pop
(bad)
sub
adc
mov
adc
call
inc
xor
ret
xlat
mov
int
xlat
pop
fmul
shl
jne
mov
iret
scas
movs
ret
xlat
mov
iret
add
dec
mov
sub
xchg
mov
int3
add
mov
xor
movs
ret
xlat
mov
into
add
pop
fsubr
inc
xor
mov
test
xlat
mov
xor
inc
add
movs
ret
xlat
mov
xor
stos
sub
addr16
fbld
iret
add
mov
xor
out
ret
xlat
mov
mov
mov
iret
add
xor
add
mov
cmp
sub
retf
add
into
div
dec
add
pop
fsub
mov
xchg
add
mov
into
add
pop
pop
cld
inc
inc
pop
fadd
pop
cld
inc
inc
mov
add
xor
ins
xor
and
xor
xlat
repnz
add
mov
xor
inc
enter
test
iret
xchg
cmp
out
mov
(bad)
mov
sbb
in
out
ret
xlat
mov
enter
mov
sar
mov
(bad)
mov
out
mov
sub
cmp
xchg
inc
scas
xor
sub
mov
pop
mov
mov
sar
repnz
fimul
in
inc
xor
xor
xor
sub
jns
mov
fmul
inc
xor
xchg
data16
sub
jb
movs
ret
xlat
mov
iret
add
mov
in
sub
jns
mov
fadd
in
dec
cmp
ret
(bad)
cld
sub
cld
xlat
repnz
add
mov
iret
add
inc
aad
inc
mov
add
test
mov
iret
add
inc
xor
iret
into
mov
sar
test
mov
xor
inc
dec
out
mov
sub
xchg
and
and
sub
cmp
lock
das
cmp
push
fsub
add
ja
fcmovne
add
(bad)
fcmovnb
jnp
repz
fist
dec
mov
shl
xlat
(bad)
hlt
lock
pop
mov
add
mov
iret
adc
nop
iret
add
in
cld
sub
fcomp
add
cmp
inc
xor
sub
enter
div
repz
xlat
pop
fsub
add
xchg
sub
iret
adc
outs
xor
mov
ret
xlat
mov
xchg
add
mov
xor
fcmovne
add
sbb
loope
xor
jge
aad
les
stos
jg
ins
hlt
xchg
cmp
push
(bad)
not
cmp
scas
shr
add
xor
ja
xor
mov
inc
and
add
jne
into
enter
imul
sub
adc
outs
xor
xlat
xor
jl
xor
sub
mov
inc
xor
outs
enter
jne
js
xor
sub
adc
cmp
data16
outs
xor
nop
push
or
sub
mov
lods
jle
fld
inc
data16
pusha
xor
mov
into
enter
jne
mov
mov
test
cmp
adc
popa
xor
jle
(bad)
sub
sub
jne
jbe
jne
sub
fdivr
add
jne
dec
(bad)
mov
lock
imul
int
into
not
ret
xlat
mov
sbb
sub
mov
add
jbe
xlat
mov
iret
add
inc
inc
clc
mov
inc
data16
outs
xor
mov
sbb
aas
jge
aad
les
inc
fnstcw
test
add
jne
and
mov
inc
into
enter
div
lahf
add
lods
inc
inc
out
mov
js
in
sub
mov
inc
add
cld
sub
xor
outs
xor
daa
lock
stos
xchg
lods
inc
mov
jne
js
cdq
(bad)
sub
cmp
retf
js
xor
jb
arpl
fdivr
add
jge
inc
push
cld
sub
iret
mov
(bad)
(bad)
enter
outs
xor
jns
stos
xchg
push
xchg
js
ror
into
jne
mov
inc
pop
cld
inc
inc
pop
stc
inc
inc
pop
cld
inc
inc
pop
cld
inc
xlat
xor
sub
ss
cmp
mov
xchg
sbb
xor
outs
xor
inc
inc
addr16
sbb
xor
outs
xor
mov
add
jne
sub
iret
leave
test
jb
sar
stos
inc
ja
leave
add
jno
shr
stos
inc
ja
leave
xor
jo
rcr
stos
inc
ja
leave
add
jno
ror
mov
xchg
sub
pop
int3
xlat
jb
arpl
fmul
add
xchg
sub
pop
int3
xlat
jb
pop
push
fcomp
add
xchg
sub
pop
int3
xlat
jb
pop
push
fsubr
add
jge
xlat
add
sub
iret
leave
sbb
jno
sar
stos
inc
ja
leave
fcomp
jno
shr
stos
inc
ja
leave
mov
cdq
pop
cld
sub
iret
leave
mov
jb
ror
xor
pop
lahf
push
jne
jbe
jne
sub
lods
mov
sub
fdivr
shl
mov
jno
rcl
add
scas
or
sub
shl
jo
inc
mov
jb
shr
sub
scas
mov
sub
fdiv
shl
mov
jno
ror
sub
enter
not
mov
popa
xor
mov
mov
push
jb
imul
xor
mov
xor
popa
xor
mov
xchg
mov
push
jb
arpl
fadd
inc
xor
mov
xor
popa
xor
mov
mov
push
jb
arpl
fsub
xor
mov
xor
mov
mov
push
jb
pop
push
fmul
jmp
mov
stos
jg
mov
sbb
in
mov
shl
add
into
not
scas
test
cmp
in
arpl
pop
cld
js
movs
fisubr
inc
mov
mov
xor
movs
add
lods
jle
mov
cld
xlat
jb
arpl
pop
cld
jle
jne
add
les
mov
xchg
sub
mov
inc
fwait
sar
push
pop
cld
sub
adc
popa
xor
mov
nop
mov
sbb
sub
mov
or
scas
push
lods
inc
push
pop
call
js
hlt
and
pop
es
add
adc
clc
mov
xor
dec
inc
cld
sub
scas
mov
sbb
das
mov
mov
stos
scas
push
lods
inc
push
pop
call
js
in
sbb
cmc
add
rcr
sub
pushf
mov
xor
sub
sub
mov
sub
cld
inc
inc
pop
hlt
inc
push
fcomp
push
inc
xor
sub
iret
leave
sub
jno
rol
cld
sub
scas
mov
sbb
sub
xor
inc
and
inc
inc
xor
js
pop
and
pop
es
add
inc
fldcw
inc
xchg
or
add
xchg
sub
xor
sub
test
pop
cld
sub
xchg
xor
in
mov
pop
bound
cld
mov
xchg
mov
iret
into
jne
mov
jb
arpl
pop
cld
xlat
jb
pop
imul
cld
sub
nop
cld
sub
aam
inc
xor
js
(bad)
and
pop
es
add
int
sub
lock
xor
mov
xor
mov
xor
sub
inc
sub
xchg
add
xor
sub
pop
jb
add
jb
inc
inc
fdivr
or
xor
fdiv
inc
inc
iret
leave
sbb
jno
inc
inc
iret
leave
dec
out
cld
inc
and
inc
in
xor
sub
mov
inc
fwait
sar
push
pop
cld
ror
cld
sub
fsub
inc
mov
push
and
cld
inc
cmp
xor
scas
jge
sub
mov
add
jae
sub
leave
rcr
cld
shl
sub
scas
mov
sbb
das
sbb
sub
into
inc
in
xor
sub
mov
inc
fwait
sar
push
pop
cld
shl
sub
mov
push
pop
cld
xlat
jb
arpl
pop
cld
xlat
jb
pop
push
pop
shr
inc
xor
sub
push
sub
xchg
sub
lods
inc
fwait
sar
push
pop
cld
shr
arpl
fadd
sar
add
xchg
sub
xor
into
inc
xor
inc
das
xor
sub
xor
sub
pop
xchg
hlt
add
jb
inc
inc
fcom
inc
xor
in
cld
mov
add
jne
sub
scas
mov
sbb
sub
xor
inc
mov
and
sub
cld
sub
xchg
jnp
jb
inc
popf
in
mov
dec
fs
mov
xchg
mov
sbb
sub
nop
mov
dec
das
sub
sub
aas
sub
xchg
sub
lods
inc
add
jmp
imul
imul
arpl
pop
cld
xlat
jb
pop
imul
cld
sub
add
sub
cwde
inc
inc
xor
js
and
push
pop
es
add
vmovaps
or
push
xor
mov
xor
mov
xor
bound
cld
inc
out
cld
sub
xor
sub
pop
cli
hlt
add
jb
inc
inc
fadd
inc
xor
in
cld
inc
inc
iret
leave
sbb
jno
inc
inc
iret
leave
dec
out
cld
inc
pop
pop
shr
inc
xor
push
pop
cld
sub
pusha
xchg
hlt
cmps
jb
inc
inc
in
mov
sub
jl
inc
xor
out
cld
inc
inc
iret
leave
sbb
jno
inc
inc
iret
leave
dec
out
cld
inc
pop
pop
jle
inc
xor
push
pop
cld
sub
pusha
xchg
mov
inc
in
mov
sub
mov
xor
jo
test
inc
pop
cld
xlat
jb
arpl
pop
cld
xlat
jb
pop
push
pop
in
outs
pop
and
inc
xor
test
pop
and
add
jb
inc
inc
xor
sub
xchg
aam
push
xor
mov
xor
mov
push
xchg
fld
cld
inc
push
pop
cld
sub
pusha
xchg
hlt
cmps
jb
inc
inc
in
mov
sub
xor
inc
xor
fdiv
inc
inc
iret
leave
sbb
jno
inc
inc
iret
leave
ins
out
cld
inc
push
pop
sub
xchg
add
cld
sub
pusha
xchg
retf
pushf
jb
inc
mov
xor
data16
mov
xchg
mov
xlat
mov
mov
add
sbb
jmp
mov
stos
jg
sbb
xor
cld
inc
mov
mov
rol
xchg
les
add
cmp
in
arpl
mov
jle
xor
iret
into
jne
mov
jb
arpl
fcomp
or
jno
mov
stos
rcr
sub
mov
mov
xor
aam
jne
js
jne
add
shr
xor
in
sbb
cmc
add
xor
shl
pop
imul
arpl
pop
cld
js
or
ins
mov
fcomp
cmp
xor
test
pop
xor
repnz
or
pop
sub
jno
inc
inc
iret
leave
sbb
jno
inc
inc
iret
leave
ins
out
cld
inc
imul
sub
jne
add
sar
pusha
xchg
jns
and
and
lods
inc
fwait
sar
push
pop
cld
shl
pop
push
pop
cld
inc
inc
pop
cld
inc
inc
pop
stc
inc
inc
pop
cld
inc
inc
pop
cld
inc
sti
xor
sub
cmp
sub
cmp
inc
pop
std
jle
add
sbb
scas
cmp
cld
xlat
jb
arpl
pop
cld
xlat
jb
pop
push
pop
cwde
inc
and
inc
push
pop
jmp
(bad)
pusha
xchg
hlt
cmps
jb
inc
ret
sub
xor
mov
enter
not
inc
pop
mov
sbb
scas
(bad)
jecxz
inc
pop
mov
add
jae
sub
leave
rcr
cld
shl
cld
sub
or
enter
cld
inc
inc
pop
mov
inc
xor
sbb
scas
mov
call
inc
or
cld
sub
xor
pop
xor
inc
inc
iret
leave
sbb
jno
inc
inc
iret
leave
dec
out
cld
inc
imul
sub
dec
xchg
sub
lods
inc
fwait
sar
push
pop
cld
shl
cld
sub
mov
push
mov
cmp
iret
leave
sbb
jno
inc
inc
iret
leave
dec
out
cld
inc
imul
sub
sahf
cld
sub
jmp
(bad)
pusha
xchg
hlt
cmps
jb
inc
ret
sub
xor
mov
mov
xlat
mov
add
imul
pop
imul
cld
sub
xor
inc
inc
xor
js
arpl
push
pop
es
add
(bad)
sub
mov
adc
cld
sub
scas
mov
sbb
sub
mov
sub
aas
sub
xchg
sub
lods
inc
add
jmp
in
cs
sub
add
inc
pop
cld
xlat
jb
arpl
pop
cld
xlat
jb
pop
imul
cld
sub
nop
cld
sub
cwde
inc
inc
xor
js
and
push
pop
es
add
inc
loop
inc
xchg
or
push
xor
mov
xor
mov
xor
xchg
inc
xor
inc
out
cld
sub
xor
sub
pop
cli
hlt
add
jb
inc
inc
fadd
ss
xor
in
cld
inc
inc
iret
leave
sbb
jno
inc
inc
iret
leave
ins
out
cld
inc
push
pop
sbb
inc
xor
pop
pop
cld
sub
xchg
push
pushf
jb
inc
popf
in
mov
xlat
pop
xor
mov
xchg
mov
ror
not
mov
xor
mov
xor
sub
add
inc
xor
sub
pop
stos
repz
jb
inc
inc
fdivr
in
cld
inc
inc
iret
leave
sbb
jno
inc
inc
iret
leave
dec
out
cld
inc
pop
pop
jle
inc
xor
sub
lods
inc
xlat
xchg
mov
push
pop
cld
sub
adc
pop
xor
mov
mov
sbb
sub
nop
mov
add
xor
test
pop
and
add
jb
inc
inc
xor
sub
xchg
aam
push
xor
dec
popa
cld
sub
scas
mov
sbb
sub
outs
xchg
cmp
xor
test
pop
and
add
jb
inc
inc
xor
sub
xchg
fdiv
mov
xor
mov
xor
sub
mov
ss
xor
test
pop
pop
repz
jb
inc
inc
fsub
xor
xor
in
cld
rol
or
mov
xor
ja
stc
aas
jge
aad
les
stos
jg
jge
mov
inc
xor
iret
into
jne
mov
(bad)
xor
sub
xor
xor
adc
pop
xor
mov
dec
mov
sub
xchg
sub
fcom
inc
xor
(bad)
fisttp
inc
xor
sub
push
add
xor
inc
xor
movs
add
lods
movs
add
lods
movs
add
lods
xlat
xor
xchg
adc
inc
xor
test
push
pop
xlat
mov
enter
jne
mov
xor
xchg
sub
jmp
sub
fs
push
iret
mov
inc
hlt
sar
add
(bad)
hlt
in
add
jne
inc
enter
dec
add
xor
jno
mov
pop
rcr
jl
les
in
sbb
jmp
mov
std
sub
stos
xchg
push
cmp
int
into
idiv
jo
cld
sub
xchg
dec
push
mov
add
pop
in
inc
fdivr
xor
inc
xor
mov
leave
jne
iret
ins
add
push
pop
inc
cwde
add
iret
add
pop
fdivr
mov
call
jns
mov
sbb
sub
adc
xor
test
iret
call
pop
or
inc
iret
add
pop
fdiv
xor
jl
mov
and
push
mov
add
vmovaps
adc
ja
mov
xlat
mov
daa
cld
sub
dec
add
xor
xchg
arpl
jb
movs
ret
xlat
mov
xor
test
inc
mov
xlat
inc
inc
in
inc
and
cld
xlat
mov
daa
cld
sub
dec
add
xor
xchg
stos
div
movs
ret
xlat
mov
xor
test
iret
cmc
pop
push
pop
pop
cdq
add
iret
add
pop
fadd
push
mov
out
dec
push
mov
add
push
jmp
inc
mov
jns
mov
mov
xlat
dec
inc
in
inc
inc
cmp
mov
daa
cld
sub
dec
add
and
ret
xlat
mov
xor
test
iret
icebp
pop
push
pop
lds
inc
iret
add
pop
fsubr
aas
inc
xor
mov
das
gs
push
mov
add
int
sub
cld
inc
inc
pop
mov
arpl
add
mov
jno
rcl
add
das
or
push
pop
inc
cdq
add
jno
rcl
add
das
lock
inc
fdivr
xor
jg
outs
mov
cmp
jne
add
sbb
jmp
scas
jle
mov
mov
jge
xor
iret
into
jne
mov
scas
movs
in
inc
mov
scas
rol
(bad)
hlt
hlt
and
addr16
pop
xor
ja
imul
mov
xor
jnp
addr16
jp
lahf
xchg
mov
cmp
mov
fistp
es
sub
mov
sub
fistp
iret
add
mov
pushf
dec
push
mov
add
cmp
mov
into
into
mov
fistp
lea
sar
pop
cmp
stos
mov
cmp
mov
add
inc
inc
in
inc
mov
mov
fistp
and
(bad)
mov
pop
std
fwait
add
mov
cmp
mov
add
inc
inc
in
inc
pop
cmp
mov
and
or
into
mov
fistp
lea
sar
pop
enter
jno
stos
mov
cmp
mov
add
inc
inc
in
inc
or
adc
mov
and
(bad)
mov
pop
nop
fwait
add
mov
cmp
mov
jne
fwait
mov
xchg
mov
add
dec
inc
in
inc
int3
cmp
mov
and
(bad)
mov
pop
push
fwait
add
mov
cmp
xor
enter
inc
in
inc
mov
adc
mov
and
sub
lea
sar
pop
adc
add
mov
cmp
xor
xchg
dec
cld
sub
lea
sar
pop
call
mov
cmp
xor
enter
inc
in
inc
test
mov
fistp
and
sub
inc
pop
push
mov
add
xor
xlat
mov
xor
inc
aaa
nop
mov
push
fcom
les
mov
add
mov
lea
mov
and
sub
or
mov
cmp
inc
add
inc
inc
pop
mov
test
add
stos
enter
lock
cli
xor
sub
mov
aam
iret
add
dec
mov
sub
jl
mov
aas
jns
inc
xor
test
iret
add
mov
xor
sub
iret
cld
mov
cmp
daa
push
mov
add
lods
in
inc
mov
and
lea
mov
fsub
jmp
sub
ret
sti
jmp
into
loopne
mov
mov
mov
sub
jg
daa
lods
mov
inc
xlat
xchg
mov
push
mov
add
add
sub
or
xor
inc
xlat
xchg
mov
push
mov
add
and
cmp
lods
jae
sub
cld
movs
ret
xlat
mov
xor
test
inc
mov
add
and
push
mov
add
shr
sub
push
add
enter
fmul
aas
inc
xor
push
mov
add
or
sub
jns
mov
xor
movs
ret
xlat
mov
jb
movs
ret
xlat
mov
xor
stos
and
sub
mov
sar
and
sub
jb
movs
ret
xlat
mov
iret
add
dec
mov
sub
jno
mov
lock
js
xor
sub
jne
mov
sar
into
idiv
mov
aas
jp
inc
xor
xlat
repnz
pop
ins
mov
jb
movs
ret
xlat
mov
xor
stos
and
cmps
cmc
jb
movs
ret
xlat
mov
xor
movs
ret
xlat
mov
xor
mov
mov
call
inc
sub
push
call
js
mov
fcomi
xlat
retf
xlat
mov
iret
add
xor
jge
clc
dec
cld
sub
iret
jno
mov
pop
sub
add
into
add
pop
fmul
xor
push
mov
add
vmovaps
jns
mov
add
mov
xor
mov
mov
addr16
push
inc
mov
add
mov
enter
popf
in
sub
jns
mov
popf
out
sub
inc
aam
iret
add
lea
sar
xor
sub
(bad)
sbb
inc
xor
mov
pop
cld
xlat
repnz
mov
xor
mov
scas
xor
jns
mov
iret
dec
les
std
add
(bad)
hlt
lock
ret
xlat
mov
iret
add
leave
and
sub
fimul
push
and
xor
mov
stc
ds
gs
call
inc
fcom
cmp
scas
jle
mov
adc
jge
les
aad
into
repz
mov
inc
pop
std
sub
adc
push
xor
mov
mov
pusha
adc
push
xor
inc
inc
fmul
cmp
add
pop
sbb
jno
nop
pop
push
jne
repz
xlat
into
repz
shl
cld
sub
pusha
popa
imul
xchg
xlat
inc
xor
inc
xlat
xchg
mov
sub
cwde
cmp
lods
ror
cld
sub
fndisi(8087
sbb
xor
ret
xlat
mov
fadd
cmp
xchg
sub
mov
jns
test
add
mov
iret
add
inc
aas
jns
inc
xor
stos
inc
inc
dec
push
cmp
sub
xor
xor
fbld
add
inc
xor
or
jns
icebp
or
xchg
sti
jmp
into
loopne
mov
into
retf
in
add
xor
fs
xor
sahf
cli
adc
mov
and
jmp
pop
sbb
mov
(bad)
neg
adc
(bad)
mov
lds
adc
mov
idiv
stos
iret
add
scas
popa
call
fiadd
mov
lds
call
inc
call
pop
lds
xchg
mov
push
mov
add
add
sub
cld
movs
ret
xlat
mov
fiadd
xlat
pop
fmul
lods
fcomp
add
pop
fdiv
in
mov
fld
xlat
pop
fcomp
pop
mov
aas
inc
inc
mov
add
sbb
sub
out
inc
xor
retf
into
mov
les
xor
dec
xor
inc
cli
jmp
inc
pop
cmp
add
jno
sar
cld
sub
xrelease
xor
and
add
inc
or
cld
(bad)
xchg
xchg
pushf
popf
jb
inc
xlat
xchg
mov
push
pop
mov
push
xor
movs
cli
sbb
xlat
mov
jb
xchg
pop
xor
sub
and
test
repnz
jb
inc
sub
ins
push
inc
xor
movs
fld
xlat
retf
lock
xor
(bad)
xchg
xchg
mov
xchg
mov
push
pop
cld
mov
xor
push
xor
stos
xor
stc
fld
xlat
retf
lock
xor
fnclex
mov
aam
xor
inc
inc
pop
cld
inc
inc
pop
cld
inc
inc
pop
cld
sub
xchg
sub
jno
shr
cld
sub
jne
inc
inc
pop
cld
inc
inc
pusha
adc
dec
xor
test
inc
idiv
sub
jne
js
mov
(bad)
mov
ds
sub
mov
jg
mov
xor
pop
jmp
movs
cli
test
xlat
mov
fcom
daa
inc
xor
js
xor
xor
out
add
jno
jmp
lods
repnz
xlat
pop
fdiv
xor
repnz
xlat
(bad)
clc
add
or
sub
leave
xchg
sub
inc
inc
jle
mov
add
inc
dec
rcr
cld
sub
pusha
xchg
sub
rcr
inc
iret
mov
iret
mov
mov
aas
movs
inc
shl
push
mov
arpl
mov
and
xor
xchg
push
inc
xor
sub
mov
sub
pop
mov
mov
iret
add
inc
xor
sub
mov
sub
cld
inc
inc
fcom
xor
lahf
idiv
sub
(bad)
inc
xor
ins
xor
sub
mov
sub
jne
js
cdq
repz
cld
xlat
jb
arpl
pop
cld
inc
inc
pop
cld
inc
inc
pop
cld
inc
inc
pop
cld
sub
jb
inc
cmps
in
mov
xor
cld
mov
mov
push
pop
cld
inc
inc
fsub
scas
lock
xlat
mov
mov
cld
sub
mov
das
movs
es
fmul
and
popf
jb
js
or
jns
stos
iret
add
mov
jne
out
fld
xlat
int3
mov
lds
stc
lock
std
js
movs
push
lds
fiadd
xlat
inc
xor
sub
fistp
inc
xor
(bad)
fld
xlat
pop
mov
add
pop
dec
push
pop
test
add
jb
inc
inc
xor
test
stos
imul
dec
lock
les
cld
out
inc
pop
dec
push
xor
sub
fs
mov
call
push
(bad)
mov
pop
cld
inc
lea
sub
and
adc
dec
xor
movs
ret
xlat
mov
xor
inc
pop
cld
shl
mov
xor
sub
std
xlat
jb
arpl
fcomp
retf
js
icebp
repnz
and
lahf
mov
lods
sar
cld
sub
xor
mov
xor
and
imul
mov
xor
jnp
addr16
movs
xor
sub
and
enter
stos
std
sub
repnz
mov
xor
sub
or
rep
aaa
xor
sub
std
sub
out
push
xor
sub
pop
and
rcl
xor
daa
ret
mov
sub
imul
das
test
repnz
xor
inc
mov
mov
pushf
add
iret
add
mov
mov
add
add
int
xlat
scas
sub
cmp
into
mov
aad
iret
jno
lahf
int
xlat
pop
iret
dec
sar
cld
sub
rep
ret
sub
mov
aad
iret
lods
xlat
jb
pop
imul
cmc
call
cmps
int
xlat
ins
mov
aad
iret
jg
inc
mov
add
sar
add
mov
mov
add
ret
xlat
mov
movs
sub
mov
int
xlat
jle
mov
sub
int
xlat
ins
mov
aad
iret
lods
mov
mov
iret
add
xor
mov
xor
dec
xor
mov
xor
sub
dec
das
inc
xor
repz
mov
test
ror
idiv
and
pop
repz
sub
cmp
sbb
scas
jmp
xlat
mov
test
push
inc
xor
xlat
jb
dec
push
fsub
shr
cld
sub
enter
neg
fdiv
adc
cmp
lods
adc
cld
sub
xor
ror
cld
sub
xor
inc
or
pop
dec
fsubr
and
jbe
jne
scas
sbb
sub
mov
(bad)
mov
cmp
ins
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
rep
xchg
ss
sub
fcom
inc
xor
mov
xor
mov
jl
pop
mov
xor
mov
inc
iret
mov
scas
(bad)
lock
add
mov
fcomp
inc
xor
add
cld
sub
xchg
sbb
mov
aam
xlat
mov
int
xlat
pop
fsub
inc
xor
stos
int
xlat
scas
push
cli
sub
add
mov
ss
sub
imul
daa
inc
xor
ret
xlat
mov
lods
mov
sub
inc
sub
adc
jnp
jb
inc
inc
fcomp
scas
lods
mov
sub
cvtps2pi
jge
fwait
push
cld
sub
mov
xlat
mov
int
xlat
xor
dec
push
xor
lods
(bad)
xor
sub
iret
cld
sub
jns
mov
add
adc
dec
xor
movs
retf
xlat
mov
mov
sub
add
xor
movs
jb
movs
fidiv
add
mov
iret
add
mov
pop
cld
inc
inc
pop
iret
repnz
loope
sub
leave
lods
out
cld
sar
cld
sub
mov
cmp
mov
int
xlat
pop
pop
shl
add
int
xlat
pop
fsubr
inc
xor
push
pop
add
inc
xor
inc
iret
add
pop
iret
leave
xor
jo
sar
std
xlat
mov
pop
cld
inc
inc
pop
repnz
pop
imul
inc
iret
leave
xor
jo
rcl
sub
mov
add
jnp
cld
pop
mov
adc
iret
sahf
jb
inc
inc
fmul
and
add
scas
shl
sub
cmp
xor
lods
inc
iret
add
inc
fcmovnb
daa
icebp
mov
xlat
mov
xor
xlat
mov
or
push
addr16
cld
inc
inc
pop
sbb
add
vmovapd
leave
xor
jo
shl
cld
sub
mov
sub
mov
xlat
mov
mov
inc
enter
mov
xlat
mov
lds
xlat
mov
jb
movs
ret
xlat
mov
xor
stos
and
xlat
inc
xor
movs
ret
xlat
mov
xchg
mov
sub
inc
sub
adc
out
sahf
jb
inc
inc
fadd
sbb
scas
sbb
sub
repz
xor
xor
fbld
iret
add
mov
mov
aad
iret
lods
inc
push
mov
aad
iret
lods
shl
sub
hlt
in
inc
mov
mov
xlat
mov
sbb
imul
jl
inc
iret
add
inc
inc
fadd
pop
cld
inc
out
jmp
adc
dec
xor
xlat
jb
arpl
fadd
xor
movs
ret
xlat
mov
int
xlat
pop
pop
pop
icebp
add
int
xlat
pop
fsubr
and
jg
push
pop
add
inc
xor
inc
iret
add
pop
iret
leave
add
jno
sar
sub
(bad)
std
xlat
mov
pop
cld
inc
inc
pop
xchg
icebp
add
cdq
hlt
sub
leave
add
jno
rcl
cld
sub
mov
add
jnp
cld
pop
mov
adc
add
jb
inc
inc
fmul
sbb
scas
adc
sub
sti
sub
cmp
inc
fcmovnb
daa
icebp
mov
(bad)
mov
xor
xlat
mov
or
push
addr16
cld
inc
inc
pop
shl
add
add
leave
add
jno
shl
(bad)
sub
jns
mov
mov
(bad)
mov
mov
inc
enter
mov
xlat
mov
lds
xlat
mov
jb
movs
ret
xlat
mov
xor
stos
and
xlat
inc
xor
movs
ret
xlat
mov
scas
mov
sub
inc
sub
adc
cmp
fadd
inc
xor
sbb
scas
pop
sti
sub
mov
inc
xor
lods
mov
fcmovnb
daa
icebp
mov
(bad)
mov
xor
xlat
mov
or
push
addr16
cld
inc
inc
pop
adc
add
dec
sti
sub
leave
or
jno
shr
sub
mov
(bad)
mov
mov
jg
mov
xor
(bad)
mov
inc
push
mov
ret
xlat
mov
iret
add
mov
mov
aad
iret
lods
inc
push
mov
aad
iret
lods
rcl
sub
hlt
in
mov
ret
xlat
mov
iret
add
inc
pop
clc
inc
inc
pop
cld
inc
inc
xor
push
inc
fsub
inc
xor
mov
add
sub
xor
popf
mov
add
scas
cdq
stc
sub
rcr
cld
sub
ja
and
(bad)
clc
add
or
sub
leave
jne
sub
int
xlat
adc
jo
xlat
repnz
xlat
mov
xor
aad
iret
lods
inc
inc
pop
or
add
into
add
scas
cmc
stc
sub
jno
mov
iret
mov
pop
mov
rol
mov
lds
xlat
mov
into
add
scas
test
cld
movs
ret
xlat
mov
rcr
inc
iret
dec
fdivr
xor
std
ror
test
xlat
scas
and
sub
leave
ins
out
cld
sar
cld
sub
xor
sub
xor
scas
mov
sub
jns
mov
jne
sub
inc
pop
cld
xlat
repnz
xlat
mov
xor
xlat
xchg
mov
push
xor
jne
sub
int
xlat
adc
jb
xlat
repnz
xlat
mov
xor
aad
iret
lods
inc
inc
pop
adc
add
into
add
scas
aad
sub
dec
fdivr
xor
sub
xor
sub
jne
inc
enter
xor
sub
pop
dec
push
pop
test
add
jb
inc
inc
xor
test
mov
cmp
sub
scas
mov
sub
add
mov
iret
add
xor
pop
push
iret
mov
inc
hlt
shl
cmps
loope
and
jge
aad
les
stos
jg
inc
hlt
xchg
xor
dec
sub
sti
imul
inc
(bad)
sbb
int3
jne
adc
dec
mov
sub
jg
push
cmp
lods
test
cld
sub
mov
add
adc
inc
xor
nop
loope
cld
sub
mov
popa
imul
pop
push
fdiv
xor
sbb
xor
add
scas
inc
clc
sub
leave
add
jno
pop
dec
iret
leave
xor
jo
shl
aad
into
test
sub
cmp
sbb
scas
jns
sub
leave
add
jno
pop
dec
iret
leave
or
jno
shl
sub
mov
xor
pushf
add
iret
leave
rcr
cld
rcr
sub
enter
test
sub
and
adc
inc
inc
not
jb
pop
push
fadd
inc
xor
repz
adc
push
xor
mov
outs
enter
add
mov
int3
sub
(bad)
sbb
xor
ja
arpl
loopne
pop
xor
mov
outs
scas
mov
xor
mov
push
inc
xor
sbb
xor
ja
imul
mov
sub
cmc
repz
add
iret
mov
mov
fadd
and
xchg
leave
sub
sbb
sbb
loope
and
sub
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
test
sar
cld
sub
idiv
inc
fild
mov
lods
sub
dec
mov
mov
into
idiv
pop
addr16
push
ret
pop
ja
xchg
inc
cmp
inc
mov
or
ret
pop
sub
aas
inc
das
dec
lock
mov
cld
rol
stos
inc
inc
pusha
adc
test
add
rep
test
inc
sbb
jns
arpl
pop
outs
hlt
jns
arpl
sbb
jl
cmp
call
mov
(bad)
and
ins
arpl
push
cmp
fninit
cmps
jnp
int3
je
sub
cmp
sub
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
