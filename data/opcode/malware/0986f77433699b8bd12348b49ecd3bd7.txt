ja
(bad)
call
icebp
mov
test
je
call
and
pop
ret
mov
push
xchg
pop
push
std
mov
or
xchg
je
mov
mov
and
std
dec
jne
jbe
add
ror
(bad)
pop
mov
fild
leave
ret
mov
test
je
mov
add
xor
ins
sub
pop
push
and
inc
or
outs
in
pop
sti
jae
movs
and
inc
sbb
push
add
jae
pop
adc
fisttp
gs
push
lea
push
sub
fstp
test
int
pop
sti
idiv
(bad)
lea
xchg
cmp
sbb
sbb
jle
cdq
sbb
add
push
cmp
push
adc
je
sub
mov
push
mov
push
pop
push
mov
and
je
jmp
or
dec
push
push
idiv
adc
push
or
jmp
sbb
adc
ds
sbb
push
jecxz
or
add
adc
lods
shl
cmc
test
push
inc
sar
sbb
push
mov
push
or
sti
dec
xchg
push
cmp
push
adc
popf
nop
lods
loope
mul
add
outs
xlat
sub
add
xor
inc
adc
into
push
neg
pop
scas
pop
ret
adc
pop
fdivr
jg
in
and
add
push
push
push
mov
test
(bad)
mov
push
sbb
push
mov
and
les
add
cmp
or
xchg
push
or
retf
sub
rcl
push
psubq
test
sbb
jno
(bad)
push
imul
gs
or
out
dec
inc
adc
ret
jl
inc
outs
movs
inc
in
mov
fstp
mov
(bad)
dec
sbb
lock
mov
ins
jecxz
push
in
inc
xor
or
sbb
jg
fucomi
or
adc
jge
add
mov
jg
adc
push
add
push
add
push
and
push
cmp
or
mov
jl
dec
add
sub
in
mov
in
and
push
jp
js
fcmovne
ins
pop
jns
add
jnp
(bad)
ins
xchg
inc
fadd
jle
push
popa
jbe
mov
shr
inc
(bad)
cmp
jbe
(bad)
mov
pop
neg
sbb
inc
(bad)
cmp
in
cmp
jmp
imul
clc
jo
xchg
or
inc
in
and
fisubr
les
jne
inc
push
lea
ins
pop
loope
mov
push
or
int3
jge
xchg
orps
and
(bad)
add
add
or
sbb
fidiv
mov
or
add
lahf
call
xchg
push
jge
fist
cmp
fild
outs
int3
pop
or
cli
cld
mov
and
cmp
out
add
jp
dec
cld
jmp
add
sub
outs
jmp
outs
in
mov
lock
cld
or
mov
fstp
(bad)
or
push
pop
cmp
mov
jbe
or
xchg
inc
dec
push
or
add
jb
push
cld
add
pushf
add
add
enter
call
xor
or
enter
push
xchg
jo
pop
fcom
lods
cmp
outs
fst
xchg
xor
or
shl
xchg
push
xchg
in
mov
and
pshufw
xchg
sbb
adc
cmp
push
mov
into
std
mov
cmp
inc
mov
mov
add
or
stc
jmp
int3
and
pop
adc
sbb
push
mov
std
cmp
inc
inc
xchg
add
mov
in
aaa
xor
sbb
jae
adc
ficomp
sbb
and
pop
ret
jge
mov
in
mov
stos
sbb
add
add
and
or
or
mov
and
int3
int3
ja
sti
push
pop
pop
jecxz
adc
cld
jno
jmp
add
call
data16
mov
cmp
sahf
lods
mov
push
push
add
jne
cmp
xor
sbb
add
outs
jnp
cld
ret
mov
hlt
outs
push
mov
(bad)
mov
mov
and
clc
xchg
mov
inc
jnp
pop
push
adc
mov
sub
cmp
or
mov
pop
adc
into
and
cmp
mov
ins
outs
lods
fistp
push
inc
pop
jae
mov
jge
fild
inc
shl
push
ss
xchg
xor
cld
or
fmul
mov
mov
cli
push
sbb
sub
push
push
or
sub
nop
dec
jp
jp
scas
push
int3
dec
jle
jp
jmp
sub
jo
pop
fsubr
mov
mov
jp
jle
mov
add
mov
inc
pop
(bad)
add
push
add
jo
(bad)
push
jne
(bad)
cld
ret
dec
jb
jne
std
sbb
les
jecxz
lods
push
mov
push
jp
mov
es
inc
out
xor
adc
mov
dec
dec
(bad)
nop
adc
sbb
mov
xchg
push
push
fadd
(bad)
push
adc
push
inc
ss
cwde
dec
mov
sub
and
(bad)
in
sub
scas
pop
mov
ret
add
imul
test
push
arpl
push
xchg
mov
fnsave
lea
fdiv
adc
push
sbb
jg
xchg
mov
test
cmp
shl
mov
hlt
cmps
dec
add
mov
clc
add
das
hlt
add
jl
loope
(bad)
adc
mov
cmp
inc
dec
inc
fldl2t
dec
adc
xor
pusha
inc
fmul
xor
outs
mov
cmp
adc
int3
out
lock
or
mov
cdq
ds
push
push
pop
sbb
dec
mov
adc
and
push
pop
sbb
jg
or
push
mov
pop
sbb
ins
ins
aaa
imul
mov
jnp
adc
cli
lds
rcl
loopne
je
mov
dec
fmul
lock
cmp
out
mov
jmp
nop
push
xchg
cmp
adc
jle
sub
sub
sub
jle
cld
fwait
addr16
bound
test
add
aas
dec
(bad)
jne
inc
mov
push
inc
pop
int3
or
dec
xchg
push
outs
test
inc
clc
sti
sbb
dec
sub
sar
jmp
adc
add
or
cwde
cmp
mov
je
inc
js
fnstcw
or
xlat
push
adc
sahf
fadd
jp
push
arpl
adc
push
jns
repnz
fnstsw
ret
push
in
je
fs
les
ss
pop
repnz
cmp
jne
xlat
pop
push
or
add
cmp
mov
add
sbb
js
xor
cmps
and
clc
div
push
cmp
nop
push
(bad)
stos
rcr
daa
rcr
adc
sub
mov
cmp
jg
out
push
ficomp
or
mov
hlt
sub
inc
push
cdq
sub
sar
push
adc
push
lock
mov
mov
clc
mov
ins
xor
mov
add
mov
xchg
retf
or
adc
or
and
fnstcw
test
test
mov
add
mov
jg
mov
xlat
mov
cmp
cld
test
daa
fstp
add
adc
pop
add
inc
xchg
adc
sub
stos
push
push
push
scas
popf
mov
pushf
add
pop
fbld
cmp
cmp
sar
rcr
sub
push
outs
dec
mov
sbb
add
pop
push
add
int3
mov
sub
push
syscall
arpl
loopne
clc
mov
xchg
jae
outs
xor
test
or
pop
stos
add
push
jne
add
call
cmp
hlt
xchg
push
int
je
push
xchg
cmp
or
lock
cwde
sub
je
sbb
pop
mov
lock
test
or
mov
test
in
sbb
sti
push
daa
jno
jge
push
call
nop
add
sub
in
and
add
push
rcl
sub
fxch
push
xchg
mov
fld
and
cdq
xor
or
xchg
pop
in
in
and
jg
ins
leave
int3
push
inc
clc
test
fadd
inc
es
add
adc
sbb
or
fadd
dec
add
and
call
add
sub
call
mov
dec
pop
cmp
retf
(bad)
jge
cmp
sbb
iret
test
es
push
sub
ss
and
div
enter
rcl
call
pusha
sti
adc
push
pop
nop
bound
push
and
mov
pop
shr
(bad)
pusha
or
outs
retf
pop
jb
jl
nop
nop
(bad)
nop
(bad)
add
int3
or
retf
ficom
(bad)
jno
mov
push
mov
xor
add
dec
jae
inc
jg
rol
enter
cmp
(bad)
mov
out
xor
je
inc
add
fs
enter
adc
xchg
xchg
mov
cld
mov
sbb
xchg
jo
push
add
and
sbb
sar
push
in
jno
push
mov
pop
xor
pusha
pop
les
fisub
inc
ret
test
mov
cld
nop
inc
jp
cmp
xor
push
lock
push
imul
mov
cmp
mov
and
stc
fist
popf
mov
cwde
inc
or
xor
dec
fmul
fmul
add
dec
cs
push
cmp
pushf
dec
ret
or
push
pushf
and
xor
mov
or
sbb
xor
and
or
sbb
(bad)
rcl
mov
pushf
popa
xlat
mov
or
or
aaa
and
jns
inc
mov
add
xlat
(bad)
pop
mov
retf
lods
mov
shr
push
cmp
lock
or
sub
fwait
xlat
or
pop
lock
xor
inc
sbb
jmp
int3
cmps
lods
add
adc
and
push
test
xchg
pop
push
xor
sbb
mov
and
repnz
les
xor
and
adc
push
(bad)
adc
xlat
or
adc
fcom
in
mov
in
nop
or
add
adc
popf
inc
scas
in
xchg
pushf
or
leave
mov
cwde
int3
mov
adc
and
sbb
fs
in
scas
nop
or
in
ret
inc
pop
loopne
push
nop
inc
loopne
or
or
xor
sbb
cdq
add
int3
in
and
xchg
sub
sbb
nop
add
loopne
mov
outs
push
and
add
mov
push
out
data16
mov
mov
adc
inc
sbb
fild
sub
cs
stc
or
push
push
push
mov
test
fucomip
adc
pop
push
push
or
push
add
and
xor
mov
dec
adc
mov
pop
mov
pusha
pop
add
pop
xlat
addr16
std
stos
sbb
add
or
pop
add
cmp
je
test
add
and
add
adc
sbb
add
pusha
adc
enter
dec
lods
cmp
mov
scas
pop
or
sbb
xor
or
dec
mov
mov
clc
or
xor
ret
xor
push
and
cmp
xor
test
jno
mov
iret
xor
ins
sub
clc
adc
adc
lds
movs
push
push
clc
lea
repnz
imul
cmps
mov
jle
and
push
push
and
jbe
xor
jge
aas
push
inc
dec
mov
(bad)
push
push
test
pushf
fcomp
cmp
xchg
pop
jo
lock
add
pop
sbb
(bad)
cli
aaa
sti
jge
push
inc
adc
ins
sbb
pop
add
scas
sbb
sbb
sub
or
in
pop
imul
push
lea
leave
(bad)
pop
jo
int3
jge
ja
jge
or
mov
pop
pop
pop
(bad)
in
adc
add
sub
pop
clc
add
push
out
std
inc
and
clc
(bad)
in
or
pop
xor
pop
dec
xor
mov
pop
adc
call
pop
inc
int3
cmps
jae
mov
sbb
push
imul
mov
js
cld
imul
xchg
cmp
cdq
xchg
adc
inc
pop
(bad)
ror
sti
loopne
or
sar
cld
retf
into
push
enter
dec
dec
push
stc
and
add
pop
enter
aaa
dec
retf
and
popf
gs
lock
mov
sub
pop
call
sbb
add
xchg
add
cwde
popf
sbb
enter
leave
cmps
mov
sbb
add
call
lahf
popf
nop
shl
sbb
pop
add
jne
(bad)
jg
cmp
cmp
jl
cmps
(bad)
(bad)
shl
fdivr
sbb
push
repnz
fdivr
mov
fnstcw
xchg
adc
jp
mov
add
xchg
fwait
pop
sub
inc
fucomp
shl
mov
pop
push
mov
or
sub
sub
xchg
shl
xor
daa
je
mov
nop
imul
out
xor
enter
jl
mov
in
or
fs
leave
(bad)
pop
inc
jp
mov
js
xchg
arpl
je
lea
mov
dec
sbb
inc
aaa
mov
or
adc
bswap
ins
push
xor
mov
push
push
jl
cmp
rcl
push
ins
push
xor
movs
mov
add
xor
push
cwde
adc
loop
jbe
pop
cmp
pop
pop
push
jae
fs
and
pop
sbb
cwde
and
popa
push
xchg
cld
or
xor
xor
mov
in
jne
inc
xchg
and
inc
(bad)
nop
test
and
jbe
scas
test
cs
sub
lock
sub
add
cmp
outs
retf
je
mov
fs
stos
cmps
jne
push
cmp
pop
ret
mov
ja
add
mov
pop
inc
or
fcmovu
or
rol
loopne
cmp
mov
call
aam
movs
arpl
mov
push
mov
push
xchg
nop
dec
push
or
pop
pop
xchg
xor
jne
jno
gs
loop
sbb
cmp
test
or
aam
dec
jl
push
push
push
sbb
js
sahf
sub
lock
inc
ins
ret
inc
outs
aaa
pop
pop
sar
or
mov
and
adc
rol
aaa
fsubr
into
inc
xor
xchg
push
mov
lock
pusha
mov
test
out
jae
push
xor
push
aam
inc
sbb
sbb
mov
ret
pop
sbb
add
lods
mov
push
dec
aaa
mov
in
aaa
in
stc
fistp
in
push
sbb
sub
sbb
test
push
xor
xchg
fstp
daa
dec
push
xor
fldenv
je
cld
or
fs
out
and
arpl
fxch
scas
push
(bad)
inc
mov
add
jl
(bad)
or
call
fadd
ret
fs
fwait
mov
adc
mov
push
lea
xor
or
sbb
int3
lea
mov
adc
adc
or
sub
or
(bad)
aas
mov
and
adc
adc
into
xchg
ror
cli
adc
sub
jo
sub
movs
push
outs
fsubr
jne
into
push
outs
add
retf
std
cld
jo
add
es
sbb
jl
push
or
fstp
ror
push
ss
aaa
inc
adc
les
ins
fwait
in
cmp
mov
sbb
adc
iret
test
ret
and
push
mov
fs
icebp
in
add
jmp
dec
mov
mov
sbb
adc
or
loopne
add
popf
retf
retf
lock
add
or
sub
adc
xchg
xor
add
popa
adc
sbb
mov
mov
mov
mov
mov
push
call
dec
into
mov
ins
out
xlat
stos
inc
or
or
sub
enter
and
sbb
and
or
aam
add
cmps
push
cwde
pop
ins
mov
popf
fist
inc
clc
mov
(bad)
xchg
in
es
inc
and
dec
or
and
cld
jmp
inc
add
push
add
sbb
adc
and
loopne
mov
mov
retf
dec
shl
cmp
movs
push
clc
push
lea
enter
mov
pop
je
aaa
add
pop
cmp
outs
xlat
adc
fisttp
adc
pop
push
add
and
xchg
rol
jne
push
lock
cmp
sbb
jbe
push
pop
cwde
inc
mov
ret
jmp
fcmovnbe
out
mov
imul
mov
jecxz
sub
sbb
mov
loop
cmp
mov
(bad)
adc
add
adc
or
xor
test
call
std
mov
fchs
std
stc
les
int
getsec
(bad)
fcomp
std
into
push
push
les
jne
or
adc
adc
xchg
push
push
cmp
adc
adc
or
mov
mov
fnstsw
or
enter
(bad)
mov
jne
test
mov
shr
test
add
aam
(bad)
aam
les
push
xchg
ror
in
jecxz
push
push
mov
in
sbb
push
repz
in
in
scas
ror
and
lock
xor
ins
sub
call
sub
xor
(bad)
movs
adc
ror
and
inc
push
dec
popf
jb
xor
pop
aaa
jo
ins
out
hlt
push
lods
push
lock
inc
outs
jmp
sbb
hlt
push
adc
int3
mov
ds
or
xchg
push
retf
mov
pop
das
out
cmp
cs
jbe
adc
mov
mov
jae
(bad)
xlat
bound
bound
and
jo
jecxz
into
inc
stos
(bad)
push
pop
pop
cmp
pop
mov
xchg
lock
jmp
out
dec
push
and
push
cmp
jne
mov
cmp
jbe
push
push
test
lods
idiv
adc
jle
je
pop
dec
add
and
imul
test
not
pop
push
jnp
je
clc
inc
or
rol
sub
fistp
xchg
adc
jb
shl
pop
xchg
dec
test
or
adc
cmp
dec
in
pop
je
dec
push
push
xchg
jmp
sbb
sub
cmps
loop
xorps
mov
jne
arpl
push
shl
or
scas
es
sbb
in
or
nop
jmp
shr
mov
cmps
imul
xor
mov
pop
xlat
test
adc
call
jmp
inc
jno
fild
jmp
sub
in
mov
xor
test
stos
in
adc
mov
addr16
and
mov
xchg
rol
add
fcomp
sbb
lahf
ins
mov
out
mov
cld
push
jns
adc
aad
sub
sub
or
sub
pop
mov
push
lock
data16
xchg
mov
(bad)
mov
inc
repnz
or
push
std
add
mov
adc
push
ds
fdivr
in
(bad)
mov
ja
push
mov
loopne
inc
in
mov
cmp
push
test
jecxz
rcr
push
loope
out
cmp
mov
ja
push
adc
idiv
jmp
aam
xor
dec
and
mov
push
sti
mov
jecxz
cmp
imul
test
aad
out
xor
push
je
(bad)
setg
xor
cwde
jae
add
mov
xor
mov
das
and
add
call
mov
ds
mov
sub
pusha
add
pop
stc
test
xchg
and
loope
int3
int3
mov
int3
int3
push
fs
sub
aam
mov
in
(bad)
or
enter
add
mov
jb
xor
and
adc
loopne
loopne
and
adc
ror
xchg
push
push
aam
(bad)
je
pop
cmp
mov
test
xor
pop
push
push
lock
add
test
push
add
mov
or
cld
je
adc
div
ja
sbb
cld
test
mov
mov
gs
jnp
mov
sbb
mov
sbb
fdivr
lock
add
pushf
sub
loopne
and
xor
inc
mov
pop
sbb
add
test
stos
mul
pop
push
or
rcl
dec
loopne
dec
dec
adc
pusha
scas
cmp
sbb
push
mov
mul
fild
sub
and
data16
mov
popf
add
in
or
fsub
mov
fadd
fmul
pusha
sub
in
leave
and
sub
and
pusha
das
in
bound
xchg
mov
adc
pop
test
loope
xchg
jmp
xor
add
nop
add
sbb
xor
mov
(bad)
nop
mov
mov
pusha
and
xor
hlt
pop
add
adc
mov
or
jmp
lea
xor
mov
(bad)
jp
adc
xor
or
adc
sub
mov
loopne
mov
das
or
cmp
imul
movs
not
and
push
mov
or
adc
mov
dec
jb
push
pop
outs
or
inc
push
cmc
push
or
lea
gs
xor
jp
or
dec
pop
leave
je
test
xor
dec
add
aas
xor
xchg
cmp
cmp
movs
call
or
cmp
leave
ret
mov
pop
adc
mov
adc
inc
pop
test
push
fld
sar
inc
retf
cmp
cmps
imul
push
inc
mov
lea
and
dec
pushf
sbb
sub
pop
or
gs
shl
pop
or
addr16
push
cmp
pop
mov
in
add
stos
mov
xlat
cmp
mov
clc
sub
pop
sbb
xor
cmp
jnp
daa
sub
imul
cmp
adc
sub
add
ins
movs
push
add
dec
ror
pop
or
push
fst
sub
add
ret
dec
fnstenv
mov
pop
add
into
lea
xchg
mov
cwde
xor
cmp
in
add
leave
xor
sbb
dec
inc
push
pop
mov
push
push
ins
bound
adc
xor
out
jmp
(bad)
adc
mov
call
clc
and
sbb
jb
push
sbb
adc
add
push
push
dec
mov
and
xor
jmp
push
fadd
shl
mov
hlt
adc
out
and
cwde
adc
push
xor
nop
retf
mov
retf
sub
pop
and
sar
daa
pop
fsubr
pop
add
pusha
pop
mov
fcomip
daa
push
repnz
rcr
je
and
fs
fsubr
xor
enter
dec
dec
inc
add
inc
into
inc
push
push
add
rcr
lods
sub
pop
pop
and
add
inc
mov
pop
mov
jecxz
enter
pop
and
fs
(bad)
pop
push
int3
xor
enter
xor
and
repnz
adc
or
or
pop
and
xor
push
sub
jbe
jp
sbb
xor
add
sub
jmp
adc
dec
and
inc
sub
cmps
xchg
xor
and
mov
adc
pop
push
dec
xchg
mov
outs
push
xchg
push
cdq
sar
mov
push
xchg
adc
test
and
ret
push
add
inc
scas
cdq
ins
mov
cmp
push
cdq
movs
(bad)
or
cmp
dec
ja
jle
call
dec
call
and
(bad)
lock
dec
adc
dec
dec
push
mov
shl
inc
push
int3
fldcw
mov
inc
sar
sti
xlat
call
mov
outs
mov
mov
add
daa
(bad)
int3
popf
out
jo
sub
dec
in
sbb
dec
mov
in
pop
mov
aam
dec
pop
xchg
and
mov
pop
and
call
clc
mov
sub
data16
repz
adc
add
or
and
xchg
and
sbb
jp
scas
scas
cmp
mov
or
dec
(bad)
imul
pop
inc
add
daa
daa
sti
lock
add
fldcw
jnp
add
popa
fstp
dec
pusha
not
inc
inc
inc
hlt
test
and
sub
xchg
adc
cwde
fild
and
or
cmp
jmp
xor
mov
ins
inc
push
and
mov
mov
int
add
or
and
je
loopne
outs
add
add
jo
cmp
ret
push
sahf
push
std
pop
aam
leave
add
inc
cmp
jl
or
mov
hlt
xchg
inc
mov
push
fs
push
outs
sahf
rcl
push
and
rcl
sub
push
cmp
jmp
add
adc
xor
xor
adc
in
cld
pop
add
das
cmp
sbb
mov
mov
or
sbb
sub
hlt
rcl
push
push
callw
mov
xchg
sub
adc
push
add
fist
les
ins
mov
mov
add
inc
cs
sub
das
or
int3
dec
pop
sahf
push
push
sbb
daa
je
mov
fstp
leave
test
sbb
push
retf
clc
push
jne
iret
std
pop
xor
add
dec
sub
or
clc
inc
sub
xrelease
push
xchg
(bad)
leave
and
dec
aad
in
cmps
add
aad
pushf
movs
call
mov
gs
je
lea
push
outs
push
push
lods
adc
fwait
pushf
test
mov
jae
outs
jmp
pop
add
sub
fnstsw
mov
mov
push
js
sub
mov
das
pop
or
jne
pushf
ds
mul
jmp
cmp
ror
jle
test
cwde
dec
and
sbb
or
sbb
test
sbb
fld
add
or
sub
jnp
lods
in
popa
or
jne
inc
pop
retf
pop
add
rcr
and
inc
add
jae
xor
outs
mov
iret
jl
push
push
push
and
adc
iret
es
(bad)
mov
ret
cmp
fwait
or
imul
test
inc
lahf
mov
mov
shl
mov
ret
adc
add
in
cmp
movs
leave
cs
aam
or
shl
xchg
(bad)
sbb
and
xchg
into
mov
or
pop
push
mov
daa
dec
adc
stc
dec
mov
mov
aam
lea
and
cmps
fwait
jge
mov
sub
sbb
dec
push
mov
pusha
push
shl
jae
fcom
aad
dec
cwde
push
scas
jecxz
xchg
lea
fcom
jae
into
sbb
aam
add
or
mov
xchg
test
pop
fisttp
sbb
jmp
sub
sbb
rol
repnz
rcr
mov
imul
xor
movs
or
rcr
mov
out
loopne
int3
dec
adc
mov
dec
inc
rol
stos
jmp
loop
pop
cmp
call
cdq
call
add
sbb
xor
push
pop
or
push
cmp
mov
jo
shl
push
and
cld
int
cmp
sub
inc
or
ja
mov
sar
adc
lds
mov
push
adc
jle
sub
in
or
pop
lea
fwait
lods
push
cmp
cmp
jl
or
push
or
bnd
xchg
jne
mov
or
or
int3
pushf
fwait
xor
inc
mov
adc
enter
int3
sahf
mov
inc
push
fs
sbb
popa
dec
jbe
or
or
mov
xor
sbb
or
push
sub
xchg
xchg
push
sbb
jp
and
or
adc
aaa
sbb
mov
loopne
out
sbb
hlt
add
and
jbe
int3
mov
pusha
ror
imul
mov
mov
push
push
xchg
pop
fsub
jb
mov
pop
cmp
xchg
fdivr
adc
cmp
popa
pop
fs
and
in
fdivr
fdivr
fdivr
cmp
jns
cld
fdivr
pop
fadd
cmp
fdivr
pop
fadd
sub
fdivr
cmp
pop
test
sbb
icebp
add
(bad)
pop
ret
aas
fisttp
dec
(bad)
and
retf
sbb
clc
nop
and
cld
clc
leave
adc
mov
call
push
call
(bad)
and
xchg
sub
and
jns
xlat
call
lods
xchg
add
call
mov
adc
add
popf
add
dec
in
adc
call
inc
sub
push
cli
push
inc
push
in
daa
popa
ss
lea
test
mov
and
push
add
test
test
and
fisub
setb
dec
jne
enter
or
mov
push
and
sbb
or
imul
adc
psubw
lock
or
rol
adc
(bad)
lods
jo
pop
lea
push
push
cld
cs
stos
mov
lods
out
test
pushf
fidiv
not
adc
fmul
mov
or
push
pop
rol
ret
sub
pushw
pop
push
mov
add
jmp
cmp
cmp
retf
dec
dec
call
push
je
adc
jmp
cmp
lock
lock
push
cmp
test
or
fisub
add
in
mov
jne
or
and
ds
push
nop
dec
(bad)
pop
lock
rcl
dec
shl
or
push
test
push
ret
xor
xor
daa
add
cmp
jmp
ret
inc
sti
or
adc
push
js
mov
fild
jmp
mov
pop
loop
mov
sti
push
adc
mov
add
pop
sbb
shr
inc
neg
rcr
add
movzx
add
inc
add
pop
dec
repz
jns
shl
add
lock
jge
jne
mov
ror
(bad)
mov
or
repz
hlt
adc
push
or
loopne
adc
mov
pop
aad
pop
push
mov
mov
cmp
jbe
mov
sub
aam
push
loope
mov
or
add
or
jle
push
in
in
pop
sub
or
jne
adc
ins
movs
pusha
in
inc
or
dec
push
adc
cmp
push
stos
ja
cmp
or
adc
and
test
mov
sbb
jle
adc
mov
(bad)
out
ins
jnp
int3
adc
mov
aam
(bad)
and
shr
jb
cmp
jl
adc
shr
push
push
pusha
jp
inc
push
xor
push
jecxz
push
std
popf
nop
xor
cmp
popa
int
mov
add
pop
pop
inc
push
icebp
out
xor
inc
daa
ror
pusha
call
mov
call
ret
shr
scas
dec
adc
mov
jbe
jne
push
pop
jmp
and
lea
pop
cli
(bad)
xchg
or
push
mov
ins
arpl
jl
inc
cmp
(bad)
mov
add
or
movzx
sub
cmp
sbb
mov
jne
(bad)
ins
outs
sub
xlat
push
js
mov
iret
sbb
not
pop
dec
cdq
in
retf
dec
or
or
je
jno
iret
add
ss
je
push
adc
add
push
idiv
add
jmp
dec
cmp
popa
imul
hlt
cmp
loopne
dec
add
shl
dec
or
(bad)
(bad)
lock
add
xchg
mov
jo
sub
xlat
cs
adc
pop
add
aaa
mov
mov
inc
adc
adc
pusha
mov
addr16
mov
mov
adc
ds
pop
dec
jle
(bad)
push
push
push
xor
gs
js
cmp
jae
popf
dec
repz
jae
sbb
mov
imul
fwait
imul
rcl
dec
adc
lds
xor
or
enter
and
int
pop
loope
and
and
cs
adc
cmp
je
pusha
ret
sub
cmp
ja
jbe
and
or
pop
push
pop
inc
push
pop
pop
sbb
test
push
addr16
pop
cmp
inc
mov
cmp
jnp
in
mov
ja
daa
xchg
dec
dec
mov
fisttp
xchg
push
jle
jne
mov
lar
ins
out
jbe
shl
jnp
shl
push
cdq
push
push
mov
retf
int
push
iret
dec
mov
jle
mov
inc
mov
inc
and
sub
repnz
lea
lods
pop
mov
dec
(bad)
neg
sbb
cld
add
xchg
outs
mov
push
cdq
xchg
inc
inc
cs
jge
rcl
loope
adc
inc
xchg
or
push
push
ja
add
lds
pop
pop
sbb
mov
mov
push
(bad)
cli
ror
ins
xor
or
call
sub
and
sbb
push
std
les
mov
shr
mov
(bad)
inc
cld
mov
mov
mov
clc
add
cmp
jecxz
add
lea
bound
mov
ds
ins
mov
or
inc
dec
push
cmp
stos
loopne
mov
mov
cmp
imul
in
inc
inc
inc
mov
add
push
jne
or
and
and
or
add
shl
inc
lea
add
rcr
jle
cmp
stos
fs
push
jge
xor
int
inc
fldcw
push
int3
mov
inc
neg
add
and
dec
sahf
aaa
sub
les
iret
clc
ja
xchg
dec
ins
jmp
jmp
adc
mov
push
pop
jae
xor
ficomp
add
adc
push
fcmovnu
out
cmps
nop
or
sub
daa
fist
in
sbb
push
pop
test
mov
push
je
adc
inc
je
inc
lds
iret
xor
pop
jl
push
add
cmps
sbb
je
mov
addr16
or
call
ds
stc
xchg
xchg
dec
push
ja
mov
std
lea
cs
push
dec
fcmovnu
xor
pushf
add
scas
std
fs
sti
ja
xor
rcr
dec
inc
in
rcl
sub
ins
jne
xor
add
(bad)
mov
test
mov
push
std
es
xor
cmp
sub
sbb
push
jmp
je
mov
inc
or
mov
fld
scas
test
and
nop
ins
push
xchg
icebp
data16
mov
mov
push
jnp
pop
mov
fsub
fisub
(bad)
jae
jb
sbb
dec
sahf
out
pop
sti
ins
jecxz
push
lea
push
je
je
mov
inc
fild
mov
das
xor
rcr
js
je
repz
arpl
ja
cmp
and
pop
cmp
push
push
je
dec
imul
pop
add
inc
xor
push
dec
add
mov
ficomp
push
lahf
add
je
mov
rcl
enter
ret
pop
or
fisub
out
cmp
pop
jmp
addps
repnz
ret
ss
xor
or
jo
retf
pop
add
js
sub
mov
mov
push
xor
pop
pop
cmp
inc
out
cmp
mov
push
jge
or
pop
cwde
(bad)
pop
push
mov
add
adc
lods
dec
cmp
hlt
push
outs
mov
jae
es
jmp
inc
pop
mov
push
cld
or
mov
aaa
mov
and
cmp
pop
or
jp
jae
test
jge
push
mov
mov
mov
iret
mov
rcl
cld
xchg
or
adc
in
mov
and
enter
loope
sub
push
sbb
je
add
dec
fimul
pop
adc
push
mov
loopne
js
je
fdiv
ja
fsub
add
push
sub
loopne
fsubr
jne
mov
scas
inc
outs
icebp
ja
dec
add
add
ins
or
push
push
xor
fdiv
inc
pop
pop
push
sbb
adc
call
xlat
adc
and
retf
xor
add
ret
and
fld
dec
lds
(bad)
enter
or
test
ins
xor
pop
push
jne
cmp
jge
call
mov
popa
jne
imul
and
jo
xchg
sub
ret
dec
imul
pop
sub
push
comiss
(bad)
pushw
xor
cmp
rol
fisubr
push
cmp
dec
lods
dec
ss
ins
dec
hlt
or
jne
pop
shl
in
mov
daa
pop
enter
ror
mov
in
fadd
cli
dec
lock
or
adc
clc
cmp
cld
push
cmp
pop
dec
add
cmp
inc
sbb
pop
dec
pop
mov
dec
add
mov
aas
test
cmp
pop
ss
and
out
cs
mov
mov
popa
jne
sbb
pop
lea
mov
movs
push
out
sbb
lahf
or
push
push
adc
aam
mov
push
call
cmp
inc
inc
mov
add
add
or
or
pop
(bad)
mov
pop
inc
add
mov
sbb
pop
mov
or
pop
rol
adc
sbb
mov
xor
es
in
dec
adc
icebp
gs
add
xchg
cmp
mov
jge
lods
xor
jp
adc
jmp
inc
lods
jno
je
movs
jg
cmp
add
loop
push
xor
dec
sbb
adc
push
ins
xor
mov
lea
and
aam
shr
xor
lock
ror
dec
mov
loopne
scas
sub
clc
adc
scas
retf
pusha
int3
daa
or
adc
pop
add
push
xchg
ror
in
sub
sub
lods
imul
sbb
mov
gs
and
mov
outs
add
jp
xchg
outs
pop
fld
mov
lods
sahf
outs
add
add
adc
mov
add
add
inc
mov
outs
(bad)
jp
cmp
inc
jno
jne
pusha
mov
mov
add
in
dec
in
pop
lock
aas
sub
cld
or
jo
add
inc
(bad)
stos
popa
xor
jg
out
inc
inc
popf
gs
mov
xchg
movs
retf
pop
mov
call
xchg
push
adc
aam
test
and
arpl
cmp
or
or
xchg
(bad)
and
mov
jg
add
mov
pop
push
add
mov
inc
or
pop
test
lods
cwde
jns
push
outs
add
iret
cmp
jo
xlat
rol
aam
popa
cmps
sbb
lock
scas
add
pop
xor
mov
and
inc
cld
ins
push
xor
cmps
dec
jmp
sbb
cwde
xor
pop
enter
scas
lods
cdq
in
push
jmp
add
stos
mov
cld
cmp
mov
movs
jmp
or
dec
and
dec
mov
add
ins
cmp
jne
push
jmp
lds
jne
pusha
xchg
lock
xchg
fs
or
lods
bound
push
ins
add
bswap
das
dec
push
lods
add
repnz
test
jmp
pop
cmp
pop
mov
cdq
pop
dec
dec
dec
pop
fnstcw
(bad)
dec
pop
dec
sub
jns
fucomi
dec
lahf
or
add
push
leave
imul
and
xchg
jno
ins
mov
outs
add
xchg
mov
jo
lods
jb
retf
test
jae
mov
adc
rcr
xor
ss
add
jne
ins
sbb
mov
jo
and
sbb
mov
retf
dec
push
out
mov
out
dec
adc
mov
ins
add
sbb
adc
and
push
mov
push
icebp
icebp
jecxz
clc
mov
or
inc
sbb
inc
iret
bnd
mov
ret
xchg
lahf
int
stc
sti
add
and
ins
mov
and
or
xchg
fsub
dec
xor
bound
enter
stos
add
outs
push
js
(bad)
inc
adc
adc
pop
adc
pop
popa
cmps
xchg
popf
arpl
mov
xchg
je
out
neg
sbb
or
leave
and
mov
daa
jmp
pop
mov
inc
cld
inc
pop
add
cdq
push
cmp
sub
rcr
cwde
xor
clc
xor
clc
pusha
add
sbb
mov
dec
or
adc
push
inc
mov
ins
inc
movs
push
push
pop
test
fild
push
ins
in
ins
jge
leave
sub
sti
test
add
in
mov
jae
test
pop
ficom
pop
pop
enter
adc
scas
add
(bad)
cdq
add
dec
fcomp
fcos
adc
cmp
add
pop
outs
test
addr16
pop
in
jnp
sbb
adc
inc
xchg
or
adc
retf
(bad)
pop
push
sub
ret
loopne
push
bnd
cpuid
push
xor
test
xchg
xchg
dec
imul
mov
ret
or
lock
pop
pop
out
icebp
cmp
scas
mov
ins
pusha
jl
sub
cmp
fcmovnb
mov
mov
rcr
jne
push
inc
in
into
adc
fiadd
scas
ror
clc
fstp
mov
inc
repnz
dec
cmovae
push
js
ror
inc
mov
inc
repnz
sbb
pop
adc
dec
mov
and
jbe
push
pushf
imul
sbb
push
mov
push
adc
test
sbb
movs
sbb
add
inc
imul
push
idiv
cwde
cld
jle
push
xor
enter
aaa
jmp
add
clc
add
add
cmc
and
dec
sbb
jl
sbb
mov
add
add
mov
add
and
leave
pusha
mov
add
sub
retf
push
jbe
dec
ja
xor
xchg
retf
data16
jns
jp
sub
or
mov
inc
add
shl
sbb
sbb
add
into
ret
jo
add
add
inc
sbb
out
xchg
dec
pop
cmp
add
jg
hlt
or
push
je
jb
ret
inc
mov
jecxz
adc
sbb
lea
test
cli
test
sbb
cmp
ror
rcl
cmc
push
retf
es
inc
add
cmp
jmp
cmp
jnp
sbb
js
and
mov
(bad)
out
xchg
or
sbb
mov
jns
outs
daa
test
sub
ret
fiadd
popf
ins
mov
sub
sub
sub
cmp
imul
addr16
mov
outs
shl
or
in
inc
retf
add
jbe
sub
mov
pusha
jo
sub
cmp
jb
(bad)
(bad)
push
pop
hlt
(bad)
mov
sbb
push
add
or
jmp
ins
push
neg
fild
aad
movaps
test
or
ret
pop
fisub
mov
mov
clc
mov
(bad)
(bad)
jge
push
imul
or
aad
xor
ror
dec
or
jo
add
or
je
es
and
popf
fmul
sbb
bswap
or
mov
dec
mov
jae
pop
icebp
in
jo
push
dec
sub
clc
sbb
sub
mov
mov
xor
ds
pop
xor
dec
xor
cmp
je
mov
cmp
je
push
adc
or
std
lods
dec
push
or
ficomp
rcl
(bad)
les
inc
sbb
adc
pop
aam
inc
mov
test
sub
in
mov
add
cs
inc
shr
xor
cmp
gs
jne
sbb
sub
adc
ror
inc
push
adc
xchg
(bad)
or
or
cmp
xor
lea
imul
imul
pop
aaa
outs
xor
jle
push
mov
lock
(bad)
mov
je
mov
and
push
fmul
mov
jb
xchg
mov
mov
jno
lds
mov
iret
pop
or
mov
dec
mov
or
movq
or
mov
shl
inc
adc
int3
or
xchg
add
shl
in
in
imul
inc
inc
cmp
push
jg
jne
pop
pop
sbb
pop
in
or
ja
ins
ret
jmp
push
pop
sbb
shl
push
popa
add
outs
dec
nop
sahf
test
fcom
inc
push
call
jp
and
dec
imul
ds
push
pop
push
pop
push
pop
je
inc
jg
or
retf
xchg
stos
add
xchg
int
jb
fsubr
push
sub
dec
dec
in
push
ins
in
cmps
jbe
or
add
mov
push
sbb
push
sbb
mov
push
sbb
sbb
call
in
jbe
push
jo
ffreep
xchg
sbb
test
lods
icebp
bnd
dec
pop
inc
push
push
cmp
mov
jmp
loopne
add
div
sar
cmps
mov
pop
dec
pop
(bad)
mov
pop
jmp
mov
xor
mov
clc
pop
and
add
dec
cmp
cmp
call
mov
adc
mov
lea
pusha
loopne
repz
or
das
fldenv
mov
popa
jae
fdivr
mov
or
sub
test
push
cs
or
mov
sbb
loope
add
je
sub
push
or
xor
sbb
or
cdq
adc
jnp
ret
sbb
scas
inc
push
jb
and
jbe
dec
out
add
mov
mov
mov
sbb
push
es
sti
pop
and
ror
adc
or
mov
cmps
pushf
jmp
sbb
jmp
fldcw
in
add
mov
mov
sub
jmp
cmp
dec
shr
or
jmp
imul
sub
rcl
and
mov
fcomp
sbb
mov
pop
push
mov
xlat
sbb
rol
(bad)
sbb
mov
mov
pushf
mov
sub
lods
mov
mov
les
les
inc
lea
dec
xchg
mov
int
cmp
adc
pop
neg
jl
and
push
jle
push
and
cmp
cs
repz
add
push
mov
and
lea
pop
cmp
pop
mov
jo
cmp
push
xor
sub
in
mov
push
mov
ss
imul
lea
sub
js
rcl
jb
aaa
fld
fisttp
fimul
add
mov
dec
(bad)
shl
leave
dec
je
mov
test
adc
adc
test
call
retf
(bad)
sbb
test
mov
ins
test
mov
inc
cmp
jb
sub
test
dec
iret
idiv
daa
add
inc
push
xchg
jl
cmp
inc
pop
and
pop
lea
adc
xor
loopne
mov
push
es
aaa
inc
ror
push
sbb
jnp
test
cmp
dec
fsubr
mov
adc
in
ret
fadd
push
aaa
inc
and
jbe
dec
adc
mov
pop
inc
in
inc
pop
mov
jbe
mov
call
or
sbb
add
loope
(bad)
sbb
shl
pop
or
ins
push
push
jbe
cmp
dec
push
aaa
push
out
inc
push
daa
sbb
or
iret
or
retf
arpl
mov
test
fsubr
mov
fdivr
cmc
call
cs
mov
sub
mov
shr
mov
fiadd
jp
mov
add
inc
xor
(bad)
ret
or
fist
cdq
mov
sub
mov
scas
lea
adc
or
add
cmp
jg
test
jge
adc
rol
push
lods
fcmovb
pusha
pop
call
mov
add
push
push
or
or
push
shl
xchg
jmp
jae
adc
mov
shl
mov
(bad)
mov
pop
jge
jns
add
push
jb
movs
jmp
loopne
shl
test
je
xor
out
int
shr
jmp
adc
ret
inc
cmp
idiv
xor
mov
std
jmp
xchg
test
adc
mov
push
bswap
call
sbb
test
pop
cmc
xlat
mov
pop
jmp
fwait
add
sti
arpl
adc
je
push
xor
add
pushf
mov
and
lods
mov
add
(bad)
call
rcr
add
xchg
test
repnz
idiv
dec
and
ja
stc
jle
daa
pop
xor
jmp
and
and
add
inc
sbb
pop
push
push
push
adc
adc
in
sbb
push
add
inc
xchg
pop
and
and
rol
(bad)
pop
xor
ficomp
(bad)
gs
sub
sbb
cs
xor
sub
inc
lea
outs
cdq
jo
stos
pop
or
rcl
rcl
inc
adc
mov
jmp
jno
dec
mov
pop
cld
inc
adc
jmp
pushf
push
mov
xor
cs
push
jae
rol
mov
in
outs
fwait
cmp
add
add
jns
inc
mov
scas
int
xor
jne
mov
or
(bad)
or
adc
mov
or
leave
std
xor
or
sbb
lea
push
jmp
inc
cld
xor
jecxz
push
sbb
xor
arpl
or
adc
jne
and
adc
data16
cmp
gs
movaps
sub
cmp
inc
fcom
sbb
sub
push
retf
push
add
add
sub
mov
ja
adc
pop
cmp
rcr
or
pop
or
mov
cld
jle
jne
in
cdq
fdivr
dec
and
inc
xor
add
jbe
push
mov
jne
ret
sar
add
cmp
mov
sbb
push
test
xor
xchg
iret
mov
pop
adc
or
add
xor
mov
inc
or
popf
pop
lea
or
jne
sbb
movs
(bad)
jg
sub
pop
loop
mov
add
hlt
outs
out
mov
xlat
add
jne
call
sbb
lea
mov
add
push
pusha
dec
in
push
add
stc
stos
fld
push
push
sub
(bad)
pop
pop
or
aaa
push
sub
retf
or
mov
mov
or
push
call
rol
or
adc
xor
inc
adc
jnp
mov
mov
mov
pop
mov
test
data16
arpl
pop
call
nop
cmp
mov
push
nop
pop
jae
or
push
adc
jmp
add
(bad)
and
call
pop
test
pop
ins
cmc
adc
add
in
pop
sbb
xchg
sub
out
neg
xchg
sbb
pushf
imul
test
int
shr
jmp
inc
test
pop
add
loope
mov
xchg
ja
sbb
or
adc
jne
push
test
dec
(bad)
sub
test
lea
shl
push
mov
rol
dec
xchg
xchg
push
aaa
xchg
push
sahf
adc
pop
jns
xchg
inc
dec
jle
mov
fcmovnb
and
inc
retf
xchg
repz
ret
xor
ficom
adc
aaa
(bad)
push
and
cwde
mov
mov
aas
xor
mov
shl
pop
xor
enter
fisttp
and
iret
(bad)
loopne
daa
fcmovnb
nop
mov
adc
(bad)
xchg
nop
enter
pop
ds
into
pop
adc
xchg
ret
int3
int
mov
lods
pushf
sub
mov
fiadd
add
arpl
sbb
icebp
pop
pop
mov
jle
sbb
inc
or
pop
arpl
pop
pop
add
adc
stos
lods
sbb
push
mov
jb
and
and
rcr
xchg
dec
add
ins
mov
(bad)
imul
call
not
popf
test
xor
mov
aam
sub
adc
fisub
jl
sub
jge
add
push
dec
xchg
into
test
xor
add
pop
and
sbb
push
pop
outs
add
icebp
jae
sub
inc
dec
lea
lods
push
adc
stos
dec
mov
or
push
mov
(bad)
jge
mov
or
jl
jg
dec
adc
out
sub
shr
xlat
mov
xchg
dec
push
xchg
adc
int
adc
dec
xor
pusha
mov
inc
mov
xor
(bad)
lock
lea
fistp
aam
dec
or
add
mov
ror
add
inc
pop
add
xchg
inc
pop
jae
in
xor
idiv
xlat
mov
retf
inc
mov
iret
add
outs
xor
push
sub
mov
push
or
(bad)
xor
push
xor
cwde
stos
push
push
lods
std
jbe
sub
xchg
mov
add
(bad)
adc
das
mov
jg
xchg
jge
mov
pop
and
sbb
add
data16
lds
jb
test
mov
or
jmp
out
or
jne
adc
add
jbe
lds
mov
sbb
cmp
test
int3
push
xor
pop
enter
jne
push
inc
mov
push
and
fdiv
inc
(bad)
call
mov
or
sbb
xor
xchg
or
out
fimul
mov
add
sub
cmp
cmp
mov
or
mov
hlt
mov
call
sbb
jne
ret
stos
out
ins
xor
push
add
imul
test
push
call
add
aam
dec
pop
add
data16
inc
out
inc
jl
sub
and
jne
ffreep
aam
cmp
push
cld
add
mov
mov
push
in
inc
adc
dec
push
add
dec
push
lods
ja
scas
iret
add
sbb
push
bound
iret
add
hlt
lea
mov
adc
jne
dec
dec
dec
jmp
jnp
adc
xor
mov
adc
sti
pop
test
jg
test
lea
je
in
sbb
bound
test
je
add
gs
pop
shr
add
out
sbb
je
mov
in
je
and
(bad)
jnp
ret
xor
mov
scas
jbe
add
mov
fucomi
push
or
dec
ja
jne
xor
mov
leave
push
xchg
in
xor
rcr
(bad)
pop
cmp
xchg
sti
mov
sbb
fisttp
dec
loopne
das
adc
call
add
ss
xor
and
add
jb
push
call
pop
sub
mov
mov
dec
mov
push
or
sbb
ret
pop
add
inc
cmp
add
pop
mov
pop
(bad)
cmp
jge
add
push
cmp
cmp
push
jns
in
adc
(bad)
fst
jge
xor
or
jge
sbb
jnp
pop
rcr
push
push
sbb
add
fwait
cdq
pop
out
adc
mov
push
rcr
imul
push
jg
jle
add
add
dec
or
dec
les
fs
pop
push
xor
add
pop
add
adc
mov
adc
inc
cld
jle
jbe
sbb
mov
fadd
jne
add
xchg
add
(bad)
xchg
pop
lds
add
add
sub
mov
data16
cmp
cmps
bound
or
and
in
adc
jl
push
mov
cwde
cld
clc
pop
ror
dec
repz
xor
fstp
sub
cmc
out
inc
pushf
ins
test
inc
pop
enter
xor
inc
mov
xchg
mov
mov
loopne
aaa
mov
mov
add
xlat
test
sbb
mov
call
push
pop
iret
sub
bound
xchg
mov
repnz
dec
push
fs
push
cmc
enter
sar
lock
bnd
adc
jmp
xor
mov
addr16
ins
ss
arpl
ds
pop
jo
das
pop
(bad)
cmp
(bad)
out
scas
add
pusha
mov
out
(bad)
test
sahf
popa
sbb
inc
mov
stc
inc
sahf
cmp
mov
iret
frstor
ss
dec
(bad)
mov
pushf
out
ret
push
sbb
out
push
sbb
xor
jg
daa
jmp
retf
add
jg
push
mov
mov
pop
and
jle
ss
mov
test
and
nop
mov
mov
mov
inc
push
add
cmc
sbb
push
pop
jb
sahf
adc
mov
and
dec
xor
adc
pop
cld
popa
push
outs
xor
clc
cmp
nop
xchg
dec
cwde
shl
mov
mov
inc
sar
or
jge
pop
adc
xor
test
ret
dec
adc
add
in
pop
push
cmc
lea
out
dec
icebp
mov
xor
shr
or
fnstcw
xor
cmp
jle
jl
fimul
jmp
ret
jne
sub
repnz
add
push
sub
(bad)
pop
jl
push
js
fist
or
stos
pusha
loopne
pop
mov
nop
sbb
out
mov
inc
scas
sti
add
sbb
shr
cmp
es
jae
shr
and
(bad)
cmp
jae
out
adc
outs
enter
nop
das
dec
cmp
inc
or
or
sub
push
ja
fidiv
add
add
nop
cmp
fucomi
sbb
mov
pusha
mov
cmp
adc
add
push
ret
rcr
lea
iret
jle
ss
lea
mov
lock
jle
dec
(bad)
adc
add
adc
mov
mov
and
xor
fldenv
push
lods
sbb
enter
out
cld
mov
sti
sbb
jne
and
mov
and
cld
and
nop
or
cmps
or
sub
jo
nop
xchg
jmp
(bad)
jecxz
xchg
xor
mov
mov
mov
stc
mov
fimul
shl
nop
mov
adc
pop
dec
add
cmps
xor
cdq
sub
jmp
sbb
cmp
push
retf
arpl
popa
mov
push
cmp
(bad)
cmp
ins
xchg
cmp
fsub
in
cmp
mov
jo
or
pusha
adc
dec
push
or
xchg
test
add
retf
sub
cmp
mov
icebp
cmp
nop
out
sub
in
mov
ds
dec
mov
lods
into
or
adc
sub
cwde
pop
mov
or
shr
test
xchg
outs
aam
rol
add
ss
jne
mov
jns
movs
shl
pop
mov
add
pop
sbb
pop
inc
pop
mov
in
adc
add
or
shl
(bad)
std
test
add
shr
xchg
add
jle
je
(bad)
sbb
daa
xor
mov
(bad)
cmp
dec
jns
pop
clc
mov
jns
adc
xor
ds
inc
push
adc
and
stos
addr16
shl
outs
and
sbb
xchg
fist
sbb
push
push
add
push
adc
aam
ucomiss
cmp
sar
not
sti
ins
lods
call
bswap
dec
mov
dec
add
adc
mov
(bad)
cmp
dec
jne
sbb
rcl
jmp
fimul
gs
mov
add
sub
inc
js
jne
retf
outs
cmp
sub
sbb
push
lods
inc
mov
(bad)
mov
inc
adc
or
adc
add
push
inc
xlat
mov
push
stos
popa
inc
sbb
push
cs
inc
fwait
sbb
icebp
add
sub
push
pop
das
adc
pop
clc
push
neg
inc
lock
add
jmp
or
push
bound
clc
jmp
or
ds
push
jne
and
inc
fld
sbb
push
or
rcr
scas
and
(bad)
push
je
push
sub
adc
push
push
loop
aam
ret
push
xor
add
je
push
retf
push
cmp
push
pop
xchg
sbb
push
push
add
and
les
rcr
add
or
sub
in
ror
and
(bad)
jae
cmp
jb
or
inc
or
fnsave
jmp
dec
jmp
and
je
cmp
fadd
push
push
sub
sub
sub
js
and
jno
sub
sbb
ret
mov
mov
xchg
cwde
add
mov
push
cdq
pop
idiv
cmp
push
add
shl
or
ret
sub
shl
or
pop
out
mov
in
call
and
jmp
cmp
xchg
xchg
pop
push
pop
push
pop
xor
mov
lahf
push
js
out
mov
je
outs
inc
lea
add
fwait
imul
add
out
or
test
ins
jbe
jge
fld
sti
addr16
add
int3
jmp
and
test
mov
mov
and
and
sbb
test
xchg
xchg
xchg
xchg
mov
and
mov
stc
jl
mov
mov
enter
jl
test
enter
ins
mov
xchg
xchg
xchg
push
xchg
xchg
xchg
dec
push
push
inc
xchg
xchg
xchg
xchg
dec
inc
xor
cld
dec
sahf
xchg
cmp
mov
out
stc
sbb
fdiv
lahf
mov
mov
mov
mov
mov
iret
out
hlt
mov
mov
mov
mov
mov
stc
jl
or
pusha
mov
lahf
iret
out
mov
mov
mov
mov
mov
jl
jns
mov
xor
cmp
cmp
inc
mov
dec
mov
bnd
lahf
mov
mov
mov
mov
out
cmp
enter
mov
mov
inc
sahf
iret
je
js
mov
mov
fistp
mov
repz
xchg
mov
mov
mov
and
int3
push
mov
mov
(bad)
(bad)
mov
sbb
fwait
add
sbb
sbb
loopne
call
in
lock
clc
cmp
sbb
cld
add
mov
in
inc
int3
add
mov
sbb
mov
inc
daa
mov
add
pop
jl
xor
cmp
jge
dec
dec
add
mov
enter
pusha
mov
cwde
sub
(bad)
inc
cmp
out
xchg
or
add
cwde
xchg
in
dec
ret
jne
sbb
dec
and
test
push
pushf
imul
add
or
cmp
mov
inc
inc
ss
or
mov
jae
nop
push
cmp
push
test
dec
(bad)
sbb
sbb
sbb
adc
out
iret
add
mov
call
pushf
cmp
push
add
test
mov
adc
add
mov
mov
inc
or
fdivr
bswap
add
jbe
aam
dec
movs
mov
loopne
shl
xchg
inc
aam
push
iret
fucomi
push
sub
jbe
jmp
or
push
dec
inc
jmp
call
cwde
xor
cmp
add
ror
mov
cwde
mov
mov
mov
add
mov
sub
push
ret
add
in
int
cdq
(bad)
ret
jo
add
sub
test
add
push
jmp
push
push
in
inc
push
loope
jge
add
pop
add
and
ss
and
and
retf
mov
mov
adc
daa
inc
dec
pop
mov
add
stos
aaa
xor
out
int
mov
or
jb
push
pop
add
sbb
mov
mov
loopne
jne
ds
mov
fidiv
pop
pop
push
movs
xor
mov
cmp
jne
pop
inc
mov
push
adc
push
jp
or
xchg
xchg
cmp
and
push
jae
cwde
mov
lea
shl
js
sbb
mov
or
aas
cdq
stos
or
pop
mov
sbb
out
je
add
adc
push
push
add
add
or
sub
jns
sub
ficomp
xor
dec
es
or
add
popa
outs
sbb
or
(bad)
ror
sbb
mov
rcr
adc
adc
pop
ret
dec
adc
into
adc
inc
data16
push
dec
mov
lea
out
sub
mov
jge
dec
push
cmp
mov
or
jae
mov
fdiv
pop
les
loope
inc
add
mov
nop
daa
pop
fwait
push
int3
ret
push
mov
sub
mov
sbb
ins
xor
add
adc
adc
or
mov
jbe
rol
es
or
es
cld
add
xor
pop
or
retf
and
pop
mov
xor
sbb
mov
jg
pop
mov
nop
ror
ins
adc
stos
loopne
mov
adc
pop
jnp
mov
adc
mov
cmp
add
bound
in
nop
inc
push
loopne
movs
arpl
mov
bswap
rol
xchg
int
sbb
or
pushf
daa
mov
cwde
pop
inc
ss
mov
call
or
mulps
pop
in
mov
dec
mov
iret
mov
mov
clc
mov
(bad)
enter
ja
pop
lock
in
test
sbb
or
and
loopne
mov
xchg
pushf
shr
sbb
mov
fisttp
fs
ror
dec
mov
nop
test
leave
xchg
sbb
inc
or
inc
mov
adc
xchg
xor
fist
adc
add
fistp
(bad)
adc
mov
add
add
in
in
inc
loope
or
jle
inc
ss
stc
push
movs
inc
add
push
add
dec
movs
imul
jmp
scas
es
and
sbb
adc
mov
call
lock
jmp
cmps
imul
cmps
imul
imul
xchg
push
movs
adc
or
xchg
ins
sub
retf
or
pop
sbb
add
(bad)
shl
in
out
ins
shl
ret
xlat
sub
out
lock
mov
fnstenvw
push
cwde
xlat
fsub
xchg
add
loope
pop
inc
add
mov
add
rcr
int
ins
mov
dec
push
str
push
aaa
and
add
cmp
adc
int
(bad)
lods
cmp
jmp
aas
scas
inc
ss
jb
add
xor
scas
inc
xor
xlat
adc
ud2
cmp
inc
dec
add
sar
ins
fld
mov
cli
add
mov
mov
or
sbb
sbb
sbb
jns
cmc
sbb
pop
jo
mov
in
cmp
push
push
jae
xlat
je
fs
bound
sti
pop
or
push
sbb
popf
sbb
sub
xlat
add
pop
enter
sub
out
aaa
dec
test
add
iret
cmp
adc
or
jo
out
add
test
lods
add
pop
mul
xchg
fisttp
in
retf
bound
mov
daa
mov
and
add
imul
add
cs
nop
xchg
add
sub
clc
ins
addr16
out
stos
push
call
sub
mov
adc
iret
jle
cmp
mov
in
pop
inc
mov
idiv
pusha
adc
add
leave
fs
pop
pop
and
lods
and
xor
daa
imul
pop
cmps
imul
imul
cmps
imul
or
jg
js
pushf
mov
pop
or
xadd
mov
lods
dec
push
xchg
xchg
fdivr
enter
lods
push
lods
cmp
repnz
lods
imul
lods
mov
in
in
mov
jg
fs
movs
xor
cld
xchg
add
sbb
scas
adc
xchg
out
leave
sbb
and
out
call
cmp
cmp
repnz
lods
pop
lods
pusha
lods
push
sahf
jo
js
add
or
enter
or
xlat
xor
mov
daa
seto
push
imul
fsub
add
fs
call
int
enter
mov
pop
daa
pop
push
sub
loope
scas
sbb
xor
leave
xchg
scas
dec
scas
push
aaa
add
pusha
add
push
or
test
mov
dec
call
shl
rol
fs
int3
aam
jns
sbb
fdiv
mov
xchg
cmp
scas
push
in
leave
adc
scas
sub
out
xor
sbb
jnp
scas
ja
push
and
fs
ins
je
test
ret
scas
xlat
sub
push
xchg
add
rol
cmp
mov
adc
and
cmps
inc
xor
and
xor
push
ficom
pop
add
(bad)
adc
pop
adc
push
jmp
stc
jbe
bound
push
push
imul
pop
xchg
lods
std
xor
cs
femms
das
outs
mov
fwait
std
jae
popa
outs
je
adc
inc
or
mov
add
or
inc
push
push
dec
push
and
add
(bad)
dec
jbe
ins
imul
addr16
cmp
(bad)
idiv
push
dec
inc
pop
push
push
jb
inc
imul
outs
data16
pcmpgtw
inc
dec
push
dec
dec
adc
je
cmp
das
fcmove
int3
inc
inc
dec
push
inc
inc
pop
push
xor
inc
dec
inc
dec
push
mov
pop
fs
jb
cs
imul
inc
es
inc
inc
push
inc
pop
arpl
dec
div
outs
dec
jae
or
jb
jb
(bad)
push
test
gs
popa
jns
jo
call
ins
adc
mov
in
mov
addr16
inc
mov
xor
mov
jl
push
push
addr16
ins
outs
sti
mov
fidiv
imul
jae
fld
sub
jae
inc
jne
push
je
mov
out
imul
push
inc
dec
inc
dec
loopne
mov
push
pop
adc
push
push
inc
dec
or
aad
or
push
push
(bad)
dec
push
mov
add
cmp
cmp
inc
cmovne
ins
cmp
dec
adc
(bad)
jo
adc
sub
and
cmp
jp
and
xor
inc
ins
adc
jne
outs
pop
jo
cmp
xchg
mov
push
fs
dec
pop
arpl
imul
into
inc
pop
xchg
mov
fucomip
sub
pop
inc
inc
adc
outs
jae
outs
jne
rcl
sbb
sbb
xchg
mov
cmp
mov
inc
retf
je
push
je
push
(bad)
cs
lea
shr
xchg
and
outs
jne
pushf
ins
inc
pop
ss
cs
outs
dec
pop
add
ins
test
inc
add
imul
fcmovnb
mov
ss
jp
mov
push
(bad)
ins
and
ins
sbb
dec
mov
mov
loopne
loope
pop
sbb
mov
push
rcr
inc
push
popa
je
les
fstp
mov
dec
cmp
dec
inc
inc
sub
aaa
inc
(bad)
gs
push
ins
xor
int3
mov
push
outs
std
jbe
mov
imul
ins
bound
shl
popf
ds
ins
gs
pop
inc
aaa
jbe
pop
pop
inc
out
cmova
dec
jecxz
adc
fcmovbe
cs
outs
xchg
sbb
and
ds
les
jmp
add
cs
mov
outs
or
movq
neg
mov
mov
mov
ins
jne
xor
and
clc
mov
mov
pop
dec
mov
je
jb
call
mov
daa
imul
or
movs
xor
jns
sub
mov
and
daa
or
jmp
and
dec
inc
dec
and
pop
stos
mov
fcom
jo
nop
mov
jmp
inc
imul
push
movs
addr16
mov
mov
ins
xor
xor
pop
imul
jb
mov
fs
mov
pop
outs
setle
outs
add
or
push
imul
fcomp
fucomi
ins
arpl
imul
mov
jo
xor
fs
push
fdiv
pop
add
lods
mov
sti
sbb
push
and
push
mov
fisttp
pop
xor
movs
and
jl
addr16
es
je
mov
cmc
xchg
cmp
and
jae
pop
aaa
test
mov
jno
push
out
gs
popa
in
push
add
jecxz
fst
add
mov
push
fld
pop
inc
or
xor
dec
pop
xor
cs
ins
push
and
jae
jb
and
push
pop
or
imul
push
or
push
jbe
push
leave
out
add
inc
inc
pop
or
pusha
pop
nop
movs
add
or
bsr
fs
cmp
or
mov
add
retf
inc
jb
jle
out
test
sar
push
bound
aam
aad
xchg
fdiv
xlat
fnsave
mov
adc
je
add
inc
sbb
pcmpeqb
jb
push
jb
imul
outs
xor
or
scas
add
add
out
mov
les
push
or
fcmovnu
out
pop
push
or
pop
pop
cmp
jne
jae
dec
adc
arpl
outs
jmp
aaa
jae
sbb
dec
lea
sub
jae
mov
pop
jne
test
lea
ins
shr
cmp
mov
push
cmp
xor
leave
xor
xlat
ins
mov
add
mov
jmp
out
and
add
inc
xor
add
out
scas
inc
or
xor
xor
je
pop
add
sbb
or
neg
test
cmp
and
add
xor
xor
xor
pop
xlat
dec
arpl
(bad)
xor
scas
sti
imul
and
mov
mov
xor
pop
lahf
outs
rol
and
gs
sub
mov
imul
jge
and
gs
cdq
xor
lea
xor
sbb
fwait
mov
lahf
bound
imul
push
sbb
stos
cmp
inc
mov
data16
inc
sbb
jnp
fsub
lahf
aaa
mov
fwait
mov
arpl
stos
xchg
dec
call
mov
mov
movs
fs
inc
popa
inc
repnz
cmp
mov
lahf
and
daa
ss
arpl
imul
aaa
adc
arpl
or
jne
ss
test
xor
popa
gs
ins
pop
mov
xchg
(bad)
mov
xchg
popa
stos
scas
aas
sub
sbb
stc
(bad)
jno
cwde
mov
gs
push
inc
or
xchg
fild
sbb
fdiv
sbb
pusha
scas
and
xchg
dec
fadd
and
xor
sbb
or
lea
cmp
adc
popa
pop
jbe
lods
xchg
aas
dec
or
sub
pop
push
xor
fbstp
or
test
dec
mov
ret
xor
xor
arpl
adc
mov
data16
dec
inc
pop
mov
arpl
xor
push
in
add
lea
or
inc
fcom
movs
xor
and
or
jmp
and
push
in
xor
xor
loope
dec
sbb
xor
ins
test
popf
pop
pusha
or
cmp
sub
in
jns
sub
sbb
jmp
mov
fs
and
pop
xor
xchg
shl
sub
or
add
sbb
ret
data16
pop
gs
push
and
pop
adc
dec
aas
jmp
fistp
add
mov
popa
add
xor
xor
mov
mov
bound
cmp
xor
cmps
es
sub
mov
cmp
stos
cmc
into
bound
aaa
xor
test
pop
lea
outs
mov
adc
xor
adc
mov
or
push
xor
mov
xor
fs
lahf
fs
xchg
xor
popa
and
cmp
add
xor
xor
fs
xor
gs
inc
push
retf
sub
xor
pusha
xor
in
xchg
xor
into
or
xor
xor
out
xchg
cmp
add
xchg
fisub
sub
aad
dec
cmps
jmp
xchg
xor
mov
mov
cmp
imul
xor
cmp
jne
outs
pushf
and
fwait
repz
or
fs
push
pop
std
xor
in
sbb
mov
inc
ss
aaa
repz
xor
(bad)
xor
addr16
or
inc
cmp
aaa
pushf
add
xor
ret
pop
xor
push
arpl
pop
inc
mov
cmp
xor
div
xor
nop
outs
gs
push
gs
push
and
xor
push
add
ss
fs
bound
fwait
mov
imul
cmp
sub
dec
sbb
xor
(bad)
mov
cmp
sub
xor
aaa
imul
aaa
xor
adc
sub
xor
dec
pop
add
icebp
push
inc
pop
ja
inc
mov
lock
int3
push
pop
sbb
adc
sub
mov
inc
add
mov
imul
icebp
xor
mov
imul
mov
mov
(bad)
frstor
xchg
popf
xchg
push
arpl
sub
leave
aas
aaa
shl
push
lods
gs
sbb
rol
pop
xor
leave
adc
bound
fwait
mov
inc
sub
ret
fwait
popa
imul
sub
fs
cmp
bound
mov
xor
arpl
fwait
adc
popa
fs
(bad)
arpl
dec
or
(bad)
and
pop
adc
mov
mov
adc
dec
mov
and
pop
movs
leave
xchg
jl
arpl
ss
dec
and
or
inc
sbb
xor
or
dec
pusha
mov
ss
jb
or
test
into
add
popa
lahf
and
inc
push
sub
lea
xor
add
xor
dec
jp
dec
cmp
cmp
xor
repz
push
mov
test
daa
sub
and
and
popf
sub
rcr
jg
stos
ret
mov
mov
pop
ret
arpl
mov
aaa
add
xor
push
outs
das
inc
inc
sbb
mov
push
lahf
leave
pusha
fild
aas
popa
or
retf
push
xchg
sub
addr16
sub
inc
int
xchg
aaa
pop
das
add
test
and
stos
movs
imul
lahf
mov
dec
adc
test
das
xchg
sub
dec
cmp
lods
movs
or
enter
lahf
adc
and
shl
mov
aaa
and
enter
popa
pop
inc
sub
jns
pop
adc
pusha
and
sbb
sub
fcmovnu
gs
push
xchg
arpl
pop
push
xor
(bad)
sbb
and
shl
pop
dec
cwde
shl
mov
ret
fwait
test
(bad)
imul
dec
icebp
xchg
pop
push
mov
out
mov
sub
add
pop
mov
pusha
jbe
and
adc
adc
adc
gs
addr16
sub
movs
mov
cmp
fbld
xor
cmp
mov
dec
xor
xor
push
pushf
and
dec
inc
cmp
popf
xor
cmp
pop
xor
cwde
adc
stos
inc
int3
bound
daa
dec
and
pop
sbb
xor
add
test
jno
xchg
push
mov
lods
call
xchg
jno
lahf
popa
mov
pusha
xor
imul
lea
adc
ins
xor
js
mov
out
add
test
mov
adc
call
xor
adc
call
out
mov
and
aaa
sub
bswap
xor
inc
add
and
add
push
mov
mov
ins
cmp
std
sub
(bad)
test
(bad)
dec
(bad)
add
adc
shl
xor
and
fisubr
int
mul
pop
fcomp
push
push
xor
arpl
add
test
test
neg
add
or
lahf
add
mov
push
neg
inc
inc
xchg
xor
dec
mov
xor
call
pop
xchg
mov
cs
and
sub
inc
add
inc
addr16
and
add
test
xchg
lahf
add
lahf
test
adc
push
not
or
mov
adc
and
nop
add
cmp
sub
xor
push
and
ins
or
sar
xchg
popf
data16
shr
pop
and
xor
loop
jmp
push
pop
dec
and
pop
out
lods
pusha
add
gs
lea
ins
fs
fs
xchg
pop
adc
gs
adc
cmp
or
int
ja
popa
aas
in
adc
test
sub
nop
outs
fnsave
mov
adc
mov
rol
ins
xor
gs
fs
dec
fstp
and
lahf
popa
mov
bound
jno
retf
pop
frstor
cmp
int
test
mov
bound
movs
jns
dec
cwde
add
imul
xor
and
adc
cmc
mov
movs
push
xor
sbb
and
sub
xor
mov
push
loope
cwde
test
data16
data16
pop
inc
inc
int3
jg
xor
movs
rcr
push
mov
in
sbb
popa
cdq
mov
es
cmp
or
dec
cmp
and
ret
aas
pop
pop
push
jno
aas
cmp
or
and
or
arpl
(bad)
add
leave
push
icebp
pushf
lea
arpl
mov
loop
outs
stos
ja
add
into
mov
push
fs
and
xor
fnstenv
outs
jge
jns
ret
xor
dec
cwde
mov
jmp
sub
mov
xor
sbb
xchg
pop
cmp
data16
mov
mov
(bad)
cmc
mov
nop
into
cwde
xor
cmp
xchg
xor
xor
lock
bound
ret
push
sub
jnp
xor
mov
pop
jmp
pop
push
sub
mov
retf
popf
add
arpl
arpl
fld
dec
or
xor
dec
jp
lahf
add
loopne
or
push
imul
jmp
xor
xchg
data16
dec
mov
add
xor
inc
cmp
inc
or
add
popa
aam
mov
cmp
aam
pop
add
lahf
test
popa
aam
pop
sbb
sub
add
add
adc
fs
add
push
addr16
and
add
sub
add
adc
dec
mov
xor
sbb
xor
pop
mov
or
loope
(bad)
inc
mov
dec
xor
or
mov
movs
aas
sub
popf
dec
frstor
pop
(bad)
iret
xchg
jnp
es
mov
stc
dec
sub
mov
mov
xor
mov
fist
mov
xor
mov
sar
mov
jnp
leave
bound
pop
imul
sub
dec
dec
(bad)
mov
inc
int3
sub
and
call
xor
jae
dec
je
cmp
adc
and
push
jecxz
xchg
popa
jecxz
icebp
fs
pop
mov
sbb
mov
push
add
cdq
shl
adc
xor
or
dec
outs
imul
out
add
std
sub
pop
arpl
das
gs
xor
es
aaa
xchg
icebp
int
xor
mov
mov
les
loopne
sbb
sbb
test
jns
add
lods
(bad)
test
setg
pop
cmps
ja
ret
jmp
push
cmp
pop
mov
data16
xor
adc
inc
adc
je
cmp
xor
sub
gs
outs
sub
popa
pop
inc
or
sub
mov
sub
fs
push
stc
outs
push
or
push
mov
outs
add
mov
inc
sbb
int
dec
add
and
add
add
xor
add
adc
xor
xor
rol
pop
or
or
or
add
xor
add
imul
bound
ins
outs
addr16
mov
inc
jb
jo
je
je
outs
and
jns
add
jb
dec
imul
xor
arpl
jae
ins
bound
jae
push
sub
inc
ins
sub
add
jns
daa
pop
(bad)
pop
adc
test
ror
inc
mov
outs
gs
popa
jb
mov
mov
jno
adc
ins
(bad)
mov
and
imul
add
jb
pop
ja
sbb
cmp
jne
imul
jae
(bad)
ins
jo
jae
pop
out
gs
xchg
in
push
dec
test
mov
ins
bound
add
push
(bad)
ret
or
xor
rol
adc
sbb
and
xor
sub
cmp
arpl
mov
cwde
ret
sldt
add
nop
or
add
or
nop
add
xchg
ins
dec
dec
out
jmp
aas
and
inc
pop
ja
cmps
popa
add
call
push
or
call
inc
ins
sub
ret
push
lahf
mov
cmps
stos
add
mov
fs
or
pop
sub
cmc
sbb
ins
xchg
mov
jae
jb
outs
jbe
sbb
or
jne
jae
xor
enter
daa
dec
repnz
mov
push
inc
and
clc
fidiv
dec
call
inc
add
push
pop
aas
jg
inc
or
retf
outs
fsubr
mov
jmp
adc
adc
or
or
or
and
and
inc
adc
add
pop
jmp
push
push
fsub
ror
jl
adc
inc
sub
push
jne
pop
stc
bound
jbe
pop
add
jo
(bad)
loopne
xor
or
push
sbb
sbb
pop
shl
mov
mov
mov
xchg
bound
cmp
mov
dec
adc
sar
pusha
pusha
add
sub
jbe
das
test
dec
sbb
aas
cmp
test
xlat
lock
inc
push
adc
(bad)
mov
inc
lock
pop
jg
xchg
add
mov
and
inc
mov
xor
jns
and
inc
mov
inc
gs
leave
and
add
cdq
pop
fmul
add
retf
and
add
add
and
or
and
popa
fnstenv
enter
aaa
xor
pusha
push
jmp
sbb
hlt
add
xor
add
add
cvtps2pi
inc
or
jge
sbb
sbb
sbb
xor
add
fstp
or
adc
mov
not
test
jbe
mov
jb
(bad)
fisubr
dec
cmc
dec
pop
or
loopne
push
jmp
imul
adc
sub
(bad)
nop
pop
jmp
test
push
push
pop
add
(bad)
push
xor
aaa
xor
fs
ins
jl
jl
cmp
xor
jl
pop
nop
cmp
add
cmp
sbb
adc
pop
mov
int
mov
adc
and
outs
test
pop
bound
imul
inc
dec
push
and
cs
out
(bad)
mov
fmul
cwde
sub
pmaxub
pop
jecxz
fnstenv
stc
out
lahf
sbb
(bad)
div
fbstp
ror
(bad)
jge
add
mov
cmp
jne
lds
and
scas
or
aaa
xchg
das
pop
sub
addr16
arpl
outs
rcl
xchg
in
in
pop
rol
loopne
push
and
add
mov
(bad)
xor
sbb
cmps
mov
pop
add
outs
leave
fiadd
pop
xor
fnstenv
add
push
pop
mov
daa
cmp
inc
push
push
and
cld
push
inc
or
test
add
push
pop
xor
fist
les
and
xor
inc
or
push
add
inc
in
fstp
jb
fmul
pop
and
daa
pop
mov
cs
inc
xor
xlat
and
fcomp
push
sub
retf
(bad)
sbb
(bad)
lock
pop
inc
rcr
test
mov
sub
test
or
dec
inc
jge
or
out
mov
add
cli
xchg
push
aam
or
sqrtps
inc
push
xor
jmp
jmp
lahf
(bad)
pusha
lock
xor
mov
jmp
mov
xchg
pop
pop
cwde
mov
or
mov
xor
cmp
movsx
add
call
mov
call
(bad)
jmp
cmp
push
or
adc
or
or
idiv
mov
or
cmp
addps
add
jb
or
(bad)
jg
pop
jg
add
out
mov
inc
mov
jmp
pop
add
(bad)
(bad)
js
daa
imul
push
or
xor
ud0
mov
std
je
fidivr
jmp
sbb
jg
sub
(bad)
(bad)
call
and
mov
and
pop
fst
and
cdq
test
inc
hlt
outs
(bad)
call
xor
pop
or
and
add
push
clc
(bad)
fistp
cmp
aas
mov
std
out
js
outs
sub
inc
jl
call
or
retf
adc
cmp
add
cmp
sbb
xor
or
pushf
fistp
mov
jne
cmp
hlt
add
cmp
lea
sub
inc
mov
sti
sbb
in
call
test
add
add
add
mov
std
dec
adc
xor
(bad)
ja
retf
les
mov
mov
test
bound
or
pop
jbe
shl
or
(bad)
call
push
cdq
hlt
(bad)
(bad)
neg
stc
mov
outs
add
inc
pop
lods
xor
cmp
aaa
cli
inc
add
dec
mov
cld
(bad)
xor
adc
outs
(bad)
fnstsw
test
push
sbb
std
(bad)
(bad)
ficomp
mov
add
in
fdiv
mov
out
jge
in
(bad)
jmp
cld
add
lock
popa
xchg
cmp
and
and
sub
cmp
or
jne
fld
pcmpeqb
fxch
inc
push
clc
(bad)
(bad)
jnp
push
xchg
inc
sub
and
add
push
xor
pop
xor
xlat
adc
and
mov
xor
test
add
imul
ins
sti
fwait
inc
inc
inc
cmp
fistp
mov
or
jno
rol
jl
jp
ss
push
(bad)
jmp
sub
(bad)
imul
mov
dec
std
(bad)
push
pop
and
or
jb
jae
clc
jo
(bad)
(bad)
(bad)
push
leave
leave
and
sbb
sbb
in
stc
add
or
(bad)
leave
and
cmp
in
jg
or
push
add
or
sbb
sti
mov
dec
add
add
cmp
mov
(bad)
mov
cwde
xchg
jbe
inc
jmp
fincstp
fsub
mov
pop
push
shl
cmp
(bad)
(bad)
inc
pop
dec
ss
cdq
adc
jne
jmp
leave
enter
clc
inc
je
sub
(bad)
dec
adc
loope
mov
mov
lock
cmp
pusha
sub
loope
inc
outs
fcomi
jbe
in
(bad)
dec
jbe
adc
test
lock
mov
push
or
call
jmp
das
jnp
in
mov
push
mov
loop
loope
push
jne
add
call
cmp
pop
and
or
fild
jmp
cld
push
mov
dec
push
push
retf
push
mov
test
mov
jne
dec
(bad)
inc
xor
xor
cmp
in
xor
ins
in
jbe
push
gs
mov
rcl
cmp
hlt
ds
jle
ja
dec
dec
(bad)
(bad)
(bad)
push
jmp
sbb
cld
push
inc
dec
add
push
jmp
dec
shl
xor
cmps
jle
(bad)
push
clc
clc
outs
imul
inc
jne
clc
je
in
rcr
sub
call
fist
pop
inc
jl
iret
adc
or
xchg
add
and
xor
clc
sbb
xchg
push
pop
(bad)
add
xchg
pop
jo
jbe
clc
push
jmp
icebp
call
sbb
cld
pop
repnz
(bad)
and
jnp
js
jb
pop
inc
cld
call
jmp
jmp
test
push
into
ja
cli
jp
pop
clc
pop
jno
sbb
sar
sub
or
push
stc
adc
sbb
ins
push
lea
mov
fcomip
and
or
push
in
loop
cmps
popa
clc
xor
(bad)
(bad)
(bad)
clc
in
push
push
ret
push
ret
fidiv
pop
or
call
aam
and
(bad)
call
(bad)
add
pop
inc
adc
loope
retf
add
adc
xor
or
clc
jae
out
or
adc
or
in
(bad)
lock
add
mov
in
hlt
hlt
sbb
(bad)
(bad)
(bad)
xor
xor
push
push
jo
pop
push
cdq
push
jb
jnp
and
sbb
sub
dec
mov
fist
or
(bad)
(bad)
jmp
xor
cmps
xor
or
pop
or
lds
outs
dec
mov
push
push
pushf
pop
jecxz
inc
dec
pop
xchg
popf
sub
std
(bad)
jg
or
add
call
lahf
scas
in
sbb
mov
(bad)
(bad)
(bad)
call
pop
cmps
outs
or
push
push
arpl
out
ins
cmps
push
pop
or
pop
(bad)
jne
cmp
and
(bad)
(bad)
call
movs
imul
shl
scas
loop
ja
add
sti
in
sbb
iret
leave
div
cmps
in
popa
dec
cmps
sbb
into
mov
jmp
js
cmps
push
dec
shl
pop
clc
cmp
in
outs
xchg
lock
retf
add
call
dec
mov
hlt
test
xchg
xor
sub
cmp
or
or
jle
fcomp
(bad)
(bad)
movs
xchg
clc
mov
rcl
loopne
int
or
cmp
movs
push
inc
ret
pop
cmp
call
mov
dec
fadd
pop
xlat
aaa
push
pop
movmskpd
mov
jg
das
std
mov
test
mov
dec
jae
push
push
clc
(bad)
inc
pop
sbb
inc
xchg
push
or
jb
fimul
and
add
mov
push
(bad)
lods
xor
jmp
mov
adc
(bad)
dec
mov
xor
adc
hlt
call
outs
pop
xchg
add
fnstsw
call
or
in
or
dec
and
xchg
out
jmp
jl
rep
mov
or
push
cli
xor
pop
adc
movs
pop
pop
test
xor
stos
dec
stos
jo
xchg
aaa
(bad)
dec
iret
inc
pop
or
pushf
clc
jno
push
jo
xchg
cs
adc
(bad)
mov
jg
test
adc
add
mov
sbb
xchg
call
ret
jno
outs
rol
test
push
mov
dec
push
push
test
data16
push
test
pop
jb
sar
jmp
mov
push
sub
pushf
xor
and
add
iret
ins
mov
xor
pop
ins
dec
pop
cs
je
out
cli
mov
mov
imul
imul
jno
pop
loope
push
add
push
mov
ret
lods
dec
je
mov
inc
adc
push
call
dec
xchg
cmc
cmp
or
std
inc
sbb
inc
push
cmp
sbb
fdiv
cmp
pushf
mov
mov
jl
ret
jmp
je
push
loop
clc
jmp
dec
or
aaa
jae
fwait
jmp
es
shr
sub
push
cmp
mov
addr16
mov
(bad)
dec
call
out
sahf
shr
mov
or
add
mov
sub
mov
or
popa
enter
add
push
icebp
jmp
mov
mov
pop
arpl
or
xchg
clc
outs
xor
jle
data16
sbb
jmp
add
sar
mov
push
pop
or
loop
mov
lods
cmc
jb
(bad)
dec
xor
inc
xor
inc
mov
addr16
dec
enter
icebp
out
push
push
(bad)
icebp
dec
fsub
adc
adc
loopne
in
mov
cmps
test
mov
test
(bad)
(bad)
call
inc
sbb
ss
xchg
aaa
pop
jle
or
arpl
stos
(bad)
jmp
movs
pop
xor
and
add
scas
inc
inc
adc
ja
imul
and
jne
call
push
test
jmp
ror
mov
not
(bad)
mov
push
(bad)
cmp
sbb
or
jl
(bad)
(bad)
(bad)
inc
mov
inc
add
cmp
and
mov
jmp
or
mov
inc
push
xchg
mov
(bad)
pop
ss
not
lock
pop
(bad)
cmp
loop
mov
or
or
pop
sub
xchg
push
cmp
retf
push
mov
or
lds
(bad)
mov
sbb
(bad)
or
or
cmp
in
cli
(bad)
dec
xor
ja
outs
adc
es
add
xchg
mov
loopne
(bad)
call
out
jbe
shl
jp
mov
mov
inc
mov
hlt
jge
jnp
ins
add
sub
rcl
pop
in
sbb
and
sbb
ds
ret
outs
cmps
call
stos
adc
cmp
pop
(bad)
push
call
xchg
mov
dec
in
pusha
sbb
stos
loope
jo
(bad)
jg
stos
fsub
(bad)
push
inc
jae
adc
sbb
push
and
aas
les
cmc
jg
fisub
sub
loope
aad
shl
fdivr
jg
jmp
mov
icebp
shl
fst
cmp
mov
push
adc
imul
int3
out
aas
or
mov
(bad)
(bad)
mov
and
leave
mov
mov
popf
pop
cmp
jle
cmps
test
pusha
fild
xor
test
retf
das
mov
sbb
push
mov
push
movs
inc
jmp
dec
jb
dec
dec
je
or
int
inc
cmp
fs
push
jmp
or
(bad)
call
mov
add
mov
xchg
js
pushf
push
lahf
sub
mov
push
sahf
cdq
stos
mov
sbb
adc
push
call
sub
push
js
bound
cmc
push
xchg
loop
sahf
xchg
loopne
xchg
sub
and
call
mov
aam
mov
lea
call
clc
(bad)
das
jo
push
xchg
sbb
jae
dec
push
sub
add
pushf
mov
pop
mov
or
jbe
or
std
push
mov
add
push
call
jg
ss
sub
jmp
cld
adc
jl
gs
in
call
xor
and
out
add
add
das
inc
cmc
call
not
jecxz
push
imul
icebp
js
jg
mov
iret
xlat
icebp
ins
ja
or
mov
sub
(bad)
(bad)
call
push
imul
mov
adc
(bad)
sub
cmp
push
sbb
inc
sub
pop
xchg
loope
cmps
test
fstp
cmp
sbb
fnstsw
ffreep
adc
dec
push
dec
call
pop
gs
lahf
clc
cdq
stos
adc
inc
jecxz
lock
xchg
sbb
inc
sbb
push
lock
fwait
mov
cmp
scas
pop
and
(bad)
pop
mov
sub
lods
jle
jmp
test
cmps
cmp
div
push
sti
aaa
(bad)
cmp
movs
xor
test
push
xor
call
jne
lds
dec
push
mov
daa
pop
into
call
loop
rcl
push
loopne
pusha
sbb
pop
clc
or
stos
jns
sub
(bad)
movsx
loopne
inc
push
adc
cli
inc
arpl
push
push
lahf
inc
pushf
jbe
xchg
mov
cdq
(bad)
mov
cmp
adc
ins
pop
xchg
inc
jns
lahf
imul
or
imul
xchg
add
and
sub
aad
inc
cmc
(bad)
push
aam
or
cld
lahf
adc
ins
push
test
cli
aaa
add
mov
jp
cmp
cmp
lea
sub
dec
sti
mov
mov
mov
lock
repnz
sbb
fs
popa
outs
or
jp
inc
mov
sbb
fs
fs
push
lods
sbb
add
add
cmp
jl
jno
test
jmp
popa
cmps
inc
xor
outs
inc
fistp
jo
lock
es
ror
sub
clc
ja
(bad)
mov
cld
jg
(bad)
in
mov
jae
cmps
dec
scas
movs
jae
cmp
(bad)
(bad)
call
xchg
push
add
adc
ror
nop
ins
push
fs
or
loop
push
jmp
jmp
push
(bad)
stos
and
retf
sbb
and
jg
enter
inc
push
xlat
js
pop
aas
cld
stos
(bad)
fisttp
fst
jne
sbb
adc
jmp
and
(bad)
int3
jg
sar
and
in
leave
mov
mov
pop
(bad)
pop
mov
inc
stos
mov
(bad)
and
(bad)
(bad)
jmp
xor
fdiv
iretw
mov
cmp
mov
mov
aad
dec
xchg
xchg
xor
aaa
mov
sub
pop
pusha
inc
mov
sar
dec
ret
dec
xchg
xor
push
(bad)
mov
ret
js
push
loopne
cld
xchg
ja
sbb
push
push
lods
push
mov
fldenv
push
or
jnp
sbb
and
or
inc
dec
pop
add
repnz
inc
out
in
xor
retf
sbb
adc
iret
or
push
push
loope
pop
mov
mov
push
or
pop
pop
push
loopne
into
pop
jge
cmp
scas
cmp
jne
mov
push
adc
mov
icebp
das
icebp
dec
jmp
and
mov
dec
xchg
cmp
sbb
jmp
call
sbb
push
add
outs
fucomp
(bad)
jle
js
and
mov
icebp
stos
sub
jl
jg
(bad)
dec
push
aas
imul
dec
xor
daa
pop
jno
dec
fsubrp
mov
(bad)
in
or
sar
push
xor
daa
ins
add
mov
xchg
clc
mov
mov
add
push
ss
les
cwde
pop
in
mov
call
push
inc
addr16
adc
jl
rcl
lock
jg
and
and
xor
into
loopne
pushf
fs
icebp
(bad)
fild
sahf
sub
pusha
and
xchg
push
push
xchg
daa
(bad)
out
(bad)
ja
(bad)
sub
out
push
xchg
jp
outs
cmc
and
mov
pop
jg
aam
mov
mov
mov
add
fild
or
je
cld
(bad)
inc
aas
ret
je
inc
jae
or
cmp
mov
out
inc
cs
ss
dec
std
je
ds
fs
mov
cmp
gs
add
(bad)
call
jle
add
sbb
cmp
test
cmp
and
loopne
(bad)
(bad)
(bad)
call
cmp
test
call
add
pop
addr16
pop
xor
daa
cli
std
inc
jne
(bad)
jmp
aaa
hlt
push
xor
sub
pop
sub
cmps
mov
mov
(bad)
test
mov
inc
(bad)
push
(bad)
fld
aam
push
or
ret
test
sbb
jnp
stos
mov
hlt
clc
inc
cmp
aaa
test
jge
ret
pop
js
inc
and
sbb
jno
mov
idiv
pop
ds
(bad)
dec
jne
push
repz
into
outs
sub
mov
cld
(bad)
call
xchg
inc
daa
xchg
adc
sub
mov
jmp
sub
inc
cmps
stos
sbb
loop
dec
bound
lock
mov
(bad)
add
pop
sbb
outs
sahf
dec
loop
ins
icebp
aas
jbe
pop
nop
jne
inc
loope
mov
cmps
call
add
mov
test
inc
xor
rcl
mov
ds
add
nop
into
and
je
stos
call
cli
jg
js
fiadd
ins
mov
icebp
mov
mov
(bad)
(bad)
dec
loopne
and
outs
or
dec
in
cmp
outs
aam
and
jae
xchg
pop
and
mov
jg
(bad)
(bad)
(bad)
in
in
jo
pop
mov
fisttp
aas
inc
jmp
mov
imul
(bad)
jmp
dec
movs
sar
mov
xchg
mov
cmps
mov
test
add
pop
clc
(bad)
push
test
ret
int
jmp
movs
in
push
not
and
mov
aam
hlt
jg
pop
lock
mov
clc
jmp
nop
push
sub
mov
or
outs
mov
popfw
mov
fdiv
in
mov
(bad)
mov
(bad)
jmp
aam
jno
mov
(bad)
pop
leave
xchg
pop
enter
push
push
and
(bad)
mov
or
or
hlt
sub
cmp
repnz
out
dec
(bad)
mov
add
add
(bad)
mov
lods
(bad)
(bad)
fucomip
push
xlat
in
push
push
adc
xchg
push
out
je
and
pop
in
adc
js
add
(bad)
(bad)
(bad)
dec
lahf
retf
out
(bad)
jnp
out
scas
ret
fistp
sbb
(bad)
jbe
push
xchg
repz
lods
cmp
popa
mov
pop
pop
sbb
mov
das
test
dec
inc
(bad)
(bad)
mov
jnp
pop
into
or
push
js
(bad)
ins
pop
hlt
stos
shl
mov
clc
(bad)
(bad)
(bad)
call
pop
mov
xchg
pop
jne
cmps
jmp
lds
push
or
call
or
push
inc
(bad)
stos
sbb
imul
jns
adc
push
sar
jne
daa
sbb
add
xchg
xchg
cli
inc
add
rcr
js
(bad)
(bad)
inc
xchg
fld
mov
cmp
loopne
add
(bad)
dec
clc
pop
add
pop
loopne
nop
dec
(bad)
idiv
sub
lea
imul
aad
xchg
fist
outs
(bad)
jns
pop
jmp
fucomip
call
js
mov
or
adc
push
(bad)
(bad)
(bad)
jg
mov
cmp
shl
lods
and
into
sub
into
dec
sub
std
adc
xchg
scas
add
loope
mov
cmp
rcl
(bad)
(bad)
(bad)
fisttp
gs
pop
lods
jge
or
dec
addr16
and
inc
dec
inc
dec
lods
(bad)
(bad)
(bad)
jmp
loop
mov
xchg
clc
jg
leave
adc
sub
xlat
(bad)
call
fistp
and
push
push
or
push
jl
xor
push
ja
lea
(bad)
jg
(bad)
aas
cmc
adc
gs
jmp
cmp
mov
xor
aaa
(bad)
(bad)
jmp
and
inc
adc
sbb
aas
in
addr16
loope
sbb
movs
mov
lods
mov
test
push
jle
add
(bad)
call
jge
mov
inc
sbb
dec
inc
adc
lock
sahf
jo
add
jg
add
cld
call
stos
adc
adc
es
push
cmp
add
add
add
aad
cmp
or
retf
rcr
sbb
clc
jge
(bad)
inc
iret
push
mov
mov
xchg
mov
cdq
xchg
add
push
add
fbld
mov
stos
addr16
aas
cli
(bad)
fucomip
inc
sub
inc
adc
adc
push
xor
inc
clc
call
xchg
mov
xchg
jmp
lock
aad
pop
sti
jmp
stos
mov
inc
sub
or
sbb
(bad)
(bad)
call
lock
dec
mov
cmp
sub
ins
add
jmp
dec
int3
or
loop
cmps
add
add
call
call
pop
jmp
push
ret
sub
push
or
pop
mov
or
outs
movs
and
pop
push
(bad)
into
cmp
fadd
fcmovnbe
pop
aaa
cli
(bad)
inc
jo
sub
in
jns
dec
add
push
or
enter
iret
fdivrp
fcomi
and
sbb
add
sbb
and
jb
cmp
call
push
push
pop
pop
pusha
fs
es
repz
call
xchg
dec
nop
test
add
cdq
mov
sbb
aam
(bad)
test
call
movnti
ja
pop
test
(bad)
mov
inc
loopne
int
fild
ja
outs
mov
(bad)
mov
shl
sbb
sahf
outs
pop
movs
mov
(bad)
call
inc
dec
mov
lock
jo
ret
xchg
add
(bad)
(bad)
jmp
out
xlat
sbb
xchg
test
cwde
jnp
movs
ret
(bad)
dec
addr16
xchg
pop
pop
fwait
xor
popa
ficomp
sub
pop
or
push
(bad)
jg
push
scas
sub
mov
and
pushf
ds
shr
adc
jle
(bad)
(bad)
in
push
xchg
fist
pop
add
es
adc
push
sbb
adc
cdq
mov
loop
push
mov
mov
adc
sbb
stc
pop
popaw
push
cmps
mov
(bad)
(bad)
inc
ja
and
jl
(bad)
adc
sbb
inc
push
iret
(bad)
(bad)
(bad)
call
sbb
mov
xchg
test
enter
daa
push
jmp
jne
xor
(bad)
cli
outs
icebp
call
js
pop
pop
lods
or
and
inc
lea
clc
mov
jno
pop
loop
xchg
xchg
xor
jp
xor
stc
sbb
push
das
cld
call
mov
and
pop
xchg
adc
sub
adc
movs
test
mov
xchg
or
pop
and
xchg
inc
inc
xchg
es
test
imul
imul
jge
cmp
cmps
pop
sub
xchg
call
mov
jg
xchg
mov
test
mov
nop
mov
jg
mov
jo
push
pop
push
push
dec
inc
cmp
xor
dec
lahf
aas
sub
sbb
adc
shl
(bad)
xor
or
pop
pop
lods
or
push
mov
cli
(bad)
and
(bad)
retf
push
imul
icebp
push
lea
daa
lock
icebp
or
pop
and
mov
(bad)
pop
sbb
std
sub
gs
cmp
cmp
cmp
movs
aaa
jge
dec
mov
adc
pop
loopne
(bad)
sbb
push
mov
mov
das
mov
inc
jg
cmp
dec
add
leave
sub
je
dec
je
scas
sbb
or
dec
arpl
idiv
push
lea
stos
add
das
sbb
dec
push
dec
sar
ror
xor
push
dec
cmp
jb
dec
sub
ja
loopne
fistp
cmp
outs
push
adc
sar
ins
aad
(bad)
(bad)
(bad)
call
ds
pop
jmp
mov
pop
out
in
aad
into
pop
xor
push
jecxz
cmp
mov
push
repz
mov
sub
push
push
jo
jmp
call
rol
dec
(bad)
jmp
ins
push
xor
mov
adc
dec
lds
mov
(bad)
dec
mov
inc
aaa
(bad)
iret
stc
ror
movs
push
das
mov
mov
dec
mov
push
sbb
(bad)
jg
xchg
movs
dec
jne
adc
xchg
inc
or
ins
imul
mov
shld
or
in
(bad)
fdivr
inc
dec
call
push
push
mov
inc
arpl
ss
sbb
out
inc
or
jmp
add
ror
call
cld
add
loop
les
call
fidivr
(bad)
fbld
not
mov
(bad)
jg
inc
push
or
(bad)
outs
sbb
mov
dec
test
aaa
jp
mov
mov
add
std
movs
sub
inc
inc
inc
inc
data16
movzx
push
inc
adc
rol
inc
dec
dec
inc
cmp
out
and
dec
pop
cmp
inc
adc
dec
movq
or
(bad)
jmp
sbb
jb
push
pop
or
and
mul
fild
cmc
xchg
pop
dec
and
inc
and
rol
(bad)
mov
(bad)
call
enter
sti
adc
adc
rcl
mov
loopne
call
(bad)
push
clc
aaa
cmp
shl
int3
popa
ds
adc
icebp
bound
loope
dec
and
jae
jmp
sub
mov
lea
cld
(bad)
(bad)
call
loopne
or
and
jns
lock
add
pop
sub
adc
add
loopne
or
jbe
xor
add
push
pop
aas
cmp
mov
sahf
in
fadd
mov
sbb
(bad)
jmp
adc
jo
mov
mov
xlat
cdq
(bad)
and
adc
(bad)
(bad)
jmp
jge
or
pop
pop
sahf
arpl
test
iret
(bad)
push
cmp
jl
cmps
or
sbb
(bad)
jmp
cmp
xor
pop
gs
jb
mov
xor
mov
pop
outs
test
mov
push
mov
mov
pop
pop
cld
(bad)
scas
shr
lods
aam
loopne
jb
pop
sub
push
loop
mov
movs
retf
ror
cmp
das
push
mov
xchg
arpl
add
rol
mov
add
jg
call
and
jae
ins
sbb
ins
es
je
pop
xor
sar
sbb
inc
adc
(bad)
mov
outs
cmp
loopne
std
mov
lds
mov
out
prefetcht1
or
mov
pop
std
mov
shl
mov
inc
xchg
jmp
push
jg
inc
aad
fdiv
or
ss
add
test
xor
les
(bad)
(bad)
jmp
mov
adc
mov
test
push
imul
jmp
(bad)
out
in
sbb
and
sti
or
(bad)
cmp
fdivr
fbld
add
outs
push
inc
or
add
push
inc
mov
(bad)
cld
outs
xor
push
jmp
popf
out
jge
popf
imul
adc
jge
mov
push
mov
pop
rcr
mov
scas
mov
add
mov
retf
jmp
jmp
mov
mov
mov
pop
mov
lea
jne
xor
dec
outs
call
push
(bad)
lds
or
adc
add
imul
les
call
jmp
push
mov
cdq
jge
lock
inc
pop
je
loopne
adc
jne
xchg
add
dec
inc
push
jne
add
adc
jmp
push
cwde
xchg
sub
lods
mov
test
sbb
cmp
and
pop
clc
test
(bad)
icebp
mov
daa
and
jb
and
cli
call
adc
jmp
sbb
lock
inc
in
dec
(bad)
jg
xchg
dec
or
fimul
mov
scas
or
sbb
or
adc
push
sub
stos
mov
jno
and
sub
mov
test
add
push
hlt
pop
or
sub
inc
(bad)
jg
sbb
outs
test
adc
adc
push
arpl
call
jmp
mov
push
cmp
mov
ja
retf
adc
fbld
call
adc
mov
sbb
add
xor
add
cld
mov
lods
inc
clc
jmp
(bad)
(bad)
call
js
inc
pop
sub
inc
xchg
rcr
xor
cld
(bad)
cmp
and
or
mov
pushf
sahf
or
leave
out
push
clc
movs
call
push
or
cmp
sbb
pop
jo
cmp
idiv
dec
adc
and
jle
inc
xor
stos
xor
sbb
(bad)
fist
cmp
js
dec
inc
(bad)
mov
ror
fs
test
mov
(bad)
push
or
nop
call
pop
sbb
mov
inc
add
clc
sar
pop
cmp
cld
cmp
jle
pop
loope
jae
add
repnz
dec
sbb
sbb
in
xchg
retf
jb
ss
mov
mov
xchg
xor
ret
inc
test
(bad)
(bad)
(bad)
call
lods
sti
retf
pop
cmp
xor
imul
pop
ins
out
and
dec
ins
jmp
in
mov
fs
aad
inc
push
and
mov
pop
clc
mov
fsub
xchg
mov
movs
(bad)
call
jmp
in
in
push
pusha
sbb
sbb
leave
out
push
and
loope
pop
sbb
cmp
nop
hlt
bound
mov
push
mov
cmp
mov
inc
inc
cmps
push
adc
enter
(bad)
jmp
sub
push
push
mov
inc
sub
sti
test
(bad)
(bad)
call
sbb
or
inc
or
jno
mov
xor
xor
div
push
push
cmp
ss
xchg
popf
xlat
fild
mov
xchg
cmps
pop
adc
mov
xor
ja
adc
inc
push
mov
test
cs
add
adc
sbb
test
call
leave
sbb
adc
test
inc
(bad)
in
pop
lods
test
cmp
dec
mov
frstor
(bad)
jmp
jge
push
pop
pusha
nop
dec
jne
add
pop
pushf
and
int
sbb
sar
push
sbb
test
repnz
sub
or
sbb
repnz
push
(bad)
(bad)
call
add
sbb
push
loope
loopne
sbb
xor
xor
(bad)
dec
jl
loopne
loopne
cmp
cmp
and
adc
(bad)
(bad)
addr16
mov
adc
lock
mov
push
test
xchg
(bad)
jmp
mov
and
or
hlt
pop
outs
mov
or
pop
mov
sub
clc
(bad)
push
hlt
xchg
push
mov
sti
mov
test
ret
cld
and
jg
sbb
aad
xchg
or
ins
and
push
aam
add
ror
mov
inc
jl
mov
or
les
mov
jne
jo
sbb
jp
push
ret
jg
rcl
sahf
cwde
inc
pop
or
mov
pop
mov
(bad)
jmp
pusha
or
mov
dec
jl
dec
(bad)
mov
xchg
sub
push
push
inc
aad
addr16
sub
mov
sub
dec
lea
jl
ins
mov
jp
aaa
jae
inc
es
dec
fild
punpckhdq
popa
mov
shr
lock
data16
loopne
addr16
test
mov
call
or
sub
mov
xchg
popa
test
mov
jne
scas
ret
sub
inc
ret
push
pop
outs
icebp
(bad)
enter
add
xor
add
pusha
inc
cmp
fsub
(bad)
jmp
adc
inc
mov
loop
fld
cmp
mov
mov
fucomp
dec
in
aas
leave
cmp
sub
push
mov
add
imul
call
(bad)
call
xor
push
jno
cs
cmp
jl
test
(bad)
mov
jmp
lea
and
xchg
in
ret
(bad)
jg
dec
sbb
sar
sub
(bad)
mov
jne
mov
sub
lahf
ficom
stos
fld
or
jnp
ror
(bad)
(bad)
sub
pop
sbb
and
or
jl
fldenv
(bad)
(bad)
(bad)
(bad)
cmp
or
hlt
xor
in
and
and
adc
es
push
pop
loope
xor
aaa
dec
and
dec
lds
or
loopne
pop
loop
mov
sbb
(bad)
(bad)
(bad)
call
nop
ds
sar
add
or
pop
frstor
cmc
or
je
inc
inc
in
out
loope
mov
sahf
and
push
arpl
mov
les
int
sti
stos
jl
jo
movs
mov
(bad)
dec
fsub
je
lar
std
daa
jmp
sti
push
(bad)
(bad)
(bad)
mov
mov
cmp
out
dec
mov
ss
inc
nop
push
daa
push
adc
sar
(bad)
jmp
popa
js
jo
pop
cmps
aas
out
mov
call
(bad)
js
icebp
sub
mov
sub
aaa
aam
inc
scas
retf
js
shl
add
sub
add
mov
icebp
jl
mov
xor
lea
(bad)
(bad)
jmp
cmp
jnp
jg
pop
pop
inc
jne
pop
sub
icebp
dec
pop
lods
jecxz
aad
push
mov
(bad)
mov
test
pop
sub
mov
ins
push
sub
push
outs
or
movs
(bad)
(bad)
jg
mov
fwait
ret
or
adc
movs
arpl
and
mov
addr16
int3
stos
xor
push
fisubr
mov
(bad)
mov
nop
imul
out
(bad)
jg
call
les
popa
inc
or
outs
add
cmp
rcr
(bad)
aaa
cli
xlat
lods
ss
add
and
outs
daa
dec
mov
(bad)
fild
in
test
dec
mov
mov
or
(bad)
(bad)
(bad)
push
mov
les
stos
xor
xor
add
mov
jg
(bad)
(bad)
cmp
cmp
inc
je
cmp
mov
or
(bad)
mov
inc
pop
leave
inc
enter
adc
push
mov
sub
ins
pop
pop
(bad)
aad
ins
cmc
cs
pop
pop
test
sbb
pop
jno
inc
dec
pop
xor
push
jo
jp
je
mov
lock
jg
js
sbb
and
sbb
ror
(bad)
jmp
ds
sub
repnz
mov
bound
mov
jo
stos
(bad)
call
inc
fs
jns
scas
cmp
into
dec
push
jbe
mov
ja
pop
add
or
jmp
push
shl
push
je
sar
jmp
cmp
add
cwde
or
and
cmp
and
(bad)
(bad)
jmp
and
fnstsw
push
pusha
mov
push
call
and
jg
or
ds
call
das
shl
ja
adc
(bad)
aam
out
lock
retf
lods
push
leave
and
mov
push
stos
pusha
pop
fist
and
(bad)
nop
or
daa
or
in
sub
fs
call
fwait
in
push
adc
retf
loope
or
pop
cli
(bad)
call
and
pop
jo
dec
inc
push
ja
cmp
push
in
or
(bad)
mov
inc
mov
xor
and
push
(bad)
and
sub
sbb
add
adc
mov
cmp
add
aas
sub
and
test
mov
icebp
(bad)
jg
icebp
sbb
pop
mov
mov
mov
pusha
mov
adc
shr
fcom
add
xchg
arpl
xor
in
dec
mov
(bad)
jmp
ror
lock
in
in
hlt
arpl
jnp
stc
adc
or
sar
jmp
(bad)
pop
loop
outs
jge
cmp
in
push
jns
lds
sub
fnstsw
(bad)
call
outs
and
cmp
dec
pop
loopne
fmul
jb
(bad)
(bad)
call
xor
add
pop
fcomp
or
or
test
sar
fisttp
mov
push
(bad)
pop
mov
mov
inc
sar
das
icebp
leave
in
push
and
in
and
jge
xor
shl
call
jle
movs
inc
repnz
call
jo
outs
(bad)
push
fistp
mov
pusha
jmp
pop
aaa
clc
mov
dec
fwait
pop
push
das
arpl
adc
(bad)
(bad)
cmp
sub
or
repz
cli
add
xchg
lock
(bad)
sbb
sub
mov
adc
loope
leave
(bad)
(bad)
(bad)
call
sbb
or
aam
sbb
cwde
imul
cmp
cvtps2pd
fcom
add
movs
dec
and
push
in
pop
pop
jne
les
(bad)
jg
out
xor
cmp
mov
add
call
mov
mov
test
(bad)
call
inc
shr
nop
pop
lods
adc
xor
sub
pop
sbb
(bad)
(bad)
(bad)
cmp
cmps
jb
data16
lock
mov
(bad)
mov
jns
xchg
call
dec
icebp
xchg
inc
pop
loop
mov
xchg
retf
mov
lea
mov
and
inc
inc
movs
mov
jl
mov
int3
(bad)
(bad)
(bad)
jmp
ror
jns
jnp
pop
clc
inc
sbb
shl
loopne
or
adc
xor
sbb
inc
js
rcl
mov
adc
push
sbb
aaa
std
(bad)
(bad)
(bad)
cld
js
js
lea
sbb
push
call
sbb
sub
(bad)
call
sub
push
pop
mov
mov
sbb
rol
inc
fsub
inc
(bad)
in
(bad)
pop
adc
mov
(bad)
(bad)
jmp
mov
loope
popf
pop
adc
jp
inc
sbb
add
fadd
xor
or
movs
cwde
fst
xchg
fsub
cmp
retf
call
das
pop
cmps
shl
out
mov
movs
mov
movs
jne
sahf
add
cwde
adc
and
movs
imul
sbb
loope
cmp
mov
sub
jg
(bad)
call
mov
stc
lds
out
mov
push
xchg
fstp
call
mov
xor
daa
into
xchg
or
js
push
ins
aad
(bad)
push
jmp
xchg
je
fsubr
inc
mov
popf
xchg
rcl
loopne
(bad)
call
cmp
fcom
pslld
ja
inc
adc
or
adc
dec
(bad)
(bad)
push
and
loope
aad
and
xchg
idiv
enter
or
sub
je
and
mov
push
dec
push
(bad)
(bad)
jmp
pop
jnp
sti
sti
test
xchg
jg
imul
dec
xor
(bad)
(bad)
jg
mov
fmul
inc
loope
icebp
daa
push
jbe
retf
add
and
shl
shr
mov
leave
lock
adc
mov
das
nop
mov
ins
(bad)
(bad)
(bad)
(bad)
jl
sub
add
repnz
fadd
jo
inc
add
ror
dec
test
inc
and
aaa
mov
(bad)
in
xor
xchg
cmp
sbb
(bad)
dec
pop
fstp
add
and
jne
cmp
push
push
loope
cmps
addr16
cmp
(bad)
inc
(bad)
cmp
xchg
test
xor
mov
sbb
ins
mov
and
jmp
(bad)
push
cdq
fmul
and
ins
int
adc
lea
or
scas
cdq
xor
clc
(bad)
jmp
aad
push
sbb
mov
and
imul
bound
jmp
cmp
repz
int
push
sbb
inc
sbb
scas
mov
push
dec
clc
inc
and
(bad)
(bad)
fucomip
imul
jmp
pop
mov
(bad)
jg
dec
jle
mov
push
inc
test
je
test
inc
pop
fdiv
mov
push
mov
cmp
add
mov
jmp
shl
cmc
pop
add
aaa
mov
mov
test
adc
pop
cld
add
les
test
mov
test
(bad)
call
fcom
in
add
outs
sub
les
pop
cli
pop
cwde
les
or
pop
add
sbb
or
pop
mov
clc
(bad)
inc
add
or
xchg
add
dec
mov
pushf
inc
(bad)
clc
jmp
adc
sbb
mov
imul
(bad)
and
out
bound
aam
xor
mov
and
adc
adc
mov
outs
aam
push
inc
fnstenv
scas
lods
fs
das
jmp
clc
add
aad
shl
add
adc
adc
mov
int3
sbb
cmp
call
shr
clc
gs
fadd
ins
mov
test
push
outs
pop
mov
(bad)
(bad)
jg
sar
cmp
and
add
dec
push
mov
pop
sti
mov
mov
(bad)
(bad)
call
xor
lods
pushf
jl
cmc
cmp
pusha
aas
pop
push
or
inc
(bad)
pop
mov
sub
aaa
dec
mov
pop
dec
gs
(bad)
fisttp
sbb
pusha
in
fcomp
jb
cmp
fst
ja
in
lods
inc
jb
push
adc
xor
fs
adc
nop
inc
sahf
mov
test
les
and
nop
xor
sbb
pop
bound
icebp
outs
pop
and
loopne
stos
sbb
cli
sbb
lods
push
mov
push
jmp
call
(bad)
pop
push
fld
jmp
outs
icebp
push
cli
adc
inc
bound
mov
loopne
sbb
mov
das
icebp
nop
inc
push
push
or
rcl
mov
mov
push
jge
jge
enter
cmp
call
or
outs
iret
loopne
clc
adc
sub
scas
xchg
jecxz
movs
(bad)
movs
test
imul
mov
(bad)
push
xor
inc
cmp
mov
mov
push
and
outs
pop
xchg
push
sbb
(bad)
(bad)
call
sub
xchg
sbb
imul
rcr
(bad)
js
add
inc
cmc
inc
test
cmp
mov
(bad)
pop
std
and
jae
aaa
lods
adc
into
retf
xor
iret
outs
call
sti
in
fs
lock
adc
pop
push
rcr
das
or
in
dec
jg
jmp
push
push
mov
push
or
into
mov
test
mov
push
lods
inc
test
push
add
test
dec
push
jp
dec
in
loop
(bad)
jge
loope
jne
inc
push
ds
fidivr
enter
add
fild
(bad)
pop
pop
add
jl
test
sets
sbb
and
jo
outs
std
mov
(bad)
sub
cdq
push
or
(bad)
(bad)
(bad)
(bad)
fdivr
lock
push
xor
mov
stos
fstp
ins
call
inc
(bad)
and
sbb
(bad)
jmp
lods
or
ins
xchg
out
fnstenv
jmp
test
outs
out
push
add
mov
pop
loop
sti
push
sbb
mov
mov
mov
fdiv
cmc
das
std
mov
pop
iret
jmp
jne
xor
and
and
or
or
push
clc
xor
xchg
cmp
push
xchg
std
call
jb
adc
pop
mov
xchg
fadd
cld
mov
fist
adc
pop
les
fwait
xchg
jecxz
outs
adc
push
dec
cmp
clc
iret
mov
pop
pushf
(bad)
hlt
lods
retf
push
mov
popa
add
push
icebp
dec
jle
in
test
call
xor
gs
cmp
outs
fucomp
jg
sbb
cmps
(bad)
call
jg
(bad)
jg
dec
sti
or
call
imul
or
clc
push
push
dec
std
mov
jp
aaa
jle
cmp
shl
mov
push
push
loopne
call
push
lods
mov
in
cmp
push
sub
les
inc
xchg
movs
(bad)
(bad)
(bad)
push
add
pop
jmp
inc
xchg
inc
loopne
hlt
test
test
mov
(bad)
(bad)
(bad)
and
(bad)
daa
pop
ret
sbb
jge
(bad)
jmp
push
inc
jo
inc
retf
pop
pusha
sbb
lds
arpl
pop
pushf
xor
xor
and
ss
not
jmp
icebp
inc
lahf
pop
pop
outs
sub
inc
std
ds
je
ins
icebp
femms
cmp
mov
pusha
pusha
mov
call
movs
push
and
mov
xor
jmp
ds
(bad)
inc
sbb
(bad)
call
jg
sbb
mov
cs
mov
leavew
hlt
pop
dec
sbb
cwde
lea
stos
sbb
cmp
mov
int3
popa
mov
jns
js
add
(bad)
jmp
add
test
out
adc
not
js
xor
dec
or
jb
(bad)
xchg
movs
(bad)
(bad)
(bad)
call
jmp
sbb
push
xor
inc
jmp
mov
shl
outs
jo
(bad)
jmp
adc
aaa
cmp
(bad)
fcmovnb
clc
mov
fs
xor
jne
sub
mov
adc
aaa
cli
pop
add
jmp
das
xor
adc
sbb
fcmovbe
mov
test
dec
(bad)
lods
add
enter
das
jmp
rcr
pop
or
fdiv
inc
adc
or
cmps
imul
call
or
add
adc
mov
fsubr
jmp
dec
loope
(bad)
inc
call
lock
int3
mov
cld
ins
dec
cmp
jmp
cmp
loope
(bad)
(bad)
call
or
add
adc
push
or
imul
pop
xor
xor
xchg
(bad)
(bad)
(bad)
jmp
js
aas
push
pop
add
cwde
or
out
pop
pusha
sub
add
mov
fidivr
mov
push
fbld
cli
call
jmp
arpl
stc
adc
leave
jp
(bad)
(bad)
call
out
call
loop
ret
mov
(bad)
add
dec
data16
(bad)
(bad)
(bad)
clc
xor
clc
xchg
mov
enter
sbb
repnz
push
add
pop
(bad)
inc
(bad)
call
add
pop
pop
clc
pop
push
dec
cmp
adc
(bad)
(bad)
jmp
hlt
adc
pop
push
es
mov
mov
std
push
mov
(bad)
inc
imul
and
retf
mov
sbb
jne
jnp
js
(bad)
(bad)
(bad)
(bad)
inc
cmp
das
and
cmp
adc
pop
push
data16
imul
jmp
pop
fucom
jmp
mov
adc
(bad)
mov
and
clc
jmp
ret
sub
enter
ror
add
bound
shl
clc
(bad)
dec
cmp
jg
mov
xchg
clc
in
cld
sbb
xor
mov
mov
cmp
sbb
xchg
in
sbb
jmp
in
leave
leave
mov
clc
std
adc
inc
pop
dec
stc
imul
(bad)
nop
cld
push
cld
push
scas
jnp
pop
div
pusha
or
xchg
ret
push
mov
test
daa
push
push
push
add
mov
stos
jg
test
popa
loopne
shr
cmp
das
lock
jns
adc
mov
sbb
gs
(bad)
(bad)
(bad)
mov
test
mov
aam
sbb
clc
repnz
aad
and
(bad)
(bad)
test
dec
clc
add
and
xchg
pop
ret
scas
icebp
and
lock
(bad)
jmp
add
pusha
mov
and
pop
cmp
(bad)
jmp
jmp
dec
jl
aad
push
cmp
adc
sbb
mov
clc
push
(bad)
call
loopne
cmp
cdq
mov
les
imul
(bad)
push
(bad)
adc
push
sbb
pop
lock
xchg
lock
cli
xor
in
das
adc
enter
push
adc
inc
inc
sub
mov
out
push
in
pushf
sbb
sub
stos
pop
sub
repz
sub
rsqrtps
add
push
loope
rcr
(bad)
sti
sub
retf
(bad)
(bad)
jmp
cmp
dec
gs
xor
xor
clc
cmp
jno
inc
jmp
or
sbb
imul
pop
call
push
clc
and
add
dec
in
cli
hlt
dec
outs
mov
rcl
xchg
sub
popa
hlt
mov
mov
mov
sub
xchg
out
out
sub
(bad)
fstp
repnz
js
jne
sub
sub
inc
sub
(bad)
call
add
mov
test
add
imul
ss
add
dec
cs
data16
sbb
clc
xchg
arpl
fidivr
bound
clc
jo
pusha
dec
cs
(bad)
jmp
push
lock
lahf
hlt
fmul
mov
jo
test
or
inc
sbb
xchg
lods
loope
xor
dec
dec
push
inc
and
cmp
or
shl
xchg
jbe
lds
mov
(bad)
js
nop
mov
xor
lods
add
imul
inc
fisubr
in
jmp
sub
and
cli
(bad)
(bad)
jmp
out
popf
(bad)
inc
stos
mov
inc
mov
fcmovnu
xchg
mov
or
jno
inc
jno
cmps
sub
(bad)
call
fild
call
dec
and
cwde
call
je
mov
outs
jle
(bad)
jmp
add
jecxz
add
test
test
mov
xor
(bad)
dec
adc
xchg
inc
imul
inc
sbb
cli
outs
add
push
add
jbe
sbb
jp
sub
cli
jg
jg
add
push
out
xor
rcl
shl
dec
pop
call
call
xchg
data16
mov
es
sbb
xchg
cmps
pop
call
das
or
loop
sbb
mov
mov
push
(bad)
loopne
cmc
jno
jg
jmp
sub
je
xchg
cmp
push
mov
jmp
sbb
jmp
rcl
mov
je
call
call
(bad)
jg
push
and
sub
enter
xchg
mov
xchg
sbb
in
push
in
lea
stos
cmps
imul
mov
jnp
xlat
clc
lahf
(bad)
ss
lea
add
dec
(bad)
(bad)
dec
sub
movs
pop
or
nop
mov
adc
push
inc
or
inc
adc
call
and
and
aaa
or
cmp
rcl
(bad)
jmp
out
inc
xor
int
push
add
and
jae
jne
and
cli
(bad)
mov
adc
sbb
repnz
dec
or
mov
sub
mov
jno
gs
adc
fadd
cmp
dec
add
and
daa
sbb
movs
and
xchg
(bad)
call
sbb
xor
ror
ret
xchg
nop
sbb
das
loope
div
jle
and
jg
fs
or
(bad)
push
mov
push
in
dec
scas
ffreep
in
fild
fwait
shr
sbb
pop
adc
outs
cmp
mov
mov
sub
mov
(bad)
out
test
pop
or
(bad)
inc
jp
movs
retf
jb
push
nop
clc
push
push
pop
push
in
rcr
(bad)
call
add
or
jno
out
jle
push
(bad)
aad
(bad)
and
xchg
mov
adc
inc
repnz
lods
and
add
dec
add
xchg
jp
mov
dec
inc
stc
sbb
(bad)
(bad)
mov
call
and
mov
xor
push
xchg
(bad)
les
scas
sbb
mov
ja
mov
jl
pushaw
xchg
push
out
xchg
jb
add
adc
add
inc
ret
call
es
jne
cmp
ror
stos
mov
jb
(bad)
(bad)
mov
inc
adc
mov
daa
scas
or
(bad)
jge
mov
outs
inc
(bad)
pop
or
call
xor
push
rol
sahf
(bad)
push
inc
mov
fmul
pop
sub
outs
jmp
push
mov
mov
jmp
test
or
push
jb
(bad)
call
shl
sbb
jle
add
jmp
add
lds
cmc
xchg
sub
add
lods
movs
fucomi
(bad)
(bad)
(bad)
push
int
aas
dec
cmps
loopne
jo
or
push
push
push
imul
mov
mov
push
(bad)
pop
pop
lods
adc
cmp
pop
xor
push
jmp
js
sub
mov
cmp
ds
in
cs
(bad)
(bad)
(bad)
cmp
dec
mov
lahf
xchg
pop
sub
hlt
hlt
or
(bad)
inc
or
or
inc
ret
stos
sbb
lahf
daa
inc
push
adc
mov
fisub
mov
sub
call
xor
cmp
loopne
fimul
sahf
jg
test
add
pop
adc
ret
(bad)
cmp
pop
or
clc
push
pop
retf
push
push
push
loope
mov
mov
cmps
test
sbb
int
cmp
jb
sub
inc
neg
call
inc
push
fcom
setl
hlt
mov
outs
mov
xchg
ror
add
sbb
fsub
psrad
and
(bad)
call
pop
or
jo
mov
popa
push
adc
sbb
dec
(bad)
(bad)
(bad)
jmp
adc
mov
sub
sbb
sbb
pusha
push
stos
mov
pop
cmp
(bad)
(bad)
call
inc
je
jp
outs
(bad)
stc
popf
dec
mov
imul
mov
cmps
cld
xor
test
mov
push
loopne
js
sbb
inc
push
pop
call
ds
xlat
fld
cdq
js
or
sbb
(bad)
mov
pusha
sub
sbb
repz
in
fild
(bad)
(bad)
(bad)
hlt
movs
jb
push
or
cmp
or
pop
es
repnz
push
cli
inc
js
js
sub
or
into
fisttp
sbb
(bad)
mov
sbb
loop
repz
add
(bad)
mov
call
mov
popa
push
and
adc
mov
test
(bad)
(bad)
push
inc
mov
adc
sbb
and
or
cwde
fcos
jmp
imul
push
pandn
add
sub
shl
bnd
push
sub
mov
push
rol
cmp
inc
push
inc
je
adc
mov
(bad)
cmp
gs
mov
or
xchg
xor
push
fild
push
cwde
mov
mov
mov
sbb
and
(bad)
(bad)
jg
cmp
lahf
push
mov
cmp
test
mov
(bad)
(bad)
push
(bad)
test
add
test
adc
xchg
pop
cli
mov
pop
and
pop
xchg
popa
pop
sub
sbb
push
outs
cld
cmp
(bad)
and
dec
adc
inc
and
inc
inc
loope
clc
or
cmp
xor
push
push
push
xor
sbb
dec
ins
jne
mov
lods
dec
mov
jb
push
fidiv
(bad)
jg
inc
xor
lock
pusha
xchg
sub
mov
and
xor
jg
clc
dec
jecxz
iret
push
shl
(bad)
and
out
sub
adc
movs
(bad)
(bad)
jmp
push
sar
mov
xchg
sbb
outs
popf
push
les
test
pop
fsubp
test
(bad)
(bad)
push
mul
mov
test
out
push
push
mov
push
push
test
jecxz
cmp
ror
add
shr
bound
xchg
call
enter
rcl
and
xchg
inc
mov
test
push
inc
inc
jp
adc
mov
stos
lods
ret
call
mov
movs
pop
mov
pusha
push
pop
lea
fistp
in
popf
pushf
fs
sbb
xchg
mov
fimul
mov
push
mov
(bad)
call
pop
xchg
cmp
jmp
sub
nop
adc
add
in
inc
pop
(bad)
call
fisubr
adc
icebp
lods
sbb
pop
outs
xor
(bad)
call
sub
sbb
aaa
inc
inc
hlt
or
test
push
xor
or
daa
popa
mov
pop
std
enter
daa
stos
pop
hlt
or
cmp
cmp
leave
and
nop
and
(bad)
call
mov
mov
add
mov
aam
pop
jmp
not
pop
aad
je
mov
test
sbb
mov
push
stc
rcl
jmp
and
or
mov
xchg
hlt
push
in
mov
scas
jne
test
js
out
std
mov
test
jmp
pop
dec
jnp
mov
jmp
cmp
pop
or
test
ss
mul
inc
jl
(bad)
mov
sub
sbb
or
xchg
add
mov
push
xchg
clc
je
and
sti
(bad)
(bad)
push
cmps
das
push
push
dec
mov
xor
xchg
pop
xchg
data16
and
enter
arpl
das
xor
adc
fld
pusha
sub
(bad)
(bad)
(bad)
cld
and
jnp
(bad)
jmp
dec
jmp
and
mov
lock
xchg
mov
jmp
sbb
sbb
mov
rcl
inc
rol
icebp
jle
dec
rcl
push
add
lods
push
retf
push
mov
or
dec
out
pop
cmp
dec
ins
hlt
xchg
push
in
mov
das
cld
(bad)
(bad)
jmp
add
jne
inc
xor
mov
and
pop
mov
push
fs
div
aam
nop
mov
rcr
addr16
push
cmp
clc
fisttp
test
jo
jle
das
lock
pop
xchg
add
loopne
sub
(bad)
(bad)
push
popa
das
jb
inc
nop
cmp
and
xor
hlt
jmp
adc
adc
pop
pop
sub
inc
(bad)
xchg
fistp
pop
push
scas
sti
(bad)
call
(bad)
adc
cmp
pxor
test
add
ret
mov
or
(bad)
fnstcw
cli
clc
test
jl
push
je
imul
add
fild
mov
push
jg
(bad)
(bad)
clc
hlt
or
mov
sub
addr16
pusha
cwde
icebp
mov
ret
pop
dec
outs
or
xchg
ror
aam
jmp
lock
mov
ret
in
in
in
repz
jmp
push
loopne
fdiv
repz
shl
(bad)
loop
ret
or
gs
(bad)
call
add
out
shl
mov
xchg
or
cs
(bad)
(bad)
jmp
fs
xor
xor
jge
jle
or
jbe
push
das
inc
sbb
xchg
frstpm(287
(bad)
(bad)
(bad)
jmp
bound
lods
pop
dec
test
out
adc
inc
add
mov
jp
xor
imul
mov
pop
aam
add
and
enter
or
cmp
push
pop
mov
nop
fstp
(bad)
pop
popf
int3
xchg
aam
cdq
add
sub
or
fmul
enter
in
pop
retf
loopne
pop
call
mov
dec
pop
dec
std
outs
push
fisttp
fisub
pop
fsub
xchg
mov
fcmovnu
or
add
xchg
es
fnstenv
popf
nop
push
test
clc
or
je
ret
ret
sti
mov
xchg
pop
xchg
xor
movs
test
xchg
int3
sbb
push
cmp
xor
jmp
add
cmp
cmp
sbb
int
aaa
adc
cmp
je
mov
jmp
or
movs
dec
sbb
jmp
or
push
xchg
jb
ret
pop
dec
repnz
enter
outs
adc
(bad)
inc
inc
data16
cmc
dec
adc
add
or
push
pop
sti
cld
lods
sar
mov
push
scas
push
mov
(bad)
das
xor
jb
cmps
aaa
out
out
jmp
and
loop
(bad)
adc
popa
dec
mov
and
test
pop
pop
and
fld
das
add
push
gs
jge
sub
(bad)
jmp
push
xor
ret
adc
sub
mov
xchg
pop
mov
pop
add
cmp
repnz
jmp
xchg
pop
adc
adc
dec
psadbw
and
stos
sub
mov
mov
in
(bad)
(bad)
fcmovnu
cli
push
adc
and
jb
sub
fmulp
adc
adc
xchg
xor
jecxz
outs
lock
adc
dec
jb
lock
add
pop
stos
push
mov
dec
into
sub
jo
jl
into
xchg
cli
(bad)
dec
and
fldcw
jno
adc
lods
jbe
or
dec
(bad)
(bad)
dec
fimul
cdq
rcr
and
push
push
jne
shr
pop
aam
push
xchg
jmp
inc
ins
xchg
sar
lea
xchg
imul
mov
(bad)
das
hlt
sbb
sbb
aaa
add
int
test
jno
mov
(bad)
mov
retf
push
jge
jns
mov
and
adc
dec
call
sbb
push
jbe
nop
popfw
sub
popf
pop
mov
inc
mov
xor
(bad)
(bad)
(bad)
call
or
cmp
and
mov
xor
(bad)
enter
pushf
mov
jp
cli
(bad)
jmp
sti
aam
pop
les
outs
daa
and
xchg
cmc
mov
bound
(bad)
jmp
sbb
retf
ror
xor
or
test
fisttp
add
test
dec
rcr
sbb
popa
pop
nop
push
or
scas
imul
call
adc
retf
sbb
jbe
in
ror
cmp
cmp
(bad)
inc
push
xchg
cmp
push
jne
dec
clc
mov
repnz
fnstsw
and
mov
ds
mov
jg
dec
or
(bad)
(bad)
jmp
dec
ror
cwde
fcomp
fdiv
push
mov
pop
hlt
ds
inc
imul
jg
xchg
call
push
pop
(bad)
and
ror
je
mov
xchg
sbb
add
mov
sub
sub
outs
mov
push
lea
xor
jae
rcl
(bad)
inc
and
sbb
sbb
sub
jl
push
add
stc
or
xchg
push
mov
cld
cmc
and
add
inc
jg
rcl
adc
push
imul
out
enter
push
pop
int
rcr
mov
and
imul
and
inc
or
inc
movs
inc
neg
jl
sub
loope
xor
push
(bad)
jmp
dec
adc
lahf
popf
push
repnz
(bad)
push
and
pop
(bad)
inc
push
or
sti
mov
loopne
repnz
sub
jnp
rcr
std
fist
ds
movs
gs
(bad)
in
call
jne
int
daa
jb
int3
adc
adc
push
jno
sub
or
lahf
sbb
sbb
(bad)
jmp
scas
fwait
cwde
jg
inc
adc
js
push
test
mov
(bad)
(bad)
call
or
xor
cmp
xor
loope
jl
ja
test
pop
(bad)
(bad)
(bad)
stc
test
adc
adc
sbb
sub
mov
or
add
stos
mov
adc
jp
call
cwde
addr16
(bad)
leave
call
(bad)
stos
add
cmp
jg
call
nop
ret
or
mov
sbb
out
lock
mov
outs
hlt
pop
ror
xor
sub
(bad)
out
mov
jmp
sar
pop
movs
cmp
imul
pop
add
jg
mov
pop
rcl
or
lock
adc
xor
sbb
adc
jo
jnp
(bad)
(bad)
fist
pop
fst
sbb
add
fstp
cmp
(bad)
push
test
jo
shr
ss
sar
and
in
(bad)
(bad)
(bad)
out
adc
cld
xor
xor
adc
and
mov
mov
dec
push
adc
sub
imul
sar
mov
aam
fisttp
(bad)
(bad)
(bad)
fsubr
xchg
inc
mov
ret
push
mov
enter
fcomi
inc
inc
cmp
sbb
xor
sub
dec
pop
pop
aaa
or
xor
pop
xor
daa
gs
mov
sbb
cmp
stos
and
pop
xchg
cmp
(bad)
adc
rcr
jo
cdq
mov
adc
jb
add
out
test
dec
imul
xor
push
and
and
adc
leave
(bad)
(bad)
jg
(bad)
leave
clc
xchg
(bad)
rcr
adc
mov
aas
or
ja
jmp
mov
pusha
pop
xor
out
xor
nop
je
adc
mov
(bad)
jg
jl
mov
ins
pop
test
adc
outs
loope
mov
mov
push
fdivr
lods
xchg
mov
xor
or
and
(bad)
(bad)
call
dec
or
add
aam
sbb
adc
ja
je
loopne
lods
(bad)
push
mov
imul
sbb
xor
or
(bad)
dec
dec
jge
mov
movs
xor
pop
loope
es
mov
cs
and
or
outs
lock
sar
icebp
and
mov
push
cmp
inc
(bad)
mov
mov
inc
mov
mov
push
repnz
not
pop
ss
add
cmp
mov
or
xor
cmc
adc
jne
pop
xchg
push
nop
jns
movs
inc
(bad)
(bad)
call
push
ficomp
mov
mov
(bad)
mov
(bad)
mov
mov
cmc
or
aaa
jle
inc
sbb
std
jns
pop
dec
sbb
and
movs
add
inc
and
fst
or
jmp
lock
sub
xchg
cmp
cdq
hlt
and
es
je
pop
(bad)
inc
sub
and
in
sub
std
ror
fist
ins
mov
test
and
and
add
cmp
(bad)
mov
dec
call
fbld
retf
and
movs
push
call
sbb
adc
sar
mov
xchg
ja
xor
mov
adc
cmp
dec
or
das
pop
out
cwde
int3
mov
and
aaa
push
push
xor
xor
sti
shl
dec
mov
dec
add
add
mov
call
into
add
clc
lahf
jmp
cmps
xchg
push
jo
mov
jle
mov
les
das
dec
ja
dec
cld
xchg
adc
std
lods
pop
shl
jmp
or
cmp
sub
add
(bad)
mov
ror
cmp
push
mov
inc
lds
push
and
cld
fucomip
(bad)
sti
dec
(bad)
push
aam
and
mov
cs
mov
and
call
push
enter
fldenv
mov
xor
jbe
add
(bad)
mov
cmps
sti
jle
dec
inc
clc
mov
lods
push
xor
push
inc
push
movs
ins
ret
clc
test
cmp
pop
push
out
jo
arpl
das
adc
(bad)
mov
int
add
jbe
test
cmps
lock
cmp
(bad)
pop
inc
sub
push
imul
call
scas
call
xchg
mov
(bad)
(bad)
(bad)
push
dec
stos
das
push
movs
mov
enter
push
mov
add
adc
idiv
(bad)
(bad)
call
or
dec
adc
jle
jl
mov
push
sbb
pop
or
or
jle
pop
mov
(bad)
dec
cdq
sbb
push
sahf
or
call
imul
js
(bad)
call
fmul
xchg
and
ror
or
(bad)
fistp
inc
cmp
pushf
push
sub
in
movs
(bad)
(bad)
mov
and
and
adc
mov
xchg
xor
ror
push
and
fmul
inc
dec
jmp
dec
(bad)
jg
leave
mov
stc
adc
(bad)
(bad)
jmp
add
mov
add
shl
shl
adc
xchg
push
jle
data16
add
push
xor
clc
push
pop
push
mov
(bad)
(bad)
jmp
rol
ins
aaa
sub
sbb
ins
cld
pushf
fwait
ins
ror
in
add
test
and
(bad)
fsubr
test
daa
pop
inc
add
jge
dec
mov
push
jno
rcr
dec
icebp
ret
cmp
out
ss
scas
and
ret
inc
(bad)
(bad)
jmp
int3
loopne
pop
bswap
ret
pusha
pusha
sbb
cdq
in
jl
clc
mov
pop
push
or
jmp
call
arpl
bound
or
lods
repnz
xchg
pop
or
scas
xchg
sub
sbb
push
inc
jmp
ficomp
adc
jle
adc
pop
and
aas
or
mov
clc
fild
fidiv
mov
sbb
(bad)
push
arpl
je
or
into
aaa
or
mov
jb
or
or
test
jmp
in
jecxz
lahf
stos
dec
pop
pop
cmp
call
vpshaq
xchg
inc
jecxz
xchg
add
inc
sbb
dec
dec
loopne
mov
or
mov
(bad)
(bad)
(bad)
(bad)
inc
iret
mov
push
mov
pop
popa
bound
xchg
jno
mov
pop
mov
call
xor
jbe
stos
call
push
push
lds
adc
(bad)
(bad)
jmp
xor
addr16
inc
mov
cmp
test
ins
retf
dec
stos
cmp
jbe
mov
rcr
or
inc
push
aaa
loop
sbb
mov
shr
(bad)
fld
pop
call
mov
je
mov
pop
aaa
adc
jmp
add
cmp
inc
(bad)
hlt
push
xor
cld
mov
adc
add
rcr
pushf
hlt
jns
test
call
mov
or
xchg
(bad)
inc
sub
ss
inc
cmp
or
add
cs
add
lea
inc
imul
fiadd
jmp
pop
clc
ret
jmp
xchg
ret
push
pop
(bad)
jo
push
adc
mov
das
hlt
(bad)
jmp
mov
aam
test
call
int
push
push
(bad)
fs
push
inc
int
push
add
cmp
push
or
lock
add
add
and
dec
aam
mov
add
call
jmp
jle
pop
mov
sbb
add
dec
inc
or
rol
inc
adc
rcr
aad
push
out
add
fsubr
jg
jne
call
xor
out
add
or
sar
or
push
sbb
jge
jmp
mov
shl
lods
pop
cmp
(bad)
jp
mov
push
call
push
xor
adc
dec
jle
mov
stos
fsub
jmp
sub
not
pusha
pop
imul
mov
cmc
inc
mul
fild
(bad)
push
add
dec
adc
jb
inc
push
cld
inc
sbb
cmp
outs
std
(bad)
fist
sbb
add
mov
cmp
loop
dec
pop
lock
cli
inc
jmp
out
ds
push
mov
mov
mov
sub
or
fld
fadd
jb
xor
(bad)
(bad)
(bad)
jmp
pushf
call
mov
test
add
in
mov
cwde
scas
add
mov
jg
(bad)
(bad)
fadd
jb
sbb
dec
sub
es
mov
sub
in
dec
sub
adc
div
call
test
add
es
push
push
pop
dec
jne
clc
(bad)
push
test
retf
jmp
inc
jne
mov
sti
jg
movs
(bad)
lock
aaa
stos
jmp
mov
imul
cmp
out
push
lock
cmp
add
aad
or
jmp
mov
sar
jbe
sbb
cwde
add
add
pop
mov
pop
pop
mov
call
push
(bad)
clc
sbb
mov
in
pushf
fucomp
jne
in
(bad)
(bad)
(bad)
(bad)
jmp
sbb
paddusb
jne
int
fmul
icebp
bound
enter
ins
xchg
mov
mov
jg
and
push
ins
sbb
fsubr
adc
xor
pop
(bad)
call
inc
repz
arpl
cmc
add
push
jge
retf
(bad)
iret
test
call
into
inc
adc
push
sbb
adc
in
(bad)
jg
pop
or
and
pmullw
popa
pop
ret
mov
or
mov
and
add
bound
push
dec
call
xor
ds
push
bound
mov
fsub
ja
(bad)
(bad)
inc
adc
test
push
addr16
ins
sbb
sub
add
sub
mov
adc
mov
and
pop
addr16
push
aas
(bad)
jg
add
mov
lods
jecxz
iret
xor
aad
jmp
jo
sub
jmp
ins
push
pop
nop
stos
test
sub
cmp
aaa
push
inc
jp
jns
xchg
leave
adc
push
push
iret
das
(bad)
dec
or
mov
sbb
and
sbb
mov
xchg
js
fdivr
test
jae
push
psubw
lods
xchg
adc
push
dec
jo
jmp
icebp
rol
inc
jg
cmp
(bad)
jg
shl
pop
repz
sbb
cmp
loope
push
push
xlat
cli
jmp
cld
add
cmps
popa
fdiv
inc
lock
out
mov
aas
adc
adc
or
(bad)
mov
daa
sbb
jne
aas
add
call
dec
jo
adc
sub
test
xor
dec
sub
or
add
or
adc
aam
loopne
inc
pop
add
outs
int
call
(bad)
(bad)
call
push
xchg
inc
xor
push
add
mov
and
push
cmps
inc
in
pop
sbb
pop
loopne
(bad)
inc
retf
mov
rol
clc
cmp
jge
(bad)
add
js
pop
lea
enter
or
mov
push
and
or
loopne
sbb
jle
retf
cli
repz
je
push
sub
fbld
jae
add
test
pop
mov
add
and
push
clc
(bad)
call
or
jmp
pop
fcom
adc
pop
jmp
(bad)
jmp
adc
add
repz
pop
push
shl
shl
mov
jmp
inc
sbb
dec
jb
shl
jbe
mov
and
sbb
hlt
lea
sti
es
out
cmp
pop
jb
fsub
jg
test
ss
test
jne
fucom
fistp
jne
shr
es
(bad)
(bad)
(bad)
push
cmp
jl
cmp
pop
aad
sub
pop
lock
push
out
sbb
shl
or
rol
xchg
test
xchg
lods
push
(bad)
mov
jl
mov
sbb
mov
sub
pop
jmp
stos
dec
cmp
sub
retf
add
les
jmp
ds
push
add
loop
sub
out
push
aam
fucomip
(bad)
in
pop
mov
mov
or
repnz
jns
push
add
push
jb
inc
or
test
sbb
mov
mov
(bad)
outs
das
ficom
or
enter
retf
ror
and
std
and
(bad)
call
mov
mov
retf
jbe
mov
mov
cmp
cmp
jmp
mov
mov
sub
(bad)
mov
push
xor
ret
pop
sbb
jae
iret
sahf
dec
pop
fsubr
mov
pop
cmp
or
hlt
lods
(bad)
push
js
outs
sbb
repnz
pop
jb
push
adc
dec
pop
and
jne
clc
repz
push
push
jmp
jbe
inc
loopne
pop
nop
(bad)
(bad)
jmp
jae
wrmsr
test
call
inc
or
mov
(bad)
mov
xchg
popa
pop
adc
(bad)
(bad)
dec
mov
push
sub
xor
jmp
stos
rcr
or
cs
sub
mov
push
cld
pop
(bad)
call
cdq
aam
mov
sbb
shl
in
sahf
pop
xchg
sar
push
das
paddq
jge
dec
dec
adc
and
push
add
adc
add
push
mov
in
mov
(bad)
(bad)
fistp
test
xor
inc
adc
cmp
mov
push
in
push
sub
mov
(bad)
test
cld
dec
push
mov
adc
ins
or
or
clc
jg
xor
mov
sub
call
(bad)
(bad)
stc
int3
lods
addr16
adc
mov
and
jne
mov
shr
aaa
push
out
adc
call
push
sahf
cmc
inc
inc
inc
push
outs
in
jg
add
(bad)
(bad)
mov
mov
sub
jmp
dec
es
mov
inc
loopne
je
or
or
pop
jp
sbb
cmps
sbb
call
mov
sbb
and
arpl
int
jg
pop
bound
or
ja
sbb
mov
xchg
outs
(bad)
dec
xchg
cwde
sub
test
jnp
aad
or
imul
mov
call
mov
cmp
fild
xchg
shl
jnp
inc
pop
or
mov
rcl
jmp
icebp
and
or
xchg
es
and
scas
lods
rol
(bad)
jmp
push
pop
mov
ds
test
sbb
and
mov
add
cdq
mov
fmul
clc
inc
mov
repz
pop
out
inc
(bad)
jmp
outs
and
or
ror
jle
push
loopne
sbb
and
push
dec
mov
ret
push
fld
fstp
call
enter
repnz
loope
call
jmp
pop
in
stos
mov
imul
and
and
adc
je
pop
mov
(bad)
jg
jg
jmp
jno
mov
ret
cmp
and
and
(bad)
test
aaa
(bad)
mov
in
add
or
jp
jmp
cmp
aad
pop
rol
in
jl
icebp
fcos
inc
scas
ret
mov
lea
sbb
pop
sub
inc
test
enter
jl
sub
pop
jns
and
add
push
dec
inc
lods
cmps
add
push
cmc
ret
inc
dec
inc
adc
adc
and
icebp
std
test
adc
in
into
cli
ins
sbb
jmp
not
nop
mov
lea
mov
push
pop
adc
push
inc
and
movs
(bad)
in
mov
jmp
mov
sub
mov
rcl
push
add
hlt
push
inc
or
imul
or
dec
jne
mov
mov
out
push
mov
mov
pop
loop
inc
lea
ret
gs
fisubr
mov
jle
(bad)
push
cmc
fadd
xchg
mov
sbb
pop
and
dec
push
mov
sbb
call
cli
or
adc
xor
call
pop
retf
(bad)
inc
call
and
rol
xchg
(bad)
arpl
sbb
mov
stos
or
sbb
inc
ss
mov
cmp
jae
cmp
inc
mov
call
(bad)
clc
cmp
sbb
add
and
pop
pop
jo
mov
out
jg
mov
or
rol
retf
pop
fwait
rcl
sbb
movs
(bad)
clc
lock
into
scas
jecxz
out
repz
push
ins
mov
cs
scas
push
inc
jno
pop
clc
outs
icebp
aaa
stc
or
jge
ret
mov
ja
mov
adc
call
sbb
addr16
sub
inc
out
sub
les
push
jne
out
xor
dec
fsub
mov
out
mov
out
xchg
cmp
push
xor
(bad)
(bad)
mov
push
and
mov
data16
pop
sbb
frstor
out
xchg
test
pop
js
mov
(bad)
(bad)
mov
pop
or
mov
jns
daa
(bad)
adc
sbb
push
jge
(bad)
(bad)
dec
and
adc
or
lock
dec
popa
jmp
dec
mov
call
call
test
adc
sbb
jbe
leave
push
pop
cli
das
icebp
mov
mov
fstp
inc
lods
fmul
aaa
cli
(bad)
call
fistp
cmp
pop
xchg
sbb
pop
nop
adc
add
dec
cmp
(bad)
(bad)
push
dec
mov
repz
aaa
clc
xor
das
(bad)
xor
and
jns
jmp
push
(bad)
(bad)
(bad)
jmp
xor
xor
xor
bound
pop
sub
std
add
add
and
hlt
ret
push
pop
adc
enter
adc
mov
xor
inc
pop
(bad)
mov
(bad)
out
cmps
mov
shl
ror
push
rol
and
(bad)
(bad)
(bad)
push
or
sar
aas
adc
fcomp
jo
add
stos
js
dec
addr16
mov
nop
xchg
push
sti
(bad)
(bad)
jmp
out
ret
inc
inc
arpl
ins
mov
sbb
jnp
(bad)
rcr
push
fdiv
(bad)
(bad)
out
mov
cmp
in
cwde
lea
pushf
fmul
mov
pop
fmul
xchg
mov
repnz
pushf
push
int3
shld
loop
mov
(bad)
(bad)
mov
bound
add
mov
test
xchg
xor
(bad)
in
xor
lds
sub
adc
retf
call
dec
xor
jp
pop
xor
call
rcl
mov
inc
and
(bad)
sub
pop
push
push
push
fdiv
clc
pop
sbb
mov
loopne
mov
add
in
jg
mov
daa
jno
sub
loope
shl
or
ins
out
call
rol
sbb
mov
or
dec
push
in
push
add
call
daa
add
in
call
dec
adc
or
gs
stos
dec
jl
lock
dec
cs
jns
fiadd
(bad)
(bad)
push
sub
add
aad
xor
sbb
dec
ror
sbb
(bad)
push
mov
outs
mov
jb
sub
call
push
sbb
jl
(bad)
inc
mov
pop
bound
ficomp
add
cmp
push
pop
push
sub
inc
addr16
mov
mov
push
sub
fmul
cmp
sbb
mov
xchg
inc
rcl
out
sbb
mov
test
out
mov
jmp
enter
add
add
jmp
inc
pop
cmp
and
shl
mov
(bad)
dec
in
adc
pop
jo
add
es
test
in
xor
clc
inc
(bad)
fist
fadd
pop
mov
sbb
and
jb
xchg
sub
in
jo
xor
repz
add
jo
movs
xor
push
je
sti
(bad)
(bad)
jg
sub
sub
jle
adc
dec
in
inc
adc
jmp
xchg
mov
pop
jmp
xchg
sub
jmp
lods
dec
push
mov
punpckhwd
sbb
and
fbld
movs
push
inc
lea
mov
call
enter
jbe
in
js
fs
jae
call
(bad)
call
les
fidiv
fsubr
leave
repz
jae
inc
fidivr
xchg
jns
mov
push
mov
mov
xlat
mov
fsubr
pop
mov
push
jmp
(bad)
call
addr16
sbb
fsubp
arpl
mov
jmp
inc
mov
mov
stc
pop
jo
push
pop
sub
jg
inc
loopne
cmc
push
loop
pop
pop
mov
retf
fisttp
test
mov
std
jmp
in
int3
push
push
pushf
gs
xchg
shl
dec
cmp
mov
in
(bad)
jg
pop
add
pop
rcl
and
pusha
sbb
adc
ins
je
pop
clc
mov
and
mov
jge
(bad)
(bad)
mov
add
out
inc
and
out
sub
xor
neg
clc
call
cld
and
in
sbb
nop
add
movs
lods
add
movs
adc
cs
mov
jmp
inc
(bad)
gs
cmp
lock
cmp
(bad)
call
lods
mov
fucom
ja
lods
rol
and
int
js
push
add
call
jg
outs
hlt
cwde
pop
das
lahf
xchg
aam
pop
(bad)
test
pop
cmp
mov
cli
(bad)
call
adc
push
or
mov
lahf
sub
ss
aaa
(bad)
mov
pop
dec
xor
test
push
and
mov
mov
hlt
add
push
add
add
in
push
mov
cld
mov
mov
sbb
movs
(bad)
sti
sub
sbb
adc
ins
test
(bad)
call
test
inc
xor
and
int
test
sar
movs
(bad)
mov
outs
fdiv
push
and
sbb
push
push
mov
push
sub
jmp
aaa
retf
ds
xlat
pop
cmp
and
scas
in
and
push
(bad)
dec
jge
loope
ret
fist
and
and
out
call
xor
push
imul
and
in
into
aam
jns
dec
dec
add
jmp
mov
push
sbb
addr16
adc
adc
retf
mov
cmp
lea
call
push
outs
sbb
dec
push
cld
not
xor
int
cmp
jmp
inc
js
ins
fmul
sub
sub
pop
(bad)
(bad)
(bad)
fld
dec
dec
je
push
lds
dec
adc
push
sbb
jae
dec
push
lds
xchg
clc
(bad)
(bad)
jmp
adc
and
sbb
lahf
and
retf
aaa
mov
sbb
push
test
or
mov
jae
sub
xor
and
push
push
cmp
jl
or
sbb
(bad)
das
jle
mov
cld
push
jns
add
inc
cmp
out
or
mov
add
movs
add
and
adc
push
mov
pop
int
sub
into
inc
loop
cmps
clc
iret
adc
sub
clc
test
add
adc
or
sbb
(bad)
mov
jne
hlt
and
cmp
and
mov
or
mov
mov
(bad)
inc
popa
or
nop
das
sbb
cld
leave
imul
cmp
stc
pushf
dec
jmp
cmc
pop
clc
xor
add
and
push
mov
and
jne
push
(bad)
jg
outs
loope
repz
lea
mov
pusha
pop
inc
jne
das
lock
add
fnsave
mov
fld
push
(bad)
in
add
call
cmps
jl
sub
les
xor
cwde
sbb
dec
jo
popf
loopne
mov
pop
cli
pop
jmp
outs
ds
cmp
aam
xor
loop
call
cmc
xor
pop
(bad)
cmp
(bad)
(bad)
(bad)
jmp
stc
js
jmp
test
add
mov
mov
jge
add
add
adc
dec
add
adc
xor
call
sub
fcmovnbe
es
fdiv
ins
dec
or
mov
adc
imul
cmps
sbb
call
push
dec
lock
ins
in
in
mov
sub
out
cdq
rol
xor
(bad)
(bad)
(bad)
call
aas
in
jge
cwde
inc
repz
call
push
push
mov
mov
movs
inc
call
sub
lods
dec
sahf
loopne
fdivr
sub
out
inc
ins
outs
cs
inc
xor
mov
cmp
push
retf
or
adc
sbb
test
push
xchg
and
loope
hlt
(bad)
fstp
rcr
pop
mov
add
cmp
ret
idiv
jmp
adc
jno
push
push
cs
fisttp
ds
mov
push
jo
and
(bad)
imul
dec
add
jmp
call
clc
push
inc
lods
jecxz
ja
xchg
cli
das
inc
dec
inc
mov
jmp
jne
(bad)
(bad)
(bad)
inc
mov
push
ret
push
inc
pushf
mov
and
sar
aas
mov
cmp
cmc
je
push
fcomp
xchg
dec
sub
jae
cmps
icebp
mov
or
mov
cmc
fwait
je
cmps
mov
jmp
adc
inc
and
test
xchg
lea
adc
sub
sbb
and
ins
and
cmp
ds
stc
pop
ss
push
sbb
and
push
xlat
pusha
neg
mov
adc
prefetcht2
pushf
add
ret
aad
adc
icebp
(bad)
mov
xchg
dec
cwde
mov
les
and
or
in
and
loope
loop
setp
popa
adc
outs
push
loop
sbb
adc
and
sbb
pop
adc
(bad)
(bad)
inc
das
sub
dec
mov
imul
outs
fwait
out
mov
data16
pop
mov
inc
fmul
and
stos
aad
ss
or
dec
arpl
adc
push
icebp
mov
add
push
fs
mov
stc
jo
mov
pop
or
jne
mov
sub
fist
dec
mov
sbb
xlat
bound
fistp
cmovb
and
xor
inc
sbb
jg
inc
dec
pop
add
pusha
fs
mov
fs
push
mov
hlt
jmp
jbe
addr16
daa
clc
mov
mov
dec
mov
enter
test
and
jbe
and
(bad)
(bad)
call
dec
pusha
or
in
lods
and
sbb
jmp
fwait
addr16
es
jbe
add
nop
sub
shrd
fild
and
and
adc
mov
aaa
cli
jg
or
inc
ja
test
aam
fild
or
xchg
fcom
jle
add
cmps
(bad)
(bad)
dec
adc
ins
dec
je
mov
push
mov
sub
push
lds
(bad)
jmp
pushf
lods
loope
pop
mov
stos
and
(bad)
test
inc
jo
aad
jg
jg
nop
data16
sti
adc
data16
dec
push
or
pop
ins
stos
call
call
push
xor
jle
ins
cld
and
sbb
sbb
js
cli
pop
call
inc
leave
push
leave
xchg
inc
mov
adc
pushf
call
mov
cli
mov
jge
xor
cmps
rcr
inc
cmp
(bad)
push
jmp
mov
pop
rol
sbb
jge
popf
call
inc
pop
aas
imul
mov
mov
jns
fcom
mov
fidiv
mov
jmp
shl
adc
add
sub
in
cmp
rol
imul
call
popf
loopne
(bad)
dec
arpl
push
push
sub
sahf
mov
sbb
mov
ins
push
movs
stos
mov
(bad)
mov
pop
jl
xor
and
sub
or
jns
cmp
ret
(bad)
fild
cmp
dec
test
lock
cli
aaa
mov
or
jbe
imul
call
jp
ret
jae
pop
into
add
add
mov
add
dec
jl
and
repnz
jno
mov
mov
icebp
movs
lahf
rcl
jp
jo
cmp
sbb
sbb
pop
clc
das
push
mov
imul
push
dec
cmp
adc
(bad)
push
daa
icebp
add
mov
lahf
add
cmp
sbb
inc
sti
imul
cmp
repnz
dec
lahf
fwait
cs
xor
cli
dec
sar
jmp
push
outs
sar
mov
leave
int
fidivr
sbb
mov
mov
jbe
(bad)
mov
push
mov
mov
lock
or
dec
xchg
mov
mov
outs
push
loopne
push
pop
jnp
movups
cmp
cwde
pop
mov
(bad)
mov
jnp
test
jo
cmps
push
bound
mov
(bad)
cli
or
lea
jmp
jle
cmp
and
mov
mov
clc
mov
call
out
and
cmp
push
mov
call
lods
mov
dec
sbb
xchg
or
pop
dec
dec
imul
dec
ins
rcl
jno
jl
fsub
lock
(bad)
push
das
ja
adc
sub
or
mov
push
mov
mov
or
push
inc
fidivr
cmp
(bad)
pop
ja
cmp
pop
push
jecxz
clc
push
push
ja
mov
les
or
push
and
or
(bad)
mov
imul
cmps
push
push
imul
cmps
or
and
lock
pop
mov
jmp
std
(bad)
(bad)
(bad)
fldcw
push
add
xchg
jns
jmp
call
out
or
push
(bad)
outs
xchg
inc
jmp
sbb
and
sbb
(bad)
cmp
pop
loop
inc
push
ror
into
jecxz
dec
sbb
jg
sub
xchg
mov
es
mov
test
mov
sub
sbb
jmp
retf
out
int
and
outs
icebp
(bad)
clc
sub
adc
hlt
mov
mov
sub
icebp
(bad)
push
add
sbb
cmp
mov
clc
xor
outs
std
jmp
lds
in
add
bound
jmp
sbb
(bad)
jmp
xor
imul
mov
shr
(bad)
fisttp
adc
dec
inc
pop
jnp
adc
iret
cmps
shl
pop
mov
sub
in
sbb
lods
mov
push
dec
jge
repnz
(bad)
in
faddp
xchg
pop
sbb
cld
out
mov
imul
jg
outs
push
cmp
ret
mov
dec
es
add
test
call
mov
and
ss
mov
call
xchg
movs
test
nop
xchg
sub
ja
pop
enter
add
push
cmps
(bad)
(bad)
jmp
stc
rol
ins
test
pop
add
and
(bad)
and
xor
(bad)
(bad)
(bad)
inc
fbstp
sbb
push
call
in
cmp
mov
popa
int3
loopne
in
(bad)
call
pusha
sbb
mov
or
inc
mov
mov
push
adc
scas
mov
mov
inc
cs
mov
jno
scas
cmps
inc
repnz
jnp
inc
jmp
(bad)
(bad)
fld
sbb
push
xor
sbb
add
cdq
mov
dec
cmps
loope
jle
lahf
sbb
inc
jne
jle
fst
fidivr
sbb
jmp
(bad)
(bad)
call
and
movs
loope
sub
rcl
sbb
addr16
ja
pop
fidiv
sbb
add
lods
and
or
xchg
imul
ins
ds
jb
loopne
dec
mov
fnstcw
(bad)
or
adc
push
cmp
xor
in
scas
dec
cld
(bad)
(bad)
mov
jmp
out
lods
pusha
adc
out
fwait
add
jns
(bad)
dec
and
mov
adc
gs
shl
add
mov
xchg
jno
stos
inc
call
jmp
rol
pop
retf
sbb
jae
cld
in
(bad)
fst
and
xor
dec
test
stos
adc
data16
(bad)
aad
xchg
in
jmp
mov
cmc
jmp
das
in
adc
call
(bad)
jmp
lods
in
test
loopne
mov
(bad)
jmp
pop
sub
mov
test
inc
mov
movs
(bad)
(bad)
jmp
in
(bad)
sub
popa
test
sub
loopne
sub
out
pop
in
nop
cmps
into
sar
rcr
hlt
cmc
mov
jbe
rol
jmp
inc
pop
pop
(bad)
(bad)
jmp
or
call
mov
sub
xchg
fadd
(bad)
push
add
jno
push
mov
imul
add
jl
test
(bad)
(bad)
inc
mov
mov
jo
icebp
push
fsubr
rol
sub
(bad)
call
ret
mov
sub
movs
and
ror
mov
push
and
icebp
pop
call
test
scas
add
mov
jo
je
(bad)
(bad)
jmp
adc
sbb
(bad)
cmps
push
push
test
mov
imul
jmp
fcmovnb
rcl
cwde
push
add
sub
retf
mov
cmp
nop
cmp
jnp
lods
mov
(bad)
(bad)
mov
mov
fnstsw
sub
sbb
fistp
clc
add
add
pop
aaa
aam
test
inc
(bad)
jmp
enter
jb
jmp
jmp
(bad)
(bad)
(bad)
jg
add
push
sahf
xchg
add
sbb
xchg
or
lods
and
test
and
(bad)
(bad)
jmp
dec
outs
iret
add
jge
or
fcmovnbe
push
int
call
movs
test
mov
mov
leave
jle
inc
js
(bad)
(bad)
jmp
push
dec
add
xlat
push
sbb
outs
cmove
lds
idiv
and
fucomi
push
(bad)
cmp
test
jnp
js
movs
mov
cld
jg
int3
test
push
and
movs
imul
(bad)
xor
js
pop
jmp
cmp
jmp
(bad)
(bad)
cmp
and
jnp
or
jne
(bad)
int3
add
dec
jnp
rcl
jae
push
(bad)
jmp
lea
pushf
(bad)
(bad)
call
dec
ficom
shr
in
mul
in
inc
jne
xor
mov
or
mov
xchg
std
push
mov
sti
rcr
enter
sub
add
push
and
add
sub
(bad)
fsubr
(bad)
inc
aad
dec
or
xor
sti
cmc
sub
push
cld
stos
sub
pop
jns
popf
jns
das
cmc
das
pop
data16
and
jge
ret
lea
push
mov
sub
ins
call
xlat
fmul
push
int3
xor
mov
(bad)
call
enter
jb
or
cdq
pop
dec
shr
adc
js
adc
pop
jmp
lahf
push
push
xchg
outs
jae
pusha
leave
dec
int3
das
adc
push
(bad)
or
leave
not
inc
imul
and
mov
xor
inc
mov
clc
dec
call
add
jbe
push
(bad)
dec
add
add
(bad)
(bad)
call
lods
loopne
or
adc
ins
mov
sbb
mov
dec
and
mov
pushf
fisttp
mov
(bad)
mov
fild
movs
push
cld
(bad)
(bad)
call
add
pop
(bad)
repz
mov
test
mov
nop
shl
dec
scas
jl
(bad)
lds
jno
mov
sar
test
adc
push
std
add
mov
add
loop
rcr
and
popf
gs
adc
mov
inc
(bad)
call
pop
test
pop
fistp
jbe
ins
adc
or
(bad)
or
rol
icebp
imul
jmp
hlt
jg
sub
sti
pop
cdq
adc
pusha
scas
mov
xor
push
ficomp
push
(bad)
call
rol
inc
clc
cmp
mov
xlat
push
in
into
(bad)
jmp
(bad)
fcomp
xchg
dec
jbe
loop
sbb
adc
xlat
add
shl
mov
push
loop
aas
les
lahf
(bad)
(bad)
(bad)
jg
les
push
mov
ins
loope
clc
pop
(bad)
in
dec
add
fs
ss
lock
fst
push
clc
cmp
jne
sbb
and
inc
xorps
and
imul
sar
inc
inc
es
rol
push
add
enter
std
call
pop
inc
add
daa
popf
cld
mov
lds
mov
call
ret
(bad)
jge
and
rol
outs
cld
pop
(bad)
(bad)
(bad)
(bad)
mov
mov
dec
jne
add
movs
fsubr
push
or
nop
push
rol
(bad)
(bad)
(bad)
js
jae
mov
shl
cld
out
push
lock
mov
(bad)
jg
xor
push
or
jg
or
adc
call
push
ins
mov
push
sbb
pop
pop
xor
jg
movs
cmps
ins
push
lods
cmp
push
sub
div
jp
adc
call
call
adc
jge
dec
add
pop
je
inc
call
outs
jmp
dec
es
(bad)
stc
rol
xchg
adc
mov
iret
inc
pop
xchg
or
jle
(bad)
(bad)
(bad)
inc
pop
mov
dec
or
cmp
add
and
xlat
mov
pop
or
ins
xchg
hlt
(bad)
(bad)
jmp
aaa
xor
jo
pop
aam
and
in
mov
xchg
sub
mov
push
push
or
fisttp
push
or
add
les
sub
mov
cmp
mov
(bad)
mov
lods
sbb
imul
pushf
rcl
pop
add
push
add
(bad)
push
div
inc
lock
daa
call
gs
(bad)
(bad)
call
mov
cmc
dec
dec
xchg
mov
in
shl
fcom
dec
push
and
jmp
fsub
dec
retf
or
mov
cmps
popa
fnstsw
cmp
(bad)
jg
test
js
mov
clc
pop
dec
mov
call
(bad)
mov
add
mov
rol
xor
hlt
sbb
sub
loopne
(bad)
call
inc
inc
hlt
sar
call
jne
lea
(bad)
fild
mov
movs
dec
adc
sbb
sti
sbb
ret
(bad)
jg
xchg
gs
daa
aam
dec
and
sub
in
add
mov
push
jo
call
pop
out
adc
sar
cmp
std
pusha
icebp
cwde
sbb
call
push
or
fdiv
jbe
sub
mov
add
adc
out
iret
sbb
jg
and
jl
lods
push
jge
mov
rcl
push
mov
in
and
jle
mov
xor
add
push
ror
xchg
dec
(bad)
(bad)
jmp
ficomp
or
neg
xchg
mov
call
mov
push
add
sar
fisub
sar
adc
mov
sub
(bad)
ins
ins
(bad)
mov
mov
inc
inc
sti
jg
adc
icebp
push
jecxz
fst
push
in
cmc
das
ins
mov
push
xchg
xchg
hlt
fmulp
ins
push
dec
test
pop
xor
clc
add
(bad)
(bad)
ret
es
shld
inc
scas
dec
loope
(bad)
shl
or
sub
pop
and
sub
jno
ins
pop
pop
outs
cmp
push
pop
test
(bad)
jg
mov
add
pop
ficomp
cmp
aas
mov
(bad)
(bad)
inc
es
cmp
adc
jnp
std
in
lahf
push
and
sahf
inc
dec
or
shl
inc
fnstenv
push
fmul
mov
cmp
push
lock
and
sub
cmp
xor
sti
jl
dec
std
pop
cmps
lahf
adc
mov
leave
and
(bad)
xlat
inc
mov
(bad)
(bad)
(bad)
dec
pop
rol
adc
sub
in
js
inc
cmp
mov
add
pop
cli
mul
fstp
inc
inc
push
sub
pop
jge
pusha
mov
or
jno
test
fwait
cmp
inc
mov
jmp
std
dec
mov
stos
sub
repnz
cdq
es
int
retf
cmp
jnp
call
adc
(bad)
les
push
inc
push
jne
bound
sbb
mov
dec
or
call
add
jbe
inc
or
add
jne
imul
(bad)
(bad)
fistp
mov
sub
push
leave
nop
sbb
pushf
mov
add
pop
dec
pop
mov
push
fiadd
(bad)
pushf
pop
je
and
(bad)
(bad)
dec
pop
pop
or
or
out
test
mov
or
nop
sub
sbb
(bad)
(bad)
(bad)
(bad)
mov
ins
nop
add
and
mov
sbb
shl
aaa
retf
push
div
shr
inc
sar
jnp
and
xchg
(bad)
ret
xchg
mov
std
aaa
cli
push
push
ins
sbb
std
fs
add
jns
or
sar
(bad)
(bad)
inc
pop
inc
rcr
push
pop
inc
inc
ror
xchg
daa
data16
xchg
scas
enter
ja
sub
push
aaa
mov
(bad)
call
test
outs
sbb
and
ret
(bad)
(bad)
(bad)
jmp
clc
and
test
call
mov
icebp
je
add
mov
pop
call
fild
loopne
inc
js
mov
jg
loopne
addr16
sub
cld
push
das
icebp
imul
mov
(bad)
idiv
jmp
xor
gs
mov
fwait
shr
push
jmp
xlat
or
lock
and
xchg
daa
(bad)
movs
mov
adc
inc
(bad)
(bad)
(bad)
call
in
cmp
or
jbe
out
and
adc
clc
(bad)
(bad)
call
popa
pusha
add
add
and
mov
inc
inc
enter
aam
sub
or
mov
jmp
cld
movs
bound
and
int3
dec
imul
imul
jecxz
stos
cmps
mov
sbb
mov
(bad)
inc
int
mov
or
adc
xor
int3
cmp
or
sbb
pop
fnstcw
add
shl
cmc
(bad)
jns
(bad)
shr
pushaw
jge
xchg
sub
stos
cmp
sub
pop
fs
pop
push
or
add
push
mov
mov
dec
dec
adc
retf
je
mov
pop
bnd
pop
mov
das
hlt
(bad)
jmp
das
xor
popf
popa
or
pop
or
push
(bad)
(bad)
(bad)
jmp
in
push
push
lods
addr16
dec
enter
cmp
dec
xchg
mov
or
pop
into
xchg
arpl
imul
mov
rol
out
or
in
jno
inc
sahf
(bad)
cmp
xchg
cli
dec
fsubr
adc
sar
(bad)
(bad)
jmp
cmp
dec
cmp
pop
add
jno
add
and
jg
mov
inc
call
sbb
sbb
mov
hlt
sub
or
mov
mov
push
lds
lock
dec
xor
push
push
add
or
shl
mov
cli
call
cmp
add
xchg
add
or
je
or
add
(bad)
fistp
(bad)
mov
fwait
adc
test
add
lock
jg
or
pop
mov
jo
lea
mov
fidiv
xchg
add
push
mov
into
jecxz
outs
je
ds
adc
cmp
sti
mov
aaa
dec
cld
fucomip
sbb
fcomp
or
dec
xor
jb
clc
(bad)
(bad)
fistp
push
push
mov
cs
sbb
nop
retf
fild
cli
call
ffreep
mov
sbb
pop
retf
inc
and
fist
mov
xchg
add
ret
rol
or
dec
cli
(bad)
(bad)
jmp
cmc
into
push
jp
push
mov
or
pop
sub
pop
daa
mov
bound
addr16
mov
(bad)
(bad)
mov
and
mov
sbb
(bad)
(bad)
jmp
push
and
mov
mov
imul
cmps
call
jge
sub
lea
call
test
pop
adc
adc
mov
cmp
(bad)
add
in
das
sar
call
ret
cmc
ins
(bad)
rcl
icebp
adc
daa
lds
push
popf
mov
aad
(bad)
call
or
jne
add
push
sbb
arpl
(bad)
jmp
fmul
and
outs
mov
ret
mov
popf
jae
add
nop
test
jmp
(bad)
jns
add
xchg
inc
and
push
add
js
adc
dec
cmp
enter
add
popa
test
adc
lock
push
imul
je
jmp
dec
inc
sub
ss
mov
pop
clc
dec
in
aas
mov
cdq
xchg
or
adc
je
lods
xchg
cli
jg
adc
or
pop
fs
and
and
outs
push
adc
inc
cmp
jle
sub
and
(bad)
push
jg
or
mov
inc
add
xchg
fstp
xor
(bad)
test
loopne
inc
or
pop
and
inc
cwde
jnp
call
call
or
push
call
adc
outs
movs
jge
jg
jb
ror
and
or
call
(bad)
(bad)
dec
jl
imul
cld
ffree
or
or
mov
mov
dec
sub
push
adc
pushf
sbb
js
and
hlt
jecxz
lahf
jns
lock
pusha
dec
push
stc
outs
imul
outs
in
mov
pushf
push
pusha
cmp
das
nop
or
mov
cld
(bad)
inc
fistp
or
in
je
or
xchg
push
and
inc
test
outs
add
and
jns
outs
fsubr
dec
std
(bad)
(bad)
fnsetpm(287
add
pop
pusha
pushf
xchg
test
hlt
pop
push
xchg
push
inc
int
fdiv
mov
xlat
out
idiv
pop
ins
inc
cwde
xchg
das
arpl
jmp
xor
je
push
(bad)
call
std
jp
mov
cmp
retf
clc
sbb
adc
aad
ret
aaa
stos
(bad)
jg
repnz
pop
dec
cld
mov
jmp
fdivr
(bad)
(bad)
jg
and
and
fild
adc
add
adc
adc
xchg
or
jmp
hlt
xchg
test
and
xor
lods
scas
xchg
popa
imul
pop
aaa
pop
mov
jnp
and
ret
repz
int
das
hlt
(bad)
push
in
jo
dec
mov
sub
test
nop
sub
mul
sbb
or
outs
icebp
pusha
and
popa
neg
pop
retf
movs
dec
and
inc
xor
add
ret
pop
pop
push
shl
mov
sub
cmps
(bad)
(bad)
dec
sub
cdq
ret
ss
pop
mov
cld
add
push
sbb
and
hlt
ffreep
scas
es
add
aam
or
call
cmp
mov
retf
enter
(bad)
(bad)
call
scas
outs
fcom
sbb
cmp
dec
sbb
sbb
jge
xor
adc
sbb
(bad)
push
repnz
cld
adc
xor
adc
or
(bad)
(bad)
in
adc
add
ins
jmp
xchg
repz
dec
cdq
das
mov
(bad)
cs
pop
cli
push
jb
ja
or
xchg
jp
adc
push
push
mov
pusha
psrlw
call
sbb
cld
adc
stos
dec
or
add
xchg
mov
movs
mov
fild
push
pop
or
out
adc
sbb
(bad)
(bad)
call
movs
mov
stos
push
xchg
test
jle
test
mov
push
daa
push
enter
jmp
outs
adc
(bad)
fistp
dec
inc
add
mov
cmp
push
movs
cdq
into
xor
push
sub
pop
mov
jmp
aas
or
mov
pop
imul
rol
and
out
mov
sub
not
dec
inc
hlt
adc
ja
rcr
mov
lock
cmp
aad
cmp
push
inc
cld
call
aas
jp
movs
push
sub
inc
ss
(bad)
(bad)
(bad)
cmp
fisttp
adc
xor
sbb
icebp
dec
and
push
jg
nop
imul
imul
mov
(bad)
(bad)
call
and
jo
push
fmul
xchg
ret
cdq
cmp
jl
xchg
hlt
(bad)
(bad)
mov
je
sar
je
or
adc
cmc
outs
inc
and
call
fsub
push
mov
(bad)
jmp
popa
jne
nop
adc
cmps
xor
jne
sbb
(bad)
jmp
add
mov
adc
push
push
pop
add
lock
jmp
call
xor
mov
xor
mov
shr
and
neg
pop
pop
fst
push
js
sbb
(bad)
retf
pop
les
adc
xchg
push
inc
cmp
sbb
push
enter
les
jb
call
test
or
sar
adc
push
push
inc
inc
or
xchg
pushf
ins
in
rcr
mov
(bad)
and
lea
enter
iret
push
mov
mov
cmp
outs
dec
sub
inc
aam
imul
mov
clc
outs
lock
push
in
push
push
das
mov
(bad)
sar
call
dec
dec
or
mov
int3
pop
int3
mov
sbb
(bad)
jmp
mov
jbe
sbb
add
cmp
xor
jbe
or
add
scas
dec
int3
in
mov
inc
rcl
and
dec
in
dec
mov
mov
adc
stos
iret
sub
mov
ror
cld
dec
enter
inc
pop
js
pop
stos
es
xchg
rol
imul
mov
adc
dec
add
mov
jg
pop
scas
push
cmps
mov
lahf
dec
mov
xchg
cli
(bad)
(bad)
fiadd
outs
ror
pop
movs
mov
clc
stc
hlt
jg
mov
in
je
dec
xchg
push
xor
rcr
lods
and
bound
das
(bad)
(bad)
(bad)
dec
mov
xor
enter
cs
adc
retf
jb
mov
dec
ss
mov
sbb
sbb
adc
stos
test
aam
and
or
das
cld
jmp
aad
pushf
and
int3
jmp
ins
inc
stos
jp
rcr
jb
out
ret
mov
dec
test
movs
adc
pushf
push
cli
inc
cmp
cli
mov
adc
shl
movs
ret
cdq
test
rcr
mov
psubusb
cmp
and
xchg
out
jae
sub
(bad)
(bad)
(bad)
dec
and
and
or
dec
mov
fisub
sub
adc
jmp
pop
mov
test
js
inc
cmps
movs
fcmovnb
pop
add
fmul
mov
pop
call
dec
pop
xchg
sar
(bad)
inc
(bad)
mov
not
ss
mov
(bad)
adc
outs
aad
enter
jno
jmp
clc
das
cmc
movs
pop
push
rcl
rcl
jmp
xchg
clc
push
mov
and
clc
inc
or
push
(bad)
mov
scas
(bad)
(bad)
jg
sub
adc
pop
cmp
in
xchg
inc
cmc
fcomp
xchg
xchg
ja
ror
call
(bad)
fs
fisubr
xor
lods
(bad)
outs
hlt
loopne
inc
push
jnp
(bad)
inc
adc
(bad)
(bad)
jmp
push
add
aam
outs
imul
cmp
pop
jmp
in
mov
mov
mov
xor
ficomp
sub
inc
sub
pop
les
add
popf
push
out
add
hlt
neg
(bad)
call
xchg
test
ror
cmps
mov
fsubr
mov
mov
pop
xchg
es
mov
mov
and
loop
lods
adc
add
aam
test
shl
fild
test
pusha
adc
jb
mov
cmps
(bad)
(bad)
in
mov
add
loopne
into
ins
loope
mov
iret
sub
call
(bad)
(bad)
cmp
leave
fmul
add
mov
adc
outs
jmp
ds
inc
repnz
(bad)
(bad)
push
push
iret
sbb
rol
jmp
popa
xchg
push
cmp
dec
cld
add
sub
pop
stc
(bad)
cli
aaa
cmc
js
js
call
pop
push
pop
ret
sbb
xor
inc
jmp
in
push
add
xchg
enter
sub
cmp
xchg
cli
add
ror
in
ror
lock
sub
inc
xchg
fwait
rep
adc
sbb
dec
dec
add
pop
jle
pop
xchg
jg
fmul
movs
cmc
push
cmp
add
or
mov
lock
mul
(bad)
pop
jmp
sub
addr16
mov
lea
jnp
cmp
mov
je
aas
loope
sbb
push
data16
mov
add
add
jmp
stos
sbb
call
adc
inc
pop
mov
push
into
jmp
cli
(bad)
(bad)
jmp
push
adc
push
jmp
mov
xchg
pop
je
repnz
sar
xchg
jmp
cmc
mov
mov
mov
call
adc
push
jmp
dec
push
outs
or
fcom
or
push
imul
jmp
imul
inc
and
adc
nop
mov
(bad)
sbb
enter
add
mov
es
movs
(bad)
(bad)
inc
add
push
loope
lods
cmp
ins
adc
xchg
je
push
pop
(bad)
(bad)
or
rcl
stos
push
out
xchg
loop
jmp
mov
push
or
mov
or
sbb
loope
jmp
(bad)
push
loopne
mov
movs
cmps
sbb
mov
add
das
sub
and
cdq
pop
jl
je
idiv
jmp
mov
jl
add
sub
mov
(bad)
call
and
inc
test
pop
cmc
call
jp
and
sbb
pop
push
mov
cmps
inc
or
call
outs
xchg
jg
pushf
or
clc
mov
or
inc
mov
ud2
dec
pop
push
and
adc
das
jmp
or
inc
inc
loope
(bad)
dec
xor
(bad)
adc
jne
xchg
gs
pop
fs
cmp
or
test
mov
(bad)
mov
mov
push
xchg
cmp
push
loopne
sbb
loope
retf
mov
(bad)
mov
add
enter
inc
hlt
jne
jge
cmp
sbb
pop
fild
or
scas
lea
xor
add
cmp
jle
and
pop
or
cmc
inc
and
retf
in
add
push
cmp
in
dec
daa
mov
(bad)
adc
call
clc
mov
sub
(bad)
lahf
or
call
loope
je
lock
aas
sbb
pop
mov
xor
test
es
in
and
(bad)
(bad)
(bad)
jmp
mov
jbe
push
xchg
mov
idiv
mov
or
ret
mov
cld
inc
and
pop
or
(bad)
call
sar
push
call
cmp
ds
(bad)
dec
push
rcl
pop
es
push
sbb
cmp
pushf
push
push
inc
sahf
cmps
adc
pop
std
add
and
jmp
nop
ins
push
inc
pop
or
push
jne
fdivr
pop
pop
add
(bad)
inc
ret
sub
push
test
push
cmp
xor
mov
lahf
jge
push
and
xor
call
cli
adc
mov
mov
mov
(bad)
(bad)
jmp
push
push
in
and
daa
ret
xchg
push
push
out
es
jg
push
add
movs
test
mov
call
push
cld
int
and
jb
cmp
mov
pop
(bad)
(bad)
(bad)
push
cld
xchg
mov
add
loope
dec
cwde
adc
mov
or
sub
or
lods
test
mov
cmp
imul
cmp
adc
int
and
mov
fnstsw
aaa
add
data16
in
je
jno
leave
lahf
push
inc
es
xchg
ins
xor
fst
add
outs
push
fbld
dec
std
jg
ss
outs
shr
add
adc
ja
pop
mov
or
inc
dec
das
js
iret
or
(bad)
jmp
adc
mov
shl
and
sbb
and
pop
pop
scas
pop
loopne
(bad)
call
daa
add
iret
out
push
pop
cwde
cdq
je
dec
cmp
icebp
or
inc
pop
push
retf
add
inc
lea
(bad)
fild
aam
sbb
mov
jns
in
pop
pop
pop
mov
call
(bad)
inc
pop
cld
mov
aaa
jo
or
in
xchg
push
xor
and
(bad)
out
mov
jge
int3
dec
mov
mov
xor
dec
arpl
cmp
