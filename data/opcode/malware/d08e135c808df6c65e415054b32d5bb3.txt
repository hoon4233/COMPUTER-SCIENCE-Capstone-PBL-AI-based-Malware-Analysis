out
xchg
sbb
sahf
push
pop
xor
push
cs
push
add
push
push
loop
fist
icebp
mov
or
bound
pop
pop
push
and
xor
push
ds
(bad)
push
push
(bad)
fadd
cmp
mov
test
adc
and
stos
dec
xlat
push
test
sbb
push
pop
push
mov
in
xor
pop
mov
mov
push
pop
mov
pop
add
mov
mov
enter
movs
inc
xlat
mov
pop
ins
or
addr16
mov
(bad)
add
gs
pop
ds
adc
push
xchg
sbb
push
dec
retf
push
lods
jb
push
pop
xor
pop
fisttp
call
into
jl
call
adc
mov
xlat
aam
int
shl
xor
push
xlat
ds
push
cs
mov
xlat
pop
iret
fcomp
ficom
xor
jo
fmul
ficom
push
pop
adc
stc
or
adc
jecxz
fist
mov
(bad)
outs
push
pop
adc
addr16
pop
adc
call
add
or
outs
rcr
inc
imul
outs
mov
cmc
test
int
xchg
pop
mov
aaa
xchg
movs
int
aam
cmp
sub
fcmovnu
shl
test
mov
push
pop
sub
jmp
mov
and
sub
cmp
pop
and
cmps
and
xor
sbb
repnz
push
push
xor
push
xor
aaa
or
xor
aam
cmp
xchg
das
adc
xchg
sbb
xlat
push
pop
xor
push
pop
mov
pop
push
repnz
push
loop
fist
fprem
aam
int
jge
int
inc
call
push
fdecstp
xlat
test
and
adc
pop
xor
mov
push
pop
xor
mov
jbe
popf
push
pop
inc
fsubr
pop
xor
push
mov
jle
call
psrad
fist
(bad)
xor
xor
push
pop
addr16
mov
int
dec
call
push
or
jb
xor
push
(bad)
iret
add
gs
xor
push
pop
pop
jle
fmul
pop
pop
fistp
sbb
mov
call
push
mov
mov
jg
jo
test
push
pop
adc
call
adc
pop
xor
add
ficom
into
(bad)
mov
xchg
icebp
mov
push
cdq
xor
sbb
aaa
shl
xor
add
gs
mov
xchg
xchg
push
pop
pop
fistp
pop
pop
fistp
pop
xor
xlat
xor
jg
pop
fisubr
sub
ror
imul
movs
inc
(bad)
fldcw
mov
xor
xchg
push
pop
mov
and
or
cvtps2pi
pop
mov
or
xor
pop
xor
mov
call
pop
daa
in
int
mov
fdecstp
shr
int
push
cs
out
xchg
sbb
sti
(bad)
lods
mov
sbb
xchg
in
int
fwait
imul
pop
loop
rcl
cmp
ffreep
ins
test
add
push
xchg
btc
aam
and
mov
mov
call
cmc
push
adc
bound
pop
pop
pop
fistp
das
and
push
fimul
pop
xor
push
les
push
movs
inc
(bad)
test
and
inc
pop
fild
cmps
fidivr
pop
xor
movs
inc
and
push
les
dec
(bad)
push
das
xor
fistp
mov
out
xchg
sbb
sahf
cdq
addr16
mov
fs
movs
sub
out
scas
shl
push
adc
xor
cmp
movs
inc
xlat
mov
shl
(bad)
mov
mov
and
inc
int
inc
movs
inc
ret
cmp
movs
inc
and
shl
and
cmps
fcmovu
sub
(bad)
mov
mov
out
xchg
sbb
(bad)
popf
add
sbb
or
push
and
call
ja
outs
adc
fild
pop
mov
mov
pop
fnstenv
scas
shl
not
pop
dec
sbb
push
mov
push
add
popa
push
pop
cmp
mov
jno
cmps
fsqrt
and
fimul
ficom
retf
out
das
and
adc
ja
and
call
xor
mov
stos
mov
cs
int
xlat
xor
and
int
stos
shl
ficomp
mov
push
pop
inc
outs
pop
into
rcl
and
and
pop
(bad)
fcomp
retf
imul
add
icebp
mov
mov
xor
inc
sub
gs
and
call
(bad)
pop
jmp
sbb
push
(bad)
pop
jmp
fwait
mov
test
mov
push
pop
inc
outs
pushf
inc
(bad)
xchg
fbstp
fild
rol
xor
ror
mul
dec
or
pop
xor
test
jne
sub
fiadd
mov
sbb
pop
xor
test
xor
pop
xor
test
xor
(bad)
jae
push
xchg
add
addr16
mov
popa
mov
shr
nop
pop
into
mov
push
and
mov
mov
mov
movs
push
pop
mov
xchg
xor
lods
fcomp
lods
pop
repz
jae
push
xchg
mov
push
inc
ins
je
mov
in
adc
mov
xlat
xchg
pop
sub
or
push
xchg
btc
push
or
pop
sbb
cmps
fwait
mov
dec
mov
stos
mov
fist
les
mov
movs
push
pop
mov
xchg
xor
lods
fcomp
lods
pop
repz
jae
push
xchg
mov
push
inc
ins
je
mov
in
push
and
popf
push
shl
xchg
pop
sub
(bad)
das
into
lea
xor
add
xlat
mov
gs
and
add
and
pop
into
sub
push
and
popf
push
rol
xor
shl
pop
in
out
mov
ds
dec
and
xchg
aaa
out
xchg
sbb
into
adc
mov
ficomp
into
out
xchg
add
addr16
mov
bound
in
loope
jno
daa
jle
mov
sbb
xor
and
into
push
or
mov
fadd
popf
push
or
mov
fadd
into
pushf
add
fcmovb
test
jle
shr
cmp
aad
adc
imul
add
gs
or
pusha
pop
dec
add
push
nop
movs
inc
xlat
mov
shl
mov
xor
mov
inc
xor
add
int
pop
xor
mov
mov
test
cwde
sbb
fist
stos
ins
or
popa
mov
rol
call
ror
fisubr
mov
test
popf
push
or
push
adc
test
add
mov
sbb
pop
int
fadd
mov
iret
lods
push
pop
ins
or
mov
dec
or
das
cmp
sbb
cmps
(bad)
lods
inc
mov
mov
push
ror
imul
pop
xor
push
pop
mov
out
sbb
aaa
lock
(bad)
cdq
mov
push
sub
fbld
cmp
(bad)
repnz
adc
fs
test
pop
(bad)
pop
ret
sub
push
shl
out
xchg
push
jmp
call
ret
pop
bound
fcomp
fmul
retf
inc
pop
xor
push
shl
pop
mov
imul
mov
pop
ficomp
(bad)
(bad)
xchg
das
aaa
out
xchg
sbb
rcr
mov
fs
push
movs
int
push
imul
or
sti
sbb
rcl
addr16
xor
mov
or
jno
pop
jge
jmp
(bad)
popf
push
movs
int
push
cs
popf
push
pop
xchg
mov
adc
pop
lea
(bad)
pop
ds
sahf
jo
fiadd
mov
retf
jmp
sub
retf
jmp
add
add
cli
retf
jmp
jmp
movs
int
xchg
fcmovnb
mov
pop
xor
fcmovu
shl
test
push
fisubr
pop
xor
adc
movs
int3
and
mov
and
movs
mov
pop
addr16
push
pop
inc
rcl
jg
ins
adc
pop
xor
fiadd
mov
call
or
add
call
mov
push
pop
xor
xor
shr
fist
push
daa
push
fisttp
pop
xchg
sbb
and
shr
out
(bad)
shl
and
neg
outs
pop
mov
adc
jg
sbb
sahf
jo
ficomp
retf
imul
xchg
fcmovnu
leave
pop
xor
push
pop
imul
xor
mov
movs
int3
and
cdq
push
sbb
mov
retf
mov
pop
xchg
sbb
push
adc
mov
inc
rcl
push
pop
xor
movs
(bad)
mov
fild
ror
call
xor
xchg
das
push
mov
jmp
rcr
ror
and
xor
push
pop
mov
sub
int
xchg
(bad)
push
das
add
and
sbb
(bad)
fsub
dec
ret
pop
xor
ficomp
into
pop
mov
push
repnz
inc
popf
aaa
pop
xchg
sbb
and
push
or
movs
int3
and
data16
into
add
(bad)
scas
ins
adc
sti
scas
ins
adc
movs
xlat
test
retf
lods
rcl
mov
and
scas
or
test
int
jb
sbb
fidivr
fs
pop
jb
outs
ror
fisubr
rol
push
and
xor
mov
ja
ficomp
push
out
push
push
mov
push
pop
xor
mov
and
fist
mov
fist
aad
adc
mov
pop
scas
dec
inc
mov
adc
jecxz
cs
bound
ss
xor
mov
mov
call
inc
fist
not
fisub
hlt
(bad)
call
scas
sub
push
mov
stos
pop
mov
call
xor
adc
sbb
xor
ror
out
scas
shl
pop
xor
adc
bound
fist
jmp
stos
push
mov
push
adc
(bad)
or
push
fst
push
fcomi
mov
pop
xor
imul
sar
and
(bad)
push
and
and
out
(bad)
sbb
aaa
test
xor
mov
ror
sub
popf
pop
fistp
pop
pop
fistp
pop
xor
pop
xor
jno
pop
fcmovb
and
scas
pop
fnstsw
mov
lods
push
pop
mov
pop
lahf
movs
jb
imul
scas
shl
mov
xlat
jg
push
or
stos
pop
movs
inc
sub
loop
not
lds
ficomp
ficom
mov
call
rcr
or
fist
inc
sub
add
addr16
mov
scas
fist
fcmovb
daa
pop
xor
add
pop
xchg
inc
aaa
fist
jmp
cmps
int
test
pop
shl
xor
(bad)
(bad)
and
movs
int3
and
mov
and
movs
imul
push
mov
pop
pop
xor
push
xor
mov
movs
int3
and
cdq
mov
or
pop
(bad)
and
aaa
or
xor
(bad)
(bad)
and
sahf
int
test
ficom
lods
movs
int
xchg
push
mov
retf
jmp
std
pop
xchg
mov
jmp
movs
int
xchg
xlat
mov
test
int
test
popf
push
or
push
adc
mov
ins
pop
xor
fcmovu
out
and
test
shl
test
movs
es
pop
xor
ficomp
into
(bad)
xchg
push
mov
pop
pop
xor
sbb
push
xlat
mov
test
int
test
popf
push
or
push
adc
inc
xlat
push
pop
pop
(bad)
out
xor
loop
int
test
aad
test
mov
pop
shl
cwde
fsubp
retf
movs
mov
sbb
(bad)
and
sbb
pop
movs
cmp
fist
mov
test
int
test
popf
push
or
push
adc
pop
xlat
push
pop
push
pop
jmp
pop
mov
out
and
push
cmp
push
xor
mov
test
iret
and
lods
int
aam
ds
nop
cmp
(bad)
std
movs
int3
and
mov
lea
cmp
and
pop
cmp
fistp
mov
test
int
pop
xlat
mov
test
int
aas
or
lods
push
pop
mov
pop
push
test
movs
int3
and
sbb
(bad)
call
or
fbld
movs
int3
and
cdq
mov
daa
sahf
jo
push
push
mov
push
pop
xor
adc
sbb
aaa
popa
lods
int
aam
ds
movs
xor
and
fidivr
mov
(bad)
and
inc
les
test
not
push
int
push
cmp
shl
int
test
xor
push
shr
fimul
xor
sub
out
xor
mov
sahf
ds
movs
xor
and
fidivr
mov
(bad)
and
mov
and
movs
int
push
cmp
shl
int
test
xor
push
xor
mov
test
fistp
or
sub
addr16
push
pop
inc
clc
cmp
sbb
push
jmp
push
mov
push
mov
pop
xor
test
int
push
pop
xor
adc
sbb
aaa
cmp
sahf
ds
movs
xor
and
fidivr
mov
(bad)
and
pop
(bad)
and
movs
int
push
cmp
shl
int
test
xor
push
fcmovnb
pushf
xor
mov
xor
(bad)
out
xor
jne
int
aam
ds
movs
xor
and
pop
sti
movs
int3
and
xor
cmp
sbb
mov
jmp
test
not
push
int
push
cmp
shl
int
test
xor
push
xor
mov
test
fistp
or
sub
addr16
push
pop
inc
fwait
cmp
sbb
push
jmp
mov
push
mov
pop
xor
int3
test
(bad)
out
and
scas
int
aam
ds
movs
xor
and
pop
sti
movs
int3
and
xor
out
inc
sbb
push
lods
rcl
cli
int
test
icebp
pop
repnz
test
pop
fidivr
faddp
popf
push
xor
push
pop
fidivr
push
mov
pop
xor
daa
test
fistp
or
sub
addr16
push
pop
inc
aad
fistp
fist
mov
sbb
aam
sahf
and
pushf
aaa
stos
xchg
sbb
(bad)
(bad)
and
mov
and
push
neg
out
xor
jo
(bad)
mov
fst
hlt
pop
stos
movs
int3
and
sbb
push
pop
mov
sbb
xor
ficomp
int3
and
shl
(bad)
fsub
mov
shl
pop
call
fcmovu
mov
test
or
test
mov
push
adc
xor
pop
call
aam
out
test
jae
push
xchg
fst
(bad)
out
and
in
fist
test
(bad)
mov
sbb
popf
mov
test
int
push
popf
mov
test
int
push
pop
xor
retf
test
mov
and
shl
(bad)
fsubr
mov
jmp
mov
and
sbb
push
rol
int
test
mov
fist
xor
cmps
cmp
pop
fbstp
push
pop
mov
and
shl
(bad)
fsub
dec
xchg
(bad)
pop
into
push
(bad)
lods
rcl
ror
and
cmps
xor
rcr
fist
mov
test
int
(bad)
loop
test
movs
gs
pop
into
(bad)
xchg
push
mov
push
pop
xor
retf
fist
adc
shl
mov
and
ror
and
bound
fimul
cmps
xor
rcl
fyl2xp1
pop
pop
xor
mov
mov
and
ror
and
jle
call
xor
push
fcmovnu
lods
jbe
xor
int
test
int
scas
movs
int3
and
or
and
nop
pop
fist
not
aam
fisub
test
pop
xor
cmp
pop
xor
jae
push
xchg
movs
xchg
test
int
shl
pop
mov
shl
fiadd
cmp
pop
xchg
dec
mov
sbb
popf
mov
test
int
push
shl
push
rol
int
test
mov
test
int
(bad)
mov
xor
aad
push
pop
xor
movs
(bad)
mov
and
mov
push
mov
fist
sar
fisub
test
movs
repz
into
push
(bad)
pop
jmp
push
mov
push
pop
xor
int
test
mov
sbb
fistp
mov
test
xchg
and
movs
es
pop
xor
ficomp
into
(bad)
xchg
push
mov
push
pop
xor
dec
aaa
fist
mov
test
int
(bad)
call
movs
gs
pop
into
(bad)
xchg
push
mov
push
pop
xor
int
test
fild
push
pop
xor
push
pop
imul
jmp
cmp
pop
das
movs
int3
and
mov
and
fbstp
pop
fbld
xchg
mov
pop
xor
push
test
int
test
fmulp
fidivr
xor
ror
mov
gs
and
ja
fiadd
mov
stos
pop
cmp
(bad)
(bad)
mov
push
rcl
int
test
pop
inc
movs
sbb
push
rcl
int
test
mov
fist
xor
cmps
mov
ror
pop
call
aam
mov
rcl
push
xor
push
xlat
mov
test
int
cmp
movs
int3
and
fistp
push
outs
movs
gs
ficomp
into
push
(bad)
pop
jmp
push
mov
push
pop
xor
test
xchg
xor
push
(bad)
fistp
repnz
mov
and
movs
xchg
stos
test
and
sahf
cmp
sbb
iret
and
xor
ficomp
iret
and
mov
push
pop
xor
shr
xor
push
shr
out
(bad)
shl
mov
movs
xchg
movs
int
shl
pop
and
int
test
fisubr
pop
xor
mov
and
xchg
int
xlat
xor
and
int3
and
movs
mov
and
shl
push
rcr
and
ss
aam
ds
(bad)
jae
push
xchg
xor
push
shl
pop
xchg
cmps
int
test
fimul
xchg
dec
mov
sbb
out
and
shl
(bad)
fsubr
mov
mov
test
int
sar
int
test
mov
test
int
aad
int3
and
movs
int
fsubr
mov
jmp
movs
int
xchg
shl
(bad)
fsubr
mov
mov
test
int
sar
mov
test
int
aad
into
and
movs
int
and
pop
stos
movs
int3
and
icebp
loop
pop
xor
int
test
mov
pop
jmp
rcr
(bad)
and
movs
xlat
(bad)
cdq
call
movs
int3
and
ds
ror
mov
push
rol
mov
push
rol
mov
push
(bad)
jae
push
xchg
shl
(bad)
fsubr
mov
mov
test
ins
or
pop
and
shl
popf
push
xor
jle
pop
xor
pop
ds
(bad)
mov
mov
or
ja
adc
data16
(bad)
push
test
mov
xor
push
ror
fisub
mov
pop
xor
mov
fdecstp
fstp
(bad)
pop
xchg
sbb
fbld
pop
fst
test
mov
into
and
popf
ja
push
pop
xor
fcomp
rcr
aas
ficomp
adc
mov
sub
daa
jmp
aaa
out
lock
sbb
cmps
int
test
ins
or
xchg
fist
xor
cwde
fild
or
and
scas
imul
nop
xor
fistp
sbb
mov
xor
aaa
mov
xor
ficomp
(bad)
mov
ins
adc
outs
xlat
out
(bad)
jle
outs
sar
sub
fwait
int
das
sahf
jo
fiadd
fist
cli
sub
fwait
add
hlt
inc
popf
sahf
push
stc
or
pop
xchg
xlat
neg
xor
pop
cli
push
xchg
popf
aaa
xor
sbb
fist
xor
push
push
fwait
sahf
push
pop
xor
push
rol
cdq
fstp
lahf
(bad)
sbb
shl
pop
jb
push
pop
cmp
pop
(bad)
mov
and
xor
fcom
xor
push
movs
push
pop
ret
sahf
jo
xlat
push
sub
pop
jb
and
fild
pop
add
xlat
fs
ret
pop
mov
jb
adc
jae
mov
fidivr
xbegin
pop
or
rcr
xor
push
lods
aaa
lahf
(bad)
sbb
fisub
push
xchg
xor
sbb
ficom
popf
sahf
push
mov
and
popf
sahf
push
loop
test
ficomp
ficom
mov
fst
int
outs
cmc
jae
mov
movs
aaa
cmps
xchg
sbb
sub
popf
sahf
push
dec
inc
fsub
fisttp
test
fbld
shl
pop
pop
inc
popf
sahf
push
dec
xchg
lahf
(bad)
sbb
jge
cli
jb
mov
lods
aaa
xbegin
pop
add
mov
fcmovnu
cmp
xor
inc
popf
sahf
push
pop
fcmovnu
test
int
push
inc
popf
sahf
push
push
inc
fsub
(bad)
push
pop
xor
in
fist
aas
xbegin
sbb
outs
push
pop
fild
push
inc
popf
sahf
push
pop
inc
fsub
fisttp
mov
fidivr
xbegin
pop
fidiv
pop
xor
push
pop
mov
push
mov
lods
aaa
xbegin
pop
add
mov
fidivr
xbegin
xchg
add
ficomp
jae
push
pop
xor
mov
movs
aaa
cmps
xchg
sbb
and
popf
sahf
push
fcmovnu
inc
sub
pop
pop
inc
popf
sahf
push
sbb
aad
pop
xor
div
push
pop
or
pop
mov
mov
ja
ficomp
jae
pop
mov
fist
xchg
xor
sbb
pop
xchg
pop
xor
outs
cmc
jae
mov
sti
jbe
push
pop
xor
pop
cli
jb
mov
sti
fidiv
pop
xor
outs
cmc
jae
mov
movs
aaa
cmps
xchg
sbb
pop
push
bound
jge
pop
xor
mov
aaa
out
sbb
fdivr
imul
mov
xor
xlat
push
sub
pop
adc
pop
cli
push
xchg
rol
cdq
fstp
(bad)
out
xor
loope
bound
pop
cmp
sub
mov
pop
and
cmps
pop
adc
pop
xor
push
pop
dec
in
jle
sbb
inc
popf
sahf
push
sbb
loop
pop
dec
sbb
mov
sahf
push
pop
aaa
out
sbb
xor
movs
aaa
out
sbb
push
lahf
imul
xchg
fidivr
xbegin
dec
add
mov
loop
(bad)
push
pop
lds
ficomp
out
push
xchg
movs
aaa
cmps
xchg
sbb
sub
popf
sahf
push
sbb
(bad)
stos
je
push
clc
inc
outs
adc
xchg
mov
scas
out
xor
xchg
pop
xor
fistp
rcl
pop
inc
outs
adc
shl
pop
in
ja
push
xor
push
push
mov
push
pop
xor
test
aaa
xlat
neg
xor
jp
fist
test
push
pop
inc
aam
push
fwait
sahf
push
pop
aaa
xlat
neg
xor
fwait
sahf
push
pop
inc
retf
rcr
add
(bad)
aam
cmp
pop
xor
fimul
push
das
sbb
inc
popf
sahf
push
fimul
sub
fwait
mov
jge
div
pop
in
aaa
cmp
sbb
pop
mov
mov
sub
sub
aaa
xlat
neg
xor
(bad)
mov
fcom
mov
pop
cli
jb
push
mov
push
cmps
sbb
retf
jb
fstp
fild
fwait
sahf
push
movs
aaa
shl
sbb
jle
cli
jb
outs
pop
ds
pop
inc
add
xchg
lds
ficomp
ret
fst
shl
sbb
fistp
daa
shl
sbb
push
push
shl
retf
jo
test
ds
pop
xchg
out
sbb
out
push
xchg
lahf
push
sub
and
neg
(bad)
stc
ss
pop
add
pop
mov
push
lahf
pop
cli
push
xchg
add
push
xchg
or
pusha
and
das
xchg
fisub
int
das
sahf
jo
aas
push
clc
popf
push
mov
mov
aas
dec
clc
popf
push
or
adc
pop
xor
jo
fisub
pop
repz
sbb
mov
stc
and
pop
pop
sahf
popf
sbb
mov
stc
(bad)
jb
pop
pop
nop
popf
sbb
mov
stc
add
pop
mov
sbb
cmp
popf
push
or
pop
ss
xor
jo
or
mov
mov
fs
xchg
push
mov
(bad)
shl
and
neg
adc
or
retf
jo
nop
pop
fcmovb
push
pop
xor
xchg
pop
fist
push
xor
ja
ficomp
ret
scas
jb
push
pop
mov
scas
pop
mov
sbb
aas
into
fild
pop
mov
xchg
cmp
xor
mov
ja
ficomp
cmc
call
jecxz
push
pop
lds
pop
cmps
push
xchg
popf
ja
push
pop
xor
ficomp
adc
mov
aaa
cmps
xchg
sbb
sbb
jmp
cmps
popa
xor
nop
pop
xchg
push
pop
xor
xor
imul
xchg
xlat
dec
arpl
das
loop
push
pop
xor
movs
(bad)
mov
fist
xor
mov
lahf
sahf
push
loop
mov
lds
pop
mov
inc
pop
xor
push
adc
bound
push
xor
and
xor
cli
bound
and
mov
fidivr
movs
aaa
cmps
xchg
sbb
mov
movs
inc
jg
pop
pop
fistp
das
(bad)
aaa
in
cmp
(bad)
sbb
ficomp
pop
mov
das
sahf
jo
ficomp
fimul
adc
lahf
sahf
push
shl
mov
mov
icebp
or
sti
sbb
rcl
pop
mov
push
jnp
imul
(bad)
push
adc
ja
ficomp
into
push
adc
call
retf
scas
xor
test
addr16
pop
fidiv
push
xlat
ja
pop
xlat
ja
pop
movs
inc
daa
cmp
or
test
cmp
inc
push
sahf
push
shl
mov
pop
xor
xor
ja
sahf
cdq
addr16
mov
(bad)
in
pop
or
pop
retf
movs
aaa
cmps
xchg
sbb
and
push
pop
and
pop
mov
mov
xor
or
icebp
mov
mov
fs
das
cmp
int
das
sahf
jo
movs
cmp
and
xor
pusha
pop
mov
pop
xor
pusha
pop
mov
pop
xor
pusha
pop
mov
pop
xor
pusha
pop
mov
pop
xor
rcl
fist
ja
ficomp
xor
fisttp
push
inc
(bad)
hlt
call
cmp
adc
or
push
pop
mov
retf
inc
arpl
rcl
shl
fist
enter
cmp
sbb
aam
xor
loope
and
xchg
das
pop
push
scas
(bad)
fistp
fldcw
xor
push
das
ins
shl
pop
int
xchg
push
mov
popf
push
or
inc
or
shl
bswap
mov
dec
mov
popf
push
or
enter
ficomp
retf
movs
mov
int3
push
pop
enter
sbb
push
pop
retf
pop
mov
iret
ficomp
xor
push
mov
addr16
dec
aaa
ficom
xor
push
test
xlat
data16
or
push
mov
test
fucomi
test
int
push
and
popf
push
fimul
loope
das
push
scas
adc
xchg
fisub
push
fst
jb
scas
(bad)
(bad)
data16
and
daa
aam
ss
pop
xor
aas
cs
jmp
push
mov
pop
imul
shr
fcom
dec
mov
xor
ficomp
ficom
xor
xor
xlat
data16
and
mov
pop
imul
ror
pop
mov
pop
inc
cdq
fisub
test
push
addr16
push
pop
inc
fsubr
xor
push
das
sbb
mov
data16
push
pop
enter
sbb
push
xor
fcomp
and
pop
aaa
fisubr
bswap
push
inc
pop
xor
push
pop
mov
imul
pop
imul
ror
pop
mov
pop
inc
loope
mov
push
fst
add
(bad)
fistp
fldcw
inc
shr
xor
push
cs
fbld
inc
fidiv
or
push
add
mov
and
push
dec
xor
push
pop
jne
test
fist
mov
stos
movs
int
or
sti
sbb
rcl
pop
mov
movs
aaa
cmps
xchg
sbb
push
and
ret
movs
(bad)
xlat
data16
and
pop
test
xor
push
sub
pop
test
xor
push
sub
cdq
fcomp
ds
pushf
inc
pop
mov
fxtract
aad
pop
dec
sbb
dec
repz
ja
jb
cmp
lods
int
push
movs
aaa
cmps
xchg
sbb
shl
pop
sub
fbld
jge
ss
pop
xor
push
mov
push
(bad)
pop
ja
fisttp
push
inc
pop
int
stos
sti
ss
pop
or
jo
ss
sub
adc
push
push
shl
fisubr
mov
pmaxub
(bad)
push
adc
add
ss
pop
mov
push
sub
sub
fisub
mov
push
shl
xchg
pop
add
ficomp
sub
fmul
retf
movs
aaa
cmps
xchg
sbb
pop
lahf
movs
sbb
fimul
sub
push
mov
daa
xchg
pop
fist
addr16
push
pop
popa
mov
addr16
xchg
mov
outs
adc
movs
int
xchg
push
ins
or
mov
pop
add
fild
gs
mov
int
xchg
(bad)
add
add
fild
xor
xlat
sub
and
mov
and
aaa
cmps
xchg
sbb
fcom
out
add
push
test
mov
and
data16
mov
and
bound
and
loope
shl
movs
mov
push
ds
popf
push
pop
inc
fnstsw
frstor
test
cmps
ja
movs
int
popf
push
mov
popf
push
or
xor
xor
in
and
repz
pop
in
cmps
sub
movs
int
popf
inc
mov
popf
push
or
cmp
mov
bound
pop
(bad)
or
xor
in
and
sti
jb
xlat
ffreep
xor
ffreep
xor
fimul
fidiv
push
mov
test
int
shr
cmp
and
data16
push
sbb
fistp
test
push
pop
cmp
and
dec
daa
(bad)
(bad)
sbb
push
ret
and
sbb
pop
jmp
pop
rcr
mov
shl
and
neg
mov
fxch
xchg
mov
xor
pop
pop
mov
and
fsin
aas
pop
and
push
or
das
or
fld
ficom
out
xor
pop
and
push
popa
scas
sub
xlat
mov
mov
push
cmps
xchg
sbb
pop
repnz
and
pop
xor
test
fidiv
test
int
pop
enter
not
ficomp
into
(bad)
xchg
cs
pop
repnz
and
test
and
repz
push
bswap
push
arpl
mov
push
popa
xchg
mov
and
push
jne
test
fist
out
pop
test
xor
push
sub
iret
push
pop
mov
and
xor
(bad)
mov
inc
imul
(bad)
fist
xor
in
and
pop
or
mov
and
outs
and
sahf
jo
test
jmp
pop
xor
pop
pop
xor
pop
in
cmps
sub
movs
int
mov
mov
lahf
push
shl
pop
repnz
frstor
test
mov
and
fcmovnu
xchg
mov
mov
retf
int
fmul
(bad)
xor
shr
push
mov
pop
jg
push
nop
mov
push
movs
mov
mov
scas
frstor
test
fist
test
push
and
popf
push
fimul
fbld
add
call
(bad)
fist
sbb
push
pop
xor
(bad)
in
and
pop
mov
and
fist
dec
iret
test
and
cwde
fcom
mov
mov
in
and
movs
int
push
shl
push
shl
in
and
movs
int
rol
cs
shl
in
and
test
and
shl
out
out
and
sahf
in
and
movs
int
rol
(bad)
cmp
movs
int
and
adc
mov
pusha
push
ret
and
xor
fist
int
sti
test
and
jo
pop
in
cmps
sub
movs
int
mov
mov
and
add
push
lahf
push
push
test
mov
and
dec
adc
pop
mov
and
pop
and
push
or
pop
cvtps2pd
push
shr
in
and
cmp
fist
dec
xlat
push
push
mov
push
pop
xor
frstor
test
test
push
xor
push
cs
rcl
xor
push
mov
ficom
mov
and
dec
aaa
ficom
xor
mov
pop
mov
int
xchg
fist
pop
cli
mov
mov
and
stos
jp
outs
pop
inc
neg
stos
mov
push
fimul
fbld
inc
mov
pop
outs
pop
inc
retf
fisubr
or
and
das
aam
aaa
pop
outs
pop
inc
(bad)
sbb
neg
hlt
test
and
dec
xchg
add
hlt
test
and
test
push
xor
push
das
and
push
outs
xor
push
pop
mov
test
jbe
push
shl
xor
rol
xor
shl
fisubr
shl
cwde
ins
out
add
not
shl
iret
xchg
add
ror
and
addr16
push
pop
xor
push
pop
xor
push
das
sub
imul
push
pop
xor
push
pop
xor
push
das
cmp
addr16
fist
xor
pop
in
mov
mov
xchg
pop
sub
stos
dec
push
test
mov
and
movs
xchg
mov
in
and
movs
mov
pop
fimul
fbld
sbb
and
cmps
sub
pop
mov
push
mov
xor
mov
pop
and
shr
(bad)
sub
pop
xor
xchg
sbb
ss
int
xlat
ffreep
xor
ffreep
xor
fimul
fidiv
push
mov
lods
movs
int
or
sti
sbb
rcl
pop
mov
shr
nop
pop
into
loope
test
xchg
int
pop
hlt
call
pop
cmps
call
fbld
lock
daa
jmp
jecxz
fist
sar
jecxz
(bad)
jecxz
fist
sar
into
push
xchg
jae
push
add
ds
xlat
pop
leave
(bad)
aaa
into
popf
dec
pop
xor
adc
xor
loope
enter
aad
push
fidiv
push
mov
pop
adc
and
(bad)
jnp
fist
jmp
fist
xor
loope
retf
in
dec
jmp
fistp
push
jbe
(bad)
pop
leave
ficomp
jno
push
xor
push
daa
pop
shl
sbb
cli
xchg
pop
xor
aam
jb
push
fidiv
push
shl
ficomp
into
shl
sbb
push
xchg
fnop
fcom
mov
enter
mov
pop
daa
ss
adc
xor
adc
repnz
pop
(bad)
fcom
mov
ja
push
shl
ficomp
into
shl
sbb
cli
xchg
pop
xor
push
xor
push
das
ss
adc
sub
imul
aad
sbb
out
pop
mov
lods
pop
mov
scas
pop
mov
scas
push
cmp
and
dec
mov
daa
ins
push
daa
push
and
lods
pop
(bad)
xlat
pop
retf
daa
retf
mov
ja
ficomp
cli
sub
xchg
mov
and
xor
aam
xor
and
call
ins
or
arpl
and
and
xor
lods
rcl
cmps
mov
fist
pop
fistp
rol
pop
lahf
movs
jb
imul
scas
shl
xor
fimul
loope
das
xor
fistp
dec
xor
sub
push
lods
rcl
mov
imul
out
pop
adc
push
mov
mov
fs
xchg
imul
mov
mov
mov
lds
and
and
push
mov
and
mov
xchg
mov
and
mov
fist
mov
inc
ror
imul
ror
imul
xchg
icebp
mov
mov
jbe
(bad)
mov
mov
cmp
xor
aaa
in
xor
or
icebp
mov
mov
fs
das
push
xchg
dec
ror
imul
xor
fdivr
pop
xor
xlat
movs
inc
xlat
mov
shl
pop
test
daa
fbld
pop
mov
(bad)
mov
clc
push
pop
add
mov
mov
mov
mov
fist
aad
adc
mov
inc
or
mov
shl
fisub
pop
(bad)
daa
fbld
push
mov
das
mov
shl
test
ret
das
into
mov
or
sub
cmps
(bad)
fisub
ficom
add
addr16
mov
popa
mov
in
cli
mov
jge
fistp
pop
xor
push
xor
fist
int
pop
mov
mov
mov
daa
ficomp
ss
xchg
mov
mov
xor
mov
or
push
add
xor
add
push
shl
ficomp
mov
push
pop
inc
ficomp
into
lea
dec
pop
into
(bad)
cmp
sbb
mov
or
xchg
sub
fist
xor
push
pop
ins
or
arpl
inc
dec
pop
push
scas
imul
nop
loop
mov
pop
lds
ficomp
retf
xor
mov
pop
xor
cmp
pop
pop
fist
repnz
push
fiadd
add
fxch
and
pop
add
mov
pop
pop
fild
mov
lea
mov
sbb
or
stos
inc
movs
inc
rol
mov
mov
fs
mov
xor
fisub
add
pop
add
mov
mov
das
cmp
adc
mov
stos
sub
fist
jmp
sbb
stos
imul
push
push
test
imul
mov
pop
xor
adc
pop
xor
mov
fdecstp
iret
sbb
in
rol
pop
sub
add
pop
xchg
push
jno
or
aaa
fcomp
into
push
xchg
imul
add
mov
imul
icebp
adc
shr
stos
fs
test
fistp
fdecstp
xlat
or
push
xchg
btc
push
or
add
outs
xlat
fsubr
sbb
cmps
inc
mov
adc
sub
cmps
mov
and
popa
rcr
pop
imul
mov
shl
pop
or
push
mov
mov
mov
pop
sbb
mov
stos
(bad)
dec
fist
adc
adc
pop
xor
xchg
btc
aam
add
scas
push
addr16
mov
icebp
mov
push
fst
push
fst
push
fst
push
xlat
dec
sub
adc
pop
xor
fcmovnb
pop
and
pop
sub
stos
push
cmp
call
cmp
call
cmp
push
push
test
push
stos
mov
dec
pop
ja
xlat
daa
int
and
mov
pop
mov
sbb
aaa
int
xlat
daa
int
and
test
mov
cmp
pop
in
jbe
cmps
fptan
rcl
pop
sub
aaa
push
loop
rcl
lds
pop
jmp
fimul
push
das
stc
addr16
xor
mov
shl
push
adc
push
pop
in
and
xchg
repnz
pop
xor
loopne
rcl
clc
cwde
xor
ficom
test
adc
ja
pop
in
jb
fmul
cmp
loopne
xor
xchg
mov
pop
(bad)
fisub
fbld
shl
push
adc
push
pop
push
test
adc
xor
(bad)
imul
xchg
add
push
dec
(bad)
retf
out
pop
and
(bad)
sbb
dec
out
sub
adc
mov
(bad)
retf
and
(bad)
retf
(bad)
retf
pop
retf
(bad)
retf
(bad)
retf
pop
retf
(bad)
retf
(bad)
retf
outs
and
(bad)
retf
out
pop
repnz
push
retf
movs
sbb
dec
out
inc
ja
cmp
mov
(bad)
retf
and
dec
(bad)
retf
(bad)
retf
aam
ss
(bad)
retf
(bad)
retf
and
push
dec
(bad)
retf
xor
icebp
mov
(bad)
cmp
xor
(bad)
pop
pop
loope
pop
mov
ffreep
shr
dec
(bad)
retf
pop
pop
mov
xlat
(bad)
retf
inc
retf
(bad)
fyl2x
fcmovnb
retf
pushf
retf
(bad)
fimul
retf
xchg
push
mov
ffreep
retf
lahf
retf
(bad)
cmp
mov
test
and
push
sub
adc
repnz
push
mov
ja
cmp
mov
lahf
push
retf
(bad)
retf
or
mov
daa
push
retf
and
mov
add
xor
and
(bad)
retf
data16
dec
(bad)
retf
ficom
lds
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
jmp
retf
(bad)
retf
push
mov
shr
out
pop
repnz
push
retf
push
retf
and
mov
daa
movs
sbb
dec
fiadd
sbb
(bad)
retf
data16
dec
(bad)
retf
ficom
lds
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
jmp
retf
(bad)
retf
push
mov
shr
ss
(bad)
retf
ins
pop
iret
and
fmulp
add
gs
adc
push
adc
in
jle
sbb
pop
jmp
jae
push
xchg
cmp
call
xor
(bad)
mov
mov
pop
mov
(bad)
mov
add
pop
sub
ja
push
mov
aaa
pusha
or
(bad)
pop
ret
and
xor
push
push
test
xchg
lds
ficomp
lds
ficomp
ja
fstp
jecxz
sub
jecxz
sub
xor
pop
push
test
pop
in
jg
jle
mov
shl
pop
xor
mov
xor
and
call
and
loope
int3
neg
add
push
xor
mov
pop
xor
ficomp
les
push
push
test
pop
pop
ret
pop
(bad)
shl
bswap
fiadd
pop
xor
jae
push
xchg
xor
adc
das
pop
mov
(bad)
push
pop
mov
jae
jmp
cdq
mov
push
cmp
call
or
pop
fdivr
test
ins
or
mov
jnp
fs
int
inc
inc
fcmovnu
add
xor
sbb
xor
in
push
xor
xchg
or
adc
scas
inc
sbb
xchg
shl
fisubr
mov
lahf
xchg
jo
push
das
aas
out
xchg
mov
fst
mov
sbb
pop
ror
sub
int
aam
cmp
push
repnz
jns
fist
test
fmul
outs
call
adc
ror
add
mov
test
(bad)
call
pop
call
fist
ds
shr
fcom
call
pop
mov
nop
push
pop
mov
dec
sti
(bad)
adc
mov
pop
mov
shr
fcom
cmps
mov
fbld
mov
stos
pop
xchg
adc
mov
popf
push
arpl
and
sbb
push
adc
xor
call
fisub
mov
jo
push
pop
out
adc
sub
aaa
adc
out
aaa
push
daa
out
shl
movs
mov
push
mov
cmp
fisub
adc
pop
xor
mov
shl
mov
ror
pop
in
int
xchg
push
test
adc
aas
call
adc
pop
not
adc
adc
(bad)
sahf
ds
xchg
jo
ficomp
(bad)
xor
rol
sub
pushf
mov
push
inc
mov
popf
push
imul
adc
jo
push
pop
loop
adc
sub
jle
xchg
jo
ficomp
ret
shr
fcom
stos
mov
fbld
mov
cmps
pop
xchg
pop
call
popf
push
arpl
and
addr16
adc
mov
cmp
call
popf
push
sar
in
lods
sbb
push
addr16
adc
mov
cmp
call
popf
push
sar
in
daa
fstp
and
mov
inc
cmp
push
(bad)
pop
aaa
pop
call
and
pop
pop
fistp
pop
pop
fist
jb
and
aas
sbb
mov
xor
cmp
or
stos
mov
int
mov
addr16
push
pop
int
mov
ret
xchg
push
pop
popa
aaa
enter
fisubr
out
xchg
imul
or
push
xchg
btc
(bad)
mov
fst
popa
mov
in
xchg
xor
mov
pop
xor
mov
mov
stos
movs
int
xchg
(bad)
cmps
xchg
sbb
jne
pop
xor
movs
ret
popf
push
fcmovnu
pop
jl
xor
int3
pop
xor
in
mov
inc
or
and
jle
mov
pop
nop
sbb
and
stos
mov
fidivr
xor
loope
int
test
push
iret
push
shl
sub
mov
loop
ficomp
cmps
loop
movs
int
xlat
pop
int
fstp
int
pop
sub
sbb
pop
int
test
(bad)
sbb
push
xchg
lods
lock
push
hlt
pop
push
movs
int
fs
mov
test
int
fisubr
mov
and
xor
sub
mov
fcmovbe
sbb
mov
xor
mov
xor
mov
xor
fist
mov
and
mov
xchg
push
pop
mov
and
xchg
pop
mov
xchg
push
pop
mov
sbb
fistp
cmps
int
pop
xor
lds
pop
and
scas
iret
and
pop
int
mov
sar
movs
aaa
cmps
xchg
sbb
mov
xchg
popf
push
xlat
mov
test
int3
jle
push
fcomi
add
shl
pop
add
movs
int3
and
pop
mov
sbb
fild
pop
pop
sbb
sbb
mov
stos
jo
fcmovu
int
test
bound
mov
loop
scas
push
pop
lds
(bad)
fisub
test
mov
cs
sbb
mov
pop
xor
push
xor
push
fdecstp
mov
add
push
xchg
btc
aam
and
in
hlt
cmp
fmul
xor
test
dec
sbb
mov
cmc
pop
xor
bound
cmps
bound
pop
pop
pop
fistp
das
and
push
fisub
sbb
push
xor
mov
shl
push
cmps
fsqrt
and
fimul
ficom
retf
push
adc
pop
fidivr
movs
inc
and
movs
inc
and
fcmovnb
or
xor
add
xlat
mov
sub
cmp
pop
xor
and
pop
pop
pop
xor
inc
movs
inc
iret
test
and
push
(bad)
push
pop
xor
ins
adc
lods
call
sbb
sub
fistp
pop
es
and
push
int
pop
mov
fist
mov
dec
mov
pop
nop
inc
jbe
push
add
xlat
pop
mov
adc
mov
xchg
and
push
lods
aad
adc
outs
int3
push
pop
mov
call
xor
push
xor
mov
xor
and
push
int
pop
mov
xchg
push
pop
cmp
and
pop
mov
movs
inc
retf
test
cs
movs
inc
iret
test
into
aaa
jo
xor
pop
call
mov
call
mov
lods
or
push
lods
aad
adc
jb
sahf
cdq
addr16
mov
fmulp
add
ja
xor
ja
call
ror
fisubr
pop
xor
mov
shl
sbb
mov
(bad)
push
pop
xor
test
cmp
hlt
adc
fistp
inc
(bad)
fldl2t
ficomp
sub
push
movs
inc
iret
test
into
aaa
les
xor
pop
call
cmp
xor
call
xor
ficomp
outs
xchg
push
pop
cmp
sbb
or
je
scas
imul
nop
(bad)
fistp
jae
arpl
pop
xor
push
shl
out
mov
aad
adc
ficomp
and
pop
pop
mov
mov
xor
fist
pop
fistp
cmp
popf
push
mov
xchg
push
pop
xchg
fistp
pop
retf
push
cwde
push
repnz
push
imul
inc
ror
imul
pop
ficomp
push
pop
mov
push
xchg
btc
push
jecxz
xchg
mov
mov
repz
adc
retf
jo
fimul
cmp
sub
fist
icebp
mov
mov
fs
das
cmp
cmc
call
ja
push
sbb
(bad)
test
out
data16
and
daa
jle
bound
pop
jmp
adc
(bad)
sahf
ds
scas
jae
push
add
fist
mov
stos
int3
push
fist
retf
pop
fistp
pop
xor
and
mov
imul
pop
imul
shl
xchg
pop
xor
jno
fbld
mov
jmp
and
sbb
(bad)
popf
mov
out
xchg
shl
pop
movs
inc
ret
xor
pop
movs
inc
iret
mov
shl
ficomp
into
push
(bad)
pop
retf
imul
inc
shl
ficomp
retf
scas
lds
ficomp
into
or
sti
sbb
rcl
pop
mov
shr
nop
pop
ret
je
push
adc
ja
mov
mov
ficom
adc
push
adc
mov
pop
or
jbe
push
shl
(bad)
aaa
ret
pop
xor
mov
pop
add
cmp
and
imul
ss
adc
daa
and
movs
xor
mov
movs
cmp
daa
out
inc
xor
push
ret
lds
fimul
daa
out
inc
xor
push
loopne
xor
mov
push
add
push
mov
daa
(bad)
mov
add
popf
push
or
xor
push
and
movs
cmp
call
mov
pop
mov
mov
sub
add
push
xchg
btc
out
adc
fst
xlat
popf
push
pop
popa
mov
in
nop
aam
mov
xchg
xor
aam
(bad)
and
mov
and
stos
mov
and
push
fidivr
mov
push
mov
fsub
fld
jmp
int3
add
aas
fwait
push
pop
add
mov
rol
out
cmps
shl
and
dec
fidiv
pop
xor
or
test
sub
push
pop
lds
movs
int3
and
(bad)
and
movs
iret
and
jmp
mov
and
pop
xor
add
jb
in
xor
(bad)
into
and
ds
test
cmp
mov
shl
(bad)
loop
stos
movs
mov
lahf
xlat
xor
and
mov
and
pusha
aaa
sahf
xchg
int
aam
cmp
mov
xor
adc
mov
cdq
push
pop
mov
pop
xor
pop
int
stos
movs
int3
and
fdecstp
xlat
mov
jecxz
fist
stos
sub
dec
pop
(bad)
movs
sbb
and
cmps
int
test
xchg
pop
mov
cdq
push
pop
mov
push
pop
xor
mov
adc
or
fucomip
cmp
fist
lds
add
movs
int
aas
fs
popf
push
or
xor
mov
mov
ins
je
push
jecxz
fist
stos
sub
dec
pop
(bad)
movs
sbb
and
cmps
int
test
addr16
push
pop
mov
pop
xor
push
movs
int3
and
fdecstp
xlat
mov
jecxz
fist
stos
sub
dec
pop
(bad)
movs
sbb
and
cmps
int
test
das
cdq
push
pop
mov
pop
fcomi
xor
pop
xor
out
push
xor
push
ret
lds
aam
aaa
mov
push
pop
mov
mov
int
test
pop
loope
sbb
mov
fdecstp
iret
test
push
mov
stos
jo
(bad)
into
and
stos
jo
pop
mov
call
hlt
add
pop
xor
sub
xor
out
push
xor
push
ret
lds
aam
aaa
mov
adc
movs
int3
and
fdecstp
xlat
aas
push
ret
popf
push
movs
xchg
test
int
rcr
xor
aam
cmp
adc
xor
out
push
xor
push
ret
lds
aam
aaa
mov
adc
movs
int3
and
fdecstp
xlat
(bad)
pushf
adc
push
pop
pop
fsub
cmps
int
test
jnp
push
pop
mov
pop
mov
call
xor
mov
adc
movs
push
xor
out
cmp
fist
lds
add
movs
int
aas
fs
popf
push
or
xor
mov
sbb
jecxz
fcom
stos
sub
sbb
push
jmp
pop
adc
push
rol
stos
inc
shl
(bad)
aas
mov
popf
push
or
jae
pop
xor
ficom
pop
xor
pop
xor
into
lods
retf
pop
lods
pop
dec
cld
mov
jecxz
fist
stos
sub
movs
int3
and
xor
adc
push
xor
aam
and
sti
sub
push
mov
fwait
push
pop
mov
push
pop
xor
mov
and
test
into
and
pop
xor
(bad)
adc
pop
pop
xor
into
lods
retf
pop
lods
pop
dec
int3
aas
xchg
ret
movs
xchg
test
int
sbb
xor
aam
cmp
push
push
xor
out
push
xor
push
ret
lds
aam
aaa
mov
adc
movs
int3
and
fdecstp
xlat
(bad)
lods
inc
cld
push
pop
pop
dec
cmps
sbb
and
dec
mov
and
xor
aaa
mov
xor
aam
es
call
push
xor
push
ret
lds
aam
aaa
mov
adc
movs
int3
and
fdecstp
xlat
fisubr
(bad)
and
aam
fist
cmp
push
pop
stos
sub
dec
pop
(bad)
movs
sbb
and
cmps
int
test
lahf
pushf
push
pop
mov
pop
mov
pushf
push
pop
mov
push
pop
xor
mov
adc
add
xor
out
cmp
fist
lds
add
movs
int
aas
fs
popf
push
or
xor
mov
ja
cmp
(bad)
(bad)
cli
and
pop
xor
xchg
fbstp
fild
jae
push
xchg
fst
fistp
iret
and
and
movs
int3
and
mov
mov
mov
test
int
xchg
ror
fsubr
sahf
int
test
test
ins
ror
dec
pop
xor
into
lods
retf
pop
xchg
cmp
scas
jecxz
fist
mov
mov
fcomp
fmulp
mov
stos
movs
mov
mov
out
fild
stos
jo
(bad)
xor
test
gs
clc
sbb
(bad)
sahf
es
sahf
int
test
(bad)
sbb
pop
xor
aad
int
test
xchg
test
int
and
pop
push
pop
int
pop
shl
(bad)
aas
ds
or
stos
adc
inc
mov
pop
xor
mov
mov
test
int
xchg
mov
popf
push
pop
mov
push
pop
xor
mov
and
test
into
and
pop
xor
(bad)
adc
pop
xor
into
lods
retf
pop
lods
pop
dec
int3
aas
xchg
ret
movs
xchg
test
int
push
sahf
cmp
lods
sbb
fucomip
push
xor
push
ret
lds
aam
aaa
mov
adc
movs
int3
and
fdecstp
xlat
(bad)
(bad)
and
pop
int
mov
(bad)
and
movs
iret
and
movs
and
movs
iret
and
stos
xor
ficomp
push
adc
pop
scas
movs
int3
and
fimul
fistp
jp
push
pop
mov
fwait
imul
fcomp
ficom
xor
outs
(bad)
and
pop
xor
(bad)
retf
movs
mov
and
stos
jo
fcmovu
(bad)
and
sbb
(bad)
sahf
ds
fisubr
cli
and
fimul
ficom
retf
push
nop
cmp
bound
stos
lds
(bad)
mul
stos
movs
mov
and
pushf
mov
and
push
test
movs
iret
and
fidiv
sub
xor
fist
mov
test
int
mov
fdecstp
fcmovnu
ffreep
and
movs
int3
and
stos
int
test
mov
test
int
aas
ds
or
xor
pop
xor
mov
sbb
jecxz
fist
stos
sub
dec
pop
and
int
test
xlat
lahf
push
pop
mov
pop
mov
lahf
push
pop
mov
push
pop
xor
mov
and
test
into
and
pop
xor
fisub
pop
pop
xor
into
lods
retf
pop
lods
pop
dec
int3
aas
inc
rcr
movs
int
int3
sbb
(bad)
sahf
cmp
jae
push
xchg
movs
xchg
test
int
push
addr16
test
(bad)
and
pop
int
pop
movs
xchg
test
int
mov
fdecstp
rcr
(bad)
and
fbstp
in
sbb
and
cmps
int
test
jg
push
pop
mov
pop
mov
lahf
push
pop
mov
push
pop
xor
mov
and
test
into
and
pop
xor
mov
sbb
jecxz
fist
stos
sub
dec
pop
adc
sbb
and
cmps
int
test
iret
loopne
pop
mov
pop
mov
loopne
pop
mov
push
pop
xor
mov
and
test
into
and
pop
xor
pop
in
cmps
sbb
and
cmps
int
test
mul
push
pop
mov
pop
loop
rcl
lds
(bad)
cli
and
sub
fist
stos
sub
jns
mov
xor
xor
into
lods
retf
(bad)
fsub
into
and
stos
jo
add
mov
inc
mov
loopne
pop
mov
push
pop
xor
mov
and
test
into
and
pop
xor
fcmovb
push
pop
xor
into
lods
retf
pop
lods
pop
dec
int3
aas
xchg
ret
movs
xchg
test
int
pusha
gs
aam
cmp
lods
aam
rcr
hlt
aaa
mov
xor
out
push
xor
push
ret
lds
aam
aaa
mov
adc
movs
int3
and
fdecstp
xlat
mov
jecxz
fist
stos
sub
jns
outs
imul
(bad)
lods
retf
(bad)
fsub
into
and
stos
jo
add
mov
inc
xor
das
adc
movs
int3
and
fdecstp
xlat
fisubr
fisubr
pop
pop
xor
into
lods
retf
pop
lods
pop
dec
int3
aas
inc
rcr
movs
int
les
aam
cmp
test
into
and
pop
xor
(bad)
imul
(bad)
lods
retf
pop
lods
pop
dec
int3
aas
inc
rcr
movs
int
or
xor
aam
cmp
test
into
and
pop
xor
mov
mov
mov
test
int
xchg
mov
loop
pop
mov
push
pop
xor
mov
and
test
into
and
pop
xor
mov
and
shl
(bad)
aas
pop
ret
or
or
xor
fisubr
pop
xor
pop
xor
into
lods
retf
pop
lods
pop
dec
int3
aas
inc
rcr
movs
int
test
(bad)
sahf
cmp
pop
ret
xor
das
adc
movs
int3
and
fdecstp
xlat
mov
jecxz
fist
stos
sub
dec
pop
(bad)
movs
sbb
and
cmps
int
test
cmps
loop
pop
mov
pop
mov
loop
pop
mov
push
pop
xor
mov
and
push
pop
gs
jmp
aaa
mov
sbb
fist
test
stos
xor
ficomp
pop
pop
xor
into
lods
retf
pop
lods
pop
dec
int3
aas
inc
rcr
movs
int
push
sahf
cmp
test
into
and
pop
xor
fidiv
imul
pop
pop
xor
into
lods
retf
pop
lods
pop
dec
int3
aas
inc
rcr
movs
int
push
addr16
aam
cmp
or
fist
(bad)
jecxz
pop
mov
push
pop
xor
mov
adc
cld
data16
out
cmp
fist
lds
add
movs
int
aas
fs
popf
push
or
xor
pop
(bad)
sbb
and
cmps
int
test
mov
push
pop
mov
pop
xor
mov
xor
mov
xor
mov
pop
xor
arpl
(bad)
(bad)
and
stos
mov
and
pop
xor
test
int
pop
movs
xchg
test
int
loop
int
test
mov
push
movs
iret
and
movs
xchg
test
int
test
fucomip
sub
aam
shl
int
test
hlt
mov
shl
xor
rol
sub
cmps
int
xchg
add
addr16
mov
(bad)
push
pop
xor
adc
retf
shl
push
nop
pushf
ja
push
mov
push
scas
jae
push
nop
push
test
mov
movs
int3
and
pop
xor
adc
movs
int
pop
xor
fist
ficomp
xchg
inc
mov
test
mov
lods
jmp
mov
fistp
adc
popf
push
xor
fist
(bad)
cmps
movs
int
xor
xor
pop
mov
(bad)
mov
and
sahf
adc
imul
nop
add
xlat
pop
mov
or
pop
je
cmp
pop
lds
(bad)
mov
test
mov
and
push
mov
push
push
cmps
pop
aam
xor
retf
test
ja
fcom
ficom
xor
(bad)
iret
and
pop
xor
mov
hlt
pop
xchg
pop
fs
or
(bad)
(bad)
add
popf
fmulp
xchg
and
mov
ja
push
pop
mov
and
movs
(bad)
outs
pop
xor
mov
and
push
cmp
fimul
xor
adc
movs
int
mov
shl
and
cli
iret
and
pop
mov
and
movs
fisubr
pusha
pop
xor
mov
and
push
cmp
(bad)
inc
and
pop
mov
push
ret
and
pop
lds
(bad)
pop
and
pop
ficomp
push
pop
mov
and
mov
pop
iret
cmp
cmps
int
pop
mov
in
pop
fidivr
mov
xor
ficom
mov
and
xor
imul
xor
aaa
frstor
test
idiv
pop
call
push
pop
add
mov
fcmovnu
adc
pop
xor
lods
cmps
int
fisub
pop
fist
xor
cmps
int3
and
cmps
int
pop
mov
jmp
int
test
mov
push
cmps
int
test
mov
push
cmps
int
test
xchg
and
out
iret
and
movs
int
xchg
jp
pop
retf
cmps
int
pop
call
push
pop
mov
sbb
fcmovnu
push
pop
xor
fcmovu
into
and
arpl
(bad)
mov
mov
and
xlat
mov
test
ror
fist
push
xor
cmps
int
fisub
pop
fwait
cmp
movs
int
pop
mov
out
pop
mov
dec
ror
out
scas
shl
sbb
loop
and
popf
mov
test
pop
xor
test
xor
fisub
pop
and
out
and
cmp
pop
mov
pop
mov
sbb
fisttp
aaa
push
mov
and
xlat
mov
stos
movs
int
fcmovu
mov
test
bound
ja
xor
shl
pop
fistp
push
repnz
test
fist
xchg
movs
int
enter
(bad)
mov
icebp
push
pop
int
ret
cmps
int
aas
dec
ret
popf
push
xor
adc
movs
int
pop
mov
out
pop
mov
inc
pushf
mov
stos
movs
int
mov
inc
xor
fcmovu
into
and
mov
fistp
shl
(bad)
xchg
das
sub
mov
fidiv
(bad)
fist
test
push
fisub
add
das
pop
xor
outs
xor
(bad)
popf
outs
out
push
pop
mov
(bad)
cmps
int
push
cmp
mov
xor
ficom
mov
and
or
inc
bound
mov
xor
adc
movs
int
pop
mov
fs
mov
pop
addr16
push
pop
inc
cli
aam
scas
and
fst
(bad)
popf
ins
ret
(bad)
aam
scas
and
movs
pop
fist
mov
stos
movs
int
mov
ror
sub
movs
int
nop
or
mov
xor
stos
movs
int
lock
xor
fisub
int
repz
int
mov
shl
or
sti
sbb
mov
faddp
add
gs
or
jbe
cmp
aad
adc
(bad)
fist
aad
adc
cmp
clc
outs
xor
ficomp
int
pop
mov
jmp
pop
mov
and
mov
ficom
movs
inc
iret
mov
shl
mov
mov
shl
mov
mov
push
test
stos
pop
loop
loopne
(bad)
fiadd
xlat
jbe
jg
pop
fistp
shl
pop
nop
out
inc
fist
repnz
sub
rol
call
push
xlat
ja
pop
rol
lahf
pop
mov
jmp
pop
movs
inc
xlat
fisubr
fcmove
gs
xor
pop
retf
movs
inc
rcr
ja
ficomp
xor
pop
or
daa
pop
xor
and
push
push
pop
cmp
fwait
inc
pop
bound
mov
fild
jbe
push
push
test
loopne
les
dec
xor
push
xlat
ja
pop
xor
mov
sti
addr16
push
xor
mov
mov
in
push
pop
mov
daa
ficomp
dec
in
push
pop
mov
aaa
push
push
add
push
pop
mov
sbb
pop
retf
add
sbb
rcl
addr16
inc
xor
mov
or
pop
cmp
or
mov
and
push
lods
aad
shl
shl
test
cmc
fisubr
out
and
xlat
mov
mov
int
fcmovu
repnz
test
bound
mov
shl
(bad)
xchg
push
mov
push
pop
xor
jae
push
nop
or
push
mov
pop
fist
not
pop
call
test
int
pop
mov
out
push
pop
mov
sbb
jb
aaa
popf
mov
mov
int
dec
pop
xor
scas
aas
fist
mov
mov
int
fcmovu
repnz
test
bound
push
push
repnz
jns
int
xchg
mov
pop
fist
not
pop
call
test
int
pop
mov
out
push
pop
mov
sbb
jb
pop
mov
out
xchg
mov
pop
mov
add
addr16
mov
adc
push
pop
fidivr
add
scas
out
popa
mov
sbb
fidivr
push
lods
aam
shr
hlt
mov
pop
xor
push
mov
out
push
pop
mov
sbb
xor
push
pop
inc
ficomp
xor
test
mov
pop
xor
adc
outs
xor
aam
cmp
lods
aam
shr
mov
mov
jl
adc
mov
(bad)
jmp
pop
mov
pop
mov
jmp
pop
mov
push
pop
xor
mov
es
test
xor
test
bound
in
outs
xor
aam
cmp
pop
xor
mov
test
and
pushf
fidiv
pop
pop
xor
into
lods
retf
pop
lods
pop
dec
idiv
jecxz
fist
stos
sub
mov
push
adc
mov
jg
push
pop
mov
inc
mov
jmp
pop
mov
push
pop
xor
mov
es
test
xor
test
bound
sbb
xor
aam
cmp
fcmovu
xor
test
bound
pusha
outs
xor
aam
cmp
imul
xchg
mov
in
push
pop
mov
push
pop
xor
mov
es
test
xor
test
bound
pop
outs
xor
aam
cmp
nop
imul
fist
lds
aam
aaa
mov
push
pop
mov
mov
shl
test
pop
xchg
pop
shl
test
fidiv
pop
xor
int
inc
xor
cs
mov
adc
adc
mov
mov
sbb
hlt
fidiv
pop
xor
xor
xor
out
push
xor
push
ret
lds
aam
aaa
mov
adc
mov
mov
push
pop
mov
pop
xor
cs
mov
pop
in
push
pop
mov
pop
fcomi
stos
jle
xor
je
xor
out
push
xor
push
ret
lds
aam
aaa
mov
adc
mov
jae
push
pop
mov
pop
xor
cs
mov
pop
in
push
pop
mov
pop
mov
in
push
pop
mov
push
pop
xor
mov
sbb
sub
out
cmp
fist
lds
add
movs
int
aas
add
popf
push
xlat
(bad)
fbstp
xchg
add
push
fdecstp
iret
aas
jae
popf
push
xlat
mov
mov
int
mov
fdecstp
xlat
out
jae
fist
aam
shl
hlt
aaa
fsubr
fucomip
push
xor
push
ret
lds
aam
aaa
mov
adc
mov
fwait
in
push
pop
mov
pop
xor
adc
mov
cmps
in
push
pop
mov
pop
mov
in
push
pop
mov
push
pop
xor
mov
es
test
xor
test
bound
cmp
(bad)
sahf
cmp
fcmovu
xor
test
bound
or
xor
aam
cmp
jae
push
xchg
mov
in
push
pop
mov
push
pop
xor
mov
es
test
xor
test
bound
js
xor
aam
cmp
and
pop
push
mov
sbb
adc
mov
fucomip
push
pop
mov
inc
mov
out
push
pop
mov
push
pop
xor
mov
es
test
xor
test
bound
mov
sahf
cmp
fcmovu
xor
test
bound
sub
aam
cmp
imul
xchg
mov
out
push
pop
mov
push
pop
xor
mov
es
test
xor
test
bound
cld
imul
aam
cmp
xor
fucomip
mov
fist
lds
fimul
xor
add
(bad)
fbstp
dec
fcomp
mov
int
mov
fdecstp
iret
mov
jecxz
fist
stos
sub
dec
pop
(bad)
movs
sbb
push
rcr
and
pop
xor
mov
pop
mov
int
ficomp
push
rcr
and
pop
xor
fisubr
addr16
xor
pop
xor
into
lods
retf
pop
lods
pop
dec
retf
aas
inc
rcr
movs
int
mov
fdecstp
xlat
mov
jecxz
fist
stos
sub
jae
addr16
xor
pop
xor
into
lods
retf
(bad)
(bad)
xor
test
gs
mov
(bad)
out
aas
test
gs
clc
push
(bad)
sahf
and
fcmovu
xor
test
bound
call
sahf
cmp
push
xor
mov
xor
fist
popa
aaa
ins
ja
(bad)
(bad)
add
or
(bad)
fbstp
aas
test
bound
call
pop
mov
and
or
and
movs
xchg
mov
xor
test
into
add
pop
xor
pop
xor
mov
test
and
pushf
add
pop
mov
push
cmps
pop
ret
add
addr16
mov
ficomp
pop
xor
mov
xor
mov
mov
mov
retf
cmps
int
push
ror
fisubr
shr
add
jae
push
pop
mov
fst
cmps
dec
stos
movs
int
mov
ror
sub
movs
int
nop
mov
hlt
push
pop
bound
cwde
jne
fistp
ror
out
scas
shl
mov
mov
fistp
shl
mov
xor
push
sar
iret
and
pop
xor
fcmovu
xchg
test
bound
aas
out
fcomp
push
fcmovu
sbb
jle
pop
pop
fimul
fist
xor
cmps
int3
and
cmps
int
pop
mov
cmc
push
pop
mov
sbb
movs
popa
push
shr
iret
and
movs
int
xchg
push
cmp
pop
fimul
push
pop
pop
jg
sbb
push
shl
ficomp
shr
iret
and
movs
int
pop
mov
lock
pop
fiadd
movs
int
rol
iret
and
shl
mov
xor
push
shl
int3
and
pop
xor
mov
sbb
movs
jbe
push
pop
cmc
pop
mov
int
push
pop
xor
aam
stos
and
cmp
pop
mov
pop
mov
or
xor
fcmovu
mov
test
bound
push
mov
mov
stos
movs
int
fcmovu
mov
test
bound
ja
xor
shl
pop
fistp
push
repnz
aam
fist
xchg
movs
int
or
xor
(bad)
lods
jmp
push
cmps
int
aas
dec
ret
popf
push
xor
adc
movs
int
pop
mov
icebp
push
pop
mov
inc
pushf
mov
lods
movs
int
mov
jae
(bad)
(bad)
and
mov
fistp
shl
(bad)
xchg
das
sub
mov
fidiv
(bad)
fisttp
test
push
fisub
fisub
ficom
pop
fbld
jo
(bad)
mov
pop
fist
xor
retf
test
fs
xor
xor
cmp
sbb
push
ror
into
and
movs
int
xchg
push
mov
pop
xor
ror
mov
lods
movs
int
add
dec
sub
push
repnz
loopne
fist
xor
loop
iret
and
movs
int
mov
fcmovnu
enter
push
rol
iret
and
cmps
int
mov
shl
pop
mov
movs
xchg
movs
int
mov
fistp
push
fcomp
push
pop
bound
add
mov
inc
push
repnz
jle
cmp
adc
pop
xor
iret
and
shl
fisub
int
mov
fdecstp
sar
int
aam
add
stos
movs
int
clc
mov
and
sahf
ds
nop
adc
fist
fiadd
pop
xor
rol
iret
and
fcomi
je
pop
xor
out
iret
and
pop
xor
pop
retf
xor
and
dec
and
pop
int
repz
int
mov
shl
xor
ror
fisubr
add
sbb
mov
(bad)
add
gs
or
fnstcw
test
inc
fist
fidivr
jle
xor
mov
jmp
push
pop
mov
fld
pop
lahf
mov
shl
pop
nop
xchg
fist
fs
clc
jge
fild
xchg
push
pop
int
pop
xlat
data16
fiadd
pop
xor
xlat
ja
pop
xor
mov
mov
xor
push
pop
mov
fist
aad
adc
fs
adc
(bad)
pop
into
pop
mov
clc
push
pop
fs
test
xor
fisub
mov
test
loop
iret
push
pop
(bad)
jo
xor
pop
inc
mov
fisubr
xor
cmp
mov
not
mov
(bad)
fst
ficomp
xor
pop
ret
or
jae
fistp
xlat
mov
cmps
movs
int
mov
fdecstp
shr
int
push
cs
cmps
mov
push
scas
jae
push
nop
xor
mov
shl
xor
add
mov
mov
sbb
push
ror
sub
popf
push
sbb
movs
xor
mov
mov
ja
pop
xor
adc
or
mov
push
adc
ficom
int
xlat
jmp
fistp
push
test
pop
xor
xor
or
idiv
pop
xchg
inc
mov
fistp
sbb
fist
pop
repz
sbb
aaa
aam
xor
(bad)
popf
or
push
pop
push
and
movs
cmp
daa
pop
es
push
mov
bound
lahf
push
mov
sbb
pop
pop
fistp
pop
pop
fistp
pop
xor
push
xor
aaa
nop
jae
(bad)
pushf
mov
nop
jg
fistp
movs
pop
pop
out
xor
dec
jae
fistp
movs
pop
aaa
cli
sbb
aaa
pop
jae
(bad)
mov
pop
fiadd
xor
and
sbb
pop
pop
fiadd
xor
and
popf
sahf
push
mov
not
pop
fiadd
xor
and
xchg
lahf
push
mov
not
mov
sbb
movs
pop
idiv
sbb
aaa
xchg
jb
fistp
movs
pop
(bad)
clc
sbb
aaa
in
xor
cmp
movs
pop
dec
in
xor
hlt
jb
fistp
movs
pop
stos
out
xor
les
(bad)
mov
sti
push
pop
pop
fiadd
xor
and
fwait
sahf
push
mov
not
pop
fiadd
xor
and
lahf
sahf
push
mov
not
mov
call
pop
out
test
cmps
ins
adc
pop
xor
test
stos
ins
adc
pop
xor
or
fbld
shl
or
icebp
mov
mov
pop
int3
inc
ror
out
scas
shl
mov
movs
pop
aaa
cli
sbb
aaa
xchg
jge
fcomip
jp
lahf
push
xor
push
pop
pop
pop
and
pop
fisub
pop
xor
out
xor
enter
hlt
popfw
sahf
push
xor
push
pop
pop
pop
and
pop
fimul
pop
xor
lods
aad
adc
int
jnp
jae
mov
stc
push
jo
pop
pop
or
sbb
mov
movs
pop
repz
sbb
aaa
xor
fistp
push
mov
stc
xor
pop
pop
or
sbb
mov
movs
pop
ret
repnz
aaa
adc
xor
cmp
cmc
jae
mov
stc
dec
outs
adc
sbb
mov
movs
pop
idiv
sbb
aaa
dec
jge
(bad)
mov
(bad)
push
pop
pop
and
pop
fcmovu
jo
xor
jb
aas
(bad)
mov
and
popf
sahf
push
mov
stc
push
pop
pop
and
pop
fiadd
jno
xor
jae
aas
(bad)
mov
and
sbb
pop
mov
sbb
xchg
icebp
mov
mov
gs
jns
(bad)
ficomp
xor
and
test
movs
int
xchg
xor
xor
cmps
int
aam
and
jae
(bad)
lods
sbb
push
pop
pop
fild
mov
stc
push
pop
mov
mul
(bad)
pop
ret
mov
cli
push
pop
pop
fild
pop
pop
fild
shl
jl
(bad)
(bad)
fcomp
retf
stos
bound
push
pop
mov
aas
xchg
popf
push
xor
xor
pop
xor
cld
jl
fcomip
push
sbb
outs
popf
sahf
push
xor
(bad)
cmp
jno
das
aam
push
(bad)
cmp
pop
xor
xor
xor
sbb
mov
mov
stc
push
pop
xchg
(bad)
sbb
push
scas
lods
aad
adc
int
arpl
jae
cmp
jmp
push
shl
jl
ret
bound
pop
pop
mov
aas
xchg
popf
push
xor
xor
je
fist
push
outs
adc
pop
pop
fistp
pop
pop
fistp
out
fist
xor
inc
mov
stc
push
pop
mov
mov
movs
pop
(bad)
sbb
aaa
cwde
jg
fistp
cmc
jae
cmp
jmp
push
pop
xor
push
pop
xor
push
xor
xor
cwde
pop
fist
dec
outs
adc
outs
xor
cmp
cmc
jae
cmp
jmp
push
pop
xor
push
pop
xor
push
xor
xor
fcom
fist
xchg
ins
adc
outs
push
jo
pop
pop
fild
pop
pop
iret
aas
mov
fist
xchg
fist
pop
idiv
pop
xor
pop
xor
xor
sbb
mov
mov
cli
push
pop
xchg
sar
sbb
mov
movs
pop
jmp
sbb
mov
movs
pop
fwait
out
xor
push
pop
pop
popa
push
pop
xor
push
or
mov
mov
fistp
pop
xor
jae
cmp
cmc
jae
cmp
jmp
aas
lock
push
xor
mov
pop
mov
aas
xchg
popf
push
xor
fistp
stc
fidiv
pop
mov
jg
xor
aas
fcomp
popf
push
xor
mov
pop
xor
pop
mov
sti
push
pop
pop
mov
push
xor
push
pop
int
mov
fcom
fist
xor
bound
sahf
push
xor
and
sbb
pop
pop
in
aas
lock
push
xor
push
pop
mov
aas
xchg
popf
push
xor
fistp
stc
mov
adc
outs
push
jo
pop
pop
fild
pop
pop
repz
pop
xor
push
pop
pop
jno
pop
xor
aas
xchg
popf
push
xor
fistp
stc
push
jo
pop
mov
pusha
pop
xor
mov
ja
ficomp
int
push
movs
pop
jmp
sbb
mov
movs
pop
fwait
out
xor
mov
xor
aas
xor
fist
xor
push
or
mov
mov
fistp
pop
xor
jo
(bad)
mov
fcom
pop
fild
pop
pop
fild
pop
pop
iret
aas
(bad)
fist
int
push
pop
pop
retf
push
pop
xor
aas
add
popf
push
xor
xor
hlt
adc
push
stc
inc
outs
adc
outs
push
jo
pop
pop
fild
pop
pop
iret
cmp
pop
xor
aas
pop
xor
pop
xor
adc
sbb
mov
mov
cld
push
pop
xchg
out
(bad)
sbb
mov
movs
pop
jmp
sbb
mov
movs
pop
fwait
out
xor
push
pop
pop
out
push
pop
xor
push
or
mov
mov
fistp
pop
xor
jae
fisub
pop
fild
pop
pop
fild
pop
pop
iret
cmp
pop
xor
aas
pop
xor
pop
xor
adc
sbb
mov
mov
std
push
pop
xchg
dec
in
xor
clc
sbb
mov
movs
pop
mov
dec
xor
ficom
pop
dec
push
pop
xor
xlat
or
cmps
sbb
mov
mov
fistp
pop
xor
push
mov
std
push
pop
xchg
pop
out
xor
clc
sbb
mov
movs
pop
mov
dec
xor
sbb
pop
xor
xlat
or
in
xor
aas
pop
xor
push
mov
std
push
pop
xchg
ret
repnz
push
scas
jae
push
nop
xor
and
popf
sahf
push
xor
and
sbb
xor
fist
pop
retf
aas
pop
xor
xor
cs
sbb
mov
pop
xor
mov
stc
sbb
pop
pop
fild
pop
pop
fild
pop
pop
(bad)
cmp
pop
xor
xlat
or
cmps
sbb
mov
mov
fistp
pop
xor
push
mov
std
push
pop
xchg
(bad)
clc
sbb
mov
movs
pop
jmp
sbb
mov
movs
pop
fwait
out
xor
push
pop
pop
jbe
pop
xor
xlat
or
mov
mov
fistp
pop
xor
jo
mov
loop
repz
pop
lds
ficomp
(bad)
push
nop
mov
es
ins
sbb
or
sbb
cli
or
push
xor
xor
mov
sub
mov
popf
push
or
xor
movs
int
xchg
dec
xchg
xlat
clc
sbb
push
scas
jae
push
nop
xor
and
popf
sahf
push
mov
(bad)
push
pop
mov
call
bound
push
xor
and
popf
sahf
push
xor
mov
pop
into
hlt
adc
sbb
cmp
fisub
mov
fistp
push
pop
(bad)
jbe
xor
jae
cmp
cmc
jae
cmp
shl
jl
ret
bound
push
pop
mov
aas
mov
popf
push
xor
xor
mov
fist
ss
pop
mov
sbb
cmc
jae
cmp
jmp
push
shl
jl
ret
bound
pop
pop
mov
aas
xchg
popf
push
xor
xor
lock
push
stc
push
outs
adc
pop
pop
fistp
pop
pop
fistp
out
fist
xor
inc
mov
call
mov
mov
movs
pop
(bad)
sbb
aaa
sbb
xor
cmp
cmc
jae
cmp
jmp
cmp
pop
xor
xor
cs
sbb
mov
mov
call
xchg
aaa
cli
sbb
push
scas
pop
retf
xor
fistp
sbb
fist
pop
aaa
cli
sbb
aaa
lods
inc
xor
aas
daa
ficomp
adc
xor
test
fidiv
pop
fidivr
dec
pop
xor
retf
push
outs
inc
leave
cmp
adc
fist
pop
aaa
cli
sbb
aaa
nop
inc
xor
mov
pop
pop
xchg
push
pop
xor
bound
add
pop
pop
fild
pop
pop
fild
pop
pop
repz
pop
xor
sub
or
cmps
sbb
mov
mov
fistp
pop
xor
jo
out
mov
fist
aad
adc
int
arpl
jae
cmp
jmp
push
xor
mov
xor
push
fisub
mov
ficomp
or
fcomip
jbe
sahf
push
mov
sub
outs
push
jo
pop
pop
fild
pop
pop
iret
aas
(bad)
fist
pop
mov
pop
xor
aas
pop
xor
pop
xor
adc
sbb
mov
mov
rcl
stos
out
xor
mov
xor
bound
sahf
push
xor
and
sbb
xor
sbb
pop
xor
aas
adc
popf
push
xor
xor
mov
add
pop
pop
fild
pop
pop
fild
pop
pop
iret
aas
cmps
xor
push
xor
mov
pop
xor
xor
sbb
mov
mov
rcl
das
cli
sbb
pop
nop
fdivr
fist
xor
bound
sahf
push
xor
and
sbb
xor
jg
pop
xor
aas
push
ficomp
adc
xor
push
stc
cmps
ins
adc
outs
push
jo
pop
pop
fild
pop
pop
iret
aas
mov
aam
push
pop
pop
sar
xor
pop
xor
mov
mov
rcl
mov
push
movs
pop
jmp
sbb
mov
movs
pop
fwait
out
xor
push
pop
pop
and
xor
push
or
mov
mov
fistp
pop
xor
jo
cmp
cmc
jae
cmp
jmp
push
pop
xor
push
pop
mov
aas
retf
push
xor
xor
pop
xor
call
inc
xchg
lahf
push
ror
out
scas
shl
mov
movs
pop
jmp
sbb
mov
movs
pop
mov
dec
xor
mov
xor
mov
pop
mov
aas
xchg
popf
push
xor
xor
pop
xor
aam
xor
hlt
jb
sahf
push
xor
and
popf
sahf
push
xor
and
sbb
xor
inc
xor
(bad)
or
cmps
sbb
mov
mov
fistp
pop
xor
push
mov
ret
xchg
(bad)
clc
sbb
mov
movs
pop
jmp
sbb
mov
movs
pop
fwait
out
xor
push
pop
pop
lahf
push
pop
xor
xlat
or
mov
mov
fistp
pop
xor
jo
mov
ror
out
scas
shl
aaa
lock
int
or
sbb
rcl
pop
mov
in
mov
lock
xor
cmp
pop
xor
push
xor
fist
int
pop
mov
lds
mov
rcl
into
xor
push
xor
mov
shl
pop
mov
or
fisttp
xor
xor
adc
mov
jmp
pop
ret
pop
(bad)
(bad)
ficomp
into
(bad)
mov
sahf
jo
aas
pop
xor
xlat
mov
jg
movs
mov
dec
arpl
and
pop
fild
mov
fistp
push
fstp
test
cmp
ins
mov
sub
mov
pop
fstp
or
stos
inc
xor
ficom
mov
mov
sahf
sub
imul
nop
add
addr16
mov
(bad)
push
pop
xor
or
sub
movs
int
xchg
fcomi
xchg
inc
pop
xor
fcmovu
xor
test
bound
hlt
inc
xor
mov
jecxz
fist
stos
sub
movs
mov
test
inc
into
aas
fcomi
popf
push
xlat
mov
test
int
mov
fimul
push
das
and
fcmovu
xor
test
bound
xor
xor
fisubr
mov
test
inc
into
aas
loopne
popf
push
xlat
mov
test
int
mov
fimul
push
das
and
fcmovu
xor
test
bound
js
xor
xlat
daa
int
and
loop
sbb
push
rcr
and
pop
xor
sar
fimul
push
das
and
fcmovu
xor
test
bound
lods
dec
xor
xlat
daa
int
and
push
xchg
sbb
push
rcr
and
pop
xor
movs
cmp
adc
movs
int
pop
mov
enter
mov
aas
out
repnz
push
xlat
mov
test
int
mov
fcmovnu
fnstcw
xor
movs
cmp
adc
movs
int
pop
mov
enter
mov
aas
dec
repz
push
xlat
mov
test
int
mov
fimul
pop
das
and
fcmovu
xor
test
bound
cmp
xor
(bad)
lods
cmp
push
pop
mov
test
inc
into
aas
adc
popf
push
xlat
mov
test
int
mov
fimul
pop
das
and
fcmovu
xor
test
bound
pusha
dec
xor
cmp
adc
popf
push
xor
adc
movs
int
pop
xor
jno
pop
ficomp
adc
jo
aas
mov
popf
push
xor
push
pop
fiadd
xchg
jge
fistp
fdecstp
neg
stos
add
ficomp
or
mov
mov
rol
call
loop
mov
ficomp
retf
rol
pop
mov
or
pop
dec
pop
xor
pop
xor
cmps
popa
lea
fdecstp
xlat
pop
call
les
(bad)
popf
push
call
ins
or
mov
xlat
push
pop
popa
mov
in
jmp
mov
and
pushf
mov
sbb
mov
popf
push
xlat
mov
mov
add
fist
retf
lds
mov
push
pop
xor
mov
int
xlat
out
daa
test
xor
adc
lods
int
pop
mov
leave
push
pop
mov
sbb
out
daa
test
xor
adc
lods
int
pop
mov
leave
push
pop
mov
movs
mov
and
fcmovu
fild
test
bound
mov
out
daa
test
ss
inc
xor
adc
lods
int
pop
mov
retf
mov
jne
xor
mov
mov
mov
fimul
fisub
dec
pop
dec
xchg
sbb
push
shl
fisubr
pop
xor
test
inc
into
aas
cmc
icebp
popf
push
xlat
mov
mov
shl
push
fimul
fsub
dec
pop
adc
shl
ficomp
pop
xor
jae
push
xchg
fimul
xlat
and
lods
xchg
sbb
push
shl
fidivr
jmp
into
aas
enter
xlat
mov
mov
sbb
fist
(bad)
sub
movs
int
and
outs
xchg
sbb
push
shl
(bad)
inc
pop
xor
pop
ret
fimul
aam
dec
pop
aaa
xchg
sbb
push
shl
fcmovbe
inc
pop
xor
test
inc
into
aas
pop
neg
mov
test
fist
(bad)
sub
movs
int
and
std
xchg
sbb
push
shl
fiadd
inc
pop
xor
test
inc
into
aas
mov
popf
push
xlat
mov
mov
in
fist
inc
outs
adc
lods
int
pop
mov
xor
push
xor
aas
sub
sbb
pop
fidivr
int
xchg
dec
mov
and
out
daa
test
add
mov
push
(bad)
push
pop
xor
and
les
pop
xor
je
fist
ret
shl
out
mov
xor
mov
fdecstp
xlat
(bad)
fisub
test
cmp
pop
fcomip
fst
(bad)
cmps
into
and
pop
xor
xlat
out
and
outs
xor
push
fimul
in
fistp
ficom
hlt
pop
test
int
push
rol
out
cmps
shl
push
shl
pop
loop
sbb
push
shl
ficomp
dec
pop
xor
mov
scas
mov
sbb
sub
fucomip
cdq
movs
les
mov
and
jle
mov
cwde
ins
out
daa
test
cmp
(bad)
addr16
jb
pop
xor
adc
sbb
push
shl
fimul
mov
xor
clc
mov
cmps
retf
or
out
pop
xor
fstp
xlat
mov
scas
movs
int
mov
fcmovnu
or
push
shl
pop
(bad)
mov
cmps
int3
and
pop
xor
fcmovu
into
daa
test
bound
inc
inc
xor
aam
es
shl
fiadd
shl
repnz
xlat
mov
scas
movs
int
aas
pop
fstp
scas
movs
int
mov
fdecstp
iret
cmp
mov
(bad)
push
pop
mov
pop
mov
pop
fidivr
cmps
fcomp
stos
movs
int
mov
fdecstp
rcr
cmp
(bad)
(bad)
and
or
mov
retf
movs
mov
push
push
xor
aam
cmp
shl
push
movs
xchg
scas
movs
int
(bad)
jmp
fistp
mov
popf
push
xlat
mov
scas
movs
int
mov
fdecstp
iret
aas
push
icebp
popf
push
xlat
mov
test
and
fist
mov
test
and
fist
mov
mov
shl
pop
jmp
into
and
shl
sbb
pop
into
and
movs
mov
pop
jmp
push
fisubr
int
scas
mov
into
and
mov
(bad)
(bad)
and
dec
xor
aam
and
cmps
retf
or
iret
inc
pop
xor
add
test
(bad)
and
movs
and
push
ror
push
sub
mov
pop
xor
scas
retf
xlat
mov
scas
movs
int
test
(bad)
daa
test
ficom
inc
pop
xor
jae
push
xchg
xlat
mov
scas
movs
int
mov
xlat
(bad)
and
out
daa
test
mov
aaa
enter
fcmovu
retf
movs
bound
scas
movs
int
cmp
pop
pop
fistp
or
inc
xor
cmps
into
and
mov
and
movs
mov
pop
shl
(bad)
xchg
push
mov
stos
movs
int
loop
retf
mov
int
pop
mov
sbb
sbb
push
mov
retf
imul
mov
imul
fidivr
xor
push
dec
xor
add
gs
pop
popf
fiadd
mov
jno
xor
aas
into
repnz
push
xor
mov
pop
sub
fist
mov
mov
cs
mov
xor
aaa
sbb
fisttp
fcmovnu
ret
xor
xchg
jmp
sbb
sbb
lahf
sahf
push
into
xor
push
shr
fimul
div
mov
xor
fist
pop
dec
out
xor
cmp
fistp
or
mov
pop
xor
pop
jmp
pop
mov
and
movs
inc
xlat
mov
xor
mov
jmp
(bad)
fild
aaa
and
sahf
and
test
xor
pop
fistp
ficom
mov
das
sahf
jo
pop
mov
cmps
xchg
sbb
and
neg
push
pop
lds
fild
sbb
mov
loope
xor
lods
fcomp
lods
pop
repz
jae
push
xchg
mov
push
lods
shl
sbb
in
fbld
test
fldl2t
mov
push
test
mov
and
mov
inc
or
and
jle
mov
pop
xchg
cmp
js
movs
int
shr
fbld
test
mov
and
inc
pop
xchg
fistp
aaa
cmp
(bad)
cwde
les
shl
fbld
test
hlt
pop
stc
mov
and
sar
xor
std
fbld
test
pop
dec
out
xor
fcmovu
xchg
xor
dec
xor
cmp
mov
and
xlat
mov
mov
enter
xlat
mov
mov
hlt
icebp
and
movs
int
mov
fdecstp
(bad)
(bad)
cdq
and
fcmovu
xchg
xor
dec
xor
fiadd
pop
fidivr
shr
test
jo
aas
retf
push
xor
xor
clc
sbb
aaa
mov
(bad)
out
xor
mov
fucomip
jnp
fist
push
jp
mov
mov
pop
pop
gs
jmp
fistp
xchg
fcomp
adc
pop
xor
jb
and
sbb
dec
pop
xor
movs
cmp
addr16
xor
mov
mov
and
cdq
pop
outs
mov
jmp
fistp
xchg
fcomp
pop
pop
fisubr
jmp
pop
mov
pop
xor
movs
cmp
pop
mov
xor
out
xor
aas
pop
pushf
sahf
push
mov
int3
push
pop
mov
pop
xlat
(bad)
popa
mov
nop
ficomp
push
pop
sar
add
push
lods
rcl
jmp
push
xor
mov
xor
mov
xor
fist
pop
(bad)
sbb
aaa
loopne
xor
ficomp
xchg
add
mov
xor
(bad)
mov
popf
ja
test
xor
ficomp
mov
test
bound
cmp
xor
fcmovbe
xchg
test
mov
test
mov
push
pop
inc
es
or
push
jmp
stos
jecxz
(bad)
rcl
pop
(bad)
pop
mov
movs
sbb
and
out
fidivr
pop
pop
xor
sub
push
popf
ja
test
xor
ficomp
mov
test
bound
fmul
(bad)
xlat
xchg
test
mov
test
mov
push
pop
inc
es
or
push
jmp
stos
jecxz
scas
rcl
pop
(bad)
pop
mov
movs
sbb
and
out
ficom
pop
xor
and
(bad)
pop
pop
xor
jo
fbld
mov
and
fistp
sbb
pop
(bad)
adc
sti
push
jo
pop
mov
imul
call
aas
pop
dec
fist
xor
cwde
push
xor
ficomp
out
push
and
ficom
pop
pop
xor
mov
call
jmp
mov
iret
push
pop
mov
arpl
fist
pop
xor
dec
popa
fist
ja
push
pop
xor
ficomp
mov
push
xor
and
popf
sahf
push
xor
mov
xor
mov
xor
mov
xor
fistp
sbb
mov
mov
fistp
pop
xor
jae
aas
into
repnz
push
xor
mov
mov
rcl
pop
fistp
fdecstp
fstp
addr16
push
fiadd
aas
ret
fcomp
push
pop
pop
pop
mov
pusha
aas
fist
mov
mov
imul
xchg
mov
rcl
pop
fiadd
movs
cmps
ja
movs
int
shl
fsub
test
xor
push
fcmovnb
ja
pop
xor
loop
and
mov
and
xor
adc
sbb
mov
sahf
jo
aas
pop
xor
xlat
mov
dec
test
mov
dec
push
repnz
push
fst
scas
xchg
sbb
fistp
shr
fimul
repnz
test
pop
fistp
sbb
mov
xor
aaa
jl
xor
pop
mov
rcl
mov
and
xor
mov
xor
cmp
pop
xor
push
xor
mov
pop
xor
cmp
cmc
jae
mov
mov
push
adc
xor
(bad)
cdq
or
or
or
xor
push
xlat
ja
pop
mov
rcl
cmp
and
lock
push
btc
(bad)
mov
fst
popa
mov
in
mov
dec
jns
(bad)
pop
ds
scas
dec
cmp
fild
push
mov
push
push
mov
push
pop
xor
adc
push
xor
push
push
mov
push
pop
xor
inc
pop
xor
and
into
push
pop
xor
fucomi
cmp
push
addr16
push
pop
cmp
fistp
(bad)
mov
sbb
fistp
jmp
sub
neg
test
mov
and
popf
test
mov
jecxz
and
(bad)
and
mov
jmp
mov
and
pop
cmp
pop
fidivr
pop
lahf
cmps
int
pop
movs
pop
fwait
out
xor
inc
push
xor
pop
call
test
sbb
cmps
int
aam
ss
ret
and
movs
int
xchg
sub
and
movs
int
mov
cmps
int
jl
(bad)
and
ins
pop
(bad)
(bad)
and
cmps
int
pop
shl
hlt
rol
pop
fistp
jmp
push
ror
sub
movs
int
nop
(bad)
mov
sbb
fistp
icebp
fcom
xchg
mov
sbb
jl
sahf
jo
(bad)
mov
movs
push
pop
mov
aas
sahf
jo
push
fimul
stos
xchg
sbb
fbld
pop
bound
in
mov
and
fimul
stos
xchg
sbb
fisub
push
int
cmp
aam
test
mov
sbb
ror
out
scas
shl
jle
cmc
jae
outs
pop
cmp
shl
xor
aaa
dec
push
xor
mov
loop
mov
pop
lds
(bad)
fisub
test
mov
sahf
push
arpl
pop
fisttp
stos
pop
mov
rcl
fucomi
push
pop
xor
lods
aad
shl
cmc
push
adc
pop
scas
movs
int
ins
pop
mov
fwait
ins
pop
inc
outs
adc
pop
add
pop
inc
jmp
pop
ret
pop
inc
rep
pop
cmps
ins
adc
pop
dec
outs
adc
pop
xchg
ins
adc
pop
ds
pop
inc
shr
jo
pop
cmp
fistp
mov
rcl
mov
and
outs
adc
pop
xchg
ins
adc
pop
push
jbe
pop
inc
sar
jmp
mov
xor
and
mov
rcl
mov
jae
xor
aam
jmp
xchg
and
mov
jmp
push
xor
(bad)
(bad)
and
pop
xor
push
js
push
xor
fist
mov
and
movs
pop
aaa
cli
sbb
aaa
test
xor
xlat
out
and
xor
mov
xor
adc
xor
fist
pop
aaa
cli
sbb
aaa
inc
push
xor
mov
fcmovnu
mov
pop
xor
pop
int
test
mov
stos
movs
int
shr
loop
sahf
jo
push
push
mov
push
pop
xor
fcmovu
xor
test
bound
(bad)
fiadd
aad
pop
mov
and
xchg
int
xlat
xor
and
das
mov
xor
push
movs
int
add
push
dec
test
mov
pop
addr16
push
pop
inc
(bad)
cmp
ins
fcomp
mov
fild
pop
ficom
pop
xor
cmp
lods
jns
push
lods
aad
sar
cmc
push
rcr
and
cmps
int
pop
xor
xor
mov
mov
rcl
mov
inc
xor
fist
mov
and
movs
pop
ret
repnz
aaa
test
xor
xlat
out
and
xor
mov
xor
xor
mov
movs
pop
ret
repnz
aaa
inc
push
xor
mov
xlat
mov
pop
lahf
movs
jb
imul
scas
fxch
iret
and
fistp
sbb
mov
mov
aad
pop
int
dec
push
mov
mov
fist
hlt
pop
push
movs
int
push
mov
shl
fbstp
and
pop
int
test
add
ja
xor
adc
lods
cmp
push
movs
pop
ret
repnz
aaa
hlt
push
xor
mov
fidiv
(bad)
fbstp
and
jecxz
daa
push
mov
xor
test
bound
scas
iret
and
sbb
push
shr
fidiv
pop
xor
pop
and
xor
pop
int
test
int
xlat
jmp
fistp
fimul
fbld
jp
fistp
sbb
mov
mov
(bad)
push
pop
int
xlat
jmp
fistp
mov
fist
mov
pop
mov
int
ficomp
int
pop
xlat
mov
stos
movs
int
aas
imul
push
xlat
mov
stos
movs
int
mov
fdecstp
iret
aas
movs
xor
push
xlat
mov
test
int
test
push
jo
pop
fidivr
pop
xor
pop
int
test
inc
(bad)
cmp
neg
popf
push
xor
aaa
pop
push
xor
test
push
jo
pop
fisub
pop
xor
leave
pop
xor
fisub
mov
and
xlat
mov
stos
movs
int
aas
cld
fistp
stos
movs
int
mov
fdecstp
iret
aas
movs
xor
push
xlat
mov
test
int
test
sbb
pop
(bad)
pop
pop
xor
pop
int
test
inc
(bad)
cmp
xor
xor
lock
xor
test
sbb
pop
fimul
popa
pop
xor
fcmovbe
xor
test
mov
test
mov
push
pop
inc
es
xor
push
xor
ss
sub
fist
pop
idiv
sbb
aaa
dec
push
xor
mov
pushf
mov
test
addr16
and
movs
int
imul
imul
cmp
push
popf
push
xor
aaa
fs
xor
test
sbb
pop
fidivr
push
pop
xor
xchg
pop
xor
xlat
(bad)
and
movs
int3
and
ror
imul
pop
int
test
mov
and
xor
xor
mov
mov
(bad)
push
pop
mov
inc
xor
fist
mov
and
movs
pop
(bad)
clc
sbb
aaa
sbb
(bad)
out
and
xor
mov
xor
ss
loopne
fist
pop
(bad)
clc
sbb
aaa
xor
fistp
pushf
mov
test
addr16
and
movs
int
imul
imul
cmp
test
popf
push
xor
aaa
sub
xor
test
adc
pop
(bad)
push
pop
xor
pop
pop
xor
xlat
(bad)
and
pop
int
test
cli
and
fimul
ficom
retf
shl
iret
int3
and
repnz
pop
je
(bad)
fbstp
and
scas
iret
and
sbb
push
shr
fcmovb
pop
pop
xor
pop
fistp
pop
pop
fistp
pop
xor
pop
xor
push
pop
fisub
pop
xor
scas
int3
and
shl
push
sar
cmc
mov
xor
mov
movs
xchg
test
pop
xor
xlat
addr16
sbb
xlat
aas
out
(bad)
sbb
pop
lahf
movs
jb
imul
scas
shl
mov
xlat
cmps
das
stos
movs
int
add
add
pop
int
mov
mov
fist
xor
stos
iret
and
inc
rcr
movs
int
cwde
pop
xor
fcmovbe
(bad)
and
sbb
es
cmps
int
add
cmps
int
add
xchg
test
pop
xor
cmp
cmps
int
pop
xor
mov
test
(bad)
and
pop
xor
mov
xchg
test
pop
xor
test
jbe
push
pop
ficom
push
pop
xor
push
xor
mov
xor
fist
pop
push
sbb
aaa
xchg
pop
xor
(bad)
(bad)
and
sbb
fistp
pop
int
mov
nop
fist
aas
dec
in
xor
jb
imul
scas
shl
mov
xlat
cmps
das
stos
movs
int
add
mov
push
movs
int
mov
xor
push
shr
pop
fidivr
stos
ficomp
test
pop
xor
fisub
int
mov
fdiv
fist
aaa
scas
xchg
sbb
ficom
xor
pop
add
push
xor
mov
xor
adc
sbb
mov
sahf
jo
aas
pop
xor
xlat
mov
push
test
mov
dec
xor
and
popf
sahf
push
mov
ficom
mov
pop
mov
fxch
test
and
dec
int
pop
movs
inc
xlat
mov
add
and
add
xlat
pop
mov
rol
call
ror
sub
popf
mov
ficom
cmp
(bad)
mov
mov
inc
push
cmp
fild
outs
adc
outs
fidiv
pop
fidiv
pop
xor
jae
push
nop
popa
pop
aaa
cli
sbb
stos
pop
movs
pop
pop
out
xor
fcomp
fild
outs
adc
outs
push
jo
pop
fisub
bound
sahf
push
das
cmp
bound
lahf
push
mov
fist
mov
sbb
jp
pop
inc
aam
outs
sbb
pop
fimul
bound
sahf
push
das
cmp
bound
sahf
push
mov
fist
mov
pop
xor
mov
ja
ficomp
jae
and
loop
sahf
jo
push
das
cmp
bound
daa
fist
or
ja
jae
and
loop
sahf
jo
push
das
and
(bad)
fiadd
fcom
(bad)
fisub
add
outs
fidiv
pop
inc
(bad)
inc
adc
pop
mov
sbb
outs
adc
inc
push
jo
pop
or
jnp
jae
and
jae
jae
fisub
or
dec
push
and
push
cli
jb
ins
outs
sbb
pop
inc
(bad)
inc
dec
outs
adc
cmc
jae
and
jnp
jb
ins
outs
mov
adc
inc
cs
pop
cmp
dec
int
inc
movs
inc
iret
test
mov
inc
fist
(bad)
fisub
ins
or
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
mov
shl
pop
push
js
daa
pop
or
(bad)
push
pop
xor
mov
stos
jle
cmc
cwde
mov
jp
and
jmp
pop
mov
ja
shl
cmp
stos
push
fxch
jmp
test
xor
push
xor
mov
mov
and
xchg
icebp
xchg
mov
iret
push
pop
pop
fild
xor
jle
fild
xor
jle
ds
pop
xor
cmp
xchg
jecxz
and
hlt
lds
ficom
int
adc
dec
fsub
push
(bad)
jbe
push
cwde
cmp
push
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
xor
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
xor
jb
ss
push
retf
push
pop
.byte
