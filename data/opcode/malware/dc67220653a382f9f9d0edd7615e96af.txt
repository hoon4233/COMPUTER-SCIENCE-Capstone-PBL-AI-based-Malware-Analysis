das
not
push
adc
mov
push
aaa
pop
xchg
jae
pop
xchg
arpl
inc
xchg
xor
adc
pop
adc
add
leave
jp
push
ja
xor
add
push
push
aaa
jbe
cmp
adc
push
jo
mov
push
xlat
loopne
data16
inc
ss
sub
push
out
jnp
pop
xchg
jg
xlat
bound
add
mov
adc
fidivr
dec
or
inc
(bad)
fs
add
adc
push
pop
add
and
fist
aaa
dec
or
fwait
mov
xchg
rcl
add
dec
pop
xchg
jb
not
sub
adc
xor
push
push
cmp
fstp
cdq
adc
mov
rcl
push
mov
out
fild
cdq
das
push
mov
stos
adc
lahf
pop
push
aaa
sub
lahf
aas
push
mov
cdq
push
mov
mov
mov
fidiv
fistp
ins
fidiv
add
stos
inc
push
aaa
adc
and
rcl
push
mov
adc
fidiv
frstor
add
push
push
outs
dec
or
arpl
or
shl
ss
fbld
inc
mov
popf
repz
fnstenv
inc
pop
div
in
stos
loope
(bad)
pop
xchg
cmp
mov
inc
fist
mov
fild
mov
in
gs
arpl
xchg
pop
add
loope
cli
shl
in
xlat
fidivr
js
fnstenv
add
aaa
js
imul
push
mov
pop
pop
mul
je
aad
push
not
push
aaa
adc
cli
adc
fidivr
sbb
aaa
adc
push
inc
stos
sub
rcl
push
fbstp
sub
aaa
xchg
nop
push
enter
jne
mov
popf
repz
in
pop
aaa
adc
dec
seta
dec
xchg
popf
or
xchg
pop
aaa
adc
sbb
stc
mov
push
pop
sbb
push
aaa
adc
push
aaa
adc
xchg
sar
jbe
rcl
push
pop
mov
inc
xor
aaa
xchg
mov
xchg
push
cli
add
or
xor
out
ds
repz
ds
pop
adc
not
jbe
rcl
push
pop
xor
aaa
adc
push
enter
jne
stos
sub
rcl
push
mov
adc
repz
mov
xor
push
aaa
fist
push
aaa
rcl
imul
push
jnp
push
div
inc
add
mov
repnz
aaa
adc
push
pop
adc
sbb
pop
adc
jp
mov
dec
adc
fwait
lods
aaa
iret
fwait
xchg
popf
int3
in
and
push
sar
fwait
ret
mov
pop
push
ss
fwait
iret
mov
mov
lahf
rol
repnz
adc
js
jbe
mov
popa
out
in
stos
dec
fistp
push
push
aaa
xchg
nop
adc
in
stos
push
aaa
push
das
not
cmp
adc
fsub
sub
jmp
xchg
cmc
cmp
mov
lods
leave
in
fstp
push
inc
(bad)
mov
inc
dec
pusha
lods
cmps
jge
jle
out
cmc
fstp
fwait
xchg
das
iret
fwait
xchg
xchg
jb
add
jb
add
aaa
jp
push
cmp
ds
pop
adc
push
enter
inc
sbb
icebp
sbb
cmc
jbe
and
enter
inc
push
ds
enter
inc
out
mov
xchg
icebp
in
and
fbld
aaa
sbb
cmc
cs
sub
ss
cmps
xor
push
fucom
shl
pop
(bad)
fwait
xchg
das
not
inc
(bad)
rol
xchg
rol
dec
mov
add
fwait
lods
das
iret
fwait
xchg
xchg
jb
add
adc
pop
adc
push
fbld
push
aaa
fwait
xchg
pop
shl
idiv
addr16
or
add
stos
imul
and
fbstp
sub
aaa
fwait
xchg
loope
out
mov
pop
shl
idiv
pop
das
not
sbb
adc
inc
(bad)
rol
xchg
rcl
add
iret
fnsave
xchg
adc
cvtps2pd
pop
sub
jne
xlat
jnp
adc
jnp
adc
pop
iret
fwait
xchg
aaa
cmc
fwait
add
enter
jne
gs
push
fistp
adc
xor
pop
mov
inc
adc
xchg
(bad)
xchg
pushf
loope
xchg
push
daa
hlt
addr16
loope
out
pop
daa
sub
jmp
pop
cmps
outs
push
push
shl
jb
fstp
push
fucomp
mov
stos
pop
mov
push
push
inc
jmp
fld
stos
pop
retf
cdq
adc
mov
push
aam
adc
out
push
test
mov
stos
loope
stos
stos
loope
adc
xchg
cmc
and
inc
ins
fist
push
aaa
adc
gs
push
fs
add
pop
mov
xchg
out
adc
repz
push
xchg
out
adc
mov
push
aam
adc
out
aam
pop
icebp
xchg
push
push
enter
sbb
lods
aaa
(bad)
cdq
add
mov
pop
push
push
enter
dec
add
idiv
rcr
pop
daa
cmp
enter
mov
push
loope
stc
push
xchg
out
cmp
(bad)
rol
xchg
rol
dec
pusha
cdq
or
lock
test
cmp
xchg
jb
fstp
push
rcr
dec
retf
and
gs
adc
arpl
test
push
push
add
(bad)
adc
sahf
xchg
out
fstp
mov
xor
daa
jmp
out
fstp
push
rcr
dec
retf
cdq
adc
icebp
push
dec
push
push
inc
(bad)
inc
add
dec
pop
fnstenv
std
ja
pop
aad
retf
(bad)
adc
aaa
and
fs
adc
arpl
test
push
push
add
(bad)
adc
sahf
xchg
out
fstp
mov
xor
daa
jmp
push
pop
aaa
cdq
adc
icebp
push
dec
push
mov
test
add
dec
popf
frstor
mov
fs
add
and
adc
(bad)
cs
test
push
push
loope
push
pop
aaa
fwait
mov
push
cmp
in
mov
push
inc
daa
out
push
das
not
pshufw
(bad)
xlat
cdq
adc
mov
inc
test
test
xchg
rol
dec
popa
inc
fild
lods
pop
and
cmp
out
jmp
jne
stos
imul
shr
jne
add
inc
out
stos
loope
push
test
push
pop
dec
pop
xchg
cmps
pop
aaa
inc
mov
dec
mov
inc
mov
popf
repz
push
aaa
in
xchg
jb
fstp
push
inc
(bad)
fs
add
cmp
arpl
lock
and
fist
aaa
fwait
xchg
je
js
jbe
or
stos
imul
push
je
cli
test
jmp
icebp
push
addr16
mov
dec
xchg
dec
mov
cdq
and
mov
adc
pop
fwait
lods
pop
iret
fwait
xchg
popf
or
and
aaa
inc
fild
enter
jno
stos
push
fs
out
jmp
mov
cli
test
inc
ins
dec
xchg
dec
mov
inc
add
addr16
mov
mov
and
aaa
adc
cmp
fwait
lods
aaa
iret
fwait
xchg
popf
push
push
push
je
cli
xchg
ins
aaa
adc
pop
mov
not
rcl
jmp
push
rcr
cmp
pop
fiadd
add
loope
push
pop
push
ds
mov
pusha
daa
push
aaa
fwait
xchg
das
neg
(bad)
adc
sbb
not
add
jmp
push
push
mov
add
push
aaa
fwait
xchg
lahf
shl
aaa
and
mov
addr16
das
not
adc
aad
div
xchg
inc
imul
cmps
pop
adc
ffreep
daa
push
aaa
inc
add
cmp
sbb
fwait
xchg
lahf
or
stos
push
aaa
push
popf
adc
pop
aaa
adc
(bad)
push
push
daa
jb
pop
call
pop
mov
mov
rcl
and
dec
mov
addr16
fs
sbb
cmp
fwait
mov
aam
rol
enter
hlt
xchg
cmps
jne
adc
in
push
push
mov
in
add
inc
push
mov
je
jp
in
jne
fstp
addr16
or
enter
cmp
stos
loope
adc
adc
push
not
push
push
mov
rcr
pop
ret
inc
fistp
cdq
adc
addr16
ins
loope
push
fstp
xchg
sub
aaa
sbb
push
popf
dec
out
push
adc
xchg
xor
aaa
xchg
imul
sbb
xchg
loope
xchg
nop
pop
aaa
cdq
adc
push
pop
aam
jne
and
mov
aam
jne
push
mov
mov
and
push
adc
cli
inc
imul
or
icebp
fstp
mov
repnz
push
mov
cli
neg
jb
add
inc
repnz
repnz
fwait
mov
xor
push
push
les
sub
pusha
cdq
imul
xor
pop
retf
xchg
mov
pop
mul
jbe
mov
cmps
pop
aaa
cdq
adc
addr16
ins
loope
das
push
push
aaa
adc
pop
retf
fwait
mov
aam
ror
enter
hlt
xchg
sub
aaa
arpl
stos
loopne
inc
cmc
add
mov
push
test
fmul
sub
imul
push
sahf
repz
push
loope
adc
push
ins
fwait
jmp
stos
loope
cs
scas
dec
push
push
mov
enter
push
push
mov
lods
jne
add
pop
in
add
enter
out
in
xchg
mov
stos
loopne
fwait
xchg
xchg
jb
ins
pop
iret
sbb
stos
popf
adc
or
fist
repnz
inc
add
adc
push
fwait
lods
pop
iret
fwait
xchg
das
rcr
and
push
jmp
mov
xchg
push
mov
adc
addr16
fnstenv
push
push
aaa
adc
in
(bad)
or
mov
jb
fstp
fsubr
out
push
retf
iret
add
jge
push
pop
xchg
jae
push
and
pop
and
push
popf
push
out
push
xchg
jb
fstp
adc
cmps
mov
and
aaa
xchg
nop
push
mov
aad
sbb
cli
leave
jmp
inc
pop
xlat
jnp
adc
out
cmc
fstp
fwait
xchg
popf
dec
out
push
push
mov
scas
jne
div
push
push
cmc
jg
lods
das
iret
fwait
xchg
popf
push
out
push
das
in
stc
jbe
lock
aaa
sbb
imul
ficomp
pop
cs
popa
xor
arpl
xchg
xor
aaa
xchg
xchg
jno
adc
push
pop
sahf
or
push
adc
xchg
xor
aaa
xchg
sub
aaa
inc
loope
sbb
sahf
push
push
mul
bound
xchg
push
push
aaa
fwait
lods
jmp
mov
adc
sbb
ds
pop
adc
jp
mov
adc
jb
ds
adc
push
addr16
gs
aaa
adc
pop
aas
fwait
xchg
popf
(bad)
in
adc
or
push
imul
xchg
je
lahf
sbb
inc
stos
imul
and
fild
push
aaa
stos
mov
aaa
adc
xchg
jb
fstp
pop
adc
pop
mov
pop
aaa
in
and
fild
aaa
in
and
fnstsw
and
aaa
dec
or
rol
xchg
shr
mov
dec
popa
inc
out
jmp
push
push
aaa
fwait
mov
out
fwait
xchg
fdiv
adc
les
not
push
mov
in
fstp
addr16
sbb
enter
neg
push
cmps
xchg
dec
push
push
shl
fwait
sub
loope
rcl
cmc
ins
push
push
push
pop
adc
push
xchg
cwde
loope
in
add
mov
stos
loopne
inc
mov
popf
repz
xlat
and
data16
lahf
hlt
repnz
aaa
fwait
mov
aam
shr
hlt
lahf
sar
enter
xchg
mov
pop
aaa
inc
fbld
enter
jb
pop
fiadd
aad
or
push
push
mov
in
add
mov
xchg
mov
leave
in
add
paddsw
aaa
adc
push
test
neg
push
lahf
les
push
aaa
lahf
rcr
enter
xchg
mov
pop
aaa
inc
fbld
enter
jb
pop
fidivr
xchg
and
aaa
adc
xchg
loope
shr
out
in
xlat
fidivr
fwait
xchg
pop
mov
in
ffree
push
retf
mov
in
test
jae
push
aaa
lahf
shl
xchg
mov
pop
aaa
inc
fbld
enter
jb
pop
fidivr
xchg
jno
aaa
adc
popf
mov
call
test
adc
js
jbe
loope
push
mov
in
add
(bad)
in
loope
(bad)
pop
xchg
lock
mov
mov
hlt
dec
aaa
adc
mov
stos
loopne
das
stos
loope
adc
scas
adc
movs
shl
lahf
shl
enter
pop
inc
in
aaa
cli
mov
fidivr
sbb
stos
loope
push
push
dec
xchg
push
mov
clc
loope
in
push
cmps
loopne
push
push
shl
fwait
xchg
in
stos
loope
rcl
and
push
push
aaa
sbb
push
je
jp
in
jne
cmp
xchg
test
stos
loope
(bad)
pop
and
in
push
push
inc
xor
cmps
pop
aaa
lahf
jmp
dec
fisttp
mov
adc
in
stos
push
aaa
pop
fnstenv
adc
fwait
mov
out
fwait
xchg
je
jp
in
jne
cmp
xchg
neg
out
loope
(bad)
pop
and
in
push
push
inc
xor
cmps
pop
aaa
lahf
jmp
dec
ffreep
mov
adc
in
stos
push
aaa
pop
fnstenv
adc
js
jbe
loopne
push
pop
inc
in
aaa
cli
clc
jmp
in
xlat
fidivr
das
stos
loope
adc
cmp
cmp
lds
xchg
mov
stos
loopne
inc
mov
popf
repz
imul
cmp
in
stos
pop
aaa
adc
jp
in
jne
cmp
xchg
neg
stos
loope
(bad)
pop
and
in
push
push
inc
xor
cmps
pop
aaa
lahf
jmp
dec
fistp
loope
xchg
nop
adc
in
stos
push
aaa
pop
fnstenv
adc
xchg
cmps
pop
push
adc
jp
in
jne
cmp
xchg
not
(bad)
pop
and
in
push
push
inc
sbb
loope
adc
adc
lds
jbe
mov
mov
adc
in
stos
push
aaa
pop
fnstenv
adc
js
jbe
loopne
push
pop
inc
in
aaa
cli
mov
enter
cmp
stos
loope
adc
pop
pop
adc
lds
xchg
mov
stos
loopne
inc
mov
popf
repz
imul
sub
jbe
loopne
push
mov
in
add
test
(bad)
pop
and
in
push
push
inc
sbb
loope
adc
or
aaa
in
xchg
mov
stos
loopne
fwait
xchg
popf
xchg
mov
ds
pop
xchg
cmps
pop
aaa
jp
scas
jbe
mov
popf
repz
imul
adc
jbe
loopne
push
pop
inc
in
aaa
cli
sbb
enter
cmp
stos
loope
adc
adc
xchg
clc
loope
in
push
push
aaa
adc
fucom
adc
scas
clc
loope
in
push
imul
push
push
push
push
push
mov
in
add
add
stos
loope
stc
inc
fdiv
xchg
pop
aaa
adc
dec
xchg
mov
mov
cdq
sbb
adc
loope
sti
jge
aaa
adc
mov
fstp
mov
rcr
fwait
out
in
stos
loope
cdq
rol
enter
mov
fwait
adc
rcr
enter
mov
in
add
mov
stos
loopne
inc
fbld
enter
jb
aad
adc
push
push
rcr
clc
push
push
push
mov
and
in
push
xchg
out
cmp
enter
mov
in
loope
in
push
adc
stos
loop
aaa
adc
loope
in
fstp
push
aad
mov
aaa
aad
mov
in
stos
pop
aaa
adc
sub
xchg
in
stos
loope
cdq
rol
enter
mov
fwait
mov
out
fwait
xchg
xchg
mov
stos
loopne
inc
cmp
les
xchg
mov
stos
loopne
inc
fbld
enter
aaa
adc
out
pop
fidivr
xchg
adc
aaa
adc
fwait
out
stos
loope
cdq
ror
enter
mov
adc
push
test
out
in
xchg
mov
stos
loopne
fwait
xchg
popf
dec
out
push
adc
lahf
shl
enter
mov
in
add
paddsw
es
sbb
push
lahf
hlt
add
aaa
stc
jb
mov
stos
loopne
inc
fistp
addr16
ins
loope
sub
pop
retf
fwait
mov
out
fwait
xchg
popf
dec
out
push
adc
xchg
mov
xchg
mov
stos
loopne
inc
fistp
addr16
ins
loope
fstp
sbb
aaa
xchg
mov
popf
xchg
loop
loopne
adc
loope
inc
in
aaa
lahf
shl
enter
(bad)
cmp
aaa
xchg
nop
adc
push
idiv
adc
adc
out
cmp
enter
mov
stos
loopne
inc
cmp
lds
xchg
mov
stos
loopne
inc
mov
popf
repz
ffree
ss
push
aad
mov
in
stos
sbb
cdq
shl
enter
mov
stos
loopne
lahf
sar
mov
in
xlat
repnz
fwait
mov
xor
push
push
les
stos
loope
inc
stos
push
push
aaa
adc
loope
in
add
mov
adc
aaa
sbb
push
popf
xchg
mov
ffree
ss
mov
in
add
lahf
loope
push
mov
in
add
paddsw
aaa
adc
push
test
neg
push
lahf
fadd
push
push
aaa
lahf
sar
mov
in
add
paddsw
jb
push
test
neg
push
popf
xchg
mov
mov
je
cli
fnstenv
adc
xchg
hlt
adc
dec
in
stos
loope
adc
fwait
fwait
in
stos
loope
xchg
aam
leave
in
fstp
addr16
loope
enter
fild
(bad)
mov
push
push
aaa
loope
xchg
sub
enter
mov
adc
cdq
jmp
dec
mov
fwait
adc
mov
rcl
arpl
adc
push
adc
mov
loope
in
push
xchg
mov
stos
loopne
inc
cmp
les
xchg
mov
stos
loopne
inc
fbld
enter
aaa
adc
out
aad
mov
push
push
rcr
and
push
push
mov
fsub
leave
in
push
adc
lahf
shl
in
stos
dec
pop
adc
loope
xchg
fsub
leave
in
add
paddsw
ds
adc
aaa
sbb
push
js
scas
cmp
leave
in
pop
adc
xchg
jmp
push
cmp
fstp
addr16
loope
enter
retf
loope
(bad)
pop
xchg
lock
frstor
mov
rcl
mov
aaa
sbb
push
fnstenv
adc
fwait
mov
out
fwait
xchg
je
in
loope
enter
mov
stos
loopne
inc
cmp
lds
xchg
mov
stos
loopne
inc
mov
popf
repz
fst
mov
stos
pop
mov
push
push
inc
jmp
fwait
iret
in
stos
loope
cmps
xor
retf
fwait
pop
in
test
out
in
stos
xchg
mov
test
neg
jle
push
mov
pop
xchg
out
cmp
mov
stos
loopne
inc
cmp
lds
xchg
mov
stos
loopne
inc
mov
popf
repz
mov
fstp
mov
fsub
leave
in
push
push
cdq
rcl
mov
in
shl
mov
stos
loopne
sub
mov
in
stos
adc
cdq
shl
mov
fwait
mov
aam
rcl
hlt
cdq
sar
mov
in
shl
enter
mov
stos
loopne
sub
repnz
mov
test
enter
enter
inc
adc
stos
loope
xchg
xchg
and
push
xchg
mov
stos
loopne
inc
fild
enter
mov
stos
loopne
adc
adc
add
pop
in
add
mov
cld
jno
adc
mov
aaa
pop
xchg
mov
stos
loopne
inc
fild
enter
mov
stos
loopne
inc
fild
enter
mov
stos
loopne
inc
fild
enter
out
cmp
enter
mov
sti
call
inc
ins
fist
loope
call
ja
xor
addr16
cmp
adc
dec
inc
fnstsw
aad
cli
jb
add
mov
and
pop
retf
adc
cdq
sub
mov
addr16
outs
adc
cmp
aaa
xchg
nop
sbb
adc
call
mov
xchg
leave
adc
shl
push
test
enter
add
adc
adc
push
mov
mov
into
iret
das
pop
fbld
fwait
lods
jmp
mov
into
mov
xor
push
fnstenv
stos
loope
in
or
sbb
(bad)
jbe
push
aaa
adc
rcl
popa
inc
jmp
or
xchg
iret
and
jne
ds
pop
adc
adc
je
js
not
jne
push
mov
je
push
mov
aad
inc
hlt
inc
(bad)
mov
jo
popa
cdq
or
mov
pushf
jmp
mov
(bad)
push
push
mov
mov
push
aaa
fwait
pushf
jmp
mov
or
pop
aaa
mov
mov
adc
push
xchg
push
push
xchg
call
pushf
xchg
not
push
repnz
fnstenv
push
std
pop
aaa
push
push
push
aaa
fwait
movs
pop
mov
push
push
adc
adc
cmp
imul
mov
in
jo
mov
pop
dec
mov
adc
inc
adc
pop
sub
jne
fidiv
rcr
jb
push
sbb
mov
push
push
aaa
xchg
pop
push
cwde
push
push
pop
rcl
mov
push
push
aaa
in
pop
sahf
push
push
pop
inc
pop
cmc
repnz
pop
aaa
stc
push
loope
sub
pop
aaa
stos
mov
(bad)
mov
sti
inc
sbb
adc
push
ficomp
push
push
aaa
in
push
repz
push
call
aaa
add
sbb
sar
cmps
in
push
push
shl
pop
fistp
sti
pop
aaa
add
pop
sahf
push
push
mov
fidivr
stos
loope
in
push
cwde
push
push
sbb
gs
xor
aaa
xchg
mov
sahf
cmp
sti
pop
aaa
push
mov
call
aaa
sbb
sbb
sar
lahf
fisubr
push
cwde
push
push
push
xchg
push
std
pop
aaa
mov
scas
jbe
mov
call
aaa
adc
sbb
sar
lahf
fisubr
aaa
xchg
pop
push
cwde
push
push
pop
lock
mov
push
aaa
adc
(bad)
ss
(bad)
mov
push
push
cwde
push
push
sbb
adc
push
push
aaa
xchg
pop
push
cwde
push
push
sbb
fisub
mov
mov
push
push
fisubr
loope
in
push
repz
push
loope
sub
pop
aaa
xchg
mov
sahf
cmp
sti
pop
aaa
push
mov
mov
ss
ins
mov
adc
pop
pop
adc
fwait
adc
mov
mov
mov
aaa
adc
repnz
sbb
mov
push
push
aaa
mov
mov
adc
aas
mov
push
(bad)
push
push
aaa
mov
mov
adc
bsr
push
aaa
in
push
repz
push
popf
xor
sti
pop
aaa
adc
lahf
(bad)
jmp
push
es
push
push
sbb
aaa
and
mov
dec
mov
adc
adc
mov
push
push
adc
adc
dec
inc
xlat
out
ins
push
loope
xchg
rcl
adc
aaa
adc
das
fwait
push
aaa
adc
and
ss
icebp
push
push
sahf
cmp
sti
pop
aaa
push
mov
fidiv
mov
pop
aaa
adc
cwde
push
push
cmc
pop
in
push
es
push
push
xchg
jmp
pushf
xchg
not
push
pop
fadd
gs
jp
push
aaa
stos
cdq
push
aaa
adc
xchg
imul
push
repz
push
call
aaa
push
pop
call
adc
adc
(bad)
ss
fistp
movs
push
outs
xchg
cmp
adc
push
cmps
adc
adc
(bad)
xor
adc
or
push
push
aaa
sbb
push
sahf
dec
loope
imul
push
push
xchg
push
push
lahf
fidiv
fs
aaa
sbb
aam
aaa
adc
adc
aaa
adc
xchg
push
push
popf
or
pop
aaa
adc
or
dec
aam
lds
dec
mov
pop
mov
jle
sub
xor
sahf
cmp
sti
pop
aaa
xchg
in
mov
adc
fwait
adc
mov
cwde
push
mov
cmp
popf
xlat
adc
sub
xor
sahf
dec
loope
imul
push
push
xchg
push
push
sbb
adc
cmp
mov
push
aaa
stc
dec
xchg
(bad)
push
fisttp
cmp
fcomp
and
std
pop
aaa
in
push
adc
mov
push
push
pop
pop
mov
mov
push
movs
xchg
not
push
push
fmul
fucomp
jno
inc
adc
call
enter
ja
cmc
es
push
push
daa
xor
hlt
pop
aaa
pusha
(bad)
loope
push
pop
aaa
fwait
movs
aaa
out
mov
mov
ja
push
xchg
call
pushf
xchg
test
inc
add
mov
aad
sbb
push
push
pop
pop
sahf
pop
aaa
cli
xchg
jg
adc
fcomp
sahf
pop
aaa
inc
mov
mov
mov
aad
xor
push
push
dec
fbld
mov
adc
std
push
push
dec
fbstp
mov
adc
std
push
push
dec
fild
mov
adc
out
jmp
aaa
inc
mov
mov
push
not
repnz
inc
add
(bad)
jp
fwait
mov
out
fwait
xchg
loope
push
pop
aaa
jp
aam
adc
pop
lahf
inc
stos
or
push
push
lock
mov
lahf
(bad)
popa
push
aaa
xchg
xor
aaa
lahf
adc
jb
adc
aaa
adc
jnp
adc
(bad)
ss
mov
test
enter
jne
xlat
jnp
adc
sti
add
push
jmp
mov
adc
push
aaa
stos
test
mov
xchg
hlt
aad
ret
push
push
mov
adc
pop
xlat
in
push
repz
push
fnstenv
push
push
aaa
adc
cmc
(bad)
sub
push
loopne
aaa
adc
stos
push
xchg
out
and
mov
adc
mov
pop
fild
push
aaa
adc
xchg
jb
add
and
stc
pop
aaa
stos
jne
aaa
adc
xchg
hlt
lahf
adc
jb
add
aaa
js
je
js
loope
idiv
jb
add
inc
mov
pop
xchg
pop
fcomip
aaa
push
aaa
in
push
repz
push
je
in
and
pop
push
ds
addr16
mov
push
mov
shr
jle
adc
push
mov
addr16
jb
add
and
stc
pop
aaa
cdq
adc
fcomp
ffree
shl
pop
mov
dec
popf
frstor
mov
fstp
xchg
pop
retf
push
sbb
loop
push
mov
jb
mov
ret
test
jb
fstp
cdq
sbb
mov
out
das
in
add
mov
js
je
lahf
adc
addr16
adc
addr16
and
pop
adc
pop
ret
inc
ds
addr16
loope
and
pop
aaa
cdq
adc
fcomp
aad
adc
out
fstp
fwait
adc
(bad)
rol
xchg
rol
and
iret
adc
repz
push
loope
sbb
loope
pop
inc
mov
adc
(bad)
adc
dec
xchg
dec
mov
inc
add
addr16
xchg
push
stos
sbb
push
push
push
in
pop
test
sub
loope
adc
sbb
imul
pop
sbb
imul
sub
imul
daa
sbb
imul
mov
push
push
aaa
cdq
adc
mov
push
push
and
xchg
pop
enter
jb
pop
test
pop
xor
jne
pop
test
sub
fdivr
xchg
ret
push
aaa
adc
in
sbb
xchg
adc
fwait
scas
popf
fst
pop
test
add
fadd
fucom
mov
push
adc
cmp
mov
sbb
cli
push
push
aaa
or
adc
sbb
jg
pop
aaa
inc
mov
adc
push
(bad)
and
cwde
pop
aaa
inc
add
test
push
push
mov
in
fisttp
lahf
add
fst
jge
xor
lods
popf
fist
fstp
cdq
adc
mov
jmp
mov
adc
sbb
xchg
or
push
push
push
inc
sbb
mov
loope
push
pop
aaa
xchg
push
xchg
iret
pop
aam
xor
and
jmp
xor
xchg
iret
xchg
mov
sbb
fucom
mov
push
adc
inc
and
sbb
out
cli
push
sahf
or
imul
mov
(bad)
xlat
hlt
xor
inc
pop
aaa
adc
sub
imul
push
mov
push
sbb
dec
fucom
mov
push
sahf
or
imul
popf
fist
aam
xor
and
jmp
xor
mov
sbb
sti
push
push
aaa
addr16
(bad)
in
fisttp
lahf
add
fst
jge
ss
xor
inc
xchg
jae
push
pop
iret
xchg
mov
xchg
and
push
push
aaa
adc
and
adc
dec
mov
adc
imul
popf
fist
aam
xor
and
mov
xchg
push
xchg
iret
xchg
mov
sbb
das
and
or
push
push
aaa
push
and
adc
or
bound
(bad)
pop
push
in
clc
push
xchg
xor
push
push
aaa
adc
lahf
enter
aaa
sbb
stos
inc
imul
popf
fistp
pop
dec
pusha
in
push
repz
push
xchg
inc
sbb
sbb
sbb
lahf
enter
aaa
movs
lahf
enter
aaa
popa
inc
pop
mov
adc
aam
(bad)
fdivrp
push
push
aaa
xchg
xchg
adc
pop
sub
jne
pop
test
add
or
mov
push
push
leave
fucom
ss
outs
in
loope
in
push
repz
push
adc
adc
xor
push
push
xchg
xor
aaa
stc
pop
xchg
out
adc
loop
push
push
xchg
and
pop
retf
mov
mov
retf
pusha
mov
add
or
adc
mov
ret
ss
push
mov
xchg
(bad)
out
push
xor
push
mov
xor
popf
(bad)
in
fucomp
ss
call
xlat
div
fwait
adc
icebp
push
idiv
pop
mov
in
push
repz
push
popf
(bad)
in
jge
mov
ret
xor
mov
push
aaa
adc
dec
cmp
loope
pop
or
jne
mov
popf
repz
or
fist
inc
adc
push
idiv
dec
push
push
fs
add
(bad)
jmp
loope
xchg
mov
enter
int3
dec
push
push
or
push
push
mov
push
fdiv
adc
loope
xchg
push
repz
push
sbb
in
push
imul
loop
(bad)
std
stos
loope
cs
jp
push
push
pop
inc
or
mov
aaa
inc
adc
in
aam
xor
pop
aaa
adc
sbb
dec
pop
test
loope
loope
fwait
shl
sbb
cwde
pop
aaa
inc
mov
xchg
mov
fwait
push
mov
adc
in
fsubr
stos
jne
or
adc
lock
pop
aaa
inc
xchg
cld
xor
in
stos
loope
pop
add
jbe
mov
xchg
mov
fwait
push
or
mov
push
mov
cmps
icebp
enter
adc
push
push
aaa
sbb
stos
fdiv
adc
mov
shl
ds
push
push
push
cmp
pop
test
loope
loope
shl
dec
sahf
push
push
xchg
mov
in
push
repz
push
sahf
mov
mov
enter
mov
and
loope
fwait
rol
call
push
pop
aaa
cdq
ror
in
stos
xchg
in
mov
xchg
out
pop
push
push
ja
fstp
push
in
mov
push
aaa
inc
mov
xchg
icebp
xchg
mov
xchg
sub
lahf
hlt
adc
sub
jmp
rcr
fbstp
push
repz
push
popf
xchg
(bad)
mov
xchg
aaa
adc
in
push
push
enter
enter
out
int
loope
sbb
nop
adc
ss
xchg
xchg
mov
enter
mov
stos
loope
push
gs
enter
shl
xchg
add
loopne
iret
std
stos
loope
sbb
lahf
enter
aaa
pusha
mov
aaa
pusha
pop
xchg
out
pop
push
push
aaa
adc
fwait
mov
stos
loope
pop
aad
aaa
add
jmp
and
and
xchg
shl
fsubr
stos
push
aaa
adc
sahf
mov
enter
aaa
adc
(bad)
stos
loope
xchg
or
enter
dec
(bad)
push
push
enter
enter
outs
adc
adc
movs
shr
in
stos
(bad)
adc
or
xor
pop
aaa
fwait
shr
in
stos
popf
xchg
out
loope
adc
mov
std
stos
loope
lock
xchg
out
sar
sbb
fmul
(bad)
stos
loope
xchg
cld
xor
adc
loop
fcom
adc
in
shr
fsubr
stos
lahf
mov
mov
push
aaa
pusha
jecxz
xor
pop
aaa
xchg
jmp
push
inc
dec
cmp
cli
push
push
neg
dec
push
push
mov
in
fstp
xor
push
and
adc
mov
data16
fstp
mov
in
fisttp
mov
dec
sbb
jmp
mov
loope
cdq
ror
fwait
ror
mov
mov
enter
call
into
mov
enter
mov
mov
enter
jmp
stos
loope
mov
push
aaa
cdq
ror
call
scas
mov
enter
mov
mov
enter
call
into
mov
enter
call
sar
aaa
adc
je
cdq
shr
push
push
xchg
mov
sar
push
adc
loope
mov
push
cmp
(bad)
adc
xchg
jmp
stos
loope
lahf
add
in
fst
and
icebp
pop
aaa
sbb
stos
loope
lock
xchg
and
je
ja
fisttp
pop
adc
inc
mov
xchg
mov
mov
enter
mov
push
push
aaa
xchg
sub
aaa
sbb
push
xchg
mov
mov
push
or
push
push
aaa
pop
sahf
dec
sbb
mov
push
push
aaa
sti
dec
pop
aaa
adc
fwait
ret
std
stos
loope
push
push
pop
aaa
adc
in
fstp
push
fstp
icebp
xchg
test
call
stos
ror
stos
loope
loop
sahf
movlps
ss
xchg
ins
push
inc
or
out
mov
push
sahf
movlps
or
xchg
ins
push
inc
sbb
out
mov
push
sahf
movlps
pop
jns
cdq
loope
push
pop
aaa
sbb
stos
loope
lock
xchg
add
(bad)
enter
xchg
int3
stos
loope
sbb
push
push
aaa
addr16
xchg
xor
push
push
aaa
adc
test
adc
xor
stos
cmc
mov
mov
jmp
movs
xchg
and
mov
enter
mov
test
add
call
loope
adc
push
push
aaa
adc
xchg
push
push
aaa
addr16
sahf
or
push
push
aaa
adc
xchg
push
push
aaa
addr16
sahf
or
push
push
aaa
adc
push
mov
mov
imul
sahf
dec
sbb
sub
stos
loope
in
loope
call
(bad)
mov
enter
enter
cmp
stos
push
inc
push
xlat
mov
aaa
cdq
shr
in
stos
(bad)
adc
(bad)
idiv
push
(bad)
adc
retf
cdq
ror
(bad)
stos
loope
push
inc
loope
out
loope
xchg
jmp
push
xor
push
ins
out
push
repz
push
neg
out
stos
loope
xchg
cmps
icebp
enter
adc
push
push
aaa
sbb
stos
inc
imul
popf
fld
pop
dec
pusha
cdq
or
lock
test
sub
out
hlt
or
adc
arpl
lahf
popa
data16
push
push
cmps
adc
mov
pop
retf
fwait
xchg
pop
cmc
fwait
add
mov
fwait
cdq
pop
aaa
stos
pop
push
aaa
adc
xchg
add
push
push
aaa
adc
xchg
cmc
cmp
and
mov
scas
pop
mov
test
das
adc
call
push
adc
pop
mov
xor
pop
sahf
jb
push
sahf
dec
call
adc
cmps
xor
push
lods
push
fisub
push
adc
pop
mov
mov
push
push
aaa
xchg
cmp
aaa
ds
push
mov
scas
pop
cmp
push
aaa
outs
cmp
adc
push
mov
adc
xor
adc
mov
inc
test
adc
sbb
scas
sbb
xlat
out
outs
push
sahf
jb
push
adc
adc
mov
push
imul
adc
xor
adc
mov
inc
test
adc
push
or
push
sahf
jb
push
lahf
pop
out
dec
js
adc
xor
mov
adc
push
push
es
push
aam
int3
push
aam
into
adc
arpl
sbb
stos
loope
push
lods
push
fadd
sbb
or
adc
pop
int3
adc
pop
mov
lods
sbb
fistp
fwait
adc
mov
(bad)
pop
repz
adc
cmp
push
inc
push
aam
int3
adc
jb
or
fist
dec
fs
add
pop
jp
xchg
out
in
xchg
jb
fstp
pop
in
push
push
aaa
inc
ds
fistp
add
aaa
fwait
movs
popf
(bad)
in
adc
or
push
imul
xchg
cmc
cmp
push
fdiv
push
push
fcom
popf
enter
(bad)
pusha
or
aaa
in
xchg
jb
fstp
push
inc
(bad)
(bad)
push
je
aaa
cli
imul
fmul
add
lods
jmp
call
xchg
mov
xchg
inc
push
add
inc
sbb
fwait
aaa
repnz
loope
cli
gs
aaa
adc
fwait
aaa
repnz
loope
cli
inc
push
aaa
adc
fisub
fwait
lods
aaa
iret
fwait
xchg
das
rcr
inc
imul
add
mov
pushf
pusha
aaa
adc
push
pop
adc
test
dec
mov
inc
add
addr16
push
sub
xchg
je
jp
push
aaa
adc
sbb
pop
adc
in
and
fbld
add
aaa
fwait
xchg
popf
leave
in
and
mov
pop
push
inc
adc
pop
cmp
xor
aaa
adc
fdiv
push
popa
cli
dec
dec
aaa
adc
fisttp
in
xchg
jb
fstp
mov
inc
ds
(bad)
pop
push
aaa
fwait
adc
mov
aad
push
mov
pop
push
inc
sbb
pop
cmp
fstp
fwait
adc
enter
enter
ffreep
pop
push
aaa
inc
mov
xchg
jb
mov
stc
mov
dec
or
rol
xchg
rol
dec
pusha
lods
jecxz
fsub
fnstenv
xor
cmp
aaa
adc
js
je
jp
push
aaa
shr
dec
aaa
adc
fdivr
aad
loopne
addr16
das
idiv
add
push
je
inc
mov
lahf
lock
cmp
aaa
cdq
adc
mov
push
aam
adc
out
sar
push
mov
in
and
popa
cli
cdq
dec
aaa
adc
push
mov
adc
les
dec
fild
mov
lahf
fsub
push
aaa
stos
push
push
aaa
adc
inc
ins
fist
dec
popa
inc
jmp
and
popa
xchg
iret
and
aaa
adc
xchg
lock
jbe
adc
push
ds
pop
adc
aaa
adc
adc
xchg
stos
loope
push
gs
and
sbb
adc
push
popa
cli
mov
out
jmp
retf
inc
stos
imul
and
popa
cli
imul
inc
push
push
mov
aad
fidiv
or
hlt
inc
(bad)
inc
add
addr16
fnstenv
pop
js
pmullw
and
aaa
and
fdiv
rcr
dec
retf
and
sbb
adc
(bad)
inc
stos
imul
adc
outs
bound
push
jbe
loopne
push
fbstp
aaa
xchg
nop
push
push
leave
mov
add
popa
in
jne
mov
popf
repz
and
mov
and
loope
sbb
and
adc
sbb
push
push
jo
sub
dec
loop
jbe
loopne
push
fisttp
push
aaa
xchg
nop
push
push
inc
(bad)
inc
pop
dec
pusha
cdq
or
mov
out
and
push
in
(bad)
jb
push
jmp
iret
fwait
adc
pop
sub
dec
aaa
adc
adc
daa
cmps
pop
aaa
cli
or
push
ins
jmp
retf
mov
push
aaa
jp
in
jne
mov
inc
push
inc
(bad)
mov
fs
popa
inc
out
push
push
fs
push
shl
pop
jmp
xchg
js
push
mov
aaa
xchg
xor
aaa
xchg
xor
aaa
xchg
xor
aaa
lahf
sub
mov
adc
sbb
xchg
xchg
cmps
lahf
inc
adc
add
xor
aad
push
xchg
jb
pop
test
enter
les
push
aaa
sbb
loop
xor
xlat
fisubr
adc
repnz
stos
sbb
push
xlat
jae
adc
mov
fstp
mov
stos
pop
mov
stos
push
inc
ret
fistp
sbb
adc
fdivr
fstp
cmp
sbb
xchg
xchg
add
push
mov
imul
cmp
xor
adc
xchg
hlt
xchg
cmp
ss
sub
aaa
addr16
cmps
rcr
push
shl
pop
out
fwait
xchg
xchg
jb
pop
test
cmp
xchg
jae
adc
inc
mov
cwde
rcl
rcr
jg
fistp
mov
jb
push
pop
rcr
adc
mov
inc
push
aaa
out
jecxz
aad
sti
fdiv
push
mov
mov
icebp
fstp
fwait
xchg
xchg
jb
pop
test
aas
sbb
test
jb
fistp
stc
push
xchg
out
and
(bad)
shl
cmps
add
(bad)
adc
sub
cmps
push
push
mov
adc
cmps
add
inc
cmp
mov
add
ja
les
cmps
add
ja
les
cmps
add
push
retf
cmps
and
cmps
add
(bad)
adc
les
mov
adc
cmps
add
inc
push
les
cmps
add
mov
push
mov
add
inc
inc
mov
add
push
sti
fstp
retf
jle
add
cmps
jne
push
aaa
adc
add
cmps
pop
and
les
daa
sub
push
cmps
cdq
dec
mov
push
les
cmps
add
and
les
cmps
add
cld
add
cmps
outs
mov
popf
neg
les
cmps
add
inc
les
fisub
inc
pop
aaa
dec
lds
pusha
xor
je
xchg
pop
aaa
jmp
pop
shl
cmps
add
(bad)
adc
cmp
cmps
add
push
adc
aaa
add
inc
inc
les
cmps
push
push
mov
cmp
add
push
rol
cmps
add
add
mov
and
cmps
add
cmps
or
add
mov
xchg
je
gs
add
ss
cmps
add
(bad)
adc
aaa
add
inc
inc
les
les
mov
cmp
add
push
rol
cmps
add
add
mov
and
cmps
add
cmps
or
add
mov
adc
and
add
ss
cmps
add
push
add
cmps
xor
or
test
xchg
rcl
add
jb
out
sub
imul
mov
out
cmp
ret
adc
adc
stc
push
jb
adc
pop
aas
adc
enter
mov
in
push
imul
adc
aaa
stc
jle
add
push
mov
ins
push
push
mov
loop
enter
out
mov
pop
(bad)
mov
dec
leave
cdq
adc
mov
pusha
inc
and
inc
xchg
jb
push
out
ja
loop
cmp
push
mov
push
push
and
adc
add
pop
aas
adc
sbb
lahf
hlt
dec
and
jbe
adc
push
mov
push
aaa
sbb
fistp
adc
add
push
adc
cmp
jb
add
jb
push
out
addr16
or
adc
ficom
fwait
mov
aam
adc
mov
je
pop
ret
sbb
ins
fdivr
nop
pop
loope
in
or
fist
repnz
dec
mov
mov
idiv
push
push
lea
push
sbb
sar
aam
call
jge
mov
call
mov
fist
push
aaa
addr16
das
idiv
push
sbb
adc
out
push
loop
fdivr
addr16
test
mov
pop
xchg
hlt
sbb
aaa
sbb
mov
mov
push
push
xor
jne
(bad)
js
sub
pusha
sbb
mov
enter
cli
push
push
xchg
call
push
push
dec
fild
je
fwait
mov
aaa
adc
mul
fst
adc
fisubr
mov
shl
fstp
stc
inc
lahf
fld
sbb
aaa
fwait
mov
jecxz
push
push
push
add
pop
retf
push
cmc
sar
push
push
sbb
aaa
sub
loop
retf
cmc
(bad)
cli
push
push
xchg
jb
mov
pop
iret
cdq
inc
(bad)
cli
push
push
das
daa
fwait
movs
pop
(bad)
fwait
xchg
popf
jb
push
mov
xor
mov
jne
ins
pop
iret
pusha
(bad)
div
push
push
mov
pop
push
push
mov
in
fstp
cmp
pop
leave
mov
adc
lock
push
push
fisttp
push
aaa
fwait
adc
fild
push
aaa
cdq
sub
cmp
jecxz
div
inc
pop
loopne
imul
ja
call
(bad)
xor
nop
shl
add
mov
mov
pop
mov
mov
fwait
movs
jmp
mov
push
mov
pop
aaa
and
out
mov
xor
test
jne
ins
pop
ret
pusha
cmp
push
movs
cmc
es
mov
xlat
fist
push
push
add
pop
(bad)
push
cmc
(bad)
cli
push
push
sbb
aaa
sub
out
inc
int
shl
shl
pop
test
std
test
mov
push
push
xchg
cmp
cdq
pop
aaa
fwait
pop
and
in
imul
das
pushf
shl
pop
test
std
test
mov
push
push
xchg
cmp
cdq
pop
aaa
fwait
pop
and
outs
mov
jae
or
jb
add
out
adc
cli
push
push
dec
fisttp
nop
push
pop
adc
push
pop
adc
push
pop
adc
aaa
adc
inc
sbb
jb
aad
cwde
inc
push
push
pop
adc
pop
fild
imul
stos
imul
add
adc
push
aaa
adc
imul
loop
clc
mov
and
hlt
inc
(bad)
mov
dec
sbb
adc
dec
pusha
lods
sti
push
push
xor
cmp
jmp
retf
xchg
icebp
xchg
push
repz
push
mov
adc
in
movs
pop
aaa
xchg
mov
imul
sbb
fstp
sar
in
shr
into
outs
fwait
xchg
popf
lock
fucom
mov
in
fucomp
ss
fdiv
push
stos
pop
fdivr
jbe
adc
outs
stos
movs
in
ss
data16
xchg
jmp
imul
dec
aaa
std
fwait
test
rcl
fcom
shl
in
stos
loope
push
stos
pop
mov
fs
fdiv
adc
cmc
in
pop
inc
sbb
fwait
xor
stos
loope
aam
sbb
in
stos
sub
loop
out
mov
in
stos
loope
jp
scas
jne
cmp
(bad)
push
push
xchg
mov
test
adc
push
je
js
je
js
je
jp
push
aaa
push
fstp
addr16
std
push
aaa
adc
fwait
ret
out
stos
loope
addr16
cmps
mov
cli
mov
adc
fdivr
push
push
pop
adc
fwait
(bad)
out
stos
loope
jp
add
adc
cli
push
push
loope
out
loope
cli
push
push
aaa
adc
loope
mov
aaa
in
push
repz
push
dec
pop
iret
movs
pop
aaa
lahf
shl
leave
in
stos
dec
fild
les
push
xchg
mov
test
ret
push
xchg
mov
stos
loope
inc
cmp
aaa
adc
idiv
push
push
enter
jne
cmp
(bad)
push
push
jbe
jecxz
push
mov
in
add
aaa
adc
ds
push
aaa
stos
cmps
outs
aaa
adc
jecxz
in
fstp
fs
out
jne
cmp
(bad)
push
push
jbe
adc
sbb
xchg
nop
dec
push
inc
(bad)
mov
inc
dec
popa
inc
fild
lods
test
loopne
aad
mov
pop
sub
jne
fucom
shl
pop
ret
fwait
xchg
popf
push
out
push
xchg
jb
add
jb
add
aaa
jp
push
cmp
ds
pop
adc
push
enter
inc
sbb
retf
push
shl
pop
(bad)
fwait
xchg
xchg
(bad)
xchg
pushf
loope
xchg
push
xchg
jb
stos
imul
ds
pop
adc
loop
call
and
(bad)
push
push
aaa
xchg
mov
inc
imul
dec
mov
or
xchg
mov
loope
push
mov
je
inc
stos
imul
and
enter
inc
sbb
repz
inc
hlt
inc
(bad)
pusha
lods
and
adc
fnstcw
push
push
pop
push
sbb
addr16
loope
push
stos
imul
pop
push
aaa
adc
fisubr
stc
push
lahf
lock
push
aaa
dec
or
bound
add
(bad)
fild
aaa
in
xchg
jb
fstp
mov
or
iret
inc
fstp
inc
ds
pop
adc
sbb
js
je
js
loope
push
stos
imul
inc
push
aaa
adc
inc
push
gs
das
stos
imul
and
enter
aaa
in
and
enter
adc
push
shl
adc
addr16
rcr
push
sar
neg
pop
push
push
(bad)
in
push
aaa
in
xchg
jb
fstp
push
rcl
(bad)
rol
xchg
rcl
fild
cdq
adc
push
fwait
adc
mov
mov
iret
fwait
xchg
cmps
xor
fstp
fwait
xchg
fdiv
adc
pop
retf
inc
cmp
aaa
adc
in
and
enter
xchg
pop
push
push
shl
sbb
sar
dec
popa
js
je
in
and
enter
movs
pop
push
push
shl
adc
addr16
pop
pop
push
push
push
sar
out
aad
imul
or
adc
jb
or
rol
xchg
rcl
jmp
push
retf
iret
and
fist
push
inc
cmp
fild
aaa
fwait
adc
(bad)
hlt
xor
aaa
in
xchg
jb
fstp
xchg
adc
inc
cmp
push
aaa
jp
push
aaa
adc
push
pop
adc
push
pop
jae
pop
aaa
cli
pop
push
aaa
adc
push
fist
xchg
into
adc
imul
xchg
cmc
and
xchg
loope
adc
aaa
adc
pop
retf
dec
or
hlt
inc
(bad)
stos
in
push
fistp
(bad)
shl
pop
retf
fwait
xchg
xchg
jb
(bad)
push
jecxz
push
mov
fs
push
aaa
fist
repnz
inc
add
addr16
xchg
push
xchg
pop
retf
mov
sub
push
push
mov
cs
inc
and
out
retf
(bad)
adc
enter
mov
pop
xchg
iret
cmp
xor
test
push
aaa
fwait
lods
popf
not
mov
pop
mov
push
inc
rcr
inc
cmp
and
adc
cmp
jmp
cs
adc
icebp
adc
cmp
ja
xchg
jb
fstp
fwait
mov
pop
fucomp
ss
or
mov
fwait
xchg
das
cmc
fwait
add
ds
and
mov
in
and
fild
push
aaa
cdq
adc
mov
inc
test
out
adc
and
push
lods
xchg
jb
mov
out
mov
dec
popf
frstor
mov
fstp
pop
dec
pusha
cdq
or
lock
movs
ficomp
loop
pop
fistp
mov
pop
mov
xchg
jb
fstp
out
xlat
fnstcw
inc
ds
fucomip
adc
aaa
fwait
adc
mov
movs
jno
adc
stc
inc
adc
arpl
inc
sbb
xor
xlat
out
inc
call
inc
div
fnstenv
push
push
fcomp
test
or
fucom
mov
push
push
aaa
mov
fcom
fucom
mov
push
push
aaa
test
repnz
mov
xchg
vpmadd52luq
xor
dec
pop
dec
movs
pop
aaa
inc
mov
popf
repz
xor
jb
pop
test
iret
pusha
sti
xchg
jb
fstp
fwait
adc
shl
jb
fstp
cdq
adc
push
inc
(bad)
(bad)
pop
push
sbb
cli
mov
aaa
adc
dec
pusha
lods
loopne
mov
aad
out
push
push
mov
mov
popf
xchg
(bad)
stos
jecxz
adc
out
push
loop
fdivr
in
add
inc
push
mov
popf
repz
fnstsw
leave
and
push
sar
popf
mov
stos
loopne
adc
or
aaa
adc
fimul
push
aaa
fwait
movs
das
(bad)
fwait
xchg
loope
push
mov
xchg
mov
stos
jecxz
stos
dec
push
aaa
adc
loope
xchg
and
in
fbld
pop
scas
mov
retf
xchg
mov
lahf
call
push
pusha
js
test
loope
in
aad
imul
enter
xor
push
push
fild
push
aaa
cdq
adc
mov
in
fstp
mov
stos
pop
mov
push
push
inc
jmp
fstp
fisttp
ss
stos
loope
(bad)
pop
lahf
icebp
mov
out
jne
stos
imul
mov
fidivr
jp
out
jne
stos
stos
retf
in
stos
loope
movs
adc
aaa
xchg
nop
push
fild
push
aaa
adc
jmp
dec
add
les
loope
out
stos
loopne
cli
loope
aaa
adc
fidivr
cli
and
adc
adc
jmp
in
outs
ja
push
jno
push
aaa
mov
loop
in
stos
dec
pop
sub
pop
aaa
inc
mov
popf
repz
lock
push
push
fbld
push
aaa
stos
pop
push
aaa
adc
jmp
dec
add
les
loope
out
stos
loopne
cli
add
adc
fidivr
jp
out
jne
stos
stos
retf
in
stos
loope
push
adc
aaa
xchg
nop
push
fucomip
adc
aaa
stos
pop
push
aaa
adc
jmp
dec
add
les
loope
out
stos
loopne
cli
dec
pop
aaa
adc
fidivr
xchg
xchg
icebp
jge
push
mul
push
push
push
mov
push
push
aaa
mov
arpl
xchg
pop
aaa
adc
jge
adc
jmp
xchg
mov
stos
loopne
inc
cmp
(bad)
push
push
dec
fild
push
enter
and
xchg
test
leave
in
add
push
jecxz
push
addr16
cmc
pop
aaa
adc
fisub
xchg
xchg
rcl
test
mov
push
push
aaa
mov
arpl
dec
in
jne
stos
stos
retf
in
stos
loope
mov
push
aaa
xchg
nop
push
pop
sbb
loop
in
stos
div
(bad)
pop
div
push
mov
push
push
aaa
mov
arpl
dec
in
jne
stos
stos
retf
in
stos
loope
jo
push
aaa
xchg
nop
push
mov
jb
aaa
adc
sub
loopne
cli
sbb
fidivr
cli
push
pop
aaa
adc
adc
adc
jmp
in
outs
ja
les
push
mov
push
aaa
mov
loop
in
stos
dec
pop
sub
pop
aaa
inc
mov
popf
repz
out
push
loop
fcomp
fcom
push
aaa
stos
mov
jmp
(bad)
push
push
xchg
mov
stos
jecxz
inc
mov
xchg
mov
stos
jecxz
inc
stos
imul
shl
enter
pop
ret
aaa
inc
mov
popf
repz
cmp
in
popf
int
sub
aaa
stos
aaa
push
aaa
adc
jmp
retf
in
stos
loope
jp
out
jne
add
inc
push
push
push
mov
inc
lahf
icebp
mov
push
aaa
cli
add
adc
adc
jmp
in
outs
inc
jbe
loope
push
enter
leave
in
mov
popf
repz
cmp
in
popf
int
sub
aaa
in
loope
enter
jl
push
push
mov
pop
div
push
push
push
mov
push
push
aaa
mov
arpl
dec
in
jne
stos
stos
retf
in
stos
loope
xor
push
aaa
xchg
nop
push
mov
and
aaa
adc
(bad)
push
push
loope
push
fistp
addr16
out
jne
add
call
(bad)
inc
test
push
push
aaa
mov
arpl
lahf
out
jne
stos
stos
retf
in
stos
loope
int3
pop
push
aaa
xchg
nop
push
mov
xchg
cwde
loope
in
fstp
fistp
push
aaa
adc
jmp
dec
add
les
loope
out
stos
loopne
cli
stc
pop
aaa
adc
fidivr
cli
cmp
adc
adc
jmp
in
outs
ja
pusha
push
push
push
mov
push
aaa
mov
loop
in
stos
dec
pop
sub
pop
aaa
inc
mov
popf
repz
arpl
adc
mov
push
push
mov
pushf
loope
in
push
imul
push
push
icebp
xchg
push
push
enter
(bad)
cmp
enter
fsubr
fwait
(bad)
in
test
loope
in
outs
fwait
iret
in
stos
loope
imul
jmp
enter
icebp
cdq
jmp
sbb
enter
or
lods
cmps
sub
in
popf
cmc
jae
xchg
iret
stos
dec
push
aaa
adc
push
fcmovnbe
sbb
aad
mov
loope
in
(bad)
mov
xor
push
enter
ins
jecxz
push
mov
in
add
cwde
push
push
push
mov
inc
loope
(bad)
stos
jecxz
xchg
jmp
sahf
aaa
adc
arpl
jmp
fstp
addr16
shl
enter
pop
jbe
pop
aaa
inc
mov
popf
repz
or
rcr
stos
xchg
icebp
cli
adc
in
adc
adc
jmp
in
outs
inc
jbe
loop
push
enter
leave
in
mov
popf
repz
cmp
in
popf
int
sub
aaa
in
loope
enter
or
push
mov
pop
test
push
push
mov
push
push
aaa
mov
arpl
dec
in
jne
stos
stos
retf
in
stos
loope
or
push
aaa
xchg
nop
push
mov
pushf
loope
in
aam
aaa
adc
loope
xchg
lods
loope
in
ins
fwait
(bad)
in
test
loopne
in
fstp
mov
aam
cdq
adc
push
fstp
fiadd
push
aaa
xchg
jmp
push
cmp
aad
sti
and
push
dec
sbb
ficom
xchg
lods
loope
in
pop
popf
adc
xchg
lods
loope
in
fstp
enter
outs
loop
push
mov
in
add
pop
push
push
push
mov
pop
xchg
mov
xchg
pushf
loope
xchg
push
xchg
lock
mov
mov
xchg
nop
loope
in
fistp
mov
adc
fwait
std
in
test
jmp
push
jmp
lods
loope
xchg
nop
sbb
in
stos
stos
ret
in
stos
loope
addr16
loope
loop
jecxz
cdq
shl
enter
pop
jbe
pop
aaa
inc
mov
popf
repz
out
push
loop
fcomp
aam
push
aaa
stos
pop
push
aaa
adc
jmp
dec
add
(bad)
push
push
loope
out
stos
loopne
cli
mov
aaa
adc
fidivr
cli
cmc
pop
aaa
adc
adc
adc
jmp
in
outs
inc
jbe
loop
push
enter
leave
in
mov
popf
repz
cmp
in
popf
int
sub
aaa
in
loope
enter
lods
push
push
push
mov
pop
xchg
(bad)
cmp
enter
xor
push
push
enter
leave
in
fstp
addr16
loope
enter
(bad)
mov
adc
in
pop
fidivr
xchg
shl
enter
(bad)
push
push
loope
out
stos
loopne
cli
sbb
adc
fidivr
cli
pop
pop
aaa
adc
adc
adc
jmp
in
outs
inc
jbe
loop
push
enter
leave
in
mov
popf
repz
out
ss
fcomp
int3
imul
stos
pop
push
aaa
adc
jmp
dec
add
sub
loopne
cli
test
fidivr
cli
in
and
adc
adc
adc
jmp
in
outs
inc
jbe
loope
push
enter
leave
in
mov
popf
repz
(bad)
push
push
loope
out
stos
loopne
cli
xchg
and
adc
fidivr
stos
aas
adc
adc
loope
in
fstp
fbld
push
aaa
stos
pop
push
aaa
adc
jmp
dec
xor
push
adc
in
dec
mov
in
add
jecxz
push
pusha
cli
or
aaa
adc
fisub
cli
imul
aaa
adc
jmp
in
outs
inc
jbe
loop
push
enter
leave
in
mov
popf
repz
cmp
in
popf
int
sub
aaa
in
loope
enter
add
pop
xchg
(bad)
in
xchg
mov
stos
jecxz
fwait
xchg
not
sub
push
mov
push
push
aaa
mov
arpl
dec
in
jne
stos
stos
retf
in
stos
loope
adc
push
aaa
xchg
nop
push
(bad)
push
aaa
stos
pop
push
aaa
adc
jmp
dec
xor
push
adc
in
dec
mov
in
add
jecxz
push
pusha
cli
stc
and
adc
fisub
jp
out
jne
stos
stos
retf
in
stos
loope
lods
push
aaa
xchg
nop
push
mov
aam
push
adc
adc
in
popf
int
sub
aaa
in
loope
enter
movs
sub
push
mov
pop
jbe
loop
push
enter
leave
in
mov
popf
repz
cmp
in
popf
int
sub
aaa
in
loope
enter
ins
sub
push
mov
pop
jbe
loop
push
enter
leave
in
mov
popf
repz
push
push
adc
fwait
rcr
enter
icebp
cli
mov
adc
adc
jmp
in
outs
inc
jbe
loope
push
enter
leave
in
mov
popf
repz
fwait
jmp
cdq
shl
enter
pop
adc
or
push
popf
repz
cmp
in
popf
int
sub
aaa
in
loope
enter
in
push
push
mov
pop
xchg
(bad)
adc
jne
stos
stos
retf
in
stos
loope
test
push
aaa
xchg
nop
push
fbld
aaa
stos
pop
push
aaa
adc
jmp
dec
add
les
loope
out
stos
loopne
cli
shl
adc
fidivr
cli
add
div
push
xchg
jmp
leave
mov
inc
cmp
adc
xchg
mov
stos
loopne
inc
cmp
fcom
dec
fist
aaa
xchg
nop
push
mov
aam
or
push
cmps
cmp
in
popf
int
sub
aaa
in
loope
enter
or
push
push
mov
pop
jbe
std
push
push
enter
leave
in
mov
popf
repz
cmp
in
popf
int
sub
aaa
in
loope
enter
xor
push
push
mov
pop
lahf
fld
push
aaa
cli
jmp
adc
adc
jmp
in
outs
ja
pushf
cs
push
mov
push
aaa
mov
loop
in
stos
dec
pop
sub
pop
aaa
inc
mov
popf
repz
fcom
loope
out
stos
loopne
cli
in
and
adc
fidivr
js
je
js
je
js
jbe
adc
addr16
test
push
mov
in
fucomp
ss
fmul
cmps
test
leave
in
mov
je
lahf
jmp
dec
addr16
loope
enter
cmp
jecxz
cli
lds
aaa
adc
loope
cmp
in
loope
enter
in
push
push
(bad)
gs
push
aaa
in
xchg
mov
stos
jecxz
fwait
xchg
dec
fild
repnz
cmp
shl
icebp
dec
or
rol
xchg
rcl
push
dec
mov
dec
mov
rcr
stos
xchg
lock
loope
stc
outs
xchg
iret
cmp
enter
fcom
xchg
mov
stos
loope
inc
mov
je
jp
icebp
jne
fstp
addr16
push
aaa
xchg
mov
popf
repz
aam
enter
enter
mov
jbe
std
push
push
pop
pop
mov
push
aaa
xchg
mov
jbe
cld
push
push
pop
enter
jp
lock
cmp
aaa
adc
imul
std
stos
loope
(bad)
je
iret
and
bound
push
push
aaa
inc
add
pop
adc
pop
stos
inc
push
mov
in
fstp
mov
enter
push
xchg
jb
aam
ss
push
xchg
mov
test
push
mov
adc
sahf
test
xor
das
in
fwait
xchg
popf
icebp
pop
add
push
inc
pop
xchg
arpl
push
pop
mov
in
fucom
push
jmp
aaa
adc
fwait
dec
out
stos
loope
cmps
hlt
jecxz
in
mov
xchg
bound
fist
mov
inc
push
pop
jne
rol
add
push
aaa
fwait
shr
in
stos
loope
mov
loope
cli
push
es
adc
fwait
inc
out
stos
loope
cmps
int3
jecxz
in
mov
xchg
bound
fist
mov
lahf
and
enter
cmp
adc
xchg
mov
stos
push
adc
adc
jecxz
in
fstp
pop
push
mov
sub
adc
fwait
mov
jmp
pop
adc
fwait
xchg
out
stos
loope
cli
pop
and
adc
fistp
push
aaa
jp
pop
aaa
adc
fwait
sub
loope
jp
lock
cmp
fst
jbe
adc
jg
loope
xchg
nop
cmp
shl
or
aaa
adc
fisubr
push
aaa
xchg
mov
test
stos
loope
jmp
adc
out
stos
loope
inc
fstp
addr16
xor
stos
mov
cmps
(bad)
stos
stos
mov
cmps
fsub
enter
scas
out
stos
loope
cmps
hlt
jecxz
in
add
enter
(bad)
in
stos
popf
repz
fwait
stos
out
stos
loope
shl
or
aaa
adc
out
jmp
xor
cld
push
push
mov
in
add
xchg
sub
jmp
sub
loope
lahf
shl
leave
in
stos
dec
fistp
pusha
icebp
enter
mov
stos
loope
jmp
pop
adc
fwait
(bad)
in
stos
loope
cli
pop
daa
aaa
adc
fisubr
fwait
lods
das
iret
fwait
xchg
fnstenv
push
push
push
aaa
aad
cli
leave
in
stos
pop
aaa
adc
xchg
mov
push
mov
xchg
cmp
enter
mov
shl
enter
sub
fucomip
stos
loope
adc
out
jmp
enter
jle
stos
loope
lahf
sar
mov
in
add
aaa
js
je
js
je
js
xchg
mov
stos
loope
inc
ds
(bad)
popa
push
aaa
sbb
aaa
in
loope
retf
imul
std
inc
xor
adc
loope
add
lock
fstp
addr16
lds
aaa
adc
fisub
aam
jns
in
stos
push
fdivr
push
mov
in
add
inc
cld
push
push
fistp
bound
aaa
fwait
xchg
pop
mul
jbe
adc
inc
popa
push
aaa
xchg
sar
in
stos
pop
mov
in
push
lds
cmp
dec
adc
daa
push
push
mov
or
aaa
adc
mov
aaa
pop
jbe
loop
push
fisttp
popa
push
aaa
jp
pop
aaa
adc
fwait
retf
in
stos
loope
inc
mov
je
jp
lock
fstp
addr16
adc
enter
cmp
stos
loope
adc
cmp
push
cmc
sub
stos
push
mov
or
aaa
adc
jecxz
in
push
lahf
lock
aas
push
aaa
lahf
shr
fild
push
aaa
fwait
lods
jmp
retf
xchg
lock
mov
je
in
loope
retf
not
jmp
xchg
out
stos
loope
nop
addr16
aaa
cdq
rol
imul
xchg
rcl
add
push
jne
xchg
iret
in
xchg
jb
fstp
pop
mov
jb
fstp
enter
cwde
es
push
mov
in
stos
imul
cmc
sub
adc
fcom
add
mov
push
mov
push
fistp
xchg
js
inc
mov
push
aaa
fwait
xchg
js
inc
mov
push
aaa
sbb
jecxz
retf
adc
out
jecxz
ret
lahf
adc
pop
inc
ds
fild
xchg
lahf
lock
and
aaa
and
mov
call
addr16
movs
pop
addr16
lds
aaa
adc
fidivr
in
and
mov
inc
mov
xchg
iret
adc
cmp
push
sbb
mov
loope
add
jb
fstp
pop
pop
test
daa
adc
call
sbb
adc
xor
test
add
jae
push
dec
(bad)
gs
aaa
lahf
adc
addr16
dec
pop
mov
pop
aaa
js
je
cli
test
mov
aad
loope
cli
sub
pop
iret
inc
add
xor
push
push
popa
cli
gs
adc
out
jmp
imul
cmps
jg
push
push
fild
push
aaa
inc
add
dec
pop
mov
(bad)
aaa
in
xchg
mov
mov
enter
iret
fwait
xchg
fnstenv
push
dec
push
aaa
lahf
shl
mov
in
add
push
cld
push
push
fild
pop
neg
push
xchg
iret
cmp
rep
loope
jo
push
aaa
xchg
nop
push
shl
pop
enter
enter
cmp
push
das
aaa
adc
out
jmp
push
aad
mov
sub
push
lahf
lock
push
aaa
lahf
shl
mov
in
add
fist
push
aaa
sbb
rep
loope
sbb
push
aaa
xchg
nop
push
shl
pop
enter
enter
cmp
stc
cs
adc
out
jmp
cmp
(bad)
das
idiv
push
lahf
fadd
inc
push
aaa
dec
or
rol
xchg
shr
mov
dec
popa
inc
fild
lods
leave
es
sub
out
push
loop
fmul
in
xchg
mov
mov
enter
pop
push
push
push
aaa
cli
jne
aaa
adc
out
push
loop
fdivr
push
aam
adc
out
aad
push
mov
cli
(bad)
cmps
enter
aas
jp
out
jne
pop
div
daa
push
push
mov
pop
xchg
(bad)
in
xchg
mov
mov
enter
call
jp
out
jne
fstp
addr16
jmp
fidivr
cli
leave
sub
adc
adc
adc
jmp
in
outs
inc
jbe
loope
push
mov
in
add
mov
push
push
mov
pop
cmps
mov
hlt
fstp
mov
adc
adc
in
popf
int
sub
fild
aaa
stos
aaa
push
aaa
adc
jmp
aaa
repnz
loope
jp
lock
fldenv
pusha
cli
sbb
aaa
adc
fisub
cli
jns
aaa
adc
adc
adc
jmp
in
outs
inc
jbe
loope
push
mov
in
add
jl
push
push
mov
pop
jbe
jecxz
push
mov
in
add
add
push
push
mov
pop
xchg
(bad)
and
aaa
adc
adc
adc
jmp
in
outs
inc
jbe
loope
push
mov
in
add
cmp
push
push
mov
pop
div
and
sbb
mov
arpl
cli
loope
aaa
adc
jge
adc
jmp
xchg
mov
mov
enter
fst
xchg
mov
mov
enter
add
push
popf
repz
out
jne
fstp
addr16
out
jne
fstp
addr16
(bad)
and
push
not
push
mov
push
push
aaa
mov
arpl
jp
in
jne
fstp
addr16
aad
aaa
adc
fidivr
jp
out
jne
fstp
addr16
cmp
aas
xchg
xchg
push
adc
and
sbb
mov
arpl
jp
in
jne
fstp
addr16
adc
fidivr
jp
out
jne
fstp
addr16
jns
aaa
adc
fidivr
cli
mov
adc
adc
jmp
in
outs
jge
loopne
push
push
mov
push
aaa
mov
push
xlat
in
stos
dec
pop
dec
mov
push
xlat
in
stos
dec
(bad)
pushw
aaa
xchg
nop
push
pop
cmp
xlat
in
stos
dec
(bad)
pushw
aaa
xchg
nop
push
(bad)
cmp
push
aaa
in
xchg
mov
mov
enter
mov
sbb
mov
arpl
jp
in
jne
fstp
addr16
std
sub
adc
fidivr
jp
lock
fstp
addr16
shr
xlat
fidivr
cli
add
adc
adc
jmp
in
outs
inc
jbe
loope
push
mov
in
add
pop
and
(bad)
pop
jbe
loop
push
mov
in
add
ins
and
(bad)
pop
xchg
(bad)
cmp
aaa
adc
adc
adc
jmp
in
outs
inc
jbe
loope
push
mov
in
add
sbb
push
push
mov
pop
loope
push
fstp
addr16
lock
fstp
addr16
mov
fisub
cli
cdq
das
aaa
adc
adc
adc
jmp
in
outs
inc
jbe
loope
push
mov
in
add
fsub
push
push
mov
pop
jbe
loop
push
mov
in
add
loopne
push
push
mov
pop
xchg
(bad)
and
aaa
adc
adc
adc
jmp
in
outs
inc
jbe
loope
push
mov
in
add
pushf
and
(bad)
pop
not
push
push
mov
push
push
aaa
mov
fldenv
xor
jmp
dec
pop
add
pop
aaa
lahf
jmp
dec
fild
aaa
xchg
nop
push
fbld
push
aaa
adc
jmp
dec
push
cmp
les
xchg
mov
mov
enter
push
adc
sbb
out
shl
fwait
ror
stos
loope
aam
rcr
push
xchg
mov
mov
enter
push
adc
sbb
cmp
in
popf
int
sub
pop
or
push
xlat
in
stos
dec
fistp
push
(bad)
fs
aaa
stos
pop
push
aaa
adc
jmp
dec
cmp
push
adc
in
dec
mov
in
add
cld
push
push
mov
in
add
cwde
and
(bad)
inc
jbe
std
push
push
mov
in
add
mov
push
push
mov
pop
je
js
je
js
je
jp
push
aaa
push
pop
test
push
mov
in
aad
mov
push
push
mov
in
add
mov
push
push
pop
adc
mov
pusha
inc
fldenv
pusha
in
loope
call
aas
push
push
enter
enter
sbb
push
cmps
not
push
push
shl
fwait
xlat
int
loope
aam
fidiv
push
xchg
(bad)
adc
(bad)
rol
xchg
rcl
push
dec
popa
inc
jmp
pop
lock
shl
fwait
mov
stos
loope
aad
mov
aaa
fwait
lods
pop
iret
fwait
xchg
das
rcr
xor
adc
dec
aas
lahf
add
fwait
ror
adc
aaa
fwait
lods
jmp
int3
in
stos
xchg
lock
mov
aaa
adc
clc
cmp
cmps
loope
fwait
lods
das
iret
fwait
xchg
jbe
cli
push
push
fild
js
aaa
fwait
sar
daa
js
xchg
mov
test
inc
sbb
push
jbe
adc
xchg
loopne
enter
cwde
cld
push
push
pop
cmps
mov
push
aaa
xchg
mov
popf
repz
fidivr
xchg
in
sbb
adc
adc
out
stos
loope
inc
fstp
addr16
xor
jmp
enter
mov
test
in
into
in
stos
popf
repz
pop
fidivr
xchg
sub
adc
fst
xchg
mov
stos
loope
inc
mov
xchg
mov
test
fwait
retf
in
stos
loope
cli
xor
adc
mov
test
pop
iret
fwait
xchg
je
js
xchg
mov
stos
loope
inc
mov
popf
repz
fucom
ss
enter
aaa
adc
loope
adc
scas
int3
jecxz
in
push
push
je
fucomip
stos
loope
adc
icebp
ins
push
push
push
mov
in
add
xor
stos
loope
lahf
sar
mov
in
add
aaa
js
je
js
je
js
xchg
mov
stos
loope
inc
ds
fisttp
xchg
adc
in
loope
retf
imul
push
mov
(bad)
js
adc
loope
add
lock
fstp
addr16
sbb
aaa
adc
fisub
aam
popa
int3
in
stos
push
fdivr
push
mov
in
add
inc
cld
push
push
(bad)
jg
aaa
fwait
xchg
pop
mul
jbe
adc
sbb
push
aaa
xchg
shl
in
stos
pop
mov
in
push
call
aaa
adc
(bad)
adc
cmp
jmp
adc
sub
push
cmp
adc
fst
xchg
mov
test
enter
xchg
stos
popf
repz
imul
mov
push
push
aaa
lahf
rcl
fs
cs
aas
sbb
aaa
js
loope
xchg
xchg
int3
in
stos
dec
(bad)
jge
aaa
xchg
mov
xchg
mov
test
stos
mov
rol
fsubr
dec
push
aaa
in
loope
retf
imul
cmp
sbb
xor
adc
cmp
push
push
popa
cli
fnstenv
aaa
adc
fisub
sbb
jne
mov
xchg
stos
mov
and
fwait
xchg
pop
les
stos
mov
fadd
adc
or
stos
loope
cli
addr16
popa
in
loope
retf
neg
(bad)
pop
lahf
lock
popa
push
aaa
inc
mov
fnstenv
adc
xchg
xchg
mov
adc
cmps
test
inc
sbb
adc
xor
aaa
aaa
adc
loope
mov
rol
xor
xchg
inc
imul
xchg
rcl
add
pop
loope
lahf
fcom
push
aaa
inc
mov
xchg
jb
stos
imul
lea
aaa
adc
dec
iret
lahf
add
inc
ds
fistp
jge
aaa
fwait
xchg
lahf
lock
push
push
aaa
inc
add
cwde
xor
loope
aaa
adc
sbb
inc
mov
dec
(bad)
jb
aaa
lahf
adc
addr16
dec
pop
icebp
xor
aaa
js
je
cli
icebp
aaa
aaa
adc
fmul
in
xchg
jb
fstp
pop
in
add
jo
push
push
mov
cli
cmp
enter
mov
aad
pop
retf
dec
or
rol
xchg
shr
mov
dec
pusha
lods
adc
cmp
aad
mov
pop
stos
imul
fnsave
aaa
adc
fdivr
in
sbb
sar
out
aad
loope
adc
adc
inc
cmp
adc
pop
(bad)
in
stos
dec
(bad)
cli
loope
xchg
nop
adc
in
stos
push
aaa
push
xchg
(bad)
stc
inc
xchg
iret
cmp
fild
jge
aaa
fwait
xchg
cmc
cwde
dec
or
hlt
inc
(bad)
mov
inc
dec
mov
xchg
jbe
lods
jmp
mov
in
push
push
fdivr
out
jmp
addr16
lock
fstp
inc
mov
xchg
jb
add
aaa
jp
pop
aaa
adc
push
fbld
jecxz
leave
xchg
xchg
sbb
jne
fstp
inc
mov
popf
repz
pop
fld
push
pop
push
push
push
aaa
in
popa
xor
cmp
aad
or
jb
pop
test
cmp
inc
(bad)
rol
xchg
rol
dec
pusha
lods
std
outs
call
fstp
ds
adc
push
pop
pop
ds
pop
adc
push
pop
adc
adc
js
je
js
div
cmp
aam
icebp
lock
push
push
pop
adc
je
in
popa
call
push
push
pop
adc
je
in
popa
neg
cmp
jmp
popa
js
loope
xchg
in
aaa
cli
lods
ss
adc
pop
popa
js
loope
ds
pop
aaa
cli
mov
pop
popa
js
loope
push
icebp
pop
aaa
cli
lea
aaa
adc
out
jmp
pop
in
popa
ss
push
push
div
cmp
adc
je
in
popa
ds
push
push
test
je
in
popa
mov
push
push
pop
adc
je
in
popa
push
push
push
mul
sbb
aaa
adc
pop
popa
js
loope
and
pop
aaa
cli
sub
aaa
adc
pop
popa
js
loope
loop
pop
aaa
cli
cmp
aaa
adc
out
cmc
fstp
fwait
xchg
je
inc
ds
jne
mov
je
inc
ds
jne
mov
cmps
pop
push
shl
pop
iret
fwait
xchg
inc
imul
add
or
iret
fwait
xchg
je
in
popa
neg
xor
icebp
pop
aaa
jp
xchg
ja
ds
daa
mov
cmps
adc
push
je
in
popa
sahf
xchg
imul
cs
pop
aaa
jp
xchg
ja
ds
daa
aam
jne
mov
xchg
iret
in
xchg
jb
fstp
pop
out
stos
sub
mov
jae
aaa
mov
mov
adc
mov
in
popa
xor
xor
stos
sub
mov
push
fistp
aaa
mov
mov
mov
in
popa
add
xor
stos
sub
mov
jae
aaa
mov
scas
jne
cmp
mov
in
popa
ss
push
push
imul
xor
retf
pop
aaa
adc
loop
daa
je
jbe
mov
mov
pop
(bad)
fstp
js
loope
xor
pop
aaa
cli
mov
loop
daa
shr
adc
push
mov
pop
(bad)
fstp
js
loope
xchg
in
aaa
cli
test
aaa
adc
out
jmp
mov
inc
add
mov
aad
jmp
push
push
loope
sbb
icebp
jp
repz
add
pop
out
stos
loope
(bad)
inc
mov
mov
jle
aaa
adc
push
addr16
mov
aaa
adc
icebp
xchg
sub
push
movs
dec
popa
cli
lea
aaa
adc
push
enter
jbe
ds
popa
cdq
adc
sbb
mov
xor
aaa
js
jbe
adc
dec
pop
into
movs
pop
aaa
jp
repz
cmp
xor
xor
push
xchg
push
in
aaa
js
loope
es
pop
aaa
js
dec
pop
fistp
cmp
out
mov
xor
push
or
push
sahf
addr16
repz
cmp
ficom
je
cli
and
aaa
adc
sbb
in
xchg
jb
fstp
pop
adc
push
pop
adc
push
pop
adc
cdq
adc
sbb
movs
popf
fbstp
je
js
jbe
adc
dec
pop
into
movs
pop
aaa
jp
repz
ds
fistp
push
aaa
mov
scas
jne
ds
pop
adc
push
pop
adc
sbb
ds
pop
adc
push
pop
scas
push
push
aaa
js
je
js
je
cli
and
fcomp
add
popa
sbb
aaa
push
push
pop
adc
push
pop
adc
push
pop
add
xor
js
jbe
adc
mov
jp
repz
ds
(bad)
jno
aaa
mov
scas
jne
aad
int3
daa
push
push
pop
adc
push
pop
adc
push
pop
add
dec
js
jbe
adc
xor
repz
ds
fist
lods
jne
ds
enter
jbe
ds
enter
jbe
ds
pop
ret
push
push
aaa
jp
push
aaa
adc
ss
adc
jp
bnd
cmp
ficom
je
cli
sbb
aaa
adc
adc
in
popa
sub
in
popa
pop
xchg
je
jp
pop
aaa
adc
aaa
adc
jp
push
aaa
inc
cmp
fist
jbe
call
push
pop
adc
and
stos
sub
mov
stos
sub
push
push
pop
jbe
jp
mov
inc
jbe
adc
dec
pop
into
movs
pop
aaa
jp
bnd
ds
(bad)
jo
aaa
mov
mov
adc
fstp
ja
push
pop
nop
mov
jbe
adc
cli
leave
cmp
adc
fist
je
jp
pop
aaa
adc
push
fist
loope
es
pop
aaa
js
loope
jb
pop
aaa
jp
pop
aaa
adc
sub
mov
cs
adc
dec
pop
into
movs
pop
aaa
jp
bnd
ds
fbld
aaa
mov
scas
jne
ds
enter
jbe
ds
enter
jne
cmp
adc
jp
push
aaa
adc
aaa
adc
adc
dec
pop
into
movs
pop
aaa
jp
bnd
ds
fild
jo
aaa
mov
mov
adc
or
rcr
mov
je
in
popa
sub
in
popa
pop
xchg
je
js
jbe
adc
jp
push
aaa
jp
push
aaa
inc
cmp
fist
jbe
call
push
pop
adc
cmps
mov
enter
ds
enter
jbe
ds
enter
jbe
ds
pop
xchg
push
push
aaa
jp
push
aaa
adc
adc
adc
dec
mov
repz
ds
fistp
scas
jne
ds
enter
jbe
ds
enter
jbe
ds
pop
jne
push
adc
adc
adc
jp
bnd
cmp
ficom
je
cli
and
sahf
push
push
je
in
popa
sub
in
popa
pop
xchg
je
jp
push
aaa
adc
adc
jp
push
aaa
inc
cmp
fist
jbe
call
push
pop
adc
(bad)
mov
gs
aad
push
enter
jbe
ds
enter
jbe
ds
pop
inc
cmp
adc
adc
adc
jp
bnd
cmp
ficom
je
cli
test
mov
popa
sub
in
popa
jle
push
push
je
jp
pop
aaa
adc
aaa
adc
jp
push
mov
cmp
(bad)
push
push
jbe
(bad)
push
push
pop
adc
aaa
cli
xchg
cmp
adc
call
popa
sub
in
popa
jle
push
push
je
jp
push
aaa
adc
and
push
mov
cmp
test
jbe
(bad)
push
push
pop
adc
aaa
cli
sar
adc
add
cmp
add
sti
pop
aaa
js
loope
jb
pop
aaa
js
je
jp
push
aaa
adc
or
push
sahf
addr16
out
jne
cmp
fist
jbe
adc
push
jbe
aaa
mov
mov
adc
push
enter
jbe
ds
enter
jne
ds
pop
jbe
jmp
adc
jp
push
mov
cmp
(bad)
push
push
jbe
(bad)
push
push
pop
adc
aaa
cli
pop
cmp
adc
ds
push
push
je
in
popa
sub
in
popa
pop
xchg
je
jp
push
aaa
adc
adc
jp
push
mov
cmp
fcom
jbe
(bad)
push
push
pop
adc
scas
mov
lods
loope
stos
xor
mov
cli
xor
inc
(bad)
rol
xchg
rcl
jmp
and
ins
push
aaa
jp
repz
stos
imul
lods
call
pop
(bad)
mov
cmc
shr
popf
repz
push
cwde
push
push
xchg
iret
cmp
add
sti
pop
aaa
cli
xor
out
cmc
fstp
fwait
xchg
xchg
jb
add
fild
push
aaa
js
loope
es
pop
aaa
js
dec
mov
out
xchg
jb
jg
mov
push
aaa
xchg
add
jmp
push
push
pop
sti
mov
sbb
adc
jae
adc
sub
mov
add
or
movs
popf
fbstp
je
js
jbe
adc
dec
pop
ret
mov
repz
ds
(bad)
je
aaa
mov
mov
adc
out
jmp
add
stos
sub
adc
push
aaa
cdq
adc
sbb
movs
popf
fbstp
je
js
jbe
adc
dec
pop
into
movs
pop
aaa
jp
repz
ds
fistp
xor
jne
ds
pop
adc
push
pop
adc
sbb
ds
pop
adc
push
pop
scas
push
push
aaa
js
je
js
je
cli
mov
fcomp
add
popa
sbb
xor
adc
push
pop
adc
push
pop
jbe
jp
push
or
push
sahf
addr16
out
jne
cmp
fist
je
cli
adc
neg
adc
jne
ds
pop
push
push
push
aaa
in
popa
neg
or
mov
jbe
adc
daa
mov
cli
sub
push
sahf
or
and
pop
adc
pop
pop
pop
push
push
aaa
in
popa
neg
or
ds
pop
adc
adc
cli
stc
pop
aaa
cli
in
aaa
adc
push
enter
jbe
ds
enter
jne
cmp
adc
js
je
jp
push
mov
cmp
(bad)
push
push
jbe
(bad)
push
push
pop
adc
mov
push
push
(bad)
push
push
aaa
in
xchg
jb
fstp
pop
adc
push
pop
adc
push
pop
ds
push
aaa
js
je
jp
push
aaa
adc
jmp
push
push
pop
lahf
mov
imul
push
push
xchg
ds
pop
aaa
cli
addr16
in
ds
enter
jbe
ds
enter
jbe
ds
pop
xchg
push
push
aaa
js
jbe
adc
adc
jp
bnd
cmp
ficom
je
cli
jne
aaa
adc
push
push
push
lahf
shr
push
aaa
js
loope
es
pop
aaa
js
loope
push
in
aaa
js
je
jp
push
aaa
adc
aaa
adc
pop
mov
repz
ds
fcomip
dec
push
aaa
mov
mov
adc
push
enter
jbe
ds
enter
jbe
ds
pop
out
push
push
aaa
jp
push
aaa
adc
jp
adc
jp
bnd
cmp
ficom
je
cli
std
add
adc
out
call
push
aaa
js
loope
es
pop
aaa
js
loope
push
in
aaa
js
je
jp
push
aaa
adc
aaa
adc
adc
sbb
pop
aaa
jp
repz
ds
fistp
push
aaa
mov
lods
jne
ds
enter
jbe
ds
enter
jbe
ds
pop
not
aaa
jp
push
aaa
adc
add
push
push
addr16
cmc
jne
cmp
ficom
je
cli
add
adc
bound
in
popa
sub
in
popa
pop
xchg
je
jp
push
aaa
adc
aaa
adc
jp
push
aaa
inc
cmp
fcom
jbe
call
push
pop
adc
xchg
mov
stos
sub
mov
stos
sub
push
push
pop
or
aaa
adc
js
jbe
adc
dec
pop
and
aaa
jp
bnd
cmp
xor
andps
xchg
push
icebp
pop
aaa
fwait
lods
das
iret
fwait
xchg
je
in
popa
sub
in
popa
jle
push
push
je
js
je
js
jbe
adc
dec
pop
into
movs
pop
aaa
jp
bnd
cmp
xor
andps
xchg
cmp
pop
aaa
js
loope
es
pop
aaa
js
loope
jb
pop
aaa
js
je
js
je
jp
push
mov
cmp
(bad)
push
push
jbe
(bad)
push
push
pop
adc
aaa
cli
sbb
aaa
adc
ds
push
push
je
in
popa
sub
in
popa
pop
xchg
je
jp
push
aaa
adc
adc
jp
push
mov
cmp
fcom
jbe
(bad)
push
push
pop
adc
scas
mov
cmps
loope
fwait
lods
das
iret
fwait
xchg
not
dec
popf
frstor
mov
fild
pop
dec
pusha
lods
add
aad
nop
adc
adc
aaa
adc
js
je
jp
push
aaa
xchg
stos
imul
mov
fdiv
push
push
aaa
js
dec
(bad)
dec
push
aaa
fwait
xchg
lahf
rol
push
sub
out
push
fnstenv
push
push
aaa
adc
(bad)
push
movs
dec
mov
push
test
enter
or
push
push
pop
adc
cli
call
fisubr
sub
loop
push
ds
enter
ins
stc
push
push
pop
dec
mov
adc
addr16
test
dec
xchg
jb
pop
fiadd
sbb
fstp
inc
stos
imul
imul
adc
aaa
adc
neg
lea
xchg
iret
and
(bad)
rol
xchg
rcl
push
dec
popa
lods
fs
stc
inc
in
xchg
adc
fwait
shl
leave
in
stos
xchg
icebp
xchg
xchg
push
and
push
jbe
rcl
push
mov
in
add
xchg
or
sub
push
aaa
stos
pop
push
aaa
adc
jmp
push
aam
enter
pop
xchg
xchg
pop
aaa
lahf
rcr
enter
fild
push
aaa
xchg
sub
xor
rcl
push
mov
in
add
push
or
loop
out
mov
adc
maxps
rcr
enter
fist
aaa
xchg
sub
xor
jbe
rcl
push
mov
in
add
sbb
push
push
mov
stos
sbb
cmp
cmc
push
push
xchg
mov
stos
loope
inc
mov
lahf
icebp
mov
push
aaa
xchg
sub
xor
jbe
rcl
push
mov
in
add
int3
add
stos
sbb
cmp
not
xchg
mov
stos
loope
inc
mov
sahf
dec
in
pop
imul
scas
fbstp
fstp
addr16
cdq
or
adc
arpl
sbb
maxps
rcr
enter
fbld
sbb
in
pop
imul
cmps
fidiv
fstp
addr16
int
aaa
adc
arpl
sbb
maxps
xchg
pop
aaa
lahf
rcr
enter
fist
sub
cmp
jbe
rcl
push
mov
in
add
pop
add
pop
adc
adc
arpl
pop
and
pop
pop
xchg
pop
aaa
lahf
rcr
enter
fistp
aaa
xchg
sub
cmp
jbe
rcl
push
mov
in
add
add
ds
pop
pop
mov
cmc
jne
fstp
addr16
mov
adc
je
push
push
pop
ret
xchg
pop
aaa
jp
mov
adc
div
dec
push
aaa
xchg
nop
ss
aam
sub
in
stos
inc
ins
fist
sti
inc
pop
dec
pusha
cdq
and
mov
pop
jle
adc
xchg
lock
cmps
lahf
shr
aaa
inc
mov
xchg
arpl
dec
fild
nop
push
shl
adc
pop
mul
xor
aaa
adc
inc
ins
fist
sti
mov
jl
aaa
adc
dec
pusha
lods
retf
sub
hlt
fstp
mov
loop
fcomp
xchg
pop
aaa
lahf
shl
shr
dec
fisttp
aaa
cli
lods
add
adc
adc
adc
jmp
mov
jmp
enter
es
fnsave
fstp
addr16
or
adc
out
push
loop
fdiv
in
push
imul
adc
(bad)
stos
loope
cli
inc
or
adc
mov
xor
inc
jbe
rcl
push
mov
in
add
rol
push
mov
cmps
out
in
push
imul
sub
jne
fstp
addr16
mov
aaa
adc
rcl
fwait
sar
shr
xchg
icebp
xchg
jmp
sbb
cmp
hlt
push
push
xchg
mov
mov
stos
and
push
sahf
mov
lods
loope
adc
maxps
shl
shr
dec
fisttp
jmp
sbb
cmp
hlt
push
push
xchg
mov
mov
sahf
and
push
xchg
(bad)
cmp
iret
in
stos
push
inc
add
mov
mov
jle
adc
loope
loope
sbb
maxps
shl
shr
dec
fist
aaa
xchg
jmp
adc
add
cmc
push
push
xchg
mov
mov
xor
adc
adc
iret
in
stos
adc
hlt
push
push
xchg
mov
mov
adc
adc
loope
loope
push
and
pop
adc
shl
shr
dec
fnstsw
inc
push
aaa
xchg
jmp
adc
cmp
repz
push
xchg
mov
mov
(bad)
and
push
sahf
mov
lods
loope
sbb
maxps
xchg
pop
aaa
lahf
shl
shr
dec
fild
scas
jne
fstp
addr16
in
repnz
ins
inc
push
push
pop
(bad)
in
aaa
jp
fnsave
mov
popf
repz
(bad)
stos
loope
scas
cmps
out
in
pushw
xchg
jmp
push
inc
sbb
lahf
shr
aaa
xchg
mov
lahf
icebp
cmp
push
aaa
fwait
movs
das
(bad)
fwait
xchg
das
in
js
jbe
mov
xchg
loope
xchg
nop
push
mov
in
pop
fidivr
xchg
xchg
sbb
adc
sahf
mov
test
enter
test
push
push
mov
test
enter
mov
push
push
aaa
xchg
jmp
and
xchg
jl
aaa
adc
loope
fwait
movs
das
(bad)
fwait
xchg
xchg
mov
lods
loope
inc
cmp
fcom
xchg
mov
test
enter
das
adc
push
xlat
mov
aaa
data16
dec
or
rol
add
sar
in
shr
into
outs
fwait
xchg
pop
or
lods
out
in
pop
cdq
or
push
push
mov
xor
jbe
push
imul
les
fcom
xchg
mov
stos
loope
inc
mov
lahf
(bad)
push
aaa
jp
scas
jne
cmp
fcom
xchg
mov
lods
loope
inc
mov
popf
repz
push
aaa
lahf
shl
iret
in
stos
dec
fbstp
push
aaa
xchg
mov
xchg
mov
lods
loope
inc
cmp
fcom
xchg
mov
stos
loope
inc
mov
jbe
stc
push
push
mov
in
add
and
push
push
mov
inc
xchg
mov
stos
loope
inc
mov
xchg
mov
test
enter
addr16
shl
iret
in
stos
dec
pop
adc
loop
in
stos
dec
(bad)
inc
push
aaa
xchg
nop
push
pop
adc
fwait
retf
jmp
aaa
adc
out
shl
fwait
jmp
stos
loope
aam
pop
pop
out
mov
loop
in
stos
dec
ffreep
into
loope
xchg
nop
adc
rcr
adc
xchg
test
enter
xor
push
and
push
inc
mov
in
aad
xor
push
push
mov
pop
adc
in
loope
iret
in
stos
jbe
mov
mov
loop
in
stos
dec
fist
aaa
xchg
nop
push
pop
sbb
loop
in
stos
dec
fild
push
aaa
lahf
shl
leave
in
stos
dec
fild
push
aaa
fwait
rol
shr
cmc
adc
stos
sahf
mov
test
enter
daa
cdq
rol
shr
fdiv
in
push
cmc
cmp
fld
shr
popf
mov
mov
iret
mov
aam
stos
iret
jmp
enter
jmp
xchg
test
enter
cld
add
push
mov
inc
xchg
mov
lods
loope
inc
mov
xchg
mov
mov
loop
in
stos
dec
fucomip
inc
push
aaa
cdq
jmp
xchg
dec
adc
mov
xchg
mov
lods
loope
lahf
shl
iret
in
stos
dec
enter
enter
adc
cmp
iret
in
stos
dec
(bad)
inc
push
aaa
lahf
jmp
dec
mov
in
fldenv
adc
imul
xchg
lods
out
in
add
aaa
in
loope
iret
in
stos
jbe
addr16
pop
adc
push
fbstp
ds
out
test
enter
cmp
loope
cli
cmc
ror
in
xlat
fidivr
fwait
xchg
pop
neg
stos
loope
(bad)
lods
loope
cli
std
or
adc
out
push
loop
fcomp
and
aaa
adc
loope
dec
pmovmskb
push
push
dec
mov
adc
add
inc
add
mov
rcl
in
adc
push
pop
xchg
adc
fbstp
aaa
fwait
sar
mul
dec
fild
idiv
push
push
outs
xchg
mov
xchg
jb
imul
cwde
push
push
fnstenv
inc
stc
pop
aaa
xchg
fwait
mov
out
fwait
xchg
jbe
mov
inc
push
aaa
jp
push
aaa
adc
xchg
neg
push
push
fist
mov
xchg
out
adc
aaa
adc
fwait
xchg
stos
loope
in
and
fisttp
inc
push
aaa
js
jbe
mov
in
enter
inc
mov
and
in
push
push
cmp
xlat
sbb
push
push
aas
ret
jno
repz
push
loope
push
pop
aaa
stos
push
inc
aaa
adc
repnz
fcomip
inc
push
aaa
test
push
push
add
(bad)
adc
sahf
xchg
out
fstp
mov
adc
mov
mov
mov
sub
movs
inc
push
aaa
sbb
stos
loope
rcr
daa
inc
fstp
sar
in
shr
into
outs
fwait
xchg
popf
icebp
jae
in
mov
in
stos
sahf
mov
mov
fwait
cmp
loope
sbb
fdivp
xchg
sti
repz
pop
push
push
push
mov
addr16
fdiv
and
loope
xchg
cmps
mov
mov
mov
mov
clc
push
push
mov
in
add
js
push
push
pop
adc
fwait
xchg
(bad)
stos
loope
lahf
shr
fild
sar
fistp
mov
fbld
xchg
loope
xchg
nop
push
mov
inc
pop
aaa
adc
push
mov
in
add
jo
push
push
mov
sar
pop
fbld
push
aaa
fwait
mov
out
fwait
xchg
jbe
clc
push
push
pop
and
aaa
jp
hlt
jne
cmp
cwde
push
push
imul
add
scas
ss
aas
cli
push
push
mov
push
push
aaa
loope
mov
aaa
adc
fst
jbe
mov
mov
scas
jne
mov
xchg
mov
mov
push
fist
cmps
sub
push
push
les
or
shl
fwait
cmp
loope
sar
fst
jbe
mov
mov
mov
and
push
xchg
mov
mov
call
push
push
les
fmul
repnz
jne
cmp
xchg
jbe
clc
push
push
pop
adc
pop
aaa
cli
imul
(bad)
stos
xchg
add
mov
push
aaa
adc
push
aaa
in
xchg
mov
mov
je
js
je
js
je
jp
push
aaa
push
cmp
cdq
push
push
test
loopne
hlt
leave
pushw
aaa
js
je
js
dec
(bad)
pop
push
aaa
aad
cmps
enter
mov
xchg
loope
enter
pop
sbb
push
mov
in
xlat
(bad)
enter
adc
out
adc
imul
mov
imul
ds
mov
adc
les
loope
cmps
mov
lahf
les
push
aaa
aad
cmps
enter
mov
xchg
loope
enter
mov
lahf
loope
enter
enter
adc
out
adc
imul
mov
imul
ds
mov
adc
les
loope
cmps
mov
loope
cmps
mov
cmps
imul
push
shl
fwait
fwait
jmp
repz
mov
adc
pop
xlat
mov
mov
adc
pop
sti
lahf
push
test
push
push
xchg
jb
ffree
push
retf
pop
adc
push
aaa
js
idiv
sbb
xor
push
push
pop
adc
jb
xchg
pop
jmp
push
push
aaa
fwait
mov
out
fwait
xchg
je
cli
icebp
push
aaa
adc
pop
out
aad
mov
lock
nop
push
aaa
adc
add
push
aaa
aad
(bad)
aaa
adc
push
call
push
aaa
js
loope
es
pop
aaa
js
je
js
je
js
je
jp
push
std
adc
ficom
jbe
call
push
pop
adc
aaa
mov
xchg
pop
aaa
js
je
cli
add
aaa
adc
push
fbld
loope
xchg
nop
sbb
xchg
pop
push
aaa
das
push
push
aaa
xchg
xor
mov
adc
adc
fst
dec
fild
pop
push
aaa
fwait
shl
out
and
aaa
adc
pop
addr16
shl
mov
push
push
aaa
xchg
cmps
mov
adc
stos
mov
fwait
fwait
cld
stos
loope
jp
fidiv
cmp
fst
jbe
(bad)
push
push
pop
adc
cli
pushf
(bad)
enter
das
sbb
repz
push
push
fist
loope
fwait
mov
out
fwait
xchg
xchg
mov
mov
push
pop
adc
inc
push
push
je
js
neg
push
push
addr16
icebp
adc
adc
fwait
lahf
cld
stos
loope
js
je
jp
imul
push
pop
adc
fist
jbe
adc
adc
push
fbld
aaa
stc
dec
xchg
jb
add
loopne
push
push
mov
outs
pop
aaa
adc
pop
rol
retf
push
je
js
je
lahf
adc
addr16
and
fiadd
or
fist
sti
mov
push
dec
pusha
lods
ins
arpl
sbb
fldcw
xor
push
pop
popf
iret
add
scas
adc
sbb
out
sbb
push
mul
sbb
add
aaa
sbb
push
and
push
push
inc
or
adc
movs
pop
push
aaa
das
ins
pop
aaa
adc
mov
mov
push
aaa
xchg
imul
xchg
(bad)
push
aaa
adc
ficom
loope
jle
pop
aaa
cli
test
enter
fucomi
stos
loope
aad
jp
adc
ficom
dec
fild
nop
push
mov
in
fucom
ss
enter
cmp
loope
cli
jns
aaa
adc
cmp
fstp
addr16
popa
pop
xchg
mul
push
push
shl
imul
fwait
out
out
stos
loope
cli
push
xchg
mov
cmp
(bad)
retf
daa
out
dec
xchg
mov
test
ret
stos
popf
fist
fisttp
sbb
cwde
jecxz
in
ins
into
inc
and
mov
enter
jmp
stos
loope
cdq
sar
retf
xor
enter
pop
adc
push
(bad)
pop
push
aaa
fwait
lods
jmp
retf
xchg
lock
imul
xchg
xchg
sbb
adc
jbe
push
push
mov
mov
fisub
adc
cmp
push
push
aaa
xchg
imul
adc
stos
loope
xchg
imul
push
stos
sub
push
push
fbstp
loope
dec
fucom
push
jmp
aaa
fwait
lods
das
iret
fwait
xchg
mov
push
push
pop
adc
js
imul
push
push
fimul
push
aaa
stos
push
ja
adc
jecxz
in
fstp
xchg
adc
pop
aaa
sub
push
cmp
stos
imul
inc
adc
adc
xchg
iret
in
xchg
mov
test
xchg
jb
fstp
or
les
or
and
or
fs
adc
sub
movs
mov
adc
xor
shr
pop
sub
or
hlt
lods
jne
and
or
pop
mov
adc
adc
inc
mov
adc
out
push
push
pop
adc
adc
adc
fwait
iret
in
stos
loope
pop
sub
or
hlt
lods
jne
and
or
pusha
mov
adc
adc
inc
push
aaa
in
and
(bad)
pop
push
aaa
jp
loope
adc
adc
adc
fst
jl
push
mov
mov
enter
xchg
into
test
out
jmp
enter
lods
push
push
push
mov
in
mov
lahf
lock
push
aaa
jp
push
aaa
adc
fwait
ss
stos
loope
in
popa
neg
sbb
scas
push
loope
in
push
imul
push
je
jp
hlt
jne
ds
fistp
push
aaa
in
popa
neg
sbb
jmp
push
aaa
xchg
mov
xchg
mov
stos
loope
call
mov
test
and
push
push
ss
push
jbe
adc
xchg
push
loope
in
add
add
int
aaa
adc
xchg
ss
stos
loope
fisubr
push
inc
jmp
out
pusha
dec
je
jp
in
jne
fld
fs
js
enter
cmp
stos
loope
adc
ds
adc
push
pop
and
push
imul
sbb
daa
shr
cmp
pop
push
push
(bad)
in
push
aaa
in
xchg
mov
test
xchg
mov
stos
loope
inc
fstp
addr16
hlt
jne
fstp
addr16
rcl
adc
fisub
jp
push
aaa
adc
fwait
ss
stos
loope
in
popa
add
sbb
scas
push
loope
in
push
imul
push
je
jp
hlt
jne
ds
fistp
push
aaa
in
popa
add
sbb
jmp
push
aaa
lahf
fstp
enter
(bad)
in
adc
or
push
imul
lods
push
inc
xor
push
pop
adc
aaa
cli
popa
adc
adc
push
fcomip
pop
push
aaa
sti
nop
sbb
adc
loope
stc
imul
enter
xor
stos
loope
cs
cs
pusha
pop
js
je
jp
div
ds
(bad)
pop
push
aaa
in
popa
add
sbb
xchg
push
push
aaa
xchg
rcr
enter
mov
in
push
out
jmp
enter
mov
test
das
fst
xchg
mov
test
mov
adc
add
aaa
adc
adc
sub
add
aaa
xchg
jmp
push
inc
xor
push
pop
adc
aaa
cli
sub
aaa
adc
push
fistp
pop
push
aaa
sti
pop
sbb
adc
out
cmc
fstp
mov
in
stos
loope
lahf
shr
retf
dec
pop
and
jmp
in
stos
dec
fild
pop
push
aaa
xchg
nop
push
pop
in
push
push
aaa
lahf
rcr
enter
enter
jbe
mov
sahf
mov
stos
loope
adc
ds
adc
push
pop
mov
push
idiv
sbb
daa
js
jbe
mov
imul
jmp
ss
stos
loope
lahf
shr
retf
dec
pop
mov
pop
aaa
lahf
shr
retf
dec
ffreep
pop
push
aaa
xchg
nop
push
pop
in
push
push
aaa
lahf
rcr
enter
enter
jbe
mov
sahf
mov
stos
loope
adc
ds
adc
push
pop
jge
pop
aaa
js
not
daa
jl
jbe
mov
test
lahf
push
loope
in
xlat
(bad)
enter
adc
out
jmp
aaa
jp
div
ds
fbld
push
aaa
in
popa
ss
push
push
imul
sbb
adc
aaa
aam
loope
in
stos
push
fsubr
pop
test
in
stos
loope
cwde
rcr
ss
stos
loope
and
sbb
sub
ds
adc
push
pop
and
test
push
enter
jbe
mov
div
adc
xchg
stos
loopne
in
push
xchg
mov
stos
loope
cs
ins
mov
xchg
xchg
mov
stos
loope
inc
fstp
addr16
hlt
jne
fstp
addr16
mov
aaa
adc
fisub
jp
push
aaa
adc
fwait
ss
stos
loope
in
popa
ds
push
push
idiv
push
push
mov
push
loope
in
push
imul
push
je
jp
div
ds
fild
popa
ds
push
push
not
push
push
ficomp
push
aaa
aam
loopne
in
stos
push
fsubr
pop
test
in
stos
loope
cwde
rcr
ss
stos
loope
and
sbb
sub
ds
adc
push
pop
loopne
pop
aaa
js
test
enter
jbe
mov
idiv
xchg
stos
loopne
in
push
xchg
mov
xchg
pushf
loope
xchg
push
adc
in
ins
fadd
aad
jg
push
push
mov
in
add
mov
test
das
fst
xchg
mov
test
add
adc
add
push
pop
adc
sbb
ds
pop
adc
jp
mov
adc
mov
stos
loope
fwait
lods
jmp
retf
xchg
mov
test
je
js
je
in
loope
leave
in
stos
test
fidiv
push
imul
cs
push
push
popf
(bad)
in
adc
or
push
imul
xchg
je
lahf
shr
in
stos
dec
fs
mov
adc
loope
clc
push
push
aaa
js
xchg
mov
test
sbb
or
jmp
push
push
mov
in
xlat
(bad)
enter
adc
out
adc
mov
out
stos
loope
inc
fld
fs
loope
leave
in
stos
not
fstp
addr16
jbe
loope
push
enter
enter
xor
push
lahf
shl
push
aaa
in
loope
leave
in
stos
imul
push
push
enter
jbe
mov
je
js
je
js
je
jp
push
aaa
push
cmp
xchg
push
push
div
push
push
push
mov
in
aad
xchg
push
push
push
pop
adc
push
pop
adc
loope
fcom
aaa
lahf
pop
mov
in
adc
or
push
imul
xchg
je
lahf
shr
in
stos
dec
fs
lods
jne
stos
stos
ret
in
stos
loope
sbb
aaa
js
xchg
mov
test
pop
pop
loop
pop
aaa
in
loope
leave
in
stos
neg
push
push
push
mov
aad
stos
ret
in
stos
loope
nop
push
push
aaa
aad
outs
repz
push
pop
aaa
adc
adc
aaa
js
je
jp
fidiv
cmp
fst
jbe
(bad)
push
push
pop
adc
cli
jecxz
enter
das
js
loope
sbb
pop
aaa
cli
mov
aaa
adc
out
cmc
fstp
mov
addr16
loope
add
push
(bad)
push
push
aaa
dec
or
rol
fwait
mov
fistp
pop
dec
pusha
cdq
and
mov
push
jmp
mov
das
push
pop
aaa
adc
in
adc
jmp
daa
sbb
std
adc
daa
shr
enter
jbe
mov
xchg
iret
cmp
call
sahf
xchg
idiv
daa
aam
jne
and
jbe
mov
and
aaa
addr16
loope
push
icebp
pop
aaa
cli
cmp
out
jmp
ja
and
jbe
mov
and
aaa
addr16
loope
xor
pop
aaa
cli
imul
sbb
push
jmp
mov
mov
aam
inc
(bad)
push
push
aaa
addr16
loope
cli
stc
pop
aaa
cli
inc
sbb
adc
pop
mov
aam
inc
(bad)
push
push
ss
loope
xchg
in
aaa
cli
lods
sbb
mov
aad
lds
mov
sbb
fucom
ss
jne
and
mov
adc
sbb
fild
adc
push
out
aad
sub
mov
push
inc
adc
add
mov
push
or
jl
jbe
and
mov
adc
pop
mov
fild
sbb
shr
mov
adc
inc
add
push
enter
fs
and
aaa
adc
out
aad
inc
ins
fist
loope
sbb
aaa
add
aaa
adc
push
push
pop
aaa
add
aaa
adc
add
aaa
add
aaa
adc
push
push
pop
aaa
add
aaa
adc
xor
aaa
add
aaa
adc
ds
pop
aaa
add
aaa
adc
and
aaa
add
aaa
adc
es
pop
aaa
add
aaa
adc
test
sahf
or
and
ja
mov
popf
repz
pop
retf
sbb
fcom
adc
fmul
adc
mov
xlat
out
cmps
cmc
ss
pop
mov
xor
ds
(bad)
push
push
aaa
js
dec
pop
adc
fdivr
stos
loope
fist
push
aaa
adc
daa
adc
imul
fdivr
nop
fwait
xor
stos
push
adc
ss
das
imul
shl
lds
xchg
jae
pop
mov
ret
cdq
adc
xor
pop
push
aaa
adc
push
push
pop
aaa
add
aaa
adc
push
push
pop
aaa
add
aaa
adc
pop
push
pop
aaa
add
aaa
adc
pop
push
pop
aaa
add
aaa
adc
inc
push
pop
aaa
add
aaa
adc
inc
push
pop
aaa
add
aaa
adc
dec
push
pop
aaa
add
aaa
adc
dec
push
pop
aaa
add
aaa
adc
jb
pop
aaa
add
aaa
adc
jbe
pop
aaa
add
aaa
adc
jp
pop
aaa
add
aaa
adc
jle
pop
aaa
add
aaa
adc
bound
aaa
add
aaa
adc
push
pop
aaa
add
aaa
adc
push
pop
aaa
add
aaa
adc
outs
push
pop
aaa
add
aaa
adc
xchg
push
pop
aaa
add
aaa
adc
xchg
push
pop
aaa
add
aaa
adc
call
aaa
adc
sahf
push
pop
aaa
add
aaa
adc
adc
add
aaa
adc
xchg
aaa
add
aaa
adc
mov
aaa
add
aaa
adc
mov
aaa
add
aaa
adc
mov
pop
aaa
add
aaa
adc
mov
pop
aaa
add
aaa
adc
mov
les
aaa
adc
mov
les
aaa
adc
mov
les
aaa
adc
cmps
push
pop
aaa
add
aaa
adc
stos
push
pop
aaa
add
aaa
adc
scas
push
pop
aaa
add
aaa
adc
rcl
aaa
add
aaa
adc
(bad)
push
pop
aaa
add
aaa
adc
ficom
aaa
add
aaa
adc
ficom
aaa
add
aaa
adc
ret
aaa
add
aaa
adc
(bad)
push
pop
aaa
add
aaa
adc
retf
aaa
add
aaa
adc
into
push
pop
aaa
add
aaa
adc
repnz
pop
aaa
add
aaa
adc
not
aaa
add
aaa
adc
cli
push
pop
aaa
add
aaa
adc
(bad)
push
pop
aaa
add
aaa
adc
jmp
aaa
adc
out
push
pop
aaa
add
aaa
adc
adc
aaa
add
aaa
adc
push
push
pop
aaa
add
aaa
adc
sbb
aaa
add
aaa
adc
push
push
pop
aaa
add
aaa
adc
add
aaa
add
aaa
adc
push
push
pop
aaa
add
aaa
adc
or
aaa
add
aaa
adc
push
push
pop
aaa
add
aaa
adc
xor
aaa
add
aaa
adc
ss
pop
aaa
add
aaa
adc
cmp
aaa
add
aaa
adc
ds
pop
aaa
add
aaa
adc
and
aaa
add
aaa
adc
es
pop
aaa
add
aaa
adc
sub
aaa
add
aaa
adc
cs
pop
aaa
add
aaa
adc
push
push
pop
aaa
add
aaa
adc
push
push
pop
aaa
add
aaa
adc
pop
push
pop
aaa
add
aaa
adc
pop
push
pop
aaa
add
aaa
adc
inc
push
pop
aaa
add
aaa
adc
inc
push
pop
aaa
add
aaa
adc
dec
push
pop
aaa
add
aaa
adc
dec
push
pop
aaa
add
aaa
adc
jb
pop
aaa
add
aaa
adc
jbe
pop
aaa
add
aaa
adc
bound
aaa
add
aaa
adc
push
pop
aaa
add
aaa
adc
push
pop
aaa
add
aaa
adc
outs
push
pop
aaa
add
aaa
adc
xchg
push
pop
aaa
add
aaa
adc
sahf
push
pop
aaa
add
aaa
adc
adc
add
aaa
adc
xchg
aaa
add
aaa
adc
mov
aaa
add
aaa
adc
mov
aaa
add
aaa
adc
mov
pop
aaa
add
aaa
adc
mov
pop
aaa
add
aaa
adc
mov
les
aaa
adc
mov
les
aaa
adc
stos
push
pop
aaa
add
aaa
adc
scas
push
pop
aaa
add
aaa
adc
rcl
aaa
add
aaa
adc
(bad)
push
pop
aaa
add
aaa
adc
ficom
aaa
add
aaa
adc
ficom
aaa
add
aaa
adc
ret
aaa
add
aaa
adc
(bad)
push
pop
aaa
add
aaa
adc
retf
aaa
add
aaa
adc
into
push
pop
aaa
add
aaa
adc
repnz
pop
aaa
add
aaa
adc
not
aaa
add
aaa
adc
cli
push
pop
aaa
add
aaa
adc
(bad)
push
pop
aaa
add
aaa
adc
loop
pop
aaa
add
aaa
adc
out
pop
aaa
add
aaa
adc
jmp
aaa
adc
out
push
pop
aaa
add
aaa
.byte
push
