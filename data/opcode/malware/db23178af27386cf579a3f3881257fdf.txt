push
call
push
call
mov
push
call
push
call
mov
push
call
mov
mov
mov
not
push
call
push
call
sub
push
call
add
je
push
call
lea
push
call
push
call
mov
jne
shr
ror
jmp
je
not
sub
lea
and
add
sub
sub
and
lea
add
add
and
test
jne
neg
inc
and
add
sub
add
add
xchg
lea
lea
lea
sub
lea
mov
lea
mov
inc
xor
inc
jmp
and
je
add
add
lea
sub
shl
add
je
sub
mov
xor
add
mov
jmp
mov
inc
inc
inc
inc
xor
test
je
sub
shr
dec
mov
cmp
je
sub
add
dec
cmp
je
add
sub
not
add
xor
push
call
push
call
lea
push
call
sub
je
mov
sub
jmp
push
call
push
call
shl
cmp
je
mov
shl
inc
cmp
je
lea
add
dec
add
add
sub
sub
lea
sub
and
sub
sub
test
je
test
je
and
not
inc
sub
inc
shl
lea
lea
inc
mov
dec
lea
shl
mov
push
call
and
push
call
push
call
inc
push
call
test
jne
add
xor
mov
ror
add
cmp
je
dec
mov
mov
mov
mov
add
add
sub
push
call
push
call
push
call
jne
add
mov
jmp
lea
mov
xor
add
xchg
sub
neg
xor
dec
inc
inc
mov
push
call
push
call
test
jne
shr
test
je
mov
add
ror
mov
shr
xchg
inc
inc
mov
inc
sub
sub
add
inc
test
je
lea
mov
and
not
and
sub
test
je
mov
lea
xchg
cmp
jne
sub
add
shl
sub
sub
not
sub
mov
add
sub
add
push
call
push
call
cmp
je
mov
add
mov
push
call
je
lea
sub
not
jmp
cmp
jne
mov
inc
sub
inc
dec
xchg
and
add
lea
dec
add
not
and
dec
push
call
je
mov
cmp
je
xor
mov
sub
add
mov
jmp
add
inc
push
call
mov
je
xor
mov
dec
test
jne
dec
lea
lea
shl
xchg
dec
dec
shl
cmp
jne
add
cmp
jle
inc
inc
neg
dec
add
add
dec
inc
add
add
xor
and
rol
inc
not
jmp
sub
push
call
push
call
push
call
mov
push
call
cmp
jle
xor
mov
inc
inc
add
je
cmp
jne
mov
add
mov
lea
jmp
mov
mov
sub
dec
sub
not
add
test
jne
add
cmp
je
mov
mov
add
inc
dec
xor
inc
ror
sub
not
add
lea
sub
inc
lea
mov
add
lea
cmp
je
add
inc
jne
inc
add
add
lea
lea
mov
mov
xor
lea
sub
xchg
mov
inc
sub
xchg
lea
inc
inc
lea
add
add
add
xor
xor
mov
and
add
cmp
je
inc
lea
add
cmp
jne
dec
lea
mov
sub
cmp
jne
and
test
je
add
xor
add
dec
and
neg
add
shr
mov
add
mov
add
inc
lea
mov
sub
dec
sub
sub
inc
rcr
and
mov
push
mov
sub
pusha
call
mov
pop
sub
mov
xchg
cmp
je
sub
jmp
mov
call
xchg
leave
jmp
mov
cmc
mov
adc
in
in
shl
out
jecxz
in
repnz
repz
loope
int3
jmp
stc
rol
loope
shr
out
jecxz
(bad)
jmp
in
(bad)
repnz
adc
repnz
cmc
loope
shl
out
hlt
in
hlt
adc
in
loope
(bad)
jmp
(bad)
jmp
hlt
in
(bad)
in
out
in
lock
repz
out
repnz
hlt
int3
loope
hlt
leave
out
lock
hlt
leave
out
out
sub
in
in
scas
in
in
xor
in
mov
scas
in
in
sbb
cld
(bad)
(bad)
(bad)
mov
mov
lods
xor
stos
loop
push
pop
lea
mov
repz
jne
mov
lea
mov
repz
jne
sub
sub
mov
push
pop
lea
mov
repz
jne
mov
lea
mov
repz
jne
sub
sub
mov
xor
mov
mov
mov
xor
inc
cmp
jne
dec
lea
mov
xor
mov
mov
mov
lods
xchg
lods
mov
mov
mov
push
add
add
add
mov
mov
pop
add
mov
mov
xor
add
lea
mov
cld
mov
add
repz
jecxz
inc
add
jmp
add
cmp
jb
inc
mov
add
lea
mov
mov
lea
push
push
call
lea
mov
mov
lea
push
push
call
lea
mov
lea
push
push
call
lea
mov
lea
push
push
call
lea
mov
lea
push
push
call
lea
mov
lea
push
call
mov
lea
push
push
call
lea
mov
lea
push
call
mov
lea
push
push
call
lea
mov
push
push
push
push
call
mov
mov
mov
mov
rep
push
push
push
push
call
mov
mov
mov
mov
rep
mov
lea
push
call
mov
lea
push
call
cmp
je
mov
mov
mov
mov
div
mov
mov
lods
xor
stos
loop
jmp
adc
push
xor
jne
imul
int
pusha
sbb
or
inc
xor
repnz
mov
movs
scas
mov
leave
push
sub
inc
and
xor
ror
mov
in
test
aas
xlat
jns
mov
and
mov
jns
movs
lods
add
imul
adc
cmps
mov
inc
jae
movq
xchg
xlat
add
pop
retf
repz
fiadd
pop
mov
and
or
aaa
jmp
pop
clc
scas
mov
inc
gs
test
(bad)
jns
adc
gs
adc
xchg
mov
(bad)
jns
push
scas
xchg
leave
pop
cmp
out
mov
iret
mov
or
or
mov
jo
scas
mov
push
xor
add
or
xchg
(bad)
jno
ret
or
shl
cmps
ret
adc
ja
ss
ja
aaa
daa
jnp
leave
push
cmp
(bad)
bnd
gs
adc
cmps
iret
retf
out
mov
vmovd
or
or
cmp
and
pop
adc
cmps
retf
sbb
xor
test
jmp
dec
jle
jp
inc
and
repnz
jl
mov
leave
js
push
sbb
jns
jbe
scas
ret
(bad)
in
xchg
leave
adc
or
ss
shl
add
xor
jb
dec
cmps
ret
inc
xlat
fist
add
js
into
and
adc
mov
inc
les
and
repnz
adc
adc
xor
jne
add
jle
xor
push
or
call
inc
and
ret
and
inc
sbb
div
dec
sub
or
add
dec
call
mov
xor
ror
add
pop
add
xchg
js
inc
nop
popa
inc
inc
inc
data16
inc
pop
add
iret
jne
fstp
sti
or
outs
push
or
lock
add
dec
xchg
or
and
add
jne
or
inc
das
loope
add
inc
daa
repz
out
and
sbb
not
push
and
cmp
add
dec
and
cmc
or
idiv
inc
es
or
add
inc
and
push
inc
movs
fldln2
inc
add
ins
inc
or
push
add
dec
or
or
lods
xchg
inc
add
mov
inc
jae
add
ret
push
in
leave
ss
into
jae
dec
sub
or
push
push
sbb
das
inc
in
mov
inc
das
repnz
add
jp
inc
daa
or
inc
jecxz
cli
inc
cs
add
sub
daa
dec
dec
push
xor
add
ss
int3
inc
jne
dec
pusha
inc
jl
pop
add
stos
lods
repnz
dec
cli
push
mov
jne
push
xchg
inc
pop
test
inc
ds
and
pop
jmp
in
mov
(bad)
or
(bad)
je
cmp
inc
add
popa
cmc
fucom
mov
xor
ja
push
bnd
inc
rcr
or
ret
mov
lock
inc
std
and
add
jg
(bad)
aaa
inc
repnz
iret
ss
dec
push
sub
lods
gs
stos
test
imul
add
and
loop
repnz
xchg
in
(bad)
(bad)
sbb
add
fadd
pop
je
sbb
dec
stc
xchg
mov
add
mov
iret
ds
out
inc
sbb
inc
or
mov
gs
es
pop
repnz
(bad)
mov
xor
inc
je
push
mov
test
mov
add
cs
mov
repnz
call
mov
jl
add
dec
mov
aad
rol
jmp
push
add
aas
repnz
lds
and
add
inc
pop
jb
out
push
nop
scas
(bad)
repnz
jl
adc
add
dec
inc
inc
into
addr16
out
shl
pop
(bad)
or
div
lods
fmul
pop
or
add
in
pop
cwde
gs
cld
pop
int3
pop
das
mov
(bad)
fstp
jmp
not
movs
jb
inc
into
cmp
das
jp
push
add
lds
push
(bad)
push
sbb
imul
or
xchg
jle
sub
pop
rcl
push
add
push
(bad)
cmp
or
dec
sbb
inc
inc
xchg
leave
add
out
pop
mov
and
sar
mov
sti
les
add
mov
loope
cld
cmp
pop
retf
sldt
(bad)
lock
sub
and
inc
jmp
add
ja
jmp
add
gs
out
add
and
add
add
aaa
jmp
scas
retf
out
inc
repnz
add
jbe
xchg
mov
lea
fsubr
int
and
sar
repnz
loop
std
movs
xor
or
add
lock
ror
dec
jmp
and
sbb
add
jmp
movs
int
and
or
fcom
add
inc
jl
mov
cdq
pop
inc
mov
fisubr
shl
pop
add
mov
inc
or
ja
dec
ret
inc
or
jns
aaa
xchg
repz
nop
data16
repnz
std
lock
add
sbb
add
pop
xor
adc
sar
fadd
add
xchg
mov
in
repnz
loope
inc
xchg
or
cmp
add
adc
pop
jns
jne
add
pop
mov
mov
or
adc
dec
push
adc
add
jecxz
bswap
sbb
fld
or
mov
inc
fnstcw
add
adc
daa
pop
in
and
test
xchg
add
xor
inc
jle
(bad)
adc
stos
push
add
sbb
repz
fs
shl
ror
in
jo
cmp
dec
jne
add
gs
ffreep
mov
adc
loop
adc
cld
or
xchg
mov
outs
or
mov
jne
and
lea
lods
cli
adc
dec
sbb
add
mov
inc
add
sub
cmp
add
ss
sbb
mov
add
sahf
mov
ds
(bad)
cmps
aam
fld
dec
stos
jns
cmp
add
(bad)
push
jge
inc
jb
addr16
mov
push
add
inc
jge
imul
adc
mov
mov
push
sub
or
call
aam
mov
outs
lods
dec
loopne
cmps
daa
add
pop
ins
(bad)
mov
out
movs
hlt
dec
push
push
adc
leave
add
push
vpshufhw
add
repnz
adc
inc
and
popa
sub
cld
repnz
and
add
sbb
mov
add
push
mov
call
cmc
scas
or
add
sbb
lock
stc
xchg
movzx
sbb
add
and
sub
and
mov
xor
outs
mul
jne
clc
fs
add
in
inc
push
repnz
adc
rol
add
jl
or
and
mov
sbb
add
ds
mov
stos
popf
dec
scas
mov
dec
dec
lods
push
add
mov
xchg
add
sub
jg
adc
add
ret
mov
vcvtpd2dq
or
outs
add
(bad)
ja
fucomi
add
pusha
shl
pop
dec
or
dec
stc
xchg
hlt
bound
xchg
daa
add
outs
test
popf
inc
jp
inc
jmp
push
add
and
xchg
dec
ds
(bad)
icebp
push
ins
add
push
xchg
outs
popa
xchg
or
and
xchg
lahf
add
sub
imul
ja
or
push
inc
and
add
add
and
stos
retf
dec
out
test
and
add
pop
push
push
outs
inc
inc
(bad)
not
xchg
or
inc
cmc
dec
push
inc
xchg
or
add
xchg
ins
inc
mov
ret
mov
arpl
cmp
add
movs
leave
imul
inc
clc
bound
add
mov
clc
mov
fstp
sti
imul
xchg
lods
stos
stos
jns
stos
rol
cmp
ja
bnd
arpl
std
scas
sbb
mov
and
adc
add
fisttp
nop
pop
cmp
(bad)
sub
jecxz
add
add
dec
jae
sbb
and
lds
push
pop
int
dec
jp
pushf
add
add
mov
jl
cmp
add
cmp
or
xor
add
add
(bad)
and
es
mov
cwde
or
shl
and
push
outs
pop
js
add
retf
add
and
mov
aas
scas
les
mov
fdiv
add
jno
test
(bad)
in
ret
nop
(bad)
xchg
mov
repnz
add
mov
or
call
adc
add
hlt
(bad)
imul
and
dec
xor
mov
das
mov
sub
in
cmp
shr
in
fucom
add
mov
repnz
ja
and
pop
push
ror
into
xlat
arpl
add
outs
jecxz
test
(bad)
jnp
mov
arpl
add
add
test
mov
fdivr
sbb
sub
in
xchg
inc
outs
fisub
cmp
fcomp
std
add
add
js
std
call
inc
repnz
mov
jg
xchg
and
das
ins
inc
imul
jns
push
clc
add
into
xor
inc
dec
dec
fidivr
or
add
(bad)
fwait
add
inc
lock
out
stos
leave
ins
and
add
mov
mov
(bad)
stc
and
or
mov
push
ret
xlat
and
add
mov
xlat
jne
and
dec
or
add
lods
xchg
pop
imul
dec
clc
jnp
(bad)
sbb
inc
sbb
repnz
out
xor
ror
xchg
in
movs
xor
add
and
pop
mov
fild
xchg
in
jecxz
mov
sbb
cmp
repnz
cmc
jae
in
fwait
or
inc
ins
push
add
inc
pop
movs
dec
cs
pop
and
add
lods
xor
jne
or
adc
rcl
add
add
jno
outs
aam
and
fs
push
div
add
imul
or
inc
sbb
dec
sbb
inc
and
cmp
bnd
sub
ror
or
xchg
das
xchg
mov
cmps
and
push
mov
and
les
add
leave
xchg
or
push
fwait
mov
inc
cmp
inc
gs
mov
push
push
push
icebp
or
add
sbb
push
add
jnp
push
inc
add
sbb
loopne
sub
mov
maskmovq
not
jle
paddb
add
shl
cmp
xchg
push
repnz
pop
push
gs
xchg
fisttp
aam
loop
stc
test
jecxz
mov
inc
xor
add
xor
mov
add
lods
scas
(bad)
fwait
imul
mov
cwde
dec
lods
shl
push
adc
fs
in
(bad)
aad
lahf
cmp
add
cmp
bnd
gs
imul
or
add
outs
or
popf
sub
sar
add
push
xor
or
sub
mov
inc
xchg
lds
add
inc
and
push
sbb
mov
push
add
addr16
sbb
sahf
jne
lods
or
push
stos
mov
dec
pop
add
mov
aad
mov
pop
das
jnp
repnz
es
lahf
sub
add
popa
lahf
cmp
fmul
push
addr16
jo
les
xor
add
loope
sbb
bound
push
push
and
jae
lds
jmp
pop
push
iret
or
or
add
je
xor
inc
dec
ins
popf
adc
and
sbb
add
xchg
and
or
dec
push
js
add
mov
ss
jecxz
sbb
repnz
loop
push
pop
dec
div
or
loope
mov
mov
fnstcw
and
fiadd
push
xchg
jg
repnz
pop
mov
(bad)
or
add
inc
xor
int
stos
outs
loopne
mov
ins
mov
call
jg
or
and
or
or
stos
pop
daa
xchg
dec
dec
mov
and
mov
aaa
mov
or
sbb
pop
daa
scas
pushf
inc
popf
xor
and
daa
ret
add
sbb
add
or
fist
addr16
and
add
das
add
cli
inc
jae
loop
pop
ffreep
je
push
add
add
and
pop
push
jb
mov
cdq
inc
cmp
vpmovzxbq
repnz
add
mov
loopne
in
pop
xchg
jecxz
cs
ret
push
(bad)
pop
popf
dec
add
mov
repnz
dec
push
sub
and
pop
and
xor
add
stos
jp
dec
push
je
aad
sub
add
inc
mov
daa
ss
add
mov
mov
xchg
jmp
fisttp
mov
repnz
mov
test
adc
ja
inc
add
add
and
xor
fmul
dec
loopne
fdivr
add
dec
cli
add
test
mov
mov
les
jae
add
cmps
(bad)
sar
lock
addr16
stos
and
sti
add
shl
addr16
adc
pop
mov
ds
and
inc
cmp
add
lods
call
mov
jl
or
jno
xchg
add
inc
in
mov
xchg
sbb
rcr
add
add
push
bnd
clc
sub
repnz
imul
cli
mov
mul
inc
jmp
sar
mov
add
inc
mov
repnz
(bad)
pop
lea
jbe
add
loopne
or
(bad)
pop
das
aad
add
lods
(bad)
add
jge
fisttp
and
shl
or
jecxz
loopne
add
push
push
loopne
in
add
push
pop
mov
and
add
test
gs
mov
cmp
dec
jg
mov
call
mov
cli
lods
add
cli
icebp
icebp
daa
pop
mov
rcr
je
and
add
jp
test
out
fdiv
cmp
je
push
or
add
out
repnz
(bad)
ret
lock
shl
fs
push
aam
imul
add
and
lods
retf
rol
add
loop
cli
or
xchg
(bad)
(bad)
jnp
and
fadd
add
mov
jl
pop
mov
sbb
outs
push
in
adc
add
call
adc
or
out
jmp
xor
cmp
add
call
and
es
xor
movs
or
add
int3
ror
or
pop
les
(bad)
cwde
pop
fs
add
push
and
add
jo
pop
fisttp
mov
add
xchg
add
sub
fsub
and
daa
(bad)
jecxz
out
add
xchg
repz
(bad)
std
xor
pushf
cwde
pop
bound
or
add
add
or
lods
(bad)
push
shl
add
mov
sahf
sub
mov
and
push
dec
adc
test
fnstenv
mov
or
(bad)
push
mov
inc
xlat
outs
test
sti
sar
add
push
stos
jle
sar
in
push
push
mov
add
inc
fcmovb
pop
dec
call
div
mov
add
jb
retf
mov
js
and
mov
loopne
jb
add
lahf
mov
ds
jmp
jl
sub
fucomip
stos
and
mov
out
loop
push
cmp
sub
inc
xor
int
add
ss
into
aad
jl
fdivr
loop
pop
mov
push
push
sub
leave
inc
sub
cmp
test
add
add
xor
sbb
rcr
in
cmc
jb
outs
add
rcl
test
sahf
shl
pop
pop
iret
repnz
nop
mov
add
xor
sti
retf
mov
mov
cmp
pop
inc
xor
add
imul
leave
inc
popf
arpl
pop
cs
les
repz
sub
repnz
and
and
js
add
(bad)
or
sbb
inc
mov
or
das
repnz
add
mov
repnz
pop
and
(bad)
test
push
push
repnz
jg
cli
pop
mov
add
inc
cmp
in
daa
stc
fist
mov
inc
and
fwait
xchg
add
das
and
int
jo
repnz
fidiv
sub
lea
jge
pushf
lods
sbb
es
mov
shl
or
int3
jg
jmp
or
in
pop
inc
push
add
mov
sar
ja
jmp
jnp
pop
repnz
add
mov
jns
sub
xor
inc
sti
xor
add
push
and
cmp
dec
jns
push
pop
mov
or
inc
fcom
or
mov
mov
add
fidiv
jmp
or
and
xor
sar
sbb
jmp
add
dec
shr
inc
jp
or
lods
inc
ins
and
jle
add
out
xchg
repnz
test
pop
cmp
add
bound
cmp
xchg
adc
enter
jns
cmc
es
add
int
sbb
test
xor
stc
inc
shl
and
add
adc
mov
fdivrp
test
pop
dec
cmp
jbe
mov
inc
imul
inc
inc
cmps
jo
add
push
cwde
dec
mov
(bad)
xchg
repz
cmps
out
or
(bad)
pushf
int
(bad)
arpl
push
or
lock
into
inc
and
xor
ror
cld
push
cs
retf
jmp
call
out
outs
nop
not
repnz
add
pop
lea
sti
lea
dec
jo
and
mov
and
mov
sub
pop
and
out
rol
mov
mov
pop
or
jo
mov
movs
jecxz
add
sbb
push
jle
inc
movs
jecxz
in
or
add
mov
ja
inc
jl
inc
int
not
imul
add
aas
mov
xchg
inc
jnp
test
inc
frstor
and
sbb
aas
fcmovnu
and
push
cli
jmp
sahf
inc
jl
or
add
sbb
add
not
pop
popf
inc
and
out
or
add
jmp
mov
jae
les
clc
mov
inc
jl
cmp
stos
popa
icebp
fs
dec
add
dec
push
int
div
dec
bound
jno
ja
add
jmp
sbb
jl
add
xor
repnz
test
inc
mov
lock
add
inc
or
or
add
or
retf
add
addr16
cdq
out
push
jnp
lock
or
aad
add
stos
mov
jmp
dec
jp
jns
and
xor
add
daa
repnz
adc
dec
dec
sub
lods
inc
sub
sbb
add
and
pop
add
dec
inc
xor
cmps
push
repz
add
and
dec
inc
cmp
or
aas
mov
pop
repz
and
dec
add
inc
(bad)
in
dec
inc
cmp
sub
and
das
add
dec
add
inc
add
cmps
repz
and
dec
inc
or
or
add
cmpxchg
repz
and
dec
inc
(bad)
fmul
or
addr16
and
aas
add
dec
inc
adc
cmps
add
je
repz
and
dec
inc
sbb
or
pop
mov
jns
repz
add
and
dec
inc
(bad)
int3
dec
inc
sbb
dec
jecxz
or
cmp
adc
repnz
repnz
repnz
and
pop
and
in
or
call
or
lock
dec
jb
or
hlt
jo
add
and
or
cs
and
gs
cmp
sub
popf
imul
add
or
sub
cmp
dec
repnz
sbb
je
add
push
aad
jge
inc
jle
cmp
pop
ror
bnd
add
or
and
pusha
add
inc
dec
xchg
jg
push
popf
imul
fild
dec
enter
repnz
add
aad
das
inc
pushf
int
inc
xchg
jle
jae
add
sub
sub
xchg
push
xchg
dec
xchg
(bad)
out
shl
add
mov
inc
xchg
js
cmp
repz
add
inc
push
push
add
inc
mov
fs
xchg
push
add
inc
xor
or
push
inc
sahf
sub
add
gs
bnd
dec
test
inc
or
inc
xchg
push
xchg
push
and
sahf
jle
add
ins
mov
into
and
add
aaa
push
xor
jmp
sub
and
xor
repnz
repnz
inc
and
repnz
add
inc
and
repnz
inc
and
repnz
repnz
inc
and
repnz
add
inc
and
repnz
inc
and
repnz
repnz
inc
and
repnz
add
inc
and
repnz
inc
and
repnz
repnz
inc
and
repnz
add
inc
and
repnz
inc
and
repnz
repnz
inc
and
repnz
add
inc
and
repnz
inc
and
repnz
repnz
inc
and
repnz
add
inc
and
repnz
inc
and
repnz
repnz
inc
and
repnz
add
inc
and
repnz
inc
and
repnz
repnz
inc
and
repnz
add
inc
and
repnz
inc
and
repnz
repnz
inc
and
repnz
add
inc
and
repnz
inc
and
repnz
repnz
inc
and
repnz
add
inc
and
repnz
inc
and
repnz
repnz
inc
and
repnz
add
inc
and
repnz
inc
and
repnz
repnz
inc
and
repnz
add
inc
and
repnz
inc
and
repnz
repnz
inc
and
repnz
add
inc
and
repnz
inc
and
repnz
repnz
inc
and
repnz
add
inc
and
repnz
inc
and
repnz
repnz
inc
and
repnz
add
inc
and
repnz
inc
and
repnz
repnz
inc
and
repnz
add
inc
and
repnz
inc
and
repnz
repnz
inc
and
repnz
add
inc
and
repnz
inc
and
repnz
repnz
inc
and
repnz
add
inc
and
repnz
inc
and
repnz
repnz
inc
and
repnz
add
inc
and
repnz
inc
and
repnz
repnz
inc
and
repnz
add
inc
and
repnz
inc
and
repnz
repnz
inc
and
repnz
add
inc
and
repnz
inc
and
repnz
repnz
inc
and
repnz
add
inc
and
repnz
inc
and
repnz
repnz
inc
and
repnz
add
inc
and
xor
push
or
