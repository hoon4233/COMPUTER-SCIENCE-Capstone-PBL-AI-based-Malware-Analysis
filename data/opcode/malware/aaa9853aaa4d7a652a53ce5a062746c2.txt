and
add
add
add
dec
add
add
add
add
dec
add
add
add
add
add
mov
add
mov
add
and
sub
add
push
add
add
add
xor
add
add
add
add
add
sub
push
outs
push
add
or
pop
outs
pop
add
or
pop
outs
and
add
add
outs
and
add
sub
xor
add
add
add
add
add
imul
add
or
and
add
fiadd
fsubr
sldt
push
add
add
or
add
add
add
add
add
adc
add
add
add
add
or
adc
add
add
sub
add
push
and
add
and
add
sub
add
add
or
pop
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
sub
add
or
add
xor
add
add
adc
sub
add
and
or
add
jae
add
or
add
or
sub
add
and
or
add
jae
add
or
add
or
sub
add
or
sub
add
push
or
sub
add
add
add
xor
add
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
add
add
xor
add
add
add
add
sub
add
and
or
add
or
outs
das
add
or
add
or
pop
outs
xor
add
and
push
sub
add
and
xor
add
and
add
adc
add
inc
add
add
add
adc
outs
xor
add
and
sub
xor
add
and
xor
add
(bad)
(bad)
call
sub
add
es
push
pop
outs
xor
push
pop
mov
add
add
add
or
add
adc
add
add
add
add
jle
add
add
push
jle
add
add
aaa
add
or
or
call
add
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
ficomp
pop
pop
or
xor
sbb
add
add
(bad)
(bad)
call
jle
add
add
pop
sub
add
add
or
xor
add
add
add
jae
add
or
jae
add
or
jae
add
or
jae
add
or
jae
add
or
sub
adc
add
or
add
adc
add
add
add
or
add
xor
add
add
adc
add
add
aas
add
or
add
xor
add
add
adc
add
add
inc
add
or
add
xor
add
add
adc
add
add
inc
add
or
add
xor
add
add
add
add
adc
add
add
inc
add
or
add
xor
add
add
add
add
add
sub
add
or
add
xor
sbb
add
or
add
add
jnp
add
add
add
add
and
add
jnp
add
add
add
add
or
inc
add
add
add
add
add
add
add
adc
inc
add
add
idiv
(bad)
call
sub
add
sub
sub
sbb
add
add
(bad)
(bad)
call
sub
add
and
add
jp
add
add
add
add
sub
add
sbb
push
add
add
adc
mov
add
sbb
pop
inc
add
add
idiv
(bad)
call
sub
add
es
(bad)
push
push
add
sbb
add
or
add
jle
add
add
inc
sbb
add
add
idiv
(bad)
(bad)
jle
add
add
push
add
sbb
inc
add
or
add
and
dec
sub
add
and
add
add
inc
add
or
add
jp
dec
add
or
jle
add
add
push
add
sbb
inc
add
or
dec
add
or
add
add
or
add
add
add
add
add
add
idiv
(bad)
jmp
push
sub
and
add
or
add
or
add
inc
push
inc
(bad)
adc
and
pop
add
push
and
add
add
dec
add
or
add
or
inc
add
or
outs
dec
add
or
add
jp
or
add
push
add
sbb
inc
add
or
add
or
sub
add
push
sub
add
add
add
add
cmp
add
add
add
adc
adc
add
sbb
add
or
add
add
push
push
add
sbb
add
or
adc
(bad)
adc
push
add
adc
add
adc
add
or
add
push
add
or
add
and
add
xor
add
add
add
add
adc
sub
or
add
xor
add
add
adc
pop
add
add
inc
add
or
add
xor
add
add
add
add
adc
sub
add
and
add
xor
add
add
add
add
add
sub
add
or
add
xor
adc
add
or
add
push
add
or
add
and
add
xor
add
add
add
add
adc
sub
or
add
xor
add
add
adc
or
add
sub
add
and
add
xor
add
add
add
add
adc
sub
add
and
add
xor
add
add
add
add
add
sbb
inc
add
add
idiv
(bad)
call
sub
add
sub
add
sub
add
add
xor
add
add
add
add
add
add
adc
push
add
add
or
pop
add
add
add
add
sub
add
or
add
xor
add
add
add
add
adc
add
or
or
add
add
and
add
jle
add
or
add
add
or
and
add
add
add
add
push
add
or
add
add
jae
add
or
pop
add
or
outs
daa
add
push
sub
xor
add
add
add
add
add
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
add
or
jnp
add
add
pop
add
or
or
add
pop
add
or
sub
adc
add
add
add
sub
or
add
add
xor
add
add
adc
add
ror
add
add
inc
add
or
add
or
jae
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
outs
sub
add
and
add
or
outs
sub
add
adc
pop
jnp
je
arpl
add
or
add
or
outs
sub
add
and
add
sub
add
outs
add
or
outs
sub
add
adc
nop
sub
add
adc
add
or
outs
sub
add
and
add
or
outs
sub
add
and
add
or
outs
sub
add
and
add
or
outs
sub
add
adc
push
push
sub
add
or
add
or
outs
sub
add
and
add
sub
add
and
add
add
add
push
and
or
add
sbb
data16
or
add
add
or
outs
sub
add
and
add
or
outs
sub
add
and
add
or
outs
sub
add
and
nop
add
add
jno
arpl
add
or
add
or
outs
sub
add
and
add
sub
add
and
add
add
add
push
and
lahf
add
add
adc
data16
or
add
add
or
outs
sub
add
and
add
or
outs
add
push
and
add
or
outs
add
push
and
add
sub
add
and
jl
push
sbb
jae
add
or
add
or
outs
add
push
and
jnp
add
pop
imul
add
or
outs
add
or
outs
add
push
and
add
sub
add
and
add
add
add
push
adc
add
sub
add
adc
add
or
outs
add
push
and
add
or
outs
add
push
and
add
sub
add
and
add
add
push
and
add
inc
and
add
sub
add
adc
outs
jno
add
add
outs
jb
add
add
and
add
add
pop
add
push
and
add
and
add
outs
je
add
add
outs
jne
add
add
add
or
add
and
data16
or
add
jbe
add
add
add
or
outs
add
push
and
add
add
add
or
add
push
and
add
add
add
or
outs
sub
add
and
add
add
add
or
add
push
and
add
add
jns
add
and
add
add
outs
jnp
add
add
and
add
sub
add
and
add
je
add
add
add
or
push
outs
jge
add
add
outs
jle
add
add
outs
add
add
pop
add
push
outs
add
or
and
data16
aas
outs
jg
add
add
jns
add
sub
add
outs
add
or
push
outs
add
add
or
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
add
add
adc
add
add
add
jae
add
or
add
add
add
pop
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
add
outs
add
or
add
add
add
jnp
add
add
push
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
outs
test
add
sub
adc
add
pop
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
adc
add
add
add
sbb
add
push
sub
add
xor
add
add
add
sub
add
xor
add
add
add
sub
add
xor
add
add
add
add
adc
add
or
push
add
add
or
pop
add
add
sbb
add
add
xchg
add
adc
or
or
mov
add
and
sub
add
mov
add
adc
pop
inc
pop
mov
outs
xor
add
and
or
add
add
(bad)
(bad)
call
sub
add
es
add
or
outs
push
add
or
pop
(bad)
or
mov
lahf
sbb
add
add
(bad)
(bad)
inc
sub
add
sbb
push
add
add
add
add
adc
sub
adc
jns
add
pop
outs
mov
add
and
add
adc
add
mov
add
adc
sub
adc
add
or
pop
sub
and
adc
add
inc
sub
add
push
and
add
and
lea
add
sub
es
pop
inc
add
add
idiv
(bad)
call
sub
add
es
outs
push
add
or
add
(bad)
adc
add
add
(bad)
(bad)
call
inc
add
add
idiv
(bad)
(bad)
fisub
and
or
add
and
pop
add
and
add
or
add
sub
add
add
add
add
add
lahf
lahf
add
cmp
add
adc
push
add
add
adc
sub
and
lock
push
or
call
sub
add
push
and
add
or
sub
es
add
add
inc
sub
add
push
or
sub
add
sbb
push
add
add
sbb
or
push
add
pop
add
pop
push
push
outs
dec
add
push
and
ficom
or
adc
in
inc
add
add
idiv
(bad)
call
sub
add
add
pop
push
add
push
outs
dec
add
push
pop
or
adc
or
add
or
add
sub
add
add
add
add
dec
dec
add
cmp
add
sbb
add
add
add
adc
pop
push
add
add
add
push
add
push
add
(bad)
or
pop
(bad)
or
out
inc
add
add
idiv
(bad)
call
sub
add
add
pop
push
add
push
or
or
(bad)
sub
or
add
nop
add
or
add
sub
add
add
add
add
inc
inc
add
cmp
add
sbb
push
add
add
sbb
or
push
add
and
add
push
push
outs
push
add
push
and
ficom
xchg
add
or
pop
(bad)
or
adc
fstp
idiv
(bad)
call
sub
add
add
pop
push
add
push
outs
dec
add
push
pop
or
adc
or
add
or
add
sub
add
adc
add
add
add
adc
add
add
xor
add
add
adc
pop
push
add
add
add
push
add
push
and
ficom
xchg
add
or
pop
(bad)
or
fstp
inc
add
add
idiv
(bad)
call
sub
add
add
pop
push
add
push
or
or
(bad)
sub
or
add
nop
add
or
add
sub
adc
add
add
add
add
cmp
add
sbb
push
add
add
sbb
or
push
add
sbb
add
push
push
outs
push
add
push
and
ficom
pop
(bad)
or
adc
loop
inc
add
add
idiv
(bad)
call
sub
add
add
pop
push
add
push
outs
dec
add
push
pop
or
adc
or
add
or
add
sub
add
add
add
add
add
dec
dec
add
cmp
add
sbb
add
add
add
adc
pop
push
add
add
add
push
add
push
and
ficom
pop
(bad)
or
loop
inc
add
add
idiv
(bad)
call
sub
add
add
pop
push
add
push
and
fimul
and
or
add
nop
add
or
add
sub
add
add
add
add
add
dec
dec
add
cmp
add
adc
push
add
add
adc
sub
and
lock
push
or
call
sub
add
push
and
add
and
pop
add
cmp
sub
es
push
mov
nop
add
add
add
adc
adc
sub
add
push
or
mov
add
and
add
and
(bad)
or
pop
(bad)
or
adc
rcr
add
add
idiv
(bad)
call
sub
add
sub
add
xor
add
add
add
add
adc
sub
adc
push
add
push
adc
call
sub
add
push
and
add
and
pop
or
add
or
add
add
add
inc
pop
sub
sub
es
push
or
outs
and
pop
add
push
add
add
or
add
and
add
and
add
and
or
mov
add
and
(bad)
mov
add
pop
push
adc
adc
sub
add
push
and
mov
add
add
and
add
and
(bad)
or
sbb
or
pop
(bad)
or
adc
xor
xor
add
add
add
add
adc
and
pop
add
push
and
add
and
and
pop
add
push
and
add
cwde
add
or
add
sub
es
mov
inc
add
add
idiv
(bad)
call
sub
add
add
rol
add
pop
add
push
and
add
and
add
and
push
add
push
or
call
sub
add
push
and
add
and
lea
add
sub
es
and
add
add
pop
add
push
and
add
add
pop
add
push
sub
sub
es
add
add
or
add
add
add
adc
add
push
and
add
adc
push
add
add
and
add
add
xchg
add
and
lock
push
or
call
sub
add
push
and
add
and
add
add
or
push
add
adc
add
aaa
add
push
es
sub
sub
add
push
and
add
adc
push
add
add
and
sub
es
push
add
push
or
call
sub
add
push
and
add
and
add
add
or
push
add
adc
add
cmp
add
and
mov
add
sub
add
push
and
add
adc
pop
add
add
add
adc
sub
es
push
add
push
or
call
sub
add
push
and
add
or
add
push
and
push
sub
mov
adc
cmp
add
es
sub
xor
add
and
add
adc
push
add
add
adc
sub
and
lock
push
pop
push
call
xor
add
sub
add
or
add
sub
push
sub
es
(bad)
add
sub
sub
adc
pushf
add
or
adc
sub
es
(bad)
or
rcr
add
add
idiv
(bad)
call
sub
add
es
sub
add
adc
push
add
add
add
add
adc
and
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
mov
add
sub
add
and
add
cwde
add
or
or
add
sub
or
add
rol
add
pop
add
push
and
add
and
add
and
and
lock
push
or
call
sub
add
push
sub
or
jle
add
or
mov
add
and
fld
add
sub
add
and
add
add
pop
add
push
and
add
and
add
and
add
pop
sub
es
adc
add
push
and
sub
sub
add
adc
push
add
add
sub
add
add
xchg
add
and
push
or
call
sub
add
push
sub
or
sub
adc
add
push
and
mov
add
sub
add
push
and
sub
adc
push
add
add
sub
add
add
xchg
add
or
adc
or
call
sub
add
push
and
add
and
pop
sub
es
adc
add
push
and
mov
add
and
add
adc
add
xor
add
add
sub
add
add
mov
add
sub
add
outs
xchg
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
mov
add
sub
add
and
add
cwde
add
or
add
sub
push
mov
add
sbb
add
(bad)
(bad)
jmp
push
add
push
push
push
call
xor
add
and
add
and
lea
add
sub
lahf
add
add
or
sub
es
and
add
add
add
inc
pop
sub
sub
sub
es
add
and
pop
add
push
add
add
sub
sub
sub
sub
xchg
add
or
adc
adc
push
adc
pop
sub
or
mov
pop
pop
adc
sub
add
push
and
mov
push
or
(bad)
or
adc
pop
(bad)
or
adc
and
add
add
pop
add
push
and
add
add
pop
add
push
sub
cdq
add
or
add
add
add
pop
add
push
and
add
and
add
and
add
add
or
add
add
add
add
sub
add
adc
add
add
add
adc
outs
sub
add
and
add
sub
sbb
add
add
(bad)
(bad)
call
sub
add
and
add
sub
add
and
into
add
pop
add
add
pop
add
push
sub
add
add
add
push
outs
lahf
add
or
pushf
add
or
dec
add
add
pop
add
push
and
cmp
pop
outs
dec
add
push
and
and
add
sub
add
and
into
add
arpl
add
sub
add
and
add
sub
adc
add
add
add
add
jle
add
add
sub
es
and
add
sub
add
and
add
sub
add
outs
mov
es
add
or
pop
adc
add
adc
add
add
adc
add
push
add
add
adc
add
add
add
or
pop
add
add
add
add
adc
add
add
xor
add
add
add
add
add
add
push
sub
or
add
adc
add
add
or
push
add
or
add
add
add
or
pop
add
add
add
add
sub
add
or
sub
add
add
add
sub
add
push
outs
movs
add
or
sbb
add
add
(bad)
(bad)
call
sub
add
sub
push
and
add
sub
xor
jnp
add
add
adc
add
add
outs
pop
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
pop
sub
or
adc
sub
adc
add
add
add
(bad)
(bad)
jmp
sldt
push
and
pop
add
push
jae
add
or
add
or
adc
add
adc
sub
sbb
add
add
(bad)
(bad)
inc
sub
jle
add
add
add
adc
add
add
add
popa
add
add
add
xor
add
add
add
add
adc
pop
add
push
and
add
add
add
adc
add
add
push
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
jo
push
sub
or
lods
add
or
mov
scas
add
or
add
or
add
or
push
sub
add
and
add
add
add
or
pop
add
add
add
add
sub
add
or
add
xor
add
add
adc
or
add
add
xchg
and
sub
add
add
(bad)
(bad)
call
sub
add
es
add
add
xchg
or
pop
pop
dec
add
cmp
add
add
add
xchg
pop
inc
pop
sub
add
add
(bad)
(bad)
(bad)
jle
add
add
xchg
and
(bad)
call
bound
push
jle
add
add
pop
pop
xchg
pusha
or
sbb
or
add
inc
jle
add
add
xchg
and
(bad)
(bad)
call
sbb
push
jle
add
add
pop
pop
xchg
pop
adc
or
jle
add
add
sbb
push
bound
push
jle
add
add
sbb
pusha
or
sbb
or
add
pop
das
push
jle
add
or
sub
es
add
add
push
outs
scas
add
or
pop
sub
add
add
xor
add
add
add
add
adc
sbb
add
sbb
add
(bad)
(bad)
(bad)
jg
pop
add
add
add
add
add
jae
add
or
push
jae
add
or
jae
add
or
sub
add
add
or
pop
add
add
add
add
sub
add
or
add
xor
and
add
adc
outs
xor
add
and
sub
xor
add
and
xor
push
push
pop
outs
xor
or
sub
add
sbb
add
call
adc
outs
xor
add
or
jb
add
jo
mov
add
or
push
das
or
jb
add
jo
mov
add
or
push
das
add
imul
addps
push
pop
outs
mov
add
and
push
push
pop
outs
mov
add
pop
dec
xor
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
pop
adc
add
or
add
add
sub
es
add
and
add
mov
add
adc
add
add
adc
adc
add
add
add
add
add
xor
add
add
add
add
adc
add
add
or
mov
popa
push
sub
add
and
pop
sub
push
sub
add
add
add
or
push
sbb
pop
add
add
sbb
add
sbb
add
xor
add
add
add
push
and
es
popa
push
sub
add
and
push
sub
adc
add
add
add
or
punpckldq
add
adc
pop
add
add
add
add
add
adc
add
add
or
ror
or
mov
or
pop
or
pop
inc
add
add
idiv
(bad)
call
sub
add
or
pop
cmp
add
add
inc
add
add
idiv
(bad)
push
add
or
add
lea
add
add
add
push
outs
mov
adc
add
or
lea
add
add
push
add
push
push
push
outs
mov
es
adc
adc
adc
and
adc
or
or
sbb
add
add
(bad)
(bad)
call
adc
sub
adc
pop
pop
adc
adc
adc
sbb
add
add
idiv
(bad)
call
pop
sub
sub
add
and
add
and
add
push
outs
mov
sbb
add
add
add
(bad)
(bad)
(bad)
jle
add
add
(bad)
(bad)
(bad)
jg
adc
add
add
outs
mov
outs
mov
movd
add
add
pop
add
add
mov
sbb
add
push
rol
or
add
rol
or
or
add
or
or
add
or
outs
ret
add
or
add
adc
adc
outs
ret
or
add
adc
outs
les
add
and
sub
add
or
adc
outs
mov
es
adc
adc
adc
push
outs
lds
add
and
sbb
add
or
adc
outs
mov
or
or
or
pop
push
outs
mov
mov
add
idiv
(bad)
inc
adc
add
add
or
pop
imul
adc
adc
add
add
or
pop
imul
adc
jle
add
add
movhps
jle
add
jle
add
add
push
push
push
rol
or
add
add
or
pop
cmp
inc
add
add
idiv
(bad)
(bad)
jle
add
add
inc
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
add
add
add
add
idiv
(bad)
(bad)
jle
add
add
outs
mov
imul
add
sub
jle
add
add
sbb
add
mov
sbb
add
push
rol
or
push
jae
add
or
adc
call
adc
adc
adc
adc
adc
push
adc
outs
mov
adc
adc
push
xor
jle
add
add
adc
adc
outs
mov
or
adc
adc
(bad)
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
pop
sub
sbb
add
add
(bad)
(bad)
inc
outs
leave
add
or
add
add
or
add
or
lea
add
add
adc
adc
adc
imul
es
add
xor
add
add
add
add
add
sub
add
or
add
xor
cmp
add
add
add
add
add
or
sub
xor
add
and
xor
sbb
add
add
(bad)
(bad)
call
sub
add
es
push
pop
outs
xor
or
sub
xor
add
xlat
add
jo
adc
push
sub
add
or
add
sub
add
or
add
or
sub
add
and
add
and
add
add
add
add
jb
add
jo
adc
or
sbb
add
adc
adc
jb
add
jo
into
add
or
sbb
add
jo
adc
iret
add
or
rol
add
jp
add
add
add
xor
push
push
pop
ret
and
add
adc
stos
fld
sub
pop
or
push
scas
mov
push
loopne
adc
mov
sbb
fidiv
inc
jno
loope
lds
jmp
sbb
pusha
sbb
test
cmps
and
xor
push
fidivr
idiv
xchg
lods
sbb
jbe
test
inc
mov
retf
ret
jne
push
xchg
and
xor
sbb
push
es
rcr
pop
add
inc
data16
js
mov
cli
mov
sub
push
in
div
xchg
gs
clc
ins
in
mov
xor
std
or
(bad)
loop
test
push
test
inc
push
jecxz
fadd
mov
xchg
ss
pop
push
(bad)
retf
add
in
cmps
cmp
push
(bad)
in
jp
inc
imul
xlat
cmp
add
es
(bad)
outs
mov
frstor
xlat
pop
inc
mov
push
cmc
inc
out
xchg
iret
mov
lahf
fwait
inc
aam
fcomp
and
and
enter
pop
dec
jnp
pop
or
jl
pop
mov
mov
ret
ss
xchg
shr
lahf
dec
adc
sti
mov
lods
jnp
mov
jge
add
fiadd
or
mov
enter
sbb
inc
pop
stc
pop
js
pop
ret
fiadd
fisttp
stos
rol
scas
clc
sbb
ret
pop
daa
jne
mov
mov
and
xchg
fdivr
inc
pop
aas
icebp
or
fimul
push
out
inc
test
iret
jno
cmp
xor
lock
enter
icebp
aad
stos
cwde
mov
lods
test
nop
mov
mov
pop
cmp
daa
jmp
pop
aad
inc
dec
sbb
add
jle
fs
js
push
or
mov
data16
lea
jne
outs
mov
dec
in
sub
repnz
and
lock
mov
adc
push
cmps
jp
lds
ret
sahf
or
rcl
rcl
add
jno
cdq
push
and
test
addr16
imul
ss
sbb
sub
or
add
inc
out
pop
and
or
ja
xchg
cmp
and
mov
or
xchg
inc
dec
add
inc
cmp
dec
or
call
and
dec
mov
adc
fdiv
dec
add
cwde
ins
loopne
mov
mov
push
mov
add
fdiv
test
and
push
and
fisttp
push
mov
ss
stc
loopne
cmp
pop
cmp
jno
fwait
leave
dec
mov
dec
mov
(bad)
fstp
aad
fiadd
push
jne
movs
xchg
fwait
outs
adc
arpl
xchg
je
jmp
inc
xchg
and
aas
not
inc
(bad)
mov
test
dec
jmp
mov
push
pop
retf
out
push
stos
jmp
loop
inc
jmp
push
sbb
add
jge
add
scas
xchg
clc
mov
mov
inc
dec
mov
lods
mov
sbb
ret
(bad)
xor
jae
jecxz
mov
ja
push
jb
sahf
cmc
push
dec
add
cmps
xchg
push
cmp
jnp
call
mov
sar
int
xchg
dec
xor
adc
sar
mov
rcl
and
lds
jg
pop
sub
mov
rcl
dec
mov
cmp
mov
pop
xor
inc
pop
fst
xor
or
jle
xchg
add
xor
jae
pop
arpl
xchg
mov
jbe
mov
je
dec
mov
int3
js
shl
hlt
mov
jmp
stc
jg
shr
mov
retf
popf
mov
loop
adc
fs
loop
sahf
or
repz
sub
(bad)
aad
jle
jae
movs
pop
test
cmp
sub
or
inc
add
pop
jge
sub
in
pop
pop
mov
and
push
test
call
jg
adc
and
jo
adc
ins
pop
inc
test
ret
cmp
icebp
test
hlt
jo
add
pop
add
jo
push
xlat
inc
fcomp
pop
pop
add
addr16
sub
and
or
pop
ficom
(bad)
fwait
cmp
fwait
aas
sbb
(bad)
pushf
cli
xchg
pop
cmp
dec
cmp
mov
leave
in
dec
ins
loope
imul
jae
add
pushf
mov
out
ins
jno
sbb
xchg
push
or
aam
jne
mov
enter
shl
mov
(bad)
push
dec
add
sar
loopne
sahf
cmp
dec
js
call
sub
loope
or
repz
outs
inc
and
lods
aad
or
sbb
pop
sub
ins
rol
add
cld
sub
mov
sbb
test
jmp
jns
addr16
xchg
std
pop
xor
(bad)
jl
in
test
or
ds
mov
pop
aad
dec
mov
inc
inc
dec
push
aad
(bad)
ins
sahf
inc
stc
mov
or
stos
push
adc
addr16
popf
ja
cld
jmp
fld
pop
xchg
dec
lock
out
pushf
pop
mov
mov
mov
loop
push
je
xchg
mov
cld
ret
xor
push
std
sub
stos
in
pop
and
es
das
cmc
scas
daa
daa
retf
mov
adc
lods
test
sbb
into
inc
pop
push
adc
inc
(bad)
mov
sti
adc
jle
inc
movs
jns
icebp
push
bound
ja
jmp
xchg
inc
or
(bad)
cmp
aaa
xor
mov
mov
(bad)
mov
sub
cmp
fisubr
repnz
mov
repnz
cmp
push
scas
aaa
gs
inc
cmps
dec
push
(bad)
jmp
pop
xor
dec
sub
fcomp
and
xchg
fs
(bad)
arpl
or
loop
mov
jle
movs
fist
ds
ret
int3
outs
pop
aam
add
xlat
mov
push
retf
xchg
cmp
sub
call
pushf
aam
add
pop
push
mov
fisttp
jmp
jns
imul
jmp
and
arpl
cmps
jg
retf
(bad)
jle
ss
repz
int
jg
or
fld
jne
mov
mov
push
sub
jle
fistp
mov
push
clc
dec
jnp
sbb
push
xor
bound
add
inc
mov
ror
fcomp
stos
sbb
call
adc
cdq
addr16
adc
cmps
push
dec
sahf
sbb
movs
jnp
mov
repnz
xchg
mov
outs
cdq
arpl
sbb
in
sbb
adc
push
sbb
clc
xchg
sar
mov
mov
push
ss
mov
cdq
test
mov
pop
stos
sub
das
xchg
adc
pop
jmp
cmp
lock
jmp
jb
imul
stos
(bad)
sbb
cdq
cmps
add
inc
ficom
aad
imul
jae
mov
dec
or
adc
pop
call
stos
outs
scas
stos
je
cmp
neg
movs
mov
js
push
ret
int3
mov
cmp
and
dec
jbe
pop
jmp
dec
pop
cmp
ds
and
cli
call
push
in
ins
dec
dec
movs
add
mov
jp
inc
xchg
loope
outs
sbb
sbb
sbb
stos
sub
lahf
push
call
mov
fsub
mov
dec
imul
xor
retf
js
sbb
outs
sar
cld
in
or
nop
xchg
push
mov
ja
pop
vpunpcklwd
addr16
test
lods
mov
mov
out
xor
and
push
inc
cmp
clc
mov
mov
outs
arpl
pop
mov
pop
jno
pop
shl
aad
rol
popa
in
inc
icebp
xlat
sbb
add
test
inc
xor
pop
pop
popa
mov
aas
mov
cli
xchg
fst
mov
mul
fwait
mov
push
loopne
fs
mov
add
adc
(bad)
dec
call
mov
push
pop
xchg
stos
cmp
add
in
jne
popa
mov
push
mov
gs
stos
jl
es
addr16
adc
stos
lahf
cs
jnp
aam
xor
push
pop
popa
scas
inc
int3
inc
mov
push
add
xchg
cmp
cmp
and
pop
bound
outs
(bad)
cmp
and
clc
popa
popf
sbb
pop
pop
or
dec
add
push
loopne
stc
imul
mov
mov
mov
test
(bad)
cld
std
mov
test
popf
adc
push
add
push
test
(bad)
push
(bad)
pop
loope
imul
std
fwait
mov
daa
imul
outs
hlt
push
add
cdq
dec
std
lahf
pop
shl
mov
mov
dec
or
arpl
jmp
mov
xor
test
test
ret
cmps
(bad)
mov
popa
mov
lahf
cmps
push
sahf
mov
and
mov
jle
and
in
xchg
inc
sbb
and
sti
jle
pop
adc
adc
icebp
cmps
add
not
jmp
js
retf
xor
add
into
fiadd
test
or
push
in
leave
mov
sub
sub
inc
mov
outs
sub
int3
lds
push
mov
mov
call
mov
add
sar
jns
sub
jne
les
push
xor
xchg
into
into
test
out
sub
xlat
cli
inc
outs
(bad)
out
mov
into
cmp
repz
stos
cmp
mov
jns
into
ret
add
div
cmps
in
and
dec
pusha
adc
and
int3
sub
mov
cwde
sub
jl
and
loopne
xchg
jl
xchg
dec
dec
sub
sbb
(bad)
xor
dec
test
js
sbb
stc
popa
adc
push
cs
out
xchg
retf
call
mov
cmc
mul
loop
mov
iret
rcr
push
cmp
fnop
inc
inc
cmps
dec
mov
cs
mov
out
mov
jne
sti
and
addr16
sti
fiadd
shr
cld
mov
add
or
inc
and
lea
dec
push
jno
movs
mov
add
mov
push
add
mov
frstor
test
xor
sbb
inc
(bad)
jmp
daa
sub
xor
in
in
lock
pushf
xchg
(bad)
fnstsw
cmp
fiadd
sub
pop
fisttp
and
ins
dec
jmp
pushf
dec
jp
sub
adc
mov
and
sbb
outs
dec
pop
int3
(bad)
cmp
je
pop
push
bound
lods
(bad)
lock
cwde
adc
dec
and
cmps
fbstp
movs
daa
add
push
xor
add
cmp
lds
outs
movs
mov
fnsave
mov
mov
push
mov
mov
daa
sbb
mov
stos
(bad)
adc
lock
cli
jp
sub
and
aas
push
mov
xor
dec
div
jle
jl
scas
cdq
inc
(bad)
adc
inc
push
xchg
mov
push
sub
mov
(bad)
fidivr
sub
xor
dec
pop
mov
adc
inc
fld
jge
sbb
jge
iret
push
jnp
(bad)
fmul
jno
push
es
jle
xor
lahf
xchg
fs
pop
data16
or
jmp
dec
dec
(bad)
lock
test
les
int3
jae
sub
mov
inc
adc
es
xor
popa
out
or
cli
cmp
(bad)
mov
mov
mov
test
jne
jecxz
inc
daa
mov
in
ins
lods
cdq
outs
adc
fld
push
popa
das
push
dec
in
(bad)
sti
in
(bad)
repz
xchg
pop
(bad)
in
cmps
xchg
sahf
ins
sbb
jle
shl
fwait
or
repz
mov
stos
adc
push
sub
mov
repnz
das
and
neg
gs
adc
repz
mov
xchg
cmp
stos
dec
cs
cmp
retf
enter
xchg
inc
in
sbb
je
push
mov
dec
jg
std
loopne
cli
mov
aas
dec
out
and
or
sub
inc
add
cwde
mov
adc
pop
jg
cmps
push
ins
pushf
icebp
mov
pop
cmp
fild
ficom
in
jb
mov
les
mov
cmp
icebp
or
cmp
mov
imul
test
mov
leave
test
add
cli
jmp
out
adc
or
xchg
dec
movs
ins
and
cmps
mov
jp
sub
fadd
ss
cmp
dec
ret
xchg
xchg
ror
xor
inc
popa
mov
inc
sub
stc
or
fidiv
adc
cmp
hlt
cmp
xchg
jnp
cdq
ffree
adc
outs
jge
or
clc
dec
mov
sub
pop
fdivr
add
repz
adc
div
cmp
imul
mov
aad
push
cmps
retf
mov
out
scas
int3
add
popf
cld
call
cmp
movs
cld
mov
mov
ret
cmps
or
cmp
push
loop
inc
jge
cmp
imul
lods
out
add
loop
or
not
shl
xor
mov
sub
rcl
inc
xor
fsub
jmp
fnstcw
fadd
clc
inc
jns
js
mov
and
lahf
int3
xchg
add
jae
retf
pusha
jecxz
(bad)
jge
push
dec
shr
icebp
lods
test
or
adc
or
adc
or
iret
cmp
(bad)
mov
pop
es
nop
push
clc
pop
mov
(bad)
div
xor
cdq
xor
push
out
lods
cmp
mov
mov
stos
push
cmp
jp
xor
add
hlt
aaa
cmps
(bad)
popa
sbb
sbb
(bad)
mov
mov
and
arpl
xor
xor
enter
lea
ins
jg
(bad)
fdivr
fist
in
xor
mov
mov
push
mov
ds
call
sbb
sbb
cld
inc
cmp
pop
cmp
dec
mov
ror
lods
ins
cmovne
adc
data16
mov
popf
icebp
stc
outs
dec
sub
sub
pop
sbb
mov
xchg
adc
sub
dec
mov
sbb
in
mov
test
sbb
xor
jbe
lods
(bad)
fisubr
stc
add
add
xchg
jmp
js
call
add
and
in
adc
dec
jo
jl
popf
ret
add
mov
bound
mov
movs
xor
(bad)
hlt
push
inc
aad
jbe
cdq
dec
mov
xor
mov
call
adc
aas
test
cmp
cmp
add
fs
daa
jmp
jnp
das
pop
lods
in
test
push
cld
xor
jns
into
mov
and
test
dec
pop
jb
or
pushf
xchg
jno
cld
mov
lds
popf
adc
aad
pop
jle
outs
pop
in
jne
outs
inc
inc
into
or
daa
cdq
aas
jo
(bad)
mov
pop
pop
jns
push
add
sahf
jo
shl
xchg
cmc
int
pop
mov
and
addr16
add
repnz
fdivr
add
nop
mov
imul
hlt
pop
icebp
sub
repz
loopne
test
rcr
mov
retf
mov
cli
dec
adc
xchg
loop
mov
or
fmul
cmps
(bad)
xchg
shl
jmp
pop
cmp
xchg
lods
mov
lahf
push
rcl
jge
fcomp
add
mov
adc
pop
sub
fucom
je
push
jecxz
enter
icebp
pop
xchg
push
jl
jmp
pop
call
icebp
mov
in
fs
ins
mul
iret
stos
daa
das
mov
fistp
fwait
inc
mov
int3
nop
xrelease
pushf
add
icebp
nop
imul
add
sub
nop
xchg
aad
int3
push
movs
adc
jne
xor
fld
push
jb
jnp
(bad)
cmp
sbb
test
test
mov
out
cdq
jl
lds
mov
pop
xchg
add
add
cld
sar
adc
and
stc
mov
mov
or
dec
jmp
stos
inc
dec
mov
mov
daa
repz
add
inc
pop
cmp
or
cmp
cmp
sar
xor
js
push
fwait
dec
push
mov
mov
inc
scas
inc
dec
pop
fwait
je
movs
dec
div
pop
cmc
cmp
test
mov
in
in
fsub
fistp
mov
dec
shl
sti
mov
loopne
cmp
fistp
ds
jp
xor
mov
aas
cmps
bnd
sub
loope
adc
enter
mov
jmp
sbb
xor
outs
xchg
xchg
fist
in
pop
sub
sub
lahf
call
fwait
push
and
jecxz
in
push
scas
pop
jnp
mov
inc
sub
aam
xor
xchg
mov
push
aad
ss
sub
mov
cmps
sub
push
call
pop
inc
aas
repz
and
cdq
iret
mov
jmp
push
and
or
jb
inc
and
aas
(bad)
cmc
sahf
test
push
pop
dec
jle
test
add
mov
inc
daa
sbb
aaa
ds
add
repz
repz
aas
scas
mov
inc
push
shl
or
fisub
cwde
xchg
(bad)
jg
inc
cmp
mov
jns
xlat
call
js
test
cmp
mov
leave
(bad)
pop
mov
icebp
test
pop
ss
rcl
jae
cmp
test
call
addr16
not
cmps
aam
ret
clc
push
pop
xor
or
cmp
cdq
rol
mov
adc
cdq
xchg
stos
push
pop
push
out
jl
cmps
mov
cmps
out
pop
loopne
mov
pop
jne
pop
fidivr
outs
sbb
scas
xchg
xchg
mov
lock
sbb
cmps
nop
push
fdivr
aaa
sbb
iret
int3
shr
xchg
adc
pop
cld
fcom
inc
popa
mov
or
cmp
mov
cmp
sub
mov
push
or
or
jbe
aad
dec
dec
pop
jge
call
pop
dec
fisubr
xchg
(bad)
(bad)
sahf
mov
xor
sub
(bad)
jns
and
std
add
xchg
sbb
mov
fdivr
mov
add
jmp
mov
dec
aam
sub
and
xchg
jae
mov
push
jne
fwait
jb
test
aaa
js
leave
inc
xchg
and
adc
stos
jp
ret
int
repz
xor
in
repz
jb
les
and
jnp
push
add
and
push
in
or
popa
or
xor
aaa
test
mov
test
mov
clc
pop
jns
imul
jae
jmp
inc
push
dec
fiadd
jns
adc
xchg
int
sti
mov
fucomi
scas
lock
xchg
add
adc
sbb
in
or
jg
jb
es
(bad)
sub
jp
outs
lods
ins
mov
das
pop
and
push
dec
jl
outs
push
jne
cs
add
xor
clc
mov
or
push
push
outs
sub
lea
int3
daa
test
dec
mov
mov
stc
and
or
add
popf
fwait
mov
inc
jge
pop
fbstp
jmp
rcr
cmps
mov
shl
leave
repz
or
cmps
or
and
ss
sub
cli
daa
cmp
and
and
inc
xchg
test
je
ss
sbb
aad
sbb
(bad)
mov
ins
pop
dec
push
mov
lods
jle
dec
leave
mov
loope
not
test
in
and
pop
push
in
mov
sub
mov
cmp
or
xchg
fs
cmp
dec
push
adc
loope
adc
sbb
retf
movs
xchg
cmp
adc
ret
es
sub
adc
push
leave
repz
leave
mov
push
jmp
sti
cmps
clc
pusha
push
mov
not
xchg
cmp
pop
jle
stc
iret
sub
xor
imul
(bad)
hlt
sbb
arpl
push
clc
dec
repz
xor
sbb
sub
retf
lea
pop
rol
das
in
xor
sbb
fstp
stos
push
imul
mov
popa
cmps
mov
jmp
sub
aaa
in
xchg
sbb
push
stos
jp
jne
add
loop
mov
mov
inc
jb
nop
(bad)
pop
push
sbb
xchg
ud1
(bad)
jecxz
lods
je
into
pop
pop
push
mov
aam
dec
push
es
lea
dec
mov
lea
pop
mov
dec
enter
and
adc
mov
enter
lea
cmp
mov
dec
cmp
jmp
and
sub
mov
sub
pop
imul
cmp
loope
in
xchg
sub
hlt
sub
pop
ficomp
in
jno
fiadd
sbb
adc
mul
sbb
repz
imul
(bad)
shr
xchg
retf
jae
pop
and
adc
imul
push
inc
int3
sbb
loop
mov
push
push
pop
xor
mov
xor
dec
inc
stos
push
ins
or
test
mov
xor
push
inc
cs
xchg
cs
shl
xor
pop
test
or
mov
pushf
loop
and
imul
mov
adc
push
adc
inc
or
jl
fs
jmp
(bad)
call
dec
mov
inc
popa
mov
ret
dec
lea
sub
(bad)
mov
ror
ins
xchg
and
and
dec
test
popa
push
rcr
mov
sar
and
ja
cmp
cli
sahf
into
lock
sbb
push
cmp
fmul
out
idiv
jp
push
fs
fstp
mov
sub
je
adc
cmp
loope
ficom
sub
adc
mov
sbb
xor
js
nop
cli
push
push
push
popa
ret
adc
ret
add
adc
sbb
jecxz
je
leave
nop
aam
jmp
sar
xor
sub
cmp
dec
shr
dec
sbb
fisubr
popa
iret
push
(bad)
dec
imul
rol
and
adc
xchg
out
lds
shr
pusha
inc
mov
fisttp
lods
enter
sub
add
arpl
(bad)
fcomp
mov
movs
daa
xchg
cwde
mov
repz
xor
inc
mov
sub
jae
jmp
pop
into
fsubr
inc
jmp
cli
or
inc
xchg
mov
(bad)
sbb
ds
shufps
push
mov
sbb
inc
leave
or
(bad)
retf
das
arpl
loop
pop
and
sti
ret
mov
leave
shl
mov
test
pop
test
sub
dec
push
sti
in
out
or
jb
dec
cli
xchg
imul
adc
lods
add
aam
or
outs
xor
aaa
push
xchg
xchg
sar
sub
sti
in
aam
dec
lahf
inc
cmp
test
popa
popf
inc
push
cmp
jno
sub
nop
sar
test
gs
fsubr
cdq
daa
inc
int
dec
inc
daa
call
iret
(bad)
pop
vunpckhpd
jge
and
call
pusha
lahf
push
pop
jl
mov
(bad)
lea
ret
add
mov
ret
aad
jecxz
mov
lds
sbb
xchg
imul
adc
jmp
(bad)
inc
push
iret
iret
add
jg
jmp
fucomp
aas
lods
pop
ds
pop
fisub
cmp
repnz
(bad)
jp
inc
(bad)
mov
push
mov
add
adc
adc
cmp
xor
jecxz
mov
and
out
std
int3
jl
pop
pop
mov
adc
add
sbb
int3
and
retf
mov
push
(bad)
stc
and
or
fimul
cmps
mov
arpl
lods
shr
dec
inc
fsubr
addr16
xor
lahf
jecxz
or
popf
out
adc
xor
add
cmp
not
sub
mov
stos
add
xlat
cmc
cwde
jae
jo
leave
imul
repnz
cmp
jge
sbb
mov
mov
daa
adc
xor
scas
pop
data16
das
test
jp
out
pop
pop
shl
cmp
cmp
fist
stos
ss
lock
pop
or
lods
lods
cmps
mov
ret
stc
aas
mov
cmp
icebp
inc
cmp
jb
dec
adc
cmp
cs
cmp
les
push
fild
ret
sub
xchg
fnstcw
icebp
jno
test
stos
mov
or
cmp
jecxz
stc
or
nop
sbb
and
clc
add
cdq
fisttp
ss
repnz
sbb
enter
mov
(bad)
jo
cmp
inc
jmp
lock
int3
jmp
sbb
sub
dec
and
sbb
call
mov
imul
rcr
imul
push
out
aam
pop
int
dec
add
jns
cmp
lods
jge
ret
hlt
mov
retf
jo
pusha
inc
ins
xor
pop
fs
sbb
popa
xor
lock
add
popf
movs
mov
(bad)
fbstp
mov
inc
cmp
aad
push
int
popa
push
mov
add
sbb
jmp
dec
repz
and
in
loope
sbb
jno
cmp
and
jb
or
mov
mov
xor
cli
mov
inc
out
or
sbb
add
jnp
push
fldcw
(bad)
pop
(bad)
bound
adc
ins
aad
dec
dec
inc
mov
pop
inc
adc
cld
xor
xor
aaa
add
das
jnp
sbb
dec
scas
aaa
aaa
sub
mov
xor
in
(bad)
gs
and
ja
sbb
cmps
sbb
mov
sbb
xchg
(bad)
in
leave
cld
mov
fadd
jb
daa
jmp
mov
(bad)
aad
add
nop
push
test
push
add
dec
mov
fst
imul
repz
int
jbe
cld
xor
out
sbb
movs
or
mov
mov
adc
popa
in
retf
sbb
pop
xlat
pop
mov
in
mov
xlat
push
add
fs
out
loopne
xor
fnstsw
outs
shr
ins
inc
loopne
imul
push
sub
dec
outs
push
push
(bad)
fs
sub
mov
xchg
test
sbb
movs
mov
xchg
and
jmp
adc
cmp
enter
cmps
je
je
daa
pop
loop
arpl
mov
push
jg
ds
lea
imul
loope
adc
sti
pop
inc
repnz
std
js
xor
addr16
cld
xchg
int3
inc
sar
int3
out
or
mov
es
jno
bound
jmp
popf
sbb
imul
sub
add
sbb
jns
out
in
(bad)
xchg
jo
nop
mov
rcl
mov
sbb
xchg
sub
call
push
cdq
int
dec
push
push
out
adc
cmp
xchg
scas
enter
adc
mov
in
xchg
repnz
sub
mul
sub
mov
pusha
push
(bad)
xchg
mov
adc
or
ss
jnp
mov
push
imul
and
fsubr
fs
test
pop
sub
mov
mov
fcom
sub
inc
mov
mov
dec
mov
lahf
repnz
jecxz
mov
push
(bad)
sti
adc
enter
(bad)
(bad)
push
or
shl
test
or
inc
jns
jle
push
jmp
push
test
rcl
call
xchg
aas
scas
clc
cmp
(bad)
jmp
shl
loopne
mov
out
iret
(bad)
out
mov
rcl
dec
jle
push
aad
fnstenv
lds
push
pusha
or
mov
cld
daa
mov
rcr
call
cmp
and
test
mov
pop
jle
dec
std
adc
jecxz
inc
call
or
dec
lahf
(bad)
cmp
push
cmp
push
inc
dec
call
iret
cwde
imul
lods
int
sub
jae
nop
mov
pop
mov
aas
jnp
mov
fwait
xchg
fcomi
dec
and
xchg
stc
and
mov
sbb
mov
in
mov
fdiv
pop
mov
ds
int3
push
outs
or
mov
cmp
in
sbb
cmp
aad
jg
pop
cdq
sahf
pushf
mov
cmp
and
test
jne
mov
int3
xchg
imul
pop
jmp
mov
cmp
jge
inc
mov
iret
iret
sbb
das
pop
jo
mov
dec
xor
(bad)
dec
sub
xchg
add
xchg
ds
aas
into
test
std
rol
add
bound
mov
das
out
jmp
mov
jge
in
xlat
adc
inc
push
xchg
enter
xchg
loop
scas
and
add
jp
mov
mov
call
sub
or
daa
dec
mov
add
add
add
pause
sti
pop
stc
hlt
dec
stc
mov
mov
pop
mov
push
mov
push
scas
mov
movs
lods
mov
scas
shl
fs
xchg
cmp
test
and
movs
pop
mov
xchg
stos
out
jecxz
ss
ja
mov
or
pop
je
push
arpl
jne
adc
outs
jle
ret
add
mov
ret
dec
stc
pop
ficom
xor
neg
dec
jmp
inc
arpl
jle
pusha
jno
pop
fcmovnb
ja
ret
rcr
mov
cmp
push
add
and
js
push
cmp
in
movs
sub
(bad)
push
repz
lock
fdivr
ret
out
inc
sub
or
xlat
test
je
mov
in
inc
sub
mov
mov
sbb
das
adc
lods
sbb
(bad)
lods
xor
call
pusha
xor
add
ret
imul
and
lea
push
addr16
sub
(bad)
popf
retf
das
in
and
out
mov
xor
ret
pusha
into
jae
xchg
jecxz
push
out
xchg
leave
push
and
xlat
pop
out
int3
and
ins
dec
hlt
mov
icebp
shl
lea
pop
adc
jbe
test
adc
sbb
(bad)
inc
mov
repnz
cwde
inc
mov
sti
dec
(bad)
frstor
pop
out
(bad)
cld
mov
and
icebp
out
sbb
jnp
(bad)
inc
scas
mov
or
pop
dec
sar
sahf
popa
xchg
ret
mov
sbb
or
in
scas
xchg
sub
movs
mov
in
mul
sar
pushf
adc
or
sbb
add
adc
out
icebp
test
mov
pop
lahf
(bad)
add
mov
sub
aaa
push
cli
or
mov
pop
push
fisubr
xor
inc
mov
in
mov
(bad)
fidiv
inc
or
pushw
movs
dec
(bad)
sub
pop
xrelease
mov
mov
mov
mov
(bad)
rcl
movs
repnz
and
fidiv
int
rcl
mov
cld
mov
and
fbstp
xchg
sbb
scas
in
jae
adc
ficomp
das
lods
xchg
out
add
out
mov
xor
jbe
cmp
cdq
push
pop
fwait
jp
(bad)
out
xchg
add
inc
cmc
(bad)
jmp
movs
jg
lods
outs
gs
xor
cmp
cld
inc
jo
fcom
push
je
ret
enter
mov
adc
cmp
inc
(bad)
scas
lds
retf
cmps
add
outs
cmp
aaa
ret
loopne
push
cmc
stos
loope
push
mov
mov
cmp
enter
inc
test
xchg
rcr
inc
sti
jmp
loop
and
mov
enter
inc
les
std
inc
mov
xlat
xor
inc
adc
ret
xor
cwde
push
(bad)
lds
into
xchg
mov
mov
(bad)
aad
jns
mov
or
mov
cmp
xor
xchg
test
mov
adc
xor
jmp
jmp
dec
ins
jl
outs
mov
xchg
nop
test
adc
mov
(bad)
xchg
mov
pop
nop
lods
mov
pushf
stc
rcl
or
mov
sbb
outs
out
imul
xchg
pop
ja
xor
jecxz
add
jae
lods
mov
add
fstp
mov
cmp
or
call
popa
and
ret
add
mov
fwait
jno
add
jb
xchg
xor
jnp
enter
push
adc
pop
or
xchg
gs
mov
mov
push
pop
pusha
xor
icebp
cmp
fld
xchg
adc
xchg
cmps
push
cmp
mov
and
fwait
mov
loope
push
test
ins
ret
fs
les
inc
rcl
out
pop
pop
push
dec
fisttp
adc
in
pop
pop
and
outs
add
dec
xchg
xor
int
daa
hlt
pop
mov
mov
add
sub
pop
ja
jnp
mov
mov
movs
popa
inc
sub
jmp
xlat
inc
retf
inc
sub
push
add
pop
mov
mov
jae
pop
mov
push
pushf
jnp
aam
push
pop
mov
xor
or
(bad)
adc
inc
add
cld
loop
lods
push
jb
shr
ins
xor
dec
push
dec
add
popa
xchg
push
outs
sbb
rcr
mov
or
sbb
cli
(bad)
sub
aaa
inc
imul
gs
push
push
stos
jo
xchg
jg
std
cmp
daa
js
adc
cwde
xchg
lds
aad
bnd
lods
xchg
xor
pop
add
je
or
jl
(bad)
jp
jb
pop
inc
cmp
jbe
pop
retf
dec
inc
mov
fdivr
pop
dec
or
push
into
push
sbb
fcom
in
(bad)
loopne
std
lds
call
pop
lds
dec
inc
add
mov
mov
popa
pusha
jbe
popf
push
retf
sub
call
pop
aad
dec
cwde
pop
and
and
scas
stc
xchg
int
enter
xchg
pop
cli
add
dec
ds
mov
cmps
sub
mov
lea
pop
jo
inc
and
jge
xor
sub
mov
ins
xchg
(bad)
in
pop
int
xor
jmp
mov
jge
push
lds
or
js
add
jne
cmp
push
movs
imul
repnz
loop
je
inc
rcl
mov
hlt
outs
neg
push
inc
ret
test
jmp
and
mov
and
push
mov
mov
jne
jg
mov
jg
jle
xchg
push
fsub
lahf
fild
stos
mov
fist
fs
int
outs
sbb
jno
push
cld
mov
cli
sub
clc
fwait
jne
jmp
int3
mov
xchg
cmp
retf
mov
cmps
lock
jecxz
pop
in
xor
(bad)
test
fcmovnb
jle
lahf
repnz
jecxz
out
aas
push
stc
cmp
pop
pop
(bad)
shl
in
js
(bad)
call
cli
mov
cs
repnz
mov
jp
sub
or
pop
dec
pop
jmp
jp
scas
inc
leave
sub
mov
mov
push
push
(bad)
sahf
mov
adc
add
add
fldenv
aas
lock
aam
or
(bad)
and
sahf
aaa
jmp
xor
and
movs
mov
das
repz
in
dec
push
adc
pop
xchg
mov
daa
push
push
jmp
mov
cmc
test
sti
or
mov
push
js
sbb
clc
(bad)
jg
push
xchg
hlt
in
mov
int
mov
stos
pop
sbb
cmp
xchg
dec
call
xor
fbstp
xchg
scas
(bad)
call
loopne
(bad)
sbb
cmp
xor
sbb
pop
in
loope
xchg
sbb
fnstcw
and
push
jmp
mov
and
test
or
pop
sub
ret
and
push
fbld
test
pop
push
mov
push
xor
mov
out
scas
push
xchg
in
jecxz
addr16
push
jmp
xchg
pusha
fwait
nop
cld
xchg
mov
rcr
inc
sub
ja
fs
ins
(bad)
movs
xchg
push
sub
add
imul
jno
add
movs
popa
push
cs
mov
outs
mov
inc
cmp
pop
push
sbb
imul
sub
loop
pop
mov
and
daa
jmp
sbb
inc
jg
lods
fist
retf
les
fcomp
mov
jmp
jnp
pop
xchg
fs
test
pushf
push
inc
test
push
lods
or
mov
cmp
pop
loop
mov
retf
xor
cwde
dec
xchg
mov
or
(bad)
fild
test
push
mov
(bad)
sbb
fdivr
jmp
or
dec
test
mov
in
mov
call
lods
pushf
aas
dec
icebp
xchg
call
pop
(bad)
out
aad
das
mov
aaa
inc
pop
sbb
jnp
out
xchg
add
repz
jne
ret
aam
sbb
xchg
and
int
jnp
cdq
test
sub
shl
mov
cdq
pop
add
fmulp
dec
call
inc
push
call
jo
mov
cdq
outs
fucomi
jecxz
push
fwait
and
sbb
mov
xor
add
fidivr
test
dec
dec
ficomp
pop
cs
fist
mov
mov
push
mov
imul
add
ror
gs
std
ins
xlat
xor
dec
pop
xor
popa
neg
ret
xlat
xchg
rcl
jmp
clc
cdq
jecxz
push
idiv
jge
sbb
xor
enter
jno
ret
ja
xchg
enter
test
mov
inc
jne
and
add
pop
ins
shr
sub
mov
cmps
(bad)
jb
lds
or
mov
mov
aam
add
mov
or
mov
fistp
and
xor
add
xor
(bad)
and
xchg
(bad)
xchg
ds
adc
sub
cli
(bad)
cs
movs
scas
pop
inc
ins
test
sbb
pop
(bad)
jecxz
popf
sbb
(bad)
and
ds
xor
test
and
aas
mov
mov
mov
outs
cld
and
fdivr
fwait
dec
repz
aam
test
pop
inc
xchg
push
nop
xchg
adc
jmp
setl
sti
or
push
mov
into
lahf
retf
cld
jg
fsub
dec
pop
sbb
push
loopne
dec
lea
mov
lahf
imul
dec
test
mov
lahf
inc
(bad)
pop
and
push
rcl
xchg
mov
jno
dec
xor
in
xor
cdq
xchg
ss
into
and
lods
mov
imul
pop
xchg
scas
mov
mov
hlt
aaa
xchg
rol
add
dec
push
cmp
pop
jmp
pop
cld
ficomp
xor
ins
lea
adc
pop
xor
cli
mov
cld
or
ret
xchg
push
mov
cmps
je
lea
mov
jbe
shr
ret
ret
add
or
stos
ss
cmp
(bad)
mov
arpl
pop
fistp
or
loope
call
(bad)
ror
push
ds
jecxz
adc
pop
mov
add
iret
vaddps
mov
xchg
into
push
cmp
jns
lods
retf
fadd
out
scas
ds
imul
imul
adc
ret
mov
fcomp
out
loope
cs
sahf
cmp
imul
lock
mov
in
xchg
ret
test
ins
inc
shl
leave
mov
xchg
or
mov
cdq
cmp
dec
stos
mov
ins
ret
cdq
sbb
fistp
out
pop
das
in
fist
xchg
std
jae
in
(bad)
in
sbb
out
dec
push
shl
(bad)
retf
out
fs
dec
hlt
mov
or
xchg
fimul
test
add
aaa
in
inc
mov
push
repnz
mov
mov
jno
shl
popf
mov
out
mov
inc
mov
int3
iret
shl
jmp
adc
clc
inc
dec
and
mov
ja
sub
(bad)
fistp
push
cld
iret
retf
mov
js
adc
mov
test
(bad)
and
fsub
jo
out
cmps
inc
mov
pop
jb
xchg
dec
movs
mov
mov
inc
shl
add
lods
aad
(bad)
jmp
cmp
mov
xor
out
jl
inc
movs
sub
outs
jmp
(bad)
jmp
push
ja
adc
push
xchg
icebp
add
test
sbb
(bad)
push
lods
pop
retf
sbb
arpl
adc
test
scas
arpl
aas
inc
mov
and
test
loop
cld
xor
lods
and
cmp
sub
push
movs
push
icebp
pusha
nop
popa
mov
push
mov
mov
mov
repnz
or
fstp
daa
adc
nop
xor
out
mov
pop
mov
gs
inc
imul
movs
inc
sub
cwde
imul
push
and
retf
gs
xchg
loope
hlt
mov
pushf
jo
inc
stc
bnd
sahf
lock
out
js
dec
scas
fbld
repz
jno
and
lock
sub
xor
jne
inc
rcr
jne
push
mov
outs
adc
cmp
jbe
jae
ins
push
jno
mov
lds
out
std
movs
jne
jb
xor
mov
js
(bad)
into
pop
jl
retf
mov
mov
mov
inc
jecxz
xchg
cli
jbe
lods
lods
lea
(bad)
into
call
add
repnz
cmp
call
(bad)
aam
shl
aam
pop
mov
add
(bad)
cmp
add
retf
fild
movs
add
push
outs
sbb
pop
push
into
inc
push
(bad)
cmc
xchg
rcr
lahf
(bad)
cmps
jmp
(bad)
daa
xor
mov
push
jecxz
stos
sbb
fnsave
hlt
outs
fist
xor
adc
sub
loope
rol
xlat
or
jb
vpsrld
push
stos
adc
adc
sbb
push
fcomp
addr16
sub
pusha
movs
inc
into
sub
test
mov
jecxz
mov
retf
ss
and
mov
neg
stos
(bad)
aad
sub
cmps
ds
push
jmp
les
dec
adc
sbb
scas
frstor
and
inc
aaa
addr16
push
retf
das
add
addr16
mov
fnstsw
cmp
repnz
test
inc
(bad)
ins
jne
inc
cli
pop
cmp
enter
add
mov
mov
nop
add
push
cdq
(bad)
es
int3
les
sbb
push
adc
imul
adc
add
mov
jge
inc
mov
adc
jo
inc
dec
fs
mov
or
stos
jns
(bad)
adc
fcmovne
es
jg
and
(bad)
out
in
inc
jecxz
cli
test
(bad)
dec
dec
push
fmul
inc
xchg
data16
xchg
into
inc
mov
xor
xchg
dec
test
out
jb
sub
call
lods
push
pop
addr16
push
movs
pop
dec
push
mov
inc
popa
jge
push
shr
ret
xchg
inc
mov
mov
jge
mov
into
mov
or
punpckhwd
inc
shl
add
popa
push
aam
mul
retf
mov
mov
(bad)
(bad)
dec
xchg
into
stos
dec
mov
cmp
sbb
fcomip
das
fwait
icebp
jge
push
into
call
cmps
outs
xor
pop
push
or
xchg
pop
cwde
lods
mov
loop
and
std
jno
ret
cmp
adc
(bad)
sub
dec
mov
mov
leave
popa
es
xchg
aam
inc
in
pop
test
aad
sahf
adc
sub
sbb
not
dec
mov
mov
jbe
sbb
stos
cs
xor
jmp
mov
in
addr16
push
mov
stc
jne
int3
ror
aaa
lahf
scas
sbb
dec
adc
in
ins
xor
inc
push
dec
cmp
sti
(bad)
fmulp
out
sub
or
cmp
fistp
sbb
ret
pxor
add
dec
enter
and
stc
pop
in
mov
inc
loop
and
mov
xchg
test
shl
push
jns
dec
cdq
xor
nop
ins
pusha
outs
or
call
in
or
mov
dec
(bad)
aam
leave
nop
push
mov
push
int
leave
iret
(bad)
jnp
jmp
test
outs
cdq
xchg
rcl
aas
cmp
sbb
leave
jecxz
jge
jle
and
xchg
inc
xchg
icebp
cdq
mov
inc
bound
mov
xchg
inc
test
jnp
in
xchg
sub
mov
mov
jbe
inc
sub
leave
outs
in
mov
mov
jb
out
inc
lea
push
ret
outs
sbb
arpl
pusha
xlat
fs
movs
aas
xchg
jecxz
dec
outs
movs
retf
push
jmp
ja
and
(bad)
jns
adc
mov
pop
adc
sbb
sahf
xlat
xchg
fbstp
cmp
call
jo
repz
mov
nop
test
stos
sub
popa
std
mov
jl
pop
mov
adc
ja
push
(bad)
leave
js
lods
or
cli
pop
mov
cmps
stc
push
mov
(bad)
push
mov
call
ja
xchg
push
mov
sub
push
dec
(bad)
fmul
ss
mov
cmps
xor
std
aas
inc
adc
sub
jbe
pop
pusha
(bad)
mov
arpl
adc
aam
repnz
sbb
(bad)
sub
jbe
retf
jo
cmp
mov
sar
div
fimul
scas
rcr
or
add
fucomp
das
mov
lods
push
add
inc
dec
mov
inc
std
(bad)
aad
add
adc
(bad)
xor
xor
cdq
mov
add
(bad)
retf
in
cmp
outs
jo
mov
and
cmp
and
movs
test
pop
mov
push
scas
popa
lea
adc
xor
pop
pop
aad
sub
inc
pop
pop
push
outs
adc
lods
stos
add
std
mov
inc
or
sbb
xor
imul
scas
push
sub
ret
xor
nop
fimul
dec
loope
ds
jno
jg
sub
stos
gs
mov
mov
(bad)
cs
sub
aam
ins
lods
adc
(bad)
mov
stc
sahf
xchg
gs
jp
neg
or
jge
add
bound
fistp
call
fdivr
mov
adc
bound
mov
mov
sahf
add
ficom
loope
push
(bad)
mul
cld
sbb
or
mov
clc
mov
pop
mov
nop
mov
mov
push
add
mov
scas
les
inc
iret
add
mov
and
mov
aam
pop
cmc
jno
dec
add
inc
sub
mov
repnz
or
sbb
sub
xchg
push
sbb
das
mov
ins
sbb
pop
jmp
lds
sti
or
pushf
mov
or
jo
inc
inc
in
fcomp
aaa
inc
sub
dec
or
mov
jnp
dec
add
sbb
jns
(bad)
aad
push
xor
(bad)
inc
or
jg
pop
xchg
ss
ins
data16
movs
std
and
enter
loope
movs
or
sub
lods
hlt
push
cmp
neg
ss
and
xchg
cmp
mov
test
ins
cli
leave
shr
mov
xor
in
cld
xor
mov
out
mov
pusha
daa
es
in
aas
retf
push
aas
pusha
retf
push
push
and
jo
ror
shl
pop
adc
test
mov
add
call
cmp
mov
movs
dec
retf
rcr
cmp
lahf
scas
movs
mov
dec
movs
inc
pop
mov
jecxz
pop
xchg
pusha
pop
repz
cmps
bound
pop
aam
pop
push
or
loopne
sub
mov
mov
cmp
push
cmps
test
jle
mov
test
and
(bad)
ins
test
int3
mov
cld
idiv
xor
push
ins
adc
push
in
push
scas
mov
repz
ret
jg
aam
xor
in
(bad)
adc
push
xchg
mov
xlat
imul
mov
inc
adc
push
fadd
add
test
and
jb
cmp
jmp
pop
out
mov
lahf
pop
lahf
loop
fninit
xchg
mov
rol
dec
pop
ret
adc
iret
dec
or
or
xchg
jg
out
movs
or
or
push
mov
mov
aam
lods
sub
or
add
ins
jge
and
popf
pop
inc
scas
add
sub
mov
mov
xchg
fcom
bound
xor
inc
and
daa
sbb
sbb
je
ss
lahf
(bad)
and
push
or
vmovaps
adc
inc
outs
xchg
pop
sub
arpl
xor
inc
lods
(bad)
les
or
push
dec
cmps
jns
jbe
(bad)
(bad)
fld
mov
xchg
cmc
(bad)
jae
dec
ret
mov
jmp
adc
in
xor
mov
in
mov
xchg
pushf
fdiv
adc
(bad)
loopne
inc
nop
adc
jbe
sbb
pusha
sbb
xchg
lea
lahf
bound
fiadd
add
ret
shl
and
loop
push
imul
retf
inc
ins
jmp
sar
xor
xchg
lds
adc
inc
jns
jecxz
in
out
push
jl
mov
jmp
jle
pop
inc
add
pop
adc
nop
mov
loopne
(bad)
xor
outs
loope
addr16
cs
mov
dec
sub
xchg
fdivr
scas
add
or
aaa
clc
into
mov
push
pop
lods
jne
mov
ret
test
xchg
and
pop
mov
iret
cmp
ins
fst
cmc
into
xor
jmp
dec
and
cli
clc
jno
gs
xchg
sbb
stos
movs
fimul
push
cmp
jae
sti
dec
mov
adc
daa
test
sub
call
loope
test
repnz
mov
(bad)
jp
sbb
scas
cmp
ret
(bad)
sbb
stos
sahf
inc
push
dec
sbb
push
push
cmp
push
mov
data16
or
xchg
xlat
je
mov
mov
cmps
scas
xor
push
(bad)
dec
bound
xor
sub
(bad)
mov
out
adc
sub
push
push
pop
push
push
push
pushf
sbb
xchg
push
jb
xor
adc
jbe
and
and
into
shl
shr
add
stos
add
mov
mov
dec
add
(bad)
test
pop
shl
frstor
int
inc
call
cwde
pop
int3
sub
jge
jge
popa
fxch
jp
cli
cmp
sbb
pop
adc
js
pop
cmp
leave
pop
stc
sbb
push
lock
sub
call
ins
call
(bad)
jb
and
movaps
les
jle
and
xchg
xchg
sbb
mov
mov
ins
mov
mov
and
mov
subpd
mov
jbe
into
and
jmp
ds
aam
dec
mov
cmp
mov
xor
ror
clc
(bad)
shr
inc
and
jo
mov
(bad)
imul
sbb
sub
pop
(bad)
and
inc
jecxz
or
adc
jb
ins
or
data16
sub
jmp
add
je
adc
mov
jb
jae
loopne
sub
mov
jmp
(bad)
pop
mov
inc
sub
jmp
adc
mov
dec
inc
mov
sahf
jns
test
cld
test
push
test
jae
bound
jnp
scas
movs
ret
repz
push
fwait
lock
fdiv
loopne
dec
fldz
sub
cmp
movs
push
aam
cmc
enter
ret
xchg
daa
outs
es
push
(bad)
lock
out
jmp
nop
pop
push
jmp
mov
bound
addr16
jmp
movs
dec
ret
mov
js
push
(bad)
jbe
mov
cmps
pop
(bad)
cli
mov
vrcpss
ret
inc
xchg
mov
jo
mov
int
loopne
call
test
dec
imul
sbb
cmp
(bad)
lock
sbb
mov
jge
sbb
adc
mov
bound
cmp
clc
and
sbb
bound
ret
push
fisub
dec
mov
sub
cmps
push
jae
mov
jno
aam
push
sub
mov
jecxz
imul
sbb
fmul
pop
outs
ret
aad
mov
test
xchg
aaa
js
imul
push
daa
(bad)
repnz
dec
jne
xlat
cmp
cs
xor
(bad)
js
lea
out
rcr
jb
int3
dec
int3
iret
push
(bad)
call
sub
pop
cli
shr
jns
mov
and
rcr
mov
ret
(bad)
outs
push
jnp
mov
(bad)
mov
sbb
sub
xor
mov
js
cli
pavgb
pop
pop
sbb
xchg
mov
jnp
int
or
push
stos
cli
jmp
push
(bad)
das
sahf
push
and
add
and
cmp
in
ja
jmp
mov
movs
xlat
dec
out
retf
dec
cmp
mov
sbb
pop
ror
push
int3
mov
sti
sar
xor
test
ds
jle
mov
and
and
jae
sbb
xchg
leave
pop
arpl
enter
test
popa
pop
push
arpl
mov
retf
out
gs
sbb
in
jecxz
push
add
(bad)
ficom
lods
and
daa
(bad)
jmp
push
adc
mov
pop
inc
mov
pop
mov
movs
jno
xchg
enter
mov
ror
shl
jp
into
into
sub
int3
sbb
clc
pop
pop
psrad
mov
jp
(bad)
dec
jge
adc
xor
lock
cmps
fadd
add
or
out
adc
adc
fdiv
movs
push
push
jo
mov
mov
push
bound
inc
sub
das
xchg
mov
add
xchg
inc
leave
pushf
pushf
fsub
push
ss
(bad)
test
mov
mov
xchg
ja
pop
shr
imul
pop
imul
xchg
sub
call
loope
js
sub
int
es
mov
cmc
cmp
add
repnz
add
xchg
adc
out
mov
mov
or
std
ret
adc
aam
push
call
repnz
xor
push
imul
retf
ins
push
repnz
sub
lock
jo
adc
sub
dec
push
add
sbb
xchg
mov
xchg
jmp
add
sub
or
(bad)
mov
pop
cdq
push
rcr
pop
mov
add
jmp
lahf
std
sti
xor
popa
mov
mov
mov
mov
stos
mov
jne
mov
pop
jg
inc
adc
cwde
aas
push
lea
out
ins
sbb
sbb
shl
test
sub
jne
aad
addr16
mov
mov
int3
call
aam
push
hlt
mov
iret
jb
mov
pop
std
lea
mov
std
ror
bound
les
ins
xor
outs
xchg
scas
push
fldcw
mov
pop
ret
out
mov
pop
pop
test
cmp
pusha
cmp
out
mov
fisubr
pop
add
lods
loope
xor
mov
test
imul
repz
adc
imul
addr16
idiv
repnz
fnstsw
je
dec
cmp
mov
jg
add
push
sbb
retf
lahf
cmp
push
movs
dec
pop
jmp
fisttp
clc
(bad)
fcmovu
inc
pop
xor
push
fild
rcl
push
dec
test
not
retf
(bad)
out
popf
call
mov
xor
add
xchg
cwde
jmp
arpl
cdq
xchg
std
cmps
out
jb
xchg
pop
retf
in
jno
adc
mov
add
fist
fwait
pop
shl
and
in
inc
daa
cmc
push
loop
push
sub
mov
ss
pusha
xchg
push
xchg
mov
shl
sub
push
in
shl
mov
inc
(bad)
adc
lods
ds
cmp
call
dec
repz
dec
enter
movs
sbb
fisttp
sahf
push
int
rcl
jnp
dec
sbb
nop
inc
push
jecxz
pop
into
push
jnp
inc
imul
xchg
call
ds
mov
mov
mov
xor
sahf
jl
iret
jl
add
adc
mov
fld
movs
push
cmp
aad
inc
jmp
jbe
jg
sub
out
out
jg
std
cdq
test
xchg
mov
jle
popa
jle
mov
out
loopne
push
sbb
ficomp
out
iret
gs
sbb
push
cmp
xor
xchg
sbb
loopne
and
jae
js
xor
dec
das
ficom
adc
jo
aad
xchg
(bad)
mov
pop
and
into
push
mov
add
cld
xchg
shl
sub
mov
jg
mov
push
sti
in
fsub
dec
adc
mov
aad
xor
sbb
aas
mov
fdivr
inc
shl
dec
xchg
xor
sbb
cwde
jp
(bad)
out
loope
xor
push
outs
shr
stos
push
into
es
(bad)
jne
mov
dec
cmps
test
test
call
hlt
inc
popf
jo
sub
imul
imul
cli
fwait
cmp
dec
in
jmpw
leave
mov
sbb
mov
mov
dec
adc
cmps
call
lds
dec
mov
push
xor
push
in
or
ret
cmps
scas
push
mov
iret
movs
xor
(bad)
and
xchg
adc
adc
ins
dec
repnz
push
ins
int3
xor
scas
pop
mov
dec
imul
leave
add
ins
sub
adc
jge
in
scas
lock
sbb
loop
pop
xchg
jge
xor
test
and
test
sbb
jo
xchg
sub
dec
and
and
jne
mov
xchg
or
inc
push
push
test
jae
mov
jmp
repnz
cmp
je
or
repnz
and
rcl
pop
inc
cmps
cwde
push
pop
or
xchg
inc
pop
mov
rcr
fld
sbb
popf
lods
sbb
scas
popa
int
jle
push
ss
(bad)
out
cli
add
int
jo
div
mov
mov
fs
push
adc
adc
out
out
mov
xor
bound
xor
xchg
lea
dec
movs
mov
xor
iret
out
xor
fwait
cmp
inc
aam
dec
or
mov
adc
fnstenv
fwait
dec
dec
add
js
inc
test
fucompp
push
inc
inc
xlat
and
jecxz
mov
mov
es
arpl
fs
fs
mov
dec
popf
cmps
pop
add
gs
repnz
addr16
loop
push
sbb
(bad)
nop
mov
lock
cld
jbe
add
push
cmps
jo
cmc
sub
sbb
fs
dec
addr16
push
mov
xchg
add
inc
jns
mov
inc
inc
mov
push
ret
push
push
rcr
cmp
add
jecxz
and
call
call
leave
add
or
sbb
in
xchg
scas
mov
pusha
xchg
int
fmul
cmp
mov
pop
xchg
out
into
shr
inc
sub
leave
inc
fcom
sub
out
(bad)
push
loopne
dec
cmps
stos
add
dec
mov
movs
adc
in
shl
cli
mov
shl
sar
in
in
pop
ja
xchg
pop
xchg
dec
or
push
shr
push
fisttp
idiv
out
or
jo
xor
int3
ds
loopne
imul
ss
xor
sbb
sbb
pop
sbb
and
and
lock
es
inc
mov
mov
jmp
pop
jle
add
mov
ret
mov
mov
fidivr
ret
repnz
push
(bad)
mov
cld
test
fldcw
push
and
dec
(bad)
loop
inc
test
pop
jbe
cmp
jmp
(bad)
(bad)
push
mov
call
lahf
je
outs
xor
movs
loope
fidivr
mov
jg
inc
dec
retf
pop
call
(bad)
xor
or
or
retf
mov
mov
adc
dec
cmp
nop
cmp
mov
cmc
mov
dec
mov
lahf
xor
es
cmps
inc
cs
push
pop
xchg
lahf
pop
ss
add
or
loop
sar
push
jmp
push
cmps
vprotw
jmp
loopne
in
jge
into
sbb
jo
fwait
push
js
loopne
loope
movs
bound
xchg
mov
mov
jnp
pop
and
sub
jne
stos
fsubr
push
add
inc
xor
pusha
aam
loope
inc
mov
pop
out
fucomp
mov
xchg
and
lds
jmp
push
scas
popa
neg
push
mov
(bad)
mov
adc
jmp
inc
xor
push
or
lods
das
dec
sub
sar
fwait
mov
mov
sub
call
int3
inc
imul
mov
xchg
jmp
fs
pusha
(bad)
pop
jo
mov
pop
push
loope
sbb
xlat
and
pop
cli
mov
or
cs
ja
jnp
inc
gs
jmp
fcom
mov
popf
outs
or
xor
mov
lods
mov
iret
stos
(bad)
xchg
retf
fist
jmp
adc
adc
inc
jnp
fcom
and
iret
scas
cmp
or
std
mov
cmp
out
jne
test
mov
clc
dec
into
ins
jne
xchg
jno
mov
ins
mov
fimul
mov
aaa
mov
loopne
pop
jge
dec
mov
into
jl
jl
cmp
(bad)
std
jae
inc
out
les
cmp
das
xchg
in
lea
pop
and
movs
jne
mov
imul
or
add
adc
or
xlat
movhps
jno
call
cmp
out
adc
xor
jbe
push
shr
ss
jle
lea
shl
lock
jbe
adc
mov
es
and
scas
mov
aas
in
xchg
fs
inc
mov
ror
out
add
or
cdq
jmp
push
mov
dec
jg
nop
mov
adc
cmps
ret
ja
sub
ror
lock
cmp
not
clc
call
(bad)
fs
jno
cmp
mov
xor
je
mov
pop
jb
icebp
mov
sbb
cmc
aaa
lea
jge
in
fwait
add
ds
mov
and
call
xor
inc
inc
pop
sub
js
xchg
cmp
and
pop
mov
out
pop
out
fdiv
mov
add
call
lea
(bad)
push
pop
adc
out
adc
int
mov
es
dec
je
repnz
arpl
sbb
scas
int
adc
xchg
cmp
(bad)
mov
rcr
pop
push
(bad)
xchg
mov
or
xor
mov
jl
sub
dec
mov
(bad)
stc
(bad)
sahf
mov
sub
stos
dec
mov
pop
cli
repnz
mov
xchg
out
add
aaa
push
mov
rcl
mov
loopne
ret
nop
movs
fadd
mov
pop
xor
sub
das
enter
cs
test
and
add
adc
mov
jle
outs
jo
leave
(bad)
popa
push
xchg
dec
shl
cmp
jae
or
xchg
pop
icebp
lahf
xor
std
dec
pop
pop
test
jge
gs
sbb
clc
pushf
(bad)
fld
push
inc
sti
pop
(bad)
jo
shr
pop
daa
mov
lds
loop
sub
cmps
dec
pop
inc
jb
xchg
mov
inc
mov
inc
js
icebp
sbb
pop
push
or
sbb
sbb
jmp
ret
sti
clc
je
rcl
retf
fisttp
shl
or
mov
xchg
pushf
pop
mov
std
lock
cmp
daa
mov
push
push
fsub
or
sbb
inc
leave
pushf
adc
fadd
rcr
popf
idiv
lahf
stos
ror
dec
nop
jns
rcr
xor
stos
cmp
fdivr
sbb
sub
adc
(bad)
pop
push
mov
clc
inc
mov
jg
sub
popa
test
mov
sbb
cmp
dec
pusha
mov
xor
arpl
pop
clc
loop
test
push
call
out
mov
loopne
daa
shl
push
xchg
adc
sar
rcl
adc
mov
test
scas
in
inc
and
loopne
pop
sub
aam
imul
adc
push
sub
xchg
enter
inc
mov
pop
lods
and
(bad)
scas
jmp
xchg
(bad)
repz
jg
iret
push
(bad)
jl
mov
push
std
xor
sub
sub
int
and
addr16
or
icebp
lock
es
or
jle
fmul
sub
sub
ins
pop
or
retf
sub
mov
dec
iret
sub
int3
das
sbb
jnp
cmp
aad
xchg
scas
cmps
xchg
(bad)
adc
inc
ds
stos
fild
adc
fst
add
add
push
ds
int3
mov
mov
sti
sbb
mov
jmp
mov
xor
jae
push
push
jg
lock
packuswb
jp
fcomp
sub
xor
cmc
loop
mov
shl
movs
jb
ret
dec
(bad)
fs
out
cmp
jae
ja
hlt
xchg
pop
mov
and
pop
stos
inc
or
mov
out
mov
repz
ins
mov
and
push
push
and
and
mov
out
cmc
je
(bad)
xor
adc
(bad)
sub
sub
add
jae
fsubr
mov
ror
mov
lods
xchg
xor
mov
jmp
jnp
sub
or
or
pop
push
clc
adc
add
ins
push
xchg
hlt
push
scas
and
inc
loopne
mov
mov
sbb
jecxz
dec
into
fnstenv
dec
pop
and
mov
jno
jp
jecxz
sti
xchg
adc
into
xchg
loop
imul
ja
jle
aad
inc
arpl
xchg
cmp
clc
icebp
not
sub
ds
pusha
push
inc
test
cwde
pop
(bad)
mov
(bad)
mov
(bad)
sbb
pop
mov
jne
push
fisub
jl
ror
aad
(bad)
mov
cdq
(bad)
rol
add
shl
pop
out
xchg
rcl
retf
test
sahf
ins
cdq
je
xchg
fwait
mov
shr
ret
mov
out
out
or
fmul
jmp
repnz
icebp
ror
inc
xor
sbb
xchg
out
in
int
lods
inc
loop
loopne
stc
das
add
lea
xlat
dec
aaa
mov
test
in
jb
mov
scas
or
icebp
shr
and
dec
mov
push
or
jo
cmc
mov
mov
ss
idiv
jl
inc
mov
pop
test
pop
pop
cmps
dec
adc
push
daa
or
and
xor
inc
ja
jno
jmp
xlat
int
jle
nop
pop
retf
mov
cli
jne
addr16
in
adc
xchg
and
jo
imul
jl
pop
push
jg
stc
repz
xchg
adc
popa
mov
leave
mov
inc
scas
push
ret
pop
xor
mov
jae
and
outs
mov
mov
cmp
and
mov
mov
je
ret
jle
dec
data16
stc
inc
xchg
dec
adc
int3
cmp
fmul
outs
mov
mov
in
cmp
jmp
mov
pmaxub
or
xchg
mov
mov
stos
ror
repnz
fsubr
or
ins
adc
sbb
sbb
call
dec
adc
sub
mov
lods
add
loope
out
or
mov
add
mov
or
mov
push
ret
mov
or
fdiv
(bad)
pop
sbb
je
mov
cmp
in
pop
dec
je
mov
and
add
mov
xor
movs
xor
sub
stc
scas
aad
sbb
loope
cmps
fisub
ja
scas
xchg
dec
test
out
xor
out
dec
mov
(bad)
mov
mov
jmp
test
add
xor
jne
sub
je
xchg
movs
jecxz
xor
jge
repnz
(bad)
les
cwde
sbb
pop
mov
outs
xlat
jp
add
aas
mov
rcl
add
retf
cld
(bad)
push
sub
ds
inc
hlt
mov
aaa
arpl
test
cmps
and
repnz
in
push
push
jg
je
push
inc
adc
add
adc
pop
xchg
adc
out
xchg
in
lea
clc
pop
loop
mov
jb
push
dec
in
das
movs
pop
push
pop
mov
bound
mov
(bad)
daa
(bad)
call
dec
(bad)
fild
jmp
out
adc
sbb
inc
add
push
pop
mov
mov
sub
cmps
xchg
push
xchg
leave
jne
fdivr
test
pop
mov
adc
popf
inc
dec
cdq
sub
push
ret
mov
adc
jno
fs
pop
add
enter
cli
mov
adc
test
cmp
in
das
add
jo
adc
(bad)
in
(bad)
repz
fadd
iret
jno
iret
ins
aam
push
push
and
inc
push
cmp
cmp
das
xchg
movs
add
jle
cmp
and
jge
(bad)
mov
inc
popa
mov
out
sti
xchg
mov
mov
stc
xor
jmp
fisttp
mov
outs
and
jle
lahf
inc
shr
xchg
inc
xchg
iret
xchg
push
gs
cli
mov
out
dec
out
jno
push
jae
adc
loope
cdq
dec
xor
rcr
int
cs
mov
shr
ss
xchg
push
mov
das
cmp
js
dec
int3
pop
ja
jae
std
mov
inc
int3
cmp
adc
scas
loopne
xchg
jmp
dec
or
jmp
cmp
xor
push
mov
mov
dec
xchg
test
sub
pop
mov
xchg
dec
cld
lods
pop
sub
sub
nop
xchg
fbstp
pop
cs
movs
(bad)
and
ret
ds
iret
pop
test
mov
out
mov
sub
data16
(bad)
cmp
fild
cmp
mov
xchg
aam
adc
pop
lock
data16
push
shr
cmp
cmp
cmps
bound
or
scas
jmp
int3
ror
mov
ds
add
inc
fdivp
dec
(bad)
jo
inc
xchg
cmp
xlat
(bad)
jns
int
psubw
xor
xchg
repz
(bad)
rcr
stos
pop
mov
stc
mov
sub
dec
inc
jp
xor
cdq
xchg
xor
int
adc
and
pop
test
jl
cs
nop
js
cmp
inc
cmp
imul
mov
mov
or
lods
jmp
xor
icebp
fstp
(bad)
in
test
mov
jns
xchg
retf
movs
or
inc
xchg
xlat
out
in
repnz
or
or
sbb
dec
sub
js
cmps
rol
rcl
mov
jne
out
shr
imul
(bad)
mov
mov
pop
pop
dec
shr
into
(bad)
rcl
ss
mov
mov
or
and
sbb
add
enter
sub
mov
lock
mov
test
pop
pop
pusha
call
adc
cld
imul
xor
xor
pop
ficomp
push
adc
mov
cmp
adc
cs
(bad)
cmp
mov
sahf
jg
in
add
std
iret
scas
rcl
jmp
and
and
ins
jge
mov
push
adc
add
scas
enter
pop
sahf
repnz
mov
add
mov
sbb
mov
mov
inc
sub
pop
xor
inc
xchg
xor
add
mov
cmp
fwait
ins
hlt
dec
in
shr
add
mov
je
stos
pop
push
xchg
in
xchg
ret
fld
nop
lds
mov
add
ret
add
test
outs
bound
fcom
fidiv
call
stos
aas
push
sbb
push
cmp
ins
cld
xchg
inc
cdq
inc
push
xchg
jns
sbb
mov
inc
cdq
and
sub
int
pop
inc
mov
enter
and
xchg
in
in
lahf
aaa
bound
ss
arpl
mov
cmp
cdq
mov
or
aas
retf
fs
xor
jp
lea
adc
jl
push
jae
and
pop
cli
and
mov
add
hlt
inc
xchg
dec
popa
out
jge
sub
loop
gs
mov
push
inc
dec
jle
add
inc
jmp
sbb
ins
in
je
dec
dec
jg
mov
outs
mov
push
mov
mov
xchg
in
imul
xchg
xor
inc
out
xor
lods
std
sbb
movs
hlt
test
cmp
sub
dec
cmp
or
imul
es
mov
cmp
dec
(bad)
ins
retf
fwait
jmp
jne
mul
mov
sub
sbb
adc
enter
and
sti
add
aam
xor
xchg
inc
and
ficom
gs
and
add
inc
int3
xchg
mul
lods
adc
or
push
adc
or
out
stc
test
out
push
(bad)
aad
pop
jle
and
mov
inc
cmp
scas
xchg
popa
mov
and
push
int
dec
xor
push
int
xchg
xor
add
inc
ss
adc
fwait
and
dec
repz
stos
imul
stc
add
mov
cld
movd
sbb
dec
(bad)
push
jp
mov
cld
stos
dec
jl
inc
mov
pop
out
adc
push
inc
pusha
aam
and
nop
mov
jl
and
mov
adc
inc
jl
sbb
les
inc
popf
adc
add
push
mov
test
out
jmp
mov
mov
mov
loopne
adc
movs
jbe
les
pop
xor
mov
test
mov
es
jo
mov
into
or
jb
sbb
dec
mov
aad
or
push
jne
aam
loope
fmul
test
jl
xor
sar
je
test
out
mov
mov
sub
mov
mov
shl
or
pop
dec
fld
daa
repnz
xor
mov
sbb
jns
and
mov
outs
movs
or
push
mov
jnp
adc
addr16
inc
xor
push
or
cmps
cmp
retf
test
rol
push
or
aam
mov
or
inc
pop
retf
sub
xor
push
mov
sti
dec
cs
sti
xchg
call
mov
in
(bad)
scas
arpl
add
jp
std
and
mov
push
jge
dec
inc
adc
pop
add
push
inc
clc
sub
loope
lahf
stc
push
xor
lahf
fild
ror
inc
ds
aas
fld
or
pop
les
test
out
jg
outs
lahf
push
mov
pop
je
fldz
loopne
push
cmp
xor
jno
inc
cmp
(bad)
mov
pop
pop
push
push
jmp
cmc
push
sub
in
xor
or
jl
jo
push
les
push
addr16
xor
push
jno
lea
pop
mov
mov
shr
shl
outs
lods
fisttp
inc
sub
inc
jb
int3
sub
adc
arpl
push
and
mov
add
in
jmp
mov
inc
mov
mov
pop
mov
bound
rcr
mov
stos
cmp
rcr
and
fcomp
adc
add
repnz
jmp
data16
out
jl
jo
clc
mov
icebp
ror
leave
lea
mov
add
add
fisub
test
xchg
in
adc
or
ja
push
mov
jne
mov
push
xchg
mov
out
or
xchg
cmp
into
inc
push
aam
push
inc
rcl
or
mov
fadd
adc
sub
cmp
jae
in
push
mov
push
sub
iret
call
(bad)
retf
mov
(bad)
sbb
dec
inc
mov
jmp
ins
sbb
jecxz
and
add
fs
sbb
pop
fcomp
ins
shl
mov
cli
test
push
cld
or
xchg
sbb
push
or
popa
adc
das
bound
xchg
push
dec
push
jns
pop
and
(bad)
mov
out
xchg
out
mov
sub
sbb
and
mov
inc
outs
cmp
ret
ret
mov
rol
popa
sahf
push
cwde
js
shl
add
mov
outs
leave
jecxz
xor
push
dec
call
mov
call
data16
and
popa
xor
loop
xchg
pop
cmp
and
outs
test
or
js
in
int3
(bad)
lock
jbe
dec
mov
pop
and
in
out
cmp
push
cs
sbb
inc
jnp
ret
inc
sub
jmp
scas
int3
out
pop
mov
enter
dec
mov
cld
fs
(bad)
pusha
int3
scas
xlat
push
push
cmpxchg
cld
lds
sub
jg
lods
out
ret
push
mov
stc
scas
cld
mov
pmulhuw
loope
push
imul
mov
pop
out
xchg
je
aas
lock
dec
repnz
sbb
loope
fiadd
mul
push
neg
dec
cmp
xchg
fisub
adc
(bad)
stc
jle
pop
pop
push
xchg
push
out
lahf
int3
add
retf
loop
xchg
shl
(bad)
movs
or
pushf
and
cmp
add
mov
fstp
xor
call
cmps
in
ins
jle
add
or
push
sbb
adc
sbb
dec
mov
sub
mov
inc
mov
xlat
xor
inc
mov
idiv
xchg
mov
das
sbb
loop
mov
add
add
(bad)
mov
sahf
ds
in
mov
in
and
push
cmps
mov
fst
cmp
lock
call
sti
enter
xchg
dec
push
mov
(bad)
sub
mov
dec
cmp
addr16
push
lds
into
imul
fdivr
jo
mov
cld
or
mov
rol
push
les
ror
inc
jg
xchg
enter
call
mov
inc
sbb
sbb
or
pop
sbb
adc
pop
cmc
out
dec
fistp
ret
bound
mov
jmp
add
and
jg
dec
mov
cmps
cwde
(bad)
cld
mov
xor
imul
aam
das
loope
jmp
shl
js
je
mov
jg
jmp
int
jmp
arpl
add
sbb
sub
xchg
lods
or
xchg
sbb
mov
(bad)
out
xchg
xor
movs
les
mov
cmp
push
test
xor
aas
ja
ss
mov
jge
jns
out
stos
fadd
or
icebp
loope
mov
mov
add
leave
dec
aam
xor
cs
lock
jo
adc
pop
mov
or
in
add
pop
sbb
dec
inc
jmp
mov
sub
and
cdq
rep
mov
jge
sbb
ja
xor
mov
(bad)
fdivr
ins
jmp
lods
popf
sub
mov
aaa
mov
ja
jle
xchg
xchg
and
std
pop
(bad)
sbb
cmp
push
sub
cmp
xor
call
into
mov
imul
pop
add
js
dec
pusha
add
add
and
cwde
fsub
dec
addr16
sub
push
pop
dec
jnp
pusha
aas
dec
sub
fsubr
pop
or
mov
clc
out
push
in
xchg
mov
or
pusha
mov
sbb
scas
inc
cld
pushf
xor
std
rcl
xchg
mov
xchg
pop
fbld
add
xchg
push
push
in
sub
and
lods
inc
(bad)
stc
into
jae
adc
icebp
out
leave
sbb
std
mov
mov
pop
stos
out
add
data16
repz
xchg
xchg
mov
ins
das
fucom
dec
sbb
jge
mov
push
xor
ins
pop
and
xchg
push
lods
dec
ret
jmp
mov
mov
rcr
out
sbb
push
mov
movs
js
cwde
or
pop
xchg
in
cmp
xchg
aad
jno
mov
or
push
addr16
ss
adc
jbe
fistp
mov
xchg
scas
imul
jmp
imul
aaa
in
in
pop
or
lods
mov
in
aad
mov
sbb
mov
xor
pop
push
dec
sbb
dec
test
bound
test
push
lds
scas
in
cmp
in
sbb
test
xchg
jae
ss
pop
nop
int3
into
mov
sahf
es
clc
xchg
in
mov
pop
fmul
test
(bad)
repnz
push
fisub
mov
aaa
mov
or
sbb
fldenv
mov
scas
call
ficomp
in
loope
scas
inc
pop
cdq
bnd
adc
test
jmp
push
retf
mov
js
bound
test
push
mov
push
or
sub
xor
ret
dec
repnz
jmp
lock
call
sbb
pop
call
pop
mov
(bad)
inc
dec
mov
inc
sub
aaa
sbb
mov
xchg
inc
xor
shl
xor
xor
out
std
mov
xor
push
add
push
dec
inc
fwait
jo
jo
in
rcl
jmp
jne
sbb
dec
aad
pop
ret
jne
sar
xor
lahf
out
mov
inc
adc
mov
je
into
push
inc
pop
sub
daa
push
aad
sub
adc
daa
lods
mov
test
ds
fcom
outs
pop
pcmpgtd
dec
repnz
push
imul
in
push
mov
jb
clc
push
push
push
lock
outs
cmp
mov
call
inc
mov
retf
xor
jne
ret
add
ds
push
jb
inc
mov
data16
cmp
push
out
dec
xor
lods
jge
pop
sub
in
imul
(bad)
push
mov
dec
sbb
jns
sbb
xlat
mov
mov
xchg
mov
or
pop
shr
add
mov
imul
inc
sub
pop
inc
cmps
shl
sbb
pop
and
add
cmp
(bad)
jle
movs
lods
into
jle
and
xchg
fld
sub
mov
push
popf
fisttp
and
cld
test
je
inc
in
test
xor
jns
stc
outs
inc
in
pusha
gs
dec
ins
xchg
rcr
jmp
adc
jbe
mov
push
ffree
test
leave
outs
pop
jns
mov
mov
mov
pushf
pop
pop
cwde
imul
cmc
movs
lea
sub
loopne
add
lods
dec
fisubr
outs
cld
mov
sbb
sub
mov
sbb
adc
mov
mov
sub
shl
and
cmps
and
pop
jns
dec
mov
mov
mov
xchg
ret
add
fs
and
jnp
sahf
(bad)
aas
pop
test
mov
ss
aaa
pop
arpl
jmp
xchg
shl
mov
pop
call
mov
cmps
ds
aam
pop
pop
(bad)
pop
(bad)
shr
mov
es
les
(bad)
(bad)
cmp
ins
xchg
xchg
cmps
push
jne
xchg
jp
add
or
xor
cli
sub
imul
pop
adc
mov
jmp
cmp
or
in
push
dec
cmc
or
mov
ret
and
pop
repnz
dec
mov
sbb
ret
mov
mov
xchg
lahf
outs
sub
cmc
aam
retf
pop
lea
xchg
or
ja
fld
movlhps
mov
fidivr
jmp
dec
pusha
sub
out
xchg
mov
aad
cmp
arpl
in
shl
push
dec
adc
leave
pushf
xchg
push
out
std
cwde
loope
cmp
or
hlt
out
(bad)
push
outs
push
movs
dec
fiadd
mov
arpl
ins
pushf
xlat
pop
call
fcomp
out
pop
pusha
nop
fldcw
push
xchg
cmp
sbb
imul
mov
adc
js
push
call
neg
fwait
mov
sar
dec
sbb
loope
pop
test
mov
xor
mov
sub
aas
lock
jmp
fld
scas
imul
cmp
push
pop
in
call
or
pushf
es
sbb
test
jl
enter
xchg
es
outs
push
push
dec
xor
lods
adc
add
daa
dec
(bad)
js
sub
sbb
dec
int
jmp
pop
sbb
sar
ins
movs
sti
sbb
inc
adc
jbe
push
cld
lods
inc
and
and
sbb
sar
addr16
aaa
sub
pop
mov
test
jae
fcmovnb
(bad)
adc
xchg
js
xor
and
inc
aad
mov
sbb
jo
rol
ja
rep
mov
add
fld
in
mov
and
push
loopne
sub
pop
les
(bad)
cmp
push
push
dec
cmp
push
sbb
push
mov
xor
xchg
sbb
aas
mov
jns
mov
fisttp
clc
inc
mov
fwait
ja
add
mov
cdq
loop
movs
ds
sbb
mov
pop
xor
ja
loop
dec
out
jb
fist
idiv
xor
pusha
xchg
xor
das
stc
sbb
jmp
xchg
fmul
push
xchg
pop
dec
movs
pop
data16
rol
jge
stc
sub
sub
(bad)
mov
and
es
mov
adc
xchg
sbb
inc
push
mov
outs
mov
cmp
(bad)
lods
outs
cdq
test
imul
pop
sbb
ins
ds
les
adc
jo
mov
or
and
les
pop
sbb
jne
cs
loopne
mov
icebp
or
mov
or
jecxz
cmp
fisttp
jmp
ins
minps
sbb
sbb
jl
mov
out
inc
cmp
xchg
cmp
cmps
aas
stos
pop
mov
ror
push
mov
dec
call
mov
xor
adc
mov
fdiv
pop
sbb
aam
out
lahf
test
sbb
mov
jne
and
in
outs
push
dec
outs
pop
arpl
pop
xor
jmp
xchg
mov
sub
iret
jg
ret
lea
inc
cdq
(bad)
xlat
paddsb
xlat
pop
rol
push
xchg
inc
mov
adc
imul
cdq
pop
mov
frstor
rcr
lea
std
repnz
pop
shl
push
mov
jbe
test
add
xacquire
cmp
fs
in
popf
bound
sar
idiv
sbb
das
jp
pop
pop
sar
rcl
jns
add
shl
enter
xchg
ficom
xchg
cmp
cwde
jp
and
lods
int3
xchg
and
cmp
xchg
push
stos
add
jle
lock
pop
dec
dec
and
jae
push
loop
cmp
push
rcl
in
iret
loop
xchg
leave
mov
adc
xor
xor
xchg
stos
call
push
or
or
xchg
cmc
test
cmp
and
enter
je
push
outs
mov
out
shl
cmc
pop
sbb
addr16
xor
aam
xor
push
in
(bad)
test
jae
jg
(bad)
js
sahf
and
and
(bad)
and
push
jge
ret
jle
push
mov
mov
add
cmp
or
dec
add
stc
xchg
xchg
popa
adc
sub
out
jl
push
mov
add
aam
imul
cmc
les
arpl
loop
xchg
aam
fcom
mov
daa
imul
fs
in
scas
loop
xchg
jg
mov
arpl
push
inc
xchg
into
pop
and
repz
dec
add
das
pop
out
add
mov
std
sbb
fdiv
add
cs
movs
ins
in
and
(bad)
mov
mov
push
cmps
je
nop
in
fnstenv
jl
mov
sub
leave
fistp
out
cmps
jle
(bad)
and
mov
int3
iret
mov
enter
sahf
sub
dec
jb
add
sbb
jle
pop
sub
ds
jle
in
mov
pop
mov
mov
jmp
jb
push
(bad)
shl
aaa
lock
xchg
mov
jge
bound
into
xor
xor
cmc
push
dec
jno
jecxz
cwde
icebp
jno
cmp
and
adc
xchg
je
mov
pop
int
pusha
xlat
jle
xlat
out
bound
test
fs
fst
cdq
cmp
inc
sbb
in
(bad)
(bad)
pop
push
stos
push
rol
dec
pop
(bad)
retf
xchg
jmp
ja
imul
inc
scas
mov
test
lea
lods
adc
sbb
(bad)
aad
pop
inc
cmp
and
jo
sbb
(bad)
popa
mov
mov
mov
or
(bad)
or
scas
loope
adc
sub
ret
gs
jmp
mov
cmps
das
ret
lds
sbb
pop
call
jns
push
ja
dec
lods
test
js
fadd
and
jp
cli
push
or
add
cmps
mov
mov
mov
jns
push
fdiv
inc
(bad)
daa
sar
test
mov
or
in
das
xchg
jp
xchg
test
and
rcl
lahf
inc
(bad)
push
sub
ins
repnz
aad
stc
dec
lds
inc
and
jb
cdq
test
xor
test
or
xor
jmp
and
mov
adc
or
push
push
and
push
push
aas
iret
std
pop
movs
xchg
xor
das
fdivr
xchg
mov
jne
xor
mov
push
stos
jl
xchg
retf
sbb
cld
outs
sbb
push
push
xor
mov
mov
adc
iret
cmp
xchg
or
and
fwait
(bad)
fs
jg
and
xlat
xor
outs
sbb
pop
bound
loop
in
cwde
not
ret
push
and
and
inc
clc
cmp
pushf
adc
push
add
sbb
arpl
xor
mov
jg
fidiv
ss
sub
mov
call
popa
inc
xchg
retf
push
sub
movs
inc
pop
sti
xor
jns
mov
cmp
jae
jp
push
adc
or
pushf
in
adc
data16
add
rcl
in
mov
pop
fsubrp
fucomip
sti
mov
ins
add
cmp
or
pop
mov
loop
pop
cmps
loop
mov
scas
loopne
cmp
jle
dec
add
sbb
fwait
not
dec
repz
inc
jp
pop
inc
stos
lock
and
and
jecxz
(bad)
and
out
in
ds
jl
lock
xor
jnp
lahf
fs
shr
sbb
cmp
lods
dec
fs
pop
and
mov
jae
outs
mov
shl
call
dec
cwde
jge
fcomp
(bad)
push
out
fucomp
add
fbstp
inc
sub
mov
sub
inc
dec
sbb
sbb
sub
jne
sub
push
or
into
xchg
(bad)
fsub
cmp
cld
cwde
ins
push
dec
xchg
and
xchg
push
sub
pushf
pop
sbb
loop
stos
mov
imul
outs
sub
cmp
push
fs
add
ret
popa
xchg
xchg
jecxz
add
or
dec
ss
sub
cmp
js
or
xchg
inc
xchg
jnp
sar
int3
(bad)
push
not
lahf
jnp
pusha
mov
push
mov
retf
inc
call
or
and
repnz
cmp
dec
aam
call
sahf
repz
mov
dec
add
pop
push
hlt
mov
dec
popa
xchg
ud2
jae
jecxz
xor
gs
lock
lock
mov
jmp
ja
sbb
clc
cmp
adc
gs
inc
rcr
and
dec
iret
sbb
ja
scas
cmp
push
ins
gs
push
and
fist
xor
jge
mov
xor
shl
push
dec
mov
add
mov
pop
jmp
jnp
inc
add
xor
ret
push
jp
inc
mov
adc
xchg
cmp
shl
pushf
jmp
mov
arpl
adc
xchg
adc
push
jle
fst
mov
mov
popa
icebp
mov
cmp
daa
retf
mov
cwde
or
mov
fisttp
jo
pop
xbegin
pop
push
es
out
dec
cmps
push
pop
cmps
pop
femms
mov
popf
(bad)
jecxz
mov
fist
and
pop
imul
xchg
imul
pop
xchg
adc
xor
test
pop
mov
aad
sbb
cwde
mov
mov
daa
jno
movs
lahf
cmps
pop
dec
xchg
sbb
test
arpl
(bad)
fisttp
mov
retf
pushf
inc
push
mov
stc
push
test
dec
push
mov
and
lods
pop
add
mov
movs
cmp
sbb
adc
fs
inc
adc
dec
xor
in
and
or
xchg
jns
sbb
xchg
mov
rcr
ret
fidiv
mov
xchg
or
pushf
repz
icebp
imul
pop
adc
gs
retf
repnz
push
fwait
(bad)
fcomp
jnp
adc
xor
push
imul
leave
nop
cmp
stos
dec
dec
inc
xor
cwde
inc
ret
jnp
adc
cmp
into
call
aas
inc
fdiv
aas
mov
loop
sub
jb
ins
clc
jb
mov
mov
xlat
mov
adc
xchg
inc
push
mov
movs
in
(bad)
cwde
sub
mov
gs
jge
cmp
mov
inc
inc
scas
lods
cmp
in
pop
pop
adc
movs
add
sbb
cmp
cmps
jo
push
cli
pushf
or
and
cmps
gs
fimul
mov
xor
or
fsubr
aaa
xchg
cli
dec
hlt
out
sbb
jp
daa
repnz
into
jbe
inc
mov
sub
cs
ret
nop
lahf
retf
nop
jb
inc
inc
cmp
mov
out
adc
pop
push
aaa
jle
inc
add
test
cmp
push
int3
xchg
fimul
mov
xchg
mov
outs
jae
add
push
mov
aam
lea
cwde
sti
mov
pusha
or
xor
mov
push
inc
out
add
outs
fsub
call
dec
sbb
(bad)
mov
sbb
out
mov
sub
push
or
add
(bad)
ja
outs
and
into
sub
loop
adc
(bad)
xchg
and
pop
outs
dec
std
outs
stc
jmp
or
add
aaa
mov
adc
sbb
mov
inc
or
jg
out
inc
jno
inc
or
xor
push
mov
sbb
pushf
or
(bad)
adc
add
mov
dec
sub
aad
pop
pop
and
push
or
out
xchg
pusha
or
jmp
fdivr
retf
add
push
dec
lods
cs
xchg
cld
jmp
or
cmp
popa
pop
xor
fwait
adc
(bad)
into
add
fidivr
sbb
rol
pop
add
and
cmp
sahf
push
jecxz
dec
xor
push
mov
in
pusha
test
je
inc
pop
stos
inc
jge
add
and
enter
repz
or
in
in
js
lahf
hlt
jmp
fs
aas
das
inc
popa
dec
mul
xor
mov
call
jae
aad
clc
inc
lea
sbb
leave
sti
clc
pop
fldcw
bound
outs
pop
loopne
out
xor
inc
xor
fdiv
push
and
fild
sbb
cmp
cmp
mov
push
stos
(bad)
repz
add
shl
jecxz
jb
and
push
or
mov
pop
sti
(bad)
out
mov
cmp
mov
push
inc
int3
jo
inc
rcr
and
ss
or
hlt
in
lock
leave
fisttp
dec
pop
xor
adc
or
(bad)
push
and
mov
cmp
xor
stos
or
pop
ins
loopne
test
les
inc
aam
push
xor
add
sbb
jge
(bad)
sti
adc
sbb
inc
add
cmc
xchg
sar
sbb
sbb
imul
jmp
in
stc
hlt
mov
(bad)
adc
sbb
sbb
shr
icebp
dec
das
fs
ss
adc
cmp
inc
or
mov
xchg
adc
mov
xor
scas
mov
data16
push
enter
adc
mov
bound
cdq
aaa
std
sbb
adc
jmp
sbb
jg
mov
cmps
adc
sahf
ja
and
and
sub
xor
iret
dec
sbb
xchg
leave
dec
sub
adc
xchg
adc
rol
xchg
xor
and
es
adc
jp
or
sbb
jecxz
mov
bound
mov
je
cs
outs
add
test
fld
add
xchg
mov
mov
pop
rol
fidiv
out
(bad)
bound
dec
fisub
into
pandn
sbb
jmp
push
push
stos
sub
add
shl
ret
push
jnp
je
daa
imul
(bad)
cld
movs
push
cs
dec
(bad)
xor
call
pusha
jmp
push
xchg
mov
mov
pop
xor
mov
rol
pusha
popf
enter
sbb
pop
add
jo
scas
dec
cmp
mov
push
cmps
iret
lock
out
cmp
retf
pop
mov
or
push
scas
lods
add
lock
rol
push
sub
stos
adc
jnp
in
fwait
xchg
cmp
push
mov
stos
jne
loope
retf
and
popa
test
cdq
hlt
arpl
call
(bad)
pop
mov
and
daa
mov
push
out
retf
and
fs
imul
mov
mov
sub
dec
cmp
fsub
fist
or
mov
iret
outs
sbb
int3
add
data16
or
sti
cld
fdiv
cmps
or
into
leave
in
sbb
ret
adc
sahf
mov
adc
sbb
into
xchg
xor
sub
dec
cmp
mov
pop
jae
dec
test
imul
jmp
das
sub
(bad)
leave
repz
and
pop
lods
(bad)
jnp
das
sub
das
mov
out
and
push
sub
push
dec
ins
mov
int3
cmp
and
mov
mov
lods
stos
push
test
add
or
mov
jbe
out
(bad)
pop
mov
jmp
push
or
jl
call
lahf
clc
mov
and
std
lahf
and
neg
adc
shl
scas
cmc
or
mov
xor
fsubr
loop
retf
sub
pop
lea
ror
(bad)
ins
jne
mov
sbb
mov
retf
mov
retf
add
dec
js
aad
jno
lock
pop
xor
xchg
rcr
cld
adc
cli
cwde
push
(bad)
scas
push
fidiv
xor
loop
addr16
shl
test
and
dec
call
sub
mov
mov
cs
dec
and
mov
and
jbe
fcomip
adc
mov
mov
jnp
push
shl
cmp
hlt
add
addr16
ins
fistp
xchg
idiv
daa
fistp
sbb
sub
sti
hlt
cdq
mov
pusha
sahf
or
sahf
push
pusha
retf
and
dec
shl
imul
xor
mov
xor
out
repz
pop
outs
call
push
jl
dec
fisubr
movs
int
mov
pop
sbb
aam
movs
retf
xor
sbb
test
out
jo
dec
sbb
leave
ins
xchg
sbb
pop
stos
xchg
add
dec
sbb
aad
add
xor
les
jbe
cmp
sar
sbb
add
jbe
test
fldcw
xor
inc
sahf
mov
pusha
pop
sbb
ficom
mov
adc
add
test
dec
and
aaa
jo
sbb
(bad)
mov
call
cmp
shl
lods
pop
mov
lock
cwde
fadd
mov
add
mov
pushf
gs
mov
popf
scas
es
and
stos
lods
cmp
xchg
dec
pop
ss
xlat
cmc
fmul
cli
sbb
ins
inc
pop
outs
or
add
push
popf
inc
fisttp
inc
fcom
call
inc
inc
mov
jg
cmps
popa
int
aas
xor
cmp
adc
xor
xchg
(bad)
fcmovne
je
sbb
lods
cwde
or
fidivr
xor
lea
shl
mov
fiadd
pop
nop
shl
mov
aad
mov
jne
in
dec
leave
movs
or
cs
adc
mov
ds
dec
mov
push
xchg
pop
mov
pop
and
and
sub
mov
inc
bound
movs
daa
nop
or
add
mov
ins
imul
lahf
aam
mov
jge
xchg
popf
xor
lds
xchg
dec
test
adc
push
out
inc
inc
lods
inc
jnp
fsub
ja
and
retf
jp
mov
jecxz
cs
loopne
not
leave
sbb
(bad)
cmp
push
inc
xor
xor
call
ret
in
in
fwait
aad
add
push
and
sbb
push
addr16
cmp
lahf
xor
cmp
loope
push
(bad)
in
pop
pop
icebp
mov
sahf
(bad)
and
sar
call
jmp
push
push
fcmovnu
adc
push
fstp
sub
mov
lock
or
xchg
js
jnp
popa
sub
mov
sub
cmp
adc
sbb
aaa
je
sub
sahf
popa
mov
push
outs
ret
loope
ret
frstor
dec
add
cmp
imul
data16
sahf
nop
jbe
and
ss
call
cdq
loope
mov
popa
pusha
mov
repnz
jmp
mov
cli
adc
loopne
mov
and
mov
inc
mov
scas
dec
sbb
stc
mov
std
pop
popa
cmc
mov
pop
xchg
xchg
adc
xor
cmp
inc
and
icebp
psraw
sub
aaa
cmc
pop
lods
bound
enter
mov
and
mov
dec
pop
not
lds
jmp
dec
imul
out
fsubr
sub
dec
mov
gs
or
pop
cmp
js
mov
push
fsub
sub
jne
ret
jmp
jo
out
fs
mov
xchg
cmp
lods
mov
(bad)
jne
mov
sbb
pop
ins
ja
xchg
pop
mov
xor
shl
retf
lods
lahf
jno
add
shr
not
pop
wbinvd
int
addr16
or
in
into
mov
push
ins
mov
icebp
cmp
loopne
es
pop
hlt
(bad)
loopne
(bad)
push
in
adc
dec
(bad)
add
mov
cld
in
(bad)
sar
outs
cmp
xchg
mov
out
jns
dec
or
mov
and
adc
dec
(bad)
stos
push
enter
lods
and
cmp
call
jae
outs
adc
inc
daa
fwait
jnp
inc
cmp
cwde
push
jp
loope
and
mov
mov
addr16
int
mov
push
cmp
(bad)
into
arpl
fnstsw
out
jmp
test
inc
mov
sbb
pop
(bad)
stc
adc
mov
aad
test
leave
cmps
mov
jb
and
pop
movs
cdq
lea
loope
mov
jp
aas
loope
loopne
repz
aaa
pop
movs
jb
mov
out
pop
xchg
push
addr16
pop
or
das
push
and
(bad)
das
push
pop
xor
add
pop
cwde
pop
test
dec
lods
mov
push
scas
cmps
shr
cmp
mov
fisttp
mov
iret
push
mov
outs
lahf
inc
jg
ret
in
inc
dec
outs
inc
jg
dec
(bad)
sub
imul
out
out
jbe
pop
cmp
mov
cmc
mov
dec
sbb
clc
retf
mov
xchg
push
ins
clc
pop
cdq
(bad)
fisubr
push
pop
loope
adc
imul
push
xchg
jecxz
mov
ins
dec
sub
xor
sbb
rcl
iret
ins
pop
adc
std
push
ret
outs
jg
mov
shl
inc
in
pop
bound
pop
fbstp
test
and
and
mov
into
pop
nop
repnz
adc
test
mov
and
inc
retf
pop
fmul
aas
jne
or
cmp
fs
and
movs
or
jecxz
imul
arpl
dec
mov
or
inc
xor
mov
test
ins
jecxz
stos
wbinvd
int
imul
lods
cld
xchg
fnstcw
jge
or
mov
hlt
aas
ja
fdiv
xchg
mov
mov
mov
add
add
add
jp
lock
sub
sbb
cmp
div
adc
call
lods
scas
loopne
jecxz
pop
jmp
(bad)
pop
fisttp
in
and
add
cmp
mov
out
ins
pop
jnp
les
mov
es
add
sub
pop
pop
ret
mov
lock
cmp
sub
dec
sbb
cwde
and
push
xlat
fs
jmp
jne
adc
add
xor
rcr
pop
aam
and
test
les
adc
sbb
adc
xchg
(bad)
aam
add
mov
lods
and
addr16
xlat
push
rcl
inc
and
mov
outs
pop
ret
fldenv
xlat
loopne
test
fst
mov
jns
or
and
jmp
sbb
cld
sub
cmp
pop
fstp
push
jnp
popa
sti
cmp
sahf
and
in
mov
in
dec
sub
shr
adc
cmp
bound
fs
jmp
mov
pop
or
push
les
aas
in
sub
(bad)
in
jge
jbe
jb
xor
mov
imul
pop
and
mov
jp
mov
sbb
test
in
and
fisub
mov
mov
and
cmps
sbb
mov
inc
jmp
cmp
push
adc
int3
add
rcl
cmps
sub
jne
bound
pop
movs
add
inc
jbe
mov
sti
fisttp
sbb
rcl
or
loope
mov
jae
test
adc
dec
imul
packuswb
cmp
xchg
add
movs
outs
pushf
mov
mov
xor
loope
ins
mov
lahf
mov
adc
xchg
scas
or
mov
mov
and
hlt
out
xchg
pop
mov
push
xor
leave
mov
push
mov
sbb
xor
inc
(bad)
in
dec
loope
jge
push
push
xor
mov
fwait
push
lahf
xchg
aaa
int
add
mov
int
cmc
inc
push
push
xchg
shl
xchg
push
dec
jbe
or
fnstcw
test
movs
xchg
aas
xchg
imul
das
mov
test
push
fwait
jg
and
mov
push
(bad)
iret
sbb
cmp
cmps
push
add
adc
leave
jns
les
in
mov
js
push
div
pushf
or
mov
cmps
xlat
mov
(bad)
push
ins
mov
sub
fadd
jns
out
fistp
and
mov
movs
push
xchg
bound
jge
push
mov
loop
shl
cs
popa
or
stos
cmp
jns
adc
fucomip
sti
and
or
sub
in
sbb
xchg
cmp
jl
nop
jno
pop
inc
fs
rcr
repz
repz
daa
mov
push
mov
fimul
cli
cmps
stos
mov
test
pop
loope
ja
ret
jp
mov
mov
inc
or
iret
xchg
xchg
sub
jo
push
call
jb
and
sbb
pop
push
mov
test
pop
or
fiadd
adc
sub
mov
and
jmp
jge
ss
lds
push
frstor
push
fs
test
pop
xchg
or
pop
lahf
das
push
add
push
movs
ds
fwait
arpl
adc
xchg
call
sbb
pop
jmp
loop
pushf
push
adc
out
mov
ja
loop
repz
mov
(bad)
mov
aaa
inc
call
aad
jg
iret
mov
mov
ret
and
lock
out
das
addr16
pop
gs
lods
(bad)
mul
ret
xor
rol
mov
out
imul
cmp
out
stos
jo
mov
push
out
rol
iret
or
retf
call
pushf
xor
pop
ss
out
movs
and
(bad)
loop
(bad)
mov
pop
inc
retf
pop
or
adc
(bad)
pop
fmul
cs
aas
and
dec
jl
add
(bad)
enter
cld
imul
push
jge
(bad)
cmc
mov
or
xor
jbe
push
popf
pop
add
mov
jns
das
xchg
inc
hlt
add
jbe
lds
pop
xchg
pop
fldcw
shl
cmp
push
xor
div
dec
(bad)
pop
or
cwde
(bad)
cld
ret
jle
scas
cwde
mov
jmp
mov
std
rol
pop
ja
cdq
dec
int
clc
imul
call
xor
fsubr
push
push
jnp
pushf
fist
js
and
icebp
retf
nop
pop
popa
imul
sbb
add
jecxz
mov
dec
mov
aam
push
sahf
mov
in
clc
jge
in
xor
js
jmp
fnsave
push
ror
push
stc
jp
mov
dec
mov
mov
in
add
std
add
pop
jne
(bad)
sahf
adc
xor
add
jb
xor
push
cli
xor
sub
mov
ret
xchg
cmp
sahf
jge
sub
adc
int
dec
jle
jmp
add
xchg
leave
out
jge
lds
push
test
in
xor
cmc
iret
push
or
jbe
sbb
mov
aad
cmp
mov
and
dec
inc
sbb
mov
inc
sub
push
cmp
fst
das
pop
cmp
pushw
aas
fpatan
pop
cwde
lea
adc
mov
scas
add
sub
jmp
cli
call
push
fimul
cmp
cmp
lods
mov
inc
gs
mov
and
xor
fmul
push
ja
lds
mov
js
jnp
or
pop
jno
mov
imul
nop
jno
push
ja
mov
out
out
cpuid
fimul
add
add
dec
and
jecxz
jg
pop
repnz
das
ror
mov
bound
push
ins
inc
mov
sbb
jo
xor
popa
push
sub
push
imul
ss
das
lea
cwde
mov
xor
push
movs
pop
jp
mov
or
adc
inc
pusha
repz
jo
sub
xlat
les
cmps
inc
ror
scas
adc
rcr
inc
fisttp
mov
xor
scas
sbb
inc
je
test
pop
ficomp
in
inc
(bad)
inc
(bad)
mov
loopne
ins
push
outs
fucom
je
fld
clc
xchg
in
mov
mov
imul
cmp
stc
dec
test
and
fistp
lds
jmp
int
add
bts
gs
pop
mov
jnp
mov
mov
adc
add
xor
in
and
pop
lods
xor
pop
jno
jp
cwde
mov
mov
addr16
(bad)
jl
std
scas
xor
outs
enter
ja
lds
dec
mov
sar
(bad)
mov
or
push
mov
mov
adc
inc
mov
lods
enter
jg
xlat
loop
lds
aaa
sbb
push
fld
xchg
jns
imul
gs
(bad)
mov
dec
inc
sahf
push
push
jmp
pop
cld
push
cdq
in
cdq
test
adc
xor
or
dec
mov
sbb
and
mov
xchg
imul
sbb
(bad)
loop
cmp
or
shr
cmps
jae
cmps
and
sub
push
or
hlt
aas
mov
pusha
rcl
push
sysret
mov
xor
push
out
adc
sti
std
mov
sub
cld
sahf
loop
js
and
dec
xchg
push
mov
push
xchg
repz
cmps
dec
mov
into
das
test
cld
and
sub
and
into
inc
lock
pop
cmc
nop
mov
jns
pop
sub
adc
adc
stos
and
and
loop
out
jns
(bad)
mov
leave
or
pop
lods
ins
sbb
and
fcomip
pop
jbe
dec
jecxz
bound
mov
add
jle
mov
jecxz
add
push
add
dec
or
pop
icebp
inc
popf
push
jnp
xlat
inc
call
inc
jl
adc
cmps
nop
xor
xor
pop
mov
adc
ss
fwait
sub
xchg
fcom
in
inc
mov
(bad)
loope
jbe
mul
mov
xor
dec
aas
jbe
push
xlat
dec
inc
pop
add
add
enter
add
cmps
sbb
cmp
and
sbb
dec
sub
scas
sbb
retf
int3
int3
std
push
pusha
jno
sbb
movs
sbb
call
adc
rol
fimul
xchg
lds
fidiv
mov
mov
dec
add
sub
arpl
daa
adc
push
cs
aam
les
data16
ins
push
in
mov
ret
arpl
sti
pop
stc
cdq
add
movs
inc
data16
mov
mov
mov
mov
push
nop
movs
cmp
imul
xor
pop
loop
cmc
into
out
ss
inc
inc
gs
jns
std
or
dec
and
mov
mov
jne
rol
scas
pop
pop
add
mov
imul
sub
sbb
test
rol
jle
movs
inc
es
and
pop
sub
lods
add
repnz
pop
lods
jno
fcomip
mov
mov
arpl
sbb
mov
and
inc
daa
pop
test
out
cmp
mov
retf
retf
daa
sbb
stos
jae
push
add
call
stos
mov
dec
push
adc
and
ror
in
in
jge
aaa
leave
fs
icebp
push
ds
dec
xor
and
cmc
call
xchg
jae
mov
and
mov
inc
inc
cmp
shl
ficom
xchg
cmp
cmps
aam
inc
dec
fdiv
sbb
add
xchg
(bad)
test
cmp
lahf
pushf
aad
xchg
cmp
gs
(bad)
std
sub
outs
dec
cmp
loope
pop
cmps
jnp
stc
xor
ror
jp
pop
push
or
xchg
add
cmc
mov
mov
jmp
push
xor
cmp
shr
cmp
xlat
jp
mov
es
(bad)
inc
and
xchg
dec
and
dec
cmp
or
mov
sub
adc
or
dec
push
fcomp
sbb
adc
enter
leave
add
pusha
fldcw
cmp
mov
mov
(bad)
push
sub
test
test
and
repnz
mov
xchg
add
bound
out
dec
xor
pop
mov
inc
mov
test
xor
icebp
outs
sub
(bad)
loopne
lods
and
xor
inc
lock
push
or
sbb
xchg
push
call
jl
fcomp
jno
stc
dec
arpl
mov
or
jg
push
je
das
mov
inc
sub
dec
out
out
cld
sbb
lea
in
cmps
jecxz
dec
loope
push
(bad)
xor
lds
aaa
sub
lds
pop
shl
cmps
arpl
call
fwait
mov
pop
push
jp
(bad)
sub
das
out
jae
adc
jl
rol
(bad)
lahf
xchg
xchg
out
mov
cld
xchg
imul
adc
faddp
movs
ror
jmp
stos
les
fcmovnb
jge
call
xor
lock
out
mov
mov
xor
mov
dec
es
sbb
pop
arpl
sub
or
xchg
out
mov
jnp
push
es
cmp
push
xchg
cs
or
xor
jmp
enter
je
jp
or
lds
cmp
inc
push
in
push
int
inc
mov
jae
pop
push
scas
nop
push
sub
dec
sub
mov
test
mov
fild
retf
dec
pop
dec
std
and
pop
adc
add
mov
push
add
rcl
mov
mov
mov
push
and
fmul
and
pushf
sbb
repnz
jge
ror
dec
shl
scas
jp
sub
ja
stos
or
mov
imul
rol
pop
js
cmp
call
shl
cmp
fs
cmp
jge
lock
push
pop
imul
jns
lock
mov
push
jns
scas
mov
sub
sbb
test
dec
push
xor
mov
jge
std
jnp
dec
test
mov
in
xor
mov
cmp
sbb
push
outs
mov
inc
call
mov
(bad)
enter
cmp
jbe
pop
lock
imul
movs
or
push
pop
daa
jae
jb
imul
sbb
add
mov
gs
and
or
xor
jecxz
jmp
xor
mov
jle
aas
pusha
je
dec
fisubr
adc
xchg
dec
add
aaa
arpl
cli
dec
sub
int
adc
push
sub
dec
inc
jmp
ret
cmp
ja
arpl
(bad)
lahf
std
icebp
cwde
cmp
add
pop
das
pop
call
inc
mov
jge
mov
cli
ds
mov
fisub
in
mov
adc
sub
mov
pop
ret
lahf
es
pop
adc
pop
movs
push
ret
aad
outs
outs
or
test
movs
dec
(bad)
(bad)
data16
cld
pop
sbb
dec
pop
mov
out
imul
rol
in
sub
jmp
mov
imul
es
out
fnsave
dec
jbe
(bad)
std
rol
dec
retw
mov
aam
mov
sbb
xchg
int
addr16
push
mov
movs
(bad)
lds
int
mov
mov
(bad)
and
ds
aas
dec
push
mov
dec
aad
cmp
aad
push
fistp
outs
jecxz
fnstcw
jp
inc
lds
inc
icebp
repnz
test
jno
sbb
fs
inc
push
jge
jb
adc
shl
sbb
out
xchg
and
push
lods
fcmovb
or
daa
jp
adc
imul
xor
pop
mov
jge
cs
add
out
jmp
adc
leave
push
inc
ss
mov
lea
and
pop
lock
mov
mov
xchg
ja
mov
mov
jmp
sub
pop
or
in
mov
pop
mov
cmp
sub
dec
adc
mov
loope
and
stc
bound
push
movs
test
lahf
xor
xchg
fsub
ret
imul
call
and
(bad)
std
out
xchg
retf
(bad)
scas
cmp
dec
add
pop
arpl
(bad)
in
pushf
dec
adc
push
ror
popf
xor
pop
stos
(bad)
mov
inc
fistp
sub
repz
mov
pop
cmps
popf
popa
aas
push
aad
xchg
jl
push
cmc
cmp
scas
imul
mov
int3
xchg
cmp
push
fidivr
sahf
sti
inc
mov
fldenv
pushf
xchg
adc
nop
and
das
add
or
repz
pusha
popf
dec
sbb
push
mov
jmp
xor
pop
xor
jo
jmp
fwait
lds
push
dec
mov
ins
cmc
outs
in
iret
(bad)
jl
aaa
lock
mov
nop
push
mov
retf
lods
jbe
fnsave
inc
pusha
ror
inc
cmp
sar
daa
out
sub
dec
cmp
ror
sbb
neg
sahf
cli
inc
lods
push
add
hlt
dec
lock
mov
or
jb
hlt
leave
mov
mov
sbb
dec
push
cdq
stc
adc
mov
je
lock
and
pop
sar
cmp
or
mov
jo
and
aas
pop
in
push
or
xor
add
mov
lea
add
aam
ror
mov
sub
mov
xlat
sbb
dec
cmps
div
ds
popa
dec
push
jmp
jnp
sub
scas
loope
push
repnz
push
cmp
mov
pop
adc
cmp
in
div
pop
push
inc
jecxz
mov
js
(bad)
jnp
push
inc
pop
sbb
xor
popf
(bad)
std
sbb
out
pop
fcom
pop
sub
daa
in
mov
jl
pushf
mov
sar
sbb
mov
mov
inc
sar
jg
jp
or
mov
leave
cmp
aad
retf
shl
mov
sbb
cmps
pop
mov
in
mov
das
fs
xchg
add
fsub
ds
int3
mov
cwde
pop
or
mov
jnp
mov
loop
jmp
fild
sar
sbb
fisttp
leave
rcl
jp
sub
(bad)
mov
add
xor
rol
call
loopne
or
aam
push
or
jo
push
push
xchg
inc
xchg
pop
ins
xchg
adc
cld
pop
push
jecxz
jno
(bad)
cmps
mov
enter
sub
sub
mov
aaa
jb
push
scas
adc
test
hlt
add
pop
shl
add
cs
jmp
stos
jp
jle
and
push
push
adc
dec
push
fisttp
test
fisubr
ret
test
pop
dec
mov
lods
aam
sti
test
push
in
sub
pop
xchg
popf
mov
and
push
bound
cmps
push
out
bnd
adc
cld
je
push
mov
jmp
xchg
pop
addr16
dec
push
add
adc
scas
mov
sar
icebp
in
shl
add
push
js
xor
scas
jle
dec
ins
cmp
lock
xchg
push
mov
sbb
pop
ror
fadd
dec
push
loope
inc
out
call
mov
das
jne
fimul
sbb
cdq
pop
push
push
sub
aad
sbb
adc
mov
inc
shl
push
nop
sti
cmp
mov
xchg
xchg
mov
jle
add
jecxz
movs
std
scas
sub
ins
movs
fs
es
fwait
rcr
cmp
cmp
loop
data16
popa
pusha
jo
out
mov
sub
jmp
cmps
out
mov
add
test
mov
imul
or
sbb
xchg
mov
(bad)
std
mov
sub
les
data16
les
fisub
xchg
fcmovnu
int3
es
lods
push
or
movs
mov
and
repz
pop
retf
fwait
sbb
sbb
pop
mov
adc
inc
ret
in
jb
jmp
pusha
push
jb
jmp
loop
jg
xchg
pop
dec
push
cmps
push
outs
popa
mov
add
pop
sbb
sub
or
jmp
mov
and
pop
das
daa
cmp
test
extrq
out
retf
and
out
fsub
in
xchg
test
leave
jl
jb
xor
movs
jmp
xchg
cmp
mov
xor
imul
out
pusha
adc
xchg
fidiv
mov
adc
ficom
pop
mov
mov
pop
stos
xchg
fld1
psrld
rep
mov
cli
or
cmp
stos
outs
or
sub
mov
dec
push
mov
mov
les
xchg
mov
pop
cli
pop
shl
add
and
adc
mov
inc
xor
cmc
cmp
leave
pop
test
ins
ss
ins
jge
bound
sar
and
sub
gs
gs
or
lahf
adc
inc
mov
mov
cmp
sub
enter
ret
ds
push
jmp
jne
jle
iret
xor
xor
push
jns
sub
icebp
cdq
mov
shl
int
fdivr
cwde
adc
dec
jns
mov
iret
sbb
dec
or
(bad)
data16
adc
mov
sbb
xor
dec
sbb
imul
ja
idiv
sbb
xor
ins
std
jp
(bad)
sbb
sub
in
retf
mov
add
lock
fdiv
in
jl
mov
call
mov
push
or
mov
out
repnz
in
mov
(bad)
sahf
cmp
out
scas
nop
rcr
jmp
mov
pop
xlat
mov
movs
inc
in
mov
jno
dec
or
mov
push
das
hlt
cmp
jbe
push
pop
inc
adc
js
dec
fimul
push
sbb
add
jge
fsubr
pop
nop
jne
fcmovbe
stos
adc
mov
cmp
mov
arpl
in
popa
add
dec
jge
add
mov
fidivr
sbb
adc
retf
ror
adc
pusha
out
mov
fwait
test
ss
cmp
mov
cwde
xchg
lods
xchg
prefetch
jns
inc
mov
(bad)
retf
test
push
popa
test
lea
daa
jmp
in
sbb
mov
mov
or
repz
scas
sbb
call
mov
dec
jecxz
sub
test
or
dec
mov
xchg
pop
out
mov
stos
xor
mov
addr16
cmp
lods
nop
mov
popf
dec
test
rcl
push
mov
out
out
jmp
lds
ret
mov
fild
jno
movs
xor
xchg
jg
sbb
neg
push
hlt
jp
push
adc
daa
fldcw
movs
mov
pop
imul
repz
pusha
ins
bound
fs
pop
call
push
test
icebp
mov
inc
mov
pusha
mov
jg
popf
xor
jge
pop
pop
mov
inc
enter
movs
mov
cmp
ficom
push
(bad)
xor
jno
cmp
xlat
stos
push
push
cdq
push
xlat
call
clc
mov
xchg
js
jecxz
mov
je
xor
xchg
cdq
push
pop
not
xor
adc
xchg
lahf
cdq
adc
cmp
mov
xchg
mov
mov
pushf
mov
or
cmp
mov
jnp
cli
mov
mov
out
(bad)
nop
mov
stc
mov
test
mov
pop
shl
fxch
out
mov
dec
outs
jae
jb
(bad)
sbb
mov
aas
leave
jl
xor
xchg
imul
int3
stos
mov
or
ja
xlat
xchg
jge
ins
adc
(bad)
mov
data16
iret
repz
or
arpl
xchg
cwde
sbb
(bad)
cld
mov
mov
xor
and
cwde
add
adc
stos
pusha
cld
iret
pop
cmp
sbb
rol
mov
test
jge
je
dec
stos
xchg
adc
mov
(bad)
movs
xchg
jne
sbb
clc
inc
repz
sub
mov
jmp
mov
ins
ja
cmp
hlt
mov
dec
mov
icebp
pop
repnz
iret
and
xchg
bound
add
push
adc
pop
pop
xchg
add
sbb
stc
jmp
adc
dec
in
add
cmp
push
xor
das
push
sbb
mov
popa
adc
or
add
push
mov
or
or
inc
jg
aaa
ss
cld
jno
in
and
out
mov
out
out
push
pop
lods
mov
sahf
ret
and
push
xor
(bad)
aam
cmp
(bad)
jbe
fistp
mov
stos
sub
loope
inc
aas
dec
add
xchg
(bad)
jno
jmp
(bad)
mov
das
iret
stc
sub
dec
cmps
xor
mov
xchg
jp
popf
mov
aad
sahf
mov
enter
inc
xchg
iret
es
nop
pop
cmp
outs
cmp
adc
into
(bad)
jbe
and
dec
push
dec
iret
lea
cmc
mov
adc
imul
mov
jb
aam
dec
cmps
test
test
xchg
repnz
cli
add
adc
dec
dec
xchg
arpl
pop
mov
xor
fst
popf
mov
out
pop
imul
cmps
fnsave
sbb
stc
cs
ret
inc
sbb
xchg
or
or
je
sbb
scas
add
xchg
aas
adc
icebp
and
fist
ja
repnz
or
xor
xchg
leave
adc
stc
stos
rcr
iret
aam
shl
cld
test
test
(bad)
jmp
or
mov
xchg
das
rol
bound
ret
int3
imul
stos
cmp
dec
and
adc
ret
data16
mov
fdivr
rol
xchg
dec
mov
cmc
out
(bad)
mov
mov
push
push
ror
lds
or
add
ins
and
pushf
adc
pop
push
sti
js
sub
int
inc
push
adc
xadd
xchg
add
jno
jnp
aas
adc
mov
stos
or
add
xor
popa
in
cmp
and
cmc
call
das
pop
loopne
push
mov
push
(bad)
out
or
aam
jmp
add
rol
mov
jp
adc
jge
cmc
not
pop
push
scas
das
jg
xchg
add
and
or
in
gs
pop
leave
jp
mov
pop
test
inc
mov
xchg
dec
add
xchg
dec
or
movs
xor
imul
jle
and
jns
dec
enter
cwde
mov
cli
push
adc
xchg
mov
sub
mov
inc
xchg
inc
ficomp
pop
lds
xor
and
mov
pop
shl
shl
or
icebp
vpsrlvq
add
rcr
in
or
jl
int3
call
daa
adc
inc
test
ret
bound
hlt
(bad)
jle
test
push
jb
lods
outs
retf
shl
in
push
inc
lock
int
sbb
fild
scas
and
or
sub
lahf
adc
cdq
fwait
xchg
lods
push
pop
dec
mov
aas
push
int3
retf
enter
xor
and
mov
push
fmul
popa
cmp
daa
hlt
or
fsub
iret
sbb
sar
(bad)
imul
stos
rcr
mov
and
mov
test
push
pop
inc
jmp
out
mov
ins
loope
inc
mov
call
cs
jmp
(bad)
mov
in
cmp
inc
push
and
xchg
enter
mov
add
rcr
xchg
cmp
addr16
dec
inc
int
loopne
rcl
sbb
push
dec
or
cdq
xchg
mov
mov
test
inc
ss
mov
icebp
pop
icebp
in
ins
dec
sub
aas
or
outs
inc
xchg
jo
sbb
xor
dec
(bad)
loop
adc
lock
clc
loopne
xchg
mov
xchg
mov
xor
fcmovbe
sub
ret
aaa
test
jmp
test
mov
bound
fnstsw
nop
out
ror
cs
movs
pop
(bad)
jns
lock
fdiv
test
pop
xchg
gs
fnsave
sti
jg
imul
int
ja
imul
in
retf
or
into
daa
cmp
add
jmp
int
jns
add
adc
js
jo
xchg
lahf
out
fiadd
dec
hlt
mov
in
adc
test
cmp
ret
sub
push
push
gs
gs
cli
xchg
call
jecxz
xchg
xlat
retf
cli
inc
sar
retf
cmp
pusha
sbb
xchg
cmp
sahf
push
in
add
mov
or
into
enter
pop
test
test
jo
jge
jp
stos
test
aaa
pop
(bad)
outs
(bad)
int3
xchg
or
rcr
addr16
sub
mov
and
inc
xchg
fimul
pusha
push
stos
adc
daa
mov
mov
xor
cld
xchg
sar
adc
fnstsw
pop
and
mov
mov
mov
lods
add
loope
and
and
xor
xabort
out
mov
sbb
add
push
pop
pop
ret
leave
adc
lea
aas
cli
mov
ss
and
mov
or
cmps
mov
or
or
imul
ja
mov
outs
adc
out
jecxz
(bad)
adc
rol
dec
ror
cmp
inc
lods
test
inc
or
cmp
fwait
dec
dec
sub
cmc
ret
or
jnp
jae
ins
pop
jmp
or
mov
jne
leave
cmp
aam
(bad)
or
jno
dec
bound
mov
lods
cmc
xchg
dec
es
aas
fstp
sub
jecxz
rcr
fldl2e
retf
je
xchg
jns
push
and
pop
or
sub
or
inc
xchg
movs
sub
or
bound
rol
bound
cs
mov
mov
gs
ins
sbb
xor
mov
jmp
mov
push
xor
xor
je
loopne
jne
pop
stos
loopne
int
add
adc
(bad)
in
cdq
inc
mov
cmp
fisttp
add
shr
cmp
fdivr
ret
lock
das
arpl
mov
dec
outs
stos
mov
xchg
sub
inc
clc
pop
and
fcmovu
xchg
dec
inc
mov
in
push
js
push
jl
and
mov
je
out
add
or
ret
xchg
sub
stos
and
push
test
pop
adc
bound
cmc
push
dec
iret
sub
ds
push
pop
(bad)
stos
lods
fistp
shl
mov
cmp
and
sub
and
jb
push
cmps
lods
in
fdiv
or
push
jecxz
or
sbb
mov
or
and
pop
pusha
adc
add
add
fmul
icebp
ffreep
jle
hlt
daa
jle
imul
dec
cs
jge
in
movs
ds
add
js
and
pop
cmp
inc
jae
in
add
dec
arpl
push
shl
cmp
pop
loop
xor
(bad)
shr
pusha
add
lock
push
adc
outs
push
mov
cmps
(bad)
sub
xor
mov
lea
inc
hlt
pop
in
jmp
lahf
xchg
xchg
aaa
repz
cmp
call
dec
loop
loop
push
push
and
stos
or
mov
jns
lods
ror
mov
stos
inc
sbb
(bad)
ds
imul
(bad)
jno
mov
mov
or
mov
stc
(bad)
shl
adc
inc
fild
dec
stc
addr16
outs
and
push
imul
mov
add
xor
imul
in
sub
aas
jmp
inc
mov
and
mov
pusha
addr16
xchg
push
sub
rol
adc
mov
pop
imul
hlt
add
inc
adc
xor
pop
dec
xor
out
fwait
call
hlt
sbb
xlat
lock
mov
mov
jae
xchg
loop
sbb
xor
mov
push
xchg
push
adc
scas
jnp
enter
loopne
fild
ficom
mov
xchg
cmp
scas
xchg
inc
lds
mov
mov
int3
leave
add
in
xchg
jae
int
push
(bad)
and
in
cmps
adc
mov
ss
mov
mov
cmc
in
cld
dec
push
push
inc
jnp
dec
(bad)
aaa
dec
lahf
out
loopne
add
push
cld
pushf
jle
jbe
dec
jl
loopne
fild
xchg
loopne
mov
outs
xor
mov
mov
nop
or
out
hlt
in
out
(bad)
shl
jne
jecxz
push
(bad)
adc
adc
and
leave
cmp
jns
add
sub
dec
mov
inc
mov
cdq
jmp
mov
ret
fldenv
imul
xchg
out
or
xor
mov
mov
dec
iret
mov
icebp
jae
cli
push
inc
call
es
(bad)
pop
sub
out
inc
inc
cld
push
mov
xchg
sbb
push
(bad)
push
sub
dec
jno
test
xchg
push
sbb
hlt
retf
adc
aad
ins
int3
push
add
mov
dec
lods
mov
inc
in
sub
sub
jne
jg
ds
push
jle
sub
test
add
dec
jns
pop
out
retf
sbb
or
outs
mov
cmp
bound
push
xlat
adc
xchg
pop
es
repz
imul
pop
mov
cmps
das
mov
les
lahf
add
std
push
in
xor
push
jp
dec
repnz
mov
iret
ror
pusha
shr
pusha
adc
jmp
ret
sahf
xchg
sahf
aad
inc
mov
adc
out
cli
sbb
mov
lods
xlat
push
dec
jb
bound
retf
dec
dec
adc
sbb
shl
and
fs
je
lods
inc
movs
mov
mov
add
add
cmp
xlat
in
sub
mov
out
int3
fidivr
data16
fdivp
(bad)
jmp
sub
cmp
cdq
or
inc
dec
rcl
adc
scas
int3
int3
xchg
dec
out
retf
add
and
pop
inc
and
test
sub
hlt
repz
mov
and
push
adc
and
jmp
xchg
std
fsubr
pop
pop
into
push
gs
in
push
lods
mov
js
test
sub
pop
and
ret
push
nop
mov
hlt
mov
out
sbb
jl
jo
in
inc
addr16
pusha
ja
mov
ins
les
sar
jns
lds
dec
push
(bad)
mov
daa
int
mov
jl
cmps
cli
outs
in
int
fs
(bad)
in
lods
lds
cmp
and
popa
(bad)
cmp
(bad)
out
dec
cmps
popa
out
jg
pop
pop
cs
retf
mov
xchg
push
push
popf
jb
(bad)
sti
call
sti
jbe
ret
mov
dec
sub
outs
mov
jnp
lds
adc
std
mov
mov
push
movs
mov
aaa
adc
sbb
idiv
cmps
ret
pusha
retf
je
adc
test
inc
and
(bad)
mov
outs
jle
add
outs
cld
rol
xlat
mov
in
in
and
das
sti
loope
jle
aas
pop
adc
mov
adc
jl
ret
mov
ss
dec
mov
inc
cmp
imul
jno
fisubr
leave
aam
dec
xor
sub
fild
sub
ins
daa
out
pop
sar
into
xchg
fnstcw
jbe
lock
stos
dec
iret
or
inc
lds
lea
cmps
push
jl
rol
test
fdiv
lahf
int
clc
and
adc
mov
xor
fnstenv
jge
enter
mov
cmc
gs
repnz
popa
mov
xchg
ret
xor
retf
aaa
push
inc
and
lods
int
repz
leave
dec
test
jne
lds
sub
loope
and
movs
xchg
mov
cwde
test
xchg
cld
sar
bound
mov
mov
fsub
cli
movs
stc
rol
mov
je
int3
xchg
mov
out
je
cmp
lahf
scas
push
jmp
pop
sbb
mov
and
push
test
push
xchg
shr
mov
xchg
dec
fs
and
es
xchg
mov
rol
mov
jp
jp
fsubr
jmp
mov
push
(bad)
xchg
outs
out
gs
adc
mov
sub
jp
retf
mov
mov
dec
loopne
sbb
push
jl
rol
inc
dec
je
jle
mov
fld
ds
ss
int3
stos
clc
mov
jg
sub
je
dec
leave
xchg
xchg
mov
cwde
mov
mov
mov
pop
ret
sub
push
inc
mov
aaa
icebp
pop
mov
push
pop
int3
lahf
das
mov
jle
jne
pop
punpckhbw
das
cmp
push
mov
fwait
or
mov
mov
and
jno
adc
dec
cmps
pop
push
sub
daa
das
push
jp
ds
sub
repz
leave
lods
push
inc
mov
or
pop
jge
and
xor
(bad)
arpl
les
push
das
fld
sbb
repz
xchg
outs
jbe
lds
and
jl
xor
cmp
leave
xchg
add
jge
mov
test
div
push
enter
push
cmp
test
loopne
xor
rcl
sbb
push
test
aas
cmp
sbb
pop
stos
jmp
in
xchg
pop
jo
inc
or
sub
cs
sub
xchg
xlat
cld
inc
cmps
fld
xchg
dec
sti
mov
pop
retf
cmovbe
test
pop
cvttps2pi
std
pop
sub
sbb
loope
jnp
xchg
push
jnp
push
js
dec
stc
data16
add
(bad)
fcom
mov
mov
cmc
in
test
pop
jne
cmp
cwde
dec
and
bound
out
adc
push
jecxz
nop
ret
cli
nop
mov
popa
dec
retf
inc
xchg
xchg
leave
mov
mov
enter
add
mov
stc
mov
mov
adc
test
std
sti
xchg
add
cmp
xlat
inc
fisubr
std
lahf
or
imul
movs
aas
adc
ds
int
and
push
jl
je
push
leave
inc
mov
neg
scas
dec
jo
xor
scas
sub
cmps
push
or
sub
jbe
dec
jmp
loopne
loop
aaa
imul
adc
xor
vcvtsi2ss
jns
retf
jl
inc
cmp
stos
inc
ins
mov
out
adc
(bad)
cmp
in
push
test
cmp
xlat
cmp
in
stc
daa
sub
sbb
mov
add
xor
xchg
stos
cmp
jmp
inc
pop
loopne
sub
cmp
lds
jle
mov
pop
aad
xor
cmp
ss
mov
push
ror
pop
aam
mov
iret
add
mov
(bad)
pop
pusha
(bad)
(bad)
lea
add
popa
and
jns
cmp
nop
inc
es
sbb
adc
sahf
pushf
scas
sub
repnz
add
pop
cli
in
jmp
icebp
add
pop
pop
push
inc
jg
loope
ret
stos
cdq
jns
scas
push
imul
sub
mov
fs
adc
retf
lods
neg
adc
mov
sbb
push
leave
dec
and
call
popa
gs
dec
popa
loopne
and
xchg
jns
push
sbb
mov
or
pop
push
xor
push
sub
mov
push
sub
clc
pop
sbb
jae
arpl
out
arpl
dec
mov
jno
lea
jecxz
test
repz
or
jno
lods
push
test
scas
fld
add
(bad)
jmp
aaa
fmul
das
mov
jmp
ret
jbe
add
mov
pop
adc
push
jmp
les
sub
fdiv
sti
stos
(bad)
sar
push
stos
cmp
(bad)
mov
push
test
in
dec
xor
cmp
push
xchg
hlt
xchg
push
or
int3
push
ret
mov
jno
push
aaa
das
aam
cmp
iret
xchg
push
test
call
nop
iret
cwde
bound
xor
in
scas
mov
retf
xchg
cdq
and
push
cmp
adc
fld
inc
in
popa
mov
out
jns
jns
or
mov
dec
les
int
imul
pop
cs
mov
cld
in
and
outs
add
mov
stos
mov
out
stc
xor
enter
ret
bound
and
fwait
push
mov
sub
test
xchg
test
mov
retf
mov
js
dec
xor
mov
xchg
mov
add
ins
movs
push
nop
aad
out
xchg
(bad)
dec
mov
cmp
fsubr
jb
cmp
daa
rcr
movs
ror
retf
cli
jl
rcl
rcl
jmp
sti
pop
rcr
sbb
push
cmps
mov
dec
ins
loopne
movs
jmp
or
stc
mov
mul
or
repz
shl
shl
sub
fimul
mov
loopne
inc
clc
add
mov
and
daa
mov
loope
mov
push
and
jp
repz
(bad)
sti
movs
addr16
sahf
jmp
jg
sti
add
jnp
out
pop
push
or
std
mov
jae
arpl
retf
cmp
cwde
push
dec
addr16
adc
std
(bad)
sub
mov
xchg
nop
and
mov
pop
imul
xchg
fsubr
cli
dec
pop
pop
inc
imul
ret
inc
mov
or
movs
(bad)
mov
nop
push
fwait
xchg
(bad)
cmp
js
enter
or
add
loop
pop
nop
jp
sub
jne
rol
out
pop
xor
adc
add
cmp
ds
(bad)
mov
sbb
call
pop
pop
das
xchg
int
inc
cmp
les
fs
aam
shl
mov
sbb
pusha
push
adc
push
pop
sub
sbb
leave
leave
mov
jg
adc
fisub
sbb
ret
cmp
jns
movs
sti
xor
xchg
jnp
cli
gs
cmp
movs
cmp
test
retf
or
int3
out
dec
add
shl
cwde
mov
aaa
fldcw
in
dec
or
aad
xor
shl
pusha
(bad)
and
jbe
jg
cmp
test
or
cwde
fimul
dec
adc
movs
dec
fadd
test
cmp
cmp
jmp
dec
mov
ret
test
and
mov
mov
cmp
cmp
xchg
nop
pop
loopne
jp
js
mov
mov
repz
inc
fcmovu
adc
xchg
shl
and
or
fs
jb
sub
cmp
stc
leave
sbb
int
cmp
stc
loop
adc
xchg
sbb
loopne
int3
adc
bound
dec
leave
ins
or
ins
aad
push
je
push
hlt
add
popa
jno
dec
retf
xor
mov
loope
xchg
scas
(bad)
dec
test
cmc
dec
mov
test
pop
inc
fidivr
imul
push
jns
push
mov
and
enter
or
sahf
fisttp
ret
aam
jmp
clc
(bad)
jmp
jbe
xor
lahf
ret
repz
bound
xchg
ret
cmp
xchg
movs
mov
cmps
rcl
push
movs
sbb
into
cmp
cmp
cmc
(bad)
xor
ror
pop
dec
enter
adc
mov
mov
mov
rcl
push
mov
push
mov
add
ins
adc
adc
xor
(bad)
ss
adc
rcr
or
adc
dec
push
sub
mov
pop
ds
int
outs
sub
mov
mov
das
dec
and
loope
xchg
and
icebp
cmp
(bad)
(bad)
lahf
retf
arpl
(bad)
rcr
rcr
into
xchg
inc
ins
ret
jle
cmp
sbb
sbb
sahf
stos
dec
sub
adc
mov
mov
loope
rol
dec
mov
xchg
mov
fsub
cmc
iret
lods
fnstenv
sub
dec
int
jbe
push
rol
in
jmp
ins
sbb
not
add
lods
pop
add
push
loope
or
adc
(bad)
imul
arpl
(bad)
mov
sar
int3
out
pop
in
mov
and
not
sub
inc
(bad)
mov
or
and
cmp
ins
aam
mov
das
xor
xor
mov
mov
int
int3
movs
ror
cld
hlt
hlt
add
or
outs
jb
push
ds
sub
data16
(bad)
push
in
pusha
stc
pushf
call
pop
cli
add
add
mov
add
and
mov
sub
in
push
inc
or
mov
or
push
stos
ins
fwait
scas
xchg
mov
adc
xor
pop
inc
push
fsub
adc
and
lock
inc
cli
xchg
lea
dec
push
mov
mov
and
mov
sti
and
je
or
mov
test
inc
ins
jmp
hlt
adc
mov
shl
outs
es
cmp
sti
push
stos
dec
popf
sub
jmp
push
push
ret
adc
addr16
les
lahf
ret
jmp
sub
xchg
inc
dec
mov
pop
rcr
and
test
inc
mov
ret
add
pop
mov
jns
sbb
push
loopne
das
fbstp
inc
in
cmps
cmp
pop
inc
fcmovnu
xchg
jmp
sbb
fild
mov
fs
(bad)
data16
mov
(bad)
icebp
add
pushf
fcomp
icebp
aaa
mov
dec
out
jp
movs
lods
fadd
ss
inc
(bad)
mov
bound
xchg
lahf
mov
mov
icebp
xor
jge
rcl
push
add
mov
dec
mov
fimul
jb
in
mov
jno
sub
pop
test
lods
jbe
mov
popf
repz
mov
fs
pop
dec
(bad)
mov
mov
cli
dec
inc
addr16
call
out
sub
inc
mov
int
jmp
sar
mov
sbb
and
inc
rcr
into
mov
lods
mov
repnz
mov
pop
out
test
retf
xchg
adc
fsubr
xchg
out
cmps
xchg
imul
pop
jbe
(bad)
int
and
pop
adc
sbb
pop
ret
lds
daa
sub
sahf
cmp
xchg
jmp
sub
loopne
xchg
cmc
fwait
xor
ret
or
jmp
arpl
ins
mov
add
inc
daa
dec
mov
mov
cs
mov
dec
dec
pop
popa
mov
jmp
add
or
mov
das
into
cmp
cmp
call
ins
nop
rcl
sbb
mov
lahf
call
xor
enter
in
(bad)
ds
and
xchg
cmp
jnp
aas
sbb
hlt
cmps
mov
bsf
or
jecxz
push
je
jno
inc
in
clc
adc
fmul
dec
adc
shl
clc
addr16
movlps
push
dec
fidiv
retf
stc
lods
popa
mov
sbb
mov
mov
cmps
mov
outs
ins
sub
pop
cwde
mov
jae
fs
rcl
je
push
ins
cmp
out
(bad)
mov
ss
(bad)
lods
cmc
sub
leave
xor
xchg
aad
retf
jmp
cmp
cmp
pushf
jno
jb
cwde
imul
scas
add
dec
popa
xor
js
es
jbe
ja
xchg
dec
imul
movs
cli
adc
pop
pop
mov
retf
xlat
lds
xchg
inc
repz
jno
int3
jb
enter
bound
lods
adc
aad
fldlg2
scas
lock
cli
jo
(bad)
repz
div
cmp
int
mov
call
cs
mov
aas
sbb
cdq
cmp
daa
xchg
xor
jmp
push
push
mov
cmps
pop
outs
fs
fstp
fistp
inc
test
les
pop
sub
addr16
ins
xchg
or
push
and
in
jno
retf
(bad)
sar
stos
cmc
mov
cmp
das
das
sub
xor
mov
xor
sub
mov
jecxz
rcr
adc
cmp
aas
add
and
add
push
ins
out
mov
es
push
enter
mov
mov
in
gs
sbb
daa
inc
xchg
les
fwait
push
movlps
xor
add
add
push
pop
inc
jae
xchg
mov
popf
mov
and
(bad)
xchg
fwait
xlat
in
test
fisubr
mov
pop
jbe
adc
aaa
daa
push
dec
mov
(bad)
and
fiadd
jge
mov
dec
inc
test
inc
ins
mov
cmp
repz
jle
sbb
(bad)
add
outs
xor
stos
jne
call
js
push
inc
mov
dec
inc
mov
in
jp
pop
add
sbb
lahf
mov
sar
adc
or
push
and
pop
loopne
add
jne
pop
sbb
in
out
pop
or
push
cmp
popa
or
and
lods
in
inc
add
int3
outs
lods
xchg
push
xlat
cli
fistp
xchg
mov
mov
(bad)
ja
jmp
fnsave
or
popf
js
stos
and
jp
jl
lahf
imul
sub
lea
jnp
je
sub
inc
pop
inc
jbe
sbb
sub
push
in
jl
pusha
push
and
mov
mov
repnz
int
fild
retf
push
adc
cdq
jnp
jnp
lock
or
fs
imul
nop
cmp
inc
test
mov
mov
test
inc
push
inc
icebp
mov
out
cwde
xchg
mov
jmp
cld
mov
stos
push
sar
scas
jp
xchg
sti
and
add
dec
jge
in
cwde
jbe
shl
sbb
lock
cmc
dec
aas
icebp
jb
test
mov
push
mov
jmp
push
andps
xlat
pusha
fdivr
add
xor
test
push
cmp
mov
out
xlat
mov
jb
(bad)
fstp
scas
push
push
mov
test
out
adc
jmp
in
push
ret
mov
(bad)
mov
pop
int
lods
mov
push
pusha
inc
pop
xchg
sub
outs
mov
mov
cld
pop
cmove
adc
sahf
aam
jmp
mov
sbb
mov
aam
mov
fistp
sub
jecxz
mov
pop
retf
inc
addr16
push
in
dec
bound
xchg
add
sbb
ds
jae
push
movntq
loop
push
imul
ret
pop
or
xchg
mov
jns
pop
inc
imul
daa
jno
jnp
xlat
push
pop
loopne
mov
popa
or
lds
and
sti
jb
mov
xchg
xor
je
lahf
pop
cmp
lods
ficom
add
sbb
add
repz
lock
add
fild
vmread
cwde
pop
jbe
cdq
sub
loopne
adc
lods
iret
sbb
push
repnz
pop
jmp
push
es
sub
pop
je
mov
inc
sbb
je
xor
dec
xchg
push
jns
or
cmps
sar
ja
mov
jmp
popa
(bad)
mov
push
jle
xor
inc
push
xor
and
mov
inc
outs
pop
fidivr
inc
rol
mov
pop
stos
out
mov
fwait
push
push
aad
lods
or
je
cmp
push
cs
add
call
imul
jmp
mov
into
das
adc
in
or
scas
push
sub
push
popa
pop
and
adc
icebp
ror
push
xlat
jp
sub
call
mov
out
data16
inc
mov
cdq
cmp
jg
rol
cs
std
bound
femms
cmp
dec
movs
icebp
sub
sbb
push
mov
call
popa
jecxz
loop
cmp
sti
jmp
xchg
in
cmp
xlat
dec
inc
outs
mov
aaa
sub
call
shr
dec
imul
mov
xor
cmp
loopne
test
shl
idiv
fstp
bound
es
sbb
push
pusha
pop
pop
mov
sbb
push
stos
sbb
push
push
cmps
adc
ficomp
daa
jmp
or
call
mov
or
je
add
jo
push
cdq
std
cmp
retf
sbb
cmp
jecxz
jne
outs
mov
mov
inc
jle
push
mov
cmc
dec
out
push
sub
mov
in
dec
mov
cmps
sub
out
in
addr16
mov
sbb
iret
adc
inc
cdq
lea
stos
xchg
test
adc
add
jnp
jle
bnd
mov
pop
and
jmp
mov
std
ficom
dec
fisttp
mov
xchg
lock
mov
popa
ret
(bad)
aas
stc
sbb
xchg
scas
and
adc
cmp
sub
dec
mov
pop
leave
repnz
jmp
lea
inc
mov
adc
popf
inc
xlat
and
iret
push
popw
push
(bad)
mov
mov
xchg
loope
das
test
adc
cwde
adc
cld
inc
stc
jb
xor
call
retf
mov
outs
add
and
dec
fst
or
and
dec
outs
cmp
cld
or
loop
ins
and
push
in
repz
push
pop
cmc
or
jbe
jl
movs
shl
aad
mov
out
sbb
lock
push
dec
icebp
or
cs
out
int
inc
push
repz
xchg
(bad)
scas
push
mov
das
loop
xchg
pop
int3
fist
movs
pushf
lods
(bad)
mov
pop
or
cld
xchg
cs
adc
(bad)
xchg
dec
dec
(bad)
repz
jmp
sub
les
inc
retf
lods
push
popa
clc
push
imul
or
add
shl
jb
(bad)
xchg
push
ficomp
(bad)
fmulp
js
imul
add
adc
pusha
leave
inc
inc
jl
gs
sub
retf
jecxz
bndstx
sub
inc
aad
pop
mov
mov
dec
jo
pusha
retf
dec
mov
inc
cdq
and
popf
jne
ficom
jmp
inc
loope
pop
imul
aad
cmp
rol
or
fld
xor
aad
lea
mov
stos
test
and
pop
push
push
mov
inc
test
adc
mov
adc
mov
add
mov
cmp
push
cmp
loop
push
ret
bound
cmp
outs
or
jno
idiv
lea
aas
arpl
add
pop
dec
clc
dec
pop
bnd
call
pop
jmp
pop
cmp
cwde
shr
xlat
je
jbe
mov
sar
aaa
ds
inc
inc
(bad)
test
pop
add
mov
dec
mov
fsubr
lds
shr
mov
movs
lods
call
fucomi
in
fadd
xor
and
sub
fdivr
loope
out
fyl2x
push
bound
imul
mov
add
(bad)
mov
repnz
mov
mov
int3
test
push
mov
loop
dec
mov
mov
or
push
push
jge
iret
loope
jne
adc
jo
push
mov
aas
sar
test
lea
push
pop
push
les
inc
inc
cmp
cmp
mov
adc
pop
ds
sar
lds
xchg
dec
push
loop
dec
adc
pop
(bad)
or
gs
mov
icebp
in
clc
pop
inc
adc
jmp
and
dec
sub
aaa
mov
adc
push
sbb
jmp
push
fisttp
fwait
cmp
mov
pusha
cmp
cdq
je
jb
neg
bound
inc
pusha
mov
pop
mov
inc
mov
jbe
enter
xchg
sub
add
int3
aas
cs
sbb
push
xchg
pop
fsubrp
mov
dec
push
push
bound
call
inc
inc
lds
lds
test
sbb
in
inc
ret
mov
jae
hlt
(bad)
xchg
xor
loopne
sbb
popf
je
movs
sbb
leave
pop
mov
adc
mov
test
mov
in
mov
(bad)
inc
mov
in
sbb
(bad)
lock
test
inc
mov
xchg
inc
xchg
cmps
arpl
push
in
push
cmp
lock
xor
hlt
scas
imul
xchg
popa
pop
cwde
ja
pop
adc
pushf
cmp
cmc
adc
jo
adc
mov
dec
xchg
ficomp
fsubr
cmp
adc
not
aaa
or
enter
pop
dec
xor
(bad)
jle
adc
xchg
mov
xchg
(bad)
hlt
repnz
mov
jne
lods
scas
ret
or
jne
pop
mov
pop
cmp
sbb
adc
xlat
fdiv
mov
popf
or
out
xchg
sub
enter
mov
pushf
enter
adc
add
push
and
outs
popf
out
clc
repz
sahf
mov
add
sti
add
mov
cwde
gs
inc
out
fstp
add
ds
inc
les
or
sbb
dec
loop
gs
jnp
xor
repnz
call
pop
retf
popf
xchg
pop
pop
in
jl
xchg
rcl
fiadd
retf
popf
test
inc
inc
xchg
test
scas
adc
aad
inc
pop
inc
out
cmp
nop
cdq
jb
stos
mov
sahf
cmc
jns
xor
pop
push
add
mov
push
sub
add
mov
mov
jg
or
push
dec
lock
fidiv
mov
out
ins
or
mov
dec
movs
test
inc
fs
clc
sub
sbb
or
shl
fbld
xchg
mov
or
movs
xor
lods
loop
leave
shl
mov
fild
popf
dec
dec
sub
in
(bad)
popa
cmp
jne
jno
test
mov
mov
sub
mov
fdivr
lock
jne
(bad)
scas
out
push
test
mov
push
lods
js
imul
outs
(bad)
loop
cld
sub
cld
xchg
jg
push
pop
cmps
mov
sar
stos
push
repz
sbb
jmp
pop
or
hlt
push
fsub
mov
lods
jmp
jne
pop
mov
add
fimul
or
push
ret
push
pop
cmps
pop
aas
lds
sub
das
test
es
int3
mov
mov
cmp
dec
pop
jl
mov
mov
push
jne
or
lods
out
mov
xchg
cmp
icebp
add
ror
push
call
shl
gs
jl
mov
inc
test
inc
inc
call
clc
push
aaa
dec
loop
mov
jmp
push
sub
sbb
in
(bad)
inc
idiv
shr
xor
ror
jp
cs
sbb
fisub
push
sbb
sti
leave
ror
jae
jp
cmp
fst
or
fwait
or
dec
sub
ins
retf
stc
hlt
adc
sub
inc
scas
mov
jp
mov
jnp
or
rcl
out
les
nop
xchg
jmp
jmp
fbld
pop
push
movs
mov
jno
pop
jo
retf
cmps
inc
add
mov
out
pop
ins
lahf
adc
jo
pop
jo
push
fidiv
ret
into
mov
stc
cmp
jnp
out
cmc
sbb
fwait
jg
sbb
push
loop
push
je
pop
dec
or
sub
imul
push
cs
sub
inc
jmp
lahf
cmp
into
outs
dec
xor
clc
or
pop
int
push
pushf
rol
cs
aas
outs
mov
jg
inc
pop
addr16
loopne
xchg
ds
rol
dec
aas
jmp
lock
push
add
imul
(bad)
jl
mov
pop
je
in
sub
mov
mov
push
dec
jbe
xor
scas
fdiv
jle
cmp
pop
mov
sub
adc
xor
push
into
mov
imul
daa
pusha
push
out
and
push
scas
jecxz
test
or
psubq
inc
mov
repnz
loop
push
dec
cs
xor
outs
and
dec
jl
enter
pop
push
cmp
fnstenv
sbb
jns
cmp
in
push
xor
rcr
les
bound
in
out
mov
je
and
out
(bad)
jecxz
xchg
das
push
jae
sub
mov
gs
lock
cmp
add
mov
jae
pop
cs
fstp
icebp
xchg
std
hlt
cmp
(bad)
out
lock
cmc
out
adc
test
add
dec
scas
fcom
fld
aaa
arpl
ret
outs
fbld
in
mov
adc
jb
test
add
adc
ret
shr
sbb
lea
ja
fs
fmul
push
movs
cmp
cmp
jmp
cmp
xchg
inc
inc
scas
cmp
cmps
sub
repz
push
aas
nop
cmps
jp
int
fimul
lds
sub
je
dec
pop
jmp
jnp
rcr
sbb
(bad)
xchg
adc
repz
icebp
sbb
xchg
jg
sub
cmp
in
mov
mov
xchg
and
ror
pop
mov
enter
xchg
sub
cmp
dec
imul
fcmovne
pop
push
fidivr
xchg
pushf
test
aam
aas
cmc
shl
sbb
and
in
ins
jge
ficom
scas
mov
inc
sbb
or
jne
les
adc
pop
outs
sahf
xor
xor
xchg
or
jmp
test
test
pop
pop
pop
movs
das
xchg
mov
frstor
push
jb
push
or
sahf
mov
dec
adc
movs
mov
fstp
push
aas
cmp
loop
jae
mov
cwde
test
ret
mov
inc
test
jle
dec
sub
xchg
mov
pop
jo
lds
jne
or
pop
jns
add
fsubr
or
rcl
xor
or
xor
or
mov
cmp
cld
add
inc
jne
and
dec
retf
sti
add
fistp
icebp
push
mov
fstp
jns
add
test
retf
pop
outs
pusha
push
jnp
fstp
xchg
stos
rol
retf
rcl
mov
cmps
dec
aaa
out
int
popf
scas
int
or
je
or
and
xchg
mov
fwait
bound
das
xor
jmp
xor
lea
inc
dec
nop
fld
ffreep
loopne
sub
das
jb
cmps
loope
(bad)
cmp
cmovbe
xchg
add
inc
scas
loopne
jmp
fidivr
pop
std
adc
mov
out
jnp
dec
rcl
xchg
dec
mov
imul
push
fldenv
shl
clc
pop
inc
sub
sub
es
jns
xchg
(bad)
pop
or
rcl
pop
outs
pop
call
imul
pop
sbb
cli
loopne
sar
cld
push
xchg
adc
outs
icebp
inc
(bad)
shr
ja
xchg
arpl
rcl
sub
(bad)
out
repnz
xor
lods
and
into
aad
out
lock
adc
(bad)
mov
push
out
enter
sub
lahf
mov
jp
in
jo
ja
add
das
xor
pushf
mov
mov
push
sbb
repnz
mov
xchg
icebp
scas
pop
inc
and
sbb
sub
push
sbb
ret
jmp
clc
adc
and
push
pop
cmps
sbb
mov
pop
mov
rol
dec
push
bound
inc
mov
mul
ds
iret
jae
pushf
cmps
(bad)
das
(bad)
movs
aaa
movs
and
push
push
loopne
and
inc
pushf
popf
jecxz
jo
and
xchg
jne
push
movs
cmp
mov
cmps
xchg
xchg
or
sbb
jns
add
aas
mov
push
pushf
xor
test
outs
xor
mov
add
mov
sbb
jo
ror
sbb
test
fs
nop
push
or
aaa
call
cld
in
cmp
pop
push
movs
jae
mov
repz
movs
sbb
mov
or
ficomp
cwde
fwait
push
adc
in
retf
sub
daa
jge
sub
xchg
enter
pusha
into
sub
xchg
iret
xlat
mov
vmread
arpl
sub
jmp
push
cmc
loop
cmp
mov
mov
add
test
xor
xchg
(bad)
xchg
pop
pop
mul
push
jbe
mov
fsubrp
push
enter
in
mov
push
repz
sub
js
test
cmp
or
fiadd
jns
div
cdq
lock
int3
shr
hlt
pop
mov
adc
inc
leave
xchg
hlt
das
in
inc
pop
imul
inc
ins
jecxz
or
mov
mov
push
and
(bad)
loopne
xchg
and
ja
(bad)
xchg
cmp
mov
dec
lahf
les
or
sbb
jae
fdiv
pusha
add
imul
add
jmp
sbb
jns
dec
or
popf
iret
adc
sahf
out
mov
push
into
mov
and
pop
(bad)
iret
nop
jnp
mov
addr16
pop
aam
test
mov
inc
lods
aad
sub
fwait
mov
hlt
jmp
inc
ret
pop
mov
gs
or
test
mov
lahf
call
enter
es
sbb
sbb
fs
pop
pop
ret
jbe
mov
push
xchg
lahf
out
fld
pop
sub
mov
cmp
test
fist
sbb
xchg
mov
or
mov
inc
test
ret
pop
mov
ins
repz
xlat
sub
popa
je
push
test
sbb
pop
mov
pop
int
mov
shr
fsubr
outs
push
cmc
jmp
mov
sbb
pop
sbb
xchg
ds
and
xchg
test
les
mov
xchg
dec
ror
jecxz
jae
push
in
pop
cmp
inc
nop
xchg
add
pop
and
or
fisubr
lock
dec
cld
(bad)
test
aad
xor
rcl
pop
dec
mov
loope
pop
jno
loope
rol
push
lods
xchg
jle
jle
pop
mov
jle
dec
and
adc
loopne
in
mov
add
and
xor
stos
xor
fs
lods
sbb
icebp
push
sub
fcom
push
fs
std
aas
xchg
pop
cmp
push
jns
push
xchg
sbb
adc
xor
mov
push
and
inc
cli
or
or
jl
sbb
loopne
shr
sbb
jg
xchg
ja
inc
pop
pop
jl
jo
dec
mov
sbb
add
pop
xchg
int3
jg
push
jnp
mov
pop
add
jb
mov
and
mov
pop
sub
cs
mov
test
mov
xor
sbb
jl
(bad)
ins
cmp
push
sbb
pop
sbb
pop
jb
jae
xor
bound
pop
shr
add
nop
in
mov
adc
faddp
add
push
cld
test
ja
xchg
add
jae
jg
jge
or
dec
cmp
cmc
les
mov
pop
retf
test
xchg
ret
mov
mov
cmp
lods
addr16
sbb
mov
xor
je
int3
(bad)
retf
inc
xchg
pop
fidiv
mov
not
aas
ret
call
fwait
aas
sub
popa
sub
(bad)
outs
cs
mov
cmp
scas
fist
xlat
out
std
and
sti
cmp
or
push
bound
fisub
fs
inc
or
out
test
push
pop
mov
lds
push
gs
out
aam
in
adc
mov
pop
cli
pop
neg
rcr
mov
jns
and
shl
inc
sub
and
into
stc
push
nop
rdmsr
imul
lahf
mov
xchg
fadd
mov
(bad)
shl
cmps
xor
add
push
mov
stos
and
into
jg
dec
int
popa
mov
int3
sub
mov
les
in
mov
inc
jns
retf
icebp
dec
cmp
pop
je
(bad)
push
inc
or
sbb
mov
into
push
mov
ins
push
test
inc
jle
or
xchg
and
(bad)
jno
xor
adc
test
aam
sub
je
and
sub
cdq
rcl
add
lods
in
retf
adc
stc
push
mov
xchg
xchg
mov
scas
shr
arpl
fmul
inc
mov
dec
call
cmps
xchg
cmc
xor
in
xchg
sbb
jmp
cmp
lods
push
test
pusha
mov
inc
sbb
jne
push
or
mov
mov
hlt
hlt
xchg
mov
out
ins
lods
out
pop
dec
lods
mov
push
and
cwde
adc
adc
mov
popa
dec
cli
std
adc
icebp
sbb
mov
add
sub
addr16
repnz
inc
adc
sbb
stos
cmp
gs
mov
sub
or
sub
cmps
(bad)
xor
or
xchg
cmp
cmp
sbb
or
and
aas
neg
xor
es
mov
pop
test
cs
leave
fs
fistp
or
xchg
and
les
inc
pusha
lods
test
xor
dec
test
cmp
ins
call
push
les
mov
cmp
cmp
dec
push
rcr
std
mov
pop
movs
jo
mov
jo
jbe
(bad)
sbb
ins
scas
mov
movs
fs
cmp
cmp
pop
out
jne
movs
dec
in
inc
arpl
loope
cmps
les
xchg
mov
cmc
or
dec
mov
sub
shl
popa
rcl
or
lods
lods
sahf
in
mov
outs
sbb
push
movs
cmp
call
adc
xor
jno
dec
add
xor
jp
ficomp
cmp
mov
cmp
inc
push
xor
aam
mov
mov
adc
fwait
mov
adc
pushf
ins
sub
addr16
jg
arpl
mov
outs
mov
mov
stos
stos
lods
aas
jl
add
mov
out
dec
pop
and
sub
bound
mov
(bad)
cli
pop
loope
jns
sbb
cmp
pushf
arpl
mov
or
es
cwde
push
adc
sub
fld
fs
stos
loop
iret
pop
aad
dec
push
es
inc
adc
ds
mov
ss
mov
test
adc
push
stos
dec
lahf
fiadd
jns
std
movs
rol
retf
lahf
retf
test
mov
mov
movs
sub
dec
or
adc
vmread
shl
(bad)
dec
sti
dec
hlt
lds
xor
scas
mul
(bad)
and
scas
push
fild
xlat
sub
push
mov
push
push
mov
mov
clc
sbb
and
int
shr
mov
adc
rcl
adc
out
jle
add
pop
scas
cwde
add
jle
lds
cmp
or
xor
dec
daa
xlat
mov
mov
jl
inc
(bad)
out
push
push
fisttp
stos
or
xchg
mov
daa
inc
xchg
xchg
inc
mov
mov
inc
ret
cmp
jbe
cmp
jecxz
inc
xchg
mov
dec
or
add
mov
dec
addr16
and
dec
(bad)
repz
push
add
mov
test
lahf
dec
cmps
sub
add
fcom
adc
pop
lods
or
das
mov
lds
popa
stos
adc
(bad)
out
xchg
arpl
mov
ins
lods
add
xor
xchg
mov
mov
jae
movs
mov
ins
fmul
dec
movs
and
xchg
iret
scas
push
stos
in
aam
les
ficom
jg
sub
adc
jno
mov
aaa
fisttp
std
movs
mov
pop
sbb
mov
iret
dec
ror
(bad)
mov
mov
inc
nop
add
dec
sahf
or
push
mov
test
(bad)
fld
iret
stos
cmps
(bad)
lock
jp
aam
fsub
add
enter
add
sub
push
mov
mov
xchg
mov
ins
and
xor
cmps
xor
mov
mov
adc
xchg
pop
test
inc
aaa
mov
iret
xchg
add
data16
xchg
in
add
aam
pop
adc
and
shl
(bad)
and
test
fadd
stc
clc
sub
push
adc
inc
scas
stos
js
rcl
fmul
enter
or
cmc
fs
sbb
and
dec
retf
or
ds
pop
(bad)
add
jecxz
clc
into
adc
int3
adc
cmps
xor
add
enter
lea
repz
out
pop
retf
push
icebp
ret
jb
xor
inc
jl
pop
sbb
mov
cs
hlt
mov
mov
fwait
popf
cmp
imul
cli
out
or
fcom
adc
adc
shr
sbb
in
bound
xchg
fidivr
shl
add
xlat
aad
xor
ret
jecxz
rcr
and
inc
sti
imul
mov
pop
jl
cmps
ret
cwde
xchg
xor
jmp
mov
cmc
mov
pop
dec
aas
(bad)
ficomp
jecxz
test
rcl
jp
pop
mov
sbb
out
aas
mov
call
das
xor
jmp
or
dec
mov
pop
xor
mov
xor
cmc
ret
icebp
mov
lock
mov
in
stos
ret
sub
pusha
cmp
lea
inc
or
ss
mov
lock
mov
mov
sbb
loop
arpl
and
aad
push
or
jle
mov
add
add
and
je
out
jmp
jno
mov
rcr
mov
jge
jns
movs
div
out
push
adc
or
mov
jno
pop
fst
les
jecxz
cwde
aam
mov
sub
(bad)
pusha
or
inc
retf
pop
xlat
ins
mov
gs
rol
sub
pop
ret
xor
xchg
fsubr
inc
mov
inc
push
aaa
ins
or
jmp
fild
push
dec
fmul
push
in
test
push
mov
xor
pushf
inc
cs
pop
mov
pop
std
push
aas
push
or
leave
(bad)
mov
and
aad
pop
mov
add
mov
push
lea
aam
call
xchg
pop
or
xchg
movs
std
test
sub
jecxz
mov
cmps
jns
jmp
in
xlat
ret
mov
mov
es
cwde
push
mov
mov
imul
xor
std
pop
pop
cmp
pop
xchg
scas
inc
iret
and
dec
xlat
push
out
loopne
(bad)
jge
pop
mov
adc
leave
loope
ja
adc
pop
mov
int3
xor
out
jbe
sti
imul
jae
inc
pop
sub
jle
fidivr
jle
mov
inc
shl
aad
cmc
ins
mov
dec
xchg
jb
xchg
cdq
jns
pop
imul
cld
lds
dec
push
or
xchg
ret
jg
aaa
sub
jl
scas
xor
cli
push
adc
les
outs
scas
iret
sbb
pop
in
bound
sbb
repnz
call
cdq
and
or
(bad)
push
test
or
les
shl
inc
add
xchg
sub
seto
ds
cwde
cmp
into
pop
int
xchg
stos
bound
push
push
cmps
dec
int3
pop
je
push
cmps
cs
sbb
sbb
mov
out
scas
(bad)
out
iret
inc
sub
bound
inc
sbb
push
mov
iret
cmp
xor
mov
sbb
push
in
movhps
lahf
int
movs
ins
sub
push
jo
iret
out
lds
xchg
push
dec
ins
mov
sub
scas
and
icebp
and
sub
out
xchg
sti
mov
xor
add
loopne
or
fstp
mov
jg
mov
shl
lds
mov
in
cmp
jp
test
(bad)
mov
test
imul
inc
and
mov
xchg
idiv
push
cmps
(bad)
(bad)
xlat
idiv
shl
pop
rcr
pusha
cmp
jo
aam
outs
dec
jnp
ret
in
push
cmp
call
mov
pop
xor
test
(bad)
xor
mov
js
stos
xchg
loope
(bad)
mov
scas
lods
sbb
stos
call
and
in
js
mov
bound
into
inc
mov
rcl
mov
cmp
sbb
pop
pusha
popf
jns
pop
xchg
and
add
adc
sub
js
push
and
sbb
adc
je
add
and
stos
(bad)
imul
ins
dec
mov
and
xor
jle
and
jg
pop
addr16
fwait
push
jno
mov
pop
out
pop
add
cmp
out
mov
jb
cmp
push
fucomp
(bad)
movs
gs
cmp
pop
xlat
addr16
xchg
dec
and
push
iret
push
jge
xchg
push
rep
or
mov
les
movs
push
adc
xchg
retf
mov
fs
pop
popa
jne
push
rcl
movs
leave
test
pusha
pop
mov
pop
push
xchg
sti
jns
sub
xchg
inc
lock
jo
push
xchg
add
lods
dec
pop
ret
sub
dec
jns
and
sar
inc
push
fld
sub
fnstenv
pop
rcl
fcomp
sbb
or
je
jecxz
outs
push
mov
sub
dec
das
jmp
dec
test
jne
push
fwait
cmps
call
jg
inc
(bad)
or
call
jl
mov
outs
js
repnz
fiadd
popf
out
cmps
in
dec
sbb
jle
cmc
loop
sub
repz
lea
mov
(bad)
hlt
call
lea
repnz
and
mov
mov
imul
adc
lea
mov
or
imul
sub
lea
pop
dec
adc
lds
pop
adc
pop
sbb
and
aas
jl
dec
scas
mov
adc
xor
dec
fwait
jp
(bad)
lods
sar
xor
daa
push
(bad)
mov
pop
cmp
nop
sbb
jecxz
scas
(bad)
mov
ret
pop
push
imul
ret
(bad)
xchg
outs
das
push
xor
call
mov
adc
dec
xor
and
mov
xor
mov
js
sub
neg
repnz
xchg
fimul
mov
pop
daa
jecxz
sbb
cmp
or
mov
jnp
out
cld
pop
sbb
clc
js
jae
mov
cmp
call
int
out
sahf
and
ret
sbb
repnz
ins
loop
cmps
mov
test
jnp
lock
sub
inc
pop
rcl
cmp
leave
aas
cmp
mov
aam
les
lods
out
hlt
fisub
outs
test
pop
push
loope
sar
fst
and
pop
cdq
call
fadd
out
out
mov
push
retf
popf
add
pop
clc
fnstenv
inc
test
lods
adc
jo
push
test
loop
sbb
jge
pop
arpl
in
ret
int3
pusha
cld
xchg
ret
push
add
mov
or
inc
mov
add
cli
movs
mov
in
ret
stos
lods
jae
inc
scas
(bad)
mov
popf
and
sbb
inc
mov
addr16
jp
sub
int
repz
test
retf
cmp
cmp
ins
sbb
jno
mov
add
pop
mov
test
ror
mov
(bad)
fcomp
mov
mov
arpl
mov
xor
xor
dec
aam
bound
ror
lods
in
int3
jge
pop
dec
adc
stos
ins
fnstenv
inc
fimul
sbb
xchg
and
or
mov
arpl
sbb
sub
xchg
dec
jecxz
daa
ss
push
xor
inc
(bad)
push
push
sbb
sar
cmp
fcom
fcom
arpl
and
hlt
push
pop
mov
iret
adc
xor
mov
sahf
sbb
xor
fistp
inc
add
cmp
push
mov
clc
add
mov
jp
mov
bound
xchg
or
xchg
sub
rol
sbb
sub
lahf
cmps
lods
cld
dec
adc
pop
(bad)
pop
xchg
mov
cld
es
rcl
gs
rcl
mov
ficom
dec
push
push
mov
jno
imul
xchg
jmp
or
mov
cdq
test
js
mov
and
push
inc
pop
ficomp
in
es
xor
out
inc
sub
jne
call
not
call
dec
mov
push
add
das
js
xchg
xchg
pushf
sbb
repnz
dec
push
stc
loop
movs
jns
jle
sbb
push
nop
bound
stos
or
ficom
(bad)
jmp
jp
sub
nop
jne
inc
scas
inc
fimul
retf
cmp
pop
dec
call
out
mov
cmp
xchg
mov
icebp
daa
push
mov
pop
push
ret
xor
mov
pop
(bad)
mov
in
adc
ret
sahf
sub
inc
mov
cmp
data16
sub
in
leave
mov
lds
aas
mov
pop
xchg
jl
xchg
sub
data16
movs
jecxz
sahf
pop
mov
icebp
repnz
xor
bound
clc
inc
mov
rcr
cld
fsub
es
fs
js
popf
fs
rol
movs
movs
mov
push
adc
mov
rcr
out
pop
jb
xlat
es
movs
or
inc
repz
mov
cli
lods
in
ja
sub
sbb
stos
rcl
dec
fimul
jnp
mov
jnp
pop
fmul
cmp
cwde
movs
and
jecxz
add
inc
sbb
out
cli
or
xor
dec
adc
xchg
bound
imul
push
imul
pop
mov
adc
mov
(bad)
fimul
inc
push
adc
or
and
stos
mov
dec
int
je
not
mov
or
(bad)
call
movs
movs
push
and
push
mov
ins
out
fldenv
dec
aam
std
or
ret
push
lea
or
fwait
in
push
xor
ins
xchg
or
sbb
inc
inc
or
addr16
add
ja
xchg
inc
dec
pop
fcomp
aas
ja
pushf
jbe
ds
mov
mov
pop
repz
fstp
outs
popa
adc
aaa
(bad)
pop
dec
and
(bad)
movs
lods
ret
mov
ret
in
outs
mov
pop
mov
(bad)
add
ss
(bad)
iret
push
loop
inc
cmp
add
sti
cld
popf
and
xor
test
mov
adc
add
(bad)
lds
jge
dec
mov
arpl
adc
sub
pop
adc
rol
mov
dec
test
shl
adc
mov
push
mov
jle
sub
push
in
mov
mov
inc
icebp
add
loop
xchg
test
jns
sbb
adc
iret
inc
retf
fcomp
rcl
inc
fs
mov
mov
addr16
sbb
movs
lock
fdiv
adc
popa
lods
fs
mov
or
cmp
or
adc
or
sbb
and
inc
push
in
cdq
dec
icebp
ror
sbb
fndisi(8087
jle
popa
adc
ret
out
mov
mov
pop
cmp
mov
das
add
xchg
jl
mov
jbe
push
cld
adc
popa
inc
jmp
loopne
cmp
xor
mov
int3
sbb
pop
add
adc
es
or
pop
lahf
add
push
movs
push
xchg
xor
dec
test
push
(bad)
ds
and
mov
jo
mov
cmp
stos
sbb
out
cmp
lods
lahf
cmp
push
dec
ret
pop
xchg
aam
inc
push
push
push
jp
mov
pop
dec
iret
cmps
in
mov
sbb
push
mov
js
inc
loopne
inc
sub
es
push
stos
lahf
inc
or
in
std
stos
data16
inc
add
pop
jbe
mov
dec
dec
jo
xor
or
lods
adc
xor
or
sahf
sahf
aaa
scas
xchg
ffree
sbb
mov
lahf
pop
cmp
mov
add
jecxz
or
shrd
add
sub
xchg
adc
(bad)
fsubr
adc
sti
sbb
aas
cmp
pop
stc
mov
inc
or
dec
ja
push
xchg
pop
repz
rol
jnp
push
pop
hlt
cs
scas
test
xchg
retf
scas
ret
loop
scas
and
data16
push
into
or
pop
push
mov
es
imul
mov
hlt
loop
dec
xchg
pop
sbb
sub
lods
test
sub
sbb
xlat
cmps
sub
or
shl
and
ds
repz
leave
ja
mov
data16
mov
fs
xchg
fdiv
test
dec
sub
pushf
int3
shl
fstp
sub
fisubr
dec
mov
add
mov
or
jnp
test
push
repz
movs
pop
jno
stos
arpl
add
ss
mov
jecxz
sbb
lock
shl
movs
loope
int
fld
popf
xor
dec
mov
popf
mov
js
ja
and
retf
cmp
pop
lock
je
or
xor
sbb
push
inc
scas
cmps
je
int
pop
dec
mov
sbb
sub
add
lea
scas
popa
ds
pusha
adc
(bad)
retf
push
inc
mov
loop
ja
cmps
dec
cmp
jge
gs
mov
mov
loop
cli
pop
jbe
push
xchg
push
rcr
cmp
lock
cli
movs
fdiv
dec
jge
lds
mov
out
pop
sub
pop
lea
int
int
pop
lds
(bad)
scas
nop
push
add
gs
sbb
mov
cmp
mov
mov
sbb
das
xchg
mov
(bad)
ds
scas
neg
sub
outs
iret
inc
dec
inc
mov
jno
jnp
xchg
(bad)
add
cs
inc
bound
out
dec
in
jno
nop
xchg
loope
and
adc
outs
jg
mov
aaa
fmul
xor
mov
add
sub
pushf
or
adc
sbb
imul
cmp
push
movs
and
jb
jae
xchg
daa
mov
fnsave
out
fsub
imul
lea
test
(bad)
cli
pop
out
mov
rcl
push
mov
movs
sahf
(bad)
mov
or
iret
or
aad
lea
mov
enter
pop
jle
ins
and
pop
push
sub
fisttp
je
cmp
push
adc
(bad)
pop
push
fidivr
mov
daa
jl
out
mov
push
jl
dec
xor
mov
loope
int
pop
or
pop
inc
bswap
jmp
xchg
mov
test
(bad)
shr
pop
in
push
data16
inc
or
mov
add
pop
jno
retf
in
adc
movs
pop
retf
std
pusha
pop
pop
out
mov
retf
(bad)
fisub
mov
xchg
mov
or
cmp
push
mov
jecxz
lds
mov
xor
cmc
rcl
call
inc
cwde
imul
pop
int3
in
adc
and
ret
jbe
mov
ja
lds
mov
ret
add
dec
loop
mov
sub
mov
scas
or
jbe
test
mov
ins
or
and
imul
xlat
sbb
inc
push
or
push
xor
aaa
cmc
add
pop
or
fsubr
dec
jne
mov
or
icebp
fwait
adc
(bad)
clc
xor
jmp
call
out
jo
fstp
or
in
lahf
lahf
pop
add
sub
ret
push
cdq
test
sbb
(bad)
xor
cdq
xchg
popf
adc
sbb
pushw
lds
pop
addr16
jg
ffreep
in
jns
(bad)
jb
pop
inc
pushf
call
ja
jbe
neg
mov
push
sar
inc
jp
pop
xchg
hlt
loop
and
push
shl
loopne
adc
shl
movs
jge
lock
mov
sti
sbb
idiv
addr16
in
push
xor
sbb
cmps
mov
add
(bad)
sahf
std
ror
pop
xchg
test
pop
and
or
pop
mov
fisubr
fsub
in
push
jo
jbe
pop
hlt
call
je
push
out
mov
cmp
push
ins
push
ds
nop
xor
inc
xor
(bad)
or
mov
test
bound
push
sub
xchg
popa
js
aas
mov
and
mov
clc
popf
or
xor
xor
xor
push
sahf
mov
mul
jle
ins
mov
xor
push
adc
test
push
xor
cmp
jnp
jl
ss
shr
clc
sti
dec
js
xor
rcr
imul
or
and
mov
push
jnp
and
or
jae
mov
in
and
dec
pop
fld
push
fild
out
into
inc
dec
dec
dec
test
or
retf
cmp
jp
mov
aad
hlt
inc
pop
ja
loop
int3
push
xlat
mov
loopne
test
in
pop
pop
xor
jo
cdq
int
ret
inc
xchg
stos
imul
push
imul
jne
mov
clc
adc
nop
sbb
in
test
mov
pop
ds
ds
inc
xor
jecxz
in
jecxz
(bad)
test
cmp
not
in
lods
scas
sub
stc
ins
mov
xor
and
xchg
sbb
push
into
and
dec
sbb
cmp
sahf
jne
adc
aas
or
mov
test
sbb
gs
mov
mov
inc
and
push
sti
xor
aas
out
xchg
icebp
test
ins
out
push
stc
mov
lock
test
mov
hlt
aam
xchg
jmp
bound
jg
and
daa
popa
dec
and
cwde
cmp
jo
push
push
into
jmp
iret
mov
inc
push
dec
mov
push
and
xlat
cmps
fild
push
dec
sub
loope
fimul
dec
mov
and
in
sbb
lds
mov
xor
dec
pop
loope
jmp
mov
js
cli
mov
cmp
and
outs
jno
mov
sbb
fstp
lods
je
or
test
loopne
sbb
jnp
push
pop
mov
jmp
mov
adc
mov
hlt
push
sbb
lahf
out
dec
test
and
enter
and
inc
pop
jb
sub
xchg
sbb
test
jb
jne
sub
cmp
addr16
add
daa
add
mov
cmp
push
test
sub
movs
jo
or
add
pop
in
sbb
fisubr
mov
sbb
sahf
imul
int
xchg
cdq
xchg
mov
jno
aas
push
das
movs
adc
mov
lea
dec
enter
es
in
jo
cmps
(bad)
sub
xor
out
adc
movs
sub
push
pusha
add
xchg
and
jb
cmp
cmp
sub
inc
lods
es
jae
inc
call
lods
aaa
daa
or
bound
mov
sar
in
xchg
jle
test
and
sub
jecxz
jo
mov
and
xchg
int3
inc
jl
jecxz
das
icebp
mov
sahf
pop
das
lock
in
leave
add
das
cld
ss
(bad)
sbb
add
call
xor
or
jno
dec
lds
ret
jl
sbb
pop
shr
dec
and
jns
jb
mov
sub
and
movs
pop
ds
repz
fcomp
xchg
jb
rcr
neg
inc
shr
xchg
and
cmc
addr16
mov
add
cld
sub
lock
bound
arpl
or
mov
mov
jb
enter
clc
ins
test
mov
sub
icebp
adc
adc
loope
adc
aam
xor
repnz
dec
inc
movs
aas
out
mov
dec
out
cld
add
(bad)
adc
lea
and
dec
cmp
test
push
push
movs
adc
clc
js
dec
jbe
jae
pop
or
xor
sub
jecxz
xchg
mov
dec
lea
mov
add
push
call
scas
mov
ss
xor
cwde
in
inc
or
js
and
pushf
hlt
out
cmp
pushf
andps
push
int
test
pop
out
sbb
jg
imul
in
cmps
push
popa
fnstenv
lods
cdq
sub
xchg
push
and
ficom
mov
dec
and
or
jns
mov
xor
and
pusha
cmp
cs
mov
jo
pop
jp
clc
lods
ins
(bad)
sbb
inc
dec
inc
xchg
sbb
ret
cmc
inc
pop
lods
loop
jmp
fxch
outs
cmp
dec
ins
cld
xchg
iret
fnsave
and
sub
adc
xor
adc
and
test
iret
fs
retfw
adc
xchg
pusha
adc
int3
jns
jmp
and
push
and
mov
xor
jnp
cdq
and
stos
shr
mov
pop
push
mov
cmp
cmp
iret
sbb
mov
(bad)
xchg
adc
data16
adc
imul
daa
xchg
das
sbb
jb
mov
sbb
push
movs
xor
jnp
div
xchg
and
inc
loope
fcom
mov
xlat
dec
cmc
mov
mov
outs
repnz
sub
mov
sbb
aam
cmps
cs
xchg
ds
mov
mov
cmp
faddp
test
imul
retf
(bad)
je
mul
shl
mov
out
cmp
jg
movs
xor
jns
add
out
in
in
bts
mov
xor
mov
sbb
pop
ins
push
sub
bound
mov
sub
and
aam
jae
pop
lea
cmp
or
mov
xchg
shl
jp
mov
sub
imul
and
clc
dec
xor
sub
sub
cmp
rol
mov
in
dec
cmc
aaa
bound
(bad)
das
mov
sbb
(bad)
call
pop
(bad)
mov
js
pusha
adc
fsub
fwait
outs
popa
fnstcw
mov
mov
lods
mov
inc
or
dec
test
adc
ds
xor
shl
mov
add
cmp
sbb
(bad)
ss
pop
jno
adc
add
out
xor
xor
data16
js
sub
in
jnp
xchg
addr16
xchg
push
jno
mov
push
mov
jno
cwde
cdq
js
out
outs
cmps
xchg
loopne
inc
push
(bad)
fcom
and
xor
sub
mov
pop
cld
and
test
push
sbb
movs
scas
(bad)
and
nop
inc
cmp
pop
aad
in
dec
mov
ret
or
jmp
adc
daa
test
cmp
inc
mul
icebp
std
int3
fimul
cli
mov
popf
push
ret
xor
mov
jbe
add
pusha
outs
jne
adc
movs
push
push
adc
adc
aas
into
call
fnstsw
mov
pop
dec
pop
pand
out
mov
movs
or
pop
cmp
dec
out
mov
jmp
out
pop
test
mov
out
test
add
call
jbe
adc
loop
test
sub
cli
push
mov
iret
out
pop
test
mov
cld
leave
dec
xchg
scas
shl
loopne
jns
adc
adc
adc
rol
xor
inc
lods
adc
pop
pop
fisttp
mov
and
fsub
mov
push
outs
test
scas
retf
lock
ret
adc
mov
jne
jecxz
(bad)
xchg
cmp
lds
mov
jge
xchg
pusha
xor
add
in
mov
pop
aam
movs
pop
sub
xor
xor
ret
xchg
movs
imul
pop
jle
fsubr
cs
out
jns
cmp
and
movs
stc
jmp
jmp
daa
push
adc
test
push
cmp
sbb
inc
xchg
and
and
ins
hlt
lahf
mov
or
mov
test
in
xor
loope
cmp
js
push
and
das
xor
clc
imul
lahf
retf
aas
dec
imul
jp
leave
mov
mov
dec
cmp
les
sbb
lock
or
test
ror
push
inc
jmp
pop
fs
mov
xchg
out
mov
arpl
in
call
sub
shl
dec
in
out
or
jmp
cmp
int
jecxz
adc
jmp
sub
or
adc
ret
(bad)
pusha
or
mov
sar
pop
fsubr
loope
or
lea
leave
xchg
push
xor
or
mov
fstp
out
add
(bad)
or
or
test
jo
ins
mov
sbb
xchg
dec
and
xchg
stos
adc
imul
and
int3
int
inc
jo
fldlg2
mov
push
mov
adc
dec
aas
gs
fist
call
push
popf
shr
and
xor
mov
push
xchg
jo
mov
jp
sbb
push
fs
bnd
xor
sbb
cmc
mov
in
fcmovbe
(bad)
mov
mov
icebp
test
cld
jmp
cs
cmp
or
fistp
cmp
mov
and
jg
cmp
in
addr16
loop
pop
ret
or
push
stos
cs
dec
inc
sub
adc
push
xlat
ja
aam
push
cmp
movs
jb
push
retf
pop
out
inc
fdiv
cmp
(bad)
cs
and
dec
cmps
int
sti
jecxz
(bad)
push
or
sahf
les
cmp
jecxz
push
idiv
fisttp
jmp
or
(bad)
daa
sub
and
enter
inc
movaps
aas
or
jmp
jmp
sub
ss
enter
sahf
xor
shr
mov
jne
inc
les
out
add
or
gs
push
outs
fsub
jae
jb
sahf
lods
cwde
inc
push
shl
mov
call
dec
rcl
sbb
jp
mov
mov
ja
mov
sbb
inc
sub
rcl
xchg
or
jmp
fs
sub
mov
mov
dec
adc
das
mov
adc
dec
out
mov
adc
push
push
pushf
sub
data16
mov
add
ins
retf
(bad)
pushf
(bad)
loop
jl
pop
mov
mov
mov
retf
cmps
cmc
inc
aam
and
and
imul
cmp
call
sub
movs
retf
sbb
mov
outs
jp
cmp
mov
stc
jo
leave
sub
in
jns
pop
xchg
push
xchg
bound
xchg
test
sub
and
mov
mov
xor
mov
inc
or
test
mov
jne
push
jle
pop
push
or
scas
dec
sub
jmp
adc
movs
dec
jne
or
push
inc
jnp
test
mov
adc
or
aaa
fisub
icebp
sbb
mov
mov
pop
jo
mov
dec
das
or
mov
idiv
js
fwait
adc
(bad)
dec
sbb
cmp
pop
leave
cmp
mov
add
sub
ss
ss
jle
or
into
shl
sbb
push
mov
xchg
sub
imul
fnop
lahf
loope
adc
push
test
sub
imul
jle
xor
es
movs
not
jle
lahf
test
ficomp
sub
les
aaa
or
xchg
int
dec
fsub
in
xor
daa
out
mov
aaa
das
clc
jns
xchg
dec
xchg
and
aaa
xchg
jmp
scas
fucomi
lods
xchg
add
data16
lea
xchg
pop
pop
icebp
scas
fwait
sub
mov
(bad)
or
sub
xchg
cmp
outs
jns
pushf
gs
out
pop
stc
jp
adc
adc
pusha
mov
xlat
fadd
nop
imul
sahf
imul
xor
xchg
cmc
repz
push
add
sbb
sahf
lods
adc
cmp
push
(bad)
push
stos
xlat
loope
sbb
sub
jp
outs
test
aaa
sbb
leave
and
pop
or
pop
mov
sti
push
addr16
push
xchg
(bad)
int3
mov
iret
loope
test
xor
inc
mov
mov
retf
outs
dec
jle
lds
mov
push
ret
dec
out
cdq
(bad)
or
dec
cmps
fsub
push
mov
in
ins
sub
mov
pop
mov
and
pushf
call
shl
mov
xchg
(bad)
std
dec
aad
push
shl
add
add
(bad)
pop
sbb
push
inc
pop
nop
cs
push
xchg
pop
push
test
inc
dec
mov
sbb
adc
lods
in
dec
jg
push
adc
addr16
mov
es
sub
(bad)
lock
sbb
jecxz
dec
cmp
leave
stos
mov
push
sti
je
push
pushf
xchg
jbe
rol
inc
adc
or
mov
imul
or
bound
in
mov
lods
dec
in
sub
push
sbb
mov
mov
dec
jmp
jo
cmp
std
sbb
mov
nop
lock
gs
gs
mov
add
pop
dec
idiv
es
sahf
adc
sbb
aaa
mov
push
xchg
and
pop
push
push
pop
aaa
ss
ffreep
mov
clc
shl
test
movs
adc
aaa
xor
test
in
mov
dec
add
stc
ins
out
ins
dec
repnz
js
push
dec
retf
scas
movs
test
iret
jmp
repz
push
in
fld
push
sbb
and
push
xor
sbb
add
mov
addr16
add
pop
adc
jmp
push
movs
adc
jmp
ja
mov
mov
xor
das
mov
das
out
jmp
sub
mov
int3
jle
call
xor
pop
jl
pusha
pusha
add
xlat
mov
or
lock
cmp
xchg
(bad)
lods
adc
gs
cmp
mov
cmp
retf
jb
cwde
icebp
pop
xor
dec
mov
out
jge
cs
je
adc
mov
icebp
fldcw
inc
jl
sbb
hlt
sub
inc
loop
cmp
int
dec
push
dec
mov
cmp
add
dec
push
cli
pop
aas
cmc
imul
sbb
(bad)
jb
and
pop
mov
gs
dec
test
push
ret
lods
fwait
cmp
cwde
sbb
pushf
and
mov
out
jne
aam
retf
pop
(bad)
(bad)
ret
daa
jbe
out
fst
ret
jb
xchg
jnp
pop
push
aam
mov
adc
push
fcom
pop
stos
mov
pop
jl
mov
or
push
movs
stos
jb
ins
and
pop
jp
movs
sbb
mov
xor
xor
dec
push
idiv
imul
test
or
adc
(bad)
fiadd
dec
xor
aad
xor
xor
xor
pusha
mov
fimul
sub
push
test
xlat
inc
test
loop
sbb
xor
adc
or
jl
and
in
cmps
and
lahf
jno
(bad)
mov
es
test
mov
popf
dec
loope
dec
aad
push
xchg
pop
shr
jp
cs
cmps
fwait
cli
loopne
aam
cmp
pushf
mul
xor
xchg
mov
mov
jle
push
add
hlt
adc
mov
sbb
jl
(bad)
je
sahf
push
adc
movs
out
jne
xor
or
jp
push
jnp
call
int3
add
test
push
popf
mov
xchg
int
movs
lfs
add
imul
inc
push
or
cmp
xchg
mov
or
mov
push
jmp
out
clc
into
mov
jns
repz
lock
icebp
enter
mov
fwait
jo
push
mov
test
sub
dec
jecxz
scas
add
(bad)
pop
neg
mov
xchg
je
pop
jnp
lds
jg
ins
inc
(bad)
jecxz
xchg
xchg
pop
mov
xchg
cs
add
xor
mov
ficomp
sar
push
push
(bad)
and
and
jmp
fcomp
retf
fs
repz
mul
xor
push
cwde
pop
imul
lock
and
retf
jno
stos
xchg
jg
(bad)
leave
xor
(bad)
add
pop
retf
ror
mov
mov
push
jmp
lahf
(bad)
imul
arpl
mov
clc
sub
dec
sub
mov
sbb
push
imul
cmp
sti
mov
fist
pop
jmp
outs
data16
mov
loope
scas
push
mov
xlat
mov
jae
ror
dec
jae
ja
dec
in
bound
and
stc
lds
enter
sub
das
je
popf
sti
mov
mov
inc
jge
fstp
or
imul
sub
inc
aam
aad
movs
iret
adc
(bad)
std
cmp
rol
inc
jne
mov
test
fstp
iret
int
hlt
cwde
imul
adc
jns
xchg
or
cmps
push
rol
mov
lods
test
jno
adc
out
cmp
xor
mov
mov
idiv
xchg
push
mov
sbb
cmp
cmp
jno
out
imul
(bad)
pop
in
cmp
out
fmul
ret
scas
cmp
mov
call
adc
in
cmp
repnz
mov
jle
add
inc
push
mov
sub
mov
(bad)
out
fmul
mov
sar
cs
call
mov
(bad)
clc
jle
mov
test
aas
sbb
in
stc
sub
mov
ds
mov
jg
cmp
ins
inc
adc
sub
lock
inc
or
sbb
push
out
inc
arpl
(bad)
shl
fsubr
jae
jecxz
call
pop
push
arpl
test
test
les
dec
adc
push
jne
and
cmp
and
jge
sbb
stos
sub
jne
xor
pop
or
cmp
pop
and
mov
mov
mov
(bad)
cwde
imul
adc
jle
xor
clc
jbe
test
sbb
mov
cdq
xchg
call
add
pop
mov
xor
cmps
pop
inc
iret
push
xchg
std
lock
and
icebp
cmp
push
mov
(bad)
mov
cmp
push
neg
cdq
mov
fstp
stos
or
and
test
mov
mov
mov
push
sbb
and
pop
out
mov
jnp
arpl
or
out
test
std
test
push
int3
cmc
mov
in
mov
fs
mov
ret
xchg
mul
pop
test
mov
cdq
scas
mov
mov
adc
mov
(bad)
push
inc
loop
sbb
rol
lock
daa
sub
pop
lock
cmp
test
push
lods
sbb
push
mov
xlat
js
add
mov
out
mov
inc
jb
aam
xchg
(bad)
daa
and
sub
jno
test
mov
les
js
pop
xchg
xor
mov
sub
push
pushf
jmp
mov
push
jno
pusha
fucomip
mov
mov
push
jb
fisttp
push
jl
leave
xor
add
ds
fs
push
repnz
adc
jecxz
fwait
push
jg
aas
jp
das
dec
hlt
sahf
mov
out
pop
inc
and
push
and
fmul
lahf
cdq
xchg
jp
cmp
cmp
lock
pop
stos
mov
mov
les
cld
ret
sbb
jmp
daa
mov
pop
int
rcl
cwde
mov
jle
sub
retf
pop
mov
fs
in
hlt
cmp
daa
sub
push
mov
shr
call
daa
mov
fmul
cli
push
xor
add
sbb
clc
push
cmp
int3
xchg
mov
stc
mov
call
call
push
mov
jbe
jl
out
push
pop
cwde
inc
mov
imul
mov
popf
xor
push
iret
je
add
sahf
mov
ret
jns
mov
call
jecxz
xor
cmp
adc
mov
sbb
cmp
dec
nop
test
add
mov
cmp
cs
cdq
(bad)
cmp
shl
shl
popa
and
mov
rol
pop
and
or
mov
pop
jecxz
xor
inc
scas
call
ja
fstp
add
pop
int
pop
inc
loopne
movs
(bad)
jnp
stos
mov
adc
fmul
xchg
add
adc
xor
sar
retf
pop
mov
test
out
rcl
xor
pop
retf
ja
xor
jo
dec
addr16
mov
ds
xchg
ja
mov
sbb
jg
rol
stos
sbb
add
(bad)
xchg
add
inc
fmul
or
sub
out
dec
je
mov
ficom
mov
and
sub
cmp
and
adc
ins
pop
jnp
jmp
pusha
retf
mov
jl
cmp
add
dec
sub
cmp
les
imul
sahf
cmp
aaa
ins
add
jbe
cmp
xor
in
lods
fld
mov
jg
jns
push
jmp
xchg
and
jo
xor
sbb
shr
loop
fstp
xchg
icebp
dec
mov
mov
shl
pop
push
mov
push
jl
sub
cwde
cmp
mov
xor
mov
push
xor
outs
sbb
ds
push
mov
and
sbb
shl
sub
sub
add
in
data16
outs
cli
jo
push
push
repnz
push
(bad)
mov
jnp
pop
mov
xchg
sti
lea
pop
(bad)
cmp
fstp
sbb
xchg
mov
ficom
cli
push
push
sub
fisttp
xchg
shl
add
pushf
xor
or
pop
stc
sbb
xchg
sahf
sti
dec
imul
lock
fcomp
cdq
mov
test
stos
pop
mov
and
ror
std
xor
jmp
lock
sub
xor
adc
add
xor
fist
mov
(bad)
pop
out
and
mov
mov
shl
arpl
adc
(bad)
and
dec
mov
inc
jne
loop
leave
sbb
adc
nop
sbb
addr16
popa
test
jle
add
jnp
imul
add
and
mov
inc
repz
or
fiadd
sub
dec
iret
cdq
mov
out
sub
imul
cmc
adc
and
test
das
loop
sub
adc
dec
add
or
xor
lea
or
scas
xchg
out
jg
sub
mov
add
or
xchg
(bad)
adc
inc
add
mov
sbb
ins
push
inc
inc
inc
mov
cwde
xor
mov
pop
in
es
sbb
pop
jb
lahf
popa
jle
mov
lock
jb
inc
mov
mov
ja
in
clc
jo
mov
lds
stos
adc
shl
shl
sub
not
aam
push
mov
mov
mov
pop
leave
pop
ins
ins
popa
enter
sub
inc
in
dec
xchg
cmp
push
pop
idiv
pop
xor
and
arpl
fidiv
xor
sub
mov
sub
sub
(bad)
xlat
sub
rcr
sar
inc
mov
xchg
rol
jnp
jge
pop
js
mov
push
(bad)
cld
cld
(bad)
jp
fsubr
fld
je
cdq
pop
leave
adc
fst
inc
push
jle
mov
(bad)
iret
inc
xor
mov
lods
cmp
pop
sbb
or
mov
(bad)
cmp
push
or
movs
in
leave
fcom
inc
fwait
jnp
shl
sbb
xchg
dec
in
std
cmp
int
in
push
daa
add
nop
jmp
inc
icebp
arpl
dec
push
jg
outs
cmp
rol
cwde
sar
cmp
loopne
pop
jno
rcr
out
into
jns
rol
or
(bad)
lock
(bad)
call
mov
mov
leave
leave
pop
mov
and
cmc
mov
xchg
sbb
xchg
clc
mov
mov
mov
inc
cmp
aam
mov
and
mov
push
mov
ss
inc
stos
loope
jae
jg
mov
cmp
mov
and
adc
and
xchg
sub
loopne
out
xor
icebp
mov
dec
xor
imul
mov
mov
nop
sbb
jl
push
hlt
dec
cmps
int
(bad)
pop
sbb
aaa
push
dec
in
mov
jp
mov
cs
lods
jmp
dec
push
in
outs
(bad)
dec
out
(bad)
fidiv
repz
fbld
fld
fcmovb
lds
in
pushf
cmp
xchg
data16
inc
mov
mov
or
mov
mov
test
cmps
push
push
mov
(bad)
pop
push
stos
add
popf
mov
out
add
or
js
inc
sti
fimul
stos
sbb
ficomp
push
sub
xlat
cwde
cld
pop
xor
and
aas
cmp
fbld
imul
xchg
call
push
scas
lods
and
test
dec
dec
rol
sub
mov
sub
inc
jmp
inc
movs
inc
sbb
stos
jb
xchg
ror
xor
das
out
mov
mov
add
push
pop
xor
jo
icebp
stc
pop
sub
and
shl
mov
push
stos
pop
jp
scas
xchg
cmp
or
inc
jb
ins
mov
sbb
jmp
xor
dec
or
adc
hlt
(bad)
xor
aam
shr
xor
mov
pop
call
cmp
leave
lods
loop
push
or
pop
jns
popa
push
mov
or
(bad)
jmp
or
lds
std
nop
jp
ja
dec
fisub
repnz
push
xor
(bad)
repnz
iret
jmp
inc
lahf
fxch
mov
mov
xchg
cdq
call
lods
mov
jnp
in
imul
adc
repz
outs
sbb
push
movs
stos
mul
add
jnp
jno
cwde
adc
dec
dec
out
add
push
(bad)
sbb
jg
(bad)
je
outs
int3
xchg
daa
or
sub
push
inc
aas
inc
out
xor
rcl
cmp
mov
push
mov
pop
dec
jle
cwde
lock
sbb
fcom
pop
cmp
rol
pop
push
mov
retf
sahf
jo
out
jl
jo
loop
lahf
cmp
pushf
sahf
fistp
ret
mov
cmps
pop
xchg
call
cmp
movs
fwait
retf
enter
aam
out
xchg
jp
push
xlat
xchg
cmps
retf
mov
ret
fcom
test
fwait
push
inc
mov
mov
sub
pop
adc
ret
adc
jns
loop
cmp
outs
adc
mov
mov
in
ror
mov
aad
ins
xchg
cmp
fistp
not
inc
xchg
mov
mov
hlt
iret
mov
arpl
xor
push
cdq
icebp
inc
mov
sbb
out
rol
movs
cmc
rcr
push
(bad)
push
shl
out
and
std
lahf
sub
rcl
xor
mov
je
jp
shl
xor
mov
add
shr
xchg
jb
enter
test
out
mov
int3
ss
cld
sbb
in
call
cwde
pop
inc
lods
xlat
push
sub
inc
loop
imul
cmps
test
add
push
add
ja
inc
das
loopne
or
mov
loope
mov
add
mov
xor
sbb
jmp
es
(bad)
shr
xor
out
ss
inc
mov
cmps
fadd
adc
arpl
sbb
mov
xchg
sbb
test
inc
xchg
pop
mov
or
es
adc
movs
jmp
push
cmp
inc
jle
test
arpl
cwde
adc
ficom
imul
mov
stc
adc
xor
jg
xor
aad
mov
or
pushf
fucomp
jno
jl
shr
data16
pop
lock
push
ret
sbb
and
push
outs
inc
inc
push
pop
lds
(bad)
shl
(bad)
mov
shl
imul
sub
in
push
mov
dec
sub
or
in
cmps
add
lds
movs
sub
add
cmp
daa
lods
push
lds
sub
es
aas
xchg
and
mov
jp
push
sbb
in
cmp
pop
aas
mov
jle
daa
repz
fwait
push
ja
mov
add
xchg
pop
je
mov
shl
arpl
xchg
sub
jns
out
(bad)
vpsadbw
(bad)
xor
dec
leave
jl
jg
test
xor
bound
sub
icebp
sbb
cmp
mov
dec
xchg
loopne
cli
outs
ror
mov
in
inc
dec
jp
cmp
add
jp
std
pop
repz
sbb
push
cli
or
dec
xor
jns
xchg
xchg
xchg
sbb
les
cmp
fistp
rol
and
lahf
push
sub
out
stc
push
call
pop
jno
dec
pop
dec
sbb
mov
(bad)
popf
add
(bad)
or
mov
xchg
pop
(bad)
fdiv
test
ins
lds
cdq
inc
cmp
dec
daa
pop
stc
fcmovnbe
test
cmp
jb
arpl
ins
sahf
ins
bound
addr16
add
(bad)
xor
das
gs
add
clc
jle
jmp
mov
repz
adc
xchg
or
stos
xchg
test
int
mul
mov
in
pop
int3
adc
sub
fcomp
and
mov
scas
cmps
cmps
mov
mov
ret
jb
sbb
(bad)
fxch
out
fidivr
jge
mov
ret
ror
icebp
add
out
mov
and
mov
imul
arpl
stos
sub
fisub
(bad)
aad
loope
inc
push
les
adc
dec
or
dec
ss
call
jge
xlat
je
jp
inc
xchg
test
cmp
mov
sbb
aam
stos
ror
dec
pushf
inc
fisttp
clc
pop
and
arpl
ins
inc
ss
push
push
mov
sysenter
and
push
fdivr
dec
sbb
loop
add
xchg
leave
pop
stos
ret
popa
add
inc
mov
mov
jne
or
movs
mov
scas
xor
clc
in
push
pop
inc
fild
inc
push
push
sbb
jg
imul
mov
inc
or
stos
in
shr
cs
xchg
push
dec
sbb
sbb
dec
rcr
int3
imul
mov
or
dec
int
mov
aaa
neg
dec
movs
std
rcr
adc
hlt
fidiv
mov
dec
aaa
mov
jns
cli
fwait
jns
(bad)
mov
mov
mov
xchg
sub
inc
inc
or
data16
loopne
xchg
aaa
mov
mov
(bad)
fstp
data16
loope
adc
shl
into
jg
pop
sub
mov
and
jge
in
or
fbstp
mov
xchg
inc
imul
mov
add
xchg
les
das
mov
pop
sub
and
fcomp
xchg
cmps
sti
cmp
pop
mov
jg
xchg
adc
lea
shl
or
mov
cli
inc
mov
xchg
sub
mov
icebp
(bad)
dec
ss
cmc
cmp
pop
loope
cmp
stos
inc
inc
adc
loope
fbstp
push
stc
sti
ret
push
sub
loopne
ss
outs
bound
pop
add
ficom
sub
fist
pop
stc
mov
int
jo
jl
call
into
shl
sbb
push
pop
cmp
cli
push
inc
sub
call
dec
sar
outs
outs
inc
xor
push
sub
mov
js
je
mov
pop
popa
pop
adc
fbstp
data16
sbb
sbb
imul
int3
xor
jmp
xchg
fwait
jo
push
fcmovnb
xchg
mov
mov
jno
(bad)
outs
popa
push
push
scas
add
int3
adc
mov
push
pusha
adc
mov
arpl
adc
pop
cmp
and
ret
out
in
into
mov
jmp
ficom
inc
in
out
xchg
xor
inc
call
outs
aam
fwait
stos
inc
fldlg2
jbe
mov
mov
movs
mov
mov
js
dec
cmp
fadd
sub
jbe
cmps
push
adc
loopne
sub
aaa
adc
xor
jno
test
mov
out
cmps
push
lea
mov
sbb
push
add
mov
iret
mov
icebp
and
add
ss
mov
xchg
lock
xchg
xor
xor
xchg
xor
mov
fcomp
cmp
xchg
rol
jecxz
pushf
xchg
mov
cld
icebp
lock
sbb
sub
fs
xchg
and
lahf
push
xchg
popa
movs
pop
test
cmp
test
xchg
out
sub
cmp
popf
and
and
rcl
test
xor
pop
dec
mov
cwde
mov
adc
jb
jecxz
and
sub
lods
(bad)
and
lock
cmps
or
paddsb
cmp
sub
mov
add
mov
dec
cmp
stos
aas
cld
in
push
jp
retf
lods
loop
dec
ret
inc
lock
repz
push
cmp
mov
xchg
in
or
sbb
scas
scas
adc
sub
adc
jns
adc
dec
jbe
rol
inc
inc
enter
add
xchg
jge
cmp
sub
les
xchg
mov
dec
or
(bad)
or
push
stos
dec
add
repz
inc
pop
xchg
cmps
sbb
ror
mov
clc
mov
add
sbb
push
std
mov
loopne
shl
and
mov
in
outs
jecxz
ja
sbb
fs
enter
xlat
test
mov
lahf
fsubr
dec
and
adc
jo
popf
dec
loope
mov
xchg
and
mov
mov
jmp
xchg
cmps
push
js
popf
mov
push
push
jl
cmp
mov
inc
xchg
xchg
fisttp
bound
test
shr
call
sub
cld
into
mov
cmp
dec
jge
mov
xor
rcl
add
and
mov
jbe
es
repnz
jp
fistp
or
hlt
addr16
sub
mov
clc
(bad)
out
sti
inc
sub
xchg
push
jne
inc
cmp
mov
xlat
daa
sub
jl
or
lods
add
(bad)
push
pop
lds
rcr
jmp
aam
shr
out
imul
iret
test
mov
adc
jmp
mov
pop
inc
dec
and
movs
inc
dec
mov
fchs
adc
pop
jo
fcom
inc
cwde
ins
scas
fs
pop
mov
fwait
movs
pop
inc
push
mov
mov
dec
inc
mov
or
cmps
push
jp
out
lahf
pop
dec
jae
ret
sbb
stos
ret
mov
outs
pop
cs
mov
xor
push
and
and
add
or
inc
rol
retf
or
gs
jae
mov
add
int3
enter
dec
pop
lods
dec
jl
fdivr
dec
mov
out
mov
adc
lods
dec
mov
pop
jecxz
stc
mov
add
in
pusha
sar
xchg
adc
sbb
movs
pop
jmp
shl
movs
out
mov
push
xor
call
addr16
test
adc
ss
fistp
lods
and
sbb
imul
fdiv
xchg
cdq
adc
cmp
dec
popa
xchg
inc
mov
add
iret
jne
aad
lds
jae
xchg
or
pusha
int
iret
mov
int3
aaa
ds
arpl
push
mov
ss
jnp
leave
inc
aaa
out
(bad)
arpl
(bad)
jno
jmp
and
mov
fwait
mov
push
ins
std
push
pop
test
xchg
imul
test
pushf
mov
fwait
inc
inc
std
add
inc
pushf
sbb
sub
leave
sbb
ret
mov
jl
test
retf
xchg
cmp
cs
cmps
push
pusha
fcom
fisttp
sbb
into
cmp
xchg
mov
or
push
scas
popf
shl
ss
into
pusha
mov
and
pop
adc
or
dec
mov
pop
cmps
out
inc
xchg
cmp
push
cmp
mov
mov
pop
xor
inc
mov
ins
div
cli
pop
add
sub
das
push
push
jecxz
les
cwde
test
adc
mov
mov
ins
mov
scas
rcl
add
jo
xor
push
fist
mov
push
rol
jge
pop
xchg
(bad)
fldenv
xor
cmp
sub
ja
bound
out
lea
aas
outs
pusha
inc
sbb
mov
mov
mov
call
xchg
sbb
repnz
sub
in
add
cld
pop
pop
into
jp
(bad)
push
push
xor
xchg
sbb
jno
std
and
push
lea
mov
aas
scas
les
jae
lock
mov
sysret
or
push
sub
jmp
and
cmp
test
mov
int
push
xchg
or
fisub
jbe
ret
cld
sti
jl
add
rcr
jo
fild
sti
addr16
mov
adc
cmps
mov
mov
lock
loopne
in
sub
add
xchg
cmp
jmp
scas
dec
fcmove
retf
mov
inc
xor
cmp
bound
jg
sahf
gs
sub
sub
or
xor
js
shl
fisubr
imul
sub
pop
push
retf
sub
leave
pop
gs
push
push
push
or
out
xor
das
jns
inc
mov
dec
or
xlat
cmp
(bad)
dec
cmp
aas
push
jne
push
and
fisubr
cld
sbb
jbe
sbb
test
cmp
les
cmc
std
clc
ds
add
sub
mov
retf
jp
int3
pop
fst
mov
mov
sbb
lahf
inc
test
sbb
movs
xor
pusha
xchg
or
popf
mov
push
mov
or
jnp
push
jb
adc
pop
aam
xchg
cld
push
scas
into
push
jmp
pop
(bad)
mov
adc
and
sub
inc
cmps
sbb
repnz
push
(bad)
jl
inc
dec
leave
push
mov
inc
hlt
sbb
rcl
into
add
fimul
and
sahf
repz
push
pop
test
pop
aad
rol
popf
and
dec
out
dec
lods
jb
push
js
mov
push
sbb
test
lahf
push
or
adc
pop
add
pop
xchg
jnp
xchg
stc
pop
push
inc
xchg
cmps
pop
mov
jns
into
lods
lods
adc
mov
lock
data16
pop
ins
or
jg
fild
inc
mov
out
(bad)
mov
pop
(bad)
pop
scas
jl
sti
xchg
repz
jae
call
sbb
or
aaa
jbe
mov
dec
sbb
jo
test
mov
jne
xor
mov
jge
hlt
push
nop
enter
jb
in
out
das
mov
jae
push
enter
(bad)
dec
movs
adc
lock
jl
out
pop
and
mov
sbb
mov
ret
scas
cmp
pop
jbe
pop
ror
or
mov
outs
pop
(bad)
xchg
jge
mov
mov
sbb
rol
or
ja
and
mov
mov
lock
xchg
inc
lea
loop
adc
mov
call
movs
mov
inc
fisubr
lahf
xlat
scas
pop
adc
sub
int
push
es
pop
cwde
fdiv
sbb
sbb
ins
mov
mov
(bad)
cmp
lahf
and
icebp
dec
pop
push
inc
xchg
and
bnd
jl
mov
sub
or
cmp
sbb
push
scas
and
ret
lods
aad
clc
mov
cdq
outs
adc
(bad)
cmp
xor
pop
fdivr
aad
xchg
jo
clc
movs
adc
cmp
mov
mov
or
mov
call
cs
ins
sbb
rcl
push
push
(bad)
add
cli
bound
test
fbstp
paddq
scas
sti
fldcw
jge
(bad)
mov
pusha
pushf
and
daa
jbe
pusha
inc
and
or
std
mov
push
xchg
push
das
stos
add
cmovp
paddsb
pop
add
jae
clc
into
jg
pop
in
pop
xor
les
jo
jno
cmc
aas
fs
push
jo
icebp
jbe
sub
mov
mov
sbb
aas
mov
iret
das
xchg
pop
nop
fadd
aad
in
mov
aad
fdivr
cmp
pop
push
pop
in
or
imul
(bad)
add
scas
jmp
pop
in
mov
cmp
push
fild
sbb
lods
cmp
jecxz
pop
pop
in
emms
ror
mov
add
out
not
es
add
lods
stos
inc
and
call
add
jg
test
fcomp
test
scas
enter
mov
push
inc
cmps
dec
arpl
xor
sbb
cmp
arpl
dec
pushf
mov
sar
outs
and
jp
sub
rcl
mov
pop
jno
imul
div
or
loop
add
sub
fldl2t
add
cld
sar
ja
mov
inc
ficom
push
jmp
or
test
sti
push
not
jecxz
sar
mov
xchg
sbb
in
fimul
(bad)
imul
add
push
pop
mov
add
loope
adc
out
pop
je
lahf
adc
ins
mov
mov
cmp
les
in
test
mov
push
push
rcr
add
inc
xchg
sub
adc
aad
xor
ins
inc
stc
int3
push
repnz
xchg
jno
or
loopne
mov
dec
cwde
loop
xchg
mov
mov
cmp
and
adc
mov
mov
push
xlat
jne
xchg
ins
mov
sti
or
stc
push
mov
dec
dec
and
fwait
xor
loopne
mul
cmp
lods
push
and
cmps
cmp
xlat
psrld
in
mov
cmp
xchg
and
mov
adc
xchg
pop
inc
lock
inc
and
test
xor
pop
cdq
mov
rcr
loope
in
je
(bad)
cmp
inc
sbb
pop
js
push
pop
iret
neg
mov
dec
pop
push
sar
repz
dec
xchg
in
lds
inc
sbb
loope
ja
fimul
or
pop
ret
and
xor
dec
pop
je
add
dec
mov
repnz
xor
mov
pusha
lea
dec
jg
sub
fdiv
in
bound
(bad)
cmc
aam
dec
clc
inc
mov
ins
dec
lods
sub
dec
or
xor
push
jge
inc
clc
adc
aaa
mov
cmps
and
pop
and
popa
mov
jg
mov
cwde
sahf
mov
outs
and
std
aaa
popf
jl
test
out
xchg
iret
and
fs
mov
jecxz
(bad)
sbb
int
jmp
mov
sbb
xchg
test
fcom
iret
or
jmp
xchg
cmp
mov
dec
jae
jmp
xor
pop
les
lahf
pushf
add
out
dec
dec
pop
cmp
out
stc
in
or
movs
sbb
ja
ds
fimul
dec
mov
dec
mov
pop
(bad)
cdq
xlat
cld
jl
das
inc
neg
shl
and
inc
jl
sbb
push
pop
push
mov
mov
sahf
xor
mov
movs
adc
out
mov
mov
(bad)
retf
or
jb
mov
adc
loop
push
mov
jo
dec
jle
or
adc
cmp
lods
mov
scas
das
int
xlat
aas
sub
rcl
dec
leave
sar
sar
jmp
cmc
pop
test
xlat
ret
and
push
xchg
cmp
xchg
pop
arpl
add
out
add
leave
pcmpeqd
xor
add
pop
jnp
or
sub
outs
leave
das
xchg
dec
sahf
outs
mov
xchg
call
out
imul
(bad)
xor
je
pop
pop
sahf
mov
int3
cmp
xor
mov
sbb
or
cdq
xor
and
cmc
rcl
and
mov
dec
ret
jo
scas
adc
push
inc
sub
std
pop
xor
jge
mov
imul
mov
push
aas
and
mov
jmp
cwde
into
icebp
push
inc
fbld
jnp
cmp
out
pop
sbb
pop
neg
lods
or
cmp
mov
push
adc
sar
pop
cs
ins
sahf
lea
fmul
enter
mov
mov
fidiv
mov
adc
and
dec
outs
and
lods
out
cwde
adc
pop
dec
inc
ror
ror
lahf
aam
xor
or
test
push
call
stos
inc
mov
imul
gs
xor
push
shr
mov
scas
sbb
in
ficom
add
sub
jnp
sub
mov
into
lods
pop
and
into
sub
dec
mov
call
shr
lods
add
pop
sub
push
cld
cmp
adc
fs
pop
pop
mov
mov
cmp
(bad)
cli
cmp
inc
push
lods
frstpm(287
ja
(bad)
enter
mov
inc
pop
push
clc
jge
jbe
inc
out
xchg
inc
scas
sub
sahf
xor
push
pop
aam
ret
jne
push
mov
xchg
adc
pushf
outs
ins
repnz
stc
cs
popf
out
test
pop
std
and
jae
mov
int3
push
or
jge
adc
xchg
adc
fidivr
cmp
pop
pop
std
mov
aaa
or
push
and
jae
(bad)
in
mov
scas
push
jg
xchg
mov
pop
mov
jmp
mov
fimul
push
(bad)
aas
adc
fwait
jae
retf
stos
xor
mov
xor
push
adc
jns
mov
cmps
cmc
xchg
clc
mov
adc
cmp
scas
sbb
and
and
or
std
loopne
leave
sbb
sar
push
adc
imul
sub
xchg
gs
aas
pop
sbb
mov
sub
xchg
pop
jbe
outs
xor
aad
fmulp
push
shr
sub
inc
mov
jbe
icebp
dec
call
imul
int
iret
push
imul
xor
out
or
stos
call
mov
outs
das
mov
std
arpl
mov
mov
dec
mov
(bad)
adc
add
adc
mov
add
xchg
sahf
lahf
cmp
das
jl
pushf
movs
cli
(bad)
fldcw
fs
or
inc
push
aaa
cdq
out
xor
add
push
or
mov
popf
adc
mov
call
test
push
add
adc
js
mov
jns
rcl
hlt
pop
fistp
icebp
out
mov
inc
pusha
or
mov
arpl
movs
or
adc
adc
sar
cmc
je
xchg
(bad)
ret
icebp
imul
add
mov
stos
int3
retf
sar
sub
push
xor
cli
add
cdq
test
ficom
or
pop
shl
cmps
inc
mov
aam
es
or
pop
popf
dec
cmp
cs
ins
mov
sbb
and
ds
int3
stc
cli
(bad)
push
(bad)
stos
movs
ds
mov
repz
imul
inc
jecxz
mov
xor
jecxz
lds
push
(bad)
stos
mov
cmp
cwde
mov
or
sub
sbb
loope
jbe
adc
jno
sub
test
(bad)
arpl
sbb
popf
push
jbe
mov
ss
sub
jbe
int3
mov
dec
push
out
movs
sbb
push
daa
ret
jecxz
cmp
push
lods
inc
repz
outs
cmps
outs
retf
mov
(bad)
ins
(bad)
outs
xchg
and
sub
mov
imul
push
outs
ror
push
sbb
inc
rol
enter
xchg
pop
clc
daa
adc
and
pop
lds
test
xchg
pushf
mov
pop
daa
imul
pushf
popf
imul
mov
dec
retf
cmp
jmp
bound
or
(bad)
fimul
pushf
(bad)
cli
stos
push
mov
mov
jbe
pushf
xchg
lods
es
out
jge
pop
mov
stos
sti
(bad)
sbb
cmp
and
xchg
cmp
jecxz
mov
popf
in
push
xor
test
mov
dec
pop
arpl
mov
xor
mov
pop
aaa
retf
popf
div
mov
mov
call
sub
loopne
lds
bnd
ja
pop
fs
adc
jecxz
xor
mov
pop
(bad)
das
scas
cs
mov
ret
mov
add
pop
fwait
(bad)
push
mov
mov
scas
fwait
jg
push
out
int
and
cs
xchg
or
mov
mov
xor
dec
cvtps2pi
out
in
mov
js
(bad)
mov
mov
and
loope
pop
test
imul
data16
(bad)
mov
idiv
and
in
adc
fxch
cs
xchg
push
dec
sbb
sbb
inc
and
mov
mov
mov
fcomp
div
mov
cmp
mov
mov
lock
mov
fwait
jns
repnz
inc
bound
mov
rol
cmc
jbe
jne
lahf
cmps
rcr
pop
shl
mov
cmp
xor
iret
or
pop
mov
mov
xchg
in
mov
xor
pop
jnp
sar
popf
aad
dec
jo
(bad)
dec
out
cmp
xor
nop
out
pop
iret
jae
loope
xchg
mov
push
sub
mov
mov
in
adc
popa
dec
jecxz
in
loope
or
cmp
fmul
fadd
(bad)
ins
mov
adc
retf
psubw
mov
sub
jecxz
cmp
dec
xor
lgs
lea
adc
fwait
jmp
mov
push
hlt
sbb
sbb
fadd
sbb
cmp
adc
test
pslld
sbb
and
in
fwait
mov
in
xor
fdivrp
push
cmps
cmps
cmp
mov
hlt
sbb
and
xchg
cs
not
add
adc
push
scas
rep
jmp
or
loopne
jo
cmp
cs
stos
fldcw
xchg
movs
cmp
pop
test
jp
add
inc
addr16
inc
enter
scas
pop
mov
or
mov
mov
cli
xchg
ins
ds
aaa
dec
add
add
pop
dec
mov
xchg
bound
cmps
adc
sar
push
push
mov
or
cmps
mov
push
cld
push
jno
xlat
lds
sbb
retf
sub
inc
inc
or
dec
test
push
sti
scas
sub
and
arpl
cmp
mov
pop
ret
and
(bad)
fcomp
fistp
and
shl
xlat
imul
push
test
push
hlt
push
std
xchg
push
inc
xchg
outs
loopne
shl
jmp
push
fidivr
retf
and
inc
movs
push
xor
cmps
in
jl
fdiv
add
cmp
mov
pop
push
movs
push
sub
aas
sub
stos
mov
mov
out
in
and
xchg
out
inc
in
or
jae
lahf
and
inc
dec
fisub
xchg
adc
dec
hlt
inc
cmp
test
shr
jmp
push
or
inc
(bad)
jbe
adc
lea
xchg
pop
in
and
shr
xchg
adc
xchg
fistp
sub
pop
mov
ja
dec
jmp
pop
cwde
jmp
mov
mov
xor
sbb
addr16
scas
call
jmp
lea
cmp
sub
add
dec
fimul
mov
adc
mov
retf
jae
jle
or
jmp
push
leave
inc
shr
xor
retf
test
je
cmps
cmp
mov
rcr
aam
rol
mov
fsubrp
add
ds
and
scas
out
stos
add
jmp
aas
stc
add
jae
bound
xchg
div
and
std
xchg
ror
nop
ds
or
jge
aaa
jp
inc
mov
leave
cwde
sbb
cld
jge
jp
and
xor
sub
call
sbb
xor
inc
xchg
shr
jns
mov
arpl
jne
ret
into
jl
sub
add
out
jo
dec
test
test
jecxz
out
add
and
(bad)
xchg
js
cmp
lods
test
movs
iret
xchg
jmp
xchg
add
and
jo
add
jecxz
pop
cmp
inc
or
pop
add
cmc
adc
inc
ror
je
jp
xchg
fs
cmp
lods
rcl
mov
jl
mov
mov
and
bnd
push
push
jnp
push
push
fnstenv
stos
in
mov
and
and
and
js
sbb
xchg
shl
xor
mov
xchg
cmp
sbb
jmp
js
psrad
loopne
inc
sub
xlat
sbb
mov
retf
lods
jg
in
adc
xchg
ins
shl
xor
ficom
cmp
test
jno
sub
gs
jge
xchg
repnz
push
mov
(bad)
cmc
dec
es
loope
xchg
add
jns
jo
mov
arpl
pop
test
cmp
jmp
cli
mov
mov
stos
stos
imul
sti
add
cmp
mov
xchg
mov
mov
pushf
mov
dec
fdiv
not
xchg
and
retf
xchg
xlat
mov
and
cmc
jge
mov
sbb
xor
(bad)
into
les
(bad)
jae
int3
pop
xor
jl
xor
mov
dec
les
xchg
and
or
imul
adc
add
(bad)
shr
das
loope
fldcw
stc
xor
adc
push
in
mov
aam
stos
push
retf
sub
xchg
popa
fwait
xor
sbb
mov
pusha
movs
jo
add
jg
adc
or
cwde
out
fisttp
jnp
arpl
jg
scas
fist
stos
pop
repnz
mov
js
mov
pop
push
cwde
hlt
mov
outs
out
push
push
in
loop
xchg
jne
ins
add
ds
test
popa
out
fwait
loop
xor
xchg
dec
adc
adc
dec
xor
cmp
rcr
jo
(bad)
outs
cmp
push
mov
hlt
pop
xchg
inc
mov
into
rcr
inc
xlat
(bad)
jge
adc
or
std
jecxz
lods
and
sub
adc
int
xlat
std
xor
outs
xchg
out
int
imul
js
add
sar
cmc
push
cld
in
adc
rcr
or
push
shl
adc
dec
sbb
daa
mov
adc
int
out
call
test
inc
mov
sbb
cmp
dec
xor
fisubr
inc
hlt
mov
div
inc
int3
enter
retf
(bad)
cmp
and
sbb
adc
pop
data16
push
sub
(bad)
shr
movs
add
pop
test
push
rcl
cmp
mov
test
div
jmp
mov
add
sar
jecxz
mov
out
mov
cmps
dec
mov
aad
jmp
sub
mov
call
scas
xor
(bad)
fldl2e
call
fdiv
xchg
stc
push
jmp
fwait
sahf
call
ja
cwde
test
inc
sbb
push
dec
mov
inc
pop
rcr
jmp
or
xor
rcl
inc
push
scas
ds
jp
pushf
outs
fs
scas
xchg
call
push
aam
jns
cs
mov
jg
dec
xchg
cmp
shl
cdq
dec
rcl
ins
sub
fadd
dec
xor
pop
pusha
add
nop
add
jle
dec
mov
pop
popa
inc
sub
test
dec
mov
mov
sbb
std
pop
(bad)
push
and
mov
sub
fs
or
jo
inc
and
or
(bad)
cmp
xor
sbb
out
dec
inc
jno
out
push
daa
xor
pushf
mov
sahf
pop
or
(bad)
sub
daa
dec
mov
aam
cmp
inc
mov
jg
mov
xor
cmps
sbb
push
in
mov
add
xlat
out
fistp
xchg
movs
das
add
sar
shr
shl
cmp
dec
cmps
mov
ror
or
mov
jb
fcom
pop
(bad)
cld
(bad)
mov
jns
pop
fld
cs
les
pop
inc
xor
and
mov
mov
xor
sub
cli
xor
inc
loope
pop
mov
mov
jne
mov
cmps
stc
add
fs
hlt
cmps
div
je
icebp
cli
cmps
xor
outs
cli
inc
out
adc
shr
jns
cmp
imul
pop
daa
or
adc
popf
pop
in
or
int
mov
push
outs
popa
xlat
sub
cmps
sbb
in
cld
mov
ss
jns
and
out
push
ins
out
jp
cmps
call
adc
or
loopne
fnstcw
push
cmc
add
test
scas
rcl
jge
dec
retf
sbb
mov
xchg
mov
push
pop
ins
xchg
jne
fsubr
xchg
sbb
and
(bad)
fst
jle
fstp
mov
sub
outs
push
adc
push
jae
push
pop
mov
adc
bnd
pop
cmps
dec
hlt
xor
sub
lock
jmp
mov
sub
pop
or
sub
mov
mov
out
inc
test
cmp
ror
dec
into
cmp
fwait
loopne
xchg
pop
pmullw
movs
loopne
mov
cmp
dec
cld
in
jmp
std
push
or
mov
push
or
push
pop
ins
stos
daa
mov
adc
mov
dec
mov
imul
fwait
sbb
leave
sub
sub
mov
out
rcr
mov
sbb
adc
pop
sub
lds
pop
xchg
fstp
(bad)
aad
xor
fild
pusha
mov
addr16
inc
stos
retf
xchg
fdiv
ds
out
(bad)
jg
cmp
repnz
adc
test
xchg
or
in
and
jne
pop
int3
stos
cld
sub
fucompp
data16
iret
pop
clc
shr
dec
nop
stc
inc
jecxz
clc
dec
iret
rcr
push
mov
out
jnp
adc
imul
mov
xor
int3
add
daa
out
xchg
push
sub
retf
sbb
ret
mov
in
mul
and
fsubr
xor
cld
mov
mov
cmp
out
nop
movs
mov
cmp
into
sub
mov
es
outs
mov
or
fnsave
push
repnz
std
add
mov
shl
shl
mov
sahf
and
mov
add
iret
jne
lahf
in
outs
adc
cmp
mov
sub
std
leave
sub
mov
movs
xchg
or
jmp
nop
sub
inc
adc
div
iret
in
jo
inc
pop
aas
or
arpl
and
xchg
sahf
sti
sbb
add
movs
jb
outs
jo
ja
pop
cmps
aam
in
es
or
das
in
std
dec
cmp
cwde
and
in
test
cmps
dec
fwait
xor
outs
out
aam
xchg
xor
jmp
bound
nop
inc
popa
jnp
mov
xor
xchg
adc
call
aam
dec
push
jge
lods
or
sahf
test
fisub
fbstp
fist
call
(bad)
cs
cmps
fbld
shr
push
outs
int
xor
push
sub
(bad)
pop
pusha
sub
in
xlat
mov
aas
mov
inc
add
mov
pop
loopne
lods
or
div
lds
inc
es
ins
or
push
arpl
xchg
and
push
iret
push
out
test
adc
js
dec
out
mov
cmps
pop
sbb
push
mov
and
dec
cmp
movs
mov
out
int
mov
(bad)
ss
sub
imul
cli
(bad)
fsubp
pusha
aaa
dec
adc
push
mov
movs
fmul
mov
jne
sub
outs
fs
adc
push
out
dec
inc
shl
push
adc
dec
adc
jnp
jo
push
leave
in
jo
jecxz
push
or
jl
shl
cwde
or
loopne
dec
popa
push
push
xor
dec
xor
pmaxsw
push
push
ins
out
jbe
ins
adc
les
inc
scas
adc
popf
cmc
and
or
xor
jmp
jl
icebp
fdiv
sub
dec
xchg
jno
xor
test
inc
out
fwait
mov
mov
in
sub
or
add
jnp
pop
mov
nop
es
inc
das
(bad)
fucom
or
movs
enter
sbb
mov
push
nop
xor
pop
(bad)
push
push
push
jnp
mov
sti
aaa
xchg
icebp
adc
adc
xchg
cmp
cmp
mov
jl
in
adc
shr
popf
jns
outs
ds
aad
and
push
mov
push
mov
stos
xchg
xchg
cld
xchg
cmp
push
mov
in
(bad)
scas
or
bound
pop
retf
mov
inc
jne
int
adc
mov
sub
adc
lahf
gs
or
inc
test
mov
push
sar
ror
loopne
sub
retf
or
cmp
icebp
sbb
push
mov
pop
mov
cmp
adc
mov
jge
push
xor
jmp
mov
mov
xchg
push
call
push
sbb
jns
and
xchg
inc
les
lods
aas
gs
push
mov
sub
das
sbb
pop
lock
cmp
cli
or
jno
cwde
in
call
stos
loopne
leave
cmp
dec
aas
leave
aad
daa
add
xchg
outs
sbb
ror
retf
adc
mov
mov
push
mov
and
push
jp
ja
test
jge
xchg
pop
mov
movs
sub
fdivp
je
sub
in
out
sbb
into
cmps
xchg
sub
mov
jae
stc
cdq
jg
xchg
mov
rol
call
jmp
pop
mov
in
xor
dec
mov
fcomi
mov
cmps
mov
push
or
mov
push
(bad)
std
xor
sahf
mov
aas
out
jge
xor
rol
sub
loopne
aaa
aas
jmp
adc
sahf
shl
jno
push
xchg
dec
pop
(bad)
and
sbb
cli
ret
xchg
inc
sbb
test
mov
sub
fs
or
mov
pop
into
mov
mov
jle
adc
mov
mov
neg
repnz
aaa
aam
bound
sbb
xchg
sbb
iret
imul
movs
(bad)
lea
popa
fwait
xchg
or
cld
popa
loopne
fmul
and
int
shl
mov
rcl
aas
lods
bound
inc
or
aas
gs
hlt
ss
fld
test
daa
sti
ins
out
and
and
xchg
xchg
xor
movs
rol
(bad)
sahf
pop
inc
and
retf
nop
loopne
aam
out
loopne
pop
jle
cmp
mov
push
imul
jmp
pushf
clc
in
mov
sub
cli
adc
adc
jb
mov
in
(bad)
int3
rcl
push
mov
lods
add
sub
in
mov
dec
idiv
cmp
add
mov
add
lods
sub
ror
adc
pop
fstp
arpl
nop
or
and
aaa
js
jmp
data16
es
gs
mov
into
lahf
leave
mov
xor
push
jge
in
xor
push
mov
les
mov
or
push
test
or
rcr
ja
push
sbb
mov
sub
(bad)
loope
popf
div
jmp
jbe
loop
jle
xchg
mov
imul
jns
repnz
cld
dec
xor
mov
mov
pusha
mov
mov
adc
cld
pop
movs
in
shl
pop
je
add
dec
shl
jmp
push
test
inc
(bad)
icebp
lods
icebp
retf
push
and
les
or
cwde
mov
mov
cli
mov
sub
pop
mov
fild
or
jb
or
or
xchg
addr16
call
xchg
mov
mov
daa
and
(bad)
mov
push
adc
in
xlat
mov
xchg
ds
imul
aaa
mov
inc
je
pop
jecxz
cmps
push
sub
in
js
push
stc
aad
sbb
xchg
or
(bad)
mov
lods
mov
test
pop
data16
pop
jmp
sahf
xchg
and
les
test
cwde
ror
xchg
jmp
mov
movs
sub
pusha
jb
es
outs
mov
and
int3
dec
and
imul
mov
push
rol
cmps
pusha
push
test
loopne
shl
rol
fs
push
xchg
push
outs
scas
xchg
aam
sahf
add
xchg
xor
pop
sbb
mov
fwait
cmp
push
xlat
push
xor
scas
pop
mov
movs
xor
cmp
or
cmp
rol
cmp
retf
mov
mov
cmps
mov
pop
mov
rcl
lods
mov
test
scas
xchg
xchg
nop
pop
fcmovnb
dec
inc
dec
lds
mov
ficomp
fcomp
fucom
lods
pop
sbb
ins
mov
cmp
adc
iret
imul
or
call
mov
sub
xlat
sub
stos
pop
mov
hlt
fwait
lahf
clc
mov
push
xchg
addr16
cwde
jns
push
jb
rcr
cwde
imul
sbb
adc
mov
sbb
xlat
add
add
imul
aam
out
imul
push
movs
sti
ja
mov
ins
into
(bad)
std
clc
test
add
ds
inc
out
cld
or
mov
cmp
and
pop
out
jle
sbb
sbb
scas
sbb
add
dec
mov
call
mov
push
or
bound
sahf
xchg
add
cmp
fadd
mov
pop
or
pop
cdq
cmp
jle
lods
or
push
pop
sbb
aas
jae
xor
fsubr
ins
leave
push
and
pop
dec
pop
add
ds
mov
dec
ss
movs
arpl
mov
mov
fistp
sahf
es
mov
xchg
(bad)
adc
es
ds
(bad)
lods
jmp
jle
test
push
data16
aam
inc
jl
stos
xor
xor
cmovle
aas
idiv
xchg
mov
xlat
and
stos
jmp
xor
mov
pop
iret
mov
retf
add
and
lods
jge
xchg
cdq
dec
sbb
or
xchg
xor
stos
inc
into
pop
aas
out
test
or
or
sub
push
shl
xor
pop
sbb
out
inc
ss
inc
fsubr
sub
jmp
pop
mov
inc
sub
lods
lea
sub
add
in
(bad)
push
dec
hlt
sar
add
adc
mov
cmps
inc
xchg
shr
in
(bad)
rcl
ret
push
push
mov
sub
lds
(bad)
(bad)
jb
nop
push
(bad)
pop
mov
and
add
mov
scas
add
jge
mov
pushf
leave
pop
sti
jnp
adc
sbb
or
not
add
iret
xor
mov
jmp
push
jecxz
and
cli
gs
sub
jge
sti
inc
mov
xchg
xchg
out
rol
out
pop
cmp
inc
es
scas
mov
push
push
cmovg
aaa
in
push
sub
mov
or
retf
sbb
(bad)
sar
jle
sbb
push
std
shr
xchg
hlt
inc
push
sbb
test
mov
cld
cmp
push
push
daa
mov
xlat
adc
mov
cmps
fcomp
daa
cmp
inc
xchg
les
adc
jle
pop
lods
repnz
and
lea
leave
jmp
dec
adc
cmc
test
mov
xchg
xor
repnz
cmp
and
lods
dec
test
outs
loopne
mov
pusha
add
fstp
push
mov
pop
add
and
(bad)
mov
sub
adc
xor
xchg
pop
xor
mov
icebp
xchg
pusha
jbe
xor
jmp
pop
ds
sub
jns
(bad)
inc
or
int
sub
icebp
xchg
push
sub
(bad)
xlat
dec
cmp
cmc
mov
cmps
jne
cwde
add
jl
inc
xor
cmp
sahf
pop
retf
push
dec
xchg
adc
(bad)
fmul
or
mov
pop
dec
inc
test
inc
(bad)
fmul
xor
xchg
xchg
data16
cmp
std
jno
lods
mov
sbb
iret
imul
inc
add
xchg
clc
sbb
retf
es
mov
mov
cmp
dec
pop
stos
xor
pop
push
dec
mov
aam
jmp
xchg
jne
sub
test
inc
sahf
sbb
add
mov
sub
sti
popf
add
lods
sbb
and
stc
stc
pop
out
cmps
cmc
mov
sbb
imul
pusha
lahf
jo
sbb
popf
push
scas
lea
mov
push
(bad)
dec
rcl
mov
pop
les
pop
aam
movs
mov
jnp
cmp
movs
jns
lods
xchg
in
js
push
and
int3
jno
icebp
jnp
adc
xchg
jne
popf
fwait
mov
out
into
repnz
jmp
and
dec
lods
jge
jge
jno
les
lock
fs
or
lds
repnz
mov
inc
adc
xchg
lds
aas
jecxz
ins
adc
inc
push
sbb
(bad)
pop
imul
loop
pop
inc
jg
mov
repz
push
cmc
inc
rcl
push
rcl
xlat
mov
xor
repz
ins
repnz
mov
jne
push
cmp
(bad)
aam
inc
add
stos
sub
adc
mov
icebp
pmullw
mov
stc
ins
stc
xchg
rcr
xchg
add
mov
gs
sbb
inc
(bad)
mov
sub
cmc
test
xchg
outs
jmp
cmp
jb
scas
dec
in
test
mov
mov
adc
xor
(bad)
push
outs
inc
fldenv
push
movs
mov
dec
leave
cmp
cmp
mov
inc
loopne
inc
movs
retf
dec
jno
lea
retf
push
leave
iret
push
dec
(bad)
int
ror
mov
rol
iret
(bad)
push
jo
adc
mov
and
push
adc
push
add
sub
in
cmp
mov
jne
pop
outs
cs
xchg
inc
inc
fs
sbb
loop
fs
int
data16
xchg
xchg
adc
cmp
fs
push
test
xor
mov
cwde
fadd
push
xor
xlat
test
popa
aaa
add
ffree
aas
dec
inc
ror
dec
push
inc
mov
rcl
std
mov
test
cmovl
ror
and
shl
cmp
inc
repz
dec
mov
les
adc
jmp
call
addr16
add
imul
je
arpl
sbb
jp
mov
ficomp
daa
sub
inc
je
ret
lea
into
mov
scas
push
scas
test
add
and
pusha
loop
sub
imul
outs
fsubr
push
test
sbb
jbe
pop
cs
sub
sbb
mov
outs
mov
xchg
call
xor
jmp
shr
and
lods
mov
out
rcl
pop
mov
or
mov
sti
outs
dec
mov
into
and
fsubp
cli
test
jnp
jnp
sbb
repz
test
add
jae
into
sub
iret
ret
ret
add
xor
add
iret
rol
dec
lock
movs
loopne
test
pop
sbb
stc
aam
sahf
pusha
mov
int3
mov
adc
mov
loop
sub
test
push
aad
icebp
add
xlat
add
cmp
rol
mov
daa
imul
jecxz
hlt
pop
add
test
bound
cdq
dec
xchg
mov
mov
push
push
retf
pusha
cmp
cmc
dec
test
scas
xchg
dec
loop
sub
(bad)
retf
push
int3
cmp
sbb
into
fs
mov
or
les
cs
cs
or
dec
jmp
jle
xor
(bad)
pop
cmc
test
inc
cld
mov
adc
stos
xor
imul
and
cmp
mov
shr
ror
inc
shl
test
push
sub
dec
outs
push
xor
jbe
inc
mov
fwait
scas
jp
push
xor
ds
jo
into
pop
dec
push
jle
lock
leave
jge
fdivp
mov
push
or
sti
xchg
bnd
dec
scas
out
add
xchg
rol
int3
pop
jae
xchg
inc
pusha
mov
lea
add
loopne
mov
fcmovb
add
dec
mov
sub
mov
add
or
push
call
(bad)
nop
push
sub
imul
mov
pusha
ret
mov
dec
shl
xchg
frstor
and
pop
inc
daa
(bad)
out
into
pusha
push
rcr
nop
or
mov
outs
div
jnp
pop
sbb
or
bound
lods
shr
mov
retf
hlt
xchg
pop
stos
push
inc
pop
jg
dec
inc
call
dec
mov
sbb
cli
mov
retf
fild
mov
sub
hlt
or
je
inc
and
xlat
out
push
test
out
push
jg
fbstp
clc
or
xchg
(bad)
xlat
adc
jae
add
mov
sar
cmp
mov
mov
cwde
sbb
sar
sbb
(bad)
(bad)
imul
rol
(bad)
rcr
das
cmp
sub
sub
mov
jo
push
xor
add
popa
clc
aas
retf
lock
jno
stos
jg
hlt
lahf
and
scas
cmc
mov
pop
mov
mov
add
std
or
push
push
fcomp
ret
xor
sbb
push
pop
fbstp
inc
cmps
lods
mov
ins
(bad)
add
in
scas
push
cmp
inc
ret
loop
cmps
push
dec
in
popf
outs
fisub
arpl
dec
(bad)
pop
int
pop
nop
out
int
push
and
lods
daa
aam
jno
rol
jmp
fnstenv
daa
shl
out
jne
and
pushf
lods
push
push
xlat
mov
or
imul
jbe
inc
lahf
into
fldcw
idiv
mov
and
jecxz
mov
les
fst
das
ins
aaa
test
js
inc
and
mov
sbb
mov
inc
cli
test
mov
scas
test
mov
cmp
ret
fwait
dec
repz
fs
loope
mov
shr
sbb
cmp
enter
push
sti
cdq
imul
into
jnp
push
jbe
out
mov
inc
jmp
sub
test
mov
or
stos
jne
inc
ja
inc
sbb
frstor
xor
sbb
sub
stos
push
mov
cmp
cmps
ins
sahf
ins
add
jo
cmc
movs
pop
aam
fidiv
inc
jns
push
and
stos
std
fcom
(bad)
xor
xchg
jae
or
push
push
ins
xchg
out
mov
aaa
clc
es
sbb
int3
shl
fidiv
pop
xchg
sub
mov
ins
jmp
sbb
lea
jnp
jg
sbb
xchg
aaa
sub
in
ins
mov
cmp
add
fsubrp
sub
repnz
lea
std
in
xor
(bad)
enter
bound
xchg
ret
leave
in
pop
push
fst
mov
in
cmps
add
xchg
jmp
lea
fadd
pop
sti
(bad)
xor
mov
leave
xchg
xlat
(bad)
and
pop
mov
retf
mov
scas
add
sub
xor
das
mov
es
mov
xchg
sub
rcr
mov
call
adc
inc
fwait
sti
jge
and
sub
inc
in
and
out
fidiv
sbb
push
fmul
mov
fwait
mov
inc
cmps
int
mov
hlt
sahf
out
dec
test
loop
mov
arpl
adc
cmp
push
or
xchg
out
lahf
mov
sbb
lock
fsub
shl
lahf
adc
adc
xor
out
push
imul
jp
les
mov
stos
imul
dec
sub
push
gs
xchg
ret
lahf
push
push
mov
and
and
pop
outs
jb
shl
jae
sub
xor
lods
add
popf
jmp
add
dec
mov
sbb
hlt
xchg
jp
outs
mov
adc
xchg
cmp
popf
test
cmp
and
inc
jb
jecxz
scas
xchg
stos
adc
jbe
(bad)
gs
fsubp
sub
fimul
cs
out
sahf
cmp
cmp
dec
sub
mov
xchg
(bad)
or
arpl
sub
pop
jnp
push
xchg
sbb
repnz
mov
outs
push
inc
mov
push
arpl
xchg
adc
dec
add
test
jle
mov
pop
inc
call
popa
xchg
xor
mov
mov
sbb
push
test
mov
mov
sbb
dec
das
add
xchg
mov
sub
ficomp
shr
adc
js
add
inc
rcl
(bad)
fsubr
sub
pop
pop
jmp
ja
iret
scas
push
add
popf
cmc
mov
fwait
xchg
mov
mov
imul
inc
paddq
stc
add
dec
cmp
(bad)
(bad)
cli
jp
xchg
shr
inc
and
inc
dec
or
icebp
jne
jne
sub
dec
pop
mov
cmp
push
fwait
mov
sar
pop
and
pop
push
sub
adc
add
data16
mov
pop
dec
sbb
daa
fsubr
hlt
xor
inc
or
cld
retf
or
leave
pop
cli
enter
scas
stos
in
adc
rol
xchg
sub
in
mov
mov
adc
or
lds
cmp
out
ins
sti
jl
and
movs
ds
outs
pop
adc
data16
adc
mov
adc
jae
lds
mov
cmp
(bad)
out
mov
shr
sbb
test
pushf
aam
call
jno
pop
int
loop
sub
jge
mov
ficomp
pop
hlt
mov
jnp
stc
(bad)
jge
movs
jmp
aam
(bad)
mov
inc
fiadd
jmp
enter
pushf
popf
scas
adc
test
int
sti
or
scas
arpl
fadd
push
and
xor
xchg
pushf
inc
and
fisttp
dec
push
repz
add
or
ins
(bad)
ja
and
popf
fs
pop
stos
pop
xor
scas
daa
sbb
adc
push
sbb
mov
xchg
out
sub
xchg
in
xchg
xor
imul
adc
pop
xor
mov
dec
mov
xchg
add
pusha
xor
arpl
lahf
stos
into
out
arpl
shl
jge
sbb
cmp
cdq
bnd
fcomp
leave
xchg
and
push
fcmovnu
iret
int3
push
in
mov
mov
ins
pop
or
ss
std
(bad)
sti
shl
inc
imul
stos
out
dec
sub
jno
add
pop
je
jge
mov
scas
std
enter
sub
pop
mov
mov
sahf
outs
pop
inc
mov
inc
popa
mov
lea
push
xor
dec
dec
add
leave
popa
jb
xchg
add
and
mov
add
push
fcomp
in
cmp
enter
adc
xchg
data16
dec
out
popf
cmp
sub
xrelease
xchg
test
cmc
(bad)
push
mov
mov
mov
and
das
lods
mov
pop
xor
add
and
and
sub
mov
add
mov
push
pop
cmp
ret
dec
popa
and
std
inc
leave
sub
cmp
sbb
xchg
sub
dec
mov
ins
push
sbb
test
lock
loope
leave
aad
or
sub
mov
push
jo
scas
aad
add
shl
add
fs
ja
push
pop
pushf
iret
jns
mov
data16
and
rol
aaa
or
loope
sbb
and
or
xor
fsub
inc
mov
ret
fidivr
in
mov
into
out
cli
mov
dec
les
and
mov
cmp
movs
jmp
add
push
shl
std
adc
mov
ins
cmp
out
xor
dec
ss
push
adc
xchg
fisub
sub
outs
data16
cmp
test
fldcw
(bad)
aam
pop
leave
in
retf
mov
sbb
int
jle
xor
jg
pop
(bad)
fistp
out
mov
lods
jge
ins
sahf
cmp
adc
cwde
cmps
inc
mov
dec
xchg
mov
and
and
loop
shr
jae
data16
and
pop
and
rol
fcomp
addr16
nop
scas
loop
data16
shl
jge
cwde
pop
call
cmp
retf
pop
frstpm(287
sbb
ret
mov
aas
xchg
sti
sbb
repz
jnp
pop
(bad)
retf
sbb
rep
fsubp
jle
out
cs
mov
sub
push
mov
loope
and
or
fnstenv
pop
mov
mov
ins
mov
pop
xor
mul
sub
adc
ror
cmps
push
pop
pop
mov
repz
cwde
mov
dec
stc
popf
xchg
mov
sbb
out
xor
sbb
xchg
mov
pop
fidiv
pop
mov
out
aad
cmp
popa
pop
mov
pop
gs
pushf
scas
imul
loop
and
test
sub
pop
je
sbb
daa
and
dec
clc
dec
mov
mov
pop
fisttp
hlt
js
pop
mov
jle
in
mov
test
mov
cmp
data16
out
mov
cdq
sbb
test
retf
pop
mov
test
sub
in
call
cmc
and
push
pop
and
sti
sub
pop
cmp
add
in
push
not
jle
shl
fistp
fcmove
sbb
adc
sahf
leave
ret
mov
inc
jmp
lods
inc
inc
stos
ins
ror
fidiv
or
in
gs
mov
scas
sbb
fisub
mov
lahf
push
lds
jl
movntps
pop
jo
inc
hlt
mov
loopne
mov
pcmpeqd
test
xchg
fwait
sub
xor
cmp
popa
xlat
add
cmp
rcl
aaa
mov
xor
and
(bad)
stc
xchg
aaa
les
cmp
xor
ret
and
or
icebp
and
or
into
das
xchg
xchg
repz
int
jns
pop
mov
sbb
xor
sub
fidivr
arpl
fwait
dec
ja
inc
and
jbe
popf
enter
ss
sbb
sbb
fmul
cwde
xchg
jle
sahf
ins
dec
push
adc
int
inc
and
popf
pop
hlt
cmp
inc
push
lods
ret
inc
(bad)
call
cmp
clc
int3
push
xchg
popf
fstp
xor
add
dec
ds
rcr
daa
lods
inc
xchg
aad
or
cmps
xchg
fidivr
sub
xor
xchg
add
xchg
add
and
jge
pop
jnp
int3
jnp
(bad)
sti
dec
xchg
xchg
loop
push
fidivr
mov
push
mov
xchg
sub
bound
or
xor
mov
push
aam
dec
cld
(bad)
mov
mov
ret
stos
movs
sub
dec
inc
jb
mov
pop
lods
adc
xor
not
fsubr
fidivr
scas
psubusb
arpl
sub
ret
retf
sbb
fcom
loopne
xchg
xor
retf
mov
cdq
add
dec
pop
add
pop
mov
in
cmp
fiadd
cwde
pop
and
adc
je
cmps
rcl
les
fsin
(bad)
xchg
and
cmps
xchg
lea
(bad)
rcr
repz
int
test
in
push
add
ja
push
mov
aam
adc
push
ins
stc
sub
in
aad
jo
(bad)
cmp
outs
xchg
and
mov
pop
adc
aaa
sub
(bad)
mov
mov
sub
pushf
ja
popa
sbb
inc
jmp
xor
jmp
scas
aas
xchg
pop
mov
pushf
lods
mov
jo
mov
or
cli
inc
nop
je
jns
sub
arpl
sub
jl
xchg
stos
lea
mov
outs
aam
mov
frstpm(287
popa
xchg
pop
or
ss
xchg
mov
inc
popa
rol
cmp
xor
outs
test
sbb
das
int3
mov
sbb
xor
fcom
ja
inc
adc
hlt
xchg
add
sar
sbb
movs
jge
pop
iret
fnsave
cmp
shl
stc
sti
add
ds
in
or
cmp
mov
sub
sahf
dec
inc
add
nop
sbb
je
clc
push
pop
test
rol
in
adc
imul
mov
inc
rcr
mov
cmp
popa
jns
mov
xchg
jno
sbb
xchg
dec
es
push
pop
std
mov
push
sub
cmps
in
cs
fwait
shl
loope
cmp
int
call
push
fcmovbe
(bad)
out
lahf
xchg
std
nop
xor
les
push
inc
jno
add
mov
in
lods
das
iret
mov
push
mov
not
cwde
or
sbb
stos
mov
addr16
pop
cmp
mov
mov
lods
xchg
scas
mov
sbb
out
mov
xor
pop
aaa
adc
push
test
cmovg
add
xor
jl
xchg
and
loope
or
out
dec
stos
imul
sub
mov
fld
stc
or
sub
and
xchg
addr16
cmp
mov
dec
test
mov
lock
je
cdq
mov
mov
adc
xchg
push
pop
daa
imul
jmp
sbb
mov
frstor
xor
push
or
jns
mov
out
int
(bad)
xlat
mov
mov
push
mov
dec
stos
cmc
ins
xor
call
mov
xor
cli
inc
mov
push
xor
xchg
out
or
aam
or
xchg
jge
jge
aaa
call
push
fst
icebp
rcr
or
loopne
mov
and
mov
pop
hlt
fsub
(bad)
xor
fdiv
es
push
inc
sahf
mov
push
(bad)
xor
or
(bad)
mov
sar
xchg
ret
xchg
shl
dec
push
mov
mov
(bad)
in
ins
sub
outs
repnz
cmp
pop
mov
mov
mul
into
out
popf
sbb
xchg
mov
cli
fsub
fcomp
das
cmp
xchg
sbb
sbb
mov
mov
mov
mov
sub
ja
lods
xor
gs
test
(bad)
mov
fwait
dec
jno
pusha
or
sub
aas
out
imul
adc
adc
push
out
and
(bad)
pop
xor
(bad)
aaa
sbb
out
(bad)
fsubr
add
pop
sbb
sub
sbb
je
pop
neg
xlat
and
rcl
imul
xchg
pop
push
sbb
loop
mov
sub
sahf
fidiv
(bad)
nop
std
int
jo
leave
mov
call
xor
neg
xchg
pop
test
ja
dec
pusha
sbb
cld
clc
jo
retf
xchg
jmp
mov
int
jmp
mov
call
push
dec
xor
adc
push
jmp
add
push
popf
in
in
sti
jbe
mov
adc
call
outs
adc
sub
sbb
cmp
xchg
and
inc
(bad)
mov
ds
sub
mov
dec
ss
aas
in
clc
out
test
es
adc
adc
fnstenv
pop
sub
sahf
call
jae
pusha
shr
fst
inc
imul
push
mov
pop
scas
sar
ja
jge
lods
push
add
mov
or
loope
adc
dec
inc
lock
mov
xchg
mov
aaa
sbb
add
mov
mov
pop
popf
pop
or
fldz
and
inc
lahf
ss
popa
xor
pop
sbb
icebp
cmp
and
pop
add
jle
mov
mov
ret
mov
inc
jae
les
inc
aaa
in
add
sahf
pusha
push
cmps
and
adc
arpl
add
add
xlat
inc
rcr
in
ss
pop
add
push
sbb
xchg
xor
xchg
imul
jge
xchg
fsubr
(bad)
sub
(bad)
fcmovb
sti
pop
mov
popa
test
xor
mov
(bad)
jg
inc
jbe
and
out
out
outs
movs
call
div
cld
xor
sbb
(bad)
push
jne
xchg
pushf
mov
aam
sbb
push
mov
in
aas
jmp
std
and
mov
call
(bad)
outs
ror
rol
xchg
setnp
leave
dec
xchg
vmwrite
ficomp
(bad)
sub
mov
push
(bad)
out
test
ss
call
xor
(bad)
jnp
cmp
mov
pop
sbb
pop
adc
jns
in
pushf
or
inc
jno
push
lods
les
pop
not
sbb
adc
fdivr
mov
ds
aad
fmul
jmp
mov
cmp
mov
shl
cs
pushf
aad
jo
cmp
cmp
and
xlat
pop
sahf
xchg
sahf
je
fs
popf
cwde
test
daa
jo
ss
in
mov
xchg
jl
pop
ins
or
jno
(bad)
pushf
in
sbb
sub
or
sub
es
xchg
push
pusha
stos
xchg
repz
mov
cmps
adc
sahf
jg
xchg
push
daa
inc
das
mov
ss
in
jo
jbe
xor
outs
sti
sbb
fwait
iret
adc
jae
add
jmp
repnz
xchg
mov
xchg
in
add
mov
add
mov
cmp
outs
imul
sub
jg
out
aaa
jbe
fs
inc
inc
pop
(bad)
push
xchg
data16
test
jnp
ins
mov
sti
ds
push
jns
xchg
or
jge
push
ds
rol
xor
mov
jmp
and
mov
aaa
pop
cs
add
mov
cmp
mov
repz
pop
fistp
test
fcmovbe
js
sbb
jnp
in
jle
pop
jp
jecxz
adc
retf
fwait
icebp
jne
fst
dec
cmp
jmp
sti
call
push
das
add
xchg
xlat
cmp
int3
les
lds
xor
dec
icebp
cmp
repnz
stos
xor
js
out
xchg
jg
mov
retf
test
imul
adc
out
jne
(bad)
lods
jmp
push
stos
fiadd
mov
leave
adc
mov
ins
mov
push
adc
ins
sub
hlt
icebp
push
cdq
pop
pusha
cmp
aam
pop
loop
pop
mov
xor
xor
push
mov
mov
and
(bad)
out
jo
mov
push
pushf
cld
(bad)
cmps
lahf
mov
(bad)
mov
mov
push
test
ss
xchg
mov
cmp
leave
cld
leave
mov
inc
in
mov
adc
outs
xchg
pop
in
mov
lock
cmp
mov
push
push
mov
push
iret
jbe
fucomi
xchg
stos
mov
pop
push
push
ins
push
jmp
mov
popf
and
add
jmp
and
push
mov
adc
dec
push
loope
imul
xchg
inc
(bad)
dec
out
sbb
push
jnp
and
rol
enter
inc
iret
pop
dec
jl
in
and
in
mov
pop
dec
mov
mov
fadd
jmp
out
out
and
xchg
xor
jno
ficomp
pop
scas
dec
jmp
std
in
in
(bad)
cld
sti
xor
int3
mov
cld
add
inc
mov
das
enter
out
pop
retf
or
test
mov
shl
push
lea
cmp
movs
sar
fxtract
ret
xor
push
adc
ss
sbb
es
aaa
jns
mov
aaa
jp
call
(bad)
push
in
rcl
mov
and
or
sub
nop
mov
jns
xchg
xor
jnp
mov
push
enter
les
jns
(bad)
int3
in
call
ret
(bad)
or
test
push
cmps
icebp
jnp
push
ja
repz
inc
out
jl
jmp
repz
(bad)
jmp
loopne
sub
in
aad
adc
test
stc
test
mov
movs
push
call
xchg
imul
mov
loop
out
js
xchg
call
fldcw
repz
jmp
cli
sbb
sar
ds
(bad)
inc
xchg
in
adc
pop
fmul
je
test
sbb
stos
mov
ret
and
xor
add
sub
imul
(bad)
test
jnp
dec
ror
popa
enter
dec
xchg
sub
movs
ficom
or
stc
inc
xor
out
mov
test
adc
rol
fcmovnbe
pop
xchg
add
push
mov
daa
add
jb
mov
dec
aaa
mov
bound
mov
xchg
xor
cmp
movs
push
and
or
aam
push
or
jge
add
add
idiv
ins
test
mov
mov
pushf
scas
xor
rol
sti
mov
fs
das
icebp
(bad)
dec
mov
movs
ds
and
add
mov
and
(bad)
and
xchg
push
data16
rcr
inc
fstp
pop
push
adc
test
add
clc
add
daa
daa
xchg
xor
pop
mov
push
(bad)
jno
div
mov
push
fld
add
ins
nop
test
(bad)
nop
in
pop
inc
inc
lock
cdq
inc
push
sbb
mov
jl
bound
outs
add
pop
mov
in
pop
sub
sub
jecxz
adc
and
rol
retf
fidiv
fwait
mov
aam
jecxz
mov
adc
and
mov
adc
nop
inc
cld
arpl
dec
arpl
int3
out
sub
aam
xor
lods
stos
jb
in
pop
jae
cs
sar
lods
fisttp
lods
or
fadd
test
ret
jmp
mov
loop
(bad)
lds
in
mov
sub
adc
shl
fild
xor
adc
out
push
or
retf
daa
mov
das
data16
clc
or
and
jo
dec
mov
inc
xchg
in
test
mov
fwait
xor
daa
call
sbb
dec
mov
daa
imul
xor
mov
adc
xlat
adc
into
fcomp
xor
fwait
outs
mul
xor
push
(bad)
movs
fisttp
sub
cmp
inc
and
mov
inc
loope
and
pop
adc
cmp
iret
mov
pop
fiadd
inc
fdiv
pop
xor
xchg
inc
sub
mov
xchg
mov
shl
je
or
push
xchg
idiv
sbb
mov
mov
dec
retf
arpl
add
xchg
into
mov
addr16
cwde
out
clc
rcl
les
(bad)
in
mov
mov
pop
ror
sar
outs
dec
neg
lds
adc
xor
mov
mov
stc
call
hlt
js
cmp
rol
shl
pop
div
xor
int
push
lock
jae
jl
push
push
pop
bound
add
push
sbb
xchg
xor
or
sbb
push
jb
add
dec
push
bound
lds
idiv
call
adc
fidiv
mov
popf
fwait
ret
arpl
call
(bad)
and
lock
push
cmp
nop
leave
xchg
aaa
jae
loopne
or
xor
cmp
nop
ret
and
repnz
adc
mov
stos
jbe
movs
jne
std
pushf
adc
inc
dec
cmp
pop
adc
or
idiv
jmp
lods
and
scas
and
aas
pop
mov
sub
ffree
cmp
out
dec
arpl
aam
jbe
cmp
je
pop
pop
xchg
out
gs
xor
pop
dec
mov
call
jg
cmps
sub
loop
mov
call
shl
cmp
ja
sti
(bad)
mov
js
ja
cmp
iret
xchg
sbb
imul
xchg
push
repnz
dec
and
ror
cmps
dec
leave
in
push
cmps
lahf
call
adc
mov
sar
shl
jmp
jno
imul
cmc
psadbw
lock
aaa
push
dec
fwait
sbb
leave
sub
test
xchg
std
das
push
dec
(bad)
dec
fwait
inc
out
es
ret
int3
xchg
jecxz
popa
fnstcw
rcr
cmc
addr16
xor
mov
xchg
hlt
pop
out
cmp
pop
cmp
sti
sti
int3
inc
daa
push
fisub
push
jmp
stc
fisub
jb
push
into
mov
out
cmp
inc
out
push
and
adc
sub
push
mov
ss
sbb
lea
ret
mov
mul
xor
sti
loopne
lods
dec
shl
out
out
jecxz
mov
xor
mov
jns
fwait
in
mov
sub
jns
cmp
add
xchg
cmovs
sbb
pop
jb
push
ret
add
xchg
add
sbb
sbb
cmp
retf
sbb
(bad)
ins
jp
inc
pushf
les
push
dec
jmp
push
mov
sbb
sbb
aad
cmps
jbe
jle
mov
dec
inc
ret
pop
mov
nop
add
mov
pop
inc
(bad)
icebp
xchg
imul
ins
pop
popa
pushf
mov
jae
dec
fist
test
in
xchg
pop
adc
aam
into
dec
inc
adc
mov
(bad)
icebp
out
aad
rcr
adc
dec
dec
xchg
sbb
xor
movmskps
mov
inc
dec
xor
out
ins
addr16
jae
stos
icebp
push
and
jl
push
inc
jl
adc
pop
nop
or
jle
call
xchg
fs
cdq
mov
ins
nop
xchg
mov
cmp
pop
xlat
cmc
lds
sbb
or
push
fsub
dec
push
inc
ins
cdq
in
jmp
inc
mov
sub
dec
outs
shl
pushf
pop
pushf
cmps
push
mov
shl
xchg
or
or
call
aaa
(bad)
retf
mov
inc
test
daa
cmp
pop
push
punpckhwd
jns
adc
pop
xchg
sar
pop
sub
adc
pop
popa
imul
shl
stos
(bad)
mul
mov
icebp
mov
gs
arpl
push
scas
add
icebp
and
push
dec
mov
or
gs
fsubr
int
les
sbb
add
inc
xchg
ror
loopne
dec
jo
adc
shl
mov
pop
mov
pop
jno
(bad)
cmp
add
int3
xchg
jge
out
daa
push
in
adc
ror
movs
dec
stc
dec
xor
and
push
mov
mov
fsub
xchg
jns
xchg
adc
push
int3
js
js
pop
cmps
fsubr
cmp
sbb
gs
jmp
test
iret
xor
mov
popf
push
retf
orps
dec
dec
sti
pop
aad
push
in
jecxz
push
push
ja
pop
inc
lahf
sub
cmp
cmp
add
xbegin
sub
test
loopne
stos
add
ins
js
retf
(bad)
push
dec
sub
cmc
mov
inc
js
neg
inc
jns
adc
mul
jb
(bad)
ins
pop
call
pop
fdivr
xchg
aam
jae
push
mov
hlt
fcomp
adc
mov
hlt
mov
cwde
mov
cld
add
(bad)
jb
inc
ss
xor
popa
jnp
ds
scas
pop
jmp
push
dec
xchg
shl
xor
clc
xor
cs
cmp
xor
xor
jno
cmp
add
out
mov
sbb
fnsave
sub
push
in
xchg
bswap
dec
add
mov
jns
push
cld
imul
jge
jmp
ds
dec
xlat
(bad)
gs
div
sub
jge
outs
rcl
or
push
adc
push
sar
retf
aaa
(bad)
xor
test
dec
add
mov
mov
dec
pusha
imul
lods
push
(bad)
dec
pushf
jo
retf
dec
adc
inc
add
fwait
pop
adc
int3
push
ret
popa
movs
rol
jle
loop
call
leave
adc
sbb
fcom
arpl
jbe
mov
and
mov
push
cs
adc
jecxz
bound
inc
aas
push
adc
fst
pop
xchg
push
jl
or
(bad)
das
shl
inc
(bad)
popa
jge
outs
dec
and
sbb
fidiv
scas
out
and
aam
mov
loope
adc
jl
in
xor
or
add
ret
push
in
xor
and
mov
sub
xor
mov
es
cmp
(bad)
jmp
leave
lods
cld
lahf
xchg
es
add
xchg
mov
cmc
in
retf
imul
scas
xchg
mov
loope
fiadd
dec
imul
int
cmp
dec
pop
outs
mov
xor
pop
sub
xchg
into
(bad)
dec
and
cmp
dec
cmc
jns
mov
cmps
movs
inc
xchg
fidivr
add
dec
jno
sub
or
sub
push
inc
add
ds
mov
adc
cmp
into
adc
popa
mov
stos
aam
(bad)
or
ret
pop
setl
out
mov
dec
and
imul
icebp
sub
and
and
pusha
gs
fld
xor
into
movs
xor
popa
cmp
mov
cmp
cmp
adc
inc
xchg
ror
cmc
ret
call
jmp
aad
mov
sbb
push
mov
stc
out
jae
add
daa
jmp
jg
inc
in
xchg
mov
push
push
into
ffreep
lds
idiv
fwait
(bad)
bound
mov
loop
adc
push
xor
mov
jmp
mov
rcr
add
sub
pop
mov
or
push
mov
sbb
movs
pop
push
jno
fcmovnu
or
pop
sbb
scas
inc
repz
mov
std
pop
movs
(bad)
cli
adc
ficom
lods
mov
int
scas
cld
call
cmp
sbb
cmps
fnstcw
sbb
sbb
aaa
mov
inc
push
mov
sub
sbb
pop
xchg
sub
jmp
gs
mov
push
fcomp
jb
push
sub
mov
pop
mov
cmp
push
and
mov
cmp
adc
mov
out
lds
xor
enter
adc
mov
push
movs
add
stc
sbb
jno
neg
fs
sub
dec
and
push
sub
test
aam
ja
cmps
jmp
and
pop
popf
cli
push
lds
add
sub
and
les
push
xchg
sub
xchg
xor
aad
inc
in
test
cmps
ins
popa
daa
mov
xlat
out
dec
inc
div
push
pop
jno
xchg
jmp
sbb
lahf
push
test
dec
mov
xlat
sbb
icebp
sbb
mov
jno
push
inc
into
jno
into
jns
pushf
mov
mov
push
pop
fimul
push
hlt
push
(bad)
add
or
mul
xchg
xor
jbe
or
push
aad
in
jb
mov
pop
loope
cmp
xor
and
cmp
into
pop
sahf
lahf
or
mov
loopne
xchg
cmp
pop
cmc
int3
cwde
lods
sbb
sahf
or
push
add
hlt
push
rol
adc
mov
std
inc
aam
ds
rol
fidiv
enter
push
(bad)
dec
fild
xchg
add
iret
test
dec
add
popa
cmp
and
loopne
mov
dec
mov
loope
fistp
(bad)
out
aaa
sbb
xor
sub
mov
jg
sbb
mov
lods
sahf
mov
inc
sbb
cli
mov
push
xchg
stos
(bad)
and
mov
int3
mov
mov
dec
in
sahf
push
(bad)
sub
scas
jne
inc
sbb
(bad)
jnp
scas
push
xchg
inc
jecxz
(bad)
and
add
pusha
sbb
(bad)
lock
pop
jl
inc
call
outs
cmp
iret
mov
sbb
ins
(bad)
out
dec
icebp
and
xchg
loop
mov
push
push
push
pop
sbb
sbb
xchg
in
add
push
lahf
adc
lahf
or
mov
outs
cmp
cmc
out
mov
mov
cmp
jo
sbb
mov
xor
div
in
cdq
repnz
dec
jo
jne
cwde
retf
xor
inc
imul
sub
xchg
(bad)
sub
int3
xor
clc
rol
dec
bound
fidivr
jle
inc
std
mov
adc
mov
pop
loopne
or
out
pop
out
shl
mov
add
jae
hlt
xor
stos
and
shr
retf
mov
jp
sub
outs
std
aad
nop
mov
shl
repnz
sbb
das
jbe
cmps
adc
ins
sbb
ds
dec
test
add
out
leave
ja
push
nop
cmp
cmp
add
mov
push
pop
add
jmp
sbb
pop
xchg
cmp
jg
xor
or
imul
gs
out
and
in
test
or
sbb
pop
lea
in
mov
vmovd
aas
cmps
xor
cmp
rcr
imul
mov
retf
fild
dec
mov
adc
mov
push
jp
sub
add
mov
mov
stos
xor
retf
stos
popa
and
test
in
loop
cmc
rol
jns
xor
lea
dec
or
ret
scas
das
dec
sbb
iret
mov
mov
repz
out
add
(bad)
push
push
pushf
call
daa
dec
les
out
fcomi
xchg
cmc
dec
lds
inc
inc
fidiv
ds
movs
mov
imul
adc
fldcw
sub
push
call
loop
pop
rcr
(bad)
cld
cdq
cmp
mov
jge
sub
loop
xor
fist
dec
sbb
dec
mov
outs
mov
popa
cld
adc
dec
adc
mov
cmp
mov
adc
inc
mov
add
sbb
in
das
pop
mov
pushf
mov
cwde
lods
cld
arpl
imul
js
div
fist
nop
data16
pushf
adc
sub
pop
cdq
in
inc
int
cmps
sub
adc
or
test
(bad)
popf
retf
loop
sub
xor
pushf
out
dec
lock
push
es
or
jecxz
lods
loopne
addr16
mov
pop
and
push
in
ds
lds
pop
int3
inc
pop
sub
adc
std
cmp
push
mov
xchg
leave
mov
rcl
xor
imul
jmp
push
or
add
or
push
in
mov
out
fidiv
inc
push
lea
test
and
sub
ror
and
add
mov
pop
sbb
out
sub
cmc
add
mov
repnz
inc
sub
pushf
xchg
mov
mov
in
push
xchg
jle
push
ret
leave
sub
cdq
nop
daa
pusha
mov
outs
test
xchg
(bad)
mov
cmp
and
inc
shl
fwait
arpl
mov
fisttp
mov
add
sub
pop
cld
jne
inc
sbb
cmp
imul
jne
xlat
cmp
lock
test
jge
add
lock
test
mov
clc
cmps
adc
inc
inc
or
pop
mov
repnz
pop
xchg
imul
(bad)
rol
inc
mov
xchg
mov
ins
and
fdivr
lock
lds
sahf
nop
into
pop
jns
jg
xlat
and
cs
jle
lahf
mov
jp
scas
mov
lock
push
push
cld
push
jmp
pop
pop
in
das
dec
out
aad
fisub
xor
lea
mov
stc
push
fwait
retf
inc
cmp
movs
adc
fidivr
cmp
ss
cdq
bound
fst
add
cmps
int3
js
pop
or
pusha
int
inc
push
fcomp
add
xchg
push
retf
outs
add
rcl
imul
xchg
mul
(bad)
and
movs
add
ins
out
fiadd
sbb
or
mov
jno
push
and
mov
dec
hlt
sbb
push
cmp
or
je
sbb
call
and
mov
stos
mov
dec
add
or
push
(bad)
jl
cmp
or
ins
int
mov
test
arpl
jns
mov
(bad)
ds
std
mov
retf
xor
dec
(bad)
xchg
test
dec
xor
sar
sbb
jl
inc
push
mov
stc
dec
js
aas
mov
mov
fsub
sbb
mov
sbb
les
push
sbb
(bad)
in
sbb
xchg
sub
bound
sub
outs
push
in
push
inc
jo
pop
test
test
dec
inc
aam
dec
sub
aam
mov
mov
gs
in
mov
cdq
sti
not
sahf
push
movs
out
sbb
xor
adc
xor
in
sub
jp
mov
in
jae
push
in
xchg
in
mov
outs
sti
cmp
cld
hlt
and
repz
in
adc
and
scas
push
or
mov
and
mov
jmp
js
fstp
ins
push
jle
add
fimul
dec
jecxz
xor
fist
fmul
bound
jmp
retf
daa
inc
jbe
test
xor
(bad)
out
fnsave
cmp
add
push
xchg
ja
mov
pop
xchg
jmp
nop
das
mov
into
xchg
jb
xor
ds
jl
lea
xchg
jno
lods
das
ds
arpl
stc
cmps
dec
fwait
jbe
mov
clc
lods
out
pop
mov
push
xor
jl
jge
cmp
adc
inc
pusha
dec
mov
cmp
retf
cld
gs
xor
stos
aam
push
xchg
stc
pop
shl
fistp
sbb
mov
sbb
jo
jne
dec
dec
sbb
neg
push
dec
test
cwde
stos
loope
push
xor
xchg
in
rcr
out
jne
out
sbb
into
hlt
xchg
ror
xchg
mov
out
(bad)
jmp
dec
rol
mov
mov
nop
fsubp
fnstenv
mov
test
out
mov
mov
js
sbb
push
std
pushf
in
adc
bound
imul
js
lea
lock
sbb
lahf
xor
pop
fwait
test
mov
cmps
or
or
adc
pop
mov
scas
jp
retf
js
sub
mov
add
shr
ins
add
call
adc
mov
push
pop
add
hlt
or
fnsave
(bad)
jle
fdivr
test
cmc
adc
mov
pop
lock
and
loope
adc
movs
ins
je
add
dec
jle
sub
or
pop
mov
jmp
xchg
xchg
xlat
pop
xor
nop
sub
sbb
and
and
push
xlat
jb
jns
ret
dec
adc
adc
pop
mov
scas
lds
inc
push
mov
mov
shr
push
cld
jbe
jp
jmp
idiv
fucomp
push
adc
retf
mov
iret
push
jmp
push
lock
inc
shl
jno
fistp
inc
fwait
xchg
loopne
and
retf
hlt
pusha
mov
sar
retf
iret
lds
stc
mov
retf
fist
cmp
dec
or
mov
mov
adc
sub
mov
pop
es
add
outs
jp
mov
arpl
sub
fimul
(bad)
idiv
sbb
retf
dec
xchg
popf
js
sbb
xchg
mov
loope
and
aas
xchg
sbb
and
pop
add
in
xchg
and
gs
xchg
inc
fdiv
(bad)
int
dec
sub
dec
loop
dec
adc
or
mov
scas
bswap
jbe
out
ss
popf
xchg
mov
shr
push
pop
xlat
sub
ja
bnd
cli
jo
fstp
fcom
retf
push
clc
das
pop
repnz
das
movs
dec
jns
sar
mov
movs
fcmovu
and
shl
ret
icebp
cmc
or
jg
hlt
mov
mov
pop
(bad)
push
cmp
mov
mov
push
fcmovu
repz
mov
gs
hlt
loopne
and
test
clc
dec
repz
lds
test
mov
sub
xchg
fsubr
out
dec
test
aam
sar
sub
out
aaa
stos
shl
(bad)
faddp
(bad)
xor
fisubr
sbb
rcl
pop
ret
leave
mov
push
sbb
mov
sbb
test
mov
dec
nop
shl
movs
mov
inc
mov
int
ja
mov
les
mov
xor
push
mov
sahf
push
fcmovb
rcl
arpl
add
cli
mov
fldenv
movs
adc
sbb
jg
out
repz
rcl
pop
(bad)
out
or
mov
nop
iret
(bad)
pop
inc
lea
daa
fwait
aas
or
or
retf
xchg
ror
xor
scas
cdq
fcom
sbb
jmp
xlat
dec
sbb
aad
fisubr
loopne
xchg
movs
in
shr
mov
clc
inc
in
nop
(bad)
adc
outs
(bad)
aam
mov
xor
dec
lahf
stos
mov
jae
fsub
into
int
in
sbb
xchg
clc
push
push
push
imul
out
cmp
mov
mov
movs
dec
loopne
daa
lock
fdivr
das
lods
not
repz
jne
sub
cdq
addr16
(bad)
out
inc
repz
dec
or
pop
push
adc
jbe
fwait
xor
mov
loop
gs
mov
(bad)
mov
mov
scas
sahf
in
adc
push
dec
jae
xchg
push
sbb
retf
in
or
in
test
idiv
jnp
ins
loop
push
imul
loope
loope
or
sub
and
call
cmps
lea
mov
sub
in
dec
xor
cmp
in
ins
js
ret
fwait
pop
mov
xchg
xor
mov
xor
div
daa
mov
mov
push
dec
rol
add
pop
test
dec
repz
(bad)
mov
cwde
inc
(bad)
rcr
popf
aad
pusha
ja
add
pop
(bad)
movs
cmps
cmp
xchg
jo
cmp
push
cs
jl
test
ret
aad
pushf
sub
jns
mov
cld
pop
lods
lds
daa
jge
mov
push
pop
jecxz
push
cmp
xor
aaa
repnz
cmp
clc
fs
mov
jge
or
jno
xchg
and
add
push
xchg
(bad)
mov
repnz
int3
popa
or
push
sbb
push
add
jmp
push
mov
inc
out
jno
out
push
xor
cmp
mov
mov
xchg
jno
mov
inc
push
mov
pop
add
or
mov
dec
out
dec
mov
mov
enter
or
movs
sti
rcr
adc
mov
sub
adc
fwait
(bad)
adc
push
push
shl
cmp
cdq
push
adc
ffreep
aam
xchg
(bad)
aam
pop
test
pop
mov
inc
mov
jns
cs
mov
adc
int
push
dec
mov
sub
stc
out
(bad)
cdq
push
mov
div
rol
adc
jle
inc
mov
add
mov
ins
pop
adc
add
popf
aad
pop
out
add
imul
mov
pop
sbb
sahf
cmp
dec
mov
jge
sbb
jbe
out
adc
std
outs
movs
jge
or
sub
std
or
das
pop
push
lods
push
xor
dec
je
mov
mov
adc
fst
test
xor
sbb
scas
fldenv
rol
mov
pop
shr
jae
icebp
inc
push
cmp
scas
gs
inc
retf
fbstp
lds
mov
xchg
bound
aad
stc
dec
(bad)
cmp
add
jp
xchg
and
or
push
cdq
ret
xchg
sub
xchg
repnz
or
psrld
sbb
xor
xor
jp
pop
inc
and
inc
js
xchg
push
push
or
cs
push
cld
xchg
pop
dec
jno
lods
push
sahf
inc
dec
jno
push
call
mov
cmp
xchg
sub
lods
sub
cmp
inc
loopne
stos
jmp
xchg
arpl
test
mov
(bad)
(bad)
push
fsubr
adc
in
or
mov
pop
add
sub
cmc
jmp
cmp
cdq
adc
xchg
dec
and
xchg
popa
sub
xchg
ins
cmps
push
lds
pop
adc
push
xchg
xchg
pop
jg
add
std
cmp
rcr
pop
(bad)
jae
xor
pop
push
imul
out
xlat
mov
jge
je
(bad)
in
in
inc
out
fidivr
stos
mov
or
and
inc
cli
blcmsk
mov
inc
xchg
mov
mov
ja
out
lods
mov
dec
movs
movs
xor
xchg
je
fmul
outs
out
gs
(bad)
pop
das
iret
call
rol
jmp
ja
inc
adc
push
add
data16
xchg
or
mov
cmp
repnz
fld
push
push
movs
mov
mov
retf
in
mov
ret
xor
out
int3
pop
add
jb
sub
inc
dec
jo
sbb
jle
jle
push
into
stc
add
mov
dec
ret
and
mov
pushf
push
movs
xchg
outs
aad
adc
(bad)
aam
rol
sbb
out
(bad)
loopne
cld
(bad)
scas
and
ja
mov
ins
or
hlt
aas
fiadd
cmc
inc
shl
or
fcomp
in
xchg
mov
adc
xlat
xchg
lahf
ds
mov
jle
adc
cmp
ins
xor
retf
mov
arpl
mov
out
popf
out
jge
xor
mov
jle
cmps
sbb
push
dec
stos
and
push
dec
ins
fbstp
aad
aad
aas
sub
adc
and
repz
pop
(bad)
jp
pop
sbb
mov
adc
adc
into
sub
jo
lods
dec
jmp
sbb
aaa
movs
shl
cmc
adc
das
push
mov
enter
dec
stos
(bad)
mul
and
mov
fnstcw
mov
int3
pop
cli
mov
dec
imul
shl
call
repnz
cld
add
push
stc
and
movs
push
cmovl
mov
cwde
mov
mov
cmc
sub
and
mov
std
mov
loope
mov
sbb
pusha
enter
(bad)
scas
xor
js
repnz
push
cmp
jmp
out
jl
les
std
ins
mov
movhps
dec
popa
adc
call
dec
test
fmul
in
jle
stos
mov
pop
ss
xchg
fld
test
sbb
(bad)
nop
stos
adc
fadd
cmp
mov
jb
pop
das
pushf
ret
adc
mov
stos
(bad)
xor
into
std
test
or
imul
sub
rcl
dec
push
fdivr
xchg
aam
(bad)
and
mov
mov
imul
mov
mov
lods
adc
addr16
jne
sbb
mov
sbb
add
iret
add
test
and
or
in
xchg
mov
loope
cmp
leave
es
mov
push
pop
and
jbe
adc
data16
lods
out
inc
popf
jmp
aad
test
pushf
push
adc
loop
xor
fdiv
mov
sbb
jnp
xor
mov
add
hlt
xor
call
leave
addr16
test
into
fldl2t
cmp
push
or
mov
fild
jnp
es
mov
xor
xor
mov
lods
int3
lock
call
out
pop
movs
mov
mov
rdmsr
jo
std
int
les
push
sbb
popf
or
push
sub
movs
lea
cwde
jecxz
inc
cmp
inc
(bad)
pop
ret
clc
ret
retf
into
faddp
mov
in
maskmovq
pop
stos
dec
push
pusha
push
jnp
sub
out
sub
xchg
mov
and
ins
push
ds
imul
ss
jp
ds
mov
mov
adc
jmp
xchg
jb
pop
mov
popa
sub
int
shl
cmp
inc
fst
lods
loope
ins
xor
ss
es
adc
sub
std
cdq
repnz
addr16
not
jne
lahf
add
cmp
(bad)
mov
cmp
mov
in
xchg
mov
pop
gs
int3
inc
out
dec
aas
sub
pop
jnp
add
xchg
retf
imul
popf
call
pop
shl
stos
mov
(bad)
into
push
or
sub
xchg
mov
scas
out
stc
and
leave
xchg
shl
lods
pop
push
imul
sub
ret
lock
mov
push
dec
in
mov
mov
inc
xchg
rcl
in
push
sub
push
sub
(bad)
repz
in
(bad)
and
push
test
in
jg
fsub
xor
cmovs
fadd
cmp
or
xchg
test
hlt
loope
or
scas
mov
and
mov
cmp
cpuid
fdivr
mov
scas
dec
fimul
lods
fbld
and
ins
call
and
jl
fadd
repnz
imul
jmp
pop
fsub
sub
int
bound
inc
fild
lea
ffree
popf
out
adc
loop
or
and
sub
sub
ins
mov
mov
and
lahf
idiv
and
scas
jg
fild
shl
xor
movs
call
pop
popa
adc
clc
es
or
into
xchg
aad
sbb
sbb
xchg
pop
cmp
arpl
arpl
xchg
out
xchg
out
push
pop
test
(bad)
(bad)
out
sub
cmp
aaa
or
adc
and
cmp
jmp
fsubr
jg
add
sub
aad
sbb
ins
mov
and
neg
inc
xchg
call
sbb
mov
xchg
pop
xchg
rcr
rcl
xor
sti
or
adc
cmps
imul
icebp
js
and
jp
movs
and
(bad)
dec
dec
cdq
popa
div
jo
cmp
or
or
stos
xlat
cmp
fidivr
enter
lods
imul
mov
pop
adc
jns
fwait
scas
add
rcr
or
xchg
cmp
push
movs
pop
scas
fsub
dec
jmp
xor
ins
scas
(bad)
ret
out
(bad)
mov
push
or
stc
jnp
cli
inc
scas
mov
pop
jmp
xor
or
bound
dec
jle
and
popa
push
xchg
mov
xor
scas
inc
idiv
je
loopne
leave
test
sub
or
xchg
sahf
shr
or
cwde
bound
out
les
ja
sbb
mov
pop
xor
add
outs
lea
sahf
sahf
cmps
dec
mov
jmp
pop
mov
test
push
das
adc
mov
push
sbb
sub
xchg
sub
cmp
stos
jnp
scas
and
ret
fsubr
cwde
dec
loop
xchg
or
int3
add
pop
inc
bound
xor
call
fwait
in
shl
jp
dec
push
das
int3
icebp
out
addr16
sub
and
or
mov
push
or
fstp
add
rol
test
fst
out
or
test
out
(bad)
push
pop
(bad)
mov
fwait
mov
seta
sub
movs
inc
inc
fwait
mov
jno
retf
push
push
xor
add
mov
pop
int
mov
xchg
shr
mov
jbe
push
mov
arpl
lahf
movs
or
test
and
inc
ins
mov
lds
mov
push
or
dec
(bad)
or
push
adc
ins
es
fidivr
mov
test
mov
jle
out
daa
mov
dec
cmp
mov
repz
or
scas
xor
inc
sub
mov
mov
cmps
mov
cwde
imul
ds
rcl
dec
cwde
dec
test
mov
and
lods
sub
dec
movs
adc
call
sub
cdq
jo
movs
cli
xchg
adc
aad
and
ins
push
inc
adc
dec
or
mov
adc
xlat
fwait
mov
xchg
ins
and
test
clc
mov
pop
leave
sub
and
fwait
jmp
mov
int3
sbb
popa
mov
and
fisub
sbb
cmc
push
aad
imul
shr
pushf
jnp
ja
out
lds
push
enter
jbe
retf
ret
mov
inc
inc
xchg
stc
cmc
loopne
jmp
cdq
jp
push
adc
inc
call
hlt
mov
xchg
movs
bound
mov
lahf
gs
cmp
and
and
pop
add
and
shl
mov
(bad)
inc
aad
cdq
mov
jp
cli
jae
sub
push
xchg
popa
adc
aaa
call
retf
addr16
aas
mov
rcl
add
mov
cmc
or
scas
jp
mov
outs
ret
jb
push
mov
sub
call
push
xchg
dec
cmp
out
loope
pop
sub
clc
pop
xchg
push
jbe
iret
jbe
inc
shl
dec
push
out
fmul
push
pop
mov
jmp
mov
jge
xor
pop
cs
xor
loope
push
call
icebp
shl
push
xor
inc
or
jbe
ret
int3
xlat
scas
xor
fiadd
(bad)
sbb
xchg
adc
jns
popf
cdq
es
push
or
mov
pop
mov
sbb
ss
sti
jnp
mov
xchg
and
mov
das
fwait
mov
xchg
mov
pop
dec
sub
xchg
(bad)
pop
je
(bad)
jns
cmp
inc
jae
mov
pop
js
cmp
enter
call
std
and
push
loopne
xchg
mov
xchg
sub
nop
sti
push
repz
mov
div
std
xchg
shl
mov
(bad)
and
add
push
push
xor
jae
addr16
stos
jbe
leave
add
mov
jmp
sub
or
xor
popa
sbb
mov
inc
jbe
or
mov
fimul
test
test
add
fbstp
pop
add
ins
lods
mov
cmp
test
push
(bad)
mov
(bad)
push
scas
test
cmps
pop
dec
pop
jae
inc
sahf
ja
mov
cmc
int3
mov
into
inc
(bad)
outs
bound
jbe
(bad)
leave
addps
test
sbb
call
mov
add
or
ins
push
lea
adc
lds
iret
scas
div
mov
loopne
in
add
stos
inc
(bad)
mov
cmp
icebp
cmp
jecxz
mov
pop
test
or
aas
mov
addr16
xchg
sbb
pop
mov
add
lahf
arpl
bound
cs
inc
stos
in
add
push
push
cli
sub
and
mov
xor
aam
sub
sti
push
int
jbe
xchg
push
data16
hlt
(bad)
add
addr16
int3
imul
stos
xchg
cdq
mov
stos
cmp
ins
jnp
lods
push
adc
and
fdivr
cld
push
jmp
dec
arpl
dec
xchg
cmp
les
shl
xlat
mov
adc
fmul
inc
adc
out
test
call
add
or
ds
fdivr
mov
dec
sbb
loopne
push
push
out
sub
mov
inc
movs
xchg
adc
mov
jmp
xor
lds
push
and
jb
comiss
(bad)
dec
shl
xchg
pushf
sub
cdq
jl
dec
mov
jecxz
clc
push
push
out
mov
stos
pop
les
xchg
call
(bad)
lock
repz
mov
xor
mov
push
cmp
cmpxchg
jmp
cwde
(bad)
sti
dec
fld
das
adc
cmps
cdq
(bad)
fucomp
adc
jae
sub
in
and
dec
pushf
add
pop
or
push
ins
ins
and
pop
sbb
inc
in
push
gs
(bad)
repnz
or
mov
mov
pop
cld
lods
iret
adc
and
mov
add
add
push
dec
lds
and
leave
xor
push
or
outs
es
mov
cmp
xchg
(bad)
stc
push
xchg
push
mov
push
(bad)
lahf
sub
xor
sar
xor
in
rol
out
pop
sbb
pop
xor
push
retf
dec
stos
es
aaa
out
into
add
sbb
cmc
mov
inc
sbb
stos
push
std
push
es
(bad)
ins
cmp
gs
lahf
push
aaa
mov
push
and
or
imul
pop
or
push
popa
fmul
sbb
xlat
dec
int
pop
pop
dec
push
outs
and
adc
xor
or
sbb
retf
adc
fcomp
and
sub
lea
je
jmp
mov
xor
lods
xor
pusha
retf
pop
jne
fdiv
cs
std
cs
xor
(bad)
iret
into
rol
in
and
imul
(bad)
int3
push
les
cdq
cmps
jmp
pop
fs
xor
movs
data16
or
es
xchg
lods
dec
iret
mov
ficom
in
cmc
outs
sub
inc
pop
push
dec
pop
xchg
lahf
mov
push
aaa
shl
inc
test
enter
fdivr
inc
out
dec
jo
icebp
ret
jl
pop
jle
mov
cwde
into
dec
dec
lds
mov
jb
cmp
add
fld
ror
cmc
or
fld
fnstsw
shr
(bad)
enter
out
ret
mov
je
retf
popf
ds
xor
or
(bad)
jecxz
ins
mov
xchg
cs
inc
ret
in
push
dec
call
jmp
mov
(bad)
mov
xor
std
stc
call
adc
xchg
addr16
icebp
imul
jmp
sbb
test
and
je
push
jmp
lock
ins
popf
femms
pusha
fcos
jmp
out
add
pop
xchg
push
xchg
sub
(bad)
mov
outs
xlat
cmp
(bad)
into
lea
push
xlat
int3
(bad)
adc
jecxz
rol
stos
outs
dec
jbe
push
or
push
sbb
sub
inc
xchg
outs
(bad)
mov
repz
adc
aas
shr
xchg
add
or
jbe
inc
test
pop
(bad)
call
pop
inc
fnstenv
pushf
fisttp
fwait
call
push
pop
dec
int
xor
les
add
int3
outs
push
jo
xor
dec
das
and
and
push
pop
and
lods
test
mov
jmp
mov
(bad)
(bad)
adc
mov
pop
je
idiv
xchg
sbb
imul
mov
xor
addps
mov
sub
(bad)
cmp
pop
cwde
push
sub
dec
add
adc
mov
dec
movs
mov
mov
in
add
mov
sub
aas
cli
push
das
or
cmp
(bad)
repz
pop
push
pop
shl
aaa
test
pop
adc
sti
jge
jbe
bound
ds
xor
into
out
outs
sub
xor
mov
rol
scas
xchg
cmp
mov
mov
stos
pop
mov
aas
inc
pop
ins
jmp
push
mov
repnz
mov
push
fistp
mov
jae
retf
sub
cdq
cmp
iret
sub
or
push
add
pop
pop
xor
push
js
repnz
xchg
jb
pop
dec
leave
(bad)
cmps
add
int
icebp
and
lea
jns
jne
dec
rol
mov
xchg
xor
sbb
in
ins
or
pop
popa
imul
fwait
in
sar
pop
out
mov
enter
hlt
mov
xor
mov
or
je
inc
dec
mov
imul
retf
div
loope
jne
jno
movs
lea
lods
sbb
sub
cs
loopne
ja
xor
cli
jl
push
sbb
xchg
int3
dec
or
and
mov
jge
stos
fadd
fcmovbe
fs
pop
push
xor
mov
sub
mov
mov
push
movs
add
jg
pusha
pop
arpl
icebp
scas
lods
repnz
adc
and
sbb
stos
mov
sbb
outs
cmps
add
adc
fmulp
mov
or
repnz
mov
mov
lods
xchg
fbld
push
pop
out
sbb
cmp
pop
sub
mov
add
jne
popa
fbld
xchg
adc
int3
and
push
cmc
out
or
test
pop
loope
ror
std
sub
mov
scas
nop
(bad)
jg
out
stos
daa
and
cmp
hlt
inc
or
xchg
add
idiv
enter
scas
dec
or
pavgw
out
jbe
adc
jne
stos
repz
pop
pop
out
inc
(bad)
xchg
push
scas
sub
mov
mov
fstp
stos
xor
lds
jecxz
push
push
aas
das
or
xlat
xchg
rol
fidiv
cmp
and
idiv
mov
dec
cld
movs
int3
xchg
fscale
xor
sbb
int
push
or
repnz
pop
lea
(bad)
or
(bad)
cmc
sbb
fnstenv
iret
jmp
out
ficomp
outs
xchg
dec
push
mov
iret
cwde
push
sbb
mov
repz
mov
mov
loope
sbb
movs
jns
sbb
cmp
leave
dec
pop
and
pushf
add
out
jl
loope
jg
add
jp
dec
jle
or
daa
push
test
mov
mov
adc
mov
sbb
mov
cmp
cmp
loop
xchg
add
ins
add
ror
mov
mov
(bad)
and
aad
aaa
cwde
xchg
xor
bound
imul
call
mov
push
retf
dec
lods
push
jbe
popf
mov
jge
std
adc
or
repnz
fsubr
ss
shl
mov
clc
adc
scas
push
cmc
into
jmp
sub
loope
nop
popf
cdq
mov
repnz
adc
rcl
cmp
xchg
mov
hlt
je
jp
and
push
mov
sub
fidivr
pushf
adc
or
aas
xchg
pop
icebp
dec
cld
mov
pop
and
retf
test
jae
test
scas
mov
gs
or
mov
mov
jae
repnz
ins
(bad)
jmp
int3
adc
adc
inc
xchg
(bad)
cli
out
nop
jbe
and
sbb
jg
(bad)
xchg
movs
mov
cs
jmp
es
lea
push
jmp
sbb
push
push
xchg
xchg
sub
push
xor
xor
cmp
cdq
xor
or
lahf
fld
inc
shr
mov
add
mov
inc
cmp
add
dec
or
mov
jg
imul
stos
dec
push
and
xchg
jns
into
out
imul
nop
fnsave
dec
lea
jmp
nop
ror
cwde
(bad)
mov
or
jp
(bad)
(bad)
and
inc
sbb
lds
jl
jo
mov
xchg
mov
push
shl
les
mov
int3
push
lea
lds
dec
sub
and
outs
call
pop
mov
popf
xchg
mov
ins
fcom
ja
ss
je
push
fdivr
rcr
inc
mov
adc
jne
pop
mov
xor
cmc
pop
mov
or
fmul
mov
adc
inc
jecxz
cmp
scas
push
jmp
out
sahf
pop
xchg
shr
cmp
inc
or
mov
not
enter
test
in
mov
into
sub
fstp
sbb
jnp
xor
or
jecxz
stc
or
mov
das
pop
shl
jp
cmc
cmp
xor
sbb
cmp
cmp
xchg
movs
popf
jg
stc
(bad)
loope
mov
jmp
loop
sbb
jno
add
std
push
and
mov
test
lods
test
(bad)
sub
lods
mul
mov
ret
and
sub
test
xchg
shl
imul
cmp
aas
scas
dec
xor
mov
(bad)
les
pop
lea
pop
xchg
cdq
jbe
sub
or
and
and
jns
inc
(bad)
and
xchg
cmp
loopne
mov
fadd
call
and
mov
adc
dec
call
stos
inc
or
xchg
push
loopne
and
sbb
xchg
retf
ins
test
push
adc
mov
ins
loopne
add
data16
sbb
push
inc
sub
aad
pop
stc
call
fimul
sti
xadd
mov
push
rcl
int3
sub
lock
mov
fs
adc
mov
pop
shl
test
xchg
adc
mov
mov
dec
leave
retf
out
icebp
loope
test
push
fisttp
pop
stc
shl
add
fdivr
out
xchg
std
push
xor
sahf
mov
push
pop
cld
push
add
xor
les
pop
retf
stc
dec
mov
push
jb
and
jl
pop
movs
addr16
fsubr
add
push
jo
clc
cmp
stc
dec
daa
sub
icebp
add
pop
mov
pop
icebp
mov
retf
xchg
gs
lods
(bad)
lock
mov
ins
cmps
movs
imul
out
xchg
inc
dec
fwait
dec
in
addr16
xchg
cs
adc
mov
pop
sbb
push
add
cmps
push
fnsave
dec
mov
ja
test
mov
cmp
pop
ds
popf
int3
(bad)
jge
jo
jecxz
mov
je
imul
into
push
aaa
lods
push
mov
mov
sub
mov
xor
gs
pushf
dec
mov
pushf
(bad)
(bad)
sbb
push
(bad)
push
retf
inc
sub
pushf
neg
dec
mov
add
test
inc
xchg
push
cmps
pop
out
mov
(bad)
jnp
inc
push
xor
call
das
mov
fcom
mov
gs
jmp
pop
mov
push
data16
pop
inc
adc
retf
xchg
pop
pop
jge
pop
in
pop
lea
push
pop
pushf
stc
popf
aas
mov
scas
data16
sbb
in
fsub
push
les
dec
fstp
daa
je
xor
mov
(bad)
jb
sub
icebp
imul
mov
cmps
mov
and
push
jmp
stos
mov
jns
pusha
jg
mov
cmp
into
test
mov
xchg
push
call
in
mov
addr16
stc
out
out
sbb
fmul
pop
jmp
sbb
adc
das
(bad)
push
xchg
cmp
movs
rdmsr
mov
fbld
and
inc
retf
inc
dec
(bad)
xchg
inc
(bad)
icebp
ds
ds
cmps
push
lods
mov
fsubp
sbb
xor
pop
xchg
sub
or
(bad)
jb
sbb
pop
mov
jnp
mov
movs
cmc
sbb
jle
add
rol
shl
push
icebp
pop
pop
popf
sbb
xor
adc
(bad)
js
mov
dec
cmp
and
cld
cmp
arpl
repnz
pop
add
sbb
xchg
dec
adc
pop
inc
pop
pop
push
gs
mov
call
sbb
dec
aaa
das
mov
lea
sub
mov
or
and
push
into
jb
popf
sahf
and
ss
pop
xchg
scas
adc
cwde
sbb
inc
stc
mov
(bad)
cmp
mov
imul
ja
fisub
dec
mov
dec
in
sub
dec
add
ja
mov
sbb
mov
stos
jnp
shl
mov
fst
fidiv
sbb
add
mov
sub
pop
neg
ret
(bad)
dec
and
lock
leave
cwde
movs
in
(bad)
enter
stos
cmp
mov
adc
inc
mov
sar
fcom
pop
sub
push
pop
shl
cmps
pushf
dec
and
fcomp
das
mov
push
scas
adc
mul
mov
icebp
mov
jmp
(bad)
popf
in
jae
ds
mov
call
adc
mov
shr
loopne
ins
nop
iret
cwde
sub
fwait
sbb
pop
fisubr
mov
ins
mov
dec
les
out
ror
sbb
jp
cmp
movs
jge
inc
and
cmp
inc
fld
scas
shr
inc
std
es
jae
(bad)
jne
jae
push
popa
out
inc
dec
int
adc
daa
inc
xchg
ret
ja
mov
sub
ins
cmovne
or
fs
out
mov
mov
(bad)
dec
lds
call
inc
dec
aaa
call
inc
or
mov
data16
adc
mov
push
mov
adc
or
test
test
cdq
mov
cmp
cmp
idiv
(bad)
repnz
pop
outs
in
jne
loopne
or
adc
adc
xchg
xbegin
and
(bad)
xor
xchg
push
js
(bad)
lock
or
jne
inc
lock
stc
push
movs
daa
jnp
arpl
pop
sbb
mov
retf
jnp
shl
fsubr
imul
mov
sbb
jp
in
cmp
jbe
out
or
xchg
repnz
and
mov
prefetchwt1
mov
cmp
pop
add
push
cdq
loope
pop
add
mov
cmps
mov
das
popf
mov
mov
sti
aaa
cmp
shl
pop
ret
(bad)
bound
xlat
inc
cmp
test
int
push
clc
cmp
popa
ret
push
cdq
sub
xor
inc
add
cmp
stc
push
mov
nop
mov
pop
sub
inc
adc
jo
addr16
cmps
push
jp
xor
jle
pop
mov
or
out
pop
bound
cmp
xchg
jns
mov
bound
mov
add
lahf
sub
std
jae
outs
aam
mul
(bad)
(bad)
mov
fdivr
push
cmp
push
rcl
xor
int
test
fiadd
dec
ret
call
int3
xor
push
mov
call
cwde
(bad)
mov
into
fmul
xor
fcomp
cs
mov
imul
dec
out
mov
scas
xor
push
mov
and
mov
ja
add
sub
cmp
mov
xchg
(bad)
pop
in
addr16
fsubr
mov
xchg
dec
loopne
ds
mov
mov
(bad)
xor
push
sub
out
pop
jnp
inc
jb
xchg
sub
mov
mov
movs
je
pop
cmp
bound
or
mov
and
inc
aas
mov
fisttp
and
xchg
cld
pop
and
ss
inc
sub
mov
push
ins
neg
ja
add
(bad)
mov
out
cmps
push
jbe
rol
(bad)
jne
cmp
sar
xor
inc
push
scas
mov
mov
lds
popf
adc
sub
cdq
in
ins
sbb
push
sub
mov
pop
mov
mov
push
rol
(bad)
cmps
jns
pop
xchg
push
adc
cmp
btr
loop
xor
jbe
pop
add
xlat
inc
out
cdq
ss
adc
jg
es
jg
es
sub
shl
sub
outs
dec
mov
adc
cmp
inc
das
and
ficom
push
repnz
sbb
retf
out
dec
mov
out
add
mov
sub
mov
mov
push
movs
loop
ret
mov
inc
push
jmp
(bad)
mov
sar
(bad)
jae
ja
or
adc
mov
cmp
sub
add
mov
adc
push
jo
mov
(bad)
inc
scas
inc
jo
inc
lds
mov
cmp
(bad)
mov
cmc
mov
xchg
pop
mov
cmp
and
cli
jle
jnp
mov
cmp
mov
jbe
sbb
pop
sbb
test
shr
ss
jne
and
or
mov
es
call
add
push
jnp
data16
sti
scas
pop
sbb
pop
push
xor
xor
cmp
(bad)
(bad)
mov
cmp
dec
lahf
add
ficom
lea
loopne
push
pop
xlat
jmp
push
in
out
push
sub
push
inc
ret
addr16
mov
xchg
repz
rcr
sbb
hlt
idiv
lds
and
push
pop
jl
addr16
ret
pop
out
stos
or
in
xchg
xchg
mov
popf
cmp
mov
dec
pop
clc
inc
sbb
or
orps
(bad)
stos
xchg
dec
aas
clc
pusha
and
or
jnp
and
add
les
xchg
test
lar
xor
movs
push
dec
sub
scas
aas
(bad)
sub
sub
mov
cmp
adc
cmps
sub
sub
or
add
clc
into
push
pusha
movs
fsubp
(bad)
push
inc
retf
(bad)
adc
pop
imul
ret
icebp
mov
mov
ror
or
inc
xchg
lods
(bad)
stos
pop
xchg
movs
inc
iret
inc
pop
rep
sub
sti
pop
jmp
hlt
rcr
cmps
pop
enter
fisttp
call
push
test
sbb
ret
inc
jle
std
jb
aaa
sbb
inc
int
mov
leave
out
adc
gs
scas
jmp
xchg
sub
retf
shl
pop
inc
cwde
adc
(bad)
cli
jmp
mov
push
mov
out
xor
push
push
lods
cmc
sub
repz
movs
xchg
arpl
pop
pop
neg
test
lahf
int
lods
outs
cmp
imul
push
sbb
arpl
enter
jl
enter
rcl
mul
fbstp
mov
cwde
push
stos
mov
pusha
and
movs
sub
and
cdq
lods
inc
enter
ja
retf
cdq
or
sub
call
stc
repz
pop
bswap
lahf
ins
push
mov
mov
call
aad
ret
add
outs
xor
divps
call
les
bound
sbb
jmp
xor
cmps
aaa
cs
lods
out
fucomip
jmp
xchg
hlt
xor
test
mov
imul
inc
gs
mov
push
xor
cmp
jbe
idiv
out
arpl
mov
xchg
fstp
push
mov
scas
lock
inc
enter
out
stos
cld
(bad)
cdq
sbb
lahf
xor
mov
mov
fdivr
mov
mov
mov
(bad)
cdq
or
in
mov
aad
mov
iret
test
movs
pusha
push
sub
pop
dec
sahf
cmp
pop
test
xchg
fcmovbe
lods
mov
fs
cmp
loope
iret
add
and
and
add
jno
(bad)
cli
xor
push
add
pop
(bad)
jmp
push
jno
adc
clc
aam
mov
and
popf
inc
sahf
addr16
xor
fwait
addr16
jmp
jle
pushf
mov
das
dec
jle
test
in
xor
test
lds
xchg
mov
in
cmps
sti
call
inc
leave
outs
inc
xchg
add
jecxz
in
pop
mov
ror
sti
es
ret
fwait
aam
pop
ins
mov
add
lods
out
and
adc
ret
sbb
adc
sbb
imul
out
stos
xchg
add
iret
out
push
dec
mov
add
(bad)
mov
rep
and
or
mov
ret
loop
shr
lahf
loop
icebp
and
rcr
lock
ret
test
inc
sub
fild
(bad)
mov
repnz
sbb
add
xchg
fadd
test
lds
in
xlat
push
inc
leave
int3
adc
add
dec
xchg
pop
shl
call
cmp
imul
xchg
popa
pusha
(bad)
rcl
inc
inc
mov
push
sub
sbb
nop
lock
shl
out
push
jb
pop
xor
dec
das
fwait
push
rol
pop
or
jns
mov
and
xchg
fmul
stc
cli
jbe
lock
ds
mov
mov
mov
std
push
jbe
inc
jl
inc
scas
inc
leave
and
in
out
leave
xchg
push
jne
cs
fucomip
out
xchg
sub
add
push
and
rol
out
xor
in
mov
or
shr
pop
mov
mov
inc
outs
in
cmp
int3
popa
sub
lahf
mov
fidiv
lods
mov
mov
xor
adc
lods
or
(bad)
fsubr
(bad)
jnp
adc
jmp
pop
mov
add
xor
cmp
xor
ror
retf
shl
sbb
imul
jae
push
xchg
or
mov
jne
or
lea
jl
dec
nop
lods
xor
fstp
mov
(bad)
pop
enter
jns
add
jle
(bad)
addr16
imul
stc
jecxz
and
push
lods
fstp
cmc
dec
pop
std
dec
xor
mov
sub
(bad)
icebp
adc
dec
sub
cli
mov
(bad)
adc
sub
cmps
jae
jae
add
outs
mov
and
add
fstp
push
xchg
rcr
lods
xchg
retf
adc
ss
adc
ret
arpl
out
push
call
imul
std
(bad)
cli
adc
ret
inc
mov
inc
sbb
aam
jmp
dec
cmps
out
movs
mov
cmc
jno
addr16
shl
mov
js
adc
aaa
test
stos
loopne
adc
clc
mov
retf
bound
cld
outs
shl
xor
pop
jbe
cmp
fs
and
inc
or
jmp
sub
fwait
add
and
cmp
mov
mov
and
iret
adc
rcl
ss
clc
adc
adc
das
push
mov
xchg
lods
jp
cdq
sbb
jmp
add
pop
(bad)
jmp
xchg
cmp
repz
popf
rcr
icebp
sub
mov
pushf
in
scas
and
fld
ror
mov
xchg
das
jecxz
or
dec
push
lahf
fnstenv
dec
sub
sbb
dec
addr16
inc
adc
mov
fist
retf
test
nop
out
xchg
jmp
(bad)
pop
push
in
lds
movs
sbb
jge
lock
call
pop
fdivrp
scas
push
imul
repnz
push
add
mov
inc
mov
pusha
ss
adc
xchg
pusha
aaa
lahf
mov
test
hlt
sub
or
arpl
test
push
dec
mov
jp
ret
cs
mul
dec
nop
nop
cdq
dec
mov
sti
aaa
add
jecxz
cmps
ror
cmps
pop
push
jle
mov
sub
push
(bad)
or
mov
xchg
loope
mov
mov
jb
ins
jae
inc
shl
sub
mov
adc
xchg
daa
loope
pop
aaa
sub
dec
mov
cli
std
or
jmp
cmp
jl
retf
sti
inc
push
jle
retf
mov
inc
cmp
enter
fistp
adc
push
imul
outs
loopne
xor
push
dec
clc
cmp
sub
ss
test
dec
pop
(bad)
mov
ins
sbb
pop
test
and
mov
sub
scas
enter
dec
adc
fs
loopne
dec
dec
cmp
mov
ins
pop
inc
mov
pop
jne
inc
mov
xchg
push
push
ret
dec
push
daa
stos
inc
repz
icebp
pop
(bad)
sbb
jae
push
fld
outs
inc
xchg
xchg
mov
adc
dec
mov
adc
mov
test
push
call
add
pop
aam
stos
aas
leave
icebp
lods
shl
xlat
int
add
xor
jmp
inc
test
push
scas
mov
xor
retf
xor
fs
stos
xchg
push
dec
iret
icebp
pop
push
sar
xchg
fadd
dec
loopne
mov
pop
int3
out
xchg
mov
xor
stos
or
out
lods
xchg
ins
inc
daa
pop
movs
jns
xor
mov
lods
sub
xor
fsubr
mov
clc
jae
jge
pop
scas
fs
sbb
sub
mov
mov
jb
push
clc
arpl
mov
rcr
pop
xchg
push
xor
dec
pop
mov
lods
mov
and
call
pop
mov
or
pop
adc
push
outs
pop
sub
pop
sbb
mov
lods
xor
jno
scas
in
cld
test
xchg
dec
pop
add
xchg
aam
fs
dec
push
dec
pop
ins
xchg
pushf
push
adc
std
and
rol
in
mov
pop
sahf
popf
out
fst
stos
cmp
(bad)
fldcw
movntq
je
push
xchg
mov
scas
das
mov
sub
jmp
cs
pop
(bad)
(bad)
ins
mov
adc
sub
sub
xor
adc
jmp
sbb
inc
sub
jno
mov
aas
int3
imul
add
mov
jmp
cmps
into
jmp
arpl
adc
addr16
sub
retf
sbb
clc
out
jmp
aaa
dec
mov
jns
sub
gs
(bad)
push
adc
pop
cmp
xchg
push
mov
enter
pop
sub
jle
fcom
shl
arpl
je
jmp
in
mov
mov
mov
and
movs
out
outs
hlt
or
xor
fucomi
jp
stos
adc
sub
mov
call
out
mov
mov
push
inc
xchg
sub
mov
test
shl
cmp
retf
xchg
adc
out
cwde
mov
inc
xor
leave
das
not
ins
repz
ins
int
bnd
(bad)
out
gs
sub
pop
cmp
sub
sbb
pop
or
in
inc
dec
push
ficomp
pop
lods
xchg
movs
adc
push
cdq
sub
arpl
loope
push
dec
je
add
gs
call
loope
aad
ins
xor
xor
clc
cmp
iret
mov
fs
popa
and
ins
ins
aas
repz
inc
inc
dec
push
or
pop
loop
sbb
xor
fcom
sub
shr
fdiv
or
xchg
cmp
mov
mov
sbb
push
and
mov
push
xchg
jmp
push
cld
in
mov
jbe
mul
xchg
fwait
inc
mov
(bad)
mov
inc
sbb
aad
fldcw
adc
pop
sbb
xor
fist
cwde
inc
xor
test
mov
call
retf
cs
inc
or
fiadd
xor
adc
mov
cmp
aad
sar
jmp
pop
inc
add
repnz
dec
mov
dec
into
xor
test
xor
cmp
mov
out
test
(bad)
mov
shr
ins
pop
xchg
sahf
out
nop
js
push
inc
lods
cmp
jecxz
cmp
jl
mov
pop
inc
test
and
repz
adc
push
leave
leave
jmp
cwde
in
fst
loope
adc
push
and
push
or
ins
into
xlat
adc
test
push
jle
ret
fisub
std
cmps
jle
mov
sbb
push
gs
test
or
sbb
pop
push
and
mov
je
add
jae
sbb
les
je
cwde
mov
ret
xchg
jns
in
mov
xchg
popa
mov
inc
mov
out
cmps
adc
je
retf
pop
addr16
cmp
shl
xchg
std
stos
mov
or
and
and
cli
pop
loope
enter
out
add
cmps
dec
adc
xor
cmp
fmul
mov
push
and
fbld
movs
pop
(bad)
jecxz
loope
and
jbe
push
pop
xchg
mov
push
out
cmp
mov
pop
ret
adc
loop
ret
call
mov
cmovne
jno
fdiv
stos
push
mov
xor
adc
frstor
popa
sbb
or
add
cmp
or
xchg
jae
mov
repz
call
adc
icebp
push
jns
lds
pop
xchg
scas
fdiv
data16
pop
pushf
jmp
mov
ret
xor
mov
fwait
push
mov
imul
xchg
xchg
cmp
inc
fwait
mov
pop
pop
mov
adc
xlat
addr16
dec
xchg
xor
push
fwait
out
jo
xlat
les
popa
and
adc
js
jnp
leave
and
div
mov
sbb
jnp
sbb
pop
lods
idiv
sub
cmps
and
shl
out
dec
jae
jg
clc
and
inc
or
scas
sub
or
sbb
pop
mov
outs
jge
in
adc
mov
and
pushf
cmps
call
sub
arpl
test
mov
pusha
jnp
push
pop
mov
dec
mov
mov
or
inc
mov
sub
pushf
mov
push
gs
dec
mov
icebp
imul
aaa
mov
pop
sbb
jb
inc
aaa
(bad)
idiv
dec
jl
or
add
push
xlat
mov
xchg
cmc
dec
popa
pop
sbb
imul
sbb
and
jmp
adc
dec
retf
lahf
mov
aaa
(bad)
shl
stos
lods
mov
es
lods
xor
or
xor
lods
dec
int
sbb
mov
or
pushf
jmp
test
inc
adc
pop
pop
mov
inc
bound
sbb
ss
cld
movs
dec
jp
neg
sub
pop
sbb
lahf
jns
js
cmp
xchg
push
or
sbb
sub
push
in
add
xchg
ret
cmp
push
push
ficomp
adc
pop
sbb
sahf
push
sub
aaa
repnz
jge
push
mov
inc
xor
cmp
js
mov
es
sbb
leave
movs
jge
mov
inc
stc
iret
mov
push
call
addr16
lods
stos
push
mov
(bad)
iret
xor
and
out
push
(bad)
dec
(bad)
push
dec
pop
xor
test
aaa
or
mov
int
jnp
sar
xor
cmp
ins
imul
scas
jb
hlt
mov
mov
xor
paddusw
or
xchg
adc
jmp
sub
movs
push
dec
and
mov
xchg
in
data16
jmp
xchg
test
sub
mov
adc
aaa
push
pop
aas
inc
je
call
dec
pop
mov
loope
cdq
push
xor
xchg
dec
pop
(bad)
jmp
jg
sub
sbb
out
test
in
xor
jno
int3
sti
cmp
pop
mov
adc
or
jg
jns
push
mov
ja
sub
ins
or
cli
mov
(bad)
nop
mov
lahf
cdq
dec
das
in
dec
jg
mov
lods
lahf
mov
adc
mov
in
iret
fst
test
jns
jmp
adc
and
inc
sbb
jg
loopne
xchg
pop
mov
pop
mov
fstp
push
ins
adc
inc
fbld
or
mov
cmp
aam
out
retf
adc
lods
not
jecxz
push
ja
fiadd
dec
mov
inc
mov
mov
sbb
rol
retf
cmc
inc
es
sub
or
pusha
imul
int3
adc
fcomp
int3
dec
outs
out
jno
jp
aam
loop
sbb
mov
pop
inc
mov
mov
pop
fsubr
or
adc
fisttp
xchg
shr
jbe
inc
nop
sar
clc
jne
out
leave
imul
(bad)
and
in
inc
dec
inc
pop
(bad)
jnp
jmp
or
into
cmps
xchg
or
inc
pusha
imul
test
loope
aas
mov
dec
xor
repnz
adc
fnstsw
cld
ins
xor
repz
mov
mov
jp
jge
mov
jmp
dec
movs
pop
mov
sub
inc
aaa
adc
dec
enter
scas
jae
ficomp
xlat
(bad)
jne
xor
mov
sub
adc
sub
add
aad
jae
fcomip
rcl
dec
jae
xchg
or
or
pop
pop
ret
xchg
mov
sub
stos
in
mov
(bad)
push
retf
aas
shl
addr16
mov
push
mov
fnstenv
jmp
xchg
and
(bad)
adc
mov
enter
push
aam
xor
mov
xchg
and
sub
shl
sub
test
jnp
sub
popa
mov
fbstp
cmp
dec
push
xor
in
int3
and
imul
push
fs
scas
movs
pop
aas
(bad)
out
mov
cdq
cmps
adc
xchg
icebp
jg
inc
mov
mov
les
push
push
outs
loopne
sbb
jp
push
jmp
sar
mov
jecxz
inc
daa
dec
in
mov
xor
fs
cmps
sbb
cmp
test
popf
outs
cmp
xor
leave
outs
cmp
dec
pop
sar
inc
mov
(bad)
pop
das
test
mov
mov
mov
loop
mov
mov
jae
sub
jge
loopne
fstp
pop
movs
inc
repnz
das
retf
mov
retf
push
inc
cmp
aam
mov
mov
mov
xchg
add
scas
dec
dec
pop
mov
aam
sub
inc
cdq
lock
or
add
dec
xor
cmp
dec
sbb
mov
sbb
jne
imul
test
push
mov
mov
dec
pop
retf
sub
lock
inc
hlt
js
add
pop
cdq
pop
or
popa
ja
test
inc
scas
dec
popf
add
(bad)
outs
retf
ja
mov
dec
push
sahf
and
push
mov
ins
pop
pop
mov
stos
sar
push
and
jo
sub
pop
in
ret
mov
mov
mov
je
arpl
mov
jne
repz
faddp
mov
bound
jmp
sahf
cli
(bad)
fmul
add
fadd
fwait
jo
into
sbb
sub
fistp
test
mov
add
test
ret
and
mov
ins
fdivr
xchg
mov
leave
pop
xchg
mov
sbb
cmp
(bad)
retf
scas
adc
scas
test
cmp
fcmovnu
dec
or
out
sbb
xchg
sub
ja
out
sub
and
das
push
pop
push
out
dec
rcr
jp
test
pop
cwde
mov
outs
aam
movs
in
mov
popa
xchg
fs
xor
(bad)
jns
and
call
or
xlat
adc
adc
mov
xchg
mov
mov
daa
fmul
mov
hlt
pop
and
add
and
add
lds
cmp
movs
inc
pop
or
xchg
cmp
push
mov
in
add
fadd
mov
mov
xchg
loope
mov
xor
sub
test
mov
imul
dec
outs
mov
jmp
xchg
frstor
lods
cmps
fidiv
pop
jnp
hlt
pop
mov
mul
xor
pop
fld
mov
jb
pop
pop
mov
adc
aas
and
scas
xor
repnz
mov
push
lock
lahf
lods
lahf
and
jge
stos
mov
pop
addr16
jnp
xor
xchg
out
jmp
jmp
jb
jecxz
and
loope
mov
ficom
(bad)
stc
scas
outs
test
call
fwait
leave
adc
fwait
shr
loopne
fwait
pushf
push
jae
push
sahf
cmp
xchg
mov
aad
mov
lldt
pop
cmp
adc
mov
push
cmp
stc
in
nop
push
enter
lea
movs
lahf
mov
aam
cwde
sbb
ret
outs
and
mov
xor
sub
and
pop
aaa
xchg
dec
call
ins
fs
push
stc
xor
or
xor
inc
imul
popf
cmp
sbb
inc
sub
movs
add
mov
cdq
inc
inc
mov
and
call
stos
pop
dec
cmp
cmp
jns
ins
jbe
aas
test
fidiv
inc
jnp
aas
imul
test
mov
mov
popa
xchg
test
push
fisttp
mov
add
xor
push
lahf
shl
push
loope
sbb
push
xchg
outs
test
stos
adc
je
or
retf
bound
mov
test
movs
pop
out
pop
test
add
or
and
mov
je
xchg
push
nop
(bad)
retf
or
sbb
rcl
aaa
pop
out
and
std
pop
push
test
mov
cs
mov
stos
in
in
pop
outs
cld
pushf
jmp
dec
xchg
or
dec
shl
adc
fldenv
xor
inc
pop
dec
popa
push
test
or
cmp
xor
arpl
xchg
mov
add
scas
cs
mov
sbb
pop
xchg
into
cmp
mov
cmc
popa
and
jmp
jmp
pop
ret
arpl
call
mov
outs
sbb
fistp
and
fnsave
inc
mov
push
mov
lahf
jg
aas
loop
sub
sbb
fstp
pop
sahf
jp
mov
xor
push
retf
aam
adc
cmps
pop
jmp
xchg
pop
adc
retf
mov
js
mov
ficom
mov
leave
test
sbb
mov
out
stos
push
push
jg
push
rcr
aam
sahf
push
adc
xlat
mov
pushf
arpl
jne
aaa
mov
xor
dec
cmp
aas
xchg
mov
ret
fcomp
cmp
mul
or
mov
add
nop
pop
cmp
adc
inc
pusha
mov
xchg
shl
mov
pop
std
mov
jns
mov
cmc
sbb
cmps
mov
imul
lahf
fsub
repz
push
ss
or
ins
jl
jle
out
mov
dec
dec
xor
push
mov
adc
fst
loope
adc
xchg
cmp
jle
test
or
and
cmp
cmp
pop
adc
xchg
jg
in
mov
jne
mov
xchg
(bad)
inc
jp
pop
cmp
pop
pop
ins
icebp
or
aam
push
cmp
xchg
mov
outs
dec
xchg
pop
lock
test
push
push
xor
dec
xchg
int3
(bad)
fidiv
cmp
icebp
adc
cmp
popa
mov
cmp
cmp
cld
scas
and
xor
dec
jle
push
mov
xor
repz
icebp
in
mov
inc
sub
loop
pop
rcr
adc
cmp
jbe
dec
xchg
popa
leave
sub
arpl
inc
jmp
aad
pop
mov
stos
ins
adc
sub
and
mov
jnp
mov
or
rol
or
loopne
bound
in
sbb
stos
sbb
iret
jecxz
jmp
or
daa
rcl
loope
jnp
xchg
stos
ins
jae
add
jl
inc
mov
je
in
xor
push
dec
push
push
cmp
mov
lods
sub
lea
es
lods
outs
push
mov
lods
imul
push
xchg
sbb
add
fistp
mov
cmps
in
add
daa
add
mov
movs
ror
les
or
push
dec
mov
cmp
or
std
div
aam
pusha
ret
shl
addr16
ss
bound
push
outs
sbb
int
mov
rcr
and
jecxz
lea
out
sub
rcr
fild
jge
push
pop
xor
scas
int3
jae
dec
add
ficomp
(bad)
neg
out
jno
daa
call
pop
ss
fwait
xchg
push
pop
ret
push
daa
pop
jg
aaa
mov
xchg
xchg
cmp
jne
dec
lods
cwde
pop
add
lock
pop
inc
dec
into
outs
daa
sub
std
cwde
and
pop
sti
ja
mov
retf
das
inc
add
mov
hlt
xchg
imul
mov
and
xor
sbb
cmc
sbb
clc
in
fs
nop
ins
lods
jne
cmp
int3
icebp
stc
(bad)
dec
ins
imul
(bad)
mov
cmp
outs
xchg
cmp
imul
push
xor
inc
not
shr
leave
fidivr
sbb
mov
cmp
aad
dec
adc
xor
daa
(bad)
push
(bad)
push
ficom
hlt
xchg
push
ins
jno
ret
les
imul
ds
mov
sub
fwait
inc
call
stos
pop
out
scas
sbb
loop
mov
jns
int3
into
or
fimul
mov
mov
add
sbb
clc
addr16
aaa
sar
outs
and
cmp
imul
dec
dec
call
mov
les
jbe
test
ror
jecxz
sbb
fcom
sbb
ins
gs
out
mov
mov
sub
repz
mov
test
loop
movs
call
hlt
mov
int
jo
in
mov
in
loopne
inc
mov
xchg
(bad)
aam
lea
cdq
pop
jl
icebp
inc
mov
mov
lea
jg
or
sbb
inc
pop
sar
xchg
call
addr16
pushf
js
jae
xchg
pop
lahf
pop
(bad)
cmp
pop
repnz
mov
inc
int3
retf
imul
data16
sbb
ds
sbb
jge
push
sub
jns
or
push
mov
mov
stos
xchg
ror
jno
add
icebp
xor
in
xlat
out
cmp
sahf
sbb
mov
cmps
adc
cmps
jae
in
js
xlat
(bad)
test
jg
leave
mov
pusha
mov
std
jp
mov
cs
addr16
lock
data16
mov
(bad)
mov
aam
cmp
mov
xchg
mov
sar
fistp
or
mov
mov
int3
xor
mov
test
xrelease
(bad)
ror
push
(bad)
mov
xchg
iretw
repz
dec
or
(bad)
adc
push
inc
inc
cs
xchg
sti
aaa
loopne
add
ds
xor
dec
(bad)
(bad)
std
or
push
mov
data16
icebp
and
popf
mov
lock
imul
mov
pop
fist
jb
out
jl
sar
int3
ss
imul
mov
in
mov
cmp
stc
mov
cld
into
scas
push
inc
shl
rcr
out
pop
in
xor
lea
mov
rol
and
add
stos
and
mov
(bad)
fiadd
test
sti
in
int3
out
xor
cld
pop
and
xchg
cs
fmul
sti
mov
fisubr
sub
jne
inc
jb
retf
retf
lock
out
movs
jae
mov
rcl
sub
sub
sub
or
outs
mov
push
int
cmp
aaa
inc
mov
mov
push
sub
xchg
add
jg
xchg
push
out
adc
or
adc
mov
(bad)
adc
xor
ins
xchg
or
mov
sahf
movs
das
fwait
jecxz
jge
mov
sub
sub
aaa
dec
repz
dec
mov
mov
lods
in
pop
gs
call
fmul
and
xchg
mov
mov
outs
pop
pop
or
leave
jb
ss
nop
rcr
fsub
xor
out
mov
scas
sub
pusha
cmp
jne
movs
fcomp
aas
test
xchg
out
sbb
add
sbb
loop
and
call
and
or
push
(bad)
test
fisubr
xchg
dec
adc
inc
gs
sahf
sar
pop
xchg
call
jmp
pop
adc
nop
push
ins
fmul
jae
arpl
xlat
retf
fwait
mov
repz
pop
cmp
cmps
cmps
xchg
cmc
xor
icebp
in
jae
lods
pop
add
ja
xor
inc
mov
xchg
jp
cmps
xchg
mov
xchg
stos
fstp
in
iret
fstp
xor
or
sti
mov
scas
mov
dec
popf
loope
xchg
fsubr
iret
sub
or
mov
adc
iret
(bad)
rcl
dec
dec
mov
push
popa
in
mov
mov
lds
mov
cmp
scas
add
xor
cld
sbb
fwait
lods
movs
jno
sbb
sbb
jo
out
les
les
cmp
popa
imul
push
dec
sub
adc
arpl
mov
pop
fidiv
mov
arpl
mov
out
xchg
mov
std
jbe
inc
xchg
scas
cmp
dec
in
mov
jl
sub
xchg
(bad)
pop
pop
cmps
sbb
call
std
clc
(bad)
push
jmp
jp
popa
push
(bad)
jne
lock
pusha
sub
(bad)
jno
inc
jo
mov
add
adc
out
mov
outs
push
shl
mov
pop
iret
aas
(bad)
mov
push
push
xor
idiv
fist
clc
fwait
aas
xor
outs
jno
xchg
imul
or
sbb
xchg
fucomp
push
scas
aaa
add
inc
(bad)
pusha
repnz
mov
cmp
jmp
inc
mov
inc
add
(bad)
jb
jbe
in
out
iret
mov
inc
mov
es
test
jl
int
retf
push
fnsave
add
cld
sub
mov
or
bound
movs
movs
inc
call
sub
ins
cmp
sbb
sub
repz
xor
mov
push
cmc
ds
retf
in
daa
in
out
fcomp
xchg
aas
dec
and
or
mov
dec
inc
add
xlat
mov
ror
inc
mov
fwait
ins
fnstenv
in
xchg
jmp
xor
sbb
test
xor
dec
mov
cmc
push
neg
shl
and
push
imul
psrlq
xor
sbb
nop
out
push
and
pop
rcr
shl
pop
arpl
jne
sub
retf
dec
stc
inc
sahf
retf
mov
mov
sbb
cmp
jnp
cld
shl
push
mov
bound
xor
das
xor
in
aaa
ret
fwait
shr
loop
nop
out
xchg
in
ins
int
push
out
xor
ret
aad
xor
loop
mov
sbb
jmp
loopne
sub
cmp
jmp
loope
cmps
push
addr16
daa
and
sbb
jp
call
and
ja
xchg
lahf
lods
scas
jo
dec
dec
jns
test
cmp
fld
mov
ds
rol
hlt
adc
scas
inc
cmps
jae
dec
loope
mov
in
mov
addr16
rcl
shl
xor
imul
xchg
pop
fnstenv
lock
aam
das
loop
leave
and
mov
ins
aas
ficom
add
iret
mov
mov
pop
sbb
inc
repnz
jg
add
into
loop
xchg
xchg
movs
arpl
mov
dec
jl
mov
scas
cmps
or
xor
int3
out
mov
out
sub
push
into
cld
xchg
outs
out
jecxz
and
cdq
cmps
ret
cmps
int3
jnp
mov
stos
fistp
xor
int
(bad)
(bad)
ss
mov
neg
pop
lock
pusha
call
addr16
leave
push
in
rol
ins
es
cmp
rcr
pusha
in
fst
mul
cs
and
add
xlat
cmp
or
fnstenv
jecxz
add
fisttp
ds
xlat
add
add
push
inc
push
xchg
data16
pusha
int3
shr
ret
lds
and
cmp
pop
popa
xchg
mov
pop
sbb
sub
and
arpl
sbb
arpl
(bad)
mov
(bad)
scas
ins
cmp
jmp
movs
push
bound
sub
js
enter
fidiv
div
cs
popa
std
fbld
inc
daa
jno
dec
stc
in
scas
mov
jl
cmp
dec
arpl
retf
aaa
(bad)
push
dec
xchg
(bad)
pop
fistp
(bad)
cmp
jo
pusha
inc
arpl
jp
mov
sbb
shl
cld
stos
add
lods
scas
hlt
and
stos
test
hlt
or
and
bound
lea
sti
dec
sub
lds
retf
test
mov
div
push
sbb
inc
pushf
xchg
pop
and
aas
outs
loopne
jo
mov
push
sub
outs
jns
iret
jae
and
sub
sub
ins
data16
xor
scas
imul
fisttp
cli
xchg
aad
xlat
or
pushf
mov
in
mov
in
jle
mov
das
test
mov
sub
bound
popf
sbb
imul
and
lods
comiss
jecxz
fisub
fnstsw
(bad)
xchg
xlat
sub
sbb
(bad)
(bad)
mov
cmp
xchg
or
repz
xchg
jmp
and
mov
pop
das
loope
push
in
inc
xlat
sbb
lods
and
pop
lds
add
dec
imul
call
(bad)
scas
dec
adc
dec
repz
mov
pop
in
(bad)
shr
(bad)
loopne
inc
into
dec
and
sbb
retf
mov
sub
dec
dec
push
es
mov
cmp
push
sti
or
inc
or
(bad)
jp
int3
(bad)
test
icebp
mov
pop
cli
(bad)
pop
push
sar
jne
aad
push
mul
cmps
dec
adc
dec
inc
std
pop
inc
dec
(bad)
jno
jnp
test
mov
repz
frstor
out
cmp
fidiv
cmp
dec
jge
out
jg
dec
pop
aaa
pop
jp
or
inc
daa
stos
pop
push
mov
lds
mov
int
jle
mov
lods
btc
js
pop
push
test
adc
cwde
sbb
loop
adc
into
jg
cmp
test
and
dec
mov
pop
repz
cld
dec
addr16
aaa
fidiv
mov
xchg
pusha
xchg
cmp
xor
jmp
int3
ds
adc
in
popf
jmp
ficomp
pop
cdq
push
xchg
arpl
(bad)
xchg
les
jl
mov
push
pop
aas
pop
mov
test
lahf
mov
mov
jnp
cli
push
xor
scas
jp
mov
jp
mov
bound
das
push
fisttp
enter
(bad)
stos
outs
ins
test
xchg
sbb
adc
fwait
je
enter
jg
mov
mov
xlat
xor
cmc
mov
mov
xchg
fdiv
xor
inc
jb
mov
push
push
movntps
dec
xchg
mov
imul
xor
aaa
cmp
ret
out
dec
xchg
mov
icebp
jle
(bad)
jmp
inc
pusha
icebp
ja
je
pusha
adc
mov
pop
and
inc
mov
xor
jae
(bad)
fs
fist
hlt
outs
xor
in
ds
adc
imul
mov
jmp
fcmove
or
mov
jle
out
jg
inc
xor
sahf
je
fild
(bad)
scas
test
fsqrt
mov
test
imul
cs
sub
call
jecxz
in
call
ja
rol
adc
stc
fs
xchg
into
inc
and
cmp
cmps
lods
pushf
inc
jbe
daa
mov
test
xchg
xor
lahf
cdq
xor
pusha
daa
cmp
cmps
pop
mov
arpl
scas
pop
sub
or
inc
or
(bad)
fsub
pusha
or
cs
push
shl
scas
leave
jg
ja
cmp
pop
xchg
and
out
gs
jns
(bad)
pop
xchg
jmp
and
mov
js
adc
add
(bad)
pop
pushf
push
aad
std
and
test
into
stos
fidivr
or
lock
retf
jbe
rcl
scas
jns
jns
push
call
inc
cmc
int
xchg
out
ins
mov
mov
adc
movs
dec
sub
or
dec
movs
xor
mov
xchg
int3
pop
xor
inc
inc
(bad)
jno
push
cld
dec
cmp
(bad)
loop
outs
rdpmc
ror
mov
popa
int
pop
pop
push
jns
ds
lahf
lahf
scas
xchg
cmp
shr
jl
push
and
xchg
repz
ss
push
xchg
leave
outs
jmp
mov
xchg
lock
add
fwait
pop
mov
jbe
mov
daa
and
mov
jo
bound
sbb
xor
mov
dec
sbb
out
jbe
xor
mov
mov
aam
and
enter
in
jnp
lods
dec
jmp
push
push
cld
pop
push
inc
loop
ins
push
push
jp
and
movs
inc
or
movs
fsub
pop
into
xchg
out
pushf
je
jae
loop
loopne
sahf
mov
icebp
pop
lods
cmp
ins
push
sar
push
mov
gs
pop
pop
scas
jl
mov
ss
and
pop
pop
mov
adc
mov
call
lds
into
push
mov
(bad)
pop
rcr
les
dec
out
cmp
sbb
inc
fsubr
dec
(bad)
(bad)
sbb
mov
cli
mov
enter
and
or
les
push
cmp
sub
add
daa
lods
and
ins
pop
hlt
psllw
push
pop
fs
xchg
jp
imul
movs
sbb
lds
arpl
xchg
ret
mov
or
sbb
sbb
retf
add
gs
enter
(bad)
hlt
and
or
xchg
std
(bad)
xor
out
xchg
ins
ficomp
adc
ret
lahf
aad
or
call
push
leave
mov
mov
(bad)
xor
dec
in
cwde
fdiv
fsub
stc
dec
test
sub
lods
xchg
and
(bad)
cmp
sub
add
jge
push
std
or
sub
mov
cmps
jle
pop
xchg
test
ret
pop
(bad)
je
test
fstp
sub
dec
adc
arpl
sar
sub
sbb
push
cmp
les
jmp
mov
inc
dec
aas
rcl
xor
pop
neg
inc
cli
aaa
repnz
push
fisttp
pop
(bad)
lahf
(bad)
ins
cmp
xchg
arpl
mov
sbb
push
sub
jo
out
pushf
test
shl
add
pop
add
stos
stc
push
dec
jae
add
out
pop
jo
adc
mov
mov
jmp
sbb
ror
pop
jmp
pop
xor
lahf
dec
dec
gs
xor
div
out
dec
imul
stc
idiv
mov
outs
push
lds
cmp
fcom
enter
inc
pop
fidiv
nop
loop
push
and
mov
inc
mov
shl
stos
jp
(bad)
xor
les
cmps
sub
xchg
mov
into
dec
jne
dec
(bad)
jmp
bound
sbb
(bad)
dec
or
and
xor
xchg
shl
and
push
sub
jbe
(bad)
jo
movs
lock
int3
and
xor
cmc
movs
pop
add
(bad)
xor
das
mov
sub
mov
mov
cdq
adc
popa
add
out
pop
or
(bad)
xor
js
xchg
adc
ds
popf
xchg
fbstp
mul
cld
jae
jbe
jl
or
jb
sbb
pop
(bad)
cs
inc
stos
xchg
mul
arpl
inc
push
mov
gs
xchg
cmp
sahf
nop
outs
jg
hlt
sub
xor
fcomip
jnp
out
xchg
aam
push
fiadd
sub
jb
into
imul
mov
call
nop
add
aas
ins
xchg
js
mov
cmp
pop
dec
xchg
sahf
mov
test
push
rol
pop
sahf
mov
sbb
cmc
cmps
fucom
xor
aam
fisttp
and
in
mov
cmp
je
sbb
jno
add
cli
xor
add
fsubr
mov
stc
ss
push
sub
out
leave
daa
test
push
xchg
(bad)
arpl
js
inc
xchg
add
jl
mov
push
xchg
mov
sbb
dec
or
or
mov
shl
push
pushf
mov
call
pop
in
mov
cs
repnz
and
dec
fidivr
movs
and
adc
scas
xchg
add
in
enter
gs
pop
jle
sub
aas
add
jge
out
xchg
pop
cmp
lods
jg
pop
cdq
xor
inc
pop
jle
push
dec
rcr
daa
and
dec
xchg
push
lods
xor
or
pushf
mov
mov
mov
cmc
mov
jl
into
dec
xor
and
repnz
or
ret
addr16
add
dec
xchg
sub
inc
mov
or
jge
cli
fadd
dec
jae
cmp
imul
add
mov
xor
aad
or
sar
in
jnp
push
mov
cdq
daa
lods
dec
jle
xor
je
or
pop
add
add
retf
sti
aaa
movs
imul
inc
addr16
sub
xchg
mov
(bad)
or
dec
pusha
out
adc
bound
push
daa
sbb
in
pop
jb
sbb
hlt
dec
mov
in
fistp
iret
sub
out
dec
pop
or
mov
xchg
xchg
inc
xor
in
in
ror
adc
std
fs
loopne
cdq
stos
cmp
cmps
inc
inc
data16
dec
xchg
inc
pop
xchg
sbb
lods
inc
int3
inc
les
movs
test
sar
movs
add
ret
loope
xchg
and
div
popf
sbb
ins
pop
xchg
call
jge
jns
leave
les
xor
popa
sbb
sub
fidivr
retf
(bad)
jp
stc
pop
dec
mov
mov
mov
add
call
xor
ds
cmp
mov
call
int3
shl
push
push
and
stos
outs
shl
cmp
cmp
add
or
push
pop
xchg
jne
ret
adc
enter
(bad)
jnp
(bad)
mov
inc
push
scas
add
bound
jge
jmp
nop
das
dec
jge
stc
jmp
adc
(bad)
lock
mov
inc
lahf
jle
ja
inc
(bad)
fcomp
movs
or
imul
pop
mov
xor
cmp
sub
int3
ins
mov
sti
mov
push
xchg
pop
pop
repz
xor
call
adc
jmp
cmp
sahf
cmp
iret
mov
(bad)
clc
sahf
jle
add
adc
fidiv
and
ja
adc
pop
sub
inc
and
mov
pop
adc
jb
sub
bound
bound
mov
movs
dec
cmps
push
mov
(bad)
mov
jo
std
mov
push
out
push
lea
pushf
inc
pop
mov
push
into
mov
or
addr16
bnd
mov
mov
ins
or
dec
push
cmps
and
xchg
cli
sbb
dec
frstor
fcom
(bad)
mov
xchg
sub
fistp
imul
lods
xchg
jp
cmp
xor
pushf
jmp
ins
sub
jmp
dec
adc
jns
in
sbb
(bad)
leave
loop
ds
mov
mov
test
push
jmp
pop
(bad)
aaa
jp
inc
int
jmp
retf
(bad)
push
xchg
adc
and
repz
ins
add
aaa
repnz
fild
cmp
fcomp
xchg
mov
mov
xor
dec
retf
dec
inc
fcompp
jbe
pop
dec
test
inc
pop
jno
es
rcl
adc
mov
popf
adc
test
sbb
push
test
xor
pop
push
call
(bad)
mov
pusha
mov
inc
int3
adc
(bad)
shr
inc
gs
shl
pop
cmc
xchg
push
ret
out
leave
mov
lahf
fmulp
push
adc
stc
shr
inc
fwait
jg
fisttp
mov
pushf
push
scas
adc
vpacksswb
pop
xchg
lods
lea
mov
or
imul
xchg
outs
fist
and
out
sbb
aam
icebp
test
pusha
adc
test
in
or
out
add
(bad)
fst
lock
lahf
loop
dec
mov
out
clc
out
adc
(bad)
xor
adc
jno
scas
lock
cmps
in
xor
and
rcr
syscall
or
test
mov
xchg
jae
enter
aad
jns
sbb
jmp
and
cli
clc
jnp
fs
scas
cmp
in
pop
dec
pop
push
sub
xor
jle
cli
out
outs
sub
xor
loop
js
and
xlat
out
dec
jae
fild
xchg
movs
(bad)
clc
dec
add
dec
push
lock
mov
pop
iret
xor
std
mov
add
fidiv
xor
jecxz
sub
xor
pop
or
push
lods
je
mov
iret
out
inc
and
in
div
jecxz
adc
xchg
push
ja
(bad)
push
retf
hlt
inc
xor
mov
or
call
xor
dec
lods
or
mov
repz
in
jo
ja
lds
iret
cmps
jb
lock
fcom
into
cmp
fisubr
cmp
dec
lea
sbb
inc
add
gs
jo
jne
mov
xlat
cwde
mov
mov
xchg
fdecstp
mov
in
jge
mov
pop
adc
call
pop
gs
jge
lods
and
sub
inc
add
mov
mov
cmps
aas
clc
fmul
mov
push
cmp
(bad)
lea
sbb
repz
and
gs
xchg
xor
jbe
jg
sti
ret
gs
repnz
mov
mov
jle
imul
je
or
cs
push
test
xchg
sub
(bad)
push
cmp
popa
xchg
dec
mov
pop
cmp
sub
fdiv
jmp
mov
jnp
push
adc
enter
outs
cmps
pop
mov
or
gs
inc
adc
scas
arpl
dec
pushf
sahf
(bad)
in
inc
pop
inc
loop
retf
push
cmovge
repnz
mov
scas
adc
fwait
call
shr
ja
fs
iret
adc
cmp
lock
ins
inc
add
sub
sub
mov
loopne
sub
(bad)
bound
aas
(bad)
pop
mov
cmp
test
sbb
sub
repz
xchg
add
adc
push
mov
cs
push
inc
fs
add
pop
repnz
pop
adc
pop
cmc
shl
mov
sbb
pop
xor
pop
mov
or
or
sub
mov
or
mov
add
push
das
xor
movs
pop
mov
jmp
ins
mov
jmp
xor
xor
sbb
push
adc
inc
pop
fcom
pop
mov
retf
and
(bad)
hlt
xor
inc
inc
jle
shr
cmp
cmp
das
(bad)
in
cs
push
imul
sub
idiv
call
fcom
sub
shl
mov
(bad)
adc
sub
and
shl
or
jl
pop
add
and
cmp
or
and
dec
js
leave
(bad)
ffreep
into
pop
bound
add
int3
mov
pusha
or
test
int
shl
jae
push
sub
jne
in
out
inc
sub
pop
outs
or
in
or
shl
jne
pop
in
lods
shr
sub
jecxz
adc
mov
ss
in
(bad)
cmps
test
cld
gs
cmc
iret
clc
movs
dec
outs
and
in
aad
sahf
mov
fwait
pop
mov
into
popa
or
aad
xchg
mov
in
sti
push
mov
or
xchg
dec
mov
xchg
and
push
cmp
add
js
jecxz
int3
jmp
xchg
dec
jne
ds
mov
aad
and
adc
xchg
dec
out
es
stos
inc
mov
mov
xor
(bad)
aad
dec
sbb
adc
add
das
ds
push
pusha
ss
add
scas
mov
ror
or
cwde
mov
push
xor
push
mov
or
outs
test
xor
fild
lods
sub
ffree
mov
dec
cmp
xchg
push
sub
pusha
add
and
nop
or
push
call
je
pop
jmp
mov
(bad)
sar
xchg
psubusw
mov
jg
ins
ret
jg
sbb
fcom
mov
in
aad
sbb
xor
inc
or
call
xchg
dec
inc
ret
add
out
dec
inc
aam
cmps
daa
fs
and
cld
mov
sub
push
ret
outs
inc
pop
hlt
cmp
lods
sub
ror
jle
sahf
(bad)
jns
or
push
sar
gs
jle
in
in
jge
jp
cmp
ret
lods
pop
adc
loopne
xor
pop
je
iret
and
jb
mov
jl
or
mov
mov
jne
adc
jmp
mov
sub
adc
dec
fcom
push
sbb
and
out
clc
pusha
adc
pop
fld
mov
icebp
repz
inc
mov
mov
pop
add
icebp
jg
inc
xchg
jp
xchg
retf
inc
and
pop
and
fidivr
or
test
xchg
ret
push
xchg
push
dec
push
inc
jns
xchg
test
fld
pop
xchg
jp
push
or
shr
jge
xor
ds
retf
cmc
mov
adc
popa
mov
rcpps
and
and
inc
call
inc
je
sbb
inc
jb
sahf
jmp
pop
mov
(bad)
lods
jle
add
pop
je
mov
sbb
cmp
fld
mov
bound
retf
pop
xchg
retf
inc
je
shl
lea
add
xchg
mov
bound
idiv
mov
sub
pop
ds
push
mov
push
sbb
sbb
mov
push
fistp
gs
push
ins
arpl
aas
repnz
or
shl
bound
push
mov
pushf
mov
loopne
mov
stc
mul
fld
jno
push
mov
push
in
bound
cld
xor
mov
movs
xor
or
cmp
enter
fcom
sub
sub
pop
lds
jle
or
cdq
je
pop
bound
mov
sub
mov
inc
fidivr
sub
sbb
pushf
lock
mov
adc
xchg
loope
fimul
cdq
fld
xor
mov
pop
fprem1
shr
hlt
inc
jmp
inc
arpl
test
in
rcl
loop
jmp
(bad)
aam
lods
inc
pop
xchg
jo
cmc
xchg
and
ss
lods
outs
shl
fwait
jno
xor
adc
fild
sbb
xor
xchg
ds
es
cmps
dec
retf
inc
add
les
lods
xor
scas
aas
mov
cmps
inc
jl
cdq
clc
popa
jecxz
test
paddsb
(bad)
stos
dec
fimul
cmp
ins
cmp
sti
mov
pop
pop
cmp
cmp
test
pop
loopne
cmc
mov
sar
add
dec
cmps
lahf
push
jge
push
inc
retf
mov
jmp
add
js
dec
dec
inc
test
cmp
mov
sub
in
dec
daa
icebp
inc
cdq
cld
mov
cs
mov
add
inc
pop
push
ret
test
push
iret
outs
fimul
sub
call
jp
adc
(bad)
movs
aad
mov
fistp
or
dec
cmp
sub
in
or
in
inc
inc
xchg
(bad)
jns
xchg
xor
imul
xchg
ret
push
push
mov
test
or
inc
repz
fmulp
loop
lock
lahf
push
jg
loopne
and
dec
pop
fs
imul
out
hlt
dec
dec
adc
mov
sub
cmps
call
(bad)
pusha
out
cmc
mov
push
enter
cli
dec
jb
mov
inc
shr
xchg
clc
popf
aas
xchg
and
call
pop
aam
inc
pop
inc
pushf
nop
clc
mov
xor
mov
sbb
pop
test
and
sbb
pop
push
push
mov
clc
jge
rcr
inc
sub
ins
pop
aad
in
cmp
mov
in
or
sbb
and
sub
mov
xor
adc
outs
cwde
stos
add
cmp
imul
call
arpl
jno
div
test
jbe
stos
popa
daa
(bad)
adc
adc
push
mov
aas
or
daa
xchg
fisubr
jl
inc
dec
push
ror
or
add
icebp
add
mov
push
adc
mov
ror
retf
sub
mov
push
mov
or
fabs
adc
and
sti
mov
mov
inc
cmc
inc
fwait
add
push
mov
cmp
push
xlat
nop
cs
mov
push
mov
mov
jnp
in
dec
js
cmp
cmp
mov
inc
sbb
sbb
test
sbb
imul
in
dec
sub
and
ds
ret
loopne
mov
pop
xchg
loop
cmp
push
jo
push
(bad)
add
dec
ja
(bad)
scas
outs
add
pop
push
data16
push
lds
into
stos
mov
ret
jne
xor
sub
es
fisttp
or
mov
mov
in
or
inc
ror
cmc
pop
ror
xchg
retf
adc
ret
adc
inc
mov
jge
jg
or
pusha
imul
sar
stos
inc
jbe
int
cmc
in
dec
or
mov
imul
and
scas
cs
xchg
cmp
fsub
cli
dec
add
icebp
cdq
rol
inc
repz
xchg
jg
(bad)
adc
or
mov
shl
and
arpl
xchg
adc
pop
dec
pop
in
sub
idiv
jnp
out
shl
cmp
retf
sub
xor
leave
push
mov
adc
xor
das
xlat
mov
jl
ins
mov
sbb
xor
pop
cmc
sub
cwde
pop
xor
adc
xor
xor
jmp
repnz
push
mov
mov
sti
jo
dec
arpl
gs
(bad)
rcl
js
dec
mov
sbb
aad
cmp
and
pushf
outs
into
mov
lock
push
pop
lods
ret
popa
(bad)
scas
jmp
xor
mov
xchg
jns
inc
mov
in
cli
mov
xchg
or
push
jmp
ins
jl
in
shr
imul
shl
xor
dec
mov
sub
outs
ds
pop
outs
lahf
pop
xor
pop
xor
mov
cwde
out
push
retf
sub
popf
retf
pop
push
mov
jecxz
pop
pusha
shr
jae
sbb
jecxz
xchg
pop
stos
mov
sbb
add
fadd
cmp
ret
cmps
repnz
aas
xor
push
push
lds
movs
out
or
dec
pop
and
sub
adc
retf
dec
cmp
data16
mov
call
adc
movs
xor
xor
push
wrmsr
mov
jae
push
add
mov
int3
and
push
jae
sbb
retf
icebp
push
fisttp
jb
adc
call
jnp
cwde
sub
popf
retf
xchg
das
int
push
cwde
in
jl
mov
fwait
scas
je
in
cmp
rol
ror
add
xchg
ins
mov
fbstp
(bad)
ins
lods
mov
push
inc
or
jb
jmp
inc
push
les
jg
sbb
into
and
xchg
fcmovu
loop
sub
aad
cmp
dec
(bad)
frstor
test
clc
mov
mov
scas
mov
mov
dec
xchg
sahf
data16
stc
fcomp
outs
mov
leave
push
or
inc
mov
jno
movs
jo
in
or
loop
ja
inc
rcr
fimul
adc
ja
mov
add
repz
mov
int3
fsub
lods
leave
mov
xlat
cld
cmp
dec
sub
push
mov
int
push
inc
retf
addr16
jo
inc
pusha
sub
lods
mov
ss
aam
xor
jmp
test
mov
adc
push
and
jo
jae
dec
xchg
mov
xchg
sub
loop
iret
call
lods
dec
(bad)
hlt
fstp
ins
jae
out
cwde
retf
sub
shl
sti
scas
das
adc
push
jne
imul
js
pop
dec
push
or
push
adc
pusha
pop
aad
(bad)
aas
cmp
mov
sub
xchg
es
sbb
pop
pop
inc
movs
mov
lock
xlat
sbb
dec
cmps
dec
stc
shl
adc
push
retf
leave
dec
sub
or
jne
pusha
sub
rcr
imul
(bad)
jno
lods
adc
(bad)
test
scas
sbb
into
ret
jge
mov
rol
icebp
fisttp
mov
test
imul
and
adc
or
rol
mov
sti
cli
and
inc
iret
sbb
inc
or
shr
adc
ret
ret
push
sbb
inc
dec
inc
aaa
jbe
leave
sub
pop
mov
sbb
dec
dec
sub
sti
js
push
mov
dec
pop
test
push
pop
mov
movs
add
xlat
aaa
add
xor
dec
fmul
test
xchg
inc
call
pop
and
cmp
mov
cmp
loope
mov
sub
lock
fild
das
scas
inc
adc
scas
pop
cmc
das
aam
sbb
test
pop
dec
pop
adc
addr16
mov
or
imul
jae
lahf
mov
sub
push
cmp
stos
mov
scas
sti
stc
sbb
mov
xor
or
push
mov
or
(bad)
(bad)
lods
inc
pop
lea
xchg
xchg
jo
mov
or
jl
push
jl
fidiv
in
adc
imul
mov
outs
std
(bad)
movs
mov
nop
repz
jmp
push
push
cmp
es
out
and
jnp
push
loope
dec
cs
adc
aad
ret
and
pop
dec
aad
sahf
jne
movs
repz
test
jno
dec
sbb
xchg
clc
(bad)
pop
pusha
out
pop
push
push
in
aaa
mov
push
xor
xchg
mov
push
push
and
lahf
clc
and
jg
outs
xchg
in
popa
lods
add
push
and
lahf
sbb
pop
imul
repz
div
lds
ret
(bad)
fcomp
sub
out
clc
jnp
pusha
packssdw
sbb
inc
sub
inc
sbb
push
mov
imul
cmp
out
fwait
jmp
not
pop
sub
sbb
jo
mov
stos
sub
mov
mov
mov
sti
outs
xor
mov
mov
mov
mov
xor
cmp
pop
jns
les
int
aaa
mov
inc
dec
mov
mov
retf
xor
push
call
js
mov
push
fld
ficom
dec
retf
popf
dec
sti
in
sub
xlat
rol
pop
push
je
cmps
ror
cmp
in
and
jge
clc
and
movs
cld
or
not
aad
ror
push
pushf
cdq
xchg
test
mov
data16
and
cwde
cmps
js
xlat
pop
outs
mov
adc
jmp
ja
dec
icebp
jo
imul
and
push
(bad)
arpl
outs
out
(bad)
int3
ret
push
out
push
out
adc
popf
dec
ins
out
into
dec
mov
call
pop
in
xor
lods
or
xor
cmp
cmp
dec
out
ror
mov
mov
(bad)
cmp
pop
bnd
scas
or
or
retf
adc
pusha
fwait
jne
jo
rcl
adc
jns
iret
int3
mov
movs
jae
xor
aam
fnstsw
rcr
adc
add
push
mov
mov
in
mov
jecxz
jmp
out
mov
scas
rol
in
div
jmp
das
lock
add
div
jnp
inc
stc
(bad)
push
sub
mov
ds
sbb
dec
inc
inc
mov
jecxz
aad
rol
mov
cdq
jg
pushf
and
stos
and
icebp
outs
hlt
mov
aam
subps
or
sbb
inc
jns
xchg
pop
jle
sbb
inc
mov
xchg
mov
add
pop
dec
inc
les
outs
cmp
jns
xlat
mov
loop
lds
cmp
mov
les
xchg
loopne
sub
push
and
shl
fs
pusha
dec
dec
cmp
push
stc
movs
sub
mov
push
mov
xlat
xor
mov
pop
(bad)
xchg
mov
sub
rcr
and
push
mov
mov
ins
and
inc
arpl
jns
call
push
jl
icebp
lds
push
pushf
jb
retf
jl
push
loopne
adc
mov
add
jmp
mov
cmp
je
test
cmp
test
sbb
rcr
inc
jnp
shl
cmp
hlt
sbb
fcom
mov
je
cmc
arpl
mov
mov
and
mov
shr
push
sub
cld
lock
xchg
mov
sub
mov
stos
jg
fld
rol
dec
sahf
cdq
or
adc
jno
hlt
sbb
in
pusha
xlat
cmps
mov
stos
cmp
xchg
mov
dec
int3
pop
mov
nop
jae
mov
add
and
loopne
dec
arpl
mov
xor
test
pop
push
dec
(bad)
mov
cld
inc
inc
mov
adc
or
jle
sbb
fdiv
mov
sti
inc
(bad)
mov
lock
test
daa
clc
sahf
inc
ror
repnz
xor
sbb
ss
fstp
les
jns
fidivr
ja
shr
out
jnp
shl
std
or
icebp
repnz
repz
sti
push
and
ins
add
dec
std
or
mov
jo
stos
and
push
rcl
jp
jecxz
in
out
jecxz
les
daa
repnz
aas
in
fwait
fwait
mov
in
ins
and
(bad)
cmc
mov
in
ret
push
mov
cmp
adc
jmp
inc
sbb
mov
leave
mov
mov
push
daa
mov
mov
dec
retf
jne
int
les
push
icebp
mov
div
lea
xchg
fs
repz
ds
in
mov
js
outs
adc
jp
push
xlat
jmp
mov
not
repz
pop
clc
sbb
outs
pop
cs
div
(bad)
xchg
lds
inc
ror
adc
(bad)
sub
mov
adc
in
push
cmps
add
push
clc
(bad)
jge
inc
cmp
pop
sti
cmps
clc
push
sahf
add
mov
pop
pop
inc
jmp
pop
pop
sub
jae
jae
out
push
and
mov
mov
mov
push
retf
lods
add
sbb
test
cli
sbb
leave
mov
inc
inc
jno
mov
out
es
push
xchg
push
loop
out
sub
inc
(bad)
or
push
imul
or
adc
fist
and
dec
ja
push
add
(bad)
rcl
je
test
aad
xor
push
add
or
and
jmp
pop
ins
jae
add
sub
push
pop
adc
call
hlt
jmp
fmul
jns
xchg
sub
jmp
add
arpl
movs
pop
loopne
or
fwait
push
or
push
fadd
dec
lods
sbb
mov
push
adc
test
inc
aam
ins
fxch
leave
jne
fild
xor
jb
and
sar
mov
(bad)
adc
lea
xchg
test
loope
mov
mov
test
mov
pop
push
sbb
ret
jl
jmp
mov
sub
sbb
pushf
sub
add
jns
daa
and
cmp
push
imul
lahf
and
mov
fnstsw
mov
cmps
lock
adc
popa
repz
pop
cdq
add
aaa
jns
mov
sub
jbe
ss
cmp
lods
dec
inc
mov
pusha
cld
pop
xchg
mov
add
loope
and
fistp
push
sahf
add
mov
ins
fimul
ds
(bad)
mov
fsubr
and
repz
mov
fdivr
pop
mov
sub
or
jno
xchg
lock
push
pop
mov
cld
mov
xor
sub
sub
arpl
mov
fst
pop
dec
add
test
hlt
ret
in
lea
call
retf
addr16
test
mov
icebp
mov
push
and
mov
fcmovne
lods
xlat
ror
adc
div
xor
adc
jp
xor
bound
cmovo
sub
int3
push
popf
test
addr16
ror
adc
lar
aaa
retf
jmp
push
sub
jno
scas
das
(bad)
enter
int
sbb
retf
repnz
jb
std
mov
cmp
addr16
repnz
mov
xchg
cld
push
xchg
sti
add
xchg
daa
std
hlt
adc
xchg
mov
sub
ja
mov
mov
mov
test
rol
mov
imul
in
inc
inc
mov
je
stos
call
xor
bound
xchg
mov
aas
arpl
inc
push
mov
push
mov
(bad)
int
inc
push
cmp
and
and
push
mov
or
lahf
out
(bad)
sbb
aas
lahf
lds
mov
loopne
xchg
aaa
out
sub
sahf
push
pop
icebp
mov
jle
or
jmp
fistp
das
jns
sub
mov
stos
push
(bad)
and
jo
or
xor
pop
fst
ins
xchg
sahf
mov
(bad)
aad
push
int3
add
sub
out
cmps
loope
xchg
mov
sub
and
add
sub
leave
aam
or
jns
dec
popa
jle
ins
aad
adc
jns
(bad)
add
add
(bad)
xlat
sub
mov
jecxz
mov
mul
outs
mov
call
in
movs
xor
imul
and
lds
out
add
shl
mov
xchg
push
cmp
sub
inc
ins
sbb
lds
jnp
mov
cmp
fld
cmp
ja
repnz
repz
xchg
inc
sub
or
in
xor
sahf
and
es
scas
(bad)
popa
in
jns
push
add
lea
sub
enter
arpl
push
cli
mov
and
inc
mov
adc
mov
sbb
icebp
mov
ret
jge
push
mov
je
out
and
jp
xchg
jmp
js
fucom
mov
fiadd
ror
adc
retf
jle
jbe
das
(bad)
clc
cmp
cdq
mov
imul
add
xor
add
outs
test
icebp
aam
xchg
mov
fbld
call
push
jge
xor
mov
mov
pop
aam
cmps
into
xchg
ret
in
mov
mov
pop
fist
mov
push
jmp
(bad)
shr
cmp
mov
(bad)
test
and
or
cmp
pop
(bad)
stc
jne
pop
add
out
iret
imul
push
push
repz
jp
ins
jbe
lahf
push
pusha
ins
in
inc
jnp
out
data16
cmp
popa
and
add
jns
lds
mov
std
stc
movs
scas
xchg
test
adc
loope
movs
mov
movs
mov
jmp
div
cmp
dec
call
jge
sub
mov
movs
sbb
xor
sti
mov
mov
xchg
dec
pop
arpl
mov
and
jne
push
sub
lods
(bad)
repz
mov
repnz
add
jb
es
ret
xchg
mov
mov
add
pop
xchg
pop
adc
pushf
lahf
xchg
out
out
adc
sub
in
sub
dec
aad
adc
aam
ss
jecxz
std
test
sbb
push
out
outs
sar
sbb
jne
or
push
add
xchg
or
shl
mov
in
push
pop
inc
sbb
sub
xor
mov
pop
push
add
inc
sahf
outs
sbb
xor
lods
jmp
mov
(bad)
neg
inc
cmp
sbb
in
xor
cmps
add
mov
test
push
and
es
dec
xor
stc
data16
gs
retf
loopne
lahf
(bad)
ror
into
sub
fwait
push
or
dec
movs
xor
repnz
xchg
sbb
mov
sbb
call
xchg
jb
mov
push
int3
test
pop
xchg
pop
push
sbb
retf
aaa
icebp
mov
pop
mov
and
sar
dec
ror
push
adc
mov
or
mov
dec
addr16
nop
mov
std
jecxz
iret
sub
or
sahf
lods
xchg
out
mov
enter
fwait
inc
rcl
mov
jne
js
dec
fld
lfs
push
popa
leave
mov
adc
mov
xchg
adc
(bad)
add
cmp
jmp
mov
mov
adc
jp
pop
xchg
int3
push
stos
dec
mov
add
ret
in
cmp
mov
xchg
stos
or
in
mov
inc
jl
or
leave
xor
jo
test
(bad)
mov
jmp
mov
fmul
jns
repz
aad
xchg
fwait
ret
pushf
test
loop
aas
inc
xchg
cmps
loope
add
mov
mov
shl
mov
xchg
sbb
in
sub
retf
fdivr
pop
jb
adc
jae
arpl
sbb
sahf
cmp
(bad)
mov
test
xor
jo
icebp
or
lahf
inc
test
shl
push
mov
out
xlat
pop
(bad)
xchg
arpl
inc
or
stos
xchg
mov
mov
enter
cmc
xchg
ins
sub
shl
pop
inc
jl
jne
pop
jne
inc
imul
and
ins
xchg
es
push
loopne
or
les
xor
xor
loope
push
shl
out
adc
ret
repnz
test
or
add
arpl
ins
mov
adc
out
jbe
scas
cmc
and
daa
cs
push
add
mov
push
jl
push
dec
xchg
loope
xchg
fdivp
push
add
call
add
stos
adc
mov
(bad)
fist
scas
(bad)
mov
xor
or
or
sbb
icebp
or
imul
das
fdivr
add
retf
or
test
xchg
mov
fsubr
aas
cmp
add
enter
and
je
bound
(bad)
push
stc
dec
lahf
sbb
in
lods
mov
sahf
mov
iret
je
test
push
pop
xor
js
repnz
mov
fsubr
std
and
aas
movs
sub
xchg
jge
add
cli
gs
and
(bad)
cmp
mov
(bad)
loop
je
stos
lods
in
imul
cmp
xchg
sbb
fsubr
in
das
xor
xor
test
mov
in
rol
push
inc
pop
push
lahf
pop
fbld
or
(bad)
inc
sahf
sub
or
add
cmp
fld
fistp
arpl
mov
xchg
sub
xchg
push
cwde
mov
mov
push
cld
sbb
in
sbb
ss
sub
lods
add
pop
sub
pop
in
dec
push
cmp
sub
sar
xor
not
inc
xchg
inc
xor
scas
and
fs
arpl
or
mov
in
enter
jb
xor
adc
inc
out
ds
rep
jecxz
outs
imul
pushf
loop
mov
jbe
(bad)
sbb
pusha
push
(bad)
fwait
jb
enter
jmp
js
je
in
aam
pop
mov
pop
cli
mov
xor
es
leave
dec
push
(bad)
and
in
dec
sub
loop
(bad)
pop
div
std
jp
and
mov
jg
inc
add
imul
enter
cmp
inc
or
jae
rcr
stos
cmps
inc
push
aad
mul
push
dec
xchg
mov
push
scas
sub
fcom
frstor
shl
xchg
jge
inc
into
aaa
test
pop
gs
xchg
loope
xchg
daa
fidiv
xchg
imul
jnp
out
jge
sub
adc
(bad)
pop
outs
loopne
(bad)
adc
mov
push
leave
les
fstp
fild
ja
xchg
add
push
cmp
loopne
mul
call
mov
aam
lock
aam
call
test
sbb
push
inc
ficom
mov
sbb
dec
add
ja
daa
out
xor
adc
rcr
sub
add
js
mov
test
or
stos
mov
cdq
push
stos
lahf
hlt
out
jbe
pop
sbb
test
cmps
popf
mov
fcmovnbe
in
dec
clc
js
in
out
jns
test
(bad)
sub
call
aam
out
cli
std
or
mov
in
mov
jb
neg
in
jge
sbb
mov
not
pop
add
cmp
outs
enter
sbb
xor
(bad)
push
in
adc
push
jb
push
dec
or
push
jno
lahf
mov
aas
into
jns
and
test
dec
aaa
jp
pop
out
mov
sbb
je
pop
mov
fstp
mov
clc
fsubr
push
fidivr
test
ss
pushf
pop
and
stos
in
adc
leave
pop
xchg
cmp
(bad)
cmp
js
clc
movs
aas
push
and
idiv
pop
sbb
test
test
ss
rol
pop
loop
mov
jl
popf
das
rcl
jg
and
mov
xchg
jb
test
pop
inc
mov
add
sub
ret
(bad)
loopne
lds
cmp
push
sub
movs
out
outs
xchg
cmc
outs
fcom
xchg
pop
inc
pop
out
mov
out
push
xor
push
pop
sti
inc
in
mov
pop
outs
xor
xchg
imul
scas
mov
ja
adc
nop
mov
(bad)
jns
clc
jmp
repz
stc
xchg
cli
xchg
ins
pop
rcr
or
sub
ja
shl
in
dec
xchg
jmp
arpl
repnz
pop
xchg
dec
pop
push
cmps
ret
mov
call
sti
cmc
sbb
je
mov
and
jne
(bad)
adc
lahf
das
sahf
mov
(bad)
or
loop
mov
jo
cld
dec
fsubr
pusha
rcr
repnz
rcr
push
stos
icebp
movs
mov
cmp
xchg
sar
in
retf
jl
scas
pop
call
xor
jnp
mov
fxch
addr16
shl
xlat
aam
mov
push
xor
loop
enter
xchg
jae
and
sub
and
cmp
pop
adc
test
cmp
mov
outs
cs
push
inc
shl
(bad)
sbb
retf
inc
frstor
addr16
jno
in
mov
cmp
adc
or
adc
mov
fwait
pop
xlat
add
pop
std
pop
es
stos
icebp
iret
rcl
xchg
lock
xchg
pop
inc
and
jae
gs
jne
pop
cmp
inc
fisub
cld
std
push
fist
rcl
pop
jge
setns
push
or
sbb
jmp
mov
mov
imul
shl
inc
mov
jl
pop
dec
and
fisubr
dec
into
dec
jbe
sbb
(bad)
fnsave
push
sbb
push
sbb
fisub
sub
sbb
add
popa
xchg
jge
das
imul
out
xchg
xor
push
and
add
or
mov
adc
mov
xchg
sbb
or
int3
xchg
cdq
add
and
jo
jmp
jmp
aam
pop
xchg
sar
cmp
nop
and
push
add
push
in
mov
pop
fnstsw
cmp
xor
sub
(bad)
shr
cs
lea
call
cs
scas
or
dec
dec
jns
or
sub
adc
bound
cmps
inc
mov
ss
lock
scas
inc
jno
and
mov
call
call
scas
inc
xor
xchg
test
inc
mov
sub
call
mov
stos
(bad)
fsubrp
mov
sbb
fild
ret
and
pusha
cmp
mov
mov
inc
and
lds
dec
xchg
nop
std
in
and
xor
cmp
sub
dec
push
aaa
xor
in
jl
push
jmp
test
sbb
popa
xchg
sbb
cdq
dec
adc
cli
pop
jnp
int3
lea
aas
mov
sbb
leave
loopne
push
gs
sub
cdq
and
push
ins
sbb
mov
int3
mov
call
sbb
jnp
je
or
in
push
push
xor
out
loop
imul
xor
push
push
inc
sub
ds
call
dec
ja
arpl
mov
sub
xchg
(bad)
cmc
adc
push
sbb
outs
int3
inc
cmp
in
add
lds
inc
ss
push
jae
sub
or
mov
in
addr16
xor
ficomp
das
sbb
fwait
call
lods
dec
cwde
loop
xchg
add
push
push
dec
addr16
adc
arpl
mov
ret
scas
jle
pop
gs
fcmovu
aas
(bad)
mov
loopne
pop
jle
stos
retf
pop
lods
fwait
cmp
ds
sar
neg
xor
adc
jmp
mov
pop
(bad)
lea
mov
inc
adc
mov
call
adc
push
pop
(bad)
xchg
xchg
stos
ja
popa
(bad)
stos
push
and
ja
test
mov
pop
neg
sbb
inc
popf
mov
mov
xor
ds
inc
mov
fcom
fidiv
scas
sub
ds
jge
push
and
sbb
mov
jge
adc
fs
pop
cwde
popa
pusha
jmp
jge
pusha
inc
push
mov
ret
jne
mov
inc
sbb
push
add
std
cwde
fadd
ret
adc
mov
or
jl
ds
lea
mov
dec
test
mov
or
in
ret
test
mov
push
xor
pop
int
jae
and
in
adc
test
ins
cmps
fst
rcr
call
ffreep
mov
ins
dec
pop
or
jne
(bad)
mov
rol
or
xchg
add
mov
(bad)
cmp
pop
cmps
and
or
mov
test
pop
into
in
shl
hlt
das
stos
out
xchg
xchg
sbb
mov
inc
dec
out
cmp
dec
test
pop
push
cmp
mov
test
xor
adc
in
in
pop
sbb
pop
mov
fisub
nop
push
outs
cmp
cwde
sbb
jnp
jmp
jecxz
adc
inc
stos
daa
pop
sub
sub
mov
test
sbb
adc
in
mov
xchg
fwait
adc
sub
aas
xchg
mov
mov
icebp
fnstcw
aaa
(bad)
in
pop
in
arpl
xor
cwde
sar
sbb
fist
jecxz
xchg
jl
retf
inc
or
add
mov
add
pmulhuw
xchg
jmp
rol
sbb
aad
movs
nop
in
pop
mov
sub
ret
cwde
add
scas
jg
xor
or
jae
cmp
lock
mov
enter
imul
pop
push
xor
ins
lea
cld
jae
xchg
push
pop
frstpm(287
and
and
fsubrp
fst
add
mov
sub
aad
loope
test
jmp
push
mov
pop
stos
or
inc
rcr
fs
das
xlat
mov
pop
mov
addr16
jae
mov
out
jno
(bad)
jecxz
clc
cmp
jmp
sbb
dec
cld
inc
shr
ins
cmp
in
or
jp
sbb
dec
push
push
adc
or
sbb
xor
jle
je
fwait
retf
mov
repnz
xchg
mov
mov
popa
push
add
je
std
or
mov
or
mov
mov
(bad)
xchg
sub
dec
imul
mov
dec
cmc
jge
fwait
mov
test
sbb
fist
ss
mov
test
xchg
jecxz
in
into
cmp
lods
call
xchg
or
es
and
adc
pop
in
test
pop
retf
jg
mov
ja
push
(bad)
mov
adc
inc
mov
pop
out
scas
addr16
and
pop
add
dec
cmp
adc
fsubr
hlt
js
adc
push
(bad)
popf
fwait
mov
cmps
fidiv
nop
sahf
shl
push
xlat
mov
xchg
push
sbb
(bad)
into
push
je
ror
aam
stos
lods
test
imul
adc
push
jg
mov
int
and
out
gs
cmp
sahf
imul
dec
js
pop
mov
pop
mov
ss
or
cmps
into
mov
pop
jmp
jns
dec
(bad)
fsubr
pop
jg
jbe
lahf
add
mov
xchg
cld
repz
mov
setns
repz
mov
pusha
dec
popf
xor
mov
push
pop
fist
(bad)
sub
jmp
jl
jnp
scas
mov
xchg
pop
mov
ins
mov
xchg
ficom
jmp
sbb
loope
xlat
or
test
retf
loopne
iret
jno
int
push
cmps
in
ins
test
lock
sbb
mov
add
call
shl
xchg
in
iret
in
imul
(bad)
data16
int
mov
shl
mov
idiv
outs
ja
push
cmps
idiv
mov
fcomp
in
int
int
add
(bad)
call
addr16
daa
loope
mov
push
out
lea
pushf
pop
aas
cmp
hlt
sbb
fimul
je
push
add
cdq
imul
scas
inc
into
sahf
jmp
les
sar
mov
addr16
iret
push
xor
push
mov
xlat
sbb
ror
mov
sbb
sar
fcmovb
mov
jns
(bad)
inc
mov
xchg
pop
mov
das
cmps
mov
xchg
lods
idiv
out
mov
adc
mov
mov
jne
xor
jo
mov
pop
and
adc
ins
ret
mov
imul
pop
mov
dec
or
xchg
setp
xor
mov
pusha
add
pop
std
xchg
mov
sub
cmp
ja
imul
push
cmp
ins
xchg
clc
mov
movs
dec
or
icebp
(bad)
daa
call
movs
or
jmp
out
lods
stos
jmp
mov
sti
jnp
xor
xor
jno
movs
pop
leave
jno
bound
shr
mov
out
data16
ss
add
aam
mov
inc
(bad)
jmp
pushf
clc
jbe
pop
or
mov
adc
push
xchg
dec
loope
xchg
inc
ror
fnstenv
jge
cli
es
adc
adc
fiadd
shl
fcmovb
or
(bad)
jbe
aas
pop
jo
cmp
push
rcr
mov
inc
(bad)
push
mov
xchg
sub
mov
lock
jbe
fsubr
jmp
aam
mov
pop
loopne
dec
shl
cmp
rol
jne
(bad)
lods
push
movs
leave
call
push
jns
pop
pop
out
scas
les
addr16
add
fadd
js
movlps
int3
scas
and
or
(bad)
pop
mov
loop
popa
call
mov
mov
mov
test
test
test
sub
push
or
cmp
sub
or
mov
lock
push
push
cs
mov
xor
and
rcl
jg
dec
mov
repnz
les
adc
ss
mov
iret
xchg
add
inc
test
fmul
jne
push
fwait
add
test
fadd
mov
dec
dec
xchg
cld
jp
cmp
lahf
pop
ror
je
mov
ins
cld
jg
outs
sahf
scas
jno
add
and
nop
fs
add
jg
sub
xchg
sti
mov
sbb
xchg
inc
inc
mov
sbb
dec
int3
cmps
inc
les
(bad)
wrmsr
and
(bad)
fimul
mov
loop
popa
mov
xchg
or
repnz
(bad)
sub
add
xchg
dec
add
jbe
mov
stos
aad
push
inc
cdq
fidivr
and
leave
mov
enter
pushf
adc
jle
sbb
cmps
add
stc
add
adc
or
fs
jmp
jbe
sbb
pop
pushf
push
mov
push
push
or
loope
mov
or
adc
(bad)
(bad)
sbb
pop
aam
adc
xchg
or
jl
hlt
es
pop
cmp
aas
sub
std
mul
cdq
movs
adc
pop
mov
add
push
and
stos
lods
push
sub
sbb
stc
and
adc
test
sub
ret
repz
aas
std
dec
jno
ret
mov
push
imul
in
or
ds
std
push
mov
mov
(bad)
repnz
retf
add
push
jp
push
daa
add
hlt
cmps
and
out
ja
jge
pusha
repnz
sub
shl
rol
mov
push
pop
adc
(bad)
fidivr
and
fisub
and
dec
je
mov
mov
adc
mov
test
adc
push
cmps
imul
xchg
loopne
stos
cmc
(bad)
test
sub
inc
or
aaa
sub
cmps
cmps
jecxz
mov
jns
mov
ficomp
in
xor
adc
pop
xchg
mov
xor
outs
sti
jbe
cdq
(bad)
add
push
addr16
mov
or
cmp
push
nop
clc
iret
(bad)
push
imul
inc
call
and
div
xlat
imul
aad
dec
mov
mul
xor
aad
pop
in
ins
dec
xchg
mov
test
xor
pop
sti
push
jecxz
xchg
jbe
fcomip
mov
cmp
inc
in
push
cwde
js
das
js
inc
fnstenv
xchg
mov
cmp
xor
loope
sbb
push
cmp
xchg
stos
push
pop
in
sbb
jb
jbe
ss
pop
test
mov
jae
jmp
inc
call
mov
mov
xchg
xor
lahf
icebp
jmp
or
sahf
mov
(bad)
mov
mov
arpl
iret
les
sbb
pop
jl
call
dec
pop
cwde
or
imul
aad
push
mov
in
stos
adc
xchg
push
push
data16
mov
les
ret
(bad)
test
sub
mov
call
mov
in
or
dec
xchg
scas
mov
pop
cmp
int3
fidivr
pop
dec
mov
dec
xor
adc
retf
adc
and
and
les
cs
pop
push
add
mov
stos
pop
cwde
inc
mov
lock
jmp
pop
test
dec
imul
into
not
cdq
loop
mov
loopne
pop
call
dec
add
(bad)
in
or
shl
push
clc
adc
or
cmc
jp
ret
out
in
push
jmp
test
push
movs
xchg
mov
dec
inc
cmp
ins
push
imul
push
mov
adc
push
sub
(bad)
cmps
iret
or
je
sub
test
xor
mov
lea
sub
add
jmp
retf
push
mov
lds
arpl
push
test
sahf
imul
and
push
cmp
dec
mov
(bad)
add
stos
cs
cwde
mov
stos
sti
cwde
xor
cmp
sbb
pop
push
cs
adc
fadd
dec
push
out
repnz
xchg
xor
stos
jl
xlat
xor
xor
jl
lods
inc
inc
jle
and
jp
(bad)
out
in
(bad)
sbb
push
sbb
and
and
dec
daa
jp
ja
sub
loop
mov
mov
imul
cmc
xchg
jmp
test
mov
aad
push
xchg
push
test
enter
fmul
xlat
fcom
mov
mov
xchg
xor
push
pop
ins
outs
jg
xchg
jo
je
xchg
icebp
arpl
imul
xchg
cmp
in
sub
cmp
mov
mov
sbb
cs
xchg
nop
in
loopne
xor
lods
xchg
mov
xchg
push
pop
(bad)
out
xor
shl
movs
mov
(bad)
xchg
movs
jb
aas
xchg
hlt
adc
daa
fdivr
or
adc
pushf
jae
or
push
aas
push
mov
or
push
mov
gs
gs
gs
scas
add
out
push
in
lods
sub
js
(bad)
not
adc
add
adc
repnz
jne
cld
pop
and
lock
in
fnsave
dec
repz
mov
cmp
pop
push
mov
pushf
fidivr
ds
sar
or
fistp
dec
jecxz
bound
ja
ficomp
(bad)
fwait
push
enter
jmp
inc
or
xchg
and
xchg
push
(bad)
enter
jg
movs
cdq
test
es
rcl
push
stos
shl
pop
cmp
mov
mov
xor
rcr
jle
call
hlt
daa
sub
jo
xor
scas
stos
fist
push
inc
scas
int
(bad)
jo
sar
ret
retf
xchg
sahf
leave
clc
icebp
mov
stos
loop
xchg
pop
and
sub
leave
out
or
and
mov
leave
out
cmps
into
sbb
push
int3
ds
pop
popf
popa
mov
cli
mov
sub
and
leave
popa
enter
sbb
outs
xor
pop
cwde
sub
ins
inc
xchg
mov
push
retf
add
push
fdivr
shl
and
fist
mov
std
in
push
fdivp
cmp
les
and
inc
sbb
inc
inc
(bad)
div
pop
dec
js
cwde
cwde
or
out
adc
dec
cmc
mov
xchg
loop
pop
imul
call
mov
and
jg
jo
and
rcr
test
setle
out
jecxz
test
retf
sbb
scas
dec
cmps
fsub
outs
(bad)
idiv
and
add
xchg
jl
add
mov
jle
pusha
shl
adc
sbb
iret
dec
popa
add
cmp
iret
out
bound
mov
imul
mov
lds
cmp
cmp
mov
pop
sbb
add
es
(bad)
jb
repz
add
jg
scas
xchg
clc
into
loop
test
(bad)
mov
fldlg2
cwde
mov
js
pop
mov
jne
sar
push
pop
mov
arpl
outs
jmp
dec
jae
inc
outs
inc
push
rcr
mov
das
(bad)
push
popf
lds
mov
jb
mov
stos
xor
in
ins
inc
mov
mov
jecxz
and
push
pop
jb
fucomp
pusha
push
jp
dec
mov
data16
leave
push
mov
rol
dec
xor
pop
cmps
outs
sahf
xchg
call
cmp
(bad)
sti
lds
lahf
dec
and
dec
ins
sti
iret
xor
movs
sbb
addr16
jle
daa
fnstcw
out
rol
dec
jg
mov
pushf
xor
fld1
popf
dec
mov
jl
pushf
and
shl
jl
in
pop
ss
sti
mov
mov
and
es
xor
mov
xor
sar
icebp
fidivr
and
jle
sbb
popf
push
das
xchg
mov
push
enter
mov
sbb
xchg
dec
nop
adc
scas
and
test
ret
push
sub
xor
aas
dec
push
xchg
leave
iret
adc
inc
mov
fild
jg
sub
cmp
jge
psllq
jbe
imul
and
mov
es
ficomp
loope
adc
out
push
pop
mov
ror
js
repz
lahf
sub
push
pop
(bad)
leave
dec
(bad)
and
xchg
leave
sub
das
retf
sub
mov
dec
ret
out
into
adc
hlt
dec
mov
(bad)
in
(bad)
xchg
cmp
add
inc
sub
fwait
dec
mov
std
xchg
fs
dec
mov
xchg
pop
mov
(bad)
xchg
push
or
enter
gs
sub
mul
cdq
push
fwait
in
nop
or
xor
hlt
xchg
scas
ins
int3
jmp
das
sbb
mov
xor
call
xor
xlat
jb
adc
aaa
xchg
mov
popa
(bad)
fstp
lea
xchg
lea
mov
push
adc
scas
sbb
ja
pop
(bad)
movs
push
pop
sbb
sbb
xchg
xor
mov
sub
in
scas
push
sub
arpl
mov
dec
mov
(bad)
fdiv
int
(bad)
jne
or
(bad)
adc
gs
jno
push
sub
xchg
cmp
fist
mov
pop
sub
cmp
jmp
add
in
out
in
aam
and
push
push
mov
adc
popf
ja
aam
out
pop
ins
add
icebp
gs
aam
js
jnp
jl
shr
xor
lds
or
mov
cld
int
shr
and
inc
sbb
mov
or
pushf
das
daa
outs
add
and
pop
jg
retf
aam
cmp
or
pop
hlt
sar
test
push
dec
rcr
jne
or
nop
sbb
icebp
dec
cmp
fs
lahf
popf
outs
daa
pop
dec
pushf
mov
pop
xrelease
ja
fadd
call
out
dec
pushf
imul
mov
fcmovne
test
aad
test
outs
or
cwde
std
call
stc
xchg
sahf
fldcw
shl
and
jmp
push
aam
int
add
lock
mov
popf
pop
ret
shr
ret
add
pushf
sub
sub
push
(bad)
fcmovb
mov
lods
call
bound
es
call
mov
fstp
jmp
(bad)
pop
jb
loopne
out
dec
retf
test
jnp
(bad)
(bad)
mov
push
cmp
mov
xor
inc
push
inc
dec
adc
loope
jg
xlat
lods
adc
mov
lds
and
movs
sbb
mov
pop
inc
and
inc
add
dec
hlt
int
xchg
test
out
sbb
movs
inc
pop
gs
push
fbstp
xchg
xlat
test
shl
pop
fisub
pop
scas
mov
les
xchg
add
sbb
push
push
push
mov
je
inc
ror
or
mov
pop
jmp
sub
test
sub
lock
pop
les
inc
pop
adc
lods
mov
adc
hlt
repz
xor
lea
and
cmc
inc
jne
imul
xor
pop
or
sub
pop
rsqrtps
mov
inc
pushf
test
jmp
rcr
xchg
aas
cmp
cmp
jo
xchg
sub
ja
and
sbb
(bad)
mov
int
xlat
ins
mov
mov
cld
jno
add
lock
xchg
punpckhbw
in
nop
xor
adc
loop
xor
test
sbb
movs
xchg
mov
mov
mov
cmp
push
mov
in
dec
or
xlat
xor
dec
retf
sbb
js
and
xchg
retf
lea
and
bound
fisubr
or
and
outs
not
mov
sbb
add
in
adc
out
mov
jns
dec
js
enter
cmp
pop
call
retf
lods
pop
adc
shl
jno
mov
jmp
fcmove
ja
rol
and
jecxz
inc
ss
stos
sbb
fs
test
into
adc
scas
lock
jo
sub
outs
adc
and
int
mov
sbb
ror
add
dec
xchg
jmp
and
dec
js
xchg
mov
pop
test
fcmovb
mov
push
mov
push
aam
outs
aaa
cld
jnp
xchg
outs
and
in
sub
iret
imul
jne
mov
les
sbb
(bad)
fsub
xor
push
add
repnz
fld
call
test
mov
hlt
je
mov
data16
stos
pop
adc
test
jl
cmp
cmp
int
imul
shl
(bad)
mov
add
mov
fldenv
mov
in
psubsb
xchg
adc
leave
sub
jmpw
movs
mov
add
test
dec
xor
pop
daa
mov
mov
repz
mov
xchg
or
ja
jmp
(bad)
sbb
aad
lea
xchg
push
xchg
std
jmp
ss
inc
call
dec
les
sub
pop
dec
push
pop
and
jmp
retf
dec
ds
pop
push
mov
sbb
adc
std
pop
call
js
ja
popf
jnp
and
stos
inc
adc
inc
push
je
test
inc
fstp
or
loop
sbb
mov
xor
jp
xchg
rcl
cmp
mov
dec
mov
fld
xor
add
mov
dec
add
mov
push
adc
cld
inc
cwde
or
je
outs
mov
sub
clc
pusha
mov
aam
inc
jae
push
push
and
cmps
aaa
jnp
jecxz
cmp
int3
movs
imul
and
scas
mov
pop
xchg
aaa
dec
ins
cmp
mov
aas
stos
mov
ret
add
jbe
sub
ds
xchg
pop
pop
test
jno
arpl
add
cmps
test
inc
and
call
in
or
fxch
aam
(bad)
mov
xchg
cdq
test
mov
jecxz
scas
test
xchg
mov
(bad)
sub
retf
ins
inc
test
fild
fst
(bad)
and
mov
sbb
shr
xchg
mov
fisub
mov
pop
mov
lds
inc
sbb
mov
imul
jb
mov
and
push
inc
sub
cmp
cli
sub
imul
mov
repnz
mov
es
stos
fwait
dec
(bad)
bound
lahf
ins
ins
inc
cmp
inc
mov
sbb
inc
add
ror
mov
or
jae
adc
das
jno
push
stos
add
pop
push
add
stos
inc
cs
and
inc
repz
cmp
inc
mov
mov
into
or
ret
scas
out
outs
inc
jecxz
xor
dec
mov
lods
cld
popa
xor
and
lahf
inc
mov
frstor
xchg
mov
lock
cmp
jp
mov
xor
mov
mov
mov
nop
aam
mov
dec
mov
shl
in
pop
ror
pop
fist
xchg
add
cmp
sbb
retf
aad
pop
loopne
push
inc
retf
add
sub
addr16
iret
leave
xor
sbb
xor
lods
test
(bad)
loopne
sar
leave
mov
cs
jb
imul
cmp
dec
dec
sbb
(bad)
stc
mov
retf
in
fs
cs
mov
jmp
inc
stos
repz
sub
fwait
mov
sbb
leave
pop
sub
add
or
sub
pop
push
or
clc
jle
pop
fs
xchg
cmp
mov
sbb
adc
(bad)
loope
xchg
adc
add
(bad)
adc
ret
(bad)
lock
dec
pusha
adc
add
movs
cmp
mov
xchg
push
iret
cdq
and
lds
icebp
loopne
icebp
ins
out
mov
loop
test
les
in
or
dec
xchg
cmp
push
inc
inc
test
popa
out
pusha
and
call
inc
or
adc
icebp
mov
jp
ins
xor
push
mov
dec
fstp
mov
cmp
and
inc
sbb
mov
sar
xor
retf
aad
leave
and
jae
jae
call
adc
sbb
inc
mov
cmc
sub
retf
add
aaa
rcr
xchg
sbb
xchg
rcr
loope
pusha
fs
int3
and
sub
rcr
cmp
xor
ins
mov
add
js
aas
add
mov
in
jb
and
loopne
call
push
jg
or
cmp
loopne
and
rcr
adc
jae
test
fcmovu
adc
mov
(bad)
or
cld
mov
out
imul
mov
div
mov
mov
push
shl
mov
or
cmp
retf
mov
int3
jecxz
cmp
xchg
jp
retf
cld
lods
adc
xchg
cmp
ins
cdq
in
cmp
int
daa
inc
les
je
cmp
sbb
mov
pop
xor
xor
jnp
mov
outs
jg
stos
stc
and
outs
sbb
cs
jp
xor
aad
cmps
and
and
xlat
test
movs
sub
into
mov
sbb
and
call
scas
pop
xor
nop
mov
cmp
jp
fst
addr16
icebp
int3
push
enter
cdq
lds
add
jmp
loopne
sbb
add
int3
cmps
cs
inc
call
adc
cmp
test
jge
test
fnstsw
je
push
in
icebp
dec
and
ret
pop
or
popa
fist
fwait
add
pop
mov
call
fcom
add
or
ror
sbb
call
fcom
nop
icebp
inc
(bad)
push
xlat
and
dec
ins
dec
out
fisttp
cmp
mov
cdq
jns
push
xchg
mov
xor
push
mov
pop
jmp
mov
out
and
add
xor
int
xor
mov
sub
arpl
dec
mov
das
adc
in
into
push
call
push
sar
xchg
mov
cmc
out
jge
test
test
mov
add
sub
mov
jno
mov
(bad)
cli
push
jae
sbb
repz
movs
lea
jmp
int3
push
lock
jge
shl
retf
pop
or
cmc
dec
scas
lods
clc
outs
jmp
movs
inc
lahf
in
jae
xchg
in
mov
mov
(bad)
adc
es
mov
inc
lock
daa
or
push
inc
rcl
mov
add
mov
sbb
mov
xchg
arpl
mov
xor
mov
cli
aam
xor
adc
inc
dec
cli
icebp
cmp
inc
aaa
aam
shl
pop
ret
addr16
loopne
dec
dec
push
pop
cmp
arpl
mov
xchg
(bad)
popa
mov
mov
(bad)
sbb
push
xchg
cld
or
arpl
fst
jne
and
cmp
(bad)
and
add
dec
outs
dec
aaa
es
(bad)
into
jmp
imul
push
inc
clc
mov
rcr
add
rcr
sbb
mov
xchg
xchg
cmp
das
arpl
mov
and
sbb
fstp
dec
hlt
xor
inc
push
push
imul
sub
jno
and
jecxz
push
sub
arpl
pop
sbb
mov
mov
adc
xor
push
or
or
jmp
repnz
mov
jge
lahf
xor
es
hlt
int3
stc
into
or
mov
movs
push
shl
pop
add
cli
jg
xor
std
test
pop
out
inc
lods
push
sub
pop
pushf
pop
mov
loopne
xor
icebp
jo
mov
test
mov
xor
jns
mov
ja
cs
adc
xchg
out
daa
add
std
stos
out
leave
mov
je
xchg
data16
sbb
jmp
dec
xor
xor
pop
cmp
pop
sti
push
stos
adc
mov
cld
dec
(bad)
fimul
jle
xor
sub
loope
xor
add
cs
cmps
or
mov
aaa
aad
bound
(bad)
mov
scas
push
loopne
inc
pop
sti
xor
cld
in
mov
es
push
mov
xchg
loopne
test
sub
call
xchg
iret
cmps
xchg
cld
fwait
cmp
inc
jno
test
dec
enter
pop
fmulp
js
cld
je
jl
fdivr
jmp
sub
pop
sub
mov
dec
(bad)
xor
in
cmp
cmp
xchg
test
(bad)
jl
mov
dec
retf
push
mov
call
(bad)
mov
cmps
cmps
pusha
and
or
test
xlat
cmp
mov
mov
add
push
ins
movs
loop
int3
stos
and
inc
push
fxch
retf
xchg
push
lods
and
push
push
xchg
cmp
retf
idiv
cmp
(bad)
jb
inc
lahf
cwde
ds
jp
loope
add
in
sbb
pop
and
ss
inc
and
push
mov
jmp
dec
cmp
adc
xor
daa
sahf
nop
(bad)
into
test
repz
ja
xor
outs
ins
(bad)
mov
movs
in
fisttp
cld
enter
aaa
daa
push
into
cs
out
mov
xchg
mov
xor
inc
xchg
xchg
movs
and
jl
out
mov
test
mov
test
fsubr
lahf
sub
sbb
fist
bound
cli
jmp
je
jmp
pusha
and
adc
pop
popf
mov
mov
mov
jmp
aaa
add
setne
cmp
mov
lods
imul
jne
test
mov
dec
cmps
pop
sub
dec
pop
jl
push
fistp
in
or
call
aas
jbe
repz
mov
aas
jb
arpl
inc
cdq
xlat
aam
aaa
mov
mov
mov
lds
in
push
nop
(bad)
fist
pop
test
xchg
ss
adc
dec
fs
push
jmp
fsub
jmp
rcl
push
lea
aas
push
or
xchg
cmp
dec
js
retf
mov
inc
std
sbb
ins
mov
add
inc
loop
mov
rol
pop
data16
add
mov
fs
dec
mov
cmc
mov
mov
in
imul
mov
mov
mov
adc
dec
in
xchg
mov
or
int3
(bad)
rcl
pop
mov
pop
or
and
mov
or
les
cmp
adc
inc
sbb
idiv
or
push
push
div
mov
popf
rcl
rcr
mov
into
mov
mov
xor
inc
push
push
cmp
mov
jmp
loop
lods
add
pop
dec
xchg
dec
scas
cmp
int3
or
cmp
cs
les
jg
jo
add
pop
aas
call
and
and
mov
or
mov
imul
mov
dec
test
push
cld
retf
hlt
fbstp
in
mov
stos
push
add
aas
test
jp
leave
and
mov
pop
ficomp
xchg
mov
cmps
pop
(bad)
fistp
iret
pop
adc
movs
inc
xchg
popf
sbb
dec
xchg
mul
sub
ficomp
or
in
jmp
inc
fwait
popa
ret
push
dec
test
movs
addr16
mov
sub
xchg
jnp
int3
stc
dec
fcom
jno
stos
sub
inc
sub
cmc
push
xlat
loop
aad
scas
lods
nop
popa
xchg
mov
or
in
pushf
push
(bad)
gs
retf
loopne
js
push
xor
jb
test
fimul
and
push
sahf
icebp
out
push
mov
xchg
icebp
(bad)
cli
lea
shr
test
retf
xor
or
sub
xchg
push
outs
inc
cmp
push
cmp
dec
push
out
je
bound
(bad)
(bad)
sbb
stos
inc
mov
sub
push
cli
mov
lods
test
push
fdiv
stos
cmp
jns
outs
or
dec
inc
push
dec
adc
(bad)
and
mov
(bad)
cmps
xchg
mov
dec
mov
fcomp
dec
outs
fild
push
cs
sub
or
hlt
adc
pop
push
push
popf
neg
or
enter
xor
mov
push
fld
in
and
adc
pop
out
cs
mov
int3
jbe
xchg
fisttp
or
ins
out
std
jmp
xchg
fdivp
das
cmp
push
aas
popa
pop
push
or
dec
mov
(bad)
(bad)
mov
std
mov
mov
std
cmp
mov
mov
ss
push
add
mov
mov
icebp
hlt
xor
mov
dec
loopne
sub
push
ss
push
mov
mov
cmp
(bad)
jmp
ds
pop
nop
or
js
push
xor
dec
out
call
retf
mov
pop
push
cli
mov
mov
hlt
int3
rcl
lea
std
outs
cld
xchg
rol
pop
xor
or
cmp
adc
xchg
mov
into
push
dec
pop
dec
not
cmps
mov
mov
sti
inc
pushf
mov
adc
ja
enter
and
xor
mov
cmps
mov
mov
retf
dec
lods
in
jb
fs
xchg
jb
push
mov
inc
adc
out
sbb
out
in
ins
movs
mov
int
pop
and
cld
stos
jno
inc
pop
sbb
in
repnz
dec
call
(bad)
out
shr
mov
xchg
mov
shl
gs
shl
pop
test
xchg
mov
in
movs
mov
lock
or
push
cmc
adc
clc
test
jle
movs
pop
adc
pop
ds
int
ins
je
sahf
frstor
inc
scas
fcom
pop
pop
dec
shl
fild
push
lods
xchg
in
fwait
mov
dec
imul
movs
(bad)
cmc
addr16
inc
sbb
cmc
mov
xchg
psubq
fs
sub
jae
jnp
loopne
lea
jns
jb
jae
(bad)
ficomp
out
push
pop
or
xor
fs
mov
mov
push
and
pop
sub
aam
mov
cmps
imul
and
and
inc
mov
jmp
hlt
stc
sbb
ds
out
inc
push
adc
adc
push
int
pop
mov
jecxz
sbb
cdq
les
mov
dec
jmp
adc
or
mov
push
mov
push
jmp
pmaddwd
jno
fmul
mov
int
fbld
xchg
jle
push
out
xchg
(bad)
in
sub
out
and
dec
push
dec
and
out
push
add
nop
push
jecxz
adc
push
inc
imul
dec
push
pusha
(bad)
sub
push
pop
repnz
mov
adc
inc
fwait
pop
daa
cdq
movs
push
push
retf
push
stc
sbb
and
xor
xchg
mov
mov
and
iret
sbb
cmps
add
dec
adc
jmp
mov
arpl
xchg
fdiv
mov
daa
in
jl
lahf
aas
iret
xor
cld
mov
lock
and
arpl
mov
fistp
pop
out
mov
xor
mov
retf
cmp
in
jge
mov
ds
clc
inc
fidiv
cmps
imul
loop
mov
push
push
stos
js
push
jmp
je
and
fs
xor
dec
js
vpunpckhdq
xchg
bound
mov
mov
out
push
es
mov
lods
or
sahf
xchg
cmps
cmp
pop
iret
xlat
repnz
mov
adc
out
jnp
sub
outs
mov
in
pop
mov
sbb
fstp
daa
jmp
dec
mov
ds
cmp
sub
push
sub
(bad)
cmp
xchg
mov
enter
cld
dec
mov
das
outs
addr16
inc
sahf
sahf
pop
pop
mov
mov
xor
sti
cmp
xor
leave
std
mov
adc
xor
(bad)
sub
ret
add
adc
idiv
pop
and
xor
ds
into
fisubr
mov
pop
mov
call
push
xchg
mov
enter
clc
sbb
jne
push
lahf
xchg
aaa
cmp
clc
(bad)
pop
(bad)
push
fs
fwait
mov
lahf
clc
cmp
div
mov
cmp
mov
mov
xchg
mov
mov
ss
(bad)
in
sub
shr
adc
xchg
mov
je
neg
xchg
dec
aaa
lea
xchg
ds
loop
loope
jge
out
loopne
mov
xchg
add
pop
les
in
add
test
fcomp
inc
sbb
or
fs
add
sub
cmp
nop
repnz
cmps
adc
jmp
call
std
popa
lods
cmp
adc
adc
add
das
jp
add
jno
fs
(bad)
jno
jl
xchg
mov
sbb
xchg
ds
mul
pop
mov
xchg
inc
mov
mov
leave
or
in
jmp
inc
cmp
into
pop
add
and
out
add
gs
jne
(bad)
dec
icebp
xchg
jne
jp
sbb
xchg
in
and
loopne
(bad)
imul
push
in
xor
mov
daa
push
fyl2x
icebp
(bad)
pop
and
sub
clc
mov
mov
xor
xor
adc
jbe
repnz
xchg
js
(bad)
push
mov
xchg
fwait
movs
clc
and
loop
xchg
retf
in
mov
js
dec
jl
sub
add
ret
arpl
ins
shr
es
pop
push
sbb
adc
hlt
ror
mul
movs
leave
es
clc
and
sbb
mov
and
jmp
cli
js
cmps
daa
cmc
fs
or
sub
xor
cdq
lds
sub
aaa
mov
push
xchg
add
push
xor
aam
pop
inc
pusha
mov
scas
mov
iret
xchg
adc
(bad)
adc
pop
scas
jl
sti
retf
sbb
pop
xor
jmp
jnp
out
xor
inc
loope
dec
cmp
cmp
adc
xor
adc
sbb
and
stc
jmp
dec
push
lods
lods
mov
popa
jmp
js
xchg
pop
cli
jbe
into
mov
cli
jo
ds
adc
lods
dec
enter
cwde
pop
adc
loop
es
jne
jg
popf
lods
in
sbb
inc
fsub
test
(bad)
pop
test
adc
push
into
fcmovu
in
cmps
out
pushf
xchg
in
or
push
mov
xchg
and
fcmovbe
add
xor
frstor
adc
mov
xor
add
adc
xor
or
jo
fbld
inc
mov
outs
scas
mov
xor
das
dec
or
neg
jg
push
xchg
fadd
in
or
lock
sub
add
push
aaa
pop
rcl
aaa
mov
daa
jae
cli
lds
cdq
and
into
sbb
jbe
pop
mov
push
adc
or
stos
inc
pop
inc
cwde
mov
aas
in
jnp
xor
shl
cmp
je
inc
pop
pusha
mov
mov
xor
or
cdq
dec
rcl
rcl
and
mov
cmp
loopne
stos
shl
imul
fld
or
ss
push
in
jecxz
out
aad
imul
jmp
ss
cmp
cmp
dec
mov
int3
fstp
cdq
cmp
sub
xchg
fist
imul
icebp
test
gs
and
fld
and
aas
jbe
sub
stc
mov
pushf
std
sub
jmp
xor
add
mov
mov
mov
adc
je
push
nop
mov
cmps
scas
bound
or
and
inc
outs
mov
xor
inc
mov
sbb
mov
or
or
push
cmp
xchg
mov
push
sub
pop
add
jne
add
arpl
add
test
int3
xchg
cmps
fwait
out
mov
mov
cwde
ror
and
in
mov
je
dec
(bad)
shl
retf
clc
push
mov
inc
fistp
inc
cmp
or
stos
fst
jne
sbb
sbb
sahf
add
and
ret
inc
scas
mov
cmp
jbe
std
xor
push
inc
add
and
rcl
xchg
daa
inc
push
(bad)
aad
neg
pop
outs
std
movs
pusha
cmp
sti
fdivr
adc
test
mov
sar
pop
movs
lds
xchg
jmp
jo
xchg
xor
lock
add
xor
mov
test
lahf
retf
xor
fdivr
dec
lahf
adc
mov
or
lds
xor
xor
imul
xor
pop
loopne
fidivr
mov
aaa
cwde
sbb
mov
es
sub
push
push
jnp
(bad)
mov
sub
ret
push
pop
test
aad
push
(bad)
push
ret
fld
mov
(bad)
loope
ficomp
loope
test
cdq
dec
push
inc
or
jmp
jle
mov
movs
inc
or
into
mov
mov
xor
and
mov
icebp
mov
mov
je
or
mov
xchg
add
sub
mov
xor
aad
cmp
pop
pop
push
ror
aad
ins
xor
mov
fs
cmp
ins
mov
aam
adc
xlat
and
idiv
xchg
xchg
and
cmp
cmp
jb
cmp
xchg
mov
gs
adc
cmp
fnstcw
jl
or
mov
fisub
ins
pop
mov
leave
mov
cmp
inc
and
push
shrd
ret
(bad)
jb
hlt
jmp
dec
test
push
in
outs
pop
ss
sub
xchg
sti
in
sbb
outs
push
push
fadd
outs
pop
repnz
cdq
fs
pop
inc
test
sub
dec
int
repnz
sub
xchg
push
inc
mov
mov
add
cmps
ins
popa
stc
pop
or
jecxz
cmp
jne
push
daa
inc
xchg
mov
fwait
ins
dec
ins
movs
mov
mov
mov
scas
outs
inc
popf
mov
(bad)
push
jb
pop
cmp
inc
dec
push
les
outs
jns
std
retf
imul
dec
leave
das
adc
dec
adc
mov
aad
shl
cld
jnp
ja
rol
call
lock
push
ror
xchg
(bad)
hlt
adc
pop
arpl
lahf
fld
sub
test
sar
inc
(bad)
arpl
cmc
or
push
jmp
repnz
mov
shr
mov
scas
ret
sub
repnz
mov
push
dec
scas
aas
shl
xor
sahf
rcr
iret
into
mov
jno
nop
ror
sub
sahf
and
dec
push
cmp
aam
test
outs
dec
inc
(bad)
mov
or
inc
and
std
adc
push
lock
pop
inc
mov
mov
lods
pop
ret
mul
xchg
addr16
cmp
fwait
xor
mov
or
inc
push
out
or
push
xchg
js
and
cmps
and
xor
and
xor
sbb
sbb
repz
mov
outs
cmp
or
repnz
jp
xor
neg
dec
ficom
icebp
in
cmp
cmp
cmps
pop
lods
stc
or
daa
sub
mov
xchg
outs
and
pop
shl
and
mov
mov
sub
sbb
jnp
inc
cmc
cmp
pop
retf
nop
push
mov
repz
xor
mov
jge
fcmovnb
and
push
mov
fxch
jbe
adc
shr
cmp
push
pop
daa
test
and
sets
mov
mov
pop
sbb
mov
jne
pop
arpl
fcomp
loop
dec
gs
xchg
das
mov
aad
fstp
cmc
mov
fidiv
xchg
out
add
push
jae
jno
push
fmul
xchg
cld
in
dec
fwait
cmp
xor
loope
add
jnp
dec
das
les
or
adc
xor
lds
pop
fcom
fdivr
aam
xchg
lea
jmp
xor
mov
lods
xor
and
cli
or
xchg
xor
cmp
sub
ret
add
test
stc
shl
movhps
rcr
stos
lock
dec
retf
xchg
sub
test
mov
sar
ja
jnp
ret
cmp
or
std
scas
pop
push
das
ss
daa
test
jg
xchg
adc
and
test
stc
mov
test
unpckhps
mov
fistp
jo
xor
scas
pop
sahf
sub
pop
push
in
xchg
popf
or
or
sar
imul
cwde
xchg
add
mov
push
aam
pushf
sar
xchg
ss
pop
(bad)
mov
cmps
out
mov
not
sbb
mov
mov
daa
cmps
aad
shl
push
cld
stc
cli
pushf
clc
dec
and
int
outs
jne
arpl
cmps
pushf
xchg
or
ffree
xor
mov
jbe
popf
cdq
repnz
xor
cld
push
sbb
push
cmp
or
xchg
sti
xchg
xchg
adc
movlhps
ret
das
retf
inc
mov
jno
scas
and
xlat
inc
mov
dec
mov
lock
mov
into
sbb
pop
(bad)
fcom
push
cmp
not
(bad)
mov
psubd
lods
mov
lds
xchg
test
sbb
(bad)
popa
mov
pop
std
clc
(bad)
(bad)
mov
dec
pushf
cmps
sub
shr
fdiv
inc
inc
inc
xor
call
inc
xchg
out
pop
and
cmp
mov
(bad)
pslld
pop
rol
jne
push
adc
cs
mov
xchg
lahf
ins
icebp
lock
xchg
sub
mov
pop
shl
or
fnsave
call
xchg
(bad)
test
add
ins
lahf
sbb
pop
jo
das
aad
mov
xor
cmps
push
test
xlat
push
add
sbb
shl
test
mov
cmc
or
cld
pop
in
sbb
call
dec
mov
cmp
in
xchg
pop
nop
rol
stc
out
pcmpeqb
mov
sbb
xlat
inc
movs
aad
call
lods
int
jmp
arpl
jge
out
mov
push
fiadd
adc
ret
jmp
lea
and
cdq
mov
add
jo
(bad)
cli
xchg
stc
out
adc
lds
xchg
movs
mov
cmp
push
fmul
jo
fcom
cs
cwde
shl
xchg
adc
xchg
mov
or
adc
mov
clc
loop
stc
fcmovb
dec
dec
pop
dec
push
add
imul
adc
popf
mov
or
cmp
mov
jecxz
stos
or
xor
mov
test
fild
add
xor
jb
fisub
xchg
adc
lock
jnp
outs
aaa
scas
mov
test
add
in
(bad)
adc
mov
push
cmp
sub
xor
adc
std
xchg
out
bound
dec
pop
mov
retf
fdivr
jnp
aas
xlat
dec
dec
sbb
xor
adc
scas
add
and
loop
sbb
sub
cmp
adc
and
push
or
xor
mov
pop
bnd
inc
add
cld
aaa
jecxz
ins
call
test
mov
xchg
mov
shl
xor
xor
repz
pop
jge
dec
ins
pop
mov
cmp
das
cmp
shl
mov
(bad)
mov
add
sub
sbb
dec
ins
and
inc
fcmovnu
mov
inc
fild
jg
add
inc
xchg
mov
pop
out
pop
cmp
addr16
xchg
out
add
loopne
aas
dec
test
js
xchg
cld
mov
(bad)
cmp
add
pushf
retf
call
and
cmp
leave
push
mov
pushf
cmp
fs
fmul
sbb
out
push
mov
mov
cmc
jbe
loope
jae
push
shl
scas
adc
xchg
sub
inc
mov
ins
retf
ficomp
mov
push
cmps
repz
cwde
jl
pop
adc
out
test
ins
add
sbb
loopne
mov
inc
cmp
inc
push
out
sbb
xchg
jno
and
pushf
aam
push
mov
mov
pop
xchg
div
jb
or
mov
iret
ss
cs
inc
into
add
sub
xor
(bad)
fistp
retf
ficomp
add
ret
inc
mov
adc
mov
inc
mov
cs
pushf
in
mov
lods
std
xor
mov
push
loopne
cld
aaa
inc
cld
pop
dec
in
and
sar
into
cs
and
(bad)
fs
lds
loop
or
lahf
imul
mov
(bad)
sub
and
inc
jbe
jmp
test
(bad)
in
jle
mov
scas
xchg
in
push
pop
jne
inc
(bad)
pop
imul
mov
dec
lods
pop
stc
pop
ja
dec
dec
mov
pop
fs
add
pop
sub
fs
mov
mov
(bad)
aad
aas
mov
add
rol
adc
sbb
iret
push
in
add
inc
pop
push
mov
mov
adc
sub
cmp
jae
xor
(bad)
xchg
adc
fs
pop
add
or
xor
cwde
sbb
sub
push
outs
cmp
movs
std
mov
mov
lahf
jbe
mov
and
stos
inc
cmp
push
sbb
pop
push
sbb
and
(bad)
mov
fadd
sbb
pusha
fs
inc
call
xchg
imul
xchg
sbb
daa
dec
mov
push
jp
cmp
stos
cmp
inc
or
jo
mov
clc
xchg
cmp
gs
jae
mov
adc
cli
xchg
loop
test
mov
sbb
aad
and
ror
mov
push
pop
out
jno
mov
lods
movsx
into
or
cmp
add
push
inc
fwait
cmp
push
xchg
mov
mov
retf
and
pop
push
fimul
loop
push
imul
icebp
or
jns
mov
and
and
in
adc
or
jmp
jge
jecxz
cmp
mov
rcl
call
cmps
ins
push
jmp
mov
les
sbb
xor
sti
mov
ins
mov
(bad)
mov
jecxz
or
stos
jbe
popf
and
sub
outs
mov
sub
leave
xor
jae
test
mov
add
dec
pop
fwait
adc
xchg
jmp
call
cmps
xchg
fwait
sbb
icebp
(bad)
adc
stc
dec
xor
jmp
inc
cmovbe
jne
jmp
mov
repz
dec
sbb
pop
mov
add
arpl
aad
imul
push
pop
mov
dec
and
sbb
pop
jl
jle
jmp
jmp
arpl
call
js
push
leave
pop
fwait
push
fistp
jg
pop
out
xchg
(bad)
retf
mov
jp
pop
js
mov
mov
lahf
cmp
jo
in
push
ja
mov
jbe
ja
repnz
sub
cwde
jmp
dec
or
adc
cmp
scas
mov
cmp
ja
(bad)
out
pushf
aad
fcompp
aad
inc
cmp
adc
dec
call
pop
test
jp
mov
shl
or
mov
pop
push
or
dec
outs
mov
push
jno
cdq
(bad)
push
and
shl
pusha
cwde
or
clc
hlt
mov
jge
inc
loop
mov
or
dec
fcom
push
push
in
jl
push
cmp
retf
mov
xchg
stc
loope
mov
fld
xchg
rol
iret
inc
jmp
add
shl
out
cmp
cld
jmp
fst
mov
mov
jnp
or
inc
out
rol
nop
int
jae
(bad)
and
cli
sub
xchg
pop
or
sar
add
inc
push
push
push
cmp
sbb
in
sbb
imul
in
repz
mov
pop
fptan
inc
jg
mov
shr
loop
mov
retf
pop
dec
add
add
sar
sub
stos
ins
pop
pop
scas
jmp
cmps
rcr
icebp
test
sbb
lock
jne
pop
icebp
cmps
mov
add
lds
ss
int
xor
adc
mov
xchg
and
lahf
and
jbe
xor
mov
imul
mov
retf
stos
cld
jmp
push
jae
xchg
lods
and
mov
jge
(bad)
push
inc
(bad)
repnz
mov
jb
mov
leave
imul
cs
dec
dec
push
or
mov
lds
fisttp
mov
mov
movq
sar
sbb
mov
push
cmp
xchg
clc
out
push
jmp
mov
mov
imul
loop
imul
mov
sbb
adc
adc
cmp
sti
push
push
scas
ficom
push
lods
repnz
(bad)
scas
xlat
mov
pop
push
jmp
dec
mov
mov
ss
loope
in
popf
pop
(bad)
clc
das
push
inc
shr
or
not
test
push
dec
lahf
push
or
jecxz
(bad)
jecxz
clc
clc
(bad)
enter
out
ins
mov
jb
movs
sti
xor
enter
scas
pop
outs
jo
mov
popf
rol
adc
pushaw
cmp
dec
jae
inc
mov
jp
cmps
push
rcl
test
rol
xor
cmp
cli
test
adc
jmp
pushf
jg
xchg
scas
lods
js
lods
dec
mov
(bad)
xor
add
sbb
mov
inc
pushf
adc
gs
mov
sub
mov
(bad)
fnstenv
xchg
mov
out
jo
cmp
jno
cmps
stos
repnz
jg
add
jno
cs
scas
push
cmc
cmp
into
sti
(bad)
leave
jg
stos
pop
rol
out
push
ret
je
xor
call
inc
dec
(bad)
push
adc
pop
enter
jnp
mov
popa
jmp
das
dec
adc
mov
push
push
jnp
add
pop
jmp
mov
push
(bad)
ja
ds
mov
shl
jle
jg
ja
das
rcr
stos
dec
cmp
mov
pop
mov
sbb
fnstcw
push
cs
nop
out
jnp
or
iret
pop
mov
in
pop
ins
add
(bad)
adc
jae
aad
xor
pop
(bad)
pop
mov
xor
ds
and
retf
cmp
sahf
test
icebp
int
pusha
imul
sbb
or
jne
sbb
into
fwait
mov
xor
in
ins
stos
outs
jo
mov
jp
xor
dec
or
leave
mov
retf
add
shr
popf
cmc
movs
enter
pop
sbb
int
daa
xor
adc
adc
sub
or
push
(bad)
push
sbb
stos
push
jmp
shl
jno
repz
pusha
mov
dec
into
jnp
aam
pop
pop
cmp
cmp
inc
in
mov
fld
in
shl
mov
add
scas
hlt
sbb
push
js
sub
dec
mov
ds
or
push
xor
mov
and
leave
sbb
vmulss
(bad)
pop
mov
cmp
lods
sti
xchg
lods
sub
push
xchg
fisubr
push
push
in
stos
adc
in
push
gs
cwde
test
jmp
and
cmp
pop
stos
or
push
push
jno
push
jecxz
fadd
imul
enter
xchg
pop
or
inc
adc
xor
add
cmp
xor
dec
pop
(bad)
(bad)
iret
sbb
mov
pop
or
dec
test
stos
out
sbb
dec
push
clc
mov
cdq
mov
sar
mov
xor
dec
dec
imul
jmp
mov
enter
jbe
sbb
inc
or
int3
pop
xchg
mov
mov
(bad)
sbb
pop
gs
(bad)
sub
hlt
sub
mov
xor
sbb
push
lea
sub
in
mov
sti
mov
bt
push
ret
or
mov
jbe
fwait
nop
sbb
cli
mov
jnp
retfw
xchg
imul
dec
stos
outs
push
jmp
fisubr
or
push
jo
ret
loopne
xor
(bad)
call
jmp
pop
ror
mov
repz
in
popa
outs
imul
lock
jae
enter
inc
xor
cld
mov
mov
pop
inc
jl
arpl
in
push
sub
(bad)
je
jbe
dec
(bad)
mov
retf
fst
mov
mov
icebp
clc
add
xchg
repz
and
inc
rol
mov
cs
mov
jae
cld
push
sbb
pop
sahf
out
popf
pop
mov
repnz
push
jne
lds
jmp
adc
(bad)
pop
das
lock
stos
jle
cmp
sti
cmps
mov
push
sub
rol
push
push
cli
sub
test
retf
into
add
aad
rol
sub
cmp
call
jbe
aam
or
dec
cmp
or
push
xor
test
into
jmp
pushf
cdq
stos
xor
scas
inc
jge
mov
jae
jp
cwde
xlat
cmp
and
lock
mov
push
inc
ror
dec
shr
cmp
mov
sbb
inc
fisub
pop
hlt
(bad)
in
mov
popf
aaa
mov
sub
loopne
or
cmp
shl
movs
pop
xor
repnz
inc
push
mov
adc
fdivr
lahf
jle
cs
cmp
dec
pop
mov
or
daa
bound
mov
jg
mov
push
(bad)
mov
bound
mov
icebp
jne
or
shl
pop
and
mov
inc
pop
cmc
xchg
mov
cmp
sbb
std
bound
xor
js
xlat
in
jns
loopne
sahf
lahf
imul
fwait
sbb
in
push
stos
mov
push
xchg
push
lahf
dec
push
fsub
scas
jbe
jnp
(bad)
sbb
or
in
lahf
add
aad
add
(bad)
mov
jle
mov
rcl
ja
loopne
jle
cmc
out
fsubr
or
mov
adc
sbb
(bad)
mov
retf
out
in
pop
loop
cmp
xor
in
xchg
lods
scas
cs
hlt
adc
cmp
mov
sub
cmp
cmp
(bad)
enter
scas
cmp
(bad)
xchg
mov
dec
ja
mov
test
and
in
into
popa
cmp
pop
sbb
arpl
sub
dec
inc
fbstp
mov
ret
mov
inc
cmp
sub
sar
mov
add
sar
jnp
nop
jmp
sub
push
ror
stos
retf
int3
add
scas
and
sar
jge
push
or
es
ins
dec
fsubr
xchg
cmp
(bad)
enter
sbb
pusha
and
mov
sahf
(bad)
jle
or
inc
call
cwde
cmp
(bad)
(bad)
and
push
pop
rcr
jmp
or
aad
sbb
adc
mov
dec
cmp
push
out
pop
sub
xor
test
push
aas
imul
mov
test
shl
and
adc
jno
popa
adc
test
rcl
mov
inc
test
mov
push
jns
scas
je
out
or
pushf
adc
icebp
pop
fsubr
rol
ss
cld
mov
inc
jl
fadd
jbe
xchg
mov
xchg
lea
into
mov
xchg
fistp
jbe
cmp
jno
mov
out
jmp
sbb
inc
mov
repz
scas
fldcw
outs
ja
mov
mov
add
lods
push
jae
mov
retf
cmp
mov
jge
mov
jmp
push
enter
test
cmps
add
adc
push
jnp
mov
mov
xchg
push
cmps
fs
sbb
(bad)
scas
dec
adc
shl
mov
inc
call
or
push
or
aas
aam
push
out
xor
in
test
mov
fild
push
xchg
loope
cmp
xchg
jg
dec
int3
mov
jg
push
test
xchg
add
mov
sbb
shl
sub
pop
cwde
add
jns
test
popa
and
mov
inc
add
loopne
shl
push
xlat
sub
and
std
pop
push
int3
nop
cmps
ds
scas
pop
adc
rcl
ins
js
nop
mov
cmps
imul
mov
jmp
and
nop
jle
pop
jb
jo
fs
inc
cld
xor
jg
ret
mov
xchg
pop
js
and
out
(bad)
loope
enter
xor
xor
test
jmp
cmp
shl
in
or
mov
lock
push
sub
jmp
dec
mov
inc
pop
shl
pop
dec
cmp
mov
push
mov
sbb
jg
ret
push
jmp
xor
lods
(bad)
pop
jp
lods
imul
xor
xchg
hlt
inc
fidiv
dec
xlat
shl
push
jnp
fdiv
inc
sub
sub
fbstp
test
and
inc
jmp
into
add
fsub
dec
add
jp
or
fistp
stos
outs
mov
and
inc
ret
ins
sbb
or
mov
adc
jo
jmp
push
sub
mov
mov
mov
daa
add
mov
stos
in
mov
icebp
pop
pop
loop
into
push
ins
mov
xor
push
mov
lods
test
(bad)
xor
xchg
sahf
ds
push
pop
icebp
inc
test
and
and
mov
push
mov
popf
aam
add
push
pop
jb
push
nop
sub
adc
jno
mov
arpl
out
pop
repz
sub
scas
or
scas
jmp
mov
xchg
fsub
cmp
cmp
adc
dec
pop
(bad)
mov
lea
mov
mov
inc
push
adc
cli
arpl
jne
and
in
scas
ja
(bad)
mov
enter
cwde
xchg
jns
push
ret
push
stc
xor
mov
lds
mov
mov
stos
push
es
mov
dec
retf
fist
mov
(bad)
dec
sub
test
mov
sub
ret
out
daa
mov
jge
jmp
and
dec
call
mov
cmp
int
loopne
and
cld
outs
aam
push
mov
stos
das
jle
aas
mov
(bad)
aam
pop
mov
ja
call
leave
cmp
pop
into
add
xor
inc
xchg
sub
das
ret
jbe
icebp
push
scas
ret
sub
inc
mov
mov
xchg
xor
xchg
cmp
repnz
sub
mov
movs
sbb
int3
ror
or
mov
mov
sbb
inc
fucomip
push
xchg
lods
push
or
shl
je
and
mov
jge
jo
retf
mov
mov
push
cmp
call
je
jmp
nop
sbb
jno
out
mov
jbe
test
out
ror
lds
(bad)
mov
jnp
and
out
out
leave
push
int
aam
jl
cmp
push
lods
int
ret
mov
pop
sub
aas
bound
jns
sahf
in
pop
dec
sbb
addr16
pusha
(bad)
pop
fstp
je
sti
sbb
test
mov
or
add
mov
cmps
lea
mov
dec
in
outs
pop
dec
xchg
call
lahf
and
into
sahf
call
test
lock
cdq
fcomp
jne
pop
lock
jne
sti
scas
fwait
or
(bad)
push
test
(bad)
cwde
jecxz
inc
(bad)
sbb
(bad)
adc
shl
pop
jecxz
cs
inc
cwde
cmps
jmp
sahf
ja
xchg
push
xchg
(bad)
int
sahf
adc
jmp
test
or
pop
rol
push
add
jnp
mov
fild
and
mov
test
xchg
lods
and
sbb
mov
sub
loopne
je
mov
sub
inc
jl
fwait
in
inc
push
ffree
(bad)
inc
dec
in
loop
dec
adc
inc
shl
(bad)
aad
push
inc
mov
dec
hlt
das
xor
push
retf
or
repnz
pop
sti
inc
imul
test
test
cmp
loop
shr
add
cmp
push
gs
jecxz
enter
sbb
fwait
sar
shl
arpl
icebp
pop
(bad)
sub
pop
jae
mov
xor
mov
mov
add
mov
or
jne
add
and
inc
stos
mov
xchg
outs
stos
(bad)
push
(bad)
jmp
xchg
adc
vsubsd
adc
out
cmp
cmp
lds
xlat
fnsave
loopne
xchg
fucomip
aad
sbb
jle
sahf
inc
sub
add
or
sti
fbstp
shl
stos
leave
cmps
jne
xchg
add
and
outs
repz
out
pop
(bad)
js
pop
test
stc
fst
dec
mov
arpl
shl
in
sar
and
es
call
add
(bad)
jle
or
clc
iret
cmp
out
xchg
aas
pushf
aas
cmp
mov
dec
inc
test
lock
test
xchg
adc
movs
xchg
push
push
scas
call
repz
push
cmp
repnz
xlat
add
xor
dec
sar
jge
jp
loop
hlt
lds
rcr
push
dec
sbb
bound
and
dec
jp
xor
movs
mov
les
(bad)
jge
xlat
sbb
or
adc
or
stos
cld
jmp
dec
and
lahf
inc
imul
outs
dec
mov
push
fbstp
xchg
lea
add
dec
jmp
cmp
xchg
sub
xor
pop
lods
xchg
inc
jg
outs
mov
dec
lock
(bad)
mov
mov
sub
je
xchg
add
inc
push
fistp
clc
xchg
clc
mov
xchg
cmp
ja
cmp
sub
cwde
fnstenv
ficomp
test
arpl
cmp
sbb
add
mov
xor
inc
je
sub
fnstenv
xor
xor
loope
(bad)
jmp
dec
ror
push
cmp
push
mov
adc
cmp
out
xchg
mov
fs
clc
fild
xchg
xchg
ja
pop
or
or
out
cmp
jg
test
add
inc
push
aaa
mov
test
and
stos
sub
fucomp
popf
mov
mov
xchg
clc
mov
cmp
(bad)
xchg
daa
mov
pop
(bad)
mov
xchg
cmp
scas
jl
pop
push
mov
nop
or
ja
push
push
or
xlat
or
mov
push
idiv
out
sub
lds
lea
leave
push
inc
call
pushf
mov
and
dec
jmp
jb
add
push
xor
(bad)
mov
sbb
movs
push
in
jp
mov
call
leave
sbb
add
bound
in
hlt
push
xchg
sub
retf
dec
out
je
push
jne
sub
icebp
xchg
and
cdq
loop
lock
addr16
dec
or
jne
mov
fist
jl
mov
mov
adc
scas
imul
xchg
loope
out
mov
enter
fmul
lods
in
mov
(bad)
push
pop
arpl
and
lock
push
dec
push
xrelease
mov
pop
and
je
add
cmps
(bad)
ds
inc
cs
outs
pop
dec
and
sbb
xchg
xchg
mov
retf
sbb
pop
jo
cmp
sbb
scas
mov
icebp
pusha
mov
outs
fnclex
lds
nop
lock
outs
and
mov
mov
sub
xor
mov
out
xchg
fstp
xchg
jo
add
adc
cmps
inc
test
ror
pushf
xor
pop
icebp
xchg
jno
cmp
xchg
xor
fbld
stos
or
sahf
stos
les
inc
aas
fwait
lahf
push
fwait
out
shr
movs
outs
ins
mov
pop
call
cmps
fstp
repnz
push
jg
jmp
mov
sbb
sbb
test
or
jecxz
movs
and
sub
mov
pusha
xchg
pop
stos
or
loopne
dec
mov
nop
arpl
stc
mov
dec
inc
add
push
mov
fwait
jge
(bad)
in
or
fnstcw
or
inc
loope
xchg
into
push
inc
mov
int3
adc
ficom
daa
push
ins
jo
imul
icebp
lea
je
pop
cmp
test
cld
xchg
and
rol
repnz
xchg
cmc
rol
push
loop
sahf
rcr
jmp
sub
mov
xchg
cmps
lahf
divps
loop
sahf
jns
daa
inc
(bad)
jle
mov
lahf
inc
adc
fs
pop
mov
test
into
jb
test
mov
fild
imul
retf
movs
or
mov
adc
cmp
les
adc
mov
xchg
inc
xor
and
xchg
xchg
fisubr
cmp
add
jo
or
int3
add
lods
push
xchg
int
sub
add
adc
or
mov
push
outs
jecxz
mov
push
push
cmps
and
xchg
test
mov
and
pop
shr
xor
pop
outs
sbb
or
popf
retf
fbstp
sbb
adc
cs
jns
fucomp
int
cmp
add
pop
mov
pop
jne
test
in
cs
sbb
ror
push
add
jecxz
jb
jb
repnz
inc
lea
push
push
not
xor
into
aam
mov
mov
repz
dec
movs
jno
dec
aam
rol
mov
dec
mov
dec
jmp
movs
xchg
gs
sbb
cmp
mov
fidivr
inc
sub
int
scas
sub
mov
mov
int3
inc
push
bound
(bad)
lds
mov
out
mov
cmp
xchg
add
leave
jmp
dec
sub
xchg
bound
cmp
pop
xor
arpl
lock
and
add
sbb
ss
mov
cdq
xor
and
add
jmp
mov
cs
inc
bound
enter
repz
fnstsw
push
pop
jae
inc
int3
sbb
add
addr16
pusha
xchg
cmp
pop
mov
aam
aas
push
retf
push
push
loop
shl
dec
loopne
rcr
cmp
pusha
shr
ret
cwde
adc
into
rol
mov
push
push
stos
jmp
xchg
add
dec
push
xlat
fld
cdq
cmp
out
mov
ja
leave
aas
xchg
push
add
pushf
clc
sub
mov
add
xchg
jmp
sti
adc
cmps
mov
jecxz
(bad)
cld
repz
clc
test
dec
pop
aas
out
mov
adc
std
pop
cmp
call
cmp
(bad)
ret
call
outs
ds
add
sti
sbb
cmps
pop
scas
pop
cdq
and
dec
call
cmp
mov
mov
push
loop
pop
movs
jne
push
out
mov
sbb
push
fs
jl
push
movs
cmp
test
ins
xchg
das
fst
ins
or
into
rcl
add
(bad)
cmp
pop
movs
pop
inc
in
shr
das
jmp
bound
mov
mov
sub
bound
mov
ror
jecxz
mov
out
cdq
xor
out
out
push
cli
adc
sub
push
xchg
sub
(bad)
loop
aam
or
call
out
add
pop
(bad)
popa
mov
retf
jmp
test
pop
shl
mov
mov
pop
repz
push
(bad)
in
arpl
push
das
das
xchg
call
fisttp
pushf
iret
inc
add
inc
pop
shl
xchg
test
inc
sbb
mov
xor
retf
xchg
xchg
push
dec
sub
mov
es
push
mov
movs
cmps
pop
and
fisttp
das
cmp
std
sub
dec
lods
out
jns
pop
and
mov
pop
outs
arpl
sbb
push
xchg
popf
arpl
dec
xchg
cwde
rcr
(bad)
mov
add
xor
cmp
mov
sbb
cmp
pop
inc
test
xor
scas
xchg
push
dec
pop
icebp
mov
sub
cwde
pop
fcom
xchg
cmc
pop
push
xchg
iret
jb
dec
push
xchg
loope
clc
xor
aas
int
xor
jns
punpckhdq
cs
jo
mov
mov
adc
mov
dec
loop
and
xchg
gs
or
pop
loope
mov
dec
pop
retf
dec
aam
scas
loopne
sbb
cmc
aas
fist
pop
jns
cmc
int
(bad)
inc
xchg
mov
(bad)
sbb
(bad)
mov
add
stos
xor
push
xchg
pop
sub
fnstcw
test
imul
popa
(bad)
inc
mov
adc
inc
sbb
xlat
ins
je
jbe
cmp
loop
add
movs
sub
mov
inc
(bad)
and
das
stos
sub
and
aas
inc
jbe
fmul
mov
sahf
sub
jmp
fidiv
fs
je
push
xchg
shr
test
fidiv
je
dec
in
push
adc
xchg
daa
gs
sbb
and
fldl2t
test
neg
ja
shl
stc
mov
xor
fnstenv
sbb
bound
out
push
rcl
pop
xchg
sub
fisub
jle
inc
(bad)
jb
hlt
and
in
xchg
hlt
pop
int
jb
ja
push
jmp
xchg
test
sub
loop
sar
add
imul
push
stos
mov
sbb
jmp
jae
(bad)
mov
xor
inc
in
xchg
sbb
mov
ja
xor
mov
adc
push
push
jecxz
jbe
dec
int3
movs
dec
aad
in
(bad)
(bad)
cmc
test
xchg
call
imul
(bad)
lock
add
sbb
jo
shl
sti
mov
out
or
xchg
sub
or
add
and
mov
mov
push
popa
daa
test
ja
hlt
call
xchg
mov
outs
push
(bad)
mov
jg
cwde
fadd
test
jl
in
jns
fwait
push
fsub
pause
or
addr16
cli
jae
dec
inc
outs
test
xchg
lods
out
inc
je
dec
call
mov
lds
mov
sbb
scas
jecxz
mov
out
mov
adc
jl
jmp
sub
jl
in
jmp
data16
jb
dec
retf
sub
out
fstp
enter
sbb
and
xor
jns
stc
pop
sbb
mov
inc
mov
cmc
iret
mov
popf
ror
icebp
fwait
sbb
test
mov
int
stc
sbb
addr16
xchg
mov
(bad)
pusha
pop
and
stos
mov
jnp
jmp
outs
push
in
cld
jno
jmp
push
jno
sbb
into
jae
push
push
add
fild
sub
xchg
inc
cmp
or
inc
mov
cmps
retf
out
dec
push
cmp
cmp
pop
cmp
and
mov
dec
mov
pop
lods
push
push
pop
test
jns
push
mov
loopne
loope
jmp
inc
ins
jecxz
or
in
in
inc
mov
xor
imul
add
es
mov
mov
(bad)
mov
mov
adc
fsub
push
adc
ins
mov
xor
loope
ins
stos
mov
or
xchg
push
std
repz
cmps
rcr
das
fisub
add
scas
push
in
shl
mov
shl
jns
cmp
inc
sbb
cli
dec
adc
lds
(bad)
daa
ret
mov
outs
je
hlt
mov
or
xchg
popf
cdq
mov
div
stc
daa
push
gs
(bad)
adc
out
mov
cmp
adc
mov
rcl
(bad)
rcr
cwde
push
sti
push
mov
add
xchg
imul
test
data16
push
pop
outs
movs
imul
inc
jne
(bad)
js
jle
jno
pop
pop
sbb
lods
imul
xchg
imul
jo
lds
fwait
in
ror
push
mov
leave
mov
outs
xor
adc
push
pop
cmp
cmp
push
stc
xor
mov
sahf
jbe
js
ror
xchg
inc
nop
es
inc
cs
das
icebp
xor
repz
mov
ins
sub
test
and
adc
and
mov
loopne
push
pushf
fdiv
mov
xor
and
je
retf
aaa
cmp
add
nop
fisubr
adc
sub
outs
push
nop
stc
xchg
jno
dec
(bad)
into
sub
in
and
ins
mov
in
retf
jmp
push
xchg
pop
and
ret
fild
push
jl
xchg
dec
call
std
xchg
loope
sbb
lahf
jmp
mov
mov
cli
or
or
and
(bad)
lahf
pop
add
gs
add
add
xchg
out
mov
nop
cmc
add
xlat
loopne
adc
stos
jnp
in
xchg
ret
out
cmps
pusha
ficom
xor
bswap
sub
cmc
push
sahf
popf
mov
pop
push
xor
sub
sbb
push
mov
ds
add
es
out
test
repz
pop
(bad)
jnp
mov
out
or
lds
mov
movs
or
gs
cmp
inc
(bad)
mov
cmps
call
mov
adc
sub
jl
and
adc
cdq
(bad)
jl
sbb
outs
cld
or
mov
push
lods
jle
inc
sbb
popa
and
xor
imul
loopne
xor
push
repz
or
fwait
bound
sub
mov
pop
js
sbb
dec
shr
js
test
dec
add
rcr
pop
dec
fwait
repz
imul
ds
in
pop
ins
inc
aad
aam
cmp
adc
pop
mul
sub
ror
mov
cld
jns
add
xchg
out
cmp
icebp
sbb
push
and
ds
push
sub
cdq
push
sub
outs
sbb
mov
fmul
xor
test
popa
rcr
mov
call
ficomp
xor
clc
dec
popf
scas
jecxz
and
aaa
xlat
jle
(bad)
xchg
sar
in
imul
pshufw
or
retf
retf
inc
xor
xacquire
(bad)
jp
ret
popa
repz
loope
cs
gs
retw
xor
cdq
cmp
mov
and
push
neg
mov
mov
enter
adc
cmp
push
jb
xor
stc
sar
and
pop
adc
in
fwait
bound
lods
cmp
or
les
jns
out
sbb
pop
call
jnp
in
xchg
bnd
mov
cdq
pushf
xor
mov
sub
std
sbb
xor
int
rcr
mov
jns
add
popa
ret
dec
push
mov
cli
js
shl
mov
js
cld
in
jno
adc
or
cs
fcomp
and
daa
call
and
cli
ficom
iret
or
and
xchg
retf
ins
lds
gs
dec
push
add
jae
cli
call
loop
mov
lds
jecxz
pusha
bswap
adc
les
xchg
outs
xor
dec
pop
push
jnp
sub
movs
lea
push
and
fnstenv
mov
in
cmps
js
add
fwait
sbb
mov
sub
test
jmp
repnz
(bad)
sub
(bad)
ret
jb
mov
and
out
pop
mov
and
inc
ret
jmp
sahf
xor
aas
sub
mov
test
aad
push
mov
xchg
jnp
popf
lods
push
ins
mov
mov
mov
test
imul
sbb
or
or
mov
jns
pushf
adc
xlat
loope
add
push
or
ja
jmp
sub
pop
cmps
les
mov
xor
xchg
inc
and
or
xchg
mov
mov
cmps
xlat
add
sar
cmps
dec
stos
xchg
dec
adc
sbb
and
sbb
jmp
add
dec
cmp
cdq
mov
fild
cli
mov
push
daa
lea
test
es
mov
add
sar
data16
or
or
xor
dec
inc
mov
pop
sbb
test
sub
cmp
push
xchg
jmp
jae
pushf
cdq
mov
adc
(bad)
jge
fwait
cmps
lahf
leave
pop
fidiv
mov
fldln2
std
jmp
xchg
adc
mov
push
mov
xchg
(bad)
cmp
js
arpl
std
(bad)
adc
pushf
pop
shr
inc
mov
retf
or
out
dec
and
je
jns
repz
(bad)
loope
fwait
iret
mov
xor
shr
jge
(bad)
fstp
lods
add
xchg
loope
mov
add
jnp
push
mov
adc
jl
adc
push
and
or
push
shr
out
jns
sbb
nop
pop
mov
lahf
mov
push
jno
inc
es
loope
movs
push
push
pop
or
xor
test
adc
fcmovne
into
out
jge
mov
mov
jbe
xlat
fimul
add
mov
ret
jecxz
int3
ins
push
(bad)
stos
and
mov
call
arpl
sub
push
sub
in
dec
int3
mov
ror
jmp
fs
out
mov
xchg
clc
call
jmp
mov
cmp
nop
cdq
pop
fcmovnu
xor
cdq
and
cdq
mov
sbb
ss
dec
cmp
jns
fs
mov
aaa
xchg
addr16
mov
xchg
push
ret
out
das
or
jnp
lahf
xchg
loop
adc
xchg
add
add
mov
arpl
dec
jb
loope
or
mov
jmp
out
xor
inc
enter
jge
jnp
mov
mov
imul
js
inc
js
ret
shl
xor
(bad)
fcomp
push
xor
ret
imul
ins
sub
push
mov
pop
push
cmps
push
clc
push
pushf
ss
sbb
stos
lock
outs
sbb
sbb
addr16
rsqrtps
sahf
fst
jno
add
div
or
xchg
repnz
stos
sbb
sub
sbb
aad
cmc
sub
push
mov
daa
stc
dec
imul
xor
push
xor
mov
in
bound
and
add
std
js
xor
xchg
(bad)
sti
dec
cmps
and
mov
sbb
cmc
jae
add
inc
or
pushf
inc
lds
test
cmp
xchg
and
outs
ror
pop
add
inc
ss
dec
jo
dec
xchg
push
add
sbb
mov
clc
in
shr
test
hlt
(bad)
lods
mov
dec
cmp
ss
fwait
aas
int
xchg
inc
js
sbb
and
rcl
and
retf
mov
push
(bad)
or
out
and
pop
lahf
or
leave
push
in
mov
cmp
and
pop
pop
imul
or
retf
or
and
and
out
xor
jb
jg
mov
fstp
jne
cmp
jecxz
mov
(bad)
mov
aad
je
xlat
bsf
or
mov
leave
imul
adc
push
adc
adc
mov
fs
into
dec
repnz
jmp
add
pusha
ins
sbb
pop
and
jns
nop
mov
imul
fadd
mov
mov
bound
add
mov
jns
call
inc
xor
and
adc
and
sbb
lea
dec
cmps
jge
add
scas
js
cs
add
ja
shl
call
mov
jns
out
mov
mov
cmp
cmp
lock
mov
into
loope
cmp
int3
fwait
inc
push
adc
stos
or
xchg
(bad)
sub
les
jmp
retf
repz
jae
push
pop
mov
sub
jno
push
inc
sub
xor
mov
shr
add
vscalefps
jno
in
call
pusha
push
mov
and
stos
or
xlat
pop
mov
push
cwde
test
mov
pop
pop
or
fstp
or
test
sbb
scas
push
lods
sub
pop
mov
cwde
fild
or
mov
xchg
sti
cmp
sub
repnz
fld
cli
xchg
fnstcw
dec
xchg
dec
pop
(bad)
aam
cs
fcom
pop
pusha
inc
retf
(bad)
pop
pop
and
pop
or
popa
jae
mov
jmp
dec
pop
and
inc
sub
ja
push
bnd
and
adc
mov
int
jg
mov
xchg
push
aas
mov
pop
cmp
mov
(bad)
loopne
sbb
adc
push
jne
inc
push
call
and
or
mov
or
xor
add
and
pop
out
mov
jae
xor
dec
out
aad
mov
sub
imul
(bad)
loopne
push
inc
cmp
mov
or
and
add
retf
dec
sbb
and
cmps
jb
jg
xchg
stos
scas
adc
test
xchg
or
stos
xor
pushf
mov
test
pop
push
pop
sahf
rcr
loope
adc
movs
mov
mov
mov
pop
mov
fidivr
mov
scas
add
(bad)
shr
jnp
fild
test
out
dec
dec
and
data16
pop
in
xchg
sub
jns
jo
cdq
out
outs
arpl
and
stos
dec
imul
add
ins
jnp
mov
push
push
les
xchg
add
xlat
sub
add
pop
push
inc
test
shl
inc
mov
cli
push
adc
js
pop
xchg
jo
adc
in
mov
mov
pop
cmp
adc
sub
lea
add
test
call
dec
push
(bad)
dec
jbe
or
push
fs
retf
push
imul
sub
in
xadd
fild
imul
mov
sub
cld
add
mov
pop
movs
mov
push
enter
mov
std
or
test
in
fdiv
jne
inc
ret
pop
cmp
mov
xor
jg
cs
mov
idiv
inc
inc
out
retf
fld
lock
loopne
adc
pop
xchg
jge
push
movs
push
sub
lds
push
mov
es
or
mov
pop
cmc
mov
adc
dec
add
lods
fs
std
sbb
jns
imul
xchg
pop
pop
cmps
xor
adc
stc
out
xchg
pop
inc
jo
jecxz
imul
and
and
cmp
lods
cmps
xchg
push
sbb
pop
ret
out
add
xchg
sub
mov
add
jl
scas
addr16
and
fdecstp
push
test
mov
aam
xchg
clc
movs
adc
das
mov
dec
sar
add
ror
inc
pop
push
das
jbe
adc
mov
sub
cli
outs
add
xchg
and
inc
scas
xor
inc
in
and
xchg
aaa
sub
and
into
sub
jle
pop
cmp
jb
dec
fld
xchg
jne
xchg
(bad)
cs
outs
cmps
out
dec
fbld
aas
ins
sub
ficom
jb
in
xchg
dec
sti
xlat
mov
lods
(bad)
mov
add
push
add
xor
icebp
in
out
mov
cdq
stc
hlt
sbb
jns
cmc
and
xor
jg
js
cwde
sti
jbe
dec
loop
ret
ins
(bad)
push
cmp
lock
ds
mov
jns
inc
pop
inc
pop
mov
mov
inc
(bad)
lahf
(bad)
aas
add
sub
test
fstp
xor
jle
jo
or
adc
ds
fistp
inc
sub
jae
or
adc
ror
adc
xchg
push
dec
aas
loope
call
ds
mov
and
push
call
adc
test
or
lods
mov
add
mov
inc
lds
fcmovu
sahf
div
cmp
out
les
js
fcmovnbe
mov
fsubr
sbb
imul
push
cmp
push
adc
sahf
dec
sub
xor
mov
jge
lea
mov
cmp
inc
cmp
adc
das
mul
popa
not
jge
ret
cmp
fldenv
sbb
test
lds
push
inc
int3
xchg
pop
int3
call
push
sub
cmp
sub
es
loop
pusha
jmp
ret
loopne
push
dec
push
xchg
sub
fs
sbb
aam
mov
aaa
out
(bad)
int3
and
add
xchg
rcr
(bad)
fstp
add
aam
icebp
sbb
test
xchg
jle
loope
je
push
push
loopne
push
loop
jbe
pop
jecxz
fdiv
push
out
push
mov
and
or
inc
stos
imul
sub
out
jne
fadd
repz
std
push
ja
mov
in
mov
add
push
lahf
out
shl
xchg
xor
mov
les
cwde
cli
sub
sub
lock
or
fst
cwde
shl
in
aad
pop
sbb
aam
mov
movs
mov
mov
rol
xchg
popf
inc
stc
xchg
cmps
leave
xchg
shl
and
sub
lock
sub
add
fisttp
pop
mov
aam
pushf
jbe
pushf
imul
push
fisubr
lds
sub
mov
jl
jae
xor
test
ins
data16
dec
loope
mov
in
jns
mov
pop
lods
fidiv
out
sahf
pop
inc
adc
pop
outs
loop
pop
pop
mov
lahf
sbb
push
loop
pop
inc
repz
scas
push
add
mov
(bad)
das
and
repz
pop
push
push
rep
sbb
xor
dec
retf
loope
jmp
mov
mov
cld
and
retf
inc
jb
(bad)
ins
inc
in
sbb
pop
add
lods
(bad)
cli
mov
test
mov
movs
jno
int
(bad)
or
movs
ror
gs
ficom
in
push
repz
fnstenv
icebp
cmp
xchg
xor
dec
retf
mov
lock
sbb
fsub
xchg
jb
adc
fcomp
fadd
mov
and
jmp
inc
pop
in
add
sbb
jp
retf
adc
es
xor
(bad)
mov
cs
mov
hlt
fld
sbb
gs
sub
pop
pop
cli
pop
btc
inc
and
imul
sar
mov
retf
gs
jno
or
addps
push
dec
jge
ret
out
call
into
push
repz
iret
xor
jecxz
fiadd
mov
add
out
cdq
stos
shr
aad
cmp
dec
sub
lods
and
xchg
cmp
ret
jne
addr16
retf
call
or
jae
not
addr16
adc
or
enter
and
and
inc
dec
call
imul
push
add
in
cmp
mov
jae
inc
or
enter
(bad)
leave
adc
cmp
cmp
sub
sbb
shl
dec
inc
ds
je
cmp
mov
stos
sub
ret
(bad)
or
(bad)
pop
ret
stos
fwait
lods
mov
push
pushf
adc
jo
loop
sahf
ins
sbb
pop
xchg
mov
iret
dec
out
movs
mov
pop
jmp
(bad)
loopne
in
(bad)
mov
sub
dec
sbb
(bad)
adc
retf
jo
bnd
mov
cwde
test
jmp
push
dec
je
(bad)
loopne
cmp
mov
aaa
mov
mov
das
pop
dec
movs
jge
in
or
mov
xchg
mov
pop
xchg
mov
hlt
xchg
pop
fdivr
push
mov
je
add
enter
jg
retf
or
sub
iret
retf
sar
fdiv
popf
test
xor
(bad)
ja
es
mov
mov
cli
ret
and
dec
pop
and
dec
fs
xchg
jle
into
jnp
loopne
or
xchg
sub
test
add
sub
rcl
ss
ja
daa
inc
ss
pop
jbe
mov
xchg
lds
jp
rcl
xor
movs
xor
jae
fdiv
(bad)
mov
addr16
fild
add
mov
ins
pushf
leave
push
sub
arpl
sar
xchg
cmps
mov
dec
mov
sub
addr16
adc
in
or
repz
cmp
pop
xor
sbb
imul
dec
xchg
xchg
xchg
in
(bad)
and
iret
sbb
(bad)
test
loop
out
lea
aaa
sahf
inc
push
mov
mov
inc
out
jmp
addr16
or
ffreep
fadd
loope
pop
jmp
mov
sub
xchg
jno
dec
jne
je
mov
pop
add
add
and
sub
bound
inc
pop
mov
mov
int
(bad)
sahf
out
or
icebp
inc
jae
sub
mov
movs
push
(bad)
(bad)
stos
xor
pushf
adc
ror
(bad)
repz
iret
ins
nop
pop
and
adc
xchg
test
leave
cmp
cmp
enter
out
xchg
daa
mov
and
pop
pop
leave
(bad)
mov
addr16
xchg
aaa
cmc
xchg
sub
je
add
cli
(bad)
into
adc
popa
jnp
sbb
fadd
cwde
retf
jle
mov
jno
fisubr
add
xor
or
int
xchg
xchg
mov
or
retf
test
bound
in
cmp
jne
ficom
popf
das
sub
pop
je
sub
(bad)
out
or
sub
pop
aad
jle
dec
sub
shr
mov
pusha
xchg
imul
xor
dec
cmp
imul
sub
pop
fimul
cmc
cmps
sbb
and
test
rcl
nop
repz
fidivr
nop
fiadd
xor
add
mov
cmps
add
std
cmps
je
mov
lahf
or
outs
ss
jp
xor
xchg
sub
inc
dec
imul
hlt
inc
aas
rol
mov
pop
mov
test
cmc
xchg
jmp
pop
fmul
and
stos
jmp
stos
push
in
imul
xor
xlat
inc
sbb
push
mov
or
pop
pop
pop
and
xchg
cmps
test
in
fidiv
imul
inc
call
ss
outs
jge
xchg
mov
icebp
and
cmp
or
cs
fwait
enter
adc
sbb
mov
cdq
test
mov
(bad)
sub
frstor
xor
add
les
push
xchg
out
cld
xor
jl
mov
lods
lock
in
and
(bad)
push
jl
xlat
or
ror
or
xchg
sub
arpl
idiv
mov
mov
dec
(bad)
cmp
int
sub
inc
xchg
xchg
scas
or
fnsave
mov
or
pop
dec
es
jb
or
push
xchg
sahf
repz
call
ins
mov
nop
add
mov
ja
mov
popa
push
sbb
mov
mov
gs
add
mov
push
jg
adc
push
cmp
je
int3
and
inc
inc
xor
and
fwait
mov
sub
fwait
gs
adc
pusha
adc
xchg
mov
adc
repnz
dec
adc
fmul
inc
jge
arpl
(bad)
pop
xchg
mov
cmc
dec
mov
cmp
dec
shr
lea
xor
jo
mov
ffreep
cmp
inc
neg
dec
clc
dec
mov
loopne
dec
scas
scas
mov
scas
fwait
aas
lds
inc
and
mov
mov
mov
pop
shl
test
pop
(bad)
std
mov
fdivr
mov
mov
sahf
loopne
or
mov
idiv
mov
(bad)
(bad)
int3
or
test
seta
and
nop
xchg
xchg
loop
xor
sub
fs
in
addr16
sub
stc
jecxz
sbb
js
mov
jno
neg
aam
or
retf
mov
das
int3
fsubr
mov
jb
jge
mov
add
cdq
and
cmp
mov
dec
ins
jle
ror
imul
in
test
pop
push
add
push
jae
lds
and
inc
jae
mov
or
test
jno
inc
dec
sti
imul
add
xchg
es
(bad)
in
dec
(bad)
inc
cmp
xchg
and
fwait
mov
in
dec
dec
mov
shr
jmp
cmp
bound
bound
loope
sub
ss
jnp
mov
add
cmp
int3
sub
dec
jl
hlt
cwde
pop
jl
aam
cs
sbb
mov
pop
dec
popf
in
jge
inc
fcmovnb
mov
pop
mov
popa
or
sti
sub
sbb
sbb
add
movs
xchg
in
push
lea
mov
cdq
sub
rol
or
cs
int3
or
mov
pop
add
ss
cmp
shl
jl
xchg
xchg
frstor
mov
cmp
fsubr
add
dec
and
or
fsub
shl
jmp
mov
in
mov
dec
add
push
sbb
out
(bad)
mov
mov
or
xchg
dec
leave
push
enter
repz
in
or
int
test
inc
mov
pop
xor
pop
dec
test
jbe
xchg
fnstenv
icebp
cld
cmps
xlat
or
xor
(bad)
rcl
mov
xor
jnp
(bad)
cmps
inc
mov
xor
mov
les
mov
mov
std
inc
sbb
dec
cdq
jmp
pop
xchg
shl
cmp
pop
in
sbb
mov
cmp
pop
dec
ins
fisttp
jnp
adc
adc
xor
test
pcmpgtw
(bad)
icebp
push
cmp
cmp
mov
push
fiadd
repz
(bad)
fcmovu
mov
pushf
or
out
mov
lods
pop
add
push
dec
pushf
clc
in
fwait
dec
(bad)
cmps
mul
call
xor
pop
mov
outs
repz
push
sbb
jle
and
pop
push
mov
aad
nop
xchg
movs
jae
xor
std
cmps
pop
outs
stc
call
imul
scas
icebp
mov
sub
inc
(bad)
sti
jmp
dec
push
retf
(bad)
inc
ins
adc
test
jnp
xor
or
ins
ins
add
hlt
push
fisttp
xor
dec
jp
jo
jl
sahf
push
fs
call
test
push
fwait
lods
je
arpl
or
enter
nop
retf
out
mov
mov
jl
and
cmp
sub
arpl
jmp
sar
lds
inc
adc
push
leave
(bad)
(bad)
inc
inc
xor
inc
cmp
cmc
xchg
fs
mov
cmp
in
fnsave
je
shl
je
das
jb
rol
xchg
sti
jo
push
adc
jmp
xor
inc
adc
dec
jae
jmp
in
mov
xor
pop
mov
(bad)
out
(bad)
icebp
xchg
stos
jg
cmp
call
push
dec
push
push
xchg
and
or
xchg
xor
and
stos
mov
out
dec
cmc
add
andnps
mov
(bad)
cmc
mov
imul
mov
xchg
push
call
int3
pop
test
mov
jg
js
pop
cmp
mov
dec
adc
frstor
push
inc
ret
dec
fiadd
outs
and
cs
xchg
fild
push
mov
scas
dec
cmps
adc
div
or
pop
dec
cmp
push
mov
mov
push
add
inc
cmp
outs
mov
fs
ss
dec
push
pop
add
or
dec
xchg
and
push
cmp
xchg
cmp
xchg
ins
fst
loope
ja
mov
(bad)
jecxz
sub
add
inc
bound
(bad)
mov
into
jo
fidivr
and
mov
outs
cmp
mov
or
xchg
push
pop
clts
pop
mov
add
call
pop
arpl
inc
ror
jl
cmp
out
adc
adc
repz
dec
cmp
cmps
pop
js
outs
add
lahf
adc
test
stos
dec
dec
ds
(bad)
retf
fdivp
dec
lock
fwait
pop
jo
pop
sbb
pop
dec
test
test
imul
mov
aad
and
add
jp
std
or
nop/reserved
push
call
dec
pop
int
fnstcw
pop
xor
jne
and
pusha
add
in
jp
inc
dec
and
in
or
cwde
pop
neg
or
cmp
xchg
and
addr16
sub
test
stos
inc
dec
mov
sub
js
cmp
retf
pop
add
pop
jmp
clc
sti
ins
xchg
jo
xor
inc
add
push
dec
mov
lahf
lods
cmp
jge
stos
gs
pop
cmp
fistp
add
inc
dec
(bad)
jg
sahf
pcmpeqd
(bad)
clc
rol
pusha
push
push
(bad)
into
xor
test
push
and
jl
and
adc
js
mov
(bad)
jo
(bad)
dec
dec
inc
inc
lods
push
sbb
jne
mov
and
lock
pop
and
shr
dec
xchg
js
call
adc
imul
(bad)
dec
imul
push
mov
(bad)
mov
stos
retf
jb
jp
movs
cwde
inc
popf
mov
inc
inc
retf
lahf
lods
shr
cmp
or
shl
sar
sbb
pop
mov
std
xor
pop
xchg
dec
lods
jle
icebp
pop
pop
sub
enter
cld
les
shl
test
fs
pop
les
pop
cmc
inc
sahf
pop
fwait
mov
and
or
sbb
jns
push
fcom
shl
and
xor
sbb
push
sbb
cmp
jne
pop
mov
sbb
dec
pop
sub
(bad)
sbb
xchg
xchg
ss
lock
call
xor
(bad)
xlat
popf
xlat
leave
cmp
xor
dec
adc
loopne
les
jns
jns
sbb
sbb
dec
adc
jle
inc
(bad)
and
sti
push
mov
(bad)
ins
inc
ja
aad
jmp
push
lods
fdivr
or
imul
cmps
pop
push
mov
out
scas
(bad)
mov
cmp
shr
arpl
mov
test
outs
fisub
call
fnstenv
cmp
ficomp
xchg
jbe
stos
push
cwde
cmp
fisub
stos
in
jns
sub
sbb
mov
int3
hlt
shl
sar
ins
mov
les
jecxz
lahf
push
fisttp
call
test
fwait
les
mov
pop
or
std
push
fbstp
push
call
mov
or
shr
popa
mul
(bad)
mov
jl
je
and
ret
pop
cld
fdivr
xor
retf
inc
aaa
xchg
shr
dec
(bad)
mov
jp
inc
(bad)
(bad)
fimul
jmp
test
dec
push
push
jmp
rol
jecxz
push
mov
or
sti
retf
xchg
stos
shl
xchg
jns
(bad)
inc
ds
aas
pop
in
sub
scas
(bad)
ror
cmp
cmp
(bad)
jae
cmps
loopne
(bad)
dec
and
aaa
mov
xchg
and
sbb
add
nop
not
add
cmp
fisub
or
pop
adc
in
sub
ins
arpl
int
loope
inc
add
cli
inc
popf
enter
pop
mov
(bad)
sar
sbb
addr16
xchg
dec
jno
shr
sbb
hlt
dec
and
cmp
addr16
xchg
inc
or
push
pop
xor
push
push
ins
add
int
push
mov
ss
jmp
push
jne
pop
outs
cmp
clc
bound
in
jmp
je
mov
cmp
add
daa
(bad)
scas
sub
nop
bound
test
out
mov
jge
inc
pop
xchg
or
fs
ret
in
push
dec
dec
cli
add
arpl
shl
push
mul
sub
cmc
xor
lods
push
outs
sbb
xor
aas
adc
out
lods
jb
test
test
or
add
(bad)
repz
dec
add
and
rol
or
mov
cmp
push
xor
cmp
pusha
push
dec
add
adc
xor
imul
cli
sub
mov
sbb
repz
jecxz
inc
mov
fild
mov
rcl
adc
mov
add
ret
jb
gs
jl
xchg
shl
mov
daa
lds
pop
in
mov
loop
sub
inc
cmps
fwait
ret
test
push
idiv
cs
inc
push
push
sub
das
js
add
pop
inc
xor
cmp
push
lods
cmp
and
int3
test
daa
call
mov
mov
and
push
cmpps
jge
mov
sti
call
mov
bound
and
fld
das
loope
jmp
in
push
(bad)
cld
pushf
int
jmp
out
and
add
dec
scas
mov
and
outs
out
mov
xchg
push
js
jecxz
stc
cmc
sub
ret
ret
(bad)
cmc
adc
scas
mov
and
xchg
lea
and
repnz
jmp
mov
ret
cmp
imul
sub
imul
pop
cmp
stos
mov
sub
dec
js
add
xlat
out
xchg
or
scas
sub
shr
ret
mov
addr16
pop
cwde
ins
icebp
call
adc
xor
add
inc
mov
jmp
xor
stos
cld
sbb
jnp
outs
into
shr
inc
into
ret
aaa
inc
leave
and
loope
(bad)
mov
adc
stos
das
mov
push
inc
addr16
dec
xor
data16
in
xchg
loopne
aam
int3
rcl
xchg
into
jnp
loopne
cdq
or
jecxz
or
dec
push
clc
push
inc
mov
adc
push
call
loope
ins
enter
(bad)
ffreep
(bad)
jb
add
mov
push
in
sub
inc
or
and
(bad)
rol
xchg
dec
pop
xlat
ds
fcom
xchg
rcr
aam
sub
(bad)
inc
retf
push
jae
aad
ss
push
test
mov
mov
cs
sub
mov
xor
vfrczpd
push
xchg
sub
test
mov
jnp
xchg
cmp
(bad)
mov
pop
inc
daa
out
les
(bad)
es
inc
hlt
out
adc
add
inc
stos
clc
mov
mov
scas
shl
aam
out
mov
pop
test
mov
loopne
addr16
and
jp
in
dec
pusha
sub
lahf
fistp
cmps
jmp
test
sub
jmp
ss
push
into
cdq
mov
xor
movs
loopne
fnsave
mov
xchg
or
fst
nop
xchg
jo
jbe
and
dec
push
sub
sbb
pop
fdiv
mov
movs
scas
xchg
push
mov
jne
outs
nop
and
lods
out
out
jle
das
sbb
jbe
sbb
hlt
test
or
jmp
sub
push
xor
jne
push
xor
ret
repz
sbb
xor
rcl
fisttp
in
(bad)
cmps
inc
shl
xchg
inc
out
daa
cld
pop
pop
inc
pop
outs
loope
push
scas
push
hlt
sub
jg
push
lock
jae
add
jno
mov
jnp
scas
inc
test
imul
aas
cmp
or
pop
and
jp
stos
test
int3
jb
adc
lock
fistp
jp
rol
stos
(bad)
pop
aam
pusha
repnz
leave
lods
fs
cli
fwait
inc
inc
out
mov
xchg
int3
shl
jmp
daa
gs
rol
pop
pop
fdivr
add
ret
dec
lods
jp
out
cmp
pop
adc
cmps
cmp
add
cs
(bad)
sbb
call
mov
xchg
stos
sbb
cmp
popf
cld
add
neg
cmp
imul
shr
lahf
jno
fsubr
jmp
stos
aad
inc
inc
jmp
xor
cmp
movs
popa
test
pop
in
cmp
push
test
pop
sbb
imul
out
pop
shl
test
add
sbb
scas
mov
cmp
loopne
dec
int
xor
popa
sbb
outs
jl
nop
lods
mov
mov
push
cli
ror
mul
xor
sbb
sbb
xchg
sub
sub
lea
mov
pusha
ja
ins
pop
jl
jecxz
ja
mov
repz
and
mov
adc
cld
dec
fs
sbb
add
dec
add
es
push
xor
sub
in
cmp
add
pop
fbstp
push
jl
xor
rcl
frstor
sahf
das
popf
stc
xchg
xchg
sub
hlt
call
push
ins
dec
ret
xor
mov
add
mov
push
out
cli
or
xor
sub
mov
xchg
add
cmps
in
mov
adc
aaa
cld
arpl
inc
inc
jae
lods
imul
and
add
sub
scas
test
xlat
cmc
pusha
xor
das
or
mov
dec
add
jnp
dec
cld
xor
test
lods
mov
mov
aad
or
mov
push
xchg
inc
jge
mov
test
cmp
cmc
movs
or
dec
mov
mov
sub
clc
xor
ins
sbb
dec
dec
inc
inc
aas
loop
mov
xchg
ins
pop
mov
adc
jecxz
or
xchg
cdq
iret
(bad)
and
sbb
movs
inc
inc
cmps
add
ins
repnz
or
and
jmp
adc
dec
ins
imul
jbe
cdq
jb
jecxz
sub
push
sub
dec
mov
xchg
repnz
sbb
nop
pop
pop
pop
into
and
scas
jmp
dec
lods
ret
mov
jb
add
ins
xor
scas
stos
ror
ss
xor
lods
test
push
jae
jle
push
fistp
pop
mov
arpl
or
cmps
pop
lods
enter
sub
fstp
idiv
xchg
das
pop
pop
mov
fadd
sub
push
aaa
and
cld
(bad)
pop
not
pushf
inc
add
es
cmps
cmp
xchg
lock
fldcw
je
jne
aaa
(bad)
ror
fimul
aam
pusha
adc
sbb
mov
retf
inc
add
addr16
jge
and
enter
stos
std
imul
xchg
and
pop
data16
inc
add
test
outs
aam
popa
sbb
ins
aad
daa
enter
inc
cwde
outs
push
jnp
mov
jns
jb
sti
jg
inc
sub
adc
jmp
dec
or
mov
sub
xchg
jo
and
xchg
arpl
scas
iret
test
push
data16
rcr
das
push
mov
adc
test
xor
repz
sbb
sub
inc
pop
jns
rcl
xchg
call
xchg
mov
push
aam
dec
fild
(bad)
sbb
sub
call
mov
or
test
fidiv
clc
ret
ds
jmp
jg
push
xchg
lds
push
and
(bad)
dec
mul
loope
mov
dec
mov
imul
inc
inc
jp
les
sub
push
outs
xchg
cmp
xor
(bad)
dec
jbe
push
push
cs
jb
es
scas
push
or
or
int
sub
sbb
mov
out
or
xchg
xchg
mov
or
addr16
cmc
sub
mov
sub
mov
into
scas
and
or
jge
stc
mov
mov
sbb
sbb
mov
test
mov
pop
dec
data16
dec
scas
push
imul
sbb
xchg
or
or
pop
mov
scas
sti
sbb
cmp
pop
jns
pop
sar
mov
adc
sub
mov
pop
inc
push
in
pop
outs
retf
scas
daa
inc
fsubr
jmp
lds
das
sar
test
in
push
inc
dec
push
idiv
call
bound
rcl
adc
push
or
cli
imul
sbb
adc
fiadd
pop
cmps
xor
mov
out
nop
cmp
mov
std
iret
vphaddubw
pop
xor
mov
fwait
outs
xlat
pop
imul
mov
out
cmps
movs
(bad)
mov
ret
cld
aas
adc
lahf
ins
stos
and
sub
push
push
adc
movs
out
xor
and
shl
sar
scas
jp
and
mov
mov
or
adc
pop
xor
push
push
sbb
dec
pop
inc
icebp
push
fwait
mov
xchg
pop
mov
sub
loopne
mov
inc
repz
ror
fist
xor
bnd
dec
int
mov
les
xchg
mov
ins
xchg
push
mov
jnp
(bad)
stos
in
add
ss
jo
xor
jmp
jecxz
and
shl
lds
cmp
pop
inc
addr16
mov
mov
shr
gs
mov
not
push
cmp
jns
push
int3
std
cmp
push
out
fst
cmp
loop
shr
inc
dec
retf
jmp
adc
add
xchg
or
push
loopne
ror
adc
cmp
idiv
push
(bad)
icebp
stos
retf
add
sbb
push
sub
sub
loop
fs
push
mov
popf
push
sbb
or
ins
or
or
sbb
repnz
popf
test
imul
fmul
xchg
mov
(bad)
push
mul
or
mov
xlat
and
cld
cmc
xlat
inc
pop
add
jecxz
dec
sar
mov
ins
add
dec
mov
das
nop
cmp
sti
iret
repnz
pop
out
xchg
mov
pop
imul
sbb
or
sbb
sbb
int3
sbb
inc
push
xor
mov
(bad)
mov
rol
push
dec
pushf
outs
rcr
push
lds
push
outs
sahf
ror
scas
ret
inc
adc
aas
inc
ret
sbb
xchg
pop
pushf
je
out
pop
add
adc
std
dec
sub
scas
fwait
in
rol
shr
dec
loop
xor
dec
sub
xor
xlat
sub
lahf
repz
pop
sbb
pop
sahf
ret
mov
arpl
(bad)
pop
sbb
sbb
das
mov
pop
dec
mov
pusha
xchg
call
(bad)
xlat
adc
retf
dec
ss
sub
mov
pop
imul
sub
dec
xor
fsubr
inc
xlat
stos
fbld
pop
mov
mov
or
sbb
inc
call
das
enter
out
imul
xlat
pop
cmp
lods
dec
popa
out
xor
push
movs
cmovs
outs
and
inc
mov
and
clc
push
or
in
mov
lock
xlat
adc
mov
mov
mov
mov
scas
mov
fisub
stc
xchg
sbb
leave
cld
rcl
rcr
movs
mov
ins
cwde
stos
mov
hlt
inc
push
loope
xchg
push
movs
jmp
in
adc
aam
xchg
cwde
imul
push
jne
xor
cmc
clc
pop
addr16
rcl
mov
nop
call
xchg
jae
in
mov
test
nop
dec
scas
or
cs
inc
mov
test
ds
lods
jbe
cld
popa
and
call
imul
dec
xor
mov
adc
fs
ins
cmp
sbb
and
jle
mov
ficom
bound
stos
shl
aad
add
movs
sbb
inc
(bad)
fist
xor
pop
out
and
mov
imul
jp
ficom
popf
jb
jg
jmp
rcl
sbb
(bad)
and
out
retf
inc
mov
sti
(bad)
loop
mov
push
mov
pop
repnz
dec
mov
ficom
(bad)
(bad)
jno
nop
mov
dec
sbb
mov
ret
adc
xchg
mul
push
or
cs
cmp
fst
movs
push
dec
adc
fstp
inc
ret
les
cld
fcom
ror
pusha
dec
jecxz
sub
or
call
pop
push
add
jecxz
and
sahf
mov
cli
ins
push
fs
cmps
daa
fcomp
dec
cmps
fnstenv
inc
mov
xchg
ins
mov
shl
mov
xor
push
pop
jns
in
or
test
add
add
ret
mov
popa
mov
cmp
(bad)
adc
out
pusha
sub
mov
test
jl
pop
das
add
jecxz
add
mov
dec
std
nop
dec
ja
cmc
mov
push
sti
idiv
movs
add
jno
mov
add
lods
fcom
dec
adc
cmps
or
aas
mov
repnz
mov
jb
push
cmp
adc
in
aam
and
mov
sti
adc
int3
int3
icebp
jne
cmp
inc
jp
dec
adc
or
push
mov
dec
imul
add
fstp
xor
mov
add
fdivr
in
cld
in
outs
int3
dec
stos
inc
pop
loop
or
mov
cld
push
movs
mov
fsubp
jns
mov
ror
neg
lods
xor
fwait
push
push
pushf
ret
arpl
lock
cmps
cdq
pop
(bad)
mov
test
sub
sbb
jb
cmp
mov
sub
adc
fdiv
pop
adc
and
out
jmp
sub
sub
lahf
mul
in
push
jmp
pushf
ror
movs
add
clc
fdiv
or
cmp
ins
sbb
mov
fninit
sub
pop
xor
mov
hlt
sbb
stos
mov
jnp
cmp
xor
iret
mov
mov
mov
(bad)
cmp
sbb
fnstenv
cdq
mov
movs
inc
loop
xor
clc
pusha
loopne
push
js
adc
pushf
mov
dec
fsub
popf
iret
in
addr16
pop
loope
push
imul
nop
inc
mov
cmps
mov
jg
dec
lods
aad
inc
(bad)
hlt
add
adc
fisubr
je
xchg
add
pop
sahf
repz
jge
cwde
cmp
cmp
push
sahf
rcl
add
add
neg
les
(bad)
in
jecxz
pop
mov
mov
adc
dec
or
push
minps
inc
add
cmp
repnz
jp
std
bswap
iret
ret
call
test
sub
adc
sti
mov
adc
jge
jbe
test
xor
rep
daa
xor
mov
(bad)
pop
imul
pop
je
xlat
mov
adc
cmp
and
scas
cwde
mov
int
icebp
repz
dec
ds
mov
das
sub
(bad)
push
push
mov
xor
test
mov
jae
ins
inc
push
jae
hlt
mov
pop
mov
mov
jae
(bad)
push
scas
add
mov
mov
mov
lods
loopne
stos
pop
rol
pop
test
cmp
dec
rol
sbb
fwait
test
jmp
dec
rol
jne
jecxz
xchg
pop
dec
pop
xor
call
pop
jmp
cwde
out
(bad)
pop
mov
sub
xchg
jnp
ds
jno
mov
sub
sub
repz
add
sub
inc
imul
mov
js
push
inc
xchg
sbb
add
(bad)
mov
dec
int3
movs
sti
ffreep
mov
inc
mov
pop
and
call
cmp
add
(bad)
daa
jge
xor
stos
and
xor
inc
adc
ficomp
push
scas
push
pop
bound
(bad)
repz
dec
adc
retf
xchg
arpl
adc
jb
loop
dec
iret
rcr
cmp
mov
movups
sbb
stos
shl
stos
(bad)
jbe
(bad)
scas
sub
rol
outs
cmps
jge
jmp
sbb
dec
pop
in
js
cmps
daa
aaa
call
sub
stc
dec
fcom
popf
and
fdiv
pop
jle
enter
imul
ds
mov
sti
test
or
or
pop
aam
pop
(bad)
jp
shl
xor
fs
ret
shr
cli
adc
inc
xchg
sub
inc
cmps
sahf
mov
push
stos
es
jns
ret
js
mov
cld
retfw
sub
imul
sbb
mov
mov
xchg
fild
pushf
lea
movs
fstp
mov
inc
xchg
and
loopne
outs
jns
es
mov
lock
push
stos
push
mov
test
mov
jne
mov
inc
cmp
mov
stos
mov
jbe
push
stos
(bad)
adc
mov
bound
mov
dec
mov
fnstsw
shl
pop
jmp
mov
mov
loop
jecxz
sub
fst
out
xor
fimul
lods
retf
mov
pop
icebp
loop
ins
jmp
test
pop
sub
jae
out
adc
or
sbb
mov
mov
iret
lock
pop
cli
mov
dec
shl
jl
xchg
sub
pop
addr16
sbb
aaa
cwde
inc
mov
daa
test
sub
push
retf
add
or
inc
fldcw
sbb
daa
mul
dec
ja
les
pop
cdq
adc
mov
push
popa
and
pop
repnz
rcl
jne
leave
xchg
into
leave
xor
pop
sti
push
shl
jae
cmp
push
stos
push
push
sbb
mov
nop
sub
in
jmp
scas
sub
xor
push
cmps
out
inc
jp
outs
popf
cwde
js
adc
lods
jmp
jge
mov
mov
pop
sbb
loope
mov
mov
iret
shl
imul
inc
aas
stos
mov
fnstcw
or
fcomp
or
jns
addr16
mov
pop
(bad)
jbe
sub
xor
sub
cmp
jne
add
sub
mov
cld
mov
fs
(bad)
rcl
sub
movs
jp
pop
cmp
iret
es
test
xchg
inc
popf
das
in
popf
std
out
cmp
pop
sbb
xchg
frstor
mov
aad
fmul
rcr
pop
and
dec
sbb
push
ss
into
enter
jl
xchg
js
cmp
dec
adc
inc
add
aaa
retf
mov
adc
add
stos
sti
shl
inc
out
sbb
repnz
and
std
and
imul
sub
push
call
out
enter
pop
jle
inc
mov
outs
mov
jnp
out
inc
adc
stos
test
inc
jae
and
(bad)
cmp
out
dec
sub
xchg
js
inc
daa
ror
iret
jae
in
in
jg
out
jne
fdiv
or
shl
and
xlat
xchg
and
inc
ds
xor
sbb
inc
cmp
pop
imul
rcl
fidiv
fimul
xchg
retf
pop
fisttp
das
ret
ret
add
mov
push
jge
and
add
xchg
xor
ja
mov
pop
inc
add
cmp
pop
xchg
mov
adc
pop
adc
leave
popf
adc
sets
rcl
in
sub
or
mov
mov
(bad)
adc
iret
push
dec
movs
push
cmp
cli
leave
sub
ins
test
and
adc
je
imul
mov
mov
scas
sbb
fst
adc
inc
cmps
pop
adc
or
pop
sub
mov
xchg
jns
sub
push
sbb
loop
in
rcr
(bad)
mov
dec
stc
rcr
xchg
addr16
test
(bad)
ficomp
push
xchg
js
inc
cs
call
or
jno
inc
in
xor
popa
aas
cmc
pop
add
push
addr16
nop
mov
push
test
xor
ins
push
mov
in
mov
add
ja
into
aas
popf
pusha
and
xchg
call
inc
jnp
call
jl
or
and
xor
xchg
push
dec
call
dec
mov
shl
pushf
loopne
leave
loopne
push
fwait
in
push
add
jo
xor
mov
(bad)
loopne
mov
cli
shl
ret
nop
es
cld
xor
fidivr
xchg
mov
mov
dec
clc
xor
sbb
jmp
push
pop
add
fwait
cmp
push
jo
repnz
stos
cmps
jmp
mov
inc
(bad)
or
repnz
pop
dec
mov
out
xor
cli
cmp
out
push
int
and
mov
cmps
ds
rcl
stos
(bad)
lods
inc
mov
sbb
and
nop
add
sub
sub
adc
push
icebp
jb
mov
dec
jge
sti
imul
push
lods
push
dec
(bad)
mov
nop
test
inc
movs
xchg
xchg
(bad)
ins
sbb
sub
jae
lds
xor
out
cmps
dec
mov
(bad)
or
repnz
inc
daa
add
stos
dec
rcl
adc
leave
cmc
into
stc
fstp
xchg
cli
ret
loop
popf
push
retf
pop
sbb
stos
cs
add
fnstsw
pop
dec
popa
icebp
sbb
or
jecxz
stos
int3
fucomi
test
mov
jmp
adc
mov
ins
dec
fstp
popf
rcl
sbb
mov
in
daa
iret
ret
xchg
loope
dec
addr16
push
inc
cmp
(bad)
and
push
cwde
dec
clc
int
pop
or
inc
int
lock
cmp
pop
sub
pop
fidivr
pop
rcr
jb
das
out
movs
scas
mov
cmp
cwde
out
lock
xor
push
mov
int3
lock
jae
adc
and
mov
inc
push
inc
inc
jnp
push
inc
rcl
mov
adc
in
es
leave
ja
popa
pop
sti
jne
(bad)
call
jb
fcomp
fs
mov
xchg
(bad)
cld
and
std
inc
ja
xlat
sbb
mov
dec
mov
sub
data16
xor
jmp
out
stos
add
add
rol
inc
lods
xchg
test
outs
out
inc
daa
and
or
mov
mov
sti
pushf
mov
inc
jecxz
add
or
inc
sub
dec
cmp
or
and
cmp
shr
or
nop
mov
(bad)
sbb
inc
movs
push
loope
cmps
movs
ins
dec
and
add
xchg
cwde
jo
xlat
rcr
faddp
cs
fldcw
(bad)
scas
sbb
jl
imul
nop
cmps
add
std
sub
rcl
inc
mov
rol
div
push
call
inc
popa
jle
cmp
sahf
out
add
and
jbe
retf
mov
add
xlat
mov
mov
pop
xchg
bound
aam
xor
push
xor
xor
aam
sub
and
mov
jge
cmp
aaa
pop
fdivr
adc
push
out
mov
ja
out
mov
sub
inc
nop
test
repz
inc
addr16
mov
jb
sub
idiv
cdq
cmp
lahf
cli
out
lock
aas
enter
pop
cwde
jmp
inc
xrelease
sar
das
les
add
push
sub
adc
fild
clc
inc
and
ret
jecxz
push
movs
or
push
call
shr
push
jp
icebp
fcmovb
jp
lahf
jge
enter
adc
adc
outs
xchg
sbb
or
cmp
loop
sbb
mov
add
mov
jae
fist
test
xor
aas
(bad)
xchg
mov
or
ror
movs
cmp
(bad)
imul
pop
mov
add
jo
in
sti
ret
cmps
and
mov
pushf
sahf
lock
test
xchg
enter
xor
or
mov
out
out
movs
xchg
pop
mov
pop
push
or
enter
xor
dec
stc
clc
mov
sbb
xchg
add
out
push
aam
jp
shl
repnz
add
fmul
shl
lock
push
pusha
ret
xor
cs
jno
and
rcr
int3
pop
cdq
imul
arpl
repnz
mov
mov
jno
mov
inc
push
sbb
fwait
add
pop
or
xor
out
xor
mov
test
sub
lods
into
shl
cs
add
in
mov
and
adc
int3
mov
int3
ret
mov
push
test
mov
fist
push
adc
and
push
aas
inc
and
(bad)
cmp
pop
and
aas
pop
out
push
or
repz
rol
scas
dec
jae
push
dec
scas
adc
movs
push
lahf
int
lods
xchg
mov
cmc
pop
pop
bound
gs
out
add
push
loopne
dec
fnstenv
mov
(bad)
pop
push
jbe
cmp
pop
or
cmps
ins
test
push
pop
(bad)
int3
ret
sbb
out
fwait
dec
pop
or
(bad)
mov
jmp
sbb
sbb
cmp
stos
inc
fstp
mov
into
jp
push
jno
and
nop
pop
cmp
jbe
or
jo
or
stc
jne
popf
imul
add
iret
add
and
push
bound
jne
xor
inc
scas
clc
push
pop
aas
cmps
mov
and
clc
push
call
pop
mov
cmp
(bad)
mov
in
adc
lea
test
push
mov
imul
test
into
out
sbb
cmp
add
in
cmp
rol
xchg
lods
or
xor
jbe
pop
cs
(bad)
jae
cmp
mov
int
jns
dec
inc
push
idiv
std
rol
aaa
(bad)
mov
rol
imul
pop
shl
adc
ds
mov
scas
dec
xor
jp
ret
or
adc
aas
pop
and
inc
adc
or
xlat
sbb
icebp
dec
push
dec
dec
xor
cmp
cs
sbb
enter
push
jecxz
jle
fidiv
adc
ins
pushf
pop
loopne
out
iret
push
fmul
pop
mov
sub
pop
retf
sub
sbb
dec
rcr
inc
xchg
xor
ds
ja
sub
jns
rol
call
cmps
mov
lock
jg
dec
loop
(bad)
int3
retf
test
aad
mov
push
lahf
mov
and
test
cmp
cmp
mov
jl
or
sub
nop
ds
add
int3
xchg
(bad)
push
call
mov
pop
sub
and
and
mov
jne
inc
sbb
outs
enter
test
mov
popa
xchg
fs
xor
mov
shl
xchg
sbb
adc
cs
add
fstp
cmp
cmc
dec
retf
mov
xor
scas
and
popf
jge
dec
dec
or
cmp
jne
push
sahf
pop
clc
mov
mov
popa
pop
pop
adc
pop
adc
mov
and
mov
xchg
outs
test
ja
jne
fst
lea
adc
aam
outs
dec
jg
xlat
fdivrp
xchg
pop
out
push
inc
inc
test
pop
xor
popf
xor
or
hlt
or
inc
(bad)
mov
pop
adc
adc
ficom
adc
dec
pop
pop
mov
and
sbb
lods
gs
or
shr
addr16
pushf
cmp
pop
lds
jecxz
mov
mov
scas
lock
mov
push
mov
popf
shl
mov
pop
call
add
pusha
push
lods
out
fistp
xchg
add
push
icebp
cdq
inc
les
dec
icebp
enter
out
fld
cdq
in
dec
sub
mov
mov
ret
pop
push
rcr
pop
inc
cld
pop
dec
mov
dec
aas
xchg
call
ds
loopne
xor
xchg
mov
popf
inc
ss
repnz
jmp
and
adc
enter
inc
enter
in
addr16
out
aas
pop
(bad)
sbb
mov
xor
(bad)
lds
xchg
aaa
mov
jp
fistp
sub
rcr
out
pop
mov
mov
or
pop
push
out
xor
aaa
aas
push
jle
push
pop
cs
pop
mov
push
leave
jl
jnp
add
cmp
jo
dec
ret
(bad)
fisttp
xor
push
jnp
mov
push
jb
mov
sub
(bad)
out
mov
add
rdtsc
in
push
cmp
xchg
mov
(bad)
aas
jp
push
aam
push
mov
aas
sbb
pop
xchg
cmps
pop
mov
sbb
mov
xor
inc
dec
repz
clc
add
shl
xor
push
mov
push
mov
rcl
iret
cmp
int
retf
push
inc
adc
jle
out
test
xchg
pop
add
mov
popa
int3
sub
lods
push
outs
sub
ja
mov
(bad)
pop
adc
lods
sahf
push
pop
(bad)
cwde
cmp
loope
cwde
or
cmp
cli
jl
stos
add
push
aam
push
jg
pop
sahf
stc
xlat
pop
mov
cmp
mov
fisttp
(bad)
and
fs
test
and
lea
fs
popa
out
clc
fldcw
inc
inc
enter
xor
sbb
xor
into
loopne
ficomp
cs
add
jnp
ins
mov
jmp
jo
ins
scas
in
je
cli
in
lea
mov
int
scas
imul
pop
pusha
cmp
sub
push
pop
and
aam
dec
lods
ds
cmp
xchg
inc
(bad)
lea
out
push
jp
mov
sub
add
xor
rcr
mov
mov
sub
pop
stc
mov
mov
jns
pop
(bad)
sti
(bad)
cdq
mov
ret
mov
jb
mov
dec
inc
xchg
in
mov
mov
(bad)
mov
mov
(bad)
test
fdivr
add
fisttp
ins
cwde
and
ret
arpl
inc
inc
mov
retf
outs
inc
or
aam
xchg
and
aas
arpl
out
lea
popf
jae
movs
add
mov
fld
dec
shl
pop
lock
push
popa
pop
add
stos
xchg
das
dec
sub
ds
sub
mov
cmp
mov
sub
or
fs
mov
outs
fcom
leave
cdq
fist
jl
hlt
int3
popf
mov
mov
ret
aaa
nop
ficom
dec
mov
les
lahf
jae
retf
sub
adc
retf
pop
jae
add
jl
fiadd
sub
test
sbb
test
stc
icebp
mov
je
mov
inc
ja
punpckldq
adc
sbb
iret
mov
jecxz
pushf
ins
mov
xchg
fwait
push
stc
mul
mov
jecxz
mov
sti
push
cli
dec
xor
cmp
jp
push
retf
fadd
mov
sub
aas
fst
cmp
mov
pop
mov
pop
mov
in
sub
(bad)
movs
inc
leave
sbb
movs
and
sahf
js
test
jl
xor
test
mov
test
mov
sub
mov
add
dec
mov
fsubr
push
mov
sub
fwait
rol
daa
mov
push
sbb
outs
jne
adc
sar
and
mov
fiadd
mov
dec
pop
sti
cmp
push
mov
ins
mov
pop
lods
neg
add
ss
cwde
int3
push
aaa
or
adc
xchg
inc
xor
and
inc
sahf
adc
and
into
popf
popa
xor
jo
ins
push
cmps
scas
pop
xor
adc
iret
push
cmps
adc
sar
int3
dec
call
popf
or
jl
fistp
ror
stc
dec
dec
(bad)
retf
jnp
or
mov
out
or
in
shl
add
dec
xchg
(bad)
repz
push
jae
hlt
popa
movs
rcr
(bad)
cmp
sahf
call
pop
pop
jmp
xor
or
stos
dec
push
push
pusha
(bad)
fstp
(bad)
xor
push
mov
inc
push
(bad)
out
xchg
scas
and
fcomp
and
into
jle
jb
imul
xlat
mov
shr
dec
cmp
fmul
outs
cmps
add
loop
mov
shr
in
ror
icebp
int
mov
fmul
iret
and
(bad)
in
sub
ja
mov
dec
mov
xchg
es
fnstenv
data16
int3
pop
or
mov
cmp
call
cmp
xchg
daa
sbb
push
jbe
fcom
sbb
ins
data16
sti
scas
inc
cmp
dec
jmp
jl
inc
(bad)
xor
xlat
inc
popf
xor
add
nop
mov
lock
cs
mov
stc
ins
outs
mov
movs
fistp
les
jg
int3
push
into
in
lds
xchg
cmc
(bad)
(bad)
pop
xchg
dec
xor
inc
xchg
pop
retf
jmp
mov
sbb
(bad)
mov
outs
xor
pop
xor
or
push
mov
sar
lods
adc
nop
pushf
repnz
cmp
lods
repz
mov
das
adc
shl
out
shl
xor
lods
pop
js
into
aaa
int3
fst
pop
std
jns
in
repnz
inc
mov
in
sub
mov
inc
lods
clc
pop
ret
cmps
jg
inc
ins
add
stos
xor
mov
neg
inc
into
dec
ss
add
mov
inc
jb
dec
sbb
repnz
xchg
jne
jecxz
pop
adc
stos
(bad)
cli
or
out
xor
mov
xchg
repz
cmps
inc
rcr
xchg
cmps
dec
push
sbb
test
cmp
or
data16
call
sbb
add
dec
fadd
xchg
stos
inc
adc
xorps
cmp
(bad)
fbstp
sbb
pusha
cli
adc
or
or
sub
pop
and
fmul
aad
into
push
inc
or
pop
pusha
add
push
in
retf
aas
mov
in
ins
jne
dec
pop
xchg
shr
jns
icebp
mov
mov
sbb
cmp
push
les
push
cmp
(bad)
mov
adc
xor
repnz
pop
jle
inc
add
inc
adc
adc
mov
movs
jg
repz
push
pusha
xchg
scas
outs
add
std
dec
pop
imul
push
sbb
cmp
cwde
xor
ror
test
xchg
lods
mov
pushf
xchg
mov
jmp
(bad)
ret
push
jmp
and
neg
out
outs
push
mov
cmps
dec
ret
cmc
inc
bound
jno
and
in
inc
xchg
imul
xchg
push
cld
idiv
mov
xchg
ds
add
mov
mov
jg
and
adc
repnz
sbb
fst
sbb
push
cdq
ret
in
sub
xor
fild
(bad)
mov
mov
sbb
and
pop
fmulp
mov
jl
add
or
iret
sahf
mov
mov
adc
aam
dec
or
mov
dec
adc
pop
ja
mov
sbb
aas
out
int3
es
and
and
add
int3
jmp
xor
xor
out
pop
ss
mov
ds
ja
mov
jmp
inc
mov
scas
je
cmp
or
arpl
outs
leave
mov
or
mov
mov
nop
adc
in
pop
jmp
xlat
or
adc
push
or
inc
and
mov
cmp
sbb
clc
push
stos
bound
cmc
sbb
(bad)
cmp
imul
jp
inc
retf
mov
sbb
lock
bound
push
add
int3
mov
inc
and
cmp
sbb
sub
xlat
ins
mov
xor
call
jmp
test
out
sar
mov
push
mov
adc
test
(bad)
jl
push
xchg
loop
pop
mov
and
add
jl
fstp
icebp
fucomi
loopne
cmps
addr16
inc
sub
out
repnz
loope
clc
loope
jge
cmps
icebp
mov
in
iret
mov
push
imul
xchg
imul
and
adc
popa
mov
in
fs
xchg
pop
js
push
scas
and
fldcw
xor
push
pop
dec
fwait
xchg
lock
(bad)
in
pusha
lods
xchg
pop
pop
aam
cmps
mov
movs
push
into
add
repz
lss
(bad)
sbb
mov
ret
or
or
adc
xchg
aas
jmp
ja
xor
mov
lods
jg
inc
mov
sub
xchg
inc
dec
xchg
ror
xor
xrelease
cmc
jbe
outs
fisttp
mov
jo
xor
jo
rcr
(bad)
adc
pop
icebp
adc
jp
mov
and
pushf
in
sar
or
mov
or
fst
jbe
add
xchg
fsubr
(bad)
push
(bad)
cmp
shl
dec
mov
mov
push
sub
cmp
ins
in
cli
aad
adc
mov
call
add
pop
nop
sub
adc
daa
aam
ins
mov
mov
test
in
push
lods
rcr
cs
retf
jnp
lods
mov
xchg
push
aaa
stos
cwde
nop
xchg
push
out
movs
repnz
(bad)
sbb
ins
add
(bad)
in
jno
lods
scas
pop
push
add
pop
cmp
ss
inc
inc
or
jle
inc
stos
sahf
dec
jg
pop
pop
js
jecxz
jnp
aaa
shl
cdq
xchg
es
pop
xor
pop
icebp
(bad)
pop
ret
pop
mov
cli
mov
fld
je
in
aaa
inc
clc
xchg
out
cmps
mov
mov
sbb
pop
add
mov
mov
movs
sub
pop
fwait
or
std
mov
repz
cld
shl
icebp
aad
test
into
xor
sbb
hlt
mov
mov
push
xlat
jle
or
xchg
ins
xchg
adc
mul
or
(bad)
lods
fs
aaa
retf
sti
rcl
push
add
push
mov
dec
retf
xor
xchg
ins
mov
pop
push
fldcw
mov
sbb
mov
out
pusha
dec
repnz
sbb
jb
fld
cmp
lds
iret
out
mov
call
pop
inc
cmps
imul
mov
cmps
xchg
imul
ss
or
or
fcom
pop
call
push
push
adc
fcomp
mov
pop
fist
test
in
mul
dec
mov
or
xor
fcom
push
fsubp
(bad)
or
dec
xor
mov
fistp
fsubr
cmp
mov
pop
inc
push
(bad)
cld
imul
push
xor
dec
fscale
iret
mov
xchg
xchg
dec
xor
outs
loop
addr16
or
out
stos
mov
outs
jmp
xchg
push
cli
mov
adc
(bad)
jmp
push
enter
push
push
fcmove
ja
dec
movs
ror
jge
and
sbb
pop
pop
inc
push
xchg
pop
push
sbb
adc
push
mov
fadd
pop
fbld
mov
or
loope
sbb
(bad)
mov
inc
and
aad
adc
fisub
addr16
ins
mov
cmp
not
es
mov
test
sbb
sbb
mov
pushf
mov
or
repnz
and
adc
push
or
push
pop
pop
(bad)
stos
inc
and
push
(bad)
and
xor
mov
jle
loop
not
mov
dec
imul
mov
fsub
loop
stos
outs
inc
sbb
mov
ja
mov
test
mov
push
sub
leave
and
fsubrp
cli
out
les
out
shr
sbb
fild
dec
jle
repz
mov
jbe
dec
and
gs
pop
sbb
xor
add
bswap
rcl
jne
mov
pop
lds
sti
inc
xchg
mov
(bad)
push
inc
rol
push
div
sub
dec
pop
sbb
shl
xchg
scas
test
adc
adc
xlat
xchg
es
jb
sub
and
neg
mov
inc
or
int
xor
pop
out
jmp
mov
add
xchg
addr16
inc
dec
les
test
mov
fcom
or
test
dec
cmps
lods
add
push
sbb
sahf
pop
push
push
js
in
movs
sub
stc
jns
dec
jp
pop
(bad)
push
adc
call
and
arpl
sahf
imul
push
test
or
and
out
mov
cmps
int
or
loope
add
mov
mov
cmp
ret
add
aam
inc
sub
inc
push
push
mov
dec
sbb
popf
into
sbb
or
pop
out
fwait
fwait
aam
sar
ins
ins
and
inc
inc
push
sub
mov
sbb
mov
leave
loopne
in
fs
pop
loope
fstp
sbb
pop
nop
cmp
push
xchg
mov
sub
xor
test
mov
ss
int
and
mov
inc
fwait
loopne
push
mov
scas
pop
sahf
dec
sub
jmp
mov
pop
push
jecxz
out
mov
jl
lahf
iret
mov
or
out
sbb
shl
push
outs
sbb
inc
mov
jmp
retf
mov
pop
fwait
push
inc
je
pop
mov
les
mov
cwde
pop
pop
retf
xchg
adc
hlt
xchg
or
mov
jns
nop
lods
inc
mov
mov
fcom
jb
call
hlt
sub
outs
fcomp
cli
xchg
call
or
xchg
pop
stos
jl
pop
or
adc
es
icebp
xor
les
push
add
push
pop
(bad)
xchg
cmc
repnz
mov
xor
cli
sbb
jmp
hlt
mov
add
push
add
out
or
jg
dec
dec
and
add
adc
test
scas
dec
bnd
sub
and
inc
popf
dec
push
stos
in
daa
cmp
cwde
mov
fidiv
in
aaa
sbb
dec
sti
sub
mov
mov
push
and
push
lods
daa
fsub
(bad)
stos
not
or
inc
mov
pop
and
mov
pop
(bad)
ja
fs
call
inc
mov
mov
push
in
mov
push
mov
push
pop
or
adc
fs
xchg
sub
scas
inc
jg
test
jnp
dec
neg
fcmove
dec
outs
mov
cmp
push
jp
inc
inc
std
(bad)
imul
mov
lock
stos
push
cmp
adc
popf
loop
bound
fldenv
nop
mov
pop
scas
pop
sbb
ret
(bad)
nop
mov
std
dec
scas
pop
mov
pop
les
hlt
call
lock
jmp
xor
add
push
xor
push
sbb
call
imul
je
push
sbb
inc
js
push
inc
push
sbb
pop
stos
cmps
cmp
xor
mov
shl
int3
test
pop
js
dec
mov
fwait
xchg
daa
leave
icebp
adc
or
pop
mov
(bad)
sbb
enter
loope
ret
out
inc
fcom
icebp
or
mov
xchg
mov
xchg
xor
mov
jnp
push
push
mov
iret
fwait
mov
jmp
outs
scas
out
mov
fcomp
sbb
rcl
hlt
test
mov
inc
or
call
test
mov
push
mov
add
stc
daa
and
inc
inc
lods
xlat
mov
in
xor
mov
dec
aaa
add
or
ds
push
int
fisub
out
add
ja
ficom
add
mov
adc
hlt
and
dec
mov
cwde
(bad)
jnp
or
mov
cmp
cmps
(bad)
cmp
dec
mov
mov
and
jecxz
dec
retf
inc
movs
xchg
test
hlt
mov
sub
pusha
mov
mov
outs
lock
ror
scas
cmps
mov
fcom
fucomip
idiv
push
mov
xchg
daa
mov
sbb
cwde
fwait
inc
xchg
sbb
aam
xlat
mov
retf
cmp
call
(bad)
pushf
shr
cmp
mov
dec
sub
mov
imul
mov
arpl
loop
push
imul
ins
clc
jns
mov
push
imul
mov
daa
bound
repz
jmp
ror
repz
retf
and
ins
imul
cmp
scas
mov
lock
mov
fnstenv
and
dec
jne
xchg
or
and
bound
dec
lods
in
icebp
js
xor
mov
ja
xor
rcr
cmp
mov
sti
pop
mov
cmc
inc
pop
mov
aad
aas
dec
loope
xor
mov
sub
imul
imul
pop
xchg
fcom
shl
inc
cli
rcl
in
movs
add
inc
dec
xchg
and
lock
or
lods
lahf
fidivr
sbb
push
sbb
arpl
push
cld
popa
rcl
push
(bad)
jne
jle
cmps
mov
pop
mov
jge
iret
push
inc
mov
xlat
xchg
(bad)
xchg
mov
mov
gs
les
mov
mov
cli
pop
not
mov
sub
rcl
inc
sub
sahf
pusha
jno
rol
dec
mov
push
jbe
inc
inc
push
push
movs
inc
iret
iret
jg
xchg
icebp
fisubr
or
xchg
aaa
loop
jge
mov
lods
jmp
fcmovnb
jp
stc
ffree
adc
adc
xchg
leave
pop
add
add
adc
add
mov
aas
fnsave
sub
fnsave
add
inc
inc
xchg
or
iret
int3
shl
je
dec
dec
jnp
inc
dec
push
mov
xor
xlat
std
sti
jp
cmc
mov
cmps
imul
mov
mov
cmp
cwde
inc
push
sub
ins
retf
fs
jae
sbb
ins
outs
dec
xor
inc
jne
les
jmp
pop
inc
jecxz
cmp
pop
in
scas
pusha
mov
test
lods
ins
xor
pop
aaa
jl
xchg
rol
in
rol
in
cmp
jae
(bad)
(bad)
pop
movs
les
adc
mov
cld
cmps
jno
push
inc
pop
mov
shl
bound
mov
jl
or
loopne
add
mov
pop
add
or
ds
es
jmp
out
hlt
out
sub
dec
mov
ret
cdq
mov
out
xor
pop
call
shl
or
sbb
pop
retf
out
cwde
hlt
sbb
stos
mov
xchg
loop
cmc
loope
cmc
je
mov
sub
shr
push
es
les
not
mov
mov
dec
sub
jmp
in
sub
mov
mov
loop
test
into
push
scas
mov
mov
mov
mov
sbb
mov
mov
loop
outs
loope
div
sbb
push
test
mov
out
cmp
(bad)
int3
sbb
sub
fadd
call
adc
add
mov
or
add
cmp
popa
and
in
xchg
push
jb
and
push
sahf
lock
arpl
retf
std
movs
mov
cli
cld
cmps
cmp
(bad)
sbb
jb
nop
lock
pop
outs
xor
dec
(bad)
adc
add
dec
fiadd
sbb
sub
pop
sub
loopne
xchg
call
sbb
cld
jl
mov
pop
std
and
sub
stos
retf
mov
cld
ror
dec
test
fisttp
fsubr
std
adc
xchg
cs
and
fucomip
clc
mul
fsubr
icebp
lahf
add
(bad)
adc
mov
test
ret
sbb
adc
sbb
cwde
jg
push
or
xchg
cs
sub
in
int3
fistp
repz
or
dec
mov
push
sahf
lea
inc
adc
das
ins
adc
inc
daa
mov
add
sbb
lock
aaa
(bad)
retf
mov
cmp
sti
stc
call
mov
mov
adc
enter
call
int
imul
mov
ficomp
lods
sahf
das
jmp
mov
mov
in
pop
loopne
sub
lahf
add
fwait
mov
jg
aaa
mov
dec
inc
inc
pop
fdiv
and
jp
shr
dec
add
(bad)
cdq
daa
inc
jmp
idiv
mov
and
push
retf
ret
push
adc
inc
ja
(bad)
aas
add
adc
xlat
jmp
and
adc
sbb
(bad)
dec
dec
mov
xchg
sar
out
pop
inc
test
cmp
jg
jmp
loop
pop
push
imul
dec
idiv
stos
mov
fld
or
dec
push
or
dec
int3
mov
xor
enter
hlt
mov
scas
sbb
iret
lods
sbb
outs
mov
fcom
mov
pop
fist
inc
pop
imul
mov
push
mov
div
rcr
daa
sahf
inc
inc
in
in
out
mov
ds
xchg
xchg
out
hlt
clc
add
out
repnz
sub
add
pop
mov
add
retf
xchg
dec
push
jne
jae
lods
test
xchg
xchg
dec
(bad)
bound
and
xchg
cmp
mov
loope
scas
out
adc
add
adc
sub
and
sub
mov
push
jle
stc
daa
arpl
sub
mov
xchg
call
in
inc
or
or
jp
call
xchg
imul
fsub
pop
in
pop
in
popf
movs
sbb
ins
and
ins
push
ret
or
xor
mov
xchg
adc
cmp
sbb
push
mov
fldcw
scas
mov
add
jg
cwde
cs
push
xor
cmps
push
icebp
shl
jle
jle
sbb
ja
movs
cmp
movs
scas
mov
cdq
add
and
fdivp
cs
sbb
sti
mov
push
imul
test
pop
xor
and
imul
imul
push
lds
fcomp
inc
enter
mov
mov
dec
bnd
rcr
fstp
add
add
sub
addr16
jbe
aam
pushf
dec
pop
push
out
push
fld
push
inc
and
lock
test
jge
pop
aaa
push
dec
hlt
jae
mov
pushf
pusha
repz
fisub
(bad)
sub
and
lahf
push
das
aad
dec
inc
and
or
and
nop
not
aam
test
fcmove
mov
cs
inc
xchg
mov
cmp
sbb
push
stos
hlt
scas
hlt
sbb
aas
cmp
out
and
std
push
xor
nop
mov
imul
out
mov
std
stos
dec
cmp
cdq
ja
int3
cmc
scas
inc
pop
into
mov
out
lds
popf
into
scas
lea
scas
sti
into
cmp
mov
dec
mov
out
into
repnz
inc
popf
stos
pusha
mov
adc
imul
rcl
loop
test
mov
mov
data16
(bad)
gs
ja
mov
pusha
(bad)
mov
sbb
cwde
xchg
(bad)
movs
repz
loope
dec
xchg
rcr
cwde
fwait
adc
mov
stos
shr
mov
lods
sub
loope
mov
push
jg
dec
stos
mov
ss
(bad)
lods
les
pop
test
pop
cwde
add
pop
stc
or
rol
mov
push
lds
jnp
jp
scas
or
fcompp
rcr
mov
sbb
xchg
dec
js
fldenv
inc
je
cld
ins
or
outs
(bad)
lods
(bad)
push
mov
and
cld
adc
or
sbb
or
gs
add
xchg
in
addr16
jle
or
xlat
mov
icebp
xchg
push
lahf
pop
daa
jmp
pop
clc
(bad)
dec
frstor
dec
cmp
loope
cli
mov
pop
jne
push
mov
sbb
retf
or
loop
leave
(bad)
scas
push
cmps
sub
(bad)
sub
adc
jp
push
sub
test
pop
mov
dec
dec
pushf
jmp
scas
iret
ficom
(bad)
xor
int
(bad)
repnz
jae
dec
xlat
mov
dec
outs
xchg
outs
dec
and
sbb
sub
out
mov
es
(bad)
jg
imul
adc
and
fs
stc
int
call
js
inc
data16
sbb
pop
pop
int
ror
ins
mov
jno
xchg
fdivr
ss
mov
xchg
ins
outs
mov
mov
mov
sub
jmp
loop
mov
sti
mov
or
rol
retf
sbb
push
xor
push
or
mov
lds
push
lods
js
fld
xor
cli
fucom
data16
mov
leave
mov
jno
add
int
outs
mov
icebp
sub
mov
pushf
dec
daa
jnp
(bad)
or
repnz
cmc
imul
jp
push
push
xor
pop
cmp
lock
push
sbb
jae
cwde
not
shl
and
pop
sbb
stos
stos
shl
or
cmc
cli
cmp
xor
call
aam
xchg
out
pusha
mov
and
mov
xchg
push
and
mov
sti
out
jecxz
jle
xchg
mov
sub
jecxz
daa
jo
pushf
mov
popf
and
pop
repz
jbe
or
(bad)
and
into
add
xor
mov
(bad)
xchg
dec
cmp
cmp
(bad)
mov
sbb
xor
in
popa
repnz
or
jo
stos
test
fs
loope
mov
int3
xchg
dec
sar
cmp
mov
mov
loop
push
dec
js
mov
push
data16
fwait
lahf
jae
jmp
neg
cdq
shl
adc
pushf
jmp
jl
xchg
stos
mov
into
movs
jge
jo
jle
xchg
addr16
scas
push
daa
sahf
xor
and
push
popa
or
mov
or
dec
jno
or
cmp
jecxz
inc
adc
mov
scas
jno
inc
xchg
bts
xchg
cmc
and
add
es
loopne
mov
dec
cmp
jae
ficom
add
aam
ror
inc
sbb
push
repz
fistp
push
jle
ja
push
xchg
pop
scas
dec
fistp
pop
pop
cmps
aaa
maskmovq
not
mov
dec
xor
sbb
aam
xor
test
data16
pop
or
test
adc
dec
das
outs
push
sub
xchg
pop
mov
adc
mov
call
mov
cld
jmp
sub
sub
pop
es
(bad)
jmp
leave
and
fs
cmp
pop
test
leave
mov
mov
xor
jns
dec
jbe
and
sbb
jno
retf
jno
jae
fsub
out
mov
test
iret
jmp
and
sbb
stc
pop
cmp
dec
fbld
add
sub
aad
add
mov
mov
xchg
retf
clc
lahf
mov
sub
outs
loopne
mov
rcr
mov
pop
push
mov
xchg
aas
xor
inc
aaa
or
out
fwait
out
xchg
lea
cmps
pop
push
out
stos
scas
xchg
inc
jb
movs
les
aaa
arpl
and
push
imul
adc
jnp
shl
mov
pushf
arpl
xor
mov
or
loop
loopne
aad
xchg
mov
cmc
fidivr
push
retf
push
loope
push
cmps
cmp
jmp
int
pusha
std
dec
nop
js
retf
loop
pop
sbb
stos
jns
pop
and
ficomp
repz
(bad)
out
(bad)
dec
test
ret
dec
data16
or
xor
hlt
jbe
push
jp
cld
mov
rol
pop
inc
mov
pop
mov
les
das
inc
jmp
fisubr
cmp
cwde
mov
pop
rcr
jmp
and
push
add
fdiv
jmp
popa
cmovnp
in
inc
cmp
cld
in
imul
in
test
push
sbb
(bad)
(bad)
scas
ins
mov
in
xchg
cmp
and
clc
pop
js
jnp
in
dec
cmps
mov
jne
inc
(bad)
sti
mov
mov
mov
cdq
ins
leave
cmp
sub
bnd
or
mov
sub
ins
mov
xchg
cmps
push
loopne
push
(bad)
mov
cwde
push
adc
push
pop
xor
out
sbb
inc
iret
cmps
adc
and
mov
inc
arpl
ret
pop
paddusb
loop
cs
add
fldenv
movs
(bad)
js
add
mov
mov
push
sbb
es
and
ins
mov
cmc
mov
adc
sub
push
and
mov
inc
push
pop
shl
fs
ins
ds
cmp
mov
push
inc
mov
jae
in
fsubr
mov
retf
pusha
adc
dec
mov
lods
add
fs
push
aad
sbb
ret
pusha
xchg
clc
adc
mov
inc
or
mov
jo
scas
ins
xor
cmp
mov
sbb
or
loop
sub
pop
hlt
popa
aaa
push
jl
inc
(bad)
adc
fidivr
jb
fiadd
pop
and
aas
pop
aam
jno
inc
or
in
mov
fdivr
sbb
loop
test
push
aas
dec
(bad)
mov
nop
lods
jbe
pushf
call
push
sti
(bad)
xor
xchg
repnz
lock
push
aaa
inc
ins
jge
test
leave
xchg
iret
push
xchg
ror
aaa
push
mov
add
add
or
push
add
add
add
add
mov
add
fs
add
add
inc
push
or
xor
sub
icebp
ins
xor
add
add
inc
cmp
gs
pop
push
outs
jne
inc
jb
arpl
inc
outs
arpl
outs
je
pop
push
imul
je
imul
pop
push
jb
push
arpl
push
imul
jo
ins
imul
cmp
outs
outs
ja
inc
jo
ins
imul
cmp
outs
pop
push
gs
gs
jae
pop
inc
jb
jo
outs
dec
bound
jae
popa
je
jb
dec
jne
jo
je
push
imul
jo
ins
imul
cmp
jo
bound
add
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
xor
cmp
add
add
add
sbb
add
jle
add
sbb
add
je
imul
add
cmp
add
add
add
inc
push
dec
inc
add
add
cmp
add
inc
ins
outs
bound
add
pop
inc
add
jo
add
and
add
add
add
add
add
mov
add
cli
add
add
add
add
add
jg
add
adc
add
sbb
add
imul
add
rol
add
push
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
or
jae
cmp
or
jg
cmp
or
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
popa
add
add
popa
add
add
popa
add
add
popa
add
add
popa
add
add
popa
add
add
popa
add
add
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fiadd
adc
je
mov
adc
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
push
add
popa
add
add
push
add
add
add
push
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
es
push
add
push
add
push
add
popa
add
add
popa
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
popa
add
add
add
mov
(bad)
push
push
add
push
(bad)
push
push
add
pop
(bad)
push
push
add
pop
(bad)
push
push
add
(bad)
push
push
add
(bad)
push
push
add
mov
push
add
add
add
pop
fld
push
add
pop
popa
add
add
or
or
add
or
or
add
and
push
add
jnp
push
add
add
add
add
ror
or
add
or
or
add
or
push
add
or
push
add
or
push
add
or
push
add
or
push
add
add
or
add
or
add
or
add
dec
add
add
add
add
add
add
dec
add
add
dec
add
add
dec
add
add
add
cdq
or
add
add
add
add
or
add
or
add
add
or
add
add
add
add
add
add
or
or
add
add
add
add
pop
add
add
add
or
or
add
add
add
add
add
add
sbb
add
add
add
add
sbb
add
or
add
add
or
add
add
or
add
add
add
add
or
add
add
add
add
or
or
add
add
add
or
or
add
add
add
or
or
add
add
add
or
add
add
add
add
sbb
add
add
add
add
add
add
or
add
add
or
push
or
je
dec
add
add
add
add
add
add
adc
adc
rol
add
add
adc
add
add
adc
add
add
aad
adc
retf
add
add
pop
sbb
adc
inc
sbb
add
add
xor
adc
pop
sbb
add
add
add
add
sbb
add
add
aad
xor
jae
push
add
add
add
and
add
add
sbb
add
add
add
sbb
or
add
add
adc
(bad)
or
add
add
and
add
add
or
add
add
and
add
add
add
add
and
add
add
sbb
or
add
add
add
add
xchg
sbb
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
adc
mov
add
and
add
add
or
or
add
add
add
adc
add
imul
add
add
adc
es
outs
add
add
and
add
add
or
add
add
add
add
or
js
or
ins
and
add
add
sbb
or
add
add
add
or
push
test
or
test
add
add
push
or
jp
and
add
add
add
nop
add
add
add
add
add
add
add
add
ror
mov
and
inc
add
shld
or
test
add
add
add
pop
add
les
inc
add
adc
and
push
sbb
or
add
lock
inc
add
push
add
adc
add
add
inc
add
shld
or
add
add
add
add
add
or
scas
add
add
add
add
nop
add
add
add
add
add
add
sbb
or
add
add
add
xor
mov
verw
add
add
push
sbb
or
add
add
add
add
inc
add
adc
add
add
add
add
add
adc
add
add
sub
add
add
pop
adc
add
add
sub
add
add
adc
add
add
add
add
enter
adc
pusha
sub
add
add
out
adc
add
add
add
add
adc
cld
add
add
add
cmp
add
adc
pushf
sub
add
add
pusha
adc
add
add
add
xchg
lgdtd
add
add
add
adc
add
add
add
add
and
sbb
sub
add
add
add
and
sbb
add
add
add
and
add
sub
add
add
add
adc
add
add
add
add
adc
add
add
add
add
and
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
add
and
adc
add
add
add
and
add
add
sub
add
add
add
pop
add
add
add
add
and
adc
hlt
sub
add
add
add
adc
adc
add
add
add
adc
cwde
sub
add
add
add
outs
add
js
add
add
push
add
jbe
push
add
sub
push
add
jge
push
add
add
add
push
add
add
add
add
xor
add
add
push
add
add
push
add
push
lods
add
xor
add
add
push
add
push
mov
jae
lods
xor
add
add
add
push
rol
add
add
add
push
add
push
enter
adc
add
add
push
add
push
iret
add
or
add
add
push
add
pop
xlat
add
add
add
add
add
xor
add
add
add
pop
out
mov
cmp
add
add
push
add
pop
out
add
add
add
add
pop
jbe
xchg
add
xor
push
add
add
add
push
add
std
add
add
add
add
add
call
add
add
add
add
add
add
add
adc
push
sbb
cmp
add
add
or
sbb
add
add
add
or
sbb
add
add
add
sbb
add
add
add
sbb
or
add
add
add
add
add
add
add
or
add
cmp
add
add
or
add
add
add
add
add
xchg
ror
add
add
xchg
add
sbb
movs
add
xchg
sbb
add
add
add
xchg
ror
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
or
add
add
xchg
add
add
add
add
or
add
add
add
add
xchg
add
add
add
or
add
add
add
add
sldt
add
ins
sldt
add
mov
add
add
(bad)
add
add
(bad)
add
add
mov
add
add
mov
add
add
adc
add
add
add
add
add
add
adc
add
add
adc
add
add
adc
add
add
add
add
mov
add
add
nop
adc
add
add
add
add
add
adc
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
outs
adc
add
add
add
adc
add
add
add
add
add
outs
adc
add
add
add
adc
add
add
add
add
add
outs
adc
add
add
add
adc
add
add
add
add
add
outs
adc
add
add
add
adc
add
add
add
add
add
outs
adc
add
add
add
adc
add
add
add
add
add
outs
adc
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
outs
adc
add
add
add
adc
add
add
add
add
add
pop
push
add
add
adc
add
add
and
add
add
pop
push
add
add
adc
add
add
dec
push
add
add
pop
push
add
add
adc
add
add
imul
add
add
add
add
adc
mov
add
add
xchg
push
add
add
adc
add
add
add
inc
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
pop
push
add
add
adc
jmp
push
add
add
adc
xchg
push
add
add
pop
push
add
add
adc
xchg
push
adc
add
imul
add
add
push
add
add
adc
xchg
push
adc
add
imul
add
add
push
add
add
adc
xchg
push
adc
add
imul
add
add
push
add
add
adc
xchg
push
adc
add
imul
add
add
push
add
add
adc
sbb
add
add
pop
push
add
add
adc
imul
add
add
push
add
add
adc
imul
add
add
push
add
add
adc
imul
add
add
push
add
add
adc
xchg
push
add
add
xchg
add
add
add
add
add
sbb
add
add
add
jmp
add
add
in
or
add
add
or
add
add
add
add
add
add
add
or
add
or
add
add
add
ror
add
add
or
or
add
add
or
add
ror
add
add
or
add
add
or
add
ror
add
ror
add
add
add
or
add
add
or
add
ror
add
ror
add
ror
add
ror
add
ror
add
ror
add
add
add
or
add
add
mov
and
popa
add
or
add
add
or
add
add
or
add
fld
sub
movs
sbb
add
add
add
sbb
add
test
add
inc
add
or
add
ror
add
push
xchg
add
or
push
mov
push
mov
push
inc
add
and
sbb
ror
add
add
add
add
add
add
add
sbb
iret
sbb
fstp
loopne
jb
sub
stc
sbb
ror
add
ror
add
ror
add
ror
add
ror
add
xor
mov
adc
xor
mov
sbb
xor
mov
and
xor
mov
sub
xor
mov
test
add
push
push
add
aad
jmp
add
xor
fiadd
add
ror
add
add
or
add
add
push
cdq
add
lock
inc
add
test
add
std
push
leave
add
scas
add
add
or
pop
jmp
pop
icebp
add
adc
add
add
add
push
add
add
shld
cmp
or
scas
add
adc
mov
leave
add
or
add
add
or
push
leave
add
adc
add
add
adc
add
add
or
mov
ror
add
add
or
add
add
or
add
add
or
add
add
add
pop
cdq
add
push
imul
add
push
and
test
pop
cdq
add
push
jb
cdq
add
push
jle
add
icebp
add
pop
jns
icebp
add
pop
fld
loope
mov
fld
jns
ror
pop
cdq
add
add
pop
and
mov
ror
pop
xchg
add
pop
call
pop
cdq
add
test
cdq
add
lods
pop
cdq
add
mov
leave
add
add
add
pop
mov
mov
enter
lods
pop
into
pop
leave
add
add
pop
fadd
leave
add
pop
fld
leave
add
pop
fld
leave
add
pop
jecxz
leave
add
pop
and
cdq
add
and
add
add
pop
mov
xor
inc
pop
cmp
ror
add
add
imul
and
imul
stc
add
or
leave
add
or
add
add
or
add
or
add
dec
or
add
sbb
jge
push
or
test
adc
imul
xor
popf
and
xchg
add
add
add
sbb
stos
and
or
add
add
add
and
or
add
sbb
lds
mov
sub
leave
and
and
mov
loop
rol
stc
add
and
and
push
add
and
cdq
add
or
sub
adc
imul
pop
add
add
and
push
and
cmp
pop
add
add
and
inc
add
jle
adc
ror
push
sub
popa
and
and
xor
jae
cdq
or
add
lea
movs
or
add
add
add
add
or
sub
(bad)
sbb
mov
lds
icebp
add
add
ror
mov
shl
or
pop
and
and
enter
stc
add
or
add
add
and
and
and
and
or
add
and
and
repnz
or
add
and
add
mov
add
add
and
and
or
add
xor
and
push
and
and
adc
ror
or
add
or
add
add
or
or
add
or
add
or
add
adc
sub
fstp
ror
add
add
fadd
or
jno
mov
or
test
mov
or
popf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
cs
add
add
and
add
add
add
add
cs
add
inc
add
add
inc
add
add
add
add
push
add
add
cmp
jno
pusha
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
ret
add
jno
ret
add
mov
pop
add
add
add
add
add
imul
add
add
add
add
and
adc
jno
and
sub
mov
add
add
add
jno
popa
add
add
arpl
arpl
jno
arpl
inc
add
arpl
dec
add
arpl
pop
add
arpl
adc
jno
add
add
add
add
add
add
add
add
jno
mov
add
add
add
add
add
add
rol
add
add
jmp
add
add
add
and
xor
jno
inc
add
add
pusha
add
add
add
rol
add
loopne
xor
jno
add
sub
mov
add
add
add
add
add
add
add
add
rol
add
rol
add
add
loopne
sub
mov
add
add
and
add
inc
add
add
pusha
add
add
pusha
add
add
add
rol
jno
loopne
and
jno
inc
or
add
add
or
xor
push
push
push
push
stos
push
scas
push
mov
mov
pop
adc
pop
sub
sub
inc
pop
call
pop
cli
pop
add
push
or
adc
xor
pop
or
jb
or
or
or
or
or
or
or
or
inc
or
jb
mov
nop
or
or
or
push
add
add
add
add
add
add
add
add
add
or
push
add
add
sbb
add
add
sbb
add
add
sbb
sbb
add
add
cmp
add
mov
push
add
add
add
sbb
add
add
sbb
add
adc
add
add
sbb
add
add
push
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
sbb
add
push
add
add
add
sbb
add
pop
add
add
add
add
push
test
mov
xchg
push
cdq
push
into
push
xor
cmp
inc
add
movs
sbb
add
arpl
mov
add
inc
add
xchg
adc
add
imul
sbb
add
ins
add
add
inc
add
jle
add
inc
add
jle
add
inc
add
int3
sbb
add
jne
int3
sbb
add
ja
int3
sbb
add
jnp
jle
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
popa
add
add
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
sub
add
add
add
add
adc
inc
add
add
add
inc
add
sub
mov
push
xchg
add
push
xchg
add
pop
add
in
add
in
add
add
outs
outs
ja
inc
jo
ins
imul
cmp
push
imul
jo
ins
imul
cmp
gs
add
arpl
ins
imul
outs
jae
data16
push
imul
jae
arpl
push
jns
je
ins
cs
imul
inc
outs
jb
jae
push
jns
je
ins
add
jae
gs
cs
jb
ja
outs
add
jb
gs
xor
add
xor
cs
ins
add
outs
outs
ja
inc
jo
ins
imul
cmp
add
je
outs
je
arpl
imul
add
arpl
jae
data16
push
imul
jae
arpl
inc
jo
ins
imul
push
gs
imul
jne
outs
ja
inc
jbe
outs
je
popa
outs
fs
gs
push
push
ja
dec
outs
fs
gs
push
imul
outs
jb
jae
jo
ins
imul
inc
popa
jae
add
imul
outs
gs
je
fs
je
jb
bound
add
arpl
jae
data16
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
push
arpl
outs
ja
outs
outs
je
outs
ins
add
outs
push
arpl
je
add
popa
outs
fs
jb
dec
outs
fs
gs
je
jb
bound
add
imul
gs
imul
jo
je
jb
dec
imul
je
push
imul
jae
arpl
inc
gs
arpl
add
fs
outs
fs
gs
popa
ins
gs
je
jb
bound
add
je
jb
arpl
outs
add
addr16
outs
js
gs
ins
je
dec
jae
inc
outs
js
je
ins
add
inc
jb
jne
inc
outs
ins
ins
arpl
outs
inc
je
jb
bound
add
jb
outs
addr16
inc
arpl
popa
je
jb
inc
jo
inc
outs
ins
popa
imul
ins
outs
je
js
gs
imul
popa
jns
inc
je
jb
bound
add
je
outs
outs
jbe
jb
gs
inc
outs
outs
ins
gs
outs
add
je
add
popa
jb
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
dec
popa
jae
je
bound
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
ins
jo
outs
outs
je
push
jns
je
ins
cs
outs
ins
jo
outs
outs
je
outs
fs
add
ins
jo
outs
outs
je
gs
jne
arpl
popa
outs
popa
addr16
dec
gs
jo
gs
outs
jb
inc
je
jb
bound
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
cs
gs
outs
add
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
outs
outs
je
imul
jo
imul
push
gs
imul
add
jae
gs
cs
outs
outs
imul
je
outs
outs
add
je
imul
add
outs
jbe
jb
add
gs
imul
jne
addr16
bound
je
jb
bound
add
jae
gs
cs
imul
imul
jne
imul
jae
inc
bound
addr16
imul
jb
bound
add
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jne
addr16
je
jo
push
push
imul
jb
arpl
jae
inc
outs
jne
ins
add
outs
je
inc
outs
outs
je
je
ins
add
popa
jo
imul
add
outs
outs
add
popa
add
imul
add
jp
inc
add
outs
je
jb
jae
inc
jbe
outs
je
popa
outs
fs
gs
inc
js
gs
imul
je
jb
dec
outs
outs
add
jae
gs
cs
ins
outs
bound
imul
add
ins
bound
push
je
ins
gs
dec
inc
imul
ins
add
je
xor
dec
outs
je
xor
dec
outs
je
je
add
jbe
ins
imul
imul
jo
imul
jo
gs
imul
add
jae
gs
cs
dec
cs
outs
ins
jo
gs
imul
ins
popa
je
push
je
gs
ins
add
ins
outs
jb
push
je
gs
ins
add
jae
gs
cs
dec
add
jb
popa
ins
add
jb
popa
ins
push
jb
je
jb
dec
popa
je
add
push
arpl
jae
gs
bound
push
jns
je
ins
cs
gs
arpl
outs
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
imul
outs
outs
inc
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
jb
fs
popa
jb
inc
je
jb
bound
add
addr16
outs
jbe
arpl
imul
jo
imul
outs
ins
jbe
inc
jbe
outs
je
jb
jae
push
gs
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
push
gs
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
gs
jne
arpl
add
arpl
jae
fs
push
push
gs
jns
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
outs
je
ins
gs
gs
jo
jb
add
jo
jb
jae
dec
ins
fs
jae
inc
je
jb
bound
add
ins
push
imul
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
imul
jne
add
je
je
jb
bound
add
addr16
jb
ins
gs
jb
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
gs
imul
push
jne
je
ins
gs
jns
gs
popa
outs
fs
add
inc
jb
jo
outs
push
gs
imul
imul
je
ins
cs
arpl
imul
je
addr16
jo
jns
dec
inc
jb
jo
outs
push
jb
outs
jae
outs
jb
add
ins
ins
gs
imul
imul
je
jb
je
arpl
outs
inc
js
gs
imul
je
ins
cs
arpl
imul
ins
add
inc
push
push
inc
je
jb
bound
add
jb
outs
add
arpl
imul
je
ins
cs
gs
add
inc
cmp
arpl
imul
imul
je
ins
cs
push
imul
gs
fs
je
je
arpl
je
imul
jns
add
outs
je
add
outs
je
xor
push
outs
imul
arpl
imul
outs
push
arpl
gs
outs
fs
je
outs
outs
inc
popa
jae
add
arpl
outs
js
inc
outs
outs
je
imul
je
outs
ins
add
outs
je
outs
ins
add
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
jb
outs
jb
inc
jne
jae
jb
add
ins
outs
addr16
gs
ins
je
inc
outs
arpl
je
ins
add
jb
add
jb
inc
outs
jb
gs
je
ins
add
popa
addr16
popa
jns
jne
add
gs
add
jae
popa
addr16
outs
js
push
jo
imul
js
inc
outs
js
cmp
outs
fs
gs
xor
xor
cmp
cmp
xor
data16
fs
xor
bound
add
inc
jae
gs
bound
outs
outs
inc
je
jb
bound
add
popa
xor
cmp
xor
xor
ss
gs
xor
xor
xor
xor
xor
cmp
cmp
xor
xor
cmp
cmp
xor
add
aaa
gs
aaa
xor
xor
xor
xor
data16
cmp
cmp
arpl
xor
bound
popa
xor
arpl
arpl
xor
cmp
cmp
gs
data16
arpl
aaa
cmp
popa
popa
xor
xor
xor
cmp
xor
gs
popa
xor
xor
cmp
xor
arpl
ss
cmp
xor
xor
bound
cmp
xor
xor
aaa
pushaw
xor
inc
outs
jb
xor
arpl
xor
xor
arpl
xor
xor
xor
xor
ss
arpl
arpl
dec
jns
gs
imul
outs
outs
ja
inc
jo
ins
imul
cmp
dec
jns
arpl
xor
xor
xor
cmp
cmp
cmp
arpl
xor
bound
aaa
xor
cmp
add
cmp
cmp
arpl
xor
cmp
popa
popa
popaw
xor
xor
arpl
aaa
add
xor
xor
popa
xor
bound
cmp
arpl
ss
xor
xor
arpl
aaa
add
popa
xor
popa
arpl
xor
data16
bound
xor
xor
add
arpl
outs
jb
arpl
add
xor
xor
bound
fs
gs
data16
bound
arpl
add
xor
xor
arpl
bound
arpl
xor
xor
xor
aaa
gs
add
inc
jb
popa
je
dec
popa
imul
jae
jb
arpl
xor
xor
cmp
xor
xor
fs
xor
arpl
add
xor
bound
xor
bound
cmp
popa
ss
xor
cmp
xor
arpl
fs
xor
cmp
xor
popa
xor
xor
cmp
cmp
aaa
xor
bound
popa
add
aaa
cmp
xor
xor
data16
ss
popa
cmp
arpl
arpl
bound
aaa
popa
fs
xor
arpl
xor
xor
xor
cmp
arpl
cmp
bound
xor
aaa
data16
xor
arpl
arpl
xor
cmp
xor
popa
xor
cmp
ss
xor
xor
arpl
xor
cmp
xor
cmp
xor
gs
data16
data16
data16
xor
xor
xor
cmp
cmp
xor
xor
xor
cmp
popa
cmp
cmp
arpl
add
popa
xor
xor
aaa
bound
xor
aaa
bound
cmp
aaa
cmp
cmp
arpl
xor
xor
cmp
xor
xor
xor
cmp
ss
xor
cmp
xor
arpl
xor
xor
xor
xor
arpl
data16
xor
arpl
fs
xor
arpl
xor
cmp
xor
fs
xor
cmp
xor
add
popa
xor
bound
cmp
xor
xor
gs
xor
bound
popaw
xor
xor
addr16
arpl
cmp
arpl
xor
xor
xor
bound
xor
arpl
xor
addr16
arpl
ss
xor
aaa
xor
popa
arpl
cmp
xor
xor
gs
je
arpl
xor
popa
xor
bound
xor
data16
xor
arpl
popa
bound
popa
arpl
xor
cmp
addr16
arpl
fs
bound
xor
xor
xor
xor
xor
fs
arpl
add
je
arpl
popa
fs
xor
xor
xor
xor
popa
xor
xor
cmp
arpl
xor
add
aaa
xor
popa
gs
xor
gs
xor
xor
xor
add
xor
data16
xor
xor
gs
cmp
aaa
xor
xor
cmp
popa
xor
bound
addr16
arpl
bound
popa
xor
data16
xor
ss
xor
cmp
bound
fs
jae
je
arpl
bound
popa
xor
data16
xor
ss
xor
cmp
bound
fs
arpl
cmp
xor
bound
xor
cmp
xor
xor
xor
xor
arpl
arpl
popa
cmp
xor
cmp
cmp
data16
xor
xor
arpl
cmp
xor
arpl
xor
popa
aaa
aaa
xor
xor
bound
xor
aaa
cmp
xor
xor
aaa
xor
add
fs
xor
xor
cmp
aaa
cmp
bound
xor
cmp
arpl
arpl
gs
xor
data16
aaa
xor
xor
cmp
fs
xor
cmp
xor
inc
jno
popa
ins
jae
outs
add
je
popa
jae
inc
outs
fs
cmp
bound
xor
xor
data16
arpl
arpl
xor
cmp
xor
cmp
xor
push
outs
push
je
imul
popaw
cmp
aaa
popa
popa
xor
cmp
xor
xor
xor
xor
xor
cmp
addr16
arpl
xor
xor
xor
arpl
xor
xor
bound
xor
gs
add
popa
xor
cmp
xor
xor
xor
cmp
data16
aaa
aaa
popa
xor
xor
xor
arpl
xor
cmp
cmp
aaa
gs
fs
xor
xor
xor
xor
gs
add
popa
popaw
xor
xor
xor
xor
aaa
ss
xor
arpl
xor
fs
xor
arpl
gs
ss
cmp
xor
arpl
popa
bound
popa
popa
xor
xor
bound
arpl
popa
xor
arpl
bound
xor
arpl
xor
fs
arpl
arpl
xor
add
ss
cmp
cmp
xor
bound
arpl
xor
xor
arpl
xor
ss
inc
imul
imul
add
xor
arpl
xor
xor
cmp
xor
xor
bound
xor
xor
add
je
arpl
xor
aaa
aaa
xor
xor
fs
cmp
xor
aaa
gs
cmp
arpl
xor
jae
je
arpl
xor
aaa
aaa
xor
xor
fs
cmp
xor
aaa
gs
cmp
arpl
xor
arpl
xor
cmp
bound
bound
arpl
popa
bound
ss
popa
fs
cmp
xor
gs
arpl
xor
bound
ss
xor
xor
bound
xor
bound
arpl
bound
popa
bound
add
je
arpl
xor
bound
ss
xor
xor
bound
xor
bound
arpl
bound
popa
bound
add
je
arpl
bound
aaa
xor
xor
popa
xor
arpl
data16
xor
arpl
xor
jae
je
arpl
bound
aaa
xor
xor
popa
xor
arpl
data16
xor
arpl
xor
addr16
arpl
bound
xor
xor
xor
xor
xor
xor
gs
xor
add
je
arpl
bound
xor
xor
xor
xor
xor
xor
gs
xor
add
xor
bound
cmp
bound
ss
xor
arpl
arpl
xor
cmp
arpl
xor
xor
arpl
cmp
fs
xor
aaa
xor
arpl
popa
ss
bound
bound
xor
xor
arpl
xor
arpl
xor
fs
xor
xor
arpl
add
xor
aaa
cmp
cmp
popa
xor
aaa
xor
cmp
data16
cmp
xor
add
aaa
xor
xor
arpl
xor
data16
arpl
xor
xor
xor
bound
xor
arpl
arpl
xor
xor
xor
arpl
cmp
aaa
cmp
dec
jo
outs
push
gs
inc
imul
jb
imul
jo
outs
add
jb
jne
ins
inc
ins
ins
outs
arpl
add
jb
arpl
jae
ins
jo
fs
jae
add
imul
ins
ins
outs
arpl
imul
add
push
jb
je
arpl
imul
jb
je
arpl
add
dec
gs
jb
je
arpl
jo
ins
dec
ins
fs
jb
je
arpl
xor
data16
xor
fs
xor
bound
cmp
xor
aaa
xor
data16
xor
xor
cmp
bound
cmp
arpl
xor
xor
xor
xor
cmp
bound
xor
arpl
xor
xor
xor
xor
bound
cmp
cmp
xor
aaa
xor
add
arpl
cmp
xor
xor
data16
aaa
fs
arpl
cmp
xor
xor
xor
xor
arpl
xor
popa
xor
data16
arpl
xor
popa
xor
xor
xor
add
bound
arpl
popa
xor
cmp
cmp
arpl
xor
arpl
arpl
cmp
add
popa
xor
xor
xor
xor
xor
xor
xor
xor
bound
cmp
xor
arpl
cmp
cmp
xor
bound
bound
xor
xor
gs
aaa
add
xor
xor
arpl
popaw
xor
popa
popa
xor
xor
xor
add
xor
xor
data16
xor
popa
arpl
cmp
aaa
bound
popa
data16
arpl
arpl
xor
cmp
arpl
fs
cmp
bound
xor
cmp
xor
aaa
cmp
imul
jae
dec
gs
outs
jb
add
popa
jae
inc
fs
jae
add
jne
data16
outs
push
imul
jne
bound
dec
inc
jns
gs
jb
je
outs
add
cmp
popa
cmp
cmp
gs
xor
xor
xor
xor
xor
gs
xor
push
je
push
outs
inc
jns
gs
jb
popa
jns
push
gs
outs
jbe
push
jb
je
arpl
outs
add
outs
arpl
jae
popa
ins
add
fs
jae
dec
push
je
jb
add
jp
push
outs
push
gs
outs
jbe
push
jb
je
arpl
outs
dec
outs
inc
jns
gs
inc
ins
ins
outs
arpl
ins
add
jp
dec
inc
ins
ins
outs
arpl
imul
je
jae
push
gs
inc
ins
ins
outs
arpl
outs
jae
jp
add
imul
je
addr16
inc
fs
jae
add
data16
je
add
ins
jne
add
gs
add
popa
fs
dec
inc
dec
outs
je
addr16
push
jb
je
inc
dec
inc
inc
ins
outs
popa
je
push
gs
fs
dec
inc
inc
ins
outs
popa
je
push
jb
je
inc
dec
inc
dec
outs
outs
add
popa
fs
dec
inc
dec
outs
outs
add
imul
dec
dec
push
dec
jne
add
imul
jae
push
jb
je
dec
outs
je
addr16
push
jb
je
inc
ins
outs
popa
je
push
jb
je
dec
outs
outs
add
imul
add
imul
xor
push
gs
fs
outs
je
addr16
push
gs
fs
ins
outs
popa
je
push
gs
fs
outs
outs
add
imul
jae
add
cmp
xor
xor
xor
data16
popaw
xor
xor
fs
xor
add
bound
xor
xor
cmp
xor
bound
cmp
aaa
aaa
xor
bound
xor
arpl
cmp
fs
xor
fs
cmp
xor
data16
cmp
cmp
add
arpl
aaa
xor
cmp
data16
xor
xor
cmp
xor
add
gs
xor
data16
arpl
popa
xor
cmp
cmp
xor
xor
add
je
push
gs
jne
arpl
popa
outs
popa
addr16
addr16
inc
jne
je
jb
add
je
inc
jne
je
jb
add
ins
jne
add
popa
jne
je
outs
jae
popa
outs
arpl
popa
fs
popa
outs
fs
gs
popa
fs
popa
outs
fs
gs
outs
arpl
bound
arpl
jne
outs
push
popa
jbe
push
gs
imul
outs
fs
add
je
inc
gs
jne
je
addr16
push
gs
imul
cmp
xor
xor
aaa
popa
xor
popa
xor
cmp
xor
cmp
xor
arpl
data16
arpl
xor
xor
arpl
xor
arpl
xor
xor
cmp
bound
cmp
xor
xor
arpl
xor
bound
cmp
cmp
fs
bound
xor
gs
xor
xor
fs
xor
cmp
cmp
cmp
aaa
bound
xor
xor
xor
xor
add
bound
ss
bound
xor
cmp
xor
ss
add
xor
data16
xor
xor
cmp
bound
data16
cmp
popa
xor
aaa
add
bound
cmp
xor
cmp
xor
fs
fs
xor
xor
arpl
arpl
ss
aaa
xor
xor
xor
xor
cmp
gs
xor
xor
arpl
fs
xor
popa
cmp
xor
xor
xor
cmp
popa
popa
data16
bound
arpl
xor
fs
cmp
xor
gs
xor
xor
arpl
cmp
arpl
xor
data16
xor
xor
arpl
cmp
fs
aaa
xor
aaa
bound
xor
aaa
cmp
arpl
gs
popa
xor
arpl
cmp
bound
xor
cmp
arpl
xor
arpl
arpl
xor
cmp
aaa
arpl
cmp
arpl
ss
cmp
xor
cmp
xor
xor
add
cmp
bound
bound
xor
popaw
bound
xor
data16
xor
popa
xor
data16
arpl
arpl
aaa
arpl
aaa
cmp
aaa
aaa
xor
cmp
cmp
data16
fs
xor
data16
dec
jo
outs
push
jb
arpl
jae
inc
ins
outs
jae
dec
popa
outs
fs
add
push
popa
jae
dec
gs
inc
ins
ins
outs
arpl
push
gs
fs
jb
arpl
jae
gs
outs
jb
add
cmp
arpl
xor
xor
xor
bound
xor
arpl
xor
arpl
ss
xor
aaa
xor
popa
arpl
cmp
xor
xor
gs
xor
popa
xor
bound
xor
data16
xor
arpl
popa
bound
popa
arpl
xor
cmp
arpl
fs
bound
xor
xor
xor
xor
xor
fs
arpl
add
xor
xor
xor
xor
xor
popa
xor
xor
cmp
arpl
xor
add
xor
data16
xor
data16
xor
ss
xor
cmp
bound
fs
arpl
xor
xor
xor
arpl
xor
xor
bound
xor
gs
add
xor
aaa
aaa
xor
xor
fs
cmp
xor
aaa
gs
cmp
arpl
xor
arpl
xor
bound
ss
xor
xor
bound
xor
bound
arpl
bound
popa
bound
add
bound
aaa
xor
xor
popa
xor
arpl
data16
xor
arpl
xor
arpl
bound
xor
xor
xor
xor
xor
xor
gs
xor
add
ins
je
jb
add
popa
jne
je
push
gs
imul
arpl
xor
xor
xor
popaw
aaa
xor
xor
cmp
cmp
bound
bound
popa
add
je
dec
jae
imul
jae
popa
outs
arpl
jae
je
inc
outs
popa
bound
imul
jns
gs
jae
je
push
popa
jbe
dec
jns
gs
imul
js
je
jae
je
push
push
ja
push
je
ins
add
je
push
jae
inc
outs
ins
jo
je
bound
gs
push
outs
fs
outs
add
je
outs
ins
jo
je
bound
gs
push
outs
fs
outs
addr16
gs
jne
je
push
jne
add
je
dec
popa
imul
addr16
inc
jne
jb
outs
je
outs
ins
popa
imul
push
gs
jne
arpl
gs
ins
jbe
add
fs
inc
jae
gs
bound
gs
ins
jbe
add
je
js
arpl
imul
ins
bound
dec
outs
popa
add
je
dec
popa
ins
add
popa
jb
jae
imul
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
je
inc
jne
ins
dec
popa
ins
add
fs
data16
bound
jb
outs
add
outs
arpl
add
je
popa
outs
imul
jae
jne
arpl
popa
ins
gs
outs
jo
inc
jno
popa
ins
imul
dec
jae
imul
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
imul
inc
gs
gs
jne
arpl
je
imul
add
gs
je
dec
outs
jae
popa
outs
arpl
push
gs
jb
push
arpl
jb
jb
addr16
dec
outs
outs
gs
js
gs
imul
pop
dec
gs
popa
add
ins
outs
jbe
add
je
bound
arpl
ins
jne
add
fs
dec
outs
popa
add
jae
outs
fs
popa
jns
jne
add
je
inc
jne
outs
push
imul
pop
dec
outs
arpl
imul
pop
dec
popa
ins
add
je
push
imul
pop
push
popa
bound
fs
jae
je
push
jae
push
imul
jns
gs
popa
arpl
outs
ins
outs
jb
jae
je
inc
outs
arpl
jae
je
push
popa
bound
outs
jo
jae
je
inc
outs
outs
je
jae
je
push
gs
add
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
jae
je
inc
jne
outs
push
arpl
gs
outs
fs
je
bound
arpl
gs
inc
popa
arpl
jb
jne
fs
ins
popa
add
je
inc
popa
arpl
jb
jne
fs
ins
popa
addr16
popa
jns
jne
add
je
inc
ins
imul
add
je
inc
outs
outs
je
outs
ins
jae
jae
je
inc
jne
jae
jb
jae
je
inc
outs
jb
inc
outs
jb
gs
je
ins
add
je
dec
arpl
add
je
dec
popa
js
ins
imul
jae
je
dec
imul
inc
outs
js
jae
je
dec
jo
arpl
jns
push
gs
ins
gs
popa
jns
jne
add
jb
outs
jb
dec
popa
jns
jne
add
ins
outs
jbe
pop
inc
push
fs
push
add
fs
inc
push
fs
push
add
je
jns
gs
inc
gs
jb
arpl
jae
jae
jns
popa
ins
add
je
dec
popa
outs
fs
add
pop
inc
js
ins
imul
jb
add
addr16
outs
js
inc
ins
gs
jb
jb
push
arpl
jb
jb
addr16
dec
add
jne
add
add
add
ins
add
fs
imul
popa
arpl
push
push
jae
add
je
dec
outs
addr16
add
pop
dec
outs
gs
popa
ins
imul
inc
push
add
je
push
gs
add
data16
outs
arpl
jno
popa
ins
jae
addr16
inc
jae
gs
bound
push
jns
arpl
outs
outs
imul
je
push
popa
jbe
dec
jns
gs
imul
js
je
push
popa
jbe
add
arpl
outs
jb
jns
arpl
imul
popa
ins
jne
push
jns
add
je
jb
popa
fs
push
push
ja
add
imul
popa
jae
ss
je
imul
pop
push
push
inc
cmp
inc
gs
je
imul
je
add
je
push
outs
imul
outs
je
jb
add
je
inc
push
push
popa
jb
add
jbe
jb
add
popa
fs
jns
add
popa
add
je
dec
push
add
je
dec
gs
jae
je
inc
popa
jo
arpl
jns
jae
je
push
outs
jae
je
outs
outs
add
gs
je
inc
arpl
jo
outs
jb
addr16
dec
outs
jo
je
ins
outs
arpl
imul
pop
dec
jne
jo
je
ins
outs
arpl
imul
pop
push
outs
jae
je
outs
outs
add
outs
jae
outs
jb
inc
ins
outs
arpl
push
jb
je
add
outs
jae
outs
jb
inc
imul
arpl
push
outs
inc
jb
popa
jns
addr16
dec
outs
ja
outs
jo
inc
jb
popa
je
jb
push
push
sar
in
retf
dec
mov
cmp
add
mov
pop
push
sbb
mov
mov
pop
jg
aad
cmp
add
add
and
add
push
add
add
push
add
adc
adc
inc
push
add
push
adc
adc
adc
pop
push
adc
or
push
adc
adc
push
adc
sbb
push
adc
and
add
adc
add
or
add
adc
add
sbb
add
adc
add
adc
add
adc
and
adc
add
sub
adc
add
add
add
xor
add
adc
add
add
sbb
and
or
test
add
adc
add
add
add
adc
add
stc
add
adc
xor
push
add
add
add
add
lds
and
add
add
cmp
adc
adc
add
cmp
xor
adc
or
or
add
add
or
add
adc
add
or
or
add
or
or
add
or
adc
or
add
or
adc
or
add
or
adc
or
add
add
and
sbb
add
or
push
and
or
or
or
push
add
or
add
add
add
and
or
or
and
add
or
or
add
or
or
and
add
or
or
add
or
or
and
add
or
push
and
add
or
pop
and
push
or
or
and
push
or
pop
and
push
or
or
and
push
or
or
and
add
or
push
and
or
or
push
and
or
or
push
add
add
or
pop
and
add
sbb
push
adc
sub
add
adc
adc
add
sub
push
adc
add
add
push
sbb
add
add
sbb
add
adc
add
sbb
push
or
adc
pop
add
sbb
pop
add
sbb
or
add
adc
add
add
add
or
arpl
outs
js
add
push
add
or
ins
imul
or
gs
inc
outs
js
add
or
add
dec
popa
bound
xor
add
add
add
add
add
push
and
add
or
add
add
sbb
add
dec
jns
gs
jo
popa
je
or
xor
xor
xor
xor
add
push
add
add
adc
add
or
cs
outs
ins
jo
je
jb
add
add
or
add
push
dec
jns
inc
jo
ins
imul
add
add
add
adc
add
dec
jns
push
jae
jb
add
add
sbb
add
or
cs
outs
jb
jae
add
add
and
add
push
dec
jns
push
bound
jb
imul
sub
adc
pop
add
sbb
jae
gs
cs
imul
inc
outs
jb
jae
inc
outs
jb
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
cs
jns
jb
push
arpl
outs
jb
jae
add
and
push
push
push
push
popa
add
xor
jns
je
ins
cs
bound
push
gs
imul
outs
je
arpl
jae
push
outs
popa
jo
je
jo
ins
imul
je
arpl
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
add
add
add
add
lds
stc
add
std
add
icebp
add
dec
add
jmp
push
jns
je
ins
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
add
xor
add
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
xor
xor
xor
xor
add
add
or
cs
gs
imul
add
adc
jo
jb
addr16
and
xor
xor
add
add
adc
outs
outs
ja
inc
jo
ins
imul
cmp
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
and
bound
aaa
arpl
cmp
sub
sub
sub
sub
cmp
gs
cmp
add
or
add
add
add
add
add
or
add
add
add
add
push
and
add
and
dec
inc
push
inc
jb
ins
gs
jb
sub
gs
imul
xor
adc
jb
ins
gs
jb
inc
imul
popa
ins
adc
dec
inc
push
and
popa
ins
gs
jb
and
xor
xor
xor
xor
xor
add
add
adc
add
add
add
push
push
and
add
and
and
adc
and
add
push
and
add
or
and
add
adc
add
and
sbb
add
push
and
adc
add
and
add
or
add
add
or
sbb
pop
add
adc
add
add
add
push
push
adc
adc
adc
or
adc
adc
adc
sbb
adc
and
add
adc
add
or
add
adc
add
sbb
pop
add
and
add
sub
add
sub
pop
add
add
adc
push
add
and
add
add
adc
push
add
push
push
sbb
add
add
add
add
add
add
add
and
and
adc
add
adc
add
pop
add
add
pop
add
add
add
add
add
add
test
add
add
add
adc
add
adc
add
add
add
and
add
and
pop
pop
adc
adc
adc
adc
adc
sbb
sbb
and
add
sub
add
adc
add
adc
and
add
and
push
or
add
add
push
and
add
cmp
or
and
add
sbb
and
add
cmp
add
or
and
add
sub
adc
adc
adc
add
adc
adc
add
or
and
add
add
and
pop
add
cmp
cmp
xor
adc
sysret
or
adc
xor
add
add
add
adc
or
xor
sbb
sbb
add
sbb
add
or
push
sbb
sbb
add
adc
or
add
sbb
or
add
and
or
push
or
or
adc
add
or
or
adc
push
or
or
adc
pop
or
sbb
or
push
pop
or
or
sbb
or
or
add
push
push
add
push
push
or
add
push
add
add
or
sbb
or
add
push
push
add
adc
add
push
push
push
or
add
xor
or
sbb
or
pop
add
xor
pop
sbb
or
or
or
push
or
sbb
or
or
push
or
sbb
or
push
pop
or
or
or
add
add
push
or
add
or
add
sbb
add
and
and
add
adc
adc
adc
push
pop
add
xor
add
add
sbb
add
add
add
or
add
xor
pop
add
sbb
add
push
add
cdq
pop
and
push
sbb
push
push
add
add
push
or
push
push
or
or
and
or
add
add
or
add
or
adc
sbb
add
adc
pop
add
add
adc
pop
or
cmp
add
sbb
or
or
sbb
add
or
and
add
or
add
or
or
add
or
and
add
and
sbb
or
and
add
adc
and
sbb
push
adc
push
add
add
push
add
popf
or
add
adc
add
add
push
add
push
add
add
add
add
add
cmp
xor
inc
add
add
add
sub
add
cmp
sub
add
add
add
add
xor
sub
add
aaa
add
xor
inc
add
add
cmp
cmp
inc
add
xor
and
adc
add
add
push
add
add
add
inc
add
add
add
xor
inc
add
arpl
inc
add
jo
pop
add
add
xor
popa
add
cmp
jne
dec
add
push
add
add
bound
ins
add
arpl
dec
add
jns
push
add
imul
add
cmp
add
bound
ins
add
arpl
imul
add
je
outs
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
jae
jae
add
bound
ins
add
and
daa
add
sub
add
and
arpl
jb
add
je
add
add
imul
and
popa
add
and
add
popa
add
add
je
imul
and
jbe
add
jae
imul
and
outs
add
and
inc
add
jns
jo
je
outs
add
bound
data16
jae
arpl
popa
add
add
and
popa
add
add
add
imul
and
jae
je
outs
add
and
ja
outs
add
imul
add
add
add
outs
add
add
pop
add
add
sub
add
jns
add
or
add
and
add
popa
add
add
je
imul
and
jo
add
imul
and
push
add
add
js
jo
imul
add
add
outs
add
add
add
and
popa
add
jo
ins
add
arpl
popa
add
add
outs
add
add
imul
and
outs
add
ja
and
add
imul
add
add
adc
add
sub
add
and
add
add
add
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
