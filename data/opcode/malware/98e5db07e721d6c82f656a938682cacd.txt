cmp
(bad)
call
in
call
mov
and
sti
sti
or
sub
sub
add
add
(bad)
fucomip
fs
mov
pop
ret
test
jne
xor
ret
mov
add
test
je
mov
adc
je
imul
jmp
mov
ret
mov
add
sbb
mov
mov
jp
les
mov
test
je
push
xchg
not
mov
add
push
sbb
clc
rep
push
cmps
sub
sub
xchg
xchg
and
fucomip
fidivr
add
push
mov
add
add
imul
inc
loope
(bad)
fnsave
test
push
mov
mov
(bad)
lock
pop
mov
pop
pop
test
dec
push
mov
xor
mov
stos
push
nop
mov
and
cmp
cmp
and
push
gs
or
inc
mov
push
pop
mov
pop
adc
cmp
mov
fist
push
out
out
aas
pop
push
mov
mov
mov
or
jne
cmp
pop
inc
xchg
cmp
push
in
in
sub
sbb
sbb
xor
je
inc
jo
iret
cmps
fs
push
push
test
dec
(bad)
inc
mov
add
adc
mov
dec
in
adc
or
addr16
fstp
rol
retf
test
add
shl
icebp
push
cld
dec
(bad)
jle
rol
add
add
add
cld
fucomip
mov
dec
es
je
and
push
push
je
jmp
lea
xchg
dec
sti
inc
jmp
ret
ret
or
std
cld
xchg
(bad)
aaa
xadd
loopne
sub
lea
inc
cld
add
lea
mov
add
pop
and
sub
ret
sbb
push
fistp
sbb
push
lea
or
mov
add
rep
dec
cmp
lock
(bad)
mov
in
test
test
inc
inc
inc
dec
add
fnstcw
or
jle
mov
adc
jne
cmp
sub
push
or
sbb
xor
lods
sbb
adc
mov
pop
ss
or
push
pop
movs
push
mov
shl
fucomp
adc
push
mov
pop
sbb
clc
pop
or
repnz
clc
ror
ror
inc
pop
xchg
sub
jl
inc
xor
repnz
xchg
retf
rcr
sub
add
jo
pop
add
mov
movs
stos
add
cmp
or
dec
shl
inc
pop
add
ins
fwait
nop
icebp
jbe
xchg
and
inc
dec
inc
push
and
dec
(bad)
jmp
dec
push
jb
je
arpl
imul
jg
push
and
dec
and
test
jne
push
mov
push
cmp
add
leave
jne
dec
lock
cmp
inc
ret
test
cmp
jne
or
shl
and
popa
adc
or
sbb
call
sti
cmp
jne
sub
add
jnp
xor
sar
rcl
inc
push
(bad)
mov
inc
jle
inc
push
jecxz
add
int3
cmps
pop
lods
aam
retf
les
mov
xchg
out
and
sub
(bad)
fdiv
or
rep
nop
movs
or
in
(bad)
sub
clc
mov
add
sbb
mov
hlt
mov
dec
in
in
xor
sub
je
push
or
cld
mov
int
jge
or
pop
lock
inc
(bad)
nop
add
test
add
push
pop
cli
pop
push
inc
call
adc
add
adc
out
adc
test
mov
rep
pop
xor
and
inc
push
movs
cmp
adc
call
jae
push
mov
pop
pop
and
aas
mov
ss
or
pop
sbb
sub
adc
ror
mov
hlt
test
shr
add
xchg
pop
or
jne
mov
xchg
sbb
out
fsubp
jnp
lock
in
push
push
jmp
cmp
adc
stos
mov
inc
call
out
lds
(bad)
in
adc
es
nop
cmps
cmp
sete
pop
loopne
push
xor
loopne
repnz
sub
popf
xor
adc
or
push
inc
jb
aam
jo
and
sub
mov
clc
push
fcom
pop
inc
push
or
jno
xchg
add
cmp
jno
jmp
lea
inc
push
mov
ror
fcomp
repz
dec
add
rcr
sbb
xchg
dec
dec
push
xchg
and
push
pop
pusha
push
xchg
and
inc
ret
stos
xor
cmp
xor
outs
push
inc
outs
mov
and
add
or
sub
and
adc
(bad)
imul
retf
xchg
mov
pop
lods
pop
adc
movs
jmp
stos
xchg
imul
add
addr16
ins
sar
shl
ret
cld
fninit
jnp
push
add
out
int3
adc
ins
sub
(bad)
call
bound
(bad)
jg
or
dec
jmp
add
nop
ret
nop
cs
out
push
sbb
sbb
int3
add
mov
push
mov
ret
add
mov
pop
or
(bad)
cmp
(bad)
cld
test
mov
inc
cmp
dec
pop
imul
fisttp
add
pop
ds
sbb
sub
lea
aas
mov
push
mov
in
out
jno
pop
pop
ret
aas
cld
jo
aas
imul
and
sub
lds
sbb
mov
call
out
rcr
pop
call
jnp
nop
imul
shl
cmp
mov
push
xchg
jge
dec
mov
mov
mov
add
outs
adc
aas
aaa
mov
iret
outs
or
inc
or
push
mov
lds
cvtdq2ps
dec
lahf
jo
mov
mov
xor
xchg
outs
jl
or
clc
or
pop
mov
retf
stc
in
push
cwde
and
mov
push
push
sub
daa
sbb
mov
lahf
cmp
rcr
inc
or
mov
push
mov
or
and
test
jne
cmps
push
out
fld
lahf
addr16
mov
adc
push
scas
jge
mov
pop
sbb
ret
or
jg
add
jbe
sub
cmp
lock
add
and
ja
cmp
dec
shl
adc
push
push
push
repz
sbb
jg
xor
pop
sub
test
push
xchg
and
mov
fisttp
dec
jecxz
inc
mov
lea
shl
jle
xchg
cli
mov
outs
cmp
pop
out
dec
jne
pop
or
cli
push
add
call
jle
call
clc
mov
cmp
jmp
retf
add
push
mov
pop
pop
out
(bad)
pop
or
dec
push
mov
in
and
dec
lock
dec
cmp
idiv
mov
push
lea
push
push
call
cwde
jp
mov
mov
scas
pusha
icebp
adc
jp
bts
stc
je
mov
je
inc
add
sbb
les
rcl
jmp
inc
aam
or
rcr
loopne
cmp
idiv
scas
push
dec
and
pop
inc
icebp
mov
adc
inc
inc
fucomi
mov
mov
push
mov
dec
mov
pusha
adc
sahf
sub
push
(bad)
hlt
adc
mov
dec
call
ret
sbb
js
mov
out
or
fdivr
sub
aad
mov
push
mov
aas
or
pop
push
push
sub
push
jp
inc
js
std
(bad)
cld
add
and
push
pop
inc
inc
mov
adc
jmp
aaa
mov
ja
jmp
inc
dec
jmp
dec
call
jmp
adc
sbb
xchg
loopne
pop
pop
pop
add
std
mov
push
push
push
add
(bad)
shl
xchg
cmp
je
cmp
xchg
cmp
push
push
test
push
jo
out
push
or
or
ds
add
test
push
rol
scas
mov
ror
push
pusha
or
mov
or
push
repnz
not
out
jmp
jne
cmp
mov
sbb
sub
xor
ror
test
jbe
mov
test
jge
fcmovnu
pop
push
es
movsx
jge
out
push
cs
cmp
sub
std
cmc
jb
mov
pop
mov
mov
clc
add
and
and
movs
adc
cwde
fld
(bad)
xchg
sub
cmp
pusha
add
fidiv
les
fwait
push
cmp
push
dec
push
popa
retf
xchg
jbe
add
sbb
mov
call
add
enter
jl
mov
add
adc
imul
fcmovu
clc
ja
je
cmp
push
add
test
call
jmp
mov
int
xor
adc
or
sub
rcl
fdivr
outs
jmp
cmps
xchg
adc
(bad)
scas
jne
mov
add
(bad)
ds
xchg
inc
test
push
sbb
pop
fbld
sbb
pop
pop
clc
jo
mov
aas
je
add
pop
lods
mov
loopne
fwait
push
sar
enter
mov
mov
lock
test
jbe
repz
adc
jo
or
fadd
sbb
lds
stos
lods
popa
mov
or
loop
jo
fsub
lock
jo
sub
cmc
pop
ja
je
call
add
add
loope
lock
mov
push
movsx
repnz
adc
push
das
mov
dec
adc
aam
jmp
dec
repz
call
push
sbb
imul
cmp
sbb
repnz
jmp
fldenv
call
bound
pop
call
cmps
dec
pop
mov
inc
push
popf
cdq
cmp
cmps
mov
push
cs
div
addr16
out
sub
pusha
adc
mov
idiv
stos
dec
pusha
push
sahf
push
jg
add
repz
and
add
add
add
jmp
xor
push
xchg
repnz
out
jne
movs
ret
add
pop
clc
push
sub
adc
cmp
adc
pop
and
mov
sbb
stos
lea
or
inc
push
ss
push
mov
into
or
add
add
sub
fldcw
ss
pmaxsw
mov
inc
xor
jg
popa
mov
ret
enter
ficomp
mov
dec
jecxz
adc
xor
rol
scas
fwait
pop
mov
add
cs
or
fld
pop
in
pusha
sbb
daa
std
std
jmp
clc
mov
inc
cmp
mov
jne
mov
push
cmp
je
in
or
or
and
cmc
fidivr
adc
in
jl
jg
sub
pop
mov
xor
mov
jmp
sub
fadd
retf
xlat
dec
cmp
rcl
cmp
ins
or
mov
or
mov
cmp
idiv
mov
call
bound
push
call
adc
rcr
sub
(bad)
pushf
mov
test
test
mov
ror
pop
loopne
mov
jecxz
ss
retf
cmps
shl
ja
cmps
inc
das
out
push
cmps
daa
xor
push
je
xor
aaa
xor
add
pop
and
sbb
ror
sbb
daa
or
push
sbb
or
clc
lea
stc
or
add
cmp
shr
xchg
mov
xchg
push
mov
fild
(bad)
add
push
sub
push
jbe
cmp
jo
xlat
stos
test
fsubp
and
jmp
push
xor
call
dec
addr16
bound
pop
jge
repz
out
xor
push
push
jns
clc
or
and
pop
jo
add
jle
push
mov
push
loop
xor
imul
dec
jne
adc
pop
mov
ret
or
je
and
pop
push
push
mov
call
das
cmp
adc
mov
cs
sti
call
jne
cmp
jbe
mov
dec
and
xor
mov
push
push
or
fwait
and
dec
or
push
sub
sub
mov
sbb
pop
jb
sub
jmp
push
mov
jae
cmp
fisubr
dec
and
cmp
pop
dec
dec
add
mov
inc
js
jno
push
js
push
push
and
loopne
jb
pop
lea
mov
cdq
nop
cmps
cmp
mov
pop
sahf
add
or
add
push
sahf
imul
cmp
cdq
fucomp
fld
mov
cs
retf
dec
jnp
xchg
push
ret
popa
inc
call
push
pop
adc
retfw
or
push
dec
and
inc
add
push
and
add
lds
jecxz
xor
cmp
out
aad
mov
xchg
packssdw
push
push
inc
mov
xor
clc
jb
push
xor
xchg
mov
imul
les
cmp
nop
cmp
xchg
(bad)
sub
and
int3
xor
adc
mov
mov
push
loop
jmp
fabs
sub
mov
call
std
mov
stc
push
cmps
je
and
add
adc
aas
fiadd
enter
add
jle
rcr
inc
sub
add
jmp
dec
dec
cmp
shl
mov
lock
mov
sahf
out
push
sbb
sub
iret
repz
in
cmp
mov
shl
test
dec
adc
sub
pop
and
add
or
loop
push
cmp
and
cmp
jbe
mov
add
jl
inc
xchg
sub
dec
inc
mov
mov
loope
pop
retf
and
sub
add
out
nop
push
fmul
mov
mov
add
pusha
fmul
mov
lds
add
sar
mov
dec
mov
shr
add
cdq
mov
push
es
ins
aas
cmp
mov
add
inc
cmp
push
adc
sub
fwait
push
pop
sub
sub
adc
sub
xchg
nop
and
cmp
ins
mov
sbb
push
push
jmp
out
jle
mov
jo
sbb
mov
add
std
frstor
inc
and
sbb
jbe
jl
mov
jle
pushf
push
sbb
or
xor
cmp
or
or
mov
aam
ret
aas
ss
add
jmp
ins
mov
outs
loope
sti
push
mov
jns
push
add
mov
bound
ror
inc
or
popa
popf
mov
or
sahf
sbb
mov
in
cmp
jmp
shl
mov
add
(bad)
dec
loope
mov
or
add
in
lahf
sub
jb
out
pop
mov
jmp
jbe
push
mov
mov
fs
loope
xlat
jne
mov
push
jge
mov
or
or
adc
dec
push
push
add
aad
xor
call
imul
mov
mov
call
repnz
jmp
push
(bad)
jmp
test
push
or
clc
push
mov
push
push
into
push
inc
lds
xor
sbb
repz
ja
int
or
and
jo
(bad)
pop
cmp
(bad)
inc
dec
scas
mov
jns
retf
sub
adc
lea
sbb
push
push
push
rol
cmp
push
pusha
dec
push
push
adc
push
push
iret
daa
or
ds
jmp
pusha
fld
or
pushf
push
xor
push
ret
dec
jle
add
push
jmp
movs
or
cmp
bound
mov
push
cmp
movs
outs
dec
xor
pop
sbb
sub
pop
fimul
pop
jne
dec
dec
add
call
pop
pop
add
mov
pop
outs
jae
mov
nop
call
and
or
or
pop
cli
mov
je
js
sbb
mov
add
adc
push
loopne
cdq
dec
in
or
shr
lahf
mov
or
push
mov
ret
cmps
mov
or
or
mov
jg
mov
dec
xor
pop
fsubr
pmaxsw
ret
mov
mov
jmp
mov
sbb
leave
stos
push
jns
loopne
pop
mov
or
enter
enter
inc
push
lods
imul
xchg
jl
lods
das
lods
mov
jb
leave
mov
jg
and
div
add
je
and
fcomp
lea
push
call
pushf
in
jl
std
pop
sub
ret
(bad)
cmc
jne
adc
xlat
scas
adc
sub
xchg
mov
add
jl
or
jg
adc
ret
mov
add
dec
in
sub
xchg
cmps
test
or
pop
mov
xor
add
sbb
adc
cli
loopne
add
repz
push
ins
call
test
or
xor
icebp
ret
aaa
in
push
fidivr
adc
or
lahf
test
leave
cmp
ror
xor
and
or
leave
jle
cmp
or
or
in
push
xor
(bad)
das
fmul
mov
movs
iret
or
(bad)
mov
jmp
or
call
inc
jo
xor
or
test
add
and
push
sahf
inc
adc
loop
je
ret
push
pop
adc
push
or
int3
jp
add
sbb
mov
in
in
pushf
out
xchg
xor
pop
push
test
data16
adc
test
mov
dec
ret
xchg
pop
jno
sbb
sub
add
add
pop
or
cmps
imul
adc
sti
cdq
cdq
or
sub
ret
and
scas
xchg
lods
dec
add
and
or
les
fimul
jl
cs
or
call
cmp
push
pop
js
lock
mov
inc
cmp
jbe
xor
(bad)
cmp
mov
mov
pop
inc
inc
sub
add
mov
add
cmp
dec
dec
add
mov
sub
jbe
sub
mov
inc
push
pop
sti
mov
pop
sahf
mov
pop
add
dec
or
adc
add
add
pop
gs
sub
pop
sbb
jo
cmp
(bad)
and
add
mov
mov
ret
xor
inc
into
cdq
xor
mov
hlt
test
jne
or
xchg
xchg
and
or
lods
jo
adc
fdiv
pop
add
loopne
stc
leave
scas
lock
outs
data16
pop
and
jne
xchg
add
or
cmp
sbb
sub
push
call
jno
int3
add
xchg
movs
rcr
std
fldcw
out
ja
mov
or
(bad)
cmp
jne
mov
push
push
jbe
std
imul
adc
mov
or
dec
or
aam
mov
cmp
mov
jge
add
test
ret
push
les
cs
pusha
push
test
pop
jne
rcr
cmp
xchg
xchg
push
lock
inc
cmp
push
pop
pop
pop
push
inc
lock
adc
mov
push
mov
jo
cmc
mov
cli
cmp
jb
adc
and
popf
push
pop
inc
xchg
sbb
inc
dec
push
outs
mov
hlt
cmp
jmp
loope
push
lock
sbb
in
jmp
push
pop
inc
or
and
sbb
adc
xor
popa
sbb
mov
jmp
leave
leave
adc
rcl
add
cld
sub
cmp
je
adc
loopne
(bad)
imul
push
xchg
adc
mov
or
or
add
jp
or
push
pop
fcmovbe
cmp
add
(bad)
mov
mov
xchg
push
lea
jne
pop
cmp
mov
add
push
mov
cs
pop
mov
je
lahf
rol
out
gs
add
add
cs
call
pop
cld
sub
push
xor
add
test
jnp
xchg
xor
ss
inc
lock
add
das
dec
lock
aam
sbb
das
add
push
mov
aaa
enter
mov
inc
push
sub
xchg
lea
push
dec
lock
scas
pop
pop
mov
and
adc
das
je
mov
push
dec
add
imul
movs
and
neg
dec
mov
outs
mov
pop
lea
push
push
ret
add
inc
lock
push
jecxz
add
in
lods
add
nop
adc
xor
or
aas
jb
dec
adc
in
xor
or
push
push
push
add
rcl
mov
int3
aaa
mov
sub
add
jb
mov
add
jno
cmp
cdq
and
popf
sbb
mov
mov
add
test
or
leave
push
enter
fmul
aaa
inc
dec
cdq
lock
enter
push
xor
in
std
fstp
sbb
pop
scas
push
push
cmp
setne
fwait
push
cmps
dec
inc
clc
cmp
je
mov
sub
jmp
cmp
mov
push
push
inc
dec
cmp
push
push
mov
sbb
outs
rol
mov
sbb
int
inc
dec
dec
push
pusha
add
pop
add
or
repz
mov
cs
jmp
pop
add
sub
loopne
jle
xchg
lock
or
push
mov
push
jge
or
and
loopne
ja
inc
add
adc
rcr
xor
inc
loope
sbb
add
pop
jmp
das
pop
jl
push
shl
aam
and
dec
sti
jmp
sbb
pop
loopne
sbb
pop
pop
cmp
scas
sbb
dec
fst
cmp
in
(bad)
sbb
cmp
je
cmp
jb
mov
push
push
mov
or
jae
add
adc
mov
mov
lea
outs
ins
imul
movs
add
movs
pop
sub
dec
and
jb
sbb
mov
push
pop
arpl
sbb
mov
repz
inc
ret
or
cld
sub
dec
xor
fs
test
pop
enter
xor
jo
xchg
sti
int
dec
add
xor
out
jo
dec
cld
call
dec
or
aad
hlt
mov
daa
and
inc
cmp
shr
mov
(bad)
adc
les
push
push
dec
fmul
in
cld
or
sub
and
or
or
imul
nop
sub
lea
ja
xor
cwde
aad
ss
xor
out
clc
jg
xchg
xchg
imul
test
lea
push
inc
mov
test
add
sub
dec
jne
mov
fs
mov
sbb
sbb
cmp
pop
mov
cmp
test
adc
cmps
add
test
pushf
sbb
movs
imul
pop
enter
imul
cmp
jno
xchg
bound
xchg
(bad)
sbb
das
dec
pop
push
push
mov
mov
or
sub
fadd
sti
mov
push
cmp
jbe
sbb
dec
popa
test
popa
nop
std
pop
ja
or
stc
add
sbb
mov
inc
mov
stc
fisttp
jge
mov
or
push
mov
(bad)
std
loopne
lock
push
mov
mov
outs
sub
xchg
push
dec
xchg
mov
push
lahf
xchg
push
mov
test
rol
test
xchg
es
dec
mov
inc
sbb
loope
add
adc
aas
shr
push
push
loop
jno
stc
mov
push
sti
retf
pop
or
and
loope
inc
adc
push
adc
jb
addr16
inc
jb
jb
mov
jle
outs
repz
pop
and
push
movs
push
shl
loop
inc
pushf
xchg
mov
xor
movzx
add
pop
pop
pushf
push
mov
adc
jmp
dec
inc
mov
or
xchg
jnp
js
push
pop
test
or
or
add
ja
lods
mov
pop
push
add
out
rcr
pop
dec
and
dec
and
jno
push
paddsb
imul
push
mov
push
repnz
mov
inc
mov
push
loopne
mov
lock
jns
pop
jo
adc
out
adc
test
pop
jb
pushf
loopne
into
cmp
pop
rcl
mov
jo
ins
cmp
add
jl
outs
and
jg
and
sub
hlt
mov
and
loopne
sub
scas
jle
push
(bad)
jl
pop
mov
sbb
or
add
and
sub
int
dec
adc
or
mov
push
dec
add
scas
psubd
mov
mov
mov
pop
jmp
stos
or
adc
or
push
lock
or
das
mov
and
jns
mov
mov
xchg
scas
adc
mov
sbb
push
pop
shl
or
xchg
xchg
or
and
mov
test
loop
inc
call
sbb
sar
cmps
lahf
dec
jb
stos
dec
adc
in
cmp
or
add
xchg
pop
mov
xchg
jg
xchg
adc
data16
push
inc
cli
call
adc
inc
dec
xchg
xor
xchg
inc
dec
xlat
loopne
jl
xchg
push
ret
int3
inc
mov
jge
xor
addr16
neg
dec
mov
std
adc
add
cmp
je
add
leave
dec
(bad)
out
cli
add
jge
fwait
pop
inc
inc
pop
sti
test
fldcw
fistp
or
and
pop
pusha
icebp
rcl
push
push
ins
jnp
sbb
lahf
(bad)
cld
mov
js
inc
in
cmp
and
jg
cmp
push
jne
cmp
es
jp
ds
pusha
mov
jmp
jge
jle
add
or
pop
fucomp
xor
inc
push
inc
jp
mov
sbb
jge
fldz
mov
pop
mov
mov
clc
and
xchg
jmp
inc
imul
fadd
clc
imul
xor
sbb
dec
retf
sbb
sahf
jne
adc
xor
sbb
sbb
xor
sar
adc
aaa
fsub
in
es
dec
push
or
mov
movd
lods
xor
arpl
jmp
pop
xchg
(bad)
adc
pop
pop
xchg
sbb
adc
dec
mov
ins
mov
jne
adc
inc
pusha
std
mov
ins
add
jl
mov
mov
sbb
add
push
adc
jnp
ins
sub
pop
push
(bad)
fadd
ds
adc
pop
push
inc
and
add
xadd
in
retf
jg
test
fwait
mov
rol
add
mov
jo
jo
adc
jo
ins
jo
icebp
xor
lock
(bad)
ss
dec
mov
mov
cmps
ins
xlat
xor
and
inc
lock
hlt
fcomp
pop
lock
mov
int
cmp
fadd
add
xor
or
aam
adc
lds
lock
push
fcom
sahf
int3
xor
(bad)
jnp
fadd
pop
fcomp
sub
ret
mov
loopne
xor
inc
and
pop
rcr
fsubr
dec
or
ficom
adc
adc
cmps
pop
ror
js
sbb
es
stc
mov
imul
sbb
xor
ret
imul
ss
cmp
add
pushf
cmp
dec
lea
cmp
or
sbb
dec
or
cmp
cmp
retf
pop
adc
mov
or
jo
fnstcw
cmp
ja
cmp
jbe
xchg
xor
es
int3
int3
jecxz
loope
push
push
ret
call
pop
je
dec
imul
add
push
inc
dec
out
cmps
sahf
inc
add
ret
dec
imul
push
xor
pop
xor
pop
pop
xor
je
cmp
je
lea
mov
rcr
inc
or
mov
inc
adc
pop
xor
inc
cli
call
ret
pop
loopne
fsubp
mov
jns
shl
push
repnz
cmp
or
push
out
adc
mov
add
or
loope
add
add
or
mov
pop
pop
aad
mov
inc
or
xchg
jne
getsec
or
test
cmp
in
shr
or
cmp
xlat
pop
(bad)
paddb
xchg
or
popf
add
push
sbb
mov
jl
in
xor
adc
ret
add
jg
mov
push
fcom
stos
xor
out
aad
loopne
sub
sbb
(bad)
sbb
test
scas
loopne
call
inc
adc
lock
into
jbe
xor
ficom
or
ja
and
shl
or
jne
cmp
cli
daa
scas
mov
nop
sbb
or
fisttp
(bad)
aaa
inc
pusha
cmp
xchg
cmp
xor
dec
mov
ds
ins
push
dec
es
inc
cld
aas
sbb
lea
and
cmps
or
(bad)
out
adc
mov
pop
and
sub
xchg
stos
into
mov
push
push
jmp
sub
mov
pop
add
and
push
jae
fimul
and
push
cmp
test
adc
mov
dec
sub
jae
sub
mov
sbb
daa
jecxz
loope
sar
push
push
push
jne
stos
jmp
test
push
test
push
push
inc
mov
inc
cmp
fdivr
inc
je
sub
cmp
sbb
and
add
add
xchg
sbb
sbb
rcr
jmp
lock
mov
jg
jmp
es
pop
mov
adc
xor
nop
into
daa
pop
fcomp
push
mov
clc
jnp
push
cmp
je
loopne
jmp
push
loop
rcr
dec
popf
jmp
fild
pop
nop
cmp
jae
fdiv
aaa
adc
push
shrd
shr
xchg
xor
test
push
pop
dec
pop
shr
push
adc
push
cld
dec
or
fst
nop
add
movzx
in
ret
fwait
sbb
pop
mov
inc
pop
loopne
fucomi
shr
aaa
inc
push
sub
sub
popa
pop
es
outs
xchg
add
add
or
jnp
lea
popa
jmp
cmp
ret
jne
neg
xchg
jg
test
mov
pop
movs
cli
mov
pop
sub
pushf
push
jae
pop
push
dec
out
add
jl
comiss
pop
or
mov
add
cmp
jbe
clc
jb
add
and
mov
jg
cmp
sub
movs
jmp
mov
mov
data16
add
test
mov
push
or
es
push
lock
sti
push
jl
rcl
pop
mov
mov
or
lods
cmp
mov
(bad)
mov
dec
rep
push
dec
add
add
nop
inc
inc
inc
inc
jg
repz
pop
push
push
push
dec
inc
out
cmp
cmp
sub
inc
mov
mov
sahf
out
sahf
call
lock
out
hlt
hlt
clc
clc
cld
sbb
test
ins
add
add
adc
cmp
pusha
jmp
push
pushf
mov
int
(bad)
neg
xchg
mov
and
sbb
cmp
lea
jl
cld
dec
push
jo
and
std
(bad)
cld
out
adc
lds
neg
fimul
out
mov
pop
adc
sub
dec
mov
fidivr
jo
add
dec
mov
jbe
mov
aas
pop
shr
inc
out
add
add
nop
dec
sbb
lods
dec
dec
push
pop
add
les
mov
iret
repz
dec
push
aam
in
iret
repz
hlt
pop
pop
das
sbb
sbb
repz
adc
adc
repz
repz
or
add
dec
enter
or
push
cmps
and
das
push
add
pop
pop
daa
ds
push
add
popf
call
sub
sbb
cmp
jne
aaa
pop
xchg
scas
jge
cwde
push
adc
and
mov
cmp
mov
add
add
(bad)
loopne
es
push
cld
add
outs
stc
fdivr
(bad)
je
dec
push
cs
ins
ins
pop
movs
loopne
mov
mov
jmp
(bad)
fcomp
sub
jo
dec
inc
in
push
mov
push
push
and
pop
pop
movs
mov
sub
dec
adc
mov
loopne
adc
and
pushf
adc
jmp
lods
and
inc
call
aas
push
in
mov
mov
iret
jne
add
shl
inc
mov
ret
pop
nop
aam
sub
ror
dec
aam
fucomp
adc
dec
pop
xchg
jg
xchg
ds
fstp
pop
jl
adc
adc
(bad)
test
mov
sbb
xchg
fwait
aam
push
push
mov
pop
rol
adc
pop
mov
shr
or
fidiv
add
scas
lods
cli
push
js
(bad)
jb
jmp
cmps
sub
shl
inc
ins
ret
sbb
xchg
sbb
fcomp
mov
int3
push
adc
cmp
push
(bad)
jmp
js
bound
mov
ret
sbb
jne
lods
je
movs
jecxz
xor
dec
lahf
fwait
scas
and
imul
mov
add
mov
inc
xor
pop
inc
xor
call
in
cld
(bad)
mov
sbb
repnz
xor
cmp
std
ins
pop
inc
inc
jae
or
lea
cmp
push
mov
lea
call
pop
or
push
loope
cmp
js
dec
push
mov
cmp
es
ins
add
mov
add
cmp
idiv
mov
jmp
mov
test
imul
mov
and
scas
sub
jbe
fcomp
push
dec
mov
ror
cmp
mov
pop
neg
neg
sbb
fs
ja
into
sbb
sbb
inc
adc
cdq
sbb
xor
outs
cld
out
inc
sbb
shl
icebp
mov
ret
jmp
(bad)
fistp
daa
shr
rcr
shr
rcr
or
jne
(bad)
sub
sbb
add
jb
cmp
ja
jb
cmp
add
jo
jne
fcomp
adc
loopne
fiadd
rol
adc
cld
adc
stos
and
enter
js
jne
xor
cmp
or
cmps
out
mov
or
rcr
ins
js
lock
push
push
pop
mov
loopne
movs
mov
or
fdivp
in
and
loope
xor
push
push
jecxz
ss
mov
aam
pop
lea
or
retf
je
dec
je
mov
push
sbb
out
sub
jb
push
retf
add
or
outs
jmp
pop
mov
ds
jne
ffreep
cli
fstp
dec
jmp
mov
push
pop
pop
mov
loope
loopne
(bad)
out
fisttp
push
and
jmp
sbb
jmp
jmp
pop
lea
loop
mov
pop
or
cld
cmp
sbb
jmp
dec
jl
fcom
loop
xchg
sbb
pop
inc
bts
jmp
loopne
nop
inc
mov
shl
jae
mov
push
sub
cmp
jp
or
out
cs
mov
mov
xor
add
adc
push
jne
jmp
jbe
jmp
jle
pop
inc
dec
je
mov
pop
(bad)
xor
cmp
push
and
mov
jne
ret
pop
cs
add
ins
in
popf
add
jne
mov
je
mov
jbe
ins
xor
jne
inc
push
pop
push
pop
stos
scas
mov
test
mov
aas
xchg
mov
sub
div
(bad)
push
or
mov
xchg
out
cmc
jmp
and
add
add
sbb
cmps
sbb
or
push
dec
fs
jne
inc
addr16
add
or
mov
jecxz
lock
imul
jno
enter
xor
pusha
cmp
je
call
adc
jne
loopne
cmc
sbb
test
and
push
lea
mov
dec
xchg
out
and
cmp
jne
mov
mov
sbb
mov
mov
push
and
push
jmp
adc
mov
mov
idiv
outs
inc
(bad)
fld
retf
mov
out
cmps
mov
loopne
sbb
cmp
jl
not
repnz
ficom
setge
push
push
add
jmp
popf
push
sbb
sbb
call
adc
leave
jge
aaa
outs
je
hlt
or
inc
xor
cmp
cmps
iret
enter
fwait
adc
jbe
sub
sbb
or
sub
call
ins
add
movs
and
into
fsub
mov
mov
add
sub
cmp
je
mov
fmul
fs
dec
hlt
ret
out
adc
mov
enter
(bad)
ret
jg
xor
int
mov
and
sub
shr
pop
call
and
outs
out
cmp
je
sahf
out
iret
adc
jb
adc
test
aam
xchg
pop
daa
outs
or
inc
sub
imul
arpl
mov
push
pop
loope
loop
ret
xor
inc
jb
hlt
mov
mov
xchg
pop
pop
pop
cmc
mov
sbb
push
jge
pop
mov
pushf
sbb
or
fst
and
or
xor
and
test
rcr
jne
inc
loopne
pusha
add
sar
movs
inc
cdq
les
or
pop
add
outs
pop
push
cmp
ins
push
cmp
or
js
adc
pop
push
lea
add
jb
push
cmp
shl
sbb
in
pop
push
dec
shr
les
mov
mov
add
sbb
push
sbb
adc
pop
nop
jae
loope
jmp
imul
or
inc
mov
je
ja
and
jb
xchg
cdq
scas
ror
dec
mov
rcl
or
add
je
inc
dec
adc
(bad)
in
add
int
xor
add
repnz
(bad)
jmp
fisttp
xlat
js
xor
pcmpeqw
mov
dec
je
adc
pop
cmp
jne
mov
mov
adc
test
je
and
fsub
icebp
xlat
ins
sbb
adc
jmp
repz
mov
mov
mov
dec
int3
cmc
rcr
mov
adc
add
sbb
idiv
int3
movs
pop
and
les
retf
mov
push
sti
sbb
out
jne
or
cmps
or
ret
lods
adc
or
push
push
and
shr
pop
push
mov
es
push
and
add
mov
repnz
jg
or
push
iret
repz
test
fs
pushf
pop
shl
repz
rol
loopne
pop
test
push
inc
outs
lock
cli
fimul
dec
ins
pop
nop
pop
push
js
mov
dec
pop
inc
outs
jnp
inc
enter
hlt
(bad)
cld
push
out
sahf
out
outs
or
sbb
or
pusha
shl
outs
pop
aas
xor
repz
pop
push
push
jo
add
cmp
inc
clc
vmaxss
mov
inc
inc
data16
sub
sar
dec
in
and
adc
sbb
popf
jne
(bad)
sbb
push
mov
mov
mov
pop
movzx
ins
(bad)
ret
test
ins
sub
sbb
inc
cmp
test
sbb
shr
cmp
je
jmp
pop
call
cmp
sbb
jmp
mov
arpl
popa
pop
lea
jmp
sbb
ror
shl
(bad)
xchg
fwait
add
mov
loope
add
xor
jns
push
neg
idiv
xor
pop
jae
lock
push
pop
pop
cmp
jp
(bad)
clc
xchg
or
xchg
mov
inc
add
shl
push
cmp
fcom
sub
lea
or
nop
icebp
pop
dec
and
inc
jne
inc
dec
loopne
test
adc
add
adc
push
or
or
fcom
adc
cld
ret
adc
std
cld
sbb
fs
pop
cmp
jg
inc
xor
or
paddusb
and
ins
pop
(bad)
pop
adc
pop
mov
mov
adc
mov
pop
pusha
aaa
xchg
sbb
push
push
outs
(bad)
pop
imul
mov
sbb
push
mov
ins
in
jl
or
cmps
add
adc
mov
push
cmp
adc
jb
cmp
and
inc
adc
fadd
jecxz
lods
jl
jge
data16
inc
inc
jmp
or
adc
pop
mov
or
lds
mov
ret
mov
mov
xchg
mov
aas
jb
test
stc
das
je
inc
mov
sbb
jmp
and
sbb
movs
iret
xor
push
lock
je
les
push
pop
sub
cmp
mov
(bad)
es
adc
(bad)
and
stos
jmp
sahf
pop
add
test
and
cld
je
movs
std
dec
cmp
jb
jl
adc
inc
lock
jl
outs
(bad)
lock
lock
push
push
inc
ds
cmps
xor
pop
sub
inc
push
aas
pop
imul
cmp
sbb
xor
inc
jbe
lea
sbb
adc
cs
(bad)
cmp
jne
and
sub
jne
push
push
fnstcw
lock
sub
(bad)
test
mov
push
mov
mov
mov
stos
fcom
cmp
fmul
xor
ret
sbb
out
add
pop
or
test
cwde
test
or
repz
aas
aaa
arpl
mov
shr
sub
adc
clc
loop
or
push
pop
enter
in
add
cmp
or
jbe
int
lock
sub
add
mov
loopne
jo
push
and
and
xchg
sbb
xchg
(bad)
dec
lods
movzx
shl
mov
(bad)
cmp
xor
and
nop
fadd
ret
cmc
push
cwde
dec
ret
inc
add
inc
mov
pop
cmp
scas
not
fdiv
imul
sub
enter
sbb
pop
sub
mov
je
add
mov
cmp
icebp
pop
call
(bad)
sub
push
call
inc
and
push
add
mov
call
ins
cmp
gs
cmps
(bad)
aad
cmp
rcr
scas
add
mov
push
sar
ret
xchg
dec
mov
enter
xchg
fisubr
jnp
(bad)
and
inc
retf
je
push
mov
and
(bad)
ja
jne
(bad)
adc
push
cld
mov
pop
jbe
inc
inc
add
add
inc
push
(bad)
add
shr
pusha
mov
add
cld
jge
and
adc
movs
movs
pop
mov
pop
sahf
mov
and
cmp
cmp
or
ds
push
sbb
ret
push
mov
in
push
enter
stos
add
push
cmp
push
xchg
pop
mov
loopne
fsub
into
jmp
pop
or
fs
lds
push
js
(bad)
and
imul
pop
xor
std
movs
mov
movs
add
and
hlt
out
dec
cld
or
popf
cmps
mov
push
adc
or
push
jecxz
clc
mov
jl
aas
mov
cmp
sahf
pop
add
test
xchg
push
add
sar
mov
es
test
mov
mov
ja
mov
or
shl
sti
sti
sbb
push
inc
mov
cli
xchg
cs
stos
stos
inc
inc
mov
inc
shl
or
pop
pop
jmp
push
sbb
mov
mov
cmp
add
imul
and
ja
push
aad
pop
(bad)
(bad)
in
mov
(bad)
clc
test
je
pop
adc
nop
and
jg
enter
add
mov
jecxz
mov
cmp
mov
mov
inc
ins
sub
sti
(bad)
xor
fs
enter
mov
mov
adc
jp
push
popf
cmp
and
loopne
lahf
sbb
les
xor
mov
push
cmp
test
popf
dec
or
pop
add
std
(bad)
sub
stc
inc
jl
mov
(bad)
cmp
adc
cmps
call
push
adc
cdq
pop
idiv
push
add
es
out
mov
push
adc
ret
adc
cs
add
jg
pop
push
add
sbb
dec
and
cmp
jle
inc
lea
imul
scas
sar
add
lea
imul
or
leave
jl
in
xchg
cmp
pushf
iret
imul
or
jge
lea
dec
shr
push
add
daa
loopne
cld
sbb
xchg
ret
in
jb
fs
mov
leave
xchg
shl
mov
(bad)
in
in
into
imul
(bad)
and
add
and
jne
mov
in
mov
pop
test
mov
or
or
jp
pop
inc
je
adc
sbb
sbb
add
or
(bad)
cli
imul
jg
jge
fwait
jmp
inc
and
popa
cmps
or
push
cli
out
xchg
sub
pop
repz
mov
xor
(bad)
test
or
pop
mov
jge
imul
movs
inc
xor
das
mov
mov
adc
inc
retf
pop
xchg
or
sub
shr
and
clc
add
cwde
test
call
into
xor
add
lock
sub
inc
or
ins
cwde
in
mov
add
add
imul
mov
cdq
test
cmp
popa
ins
cli
sbb
rol
mov
daa
mov
sbb
jge
inc
clc
in
ins
add
mul
push
adc
sub
rcl
or
test
add
adc
push
fcom
cmp
sbb
mov
lock
pop
inc
pushf
popf
push
and
sar
sbb
adc
add
mov
or
ins
stos
test
dec
mov
cmp
jge
sub
sar
lock
sbb
push
loop
int3
sbb
mov
(bad)
pop
das
sub
out
and
retf
test
sub
cwde
cmp
int3
ins
fst
dec
lock
stos
ficomp
mov
je
push
rol
mov
add
or
dec
xchg
es
cmp
add
inc
shr
push
add
or
pushf
pop
cmp
inc
push
stc
pop
inc
or
inc
data16
jbe
shr
mov
jle
mov
push
imul
rol
push
inc
sbb
add
or
dec
in
fisttp
bound
inc
lea
inc
xor
lock
jg
cld
pop
dec
or
(bad)
pop
ins
(bad)
or
pop
mov
loope
or
mov
test
mov
cmp
enter
cld
ror
cmp
adc
stc
and
mov
scas
xor
sbb
fdivp
movs
bound
ret
sbb
adc
push
retf
pop
or
push
les
adc
ss
push
xor
pop
cmp
test
pop
(bad)
pop
fcomi
daa
add
adc
out
enter
mov
jmp
dec
mov
loop
dec
push
pop
cld
push
xchg
dec
inc
ret
adc
cs
ror
sbb
push
cmp
jge
cs
xor
lea
and
cmp
scas
inc
add
cmp
jl
fsub
or
mov
fcom
pop
or
or
ds
mov
and
xor
ss
or
add
or
shl
sbb
sub
movs
pop
adc
or
sub
pop
push
inc
retf
add
adc
mov
cmp
jle
pop
mov
cmp
add
mov
outs
sub
and
cmp
sbb
cmp
xchg
add
mov
or
push
cmp
jne
and
lods
retf
xchg
add
pop
mov
ret
adc
inc
or
jbe
inc
sbb
mov
cli
push
sbb
ins
cmp
sub
mov
pavgb
dec
cmp
je
cmp
je
inc
mov
pop
lea
add
and
(bad)
jmp
xor
jo
or
cmp
je
push
push
sbb
push
call
xchg
and
cmp
pop
push
add
rcr
push
push
cmp
push
adc
std
outs
jne
pop
dec
add
sbb
xchg
xchg
or
sahf
shr
sub
test
movs
push
aaa
adc
add
lock
rol
movs
(bad)
cmp
sahf
mov
hlt
inc
mov
push
aad
fnstcw
push
push
push
add
mov
push
inc
or
dec
xchg
sahf
mov
dec
mov
mov
fld
leave
cwde
sub
xchg
mov
jne
dec
andps
add
mov
jo
sub
sub
inc
mov
push
sub
jecxz
add
fistp
push
mov
mov
inc
inc
pop
aad
into
sbb
ss
or
inc
cmp
dec
outs
and
mov
test
sbb
je
or
or
cs
inc
sbb
add
xchg
inc
cdq
outs
cwde
lods
sbb
push
loopne
push
jb
mov
dec
lock
das
enter
loopne
mov
inc
(bad)
jo
mov
pop
jne
inc
inc
jmp
and
sub
ret
add
jge
adc
cmp
xor
push
clc
shl
(bad)
or
xor
xor
sete
or
mov
shr
mov
dec
pop
push
inc
adc
xor
pop
inc
(bad)
add
mov
dec
dec
cmp
adc
cli
je
jb
cs
sbb
imul
jno
add
add
jno
popa
mov
sbb
daa
sbb
adc
jle
pop
ret
xchg
test
mov
or
shr
add
ret
jne
aad
xchg
loope
push
xchg
imul
movs
mov
and
jmp
pop
jae
pop
(bad)
std
mov
xchg
dec
ret
push
out
fnstcw
sbb
or
mov
pop
mov
sar
sbb
add
jecxz
cdq
mov
sbb
call
gs
and
or
cmp
mov
movs
mov
pusha
inc
dec
xchg
loopne
dec
pop
mov
push
push
and
cmp
ret
jmp
cli
aaa
cmp
arpl
mov
je
mov
in
or
idiv
or
sub
inc
aam
popf
or
lea
je
push
inc
es
cmp
sub
ret
fiadd
sti
cdq
pop
ret
mov
jns
mov
into
push
ds
pop
xor
jbe
inc
push
cmp
jae
fiadd
mov
std
add
or
aas
bound
imul
data16
jmp
shl
push
add
(bad)
cmp
cmc
adc
(bad)
mov
movs
cmp
mov
cwde
daa
or
jmp
add
shl
pusha
cld
int
cmp
pusha
inc
mov
add
add
add
or
jl
jmp
mov
pop
mov
dec
aam
adc
xchg
loop
mov
test
xor
or
dec
jp
jne
inc
loope
add
sar
and
or
cmps
dec
data16
mov
add
mov
or
xor
cmp
add
inc
cmp
jl
ror
cmp
pop
cmp
dec
test
sbb
nop
push
pop
jno
imul
adc
push
js
cs
push
loope
inc
imul
push
or
push
push
jp
jo
adc
jmp
or
clc
cmp
jl
xchg
test
pop
sbb
and
and
mov
push
mov
cs
push
mov
loope
cmp
sbb
dec
imul
mov
aaa
shl
test
ror
pop
push
out
add
or
aas
dec
xchg
es
aam
(bad)
sbb
dec
sbb
cdq
mov
cmp
cmp
jne
jg
sbb
mov
dec
sbb
push
mov
mov
pop
mov
dec
(bad)
cmp
lea
(bad)
jmp
int3
outs
icebp
rcr
outs
mov
adc
or
fdiv
push
in
pop
push
(bad)
dec
mov
mov
add
lea
addr16
(bad)
cmp
add
jl
cmp
jg
sub
mov
inc
cmp
jne
sub
push
shr
je
push
or
sbb
ins
addr16
dec
(bad)
dec
sahf
and
and
push
test
or
outs
je
push
push
mov
mov
enter
cmp
into
repz
mov
jmp
repnz
or
mov
(bad)
pushf
je
nop
fdivrp
push
and
mov
out
adc
push
pop
popa
push
cmp
and
test
loop
sub
xchg
xchg
push
or
cmp
(bad)
jnp
je
jbe
mov
xchg
sub
add
inc
pop
pop
cmps
(bad)
in
shr
mov
dec
inc
(bad)
mov
mov
sub
js
cmp
jne
push
or
mov
test
adc
movs
out
cld
mov
mov
je
out
mov
push
loop
shl
cmp
cmps
mov
push
fnstcw
mov
or
mov
fdivr
jmp
icebp
sub
add
mov
fwait
add
rcr
and
sub
mov
bound
jp
xor
clc
or
std
iret
sbb
add
push
ss
int3
push
mov
mov
sbb
dec
or
shl
adc
daa
aaa
dec
xor
jmp
and
lea
ss
adc
xlat
push
xchg
adc
or
rcr
(bad)
push
test
shl
mov
cmp
sbb
jmp
xchg
inc
loopne
push
dec
adc
in
das
vmwrite
sbb
fs
xchg
jmp
adc
xchg
adc
ss
sbb
cmp
mov
pop
es
xchg
sbb
adc
or
cmps
pop
inc
ret
inc
pusha
and
push
mov
inc
jmp
loope
(bad)
xchg
aaa
pop
mov
add
rcr
retf
cmp
jle
and
cdq
pop
fsubp
push
adc
cmp
push
and
stos
in
ret
mov
mov
xor
js
out
ret
aas
test
mov
push
cmp
jecxz
mov
cmp
or
scas
mov
and
jge
sbb
and
cmp
icebp
loopne
mov
adc
sbb
loope
and
xor
je
test
shl
dec
lock
ja
(bad)
dec
mov
test
je
jl
lock
xchg
pusha
rcr
shr
movs
(bad)
pusha
gs
dec
and
enter
data16
sti
cmp
(bad)
fbstp
enter
and
cmp
pushf
push
data16
pop
add
push
and
stos
mov
push
cmp
and
jecxz
add
pop
sbb
adc
mov
mov
std
add
jmp
mov
les
js
mov
pop
ds
mov
mov
push
sar
add
std
sbb
xchg
dec
push
ds
mov
icebp
sbb
jl
sub
add
push
enter
or
inc
or
syscall
scas
shr
pop
adc
test
mov
setae
sub
xor
adc
ficom
add
dec
mov
push
mov
xor
mov
pop
push
and
or
test
nop
and
dec
or
push
lock
push
sbb
dec
mov
ret
adc
test
fmul
aaa
ins
fisub
mov
adc
call
pop
scas
fcomp
or
sbb
push
ret
aad
movs
inc
addr16
nop
mov
test
je
dec
jne
shr
dec
xchg
jmp
mov
loopne
pop
stos
cmp
loope
test
and
pmulhuw
ss
jmp
sbb
add
out
push
std
cmp
leave
cmp
mov
inc
test
push
in
call
and
mov
mov
fucomi
or
fisttp
in
jb
sub
and
js
or
ret
mov
sbb
jl
push
test
mov
pop
outs
or
or
les
xchg
push
addr16
inc
mov
jb
dec
int3
cmp
rol
sub
loopne
icebp
sahf
inc
aam
test
xchg
sub
cmp
add
std
int
sub
dec
je
sbb
test
and
sbb
add
and
add
sub
std
into
mov
push
push
test
fimul
lea
cmp
xchg
(bad)
out
dec
mov
jbe
inc
inc
inc
shr
jmp
or
push
clc
pop
outs
xchg
in
xor
outs
dec
mov
or
pop
ins
je
ja
add
mov
jmp
adc
clc
ja
or
cmp
push
inc
inc
xor
or
les
pop
and
push
fcom
aam
push
into
popa
sub
push
cmp
(bad)
hlt
fld
dec
test
inc
push
(bad)
jo
xor
clc
addr16
ins
mov
gs
in
xchg
das
call
push
arpl
and
test
sub
pop
and
add
sub
mov
jne
xchg
cmp
or
js
cmp
jo
adc
out
(bad)
mov
dec
mov
sbb
cmp
sub
out
rol
out
loope
ret
and
inc
retf
mov
call
(bad)
shl
sahf
(bad)
int
clc
push
push
(bad)
mov
icebp
setne
add
mov
shl
lock
in
sbb
jl
jns
test
je
or
fiadd
mov
cli
add
mov
mov
inc
cdq
rcl
mov
retf
add
movd
dec
mov
mov
pop
ucomiss
call
jo
int
popa
sub
mov
sti
mov
sbb
into
sub
ds
xor
sti
push
clc
jle
mov
sub
lods
aam
mov
pop
add
not
je
mov
hlt
jmp
ins
dec
inc
push
mov
and
shl
(bad)
ss
mov
inc
xchg
mov
stos
bound
dec
jmp
outs
je
mov
inc
push
xor
pop
adc
pop
mov
aas
sub
test
pop
test
sahf
shr
(bad)
push
add
inc
das
inc
push
movs
cmp
inc
jbe
outs
inc
mov
add
add
daa
cmp
(bad)
cmp
clc
(bad)
xor
push
mov
sbb
lock
fimul
fidivr
sbb
test
sub
jg
mov
aas
fld
mov
add
and
add
inc
sbb
or
cmps
arpl
aad
lds
or
mov
pop
(bad)
test
mov
out
jns
jbe
sar
je
jne
(bad)
mov
repz
jmp
jnp
and
inc
leave
or
sti
in
sub
mov
jmp
pop
mov
jmp
inc
in
into
mov
jmp
rdpmc
shl
je
es
pop
les
jl
jae
sub
push
neg
leave
call
mov
div
push
push
popa
cmp
adc
fs
shl
add
inc
dec
test
loopne
inc
in
fcom
add
(bad)
sub
xor
addr16
jle
aaa
je
pusha
cdq
pusha
test
add
lock
push
xchg
fld
ins
sbb
ret
xor
shr
ret
ret
mov
add
mov
call
mov
jmp
lods
sub
add
add
and
mov
xor
mov
push
mov
xor
mov
cwde
hlt
fwait
cld
test
rol
fsub
neg
adc
out
cdq
push
adc
je
and
in
cs
add
sub
add
xor
pop
add
and
inc
mov
and
jmp
sub
add
add
xor
out
inc
pop
xor
or
cmp
sbb
lea
cmc
pop
and
mov
stos
mov
das
mov
lock
mov
dec
mov
jmp
mov
imul
adc
outs
adc
sbb
mov
test
int3
adc
popa
pop
xor
sahf
out
rcr
adc
xor
dec
add
push
mov
mov
mov
inc
mov
fs
jmp
je
inc
mov
pop
ret
js
cmp
and
sbb
or
adc
cmp
mov
jg
jg
fnstcw
jo
es
push
movsx
iret
retf
push
inc
sbb
ins
aas
ret
dec
loop
mov
aam
fld
fiadd
inc
adc
push
cld
cmp
push
pop
add
xchg
in
(bad)
popa
sbb
sub
pop
clc
adc
lock
fmul
sbb
call
mov
xchg
clc
sahf
jbe
loopne
push
push
jmp
inc
cwde
mov
shr
rol
xchg
sub
or
and
pushw
ja
push
push
jno
xchg
in
push
mov
mov
jg
out
inc
mov
mov
mov
or
pop
repz
mov
fisubr
aam
dec
add
hlt
and
mov
or
stc
inc
push
mov
enter
je
cmp
dec
mov
imul
inc
fmul
add
cwde
jb
sar
rcl
mov
sbb
lock
leave
cdq
and
outs
clc
pushf
jb
push
mov
and
(bad)
movs
sbb
jae
mov
mov
push
mov
dec
cwde
adc
mov
retf
push
xchg
(bad)
sub
pop
and
shr
lahf
rol
add
je
retf
repz
sub
adc
or
and
jl
xchg
ss
rcl
stos
and
pop
(bad)
cwde
adc
push
adc
out
pop
xlat
jle
mov
push
push
mov
push
jmp
add
adc
add
add
xor
mov
push
mov
je
enter
(bad)
adc
(bad)
cmp
mov
pop
add
jns
neg
es
pusha
sti
fs
cmp
cdq
pop
idiv
mov
adc
fisubr
or
movs
cmps
sbb
adc
pop
xor
push
or
mov
mov
out
in
xchg
jbe
shr
or
in
adc
ret
xor
adc
mov
mov
cmp
and
sti
add
pusha
and
dec
ret
ins
popa
lahf
test
jmp
add
jle
inc
das
(bad)
add
pop
push
jbe
inc
sub
jge
leave
add
fsubrp
pop
push
cmp
jl
sbb
js
xor
push
and
dec
bnd
inc
xor
jo
add
mov
lea
xchg
test
repz
push
push
push
add
or
cmp
setl
mov
jl
cmp
jge
call
stc
add
fsub
and
inc
add
cmp
adc
out
mov
adc
call
inc
je
data16
into
add
mov
sub
adc
or
aam
(bad)
mov
sbb
xor
not
not
pop
retf
or
cld
dec
(bad)
fst
cmp
sub
popa
popa
mov
adc
mov
add
add
ror
pusha
jne
xchg
test
adc
dec
mov
sbb
out
cmps
push
mov
and
gs
loopne
lock
push
and
jo
je
mov
popa
xchg
dec
sub
jo
add
call
adc
adc
add
xor
pushf
push
and
dec
test
adc
pop
inc
xchg
pop
mov
mov
rcr
mov
or
and
push
stc
iret
enter
or
test
xchg
xor
in
inc
dec
add
mov
xchg
sub
dec
or
push
mov
mov
push
or
shl
retf
and
shl
or
pop
jnp
test
xor
ins
shl
xor
cs
dec
call
and
std
test
mov
sub
and
sti
push
mov
adc
or
test
je
or
test
adc
and
aaa
mov
push
mov
xor
cmps
(bad)
imul
jne
cmp
cmp
sub
jmp
pop
sbb
fmul
and
add
jp
and
jecxz
sbb
or
jmp
sbb
or
or
adc
cmp
sbb
push
add
(bad)
jmp
cmp
dec
and
jecxz
sbb
sahf
and
pop
adc
popf
jge
jge
inc
and
pop
cmp
pop
in
call
push
lods
stos
cmp
inc
or
cmp
(bad)
sahf
retf
adc
sti
add
add
jl
out
test
fisttp
repz
add
mov
add
dec
jne
or
jmp
imul
sbb
and
or
or
mul
ret
add
push
scas
and
push
fistp
adc
push
sub
adc
cdq
add
retf
pushf
adc
pop
fld
add
mov
jno
mov
out
bound
mov
push
lock
test
lldt
jmp
cld
push
scas
push
idiv
lds
lods
shl
xor
clc
aas
or
je
mov
sub
inc
mov
cs
pop
jl
jmp
dec
pushf
in
sub
test
push
clc
(bad)
repz
ja
fchs
sbb
hlt
hlt
jmp
aas
jle
sbb
add
dec
xor
pop
dec
inc
or
xor
adc
xchg
sbb
fstp
mov
adc
sar
call
repz
cmp
or
loope
pop
xlat
pop
ja
test
ret
xchg
dec
mov
fild
adc
into
sti
or
xor
mov
jmp
test
aam
aad
rcl
ror
test
call
cmp
jge
sub
test
jo
fs
add
ins
hlt
aaa
inc
test
sbb
dec
push
clc
dec
jne
or
jecxz
xchg
lea
or
jmp
pop
pop
je
push
and
imul
pop
icebp
cmp
out
hlt
fsub
jo
pop
pop
cmp
cmps
xchg
sub
leave
xor
call
or
call
sbb
pop
and
in
int3
xchg
and
mov
cld
cmp
lods
inc
retf
test
pop
push
les
movaps
push
aaa
test
push
ror
jnp
jle
ins
mov
pop
lods
ret
pop
sub
pop
sbb
push
sbb
inc
pop
cmp
lods
jl
pusha
add
pop
std
xlat
sbb
clc
add
add
cld
adc
push
add
push
test
add
push
test
add
mov
sbb
in
add
loopne
push
or
adc
xchg
and
ss
cld
mov
cmp
jmp
add
dec
and
call
data16
push
add
push
(bad)
pushf
cmp
cmps
cli
jne
cmp
sub
cmp
jmp
add
pop
sub
enter
add
stc
push
pushf
pop
push
sub
es
add
pop
movs
pop
fcmovne
icebp
popa
int
push
pusha
or
sub
mov
xchg
aam
imul
push
mov
and
push
gs
outs
js
mov
mov
pop
adc
shl
adc
cmp
dec
add
or
out
gs
out
push
xor
sub
rcr
mov
mov
fwait
pop
jmp
sub
jne
adc
or
jo
or
pop
movsx
sub
jo
cs
push
jl
(bad)
movs
jge
shl
sbb
fnclex
sbb
or
enter
lods
jg
and
or
(bad)
ins
or
push
cwde
lock
pop
mov
jl
fld
pop
loop
pop
or
stos
mov
enter
sbb
fs
mov
fld1
fdivp
fstp
sbb
icebp
fsub
sub
jmp
stos
out
push
add
and
je
cmp
rol
outs
cmp
push
mov
pushf
imul
(bad)
jg
sahf
retf
or
cmp
jne
cmp
jbe
mov
and
icebp
dec
sbb
dec
mov
lock
shl
push
cmp
pop
das
pusha
fnsave
xchg
adc
dec
xor
add
dec
movs
or
jl
sbb
inc
loopne
and
add
push
bound
mov
pop
test
jne
add
test
bound
jle
jne
adc
push
or
lods
(bad)
stc
js
pop
es
jo
cmovo
ficom
(bad)
mov
sub
add
fldenv
adc
ja
fidivr
fist
rol
mov
add
sub
add
push
fstp
push
push
leave
xchg
ss
jg
jae
jl
jnp
jg
mov
cmc
push
(bad)
rol
mov
xchg
fiadd
inc
or
js
and
push
fs
outs
sub
ins
rcr
inc
mov
jg
mov
xor
mov
ret
xor
imul
sub
sbb
dec
mov
pusha
sbb
jo
xor
or
dec
fwait
mov
cmp
mov
hlt
jle
fadd
xlat
push
xor
mov
jae
sbb
mov
xchg
add
clc
jae
cmp
jl
cmp
jg
or
dec
adc
cmp
push
dec
hlt
sar
cs
bound
jmp
rol
adc
test
lods
sbb
inc
call
test
mov
test
add
adc
das
aas
mov
int3
and
push
add
or
ins
test
int
lods
dec
fld
sbb
or
daa
adc
mov
dec
and
rol
mov
push
push
call
cmp
pusha
mov
fdiv
dec
or
add
pop
adc
push
lds
mov
in
push
aas
and
inc
ins
fsubr
xor
mov
cmps
mov
mov
jle
imul
outs
and
pop
fadd
lea
push
jno
jge
ds
sub
add
pop
fidiv
push
into
push
sub
ret
ret
mov
push
and
sub
pop
icebp
mov
push
cmp
push
psubw
loope
call
push
push
das
pop
cmp
push
rol
mov
pop
mov
inc
fdivr
adc
and
dec
in
loopne
mov
jo
test
mov
inc
int
inc
(bad)
not
into
or
inc
xchg
cwde
aam
add
adc
add
mov
iret
test
adc
mov
push
mov
adc
pop
loopne
sar
cmp
cmp
arpl
jmp
inc
jle
push
outs
sbb
or
test
out
push
mov
or
mov
xchg
sbb
adc
aam
mov
or
jl
or
inc
rcr
les
sub
xor
inc
fimul
and
sbb
imul
mov
mov
push
cmp
in
add
pop
rcl
sbb
add
je
xor
test
inc
mov
(bad)
or
mov
push
jmp
xor
add
setle
addr16
cmp
neg
arpl
push
imul
mov
cmp
or
cmp
stos
pop
in
fld
ja
pop
xor
movs
and
mov
mov
retf
xchg
mov
pushf
push
push
test
sbb
leave
push
out
pop
in
mov
rol
cmp
inc
or
out
test
add
add
or
or
mov
mov
add
outs
(bad)
aad
loopne
pop
xor
sbb
cmp
add
cmp
cwde
add
test
inc
icebp
mov
mov
mov
pop
es
jmp
jne
pusha
mov
inc
pop
pop
cli
xchg
dec
loopne
sub
and
push
cmp
je
add
stos
pop
push
cmp
cmp
loope
or
pushf
xor
and
jns
retf
mov
push
scas
into
rol
shr
pop
add
sbb
mov
retf
xor
nop
dec
cmps
fdiv
imul
aam
mov
int3
push
out
fmul
mov
lea
mov
inc
loop
jb
add
push
mov
shl
cmp
adc
call
xchg
(bad)
or
(bad)
fist
inc
add
shr
mov
imul
add
dec
ret
mov
dec
sbb
iret
es
(bad)
xor
add
lea
mov
push
ss
push
push
cld
or
and
mov
jne
sar
dec
cmp
jbe
push
pop
mov
fdivrp
dec
add
dec
or
push
and
mov
jmp
or
dec
shl
pop
mov
add
sbb
jnp
mov
and
pushf
mov
test
and
sbb
fucomp
add
push
js
xchg
(bad)
js
sbb
sub
push
or
cs
and
scas
or
sub
ins
sti
add
repnz
pop
fucomip
call
fimul
cmp
and
cmp
push
jmp
mov
jno
cmp
loopne
ins
sbb
retf
shr
not
and
add
or
loopne
cmp
aas
push
mov
int
mov
add
jbe
mov
pushf
sahf
test
lock
xor
ds
(bad)
pop
rol
es
bound
cmps
loopne
or
dec
sbb
pusha
mov
add
std
xchg
ror
add
ds
sbb
shl
mov
sbb
sub
int
das
iret
loopne
stos
push
mov
js
inc
jecxz
adc
mov
lock
addr16
mul
add
fadd
enter
push
rol
(bad)
cld
shl
add
movs
adc
jo
in
inc
data16
mov
mov
push
or
movs
clc
fldcw
mov
scas
push
dec
adc
inc
stos
adc
pusha
add
and
push
or
and
push
adc
mov
enter
rcr
adc
push
lea
inc
cli
mov
les
jbe
jp
mov
pop
movs
xor
enter
adc
dec
pusha
retf
cmp
pop
cli
jg
pop
mov
lock
sar
dec
cmp
jge
cmp
adc
jne
pop
test
hlt
jmp
loopne
out
pop
xor
call
sti
imul
and
stos
mov
ret
adc
pop
cld
xor
nop
out
mov
mov
cmp
dec
adc
imul
out
jne
dec
jae
cmp
fistp
movs
repnz
jmp
es
mov
cmp
mov
fcmovnu
fnsave
sbb
mov
push
cmp
mov
mov
cmc
mov
mov
mov
mov
pop
mov
xor
aaa
mov
imul
lock
dec
inc
or
jne
mov
mov
cmp
inc
test
fistp
jmp
call
ja
out
in
into
jne
int
and
pop
repnz
fcomi
inc
jmp
mov
stc
xchg
sub
pop
pop
(bad)
aad
mov
add
cmp
jle
pop
jl
loop
jmp
dec
popa
cmp
xor
iret
sar
cmp
mov
cld
xor
push
dec
jne
jp
in
and
jmp
inc
adc
cmp
or
push
ins
xor
int
adc
arpl
add
push
imul
mov
jmp
repz
xchg
hlt
mov
mov
mov
jmp
fs
fst
lahf
dec
jge
sub
mov
pop
arpl
mov
shr
or
adc
fiadd
push
or
push
jnp
fadd
add
mov
add
inc
pop
or
add
and
add
inc
push
inc
pop
mov
mov
fistp
ds
cmp
cmp
inc
push
cmp
jbe
jecxz
jmp
adc
push
inc
fisub
mov
push
fidiv
xor
je
fisttp
adc
push
popa
clc
xchg
xor
adc
ins
pop
aad
and
or
jbe
pop
dec
data16
repz
dec
inc
xchg
or
add
xchg
rol
bound
(bad)
jno
or
sahf
loopne
ret
outs
imul
add
xor
in
sar
add
or
out
add
push
push
add
(bad)
shr
out
mov
xchg
add
push
mov
sar
ja
lea
dec
in
mov
psubsb
push
out
lea
cld
lock
je
jge
xor
mov
call
cmp
jbe
dec
dec
or
clc
mov
sub
dec
or
fbld
sub
inc
fs
inc
test
mov
outs
loope
sbb
mov
sahf
shl
adc
js
mov
and
ret
loopne
pusha
or
clc
sub
cld
xlat
lea
sub
push
stos
sbb
or
dec
cld
dec
cmp
in
push
hlt
mov
aaa
or
jne
push
jl
xor
inc
add
xlat
lock
pushf
pop
push
mov
pop
dec
loope
mov
or
pop
cmps
clc
lea
jo
pop
jecxz
sub
daa
movs
or
or
dec
xchg
jnp
mov
enter
inc
mov
dec
mov
stos
pop
sti
pop
fs
es
dec
mov
cs
inc
mov
sbb
adc
xchg
pop
jg
or
dec
shl
pop
pop
cld
dec
adc
bound
and
and
or
popf
and
and
inc
mov
in
imul
adc
(bad)
sub
cmp
mov
cmps
into
(bad)
mov
sub
mov
dec
ins
pop
xor
adc
sub
test
imul
test
cld
aaa
xor
call
push
sbb
je
repz
xor
mov
dec
push
in
cs
pop
sbb
repz
ja
dec
or
or
shl
or
fist
addr16
xchg
aad
add
jo
cwde
cmc
pop
fisttp
ret
push
sbb
jae
(bad)
add
bswap
xchg
sbb
and
jns
adc
xchg
sbb
jmp
cmp
push
pusha
and
test
aas
inc
sbb
cs
push
jg
je
fistp
mov
mov
mov
loope
sbb
add
pusha
arpl
mov
idiv
lock
loop
adc
nop
out
mov
por
mov
mov
mov
lea
mov
adc
add
stos
and
push
inc
das
xchg
pop
(bad)
in
mov
setge
inc
dec
and
dec
inc
mov
mov
ret
adc
adc
and
cmp
jae
or
pop
jmp
add
mov
loopne
(bad)
imul
cmps
add
jnp
jg
cmp
mov
cmovge
cmp
es
sbb
cmp
mov
adc
mov
push
dec
push
mov
pop
and
outs
ror
push
jle
sbb
ret
popa
mov
shl
into
lock
lods
aas
jae
cmp
cdq
add
outs
push
pop
or
dec
rol
(bad)
mov
sub
fst
out
sub
or
out
mov
scas
mov
sahf
cli
aad
stos
dec
dec
jns
jb
cs
pop
int3
or
mov
in
punpcklbw
dec
dec
xor
test
mov
fdivr
cmp
jbe
or
jbe
retf
adc
(bad)
aaa
jmp
test
jne
lods
xor
out
cmp
jb
sahf
and
jmp
push
iret
enter
jno
ret
sbb
ret
dec
popa
sub
or
inc
sub
stc
or
enter
movzx
add
and
cmp
and
mov
loopne
inc
icebp
lock
jo
mov
outs
aaa
push
mov
rcr
mov
rcr
and
(bad)
sub
sub
hlt
add
loopne
add
cmp
inc
or
jae
mov
call
add
mov
push
dec
lods
(bad)
fnstenv
mov
outs
adc
mov
or
push
mov
pop
dec
jle
test
add
push
mov
cmp
jl
cdq
adc
or
cmp
popf
es
xor
jb
fld
cmp
adc
jmp
sub
test
lods
rol
sub
push
jg
add
fcmovbe
mov
call
ret
sub
call
(bad)
out
add
(bad)
(bad)
sar
adc
adc
ds
stos
ror
add
or
movs
inc
sbb
ds
mov
hlt
mov
push
mov
lahf
outs
sub
retf
jle
outs
sbb
mov
leave
push
mov
cld
mov
inc
cmp
sbb
jne
mov
mov
ins
cmp
jae
js
lock
test
ja
sub
or
cmp
or
push
or
mov
dec
add
loopne
aad
sub
shr
sbb
pop
xor
jmp
idiv
pushf
clc
jmp
shl
sbb
push
and
xor
and
out
int3
adc
mov
xor
dec
pop
icebp
mov
lea
mov
dec
jae
add
sub
inc
outs
mov
or
jg
sub
add
jmp
pop
outs
mov
jae
mov
lods
jg
sbb
add
cmp
inc
inc
jmp
pop
add
fsub
out
inc
or
or
push
push
or
repz
jno
jmp
jae
hlt
push
data16
mov
jne
mov
inc
inc
lea
cs
sub
test
jno
cmp
outs
xor
ret
sub
imul
lds
fsubrp
scas
mov
outs
sbb
ret
mov
dec
sub
inc
imul
test
adc
inc
(bad)
push
pop
cmovb
and
sbb
or
dec
shr
fdivrp
(bad)
sbb
cmp
enter
subps
popa
sahf
shr
jae
movs
add
aas
cmps
lock
mov
lods
jmp
push
jne
mov
ins
mov
shl
inc
jbe
push
jae
cld
mov
cmp
inc
cmp
mov
cmps
inc
inc
push
arpl
sub
sar
call
dec
inc
pop
adc
hlt
add
mov
inc
and
imul
bound
cdq
adc
cmp
sar
sbb
out
and
adc
mov
xor
enter
test
inc
lock
retf
mov
add
ficomp
and
gs
mov
(bad)
add
and
sbb
test
jns
jmp
or
jmp
cmc
in
and
jmp
cld
bound
pop
rcl
vmovshdup
test
add
add
xor
neg
(bad)
jo
test
or
add
sbb
mov
mov
push
jno
push
or
lods
add
adc
dec
sub
or
sub
mov
stos
jns
push
das
add
push
push
adc
and
inc
data16
sbb
and
xor
or
lea
inc
aad
xchg
push
jae
pop
ds
jo
add
sbb
shl
xchg
push
xor
dec
jl
push
pop
fsubr
sbb
add
jp
or
push
addr16
cmps
repnz
add
test
add
and
je
inc
fmul
sub
add
mov
fcom
ds
inc
rcl
(bad)
test
loopne
ret
fstp
movs
and
mov
mov
daa
in
mov
push
dec
loope
push
pop
mov
mov
fcomp
outs
jge
sti
lahf
or
mov
pop
mov
(bad)
push
mov
adc
sbb
mov
mov
pop
inc
add
fnstcw
jl
cmp
(bad)
adc
fld
ins
xor
mov
dec
mov
add
cli
push
aam
inc
cmp
xchg
int3
cli
cmp
sbb
in
idiv
jb
cmp
sub
pop
inc
add
push
dec
cwde
push
js
(bad)
adc
aam
mov
cmp
or
shl
int3
dec
and
lea
imul
add
in
adc
repz
inc
dec
mov
test
sar
xlat
fild
jge
cmp
arpl
mov
mov
cmp
xor
retf
js
dec
xchg
cmp
pushf
add
mov
inc
xchg
ret
add
mov
xor
enter
ror
daa
cmp
sbb
dec
and
adc
out
dec
add
mov
lahf
movs
xchg
adc
or
add
repz
add
mov
(bad)
js
add
xlat
mov
sub
sub
dec
dec
or
mov
mov
mov
inc
dec
jmp
mov
push
add
add
jg
and
push
jb
or
pop
or
test
sbb
jnp
mov
sub
or
mov
adc
inc
push
outs
mov
inc
xchg
sbb
inc
or
repz
mov
push
or
and
or
push
inc
or
outs
pop
mov
or
push
or
xchg
in
pop
pop
jmp
dec
aas
xor
shr
dec
lock
cmp
mov
inc
mov
and
add
je
(bad)
out
sub
cmp
pop
xchg
in
push
sbb
mov
rcl
daa
movs
movs
outs
xor
or
add
mov
or
clc
in
pop
add
or
dec
mov
add
add
jne
lahf
bound
pop
xchg
cld
jae
sbb
inc
adc
pop
cld
cmp
sub
scas
lock
inc
xor
inc
mov
stos
adc
push
jg
movups
call
(bad)
push
dec
add
ret
xor
add
inc
sar
stos
stos
aam
sub
mov
lahf
pop
push
or
pop
mov
mov
inc
mov
mov
xchg
div
or
addr16
enter
xchg
sbb
movs
in
xchg
mov
int
mov
std
stos
xchg
cmp
push
dec
cmp
test
es
mov
mov
test
test
stos
push
mov
imul
add
daa
inc
add
sbb
inc
sbb
dec
scas
jmp
jp
mov
pop
(bad)
ror
or
mov
xor
and
aas
mov
lods
cmp
cs
mov
test
xchg
adc
cdq
nop
mov
adc
and
jnp
rol
adc
bnd
inc
xor
(bad)
div
cmp
lock
xor
adc
adc
pop
movs
into
dec
or
sbb
cmp
fiadd
mov
xor
push
xchg
and
loopne
cdq
push
sbb
les
repnz
ds
ss
add
pop
pop
mov
push
imul
ja
nop
jbe
jmp
or
ret
jl
cmp
push
inc
jmp
push
ret
ret
xchg
fs
add
pop
mov
repz
fisttp
jbe
neg
xor
lods
fdiv
and
jge
adc
lock
lods
jmp
sbb
aad
push
pop
jecxz
jae
fistp
and
mov
add
mov
hlt
daa
es
adc
add
xchg
adc
ret
test
mov
int3
aam
or
jecxz
push
mov
push
idiv
sbb
mov
retf
add
daa
cmp
push
push
cmc
mov
ins
and
lods
adc
mov
movzx
popf
(bad)
mov
xor
sti
pop
xchg
loopne
popf
mov
inc
cmp
mov
jmp
and
xchg
adc
push
sti
and
adc
int3
or
(bad)
sti
sbb
sbb
sar
cmp
jl
in
es
mov
retf
enter
mov
pop
jecxz
adc
jg
jle
(bad)
ret
movs
rcl
inc
pop
fwait
sbb
dec
push
or
imul
psrld
dec
ret
xor
(bad)
rcr
rcr
pushf
sbb
xor
fistp
add
sbb
lds
add
mov
push
sbb
inc
imul
or
cs
mov
clc
lea
add
cmp
sbb
push
sbb
push
adc
sub
add
xchg
adc
or
inc
cmp
add
mov
cld
aas
pop
(bad)
rol
and
into
jle
sub
jmp
pcmpeqd
adc
ret
add
or
add
dec
cmp
adc
add
push
in
dec
mov
loope
xor
pop
sub
adc
mov
fmul
fisttp
retf
jns
add
in
es
mov
inc
add
mul
sbb
add
jp
retw
je
add
sbb
push
dec
push
sub
sahf
cwde
inc
es
call
in
repz
cmp
inc
jg
pop
add
or
and
out
push
(bad)
push
mov
aaa
inc
mov
lea
push
or
xchg
int
xor
push
out
dec
sub
add
(bad)
jmp
cmp
push
dec
push
mov
jmp
sbb
adc
and
jge
ins
add
mov
shl
adc
ja
(bad)
ins
pop
push
and
xor
or
fistp
loopne
push
js
or
pop
mov
cmp
aas
add
mov
add
add
shl
jne
mov
lds
test
lds
retf
add
loopne
mov
push
push
mov
mov
(bad)
into
and
imul
cmp
jae
in
add
fwait
push
fisubr
pop
and
or
sbb
add
sbb
pop
pushf
xchg
mov
push
mov
or
(bad)
sub
add
jne
test
push
adc
ds
jnp
or
cs
nop
sub
xchg
push
rcr
bound
xor
add
and
scas
and
imul
cdq
mov
jg
mov
add
aam
push
mov
and
sub
adc
mov
mov
in
jmp
jns
sbb
inc
jle
js
push
and
call
jbe
mov
and
bt
sub
mov
loope
loopne
inc
call
sub
cmc
jo
sub
cmp
push
fwait
add
jmp
das
int
(bad)
aam
jae
pop
inc
add
cs
sbb
sbb
and
xor
pop
popa
dec
or
or
popa
pushf
aam
sub
dec
push
pop
xchg
mov
dec
hlt
jmp
pusha
pop
sbb
xchg
int
fdivr
aam
add
mov
mov
cmps
inc
xor
push
and
adc
scas
std
lahf
add
sub
dec
adc
out
cmp
call
aaa
ret
mov
lea
push
cld
lea
mov
loopne
xor
xor
ret
rcr
mov
test
push
push
and
movs
rcl
jmp
dec
jbe
fwait
add
or
mov
adc
or
lock
inc
mov
jbe
test
push
sub
mov
movs
ds
jl
fisub
push
mov
xor
push
loop
xor
xchg
or
cmp
cmp
jl
sub
fnstenv
push
ins
mov
loop
popa
jp
hlt
(bad)
lock
pop
xor
das
mov
imul
push
push
sbb
mov
xor
cmps
pop
pushf
or
shr
inc
jmp
sbb
sub
nop
fwait
or
sbb
jmp
dec
lock
rol
pop
xor
add
dec
cmp
ss
out
out
lea
xor
int
and
add
cmp
add
inc
jb
ret
cmp
leave
pop
ins
mov
ret
es
jmp
xlat
retf
test
loopne
fild
ret
dec
sbb
adc
inc
or
sub
jne
data16
rcl
fs
dec
add
sbb
mov
adc
aam
rcl
pushf
test
push
enter
imul
push
jne
jne
dec
sub
fsub
and
(bad)
or
adc
mov
sahf
outs
outs
jmp
test
sbb
fld
inc
or
dec
xor
ss
push
frstor
push
or
push
fst
or
out
shl
adc
xchg
xchg
xchg
adc
adc
and
xchg
and
clc
pop
sbb
es
adc
shl
mov
or
lock
xor
jle
adc
pop
outs
mov
sbb
mov
pushf
idiv
enter
loop
ins
mov
stos
test
push
mov
sbb
movs
push
pop
push
je
mov
cmp
ror
add
add
mov
in
cld
or
xchg
ss
retf
rcl
mov
rcr
(bad)
mov
out
pop
push
adc
pop
jge
test
(bad)
jne
or
jmp
or
jbe
add
iret
pop
adc
cmp
pop
cmp
jbe
add
popf
mov
(bad)
adc
jbe
or
sbb
mov
jle
ja
das
add
add
test
sbb
retf
mov
dec
sbb
into
je
lods
rcr
pop
or
or
or
cli
popf
jbe
cmp
dec
or
jne
or
mov
pop
sahf
add
add
popa
xor
push
ret
add
or
shl
not
test
sar
adc
jne
inc
cmp
jge
movs
mov
daa
push
and
or
fwait
jl
ret
sahf
into
xchg
icebp
popf
cdq
adc
ins
mov
lea
sub
pop
push
mov
and
shr
js
ss
pushf
sub
add
xor
je
sub
sub
pop
cmp
pop
add
ret
pop
cdq
addr16
and
mov
add
add
ins
adc
and
repnz
mov
test
das
jecxz
test
pop
mov
push
sbb
push
jo
pop
mov
push
push
pop
and
js
xor
inc
cmp
push
push
xchg
or
ret
ret
fwait
cdq
xchg
sub
mov
or
push
movs
mov
add
pushf
loopne
adc
dec
or
jb
dec
and
sub
adc
pop
push
cdq
push
xchg
mov
shl
add
and
aam
cmp
sub
(bad)
mov
dec
into
pusha
sub
mov
call
dec
push
mov
sbb
in
jne
xchg
hlt
push
pop
mov
aam
lock
inc
cmp
jl
or
push
add
and
and
scas
jns
stos
lea
addr16
inc
ror
mov
pop
or
jne
cli
push
or
add
ja
pop
push
pushf
and
call
dec
add
aas
cmp
and
add
mov
dec
into
shr
imul
loope
(bad)
(bad)
mov
mov
add
dec
cmc
rcr
leave
das
and
call
imul
xchg
add
retf
ss
xchg
loopne
jge
or
cmp
jg
sub
(bad)
xor
push
xchg
je
or
fmul
inc
je
lea
jns
loop
jl
movs
shl
pusha
or
dec
mov
dec
icebp
mov
aaa
inc
push
push
mov
and
inc
add
inc
loopne
lds
sbb
mov
sbb
pop
or
or
ret
adc
jmp
ds
push
mov
or
and
mov
sbb
mov
dec
sub
imul
sub
push
sbb
push
mov
test
and
inc
jp
ins
pop
rcl
inc
nop
sub
(bad)
mov
or
add
push
xor
pop
push
add
or
xor
fdiv
int
adc
mov
mov
inc
aaa
xchg
outs
xchg
stos
jne
ins
call
and
xor
mov
xor
cmc
(bad)
mov
add
adc
sub
inc
push
outs
sub
jge
cs
cmp
xchg
push
retf
mov
(bad)
push
fcom
sub
movs
movs
movs
xor
or
loopne
jge
imul
mov
mov
mov
leave
adc
adc
mov
mov
xchg
lahf
mov
mov
pop
es
(bad)
rcl
jmp
mov
mov
sbb
xor
mov
fs
pop
sbb
mov
cmp
or
aaa
pop
test
shl
ins
lds
sbb
or
dec
dec
add
sti
mov
retf
dec
or
inc
sbb
sub
push
call
sub
mov
shr
or
(bad)
fmul
mov
(bad)
jno
jmp
lock
jle
or
cwde
dec
or
add
daa
add
imul
xchg
adc
pop
shr
cs
int3
mov
push
je
scas
stos
xor
or
mov
shr
mov
sahf
jle
push
mov
outs
xchg
add
mov
lods
into
push
inc
or
je
push
in
jae
jno
jl
push
inc
rol
fbld
xor
sbb
in
out
pop
les
add
mov
movs
pop
loop
xor
push
outs
lea
clc
int3
sahf
add
inc
ja
push
or
and
rol
adc
cmps
push
push
sub
mov
jne
test
aad
and
ins
mov
stos
adc
ror
pop
test
je
and
pop
nop
cmp
call
sbb
xchg
add
pop
cmps
(bad)
test
xor
sub
push
pop
mov
je
mov
add
repnz
pop
pop
xor
fwait
retf
pop
xor
dec
or
shl
xchg
adc
jne
sti
xchg
pop
int3
jo
inc
jmp
sub
xchg
nop
cld
pop
xor
jne
or
imul
xchg
jl
pop
jb
add
adc
xor
inc
shl
arpl
gs
push
and
pop
sbb
gs
clc
fs
jmp
or
stos
(bad)
push
ficom
sbb
inc
pop
jbe
and
push
ins
and
and
lea
push
xor
shl
popa
jp
mov
test
xchg
psrad
sub
popa
jl
jle
jg
iret
pop
and
cmp
pop
repnz
inc
add
sub
imul
sub
push
pop
jp
mov
pusha
popa
addr16
adc
mov
cmp
ins
test
dec
outs
inc
dec
cmp
xchg
add
or
test
daa
lock
add
pop
mov
out
push
jmp
or
mov
je
rcr
jb
cmp
ja
inc
std
lahf
test
fadd
cmp
jne
dec
jne
or
push
or
call
retf
loope
neg
cmp
cmp
inc
loope
sbb
test
cmp
sub
clc
or
pop
je
or
out
sub
push
add
repnz
or
or
add
pop
push
and
mov
adc
push
ins
cmp
daa
fnstenv
sub
xchg
cdq
mov
mov
aaa
pop
or
adc
pop
mov
sub
je
dec
je
hlt
adc
hlt
jmp
or
jmp
jp
and
push
mov
jmp
fucomi
je
xor
jns
je
mov
cmp
arpl
mov
adc
xor
shl
sbb
cmp
shl
test
sbb
push
add
pop
lea
cmps
hlt
and
dec
xor
popf
out
retf
dec
jmp
dec
adc
fwait
add
push
cmp
pop
inc
popa
fmul
repnz
sub
je
sub
jmp
dec
cmp
sub
sbb
jmp
sbb
sub
movs
loopne
inc
mov
add
dec
push
pop
and
push
cwde
or
shl
push
loope
xor
(bad)
cs
push
shl
dec
fnstenv
cmp
je
das
sbb
jmp
js
or
or
or
mov
push
push
and
mov
dec
sbb
add
mov
ror
or
xor
rol
sub
call
int3
push
push
pusha
jg
and
and
cmp
ror
loopne
jl
mov
or
cmps
cwde
or
movs
out
pop
pop
dec
adc
sub
pop
into
or
in
inc
mov
mov
mov
add
or
in
shr
sub
cmp
hlt
adc
sbb
ret
shl
cmp
js
into
jae
sub
clc
adc
sub
ss
(bad)
xlat
push
pop
retf
push
out
jno
inc
xor
add
or
das
or
push
xchg
or
xor
mov
add
aas
shr
or
mov
xlat
mov
fcom
loope
pop
push
out
dec
jne
push
pop
repnz
xor
jmp
or
inc
rcl
shr
or
push
mov
adc
or
mov
push
inc
dec
inc
je
mov
push
dec
pop
inc
and
push
(bad)
mov
(bad)
(bad)
mov
push
movs
sub
push
or
pop
(bad)
popw
pop
cmp
cmp
dec
imul
das
mov
jne
(bad)
pop
cmp
or
and
lods
mov
adc
sbb
shr
adc
cmp
lock
add
sar
sbb
mov
sub
(bad)
clc
jmp
mov
data16
fsub
or
push
aaa
pushf
movs
xchg
scas
rcr
and
fcom
adc
xor
mov
xchg
scas
push
push
lods
ror
push
mov
and
mov
or
je
or
scas
mov
fmul
getsec
in
add
xchg
xchg
mov
xor
cmps
fstp
cmp
sbb
xlat
cmps
cmp
dec
jne
add
ja
sub
push
and
mov
xor
inc
push
fcomp
pop
jmp
jb
adc
pushf
inc
(bad)
mov
sbb
jns
mov
test
push
or
jle
jle
arpl
out
out
sti
gs
sti
dec
push
cmovnp
dec
push
add
fcom
call
add
(bad)
data16
cmp
adc
adc
or
and
add
pop
pop
push
sbb
data16
pop
mov
jmp
or
jp
lock
mov
mov
inc
mov
jns
add
mov
fdiv
adc
into
and
(bad)
shr
add
or
push
mov
ja
pop
adc
cmps
push
lea
bound
pop
dec
adc
scas
and
out
mov
gs
cdq
add
cmp
xlat
(bad)
ss
mov
inc
push
or
pop
dec
adc
std
xchg
out
popa
inc
jmp
data16
mov
jmp
fdiv
mov
dec
xchg
clc
fdivr
call
pop
(bad)
dec
pop
(bad)
fisubr
xor
xchg
and
fadd
pop
enter
add
jg
add
xchg
ins
mov
je
rol
ret
scas
test
lea
nop
xchg
outs
ror
cmp
xor
add
adc
(bad)
jge
add
mov
shr
xor
dec
aad
mov
out
xor
pop
rcl
out
aam
push
push
add
sub
sar
inc
adc
sub
loopne
ror
sbb
sub
cmp
add
add
jbe
add
in
dec
push
and
push
jp
xor
mov
aas
adc
dec
in
add
mov
dec
les
shr
loop
mov
loopne
rcl
(bad)
retf
jo
das
ins
imul
nop
add
mov
cvtps2pi
mov
les
jno
mov
mov
or
cmps
add
adc
in
out
dec
push
push
and
dec
test
(bad)
jl
out
lahf
push
jle
call
in
mov
xchg
sar
fwait
mov
das
mov
leave
push
mov
repz
repz
call
cmp
jmp
in
out
sti
out
aas
out
add
inc
shl
inc
add
mov
dec
pop
inc
mov
ret
(bad)
stos
adc
push
add
add
jbe
add
fcomp
push
inc
jp
xchg
data16
adc
inc
shr
mov
maskmovq
sub
push
fdiv
jmp
sub
adc
pop
div
cmps
inc
jne
push
and
sbb
add
mov
into
add
sub
inc
push
add
mov
iret
inc
jmp
dec
cmp
or
dec
mov
dec
jle
imul
mov
lea
or
mov
repnz
test
movsx
jb
lock
cmp
jb
in
xor
xor
jne
sub
imul
outs
sti
popa
adc
push
ss
ficom
mov
and
inc
adc
dec
iret
sub
dec
xchg
cli
push
sbb
mov
pop
add
out
pop
neg
stos
fidiv
or
xor
in
mov
or
mov
jo
push
(bad)
inc
repnz
lea
movs
movs
dec
push
sbb
stos
xchg
fs
arpl
sbb
mov
and
mov
inc
rcl
dec
jne
loop
inc
dec
int3
test
mov
popa
xchg
xor
rol
movs
ret
jmp
cs
scas
cli
test
call
add
ret
sub
mov
add
add
xor
and
lods
pop
hlt
inc
cld
shl
pop
add
and
call
cmp
iret
push
inc
or
mov
jmp
pop
mov
cmp
mov
aam
jge
sbb
popa
xor
jl
mov
loope
repz
repz
sub
outs
jge
dec
push
inc
sbb
mov
scas
ins
and
sbb
cmps
mov
push
mov
add
jb
pop
ret
mov
cdq
sbb
fiadd
mov
inc
adc
mov
lods
stc
dec
call
test
dec
lock
jmp
pop
mov
or
ds
or
cmp
mov
fld
mov
add
push
mov
xlat
jg
mov
out
sar
push
push
push
mov
pop
rol
loope
cmp
jp
add
test
in
xor
and
je
(bad)
das
inc
push
add
fwait
push
push
inc
sub
xchg
jno
cmc
in
pop
pop
push
es
jne
jae
std
outs
std
mov
jns
mov
fimul
in
sub
and
jmp
imul
stc
mov
ret
and
fldenv
and
xor
pushf
sub
jg
mov
cli
std
mov
aas
ja
je
mov
inc
mov
test
mov
sub
cmp
add
ds
push
mov
cmp
cmp
cmp
enter
fs
and
jge
cld
rol
jo
popa
or
sub
add
adc
cmp
jnp
(bad)
shl
in
push
sub
add
js
push
adc
cmp
xor
xor
mov
fisubr
add
call
adc
push
or
jg
and
mov
imul
or
out
or
jae
mov
jg
or
sub
ror
sub
jp
shl
in
or
inc
jmp
ss
(bad)
jnp
add
frstpm(287
mov
pop
rcr
adc
sbb
push
or
data16
push
sbb
push
jmp
loop
fiadd
popa
mov
in
jae
(bad)
sti
inc
adc
xchg
push
or
cmc
push
popa
dec
in
sbb
jmp
neg
sbb
adc
mov
mov
ror
dec
fist
nop
sub
inc
cmps
hlt
jmp
sub
(bad)
les
xor
jno
mul
sbb
inc
inc
(bad)
ret
push
dec
stos
stos
adc
add
sbb
xlat
daa
(bad)
fadd
xor
hlt
movs
add
test
xchg
loope
mov
(bad)
xchg
jo
cmp
and
pop
cmp
push
loope
or
dec
xor
sar
xchg
or
sahf
jmp
sub
(bad)
adc
sbb
push
xor
and
push
clc
(bad)
cmp
shr
xchg
test
retf
sar
test
push
pop
pop
sbb
adc
mov
xchg
dec
mov
sbb
idiv
inc
addr16
jb
neg
push
and
scas
mov
xor
xchg
lahf
pop
jne
push
mov
ret
sbb
out
sub
mov
aas
jmp
cmp
mov
add
push
mov
mov
cmp
jle
push
inc
sar
push
adc
pop
sbb
repnz
sbb
mov
cmps
mov
in
push
fistp
adc
in
fs
xor
inc
shr
or
cwde
mov
not
enter
cmp
and
les
adc
xchg
inc
lock
les
jb
cmp
cmp
scas
(bad)
out
xchg
sub
cmp
je
sub
push
push
(bad)
jb
cmp
jbe
inc
mov
xor
movs
jnp
popa
movs
popf
or
or
xchg
mov
cld
loop
dec
loopne
jecxz
mov
in
ror
add
adc
add
push
push
iret
inc
imul
int
adc
sbb
into
xlat
pop
adc
xor
das
jns
xchg
out
loopne
ret
(bad)
repz
popa
enter
out
(bad)
mov
adc
sahf
push
je
xor
fadd
pusha
fist
sub
lods
xor
xlat
mov
movs
lock
inc
push
push
lea
or
ds
dec
push
repz
add
xchg
mov
shl
jl
dec
jne
push
mov
scas
cmp
pop
int
rol
and
add
mov
inc
jmp
add
xchg
ret
cmp
pop
pop
mov
sub
xchg
cmp
and
adc
add
jno
fisttp
call
sub
scas
sub
out
add
jg
idiv
aas
inc
ds
call
mov
cmp
add
test
nop
inc
int
bound
mov
test
dec
popa
(bad)
cmp
mov
add
jmp
jp
jp
jp
mov
mov
loop
xor
dec
jmp
inc
or
and
add
pushf
into
adc
sbb
pop
pop
sub
out
ins
loopne
jg
neg
sbb
not
and
xor
pusha
push
push
shl
out
das
pusha
pop
lods
dec
sub
cld
rcl
and
aam
xor
mov
xor
imul
xlat
int3
sub
add
fld
pop
aaa
or
ret
ret
movs
or
ret
xor
js
or
cs
jae
and
fadd
imul
aaa
pop
test
dec
jmp
(bad)
es
or
cdq
cli
retf
outs
addr16
in
adc
or
add
mov
sti
or
rcr
div
(bad)
and
inc
imul
mov
movs
add
push
sbb
or
xchg
repnz
dec
cmp
add
rol
lock
mov
xor
dec
push
loopne
sbb
lahf
div
jbe
adc
cmp
push
pop
pop
cmps
mov
mov
pop
jmp
cmp
mov
pop
lods
mov
std
xor
mov
rol
mov
cmps
fsubr
or
ret
push
mov
sub
outs
test
gs
test
sub
or
clc
jg
ret
test
push
sbb
pop
retf
lds
xchg
movs
in
jmp
add
aas
adc
dec
jl
adc
mov
mov
cmp
and
or
inc
push
xor
jmp
sti
or
jmp
pop
push
jmp
sub
stc
sti
mov
pop
mov
inc
adc
inc
das
call
mov
mov
sub
mov
mov
or
aad
int3
dec
pop
je
xchg
mov
into
stos
jl
add
loope
add
shl
cmps
mov
pop
dec
imul
add
aaa
xchg
or
dec
push
and
mov
and
mov
in
adc
adc
xor
(bad)
out
adc
add
js
sbb
cld
and
mov
sar
lods
cld
aad
icebp
mov
shr
dec
jmp
movzx
test
or
or
push
sbb
push
jo
push
lea
jmp
arpl
sahf
test
add
or
adc
cmps
aas
pop
clc
push
jmp
ffree
xor
in
(bad)
mov
xchg
jl
icebp
mov
or
out
jmp
dec
fimul
mov
add
mov
paddb
pop
xchg
or
call
stos
push
push
lea
cld
jne
xor
cdq
sub
dec
jne
add
and
into
je
scas
or
fnsetpm(287
and
rcl
pop
or
in
mov
retf
jne
mov
mov
retf
inc
iret
push
push
xchg
xchg
jle
push
or
push
mov
xlat
sub
enter
xor
push
jmp
jle
sub
push
and
cmp
dec
enter
pop
push
ret
add
mov
or
jle
jmp
and
and
in
sbb
jo
jl
add
pusha
call
push
and
push
adc
and
sub
lock
and
test
mov
jle
sub
mov
mov
and
ins
inc
inc
sub
aas
mov
xchg
sbb
inc
jne
or
jmp
pop
adc
es
retf
mov
mov
pop
jnp
das
mov
xor
jl
jmp
inc
data16
cdq
xor
inc
xchg
jmp
pop
adc
or
ss
sub
and
ror
adc
cdq
xor
popa
sbb
push
jbe
mov
push
add
push
adc
inc
int3
aaa
sub
jbe
fwait
jbe
jo
adc
inc
pop
loopne
mov
jmp
popa
into
push
inc
dec
loope
mov
popa
cmp
mov
mov
sbb
sub
je
loope
xor
inc
into
jne
push
jnp
push
adc
adc
inc
push
or
leave
popa
xor
fmul
xchg
out
jo
or
push
out
fs
sub
jb
or
movs
out
push
lds
leave
hlt
adc
sbb
xchg
mov
push
movs
fadd
push
add
jb
cdq
jae
add
fldcw
out
inc
test
add
mov
das
push
cmps
icebp
xchg
dec
sub
dec
dec
retf
xor
nop
hlt
jl
adc
call
jl
add
loope
xchg
mov
push
lods
or
test
inc
aas
call
(bad)
xor
lods
or
pop
fdiv
jno
sub
xchg
fsubr
jp
or
sbb
(bad)
sub
mov
jno
push
jmp
test
add
xchg
sbb
jp
mov
jb
rcl
pop
inc
loope
imul
cmc
aam
(bad)
push
mov
inc
das
nop
inc
dec
or
out
xchg
jmp
inc
mov
cdq
mov
pop
adc
jb
xchg
mov
adc
add
add
pop
jb
add
mov
adc
push
mov
bound
stos
out
and
aaa
adc
std
inc
ret
lock
xor
shl
mov
inc
mov
sbb
mov
iret
mov
push
jb
mov
pop
or
inc
cmp
xchg
inc
dec
nop
mov
cmp
inc
xor
cmp
retf
push
pop
pop
mov
out
pop
adc
mov
sub
test
in
test
popa
pop
outs
pop
push
mov
adc
int3
mov
popf
lods
mov
add
push
rol
mov
mov
ins
mov
cdq
mov
ds
push
je
bound
cs
mov
add
pop
or
add
pop
add
shr
sbb
add
(bad)
popa
fadd
sub
push
push
nop
mov
sub
xor
adc
push
adc
dec
inc
jl
jmp
push
dec
cmc
call
mov
popa
lods
lock
mov
sti
mov
mov
je
cs
dec
push
sub
shr
xchg
mov
adc
loope
dec
dec
lock
mov
sub
inc
mov
add
call
sbb
lock
add
stos
lock
cwde
cmp
push
imul
call
jmp
cmp
outs
jnp
std
jmp
js
mov
push
add
dec
mov
xchg
ss
mov
mov
sbb
pop
pop
push
inc
(bad)
fcomip
out
loop
push
xor
adc
ficom
push
dec
pop
mov
imul
add
cli
call
cld
add
push
mov
mov
in
xor
mov
cmp
test
test
fistp
push
adc
dec
dec
les
pop
ret
cmp
cmp
and
pop
push
add
add
add
mov
dec
sub
push
ret
icebp
mov
xor
push
bound
jmp
push
pusha
es
push
add
jmp
daa
adc
push
sbb
cmp
pop
xchg
shr
sahf
arpl
ss
cmp
dec
sbb
mov
add
call
sar
add
push
cmp
or
push
pop
fdivr
jns
cmp
jno
je
sub
shl
jo
mov
outs
jnp
call
in
push
cmp
rcr
ins
dec
jg
arpl
clc
sub
lds
adc
and
mov
pop
cld
pop
add
ja
xchg
pop
js
push
push
sbb
aas
jl
push
cmc
cmps
add
arpl
push
mov
enter
cmc
add
sahf
xchg
arpl
outs
push
popa
je
stos
pop
cmp
xchg
pop
std
cmp
sub
jl
fcmovne
fidivr
push
xor
push
add
xlat
data16
mov
jle
xchg
and
mov
movs
jbe
jmp
adc
adc
adc
or
jle
adc
mov
loop
xor
push
(bad)
mov
clc
jmp
fwait
test
mov
ss
popa
fdiv
les
sbb
inc
leave
sbb
dec
and
mov
ins
push
xor
das
fdivr
lds
dec
adc
add
mov
jmp
cwde
fadd
or
xchg
xor
push
and
sbb
mov
jnp
add
cld
test
mov
mov
sbb
aaa
jecxz
cmp
push
adc
(bad)
je
retf
fld
cmp
or
into
mov
jge
mov
(bad)
sbb
push
dec
and
pop
dec
sbb
nop
jne
xchg
mov
xor
aam
or
xchg
mov
rcr
push
inc
xchg
popf
mov
push
pusha
stos
lea
hlt
lea
sub
or
pop
dec
adc
inc
or
ret
xchg
xchg
xor
(bad)
push
and
pop
dec
jl
push
adc
push
xlat
or
xchg
imul
inc
sub
mov
jne
or
bound
mov
mov
aas
cmp
sub
mov
je
retf
xchg
cmp
test
cld
aam
int3
adc
fimul
add
call
push
push
mov
pop
pop
int
jge
cmp
jmp
jae
retf
idiv
lods
lea
les
outs
or
jbe
ficomp
je
pop
dec
ja
push
fnsave
cmp
adc
mov
call
loopne
mov
mov
and
in
rcr
pop
(bad)
push
mov
loopne
sbb
mov
sbb
aaa
jno
adc
dec
sbb
xor
ret
dec
scas
jle
push
push
push
lock
ror
cmp
fidivr
lds
ds
or
add
push
adc
push
or
lods
push
loop
sahf
or
ret
mov
cmp
pushf
push
push
icebp
mov
pop
sbb
test
into
add
outs
add
out
dec
mov
imul
in
sub
je
push
ds
fs
(bad)
dec
jne
(bad)
push
jmp
cmp
adc
dec
and
jae
cmp
jmp
pop
jmp
fdivr
pop
push
das
les
je
daa
pusha
pop
stos
fisub
add
ret
add
push
les
adc
mov
std
push
(bad)
inc
pop
sbb
xchg
pop
add
push
int
fs
xchg
xchg
push
or
fisubr
sbb
stc
jne
imul
(bad)
in
jne
cmp
cs
mov
push
mov
sub
inc
jnp
movs
loope
hlt
fcmovne
aad
inc
adc
xor
mov
mov
push
pop
les
js
dec
movs
je
xchg
mov
push
inc
add
push
ds
pop
push
imul
int3
test
leave
push
pop
lods
inc
fmul
push
mov
mov
push
mov
aas
jmp
inc
push
dec
retf
mov
aaa
sbb
jmp
mov
inc
mov
iret
mov
imul
push
xchg
out
dec
fwait
ss
sbb
adc
test
lahf
push
wbinvd
lock
dec
mov
rcr
dec
sahf
dec
pushf
add
loope
ret
in
retf
sti
and
sub
dec
sub
sub
into
neg
and
mov
fistp
dec
ins
xor
pusha
or
les
add
jp
fadd
mov
xchg
or
sbb
push
sbb
or
scas
es
jl
xchg
mov
fmul
hlt
add
pop
jmp
dec
inc
hlt
adc
(bad)
and
jle
and
cmp
jne
js
cs
jp
ret
bound
add
ss
sbb
adc
jg
das
mov
mov
pop
pop
mul
and
repnz
dec
or
sbb
call
push
(bad)
cmp
xchg
xchg
xlat
test
xchg
je
je
ss
push
inc
adc
mov
inc
push
setne
add
cmp
je
or
jne
cmp
mov
xchg
sbb
xor
rdmsr
push
push
js
fsubr
jne
add
mov
test
clc
pop
popf
or
and
neg
retf
fsubr
jmp
push
hlt
cmp
lods
cmp
dec
rcl
fisub
push
js
dec
popa
push
stos
adc
jnp
ss
ja
loop
cmp
inc
and
icebp
add
js
add
jmp
hlt
push
fwait
mov
pop
xchg
and
xor
jge
ins
popa
add
js
std
inc
jmp
push
mov
fdiv
cdq
cmp
or
idiv
mov
jb
mov
mov
mov
jl
add
xor
xchg
dec
ret
mov
leave
and
movs
in
pusha
cmc
clc
ror
jb
mov
daa
js
or
add
push
hlt
pop
sar
fisttp
mov
loopne
pop
inc
cld
xchg
cmps
repnz
mov
add
(bad)
lea
lea
fimul
repz
mov
cmp
movs
mov
clc
inc
ins
push
fstp
outs
ret
cmp
jne
push
shr
cmp
mov
push
push
jne
int
xor
or
mov
inc
push
or
and
(bad)
jge
fsubr
sbb
mov
fbld
test
aaa
mov
add
sub
sub
sbb
sbb
aaa
retf
pop
dec
push
(bad)
pushf
inc
jne
add
add
setnp
mov
js
push
sbb
mov
movs
pop
mov
add
je
mov
add
inc
adc
movs
fs
jl
clc
sub
and
pop
and
sub
aas
sysexit
es
popf
cmp
push
(bad)
add
xor
data16
add
xor
mov
mov
push
or
std
pop
(bad)
in
test
dec
push
ja
xchg
pop
clc
adc
mov
add
inc
ret
into
add
sub
sub
add
nop
add
push
test
add
push
sbb
test
sbb
jae
cld
dec
aaa
dec
clc
sbb
lea
jg
mov
adc
(bad)
cmp
jg
push
add
xchg
push
rol
cmp
inc
(bad)
out
push
or
push
push
clc
ret
or
(bad)
idiv
or
mov
aaa
mov
gs
cmp
xlat
push
xchg
or
or
shl
es
iret
jge
jp
ret
aaa
inc
pop
cmp
push
sti
sub
cld
repz
ins
je
fistp
in
add
sahf
(bad)
rol
or
stos
add
and
sub
pusha
push
pop
(bad)
(bad)
or
push
sbb
fild
and
fistp
ret
jle
mov
rcl
inc
adc
jmp
xchg
dec
sbb
xor
xchg
into
cmp
fdivr
inc
data16
cld
call
pop
xchg
mov
fdivr
pop
push
jle
adc
push
mov
sar
lea
mov
sbb
addr16
cmp
loope
dec
mov
cld
pop
add
ret
mov
xchg
fisub
push
jle
ins
and
push
mov
and
push
cld
push
lea
movs
popa
jge
add
lea
mov
sbb
mov
adc
cs
pop
loope
cmp
or
sbb
cmp
push
mov
dec
inc
loope
mov
jo
and
in
je
cmp
jnp
mov
push
les
jno
xchg
add
nop
lods
pop
ret
add
jmp
dec
cli
shr
or
out
and
(bad)
cmps
sbb
movs
cmp
and
adc
(bad)
lods
outs
(bad)
call
jle
and
sub
inc
add
daa
or
ss
dec
int
xor
sub
jp
les
add
ins
dec
call
push
dec
fisttp
lods
xor
and
add
and
fnstsw
std
cmp
push
adc
psrlw
and
push
mov
pop
mov
dec
jnp
sub
leave
jg
ss
mov
rcr
and
nop
and
test
cli
jae
outs
or
add
pop
push
lea
push
aas
or
push
and
add
jnp
out
out
push
repz
stos
mov
jge
jle
push
add
dec
push
ins
xchg
adc
loopne
mov
lds
cmp
add
sbb
adc
les
loope
test
jne
gs
sahf
mov
xor
jne
movs
cmp
jne
push
cmp
dec
jp
adc
pop
int3
mov
cli
lods
enter
loopne
sti
and
fst
ficom
in
out
jne
sbb
xchg
hlt
iret
popa
dec
cld
push
xchg
fdiv
xor
jne
and
dec
fbld
int3
sbb
movs
dec
aas
cs
ins
rcl
stos
shr
lods
adc
or
or
mov
(bad)
ret
pop
dec
mov
sahf
jne
cmp
test
sub
sbb
in
(bad)
ror
ret
push
not
sbb
lea
pop
push
movs
jmp
add
jns
xchg
mov
(bad)
out
mov
pop
lea
lea
in
movs
pop
xor
(bad)
jp
or
sahf
adc
mov
cmp
mov
push
cmp
sbb
retf
dec
xor
add
les
or
(bad)
jl
out
and
daa
jns
push
add
xchg
mov
or
pushf
inc
(bad)
sub
xor
push
ins
add
xor
pop
xor
rol
ins
out
add
pusha
and
js
lds
push
sbb
shr
jnp
mov
addr16
add
ret
pop
fucomi
add
adc
lahf
imul
inc
adc
mov
push
cmp
sub
fnop
jle
and
inc
mov
jb
cmp
cmp
sar
aad
ja
dec
popa
clc
idiv
mov
mov
xchg
inc
hlt
das
fidivr
je
push
push
add
or
ds
test
pop
lock
adc
jnp
dec
enter
cmp
add
clc
push
sub
adc
add
dec
enter
sahf
mov
ror
(bad)
shl
jbe
and
clc
hlt
pop
sbb
dec
push
fs
dec
add
mov
test
fidiv
add
(bad)
out
fnsave
push
cmp
fcom
adc
fimul
dec
push
cmps
xor
push
jmp
ss
rcl
xchg
mov
mov
adc
cmp
call
adc
sbb
cmps
pop
mov
cmp
cmp
sbb
lods
test
dec
jo
fwait
call
cmp
test
lods
push
xor
bound
mov
sahf
pop
mov
in
push
push
add
sbb
mov
mov
arpl
in
dec
sub
push
cmp
push
jmp
push
pop
push
sbb
int3
adc
sub
and
dec
test
pushf
aas
in
cmp
mov
adc
push
push
sti
add
dec
popf
or
jmp
cli
adc
add
inc
jae
inc
pop
mov
or
push
mov
push
sub
xor
or
imul
pop
mov
mov
test
rcl
mov
lea
loopne
cmp
fisubr
aad
mov
les
sbb
push
ss
lock
cmp
pop
inc
cmp
ss
push
imul
shl
call
or
add
sub
xor
into
and
nop
(bad)
daa
or
cmps
lds
mov
shl
ret
mov
adc
pop
outs
fmul
cld
sub
jo
ror
cmp
push
jecxz
inc
adc
mov
ja
test
imul
popa
mov
int3
mul
jo
push
dec
push
mov
sub
cdq
add
push
loope
pushf
enter
sti
pop
hlt
jne
and
push
push
data16
push
mov
popf
cld
and
stos
test
pop
add
xchg
fwait
cmp
je
stos
mov
not
pop
cs
int
jmp
popa
dec
dec
mov
loopne
push
fist
rol
outs
add
xchg
mov
call
cmp
test
ret
ss
and
inc
call
popf
jecxz
pop
int3
sub
inc
fucomip
adc
addr16
push
and
pop
sub
adc
cmp
jmp
xor
dec
or
xchg
push
jge
loop
pop
cmp
inc
adc
and
clc
xor
sub
mov
ror
inc
jo
fld
icebp
rol
mov
add
(bad)
dec
loope
je
and
dec
pop
mov
or
or
mov
shl
push
jne
imul
movs
jns
sbb
jb
sub
das
sbb
dec
xor
pusha
xor
pop
je
add
dec
leave
mov
idiv
js
movs
jmp
mov
test
hlt
lock
in
sub
add
fmul
or
shr
aam
pushf
daa
loopne
and
push
and
xor
or
dec
push
xor
add
lea
loopne
fisub
test
add
mov
push
xchg
ja
cmps
sbb
jns
popa
pop
xchg
or
cld
xchg
sub
test
adc
pop
(bad)
push
lods
daa
fadd
inc
sub
and
or
pop
cmp
(bad)
jmp
mov
les
pop
cli
sbb
push
add
test
sub
push
jmp
add
push
push
pop
and
push
push
add
push
lahf
imul
mov
fsubr
lahf
test
je
cmp
data16
push
adc
or
mov
sub
mov
add
sub
adc
pusha
and
ins
and
addr16
clc
and
call
loop
cdq
or
inc
fdiv
ja
jne
(bad)
std
mov
inc
cmp
jne
adc
js
jne
inc
hlt
fisttp
xor
push
inc
mov
dec
mov
jne
push
and
inc
retf
push
add
jg
push
mov
call
and
test
test
sbb
clc
iret
mov
pusha
loop
sbb
push
test
adc
fucom
mov
sub
sub
add
leave
dec
xchg
adc
inc
mov
pushf
xlat
mov
in
lods
pop
and
mov
mov
loope
or
fdiv
add
sar
pop
xchg
mov
push
in
mov
sub
adc
fwait
xlat
add
xor
cmp
or
jo
add
pop
loopne
sub
loope
int3
push
or
sub
aaa
jnp
jmp
xchg
sbb
or
push
test
inc
push
js
mov
mov
xor
sbb
or
in
sub
(bad)
mov
xor
sahf
pop
mov
js
lea
xchg
push
mov
mov
add
iret
les
push
lock
push
push
inc
fdivr
inc
fdiv
push
add
add
xor
push
dec
lea
cwde
adc
adc
xchg
fist
sub
mov
dec
add
push
and
pop
adc
call
jle
dec
inc
or
push
adc
in
movs
pop
adc
(bad)
nop
pushf
or
push
movs
push
loopne
push
push
sbb
jmp
ret
mov
cdq
mov
test
fadd
or
test
mov
or
mov
mov
lods
or
inc
xchg
xchg
dec
dec
mov
jo
pop
in
adc
sub
fdiv
int
xchg
fstp
and
fmul
adc
adc
test
inc
test
jmp
(bad)
mov
cmc
ss
jmp
sub
mov
or
pop
dec
lock
jmp
push
loopne
cmp
das
loop
jl
adc
lods
shl
loope
and
push
enter
loope
lahf
mov
icebp
mov
or
and
mov
mov
nop
pop
inc
popf
adc
push
mov
pushf
fiadd
shr
out
sbb
sub
nop
mov
adc
adc
or
add
push
push
mov
xor
sbb
sbb
add
xor
xor
mov
push
jne
sbb
mov
mov
and
inc
inc
cmp
sbb
sub
loop
push
lea
cmp
lods
push
pusha
arpl
mov
data16
pop
mov
push
icebp
cli
jo
out
call
(bad)
fcomi
mov
adc
mov
ret
push
sbb
dec
(bad)
icebp
push
push
inc
inc
push
push
cmp
pushf
add
lods
xor
sub
loop
sbb
mov
cwde
ror
call
pop
add
lsl
retf
add
mov
pop
adc
lods
adc
mov
push
cmp
xchg
sbb
push
add
not
adc
js
loope
ja
test
xor
mov
je
retf
push
or
(bad)
arpl
pushf
ficomp
push
jbe
aam
jae
cwde
movs
sbb
pusha
lods
mov
or
sti
(bad)
lahf
clc
push
ret
js
js
push
movs
lock
lods
sbb
dec
jmp
aas
pop
pop
dec
sub
push
add
loopne
mov
push
jl
test
add
ja
pop
xchg
pop
pop
pop
push
or
test
and
(bad)
mov
repz
or
and
xor
mov
fdivr
and
push
xor
xor
add
cmp
cmp
cmp
or
shl
cmp
jne
mov
add
adc
call
push
cmps
sbb
jp
ins
xchg
sub
push
je
xor
mov
push
cs
pop
and
mov
add
ins
jmp
adc
push
push
sub
jo
add
push
push
or
adc
xlat
sub
inc
es
pop
push
xor
ss
icebp
xor
hlt
mov
mov
dec
mov
cmps
jecxz
or
pop
jns
sbb
nop
dec
cs
movs
jg
iret
ret
sub
sbb
and
shr
dec
cmp
ja
lahf
lahf
mov
stos
push
das
or
rcr
pand
adc
sub
pop
xchg
fdiv
pop
sbb
test
sbb
scas
in
mov
or
in
add
inc
add
dec
mov
mov
aad
sub
call
sub
imul
movs
lock
pop
cmp
(bad)
ds
cs
loop
sub
mov
jb
shr
cmp
lock
cmp
cmps
mov
movs
add
mov
cdq
jmp
test
push
inc
push
aaa
pop
into
xor
push
sbb
outs
stc
push
mov
push
and
hlt
ins
(bad)
push
mov
je
xor
mov
and
out
fstp
mov
sbb
jmp
aad
mov
xchg
xor
(bad)
pop
jnp
inc
jmp
lock
pop
mov
ror
stos
aas
mov
dec
or
imul
cmp
pop
sbb
jno
outs
pusha
adc
les
mov
mov
push
jmp
mov
out
out
jmp
sub
jne
or
cmps
jl
loopne
inc
cmp
mov
and
mov
jmp
pop
ficomp
jle
dec
add
jmp
shl
pop
inc
lds
sbb
push
pop
test
lock
jns
sub
jns
lods
fild
jecxz
sub
dec
repz
lds
daa
aad
sub
sar
sub
or
hlt
cmp
repz
dec
pop
bound
cmp
repz
out
leave
adc
inc
add
push
sub
xchg
mov
pop
push
iret
dec
sti
mov
sub
sbb
hlt
or
mov
or
mov
mov
in
inc
ret
add
push
loop
inc
sub
ret
pop
adc
jb
sbb
sbb
sub
aas
rep
test
sub
adc
push
adc
lods
call
je
outs
rol
mov
jmp
add
pop
clc
cmp
je
movs
dec
or
jnp
sbb
retf
dec
and
loopne
daa
jle
push
push
(bad)
shr
iret
or
jo
xchg
into
inc
fsubr
sbb
or
icebp
pop
fiadd
mov
push
(bad)
cld
xchg
push
or
enter
sub
add
sbb
add
rcr
test
fimul
mov
outs
inc
popf
cmps
sbb
xchg
sub
cmp
push
daa
cmp
pop
cli
jmp
push
push
int
pop
jmp
or
shr
add
sub
xor
pop
add
aaa
add
movs
lock
pop
cmps
cmps
lock
repnz
fld
push
pop
xor
mul
nop
imul
mov
dec
enter
add
call
stos
cmp
and
xchg
pop
push
test
pop
xor
pop
les
(bad)
push
jne
icebp
xor
mov
jecxz
jno
arpl
adc
or
dec
inc
push
enter
adc
push
js
shl
and
jo
ficom
stos
add
loop
sbb
push
adc
inc
add
pop
sbb
inc
(bad)
rol
pop
jo
push
or
into
and
in
add
or
adc
and
test
aaa
inc
das
cmp
mov
push
mov
nop
fst
mov
ret
pop
lahf
sbb
lds
cmp
(bad)
shl
jne
cmp
out
xor
jbe
inc
cmp
cmps
or
jo
out
scas
push
sahf
in
pop
push
mov
scas
mov
inc
push
xor
push
mov
jnp
dec
mov
jo
lds
mov
stos
daa
aad
jp
mov
stos
inc
outs
fmul
push
xor
pop
lock
iret
jns
scas
je
sbb
dec
movs
pcmpeqw
retf
cmp
in
or
and
jb
add
call
mov
adc
imul
cmps
mov
and
ja
(bad)
jae
popf
icebp
clc
sub
or
das
jbe
or
je
scas
xchg
sbb
or
jle
inc
nop
fild
pop
ins
cmp
dec
mov
pop
stc
push
jmp
not
out
sti
xor
mov
or
into
pop
je
cs
cmp
lods
test
cmp
cmp
bound
jo
ds
and
mov
shl
and
movsx
cli
add
mov
sti
stos
push
loopne
push
cmp
jg
cmp
pop
jne
(bad)
(bad)
and
je
adc
or
jne
das
pop
mov
adc
sbb
call
inc
pop
xor
sbb
push
(bad)
dec
(bad)
mov
ja
jo
cmc
sub
xor
and
pop
mov
mov
sub
repz
adc
sti
xor
lds
mov
out
js
ret
mov
test
and
nop
and
lahf
vmread
mov
sub
pusha
inc
cwde
dec
pushf
add
imul
pop
inc
mov
loopne
mov
cmp
cmp
cdq
ror
and
add
unpckhps
cmp
cld
ret
or
loopne
in
sub
dec
test
xchg
xchg
mov
fld
mov
rcl
or
inc
(bad)
xchg
xor
leave
stc
cmp
inc
mov
je
push
in
fst
push
sbb
push
ret
xor
jmp
mov
push
xchg
rcr
iret
arpl
pop
lods
vaddps
pop
not
add
je
mov
loopne
jo
adc
ins
xor
cmp
loopne
nop
xchg
ret
lods
inc
mov
push
mov
adc
loopne
xor
in
mov
aaa
xchg
jmp
xchg
adc
fbstp
rcr
sbb
inc
inc
lods
xor
xor
or
sub
(bad)
push
push
dec
imul
daa
mov
inc
xor
not
fdiv
inc
add
ror
or
xchg
sbb
push
xchg
adc
retf
or
js
xor
mov
sub
xchg
push
mov
ja
or
cmp
mov
and
xor
out
fst
adc
jmp
and
rcr
fnsave
sub
jno
test
fcomp
(bad)
jae
out
or
push
or
fisttp
jge
mov
pop
fsubr
pop
loopne
in
adc
clc
sub
inc
jge
pop
out
int3
add
and
or
(bad)
sub
cmp
inc
popa
cmp
jmp
fisttp
pop
cmp
clc
jle
sub
cmp
jne
mov
(bad)
jmp
add
cmp
jle
push
scas
pop
xor
add
push
push
add
outs
clc
sub
cmp
add
sbb
sub
inc
outs
loopne
es
ins
mov
sbb
pop
js
in
adc
push
and
xchg
cmps
jo
cwde
or
push
add
mov
mov
ins
cmp
mov
and
inc
sbb
fimul
lea
nop
sbb
push
loop
fwait
xor
mov
dec
mov
mov
scas
or
and
push
push
lock
imul
pop
ficomp
(bad)
jne
mov
aas
add
mov
jne
and
imul
sbb
pop
rcr
inc
(bad)
aaa
or
mov
xchg
jl
add
xor
daa
inc
sbb
shl
into
sar
(bad)
out
add
sub
push
push
cld
adc
add
sbb
mov
mov
push
(bad)
fsub
add
jne
inc
push
push
add
xor
cmp
cwde
cmp
fisub
add
sbb
or
inc
jo
mov
and
je
cmp
mov
sub
and
jp
iret
fisub
push
push
push
fist
mov
mov
push
or
add
adc
or
xor
out
into
out
dec
clc
inc
or
je
fild
or
rol
push
aas
adc
je
add
mov
push
test
(bad)
gs
ror
adc
xchg
mov
add
pop
ss
out
mov
add
jge
ins
inc
mov
lods
add
mov
adc
pcmpgtb
clc
test
add
cmps
xor
inc
cmps
cmp
add
inc
mov
mov
enter
sub
clc
and
cmp
add
adc
push
add
push
push
popa
pop
sbb
or
xor
cmp
ret
jbe
sbb
loopne
frstor
inc
inc
add
imul
xor
cdq
out
xor
ror
push
stos
xchg
cmp
mov
or
or
pop
inc
xchg
push
jle
sub
cmp
rcr
imul
shl
sbb
push
push
sbb
pusha
push
dec
dec
sub
shl
sbb
sub
call
xchg
xchg
pop
dec
push
adc
sub
or
sbb
faddp
movs
mov
adc
lahf
rcr
add
push
lea
stc
cdq
jnp
dec
cmp
jle
sar
mov
add
inc
xchg
or
jns
or
inc
js
ror
jl
mov
and
dec
dec
xor
shl
ret
sbb
pop
dec
clc
cmp
cdq
dec
mov
mov
jne
sbb
es
(bad)
scas
dec
cld
call
add
push
jp
int
ror
adc
sub
int
mov
pushf
lock
mov
jo
movs
sub
pop
jae
cmp
call
movs
and
jbe
scas
mov
cli
pop
push
xor
cmp
fild
and
push
xchg
add
pop
mov
xchg
mov
jo
sub
outs
jle
push
add
push
sbb
fs
rcr
mov
xor
cmp
inc
enter
imul
in
arpl
sub
icebp
jne
sbb
mov
add
loop
out
shl
dec
inc
mov
stos
sub
jle
add
add
ret
adc
mov
ss
out
sub
pop
call
xor
sbb
inc
call
add
dec
sub
nop
dec
aas
dec
jmp
fs
dec
stc
push
(bad)
sbb
or
outs
push
je
push
and
lsl
pop
ja
shl
mov
sub
push
sub
or
popa
sbb
ror
test
sbb
cmp
xchg
sbb
mov
add
cs
mov
ret
mov
add
cs
cmc
add
adc
adc
push
mov
in
jp
sbb
inc
fwait
push
cmp
sbb
jp
enter
or
xor
test
sbb
or
stc
mov
addr16
push
dec
nop
test
mov
add
add
ss
movs
push
sbb
add
or
pop
in
dec
and
clc
mov
xchg
adc
dec
xor
cmp
xor
stos
ins
gs
test
sbb
and
dec
dec
mov
jns
sub
xor
add
or
add
xor
enter
ins
jecxz
cmps
mov
daa
inc
rol
out
xor
or
adc
(bad)
xor
add
add
test
dec
ins
inc
cmc
test
js
xchg
add
xlat
add
mov
push
and
dec
or
lods
and
jbe
jmp
mov
cmp
stos
xchg
jns
sub
test
fmul
inc
xchg
je
push
lea
jns
sbb
fisttp
sub
neg
or
add
jno
inc
push
push
jne
adc
bound
sub
int3
adc
int3
out
sbb
pop
pop
and
cmps
pusha
cmp
push
outs
aas
mov
inc
std
or
pop
ins
or
and
js
clc
test
xor
fs
ins
adc
pop
scas
in
loope
adc
inc
or
adc
movs
inc
and
fmul
or
or
shr
test
pop
jb
icebp
and
sub
in
mov
not
cmp
add
dec
in
push
clc
mov
ret
or
mov
inc
(bad)
stc
std
jle
cmp
push
and
scas
retf
inc
scas
jmp
sub
sbb
and
daa
inc
fsub
aaa
sub
(bad)
mov
jbe
dec
aaa
out
nop
cs
mov
dec
mov
mov
(bad)
cmp
jge
mov
jmp
das
cld
mov
add
mov
sbb
clc
push
sahf
and
add
jbe
sub
cld
inc
sahf
sahf
and
(bad)
fld
xor
mov
sub
jae
enter
or
cs
and
add
jmp
push
add
sub
dec
dec
inc
pop
int
loope
hlt
dec
data16
out
add
mov
xchg
hlt
sub
and
push
pop
mov
jo
bound
shl
fdiv
test
inc
lods
xchg
sub
aam
jl
sub
ffreep
sti
and
mov
add
add
add
fcomip
mov
arpl
(bad)
jbe
inc
sub
and
jge
outs
add
pusha
rcr
cmp
sub
cs
mov
push
scas
ja
sub
cmp
push
add
clc
jne
les
cmp
ja
or
into
js
pop
lea
xchg
clc
mov
add
enter
push
push
push
jg
lea
mov
jmp
bound
sub
adc
imul
pop
inc
xchg
add
pop
and
ret
sub
sbb
sti
popa
jp
jne
jl
or
cmp
or
fld
dec
and
aas
add
das
test
and
add
sub
lahf
scas
ror
cmp
pop
cmps
rcl
or
mov
ret
out
jnp
jb
call
sub
push
ss
sub
push
out
adc
ret
jmp
mov
jle
jmp
and
push
loopne
fisubr
jb
push
push
pop
loopne
push
int
mov
sbb
out
and
xor
js
fcom
lea
xchg
loopne
add
popf
test
in
es
jbe
(bad)
push
push
icebp
sub
sbb
sub
or
mov
popf
push
mov
xchg
ret
push
aam
mov
fadd
out
sub
add
lahf
or
mov
fucomip
jo
jo
rol
test
ins
add
xor
push
push
xor
pusha
hlt
push
jle
push
mov
or
or
or
leave
add
cmp
icebp
jae
test
push
jae
push
jp
loop
jb
push
ret
aam
push
ss
inc
(bad)
pop
test
add
xor
xor
call
cs
lock
jle
jle
add
mov
lahf
inc
lock
dec
dec
fbstp
adc
pop
xor
jecxz
cmp
xchg
xchg
lods
mov
hlt
xor
daa
adc
fcmovb
das
add
add
mov
imul
jmp
inc
sub
push
push
in
and
adc
mov
pop
mov
les
or
pop
push
(bad)
scas
dec
lea
fisubr
jmp
ror
add
enter
stos
ret
js
sahf
sbb
cmp
inc
call
and
in
popa
es
xchg
js
and
cld
aam
xor
lods
(bad)
mov
test
inc
lock
psrad
or
(bad)
adc
cmp
imul
sahf
or
pop
mov
psraw
mov
add
mov
std
add
mov
push
popa
loope
ins
sub
in
sub
fs
sub
(bad)
sbb
out
dec
push
sub
or
lods
inc
mov
sub
jecxz
sub
call
xchg
xchg
out
stc
into
cvttps2pi
or
rol
mov
(bad)
cmp
out
or
rol
mov
push
mov
ret
mov
stos
pop
(bad)
sub
xor
sub
aam
sub
pop
pop
inc
xchg
dec
repnz
xor
pop
jle
and
jno
add
or
add
retf
sub
dec
add
push
aas
add
mov
or
mov
and
dec
popf
push
cmp
pushf
fbld
(bad)
inc
fisubr
and
or
add
cmc
jb
push
pop
aaa
sbb
dec
nop
retf
jne
sahf
ss
iret
shr
or
mov
mov
add
rol
cmp
push
or
pop
out
and
push
push
movs
cmp
fstp
stos
test
inc
cmp
sub
sub
fs
add
xchg
mov
push
sub
cmp
mov
push
dec
mov
ret
sub
je
push
add
jne
sub
js
shl
hlt
or
mov
push
outs
pop
ror
mov
add
push
mov
push
test
dec
loopne
add
cmps
and
mov
lock
xor
sbb
(bad)
jno
pop
or
jge
jecxz
aam
jno
push
add
out
ins
jbe
int3
mov
jo
(bad)
aad
das
and
pop
cmps
jmp
lock
mov
jno
retf
jl
arpl
mov
xlat
ret
and
inc
ins
mov
cmp
jnp
xchg
add
lock
movs
jl
inc
add
push
jnp
sbb
movs
idiv
add
mov
xchg
cs
mov
ins
and
in
mov
jne
outs
add
(bad)
and
ror
mov
ret
push
sbb
pop
test
and
push
jne
dec
sub
fdiv
add
cmp
(bad)
lock
inc
test
in
test
rcr
je
or
or
sbb
scas
add
fcmovb
and
in
pop
adc
mov
mov
or
movs
es
jl
addr16
pop
aaa
push
or
and
push
add
fmul
add
inc
adc
cdq
xchg
push
jne
sub
jmp
jae
fcom
rol
add
and
in
mov
das
push
popa
add
jg
xor
add
inc
fmulp
dec
gs
cmp
cmp
je
(bad)
call
add
and
add
jl
cmp
loope
lds
cmp
jg
push
loop
fst
rol
cmps
cmp
push
rdtsc
inc
inc
cmp
jge
add
adc
add
push
mov
mov
add
inc
add
js
xor
clc
and
pop
jbe
mov
fisttp
inc
js
leave
xor
inc
inc
jl
mov
ret
inc
jmp
jmp
dec
lock
clc
jmp
fild
cmova
or
lea
cmp
or
cmc
je
mov
or
xchg
inc
movs
ret
and
dec
sub
out
aam
xchg
lock
xor
mov
mov
repnz
cmp
cmps
sub
add
or
or
jmp
inc
mov
inc
push
mov
jbe
and
xor
add
pop
test
mov
add
ror
aam
sbb
mov
sub
cmc
or
ins
jle
mov
cmps
popf
nop
sbb
mov
xchg
mul
mov
inc
jo
lods
pop
cs
out
mov
mov
repz
mov
sub
or
call
std
inc
jnp
aad
or
loop
loop
or
mov
add
or
xor
or
fmul
ret
out
add
mov
xor
or
mov
xor
or
pop
mov
and
mov
mov
push
in
rcr
mov
and
cmps
add
mov
and
jnp
data16
push
adc
retf
pop
sbb
add
adc
dec
js
mov
fs
xor
lods
push
(bad)
js
push
jl
add
in
test
or
push
jo
mov
inc
add
xor
adc
loope
xor
adc
dec
inc
das
inc
lods
or
add
jno
jg
mov
mov
in
inc
cmp
lea
jmp
test
aam
push
test
xchg
push
jb
mov
in
push
test
pop
(bad)
lock
enter
fadd
xchg
dec
daa
stos
add
loopne
cmps
movs
push
push
mov
jmp
jecxz
xchg
mov
xor
xchg
add
jo
or
enter
ins
cli
mov
lea
add
push
push
and
pop
inc
shl
xor
or
adc
push
mov
adc
or
jmp
ja
dec
dec
pop
push
dec
data16
add
cmp
in
add
(bad)
push
sahf
les
sub
or
movs
xchg
fmul
test
add
add
nop
and
and
inc
call
or
sar
mov
clc
sub
cmp
inc
or
inc
pop
sbb
adc
add
push
cmc
xor
test
retf
in
jmp
sbb
mov
scas
mov
inc
mov
pop
xchg
inc
pop
mov
add
lock
mov
mov
mov
add
test
stos
sbb
xchg
lock
dec
inc
rol
out
dec
clc
xor
adc
and
daa
leave
mov
jmp
or
test
and
scas
pusha
cmp
in
fisub
mov
nop
outs
jae
in
mov
xor
sbb
ficom
xor
adc
lock
or
push
lds
pusha
mov
dec
push
mov
pushf
adc
sub
jo
push
icebp
fsub
lds
dec
or
outs
mov
add
mov
lahf
bnd
popf
adc
inc
mov
nop
fisttp
mov
pusha
mov
xchg
add
out
repnz
dec
test
cmp
pop
mov
or
adc
cmp
dec
inc
jg
daa
dec
sbb
inc
inc
add
inc
test
dec
jg
mov
mov
mov
cld
or
add
pop
leave
popa
ret
mov
cmp
daa
sub
and
adc
cmovg
cli
jecxz
or
dec
in
push
inc
bound
fistp
ret
repz
fnstcw
dec
sbb
xchg
cmp
push
ror
cmps
pop
or
fcom
jbe
or
ror
or
mov
dec
push
or
and
das
xor
adc
jge
mov
mov
push
adc
xor
add
add
sbb
iret
inc
dec
mov
add
xchg
outs
xor
retf
inc
inc
cmp
ins
cs
and
mov
push
jns
and
repz
xchg
loopne
mov
inc
xchg
pusha
or
or
inc
icebp
in
mov
or
sub
or
nop
popa
sub
retf
mov
cmp
adc
outs
add
xchg
dec
cmp
and
and
out
pop
cmp
in
arpl
mov
add
xor
and
xor
mov
call
xor
out
sbb
pop
nop
pop
loopne
add
leave
lar
in
pop
pop
sub
xor
and
retf
fbstp
push
or
icebp
adc
imul
je
push
pop
test
das
add
add
sbb
pop
cdq
mov
movs
test
adc
out
addr16
retf
sbb
inc
dec
or
adc
bound
mov
ja
xchg
add
dec
inc
push
stc
in
cmp
cmp
or
jmp
push
outs
imul
xchg
xor
inc
mov
cmps
mov
sub
sar
(bad)
mov
pop
fstp
rcr
cmp
ins
sbb
fadd
add
xor
(bad)
dec
push
cmp
sub
popa
xor
adc
mov
rcl
mov
pop
repz
pop
test
adc
mov
sbb
push
rcl
cmp
and
mov
loopne
test
and
adc
xchg
outs
sbb
aam
sub
add
add
adc
popa
add
mov
fwait
test
pop
adc
sub
je
aad
ds
sub
shl
dec
pop
sub
or
jne
and
cmp
repz
retf
loope
mov
cmp
sbb
xchg
fadd
mov
sbb
jo
ins
outs
and
mov
jge
xchg
test
xchg
pop
cmp
jle
shl
add
ja
outs
and
dec
jl
push
jl
add
mov
vpavgb
(bad)
jp
lock
jmp
pop
fsubr
mov
cmp
inc
add
add
test
sbb
jp
arpl
xchg
mov
sbb
mov
shl
fild
pop
add
lea
jbe
and
mov
mov
shl
jle
jl
push
shl
or
clc
daa
or
cmps
jl
sbb
cwde
pop
stc
lea
push
and
xor
fsub
cmp
jge
mov
dec
add
and
fisttp
cmc
(bad)
jbe
sbb
mov
cld
and
inc
inc
rcl
mov
lods
sti
push
in
sbb
pop
xchg
add
mov
loop
mov
inc
in
mov
mov
imul
addr16
jge
adc
adc
icebp
add
pop
sub
outs
add
popa
or
sub
ret
mov
mov
push
xchg
add
test
out
imul
ss
(bad)
(bad)
mov
or
nop
and
mov
add
andps
fstp
cmp
retf
les
sbb
inc
stc
add
ucomiss
xchg
cmp
mov
jmp
mov
sbb
mov
outs
mov
pop
cmp
push
pop
mov
cmps
test
dec
and
call
pop
and
adc
lds
fstp
xchg
sbb
aam
or
cmps
push
xlat
jmp
add
push
fwait
enter
or
or
pop
push
repz
ret
xchg
sbb
sub
push
xchg
mov
push
aaa
cwde
ja
fimul
aas
and
mov
call
xor
or
and
xor
push
div
ins
out
mov
push
es
xor
inc
pop
rol
aaa
dec
leave
enter
push
loop
cwde
outs
jg
mov
inc
cmp
jne
jmp
imul
nop
fcom
sbb
fnstenv
mov
sub
xor
sbb
add
inc
jmp
imul
ret
mov
mov
aam
sub
call
sar
ja
mov
sub
or
pusha
and
mov
loopne
dec
add
pop
not
jmp
dec
push
jmp
imul
pop
ret
pop
cmp
stos
jmp
pop
push
pop
add
jae
out
add
data16
pop
pop
sbb
inc
mov
inc
mov
cmp
cmp
ins
stos
inc
(bad)
adc
(bad)
sbb
ds
or
xchg
pusha
sub
jg
ins
adc
or
push
sbb
push
popf
and
push
push
adc
test
std
aad
inc
jo
cli
push
jecxz
mov
xor
ins
xor
or
rcr
mov
je
jne
scas
into
jns
push
sbb
(bad)
loop
push
mov
mov
push
out
push
psrlw
lods
test
cld
push
or
arpl
push
sub
gs
icebp
pop
in
cmp
dec
test
sub
pop
inc
pop
push
(bad)
xchg
or
dec
out
adc
sbb
cmp
jae
adc
push
jmp
inc
por
dec
mov
aas
jae
arpl
xor
outs
sub
mov
pop
or
mov
imul
adc
cmp
pop
daa
xchg
or
push
loope
add
xlat
cmp
retf
mov
jne
push
mov
or
mov
add
add
sbb
iret
scas
push
push
mov
mov
mov
shl
inc
or
pop
adc
lods
into
and
jmp
ins
jge
push
add
popw
test
ret
popa
sub
adc
adc
(bad)
std
fadd
mov
rcl
mov
cmp
dec
adc
xchg
inc
mov
movzx
add
shl
mov
add
push
fcom
stos
adc
inc
jo
enter
adc
into
pushf
or
call
adc
add
mov
sbb
pushf
add
and
iret
or
add
add
mov
dec
mov
fwait
call
sar
pushf
pop
mov
pop
inc
nop
inc
pop
setne
in
daa
into
push
div
test
xor
jo
sbb
push
loop
push
sti
shl
popa
outs
cmps
inc
test
or
in
arpl
pop
pop
pop
and
push
xor
les
inc
dec
inc
out
xchg
cmps
inc
push
enter
(bad)
cmc
push
push
mov
cmp
or
retf
loopne
dec
bnd
or
inc
cmp
cwde
pop
mov
rcr
xchg
ret
aam
sbb
adc
lea
jge
sub
ret
(bad)
aam
imul
mov
jnp
push
push
sub
add
or
hlt
std
jb
jbe
popf
sub
xor
add
jle
push
mov
dec
clc
(bad)
cmp
pop
out
push
add
data16
add
cmp
jo
add
jne
add
lock
cld
aas
or
loopne
inc
sub
push
or
xor
add
aad
js
scas
mov
test
add
jne
adc
and
jne
(bad)
add
or
sbb
call
pop
push
nop
sbb
mov
cmp
rol
and
jbe
sbb
cmp
repz
loope
and
jne
push
inc
inc
add
jmp
test
add
(bad)
jae
inc
jmp
mov
ror
dec
mov
jecxz
in
cli
pop
xchg
push
rcl
or
cmp
ss
es
push
pop
pop
pop
pop
add
aam
dec
pushf
fnsave
xchg
mov
fcom
xchg
pop
int3
cmp
sbb
sub
push
xor
pop
add
mov
imul
adc
adc
push
adc
ins
jae
in
jb
test
in
aaa
shl
or
and
popa
rcr
or
stos
jg
int
ins
ins
fldcw
and
or
or
aad
add
push
add
mov
adc
add
mov
add
and
add
pop
adc
ret
pusha
sti
mov
add
fisubr
pop
add
or
jmp
or
push
add
popf
sub
mov
retf
je
adc
adc
pop
das
pusha
mov
pop
and
mov
xor
sub
or
std
sahf
test
stos
mov
mov
or
jge
inc
int
lea
lds
nop
es
aam
call
inc
jle
xor
pop
mov
pop
jo
and
or
sub
out
jo
or
daa
sub
push
adc
mov
or
lahf
push
mov
mov
cmps
pop
es
dec
jge
push
add
fnstsw
test
sub
sub
dec
test
imul
push
in
mov
and
fimul
push
mov
cmp
sub
sbb
mov
in
iret
push
in
add
dec
push
sbb
mov
leave
mov
jae
cmp
xor
ret
sbb
in
or
fwait
xchg
xchg
pusha
daa
or
pop
sub
xor
sub
mov
push
lods
pop
push
xor
imul
or
fdiv
pushf
nop
adc
sbb
add
loopne
mov
test
scas
sub
dec
dec
push
xlat
pop
lods
sub
daa
jg
out
adc
mov
inc
cmp
mov
pop
scas
mov
push
loopne
mov
scas
neg
ss
xor
add
ret
into
repz
lods
push
outs
pop
push
mov
sbb
add
and
mov
cmp
repz
hlt
ret
int3
shl
sahf
out
rol
out
iret
repz
add
or
sub
dec
cmp
repz
jbe
sahf
mov
mov
xlat
mov
clc
out
sahf
out
mov
sahf
out
sahf
push
mov
lahf
out
rcr
test
adc
cmp
repz
push
pop
outs
iret
repz
jl
test
shl
sahf
cmps
stc
cmp
push
mov
sahf
out
pop
push
jns
out
mov
iret
repz
push
xor
push
cmp
xchg
mov
iret
repz
add
out
inc
pop
jb
mov
cmp
dec
cwde
mov
jp
mov
jns
out
push
dec
push
xor
sbb
repz
repz
retf
iret
repz
xchg
xchg
inc
call
sbb
or
sar
out
enter
iret
repz
sahf
xchg
test
repz
push
inc
xor
adc
mov
cmp
enter
pop
mov
(bad)
out
ds
repz
shl
repnz
fiadd
cs
repz
dec
pusha
ins
js
cmp
xrelease
repz
aam
lock
rcr
inc
dec
pusha
ins
idiv
pushf
inc
fdivrp
mov
sahf
out
sar
sahf
out
js
pop
dec
xor
jl
out
adc
lock
iret
enter
test
iret
repz
pop
dec
ss
iret
repz
clc
mov
sahf
out
lods
pushf
mov
dec
mov
pop
dec
ds
idiv
fdivp
nop
mov
sub
sahf
out
dec
inc
int3
jle
les
jns
cwde
mov
sbb
jo
mov
sub
cdq
pushf
add
add
lods
or
loopne
inc
cmp
push
or
mov
mov
jbe
xchg
cmp
stc
sahf
jnp
inc
out
push
movs
push
call
stc
ss
ins
jnp
pop
push
daa
dec
jb
push
inc
add
out
inc
add
pop
add
push
cs
jbe
cmps
fnstcw
fs
dec
cmp
dec
mov
push
adc
dec
cwde
xchg
push
add
inc
jnp
aas
loopne
dec
and
cmp
cmc
inc
iret
mov
push
mov
cmp
cmp
adc
cmp
shl
lahf
popf
and
xchg
inc
push
imul
jnp
sti
loopne
inc
adc
push
out
sbb
stc
aas
das
enter
repz
lahf
sub
dec
pop
das
pop
add
aas
(bad)
into
mov
push
jb
jbe
gs
popa
addr16
jle
out
pop
push
gs
add
and
in
aaa
dec
push
outs
pop
push
inc
add
add
ins
add
push
inc
leave
and
sahf
push
js
push
mov
jae
and
or
enter
add
sahf
add
(bad)
bound
pop
rcr
jge
adc
push
icebp
dec
inc
ins
fs
popa
jb
je
sldt
aaa
shr
add
add
popf
out
mov
push
add
ins
outs
pusha
mov
push
push
add
test
movhps
lds
cs
imul
loopne
sbb
push
stos
xchg
xchg
or
bound
mov
or
call
mov
jo
imul
adc
jge
sahf
and
pusha
pop
mov
(bad)
pop
call
test
hlt
jg
sub
mov
push
jae
jb
js
gs
inc
dec
fisttp
dec
rcl
jae
jne
mov
icebp
call
and
cmp
cmp
inc
xor
ds
dec
cmps
stc
cmp
jns
repz
iret
sar
lds
inc
pop
test
call
add
out
lock
je
push
add
sub
rcr
jo
daa
mov
and
out
in
test
js
sbb
in
pand
jle
cs
int
jge
push
js
push
mov
mov
ds
pop
push
inc
mov
inc
rcr
inc
test
push
je
mov
jns
aad
cmp
pop
sti
mov
push
mov
sti
add
push
outs
fs
shr
mov
aas
outs
dec
push
inc
dec
fmulp
sar
in
mov
push
sub
inc
push
jne
push
ds
sar
inc
cdq
aaa
ds
inc
aas
xlat
iret
ror
ja
sub
sub
cmp
das
inc
jmp
bound
push
mov
and
dec
inc
add
(bad)
das
mov
dec
outs
je
jne
jo
jb
gs
(bad)
dec
inc
in
cwde
pop
dec
scas
push
jns
add
or
lds
mov
pop
dec
mov
cs
test
mov
push
adc
arpl
bound
js
mov
cmps
push
je
popa
jb
in
dec
mov
push
cmp
xchg
push
sahf
nop
inc
mov
dec
jb
mov
or
and
pop
enter
add
aaa
sar
sub
and
and
inc
call
test
out
call
jnp
(bad)
pop
pop
adc
sbb
cmp
pop
jnp
jns
das
das
push
cdq
mov
sbb
es
and
add
cld
xor
dec
xor
sbb
inc
call
cmp
sbb
lds
outs
add
bnd
neg
mov
push
lahf
adc
stos
adc
mov
data16
ins
fs
xchg
arpl
xor
and
jae
imul
cmp
and
daa
dec
inc
dec
inc
ret
and
sbb
jb
aam
scas
gs
stos
in
mov
inc
gs
and
fimul
data16
inc
scas
inc
outs
jne
inc
imul
dec
adc
inc
push
outs
imul
rcl
cli
outs
add
mov
mov
jns
out
sahf
mov
arpl
push
push
inc
push
xor
push
push
push
push
dec
inc
pop
mov
outs
lods
out
ins
jl
ins
pop
inc
pop
addr16
lock
aad
sbb
dec
sub
rcl
and
es
add
xchg
imul
mov
std
add
ss
cmp
data16
sub
(bad)
mov
push
xor
fisubr
in
in
loopne
cmps
mov
imul
add
mov
pop
dec
inc
lock
push
pop
jae
js
mov
xchg
dec
sub
inc
dec
dec
or
xor
imul
mov
rol
dec
xchg
clc
xchg
sub
dec
popa
jo
(bad)
push
outs
xchg
les
or
data16
mov
dec
dec
dec
cs
dec
push
or
pop
out
inc
xchg
xchg
push
pop
fwait
jl
xchg
dec
outs
jne
je
loopne
in
fild
movs
mov
mov
pusha
cs
mov
test
sbb
xchg
mov
cmp
adc
pop
inc
pop
fcom
loop
das
movs
pop
add
scas
popa
dec
cmp
adc
pusha
pop
cmp
sbb
mov
movs
lods
(bad)
(bad)
fadd
popf
not
jb
imul
je
ror
mov
jae
add
out
stos
jmp
dec
and
jns
ds
fs
or
aad
sbb
push
inc
inc
push
ret
bound
dec
outs
jbe
dec
sbb
xchg
sub
addr16
stos
pop
mov
ins
or
gs
stos
aas
xchg
pop
mov
popa
shl
jne
mov
popa
outs
adc
iret
cmp
cmps
xchg
pop
mov
addr16
popa
je
jb
xor
mov
jae
push
gs
sbb
jle
in
push
jne
mul
push
jne
xchg
outs
pop
dec
inc
aas
add
add
call
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
pop
sbb
mov
inc
add
dec
push
push
inc
push
push
(bad)
jo
adc
mov
push
mov
or
adc
stos
ror
inc
sbb
xor
inc
and
push
xor
cmp
sub
or
ret
adc
popa
ins
imul
push
aaa
outs
outs
je
in
aaa
cwde
jp
push
push
arpl
imul
imul
popa
fisubr
retf
adc
fs
jo
push
jbe
jb
inc
jmpw
adc
arpl
ins
push
mov
or
gs
das
mov
add
sbb
mov
out
mov
jo
mov
jae
push
fs
mov
cmp
lock
scas
inc
aaa
push
mov
or
je
(bad)
arpl
das
fmul
sbb
imul
popa
adc
ins
add
adc
je
xchg
ins
ins
pop
xor
sbb
push
adc
popf
ret
push
pusha
pop
push
cmp
pop
push
movs
enter
mov
xor
sub
push
data16
or
int3
jne
dec
dec
jg
sbb
cmp
push
imul
inc
sub
and
dec
imul
mov
sbb
mov
dec
test
add
movs
pop
cmp
dec
pop
imul
outs
ds
mov
pop
add
push
pop
or
rol
add
aaa
push
bound
push
push
add
add
add
dec
mov
push
pop
pop
or
aaa
scas
cld
repz
push
push
pop
push
and
add
pusha
push
jo
out
into
int3
sti
or
sub
add
sbb
sub
test
push
add
lods
daa
xor
add
or
xchg
jle
push
inc
mov
jne
jmp
push
jae
outs
gs
es
push
sbb
inc
jnp
fcomp
add
jns
push
das
icebp
fmul
xor
data16
(bad)
ins
outs
mov
pop
push
jmp
ins
fs
cmp
aas
sub
add
inc
fimul
in
hlt
cmps
je
ins
mov
xor
jno
ja
jnp
sub
xor
pop
inc
setle
pusha
mov
cmpps
out
sub
ins
outs
xor
inc
ss
cmp
add
xor
mov
adc
les
push
fisttp
mov
stos
pop
stos
outs
gs
fstp
cmp
cmp
jns
xchg
mov
lods
shl
adc
ret
addr16
inc
add
sbb
mov
pusha
fsub
hlt
add
pop
lods
mov
enter
rol
repnz
loopne
pop
sbb
sub
imul
mov
dec
ds
outs
xchg
loop
jbe
dec
jne
daa
pop
add
dec
aam
inc
mov
js
and
sti
pop
sbb
ins
or
and
inc
dec
cmovns
add
push
das
push
xchg
repz
push
dec
xchg
push
pop
add
add
loopne
cmp
pop
sub
pop
add
mov
(bad)
cmp
lahf
es
mov
call
retf
fwait
das
xchg
mov
js
nop
leave
jae
out
mov
add
add
into
push
mov
cwde
das
xchg
mov
mov
xlat
fsubr
xchg
iret
mov
or
dec
fist
sub
cmp
sub
in
xchg
or
pop
mov
out
jns
or
pop
rcl
clc
cmp
mov
lahf
nop
and
or
pusha
and
jo
add
add
test
shl
add
pop
call
inc
hlt
jbe
xchg
daa
dec
fcmove
push
jb
cmp
mov
inc
hlt
cmp
dec
sahf
sahf
sahf
iret
jbe
sub
cwde
daa
mov
inc
scas
xchg
or
fcom
inc
outs
fst
outs
sbb
cmps
nop
lahf
xor
enter
lock
xor
adc
mov
or
jae
sub
and
xchg
daa
cwde
fistp
bound
or
jo
cs
xchg
out
cmp
rol
daa
rcr
call
jecxz
mov
sub
mov
cmp
sub
aas
mov
push
jb
mov
cs
pop
nop
scas
dec
mov
rcl
inc
pop
jo
mov
mov
mov
punpcklbw
ds
add
jo
nop
sets
inc
mov
rol
pop
call
adc
pop
add
in
sbb
enter
mov
pop
daa
ja
daa
adc
sub
fdivr
mov
mov
frstor
push
enter
cmp
mov
and
stos
loop
xchg
sub
cmps
mov
inc
movs
xchg
sbb
lds
nop
daa
jmp
cwde
daa
push
inc
loopne
jnp
or
add
push
enter
ins
aaa
retf
push
cmps
mov
outs
add
dec
es
pop
push
cs
inc
cs
dec
and
or
pop
and
and
xchg
pop
and
xchg
pop
and
enter
or
xchg
fisubr
add
adc
call
enter
stos
leave
adc
enter
or
pop
mov
add
aaa
or
jmp
push
in
test
and
dec
dec
push
mov
dec
popa
dec
pop
stos
jg
jo
fs
psubsb
adc
mov
inc
enter
mov
pop
add
mov
fcmovbe
cmp
outs
xor
mov
adc
repnz
call
outs
jb
dec
cmp
pop
rol
fs
jae
scas
pusha
fstp
sahf
div
loopne
push
outs
sub
push
stos
mov
movs
xchg
xchg
pop
outs
push
sub
outs
test
fcom
jl
adc
xchg
jb
dec
test
dec
lock
add
sbb
in
arpl
and
sbb
nop
sub
stos
mov
call
fdiv
or
in
mov
jmp
lods
inc
mov
lods
in
and
jo
les
and
mov
inc
push
scas
enter
inc
push
ror
(bad)
jo
lods
in
mov
mov
push
js
mov
hlt
or
jo
jo
push
dec
dec
stos
and
dec
scas
pop
and
adc
scas
and
sbb
xor
cmp
jns
test
mov
push
icebp
xchg
pop
dec
inc
jmp
clc
dec
or
dec
scas
nop
dec
push
and
scas
nop
js
jno
xor
mov
mov
and
or
fcmovb
push
jb
inc
dec
or
mov
push
imul
dec
dec
push
inc
push
dec
sbb
push
xorps
jmp
(bad)
adc
pop
mov
push
push
dec
dec
inc
push
inc
mov
add
mov
pop
sbb
fs
addr16
add
dec
inc
push
jmp
cmp
push
push
fwait
int
pop
and
dec
fwait
pop
pop
pop
jbe
mul
ins
iret
jmp
push
sbb
pop
stc
inc
add
daa
data16
ins
sar
cmp
int
lahf
pusha
jle
inc
add
xor
cmps
stc
xchg
adc
in
adc
sti
mov
fs
repz
ss
cmp
cmp
js
fild
jae
cs
int
jno
std
rcl
cmp
das
adc
push
pop
inc
push
jmp
stos
add
cmp
outs
jae
jecxz
(bad)
jmp
jae
jae
pop
arpl
jae
cs
or
dec
pop
nop
mov
sub
inc
addr16
pop
and
mov
int
mov
nop
ficom
jae
arpl
dec
and
outs
push
and
vxorps
and
and
or
in
mov
jae
jbe
and
xchg
and
repnz
mov
mov
push
and
retf
and
mov
and
test
aas
ins
adc
push
(bad)
push
imul
ins
push
push
inc
dec
add
pusha
dec
out
pop
xchg
or
add
add
pop
in
and
cmp
or
mov
adc
pop
adc
fild
daa
pcmpgtd
das
mov
in
xor
test
inc
ret
call
add
ds
xor
ficomp
mov
adc
ror
cs
idiv
loope
pop
add
movs
sar
add
mov
pop
rcl
rcl
adc
add
or
mov
imul
adc
or
nop
pop
enter
(bad)
call
add
das
enter
aam
add
mov
jl
push
scas
cld
mov
and
cmp
xchg
pop
add
imul
mov
iret
dec
test
sub
cmp
pop
sbb
test
repnz
push
pusha
and
add
dec
enter
pop
add
mov
inc
shl
and
push
inc
jmp
adc
retf
and
push
enter
ret
push
push
rol
pop
lods
cmp
aas
pop
sbb
push
retf
push
or
or
push
cmp
push
jno
jl
mov
nop
inc
movs
or
pushf
mov
imul
xor
xchg
xchg
sbb
push
or
imul
or
imul
ret
adc
dec
pop
and
inc
sub
(bad)
dec
add
sub
add
loopne
call
les
sbb
repnz
sbb
add
xchg
pop
(bad)
mov
aas
inc
xor
add
add
lock
pop
jmp
add
add
dec
add
push
movs
pop
sbb
or
add
int
cmp
sbb
add
adc
pop
rol
cmp
scas
retf
(bad)
mov
pop
imul
or
push
cmp
or
shl
repnz
xor
call
xor
or
add
add
fstp
leave
sub
add
push
sbb
jns
std
sbb
xchg
test
mov
test
rol
lock
xlat
ins
ja
cmp
in
jb
add
xor
or
mov
sbb
js
in
xor
jns
test
pushf
add
add
add
ret
sub
jno
cmp
adc
inc
jbe
push
jno
stc
shl
adc
add
mov
add
or
clc
push
cld
clc
inc
sbb
adc
fsub
pop
mov
xabort
fwait
add
mov
call
xor
sub
(bad)
adc
test
nop
add
jae
mov
fsubr
adc
popf
pop
sahf
dec
jne
jmp
inc
loopne
add
adc
or
adc
and
cmp
or
js
stos
add
icebp
test
jg
das
xor
ret
call
imul
xchg
out
push
imul
dec
mov
(bad)
or
dec
jne
in
aaa
push
popa
fs
or
xchg
sbb
ficom
in
xchg
dec
cmp
pop
mov
mov
sub
and
ins
arpl
cmp
nop
out
in
sbb
xchg
sbb
adc
outs
data16
and
sub
dec
in
cmp
sub
and
adc
adc
xor
xor
pop
loop
pop
inc
xor
and
pop
fcomp
call
fsubr
add
sbb
in
mov
xchg
push
int3
fisttp
call
lock
sub
dec
mov
in
mov
(bad)
loope
lock
sbb
jne
xor
xchg
(bad)
cli
inc
and
inc
mov
push
push
mov
push
xor
sbb
test
mov
inc
add
sub
loopne
push
and
mov
gs
lock
jns
add
imul
cmp
jl
add
sub
xor
hlt
dec
sbb
and
int3
mov
or
lock
sbb
cmps
sbb
mov
fdivr
ret
fwait
sbb
inc
add
push
inc
mov
and
mov
cmp
pop
xor
sub
ret
fmul
push
dec
js
mov
cmp
retf
add
mov
xor
sbb
or
aam
mov
sbb
dec
pop
add
cmp
inc
jb
cld
jge
push
pusha
dec
leave
sub
xchg
sti
mov
in
dec
jmp
lods
sbb
call
mov
das
xchg
push
ret
and
sti
psubusb
add
inc
shl
frstor
dec
inc
shl
inc
cdq
in
sub
mov
movs
les
(bad)
loope
xor
cli
iret
sub
cmp
add
lock
icebp
inc
cvtpi2ps
inc
sbb
mov
add
push
repnz
cli
mov
in
jmp
cmp
mov
mov
mov
dec
test
add
or
sub
test
push
cdq
imul
fsubr
repnz
fdiv
push
neg
push
es
or
rep
cmp
in
lock
sub
mov
adc
adc
loope
xchg
dec
lock
gs
call
xchg
loopne
mov
(bad)
xchg
or
int3
xchg
call
sub
ins
fwait
add
mov
or
ds
or
add
in
pop
push
pop
nop
cmps
inc
push
in
xchg
add
out
rcl
pusha
pop
jl
int
ret
cmp
call
push
mov
sub
and
loope
movs
xor
inc
jnp
pushf
loopne
add
enter
mov
add
enter
and
inc
xor
pop
enter
inc
loopne
sbb
and
leave
arpl
enter
fisttp
add
dec
mov
cmp
call
pop
and
add
jae
cmp
xchg
or
mov
push
xchg
or
retf
fisttp
push
cmp
lds
mov
loopne
leave
and
in
jo
sbb
pop
gs
fisub
jns
out
jge
and
lods
or
inc
sub
pop
pop
xor
fsub
pop
push
adc
pop
mov
dec
jle
jae
or
add
mov
ror
inc
bound
dec
data16
xchg
mov
data16
adc
test
retf
imul
hlt
stos
and
sub
mov
add
mov
ins
push
cmps
es
inc
jb
push
push
outs
xchg
mov
adc
inc
jb
outs
jge
add
push
es
add
sbb
cwde
add
loopne
or
adc
sbb
inc
dec
leave
mov
movs
add
ss
jle
add
push
xchg
test
data16
sub
add
dec
movs
sub
test
dec
push
nop
xchg
add
sub
sbb
push
or
add
add
add
leave
shl
data16
jb
jl
pop
mov
ret
sti
xor
and
inc
push
cmp
inc
cld
add
or
enter
repnz
add
es
xchg
(bad)
dec
imul
call
mov
pop
retf
in
test
add
leave
in
bound
enter
mov
pop
enter
push
or
add
and
call
ret
outs
addr16
add
add
shl
pop
add
mov
add
out
jnp
in
leave
sub
call
je
xor
xchg
sbb
mov
fist
vpperm
out
or
repnz
movs
repnz
(bad)
mov
mov
mov
push
das
and
cmp
shl
pusha
and
sub
sbb
mov
xor
in
dec
sbb
add
int
add
out
pop
mul
push
add
or
addr16
mov
ret
bound
out
xor
sub
pop
ret
and
retf
and
mov
dec
push
dec
and
and
sub
jmp
daa
stc
mov
add
in
jno
inc
jmp
nop
and
out
and
cmps
cmp
jmp
inc
adc
sti
dec
scas
fdivr
jno
sti
dec
fs
dec
pop
sti
dec
or
mov
and
jno
mov
jae
leave
out
scas
test
pusha
jae
scas
mov
fs
(bad)
(bad)
jmp
adc
das
or
ins
jb
add
in
cmps
test
fld
mov
add
push
or
jno
retf
pop
enter
sti
dec
test
cmp
leave
dec
pop
sti
dec
xchg
iret
cmp
je
dec
fdiv
push
inc
push
push
dec
in
scas
cld
sbb
(bad)
call
pop
sti
dec
pop
nop
jl
cmps
(bad)
(bad)
jmp
movs
mov
mov
and
sbb
cmp
bnd
dec
int3
jno
cmp
jb
jno
jno
out
jb
jno
jno
stc
ror
add
inc
and
out
(bad)
call
(bad)
(bad)
call
and
inc
xor
cmps
add
dec
jle
nop
add
ror
dec
add
and
pop
add
add
(bad)
call
adc
add
add
add
ror
add
fild
add
cmp
ja
jae
call
outs
inc
outs
aas
push
call
adc
add
and
adc
ja
fsubr
mul
sbb
mov
inc
and
or
add
(bad)
mov
dec
adc
push
mov
cmp
or
iret
cmp
cmp
daa
nop
add
jno
jno
iret
cmp
ret
push
lahf
test
inc
clc
cmp
mov
jl
(bad)
(bad)
inc
add
lods
nop
add
add
lock
test
jp
jne
lea
test
pop
sub
inc
push
clc
aad
rcr
mov
jle
jo
mov
push
rcl
loop
pop
inc
mov
add
fiadd
dec
pop
dec
cld
jmp
mov
mov
ret
pusha
sub
cmp
and
add
std
xor
div
inc
xor
and
add
mov
mov
je
cmp
mov
pop
pop
(bad)
movs
hlt
pop
or
pop
mov
mov
adc
xor
inc
or
push
ins
or
scas
xor
adc
mov
das
rcr
push
pop
cld
and
jmp
ret
ret
cmp
ins
ds
mov
jg
mov
xor
sbb
bound
mov
xchg
in
ins
inc
mov
and
shrd
cmp
fs
jo
sbb
pusha
cmp
mov
lea
inc
mov
imul
imul
push
call
push
inc
rcl
arpl
lds
das
jle
dec
push
push
pop
pop
and
and
jg
loopne
call
adc
adc
mov
out
jne
push
xchg
aas
sub
es
loop
dec
inc
jb
or
repz
icebp
fld
mov
jmp
jae
mov
lods
mov
es
adc
pop
inc
sahf
test
icebp
int3
jg
xchg
mov
out
mov
inc
xor
sub
rcl
push
push
addr16
dec
or
mov
xchg
adc
inc
push
jo
dec
je
(bad)
arpl
xchg
push
call
aaa
ret
mov
and
aam
sbb
jnp
shl
push
bound
add
es
add
and
pop
in
outs
fdiv
cs
fstp
js
es
dec
dec
jne
es
dec
xchg
push
call
test
ins
in
jno
add
push
or
xor
das
mov
jle
jne
fsubr
ret
or
adc
mov
call
aam
in
or
adc
dec
bnd
and
test
stc
clc
push
in
mov
cmp
jg
or
lods
xchg
add
jg
sub
repz
cmp
xchg
push
cmp
lds
jo
sbb
pushf
repz
cmp
fprem1
and
push
push
mov
jbe
outs
into
nop
int
adc
pop
hlt
mov
and
sub
mov
sbb
(bad)
dec
ret
mov
adc
xor
push
icebp
sbb
xor
or
dec
ficom
addr16
or
ja
je
add
and
xchg
add
inc
inc
dec
xchg
xchg
aam
(bad)
aad
and
dec
xor
sbb
adc
add
add
retf
dec
cld
jbe
mov
mov
fsub
ror
jl
mov
fsub
xor
aaa
add
mov
pop
and
xchg
push
xor
push
jg
gs
movs
leave
and
bswap
inc
push
push
adc
sti
das
jle
test
push
add
cld
lock
push
jl
inc
xchg
mov
add
or
cmp
mov
xchg
ror
movs
add
cmp
pop
xchg
ret
loop
ret
gs
and
gs
daa
xchg
movs
or
xor
shr
and
mov
push
and
cmp
cli
sub
pop
cmp
push
popf
mov
pop
inc
fsubr
sbb
bound
pop
outs
jmp
jb
(bad)
movs
lock
aas
pop
cmp
mov
cmp
adc
call
ficom
ss
mov
jno
aad
test
pop
into
push
pusha
jo
cmp
push
lds
sbb
and
pop
jae
xor
mov
xor
movs
in
pop
pop
sbb
jns
pop
pop
xor
aam
push
add
add
sbb
jle
mov
xchg
mov
jl
das
xchg
cmps
inc
jle
add
add
sar
jno
ret
xchg
xchg
or
jl
dec
sahf
dec
jle
cmp
jl
dec
jl
dec
add
jl
dec
cmp
sbb
dec
inc
jno
ret
repnz
xchg
sbb
add
mov
jno
pop
add
push
sbb
movs
nop
jae
(bad)
stos
push
inc
das
mov
test
test
adc
es
add
or
push
dec
pop
adc
add
shr
stc
and
xchg
jmp
sti
jmp
(bad)
ds
jl
outs
in
(bad)
inc
in
(bad)
call
mov
add
ret
jnp
push
retf
jmp
lods
cmp
add
adc
add
dec
or
mov
xor
xchg
nop
add
jbe
cmps
pop
popf
inc
cmp
imul
out
dec
push
mov
xchg
out
inc
pop
ret
(bad)
xor
mov
test
retf
push
icebp
push
xor
pusha
fist
fs
adc
and
jg
or
add
adc
sbb
pop
or
pop
sbb
pop
movs
adc
mov
mov
lahf
mov
mov
inc
mov
ret
movs
sbb
pop
movs
shl
popa
mov
sbb
sbb
and
cmps
shl
(bad)
ja
adc
mov
mov
jl
out
inc
pop
ror
adc
dec
sbb
rcr
ss
fimul
into
inc
jne
jl
adc
add
clc
xchg
cwde
sbb
jo
sbb
pop
push
popa
inc
loopne
loopne
test
mov
test
mov
push
cmp
mov
sbb
cs
sub
enter
pop
leave
daa
add
and
and
or
add
fadd
dec
repnz
enter
dec
mov
cmp
mov
dec
fwait
push
or
add
mov
xchg
jg
inc
add
pusha
mov
push
mov
clc
adc
lods
mov
iret
cmp
push
sub
out
ret
cmp
outs
xor
dec
test
inc
cmp
add
pop
inc
inc
iret
xor
mov
fst
mov
sub
rcr
les
pop
mov
fistp
cmp
scas
add
jge
mov
inc
sti
push
dec
mov
das
push
aas
test
pop
add
adc
or
add
push
push
loopne
jo
push
(bad)
fdivr
cmp
in
loop
fs
pop
mov
(bad)
fsub
lahf
cmps
push
icebp
frstor
pop
jne
aam
clc
xchg
push
inc
call
pop
adc
jmp
(bad)
outs
(bad)
js
dec
fwait
inc
jo
ds
call
xor
add
push
shl
push
and
add
cli
not
or
int
sbb
sbb
or
int
jg
lock
test
imul
jne
lea
mov
jb
cmps
adc
jmp
jle
mov
xchg
add
or
and
xor
ret
pop
loope
add
into
mov
gs
cmps
sub
xor
ret
loopne
adc
inc
mov
pop
push
pop
mov
sub
jo
test
outs
sbb
jno
inc
clc
jb
lea
pushf
rcl
add
lock
fs
clc
clc
sbb
sar
test
divps
iret
or
or
push
das
fcomp
mov
fist
jle
push
shr
ret
cld
xor
jmp
add
test
data16
mov
lea
mov
jbe
mov
daa
and
pop
call
dec
adc
pop
ror
lods
xchg
inc
mov
pop
pop
imul
and
loope
jb
jle
mov
cmp
xor
mov
mov
stc
mov
pop
mov
mov
jae
mov
add
(bad)
into
ss
add
xchg
cld
inc
add
xor
inc
cmp
push
sub
jo
ret
cld
jo
fimul
add
cmp
add
out
cmp
add
and
pop
mov
mov
xchg
pop
jne
inc
sub
sbb
inc
js
or
cdq
push
imul
and
add
mov
xchg
dec
add
ret
add
mov
jmp
push
pushf
dec
loop
xor
js
(bad)
xor
ror
push
push
mov
or
(bad)
dec
aad
or
adc
(bad)
(bad)
jp
(bad)
jmp
loop
jmp
pop
je
repnz
pusha
je
je
add
xchg
adc
add
lahf
nop
add
movs
sldt
jo
imul
and
repnz
add
pop
xchg
pop
adc
pushf
jno
inc
push
and
nop
setno
dec
push
in
mov
pushf
push
dec
ret
call
mov
inc
mov
(bad)
data16
stos
inc
xchg
lock
add
add
repnz
mov
add
lock
inc
pop
mov
cdq
or
xchg
mov
inc
inc
and
jl
mov
push
ret
cld
mov
add
add
adc
fwait
dec
jo
xchg
inc
enter
jo
jo
inc
dec
and
cmps
nop
add
lods
jb
jo
in
sub
cmps
nop
test
mov
mov
rol
enter
cmp
mov
add
mov
enter
jle
jno
jno
jle
cmp
jl
cmp
jl
lods
dec
push
xchg
inc
scas
sbb
sub
inc
mov
xchg
and
in
imul
add
jbe
mov
jl
aas
mov
push
jns
mov
jmp
add
and
jb
cmp
daa
pushf
jb
jb
bound
inc
(bad)
(bad)
call
mov
pop
nop
jb
add
lods
jle
iret
and
dec
jae
ret
add
jae
inc
icebp
ins
pop
call
shl
mov
mov
cmp
jbe
dec
adc
aas
in
(bad)
out
add
dec
cmp
sbb
add
pusha
jno
ret
xor
jns
jg
pop
jno
jno
cmps
add
in
retf
dec
inc
jno
imul
and
add
xchg
push
enter
inc
jno
nop
push
repnz
add
cmp
inc
jno
push
adc
in
xchg
int
imul
and
xchg
out
shl
xor
push
dec
cmp
adc
pop
mov
and
pop
mov
xchg
(bad)
popa
sub
mov
push
dec
enter
nop
push
dec
jbe
add
jns
(bad)
inc
lahf
dec
outs
adc
add
mov
out
pop
xchg
(bad)
xchg
push
enter
js
xchg
jo
dec
sahf
in
aas
dec
mov
dec
test
dec
add
in
aas
dec
ret
add
push
pop
call
int3
out
(bad)
mov
add
loope
shl
sub
cmps
mov
(bad)
push
lock
and
enter
(bad)
mov
add
retf
cld
jno
mov
add
inc
cmp
add
and
add
and
jo
inc
dec
sub
ret
adc
iret
and
fadd
dec
pop
dec
and
add
dec
ins
dec
or
repnz
add
add
xchg
sub
cmp
int3
retf
aaa
stc
and
sbb
add
lahf
out
shr
mov
sbb
xchg
xchg
xor
je
sar
jle
rol
xchg
xor
dec
and
cli
stc
and
add
add
add
cmp
add
mov
sub
add
ror
add
xchg
into
dec
inc
mov
or
popa
mov
popf
movs
rcl
or
push
inc
psraw
mov
mov
ret
pushf
call
add
or
push
pop
push
pusha
ficom
push
or
push
jne
jp
pop
jle
js
cmp
push
xchg
clc
inc
inc
jno
call
sti
icebp
popa
jo
into
inc
xchg
cmp
das
sbb
jmp
pop
fistp
scas
cmp
sti
adc
fcomp
sahf
retf
cmp
clc
and
dec
add
jne
push
jge
pop
pop
rcl
xchg
jecxz
monitorx
out
mov
adc
xchg
fxch
in
mov
add
clc
jmp
add
ret
(bad)
fwait
aam
sahf
jp
fstp
jne
add
test
dec
dec
repnz
dec
mov
add
add
add
adc
xchg
or
stos
sbb
ins
test
loope
hlt
cmc
pushf
mul
aas
push
inc
add
add
dec
and
repnz
dec
(bad)
mov
add
(bad)
cmp
lahf
mov
psubw
push
pop
push
add
mov
pop
je
nop
pop
and
cmp
add
jl
stc
adc
aas
add
dec
inc
add
mov
shl
cwde
data16
inc
imul
out
cmp
sub
es
push
add
or
iret
add
pushf
cwde
cbw
data16
out
fstp
or
push
je
fs
out
pop
push
dec
rol
loope
push
ds
mov
mov
scas
mov
xor
div
and
addr16
nop
dec
push
push
rcl
and
inc
xor
cmp
fnsave
hlt
cld
add
pusha
add
push
iret
aas
inc
or
fadd
out
pop
ins
push
add
push
adc
push
pop
xor
inc
mov
in
sub
cwde
add
xchg
add
dec
add
fisubr
in
and
cmp
add
sbb
push
sbb
jl
ss
add
jmp
(bad)
call
mov
add
test
out
add
rcl
push
leave
enter
add
stc
repnz
enter
dec
dec
sub
cmp
add
xchg
add
add
add
cmp
sahf
movs
or
push
int3
out
jl
aaa
aas
(bad)
push
add
sub
add
rcl
add
(bad)
dec
test
dec
movs
jnp
inc
ins
sbb
or
out
adc
stc
in
add
add
lahf
add
add
xor
mov
mov
jle
mov
dec
xchg
push
dec
nop
push
dec
xchg
push
xchg
sete
nop
xor
or
stc
and
out
sbb
pop
imul
jmp
adc
inc
add
out
inc
inc
pop
cmps
push
mov
sub
add
in
lahf
in
add
das
push
add
push
add
add
stc
and
int
add
pop
sub
add
gs
repnz
add
or
xor
scas
push
fnstcw
fimul
dec
fdiv
add
or
add
daa
in
dec
add
add
sbb
add
loop
nop
pop
cmp
add
sbb
jno
in
imul
or
inc
in
push
scas
or
cdq
fisttp
xchg
das
pop
je
imul
add
or
imul
in
dec
pop
adc
or
jo
jl
add
push
dec
pop
icebp
(bad)
dec
add
jle
repnz
adc
dec
ds
add
push
sub
add
jb
cdq
mov
out
and
or
(bad)
ins
out
cdq
sub
add
push
add
and
stc
inc
cmp
dec
clc
pop
add
mov
add
add
(bad)
stos
movs
jp
sub
in
enter
pop
add
movs
repz
nop
dec
test
add
sbb
retf
repz
sub
movaps
add
dec
add
or
nop
add
add
add
daa
add
stc
add
nop
(bad)
mov
sub
test
push
dec
mov
jecxz
add
adc
sbb
int3
push
or
fcomp
add
add
dec
nop
cmp
inc
inc
leave
dec
test
nop
pop
stc
repnz
adc
push
dec
xchg
daa
in
adc
stc
and
pusha
enter
dec
adc
jl
dec
dec
call
sbb
mov
jbe
jo
xchg
jl
aas
sbb
push
dec
adc
jbe
push
mov
out
sbb
push
dec
sar
call
dec
mov
rcl
das
and
add
sar
sar
cmp
in
xor
jae
sbb
xor
push
sub
jecxz
cmp
push
movs
retf
leave
fnstcw
sbb
jo
int3
and
cmc
pop
repnz
fs
dec
xchg
(bad)
and
jae
adc
mov
sbb
ds
adc
dec
pop
stc
and
push
dec
adc
sahf
nop
dec
adc
icebp
inc
mov
ficomp
mov
stos
call
xchg
pop
adc
jp
jns
daa
pusha
(bad)
test
mov
pop
and
out
out
out
or
push
aam
les
lods
jns
jge
xor
jns
adc
sbb
jp
mov
jnp
fld
xchg
nop
test
jb
pop
(bad)
push
lock
nop
jnp
or
nop
jnp
sahf
out
out
inc
or
push
push
pop
fs
add
jnp
cli
mov
or
add
add
mov
stc
jl
dec
jb
(bad)
call
mov
add
adc
xor
add
retf
add
inc
leave
dec
test
dec
mov
add
add
leave
dec
mov
pop
or
sbb
mov
or
adc
xor
or
jmp
sbb
or
sbb
pop
repnz
xchg
add
add
add
enter
dec
cmp
add
add
adc
jne
add
(bad)
jnp
stos
mov
inc
mov
sbb
test
lds
mov
push
jle
cli
(bad)
dec
inc
add
pop
add
add
mov
xor
frstor
add
lahf
in
fwait
add
add
sbb
in
sbb
inc
push
add
dec
ds
movs
repz
jecxz
add
dec
ds
jl
push
add
xchg
stc
(bad)
jmp
adc
mov
adc
iret
fisttp
jns
dec
(bad)
out
jne
sbb
xor
jns
movs
inc
dec
or
add
sbb
add
adc
fnstenv
add
and
add
repnz
add
add
add
repz
fmul
dec
fmul
dec
adc
jo
inc
sbb
inc
les
retf
dec
outs
pop
jns
mov
div
(bad)
call
mov
add
cs
mov
add
(bad)
enter
add
and
(bad)
call
cld
int3
(bad)
jmp
dec
mov
in
jl
in
(bad)
call
inc
add
jge
adc
aad
jmp
mov
pop
sub
and
jnp
cmc
mov
repz
sub
stc
add
aas
dec
dec
add
add
jl
jle
(bad)
(bad)
sti
(bad)
call
add
add
enter
aas
dec
nop
aas
dec
and
xchg
cmp
push
dec
adc
adc
lahf
in
pop
(bad)
(bad)
call
(bad)
(bad)
(bad)
jl
lods
jl
inc
dec
aam
or
pop
ds
adc
or
pop
add
mov
mov
jmp
int3
jo
inc
jb
shl
jmp
mov
(bad)
dec
jo
int
stc
push
jmp
pusha
push
dec
pusha
push
leave
adc
push
dec
pusha
push
dec
mov
inc
pusha
push
dec
fs
dec
dec
test
sub
jmp
dec
pusha
push
dec
xchg
pop
leave
and
dec
loopne
inc
push
dec
sahf
pusha
push
dec
pusha
push
dec
and
and
jo
lss
push
dec
fdiv
adc
add
adc
lahf
jl
int3
dec
or
sub
add
mov
fld
xchg
push
lea
nop
pop
sub
jno
fst
nop
dec
es
adc
fldcw
push
(bad)
inc
jb
test
jno
repnz
jle
(bad)
call
stc
add
add
inc
and
and
or
cmp
push
enter
push
add
or
or
pop
leave
(bad)
call
push
add
jae
inc
repnz
(bad)
(bad)
(bad)
in
jo
push
dec
enter
xchg
(bad)
(bad)
dec
adc
add
inc
ss
ds
inc
add
dec
push
dec
call
test
cmps
pop
nop
pslld
loopne
inc
loope
dec
in
and
loopne
inc
dec
sahf
pop
in
add
loopne
cmp
clc
or
leave
pop
push
inc
jmp
add
add
and
sbb
dec
test
dec
sbb
dec
and
aas
dec
test
dec
stc
jae
pop
mov
xor
in
repnz
aaa
add
out
nop
aas
das
sub
int
(bad)
call
stos
mov
and
mov
or
ss
mov
cmps
sub
xor
test
add
repz
jmp
sahf
jl
sbb
dec
sbb
add
fdiv
pusha
imul
hlt
dec
adc
dec
add
and
movs
push
add
xchg
mov
add
dec
call
retf
dec
js
add
xor
leave
add
sub
dec
xchg
push
add
sahf
cmp
add
xchg
and
jmp
jns
sub
add
jns
jle
ss
pop
add
in
and
add
jg
mov
jnp
enter
push
add
push
add
loope
out
in
add
fcom
and
iret
pop
shr
add
xchg
into
dec
push
nop
dec
and
add
push
dec
jmp
les
mov
add
ds
int3
dec
push
add
add
stc
and
fist
add
jo
sbb
pop
je
jo
int3
jnp
inc
sar
add
call
mov
fadd
add
add
add
mov
push
xchg
fdivrp
push
stc
add
add
xor
adc
ins
jnp
add
shr
jnp
or
test
add
dec
add
add
add
inc
cmp
add
add
stc
xchg
cmc
add
add
add
add
add
add
add
add
dec
add
jnp
add
repnz
push
sub
add
inc
add
add
add
enter
cld
or
xchg
jmp
add
int
add
repnz
xchg
test
add
repnz
call
and
inc
cmps
(bad)
repnz
rcl
sahf
xchg
loopne
(bad)
and
xchg
xor
jp
sub
(bad)
call
inc
lods
(bad)
(bad)
dec
xchg
stc
jne
(bad)
push
dec
add
cmp
xchg
add
mov
xchg
lods
in
ins
jnp
xchg
jno
repnz
in
(bad)
inc
enter
ror
mov
dec
loopne
mov
pusha
jnp
ror
add
movs
ror
je
nop
(bad)
mov
add
les
stc
add
add
ds
add
or
cmp
or
add
and
pop
jbe
add
movs
ror
and
in
xchg
add
xchg
jl
stc
sbb
add
dec
jle
enter
add
add
push
push
out
daa
mov
cmp
add
dec
aad
(bad)
jle
cld
add
dec
add
dec
leave
cmovb
(bad)
(bad)
push
or
push
enter
(bad)
inc
std
(bad)
push
mov
add
pop
retf
lods
pop
(bad)
jne
test
cmp
push
cld
adc
int3
enter
daa
enter
int3
dec
in
psubw
aam
jmp
(bad)
(bad)
call
enter
jno
sar
and
daa
cmp
xchg
mov
add
mov
mov
jns
push
pushf
inc
dec
add
clc
jo
in
daa
pushf
inc
dec
add
dec
mov
add
add
inc
xchg
jmp
test
xchg
inc
dec
and
inc
push
nop
jno
retf
(bad)
inc
jno
jo
push
inc
push
clc
jo
data16
add
daa
clc
jo
adc
mov
fcom
xor
and
test
into
dec
repnz
loopne
add
repnz
push
sbb
dec
inc
jle
push
xchg
(bad)
dec
cmp
add
jo
and
pop
add
add
shr
sbb
push
repnz
push
push
add
sub
in
daa
push
add
add
and
jo
and
add
add
add
adc
ret
jmp
nop
sqrtps
add
cwde
add
adc
ror
xchg
gs
int
ror
dec
sbb
or
push
xor
sbb
pusha
je
inc
jle
dec
add
add
sub
push
and
stc
adc
cmps
add
add
enter
add
add
add
and
add
stc
stc
nop
std
add
add
add
stc
nop
lahf
cld
sbb
(bad)
dec
fdivr
push
in
mov
dec
mov
dec
pop
and
mov
add
inc
jmp
sbb
jle
xchg
add
add
aas
xchg
pop
xchg
idiv
(bad)
jmp
(bad)
(bad)
call
repnz
and
ror
pop
and
enter
ror
inc
clc
push
inc
aas
add
sar
fwait
push
out
movs
or
mov
lea
cmp
mov
sahf
and
jp
push
push
and
sbb
mov
adc
and
jns
pop
adc
lahf
sahf
(bad)
cmp
mov
sbb
add
test
mov
dec
sbb
call
lahf
mov
mov
dec
mov
mov
cmp
(bad)
cmp
je
cmp
push
add
(bad)
je
push
xor
mov
test
mov
jne
loopne
add
inc
jnp
out
push
daa
ret
push
ss
sbb
mov
fcmovnbe
in
call
outs
jo
clc
shr
fscale
fstp
fld
jge
mov
les
xor
or
in
ins
adc
add
lods
sar
loopne
push
add
ror
inc
mov
xchg
lock
cld
lea
adc
cmp
jge
sbb
js
in
sbb
push
mov
dec
jnp
xchg
inc
gs
shl
mov
add
cmp
out
imul
cli
mov
aam
push
fnsavew
cmp
fdiv
or
adc
pop
dec
fmul
popf
pop
movs
fmul
xchg
jmp
neg
ins
ins
je
ficomp
outs
ins
cmp
jne
js
(bad)
and
mov
hlt
(bad)
mov
jmp
mov
pop
mov
or
or
mov
push
test
cmp
pop
adc
popa
mov
rol
mov
and
xlat
add
add
sub
fiadd
cmps
pop
aad
into
adc
and
cmp
stc
mov
and
rol
mov
or
or
in
or
pop
xor
pushf
call
ret
mov
out
test
ret
or
bound
lds
test
lods
or
test
cmps
pop
jbe
jl
pop
ret
stgi
add
fcomp
xchg
add
jmp
pop
faddp
test
and
sbb
call
or
add
lahf
or
sbb
popf
out
ror
mov
aad
push
movs
push
test
stc
ret
rcr
push
mov
push
loopne
stos
pop
fdivr
addr16
xor
sbb
sbb
aas
add
repnz
push
sbb
ret
fmul
xchg
xchg
jbe
inc
sbb
sub
adc
in
adc
into
sub
jmp
and
(bad)
adc
ret
out
out
adc
sub
adc
xor
rcl
(bad)
add
xor
out
mov
stc
push
aas
xor
pop
dec
fdiv
(bad)
mov
movs
std
push
int
fdivr
adc
fidiv
fstp
stos
or
fstp
adc
call
jns
jbe
jno
or
or
jnp
scas
in
or
mov
dec
iret
es
ss
es
cmps
lahf
add
(bad)
pop
retf
fcomp
cmp
lods
loopne
enter
mov
(bad)
and
adc
test
mov
inc
retf
retf
dec
xchg
mov
jnp
(bad)
jge
out
mov
cld
movs
das
pushf
in
xchg
loopne
retf
(bad)
cld
pop
push
in
retf
int3
retf
cmps
xchg
xchg
mov
jnp
(bad)
jge
out
adc
imul
push
cmps
pusha
bound
inc
and
popa
xchg
add
enter
or
mov
sti
movs
mov
les
out
ins
(bad)
sbb
mov
or
cwde
push
push
push
cmps
dec
int
jle
inc
into
fs
inc
int
cmp
mov
mov
mov
and
pop
pop
cmp
hlt
cli
push
into
enter
inc
(bad)
into
iret
xchg
or
sbb
mov
or
adc
xchg
(bad)
jge
and
jl
pop
push
ss
push
push
cmp
popa
out
mov
cmp
fld
and
jg
fild
mov
or
loopne
cmp
or
jb
addr16
hlt
add
sbb
mov
popa
mov
and
or
lock
movs
xor
imul
xor
add
or
xchg
and
fild
fist
sub
sti
(bad)
sub
gs
(bad)
(bad)
repnz
dec
adc
retf
(bad)
xchg
pop
and
jl
inc
enter
(bad)
jl
jb
mov
push
jne
in
stc
std
dec
mov
clc
pop
sub
imul
(bad)
pop
xchg
push
push
mov
test
xchg
add
call
sbb
cmp
push
sub
jo
or
xor
shr
or
pop
cs
and
test
pop
mov
sub
sar
es
and
mov
pop
xor
js
ret
inc
xor
(bad)
jbe
retf
ss
or
sub
mov
add
loop
inc
push
adc
inc
clc
loopne
fstp
jmp
jmp
mov
xchg
xor
sub
cmp
inc
aas
jbe
add
add
fmul
sub
clc
mov
fcom
popa
add
add
loope
fmul
and
in
and
scas
sti
sbb
sub
jb
xor
cmps
cmc
sub
push
fchs
jmp
das
clc
xor
fnsave
mov
and
(bad)
cmp
inc
and
push
sbb
adc
clc
xchg
adc
xor
and
or
mov
adc
xor
xor
xor
je
call
lea
pop
ret
mov
or
sbb
clc
jb
jns
out
add
and
sub
and
pop
cmp
dec
add
in
mov
sti
sbb
fsubrp
and
adc
mov
inc
sbb
inc
iret
adc
adc
inc
ret
inc
and
leave
cmc
cmc
xor
aam
cmp
js
inc
add
mov
neg
xchg
add
inc
(bad)
fpatan
add
ret
adc
xchg
dec
adc
cwde
sbb
mov
add
sbb
add
add
push
and
add
add
inc
and
adc
(bad)
(bad)
aas
nop
aas
lahf
add
(bad)
(bad)
cld
int
call
and
and
pop
add
add
adc
jle
repnz
add
add
(bad)
(bad)
push
add
nop
lahf
cld
repnz
add
sbb
add
cmps
int3
(bad)
jmp
inc
enter
(bad)
call
(bad)
inc
and
or
add
add
push
push
and
add
pop
mov
and
add
gs
add
pop
sub
das
add
add
add
and
add
lea
dec
ds
add
add
xor
or
repnz
or
retf
stc
enter
retf
sub
(bad)
call
retf
stc
test
stos
(bad)
(bad)
cmp
add
stc
test
add
add
jo
(bad)
inc
repnz
leave
(bad)
jmp
in
(bad)
push
add
add
addr16
inc
jle
std
sub
add
sub
jle
xchg
add
add
add
add
and
mov
add
mov
pop
cmp
pop
scas
mov
addr16
xchg
psubd
add
sbb
shl
outs
push
imul
and
addr16
lods
adc
mov
pop
xor
pop
xor
dec
adc
and
popa
xor
and
or
cmps
(bad)
push
ret
jmp
in
test
add
stos
(bad)
call
(bad)
nop
adc
outs
imul
jmp
jl
pop
(bad)
(bad)
(bad)
jge
dec
xchg
jmp
ins
mov
js
jo
dec
outs
adc
ret
dec
jmp
mov
cmp
test
xor
outs
outs
scas
cld
xor
dec
sub
dec
cmp
dec
and
dec
adc
xchg
dec
xor
dec
cmp
ss
repnz
xor
sub
lock
js
inc
ds
jg
jae
daa
pop
xor
push
dec
xor
lock
and
push
dec
and
adc
shl
add
jmp
adc
out
xor
mov
popf
(bad)
push
dec
xor
jnp
daa
aaa
jne
xchg
cmp
and
inc
pop
jg
xchg
stc
sub
dec
cmp
add
sub
fiadd
add
movaps
dec
or
sub
sub
xor
or
cld
mov
or
mov
xchg
ret
adc
dec
or
xchg
jnp
pop
enter
dec
push
dec
in
cld
adc
nop
jo
sub
mov
add
xchg
add
add
mov
jmp
sar
nop
(bad)
nop
ror
ror
or
mov
mov
repnz
jo
ror
mov
mov
mov
push
jg
ror
dec
jle
enter
sahf
(bad)
jmp
xor
pop
lock
test
lahf
pop
les
jo
repz
mov
popa
jae
test
test
push
nop
jl
ror
ror
jo
and
dec
mov
das
dec
push
ds
xchg
jl
dec
jg
ror
jnp
push
hlt
retf
leave
pop
adc
(bad)
(bad)
jmp
dec
xchg
mov
jl
jl
add
add
test
mov
fwait
ds
add
pop
xchg
add
cld
jo
fwait
(bad)
call
pop
and
in
stc
xor
(bad)
jmp
and
into
add
add
mov
cmps
adc
push
dec
cmp
dec
jl
pop
jle
(bad)
(bad)
dec
icebp
(bad)
dec
add
add
(bad)
(bad)
jmp
daa
in
(bad)
jmp
xchg
dec
nop
iret
inc
or
fcom
stos
adc
repnz
movs
inc
dec
sub
add
in
test
in
(bad)
jmp
push
aam
stc
enter
mov
(bad)
jmp
adc
add
inc
dec
(bad)
xlat
add
lods
inc
leave
adc
and
stc
xchg
adc
fdiv
retf
xchg
add
or
inc
dec
ins
shr
dec
pushf
test
inc
fst
and
jno
(bad)
(bad)
call
stc
and
nop
jno
or
test
push
adc
sahf
dec
pop
or
jl
dec
in
add
push
dec
inc
push
dec
pop
and
sahf
inc
push
dec
mov
test
in
in
inc
test
inc
mov
sar
mov
sahf
nop
(bad)
add
add
sub
sahf
into
dec
(bad)
daa
jns
push
mov
ror
ret
in
(bad)
call
jo
xchg
dec
out
jns
inc
inc
clc
xor
mov
dec
mov
and
fs
inc
mov
(bad)
dec
adc
and
inc
das
jg
je
dec
sbb
lods
jno
out
int
jno
mov
add
in
mov
dec
jl
mov
adc
jl
dec
das
in
jns
inc
dec
pusha
push
dec
pusha
push
stc
and
nop
dec
ins
adc
add
add
add
cld
mov
add
dec
sahf
(bad)
dec
(bad)
jmp
pop
stc
test
sldt
and
leave
dec
push
mov
popf
(bad)
inc
jns
pusha
push
dec
scas
jb
cmp
xchg
paddusw
inc
mov
jne
pslld
add
pusha
push
dec
mov
(bad)
jmp
inc
repnz
pushf
das
in
inc
mov
jno
dec
leave
add
jno
jno
stc
adc
push
fwait
(bad)
(bad)
out
fwait
(bad)
call
inc
dec
cmp
in
pusha
push
dec
pusha
push
dec
shr
mov
stc
scas
jl
push
dec
jmp
inc
dec
dec
inc
pop
(bad)
call
mov
(bad)
call
hlt
dec
sbb
dec
push
mul
pop
enter
hlt
dec
pusha
push
dec
push
(bad)
das
cmovo
dec
inc
push
add
cmp
imul
hlt
dec
dec
and
test
jno
dec
ds
mov
cmps
in
mov
movs
fiadd
out
or
jl
js
jno
push
dec
cmp
and
add
(bad)
dec
stc
sub
test
mov
enter
dec
mov
cdq
(bad)
call
jl
jle
add
add
or
mov
or
add
inc
ds
adc
dec
(bad)
call
(bad)
(bad)
call
push
test
fisubr
inc
jle
mov
(bad)
call
(bad)
(bad)
jmp
jnp
and
xchg
scas
adc
cmp
outs
repnz
jle
xchg
(bad)
(bad)
(bad)
jl
(bad)
call
(bad)
call
(bad)
(bad)
call
(bad)
call
and
dec
inc
outs
and
js
dec
inc
xor
in
adc
sub
mov
in
scas
lods
addr16
fist
cmp
mov
pop
mov
lahf
and
ret
fcos
jmp
inc
enter
(bad)
inc
add
stc
adc
add
jb
(bad)
push
les
and
test
out
dec
mov
mov
(bad)
or
push
stos
push
dec
stos
sub
add
int
add
push
dec
and
or
inc
dec
jne
push
jmp
mov
add
pop
mov
scas
add
test
push
mov
cwde
sbb
push
push
or
je
push
sbb
inc
sbb
mov
loope
mov
mov
xor
(bad)
loopne
dec
mov
mov
jns
push
push
mul
mov
sbb
call
ret
sahf
je
enter
mov
jo
or
cmp
inc
mov
inc
cdq
fdiv
cmp
jno
jno
jns
or
sahf
(bad)
(bad)
ds
add
add
ds
call
inc
sbb
pop
pop
scas
(bad)
inc
repnz
sahf
add
add
ror
mov
sub
adc
xchg
into
dec
fs
xor
mov
sub
xchg
cmp
and
pusha
push
dec
pusha
adc
add
push
dec
test
dec
adc
push
sbb
add
adc
adc
dec
shl
in
pusha
push
dec
sbb
cmp
enter
pusha
push
dec
pusha
push
dec
sub
enter
jno
lods
(bad)
(bad)
cmp
or
stc
add
dec
or
xchg
shr
in
enter
inc
dec
push
or
mov
pop
addr16
or
and
xchg
out
and
in
repnz
add
gs
add
fsubr
(bad)
call
aas
add
add
mov
push
dec
mov
nop
cld
sbb
dec
mov
sbb
xchg
sbb
(bad)
call
in
(bad)
(bad)
call
dec
shl
push
repnz
xchg
jmp
push
dec
xchg
stos
(bad)
call
inc
ins
xlat
movs
xchg
pop
sbb
jmp
sbb
pushf
rcl
xor
cmps
and
adc
adc
or
push
or
enter
xchg
test
loope
jge
pop
jmp
cmp
call
stos
aam
fmul
adc
or
sub
aad
inc
test
dec
pop
repnz
(bad)
(bad)
push
(bad)
(bad)
call
(bad)
jmp
xor
push
adc
and
adc
(bad)
(bad)
push
test
(bad)
clc
or
fistp
pop
and
sub
pop
add
xchg
scas
xchg
add
repz
rol
add
cmps
sbb
ror
test
(bad)
cmp
repnz
add
mov
loope
cmps
and
ja
aad
mov
sub
test
std
(bad)
jmp
je
add
aas
aas
cmp
dec
inc
xchg
add
push
call
popa
and
lods
xchg
xor
adc
and
cld
sub
add
inc
push
push
(bad)
repnz
cmc
push
ins
cmp
out
xchg
repnz
out
enter
add
stc
adc
sub
in
repnz
cmp
xor
outs
rcl
xor
push
repnz
add
add
dec
add
add
(bad)
(bad)
dec
xchg
jmp
(bad)
inc
ja
sbb
adc
or
cmps
imul
sti
adc
int3
int3
mov
jl
dec
xchg
test
sti
sbb
leave
adc
inc
leave
das
pop
retf
inc
(bad)
(bad)
inc
stc
leave
push
dec
mov
in
add
mov
adc
aaa
test
sbb
cmp
mov
mov
mov
inc
push
inc
ds
jno
jmp
dec
xchg
jl
jns
push
dec
inc
icebp
(bad)
(bad)
out
pop
in
out
(bad)
jmp
das
lahf
in
(bad)
dec
jg
call
(bad)
push
jle
inc
or
(bad)
dec
and
add
imul
xchg
cld
add
push
adc
dec
leave
pop
adc
test
adc
jb
(bad)
(bad)
cmp
cmp
push
jle
out
sub
and
stc
sub
sub
test
in
es
cmps
daa
scas
cld
test
(bad)
(bad)
jl
(bad)
push
std
pop
adc
jb
jno
repnz
(bad)
jmp
dec
add
jnp
call
ins
(bad)
jmp
or
dec
gs
hlt
or
jl
jg
push
add
sbb
add
pop
add
ret
dec
jle
fnstenv
call
push
jecxz
pop
push
mov
push
test
xor
mov
add
sbb
stc
adc
add
in
cld
sub
add
xchg
loopne
ins
fiadd
cs
mov
add
stc
add
add
(bad)
(bad)
inc
stc
xchg
jl
(bad)
(bad)
inc
add
sub
xchg
jl
sldt
mov
mov
jne
ret
repz
add
or
daa
mov
mov
push
inc
repnz
push
add
cmp
imul
jns
hlt
push
mov
and
(bad)
(bad)
inc
(bad)
(bad)
inc
and
xchg
push
push
add
ret
in
and
jmp
pop
jp
add
call
add
seto
xor
jns
add
or
and
or
repnz
adc
add
add
add
add
add
repnz
and
jno
cli
(bad)
jmp
lahf
in
and
(bad)
push
xchg
dec
and
stc
(bad)
jmp
cmp
add
stc
(bad)
push
push
add
mov
in
add
push
add
mov
mov
jns
or
cdq
push
xor
dec
outs
in
mov
jae
add
scas
dec
pop
xor
call
add
push
push
jae
jae
in
adc
cmp
add
jmp
mov
fisttp
add
repnz
jae
enter
adc
add
add
cmp
sbb
add
inc
test
dec
xor
sub
inc
leave
add
ins
pop
add
push
ds
repnz
pop
add
je
(bad)
call
xchg
jmp
add
mov
pop
test
jae
stc
add
pusha
push
add
jne
(bad)
call
int3
cmps
gs
and
dec
add
or
or
aaa
aas
or
or
add
add
repnz
add
xor
add
test
ss
(bad)
jmp
ret
outs
or
test
jle
add
add
(bad)
call
out
xor
cmps
mov
stos
or
data16
add
jg
cmp
jae
add
push
jae
mov
and
pop
jae
inc
repnz
imul
add
in
add
inc
nop
and
xchg
jge
mov
mov
adc
or
add
add
add
add
adc
pop
(bad)
jmp
sbb
add
and
inc
cmc
std
(bad)
inc
add
lods
add
xchg
dec
add
cwde
sub
stc
sbb
leave
shl
adc
and
in
ja
push
add
xchg
xchg
push
push
leave
pop
sub
or
xor
pop
xor
jo
fisttp
add
jb
jae
xchg
aas
das
dec
jae
or
add
and
mov
scas
inc
jle
fistp
add
push
and
adc
ins
pop
pop
push
ror
sbb
add
cmp
repnz
jb
jb
in
jb
jb
xor
add
(bad)
push
dec
outs
ds
les
les
pop
(bad)
call
jl
les
pop
fsubr
fld
mov
add
enter
pop
or
ins
add
ins
int3
aam
adc
int3
ss
fisttp
jl
aas
rcl
test
inc
fadd
push
dec
xchg
fyl2xp1
sbb
sub
dec
not
adc
arpl
inc
outs
push
jae
add
ja
iret
xchg
push
inc
inc
jbe
sbb
test
or
and
push
inc
push
pushf
pop
add
lds
pop
enter
push
push
and
inc
and
and
(bad)
jmp
jl
nop
(bad)
fstp
stc
or
push
push
xchg
cld
stc
xchg
dec
sbb
dec
idiv
(bad)
inc
cs
lds
jno
inc
sub
add
push
and
in
add
dec
and
push
nop
pop
ds
(bad)
(bad)
inc
(bad)
(bad)
push
inc
ja
bound
nop
ins
add
sbb
pop
movs
mov
nop
lahf
jl
(bad)
(bad)
inc
inc
(bad)
test
mov
bound
jecxz
(bad)
call
stc
and
inc
(bad)
(bad)
call
(bad)
(bad)
inc
leave
add
push
scas
aaa
add
enter
push
add
and
enter
and
mov
mov
inc
jae
xchg
jb
add
stc
and
xchg
add
enter
jmp
mov
inc
add
jb
cmp
loopne
js
call
or
mov
adc
fs
sbb
xchg
dec
gs
mov
dec
test
jp
xchg
retf
(bad)
mov
or
add
dec
jp
leave
retf
(bad)
mov
inc
push
fimul
jp
sbb
pusha
jbe
outs
hlt
scas
add
out
sar
push
push
sbb
jo
scas
or
scas
ins
repnz
ds
(bad)
jmp
hlt
(bad)
(bad)
jge
add
out
push
scas
out
and
rol
or
(bad)
adc
inc
fdiv
popa
out
add
int
scas
ins
std
cmps
in
enter
push
add
nop
cld
enter
(bad)
call
add
inc
pop
add
cld
sub
adc
in
add
add
popf
and
pop
inc
xor
out
add
mov
(bad)
(bad)
cmp
pusha
pop
pushf
cmp
not
mov
and
sbb
mov
pop
inc
ds
push
(bad)
(bad)
dec
(bad)
(bad)
mov
cmp
(bad)
(bad)
js
(bad)
(bad)
mov
and
add
fdiv
jb
fimul
cmp
ins
inc
jns
add
scas
dec
push
les
je
fisttp
inc
cmp
cmc
jns
inc
xor
pop
in
sub
jp
and
add
enter
(bad)
(bad)
dec
and
add
enter
(bad)
jmp
(bad)
inc
cmp
xor
(bad)
(bad)
ds
call
(bad)
(bad)
(bad)
stc
push
repnz
fsub
(bad)
jmp
(bad)
jmp
cmp
jb
repnz
push
sbb
(bad)
dec
jge
add
inc
sub
(bad)
(bad)
inc
leave
das
pop
sti
(bad)
jmp
jns
test
push
sti
(bad)
dec
pop
pop
mov
jno
(bad)
(bad)
(bad)
cld
stc
cmp
sti
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
(bad)
jle
and
jmp
outs
(bad)
(bad)
dec
and
inc
fucomip
(bad)
jmp
jmp
ins
push
repnz
mov
les
jbe
or
xchg
scas
in
shr
(bad)
xor
out
cmp
or
inc
scas
or
mov
aam
iret
cmp
add
inc
ds
xor
dec
xor
in
adc
jno
push
repnz
aas
dec
xchg
dec
and
aas
dec
push
cli
(bad)
push
jns
push
std
(bad)
jmp
mov
inc
sahf
mov
mov
jae
and
xchg
sub
jge
jb
jns
add
daa
in
cmp
jb
jae
jb
cmps
bound
fdivp
jb
add
mov
pop
repnz
sbb
(bad)
loopne
inc
jmp
call
add
scas
les
and
add
mov
(bad)
push
adc
(bad)
jmp
fwait
jno
fdivr
sbb
adc
(bad)
(bad)
jmp
add
xchg
pmulhuw
jle
cmp
sub
add
jae
call
dec
js
add
in
and
jmp
(bad)
inc
(bad)
call
jecxz
jmp
inc
jle
in
add
dec
sub
add
inc
enter
add
int3
dec
(bad)
dec
in
add
and
push
sbb
or
push
push
sbb
jo
jns
pop
stc
sub
(bad)
dec
jb
adc
and
idiv
call
nop
dec
enter
add
add
nop
adc
xchg
jae
pop
and
or
sbb
test
jb
jae
pop
leave
pxor
add
ror
add
stc
add
fs
(bad)
jmp
pushf
mov
leave
(bad)
inc
add
and
loope
out
hlt
scas
and
mov
adc
test
test
cmp
icebp
sbb
add
inc
and
inc
loope
outs
das
nop
test
(bad)
dec
leave
arpl
enter
or
call
jb
pop
sbb
dec
jb
jb
cld
nop
pop
push
xor
add
cmp
add
xor
add
pop
dec
push
sbb
sbb
add
movs
in
dec
add
add
(bad)
dec
(bad)
(bad)
inc
test
cmp
xor
dec
and
pop
stc
cmovo
mov
add
and
xchg
aas
aam
(bad)
jmp
adc
fwait
dec
wbinvd
add
or
add
add
jo
push
jb
inc
push
jne
push
jb
and
add
adc
and
add
in
jno
movs
add
and
scas
sbb
repnz
and
add
loope
(bad)
push
add
nop
sub
add
push
repnz
dec
pop
push
repnz
aaa
add
mov
add
add
sub
push
(bad)
(bad)
(bad)
cmp
aas
inc
jle
(bad)
(bad)
(bad)
mov
mov
add
xchg
jo
loope
cmp
das
test
cli
jmp
sbb
jmp
mov
jmp
jg
ret
sub
aas
nop
add
(bad)
(bad)
cmp
(bad)
dec
cld
dec
cmc
xlat
(bad)
jmp
call
and
nop
push
sbb
add
add
xchg
(bad)
sbb
mov
push
add
add
adc
sbb
or
mov
adc
enter
scas
fiadd
add
ret
jbe
dec
call
imul
(bad)
stc
and
mov
in
pop
scas
lea
add
out
(bad)
(bad)
jl
pop
and
out
or
push
sub
xlat
add
add
add
pusha
out
(bad)
dec
inc
and
(bad)
fiadd
cmp
push
lds
scas
frstor
sub
jns
cmps
and
inc
push
repz
push
loope
push
aas
pop
sub
fs
ins
jle
pop
mov
sahf
out
stos
push
mov
xchg
out
iret
out
add
push
sbb
es
repz
popa
outs
test
push
inc
call
dec
mov
out
cs
xchg
dec
scas
sahf
loopne
inc
push
nop
jg
and
repnz
(bad)
(bad)
jmp
add
out
sub
pop
add
add
jb
repnz
scas
mov
stos
in
mov
add
dec
jae
xchg
xchg
jmp
call
leave
add
in
(bad)
jmp
dec
jae
mov
aam
movs
(bad)
(bad)
inc
xchg
jl
jmp
jmp
(bad)
(bad)
dec
out
repnz
(bad)
jmp
mov
(bad)
inc
jmp
sahf
(bad)
(bad)
call
jb
inc
repnz
push
jmp
dec
call
adc
adc
dec
pop
scas
and
jecxz
repnz
movs
mov
(bad)
jmp
in
repnz
jae
jae
add
and
movs
les
cmp
call
call
(bad)
jmp
pop
repnz
dec
jae
sar
jmp
sar
inc
and
arpl
(bad)
dec
stc
cmp
aas
(bad)
(bad)
call
jae
add
add
mov
add
push
add
cld
and
adc
cmc
(bad)
inc
cmc
(bad)
push
xchg
pop
cmp
(bad)
dec
mov
add
or
(bad)
(bad)
fld
add
in
add
sar
pop
cmp
retf
out
sar
jmp
mov
sub
adc
rol
mov
movs
adc
nop
pop
cmps
loopne
(bad)
aas
xor
xchg
popa
ds
in
lds
sbb
jnp
loop
test
adc
jb
and
jmp
leave
shr
xor
ds
add
sti
(bad)
inc
inc
test
jns
cmp
or
vmwrite
sub
out
in
jmp
ret
ja
stos
cmp
in
and
jns
fisttp
add
cmp
adc
xchg
paddsw
(bad)
(bad)
jnp
jmp
cdq
dec
jne
pop
cmp
ret
jae
inc
jb
pop
jae
in
(bad)
cmp
add
and
jecxz
sub
inc
movs
add
cmp
test
jo
adc
push
jo
(bad)
dec
repnz
aam
cmp
push
repnz
fdiv
jae
inc
jle
and
(bad)
fcomp
lahf
pusha
cld
and
inc
and
pusha
jb
rol
movs
cmps
jecxz
test
imul
fs
sbb
in
jb
fsubr
popf
cmp
push
repnz
and
add
dec
jle
inc
in
(bad)
(bad)
mov
jb
and
in
jb
adc
adc
and
nop
cmp
jno
and
add
add
add
xor
jmp
nop
pop
in
add
add
dec
fdivr
das
nop
aaa
push
in
(bad)
jmp
jle
xor
xor
call
je
dec
or
pop
sbb
push
in
repnz
(bad)
dec
push
call
cmp
sbb
pop
(bad)
(bad)
inc
popf
sbb
(bad)
jmp
inc
enter
(bad)
jmp
std
(bad)
(bad)
stc
adc
and
std
(bad)
jmp
jl
(bad)
std
(bad)
push
(bad)
dec
and
inc
pop
std
(bad)
inc
inc
xchg
inc
add
sub
std
(bad)
push
inc
pop
jne
add
or
cmovo
jb
aaa
pop
inc
pop
and
add
jb
sbb
ds
mov
punpcklwd
add
mov
(bad)
call
or
jmp
sbb
dec
pop
and
push
repnz
call
pop
mov
sbb
leave
sbb
rcl
mov
call
sbb
add
jp
dec
ds
test
(bad)
inc
pop
in
adc
das
(bad)
dec
lock
ds
imul
femms
inc
xor
jle
(bad)
call
add
sbb
jo
xchg
push
inc
cmp
push
leave
pop
xchg
in
jl
popf
ret
(bad)
call
sbb
or
or
stc
and
(bad)
jg
(bad)
call
sar
inc
jne
sub
pop
mov
inc
enter
in
das
(bad)
(bad)
ds
(bad)
inc
sar
stos
imul
and
sub
xchg
pop
pop
shr
rol
fsubr
sub
seto
sbb
jmp
(bad)
jns
fmul
(bad)
call
dec
jb
adc
sub
ret
repnz
ins
ret
jl
ss
enter
test
(bad)
(bad)
call
add
lea
add
xor
nop
pop
(bad)
and
add
and
jae
jg
push
in
fdivp
push
cdq
push
shl
and
jb
jae
push
enter
loopne
dec
push
and
test
enter
pop
bnd
int3
jb
jo
inc
push
and
jno
jno
repnz
adc
add
int3
bswap
das
in
(bad)
call
(bad)
(bad)
aas
sub
xchg
jmp
(bad)
push
icebp
inc
inc
loopne
int3
add
xor
mov
daa
xchg
inc
xor
int3
repnz
sbb
iret
int3
add
js
cli
or
in
sbb
nop
int3
sbb
enter
cli
jne
xor
pop
pop
lock
es
cld
mov
(bad)
jmp
pop
sbb
nop
and
jo
pop
enter
add
xor
inc
repnz
add
add
in
enter
pop
jo
add
or
sub
adc
push
add
ins
inc
jo
int3
xchg
ja
enter
icebp
push
push
and
adc
push
leave
and
push
enter
jae
clc
ja
mul
call
nop
enter
pusha
inc
test
mov
pop
cli
inc
xchg
pop
add
sub
jl
cld
ds
sub
sar
pushf
mov
ds
inc
retf
inc
repnz
pop
mov
add
add
jae
jno
in
(bad)
nop
jae
jae
(bad)
(bad)
(bad)
stc
add
add
in
(bad)
dec
xor
pop
ds
rol
in
cld
dec
mov
(bad)
inc
enter
jle
scas
dec
jae
add
add
or
cmp
jae
jae
pop
enter
and
nop
pop
and
mov
add
sldt
sahf
xchg
and
or
add
ror
cmp
aas
fldenv
sub
add
add
in
adc
into
ss
pushf
xchg
fsubr
inc
push
cmp
add
jne
int
stc
cmp
(bad)
inc
or
inc
mov
test
jno
jne
and
loop
and
add
dec
and
pop
dec
or
dec
mov
mov
lock
neg
adc
arpl
add
rcr
inc
push
int3
pop
dec
and
dec
ss
and
cs
(bad)
call
hlt
(bad)
(bad)
js
adc
scas
inc
in
add
jge
aaa
repnz
(bad)
push
(bad)
jmp
mov
jo
xchg
pop
nop
push
sub
push
add
add
xchg
int
jne
jne
cld
(bad)
(bad)
cmp
add
stos
(bad)
(bad)
dec
loop
add
sbb
xchg
push
pop
or
and
adc
jle
jl
or
cmp
dec
dec
xor
xchg
leave
ret
aad
int3
cmp
adc
mov
sub
loop
nop
iret
add
adc
movs
jnp
leave
sbb
jne
jmp
add
push
xchg
cmp
pop
mov
pop
(bad)
mov
add
add
fs
leave
mov
pushf
add
xor
or
xchg
jl
rcr
(bad)
push
sbb
adc
dec
in
imul
jle
repnz
jae
jno
scas
dec
sbb
inc
out
(bad)
jmp
dec
jns
aas
xchg
jno
add
add
sahf
lods
sbb
jno
jno
jno
push
cmp
das
in
dec
jno
jno
jno
jno
dec
jb
dec
jno
jno
lods
(bad)
jmp
nop
pop
and
sbb
inc
jno
jno
nop
pop
enter
jno
adc
(bad)
call
push
push
bound
sub
jae
jno
jno
jno
adc
inc
ins
stos
(bad)
(bad)
(bad)
pop
(bad)
jmp
inc
enter
adc
add
in
and
in
(bad)
(bad)
cmp
xchg
sbb
jl
cld
(bad)
inc
jno
and
jno
jno
add
add
(bad)
(bad)
jmp
(bad)
(bad)
call
and
dec
pop
dec
or
xchg
lahf
(bad)
(bad)
(bad)
aas
call
and
jno
jl
inc
pop
dec
cwde
std
(bad)
(bad)
ds
sbb
(bad)
push
fst
dec
lea
jae
or
pop
and
add
dec
or
repnz
xchg
add
sbb
call
dec
jb
in
jnp
(bad)
call
dec
pop
dec
add
cld
repnz
dec
repz
(bad)
(bad)
aas
sbb
mov
div
cli
mov
enter
mov
in
les
adc
inc
hlt
not
mov
add
ins
add
or
dec
shr
jns
dec
inc
stc
stos
mov
inc
mov
(bad)
nop
pop
add
(bad)
inc
ja
xchg
and
sub
push
add
lods
shl
cmps
mov
mov
push
xor
lods
add
pop
sub
or
add
jne
mov
sti
mov
add
les
jg
fcmovnb
or
jl
in
jno
idiv
(bad)
js
add
push
inc
nop
enter
sub
lods
pop
push
imul
and
sbb
nop
add
int3
ja
jo
and
cmps
inc
add
push
repnz
(bad)
push
add
leave
add
js
adc
scas
add
dec
pusha
and
cmp
bound
(bad)
jb
xlat
stc
sub
and
retf
enter
sub
loope
sub
mov
pop
stc
leave
(bad)
jmp
(bad)
jmp
mov
dec
ss
outs
pop
jns
mov
mov
and
mov
enter
sub
cdq
push
out
or
mov
scas
adc
and
push
loopne
lea
lea
inc
mov
add
or
inc
pusha
sub
inc
jnp
cmp
adc
daa
sti
dec
mov
(bad)
scas
mul
scas
test
shl
dec
popf
pusha
(bad)
out
sub
sbb
cli
push
mov
mov
scas
cld
dec
jmp
popa
and
mov
sbb
idiv
pusha
jne
lods
jb
sub
and
movs
jb
mov
jbe
sub
dec
gs
jns
push
push
or
sbb
mov
pop
mov
dec
add
out
outs
sbb
js
push
push
gs
cmovge
dec
sbb
(bad)
inc
push
int3
jg
dec
adc
ins
xchg
inc
sti
sbb
fdivr
cmp
ds
pushf
push
xchg
stc
and
js
add
dec
jmp
cmp
lahf
imul
mov
mov
in
fnstcw
dec
mov
dec
xchg
jo
cmp
or
or
dec
pop
mov
int3
cmp
dec
adc
outs
mov
gs
add
cmp
add
fcom
pop
xor
imul
dec
cmp
les
xchg
iret
adc
cmp
pusha
jno
xchg
cmp
inc
jno
cmp
mov
arpl
or
out
movs
fcomip
arpl
(bad)
(bad)
sub
add
cmovns
xchg
ds
sub
dec
les
ret
fcomp
dec
dec
retf
dec
ss
dec
xchg
jo
pop
jb
cwde
jo
(bad)
push
adc
jb
cmp
xlat
add
or
or
jbe
jb
jno
add
ss
mov
aas
dec
das
dec
adc
or
int3
or
sub
sub
pop
sbb
push
in
repnz
or
xor
in
out
idiv
(bad)
fcomip
(bad)
call
mov
mov
ds
xor
(bad)
idiv
jmp
xchg
mov
push
(bad)
jmp
inc
repnz
(bad)
jmp
push
repnz
(bad)
inc
push
xchg
or
fs
enter
stc
push
(bad)
(bad)
jns
inc
and
(bad)
jmp
(bad)
inc
enter
sub
rol
add
adc
jmp
sbb
stos
stos
and
add
and
jb
cmp
ss
fstp
imul
xchg
nop
and
sub
xchg
repz
repz
inc
ins
cmc
cmp
repnz
cld
pop
adc
xchg
mov
cmps
leave
push
push
xor
hlt
fsub
nop
bswap
(bad)
jmp
mov
ins
inc
jns
inc
imul
aam
inc
fxtract
jle
fld
jmp
mov
(bad)
(bad)
jg
(bad)
dec
cli
repnz
dec
enter
or
call
(bad)
inc
jge
repnz
jae
ins
call
xor
(bad)
inc
repz
inc
jb
jg
add
cwde
in
(bad)
(bad)
mov
movs
fxam
add
call
and
sub
movs
jb
test
stos
je
pop
(bad)
dec
jmp
mov
jbe
and
arpl
sahf
xchg
sbb
push
xor
(bad)
lahf
cld
jmp
movs
jnp
aas
clc
jmp
and
pop
in
je
sar
fcomp
xchg
es
les
je
jnp
jb
inc
inc
pushf
movs
xchg
outs
push
test
pop
jle
sbb
xor
pop
jge
popf
adc
push
sbb
in
push
outs
inc
xchg
inc
sbb
push
outs
in
fist
xchg
sbb
mov
sub
rcr
in
(bad)
and
(bad)
jg
or
push
push
lahf
je
shr
data16
mov
scas
popf
ja
push
mov
push
scas
cwde
inc
xchg
pop
sub
daa
mov
cmp
pop
popf
jmp
shr
pop
aas
mov
pop
push
push
jmp
mov
inc
dec
fcomp
xor
daa
add
or
lahf
cwde
jl
and
xchg
leave
retf
inc
sub
std
push
pop
repnz
cmps
stos
dec
jb
push
lods
mov
loopne
std
mov
call
retf
sub
movs
mov
mov
es
adc
push
test
or
jl
xchg
xchg
xchg
mov
mov
repnz
add
sahf
push
sub
cmp
cmp
push
or
mov
out
lods
bound
call
(bad)
jmp
ficomp
(bad)
fsubr
add
and
inc
pop
out
sahf
out
jo
nop
mov
scas
mov
and
repz
dec
pop
push
repz
repz
mov
imul
cmps
push
xor
repz
inc
xchg
mov
ds
repz
sub
or
mov
loop
shl
iret
xchg
jp
push
inc
cmp
sahf
sub
mov
push
lock
mov
out
sahf
out
jp
dec
cmp
sahf
ja
xor
push
pop
inc
xor
jl
out
or
neg
iret
fmul
shl
cmp
je
dec
cmp
sbb
ret
test
sahf
push
out
push
stos
inc
push
iret
repz
and
inc
push
bound
iret
repz
mov
repz
stos
jbe
loop
repnz
push
sub
push
cmp
repz
xor
cmp
repz
jo
push
adc
jns
iret
add
test
fcmovbe
sahf
out
sahf
mov
data16
out
push
inc
cmp
or
cmp
repz
cmps
out
loopne
test
repz
pushf
mov
pop
inc
mov
and
cmps
outs
push
iret
repz
fmulp
mov
iret
repz
pusha
push
jmp
enter
mov
loope
lods
mov
jp
xor
or
jo
movs
push
add
xor
ja
nop
ins
(bad)
stos
xchg
movs
add
push
inc
add
adc
maskmovq
neg
(bad)
sysret
fst
fs
repz
pop
push
pop
ins
mov
xchg
lock
fadd
(bad)
ss
or
push
inc
push
push
ror
ins
mov
imul
dec
push
cli
dec
xchg
dec
jnp
out
out
dec
mov
adc
xor
lock
xchg
sbb
nop
pop
fdiv
mov
cmp
mov
pop
pop
enter
inc
and
ss
mov
fsub
add
xchg
(bad)
dec
inc
pop
cmp
inc
xlat
dec
inc
xchg
adc
cmp
lock
jbe
pushf
dec
ss
or
cmps
loopne
xchg
addr16
or
fwait
and
or
or
(bad)
loopne
or
ret
out
push
cmp
(bad)
gs
test
fdiv
or
enter
loopne
or
adc
push
imul
out
push
pop
inc
sub
pop
push
fcomp
jecxz
dec
inc
adc
cs
cmp
cmps
push
dec
mov
and
sbb
es
push
inc
sbb
cmps
stc
fimul
rcr
pop
push
cli
pop
test
test
mov
push
lock
loopne
mov
and
mov
and
js
push
dec
repz
adc
pop
push
scas
or
(bad)
mov
pop
pop
mov
or
sbb
mov
push
nop
jp
dec
push
popf
mov
dec
lea
mov
ss
into
push
dec
lahf
out
sahf
dec
push
test
inc
call
sbb
repz
or
push
inc
iret
repz
add
mov
iret
jnp
push
dec
cwde
out
into
sbb
inc
and
pop
pop
cli
pop
js
lahf
jbe
mov
mov
rcr
pop
mov
push
cmp
mov
push
sbb
cs
stc
add
jp
retf
fisttp
push
push
(bad)
cwde
jp
fs
push
jo
adc
push
pop
enter
cs
(bad)
lock
inc
add
repnz
jnp
pop
fdiv
rol
inc
out
sub
xchg
cmp
mov
das
xor
xor
pop
aaa
push
and
xchg
jns
cmp
add
scas
es
repnz
pop
enter
fldenv
inc
push
and
stc
es
add
cmp
and
add
add
cmps
xor
pop
enter
ss
cmp
push
and
(bad)
xchg
movs
cmp
add
loop
push
adc
and
enter
lahf
loop
enter
fild
loope
jmp
imul
sub
push
cmp
fwait
int
out
das
idiv
xchg
fnstcw
push
nop
push
push
push
sub
enter
and
(bad)
pminub
nop
mov
aam
pop
pop
push
retf
rcl
popa
clc
pusha
loop
inc
and
imul
dec
pop
inc
dec
pop
data16
(bad)
mov
adc
jnp
data16
push
sbb
lds
mov
cs
pop
(bad)
das
imul
ss
mov
fisubr
(bad)
fistp
out
push
sbb
sub
push
mov
bound
outs
inc
or
jns
xor
loope
cmp
and
pop
jle
jg
mov
inc
sub
mov
add
or
mov
lods
push
pop
pop
popf
popa
push
or
adc
dec
scas
sbb
or
pop
jbe
mov
cmovg
icebp
mov
sub
mov
mul
pop
push
push
mov
xchg
sbb
outs
and
clc
pop
cmp
nop
(bad)
cs
cmp
daa
ror
ds
pop
mov
push
push
mov
push
sub
mov
xchg
xor
scas
mov
adc
xchg
mov
add
push
add
mov
xchg
mov
add
jae
test
or
lock
fdivr
rcr
lods
aad
mov
das
xchg
cmp
mov
xlat
pusha
outs
mov
and
jo
dec
cwde
mov
fcom
lahf
xchg
daa
pop
and
ins
les
mov
adc
xor
(bad)
frstor
cmp
push
daa
das
or
ja
daa
push
das
or
lahf
push
test
mov
cmp
in
jo
nop
in
repnz
mov
mov
dec
mov
jo
mov
leave
jae
cwde
fadd
rol
loopne
add
add
pop
fsubr
sbb
xchg
pop
dec
jae
(bad)
shr
mov
cmp
xor
or
mov
in
push
add
inc
add
in
fsubr
mov
or
sbb
xor
sub
adc
(bad)
out
or
ss
mov
fst
fsub
jae
push
lock
(bad)
push
leave
or
(bad)
cdq
nop
(bad)
js
cwde
inc
scas
xchg
or
out
mov
sub
loopne
das
clc
lahf
or
inc
mov
fadd
and
nop
cmp
outs
mov
pop
daa
clc
jmp
sar
call
clc
daa
adc
aas
push
cmp
daa
dec
and
ja
nop
jg
and
cmp
test
push
jo
cmp
jb
push
cwde
push
add
cmps
lods
pop
sub
call
jb
loope
enter
sub
frstor
ja
daa
cmps
nop
int
into
add
push
arpl
aam
dec
scas
nop
enter
enter
sbb
xchg
imul
push
xchg
sub
jno
shl
loopne
test
xchg
or
call
xchg
mov
pusha
dec
xchg
imul
scas
nop
xchg
mov
jb
and
xchg
pop
pop
xor
call
ficom
dec
cmp
in
sub
pusha
loopne
in
cld
mov
push
add
sbb
dec
cwde
pop
ins
mov
aas
fidivr
enter
dec
xor
and
mov
cmp
xchg
push
shl
inc
neg
iret
mov
mov
push
enter
xchg
clc
xchg
inc
or
jb
push
xchg
xor
dec
xchg
loopne
jmp
xchg
sub
js
mov
mov
les
jl
sub
test
(bad)
add
movs
mov
mov
and
scas
fsubr
dec
sbb
shr
xchg
sar
clc
enter
or
and
and
dec
or
aas
pop
js
das
inc
repnz
mov
nop
mov
and
imul
or
enter
call
push
call
dec
dec
and
cs
cmp
fwait
add
xor
popf
daa
cli
adc
jnp
xlat
push
xchg
mov
out
dec
pop
mov
jbe
int
lahf
out
stos
or
sahf
(bad)
mov
sahf
jae
cwde
lods
jo
push
xchg
add
out
call
pop
jb
inc
xchg
je
push
outs
outs
ins
push
add
push
outs
popa
jo
push
leave
jnp
(bad)
jb
and
and
into
sbb
gs
popa
outs
or
mov
imul
push
and
jne
sbb
xchg
mov
ja
inc
add
push
outs
ja
xor
outs
mov
sbb
shr
pop
les
imul
pop
mov
add
pop
push
sbb
inc
int3
jle
cmp
xor
or
rol
loopne
ficom
add
mov
pusha
mov
into
add
add
cmp
inc
popa
inc
outs
jb
mov
or
and
push
sub
mov
je
sar
stos
out
jo
adc
xor
jnp
dec
aam
js
jge
shl
mov
clc
add
lock
and
add
push
add
sbb
clc
push
add
fild
pop
xlat
add
fwait
add
inc
movs
mov
mov
or
and
push
shr
add
jae
push
sub
jbe
mov
inc
jle
imul
xlat
xchg
push
inc
in
sbb
and
sub
int3
repnz
loope
ins
jae
call
sahf
push
jmp
adc
inc
jb
outs
lods
movs
std
add
mov
arpl
mov
inc
add
add
xor
inc
es
call
fs
push
fcom
push
pop
adc
retf
mov
sub
sub
ret
js
arpl
rcl
fisub
sbb
push
bound
inc
push
cwde
mov
and
ins
es
dec
sbb
out
add
sbb
(bad)
and
add
xor
sbb
adc
jb
and
out
adc
push
jmp
out
int
add
fcomi
ins
mov
outs
ins
out
add
loopne
stos
inc
test
xchg
push
pop
add
push
add
xor
pop
sub
dec
xchg
push
and
add
and
pop
mov
sar
gs
leave
jae
jns
and
or
pop
neg
loopne
sbb
pop
gs
adc
xor
ror
test
xchg
data16
mov
mov
push
(bad)
mov
sub
shl
bound
icebp
or
sti
pop
int3
ja
add
nop
sbb
je
pop
rcl
mov
and
or
mov
add
xlat
push
out
popa
cmc
iret
pushf
loop
pop
cmps
icebp
sub
scas
or
mov
sar
jae
daa
inc
jne
data16
div
rcr
add
cmp
dec
sbb
rol
add
push
add
pop
dec
and
call
imul
add
push
imul
cmp
pop
jle
sbb
inc
or
scas
iret
push
scas
or
div
push
sbb
or
xor
push
das
push
push
mov
or
int
sub
push
int3
mov
jo
pop
xchg
push
popa
add
xor
push
ret
add
pop
mov
outs
jns
adc
pop
(bad)
jmp
mov
mov
inc
pop
push
pop
cmp
ss
inc
or
pop
and
addr16
xor
js
jg
arpl
and
arpl
adc
xor
shl
aaa
mov
pop
inc
sbb
int3
ss
ins
scas
add
inc
jnp
in
cmp
pop
cmp
addr16
fs
sub
push
dec
add
add
push
jne
leave
fwait
or
imul
in
outs
cmp
pop
dec
and
xor
das
aam
stos
inc
clc
fwait
sub
inc
mov
pop
clc
adc
imul
inc
mov
mov
xor
ret
push
add
fs
pop
xor
popf
pop
inc
sub
jbe
sub
xchg
add
dec
gs
dec
cmp
cmp
dec
or
add
cmp
scas
ret
and
sub
sbb
stos
inc
inc
push
dec
cmc
cmp
xchg
inc
es
outs
out
jnp
sar
data16
outs
aaa
inc
jmp
push
add
fs
pop
cmp
mov
imul
mov
cld
sub
jae
add
xchg
jne
(bad)
je
xchg
push
mov
fwait
jo
test
xchg
inc
push
dec
inc
cdq
or
ds
mov
push
mov
push
sahf
adc
push
es
pop
ja
xor
and
xor
adc
inc
out
jmp
stos
or
inc
add
xchg
cmps
jecxz
loopne
pop
gs
fwait
add
int
in
jbe
dec
jne
mov
dec
dec
mov
jns
adc
pop
ja
xor
pop
jnp
jbe
and
xchg
push
push
adc
push
cmp
add
jae
jnp
fnstcw
and
mov
push
mov
add
into
cs
jno
adc
daa
sahf
addr16
retf
cmp
add
pop
push
and
push
cwde
(bad)
data16
cmps
and
add
outs
pusha
inc
pop
repnz
inc
dec
xchg
dec
sub
cmps
push
cli
or
data16
push
pusha
cmps
aaa
cdq
add
mov
inc
sbb
jne
inc
adc
jo
push
cmp
xchg
out
lea
sub
add
ret
push
sub
or
dec
pop
outs
mov
aaa
call
sub
mov
adc
outs
ins
and
fisubr
cdq
retf
xor
mov
xor
xchg
jmp
dec
cmp
adc
pop
popa
sbb
js
xchg
xor
adc
jnp
sbb
in
and
les
ficomp
add
das
shl
and
push
inc
push
and
sbb
dec
add
call
arpl
and
inc
dec
popf
dec
mov
data16
adc
arpl
jle
bound
pop
mov
adc
movs
les
mov
inc
or
pop
jmp
push
sub
je
aas
cmp
in
popa
inc
imul
cmp
std
ret
pop
sub
ret
sbb
jnp
push
test
ds
pusha
push
push
dec
or
xchg
stos
mov
sub
dec
jae
pop
in
daa
pusha
add
jo
gs
sbb
mov
icebp
add
ja
add
dec
add
mov
pop
imul
cwde
sbb
enter
out
jle
rol
imul
mov
add
mov
je
mov
rol
ins
dec
mov
push
push
dec
clc
push
popa
cld
dec
dec
cs
push
push
mov
dec
pop
cli
jb
add
xor
jno
jb
push
out
out
xor
adc
pop
fldcw
shl
popa
and
push
inc
fs
dec
cmps
addr16
jle
jmp
mov
sub
pusha
out
ss
dec
icebp
pop
pop
sbb
adc
mov
sar
outs
mov
ret
pop
outs
mov
pop
loope
fadd
(bad)
das
xor
or
inc
ins
add
jge
xor
sbb
stos
repnz
out
push
es
xor
retf
loope
and
cld
sti
and
dec
cs
loope
jmp
mov
mov
cs
xor
jg
div
ja
xchg
daa
retf
das
retf
mov
das
fwait
rcl
mov
pop
and
fwait
sbb
out
rol
xor
cmp
ret
test
xor
add
or
int
sahf
or
push
aad
cmp
sbb
xchg
es
dec
loopne
ret
pusha
sub
inc
repz
and
add
mov
fdivr
and
adc
mov
push
push
pop
adc
adc
dec
and
xor
xor
sti
out
dec
inc
cs
jb
lahf
xchg
dec
pusha
outs
and
add
scas
or
jg
mov
mov
or
push
xchg
xlat
push
xchg
scas
out
loop
xor
ficom
ficomp
out
loopne
aaa
in
or
lea
sbb
(bad)
jg
(bad)
leave
inc
jmp
out
ja
or
(bad)
(bad)
(bad)
push
sbb
iret
mov
xor
(bad)
sub
push
add
int3
add
ror
(bad)
push
int
out
mov
jg
call
push
dec
add
push
cmp
push
xor
fcmovne
sub
push
(bad)
(bad)
jmp
or
push
stc
ins
sub
je
push
int3
jle
sbb
jmp
fcomip
(bad)
(bad)
inc
add
test
neg
loope
inc
push
inc
and
add
into
(bad)
ins
mov
pushf
add
(bad)
jg
call
push
mov
outs
(bad)
fsub
pop
mov
std
outs
mov
addr16
mov
out
(bad)
fs
jg
dec
add
sub
add
pop
test
mov
push
inc
iret
mov
int
mov
ss
dec
mov
(bad)
fistp
dec
add
dec
cmp
ja
dec
inc
cmps
std
mov
fld
jb
outs
cs
add
(bad)
(bad)
cmp
shl
or
jnp
(bad)
jl
daa
ja
sbb
dec
(bad)
dec
loopne
jg
not
into
push
inc
push
xchg
movs
add
inc
push
rcr
call
(bad)
jg
retf
push
in
fild
adc
jae
into
je
dec
jg
call
push
sbb
add
mul
or
push
dec
push
add
sti
inc
pusha
call
(bad)
sub
(bad)
adc
dec
je
call
(bad)
pop
int3
push
lea
enter
dec
shr
dec
mov
(bad)
mov
(bad)
lods
push
ret
jbe
dec
aam
inc
xor
dec
cmp
add
test
loope
sti
(bad)
enter
adc
dec
dec
mov
inc
js
ins
clc
lock
or
(bad)
(bad)
(bad)
inc
inc
daa
mov
ret
mov
shl
enter
fcmovnu
or
adc
loopne
inc
clc
jmp
or
mov
sbb
mov
mov
xor
idiv
(bad)
(bad)
(bad)
call
or
(bad)
and
(bad)
mov
dec
mov
cmp
nop
sbb
fild
call
je
xor
popa
rcr
cld
cs
xchg
add
call
dec
mov
fnstenv
push
not
lea
push
sbb
call
inc
(bad)
jg
sbb
movs
clc
stc
push
mov
cdq
(bad)
(bad)
inc
mov
mov
sbb
push
sub
or
(bad)
mov
adc
scas
mov
sbb
sub
jmp
pop
xor
icebp
std
mov
(bad)
mov
sub
add
int3
(bad)
(bad)
(bad)
out
nop
cmovs
fimul
sbb
adc
mov
retf
mov
and
add
(bad)
(bad)
dec
out
cmp
jmp
sub
aad
xlat
cmp
shl
mov
ins
and
out
add
(bad)
ins
mov
pop
mov
add
popa
loop
das
(bad)
or
sbb
leave
or
jg
call
ja
in
push
dec
in
movsd
push
xchg
mov
adc
(bad)
(bad)
(bad)
std
mov
sbb
inc
bound
mul
loopne
adc
ret
cmp
into
leave
int
(bad)
(bad)
dec
inc
ss
mov
retf
add
mov
pusha
mov
add
les
idiv
call
mov
xchg
inc
jae
ds
mov
pop
jmp
xlat
jo
fiadd
and
or
(bad)
(bad)
(bad)
jmp
add
int
fimul
out
cmp
repz
fadd
mov
fist
(bad)
(bad)
call
adc
jmp
fistp
pop
and
sub
into
sub
inc
cmp
fdivr
popf
xor
mov
div
ror
ins
sub
mov
outs
(bad)
(bad)
(bad)
std
imul
xor
and
in
jge
repnz
or
and
clc
cmp
sbb
jns
mov
adc
sbb
push
outs
xchg
jmp
dec
(bad)
(bad)
(bad)
push
dec
rol
jp
dec
or
fimul
dec
mov
sbb
mov
push
or
cmp
(bad)
mov
jmp
push
adc
sbb
mov
mov
leave
jmp
or
dec
add
sbb
data16
pop
enter
in
or
fdiv
call
in
jge
fwait
mov
or
pop
nop
mov
adc
dec
jmp
or
pusha
add
idiv
jmp
xchg
adc
fcomip
retf
jmp
jge
dec
push
sub
maxps
sbb
sbb
adc
sbb
jmp
push
mov
cs
(bad)
mov
int
mov
inc
mov
sbb
arpl
push
xchg
xchg
push
paddw
idiv
test
or
lods
loopne
mov
rcr
add
imul
push
adc
(bad)
push
ror
shr
cmp
mov
jo
mov
clc
inc
mov
dec
(bad)
call
inc
popa
js
add
adc
or
xchg
retf
dec
inc
cmp
jg
fisttp
push
or
test
dec
mov
add
inc
mov
jne
sub
data16
add
adc
lods
mov
idiv
push
cmps
mov
or
repnz
pushf
imul
add
dec
in
pop
adc
(bad)
mov
add
jmp
xlat
ins
ror
mov
or
(bad)
(bad)
call
add
cmps
fbld
cmp
jmp
adc
cmp
mov
mov
dec
mov
inc
pop
cld
jmp
jg
xchg
mov
jae
jl
mov
aas
mov
div
inc
inc
mov
out
sub
mov
(bad)
mov
popa
jbe
jae
and
mov
dec
retf
jg
sti
(bad)
fiadd
int3
loop
sub
(bad)
push
or
jp
or
call
(bad)
mov
mov
xor
mov
ss
call
sbb
push
stos
xor
cmp
enter
nop
pop
(bad)
(bad)
(bad)
push
dec
push
arpl
pop
pusha
xchg
sub
fdivp
mov
test
sub
jg
(bad)
mov
icebp
cmp
add
jne
data16
into
iret
add
jo
sti
aad
lea
in
mov
dec
and
inc
clc
mov
cwde
icebp
jo
push
mov
sahf
dec
lock
outs
or
pop
lock
and
ret
aas
pop
or
es
mov
(bad)
(bad)
call
jecxz
iret
das
repnz
icebp
fadd
fist
push
cmp
jge
inc
jmp
xchg
xor
je
(bad)
jg
push
mov
push
and
pop
es
adc
push
sbb
dec
pop
ret
inc
(bad)
(bad)
push
inc
js
das
mov
push
dec
or
js
or
sub
cmp
jle
(bad)
(bad)
(bad)
dec
xor
push
inc
mov
xchg
push
sbb
hlt
jmp
stc
push
inc
data16
test
fcomp
scas
js
cmp
add
into
or
lock
ins
add
fst
(bad)
(bad)
(bad)
push
lahf
push
lods
xor
shl
dec
xor
call
or
and
mov
mov
mov
cmovl
jmp
(bad)
dec
in
adc
lea
lods
imul
and
jne
cwde
(bad)
(bad)
(bad)
dec
mov
jbe
add
and
sahf
cmps
imul
add
and
or
pop
lods
sbb
(bad)
(bad)
jge
cmp
or
jns
adc
push
pop
inc
call
(bad)
cmps
dec
ret
(bad)
(bad)
(bad)
dec
jbe
add
shr
inc
dec
cmove
add
js
sub
outs
push
adc
push
inc
sub
std
stos
(bad)
adc
stos
iret
data16
xor
pop
loop
sbb
call
jg
pop
int3
(bad)
adc
mov
and
mov
aaa
and
add
scas
loopne
fmul
cs
stos
push
and
out
cmp
inc
fist
or
and
push
inc
call
icebp
(bad)
inc
dec
adc
adc
adc
pusha
xchg
sbb
jg
dec
cld
jecxz
push
leave
mov
push
sub
jae
inc
aam
and
inc
mov
test
inc
out
dec
nop
add
mov
mov
stos
pop
scas
or
inc
fild
mov
sbb
mov
(bad)
cld
push
cs
out
out
loope
push
pop
adc
scas
add
and
(bad)
dec
(bad)
mov
mov
retf
ror
push
fwait
pop
pusha
and
(bad)
(bad)
call
pop
jnp
jns
add
jl
inc
mov
fadd
lahf
in
xor
mov
aaa
cld
inc
adc
add
pop
bound
cmp
push
sub
std
(bad)
call
es
stos
fst
pop
push
jmp
cmp
or
xor
call
jb
scas
add
pop
sbb
stos
(bad)
inc
lods
pusha
pusha
dec
sbb
aad
push
mov
adc
outs
js
ror
lds
clc
out
cli
aaa
std
into
lea
jl
push
add
push
mov
adc
cmps
push
mov
sub
mov
call
push
pop
mov
mov
enter
mov
cmp
inc
inc
clc
(bad)
(bad)
cmp
add
loopne
jmp
(bad)
aas
jne
sbb
test
pop
xchg
cli
aaa
mov
dec
mov
mov
(bad)
(bad)
call
and
push
adc
or
xor
cmp
loop
sub
jle
(bad)
(bad)
(bad)
jmp
mov
gs
test
fadd
cmp
push
mov
mov
pop
mov
call
(bad)
fadd
into
div
mov
or
cwde
jmp
xlat
orps
or
lds
fcomip
xor
out
mov
cld
cmp
inc
in
jg
(bad)
out
or
(bad)
mov
scas
xchg
jp
mov
adc
xlat
movs
dec
pop
lahf
and
pop
repz
call
sbb
mov
pushf
push
rcl
imul
aam
jmp
ret
push
lahf
jne
or
and
mov
repz
or
adc
xchg
pop
sbb
in
daa
dec
and
idiv
(bad)
jmp
pop
iret
xchg
push
lds
call
movs
xor
sbb
lods
sti
in
(bad)
(bad)
jmp
out
xor
test
add
cli
add
(bad)
aam
sbb
(bad)
call
sub
aam
xor
xchg
sbb
push
xor
dec
dec
dec
and
add
shl
out
sub
std
push
xchg
dec
enter
(bad)
(bad)
inc
test
jae
scas
or
xor
stc
pop
mov
add
fsub
inc
jns
push
and
ror
sahf
(bad)
inc
and
jg
dec
sub
mov
mov
dec
stc
jg
dec
sar
pop
stos
inc
xor
retf
sub
cdq
jg
fisttp
mov
dec
xor
test
out
pop
pushf
pop
ins
sar
lock
nop
out
add
dec
pop
into
repnz
(bad)
(bad)
aas
dec
dec
mov
dec
lea
dec
push
not
nop
test
or
(bad)
dec
jle
scas
sub
mov
test
aad
adc
adc
(bad)
outs
push
loope
xchg
je
xor
push
fwait
push
cld
inc
jbe
sbb
movs
pop
jnp
sbb
pop
sub
push
push
xchg
icebp
add
jo
xor
adc
pop
add
jb
sub
pop
inc
xchg
xor
and
pushf
dec
adc
mov
jecxz
pop
cmp
and
(bad)
cmp
dec
lock
(bad)
call
adc
bswap
clc
lods
sbb
lods
lea
sub
adc
cld
fcomip
sbb
jo
ds
mov
gs
sbb
(bad)
cmp
and
stos
xchg
test
aas
add
mov
xor
sub
push
(bad)
push
mov
xor
dec
push
or
jae
imul
inc
je
or
jo
push
jb
leave
(bad)
push
fbld
dec
inc
jae
xor
retf
loopne
sbb
add
pop
or
mov
(bad)
(bad)
aas
adc
out
push
add
dec
dec
cmp
outs
out
add
and
sbb
(bad)
jg
lods
(bad)
pop
pop
mov
or
jmp
pusha
sbb
(bad)
jmp
mov
ins
mov
sub
sti
out
imul
or
inc
dec
cmp
fs
push
push
mov
ds
repz
(bad)
mov
and
and
inc
push
xlat
pusha
test
push
popf
xor
(bad)
out
adc
sbb
clc
push
mov
(bad)
(bad)
(bad)
call
mov
xchg
mov
inc
or
jnp
inc
mov
mov
xor
cwde
sub
(bad)
(bad)
call
sbb
jae
push
inc
xor
ja
dec
movd
or
out
(bad)
(bad)
(bad)
js
mov
jg
lock
out
retf
inc
enter
adc
cmp
shl
push
ins
fwait
sar
mov
push
out
ret
push
(bad)
int3
mov
mov
pop
cmp
push
in
lahf
call
jmp
or
xor
mul
dec
add
add
outs
inc
cmp
mov
dec
xor
or
sub
jmp
(bad)
dec
jp
add
jnp
xchg
ins
scas
mov
movzx
jbe
dec
fs
rcr
dec
add
push
mov
fs
ins
mov
xchg
out
(bad)
inc
jmp
jg
(bad)
ficom
mov
sar
push
mov
movs
push
loop
call
xlat
xchg
lea
pop
mov
push
dec
mov
pop
xlat
sar
(bad)
mov
and
sbb
mov
xor
dec
dec
sbb
(bad)
fcomip
sbb
xchg
jne
push
outs
fiadd
push
ins
xor
mov
ins
adc
adc
dec
jp
inc
adc
je
js
(bad)
(bad)
(bad)
jmp
js
jne
push
into
sbb
inc
cmp
call
and
inc
cmps
push
into
sbb
push
(bad)
(bad)
(bad)
push
inc
xchg
dec
push
pop
pusha
sbb
fld
jle
fild
shr
ret
(bad)
jl
jle
push
jg
cmp
(bad)
(bad)
jmp
and
push
jecxz
and
jmp
dec
mov
dec
xor
je
pop
jns
mov
(bad)
(bad)
inc
or
stos
ret
add
xchg
(bad)
mov
cmp
mov
or
(bad)
(bad)
dec
clc
inc
adc
inc
cmp
out
ins
mul
callw
mov
repz
(bad)
(bad)
jmp
lea
mov
pop
cmp
sub
sub
xor
or
xchg
dec
(bad)
(bad)
(bad)
inc
mov
xor
outs
pusha
loop
jo
out
adc
adc
ss
jg
dec
push
js
jae
add
pop
and
jle
pop
bound
jmp
pop
fstp
jno
jae
(bad)
(bad)
(bad)
call
jecxz
xchg
mov
inc
fdiv
inc
mov
mov
pop
inc
inc
idiv
(bad)
(bad)
(bad)
cmp
pop
cmc
loop
inc
lock
lock
and
iret
mov
cmp
jl
xchg
inc
and
(bad)
call
repz
loop
call
push
push
jmp
mov
mov
add
dec
std
(bad)
mov
sahf
repz
cli
loop
inc
push
out
cmp
int3
pop
inc
dec
(bad)
(bad)
call
xor
lahf
pusha
les
mov
movaps
xor
mov
(bad)
sub
(bad)
(bad)
(bad)
(bad)
jnp
jecxz
mov
push
push
push
(bad)
pusha
push
jl
fld
mov
add
ja
cli
fisttp
dec
fs
or
add
push
scas
(bad)
bound
inc
jo
push
mov
test
inc
jle
jne
in
jmp
inc
and
sub
aad
(bad)
mov
mov
mov
xor
outs
clc
call
dec
and
and
pop
mov
out
jl
xchg
dec
leave
sub
jmp
cli
in
shr
mov
inc
mov
sar
push
jns
shl
(bad)
(bad)
(bad)
dec
adc
push
push
xchg
mov
adc
lods
sti
popa
add
push
or
call
and
call
cli
fcom
fild
pop
pop
cmp
cmc
and
and
(bad)
push
pusha
or
(bad)
(bad)
jg
jne
nop
fsubr
sub
mov
das
pop
or
jb
xor
femms
xchg
or
jmp
dec
sub
pop
xor
adc
cmp
cmp
or
push
ud0
pop
xchg
dec
(bad)
mov
add
movs
or
pop
stos
inc
dec
push
pop
(bad)
jmp
sub
bound
nop
inc
enter
daa
jl
cmp
pop
push
movs
or
add
test
stc
call
adc
sbb
in
mov
(bad)
(bad)
fist
push
push
loope
pop
pusha
push
push
int
sub
xor
retf
xchg
jmp
stc
pusha
lods
mov
adc
mov
dec
jo
daa
adc
outs
sbb
mov
cmp
call
outs
movs
adc
jmp
js
pusha
push
mov
jl
pop
sub
int
push
jge
sbb
sub
cmp
and
fist
jle
(bad)
(bad)
dec
jmp
js
pop
add
mov
jo
sbb
call
sar
or
dec
add
push
inc
jo
sbb
add
daa
ins
pusha
dec
(bad)
mov
jmp
cmp
pop
or
add
cmp
pop
sbb
(bad)
jmp
mov
js
loope
and
js
iret
or
jo
(bad)
(bad)
call
push
mov
mov
les
inc
cmp
ins
or
cwde
add
and
test
(bad)
(bad)
(bad)
out
fcomp
xor
mov
inc
cmp
dec
cmp
sub
cmp
sbb
adc
sub
push
adc
xchg
outs
sahf
mov
(bad)
(bad)
jg
jge
jns
cdq
push
or
aas
pusha
retf
mov
daa
das
je
sbb
call
test
inc
add
out
cmp
hlt
or
xchg
inc
sbb
xchg
adc
(bad)
(bad)
fist
mov
dec
(bad)
jmp
xor
dec
jb
add
call
nop
xor
sub
(bad)
push
lock
or
sub
repnz
mov
add
(bad)
dec
adc
mov
or
mov
sub
cmp
call
or
js
cmp
mov
sbb
and
inc
and
xor
jo
in
push
pop
jo
pop
cmp
cld
add
dec
and
mov
gs
jg
lock
fcmovu
xor
push
scas
clc
(bad)
call
cmp
repz
mov
dec
add
sahf
dec
cmp
or
stos
repnz
xchg
cmp
ret
push
shl
pop
fstp
daa
loope
call
jg
jne
scas
xor
hlt
pop
rcl
pop
adc
dec
int
inc
js
hlt
(bad)
(bad)
dec
jg
mov
outs
inc
movups
inc
ror
jo
in
push
mov
push
sbb
das
sar
add
pop
pop
xor
fsub
inc
or
pop
inc
add
call
xchg
(bad)
jmp
(bad)
(bad)
(bad)
push
push
out
cs
inc
add
add
push
push
push
clc
aaa
add
inc
cmp
jl
jg
(bad)
(bad)
call
inc
(bad)
call
pop
ja
shr
sbb
sti
sbb
or
adc
adc
call
push
sbb
dec
cmp
test
aas
sbb
push
jns
dec
mov
jmp
sbb
rcr
js
adc
inc
pusha
and
(bad)
xor
stc
xor
mov
loopne
out
js
lea
loopne
add
sbb
lods
dec
stos
xor
hlt
jae
ja
popa
cld
call
lea
ret
jb
adc
xor
call
sbb
sbb
call
xor
mov
jnp
mov
(bad)
xor
add
ret
or
jne
and
or
sbb
xchg
mov
(bad)
dec
or
outs
sar
cmp
mov
bt
das
int3
mov
jae
(bad)
fild
pop
aaa
push
xchg
jle
sbb
mov
aas
mov
lahf
jmp
hlt
(bad)
(bad)
ds
in
dec
mov
pop
add
inc
cmc
(bad)
(bad)
fbld
test
imul
jmp
fwait
ja
scas
loope
lods
jl
lods
call
lock
inc
aaa
mov
adc
jecxz
ss
ret
cmp
lea
arpl
add
in
pop
adc
and
ins
jno
mov
sub
xor
cmp
inc
rcr
pop
pop
xchg
out
dec
mov
push
mov
and
push
mov
pop
sbb
cmp
call
test
jo
push
add
repnz
(bad)
call
cli
pop
sub
xor
jmp
adc
inc
inc
sbb
push
and
call
(bad)
call
cmp
add
sub
or
inc
cmp
add
outs
out
out
lea
adc
jbe
mov
andnps
sbb
jbe
pop
mov
mov
imul
push
jl
cs
out
mov
xor
mov
(bad)
(bad)
call
push
inc
ss
pop
sbb
aad
jbe
xchg
fiadd
cmp
jmp
je
sub
pcmpgtb
iret
xor
mov
add
mov
das
sbb
cmp
sub
ins
inc
adc
mov
adc
push
shl
push
pop
push
cmp
pop
addr16
dec
leave
gs
mov
(bad)
jmp
ins
ss
xchg
fcmovne
push
sbb
pusha
cmp
and
out
jmp
mov
imul
fdiv
enter
cmp
in
in
mov
or
mov
pop
pop
mov
pop
out
add
les
add
inc
mov
leave
ss
mov
xchg
cmps
jno
outs
or
inc
jl
add
js
jl
cmps
ins
or
into
sbb
cmps
mov
and
adc
inc
add
cmp
popa
(bad)
(bad)
(bad)
jmp
movs
xor
cmovne
mov
inc
in
and
mov
lahf
in
push
cmp
cmp
sbb
push
(bad)
(bad)
call
sbb
loop
std
jmp
cmps
mov
mov
ret
aaa
cld
jmp
pushf
pushf
mov
inc
push
arpl
sahf
pushf
xchg
add
sub
ss
jle
cmp
or
stos
ret
shr
repz
sahf
iret
cmp
repz
fild
mov
imul
fwait
stos
mov
mov
mov
ja
(bad)
cmp
adc
cmp
mov
(bad)
fstp
jmp
in
test
cmp
arpl
imul
mov
mov
jecxz
xchg
aas
scas
in
lds
or
ds
xchg
(bad)
dec
jnp
lahf
bswap
enter
jmp
or
sbb
(bad)
(bad)
(bad)
fild
jae
shl
mov
sbb
dec
outs
jbe
int
lahf
cmps
es
jg
jmp
dec
pop
mov
cmp
repz
cmps
scas
mov
repz
into
(bad)
fsubrp
out
ds
idiv
push
imul
dec
push
sahf
out
sahf
push
es
dec
push
pop
data16
or
mov
jbe
dec
out
dec
add
dec
add
adc
sbb
out
dec
xchg
xchg
xchg
scas
test
rep
push
(bad)
inc
(bad)
into
into
iret
(bad)
mov
add
adc
xchg
ror
(bad)
in
mov
pop
sbb
js
or
pop
pop
or
add
(bad)
(bad)
call
pop
or
shl
push
jge
and
mov
mov
(bad)
(bad)
(bad)
jns
and
push
data16
add
pushf
jmp
dec
sub
mov
(bad)
xchg
add
push
inc
ror
inc
push
ret
movs
cmps
sar
sbb
fld
pop
inc
sbb
jl
add
(bad)
call
cmps
movs
sub
lock
mov
(bad)
data16
sub
clc
(bad)
(bad)
jmp
pushf
stc
call
cmp
adc
push
lock
(bad)
pop
dec
js
push
(bad)
(bad)
fucomp
mov
test
daa
cs
push
mov
mov
shr
push
test
lock
(bad)
(bad)
(bad)
(bad)
jmp
lods
stos
imul
test
adc
and
aas
adc
push
(bad)
(bad)
(bad)
call
sbb
cmp
pushf
(bad)
nop
rcl
cmp
imul
inc
je
enter
pop
cmp
sbb
push
lods
ds
mov
xchg
jg
pop
iret
mov
out
add
fstp
dec
(bad)
icebp
(bad)
inc
adc
mov
jecxz
mov
je
dec
(bad)
(bad)
jg
dec
test
cmp
mov
and
mov
push
cmp
jno
mov
(bad)
(bad)
(bad)
inc
adc
neg
cmp
repnz
pop
adc
add
pop
adc
mov
mov
outs
push
loope
in
movs
sub
xor
sahf
dec
sub
aas
sar
(bad)
in
adc
or
mov
xchg
ret
retf
mov
or
call
cmp
add
mov
or
cmp
(bad)
(bad)
mov
add
lahf
jno
iret
mov
loopne
(bad)
std
ja
dec
or
rol
jmp
cmp
sub
es
fstp
loop
and
add
mov
jp
sbb
and
pusha
adc
fistp
and
or
adc
das
call
mov
(bad)
call
popa
add
(bad)
and
push
and
pop
cmp
and
jmp
jg
pop
mov
ja
xor
add
mov
cwde
into
jmp
jae
psubq
loopne
inc
nop
(bad)
fsubr
push
sbb
add
mov
xchg
sbb
mov
loopne
jnp
or
test
iret
mov
sub
mov
std
and
scas
clc
(bad)
inc
adc
pop
and
shl
push
imul
sbb
faddp
ja
stos
call
cli
loopne
scas
or
jmp
sbb
movhps
and
fmul
mov
(bad)
out
clc
mov
add
int3
jns
jae
jmp
fadd
fcom
lock
(bad)
inc
sti
jge
mov
pop
pop
in
das
dec
(bad)
pop
push
enter
jmp
out
xchg
call
inc
xlat
pop
loop
stc
mov
mov
outs
clc
inc
xor
and
test
adc
mov
sub
and
inc
inc
xchg
fsubr
jp
clc
loop
push
call
les
jb
cli
fiadd
mov
test
rol
(bad)
call
add
cmp
je
or
das
push
jmp
(bad)
ja
mov
and
rcl
out
popa
fsubr
aaa
adc
(bad)
(bad)
(bad)
cmp
inc
repnz
pop
add
int3
sbb
cmps
or
cmp
ja
in
(bad)
(bad)
(bad)
mov
test
and
mov
mov
xchg
inc
jb
loope
std
(bad)
(bad)
call
or
mov
popf
sbb
or
mov
push
lods
adc
int3
(bad)
jg
add
loopne
std
sub
pop
mov
call
neg
ds
sub
inc
push
sbb
ror
inc
ror
adc
popa
popa
ds
test
es
mov
out
pop
push
and
jmp
or
sbb
sub
enter
(bad)
jmp
mov
jbe
inc
pushf
or
mov
call
int3
or
or
xor
cmp
push
xor
adc
int
iret
jnp
mov
ret
mov
std
(bad)
(bad)
call
(bad)
push
and
aam
xor
jl
add
pop
dec
cld
sub
(bad)
dec
or
jno
out
and
add
arpl
shl
dec
mov
(bad)
(bad)
(bad)
inc
sbb
aas
sbb
leave
jl
fbld
push
arpl
mov
les
and
(bad)
jge
imul
ret
arpl
ficom
cmp
mov
dec
(bad)
std
jbe
sbb
adc
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
jl
test
ret
and
daa
cmp
rcr
pop
dec
adc
(bad)
(bad)
(bad)
call
push
push
xlat
sahf
retf
or
inc
stos
sub
pop
mov
inc
js
adc
fstp
in
pop
push
cdq
cli
sbb
fs
cmp
jl
xchg
outs
cli
(bad)
inc
adc
lods
jmp
arpl
mov
add
push
sar
add
xlat
dec
(bad)
mov
add
cmp
ja
push
retf
pop
loopne
mov
add
mov
add
(bad)
call
repnz
jl
cdq
or
clc
push
cmp
jge
int
and
mov
je
mov
push
fprem
(bad)
(bad)
(bad)
(bad)
jns
and
mov
pop
pop
or
push
sbb
jnp
jg
es
sub
cmp
dec
sbb
sar
in
cmp
add
pop
idiv
ins
std
jb
fistp
inc
imul
out
cmp
movs
movs
or
jns
out
loop
jl
inc
shl
mov
repnz
cmp
jmp
jbe
es
retf
fild
sbb
retf
cmp
repz
inc
or
jl
add
push
mov
jbe
(bad)
xchg
mov
push
cld
(bad)
in
pop
das
push
adc
jecxz
xchg
cmp
test
push
lea
pushf
aas
mov
(bad)
inc
mov
fisub
lods
push
xchg
cld
shl
cmp
es
push
cmps
mov
repnz
(bad)
push
movs
sub
or
(bad)
(bad)
mov
enter
and
loop
cmp
or
add
sub
rcl
(bad)
call
inc
movs
stos
in
xchg
xor
enter
and
sbb
(bad)
(bad)
(bad)
jg
and
mov
mov
add
and
ins
lods
repz
adc
mov
popa
xlat
js
cwde
movs
je
pop
shl
popf
dec
mov
outs
and
(bad)
(bad)
jg
(bad)
xchg
and
and
inc
pop
fsubp
mov
out
(bad)
pop
pop
xor
inc
gs
(bad)
(bad)
jmp
or
daa
xchg
and
int3
inc
fcmove
push
add
(bad)
(bad)
call
fmul
jbe
xor
pop
or
ins
icebp
fldenv
sub
(bad)
(bad)
jmp
cmp
mov
and
jbe
adc
add
fisubr
sub
jbe
call
scas
adc
in
cmp
(bad)
jno
pop
cmp
outs
or
cmps
sti
mov
outs
mov
adc
mov
cs
sbb
icebp
lock
(bad)
dec
add
cmp
and
mov
imul
int3
dec
adc
sub
(bad)
outs
pop
dec
pop
inc
or
inc
mov
aam
shl
xor
imul
(bad)
(bad)
call
and
hlt
jbe
aam
add
and
and
xlat
jle
cmp
mov
pusha
clc
(bad)
(bad)
jmp
mov
sbb
fsub
pop
jmp
(bad)
dec
mov
pop
jnp
jne
and
loopne
leave
sahf
loope
sub
inc
add
xor
cli
in
out
fstp
mov
mov
inc
mov
jbe
setp
ins
ds
mov
icebp
inc
adc
mov
out
bound
out
(bad)
jg
(bad)
fild
jo
pop
shr
push
cmp
shl
sub
pusha
ret
or
jge
popf
sub
sbb
mov
push
out
pop
cld
fisubr
movs
pop
(bad)
cld
pop
xor
push
dec
or
(bad)
dec
mov
dec
sub
mov
lods
(bad)
sbb
(bad)
jmp
or
jo
inc
dec
test
mov
(bad)
(bad)
dec
outs
shl
das
mov
xchg
dec
out
sti
rol
outs
mov
movs
nop
push
xchg
jne
add
xor
call
dec
or
(bad)
adc
(bad)
lock
xchg
lock
fisubr
fadd
pop
jecxz
enter
je
(bad)
not
xchg
(bad)
(bad)
dec
pop
mov
rol
push
test
cmps
pop
lock
sub
aaa
ins
sbb
bound
pop
or
inc
ret
adc
(bad)
(bad)
fisttp
cmp
jnp
ins
dec
push
test
pushf
not
adc
dec
jp
je
dec
cwde
fld
out
adc
add
jbe
add
xor
(bad)
jle
mov
push
stos
das
mov
or
(bad)
call
or
add
outs
push
sub
js
ja
sub
stc
(bad)
(bad)
(bad)
push
cmp
je
mov
pop
xor
dec
scas
inc
mov
or
or
ret
(bad)
(bad)
push
jno
xchg
jecxz
inc
and
fmul
push
lods
cmp
pop
mov
mov
pop
inc
(bad)
xor
out
into
cmp
jge
fbld
jle
shl
mov
jb
nop
inc
(bad)
(bad)
(bad)
fisttp
sub
dec
pop
cs
cmp
add
div
sbb
sahf
ja
les
ret
(bad)
call
cmp
jbe
pop
push
xor
daa
xor
loopne
dec
pop
dec
xor
pop
stos
sub
mov
popf
pop
out
dec
(bad)
sti
(bad)
(bad)
inc
cmp
jo
fs
mov
push
sub
and
add
jg
push
pop
mov
fdiv
jmp
push
scas
pop
add
mov
leave
(bad)
(bad)
(bad)
push
aam
add
rcl
or
add
ret
pop
fstp
cmc
add
jl
cmp
std
(bad)
(bad)
(bad)
(bad)
mov
fdiv
xor
inc
lock
and
sbb
jle
cli
xor
(bad)
(bad)
(bad)
call
adc
test
dec
mov
out
xor
jle
xor
push
(bad)
call
jmp
repnz
mov
(bad)
push
push
cwde
mov
sbb
mov
jmp
jmp
jmp
repz
jae
sub
and
pusha
aas
or
sbb
(bad)
mov
jb
push
imul
ss
arpl
inc
rcr
or
xor
(bad)
(bad)
call
jg
inc
dec
add
and
jl
ds
xchg
retf
sti
daa
retf
push
push
cmp
cli
dec
mov
sbb
(bad)
(bad)
mov
popf
pop
jmp
dec
mov
(bad)
fsubr
sub
call
jmp
loop
fist
mov
add
js
pop
inc
loope
call
dec
xor
jo
scas
sub
pop
call
xor
add
sub
inc
push
push
ss
shl
movs
xor
cmp
je
rcr
push
mov
cmc
fimul
es
fcom
(bad)
(bad)
call
mov
cmp
inc
mov
sub
push
inc
push
inc
cmp
push
cld
cld
jg
dec
(bad)
out
adc
or
ss
cmp
mov
dec
adc
sar
sar
test
test
fiadd
mov
xor
inc
sbb
adc
(bad)
jg
jb
out
cmp
push
adc
shl
pop
jno
push
push
mov
test
jne
cmp
jne
cdq
cwde
lahf
mov
idiv
ins
xchg
lods
inc
lods
out
or
(bad)
(bad)
jmp
mov
sub
in
into
call
iret
sti
cdq
fnsave
inc
int3
mov
inc
cmp
mov
mov
addr16
out
add
cmp
push
ins
adc
ja
ins
clc
mov
aam
push
inc
lds
lds
pop
pop
(bad)
(bad)
push
mov
xchg
jge
xchg
ins
inc
adc
push
dec
inc
sbb
or
dec
mov
add
iret
pop
inc
pop
enter
sub
push
or
push
add
mov
and
loopne
dec
jne
mov
xor
and
fwait
xor
sahf
jbe
es
(bad)
(bad)
dec
jne
repz
inc
sbb
out
daa
shl
lock
add
(bad)
(bad)
(bad)
call
rol
adc
dec
jns
ds
or
sub
push
sbb
out
fld
lock
mov
ret
xchg
inc
or
add
in
push
and
pop
inc
call
repnz
not
jmp
sbb
or
pop
push
aas
out
pop
and
rol
(bad)
(bad)
mov
push
add
js
test
retf
sub
jge
call
sub
or
sbb
test
push
add
jg
shl
push
inc
inc
(bad)
jmp
clc
ins
push
mov
push
enter
test
adc
sbb
inc
jp
and
sbb
sbb
lock
cmp
adc
data16
shr
ret
mov
(bad)
(bad)
(bad)
dec
mov
adc
mov
loop
jb
imul
pop
jmp
add
(bad)
mov
xor
add
daa
mov
imul
push
xor
(bad)
(bad)
jmp
je
div
in
dec
mov
sbb
xchg
add
push
lahf
(bad)
dec
sub
xor
dec
sbb
and
or
push
outs
scas
les
or
jo
mov
(bad)
(bad)
(bad)
push
xchg
mov
mov
mov
in
addr16
(bad)
test
cmp
xchg
pop
rep
push
stos
(bad)
mov
retf
cmps
cmp
sub
loop
retf
cmps
in
xchg
add
(bad)
(bad)
dec
jmp
dec
cmp
(bad)
xor
arpl
std
idiv
(bad)
(bad)
fild
shl
dec
push
daa
adc
push
add
push
(bad)
jmp
(bad)
fdiv
addr16
adc
mov
movs
or
sbb
iret
dec
loopne
(bad)
mov
sbb
lea
les
inc
cwde
mov
dec
push
push
out
imul
pop
dec
push
jmp
sar
call
sbb
cmp
ror
inc
sahf
pop
and
fdivr
mov
(bad)
push
push
pushf
out
pop
cli
or
icebp
pushf
xor
push
(bad)
loopne
cld
(bad)
push
xor
add
(bad)
push
xchg
ds
in
add
push
push
or
dec
jmp
fstp
cmps
ror
inc
lods
(bad)
cmp
(bad)
(bad)
inc
or
dec
sbb
push
or
push
call
jne
dec
pop
pusha
dec
pop
scas
add
scas
cli
inc
ds
and
xor
ss
les
push
loop
adc
shr
(bad)
mov
int3
popf
inc
fcmovu
sub
je
jl
cmp
lods
(bad)
(bad)
fbld
inc
lock
movs
lock
rol
jne
and
test
call
cmp
aad
sbb
jmp
push
mov
inc
sar
pop
cld
inc
stos
add
mov
test
(bad)
call
mov
sub
sub
and
xchg
jmp
stos
mov
lock
mov
mov
and
ds
(bad)
(bad)
push
jmp
xchg
and
fxch
jmp
loope
fldcw
cmp
pop
xlat
push
mov
pop
add
sbb
jmp
and
inc
pop
stc
sahf
jno
cli
prefetchw
or
shl
leave
loope
cmp
cld
(bad)
(bad)
(bad)
fbstp
xor
out
jecxz
(bad)
stc
into
mov
xchg
push
jmp
lea
cmp
(bad)
(bad)
jmp
out
or
adc
add
out
mov
enter
(bad)
push
add
data16
sar
test
retf
mov
mov
jmp
adc
imul
fsub
mov
repz
mov
stos
push
cs
(bad)
(bad)
push
pushf
ds
pop
pop
xchg
dec
in
outs
xor
adc
inc
push
leave
pop
sar
(bad)
(bad)
jmp
pop
leave
mov
rcl
mov
int
jns
pop
dec
mov
rol
and
(bad)
(bad)
mov
aaa
call
dec
cmp
inc
sbb
sbb
dec
and
jl
lods
(bad)
(bad)
(bad)
call
clts
cmps
idiv
sub
or
les
leave
xchg
mov
push
inc
push
add
cmc
arpl
push
popf
jmp
sbb
xchg
mov
jo
(bad)
(bad)
(bad)
jmp
push
sbb
rcl
das
sub
xchg
pusha
je
add
stos
mov
sbb
loopne
mov
into
add
push
loope
mov
cmp
cli
stos
test
not
xchg
(bad)
jg
call
es
sahf
repnz
cmp
dec
dec
mov
inc
xor
gs
(bad)
inc
add
add
sub
es
or
jb
(bad)
(bad)
fisttp
push
div
sub
adc
sar
mov
call
call
mov
in
push
arpl
push
push
dec
inc
xor
test
sub
jb
stc
(bad)
(bad)
(bad)
inc
or
pop
xor
dec
in
dec
jae
mov
and
adc
push
dec
sub
xchg
(bad)
push
mov
pushf
stc
pop
adc
cmp
pop
push
cmp
lahf
add
loopne
fs
adc
mov
outs
(bad)
mov
bound
fs
inc
cmp
pusha
das
and
cdq
nop
sub
jb
push
add
push
mov
push
mov
fisub
mov
(bad)
fcmovu
gs
cs
retf
retf
xchg
iret
lahf
mov
mov
movs
movs
mov
int
call
cmp
inc
jnp
retf
push
jb
(bad)
(bad)
(bad)
jmp
nop
ss
push
cmp
mov
fdivp
(bad)
xor
push
cmc
push
mov
mov
inc
jnp
jg
call
cmp
jecxz
std
or
bound
ds
dec
cld
fisttp
outs
dec
nop
ret
idiv
sub
(bad)
mov
out
dec
(bad)
(bad)
(bad)
call
add
idiv
in
or
or
adc
adc
je
(bad)
(bad)
(bad)
(bad)
(bad)
jg
and
pop
sbb
sbb
sbb
push
pop
and
lahf
and
mov
rcl
(bad)
jmp
ror
fld
pop
mov
repnz
add
mov
ud0
push
inc
add
xor
pmaxsw
out
mov
inc
inc
cdq
and
dec
push
call
dec
adc
add
mov
hlt
dec
dec
lods
clc
mov
mov
adc
fistp
icebp
or
aam
data16
(bad)
fcomip
(bad)
cmp
loope
test
(bad)
and
adc
scas
les
pop
in
mov
pop
lock
add
movaps
mov
push
retf
jg
mov
ja
inc
push
sar
mov
test
add
sbb
xor
(bad)
mov
xor
inc
aas
jae
aaa
clc
xchg
inc
ret
pop
or
jl
shr
mov
push
data16
(bad)
(bad)
mov
out
mov
xchg
scas
pop
cs
fcomp
test
enter
jns
clc
fstp
or
in
pop
pushf
and
in
push
push
pop
jg
mov
xor
push
jmp
shl
(bad)
ret
inc
(bad)
out
data16
scas
mov
jnp
cwde
jne
loop
call
sub
inc
pop
jmp
(bad)
jo
sar
inc
cmp
jle
mov
retf
jmp
mov
inc
cmovs
jo
pop
cli
sub
(bad)
(bad)
inc
outs
mov
jne
cmp
je
mov
pushf
mov
jge
shl
adc
fcomip
(bad)
shl
ja
mov
add
int3
mov
test
sub
dec
add
mov
rol
in
ffree
cmp
push
sub
dec
push
ss
daa
dec
and
mov
dec
stc
sub
sub
imul
cmp
xchg
ja
mov
pop
lock
xchg
dec
lea
frstor
test
gs
xchg
idiv
xchg
jl
test
cmp
jmp
dec
clc
je
or
repz
push
mov
pop
rcl
jmp
sbb
mov
add
jbe
(bad)
cmp
(bad)
(bad)
(bad)
push
sbb
mov
mov
loope
ins
inc
xlat
inc
push
dec
fldpi
push
neg
jne
mov
clc
jbe
scas
dec
add
xor
mov
(bad)
cli
pop
jno
out
mov
inc
mov
xchg
mov
inc
fidiv
sahf
ror
aam
lock
ja
gs
sbb
cmc
das
in
stos
(bad)
inc
nop
dec
and
pop
mov
and
push
cwde
inc
xchg
mov
fild
or
into
fst
sub
xchg
push
fisttp
cmp
xor
popa
lock
jp
cmp
dec
push
idiv
inc
movaps
outs
adc
call
dec
push
shl
xor
faddp
jne
inc
sub
(bad)
(bad)
(bad)
jmp
xor
fistp
sbb
sbb
adc
inc
(bad)
das
mov
mov
(bad)
call
stos
pop
xchg
ja
lahf
jo
cmp
dec
adc
adc
add
or
int3
jle
jns
inc
mov
rcr
jmp
mov
call
rcr
pop
jle
xchg
add
or
pusha
add
call
adc
loope
mov
inc
int
pop
jo
sub
ins
xchg
shl
(bad)
call
pop
mov
scas
dec
(bad)
js
adc
pop
sbb
movs
(bad)
(bad)
mov
pop
dec
pop
mov
rcr
in
(bad)
pop
sub
push
or
jecxz
dec
add
sbb
movs
int
cmp
in
cmp
addr16
(bad)
mov
dec
jae
stc
das
push
ret
push
sti
and
cmp
jb
ss
jg
inc
or
retf
adc
iret
movs
leave
mov
add
bound
mov
test
mov
sbb
mov
dec
and
(bad)
(bad)
jmp
push
jle
sbb
lea
rol
(bad)
leave
inc
xor
pop
inc
pop
fcomip
(bad)
inc
add
sub
pop
pop
add
js
pop
data16
mov
cmps
(bad)
(bad)
mov
mov
sbb
(bad)
inc
sbb
cdq
xchg
sub
(bad)
jg
and
xchg
ds
test
nop
dec
jmp
mov
ror
push
call
mov
xchg
sub
enter
lahf
jbe
adc
mov
(bad)
dec
dec
pushf
pop
jne
cmp
sar
jmp
fsub
ja
and
sub
or
push
cmp
adc
je
push
jo
imul
sbb
call
(bad)
fcomip
push
push
push
jl
aad
add
push
rcl
pop
push
pop
inc
outs
imul
(bad)
(bad)
(bad)
jmp
push
xor
pop
mov
mov
sub
loope
pop
imul
popf
cmp
(bad)
aad
mov
and
adc
push
repz
inc
ja
(bad)
jmp
fs
ins
add
sbb
jnp
dec
mov
(bad)
(bad)
jp
sbb
push
(bad)
sub
mov
cmp
xlat
adc
mov
(bad)
(bad)
fld
xor
not
call
or
add
mov
push
or
pushf
jo
(bad)
(bad)
jg
jmp
jl
sbb
and
out
ss
sbb
dec
data16
push
lock
lock
mov
mov
push
jo
js
loopne
sub
(bad)
call
stos
or
pop
pf2id
xor
mov
cmc
xchg
or
cli
jmp
cs
fwait
mov
inc
adc
or
inc
mov
mov
pop
adc
push
sbb
xchg
adc
sbb
cli
push
push
add
push
jo
or
fisubr
ror
dec
rcl
mov
inc
inc
sahf
add
lock
ret
shl
(bad)
les
pop
mov
std
dec
ror
popa
sbb
jmp
dec
pop
inc
pop
or
(bad)
sbb
js
jg
cmp
pop
fcomp
jne
cmp
pop
les
pop
xor
xchg
pop
and
add
sub
xchg
or
(bad)
(bad)
(bad)
jmp
mov
jl
or
loopne
dec
add
jno
fiadd
mov
inc
out
bswap
fs
(bad)
(bad)
push
mov
jns
push
push
mov
or
sub
lock
adc
fild
(bad)
(bad)
dec
push
sbb
std
adc
pop
cmp
xor
fisttp
cmp
ret
lahf
cmp
(bad)
(bad)
dec
add
xor
loope
sbb
mov
imul
sbb
pop
or
std
(bad)
(bad)
inc
out
xchg
mov
jmp
cmc
inc
out
rol
out
xchg
sub
ret
icebp
adc
dec
je
fsub
push
bound
je
stc
xor
dec
sbb
(bad)
(bad)
(bad)
jmp
xor
je
fdiv
call
add
(bad)
repz
outs
mov
stos
push
jmp
int3
push
jge
fwait
(bad)
jmp
inc
imul
add
dec
in
lock
outs
pop
and
dec
sub
fild
(bad)
sbb
jno
cmp
pop
jmp
and
(bad)
mov
and
rcr
push
(bad)
(bad)
(bad)
(bad)
cmp
ret
mov
ins
pop
pop
pop
push
jmp
jmp
repz
jne
push
call
or
(bad)
jg
add
lds
sub
push
enter
pop
cmc
(bad)
into
mov
in
js
(bad)
sbb
jne
lods
inc
aad
iret
out
xchg
jb
adc
mov
jecxz
call
adc
cmp
lods
retf
push
or
add
pop
ret
cmp
push
push
arpl
mov
lods
cmp
sub
jnp
and
mov
xor
mov
dec
ss
cmp
adc
lock
push
jno
xchg
(bad)
(bad)
call
ret
push
nop
stc
push
lea
test
cli
ret
mov
(bad)
(bad)
mov
push
ret
push
(bad)
fidivr
fmulp
test
mov
add
cdq
ret
hlt
mov
pop
sub
mov
aaa
push
fadd
xor
push
push
(bad)
enter
(bad)
call
cmp
fcom
add
aad
mov
dec
enter
dec
and
mov
(bad)
call
lock
jnp
jmp
push
xor
cmps
jne
fwait
push
inc
(bad)
lahf
xchg
sbb
test
(bad)
(bad)
(bad)
(bad)
mov
jne
xor
xor
movs
test
in
and
mov
mov
xchg
aad
(bad)
call
pusha
pop
mov
inc
jae
jae
adc
in
and
inc
sub
sbb
aad
(bad)
aam
or
dec
mov
jmp
(bad)
(bad)
(bad)
dec
and
int3
ror
push
std
cmp
and
inc
mov
sub
(bad)
xor
cmps
dec
sbb
(bad)
int
(bad)
(bad)
(bad)
dec
movs
mov
pop
gs
adc
int
repz
out
push
aaa
mov
or
xor
add
pop
cli
aad
adc
inc
(bad)
(bad)
mov
test
push
clc
cmp
jl
jno
or
sbb
or
xor
inc
jp
jae
test
cmp
push
call
lea
in
in
cmp
les
dec
push
out
cld
mul
pop
inc
aaa
rcl
loop
retf
not
retf
in
pop
push
push
idiv
(bad)
(bad)
dec
or
cmp
pop
adc
jo
ret
sub
test
lock
int3
mov
push
inc
aaa
or
dec
cli
out
xchg
ret
cmp
dec
movs
jecxz
fidiv
and
(bad)
mov
sbb
(bad)
jmp
add
ror
add
sbb
call
shl
dec
call
add
pop
loopne
push
lds
fcom
sbb
jmp
cmp
fcomp
jge
pop
call
push
dec
cld
(bad)
(bad)
call
test
sub
daa
shr
xchg
int
stos
lds
mov
or
std
inc
mov
xchg
out
int3
outs
(bad)
push
cmp
dec
sub
dec
push
stos
cmp
mov
gs
and
dec
jne
(bad)
jg
or
jmp
cs
loopne
aad
mov
cwde
(bad)
cs
call
pop
xchg
fwait
mov
mov
cmp
js
pop
sub
(bad)
fcomip
movzx
dec
and
adc
retf
punpckhbw
(bad)
(bad)
(bad)
(bad)
xchg
iret
int
push
jmp
xor
adc
pop
ds
repnz
sub
sar
(bad)
call
repz
push
lods
push
stc
bnd
movs
and
jne
sbb
pop
push
mov
push
leave
jne
imul
data16
sbb
cmp
ficomp
adc
neg
pop
not
ins
inc
mov
(bad)
(bad)
mov
ds
jge
add
fs
adc
sti
aas
ins
jae
sub
cmp
pop
jp
jmp
ja
lea
jmp
xor
imul
inc
cmp
jns
pop
lock
js
movs
stc
mov
sbb
repnz
jl
jmp
and
fwait
mov
ins
adc
pushf
ins
inc
out
dec
cmp
scas
mov
push
je
add
rcr
push
icebp
sbb
sti
data16
jmp
cs
jne
inc
adc
ret
push
repz
adc
sub
(bad)
(bad)
(bad)
jmp
jmp
sub
mov
movs
cs
test
jbe
sub
add
add
pcmpgtd
(bad)
(bad)
jmp
ss
jb
loopne
push
loope
enter
push
inc
and
or
sbb
xchg
adc
jg
movs
mov
ins
mov
sbb
add
data16
dec
mov
xchg
add
(bad)
push
scas
xor
idiv
xchg
call
add
mov
(bad)
dec
sbb
movs
cmp
pop
enter
imul
enter
(bad)
(bad)
lahf
inc
jo
or
mov
push
or
daa
add
jg
sub
test
(bad)
inc
in
push
or
xchg
cmc
mov
jne
mov
mov
cmp
cmp
mov
xchg
xor
jecxz
fisubr
ins
cs
outs
dec
jb
mov
xor
out
sbb
and
outs
add
jmp
sub
or
or
cs
das
sub
ret
ds
and
(bad)
(bad)
call
es
inc
data16
js
push
stc
cli
mov
pop
test
je
fs
or
(bad)
(bad)
call
in
lds
mov
cld
scas
sub
clc
loopne
xor
dec
test
sub
dec
jae
push
or
cmp
js
mov
fcomip
(bad)
jg
fadd
xor
fmul
cmps
dec
push
js
aas
sbb
sbb
(bad)
(bad)
(bad)
jmp
(bad)
sub
dec
rcr
(bad)
int
in
jge
cmp
inc
(bad)
iret
adc
sub
outs
call
adc
pop
push
dec
aam
rcr
(bad)
jmp
inc
mov
pop
push
in
mov
aas
xor
mov
sbb
ror
and
sbb
(bad)
(bad)
(bad)
cmp
mov
inc
cmp
sahf
dec
fwait
push
jo
rol
or
mov
(bad)
(bad)
(bad)
jmp
xor
movs
push
sub
dec
adc
xor
mov
xor
mov
bound
(bad)
(bad)
call
lea
pop
dec
mov
imul
imul
jg
push
inc
dec
or
push
test
mov
enter
cmps
(bad)
or
iret
or
inc
pop
(bad)
(bad)
dec
mov
push
mov
jmp
pop
lock
jg
movs
cmp
out
(bad)
(bad)
dec
xchg
shr
jbe
sbb
pop
xchg
sbb
jmp
out
out
clc
(bad)
mov
sahf
stos
les
mov
inc
arpl
or
lahf
mov
movs
inc
pusha
pushf
out
jg
sub
inc
cmp
inc
ds
sti
(bad)
(bad)
(bad)
call
jo
(bad)
or
push
ins
int3
(bad)
dec
lea
stos
out
pop
clc
pop
xor
inc
dec
add
(bad)
(bad)
(bad)
(bad)
cmp
jb
inc
cmp
mov
adc
cs
mov
(bad)
lds
cmp
add
xchg
lock
(bad)
(bad)
jmp
dec
mov
push
push
adc
pop
sbb
jge
inc
add
fmul
popf
(bad)
(bad)
call
adc
(bad)
shl
not
adc
mov
add
jne
inc
(bad)
(bad)
jmp
jne
lea
retf
add
cld
test
in
loop
(bad)
call
stc
inc
mov
addr16
and
inc
sub
ss
and
cmp
jne
ins
loop
jmp
(bad)
loope
ror
inc
cld
mov
jns
sbb
sbb
(bad)
mov
stos
and
dec
mov
dec
outs
out
mov
inc
push
test
pop
call
push
cli
pop
lds
inc
cmp
test
or
push
mov
jo
jmp
sbb
sub
ss
xchg
jecxz
js
mov
test
mov
xchg
jg
xchg
cld
inc
adc
call
dec
jae
lods
or
mul
sub
sub
(bad)
push
mov
push
mov
mov
in
inc
mov
jb
mov
mov
call
ror
ds
stos
movs
add
pop
(bad)
mov
(bad)
(bad)
dec
sub
mov
mov
nop
inc
push
and
dec
dec
mov
(bad)
(bad)
push
add
ja
jle
nop
dec
adc
jl
inc
inc
push
sbb
test
clc
js
vmread
(bad)
(bad)
push
call
(bad)
sub
mov
or
fsub
sbb
mov
sbb
xchg
mov
shr
(bad)
(bad)
push
loopne
xchg
sbb
jg
add
retf
mov
and
and
jae
(bad)
(bad)
in
xchg
fstp
inc
pop
xchg
and
inc
mov
cwde
call
rcr
jecxz
dec
xor
add
daa
mov
cs
cmp
pop
cwde
adc
mov
add
popf
dec
mov
mov
xchg
stos
dec
in
or
shl
(bad)
call
sar
jbe
push
test
and
xor
pusha
test
push
or
add
sub
test
fs
aas
inc
and
pusha
clc
jmp
movs
fnstsw
mov
or
adc
inc
not
pop
shl
add
in
sahf
ss
mov
sub
ror
adc
xor
jne
sbb
scas
clc
or
loopne
xchg
jb
cli
iret
adc
fmul
std
(bad)
mov
sti
sub
mov
sub
ds
mov
call
inc
dec
xor
fwait
ins
repz
outs
cli
out
sbb
pop
test
dec
jmp
(bad)
dec
and
inc
fidivr
mov
xor
jo
jne
ins
je
jb
(bad)
call
push
psraw
pusha
adc
sar
inc
mov
cmp
jne
(bad)
(bad)
call
int
jae
jns
xchg
leave
jbe
ds
push
fidiv
ficom
je
dec
pop
lock
(bad)
jmp
lods
mov
clc
adc
leave
add
ins
mov
mov
rol
adc
inc
enter
lahf
mov
ds
add
out
cmp
je
mov
pop
add
pop
outs
inc
cmp
pop
push
inc
add
ja
ror
cld
sbb
mov
(bad)
(bad)
(bad)
dec
ret
and
addr16
daa
ret
js
loopne
in
(bad)
xchg
or
pop
fs
jg
and
fs
(bad)
dec
das
adc
or
dec
adc
sub
jl
cmp
lahf
cmp
es
adc
leave
mov
rcr
mov
ret
xchg
jmp
push
or
inc
nop
outs
(bad)
(bad)
call
inc
mov
push
dec
and
xchg
sub
inc
cmp
mov
inc
xchg
push
movs
arpl
sub
aas
mov
and
jmp
clc
call
pop
and
push
aas
sub
mov
adc
aaa
add
cmp
call
lods
test
push
shr
sub
dec
lods
ror
sbb
pop
cwde
popf
lahf
or
pop
jns
outs
cmp
lea
pop
lock
xor
cld
cmp
jb
gs
test
push
jmp
inc
mov
cmp
jb
add
xor
mov
aaa
mov
sbb
and
cs
cmp
cmp
xor
jge
cmp
xchg
mov
jle
add
and
mov
cmp
pop
sbb
(bad)
call
repnz
add
add
xor
jne
jp
pop
jo
sbb
dec
mov
das
mov
jo
dec
fisubr
pop
test
adc
(bad)
(bad)
(bad)
(bad)
call
sbb
aaa
and
fsub
adc
push
test
fisub
sub
sbb
adc
aad
(bad)
cmp
lahf
push
loopne
pop
jae
or
xor
dec
mov
push
call
rcr
adc
pop
cmp
aaa
sbb
mov
jmp
push
pop
scas
je
inc
loopne
ficomp
mov
outs
loop
adc
sub
call
rol
pop
cmp
fisub
imul
mov
(bad)
(bad)
call
pop
(bad)
mov
sbb
jecxz
ja
push
adc
mov
fs
sub
icebp
js
add
inc
sbb
daa
push
sbb
in
cmp
call
sbb
sub
call
call
in
jge
out
jmp
sbb
(bad)
push
push
jle
jne
cmp
inc
push
aaa
cmp
je
sub
neg
inc
jne
mov
jne
(bad)
(bad)
(bad)
jmp
std
jmp
mov
iret
add
loopne
fucomip
adc
sbb
jbe
or
in
mov
(bad)
(bad)
push
mov
dec
mov
pushf
mov
push
mov
shl
xor
or
sbb
(bad)
(bad)
jg
mov
push
cmp
cmp
cmp
inc
xchg
xor
or
(bad)
(bad)
(bad)
jnp
pop
popf
mov
mov
xchg
aad
jns
neg
sbb
cmp
mov
mov
xor
jp
mov
cmp
(bad)
sahf
cmc
dec
mov
jp
icebp
inc
jmp
shr
and
lock
mov
(bad)
cmp
jnp
push
mov
push
ds
and
mov
push
(bad)
(bad)
push
mov
dec
inc
mov
mov
xor
inc
or
ins
mov
popa
(bad)
std
(bad)
mov
adc
xor
sahf
movs
retf
add
data16
add
add
(bad)
(bad)
mov
sbb
pushf
xchg
xchg
push
sub
push
dec
xchg
adc
cmp
loop
fwait
pop
mov
fldcw
call
jg
mov
push
invd
or
add
or
or
test
das
or
push
and
pop
xchg
ins
adc
xor
rcr
rol
inc
pop
icebp
outs
clc
or
enter
add
pop
push
sbb
and
(bad)
mov
jl
sbb
adc
ret
(bad)
mov
fcom
push
dec
ins
adc
popf
mov
mov
(bad)
jmp
inc
(bad)
stos
push
push
jae
push
jns
push
push
mov
cmp
mov
dec
(bad)
(bad)
(bad)
jmp
fwait
inc
jp
cmp
jbe
pop
dec
pusha
adc
add
cmp
sub
fdivrp
call
inc
push
pop
mov
inc
pop
jbe
scas
mov
inc
inc
pop
pushf
test
add
and
sbb
js
jbe
daa
(bad)
out
mov
add
int
inc
cld
inc
xor
and
jno
add
sbb
jne
pop
(bad)
(bad)
inc
mov
mov
or
push
or
push
mov
add
push
cld
dec
push
mov
and
das
data16
xor
call
pop
icebp
(bad)
jmp
inc
mov
(bad)
(bad)
jmp
sar
jno
push
stos
sbb
inc
(bad)
(bad)
(bad)
push
sub
cmp
push
lods
sar
pop
push
mov
xchg
mov
jl
xor
xchg
xchg
ror
and
sti
ins
xchg
mov
sub
daa
sbb
and
in
push
push
dec
popa
dec
cwde
test
daa
sub
sbb
(bad)
(bad)
(bad)
mov
adc
mul
add
(bad)
test
cmp
mov
clc
rol
lock
add
or
ret
(bad)
inc
sbb
aam
pop
add
test
jp
int
mov
sub
mov
or
mov
mov
inc
cmp
add
inc
(bad)
(bad)
(bad)
push
rcl
aam
dec
jmp
sub
sbb
xchg
mov
test
aaa
or
movs
std
(bad)
(bad)
(bad)
jmp
mov
inc
fidiv
mov
and
nop
mov
bound
dec
and
add
aam
add
int3
ja
cmp
inc
(bad)
je
and
in
int3
ins
(bad)
xor
popa
jmp
xchg
data16
xlat
rcr
mov
mov
(bad)
call
jne
cmps
test
inc
fiadd
sbb
fisub
repnz
push
and
mov
call
add
sbb
fcmovne
int
jmp
push
push
cmp
(bad)
(bad)
out
loop
jmp
sbb
mov
pop
jo
scas
fcmovnu
inc
cmps
xchg
arpl
jmp
pop
cmc
jmp
inc
gs
sub
push
ss
clc
rcr
sub
loopne
and
cmp
(bad)
loopne
movs
out
mov
push
add
add
div
adc
jge
mov
and
(bad)
(bad)
(bad)
push
sub
movs
out
out
imul
push
push
movs
mov
ret
fsubrp
cmp
adc
dec
(bad)
(bad)
(bad)
cmp
aaa
jne
repz
mov
sub
mov
xchg
out
xor
cld
mov
pop
or
cmps
mov
retf
shl
rcl
inc
jns
jbe
cmp
stos
std
and
xlat
inc
or
(bad)
jmp
mov
pop
fidivr
inc
mov
cld
inc
lods
int3
pusha
cmp
add
push
jo
into
xor
dec
xchg
(bad)
(bad)
(bad)
call
jo
pop
adc
xor
mov
xchg
out
xor
add
ret
add
jae
gs
jmp
adc
pop
cmp
dec
(bad)
out
clc
call
pushf
or
imul
inc
inc
in
jmp
mov
add
std
sbb
sub
sub
sbb
mov
add
ffree
call
add
nop
cmp
pop
loop
jae
inc
clc
(bad)
(bad)
inc
test
(bad)
mov
mov
repnz
ja
push
and
hlt
jo
sar
(bad)
(bad)
mov
mov
mov
inc
test
je
das
add
jne
jmp
xor
mov
leave
add
not
add
rcl
(bad)
(bad)
out
mov
mov
xor
ds
cmp
pop
(bad)
jae
xor
(bad)
(bad)
jg
jl
arpl
adc
test
rcr
cwde
test
sub
sbb
push
jecxz
loopne
and
add
jns
fstp
xor
lods
out
(bad)
(bad)
jg
and
fcom
inc
pop
mov
jo
(bad)
xor
inc
sub
std
mov
jle
loopne
lock
jmp
push
rol
enter
mov
cwde
sti
xchg
xor
loopne
(bad)
(bad)
dec
inc
pop
mov
adc
test
push
arpl
jo
outs
xchg
lea
pusha
push
inc
mov
(bad)
(bad)
(bad)
call
mov
push
xor
movs
hlt
mov
sub
push
scas
sub
pusha
cdq
or
hlt
(bad)
(bad)
jmp
jo
cmp
pusha
inc
iret
mov
xchg
push
xor
cmp
mov
lods
jmp
push
mov
pop
dec
fdivr
mov
push
xor
(bad)
jg
cmp
dec
into
pop
sub
mov
into
cmp
push
fadd
fwait
or
(bad)
(bad)
fcomp
mov
dec
shr
pop
stos
or
arpl
std
fwait
mov
push
inc
add
jns
aas
adc
add
inc
pushw
jb
inc
add
(bad)
jg
add
sub
jbe
add
popa
or
ja
loopne
je
push
or
pop
inc
sbb
dec
push
push
or
jne
test
sub
or
cld
sub
mov
cmp
cdq
aad
(bad)
(bad)
inc
faddp
mov
mov
push
or
dec
inc
xchg
addr16
add
inc
cmp
jmp
clc
push
mov
pop
imul
in
test
ret
std
(bad)
(bad)
jmp
cwde
dec
push
jo
loopne
daa
dec
lea
mov
fld
jp
jne
(bad)
(bad)
dec
movs
push
cs
lods
inc
ror
or
add
pop
(bad)
(bad)
(bad)
jmp
push
sbb
add
mov
add
dec
sub
call
je
sar
(bad)
inc
push
pusha
xchg
inc
mov
fnstenv
mov
adc
(bad)
fbstp
ror
stc
push
std
fisttp
out
lahf
call
mov
mov
mov
pop
icebp
mov
ret
cmp
loop
xor
jb
pop
xor
mov
ret
(bad)
jmp
test
cmp
pop
push
outs
popf
or
add
lods
mov
loop
sub
sahf
push
imul
pop
add
and
(bad)
(bad)
(bad)
mov
bt
jae
add
mov
dec
add
mov
les
jmp
inc
inc
push
or
enter
mov
inc
shl
push
fwait
push
js
mov
gs
or
cmc
dec
mov
cmp
call
lods
mov
xchg
aam
fadd
xlat
mov
pinsrw
pop
sti
mov
jge
xchg
call
mov
dec
cmps
rcr
out
inc
sbb
push
call
bound
les
and
(bad)
jmp
dec
sbb
and
push
jg
(bad)
push
jne
and
add
sub
mov
and
sub
or
sub
sbb
mov
(bad)
(bad)
push
xor
inc
dec
xor
and
mov
pop
push
(bad)
or
shld
fwait
jae
xchg
mov
retf
rol
sbb
add
cmp
dec
sar
dec
js
mov
adc
cmp
and
push
jg
or
cmps
sbb
inc
xor
outs
(bad)
(bad)
(bad)
jmp
stc
mov
and
scas
nop
sbb
xchg
arpl
xchg
xor
fmul
jmp
(bad)
(bad)
mov
push
inc
pop
cmps
and
or
push
jno
(bad)
retf
retf
cmp
jecxz
pop
leave
(bad)
(bad)
(bad)
inc
push
adc
(bad)
pop
stos
cmp
inc
mov
sbb
retf
(bad)
out
inc
(bad)
(bad)
call
add
inc
repnz
mov
repz
adc
(bad)
jmp
dec
shr
push
inc
mov
mov
retf
ds
jbe
or
std
pop
add
(bad)
(bad)
(bad)
push
mov
movs
dec
add
inc
inc
or
lahf
jo
jb
test
push
(bad)
fucomip
je
pop
xchg
dec
inc
call
mov
sbb
jne
xor
dec
push
push
scas
shl
(bad)
(bad)
(bad)
jmp
mov
loope
adc
or
sub
movs
jecxz
mov
push
int3
push
pop
jl
inc
repnz
call
or
mov
scas
stos
mov
and
and
push
push
cwde
pop
push
outs
(bad)
(bad)
(bad)
jge
sbb
fs
dec
or
or
mov
inc
xor
xchg
shl
dec
mov
iret
add
call
pusha
adc
(bad)
call
cvttps2pi
pop
clc
and
and
mov
adc
dec
(bad)
(bad)
(bad)
jg
fs
iret
jbe
fcomp
sub
or
out
sbb
ja
jae
pop
(bad)
(bad)
jg
aam
jp
jb
sub
inc
stc
fnstcw
xchg
leave
sbb
(bad)
call
in
outs
test
cmove
xchg
push
xor
push
cmps
mov
mov
push
and
pop
test
pop
hlt
nop
leave
adc
inc
(bad)
jne
test
jo
ret
into
jmp
(bad)
push
aam
jl
(bad)
mov
sti
loopne
or
push
or
or
sbb
in
mov
dec
adc
arpl
xor
mov
inc
jmp
lock
fadd
pop
mov
lahf
inc
aaa
inc
clc
call
mov
rcl
cmp
jmp
sbb
scas
add
cmps
out
or
scas
dec
aas
push
inc
dec
hlt
xor
push
std
(bad)
(bad)
adc
add
lods
inc
dec
sbb
and
add
rol
(bad)
(bad)
(bad)
call
(bad)
or
push
sub
sbb
inc
sub
jb
inc
addr16
adc
and
mov
xlat
inc
movs
outs
xor
xor
or
mov
shr
out
sbb
jo
fbstp
cmp
lds
sub
dec
shl
movs
hlt
mov
aaa
pusha
and
add
inc
hlt
dec
rcl
loopne
(bad)
jl
dec
pop
push
(bad)
mov
in
jmp
add
(bad)
dec
idiv
lock
xchg
dec
cli
jp
xor
inc
or
inc
fdivr
inc
mov
sbb
shr
mov
pop
rol
jo
inc
(bad)
(bad)
(bad)
call
cld
mov
push
xchg
push
cmp
mov
dec
fadd
fist
enter
sub
in
push
sbb
jmp
push
push
shl
test
in
movs
(bad)
push
in
push
jne
(bad)
(bad)
inc
mov
pop
xchg
mov
aas
aas
les
sbb
sbb
dec
mov
nop
(bad)
jmp
fisub
ss
mov
push
outs
(bad)
add
cmc
jbe
jno
sub
push
(bad)
fcomip
(bad)
(bad)
call
cld
mov
inc
pop
xchg
mov
imul
(bad)
push
push
in
in
push
cld
dec
stos
mov
mov
cmc
movs
dec
xor
(bad)
(bad)
inc
bound
or
hlt
add
inc
and
pop
cmp
mov
push
sbb
xor
(bad)
(bad)
out
clc
and
fcomp
add
stos
das
jo
mov
loope
aaa
inc
pop
(bad)
(bad)
(bad)
(bad)
jle
out
dec
leave
icebp
cmp
dec
add
mov
pusha
inc
sbb
adc
inc
pop
push
add
data16
(bad)
(bad)
inc
sahf
add
call
lock
jne
cmp
mov
inc
cs
sbb
jne
xlat
pop
cmp
mov
inc
cs
pusha
sbb
inc
inc
inc
push
xchg
(bad)
(bad)
(bad)
jg
jge
dec
imul
adc
stos
mov
out
das
push
add
pop
clc
or
and
(bad)
(bad)
dec
dec
add
dec
lea
mov
pop
pop
inc
push
push
hlt
lea
sbb
jne
loopne
push
sar
(bad)
xor
add
js
mov
cmp
(bad)
fcomp
dec
imul
ins
out
pop
add
add
mov
(bad)
(bad)
cmp
or
pop
mov
ficom
mov
push
add
test
xor
sbb
add
int
jmp
jae
push
cmc
and
stos
sub
das
clc
jmp
shl
loopne
sub
stos
push
sub
mov
les
ss
inc
cmp
enter
cli
push
test
aad
inc
and
fs
cmp
fstp
fcmovb
inc
(bad)
fild
cld
mov
dec
mov
mov
(bad)
inc
pop
push
push
add
sub
ja
test
dec
ds
movs
dec
mov
(bad)
inc
pushf
mov
adc
or
push
adc
test
dec
push
dec
clc
adc
cmp
movs
(bad)
push
jg
sbb
test
clc
mov
aad
pop
scas
add
xchg
mov
mov
fcomip
jg
cmc
enter
push
sbb
mov
popa
mov
push
outs
cmp
imul
(bad)
(bad)
dec
xlat
pop
sub
jns
xchg
and
push
adc
loopne
and
(bad)
jmp
js
push
pop
clc
pop
hlt
adc
add
ins
ror
ins
sbb
shr
(bad)
(bad)
(bad)
(bad)
aas
inc
cmps
xor
or
ficomp
ret
(bad)
sub
xor
stos
idiv
(bad)
cmp
or
jmp
imul
sub
adc
(bad)
(bad)
jmp
add
sub
xchg
fcom
inc
cmp
aaa
add
cs
push
out
or
(bad)
(bad)
(bad)
push
or
and
push
dec
mov
sbb
adc
mov
ds
adc
sub
or
jnp
fsub
xor
(bad)
(bad)
inc
sub
dec
bound
pop
loop
dec
mov
xchg
mov
sar
mov
dec
scas
adc
dec
js
sbb
movs
push
sbb
imul
push
popa
pop
loopne
jmp
add
movs
pop
sub
scas
pop
cmp
test
push
push
cmp
(bad)
dec
ja
dec
je
pop
retf
xor
push
jmp
in
int3
out
mov
js
call
inc
cmp
scas
mov
or
pop
ret
arpl
jmp
jb
clc
rcr
outs
in
les
(bad)
(bad)
call
mov
repnz
mov
ror
push
fdivr
adc
push
push
enter
ins
and
adc
inc
sub
clc
pop
inc
dec
lods
mov
(bad)
pusha
lods
dec
test
imul
dec
cmps
(bad)
fdivrp
jne
scas
mov
(bad)
(bad)
(bad)
inc
movs
nop
add
sub
adc
jmp
push
xchg
push
xchg
or
popf
addr16
jbe
popa
push
icebp
test
sbb
cmp
push
inc
ret
inc
push
pop
inc
inc
(bad)
ss
xor
pop
cwde
or
jne
lock
js
sub
lahf
in
pop
sbb
das
movs
outs
push
test
imul
cli
call
lahf
cdq
lea
cmp
mov
jbe
ror
mov
lock
dec
add
fwait
aaa
sbb
pop
and
pusha
in
mov
call
aam
js
push
enter
emms
mov
aas
pop
cmp
and
in
adc
test
or
leave
(bad)
sub
pusha
add
(bad)
(bad)
push
push
add
inc
sbb
add
cmp
popf
pop
loopne
pop
enter
pop
mov
xor
retf
mov
adc
mov
cmps
pop
mov
mov
sub
retf
dec
(bad)
sub
and
push
push
or
adc
sahf
mov
sub
dec
add
dec
stc
adc
ins
cmp
sbb
xchg
xlat
xchg
xchg
jl
clc
xchg
jl
retf
lock
(bad)
(bad)
dec
(bad)
xor
xchg
mov
sub
xchg
ror
in
jnp
retf
and
sar
lds
lea
jmp
in
jl
ror
int
aas
sub
or
clc
or
jg
jne
inc
or
or
or
cdq
mov
(bad)
(bad)
call
mov
and
cmps
add
(bad)
ja
out
dec
sbb
(bad)
(bad)
push
xchg
arpl
inc
mov
scas
mov
les
xchg
mov
or
xchg
sub
and
(bad)
(bad)
push
and
(bad)
mov
sbb
mov
pusha
jb
lods
pop
add
imul
lock
(bad)
jl
xchg
cld
lahf
jo
cmps
and
sub
adc
inc
ins
push
sub
(bad)
(bad)
(bad)
call
jo
and
inc
ins
dec
fnsave
inc
enter
in
mov
aas
and
mov
jmp
call
sahf
rol
xchg
cmovne
pop
cmps
pop
inc
daa
int
jns
(bad)
(bad)
jmp
rcl
in
adc
sub
stos
and
or
and
xlat
mov
call
sbb
rcr
dec
out
retf
rol
mov
sar
inc
jae
adc
mov
rcl
xchg
cmp
(bad)
ds
mov
fiadd
loopne
test
(bad)
(bad)
(bad)
call
fdiv
jae
sbb
ret
ret
adc
cmp
shl
sbb
sar
pusha
(bad)
dec
or
push
jmp
inc
mov
add
pop
sbb
pop
or
or
dec
(bad)
cs
(bad)
(bad)
push
add
and
xor
push
add
mov
xchg
pop
popa
sbb
(bad)
(bad)
or
mov
mov
mov
xlat
mov
es
fbstp
and
xchg
enter
sbb
lods
inc
mov
add
jmp
or
push
pop
push
pop
and
xchg
clc
int3
out
xor
mov
(bad)
(bad)
call
bnd
add
inc
cmp
cld
faddp
cmp
jne
mov
dec
adc
inc
(bad)
(bad)
dec
sub
sete
inc
dec
cmp
sub
call
ss
fbld
(bad)
and
jmp
(bad)
fsubr
test
jne
inc
add
je
adc
mov
dec
push
xchg
sbb
dec
cli
sbb
inc
outs
movs
mov
outs
mov
in
mov
(bad)
(bad)
(bad)
push
push
repnz
pop
push
ret
je
jo
pop
popa
mov
add
dec
push
lea
fsub
and
or
add
adc
pushw
mov
sbb
sub
and
and
ret
(bad)
(bad)
jmp
sbb
adc
retf
sbb
mov
vphaddbd
cmp
cmps
(bad)
inc
in
push
outs
dec
push
fnsave
push
rcl
mov
mov
mov
retf
cmp
mov
lahf
inc
(bad)
mov
and
cwde
sbb
add
cld
(bad)
call
ret
pop
add
pop
jne
idiv
add
cwde
adc
ja
shr
adc
leave
push
cli
mov
cmp
sahf
mov
(bad)
(bad)
(bad)
(bad)
inc
push
push
or
dec
add
outs
mov
dec
pop
(bad)
in
add
adc
(bad)
es
(bad)
(bad)
call
dec
pop
xor
imul
and
sahf
inc
mov
push
mov
(bad)
fcomip
stos
xor
dec
in
or
jecxz
aas
add
xchg
add
push
push
(bad)
(bad)
(bad)
jmp
imul
dec
dec
test
pusha
movs
into
out
je
(bad)
fld
cmp
cmps
imul
and
daa
das
sar
and
mov
xchg
push
pop
dec
rcr
test
jecxz
(bad)
(bad)
(bad)
jmp
mov
push
jg
inc
adc
add
add
and
(bad)
and
in
(bad)
(bad)
(bad)
(bad)
jp
mov
push
jo
shl
xchg
inc
mov
fcomp
mov
add
aaa
pop
sub
lods
dec
(bad)
dec
popa
aas
add
cmp
pop
add
sbb
pushf
and
add
push
std
(bad)
inc
dec
div
sar
jno
xor
mov
dec
out
test
push
adc
lds
jmp
out
lods
mov
cwde
sbb
(bad)
(bad)
inc
jne
dec
jmp
inc
jmp
fwait
mov
lock
xchg
ror
xchg
mov
cli
bound
pusha
cmp
add
lock
or
mov
add
and
pop
pop
sub
dec
data16
enter
cli
jmp
(bad)
(bad)
(bad)
call
add
jo
jo
or
dec
add
cdq
rcr
xor
xor
out
xchg
and
into
push
cmp
adc
push
pop
fnstenv
or
inc
add
jb
jne
and
sbb
das
push
dec
jno
je
(bad)
(bad)
(bad)
cmp
add
push
adc
je
sti
cmp
lahf
enter
jmp
jp
jo
add
push
sub
(bad)
out
clc
dec
loop
sub
mov
add
adc
cmps
(bad)
(bad)
fild
ins
ds
mov
xchg
cmp
sar
clc
(bad)
(bad)
jmp
cmp
mov
sahf
jl
mov
sbb
outs
push
jns
mov
mov
xor
mov
push
xor
fdiv
mov
dec
in
cmp
mov
(bad)
(bad)
mov
sbb
dec
xchg
mov
mov
sahf
sub
and
fld
xor
push
pop
pop
test
ins
jno
jnp
adc
in
sar
(bad)
call
push
xor
pop
lock
cmp
sbb
adc
pop
mov
call
and
icebp
out
push
jo
xor
repnz
dec
push
cmp
cmp
rol
sbb
(bad)
call
or
ror
arpl
add
xchg
pop
or
inc
cmp
ins
or
les
stc
or
add
jecxz
xor
mov
mov
js
lea
(bad)
(bad)
inc
leave
mov
mov
shl
jo
fs
ficom
lea
xchg
mov
nop
cwde
cld
sar
(bad)
sbb
add
cmp
mov
hlt
adc
add
and
mov
mov
in
mov
fild
ja
btr
(bad)
lahf
or
in
pop
cld
add
jo
(bad)
(bad)
call
stos
inc
sub
cli
inc
mov
jo
leave
dec
mov
cmp
or
jmp
sbb
in
cwde
sub
cmp
jmp
xchg
add
push
xchg
xchg
add
pusha
loopne
xchg
push
or
pop
movups
(bad)
(bad)
(bad)
call
addr16
fmul
cmp
inc
or
pop
mov
add
sub
or
push
push
sar
adc
adc
add
loop
ds
sub
outs
clc
push
int3
push
cmc
and
adc
sub
mov
sbb
mov
cmp
aas
daa
push
jg
pshufw
cmp
(bad)
(bad)
jmp
mov
frstor
xor
ret
mov
push
imul
mov
sbb
bswap
or
cmp
sbb
scas
(bad)
dec
mov
inc
test
cs
dec
dec
aaa
cld
jmp
adc
or
dec
inc
pop
les
test
mov
mov
imul
(bad)
dec
adc
repnz
js
fisttp
mov
jle
inc
mov
scas
or
cmp
mov
jnp
mov
aad
(bad)
std
xsavec
xor
sar
inc
sar
(bad)
sbb
je
repz
pop
pop
sub
sub
(bad)
xor
(bad)
(bad)
dec
ret
add
shl
scas
dec
ss
inc
and
fisttp
inc
pop
jp
mov
pop
(bad)
(bad)
(bad)
(bad)
cld
add
(bad)
jmp
loopne
sub
dec
aad
stc
(bad)
sbb
call
outs
(bad)
mov
xlat
fsub
sar
add
fisttp
fnstenv
mov
(bad)
pop
sub
sbb
dec
dec
fdiv
cmps
sub
call
test
pushf
mov
adc
push
std
and
test
and
out
dec
pop
lock
dec
mov
inc
push
rcr
cmp
pop
dec
jo
mov
(bad)
(bad)
inc
inc
dec
add
cwde
leave
pop
jne
mov
inc
cmp
out
je
add
pop
dec
dec
(bad)
(bad)
(bad)
dec
jge
retw
and
loope
jg
das
ficom
push
adc
or
jno
mov
cli
add
(bad)
jmp
dec
call
lods
enter
inc
push
out
jo
lea
or
mov
or
mov
add
jge
dec
(bad)
(bad)
inc
cs
lahf
dec
sbb
xchg
and
mov
inc
dec
loop
mov
push
pusha
outs
test
mov
mov
mov
push
inc
pushf
sbb
(bad)
inc
push
sub
aas
inc
gs
cmp
icebp
inc
inc
leave
xchg
xadd
jg
(bad)
and
ins
adc
add
push
mov
pop
mov
scas
push
ds
(bad)
(bad)
inc
mov
imul
or
sub
aas
pusha
jg
(bad)
jmp
cmp
sub
push
cld
scas
movs
stc
add
ins
push
lock
(bad)
(bad)
(bad)
cld
je
xlat
js
popa
js
add
into
xor
iret
loop
cmp
cmp
cmps
sbb
aad
mov
inc
jmp
dec
mov
shr
sbb
pop
sbb
inc
pop
jnp
(bad)
(bad)
in
cmp
cmp
jl
dec
outs
clc
call
sahf
test
xchg
mov
(bad)
jmp
aas
call
xchg
imul
daa
je
cmps
out
add
push
rcr
pushf
mov
(bad)
(bad)
(bad)
inc
out
loop
mov
inc
add
add
xor
or
jl
mov
leave
(bad)
mov
sbb
adc
ja
jmp
ficomp
cmp
clc
mov
sub
(bad)
(bad)
dec
mov
mov
inc
cmp
and
or
cmps
add
sbb
sbb
(bad)
call
pusha
mov
sbb
(bad)
arpl
mov
push
add
(bad)
jmp
push
ret
in
mov
aad
adc
add
fidiv
test
jns
(bad)
inc
pop
aaa
or
movs
sbb
pop
and
cmc
dec
fcom
in
and
(bad)
jg
cwde
dec
xchg
fs
adc
test
test
or
(bad)
(bad)
jmp
stos
loope
pop
test
pop
push
mov
in
jbe
iret
mov
push
jecxz
(bad)
(bad)
(bad)
call
or
pusha
repz
mov
call
add
adc
sbb
sahf
cld
imul
outs
ror
pop
call
push
xchg
jo
or
cli
(bad)
call
adc
pop
mov
imul
loope
in
icebp
add
and
sbb
dec
sbb
js
enter
sbb
mov
and
inc
cld
xor
call
(bad)
mov
mov
or
cmps
addr16
ins
rol
loopne
fsub
sbb
cmp
ret
pop
and
pop
dec
push
clc
sahf
pusha
dec
pop
jp
push
mov
(bad)
(bad)
(bad)
jmp
fsubr
cmp
(bad)
cmc
push
sub
leave
sub
or
and
(bad)
dec
or
add
mov
shr
stos
lds
adc
(bad)
(bad)
(bad)
dec
jmp
stc
adc
std
and
ret
adc
ins
push
push
add
retf
scas
adc
cli
mov
dec
lock
pushf
mov
out
or
add
sub
mov
(bad)
(bad)
(bad)
(bad)
cmp
ins
lahf
and
mov
cdq
sbb
sub
inc
out
mov
popa
and
das
sar
loopne
cmp
ins
loopne
push
inc
daa
out
adc
mov
mov
movs
sbb
inc
clc
sbb
je
mov
push
pop
lods
into
mov
(bad)
jg
dec
sbb
js
scas
adc
xlat
xchg
out
loop
std
shl
cmp
(bad)
(bad)
(bad)
push
cld
cmp
mov
(bad)
mov
jo
ficom
dec
adc
(bad)
(bad)
(bad)
inc
or
sub
mov
and
mov
call
xor
sbb
jmp
jne
push
or
pop
cdq
cmp
sub
(bad)
(bad)
(bad)
mov
jecxz
popf
out
xchg
add
pop
(bad)
aad
add
fild
xchg
or
outs
idiv
dec
or
or
iret
cmc
add
xchg
or
xchg
pop
ret
dec
aas
nop
push
add
mov
adc
pop
add
mov
add
cmc
or
cmp
dec
xchg
dec
jb
xor
cmp
xchg
xchg
sar
dec
std
mov
pop
push
pop
mov
mov
ins
rcr
cmp
repz
and
adc
xor
jecxz
xor
inc
inc
ja
dec
popa
cmps
push
or
(bad)
(bad)
jmp
cmp
es
push
lahf
xor
or
mov
(bad)
(bad)
jmp
repz
rcr
dec
cmp
pusha
sbb
ss
pop
fs
(bad)
mov
call
outs
xor
add
cwde
ins
cmp
mov
mov
(bad)
jmp
xchg
nop
add
sbb
movs
sub
(bad)
mov
in
push
mov
in
adc
movs
retf
dec
jo
icebp
dec
out
dec
sbb
pop
in
mov
and
or
add
ss
and
lock
mov
add
(bad)
jmp
cwde
out
mov
xor
push
jmp
dec
call
inc
into
lds
inc
test
dec
cmps
(bad)
xor
mov
js
add
xor
add
ret
inc
outs
mov
adc
mov
or
mov
icebp
xor
repz
or
(bad)
(bad)
dec
ror
cmovs
push
call
call
dec
cmp
(bad)
cmp
cmp
(bad)
sub
(bad)
jne
adc
pushf
sub
pusha
add
and
jmp
mov
mov
and
dec
jmp
sbb
adc
push
mov
jmp
jecxz
mov
jp
mov
pop
pop
inc
xlat
(bad)
adc
add
(bad)
jg
fimul
mov
jmp
cmp
sbb
ja
pop
(bad)
(bad)
fcomip
mov
out
or
cdq
ss
add
or
(bad)
js
pop
(bad)
hlt
add
mov
cmp
jp
idiv
inc
xacquire
movs
call
xchg
(bad)
(bad)
(bad)
sub
jmp
add
and
pop
test
std
inc
inc
fisubr
pop
sub
sub
inc
push
out
push
in
or
in
inc
in
cmp
mov
ret
sbb
adc
jg
(bad)
jmp
add
push
adc
test
inc
pop
or
(bad)
inc
or
mov
mov
mov
xor
in
push
dec
aad
and
xchg
(bad)
(bad)
(bad)
(bad)
jg
pop
dec
into
cmp
mov
xor
imul
sbb
fiadd
jmp
or
push
sub
sub
in
je
pop
mov
lock
lods
lock
sbb
into
rol
repnz
(bad)
call
mov
int
jo
adc
cmc
xor
into
pop
sub
or
out
jnp
jecxz
(bad)
(bad)
(bad)
dec
xchg
imul
cmp
lea
bound
xchg
push
loopne
or
sub
sub
cmp
(bad)
in
xor
sbb
enter
jmp
jmp
mov
imul
fisttp
(bad)
outs
or
(bad)
(bad)
inc
lds
in
lods
hlt
dec
inc
sub
mov
push
mov
(bad)
(bad)
mov
sbb
inc
push
(bad)
sub
push
inc
jo
jo
add
add
(bad)
inc
cmp
in
cmp
cmp
out
sub
dec
inc
xor
xlat
inc
push
cs
call
in
inc
ret
into
push
jg
mov
or
jmp
mov
or
sbb
imul
jmp
outs
cmp
arpl
jle
outs
add
jl
inc
or
jo
lock
mov
mov
call
jmp
push
imul
jmp
aas
jmp
jmp
mov
inc
or
xor
push
lock
cdq
mov
sbb
xor
push
call
pop
xchg
sbb
add
outs
and
mov
movs
mov
jb
sbb
add
mov
mov
push
stos
sbb
shl
push
(bad)
fsub
(bad)
(bad)
(bad)
call
xor
je
arpl
cli
fidivr
push
clc
iret
rcr
ret
popf
mov
push
or
sti
es
jne
lods
or
std
(bad)
(bad)
(bad)
call
les
sbb
xchg
shr
mov
xlat
sbb
adc
push
(bad)
(bad)
(bad)
push
cmp
das
dec
xor
(bad)
jmp
pop
ins
lods
inc
push
jnp
mov
pop
(bad)
inc
out
inc
push
psraw
xchg
jo
inc
lods
push
repz
js
(bad)
fbstp
adc
cmp
push
dec
mov
jg
adc
add
jmp
push
sub
jl
inc
js
jae
inc
pop
test
mov
inc
mov
dec
add
into
rcl
icebp
mov
cs
mov
sti
jae
inc
js
dec
push
jg
adc
(bad)
call
push
outs
jmp
sbb
jno
push
inc
or
jmp
push
sbb
mov
inc
add
aaa
xor
add
inc
outs
popf
test
pop
sub
outs
sbb
jmp
dec
inc
xor
push
push
xor
dec
dec
mov
icebp
inc
test
mov
(bad)
(bad)
(bad)
jmp
fld
mov
xchg
nop
add
inc
rcl
add
or
fcomp
cmp
dec
jl
xchg
xchg
inc
inc
cmp
add
aad
xchg
and
mov
pop
push
aas
or
sub
jbe
in
xchg
and
cmp
jmp
imul
test
dec
pop
or
xor
inc
lea
cmp
outs
clc
jmp
pusha
(bad)
ins
mov
jp
mov
vxorpd
(bad)
push
pop
pop
push
cmp
or
inc
add
and
jecxz
or
cmc
(bad)
inc
adc
mov
mov
lock
jp
pusha
mov
aaa
xchg
cli
fcomip
push
adc
cli
push
mov
stos
jle
or
pop
or
nop
jmp
enter
jb
or
mov
adc
cmc
dec
ins
or
xor
mov
cmp
inc
dec
jge
add
jmp
lea
mov
inc
pusha
pop
movaps
pop
clc
add
cmp
inc
daa
mov
mov
push
pop
or
cmp
test
ss
jmp
jg
lahf
adc
sub
dec
mov
adc
pop
fcomip
fistp
nop
mov
xor
mov
(bad)
call
clc
lds
mov
pop
scas
lock
push
in
push
ret
adc
cmc
push
(bad)
(bad)
call
xchg
push
loopne
iret
inc
fwait
jo
jle
out
jae
js
mov
mov
and
(bad)
(bad)
fild
test
inc
inc
retf
and
daa
fisttp
or
addr16
xchg
out
ret
(bad)
jg
(bad)
fdivr
shl
lahf
lock
and
mov
pop
push
mov
adc
adc
xchg
jmp
xor
add
or
push
jmp
cmp
clc
cli
stos
ror
data16
call
or
and
(bad)
adc
push
popa
or
(bad)
(bad)
(bad)
dec
or
adc
push
push
dec
or
dec
push
aaa
dec
lods
sbb
daa
inc
inc
(bad)
sti
(bad)
(bad)
(bad)
push
enter
mov
test
retf
pop
cmp
and
adc
or
jo
(bad)
(bad)
(bad)
jmp
inc
daa
or
fs
or
xor
mov
shl
jg
in
(bad)
(bad)
inc
loope
sbb
fld
loopne
loop
lods
add
or
inc
jae
(bad)
(bad)
mov
push
dec
sub
rol
sub
add
push
(bad)
(bad)
(bad)
call
or
jo
hlt
pop
xor
out
repnz
xchg
inc
test
add
inc
jmp
sar
out
pushf
jbe
and
es
in
test
addr16
adc
adc
pop
clc
(bad)
push
xlat
dec
shr
jnp
add
add
add
and
mov
inc
push
call
cmp
js
mov
xor
inc
pop
pop
sbb
adc
inc
and
adc
nop
inc
fwait
dec
mov
dec
inc
jmp
setle
jmp
das
clc
or
movs
adc
cmp
xor
sar
or
inc
pop
add
adc
jne
add
(bad)
push
mov
loopne
adc
dec
mov
dec
mov
loopne
and
lea
retf
loope
dec
jg
hlt
(bad)
js
adc
and
xchg
add
pop
ret
dec
xchg
(bad)
(bad)
(bad)
call
sbb
aad
fcom
sub
or
and
mov
es
(bad)
(bad)
jmp
gs
fwait
cs
jb
cmovno
(bad)
into
jp
nop
loopne
in
jne
cld
mov
ret
jns
sbb
jb
je
gs
ins
push
bound
push
jl
mov
(bad)
(bad)
(bad)
push
lea
adc
push
xlat
add
in
sbb
inc
(bad)
add
mov
imul
enter
test
stos
jp
shl
outs
inc
and
lods
adc
pop
or
lds
sar
(bad)
(bad)
(bad)
dec
outs
imul
scas
sahf
add
ins
mov
pop
push
fldenv
call
test
dec
xor
pusha
mov
pop
out
cmp
sbb
pop
inc
div
adc
(bad)
(bad)
jmp
mov
(bad)
out
add
xchg
imul
sbb
fdivrp
(bad)
(bad)
dec
popa
mov
in
pusha
fsub
xor
push
lods
push
ret
inc
jo
pushaw
inc
jl
sub
mov
cmp
pop
jmp
push
push
(bad)
(bad)
(bad)
call
or
push
cmp
sbb
or
mov
jb
scas
or
out
in
out
jp
mov
xor
mov
xchg
or
and
in
sbb
(bad)
(bad)
(bad)
push
out
push
push
mov
mov
loop
dec
ins
pop
dec
scas
push
cmp
sub
add
jb
psrad
push
std
cmp
adc
nop
pop
cmp
dec
jmp
or
push
add
ret
adc
jmp
and
adc
mov
loopne
fwait
jae
push
inc
jb
out
sbb
arpl
jmp
(bad)
(bad)
cmp
push
mov
pop
inc
jmp
pop
call
aad
jmp
call
mov
or
call
and
or
mov
mov
rol
sar
retf
xchg
xor
xchg
jmp
jmp
shl
sbb
adc
push
ja
(bad)
call
test
loop
adc
adc
push
push
cmp
add
loope
fisub
add
dec
mov
push
mov
push
jns
stc
cmc
outs
clc
jmp
add
inc
dec
inc
enter
mov
push
loope
sbb
call
adc
jp
inc
adc
pop
xchg
jg
mov
scas
clc
(bad)
jg
test
mov
sbb
or
dec
jne
jmp
adc
push
adc
and
mov
(bad)
popa
pusha
inc
push
jo
push
ret
(bad)
(bad)
call
enter
(bad)
pop
jo
fwait
xchg
xchg
inc
inc
pop
dec
jo
dec
sub
(bad)
jg
loopne
jo
pop
fist
ret
movs
cmp
push
pop
or
aad
mov
or
jmp
inc
xchg
inc
in
sub
ret
scas
icebp
or
ss
in
dec
dec
cmc
mov
xchg
mov
inc
add
or
fs
ja
mov
and
or
push
pop
or
bound
push
imul
adc
(bad)
jg
lds
ror
(bad)
xor
inc
dec
xchg
lock
retf
dec
fimul
out
(bad)
fisttp
adc
lahf
or
fs
sar
dec
sbb
aas
or
movs
test
pusha
jl
mov
(bad)
call
arpl
aad
jns
popa
or
add
push
push
or
inc
enter
dec
xor
pop
sbb
arpl
call
xor
(bad)
jmp
out
cld
imul
sbb
push
xchg
mov
xchg
or
jle
mov
(bad)
scas
jg
add
xchg
mov
dec
xor
clc
inc
pop
fdiv
arpl
call
daa
xchg
xor
jmp
(bad)
(bad)
inc
dec
fsub
cmp
push
adc
mov
jns
add
jns
dec
sar
sbb
loop
call
test
inc
movs
mov
add
inc
(bad)
mov
daa
or
adc
in
inc
sub
test
push
cmps
sub
add
(bad)
(bad)
fsub
dec
mov
rol
jae
repnz
mov
jp
and
or
aas
mov
jg
dec
push
retf
and
sti
imul
add
adc
scas
add
add
lahf
push
mov
(bad)
call
imul
mov
push
and
aam
(bad)
(bad)
call
jb
(bad)
pop
push
pop
xchg
and
cdq
(bad)
push
mov
in
pop
adc
daa
sar
inc
mov
rcl
test
pop
xor
lea
mov
push
pop
lock
or
outs
dec
mov
pop
cmp
inc
dec
sbb
fs
cmps
call
or
adc
push
cld
xchg
(bad)
lea
(bad)
push
and
or
rol
in
fdivr
dec
push
daa
mov
stc
ds
inc
sub
mov
push
sti
loope
(bad)
(bad)
(bad)
(bad)
mov
add
shl
rcr
sub
adc
dec
mov
xor
cs
mov
out
fldcw
or
mov
ret
inc
(bad)
(bad)
jmp
or
and
outs
jnp
cmp
or
in
push
adc
mov
sbb
repnz
pop
cmp
fucomi
(bad)
(bad)
(bad)
ds
or
dec
sbb
xor
enter
adc
inc
and
(bad)
(bad)
(bad)
(bad)
mov
mov
inc
jp
stc
inc
sbb
jo
loopne
sbb
gs
(bad)
jmp
sar
(bad)
fmul
add
ret
cs
pusha
add
ja
adc
pop
test
mov
fistp
into
aaa
mov
xchg
inc
cmp
jb
or
and
inc
sbb
lods
push
mov
pop
dec
repnz
adc
push
sub
pushf
sbb
enter
stos
pusha
fisub
inc
les
add
push
outs
pop
retf
(bad)
(bad)
call
add
adc
imul
cmovne
adc
cmp
mov
sub
fdiv
(bad)
(bad)
(bad)
inc
cmp
and
cld
pop
and
hlt
call
gs
aad
fidivr
es
add
daa
jecxz
(bad)
inc
aam
adc
dec
jg
pop
cmp
jbe
hlt
imul
(bad)
leave
sbb
mov
pop
mov
pop
add
push
(bad)
(bad)
(bad)
inc
aaa
push
mov
les
push
in
mov
push
sbb
retf
push
and
sub
jmp
add
xor
sbb
sub
in
push
adc
cmp
add
and
(bad)
(bad)
(bad)
(bad)
jg
je
adc
nop
call
and
shl
and
add
lds
push
xchg
(bad)
xor
ja
mov
pop
mov
or
mov
outs
clc
pop
sbb
and
push
cli
xor
inc
cmp
enter
jmp
les
dec
(bad)
repz
sbb
jae
fcomp
dec
lock
stc
cmp
cli
mov
mov
push
jmp
ror
ss
or
pop
jno
es
fnsave
cld
inc
out
cmp
(bad)
(bad)
jmp
int
sar
push
popa
add
mov
add
jns
jnp
add
add
jns
(bad)
push
push
aaa
push
pop
cmp
push
xor
and
jbe
dec
mov
call
call
std
pop
sub
add
push
push
pop
push
test
sbb
ins
xchg
or
pop
clc
(bad)
(bad)
call
sbb
xchg
ss
or
add
mov
wbinvd
adc
push
ficom
or
jle
fmulp
sub
adc
adc
xchg
push
jle
or
sub
loope
xor
(bad)
jns
jmp
jg
mov
in
out
or
sbb
mov
dec
add
or
adc
add
add
add
add
leave
(bad)
out
jnp
add
inc
or
or
fisub
add
add
cmps
jge
ja
icebp
mov
outs
dec
xlat
fwait
push
pop
xor
adc
cmc
sahf
sti
pop
add
fwait
jl
fcom
push
std
pop
cld
add
add
add
inc
jl
imul
pop
sub
(bad)
(bad)
call
(bad)
jmp
adc
cmp
fbld
add
cmp
in
jne
dec
call
push
pusha
(bad)
(bad)
(bad)
dec
and
jl
int3
adc
into
adc
and
sub
or
ret
add
or
(bad)
dec
imul
enter
jo
ret
mov
push
dec
pop
js
add
xor
add
mov
rcr
dec
pop
shr
mov
loopne
out
or
outs
mov
push
dec
cli
push
loopne
jmp
pop
jmp
adc
mov
(bad)
fst
cld
(bad)
(bad)
dec
aas
retf
or
mov
adc
(bad)
and
gs
(bad)
into
mov
aaa
inc
push
icebp
fs
jbe
inc
cld
push
ds
(bad)
mov
xchg
add
mov
(bad)
(bad)
jmp
cmp
and
lea
std
call
pop
lock
int3
loope
cld
enter
pop
xchg
cmp
sub
ss
fcomip
jmp
lahf
push
xchg
or
or
call
jnp
add
jmp
(bad)
(bad)
(bad)
inc
adc
mov
in
jnp
int
sar
dec
jge
and
mov
pop
dec
adc
imul
sub
cmp
dec
int3
jo
adc
sub
mov
lahf
(bad)
(bad)
(bad)
in
cld
lods
adc
or
mov
imul
dec
jo
stos
das
sub
scas
cmp
mov
cmp
mov
stos
jae
scas
jmp
scas
lods
lock
push
cmps
jle
test
outs
(bad)
inc
mov
gs
xchg
add
mov
adc
or
ret
dec
cmp
jl
cs
clc
push
jb
mov
push
and
ds
(bad)
(bad)
push
mov
push
fild
pop
jp
(bad)
sub
(bad)
mov
loope
push
mov
push
stc
jl
push
adc
jmp
arpl
or
xchg
aaa
cmp
mov
outs
fcomp
xor
mov
adc
popf
xchg
push
(bad)
(bad)
jg
pop
fsub
shl
add
and
call
push
pop
sub
(bad)
(bad)
(bad)
out
iret
(bad)
sub
mov
stc
das
ins
adc
xor
push
push
aam
pop
mov
(bad)
(bad)
jmp
pop
and
aas
(bad)
fadd
test
or
nop
mov
xchg
in
and
add
and
movs
sbb
mov
les
fwait
(bad)
(bad)
(bad)
jnp
sub
cmp
mov
or
outs
pop
dec
adc
jecxz
and
xor
or
dec
sar
sub
mov
fcmovne
dec
xor
mov
jmp
(bad)
(bad)
jg
lods
push
xchg
pop
(bad)
cld
ins
xchg
int3
movs
loope
and
sbb
lea
add
call
int3
add
test
inc
inc
xchg
sbb
ja
sub
push
ds
outs
(bad)
(bad)
in
jmp
loopne
ss
cs
es
outs
jmp
je
dec
inc
lock
mov
mov
jne
fwait
sub
ror
jg
inc
mov
shl
and
xchg
ja
lods
and
cmp
cmps
push
pop
ins
jb
lock
ret
pop
mov
dec
push
push
pop
cdq
jecxz
int3
cmp
jl
add
(bad)
jmp
dec
adc
sub
inc
daa
mov
in
nop
data16
sbb
orps
(bad)
(bad)
(bad)
jmp
sub
lock
or
pusha
arpl
sub
pop
or
xor
jbe
xor
(bad)
(bad)
(bad)
jmp
adc
nop
ja
push
push
outs
aas
mov
mov
int3
push
push
test
leave
outs
imul
cwde
(bad)
call
and
sbb
pop
addr16
cli
call
pop
jb
xchg
mov
cli
pop
inc
dec
or
call
(bad)
mov
inc
mov
adc
add
xor
mov
or
into
lea
hlt
inc
mov
cmp
mov
or
into
es
or
test
(bad)
(bad)
(bad)
mov
mov
in
sbb
fmul
mov
test
aam
outs
dec
sbb
dec
ds
(bad)
(bad)
dec
mov
(bad)
sub
jg
and
(bad)
stos
call
outs
in
nop
into
or
jmp
(bad)
(bad)
push
cmp
dec
outs
jnp
leave
je
das
loope
pop
(bad)
and
(bad)
push
cmp
xchg
(bad)
fild
cli
xor
or
and
call
dec
arpl
jecxz
es
jl
dec
ret
cwde
sub
ja
hlt
(bad)
aad
push
xchg
jmp
stos
sbb
cmp
loope
and
sub
sbb
pusha
cmps
je
jecxz
adc
adc
sub
leave
outs
test
add
mov
cmp
mov
(bad)
(bad)
(bad)
jmp
push
loope
cli
sbb
loope
jmp
push
and
into
int3
inc
or
sbb
inc
jb
pusha
leave
pop
ffreep
and
jmp
pop
rcr
mov
add
cwde
js
(bad)
(bad)
call
xchg
iret
xchg
and
je
test
popa
jp
cmp
pop
cmp
sub
push
std
jmp
call
data16
add
cdq
imul
(bad)
jmp
add
adc
and
ds
lahf
ss
sub
and
cdq
mov
adc
add
mov
das
adc
bound
push
and
xchg
outs
jns
pushf
out
pop
clc
jg
jg
out
fldenv
mov
mov
jno
retf
sub
les
(bad)
mov
sahf
and
sub
fwait
jno
sbb
adc
mov
or
xchg
je
jle
aam
repnz
rcl
pusha
add
fcom
(bad)
(bad)
jmp
add
jmp
test
pop
push
push
fidiv
adc
cmp
test
(bad)
(bad)
dec
ficomp
dec
xor
xchg
dec
inc
push
mov
daa
and
lock
(bad)
call
mov
pop
jbe
imul
test
loopne
sub
jmp
pop
push
cli
push
jo
js
add
test
adc
inc
(bad)
(bad)
jmp
bound
push
mov
rol
pop
dec
ret
popf
(bad)
push
shl
jmp
jp
outs
js
add
mov
(bad)
push
sbb
pop
cmp
lods
enter
outs
xchg
xchg
mov
push
(bad)
(bad)
call
aaa
loope
into
retf
fdivr
fsub
idiv
mov
sbb
sbb
out
mov
cmp
clc
in
arpl
(bad)
(bad)
(bad)
dec
or
adc
xor
je
pop
add
hlt
loopne
out
xor
(bad)
add
(bad)
(bad)
jmp
add
sbb
mov
ds
or
and
dec
add
(bad)
jg
inc
into
sub
iret
cmp
inc
out
cmp
leave
loopne
xchg
dec
mov
xor
jb
inc
and
call
out
mov
call
mov
fnstcw
jo
cmp
xor
fmul
fmul
cmp
(bad)
jmp
ins
bound
cmp
stc
add
add
xor
fisttp
adc
fstp
sub
lea
xor
pushf
rcl
(bad)
(bad)
dec
shl
adc
jns
aas
dec
(bad)
sbb
add
xchg
scas
retf
(bad)
(bad)
(bad)
jg
mov
adc
push
jmp
pop
js
addr16
sar
xchg
shr
inc
dec
xor
(bad)
(bad)
push
lock
loope
std
jle
xor
mov
iret
jns
add
push
and
ret
(bad)
(bad)
jg
mov
jmp
cmp
inc
call
scas
sbb
scas
xchg
mov
sbb
rcl
adc
scas
pop
push
leave
inc
adc
sub
xchg
cmp
ss
(bad)
(bad)
jmp
mov
push
popf
jo
mov
adc
into
ds
(bad)
sub
neg
mov
jg
jmp
xor
jl
aam
int3
or
sub
(bad)
(bad)
call
inc
enter
sbb
adc
add
pop
xor
icebp
call
(bad)
mov
jge
lock
jge
sub
add
xchg
or
(bad)
(bad)
(bad)
(bad)
fadd
rol
int3
mov
xchg
xchg
pop
test
ja
inc
movs
mov
inc
inc
pop
lea
call
pop
pop
push
(bad)
mov
out
scas
enter
(bad)
(bad)
push
jg
or
cs
jmp
xlat
push
out
lea
nop
loope
(bad)
(bad)
mov
mov
mov
jb
inc
lea
mov
or
enter
cmp
pop
fwait
mov
inc
and
jb
mov
mov
rol
adc
push
cld
jg
(bad)
call
push
lods
mov
fs
xchg
xor
mov
pusha
call
fidivr
push
(bad)
(bad)
inc
or
mov
inc
cmp
and
aad
xor
mov
adc
(bad)
(bad)
jmp
xchg
and
std
sub
mov
imul
ret
cmovs
dec
or
mov
call
sbb
mov
out
mov
outs
mov
movs
test
and
mov
cmp
lods
jp
popa
add
dec
imul
push
cmp
add
lahf
sbb
(bad)
(bad)
(bad)
(bad)
call
adc
mov
les
out
pop
and
sar
(bad)
pusha
dec
jmp
lea
cmp
(bad)
(bad)
push
mov
retf
mov
and
mov
sub
sub
mov
popf
xchg
(bad)
pop
push
cld
(bad)
iret
jne
test
(bad)
fild
lods
(bad)
(bad)
(bad)
call
arpl
pusha
inc
dec
jle
lea
jmp
out
jecxz
mov
aaa
push
xchg
pusha
mov
(bad)
(bad)
call
push
test
dec
sbb
mov
pop
xchg
inc
sahf
inc
mov
cmp
dec
std
mov
call
es
cmp
icebp
sub
std
aam
(bad)
inc
mov
pushf
arpl
sub
dec
sub
jle
add
pop
sbb
mov
cmp
mov
mov
xchg
and
adc
sub
xchg
loopne
(bad)
(bad)
(bad)
inc
pmulhuw
xor
and
push
push
or
dec
xchg
dec
dec
sbb
xchg
stc
popa
rcr
pop
push
mov
mov
cmps
add
pusha
mov
mov
into
shl
(bad)
lea
in
jge
mov
jo
mov
loopne
das
cli
push
mov
sbb
push
jbe
push
imul
rcr
ret
jnp
(bad)
inc
out
aas
mov
mov
mov
int3
rol
pop
add
inc
pop
dec
sbb
(bad)
fcomip
imul
mov
test
ja
adc
mov
adc
call
leave
sub
repnz
stos
mov
cmps
loop
int
lahf
cwde
bound
xor
dec
(bad)
call
cld
inc
dec
push
and
cs
mov
int
adc
pop
adc
std
ins
mov
nop
ss
or
lea
stos
pop
pop
add
add
sub
sub
add
inc
mov
push
cld
mov
mov
or
or
push
(bad)
gs
mov
fistp
adc
pop
hlt
sub
inc
cmp
mov
push
mov
test
mov
or
das
push
dec
lea
test
sbb
jmp
fs
out
add
lock
pop
add
mov
into
fwait
inc
and
inc
call
and
jmp
pop
jo
mov
and
adc
das
and
popf
das
lods
jle
jmp
jp
jno
xchg
dec
mov
push
(bad)
lahf
cmc
inc
cmovne
fisub
mov
xchg
ins
(bad)
(bad)
(bad)
jmp
aaa
fldcw
inc
mov
push
mov
scas
popfw
dec
mov
ins
(bad)
out
mov
loopne
ret
and
inc
adc
stos
or
push
mov
inc
inc
inc
dec
sub
mov
(bad)
(bad)
(bad)
push
mov
and
cmp
inc
mov
cmps
push
lods
mov
jbe
or
push
pop
sbb
scas
dec
(bad)
(bad)
(bad)
jmp
and
push
jne
jg
push
sub
aaa
stos
jns
push
adc
push
add
push
inc
sbb
loopne
add
dec
mov
pushf
pop
loopne
pop
push
call
(bad)
inc
mov
xchg
adc
ins
test
push
movs
push
ret
push
fimul
arpl
(bad)
(bad)
stos
jmp
ins
ins
push
add
pusha
ret
sub
fdiv
add
dec
inc
jmp
inc
push
fwait
in
inc
inc
cmp
lock
aam
(bad)
(bad)
mov
mov
pusha
loop
aad
jno
pop
sub
lods
cld
das
int
pusha
jmp
(bad)
push
push
imul
loope
jmp
sub
ja
cmp
lods
push
sub
and
cld
(bad)
call
adc
repz
or
fwait
add
aad
imul
lods
lock
(bad)
(bad)
(bad)
rcl
cmc
jmp
sbb
es
test
out
push
jmp
gs
test
(bad)
(bad)
(bad)
dec
jge
ret
sbb
or
xor
pop
mov
and
(bad)
(bad)
(bad)
(bad)
call
movs
add
add
sub
cdq
in
and
dec
inc
pop
xor
sub
push
clc
jmp
ror
pop
enter
mov
ins
jne
test
jg
outs
jbe
xor
ror
cmp
xor
jg
(bad)
(bad)
jmp
dec
cmp
xor
imul
push
pop
adc
sub
(bad)
(bad)
(bad)
inc
pop
mov
xchg
mov
adc
adc
cld
adc
fisubr
dec
push
adc
ret
loop
mov
rcl
adc
add
jb
or
dec
repz
popf
push
mov
fadd
mov
mov
pop
(bad)
call
pusha
cs
mov
aad
mov
js
(bad)
(bad)
fild
scas
add
jmp
or
xor
adc
cli
inc
bnd
push
adc
lahf
and
or
enter
daa
ret
add
push
iret
and
iret
sbb
jnp
nop
mov
(bad)
call
test
pop
adc
dec
xlat
push
inc
cs
sub
inc
dec
inc
dec
jno
(bad)
(bad)
call
xor
add
int3
jl
ror
sbb
add
or
sbb
mov
(bad)
(bad)
push
fiadd
push
dec
fcmovnbe
dec
xor
mov
lods
mov
and
stc
pusha
or
(bad)
(bad)
call
je
mov
leave
int
xchg
jg
sbb
inc
ja
fisubr
pop
(bad)
(bad)
(bad)
jg
out
xchg
sbb
sub
mov
and
or
data16
pop
cmp
ret
(bad)
push
xor
jne
ror
jnp
mov
sbb
jge
or
(bad)
mov
add
call
xor
mov
pusha
pushf
movs
test
sbb
(bad)
fbstp
xchg
dec
pushf
js
jo
inc
mov
das
mov
add
jg
jmp
popa
xor
xor
rol
pop
jmp
pop
and
add
add
sbb
dec
(bad)
test
enter
daa
(bad)
ret
and
mov
push
inc
test
cli
(bad)
dec
sub
mul
push
je
in
xor
arpl
(bad)
jmp
inc
js
mov
(bad)
fdiv
pop
jg
sub
pop
fnclex
mov
rcr
xor
or
jmp
add
jmp
sar
dec
popa
call
ss
inc
out
pop
mov
call
jecxz
add
xor
mov
mov
(bad)
fist
ins
fcom
(bad)
adc
sbb
imul
(bad)
mov
and
retf
gs
cli
xchg
fcmovnbe
or
movs
cmp
nop
(bad)
(bad)
(bad)
inc
shr
inc
lahf
daa
cmp
dec
cmp
and
sub
push
outs
add
(bad)
(bad)
(bad)
dec
fbld
mov
inc
and
into
(bad)
jp
xchg
stc
cmc
pop
icebp
inc
test
test
jb
cmp
sub
mov
enter
aad
test
sbb
push
jge
dec
js
cli
jg
lods
aam
dec
sub
fsub
cmp
xor
push
(bad)
inc
call
mov
pusha
inc
inc
or
movs
imul
lods
jno
inc
xchg
mov
inc
mov
mov
and
push
adc
push
mov
xor
clc
push
into
or
(bad)
(bad)
(bad)
call
outs
sbb
inc
add
xchg
xor
pop
xor
cmp
jmp
pushf
jmp
add
test
or
sbb
inc
dec
lahf
mov
je
pushf
dec
inc
pop
jne
mov
fdiv
test
or
pop
lods
jg
mov
das
dec
dec
test
or
add
clc
add
mov
mov
mov
arpl
xor
stc
xor
jno
(bad)
dec
adc
jecxz
xor
retf
test
dec
and
sub
stos
and
into
or
(bad)
jg
push
cmc
nop
adc
out
mov
cs
dec
jp
outs
mov
sbb
loope
(bad)
sahf
adc
push
xor
outs
aaa
xchg
sub
add
adc
dec
pop
and
pop
adc
pusha
lahf
aas
inc
cmp
push
shr
in
add
cld
pop
imul
sbb
dec
xor
ficomp
jns
add
add
jmp
bound
cmp
xchg
test
repnz
xor
(bad)
jg
add
mov
or
fidivr
adc
inc
(bad)
(bad)
(bad)
(bad)
call
std
mov
or
add
pop
xchg
xor
push
mov
cmp
dec
jl
mov
enter
pop
shl
xchg
mov
sub
sar
dec
push
inc
retf
mov
mov
cmp
add
cld
jbe
mov
(bad)
mov
mov
imul
icebp
adc
jmpw
cwde
xor
sti
std
and
es
mov
mov
xchg
mov
call
fs
cmp
outs
je
and
cdq
call
std
push
sub
aaa
push
or
cmp
mul
adc
inc
or
(bad)
inc
call
push
(bad)
inc
pop
xor
sbb
or
cmp
and
(bad)
mov
out
inc
add
push
jge
or
ret
inc
add
pusha
mov
sbb
(bad)
(bad)
inc
fadd
sar
adc
(bad)
sbb
jp
retf
mov
inc
push
jecxz
(bad)
call
sbb
das
scas
xor
inc
mov
xlat
push
in
xor
aad
(bad)
(bad)
mov
cmp
push
push
sub
cmp
sub
cmp
pop
push
mov
fisub
(bad)
mov
and
scas
inc
test
fs
mov
(bad)
(bad)
call
adc
mov
(bad)
out
je
dec
add
mov
jo
sub
(bad)
(bad)
(bad)
jmp
adc
sub
push
mul
cdq
rol
mov
iret
mov
and
inc
add
pusha
mov
add
jl
jl
or
pop
push
sub
sbb
outs
cdq
je
mov
(bad)
jmp
mov
pop
mov
sbb
leave
or
(bad)
popf
lds
and
loope
cmove
inc
and
and
mov
pop
dec
and
and
shr
mov
(bad)
(bad)
inc
push
pusha
push
fwait
inc
repz
or
xchg
enter
mov
sti
retf
test
mov
(bad)
(bad)
(bad)
(bad)
aas
jo
and
pop
sbb
jnp
test
nop
pop
rcl
or
xor
loope
(bad)
(bad)
inc
pop
mov
adc
sbb
(bad)
or
jns
std
cmp
cmp
ss
push
test
inc
pusha
(bad)
cmp
cld
pop
pusha
add
(bad)
push
std
jb
cmp
repnz
pusha
or
cmp
mov
int
popf
inc
xor
mov
(bad)
(bad)
jmp
cs
es
aam
xchg
mov
sbb
mov
call
sar
dec
sbb
pop
push
inc
(bad)
adc
or
add
jg
(bad)
push
into
xchg
mov
adc
xchg
push
jo
and
or
enter
or
in
test
sub
repnz
pop
gs
adc
inc
jmp
adc
xor
and
push
loope
fisttp
sub
f2xm1
clc
nop
adc
or
sub
xor
push
jb
cdq
pop
mov
jecxz
inc
push
inc
(bad)
(bad)
(bad)
mov
mov
repz
sub
ds
daa
ret
inc
out
sbb
je
adc
(bad)
push
dec
mov
mov
mov
sbb
clc
or
push
(bad)
not
inc
and
arpl
(bad)
dec
or
daa
dec
inc
mov
jmp
ret
and
cmp
jb
pop
(bad)
jmp
add
jbe
and
scas
fbstp
and
(bad)
(bad)
inc
daa
pop
adc
xchg
and
push
popf
push
sub
xor
jecxz
pop
xor
or
xchg
jno
xchg
push
cmp
pop
mov
xchg
addr16
pop
popa
lea
fwait
push
(bad)
(bad)
jmp
loope
cmp
pop
jg
(bad)
ds
and
mov
xchg
mov
(bad)
(bad)
(bad)
(bad)
jmp
push
shl
stc
ret
push
or
loopne
or
and
std
(bad)
(bad)
dec
femms
sub
imul
mov
jne
fs
push
push
ds
adc
mov
(bad)
(bad)
(bad)
dec
add
pop
push
clc
ja
dec
sbb
sbb
call
and
or
cmp
inc
fild
push
fist
jg
or
mov
aam
jmp
mov
ret
(bad)
(bad)
jmp
test
fcom
sbb
das
test
inc
mov
call
jg
cmp
add
icebp
cmp
pop
ret
dec
inc
jb
sahf
mov
mov
add
mov
stos
cli
mov
mov
dec
cmp
xchg
xor
dec
(bad)
and
xchg
jne
inc
in
push
and
sar
pop
inc
ins
jl
add
dec
push
adc
and
inc
movs
inc
mov
cmc
lock
jp
rcr
or
pop
mov
icebp
(bad)
(bad)
inc
clc
out
add
in
mov
pusha
and
sar
arpl
or
(bad)
(bad)
frstor
mov
add
sbb
cmp
ret
jmp
outs
or
dec
rcr
inc
mov
jmp
add
outs
shr
add
dec
arpl
ss
das
clc
dec
ret
dec
push
imul
mov
rol
ins
std
call
jg
push
(bad)
aad
leave
lods
lea
nop
jg
call
mov
clc
add
sub
dec
enter
cmp
mov
lock
xor
nop
rcl
scas
int
sar
or
loopne
jmp
call
pop
lock
fs
cmps
out
fwait
iret
push
adc
les
pop
hlt
(bad)
jns
(bad)
(bad)
jle
xor
push
push
popa
ret
add
adc
pop
jne
sti
movs
pop
pusha
jne
jge
sub
adc
ins
std
add
pop
cwde
mov
xor
jmp
(bad)
(bad)
js
rcr
jle
xchg
and
and
movntq
push
or
jmp
adc
data16
cmp
push
clc
enter
adc
enter
cmp
(bad)
(bad)
(bad)
mov
fidiv
or
xchg
sar
loopne
mov
xchg
cmp
push
xchg
add
(bad)
(bad)
(bad)
push
xor
add
mov
cld
(bad)
push
adc
adc
enter
idiv
js
pop
fsub
sub
push
add
ret
mov
ins
mov
inc
inc
push
ja
ror
cmp
aad
or
fcomip
dec
adc
jmp
xchg
mov
push
lea
or
jnp
ror
sub
(bad)
call
repnz
and
jne
and
inc
lods
xchg
sbb
push
xchg
mov
cmp
inc
add
cmc
and
loope
add
xchg
push
adc
pop
jo
(bad)
in
(bad)
jg
pop
jae
mov
jl
xchg
xchg
out
mov
cmp
daa
out
push
(bad)
(bad)
(bad)
inc
dec
pop
dec
or
or
xchg
movs
mov
fldcw
test
xchg
fistp
out
(bad)
(bad)
cmp
mov
mov
adc
out
(bad)
(bad)
(bad)
(bad)
cmp
mov
fucom
fstp
ficomp
jbe
(bad)
ds
hlt
xor
icebp
(bad)
(bad)
(bad)
call
ja
xchg
cld
xor
cmp
mov
inc
inc
je
je
or
jne
mov
jns
retf
call
loop
dec
sbb
dec
std
mov
fcmovu
push
retf
cmp
mov
xchg
cwde
in
(bad)
fwait
sub
(bad)
jmp
add
imul
mov
ds
pop
lahf
jge
sub
(bad)
(bad)
(bad)
call
jbe
aaa
mov
cld
fwait
xor
call
lahf
xchg
pop
xlat
mov
pop
cmc
(bad)
inc
ja
add
addr16
and
retf
das
sub
and
adc
bswap
mov
sar
adc
mov
inc
inc
prefetchwt1
push
mov
(bad)
cmp
lock
jmp
or
lock
mov
jp
sbb
(bad)
dec
retf
cmp
adc
mov
sar
inc
mov
scas
xchg
push
enter
jecxz
cmps
jmp
(bad)
jg
out
hlt
dec
pop
js
ins
mov
out
add
mov
lods
dec
inc
cmps
loope
fwait
push
add
(bad)
jl
cld
out
mov
cld
clc
cmp
sbb
lock
dec
or
gs
jbe
clc
jb
mov
xchg
dec
or
mov
test
mov
cmp
push
dec
inc
(bad)
pop
mov
out
outs
pop
shl
pop
or
adc
add
add
call
cwde
clc
cld
mov
add
cmp
idiv
add
fisttp
fdivr
lock
sub
ret
cmp
cmp
jb
add
(bad)
lods
loope
xchg
aaa
inc
in
out
xchg
sub
dec
pop
jne
push
dec
cdq
div
push
mov
into
mov
pop
sbb
movs
rol
faddp
xor
(bad)
(bad)
jmp
pop
xor
outs
imul
cwde
mov
push
adc
sar
mov
call
push
aaa
sbb
or
fmul
add
adc
or
scas
(bad)
call
cmp
repz
jge
jbe
dec
mov
xor
push
lock
push
xchg
(bad)
mov
cmp
mov
ret
cmp
fsub
dec
push
jmp
clc
xchg
push
and
push
enter
arpl
(bad)
(bad)
jmp
jmp
push
ror
pop
rol
fwait
pop
out
retf
xchg
xor
cmp
lea
cli
retf
fsubr
test
call
xor
mov
mov
cli
or
test
stos
(bad)
aas
jbe
ins
dec
mov
inc
call
mov
cmp
cmove
(bad)
mov
retf
xor
jmp
(bad)
(bad)
push
adc
sbb
leave
inc
cld
mov
sbb
inc
inc
xor
cwde
test
hlt
pop
xchg
mov
mov
cmp
mov
(bad)
frstor
(bad)
in
inc
mov
jmp
mov
movaps
xchg
cmps
lock
aas
or
adc
xchg
pop
mov
es
(bad)
inc
cli
xchg
rsm
adc
pushaw
inc
or
xchg
or
xchg
adc
stc
pop
hlt
(bad)
add
and
or
bound
cmps
sbb
or
notrack
dec
dec
nop
jmp
pop
or
xlat
jg
(bad)
push
std
aaa
es
or
add
push
fwait
cmp
dec
mov
sub
cmp
lea
mov
push
cmp
enter
test
icebp
out
je
inc
push
dec
dec
and
inc
sbb
(bad)
cmp
scas
test
mov
fdiv
adc
and
(bad)
call
pop
or
push
test
cmp
mov
cmp
cmp
fwait
int
movs
cmp
(bad)
push
xlat
dec
pop
mov
add
sahf
(bad)
in
xor
mov
mov
fs
(bad)
shl
out
jmp
dec
ss
and
out
or
pop
jno
dec
(bad)
pusha
add
and
out
pop
fld
movs
(bad)
(bad)
dec
jg
adc
or
sti
xor
mov
sub
loope
int3
cmp
add
(bad)
(bad)
push
mov
jle
cmp
dec
loope
cmp
je
xor
std
fwait
dec
jbe
mov
ret
push
(bad)
(bad)
(bad)
jg
inc
pusha
daa
cmp
xor
cmp
jno
test
das
push
ds
jg
lock
dec
add
push
loop
or
inc
dec
cmp
cld
mov
mov
iret
ss
dec
(bad)
sar
loop
jb
add
(bad)
(bad)
push
loopne
mov
scas
inc
dec
inc
aas
in
retf
cmp
je
adc
jne
mov
(bad)
push
cld
jne
inc
cmp
je
push
movs
push
call
inc
into
fbstp
mov
adc
inc
or
adc
mov
dec
pop
inc
push
add
add
das
rcr
xor
add
test
fild
shl
cli
xchg
outs
pop
lods
or
enter
(bad)
(bad)
mov
es
fiadd
cld
push
dec
out
adc
mov
out
jmp
(bad)
mov
xchg
clc
push
cmps
in
iret
shr
mov
push
mov
(bad)
cmp
jp
add
add
add
cmp
aaa
sbb
fdivr
(bad)
sti
(bad)
(bad)
dec
adc
add
add
pop
xor
adc
or
or
pop
or
jg
call
push
scas
cmps
cli
jg
pop
popa
call
or
das
mov
std
mov
add
fidivr
lahf
(bad)
dec
shl
lods
loope
mov
add
ja
push
jecxz
cmp
dec
(bad)
jmp
dec
cli
cmps
inc
scas
(bad)
(bad)
(bad)
inc
jno
pop
sbb
xchg
cmp
aam
in
dec
popf
ins
add
(bad)
dec
sub
push
movs
nop
into
sbb
push
(bad)
fwait
sbb
inc
cmp
dec
scas
mov
test
push
(bad)
jae
iret
out
inc
push
(bad)
(bad)
dec
pop
js
stc
sbb
xor
dec
lahf
scas
nop
sbb
(bad)
xchg
or
inc
sbb
(bad)
jmp
fsubr
add
enter
(bad)
(bad)
call
ror
inc
pop
inc
jg
and
push
push
in
add
mov
js
js
mov
sub
pop
das
aaa
fistp
ret
mov
cmp
dec
test
ja
xchg
retf
rcr
aas
jns
scas
iret
xchg
or
mov
leave
enter
add
cmp
(bad)
popf
sub
sbb
dec
mov
pop
jns
mov
movs
hlt
and
retf
ror
cli
movs
das
test
popf
(bad)
(bad)
call
sbb
mov
data16
sub
movs
repnz
popf
add
lea
add
(bad)
(bad)
push
sbb
xchg
inc
test
dec
sub
cmp
nop
fldenv
mov
pop
leave
sbb
(bad)
dec
shl
in
add
addr16
or
or
fs
pop
jmp
pusha
add
mov
leave
mov
(bad)
(bad)
inc
adc
and
dec
or
jle
imul
jmp
xchg
xchg
xchg
sti
jg
out
and
inc
mov
pop
xlat
(bad)
jmp
in
loope
icebp
(bad)
(bad)
jg
inc
jmp
lock
pop
retf
retf
lock
ret
sbb
(bad)
(bad)
call
cdq
jmp
sbb
adc
add
inc
bound
ds
adc
inc
adc
pop
cmp
(bad)
or
pop
cmp
inc
jmp
pop
push
das
dec
add
push
or
jnp
fldenv
push
clc
pop
into
sbb
inc
push
push
cmp
mov
cmp
movs
outs
outs
(bad)
cli
pop
mov
push
or
mov
mov
ror
pop
pop
sahf
push
rdtsc
mov
(bad)
(bad)
(bad)
call
pop
ret
inc
ins
cdq
loopne
adc
jo
xor
add
add
rcr
imul
idiv
psubsb
(bad)
call
retf
call
add
clc
das
dec
push
sahf
dec
outs
xor
(bad)
jg
mov
lock
inc
pop
and
sbb
lock
dec
mov
add
mov
or
fld
ds
pop
imul
inc
imul
jle
(bad)
(bad)
dec
add
mov
and
int3
das
or
inc
xor
imul
xabort
aam
movs
push
dec
and
call
xor
jg
jg
adc
(bad)
(bad)
inc
aam
xchg
push
in
out
cdq
dec
js
inc
fs
int
ds
nop
iret
cld
mov
inc
cli
(bad)
(bad)
(bad)
fcom
sbb
cmp
(bad)
mov
popa
cmovne
push
inc
cmp
aas
call
(bad)
jmp
sub
test
int
loope
jmp
mov
jns
inc
push
in
jl
ds
(bad)
(bad)
call
add
cmp
es
adc
inc
pop
leave
xchg
cs
push
pop
add
nop
hlt
or
(bad)
pop
dec
jo
adc
outs
adc
retf
add
mov
or
(bad)
mov
jae
movs
movd
pop
or
sub
inc
sbb
rcl
add
fst
cli
dec
jmp
retf
inc
add
dec
sub
or
inc
cmp
xchg
add
or
das
stos
jl
push
mul
retf
clc
int
call
mov
rol
les
xor
dec
cmps
jge
inc
sub
popa
imul
dec
(bad)
(bad)
inc
es
pop
dec
sub
sub
je
fidivr
or
jg
sub
cli
mov
adc
imul
dec
imul
lods
cmp
adc
mov
push
icebp
popa
add
dec
dec
lods
xchg
sub
(bad)
(bad)
(bad)
jmp
pop
cli
cvtdq2ps
push
inc
jle
sub
cs
push
push
mov
call
loopne
pop
xor
shl
inc
push
jle
and
ret
pop
push
mov
std
jmp
inc
cmp
jle
jge
and
(bad)
(bad)
(bad)
fcmovnb
shr
fs
cmp
jb
add
cmc
in
mov
jb
out
xlat
inc
jbe
sbb
(bad)
(bad)
call
mov
xchg
dec
inc
inc
inc
mov
and
and
nop
xchg
xchg
jg
mov
inc
sbb
add
or
and
xor
add
fistp
(bad)
(bad)
sbb
div
in
jo
(bad)
fmul
or
jb
call
bound
test
fs
loopne
jmp
push
loop
fs
inc
xor
and
sbb
mov
imul
jecxz
fmul
je
loopne
or
cmp
fidiv
mov
aam
aas
call
xor
popf
lods
mov
aam
jg
enter
and
sti
inc
cmp
test
in
add
xchg
cmp
fs
rcl
pop
nop
data16
jae
jmp
jg
(bad)
fisubr
daa
(bad)
mov
push
hlt
cmp
sahf
and
dec
push
lock
scas
xor
mov
(bad)
in
outs
call
push
mov
add
add
out
nop
es
cmp
pop
in
pop
cld
or
nop
and
repnz
mov
jg
movsx
int3
mov
scas
lahf
sbb
pop
nop
cmp
sub
ja
push
aad
ret
pop
test
mov
sbb
push
je
cdq
pop
clc
inc
rcr
add
inc
dec
shr
push
jle
sbb
call
mov
fcom
je
popf
rol
sbb
inc
repnz
(bad)
das
push
jecxz
iret
push
retf
(bad)
push
aas
icebp
add
(bad)
inc
inc
loopne
lea
mov
in
mov
push
out
add
fwait
(bad)
or
(bad)
call
pop
xchg
lea
lock
xchg
push
adc
(bad)
dec
ficomp
adc
jbe
dec
mov
(bad)
cmp
or
cli
push
jne
dec
rol
outs
mov
jp
add
(bad)
(bad)
(bad)
inc
sbb
adc
in
test
stc
add
or
push
pop
dec
mov
and
inc
js
int
lods
das
lds
int
xor
pop
adc
adc
sbb
push
xor
(bad)
(bad)
(bad)
mov
mov
jb
int3
or
test
test
(bad)
(bad)
(bad)
dec
and
popa
or
sub
clc
out
push
fsub
ror
in
dec
jmp
push
mov
pop
sahf
out
push
out
add
push
inc
sub
cdq
xchg
js
and
jmp
clc
ret
cmp
(bad)
(bad)
fcomip
add
add
imul
cli
cmp
add
fmul
mov
xchg
fisttp
sub
jo
js
xor
clc
(bad)
mov
pop
or
int
and
in
or
sub
sti
xor
push
xchg
daa
and
jb
(bad)
(bad)
jg
xchg
jo
mov
sbb
sub
sbb
cmp
les
adc
bound
push
fdivr
(bad)
(bad)
inc
mov
mov
cmps
lea
test
sub
sbb
push
into
jbe
inc
cmp
(bad)
sub
lods
mov
shl
les
(bad)
(bad)
(bad)
ficom
dec
cmp
dec
jb
cs
cmp
push
pusha
(bad)
jo
(bad)
mov
(bad)
mov
add
popf
fcom
xor
jmp
mul
and
(bad)
(bad)
jmp
aad
add
loope
stos
or
ror
add
imul
call
addr16
mov
sti
inc
ret
mov
or
fadd
cmp
adc
add
push
std
jae
cs
(bad)
push
sar
ja
in
inc
cmp
nop
xor
not
adc
fiadd
xchg
and
mov
jns
call
jmp
(bad)
jmp
addr16
push
add
and
lea
sbb
shr
fild
jne
ror
dec
inc
loopne
cld
(bad)
inc
call
mov
adc
add
fld
inc
sar
call
xor
pusha
or
pusha
xor
add
(bad)
(bad)
jg
dec
shl
push
ja
pop
push
mov
dec
pop
je
add
cmps
fwait
(bad)
call
pusha
dec
arpl
or
or
cmp
mov
or
dec
inc
sbb
push
jbe
mov
push
sbb
rcl
push
or
cld
dec
push
jg
hlt
and
cmp
cwde
dec
or
xchg
cmp
or
push
pop
mov
add
sahf
jb
ret
shl
cld
(bad)
(bad)
std
lock
cmp
ror
js
push
add
outs
mov
(bad)
(bad)
fnstcw
lea
scas
outs
pop
dec
xchg
ror
jnp
push
mov
(bad)
(bad)
(bad)
jmp
mov
cmps
mov
push
fs
push
mov
inc
ja
push
xor
cld
jmp
inc
adc
or
scas
add
or
add
repnz
(bad)
(bad)
(bad)
inc
push
retf
adc
sbb
inc
push
mov
jo
sub
rcr
pop
fdivr
(bad)
call
pop
retf
cli
jle
fsub
call
push
aam
pop
div
ins
adc
out
adc
(bad)
(bad)
call
mov
jb
cmp
int3
inc
fild
call
sub
push
jno
mov
(bad)
jg
lea
adc
mov
pusha
sar
sub
(bad)
(bad)
jmp
xor
inc
cs
or
fndisi(8087
mov
hlt
lods
sub
xchg
cmp
jmp
push
rcr
push
mov
loopne
mov
dec
mov
xchg
add
call
inc
jle
js
adc
dec
sbb
add
icebp
pop
cwde
adc
(bad)
push
outs
add
es
cmps
call
cmp
jp
rcr
cld
icebp
sahf
mov
add
mov
adc
jg
outs
xchg
ins
push
mov
jnp
lock
dec
add
jmp
call
sti
call
loope
cmp
ret
jne
(bad)
jmp
std
add
mov
das
out
inc
add
adc
shl
dec
test
mov
mov
test
je
and
push
(bad)
(bad)
call
fadd
push
sub
or
xor
xor
inc
pop
cmp
outs
push
lock
inc
(bad)
(bad)
(bad)
jmp
and
retf
mov
pushf
test
dec
mov
push
fcmove
ds
icebp
inc
and
and
(bad)
(bad)
(bad)
inc
add
inc
pop
dec
mov
dec
arpl
jp
cmp
inc
cs
dec
and
dec
arpl
dec
mov
jmp
lock
fwait
push
adc
add
cli
call
dec
dec
xor
call
pop
xor
enter
scas
mov
ins
or
ins
inc
pop
and
xor
sti
iret
push
push
pop
or
cmp
nop
mov
adc
adc
sub
(bad)
fadd
cmps
pop
mov
inc
lods
es
add
lods
xor
retf
arpl
jmp
sbb
mov
mov
xor
cmp
or
inc
(bad)
(bad)
jg
js
or
sbb
repnz
ins
pop
ds
push
mov
cdq
add
lock
cmc
(bad)
(bad)
jmp
xchg
shr
fcomp
dec
or
out
add
add
add
icebp
mov
jbe
mov
push
fimul
add
(bad)
js
lock
add
lea
or
add
dec
rcr
push
xchg
sbb
push
add
add
(bad)
(bad)
cmp
stc
cld
daa
shl
cmps
and
xchg
pushf
test
jae
jl
jb
outs
nop
push
and
sbb
mov
je
dec
pusha
add
jg
popf
add
mov
xchg
jo
cmp
mov
(bad)
bt
fwait
add
(bad)
(bad)
dec
xchg
out
jae
inc
push
jle
repz
fs
xor
out
or
(bad)
(bad)
push
movs
xor
cs
bound
and
cmp
outs
pop
movs
push
cld
add
cld
das
sar
xor
mov
adc
inc
mov
mov
sar
mov
mov
in
jmp
in
push
rol
(bad)
(bad)
(bad)
push
push
mov
lods
sti
mov
fimul
ror
rol
xor
pusha
cld
(bad)
(bad)
(bad)
jl
fidiv
inc
mov
mov
push
jb
call
push
push
push
jg
jae
(bad)
loopne
retf
mov
call
jle
(bad)
(bad)
jmp
iret
js
mov
enter
shl
lock
lods
mov
mov
mov
mov
popa
arpl
dec
jmp
cmp
jl
jae
push
push
adc
mov
(bad)
(bad)
push
inc
into
cwde
pop
jmp
add
into
adc
mul
loope
test
js
(bad)
(bad)
(bad)
cli
stos
lea
das
aam
add
icebp
pop
mov
test
aaa
push
mov
ins
icebp
(bad)
(bad)
(bad)
push
cmp
cmp
sar
cmp
clc
mov
mov
mov
or
push
iret
and
nop
add
jne
jecxz
call
mov
mov
(bad)
aad
cli
ins
out
jo
lds
or
push
das
add
(bad)
in
loop
fcomp
sbb
xor
test
bound
repz
inc
nop
outs
sbb
scas
add
mov
push
pop
idiv
imul
arpl
pop
and
inc
je
shr
lods
adc
(bad)
call
shl
and
xor
retf
cdq
or
and
rcr
not
sbb
xchg
(bad)
(bad)
(bad)
(bad)
ds
push
or
add
adc
add
add
push
mov
inc
or
es
or
pop
loopne
inc
or
add
iret
and
mov
cwde
gs
push
maskmovq
test
(bad)
jmp
cmp
call
call
mov
xchg
test
adc
inc
fidiv
xor
pop
sbb
push
push
sbb
xlat
sbb
test
(bad)
(bad)
out
sbb
push
adc
or
retf
push
or
or
js
xchg
mov
loope
xor
xchg
(bad)
jg
cwde
ja
cmp
aaa
or
or
pop
(bad)
(bad)
jmp
xor
popa
or
push
int
jmp
fcom
or
call
loopne
mov
pushf
add
sbb
inc
rol
dec
and
shl
je
lock
out
jae
xchg
enter
jne
add
(bad)
jmp
mov
push
sbb
inc
and
jg
retf
(bad)
push
cwde
dec
mov
shl
call
(bad)
(bad)
out
add
sub
int3
adc
jbe
dec
sub
jae
retf
xchg
push
pop
cmp
mov
arpl
clc
pop
dec
(bad)
in
int3
and
into
and
mov
mov
(bad)
es
repnz
cli
inc
mov
xadd
fidivr
pop
add
adc
jge
outs
or
cmp
and
inc
mov
out
add
jno
scas
adc
xor
jnp
nop
cmp
sub
cmp
loopne
jnp
adc
sar
push
icebp
or
rol
mov
(bad)
mov
(bad)
inc
add
inc
mov
push
mov
mov
mov
mov
add
jg
dec
(bad)
(bad)
mov
inc
dec
call
dec
dec
sahf
sub
fmulp
push
xor
adc
jg
jge
pop
pop
mov
ret
pushf
mov
push
sub
(bad)
(bad)
(bad)
fstp
ret
scas
mov
shl
mov
mov
xor
cmc
sahf
outs
gs
(bad)
call
(bad)
mov
nop
mov
lods
lahf
aas
fcom
dec
loop
add
lds
push
add
das
push
ficom
cmps
mov
adc
sub
lock
(bad)
(bad)
inc
jae
sub
dec
sub
call
shr
sub
clc
movaps
dec
cmp
loopne
(bad)
inc
fidiv
jmp
lds
ss
dec
jg
or
fnstsw
cs
repnz
or
xor
out
rcl
dec
in
and
(bad)
(bad)
jg
lock
movs
dec
inc
add
jg
cs
sub
adc
cli
(bad)
fild
add
call
inc
ja
jne
jb
outs
adc
cli
(bad)
fbld
ret
enter
inc
jl
pop
add
sub
(bad)
in
out
das
cmp
cmp
repnz
add
test
xor
clc
lock
jmp
rol
adc
enter
fwait
popa
push
lock
pop
call
xchg
(bad)
(bad)
(bad)
dec
push
jmp
add
or
xor
loopne
test
(bad)
jmp
xchg
out
jo
push
inc
push
jns
movs
repnz
and
add
cmp
or
jne
mov
mov
lahf
add
mov
lock
(bad)
dec
adc
xchg
xor
xchg
das
or
imul
test
mov
dec
sbb
xchg
mov
sbb
retf
shl
dec
mov
loope
cmp
dec
clc
scas
add
push
add
dec
jg
mov
scas
sbb
test
(bad)
inc
stc
sar
mov
mov
lock
jmp
loopne
sbb
sbb
sbb
inc
lea
jge
lds
das
jo
scas
or
or
and
shl
jo
loop
dec
xchg
or
mov
loope
rol
dec
and
jmp
dec
clc
(bad)
inc
enter
push
and
dec
jmp
rcr
enter
adc
(bad)
dec
mov
pop
push
mov
movs
data16
cmp
jne
test
jecxz
mov
nop
mov
inc
iret
stos
jb
(bad)
cmps
or
cmps
sub
jno
push
test
cs
call
mov
mov
sub
rcr
sbb
(bad)
(bad)
push
movs
push
sar
(bad)
pop
shr
popf
mov
ins
jmp
or
(bad)
gs
adc
sub
inc
xor
mov
movsx
jae
jp
cmp
mov
add
mov
push
jl
adc
jmp
icebp
retf
fisttp
ss
jbe
loop
jb
(bad)
(bad)
call
dec
push
into
push
xor
(bad)
sub
jle
jnp
or
push
js
jno
xor
(bad)
(bad)
(bad)
inc
jl
loopne
mov
mov
je
pop
cdq
js
xchg
faddp
test
push
jmp
loopne
cmps
sbb
mov
jo
xchg
mov
cli
xchg
fdiv
inc
jle
inc
or
ret
jo
sahf
shr
inc
adc
mov
xchg
ret
je
stc
sub
or
(bad)
(bad)
(bad)
push
cmp
pop
inc
xchg
test
xor
sbb
aaa
inc
inc
cmp
dec
int3
rcr
(bad)
inc
pop
imul
popa
mov
push
inc
or
and
nop
mov
push
or
loope
mov
(bad)
(bad)
call
lds
jne
mov
push
jge
jno
in
(bad)
dec
mov
pusha
ja
popf
sbb
imul
clc
(bad)
(bad)
jmp
shl
mov
mov
(bad)
jae
retw
xchg
xlat
enter
(bad)
jmp
add
mov
imul
mov
neg
movs
inc
scas
and
dec
(bad)
mov
popa
pop
leave
arpl
shr
xor
fs
dec
outs
pop
adc
sahf
xor
cmp
mov
add
les
mov
shl
in
(bad)
call
out
inc
ret
xor
icebp
pop
xchg
xor
push
cmc
call
je
pop
hlt
inc
lods
loop
push
cwde
and
dec
inc
repnz
dec
pusha
xor
mov
push
pop
ror
clc
(bad)
call
pop
ret
loope
and
mov
hlt
inc
inc
mov
mov
sub
xchg
inc
cmp
or
sti
ficom
adc
(bad)
(bad)
jmp
aam
pop
or
or
or
inc
and
mov
ins
test
fcomip
sub
add
xchg
push
(bad)
(bad)
cmp
sbb
es
clc
adc
shl
std
adc
(bad)
dec
and
add
shr
call
xor
add
xor
rcr
add
(bad)
(bad)
jmp
out
call
call
shl
mov
or
jmp
idiv
inc
add
push
or
loop
add
add
clc
out
popa
adc
dec
jo
pop
sub
jl
and
test
pop
sbb
dec
enter
(bad)
lds
mov
jle
(bad)
(bad)
fcomip
call
mov
sbb
mov
xlat
lea
xor
outs
retf
(bad)
(bad)
jmp
xchg
shr
jle
or
jle
jl
mov
add
(bad)
(bad)
(bad)
call
add
mov
xor
xor
loope
mov
ins
out
ret
adc
and
and
(bad)
sbb
ss
loopne
fstp
mov
nop
cmp
(bad)
jg
add
in
jg
in
and
mov
cmp
mov
jmp
add
adc
jp
aas
mov
add
(bad)
xchg
test
or
adc
(bad)
(bad)
inc
leave
jb
or
ins
pop
das
add
mov
dec
mov
or
push
sbb
or
clc
fisttp
stos
dec
ja
mov
(bad)
(bad)
inc
push
movs
outs
cli
jo
aad
pop
push
mov
xchg
stos
loope
adc
adc
stos
ins
mov
inc
test
fisttp
inc
add
push
cdq
hlt
scas
or
dec
jl
loope
(bad)
jg
dec
dec
sub
push
push
mov
pop
cmp
pop
or
js
ret
jg
and
dec
xchg
push
fcomp
adc
jae
xor
pop
loopne
xchg
pop
sbb
sahf
or
xor
dec
dec
fs
jg
leave
(bad)
fild
xchg
pop
cmp
jle
out
(bad)
(bad)
inc
add
sbb
(bad)
(bad)
inc
jl
or
pmulhuw
jo
aaa
adc
add
adc
adc
add
cmp
call
push
xor
add
inc
adc
mov
test
jmp
sbb
daa
cmp
dec
aad
cdq
adc
lods
mov
(bad)
inc
jmp
pushf
inc
push
in
into
and
repz
or
out
retf
test
inc
jo
lods
call
icebp
loopne
mov
fisubr
(bad)
(bad)
(bad)
inc
sub
icebp
aad
test
adc
pop
mov
cmc
ret
add
(bad)
(bad)
(bad)
jmp
jle
add
pop
imul
retf
lods
je
int
out
loopne
fcomp
in
cmp
call
outs
jbe
movs
push
les
xor
popa
cmp
nop
scas
out
retf
(bad)
or
push
shr
and
dec
cmp
out
xlat
fcmovnu
lods
(bad)
mov
sbb
add
push
fcmovne
pop
adc
mov
ja
pop
pop
jae
lea
loopne
add
jb
(bad)
jg
out
dec
ret
int
outs
jns
pop
jne
pop
or
sti
sti
sub
test
(bad)
out
add
sbb
sahf
inc
pop
pop
jbe
xchg
and
or
(bad)
jmp
mov
outs
and
sbb
jns
adc
jl
push
adc
inc
out
mul
cwde
pusha
cmp
push
pusha
(bad)
(bad)
(bad)
jg
mov
rol
add
movs
into
sbb
push
add
test
xor
pop
fwait
pop
and
push
std
dec
gs
and
push
inc
xor
out
sahf
jp
push
test
jmp
cmp
ret
and
mov
nop
sbb
jo
movs
and
cmps
or
loopne
xchg
ins
ins
shl
(bad)
jg
mul
(bad)
push
movzx
arpl
mov
fdivp
(bad)
inc
or
pop
in
test
jo
xor
adc
push
dec
in
mov
cmps
sbb
push
or
lea
shl
(bad)
call
push
sti
adc
stos
xchg
inc
mov
outs
jb
push
cmp
mov
mov
(bad)
(bad)
(bad)
inc
dec
dec
movs
xor
mov
bound
popf
xor
xchg
sbb
je
mov
outs
fs
jbe
cmp
fs
test
or
add
fucomi
jmp
(bad)
out
stos
movs
dec
fild
or
enter
fadd
xchg
out
cli
dec
dec
je
xor
fisttp
fistp
sub
sbb
test
das
pop
dec
xchg
nop
inc
(bad)
(bad)
push
inc
add
push
mov
mov
jbe
lea
pop
cmp
fisub
mov
mov
inc
(bad)
fld
sbb
add
retf
inc
int3
pop
ret
cmp
out
push
xchg
adc
(bad)
call
mov
call
je
jge
(bad)
dec
sbb
(bad)
hlt
push
(bad)
(bad)
(bad)
call
scas
push
inc
xor
aam
adc
cmp
aam
mov
sub
loopne
addr16
mov
dec
(bad)
call
(bad)
pop
pop
push
fdiv
div
cs
mov
and
(bad)
call
dec
xor
and
test
mov
(bad)
push
push
lock
adc
dec
jle
push
lock
or
jb
mov
mov
retf
and
clc
sub
jns
push
add
or
test
(bad)
mov
and
inc
cmp
out
js
inc
inc
inc
ret
add
jb
sti
jge
and
dec
push
data16
inc
xchg
cmps
and
mov
or
aaa
loopne
mov
retf
jmp
ret
mov
and
or
(bad)
mov
ins
mov
mov
les
push
fs
add
mov
inc
call
fcomip
fistp
mov
dec
scas
retf
(bad)
mov
je
mov
cdq
bound
jae
jecxz
jne
popa
jae
xchg
xlat
iret
repz
jmp
jmp
hlt
add
test
jg
ret
push
mov
add
inc
add
push
inc
jge
int
sar
data16
stos
mov
jne
dec
inc
adc
or
(bad)
mov
or
mov
add
xchg
(bad)
sti
test
nop
mov
push
into
fsubr
xor
sbb
push
dec
sub
mov
aam
fbstp
std
mov
ret
pop
hlt
cld
jmp
in
sub
into
and
push
repz
neg
repnz
(bad)
adc
xlat
(bad)
(bad)
(bad)
inc
mov
aas
pop
das
dec
cmovns
ret
mov
ror
or
or
jp
shl
or
ror
or
fidivr
mov
(bad)
(bad)
mov
cmp
add
cmp
sub
jmp
ja
inc
xchg
inc
clc
(bad)
jg
jbe
mov
xor
imul
inc
rcl
mov
jg
nop
xchg
add
scas
xor
jmp
pop
fsubr
(bad)
(bad)
(bad)
jg
lock
mov
call
imul
and
inc
jns
pushf
or
and
push
repnz
(bad)
(bad)
inc
jnp
pusha
pop
out
mov
das
test
adc
inc
cwde
stc
jle
call
aas
sbb
les
(bad)
(bad)
(bad)
jmp
ins
loop
(bad)
push
push
cmp
xchg
fmul
mov
lock
push
std
push
movs
ror
dec
ror
ror
outs
mov
in
ror
fcomip
(bad)
push
les
cmp
or
mov
jecxz
cld
mov
test
(bad)
call
xor
sbb
arpl
(bad)
fdivr
(bad)
das
cli
loope
lds
inc
mov
cmp
es
loop
(bad)
(bad)
(bad)
call
ret
lds
push
lods
dec
cmp
cmp
rcr
arpl
jne
dec
dec
or
stc
loop
push
dec
cwde
jne
push
(bad)
dec
mov
outs
cmp
mov
lods
sbb
cs
(bad)
call
aaa
push
adc
mov
xor
popf
out
pop
mov
mov
(bad)
call
enter
and
retf
out
dec
xchg
fistp
dec
xor
(bad)
out
cli
sbb
lock
adc
mov
push
dec
mov
or
or
mov
(bad)
mov
pusha
jl
mov
dec
mov
jnp
cmp
(bad)
(bad)
jmp
imul
xor
(bad)
(bad)
(bad)
jg
xor
add
fiadd
data16
fild
rcr
dec
cmp
inc
(bad)
push
(bad)
(bad)
(bad)
push
mov
sbb
movs
jge
xchg
sub
sbb
ins
jne
(bad)
ja
mov
(bad)
(bad)
mov
fstp
into
(bad)
xor
call
add
jle
shl
fiadd
cmp
(bad)
rol
inc
cmp
int3
add
add
sbb
sbb
push
add
adc
xchg
or
imul
shl
fiadd
push
(bad)
(bad)
ds
jg
jmp
sbb
xor
pop
ins
movs
pop
fsubr
arpl
jp
sub
(bad)
push
xor
lds
sbb
mov
imul
(bad)
mov
cwde
retf
std
sti
sbb
jbe
jg
jbe
push
mov
das
mov
call
es
out
loopne
es
xor
(bad)
(bad)
(bad)
mov
sbb
rcl
push
or
pop
sbb
and
fild
mov
dec
iret
call
push
pop
adc
sub
or
das
jne
iret
int3
retf
out
sub
inc
xrelease
int
inc
(bad)
call
js
and
int3
call
les
test
inc
push
fcos
jg
dec
mov
cmp
lea
mov
jg
inc
jmp
push
das
sar
xlat
xor
push
mov
push
imul
pop
push
jbe
cli
push
add
push
lods
popa
add
call
mov
cs
inc
mov
xor
(bad)
push
syscall
loopne
add
ja
push
out
cmp
shl
faddp
dec
outs
adc
(bad)
(bad)
(bad)
dec
jmp
cli
jle
iret
jl
in
jge
sub
jl
jne
test
ins
mov
jp
adc
(bad)
call
aam
push
ret
xor
clc
push
lahf
xchg
ja
mov
or
cmp
test
popf
inc
sar
push
mov
push
xor
lock
jbe
mov
(bad)
(bad)
call
or
push
(bad)
call
iret
enter
gs
fsubr
mov
xchg
ins
push
ret
cmc
(bad)
jg
jae
dec
pop
cmp
add
repz
cld
(bad)
(bad)
sti
xor
adc
retf
pop
imul
or
jecxz
or
es
(bad)
call
rcr
add
sbb
inc
pop
cmp
fcmovne
lods
adc
(bad)
jmp
pop
adc
add
push
call
jmp
ja
pop
sub
ds
dec
xor
mov
mov
push
inc
xor
and
stos
jmp
xchg
fsub
cmp
shl
ret
into
sbb
(bad)
add
pop
sub
mov
jle
test
fdivr
jmp
push
lds
adc
aam
ja
jmp
aaa
xlat
retf
ror
lahf
push
js
inc
in
hlt
pop
sar
ja
(bad)
(bad)
(bad)
fmul
jle
dec
inc
cdq
mov
mov
or
add
push
sub
(bad)
(bad)
jg
pop
daa
cmp
fmul
pop
rol
cdq
xor
jp
test
inc
cmp
jmp
add
pop
add
pusha
pop
add
sar
(bad)
(bad)
inc
enter
mov
hlt
ret
in
dec
ds
aad
pushf
jmp
cmp
(bad)
inc
pushf
mov
push
jmp
retf
jo
dec
pop
xchg
shl
mov
jnp
mov
inc
sar
not
push
shl
outs
call
jo
lock
push
mov
dec
add
sub
test
outs
fwait
and
jle
adc
and
jmp
mov
(bad)
arpl
xor
shl
(bad)
jg
dec
add
outs
add
int
jl
enter
pop
dec
or
(bad)
push
jmp
imul
push
adc
rcr
inc
add
add
shr
dec
aaa
out
push
xor
arpl
pusha
(bad)
add
ins
das
or
rcl
(bad)
dec
inc
or
push
add
add
ret
je
xor
outs
sbb
pop
sub
out
cmp
jge
cmp
(bad)
(bad)
(bad)
inc
add
or
adc
cmp
cmp
je
loope
xor
or
(bad)
(bad)
(bad)
call
loop
sub
mov
les
sar
jmp
ins
popa
nop
jmp
and
loop
jmp
loopne
inc
xlat
movs
mov
xor
fdivr
jecxz
mov
clc
push
(bad)
enter
addr16
in
adc
cmc
sbb
mov
enter
push
int
add
inc
iret
inc
cmp
inc
cmp
push
jo
mov
sbb
lea
sti
aaa
push
mov
call
not
sub
nop
add
lock
imul
fcomp
mov
fld
push
fidiv
and
mov
lock
(bad)
(bad)
jg
fild
je
add
sahf
inc
in
xor
shl
adc
nop
popa
inc
adc
(bad)
mov
stos
rol
pop
add
xchg
push
mov
jmp
daa
cdq
mov
and
jo
push
mov
inc
loopne
test
int3
add
adc
jbe
cli
mov
out
inc
stc
jo
(bad)
fwait
dec
cmp
and
cmp
arpl
popf
pop
xchg
push
pop
mov
xor
shl
push
(bad)
(bad)
call
dec
or
je
push
in
in
xor
cmp
jne
xchg
inc
and
dec
(bad)
(bad)
mov
sub
and
and
mov
add
cmp
(bad)
(bad)
call
ja
adc
(bad)
pop
pop
inc
sbb
add
in
add
jbe
test
sub
std
retf
pop
xchg
jmp
push
popa
rcl
cli
js
jns
sti
lock
inc
xchg
loopne
(bad)
push
jg
je
(bad)
fcmovnu
pushf
sub
pop
jo
add
push
ret
sahf
loope
(bad)
(bad)
(bad)
dec
fcomp
adc
push
jmp
inc
ror
outs
jnp
pusha
test
xchg
dec
xor
out
pop
lock
adc
rol
add
bound
jmp
jmp
mov
or
in
inc
sbb
ret
cli
jg
(bad)
mov
adc
push
push
mov
popf
popf
icebp
mov
push
ins
xor
lods
sub
cld
(bad)
jmp
repnz
dec
arpl
sbb
sbb
jb
and
(bad)
mov
mov
pop
ret
call
add
mov
imul
mov
iret
lock
inc
or
(bad)
(bad)
(bad)
call
xor
adc
cmp
xor
rol
outs
xor
and
(bad)
inc
xchg
call
cld
mov
lock
stc
in
(bad)
fstp
mov
aad
mov
iret
dec
(bad)
inc
mov
test
jg
addr16
sub
and
cmc
cmp
or
inc
ficom
dec
arpl
out
hlt
dec
or
lock
dec
daa
pop
lock
cmp
jae
daa
ret
sub
cmp
xchg
(bad)
cmp
mov
add
xor
test
mov
jmp
mov
(bad)
dec
imul
inc
jo
inc
push
cmc
je
cld
push
repz
mov
sbb
jg
inc
out
enter
shl
(bad)
add
into
xlat
inc
xchg
sub
dec
call
dec
clc
(bad)
fcomip
repz
nop
sub
cmp
popf
inc
inc
mov
test
jmp
cli
daa
add
lods
aam
cmp
(bad)
(bad)
mov
cmp
sub
(bad)
adc
and
fs
ja
or
and
mov
sti
push
sub
or
add
es
iret
mov
inc
or
inc
loopne
js
cmp
pusha
aad
xor
(bad)
(bad)
(bad)
jmp
sbb
push
in
mov
inc
adc
outs
mov
mov
inc
jmp
sbb
sub
(bad)
(bad)
jmp
dec
cmp
sbb
nop
inc
cmp
nop
xchg
jmp
push
mov
dec
ins
xchg
jae
or
ins
mov
pop
add
and
das
jb
ret
sub
test
call
fdivr
mov
push
push
cmp
stos
push
rol
sub
test
mov
outs
lahf
sub
cmps
push
jmp
inc
xor
in
aad
xor
dec
inc
imul
movs
sub
div
inc
add
(bad)
(bad)
jmp
jecxz
jle
into
nop
mov
lds
xor
in
jb
add
mov
imul
and
popa
push
arpl
idiv
data16
jmp
test
mov
push
or
loop
lds
enter
xlat
inc
mov
mov
cdq
inc
adc
sub
push
(bad)
(bad)
(bad)
push
mul
push
retf
les
scas
sub
cmp
ja
cmp
cmp
test
adc
(bad)
mov
sbb
sar
cs
pop
push
lock
inc
lock
cmps
ins
ret
es
ja
push
ja
fcomip
dec
dec
scas
pop
dec
push
call
mov
adc
or
(bad)
(bad)
(bad)
mov
add
loopne
mov
pop
(bad)
xor
test
in
nop
in
mov
test
cmp
(bad)
out
cli
adc
pop
aaa
adc
sbb
push
push
pop
outs
jecxz
test
inc
std
(bad)
(bad)
jmp
sub
add
pop
sub
cmp
mov
iret
(bad)
jmp
les
sbb
and
sub
add
pop
and
(bad)
(bad)
mov
out
dec
call
sahf
fiadd
lock
add
sub
mov
mov
outs
or
fs
test
xor
push
pusha
lahf
imul
imul
mov
inc
sub
mov
and
mov
adc
fbld
xor
xor
(bad)
(bad)
out
cli
and
or
ficom
jge
push
cli
pusha
dec
pop
aaa
jbe
or
push
lds
inc
inc
push
jmp
aaa
sbb
test
(bad)
(bad)
call
pop
mov
jmp
mov
das
mov
or
push
test
or
js
dec
inc
test
shl
dec
cmps
mov
add
(bad)
(bad)
jmp
dec
and
call
lahf
or
(bad)
mov
mov
and
sbb
push
sbb
pop
dec
aaa
mov
add
mov
jb
outs
push
in
cmp
jle
mov
xor
push
shr
or
push
aam
js
pop
pusha
or
mov
jg
movs
pop
dec
(bad)
mov
dec
cmps
adc
sbb
mov
or
scas
ret
adc
dec
add
(bad)
fcmovu
cmp
shr
pop
mov
push
loopne
push
mov
(bad)
(bad)
(bad)
(bad)
call
xchg
add
fwait
xlat
inc
add
inc
push
adc
ins
xor
sub
nop
and
hlt
idiv
adc
add
jb
mov
(bad)
(bad)
call
sub
ret
adc
(bad)
in
fldcw
pop
retf
cdq
enter
fmul
aad
(bad)
(bad)
dec
or
push
inc
int
inc
xor
xor
dec
jbe
(bad)
(bad)
(bad)
jg
push
sar
mov
cli
mov
rol
aad
and
jbe
and
adc
(bad)
(bad)
(bad)
(bad)
mov
mov
sbb
cmp
sbb
idiv
(bad)
(bad)
(bad)
(bad)
sti
bound
pop
fistp
dec
push
shl
add
outs
dec
jbe
jle
aaa
jne
sbb
(bad)
(bad)
jmp
add
neg
pop
mov
daa
pop
adc
ret
add
cmp
sub
jg
icebp
adc
mov
jo
rcl
or
inc
test
cmp
ret
rcr
jbe
cmp
(bad)
(bad)
(bad)
dec
cmp
cmp
fs
iret
test
lahf
dec
and
xor
jp
aam
cmp
dec
fdivr
je
loop
sub
mov
out
xchg
mov
dec
xor
dec
xchg
inc
inc
cwde
cmp
adc
add
inc
inc
pop
iret
cli
ror
mov
movs
cli
repz
and
ds
lods
(bad)
(bad)
(bad)
(bad)
fst
ins
inc
add
adc
and
in
mov
pop
rol
or
popf
aaa
add
pop
fldenv
cmp
or
ret
cmovno
xlat
jmp
sub
iret
mov
add
inc
add
dec
mov
ja
rcl
fidiv
(bad)
(bad)
(bad)
push
adc
les
inc
popa
xchg
retf
lock
add
sti
push
(bad)
jmp
adc
call
jmp
jl
inc
in
push
fisubr
inc
in
dec
(bad)
rcr
test
loopne
xchg
es
adc
(bad)
jmp
add
jl
js
add
lods
ret
or
xchg
cs
jo
(bad)
(bad)
(bad)
(bad)
cmp
dec
sbb
dec
idiv
loope
xor
imul
sbb
cmp
enter
xchg
xchg
adc
(bad)
inc
mov
jns
xlat
xchg
test
mov
inc
pop
cld
(bad)
dec
push
sbb
fsub
inc
xchg
adc
movs
ss
(bad)
(bad)
inc
data16
data16
inc
fwait
bound
pushf
inc
sub
mov
jmp
std
jno
xor
mov
mov
je
xchg
mov
add
hlt
(bad)
(bad)
mov
or
xchg
sub
xor
inc
lods
test
mov
rol
call
shl
mov
xor
cmp
(bad)
(bad)
inc
xchg
xchg
dec
mov
adc
fcomp
loopne
in
pop
repnz
pop
push
adc
jge
(bad)
(bad)
inc
jae
add
push
adc
sar
enter
mov
test
fadd
xor
xchg
push
pop
(bad)
call
aas
inc
or
pop
ss
mov
retf
leave
inc
dec
pusha
ffreep
mov
xor
bound
sbb
outs
iret
mov
call
sub
fsubr
push
je
cmp
sub
dec
and
adc
lods
sub
mov
dec
popa
call
jp
jno
and
nop
pop
lahf
or
in
or
mov
inc
mov
dec
outs
mov
add
lods
mov
(bad)
(bad)
(bad)
inc
nop
fdiv
les
(bad)
repnz
xlat
into
ins
call
retf
jl
idiv
jmp
ror
mov
pop
add
and
cmp
test
sbb
gs
jecxz
jg
push
lahf
pop
jmp
enter
xchg
lds
popa
xor
sar
cli
(bad)
inc
les
int
cli
pop
push
scas
cs
loopne
push
hlt
jmp
pop
retf
mov
sbb
and
sub
cwde
(bad)
(bad)
mov
sbb
std
xchg
dec
fwait
dec
mov
dec
loop
dec
or
(bad)
jg
add
test
outs
enter
jl
dec
idiv
pop
popa
loop
lds
pop
iret
xor
dec
icebp
fsqrt
xchg
shr
(bad)
(bad)
(bad)
call
mov
dec
jmp
mov
xchg
sahf
and
aaa
pop
sub
push
(bad)
call
cld
imul
xor
mov
sub
addr16
mov
jecxz
jle
addr16
jmp
push
adc
jmp
xor
xchg
(bad)
fisub
or
jmp
and
ds
cmp
(bad)
(bad)
(bad)
mov
test
rcl
add
sub
dec
lock
loope
lahf
pop
jae
outs
xchg
and
(bad)
(bad)
(bad)
(bad)
jnp
ins
xchg
jg
jle
pop
outs
cmp
cmp
mov
sub
cmp
sbb
fimul
add
jmp
jmp
das
sub
dec
mov
xchg
mov
(bad)
imul
imul
dec
xor
cli
(bad)
(bad)
(bad)
(bad)
(bad)
mov
aas
mov
cmp
sub
jns
lea
add
dec
jmp
clc
cs
dec
sar
pop
add
lods
push
dec
add
xchg
imul
push
(bad)
adc
cli
mov
das
fisub
jns
(bad)
(bad)
dec
lea
dec
sub
dec
add
mul
pop
dec
lods
dec
mov
lods
clc
fld
sbb
shl
aaa
mov
or
dec
repnz
dec
out
lock
in
dec
es
lea
aam
repnz
fdiv
ins
dec
push
xchg
add
sar
sbb
(bad)
dec
inc
push
repnz
mov
mov
std
(bad)
jmp
int3
inc
or
sbb
fld
jns
arpl
add
xor
outs
xor
(bad)
(bad)
push
test
add
or
(bad)
sbb
sub
dec
jmp
adc
sar
shr
sbb
pop
cld
pop
popf
(bad)
(bad)
fisttp
dec
or
fisttp
nop
imul
(bad)
dec
popf
(bad)
dec
paddsb
cmp
add
xchg
mov
xor
test
sub
loopne
adc
sbb
add
repnz
jmp
add
lea
cmp
and
scas
adc
pop
and
jl
(bad)
or
fs
mov
inc
mov
call
test
pop
rcl
xlat
cmp
adc
mov
jnp
(bad)
jg
das
mov
push
cwde
jp
push
push
push
mov
movs
inc
push
inc
sar
add
repnz
in
jle
xor
rol
and
mov
(bad)
(bad)
jmp
add
push
jle
lods
call
cmp
fcmovu
js
data16
(bad)
out
cli
jge
and
outs
fisub
(bad)
retf
push
dec
je
mov
call
fcomi
repz
shr
push
and
sti
popa
stos
and
add
fwait
sub
fs
mov
push
call
shr
jmp
adc
add
xchg
in
leave
mov
xchg
fwait
mov
(bad)
(bad)
(bad)
inc
cmps
inc
test
dec
pop
jns
jns
loop
sub
push
test
mov
inc
jl
addr16
and
mov
sahf
int3
fs
jmp
daa
loope
pop
and
outs
clc
or
push
jg
(bad)
dec
inc
(bad)
jae
jo
into
adc
adc
mov
cmp
inc
(bad)
(bad)
mov
(bad)
pop
xchg
jp
cmp
inc
aam
and
(bad)
(bad)
(bad)
jg
jbe
pop
imul
mov
add
popf
pop
repz
mov
mov
jmp
syscall
lock
(bad)
(bad)
mov
sub
jmp
or
sub
mov
jle
inc
call
jg
ret
adc
pushf
scas
mov
(bad)
cmp
push
call
inc
xor
in
sub
and
nop
(bad)
into
and
push
dec
inc
(bad)
(bad)
(bad)
call
rcl
fadd
inc
pop
mov
xor
or
dec
fs
sub
daa
add
add
or
lea
or
push
sbb
(bad)
jmp
fs
sub
test
xchg
ss
enter
aad
aaa
ret
div
add
fadd
aas
adc
mov
std
push
fmul
loopne
shl
std
inc
cmp
mov
dec
add
push
and
mov
call
inc
int3
rcl
mov
inc
add
dec
sub
inc
add
(bad)
sub
(bad)
call
cmp
xor
inc
ss
add
jbe
retf
aaa
mov
sub
or
(bad)
cld
adc
(bad)
jmp
sar
push
sub
sub
push
inc
pop
(bad)
ficomp
(bad)
dec
mov
push
mov
xchg
ret
xchg
dec
mov
aaa
(bad)
pop
add
in
cmp
nop
loop
xor
lahf
add
mov
jmp
mov
(bad)
push
daa
cmp
add
or
mov
sub
imul
(bad)
jg
dec
add
daa
dec
or
adc
push
pop
push
jg
add
inc
scas
xchg
xor
pop
sbb
loopne
sub
add
cmp
mov
xchg
inc
push
mov
or
sub
adc
inc
ss
mov
fnsave
sbb
mov
sbb
(bad)
(bad)
(bad)
call
xchg
js
mov
xchg
lods
mov
and
adc
stos
xlat
iret
cmp
(bad)
call
and
ins
or
inc
sar
mov
test
fcomp
loopne
data16
(bad)
(bad)
(bad)
mov
lods
xchg
push
pop
and
push
ds
ins
sub
lea
mov
or
movs
cli
(bad)
dec
cli
add
inc
adc
push
mov
sub
es
adc
inc
sbb
mov
fbstp
(bad)
clc
inc
dec
pop
ins
mov
(bad)
out
and
inc
sbb
adc
pop
jo
(bad)
cmp
cmp
push
ds
(bad)
(bad)
(bad)
cld
or
fimul
or
adc
int
sbb
lea
jmp
dec
or
inc
mov
cmp
js
jne
(bad)
jg
add
mov
sub
cwde
dec
sub
out
pop
or
sbb
imul
(bad)
push
aaa
movs
je
dec
xchg
sub
xor
mov
je
cmp
cmps
retf
mov
(bad)
(bad)
call
into
hlt
(bad)
in
jmp
add
call
repz
cwde
or
(bad)
(bad)
(bad)
call
mov
dec
mov
movs
pop
xor
or
add
test
jnp
mov
mov
jb
sahf
std
push
hlt
push
(bad)
(bad)
inc
mov
mov
mov
mov
or
dec
push
jmp
aaa
push
mov
sahf
(bad)
jns
(bad)
(bad)
push
and
cmp
jnp
imul
das
and
test
into
clc
in
dec
(bad)
(bad)
(bad)
call
fsubrp
sub
fs
push
sub
cmp
push
cmps
aam
and
inc
sbb
(bad)
(bad)
jmp
sbb
mov
das
cmps
inc
mov
push
xchg
(bad)
(bad)
jmp
dec
shl
nop
(bad)
mov
sbb
inc
xor
or
push
adc
xchg
or
adc
je
adc
aaa
mov
mov
and
(bad)
dec
adc
(bad)
out
jmp
(bad)
(bad)
(bad)
out
(bad)
or
arpl
jmp
jecxz
mov
mov
sbb
cmp
cmp
(bad)
call
std
jmp
imul
arpl
sub
popa
push
cmp
and
add
dec
mov
(bad)
dec
aaa
jne
cld
sub
cmp
ja
cs
(bad)
jmp
mov
push
pop
add
or
lea
sbb
shr
dec
cli
sbb
sbb
mov
jno
cmp
mov
js
adc
(bad)
call
or
push
(bad)
sub
mov
jmp
sbb
sub
jecxz
pop
(bad)
pushf
jge
push
cmp
sub
mov
and
or
(bad)
dec
clc
xchg
dec
iret
mov
jmp
xchg
sar
cmp
xor
enter
mov
dec
pop
jns
or
neg
sbb
push
push
or
sar
xor
inc
adc
and
adc
sub
jne
(bad)
push
jmp
mov
rol
push
jmp
or
xchg
sub
and
xor
dec
lock
add
dec
int3
push
ss
stos
movs
ins
stos
adc
dec
call
(bad)
(bad)
call
cli
dec
inc
or
movs
out
mov
(bad)
lds
lahf
xchg
sar
in
push
je
int3
fcomip
mov
push
inc
repnz
jno
cld
je
test
jns
inc
(bad)
cmp
and
test
sbb
test
repnz
test
test
inc
sahf
cmp
test
sbb
(bad)
push
pop
jmp
and
mov
test
xchg
sbb
repnz
adc
add
jmp
in
in
cmps
loopne
test
out
xor
dec
mov
sbb
cmp
jno
je
(bad)
(bad)
(bad)
(bad)
aas
(bad)
mov
and
or
lea
cwde
sbb
outs
and
cmps
sub
xor
cmp
sub
(bad)
sub
inc
inc
mov
(bad)
inc
into
inc
inc
sub
jo
out
sub
mov
sbb
clc
stos
stc
stos
pop
adc
sti
(bad)
dec
das
imul
retf
pop
and
rcr
stos
sbb
add
inc
xor
(bad)
(bad)
push
or
cmps
imul
(bad)
in
aaa
lds
mov
xor
aas
jae
cwde
pop
adc
je
frstor
jmp
out
(bad)
(bad)
call
dec
adc
mov
icebp
mov
jp
or
jmp
push
aas
in
icebp
in
imul
(bad)
dec
cmp
jmp
push
test
cmps
push
inc
pusha
sbb
inc
pop
or
sbb
(bad)
(bad)
call
inc
cmp
dec
sub
and
or
adc
jg
outs
and
iret
xchg
inc
call
mov
pop
mov
or
test
test
(bad)
(bad)
inc
repz
xchg
push
sub
pop
lock
hlt
fxch
hlt
inc
or
mov
movs
push
jg
add
sub
xchg
mov
fidiv
push
std
inc
ret
add
sub
add
xchg
adc
js
lods
nop
dec
arpl
add
cmc
(bad)
push
imul
cmps
(bad)
inc
mov
and
ins
push
mov
jle
mov
inc
out
(bad)
(bad)
jmp
lea
outs
mov
repnz
rcr
outs
jns
adc
add
cmp
int
sbb
and
jmp
cmp
enter
pop
push
cld
dec
fsubr
cmp
adc
les
jmp
retf
or
pop
sub
adc
(bad)
(bad)
(bad)
(bad)
mov
inc
cwde
mov
inc
inc
adc
jge
mov
push
sbb
ret
and
jp
inc
or
xchg
call
mov
call
sub
pop
or
or
inc
adc
add
cld
xchg
pop
cmc
(bad)
cmp
jne
test
inc
shr
xchg
inc
sub
popf
cmp
sti
adc
jg
or
push
pop
call
scas
sahf
cmp
loop
aaa
add
aas
cmp
(bad)
push
cmp
add
cmp
or
sti
je
cmp
sub
mov
pusha
cmp
adc
(bad)
push
repz
fucompp
pop
or
add
dec
pushf
pop
sbb
dec
push
xchg
cs
jns
dec
add
mov
jne
js
(bad)
(bad)
(bad)
js
add
push
sahf
jmp
call
lods
pop
data16
cmp
outs
cli
mov
xor
inc
fisubr
js
add
cmp
xor
or
xor
and
cmp
pop
in
outs
jp
mov
mov
ins
sbb
pop
dec
or
sbb
and
xchg
aas
sti
push
dec
mov
scas
mov
jb
xchg
sbb
add
ficom
inc
dec
or
adc
mov
add
stc
mov
mov
bound
sbb
dec
cmp
mov
jo
add
out
mov
xor
adc
inc
adc
push
mov
aaa
sti
scas
clc
call
and
and
mov
or
fs
xchg
xchg
loopne
scas
mov
cmp
or
pop
rol
push
add
fs
icebp
call
add
xor
addr16
sub
add
xor
add
inc
inc
push
sbb
cmps
mov
pop
(bad)
(bad)
(bad)
inc
sbb
inc
outs
pop
inc
xchg
rcr
lods
inc
in
jo
xchg
mov
(bad)
(bad)
(bad)
call
iret
inc
je
sbb
fcom
aaa
mov
push
je
pop
je
fsub
mov
(bad)
(bad)
mov
arpl
push
mov
mov
mov
pop
cmp
jmp
imul
out
je
test
jae
pcmpeqw
(bad)
call
loopne
aas
cli
lea
jmp
ins
les
(bad)
mov
test
jmp
xchg
inc
test
je
sub
(bad)
(bad)
fisttp
jmp
mov
cmp
adc
fsubr
sbb
adc
(bad)
jmp
std
pop
sbb
mov
add
xor
(bad)
fnstenv
outs
out
cmp
push
scas
add
fcomip
outs
mov
push
sbb
add
adc
shl
sub
call
push
xlat
sub
push
cmp
call
dec
or
dec
pop
movs
test
fbstp
outs
add
jmp
sar
dec
stos
shl
add
sub
adc
sub
push
dec
lock
bound
or
inc
je
inc
pop
in
(bad)
outs
push
shl
(bad)
(bad)
inc
mov
mov
sub
not
dec
jmp
lea
inc
push
add
repnz
sar
lahf
lods
lods
lahf
or
sub
sub
enter
iret
push
(bad)
(bad)
mov
jge
push
fnstcw
adc
and
pusha
(bad)
sub
std
retf
int
push
test
mov
pop
(bad)
mov
dec
ror
sub
push
jmp
dec
add
xchg
add
inc
xchg
das
clc
scas
or
sbb
and
idiv
imul
mov
push
xchg
adc
adc
jb
push
adc
push
and
(bad)
xor
shl
fnstcw
push
pop
dec
inc
repz
pop
and
mov
and
repz
leave
(bad)
mov
(bad)
(bad)
mov
sub
add
pop
inc
(bad)
dec
leave
lea
inc
lea
push
jbe
sub
jnp
nop
sub
(bad)
(bad)
push
cmp
rdmsr
mov
lahf
inc
das
imul
lea
(bad)
jmp
cmp
pop
out
cmp
out
cmps
hlt
fs
(bad)
(bad)
call
jmp
pop
sbb
call
cwde
imul
sbb
(bad)
(bad)
dec
add
adc
mov
jp
adc
lds
mov
rcl
mov
xchg
push
inc
xchg
(bad)
(bad)
jmp
stos
inc
mov
xor
cmps
outs
and
xor
lea
aas
xor
sbb
jmp
rcr
mov
or
xor
inc
dec
inc
or
pop
repz
sub
cmps
mov
dec
(bad)
cmp
test
call
lea
aam
fbld
cmp
mov
int
mov
ins
jp
sbb
and
jmp
jl
inc
ja
dec
jmp
cmp
mov
aad
mov
and
add
retf
adc
cld
call
xchg
jle
call
test
xchg
dec
(bad)
(bad)
(bad)
call
or
je
xor
add
enter
ds
pop
ja
sub
(bad)
(bad)
push
lods
jo
xchg
or
dec
jo
je
pop
dec
add
les
lea
jmp
shr
and
adc
es
dec
sub
aaa
(bad)
(bad)
out
clc
jmp
add
and
add
rcr
push
(bad)
push
into
ins
loopne
dec
les
jns
scas
mov
inc
and
mov
clc
call
cmp
stos
out
inc
dec
jmp
and
fs
add
loop
test
jo
popaw
xor
or
int3
xchg
mov
ds
(bad)
call
adc
psrlq
ret
add
aas
jmp
and
(bad)
jnp
call
(bad)
loope
push
dec
push
mov
or
sbb
(bad)
(bad)
jg
xor
mov
dec
inc
pop
lea
pop
mov
(bad)
dec
in
push
enter
bound
(bad)
mov
mov
(bad)
jg
and
movsx
push
xlat
pop
into
push
cmp
int
cmp
add
scas
in
dec
dec
nop
mov
imul
xchg
sbb
add
(bad)
mul
push
dec
aaa
std
(bad)
push
xlat
inc
dec
or
dec
sahf
xor
xchg
sar
(bad)
push
cmps
mov
or
ss
sub
test
loope
adc
icebp
cmp
cmp
je
inc
cmp
inc
dec
dec
push
inc
mov
jg
add
dec
add
mov
fcomp
sub
ret
(bad)
jmp
std
and
and
and
add
pushf
(bad)
(bad)
call
ins
(bad)
pop
push
mov
push
mov
or
ins
xlat
mov
jmp
jecxz
imul
(bad)
mov
fs
xor
imul
jecxz
not
jne
cmp
(bad)
jne
(bad)
(bad)
push
and
pusha
jp
xchg
movs
popa
push
dec
inc
pop
enter
sbb
lods
mov
mov
loope
cli
(bad)
(bad)
clc
(bad)
dec
jo
xchg
movs
push
and
xchg
das
dec
add
fstp
cmp
loop
xchg
inc
pop
and
ret
cmps
dec
jne
sub
push
mov
sub
push
sbb
dec
cmp
add
aad
mov
and
fdivr
jg
add
mov
clc
mov
cmp
call
adc
xchg
addr16
pshufw
or
and
push
les
pusha
inc
and
clc
js
xchg
push
xchg
div
cld
(bad)
fsubr
js
ret
stos
jne
mov
xor
dec
int
ds
mov
pop
sbb
xchg
stos
xor
inc
addr16
adc
push
inc
mov
jne
mov
mov
ss
mov
rol
shr
js
gs
je
mov
(bad)
(bad)
jmp
or
and
rcr
mov
jne
je
or
push
icebp
dec
inc
dec
cmp
sbb
(bad)
(bad)
fbstp
mov
push
mov
push
je
stos
add
jg
push
or
mov
adc
add
pop
sub
xchg
cld
dec
arpl
inc
cmp
push
lds
call
cmp
jnp
repz
movs
inc
cmp
lods
add
(bad)
push
cwde
or
dec
cmp
(bad)
(bad)
jmp
inc
mov
xor
fs
jge
xchg
cmp
jns
cmp
and
lods
dec
cmp
jge
jmp
fbld
das
mov
cmp
dec
ror
sahf
fstp
cwde
inc
pop
popf
sbb
(bad)
(bad)
(bad)
inc
retf
push
add
dec
loopne
cmp
push
adc
jno
sub
in
add
jmp
mov
dec
cli
inc
in
enter
iret
pop
repnz
mov
mov
and
les
movaps
sbb
cmp
(bad)
(bad)
dec
push
mov
les
aas
fld
xchg
or
pop
test
xor
cmp
mov
cli
(bad)
ds
mov
test
scas
sbb
in
mov
(bad)
jmp
repnz
mov
rcr
push
sub
sbb
cli
or
fidiv
xchg
(bad)
(bad)
(bad)
inc
adc
test
jmp
data16
push
mov
add
jbe
(bad)
(bad)
(bad)
(bad)
out
mov
xor
inc
pusha
data16
or
nop
add
push
jns
test
mov
(bad)
push
sbb
cmp
les
push
adc
add
inc
sub
pop
cmp
scas
xchg
(bad)
jmp
test
add
imul
stc
outs
push
stc
fadd
ret
adc
add
(bad)
(bad)
inc
xor
or
mov
sbb
jmp
or
test
je
fadd
adc
sbb
add
(bad)
scas
adc
dec
call
dec
dec
enter
das
and
inc
cmp
jl
mov
lahf
mov
adc
(bad)
(bad)
(bad)
(bad)
jmp
ja
xchg
in
arpl
pop
sub
or
cdq
jmp
pop
gs
pop
cmp
inc
(bad)
xor
enter
fadd
loop
dec
add
cs
outs
imul
cmp
push
call
loope
adc
mov
add
(bad)
(bad)
mov
les
add
cmc
lea
xchg
(bad)
mov
stos
sar
push
stos
adc
sar
(bad)
(bad)
inc
sbb
call
jb
mov
push
arpl
inc
push
es
fsincos
mov
addr16
xchg
mov
mov
add
add
jmp
xchg
or
mov
dec
adc
enter
imul
mov
(bad)
(bad)
dec
and
inc
(bad)
adc
xchg
mov
jo
xchg
pushf
sbb
push
popa
(bad)
(bad)
(bad)
(bad)
clc
aas
jle
aaa
je
das
cmp
sbb
xor
xor
sbb
or
cmp
out
stos
jmp
(bad)
(bad)
(bad)
jmp
xor
inc
je
adc
adc
jmp
enter
rcr
test
pop
mov
scas
xor
in
inc
icebp
pop
push
dec
clc
pop
inc
cmp
out
out
pop
ja
xchg
dec
mov
dec
scas
es
(bad)
jp
inc
je
add
cmp
and
cmp
push
scas
aas
push
loope
call
push
sbb
and
movs
dec
push
or
or
lock
xchg
add
cwde
and
dec
stc
add
(bad)
jmp
sub
adc
inc
popa
retf
es
test
dec
arpl
adc
cmp
dec
lods
and
std
(bad)
mov
sub
test
cld
adc
jle
add
mov
(bad)
(bad)
(bad)
call
ins
movs
lock
or
js
add
cmp
fsub
push
or
mov
inc
movs
sub
(bad)
out
clc
or
sub
cs
leave
stc
xor
dec
inc
dec
mov
xchg
cmp
(bad)
dec
dec
lea
arpl
push
dec
ret
aas
jns
call
(bad)
(bad)
call
inc
leave
ss
cmp
lsl
and
inc
xor
add
ret
cs
dec
xchg
call
dec
cmp
scas
xor
es
jmp
add
adc
pop
or
fimul
in
(bad)
mov
fstp
add
pop
jnp
je
out
popa
cmps
aas
fdivr
mov
dec
add
mov
addr16
test
loope
call
ins
mov
dec
inc
xor
jmp
sbb
inc
sub
push
dec
and
adc
inc
sub
not
je
mov
push
sbb
sahf
int
shl
inc
call
sbb
xchg
push
sbb
(bad)
(bad)
inc
outs
pushf
shr
add
mov
pop
pusha
pop
cwde
pusha
call
test
cmp
fdivr
(bad)
(bad)
push
adc
stc
xor
pop
icebp
fwait
adc
mov
dec
cmp
fsubr
nop
add
call
adc
sahf
and
cmps
inc
xchg
dec
aam
inc
adc
pop
add
addr16
(bad)
(bad)
(bad)
(bad)
xor
add
pop
ror
sub
jecxz
cmp
dec
loopne
movs
shl
add
(bad)
dec
lock
pop
cmps
push
jmp
jecxz
ror
fmul
ins
sub
(bad)
(bad)
jmp
sub
inc
mov
ret
sahf
ret
push
xchg
mov
sbb
or
adc
aas
and
(bad)
cmp
push
ins
and
inc
inc
push
aaa
cmp
cdq
sub
fimul
ja
shl
(bad)
(bad)
jmp
and
and
add
loopne
push
mov
retf
fimul
icebp
pop
add
mov
inc
movs
lds
push
pop
sbb
add
cld
loope
in
les
(bad)
(bad)
(bad)
call
ja
hlt
out
dec
mov
into
xor
test
pop
sub
popf
fimul
repz
imul
(bad)
jmp
mov
mov
(bad)
add
rcl
mov
call
pop
sbb
and
(bad)
(bad)
(bad)
call
in
jne
jmp
push
cmp
mov
ds
mov
fldcw
nop
cmp
sbb
xchg
sbb
lds
sahf
shr
fadd
(bad)
(bad)
jmp
jb
rol
dec
or
shr
imul
(bad)
mov
fimul
sahf
cld
test
je
sbb
cmp
sub
mov
sub
xor
jmp
adc
mov
mov
adc
or
add
xchg
sbb
inc
inc
repnz
shr
(bad)
(bad)
(bad)
inc
or
test
js
in
and
je
sbb
mov
adc
(bad)
loopne
(bad)
inc
push
inc
dec
cmp
xor
and
(bad)
dec
and
jmp
mov
xor
dec
outs
xor
push
add
inc
(bad)
inc
add
rol
and
sbb
js
xlat
jns
stos
(bad)
dec
adc
jnp
aaa
movs
adc
jb
inc
sub
bound
(bad)
jmp
inc
xor
test
push
sti
sbb
dec
jmp
cmc
mov
push
(bad)
ficomp
mov
in
xor
(bad)
(bad)
inc
sahf
add
pushf
dec
fs
mov
in
in
scas
adc
xlat
(bad)
(bad)
(bad)
inc
inc
rcr
pop
stos
xchg
add
pop
inc
inc
ror
xchg
or
shr
(bad)
(bad)
cmp
or
and
mov
mov
inc
mov
dec
stos
add
leave
jmp
icebp
(bad)
call
add
push
xor
dec
cmps
add
xchg
adc
or
inc
mov
(bad)
jg
cmp
sar
pop
aad
lock
add
sub
(bad)
(bad)
inc
test
jne
dec
xchg
or
out
or
jecxz
push
inc
shl
sar
ja
push
cmp
(bad)
(bad)
dec
in
xchg
mov
jmp
push
lahf
cmp
test
dec
sar
test
mov
mov
cmc
adc
test
inc
or
or
mov
(bad)
(bad)
jmp
cld
imul
xor
test
add
imul
cmp
(bad)
(bad)
(bad)
mov
adc
mov
pop
not
lea
cmp
pop
rcr
xor
(bad)
inc
pop
push
pop
push
and
rcl
cs
mov
jae
sub
adc
jb
jne
add
aad
sahf
sbb
add
mov
test
loop
push
cmps
test
ja
jmp
cmp
cwde
test
jmp
popa
test
push
cmp
and
push
dec
(bad)
(bad)
(bad)
dec
jmp
pop
mov
jg
add
pop
or
scas
cmps
ins
or
adc
inc
shl
or
cmp
(bad)
scas
call
mov
jne
jo
xor
mov
or
rol
dec
mov
mov
idiv
and
jmp
ins
jecxz
lds
nop
cmp
cmp
inc
inc
enter
fbld
daa
sbb
add
and
pop
and
cmp
(bad)
mov
inc
cmp
inc
add
pop
test
sub
je
(bad)
call
dec
in
dec
or
push
fs
int3
pop
cs
add
cmp
in
or
push
sbb
add
retf
cmp
pop
push
shl
pop
(bad)
mov
inc
aas
adc
cmp
repz
cmp
call
pushw
mov
jne
mov
sub
(bad)
sub
or
call
adc
ja
das
inc
mov
and
psrld
(bad)
xlat
data16
xchg
std
ds
cmp
xchg
(bad)
mov
test
xchg
adc
(bad)
call
aas
mov
cmp
shr
(bad)
(bad)
(bad)
call
cli
rcl
fcomi
fdivr
jo
vzeroupper
sbb
fidivr
mov
sub
popf
xlat
xor
cli
aas
mov
or
mov
sub
pop
aad
das
(bad)
(bad)
(bad)
inc
inc
mov
xchg
mul
cmp
push
jb
daa
into
adc
add
xchg
pop
repnz
scas
clc
mov
jo
aaa
es
daa
jae
jmp
add
int3
push
call
dec
(bad)
sbb
in
sub
xchg
mul
adc
sti
adc
pop
(bad)
dec
lock
xor
rol
fild
add
clc
(bad)
dec
push
inc
fdivp
sub
(bad)
ss
add
push
or
mov
in
in
xor
add
jmp
sbb
fmul
cld
jp
sbb
jg
xchg
mov
jp
push
std
sbb
dec
mov
jb
sbb
xor
(bad)
(bad)
(bad)
call
sbb
mov
xlat
adc
int3
fistp
cli
iret
mov
sub
pop
lock
icebp
inc
loop
popa
add
aas
out
cmps
bound
loopne
jbe
push
xor
loopne
(bad)
(bad)
mov
xor
xlat
not
arpl
pusha
xchg
cmp
(bad)
rol
inc
faddp
repz
repz
outs
cmp
int3
(bad)
jmp
fmulp
pop
repz
retf
retf
mov
and
leave
stc
leave
push
sbb
jmp
call
and
call
retf
out
add
mov
(bad)
(bad)
(bad)
out
jo
ins
add
pop
(bad)
and
int
ficom
pop
add
je
sbb
lahf
mov
dec
mov
pushf
icebp
or
pop
cmp
aam
(bad)
xchg
das
pop
adc
mov
mov
pop
(bad)
pop
sub
call
inc
fld
iret
add
int
mov
popa
sub
push
andnps
(bad)
vsqrtsd
push
rcl
sub
xor
push
repnz
ss
cmp
test
lock
(bad)
fnsave
push
das
pop
dec
jae
das
sub
ret
scas
dec
arpl
adc
cli
ja
(bad)
fist
or
add
and
jmp
xor
push
jp
les
inc
push
cmp
(bad)
jg
movs
inc
xor
sbb
fwait
push
rcl
cmp
inc
mov
ss
jb
(bad)
pop
(bad)
mov
js
(bad)
into
add
jne
(bad)
(bad)
(bad)
call
sub
pop
pop
call
push
sub
movs
sub
push
and
ficom
xchg
sub
sub
(bad)
call
ins
sub
mov
scas
ror
test
(bad)
sar
(bad)
(bad)
inc
inc
mov
jp
pusha
xchg
(bad)
mov
pop
rcl
rcr
pusha
mov
shl
(bad)
(bad)
(bad)
(bad)
call
shrd
mov
inc
push
addr16
call
mov
add
(bad)
call
(bad)
dec
mov
mov
dec
cmp
dec
cmp
pop
cdq
clc
(bad)
jg
pusha
push
dec
add
jle
aam
xor
clc
push
push
or
adc
fs
dec
xor
push
pop
jo
jnp
inc
and
jmp
retf
sbb
frstor
dec
mov
rol
aaa
std
adc
and
xor
xchg
cmc
dec
pop
(bad)
dec
inc
push
mov
sahf
in
dec
ins
lahf
fisttp
push
push
add
xchg
and
(bad)
call
cld
xor
lock
sbb
mov
scas
pop
add
mov
or
dec
les
push
sbb
js
xchg
mov
sti
sti
sbb
pusha
jp
xor
xchg
push
jp
outs
clc
call
push
sub
ins
sbb
pop
pop
adc
lahf
sub
dec
shr
inc
fidivr
add
jne
sti
hlt
and
ror
test
jecxz
ins
mov
mov
adc
inc
cmp
dec
iret
add
xor
mov
dec
and
jmp
je
loop
sub
stos
pinsrw
std
call
mov
jns
rcl
ret
call
push
jno
(bad)
(bad)
inc
pop
xchg
addr16
mov
jae
mov
(bad)
aam
inc
sub
les
(bad)
call
call
lods
xchg
or
push
push
daa
lods
and
sub
(bad)
push
sbb
in
adc
js
lods
syscall
lds
call
(bad)
(bad)
dec
dec
(bad)
and
add
in
xchg
mov
jo
iret
or
jp
dec
pop
xor
(bad)
and
sahf
(bad)
(bad)
(bad)
dec
or
push
or
out
xlat
push
push
or
jne
fld
hlt
sub
inc
add
call
sahf
add
fimul
mov
pop
lock
movs
inc
cmp
xchg
push
out
(bad)
(bad)
mov
jbe
mov
jne
setg
or
mov
(bad)
(bad)
(bad)
push
adc
cmps
adc
dec
fild
shr
adc
paddb
shl
(bad)
call
push
mov
clc
mov
and
inc
push
pandn
or
or
(bad)
ficomp
mov
test
into
and
lahf
les
neg
mov
neg
out
cmp
jg
xor
mov
adc
lods
sar
mov
push
xor
jle
clc
push
int
sbb
(bad)
(bad)
(bad)
jg
outs
mov
(bad)
imul
call
sub
and
ret
push
and
jae
push
loop
std
push
sbb
cli
ror
and
or
(bad)
(bad)
mov
jl
into
or
mov
test
xchg
shr
sub
jo
jbe
(bad)
jg
lods
xor
and
sub
cmp
mov
clc
jmp
inc
call
call
sbb
inc
loopne
pop
out
mov
sbb
mov
mov
sub
cmp
sub
shl
push
add
das
sub
and
sub
adc
push
fnstenv
call
je
sbb
(bad)
call
mov
or
xchg
jmp
jns
pop
pop
jmp
cmp
and
loopne
dec
inc
out
fisub
jmp
xor
add
arpl
sar
mov
mov
loopne
xchg
and
in
sub
pop
mov
push
dec
cmp
ja
lahf
popa
push
sar
fimul
(bad)
(bad)
(bad)
jg
dec
xchg
add
xchg
dec
shl
jl
je
test
scas
adc
out
sub
dec
cwde
aaa
aaa
call
call
mov
std
(bad)
push
ret
inc
jmp
out
sahf
sahf
(bad)
(bad)
(bad)
jmp
inc
ret
pop
leave
sbb
loop
dec
push
in
dec
mul
or
stc
mov
cmp
sub
(bad)
(bad)
(bad)
(bad)
stc
(bad)
repz
jp
pop
jmp
loope
add
loope
add
xor
mov
mov
pushf
das
mov
adc
(bad)
jge
(bad)
dec
scas
out
loope
xor
js
sbb
push
and
lds
int
jg
cmps
mov
lea
jmp
jo
sub
inc
add
ret
ss
mov
fidivr
and
(bad)
(bad)
(bad)
(bad)
cmp
movs
hlt
and
shr
mov
test
inc
push
mov
fcompp
or
(bad)
(bad)
(bad)
inc
adc
sbb
nop
cwde
add
adc
shl
mov
pop
jl
iret
data16
jno
sub
mov
adc
js
sub
pop
jg
stc
push
pop
mov
in
cli
cld
(bad)
dec
mov
add
add
retf
out
sar
or
mov
ins
test
jg
in
ja
dec
fdiv
mov
mov
call
dec
mul
div
jg
cs
sub
adc
imul
add
adc
aas
mov
(bad)
(bad)
(bad)
inc
push
dec
xchg
fwait
es
cmp
jae
pop
fsubr
out
jbe
int
sti
pop
xor
(bad)
push
inc
jb
cmps
in
jbe
cmps
mov
xchg
adc
sahf
mov
bound
retf
push
mov
ins
outs
pusha
sar
jmp
dec
pop
jae
je
pop
adc
loop
rcl
neg
or
push
jmp
lods
stos
(bad)
(bad)
(bad)
in
and
aam
xchg
sub
in
daa
call
inc
mov
in
(bad)
(bad)
(bad)
inc
xchg
aad
jo
dec
adc
pusha
mov
jmp
aam
lods
dec
cdq
aas
cs
dec
outs
call
std
add
push
inc
in
outs
adc
mov
pushf
shr
pop
mov
(bad)
(bad)
call
pop
or
fisubr
xor
shr
sub
inc
iret
cs
mov
imul
and
(bad)
(bad)
jmp
push
out
call
mov
mov
mov
aad
inc
sub
icebp
(bad)
(bad)
call
add
loop
ja
sub
inc
fisubr
or
popa
and
(bad)
(bad)
fbld
imul
xor
mov
test
sub
pop
adc
clc
pop
movs
xchg
test
mov
loop
xchg
lock
call
fild
scas
das
js
inc
inc
(bad)
pop
call
sub
mov
(bad)
(bad)
jmp
fcomp
push
jb
cmp
test
icebp
(bad)
mov
mov
repz
rcr
lods
fadd
xchg
(bad)
or
out
adc
pop
imul
(bad)
inc
adc
retf
push
jmp
cmp
or
movs
dec
lock
(bad)
(bad)
(bad)
mov
hlt
jmp
sahf
ins
cmps
sub
dec
dec
or
int
(bad)
call
push
in
inc
mov
dec
data16
int3
dec
(bad)
out
push
push
inc
sub
dec
xor
dec
pop
cld
(bad)
jmp
push
adc
xchg
sbb
ror
bnd
jle
mov
and
add
cli
mov
or
sub
ror
push
lea
ds
mov
adc
mov
inc
mov
and
call
(bad)
jg
or
sub
(bad)
stc
imul
mov
loopne
jg
xor
shl
cmps
dec
(bad)
sbb
add
cmps
and
sub
add
inc
cmps
lods
(bad)
(bad)
(bad)
dec
int
aas
adc
pop
add
imul
(bad)
call
jne
push
sbb
lea
aam
shl
popf
or
push
mov
(bad)
neg
in
test
xor
call
xor
cmp
pop
xor
cld
(bad)
call
xor
or
inc
add
pusha
inc
(bad)
xchg
lea
xor
dec
pop
and
(bad)
jmp
xor
and
cmp
out
dec
jbe
or
adc
lods
les
mov
sbb
in
add
sbb
pop
jge
ins
push
sub
fdivr
(bad)
(bad)
(bad)
js
jl
inc
lea
inc
mov
sti
pop
rcl
iret
inc
mov
dec
push
add
add
cld
push
outs
mov
pusha
mov
fwait
test
jo
call
jg
jne
push
xchg
pop
sar
mov
aam
popf
in
jle
dec
mov
jo
mov
stos
loop
(bad)
call
mov
xor
jmp
(bad)
cmp
mov
mov
fwait
pop
jnp
lea
loope
jg
fadd
idiv
mov
inc
test
mov
pop
lods
(bad)
(bad)
mov
sbb
xor
cmp
pop
inc
adc
cmovl
mov
mov
jge
jbe
push
sahf
cmc
mov
mov
enter
xchg
mov
(bad)
(bad)
call
sub
xchg
test
xchg
adc
xor
mov
adc
add
and
add
and
(bad)
(bad)
(bad)
lds
sbb
fadd
rcr
dec
loopne
xor
add
jp
cmp
(bad)
out
push
cld
(bad)
inc
cmp
pop
push
jbe
jmp
mov
push
add
ja
fwait
loop
push
fs
je
mov
inc
adc
js
pop
sbb
mov
lods
loope
or
sbb
cmp
add
(bad)
(bad)
push
inc
pop
aas
jbe
inc
add
jno
adc
mov
(bad)
or
push
sbb
test
mov
(bad)
sbb
lahf
mov
loope
jo
cwde
ds
mov
sti
test
xchg
addr16
xchg
xchg
aaa
xor
test
mov
dec
int
add
inc
call
xchg
int
or
jne
enter
inc
jmp
fstp
jnp
fucompp
pop
es
lods
fwait
lods
jle
dec
dec
mov
inc
sub
(bad)
(bad)
(bad)
dec
mov
cwde
inc
sbb
cmp
adc
adc
and
outs
push
stc
rol
sbb
push
mov
cli
or
lea
leave
mov
call
fnstsw
or
jl
xor
cwde
imul
push
ror
clc
xchg
sub
sahf
outs
call
mov
push
sti
mov
ret
inc
push
ror
retf
sub
mov
inc
mov
inc
popa
movs
or
repnz
cli
daa
clc
dec
inc
add
frstor
and
jecxz
retf
sub
(bad)
mov
inc
mov
idiv
fnstcw
cmc
push
imul
pop
pop
fwait
test
mov
(bad)
call
ret
jg
jl
sub
inc
mov
add
add
or
mov
jmp
add
push
mov
jmp
xlat
xor
bound
repnz
pusha
leave
adc
and
push
test
pusha
ins
cmp
xchg
fldenv
loopne
lea
(bad)
(bad)
inc
mov
inc
cmp
push
sub
sbb
aad
(bad)
jl
xlat
cdq
rol
stos
loopne
in
(bad)
(bad)
(bad)
dec
inc
ror
add
cld
or
mov
dec
xor
xchg
fistp
scas
push
btc
and
(bad)
(bad)
dec
mov
sti
je
sub
mov
push
dec
leave
jae
inc
push
add
or
inc
dec
dec
add
(bad)
(bad)
call
repnz
mov
cmps
in
mov
int3
jns
test
add
push
mov
push
push
mov
add
mov
in
sti
push
repnz
add
and
pop
(bad)
push
pop
jno
stc
add
jp
clc
lea
jns
pop
inc
sbb
cmps
jno
ins
adc
call
pop
dec
cmc
mov
es
adc
les
mov
xchg
sar
(bad)
call
retf
mov
jo
mov
je
lea
addr16
push
pop
add
out
jo
cmp
pop
xchg
(bad)
and
ret
jb
sub
jo
pop
je
cmp
nop
add
outs
lock
push
ffree
adc
lock
rol
pop
jne
add
mov
mov
(bad)
jnp
ret
lds
adc
cmp
and
add
adc
or
outs
pop
icebp
mov
mov
push
sbb
cs
jmp
add
dec
push
sbb
or
inc
mov
dec
xor
(bad)
(bad)
inc
adc
stc
sbb
xchg
add
dec
jl
sub
loop
test
(bad)
(bad)
jmp
sub
neg
mov
retf
cmp
sar
test
sahf
mov
push
sub
shl
or
not
adc
jg
loopne
and
(bad)
(bad)
inc
lock
leave
sub
sbb
mov
std
pusha
jmp
push
cmp
push
imul
out
out
mov
sub
inc
(bad)
inc
shr
mov
xchg
outs
xor
sub
xor
sbb
js
(bad)
(bad)
dec
pushf
add
jmp
scas
mov
jmp
sahf
and
or
das
cli
mov
or
addr16
sub
or
dec
clc
(bad)
(bad)
fdiv
mov
test
adc
mov
sbb
(bad)
push
add
lods
and
or
push
enter
mov
mov
cmp
dec
cmps
icebp
inc
fistp
cmp
(bad)
jmp
mov
sbb
sbb
jmp
lock
cmp
inc
loop
inc
fcomp
push
popa
clc
sub
dec
mov
or
ret
(bad)
push
sbb
inc
mov
mov
xchg
sti
lds
loopne
or
dec
ss
add
leave
inc
and
rcr
mov
inc
cli
pop
inc
je
xor
or
jmp
cmps
or
out
dec
dec
add
call
inc
aam
test
pop
shl
es
fadd
add
and
shl
test
mov
mov
and
and
and
shl
mov
loopne
fiadd
(bad)
jmp
jmp
mov
sbb
dec
and
inc
or
dec
add
dec
dec
js
xchg
sbb
test
pop
in
js
push
(bad)
(bad)
fistp
mov
(bad)
xor
push
jmp
fsub
lds
sbb
(bad)
(bad)
(bad)
(bad)
jmp
leave
cmps
call
sbb
pusha
mov
xor
xor
xor
cmp
sub
or
(bad)
(bad)
jmp
add
and
or
sbb
mov
push
sub
xor
(bad)
jmp
mov
add
jmp
add
sahf
out
pop
nop
add
push
add
enter
mov
mov
dec
xchg
pop
aam
jns
sbb
push
test
(bad)
dec
mov
mov
dec
into
and
ja
or
(bad)
jmp
retf
pop
daa
and
je
cmps
loope
sbb
pop
add
adc
cmp
cs
jl
pop
add
and
(bad)
jmp
mov
inc
inc
jp
pop
fwait
push
mov
jle
out
xchg
(bad)
(bad)
mov
in
mov
jecxz
and
xor
in
cld
(bad)
(bad)
push
(bad)
jmp
jp
pop
lock
pushf
or
lods
cld
btr
and
es
test
(bad)
jg
and
aas
vmovhpd
inc
clc
(bad)
(bad)
(bad)
jp
(bad)
inc
inc
push
or
les
xor
js
sub
dec
xchg
rcr
(bad)
scas
mov
das
mov
mov
pop
fstp
jmp
pop
(bad)
ja
icebp
(bad)
jmp
inc
cmp
jbe
das
mov
rol
sar
int
sbb
add
adc
jl
enter
pop
lock
ja
add
cmp
jmp
aad
imul
jl
add
jle
pop
hlt
jg
add
shl
out
inc
add
inc
xor
stc
mov
dec
push
jbe
add
std
ret
call
rol
dec
push
jo
push
lock
and
inc
and
inc
mov
cdq
fsubr
neg
jecxz
cli
stos
loop
shl
(bad)
(bad)
inc
xchg
in
out
adc
mov
add
inc
mov
int
mov
outs
add
add
in
inc
inc
push
(bad)
(bad)
call
loop
dec
adc
fild
fisub
jmp
pop
mov
test
call
ret
or
rcl
mov
(bad)
(bad)
(bad)
cmp
inc
mov
fmul
adc
mov
jecxz
pop
push
and
cmc
fs
(bad)
call
xchg
xor
or
mov
dec
loopne
adc
fild
pop
inc
sar
inc
inc
cmp
or
data16
add
imul
cli
(bad)
inc
pusha
addr16
and
sbb
cmp
inc
dec
loopne
or
mov
lea
xor
(bad)
inc
dec
(bad)
es
ror
sahf
inc
ret
inc
add
cld
jmp
rcl
bound
js
retf
(bad)
cmp
fsubr
add
jmp
cmp
sbb
add
sub
ret
cs
(bad)
(bad)
call
cs
idiv
jp
mov
nop
sar
pop
mov
enter
cmp
dec
sahf
shr
or
mov
sub
mov
(bad)
(bad)
inc
test
cmp
jae
and
push
lock
push
fisubr
mov
adc
mov
pusha
nop
stos
jmp
cmp
pusha
loopne
or
rcr
xchg
cmp
repz
dec
popf
mov
(bad)
(bad)
jns
add
(bad)
jae
nop
imul
mov
push
scas
jmp
push
sti
add
pop
(bad)
inc
or
inc
(bad)
sar
in
sbb
fiadd
into
aas
mov
(bad)
(bad)
jmp
push
scas
adc
add
enter
js
es
and
inc
ret
icebp
pop
add
sbb
mov
push
les
mov
repz
sbb
(bad)
rol
(bad)
(bad)
jmp
(bad)
les
push
ffree
pop
push
shl
test
sahf
mov
and
loopne
(bad)
(bad)
(bad)
dec
add
dec
pusha
add
retf
stos
jne
xlat
and
fadd
add
add
sbb
inc
pop
add
dec
(bad)
mov
cmps
mov
xor
mov
or
dec
and
mov
xchg
mov
hlt
retf
xchg
or
add
pop
cld
(bad)
jmp
and
jle
into
sbb
or
add
mov
adc
loopne
add
jmp
fsubp
ds
inc
mov
inc
adc
aaa
or
jmp
sbb
jg
or
sbb
in
sti
(bad)
(bad)
(bad)
push
pop
movs
inc
xchg
nop
add
inc
in
cmp
cmp
lock
pusha
(bad)
setb
nop
dec
dec
sbb
lods
inc
enter
or
inc
cs
call
(bad)
mov
scas
test
mov
jge
add
out
mov
push
and
xlat
movs
fucomp
(bad)
and
(bad)
(bad)
(bad)
inc
jp
dec
mov
hlt
loopne
mov
jmp
cdq
add
ficomp
mov
(bad)
(bad)
(bad)
jp
jo
je
push
sbb
dec
jae
fild
movs
mov
(bad)
(bad)
fcomip
or
ret
mov
enter
mov
push
adc
sub
inc
mov
mov
jmp
cmp
leave
xor
test
cdq
dec
out
inc
ret
dec
adc
ds
imul
int3
sar
lods
(bad)
jmp
dec
mov
sbb
call
movs
into
imul
shr
cmp
add
add
add
mov
inc
rol
mov
jecxz
pop
xchg
pop
pop
adc
or
(bad)
jmp
fadd
add
inc
sub
into
inc
mov
(bad)
(bad)
(bad)
push
out
push
or
mov
je
addr16
cmp
imul
sbb
xchg
test
xchg
pop
xchg
(bad)
jmp
push
adc
push
rol
loope
(bad)
call
cwde
push
sbb
or
jl
movntq
(bad)
mov
inc
in
push
lods
mul
dec
push
mov
loope
sahf
loopne
(bad)
fs
jae
cmp
xor
in
sub
push
(bad)
jo
rol
mov
in
pop
std
mov
sbb
jmp
xchg
and
nop
mov
dec
push
jno
test
jb
(bad)
(bad)
(bad)
call
inc
dec
push
enter
jns
je
stos
loope
add
sbb
jns
ins
(bad)
out
or
clc
push
lods
movs
add
jmp
push
cmp
sub
push
fs
push
test
imul
pop
inc
fs
(bad)
push
ret
push
leave
dec
mov
xor
aam
mov
sbb
xor
(bad)
(bad)
inc
mov
in
into
ss
xchg
jo
xlat
loopne
gs
sbb
(bad)
jmp
lods
enter
push
sub
stos
xchg
dec
sahf
cmp
jno
ins
push
sbb
dec
nop
sbb
cmp
inc
or
mov
cmc
je
ret
(bad)
call
leave
ret
push
xchg
mov
popf
fld
or
xor
inc
push
ins
mov
jmp
inc
sbb
jmp
add
not
out
sbb
cmps
lods
inc
push
jmp
adc
fwait
(bad)
push
pop
bsr
cmp
rcl
fisub
push
in
sbb
inc
lahf
sbb
cmp
xor
loope
xor
mov
clc
(bad)
(bad)
(bad)
call
or
inc
(bad)
mov
inc
cs
add
push
or
cmp
pop
leave
and
sub
sbb
fild
mov
and
add
lods
iret
push
scas
lods
adc
(bad)
(bad)
(bad)
out
cli
std
rol
or
ror
xlat
ins
xor
jmp
mov
ja
adc
in
pusha
loope
je
lea
dec
inc
and
sub
add
(bad)
(bad)
(bad)
call
cld
jb
cmp
add
ror
mov
xchg
cmp
xor
dec
push
adc
cmc
dec
test
retf
and
and
mov
call
add
(bad)
sub
and
dec
in
or
je
xor
sbb
jbe
stc
out
push
xchg
sahf
outs
adc
repnz
lea
dec
out
ja
ja
mov
data16
mov
std
sahf
jnp
(bad)
bound
mov
pop
js
add
(bad)
(bad)
(bad)
(bad)
mov
lods
or
inc
mov
popf
or
test
mov
popa
add
cmp
(bad)
push
cld
and
scas
nop
subps
daa
inc
js
lea
fwait
adc
(bad)
(bad)
push
or
std
xor
in
xor
xor
xor
inc
into
pop
stos
ds
data16
inc
jg
call
in
loope
test
push
leave
and
enter
fsubr
xor
(bad)
jg
sbb
xor
cmp
and
and
sbb
and
mov
mov
inc
xchg
nop
jp
fld
jns
sbb
pop
inc
lock
or
fmulp
add
(bad)
jmp
out
inc
mov
cmp
(bad)
(bad)
jmp
push
ret
(bad)
iret
push
cs
mov
add
in
fistp
rol
mov
xor
or
movs
xchg
add
fsubr
dec
sub
adc
jg
(bad)
dec
mov
adc
sub
jmp
aaa
add
push
adc
mov
or
(bad)
call
je
jae
stc
pop
popf
adc
jge
xor
cmp
pop
cld
jmp
loope
jge
inc
pop
dec
(bad)
xchg
adc
movs
pop
pop
retf
nop
mov
clc
sti
inc
dec
lahf
inc
leave
neg
xchg
nop
or
or
ret
test
mov
pop
mov
push
in
das
das
les
lock
(bad)
adc
push
sbb
clc
rcl
mov
push
hlt
ss
jl
adc
and
mov
xlat
xchg
les
dec
call
adc
rcl
add
scas
add
push
xlat
sbb
dec
fimul
outs
cld
jg
jmp
mov
and
test
adc
fbstp
sbb
sti
pop
and
jmp
bound
out
cmp
sub
loope
pop
sub
(bad)
cld
adc
xchg
inc
repnz
(bad)
jg
pop
ss
cmp
inc
gs
outs
int3
add
pop
mov
ror
or
inc
retf
(bad)
jmp
test
mov
popa
inc
dec
das
dec
pop
pop
fistp
cmc
jne
(bad)
(bad)
call
dec
dec
inc
xor
fstp
call
stc
shr
movs
jmp
call
cmp
push
clc
popa
sbb
fs
pop
ins
cli
jmp
les
push
sub
xor
clc
shr
(bad)
out
in
inc
daa
xor
jmp
adc
pop
adc
sahf
mov
outs
(bad)
mov
call
jl
lea
dec
sub
test
cmp
js
mov
sub
mov
push
pop
adc
(bad)
mov
cmp
aad
(bad)
call
mov
test
sub
mov
xor
inc
mov
push
jg
push
out
xchg
push
add
ret
and
inc
clc
sub
pop
sub
mov
mov
sbb
rcr
pop
(bad)
scas
and
je
mov
nop
js
sbb
sahf
xor
out
add
pop
cmc
dec
in
call
mov
sub
(bad)
mov
push
not
or
(bad)
mov
sahf
fnstsw
mov
sub
dec
add
dec
jne
mov
cmp
ja
add
or
lahf
sbb
test
or
(bad)
(bad)
jmp
mov
adc
test
inc
sub
ret
mov
out
nop
inc
xchg
cdq
sub
test
dec
jbe
fldcw
xchg
stc
lock
int
or
hlt
ja
xchg
(bad)
(bad)
(bad)
mov
into
xlat
shr
fistp
sub
ror
(bad)
fdiv
(bad)
(bad)
push
into
test
jge
popf
fidiv
dec
loopne
cmp
push
xor
or
inc
cdq
xchg
loopne
(bad)
call
movs
outs
in
fcmovb
cmp
sub
not
mov
add
cmp
mov
das
stos
popf
cmps
adc
xchg
mov
jb
cmp
jnp
mov
enter
xlat
sub
ja
jae
aas
(bad)
jg
(bad)
cmp
add
jmp
push
sub
je
cmp
test
retf
es
jo
push
(bad)
jmp
mov
pusha
fstp
dec
setbe
xor
mov
pop
cmp
lods
fisub
xor
and
loope
(bad)
jg
in
jmp
xor
dec
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
fst
xor
aam
mov
jle
dec
inc
outs
pusha
shl
or
test
push
sbb
push
sar
add
in
nop
add
rol
aam
ins
push
(bad)
push
imul
mov
cmp
jo
push
(bad)
(bad)
sbb
loopne
movs
jg
scas
cli
ror
enter
push
mov
jmp
fdivr
stos
(bad)
dec
inc
pop
and
lahf
inc
jecxz
cld
fcom
mov
xor
movs
inc
test
inc
movs
jo
cld
leave
(bad)
sbb
xchg
into
dec
aaa
cld
jmp
retf
and
hlt
push
sbb
retf
push
pinsrw
adc
(bad)
(bad)
push
push
xchg
add
xor
push
mov
cmp
mov
test
xlat
ror
js
adc
(bad)
(bad)
(bad)
dec
pop
fst
(bad)
shr
loop
cmp
add
adc
jmp
dec
cmp
xor
sbb
sub
add
adc
add
pusha
or
enter
icebp
inc
ror
or
je
mov
cmp
fmul
mov
mov
dec
ja
nop
mov
add
push
sub
push
adc
call
push
push
call
sbb
aam
neg
pop
mov
ror
dec
and
lahf
dec
pop
rcr
add
call
or
sub
mov
(bad)
(bad)
out
int3
cmps
shl
pop
adc
inc
sub
loope
xchg
jo
jle
mov
(bad)
call
or
pusha
lahf
mov
jle
pop
add
mov
fidivr
cmp
(bad)
inc
mov
sub
pop
(bad)
mov
fisubr
inc
dec
inc
mov
xor
cmp
adc
jp
mul
xor
xchg
mov
(bad)
(bad)
(bad)
call
cmp
ds
ds
fisttp
and
cmps
test
xor
xor
dec
fadd
push
add
rcr
cmp
inc
mov
lahf
push
(bad)
out
es
push
pop
pop
lock
pop
inc
mov
jle
and
cli
or
sbb
clc
push
or
push
out
add
div
cmp
inc
xor
clc
mov
push
sar
es
add
int
and
rcl
call
sahf
xchg
nop
add
add
or
(bad)
pop
arpl
mov
(bad)
dec
in
lock
sub
rcl
dec
xchg
push
popf
add
lahf
fisttp
add
cld
(bad)
(bad)
fisub
or
cmp
call
push
add
add
jne
rol
adc
idiv
jg
movs
fs
jmp
mov
ja
xor
xchg
push
adc
dec
jae
lds
pop
push
cmp
or
(bad)
(bad)
push
pop
mov
sti
in
add
(bad)
rol
test
outs
adc
rcl
in
(bad)
(bad)
(bad)
jmp
sar
ficomp
inc
ds
ds
sar
ror
bound
shl
or
cmp
add
in
jo
sahf
ret
jg
push
fcom
push
or
inc
test
or
mov
and
dec
scas
cli
(bad)
call
lea
sbb
xor
cmp
lods
push
cmp
ja
jp
(bad)
(bad)
(bad)
inc
xchg
ins
mov
inc
xor
(bad)
mov
push
mov
add
xor
or
push
push
fistp
sbb
sar
out
clc
sub
add
push
push
ror
mov
dec
xchg
jo
dec
out
add
dec
lock
bound
test
jno
xor
(bad)
sar
(bad)
dec
ja
or
test
jno
pop
(bad)
mov
cmp
lock
(bad)
(bad)
mov
mov
xchg
push
push
push
cmps
jle
jo
sti
adc
out
jg
(bad)
jmp
push
loop
xchg
push
(bad)
js
gs
clc
mov
sahf
mov
aas
and
jns
(bad)
(bad)
(bad)
jmp
pusha
mov
ret
call
add
ret
push
loopne
into
es
(bad)
(bad)
(bad)
clc
and
push
call
add
jo
ins
imul
outs
add
add
push
ret
pop
(bad)
pop
jp
mov
ja
cld
sbb
dec
and
int
aad
dec
add
xchg
inc
inc
sub
dec
sbb
pop
aaa
std
push
mov
mov
movs
mov
mov
(bad)
call
cwde
sbb
leave
or
adc
or
repz
ins
adc
cmp
clc
je
adc
es
fidivr
(bad)
(bad)
call
jge
scas
mov
dec
add
lods
and
popa
mov
and
in
add
xchg
add
(bad)
(bad)
fcomip
inc
daa
sub
or
adc
inc
sbb
inc
outs
addr16
dec
outs
pop
fld
add
adc
loop
pusha
mov
mov
push
inc
add
(bad)
(bad)
push
dec
ret
ror
add
cmps
jg
add
sbb
int
sub
push
aaa
dec
call
push
std
(bad)
cmp
and
cmp
out
dec
sub
sub
aam
call
jmp
push
dec
cmp
mov
call
add
mov
mov
xor
or
inc
or
or
inc
xchg
adc
fcom
mov
repz
cmps
(bad)
(bad)
inc
out
and
inc
mov
outs
ds
adc
add
stc
fcmovbe
ret
clc
call
mov
xchg
xor
loop
cld
out
sbb
cmp
jno
dec
lock
(bad)
(bad)
fbstp
jl
mov
jl
jmp
dec
std
das
test
fisttp
(bad)
(bad)
(bad)
inc
enter
stos
movs
push
inc
outs
fnstsw
cmp
xor
fbstp
and
add
outs
adc
pusha
or
cmp
clc
jmp
add
pop
push
or
mov
jmp
xchg
jae
push
jnp
(bad)
(bad)
(bad)
jmp
dec
mov
add
stos
mov
pop
call
(bad)
loop
push
dec
pop
jo
bnd
cld
(bad)
(bad)
clc
fisubr
jl
cmp
adc
sbb
pop
dec
xor
movs
test
pop
enter
pop
pop
les
lock
loop
sub
mov
je
fisttp
shl
push
mov
sbb
or
cmc
or
sar
jmp
nop
jp
rdmsr
mov
sub
and
(bad)
push
je
xchg
adc
nop
pusha
push
rcl
xchg
cmp
jp
mov
dec
inc
cld
push
add
xchg
(bad)
rol
push
aas
mov
lea
jl
or
and
sbb
cld
sbb
dec
mov
cmp
sti
rcl
inc
scas
push
ins
and
arpl
mov
mov
pusha
cmp
jmp
mov
pusha
xor
clc
pop
fdivr
pop
push
push
pop
test
in
iret
jl
lock
inc
test
lods
call
out
outs
(bad)
push
test
xor
mov
dec
sar
jno
ror
(bad)
(bad)
(bad)
(bad)
inc
cmp
adc
ret
mov
jl
pop
push
xchg
bound
outs
movs
pop
add
pop
icebp
(bad)
(bad)
push
or
shl
in
mov
aaa
ds
cmp
test
pop
mov
or
cs
daa
sbb
shl
pop
add
and
lahf
xchg
dec
cmp
xor
and
(bad)
inc
stc
mov
scas
jne
dec
mov
cmp
xchg
or
ror
(bad)
inc
pop
dec
push
ss
dec
pushf
shl
stos
xor
sbb
xchg
add
sbb
pop
jne
fdivr
pop
jo
sahf
fst
arpl
inc
and
mov
rol
retf
add
pusha
or
fwait
bound
aaa
call
add
jl
dec
sar
push
fsub
bound
dec
inc
jmp
pusha
das
sub
ds
and
dec
nop
sbb
pusha
(bad)
jl
cmp
push
ss
pop
jmp
inc
or
in
sub
xor
dec
lock
add
mov
mov
or
jbe
ret
stos
enter
call
cmp
jb
cmp
dec
fisubr
inc
and
inc
cmp
pop
in
xchg
cld
jmp
jge
inc
or
add
inc
and
leave
pop
dec
cld
(bad)
(bad)
inc
rsm
cmp
sbb
fwait
jae
fisubr
ins
in
push
les
repz
stos
sbb
es
dec
dec
in
(bad)
sbb
fdivr
inc
out
jecxz
dec
xor
and
jge
int
lods
sub
clc
xchg
cld
adc
(bad)
(bad)
jmp
loopne
test
add
and
fstp
add
loopne
scas
lods
mov
ficom
xor
push
test
inc
(bad)
(bad)
inc
xchg
sbb
scas
cdq
(bad)
cwde
jb
test
(bad)
mov
jmp
cmp
jmp
je
push
sbb
dec
mov
xor
adc
std
lea
loopne
mov
add
cmp
call
(bad)
(bad)
(bad)
call
fsubrp
sub
inc
mov
sahf
call
and
add
inc
adc
dec
jmp
repnz
jmp
pusha
sub
jmp
lods
adc
push
mov
ror
inc
clc
or
call
(bad)
(bad)
jmp
ret
add
add
into
mov
and
fs
sub
(bad)
(bad)
call
test
loopne
clc
dec
cmp
mov
lock
mov
sub
or
dec
add
add
mov
out
cli
ja
add
jmp
fisubr
lods
sbb
add
mov
inc
adc
fsubr
dec
push
sti
sub
push
(bad)
cmps
ins
push
xchg
mov
adc
shl
cmps
js
je
inc
repnz
xor
mov
xor
jns
or
out
adc
or
add
(bad)
jg
dec
or
lahf
cmp
cmp
jo
add
pop
sub
cmp
sbb
jmp
sti
idiv
fwait
or
inc
sub
mov
pop
adc
mov
dec
mov
sub
jmp
retf
dec
pop
mov
pusha
add
pop
lock
stos
pop
pusha
rol
cmp
jle
push
sbb
les
(bad)
sbb
call
(bad)
mov
test
in
sub
add
mov
dec
es
(bad)
je
or
cmp
ret
fs
call
ret
dec
adc
in
sub
xor
sbb
(bad)
(bad)
(bad)
dec
mov
sub
mov
iret
jmp
pop
ficom
mov
mov
add
jns
aas
and
sub
mov
daa
inc
in
push
sbb
sub
push
sbb
add
(bad)
xor
pop
ror
inc
ret
jns
push
sbb
shl
js
push
or
push
ins
jmp
nop
repnz
mov
cmp
dec
repnz
outs
(bad)
(bad)
call
xchg
xor
pushf
retf
mov
js
mov
mov
cmp
sub
ret
(bad)
inc
inc
lock
js
cmp
sbb
xor
mov
lock
fsub
dec
leave
dec
jmp
inc
push
push
fcom
add
sbb
mov
in
add
jmp
cmps
mov
call
mov
xor
jbe
std
jmp
pop
sub
lock
or
inc
or
ret
pop
sub
stos
push
test
or
sti
(bad)
(bad)
call
adc
sub
add
mov
pop
add
and
mov
aas
cmps
cmp
(bad)
(bad)
(bad)
jmp
retf
movs
and
dec
mov
push
cli
test
mov
outs
shr
and
arpl
pop
aam
popa
cs
jge
cli
(bad)
inc
jmp
lea
mov
add
mov
adc
retf
into
push
inc
outs
sub
idiv
(bad)
(bad)
(bad)
mov
loopne
adc
mov
test
sbb
adc
shl
fs
cmp
ret
shl
pop
mov
xchg
mov
inc
push
or
ss
push
lock
or
clc
xlat
(bad)
jmp
mov
iret
fild
data16
xor
stos
(bad)
jmp
inc
jne
dec
and
mov
pop
sub
neg
mov
lds
dec
and
(bad)
dec
or
sub
retf
push
or
cwde
mov
and
xchg
inc
sub
xchg
rcl
out
iret
loope
out
cmp
(bad)
push
rcr
cmp
or
push
popa
push
jg
(bad)
inc
adc
loopne
out
or
add
xor
cmp
retf
(bad)
fcomip
jmp
cs
add
in
cmp
inc
dec
push
ins
not
cmp
repz
out
sub
jmp
iret
inc
lds
mov
jae
adc
popa
adc
out
(bad)
(bad)
jg
inc
int3
sahf
out
test
mov
mov
fimul
mov
les
mov
mov
popa
sub
sub
(bad)
push
cwde
push
push
or
loope
dec
arpl
inc
cmps
cmp
(bad)
xchg
inc
ss
call
cld
inc
cmp
pop
sbb
sbb
or
mov
ret
cmp
push
shr
aad
add
aad
dec
shl
mov
jg
ds
cmp
pop
fidivr
mov
imul
adc
push
icebp
es
mov
dec
cmp
adc
repnz
call
ret
mov
in
(bad)
(bad)
(bad)
(bad)
je
mov
add
not
clc
adc
push
imul
add
imul
jne
inc
aam
(bad)
(bad)
dec
and
dec
add
sub
stos
pusha
inc
shl
inc
sub
mov
test
jge
or
loopne
inc
js
xchg
push
dec
clc
sbb
scas
sar
cmp
adc
xchg
movs
add
add
pusha
inc
mov
sbb
inc
sub
(bad)
(bad)
push
iret
shl
push
mov
imul
mov
push
xor
or
pop
cli
or
dec
dec
adc
lahf
test
cmp
fdiv
fdiv
pop
mov
push
add
mov
jmp
xchg
or
sub
cwde
add
jnp
inc
sbb
or
mov
(bad)
rcl
cmp
mov
push
xchg
es
(bad)
jmp
jbe
lds
ss
pushf
test
mov
cmp
(bad)
(bad)
(bad)
fcmovb
inc
and
sar
mov
sbb
mov
into
dec
pop
adc
js
fmul
(bad)
(bad)
inc
jge
in
cmp
daa
push
fild
xchg
pop
sub
pop
inc
add
jne
cmp
imul
test
dec
into
fcom
fcomp
pop
icebp
or
pop
jmp
inc
(bad)
mov
jmp
dec
jmp
lea
jmp
(bad)
(bad)
sbb
mov
dec
inc
or
add
inc
inc
ja
sbb
(bad)
jmp
pop
movs
adc
jge
call
rcr
pop
mov
stos
inc
sbb
inc
and
jl
mov
mov
pop
sub
ror
xor
or
rcl
adc
dec
mov
lock
jmp
xor
mov
cmp
or
sub
(bad)
fld
inc
and
adc
jle
test
push
mov
lea
push
dec
xor
add
adc
jmp
(bad)
(bad)
aas
push
in
sub
dec
sub
inc
jmp
cmp
(bad)
(bad)
jg
or
adc
adc
sub
in
(bad)
cmps
push
icebp
or
mov
(bad)
(bad)
jg
add
mov
xchg
fwait
(bad)
mov
(bad)
and
pop
fs
loop
xlat
mov
cmp
daa
fdivrp
(bad)
(bad)
push
mov
dec
sub
test
mov
jmp
lods
xlat
test
cmp
adc
je
inc
inc
jb
in
add
mov
adc
push
(bad)
nop
mov
arpl
push
and
lods
xchg
dec
cdq
sub
rcl
lods
or
jmp
jns
cmp
outs
cmp
or
sbb
push
je
es
outs
(bad)
(bad)
(bad)
call
adc
hlt
xor
ds
cmp
daa
sbb
mov
cmp
sar
pop
aad
clc
scas
jmp
les
movs
and
lock
lods
mov
cmp
jmp
imul
dec
jb
repnz
push
test
or
loopne
mov
add
(bad)
inc
iret
inc
jecxz
dec
sbb
gs
ins
sub
rcr
jg
(bad)
(bad)
mov
sub
imul
mov
iret
and
sbb
mov
(bad)
(bad)
(bad)
jmp
iret
inc
adc
mov
inc
dec
pop
stos
xor
mov
(bad)
(bad)
(bad)
inc
xchg
arpl
shr
loope
mov
scas
dec
push
add
loopne
sub
lea
or
les
push
dec
in
ficom
or
loopne
std
sub
movs
cmc
dec
add
fdiv
dec
cmp
dec
lea
pop
dec
sti
add
jmp
das
fisubr
cs
rcr
faddp
mov
cmp
cmp
call
or
imul
jmp
rol
pop
pop
mov
fcom
push
nop
shl
add
inc
add
loopne
inc
sub
test
fnsave
dec
add
imul
sbb
(bad)
(bad)
mov
ficomp
mov
lods
push
push
jae
popf
std
xchg
mov
sbb
lds
add
pop
xchg
adc
hlt
(bad)
in
(bad)
jl
jnp
js
xor
and
clc
mov
loopne
jg
sub
add
push
std
call
jge
adc
outs
ss
jge
or
lea
ins
cmp
int3
mov
sbb
retf
pop
outs
mov
fiadd
mov
inc
jb
call
lock
dec
or
mov
psllq
and
rol
fdivr
or
(bad)
call
mov
cmps
in
sub
mov
fwait
and
inc
sar
mov
xor
test
xchg
scas
dec
push
std
(bad)
inc
(bad)
xor
xor
pop
mov
(bad)
test
lea
(bad)
push
dec
xor
(bad)
or
adc
lods
fnsave
arpl
pop
jo
test
mov
pop
add
jmp
mov
loop
sti
push
cs
or
(bad)
(bad)
push
and
cmps
test
ins
add
add
inc
xchg
inc
add
add
call
outs
xor
adc
outs
je
push
inc
(bad)
jg
jmp
dec
dec
add
dec
mov
sbb
je
test
mov
shl
dec
jne
stos
(bad)
cmp
dec
inc
outs
jmp
mov
or
(bad)
(bad)
out
(bad)
push
or
call
jo
int
enter
jb
dec
push
lock
inc
call
and
call
xchg
repnz
(bad)
sahf
dec
lfs
(bad)
fcomip
push
sahf
(bad)
mov
test
(bad)
imul
and
and
dec
dec
ret
hlt
inc
pop
xchg
pop
repz
and
cmp
inc
enter
mov
or
add
bound
xchg
push
or
sub
ins
or
sub
retf
xchg
(bad)
jg
mov
ss
cdq
jnp
dec
adc
pop
cmp
stos
and
mov
(bad)
(bad)
jle
cmp
ds
fld
icebp
add
and
and
sbb
xor
shl
add
jmp
shl
mov
sti
fadd
jae
or
cmps
imul
or
fiadd
pusha
dec
inc
(bad)
les
ror
add
aam
push
push
jb
mov
(bad)
jg
mov
mov
push
js
add
sar
xchg
enter
xor
push
std
push
xor
or
mov
mov
frstor
shl
(bad)
inc
inc
and
ins
push
sbb
test
add
mov
xchg
scas
(bad)
(bad)
(bad)
call
ds
or
dec
pusha
jo
stos
adc
inc
add
cld
retf
inc
push
aas
idiv
sbb
(bad)
(bad)
js
add
push
adc
sub
leave
xchg
scas
inc
adc
push
mov
aaa
ret
cli
(bad)
dec
or
ins
arpl
jge
js
sbb
or
pop
fist
cld
push
out
inc
stc
mov
mov
sub
(bad)
jg
lds
je
cli
outs
test
sbb
add
inc
inc
arpl
xchg
enter
inc
xchg
iret
add
mov
ret
pop
out
cli
(bad)
push
sbb
hlt
jecxz
pop
xor
inc
jg
or
into
jnp
inc
sbb
sbb
mov
cmp
push
jne
dec
rcl
std
outs
xchg
out
(bad)
(bad)
jg
in
pushf
cs
push
int
cmp
cmp
ins
aad
xor
cwde
in
cmp
div
outs
cli
repnz
ret
ds
pop
xchg
mov
or
mov
lods
(bad)
(bad)
(bad)
push
or
(bad)
sbb
and
fadd
adc
nop
imul
pop
call
cli
or
and
sar
push
out
cmp
push
push
les
(bad)
(bad)
call
paddsw
movs
ficomp
jns
cmp
jmp
dec
ds
daa
cmp
cwde
jmp
movs
(bad)
(bad)
(bad)
inc
push
fimul
sub
adc
and
inc
push
add
jle
or
or
jle
call
push
push
or
inc
test
aaa
jno
into
inc
outs
repnz
mov
cmp
and
sub
mov
into
in
add
mov
inc
in
cmp
(bad)
(bad)
out
push
repnz
add
repnz
lods
mov
push
adc
cmp
gs
xor
pop
or
je
js
cmp
add
loopne
(bad)
jg
mov
xor
jo
sbb
cmp
add
cmps
dec
enter
mov
xor
ror
push
lods
iret
aam
sub
sub
nop
xchg
adc
and
push
sbb
inc
test
test
dec
dec
fadd
xchg
idiv
add
ror
lods
cld
push
push
stos
aam
je
dec
in
pushf
add
ds
(bad)
(bad)
mov
scas
inc
or
sub
lock
add
and
dec
or
inc
jmp
je
mov
mul
mov
or
mov
mov
inc
cmp
mov
frndint
sbb
(bad)
(bad)
(bad)
call
lea
pop
sahf
retf
pushf
xchg
(bad)
jge
adc
mov
push
es
test
pop
dec
(bad)
(bad)
mov
jl
jp
mov
jbe
mov
push
push
and
push
jns
mov
or
jmp
jp
rcr
je
lds
sub
(bad)
(bad)
(bad)
fimul
loope
test
and
and
aad
and
jo
pushf
add
(bad)
(bad)
(bad)
mov
jle
mov
sub
push
fcom
add
call
pusha
xor
shr
cmp
clc
mov
int
iret
fldcw
xor
jmp
add
movs
iret
(bad)
(bad)
(bad)
fcomip
das
jmp
test
sbb
pushf
cmp
retf
dec
jo
sub
or
fstp
imul
scas
jle
pop
movs
mul
inc
add
popf
xor
ret
loopne
dec
das
add
stos
adc
xchg
jp
(bad)
(bad)
jmp
imul
push
dec
clc
(bad)
adc
sbb
sub
or
pusha
movs
inc
xor
loope
aaa
jecxz
jp
sub
loopne
es
sbb
(bad)
rol
adc
(bad)
(bad)
(bad)
fidivr
xchg
cmovnp
fimul
lods
and
mov
sar
sbb
add
jo
sbb
(bad)
jmp
dec
aas
adc
add
xor
adc
outs
add
outs
outs
dec
cmp
cmp
mov
fadd
cmp
mov
jne
adc
or
or
xor
neg
pushf
in
mov
inc
and
pop
lock
out
or
mov
pushf
push
push
nop
mov
aam
mov
das
mov
mov
xchg
xchg
inc
dec
pop
or
dec
and
sub
dec
(bad)
(bad)
jmp
sbb
idiv
xor
dec
inc
aaa
or
inc
sbb
(bad)
lock
(bad)
call
shl
sbb
push
add
rol
mov
mov
xor
adc
and
js
pop
push
dec
mov
icebp
jle
inc
cmp
sub
sahf
(bad)
fist
mov
test
xor
outs
out
rol
jl
out
enter
repnz
aaa
mov
addr16
out
mov
pop
leave
cmp
sbb
out
and
(bad)
(bad)
inc
mov
xchg
aam
enter
sub
add
scas
iret
inc
xor
leave
xor
pop
inc
inc
(bad)
(bad)
jmp
jle
mov
retf
jns
ins
lods
push
pop
xor
mov
(bad)
(bad)
(bad)
call
stos
pusha
pcmpgtd
shl
add
ja
lock
shl
enter
push
sbb
es
(bad)
(bad)
inc
jb
push
leave
cdq
retf
xchg
and
or
cmps
scas
loopne
test
not
dec
jge
add
pop
jmp
xor
pusha
icebp
add
and
xor
mov
(bad)
(bad)
(bad)
lea
and
ret
and
lock
inc
loope
push
mov
retf
jmp
out
jbe
(bad)
(bad)
(bad)
jmp
imul
push
fcomp
jb
dec
gs
dec
mov
fadd
xchg
mov
and
stos
mov
jg
imul
fist
mov
sub
jg
add
dec
rol
sbb
and
mov
jg
adc
cmp
sub
sahf
test
add
(bad)
(bad)
call
mov
aaa
add
sbb
popa
jg
add
loopne
or
mov
sub
add
mov
dec
shl
inc
cmp
loopne
movs
cld
xor
jb
or
push
dec
data16
out
jmp
sub
(bad)
(bad)
(bad)
(bad)
jmp
test
int3
nop
into
popa
sub
add
add
ret
inc
loopne
call
movs
adc
add
inc
(bad)
repz
fucomp
(bad)
xlat
aaa
test
rcr
(bad)
call
and
shr
xor
inc
fimul
ss
pusha
sub
sar
(bad)
push
(bad)
or
ds
fcom
jmp
cs
sub
leave
hlt
nop
mov
add
jg
jg
ret
call
sbb
popf
in
push
adc
jp
mov
xor
out
push
adc
sbb
push
xchg
jbe
popa
adc
dec
sub
xor
pop
(bad)
or
xlat
retf
jbe
mov
std
es
(bad)
(bad)
(bad)
call
mov
push
scas
dec
sbb
sti
(bad)
loope
sbb
retf
cmp
add
jg
(bad)
call
add
or
les
into
add
test
(bad)
(bad)
(bad)
dec
xor
push
jmp
cmp
imul
stc
leave
dec
imul
fmul
(bad)
(bad)
jmp
push
dec
xchg
xchg
imul
and
add
add
push
push
pop
test
jge
mov
(bad)
(bad)
(bad)
jmp
mov
and
retf
lea
sti
mov
sbb
je
push
(bad)
xchg
xchg
(bad)
(bad)
(bad)
jmp
inc
xchg
xor
mov
xor
and
xor
jne
mov
sub
(bad)
(bad)
(bad)
call
mov
sahf
retf
test
sbb
xchg
add
add
dec
pop
aaa
push
adc
(bad)
(bad)
fild
sbb
outs
ja
jo
add
neg
sub
push
sub
dec
(bad)
stc
sbb
icebp
jmp
or
aaa
add
add
nop
(bad)
(bad)
call
(bad)
dec
(bad)
push
pusha
stos
dec
cmp
cwde
add
movs
push
sub
(bad)
(bad)
jmp
scas
dec
xor
loope
sar
or
(bad)
ret
cmp
sub
hlt
jbe
scas
ss
xor
rcr
mov
cwde
lods
shl
pop
inc
loope
push
jbe
fiadd
jmp
idiv
add
jo
(bad)
push
pop
sub
hlt
inc
jo
or
add
enter
cmp
or
cmp
pop
ret
clc
call
aam
push
mov
or
xor
(bad)
(bad)
call
jns
stc
or
push
and
je
xchg
nop
dec
push
add
pop
sbb
es
cmp
(bad)
inc
cmp
arpl
ds
pop
jl
mov
xchg
cmp
adc
jg
clc
cmp
inc
sub
repnz
xchg
add
dec
and
sar
cmp
xor
icebp
push
and
sbb
fdiv
lods
cmp
xor
inc
or
inc
cmps
inc
scas
pop
ret
lods
dec
lea
sub
pusha
outs
add
movs
fist
inc
mov
mov
enter
sti
inc
into
jb
sub
out
mov
cmps
(bad)
(bad)
(bad)
call
(bad)
cmp
lods
mov
add
xchg
(bad)
xor
je
pop
add
pop
cmp
test
nop
pop
ja
cmp
mov
inc
cmp
out
addr16
out
ror
xchg
ds
xchg
out
jno
mov
dec
sbb
jp
and
fst
out
mov
add
cmp
(bad)
inc
jecxz
gs
jp
jne
fld
adc
and
mov
mov
dec
mov
inc
cmps
scas
or
xchg
in
je
outs
pop
(bad)
(bad)
(bad)
dec
push
cmp
or
cmp
jne
add
xchg
inc
mov
cmps
std
leave
sbb
add
(bad)
inc
dec
call
adc
pop
call
xor
lock
jg
fdiv
mov
sbb
jne
jle
or
aam
jne
mov
push
inc
adc
fdiv
jno
pop
xlat
lods
imul
loope
das
cmps
pop
pusha
(bad)
(bad)
(bad)
call
repnz
ds
retf
and
mov
or
rcr
xor
pop
cmps
hlt
in
cmp
or
and
lea
inc
enter
mov
sbb
(bad)
call
in
pop
jl
lods
dec
mov
or
cmp
aaa
(bad)
dec
cmp
inc
mov
and
or
xchg
mov
call
push
adc
add
imul
and
(bad)
(bad)
push
inc
mov
test
cmp
test
dec
and
jge
rol
in
enter
inc
mov
and
imul
push
jmp
shr
sar
jmp
outs
cld
jne
inc
mov
sbb
lea
aad
dec
add
sti
jmp
(bad)
(bad)
dec
or
jbe
sub
mov
ins
and
or
or
rol
lock
mov
dec
sbb
inc
xor
jmp
je
jge
push
(bad)
(bad)
(bad)
push
push
add
dec
jg
adc
mov
or
push
push
dec
movs
and
loop
(bad)
call
add
clc
mov
int3
nop
mov
sbb
mov
cmp
shl
(bad)
mov
fucomi
add
imul
cmp
loopne
sub
cmp
inc
pop
ss
(bad)
jmp
shl
ds
or
cmp
jne
fcomp
pop
aad
cmps
fwait
sub
test
inc
adc
les
dec
mov
cmp
mov
rol
(bad)
(bad)
(bad)
jmp
sar
lock
mov
jns
push
or
push
clc
out
or
pop
push
or
pusha
or
add
in
sar
dec
inc
pop
outs
sbb
jmp
(bad)
icebp
loop
inc
add
ins
add
in
inc
(bad)
jg
add
sub
retf
inc
dec
sub
stc
cmp
ror
sbb
(bad)
(bad)
jmp
mov
ins
or
cmp
je
mov
lds
cli
ja
inc
adc
jg
push
mov
push
jp
aad
es
sub
(bad)
clc
mov
inc
pushf
loopne
test
leave
add
jmp
test
sub
push
(bad)
bound
mov
cmp
ss
imul
(bad)
(bad)
(bad)
jg
sbb
stc
aas
stc
sub
movs
ds
adc
push
pop
xchg
inc
or
call
xchg
out
push
sbb
mov
sbb
shl
add
shr
clc
movs
push
psubb
push
loopne
movs
push
jmp
adc
outs
mov
nop
call
aas
(bad)
(bad)
(bad)
(bad)
fcomp
or
into
cs
idiv
adc
pop
ret
adc
dec
push
add
aaa
(bad)
jmp
cli
rcl
add
add
das
jae
or
nop
(bad)
(bad)
(bad)
jmp
(bad)
in
es
sbb
out
arpl
xchg
add
stc
add
sub
pop
hlt
(bad)
jg
adc
push
sar
xlat
popf
mov
in
mov
pop
(bad)
call
imul
cmc
out
cmp
jge
dec
daa
xchg
(bad)
(bad)
(bad)
(bad)
jns
add
jo
cmp
pop
xchg
dec
lahf
mov
or
pop
pusha
ja
pusha
ins
sbb
adc
pop
add
xor
in
cld
or
(bad)
add
and
(bad)
(bad)
inc
xor
and
push
and
xor
dec
xor
ror
(bad)
pop
and
adc
(bad)
(bad)
(bad)
fisttp
cmp
cmp
adc
pushf
and
dec
sub
sbb
add
dec
retf
add
lock
add
(bad)
(bad)
jmp
fild
adc
sti
jb
inc
push
push
stos
ret
or
pop
add
data16
push
(bad)
(bad)
dec
test
adc
out
ficomp
sbb
div
aad
pop
cld
(bad)
cmp
rcl
xor
movs
sub
xchg
pushf
xchg
add
ret
(bad)
(bad)
(bad)
jmp
or
and
jno
popa
jmp
scas
cmp
mov
fst
mov
(bad)
(bad)
(bad)
jmp
push
dec
retf
out
aaa
test
mov
stc
pop
in
cmp
ret
pusha
xchg
jns
ja
(bad)
cmp
outs
loop
or
call
cmp
mov
pop
adc
mov
sbb
add
push
loopne
cld
aam
cld
inc
call
gs
enter
lods
pop
push
inc
mov
loope
cmps
clc
adc
pop
dec
inc
mov
in
test
out
and
call
sar
cmp
jb
add
je
xchg
out
out
add
(bad)
(bad)
dec
or
cdq
imul
or
retf
add
repz
aam
rcr
jno
(bad)
dec
aam
xchg
icebp
dec
cmp
les
mov
pop
push
add
jmp
pop
es
movs
add
std
sar
mov
outs
(bad)
(bad)
(bad)
inc
mov
mov
in
ja
pop
lock
xor
and
jno
adc
stos
mov
adc
stc
jne
mov
clc
(bad)
(bad)
dec
add
aas
add
clc
push
cmp
mov
sbb
and
sbb
xchg
sub
jbe
in
adc
push
(bad)
(bad)
fcomip
sub
and
adc
adc
and
nop
mov
inc
rol
(bad)
(bad)
(bad)
call
mov
xor
dec
mov
add
pop
push
push
mov
push
or
dec
(bad)
(bad)
(bad)
(bad)
call
(bad)
nop
jo
loop
loopne
add
sub
sub
jmp
dec
aaa
dec
xor
add
cmp
not
add
inc
mov
pop
pop
inc
push
(bad)
(bad)
(bad)
(bad)
jl
aas
jp
rol
(bad)
shl
jg
jno
addr16
xchg
js
mov
test
pop
movs
adc
xchg
sar
push
call
bswap
inc
imul
ficom
hlt
inc
xor
ret
xchg
xchg
test
jno
(bad)
(bad)
push
cmp
jl
mov
cs
out
lds
and
fidivr
(bad)
(bad)
jg
cmp
es
xor
or
and
sbb
mov
mov
mov
xchg
outs
pop
pop
ret
test
test
or
repz
xor
mov
clc
pop
jbe
sar
and
(bad)
call
(bad)
sub
shr
push
repnz
push
out
cmp
loopne
or
jno
dec
or
(bad)
(bad)
jmp
test
inc
inc
out
movs
jle
rol
(bad)
dec
ret
xchg
imul
xor
mov
xor
(bad)
(bad)
jmp
stc
or
mov
dec
pop
jge
add
std
sbb
popa
xchg
call
dec
inc
cmps
into
(bad)
(bad)
jb
mov
test
dec
jae
xchg
loopne
xchg
or
jle
sub
or
jmp
jmp
scas
mov
scas
cli
jmp
mov
sbb
xchg
cli
add
inc
pop
lock
adc
cld
add
pop
adc
xor
push
fsubr
jns
jb
loop
or
into
mov
mov
aaa
push
out
cmp
xor
(bad)
sbb
add
jmp
mov
(bad)
(bad)
dec
xor
sub
loopne
lock
jge
xlat
xchg
mov
adc
push
or
jns
push
adc
scas
dec
sbb
sub
adc
jg
add
(bad)
add
loopne
(bad)
sbb
xor
adc
mov
jmp
sub
sub
(bad)
jmp
fld
movs
add
test
(bad)
call
push
ficom
call
push
push
inc
dec
jo
jmp
mov
xchg
or
xor
cmp
imul
pop
and
(bad)
stc
aam
pop
sbb
je
xchg
dec
sub
call
dec
lock
sbb
push
out
cli
call
dec
arpl
inc
jmp
pop
js
and
pop
dec
inc
rcl
loope
(bad)
jmp
stc
cmp
mov
jmp
ds
gs
out
data16
and
sar
fst
pop
call
push
xor
xor
push
movs
add
adc
adc
ss
inc
mov
(bad)
(bad)
(bad)
(bad)
mov
cmp
test
mov
xchg
test
or
std
jb
inc
jmp
clc
adc
(bad)
fcomip
jnp
and
shr
pop
pop
sbb
push
movs
mov
mov
push
mov
add
push
movs
loop
xor
aaa
movs
fld
mov
(bad)
(bad)
jmp
cmp
sub
into
jmp
jl
je
(bad)
(bad)
(bad)
call
enter
mov
mov
sub
inc
inc
dec
aam
add
(bad)
cmp
ret
cdq
or
adc
(bad)
pop
inc
dec
and
inc
pop
clc
inc
jmp
jmp
add
or
adc
cs
and
inc
sbb
xchg
test
imul
retf
call
jno
sub
(bad)
(bad)
call
inc
fstp
in
loopne
jge
cmp
inc
lds
mov
shl
mov
adc
or
cmp
jnp
je
pop
(bad)
(bad)
out
cli
adc
jae
pop
jle
mov
in
or
inc
pop
cli
int
adc
lock
(bad)
inc
adc
mov
adc
dec
aad
add
(bad)
mov
ret
sbb
neg
or
jmp
cs
dec
int
fiadd
mov
(bad)
(bad)
(bad)
jmp
inc
loopne
mov
or
hlt
add
push
mov
mov
loop
mov
movapd
push
in
iret
(bad)
(bad)
(bad)
push
(bad)
fdiv
cmpps
add
call
jp
or
(bad)
(bad)
(bad)
dec
data16
jle
int
(bad)
in
push
xchg
dec
cmp
shl
sti
sar
(bad)
dec
push
jle
push
shr
pop
dec
mov
push
jecxz
rcl
stc
jbe
mov
(bad)
call
ficom
add
fimul
retf
ds
add
(bad)
(bad)
(bad)
out
int3
aaa
loope
fiadd
out
pop
ret
rcl
sub
cmp
cmp
sbb
call
xchg
add
arpl
jg
inc
dec
add
or
jle
(bad)
(bad)
dec
outs
fs
das
rcr
push
fistp
scas
mov
jge
or
outs
(bad)
dec
xchg
loope
mov
pusha
shl
dec
dec
addr16
mul
ss
mov
inc
dec
or
outs
xor
imul
daa
(bad)
(bad)
mov
jb
jg
mov
push
pop
call
jmp
lock
mov
dec
out
leave
push
sar
cmp
push
lds
ret
dec
aam
rcr
jbe
xchg
aaa
jg
sti
push
push
adc
jg
iret
sbb
test
mov
stc
pop
adc
cmp
dec
sar
or
jmp
sar
xchg
jecxz
or
(bad)
jmp
inc
cdq
jecxz
aaa
sub
vfmadd231sd
push
nop
cmp
dec
mov
(bad)
(bad)
(bad)
push
and
jae
outs
fild
add
repnz
xchg
cmp
push
or
xchg
push
in
fist
inc
or
or
adc
(bad)
jmp
dec
push
or
lock
nop
fiadd
jne
jns
mov
movs
and
in
(bad)
(bad)
inc
cmp
adc
adc
xor
out
sbb
sbb
into
and
jns
push
and
test
sbb
pop
mov
push
jo
pop
sar
(bad)
cmp
das
imul
rcr
mov
cmc
aaa
inc
jb
ins
sub
mov
sub
add
cs
xor
(bad)
push
push
retf
outs
fst
mov
pop
les
mov
xchg
int3
stc
loopne
cmp
stos
(bad)
(bad)
dec
and
xchg
and
push
into
sti
add
add
xor
outs
ds
(bad)
(bad)
(bad)
call
jmp
sbb
test
les
test
mov
adc
(bad)
adc
adc
cmps
push
cs
cld
(bad)
mov
ins
ret
das
in
fsub
or
(bad)
dec
movs
movs
aas
lea
jo
xor
add
stc
mov
sbb
(bad)
(bad)
push
sbb
pop
jp
push
stos
adc
pop
or
add
das
sti
xlat
pop
cmp
add
push
sub
mov
cmps
(bad)
(bad)
cmp
(bad)
lock
cmp
cmc
and
adc
lahf
imul
(bad)
(bad)
jmp
and
add
mov
push
out
int3
iret
sbb
push
das
(bad)
call
lods
mov
xchg
(bad)
fs
or
jne
mov
mov
(bad)
call
add
js
inc
push
add
pop
pusha
push
adc
push
nop
mov
(bad)
jmp
js
xchg
add
jns
rol
and
and
sub
clc
inc
or
in
and
cmps
(bad)
push
cld
arpl
into
mov
retf
lods
and
stc
mov
sub
dec
mov
shl
lahf
outs
jmp
cmp
and
jp
sbb
(bad)
mov
xchg
add
or
sar
aaa
cld
xor
test
xchg
js
(bad)
sub
dec
push
fdivr
(bad)
out
call
cmp
and
add
xor
ins
add
(bad)
(bad)
dec
cmps
mov
jmp
inc
push
jmp
or
jns
jl
(bad)
(bad)
mov
push
jmp
(bad)
jnp
dec
mov
xchg
ret
mov
mov
or
(bad)
(bad)
call
jmp
js
lds
nop
retf
(bad)
retf
imul
rcl
lock
out
or
dec
out
push
gs
push
lds
or
pop
aad
dec
sub
les
addr16
xchg
adc
test
les
rol
outs
aam
sar
mov
out
jb
sbb
int3
push
cld
pop
xor
inc
cdq
call
add
jg
call
jbe
lods
jmp
dec
lahf
fcomp
test
inc
call
or
(bad)
(bad)
(bad)
cmp
pusha
mov
xchg
cmc
push
push
test
rcr
push
pushf
adc
lods
rcl
(bad)
(bad)
dec
inc
les
xchg
popf
daa
in
sub
data16
push
jns
movs
xchg
pop
leave
sbb
dec
or
add
test
adc
in
lock
push
inc
faddp
and
sbb
into
jge
xchg
js
and
mov
pop
test
push
mov
mov
push
stos
icebp
call
dec
xor
add
imul
imul
or
iret
mov
jmp
xlat
loope
jmp
pop
xor
bound
hlt
and
sbb
jmp
call
add
nop
clc
mov
dec
mov
inc
push
mov
jg
std
(bad)
and
(bad)
call
push
mov
push
push
ret
mov
ins
inc
adc
mov
push
sub
add
enter
in
scas
dec
rol
rcr
arpl
push
inc
mov
scas
sub
sti
push
adc
add
mov
ss
add
dec
add
pop
clc
(bad)
(bad)
inc
lock
hlt
lea
cmp
jl
adc
call
test
sub
pusha
(bad)
cmp
arpl
add
popa
mov
add
cli
(bad)
call
out
dec
mov
loop
ror
xchg
sbb
and
(bad)
(bad)
push
jb
das
xor
mov
push
add
inc
dec
in
adc
ds
and
sub
data16
add
(bad)
push
inc
mov
add
retf
cmc
dec
xor
xor
ret
mov
add
sub
mov
outs
jg
stc
clc
fwait
hlt
jo
in
cmp
in
fwait
jg
sub
cdq
push
adc
mov
call
inc
dec
xchg
data16
mov
mov
lock
scas
push
cwde
dec
add
mov
pop
sar
add
xlat
mov
les
sub
(bad)
jmp
lods
retf
daa
add
(bad)
or
cld
pop
mov
imul
out
fcomip
scas
push
dec
xlat
ss
(bad)
and
jbe
cmp
xchg
(bad)
(bad)
jmp
pop
push
inc
call
adc
loope
adc
cmp
sub
push
pop
popa
jbe
mov
scas
clc
mov
inc
jne
data16
jmp
(bad)
call
ds
inc
xor
popf
int
adc
sbb
jmp
std
into
nop
sub
sbb
loope
mov
xor
mov
push
inc
sar
lods
or
mov
bnd
ins
out
inc
loope
mov
xor
jb
cmp
shl
(bad)
jmp
mov
xchg
jg
jnp
iret
test
mov
loopne
addr16
(bad)
jg
ror
mov
adc
jo
inc
imul
inc
add
imul
(bad)
(bad)
dec
pop
xor
pop
adc
inc
push
jle
shl
in
jp
cld
jmp
sub
(bad)
(bad)
jg
push
or
adc
jmp
fs
inc
cmc
(bad)
(bad)
mov
push
mov
scas
ss
rol
paddusb
inc
xchg
cld
test
cmp
aaa
mov
jmp
and
inc
std
es
call
and
pop
ins
les
dec
xchg
call
inc
scas
cli
(bad)
jmp
imul
lea
push
sub
movs
shl
mov
fs
leave
icebp
(bad)
(bad)
push
int3
popf
shr
push
cmp
sbb
pop
icebp
dec
adc
mov
jmp
and
mov
repnz
cmp
(bad)
inc
adc
(bad)
jle
sbb
iret
jne
movs
xor
sbb
sub
mov
arpl
imul
add
imul
jmp
fcmovnu
jg
in
xor
(bad)
call
add
setge
jg
or
imul
jecxz
add
mov
or
xor
(bad)
mov
inc
push
(bad)
jmp
mov
cmp
ja
pop
or
sbb
int
mov
dec
ss
(bad)
(bad)
adc
push
je
cmp
inc
cli
call
dec
mov
xchg
pop
push
pushf
stos
lea
call
jae
add
out
inc
cld
cwde
mov
cmp
shr
iret
or
(bad)
dec
ins
pop
inc
gs
and
cmc
cli
adc
or
int3
out
add
inc
shl
xor
sahf
ret
sbb
imul
mov
jg
in
adc
and
ins
pop
fwait
pop
test
mov
cmp
sar
jmp
xor
inc
pusha
or
pop
js
outs
iret
or
add
add
sub
adc
daa
gs
(bad)
shl
jmp
or
sub
(bad)
es
ss
and
cdq
clc
dec
xchg
and
sbb
cli
(bad)
call
pop
(bad)
mov
les
stos
xchg
ins
dec
fadd
sub
movs
(bad)
jmp
jb
or
or
sar
jmp
pop
sub
mov
fmul
(bad)
mov
test
push
push
lods
cmp
sub
aaa
sbb
add
lock
enter
(bad)
(bad)
(bad)
(bad)
jnp
ss
addr16
xor
neg
in
inc
call
mov
push
sub
mov
das
sar
pop
ret
shl
out
add
bound
add
cmp
(bad)
jg
ss
shr
ret
and
mov
and
(bad)
(bad)
(bad)
inc
pop
jns
mov
(bad)
adc
data16
test
inc
adc
lea
xchg
fnstsw
cmps
adc
(bad)
(bad)
inc
sahf
popa
mov
jb
dec
(bad)
loope
jmp
or
sbb
sub
mov
clc
jmp
push
imul
or
and
inc
sub
idiv
adc
xchg
ja
cmp
pusha
dec
(bad)
jg
cmc
xor
popa
pop
push
adc
movs
sti
jbe
pop
jmp
add
mov
push
and
and
or
add
(bad)
mov
fidiv
cmp
sbb
pop
mov
call
fimul
xchg
sub
call
and
fisttp
or
cmps
shr
inc
or
sbb
inc
adc
sbb
sub
mov
mov
jl
cld
sub
mov
(bad)
(bad)
call
mov
lods
dec
cmps
xor
xor
mov
or
add
jl
(bad)
call
dec
sub
add
in
clc
shl
mov
sbb
aam
mov
clc
(bad)
(bad)
call
sti
mov
add
push
xchg
imul
jmp
inc
mov
jecxz
mov
inc
imul
or
cmp
xchg
je
in
push
loopne
ret
push
add
push
mov
push
fcomp
enter
ds
(bad)
(bad)
(bad)
inc
mov
les
push
iret
test
lds
jle
sub
(bad)
push
dec
push
adc
inc
add
cmp
mov
repz
mov
push
jns
jge
int3
int
sub
jl
stos
mov
inc
xchg
pushf
(bad)
push
inc
cmp
(bad)
jg
nop
call
xor
sbb
dec
jl
xchg
inc
mov
sub
(bad)
xchg
dec
pop
nop
add
loopne
inc
xchg
and
ins
xchg
idiv
(bad)
(bad)
fcmovnu
ds
jecxz
movs
test
push
and
das
ss
pop
push
sub
xor
cld
mov
sbb
xor
(bad)
(bad)
jmp
icebp
mov
cmps
nop
enter
out
xchg
mov
sbb
xchg
and
enter
(bad)
inc
xlat
xchg
sub
fdivr
je
lods
xlat
push
imul
clc
mov
mov
and
dec
inc
cmp
loop
adc
add
or
and
and
(bad)
jmp
pop
xchg
inc
add
mov
outs
loope
mov
sub
and
or
jmp
call
jl
xchg
dec
mov
inc
and
push
cld
(bad)
jmp
jno
push
push
pop
rol
ins
xchg
movs
pop
arpl
or
rol
scas
xor
lea
pop
retf
fidiv
fiadd
cmp
retf
adc
sub
(bad)
aas
jae
(bad)
wbinvd
sub
shr
(bad)
call
stos
pop
into
(bad)
mov
jno
sub
dec
out
adc
add
pop
(bad)
(bad)
(bad)
mov
inc
adc
inc
adc
sbb
repz
sar
je
mov
rcl
dec
pop
hlt
(bad)
push
mov
ja
mov
(bad)
pop
pop
push
imul
(bad)
(bad)
call
loop
mov
add
pop
mov
(bad)
into
and
and
ins
dec
ds
xor
addr16
ror
jp
aad
add
hlt
push
pop
and
ins
dec
inc
dec
and
je
clc
cs
addr16
lock
dec
loopne
sub
aas
dec
pushf
pop
pop
mov
pop
jge
inc
cld
(bad)
fbld
cmps
mov
adc
dec
cs
repnz
(bad)
(bad)
jg
je
dec
xor
test
add
push
xor
lods
js
push
dec
sar
inc
sbb
enter
ins
or
lods
stos
push
pop
xlat
(bad)
push
and
test
or
jnp
jmp
xchg
jg
or
inc
cmp
jl
jne
loopne
pop
int
and
ins
nop
retf
jnp
aam
(bad)
(bad)
inc
sub
jns
jp
dec
arpl
jb
ins
jbe
mov
adc
int
enter
mov
sbb
outs
lods
jg
mov
dec
ja
push
mov
out
loope
dec
xchg
push
in
inc
jmp
sbb
add
sbb
ret
es
(bad)
(bad)
jmp
nop
clc
lea
inc
sahf
fnstenv
add
adc
xor
inc
cs
or
(bad)
(bad)
dec
enter
jmp
dec
lods
mov
cld
jae
add
sahf
dec
adc
movs
xchg
xchg
jmp
pop
dec
push
sub
or
test
(bad)
sub
shl
and
pop
add
stos
pop
jp
mov
and
adc
sbb
push
popa
push
mov
(bad)
jg
dec
js
js
xchg
ror
jecxz
jbe
aam
cmps
(bad)
mov
dec
cmp
(bad)
(bad)
(bad)
jge
sbb
loopne
divps
pop
xchg
or
and
dec
ds
loopne
mov
(bad)
(bad)
inc
call
rcl
movs
mov
push
sub
cmp
and
(bad)
(bad)
cmp
dec
xor
sub
fmul
ror
and
cmps
adc
cmovb
bound
(bad)
sbb
(bad)
(bad)
jg
pop
js
fimul
call
sub
ds
mov
lods
test
xchg
pop
cmc
xchg
test
and
bound
ins
push
lds
movs
(bad)
fs
(bad)
(bad)
dec
(bad)
and
fld
div
jmp
movs
xchg
test
out
jmp
(bad)
(bad)
(bad)
jmp
fidivr
loopne
pop
add
sub
cmp
inc
and
sub
pusha
xor
jne
sbb
iret
sbb
aam
lock
push
xor
xchg
retf
rol
adc
xor
pop
cmps
(bad)
mov
sub
xor
ret
retf
mov
test
out
jmp
push
sar
(bad)
(bad)
call
test
pop
cmp
adc
pop
shl
jmp
mov
ror
call
mov
or
(bad)
out
mov
jmp
fwait
or
cli
rol
xor
call
cld
dec
enter
sbb
push
add
sbb
shl
mov
pop
or
cmps
add
sbb
adc
sbb
jmp
jne
xchg
inc
cmp
lock
add
pop
(bad)
call
jmp
addr16
out
je
jmp
syscall
jae
nop
fcmovbe
pop
dec
clc
adc
dec
cmp
cli
test
mov
xlat
mov
dec
xlat
fs
addr16
fistp
mov
mov
nop
aam
cld
out
push
test
aam
(bad)
inc
movs
xchg
cmp
ficom
ror
aaa
cs
pop
sub
xchg
xlat
fldenv
adc
sbb
cli
or
shr
not
and
(bad)
dec
sbb
push
imul
mov
sbb
add
inc
xchg
inc
mov
jb
push
sub
sbb
loopne
and
inc
fdivr
and
pop
sub
cmp
push
mov
inc
or
or
push
(bad)
(bad)
(bad)
jmp
push
xlat
jg
inc
lea
mov
ret
mov
push
jo
les
mov
dec
in
(bad)
(bad)
out
adc
ror
(bad)
or
cli
ins
jge
push
cmps
cmp
push
(bad)
(bad)
jmp
sub
mov
mov
or
shl
and
(bad)
push
cmp
add
mov
pusha
push
add
adc
pop
call
loope
sbb
movs
arpl
call
(bad)
inc
dec
mov
mov
daa
dec
test
jne
lods
adc
sub
xchg
push
inc
push
dec
or
(bad)
pop
stos
xor
sub
cwde
add
mov
add
jmp
(bad)
(bad)
(bad)
jl
and
das
pop
mov
or
(bad)
ss
and
(bad)
fs
stos
ss
pop
icebp
dec
dec
jmp
pop
dec
push
cmps
sbb
jbe
data16
(bad)
mov
(bad)
dec
fs
inc
jg
ret
int
cmps
(bad)
(bad)
(bad)
mov
shr
or
sbb
ss
or
ins
pop
movs
mov
lock
leave
cld
ins
je
cmp
(bad)
(bad)
(bad)
(bad)
cmp
inc
mov
inc
clc
sbb
or
leave
mov
mov
push
loope
push
ins
dec
add
and
pushf
xor
fsubr
push
pop
dec
sbb
js
inc
add
jmp
xor
sbb
add
mov
mov
cmp
cmp
iret
not
movs
xor
or
fcomip
push
jmp
les
(bad)
adc
xchg
shr
ret
enter
or
add
fs
je
xlat
mov
fnstcw
mov
inc
pop
add
imul
jl
(bad)
(bad)
(bad)
call
ins
xchg
ins
addr16
add
or
push
push
or
scas
mov
loop
fist
(bad)
(bad)
call
test
adc
cmps
adc
inc
test
ret
xchg
sbb
shl
cli
add
clc
(bad)
cmp
adc
sub
(bad)
dec
sub
pop
inc
mov
cld
pushf
lahf
mov
and
jmp
(bad)
push
loopne
sub
test
cmp
push
jmp
jmp
xchg
adc
sahf
or
mov
ret
outs
dec
sub
dec
mov
adc
adc
add
add
test
push
xchg
clc
inc
mov
fwait
(bad)
(bad)
stc
mov
sar
cmc
cmovg
sbb
cwde
xchg
lahf
shl
and
or
and
std
into
pusha
push
dec
lock
pop
dec
jnp
mov
add
jle
cld
mov
ds
sbb
push
xlat
xor
inc
xchg
daa
mov
and
test
dec
test
xchg
inc
lea
lock
sub
aam
sbb
(bad)
dec
cmp
cwde
and
xchg
pop
xchg
sbb
ret
(bad)
(bad)
jmp
add
cmp
sti
jle
std
push
sub
out
sbb
dec
push
add
dec
pop
fadd
bound
aad
(bad)
(bad)
(bad)
inc
adc
mov
inc
or
sbb
cdq
add
push
jmp
mov
push
add
and
inc
loopne
or
test
imul
mov
push
lea
dec
les
(bad)
jg
cwde
and
popa
push
dec
or
push
mov
shr
push
jo
test
(bad)
(bad)
(bad)
inc
fadd
ret
push
dec
add
into
jo
mov
xchg
arpl
inc
movs
mov
mov
(bad)
(bad)
jmp
or
loopne
pop
jne
mov
jnp
cmp
xchg
jo
jg
je
add
mov
mov
(bad)
call
jne
xor
loope
cli
outs
mov
xor
ins
imul
imul
pop
(bad)
int
nop
mov
ror
cmps
inc
cld
inc
or
inc
dec
add
push
(bad)
jg
sub
add
neg
push
sbb
fwait
push
jbe
es
xchg
mov
(bad)
(bad)
(bad)
(bad)
call
lock
mov
nop
call
sbb
jno
add
pop
mov
call
in
mov
lock
xchg
aad
pop
(bad)
mov
out
push
pop
out
inc
test
imul
dec
add
aad
pop
cmp
loopne
or
pushf
mov
or
push
sbb
popa
inc
mov
(bad)
(bad)
std
fs
jl
cmp
or
std
push
jno
mov
cmp
fxch
inc
sub
call
xor
cmp
xchg
iret
imul
int
cmp
jo
(bad)
(bad)
jmp
mov
popf
mov
mov
test
mov
add
enter
test
(bad)
add
(bad)
(bad)
inc
or
dec
aas
lods
push
add
push
jl
sahf
cmp
sub
inc
pop
jg
jmp
hlt
aam
imul
push
(bad)
(bad)
(bad)
fild
out
sbb
inc
mov
(bad)
mov
iret
sbb
sahf
xchg
aaa
repnz
call
divps
(bad)
(bad)
dec
sti
std
int3
lea
daa
sbb
sub
not
sub
dec
adc
or
and
xor
pushf
and
out
(bad)
(bad)
(bad)
(bad)
jp
sub
push
pop
push
aaa
mov
lds
and
adc
call
xor
or
sbb
dec
je
dec
ret
test
xchg
inc
push
jp
xchg
mul
jmp
or
dec
das
xchg
ret
push
fisub
and
dec
or
pop
push
jo
les
jle
dec
(bad)
push
add
rcl
call
cld
das
jb
clc
add
push
push
jne
sub
jl
push
popf
push
mov
aas
(bad)
jmp
ret
loop
push
ficom
loopne
(bad)
pusha
aad
out
jle
add
(bad)
(bad)
(bad)
inc
mov
add
xchg
(bad)
jge
cs
or
ss
xchg
xchg
sbb
mov
cmps
int
ja
sar
jno
mov
dec
loop
xchg
out
fwait
jmp
sub
adc
(bad)
push
mov
xchg
in
xor
sbb
pop
pop
inc
push
out
add
movs
ror
dec
out
sahf
cli
push
mov
(bad)
(bad)
inc
inc
cmc
loopne
in
in
add
push
add
hlt
in
jmp
xchg
sub
int3
hlt
movs
in
push
cdq
jo
loopne
(bad)
(bad)
in
pop
adc
mov
aaa
jno
inc
sbb
xchg
and
popa
loop
out
mov
call
test
fdivp
sar
or
or
leavew
sbb
arpl
push
and
outs
je
jmp
lods
out
pop
mov
ret
je
push
loopne
xor
inc
das
jp
clc
(bad)
call
inc
cmp
mov
sar
arpl
or
test
mov
fidivr
jmp
call
scas
cli
adc
xchg
(bad)
push
(bad)
(bad)
(bad)
dec
sbb
mov
fnstsw
inc
add
or
(bad)
loop
inc
leave
js
jne
xor
(bad)
(bad)
(bad)
(bad)
fimul
mov
sbb
sbb
adc
or
cwde
xchg
pop
or
or
stos
or
mov
aam
sti
dec
mov
das
or
ds
cmp
aas
xchg
std
jg
mov
std
(bad)
(bad)
inc
jo
mov
lods
add
cld
inc
shl
dec
cmp
or
push
(bad)
(bad)
inc
add
dec
cmp
sbb
xor
mov
(bad)
je
cmp
jmp
or
aam
and
sub
syscall
sbb
rcr
sbb
test
scas
es
(bad)
(bad)
dec
and
pusha
cmp
movs
add
in
jb
imul
je
push
add
add
repnz
lods
loopne
test
sub
(bad)
dec
pop
sbb
xor
sbb
sub
je
push
(bad)
or
test
aas
js
jmp
rcl
ds
mov
or
out
sub
xchg
(bad)
(bad)
call
loopne
lock
aam
add
(bad)
or
jp
add
push
xchg
adc
sub
(bad)
(bad)
dec
lods
jmp
outs
cs
jne
or
and
in
add
jbe
outs
(bad)
(bad)
dec
int3
push
les
out
add
mov
inc
retf
sbb
mov
ss
dec
(bad)
jg
inc
push
dec
lahf
leave
or
inc
jne
iret
xchg
daa
js
xchg
sbb
add
sub
add
dec
xchg
add
movs
mov
leave
adc
loopne
cli
je
fisub
(bad)
(bad)
(bad)
cmp
pusha
push
jb
lahf
push
xchg
xchg
push
pop
inc
and
enter
je
cdq
add
repnz
imul
add
add
jae
retf
(bad)
(bad)
push
dec
xchg
(bad)
in
xchg
pop
and
add
stc
dec
sahf
mov
add
lock
(bad)
or
es
pop
std
dec
dec
jb
pop
add
pop
imul
mov
add
push
push
adc
mov
adc
cmc
xchg
add
add
test
in
in
push
call
inc
add
dec
add
pop
pop
in
pop
xchg
xchg
shl
pop
dec
inc
rcl
mov
push
xchg
adc
inc
mov
pop
in
setg
pop
sbb
sbb
lds
outs
cli
(bad)
call
pop
mov
in
pop
inc
jmp
xor
jmp
push
dec
daa
pop
loopne
std
and
repnz
ins
mov
jae
inc
adc
sub
jns
push
mov
sub
call
(bad)
sub
xchg
outs
pushf
pushf
dec
stos
inc
(bad)
(bad)
(bad)
(bad)
fmul
and
fld
xor
rcl
mov
sub
imul
xchg
add
pop
pop
sub
add
mov
fwait
pop
fsubr
xor
(bad)
(bad)
(bad)
jmp
enter
fstp
xor
not
movs
xor
(bad)
lods
add
jb
push
std
jmp
data16
push
dec
xlat
xlat
add
mov
push
dec
pop
popf
into
sbb
(bad)
(bad)
call
adc
sub
xor
push
push
lods
or
cmp
or
cs
cmp
(bad)
(bad)
fbstp
pushf
je
shl
popf
sub
pop
add
(bad)
xchg
das
(bad)
or
sub
adc
xor
or
(bad)
popf
adc
pop
ja
outs
and
pop
mov
add
add
adc
daa
(bad)
push
push
les
dec
pop
mov
(bad)
(bad)
call
sahf
sub
mov
pop
jmp
lock
pop
inc
jg
std
sbb
dec
shl
dec
xchg
addr16
dec
out
jbe
add
(bad)
mov
xor
pop
push
fdiv
lahf
add
mov
mov
cmc
adc
cdq
and
daa
leave
add
cwde
repz
shl
and
jo
(bad)
call
and
push
pop
sbb
outs
mov
jmp
pop
rol
mov
(bad)
(bad)
(bad)
dec
sbb
cmp
jle
adc
retf
jmp
xchg
mov
or
mov
inc
cs
sub
sbb
icebp
and
mov
pop
mov
and
mov
test
aad
sar
call
push
aad
xchg
outs
xchg
inc
mov
stc
pushf
add
add
je
pop
test
pop
ja
inc
jmp
movs
scas
test
or
jns
lahf
bound
(bad)
(bad)
(bad)
dec
jl
popfw
dec
lock
test
rol
ret
and
push
inc
cwde
es
ret
sub
mov
into
xchg
js
push
mov
mov
sti
(bad)
mov
outs
add
adc
inc
and
inc
adc
mov
sar
or
cmp
inc
jbe
les
loope
popa
je
sub
dec
movs
pop
ret
lahf
aaa
std
add
xor
or
push
jp
mov
dec
or
dec
(bad)
push
jb
add
push
or
std
or
aaa
cmps
sti
rol
lock
fsubp
cmc
jl
ins
xor
(bad)
movs
cdq
mov
(bad)
inc
dec
sti
test
add
aam
adc
xchg
cwde
je
add
xchg
(bad)
(bad)
(bad)
jmp
popa
test
adc
jl
xchg
cli
lds
(bad)
mov
sbb
mov
or
or
(bad)
(bad)
jmp
jns
in
mov
cmp
movs
ror
js
inc
xlat
sbb
lods
add
ror
lock
in
into
sub
dec
into
out
mov
movs
xchg
aam
fsubr
(bad)
(bad)
(bad)
jg
jg
dec
lds
dec
sub
arpl
mov
test
cmp
xchg
clc
dec
loop
mov
into
xor
cld
xor
mov
sbb
repz
mov
leave
dec
call
jecxz
ss
xchg
add
popa
movs
enter
mov
inc
jmp
enter
add
jmp
jmp
sbb
fxsave
out
and
(bad)
call
loopne
int3
out
mov
or
mov
mov
or
cmp
stos
(bad)
(bad)
call
ins
sbb
jp
sbb
add
sub
cli
jb
sub
retf
(bad)
dec
mov
test
in
inc
(bad)
jmp
ret
mov
or
clc
in
pop
inc
ret
retf
or
(bad)
mov
dec
lods
out
ret
or
scas
cmp
fistp
retf
xor
sub
ret
pushf
and
sbb
inc
pop
gs
(bad)
(bad)
jmp
inc
or
(bad)
les
imul
inc
sub
ss
add
(bad)
call
or
or
lods
mov
jge
leave
push
push
call
mov
(bad)
(bad)
mov
and
in
popf
neg
add
adc
jmp
inc
(bad)
mov
cmp
dec
cld
push
sub
aas
call
adc
add
sar
inc
fidiv
cmp
loopne
mov
test
jmp
adc
pop
mov
push
out
push
dec
jmp
movs
inc
aaa
cld
call
add
pop
pop
xchg
mov
xchg
inc
or
sti
and
fisub
pop
inc
or
sar
jbe
inc
repz
daa
jmp
clc
or
out
and
cld
ja
cmps
add
lods
mov
(bad)
call
sbb
(bad)
mov
sbb
pop
fiadd
in
sbb
pop
mov
rol
(bad)
(bad)
fld
or
fcompp
mov
sbb
push
pop
sbb
xor
sbb
mov
adc
push
dec
sub
pusha
aam
jo
and
(bad)
call
scas
and
leave
and
and
push
imul
dec
stos
rcr
data16
lods
and
sbb
popf
(bad)
(bad)
inc
inc
imul
imul
xlat
sbb
inc
cld
sub
shl
push
out
mov
add
movs
add
or
dec
call
adc
and
(bad)
out
clc
pop
push
arpl
pop
repnz
jmp
add
mov
xor
xlat
mov
and
sub
mov
das
mov
push
jmp
push
adc
mov
scas
inc
sub
lock
mov
ficomp
adc
ror
idiv
stos
fdivrp
shl
or
jae
(bad)
sub
add
dec
or
mov
adc
sbb
cli
sbb
ss
or
dec
pusha
loop
jg
addr16
sbb
or
xchg
lods
push
mov
fstp
cmp
pop
xor
adc
push
(bad)
ja
cli
mov
dec
stos
std
pop
enter
sbb
xor
popa
out
xchg
xchg
push
mov
pusha
inc
iret
retf
push
add
inc
xchg
mov
sbb
jo
sti
or
cmps
sahf
leave
pop
cmps
(bad)
(bad)
jg
fadd
dec
ror
pop
jge
test
dec
jmp
ss
mov
sbb
cli
(bad)
push
mov
sti
xchg
sub
xchg
add
test
sub
je
(bad)
rcl
cli
outs
mov
mov
add
adc
(bad)
jmp
test
pop
add
push
add
ds
push
sub
test
or
(bad)
(bad)
inc
je
lods
push
cmp
fcom
movs
dec
sub
or
jne
(bad)
and
ror
movs
(bad)
(bad)
(bad)
inc
mov
fstp
cmp
xchg
push
ja
and
mov
jbe
arpl
xchg
in
jmp
sub
adc
(bad)
dec
out
out
dec
in
mov
xchg
sbb
retf
iret
inc
retf
fisttp
pop
and
out
mov
pop
adc
inc
or
test
and
mov
push
inc
mov
push
jns
(bad)
(bad)
call
pop
leave
push
pop
add
mov
iret
enter
call
push
adc
add
inc
and
inc
jo
jg
je
or
bound
push
je
or
call
xchg
cli
mov
je
dec
jmp
jmp
jmp
adc
add
(bad)
dec
aaa
stos
out
scas
add
mov
or
or
pop
shl
add
or
in
outs
idiv
inc
jns
push
or
aas
mov
dec
scas
adc
je
hlt
(bad)
mov
call
cs
or
jns
cli
(bad)
jmp
int3
and
jo
cmp
mov
xchg
mov
sahf
sub
(bad)
(bad)
dec
adc
shr
inc
or
sub
sti
stos
jp
sbb
(bad)
ins
fcomp
pop
(bad)
fbstp
rol
cmp
inc
mov
cli
pop
mov
call
repnz
jae
inc
fbstp
cmp
inc
or
adc
lea
inc
(bad)
(bad)
(bad)
call
mov
sub
push
(bad)
mov
stc
rol
pusha
in
dec
add
and
(bad)
sbb
(bad)
call
(bad)
imul
xor
fwait
lods
pop
add
jmp
lock
and
add
scas
add
adc
cmc
mov
cwde
mov
push
pop
(bad)
xchg
push
sub
adc
push
data16
sar
(bad)
fcomi
fidiv
add
call
(bad)
xor
retf
(bad)
jo
xchg
dec
(bad)
test
inc
or
inc
sub
(bad)
jmp
lock
imul
sub
xor
loopne
sub
sub
mov
(bad)
(bad)
push
sbb
or
js
in
out
les
cmp
out
add
cs
(bad)
(bad)
(bad)
cmp
rol
mov
mov
inc
mov
xor
fidiv
int
sbb
add
mov
das
push
cmc
das
loopne
inc
popa
add
jl
add
adc
(bad)
push
loope
ds
adc
ds
cmp
add
dec
or
(bad)
(bad)
push
rcl
or
jnp
jl
mov
jo
mov
or
cld
js
unpckhps
sub
lea
mov
push
mov
pusha
add
mov
(bad)
(bad)
(bad)
(bad)
cmp
jge
cmps
ret
clc
mov
cmps
lods
push
popa
popa
test
jo
nop
adc
dec
mov
call
add
clc
xchg
outs
outs
or
and
arpl
jae
jbe
add
(bad)
(bad)
inc
inc
jl
or
mov
addr16
jmp
rol
inc
sub
cmp
add
pop
jecxz
(bad)
jg
fstp
rcr
inc
test
sbb
pop
pop
lea
adc
(bad)
fcomip
xchg
add
cmp
xchg
das
and
jp
dec
ss
add
ins
(bad)
(bad)
(bad)
call
push
rcr
outs
ret
or
test
ret
scas
mov
inc
adc
test
(bad)
cmp
add
xchg
aas
lock
hlt
aaa
jmp
(bad)
jg
(bad)
push
sub
not
dec
jb
cmp
sub
jle
add
out
jle
jmp
mov
mov
cli
and
cmp
(bad)
cmp
add
gs
jne
ins
int
jmp
dec
adc
iret
daa
(bad)
stos
(bad)
inc
sub
dec
test
mov
push
inc
fs
in
(bad)
(bad)
(bad)
dec
dec
cmp
sahf
lock
ror
jb
aaa
lea
mov
(bad)
(bad)
and
test
(bad)
inc
dec
push
push
sub
sub
fs
imul
add
sub
push
jg
cmp
sahf
retf
inc
sbb
or
mov
mov
pop
test
(bad)
dec
fistp
les
add
xchg
lds
sub
push
adc
push
(bad)
(bad)
jg
push
mov
scas
mov
rcr
call
les
ja
jbe
mov
dec
cmp
shl
cwde
or
nop
inc
sbb
stc
sub
cs
cmp
add
add
test
rol
add
add
mov
out
mov
test
sub
jmp
cmc
or
dec
inc
dec
enter
loope
loopne
sub
(bad)
fcmovnb
cmp
(bad)
inc
jmp
lods
cmps
and
or
xor
stos
pusha
push
outs
pop
js
add
(bad)
(bad)
(bad)
(bad)
std
aad
and
rcr
out
mov
add
sub
ins
jmp
and
inc
xor
fwait
adc
std
dec
or
adc
mov
(bad)
call
cs
lock
repnz
inc
lods
mov
and
push
push
or
call
dec
push
sbb
mov
dec
add
pop
mov
arpl
inc
mov
add
lock
push
push
mov
xchg
jb
(bad)
(bad)
inc
push
jo
cdq
mov
fld
(bad)
mov
add
mov
add
(bad)
call
mov
mov
push
xchg
jle
cs
add
mov
or
scas
(bad)
push
and
das
cmp
ja
sub
push
adc
retf
sbb
(bad)
(bad)
(bad)
call
jne
mov
cmp
(bad)
jnp
and
add
dec
inc
imul
(bad)
(bad)
jmp
lock
nop
or
sar
add
cs
adc
stos
jbe
pop
sbb
cli
dec
push
fsub
xor
or
mov
mov
sub
(bad)
call
rcl
inc
push
add
add
pop
enter
(bad)
inc
add
jne
cmp
outs
or
add
std
add
cs
sub
jne
enter
(bad)
(bad)
jmp
cmp
pop
fldcw
pop
je
fmul
pop
dec
iret
inc
pop
dec
jecxz
mov
(bad)
(bad)
(bad)
mov
adc
dec
jae
sub
imul
sub
inc
push
aad
add
std
push
pop
shr
out
jmp
sbb
fcomp
sbb
inc
jg
dec
(bad)
(bad)
out
jmp
dec
dec
mov
mov
and
ffreep
int
inc
jecxz
inc
adc
daa
pop
sub
lock
mov
mov
scas
mov
stc
add
xor
add
push
sbb
dec
loope
push
inc
pushf
jb
mov
push
or
out
jmp
dec
(bad)
(bad)
(bad)
inc
das
add
sahf
xchg
aam
pop
sbb
dec
imul
add
mov
adc
mov
js
add
push
push
scas
xchg
sbb
(bad)
jg
js
rol
xor
cmps
call
add
aam
inc
call
adc
or
pop
pop
(bad)
(bad)
(bad)
(bad)
cld
adc
ins
mov
cmp
dec
add
and
scas
lea
xor
dec
outs
lock
shl
push
push
mov
inc
cwde
inc
xor
push
outs
mov
push
movs
sub
mov
call
pop
and
mov
call
xchg
cmp
cmp
add
xor
(bad)
call
mov
inc
in
add
pop
adc
rcr
test
dec
pop
or
mov
jnp
addr16
add
test
add
inc
loop
mov
outs
push
popa
add
outs
mov
add
push
jo
push
sar
xchg
xchg
ds
sub
jae
mov
sub
cmp
and
cmp
std
push
xor
test
push
scas
lds
ret
sbb
sub
sbb
(bad)
jg
jmp
imul
pushf
push
xchg
and
jnp
es
inc
sbb
popf
mov
cmp
jae
retf
dec
int
test
or
aas
adc
sub
add
sbb
add
add
pop
jb
or
inc
in
out
sbb
icebp
jg
push
ret
jo
shl
or
mov
(bad)
(bad)
jg
sysenter
xlat
mov
adc
or
mov
xchg
or
popa
ja
(bad)
(bad)
(bad)
jg
sbb
inc
sbb
das
(bad)
scas
push
mov
loopne
inc
lds
mov
clc
lea
sub
scas
gs
(bad)
(bad)
inc
pop
mov
xor
les
or
mov
repnz
mov
push
ins
push
mov
and
inc
push
adc
pop
icebp
xchg
cmp
add
mov
into
mov
movs
outs
cmc
mov
sub
(bad)
(bad)
shr
xlat
sub
jmp
(bad)
jmp
in
add
add
sahf
cdq
ret
jo
shl
mov
(bad)
(bad)
call
(bad)
xchg
mov
and
xchg
mov
add
or
mov
sub
sbb
(bad)
(bad)
jmp
push
xor
dec
test
sbb
or
xchg
add
add
push
loopne
jg
dec
fild
or
loop
(bad)
pop
add
div
mov
add
sar
xchg
outs
add
xor
mov
(bad)
(bad)
cmp
jbe
mov
rol
jl
or
mov
add
not
jmp
push
jl
add
sub
mov
xor
inc
inc
leave
inc
rcr
aam
add
or
adc
popa
jge
fwait
ret
lahf
push
mov
adc
cmp
and
pusha
(bad)
(bad)
mov
(bad)
push
jg
(bad)
pop
or
pusha
mov
je
inc
aam
mov
lods
call
cmps
cwde
and
mov
mov
stos
add
and
(bad)
in
lock
xor
lahf
aam
and
loop
retf
jnp
push
adc
and
aaa
or
pop
mov
mov
add
popf
sub
mov
mov
mov
(bad)
(bad)
(bad)
jmp
xchg
pushf
mov
(bad)
cmp
push
inc
mov
xchg
les
jo
adc
pop
(bad)
(bad)
(bad)
call
mov
mov
jge
jmp
fsub
aas
mov
inc
add
xor
std
add
cld
mov
xchg
inc
movzx
dec
add
or
and
lea
dec
sbb
jle
add
inc
(bad)
(bad)
(bad)
cmp
sub
pop
xchg
in
fisubr
cmp
cmp
xor
mov
call
adc
add
out
mov
sub
mov
add
ret
mov
(bad)
sbb
cld
xchg
aam
repz
(bad)
sti
add
les
mov
inc
(bad)
call
sbb
movs
or
int3
jne
cmp
mov
pop
lods
mov
and
bound
(bad)
(bad)
jge
add
sub
push
(bad)
mov
mov
das
push
push
pushf
out
loope
inc
mov
(bad)
(bad)
(bad)
call
inc
and
inc
push
sbb
and
xor
sbb
mov
pop
lods
lock
(bad)
(bad)
mov
and
dec
repnz
mov
adc
frstor
test
cmp
push
jmp
sbb
jl
cli
lea
dec
test
or
aam
jbe
inc
cld
and
cmp
jmp
mov
loopne
cwde
hlt
lock
jne
mov
sub
dec
dec
sub
fdivr
sbb
hlt
mov
out
sbb
adc
and
repz
inc
icebp
(bad)
(bad)
inc
jmp
adc
and
sub
psubb
(bad)
(bad)
jg
(bad)
out
ja
xor
ret
test
push
adc
das
sbb
dec
(bad)
(bad)
call
fcom
adc
jl
ror
stos
mov
ret
sub
icebp
and
nop
mov
dec
dec
mov
xor
movs
inc
fs
lds
outs
fld
jno
mov
cmp
into
xor
jns
xor
jne
bound
rol
ss
pop
loope
mov
sub
wrmsr
push
or
sub
cwde
mov
and
xor
push
add
movs
cs
and
and
fidivr
mov
pop
push
inc
sub
imul
(bad)
(bad)
(bad)
cmp
push
mov
pop
sub
sbb
add
ror
pop
jae
jno
aaa
pop
dec
lea
adc
(bad)
call
scas
mov
shl
cmp
pushf
fs
fsubr
(bad)
fcomip
mov
mov
inc
cmp
adc
xor
out
add
(bad)
(bad)
(bad)
mov
jl
fdivr
jo
adc
ret
pop
mov
xchg
add
inc
fmul
xchg
mov
cmp
stos
cmp
cdq
xor
mov
test
call
aas
test
push
popa
sar
ror
mov
cmp
call
pop
xchg
jp
scas
aad
and
jno
cmp
or
std
popf
retf
(bad)
(bad)
(bad)
mov
je
dec
mov
pop
fimul
out
push
movs
rol
push
inc
mov
(bad)
push
jbe
sub
or
cmp
push
xor
pop
xor
rol
(bad)
push
push
inc
jmp
jns
dec
adc
dec
js
(bad)
clc
dec
xor
enter
cmps
mov
xor
(bad)
in
dec
inc
fdivp
mov
fidivr
nop
pop
adc
dec
js
popa
cmp
(bad)
(bad)
call
sbb
pop
xlat
iret
lea
xchg
and
pusha
shl
fst
sbb
stos
dec
cmc
(bad)
(bad)
push
std
add
xchg
fiadd
xor
int3
js
inc
int
mov
jmp
inc
xlat
inc
adc
add
xchg
scas
xchg
in
dec
xchg
es
add
js
inc
push
add
adc
repnz
(bad)
cwde
div
lock
(bad)
(bad)
jmp
shl
cmp
jbe
jmp
fldcw
jg
fild
cmc
dec
into
dec
xor
pop
mov
(bad)
(bad)
(bad)
out
inc
pop
inc
add
sub
out
pop
or
and
xor
nop
mov
inc
ret
cld
nop
(bad)
(bad)
dec
sar
shr
mov
pusha
push
ja
inc
mov
test
(bad)
jmp
shl
push
dec
xor
inc
jmp
inc
jae
add
sar
jnp
xor
dec
(bad)
(bad)
(bad)
(bad)
call
not
(bad)
fdivr
mov
or
jmp
jno
add
sti
and
(bad)
(bad)
dec
adc
adc
ret
adc
or
sbb
stc
and
push
or
cld
push
pop
sbb
sub
loope
xchg
add
dec
cwde
inc
cmp
in
mov
ret
pcmpgtb
add
sub
(bad)
fbld
pop
cmc
inc
fcom
inc
cmp
mov
in
add
push
jg
or
push
or
xor
and
adc
add
pop
rol
shl
es
push
push
dec
fdiv
ror
push
das
out
test
(bad)
dec
mov
pop
clc
mov
sbb
jecxz
dec
inc
ds
(bad)
call
cmp
dec
cld
inc
lds
popa
mov
call
cmp
push
ins
enter
xor
pop
sbb
sub
jo
sbb
dec
js
mov
sub
mov
cmp
(bad)
jmp
data16
inc
mov
or
push
push
jae
dec
pop
cmp
(bad)
dec
fidivr
iret
xor
pusha
sub
repnz
icebp
mov
cmp
or
cmps
jmp
outs
or
outs
mov
jne
push
xor
js
(bad)
(bad)
inc
lahf
(bad)
outs
rol
jge
mov
js
fadd
js
adc
push
rcl
inc
loop
push
jo
mov
iret
mov
lea
sbb
or
pop
push
and
inc
(bad)
(bad)
jmp
sbb
mov
add
and
pop
sbb
lahf
aam
test
fist
mov
jne
cmp
sub
outs
xchg
repnz
add
inc
cli
jmp
cwde
fidivr
mov
cmp
bnd
or
inc
repz
mov
popf
jne
iret
cli
add
adc
dec
push
jmp
call
inc
inc
mov
cmps
xor
jmp
in
(bad)
sti
adc
es
(bad)
inc
add
cmp
jg
inc
adc
loopne
ret
mov
mov
test
push
sbb
jecxz
cld
test
(bad)
shr
(bad)
(bad)
(bad)
(bad)
jns
add
outs
push
arpl
sbb
add
mov
fstp
mov
retf
aaa
aam
dec
ins
retf
(bad)
(bad)
(bad)
inc
ins
cwde
add
lods
mov
popa
popf
push
mov
test
mov
add
(bad)
fcomip
cmps
sub
pushf
mov
fstp
lock
mov
jge
mov
pop
add
into
int
fs
(bad)
jg
adc
jl
gs
and
jae
test
addr16
sbb
test
scas
dec
lock
aam
ss
jo
sbb
inc
rcl
(bad)
(bad)
(bad)
(bad)
clc
xchg
movs
or
xchg
rcl
push
ficom
and
movs
push
cli
mov
in
sbb
retf
and
(bad)
es
(bad)
(bad)
push
movs
(bad)
jns
inc
jle
adc
or
ins
ins
and
loopne
cmp
push
push
jnp
cmp
pop
pusha
jecxz
adc
cwde
jae
inc
repnz
call
mov
(bad)
call
inc
fld
mov
push
test
sbb
sbb
sbb
pop
sbb
retf
mov
mov
(bad)
cwde
add
(bad)
call
arpl
or
push
movzx
or
jp
clc
inc
or
and
(bad)
call
pop
dec
icebp
mov
retf
jne
inc
sub
add
or
loope
inc
pop
add
or
(bad)
(bad)
(bad)
jg
std
ret
dec
xor
jmp
add
mov
pop
and
push
mov
dec
and
pop
and
(bad)
rcr
dec
loopne
inc
add
pop
enter
ret
inc
cli
or
dec
inc
mov
test
jg
hlt
outs
shl
in
imul
jmp
dec
iret
call
lods
lahf
xchg
ins
or
jmp
(bad)
(bad)
push
mov
scas
(bad)
sub
pop
sti
push
adc
inc
push
(bad)
(bad)
mov
sbb
inc
mov
mov
mov
ss
pop
(bad)
(bad)
(bad)
dec
and
jmp
retf
lods
mov
fnstsw
shl
or
jmp
scas
leave
mov
jno
fistp
add
sbb
sub
add
or
inc
sub
and
fwait
sbb
inc
and
adc
std
(bad)
cmp
or
pslld
int
lds
loop
jmp
out
add
(bad)
(bad)
inc
out
int3
leave
or
imul
ins
add
mov
fbld
pusha
scas
out
sub
clc
jg
faddp
and
mov
or
sub
and
push
inc
or
ds
cmps
(bad)
mov
push
pushf
call
or
shl
sub
mov
jmp
icebp
add
inc
js
addr16
(bad)
jmp
inc
fdivr
add
or
add
adc
fist
or
and
xor
(bad)
(bad)
dec
adc
retf
push
daa
dec
ror
jmp
popa
push
pop
pop
pop
push
sub
ret
(bad)
(bad)
jg
loopne
or
js
js
test
mov
repnz
mov
ss
or
icebp
fnstcw
adc
mov
icebp
dec
movs
sub
call
pop
fdivr
ret
xor
push
sbb
mov
inc
daa
push
pop
adc
adc
ss
sub
add
adc
inc
cmp
imul
push
mov
outs
call
pusha
inc
stc
dec
dec
or
xor
jle
shl
or
mov
je
lods
add
adc
dec
jae
sbb
adc
neg
aaa
std
and
clc
pop
in
and
out
and
pop
xor
sbb
(bad)
(bad)
(bad)
cmp
scas
test
mov
fidiv
leave
mov
dec
daa
sub
out
sbb
hlt
ja
mov
gs
aas
cmp
aas
mov
xchg
(bad)
call
push
movnti
iret
mov
out
lds
inc
int3
jg
jne
xor
jecxz
jne
sbb
add
and
(bad)
sar
loop
and
aas
test
outs
inc
out
push
mov
repnz
mov
xor
shr
push
cmp
loop
movs
push
pop
outs
mov
out
ds
mov
iret
push
jmp
adc
mov
jge
or
push
jbe
lock
(bad)
(bad)
call
lock
xchg
pop
or
pop
dec
cmovo
rol
jne
(bad)
pop
out
(bad)
mov
inc
push
clc
test
mov
imul
xor
xor
dec
pop
push
add
(bad)
inc
xchg
dec
ror
cli
pop
aad
ror
scas
pop
pusha
imul
dec
mov
das
es
clc
push
sbb
(bad)
(bad)
(bad)
(bad)
call
fsub
jne
inc
cmp
pop
inc
pop
retf
lock
(bad)
repz
cmp
loopne
mov
(bad)
call
ds
pop
sub
mov
sbb
cld
push
dec
retf
mov
dec
ret
js
(bad)
aaa
lods
cmp
xchg
mov
jmp
aam
mov
inc
push
lock
imul
add
mov
(bad)
cmp
jmp
cmp
jb
xchg
rol
or
outs
fld1
jge
adc
sbb
(bad)
dec
or
aam
mov
enter
call
(bad)
jg
inc
jo
out
jae
mov
ins
(bad)
mov
stos
push
and
push
mov
jge
mov
jb
inc
test
pushf
xchg
ds
jecxz
fild
fs
(bad)
(bad)
push
jmp
and
jae
jl
(bad)
sub
xchg
pop
and
jmp
aaa
push
and
stos
adc
(bad)
(bad)
(bad)
cld
les
sub
lea
shl
ds
sbb
pusha
out
mov
and
xor
sar
(bad)
mov
data16
fisub
dec
ret
jmp
mov
pop
adc
rcr
repnz
sub
sbb
(bad)
(bad)
jmp
pop
iret
inc
lock
mov
rol
and
or
sub
mov
cmps
pop
(bad)
(bad)
(bad)
(bad)
mov
adc
push
add
jg
mov
jbe
(bad)
mov
mov
dec
cmp
aam
(bad)
(bad)
jmp
or
scas
bound
das
add
fld
sbb
inc
pusha
(bad)
(bad)
(bad)
jmp
jbe
add
sub
(bad)
dec
or
adc
cmp
mov
mov
je
aaa
add
cmc
(bad)
(bad)
jne
(bad)
retf
dec
lods
mov
adc
and
cmp
imul
call
bnd
adc
sub
push
pop
xchg
cmc
sub
mov
or
jmp
pop
icebp
(bad)
(bad)
cmp
lock
or
inc
inc
inc
sbb
(bad)
jl
outs
cmps
push
jmp
pop
cmp
push
nop
push
push
popa
sahf
mov
dec
or
(bad)
(bad)
push
add
mov
cld
xchg
pop
pop
sbb
sub
test
daa
hlt
xor
xchg
inc
pop
inc
push
xchg
mov
les
int
jbe
mov
call
xlat
jnp
loope
(bad)
call
sub
stos
inc
call
lods
and
movs
cmp
jmp
outs
inc
and
in
fs
adc
inc
dec
(bad)
pop
pop
inc
sbb
(bad)
(bad)
call
dec
ins
pop
pop
adc
and
mov
adc
(bad)
lods
sbb
imul
xlat
dec
and
rcl
push
jbe
adc
ret
lock
sub
cwde
int3
sti
mov
mov
fbld
arpl
cmp
test
jno
sbb
ror
push
mov
mov
and
mov
cmps
sub
neg
push
icebp
(bad)
call
fisttp
pusha
repz
mov
out
or
sub
fs
cwde
jecxz
aas
add
aas
loope
das
sbb
mov
test
test
sub
fild
inc
add
add
stos
add
aas
add
cld
(bad)
jg
xor
fcom
nop
sub
sub
loope
shl
xchg
cli
mov
pushf
call
dec
jecxz
cli
push
loopne
inc
jcxz
je
jne
xor
fmul
(bad)
(bad)
(bad)
push
jp
out
fcom
jb
test
sbb
adc
retf
adc
(bad)
(bad)
push
mov
shl
or
lock
aad
dec
push
push
sbb
hlt
(bad)
dec
sahf
ret
test
inc
add
fisub
pop
xchg
adc
sbb
dec
push
jmp
push
test
js
hlt
pushf
hlt
inc
sbb
sbb
js
mov
(bad)
(bad)
inc
test
movs
dec
or
adc
cmp
and
lock
icebp
call
jge
(bad)
xor
aaa
and
aam
(bad)
inc
and
sbb
loop
shl
retf
inc
out
dec
jle
aam
fstp
jns
mov
mov
xchg
push
dec
(bad)
jg
mov
push
and
inc
iret
dec
xor
ficom
lods
loopne
in
mov
mov
sahf
fisubr
fsub
adc
(bad)
(bad)
jmp
add
jge
into
pusha
add
cmp
scas
inc
test
inc
sbb
call
(bad)
(bad)
dec
pop
(bad)
push
sbb
lods
dec
xchg
adc
or
sub
add
xchg
sar
and
(bad)
fcomip
(bad)
sti
sub
dec
aam
rcr
cmp
fiadd
sar
dec
dec
mov
stos
shr
fild
sbb
jno
sub
(bad)
(bad)
(bad)
jmp
ins
mov
mov
add
jmp
icebp
lock
and
add
or
push
push
add
push
shl
(bad)
(bad)
(bad)
(bad)
jmp
or
jae
mov
shl
push
shl
shl
push
imul
(bad)
jmp
inc
pusha
mov
ja
shl
sbb
mov
inc
fs
push
aam
(bad)
dec
mul
jns
add
fsubp
jle
add
loop
(bad)
dec
sbb
(bad)
(bad)
call
fidivr
ret
xchg
loope
pop
ins
or
std
retf
in
mov
icebp
adc
mov
inc
clc
outs
clc
pop
test
mov
fwait
(bad)
jmp
or
mov
or
in
in
mov
xor
dec
adc
or
or
adc
(bad)
call
mov
fimul
(bad)
(bad)
inc
popa
dec
jle
loope
adc
call
and
mov
or
adc
push
push
inc
mov
fcmovbe
in
add
(bad)
push
jmp
cmc
inc
inc
popf
and
lahf
cmp
cmp
fild
ret
mov
sti
push
es
out
sar
aam
cmc
in
or
and
inc
(bad)
(bad)
fld
jae
adc
xchg
cmp
mov
inc
inc
cmps
test
push
test
xor
push
cmp
daa
xor
lea
mov
xchg
cld
lahf
adc
je
(bad)
(bad)
jmp
ret
xor
mov
dec
neg
outs
cmp
in
shl
sbb
(bad)
jmp
neg
ja
mov
sbb
and
call
cmp
shr
inc
add
inc
xchg
pop
repnz
nop
and
xor
cmp
cs
xchg
ret
loope
fisubr
sahf
call
fist
pushf
ret
jbe
cli
retf
push
std
lock
(bad)
call
neg
pusha
sahf
mov
add
outs
sbb
or
cdq
out
(bad)
(bad)
cmp
outs
xor
dec
movs
xlat
adc
or
inc
cs
sbb
sbb
pop
daa
movs
clc
ins
jo
sbb
cmpxchg
stc
and
(bad)
(bad)
dec
jns
jb
xchg
or
push
jne
jecxz
push
cmp
rcl
(bad)
call
aam
dec
add
adc
fsub
retf
mov
xor
cld
(bad)
(bad)
(bad)
jge
scas
sub
fcmovne
sbb
test
mov
(bad)
jmp
retf
push
sahf
sti
add
and
nop
(bad)
call
int
pop
test
test
add
mov
cmp
(bad)
jmp
lods
mov
or
test
sub
add
out
test
(bad)
(bad)
mov
in
pop
mov
xor
and
in
jb
push
ror
jl
jg
std
or
push
and
or
mov
out
or
loopne
imul
push
jb
lahf
mov
lds
push
add
push
hlt
add
in
repz
dec
bound
repnz
(bad)
dec
loop
jbe
xor
inc
push
loopne
xlat
repz
jmp
ret
mov
cmp
call
mov
(bad)
call
mov
jmp
jecxz
add
cwde
out
je
bound
inc
(bad)
fld
dec
inc
mov
mov
jmp
(bad)
cmp
pop
je
jne
mov
and
jno
test
pop
stos
or
xchg
push
mov
pop
arpl
ret
neg
clc
or
mov
mov
dec
(bad)
(bad)
(bad)
(bad)
call
test
add
out
dec
inc
sub
cld
and
rol
push
loopne
(bad)
out
call
jmp
(bad)
(bad)
(bad)
cmp
rcr
xor
nop
pop
pop
sbb
mov
add
sub
mov
(bad)
cmp
call
cmp
inc
js
cmp
mov
add
inc
xchg
pop
mov
push
mov
(bad)
(bad)
(bad)
stc
pop
clc
adc
mov
add
call
push
fadd
or
mov
inc
(bad)
(bad)
(bad)
call
iret
pusha
je
retf
or
sub
or
pusha
cmc
inc
cwde
mov
ja
(bad)
call
jnp
mov
add
inc
imul
add
sub
ret
pop
loopne
jecxz
push
add
mov
or
inc
or
bound
les
jle
and
enter
(bad)
fsub
jg
into
mov
jnp
inc
popf
push
retf
push
je
dec
test
cmp
(bad)
call
gs
or
jae
ja
cmp
sbb
jmp
xor
pop
div
aam
and
(bad)
jmp
fadd
test
aaa
xor
mov
xchg
xor
daa
dec
or
adc
(bad)
inc
push
ins
mov
mov
retf
mov
adc
(bad)
(bad)
(bad)
(bad)
push
outs
mov
mov
les
jecxz
cmp
mov
mov
push
push
outs
sbb
push
dec
jno
pop
xchg
in
dec
mov
sub
inc
pop
and
lock
pop
aam
(bad)
jmp
inc
popa
add
add
and
and
cs
mov
dec
mov
repnz
inc
lea
xchg
adc
jle
xchg
or
(bad)
(bad)
(bad)
call
inc
(bad)
or
sbb
sub
or
xor
inc
js
js
ins
jmp
push
or
(bad)
(bad)
push
xchg
add
pop
movs
jg
sbb
daa
inc
sbb
stc
or
inc
lods
arpl
jmp
outs
mov
xor
(bad)
dec
add
pop
sub
ins
imul
xchg
jle
xor
int
ss
lahf
lock
std
(bad)
call
test
loopne
lea
jbe
out
xchg
add
hlt
lods
adc
inc
push
mov
push
and
push
gs
add
(bad)
(bad)
mov
into
adc
push
icebp
ins
cmp
jle
aam
(bad)
jg
aaa
pusha
or
xor
and
mov
sub
add
inc
jb
scas
cmp
dec
or
adc
sbb
mov
cmp
add
int3
add
cmps
sub
jmp
xchg
xor
xchg
xchg
push
sbb
ins
dec
add
mov
shl
dec
add
xor
ret
fidiv
pushf
dec
loopne
or
aad
jmp
out
clc
sub
sbb
adc
(bad)
out
ja
pop
clc
out
ret
(bad)
(bad)
(bad)
jmp
inc
idiv
dec
nop
xchg
pop
add
xchg
push
pusha
ds
push
aam
push
add
ds
clc
(bad)
dec
add
jl
mov
ror
scas
add
and
inc
nop
(bad)
(bad)
(bad)
inc
sub
movs
pusha
add
rcl
mov
test
push
add
xor
adc
mov
je
ss
lock
sub
(bad)
dec
adc
jl
call
dec
(bad)
pusha
rol
repz
inc
pusha
int3
mov
call
test
cmp
xor
shl
add
test
repz
jo
js
lods
pusha
dec
je
xor
(bad)
call
or
or
test
or
add
loopne
adc
inc
jl
inc
sbb
xchg
dec
or
and
call
outs
pusha
ror
inc
iret
dec
fwait
or
inc
add
add
(bad)
(bad)
(bad)
jmp
ins
sbb
sbb
stos
jle
cwde
cwde
nop
rol
push
ret
aam
push
mov
fidiv
xchg
ret
cmp
dec
jl
scas
or
test
(bad)
fst
dec
mov
lock
(bad)
call
rcr
call
mov
rol
jns
(bad)
dec
mov
mov
cs
pop
pop
ins
js
(bad)
(bad)
jg
loopne
push
stos
mov
(bad)
pushf
xor
sbb
sahf
enter
dec
repz
neg
(bad)
(bad)
call
pop
sbb
mov
add
dec
arpl
add
enter
adc
adc
(bad)
(bad)
(bad)
mov
(bad)
loope
jae
push
loopne
pop
add
and
inc
xchg
push
mov
mov
ss
lock
and
jae
(bad)
(bad)
out
mov
jmp
dec
and
call
pusha
pushf
push
mov
mov
or
rol
adc
(bad)
(bad)
push
fisttp
movs
mov
je
mov
imul
test
pop
push
mov
(bad)
pop
inc
mov
cmp
ins
gs
ret
push
rol
jo
das
and
(bad)
(bad)
(bad)
inc
not
test
loope
test
out
loopne
sub
mov
jecxz
lea
retf
jmp
(bad)
(bad)
jmp
mov
mov
ret
adc
out
add
pop
mov
or
shr
pop
add
loope
sbb
call
xor
shr
vphsubdq
jns
jno
or
fcom
call
ss
mov
inc
movs
pop
enter
cmp
popa
sar
xchg
je
sar
jl
mov
xchg
div
sbb
jg
push
add
inc
dec
sahf
xchg
xchg
add
(bad)
in
cmp
(bad)
(bad)
out
js
or
leave
sub
and
aaa
push
inc
retf
cmc
repnz
not
xor
bound
xor
cmp
or
or
in
movs
or
into
in
add
(bad)
(bad)
fisttp
shr
or
imul
and
sub
sub
mov
sub
jae
les
test
adc
sbb
nop
out
shl
add
mov
push
add
add
pop
and
sar
pop
es
nop
mov
dec
pop
cmp
std
cmp
xor
daa
adc
dec
add
pop
sub
(bad)
mov
add
pop
cld
and
retf
add
call
in
int
xchg
jmp
(bad)
fst
mov
sbb
and
mov
(bad)
(bad)
jmp
adc
pusha
add
ss
or
mov
cs
jmp
mov
(bad)
or
test
jmp
in
pusha
mov
cld
inc
jns
jnp
jge
outs
inc
popa
fwait
and
add
(bad)
dec
inc
sar
call
add
outs
mov
loope
dec
mov
jns
fiadd
clc
xor
adc
or
addr16
repnz
(bad)
(bad)
jg
add
or
or
test
je
mov
pop
or
add
pop
xlat
shr
pop
inc
sbb
or
push
jmp
pop
push
pop
rcr
or
lahf
call
mov
jg
inc
es
inc
mov
rcl
mov
xchg
dec
in
sbb
jg
(bad)
dec
sbb
xor
inc
sub
adc
dec
xor
and
(bad)
jmp
popf
xor
aam
not
or
sbb
sti
or
adc
test
(bad)
fcomp
sbb
add
jecxz
outs
mov
or
(bad)
mov
pop
dec
(bad)
cmp
ret
cmp
mov
addr16
imul
push
push
loopne
push
repnz
int
leave
(bad)
mov
(bad)
call
cs
dec
arpl
mov
mov
pop
push
cwde
mov
test
cmps
sub
mov
ss
push
xor
xchg
jne
(bad)
(bad)
(bad)
call
push
out
loop
pop
adc
xchg
fcomp
cmp
lock
add
sbb
jecxz
jmp
mov
mov
xchg
mov
mov
les
jg
fisubr
mov
cs
xor
les
mov
(bad)
jg
(bad)
sbb
jle
arpl
pushf
xor
mov
xchg
inc
xchg
inc
bound
push
stc
fdiv
jmp
loopne
or
(bad)
aaa
std
dec
jo
fdivr
jl
aad
sbb
xor
inc
imul
popa
pop
jo
cmc
mov
or
jp
(bad)
pop
cmc
(bad)
(bad)
call
cmp
jl
outs
fcompp
int3
push
loopne
shl
outs
sahf
daa
adc
(bad)
(bad)
(bad)
call
call
cmp
mov
das
sub
dec
rol
fistp
push
in
xor
or
fstp
inc
fist
jmp
out
(bad)
push
adc
rcl
jg
and
pop
ds
and
push
dec
xchg
iret
rol
add
cmps
bound
mov
sub
(bad)
(bad)
jmp
jmp
ret
xchg
jmp
mov
mov
(bad)
or
mov
push
shl
inc
(bad)
call
mov
cmp
retf
pop
cmc
pushaw
ins
and
(bad)
in
sbb
(bad)
dec
enter
fucomip
and
push
retf
mov
rcr
mov
(bad)
(bad)
inc
dec
fst
repz
mov
push
aad
pop
cmp
repnz
(bad)
(bad)
call
maskmovq
fcmovnb
ret
or
retf
dec
rcr
in
cld
in
lock
mov
xchg
mov
jmp
push
pop
sub
loope
(bad)
push
data16
xlat
sub
in
out
xor
cs
ins
sbb
fcomp
dec
ss
xchg
into
(bad)
leave
jae
test
(bad)
dec
cmp
adc
adc
jge
mov
jae
xor
stos
(bad)
(bad)
(bad)
cli
sub
sbb
xchg
jne
imul
cmp
call
mov
aas
cmp
add
sub
adc
jo
(bad)
(bad)
(bad)
jmp
add
mov
or
xchg
loope
sar
jle
(bad)
stos
push
(bad)
(bad)
(bad)
cli
enter
mov
stc
fld
addr16
std
in
vpxor
and
(bad)
(bad)
(bad)
call
sti
mov
ds
xor
or
(bad)
fistp
or
leave
xlat
cmp
(bad)
(bad)
push
(bad)
and
ds
mov
vpmulhw
mov
mov
push
dec
repz
and
mov
shl
sub
sub
icebp
(bad)
(bad)
(bad)
jmp
ret
mov
adc
sub
push
int3
jle
fistp
sar
int3
or
cmp
adc
leave
stos
xchg
inc
xchg
scas
add
das
pop
mov
js
out
or
and
add
inc
neg
push
push
(bad)
(bad)
(bad)
push
and
sub
cmovle
repz
mov
in
(bad)
and
ds
(bad)
(bad)
sti
sub
push
push
push
sar
push
inc
scas
sbb
push
adc
into
add
es
data16
and
jecxz
add
sbb
loopne
mov
stos
jg
jmp
popa
(bad)
(bad)
(bad)
(bad)
out
mov
ja
shl
xor
sbb
mov
sub
and
(bad)
xor
sbb
push
sti
jecxz
xlat
(bad)
(bad)
(bad)
(bad)
aas
jne
mov
push
cmp
aad
leave
(bad)
cmp
sub
jmp
and
iret
sbb
daa
out
clc
push
or
jns
xor
add
ror
ja
fmul
pusha
sar
sub
ins
addr16
push
call
or
rcl
(bad)
daa
sbb
(bad)
jae
fstp
adc
fdiv
repnz
(bad)
inc
not
cmp
icebp
xor
ret
aas
je
jle
mov
adc
sub
cmps
shl
cld
add
sbb
loope
adc
aas
and
fistp
ficom
js
(bad)
mov
or
inc
call
ins
inc
inc
mov
xor
cmp
test
add
add
fcom
sub
jb
jg
mov
mov
test
nop
mov
retf
lds
je
imul
jmp
ja
in
xor
nop
add
sbb
movs
sub
lds
shl
jmp
(bad)
(bad)
(bad)
push
fist
jmp
loope
lahf
clc
fcom
clc
xor
pop
sbb
test
inc
loop
or
cmp
stos
push
push
dec
dec
or
scas
loopne
cmps
jb
inc
sub
test
inc
je
push
push
dec
pop
in
or
push
inc
sbb
pop
push
add
push
push
outs
push
xchg
test
pop
mov
cmps
leave
(bad)
(bad)
(bad)
jmp
popa
pop
stc
mov
(bad)
inc
fcomp
and
adc
and
jecxz
adc
sar
(bad)
fcomip
stos
push
test
pop
daa
pop
dec
or
add
push
xchg
data16
add
(bad)
(bad)
push
inc
inc
inc
fimul
js
gs
or
pop
or
add
inc
sub
inc
mov
push
add
lock
fisubr
inc
nop
(bad)
cmp
inc
add
popa
or
test
pop
rcr
sbb
mov
movs
(bad)
inc
dec
adc
jmp
icebp
and
sbb
pusha
mov
jmp
dec
ret
inc
movs
add
dec
add
loop
call
shl
add
stos
adc
or
xor
jl
and
dec
add
fs
mov
in
adc
shl
jmp
lods
and
lds
cmp
mov
in
outs
(bad)
jmp
fstp
ret
pop
sbb
ins
or
dec
adc
call
(bad)
(bad)
(bad)
fcom
jmp
sbb
dec
shr
cmp
inc
push
mov
inc
jp
ds
(bad)
(bad)
inc
loopne
mov
mov
xchg
xor
inc
adc
mov
and
sub
sub
lock
push
adc
or
sahf
pop
loop
xchg
or
jl
mov
imul
ins
or
jo
xchg
dec
jmp
pop
cmp
xor
mov
lods
rcl
mov
pushf
call
idiv
inc
sub
sub
dec
arpl
push
out
jo
rcr
movs
shr
(bad)
jmp
add
and
or
dec
out
push
es
push
(bad)
(bad)
(bad)
(bad)
mov
nop
mov
mov
pop
mov
fld
mov
sbb
(bad)
(bad)
inc
mov
sub
cmp
es
jnp
push
sbb
jne
push
or
(bad)
push
sub
xchg
xor
cmp
add
sub
call
pop
or
or
shr
cmps
movs
fsub
pop
dec
nop
js
dec
std
aaa
sub
in
add
into
nop
sbb
sub
mov
or
mov
pop
das
dec
inc
inc
or
add
(bad)
(bad)
(bad)
jmp
mov
or
pop
xchg
fldenv
hlt
cmp
fmul
nop
int3
dec
push
inc
sbb
test
(bad)
(bad)
(bad)
out
inc
pop
(bad)
pop
add
mov
pminub
sar
leave
clc
inc
or
inc
je
dec
dec
push
inc
popf
push
push
rcl
or
shl
(bad)
(bad)
(bad)
inc
pop
xchg
mov
inc
loopne
adc
adc
loope
fwait
(bad)
push
std
sub
nop
sub
sbb
ret
cmp
fsubr
xchg
jge
push
cmps
inc
dec
inc
xchg
mov
inc
or
les
movs
leave
(bad)
xor
cmp
push
(bad)
call
adc
sub
dec
enter
inc
shl
(bad)
(bad)
jmp
jmp
aad
adc
add
add
out
mov
jmp
out
scas
push
in
and
test
sbb
sub
stos
inc
cmp
or
(bad)
(bad)
dec
mov
gs
or
or
gs
std
adc
jl
inc
or
xor
sbb
jg
in
aas
or
lock
xor
outs
xor
loope
sbb
(bad)
pop
add
loope
(bad)
(bad)
(bad)
inc
push
add
push
xor
sub
repz
retf
add
mov
call
jb
ror
dec
sub
adc
cmps
jb
or
bswap
pop
jb
or
(bad)
(bad)
fcmovnb
nop
jp
add
xchg
mov
mov
dec
cs
fisubr
sbb
jl
inc
shl
sbb
cld
fisttp
dec
cmp
repnz
xchg
xor
jae
inc
adc
fwait
repz
test
retf
and
pusha
inc
sub
pop
test
aaa
std
dec
dec
jb
add
sar
popa
inc
mov
add
add
(bad)
fcomp
neg
mov
mov
fmul
(bad)
(bad)
(bad)
dec
push
xchg
mov
sub
pop
pop
loope
test
cmp
and
sbb
imul
or
adc
fist
sbb
ret
or
(bad)
(bad)
jg
or
ror
lea
ds
push
rcr
mov
sub
mov
in
pop
adc
mov
or
mov
pop
or
xchg
or
adc
nop
outs
clc
(bad)
dec
icebp
or
clc
es
and
jne
sub
xor
inc
dec
jmp
inc
fcom
iret
add
xor
je
daa
pop
in
nop
inc
mov
cmp
(bad)
(bad)
mov
adc
sbb
loopne
or
div
int
loopne
leave
je
jg
lahf
retf
nop
icebp
call
cmp
out
pop
jmp
sbb
mov
call
or
mov
mov
pusha
je
or
cmp
jne
shl
pop
stos
adc
(bad)
(bad)
push
sbb
xchg
rcl
xchg
pop
pop
sub
inc
dec
mov
sbb
push
fcmovnb
stos
push
jnp
je
dec
movs
pop
add
fbld
(bad)
(bad)
out
clc
push
cld
push
mov
sahf
pop
dec
mov
sbb
mov
out
cmp
fwait
sub
pop
les
mov
mov
xchg
xchg
lock
sub
out
(bad)
(bad)
(bad)
inc
outs
adc
in
mov
push
pop
jmp
sub
add
lods
jecxz
retf
retf
(bad)
(bad)
(bad)
dec
fstp
pop
nop
inc
pusha
sbb
xor
sar
sahf
mov
and
add
mov
inc
mov
cwde
xchg
rol
fiadd
cld
sbb
cmps
test
xchg
jmp
clc
jmp
mov
retf
test
and
iret
push
mov
jge
dec
fsubr
add
imul
pop
mov
jnp
lock
(bad)
jg
mov
stc
retf
dec
pop
add
cs
daa
cmp
pop
push
pop
rol
(bad)
(bad)
dec
or
fdiv
test
mov
es
mov
dec
and
(bad)
(bad)
(bad)
in
sbb
fstp
dec
into
cmp
imul
inc
cmp
cmps
jge
retf
(bad)
call
mov
out
aad
int
sbb
(bad)
(bad)
(bad)
mov
dec
mov
int3
add
jo
and
movs
adc
xor
add
lea
mov
mov
sbb
xor
(bad)
(bad)
jmp
push
sbb
add
push
in
push
dec
push
push
add
add
nop
and
push
push
test
loop
(bad)
jmp
mov
pop
jno
cmp
add
pushf
jmp
daa
jmp
push
(bad)
repnz
(bad)
push
adc
call
inc
mov
cwde
cmp
fbld
(bad)
jg
jnp
jp
jns
iret
call
pop
aam
mov
jo
jb
jg
pop
push
xor
pop
cmp
mov
dec
(bad)
(bad)
(bad)
(bad)
cmp
dec
ins
pushf
pop
ficom
fs
out
pusha
lock
sbb
mov
or
dec
pop
and
imul
or
and
inc
int3
pop
xchg
push
jb
aaa
pusha
push
jns
mov
(bad)
imul
inc
jmp
push
fmul
out
push
inc
mov
pop
pop
add
call
xor
inc
dec
ror
pop
jl
push
pop
mov
out
add
leave
and
or
mov
inc
daa
movs
pop
mov
enter
(bad)
jnp
jge
jecxz
cmp
rcl
cmc
add
(bad)
(bad)
(bad)
cmp
arpl
dec
mov
retf
mov
dec
aam
xchg
pop
(bad)
(bad)
(bad)
call
rcl
add
out
xor
pop
mov
cmovge
sar
mov
xchg
push
data16
sub
adc
mov
(bad)
dec
push
(bad)
cmps
inc
adc
cmp
ja
clc
out
cli
shl
(bad)
(bad)
(bad)
call
push
cmp
(bad)
mov
mov
mov
sub
aad
pop
inc
mov
xchg
(bad)
fcomip
mov
mov
sbb
push
mov
es
pop
jmp
sar
adc
popa
add
or
into
push
imul
cli
or
pop
inc
imul
out
and
cmp
loope
cmc
inc
jae
dec
sti
push
mov
mov
cmps
scas
cli
(bad)
mov
pop
movs
fdivr
add
dec
in
dec
cld
fisttp
push
(bad)
(bad)
(bad)
jmp
push
sbb
xor
jmp
test
jecxz
dec
call
sub
mov
dec
and
inc
jecxz
cld
call
scas
fwait
bound
pop
and
inc
(bad)
(bad)
(bad)
mov
pusha
xor
stos
jp
aam
adc
push
mov
ror
call
mov
jb
in
add
mov
test
scas
jmp
fadd
ret
mov
(bad)
or
dec
jmp
push
add
mov
(bad)
(bad)
(bad)
dec
inc
(bad)
int
adc
inc
pop
aam
push
aas
dec
push
dec
or
(bad)
mov
xor
mov
(bad)
(bad)
jmp
push
fucompp
daa
mov
inc
push
clc
xchg
mov
inc
shr
sbb
sub
cwde
push
push
js
inc
or
xor
ret
jmp
pusha
or
mov
mov
popf
scas
mov
loope
(bad)
inc
xchg
mov
mov
jle
pop
cmps
int
cld
(bad)
(bad)
jg
popa
icebp
mov
(bad)
pop
or
add
dec
loopne
bound
aas
fstp
cs
adc
and
jne
fisubr
(bad)
jmp
mov
rcl
pop
inc
(bad)
ins
jmp
xor
fiadd
retf
aam
clc
sub
fadd
mov
(bad)
(bad)
fistp
aaa
je
or
aas
lock
and
jecxz
add
or
dec
loop
(bad)
(bad)
call
fadd
and
jne
pop
out
add
mov
imul
pop
mov
sub
cmp
cwde
cmc
jne
push
cmp
retf
imul
rsm
ret
or
into
ss
dec
(bad)
mov
into
data16
dec
mov
dec
adc
mov
sti
mov
lock
vmovsldup
add
(bad)
(bad)
jmp
inc
push
adc
test
int3
sbb
add
and
add
(bad)
(bad)
(bad)
(bad)
js
or
sub
nop
lods
dec
mov
dec
adc
pusha
fwait
enter
stos
fcos
(bad)
(bad)
(bad)
cmp
dec
int3
clc
cmp
push
inc
cwde
mov
jge
ds
xor
or
(bad)
adc
retf
cmp
push
lea
and
loop
sbb
adc
xlat
jg
pop
add
arpl
in
scas
add
inc
adc
fisttp
(bad)
(bad)
inc
sbb
dec
repnz
sbb
push
hlt
rol
psubsw
(bad)
in
xlat
test
lods
mov
or
mov
not
out
pop
mul
and
iret
repz
(bad)
js
jl
pop
(bad)
and
jmp
jno
(bad)
(bad)
inc
push
mov
ret
adc
shl
pop
add
xor
pop
test
jmp
pop
jbe
nop
mov
call
rol
sub
push
cmp
push
push
call
jg
(bad)
call
adc
add
ret
mov
xor
loop
push
pop
test
mov
add
(bad)
adc
adc
add
loop
mov
lock
mov
fiadd
je
test
cmp
mov
sub
inc
mov
add
inc
sub
fwait
mov
add
sbb
or
sbb
ss
pop
push
(bad)
xlat
pop
js
repnz
xlat
call
sbb
xchg
cmc
lahf
pop
pop
cmps
fistp
test
sbb
ret
mov
shr
lea
mov
inc
jb
cmp
and
clc
(bad)
jmp
dec
pop
mov
and
xor
loope
clc
dec
mov
ins
(bad)
call
push
sbb
or
pop
mov
imul
lock
test
and
call
mov
sti
lock
in
scas
cli
add
mov
shl
sbb
movlps
shr
cmp
adc
pop
add
arpl
mov
call
xchg
ss
cs
sub
shr
mov
iret
iret
pop
xor
add
(bad)
inc
or
add
ret
movs
or
les
and
dec
bound
nop
pop
test
es
dec
and
pop
gs
cld
(bad)
inc
or
add
add
xor
in
adc
(bad)
cli
jge
mov
inc
(bad)
(bad)
call
xlat
xchg
rcr
push
and
dec
mov
out
mov
push
call
dec
pusha
dec
sbb
sub
mov
cli
sub
add
sbb
jge
mov
test
out
and
leave
and
ror
xchg
ins
cmp
fiadd
dec
daa
(bad)
fld
lock
push
adc
movs
push
inc
fwait
loopne
(bad)
dec
jbe
fistp
adc
or
add
hlt
addr16
ret
jl
add
test
out
aas
push
(bad)
mov
inc
add
push
ret
mov
repz
fadd
loopne
or
and
ja
clc
bndldx
adc
add
sub
(bad)
(bad)
fistp
jne
mov
add
lods
sbb
push
sti
push
dec
push
add
(bad)
(bad)
inc
add
or
ss
daa
jmp
inc
lea
cmp
cmp
push
cwde
outs
xor
sbb
cld
jle
adc
mov
cli
clc
and
inc
cmp
out
push
(bad)
(bad)
(bad)
inc
sub
cmp
shl
mov
dec
mov
pop
add
xor
ss
pop
inc
jb
jecxz
pop
cmp
(bad)
(bad)
(bad)
call
add
push
dec
(bad)
sti
outs
sub
mov
rcr
sar
in
fld
xor
lods
pop
xchg
push
leave
sbb
enter
aaa
aaa
or
aad
jmp
mov
or
fwait
loope
es
adc
int3
mov
sub
mov
(bad)
inc
xor
sub
jge
or
mov
push
call
pop
cld
call
and
dec
scas
dec
ins
cmp
dec
fstp
jmp
repz
fwait
and
(bad)
cli
ret
xor
jnp
fs
mov
(bad)
jg
fimul
js
pop
sub
rol
fstp
xchg
push
and
adc
cmps
outs
adc
add
mov
cmp
pop
mov
(bad)
call
xor
pop
sahf
std
jle
and
jae
ret
sbb
pop
dec
(bad)
(bad)
(bad)
inc
and
push
test
and
sbb
pop
test
loope
push
pop
and
cld
(bad)
in
inc
lds
or
rcr
out
push
enter
mov
and
sub
call
inc
jge
push
je
aam
dec
mov
ret
mov
test
adc
dec
sar
(bad)
inc
inc
or
aas
add
inc
pop
lods
xchg
xchg
adc
es
or
outs
imul
add
jmp
lods
cmps
dec
xor
sub
in
fst
or
scas
mov
mov
lock
inc
xor
xor
retf
lea
loopne
mov
(bad)
(bad)
cmp
push
bound
add
mov
movs
adc
sub
jg
rol
fld
aas
and
mov
push
mov
ror
(bad)
(bad)
(bad)
jmp
loope
sbb
and
fist
or
pop
cmps
(bad)
daa
pushf
add
jg
add
(bad)
and
xor
aas
mov
push
inc
and
(bad)
(bad)
dec
dec
fadd
mov
je
and
sbb
inc
dec
xchg
sub
xor
pushf
loopne
ja
rol
or
(bad)
(bad)
inc
sti
lea
cmp
mov
mov
(bad)
fisubr
std
(bad)
(bad)
jmp
fcomp
sbb
fnstsw
arpl
ret
or
cmp
dec
or
nop
pop
inc
pop
aas
adc
push
sahf
cmp
lods
sbb
jbe
inc
mov
xchg
adc
inc
into
mov
add
pop
mov
(bad)
(bad)
inc
mov
ds
pop
mov
inc
mov
pusha
jmp
fmul
ret
iret
mov
(bad)
(bad)
inc
add
pop
shl
mov
daa
mov
and
ror
stos
cmp
push
adc
mov
sbb
adc
pop
xchg
push
push
push
or
jg
movs
out
and
xor
mov
mov
inc
and
inc
inc
inc
int3
jb
pop
pop
add
frstor
(bad)
jmp
sbb
jge
add
add
sbb
(bad)
(bad)
(bad)
dec
sbb
adc
mov
cli
loop
mul
adc
add
or
(bad)
push
add
sub
test
(bad)
bound
mov
mov
inc
push
inc
mov
(bad)
(bad)
mov
adc
mov
stc
out
or
cwde
inc
jecxz
add
dec
adc
add
push
mov
dec
jb
cmp
adc
ret
in
lock
mov
jbe
adc
jbe
in
adc
inc
push
sub
mov
cld
jbe
jne
inc
(bad)
call
cmp
push
call
inc
dec
adc
fwait
or
jne
jo
into
xchg
(bad)
(bad)
jmp
repnz
stc
mov
sbb
or
cmp
es
mov
cmp
mov
nop
sar
add
mov
in
dec
fidivr
sub
test
adc
retf
icebp
adc
sbb
(bad)
(bad)
inc
or
cs
mov
push
mov
lods
mov
dec
and
add
fadd
icebp
(bad)
jmp
js
and
xor
js
daa
add
in
(bad)
mov
ins
add
(bad)
(bad)
out
xor
jno
fist
imul
icebp
push
lahf
push
nop
cmp
push
(bad)
(bad)
(bad)
(bad)
ds
jge
jmp
mov
xchg
jl
mov
or
or
(bad)
call
adc
sti
enter
loope
push
or
and
xor
push
(bad)
call
mov
push
ret
dec
sbb
and
pop
daa
lea
jle
daa
sar
mov
adc
and
push
in
pop
mov
(bad)
push
inc
mov
xor
pop
add
push
test
(bad)
(bad)
stc
cmp
cmp
outs
sub
fdivr
subps
movs
fsubr
sbb
(bad)
jmp
imul
outs
mov
adc
xor
sbb
cs
fcmovb
jmp
fidivr
inc
sbb
icebp
xchg
(bad)
(bad)
(bad)
jmp
bound
adc
aaa
pushf
movs
cmp
push
cwde
hlt
mov
xlat
ret
xchg
sub
pusha
xor
frstor
inc
in
dec
mov
push
inc
or
aaa
cli
jg
(bad)
(bad)
adc
xchg
xchg
xchg
sub
loopne
ret
pop
ret
push
pop
fistp
mov
cdq
call
jmp
clc
(bad)
(bad)
stc
rcr
scas
dec
fcomp
pop
ds
mov
sbb
mov
(bad)
dec
enter
shl
aad
imul
call
dec
sub
pop
stos
pop
ins
xor
das
shl
push
push
repnz
fstp
outs
xchg
cmc
call
cmp
out
add
(bad)
(bad)
(bad)
jmp
cmps
scas
jnp
sub
ja
test
sub
repz
xor
pop
fld
dec
(bad)
(bad)
(bad)
jmp
or
shl
arpl
in
hlt
pop
xlat
ret
sub
mov
sti
add
or
nop
pop
icebp
(bad)
(bad)
jmp
or
adc
mov
mov
add
test
mov
mov
xor
pop
icebp
popf
ret
cwde
dec
or
test
(bad)
mov
mov
cmp
je
sbb
(bad)
jg
dec
(bad)
pop
sub
hlt
sbb
ret
dec
iret
ss
pushf
cmp
(bad)
sti
sbb
adc
mov
les
adc
jmp
mov
out
mov
aam
mov
popa
sub
fdivr
(bad)
(bad)
(bad)
stc
mov
test
sbb
arpl
pop
add
jl
mov
pop
movs
and
(bad)
(bad)
(bad)
push
push
push
cmp
push
dec
ds
out
adc
cmp
inc
stos
stos
ret
out
add
pop
mov
adc
(bad)
call
push
add
pushf
sbb
jmp
mov
clc
sti
and
pop
test
call
std
mov
repz
and
arpl
es
leave
aas
sbb
cwde
and
(bad)
(bad)
(bad)
(bad)
fcomp
and
sbb
jmp
jmp
inc
ins
adc
dec
les
pop
cwde
(bad)
(bad)
(bad)
(bad)
jmp
or
pop
mov
lods
mov
xchg
test
jmp
xor
fisubr
xor
out
cmp
jp
sbb
add
cmp
fwait
cmp
mov
jle
mov
or
lock
sub
push
sahf
int3
or
cld
sbb
sti
int3
fld
jle
xchg
(bad)
(bad)
fld
xor
pop
adc
(bad)
mov
(bad)
(bad)
(bad)
push
xchg
push
adc
and
xchg
sbb
(bad)
in
enter
outs
das
pop
adc
(bad)
and
add
add
cmp
(bad)
push
inc
sbb
pop
xor
mov
ret
fimul
(bad)
inc
call
call
add
or
movs
(bad)
mov
mov
rol
dec
sti
stc
sub
fld
jne
adc
retf
fild
ss
jmp
mov
mov
repnz
jns
push
scas
inc
push
push
cli
cmp
loopne
lods
inc
xchg
lgs
aaa
rcr
and
push
inc
or
inc
mov
cmp
repnz
push
scas
cmp
retf
inc
xchg
inc
jle
addr16
jl
sahf
loopne
push
outs
mov
pop
dec
or
mov
sub
push
fwait
cmp
adc
xor
bound
or
aaa
inc
mov
lods
jg
add
push
cs
mov
lds
adc
inc
movs
(bad)
(bad)
(bad)
jmp
xlat
add
int
dec
int
leave
or
sar
inc
add
xor
fwait
iret
cmp
call
mov
sti
sub
jle
xor
add
neg
xchg
test
push
inc
xchg
sbb
fs
push
mov
mov
jge
adc
scas
clc
(bad)
dec
add
movs
sbb
dec
out
dec
and
jge
scas
or
(bad)
(bad)
inc
inc
dec
cs
dec
dec
push
aad
outs
mov
pop
cdq
and
xor
pusha
loop
(bad)
(bad)
dec
lock
(bad)
das
mov
add
inc
ret
lods
adc
cmp
das
mov
push
or
mov
(bad)
(bad)
cmc
test
(bad)
(bad)
sub
xor
lahf
or
clc
pop
add
es
sti
mov
mov
and
(bad)
(bad)
(bad)
jg
repz
sbb
in
je
lock
adc
push
arpl
out
(bad)
aad
and
mov
jecxz
jmp
ins
mov
jbe
inc
mov
fild
fwait
push
dec
xor
adc
cmp
inc
sub
clc
aam
jne
fcomp
(bad)
(bad)
(bad)
call
inc
jmp
xor
repnz
add
cmp
mov
push
in
xchg
add
inc
jmp
ins
pusha
add
test
scas
call
call
das
add
pop
mov
mov
mov
retf
(bad)
push
ss
or
xchg
cmps
pop
sbb
jo
(bad)
(bad)
call
pusha
(bad)
sbb
pop
add
push
js
fild
jge
cmp
sbb
mov
sbb
mov
pusha
xor
(bad)
jmp
ss
scas
or
push
mov
loopne
retf
or
mov
movs
(bad)
(bad)
(bad)
push
cmp
movs
add
add
fucomi
ins
push
pop
jmp
sbb
jne
jmp
add
dec
std
(bad)
dec
fmul
jmp
test
(bad)
jg
jp
sbb
mov
or
jmp
sub
shr
add
clc
(bad)
call
pushf
ja
js
push
retf
bound
in
pusha
xchg
(bad)
sub
inc
out
push
xor
(bad)
fcom
or
cli
sti
loopne
dec
aad
pushf
push
dec
inc
cmp
call
sahf
lock
add
dec
sahf
pop
pusha
cs
iret
outs
jno
push
pop
inc
pop
cld
out
movs
test
fidiv
ja
addr16
cli
(bad)
inc
xchg
sbb
aaa
ja
sbb
adc
sub
in
dec
inc
sar
fbld
dec
or
int3
pushf
outs
mov
sbb
rol
push
mov
call
sahf
mov
dec
xor
sub
loopne
mov
and
(bad)
(bad)
jmp
out
in
das
(bad)
scas
inc
das
sub
xor
pop
test
dec
jmp
ss
sbb
sar
int
xor
mov
xchg
mov
add
clc
push
or
and
xor
dec
add
scas
mov
or
jmp
fsubr
das
xchg
(bad)
mov
cmp
mov
adc
outs
cli
mov
pop
mov
add
mov
xchg
hlt
xchg
xor
(bad)
(bad)
dec
jg
out
add
call
inc
icebp
in
(bad)
cmp
and
dec
adc
sbb
aam
xchg
push
cs
nop
add
jae
cmps
add
dec
loope
jmp
sbb
push
xchg
inc
aaa
rol
pop
cwde
push
add
bound
js
leave
(bad)
pop
sub
int3
xor
fsubr
retf
ror
dec
shr
jmp
inc
mov
pop
ja
and
jmp
or
push
jge
stos
and
add
ds
inc
dec
mov
jmp
add
jo
mov
fsub
pop
sbb
and
shld
jno
pop
lock
mov
mov
mov
sub
xchg
xchg
out
fimul
jnp
sbb
dec
and
(bad)
(bad)
(bad)
fild
push
jo
sbb
or
or
mov
fdivr
sub
out
es
leave
clc
(bad)
jmp
mov
je
push
push
push
dec
data16
mov
xchg
push
mov
(bad)
repz
les
adc
ss
es
(bad)
sbb
cmp
and
or
(bad)
mov
add
dec
pop
push
inc
loopne
(bad)
hlt
(bad)
add
popf
xor
mov
(bad)
jmp
inc
dec
or
mov
call
or
or
fst
push
cdq
clc
jmp
mov
dec
add
jmp
cmp
(bad)
(bad)
(bad)
mov
fidivr
into
inc
and
add
mov
mov
add
xchg
cld
jbe
out
ror
inc
adc
fstp
jp
dec
aas
cld
ds
call
icebp
xchg
shl
mov
enter
icebp
(bad)
mov
int3
sub
ret
ret
fidiv
inc
shr
adc
ss
inc
mov
mov
and
(bad)
(bad)
inc
(bad)
dec
sar
daa
push
dec
xchg
cmp
push
int
lahf
cli
aad
cmp
and
pop
(bad)
inc
or
enter
and
pop
out
cmp
xchg
js
(bad)
(bad)
(bad)
jmp
push
xor
jbe
loop
lods
sub
enter
lods
xor
add
xor
sbb
(bad)
(bad)
inc
add
and
test
add
out
push
leave
or
xor
(bad)
(bad)
jg
ror
adc
cmp
aam
xor
call
jl
in
adc
scas
(bad)
jmp
and
jbe
rcr
les
jl
js
lds
(bad)
(bad)
js
and
pop
mov
xchg
add
sar
mov
jecxz
push
or
popa
mul
push
xchg
xchg
pop
(bad)
jmp
aas
nop/reserved
mov
cs
and
jno
mov
pop
jmp
push
ret
pusha
and
jcxz
mov
outs
inc
(bad)
(bad)
(bad)
inc
or
rcr
stos
add
lds
lds
inc
hlt
les
adc
loopne
dec
and
outs
pop
shr
mov
mov
lock
icebp
or
xchg
ret
(bad)
push
idiv
call
mov
push
pop
adc
push
adc
mov
jnp
mov
(bad)
lahf
fild
(bad)
(bad)
call
pushf
mov
into
js
outs
and
mov
cmp
repnz
mov
test
add
js
mov
xchg
(bad)
(bad)
(bad)
mov
cmp
or
jb
mov
cs
mov
ja
in
(bad)
jg
(bad)
movs
cmp
add
pop
or
mov
push
imul
arpl
icebp
fwait
push
mov
pop
js
jne
or
or
adc
jo
inc
(bad)
(bad)
jmp
inc
sub
cmps
cmps
or
fwait
xor
xlat
adc
or
(bad)
call
add
or
and
xor
(bad)
(bad)
call
inc
nop
imul
or
js
sbb
add
mov
sar
sub
stos
adc
xchg
sub
call
xor
add
jb
push
sbb
pop
xchg
(bad)
(bad)
(bad)
inc
jp
cmp
(bad)
scas
or
pop
loope
add
push
mov
(bad)
pop
sbb
lea
aas
lods
mov
sub
mov
lahf
push
add
(bad)
xor
(bad)
inc
mov
in
sub
push
inc
arpl
outs
cmp
(bad)
in
inc
imul
add
ret
lock
inc
or
dec
sub
rol
cmp
add
cmp
js
shl
int
lock
cmp
ret
ins
jmp
mov
clc
(bad)
(bad)
dec
es
and
mov
or
retf
enter
add
ret
adc
cmp
test
add
push
int3
mov
pop
test
xor
add
sub
das
mov
add
(bad)
(bad)
mov
or
lahf
mov
xchg
jp
lahf
add
pop
icebp
mov
cs
jo
pop
mov
inc
iret
std
cdq
add
(bad)
call
pop
mov
and
push
mov
stos
rol
jb
(bad)
(bad)
(bad)
mov
inc
mov
fist
xor
add
or
cs
arpl
jns
sbb
(bad)
sbb
(bad)
(bad)
inc
les
or
xor
push
sar
jp
movs
(bad)
or
fistp
jmp
push
xchg
add
es
adc
or
es
mov
mov
dec
xor
sti
inc
sub
(bad)
inc
push
arpl
in
or
or
icebp
xchg
xchg
div
push
sbb
mov
jmp
mov
dec
(bad)
out
shl
adc
adc
xchg
test
and
daa
ror
add
sub
add
cmp
and
(bad)
(bad)
aas
sti
cmp
cmp
dec
pop
test
push
jnp
jg
adc
xchg
pop
xor
mov
(bad)
(bad)
(bad)
push
and
ss
repnz
mov
or
or
(bad)
jecxz
jo
push
cmp
adc
or
sub
cmp
jmp
iret
jg
sbb
jle
mov
or
mov
(bad)
adc
int3
sar
lock
or
cli
sub
mov
pushf
inc
pop
mov
xchg
(bad)
mov
stos
sar
adc
add
fcmovu
dec
std
in
mov
mov
sub
dec
xlat
add
dec
push
or
sub
pop
pop
cmp
imul
or
adc
outs
and
sbb
xor
idiv
(bad)
call
sub
lea
(bad)
xor
call
dec
dec
ret
icebp
aad
(bad)
push
std
dec
push
add
dec
pop
pop
add
js
dec
inc
and
out
imul
adc
pop
add
lods
mov
test
push
std
pop
ret
ret
mov
add
xlat
mov
outs
mov
xor
xchg
xchg
cmp
fist
(bad)
(bad)
call
data16
stos
mov
retf
push
add
pop
sub
adc
(bad)
(bad)
call
or
jmp
jp
arpl
in
xor
hlt
sbb
pop
and
sbb
fimul
adc
sbb
mov
pop
pop
sbb
jbe
fisub
inc
(bad)
jg
cmc
mov
ret
xor
cli
xchg
in
fdiv
mov
inc
mov
lock
lock
mov
xchg
(bad)
(bad)
(bad)
dec
dec
jecxz
fistp
push
fild
jl
adc
in
(bad)
(bad)
(bad)
call
inc
dec
or
xchg
push
clc
aam
mov
mov
in
and
nop
(bad)
(bad)
(bad)
push
loopne
lock
dec
fnstenv
sub
loop
xchg
push
adc
pop
mov
(bad)
(bad)
(bad)
call
movs
es
sub
jno
test
cmp
pop
add
or
push
sbb
(bad)
jmp
inc
(bad)
arpl
add
(bad)
adc
loope
(bad)
sub
clc
inc
(bad)
inc
loop
cmps
jno
inc
inc
mov
(bad)
xor
and
fbstp
xchg
in
add
sar
into
scas
push
lods
jmp
(bad)
(bad)
(bad)
(bad)
mov
shl
dec
adc
idiv
dec
xchg
dec
and
and
mov
call
std
xor
popf
adc
or
adc
retf
rcr
(bad)
jl
cmp
loope
lods
pop
int
push
adc
call
push
or
dec
repnz
pop
mov
adc
xchg
mov
mov
shl
mov
fwait
xlat
(bad)
(bad)
call
mov
push
shr
add
jno
push
dec
test
call
and
add
adc
mov
xchg
test
int3
adc
mov
inc
xchg
xor
dec
jmp
and
test
push
mov
es
dec
test
add
adc
pop
in
lods
call
jg
dec
xor
shl
cmp
dec
jmp
lea
nop
inc
out
sbb
mov
test
outs
cli
adc
inc
sahf
adc
sbb
iret
dec
add
ins
lahf
sti
data16
mov
call
pop
fldenv
jb
les
and
cli
shr
aad
mov
mov
(bad)
mov
dec
rcl
pop
dec
mov
or
mov
xchg
pop
adc
sar
movs
test
mov
cmp
mov
cmp
sbb
aas
xor
test
(bad)
mov
cmp
add
loopne
(bad)
jo
pop
dec
pop
add
(bad)
pop
pop
cmc
aad
les
iret
jmp
mov
imul
inc
dec
(bad)
out
adc
adc
dec
dec
push
add
loop
(bad)
(bad)
(bad)
push
rol
push
mov
or
adc
ror
ret
xlat
inc
cmp
test
or
lea
mov
lods
cmps
(bad)
(bad)
(bad)
jmp
std
fwait
pop
in
mov
and
shl
push
sbb
push
mov
ins
test
dec
(bad)
(bad)
(bad)
push
mov
mov
jbe
mov
shl
das
inc
sbb
push
mov
(bad)
(bad)
call
call
inc
and
pusha
fild
sbb
test
sbb
cmp
mov
pop
into
ret
int3
ins
ins
call
ins
je
inc
or
jbe
xor
push
loop
lahf
xchg
cld
sbb
sbb
(bad)
(bad)
inc
fst
movs
mov
mov
and
ja
imul
push
push
sbb
push
dec
adc
sbb
or
out
clc
ds
adc
inc
xchg
push
mov
adc
mov
push
push
or
sar
inc
xchg
push
add
push
inc
mov
test
adc
inc
jle
int3
sbb
dec
imul
(bad)
(bad)
jg
sub
sub
add
jecxz
imul
sbb
dec
sbb
clc
(bad)
(bad)
dec
mov
fistp
push
pop
enter
lods
adc
(bad)
pusha
mov
(bad)
(bad)
jg
loopne
adc
cld
loope
jbe
imul
jmp
(bad)
fcomip
sbb
adc
adc
test
lahf
sbb
test
cld
(bad)
push
cwde
cmp
int
and
sub
dec
or
(bad)
jg
ror
or
aas
dec
mov
mov
(bad)
js
cmp
(bad)
(bad)
(bad)
in
int
mov
adc
mov
add
or
loop
xchg
pop
jbe
xchg
push
mov
cmp
jmp
dec
add
inc
sub
sbb
(bad)
(bad)
(bad)
push
pop
or
cmp
adc
leave
clc
test
movs
xchg
or
fwait
pop
das
xchg
add
adc
jo
(bad)
(bad)
push
jl
cmp
xchg
and
adc
inc
inc
retf
push
popf
mov
sub
int3
or
je
mov
(bad)
(bad)
jg
dec
loopne
sbb
sbb
repnz
jmp
cmp
int
jp
sub
sahf
je
add
dec
cli
pop
jg
jno
add
sbb
jg
ror
lock
cmp
ss
xchg
int3
mov
cmovs
dec
jecxz
stos
cmc
jne
(bad)
(bad)
call
and
cmp
cmps
inc
sub
or
xor
(bad)
(bad)
jg
and
loope
xchg
arpl
mov
ja
push
sbb
lea
clc
(bad)
jmp
aad
mov
int
retf
xor
inc
sub
mov
mov
push
mov
ret
(bad)
pop
xor
call
test
je
(bad)
sub
and
fs
mov
ins
push
test
jle
adc
adc
cmp
add
or
stos
jle
or
aaa
in
ret
push
scas
mov
test
inc
mov
cli
stos
and
cmp
mov
(bad)
xor
(bad)
fcomip
xor
push
test
mov
fs
in
ret
inc
and
ins
movntq
sub
sbb
xor
cmp
out
adc
xor
pop
loopne
jg
or
out
add
add
xchg
fcomp
push
xchg
clc
(bad)
(bad)
push
in
xor
aaa
adc
push
adc
ins
bound
xor
dec
push
and
inc
retf
arpl
fistp
and
push
sbb
(bad)
(bad)
dec
fist
imul
pop
loop
pop
add
add
test
jno
shl
xor
loopne
fwait
(bad)
(bad)
(bad)
inc
or
pushf
or
ins
xor
gs
and
jns
mov
inc
sar
(bad)
(bad)
cmp
push
das
and
mov
out
inc
ins
push
loopne
mov
(bad)
call
test
shl
(bad)
push
mov
pusha
mov
popa
xor
jne
(bad)
jg
sbb
scas
ror
fidivr
sub
ror
or
and
(bad)
(bad)
push
jne
sub
push
jo
mov
js
adc
push
or
test
sar
lock
fiadd
test
daa
push
iret
or
(bad)
(bad)
mov
push
mov
pop
ja
cmp
je
stc
sub
jg
(bad)
cmp
push
pop
ins
adc
push
mov
sbb
sbb
jo
dec
bound
add
push
sbb
mov
mov
or
(bad)
call
pusha
jno
cmp
sbb
dec
and
add
ror
(bad)
ins
push
pop
xor
shl
(bad)
jmp
push
pop
fadd
out
mov
adc
xchg
jns
lock
mov
lods
mov
cli
push
leave
ret
mov
mov
pop
ret
movs
jnp
(bad)
sub
mov
pop
shl
movs
push
movs
mov
inc
mov
or
(bad)
(bad)
call
and
mov
or
push
cmp
xchg
xor
jg
(bad)
clc
(bad)
jmp
adc
cmp
call
push
mov
sub
xor
das
jbe
inc
mov
xor
cld
jg
call
xor
add
lds
jae
scas
sub
mov
push
(bad)
(bad)
push
rcr
ja
cwde
pop
pop
add
cmps
push
or
cmp
imul
(bad)
(bad)
(bad)
cmp
dec
ret
cmp
lock
push
push
pop
or
xchg
out
in
jns
add
(bad)
(bad)
mov
cli
push
dec
and
nop
int
or
pusha
nop
out
ja
(bad)
(bad)
call
bnd
out
pop
call
loope
adc
in
add
fstp
adc
gs
fdiv
lock
test
cmp
lds
in
or
mov
sub
or
cli
add
fcmovne
cmp
dec
inc
cld
cmp
outs
or
adc
mov
pop
mov
jecxz
sahf
add
mov
ret
(bad)
jg
jmp
rol
cmps
popa
dec
sub
and
(bad)
mov
cdq
enter
lahf
jbe
jmp
or
loop
mov
or
or
cmp
enter
(bad)
push
call
and
cmp
sub
push
(bad)
(bad)
(bad)
(bad)
dec
popa
and
xchg
jl
xor
and
stos
fist
(bad)
mov
stos
iret
jle
jne
adc
dec
dec
(bad)
(bad)
(bad)
inc
rcl
adc
sub
mov
xor
cmp
and
inc
and
pop
(bad)
(bad)
(bad)
(bad)
call
pop
mov
icebp
cdq
xchg
loopne
jo
xor
xchg
push
ret
test
adc
mov
push
push
call
inc
iret
add
adc
push
xor
mul
push
loopne
sub
mov
sub
sbb
push
xor
(bad)
(bad)
fild
xchg
js
pusha
dec
aaa
lea
out
jge
sbb
cmp
sbb
cld
das
mov
cmc
cmps
inc
dec
jge
rcl
retf
xchg
pop
xor
(bad)
inc
mov
mov
aaa
mov
pop
test
icebp
mov
xor
mov
into
ins
or
push
nop
adc
inc
js
jmp
add
mul
sahf
movs
cmp
xchg
(bad)
pop
popf
or
out
xchg
cmp
or
mov
leave
rep
iret
cmp
mov
(bad)
call
mov
push
inc
and
lods
push
sbb
loope
mov
xor
stc
int3
push
call
pusha
lds
les
or
fwait
mov
(bad)
dec
sahf
mov
pop
cmp
sbb
dec
test
mov
leave
add
lods
push
add
(bad)
xchg
mov
fcomip
dec
dec
cmp
inc
and
xor
add
fidiv
cmp
repz
and
add
(bad)
(bad)
(bad)
(bad)
jns
sub
inc
test
push
push
cmp
xchg
mov
mov
xchg
icebp
(bad)
inc
aas
or
or
shr
jb
sbb
(bad)
dec
mov
pop
add
pusha
ins
cmp
dec
ss
mov
or
sbb
(bad)
(bad)
push
arpl
out
test
push
jne
aam
inc
xchg
cmp
jae
imul
(bad)
jg
push
scas
adc
mov
sbb
mov
add
(bad)
call
push
or
pop
add
mov
adc
movs
test
retf
mov
push
sub
pusha
je
cmp
(bad)
(bad)
inc
cmp
push
je
imul
es
jmp
xor
sbb
mov
or
sbb
adc
mov
push
or
pop
out
mov
cmp
push
or
sub
jo
xor
pop
repnz
fistp
les
sub
mov
pusha
sar
neg
rcl
inc
enter
inc
push
je
or
out
jb
call
movs
je
jbe
and
jmp
inc
jo
push
xchg
sub
push
inc
sbb
sub
push
fdivr
call
push
xor
ficom
dec
mov
ja
sub
jmp
test
loopne
xchg
test
sahf
fld
inc
dec
dec
add
lock
jne
rcl
dec
enter
inc
ins
ja
(bad)
(bad)
jmp
ret
xor
arpl
sub
fadd
add
jecxz
in
dec
ret
mov
stc
movs
jmp
test
lea
lds
imul
mov
(bad)
(bad)
inc
add
aaa
fild
(bad)
in
pusha
push
dec
fistp
push
sbb
sub
fs
and
add
and
pop
or
pop
fwait
ja
xchg
(bad)
jmp
popf
add
mov
out
ins
lods
js
pop
js
add
push
(bad)
adc
(bad)
inc
outs
dec
cmp
mov
or
adc
loope
add
loopne
lahf
imul
(bad)
cmp
movs
adc
cmp
ror
nop
pop
sub
sbb
lods
mov
inc
in
int3
xchg
cwde
(bad)
(bad)
inc
pop
push
push
sbb
test
pop
or
or
push
lds
(bad)
(bad)
(bad)
cmp
pusha
mov
hlt
lea
cld
cld
popa
sbb
xchg
pushf
fs
out
xchg
(bad)
nop
adc
sbb
mov
cmp
(bad)
push
jg
sti
ins
arpl
inc
add
or
jmp
push
lods
pop
dec
clc
add
dec
xor
add
(bad)
jg
mov
sub
mov
mov
mov
mov
test
dec
dec
add
inc
dec
add
jg
je
sti
mov
(bad)
(bad)
jg
cmp
mov
rcr
inc
cdq
inc
push
sub
add
out
add
adc
jmp
xor
push
into
dec
pop
daa
jmp
cmps
mov
stos
cmp
(bad)
(bad)
(bad)
fiadd
pop
mov
push
sbb
ror
pop
xor
not
push
pop
lock
nop
mov
(bad)
(bad)
(bad)
js
jl
out
imul
js
jbe
sub
call
fistp
(bad)
push
movs
push
mov
xlat
scas
sahf
add
popf
add
dec
loop
aas
push
push
adc
enter
fisttp
adc
inc
mov
loope
scas
mov
mov
mov
pop
cwde
jp
int3
adc
adc
and
(bad)
jmp
js
adc
dec
lock
push
mov
pop
imul
adc
jg
and
rol
sub
loopne
xor
call
add
ins
dec
push
xor
mov
loopne
adc
sub
test
push
es
dec
add
sbb
(bad)
or
(bad)
(bad)
(bad)
inc
ins
clc
js
jno
cmc
jno
add
sbb
add
aaa
ins
mov
movs
je
pop
(bad)
(bad)
(bad)
(bad)
jns
xchg
fcmove
xor
sub
out
adc
inc
xchg
push
cmp
jmp
add
add
push
adc
jmp
and
sub
bound
xor
pop
test
mov
xchg
call
add
pusha
jne
add
outs
enter
sbb
(bad)
(bad)
inc
xor
sbb
stos
pop
dec
cmp
add
(bad)
cmp
or
in
add
push
cmp
mov
inc
sbb
pop
fisub
dec
sub
mov
fcomip
fnstsw
push
mov
sub
cmp
enter
sar
ror
pop
push
shl
cli
ss
ret
or
inc
pop
jle
mov
ds
xor
imul
ret
(bad)
(bad)
(bad)
jg
add
(bad)
nop
out
cli
add
in
int
pop
or
ds
ins
sbb
mov
pop
les
pusha
or
lds
pop
cmp
push
adc
xor
adc
jmp
mov
or
sub
je
or
int3
push
jne
mov
ss
(bad)
inc
cmp
out
outs
std
jl
loopne
inc
cmp
mov
fisttp
lea
jb
add
(bad)
jmp
into
pop
in
jmp
jg
pop
(bad)
jmp
mov
(bad)
(bad)
(bad)
(bad)
dec
int3
sahf
or
mov
div
cmp
sub
jbe
add
cli
(bad)
(bad)
push
mov
adc
jb
adc
(bad)
push
repz
jle
ins
pop
pop
inc
inc
push
push
int3
(bad)
(bad)
jmp
mov
sar
sub
sbb
push
jle
lock
sub
xor
jmp
idiv
stos
je
jl
inc
jmp
push
xor
cmp
je
mov
cmp
mov
jmp
jmp
icebp
(bad)
(bad)
(bad)
call
ja
mov
fmul
push
or
test
stc
sub
add
jmp
call
je
das
inc
sbb
enter
cmp
ins
repz
cmp
(bad)
(bad)
jmp
mov
ror
push
push
jo
jb
in
(bad)
cmp
pusha
int
jno
adc
(bad)
jg
mov
ja
jl
push
loopne
or
stos
push
aas
adc
(bad)
(bad)
fiadd
xchg
inc
adc
mov
add
jbe
sub
add
jmp
icebp
mov
xchg
scas
sub
retf
and
sub
(bad)
(bad)
push
in
ss
adc
mov
or
and
sti
enter
jmp
cmp
retf
add
dec
icebp
(bad)
(bad)
jmp
ins
xor
neg
or
push
sub
and
adc
scas
xchg
int
imul
inc
xor
ds
(bad)
mov
stos
aad
push
(bad)
dec
jo
mov
dec
scas
jmp
shl
cs
add
(bad)
(bad)
dec
add
fsub
jne
or
leave
add
ret
sti
add
jmp
xchg
retf
(bad)
(bad)
(bad)
jmp
dec
mov
hlt
hlt
imul
leave
cmps
sub
pushf
inc
push
(bad)
ficomp
sub
or
imul
pop
imul
(bad)
(bad)
dec
test
or
repz
addr16
pop
ret
xor
ficomp
push
imul
shr
aam
push
jge
lea
jns
test
push
cmp
xor
dec
(bad)
(bad)
(bad)
dec
add
leave
mov
mov
push
out
sti
stos
ja
neg
je
jb
cwde
lods
cmp
jg
mov
lahf
pop
lea
pop
dec
mul
mov
mov
mov
(bad)
call
(bad)
repz
(bad)
lods
loope
and
loope
adc
test
mov
ret
or
call
(bad)
out
mov
jmp
jmp
or
dec
ret
js
sti
stc
mov
mov
dec
push
adc
das
sbb
pop
pop
push
call
outs
sbb
mul
jmp
and
cmp
adc
rol
les
add
adc
push
xchg
fmul
(bad)
call
pop
cmp
jmp
xchg
fmul
adc
mov
inc
jmp
inc
mov
loopne
loopne
push
pop
push
fsub
(bad)
das
xchg
or
jbe
adc
sbb
dec
pop
clc
jecxz
fnstsw
shufps
hlt
xor
cmp
(bad)
pop
inc
loop
dec
mov
cs
sbb
(bad)
push
mov
mov
sub
jp
pusha
pop
or
mov
cld
jg
push
xor
jns
and
(bad)
(bad)
(bad)
jg
out
(bad)
or
sti
lock
cli
jmp
mov
addr16
js
movs
leave
loop
and
dec
jmp
mov
(bad)
(bad)
(bad)
inc
je
jo
shl
sbb
mov
dec
and
inc
pop
sti
adc
call
sbb
adc
sbb
retf
(bad)
adc
fistp
dec
pop
and
cdq
inc
idiv
fisub
sbb
retf
pop
push
rcl
popf
ins
sar
push
std
cdq
xor
jne
xlat
dec
pusha
sbb
sub
pop
inc
ins
fwait
mov
push
and
dec
adc
or
inc
outs
cdq
repnz
sub
ds
js
hlt
gs
push
inc
dec
cmp
dec
cmovge
(bad)
push
mov
les
or
mov
cmps
cwde
sub
add
dec
(bad)
jmp
mov
mov
sub
add
outs
adc
(bad)
(bad)
(bad)
push
outs
pop
pop
inc
cmp
cmps
xchg
ss
cmp
test
and
xor
enter
(bad)
sbb
pop
(bad)
push
add
push
xchg
xlat
cmc
or
xor
mov
clc
pushf
add
jno
ins
mov
(bad)
(bad)
inc
pop
pop
push
adc
xchg
pop
pop
mov
jno
pop
arpl
add
frstor
add
inc
xchg
jb
fdivr
(bad)
(bad)
jg
xor
sbb
js
adc
push
shl
out
xlat
adc
add
in
das
inc
aaa
xchg
push
inc
icebp
std
ja
test
ja
leave
jbe
adc
outs
(bad)
jg
push
jg
mov
adc
push
mov
rcl
mov
es
loopne
hlt
cdq
ins
pop
inc
cmp
dec
mov
mov
ret
aaa
and
sbb
pop
out
fiadd
inc
sbb
(bad)
jmp
push
xor
xor
sbb
bound
shr
add
es
jl
xor
(bad)
push
dec
jmp
cli
pop
les
sbb
jecxz
add
xor
fld
sti
(bad)
(bad)
(bad)
fistp
sbb
lea
outs
sub
stc
adc
and
ret
xlat
stc
cmovne
ins
dec
and
sub
mov
jg
or
sub
mov
push
jnp
(bad)
out
push
mov
shl
sub
cmp
mov
(bad)
(bad)
(bad)
dec
inc
dec
movs
xchg
jne
nop
and
imul
in
enter
(bad)
(bad)
(bad)
(bad)
inc
xor
pop
pop
rol
jecxz
mov
(bad)
xchg
dec
pop
nop
sar
int
cmp
cmps
lock
mov
das
cli
(bad)
inc
dec
adc
pop
test
(bad)
jns
cmp
pop
repz
(bad)
jl
repz
(bad)
dec
pop
icebp
sbb
dec
call
ss
ficom
call
add
into
(bad)
fld
cld
(bad)
call
add
xor
push
fisub
in
or
cmps
out
call
stos
mov
and
scas
mov
in
add
add
mov
mov
push
mov
fidiv
outs
sbb
or
xchg
test
rcr
push
xchg
inc
ret
sti
fnstcw
pusha
push
push
adc
mov
fnstsw
or
les
clc
fs
sub
sub
loope
shl
mov
pop
dec
loop
push
push
cmp
enter
aaa
repnz
lock
sub
or
call
int3
outs
pop
inc
and
mov
mov
aaa
rcl
add
in
aas
push
adc
xchg
sar
pop
ss
mov
sbb
cld
loop
or
cdq
cmp
hlt
jo
ins
mov
call
sub
jmp
aaa
in
stos
push
add
stc
gs
jmp
fsub
sti
jmp
cmp
add
mov
or
(bad)
daa
pop
add
xchg
add
add
stos
push
or
push
sub
nop
push
xchg
jnp
call
mov
iret
repz
(bad)
call
int3
rcr
add
jecxz
les
push
xor
pop
nop
xchg
dec
sub
lock
(bad)
(bad)
(bad)
push
or
cli
add
sti
add
fisttp
or
call
push
inc
imul
adc
(bad)
in
adc
push
and
pop
sub
pop
pushf
(bad)
(bad)
call
inc
inc
sbb
lods
inc
inc
test
and
jg
nop
enter
push
icebp
(bad)
(bad)
in
outs
imul
dec
cmp
pop
add
push
push
mov
jg
scas
(bad)
jg
rol
pop
xor
pop
dec
cmp
in
fidiv
out
cli
sbb
xor
add
sub
push
icebp
adc
movs
fsubr
(bad)
(bad)
(bad)
inc
ins
mov
jae
scas
adc
lea
loope
add
inc
sbb
inc
mov
jg
add
out
pop
and
sub
test
out
mov
inc
mov
ret
cmc
(bad)
call
xor
out
mov
and
sahf
addr16
and
mov
or
bnd
push
push
repnz
adc
test
push
inc
ss
push
call
pop
mov
call
inc
jns
cmovg
adc
cld
fisttp
dec
out
push
xchg
call
adc
sahf
adc
or
jl
popa
icebp
cmp
repz
test
sub
adc
xchg
lock
out
add
clc
(bad)
(bad)
jmp
add
es
pop
mov
mov
popf
ins
fs
stc
sub
xchg
(bad)
fsubp
adc
pusha
jmp
jle
(bad)
ret
jg
fcomip
ins
add
dec
ret
hlt
mov
dec
not
(bad)
call
fcomp
imul
cmp
and
mov
jo
sub
sub
push
push
sbb
clc
int3
inc
out
(bad)
(bad)
call
mov
out
lea
cmp
nop
push
sahf
mov
sub
ss
test
jne
push
mov
ins
out
push
or
jle
xor
fisub
sub
adc
cld
(bad)
jmp
mov
cwde
adc
(bad)
push
adc
jp
dec
hlt
xchg
add
push
cmc
push
jp
add
mov
sbb
mov
xchg
retf
retf
push
mov
mov
(bad)
(bad)
(bad)
inc
mul
mov
xchg
jge
mov
cmp
outs
out
addr16
cmp
(bad)
(bad)
(bad)
push
out
sbb
jg
adc
pop
sub
xchg
cmps
mov
aam
cld
jmp
xor
fdivr
mov
pop
fwait
daa
dec
sub
dec
dec
and
loopne
push
fadd
dec
in
push
inc
cs
(bad)
mov
(bad)
out
dec
inc
adc
dec
and
dec
pop
fisttp
jmp
add
sbb
call
leave
clc
lahf
(bad)
(bad)
(bad)
inc
pop
push
jns
es
add
daa
mov
(bad)
mov
ficom
add
push
(bad)
(bad)
inc
jns
call
add
mov
(bad)
(bad)
out
xchg
out
mov
add
iret
imul
pop
add
push
dec
(bad)
icebp
sub
or
or
(bad)
clc
mov
scas
or
push
rol
(bad)
jg
(bad)
call
stos
and
xor
dec
sbb
cli
fdivr
mov
pop
adc
inc
or
pop
inc
ret
movs
aaa
ror
adc
mov
(bad)
(bad)
call
or
nop
and
mov
or
retf
movaps
in
xchg
cli
dec
pop
mov
dec
adc
retf
outs
or
jmp
shr
adc
or
dec
js
fmul
imul
popa
(bad)
(bad)
inc
ret
loope
push
psubw
inc
push
dec
xor
push
sub
and
(bad)
(bad)
call
or
jp
adc
push
or
xchg
mov
add
pop
xchg
xor
jg
in
jmp
add
shr
js
je
xchg
arpl
sub
mov
or
mov
(bad)
(bad)
jmp
xor
iret
nop
repz
dec
mov
dec
fwait
adc
push
mov
inc
es
clc
sbb
fadd
clc
or
(bad)
hlt
fimul
imul
aam
mov
pop
and
xchg
loopne
fistp
add
fs
call
int3
dec
sub
and
retf
daa
or
fisttp
dec
mov
push
std
inc
lock
add
mov
mov
adc
dec
(bad)
(bad)
(bad)
(bad)
dec
add
push
and
or
in
ins
inc
mov
jmp
xchg
iret
scas
or
add
inc
push
xor
mov
sti
dec
outs
add
nop
dec
xchg
mov
icebp
cmps
pop
mov
xor
in
add
inc
fist
push
mov
or
and
add
push
(bad)
jg
call
lahf
xchg
loopne
out
sub
jle
adc
fst
fidiv
(bad)
(bad)
(bad)
call
and
sub
and
jo
test
xchg
dec
sub
adc
xor
mov
mov
or
mov
sub
test
movs
dec
inc
jp
jle
clc
mov
outs
(bad)
(bad)
(bad)
call
cdq
stos
adc
sub
push
cmps
dec
jns
pop
ret
retf
call
(bad)
fild
pop
ror
lods
out
sub
fcmovnu
dec
dec
fiadd
loopne
in
retf
cmps
(bad)
(bad)
(bad)
call
or
push
mov
pop
inc
mov
repnz
sub
sbb
jle
and
call
(bad)
inc
call
cmp
or
out
pop
cs
idiv
test
imul
cmps
rol
clc
stos
data16
jg
(bad)
jecxz
call
(bad)
sub
mov
in
lock
imul
out
mov
inc
sub
daa
ss
or
xchg
jmp
cmp
add
nop
adc
(bad)
dec
pop
xchg
adc
sub
xor
pop
xor
das
push
xchg
dec
fs
and
mov
jmp
jl
push
push
js
aam
(bad)
jg
fistp
push
inc
enter
sub
dec
mov
mov
call
ins
sub
inc
add
(bad)
push
add
retf
add
out
push
xor
sbb
or
call
repz
test
(bad)
(bad)
fistp
or
sbb
fs
add
enter
push
push
sbb
xchg
add
jns
loop
jmp
adc
adc
adc
data16
(bad)
jmp
push
retf
inc
and
repnz
sub
inc
mov
enter
(bad)
jmp
adc
mov
mov
loopne
xor
inc
xchg
clc
(bad)
inc
aam
pop
mov
jo
fdiv
xor
dec
adc
mov
outs
inc
jmp
ss
inc
sahf
inc
mov
inc
pusha
cmp
fistp
dec
jo
(bad)
jns
sahf
mov
mov
inc
in
jg
cld
sti
pusha
shl
enter
mov
ja
pushf
lea
jg
(bad)
jmp
outs
or
dec
adc
jae
jne
push
sbb
jp
repnz
(bad)
(bad)
(bad)
sub
es
jo
dec
jnp
shl
mov
pop
mov
cli
(bad)
jmp
rcl
adc
je
xchg
add
adc
sbb
movs
call
push
add
push
inc
je
mov
push
sbb
(bad)
(bad)
(bad)
dec
call
ror
sbb
add
mov
ret
pop
jecxz
add
cmp
inc
(bad)
(bad)
(bad)
call
(bad)
mov
sub
adc
aad
push
ret
fnstcw
add
push
xchg
adc
inc
xor
fs
icebp
jg
add
jae
push
mov
push
dec
stos
adc
(bad)
(bad)
cmp
sbb
xor
es
dec
mov
cmp
pop
xchg
mov
(bad)
dec
(bad)
nop
fcom
daa
cmp
movs
ja
sbb
cmp
xor
jg
add
mov
dec
pop
movs
ins
mov
add
and
jns
mov
inc
inc
jmp
imul
jo
jne
sub
(bad)
jmp
mov
retf
icebp
xlat
stos
sub
and
jae
bound
inc
mov
(bad)
(bad)
inc
bound
leave
sbb
cwde
or
bound
xor
push
pop
mov
ja
mov
mov
das
or
clc
inc
lahf
test
ss
(bad)
fcomip
int3
(bad)
test
cs
mov
jmp
add
lods
cmp
adc
(bad)
(bad)
jmp
mov
add
and
inc
movs
and
xor
add
(bad)
jmp
jecxz
and
aas
lods
mov
sbb
(bad)
cmp
(bad)
(bad)
(bad)
mov
repnz
mov
adc
sbb
mov
lds
(bad)
fbld
test
add
shr
fdivrp
or
sub
sub
(bad)
(bad)
(bad)
call
push
push
jmp
push
daa
movs
jno
das
pop
je
add
fdecstp
sub
add
add
mov
jmp
sbb
xor
adc
inc
pop
dec
not
jmp
ss
xor
(bad)
(bad)
inc
cmp
and
lods
inc
add
sbb
cwde
jbe
mov
xor
pusha
cmps
mov
nop
(bad)
mov
bound
mov
xor
sbb
dec
mov
cmc
in
(bad)
(bad)
fisttp
jo
pop
lock
pop
xchg
xchg
jnp
jo
sbb
call
xchg
or
(bad)
call
inc
call
sti
xchg
fisttp
call
mov
fiadd
or
test
(bad)
ret
push
enter
ds
inc
mov
(bad)
call
loope
repnz
lock
jmp
jle
add
xchg
shl
retf
or
(bad)
(bad)
inc
cwde
cmp
xor
addr16
lahf
inc
mov
or
movs
push
jl
(bad)
inc
push
jl
push
je
inc
in
pop
ss
push
dec
and
fwait
test
(bad)
(bad)
(bad)
inc
mov
dec
js
pop
fisttp
mov
add
sar
jl
sub
sbb
and
push
fst
mov
add
sub
(bad)
push
stc
xlat
dec
xor
ja
test
clc
xchg
sbb
and
retf
sbb
call
jb
idiv
bound
out
sub
jmp
(bad)
(bad)
dec
cmps
call
jne
ds
ror
retf
fld
pop
aas
jae
cli
(bad)
(bad)
jmp
adc
inc
xor
jno
dec
shl
pop
inc
les
xlat
dec
lds
call
outs
xor
iret
jae
inc
mov
sbb
hlt
mov
(bad)
cmp
sbb
cwde
push
or
mov
xchg
ss
push
mov
call
lock
pop
xchg
mov
sub
pop
ins
inc
imul
into
adc
or
(bad)
(bad)
call
rcl
je
mov
and
rol
adc
and
cmp
pop
add
or
and
xchg
or
sub
adc
aaa
dec
icebp
jo
loope
jg
push
ins
pop
mov
sar
loop
test
jb
dec
cld
jmp
clc
mov
pop
test
sti
push
scas
loop
dec
cmp
stc
or
aas
adc
add
les
(bad)
dec
lock
inc
lock
push
cmp
mov
add
std
(bad)
inc
lods
pop
mov
jnp
les
adc
in
mov
mov
inc
pop
pop
jae
adc
popf
or
out
sar
jbe
push
dec
pushf
add
add
xchg
out
cdq
jmp
inc
std
jmp
int
pushf
test
sahf
sub
ror
add
xor
add
sbb
add
add
cmp
mov
(bad)
call
pop
inc
push
nop
sub
jnp
lock
rcr
outs
js
and
mov
ja
fdivr
dec
mov
sub
jb
repz
xchg
ds
jno
sbb
(bad)
push
in
(bad)
es
add
ret
je
sti
xchg
cs
int3
dec
(bad)
fidiv
cld
mov
push
xor
movs
repnz
out
cli
mov
xchg
popa
cmp
inc
cmp
dec
cld
ins
call
dec
dec
loop
icebp
rcr
pusha
je
into
sbb
pushf
mov
jg
jmp
add
xchg
dec
repnz
sub
lahf
test
fdivrp
(bad)
(bad)
call
sub
cmp
or
jae
add
add
add
add
sti
call
retf
popf
and
mov
add
dec
test
ja
mov
mov
sbb
pop
pop
cs
mov
in
jg
mov
push
js
clc
dec
ret
lahf
sbb
shl
(bad)
(bad)
(bad)
mov
push
test
push
xor
and
push
sub
push
(bad)
and
test
mov
pop
test
mov
xchg
push
stos
mov
rol
add
mov
pop
fsubr
xor
(bad)
(bad)
stc
icebp
mov
push
or
cmps
loop
retf
push
mov
(bad)
(bad)
fcomip
call
xor
out
iret
gs
inc
fs
mov
call
xchg
neg
push
mov
dec
pop
int3
dec
in
leave
inc
xor
xchg
call
outs
mov
std
retf
mov
std
movs
imul
mov
ja
ja
imul
mov
clc
sbb
call
cmp
dec
add
cli
(bad)
call
mov
jnp
imul
jl
fstp
cmps
(bad)
scas
daa
cmp
inc
push
nop
sar
repnz
nop
retf
inc
or
pop
mov
ja
(bad)
call
data16
test
jge
call
clc
cld
(bad)
call
mov
add
ds
rol
add
cmp
push
es
les
loop
jno
(bad)
call
dec
and
test
(bad)
int
mov
sub
sbb
sbb
xor
and
adc
sbb
(bad)
(bad)
dec
gs
push
cmp
sub
mov
mov
cmc
imul
or
(bad)
jmp
sub
(bad)
or
and
cli
adc
icebp
cwde
mov
aas
add
(bad)
(bad)
call
enter
jne
jg
add
(bad)
mov
add
xor
cli
sahf
and
mov
mov
or
or
ficom
add
fisubr
or
les
dec
(bad)
mov
std
xchg
push
in
dec
js
ins
fs
lods
sub
jmp
and
push
and
or
das
inc
sbb
mov
and
push
dec
add
or
and
(bad)
(bad)
call
ret
sub
add
lahf
and
mov
mov
fwait
sbb
(bad)
(bad)
jg
mov
test
jo
sbb
stos
test
cmp
cmp
mov
pop
test
and
jne
xchg
adc
sub
xor
adc
pop
test
sub
(bad)
jg
adc
add
in
push
es
xor
push
mov
mov
mov
dec
jg
(bad)
mov
fld
sub
scas
push
sbb
jmp
add
sti
inc
adc
adc
jnp
jno
sar
dec
jbe
ud0
add
inc
ror
fsubr
pusha
xor
(bad)
cmp
push
lock
push
jle
cmp
xchg
fimul
xor
test
imul
xchg
aam
sub
sub
repz
int3
push
push
cmps
cmp
jmp
call
and
(bad)
xchg
scas
daa
loopne
les
push
lea
adc
int3
(bad)
jmp
pop
dec
outs
jo
and
lahf
adc
sar
fst
(bad)
(bad)
fcomip
cmc
lea
jb
les
sbb
in
fcomp
push
mov
(bad)
jmp
xchg
mov
inc
dec
daa
in
rcl
cmps
push
sub
loopne
loop
sub
daa
int
or
dec
mov
(bad)
(bad)
dec
and
sbb
sub
and
inc
sub
daa
push
sbb
mov
add
and
add
push
jl
push
fidiv
loope
jmp
daa
jg
mov
popf
nop
jle
jle
push
sar
sbb
stos
or
adc
dec
rol
(bad)
(bad)
dec
add
scas
ret
in
cli
push
adc
jmp
adc
(bad)
(bad)
jg
fs
fcmovnbe
aam
xor
and
pop
sbb
sbb
bound
mov
xor
out
sbb
mov
fwait
shr
scas
or
pop
adc
push
mov
jne
sub
(bad)
adc
sbb
outs
mov
icebp
pushf
and
out
jp
mov
adc
ins
neg
mov
(bad)
push
sub
jg
mov
adc
adc
mov
mov
jp
jo
sub
(bad)
(bad)
inc
push
clc
mov
xchg
iret
ror
xor
fsubr
mov
pop
xchg
neg
jbe
(bad)
call
std
sub
push
or
cmp
cmps
or
iret
mov
inc
retf
mov
ds
retf
(bad)
call
jmp
xchg
or
or
test
mov
xchg
and
call
(bad)
pop
cmp
adc
mov
jle
or
mov
sbb
test
add
mov
adc
(bad)
(bad)
(bad)
fcomp
or
mov
ret
add
or
add
retf
inc
inc
js
push
inc
loopne
cmp
retf
mov
pop
jb
or
fld
mov
push
pop
sub
dec
inc
fs
dec
std
push
shr
push
and
or
mov
mov
mov
cld
pop
(bad)
repnz
or
add
(bad)
jg
or
sbb
sbb
sbb
iret
popf
rcl
test
sbb
adc
(bad)
(bad)
jmp
popf
sbb
pop
pop
ret
xchg
add
dec
pop
fs
push
sar
xor
(bad)
push
push
js
hlt
and
jmp
mov
ror
pop
loopne
ss
(bad)
(bad)
call
sbb
and
pop
(bad)
cmp
js
addr16
and
stos
pop
adc
mov
mov
jmp
sub
inc
dec
adc
push
push
dec
arpl
cld
popf
cwde
movs
xchg
sub
sti
(bad)
(bad)
(bad)
stc
sub
pop
mov
enter
mov
(bad)
outs
es
mov
jl
mov
arpl
push
call
mov
mov
test
out
(bad)
(bad)
fcomip
movs
cmp
xor
pop
jl
sbb
add
loopne
loopne
adc
add
(bad)
dec
push
push
ins
xchg
or
ret
sbb
ffree
xor
pop
inc
(bad)
jl
dec
js
mov
nop
outs
push
jmp
(bad)
(bad)
(bad)
push
jmp
das
add
das
das
stos
fadd
int
ins
imul
call
and
adc
xor
push
push
mov
inc
mov
neg
(bad)
(bad)
(bad)
jg
add
cmps
jne
(bad)
fimul
or
ss
lea
xor
push
sbb
mov
sub
sti
mov
shl
fcomp
shr
push
ret
sbb
mov
push
(bad)
push
adc
(bad)
(bad)
(bad)
push
sbb
or
es
push
xchg
sbb
ret
sbb
add
lods
popa
push
scas
push
jmp
(bad)
(bad)
dec
xor
repz
add
push
xchg
out
loopne
sub
sbb
rol
(bad)
(bad)
(bad)
cld
jmp
sub
and
sub
cdq
idiv
mov
sub
aaa
xchg
mov
imul
mov
fdiv
test
retf
fdivr
pushf
mov
(bad)
push
adc
inc
daa
jbe
jmp
push
mov
add
pop
inc
jecxz
int
add
popa
ins
jbe
dec
clc
leave
jle
sub
pop
(bad)
jmp
and
sbb
cmp
and
dec
mov
or
or
add
sub
ins
stc
mov
adc
push
pop
xor
inc
push
push
jo
outs
mov
(bad)
(bad)
mov
mov
sub
aaa
or
mov
or
(bad)
jb
and
movs
jge
and
(bad)
push
xor
leave
or
push
adc
ins
in
jp
mov
fisttp
add
sub
jmp
xchg
sub
cmps
fdecstp
imul
rol
pop
ror
xchg
imul
xchg
mov
(bad)
(bad)
call
mov
enter
imul
enter
sub
pop
adc
add
fadd
call
jbe
add
cmps
bound
xor
mov
inc
inc
ss
retf
dec
pop
xor
fild
clc
aad
xor
stos
adc
dec
(bad)
(bad)
(bad)
out
sahf
into
fist
out
adc
push
push
test
mov
xor
dec
test
jecxz
pop
xor
cmc
(bad)
jmp
mov
cmp
mov
iret
xor
adc
mov
(bad)
dec
js
fwait
cmp
dec
and
push
push
(bad)
(bad)
(bad)
call
push
sahf
std
push
dec
aam
xchg
or
cli
mov
ss
pop
lea
in
fsubr
mov
add
inc
jmp
adc
and
jno
test
jmp
dec
xor
xor
cmps
clc
inc
and
jns
dec
sbb
adc
sar
(bad)
dec
adc
sahf
adc
fwait
xchg
push
dec
rcl
mov
xor
cmp
xor
jo
(bad)
(bad)
(bad)
mov
sub
jo
sub
repz
mov
and
cld
(bad)
jmp
pop
int
dec
pusha
or
js
pop
mov
mov
sbb
pop
and
and
ja
or
jnp
sbb
(bad)
push
pop
inc
cmp
sbb
in
fmulp
sbb
sbb
nop
in
test
(bad)
jg
out
pop
nop
out
push
or
mov
mov
cld
shr
cld
retf
mov
imul
inc
jb
pop
pop
push
xchg
push
movs
shr
sbb
xor
pop
in
sub
add
sub
ins
js
repz
inc
push
pop
sar
inc
adc
retf
or
in
push
imul
dec
and
sub
(bad)
push
mov
ret
fidivr
cmp
mov
mov
shr
(bad)
call
rol
jns
xchg
sar
ss
imul
dec
pop
call
pop
pusha
dec
enter
mov
js
push
pop
out
and
pusha
mov
rol
nop
xor
jo
mov
jno
mov
adc
or
(bad)
(bad)
(bad)
call
repnz
fnstcw
bound
cmps
nop
jecxz
xchg
sub
movs
lock
popf
movs
gs
sub
cld
mov
mov
mov
retf
(bad)
(bad)
js
in
(bad)
jge
retf
add
call
xor
stos
ins
pop
inc
inc
(bad)
(bad)
(bad)
jmp
xchg
shl
ds
inc
(bad)
pop
stos
ins
xor
in
aam
dec
and
xor
dec
add
mov
nop
popf
cmp
jg
inc
not
fstp
lock
mov
test
jnp
xor
(bad)
(bad)
(bad)
dec
xchg
(bad)
mov
inc
adc
psraw
rol
jp
pop
(bad)
(bad)
dec
shr
imul
or
clc
lahf
lea
and
lods
or
or
jecxz
aas
mov
(bad)
dec
push
push
inc
les
or
mov
push
dec
sub
dec
sbb
or
push
(bad)
fadd
adc
int
jle
xor
retf
or
jge
(bad)
(bad)
push
cmp
outs
dec
xor
adc
jl
jnp
cmp
(bad)
mov
das
add
and
push
mov
nop
call
or
sbb
(bad)
(bad)
(bad)
fstp
mov
sub
add
add
xor
sahf
fs
cmp
xor
and
call
jns
sbb
data16
pop
or
add
and
push
enter
repnz
jmp
jp
mov
mov
daa
sbb
(bad)
jmp
loopne
fild
fwait
int
push
ror
mov
out
fs
(bad)
mov
aaa
add
sbb
push
aam
clc
mov
push
mov
xor
cmp
inc
push
jo
adc
je
out
cmp
pop
mov
fsubrp
xor
mov
adc
(bad)
jmp
mov
mov
test
jno
sbb
ret
mov
inc
adc
push
int3
adc
fcom
(bad)
in
inc
adc
ds
nop
pop
scas
push
inc
daa
sbb
cmp
les
jge
mov
call
in
adc
pop
mov
sub
(bad)
(bad)
(bad)
jg
cmp
aas
mov
xor
mov
retf
dec
frstor
test
jg
(bad)
dec
and
ins
aam
add
ds
and
xchg
mov
bound
push
dec
or
stos
and
sti
cs
jp
fldpi
dec
push
mov
fwait
inc
loopne
sub
push
cmp
or
and
xor
imul
xor
push
or
add
cmp
mov
(bad)
fbld
inc
inc
add
xor
lods
or
nop
jg
inc
or
xor
scas
(bad)
inc
inc
pop
aas
mov
sub
adc
mov
xchg
fadd
ins
cmp
fidivr
push
in
add
pop
inc
inc
ins
pop
and
(bad)
jg
cmp
(bad)
or
mov
dec
pop
sub
out
(bad)
(bad)
(bad)
retf
mov
sbb
leave
pop
xchg
and
mov
mov
rsm
add
pop
inc
add
xchg
dec
pop
and
add
nop
push
(bad)
(bad)
(bad)
push
js
mov
cmps
jg
and
ret
add
out
adc
in
inc
xor
dec
jl
mov
inc
fld
ret
aad
xchg
gs
pop
(bad)
clc
ins
(bad)
(bad)
(bad)
jmp
inc
enter
inc
and
sub
adc
xlat
cmp
rol
push
popa
pusha
movs
xchg
add
shl
dec
pop
mov
add
inc
sar
in
xor
dec
xlat
(bad)
(bad)
(bad)
mov
inc
loop
pop
push
adc
pop
lds
and
aas
add
rcr
push
inc
cs
jne
(bad)
dec
push
inc
inc
aad
jmp
cmp
std
(bad)
(bad)
call
loop
je
xor
lods
sti
arpl
cmp
mov
cmp
cmp
cmp
jg
in
gs
adc
dec
gs
add
or
(bad)
jmp
call
jno
xor
inc
adc
mov
(bad)
or
arpl
(bad)
(bad)
jg
fadd
dec
shl
xchg
cmps
(bad)
mov
jne
jbe
(bad)
and
jb
dec
jb
sub
mov
dec
and
dec
and
xchg
adc
outs
test
loopne
sbb
shl
mov
cmp
push
mov
mov
(bad)
(bad)
mov
mov
sub
pop
clc
or
inc
lock
cmps
dec
add
or
(bad)
(bad)
call
and
dec
sar
loopne
rcl
stos
mov
sar
int
cmps
retf
(bad)
(bad)
jmp
mov
inc
mov
xor
pop
mov
inc
in
(bad)
(bad)
(bad)
call
pop
dec
add
imul
stc
xchg
fst
retf
adc
sbb
dec
lods
(bad)
(bad)
jmp
sub
shl
pusha
jbe
adc
cmp
add
test
inc
call
lea
(bad)
ja
and
(bad)
fcomip
in
sub
gs
xchg
and
ret
inc
js
or
shr
test
mov
out
cs
add
add
inc
jp
inc
les
loop
sbb
jmp
inc
or
pop
jmp
dec
mov
adc
out
add
xchg
cmc
xor
loop
inc
scas
and
sub
xor
lea
test
call
shl
mov
or
push
js
int
or
(bad)
jo
or
dec
push
mov
jmp
add
add
stos
add
clc
(bad)
mov
or
imul
pop
pop
popf
add
fs
add
enter
push
cli
aaa
push
fisttp
fs
push
or
dec
fwait
imul
and
mov
xor
bound
pop
(bad)
mov
retf
aam
lock
(bad)
fist
clc
int
(bad)
in
loope
les
mov
mov
fiadd
jmp
pop
movs
inc
es
cmc
dec
iret
jo
dec
inc
add
push
out
adc
xor
into
dec
add
test
jecxz
nop
lea
sar
sbb
or
xor
cmp
jmp
scas
inc
jl
and
or
push
or
lahf
div
xor
push
scas
js
add
(bad)
mov
repz
jb
and
and
and
ins
call
or
mov
(bad)
(bad)
(bad)
out
mov
dec
mov
adc
fbld
cmp
sbb
mov
scas
(bad)
(bad)
(bad)
in
sub
test
cmp
cmp
sub
enter
mov
sbb
retf
loope
clc
das
cli
push
aam
lods
mov
lods
adc
std
pop
sti
in
hlt
ret
(bad)
(bad)
jmp
cld
fsubr
jmp
inc
xor
adc
or
xor
ins
mov
push
je
das
fmul
(bad)
enter
cs
push
adc
mov
dec
sar
int
adc
std
(bad)
call
fcmovnbe
int3
add
jb
or
xor
loopne
push
dec
(bad)
call
inc
sub
in
cmp
fimul
mov
or
or
call
mov
test
and
push
imul
and
ret
out
xchg
pop
fcomip
call
mov
xchg
clc
aaa
retf
add
setg
mov
or
jb
add
loopne
or
jmp
adc
imul
int3
push
sbb
pop
jae
fdivr
mov
enter
stos
mov
dec
or
add
loope
lods
xchg
sbb
mov
in
dec
or
popa
inc
(bad)
(bad)
call
popf
push
lds
popf
test
shl
sahf
inc
mov
repnz
push
adc
(bad)
(bad)
inc
nop
ret
dec
inc
push
shl
jl
or
adc
repnz
xor
xchg
(bad)
or
add
pop
dec
and
dec
adc
(bad)
(bad)
mov
ret
push
dec
fs
loope
dec
sbb
nop
and
out
dec
adc
sbb
cmp
test
inc
push
dec
pop
add
pop
cmc
dec
sbb
daa
sbb
xchg
in
sbb
and
xor
lock
pop
inc
dec
and
push
and
xor
adc
dec
sub
(bad)
(bad)
(bad)
mov
push
ret
add
add
inc
xchg
sbb
push
call
cmp
add
xor
ins
inc
sbb
jecxz
or
pop
jmp
or
inc
sub
in
adc
push
and
inc
enter
mov
xor
adc
xchg
cs
xchg
ins
cli
sti
dec
xchg
and
scas
nop
xor
push
mov
adc
int
sub
aas
xchg
cmp
xchg
and
nop
sbb
fild
xor
or
(bad)
jp
or
pop
inc
jmp
adc
mov
adc
and
fadd
shl
cmps
hlt
pop
sbb
cs
and
pop
call
pop
push
pusha
sub
dec
pusha
xchg
les
inc
mov
add
adc
(bad)
(bad)
dec
push
pop
pushf
xchg
sub
adc
aas
repz
pop
sbb
adc
sbb
(bad)
(bad)
jmp
inc
mov
pop
xor
and
pop
add
sub
and
xchg
nop
xor
push
mov
int3
jbe
inc
add
mov
push
xchg
sub
adc
jmp
cmp
and
fcomi
call
cmp
add
in
les
add
cmp
cdq
sub
sub
xchg
adc
fdivrp
ss
sub
cmp
add
in
adc
es
call
sub
cwde
add
cmp
(bad)
sub
push
adc
in
les
inc
sub
rcr
xchg
add
xchg
pop
push
xor
(bad)
(bad)
call
ret
fldenv
pop
sbb
mov
rcl
pop
push
loop
inc
jg
out
(bad)
(bad)
dec
push
mov
jl
add
sbb
dec
pop
sbb
cld
sti
xlat
pop
inc
push
and
scas
addr16
(bad)
(bad)
push
outs
cmp
cmp
dec
movs
mov
jg
push
push
xor
push
inc
stos
fld
cld
(bad)
cmp
int
pop
mov
lods
ror
and
inc
mov
arpl
stos
or
(bad)
(bad)
(bad)
call
pop
adc
in
icebp
mov
(bad)
pop
mov
repnz
mov
out
xor
or
jg
rcl
add
add
add
pop
mov
xor
pop
cmp
es
lds
(bad)
(bad)
(bad)
jns
xor
xor
sbb
xor
outs
jns
adc
aaa
push
loopne
test
push
(bad)
out
arpl
(bad)
(bad)
push
pop
cmp
adc
jmp
add
jge
test
movs
inc
cmp
dec
pop
clc
sub
mov
dec
fild
(bad)
inc
sub
dec
arpl
push
xchg
fs
outs
(bad)
mov
or
mov
rol
ja
dec
cmp
and
mov
adc
fcmovnb
adc
sub
and
sub
xchg
xor
mov
push
add
(bad)
inc
mov
adc
mov
or
pusha
mov
add
cli
jmp
mov
cdq
test
push
add
pop
or
shl
or
(bad)
pop
call
(bad)
push
or
cmps
(bad)
or
movlps
adc
add
imul
inc
mov
repz
adc
adc
hlt
sbb
add
jo
sbb
sbb
test
pusha
sbb
(bad)
mov
stos
add
pusha
fs
push
adc
adc
call
mov
jmp
cmp
push
pop
not
pop
push
push
pop
sbb
(bad)
enter
(bad)
fisttp
ror
arpl
mov
dec
pusha
arpl
sbb
addr16
das
mov
ins
jo
mov
jle
inc
aad
(bad)
mov
test
cmp
stc
pop
sub
mov
shl
jb
(bad)
(bad)
(bad)
call
mov
dec
imul
cmp
xchg
cmp
ret
or
(bad)
jo
sbb
xor
(bad)
(bad)
(bad)
dec
push
sbb
cmp
mov
out
lds
adc
(bad)
and
jg
push
sub
push
add
test
shr
mov
jmp
mov
mov
(bad)
(bad)
jmp
xor
sbb
inc
sbb
xor
stos
xor
cld
(bad)
(bad)
jmp
pushf
lods
ins
rol
aad
daa
mov
lea
icebp
push
out
ret
mov
add
cmps
imul
add
loope
sbb
dec
add
repz
push
bound
(bad)
(bad)
mov
add
pop
in
cld
inc
push
mov
xor
pop
loop
xor
mov
and
jns
out
or
popa
sub
mov
adc
(bad)
(bad)
(bad)
call
hlt
shld
inc
jae
test
rol
dec
mov
push
inc
mov
(bad)
(bad)
(bad)
in
jmp
fcom
cmps
mov
and
xor
pop
sbb
xor
push
xor
mov
dec
mov
pop
inc
sbb
push
mov
or
js
cmps
(bad)
call
push
scas
push
fiadd
ret
xchg
cli
test
adc
dec
cld
(bad)
inc
lods
or
ins
inc
xchg
cmp
or
popf
push
fmul
inc
add
xor
xchg
into
data16
or
dec
les
out
shl
sub
push
(bad)
in
mov
xor
clc
test
adc
loopne
adc
or
cld
(bad)
inc
cld
adc
(bad)
std
xlat
mov
or
div
adc
sbb
(bad)
(bad)
jmp
fidivr
out
xor
push
or
push
in
xlat
add
or
xor
xor
mov
(bad)
(bad)
cli
inc
pop
jl
ficomp
enter
xor
add
push
ins
es
pop
add
loope
(bad)
inc
shl
ins
rol
add
ror
dec
jae
lods
xor
cli
(bad)
(bad)
mov
int
ja
xchg
or
or
push
lods
rcr
sub
(bad)
fmul
mov
(bad)
mov
jo
ins
xchg
mov
sbb
cli
sbb
(bad)
jg
lods
and
fimul
add
push
iret
or
inc
loopne
ficomp
out
(bad)
dec
ins
mov
repz
or
inc
cld
lds
scas
cmp
cmp
pop
je
leave
pop
(bad)
(bad)
(bad)
dec
and
call
aad
mov
data16
call
out
jmp
enter
mov
dec
test
or
xchg
or
stc
fsub
sar
(bad)
call
cmp
mov
test
or
enter
cmp
inc
aam
(bad)
(bad)
jmp
and
sbb
dec
or
or
lock
(bad)
mov
cmp
xor
cmc
adc
(bad)
(bad)
push
cmp
popa
xlat
add
repz
cmc
scas
rol
cmps
stc
std
add
dec
inc
stos
dec
ds
or
sar
jmp
cmp
and
sbb
add
cmp
sbb
stos
and
es
cmp
(bad)
dec
or
stos
loop
push
mov
jmp
(bad)
push
push
xlat
sti
mov
add
mov
cmp
(bad)
call
xlat
mov
mov
jne
sub
fnstenv
sub
push
jge
gs
mov
(bad)
sbb
push
pop
clc
xchg
and
(bad)
mov
(bad)
mov
pop
lock
dec
inc
in
xor
sub
and
inc
pop
test
jl
ds
pop
hlt
inc
add
outs
sar
mov
or
fmul
mov
movs
xchg
or
xor
push
enter
sub
and
and
mov
jo
das
(bad)
(bad)
(bad)
call
sbb
daa
daa
or
and
add
mov
fnstcw
outs
sub
add
mov
or
cmc
xor
jp
fnstcw
rcl
push
stos
cmp
pop
sub
cs
(bad)
(bad)
dec
jo
mov
xor
jns
leave
cmp
cmp
mov
fwait
ret
dec
mov
push
lar
gs
ror
dec
push
repnz
out
mov
arpl
and
cmps
repnz
and
loope
sub
xchg
sti
retf
mov
mov
mov
(bad)
(bad)
jg
ror
fsubr
outs
dec
mov
fbld
or
or
inc
call
or
or
or
fldenv
ror
loopne
test
xor
test
test
push
xor
push
call
outs
adc
arpl
pop
or
stos
mov
or
cld
inc
pusha
cmp
cmc
out
add
dec
(bad)
(bad)
push
mov
ret
push
ret
retf
adc
add
ins
inc
jl
adc
adc
inc
add
push
ficomp
mov
js
loope
pop
popa
out
mov
jmp
jne
push
cmp
(bad)
(bad)
jmp
mov
es
mov
xchg
pop
jp
xchg
imul
(bad)
call
idiv
push
repnz
xchg
repnz
inc
rcr
mov
(bad)
mov
jg
rol
(bad)
(bad)
call
add
and
sbb
adc
cmp
cmp
add
sub
test
sub
adc
fs
push
nop
add
jle
(bad)
(bad)
dec
add
add
xor
sbb
sub
call
sub
xlat
jae
inc
mov
stos
imul
icebp
cmp
dec
scas
xchg
test
push
int3
das
mov
inc
dec
mov
aam
push
lds
adc
xor
clc
imul
push
test
xor
(bad)
(bad)
inc
mov
popf
(bad)
and
cmp
imul
popa
jecxz
jno
jbe
ret
test
sub
jmp
ss
sti
test
mov
inc
movs
add
mov
(bad)
(bad)
cmp
inc
jmp
mov
fidiv
or
movs
sub
into
mov
jg
lock
rol
xchg
fcom
pusha
loop
lods
in
jo
or
(bad)
push
(bad)
(bad)
call
shl
jmp
cs
and
xor
test
sub
mov
cmp
(bad)
sti
jg
(bad)
rcl
inc
xor
mov
loope
and
shl
push
adc
push
dec
into
enter
js
push
cmp
sbb
mov
inc
rcl
(bad)
(bad)
jg
fcomp
adc
sub
sub
mov
test
jg
retf
jg
mov
add
imul
mov
idiv
mov
ret
or
mov
(bad)
(bad)
loopne
add
pop
xchg
test
mov
push
ja
sbb
out
sub
and
pusha
dec
mov
dec
mov
(bad)
cmp
push
adc
adc
mov
mov
add
inc
sub
mov
sub
mov
stos
push
dec
je
lock
fs
cs
(bad)
mov
std
ret
mov
xlat
dec
ins
lds
cmp
jo
dec
mov
pop
fstp
call
mov
and
xor
jmp
es
sbb
or
xor
lds
sbb
(bad)
(bad)
push
mov
pop
cld
cmp
rol
daa
ret
sbb
push
mov
push
ror
shl
(bad)
mov
mov
cmp
(bad)
fld
mov
(bad)
cs
jbe
or
xchg
(bad)
call
xor
dec
xor
stos
mov
call
(bad)
jmp
jmp
and
sub
pop
aad
fst
lock
(bad)
mov
pop
adc
mov
(bad)
sub
shr
ds
xor
(bad)
call
aad
cmp
in
add
jl
mov
jle
ins
(bad)
(bad)
(bad)
push
retf
xor
test
ret
mov
ins
and
dec
fwait
jne
(bad)
scas
int
sub
(bad)
(bad)
(bad)
jge
aas
inc
add
movs
jle
and
cs
pusha
lds
and
scas
js
push
pop
out
cmp
das
shl
test
test
dec
dec
pop
in
es
daa
dec
add
mov
std
inc
mov
scas
ret
cs
scas
test
std
and
shr
in
pop
cld
(bad)
jmp
jmp
nop
mov
xor
vunpcklps
jg
call
(bad)
clc
sbb
sub
(bad)
gs
mov
mov
loop
scas
enter
(bad)
jmp
fsub
xor
mov
(bad)
jo
scas
not
xchg
(bad)
(bad)
call
inc
pop
pop
ins
jno
(bad)
push
xchg
and
(bad)
fisubr
outs
mov
pushf
sbb
stc
fistp
out
pop
cli
popf
fs
xchg
or
pop
jmp
cmp
idiv
xor
(bad)
(bad)
call
xchg
push
pop
into
push
xchg
mov
or
(bad)
mov
add
(bad)
(bad)
(bad)
mov
sahf
add
sbb
sahf
mov
lods
add
into
xor
std
(bad)
(bad)
inc
and
push
sahf
xchg
movs
mov
mov
mov
mov
mov
pop
cs
mov
adc
pop
ror
dec
leave
inc
inc
sbb
push
ds
addr16
adc
dec
or
icebp
xor
pop
retf
gs
mov
or
ins
ror
and
cmp
mov
sbb
gs
jmp
fldenv
js
fs
jmp
jns
clc
(bad)
inc
clc
das
push
dec
(bad)
push
test
and
mov
inc
pushf
retf
and
cld
mov
push
pop
xchg
pop
je
jno
pop
jno
call
cdq
pop
out
push
test
aad
mov
inc
mov
int
cmc
(bad)
in
sbb
jo
and
lgdtd
stos
(bad)
dec
add
into
dec
add
mov
lods
ss
sbb
pop
jle
or
jns
(bad)
(bad)
(bad)
call
push
shl
add
push
or
shl
clc
jo
ds
daa
inc
or
popf
(bad)
fild
(bad)
jg
jbe
push
int3
cmp
das
mov
out
iret
pop
and
aaa
adc
int
sbb
jb
pop
not
adc
repz
jg
call
push
inc
mov
xor
daa
sbb
dec
sbb
aaa
std
out
push
int3
or
mov
hlt
jmp
pushf
pop
(bad)
jg
test
adc
push
cmp
nop
adc
lock
lock
or
push
pmulhw
inc
cmp
pop
pop
(bad)
fcomip
(bad)
inc
stc
cmc
push
dec
rcr
jl
jb
mov
outs
(bad)
fld
cmp
and
icebp
xchg
les
out
mov
or
loope
mov
mov
push
jbe
das
cli
(bad)
(bad)
cmp
daa
push
inc
mov
xor
xchg
jmp
call
pop
pusha
ret
jmp
jne
mov
sahf
test
add
pop
pop
out
jno
loop
mov
cld
jmp
mov
pop
test
aaa
or
or
(bad)
call
push
or
pop
xchg
cmp
xor
adc
in
ins
dec
lea
(bad)
(bad)
jmp
or
cmps
add
xor
arpl
out
push
jl
mov
dec
jns
ret
pop
add
sub
cs
dec
das
ror
jl
sub
imul
es
dec
add
cmp
add
jne
repnz
sar
(bad)
xchg
loop
das
xor
jl
(bad)
jo
jge
jne
mov
push
sub
xchg
mov
jns
clc
repnz
cwde
in
cmp
(bad)
movs
loop
(bad)
(bad)
dec
and
and
dec
gs
mov
fadd
pop
or
or
mov
(bad)
jnp
(bad)
push
add
rcl
icebp
jmp
dec
push
ror
jne
(bad)
(bad)
(bad)
jmp
sbb
cmp
xchg
cmp
inc
sub
dec
icebp
or
adc
das
clc
adc
fcmovnb
aaa
push
dec
rol
ret
mov
sub
mov
call
adc
clc
mov
inc
out
adc
lea
sar
std
icebp
and
cli
(bad)
adc
nop
out
(bad)
aas
sub
out
mov
mov
fidivr
pushf
dec
ret
dec
js
adc
xchg
dec
cmp
mov
inc
lods
(bad)
pop
xlat
sbb
int
xchg
inc
inc
jns
lods
sbb
popf
mov
(bad)
(bad)
push
cs
fisttp
sub
dec
push
sub
sbb
lock
dec
push
xor
adc
push
(bad)
or
outs
stc
inc
inc
and
sbb
mov
(bad)
call
sti
(bad)
in
out
out
push
push
cs
(bad)
(bad)
(bad)
(bad)
cmp
call
jp
fisubr
mov
add
or
sbb
xchg
xor
stos
cmp
jecxz
cdq
fild
in
and
xor
rol
(bad)
(bad)
(bad)
call
fmul
push
inc
not
or
sbb
rcr
dec
sbb
or
xchg
retf
outs
xchg
test
int3
mov
and
fst
(bad)
(bad)
(bad)
dec
lods
rcl
cmp
fist
mov
xor
repz
movs
adc
cmp
shl
cmc
(bad)
aam
icebp
mov
and
test
push
inc
clc
es
outs
hlt
jbe
aas
mov
daa
dec
rol
jmp
jle
lahf
push
lods
push
jl
shl
ret
or
mov
sub
cmps
push
in
(bad)
(bad)
jmp
push
mov
xor
or
je
retf
in
in
jo
mov
fs
and
outs
call
lods
shl
out
lods
enter
fdiv
je
dec
mov
aad
lahf
das
sub
cmp
or
lods
(bad)
(bad)
(bad)
(bad)
inc
sub
mov
js
mov
shl
dec
inc
ret
mov
mov
(bad)
(bad)
mov
lods
mov
es
and
stos
not
dec
and
loop
cmp
jl
(bad)
cld
push
cld
fnstenv
dec
dec
mov
loop
cmp
icebp
mov
dec
or
stos
(bad)
call
(bad)
xor
mov
repz
mov
int3
dec
mov
(bad)
call
xor
hlt
sub
mov
pop
sub
mov
mov
mov
jg
(bad)
push
test
pop
stc
dec
shl
push
and
clc
push
inc
inc
clc
cld
std
dec
dec
pop
in
lods
mov
mov
fcomp
(bad)
(bad)
(bad)
inc
sbb
adc
cwde
push
stc
stos
out
int3
cs
and
stc
rol
pushf
add
push
pusha
sub
stos
mov
loopne
clc
das
inc
pop
pop
clc
sub
jmp
xchg
outs
ficomp
leave
or
stc
push
add
retf
aas
sbb
adc
push
pop
(bad)
(bad)
(bad)
(bad)
fiadd
call
aas
aas
mov
mov
xchg
out
inc
dec
xchg
lds
or
xchg
push
mov
inc
mov
xchg
push
xor
pop
sub
mov
(bad)
(bad)
(bad)
cmp
js
repz
icebp
mov
cmp
fdivr
mov
or
(bad)
xor
nop
adc
loop
call
lea
push
add
push
pushf
shl
inc
rcl
jg
(bad)
(bad)
(bad)
mov
jbe
mov
iret
dec
jmp
fimul
push
adc
out
mov
stos
or
mov
and
nop
add
xor
jns
imul
adc
inc
sub
scas
out
jnp
ret
repz
or
cmc
(bad)
daa
movs
rcr
xor
xor
push
push
xor
jp
inc
xchg
sbb
and
jmp
clc
stc
addr16
add
dec
sar
sbb
dec
dec
(bad)
xchg
nop
test
dec
(bad)
(bad)
(bad)
mov
add
add
iret
dec
not
push
out
sub
pop
cmp
xchg
out
pop
adc
(bad)
(bad)
dec
dec
and
add
add
jl
and
xor
imul
pop
mov
js
test
xchg
cmp
call
cmp
add
lds
add
lds
cli
sub
je
jmp
stos
std
lods
iret
jge
repz
call
or
(bad)
(bad)
(bad)
dec
pusha
int3
test
xor
mov
es
xor
push
aad
pop
push
loop
(bad)
(bad)
(bad)
mov
mov
div
sub
and
(bad)
out
es
cmp
add
inc
mov
or
(bad)
(bad)
(bad)
jmp
add
clc
outs
xchg
cld
test
test
adc
push
pop
add
dec
or
push
dec
add
push
inc
sbb
imul
jno
adc
dec
popa
push
sub
cmp
loopne
push
mov
push
fild
int
movs
jl
arpl
sti
mov
add
(bad)
(bad)
call
imul
and
push
pop
cs
inc
push
push
icebp
push
push
jae
and
retf
rcr
(bad)
mov
mov
mov
cmp
or
or
enter
fdivr
adc
jo
xchg
xchg
test
xor
(bad)
jmp
js
mov
add
das
push
aam
dec
and
das
aad
lods
lods
lock
dec
shr
sub
push
jae
pop
dec
loop
js
iret
add
(bad)
(bad)
push
pop
jo
adc
push
xchg
stos
imul
adc
leave
sub
add
adc
(bad)
(bad)
(bad)
(bad)
call
sub
sbb
adc
inc
push
xlat
pop
repz
mov
add
or
or
call
xchg
lods
mov
movs
pcmpgtb
and
adc
arpl
es
test
aaa
std
mov
sahf
aas
adc
fmul
fimul
xchg
or
fdiv
push
(bad)
push
jle
jnp
imul
or
lods
or
ror
push
sub
and
adc
test
(bad)
(bad)
(bad)
call
js
scas
dec
test
sbb
fcmovu
push
mov
(bad)
push
cmp
inc
sub
add
(bad)
out
xchg
(bad)
es
push
das
paddsb
push
sbb
or
shl
dec
repnz
and
fisttp
push
scas
fdiv
cmp
(bad)
jmp
loop
cmps
fld
sbb
or
sbb
popf
loopne
test
adc
push
mov
(bad)
(bad)
(bad)
call
pop
mov
xor
cmp
std
push
sbb
hlt
xchg
pop
dec
and
jmp
js
mov
(bad)
(bad)
(bad)
mov
or
ret
outs
xor
xor
fcom
dec
pop
xor
dec
pop
sub
xchg
(bad)
(bad)
dec
loope
ror
outs
sub
xlat
mov
lds
cmp
fcomip
scas
mov
shr
fadd
dec
call
push
(bad)
(bad)
(bad)
dec
(bad)
adc
outs
xor
add
sub
dec
mov
xchg
push
sahf
iret
lds
push
pop
(bad)
or
(bad)
(bad)
dec
test
add
popa
out
loop
or
jae
test
jl
ret
imul
push
outs
sbb
or
ins
jne
push
std
xchg
xchg
lds
jo
xchg
arpl
pushf
adc
pop
hlt
dec
lds
imul
bound
sbb
adc
mov
test
xchg
lds
adc
mov
imul
(bad)
or
call
pusha
xor
push
or
loopne
(bad)
(bad)
call
pop
ja
lods
xchg
mov
pushf
vcvtsd2si
out
inc
cmc
inc
dec
jge
inc
fmul
jbe
jmp
(bad)
jno
in
bound
je
adc
mov
aaa
retf
mov
jo
fwait
popf
(bad)
cmp
rol
push
sub
(bad)
div
aam
pop
iret
clc
adc
(bad)
(bad)
mov
shr
in
or
rcpps
sbb
cmc
sbb
ret
jp
int
sbb
test
loop
sub
loope
mov
les
adc
nop
loop
cmps
sbb
mov
add
sbb
add
(bad)
(bad)
(bad)
dec
mov
cmp
lds
mov
movs
loope
xchg
and
je
rol
cmps
sbb
(bad)
call
or
push
push
shl
nop
retf
jns
push
or
push
jecxz
dec
(bad)
push
lods
adc
cmp
icebp
add
push
mov
loope
(bad)
fcomip
dec
push
dec
push
stos
lock
jecxz
sbb
xor
adc
lock
push
or
shl
push
add
cdq
dec
cmp
sub
cmp
or
in
(bad)
mov
ja
cld
jae
bound
pop
or
mov
push
dec
lock
(bad)
jmp
jmp
pop
sub
or
(bad)
(bad)
(bad)
(bad)
call
or
dec
push
and
nop
test
sar
(bad)
lods
ret
scas
movs
cmp
or
push
dec
xor
js
mov
pop
(bad)
(bad)
(bad)
fucomip
(bad)
xor
outs
in
inc
jo
and
pop
sub
sub
rol
adc
(bad)
call
inc
lds
sub
inc
shr
or
adc
retf
mov
inc
pop
bound
repnz
lds
pop
mov
(bad)
call
or
xor
jnp
stc
push
mov
push
ss
inc
ret
rcl
inc
push
mov
jmp
adc
push
and
and
adc
call
popf
mov
push
or
mov
fstp
loope
test
js
push
sbb
sbb
jg
sbb
jbe
(bad)
in
sbb
adc
sbb
inc
inc
dec
cli
pop
idiv
jo
sbb
push
shl
(bad)
scas
(bad)
jmp
cld
adc
div
retf
je
jbe
paddusw
inc
test
jp
inc
dec
repnz
int3
out
pop
mov
call
clc
jo
sub
fmul
push
call
mov
ret
push
sti
(bad)
jg
inc
inc
sub
dec
push
pusha
push
outs
hlt
sub
shl
adc
lods
(bad)
(bad)
jg
xchg
sbb
ds
xchg
mov
sub
dec
sbb
scas
pushf
jne
jg
sbb
adc
sbb
xlat
pushf
in
mov
pop
imul
mov
xor
or
adc
and
(bad)
dec
jb
popf
je
ret
ret
xchg
mov
inc
push
xlat
rol
adc
add
je
pop
jbe
mov
enter
add
in
rcl
leave
push
call
(bad)
push
(bad)
(bad)
(bad)
call
pop
int3
mov
das
add
sub
cmp
inc
imul
lahf
mov
jne
mov
dec
rol
mov
push
xchg
gs
lds
dec
(bad)
(bad)
inc
fs
push
cmps
sub
dec
cmovbe
xchg
arpl
inc
xchg
call
add
repnz
or
lock
into
sar
add
xor
adc
or
in
(bad)
(bad)
(bad)
push
mov
sbb
sbb
jmp
pop
popf
adc
jo
pushf
stc
mov
adc
test
fcomp
sbb
push
or
out
xlat
ins
mov
jnp
lock
stos
pop
adc
(bad)
inc
ret
xor
pop
inc
jnp
mov
js
mov
ret
(bad)
(bad)
dec
imul
xor
xor
xchg
adc
(bad)
(bad)
(bad)
dec
pop
retf
outs
push
mov
mov
enter
retf
sub
or
mov
(bad)
jmp
mov
or
push
aad
jmp
rcl
and
push
lock
xor
out
rcr
(bad)
dec
push
inc
xor
dec
ss
push
cmps
jmp
push
jmp
invd
adc
cmp
mov
jnp
loope
test
inc
push
pop
push
(bad)
hlt
dec
fisttp
in
xchg
or
sbb
mov
inc
scas
fcom
enter
mov
cmp
nop
add
or
clc
repnz
data16
(bad)
(bad)
call
jbe
pop
stos
sti
add
mov
test
pop
or
xor
xchg
leave
xchg
xor
cmp
(bad)
jmp
jo
movs
mov
xor
push
jmp
int3
data16
add
test
jge
and
mov
(bad)
(bad)
inc
jp
scas
xchg
outs
fcmovbe
icebp
enter
xor
popf
movs
fisttp
cli
(bad)
(bad)
dec
popf
cli
mov
scas
adc
inc
xchg
mov
xor
aas
jecxz
or
loope
(bad)
jmp
(bad)
mov
jecxz
(bad)
cmp
sub
adc
dec
xor
in
test
call
push
fcomp
stos
cmp
nop
test
arpl
inc
push
(bad)
(bad)
(bad)
(bad)
mov
cdq
mov
add
xor
xchg
pop
or
xor
push
dec
sbb
das
nop
test
je
xor
cld
inc
pop
jl
mov
ret
xchg
add
test
sar
call
pop
pop
cmp
jle
push
push
or
outs
cwde
enter
sbb
xchg
sbb
adc
xor
lds
loopne
cmp
(bad)
xor
rcl
fdiv
(bad)
jmp
push
dec
push
loopne
jg
pop
xlat
shl
ss
push
call
mov
js
jecxz
loopne
push
inc
jmp
xor
push
jecxz
dec
adc
jmp
and
popa
test
sub
xchg
add
les
push
pop
(bad)
(bad)
jg
pop
fist
pop
fadd
dec
(bad)
adc
rcr
or
adc
and
cmp
and
std
push
retf
xor
outs
mov
dec
hlt
(bad)
jg
(bad)
mov
xor
adc
or
push
add
repnz
fiadd
mov
jl
sub
jmp
pop
ja
pop
add
jo
xchg
es
jne
lea
sbb
outs
push
adc
(bad)
pushf
cmp
or
adc
sbb
(bad)
aad
xchg
(bad)
(bad)
jmp
enter
mov
loop
pusha
lea
mov
and
mov
inc
out
mov
js
fmul
push
xor
add
push
xor
jp
add
add
adc
sub
ins
and
cs
adc
leave
dec
mov
(bad)
(bad)
(bad)
call
sbb
clc
popf
(bad)
faddp
mov
repnz
push
ret
or
cmps
or
sahf
inc
mov
pop
test
mov
icebp
xchg
add
aad
push
cdq
pop
pop
pop
cmp
ficom
jmp
jmp
push
fisub
add
sub
rol
mov
lds
xor
push
mov
outs
test
sub
nop
xor
(bad)
(bad)
jmp
push
cmp
push
sbb
or
pop
push
push
in
ins
(bad)
mov
add
cmps
jg
sub
div
cmp
mov
je
sub
(bad)
(bad)
jmp
inc
push
popf
cmp
inc
pmaddwd
cmp
inc
mov
inc
mov
lock
(bad)
(bad)
dec
js
add
hlt
xchg
mov
imul
imul
(bad)
inc
jo
push
out
push
or
push
cdq
jl
jle
mov
or
adc
inc
add
pop
sbb
mov
or
sbb
sbb
(bad)
dec
movs
jb
cmp
adc
adc
vcmpunord_sps
ins
fmul
rol
test
lods
(bad)
(bad)
(bad)
call
sub
adc
js
mov
fcom
fiadd
ret
addr16
mov
call
jmp
mov
inc
adc
inc
add
test
imul
pop
es
(bad)
in
(bad)
fistp
xor
mov
xchg
pop
rcl
lock
xor
add
int
icebp
call
sbb
clc
xchg
push
inc
int3
mov
pop
loopne
jmp
sbb
adc
stos
mov
jmp
sbb
pop
sbb
xchg
test
or
mov
inc
dec
push
movs
jge
popa
xchg
(bad)
test
pop
stos
push
rcr
mov
ins
mov
mov
or
cmps
jnp
fcmovnbe
xchg
xchg
mov
dec
test
jg
add
retf
(bad)
ins
add
and
(bad)
inc
fcom
icebp
or
mov
add
fsubr
fdiv
loope
sbb
inc
pop
cmp
xchg
add
shr
jle
gs
adc
add
sbb
adc
neg
xchg
jbe
add
adc
(bad)
das
cli
(bad)
out
or
loop
loope
fiadd
aad
sbb
call
mov
retf
stc
(bad)
(bad)
jg
push
jns
sahf
neg
xor
rcr
shl
fidivr
stos
sbb
(bad)
(bad)
(bad)
jmp
mov
sub
adc
les
retf
xor
xor
and
push
mov
jmp
push
xor
add
jne
clc
add
pop
cdq
in
sahf
popf
neg
cmp
or
dec
and
out
cmp
jl
mov
sub
inc
xor
pop
sahf
in
(bad)
(bad)
(bad)
inc
push
cmp
cdq
dec
cmps
inc
dec
imul
dec
xchg
mov
xor
and
sbb
inc
outs
jp
(bad)
mov
or
adc
or
rol
and
cmp
jb
(bad)
(bad)
(bad)
dec
pop
inc
je
imul
mov
pushf
sahf
imul
jg
outs
dec
pop
add
push
or
or
(bad)
push
js
push
(bad)
(bad)
(bad)
call
ret
gs
adc
imul
popa
fstp
inc
cwde
popa
push
push
inc
push
and
add
(bad)
call
dec
push
sahf
jmp
ja
retf
and
fld
aas
sbb
loope
(bad)
(bad)
dec
xchg
dec
add
mov
or
push
in
pop
inc
inc
dec
ret
shl
lock
cli
dec
pop
pop
adc
or
or
ret
xor
add
and
std
dec
add
push
add
nop
stos
jp
adc
(bad)
(bad)
jmp
out
(bad)
retf
popa
sub
jge
clc
fnstenv
jmp
ret
jge
in
xchg
cmps
cmp
sti
ret
inc
fdivrp
call
inc
retf
lock
ins
pop
movs
add
ret
mov
aam
fild
jmp
addr16
call
dec
repz
or
and
add
cmps
jg
xchg
xor
call
mov
aam
cs
push
ins
xor
ds
jb
sbb
jmp
cli
js
stos
sub
push
adc
repz
adc
and
mov
add
test
dec
out
cwde
pusha
mov
jl
mov
add
push
pop
loopne
(bad)
dec
fld
iret
jmp
scas
iret
sar
in
retf
cmp
add
nop
dec
dec
sar
sub
call
leave
clc
(bad)
push
jae
or
jp
pop
les
or
mov
out
push
cli
inc
test
sub
mov
or
mov
push
mov
cs
outs
adc
mov
and
xor
js
jo
in
adc
mov
les
aaa
fisttp
mov
dec
add
inc
xchg
fiadd
(bad)
push
sti
xor
sbb
dec
sahf
or
bound
sbb
xlat
push
cmp
xor
jmp
fistp
hlt
adc
or
loopne
enter
out
popa
add
jmp
cli
out
add
rol
add
and
(bad)
pushf
pushf
jo
lea
daa
daa
lock
jg
les
nop
outs
add
popf
and
push
mov
into
and
cmc
enter
jbe
mov
push
or
and
add
lods
into
(bad)
jg
iret
and
and
sti
cmp
jmp
mov
pop
or
mov
inc
fnstsw
mov
dec
or
sub
retf
xor
lock
pop
push
popf
test
cmp
ins
inc
dec
(bad)
(bad)
(bad)
call
xchg
les
int
inc
adc
fcomp
push
aas
adc
xor
cmp
mov
fsubr
sub
or
adc
cmp
and
out
dec
push
lock
cmp
jg
movs
test
hlt
in
xchg
pop
daa
pusha
and
(bad)
jmp
call
dec
jo
aaa
inc
dec
leave
xchg
pop
(bad)
shr
test
xchg
test
nop
(bad)
(bad)
(bad)
inc
bnd
or
dec
xchg
push
sub
push
xchg
clc
sbb
mov
mov
pop
sar
call
or
xchg
out
repnz
adc
mov
push
add
pop
nop
add
jo
add
loope
xchg
repnz
and
xchg
test
fld
in
iret
add
pop
inc
dec
push
inc
add
or
or
or
sbb
int
nop
addr16
add
sub
pusha
or
lahf
popa
rcl
test
push
iret
cmp
push
pop
mov
or
push
nop
ins
or
or
push
mov
es
int
rcl
ins
xchg
xor
cmp
xchg
rcr
dec
mov
loopne
pop
popa
bsf
pop
and
sub
mov
add
and
in
or
clc
xchg
xor
and
rol
xchg
inc
fisubr
inc
(bad)
(bad)
(bad)
call
xor
jg
xor
dec
cmp
nop
mov
mov
dec
sar
(bad)
(bad)
push
jo
aad
adc
adc
push
fld
jg
add
repz
aas
inc
(bad)
(bad)
(bad)
dec
sub
outs
jecxz
jl
arpl
adc
jbe
jnp
sbb
jge
daa
pop
cmc
adc
jo
loopne
mov
add
mov
ror
fild
data16
add
push
(bad)
(bad)
adc
cli
fcomip
(bad)
call
sbb
add
(bad)
lods
aad
aad
push
mov
sbb
js
jl
jmp
aas
leave
and
mov
jb
inc
adc
push
inc
fst
sbb
pushf
sub
sbb
(bad)
and
add
out
mov
(bad)
mov
dec
pop
movs
inc
pop
inc
jo
fmul
dec
jno
push
(bad)
cmps
(bad)
and
pop
adc
and
xor
and
or
push
and
(bad)
jg
mov
adc
sub
mov
or
pop
push
cmc
ja
or
jbe
pop
xor
xor
xchg
shl
xor
arpl
xor
int
inc
jecxz
and
push
jo
enter
dec
cli
mov
(bad)
mov
cmp
les
std
push
sbb
test
scas
shr
cmp
loopne
add
add
(bad)
fist
and
add
adc
imul
mov
mov
(bad)
mov
xchg
add
call
loop
ss
ins
dec
pop
gs
mov
pop
or
enter
int3
int3
aaa
add
or
or
int
lahf
xor
add
iret
mov
adc
jbe
xchg
dec
pop
or
ja
inc
and
int
push
pop
mov
dec
xchg
std
call
cmps
pusha
aad
rcr
scas
jmp
enter
push
and
(bad)
push
inc
ret
push
cld
push
xchg
fadd
jo
pusha
enter
cld
(bad)
(bad)
call
sbb
sbb
sub
cdq
or
ss
dec
adc
mov
sahf
mov
ja
adc
inc
(bad)
mov
jmp
inc
loop
(bad)
inc
and
push
pop
ret
sbb
jnp
das
and
adc
out
pop
lea
mov
adc
push
xor
dec
and
adc
mov
xor
(bad)
jg
and
push
or
das
adc
enter
push
(bad)
leave
daa
adc
ins
jmp
mov
fwait
sbb
repnz
xor
add
(bad)
call
jbe
and
ja
cs
and
es
(bad)
(bad)
jmp
fimul
js
loope
cs
imul
loope
pop
gs
mov
ret
inc
call
cmp
arpl
int3
dec
movs
xor
icebp
(bad)
lock
fsub
jb
lds
pop
pusha
add
adc
mov
mov
mov
mov
fs
lods
dec
(bad)
loope
stc
vmovdqa
(bad)
xlat
call
stc
add
or
lock
adc
pop
loope
and
and
adc
popf
jmp
rol
(bad)
call
lock
add
or
adc
push
push
ret
das
push
rol
(bad)
mov
mov
loopne
pop
xchg
jge
bound
xor
(bad)
call
dec
sbb
rcr
loope
rcl
loop
call
push
(bad)
jg
jmp
push
jmp
mov
fninit
jmp
jb
aam
in
not
cmp
stc
mov
and
xor
or
repz
cmc
daa
and
in
jb
div
(bad)
(bad)
jmp
mov
xlat
xor
pop
iret
xor
test
ret
dec
movs
sbb
and
adc
inc
std
inc
retf
sub
mov
inc
std
fild
jl
mov
and
inc
lods
test
cli
ret
push
cld
cmp
mov
lock
dec
std
(bad)
inc
mov
cmps
mov
lock
mov
and
sub
scas
and
pop
inc
es
(bad)
call
cmp
mov
clc
stc
dec
shr
or
inc
jg
push
push
retf
dec
out
(bad)
(bad)
(bad)
dec
sahf
out
add
call
adc
pushf
mov
aaa
std
add
jne
(bad)
sbb
inc
push
dec
add
(bad)
(bad)
call
mov
pop
test
shl
jmp
and
fsub
add
arpl
es
adc
scas
adc
scas
jnp
imul
out
clc
(bad)
jmp
push
fbstp
add
nop
cmp
repz
loopne
add
enter
(bad)
push
xchg
push
ret
cmp
xor
mov
sbb
push
outs
push
pop
cmp
cdq
and
pop
mov
adc
retf
mov
test
mov
mov
mov
cmp
add
pop
cmp
je
inc
bnd
jmp
mov
lock
rcl
ja
mov
xor
ret
out
or
jmp
dec
repz
nop
sub
pushf
xchg
(bad)
(bad)
(bad)
call
cwde
dec
cmc
and
(bad)
das
nop
dec
sub
imul
mov
loopne
iret
xlat
add
out
cmp
(bad)
dec
loopne
gs
adc
out
arpl
or
push
jb
sub
call
sar
(bad)
call
daa
inc
enter
sbb
(bad)
jge
sbb
mov
pop
inc
and
mov
call
mov
inc
sbb
xchg
call
jg
nop
dec
fmul
call
sub
and
jo
fld
(bad)
fcomip
inc
add
adc
mov
mov
(bad)
(bad)
(bad)
dec
jecxz
sub
mov
fsub
icebp
pop
mov
sbb
(bad)
(bad)
(bad)
dec
cmp
test
retf
syscall
mov
int3
out
lods
lar
fimul
pop
pop
cli
(bad)
cli
(bad)
inc
and
mov
add
inc
or
xchg
ret
(bad)
(bad)
inc
add
sete
add
or
daa
in
dec
es
aas
and
scas
outs
sbb
mov
xor
and
adc
mov
jmp
movs
push
stos
adc
int
daa
call
pusha
mov
and
xor
hlt
(bad)
jg
and
add
inc
dec
push
sbb
dec
sub
pop
xor
add
lods
(bad)
dec
and
in
and
shl
cdq
cmp
mov
adc
jnp
fisubr
fdiv
pop
mov
call
and
and
(bad)
jmp
nop
bswap
mov
imul
or
retf
fcomp
add
add
hlt
lods
(bad)
(bad)
(bad)
jmp
imul
shr
retf
scas
test
cmp
nop
inc
push
stos
leave
xlat
xchg
out
xchg
test
mov
pusha
push
jg
jno
sub
jbe
cli
(bad)
call
jg
xor
out
add
mov
add
xchg
test
aaa
xchg
ret
inc
ins
cmp
leave
push
push
cld
(bad)
(bad)
jg
leave
les
ins
cmps
test
shr
stc
icebp
dec
outs
or
adc
xor
push
mov
add
mov
loopne
push
jmp
pop
xchg
pop
(bad)
(bad)
push
xchg
and
sbb
fist
add
mov
lahf
shl
or
inc
jl
outs
inc
sub
fcom
sub
lahf
cmps
lea
pop
push
pop
test
mov
inc
fs
ror
in
xchg
mov
bound
push
xor
jmp
es
or
mov
xchg
mov
(bad)
(bad)
dec
jl
mov
add
inc
(bad)
jmp
jbe
stc
mov
mov
in
mov
movs
add
xchg
or
or
dec
clc
aaa
or
or
(bad)
(bad)
jg
frstor
pop
sbb
xchg
xorps
movs
ror
in
xor
das
push
mov
xor
(bad)
imul
retf
inc
sar
call
loopne
repz
(bad)
in
or
cmps
adc
add
add
jbe
xchg
add
adc
stos
xchg
mov
xchg
or
pop
lds
or
pop
or
(bad)
call
adc
jbe
stos
mov
dec
add
adc
mov
jecxz
idiv
add
cmp
lock
jb
inc
mov
sbb
mov
xor
int3
push
(bad)
dec
inc
ds
cmp
pop
sub
adc
and
je
dec
or
sub
cwde
scas
pop
cmp
(bad)
(bad)
jg
(bad)
shl
cmp
aaa
jmp
inc
adc
cld
pop
aam
adc
fptan
adc
(bad)
jg
(bad)
cmp
add
mov
nop
mov
sbb
xor
push
inc
jns
fisttp
jmp
dec
push
sub
pop
or
cmp
les
(bad)
fmulp
dec
mov
and
push
jle
gs
cmp
sbb
jno
js
(bad)
(bad)
call
imul
sub
fwait
cmp
nop
jno
or
loopne
ds
xor
(bad)
(bad)
inc
jmp
adc
xchg
xor
jmp
movs
aas
push
cmp
jbe
jmp
stc
pop
inc
xchg
jnp
sahf
inc
add
inc
into
or
mov
(bad)
mov
add
loop
and
pop
ss
aas
mov
neg
or
jp
call
pop
or
dec
sub
bound
test
(bad)
(bad)
(bad)
jmp
sbb
hlt
js
and
lahf
sar
movs
jmp
sub
push
adc
dec
ds
dec
ret
dec
and
and
cmp
jmp
cmp
mov
sub
scas
and
and
inc
mov
sub
adc
rcl
and
das
dec
mov
(bad)
(bad)
inc
test
adc
xor
in
movs
jns
test
jmp
inc
(bad)
cmp
adc
add
aas
icebp
call
cmps
push
fimul
adc
aas
sub
adc
mov
fisub
xor
sbb
mov
or
pop
dec
fadd
leave
push
cmp
aas
(bad)
jmp
jmp
add
adc
dec
sar
sar
rol
aas
cmp
pop
fsub
or
add
cmp
ds
jbe
jg
mov
pop
and
and
in
pop
pop
inc
pop
cmp
(bad)
inc
pop
pop
stos
lahf
pop
mov
push
icebp
sbb
cdq
sub
(bad)
xor
xchg
test
jae
or
jecxz
push
sbb
dec
cmp
(bad)
stc
loopne
leave
jae
dec
cdq
add
sub
pop
ja
jb
icebp
iret
xchg
lea
push
adc
jo
xor
pop
or
movs
dec
or
and
add
sub
mov
push
mov
mov
sbb
mov
repnz
icebp
or
add
(bad)
cmp
(bad)
inc
and
(bad)
jnp
or
(bad)
mov
or
icebp
(bad)
inc
or
ret
test
out
jo
mov
mov
pop
add
call
call
jmp
repnz
adc
adc
int3
popf
rcr
call
sbb
inc
or
push
(bad)
push
mov
and
mov
xchg
aaa
inc
xchg
arpl
mov
repz
xor
pop
or
jmp
push
and
arpl
(bad)
jmp
pop
pop
dec
jge
je
cmp
mov
gs
add
std
xchg
fdivrp
(bad)
fild
mov
sub
mov
push
pop
xchg
xchg
nop
mov
pop
jae
movs
add
adc
and
out
xlat
jecxz
(bad)
jg
stos
pushf
mov
sbb
dec
lods
jge
call
xor
test
pop
jl
or
sbb
clc
adc
inc
pop
ja
(bad)
push
add
cmc
xor
clc
push
out
xor
stos
jns
cmp
rol
cmp
jmp
cmp
jae
xchg
pop
xlat
jne
jo
xchg
add
int
xchg
inc
lods
pop
inc
jmp
(bad)
out
cdq
mov
xor
dec
pop
pop
cmp
inc
(bad)
dec
xor
cld
(bad)
mov
push
jne
std
jg
dec
pushf
imul
xor
mov
sub
hlt
(bad)
and
jp
or
aaa
jmp
paddusb
push
aaa
in
std
(bad)
dec
sbb
mov
inc
cmp
dec
loope
test
mov
test
jo
rcr
lds
in
pushf
jge
mov
mov
lds
sahf
lods
sbb
rcr
and
or
sub
push
jge
sub
call
mov
(bad)
(bad)
jmp
mov
push
push
jp
pusha
ror
sbb
jge
adc
mov
dec
(bad)
dec
les
lock
jmp
(bad)
(bad)
mov
push
cmp
pop
mov
pop
addr16
cmp
inc
mov
jno
(bad)
(bad)
dec
cs
jmp
jge
xor
les
mov
sbb
jne
mov
dec
pop
fcos
push
clc
pop
inc
pop
sbb
jo
frstor
and
imul
inc
out
aam
and
sub
mov
or
idiv
xchg
ins
pop
xchg
or
sub
or
sub
rcl
lock
add
cmp
sbb
jno
jge
or
sar
(bad)
(bad)
call
out
inc
ret
in
mov
xor
pop
shl
data16
cs
jne
push
addr16
(bad)
(bad)
push
shl
arpl
daa
push
test
outs
sub
adc
or
mov
add
push
sti
dec
aad
mov
cmps
jnp
xor
stos
das
mov
clc
or
xchg
sub
or
or
xor
outs
ret
shl
in
dec
das
pop
push
nop
aas
leave
nop
mov
add
sti
push
(bad)
rcl
(bad)
(bad)
(bad)
push
ins
mov
cli
xlat
push
lock
sub
call
cmc
inc
mov
jle
das
clc
call
imul
js
lock
sar
aaa
sbb
xchg
jl
mov
cld
dec
enter
ret
popa
call
and
popf
adc
clc
and
jg
sub
loopne
mov
xchg
rol
and
(bad)
(bad)
jg
aad
cmp
into
sub
imul
fs
xor
movs
jge
inc
adc
cmp
call
inc
stc
xchg
add
and
and
push
cli
ror
pop
mov
je
cmp
je
jecxz
(bad)
(bad)
call
cmp
fdivr
sbb
add
cmp
sub
jmp
jno
inc
rcl
test
inc
ss
jmp
leave
pusha
(bad)
call
add
fcom
mov
dec
ret
stos
mov
sar
adc
xor
imul
adc
(bad)
(bad)
(bad)
in
sbb
call
out
int
ret
inc
sub
and
xchg
das
call
sub
mov
outs
inc
pop
or
dec
xchg
iret
(bad)
jmp
cli
adc
test
pop
imul
push
mov
jbe
les
scas
ficom
(bad)
call
loopne
lea
dec
adc
dec
shr
inc
std
scas
adc
(bad)
(bad)
fsubr
fbstp
xchg
icebp
mov
pop
inc
test
adc
mov
push
jne
jge
xchg
dec
imul
jmp
out
and
sbb
sub
xor
sub
(bad)
(bad)
(bad)
inc
or
pop
test
data16
jmp
(bad)
sbb
cmp
lock
dec
push
lock
jg
mov
clc
jmp
cli
loop
add
mov
aam
xchg
cmps
stc
sbb
fimul
aaa
pop
mov
push
sbb
add
lock
or
sub
or
jb
dec
ds
imul
das
and
sbb
sbb
cli
jne
jmp
fimul
adc
mov
inc
xor
add
add
or
push
aad
call
jb
sbb
mov
call
jae
and
dec
or
inc
(bad)
loopne
ror
rcl
(bad)
(bad)
(bad)
jg
mov
add
hlt
lea
and
add
pop
and
jp
cmp
(bad)
call
push
inc
int
pop
mov
sub
push
into
jbe
pop
iret
mov
add
and
cmps
sahf
or
pusha
xchg
jmp
mov
xor
mov
(bad)
(bad)
(bad)
cld
push
dec
push
inc
jg
sbb
mov
aam
mov
mov
inc
push
cli
xor
push
mov
and
rcl
inc
add
or
popf
iret
in
jo
aaa
movs
lods
add
test
adc
jnp
mov
out
jle
sub
or
add
sub
cmp
cmps
(bad)
(bad)
(bad)
jmp
dec
push
inc
int3
and
mov
out
jmp
adc
cs
cli
pop
test
popa
cmps
(bad)
(bad)
(bad)
call
inc
ror
imul
jne
or
dec
outs
or
mov
inc
loopne
in
jmp
cmp
push
popf
mov
es
hlt
repnz
mov
inc
or
jno
test
(bad)
mov
in
test
pop
test
test
xchg
mov
fwait
aam
mov
(bad)
(bad)
jmp
push
clc
lds
pusha
pop
xchg
sub
or
(bad)
fdivr
(bad)
(bad)
jmp
jne
jmp
test
pop
nop/reserved
dec
mov
and
jg
inc
mov
adc
sub
adc
stc
shl
loopne
jne
aaa
ret
mov
inc
sbb
int
pop
hlt
(bad)
(bad)
cmp
mov
aas
xchg
nop
test
mov
pop
lock
cmp
dec
scas
retf
jge
jle
dec
jge
loop
imul
push
(bad)
jmp
adc
pop
inc
push
sub
dec
cmp
pop
push
pop
dec
xor
inc
push
cs
sbb
or
inc
jb
in
cmp
sub
adc
mov
test
neg
(bad)
test
and
pop
imul
in
bound
(bad)
jmp
and
push
ret
repz
jno
or
retf
ins
cmp
add
pop
cdq
sbb
push
rol
(bad)
dec
imul
cmps
pop
sbb
lods
xchg
dec
xchg
or
movs
retf
xchg
lds
fld
sub
add
(bad)
jmp
iret
jb
iret
jmp
adc
in
xor
cmc
and
movs
out
imul
and
sbb
call
int3
adc
(bad)
mov
mov
pusha
call
(bad)
(bad)
(bad)
inc
push
test
lea
(bad)
pop
push
outs
push
fcmovb
imul
inc
push
es
jo
ret
call
or
ror
xchg
call
xchg
sbb
(bad)
inc
mov
or
je
or
mov
test
add
jbe
mov
call
adc
xor
add
cdq
and
or
ret
xor
add
ror
and
adc
jge
inc
aam
xor
mov
(bad)
(bad)
(bad)
call
cmp
loop
add
mov
js
xlat
ficom
xchg
(bad)
(bad)
(bad)
inc
sub
cmp
fst
test
in
test
mov
jl
inc
jl
or
jmp
xchg
(bad)
jmp
dec
movs
sub
loope
cmp
(bad)
mov
fwait
clc
ja
pop
xchg
call
(bad)
(bad)
jmp
jle
xor
js
add
jne
ins
jmp
rcl
stos
and
cs
enter
inc
pop
pop
add
test
fwait
inc
or
outs
pushf
aam
add
pushf
or
lock
push
neg
movs
cmp
inc
jmp
add
test
and
jbe
jmp
mov
loop
mov
and
loop
leave
(bad)
iret
and
(bad)
xchg
xchg
adc
fld
(bad)
jmp
or
add
jmp
and
ret
shl
mov
xchg
pop
or
movs
popa
je
cmp
test
mov
(bad)
(bad)
sti
push
je
pop
mov
shr
push
pop
cmp
xchg
scas
or
dec
xor
retf
clc
jmp
jns
xchg
mov
(bad)
idiv
(bad)
(bad)
mov
and
repz
mov
nop
pop
push
add
add
mov
jmp
call
std
sbb
out
dec
and
mov
cdq
jns
inc
xor
dec
ret
aad
or
push
retf
jbe
fwait
pop
cmp
cs
(bad)
call
inc
mov
pop
mov
inc
push
rol
mov
push
(bad)
lock
add
retf
(bad)
jne
pusha
aaa
and
(bad)
(bad)
jmp
add
push
lea
push
xchg
add
inc
adc
and
jns
and
(bad)
(bad)
(bad)
call
lods
gs
sub
out
sbb
jbe
outs
inc
inc
fcomp
cwde
inc
and
xchg
sahf
(bad)
(bad)
call
mov
adc
add
dec
push
inc
std
(bad)
out
(bad)
out
(bad)
in
aad
icebp
adc
jmp
ror
ja
mov
pop
add
outs
push
lods
retf
mov
inc
(bad)
(bad)
jmp
pop
mov
pinsrw
les
cmp
dec
hlt
xchg
sar
out
scas
xchg
movs
call
cmp
ret
aaa
push
ret
push
in
ret
mov
(bad)
(bad)
(bad)
inc
mov
out
cmps
add
mov
jmp
dec
mov
je
lock
mov
das
clc
inc
mov
in
cmp
xchg
std
or
lock
cmp
pop
jb
cwde
mov
cli
(bad)
(bad)
(bad)
jmp
fidiv
xor
mov
and
test
push
adc
sbb
lds
icebp
ja
dec
xor
retf
outs
inc
outs
retf
(bad)
(bad)
inc
and
sti
push
inc
stos
jp
add
or
mov
add
cwde
mov
(bad)
fist
(bad)
inc
rol
dec
ret
mov
(bad)
mov
mov
lea
cmp
ja
push
xchg
xchg
dec
mov
mov
pop
cmp
call
movs
add
xor
sub
data16
test
aaa
aaa
outs
je
jb
or
or
out
dec
add
or
push
or
movs
iret
(bad)
(bad)
(bad)
fisttp
or
add
dec
ins
ja
cmc
outs
add
mov
sbb
jnp
(bad)
sbb
xchg
cmp
fstp
scas
sub
aas
pop
inc
jno
in
cmp
out
jmp
test
iret
xor
fcomip
call
or
or
pop
jo
cmp
push
mov
add
dec
inc
mov
sar
(bad)
jmp
pop
mov
add
dec
adc
adc
or
fcmovb
jbe
mov
add
fld
(bad)
(bad)
inc
xchg
es
add
add
mov
xor
and
stc
xor
ins
loopne
mov
dec
inc
stos
push
mov
(bad)
jmp
or
stos
clc
xor
dec
push
xor
cs
fisttp
adc
ds
push
xor
(bad)
mov
jne
ret
xchg
adc
cs
xlat
mov
jmp
and
sub
movups
pushw
and
call
aas
mov
add
mov
or
dec
adc
imul
pop
lods
stos
xchg
loopne
pop
push
pop
aaa
mov
xchg
(bad)
imul
pop
test
ror
test
call
sub
inc
int3
jg
movs
mov
sub
lea
xor
xor
sub
or
push
cmp
(bad)
(bad)
sbb
dec
push
sbb
fisttp
fist
add
push
std
neg
lods
adc
(bad)
jg
lock
cmp
push
xchg
jmp
adc
sar
push
sub
test
dec
add
mov
cld
jg
jno
sub
loopne
mov
out
jb
cmp
inc
popf
icebp
push
xlat
(bad)
jg
dec
and
adc
sub
lods
or
mov
iret
test
and
shl
cmp
add
mov
outs
cld
(bad)
jg
push
xor
lods
clc
rdmsr
sub
mov
rcr
and
and
cld
mov
in
sbb
add
out
mov
(bad)
push
xor
add
pop
fist
(bad)
(bad)
(bad)
fld
inc
jmp
dec
mov
movs
sbb
mov
sbb
xor
lea
clc
in
(bad)
call
push
movs
mov
mov
fisttp
or
adc
call
repnz
dec
loop
aad
aad
dec
test
inc
mov
mov
into
jo
add
cvtpi2ps
mov
cmp
xor
sub
(bad)
mov
adc
push
imul
or
fcomip
jnp
gs
daa
dec
and
mov
and
imul
out
push
adc
(bad)
(bad)
call
call
leave
adc
sub
add
add
enter
(bad)
(bad)
jmp
iret
push
rol
jmp
xchg
outs
lods
inc
dec
ret
xlat
aaa
test
add
call
dec
xchg
mov
scas
add
inc
pop
mov
or
mov
push
ret
hlt
add
(bad)
jg
out
jl
pop
ds
push
test
push
sub
inc
pop
ret
xchg
mov
shr
imul
jns
pushf
pop
(bad)
xchg
pop
dec
test
sub
jb
mov
dec
(bad)
(bad)
(bad)
mov
fild
and
adc
push
cdq
pop
jmp
test
mov
jne
dec
xchg
add
inc
(bad)
(bad)
inc
mov
mov
jecxz
xor
pop
jb
add
push
xor
jno
mov
les
or
inc
pop
add
popa
and
inc
mov
mov
shl
stos
loop
(bad)
daa
mov
jmp
ret
ja
data16
mov
into
push
shl
fild
pop
dec
fadd
(bad)
mov
push
enter
cmc
mov
in
pusha
arpl
jae
rcl
jo
(bad)
fbld
push
js
push
pop
(bad)
(bad)
dec
sub
cli
and
push
adc
(bad)
fsub
scas
test
dec
dec
les
rcr
dec
or
nop
into
hlt
push
mov
lock
mov
jbe
add
fcomip
call
sbb
sub
push
shl
adc
ret
stos
add
inc
pop
das
cli
fcomip
or
inc
or
pop
jno
retf
jo
or
or
fistp
xchg
pop
test
clc
rcl
inc
jmp
idiv
dec
and
(bad)
(bad)
push
dec
lea
jo
outs
(bad)
rcr
je
int
enter
pop
add
(bad)
(bad)
(bad)
inc
mov
lahf
adc
dec
inc
les
or
mov
dec
dec
sbb
mov
add
push
add
div
and
call
add
(bad)
xchg
dec
dec
dec
add
jle
scas
nop
add
or
(bad)
cmc
push
xchg
or
(bad)
sub
or
adc
sbb
mov
xor
or
scas
inc
xchg
sar
lea
add
add
mov
lock
inc
adc
mov
scas
faddp
xchg
jbe
repz
add
push
sub
(bad)
inc
sbb
repnz
fsub
int
push
dec
(bad)
(bad)
jg
pop
inc
ins
ss
add
out
fisubr
add
and
push
adc
(bad)
dec
or
mov
add
retf
rol
mov
(bad)
inc
cs
or
push
or
data16
out
iret
inc
push
sub
ins
add
add
sbb
leave
cli
lds
sub
leave
adc
(bad)
(bad)
out
scas
rol
xor
sub
mov
stc
push
pushf
retf
(bad)
retf
mov
(bad)
(bad)
(bad)
push
mov
test
dec
sbb
dec
pop
call
xchg
arpl
lahf
scas
adc
mov
jnp
retf
add
or
jns
mov
retf
jo
and
cmp
or
and
inc
xlat
push
add
sub
sbb
pushf
ja
xor
or
mov
fadd
jmp
jge
clc
inc
add
fs
xor
clc
or
retf
push
ror
jg
(bad)
inc
or
xlat
sub
sbb
add
pop
push
adc
sti
lods
cdq
mov
add
sbb
sbb
fadd
popf
sar
ret
or
push
xor
and
or
cmps
dec
adc
and
loop
inc
test
(bad)
jmp
push
rcr
inc
pop
sub
cmp
xor
les
lods
inc
sub
add
ror
add
in
nop
push
xchg
dec
outs
sub
mov
outs
push
push
ret
mov
fstp
adc
pop
loopne
sub
lea
sahf
adc
push
loopne
or
call
adc
cmp
sub
dec
mov
inc
dec
or
mov
lea
ret
dec
inc
shl
ja
dec
xor
(bad)
(bad)
jmp
jg
rol
shl
cmps
cmp
mov
pop
jno
sub
rcl
mov
push
imul
into
into
adc
(bad)
dec
mov
in
push
and
stos
inc
int3
inc
sub
or
mov
adc
cwde
sub
test
jo
adc
push
(bad)
(bad)
(bad)
call
dec
cmp
das
or
pop
jmp
mov
into
(bad)
ss
iret
jae
call
inc
dec
xor
int
rol
push
push
dec
xor
cwde
lock
cmp
push
or
add
push
mov
aas
cmp
sub
mov
or
ds
jo
gs
dec
aam
ins
int
adc
inc
add
(bad)
(bad)
jmp
add
enter
inc
or
es
pop
sti
xor
pop
call
pop
int3
dec
xor
push
mov
dec
mov
call
(bad)
jg
inc
dec
(bad)
mov
sub
inc
mov
dec
mov
movs
fdiv
xor
dec
scas
xor
test
and
sar
push
mov
mov
out
add
stos
(bad)
mov
enter
dec
adc
jns
jns
fisubr
(bad)
(bad)
inc
in
(bad)
movs
adc
aad
sbb
pop
(bad)
(bad)
(bad)
call
xchg
call
ret
push
je
adc
mov
lds
or
mov
jb
cmp
(bad)
inc
adc
xchg
es
stos
(bad)
dec
retf
cli
clc
push
adc
ret
call
(bad)
call
adc
fld
in
stc
and
and
shr
inc
pusha
(bad)
(bad)
out
clc
mov
lock
call
mov
sbb
hlt
or
pop
jmp
(bad)
(bad)
dec
add
dec
mov
test
sbb
shl
mov
sar
scas
push
inc
js
ret
mov
sbb
sbb
ret
dec
(bad)
cli
sbb
add
inc
lea
add
sub
fnstcw
loope
dec
xchg
scas
push
and
fist
add
pop
jo
add
mov
inc
jns
jbe
les
push
mov
fimul
(bad)
mov
das
sub
pop
sub
add
mov
mov
test
push
sar
call
fsubrp
ins
mov
sub
repnz
and
or
mov
pusha
add
dec
ss
add
into
(bad)
cld
adc
(bad)
(bad)
inc
sub
or
push
jns
sub
xor
adc
mov
cmp
mov
(bad)
in
cmp
dec
cmp
ja
add
add
nop
adc
jmp
(bad)
call
enter
pop
mov
xchg
cwde
dec
inc
je
shr
dec
add
popa
add
push
lock
retf
inc
adc
mov
inc
pop
push
cmp
xchg
fld
gs
(bad)
(bad)
dec
xor
jmp
test
lods
mov
sti
leave
jmp
adc
sub
(bad)
inc
fimul
cmp
jb
adc
inc
mov
dec
and
and
(bad)
(bad)
mov
sbb
adc
xor
(bad)
test
stc
mov
icebp
push
lds
cmp
popa
imul
mov
push
je
fdiv
xchg
or
dec
outs
mov
jmp
daa
gs
push
sub
mov
int3
nop
jmp
sbb
stos
cmp
pop
lock
adc
adc
xchg
pop
ins
cmp
dec
test
je
cdq
(bad)
fild
sbb
and
push
inc
test
sub
mov
loope
ja
fadd
loop
sub
inc
or
pusha
enter
bound
bound
(bad)
(bad)
(bad)
mov
mov
fs
outs
into
fs
lods
jmp
ds
mov
xlat
daa
call
cs
clc
mov
mov
xor
push
push
mov
add
and
(bad)
(bad)
mov
jmp
sbb
stos
sahf
call
ja
ret
mov
into
sbb
add
(bad)
mov
and
mov
(bad)
(bad)
fnsave
sbb
outs
adc
jb
loopne
mov
mov
sahf
push
sti
adc
call
lock
retf
add
adc
rol
dec
lock
cmp
mov
mov
lock
ud0
jmp
mov
xchg
lock
ror
sbb
adc
dec
dec
rcl
cmp
clc
xchg
shl
mov
or
xchg
adc
call
call
and
sub
cmp
jb
mov
ret
or
xchg
test
(bad)
(bad)
(bad)
dec
popa
dec
or
add
arpl
mov
dec
loop
pushf
leave
jecxz
jp
xlat
loopne
add
adc
sbb
nop
inc
ins
xor
add
jo
ja
xchg
xor
in
adc
stos
sbb
xor
jns
repz
mov
inc
mov
lods
movs
nop
fisubr
push
stos
adc
and
icebp
inc
mov
lods
add
out
clc
call
pop
and
sbb
adc
les
push
inc
or
mov
xchg
daa
cmp
fwait
mov
sbb
and
or
pop
stos
pop
mov
and
clc
(bad)
(bad)
inc
arpl
js
add
nop
mov
daa
xchg
inc
mov
inc
adc
sub
rcr
outs
out
add
jecxz
or
push
mov
shr
or
ds
sahf
xchg
sahf
or
test
(bad)
(bad)
(bad)
push
pop
loope
pop
mov
pusha
and
outs
adc
rcl
popa
cmps
xor
add
jl
pop
clc
add
(bad)
(bad)
jmp
sub
and
sbb
cmp
push
mov
in
inc
sbb
enter
jge
mov
push
loop
repnz
fwait
nop
les
mov
adc
inc
pushf
jne
adc
push
(bad)
retf
aaa
fsub
add
mov
and
movs
sbb
lock
jmp
dec
xchg
pop
inc
jmp
mov
jp
mov
(bad)
(bad)
fisttp
pop
gs
jl
outs
jo
pushf
and
cmp
jg
popa
cld
fist
inc
sbb
xor
jl
mov
sbb
mov
or
xor
dec
pop
dec
or
jl
pop
mov
bound
inc
movs
cdq
bound
in
loopne
cmp
dec
(bad)
inc
sti
jbe
adc
push
jl
movups
sub
and
mov
jle
call
or
mov
(bad)
dec
fsubr
dec
mov
xor
and
jo
sub
mov
pop
cmp
xchg
add
jo
push
into
or
push
jge
arpl
push
leave
mov
dec
jmp
sub
pop
adc
xchg
xor
dec
(bad)
(bad)
mov
xchg
in
and
mov
inc
dec
rcl
or
mov
dec
inc
sbb
in
adc
xchg
pop
cmp
(bad)
jmp
add
or
xor
mov
mov
pop
cs
cmp
xchg
dec
adc
sahf
xchg
stos
mov
(bad)
push
mov
mov
ret
(bad)
(bad)
fwait
rcr
xlat
fcomp
mov
out
inc
gs
(bad)
(bad)
inc
lahf
stc
sbb
push
jmp
inc
(bad)
and
mov
xor
push
out
mov
mov
adc
(bad)
(bad)
js
mov
pop
xor
mov
jb
jl
add
packsswb
xchg
retf
sub
repz
lahf
mov
movs
mov
adc
add
add
add
(bad)
dec
retf
out
push
add
cmps
pop
push
cs
loope
or
pop
sub
das
js
and
add
cmp
dec
jo
popf
add
sbb
stos
(bad)
(bad)
(bad)
dec
clc
dec
test
jbe
sub
mov
das
fwait
or
out
pop
or
or
add
addr16
cwde
pushf
add
(bad)
call
jbe
call
je
dec
sub
or
or
in
int
jle
movs
(bad)
inc
push
jl
jmp
outs
xor
inc
std
(bad)
jg
jmp
mov
sub
test
inc
sti
push
ins
adc
sub
push
push
mov
mov
sar
jg
mov
push
pop
pop
and
and
mov
mov
adc
inc
add
(bad)
(bad)
(bad)
out
enter
hlt
sub
and
pop
ins
jnp
cmps
or
push
push
pop
and
inc
or
jl
sub
add
int3
fadd
add
or
clc
or
cld
adc
or
or
or
pop
add
or
sbb
sub
dec
xchg
(bad)
push
shl
repnz
adc
inc
adc
mov
push
push
push
lock
(bad)
call
pop
dec
pop
push
fs
out
mov
push
push
push
cmp
test
and
clc
dec
or
jb
enter
or
push
pop
outs
push
rcl
sbb
cmp
pusha
xor
ins
cs
(bad)
(bad)
call
xor
je
js
(bad)
xor
inc
and
adc
cwde
inc
pop
icebp
dec
or
and
xor
ss
call
push
lods
pop
sbb
jnp
add
xchg
add
invd
add
loop
or
pop
sbb
inc
lock
jmp
enter
das
and
and
sub
lahf
fs
shl
dec
dec
cmp
cli
stos
fs
add
mov
push
or
mov
ror
push
ror
fwait
mov
jl
dec
sbb
xchg
icebp
(bad)
push
out
add
les
les
jb
push
je
xchg
imul
(bad)
fnsave
jl
cmp
jbe
or
mov
add
push
add
test
cdq
fst
inc
adc
cmp
cmp
sbb
dec
push
loopne
xchg
hlt
sbb
mov
adc
imul
adc
mov
(bad)
pusha
aas
mov
jne
(bad)
(bad)
call
mov
sub
push
or
mov
dec
jcxz
or
xchg
es
add
cs
fbld
push
cmp
mov
dec
movs
das
int
push
mov
mov
test
hlt
cmp
loope
inc
fmul
and
sbb
cmp
sbb
stos
(bad)
sbb
js
sbb
data16
(bad)
(bad)
mov
outs
pop
cmp
mov
mov
call
dec
inc
lea
std
and
(bad)
call
mov
and
dec
xor
jbe
or
add
xor
pop
adc
jo
into
mov
push
sbb
jg
test
fmul
test
inc
mov
jmp
dec
fisttp
jecxz
or
jne
add
or
leave
add
rcl
pop
fs
xlat
and
sahf
inc
xor
pop
push
call
ret
dec
(bad)
sti
xor
fwait
hlt
add
dec
(bad)
(bad)
(bad)
dec
pop
add
push
das
inc
fcom
retf
stos
add
xchg
shl
aam
lea
jmp
jbe
push
sub
sbb
ins
imul
fprem
mov
neg
mov
inc
(bad)
(bad)
inc
cmp
in
sub
(bad)
jle
xor
push
nop
dec
sti
and
aaa
mov
and
add
jl
push
je
clc
or
(bad)
call
mov
les
mov
dec
retf
stos
or
ins
mov
fidiv
or
inc
stc
sub
cmp
fmul
jne
sub
and
xchg
lock
push
loop
cmp
(bad)
(bad)
call
cmp
popa
ins
sbb
std
add
aam
xor
or
cmp
call
jmp
repnz
nop
push
push
mov
sub
jmp
sbb
das
(bad)
mov
cmps
enter
shl
add
test
(bad)
(bad)
(bad)
(bad)
mov
mov
fsub
fcmovnb
add
out
jne
add
adc
mov
loopne
push
push
dec
out
mov
ins
scas
sti
call
mov
aaa
clc
jle
mov
dec
pop
mov
dec
jmp
lea
in
or
dec
shl
pop
adc
(bad)
(bad)
inc
jmp
aad
(bad)
in
add
mov
pusha
adc
call
(bad)
fist
mov
mov
inc
mov
ret
loopne
sub
add
add
repnz
inc
cmp
sbb
or
call
pop
dec
clc
js
cmp
jl
mov
push
(bad)
mov
push
movs
test
jo
push
jg
inc
cld
fimul
cmps
fiadd
adc
sub
xchg
xchg
mov
xchg
ss
jno
ins
and
call
and
dec
or
bound
daa
cmp
sub
cli
dec
sub
sub
les
mov
(bad)
dec
dec
aaa
out
or
loope
adc
aad
mov
popa
cs
pop
stos
pop
mov
xor
aad
in
adc
fisubr
nop
add
xchg
(bad)
in
adc
push
push
push
push
jbe
lods
inc
mov
(bad)
(bad)
inc
mov
mov
mov
les
retf
inc
enter
aam
xchg
xchg
retf
or
(bad)
(bad)
(bad)
fmul
in
retf
dec
ins
scas
xchg
mov
cmp
push
xchg
and
dec
repnz
xor
aas
sar
inc
xor
add
dec
dec
push
add
dec
pushf
push
sar
jmp
xchg
xchg
xchg
inc
cmp
push
push
lock
pop
push
js
pop
inc
sbb
jl
test
fild
jg
pop
push
mov
mov
and
cmp
jle
call
aam
aam
out
xchg
dec
dec
dec
dec
sbb
inc
aad
pop
loope
nop
dec
aad
or
mov
and
mov
ins
push
cmp
inc
jmp
leave
clc
int3
xor
push
retf
sbb
ds
sub
push
dec
adc
out
pop
aam
clc
adc
jg
hlt
(bad)
(bad)
(bad)
dec
dec
rcr
mov
mov
outs
add
movs
imul
or
adc
lock
and
hlt
out
ror
push
out
cli
call
mov
xor
sub
mov
cmp
xchg
test
mov
lea
sbb
add
int3
and
fild
push
shl
(bad)
(bad)
(bad)
dec
push
in
inc
lock
outs
jnp
xor
jnp
or
push
sub
xor
rol
or
cwde
or
adc
sub
cmp
psubd
pop
sbb
and
out
imul
div
add
clc
pop
cmp
sub
mov
xchg
add
cld
add
lock
add
cwde
mov
mov
or
sub
add
jae
shl
mov
(bad)
(bad)
(bad)
push
(bad)
(bad)
or
dec
add
test
(bad)
ins
push
movs
sbb
push
(bad)
outs
clc
call
xor
cld
(bad)
cmp
inc
inc
stos
and
xchg
jl
enter
sub
mov
and
push
sub
cmp
pop
jl
jmp
test
xor
mov
add
(bad)
(bad)
inc
cmc
aad
xchg
add
iret
out
enter
cmp
sub
mov
sub
in
out
in
out
and
mov
jecxz
jns
dec
pop
das
pop
xor
and
push
sbb
(bad)
(bad)
inc
repnz
xor
(bad)
push
(bad)
jo
mov
popf
div
repnz
in
cwde
(bad)
fbld
loopne
jl
cwde
adc
mov
enter
cwde
jmp
lock
cdq
clc
call
ins
sbb
sbb
out
sub
push
mov
loopne
lock
(bad)
(bad)
inc
push
cmps
inc
push
add
inc
ret
dec
sahf
and
imul
or
sub
(bad)
(bad)
jg
inc
test
jb
ret
pop
cmps
jno
inc
push
loopne
push
jo
mov
out
nop
cmp
dec
(bad)
inc
xor
or
jmp
xor
sub
(bad)
call
enter
(bad)
xor
je
or
ret
jmp
ds
or
cvtdq2ps
ins
adc
mov
lea
std
cmps
sub
jne
mov
jmp
mov
fdivrp
(bad)
(bad)
fistp
push
cld
push
adc
lds
in
nop
cmps
dec
mov
clc
sar
inc
pop
cmp
xchg
sti
jmp
mov
fild
imul
sbb
shl
or
mov
sbb
inc
popa
or
into
jp
mov
jmp
clc
dec
fadd
fchs
xlat
enter
xchg
dec
push
(bad)
(bad)
(bad)
call
call
or
jbe
clc
or
add
movs
call
(bad)
(bad)
call
jo
mov
loope
fcos
std
or
add
loopne
lea
cmovle
jmp
daa
shr
add
(bad)
call
sbb
and
lods
and
cmp
fmul
fldenv
sbb
(bad)
mov
out
in
(bad)
pop
setge
add
sbb
popa
cld
(bad)
(bad)
in
mov
cmps
or
mov
movs
ret
(bad)
pop
pusha
lds
(bad)
jg
rcr
(bad)
or
xchg
ror
mov
cmp
icebp
(bad)
jmp
or
sub
jns
sahf
pop
retf
cmp
inc
jmp
jb
inc
daa
sahf
mov
jbe
cmps
jle
shr
add
add
mov
das
cwde
push
out
or
pushf
push
sub
icebp
jg
lock
and
cwde
dec
(bad)
mov
sbb
test
(bad)
lock
(bad)
inc
mov
fnstcw
sub
add
jl
xor
add
retf
dec
call
lea
es
add
and
and
and
je
mov
dec
push
or
xor
dec
(bad)
inc
clc
mov
sub
pop
cmp
dec
movs
(bad)
(bad)
dec
ins
loope
mov
lea
add
repnz
jle
fst
adc
sbb
(bad)
(bad)
jmp
adc
or
or
push
dec
add
adc
loope
xor
fcomi
push
or
inc
sbb
imul
sbb
cmp
(bad)
jmp
jne
pop
sbb
dec
push
shl
inc
imul
call
mov
push
xor
or
(bad)
jg
dec
(bad)
or
ins
ds
dec
data16
pop
mov
rcl
aad
(bad)
jmp
or
adc
pop
mov
add
mov
(bad)
call
or
add
scas
inc
cmp
test
cmp
ud0
nop
icebp
sub
xor
inc
xor
adc
(bad)
(bad)
jmp
cli
jg
inc
lea
mov
test
js
dec
pop
add
adc
jne
jmp
test
xor
mov
dec
jno
cmp
or
mov
mov
pop
jo
je
adc
lahf
mov
sub
bound
inc
adc
dec
call
(bad)
pop
and
push
loop
rcr
repnz
mov
xor
call
or
mov
popa
sbb
call
jbe
dec
push
sub
(bad)
inc
nop
pop
fs
cmp
or
cs
pop
adc
(bad)
cmps
sub
das
into
pusha
ret
cmps
push
fiadd
daa
add
sbb
xchg
sub
(bad)
(bad)
jg
xchg
(bad)
fld
pop
dec
inc
imul
rcl
ss
jnp
das
int
and
push
stos
(bad)
(bad)
(bad)
(bad)
cmp
clc
popa
int
mov
outs
inc
mov
ret
sub
icebp
jno
jno
pop
enter
aaa
add
(bad)
(bad)
inc
jae
leave
shl
mov
aaa
or
xor
pop
add
test
rcr
push
dec
retf
sbb
and
ret
fdivp
dec
jnp
imul
cmp
mov
pop
repz
scas
clc
cmps
mov
push
dec
or
dec
and
xor
sahf
or
stos
sub
(bad)
fmul
xor
or
or
aaa
(bad)
(bad)
jg
test
mov
cmc
(bad)
ja
xor
cwde
sub
outs
push
(bad)
(bad)
(bad)
push
sub
push
mov
and
inc
dec
mov
push
cmp
int
jecxz
mov
(bad)
(bad)
(bad)
jmp
mov
imul
mov
inc
xor
or
(bad)
(bad)
(bad)
inc
stos
inc
mov
mov
cmp
mov
or
(bad)
dec
mov
or
int
and
jg
(bad)
jmp
mov
jns
fiadd
jb
and
fdiv
xor
mov
dec
fnstcw
or
sar
(bad)
call
fidivr
add
nop
jo
adc
cmps
pop
xchg
push
jmp
xor
test
sub
or
gs
clc
add
mov
dec
cli
(bad)
dec
mov
or
dec
daa
pop
enter
ds
repnz
mov
mov
add
ret
cmp
jg
mov
mov
xchg
and
hlt
or
les
or
(bad)
jmp
xchg
and
mov
aas
jge
jmp
pop
sbb
add
add
or
(bad)
(bad)
(bad)
dec
stos
retf
pop
push
adc
in
add
cmp
sbb
pop
sbb
mov
dec
mov
(bad)
(bad)
jmp
cmp
aam
retf
cs
sbb
push
sub
in
xor
das
outs
mov
retf
inc
sbb
and
retf
xchg
push
push
and
jmp
test
jp
pop
fs
in
cmp
or
sub
(bad)
(bad)
jmp
push
pushw
mov
mov
adc
int3
dec
pop
add
pop
aaa
imul
sub
(bad)
jmp
pop
jle
retf
bound
arpl
mov
mov
ins
mov
aam
fdivr
(bad)
(bad)
call
fsub
sbb
callw
sbb
push
imul
add
mov
(bad)
dec
push
sbb
cmc
mov
sbb
fcomip
sbb
inc
sbb
mov
jb
fs
jo
(bad)
(bad)
(bad)
push
push
or
test
call
xchg
je
int
inc
movs
push
jbe
int
or
pop
cld
jmp
inc
push
repnz
add
or
cld
(bad)
(bad)
push
fadd
and
jb
stos
fcom
aaa
movs
out
mov
cmp
push
and
xchg
test
(bad)
inc
ins
movs
loopne
or
(bad)
aas
ret
cmp
fadd
sub
das
dec
dec
or
clc
(bad)
(bad)
(bad)
call
mov
es
sbb
addr16
ins
mov
mov
rcr
adc
(bad)
(bad)
(bad)
jmp
push
aas
mov
test
aas
es
outs
inc
(bad)
push
jmp
push
jo
outs
(bad)
(bad)
pusha
and
call
pop
push
inc
fs
aas
call
adc
bound
sahf
dec
mov
or
sbb
sahf
push
pusha
xchg
mov
add
inc
pop
xor
and
mov
je
inc
lock
and
mov
jmp
out
and
hlt
and
enter
xchg
jmp
dec
sahf
and
dec
push
icebp
jg
and
rol
dec
sub
sti
xor
inc
inc
test
call
(bad)
dec
popf
cmp
cld
nop
fwait
jnp
mov
dec
mov
lds
(bad)
(bad)
(bad)
(bad)
fdivr
les
adc
dec
inc
sbb
push
pop
sub
mov
pop
cmp
and
(bad)
jmp
test
bound
(bad)
aad
mov
push
sbb
inc
mov
add
xor
mov
lock
(bad)
(bad)
aas
dec
mov
add
xor
xchg
ret
and
adc
dec
dec
icebp
mov
ret
movs
(bad)
(bad)
(bad)
fbld
test
mov
(bad)
jl
dec
fisubr
lock
inc
mov
fild
test
(bad)
(bad)
dec
sbb
imul
fbld
mov
cwde
imul
mov
outs
jb
cli
call
dec
cwde
mov
enter
inc
imul
pop
add
add
push
pop
dec
jmp
(bad)
call
in
je
push
sbb
xchg
cmc
push
shl
call
sub
inc
add
cs
push
aaa
or
(bad)
inc
in
jle
ins
push
(bad)
adc
mov
(bad)
rcl
mov
(bad)
mov
scas
imul
jge
or
jmp
cmp
dec
jmp
(bad)
addr16
mov
adc
lock
push
or
xor
or
xchg
push
clc
and
stc
lock
retf
or
ffree
(bad)
dec
or
aaa
loope
je
fcmovb
cmp
mov
pop
fiadd
clc
xchg
stos
retf
fidivr
inc
loope
jmp
jg
push
jbe
dec
movs
out
cmp
pop
ja
sbb
or
xor
(bad)
(bad)
cmp
and
push
fild
xchg
sbb
loopne
sti
les
push
jne
pop
in
pop
(bad)
(bad)
(bad)
dec
iret
cmps
pusha
jge
sahf
inc
or
add
adc
mov
loope
or
push
cmc
inc
rcr
das
sbb
lods
xchg
dec
push
cmp
mov
(bad)
mov
scas
mov
dec
loopne
pushf
shr
add
repnz
into
(bad)
cmp
cmp
pusha
inc
cwde
(bad)
(bad)
aas
pusha
xchg
pxor
das
(bad)
movs
in
inc
pop
cdq
add
xor
xchg
inc
rcl
pop
clc
test
gs
and
push
jo
(bad)
enter
sti
jmp
outs
pop
dec
jle
arpl
dec
ror
pushw
add
jg
sub
outs
or
jle
fld
add
loope
ret
ret
stos
stc
ja
out
pop
sbb
mov
ret
ret
dec
lock
pop
sbb
sbb
xlat
mov
mov
mov
and
arpl
arpl
js
(bad)
(bad)
(bad)
push
adc
outs
(bad)
sbb
jne
gs
ficomp
xchg
sub
sub
push
pop
jbe
dec
push
imul
das
push
das
ins
jo
fist
cmp
(bad)
jg
sbb
cmp
(bad)
(bad)
cmp
push
push
popa
(bad)
(bad)
(bad)
inc
aaa
add
movs
mov
imul
jae
aaa
fisubr
iret
pop
iret
pop
in
ficom
sub
inc
mov
cld
pop
push
xchg
xor
sub
add
mov
ins
data16
lock
fild
push
call
mov
int3
jne
push
(bad)
(bad)
jmp
or
adc
mov
ins
shr
aas
mov
mov
fbstp
test
xchg
and
rcl
in
sub
imul
mov
ins
xchg
inc
jns
and
sbb
pop
repnz
iret
sub
add
add
es
clc
jmp
or
inc
jae
and
push
sub
(bad)
(bad)
push
push
push
dec
outs
repnz
inc
arpl
imul
(bad)
arpl
imul
ss
sar
.byte
