push
mov
sub
or
push
sbb
push
mov
or
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
dec
push
jmp
mov
(bad)
sub
sbb
movs
mov
movs
dec
movs
jns
push
test
cmps
(bad)
not
fsub
scas
test
mov
movs
and
and
ins
push
mov
shl
xor
(bad)
push
enter
jbe
retf
outs
xchg
add
add
pushf
lahf
mov
jge
call
mov
dec
adc
popa
jecxz
cmp
ss
mov
jge
fsubr
pop
clc
mov
xchg
dec
jecxz
lods
movs
(bad)
pop
dec
push
jl
fwait
cmps
pop
aam
mov
and
in
int3
jecxz
movs
inc
push
movs
movs
add
call
aam
int3
or
pop
xor
das
and
lods
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sbb
mov
cmp
jle
jmp
push
push
push
call
mov
mov
lea
xor
xor
push
shr
add
shl
or
mov
mov
sbb
push
push
inc
lea
xor
mov
push
and
mov
mov
sub
mov
dec
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
punpckhwd
jg
xor
xchg
mov
add
add
pop
cmp
in
lods
std
cmp
mov
lahf
adc
jmp
pop
js
test
or
adc
les
outs
leave
xor
lods
add
push
in
dec
scas
test
dec
adc
js
inc
xchg
(bad)
mov
bound
retf
popa
aas
ds
not
jge
into
stc
jae
cmp
adc
adc
les
in
das
xchg
xor
les
test
and
int
and
adc
xchg
js
shl
dec
nop
jb
adc
jne
js
push
mov
sbb
push
call
(bad)
lea
test
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
add
mov
sbb
call
mov
mov
and
lea
push
lea
push
adc
call
sbb
lea
sub
push
or
lea
push
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
outs
cdq
mov
push
outs
popf
mov
daa
fcomip
jp
add
mov
jnp
test
lock
imul
scas
mov
cmps
fmul
(bad)
stc
and
push
dec
sub
nop
mov
int
push
retf
cmp
push
adc
call
cmp
shr
inc
aas
shl
xchg
pop
add
imul
ss
dec
(bad)
fistp
add
arpl
inc
cmp
push
mov
add
xlat
popf
mov
(bad)
fs
daa
cdq
cmps
in
(bad)
xor
int
sbb
je
clc
mov
mov
in
add
outs
stos
mov
add
je
icebp
test
pusha
jae
lock
cmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
call
cmp
jb
sub
jmp
push
call
mov
push
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
je
in
in
jne
sbb
in
push
mov
add
fst
test
clc
cmp
aaa
jmp
repz
xchg
add
inc
inc
jb
rcr
jl
lods
sub
add
mov
inc
stos
loope
lods
ficom
jg
popf
mov
lock
dec
lods
out
jnp
inc
sbb
xor
add
add
fucomp
mov
jo
std
cmps
inc
out
xlat
mov
xchg
xchg
inc
xor
je
lods
cmp
lods
icebp
dec
jge
das
mov
sahf
shl
mov
fmul
xchg
fiadd
sbb
push
mov
dec
pop
bound
fxch
inc
jl
mov
test
fild
mov
pop
jae
sub
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
pop
pop
xor
test
jne
push
sub
push
call
pop
cmp
jl
jmp
push
push
push
push
push
push
push
push
push
call
pop
test
je
mov
push
mov
push
mov
lea
push
and
mov
sbb
call
cmp
mov
jne
or
mov
mov
add
mov
mov
dec
mov
cmp
ja
sub
jmp
push
push
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
or
and
jecxz
jnp
push
out
mov
add
add
sti
(bad)
or
mov
test
cmp
mov
mov
mov
push
retf
sub
xlat
pushf
shr
push
call
inc
sub
fwait
es
or
arpl
and
lods
(bad)
loope
movs
push
ins
pop
rcl
js
lea
out
js
and
shl
js
mov
call
es
jl
and
sti
scas
and
jno
mov
sbb
dec
xor
cmp
cmps
iret
lock
add
in
outs
dec
push
and
push
xchg
ss
inc
or
and
jnp
sbb
les
stos
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
xor
and
and
cmp
jge
and
or
jmp
push
call
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
fwait
cmp
mov
add
add
movs
(bad)
and
gs
fsubr
in
addr16
mov
outs
push
jge
pop
jl
pushf
sub
and
mov
mov
mov
cmps
sbb
xor
push
rcr
xor
sbb
(bad)
in
mov
aad
jl
inc
xor
xchg
sub
arpl
pop
fild
ins
in
xchg
xchg
mov
nop
jne
sbb
mov
pop
std
sub
xor
(bad)
arpl
and
in
daa
hlt
imul
inc
push
mov
daa
aaa
xchg
jp
pop
mov
enter
xor
(bad)
sbb
add
fcom
cmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
sub
and
xor
add
xor
div
mov
mov
mov
mov
cmp
mov
jae
mov
sub
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jl
jno
std
frndint
mov
xor
xchg
pop
xor
add
mov
aaa
push
jns
call
fisub
push
fdiv
(bad)
push
loop
aaa
inc
inc
test
ss
xor
gs
lahf
or
and
neg
leave
lea
mov
(bad)
call
pop
cmp
push
mov
add
or
pop
mov
adc
sbb
aas
test
add
pop
sbb
shl
hlt
loop
imul
ja
jp
sub
inc
pop
push
les
enter
add
sbb
sahf
pop
cmp
mov
(bad)
pop
sar
out
or
inc
mov
xchg
sbb
adc
fucomi
push
dec
ss
stos
test
sub
cmps
cmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
cmp
ja
jmp
push
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
pop
and
repz
cmp
call
mov
xor
xor
jbe
fisub
pop
repz
push
cdq
(bad)
fst
xchg
lods
push
sub
jle
add
inc
jbe
cli
pop
enter
pop
mov
ret
mov
aas
pusha
dec
mov
and
xchg
push
pop
retf
dec
mov
call
call
(bad)
xor
pop
inc
mov
inc
ins
sub
and
in
or
in
es
movs
imul
cs
ror
jnp
and
dec
push
push
iret
sti
pop
mov
sbb
(bad)
fldcw
sub
fdivr
fs
or
outs
test
cmp
and
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
sub
mov
xor
add
mov
sub
or
imul
mov
and
xor
and
mov
sub
mov
test
mov
je
xor
mov
add
add
mov
mov
mov
sub
or
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
js
clc
dec
ss
xchg
mov
bnd
add
add
jnp
and
lods
lahf
stos
push
cmp
outs
pushf
sub
xor
das
ja
jp
cmp
int3
pop
and
ret
out
ja
push
add
sbb
mov
mov
loope
cmp
mov
pop
icebp
sub
cld
cld
adc
lods
xor
cmp
popf
(bad)
nop
cdq
repz
sbb
sub
(bad)
pop
popa
xchg
repz
mov
jp
add
mov
dec
mov
inc
and
in
es
outs
cmp
bound
into
add
movs
jb
cmp
(bad)
arpl
inc
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
xor
mov
add
mov
cmp
jg
jmp
push
push
push
push
push
push
call
mov
mov
or
xor
and
and
mov
adc
mov
mov
mov
sub
and
mov
movzx
sbb
mov
mov
and
or
xor
adc
xor
adc
div
mov
mov
cmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
pop
pop
stos
cmp
cdq
pop
jecxz
or
mov
movs
push
add
mov
js
pop
sub
jno
add
daa
mov
jo
adc
adc
cli
jmp
push
test
push
dec
ds
push
pop
pop
sbb
xor
(bad)
js
adc
ret
ret
ss
pop
fnstcw
add
xchg
and
(bad)
aad
dec
push
xchg
and
pusha
mov
rcl
dec
and
push
pop
cmps
mov
hlt
pop
ja
shr
xor
in
ret
clc
loop
xor
ja
ret
rol
icebp
popf
repnz
add
jne
scas
mov
pusha
outs
sub
sbb
out
imul
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jae
mov
mov
cmp
jle
xor
add
and
mov
jmp
push
push
push
call
mov
mov
mov
mov
mov
sub
xor
mov
mov
sub
adc
mov
and
xor
cmp
jg
mov
mov
adc
jmp
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
and
mov
jmp
xchg
jmp
add
add
ds
pusha
mov
xchg
pushf
jp
xchg
lods
pop
aaa
fisub
jl
push
cs
shl
lock
pop
loope
outs
scas
sub
retf
push
mov
sub
jle
and
mov
jne
stc
mov
or
xchg
mov
push
and
je
and
daa
cdq
dec
push
push
push
pop
adc
gs
push
cmp
add
enter
test
sub
icebp
push
add
loope
ja
test
lds
jle
cli
sub
out
push
lods
icebp
xor
popa
icebp
jp
xchg
inc
or
xor
jg
sbb
and
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cld
imul
jle
sti
gs
mov
out
icebp
pop
or
add
jne
xchg
mov
jno
inc
fbstp
aaa
in
mov
sbb
js
mov
(bad)
push
adc
scas
mov
cmp
pop
mov
sar
movs
jb
push
sbb
ret
fild
data16
adc
mov
sar
sub
and
clc
mov
or
loop
lock
mov
retw
fdiv
repz
gs
sub
sbb
mov
push
fidivr
rcl
add
push
dec
jl
sub
adc
sti
and
xor
ins
data16
dec
inc
mov
xor
mov
(bad)
sti
lahf
ret
add
(bad)
jnp
inc
hlt
pop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
imul
mov
add
and
add
xor
mov
add
mov
mov
mov
inc
mov
cmp
jb
mov
dec
jne
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sbb
std
sbb
mov
or
mov
stc
repnz
scas
out
scas
bound
mov
mov
stos
clc
lods
enter
movs
xlat
push
shr
clc
es
clc
mov
mov
enter
adc
push
xor
jnp
dec
hlt
push
pop
sub
lods
push
mov
mov
shl
(bad)
sub
iret
fnstenv
dec
mov
cmp
js
sub
fbld
cli
xchg
sub
sub
jmp
mov
sbb
inc
cs
jne
mov
add
pop
xchg
mov
in
int
push
sbb
sub
das
pusha
sbb
repnz
dec
popa
cmp
cmp
outs
cld
cli
retf
sbb
into
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
xor
xor
shr
shl
or
mov
mov
jmp
mov
mov
xor
shl
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xchg
cli
std
inc
jle
xor
mov
add
xchg
xchg
xchg
pop
test
repnz
ret
call
dec
mov
and
push
xor
xor
movs
push
mov
xchg
cmp
stos
add
ror
bound
xor
add
iret
scas
sti
or
sbb
or
cmp
adc
out
call
push
dec
dec
test
ficom
xor
push
stos
enter
inc
jne
cli
es
xchg
sub
loope
and
jo
and
add
int3
scas
xchg
adc
into
in
pop
fdivr
scas
jmp
stos
out
loop
(bad)
cmp
push
out
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
shr
or
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jle
mov
fwait
out
jg
mov
jmp
fisubr
add
std
or
cmp
fldpi
and
aad
std
or
xor
push
pop
pop
(bad)
fdiv
in
jbe
data16
jne
ja
hlt
je
xor
add
mov
dec
xchg
lea
jge
sub
pop
fist
pop
jmp
fnstenv
stos
neg
sbb
pusha
test
popf
mov
adc
jecxz
retf
lahf
dec
jne
and
adc
lahf
push
mov
xor
xchg
xchg
movs
or
mov
out
inc
pop
aam
sbb
es
jmp
out
push
adc
jle
movs
dec
or
imul
jge
jecxz
cmp
stc
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
xor
shr
shl
or
cmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
(bad)
std
xchg
das
jno
mov
or
add
jae
scas
pusha
xor
ds
enter
or
dec
sti
sbb
or
sbb
cmp
mov
ss
mov
int3
das
xchg
(bad)
pop
clc
cmp
xchg
stos
inc
dec
pushf
stos
mov
mov
fisub
push
jg
aad
pop
push
push
enter
mov
popa
lds
sub
cdq
and
mov
and
sbb
sub
dec
sbb
into
pop
punpcklwd
inc
mov
and
inc
and
dec
jnp
dec
mov
mov
sbb
ret
add
inc
and
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
je
mov
mov
mov
xor
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
retf
pop
das
(bad)
jmp
lods
shr
ror
add
mov
out
mov
mov
mov
mov
mov
jge
xchg
pop
in
iret
sub
or
sbb
push
ins
inc
jns
inc
mov
dec
rcl
(bad)
jno
in
pop
arpl
or
(bad)
jno
scas
stc
repz
movs
fst
xchg
scas
adc
mov
add
in
loop
in
std
imul
daa
xchg
ins
in
xchg
test
sub
push
clc
lods
mov
xchg
xor
mov
cmp
xor
push
les
out
jno
ja
loopne
mov
mov
(bad)
fstp
ret
dec
pusha
sbb
mov
push
cmps
dec
cmp
in
and
test
stos
adc
xor
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
shr
shl
or
mov
xor
xor
shr
shl
or
xor
div
mov
mov
xor
xor
shr
shl
or
cmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
test
out
stos
int
scas
sbb
mov
add
add
faddp
xchg
das
jmp
mov
dec
int
rol
cmps
into
sbb
mov
enter
xor
mov
mov
mov
sbb
sub
sub
adc
xlat
out
inc
jno
mov
in
mov
ret
cwde
cmp
pop
xor
or
loopne
push
pop
or
inc
fild
nop
mov
xor
retf
jmp
sahf
inc
inc
sub
push
cmc
add
cmp
or
pushf
outs
lods
jecxz
scas
adc
(bad)
xchg
inc
(bad)
mov
mov
pop
int3
repnz
pop
(bad)
jl
sbb
mov
and
mov
std
mov
rcl
icebp
loop
xchg
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jne
mov
mov
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sti
outs
sbb
sahf
ja
dec
(bad)
iret
xchg
jo
(bad)
repnz
or
add
dec
movs
shr
jecxz
sbb
repnz
xor
mov
cmp
out
clc
aam
cmp
mov
ret
mov
(bad)
ins
jmp
ret
adc
jbe
stc
cmp
cld
push
outs
push
les
fist
arpl
xchg
mov
adc
jno
lods
loopne
bound
sub
aam
std
stos
dec
or
or
test
pop
pusha
push
loope
inc
adc
cmp
out
mov
inc
sar
scas
and
ds
mov
(bad)
call
sbb
fisttp
out
jp
sub
fxch
jae
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
shl
xor
shr
or
mov
mov
xor
shr
xor
shl
or
sub
mov
mov
add
mov
xor
mov
add
shr
mov
movzx
shl
or
movzx
mov
add
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmc
int
dec
mov
aad
xchg
and
push
add
mov
or
cmp
not
mov
in
test
mov
movs
and
or
stc
mov
inc
popa
pop
aaa
xchg
in
jmp
jg
cdq
xor
scas
pop
loopne
inc
mov
sub
cmp
xchg
add
js
xor
pop
sub
pop
repz
test
and
xor
and
jle
jae
push
fisub
jle
ret
sbb
xchg
pushf
or
jns
jb
enter
test
lds
jbe
lods
dec
xlat
leave
pushf
pop
xchg
scas
inc
stos
test
lods
adc
adc
pop
xlat
jnp
shr
stos
xchg
(bad)
test
sub
data16
sbb
stc
inc
hlt
adc
xor
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
xor
shl
xor
shr
or
mov
mov
xor
xor
shr
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
and
shl
mov
imul
add
pop
nop
fimul
stc
adc
mov
scas
pop
movd
ja
lea
pop
xor
sbb
cmp
sub
rcl
mov
rcr
das
xor
cs
push
shr
sub
popf
sbb
sub
cmps
iret
mov
mov
ds
(bad)
fst
shl
fwait
or
repz
sub
outs
bound
scas
sbb
pop
push
add
aas
(bad)
ret
sbb
ror
or
push
jb
or
lock
sub
mov
inc
loope
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
shl
or
add
mov
mov
xor
xor
and
and
shr
add
or
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lahf
cmc
std
inc
dec
mov
icebp
icebp
push
data16
xchg
or
add
inc
scas
jae
mov
add
mov
addr16
push
xchg
in
inc
iret
or
sub
into
popa
ds
inc
or
jmp
and
push
sub
sub
mov
jmp
add
ins
test
test
xchg
in
setnp
or
fs
call
and
jge
mov
sahf
push
ror
add
pop
and
push
jno
pushf
rcr
loope
push
push
mov
mov
adc
adc
push
pop
add
test
xor
adc
cmp
and
push
pop
mov
in
out
dec
in
mov
ror
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
shl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
scas
ds
std
imul
xchg
dec
or
add
adc
xlat
(bad)
sbb
mov
adc
(bad)
test
mov
jmp
popf
jo
cmp
mov
and
jg
pop
add
push
adc
sbb
mov
push
mov
dec
pushf
mov
jbe
popa
outs
arpl
push
or
sub
int3
pop
xchg
inc
in
xor
sbb
cmp
ins
test
call
inc
adc
cmp
adc
sub
test
nop
dec
mov
(bad)
cmp
mov
scas
inc
push
int3
mov
jne
sbb
dec
jp
cdq
pop
dec
or
ss
stos
mov
cmp
iret
push
add
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
shr
or
mov
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xchg
and
jnp
xlat
cld
sbb
cmp
xchg
sti
adc
add
add
pop
add
pop
mov
imul
inc
icebp
add
shr
lock
jae
dec
ins
and
(bad)
scas
or
mov
mov
ror
xchg
popa
cli
sar
ror
je
mov
ds
xchg
adc
fst
mov
jnp
scas
scas
mov
cdq
popa
imul
cmp
sbb
call
dec
popa
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
sbb
mov
inc
mov
sbb
push
or
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
out
scas
repnz
mov
imul
add
add
stos
jge
and
sar
mov
data16
loopne
sub
test
add
iret
shl
mov
test
scas
call
dec
sub
inc
fldl2t
(bad)
jecxz
sbb
(bad)
jge
push
sub
push
push
and
mov
add
pop
in
int
pop
jp
or
add
cmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
add
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
hlt
mov
repnz
mov
mov
adc
add
add
int
sub
movs
out
pop
js
mov
imul
(bad)
mov
mov
mov
or
iret
jb
inc
sar
push
push
mov
add
and
retf
out
inc
add
js
jle
push
inc
shl
push
jb
and
jno
stos
jbe
adc
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
leave
ret
push
mov
sub
mov
or
push
sbb
push
sbb
movzx
push
xor
push
push
call
mov
sbb
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sti
sti
retf
call
mov
add
mov
or
mov
arpl
fdivr
aad
or
icebp
push
sub
mov
jbe
test
xchg
sar
and
fld
push
pmulhw
test
(bad)
icebp
dec
xor
xor
in
in
loope
adc
mov
xor
test
lods
les
shr
inc
mov
ja
jns
push
not
arpl
mov
fsub
daa
add
xor
cmp
call
sbb
inc
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
jl
or
jmp
push
call
mov
and
xor
shl
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
out
cmp
dec
jle
repnz
adc
add
push
jg
dec
xchg
sub
push
lahf
cli
mov
(bad)
out
add
pop
inc
jne
adc
inc
or
or
out
mov
cmp
(bad)
fnsave
push
enter
or
in
popf
or
out
sub
not
xor
cmp
jne
push
ds
push
dec
je
pop
shl
adc
pushf
adc
outs
fdiv
push
std
fimul
add
hlt
add
pop
test
mov
add
or
inc
iret
add
mov
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
mov
mov
or
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
adc
inc
sub
jg
rcl
mov
repnz
add
mov
iret
add
jl
inc
jmp
mov
je
out
fild
mov
das
sti
adc
jbe
add
inc
leave
ss
pop
pop
fwait
add
and
add
push
mov
push
mov
xor
inc
mov
sbb
pop
jb
xor
dec
mov
js
sahf
ins
bts
dec
jo
dec
in
faddp
dec
add
push
aaa
mov
sahf
mov
push
mov
mov
jp
adc
arpl
in
cmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
shr
adc
or
sub
mov
dec
cdq
mov
sbb
mov
pop
cmp
jge
mov
jmp
push
push
call
pop
xor
mov
shld
shr
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
or
jmp
xchg
xor
add
mov
xchg
int
lock
(bad)
in
(bad)
mov
pop
pop
das
rcr
dec
lds
out
push
xchg
cs
clc
jne
(bad)
(bad)
bnd
je
cld
inc
or
pusha
in
fcmovbe
mov
loop
pop
jnp
int
pusha
loopne
imul
dec
adc
aad
mov
idiv
out
add
sub
and
out
lea
icebp
jecxz
mov
xor
stos
lds
add
add
dec
sub
cld
(bad)
in
and
scas
rcr
popf
mov
rol
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
shl
add
or
or
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
jmp
or
adc
add
xchg
mov
or
inc
jae
lock
jmp
hlt
mov
pop
int3
xor
retf
sahf
sbb
xchg
pushf
iret
xchg
xor
sahf
sti
jmp
out
in
(bad)
cmp
dec
aad
cmp
imul
(bad)
push
iret
mov
pop
nop
sub
icebp
inc
mov
es
dec
xchg
out
push
ss
out
mov
vandps
adc
into
xor
test
xor
xor
mov
or
dec
push
push
mov
jge
add
ins
das
and
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
xor
cmp
jg
mov
or
mov
jmp
push
push
push
push
push
call
add
push
pop
adc
add
shrd
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
fld
pop
sar
icebp
jo
add
mov
shl
jmp
sub
loope
xor
push
mov
out
daa
call
push
xor
mov
mov
inc
lahf
cmp
pop
fcom
push
sub
push
popa
push
sti
xchg
or
je
out
aaa
ror
cmp
nop
cdq
cmp
mov
jo
mov
or
retf
pop
push
push
mov
cs
fnstsw
hlt
out
lds
inc
(bad)
aam
stc
mov
sbb
and
sbb
pushf
adc
inc
jl
xchg
bound
popa
int
cwde
sahf
sar
scas
popa
jae
loop
push
dec
xchg
or
es
push
imul
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
shl
mul
jne
stc
xchg
mov
push
add
mov
arpl
scas
cmp
rcr
dec
into
mov
in
ss
mov
sbb
aaa
fucom
cs
in
cs
dec
cmps
loop
xor
clc
hlt
sub
test
inc
mov
xor
cli
shr
add
sahf
jl
call
add
sub
stos
pop
movs
fnstcw
shl
out
or
sub
test
or
add
jmp
mov
outs
fisub
test
adc
ror
aaa
mov
fdivr
pop
add
int3
jle
push
pop
(bad)
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
shr
xor
xor
or
shl
or
lea
add
push
add
push
not
call
mov
pop
pop
cmp
mov
je
mov
inc
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
lahf
(bad)
in
pop
inc
clc
xchg
retf
icebp
mov
add
mov
div
pop
arpl
retf
push
cmp
and
in
sbb
dec
add
(bad)
mov
or
stos
sub
push
or
movs
jb
shl
sahf
cmc
adc
push
dec
imul
xor
ror
push
into
out
and
mov
in
sbb
fsubr
fbstp
mov
sub
cmp
cmc
push
or
push
or
rcr
je
retf
cmps
xlat
mov
push
aad
ficomp
jns
push
inc
hlt
ds
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
mov
jb
mov
lea
add
mov
or
mov
sbb
xor
mov
cmp
ja
xor
add
sub
jmp
push
call
add
mov
mov
and
mov
mov
mov
mov
imul
mov
mov
mov
or
mov
add
or
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
popf
ins
aad
cmc
std
mov
icebp
xchg
pop
jecxz
push
pop
add
mov
les
mov
inc
dec
push
lahf
jae
repz
lahf
push
push
clc
jnp
add
lds
and
fcomp
(bad)
js
inc
pushf
cmps
fisttp
or
outs
mov
mov
aad
shr
mov
(bad)
push
cld
cld
mov
xor
out
cli
push
mov
test
pop
add
(bad)
(bad)
add
and
push
jne
jmp
js
repnz
mov
fbld
inc
hlt
dec
xlat
dec
jo
dec
repz
jle
mov
movs
mov
push
daa
mov
loopne
adc
daa
jl
xchg
add
jnp
in
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
inc
dec
sahf
dec
lahf
(bad)
repnz
(bad)
mov
pop
add
mov
pop
fs
mov
push
mov
inc
xchg
push
sbb
dec
cmp
push
arpl
cwde
xchg
sub
into
popa
or
push
dec
arpl
pusha
mov
pop
mov
fwait
outs
jl
cmp
sbb
cmp
mov
loopne
sbb
cli
and
stos
xor
out
call
cld
jne
pusha
mov
rol
test
repnz
test
add
shr
dec
mov
xor
or
stc
jecxz
xor
cs
pusha
xor
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
shl
shr
or
add
mov
mov
imul
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
pmaxub
ffree
lahf
(bad)
fisub
mov
add
add
jle
hlt
pushf
xchg
inc
loope
fist
(bad)
call
data16
pop
lock
dec
stc
clc
or
shl
in
outs
(bad)
pop
in
mov
int3
or
xlat
add
mov
push
out
xor
out
popa
mov
fwait
or
jmp
cmp
call
fwait
hlt
xor
retf
and
jmp
scas
lds
lahf
fs
xor
add
jecxz
xor
daa
cmc
push
shl
sbb
xchg
pop
cwde
jbe
sub
arpl
mov
popf
jp
adc
hlt
or
add
es
stos
fiadd
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
cmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
repz
and
sti
test
leave
call
sbb
add
mul
call
jno
xor
xor
stc
frstor
cmp
scas
or
or
(bad)
sub
mov
outs
ins
adc
adc
popf
repz
jnp
fiadd
arpl
retf
inc
imul
lea
mov
mov
push
jb
cmc
daa
mov
mov
gs
aas
imul
xor
xor
enter
ja
mov
add
cmp
dec
js
inc
xchg
test
push
push
inc
repnz
(bad)
jo
xor
mov
sbb
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
ja
mov
mov
and
mov
mov
mov
add
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
jmp
push
mov
sub
adc
push
cmp
jbe
mov
sub
jmp
push
call
push
mov
xor
shl
mov
sbb
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
adc
icebp
add
jmp
or
xchg
xlat
sbb
add
add
out
add
cmp
cmc
mov
scas
sub
pop
iret
pop
(bad)
mov
fisttp
xchg
stc
xlat
in
push
and
cmc
add
mov
dec
lahf
cmp
xor
gs
ret
pop
mov
pushf
mov
mov
sbb
imul
ror
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
push
shr
or
mov
sbb
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
adc
jge
jg
outs
jmp
xor
repnz
add
push
add
add
mov
add
lods
in
je
mov
ficomp
jle
sti
pop
jmp
std
ficom
loope
or
mov
cdq
popf
std
jmp
inc
sub
sbb
jno
stc
jp
loopne
fiadd
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
not
lea
mov
mov
neg
mov
sub
xor
add
shr
xor
cmp
jl
jmp
push
call
shl
or
mov
mov
xor
shr
xor
cmp
jbe
jmp
push
push
push
push
call
shl
or
add
mov
mov
mov
mov
cmp
jge
sbb
jmp
push
call
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xchg
push
add
pop
cmc
adc
mov
cmp
add
add
stos
push
push
jns
jb
xor
pop
push
xchg
daa
sub
jecxz
jne
stos
jle
jmp
out
int
push
jne
push
retf
mov
(bad)
pop
fistp
lock
jmp
sub
fndisi(8087
adc
xchg
cmp
sbb
frstor
xor
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
mov
xlat
cmc
movs
cld
jmp
sub
add
push
add
add
or
pop
sbb
lods
adc
jle
sub
(bad)
mov
fcom
xchg
leave
or
adc
shl
add
pop
jge
ret
mov
into
and
shr
ins
dec
leave
mov
loopne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
dec
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sahf
out
jge
sub
repnz
add
push
add
add
cmp
lods
popf
popf
retf
cwde
(bad)
jne
scas
xchg
ins
jl
adc
es
push
mov
mov
push
adc
jmp
in
cmp
push
adc
sbb
inc
paddw
repnz
cmp
xor
mov
jo
push
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
xor
sbb
mov
adc
xor
shrd
or
shl
neg
xor
add
xor
shr
or
or
xor
cmp
jne
cmp
jne
mov
push
call
jmp
call
mov
mov
xor
lea
push
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
imul
popa
lahf
jge
cli
xchg
rcl
icebp
ins
sbb
add
add
and
push
pop
shl
push
hlt
push
inc
fidivr
xor
in
test
inc
ror
test
jecxz
test
push
cmc
aaa
sub
pop
test
cmc
push
out
call
mov
out
adc
add
or
movs
(bad)
(bad)
cmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
pop
add
push
mov
pop
push
push
sub
call
pop
mov
xor
add
mov
cmp
mov
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
push
cmp
ja
mov
sbb
jmp
push
push
push
call
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
retf
fcom
(bad)
ficomp
iret
xchg
xor
sbb
add
add
xor
mov
or
jb
(bad)
mov
aam
popa
ror
shl
inc
fldcw
(bad)
lods
mov
lock
cli
movs
mov
jb
mov
cmp
mov
pop
jge
mov
xchg
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
xor
mov
and
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
(bad)
cmp
cli
xchg
pop
sbb
add
add
into
and
lock
addr16
inc
inc
adc
adc
shr
mov
dec
fucomi
lds
bound
test
xor
push
fstp
pop
cmp
xlat
or
mov
out
arpl
adc
push
xor
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
shrd
shr
mov
and
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cs
ds
jg
into
imul
push
retf
mov
push
sbb
add
add
sub
inc
jne
jo
das
or
shl
cdq
iret
xor
leave
hlt
mov
mov
cmp
jne
jnp
aad
addr16
cmps
icebp
jge
add
jmp
jmp
mov
and
test
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
shl
or
push
mov
xor
mov
xor
not
xor
cmp
jbe
and
sub
jmp
push
push
push
call
or
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jns
xchg
xchg
mov
jg
retf
lods
(bad)
jmp
push
mov
fwait
sbb
add
add
cs
ror
imul
test
jle
int
int
sbb
fst
repnz
adc
xchg
sbb
push
les
push
xchg
add
cmc
nop
xor
cdq
pop
hlt
jbe
mov
mov
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
shrd
dec
xor
cmp
jge
mov
xor
jmp
push
call
shr
mov
mov
shl
xor
or
or
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
pop
mov
pop
std
mov
hlt
mov
lahf
jmp
sbb
add
add
rcl
pop
int3
lds
jge
mov
mov
jp
adc
std
sti
nop
sbb
icebp
push
cmp
stc
jo
imul
ja
hlt
(bad)
cmp
pop
loop
pusha
retf
push
(bad)
es
and
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
ja
jmp
push
push
push
call
mov
mov
shrd
xor
shr
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
out
adc
sbb
jmp
xchg
icebp
(bad)
cmp
add
add
dec
sbb
rol
jle
movs
pop
aas
xchg
sbb
mov
call
out
fimul
mov
dec
push
test
js
lea
leave
jns
aaa
inc
mov
adc
mov
ret
test
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
shl
cmp
jg
jmp
push
call
xor
or
mov
mov
mov
shrd
xor
or
shr
sub
mov
mov
xor
and
or
sbb
mov
mov
and
mov
movzx
or
mov
mov
mov
sbb
mov
sub
shrd
shr
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jle
inc
xchg
fdiv
call
mov
add
dec
add
add
fs
std
push
sub
dec
outs
mov
imul
das
dec
movs
(bad)
mov
aad
repnz
ror
arpl
lods
pop
xor
inc
int3
lods
not
xor
scas
or
inc
into
je
mov
mov
(bad)
xchg
test
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
shl
shl
mov
mov
xor
or
add
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
in
or
mov
fmul
ret
sbb
add
xchg
cld
(bad)
or
pop
xor
sbb
lock
xchg
int3
or
gs
lea
cdq
sub
ss
adc
sub
retf
xchg
fcomp
inc
mov
aas
mov
push
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
ret
sub
sub
push
mov
loop
or
add
add
mov
inc
cmps
ficomp
mov
push
je
xor
retf
fidivr
xor
call
xchg
movs
push
jne
lahf
xchg
cli
xlat
jmp
icebp
inc
lahf
es
cmp
mov
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
sub
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
inc
repz
repnz
push
add
dec
add
add
jp
pop
push
mov
pmaxsw
xchg
cld
(bad)
popf
out
cli
xchg
pusha
pop
popa
fwait
push
loopne
xor
aas
leave
das
lods
sbb
retf
xor
push
mov
call
fs
mov
ret
inc
mov
pop
jne
xchg
data16
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
shrd
shr
mov
mov
xor
xor
shl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
adc
sub
in
push
fidiv
xchg
icebp
jae
stc
xchg
mov
add
add
int3
(bad)
fsubr
mov
mov
xchg
cmps
adc
or
jp
mov
add
add
cli
mov
fnstcw
pop
js
(bad)
cmps
imul
pop
jb
add
and
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
or
cmp
jne
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
jmp
push
push
call
mov
pop
pop
leave
ret
mov
mov
fmul
jmp
add
retf
add
mov
inc
pop
sbb
cld
les
scas
jae
mov
inc
push
dec
repnz
dec
mov
mov
and
shr
stc
pop
or
cmps
xchg
jl
mov
xor
add
bound
in
xchg
mov
cmp
mov
push
sbb
ins
or
dec
ret
sub
aas
popf
mov
movs
repz
mov
adc
and
pop
dec
fnstcw
xchg
addr16
pop
(bad)
push
lahf
push
jge
das
fadd
mov
daa
popa
cmp
adc
adc
rcr
pop
jb
push
scas
inc
hlt
loope
inc
cmp
fild
pop
pop
test
in
iret
jb
dec
jle
shr
and
and
xchg
adc
jo
mov
inc
pop
sub
push
out
cdq
mov
cwde
mov
add
stos
or
jno
inc
jbe
fld
aad
sbb
pop
jno
pusha
xor
or
or
xchg
jmp
(bad)
mov
dec
cdq
popf
mul
and
pop
stc
sti
xor
mov
dec
pushf
or
cmp
aam
jge
hlt
pop
add
lods
fwait
jo
lahf
dec
pop
push
pop
jmp
inc
add
cld
movaps
loope
or
sub
js
add
cmp
cli
jne
(bad)
and
add
btc
stos
cmp
sbb
add
or
jmp
jne
xchg
scas
add
dec
(bad)
mov
push
shl
xchg
sub
cmp
inc
cwde
lea
(bad)
pusha
dec
daa
call
dec
int
xor
mov
fdivrp
pop
jno
dec
js
mov
cmc
arpl
xchg
and
pop
jne
fdivr
(bad)
and
sbb
jae
retf
jge
sti
dec
mov
pushf
in
jecxz
cmps
in
jmp
in
sub
bound
mov
fs
inc
ss
jmp
mov
mov
popa
adc
cs
lds
test
pop
mov
cmp
mov
and
xchg
imul
stos
pop
cdq
cmps
mov
cli
int
jle
(bad)
pop
loope
ret
leave
int3
mov
iret
or
cmps
and
lea
xor
shl
sti
sub
cld
push
scas
jb
add
jae
cmp
lock
int3
inc
imul
adc
mov
mov
gs
fisubr
jo
std
cmp
adc
xchg
stc
addr16
gs
cmp
in
iret
std
mov
jmp
xchg
clc
xchg
mov
add
retf
add
and
adc
lds
jne
jmp
mov
inc
arpl
nop
mov
add
mov
jns
or
aad
cld
ds
xor
cmp
mov
fcomp
sbb
cmc
movs
(bad)
adc
out
stos
jmp
pop
retf
fwait
mov
outs
adc
sub
ret
xchg
fadd
add
push
push
mov
mov
test
fwait
(bad)
mov
or
inc
aad
(bad)
loop
test
ds
sub
mov
daa
sub
rcl
pop
ds
ror
std
mov
mov
(bad)
mov
ins
mov
and
adc
mov
xor
dec
add
out
retf
addr16
mov
or
clc
sbb
mov
sub
and
fs
repnz
pop
scas
xchg
data16
xchg
mov
adc
sahf
push
(bad)
sub
enter
mov
sbb
and
jne
cmp
inc
xlat
mov
cmp
add
ret
mov
push
adc
mov
xchg
pop
pop
shl
in
retf
inc
adc
(bad)
mov
jge
push
push
push
dec
(bad)
sub
ret
xor
and
mov
jle
mov
dec
stos
push
test
jg
mov
mov
and
movs
adc
sbb
cli
mov
in
or
push
shl
fadd
adc
add
call
test
xchg
ss
pop
lock
mov
popa
add
push
mov
pop
or
mov
ins
lock
bound
mov
mov
gs
inc
adc
shl
mov
sub
mov
inc
dec
inc
pop
sub
pop
ja
call
std
movs
sub
ss
dec
loop
leave
aam
xor
popa
movs
xor
popf
out
call
cld
pop
popf
cmps
fnsave
and
push
cld
push
add
cmp
dec
rcr
(bad)
loope
mov
repnz
xlat
adc
mov
inc
mov
daa
mov
stc
xlat
add
ds
pop
jecxz
pop
inc
or
add
mov
xchg
mov
mov
pop
add
fcmovu
(bad)
pop
xlat
pop
call
add
jmp
ficom
movs
dec
popf
jo
ss
outs
addr16
pop
mov
(bad)
les
out
retf
cwde
dec
mov
cwde
and
jmp
mov
scas
in
mov
and
add
add
add
(bad)
in
cli
or
int
pop
cmp
jmp
push
mov
pop
cmp
lods
dec
cmps
sbb
mov
ins
xchg
and
vpxor
imul
ins
leave
sbb
(bad)
ss
add
iret
jnp
stos
std
sbb
dec
out
jp
and
inc
inc
retf
(bad)
popa
clc
fdivrp
adc
lahf
lahf
daa
test
cmp
xchg
movs
or
enter
xchg
(bad)
add
stc
or
lods
xor
push
mov
add
js
cmp
aam
rcl
mov
jmp
ror
clc
pop
sub
xchg
inc
cmp
sub
add
jno
dec
sub
jne
pop
push
push
inc
cld
mov
ss
xor
scas
push
cli
pop
imul
jns
in
mov
sub
(bad)
in
loopne
mov
push
ficomp
inc
fs
scas
ins
sub
sub
fsubr
iret
push
jecxz
dec
mov
or
fld
retf
push
leave
mov
xchg
mov
clflush
inc
xor
mov
adc
cld
inc
loopne
mov
inc
push
push
mov
ins
mov
push
cmp
xchg
imul
xor
xchg
and
loop
fs
(bad)
cmp
xor
pop
cmp
and
movs
sar
cmp
mov
jbe
int
aaa
fld
test
pop
fwait
xchg
push
mov
and
cmps
and
inc
repz
pop
call
call
or
imul
xchg
(bad)
loopne
mov
inc
and
into
and
jo
xor
cmc
and
push
call
dec
jge
stc
rcr
mov
dec
fsubr
xor
inc
jae
xor
jae
loope
clc
stos
mov
rcr
mov
jge
ja
adc
arpl
add
pop
pop
inc
inc
and
cmc
and
dec
das
(bad)
inc
pop
mov
dec
sti
cmp
stc
adc
mov
xchg
test
mov
mov
loopne
scas
adc
shl
mov
lods
xor
test
push
aad
jbe
sub
fild
add
fisubr
or
xchg
and
mov
push
retf
inc
(bad)
aaa
stc
icebp
movs
je
jbe
jo
lahf
std
sbb
xor
sub
lea
xchg
sub
retf
fwait
adc
cmps
push
mov
in
in
imul
jge
das
(bad)
stc
xchg
pop
(bad)
loop
dec
daa
add
retf
add
or
fisubr
push
stc
jo
repnz
mov
cmp
ins
div
inc
xor
mov
stos
jns
push
repz
and
(bad)
dec
push
call
jmp
jl
(bad)
sub
xchg
out
retf
adc
pop
add
lods
lds
dec
xor
push
xor
in
inc
sbb
(bad)
cwde
inc
daa
dec
inc
lahf
mov
cmp
mov
dec
enter
daa
xor
fidivr
mov
ins
cli
xchg
int3
repnz
cli
fmul
fs
push
sbb
xchg
jl
pop
mov
fist
or
mov
push
daa
cmp
xchg
test
int
xor
loop
daa
scas
dec
es
or
jmp
and
add
pop
xchg
sar
sub
sub
jo
push
(bad)
les
leave
jmp
mov
inc
mov
repnz
lahf
push
dec
xchg
(bad)
cmp
clc
fisubr
push
dec
(bad)
leave
pop
push
cmp
bound
fsub
out
push
out
pop
xchg
jp
pop
rcl
in
mov
cmp
ss
mov
xor
repz
jbe
xchg
outs
imul
int3
outs
jmp
imul
inc
fcomp
in
mov
inc
add
or
adc
cmp
inc
inc
bound
mov
idiv
xor
popa
je
sub
push
and
add
addr16
loop
sahf
xchg
push
and
retf
pushf
mov
or
jno
jb
jle
mov
(bad)
call
sar
adc
dec
enter
mov
jp
fadd
mov
in
ins
or
scas
mov
les
add
popa
fs
in
aaa
mov
test
adc
mov
stos
adc
frstor
es
aad
dec
jno
cmp
and
sbb
xchg
in
and
std
hlt
add
mov
repnz
lods
out
lahf
test
add
and
clc
ret
cld
(bad)
sti
loop
in
or
retfw
xchg
xchg
fist
inc
mov
jge
mov
cmp
inc
push
in
and
stc
and
aad
popf
mov
mov
ins
jo
push
mov
je
inc
cs
push
stos
hlt
jbe
stos
dec
mov
(bad)
movs
dec
sbb
cmc
jmp
rcr
xchg
ss
dec
xor
cli
xchg
mov
leave
pop
or
cmps
das
test
mov
ins
xchg
sbb
push
jo
fcmovne
mov
sahf
push
fild
lods
xchg
sahf
xor
add
retf
add
cld
fdivr
push
mov
jnp
lods
daa
inc
xor
stos
in
add
clc
sar
xchg
data16
in
out
dec
mov
lds
aam
and
nop
imul
adc
cmp
mov
test
and
sub
out
xor
pop
add
xchg
test
rcr
push
cmp
mov
jg
fs
pop
je
jnp
dec
js
aaa
and
ds
div
in
pop
jecxz
shl
shl
adc
hlt
xor
enter
sub
and
add
xor
jne
(bad)
cld
xor
in
dec
addr16
(bad)
xchg
and
xchg
dec
dec
cli
leave
shr
jnp
cmps
shr
in
push
add
arpl
pushf
lds
mov
mov
sbb
add
lods
inc
ret
pop
outs
aas
or
fdivr
std
pushf
adc
test
xchg
sub
imul
cmc
sub
xchg
inc
cmp
(bad)
mov
or
call
fstp
shl
or
pop
mov
push
xchg
jb
mov
aam
sbb
stos
inc
xor
adc
xor
mov
and
inc
rcr
cli
in
fsubr
sbb
pop
(bad)
jp
mov
repnz
push
and
aad
mov
int
or
sbb
jmp
ret
mov
vpmullw
jo
adc
bound
push
xchg
movs
loopne
cmp
xchg
add
pushf
(bad)
repnz
sti
jg
adc
cmp
push
aas
mov
xor
in
push
mov
mov
jmp
xchg
movs
std
pop
inc
pusha
aad
fist
adc
cmp
sub
xchg
(bad)
outs
stos
sbb
(bad)
jle
push
jmp
add
das
pop
test
sbb
das
aas
or
repz
xchg
jp
cwde
adc
cmp
in
imul
dec
mov
(bad)
cmp
inc
adc
aad
jmp
test
mul
sub
cmps
frstor
stos
dec
mov
and
xchg
repnz
pop
retf
inc
shl
or
ds
retf
loop
inc
js
pop
mov
pop
(bad)
mov
int
das
and
sub
outs
sub
(bad)
mov
stc
(bad)
and
adc
jne
push
xor
shr
pop
mov
cdq
icebp
popa
outs
xchg
or
pop
sbb
mov
repz
or
stos
call
retf
add
(bad)
push
or
sbb
lahf
sub
std
gs
int3
push
(bad)
(bad)
outs
sub
pop
jne
mov
mov
repnz
bound
shl
inc
ins
div
aas
and
add
dec
mov
bound
pusha
or
mov
cld
daa
stos
sub
sbb
ins
adc
retf
dec
sbb
(bad)
add
jns
pop
pop
jne
mov
cs
scas
sbb
xchg
ins
mov
push
mov
push
ud2
pop
adc
sub
loopne
xor
popa
add
sbb
pop
repnz
add
xor
les
out
dec
ror
inc
jge
scas
fsub
jns
int3
mov
dec
jo
add
addr16
jp
mov
cmps
mov
(bad)
cld
ret
mov
dec
call
mov
fcom
icebp
pop
and
inc
and
aaa
sbb
leave
daa
aas
ins
sbb
pop
loope
xchg
add
sbb
add
stos
nop
inc
fimul
in
lds
popf
mov
push
jmp
cmp
push
dec
in
cmp
(bad)
(bad)
cmp
xchg
xchg
or
inc
add
push
push
add
mov
int3
sbb
gs
sti
push
mov
jmp
lea
lahf
out
push
fstp
xor
aaa
cmps
cmp
mov
mov
jecxz
push
jae
(bad)
rcl
cmp
xchg
inc
lds
ret
xchg
and
xchg
cmp
xchg
pop
jbe
arpl
push
mov
xchg
sbb
inc
adc
movs
xor
pop
lea
loopne
xchg
jne
fs
mov
jl
movs
mov
and
jl
test
cld
mov
ins
arpl
push
add
jae
scas
stos
mov
call
mov
cmp
mov
cdq
push
sub
test
fsub
lahf
mov
hlt
mov
adc
jns
jg
xchg
mov
mov
loop
inc
jp
fs
cdq
repnz
mov
xor
int
mov
imul
inc
test
daa
cdq
inc
test
inc
jge
mov
and
xor
jno
iret
pop
adc
ins
fcomp
mov
fadd
and
dec
clc
in
int
mov
adc
icebp
rcl
repnz
repz
sti
pop
xor
loopne
aaa
lods
mov
outs
test
cli
clc
out
pop
iret
xor
out
cli
pop
shl
cmc
push
dec
or
test
or
(bad)
das
add
retf
add
cmp
jae
sbb
push
retf
pop
movs
mov
outs
popa
in
dec
pop
inc
inc
shl
cmps
xor
jb
push
jg
test
loopne
cmp
mov
repnz
in
mov
adc
add
and
xor
cmp
rcr
out
movs
xchg
test
mov
fst
pop
out
mov
outs
xor
adc
das
mov
xor
loopne
sbb
cwde
(bad)
das
test
fiadd
xchg
aas
xor
inc
stos
std
adc
mov
sar
scas
mov
mov
in
jl
sbb
adc
adc
jmp
repnz
lds
cld
pop
xchg
mov
xor
addr16
out
add
and
cli
xchg
pop
cwde
std
popf
call
jo
imul
repz
xchg
jb
inc
pop
xchg
push
cdq
adc
fmul
mov
lea
call
les
sub
cwde
add
jns
shr
xchg
cdq
popf
sbb
rcr
jmp
mov
addr16
movs
cs
mov
retf
mov
sbb
jb
add
pop
cli
inc
mov
add
test
imul
xor
idiv
mov
inc
scas
mov
das
or
xchg
shr
stos
pop
mov
cld
fldenv
mov
mov
jl
in
mov
inc
push
or
push
clc
cmps
pop
adc
inc
mov
inc
inc
sar
dec
imul
scas
and
ins
and
test
push
es
fs
and
mov
popf
xchg
xlat
lock
mov
fcom
mov
xchg
xor
ja
loope
jne
push
cli
fcmovb
cmp
dec
or
lds
(bad)
sbb
(bad)
lea
jb
bound
imul
jo
or
in
repz
mov
ss
out
add
mov
rcl
mov
addr16
dec
inc
add
push
rol
sar
outs
and
mov
inc
mov
pushf
xor
push
sbb
shl
adc
and
ins
retf
add
cmp
(bad)
pushw
cs
dec
push
mov
enter
call
sub
mov
and
add
movs
cmp
pop
xor
into
(bad)
xchg
popa
pop
repnz
cmp
mov
lea
inc
add
mov
sub
adc
xchg
loope
jb
std
cmc
fwait
std
fwait
out
dec
pushf
jmp
push
xchg
jno
add
retf
add
cmps
pcmpgtd
xor
cmp
add
clc
std
xchg
mov
je
push
fsub
shr
mov
dec
lock
sbb
mov
inc
out
pop
jbe
add
xor
and
out
inc
sbb
pop
pop
add
test
clc
jmp
xchg
mov
cmp
(bad)
jmp
jecxz
and
jecxz
nop
das
xchg
in
cs
sub
(bad)
loope
aas
and
mov
or
pop
or
cwde
ja
jecxz
ds
imul
cwde
jnp
xchg
imul
inc
mov
push
mov
sbb
jle
inc
dec
call
pushf
xor
imul
sti
pusha
and
fwait
xor
mov
jne
xchg
enter
mov
lea
xor
stc
clc
int
pop
mov
ficom
js
xor
xor
pop
leave
dec
(bad)
je
call
cwde
loop
lock
jmp
sbb
shr
popf
jno
rcl
lahf
mov
jge
leave
dec
lods
div
xchg
rcl
mov
mov
xchg
(bad)
aad
add
cmp
jg
jno
mov
mov
add
aas
or
and
pop
push
jne
jp
push
push
or
xor
pop
xchg
sbb
scas
or
adc
in
cmps
xor
out
repnz
addr16
push
xchg
fidiv
jg
(bad)
cmp
mov
test
mov
dec
loopne
mov
sbb
ins
sbb
call
add
pop
push
into
test
ja
test
inc
or
fidiv
xlat
imul
scas
das
mov
push
(bad)
mov
adc
cli
dec
es
mov
ret
in
jg
mov
dec
fdiv
es
inc
and
outs
fwait
and
leave
push
ds
jge
mov
or
stos
xchg
dec
xor
leave
and
mov
out
mov
and
jae
mov
stos
outs
jle
mov
(bad)
sbb
cmp
cld
mov
mov
add
sub
push
inc
in
mov
out
lods
dec
inc
add
call
dec
xchg
mov
sub
ret
lea
test
call
mov
inc
ds
mov
xchg
aaa
push
loop
dec
sub
push
ror
dec
sbb
jns
ret
sbb
dec
jmp
sbb
gs
mov
mov
sahf
jl
inc
dec
and
jo
pop
popa
pop
jmp
dec
xchg
cmp
add
xor
mov
jle
fs
sbb
pop
icebp
mov
div
fiadd
pusha
(bad)
adc
in
sbb
jae
pop
cmp
rcr
sahf
xor
je
jecxz
loope
ins
add
clc
jge
stos
retf
popa
jbe
pushf
hlt
retf
pop
stos
xor
repnz
xor
shl
jne
jmp
call
push
sub
pop
popf
dec
shl
and
shl
lea
mov
(bad)
clc
ja
mov
sub
inc
cmp
mov
test
add
out
jno
je
dec
dec
pop
ins
dec
and
pop
push
sbb
pop
sbb
out
loopne
fbld
scas
mov
stos
push
ret
or
shr
xor
int
push
dec
test
sbb
sbb
mov
in
rcr
lods
call
mov
fwait
cmc
int
dec
mov
icebp
jne
adc
daa
jg
mov
pop
ror
inc
out
fld
push
xor
(bad)
int
dec
mov
les
mov
sti
sub
mov
neg
das
ins
xor
sub
fldenv
ds
ret
movs
std
mov
mov
shr
(bad)
xchg
pop
(bad)
add
cmp
(bad)
pop
mov
imul
push
clc
lahf
fwait
inc
sub
lods
mov
sbb
inc
mov
cmp
push
xchg
aam
and
add
(bad)
push
scas
into
aas
fwait
stos
ror
adc
pop
imul
jl
pop
inc
pushf
cmp
cmp
in
lods
cmc
imul
or
fwait
push
jno
bound
mov
push
pop
adc
xor
ret
inc
pusha
ds
mov
cdq
jecxz
jle
inc
inc
and
ins
xor
pop
movs
add
adc
or
pop
out
xlat
jge
cmp
xchg
jle
es
pop
jge
add
adc
out
imul
daa
fcmovbe
imul
fcmovb
inc
inc
xchg
or
shr
(bad)
arpl
add
lods
pop
loop
mov
ret
mov
stos
out
fimul
push
pusha
add
push
xchg
push
hlt
outs
popf
fcomp
jg
push
imul
lock
mov
jge
jmp
adc
shl
js
or
lahf
sbb
arpl
inc
xor
lods
out
xor
test
push
fisubr
xor
rcl
inc
xchg
xor
push
xor
jle
xchg
call
xchg
mov
ret
jmp
or
xchg
add
add
add
add
cwde
es
cld
dec
mov
cmc
setle
(bad)
dec
ins
mov
xchg
cdq
pmaxub
out
jae
mov
psubsb
loop
cmovge
cwde
cmps
das
inc
push
mov
add
inc
sub
test
push
pop
xchg
push
mov
in
sbb
stos
dec
sub
jle
sbb
test
adc
mov
ss
mov
cli
hlt
or
js
xchg
push
cmp
addr16
scas
add
addr16
inc
clc
cli
mov
sub
out
outs
sbb
mov
inc
jb
adc
add
sbb
movs
jle
test
int
sbb
jns
cli
movs
fdivr
lds
faddp
mov
pushf
ret
jmp
mov
push
repz
push
cdq
push
aas
push
fdivr
fnstsw
stos
fwait
cs
sbb
sar
arpl
push
sahf
(bad)
ds
pop
les
push
push
movs
pop
outs
fistp
arpl
retf
mov
fild
imul
sub
xchg
mov
xchg
retf
mov
lahf
fiadd
int
setnp
loope
mov
push
neg
push
imul
or
std
out
pop
or
adc
dec
sbb
xor
je
pop
sub
sbb
mov
dec
gs
sbb
sbb
sub
sti
jp
push
xchg
idiv
hlt
enter
rol
sbb
sbb
loope
pusha
movs
movs
cmps
cmp
adc
outs
xchg
add
sbb
int
test
add
sahf
aam
jns
jo
xchg
pop
(bad)
(bad)
movs
xchg
fmulp
sti
and
cmc
mov
dec
jle
loope
pop
xor
mov
sti
test
pop
xor
cld
mov
test
mov
pop
pop
les
xchg
mov
std
dec
jmp
inc
cmp
ret
pop
inc
jno
repnz
sbb
pop
nop
daa
leave
adc
data16
aaa
pop
enter
gs
and
ror
mov
popa
push
(bad)
rcr
jb
fs
dec
imul
cmp
aam
sti
and
test
or
sar
cs
je
jge
retf
iret
das
xor
and
rcr
xor
ins
jecxz
test
pushf
adc
mov
xchg
pop
ror
pop
mov
adc
movq
(bad)
das
pop
mov
jge
iret
(bad)
and
pop
and
addr16
addr16
cmp
jmp
test
and
es
iret
cwde
hlt
mov
or
xchg
iret
cmp
add
add
add
push
xor
inc
mov
scas
fiadd
cmp
mov
ins
add
and
mov
sub
mov
mov
push
jbe
fisubr
loopne
cmps
int3
in
cmc
xchg
scas
iret
push
xchg
push
mov
nop
fldcw
int3
ret
test
mov
mov
xor
aad
aad
pop
cld
cwde
fs
popf
lods
mov
(bad)
adc
enter
xor
sar
mov
icebp
mov
pop
or
pop
xlat
dec
xlat
inc
popf
xor
jp
xchg
inc
xor
push
add
shr
jnp
iret
jno
imul
pop
sub
push
inc
inc
and
pushf
(bad)
loope
xchg
push
jp
fdivrp
and
sub
mov
add
mov
push
mov
mov
xchg
sbb
pop
pop
fstp
mov
push
mov
das
jmp
aam
shl
std
lahf
(bad)
mov
adc
push
xor
dec
neg
imul
pushf
daa
push
mov
jg
ins
jmp
push
push
mov
sbb
push
rol
daa
lds
or
call
mov
jl
push
lods
jecxz
add
fsubr
push
inc
ds
xchg
std
int
rcl
ret
xor
or
and
loopne
or
fild
mul
cmc
rcr
in
outs
repnz
fdivrp
add
and
mov
lds
test
aad
pop
push
ret
call
lds
dec
xchg
outs
fistp
inc
idiv
dec
movs
popa
push
or
pop
imul
mov
movs
dec
mov
scas
add
dec
test
aad
or
fadd
pushf
shl
int
cmp
inc
push
lods
push
rcl
cmp
ret
sbb
add
imul
aam
jo
xchg
xor
push
cmp
mov
dec
inc
int3
adc
aam
rcl
sar
aaa
sbb
jge
sbb
push
mov
out
xor
jo
je
pop
imul
cmc
sbb
jl
out
out
(bad)
cmc
mov
clc
retf
mov
imul
imul
push
adc
sbb
dec
or
push
inc
ffreep
add
(bad)
dec
movs
shl
in
rol
add
repnz
jmp
adc
rcl
rol
adc
les
push
pushf
dec
call
jp
inc
xchg
inc
sti
cli
sti
xchg
nop
icebp
cdq
cmp
add
lahf
iret
outs
pop
(bad)
js
push
dec
mov
leave
(bad)
dec
mov
xor
inc
xor
sbb
cmp
mov
mov
inc
push
inc
fdiv
gs
retf
dec
and
adc
push
mov
xor
pushf
xchg
push
inc
mov
fimul
popf
repz
out
(bad)
fdivr
outs
cmp
or
test
push
mov
jg
adc
push
jl
pop
xlat
pop
xor
mov
addr16
xchg
sbb
clc
pop
lahf
lock
ins
fcomp
or
sub
pop
mov
mov
cmps
retf
push
or
(bad)
mov
sub
lds
rcr
dec
cs
mov
mov
sub
cdq
out
xor
loope
out
ins
mov
cld
inc
xor
adc
retf
movs
jmp
ins
inc
lods
in
push
lahf
add
pop
je
add
ret
cld
stc
ss
pop
out
fdivr
fldcw
sar
and
aad
int3
or
aas
pushf
mov
not
ret
(bad)
adc
rcl
les
sub
nop
gs
inc
xor
or
stos
out
les
pop
aaa
test
and
cmp
ret
add
mov
push
pop
cmp
inc
push
jmp
test
adc
pop
lods
ins
and
cmps
popa
test
inc
fnstenv
inc
push
xchg
sbb
lods
ss
push
stc
(bad)
in
ins
pop
(bad)
aad
inc
mov
stos
es
mov
std
les
jmp
ss
add
mov
push
pop
out
ret
ret
je
ja
aad
mov
fmulp
and
(bad)
daa
mov
mov
add
dec
dec
xchg
and
scas
sti
jb
cmp
out
mov
fsubr
(bad)
pop
sbb
xor
sub
mov
cmp
fld
inc
es
loop
pop
sbb
mov
(bad)
enter
pop
xchg
retf
xor
adc
cli
push
(bad)
aas
xlat
xchg
outs
test
jns
fwait
cwde
cli
and
or
push
push
in
jecxz
xor
pop
int3
add
cmp
jb
(bad)
sbb
scas
movs
inc
xchg
sub
pop
popa
es
movs
jmp
add
jle
and
ja
xchg
jle
dec
mov
jnp
pop
jae
inc
push
addr16
adc
pop
inc
sahf
mov
sub
mov
and
retf
inc
outs
aam
test
(bad)
fcomp
fcmovnbe
(bad)
fistp
xor
clc
xchg
in
es
icebp
arpl
add
add
add
outs
dec
push
cmp
pop
popa
pushf
sub
mov
pop
xchg
mov
jbe
icebp
push
aam
jne
push
dec
es
dec
push
inc
retf
dec
mov
stos
jmp
push
mov
jnp
(bad)
mov
mov
dec
lds
adc
or
xor
mov
int3
mov
pushf
adc
add
cli
xor
cmp
or
icebp
cmp
add
int
add
fadd
dec
xlat
mov
out
ins
sbb
mov
sbb
fist
or
or
sub
leave
loopne
and
and
in
mov
jb
mov
xor
bound
mov
adc
push
(bad)
push
out
pushf
inc
pop
repnz
sub
jb
jo
daa
jne
stos
aaa
or
mov
adc
aam
lahf
(bad)
jl
adc
mov
add
mov
scas
popf
jmp
stos
add
xchg
fist
fld
and
and
ins
(bad)
aam
pop
in
jp
movs
out
pop
cmp
out
mov
cmp
(bad)
outs
or
outs
mov
mov
xchg
dec
test
cmp
push
call
add
mov
mov
fstp
retf
fst
ins
push
xor
or
ror
daa
sub
call
pop
and
pop
popa
inc
imul
sbb
pushf
push
test
ins
jp
adc
leave
xor
idiv
in
test
repnz
and
adc
aad
jg
out
aad
mov
outs
and
int3
mov
sub
dec
mov
outs
dec
outs
cmp
or
repnz
out
mov
leave
mov
sar
xchg
int3
cld
adc
push
and
jecxz
xchg
in
xchg
in
mov
add
push
dec
movs
std
pop
inc
push
mov
mov
dec
jl
add
enter
sar
pxor
jbe
out
test
cmps
jg
cwde
int
jmp
(bad)
icebp
mov
shl
in
mov
fsub
jge
pop
in
cmp
pusha
pop
loop
mov
xor
ss
push
call
dec
pop
into
mov
xor
div
inc
xchg
push
pop
mov
cld
pop
mov
pop
retf
into
cli
je
pop
adc
jecxz
cmp
inc
push
mov
xor
mov
inc
pushf
gs
cdq
sbb
push
sbb
xor
xor
mov
icebp
sub
add
add
xor
xor
xor
push
dec
ja
and
rol
jp
aad
fbstp
mov
aaa
repnz
(bad)
jmp
cmps
xlat
and
ss
movs
add
dec
in
js
loope
(bad)
cli
mov
xor
stos
outs
pmaxub
jo
fst
icebp
imul
movs
push
and
mov
ins
icebp
mov
lahf
mov
push
int3
mov
sub
dec
fs
es
loop
jle
aaa
inc
push
(bad)
xchg
retf
mov
inc
out
jns
sar
(bad)
stos
fbld
ss
sub
pop
fnstenv
pusha
jmp
leave
daa
movs
push
retf
idiv
pop
mov
add
mov
stos
push
sub
add
dec
add
xlat
(bad)
inc
hlt
clc
mov
fmul
not
mov
push
stc
fwait
xchg
push
repnz
xlat
mov
fcom
mov
test
mov
fst
leave
sub
mov
dec
jg
pop
es
lea
outs
ror
xor
rol
sbb
hlt
dec
out
sub
stos
xchg
fwait
adc
shl
sub
cmc
pop
out
inc
mov
ins
and
ret
xchg
cmps
pop
xchg
gs
sbb
jmp
mov
add
cmp
push
retf
xchg
lahf
sub
std
sahf
cmp
test
in
xlat
ss
in
fidivr
ja
loope
dec
xchg
xchg
js
lods
js
shl
in
push
repz
in
add
(bad)
call
lea
sbb
mov
and
dec
not
test
jnp
mov
and
shr
repz
add
mov
scas
lahf
sahf
sbb
pop
add
ffree
mov
or
imul
adc
and
stos
test
and
xchg
lods
daa
fdivr
ins
mov
jne
test
mov
xchg
movs
jbe
out
(bad)
xchg
(bad)
mov
arpl
(bad)
push
xchg
pop
dec
sar
mov
sub
cmc
add
xchg
dec
cld
push
retf
xchg
pop
push
mov
jmp
cld
test
jbe
dec
loope
addr16
data16
inc
movs
adc
push
movs
int
cmp
ins
dec
dec
outs
lds
push
lods
fstp
pop
and
popa
xlat
das
xor
icebp
(bad)
out
cmc
cmp
lods
jo
mov
ins
mov
cwde
sub
stos
mov
sub
pop
popa
or
pop
mov
stc
mov
fdiv
icebp
fs
xchg
test
add
dec
aaa
lods
(bad)
mov
xchg
add
jge
aam
dec
mov
mov
mov
jmp
sbb
repz
jbe
enter
inc
out
loope
fcomi
fnstcw
repnz
gs
jp
cmc
adc
(bad)
xor
movs
inc
sub
mov
jmp
xor
xor
(bad)
sti
cdq
daa
fimul
adc
xlat
icebp
and
mov
pop
dec
test
pop
aad
js
jae
push
cmp
jecxz
lods
(bad)
mov
cli
xchg
push
inc
shr
xchg
imul
jp
(bad)
aad
out
add
lods
jmp
add
adc
mov
ss
inc
inc
scas
xchg
cmp
adc
and
lea
cwde
jecxz
out
jns
mov
dec
popa
bound
or
retf
rcr
push
xor
sahf
shl
test
stos
jle
jo
or
std
push
mov
mov
jp
ins
xchg
loop
popa
adc
jle
pop
push
aad
gs
loope
sbb
shr
stos
imul
into
jle
jg
lahf
loopne
jns
aas
cmp
cmps
repnz
retf
add
xchg
imul
cdq
mov
outs
leave
loope
pop
std
test
cmp
shr
cwde
jle
adc
ins
(bad)
add
enter
mov
mov
pop
in
cmp
(bad)
(bad)
sahf
es
idiv
imul
mov
out
cmc
cwde
fdiv
cmps
shr
aaa
ins
push
sbb
out
mov
xor
dec
jle
sub
adc
retf
test
and
(bad)
aas
or
add
(bad)
jbe
jns
icebp
xor
mov
xchg
push
jecxz
mov
mul
sbb
gs
jle
mov
cs
icebp
ins
iret
dec
ins
sbb
add
fld
cmp
mov
pop
push
xchg
fisttp
in
(bad)
push
xor
shl
cmp
vandnps
jno
dec
int
addr16
push
xchg
xabort
mov
mov
cmp
push
icebp
stos
std
cs
sub
pop
xchg
fbld
sbb
rcl
mov
repnz
test
faddp
test
mov
mov
loop
sbb
add
or
pop
shl
sbb
xchg
idiv
lods
imul
cld
call
loop
jo
and
je
and
shl
fcomp
out
shr
sub
mov
aas
iret
jnp
into
popa
aad
dec
inc
shl
cmp
add
push
jmp
xchg
inc
inc
cmp
sub
lods
inc
loope
cwde
jl
jne
adc
int3
jo
push
inc
je
sub
outs
sti
idiv
mov
dec
add
retf
add
xlat
inc
addr16
stc
test
cmp
pop
cli
dec
xor
sahf
mov
fidivr
mov
int3
dec
push
repz
rcl
sub
and
mov
jno
push
mov
icebp
dec
mov
pop
sub
and
pop
movs
imul
das
push
jno
movs
aam
movs
jmp
out
mov
or
mov
fucomi
xor
xchg
push
inc
sbb
xchg
push
loope
std
shl
jo
inc
mov
adc
push
pop
arpl
div
and
and
jne
cwde
int3
jl
add
and
and
push
push
shl
sub
(bad)
(bad)
xor
scas
test
fs
(bad)
jnp
je
mov
enter
mov
mov
retf
repz
imul
pop
add
rol
cs
cdq
shl
mov
out
(bad)
fdivr
inc
lea
mov
div
mov
fs
push
in
ins
int3
call
ins
in
push
popa
dec
mov
sti
sub
fucomp
jmp
neg
imul
sub
lods
popa
inc
adc
pop
popa
shl
dec
push
aam
hlt
mov
rcr
inc
(bad)
mov
call
lock
scas
nop
dec
in
call
cld
hlt
dec
mov
sti
test
cmp
cmp
mov
int
sbb
ret
inc
jo
xlat
jns
jbe
xor
hlt
sbb
add
and
adc
inc
adc
mov
xor
push
jbe
int
sbb
or
mul
push
mov
in
lahf
test
int
mov
(bad)
push
mov
cmp
pop
popa
and
push
sub
aaa
stos
cmp
leave
dec
scas
rol
std
out
jge
retf
mov
jle
leave
mov
jne
(bad)
fnsave
dec
xchg
jmp
daa
adc
pop
pop
daa
shl
lods
repnz
or
loope
and
mov
outs
outs
mov
or
test
loopne
movs
outs
bound
pop
push
hlt
xlat
loope
gs
pop
jp
ret
push
sub
sti
or
cmp
in
ss
pop
or
dec
ret
mov
movs
retf
stc
loopne
(bad)
cmps
xchg
mulps
call
adc
stos
les
(bad)
stc
(bad)
sub
(bad)
fcom
adc
push
sub
call
std
out
cmp
daa
push
loopne
outs
mov
jb
jmp
imul
add
add
add
xchg
in
stos
(bad)
adc
push
push
mov
ror
in
cmp
xlat
lds
popf
xchg
dec
inc
inc
add
and
pcmpeqw
xor
adc
xor
cmp
push
out
addr16
in
mov
push
shr
add
mov
ins
xor
out
mov
(bad)
(bad)
xchg
jmp
out
adc
je
adc
stos
ins
and
out
fwait
std
pushf
adc
push
add
std
js
loope
xchg
repnz
pop
mov
stc
loop
inc
(bad)
test
mov
aad
cdq
test
sub
mov
cmp
dec
repz
pop
fst
jns
sbb
fnstsw
cmps
add
or
leave
icebp
in
mov
add
data16
dec
jo
and
jl
adc
cmp
cwde
add
add
sub
pop
mov
(bad)
fs
jnp
sub
xor
jmp
mov
or
repnz
bound
fs
inc
fld
push
adc
jge
shl
push
push
inc
retf
pop
or
dec
and
or
fstp
sub
sbb
lea
mov
fxch
pop
mov
jl
xchg
sti
adc
mov
sub
push
xor
mov
imul
sub
cmc
xor
cwde
stc
xor
addr16
or
std
js
and
cmp
mov
js
inc
jnp
outs
loope
(bad)
sar
(bad)
out
in
inc
mov
add
jns
cmps
test
adc
or
xchg
fucomi
test
sbb
cs
loop
fwait
mul
dec
je
adc
pop
cdq
cmps
pop
mov
xchg
idiv
ret
mov
fcomp
test
pusha
icebp
sub
mov
out
(bad)
cmps
lahf
lock
sbb
(bad)
pop
cmp
stos
mov
lahf
(bad)
add
fldenv
ret
and
addr16
and
loop
mov
adc
(bad)
jp
jnp
mov
jo
push
popf
das
add
inc
call
dec
pop
cmp
scas
cmps
dec
pop
sub
scas
cmp
jge
push
hlt
mov
out
xchg
in
shl
and
or
cmps
xor
push
test
test
xchg
cwde
mov
(bad)
dec
pusha
cmps
adc
jmp
add
cmp
pop
out
sub
out
mov
shl
adc
shl
ins
jmp
sti
lahf
add
repnz
(bad)
push
dec
add
retf
add
test
or
xchg
sbb
dec
out
mov
mov
aad
outs
les
xchg
xor
mov
(bad)
hlt
xchg
adc
jecxz
jle
push
xchg
retf
pop
ins
xchg
test
mov
dec
aaa
icebp
sub
sub
fwait
sbb
mov
inc
xchg
jae
sbb
jb
test
or
dec
data16
mov
and
icebp
mov
xlat
fild
push
dec
xchg
sub
(bad)
inc
inc
sbb
xchg
dec
dec
pusha
pop
push
dec
loop
imul
pop
jecxz
inc
loope
sub
mov
inc
daa
(bad)
aas
xor
mov
inc
inc
add
adc
sbb
iret
mov
add
sub
in
xor
pop
and
jbe
add
or
push
cmp
cmps
xchg
mov
pusha
or
jp
outs
fstcw
mov
push
add
cmps
jg
xchg
push
xor
jmp
mov
stc
test
cmp
cdq
mov
ror
fisttp
ret
and
sbb
pop
sti
mov
stos
or
sub
test
scas
jmp
cwde
pusha
or
pop
push
adc
icebp
out
push
jl
xchg
inc
dec
or
rcr
mov
mov
cmp
repz
cmp
mov
mov
cmp
xor
repnz
sbb
stos
push
(bad)
cmp
push
jno
pop
or
fist
(bad)
mov
cmp
push
push
xchg
enter
out
leave
int
and
xor
mov
mov
xchg
cld
fwait
mov
fs
cmp
addr16
(bad)
(bad)
ss
es
inc
pusha
sub
sub
jns
fs
cmp
(bad)
mov
ds
mov
xor
xchg
xlat
les
stc
dec
dec
adc
inc
and
mov
add
or
fnsave
cmp
call
ror
(bad)
sbb
cmps
xchg
xlat
(bad)
jmp
push
in
ss
lahf
inc
dec
sahf
sbb
imul
fisub
mov
out
and
gs
jmp
xchg
or
mov
pop
cmp
or
xor
add
mov
dec
mov
shr
or
jp
inc
sbb
jnp
mov
push
aas
lahf
imul
.byte
