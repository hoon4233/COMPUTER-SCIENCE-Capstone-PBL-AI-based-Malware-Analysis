add
aad
out
mov
jecxz
pop
sub
pusha
ins
daa
in
pop
xor
push
xor
das
clc
inc
or
and
adc
icebp
and
repnz
sub
push
cmc
and
jno
sub
inc
jmp
xchg
and
sub
inc
int3
sub
push
jmp
add
ins
scas
es
lods
or
dec
movs
cs
or
and
xor
inc
pushf
and
(bad)
and
jecxz
jno
bnd
sub
push
xor
push
gs
xchg
and
clc
push
sub
das
repnz
jecxz
and
aaa
jmp
inc
xchg
and
jecxz
sbb
stc
pusha
or
and
das
jecxz
jmp
jecxz
or
and
inc
xlat
and
inc
xlat
and
inc
xlat
and
inc
xlat
and
inc
xlat
and
inc
xlat
and
xlat
and
inc
xlat
and
xlat
and
xlat
and
inc
xlat
and
push
cmp
and
inc
xchg
and
jecxz
pop
sub
pusha
ins
pop
in
pop
ss
and
inc
dec
sub
push
sub
xchg
and
and
dec
and
push
sti
dec
or
and
pop
in
in
movs
adc
pop
sti
dec
or
and
inc
xchg
and
inc
xchg
and
inc
loope
or
into
mov
lods
xchg
and
test
and
mov
xchg
and
lods
xchg
and
ins
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
int3
xchg
and
mov
cmp
int
sub
inc
out
jne
inc
loopne
sbb
inc
sub
mov
in
dec
loope
out
dec
cli
dec
sub
fnsave
jg
inc
in
mov
pop
and
inc
jle
or
mov
jmp
and
and
lods
xchg
and
jmp
and
xchg
and
and
fisubr
and
sub
mov
fld
and
fucomi
and
fucomi
and
jmp
inc
jle
or
popa
or
and
cmp
inc
xchg
enter
push
or
xchg
enter
enter
enter
jmp
sbb
enter
enter
enter
enter
int
inc
xchg
enter
int
inc
xchg
enter
enter
enter
imul
push
enter
enter
enter
enter
enter
clc
or
enter
enter
inc
pop
jl
inc
xchg
and
xchg
and
jg
and
xchg
and
xchg
and
xchg
and
xchg
and
jecxz
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
xchg
and
aas
xchg
and
inc
xchg
and
inc
xchg
and
xor
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
xor
pop
mov
xchg
and
sbb
and
lods
test
or
fisub
xchg
and
lods
xchg
and
lods
xchg
and
mov
test
mov
in
or
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
ins
xchg
and
test
lods
mov
and
lods
mov
or
and
lods
xchg
and
lods
xchg
and
ins
xchg
and
jge
push
sbb
and
inc
loop
or
repnz
jle
or
or
jle
or
and
inc
jle
or
and
add
in
sbb
inc
inc
or
or
jle
or
and
inc
jle
or
and
inc
mov
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
out
pop
int
mov
ja
das
pushf
jbe
out
mov
inc
mov
push
cld
ja
stc
leave
inc
jo
pop
or
div
shr
out
fist
loope
cmps
lds
enter
lods
(bad)
xor
and
and
or
jg
sbb
or
xchg
and
add
imul
fist
imul
add
dec
ss
push
enter
(bad)
mov
or
jbe
bound
sbb
outs
jl
shl
mov
aaa
mov
xchg
dec
mov
cmc
jns
mov
mov
mov
push
sbb
xor
xlat
enter
sbb
inc
std
enter
enter
cmp
jle
push
rcr
retf
inc
pop
cmp
jg
adc
jg
or
jg
mov
sbb
sbb
mov
sbb
xadd
push
lea
inc
xchg
enter
xor
push
dec
enter
xchg
xchg
enter
add
cmp
and
or
push
and
or
in
std
dec
icebp
jns
shl
pop
arpl
xchg
out
sahf
cmps
in
inc
push
jo
pop
imul
or
popa
popa
adc
lods
xchg
sub
cs
jmp
and
cs
movs
repz
imul
inc
xchg
jbe
sbb
stos
adc
jno
jp
and
scas
inc
gs
or
pop
loopne
mov
mov
and
sbb
mov
cmc
stos
mov
mov
jmp
leave
aad
stos
rcr
and
or
xchg
fnstcw
or
js
mov
mov
push
out
and
(bad)
fsub
add
in
dec
pusha
sub
inc
out
jmp
mov
adc
pop
pop
dec
and
and
aad
and
and
inc
jle
push
push
inc
sub
ror
or
and
imul
jnp
add
inc
scas
pop
and
inc
in
clc
mov
std
(bad)
or
jge
xchg
stos
mov
in
inc
(bad)
retf
ins
xlat
xchg
das
dec
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
pop
cmp
cwde
and
adc
or
mov
and
jno
fcomip
jl
mov
pusha
mov
jne
cmp
inc
out
xchg
sbb
inc
cwde
nop
pop
inc
sbb
in
scas
fstp
xchg
sbb
adc
adc
or
leave
adc
cmps
retf
inc
pop
mov
pop
ds
mov
push
xchg
jbe
push
jb
mov
mov
xchg
aas
xchg
pop
ins
cmp
cmp
adc
dec
inc
and
push
mov
cld
jp
in
jno
lock
dec
mov
out
and
gs
mov
push
retf
repnz
mov
mov
inc
push
(bad)
int
ins
pusha
(bad)
pusha
mov
retf
out
and
das
outs
test
(bad)
mov
push
inc
dec
sub
sub
mov
iret
bound
inc
dec
and
mov
in
mov
loopne
inc
cld
repz
dec
mov
and
loope
and
sub
push
pop
aam
scas
pop
push
in
aam
push
in
int3
lock
(bad)
fsubr
in
mov
call
aam
sbb
in
fs
dec
call
and
pushf
int3
jns
pop
xchg
dec
or
dec
dec
pushf
adc
sbb
cmps
loope
and
dec
arpl
xchg
stos
ins
out
cdq
cmp
shl
xchg
in
xchg
inc
xchg
mov
loope
adc
aad
out
adc
in
aam
repz
mov
retf
jle
mov
(bad)
sbb
mov
enter
fidivr
mov
pusha
call
inc
(bad)
lds
call
or
retf
fidivr
imul
add
std
pop
aad
or
jle
call
imul
pop
adc
mov
cmp
jecxz
mov
xor
xchg
enter
fist
call
stos
push
popf
inc
jmp
nop
fidiv
inc
inc
aaa
adc
cld
lds
test
ins
push
jg
dec
mov
jge
xchg
(bad)
jo
(bad)
enter
or
fimul
push
inc
std
retf
std
enter
enter
xlat
inc
push
enter
dec
jb
mov
call
mov
inc
shl
push
or
inc
rcr
mov
fcmovu
push
jmp
and
lea
xor
ins
sbb
fucomp
pop
in
movs
sub
std
enter
in
and
push
dec
jbe
or
push
fisubr
push
mov
cmp
sti
fidivr
push
and
jnp
and
push
inc
out
cdq
push
stos
mov
push
xchg
call
mov
xchg
stos
ficom
in
es
jmp
adc
push
or
and
sub
inc
in
lods
push
pop
neg
neg
jmp
push
iret
enter
cmp
stos
push
and
and
adc
outs
or
add
cld
push
(bad)
jg
push
movs
in
inc
icebp
leave
outs
cmp
bound
mov
fstp
pop
ror
dec
in
addr16
or
scas
pop
pop
mov
jne
mov
push
jecxz
xchg
out
add
pop
test
jns
idiv
inc
out
movs
dec
int
add
popf
and
xlat
mov
sub
cmp
outs
or
aas
cmp
mov
cmc
pop
adc
inc
cmc
cmp
xchg
inc
inc
ja
jge
movs
push
jg
movs
jg
les
lods
in
movs
push
pop
das
movs
adc
mov
int3
adc
lahf
pop
mov
fwait
repz
pop
inc
push
inc
cmp
mov
out
movs
push
sbb
les
xchg
out
clc
ret
add
adc
scas
movs
push
sub
sbb
addr16
out
mov
mov
push
push
neg
jae
adc
jae
mov
gs
sbb
add
fiadd
pop
push
lods
pop
xchg
and
sub
fiadd
adc
mov
popf
push
pusha
adc
sub
pop
neg
and
sub
inc
push
ds
and
sub
pop
xchg
push
sub
xchg
xchg
and
call
or
test
push
call
sbb
fistp
xor
push
pop
or
stos
add
add
or
xlat
and
ins
inc
stos
(bad)
in
jae
das
xor
mov
pop
shl
mov
and
imul
les
inc
lods
(bad)
fidivr
jns
stos
add
sbb
mov
xchg
aaa
das
jae
and
jmp
(bad)
sub
dec
cmc
jae
sub
jno
mov
jmp
pop
(bad)
les
sti
dec
addr16
adc
das
adc
pop
rol
inc
into
pop
(bad)
lds
repz
mov
das
fcmove
mov
cdq
lds
into
pop
pop
dec
push
(bad)
dec
pop
jns
jle
cmp
nop
aad
loop
jle
and
icebp
aam
cmp
int3
mov
pushf
pop
inc
xchg
enter
or
push
inc
inc
fwait
les
test
adc
push
out
xchg
(bad)
repz
mov
push
sub
sbb
aam
push
add
dec
and
(bad)
fiadd
push
mov
int3
rol
xchg
call
dec
push
pop
clc
sub
bound
cmp
and
std
and
std
and
std
and
std
fdivrp
inc
push
and
cmp
jle
push
mov
mov
pop
fdivr
movs
mov
pushf
imul
cs
mov
rol
and
test
push
jbe
rcl
sub
jo
test
dec
push
jbe
mov
test
cmp
(bad)
mov
xchg
lods
fs
fidivr
sub
popa
or
jbe
add
jbe
jge
dec
fisub
shl
cmp
(bad)
sub
xor
push
lahf
test
mov
xor
cmp
mov
xor
cmp
mov
xor
cmp
or
mov
jo
sbb
(bad)
and
test
lods
ja
adc
push
and
lods
dec
inc
scas
lods
dec
aas
push
xchg
xchg
enter
sahf
cmc
sub
push
jmp
repz
in
popf
lods
test
sbb
xchg
lods
(bad)
rcr
mov
stc
lods
adc
jmp
pop
sahf
leave
adc
leave
aas
push
dec
jae
cmps
mov
in
shr
jg
das
jno
cmps
mov
in
add
adc
in
lea
xchg
mov
call
inc
sbb
push
mov
aaa
in
out
push
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xchg
dec
popa
inc
xchg
enter
test
inc
sbb
and
inc
int
push
pop
push
popf
sbb
xor
cmp
sbb
lahf
push
jne
popf
push
inc
mov
xlat
enter
adc
mov
jmp
inc
(bad)
inc
mov
and
iret
shl
dec
mov
data16
shr
jge
sub
fadd
jge
lods
pop
fsubr
jbe
(bad)
stos
mov
inc
stos
sub
push
jbe
lahf
stos
ror
faddp
leave
adc
jge
stos
jns
ret
push
sbb
dec
scas
dec
and
sbb
cmp
stos
mov
retf
(bad)
jl
sub
rcr
movs
adc
retf
idiv
or
ja
pop
add
or
aaa
inc
cmc
pushf
dec
stos
mov
ja
out
inc
mov
adc
leave
inc
and
mov
and
pop
scas
mov
data16
mov
fcom
push
neg
xchg
movs
lods
xchg
in
fidiv
mov
stos
lea
dec
ficomp
fwait
stos
mov
adc
or
jno
push
fdiv
pop
movs
out
ror
daa
test
mov
pop
sub
and
fwait
cmc
aad
cmc
xor
out
hlt
or
inc
fstp
mov
arpl
cdq
cs
mov
scas
xchg
ret
and
cmps
cmc
lea
add
dec
mov
(bad)
jg
mov
pop
into
sti
scas
gs
push
call
leave
push
fst
aaa
call
fistp
push
xor
adc
and
(bad)
pop
mov
into
sub
and
ret
fist
enter
jle
xchg
and
ins
inc
inc
or
ror
add
mov
jae
pop
or
rcl
mov
sbb
nop
scas
pop
lods
arpl
push
push
hlt
mov
inc
inc
mov
push
xor
lahf
push
adc
int
pop
popa
cdq
push
jo
cmps
cwde
jne
(bad)
fiadd
retf
in
jge
stos
sbb
(bad)
adc
icebp
push
push
fsubr
jge
sub
lahf
jno
into
pop
pop
fld
dec
inc
xchg
and
sub
stos
loope
icebp
test
shr
pop
jge
add
(bad)
xchg
stos
xor
push
outs
retf
sbb
repnz
xchg
jo
sbb
fsubrp
out
sahf
stos
je
imul
or
dec
dec
or
jp
in
xchg
jae
mov
add
stos
sub
pop
dec
fsubrp
sub
xor
dec
je
xlat
mov
aam
xchg
es
mov
push
stos
jge
inc
fisub
pop
xchg
jae
pop
xlat
fidivr
adc
jg
mov
outs
adc
push
adc
lea
das
lods
jge
retf
clc
inc
ret
rcl
xchg
jle
fld
dec
out
adc
jge
sub
cmc
loope
cmp
ins
add
sub
xor
loope
cmp
ins
add
cmp
xchg
repz
jne
jnp
xlat
sub
adc
inc
stc
mov
inc
mov
fxch
repz
movs
xchg
and
add
or
xchg
jbe
(bad)
clc
pop
retf
ins
xchg
jmp
dec
mov
enter
enter
inc
out
push
ins
push
xchg
sbb
cwde
push
clc
mov
fadd
push
mov
(bad)
xchg
push
daa
rol
enter
inc
cmp
adc
adc
adc
dec
rcl
lahf
push
pushf
add
inc
inc
mov
lahf
push
cmp
xchg
add
and
inc
enter
fcmovu
mov
inc
xchg
stos
mov
adc
fcmovu
dec
movs
in
xor
xchg
and
mov
aad
pop
in
xor
leave
jnp
cmc
dec
xchg
and
fist
in
add
mov
and
retf
adc
stos
ins
push
xor
lock
and
std
and
inc
std
and
jmp
mov
ins
ins
fisub
push
les
and
mov
mov
in
pusha
pop
call
int3
(bad)
and
in
data16
mov
cli
or
adc
fldenv
dec
inc
and
stos
xchg
and
(bad)
lods
push
dec
stos
sbb
fisub
sbb
fcmovu
mov
xor
stc
shl
pop
jne
mov
push
stos
popf
jno
fisubr
pop
xchg
lods
add
sbb
cdq
inc
inc
jle
pushf
fidiv
popa
or
scas
and
in
hlt
addr16
repz
arpl
std
in
retf
dec
hlt
mov
fild
cmc
dec
jg
jmp
dec
xchg
test
add
jle
or
and
mov
push
hlt
neg
or
out
xchg
ficom
test
idiv
or
jle
or
jle
or
jle
or
xchg
pusha
cld
retf
ror
mov
sbb
mov
xchg
enter
clc
xchg
pop
xchg
push
xchg
mov
sub
mov
xor
add
jb
mov
sbb
mov
push
pop
out
inc
push
enter
add
xchg
push
enter
enter
scas
xor
pop
inc
dec
xchg
dec
int3
inc
sbb
xor
pop
jge
mov
xchg
and
push
sbb
out
cmps
cwde
xor
cmp
and
ret
outs
fidivr
(bad)
fiadd
out
xchg
dec
popa
out
xchg
dec
popa
inc
xchg
popa
pop
xor
inc
stos
ror
imul
sar
jae
mov
retf
fucom
cmp
inc
xchg
stos
add
push
stos
pop
imul
xchg
lods
imul
(bad)
jb
je
mov
or
mov
pop
xchg
stos
std
jmp
leave
and
fldcw
sbb
ficomp
outs
lahf
push
push
ret
outs
shl
sbb
dec
imul
xchg
stos
gs
push
dec
or
mov
in
push
push
push
add
fimul
push
movs
jg
cs
and
into
jmp
and
test
xchg
adc
and
fnstsw
mov
jne
mov
(bad)
cmc
(bad)
sti
pop
and
inc
sbb
repz
mov
jle
or
(bad)
and
mov
in
addr16
cwde
sub
push
jbe
inc
inc
nop
sub
push
test
enter
pop
adc
inc
jle
xchg
inc
std
jmp
int
pop
enter
or
cmp
movs
addr16
or
mov
xchg
cmp
cmps
dec
adc
inc
cmps
inc
xor
xlat
enter
and
mov
adc
xchg
enter
outs
adc
push
inc
inc
xchg
dec
dec
inc
sbb
loope
pop
cmp
push
idiv
leave
ret
inc
xchg
enter
push
cmp
push
push
inc
lea
inc
pop
ret
or
push
enter
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
mov
sar
push
aas
(bad)
test
addr16
adc
and
push
xor
push
push
and
sbb
push
jg
sti
inc
xchg
mov
adc
les
mov
(bad)
mov
ficom
test
jmp
fild
xchg
test
sub
sub
mov
(bad)
ins
(bad)
test
stc
fidivr
and
inc
xchg
fidivr
out
and
push
xor
inc
push
and
fimul
xor
adc
pop
mov
loopne
pop
faddp
and
sbb
xchg
pop
mov
ins
pop
jg
push
in
ins
movs
sub
sbb
cmps
loop
cmps
in
int3
cdq
movs
jbe
in
add
pop
xchg
jg
addr16
jle
scas
mov
and
das
in
int
push
or
or
xchg
adc
(bad)
mov
inc
ret
popa
or
pop
xor
retf
stos
inc
jmp
mov
cs
add
test
push
or
mov
or
mov
jle
std
add
gs
push
lods
dec
inc
sub
dec
adc
imul
inc
fisttp
or
inc
jle
or
cmc
into
adc
mov
in
aaa
mov
js
sbb
sub
jle
mov
xchg
pop
aad
sbb
sti
sbb
enter
aas
mov
adc
inc
inc
std
enter
mov
cmc
dec
dec
sub
push
enter
inc
daa
mov
fisttp
xchg
outs
mov
mov
xchg
push
sbb
mov
and
or
pusha
mov
imul
inc
xchg
sar
adc
or
adc
inc
sub
xor
test
lds
and
inc
inc
movs
int3
loop
add
lds
test
and
dec
out
icebp
in
xchg
and
inc
call
and
xchg
dec
xchg
test
and
inc
sbb
out
and
inc
sbb
and
jle
movs
cmp
and
mov
sbb
adc
popa
inc
sbb
add
sbb
scas
push
sbb
int3
retf
fwait
int3
test
inc
push
repz
push
adc
or
cmp
out
retf
xor
fs
and
rol
inc
cmc
sbb
push
mov
jno
sbb
pop
sub
lahf
out
imul
shl
push
adc
stos
sahf
out
sbb
and
jg
rcl
lods
sub
or
aam
and
adc
int
pop
xchg
int
inc
addr16
aas
scas
jmp
std
sub
push
add
pop
test
ror
adc
and
pushf
jge
push
inc
push
sbb
xchg
push
cli
push
imul
or
stos
stc
scas
xchg
sbb
xor
xchg
push
call
test
retf
int3
inc
cwde
pop
dec
push
push
test
cmp
pop
fwait
jns
movs
pop
jle
or
(bad)
cwde
(bad)
cwde
retf
xchg
inc
sbb
stos
mov
push
out
inc
sbb
aaa
call
jle
xchg
push
adc
enter
retf
pop
cld
xchg
scas
bound
cwde
ja
cmp
sbb
sub
pop
pop
loope
pop
cmps
xor
icebp
test
xchg
push
cs
sbb
sub
retf
iret
cwde
jae
cdq
or
dec
test
mov
xchg
sbb
cmp
inc
and
or
fdivp
cmp
and
inc
mov
and
xchg
jle
xchg
and
and
call
iret
or
shr
xchg
leave
and
inc
outs
cwde
adc
jnp
mov
mov
test
mov
gs
xor
xchg
dec
jno
shl
icebp
pushw
jno
adc
imul
icebp
int3
cmps
jge
loope
sub
or
and
pushf
adc
(bad)
ins
adc
xlat
xor
test
xor
jbe
dec
add
paddb
ins
add
mov
int
dec
xchg
call
aam
das
in
int3
(bad)
in
int
ds
mov
push
and
add
push
adc
sub
out
stos
shl
inc
inc
fnsave
outs
test
enter
(bad)
and
xchg
jo
jle
or
jle
or
push
and
inc
test
or
add
dec
in
push
in
cli
mov
or
jle
dec
pop
data16
dec
push
jns
jle
cmp
adc
arpl
pop
add
enter
and
sub
mov
jg
or
jle
rol
ror
inc
jle
aaa
rcl
popa
cmc
push
hlt
mov
aad
icebp
lea
jg
xchg
cmp
add
adc
jbe
pushf
add
xchg
inc
aaa
in
fmul
loop
mov
inc
xlat
imul
enter
aad
call
das
jmp
mov
push
push
mov
(bad)
jg
add
xchg
inc
xlat
and
or
fcmovu
fdivr
loop
adc
aas
inc
pop
push
lds
or
push
enter
sub
xor
xchg
enter
mov
into
shl
fild
rol
xchg
ja
pop
(bad)
fisub
popa
jno
fiadd
xor
xchg
stos
test
push
xor
mov
pop
in
fnstsw
pop
in
push
sti
jp
fs
xor
inc
xchg
push
pop
aas
loop
push
xchg
mov
fpatan
adc
xor
cli
fldcw
mov
xchg
cdq
mov
mov
or
popf
push
enter
and
in
sub
in
sub
mov
sub
push
pop
push
add
inc
or
lds
adc
inc
push
repz
cmp
add
push
and
mov
jne
mov
xor
lahf
adc
repz
and
mul
xchg
xor
fst
in
xchg
or
xchg
and
dec
jle
xchg
div
pushf
inc
jle
lock
and
imul
or
jl
adc
lock
loop
or
aaa
or
imul
mov
fnstenv
mov
jnp
inc
sub
cmc
xchg
or
push
fisttp
jle
or
jb
jge
aad
test
jle
or
mul
or
jle
dec
inc
jle
loop
jne
or
fld
not
enter
jle
xor
sbb
xchg
or
add
push
push
xchg
enter
rcr
push
enter
cmp
into
jg
cmps
jecxz
scas
into
or
(bad)
jl
or
or
dec
std
and
enter
aad
repz
enter
test
imul
or
and
pop
xchg
xor
sub
sbb
inc
xchg
and
jmp
mov
dec
std
sub
not
and
sbb
xchg
inc
xchg
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
test
popa
inc
popa
lods
inc
jecxz
push
sti
fldl2t
jp
std
sub
adc
ja
inc
xchg
popa
xor
push
cmp
leave
stc
dec
xchg
and
scas
mov
sub
push
ins
adc
dec
xchg
and
push
stos
mov
rol
or
test
or
sahf
jno
jne
and
push
data16
ins
pop
movs
ins
sub
lahf
lock
mov
test
xchg
enter
fiadd
jmp
and
fbld
sub
xor
aas
fbld
xchg
data16
int3
imul
loopne
fbld
xchg
scas
jo
les
lods
std
mov
sbb
(bad)
fisub
data16
inc
jl
mov
and
inc
adc
or
leave
sub
cmp
add
inc
in
scas
cmp
xchg
push
jb
dec
scas
mov
inc
cmp
mov
sahf
jg
cmp
sub
and
mov
xor
sbb
jle
inc
inc
sub
inc
jg
or
es
fwait
repnz
pop
mov
imul
call
adc
sbb
enter
retf
xchg
loope
inc
push
enter
mov
jl
cmp
add
mov
inc
loop
icebp
inc
jg
stc
inc
xchg
popa
fmul
enter
cwde
xor
xchg
cmp
inc
pop
mov
(bad)
rcl
add
sub
stc
test
sub
adc
loop
add
popf
sub
icebp
fist
jmp
add
pop
jecxz
push
jnp
push
or
xchg
and
test
loope
sub
xchg
dec
loopne
test
cs
dec
push
mov
retf
push
shl
xchg
(bad)
mov
push
push
mov
inc
push
loope
(bad)
ficom
push
push
fs
sub
retf
mov
stos
dec
mov
sub
push
push
pop
mov
leave
and
xchg
in
or
fcom
xchg
js
sub
leave
cmp
and
sbb
scas
bound
and
ror
mov
xchg
ja
jge
and
sar
jmp
ja
arpl
fdiv
imul
in
dec
cmp
pop
ficom
aaa
ja
neg
movs
enter
(bad)
ficomp
or
imul
lods
sbb
mov
mov
mov
gs
sub
or
dec
ja
fidiv
test
and
ret
jbe
or
or
cmp
bound
imul
idiv
jge
and
adc
pop
add
in
jle
nop
iret
punpckldq
mov
daa
scas
mov
mov
mov
mov
js
xchg
mov
inc
jecxz
inc
jle
fsubrp
or
and
or
sti
loop
inc
aam
loop
test
int3
inc
dec
loop
adc
imul
or
and
data16
or
dec
call
add
enter
enter
dec
jno
xchg
inc
dec
push
xor
dec
adc
iret
mov
mov
push
mov
js
inc
ret
leave
retf
fwait
jecxz
push
sub
push
ins
pop
leave
retf
cmc
dec
dec
mov
push
adc
lds
ror
inc
scas
(bad)
mul
mov
cmp
jo
sbb
imul
push
and
data16
lods
inc
push
push
fdivr
stc
popf
dec
push
jl
leave
retf
ss
stos
sub
jmp
test
lds
xlat
and
cs
and
xchg
push
rol
lds
aas
adc
sub
xor
and
inc
out
in
popa
shr
mov
xlat
and
push
sbb
inc
(bad)
xchg
movs
mov
mov
cmp
dec
pop
das
fild
mov
xchg
and
adc
into
test
or
jb
cmp
sbb
out
mov
leave
movs
ss
fimul
fs
and
adc
pop
xchg
and
loopne
je
dec
mov
push
adc
xchg
fs
cld
(bad)
push
stos
xchg
sbb
repnz
xchg
jge
fimul
add
leave
add
sub
jle
or
jge
mov
adc
xchg
jne
stos
and
pop
and
inc
icebp
adc
imul
inc
jle
loopne
rcl
xor
enter
inc
mov
push
adc
std
popf
push
icebp
shr
mov
sbb
add
xor
ret
or
inc
add
mov
popa
ins
adc
outs
jo
xchg
xchg
sahf
je
nop
pop
cdq
into
push
sar
mov
mov
xchg
enter
mov
push
xchg
enter
leave
push
mov
std
retf
mov
mov
or
adc
cmp
sub
or
adc
inc
xchg
dec
popf
jbe
enter
dec
xchg
mov
clc
(bad)
enter
enter
jbe
inc
shl
push
xchg
enter
inc
retf
inc
adc
or
enter
add
or
push
xchg
and
xlat
and
mov
push
push
ds
adc
les
dec
mov
xor
push
sub
push
jg
jno
push
(bad)
leave
imul
mov
inc
cmp
inc
xlat
js
scas
stos
push
sti
add
jmp
(bad)
movs
inc
sbb
fimul
call
push
xchg
or
adc
leave
adc
and
add
adc
inc
xchg
and
ror
sub
daa
sub
pop
mul
push
mov
mov
or
daa
sub
mov
inc
jnp
enter
pop
fs
and
dec
(bad)
jb
lods
cmp
dec
cld
sbb
stos
fadd
inc
frstor
ficomp
sahf
or
fistp
mov
cmp
or
cmp
call
jno
out
fild
pcmpeqw
rcl
retf
test
jno
xchg
mov
repnz
jb
xor
add
or
das
or
cmps
and
cmp
inc
jle
lea
jle
dec
inc
jg
push
fcmovnu
and
fnsave
cmp
loopne
mov
out
jo
pop
movs
sbb
pop
cwde
(bad)
push
and
mov
ret
add
adc
cdq
dec
dec
aas
sbb
jbe
in
test
lods
mov
inc
scas
clc
inc
nop
and
mov
lahf
dec
push
test
or
mov
jmp
xchg
fwait
retf
add
or
dec
movs
inc
cwde
dec
ret
inc
xchg
enter
mov
dec
jecxz
add
outs
ror
and
or
in
mov
lods
ror
push
and
inc
xchg
pop
add
xchg
stos
mul
stos
scas
jno
push
push
js
rol
inc
xchg
and
stos
mov
inc
push
push
pop
jp
inc
loopne
xchg
and
stos
mov
inc
push
push
cmp
inc
popf
inc
xchg
and
inc
push
push
sbb
inc
pushf
inc
xchg
and
inc
push
push
clc
jnp
inc
arpl
and
stos
scas
icebp
inc
push
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fdivr
inc
pop
inc
xchg
and
stos
mov
inc
push
push
mov
loop
and
inc
test
jae
addr16
xchg
and
inc
xchg
sbb
pop
xchg
loope
fs
addr16
xchg
and
jge
inc
bnd
repz
movs
inc
arpl
inc
adc
pop
add
jg
add
jmp
dec
sti
cmp
les
lock
popa
or
jae
add
adc
pop
pusha
adc
sub
inc
cs
jmp
mov
xchg
retf
sbb
mov
adc
sub
aad
aad
or
sub
sub
inc
jle
out
rol
inc
mov
and
or
sbb
inc
dec
push
push
in
in
lods
cmp
test
and
dec
call
inc
std
popf
call
pop
cmp
pop
mov
xchg
data16
in
iret
adc
sti
or
and
pusha
js
xchg
enter
retf
add
and
xchg
enter
inc
(bad)
neg
dec
dec
inc
sbb
not
jo
cmp
or
fcom
or
sub
or
mov
dec
inc
ja
mov
mov
mov
mov
dec
xchg
enter
dec
inc
xchg
dec
ret
imul
(bad)
cwde
pop
adc
pusha
sbb
xchg
enter
and
jo
jo
jbe
xor
out
inc
xchg
and
outs
sbb
sub
pop
mov
gs
adc
jle
push
dec
add
push
and
(bad)
into
retf
xchg
movs
xchg
sub
test
ret
pop
neg
movs
js
lods
movs
arpl
pop
inc
mov
mov
daa
and
sub
and
outs
outs
(bad)
repnz
jae
inc
or
test
xchg
and
jno
sub
fnstsw
sub
push
or
cs
test
test
xchg
and
add
adc
out
ins
adc
iret
sub
arpl
cmovge
cmp
xchg
arpl
fdivr
fsubr
mov
push
pop
fnstsw
inc
mov
loope
lds
inc
lods
cmp
mov
loop
fstp
lds
xor
sti
xchg
je
inc
outs
inc
loope
fmul
ror
shl
cmp
out
xchg
mov
test
fimul
js
dec
inc
popa
fimul
mov
daa
add
push
pop
aad
inc
aad
imul
in
inc
div
inc
test
mov
adc
jg
or
xchg
imul
xor
stc
into
out
or
push
frstor
cdq
ror
mov
jecxz
ds
add
xchg
push
bound
sbb
retf
pop
int3
arpl
mov
scas
push
fcom
imul
mov
push
(bad)
les
retf
mov
sbb
clc
jle
sbb
inc
jnp
adc
jo
sbb
xchg
adc
or
jns
imul
sub
xor
sub
(bad)
lods
inc
movs
loope
inc
adc
inc
std
enter
sbb
lahf
pushf
sbb
add
sbb
xor
inc
mov
test
fptan
adc
xchg
mov
leave
inc
shl
and
in
cdq
loop
out
cdq
adc
call
jg
or
and
mov
xor
int
int
ja
pop
out
inc
mov
cmp
ja
outs
xchg
or
push
push
add
sub
mov
xchg
and
fild
and
pop
xchg
sub
pop
out
pop
jnp
sbb
stos
fiadd
pop
push
rcr
enter
dec
sbb
sub
fs
push
pushf
aam
fdiv
xchg
and
inc
sub
not
(bad)
mov
jns
or
or
add
cmp
adc
pop
dec
imul
add
loopne
inc
and
or
cmp
xor
inc
daa
imul
mov
int3
inc
pop
push
nop
inc
jbe
or
mov
arpl
add
out
ret
sti
inc
rcr
xor
dec
or
popf
mov
adc
push
or
jne
sbb
inc
fcmovu
rcl
inc
inc
mov
jmp
xchg
cmp
ror
fisub
adc
icebp
sbb
je
jecxz
mov
pushf
inc
mov
popa
or
cmp
ret
cmp
aam
xchg
dec
dec
out
test
div
jnp
ror
xor
das
adc
popf
call
enter
and
call
sub
jno
push
xchg
push
icebp
ds
cs
and
inc
push
fxam
and
fs
ins
pop
dec
jno
stos
inc
jg
daa
bnd
out
aas
sbb
bound
outs
fbstp
call
push
out
xchg
mov
jnp
iret
retf
rcr
div
loope
jg
jno
xor
mov
pushf
push
push
push
addr16
push
movs
popa
or
push
push
sti
xor
or
pop
mov
mov
mov
mov
xchg
sub
fsubr
and
xchg
movs
enter
dec
push
movntps
jb
fmulp
adc
mov
xor
xor
mov
pop
out
ins
xor
mov
sar
and
rcl
xchg
dec
fstp
mov
out
popa
or
cmp
bswap
jno
dec
xlat
jnp
cmp
xor
add
xchg
fild
cmp
mov
into
mov
leave
dec
(bad)
jo
pop
enter
bound
mov
jp
and
dec
dec
bound
xchg
das
clc
sar
pop
xbegin
and
inc
cmc
xchg
lea
sub
inc
sub
xchg
push
or
or
std
add
(bad)
enter
mov
repnz
outs
div
cmp
out
popa
mov
or
bound
xchg
je
call
div
or
outs
mov
push
(bad)
scas
add
call
add
lock
iret
xlat
enter
enter
in
dec
inc
push
enter
cmovb
jle
dec
inc
adc
adc
aas
inc
retf
jl
out
xchg
mov
out
setbe
popa
or
mov
popa
jno
call
enter
movs
loope
inc
pop
sub
loope
push
fs
push
and
inc
std
sub
and
push
pop
xchg
rcl
sub
mov
jmp
mov
inc
xchg
js
or
push
movs
push
and
xchg
and
shl
sub
jg
scas
inc
xchg
js
sub
sahf
and
mov
lods
ficom
jno
outs
test
xchg
stos
push
jno
fisttp
ss
xchg
jns
xlat
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
dec
or
sbb
rol
xlat
pushf
arpl
popa
or
inc
loop
xor
popa
or
and
sahf
cmp
(bad)
std
xor
bound
lods
xchg
mov
push
icebp
fwait
ja
jmp
aaa
inc
mov
pop
sar
arpl
cdq
sbb
nop
xor
cmps
jbe
jne
clc
push
mov
dec
std
cmp
add
aad
enter
or
lods
mov
(bad)
and
inc
cmc
push
psllq
sbb
(bad)
js
loopne
dec
and
cld
hlt
push
pop
repz
inc
jle
add
enter
mov
dec
and
cld
in
dec
enter
inc
(bad)
pusha
jle
xchg
enter
test
imul
inc
into
push
ror
or
inc
(bad)
and
retf
imul
sbb
enter
aad
mov
adc
inc
sbb
in
(bad)
push
aad
rcl
enter
inc
jecxz
imul
inc
into
xchg
imul
inc
xchg
loop
imul
or
and
or
mov
sub
ficom
ror
push
push
dec
aam
xchg
push
jne
push
push
pop
shr
jo
push
(bad)
mov
push
push
inc
xchg
js
inc
xchg
and
adc
sbb
cmps
and
inc
into
loop
cmp
and
aas
into
loop
mov
xlat
and
je
mov
mov
inc
fnstsw
sub
popa
or
mov
pop
dec
push
add
iret
and
mov
jbe
sub
or
dec
movs
in
shl
mov
imul
xchg
les
stos
std
popa
test
leave
pop
xchg
int3
imul
push
std
call
xchg
and
loope
mov
xor
enter
test
inc
mov
and
adc
and
inc
sbb
mov
or
std
mov
or
mov
or
nop
xchg
test
jle
jo
outs
mov
xchg
(bad)
jge
std
inc
iret
or
mov
or
and
inc
fucom
push
(bad)
jge
ficomp
jmp
mov
jmp
xchg
enter
cld
sub
stos
ins
sbb
xchg
loopne
sbb
enter
pop
inc
inc
push
mov
jae
jecxz
jecxz
xchg
enter
and
xor
add
add
or
pop
inc
(bad)
jl
push
jl
jmp
push
fs
sti
int
sbb
fld
jb
xchg
sti
dec
add
jo
mov
adc
push
xor
xor
inc
std
and
xor
aas
movs
call
lock
ins
inc
sbb
loop
pop
in
cmc
mov
cmc
mov
leave
xchg
stos
popa
mov
inc
xchg
and
add
xor
sub
ja
fist
fs
jno
and
fdiv
rcr
inc
mov
outs
lods
in
scas
repz
xchg
and
fcmovbe
std
lds
js
adc
pop
lods
push
in
aam
push
in
int3
in
je
aad
int
pushf
sbb
sbb
cmp
xchg
jbe
addr16
cmps
imul
or
mov
mov
push
push
adc
and
xor
retf
outs
inc
sbb
aad
sub
and
adc
retf
sbb
shl
or
stos
mov
shl
test
sbb
push
shr
and
mov
clc
retf
mov
xchg
inc
neg
rol
aaa
xor
leave
test
and
add
and
(bad)
in
mov
push
sub
mov
mov
and
retf
or
into
(bad)
addr16
in
or
or
or
dec
neg
in
add
and
inc
jle
push
retf
add
scas
imul
jbe
repz
pop
and
cwde
leave
(bad)
xchg
mov
dec
xchg
enter
dec
retf
into
xchg
inc
push
dec
std
leave
std
push
sbb
(bad)
xchg
dec
ja
sbb
pop
retf
jae
mov
or
rol
mov
call
inc
rcl
pop
and
xor
call
retf
jae
jecxz
jl
xchg
retf
dec
adc
neg
in
sahf
and
jl
sub
pop
lods
sbb
push
leave
fild
jp
jg
cld
inc
xchg
fwait
lahf
lods
push
cs
ficomp
xchg
and
cmps
xchg
aas
mov
jle
pop
lods
push
int
stos
xchg
xor
outs
and
and
jb
sub
jmp
call
jecxz
in
jecxz
xchg
xor
sar
xchg
retf
sbb
push
and
test
popa
or
fdivp
sbb
add
cmc
test
inc
mov
and
(bad)
aad
daa
add
fadd
rol
dec
adc
sub
dec
push
loopne
pop
popf
rcl
push
test
adc
and
push
dec
add
in
enter
pop
push
add
fmul
fiadd
inc
retf
fisttp
aaa
jb
fdivr
cmp
lds
mov
push
push
imul
inc
jle
adc
retf
fstp
aaa
inc
add
add
mov
popa
or
sub
(bad)
imul
and
and
fsub
add
pop
inc
dec
inc
out
daa
mov
outs
mov
xchg
cmp
es
lds
loop
icebp
das
loope
daa
arpl
test
xchg
enter
and
xor
mov
mov
test
dec
std
inc
xchg
sbb
cli
addr16
or
out
in
adc
push
xchg
and
nop
imul
inc
enter
push
aam
(bad)
jmp
cwde
pushf
jne
push
add
imul
lock
or
jle
pop
fidivr
push
mov
push
add
xchg
lea
call
popf
leave
fst
movs
fisubr
jmp
in
shl
int3
pop
jo
inc
mov
dec
daa
lods
repz
push
mov
fisub
inc
xchg
leave
cmp
push
sbb
stc
ret
mov
and
jl
dec
sti
pop
jo
jmp
fcmovu
inc
jg
lods
inc
xchg
out
push
push
retf
popf
leave
imul
js
jecxz
cdq
in
and
push
popa
or
push
push
div
xchg
js
neg
sub
aad
or
cmp
xlat
sub
pop
mov
fimul
cdq
or
or
stos
inc
mov
add
or
rol
cmp
adc
or
inc
fidivr
add
inc
out
push
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
inc
xor
dec
fistp
inc
push
adc
mov
sbb
adc
(bad)
lahf
push
jle
sbb
cmps
data16
cmp
aaa
cmc
in
add
gs
xchg
adc
sbb
daa
and
fdiv
enter
jp
test
inc
or
xor
or
sub
loop
and
test
mov
mov
mov
mov
xchg
xor
cmp
xchg
pop
cmp
push
inc
into
jecxz
xlat
mov
dec
xlat
sahf
repz
xlat
int
dec
fcom
and
push
push
inc
fs
rcr
not
mov
mov
dec
loopne
jge
jg
cdq
dec
push
inc
adc
inc
(bad)
call
adc
add
mov
and
jg
add
xor
push
retf
jl
cmp
das
and
adc
repz
or
jnp
mov
adc
movs
movs
xchg
and
(bad)
fisub
popa
xor
rol
adc
cwde
movs
addr16
xchg
and
sti
jbe
sub
clc
sti
jb
out
jg
scas
mov
push
fs
ins
sub
dec
adc
mov
sub
test
mov
rol
sub
jle
outs
or
ins
mov
pop
xchg
and
loope
pop
cld
cdq
xchg
test
add
aam
or
pop
enter
xor
jnp
mov
loope
jge
cmps
arpl
aaa
pop
daa
retf
inc
aad
jne
daa
inc
daa
pop
fist
test
leave
cmc
pop
xchg
and
popf
add
mov
stos
inc
(bad)
in
pop
rcr
lds
dec
ins
dec
or
mov
rcl
stos
add
arpl
mov
cmp
mov
xchg
add
sub
add
dec
loop
xchg
mov
addr16
scas
mov
push
int
fucomp
xchg
push
jle
dec
mov
push
xchg
pop
cmc
imul
inc
stos
loopne
dec
stos
pop
sub
mov
push
push
imul
icebp
hlt
or
add
int3
mov
mov
lods
push
inc
lea
(bad)
in
adc
inc
push
dec
(bad)
pop
imul
xchg
cwde
jae
(bad)
enter
push
xchg
jne
dec
push
dec
cwde
inc
push
and
js
push
int
dec
push
movs
ja
push
cmc
mov
lods
push
dec
push
loopne
dec
push
lea
push
xchg
loopne
dec
mov
and
ret
cmp
push
shl
mov
lods
enter
leave
(bad)
fadd
push
movs
xchg
mov
xchg
and
sar
mov
push
add
push
lods
add
xchg
ss
adc
and
mov
xchg
stos
cmp
xchg
lods
pushf
xchg
imul
punpckhbw
jg
xor
sub
or
leave
fwait
mov
fidiv
aad
frstor
das
jp
mov
push
stos
scas
mov
ficomp
mov
mov
fst
fimul
data16
clc
cdq
xchg
jno
outs
and
pop
mov
stos
ins
xor
nop
sahf
xchg
fdivp
sub
push
push
or
jnp
mov
sbb
sub
addr16
fidivr
mov
fdivp
fsub
xor
cmp
cmp
sbb
mov
jmp
and
dec
inc
sti
loop
cmp
xor
dec
scas
or
fild
mov
adc
adc
out
or
inc
enter
enter
fst
sbb
cmp
(bad)
mov
inc
enter
add
fadd
sar
loop
test
in
call
pop
mov
inc
inc
push
dec
int3
cmp
lock
pop
out
or
addr16
xchg
jle
enter
xor
adc
push
lea
or
les
and
ror
mov
mov
pop
inc
push
int3
repnz
add
lods
xor
sub
inc
jg
or
and
sbb
loope
push
sbb
jbe
push
fist
push
es
inc
into
js
and
mov
jbe
(bad)
dec
out
mov
ds
sub
(bad)
enter
inc
ret
fbstp
movs
inc
sbb
imul
sbb
xchg
daa
xchg
dec
inc
test
into
js
mov
ficom
popa
and
jle
gs
xor
jbe
xchg
movs
aaa
xor
jg
fmul
cmp
mov
test
xchg
leave
xor
(bad)
fnstenv
sub
mov
faddp
and
movs
popf
(bad)
fnsave
arpl
mov
sbb
xchg
sbb
inc
movs
cmc
psrad
add
pmaxub
cmp
dec
and
push
stos
push
test
shr
xchg
ficom
jecxz
shr
xchg
mov
pop
sbb
mov
cmp
or
int3
jbe
xchg
les
cmps
push
mov
neg
inc
inc
jle
adc
and
cmp
leave
rcl
inc
jle
lahf
(bad)
ins
adc
and
or
retf
mov
xchg
push
jbe
xchg
dec
jbe
xchg
inc
jbe
cmps
aad
stos
pop
int
in
sbb
cmps
xlat
sahf
add
mov
shl
(bad)
gs
xchg
pop
and
call
cmp
dec
(bad)
push
xor
sbb
lock
enter
push
mov
mov
cvtdq2ps
cwde
sbb
and
clc
adc
pmulhuw
dec
or
in
xchg
test
inc
cmps
test
xchg
call
int3
icebp
pusha
movs
mov
or
mov
inc
xlat
enter
das
(bad)
(bad)
push
and
mov
xchg
popa
xor
and
xchg
fisub
push
lods
stos
xor
push
leave
(bad)
into
inc
mov
mov
fisub
ror
inc
xchg
js
push
push
stos
in
ficomp
sub
adc
loope
mov
stos
jecxz
sbb
dec
call
fst
(bad)
fiadd
ins
xor
sub
inc
xchg
and
leave
jp
loopne
loop
cli
pop
in
or
push
and
sub
push
in
mov
mov
pushf
loope
loopne
sub
and
sub
lods
lods
inc
xchg
and
sub
test
xchg
and
movs
xchg
fwait
out
adc
or
psrlw
sbb
cmp
or
adc
mov
fimul
outs
add
xchg
fimul
push
or
xchg
jmp
stos
int3
dec
lahf
or
push
pusha
outs
movs
inc
add
aas
mov
and
mov
icebp
jmp
inc
gs
int3
push
push
in
loope
or
lea
xchg
lds
lods
dec
and
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
daa
inc
add
aas
and
sbb
aas
out
out
or
mov
(bad)
shl
inc
in
test
jno
clc
inc
jle
xchg
jge
rcl
inc
inc
or
pop
repz
(bad)
shl
or
sbb
mov
mov
xchg
push
mov
xchg
xor
xchg
xchg
push
xor
mov
xchg
xor
jae
xchg
xlat
rcl
or
xor
dec
xchg
xchg
movs
lahf
das
or
enter
stos
inc
adc
lds
lods
fwait
das
add
in
jo
ds
mov
jle
jecxz
mov
xchg
push
lahf
das
add
mov
cwde
mov
ror
xchg
cmp
lea
adc
into
cmp
push
(bad)
push
push
cmp
fscale
nop
xor
xor
imul
aaa
add
push
ins
inc
inc
xchg
add
scas
movs
adc
shl
jmp
mul
add
xchg
push
fs
loopne
cdq
and
xor
adc
and
ret
inc
test
mov
adc
(bad)
shl
push
pushf
adc
xchg
push
push
lds
xor
clc
ficomp
xchg
adc
pop
fcmove
frstor
call
fucom
and
cmc
sbb
adc
mov
sbb
pop
push
adc
xor
xor
mov
call
jl
jmp
ficom
aam
and
and
call
sbb
lock
mov
enter
adc
inc
icebp
fmul
movs
out
jo
les
test
in
arpl
in
mov
dec
or
test
dec
fstp
jo
dec
xchg
or
adc
daa
xchg
mov
ins
dec
jnp
dec
pop
jb
mov
pop
idiv
in
jecxz
repz
inc
ins
bound
jnp
mov
or
lods
or
and
xor
xor
inc
cmovge
or
fdivr
in
daa
mov
cld
xlat
mov
xchg
out
dec
adc
or
fdivr
pop
loop
cli
or
inc
add
xlat
cmp
dec
mov
lea
add
cmp
loope
cmp
out
retf
xchg
lock
into
inc
or
gs
cmp
cmp
rol
movs
int
dec
dec
inc
icebp
and
loop
mov
pop
retf
loop
mov
sbb
xlat
pop
aas
sbb
push
shl
scas
push
fsub
mov
cmps
leave
push
mov
enter
sbb
inc
rcl
and
daa
sbb
cwde
xchg
sub
pop
sub
mov
push
jecxz
and
ficomp
test
lods
adc
cmps
mov
add
int
stos
nop
stos
sub
cmp
nop
movs
or
imul
xchg
pop
cld
lods
in
and
addr16
jl
mov
xor
dec
(bad)
ins
cld
push
mov
out
sbb
pop
jo
jmp
dec
neg
int
(bad)
fwait
and
xchg
fdivp
outs
and
cmp
movs
dec
scas
mov
ss
pop
mov
ficom
jp
in
add
js
and
retf
movs
in
je
test
or
dec
push
loopne
inc
jle
mov
repz
xor
sti
mov
push
pop
mov
jb
loop
(bad)
test
mov
jge
inc
cmp
push
mov
test
cli
mov
mov
dec
fimul
adc
and
dec
and
int3
xchg
cmps
inc
inc
sti
pop
popf
pop
daa
and
pop
mov
in
(bad)
out
dec
or
pop
or
lods
xchg
retf
mov
push
xchg
xchg
retf
aaa
ret
xchg
rcr
scas
lahf
mov
jle
into
loope
aaa
loop
cmp
jp
call
add
xlat
enter
retf
or
int
out
ror
cmp
mov
dec
mov
loop
xchg
inc
mov
xchg
shl
inc
sbb
or
push
inc
pop
inc
push
xor
lahf
and
mov
mov
pusha
mov
in
xor
out
ds
push
mov
ret
dec
adc
sahf
ja
jg
and
xchg
and
test
xor
adc
imul
mov
icebp
or
and
xchg
mov
mov
xchg
and
mov
cmps
and
arpl
mov
add
push
push
sbb
xchg
cld
cmps
and
cld
cmps
and
sbb
or
stos
push
mov
stos
inc
sub
or
xchg
test
or
fwait
push
mov
xchg
adc
dec
sub
push
push
movs
xchg
stos
into
sub
enter
and
sub
fcom
cli
xor
mov
fst
jg
les
inc
sub
enter
and
cmp
fsubp
mov
enter
or
(bad)
aas
inc
stos
out
inc
stos
out
inc
mov
daa
inc
mov
in
inc
push
cmovae
loope
pop
out
mov
in
test
mul
jle
cmc
loope
daa
out
mov
in
test
mul
jle
cmc
loope
das
out
mov
in
test
mul
jle
cmc
loope
aaa
out
mov
sti
and
inc
scas
and
pop
mov
test
and
inc
out
out
(bad)
fild
out
inc
xchg
inc
dec
cmp
scas
push
add
push
std
mov
leave
pop
cmp
mov
pop
pop
or
xchg
pop
mov
mov
pop
syscall
leave
ror
xchg
jnp
push
enter
inc
add
inc
lahf
jb
jge
jp
jg
inc
xchg
enter
or
inc
adc
or
ins
rcr
push
test
push
mov
enter
xor
enter
inc
out
xchg
and
aas
xchg
mov
mov
mov
test
(bad)
arpl
cmp
add
test
std
pop
test
adc
icebp
xchg
add
test
adc
mov
cmc
imul
cmp
(bad)
popa
mov
lock
add
iret
and
lock
loopne
inc
pop
data16
js
repnz
xchg
mov
adc
xor
mul
cmp
mov
imul
or
xchg
stos
into
sbb
enter
and
sbb
fadd
and
ja
sbb
(bad)
(bad)
(bad)
and
xor
adc
int3
push
push
or
push
push
or
push
or
push
push
or
push
push
or
push
or
sub
mov
lods
adc
sub
mov
lods
clc
mov
scas
clc
movs
sub
inc
in
test
out
jle
cmc
sahf
xchg
inc
neg
test
and
inc
outs
fdivrp
xor
sbb
mov
cmc
das
inc
mov
daa
inc
mov
pop
inc
mov
pop
inc
in
pop
xchg
sbb
mov
lock
cli
cmp
push
inc
hlt
jmp
mov
jl
inc
inc
cmc
call
dec
shl
jmp
mov
jl
iret
inc
hlt
jmp
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
das
ret
xchg
rcl
out
or
push
enter
or
inc
(bad)
xlat
popa
mov
xchg
dec
dec
mov
sbb
sbb
lahf
inc
xchg
enter
retf
mov
add
adc
xchg
push
xchg
inc
xchg
enter
xor
xor
or
sahf
push
push
(bad)
push
fmul
xchg
push
enter
mov
(bad)
push
cld
push
xchg
push
and
add
cmc
xor
and
inc
xchg
and
inc
jle
add
loop
mov
stos
sbb
mov
xchg
and
adc
out
loope
imul
icebp
inc
adc
xor
mov
cdq
loope
xchg
movs
jno
xchg
jno
mov
push
inc
xchg
and
jecxz
loope
inc
stos
xchg
push
mov
adc
out
das
xchg
and
push
pop
jmp
sbb
sub
sbb
cdq
jp
or
imul
push
cdq
shl
daa
out
push
mov
xchg
and
sbb
and
into
jg
mov
jmp
mov
cmp
or
cli
aaa
inc
rcl
aaa
or
dec
sbb
inc
sbb
loop
jbe
cmp
sbb
inc
adc
xor
ret
cwde
(bad)
icebp
push
mov
jge
or
es
inc
daa
jmp
(bad)
jmp
fs
push
push
jp
sub
and
inc
xchg
pusha
stc
inc
jle
mov
test
or
jp
sub
push
mov
ins
icebp
sub
in
inc
mov
jle
retf
mov
or
mov
pop
mov
jle
or
and
jo
or
lds
and
or
cmp
xchg
push
mov
lds
or
andps
inc
imul
push
enter
fistp
ret
enter
and
xchg
mov
or
xchg
mov
or
daa
push
pop
xchg
enter
shr
into
mov
lods
(bad)
pop
inc
xchg
enter
ja
arpl
or
xchg
push
(bad)
sbb
and
push
xor
mov
int3
bnd
ret
in
loop
sahf
pshufw
pushf
push
ficom
jecxz
scas
xchg
jle
clc
retf
pushf
ret
adc
pop
xor
test
sub
cmps
sbb
xor
dec
add
push
cmp
cwde
adc
loope
loop
pusha
cdq
pop
test
aas
jecxz
pop
xchg
ffreep
cwde
into
stos
sahf
stc
jl
ret
jl
or
xlat
and
xchg
(bad)
or
stc
stos
cwde
jnp
mov
adc
das
mov
(bad)
aas
xchg
push
adc
mov
outs
mov
loope
adc
mov
outs
jbe
fidiv
xchg
cli
fimul
push
(bad)
pushf
jo
or
dec
fcom
(bad)
mov
cli
fisub
in
fs
push
(bad)
sbb
fsubp
sbb
cmp
add
retf
pop
stos
push
clc
(bad)
or
sbb
and
push
leave
or
and
jnp
and
add
and
jmp
add
jle
dec
jmp
addr16
and
call
jge
jb
xlat
sbb
fidivr
sub
pop
repnz
dec
mov
pop
sahf
ss
pop
mov
mov
dec
inc
std
data16
das
cs
xor
inc
jle
hlt
inc
div
jge
jb
or
and
xor
sbb
sbb
ret
ret
or
imul
(bad)
sbb
jge
sbb
repz
push
hlt
pop
push
xchg
enter
inc
mov
xchg
enter
inc
or
imul
push
xor
dec
mov
push
es
mov
inc
scas
cmps
inc
adc
and
sbb
and
jg
imul
pushf
push
cmp
inc
xchg
mov
mov
push
and
aas
push
fisttp
daa
fdiv
ret
ficomp
(bad)
dec
push
xchg
and
ja
fidiv
daa
sbb
adc
lods
movs
lahf
imul
xchg
(bad)
dec
xchg
and
xor
(bad)
adc
jbe
ret
push
ficomp
and
add
xor
sbb
in
sub
cs
sub
mov
std
xlat
leave
sbb
mov
cmp
mov
and
iret
std
fisub
sub
add
xchg
(bad)
test
or
xor
popa
add
lahf
xor
loopne
adc
lahf
neg
daa
pop
push
ficomp
inc
mov
fisttp
xor
(bad)
fimul
sbb
and
xchg
mov
sub
(bad)
xchg
add
arpl
mov
ja
adc
mov
repz
mov
jge
dec
push
aam
mov
or
outs
xchg
or
jg
cmp
add
push
mov
and
leave
dec
sub
inc
mov
mov
daa
mov
cmc
shl
cdq
pop
jp
or
jp
sbb
dec
retf
cdq
arpl
sbb
push
rcl
ret
mov
cmpxchg
and
mov
xor
cwde
dec
es
or
nop
push
cmp
popa
mov
ins
adc
xchg
fcmovbe
enter
ds
sub
dec
and
(bad)
out
push
enter
jle
lods
jae
inc
sbb
jno
and
or
mov
ror
gs
push
cmp
and
push
sub
sti
test
test
dec
push
pop
call
test
fisttp
cs
fnstcw
xchg
stos
out
inc
lods
and
(bad)
(bad)
and
xor
addr16
jmp
cmp
jecxz
cdq
fwait
imul
jmp
push
pop
rcr
arpl
sub
cmp
pop
addr16
adc
xor
jmp
das
into
lock
lock
xchg
lahf
inc
mov
xchg
mov
(bad)
das
dec
xchg
dec
sub
and
sub
xor
jl
fdivp
call
xchg
and
mov
pop
fistp
dec
cmp
sub
clc
imul
cmc
std
out
fs
movs
push
and
dec
xchg
int3
sub
in
out
out
push
pop
xchg
sub
mov
fld
movs
bnd
inc
and
cmp
retf
xor
into
xor
pop
into
loop
push
sub
inc
out
cmc
dec
sbb
out
divps
std
int
jp
push
pop
inc
sti
add
or
pop
xor
ficomp
pop
jns
jle
pop
pop
push
or
shr
call
aad
xchg
jg
or
lock
inc
jle
mov
add
cmps
cmp
push
xchg
dec
push
inc
xchg
enter
cwde
inc
and
dec
dec
push
adc
or
mov
inc
xchg
enter
mov
or
call
xchg
inc
fisttp
sub
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xchg
dec
test
hlt
xchg
enter
mov
push
adc
or
jbe
and
enter
leave
or
xchg
jge
cmp
cwde
jecxz
xchg
enter
ins
pop
fwait
jecxz
push
push
and
nop
mov
(bad)
and
rcl
and
mov
jl
push
dec
stos
popa
ret
cmp
sbb
lods
fnstenv
mov
pop
fxch
push
and
bound
(bad)
dec
mov
rol
push
vmovd
data16
leave
xchg
jge
ficomp
dec
push
bound
shl
in
into
xor
fidiv
icebp
test
(bad)
push
and
lods
aam
shl
ret
jno
fld
pusha
sti
xchg
es
cmc
mov
enter
push
lods
fisub
mov
test
test
and
sub
sub
in
pop
push
rcl
leave
faddp
mov
fwait
retf
inc
es
jmp
xchg
shl
call
jno
xchg
outs
xchg
les
xchg
aam
stos
aad
push
jl
mov
mov
iret
sbb
(bad)
sub
push
shl
and
(bad)
xor
das
jle
push
in
outs
retf
lock
fwait
inc
test
jb
mov
and
stos
pop
and
inc
inc
push
ficomp
cli
sbb
or
stos
or
lods
pop
stos
cmc
jge
out
add
pop
sub
jg
sbb
push
cmps
dec
dec
sti
jle
inc
jle
(bad)
xchg
push
inc
movs
push
enter
fst
(bad)
enter
jo
adc
(bad)
retf
push
enter
pop
xchg
pop
rcl
mov
or
ss
pop
cmp
inc
es
xchg
enter
sbb
push
enter
stos
loopne
ror
add
enter
stos
test
ror
cli
add
or
push
add
and
test
adc
inc
xchg
and
fwait
stos
jne
mov
and
jge
xor
xchg
and
inc
jmp
inc
xchg
test
icebp
(bad)
jl
push
cmp
mov
mul
xor
ds
loope
out
icebp
inc
jecxz
add
into
test
xchg
ds
mov
push
fbld
push
and
ret
ja
sub
arpl
adc
mov
or
xchg
jb
aas
ret
add
outs
xor
or
and
jno
mov
lds
leave
loop
es
out
sub
push
sbb
test
dec
leave
ficom
lahf
int
loopne
and
sub
adc
ins
fsubr
mov
call
and
push
mov
xor
xor
test
jp
inc
jle
xchg
and
inc
fild
test
jle
inc
int3
mov
push
or
and
jnp
test
and
dec
mov
fdivr
repnz
push
fadd
sar
ds
push
push
mov
into
fs
push
inc
std
clc
or
outs
pusha
inc
jg
or
cmp
lock
and
fdivr
or
loope
sub
mov
retf
or
mov
inc
push
xchg
inc
(bad)
gs
xchg
retf
enter
leave
or
cmp
into
shl
add
(bad)
clc
or
mov
stos
(bad)
dec
cmp
clc
cmp
out
mov
push
cld
outs
int3
shr
into
ret
retf
or
enter
xchg
das
dec
sbb
pop
xchg
mov
fidiv
push
daa
inc
sbb
pcmpeqd
or
mov
int
cmp
cmp
push
popa
cmp
inc
adc
retf
enter
enter
lods
clc
sub
inc
movs
loope
pop
movs
call
sahf
movs
ret
iret
shl
lds
fisub
das
popa
inc
enter
push
je
sub
add
jnp
mov
sub
lds
movs
xor
(bad)
dec
imul
into
xlat
in
cmp
xor
push
inc
xlat
dec
loop
add
scas
jl
in
and
mov
fidivr
adc
loope
cld
adc
add
xchg
push
pop
pop
sti
adc
int
iret
in
push
int
in
dec
in
in
inc
movs
cmp
cld
movs
push
add
mov
stos
int3
inc
fwait
movs
dec
out
mov
or
popf
mov
or
pop
and
or
sbb
mov
push
mov
xor
sbb
mov
mov
xchg
inc
bound
or
inc
sbb
lods
rol
pop
and
sub
out
or
(bad)
je
cmpps
mov
jg
jge
mov
lods
int3
pop
jp
xchg
push
sub
inc
dec
pop
push
icebp
js
inc
pusha
and
inc
(bad)
in
push
fldenv
nop
data16
pop
adc
jle
sbb
jbe
iret
or
mov
out
adc
or
cmpps
js
test
enter
push
cmc
adc
jo
inc
push
call
cmp
push
jecxz
inc
sbb
in
movs
mov
std
enter
push
lahf
adc
xlat
enter
dec
push
pop
std
aam
pop
xchg
push
xchg
jle
cld
push
jb
pop
adc
loop
movs
cmp
push
das
pusha
adc
clc
test
(bad)
xchg
pop
das
les
sbb
push
and
sbb
(bad)
jp
in
adc
cmp
push
iret
(bad)
push
cmp
sub
dec
ins
push
and
push
jl
cmp
ins
inc
out
shr
test
and
xor
xlat
sahf
loopne
pop
sub
and
jns
add
icebp
icebp
movs
mov
and
cmp
ss
into
movs
xor
inc
stos
lods
(bad)
loope
mov
out
not
retf
pop
test
and
sub
jge
nop
shl
pop
adc
inc
sub
rol
fidiv
das
aam
xchg
dec
lahf
movs
jbe
sahf
fdivrp
adc
adc
sbb
cld
ins
mov
and
inc
es
rcl
daa
fidiv
push
je
enter
lea
cdq
int3
sub
mov
cmps
les
bound
movs
enter
mov
sahf
in
ret
pusha
in
adc
ja
or
or
xor
jb
cdq
retf
jl
adc
jne
cmp
cmc
out
scas
dec
lds
push
je
mov
and
adc
jne
cmp
cmc
aaa
inc
scas
dec
popf
sub
je
mov
and
or
inc
inc
cmp
and
mov
mov
dec
push
shl
or
cld
push
mov
xchg
xchg
cmps
cwde
lahf
lods
xor
xlat
in
outs
cmps
cmps
add
nop
scas
or
fcomp
mov
test
icebp
(bad)
lods
cmps
xlat
cmps
add
stc
sbb
inc
clc
jbe
cmps
cwde
addr16
test
outs
or
inc
call
andnps
xchg
enter
enter
xor
inc
mov
adc
or
enter
(bad)
dec
inc
call
jge
inc
frstor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
cmps
adc
push
add
mov
sbb
js
sbb
leave
out
test
gs
sub
jne
push
cmp
shl
add
(bad)
xlat
retf
pop
push
or
sbb
sub
shl
and
loop
mov
xchg
push
jl
sub
hlt
ja
enter
fdivrp
adc
sbb
dec
push
and
push
loop
jae
stos
or
pop
xlat
pop
sahf
jo
or
lds
adc
jmp
push
add
pop
retf
out
xor
push
adc
inc
retf
fild
push
clc
xor
iret
adc
push
sbb
jb
mov
repnz
scas
lock
mov
enter
dec
mov
ror
jo
enter
dec
push
pusha
and
fisubr
dec
or
enter
dec
push
pusha
repz
dec
adc
sti
enter
dec
cmp
inc
xchg
jle
bswap
clc
fistp
ins
jg
psubusw
rcr
fs
paddw
push
sub
out
aam
test
test
push
or
xlat
push
call
jae
push
call
jae
push
enter
inc
jo
push
enter
push
jo
push
test
cmps
push
inc
jo
push
test
addr16
push
jo
push
mov
addr16
add
push
mov
ficom
jo
push
push
jo
push
xchg
ficomp
or
push
add
or
sbb
or
adc
push
adc
les
dec
or
xchg
xor
sbb
cmp
adc
or
pop
xor
mov
hlt
and
push
enter
(bad)
cmp
and
inc
xchg
loopne
sbb
cmp
add
or
or
or
xchg
enter
mov
or
xchg
enter
and
inc
xchg
and
jb
test
inc
xchg
leave
pop
outs
push
and
inc
jg
mov
mov
xchg
retf
es
xchg
and
and
je
fdivp
jb
in
inc
xchg
leave
sti
push
pop
and
jae
fimul
push
adc
loope
and
mov
outs
push
and
jg
cwde
jl
fidivr
sbb
xchg
popa
mov
xchg
and
mov
enter
xchg
sub
xchg
and
ror
daa
ins
add
or
xchg
leave
xchg
retf
and
sbb
movs
icebp
push
fcomp
mov
xor
out
fcom
loopne
retf
fmulp
inc
add
or
xchg
leave
sub
fidiv
sbb
jns
in
fcomp
push
icebp
xchg
and
add
pop
xchg
test
xchg
and
retf
fadd
and
inc
jle
jo
pop
outs
pop
or
or
jp
sbb
outs
inc
aam
and
and
stc
mov
adc
jle
xor
xlat
outs
pop
or
ror
inc
jle
adc
outs
call
dec
and
loopne
mov
sahf
sub
or
mov
or
and
or
jp
sbb
cmps
rcl
adc
pop
jg
or
xor
or
enter
mov
or
hlt
inc
xchg
enter
scas
mov
inc
xchg
mov
sbb
(bad)
leave
or
mov
jbe
xchg
enter
pusha
mov
inc
xchg
enter
pop
inc
or
test
inc
xchg
xor
and
dec
rcr
leave
or
pop
xor
push
push
enter
push
mov
and
or
lock
and
inc
rol
leave
or
and
addr16
and
jg
dec
jbe
faddp
fst
leave
jle
push
and
ret
pop
ficom
rcr
movs
outs
jecxz
stos
aas
lods
and
stos
(bad)
and
aas
(bad)
leave
out
push
and
mov
jecxz
mov
jbe
stos
cmps
or
and
stos
(bad)
and
lahf
push
adc
inc
dec
mov
ds
or
icebp
cmps
stc
fstp
dec
xchg
xor
inc
xchg
ja
cwde
hlt
fisub
cmp
je
mov
pop
xlat
pop
xchg
leave
and
sbb
addr16
xchg
xchg
bound
push
bswap
retf
mov
sbb
sbb
(bad)
xchg
jno
lahf
hlt
fdivp
mov
addr16
xchg
popf
mov
xchg
push
pop
retf
out
xor
js
fistp
or
mov
fisubr
inc
mov
(bad)
fdivr
jge
and
loope
mov
inc
ds
fcomp
js
addr16
xlat
pop
(bad)
pop
jne
inc
fdivr
jge
pop
adc
mov
push
mov
mov
pop
push
pop
into
inc
test
and
cmp
jp
push
test
loop
inc
(bad)
mov
cmp
add
daa
pop
inc
jg
and
push
jp
sbb
sbb
arpl
clc
jle
xchg
je
jae
call
(bad)
(bad)
(bad)
or
nop
ds
add
shr
lds
adc
push
jecxz
push
ret
jg
push
les
rcl
xor
push
dec
(bad)
cld
adc
add
unpcklps
push
mov
lods
or
inc
xlat
inc
cmps
sub
retf
cmp
int3
inc
push
and
adc
icebp
cmps
and
scas
jl
into
(bad)
fidivr
cdq
mov
jp
xor
jno
xchg
jno
hlt
mov
lahf
xchg
xor
lods
ficomp
movs
loope
iret
xchg
and
aam
sub
adc
xor
mov
sbb
add
jo
xor
stos
in
ss
push
adc
inc
xchg
retf
outs
mov
jnp
js
jg
sub
inc
dec
cld
icebp
inc
adc
(bad)
xchg
test
cs
jl
xchg
jbe
(bad)
fcomp
xor
mov
shl
(bad)
ficomp
test
xchg
and
sbb
shr
arpl
fucom
shl
xchg
push
fistp
dec
adc
xchg
cwde
or
xchg
and
nop
push
repz
je
xchg
and
(bad)
fld
xchg
rcl
rcl
inc
cs
loope
or
in
pop
loopne
jne
push
add
mov
dec
jecxz
idiv
push
gs
sub
jle
pushf
inc
jne
das
cld
jo
mov
cmp
iret
sbb
ja
mov
dec
mov
or
sbb
or
cmp
and
add
imul
icebp
daa
add
das
lea
popf
ss
or
add
mov
lea
pop
out
outs
addr16
shl
adc
and
xchg
xchg
pop
mov
jb
enter
xchg
xor
push
fisttp
sbb
inc
pushf
sbb
and
imul
loopne
jp
int3
ja
dec
mov
jle
mov
sub
or
les
mov
pop
push
cld
int3
ja
pop
aas
dec
(bad)
mov
mov
mov
dec
(bad)
xchg
hlt
or
fnstenv
arpl
ins
inc
push
sbb
dec
mov
int
mov
and
and
rcr
xchg
push
dec
ja
jl
(bad)
test
push
stos
jp
sub
inc
sbb
movs
jl
cmp
jno
movs
loope
test
loop
outs
jo
(bad)
neg
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movs
inc
xchg
and
push
stos
cdq
dec
ins
push
gs
push
retf
lods
mov
push
adc
and
push
fdiv
inc
xchg
stos
in
push
push
or
es
and
sti
and
xchg
aas
rcr
push
inc
(bad)
push
adc
xchg
cld
mov
repnz
stc
test
xchg
jno
jmp
mov
pusha
ja
stc
pop
xor
jmp
sbb
push
and
inc
(bad)
cmc
aam
mov
push
ficom
aas
scas
ficom
pop
(bad)
mov
ds
dec
stos
int
pop
in
and
adc
das
mov
stos
daa
pop
sbb
mov
ficomp
repnz
jne
retf
call
out
jne
arpl
mov
cs
test
(bad)
cld
imul
jno
inc
sti
cld
test
(bad)
cmps
data16
or
cmp
jle
(bad)
addr16
mov
inc
cdq
pop
jmp
daa
or
ret
in
lds
cmc
out
sub
in
dec
jle
or
mov
xchg
xchg
or
mov
(bad)
cmp
lds
and
jo
inc
xchg
enter
lea
xchg
mov
xchg
inc
das
retf
or
or
and
mov
outs
std
mov
imul
add
jge
and
enter
sub
leave
into
rol
and
jbe
rcr
iret
mov
inc
pop
and
and
pop
jmp
xor
stos
in
ja
leave
pop
inc
xchg
and
and
fsubp
and
pop
dec
xchg
and
inc
adc
mov
clc
daa
inc
cmp
and
jno
popa
mov
dec
sbb
movs
clc
(bad)
sub
xchg
loop
adc
retf
push
(bad)
call
mov
call
dec
push
dec
push
adc
jno
sbb
js
xor
and
cmp
xlat
in
push
scas
xlat
in
dec
pop
sbb
jecxz
out
mov
sub
mov
sti
or
xchg
jo
mov
xor
adc
pop
jmp
aam
loope
xchg
and
les
stos
leave
imul
pop
sub
in
xchg
and
test
pop
leave
stc
xor
out
sub
pop
cmp
sub
sbb
push
jl
test
int
movs
or
jmp
cmc
arpl
jno
(bad)
out
mov
inc
push
das
jg
repz
pop
mov
mov
pusha
xchg
add
mov
and
cmp
mov
cmp
cld
add
adc
arpl
dec
mov
paddw
or
stos
or
push
and
dec
out
xchg
mov
aam
xchg
xor
cvtdq2ps
push
pop
sbb
add
xchg
push
mov
(bad)
addr16
ret
jo
push
dec
pushf
add
int3
xchg
sub
sub
enter
pop
lock
out
or
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
and
xchg
and
xchg
and
xchg
and
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
xchg
and
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
jmp
or
xchg
and
jmp
or
xchg
and
jmp
or
xchg
and
jmp
or
add
and
fadd
and
jmp
or
mov
inc
sahf
mov
inc
push
mov
inc
cmps
mov
inc
xchg
or
mov
inc
(bad)
mov
inc
in
or
mov
inc
cmp
or
mov
inc
xor
inc
test
or
mov
inc
aam
or
mov
inc
xor
inc
mov
mov
inc
aam
or
mov
inc
adc
or
mov
inc
xchg
and
inc
xchg
mov
inc
xchg
push
call
cmp
xchg
and
xchg
and
xchg
repnz
inc
xchg
xor
inc
xchg
retf
xchg
mov
inc
xchg
bnd
xchg
cmp
xchg
sub
xchg
fidiv
xchg
inc
sahf
inc
xchg
scas
xchg
inc
xchg
add
inc
xchg
adc
inc
xchg
data16
xchg
int3
xchg
hlt
jg
xchg
fcom
inc
xchg
test
inc
xchg
mov
xchg
inc
xchg
and
(bad)
xchg
and
lds
and
rcl
and
xchg
mov
(bad)
xchg
and
xchg
and
xchg
and
xchg
and
rcl
and
xchg
and
rcl
and
rcl
and
rcl
and
xchg
and
rcl
and
dec
add
or
or
add
or
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
adc
push
or
xor
or
jp
or
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
mov
sti
or
ds
dec
repnz
pop
sbb
inc
ins
sbb
fsubrp
call
dec
or
xchg
invd
push
xchg
dec
or
or
cmp
inc
pop
and
inc
sbb
sbb
and
inc
in
and
inc
jle
or
and
inc
jle
or
and
mov
inc
shl
mov
lods
and
or
and
iret
inc
pop
and
inc
cdq
and
adc
and
inc
cmp
inc
inc
cmp
dec
inc
aaa
and
sahf
and
pop
inc
pop
and
xchg
lds
dec
xchg
enter
call
xchg
sti
or
ret
xchg
call
or
lods
or
pop
or
sub
xchg
outs
add
xchg
jge
jo
gs
xchg
adc
add
xchg
sub
xchg
pop
add
xchg
sub
add
xchg
daa
or
xchg
call
or
xchg
fisttp
and
fisttp
push
xchg
in
or
or
xchg
cmc
or
and
inc
mov
iret
inc
mul
jne
(bad)
and
inc
hlt
and
inc
mov
js
stc
and
jecxz
mov
and
inc
(bad)
and
inc
mul
aad
(bad)
and
inc
stc
and
ret
and
inc
mov
enter
lds
and
inc
mul
adc
inc
mov
adc
and
inc
loop
push
inc
mov
or
and
inc
out
and
inc
loop
rol
and
sti
xchg
push
or
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xchg
inc
or
xchg
push
or
xchg
dec
or
xchg
push
or
xchg
push
or
xchg
dec
or
xchg
push
or
add
enter
lds
pop
or
push
or
push
or
push
or
xchg
dec
or
xchg
add
xor
inc
or
xchg
dec
or
dec
or
xchg
inc
or
xchg
inc
or
add
daa
xchg
jb
and
and
jne
dec
and
sub
ins
inc
pop
and
inc
xchg
sub
sub
loope
pop
and
inc
add
ss
sbb
and
inc
add
call
inc
adc
in
inc
pop
and
inc
sahf
and
fadd
and
sub
and
mov
inc
mov
and
call
inc
pop
and
inc
fwait
and
add
xchg
fmul
jle
jmp
or
xchg
lds
cmp
xchg
mov
or
fimul
ds
ret
xchg
call
or
call
or
pop
or
mov
and
test
add
xchg
data16
xchg
jp
and
imul
ins
or
xchg
sub
xchg
push
or
xchg
aaa
add
xchg
sub
add
xchg
fisttp
popa
xchg
and
popf
and
inc
xchg
and
inc
mov
and
inc
call
inc
(bad)
and
inc
cli
and
inc
jecxz
jbe
mov
cwde
inc
stc
and
jecxz
mov
and
inc
repnz
jecxz
mov
and
aam
xor
and
inc
cli
and
inc
in
int3
inc
mov
or
inc
stc
and
inc
clc
and
inc
hlt
and
inc
mov
and
inc
xchg
dec
or
add
push
xchg
dec
or
dec
or
xchg
inc
or
xchg
inc
or
xchg
add
sti
xchg
add
cli
xchg
push
or
xchg
dec
or
pop
or
xchg
add
mov
xchg
dec
or
xchg
inc
or
xchg
dec
or
xchg
sub
fcom
pop
or
or
or
xchg
or
cmp
bound
dec
xchg
jne
cmp
dec
or
pop
and
inc
mov
pushf
inc
xchg
fs
jae
add
and
inc
sub
push
inc
mov
add
inc
sahf
and
sub
and
push
and
inc
or
aaa
inc
pop
and
inc
adc
and
and
inc
pop
and
inc
pop
and
inc
sbb
sub
and
inc
fbld
adc
and
inc
jle
or
and
cli
inc
xchg
fisttp
ds
ret
xchg
call
add
xchg
call
or
or
add
xchg
fisttp
jae
sub
xchg
in
or
xchg
out
pop
xchg
cli
or
xchg
pushf
or
or
out
or
xchg
loope
pop
xchg
loope
ja
mov
bound
mov
bound
mov
pop
xchg
int
cmp
enter
sbb
xchg
ds
xchg
ret
xchg
and
inc
stc
and
inc
jecxz
add
and
inc
clc
and
lock
inc
mov
repnz
out
add
and
mov
pop
aas
clc
and
inc
mov
repnz
jecxz
aad
(bad)
and
inc
mov
enter
enter
fadd
and
inc
(bad)
and
mul
jne
(bad)
and
stc
and
xchg
and
inc
mov
and
mov
and
xchg
add
xchg
xchg
dec
or
xchg
push
or
xchg
inc
or
xchg
push
or
inc
or
dec
or
dec
or
xchg
inc
or
xchg
dec
or
xchg
sub
out
and
fcom
pop
or
or
sub
out
or
cmp
dec
or
xchg
push
or
inc
or
xchg
inc
or
xchg
add
int
push
or
xchg
add
ret
or
add
mov
shl
inc
retf
inc
fbld
rol
mov
inc
fbld
movs
inc
jnp
add
and
inc
jle
or
and
cmp
and
inc
je
xor
inc
pop
and
pop
and
and
inc
sub
das
inc
sahf
and
and
inc
sbb
and
inc
adc
sbb
adc
sub
and
inc
loopne
loope
xchg
stos
or
std
or
xchg
enter
sbb
xchg
cmp
xchg
and
xchg
ror
push
xchg
sub
xchg
push
or
xchg
add
xchg
and
add
xchg
and
and
sub
xchg
call
or
test
cmp
xchg
enter
mov
or
xchg
fisttp
ss
ret
xchg
call
or
mov
jae
movs
or
std
inc
repnz
inc
loop
in
jecxz
mov
ds
mov
ds
aad
clc
and
ds
and
aas
repnz
ds
idiv
in
and
popf
and
inc
xchg
and
inc
xchg
and
aas
mov
and
inc
mov
and
inc
jecxz
add
repnz
inc
lock
inc
mov
jb
out
rol
and
clc
and
retf
or
xchg
dec
or
inc
or
xchg
inc
or
xchg
sub
repnz
and
sub
adc
in
xchg
sub
repnz
or
cmp
inc
or
dec
or
push
or
or
cld
xchg
dec
or
xchg
push
or
xchg
inc
or
xchg
inc
or
xchg
add
cmp
dec
or
xchg
inc
or
xchg
sub
fcom
pop
or
xchg
adc
repz
sub
loop
or
inc
pop
and
inc
sbb
adc
pop
and
inc
call
and
inc
push
and
inc
in
and
inc
pop
and
inc
(bad)
fild
and
scas
inc
test
mov
inc
shl
scas
inc
mov
or
and
cmp
and
inc
pop
and
imul
ins
inc
pop
and
dec
and
inc
push
and
inc
sub
and
inc
xchg
in
or
xchg
out
push
xchg
mov
or
scas
or
pop
or
mov
outs
xchg
pop
or
xchg
ret
xchg
enter
sbb
xchg
cmp
xchg
ret
xchg
sub
xchg
imul
xchg
das
or
xchg
cmp
xchg
and
xchg
fisttp
outs
xchg
fmul
jae
daa
or
xchg
aam
and
hlt
or
xchg
in
push
xchg
jmp
les
repz
xchg
and
aas
xchg
and
cdq
cmps
and
xchg
and
xchg
cmps
and
xchg
and
aas
xchg
and
cmps
and
xchg
and
aas
xchg
and
xchg
cmps
and
xchg
and
xchg
cmps
and
xchg
and
cmps
and
aas
xchg
and
xchg
cmps
and
inc
xchg
and
mov
and
inc
xchg
and
cmps
and
mov
and
xchg
cmps
and
ficom
push
or
xchg
and
cmp
push
or
or
push
or
xchg
and
movs
and
and
xchg
and
and
mov
xchg
and
or
push
or
xchg
and
inc
and
and
hlt
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xchg
dec
or
xchg
push
or
xchg
inc
or
add
sbb
push
or
dec
or
bound
cmc
xchg
or
or
jae
xlat
xchg
dec
or
and
pop
and
inc
push
and
inc
sub
sub
and
inc
jle
or
and
inc
jle
or
and
inc
push
and
inc
pop
and
inc
in
and
inc
adc
fiadd
and
inc
pop
and
inc
fbld
call
inc
aad
cmps
inc
shl
inc
jle
or
and
xchg
inc
xchg
sub
and
pop
inc
ins
and
inc
xchg
ret
xchg
cmp
xchg
cli
or
in
sbb
xchg
int
inc
push
ror
inc
xchg
enter
in
or
int3
or
enter
pop
or
les
inc
xchg
enter
dec
or
ror
xchg
enter
push
add
push
ror
inc
xchg
enter
jg
inc
push
ror
inc
xchg
enter
js
inc
push
ror
xchg
enter
pop
or
push
ror
xchg
enter
and
xchg
loope
inc
xchg
and
inc
xchg
and
inc
xchg
loope
inc
xchg
and
dec
xchg
loope
inc
xchg
and
dec
xchg
loope
inc
xchg
and
inc
xchg
and
xchg
and
inc
xchg
and
xchg
and
inc
fldenv
lods
inc
(bad)
xchg
inc
movs
and
inc
shl
cmc
inc
(bad)
xor
and
xchg
in
repz
in
int3
mov
repnz
xchg
in
or
rol
push
inc
or
daa
push
dec
cmp
dec
imul
and
sub
and
gs
add
push
xor
cdq
inc
add
push
cmp
or
inc
sub
add
mov
dec
out
pushf
xchg
and
movs
ds
mov
enter
into
and
push
add
dec
sub
cmovns
xchg
push
or
xor
mov
inc
retf
ja
aaa
xchg
jb
inc
mov
and
inc
push
and
and
or
and
gs
imul
inc
dec
and
inc
jle
or
and
push
and
and
inc
xor
inc
inc
sahf
and
xor
pop
and
inc
pop
and
inc
pop
and
inc
and
aad
pop
and
inc
sbb
daa
inc
out
rol
and
inc
scas
and
or
and
or
and
or
xchg
sbb
or
xchg
enter
push
or
xchg
ss
xchg
xor
add
xchg
enter
aas
add
xchg
cld
or
or
cli
or
fwait
or
cwde
or
in
outs
xchg
jmp
xchg
mov
push
xchg
cmps
or
mov
or
xchg
or
lods
or
enter
or
xchg
jbe
xchg
enter
or
xchg
jp
push
and
inc
mul
rol
and
inc
xchg
and
inc
repnz
inc
in
adc
mul
adc
and
aas
xchg
and
inc
mul
cmova
and
inc
in
test
xchg
and
repnz
aas
xchg
and
aas
xchg
and
hlt
and
xchg
and
repnz
aas
loop
xchg
xchg
and
aas
xchg
and
aas
xchg
and
and
inc
out
or
and
aas
xchg
inc
or
xchg
and
and
inc
or
xchg
inc
or
xchg
and
sbb
xchg
push
or
xchg
inc
or
pop
or
xchg
and
sub
inc
or
xchg
pop
or
xchg
and
cwde
xchg
dec
or
xchg
push
or
xchg
pop
or
xchg
and
mov
inc
or
xchg
dec
or
xchg
inc
or
xchg
push
or
xchg
inc
or
and
inc
mov
and
mov
jle
or
and
lods
inc
fbld
or
and
or
and
or
and
or
and
or
and
inc
xor
pop
inc
sub
or
and
inc
ss
jle
or
xchg
pop
push
ret
or
pop
pop
sbb
call
mov
ds
movs
xor
out
enter
sbb
or
fldenv
outs
fs
pop
in
or
push
pop
dec
repnz
or
pop
push
clc
sub
push
repnz
inc
xchg
or
loop
lahf
fsub
xchg
ins
out
enter
adc
xchg
mov
(bad)
in
or
test
hlt
loopne
inc
xchg
mov
push
out
enter
sub
out
and
cmps
loope
cmps
mov
mul
loopne
lock
mov
and
mov
and
popf
out
and
scas
in
in
in
das
mov
stc
and
sahf
jecxz
adc
xchg
and
mov
inc
add
loop
ret
pop
mov
xchg
and
repz
mov
inc
xchg
and
repnz
int
out
and
inc
push
mov
faddp
mov
inc
xor
push
or
cmp
mov
inc
or
cmp
or
xchg
and
jmp
or
xchg
and
jmp
or
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
xchg
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
and
xchg
lock
xchg
call
or
xchg
call
or
xchg
call
or
xchg
call
or
xchg
sub
xchg
or
xchg
fmul
xor
and
inc
xchg
popa
inc
xchg
jno
xchg
jno
xchg
cmc
aas
adc
in
adc
in
adc
in
adc
mov
adc
popa
inc
xchg
xor
and
inc
xchg
and
and
ds
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
mov
xchg
mov
xchg
or
xchg
mov
or
mov
or
xchg
and
call
xchg
and
call
xchg
and
call
xchg
and
call
xchg
and
call
xchg
xor
ficom
and
jmp
or
xchg
and
fcom
and
fcom
and
fcom
and
fcom
and
fcom
and
inc
jle
or
and
inc
jle
or
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
xchg
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
sub
xchg
sub
xchg
sub
xchg
sub
xchg
pusha
or
xchg
lock
xchg
lock
xchg
call
or
xchg
and
inc
mov
rol
rol
rol
inc
mov
adc
and
inc
fbld
xchg
inc
xchg
mov
xchg
popa
inc
xchg
popa
inc
xchg
push
inc
xchg
jno
xchg
popa
inc
xchg
popa
inc
adc
in
inc
adc
fld
and
inc
adc
lods
inc
xchg
xor
and
and
mov
inc
push
and
push
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
fist
and
fist
and
fist
and
retf
or
xchg
xor
retf
or
or
or
or
xchg
and
fcom
and
fcom
and
fcom
and
fcom
and
fcom
xor
retf
or
xchg
add
cmp
add
cmp
add
cmp
add
cmp
add
inc
pop
and
inc
pop
and
inc
pop
and
inc
pop
and
inc
pop
and
inc
pop
and
inc
pop
and
inc
pop
and
inc
sahf
and
call
inc
outs
and
inc
dec
and
inc
dec
and
inc
dec
and
inc
dec
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
dec
and
inc
dec
and
inc
dec
and
inc
inc
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
jg
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
retf
xchg
retf
xchg
retf
xchg
retf
xchg
retf
xchg
retf
xchg
retf
xchg
retf
xchg
retf
xchg
retf
xchg
retf
xchg
clc
or
retf
xchg
retf
xchg
retf
xchg
retf
xchg
enter
and
adc
lds
cmps
imul
scas
popa
push
add
mov
pop
or
mov
inc
xor
in
ins
cmp
jne
and
jge
sub
and
or
or
adc
adc
sbb
sbb
and
add
sub
sub
ss
repnz
fist
inc
and
out
daa
psrad
add
xchg
das
pop
retf
sti
aad
xor
sar
repz
daa
cli
jb
jmp
jg
out
add
jecxz
jbe
imul
inc
adc
xor
pop
sbb
cmp
xor
add
or
lea
dec
imul
push
push
fbstp
es
mov
ds
scas
ror
mov
inc
into
mov
dec
ret
push
(bad)
lods
xchg
inc
fidiv
mov
icebp
test
cmp
push
jp
loope
jle
in
jb
stc
push
cmps
stos
fld
cmps
ror
mov
test
jne
xchg
add
xchg
add
jno
mov
imul
mov
cli
lods
adc
repnz
or
jmp
xchg
or
loop
and
ja
sti
aam
hlt
call
pop
lock
imul
leave
addr16
mov
adc
cmovo
sbb
pop
pop
pop
mov
push
pop
mov
dec
arpl
pop
push
das
mov
cmp
cdq
aaa
mov
aas
xchg
pop
mov
lea
lods
xlat
mov
or
add
add
add
xor
pop
cmp
stc
push
sbb
cmc
inc
adc
icebp
aas
adc
in
dec
or
call
jne
or
cs
and
xor
sar
cmp
fcmovbe
cmp
icebp
inc
xchg
and
inc
xchg
es
leave
cdq
cs
test
fst
xor
mov
mov
shl
mov
int
mov
leave
in
mov
push
add
movs
adc
out
mov
sbb
add
shl
(bad)
(bad)
mov
outs
mov
xchg
shl
cmp
jecxz
cmp
push
pusha
retf
popf
push
fs
mov
sub
and
or
cmp
jbe
pop
jg
adc
xchg
stos
xchg
gs
scas
(bad)
jnp
out
ja
cli
mov
lahf
jns
sub
xchg
retf
add
rcl
mov
fwait
ret
mov
lahf
mov
sbb
stos
jmp
and
scas
adc
repz
or
jmp
or
popf
add
jecxz
add
fist
cmp
xlat
dec
xor
push
iret
inc
sub
inc
test
push
sbb
push
dec
jle
jb
addr16
lahf
ins
test
(bad)
jmp
or
add
mov
mov
movs
(bad)
std
movs
adc
inc
push
stc
sbb
and
jp
fisttp
xchg
push
xlat
outs
mov
lods
icebp
mov
cmp
adc
repnz
(bad)
ins
vmovsldup
adc
xchg
add
call
or
aam
(bad)
fdiv
enter
pop
rep
mov
cmp
not
or
arpl
stc
jecxz
dec
or
shl
repz
xchg
outs
xchg
lahf
or
and
inc
hlt
and
inc
clc
and
inc
shl
inc
stc
and
inc
in
inc
inc
fldenv
test
and
loop
mov
in
les
stc
and
shl
aas
in
xor
(bad)
and
aas
stc
and
shl
aas
stc
and
ds
mov
xchg
and
ds
mov
fisub
(bad)
ds
and
(bad)
pop
inc
in
mov
sahf
xchg
dec
or
xchg
inc
or
xchg
push
or
xchg
ins
or
xchg
and
movs
xchg
jne
cli
xchg
pusha
or
xchg
outs
or
xchg
js
push
xchg
jb
adc
or
xchg
and
xor
inc
or
dec
or
xchg
and
in
xchg
inc
or
xchg
inc
or
xchg
and
ficom
outs
or
jne
and
xchg
or
and
inc
dec
and
inc
dec
and
inc
pop
and
inc
or
retf
inc
sub
loope
cs
inc
add
out
or
test
inc
pop
and
inc
and
test
inc
pop
and
inc
retf
and
or
and
inc
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
and
inc
jle
or
and
imul
and
cmp
fwait
and
or
fimul
cmp
sti
or
enter
fwait
or
xchg
xchg
pop
xchg
mov
or
xchg
mov
adc
mov
or
xchg
scas
or
xchg
mov
sbb
movs
or
xchg
pop
or
xchg
lods
or
xchg
jge
xor
xchg
data16
xchg
push
or
xchg
sbb
xchg
jno
xor
add
add
xchg
das
or
xchg
sub
or
xchg
and
inc
repnz
inc
shl
xchg
inc
sti
and
inc
in
jno
xchg
and
inc
cli
and
stc
and
inc
(bad)
and
inc
mul
popf
inc
mul
xor
and
(bad)
and
inc
retf
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
stos
xchg
and
stos
xchg
and
stos
xchg
and
stos
xchg
and
stos
xchg
and
cmps
repz
or
out
popa
or
push
fidiv
fisubr
or
stos
xchg
and
stos
xchg
and
stos
xchg
and
stos
xchg
and
stos
xchg
and
pop
xchg
fidiv
stos
xchg
and
xor
and
mov
dec
push
or
xchg
and
cwde
xchg
fdivp
test
xchg
fsubp
test
xchg
(bad)
test
add
dec
inc
jle
or
and
inc
and
inc
loopne
xchg
mov
int3
sbb
jg
jge
or
sbb
addr16
xchg
push
mov
mov
inc
mov
retf
inc
cwde
and
mov
mov
and
mov
push
and
mov
inc
and
mov
cwde
bound
jle
or
xchg
or
xchg
pushf
or
xchg
mov
mov
xchg
addr16
add
push
or
xchg
or
mov
xchg
jbe
mov
xchg
cmps
int
xchg
enter
push
or
xchg
sbb
mov
xchg
or
xchg
test
or
(bad)
or
xchg
loopne
mov
xchg
test
add
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
sbb
and
inc
push
and
push
and
inc
push
and
and
xchg
and
inc
push
and
inc
push
and
inc
push
and
sbb
and
fisub
inc
xchg
and
inc
xchg
and
shl
or
xchg
and
bound
fsubrp
stos
xchg
and
stos
xchg
and
fs
xlat
mov
add
and
stos
xchg
and
or
fisubr
push
ficomp
stos
xchg
and
in
fiadd
ret
ja
xchg
and
stos
xchg
and
dec
add
pop
sub
and
mov
fimul
xchg
and
stos
xchg
and
mov
fidiv
mov
and
stos
xchg
and
stos
xchg
and
stos
xchg
and
stos
xchg
and
stos
xchg
and
inc
cld
mov
mov
(bad)
out
retf
mov
mov
jp
iret
mov
pop
mov
mov
inc
mov
mov
mov
lahf
mov
(bad)
mov
mov
adc
ja
mov
outs
mov
mov
mov
mov
xchg
mov
mov
ins
mov
mov
addr16
pop
mov
xchg
push
jno
adc
mov
mov
addr16
mov
repnz
xchg
addr16
xchg
mov
ins
xchg
repnz
mov
addr16
mov
addr16
xchg
mov
addr16
call
sahf
jp
addr16
jp
scas
jp
addr16
mov
xor
ss
and
shl
pop
shl
xchg
shl
arpl
fimul
fimul
fisub
sbb
addr16
fisub
mov
xchg
and
inc
xchg
and
fidiv
and
aam
ficom
fidiv
fisub
fisubr
aad
ficomp
aad
fidiv
fiadd
addr16
aad
fidivr
aad
fisub
(bad)
fisub
faddp
aad
fimul
xor
fisub
and
add
pop
aad
fimul
fld
pop
stos
xchg
and
xchg
fsubrp
movs
push
fsubp
cld
add
and
sub
sub
jns
add
jno
dec
xor
ror
aas
xchg
jae
ins
out
sbb
fild
inc
out
or
fmul
mov
inc
mov
inc
mov
xchg
ror
loope
push
mov
inc
or
and
sbb
adc
inc
mov
inc
into
sub
inc
or
and
loop
jno
lds
fcom
inc
fisub
push
sub
inc
inc
sub
inc
dec
cmp
inc
sub
mov
and
inc
mov
xor
fwait
push
sbb
imul
push
bound
outs
jb
cs
jb
inc
or
(bad)
push
inc
clc
inc
test
int3
sbb
cmp
sbb
xchg
(bad)
call
repnz
or
cmp
pop
test
ret
mov
sbb
sti
movs
dec
sub
ins
or
xchg
pop
imul
repnz
pop
adc
ja
and
sbb
(bad)
icebp
adc
xor
cmp
and
repnz
or
enter
or
and
aam
(bad)
std
(bad)
and
fcomip
cmp
enter
xchg
cs
loopne
xor
cwde
in
jmp
lahf
pop
cli
inc
jbe
adc
jbe
jecxz
jle
cli
inc
lahf
push
fisttp
and
and
lds
(bad)
mov
dec
and
and
and
shl
inc
fisttp
and
inc
push
push
sti
inc
adc
jecxz
adc
shl
inc
rol
icebp
push
adc
lock
idiv
ins
and
sub
dec
add
not
add
inc
add
repnz
adc
clc
push
push
aas
imul
das
test
not
xchg
inc
fistp
xchg
mov
loopne
push
mov
(bad)
enter
test
int3
or
inc
loop
dec
cmps
aam
retf
inc
jmp
loop
or
jae
std
sti
push
pop
pop
loope
ins
or
push
dec
add
and
add
bound
pop
hlt
push
and
dec
out
xor
xor
ja
inc
sub
jbe
dec
test
pop
enter
lock
cli
inc
jle
cmps
inc
xor
cs
dec
loope
push
dec
in
and
and
push
inc
retf
jb
xor
inc
xlat
inc
jmp
and
dec
lahf
adc
dec
stos
or
push
inc
cmp
addr16
jb
sub
push
or
and
imul
imul
pop
xlat
push
dec
push
lods
push
sub
and
sub
xchg
inc
sub
xchg
and
(bad)
jle
es
enter
cmp
sbb
clc
call
std
out
lahf
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
call
or
in
mov
inc
xchg
fmul
adc
scas
retf
mov
or
xchg
xchg
xor
test
or
xchg
mov
imul
ror
add
ds
adc
(bad)
pusha
repz
sub
pop
rol
sub
loop
sub
out
pop
or
fbld
fdivr
ficom
ret
push
test
and
fimul
and
inc
push
pop
in
inc
lods
cs
and
aam
mov
and
dec
and
dec
inc
and
dec
pop
sub
dec
mov
inc
push
in
inc
and
and
and
inc
jne
in
inc
xor
hlt
push
inc
push
jecxz
icebp
inc
clc
dec
dec
je
(bad)
sbb
and
cli
shl
adc
mov
adc
push
or
push
inc
mov
dec
sbb
push
icebp
inc
icebp
and
cmp
(bad)
push
jmp
repnz
inc
out
lock
loope
clc
enter
icebp
inc
mov
jl
push
mov
loope
push
retf
(bad)
in
movs
leave
div
xor
inc
fwait
sub
repnz
icebp
dec
imul
test
imul
push
jno
icebp
addr16
out
pop
call
pop
add
inc
cs
inc
jmp
and
and
jle
inc
jle
inc
xor
jle
xor
mov
xor
and
and
pop
arpl
es
jg
xor
and
jg
std
push
jle
push
push
push
and
inc
lods
pop
jle
add
pop
mov
and
push
jnp
movs
and
inc
ins
es
inc
popa
and
dec
pop
inc
shl
inc
es
daa
mov
pop
daa
ret
inc
fbld
xor
stc
push
dec
xor
stc
xor
aaa
in
sub
in
add
xchg
psllw
shr
add
in
jmp
cli
les
lock
ret
out
adc
hlt
adc
stc
in
out
aam
shl
enter
sub
add
mov
scas
adc
stos
jg
clc
scas
inc
sbb
stc
mov
stc
jl
mov
pop
jno
shl
sub
jno
sub
inc
dec
sbb
inc
loop
(bad)
push
dec
test
hlt
push
clc
and
and
and
inc
and
dec
sbb
and
sti
dec
ds
ret
dec
xor
icebp
push
xchg
daa
sti
push
push
inc
pop
and
inc
rol
repnz
inc
ret
dec
cmp
inc
test
and
jecxz
or
inc
call
inc
ins
sbb
push
icebp
inc
in
and
jecxz
or
loope
inc
or
dec
cmp
push
inc
sti
loope
inc
push
dec
sbb
push
sub
inc
lock
int3
ds
in
lock
cld
fwait
xchg
in
or
fcomp
loope
jmp
mov
loope
fdivr
inc
scas
jmp
lock
leave
xchg
sbb
loopne
inc
sahf
mov
int3
inc
imul
int
call
cmc
push
ins
inc
int3
fs
sbb
jp
and
je
and
jp
sbb
mov
jp
xor
push
and
and
inc
mov
sbb
scas
sbb
and
mov
jne
inc
sub
and
cmp
or
and
fcomp
push
gs
pop
jb
and
adc
push
pushf
adc
sbb
stc
inc
and
and
and
add
add
push
ins
inc
xchg
cmp
sti
icebp
test
jno
xchg
call
repnz
pop
clc
imul
adc
adc
sub
inc
xor
sub
and
in
sbb
stc
xor
pop
xchg
adc
std
cmc
fcomp
ss
into
and
enter
xchg
loopne
jecxz
leave
sub
in
mov
shl
and
xchg
icebp
or
pushf
fidiv
in
lds
ret
sbb
inc
xchg
enter
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
xchg
enter
enter
enter
enter
retf
xchg
mov
add
ror
or
xlat
repz
dec
loope
addr16
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
push
jae
addr16
jae
addr16
enter
enter
leave
or
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
pushf
xchg
and
fwait
xchg
and
pushf
xchg
and
fwait
xchg
and
pushf
xchg
and
fwait
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jg
or
and
inc
jl
or
and
inc
jge
or
and
inc
jp
or
and
or
and
inc
js
or
and
inc
jns
or
and
inc
data16
inc
jp
or
and
inc
dec
and
inc
and
inc
jno
or
ret
or
ror
xchg
aam
inc
xchg
(bad)
or
lds
inc
xchg
(bad)
or
xlat
or
retf
xchg
clc
or
std
or
(bad)
inc
xchg
fimul
inc
xchg
fimul
inc
xchg
retf
xchg
jmp
or
popf
or
retf
xchg
or
xchg
int
inc
xchg
or
xchg
retf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
cmp
xchg
stc
or
cmp
xchg
std
or
sbb
xchg
int
inc
xchg
pop
add
xchg
(bad)
or
and
aas
xchg
and
xchg
and
aas
xchg
and
xchg
and
aas
xchg
and
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
inc
xchg
and
xchg
and
inc
xchg
and
xchg
and
inc
xchg
and
xchg
and
inc
xchg
and
xchg
and
inc
xchg
and
inc
xchg
and
xchg
and
inc
xchg
and
xchg
and
adc
or
and
jnp
and
jmp
or
and
xchg
xchg
and
xchg
push
and
cwde
xchg
and
xchg
xchg
and
xlat
fisub
out
fisub
out
popa
or
fisub
iret
fisub
(bad)
fisub
pop
fbld
pop
fbld
das
fbld
lods
xchg
and
lods
xchg
and
ins
xchg
and
lods
xchg
and
and
push
or
adc
or
adc
or
adc
or
movs
inc
inc
repnz
aas
inc
(bad)
movs
aaa
inc
xchg
daa
inc
xchg
pop
inc
mov
pop
inc
mov
test
mov
fild
movs
xlat
inc
xchg
movs
iret
inc
pop
mov
aas
inc
data16
das
inc
dec
mov
pop
inc
jp
pop
inc
inc
dec
inc
dec
inc
dec
inc
inc
inc
dec
inc
xchg
movs
test
inc
dec
inc
push
inc
dec
inc
xchg
mov
xchg
dec
and
xchg
js
add
push
in
xchg
js
add
fsubr
add
leave
or
enter
loopne
add
sub
sub
shr
add
shl
ins
add
cmp
xchg
or
add
lods
sub
xchg
lods
sub
xchg
dec
sub
xchg
and
xlat
and
and
xlat
and
and
xlat
and
and
xlat
and
xlat
and
xlat
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
xlat
and
xlat
and
and
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
dec
xor
or
and
lods
xchg
and
mov
push
or
and
lods
xchg
and
mov
push
or
and
lods
xchg
and
inc
sahf
test
inc
jle
or
and
inc
jle
or
test
inc
jle
or
and
inc
jle
or
and
inc
jg
or
and
inc
jle
or
and
inc
(bad)
(bad)
pop
inc
jle
or
and
inc
push
mov
test
test
inc
into
mov
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
clc
pop
dec
xchg
cmp
cmp
cmp
cmp
sbb
or
enter
sub
bound
call
sub
call
sub
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
inc
jmp
dec
mov
test
mov
pop
mov
lods
xchg
pusha
retf
fs
loope
push
inc
or
adc
sub
cmp
std
jge
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
xchg
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
clc
cmp
fdivr
dec
xchg
cmp
fcomp
dec
xchg
sbb
and
xchg
xchg
xor
inc
xchg
and
inc
mov
adc
add
arpl
add
arpl
add
arpl
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
stos
xchg
and
stos
xchg
and
stos
xchg
and
stos
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
lods
xchg
and
inc
jle
stos
and
scas
sbb
sub
and
and
push
es
inc
jle
or
gs
add
popa
dec
(bad)
xor
imul
add
pop
out
add
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
jle
or
and
inc
xchg
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
js
push
xchg
leave
or
inc
xchg
push
add
xchg
enter
scas
rcl
mov
dec
loopne
push
or
and
stc
push
fnsave
inc
xchg
and
ds
and
dec
add
xchg
and
inc
xchg
and
inc
xchg
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
xchg
and
inc
xchg
and
aas
xchg
and
addr16
aas
xchg
and
aas
xchg
and
xchg
and
fisttp
sar
and
aas
xchg
and
aas
xchg
and
ins
fisub
and
ins
fidiv
xchg
and
aas
xchg
and
aas
jb
jns
int3
and
stos
xchg
and
stos
xchg
and
stos
xchg
and
stos
xchg
and
sub
aaa
test
rol
fist
jl
dec
xchg
jle
jbe
adc
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
sbb
mov
dec
fmulp
retf
shl
sahf
xchg
and
pushf
xchg
and
pushf
xchg
and
pushf
xchg
and
dec
xchg
and
xchg
xchg
and
mov
or
or
bound
sbb
bound
inc
(bad)
mov
retf
inc
(bad)
mov
retf
inc
(bad)
mov
retf
inc
popa
ja
adc
scas
adc
mov
inc
repnz
retf
inc
repnz
dec
inc
repnz
dec
inc
repnz
daa
inc
mov
ficom
fsub
or
and
inc
pop
and
inc
jle
or
and
inc
and
push
dec
or
in
mov
xor
inc
push
mov
pop
and
ds
dec
inc
sbb
xor
push
pop
jnp
rcr
movs
iret
xor
sar
pop
jns
mov
jg
inc
mov
rcr
dec
popf
pop
cs
(bad)
mov
lods
add
gs
call
test
ja
imul
pusha
ds
xchg
aam
fdivrp
loope
pop
fdivrp
loop
xor
fdiv
lds
and
and
movs
shr
aaa
rcr
jb
inc
mov
mov
scas
cmp
mov
(bad)
fninit
ret
arpl
adc
sbb
push
sti
mov
aas
jns
ret
push
mov
jmp
jnp
mov
enter
sbb
inc
jg
xchg
jnp
enter
retf
or
aad
and
in
adc
cmc
add
xor
mov
xchg
mov
or
or
mov
or
mov
nop
(bad)
out
xchg
push
test
sbb
and
cmc
or
leave
mov
inc
xabort
cli
add
lods
call
dec
mov
or
lock
aam
xchg
cdq
mov
push
lock
mov
outs
(bad)
les
int
pop
int
retf
loopne
adc
fdivr
inc
js
mov
retf
mov
inc
mov
clc
jne
xchg
pop
cmc
add
adc
push
and
jmp
jmp
retf
and
mov
sbb
and
push
xchg
ret
jmp
lods
jp
fs
fnstcw
mov
mov
cmps
sbb
push
hlt
pop
jne
mov
inc
lahf
dec
and
add
sub
push
addr16
jbe
clc
pop
leave
jae
aaa
scas
mov
jo
inc
sahf
test
jnp
test
mov
adc
retf
jmp
mov
jmp
in
loop
iret
inc
dec
adc
dec
pop
and
pop
sbb
jbe
pop
adc
sub
push
mov
ficom
out
sar
neg
(bad)
retf
sub
outs
pushf
cmp
add
and
cwde
mov
outs
adc
xchg
xchg
pop
mov
xor
imul
and
adc
test
in
mov
xlat
mov
(bad)
jp
fist
std
mov
stc
into
pop
xor
cli
mov
fwait
sub
mov
pushf
cmps
ins
test
scas
add
aam
retf
ja
cmc
lods
test
or
jae
icebp
movs
test
or
dec
inc
rcl
imul
pop
imul
push
inc
lods
imul
ja
jmp
imul
xor
jmp
sar
pop
cld
aad
ins
add
mov
xchg
lods
fbstp
mov
movs
adc
retf
ror
push
or
mov
xor
push
xor
sub
std
call
sbb
inc
push
lock
popa
push
bound
xchg
dec
iret
add
sbb
xor
cmp
inc
mov
mov
or
daa
ret
popf
mov
jge
leave
xchg
out
inc
adc
test
xor
call
or
jecxz
in
cmc
mov
leave
pop
mov
hlt
mov
ja
cdq
xchg
mov
push
scas
sbb
mov
shl
mov
sti
(bad)
mov
jmp
cli
xor
sub
imul
cmp
cmp
iret
jns
xchg
test
adc
and
xchg
mov
pop
xchg
(bad)
test
into
jnp
scas
xor
xchg
sti
dec
arpl
mov
mov
xor
jne
or
adc
pop
xor
shl
inc
sbb
imul
lods
les
pop
mov
sbb
shl
push
dec
gs
mov
jmp
fs
pop
mov
dec
aaa
rcr
aaa
mov
cmp
or
mov
imul
ss
loope
dec
dec
or
imul
bound
in
ror
and
test
sub
(bad)
ss
aad
add
mov
clc
setns
int
test
jne
aad
jl
inc
loopne
cwde
push
push
(bad)
inc
pop
ds
popa
loop
or
movs
push
push
stos
mov
bound
dec
ret
xchg
in
out
push
rol
shr
jno
mov
popf
ins
pop
xchg
cmp
mov
cmps
sub
inc
shl
fwait
or
mov
and
cmove
push
lahf
add
je
jbe
cli
test
imul
or
(bad)
mov
jne
mov
and
xlat
mov
dec
ror
aam
pop
lds
mov
jle
scas
inc
add
sbb
xchg
dec
into
lods
out
mov
xchg
bound
movs
push
sub
cmc
shl
dec
leave
es
push
retf
ins
in
(bad)
repz
cmp
and
pop
mov
mov
mov
std
cmp
cmp
in
mov
cmp
aad
mov
push
ins
ins
movs
adc
push
pop
cdq
jle
adc
movs
mov
dec
cmps
jb
std
inc
mov
xchg
xchg
cmp
push
ror
leave
nop
imul
fs
(bad)
adc
inc
xchg
or
inc
ror
pop
jmp
(bad)
hlt
jmp
cmp
cmp
pop
into
ins
std
push
jle
inc
xchg
mov
out
stc
cmp
jns
push
mov
xchg
jecxz
std
adc
inc
dec
pop
ss
clc
aas
lods
lods
sub
pusha
xor
fcomi
shl
add
mov
push
aas
add
sbb
ret
add
pusha
rol
and
mov
mov
(bad)
sbb
xor
dec
fcmovne
enter
pop
dec
adc
jle
sbb
retf
sub
fcomp
out
add
clc
test
in
inc
jno
shr
call
cmp
out
mov
test
aad
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fdivr
sbb
or
adc
cli
fistp
add
(bad)
pop
push
or
ins
xchg
push
xchg
aad
cmp
out
rcl
aas
push
sub
gs
xchg
mov
cmps
push
jge
mov
fisttp
into
(bad)
jecxz
(bad)
int
rcr
xor
inc
sti
xchg
pop
aas
mov
or
xchg
daa
jno
call
stos
mov
xchg
mov
into
mov
xchg
jnp
imul
and
dec
aam
jge
jge
jns
add
inc
dec
std
stc
xchg
(bad)
enter
sub
and
les
and
call
aas
push
or
mov
shl
sub
(bad)
inc
jne
push
fadd
xchg
into
(bad)
stos
scas
push
aaa
or
hlt
cmp
lods
mov
mov
mov
cmp
and
out
ret
aaa
or
push
(bad)
in
and
jmp
mov
cdq
mov
or
or
xchg
jmp
pop
lock
imul
(bad)
pop
rol
loopne
stos
cmp
adc
add
jns
dec
adc
mov
inc
mov
sbb
pop
mov
jp
jo
add
jnp
sbb
(bad)
pop
dec
dec
pop
ror
lods
jno
hlt
cwde
lock
sbb
adc
imul
lods
enter
cld
out
mov
into
mov
xor
scas
in
inc
das
cdq
pop
sub
push
inc
sar
mov
js
int3
add
pop
es
mov
shl
and
movs
int
hlt
pop
add
cmps
pop
push
aad
push
ins
inc
xor
or
sahf
mov
nop
cld
cli
or
sbb
xchg
or
mov
ja
gs
popf
imul
in
sbb
(bad)
or
mov
xchg
daa
xor
div
in
xor
fistp
inc
cmp
sub
out
xchg
nop
outs
xor
ss
out
lahf
enter
push
jns
(bad)
or
outs
mov
lds
(bad)
pop
js
mov
jge
js
jmp
das
dec
(bad)
cmp
cmps
loope
fimul
mov
push
push
push
cs
repnz
sti
in
cmc
mov
lock
xor
mov
(bad)
mov
int
imul
push
mov
fst
inc
scas
sti
sbb
cmps
inc
dec
iret
pop
mov
pop
mov
mov
pop
cmp
shl
xchg
xchg
jnp
and
jne
in
xchg
fwait
mov
daa
call
jb
mov
xchg
lahf
call
sub
mov
ins
and
jo
pop
scas
out
mov
fs
fistp
repz
jns
dec
inc
mov
test
sub
mov
xchg
mov
pop
mov
ret
jmp
test
(bad)
call
popa
cmp
sbb
push
enter
shr
fucomip
cmp
pop
nop
push
jae
js
es
pop
aas
mov
cmp
adc
or
mov
pop
and
daa
movs
stc
mov
jmp
adc
mov
movs
movs
xchg
loope
add
(bad)
sbb
xchg
into
pop
sbb
and
loopne
int
ja
inc
xchg
fisttp
mov
xor
push
les
nop
mov
js
aam
movs
mov
xchg
mov
mov
in
daa
jg
mov
popf
into
adc
dec
or
stc
lods
mov
icebp
ja
adc
clc
xor
xor
clc
ja
push
jo
adc
mov
pop
adc
inc
pop
mov
test
in
or
xchg
or
hlt
cld
ins
jmp
les
xchg
pop
iret
mov
stos
cmp
sbb
iret
adc
js
movs
jmp
or
cmp
push
cmps
mov
rcr
push
ins
test
and
jmp
mov
in
stos
in
ja
fld
inc
(bad)
cmps
push
(bad)
jge
ds
imul
and
cmps
cwde
pop
inc
imul
dec
dec
aaa
xor
ja
pusha
jl
rcl
jo
popa
inc
xchg
pop
sbb
mov
in
sti
and
and
dec
xchg
stos
cdq
addr16
adc
es
int
adc
add
(bad)
icebp
loope
mov
dec
out
imul
ins
in
in
aam
clc
xchg
xor
clc
adc
adc
sbb
movs
es
out
jp
stos
dec
loopne
sahf
lds
pop
cmp
and
cld
int
test
sub
movs
ror
mov
dec
cld
pop
(bad)
lods
repz
jae
mov
lods
int
inc
jl
or
jp
es
mov
mov
inc
repnz
ja
xor
pusha
(bad)
jnp
mov
add
inc
arpl
out
mov
in
popf
aaa
or
jns
jnp
sbb
sbb
in
sub
fwait
jo
dec
stos
shl
cld
sbb
mov
je
lock
xchg
xor
jnp
pop
movs
ret
cld
clc
cmp
cmp
dec
pop
stos
xor
mov
cli
data16
bnd
adc
adc
mov
das
clc
adc
aaa
test
xor
outs
mov
pop
cmps
sub
pop
ficom
fadd
test
(bad)
mov
and
and
ins
ret
jnp
jle
nop
ins
fidiv
pop
cmps
add
and
mov
pop
xchg
xchg
cmp
push
test
(bad)
std
push
jbe
inc
in
dec
pop
inc
jnp
scas
mov
sub
pusha
pop
fistp
lods
popa
pop
add
movs
test
lods
cmp
retf
cmp
xchg
inc
jno
(bad)
movs
fldcw
xchg
jg
in
lods
push
mov
in
test
out
movs
xor
rcl
(bad)
int3
stc
pop
mov
pop
cmp
sub
push
and
push
(bad)
mov
or
sahf
mov
dec
pop
push
sub
imul
pop
mov
stos
xchg
es
sub
cdq
and
lea
out
cmp
hlt
push
sub
icebp
adc
jno
lods
loop
dec
xchg
sbb
repz
mov
jne
lahf
dec
and
and
fmul
sbb
std
mov
sbb
std
arpl
inc
xor
out
shl
mov
push
pop
loop
dec
pop
retf
das
(bad)
loopne
in
gs
mov
mov
jmp
cs
loopne
fstp
fst
xlat
xor
leave
add
ret
pop
call
adc
sti
out
and
sahf
xchg
inc
mov
ret
or
sbb
inc
inc
gs
push
pop
jb
xchg
pop
jmp
cmps
cmp
call
out
call
neg
xor
aaa
test
or
sub
mov
adc
fmul
fisttp
fcmovnb
add
jl
mov
inc
push
iret
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
outs
xor
or
ds
mov
es
push
retf
pusha
add
xchg
jbe
bound
mov
and
xchg
and
or
(bad)
pop
call
sub
and
pop
out
mov
sbb
outs
inc
lock
cmp
cmc
(bad)
mov
fcmovnb
ffree
int
sub
cmp
xor
mov
int3
pop
inc
clc
loopne
fidivr
mov
popa
sbb
or
fisubr
cmp
jmp
lods
out
rol
mov
pop
cmp
xor
mov
ret
imul
jmp
adc
adc
sar
xor
xlat
dec
push
sub
dec
fwait
mov
neg
inc
or
cmp
mov
xchg
mov
pop
sahf
stos
xchg
mov
mov
lea
or
add
fld
jmp
jmp
shl
out
add
mov
add
xchg
hlt
int3
pop
inc
rcl
or
retf
sub
or
push
mov
cmp
cmps
sbb
cdq
add
push
or
out
cmp
pop
pop
hlt
or
adc
lock
ret
mov
sub
inc
ret
cs
cmp
movs
inc
(bad)
fnsave
arpl
call
imul
repz
or
cmps
(bad)
pop
add
aaa
inc
jo
push
and
(bad)
and
mov
sar
mov
stc
fst
(bad)
gs
dec
add
call
sub
mov
in
hlt
ret
push
xlat
adc
imul
mov
add
ja
(bad)
or
mov
jl
dec
test
jle
shl
xchg
repz
pop
inc
or
in
(bad)
hlt
ss
cmp
sub
push
pop
in
jp
xchg
or
and
enter
mov
dec
or
xor
aaa
call
xchg
cmp
mov
cs
xchg
and
out
aad
jno
mov
cmp
inc
cmp
shl
in
xchg
loope
mov
and
sbb
rol
push
xor
fsubr
or
sub
retf
movs
mov
or
push
es
sub
sbb
dec
jge
pop
cmp
in
retf
stos
dec
call
ss
(bad)
mov
inc
sbb
inc
pop
add
into
aam
lods
mov
and
push
adc
out
mov
xchg
repz
cmp
sub
ret
adc
and
aam
push
add
xchg
jmp
or
lea
add
lods
adc
popf
adc
mov
push
and
ss
pushf
add
aad
shl
mov
xchg
add
scas
fwait
stos
(bad)
sbb
mov
adc
mov
adc
inc
lahf
or
(bad)
cmps
push
test
adc
inc
enter
aam
outs
out
xor
fs
jge
cld
sbb
loope
cwde
mov
cmp
scas
jge
nop
das
jno
cmp
je
or
(bad)
out
mov
or
(bad)
xchg
mov
outs
leave
test
cmps
lahf
xchg
dec
sti
mov
in
movs
jne
xchg
or
xor
int
scas
inc
inc
addr16
jno
push
pop
fdivr
in
add
pop
mov
and
dec
sub
pop
inc
mov
fs
sub
cmp
loop
and
mov
sub
loop
fs
arpl
push
arpl
or
out
inc
sar
jle
jl
jl
xchg
mov
sub
nop
mov
adc
lahf
sbb
fidiv
add
jae
addr16
inc
mov
lds
sbb
fisub
sbb
stos
push
test
jp
inc
jbe
ret
push
push
or
xchg
cmp
pop
stc
pop
lods
xchg
xchg
es
adc
push
push
adc
cmp
cmp
xor
pop
jp
call
dec
and
mov
cld
int
sbb
lock
les
push
cwde
mov
cld
add
call
pop
and
lahf
mov
jle
out
sti
push
into
sub
mov
int
or
or
dec
pop
loop
push
push
inc
inc
iret
inc
xor
sbb
in
cmp
and
xchg
inc
or
clc
call
adc
dec
push
add
test
out
sbb
add
pop
pop
(bad)
xor
arpl
push
push
mov
mov
jmp
lock
push
dec
scas
stos
movs
pop
push
or
pop
mov
xor
or
pop
scas
ja
loope
xor
jb
or
out
pop
and
jns
dec
adc
inc
sbb
jns
or
std
and
push
test
dec
push
dec
push
or
sbb
call
out
(bad)
push
or
aaa
mov
mov
sbb
jne
jns
cld
adc
cmp
inc
outs
inc
sub
ja
xchg
repz
clc
icebp
push
icebp
inc
xchg
outs
xchg
adc
shr
xchg
movs
mov
push
fistp
push
and
jle
xchg
sub
push
popa
in
pop
adc
or
sbb
movs
push
cmp
add
mov
mov
add
sbb
or
push
sub
daa
lds
xchg
lock
jl
jnp
sub
pop
pop
xchg
jl
and
pop
pop
xor
push
add
dec
mov
out
jg
cmp
aam
sbb
sub
sbb
stos
cmp
lahf
ja
rcl
lea
rcr
push
or
out
stos
enter
or
jle
pop
jmp
outs
xor
lods
enter
pusha
xchg
outs
cmc
test
adc
cld
add
dec
into
sbb
pop
jbe
and
mov
cli
add
jae
loopne
in
in
shr
jl
inc
test
nop
push
dec
fucom
out
enter
xchg
scas
pop
lods
dec
ss
and
mov
xor
mov
out
cmc
gs
xor
xor
lahf
jno
pop
cmps
push
pushf
(bad)
mov
pop
leave
movs
jp
xor
js
mov
fucomip
push
sub
sub
call
hlt
call
pushf
add
es
jbe
imul
(bad)
rol
lock
int
and
(bad)
mov
jge
ss
mov
je
rcr
xor
mov
adc
mov
jae
push
arpl
sahf
sbb
in
dec
sbb
push
ss
(bad)
adc
mov
popf
mov
mov
push
std
xor
mov
cs
adc
or
jnp
or
enter
push
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
mov
inc
imul
inc
mov
ret
ja
xor
and
popf
adc
mov
pop
mov
retf
or
jne
adc
dec
cmp
fdivp
xchg
push
sub
ja
cmp
rol
mov
test
xchg
inc
mov
mov
fwait
jecxz
fsub
fsub
jno
aad
mov
push
jns
inc
jbe
std
sbb
dec
push
int
jmp
mov
addr16
imul
xchg
loopne
jbe
push
bound
or
pop
(bad)
das
stc
inc
cmps
mov
and
sti
pop
cmp
adc
cmp
cmc
xchg
cmc
outs
pop
mov
cmp
mov
sbb
or
and
sbb
xlat
adc
test
dec
dec
xchg
cmp
cmp
clc
aad
fmul
push
arpl
push
mov
xlat
and
call
(bad)
and
cmps
sbb
pop
fsincos
scas
out
jge
mov
or
mov
add
les
cld
pop
jns
aad
xor
(bad)
arpl
add
outs
dec
popa
mov
inc
inc
dec
xor
fcomip
pop
mov
in
mov
cmp
movs
sub
pop
js
test
pop
pop
ins
xor
daa
push
call
sub
mov
lds
cmp
mov
xchg
bound
xchg
(bad)
out
add
xor
and
sub
xor
push
push
jns
test
popf
or
jmp
inc
xor
push
sbb
or
jbe
mov
cmps
lods
cmps
and
xlat
push
xchg
pushf
jp
push
push
jb
xor
lods
(bad)
sub
out
adc
push
les
or
inc
push
pop
xor
sahf
push
das
mov
stc
push
xchg
dec
push
mov
inc
jl
(bad)
push
mov
fld
mov
add
dec
pop
mov
dec
dec
cmps
add
push
cmp
cmp
lds
nop
mov
xor
dec
add
jae
imul
in
call
mov
pop
push
sbb
sub
lods
jnp
cmp
sbb
cmp
pop
sub
ins
add
pop
stc
jbe
dec
out
cli
or
and
iret
xchg
inc
lock
push
cmp
push
or
sub
outs
sbb
icebp
(bad)
dec
(bad)
aad
movs
xor
cs
dec
fdiv
(bad)
(bad)
cmp
fsub
jne
rcl
call
out
xchg
scas
jmp
loope
mov
mov
pop
jecxz
xor
(bad)
fnstcw
and
test
add
and
xor
xor
jg
mov
mov
enter
std
xchg
movs
dec
shr
jl
hlt
sbb
out
pop
xchg
ficomp
jns
xchg
jge
and
loope
push
inc
jge
call
aas
push
push
xchg
mov
xor
jns
add
int
mov
mov
pop
inc
stc
jno
pop
push
push
adc
push
repnz
cdq
inc
imul
xlat
cmp
mov
xchg
pop
or
fisttp
cmc
pop
ret
into
sahf
fwait
add
call
(bad)
jo
pop
pop
sbb
dec
cmp
stc
mov
push
pop
jg
xor
call
inc
xchg
dec
mov
push
ss
ins
push
retf
xchg
add
sub
cmp
(bad)
xchg
adc
ss
outs
and
jno
dec
jmp
data16
push
and
jns
mov
push
xchg
stos
jne
or
ficom
and
inc
pop
in
push
js
add
in
mov
sbb
push
stos
inc
and
ja
je
int
pop
jne
popf
xchg
lods
mov
fild
out
leave
sbb
push
pop
stc
(bad)
and
jmp
xor
(bad)
pop
stos
and
in
sbb
enter
outs
in
out
push
pushf
push
sbb
idiv
out
mov
es
ret
jbe
sbb
and
inc
mov
cmp
pop
(bad)
stos
fimul
add
dec
nop
enter
xor
inc
mov
sbb
fistp
bswap
cmc
rcl
add
les
cmp
aas
div
into
push
inc
sub
lock
ins
jmp
inc
sbb
cmc
les
mov
dec
push
daa
rol
aam
mov
sbb
stos
dec
sahf
push
call
nop
and
lock
in
(bad)
push
or
ret
fiadd
das
data16
or
add
and
mov
hlt
into
adc
mov
cdq
mov
fnstcw
mov
mov
jp
inc
mov
add
sub
or
inc
movs
jae
fwait
(bad)
pop
push
mov
popa
arpl
mov
cli
mov
xchg
stos
xchg
adc
jb
add
push
retf
mov
lods
and
jns
sbb
int
xchg
dec
lods
mov
inc
out
dec
ror
xchg
sahf
sbb
xchg
stos
mov
xchg
xor
jmp
pop
lods
push
cmp
or
popa
and
ror
inc
int3
sub
(bad)
ror
pop
push
in
inc
mov
cmp
inc
mov
pop
mov
fst
gs
scas
mov
fcom
les
jnp
dec
jmp
test
sub
adc
push
scas
leave
xchg
sar
mov
adc
scas
or
xchg
jp
fwait
jnp
xor
popa
sbb
aam
ja
add
leave
popf
xchg
xor
and
cli
cmp
dec
xor
push
fnstenv
int3
dec
dec
(bad)
push
aad
fs
jbe
iret
jns
pop
bound
loop
les
mov
and
(bad)
cmps
aas
pop
retf
retf
push
mov
lock
inc
pop
push
ror
cmp
clc
pop
and
mov
lahf
and
dec
adc
aaa
push
mov
dec
xor
push
movs
xchg
int
in
cld
scas
adc
repz
pop
and
cmps
mov
inc
dec
clc
clc
(bad)
jle
pop
jne
or
iret
fnsave
xchg
mov
popa
push
sbb
dec
or
test
xchg
and
jb
jle
xor
sbb
xchg
mov
sbb
and
pop
mov
into
sbb
retf
push
adc
mov
mov
push
test
stc
fsubr
and
push
ins
dec
int
(bad)
fnstcw
pop
aad
mov
mov
(bad)
mov
(bad)
stos
cmp
cli
sbb
in
dec
(bad)
ficom
xor
add
adc
push
push
jecxz
and
iret
not
clc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rcl
add
(bad)
cdq
pop
test
jo
out
jns
leave
idiv
or
out
push
mov
sub
stos
ins
dec
jae
loop
movs
mov
fnstsw
arpl
cmps
lock
cmps
dec
jbe
test
out
xchg
fdivr
test
sub
and
in
or
sub
in
adc
mov
dec
add
fld
stc
add
or
je
cmp
xchg
and
mov
es
xchg
jno
out
push
adc
xchg
out
jecxz
push
inc
mov
(bad)
arpl
xchg
sbb
cli
adc
call
cdq
mov
or
fs
lock
je
aam
fwait
lds
iret
mov
xor
xchg
and
xchg
xor
fsub
xchg
mov
jmp
adc
adc
cld
push
xchg
je
mov
es
mov
cmp
call
aaa
push
cld
call
cld
xor
xchg
fdivr
scas
pop
(bad)
out
sub
mov
or
dec
mov
cmp
sub
not
loopne
shl
push
cmc
mov
jne
push
pop
js
dec
push
mov
aaa
in
xchg
das
pusha
push
mov
fisub
out
sti
and
retf
test
fistp
or
sbb
sub
es
xchg
data16
xchg
jp
adc
sub
shl
cli
push
mov
or
pop
mov
(bad)
call
and
fs
xor
loope
imul
shl
mov
sub
cmps
inc
out
out
int
mov
movs
dec
out
fwait
pop
jmp
mov
sub
stos
test
in
sbb
cmp
push
test
mov
jmp
sbb
jl
sub
ret
xor
popf
mov
or
sbb
fwait
cmova
sti
movs
daa
stos
add
xlat
ss
(bad)
pop
scas
cwde
(bad)
call
test
cmp
cmc
js
jno
nop
sub
mov
fisub
dec
(bad)
sbb
mov
cmc
pop
(bad)
xor
pop
lea
sar
ja
mov
cmp
out
inc
jne
push
cmp
mov
pop
addr16
ja
cmps
hlt
int
cmp
mov
pop
and
dec
ins
mov
sub
sub
and
aam
add
jne
pop
data16
xor
sub
push
inc
xchg
push
cs
xchg
or
(bad)
jae
dec
ror
mov
xchg
add
xchg
adc
mov
pop
cmc
les
inc
add
cwde
icebp
repz
inc
les
mov
or
or
mov
stos
xchg
lods
push
fistp
mov
and
adc
push
enter
fistp
bound
imul
ins
xchg
es
int
mov
ds
es
test
sub
xchg
dec
hlt
lahf
data16
sub
mov
sbb
aam
aam
movs
sbb
ffreep
cmp
clc
adc
repnz
(bad)
stc
push
sbb
add
rol
cmp
(bad)
mov
ins
in
movs
fisttp
ror
xlat
neg
std
stos
jp
mov
loopne
gs
or
aam
js
aam
test
xchg
ins
adc
inc
add
mov
(bad)
push
xchg
fidiv
(bad)
jmp
pushf
cdq
aam
fs
jno
lea
shl
or
xchg
xchg
pop
mov
ret
adc
inc
repnz
push
cmp
dec
sub
icebp
mov
and
popa
and
fcom
add
push
sbb
push
cwde
mov
pop
call
div
push
jno
mov
movs
cmp
sub
cld
sub
sbb
add
(bad)
jns
pop
jg
or
cmp
push
aaa
sbb
loope
inc
lock
stos
and
fist
mov
jl
or
js
sub
xadd
adc
fild
aas
test
out
out
inc
and
cmp
dec
pop
cli
ret
pop
sub
rol
inc
repz
mov
int3
in
cli
loope
scas
mov
ss
push
pop
loope
lea
inc
xor
mov
adc
test
outs
jle
popa
lahf
jne
dec
iret
rcr
fwait
or
test
adc
sbb
sbb
inc
lock
icebp
xchg
mov
into
adc
arpl
or
test
push
cli
in
dec
sub
cmps
dec
ins
jecxz
cmp
push
dec
adc
pop
and
dec
mov
sub
test
jmp
setb
inc
sahf
rcr
dec
pop
pop
mov
aaa
add
sub
mov
cmp
xor
jl
mov
xchg
test
fnstsw
in
jae
imul
jnp
mov
std
pop
mov
popf
jmp
popf
sahf
mov
gs
ss
les
aas
popa
xchg
inc
dec
aaa
loope
mov
xor
mov
pop
push
int3
cs
out
ficomp
ss
mov
test
cmps
jno
dec
xchg
or
pop
inc
xchg
xchg
and
(bad)
cmps
sbb
and
mov
add
outs
mov
es
jge
test
sbb
sub
mov
in
ja
mov
mov
jmp
or
cmc
cmps
in
mov
xchg
jae
clc
lahf
(bad)
in
cmp
cmps
sub
cli
inc
std
cli
lods
test
xor
cmp
xchg
retf
pusha
ins
jns
push
jge
out
retf
ret
mov
adc
adc
std
js
outs
mov
or
mov
mov
bound
jnp
jle
and
mov
add
mov
inc
out
dec
pop
bound
call
movs
retf
cwde
sub
sbb
inc
lods
pop
pop
xchg
out
out
neg
imul
or
js
mov
idiv
xchg
or
aad
gs
fidivr
mov
xchg
lods
mov
dec
arpl
mov
cmp
adc
fisttp
cmp
mov
rcr
ja
dec
dec
xchg
std
retf
push
xlat
out
pop
cwde
dec
cmps
xchg
add
xchg
jno
cmp
dec
shr
fwait
sub
or
loopne
loope
ja
or
and
jb
in
mov
js
inc
gs
jge
retf
xchg
sbb
jns
mov
or
inc
ds
mov
add
cmps
(bad)
outs
jb
outs
dec
pop
lock
ins
and
jnp
pop
add
stc
add
sbb
dec
mov
ins
aam
xor
xor
push
ss
lahf
into
push
lock
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
mov
icebp
stc
add
arpl
cmps
inc
adc
dec
es
add
and
dec
sahf
mov
int3
sub
sbb
bound
xchg
shl
pop
dec
stos
add
push
or
neg
pop
mov
mov
cmc
sahf
adc
pop
mov
fbld
xchg
pop
xor
scas
test
sbb
inc
into
fs
imul
push
ss
mov
mov
mov
int3
je
xchg
xor
or
ins
mov
jno
inc
ret
ficomp
sub
or
cmp
int3
imul
or
in
popf
cmp
pushf
mov
ja
push
repnz
lock
push
jbe
ss
cwde
lea
pop
lock
mov
ret
aaa
mov
fisttp
es
or
mov
xor
scas
leave
(bad)
mov
mov
pop
sub
pop
pushf
sbb
movs
pop
retf
add
mov
sbb
pop
dec
les
ficomp
sub
mov
in
sub
inc
push
pop
push
cmp
push
cmp
sub
scas
mov
add
mov
pop
push
mov
dec
push
jns
repnz
or
inc
pop
popf
outs
pushf
sub
aaa
add
jge
call
fwait
(bad)
inc
inc
xor
add
jnp
adc
add
add
fidiv
ds
and
pop
adc
aaa
mov
inc
(bad)
pop
sub
xor
shl
and
push
in
inc
out
stos
(bad)
xor
jge
fstp
ret
mov
ja
xchg
xor
das
test
out
loop
scas
test
arpl
push
xor
and
sbb
xchg
xor
jg
jb
or
add
in
imul
outs
cmps
fistp
sub
arpl
pop
and
neg
xchg
fnstcw
push
aaa
pushf
jns
adc
and
icebp
imul
daa
jno
or
ds
jl
mov
mov
push
ss
cdq
push
inc
and
lods
sbb
cs
mov
(bad)
pushf
stos
push
push
sar
mov
mov
into
mov
(bad)
jnp
(bad)
lahf
shl
pop
pop
es
push
adc
push
or
mov
dec
repnz
xor
cli
mov
pop
ins
xchg
neg
jb
xchg
shr
push
dec
xchg
jno
repnz
imul
loope
aam
aad
xor
out
sub
dec
ret
or
cli
outs
xchg
cmps
pop
add
fidivr
jp
or
ret
pop
inc
xchg
mov
or
fs
jp
stos
fstp
in
daa
cmp
sub
out
ds
daa
shl
push
and
dec
rol
retf
xchg
add
or
hlt
mov
fsubrp
push
loopne
retf
stos
cmps
or
mov
add
jp
pop
mov
dec
push
lock
push
(bad)
popa
cmp
jmp
fiadd
mov
mov
lfence
inc
push
movs
push
fdiv
and
pop
pop
call
mov
push
mov
sbb
data16
test
xchg
pop
fwait
pusha
inc
push
rcl
add
push
add
mov
dec
jbe
sub
in
mov
mov
es
pushf
inc
mov
sti
pop
mov
fs
adc
add
pop
jae
in
ja
pop
lds
xor
inc
movs
ja
mov
jecxz
dec
push
std
mov
out
aaa
dec
cmp
sbb
aas
push
fld
ret
and
mov
aad
mov
inc
xor
lods
cmp
ficomp
ror
inc
cmps
or
add
mov
adc
movs
sbb
test
push
(bad)
out
fisub
stos
add
dec
inc
loope
or
enter
shr
aad
jle
or
call
je
and
fldcw
mov
push
inc
leave
(bad)
cdq
push
or
jl
pop
fiadd
ror
mov
or
mov
(bad)
mov
adc
xchg
mov
int
ffree
and
mov
push
das
jmp
lods
push
push
sub
xchg
clc
fsub
inc
jge
data16
push
jbe
jae
cmps
adc
in
xchg
xor
std
and
ja
in
dec
xchg
or
add
lods
inc
cli
and
pop
les
pushf
pop
or
add
cli
pop
inc
mov
add
aaa
or
push
push
mov
aaa
mov
arpl
cmps
fdivp
cmp
sub
pop
cmp
sbb
idiv
jge
inc
addr16
das
jmp
and
jnp
xor
aam
daa
jbe
out
pop
mov
mov
dec
movs
cmp
shl
push
jl
gs
aad
or
frstor
sub
in
cmc
lea
cmp
js
ja
stos
cs
xchg
pop
inc
icebp
push
mov
clc
mov
xchg
loop
gs
xor
push
lea
hlt
jle
shl
xor
pop
fld
cwde
pushf
fchs
dec
test
and
and
add
jbe
adc
addr16
ss
fdiv
int
cld
ror
fcmovnb
loope
test
jae
jmp
aad
mov
shr
loop
popa
sbb
movs
sahf
adc
add
das
pop
and
dec
aas
jge
(bad)
mov
mov
jbe
sbb
adc
nop
mov
das
pop
frstor
or
xor
and
in
inc
repz
ret
push
xor
sar
pop
retf
ds
jb
or
aaa
aaa
add
adc
mov
cdq
jns
adc
stc
pop
mov
cmp
xchg
mov
mov
inc
push
push
mov
mov
jmp
jno
xchg
mov
and
mov
test
mov
sbb
nop
ret
out
dec
push
or
fs
out
repnz
cs
ror
inc
sbb
das
lods
out
je
lea
in
pop
sub
or
mov
or
ret
sbb
or
cmps
popa
sub
pop
pushf
outs
inc
cwde
js
call
int3
jecxz
(bad)
and
fisttp
(bad)
dec
call
and
aam
test
call
push
pushf
lods
inc
out
cmp
jl
xchg
pop
(bad)
adc
dec
xchg
lock
mov
add
stc
adc
cmc
(bad)
dec
pop
pusha
gs
fist
repz
mov
lock
not
out
and
imul
mov
mov
push
stc
sub
popf
daa
lods
fidivr
push
shr
or
jb
add
sar
sub
cmc
push
jmp
cmc
jne
gs
div
xchg
movs
mov
and
and
ror
popa
in
fwait
sahf
mov
neg
mov
pusha
daa
pusha
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ins
fs
adc
ds
jnp
gs
mov
mov
or
je
pop
pop
add
fwait
and
movs
jle
retf
daa
icebp
in
aad
mov
ins
inc
add
shl
pusha
out
movs
in
jmp
inc
iret
out
test
and
jmp
or
popf
pop
mov
dec
fs
dec
mov
mov
inc
movs
mov
mov
adc
mov
ds
and
dec
outs
push
and
xchg
lea
out
dec
in
shl
lahf
pop
sub
inc
rcr
push
xor
sbb
jmp
ins
jecxz
pop
pop
pop
les
push
fisttp
out
mov
mov
arpl
mov
dec
cmp
ins
test
sub
gs
fild
dec
push
mov
sar
sbb
or
shr
push
fwait
or
ret
push
xor
pop
aaa
xchg
sub
sub
test
or
add
fld
inc
inc
add
cmps
addr16
not
cmc
jmp
out
sub
inc
mov
popa
adc
pop
fs
(bad)
jmp
sbb
sub
test
loop
xor
push
push
or
test
mov
nop
clc
add
adc
retf
cdq
xchg
mov
gs
daa
adc
or
add
inc
or
add
cmps
popf
and
div
shl
(bad)
ins
push
add
sub
mov
jl
lods
xor
xchg
mov
rol
hlt
sub
in
(bad)
sti
int
imul
mov
call
xor
movs
inc
dec
jne
rcr
adc
inc
stos
push
or
shr
hlt
add
push
frstor
xchg
fs
xor
jb
mov
pusha
add
scas
pop
fidiv
and
pop
mov
retf
out
xchg
pop
or
cdq
test
and
retf
and
jo
mov
push
mov
inc
daa
lock
jmp
mov
bound
sti
scas
add
ins
stos
mov
enter
stos
out
movs
mov
daa
jb
imul
xchg
inc
movs
rcr
sbb
dec
repz
cmc
or
pop
lods
into
and
outs
jne
inc
inc
out
and
retf
loope
int
add
nop
or
and
pop
retf
lahf
lahf
lea
sahf
test
cmc
adc
inc
mov
jmp
stos
jnp
mov
lea
mov
and
push
mov
fsub
outs
jmp
(bad)
mov
pop
push
jle
movs
push
test
cld
dec
jo
push
int
nop
sub
inc
(bad)
add
cld
cmp
add
dec
ret
out
(bad)
daa
xor
cli
add
cmp
in
xor
jl
movs
cli
inc
into
ret
xor
sub
dec
push
mov
pop
aad
popf
popa
aas
loope
cmp
mov
jb
and
push
dec
test
or
jbe
cmp
dec
das
arpl
xchg
ret
inc
fs
sbb
leave
pop
and
jns
or
in
and
dec
mov
(bad)
fdiv
in
inc
inc
add
push
test
in
xor
fs
inc
or
clc
xchg
imul
ret
sar
xchg
fbld
(bad)
inc
xchg
mov
rcr
outs
test
push
lock
cdq
mov
dec
add
clc
sub
mov
sbb
jae
inc
mov
mov
add
pop
lds
pop
sbb
ficom
or
sub
jecxz
out
jge
push
sbb
test
xchg
test
xor
jmp
mov
int
retf
jnp
adc
retf
(bad)
inc
fs
fs
aad
cli
test
scas
arpl
aas
hlt
aad
add
push
mov
push
jb
inc
lods
lahf
dec
(bad)
cmc
push
xchg
repz
rcr
cld
mov
mov
into
popa
jo
push
mov
add
aas
sbb
loope
sbb
in
(bad)
aad
sbb
lock
hlt
into
popf
add
sbb
inc
int3
iret
fisttp
test
or
movs
(bad)
cdq
(bad)
mov
leave
(bad)
jmp
push
je
sti
bound
mov
fadd
cmp
xchg
dec
stos
jne
std
stos
repz
mov
test
(bad)
loope
leave
out
mov
jne
jmp
(bad)
mov
pop
pop
sub
hlt
aad
mov
clc
arpl
jns
cli
imul
ds
ja
js
sub
int
fdiv
pusha
mov
sahf
and
lahf
cmps
fdiv
add
imul
in
jno
jbe
and
rcl
mov
scas
jo
cmps
pop
inc
push
lds
mov
hlt
inc
push
cwde
out
cs
or
adc
push
iret
push
push
and
dec
aas
cmp
xor
mov
push
inc
jg
mov
mov
je
loopne
sahf
sub
repz
mov
ret
ja
jecxz
test
cdq
idiv
mov
mov
push
push
and
lds
pop
sbb
cmps
int
popf
daa
jo
jne
aaa
mov
mov
pop
into
call
xchg
adc
movs
movs
and
or
fincstp
stos
enter
mov
jmp
xor
jns
lahf
test
inc
call
aam
mov
icebp
mov
push
pop
sub
loop
mov
jl
xchg
mov
inc
imul
jge
test
xchg
call
in
adc
pop
xchg
sbb
mov
movs
dec
cli
in
sbb
xchg
stos
cmp
cmp
jle
or
sbb
or
in
bound
xor
test
and
test
scas
daa
addr16
add
xor
xchg
test
adc
push
mov
mov
add
nop
adc
imul
addr16
fstp
mov
inc
fdivr
retf
and
and
xor
inc
xchg
es
(bad)
in
hlt
jecxz
das
out
inc
sbb
dec
inc
push
movs
pop
popf
inc
rcl
fs
dec
imul
loop
gs
pop
xor
jne
rcl
push
loopne
pop
adc
outs
xchg
lss
dec
retf
int3
(bad)
pop
mov
jns
push
mov
push
je
add
mov
jge
in
daa
hlt
scas
pop
ret
inc
adc
add
aam
retf
imul
pop
int3
cmps
daa
xchg
loop
(bad)
nop
add
pop
jb
cmc
je
repnz
dec
mov
pop
in
sub
movs
jne
xchg
inc
xchg
dec
push
jl
dec
xchg
xor
ss
push
xor
adc
inc
adc
push
pop
pop
dec
sbb
mov
mov
mov
sub
xor
or
adc
faddp
push
add
jb
shr
inc
fisub
adc
dec
adc
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
xor
and
mov
jae
sub
jle
wrmsr
test
pop
(bad)
mov
and
mov
or
sahf
les
add
sti
or
(bad)
data16
js
test
push
dec
mov
repnz
jb
stos
jg
std
mov
sub
pop
pop
hlt
xchg
pop
add
add
adc
retf
test
fwait
push
add
push
in
cmp
cmp
repz
jmp
xor
cmp
xlat
sti
mov
xor
fdiv
mov
fwait
stc
mov
push
push
mul
leave
pop
xchg
adc
fld
sub
dec
and
dec
(bad)
jle
cmp
xor
mov
shr
je
in
gs
jne
xchg
fidiv
dec
adc
cmp
or
or
mov
jno
aam
adc
retf
push
mov
pop
aam
ins
dec
hlt
jp
push
pop
adc
leave
rcl
add
imul
jns
stos
sub
cld
pop
mov
xchg
and
(bad)
cmps
das
ss
adc
stc
outs
aad
xor
sub
shl
stos
out
stc
(bad)
(bad)
test
aaa
int
fidivr
mov
and
scas
jne
jnp
je
ficom
mov
cmps
xor
fcomip
mov
xchg
pop
xchg
lahf
cmp
jne
ds
ret
inc
pop
push
scas
xchg
add
mov
pop
jmp
pop
push
add
sbb
xchg
mov
or
xchg
retf
test
(bad)
fnstcw
cmp
push
scas
xor
mov
mov
shl
lods
jo
ret
hlt
gs
mov
shl
stc
mov
mov
push
enter
sbb
pop
or
mov
xlat
ja
(bad)
icebp
mov
cmp
mov
mov
push
(bad)
jb
push
shr
jmp
push
adc
mov
fldcw
inc
(bad)
mov
cmp
mov
push
adc
adc
sub
push
iret
jmp
scas
in
test
aad
adc
mov
test
adc
jmp
xchg
pop
outs
aas
xchg
clc
and
push
push
and
dec
mov
jno
sar
or
xchg
xor
leave
push
dec
cmp
xor
fst
sub
test
retf
inc
mov
inc
jmp
mov
and
out
mov
ror
cmp
ret
dec
mov
jl
dec
aam
in
sub
pusha
add
cld
xor
outs
sbb
mov
bnd
mov
cmp
mov
repz
sbb
int
mov
packssdw
jmp
mov
leave
das
popa
sub
pop
add
div
dec
pop
and
xchg
inc
leave
xchg
out
movs
in
add
jo
push
jmp
adc
gs
add
repz
int
dec
or
mov
mov
sbb
sar
pop
xchg
js
ficom
dec
cmps
mov
cmp
sbb
mov
adc
cmp
jl
sbb
mov
push
sti
jbe
std
push
es
mov
xlat
rol
test
pop
pop
out
aad
out
and
mov
mov
cmps
aaa
add
fldenv
inc
jae
jl
xor
add
xor
fisubr
inc
dec
jmp
xor
mov
jo
test
xchg
pop
retf
imul
into
cmc
ror
push
and
cmp
pop
in
jmp
push
and
jb
data16
jge
mov
xor
add
add
div
pushf
lahf
in
sti
ret
imul
int
aad
adc
das
loope
mov
and
loope
les
pop
inc
dec
cmovnp
int3
(bad)
je
into
movs
stos
mov
jmp
cmp
jmp
stos
mov
sub
rcr
sbb
jmp
pusha
adc
sub
ss
jb
mov
xchg
jl
cmps
add
xchg
pop
out
jo
mov
lahf
xchg
push
xor
xchg
clc
in
inc
fbld
mov
shl
pop
cmps
rol
mov
test
loopne
mov
rol
jns
push
(bad)
(bad)
je
sub
stos
mov
and
jge
xchg
xchg
pop
mov
inc
loop
idiv
(bad)
jnp
dec
or
jbe
or
sub
mov
push
ss
xor
sub
std
rcr
and
jne
xor
dec
mov
push
xchg
mov
(bad)
out
or
wrmsr
je
push
mov
movs
sbb
outs
dec
push
test
(bad)
adc
push
popa
jl
mov
add
aas
add
inc
mov
jp
hlt
dec
jmp
popf
popf
jg
(bad)
adc
mov
into
push
mov
test
jmp
or
inc
bnd
xchg
dec
sub
mov
xchg
jno
stos
(bad)
pop
sub
ins
fwait
sub
cwde
out
jbe
xchg
aam
add
aas
mov
or
jmp
ins
fs
lea
cmp
retf
sub
and
add
mov
add
xchg
fmul
repnz
imul
mov
movs
mul
lock
loop
pop
shl
sub
pop
sbb
push
rol
fwait
sub
mov
mov
scas
inc
scas
push
cmp
into
cmps
dec
jp
cmc
sysenter
push
leave
(bad)
pusha
push
shr
xlat
dec
sbb
bound
push
mov
mov
pop
arpl
out
test
leave
mov
mov
and
jl
int
push
test
ja
adc
(bad)
repz
dec
adc
mov
(bad)
xchg
retf
jns
outs
test
iret
xchg
cli
jno
(bad)
imul
xor
setbe
out
xchg
dec
push
and
dec
fwait
inc
or
lahf
cli
xor
mov
jns
loop
mov
ror
xchg
cmps
data16
aad
jb
jmp
gs
jb
pop
mov
cmc
dec
dec
mov
mov
and
sbb
xor
sti
mov
push
push
test
xlat
in
mov
test
data16
push
lods
xchg
loop
jnp
ins
iret
pmulhuw
push
(bad)
ret
and
cmc
fidiv
cwde
xor
xor
loopne
dec
vpsrlw
push
adc
in
call
outs
leave
or
mov
in
rep
ins
and
mov
adc
(bad)
fsub
or
in
or
dec
cs
push
mov
dec
retf
push
push
jecxz
cli
neg
sub
fstp
icebp
je
dec
or
mov
xchg
dec
or
mov
cmc
xchg
imul
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jno
dec
scas
push
shl
int3
mov
xchg
fmul
xchg
(bad)
in
xchg
stc
cld
or
div
retf
jp
loope
fwait
(bad)
jge
(bad)
aad
and
mov
dec
paddsw
scas
or
in
lock
movs
mov
sub
into
or
xchg
sbb
retf
pusha
sub
movs
add
lock
(bad)
retf
ret
or
xor
out
xchg
call
inc
retf
fimul
(bad)
(bad)
pop
mov
jmp
dec
not
inc
test
jo
shr
out
(bad)
pop
lahf
rol
xchg
lods
mov
stos
xchg
inc
add
movs
mov
mov
fnstcw
es
mov
and
mov
aas
cmp
or
mov
mov
and
fmul
adc
movs
gs
adc
mov
push
adc
mov
mov
dec
nop
(bad)
int3
inc
jl
or
test
ret
cdq
pop
test
sub
outs
sar
jb
jnp
push
(bad)
inc
cwde
xchg
or
lods
jge
cdq
adc
xor
shl
mov
cmps
add
rcr
out
mov
jl
call
fwait
dec
pop
add
fsubr
jae
aaa
xchg
cmp
pushf
ins
pushf
int3
pop
inc
(bad)
daa
mov
or
or
xlat
jb
and
jns
sar
adc
cwde
(bad)
mov
mov
out
pushf
fcom
leave
outs
lods
jmp
in
je
and
pop
pop
sub
stos
sub
aam
sahf
sbb
xor
inc
dec
inc
std
mov
loopne
mov
inc
(bad)
pop
jns
cmp
or
xchg
or
arpl
fwait
xchg
clc
in
lea
jbe
mov
ret
stos
and
loope
out
data16
mov
popf
es
cli
sub
push
sub
(bad)
xchg
addr16
add
dec
jo
aam
sub
rcl
or
call
fmul
ret
(bad)
jmp
push
inc
loopne
push
ds
fadd
test
pop
les
jnp
je
fstp
sub
stos
shl
xor
in
push
data16
ret
mov
mov
aam
cli
mov
sub
sahf
cmps
cmps
sti
jp
jmp
addr16
cmp
int3
into
inc
inc
aas
mov
mov
and
xor
pop
scas
mov
cli
stos
jp
pop
test
adc
cld
cmp
jns
xor
xlat
xchg
inc
pop
and
ja
mov
jp
or
xchg
js
iret
or
cld
or
repz
mov
mov
retf
jle
jl
repnz
cdq
inc
jp
not
dec
out
mov
sti
(bad)
mov
enter
out
cmps
data16
outs
call
(bad)
push
shl
imul
push
clc
jle
add
mul
inc
pop
pop
mov
sbb
jne
fdiv
ins
mov
scas
adc
push
in
sahf
test
popa
movs
cli
pop
lock
ret
fild
xacquire
or
cmc
int3
lds
loopne
cwde
add
mov
jl
jo
aam
pop
mov
cmc
loopne
int
add
sti
stos
xchg
sbb
dec
popa
shl
cdq
mov
sbb
loope
into
jmp
cmc
push
pop
pop
in
imul
(bad)
sar
mov
push
mov
iret
(bad)
cmps
pinsrw
push
mov
aad
sti
fadd
pop
sub
mov
scas
dec
jae
pop
int
into
mov
adc
test
add
mov
stos
les
adc
push
rcl
xchg
add
retf
sti
and
pop
cmp
and
inc
not
mov
adc
jae
cmp
mov
add
repnz
mov
cwde
mov
fwait
lods
cld
mov
xor
lock
test
add
(bad)
sbb
adc
dec
xor
xchg
in
out
and
pusha
inc
xor
or
cmps
adc
sbb
nop
push
push
mov
inc
mov
retf
sbb
adc
mov
push
clc
movaps
cmp
add
out
push
adc
pusha
(bad)
in
xchg
out
test
xchg
rcl
jge
sar
xor
xor
iret
ret
sbb
push
xchg
iret
icebp
xchg
lea
ja
in
mov
jmp
fnstcw
inc
jbe
pop
ret
retf
cmp
rol
cmps
enter
dec
std
push
mov
js
cmc
lods
out
jecxz
(bad)
xchg
std
adc
cmp
lahf
ins
nop
xchg
mov
jnp
add
sub
xchg
inc
dec
pop
lock
lahf
xor
push
ds
xor
je
inc
add
test
ss
sahf
push
xchg
(bad)
ds
add
fstp
jne
nop
pop
mov
and
int
(bad)
sub
imul
cmps
push
aad
stos
mov
or
movs
fnstcw
sub
mov
shr
psubsw
repnz
ja
(bad)
arpl
(bad)
std
(bad)
daa
jge
imul
pop
jae
mov
rol
rol
cdq
mov
push
ret
xchg
sbb
xor
cmp
inc
jnp
stos
lods
inc
lds
or
out
add
aam
mov
adc
mov
lahf
or
stos
pop
or
pushf
push
fnsave
xor
cmp
pop
pop
neg
icebp
pop
shr
sub
jnp
sar
outs
or
fistp
sbb
arpl
sub
sbb
push
cmp
dec
sub
mov
movs
cli
jg
push
push
dec
mov
xchg
int3
call
ror
aaa
hlt
gs
inc
xor
fsubr
sub
inc
(bad)
pop
mov
dec
rol
std
in
mov
mov
sahf
mov
and
and
jnp
mov
adc
and
push
(bad)
aam
ds
aam
(bad)
repz
inc
add
sahf
les
out
clc
test
mov
cmp
and
fst
lahf
gs
aas
pop
adc
nop
cmp
int
fisttp
mov
fild
aas
and
popf
cmp
inc
push
and
pop
jno
push
pushf
mov
xchg
shl
inc
jbe
sub
mov
xchg
rsm
pop
add
test
jl
cs
(bad)
out
shl
dec
mov
inc
sub
in
in
enter
fmul
push
call
mov
mov
pop
shl
gs
aas
cld
mov
cmp
movs
mov
push
sub
lock
adc
cmps
jne
or
test
adc
movs
aam
loopne
nop
pop
dec
mov
xchg
movs
sti
inc
test
lods
sub
xchg
ds
xchg
sub
call
arpl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addr16
jg
and
push
jnp
mov
es
mov
mov
out
cmp
push
pusha
or
test
dec
mov
sbb
fcom
leave
cli
data16
in
mov
out
xor
movs
dec
es
test
xchg
hlt
nop
dec
dec
mov
jbe
pop
neg
xchg
push
sbb
xchg
pop
mov
xor
iret
pop
aas
popf
sbb
sti
inc
cs
push
add
cmp
cwde
sahf
push
mov
gs
sub
(bad)
sbb
enter
push
pop
and
rol
push
adc
pop
jecxz
test
sub
or
jnp
das
and
adc
cmp
push
repz
mov
(bad)
dec
cmp
lock
sahf
mov
and
addr16
js
push
xchg
inc
or
jmp
test
xchg
push
sti
out
xchg
ret
sub
mov
cdq
(bad)
inc
shl
(bad)
adc
add
lds
mov
pinsrw
std
xchg
cmc
xor
cmps
cmc
ins
psubd
jmp
retf
adc
popfw
mov
fcmovne
fstp
test
addr16
push
jo
aam
retw
fist
cli
ss
mov
adc
mov
out
cmp
and
imul
(bad)
fisttp
push
nop
add
dec
out
or
pop
cli
add
mov
stos
mov
xor
jle
ja
les
pop
sbb
cs
push
and
mov
cmp
push
fs
fidivr
inc
dec
adc
ja
fcmovb
sub
jecxz
loope
fidiv
mov
dec
fidivr
pop
ss
cs
in
add
xor
sub
ret
or
push
ret
ficomp
test
xchg
jae
cmp
mov
push
adc
imul
outs
dec
jge
(bad)
pop
push
push
icebp
mov
in
es
jmp
mov
push
fucom
mov
and
lods
fdiv
and
xchg
in
test
fadd
mov
xchg
int3
jp
or
dec
add
(bad)
popa
dec
in
mov
xlat
xchg
sub
inc
inc
jmp
pop
icebp
scas
inc
fsub
aam
xor
mov
pop
mov
ss
inc
cmp
sub
jnp
cmps
push
sub
and
leave
dec
and
mov
js
es
inc
jle
ja
jg
xchg
out
fimul
fiadd
xchg
scas
stos
pop
lods
and
push
(bad)
cmps
and
pushf
loope
leave
(bad)
mov
mov
push
dec
mov
not
sub
mov
fwait
xchg
inc
xchg
(bad)
adc
hlt
imul
hlt
(bad)
icebp
clc
adc
das
and
push
mov
gs
pop
jae
fs
mov
daa
outs
out
pop
in
cwde
mov
dec
mov
ss
xlat
sti
sbb
jg
test
push
hlt
lock
dec
imul
xor
adc
xor
jmp
fisub
pop
mov
and
sub
jmp
adc
mov
int
inc
cmp
es
outs
lods
stos
mov
mov
sar
dec
push
call
xchg
mov
stos
movs
xor
stos
pop
add
inc
inc
test
mov
ins
mov
int
xchg
push
sub
jmp
cmp
cmc
sbb
enter
adc
xor
jecxz
add
rcl
sub
sti
imul
push
popf
movs
fidiv
push
pop
lods
mov
push
jno
hlt
inc
jnp
mov
dec
xchg
xchg
dec
push
push
adc
inc
out
je
mov
sub
cmp
lods
adc
je
in
cdq
rcl
fist
xor
dec
and
cmp
xchg
cs
es
lds
push
jmp
xor
jo
fstp
arpl
clc
popf
dec
pop
inc
(bad)
ffree
sub
out
mov
mov
push
dec
add
xor
sub
fnstenv
inc
xchg
sub
cmps
inc
sub
cmp
ins
pop
push
inc
jnp
mov
mov
inc
sub
call
fnstcw
sti
and
and
iret
cmc
mov
pushf
jbe
rcr
cwde
and
(bad)
call
mov
adc
fadd
push
or
lahf
test
nop
movs
mov
mov
mov
xchg
or
dec
sub
data16
or
test
sahf
push
inc
les
jnp
mov
sahf
sbb
jp
(bad)
das
mov
cld
out
call
test
sub
movs
popf
add
outs
pop
outs
mov
hlt
cld
cld
xchg
pop
lods
mov
push
sub
and
in
pop
xchg
jne
xchg
xlat
shr
pop
pop
popf
add
mov
or
fdivr
sub
pushf
inc
xchg
or
cmp
adc
dec
jp
xchg
out
dec
and
movs
push
repnz
inc
mov
nop
sub
les
stos
push
fscale
sub
or
pause
mov
(bad)
gs
dec
and
and
out
pop
push
daa
clc
or
loope
adc
cmps
jle
sub
fs
loopne
sub
ret
retf
jb
xor
or
mov
movs
xchg
mov
dec
std
mov
dec
in
clc
push
ret
ja
sub
mov
pop
pop
cmp
mov
mov
jo
push
inc
fst
jae
(bad)
dec
loopne
idiv
iret
dec
xchg
lds
adc
nop
cwde
xor
jae
ja
or
in
imul
pop
mov
repz
push
jmp
add
iret
into
pushf
(bad)
(bad)
xlat
pop
pop
mov
fdivr
and
call
mov
cld
mov
pop
lea
sub
push
and
xchg
push
dec
adc
mov
ds
loope
dec
scas
pop
sub
xchg
mov
jne
mov
dec
adc
or
loopne
dec
xchg
sub
mov
or
mov
(bad)
and
retf
sub
out
mov
mov
or
clc
or
and
in
adc
test
jne
rcr
and
push
lock
add
ror
mov
mov
mov
or
(bad)
xor
add
call
movs
les
mov
mov
and
arpl
inc
in
pop
pop
pop
adc
aas
sub
cmps
cmp
hlt
test
test
icebp
out
test
lea
mov
and
repz
fcomp
sbb
adc
sbb
ja
shl
dec
pop
sahf
jbe
aad
imul
push
les
mov
jmp
cmp
ret
mov
mov
or
ja
sbb
pop
jmp
xchg
stos
dec
and
adc
repz
clc
arpl
mov
jp
inc
sub
movs
lahf
movs
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
or
inc
pop
mov
js
rol
sti
outs
pop
mov
pusha
xchg
jnp
or
pop
stc
imul
ror
fmul
outs
int
outs
in
sahf
dec
das
adc
outs
xchg
push
jne
aas
pusha
scas
sub
outs
cmp
lock
pop
xchg
loopne
mov
mov
je
(bad)
push
xor
pop
(bad)
mov
test
add
ja
mov
scas
mov
js
sbb
ds
cmp
enter
mov
cdq
fnstcw
add
call
cmp
(bad)
jb
cmps
nop
shr
aas
aad
sub
push
add
push
jp
fimul
shl
mov
pusha
dec
push
lds
repnz
or
inc
jl
xchg
aam
pop
sub
int3
cmp
ds
cmc
dec
xchg
jecxz
and
push
mov
out
imul
dec
push
std
fucomp
rcr
cmp
jecxz
into
pop
or
mov
mov
xchg
std
add
fwait
dec
mov
loopne
ja
mov
and
mul
imul
pop
retf
mov
ret
sub
xor
ficom
fisttp
xchg
xchg
leave
adc
leave
push
jge
adc
pop
rol
xchg
sti
and
push
mov
push
neg
ins
or
mov
add
sbb
mov
inc
push
mov
add
or
stos
adc
jb
lods
push
jmp
aam
sti
mov
inc
mov
or
adc
das
push
sub
std
sbb
ret
(bad)
pop
push
sbb
cli
mov
mov
dec
mov
repz
aam
mov
in
pop
gs
cmps
test
neg
rol
pusha
mov
or
and
sub
iret
(bad)
hlt
adc
mov
mov
ins
shl
cwde
outs
pop
mov
push
dec
out
and
inc
mov
adc
mov
in
fild
fs
pop
jb
jne
sbb
aaa
jge
stc
in
aas
pop
adc
cmp
inc
fstp
and
loop
test
daa
rcl
or
xor
pop
popa
bound
inc
add
mov
push
or
dec
jno
shl
scas
and
xor
adc
pop
(bad)
jp
shl
ss
mov
xchg
enter
sar
lahf
mov
inc
call
call
loopne
int3
or
fptan
scas
cmp
outs
mov
jmp
xor
mov
lds
test
pop
push
pushf
mov
in
iret
adc
sbb
jg
mov
mov
lds
imul
push
movs
jl
(bad)
sub
inc
test
stc
pop
scas
ret
imul
fsubr
mov
sbb
cmp
jne
add
mov
ss
fadd
xor
(bad)
push
pop
sbb
and
sub
inc
xor
fimul
dec
jb
or
bound
out
test
mov
or
inc
xor
cmp
(bad)
popf
enter
dec
outs
mov
test
cmp
sub
mov
pop
sub
(bad)
pop
and
sar
adc
jns
mov
cld
repz
xchg
cmp
call
(bad)
cmp
sbb
repz
lods
cmps
ret
les
sbb
into
xchg
push
push
push
in
mov
in
(bad)
inc
out
sahf
das
sub
and
jmp
pop
test
jne
xchg
mov
jnp
cmp
shl
xchg
inc
sbb
je
adc
addr16
jle
push
sub
dec
les
dec
add
ret
js
cmp
rol
mov
ficomp
and
push
push
retf
test
pop
int3
and
mov
hlt
mov
popf
aaa
outs
mov
jne
pextrw
sahf
sub
add
shl
arpl
iret
or
fsubr
into
xor
adc
addr16
icebp
jge
loope
mov
or
push
loopne
add
aad
sub
jp
mov
leave
add
cmp
mov
ret
aas
xchg
call
pop
hlt
mov
stos
retf
xchg
cld
mov
push
push
jns
bound
clc
data16
jb
cmp
hlt
add
fs
jl
ss
sub
out
in
xchg
je
ror
mov
or
rcl
mov
jns
rol
mov
outs
dec
jg
adc
sbb
push
adc
add
push
mov
adc
call
icebp
(bad)
jo
or
push
mov
cmp
les
int
push
sbb
pop
test
(bad)
cli
data16
jnp
sbb
lods
sbb
leave
mov
out
jns
xor
jns
call
fwait
mov
and
enter
jl
xchg
push
mov
js
mov
mov
adc
cmps
mov
loope
jmp
dec
sub
dec
or
xor
xor
mov
pop
and
loop
push
call
je
sbb
fucomi
dec
loop
push
pushf
lods
mov
in
inc
test
aaa
mov
jge
jb
imul
popf
scas
inc
pushf
das
pop
les
and
jmp
jbe
xor
mov
out
xchg
xlat
sub
sahf
cmc
pop
pop
daa
ja
push
out
ret
add
cmp
(bad)
div
push
test
out
cmp
mov
adc
les
fidiv
fstp
(bad)
mov
xor
in
cwde
neg
mov
retf
mov
cli
lods
sub
dec
push
test
(bad)
mov
dec
inc
sti
jne
sbb
lea
(bad)
sub
xor
pop
loope
sbb
push
and
out
cwde
mov
int3
jno
dec
in
sbb
mov
mov
mov
inc
jl
cmp
jns
mov
pop
jae
mov
fistp
and
cmp
sbb
inc
xor
sti
mov
sbb
inc
inc
push
and
dec
mov
sbb
dec
pop
dec
pop
cwde
rol
fisttp
daa
push
imul
addr16
cmp
je
xchg
mov
loope
mov
jge
bound
pop
je
and
push
outs
xor
xor
nop
lahf
(bad)
in
xchg
pop
cmp
or
call
es
aas
or
jns
cdq
sub
or
push
test
add
jp
lea
iret
cld
jmp
dec
pushf
scas
ds
mov
mov
std
push
sbb
push
mov
je
dec
rcl
mov
imul
iret
inc
clc
cld
rol
mov
adc
xor
dec
aaa
fstp
fwait
xor
or
push
or
inc
jg
ficomp
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
hlt
pop
pop
aam
ss
bound
(bad)
arpl
mov
loopne
pusha
inc
fsub
rol
jne
jge
fcomp
enter
mov
das
cmp
xor
stos
loop
sbb
fwait
mov
add
push
jnp
jae
pop
xchg
lods
pop
mov
mov
iret
jne
jns
inc
xchg
inc
sbb
pop
push
xchg
sbb
or
int
push
pusha
jnp
cmp
push
ds
inc
fidivr
xor
add
push
dec
rcr
movs
pop
mov
fisttp
adc
js
shl
add
fldl2e
mov
push
jle
shl
rcr
ja
ds
ins
stos
ret
mov
adc
inc
add
mov
aad
inc
sbb
cmp
pop
(bad)
lock
push
cmc
and
stos
in
lahf
ret
in
push
mov
(bad)
shl
sbb
sub
xchg
fimul
xchg
test
addr16
idiv
cmp
cs
retf
ins
das
aaa
ret
pusha
das
push
jb
mov
jbe
shl
movs
mov
test
imul
fwait
or
adc
and
ja
dec
xor
cmp
inc
xchg
pop
mov
pop
dec
sar
int
bound
or
lahf
cmps
gs
daa
xor
idiv
or
sar
or
dec
and
in
jb
cs
fbstp
lods
lods
inc
shl
ret
cmp
and
mov
or
daa
aam
xor
xor
inc
cmp
pop
mov
je
jbe
adc
mov
inc
in
jle
sbb
in
cmps
adc
xchg
lock
mov
aad
sti
(bad)
pop
loop
push
in
fs
jmp
aaa
mov
fs
mov
push
and
sbb
popa
sti
leave
retf
cs
loopne
jmp
pop
es
adc
push
daa
pop
or
cmp
mov
dec
or
addr16
daa
lea
mov
mov
ins
and
mov
idiv
mov
and
pop
dec
or
add
std
xchg
dec
retf
add
ror
mov
xor
push
pop
in
out
pop
cld
cmp
bound
repz
sbb
mov
dec
outs
jecxz
hlt
nop
sbb
push
xor
repnz
fadd
addr16
lods
fsubr
inc
add
cmp
outs
lds
inc
add
lock
jbe
retf
push
jbe
orps
(bad)
sbb
scas
sti
dec
int3
(bad)
inc
lock
mov
mov
add
xor
inc
aas
pop
mov
cwde
enter
call
pop
pop
test
xor
xor
push
adc
out
pop
xor
mov
dec
jo
jmp
push
adc
stc
fs
sub
dec
in
inc
movs
mov
(bad)
push
leave
(bad)
push
fucomi
dec
cmps
fs
add
mov
loopne
pop
xor
test
mov
call
retf
or
(bad)
cmp
cmp
ficomp
sbb
pop
ficomp
aam
test
mov
push
pop
add
fild
ja
pop
sbb
(bad)
xor
inc
inc
out
xor
adc
repz
mov
sar
xchg
cwde
ins
dec
retf
imul
push
pop
mov
sub
icebp
mov
push
or
loopne
or
nop
or
inc
sahf
push
test
mov
jp
xchg
mov
mov
push
aad
es
rcl
jb
loopne
retf
rcr
dec
mov
dec
lds
xor
stos
xchg
leave
cli
in
jbe
sub
adc
mov
mov
inc
cmp
icebp
ja
out
pop
adc
mov
pop
sbb
les
loopne
xchg
(bad)
lock
hlt
pop
cld
stos
jmp
out
cmc
xchg
inc
add
dec
mov
mov
mov
js
xchg
add
inc
cmp
cmc
cmp
imul
jb
loop
xchg
jo
fadd
hlt
mov
dec
popf
pop
stos
mov
cwde
push
in
scas
xchg
fwait
cwde
std
(bad)
dec
dec
repnz
loop
or
fld
test
sbb
sub
mov
xor
xor
mov
cmp
imul
lods
pusha
xchg
dec
sbb
xchg
fild
(bad)
in
mov
icebp
cwde
(bad)
(bad)
sub
jne
stc
test
jb
mov
inc
cmp
adc
sub
xchg
xchg
or
fmul
and
nop
jae
adc
ror
mov
xchg
daa
cmp
or
mov
stos
adc
and
cli
and
int
loop
sbb
dec
mov
cmps
cwde
sbb
or
xor
sub
and
pop
add
sqrtps
mov
sbb
dec
aaa
dec
sbb
repz
sbb
cmp
cld
jb
aaa
nop
mov
std
push
repz
add
push
push
fwait
mov
and
sbb
xchg
popf
movs
xrelease
cwde
shl
rol
arpl
sbb
push
sbb
push
stos
(bad)
push
cli
jae
or
aam
gs
stc
fucomip
repnz
pop
cs
mov
rcl
inc
inc
jecxz
cmp
imul
divps
stos
ins
sub
jp
js
imul
inc
in
push
retf
pusha
cmp
cmp
push
adc
addr16
mov
(bad)
pop
add
xchg
mov
das
sbb
cli
xchg
adc
mov
fs
fwait
push
adc
frstor
and
jmp
jmp
fcmovbe
or
aas
push
addr16
push
fidiv
imul
adc
adc
add
sbb
mov
mov
or
rcl
pop
cmp
fld
and
mov
add
pushf
push
and
xchg
mov
inc
ins
mov
push
jl
ret
or
inc
mov
xchg
xor
jbe
cmps
cdq
adc
adc
pop
inc
ss
aad
fcom
stos
sar
sub
mov
cmp
jns
adc
inc
jmp
bound
mov
popa
cli
call
ins
stc
cmc
icebp
cmp
jl
adc
nop
into
leave
or
xor
or
cmp
sbb
(bad)
loope
shl
xchg
cmp
aad
imul
mov
dec
imul
inc
out
ret
enter
sahf
int
sbb
loope
and
sub
mov
mov
aaa
fwait
sbb
ds
mov
(bad)
stos
mov
js
pop
or
pop
sub
or
cmps
faddp
jp
shl
inc
jne
mov
shr
mov
push
mov
imul
ret
xor
aaa
or
dec
rcr
xor
dec
dec
and
std
daa
mov
or
adc
mov
fstp
jno
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movntq
pand
out
call
jne
xchg
pop
mov
movs
or
sub
movs
xor
mov
ret
lock
add
jne
out
xchg
(bad)
inc
pop
push
mov
ins
cwde
in
jmp
dec
mov
les
and
cmp
out
out
rcl
mov
rcl
mov
push
(bad)
cmp
iret
scas
sbb
fild
or
iret
sbb
fwait
cld
lahf
jl
cmp
ins
xchg
jo
xor
fwait
mov
(bad)
xor
push
pop
cwde
(bad)
fisubr
dec
out
(bad)
jbe
push
out
je
and
shr
dec
jp
mov
imul
test
jo
push
loope
into
and
popa
pop
mov
sbb
outs
movs
and
xor
ret
aas
cdq
rcl
inc
mov
scas
call
inc
ja
sbb
gs
cmp
mov
les
rcr
or
push
pop
iret
pop
movs
add
cwde
mov
outs
(bad)
adc
ja
pop
or
inc
jg
mov
adc
fmul
adc
dec
jb
mov
bound
or
les
imul
test
out
xor
mov
or
mov
test
mov
inc
sub
(bad)
pusha
pusha
and
jmp
cs
scas
xor
addr16
or
inc
fcomp
jne
mov
inc
inc
test
mov
bound
jle
mov
or
inc
mov
or
inc
xor
es
adc
out
mov
addr16
popf
cs
shl
sub
lahf
jae
repnz
(bad)
xor
jne
test
mov
jmp
jmp
xchg
daa
sbb
lea
push
jbe
cmp
xchg
mov
xchg
inc
jo
adc
cmp
imul
jge
or
out
shl
aas
xor
and
xor
retf
sbb
mov
mov
divps
cld
push
js
xchg
mov
daa
mov
jp
nop
sub
add
imul
pop
push
enter
rol
jmp
add
fsub
js
retf
cs
push
cmp
loopne
in
neg
mov
xor
mov
mov
jb
gs
xchg
bound
sbb
push
and
ficom
add
pusha
sub
add
inc
mov
push
jmp
push
pop
adc
or
aam
add
addr16
cmp
nop
in
ins
fucomi
pop
jg
lds
jecxz
push
xchg
lods
xchg
lods
shl
mov
sub
mov
cmp
(bad)
dec
daa
(bad)
sti
inc
xchg
and
iret
mov
push
in
das
add
loop
call
je
dec
call
push
sub
fnstcw
mov
repnz
and
adc
sar
(bad)
ror
fs
jle
sub
fwait
iret
sbb
mov
imul
imul
and
mov
inc
fs
xrelease
inc
or
scas
jno
sar
into
sub
adc
shl
cld
leave
call
mov
adc
ins
icebp
add
push
mov
nop
sub
shl
retf
arpl
rol
lds
call
int
(bad)
cmp
push
adc
mov
sbb
pause
ss
jmp
cwde
js
pop
push
iret
cmp
and
(bad)
or
loope
pop
push
lods
aam
sub
shl
ret
and
push
imul
push
icebp
dec
ja
sbb
(bad)
cmp
and
push
lock
rcl
mov
inc
dec
inc
retf
aad
sbb
push
mov
inc
es
pusha
mov
bound
in
inc
pop
mov
mov
cmp
and
test
jae
gs
cli
cld
fbstp
adc
mov
or
mov
push
dec
ds
dec
ror
push
aad
xor
mov
int3
test
fsub
sbb
outs
pop
in
mov
mov
mov
ss
(bad)
repnz
mov
add
and
out
pusha
in
mov
xchg
dec
ins
pop
or
or
pop
scas
jnp
add
(bad)
cmc
cmp
xchg
mov
lods
getsec
cwde
and
push
imul
dec
xchg
les
or
inc
repz
pop
arpl
pop
arpl
test
dec
daa
adc
test
or
or
mov
mov
sti
and
cmp
push
mov
add
fild
fwait
das
mov
js
push
sub
cmp
or
sar
stos
add
pushf
adc
lock
or
push
xor
sub
xor
fstp
repz
push
scas
mov
call
jnp
adc
iret
xchg
repz
mov
push
mov
push
jl
rcr
les
mov
and
jo
nop
sar
jg
add
cmp
mov
test
push
shl
xor
enter
nop
push
mov
add
sbb
hlt
xor
sbb
sbb
xchg
dec
push
and
popa
ficom
mov
int
dec
(bad)
(bad)
sahf
rol
or
dec
xchg
pop
clc
repz
push
in
xor
js
mov
xchg
rol
fsubr
xor
popa
adc
adc
pushf
movs
and
jecxz
iret
push
das
retf
pop
das
ins
test
and
imul
lea
inc
popf
xchg
ficomp
xchg
inc
and
cmps
push
adc
mov
pop
out
mov
jmp
xchg
sub
or
pop
jo
xchg
cmp
sbb
dec
inc
loopne
dec
cmp
(bad)
movs
push
sub
mov
in
pop
pop
sub
mov
std
call
or
nop
not
cs
not
lahf
int
arpl
int3
ins
mov
xchg
aas
mov
ja
sub
and
cmp
jge
push
aam
(bad)
outs
leave
or
arpl
mov
mov
cdq
imul
sahf
pop
pop
int3
jbe
inc
cmp
push
mov
call
movs
sbb
jo
sub
bound
(bad)
iret
mov
sub
je
int3
or
ret
movs
clc
sub
nop
inc
jnp
and
je
or
pop
cdq
sub
mov
test
add
pop
sub
lahf
push
dec
test
(bad)
cmps
std
test
pop
mov
mov
sub
and
mov
dec
cmp
or
pop
jg
cwde
icebp
je
clc
jno
dec
pop
cmp
jmp
addr16
mov
adc
sbb
mov
into
or
or
je
enter
cli
ds
in
(bad)
pop
cmps
aaa
mov
xor
xchg
pop
adc
inc
sti
movs
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
push
xchg
adc
iret
(bad)
in
mov
xor
xchg
pop
ds
call
movs
cmp
mov
mov
mov
leave
xor
or
cmps
mov
icebp
lahf
jnp
mov
xchg
loopne
out
adc
push
ror
stos
out
call
jp
mov
fild
inc
or
push
and
ins
adc
test
mov
adc
push
js
cld
cmp
dec
outs
mov
stos
fisttp
mov
cmp
cmc
loopne
rcl
mov
cmp
push
sub
fnop
jle
or
dec
xchg
cld
dec
out
imul
xchg
xchg
jp
comiss
fcomp
jmp
loopne
lock
mov
xchg
test
xchg
adc
mov
mov
call
popa
loopne
pushf
xchg
ins
les
mov
mov
pop
js
jg
ins
dec
xor
mov
stos
fst
loop
daa
mov
movs
fwait
(bad)
std
lods
jb
push
dec
(bad)
jle
and
or
dec
xchg
scas
int
and
push
push
sbb
nop
icebp
popf
cmp
out
cmc
retf
fst
add
push
rol
add
ins
jb
adc
lods
cli
mov
cmps
push
xor
pop
adc
sub
mov
cdq
arpl
or
mov
push
fstp
and
sub
lock
imul
pushf
lds
ret
xchg
fiadd
aas
and
xor
call
retf
jg
cvttps2pi
in
adc
loope
pop
fwait
jo
push
pop
pop
push
mov
inc
or
repnz
es
rcr
cmc
add
mov
push
out
add
add
aas
test
adc
loop
jl
or
dec
adc
leave
(bad)
fstp
(bad)
loope
mov
dec
adc
jbe
jb
loopne
iret
and
add
mov
fst
inc
aas
icebp
adc
and
js
add
dec
or
xchg
dec
in
jl
push
xchg
jle
inc
push
(bad)
xchg
mov
cmp
jp
jp
dec
or
mov
mov
imul
and
inc
outs
mov
xor
cld
leave
icebp
jmp
retf
push
xchg
rcr
adc
xor
add
xchg
inc
mov
mov
push
xchg
test
add
mov
mov
sahf
fsubr
(bad)
jmp
jno
mov
mov
out
push
push
xchg
mov
sub
cs
sub
shl
and
jns
out
pushf
sbb
sub
pop
div
call
into
nop
das
cmp
jo
cdq
and
or
out
je
adc
cmps
pop
jb
xchg
mov
out
cmp
aas
xchg
bnd
into
adc
aad
lea
ret
jmp
xchg
xor
aad
popa
push
mov
mov
push
pop
push
cwde
cwde
cmp
push
ret
or
add
rcl
push
push
lock
mov
cwde
(bad)
mov
dec
in
test
popa
fdivp
ds
sbb
or
add
cwde
cmp
and
sar
out
inc
jmp
and
mov
or
push
mov
clc
inc
es
es
loop
stos
fucomp
pop
fadd
xor
adc
cli
sar
xor
xor
in
int
mov
inc
outs
mov
out
sub
lods
cmp
shl
popa
push
pop
adc
cmps
jmp
push
ret
shl
cld
pop
add
cmps
xor
or
xor
aaa
repz
push
mov
dec
dec
push
cld
cli
outs
or
or
pop
or
out
sbb
loope
enter
dec
mov
sbb
sbb
sub
push
jl
(bad)
sar
in
popf
cld
aas
test
adc
in
sbb
fwait
jl
popa
add
jecxz
xchg
(bad)
pop
scas
(bad)
retf
loop
sbb
add
dec
mov
je
xchg
mov
push
xchg
mov
hlt
pop
call
mov
cmp
loop
shr
mov
sub
clc
mov
cmp
add
inc
dec
fwait
movs
or
jae
ficom
stos
iret
fisttp
dec
or
leave
inc
stc
cwde
mov
aam
data16
pushf
ins
push
mov
int
push
imul
data16
inc
dec
rol
ret
popa
(bad)
mov
out
test
lahf
push
fild
lock
xlat
or
pop
sub
std
dec
ret
repnz
rcl
ins
popa
aam
int3
push
test
jmp
push
aam
mov
pop
push
test
loope
adc
push
lahf
push
jbe
sub
add
push
repnz
out
jmp
xlat
ficom
add
push
jno
int
sbb
jl
cdq
jmp
cli
mov
xchg
idiv
pop
jne
fs
pop
mov
adc
sub
cmc
inc
and
in
push
and
xor
std
les
jmp
push
idiv
(bad)
popf
ss
xchg
xchg
mov
clc
push
cli
js
jbe
sub
inc
pop
cld
movs
cmp
popa
sbb
pop
or
jb
jmp
out
mov
push
add
xor
aam
jnp
cli
fucomi
sahf
mov
mov
jge
(bad)
ror
or
or
nop
outs
push
(bad)
sbb
inc
hlt
sub
push
adc
push
fild
(bad)
jnp
and
mov
adc
mov
in
dec
iret
adc
mov
in
scas
dec
xchg
sub
fs
out
mov
add
dec
mov
pop
xchg
popf
and
(bad)
iret
and
stos
fild
mov
fldenv
stos
cmp
(bad)
sub
jbe
mov
sub
sbb
cs
mov
adc
shr
jp
movs
in
dec
(bad)
sub
sub
cdq
out
sub
mov
dec
xchg
xchg
jge
mov
and
loope
repnz
pop
fisttp
imul
jle
mov
adc
loopne
jmp
mov
xchg
ins
fadd
mov
push
cdq
out
add
fcmovnu
mov
jl
sub
fidiv
pusha
ret
int3
fdivr
mov
xchg
jb
mov
addr16
movs
or
inc
ss
sar
out
pop
mov
ja
enter
jecxz
or
mov
pop
pop
add
clc
xlat
shl
out
fcomp
enter
fstp
push
and
or
cmps
xchg
loop
dec
xchg
ins
stos
jns
push
arpl
popf
aam
jb
mov
pop
iret
xchg
sbb
add
pusha
mov
retf
imul
mov
adc
mov
fidivr
jmp
ret
xor
(bad)
pop
add
dec
sbb
loopne
aas
scas
arpl
add
adc
in
cmp
mov
or
mov
xchg
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
dec
xor
out
adc
ror
jl
icebp
sbb
mov
xchg
ret
cli
out
jg
retf
daa
dec
cmp
clc
ins
push
and
lahf
cmp
sbb
fimul
pop
xchg
call
adc
or
inc
shl
cld
pop
mov
inc
push
sbb
push
out
xor
or
sbb
jo
mov
in
jecxz
and
xor
outs
fld
pop
push
and
cmp
aaa
icebp
sbb
stos
repnz
pop
sbb
call
sbb
pop
je
fcomp
and
call
fs
add
icebp
cld
je
aad
dec
aas
adc
ins
adc
arpl
dec
in
arpl
xchg
jo
sub
call
jg
mov
retf
xchg
xor
push
nop
inc
or
out
sahf
xor
adc
add
jo
mov
mov
mov
vmovshdup
jecxz
movs
inc
pop
jae
mov
and
adc
aaa
stos
scas
test
adc
mov
jecxz
in
loopne
jae
xlat
inc
call
rcl
dec
push
(bad)
out
sbb
inc
(bad)
adc
xor
dec
adc
inc
dec
adc
jnp
dec
gs
push
add
addr16
push
sbb
add
(bad)
(bad)
push
js
pop
in
pop
push
outs
test
out
xor
xor
divps
shl
mov
jmp
sti
je
jne
out
mov
xchg
add
or
std
or
dec
bound
pop
jg
cli
or
movs
mul
adc
imul
fcmovnu
inc
(bad)
xchg
(bad)
cmp
scas
in
out
ffree
fidiv
mov
mov
out
cmp
xor
scas
sbb
adc
inc
add
fld
(bad)
mov
call
repz
ret
in
lods
mov
fidiv
ds
push
hlt
mov
int3
cmp
jp
leave
mov
loope
xchg
mov
sub
xchg
dec
aad
add
fsubr
jl
ss
mov
and
jg
mov
cmp
loope
ret
fdivp
jle
adc
fiadd
in
dec
add
mov
cmp
push
popf
repnz
add
retf
xor
out
sub
pop
jmp
cld
cmp
adc
sub
dec
pop
and
pop
ror
mov
add
ds
adc
movs
std
das
xchg
je
adc
and
in
aad
pushf
mov
xlat
xchg
jge
aad
test
in
jmp
xor
lods
push
sahf
sbb
xchg
xchg
sub
push
(bad)
movs
xchg
mov
idiv
retf
mov
es
jne
arpl
cs
icebp
xchg
neg
and
mov
cmp
adc
cmp
push
ja
push
inc
adc
les
pop
mov
dec
and
hlt
inc
(bad)
xor
add
pushf
pop
jecxz
in
sub
or
ss
pop
fdivr
mov
mov
imul
cmp
inc
out
xchg
pop
fst
cld
mov
lds
push
or
cmc
mov
xchg
dec
iret
and
xor
jbe
fcomp
or
xchg
xchg
(bad)
out
mov
aas
movs
dec
cmp
adc
retf
sub
neg
push
cwde
cmps
lea
int
add
adc
outs
sub
loopne
adc
loopne
lods
into
mov
cli
cmp
jnp
jmp
loopne
cmp
das
bts
mov
and
stos
test
jp
jg
jp
enter
outs
popf
ja
jo
mov
outs
mov
das
inc
es
(bad)
or
add
push
cmp
pushf
pop
fnstcw
adc
mov
jge
adc
lods
cmps
repnz
sti
and
outs
fld
mov
mov
jmp
int3
push
add
jle
shl
sub
sub
lods
mov
aas
xchg
and
movs
sub
fmul
sahf
push
xor
xchg
xor
jg
dec
call
aas
adc
fisttp
push
inc
mov
push
mov
dec
ds
stc
cmp
and
dec
and
sub
and
sti
xchg
xchg
aad
dec
cmp
cmp
ins
ds
loop
pop
daa
ret
xchg
mov
mov
sbb
sub
in
mov
pop
jge
cmp
xchg
add
popa
aad
out
push
lods
daa
stc
add
inc
or
inc
push
(bad)
mov
pop
sbb
sbb
jg
ret
test
hlt
jecxz
mov
mov
loop
sahf
das
or
xor
movs
sahf
popa
idiv
sahf
ins
(bad)
int
cdq
nop
(bad)
rol
sub
loopne
mov
xchg
pop
mov
pop
jae
imul
rol
mov
jbe
lahf
pop
int
nop
int3
rcl
je
sub
ds
jge
push
pop
mov
and
jo
dec
mov
cwde
gs
mov
mov
rcr
jo
test
push
cmp
mov
sub
enter
shl
and
sub
mov
lock
outs
and
in
dec
mov
xabort
repnz
jmp
xchg
adc
test
int
in
aas
enter
sub
dec
das
xor
outs
xlat
fnsave
cli
and
(bad)
daa
and
mov
xchg
sub
jmp
cmps
pop
fwait
repz
and
push
cmp
jmp
das
repz
mov
fbld
gs
jbe
or
sub
adc
xchg
push
xchg
jo
repz
pop
pop
fadd
scas
mov
int3
repnz
lock
dec
aaa
mov
cmp
xchg
push
xchg
pushf
and
das
or
icebp
mov
xor
idiv
sub
outs
jo
or
pushf
sbb
push
inc
inc
mov
sub
movs
cld
jae
mov
xchg
ss
adc
mov
stc
jmp
sahf
add
push
(bad)
hlt
cmp
pop
leave
ss
std
cmp
out
mov
sub
sub
push
dec
mov
sbb
dec
mov
(bad)
addr16
neg
sub
add
adc
fistp
bound
and
fnstenv
push
dec
jmp
xor
clc
js
jmp
lods
xchg
call
pop
js
sub
lea
jns
jle
dec
shr
or
enter
leave
movs
int
fbstp
popf
pop
push
lds
int3
or
mov
mov
bound
mov
cli
dec
fld
gs
sbb
fisubr
int
jge
ret
or
repz
popf
dec
adc
pop
sub
nop
fucomp
mov
add
and
arpl
out
and
dec
scas
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
fs
mov
jp
loop
sub
add
inc
xchg
call
daa
sub
les
and
movs
push
sahf
movs
fwait
pop
fimul
and
sbb
jmp
out
ret
lea
sbb
sbb
dec
jg
out
aad
dec
mov
pop
cmp
push
sti
ins
cmp
int3
das
adc
xlat
cwde
xchg
std
pop
jp
retf
pop
mov
nop
jns
push
popf
std
cs
test
or
dec
stos
mov
dec
xchg
outs
jle
inc
xchg
ret
arpl
xor
and
retf
int
xchg
mov
jae
pop
mov
retf
adc
lea
call
dec
in
(bad)
pop
daa
das
ja
scas
jno
inc
pop
mov
loopne
movs
pop
or
xchg
pop
fstp
addr16
inc
sbb
mov
mov
adc
movs
mov
les
inc
jge
enter
sub
ja
retf
jmp
js
push
mov
test
or
div
pop
pop
xchg
lods
pop
jne
xchg
jno
adc
or
push
add
shl
ins
adc
xchg
sbb
lds
in
stos
xchg
loopne
pop
jb
mov
iret
xchg
ficom
adc
adc
arpl
rcl
aas
cmp
repnz
mov
(bad)
ins
test
add
push
and
stos
sub
mov
std
nop
push
pop
ins
(bad)
mov
loope
fist
xchg
repz
mov
sar
pop
(bad)
mov
ror
dec
test
dec
(bad)
movs
or
mov
mov
cmp
jo
sbb
ficom
jmp
push
movs
and
in
repnz
mov
addr16
push
fistp
movs
fcomp
xchg
jg
xchg
rcr
mov
sub
test
(bad)
mov
loop
pop
xchg
jp
and
xor
mov
imul
leave
dec
lea
popf
(bad)
xchg
sbb
xlat
lock
dec
sub
loopne
mov
enter
test
sbb
xlat
xchg
inc
jmp
jmp
sub
and
inc
sbb
jns
dec
test
xchg
push
call
nop
scas
mov
or
ss
call
das
out
pop
lock
mov
inc
push
jns
or
dec
pop
je
sub
arpl
sbb
jae
dec
rcr
ret
sbb
pop
jg
and
sub
dec
or
mov
jno
or
repz
(bad)
sbb
test
push
cmps
(bad)
imul
adc
aaa
mov
mov
pop
mov
pushf
add
sti
stc
mov
xchg
fwait
xchg
xchg
xchg
sahf
bound
movs
or
dec
sbb
jb
test
cmp
jle
adc
pop
dec
stos
inc
ja
not
int3
nop
sahf
dec
jge
pusha
fisub
ins
imul
icebp
int
test
popa
and
push
push
push
mov
inc
int
into
pop
jp
push
xor
leave
clc
mov
loope
and
sbb
scas
and
outs
mov
mov
rol
push
cld
sbb
das
pushf
ins
sub
pop
mov
push
and
movs
dec
xchg
ret
xor
mov
loopne
mov
lahf
sbb
mov
fld
nop
xchg
fdiv
inc
outs
or
sub
fs
or
pop
lods
cmp
pop
inc
jmp
jne
jl
sub
jg
jo
ds
sbb
aad
and
jl
lock
bound
lahf
push
dec
scas
lods
push
dec
iret
pushf
(bad)
or
repz
pop
xor
ds
push
dec
mov
test
adc
ret
push
ins
imul
inc
call
fwait
adc
and
adc
mov
xchg
pop
fadd
mov
int3
mov
into
leave
jo
add
mov
sbb
adc
out
js
mov
jmp
push
ret
xor
ins
and
scas
mov
jo
jge
mov
cmp
push
cmp
(bad)
inc
(bad)
inc
loop
xor
xchg
and
imul
push
add
cmp
mov
mov
sahf
or
xor
dec
dec
sub
jae
dec
adc
(bad)
push
inc
ins
adc
sbb
aad
jnp
push
std
dec
add
cdq
push
stos
mov
pop
sbb
push
nop
fwait
(bad)
sbb
stos
adc
push
and
aad
js
lea
ret
adc
cmp
dec
mov
or
bound
jge
cmc
xor
cli
nop
push
daa
imul
enter
adc
(bad)
xor
int3
leave
sub
daa
arpl
inc
jns
fcom
sub
stos
daa
pop
mov
jl
mov
xor
jns
cmp
cpuid
dec
inc
pop
ja
push
or
push
cld
jmp
in
adc
and
add
push
out
push
scas
and
cwde
pop
fidiv
mov
mov
fwait
mov
mov
sbb
jo
add
call
int3
sahf
fwait
outs
push
stc
stc
stos
mov
inc
xchg
movs
fwait
cmps
sub
and
pop
cmp
scas
pop
mov
and
and
rcl
xchg
jo
les
and
mov
sub
mov
cmp
mov
scas
adc
and
mov
shl
loope
loopne
leave
cmp
imul
shl
mov
aas
push
mov
ret
in
ret
iret
cmp
lds
and
not
fadd
jo
mov
les
xor
loop
push
das
loop
push
sbb
adc
mov
sbb
bound
(bad)
mov
inc
xchg
call
pop
stc
sar
inc
push
jne
inc
sub
jle
test
push
mov
leave
js
(bad)
mov
xchg
or
adc
push
push
sub
pop
cmp
fiadd
(bad)
in
dec
pop
push
sbb
mov
push
jmp
es
xor
pop
jb
mov
mov
or
cli
sub
xchg
scas
or
loop
pop
fild
dec
daa
ins
pop
cs
js
push
stos
les
jl
int
mov
sub
das
adc
shl
rcl
jp
unpckhps
xchg
mov
jmp
or
lods
out
mov
sub
xor
mov
adc
mov
push
dec
idiv
pop
rcr
icebp
daa
scas
jne
adc
aad
aas
jmp
jb
xchg
mov
mov
pop
sbb
lds
jmp
rcl
jmp
mov
retf
out
mov
xchg
mov
and
jne
add
mov
jg
in
retf
rcr
arpl
push
pop
addr16
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loop
mov
add
jo
das
shr
bound
or
jne
mov
bound
icebp
dec
in
call
pop
add
cmp
cmp
bound
sbb
mov
fs
(bad)
mov
inc
jl
push
sub
pop
dec
sbb
call
cdq
jmp
(bad)
adc
stc
mov
jno
inc
test
jnp
pop
mov
bound
js
dec
and
adc
sub
mov
mov
dec
aad
fwait
push
and
inc
sub
pusha
enter
add
cmp
or
inc
dec
enter
cwde
pop
jmp
mov
add
add
xchg
daa
bound
or
sub
and
inc
cdq
push
add
cmp
cmp
add
adc
enter
pop
loop
fsubr
inc
jecxz
sbb
jge
aas
js
mov
test
xchg
or
dec
test
fmul
mov
cmp
inc
loope
lea
out
dec
lds
pop
jnp
adc
lahf
push
mov
cmc
dec
dec
movs
push
lods
lea
pop
pop
stos
psrld
sahf
mov
xor
ins
push
push
int
cmp
into
test
call
dec
repz
add
or
mov
cdq
cmp
cmc
popa
mov
mov
mov
call
jp
ss
add
fld
repz
retf
sbb
jo
arpl
rcr
jne
out
ja
xchg
mov
les
mov
movs
data16
ftst
sbb
sub
ficomp
(bad)
das
dec
xchg
and
xor
xor
adc
jno
cdq
popf
mov
enter
inc
xlat
test
and
cmps
jmp
fs
js
push
jae
pop
lods
pop
rcl
arpl
pop
retf
and
xor
dec
call
xor
xchg
fistp
sahf
push
dec
mov
loopne
sub
fdivr
pop
addr16
sahf
adc
scas
add
adc
xlat
outs
xor
in
push
add
lock
(bad)
aam
xchg
std
dec
jecxz
out
mov
out
out
jmp
cmp
retf
ins
adc
bound
imul
add
movs
jne
or
jle
adc
scas
xor
clc
sbb
add
xor
xlat
add
stos
mov
out
jecxz
push
les
js
cwde
pop
in
xlat
in
int3
cld
mov
add
mov
jmp
and
mov
xor
mov
cwde
dec
popf
rol
mov
inc
pushf
(bad)
aam
cmp
fistp
inc
pop
dec
cmps
lds
in
cmp
stc
cdq
out
test
sbb
inc
xchg
repnz
ins
adc
mov
cmp
adc
test
mov
or
xor
cmps
pop
mov
and
cmp
mov
test
dec
and
test
shufps
leave
jg
xchg
nop
fs
sbb
inc
leave
push
sahf
mov
cmps
push
leave
xlat
sbb
inc
in
imul
jmp
daa
cmp
mov
xlat
out
and
jge
movs
mov
jb
loopne
dec
es
sbb
and
sub
ret
mov
pushf
xor
mul
sbb
dec
rcpps
jns
dec
jmp
or
mov
xor
mov
xor
inc
add
or
mov
pusha
fcomp
sub
xchg
cs
push
cmp
inc
sub
mov
sahf
out
and
shr
sub
test
sub
int
pop
ds
popf
xchg
and
cmps
adc
cmps
mov
sahf
pop
cmp
test
jmp
stos
mov
out
sub
add
nop
pop
mov
mov
je
adc
inc
sub
pop
icebp
push
pushf
gs
sti
xor
scas
pop
(bad)
mov
mov
imul
nop
dec
lock
(bad)
std
pop
sbb
mov
add
ror
mov
inc
sbb
pop
xchg
add
add
cmp
ficom
call
push
js
(bad)
(bad)
xor
jle
cmc
mov
adc
and
pop
jbe
vsubpd
push
mov
jmp
mov
ja
popf
int3
and
fwait
dec
jecxz
aaa
xor
stos
int
or
cmp
mov
test
adc
mov
bound
js
and
(bad)
sar
and
push
ja
(bad)
mov
sti
movs
sbb
mov
ins
and
or
adc
inc
xchg
sbb
les
daa
push
sbb
(bad)
into
cmp
movs
pop
and
add
stos
jle
leave
xor
popa
fdiv
pop
std
movs
scas
mov
in
mov
in
or
inc
xchg
pop
cmp
sub
mov
test
lock
fdiv
ds
and
(bad)
xor
clc
loopne
das
sub
rcr
in
repnz
mov
pop
sbb
out
dec
xor
cwde
pop
clc
jle
rcl
imul
mov
in
fld
(bad)
in
dec
dec
nop
cmc
fadd
pusha
jg
in
adc
add
and
or
aas
inc
jmp
test
aad
ja
dec
and
lea
xor
popf
xor
popa
and
xor
jno
cmp
xchg
pop
movs
or
jno
dec
sub
or
outs
jp
mov
imul
inc
mov
scas
hlt
stos
sbb
push
outs
add
test
push
push
call
pop
and
cmp
mov
scas
pop
xchg
dec
pop
in
mov
or
xchg
mov
sbb
jg
jecxz
or
imul
cmp
jl
(bad)
call
loopne
fidivr
and
sar
leave
cmp
cmp
loop
mov
mov
xchg
push
das
fsub
test
push
std
push
aaa
push
call
or
icebp
cmp
push
lods
div
lea
(bad)
hlt
loopne
dec
or
ins
and
cmp
xor
loop
pop
add
push
lahf
pop
push
jmp
bound
cdq
mov
ins
movs
jnp
add
pop
push
mov
arpl
stos
push
or
inc
outs
or
jle
repz
mov
mov
out
pop
fs
adc
pop
sbb
mov
js
call
mov
adc
cmp
adc
int3
shl
mov
aad
pop
imul
or
into
cld
jne
or
ror
jg
sub
dec
int3
test
mov
and
lahf
push
rol
test
inc
stos
fwait
in
xchg
or
pop
mov
sbb
mov
fwait
mov
test
mov
fist
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
imul
retf
sahf
mov
push
dec
popf
fcomip
mov
adc
or
push
(bad)
adc
jge
xchg
mov
sbb
lods
iret
in
fmul
xlat
xchg
hlt
cwde
test
jns
cmp
into
enter
out
jae
push
add
add
inc
(bad)
jg
cmp
jnp
push
in
ss
pop
pushf
xor
sar
dec
sahf
aas
adc
leave
int
inc
xor
cmps
add
mov
fwait
test
mov
mov
es
call
test
mov
mov
mov
pusha
leave
adc
mov
sub
mov
test
es
call
adc
in
push
outs
cmp
and
pop
rol
xor
dec
mov
or
mov
lahf
fwait
sub
mov
cmps
jbe
fiadd
(bad)
sub
es
xor
or
and
pop
adc
sub
out
mov
mov
inc
fnsave
outs
ret
test
mov
mov
xor
inc
gs
jmp
dec
cmp
mov
xchg
pusha
push
push
je
pushf
add
jno
cld
push
mov
and
dec
xor
cmps
pop
les
das
pop
push
sbb
scas
dec
(bad)
imul
jns
leave
idiv
xor
and
pop
test
rcl
push
aaa
shl
cmp
mov
sbb
sub
or
retf
xor
cmp
loope
mov
adc
adc
outs
dec
push
in
sbb
into
fild
mov
mov
ret
inc
adc
jp
call
mov
ror
test
cs
aam
xor
jae
xchg
jbe
pop
rcl
cld
mov
icebp
pop
stos
lds
cmp
sub
ret
sub
dec
push
adc
stos
loope
jmp
ss
sub
jmp
mov
xchg
xor
pusha
rcl
inc
lock
or
push
add
push
mov
cmp
jbe
enter
pop
xor
add
inc
pusha
div
out
call
loope
fcom
add
jnp
ret
mov
cmc
push
mov
cmp
dec
aas
xchg
in
dec
stos
lea
adc
xchg
sbb
ret
or
shl
adc
add
(bad)
call
cmp
ds
sub
jl
mov
lods
loope
cmps
cwde
mov
dec
neg
xor
(bad)
sub
(bad)
movs
leave
push
adc
imul
in
test
or
in
pop
aaa
(bad)
jb
jecxz
xchg
push
push
pusha
xor
push
pop
ss
int
xchg
popf
outs
das
jecxz
pop
mov
jg
repz
enter
pop
and
aas
cmp
sbb
jge
jae
adc
retf
sub
call
imul
jo
loope
sub
and
xchg
popf
push
mov
sbb
inc
jae
dec
or
in
cmpps
outs
shl
mov
out
cwde
leave
xchg
aas
xlat
mov
dec
mov
mov
cdq
ja
pop
mov
adc
cmp
sub
(bad)
push
xor
add
stos
sub
xchg
push
xlat
(bad)
aas
mov
aaa
pop
mov
mov
shr
adc
push
xchg
or
aad
sbb
xor
(bad)
adc
outs
push
mov
adc
inc
leave
sti
sti
js
div
hlt
pop
std
aas
ds
mov
mov
inc
sbb
in
nop
or
mov
mov
xchg
imul
outs
fisttp
cmps
xchg
rep
dec
(bad)
xor
ds
sbb
jmp
iret
xchg
(bad)
jp
inc
cli
xlat
out
mov
fist
push
cld
in
cmp
sbb
mov
(bad)
xchg
push
das
in
hlt
mov
stc
loop
in
and
test
int3
mov
jle
pusha
dec
push
rol
(bad)
cli
outs
xchg
pop
in
dec
xor
pusha
aas
repnz
mov
sbb
push
pop
jp
call
xchg
(bad)
(bad)
or
xchg
dec
xchg
mov
aam
out
dec
aas
push
lock
int3
xorps
shr
xor
xchg
stc
js
pop
add
xchg
dec
test
fisub
aas
test
movs
int
sbb
pop
push
lea
add
xor
jg
fisub
outs
jne
mov
bound
daa
into
adc
inc
stos
fwait
out
fcomp
fdivr
jmp
ds
sub
mov
scas
cs
fadd
sbb
div
or
ins
out
mov
lods
loopne
xor
loope
push
and
and
push
(bad)
xor
mov
imul
pop
mov
jne
lea
sbb
mov
xchg
iret
(bad)
push
cmp
sbb
pop
loop
and
add
jne
clc
movs
sub
sahf
sbb
movs
outs
mov
fs
fidivr
test
pop
fbstp
addr16
out
outs
jo
ins
jb
ss
sar
inc
or
cmps
jle
push
in
sub
fcom
adc
(bad)
gs
dec
pop
ins
fsubr
ins
push
pop
and
jmp
loope
retf
and
cwde
lea
das
cmp
ror
adc
std
or
repnz
cmp
(bad)
lods
push
mov
popa
adc
pop
add
xlat
daa
ds
das
mov
data16
inc
inc
adc
sti
and
in
xlat
popf
lock
lds
xchg
popa
and
ins
sbb
and
fld
jnp
sar
adc
inc
push
push
jle
repnz
or
sbb
add
dec
inc
mov
pusha
cmp
out
add
call
lods
or
or
test
or
mov
call
xor
fwait
add
dec
pop
bound
out
arpl
pushf
(bad)
out
gs
fwait
xor
add
inc
sbb
test
push
dec
adc
pop
arpl
jbe
dec
arpl
xchg
inc
gs
inc
mov
(bad)
mov
repz
addr16
pop
loop
mov
pop
ins
mov
daa
cmp
push
add
cmp
push
or
or
out
mov
aad
movs
push
push
(bad)
jecxz
je
or
push
les
push
mov
and
mov
gs
aam
sbb
mov
inc
mov
pop
sub
jp
sar
outs
cmp
iret
pop
jecxz
push
xchg
jp
in
inc
(bad)
xor
mov
cs
sub
dec
xchg
ins
fwait
inc
imul
xchg
jno
aaa
outs
add
pusha
sub
inc
or
mov
inc
js
test
fcomp
inc
pop
pop
xchg
push
jmp
mov
cmp
inc
add
(bad)
push
xchg
fcmovb
mov
jmp
xchg
mov
fisubr
or
inc
lods
bnd
jns
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outs
and
push
inc
lods
push
xor
jmp
cld
dec
les
inc
xor
jp
idiv
pusha
pushf
mov
pop
xchg
out
pop
lods
outs
ja
cld
cmps
inc
dec
call
adc
sub
retf
loop
sbb
xor
mov
cmp
mov
popa
loope
add
ret
in
rol
scas
sbb
mov
rcpps
cmp
ins
jns
mov
and
sbb
add
mov
js
mov
dec
rol
xchg
sub
repnz
xor
lods
(bad)
jae
icebp
mov
cs
std
dec
ffreep
push
pop
loope
imul
fld
iret
repnz
push
lock
and
arpl
outs
push
out
sub
fbld
inc
lahf
imul
notrack
pop
adc
in
je
cmp
js
mov
mov
cs
cmp
dec
inc
ds
das
dec
sub
pop
jne
push
inc
popa
ins
and
push
stos
ja
repnz
call
dec
push
jle
js
adc
cmp
daa
jae
push
mov
adc
sti
jecxz
sbb
mov
sub
mov
and
bound
cld
leave
loope
rol
mov
loope
mov
or
loope
sub
(bad)
jecxz
xor
dec
sub
jmp
mov
loope
inc
fld
test
sbb
or
dec
pop
push
lods
call
mov
js
mov
fwait
nop
sub
cmp
mov
jg
cwde
and
mov
retf
call
into
cmp
xchg
jmp
add
mov
cdq
jl
mov
adc
mov
mov
sbb
push
(bad)
sar
out
aad
and
inc
add
jmp
sub
pop
lds
loope
mov
jmp
(bad)
fs
stos
add
aam
push
jp
test
xchg
dec
pop
xchg
mov
stos
es
sub
data16
xor
cmps
dec
pop
jno
in
ret
dec
inc
cld
inc
mov
clc
call
and
push
push
retf
jnp
popa
cmp
call
add
and
xchg
test
rcl
jae
inc
xor
lea
outs
leave
xchg
fisubr
jmp
repz
dec
and
and
mov
repnz
mov
daa
call
mov
adc
rcr
mov
int3
fs
inc
leave
fcmovu
dec
adc
sub
mov
jg
sub
sub
jge
xchg
and
inc
add
(bad)
je
cmp
stc
lahf
outs
cld
std
jns
stos
inc
test
outs
adc
popa
(bad)
icebp
ror
add
mov
pop
push
fs
(bad)
mov
call
jno
add
loopne
cmps
pop
or
std
mov
pop
jne
iret
imul
scas
push
pop
rcl
push
in
aaa
retf
push
leave
rcr
ret
mov
dec
dec
dec
pushf
dec
mov
aaa
jno
ret
push
push
jmp
lea
aaa
fwait
loopne
xchg
arpl
cmp
inc
add
mov
xor
pop
cs
jae
add
int
or
sbb
mov
or
xchg
sbb
retf
int3
js
dec
cmp
xchg
dec
nop
xchg
mov
outs
mov
inc
out
rcr
jl
jbe
add
sub
pop
cmps
and
fisub
dec
push
enter
iret
into
std
dec
(bad)
dec
cmp
mov
es
fcom
xor
adc
jle
(bad)
jnp
(bad)
mov
cmp
xchg
adc
das
pop
cmc
add
or
popf
fistp
aad
add
add
leave
xchg
and
data16
jno
mov
jae
and
out
sub
ror
xchg
add
push
push
ror
sub
fsubr
jl
fiadd
iret
push
jmp
mov
cmps
ds
mov
add
jo
dec
lods
frstor
rcr
call
jmp
popf
jmp
and
mov
push
(bad)
(bad)
hlt
fmul
(bad)
retf
dec
pop
shl
fs
xor
int
mov
and
mov
pushf
add
fmul
mov
cmp
jne
inc
inc
retf
fsub
push
repnz
pop
stos
fs
sbb
xor
clc
fdivr
dec
(bad)
cld
add
test
cmp
mov
sti
aad
or
stos
ja
mov
xlat
and
arpl
mov
out
dec
icebp
bound
and
addr16
or
jo
pop
jmp
fcom
mov
(bad)
(bad)
jle
pop
jg
ret
(bad)
movs
in
ins
dec
sub
rcr
dec
int3
aas
mov
jle
jmp
lds
dec
push
mov
fistp
in
mov
xchg
mov
or
das
lock
fwait
jl
inc
add
outs
jnp
sahf
xor
xlat
pop
in
add
(bad)
and
(bad)
cwde
lea
fild
lods
push
pop
retf
nop
dec
ins
iret
xor
icebp
imul
and
into
in
mov
xchg
aas
pop
leave
cmc
sar
pop
repz
jb
loope
xchg
sub
cmps
(bad)
cmps
jae
inc
mov
or
popf
fidivr
lds
push
je
test
xchg
xchg
popf
mov
xlat
mov
mov
inc
pop
sbb
lods
adc
sub
lea
int
jle
mov
scas
call
xchg
int3
fs
hlt
data16
sbb
xchg
ret
fld
bswap
pushf
cmp
stos
out
sbb
ss
push
fs
rol
sbb
inc
pushf
test
jmp
(bad)
or
sbb
pop
in
mov
push
mov
dec
lea
xchg
inc
pop
cld
fs
pop
mov
gs
dec
pop
cdq
mov
test
xchg
inc
lea
lea
outs
or
bound
inc
jl
and
cmc
ret
jns
test
das
fcom
inc
xchg
sub
fiadd
adc
retf
cmps
in
push
jne
sub
sbb
mov
mov
mov
mov
pop
mov
js
adc
cmps
lds
pushf
sub
lea
stc
or
pop
stos
xor
cmps
mov
inc
fisttp
mov
sub
push
xchg
pop
or
(bad)
sbb
xchg
mov
sti
lods
mov
test
test
jge
(bad)
sbb
fcomp
mov
daa
mov
mov
sbb
stc
push
(bad)
sbb
(bad)
mov
jg
inc
dec
mov
push
loop
push
sub
xor
push
push
(bad)
inc
aaa
pop
mov
mov
rol
adc
inc
mov
(bad)
add
mov
mov
cmps
mov
xlat
call
mov
xchg
ror
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
jmp
loopne
loope
or
fbstp
sub
jb
arpl
jnp
push
fyl2x
les
push
sub
dec
iret
push
rcl
push
push
fsub
cld
jge
addr16
(bad)
and
pushf
out
jae
push
cld
adc
push
cli
or
adc
xchg
adc
test
ins
or
push
jle
mov
pop
cwde
pusha
inc
xor
add
stos
mov
mov
sbb
sub
or
ror
inc
rcl
pop
xor
aaa
cli
rol
loop
lock
fst
xchg
add
jae
in
out
sub
lock
repz
mov
out
cmp
mov
mov
adc
call
mov
ins
popf
(bad)
retf
mov
out
mov
and
in
xor
adc
fdivr
(bad)
sbb
loopne
aas
pusha
ds
imul
jnp
sub
add
xor
or
jmp
pop
ins
sbb
xor
mov
movs
dec
xor
push
je
fisub
push
(bad)
jnp
xor
les
loop
mov
adc
sbb
stos
sar
in
into
scas
into
and
repnz
add
mov
leave
xor
loope
popf
pop
shl
test
sub
cmc
int
cmp
inc
test
fadd
xchg
push
push
add
jmp
inc
add
dec
rcl
fwait
xor
jno
xchg
loopne
adc
push
ins
(bad)
jg
xor
leave
mov
ins
cmp
enter
into
mov
mov
es
xor
adc
mov
into
js
in
std
xor
sar
jl
hlt
scas
movs
jg
jno
lahf
add
(bad)
dec
mov
or
outs
push
cmp
xor
sbb
mov
dec
lods
ss
sahf
data16
int3
mov
outs
sub
cmps
mov
jne
mov
pushf
mov
and
imul
add
shr
aad
xor
mov
test
cmp
jmp
ret
retf
sti
cmp
xchg
gs
mov
std
imul
push
adc
(bad)
shl
xchg
cmc
cmps
sbb
mov
(bad)
cli
imul
out
dec
das
lock
ret
aam
push
adc
push
or
add
add
pop
mov
fisub
fist
dec
adc
pop
mov
gs
and
jb
mov
xchg
mov
pop
and
lods
push
test
add
fcomp
(bad)
cdq
jge
test
inc
arpl
pop
cmp
inc
fdivr
out
test
fcom
mov
fisttp
mov
add
sbb
fwait
repz
cs
or
inc
and
or
mov
cdq
cmp
lods
mov
test
fs
xor
inc
mov
lock
push
sub
jnp
add
mov
pop
mov
rcr
xor
mov
sbb
test
lods
jb
and
data16
push
xchg
push
aam
fild
mov
out
pop
loop
stos
test
or
push
mul
(bad)
sub
bound
shr
adc
sub
fld
shl
sub
aam
push
jg
xor
mov
add
xlat
sbb
add
ror
or
lods
not
xchg
xchg
arpl
fistp
mov
pusha
outs
inc
add
dec
push
xor
out
push
mul
sub
sbb
mov
test
jno
jbe
seto
sbb
dec
imul
cs
mov
inc
fcmove
push
lods
sub
jle
push
sbb
fsubp
mov
mov
sub
js
jecxz
cwde
or
int
leave
test
xchg
popf
pop
sahf
loopne
scas
sub
jp
loopne
call
les
fwait
sbb
mov
dec
sbb
shr
mov
xchg
jns
sub
stos
pop
sti
add
xor
sbb
jns
cmps
cmps
adc
mov
mov
push
xchg
add
or
scas
mov
pusha
and
xchg
xchg
mov
call
rcl
dec
inc
mov
pop
stc
mov
or
pop
ret
jecxz
mov
jno
adc
outs
dec
xchg
xchg
loopne
adc
es
pop
xor
xchg
jl
push
daa
std
cs
sub
fstp
je
sbb
sbb
mov
mov
pop
lods
inc
and
push
pop
dec
arpl
mov
sahf
push
mov
ins
jne
mov
mov
sub
pop
fdivr
sub
les
jne
sti
or
mov
cs
pop
xchg
and
xchg
inc
movs
inc
sar
(bad)
inc
and
xor
out
test
push
aad
push
adc
pop
jle
pop
outs
add
je
iret
mov
xor
mov
mov
and
(bad)
outs
sar
xchg
enter
mov
dec
fnstenv
pop
sbb
cmp
fild
jge
jecxz
xor
fild
sbb
test
push
stc
lock
(bad)
push
scas
push
les
jno
or
sti
jmp
dec
push
mov
loope
push
out
jo
cmps
lods
fwait
xchg
mov
and
adc
test
inc
ins
mov
push
stos
cmps
mov
(bad)
add
(bad)
xor
fcom
ins
add
inc
push
sbb
pop
cmp
retf
mov
inc
push
mov
mov
jl
inc
or
mov
ds
scas
scas
mov
(bad)
push
ins
les
jbe
mov
ins
jge
push
mov
into
dec
cli
jno
pop
jno
jmp
sub
cmp
hlt
repnz
or
rol
xchg
out
nop
fistp
gs
in
mov
cs
movs
sub
test
rcr
js
add
or
(bad)
popa
mov
test
and
push
inc
or
jge
xor
adc
xchg
iret
pop
sbb
and
into
mov
lds
mov
mov
xchg
fadd
add
lock
fwait
xor
push
xchg
sub
call
pop
cmp
mov
aam
xchg
retf
dec
sahf
mov
dec
adc
into
xlat
arpl
cs
jae
sbb
scas
mov
inc
pop
pushw
out
clc
xor
std
and
in
(bad)
fnsave
mov
popa
adc
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movs
lods
ret
jo
cmp
push
add
aas
xchg
les
pusha
sub
imul
push
pop
mov
sub
dec
out
test
push
add
loope
jae
cmps
sbb
imul
sub
addr16
sbb
in
test
fs
cmc
dec
aaa
push
icebp
cs
dec
iret
cs
sar
mov
ins
(bad)
sahf
cmps
pop
test
mov
enter
leave
in
jb
mov
shl
and
fist
xlat
pushf
rol
xor
inc
mov
gs
test
fcomp
cli
jle
xor
mov
mov
mov
mov
mov
xor
(bad)
pusha
inc
pop
sub
xor
ins
std
xor
dec
mov
push
cmps
cmp
clc
cdq
push
shr
jb
add
cli
lea
push
mov
or
cwde
sub
cmp
mov
clc
out
push
rcr
and
ja
loope
and
cwde
xor
push
in
mov
popa
inc
test
mov
pusha
out
in
jo
jmp
xchg
int3
adc
and
cld
sub
scas
mov
cmp
sub
and
ret
jge
(bad)
out
mov
mov
jle
xor
sahf
mov
mov
repnz
in
mov
scas
fsub
fisub
pop
mov
cld
in
sub
sbb
in
jbe
cmp
int3
fs
loop
jae
pop
push
es
arpl
jle
mov
mov
adc
jae
call
mov
mov
mov
jmp
nop
test
fisttp
and
bound
outs
inc
rol
popa
(bad)
inc
daa
dec
xor
push
(bad)
xchg
hlt
mov
(bad)
(bad)
shr
(bad)
stos
repnz
iret
repz
xchg
adc
div
lods
dec
fwait
dec
sub
icebp
out
out
(bad)
sbb
std
cwde
repnz
mov
cmp
adc
sahf
fcmovbe
ret
pop
jnp
test
dec
dec
mov
pop
pusha
loopne
xor
ja
scas
adc
cmp
retf
inc
cld
mov
dec
mov
ss
xor
and
sub
xor
dec
xor
or
ss
and
push
out
jnp
imul
jge
jl
dec
in
push
je
push
shr
push
add
sub
dec
das
push
fs
loopne
jmp
xor
sub
ss
jae
xchg
std
adc
push
scas
sbb
dec
and
test
(bad)
cmc
jno
cmps
jmp
(bad)
mov
adc
and
in
xor
add
mov
lods
jg
add
sbb
mov
lock
cmc
aad
xchg
inc
push
push
xchg
outs
jmp
das
cmp
sahf
ret
mov
add
imul
dec
aas
fwait
pop
add
daa
(bad)
adc
pop
adc
movs
xchg
add
add
jmp
test
mov
inc
push
push
and
mov
xor
pop
shr
call
loop
jnp
xchg
jo
mov
pusha
pusha
std
jbe
or
sbb
cwde
jns
ins
inc
popf
mov
loope
push
sbb
push
stos
cmp
mov
arpl
sar
pop
mov
jp
inc
jns
cmp
dec
jg
pop
sar
sar
mov
dec
mov
mov
dec
aaa
in
fisub
sub
inc
das
push
mov
mov
les
ror
push
dec
sbb
xchg
mov
sahf
cmp
dec
mov
xor
add
or
push
je
test
fs
je
xchg
sbb
xchg
sbb
adc
cdq
aad
pop
outs
cmp
and
dec
jae
inc
mov
(bad)
aam
out
loope
and
push
jb
xchg
xor
and
adc
adc
(bad)
jns
cld
into
mov
dec
call
or
add
pminsw
and
(bad)
jmp
pop
sahf
jns
mov
pop
mov
xchg
adc
int
push
jae
mov
jmp
add
jbe
mov
retf
add
ret
inc
popa
or
mov
scas
(bad)
cmp
xchg
gs
in
cmp
ret
or
push
jb
sub
mov
sbb
or
jp
dec
ret
mov
cdq
into
sub
xchg
push
loop
fidiv
add
aam
sub
ret
shr
movs
push
imul
mov
lea
(bad)
mov
dec
int3
lock
push
jmp
xchg
mov
adc
mov
movs
cmc
jno
jno
loop
pop
inc
xchg
std
sub
fnstenv
dec
jecxz
pop
add
push
mov
iret
pop
and
(bad)
retf
jmp
lods
mov
repnz
lea
hlt
ss
out
inc
cmc
retf
fidivr
mov
cmp
jp
cmp
sbb
es
and
icebp
cmp
adc
fadd
and
or
inc
xchg
(bad)
push
jno
lds
push
cli
addr16
xchg
pop
sub
icebp
mov
ds
in
dec
mov
xchg
mov
aam
int
fwait
pop
sahf
mov
ja
adc
enter
mov
lods
mov
shl
imul
adc
rol
jmp
sub
fs
mov
jp
sub
idiv
or
imul
and
cmp
in
dec
add
pop
imul
add
sub
outs
jecxz
fadd
leave
mov
daa
ss
dec
aaa
neg
pop
cmps
fcom
lods
jmp
push
dec
pop
daa
jns
adc
lods
cmp
jb
idiv
daa
popa
lahf
out
(bad)
cmc
gs
mov
pusha
mov
dec
adc
ret
xor
repz
mov
(bad)
sbb
or
shl
xchg
and
pop
mov
and
lock
push
mov
cmp
fistp
xchg
inc
inc
xor
out
cmp
push
jmp
mov
es
dec
(bad)
jecxz
dec
sub
push
sbb
mov
mov
in
pop
mov
mov
push
fldcw
fild
sahf
ret
cmps
pushf
jecxz
sub
mov
(bad)
fwait
inc
or
jecxz
arpl
lods
daa
enter
mov
pop
cdq
push
(bad)
mov
jbe
sub
jbe
sbb
mov
push
and
mov
jne
js
add
dec
jne
xlat
mov
xchg
fstp
or
pusha
loope
or
pushf
mov
jp
adc
mov
mov
pop
fisttp
mov
sub
xor
aad
in
xchg
imul
int
(bad)
dec
push
test
push
out
int
jbe
aad
push
mov
mov
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fld
add
jp
push
into
dec
pusha
xchg
cdq
and
add
loope
inc
add
pushf
inc
dec
cmp
sub
into
ja
mov
imul
inc
data16
repnz
popf
and
cmp
in
cmp
cmp
cmp
sub
adc
jne
inc
or
sub
sub
test
jnp
push
push
jns
hlt
sbb
inc
aam
sahf
and
jno
(bad)
dec
mov
(bad)
jb
push
sbb
sar
push
gs
iret
push
lea
lea
jecxz
jecxz
sahf
xchg
mov
loope
sti
cmp
pop
push
inc
adc
sbb
pusha
cmc
(bad)
ror
dec
mov
or
adc
aaa
pop
in
fimul
cmp
sub
cmp
mov
adc
ret
test
jl
adc
xor
(bad)
fisubr
call
jb
cmp
into
shr
adc
repnz
gs
xor
dec
loopne
ret
in
mov
sub
in
fwait
cld
out
inc
adc
xor
nop
sub
aas
std
cmp
(bad)
cmp
pop
push
rol
adc
out
fst
sub
aaa
and
inc
pop
addr16
dec
mov
sbb
jbe
pop
cmps
enter
aaa
test
mov
je
fucom
jb
push
xor
aaa
(bad)
adc
jmp
mov
cdq
(bad)
mov
pusha
sub
outs
inc
or
xchg
cmp
xchg
mov
imul
xor
add
xchg
pop
pop
arpl
pop
inc
lods
xchg
js
mov
push
inc
xor
retf
sbb
xchg
xchg
inc
sti
lds
inc
xor
inc
cmp
add
mov
dec
xchg
stos
stos
push
xlat
rol
mov
cs
mov
movs
imul
xchg
mov
push
pop
(bad)
xor
add
cmp
les
mov
xchg
aad
sub
fadd
jmp
(bad)
sbb
cmp
jmp
ret
les
mov
sub
addr16
mov
jg
fwait
imul
add
daa
shl
ret
les
scas
ins
and
(bad)
pop
enter
add
xchg
fidiv
ret
xor
es
add
out
cld
lods
cmp
cmp
sub
dec
and
push
call
shr
pushf
cmp
sbb
(bad)
mov
lgs
or
in
or
adc
xor
push
mov
cwde
jno
jge
jns
hlt
jmp
push
cmp
int
lods
jle
and
jnp
daa
movs
or
inc
push
movs
push
xacquire
xlat
sar
into
imul
pop
add
(bad)
fwait
leave
sbb
push
sub
ret
call
adc
jmp
ins
push
scas
out
cmps
sbb
fist
(bad)
push
mov
or
cld
aam
mov
inc
mov
and
xchg
push
out
mov
and
loope
xchg
push
popa
cmp
add
inc
add
inc
ss
les
xchg
(bad)
and
mov
jl
dec
add
call
add
mov
or
fs
and
xchg
sbb
pop
rol
movs
rcl
ficom
dec
adc
stc
push
outs
shr
div
adc
push
arpl
mov
retf
aas
cmp
xor
pop
jecxz
mov
push
dec
push
leave
cmp
adc
push
push
pushf
hlt
scas
fwait
test
gs
add
retf
addr16
dec
and
and
inc
mov
xlat
sub
xchg
add
(bad)
jmp
mov
ins
inc
inc
out
sub
jmp
inc
and
pop
lods
jmp
jmp
push
jo
push
cmp
push
bswap
mov
repnz
add
out
or
sub
jg
or
dec
adc
sub
inc
iret
dec
mov
ss
dec
cmp
or
aaa
adc
sub
sti
jbe
(bad)
in
rol
dec
loope
xchg
sar
push
or
jo
into
bound
sbb
and
rol
icebp
retf
fisubr
push
aas
in
mov
js
stc
xchg
jmp
mov
test
leave
dec
sbb
clc
cmp
mov
daa
inc
leave
bound
or
sbb
imul
(bad)
sti
pushf
push
dec
in
push
xchg
cmps
inc
inc
nop
jo
in
pop
lahf
test
xchg
cmp
or
loope
popa
mov
cmp
stos
in
stos
sbb
cmp
xchg
lods
push
es
sub
adc
sbb
fst
dec
std
(bad)
in
lods
mov
cmps
es
mov
pop
(bad)
sub
(bad)
or
test
loop
xchg
loopne
fwait
ret
cli
adc
xor
sbb
mov
jecxz
cmp
adc
pusha
cmc
xlat
leave
jno
ins
dec
sbb
(bad)
mov
dec
mov
das
sar
mov
(bad)
out
stos
lock
(bad)
sub
loopne
dec
jecxz
sbb
cwde
fs
lds
xor
imul
(bad)
aaa
fisttp
add
xchg
jecxz
add
icebp
(bad)
stc
jae
pop
push
adc
stos
cmps
fwait
neg
sbb
(bad)
fistp
fstp
ds
cs
cmp
cdq
rcl
push
lea
push
fidivr
or
fwait
das
inc
dec
mov
ret
data16
mov
ds
cmp
inc
iret
xchg
fisttp
adc
push
adc
or
fcompp
in
fwait
enter
and
jns
cmp
ds
mov
or
jle
rcl
loop
xchg
jne
(bad)
jg
xor
mov
hlt
(bad)
fwait
mov
inc
call
sbb
js
cmp
pop
jmp
dec
pop
jbe
cs
push
adc
push
retf
pop
pusha
mov
mov
xor
cli
or
push
push
adc
bnd
cmc
dec
adc
jp
mov
mov
lock
cmp
and
frndint
dec
push
sub
push
jmp
xor
jbe
in
aaa
popf
push
fs
hlt
mov
pop
out
mov
mov
sar
xor
dec
out
iret
jmp
into
dec
(bad)
int3
jmp
imul
sbb
(bad)
pop
or
mov
je
in
int
aad
mov
in
xor
fucomip
pusha
stos
xchg
in
sbb
inc
cmp
cmp
cli
loop
test
sub
int3
mov
dec
loop
loop
jle
jnp
pop
and
mov
retf
lahf
jmp
inc
sub
ja
xor
sbb
jg
jmp
fs
call
es
std
pusha
into
jo
sub
push
xor
sub
in
in
push
xchg
cmps
mov
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cli
mov
je
mov
mov
and
sbb
mov
push
adc
xchg
daa
pop
push
movs
jb
pop
mov
rcl
movs
jno
mov
xor
enter
add
mov
mov
adc
cmp
leave
ins
pusha
jne
rol
inc
(bad)
mov
out
pop
pop
(bad)
jmp
sbb
pop
mov
adc
mov
xchg
xchg
retf
adc
test
dec
cmps
sub
cmp
mov
and
out
std
loope
cmps
mov
(bad)
jp
sbb
cmc
aas
lea
dec
push
dec
pop
loope
cmp
test
mov
add
clc
xlat
loope
or
test
cli
add
mov
cmps
test
sub
cs
repnz
add
inc
cmps
aaa
cmc
mov
xchg
jge
sub
daa
fild
ins
add
cwde
in
jb
push
mov
mov
mov
mov
xchg
jecxz
retf
jb
je
pushf
ret
jge
rcr
sub
lea
aam
sub
mov
and
add
test
mov
pop
mov
jecxz
sub
pop
jmp
push
inc
mov
and
mov
div
gs
cmp
sub
jns
jae
popf
ds
fiadd
xchg
or
cmp
das
in
adc
daa
pop
shr
loopne
mov
ror
xor
test
fs
inc
pop
pop
jns
in
lods
sub
nop
mov
adc
xchg
(bad)
pop
inc
pop
mov
dec
push
sbb
push
movs
sbb
adc
mov
mov
push
mov
lds
in
jae
adc
add
mov
call
loope
sbb
cmp
lea
cmp
jns
push
add
sbb
fist
ret
lds
jne
ret
ret
or
out
pop
dec
sti
loope
ror
jmp
lds
xchg
ret
cmp
lahf
ins
retf
push
jns
add
add
jne
sar
retf
xor
out
jmp
inc
push
mov
inc
rol
out
xchg
ins
sub
(bad)
xchg
sbb
cs
or
push
or
or
sub
jg
jmp
pop
aam
clc
movs
cmp
dec
inc
(bad)
cld
push
shl
push
sbb
bnd
or
loop
cmps
mov
xlat
xchg
sbb
cmp
jb
rol
xor
stos
sbb
lahf
mov
fmul
call
ror
cwde
or
loopne
mov
push
cli
inc
mov
cld
jno
add
std
xor
inc
shl
daa
fiadd
push
adc
and
add
cs
xchg
daa
sbb
xor
jbe
dec
mov
cs
icebp
arpl
or
int
bound
ins
das
shl
and
mov
dec
ret
jge
pop
cmp
clc
push
jmp
inc
cs
sbb
les
loope
rcl
and
ins
repz
or
or
in
xchg
(bad)
xchg
inc
mov
das
lods
jecxz
jns
(bad)
pop
xchg
das
or
dec
dec
jl
pop
sbb
sahf
dec
adc
shr
adc
sbb
dec
push
cmp
or
push
xor
les
mov
jnp
sahf
cmp
repnz
sbb
xor
pop
jb
std
(bad)
(bad)
xor
imul
call
call
mov
jno
call
(bad)
or
bound
(bad)
lods
inc
xor
xor
and
dec
xchg
repnz
leave
fdiv
sahf
mov
loopne
out
push
outs
sbb
sti
mov
xchg
pop
cmp
push
scas
mov
xor
mov
xchg
pop
jecxz
xchg
mov
cwde
inc
loope
sub
loope
or
mov
ret
out
call
push
rcr
inc
xchg
push
fisubr
push
sbb
cmp
cli
jne
int3
pop
out
div
jecxz
adc
test
mov
mov
mov
or
xchg
jne
sub
jae
fnsave
xor
sbb
bound
xor
mov
push
not
jecxz
jmp
(bad)
and
mov
xchg
(bad)
das
sub
dec
xchg
inc
fidiv
adc
mov
adc
and
add
fimul
rol
fnstenv
push
inc
adc
push
lods
jmp
dec
arpl
mov
ror
pusha
das
jno
mul
or
cmp
leave
sti
rcl
out
inc
test
xor
retf
add
sbb
enter
sbb
adc
inc
lea
aas
loope
mov
inc
fmulp
xchg
xchg
sbb
pop
loope
lods
jb
jl
and
mov
ret
(bad)
call
rcl
lea
mov
ins
aad
push
inc
jns
or
jno
mov
xor
stc
jmp
jae
jle
pusha
loopne
xor
stos
stc
jle
jle
push
jns
jge
push
popf
popa
add
lea
dec
add
xor
fwait
pop
xor
pop
xchg
shl
pop
sub
and
push
test
adc
adc
hlt
dec
xchg
xchg
ds
int
cmp
cmps
into
mov
lea
lock
gs
cwde
or
sub
sub
jl
add
cdq
xchg
sahf
add
and
ins
ror
adc
mov
ins
mov
add
pop
fwait
jno
(bad)
fidiv
cmp
dec
call
inc
test
jns
push
inc
cmp
stos
and
dec
pop
mov
popf
jnp
test
test
jmp
clc
sbb
push
in
xchg
cmp
clc
aas
dec
pushf
scas
push
test
js
mov
icebp
xchg
lods
mov
and
leave
jg
popf
test
or
enter
add
fidiv
je
scas
shl
mov
repnz
jae
js
rcl
xchg
dec
loope
out
je
sub
popf
popa
aaa
xchg
(bad)
jmp
xchg
cmps
push
mov
inc
in
mov
sbb
pop
cwde
mov
push
ins
push
out
sub
lahf
das
xor
pop
sub
das
hlt
in
push
les
into
loop
pop
test
jp
lock
sub
mov
inc
pop
or
out
in
and
into
sbb
in
inc
cmps
fnsave
sub
loopne
dec
push
stos
mov
(bad)
sub
pop
push
adc
int
jno
sbb
cmps
or
dec
push
inc
icebp
movs
scas
movs
sub
mov
aas
pop
mov
xchg
(bad)
cmp
imul
jns
add
imul
sub
loope
jno
enter
aam
jbe
pushf
dec
ins
int
outs
pop
fldenv
mov
mov
push
daa
shl
cmps
call
sbb
je
leave
add
mov
push
cmps
bound
pushf
inc
cli
mov
movs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
push
xor
pop
cmps
inc
lea
fs
mov
jecxz
mov
jmp
mov
adc
or
jne
xor
or
fldenv
dec
inc
popa
pop
call
xchg
repnz
test
imul
arpl
mov
mov
jo
dec
lahf
pop
fistp
(bad)
xchg
test
mov
scas
push
fisttp
or
movs
adc
inc
loopne
retf
test
pop
fcom
dec
retf
ret
add
inc
or
(bad)
jmp
ficom
scas
lods
retf
dec
sub
sub
pop
sbb
push
mov
inc
pop
imul
sub
jle
inc
jae
jmp
aam
repz
outs
test
out
jno
jle
cmp
sub
repz
and
loope
loope
(bad)
jae
cmp
out
jae
js
lahf
dec
or
imul
jmp
cmc
aad
dec
mov
jge
and
jmp
mov
fmul
cli
movs
xlat
or
sbb
mov
mov
imul
jno
xchg
mov
jmp
arpl
mov
(bad)
adc
cmp
(bad)
jne
xor
add
cmp
cwde
retf
push
and
pop
mov
dec
pop
ins
mov
fsub
test
leave
cmps
lods
sahf
pop
daa
mov
push
loopne
repnz
mov
sbb
jne
(bad)
jmp
jmp
mov
out
shr
leave
mov
nop
and
int
cmp
sbb
div
aam
mov
jnp
jg
out
mov
pop
fdivr
test
and
cmp
je
(bad)
mov
stc
adc
mov
dec
fstp
gs
jmp
test
inc
jo
jno
sub
add
mov
mov
inc
mov
cmp
(bad)
fwait
add
or
cmps
int
jo
xchg
popf
fldenv
neg
mov
push
push
fisubr
dec
and
pop
jae
fwait
mov
and
(bad)
add
xor
sub
call
cmp
loopne
adc
movs
push
mov
inc
push
mov
mov
mov
xchg
(bad)
bound
mov
or
dec
sbb
sbb
pop
cmp
les
inc
xchg
jmp
cwde
rol
ret
inc
pop
or
and
sar
adc
push
sar
mov
and
call
cmp
lds
xchg
add
push
aad
(bad)
dec
js
jo
dec
movs
mov
cmp
les
repz
mov
add
jl
push
call
out
ror
inc
mov
mov
jnp
nop
pop
inc
add
(bad)
or
mov
xchg
mulps
pop
dec
(bad)
jae
cmps
mov
imul
(bad)
sbb
rcr
pop
lahf
inc
retf
push
mov
imul
ucomiss
popf
das
mov
out
stos
sub
mov
push
push
push
movs
cmp
loop
add
out
or
in
cmp
push
jns
scas
mov
mov
mov
lock
jno
in
ss
cmc
sub
jns
ficomp
push
and
fistp
mov
push
es
add
jno
movs
test
push
and
ror
xor
retf
fisttp
mov
xor
ins
xor
(bad)
addr16
in
cmp
cmp
cmp
sahf
in
std
push
cmp
lahf
sub
jo
sub
xchg
int3
test
in
int3
sbb
jbe
xchg
lods
xor
add
inc
mov
cs
sahf
dec
int
or
mov
add
jge
adc
xlat
data16
adc
push
mov
sar
(bad)
nop
(bad)
das
xchg
ja
daa
sbb
jmp
jnp
(bad)
pop
cli
or
ror
test
call
inc
mov
sbb
xchg
pop
pop
sahf
sbb
xor
sub
out
movs
mov
es
mov
pop
stos
call
rol
sbb
(bad)
fsubr
stos
adc
int
pop
push
and
xchg
push
mov
aam
mov
mov
mov
pop
push
mov
jnp
aas
and
or
cld
sbb
pop
in
xchg
addr16
popf
cmp
dec
jmp
in
jno
push
jmp
mov
icebp
xchg
jmp
cmp
cmps
jmp
test
(bad)
adc
sub
mov
mov
mov
fsub
pop
mov
jge
stc
std
pop
fwait
pop
sbb
pop
clc
gs
adc
retf
clc
adc
mov
out
popa
test
test
push
dec
pop
test
ret
xchg
jbe
ins
adc
add
shr
or
leave
jnp
dec
push
push
and
inc
repnz
jmp
loopne
mov
icebp
adc
mov
in
fs
mov
nop
int
inc
dec
and
mov
add
neg
mov
pop
into
push
fcomp
jmp
stos
mov
xchg
xchg
addr16
xor
mov
xchg
cmp
jge
call
psubusw
mov
xchg
xchg
sbb
cli
or
mov
std
jnp
dec
mov
(bad)
lock
sub
xor
fiadd
gs
in
std
push
push
add
stos
jo
cmp
sahf
sbb
cwde
and
mov
fdivr
sub
rcl
sub
push
(bad)
idiv
pop
sub
jne
scas
lea
jmp
adc
sbb
in
or
js
inc
pop
idiv
scas
dec
std
pop
bnd
push
stos
inc
push
xor
dec
xchg
sub
mov
das
jae
movs
shl
adc
sbb
push
sbb
xchg
cmc
loope
rcr
lahf
or
ins
mov
dec
or
or
add
mov
inc
dec
jb
mov
leave
mov
xchg
adc
test
mov
rol
(bad)
fs
sbb
inc
sti
xchg
nop
repz
stos
xor
xlat
dec
lea
xchg
mov
mov
mov
xor
dec
push
loop
movs
cmp
inc
ret
jnp
outs
repz
sbb
movs
cdq
outs
mov
xor
daa
(bad)
push
dec
or
dec
test
adc
shl
outs
push
jno
push
mov
daa
sub
inc
int3
pushf
add
out
clc
lahf
in
inc
or
adc
or
gs
cs
jl
push
sahf
jno
fwait
jmp
pusha
retf
sub
mov
and
mov
sbb
popf
inc
mov
push
(bad)
push
outs
sbb
mov
and
cdq
mov
and
imul
xlat
and
adc
push
enter
(bad)
push
das
add
ror
mov
add
daa
mov
in
mov
shl
dec
inc
cld
in
push
in
out
dec
repnz
mov
xlat
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lahf
sbb
popf
or
les
jmp
movs
jns
and
rcr
or
pop
nop
rcl
and
add
mov
pop
mov
in
add
jmp
xchg
cdq
fdivr
in
and
repnz
clc
ds
sar
movs
ins
pop
mov
jo
pop
stos
push
jo
push
imul
(bad)
nop
out
outs
not
inc
retf
leave
mov
sub
sub
(bad)
mov
lods
cmps
(bad)
mov
inc
icebp
imul
je
daa
adc
inc
out
mov
pop
scas
and
xchg
lahf
inc
scas
cli
out
xchg
pusha
dec
cwde
fist
jb
je
cmp
shl
and
popa
sub
mov
push
sbb
and
test
mov
xor
leave
jecxz
jno
or
ins
xchg
adc
xchg
ror
pop
jae
push
and
imul
push
xchg
jl
sahf
jle
iret
(bad)
addr16
xchg
jne
int
xor
jne
daa
gs
mov
jns
loopne
push
std
xchg
rol
pop
cmp
call
push
push
xchg
and
mov
movs
mov
push
dec
and
mov
adc
out
in
mov
dec
and
mov
pop
imul
(bad)
pop
xchg
mov
add
mov
lods
pop
pop
cmps
mov
cmp
xor
into
cmp
push
add
js
lods
push
ret
jo
xor
xlat
je
add
in
mov
pop
(bad)
pop
cmp
or
retf
dec
and
fcmovu
or
arpl
int3
leave
lock
or
mov
loopne
or
sub
mov
xlat
stos
mov
loope
ret
outs
dec
inc
or
fwait
xlat
jno
xor
mov
call
adc
repnz
mov
xchg
xchg
push
(bad)
mov
std
bsr
aad
ss
sbb
rcl
js
not
retf
jnp
(bad)
xor
popf
mov
mov
mov
loope
mov
sbb
jg
xchg
push
ins
inc
mov
ins
push
cmc
or
xor
push
mov
jnp
ret
xchg
and
btc
movs
ffree
sub
inc
fnstcw
sbb
in
popa
cmp
pop
pop
or
inc
dec
mov
sbb
cdq
sub
adc
repnz
(bad)
loope
das
push
test
push
retf
mov
icebp
loope
fsubr
into
or
xchg
call
cmp
sbb
imul
in
cdq
xchg
push
pop
(bad)
inc
pop
sbb
xchg
test
(bad)
sub
and
lods
add
mov
jmp
aad
icebp
and
addr16
out
dec
ret
or
cwde
xlat
(bad)
jmp
mov
jb
jne
sar
rol
cmp
shl
nop
shr
fisub
pop
cmc
cdq
out
pop
pop
lock
outs
mov
ror
hlt
dec
movs
lea
mov
jbe
jge
jmp
jb
dec
inc
js
retf
scas
xchg
add
mov
loope
mov
or
enter
outs
rol
cmp
scas
mov
jne
mov
or
out
test
mov
stc
dec
push
arpl
push
shr
lods
and
add
movs
loope
scas
into
or
push
lods
cmp
cmp
call
xchg
adc
pop
mov
mov
clc
cmp
shr
mov
call
inc
jne
sti
in
mov
les
inc
inc
or
dec
pop
sti
xchg
jmp
enter
scas
enter
dec
ret
test
jmp
ret
icebp
push
out
aam
les
sar
or
cli
mov
leave
ret
loop
daa
(bad)
in
shl
enter
in
scas
mov
push
pop
loop
lahf
dec
inc
lods
movs
cmp
lods
mov
shr
jno
nop
outs
mov
mov
jae
out
or
xchg
xor
xchg
push
add
inc
pop
repnz
sbb
xchg
mov
test
pop
out
sar
repnz
sahf
mov
xchg
push
cmc
dec
rol
aaa
or
(bad)
adc
call
dec
xchg
mov
mov
imul
(bad)
sub
rcl
and
xor
ffree
jmp
arpl
daa
xchg
sub
jne
arpl
fstp
scas
mov
pop
shl
(bad)
shrd
add
sub
inc
stos
cmp
push
hlt
push
popa
push
retf
mov
loope
and
sbb
pop
push
mov
frstor
push
sbb
ins
addr16
test
jbe
into
xor
cwde
inc
outs
and
lods
movs
xor
sti
mov
push
(bad)
jns
sub
sub
mov
xchg
into
push
xor
dec
xchg
sbb
das
mov
pop
sub
aas
xor
into
sbb
cli
outs
fucomip
movs
dec
pop
mov
cld
scas
sbb
repnz
out
or
out
stos
fsubr
add
mov
cmps
add
rcr
(bad)
xor
lods
sbb
xchg
mov
daa
jo
ins
pop
xor
or
call
mov
(bad)
shr
mov
mov
push
sub
dec
jmp
daa
clc
icebp
repnz
fistp
lock
mov
cmp
jge
clc
add
das
lea
pop
xchg
aad
je
cmp
jmp
cmps
cmp
inc
ret
test
sub
mov
xlat
fs
cmps
pop
inc
rcl
push
push
inc
(bad)
pusha
pop
adc
call
out
mov
sub
inc
xor
push
aas
sub
push
xlat
setge
lods
sbb
inc
enter
test
lahf
in
mov
in
imul
xchg
test
inc
xchg
add
stos
dec
out
js
jnp
mov
xor
fmul
cmc
or
es
add
xchg
xchg
push
sahf
test
repnz
push
repz
ror
pusha
xchg
(bad)
stos
jmp
imul
sub
xchg
mov
pushf
lds
xor
in
pop
out
jnp
rcl
retf
inc
mov
mov
jb
pusha
lods
inc
mov
and
aam
clc
sub
mov
addr16
inc
enter
xlat
dec
mov
sub
arpl
ja
iret
into
sub
push
cmp
(bad)
(bad)
jge
sbb
mov
pop
fcom
push
mov
addr16
repnz
pusha
ret
imul
cmp
mov
push
es
mov
cmc
ror
jmp
sbb
sahf
movs
fsub
or
inc
test
push
pusha
mov
scas
cdq
pop
push
jnp
push
mov
xchg
sbb
ret
test
out
les
stos
mov
bound
mov
vmovd
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
cwde
push
dec
in
dec
fsub
add
xor
sar
movs
push
add
stc
add
pop
mov
addr16
mov
pop
sar
fwait
inc
mov
out
pop
es
popa
repnz
fs
jnp
mov
dec
mov
out
js
rcl
cwde
adc
add
aas
xor
ins
ret
nop
fwait
loopne
and
das
mov
sbb
aam
mov
mov
aam
jne
retf
int3
mov
adc
aad
out
add
popf
ja
fbstp
xor
test
cmc
aas
arpl
xchg
mov
pop
test
mov
jae
leave
xchg
cs
into
ret
leave
mov
push
in
sub
inc
inc
repnz
fmul
sahf
sbb
call
movs
(bad)
xor
and
cmc
sahf
push
inc
mov
ins
push
mov
mov
cmc
or
fst
es
push
xchg
cmp
and
dec
sbb
dec
mov
stc
xor
dec
add
lds
retf
in
ss
(bad)
push
icebp
adc
cdq
in
xchg
repnz
and
jmp
pop
mov
push
lock
test
pushf
or
inc
push
ss
cli
loopne
std
xor
jmp
cli
mov
xchg
test
mov
cmps
sub
push
mov
or
call
mov
and
ds
xchg
push
dec
out
pushf
jno
push
mov
or
dec
fsubp
call
lods
outs
lea
cs
mov
js
ds
hlt
in
aad
imul
in
dec
les
test
sbb
shr
pusha
cwde
push
jno
or
and
aaa
pop
jbe
int
jnp
pop
stc
js
stos
shl
ret
and
mov
add
add
cmc
pop
fcmovbe
jp
sub
dec
inc
lods
adc
hlt
mov
ror
sbb
ret
xor
sub
fistp
les
pop
dec
test
popf
mov
test
mov
shl
jmp
inc
sbb
stos
out
(bad)
out
xchg
mov
call
retf
or
movs
pop
cs
(bad)
push
aad
lock
mov
xchg
dec
mov
out
imul
jl
js
xchg
ins
inc
mov
jg
cmp
repnz
dec
mov
xrelease
lock
mov
out
stc
fisubr
push
movs
cmps
inc
inc
jge
cld
push
in
das
mov
mov
lahf
shl
call
out
in
add
div
adc
in
ficomp
mov
inc
ins
clc
mov
ror
or
mov
mov
test
mov
and
and
mov
outs
aas
add
sbb
shl
fwait
or
jae
aas
enter
push
imul
arpl
cmps
mov
push
lods
pop
cmp
and
ins
xchg
push
or
dec
inc
and
les
retf
mov
js
xor
jl
push
test
and
xchg
dec
ret
idiv
ffreep
sub
jne
icebp
(bad)
dec
nop
xchg
leave
stos
and
scas
inc
push
push
(bad)
or
mov
mov
in
je
std
lea
sbb
push
rol
push
jmp
pop
out
repnz
retf
fisttp
mov
cmp
pop
movs
push
push
out
imul
pop
out
mov
cmp
scas
inc
add
dec
mov
out
inc
fmul
clc
les
outs
jb
sbb
(bad)
mul
push
sbb
xchg
dec
fild
jle
adc
mov
push
cmp
adc
pop
cmp
js
cld
push
xor
fs
and
jbe
xchg
and
sub
mov
push
dec
mov
jl
mov
dec
xor
inc
jmp
jnp
jo
xor
(bad)
mov
clc
loop
xchg
mov
fs
jecxz
pop
mov
push
jo
cli
ret
cmp
mov
xchg
inc
hlt
xor
hlt
je
or
(bad)
outs
push
icebp
test
not
aam
jnp
and
fld
ror
sbb
or
add
or
jl
sub
pushf
add
mov
(bad)
aam
arpl
mov
and
xchg
cs
aas
es
jl
add
adc
mov
cmp
ins
xchg
jns
and
cmps
movs
sbb
leave
push
mov
push
arpl
xor
adc
add
retf
xchg
rcr
pop
lock
mov
out
mov
aam
adc
(bad)
inc
mov
dec
cmp
mov
sbb
repnz
mov
mov
inc
shl
mov
xor
or
inc
es
jae
shr
or
add
cmp
out
cld
sub
cmp
push
dec
xor
push
xchg
jno
mov
mov
mov
xchg
xor
jmp
inc
imul
js
sahf
mov
pop
jecxz
mov
sbb
mov
xor
mov
lock
ret
int
mov
and
pop
push
ror
jns
fsub
cwde
rol
inc
sbb
inc
dec
(bad)
out
xor
jge
stos
fistp
jle
inc
dec
jmp
data16
mov
mov
lock
pushf
dec
aas
in
stos
sub
mov
push
pushf
sbb
call
mov
in
push
mov
std
push
push
pop
ja
into
sti
inc
sub
movs
movs
call
retf
cmps
cmp
push
fldenv
mov
and
mov
xchg
es
stc
inc
popa
adc
data16
push
dec
pusha
inc
mov
pop
inc
movs
enter
jle
jle
mov
fbld
ja
adc
inc
ror
mov
in
xor
test
inc
mov
in
(bad)
in
mov
push
stos
adc
cmps
sbb
daa
cmc
pop
adc
inc
repz
test
xor
daa
mov
out
test
movs
mov
xchg
sbb
sbb
and
and
dec
imul
cmp
push
es
cwde
frstor
jg
sbb
jbe
das
shl
and
cmp
mov
xchg
add
(bad)
cmp
(bad)
pop
mov
dec
xchg
fst
outs
(bad)
or
mov
cmp
xor
sbb
jne
fidivr
pushf
in
jne
inc
mov
cmp
retf
in
repnz
jns
loope
jl
ins
test
jle
imul
fisubr
mov
test
test
shl
retf
or
jle
adc
adc
pop
push
mov
add
movs
cmp
out
inc
int3
out
jb
mov
cld
stos
jl
pushf
xor
cmp
mov
xor
jo
push
mov
stc
fstp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
xor
pop
aad
push
cmps
je
cmp
popf
xchg
add
sbb
out
fnstsw
mov
pop
xchg
xchg
cmc
fwait
cmp
sbb
inc
xor
jne
push
out
jge
push
xor
ins
mov
push
jnp
test
mov
cli
jbe
out
outs
sbb
push
shr
pextrw
sub
add
les
movs
jl
pop
test
lahf
addr16
push
in
push
lods
pop
std
mov
inc
sub
add
int3
xchg
push
or
mov
ficomp
mov
movs
lea
dec
push
adc
leave
mov
sbb
int
movs
leave
jge
pop
sbb
jge
push
pop
add
adc
or
in
cld
ja
stos
fstp
pop
pop
mov
mov
pop
movs
add
and
add
or
cmp
mov
or
mov
push
xor
sub
sbb
xchg
jb
rcl
bound
cld
femms
scas
jnp
sbb
sub
cmp
push
loop
leave
or
cmp
push
mov
lds
cdq
movs
mov
push
loopne
push
or
pop
cli
sbb
sub
and
stc
xor
add
and
int3
loop
or
(bad)
jno
jb
mov
es
adc
out
cmp
jg
test
cdq
pop
sub
repz
add
pop
mov
sub
(bad)
push
add
push
add
inc
mov
push
mov
cmp
jmp
push
fld
push
cmps
fld
mov
out
test
sub
add
lea
cdq
mov
dec
out
and
(bad)
adc
sub
and
nop
push
adc
cmps
(bad)
cwde
lock
mov
xor
push
(bad)
inc
movs
repz
sahf
jp
(bad)
cmps
xchg
jae
movsx
jg
adc
fmul
xchg
xchg
es
iretw
fild
pop
aaa
sahf
jnp
dec
jae
or
fsub
push
rcl
into
xor
int3
out
je
in
hlt
mov
jmp
ret
cmps
sub
jnp
xchg
in
adc
shr
sub
lock
xchg
dec
cld
dec
(bad)
dec
push
sub
pop
add
push
mov
cld
sub
cmp
cmps
pop
xchg
jb
inc
push
dec
mov
es
int
dec
mov
pushf
repnz
imul
jae
repz
sub
jbe
fiadd
out
call
sahf
rcr
pop
inc
(bad)
out
shl
loopne
cld
sti
cmp
push
push
and
rol
fcmovne
pop
into
mov
xor
out
fcomi
push
jmp
retf
stos
aam
inc
jge
les
pop
mov
ficom
inc
push
push
xor
jbe
push
xchg
jle
mov
xor
inc
mov
(bad)
sbb
out
and
out
leave
xchg
xor
sbb
push
xor
mov
enter
xor
jnp
adc
mov
aas
mov
sub
and
outs
pop
pop
hlt
add
fwait
movs
inc
xlat
mov
(bad)
cmp
out
bound
xchg
scas
in
add
test
jb
loopne
inc
xor
push
mov
xchg
inc
xor
jbe
inc
faddp
or
mov
jmp
cmps
aaa
pop
int
out
pop
fist
mov
pop
lods
pusha
pop
mov
pop
and
iret
fistp
and
sbb
int3
out
pop
(bad)
and
aaa
jae
mov
sub
cwde
aad
hlt
arpl
(bad)
cmp
dec
loop
inc
mov
cli
pop
inc
cld
mov
push
les
xchg
daa
rcr
mov
jge
add
inc
test
outs
add
xor
icebp
retf
xchg
xor
mov
mov
dec
xchg
cmps
xor
and
aaa
push
inc
arpl
mov
icebp
mov
mov
xchg
cli
sub
mov
and
pop
shl
std
jle
loop
fidiv
mov
sbb
pusha
fadd
into
cmp
call
cld
or
jl
adc
in
test
push
push
pop
pushf
(bad)
imul
push
imul
push
cmp
movs
movs
mov
push
jb
mov
fsubp
out
cld
lods
jle
sub
ret
inc
or
js
xor
stc
aas
mov
mov
dec
jnp
sar
xchg
mov
ss
retf
mov
jno
mov
jnp
push
test
out
mov
ror
xchg
jne
out
std
aaa
adc
hlt
shl
cs
ja
or
mov
icebp
ins
daa
add
div
adc
into
ret
inc
mov
div
sub
dec
lods
xor
xor
outs
mov
mov
push
cdq
rcl
outs
adc
cwde
in
push
aas
or
mov
mov
push
movs
push
dec
mov
dec
out
int3
loope
sbb
or
hlt
push
pop
jecxz
inc
clc
and
dec
jno
test
sbb
mov
into
in
fs
je
lds
fs
iret
xor
mov
sub
int
test
pushf
fnstcw
jl
push
pop
pop
cs
aad
sub
push
aaa
pop
mov
dec
rep
mov
or
(bad)
test
sub
or
outs
out
dec
jb
add
mov
adc
movs
jg
sbb
cli
(bad)
lock
xchg
mov
xchg
mov
int
pop
icebp
and
loop
cmp
neg
push
push
sub
add
into
pop
jge
imul
loop
mov
movs
sub
ja
xchg
push
jmp
sbb
adc
xor
ficom
sub
pop
adc
bound
fcom
mov
mov
ret
retf
ds
inc
pusha
cmps
push
out
mov
aaa
das
int
push
icebp
pop
in
dec
lods
fisttp
call
call
jmp
mov
jb
fs
cwde
ja
ins
inc
outs
mov
enter
imul
pop
jecxz
cld
sti
aad
loopne
jmp
and
das
in
pop
les
adc
retf
dec
fld
call
jge
push
sti
in
sbb
data16
pop
jge
xor
cmps
mov
jle
add
ror
hlt
(bad)
inc
in
js
push
scas
or
xchg
mov
sar
stc
jmp
cli
icebp
and
ret
inc
sahf
retf
mov
enter
outs
xor
sub
fld
xchg
and
clc
retf
out
mov
lock
ds
scas
mov
out
inc
and
daa
sbb
mov
mov
aas
push
int3
pop
dec
and
sbb
lea
jns
cmp
mov
iret
add
sub
(bad)
push
mov
pop
jb
ret
xor
pop
add
loopne
movs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
lock
pop
and
verw
cwde
jmp
popa
sub
imul
rol
lods
jl
xor
les
or
or
jl
xchg
mov
push
icebp
scas
aad
ror
mov
mov
shl
jmp
sahf
mov
xor
pop
fwait
mov
pop
mov
xchg
bnd
dec
outs
js
adc
aam
repz
icebp
sbb
xor
cmc
or
in
mov
inc
add
mov
mov
sub
cmp
dec
and
inc
or
jne
mov
retw
scas
ja
mov
xor
mov
xchg
pop
out
mov
lods
jb
leave
addr16
lock
rol
rcl
xor
cmp
xchg
xlat
sbb
mov
cmp
add
les
cmp
(bad)
sbb
mov
cmp
retf
cmp
adc
inc
dec
into
cmc
in
xchg
jecxz
in
xor
push
mov
(bad)
pop
mov
pop
inc
sub
mov
sbb
dec
mov
mov
xor
js
pop
into
rcr
adc
fldcw
movs
pop
push
jo
mov
cli
out
adc
and
into
mov
adc
mov
sbb
cmp
cmp
mov
cmc
in
dec
repnz
sub
adc
cmps
or
pop
push
or
mov
inc
sbb
cwde
push
push
pop
fucom
repz
jge
sbb
lock
loopne
(bad)
mov
loopne
retf
cmp
rcr
xlat
jmp
sub
ror
cmp
cmp
mov
sar
cdq
cdq
fs
or
and
sbb
popa
cmc
shl
js
aam
fidiv
sub
jmp
ja
pop
mov
mov
loopne
or
push
jmp
popa
mov
mov
ret
scas
mov
and
mov
cld
shl
push
into
std
ret
stos
mov
fcmovu
jno
mov
inc
jle
push
mov
ss
inc
mov
inc
dec
popa
mov
retf
pop
or
sub
pop
add
cmp
mov
pop
idiv
out
call
test
test
stc
sbb
stos
lock
stos
adc
pop
pusha
out
dec
dec
jns
mov
and
fcomp
mov
iret
movs
aam
jne
adc
jl
mov
or
xor
sbb
mov
neg
jns
adc
mov
pop
push
js
add
mov
pop
(bad)
jp
pop
loopne
sbb
jae
dec
es
and
js
je
mov
mov
sub
push
and
jno
and
mov
push
pop
aaa
add
pop
sub
addr16
cmps
pop
adc
cmp
sti
in
adc
sub
lods
pop
pop
out
jb
repz
rcr
mov
int3
and
push
sub
int
mov
sar
xchg
out
ins
out
push
icebp
dec
(bad)
mov
dec
adc
ins
adc
adc
mov
jb
fnstenv
xchg
mov
mov
inc
std
mov
dec
stos
inc
lea
iret
(bad)
jmp
jge
gs
test
scas
pop
mov
add
rcr
dec
mov
(bad)
sbb
fnsave
push
cli
data16
lahf
out
sahf
into
xchg
mov
je
adc
add
clc
adc
sbb
jno
mov
fst
inc
sar
inc
lahf
mov
pusha
das
mov
cmp
call
je
pop
mov
int3
mov
popa
ss
xor
and
jnp
xchg
cmp
retf
mov
xchg
jb
push
or
dec
jno
out
ret
ret
cmp
sub
retf
add
aaa
cmp
jmp
mov
popf
xchg
or
add
xor
dec
loopne
lds
int
sbb
inc
add
sub
mov
int
mov
sbb
out
int3
cmps
div
stos
and
and
cmp
or
lods
cmps
jp
and
cdq
push
inc
retf
push
iret
cs
mov
in
adc
(bad)
adc
fldcw
inc
adc
scas
or
adc
push
or
fcom
mov
mov
in
push
cmp
imul
int3
mov
xlat
mov
fpatan
outs
aad
jmp
not
je
adc
xchg
and
push
pop
enter
int3
sbb
cmp
shl
jns
add
jae
fnstenv
and
push
adc
imul
rol
jp
int
(bad)
sbb
das
sbb
sbb
xchg
xor
mov
mov
or
add
(bad)
pop
rcl
mov
icebp
cmp
addr16
rcl
lods
imul
pop
sub
push
popf
sbb
or
or
push
mov
push
cli
addr16
dec
jmp
cdq
add
pop
add
inc
enter
adc
xor
retf
jmp
mov
dec
push
sbb
sub
ret
mov
cmps
pop
aaa
out
xchg
test
dec
test
mov
adc
int3
push
or
in
xchg
das
out
xlat
in
in
das
fcom
dec
cmp
inc
jmp
jbe
shl
movs
adc
test
mov
mov
push
mov
daa
ss
mov
mov
push
das
(bad)
push
sahf
data16
ds
and
ja
cs
push
leave
mov
adc
out
sbb
dec
cmp
data16
cmps
pop
fidiv
or
mov
rcr
nop
jnp
mov
sub
fwait
and
les
data16
(bad)
sub
push
in
scas
xor
cmp
adc
push
adc
(bad)
in
xor
lods
sbb
ret
cs
add
mov
scas
cs
mov
mov
add
imul
es
mov
shl
inc
sti
and
dec
fsubr
mov
cmc
mov
xor
push
push
pushf
jno
imul
jp
adc
inc
fidiv
xchg
data16
fild
xor
pop
call
out
mov
aad
sti
inc
(bad)
stos
aaa
pop
(bad)
aam
loope
and
sar
add
push
cmps
in
cmc
test
jle
dec
ins
inc
and
jg
adc
mov
jno
enter
adc
call
sbb
mov
add
cmp
cdq
fild
sbb
and
ins
push
and
sub
pushf
mov
nop
fnstenv
aam
stos
mov
sbb
jg
mov
sbb
js
mov
add
scas
pop
hlt
shl
sbb
loope
jge
dec
or
or
jnp
mov
jae
mov
sub
push
add
ficom
leave
and
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aam
bnd
lods
movs
pop
data16
loope
add
loope
ins
or
je
out
enter
das
aam
mov
fstp
into
(bad)
int3
adc
jle
sbb
mov
cld
cwde
cmp
adc
xor
pushw
cmps
mov
adc
xchg
cld
push
imul
(bad)
stos
pop
pop
mov
scas
in
dec
int3
xchg
loope
xor
test
dec
xchg
dec
sbb
and
xchg
mov
xchg
jmp
mov
mov
inc
push
cmc
dec
xor
je
jbe
(bad)
out
int3
mov
ret
or
hlt
call
iret
sahf
les
jmp
sub
jns
cmp
in
mov
(bad)
in
jne
mov
dec
dec
cs
xchg
ins
mov
jae
or
movs
xchg
hlt
(bad)
neg
dec
cmp
dec
cmp
and
scas
pop
ja
leave
xchg
xchg
xchg
ficomp
sbb
lock
mov
shl
jo
cli
data16
lods
stc
mov
int
cmp
cdq
retf
mov
xor
inc
fxch
jbe
jmp
(bad)
mov
into
mov
sbb
mov
jae
repnz
ins
leave
hlt
pop
js
hlt
cmps
test
add
and
nop
out
pop
dec
fisub
inc
in
mov
add
jmp
jnp
inc
ret
push
int
push
push
sub
inc
mov
pusha
test
sbb
addr16
xchg
pop
in
add
cli
dec
cmps
or
ror
out
neg
jbe
popf
mov
xor
or
out
cdq
jmp
pop
repnz
xchg
cli
xchg
jmp
and
aaa
sti
pushf
xchg
xchg
sub
and
mov
lods
fcmovbe
jo
das
not
jle
imul
xchg
mov
pop
call
push
js
adc
push
cmp
rcl
hlt
rol
xchg
pop
pop
mov
movs
cmp
sbb
sbb
mov
jle
mov
int3
fmul
mov
and
out
jno
xchg
jmp
ins
cs
ss
dec
pop
mov
cmps
idiv
jl
xchg
ret
sahf
imul
pop
mov
and
and
popf
add
xor
or
sub
inc
fld
mov
inc
sbb
xor
mov
inc
lds
in
jb
lock
jp
mov
ja
enter
ss
int
adc
lock
lods
das
sub
and
mov
cmp
xchg
or
rol
es
or
(bad)
outs
cmps
xor
jp
and
cmps
jno
out
add
loopne
mov
mov
(bad)
jnp
int
inc
and
sbb
mov
popf
jne
test
bound
jecxz
or
xor
aaa
out
jg
cmp
(bad)
xchg
inc
scas
iret
sbb
push
inc
mov
stos
jb
jl
sbb
adc
and
aaa
ins
test
push
push
repnz
xchg
pusha
pop
add
test
xchg
inc
jmp
and
sti
cmp
outs
not
pop
inc
test
out
jb
push
xchg
mov
xchg
and
add
test
lods
mov
js
aas
add
jl
mov
mov
loope
mov
mov
stos
pusha
xchg
inc
addr16
enter
pop
mov
jle
dec
(bad)
adc
push
call
fcmovu
pop
dec
test
ins
adc
pusha
add
xor
pop
sbb
push
aad
outs
ins
mov
mov
and
fild
jg
imul
movs
xor
popa
cmp
dec
test
xchg
push
or
inc
sub
shr
icebp
mov
call
loope
lds
not
cmc
hlt
xchg
dec
adc
mov
test
ficomp
inc
mov
or
pusha
clc
hlt
mov
shr
clc
cdq
movs
test
mov
pop
jecxz
call
mov
sbb
inc
(bad)
(bad)
nop
lods
aam
call
jecxz
mov
mov
pop
inc
pmovmskb
int
mov
aad
call
es
mov
inc
arpl
mov
xor
test
in
sub
mov
adc
outs
dec
fidivr
fsub
mov
lock
arpl
out
hlt
test
outs
mov
inc
push
cmp
lahf
shl
idiv
jnp
clc
dec
jmp
jne
fidivr
(bad)
ins
jp
popa
test
das
in
in
or
inc
push
outs
inc
sahf
inc
(bad)
or
aad
mov
fptan
jp
sub
into
int
adc
sbb
(bad)
ja
cmp
jbe
int
fidiv
ins
in
and
loopne
pop
pushf
mov
xchg
imul
icebp
lods
jb
or
das
xchg
loope
cmc
jl
jae
xchg
inc
dec
ficomp
inc
ror
jno
popf
leave
fld
fist
test
fldcw
and
ror
pop
mov
xchg
sbb
(bad)
pop
out
xor
inc
popf
fsub
sahf
ja
xchg
ss
lock
sub
pop
enter
nop
and
jns
arpl
int3
cmps
push
dec
xor
mov
adc
rcr
fld
(bad)
push
mov
fs
or
mov
gs
pop
(bad)
cmp
scas
fnsave
mov
jae
and
fwait
int3
mov
push
loopne
and
movs
and
les
iret
(bad)
aad
cdq
gs
sti
popf
into
aad
push
and
push
rcl
xchg
mov
sbb
sbb
mov
inc
cs
cld
xor
xor
out
dec
mov
cmp
fstp
pop
cmp
pop
out
mov
add
push
imul
xchg
sub
mov
iret
inc
mov
or
mov
dec
cmp
jo
inc
sub
add
sub
icebp
mov
nop
(bad)
cmp
xor
and
in
jp
sbb
in
push
jbe
lods
xchg
pop
xor
mov
jg
adc
(bad)
or
test
addr16
(bad)
loope
inc
add
add
cmps
fcmovb
or
pop
mov
cmp
push
movs
inc
cmp
fnstcw
and
imul
or
rol
xchg
jo
xlat
adc
rcl
loope
fcmovb
mov
cmps
popa
fwait
add
fdivr
sbb
mov
(bad)
push
inc
jno
ins
dec
cdq
adc
je
jmp
in
mov
sub
movs
xor
or
sbb
call
test
mov
add
retf
daa
xchg
lahf
mov
xchg
mov
jg
int
dec
jp
stos
mov
xlat
mov
loop
add
sbb
ins
pop
pop
mov
fistp
(bad)
addr16
push
jno
push
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
sbb
adc
dec
add
adc
jmp
mov
les
adc
sar
pop
ficom
clc
sub
cmp
and
movs
call
fucomp
sub
rol
mov
sbb
push
cmp
inc
imul
pushf
pop
add
popa
or
int3
je
fstp
fwait
cmp
aam
jmp
mov
sahf
pop
or
dec
lods
xor
rcr
lods
popf
rcr
xchg
push
pop
mov
imul
jb
imul
mov
xor
test
fld
test
stc
sub
mov
push
mov
test
ss
mov
bound
lods
and
lea
jmp
rol
xor
loop
xor
mov
lds
pop
rcr
dec
inc
mulps
rcl
js
test
fs
das
adc
dec
jl
imul
and
aam
and
cmps
aas
pop
shl
sbb
cmps
jle
leave
das
sub
les
push
push
dec
ret
loop
(bad)
leave
ins
loopne
popa
retf
scas
push
shl
and
xor
dec
retf
nop
sub
int3
adc
xor
(bad)
push
pop
or
int
lahf
inc
aad
outs
ja
mov
xchg
push
fst
push
mov
inc
ret
inc
push
das
push
jb
(bad)
xchg
xchg
inc
jecxz
sub
and
aas
xor
dec
repnz
jns
xchg
rcr
push
xchg
xor
cld
sbb
xchg
(bad)
push
pop
popf
pop
and
push
pushf
sub
jns
adc
enter
mov
pop
(bad)
pop
shr
add
inc
rcr
lods
ret
mov
or
xor
or
xor
pop
cmp
sbb
into
sbb
and
les
ror
and
ret
push
adc
push
and
xchg
stc
xchg
xchg
mov
dec
mov
ss
mov
mov
lahf
push
mov
js
jg
sar
dec
test
inc
dec
pop
mov
mov
sbb
jecxz
lock
sbb
and
inc
add
pop
inc
fld
adc
inc
jle
jecxz
mov
cwde
or
xchg
add
retf
nop
jmp
inc
mov
dec
(bad)
rcl
rcr
adc
pusha
and
int3
movs
out
jl
jp
fist
arpl
enter
jae
xchg
es
and
ficom
ss
aaa
in
jnp
add
xchg
aas
test
cmps
xchg
mov
push
mov
sbb
add
mov
movs
push
nop
inc
lock
sbb
fistp
inc
out
addr16
mov
cld
loop
or
xchg
jp
in
or
jmp
inc
push
repz
mov
(bad)
les
cmp
neg
jnp
cli
movs
pop
daa
sbb
cs
xchg
pusha
add
test
rol
add
pop
ins
sub
xor
popa
mov
lahf
add
jp
mov
ret
xchg
xchg
ret
and
mov
sbb
jne
sti
jmp
pop
xchg
sub
cmps
test
push
je
das
adc
jnp
adc
outs
xor
sub
out
sar
(bad)
push
dec
mov
sub
jbe
out
mov
xchg
sub
adc
stc
sti
push
adc
pop
into
inc
sbb
mov
aad
(bad)
xchg
sbb
pushf
push
popa
xor
mov
test
pop
clc
xor
pop
or
push
jae
movs
sar
xchg
push
lahf
push
pushf
aad
dec
jmp
fist
iret
sub
mov
cmp
cld
mov
and
movs
js
rcl
call
test
les
int3
hlt
fmul
fsub
int3
js
adc
ins
mov
movs
arpl
cmp
sbb
je
xor
mov
(bad)
jno
or
push
xchg
into
mov
stc
fld
outs
or
mov
les
push
inc
adc
clc
stos
pop
repnz
out
in
leave
cwde
sub
sbb
fldl2e
and
jg
scas
cld
pusha
jg
mov
sbb
inc
xor
ror
mov
cmp
shr
or
push
inc
call
jmp
cld
lea
dec
pop
xor
fsub
pop
cmp
(bad)
in
movs
retf
inc
xchg
cmp
adc
cld
pop
inc
cwde
fisubr
push
pop
xchg
std
out
daa
add
pusha
adc
mov
inc
mov
das
in
xor
push
pop
jnp
(bad)
fisttp
loopne
outs
ret
mov
sbb
jb
mov
fadd
add
sub
jmp
retf
sbb
mov
dec
clc
retf
inc
cmp
mov
xor
into
xor
push
mov
(bad)
mov
je
ja
inc
sahf
(bad)
pop
or
imul
ret
imul
mov
aam
inc
outs
nop
dec
add
and
data16
mov
push
(bad)
pop
mov
xor
out
pushf
or
and
js
xchg
push
popa
pop
rcr
jmp
fcmovnb
or
mov
out
das
lea
shl
les
fstp
js
jbe
push
inc
sub
gs
vprotq
add
jbe
sbb
jae
ja
sub
sbb
inc
dec
adc
in
xchg
ror
mov
lea
es
adc
pop
push
lahf
cmp
movs
in
jl
or
das
(bad)
jg
neg
stos
pop
ins
add
push
mov
out
xor
dec
push
xor
dec
daa
fmul
outs
popa
dec
add
add
shr
xor
inc
dec
fcmove
fst
mov
push
sub
jo
out
and
xor
mov
lods
xor
mov
pop
(bad)
cli
fld
call
aaa
or
in
test
fs
div
loop
xor
push
mov
stos
movs
jnp
inc
test
dec
out
xchg
aas
inc
pop
out
imul
in
inc
dec
push
sub
inc
or
sti
loope
popa
ins
jnp
or
mov
lock
fild
inc
pop
cmp
dec
xor
pop
jg
mov
dec
shl
mov
and
jle
mov
xor
enter
dec
lea
jne
ror
push
xchg
gs
jmp
mov
and
add
xchg
or
jmp
mov
adc
or
adc
stos
xor
js
mov
xchg
or
das
jp
sub
jae
mov
inc
push
mov
lock
xor
push
mov
adc
pop
jp
xor
(bad)
xor
xor
mov
jg
mov
sbb
and
ficomp
jmp
jmp
outs
outs
cmps
(bad)
aam
addr16
mov
in
stos
sub
rcl
mov
sbb
mov
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
leave
aam
xor
out
and
scas
mov
pop
clc
in
push
mov
ret
mov
mov
call
push
jle
stc
mov
pop
scas
sbb
sub
(bad)
mov
(bad)
out
les
or
inc
(bad)
popa
test
fild
mov
jmp
out
notrack
xlat
pop
out
or
mov
movs
xor
clc
cmps
(bad)
pop
cmps
sub
aam
cmc
lods
fild
xchg
xor
daa
inc
pop
sbb
add
mov
test
add
ficom
outs
xor
push
xor
bound
data16
loop
xor
int
dec
ret
fiadd
mov
xor
dec
xor
(bad)
in
inc
je
push
stc
mov
add
dec
clc
cmps
pushf
loopne
jge
cdq
inc
(bad)
dec
push
jbe
xchg
lods
or
or
and
bound
test
test
dec
ret
pop
jmp
xor
sub
test
inc
ret
add
daa
add
aam
or
cmp
je
sbb
gs
cmp
pop
(bad)
out
sbb
xor
xchg
cli
js
mov
push
(bad)
pop
leave
stos
push
mov
hlt
not
gs
je
cmp
aas
test
xchg
push
cmc
pop
ins
and
jle
push
xchg
xchg
out
dec
rcl
pop
idiv
sub
test
cdq
jno
and
xchg
repz
test
xchg
xchg
fnstsw
jns
xchg
imul
sub
fsub
mov
bound
rcr
jmp
add
sbb
sbb
mov
icebp
imul
shr
pop
(bad)
sub
out
pop
or
out
cdq
outs
cdq
inc
lahf
ss
js
xlat
ret
pop
push
fdiv
aas
out
jp
add
sub
push
pop
push
mov
or
movs
and
jmp
push
push
mov
(bad)
popa
jns
adc
pop
sar
jle
jae
push
push
stc
push
xchg
adc
es
out
into
push
sbb
in
pop
mov
xchg
mov
int3
push
retf
pop
(bad)
lea
popf
jle
arpl
mov
xchg
ror
imul
push
retf
(bad)
push
sbb
popa
mov
mov
sub
fcomp
fs
sahf
pop
cmps
add
jl
out
les
mov
(bad)
fdivrp
xor
clc
jg
mov
popa
ret
pop
sub
pop
xor
xchg
inc
aam
inc
enter
inc
rol
rol
mov
and
call
sbb
(bad)
mov
jp
(bad)
icebp
push
jns
mov
fidivr
jb
std
xchg
popa
xlat
xor
jmp
sbb
sub
sub
cwde
inc
sub
pop
in
pop
lea
fldcw
jecxz
ficom
adc
jge
test
xor
jno
lock
jl
xor
xor
add
xchg
clc
mov
xlat
mov
(bad)
mov
ret
loop
lods
pusha
push
push
das
int3
jbe
iret
push
movs
xchg
sbb
mov
push
leave
retf
icebp
ss
inc
jl
imul
fwait
and
cmc
hlt
and
iret
les
imul
enter
push
stos
(bad)
mov
push
scas
loope
in
fistp
inc
sbb
shl
aas
mov
jp
sbb
ins
jge
std
bound
mov
mov
stc
sbb
mov
movs
shl
inc
stos
scas
out
xchg
(bad)
push
std
dec
test
cs
cmp
xchg
enter
lock
pop
shr
ret
or
sbb
jecxz
push
cmp
mov
loop
mov
aad
sbb
push
fdiv
fstp
adc
or
xchg
mov
scas
mov
inc
ins
sbb
push
push
lds
mov
inc
fild
jmp
mov
mov
mov
stos
jle
lahf
aaa
jmp
frstor
push
retf
mov
ficomp
int3
scas
repnz
test
test
movs
and
mov
or
and
das
imul
mov
inc
rep
add
push
lods
add
dec
cmp
pop
arpl
je
shl
inc
xchg
ins
xor
shl
mov
dec
xchg
ins
in
das
and
jae
(bad)
sub
mov
ss
pop
sbb
cmp
push
dec
xchg
cmc
mov
sbb
fcomp
sub
jg
mov
pop
dec
pop
retf
xchg
out
adc
xchg
jo
jmp
pop
dec
lahf
or
dec
push
sub
jo
aas
mov
xchg
push
sbb
pop
xchg
call
inc
sub
movs
sbb
fsub
popf
add
push
iret
test
mov
js
hlt
push
mov
fwait
pusha
cmp
data16
movs
cmps
jbe
(bad)
aad
and
jmp
dec
daa
inc
mov
mov
fisub
dec
add
sub
adc
dec
push
and
sbb
jbe
outs
adc
mov
fmul
dec
adc
push
adc
mov
pop
mov
mov
add
int3
xchg
or
sbb
shl
xor
add
fwait
in
jns
sub
in
xlat
mov
xchg
sub
gs
sbb
mov
ds
or
pop
repz
(bad)
cli
mov
jb
ss
and
pop
mov
mov
xchg
mov
pop
fdiv
sub
add
pop
adc
hlt
repnz
arpl
and
fidiv
cld
clc
pop
hlt
imul
rol
loope
mov
or
std
ins
pop
mov
pushf
or
adc
daa
in
pop
jmp
jle
pop
enter
xchg
inc
jmp
mov
push
mov
std
or
and
out
add
sub
xchg
mov
jl
xchg
pop
add
ret
jge
pop
and
mov
adc
xor
cmp
mov
add
xchg
cmp
mov
mov
repz
das
mov
and
pop
pop
loopne
out
dec
dec
sbb
sar
add
inc
aas
cli
jge
call
sbb
inc
cmp
iret
fiadd
mov
scas
or
aad
outs
hlt
and
inc
cmps
test
push
jmp
aas
and
stos
popf
or
jle
out
outs
pop
push
je
in
or
fs
ss
outs
push
ror
pop
lea
add
cmps
adc
iret
pop
fbstp
sub
aam
inc
add
push
mov
and
test
xchg
call
in
pop
mov
xchg
fiadd
mov
and
push
gs
stos
jnp
jmp
jmp
fsubr
lahf
retf
and
dec
into
aaa
jg
mov
mov
cwde
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
jno
dec
inc
mov
inc
enter
adc
add
inc
jecxz
xchg
and
(bad)
xor
repz
sub
imul
dec
push
mov
sub
out
xchg
sbb
adc
fist
out
cs
mov
data16
repz
popa
push
loope
and
xor
hlt
mov
rol
adc
cld
imul
mov
xchg
mov
rol
int
out
add
cs
cmp
ss
adc
les
xlat
push
sub
mov
adc
mov
js
out
jle
fs
mov
mov
jne
dec
(bad)
(bad)
bound
ins
adc
jge
push
dec
pop
pop
inc
push
shl
pop
(bad)
je
lahf
or
mov
hlt
jnp
mov
push
sti
out
jle
and
mov
jmp
mul
sahf
fmul
or
movs
into
jb
sti
sti
xchg
push
pop
push
nop
data16
pop
arpl
and
jne
aas
and
or
cmps
and
pop
popa
or
scas
loopne
mov
pop
div
xor
or
lods
cmps
push
sbb
jg
inc
dec
je
xchg
mov
aaa
adc
push
retf
out
btr
inc
adc
in
add
in
cld
adc
lods
jns
mov
nop
mov
in
sbb
xor
and
xchg
push
cmps
add
popa
and
inc
bnd
shr
retf
mov
pop
shl
push
fcomp
test
mov
into
xor
shr
sub
jl
pop
in
add
or
jbe
xchg
jg
mov
jno
inc
jle
xchg
cdq
adc
je
repnz
sub
out
sub
cmp
cs
test
xchg
in
cmps
add
dec
dec
mov
cli
or
cld
xlat
mov
mov
push
push
fld
cmp
sar
in
xchg
cs
loopne
jg
xor
push
scas
inc
push
or
add
adc
mul
push
retf
sub
rcr
pop
clc
adc
cmps
sub
sub
out
repz
jb
jno
xor
pop
scas
push
and
inc
sub
jmpw
imul
mov
das
push
sub
push
(bad)
cmp
pop
add
cld
inc
or
mov
adc
addr16
js
push
push
rcr
mov
repz
push
pop
mov
mov
sbb
xchg
push
mov
shl
jecxz
test
sub
les
add
(bad)
and
mov
push
add
add
mov
xchg
mov
lahf
mov
imul
test
sbb
(bad)
enter
dec
pusha
xchg
imul
ins
mov
es
add
stc
mov
adc
retf
retf
clc
call
(bad)
lahf
inc
out
push
pop
imul
inc
cwde
mov
push
push
test
in
cld
sbb
push
pop
add
xor
(bad)
imul
pop
and
shr
adc
xor
ins
cs
cli
stc
or
cmps
rol
push
fs
dec
inc
sub
cmc
pop
mov
stos
add
sbb
jo
out
shl
data16
ss
pop
loop
daa
inc
mov
lods
pop
inc
nop
pop
jmp
pop
cmp
sti
add
push
cmp
sub
jp
jl
push
out
je
push
stc
int
jg
imul
cld
dec
or
ins
xchg
inc
imul
in
jno
mov
mov
mov
enter
movs
in
loop
or
ror
pop
push
lods
je
pushf
mov
jne
mov
retf
xor
add
xchg
scas
jl
aas
xor
xchg
sub
mov
add
pop
sub
or
movs
mov
mov
ror
sub
xchg
jg
xor
push
imul
jo
ins
shl
xlat
adc
gs
lods
movs
les
pop
pop
xchg
outs
mov
pop
jmp
cdq
dec
or
cmp
cmp
call
pop
dec
cmp
out
mov
inc
adc
ror
imul
sti
int3
sbb
fsub
jne
add
pushf
mov
xchg
pop
xor
das
stos
cmp
adc
nop
sti
mov
retf
into
xchg
dec
in
mov
loop
mov
xchg
ret
lock
add
pusha
pushf
xor
adc
jae
adc
fst
(bad)
dec
sbb
dec
add
add
daa
xchg
xlat
pop
adc
mov
enter
xor
inc
pusha
dec
sub
push
push
je
rol
ficomp
xchg
rcl
imul
rcl
cmps
rcl
mov
lahf
inc
(bad)
and
sub
mov
or
jbe
jne
xor
push
mov
jae
or
dec
add
sbb
loop
jmp
sub
(bad)
dec
cmps
jae
mov
in
cmps
sbb
cwde
repnz
and
adc
into
sahf
sahf
pop
mov
pop
scas
fwait
push
cld
push
loop
jne
(bad)
and
popa
cmps
call
adc
adc
cmp
add
jp
test
sar
push
cmp
and
call
mov
sbb
(bad)
dec
add
or
lods
xchg
pop
inc
xor
addr16
pop
pop
test
cli
scas
cmp
aad
popa
xlat
shl
pop
mov
aam
idiv
and
push
mov
pushf
cmp
mov
fnstcw
movs
inc
push
es
sti
sbb
inc
mov
and
push
loop
lock
adc
and
out
pop
repnz
push
test
fs
mov
ins
(bad)
(bad)
jb
outs
out
sub
xchg
cmp
shl
pop
xchg
(bad)
(bad)
sub
pop
pop
mov
mov
adc
push
outs
outs
pusha
mov
scas
jmp
sub
fcomp
sahf
fsubr
xor
outs
xor
call
dec
jns
test
xchg
adc
adc
jle
lahf
adc
and
fistp
fstp
xor
(bad)
push
stos
and
fisttp
dec
mov
xchg
hlt
(bad)
mov
jl
stos
hlt
data16
cdq
test
mov
pop
dec
lods
in
mov
dec
jns
xchg
enter
sbb
shl
xor
add
out
or
cmp
outs
jb
ficomp
jmp
xchg
cs
inc
dec
or
mov
jle
out
or
fisubr
mov
sbb
adc
pop
aaa
loop
icebp
mov
rol
jns
add
pop
cdq
popa
stos
push
xor
pop
ins
repz
adc
les
int
pop
popa
mov
cdq
bnd
push
sub
lds
and
int3
aaa
jb
sbb
addr16
jae
clc
pop
mov
xor
jns
je
fwait
aas
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
nop
sbb
jns
inc
ins
out
addr16
fninit
sahf
jnp
lods
pusha
hlt
call
aam
push
jl
jmp
xor
push
fadd
cdq
cld
mov
stos
add
push
retf
aaa
clc
mov
sbb
mov
ja
add
gs
mov
mov
(bad)
mov
sti
push
inc
xchg
outs
ror
sub
clc
inc
(bad)
xchg
sub
lods
(bad)
push
xor
xor
cmp
hlt
xor
into
or
les
dec
cld
inc
test
sti
or
xchg
adc
(bad)
push
push
shl
cli
xor
call
cli
in
xor
idiv
inc
jns
ins
and
lock
pop
push
xchg
mov
or
(bad)
test
fldenv
adc
jns
xor
push
push
jno
ret
test
imul
cmc
xchg
xor
push
(bad)
scas
lock
dec
add
mov
pop
jb
adc
mov
retf
cs
mov
inc
xor
sbb
lahf
int
(bad)
xchg
cmp
sub
jns
sub
push
mov
je
and
pop
sbb
mov
jbe
xchg
push
push
in
or
jno
xchg
test
out
cli
pop
pushf
jo
sbb
jg
and
inc
mov
ds
xor
adc
sub
outs
inc
jecxz
pop
pop
jecxz
jnp
sub
xlat
ret
fdiv
ss
mov
add
and
sbb
jno
or
loope
fisttp
lahf
add
cld
int3
pop
jns
outs
out
mov
mov
cmp
and
(bad)
push
and
adc
mov
outs
call
and
inc
mov
or
out
add
xor
pusha
repnz
cmp
and
xchg
push
iret
pop
sar
mov
lahf
mov
test
(bad)
cmps
mov
jp
jnp
mov
sti
ins
das
mov
cmc
enter
lods
(bad)
mov
inc
xor
push
call
rol
sub
(bad)
jmp
loop
push
lds
call
push
out
mov
out
hlt
into
inc
pop
xchg
adc
cmp
ror
push
and
mov
in
adc
and
out
in
push
ja
popf
fsub
mov
mov
add
mov
jae
stc
push
sbb
or
dec
pusha
dec
sub
std
jne
daa
sub
ret
(bad)
scas
add
xor
in
imul
mov
daa
xchg
inc
(bad)
aaa
aas
cld
sbb
push
aas
xchg
mov
fild
xchg
push
pop
retf
jmp
add
xor
out
sbb
inc
add
jl
inc
mov
pop
sub
xor
test
fiadd
in
movs
ret
cmp
sub
jge
sar
or
fsubr
inc
jle
mov
in
mov
aaa
mov
lods
inc
or
jl
ja
jo
dec
inc
xor
ret
cmps
lds
in
ins
das
and
cmps
inc
int
xchg
fidivr
call
inc
dec
inc
pop
lds
ins
mov
mov
(bad)
pop
xchg
mov
rol
sub
cmps
stos
lock
pusha
je
test
cmps
and
cmp
push
mov
lds
pop
sub
sub
or
add
das
cdq
popa
push
inc
shr
pop
loop
ins
mov
push
inc
sub
cmps
loope
loop
mov
retf
mov
add
mov
movs
adc
fistp
mov
pop
and
clc
ins
and
or
cwde
xor
push
lahf
(bad)
not
(bad)
scas
aad
adc
iret
dec
cmp
and
xchg
and
outs
(bad)
dec
scas
cs
into
repnz
retf
test
(bad)
push
push
sub
ror
mov
jmp
inc
sbb
pop
cmps
jp
nop
mov
mov
stos
inc
test
jl
ja
sub
pop
movs
test
cmp
push
scas
dec
and
das
lods
cmp
jne
xor
leave
cmp
icebp
mov
xor
jnp
pop
jnp
cmp
jmp
mov
add
outs
push
pop
dec
cmp
fs
pop
pop
pusha
daa
or
jg
xchg
pop
xchg
scas
sub
enter
dec
sbb
dec
dec
cli
mov
pop
mov
or
push
(bad)
mov
pop
fisttp
f2xm1
jge
cmc
sub
movs
add
jae
dec
mov
js
loope
in
xor
les
int3
into
pop
daa
sub
int
ins
dec
xchg
daa
ja
pop
xor
aad
pavgb
push
inc
test
and
mov
jne
xor
mov
pop
ins
dec
xchg
icebp
iret
push
cmps
xor
add
push
loopne
stos
mov
jle
lock
rcl
jmp
jae
ins
lock
aam
sbb
adc
lock
push
jmp
and
and
inc
xchg
and
dec
ret
rol
sysret
sbb
xor
or
nop
pop
push
imul
test
fnstcw
scas
push
inc
xchg
mov
xor
ja
jb
or
jmp
into
jecxz
sbb
pop
mov
and
ret
mov
sbb
ret
rcl
xchg
cwde
icebp
mov
dec
cmps
sahf
push
lea
add
shr
push
xor
mov
mov
lea
sub
imul
loop
cmps
sbb
in
cmps
sbb
mov
mov
cld
cmp
retf
add
aas
xor
sub
rol
rcr
fdivr
xlat
inc
hlt
out
scas
retf
shl
jl
jns
idiv
push
mov
ss
icebp
out
mov
jno
jecxz
test
(bad)
mov
loope
sub
call
add
add
and
or
push
in
mov
pop
xor
and
push
pop
jmp
fistp
xchg
sbb
dec
imul
cmc
ds
lds
test
fldenv
in
jle
icebp
das
dec
mov
jb
inc
mov
aas
aam
out
jmp
add
pop
xor
mov
mov
jge
out
fld
add
test
dec
jo
arpl
mov
dec
adc
and
loop
and
or
sbb
scas
push
call
stos
cli
mov
rol
jle
xor
or
stos
mov
imul
imul
xchg
jl
mov
pusha
stc
push
mov
in
(bad)
shl
aaa
jp
jae
sbb
dec
jo
add
mov
cmps
mov
fdiv
cmc
shr
xchg
sahf
inc
(bad)
stc
test
pop
dec
retf
pop
imul
dec
lahf
or
test
mov
fadd
outs
mov
cwde
out
cmp
test
stos
sub
push
into
add
pop
jg
aam
jmp
or
sbb
stos
pop
pop
mov
jbe
lock
fsub
sbb
addr16
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loop
(bad)
(bad)
cld
xlat
stos
push
xor
aam
(bad)
sar
call
call
mov
inc
push
scas
inc
and
cmp
mov
push
enter
dec
xchg
jb
mov
mov
rol
push
cmp
imul
(bad)
scas
inc
sub
push
jecxz
sub
sbb
outs
or
cmovo
push
call
inc
lock
das
fsubr
enter
bound
push
ficom
mov
dec
pop
retf
retf
cmc
push
xchg
sbb
rol
push
mov
mov
push
push
jg
mov
add
arpl
(bad)
cmc
or
mov
inc
movs
mov
or
scas
inc
sub
mov
mov
fcmovnb
stos
call
dec
ins
pop
adc
xchg
aas
ins
jae
mov
add
pusha
rcr
inc
dec
daa
movs
and
xchg
popa
or
cs
adc
and
or
mov
jae
sub
or
pop
call
lahf
es
sbb
or
sbb
xor
mov
push
xor
sub
mov
dec
scas
sub
sbb
cdq
pop
int3
pop
and
mov
clc
cmp
cld
and
jp
cmp
fcom
cmps
sahf
jg
clc
adc
pop
xchg
mov
in
jnp
test
in
pusha
cmp
fwait
div
mov
push
(bad)
addr16
add
cmp
fwait
cwde
dec
ja
inc
sbb
lea
sbb
xchg
movs
fmul
or
jle
mov
sbb
or
and
mov
jne
inc
fwait
push
sar
push
gs
(bad)
sti
(bad)
jge
mov
jo
out
pop
in
pusha
push
inc
add
add
or
inc
sti
push
shl
shr
xchg
aas
adc
pop
pop
jl
jp
imul
cmp
loop
push
stc
in
movs
push
adc
(bad)
mov
lea
hlt
sbb
enter
movs
adc
mov
(bad)
xchg
push
jecxz
push
add
mov
add
fs
jmp
and
dec
fwait
int3
jb
enter
retf
test
pop
push
repz
jnp
and
adc
xchg
adc
(bad)
pop
push
sub
mov
mov
xor
pop
adc
mov
jmp
js
mov
mov
adc
jno
push
rol
loop
and
aaa
dec
adc
dec
mov
jecxz
mov
jns
pop
cmp
ficom
cmc
stos
cmp
not
push
or
xor
pop
mov
fisttp
add
adc
or
sub
fisub
fadd
inc
cmc
aaa
pop
xor
pop
inc
or
popf
and
inc
push
je
repz
nop
call
mov
push
fwait
nop
mov
and
xor
or
movs
or
jp
adc
(bad)
cdq
out
imul
je
and
adc
aaa
loopne
cvtps2pi
sbb
test
out
adc
push
test
or
popa
jo
imul
shl
mov
jmp
cmp
adc
xchg
xchg
rol
mov
mov
lds
outs
adc
clc
pop
or
es
adc
sub
stos
pop
jmp
fnstcw
push
inc
sub
stc
popa
sar
adc
mov
xor
cmc
sbb
sti
push
call
add
jbe
push
lock
adc
or
or
shl
repnz
retf
mov
jno
lock
clc
jp
pop
aad
jg
in
add
push
cmp
pop
outs
cdq
cmc
add
int3
data16
jno
enter
xor
in
out
mov
das
shr
xchg
and
fcmovb
adc
aaa
loopne
(bad)
sub
dec
sub
xchg
mov
scas
xor
mov
mov
(bad)
sub
jno
aaa
mov
(bad)
xor
or
push
movs
cmp
mov
(bad)
jne
xchg
cdq
ins
cmp
ins
lock
int
and
inc
push
mov
mov
sub
adc
btc
cmp
mov
inc
mov
aam
inc
fld
add
and
cmp
gs
cmps
mov
dec
aaa
cmc
rcr
or
sub
xchg
pop
sub
lahf
leave
dec
pop
or
pop
aaa
inc
mov
jecxz
enter
out
add
enter
pop
jle
and
inc
cmp
xchg
(bad)
adc
add
sbb
push
and
sbb
or
sub
mov
or
add
push
int
mov
les
inc
inc
sar
sub
mov
inc
retf
jae
mov
test
mov
jne
ret
or
jae
jne
aam
dec
lods
pop
pop
sbb
mov
xor
sub
fld
repnz
ss
cmp
jb
push
(bad)
daa
inc
jns
ins
fidiv
dec
fistp
call
cmps
xlat
call
jb
mov
inc
clc
fldenv
dec
sbb
test
mul
cmp
std
out
or
maxps
mov
add
add
test
xor
and
(bad)
dec
(bad)
fidiv
and
sub
mov
push
push
pop
jge
xchg
(bad)
leave
push
add
ins
and
out
retf
mov
popw
add
or
nop
jecxz
mov
xchg
and
xchg
movs
loop
imul
push
mov
add
pop
xchg
push
and
adc
lock
xor
inc
pop
or
jecxz
(bad)
push
push
push
shl
sbb
jge
mov
arpl
add
mov
imul
in
test
push
mov
rcr
aaa
inc
and
add
xchg
sahf
pop
pusha
sbb
jmp
iret
sbb
cmp
xor
jb
lods
xchg
cmps
jns
inc
push
mov
jns
neg
push
jno
in
test
dec
push
gs
fsubr
aaa
outs
and
clc
mov
push
movs
smsw
xchg
push
jns
inc
mul
or
test
prefetch
add
lds
add
xor
div
fild
mov
or
lds
adc
jae
cmc
or
mov
jae
shl
dec
mov
bound
sbb
mov
scas
test
xor
retf
add
xor
mov
adc
adc
cli
clc
(bad)
cld
test
fistp
push
jl
out
mov
lds
sub
mov
ds
pop
mov
gs
pop
mov
test
cmps
mov
lea
jmp
pop
add
setge
lds
xchg
loop
inc
jmp
dec
stos
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
retw
cmc
dec
out
jmp
and
int
or
adc
loop
mov
fucomp
jbe
leave
rcl
loopne
out
std
pop
xchg
xchg
mov
or
jbe
retf
(bad)
cwde
lods
lock
xor
push
je
sub
mov
aad
inc
js
arpl
xchg
shr
loopne
shr
mov
push
retf
retf
push
test
cmp
sbb
loope
inc
nop
add
test
xchg
mov
fs
adc
fsubr
int3
jae
lods
and
mov
fist
data16
gs
mov
shr
jns
push
sub
es
call
icebp
aad
imul
xlat
cmp
mov
mov
je
add
enter
add
jae
inc
mov
pop
movs
outs
stos
push
pop
and
push
aad
ins
sbb
add
arpl
(bad)
hlt
cli
push
punpckhwd
adc
mov
cdq
sub
in
push
loopne
in
pop
test
push
push
sub
or
shl
aam
aas
push
mov
jno
pop
push
mov
pop
or
enter
retf
sbb
bound
into
lds
fdiv
xchg
mov
inc
stos
nop
call
cmovge
movs
test
mov
test
(bad)
ja
xchg
ins
rcr
test
push
fdivrp
inc
and
inc
mov
ins
fnstenv
push
sbb
pop
and
movs
xchg
mov
aaa
mov
push
je
xchg
mov
call
cmp
nop
stos
inc
xor
jbe
add
fwait
push
into
addr16
mov
mov
mov
sar
(bad)
icebp
jb
cmps
jg
jge
jge
lahf
jno
lods
xor
cli
jo
imul
xchg
aaa
repnz
sbb
or
lahf
pop
mov
or
test
and
push
inc
push
mov
adc
fsubr
cmc
cmp
sbb
push
ins
push
adc
mov
sbb
hlt
mov
stos
daa
jnp
mov
(bad)
push
or
lahf
push
sbb
mov
mov
or
mov
xchg
cli
ds
xor
test
add
stos
xor
xchg
int
adc
loop
cmp
mov
and
push
std
fidiv
cli
xchg
popf
cs
add
(bad)
dec
dec
ret
ss
xor
mov
mov
out
lods
xor
mov
daa
(bad)
outs
fs
jne
sahf
lods
ret
fild
mov
imul
add
add
sub
fwait
xor
mov
pop
xchg
out
sbb
push
or
adc
xlat
aad
in
and
iret
mov
js
sahf
mov
rcr
cdq
nop
iret
aaa
leave
push
xor
mov
push
mov
out
lock
xchg
and
add
fsub
loop
icebp
or
pcmpeqd
sbb
retf
add
cli
dec
shl
shl
pop
stos
adc
fcomp
xchg
xchg
xor
sbb
mov
(bad)
pop
iret
loop
scas
jle
pop
sub
out
jo
arpl
ja
cmps
push
mov
sub
lds
rcl
lock
mov
xchg
leave
dec
inc
aam
xchg
pop
or
pop
push
out
aaa
test
inc
pop
retf
repz
dec
div
cld
iret
adc
xchg
inc
cli
mov
or
out
or
dec
inc
fadd
sbb
adc
xor
add
sbb
fs
inc
mov
cdq
mov
xor
shl
sbb
jno
sbb
mov
inc
or
mov
mov
dec
jl
jns
mov
jbe
sub
mov
sub
push
mov
dec
jne
xchg
outs
out
popf
or
dec
loopne
(bad)
(bad)
int3
fdiv
aam
jmp
(bad)
mov
mov
or
lahf
aam
cmps
add
and
push
es
out
push
adc
in
add
adc
xor
dec
jb
lea
lods
(bad)
fbstp
pop
push
outs
clc
leave
and
(bad)
jmp
mov
sahf
jae
mov
ja
push
popf
out
fwait
rol
adc
ror
xchg
je
sahf
pusha
or
or
add
pop
mov
mov
gs
sbb
int
fidiv
(bad)
cs
sub
movs
sub
sbb
adc
xor
dec
dec
mov
les
adc
out
or
test
adc
mov
xor
dec
in
shl
fadd
mov
add
mov
fstp
mov
into
adc
adc
sbb
add
inc
fs
jne
add
pop
dec
jge
scas
jl
retf
sti
int3
pop
jns
and
mov
xor
je
sar
mov
mov
mov
sub
rcl
inc
enter
gs
pop
repnz
cmc
pusha
mov
cmp
add
std
repz
jecxz
sti
pop
out
out
cwde
stc
inc
jecxz
push
xchg
jae
sbb
jecxz
stos
cmps
or
in
pop
das
push
jnp
jns
or
sub
std
sub
icebp
jp
fwait
xchg
push
mov
push
sub
dec
aas
test
adc
push
xlat
cwde
seta
xchg
rcr
push
sbb
mov
dec
(bad)
ret
inc
adc
mov
dec
retf
jo
cmp
fs
sub
xor
test
fs
(bad)
sub
data16
inc
int
lods
add
addr16
mov
jb
clc
addr16
jmp
push
push
mov
or
jecxz
into
mov
add
rol
mov
enter
out
and
retf
add
int
cmp
lods
inc
xchg
or
xchg
sti
aaa
call
cld
hlt
dec
inc
mov
movs
mov
cmp
cwde
or
ror
ret
xchg
and
xchg
and
xchg
and
aas
pushf
and
aas
xchg
and
xchg
mov
cmp
xchg
mov
and
xchg
mov
jmp
inc
xchg
and
inc
xchg
mov
sbb
mov
or
mov
or
or
and
pop
cdq
xor
pop
cdq
and
fcomp
and
hlt
fwait
and
in
fwait
and
and
and
cmp
and
push
pushf
and
mov
and
test
and
sbb
and
xor
and
sub
and
in
and
inc
shl
ret
jge
or
and
ret
ins
and
inc
add
ret
aas
and
inc
sbb
ret
pop
and
inc
jo
or
popa
and
inc
push
and
inc
jo
or
and
inc
jo
outs
jno
and
inc
inc
daa
or
outs
and
inc
jo
or
and
inc
jo
aas
jno
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
cmp
or
outs
and
inc
jo
or
and
inc
jo
(bad)
je
or
and
ret
xchg
enter
enter
int3
or
enter
and
add
inc
xchg
enter
int3
or
enter
repz
pop
add
inc
xchg
mov
or
enter
int3
or
enter
leave
or
or
inc
xchg
enter
int3
or
enter
shl
xor
inc
xchg
enter
int3
or
enter
and
outs
gs
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
data16
outs
fidivr
xchg
and
inc
xchg
and
inc
data16
outs
fisub
inc
xchg
and
xchg
and
data16
ficomp
fidiv
xchg
and
xchg
and
xchg
and
data16
outs
ficomp
fisub
inc
xchg
and
inc
xchg
and
inc
data16
arpl
sqrtps
and
pop
cdq
and
pusha
cdq
and
pop
cdq
fsubp
jae
(bad)
xor
and
pop
cdq
and
pop
cdq
and
pusha
cdq
and
pop
cdq
fidiv
push
xchg
and
pop
cdq
and
pop
cdq
and
pusha
cdq
and
pop
cdq
fiadd
xchg
fidiv
cdq
and
pop
cdq
and
pusha
cdq
and
pop
cdq
ficom
fimul
fiadd
cdq
and
pop
cdq
and
pusha
cdq
and
pop
cdq
fisub
inc
ficomp
outs
out
pop
outs
outs
and
inc
jo
or
and
inc
jo
imul
fsubrp
ins
(bad)
fsubp
ins
outs
and
inc
jo
or
and
inc
jo
(bad)
ins
data16
ins
outs
and
inc
jo
or
and
inc
jo
xchg
ins
jbe
(bad)
ins
pop
fiadd
inc
jo
or
and
inc
jo
ins
data16
cmps
ficom
outs
and
inc
jo
or
and
inc
jo
aaa
ins
xchg
shr
xor
ins
gs
enter
int3
or
enter
sar
ins
lock
enter
enter
int3
or
enter
ror
gs
inc
xchg
enter
enter
int3
or
enter
rcr
ins
gs
enter
int3
or
enter
shr
lock
gs
enter
int3
or
enter
and
ins
ficomp
fisub
inc
xchg
and
inc
xchg
and
inc
data16
ins
ficomp
ins
gs
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
data16
imul
ins
gs
aas
xchg
and
aas
xchg
and
imul
imul
jl
and
aas
xchg
and
aas
xchg
and
jge
and
fidivr
aas
xchg
and
mov
and
data16
cdq
and
cmp
adc
fisub
pop
cdq
and
repnz
or
xchg
and
jle
and
pop
cdq
and
lods
aaa
and
aam
and
js
and
pop
cdq
and
les
and
push
(bad)
and
mov
cdq
and
pop
call
mov
cdq
and
aam
and
aam
fimul
pop
cdq
and
int3
pusha
and
push
pushf
and
clc
mov
or
or
retf
or
or
sub
inc
jo
or
ror
inc
mov
or
sub
inc
jo
or
bound
inc
or
punpckhdq
or
and
inc
mov
sub
inc
push
or
and
inc
pop
arpl
inc
enter
adc
or
and
inc
lock
inc
mov
or
or
and
inc
enter
or
or
or
and
inc
rcl
inc
or
outs
imul
rol
sub
inc
xchg
enter
dec
test
add
xchg
sub
inc
xchg
enter
mov
inc
xchg
in
adc
enter
rol
in
adc
enter
lock
inc
add
xchg
lods
adc
enter
je
inc
xchg
inc
add
xchg
lods
adc
enter
cmp
xchg
loop
inc
xchg
ins
adc
enter
and
aas
xchg
and
xchg
and
aas
xchg
and
fwait
and
xchg
and
aas
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
les
and
in
jno
xchg
and
pop
and
fisub
(bad)
in
icebp
inc
fs
mov
fsubp
mov
and
inc
and
mov
and
push
xchg
mov
xchg
xor
repz
imul
aam
mov
mov
cdq
mov
mov
cdq
cvtpi2ps
cdq
or
mov
arpl
cmp
cdq
jmp
cdq
pop
fs
punpckhdq
cdq
pop
je
cdq
dec
lock
jl
lock
jmp
lock
or
or
cdq
xchg
loope
mov
imul
sbb
call
mov
mov
or
and
inc
lock
inc
jo
or
and
inc
jo
or
and
inc
jo
or
and
inc
lock
inc
lock
inc
mov
or
or
or
and
inc
inc
and
inc
nop
and
adc
and
inc
mov
or
and
inc
jo
or
and
inc
jo
or
and
inc
jo
or
sti
jmp
rcl
xor
mov
js
popf
xchg
lods
sbb
xchg
pushf
ds
xchg
and
xchg
xor
xchg
hlt
dec
mov
xchg
inc
sbb
xchg
inc
imul
sbb
xchg
adc
xchg
aas
pusha
xchg
bound
xchg
mov
mov
into
xchg
mov
mov
ja
inc
mov
push
xchg
pop
aad
xchg
push
xchg
and
(bad)
pop
and
bound
fisub
and
cmp
out
bound
mov
pop
and
jb
adc
bound
test
movs
ins
and
(bad)
jb
call
mov
out
pop
and
add
and
mov
dec
bound
and
je
and
xchg
pusha
and
xchg
push
and
inc
and
push
and
mov
and
push
and
pop
mov
or
or
or
xchg
or
ret
lea
idiv
or
aad
movs
or
adc
or
or
(bad)
call
or
and
or
cmc
cdq
or
neg
or
ret
adc
xchg
idiv
mov
cmps
inc
add
cdq
(bad)
fmul
stos
pop
loope
lea
or
and
or
in
nop
or
cmc
xchg
or
ret
fucomi
(bad)
dec
test
dec
jge
out
test
inc
and
xchg
movs
inc
xor
lods
inc
adc
mov
inc
mov
inc
inc
movs
icebp
pop
inc
mov
lahf
dec
inc
ret
scas
jbe
clc
cmps
aad
pop
ret
out
inc
in
inc
inc
(bad)
jmp
pop
fwait
sub
ds
and
aad
sub
sub
stos
jp
inc
sbb
xchg
cld
inc
es
hlt
inc
adc
(bad)
sub
sbb
jbe
xchg
mov
pop
xchg
mov
fcomp
lahf
push
xchg
(bad)
(bad)
mov
jne
jno
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
xchg
mov
mov
cs
cli
xor
test
xchg
imul
xchg
push
nop
test
xchg
cmp
xchg
cmp
xchg
mov
imul
xor
xor
and
sar
xchg
mov
pop
xchg
and
jne
and
bound
in
mov
and
jecxz
and
daa
ret
mov
aas
and
daa
push
and
jle
and
cdq
je
(bad)
mov
arpl
xchg
test
pusha
and
mov
xchg
retf
sub
push
(bad)
ins
and
ficom
cmc
stc
add
and
push
and
jmp
and
fisubr
in
and
or
stos
bound
(bad)
stos
bound
or
sub
mov
and
fisttp
sub
jmp
gs
fisttp
pop
fiadd
lock
or
rol
mov
aaa
or
cmp
lahf
fimul
or
cmp
push
and
push
and
push
and
push
and
push
and
push
and
push
and
push
and
push
and
push
and
push
and
push
and
inc
jo
or
and
inc
jo
or
and
inc
jo
or
and
inc
jo
or
and
inc
jo
or
and
inc
jo
or
and
inc
jo
or
and
inc
jo
or
and
inc
jo
or
and
inc
jo
or
and
inc
jo
or
and
inc
jo
or
and
inc
jo
or
and
inc
jo
or
and
inc
jo
or
and
inc
xchg
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
leave
add
xchg
leave
xor
xchg
leave
or
xchg
leave
add
ss
xor
pop
xchg
leave
add
and
add
scas
xor
in
pop
xchg
leave
in
xor
mov
scas
xor
scas
retf
fild
stos
fwait
dec
scas
xor
mov
xor
ins
fs
pop
pop
and
(bad)
xchg
sbb
xlat
pushf
addr16
xor
fcmovnu
ror
(bad)
cmc
xor
jecxz
xchg
dec
or
mov
mov
pushf
inc
aaa
xchg
mov
rol
popa
xor
xor
mov
xor
xchg
or
push
dec
add
xor
sbb
inc
push
push
ins
or
in
or
mov
cdq
fisubr
fisttp
imul
outs
cmc
mov
fimul
imul
inc
sub
cwde
fimul
mov
(bad)
fisubr
jmp
or
and
push
and
push
and
push
and
push
and
push
and
jmp
or
xchg
and
or
inc
adc
and
inc
push
and
inc
xor
or
and
jo
or
and
inc
jo
or
and
inc
jo
or
and
inc
jo
or
and
inc
jo
xlat
pop
outs
mov
or
and
mov
das
in
inc
lock
daa
inc
jo
popf
inc
jo
xchg
pop
outs
or
and
ja
les
pop
inc
jo
push
xor
aad
pop
outs
aad
xor
push
add
xchg
or
fstp
push
in
jae
test
and
pop
xchg
or
adc
and
push
fwait
xchg
or
fsqrt
push
in
mov
fwait
and
ss
shr
stos
xchg
sbb
push
pop
fwait
es
push
inc
mov
xchg
fsqrt
push
in
jae
fwait
arpl
inc
pop
(bad)
fwait
xchg
stc
sbb
in
adc
call
into
call
mov
clc
xor
and
orps
loopne
stos
clc
xor
and
dec
adc
cmp
push
retf
ficomp
clc
push
and
dec
and
stc
jmp
div
push
jp
push
push
(bad)
xor
xor
inc
and
neg
push
adc
push
call
and
xor
and
pusha
inc
and
retf
sbb
and
xchg
xor
pop
xchg
cdq
xlat
jo
pop
rcl
orps
push
das
sbb
test
mov
imul
pop
xchg
test
nop
rcl
push
nop
push
das
sbb
test
jg
sub
pop
xchg
lods
push
cli
call
push
das
sbb
fdiv
popa
jle
mov
sub
pop
xchg
sbb
adc
mov
sbb
fadd
push
jle
inc
cmp
iret
dec
and
xor
pop
dec
or
iret
and
aad
pop
rcl
xor
xor
fwait
call
cmp
xor
das
iret
or
fdivr
(bad)
outs
rcl
xor
cmp
into
cmp
(bad)
rcl
xor
mov
call
xchg
call
sbb
mov
and
inc
jo
push
call
push
xor
stc
je
mov
or
enter
fstp
jo
movs
js
adc
or
call
inc
cwde
or
cwde
or
cwde
or
cwde
or
cwde
or
cwde
or
call
inc
sahf
mov
inc
xchg
mov
inc
cmps
mov
inc
out
or
mov
inc
out
or
mov
inc
out
or
mov
inc
xchg
or
mov
inc
out
and
pop
icebp
inc
xchg
push
jno
xchg
push
popa
inc
xchg
ds
xchg
push
mov
fimul
aas
xchg
and
aas
xchg
and
inc
(bad)
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
push
and
imul
xchg
and
xchg
and
pop
pushf
and
or
daa
or
and
je
sub
dec
mov
or
sub
jnp
sub
jnp
sub
pop
xchg
sub
or
or
xor
je
xor
ins
ins
xor
jne
xor
jb
xor
inc
arpl
or
cmp
push
pop
cmp
pop
pop
cmp
ja
cmp
ins
cmp
test
or
ret
pop
inc
push
shr
push
(bad)
call
inc
dec
lds
inc
pop
enter
iret
and
int3
xor
cmc
sub
inc
(bad)
lock
idiv
inc
cwde
idiv
inc
push
hlt
cli
inc
ja
fld
sti
xlat
inc
dec
clc
fiadd
(bad)
rol
cld
inc
inc
cmp
ds
ss
dec
inc
cmp
inc
cmps
arpl
ins
push
inc
mov
inc
inc
mov
cmp
push
popa
inc
xchg
fdivr
in
fdivr
fcom
jmp
xchg
int3
in
xchg
les
enter
mov
xchg
out
les
cmp
cs
cdq
sub
xchg
mov
add
xchg
mov
in
xchg
call
loopne
xchg
movs
loope
xchg
lods
jmp
xchg
mov
sub
xchg
mov
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
das
fst
jp
rcl
jo
(bad)
xchg
jb
aad
and
jmp
das
in
and
xor
and
xor
and
sub
and
sub
pop
and
(bad)
push
and
enter
enter
rcl
and
rcl
and
ret
call
mov
sbb
mov
leave
adc
and
mov
or
xchg
loope
and
or
push
sar
and
retf
add
xchg
retf
xchg
in
and
mov
sti
or
mov
test
(bad)
icebp
xchg
div
mov
add
mov
in
leave
mov
test
xchg
or
ret
xchg
or
xchg
or
ret
cdq
or
mov
sahf
or
enter
leave
out
or
icebp
repz
stc
repz
sti
dec
cwde
(bad)
leave
or
(bad)
inc
popf
inc
fiadd
inc
rol
inc
int
jne
lds
inc
mov
inc
xchg
inc
lods
inc
cdq
dec
movs
inc
inc
outs
popf
inc
mov
xchg
inc
mov
loop
inc
mov
sahf
jb
xchg
loopne
inc
cwde
jmp
inc
out
inc
dec
jmp
inc
inc
hlt
xchg
cmp
inc
not
inc
in
nop
sbb
inc
jecxz
adc
pushf
add
add
lock
xchg
outs
mov
xchg
popa
mov
push
xchg
scas
lods
push
xchg
mov
imul
imul
push
push
xchg
dec
je
xchg
mov
xchg
xchg
xchg
sub
xchg
mov
push
xchg
mov
xchg
xchg
addr16
mov
bound
or
xchg
or
xchg
or
jge
push
push
jp
push
pop
xchg
push
dec
adc
and
dec
and
jl
and
test
mov
xchg
push
and
dec
and
dec
and
dec
and
xchg
inc
and
xchg
inc
and
mov
js
mov
and
cwde
jb
mov
jb
les
je
pop
mov
and
mov
and
mov
and
test
pusha
and
mov
and
stos
arpl
or
(bad)
fimul
xor
fisttp
pop
cdq
and
pop
cdq
inc
pop
mov
cdq
and
pop
cdq
and
pop
cdq
inc
imul
cdq
and
pop
cdq
and
pop
mov
mov
sti
test
or
jmp
jmp
pop
cdq
and
cmp
les
add
(bad)
aad
mov
mov
mov
cdq
and
pop
cdq
and
adc
daa
push
in
and
cmps
mov
out
inc
cmps
mov
jo
or
xchg
rol
aaa
cmp
push
inc
imul
push
mov
loop
mov
test
jne
mov
or
mov
adc
fiadd
and
loop
mov
cmp
dec
sub
xchg
mov
emms
mov
fild
stos
inc
jo
or
enter
xchg
pop
push
adc
xchg
sub
xchg
(bad)
mov
add
enter
dec
xor
ins
aaa
pushf
dec
pop
cmp
(bad)
sub
sub
ins
dec
out
enter
popa
in
ins
xchg
xchg
dec
arpl
xchg
sub
imul
loope
xchg
enter
fiadd
sbb
pop
push
sbb
xchg
pop
mov
dec
and
inc
xchg
inc
fcomi
sub
fdivr
lahf
cwde
in
and
jmp
fisub
js
xchg
and
inc
xchg
inc
and
sub
and
push
in
sub
mov
xchg
push
icebp
adc
xchg
inc
popa
imul
outs
repz
adc
dec
jnp
jge
pop
ret
scas
xchg
in
inc
jno
xchg
and
xchg
inc
mov
movs
outs
les
call
or
and
pop
cdq
and
pop
cdq
and
or
(bad)
sub
out
mov
(bad)
cmp
mov
int
and
pop
cdq
and
pop
cdq
and
pop
hlt
fadd
ret
call
shl
stos
or
mov
retf
or
and
pop
cdq
and
stos
loope
call
lods
jp
jmp
loopne
and
pop
cdq
and
pop
cdq
and
inc
xchg
dec
pop
lds
ret
in
xor
jecxz
cmp
add
inc
jo
or
and
loop
or
push
(bad)
push
cmp
mov
pop
xchg
add
inc
jo
or
and
loop
mov
ret
mov
out
cmp
add
inc
jo
or
and
loop
scas
mov
inc
sub
fwait
popa
fbld
push
shl
or
and
inc
jo
or
in
gs
xchg
dec
mov
push
jle
jne
outs
pop
outs
mov
in
out
enter
enter
sbb
dec
jbe
push
jge
je
ins
pusha
jge
lods
inc
push
jbe
cli
enter
enter
fsubr
cdq
xor
inc
test
ins
pop
jnp
ins
push
pop
mov
xchg
enter
enter
cwde
xchg
ss
cmp
mov
mov
ficom
and
repnz
push
in
sub
imul
icebp
sbb
sbb
and
inc
clc
rcl
xor
and
ror
pop
call
loope
xchg
and
and
mov
push
clc
and
xchg
test
jle
jmp
mov
push
lds
push
mul
sahf
arpl
icebp
push
test
adc
jmp
pop
cdq
inc
in
ds
in
mov
jb
dec
out
or
clc
lods
js
dec
movs
jp
dec
or
or
or
or
scas
js
jle
lods
mov
mov
and
pop
cdq
and
pop
cdq
and
ds
daa
inc
fwait
ror
dec
cwde
and
cmp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
jp
and
inc
adc
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
add
inc
and
inc
and
or
and
inc
outs
and
jo
or
and
inc
jo
or
and
inc
jo
or
and
inc
xchg
enter
enter
enter
enter
dec
or
dec
or
xchg
dec
mov
mov
xchg
dec
mov
xchg
enter
enter
enter
ja
inc
xchg
outs
or
addr16
inc
gs
mov
stc
sbb
clc
or
cli
push
xchg
cli
push
xchg
or
fsqrt
push
xchg
ficom
iret
je
xchg
leave
ficom
stc
ficom
rcl
daa
enter
fnstcw
in
and
inc
fs
aaa
xchg
call
xchg
xor
(bad)
pop
call
nop
call
xchg
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
xchg
cs
pop
call
push
call
xor
xchg
(bad)
aad
call
and
push
xor
lock
fdivrp
aad
call
and
sbb
xchg
(bad)
aam
call
gs
arpl
adc
cwde
(bad)
aad
stc
sbb
lock
ret
fwait
aad
mov
and
cdq
or
ins
cs
ror
xchg
je
cdq
xchg
jnp
cdq
or
fisttp
sub
cdq
or
ins
cs
nop
or
arpl
adc
add
ins
add
aad
mov
aad
mov
test
cdq
or
ins
and
ins
cmp
imul
cmps
lods
dec
or
aas
ror
retf
out
sbb
movs
xor
fisubr
mov
ins
mov
pop
sar
retf
fdiv
(bad)
nop
cld
sahf
test
dec
test
ror
retf
jmp
xor
cld
fisubr
addr16
aas
sar
retf
jmp
xor
or
test
dec
leave
ins
mov
aas
ror
cld
fnstenv
cmp
cli
and
inc
inc
mov
mov
mov
sub
stc
dec
and
sti
and
push
xchg
jp
and
mov
sub
stc
mov
arpl
cli
and
push
xchg
pop
dec
and
cwde
mov
sub
sbb
daa
enter
stc
sbb
mov
mov
mov
xchg
fsqrt
dec
xchg
cli
dec
and
mov
and
pop
xchg
pop
push
jmp
xor
call
fist
mov
out
mov
xchg
xor
int
push
push
mov
(bad)
fidivr
xchg
xor
xchg
call
fbld
pop
dec
out
xor
xchg
xor
aaa
xchg
test
scas
mov
jmp
sahf
mov
xchg
xor
aaa
xchg
test
or
test
stc
sbb
sbb
mov
jecxz
(bad)
mov
movs
xchg
ins
das
stc
sbb
lods
adc
push
push
add
sbb
ins
das
sbb
ins
cs
int3
adc
sub
mov
ins
das
sbb
ins
cs
pushf
adc
mov
mov
sbb
sbb
outs
adc
das
jge
out
or
pop
addr16
pop
aad
push
aas
aad
cmp
lods
add
in
cmp
retf
outs
and
push
pop
sar
push
pop
rcl
cmp
and
sbb
mov
sub
inc
outs
ror
push
pop
rol
cmp
fdiv
mov
sub
mov
sub
mov
sub
(bad)
push
aas
rcl
xor
fld
mov
sub
popf
mov
ror
push
aas
rol
mov
fst
xchg
push
push
sti
and
add
xchg
fsqrt
dec
xchg
fiadd
mov
inc
sti
and
sti
in
pop
adc
xchg
stc
mov
inc
in
js
mov
mov
sti
and
inc
lods
xchg
call
ret
sar
in
aas
add
cli
and
cli
xchg
fstp
xchg
pop
mov
rol
cli
and
sar
and
or
in
ret
sar
fnstcw
dec
xchg
and
xchg
mov
cli
and
mov
(bad)
call
xchg
xor
inc
xchg
call
pop
call
pop
call
push
call
pop
call
pop
and
push
xchg
and
stc
pop
call
xchg
and
xchg
xor
xchg
xor
xchg
and
mov
xor
xor
xchg
xor
dec
xchg
xor
dec
xchg
xor
cmp
clc
sbb
sbb
(bad)
stos
sbb
std
pusha
fwait
pop
in
sub
xchg
mov
sub
and
mov
xor
and
sub
inc
mov
sub
xchg
pop
adc
call
sub
ja
hlt
cwde
and
sub
dec
jle
cwde
and
sub
xchg
sahf
rcr
std
pop
ret
cwde
and
sub
inc
or
dec
ds
mul
or
and
or
daa
aaa
cmp
and
inc
outs
daa
push
cmps
and
inc
outs
daa
(bad)
mov
or
sub
xor
outs
xor
ss
and
inc
outs
add
inc
and
inc
outs
arpl
ja
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
add
xchg
retf
mov
ins
inc
add
xchg
retf
mov
jae
add
xchg
retf
mov
push
pusha
add
xchg
retf
mov
adc
xchg
retf
mov
ins
add
xchg
retf
mov
outs
xor
xchg
enter
and
xchg
enter
ror
inc
xchg
enter
ror
xchg
leave
mov
js
or
leave
mov
or
mov
gs
mov
xchg
enter
mov
inc
xchg
enter
and
inc
xchg
and
inc
std
rol
inc
xchg
and
ret
mov
xchg
and
mov
es
ret
fimul
aas
xchg
and
inc
xchg
and
inc
(bad)
and
inc
xchg
and
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
aas
xchg
and
mov
fidiv
in
jno
pop
and
mov
cmp
or
fmul
mov
in
aas
sub
fidiv
sub
fisttp
sub
fmul
xchg
in
or
mov
or
mov
fisttp
hlt
and
or
fisttp
sub
fisttp
sub
cli
or
xchg
or
mov
sub
push
or
jno
clc
stc
fisttp
fcmovnu
fisttp
sahf
xor
or
push
fisttp
sub
fisttp
sub
cli
or
popa
lahf
inc
outs
adc
fld
cmp
inc
inc
lahf
xchg
cmp
cld
lods
xor
cdq
retf
es
outs
and
inc
outs
and
inc
outs
and
outs
and
xchg
jbe
inc
mov
lods
aam
(bad)
inc
loope
les
or
inc
aaa
and
inc
mov
and
sbb
and
inc
push
jns
inc
push
xchg
jl
xchg
mov
popa
aaa
cwde
inc
push
aaa
cwde
jb
ss
bound
cwde
pop
add
cwde
and
xchg
sub
xchg
call
cwde
jg
aaa
cwde
ja
aaa
cwde
outs
and
cwde
addr16
cwde
pop
daa
ss
pop
or
cwde
sub
pop
cwde
inc
or
xchg
push
add
xchg
mov
or
cwde
fistp
cwde
xlat
test
cwde
iret
mov
jmp
jmp
call
xchg
mov
rcl
and
aas
stc
and
aas
shl
adc
test
and
pop
and
das
and
adc
mov
call
and
aas
fsub
push
aas
mov
xor
mov
and
dec
and
cmc
xor
and
sbb
and
(bad)
fsub
(bad)
push
xchg
and
inc
xchg
and
xchg
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
xchg
and
stos
dec
and
sbb
dec
or
ins
data16
dec
add
stc
inc
fisubr
push
fisub
sahf
and
mov
mov
or
or
jmp
or
(bad)
lods
or
and
xchg
xor
fimul
pusha
or
fdivrp
cdq
jge
imul
push
fsubrp
retf
stos
and
imul
(bad)
lods
or
dec
or
data16
loop
or
loop
scas
aas
mov
popf
lahf
xor
mov
xor
(bad)
(bad)
xor
pop
pop
inc
push
pop
cmps
inc
add
inc
cmp
lock
neg
inc
enter
fcomp
xor
jbe
xor
mov
xor
repnz
xor
pop
cmp
pop
inc
sbb
inc
lds
inc
and
inc
or
pop
out
xor
jbe
xor
xor
xlat
xor
xor
(bad)
xor
pop
inc
xchg
inc
xor
xchg
adc
mov
enter
enter
enter
enter
enter
enter
pushf
loope
cwde
jns
push
cwde
inc
rcr
xchg
and
mov
xchg
in
xchg
xchg
enter
enter
enter
enter
enter
enter
cmp
and
inc
jno
cwde
jecxz
push
cwde
nop
pusha
clc
xchg
in
ficom
enter
and
shl
and
adc
and
arpl
daa
stos
arpl
retf
and
stos
arpl
or
arpl
popa
stos
arpl
jno
inc
and
sub
and
call
and
mov
and
lea
and
test
jg
sub
mov
and
add
arpl
push
and
sbb
mov
sbb
and
adc
and
loop
push
or
stos
adc
push
mov
or
cmp
push
(bad)
das
or
pushf
fimul
sbb
adc
fimul
sbb
or
pushf
fimul
sbb
ror
sbb
or
pushf
fimul
sbb
ss
xchg
fimul
sbb
or
pushf
fdivp
xor
add
(bad)
f2xm1
ins
call
inc
outs
and
iret
cmp
xor
mov
inc
outs
and
xchg
cmp
cmp
dec
inc
pop
adc
jg
outs
and
jbe
and
push
inc
xor
push
pop
xor
push
sub
pop
push
dec
ja
pop
dec
ja
pop
dec
inc
cmp
cmp
pop
inc
outs
and
pop
sbb
pusha
sub
add
aas
xor
jne
pusha
adc
push
jle
cmc
dec
pop
add
push
jle
and
pop
ret
cwde
leave
or
cwde
leave
xor
jbe
sub
arpl
(bad)
dec
ficomp
sbb
and
adc
xchg
fst
add
or
leave
or
leave
rcr
je
packsswb
idiv
push
(bad)
(bad)
adc
push
jle
xchg
xor
jg
and
outs
sub
fs
cmps
jb
dec
movs
jb
sar
xor
cmp
aaa
xlat
cmp
pop
cmp
sahf
je
mov
ins
cmp
mov
inc
and
movs
jb
cmp
xor
cmp
aaa
push
cmp
cmp
dec
mov
test
cmps
data16
dec
mov
cmp
and
cmps
jb
(bad)
movs
jb
inc
cmp
aaa
pop
cmp
(bad)
cmp
xor
int3
fidivr
int3
fidiv
add
(bad)
xlat
or
call
inc
sti
int
sub
aaa
push
adc
aaa
add
adc
or
retf
popf
div
aad
push
hlt
aaa
and
xchg
aam
sbb
jbe
repnz
ins
or
aaa
div
jg
pop
sub
and
cmp
test
neg
add
cmp
adc
aam
inc
outs
and
cmc
cs
pop
in
push
pusha
xor
sbb
cmp
push
inc
pop
test
push
jecxz
xchg
inc
ror
and
fdivr
inc
outs
dec
call
xor
call
add
push
gs
sub
cmp
push
push
jle
push
inc
cmp
push
dec
pop
add
dec
inc
outs
dec
cmp
or
push
pop
xor
call
xor
cwde
movs
fwait
das
(bad)
div
dec
mov
push
je
sub
dec
mov
arpl
cwde
leave
add
cwde
leave
jae
pop
iret
push
dec
mov
lock
mov
addr16
and
adc
fcom
sub
inc
push
(bad)
fist
sub
leave
repz
jne
and
mov
sbb
std
push
push
(bad)
test
mov
mov
push
lea
sub
mov
sub
and
pushf
jno
ds
jne
xor
xor
dec
lea
dec
add
xlat
push
push
mov
stos
imul
stos
imul
mov
pop
inc
fs
inc
and
dec
mov
mov
mov
dec
lea
mov
mov
cdq
lods
mov
push
mov
push
mov
push
push
and
and
mov
aas
dec
mov
xchg
xchg
ss
mov
or
fisubr
push
stc
mov
add
sbb
aad
sbb
fimul
sbb
xor
es
in
les
push
push
jg
dec
test
not
rol
add
clc
iret
mov
(bad)
fisttp
sbb
fimul
sbb
xor
add
(bad)
retf
popf
push
(bad)
int
or
into
outs
inc
int3
in
int
jmp
aad
in
repnz
sbb
or
and
sbb
xor
push
jecxz
and
or
es
push
sbb
jle
push
mov
pop
cmc
inc
outs
and
out
inc
outs
and
dec
sub
movs
inc
loop
lea
xor
scas
adc
data16
xor
or
inc
outs
and
pop
and
pop
dec
cmp
and
bound
push
outs
adc
mov
aam
popf
iret
push
inc
mov
xchg
leave
or
cwde
leave
add
cwde
leave
or
cwde
leave
mov
mov
cdq
pop
jae
test
jbe
data16
jns
xor
push
pop
jne
je
addr16
push
adc
sbb
cs
leave
or
cwde
leave
add
cwde
leave
or
cwde
leave
xor
ret
jae
dec
push
jbe
inc
adc
fstp
xor
stc
xor
add
adc
stc
sub
leave
or
leave
or
and
and
jne
xor
jb
sahf
scas
fwait
shl
scas
fwait
rcl
mov
shl
inc
and
inc
fs
inc
fs
xchg
xchg
jmp
jno
das
test
aas
xchg
out
data16
jne
and
push
mov
inc
and
xchg
jne
xchg
xor
test
into
dec
xchg
adc
mov
pop
out
rcr
jmp
sbb
fimul
sbb
xor
mov
ret
(bad)
sti
movs
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
into
sbb
call
aam
sub
fimul
sub
xor
std
xchg
fisub
iret
sbb
(bad)
cmp
sar
sbb
call
aam
sub
fimul
inc
outs
and
sbb
inc
push
push
xor
jbe
das
push
jns
xor
pop
jns
aas
sbb
push
cmp
inc
outs
and
pop
inc
outs
dec
push
xor
xor
push
xor
sar
das
fdivr
xor
push
aad
xlat
dec
fistp
jns
iret
inc
outs
and
mov
xor
xor
cli
mov
cs
js
das
cwde
and
loope
jne
loop
push
icebp
stc
and
leave
add
cwde
leave
jecxz
xchg
mov
outs
neg
cmp
lods
shr
movs
shr
jbe
shr
mov
cs
push
add
cwde
leave
or
cwde
leave
add
cwde
leave
arpl
gs
push
adc
adc
lea
xor
jae
xor
jbe
bound
jne
bound
push
ret
cwde
leave
or
cwde
and
lods
jo
add
ins
cmp
jg
or
cmp
mov
outs
xor
ss
je
outs
inc
xchg
(bad)
pusha
inc
and
inc
and
inc
and
xchg
jno
test
jg
sub
xor
aaa
fbstp
lea
adc
shr
xchg
ins
and
inc
fs
inc
fs
inc
and
jno
inc
scas
mov
fidiv
mov
mov
xor
aaa
(bad)
pop
xchg
cmc
(bad)
xchg
xor
or
(bad)
or
call
sub
retf
bound
idiv
xchg
std
not
aaa
push
clc
xchg
push
pop
xchg
xor
sub
fimul
sub
retf
xchg
cmc
xchg
push
push
xchg
sbb
dec
xchg
idiv
xchg
xor
idiv
fimul
sub
and
sbb
mov
xor
xor
inc
xor
aaa
dec
das
sti
bound
sbb
popa
dec
adc
cmp
adc
inc
and
inc
outs
and
push
push
push
push
hlt
xor
dec
sub
xor
imul
arpl
cld
add
inc
xor
aaa
dec
add
sub
and
inc
outs
and
(bad)
adc
gs
std
xor
inc
sub
aaa
dec
xor
bound
adc
dec
(bad)
ficomp
xor
aas
ss
cwde
leave
sbb
imul
fs
fiadd
xor
test
sub
adc
jecxz
outs
ret
cwde
leave
add
cwde
leave
or
cwde
leave
xor
outs
mov
mov
pusha
pop
cmps
dec
imul
cmps
pop
aaa
mov
adc
imul
sbb
leave
or
cwde
leave
add
cwde
and
inc
fs
inc
and
inc
and
lods
imul
cmps
ins
fyl2xp1
inc
and
inc
and
and
and
arpl
loopne
fidivr
inc
mov
fimul
xchg
fldenv
xchg
and
xchg
adc
pop
fisubr
xchg
and
pop
fidivr
xchg
and
pop
fimul
inc
xchg
and
xchg
and
inc
xchg
and
xchg
and
inc
xchg
and
jb
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
add
fiadd
cwde
and
sub
or
mov
and
sub
ficom
rcr
pop
xchg
cwde
and
sub
fdivp
inc
mul
or
inc
out
(bad)
and
inc
outs
inc
xlat
sbb
and
inc
outs
inc
(bad)
sbb
inc
mov
mov
or
inc
cmps
sbb
inc
xchg
sbb
inc
xchg
and
inc
outs
inc
ja
ja
or
inc
sbb
or
ret
push
sbb
or
add
inc
es
aaa
sbb
and
daa
sbb
and
pop
sbb
and
pop
sbb
leave
push
gs
push
gs
push
or
xchg
enter
or
xchg
enter
dec
add
xchg
enter
push
stos
sbb
add
fwait
iret
jmp
iret
jmp
fmul
inc
xchg
sub
xchg
leave
or
enter
or
inc
xchg
enter
enter
enter
enter
enter
enter
and
inc
xchg
and
inc
xchg
daa
icebp
inc
xchg
cmp
inc
xchg
adc
inc
xchg
ins
icebp
inc
xchg
jp
inc
xchg
jl
inc
xchg
jo
inc
xchg
sbb
mov
xchg
sub
mov
inc
xchg
and
inc
xchg
and
inc
xchg
or
dec
pusha
mov
out
push
push
mov
or
mov
lea
xchg
mov
inc
xchg
dec
xor
and
and
xor
or
cdq
and
sub
and
iret
lea
shr
imul
retf
out
daa
retf
fild
in
xlat
fld
iret
ds
data16
xchg
ja
cdq
and
cdq
and
sub
and
adc
(bad)
push
outs
imul
in
jg
xor
ja
xor
outs
pop
xor
addr16
retf
push
xor
retf
dec
cmp
jae
inc
cld
imul
sub
and
push
outs
and
dec
outs
and
inc
mov
mov
push
pop
mov
push
sub
loop
cs
push
inc
cli
arpl
lea
push
mov
mov
call
sbb
add
lahf
outs
and
cmp
shr
stos
pop
push
pop
mov
pop
mov
sub
xchg
pop
lea
push
scas
clc
(bad)
adc
call
push
cwde
aad
in
fs
push
jp
or
enter
or
pop
sub
mov
gs
sub
test
fs
mov
gs
or
test
fs
fcomp
and
shl
mov
inc
or
or
lea
sub
mov
gs
add
cdq
enter
clc
fs
clc
fs
enter
enter
retf
and
out
sbb
fidivr
in
fsubp
les
fimul
sbb
imul
in
fidiv
in
fisub
leave
fisubr
hlt
add
pop
cdq
(bad)
fnstsw
cmps
jge
cmp
push
fisubr
cmc
add
jo
js
popa
out
fisub
pop
fimul
sbb
bound
adc
fisub
mov
je
mov
cmps
jae
dec
cmps
jae
or
fucom
dec
dec
in
inc
xor
add
aaa
xor
in
fwait
daa
aas
cmp
cdq
and
pop
and
cmp
rol
sbb
sar
sbb
shl
sbb
shr
mov
mov
fild
rcl
pop
shr
iret
add
out
fcmovbe
sar
fcmovbe
shr
adc
and
loopne
imul
xchg
aam
jg
aam
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ja
aam
outs
mov
and
jns
push
adc
mov
call
outs
cmp
hlt
and
mov
shl
outs
and
sub
or
lds
cli
ins
repz
adc
cmc
adc
pop
adc
stos
adc
stos
adc
lods
jl
les
mov
adc
xchg
adc
and
sub
and
inc
outs
and
inc
cmp
rcl
in
adc
adc
sbb
jmp
sbb
out
sbb
out
gs
sbb
cmps
sbb
mov
push
adc
or
enter
enter
enter
enter
adc
mov
jbe
retf
sub
sbb
or
popa
or
popa
or
movs
add
outs
xlat
sbb
enter
enter
enter
enter
enter
enter
and
xchg
and
xchg
and
dec
movs
mov
jmp
out
add
xlat
push
xor
xor
inc
xchg
and
xor
and
inc
xchg
and
inc
xchg
and
inc
and
push
loope
fs
inc
fs
inc
fs
inc
fs
inc
fs
inc
ins
xlat
mov
push
and
inc
and
inc
fs
dec
imul
cmp
(bad)
add
and
ficomp
add
sbb
ficomp
cdq
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
cdq
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
inc
outs
and
inc
outs
and
cmp
outs
and
sub
outs
and
xor
and
cmp
or
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
dec
outs
and
outs
and
je
and
xchg
outs
and
call
or
and
pop
outs
and
sub
outs
and
inc
outs
and
inc
outs
and
inc
xchg
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
out
pusha
add
fbld
jbe
packuswb
or
inc
or
or
enter
enter
enter
and
inc
xchg
cmp
mov
xchg
push
or
sub
xor
clc
pop
pop
mov
pop
inc
xchg
(bad)
jno
xchg
lods
jno
xchg
inc
popa
inc
xchg
adc
xchg
sub
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
ss
xchg
jns
or
mov
arpl
(bad)
push
inc
fisub
mov
fsubrp
cmc
jecxz
mov
arpl
das
ins
sbb
and
out
je
and
push
push
fcom
(bad)
(bad)
out
add
xchg
cmp
jg
cmp
ja
cmp
outs
out
mov
imul
cdq
and
sbb
and
sbb
and
sbb
push
icebp
dec
sub
jo
mov
into
cmps
repnz
mov
rcr
mov
(bad)
scas
cli
fcmovu
mov
mov
pop
in
adc
repnz
adc
cli
in
fwait
ds
xor
daa
or
test
jp
mov
or
stos
scas
or
dec
dec
or
bound
pop
xchg
sub
popf
ret
pcmpeqd
add
outs
and
mov
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
mov
mov
sub
or
or
dec
loopne
loop
in
or
dec
loope
cwde
pop
aas
adc
imul
mov
pcmpgtw
sub
gs
or
pop
pop
push
gs
jge
shr
gs
addr16
gs
mov
fs
icebp
fs
sbb
gs
mul
pop
jbe
or
enter
enter
enter
enter
enter
add
xchg
jge
aad
loopne
repnz
sub
fs
push
js
fisubr
mov
ins
fidivr
fimul
dec
imul
jo
dec
fidiv
xor
ficomp
xchg
push
fisub
adc
mov
fiadd
(bad)
call
ficomp
lock
test
inc
xchg
outs
and
xor
inc
xchg
and
inc
xchg
and
inc
xchg
and
cli
fsubr
stos
sub
retf
push
fimul
aam
clc
test
cld
xlat
fild
(bad)
xlat
test
aam
nop
stos
sar
fwait
mov
mov
inc
aaa
retf
lahf
adc
das
ror
movs
jmp
lods
repnz
jle
call
add
push
aad
retf
dec
pusha
cmc
in
inc
aas
mov
and
sbb
and
sbb
and
pop
dec
(bad)
inc
imul
jecxz
(bad)
lods
mov
pop
push
ins
in
fadd
pop
fimul
fild
fisttp
aam
sbb
mov
pop
cmc
popa
mov
pop
add
mov
imul
or
test
mov
pop
pushf
inc
push
leave
mov
loopne
xor
js
xor
xor
xchg
add
rep
and
data16
and
xor
or
and
inc
xchg
enter
add
or
xchg
int3
fs
jbe
fs
mov
pop
mov
or
xor
sbb
push
gs
std
adc
dec
adc
cmc
adc
inc
adc
mov
ja
xchg
gs
lahf
pop
gs
out
test
and
int
gs
mov
xchg
gs
mov
push
push
enter
enter
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
cli
fsubr
cli
(bad)
sbb
std
fimul
call
je
mov
fimul
jbe
ficomp
(bad)
fisub
pop
fdivp
push
fidiv
inc
data16
fidivr
xor
fwait
xor
adc
ficom
jb
fimul
xor
mov
inc
ficomp
daa
scas
xchg
or
and
sbb
and
sbb
and
sbb
and
pusha
dec
bound
bt
xor
div
out
stos
retf
iret
out
aad
(bad)
cli
fcom
(bad)
xlat
iret
loop
(bad)
(bad)
dec
rcl
jnp
shl
inc
test
lahf
cmc
icebp
xchg
xchg
xchg
mov
rol
jns
xor
rcl
addr16
in
sbb
rcl
mov
rol
iret
icebp
nop
add
fld
cwde
outs
and
sub
or
and
inc
outs
and
inc
outs
and
inc
mov
sub
lea
fld
sbb
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fild
fimul
aam
aad
mov
add
sbb
add
jge
add
inc
stos
add
mov
mov
add
adc
add
jmp
add
xchg
add
cmps
xchg
add
adc
add
jg
in
add
dec
push
enter
enter
enter
enter
enter
enter
add
xchg
mov
xor
fs
xor
fs
push
cld
fs
mul
clc
fs
hlt
fs
add
ror
inc
icebp
out
fs
out
push
ror
gs
js
pop
xor
fs
jmp
clc
fs
clc
fs
clc
fs
arpl
retf
arpl
mov
mov
ret
xor
adc
inc
xchg
sub
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
rcr
jns
push
fiadd
xchg
imul
xor
imul
fiadd
jne
and
jp
imul
aas
fsubrp
cs
fsubp
cmp
mov
(bad)
push
fisub
aas
mov
fstp
mov
push
jno
or
outs
je
jo
repz
and
in
cwde
and
in
cwde
and
in
cwde
and
in
cwde
and
in
cwde
and
in
cwde
and
es
bound
push
out
jp
shr
jp
shl
add
into
xlat
rol
(bad)
iret
fnstenv
repz
sub
loopne
sub
loopne
xor
clc
lahf
popa
test
repnz
pop
test
xchg
jmp
inc
shl
mul
xlat
jmp
cs
ja
mul
and
push
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
mov
stos
sar
adc
jmp
adc
jmp
jnp
dec
jns
call
inc
jmp
or
loope
(bad)
adc
push
cmps
jb
or
int
test
sbb
or
cmp
gs
retf
shl
fs
icebp
fisub
pop
sub
or
enter
enter
enter
enter
enter
enter
enter
enter
enter
add
or
test
gs
fs
aaa
jmp
and
gs
cld
or
dec
add
add
fs
add
and
fsub
fidivr
das
fimul
xor
and
and
mov
gs
push
jg
popa
inc
xchg
imul
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
xchg
mov
xor
stc
push
in
fimul
pusha
jbe
stos
sub
fisub
cmp
and
xchg
shl
fimul
(bad)
xchg
lahf
int3
sbb
xchg
rol
xchg
jae
xchg
jg
setp
adc
addr16
push
xchg
pop
jae
mov
loopne
cmp
cwde
and
cwde
and
in
cwde
and
in
cwde
and
in
cwde
and
in
cwde
and
in
cwde
and
in
cwde
and
jmp
inc
imul
cmps
out
dec
dec
ffreep
ret
(bad)
xlat
cmps
scas
sti
iret
mov
cmps
lock
inc
cmp
ins
cld
(bad)
mov
cld
sbb
ins
cld
scas
gs
cld
sbb
sar
mov
cld
pop
mov
stos
cld
rol
stos
cld
jmp
jp
jns
lock
and
mov
or
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
mov
dec
call
or
sti
push
jge
sti
aaa
or
sti
xchg
js
int3
fs
popf
scas
add
gs
xor
movs
cmps
mov
movs
test
outs
lea
fs
and
pusha
pop
sub
or
enter
enter
enter
enter
enter
enter
enter
enter
enter
add
xchg
inc
cmp
mov
repnz
xor
and
les
fiadd
jne
xchg
xor
and
push
faddp
add
ficomp
jl
fsubp
pusha
add
test
xor
icebp
aad
fcompp
fnstsw
shl
add
mov
adc
imul
call
xchg
mov
xchg
xor
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
xchg
push
fisubr
(bad)
movs
fcom
mov
and
jp
iret
mov
outs
sahf
shr
mov
enter
les
(bad)
jg
or
ja
adc
iret
sub
pop
into
push
pop
push
aam
pop
dec
loop
ss
jmp
and
jmp
and
jmp
and
in
cwde
and
in
cwde
and
in
cwde
and
in
cwde
and
jmp
or
push
jb
clc
cmp
loopne
or
sar
cmc
sub
(bad)
clc
sbb
clc
in
mov
clc
int
mov
leave
cmpxchg
aad
lods
clc
rol
test
mov
jg
clc
xchg
clc
mov
clc
sahf
jb
clc
mov
push
clc
(bad)
pop
lahf
clc
fmul
clc
hlt
test
clc
sbb
movs
cld
dec
lds
into
outs
and
push
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
xchg
enter
iret
or
aad
cmp
gs
cmc
fs
imul
cmp
fs
call
arpl
fs
in
fs
out
fs
loopne
fs
call
pcmpgtw
fisttp
gs
rol
gs
retf
mov
fs
or
enter
enter
enter
enter
enter
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
clc
sahf
dec
mov
pop
ficom
imul
and
pop
fmulp
data16
icebp
jo
fsubrp
ins
jb
adc
fmulp
js
faddp
les
iret
and
xchg
xchg
xchg
outs
fiadd
nop
jns
and
dec
ficomp
mov
daa
mov
and
and
mov
jg
and
adc
inc
xchg
and
xor
and
in
cwde
and
in
cwde
and
in
cwde
and
in
cwde
and
in
cwde
and
dec
aas
jb
shl
vandps
movs
iret
aas
push
iret
(bad)
sbb
loope
mov
loope
scas
push
jecxz
cmps
(bad)
fmulp
lahf
std
loop
xchg
cld
(bad)
ror
push
sar
aad
ja
leave
shr
int
addr16
aad
pop
int3
push
pop
lds
leave
stc
inc
add
xor
cwde
and
jmp
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
popa
sar
mov
inc
xchg
or
retfw
hlt
(bad)
scas
mov
hlt
out
push
mov
hlt
aad
popf
hlt
pop
jnp
hlt
sbb
hlt
sbb
hlt
push
ja
hlt
or
hlt
lds
(bad)
jae
hlt
leave
jns
hlt
sar
hlt
mov
add
mov
mov
hlt
je
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
lods
xchg
enter
enter
enter
enter
enter
enter
enter
enter
aas
aad
xor
push
jns
fs
mov
fs
repz
push
lock
inc
lock
icebp
outs
cmp
out
fs
jmp
cli
cmp
sti
add
fs
fwait
int3
fs
jmp
call
in
fs
in
fs
push
jae
ins
std
fadd
and
xchg
pop
xor
xchg
adc
aas
xchg
and
xchg
and
aas
xchg
and
inc
xchg
and
inc
xchg
and
or
add
mov
fdivp
ret
lock
and
mov
xor
cmp
imul
js
imul
(bad)
ins
fidiv
fisubr
push
pop
fisub
and
sub
pusha
fiadd
jmp
mov
xchg
push
mov
(bad)
mov
xlat
aas
ss
aaa
jno
lods
das
add
cwde
and
fistp
and
fcomp
and
fcomp
imul
dec
inc
inc
retf
lods
fnstenv
adc
mov
call
scas
pusha
loop
cmps
or
lahf
rol
aad
int3
rcl
(bad)
mov
fdivr
scas
fnstenv
stos
fisubr
sub
inc
cmps
push
imul
dec
xchg
icebp
cmp
(bad)
call
xor
retf
loop
bound
and
dec
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
mov
in
dec
xchg
loop
pop
mov
inc
mov
es
inc
lahf
(bad)
cli
and
lock
mov
dec
scas
lea
iret
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
in
repz
loopne
sbb
add
xchg
test
inc
xchg
test
inc
xchg
test
inc
xchg
test
inc
xchg
test
inc
xchg
test
inc
xchg
test
inc
xchg
test
inc
xchg
push
add
cwde
push
add
xchg
and
inc
xchg
rol
rol
rol
add
add
adc
adc
add
cs
xchg
cs
inc
xchg
cs
xchg
mov
inc
xchg
es
xchg
es
inc
fistp
inc
xchg
and
inc
xchg
and
xchg
and
inc
mov
loope
xchg
and
fidiv
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
fcomp
and
fcomp
and
fcomp
and
fcomp
and
fcomp
and
fcomp
and
fcomp
and
fcomp
and
fcomp
and
fcomp
and
fcomp
and
fcomp
and
fcomp
and
fcomp
and
fcomp
and
inc
outs
and
push
outs
and
pop
outs
and
push
outs
and
aas
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
cmp
or
outs
and
mov
or
and
arpl
or
and
xor
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
xor
xchg
push
push
jmp
cmp
pushf
and
xchg
mov
xor
xchg
push
and
xchg
jp
aas
xchg
(bad)
icebp
inc
xchg
add
inc
xchg
xor
inc
xchg
sub
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
fcomp
and
fcomp
and
(bad)
jbe
push
dec
imul
push
jno
dec
cmc
jg
mov
nop
sub
fcomp
and
fistp
and
fcomp
and
fcomp
and
fcomp
and
fcomp
and
fcomp
and
fcomp
and
cwde
and
or
pusha
scas
inc
cmc
stos
mov
push
cmp
int3
jmp
xchg
xchg
jmp
out
push
dec
ss
mov
and
shr
or
outs
and
je
and
lea
or
outs
and
and
or
and
inc
outs
and
inc
outs
and
dec
inc
and
(bad)
and
fld
xor
xchg
jb
scas
mov
scas
call
mov
shl
stc
xchg
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
sub
out
dec
jge
test
(bad)
fs
adc
div
fs
cli
out
das
cli
out
daa
(bad)
fs
loopne
adc
stos
fs
mov
pusha
add
sub
shl
dec
aad
push
sub
icebp
inc
xchg
mov
inc
xchg
cmps
loope
xchg
push
loope
xchg
je
inc
xchg
sbb
inc
xchg
sbb
loopne
movs
out
(bad)
shl
xchg
add
pop
pop
ja
pop
xchg
pop
xchg
sub
fisubr
arpl
sbb
ficomp
arpl
or
dec
fisub
icebp
mov
xchg
xor
pop
xor
sbb
and
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
fcomp
and
dec
dec
jno
jb
cwde
iret
ror
repnz
test
repnz
int
(bad)
mov
sahf
fist
push
cmps
fld
xchg
add
outs
ins
or
arpl
sbb
outs
add
fcomp
push
jno
inc
dec
das
idiv
mul
add
retf
pop
add
retf
pop
mov
retf
cmpxchg
retf
pop
inc
scas
pop
shl
inc
fsubp
mov
in
inc
repnz
inc
repnz
inc
loop
scas
pop
nop
in
loope
out
ins
fmul
imul
xor
and
cmp
or
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
das
in
xchg
in
mov
inc
in
js
in
js
in
js
in
sbb
in
push
sub
test
cmp
in
pop
adc
xchg
adc
in
adc
in
fs
and
fs
call
fs
ss
out
out
mov
push
xchg
fs
nop
shl
ins
adc
pop
fs
and
fldenv
fldenv
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fldenv
fldenv
mul
arpl
pop
fs
loop
xor
fsub
fsub
fsub
fsub
mul
sub
ds
or
enter
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
std
fisubr
jg
dec
fisubr
dec
ficomp
mov
pushf
sub
xchg
adc
pop
fisubr
pop
fisub
ins
(bad)
pop
ins
fiadd
ins
ficomp
ja
fdivp
mov
fst
ins
fisubr
xor
not
icebp
ficom
push
fimul
adc
retf
daa
adc
retf
pop
add
retf
pop
add
retf
shrd
rol
dec
jl
retf
stc
mov
out
xor
cmps
out
test
xlat
inc
test
(bad)
aad
retf
mov
sti
imul
xchg
in
cwde
and
jmp
and
in
cwde
and
in
cwde
and
in
cwde
and
in
cwde
and
in
cwde
and
in
cwde
and
stos
pop
mov
xchg
push
and
test
test
idiv
inc
(bad)
push
loop
pop
cmp
lea
and
mov
adc
mov
add
loope
outs
mul
push
outs
cld
loope
ins
cmc
loope
jo
loope
ja
loope
sbb
loope
sbb
loope
sbb
loope
lods
jp
mov
xchg
loope
jbe
loope
jbe
loope
jbe
loope
jbe
loope
inc
test
mov
scas
mov
loope
dec
lods
loope
mov
loope
mov
loope
jns
loope
rcr
in
fs
in
fs
fucomip
fs
cmp
fs
and
enter
enter
enter
enter
enter
enter
enter
enter
push
retf
pop
pop
xchg
add
mov
clc
fs
clc
fs
clc
fs
aam
mov
fisub
(bad)
fsub
fsub
xlat
fs
(bad)
lods
(bad)
(bad)
fs
(bad)
fs
mov
aam
and
sbb
loop
push
ficom
ja
sub
fidivr
js
fidivr
js
fimul
jno
addr16
sbb
fisubr
pop
pop
fidivr
sbb
test
pop
fiadd
fisub
pop
xor
fidivr
ja
fisubr
pop
xor
cmc
mov
xchg
push
mov
inc
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
jmp
test
xchg
dec
and
clc
inc
xor
clc
aas
xor
clc
aaa
adc
das
aaa
test
fstp
sbb
pop
test
(bad)
pop
xchg
(bad)
inc
aam
rcl
out
retf
jg
rcl
ins
lods
ror
ins
mov
(bad)
mov
loope
retf
scas
loope
retf
cmps
icebp
int3
retf
lahf
icebp
int3
retf
xchg
sub
pop
xchg
aad
ja
mov
outs
cmp
mov
pop
inc
fidivr
mov
push
fisubr
xor
imul
fiadd
sub
dec
enter
and
lds
or
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
mov
dec
xchg
fnstsw
push
fisttp
push
fisttp
push
fstp
rcr
or
popf
fisttp
cmp
frstor
arpl
(bad)
fs
cmps
mov
xlat
fs
mov
fs
push
shl
shl
shl
add
test
fs
xlat
call
fs
mov
ja
bound
fs
or
dec
jmp
jmp
jmp
jmp
call
aad
fs
jecxz
rcr
fs
push
jmp
fs
jns
enter
and
inc
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
outs
sub
ficom
inc
fimul
jl
fdivrp
sub
arpl
cmc
cmp
iret
pop
ins
ficom
ins
fimul
imul
lea
mov
ficomp
imul
outs
sbb
popa
sbb
dec
sbb
pop
fsubrp
mov
jno
(bad)
je
fimul
hlt
int
xchg
and
test
adc
cmps
jg
push
mov
outs
jno
(bad)
addr16
(bad)
pop
add
mov
aas
lods
jmp
aaa
jmp
retf
das
jecxz
retf
daa
sti
int
pop
mov
cwde
and
in
cwde
and
in
cwde
and
in
cwde
and
in
cwde
and
in
cwde
and
in
cwde
and
and
cwde
(bad)
scas
aad
mov
xor
scas
inc
clc
dec
popa
fimul
add
mov
or
sbb
aas
jle
fisubr
(bad)
jno
fcmovu
jb
(bad)
adc
(bad)
sbb
pop
sbb
fisubr
pop
cmp
push
jl
fiadd
mov
xor
xor
fidivr
push
and
add
fisubr
push
hlt
fnstenv
test
fxch
cmps
xchg
fldenv
loop
dec
adc
fst
repnz
loop
or
fnstenv
add
push
out
adc
aaa
out
add
or
enter
enter
enter
enter
enter
enter
enter
xchg
adc
mov
lock
fs
pusha
fs
int3
cmps
mov
fs
jmp
fs
jmp
fs
sub
fild
xlat
xlat
sub
fs
sub
fs
add
fs
xor
fs
cmp
and
fiadd
mov
dec
push
inc
ficom
xchg
in
adc
ficom
js
fiadd
js
fiadd
js
ficom
js
fisubr
pop
pop
(bad)
les
fdivp
xor
xor
xor
xor
cmps
jmp
jns
fiadd
je
inc
jns
ficom
jns
fisub
fmul
and
icebp
inc
xchg
cmp
loope
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
jmp
xchg
sbb
lods
mov
add
das
and
fsub
lahf
mov
aad
mov
fisttp
pop
sbb
pop
mov
ja
mov
fisub
test
pop
popa
adc
ja
aam
ins
jg
inc
mov
iret
aaa
enter
mov
jg
mov
fcmovnbe
pop
mov
fcmovnbe
pop
pop
fcmovnbe
push
mov
out
inc
aaa
fcmovbe
dec
aaa
fcmovbe
inc
aaa
fcmovbe
lods
(bad)
cmp
(bad)
lahf
fs
(bad)
lahf
fs
(bad)
jg
cdq
(bad)
xchg
(bad)
inc
sti
(bad)
cli
outs
and
mov
or
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
cmp
int
cmovae
aad
mov
aad
sbb
(bad)
nop
add
(bad)
mov
pop
(bad)
lea
or
jg
add
aad
add
aad
or
int
cmp
into
fs
iret
fs
sti
shl
shl
in
imul
out
in
stc
call
fs
(bad)
mov
fs
inc
shl
shl
shl
shl
or
jmp
fs
add
int3
fs
cmc
int3
fs
int3
fs
ja
fs
int
fs
(bad)
dec
mov
shl
shl
retf
sub
scas
and
inc
xchg
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
cld
fisubr
sub
fidivr
or
fidivr
or
fisubr
ins
fidiv
arpl
push
cmp
retf
and
xor
ins
fmulp
sbb
ror
fimul
punpckhwd
aad
fimul
fsubp
sbb
(bad)
sub
mov
adc
dec
sahf
icebp
ficomp
cmps
rol
dec
cmps
sar
jbe
shl
push
cld
and
test
(bad)
mov
xlat
cmc
mov
iret
in
mov
(bad)
and
push
mov
outs
test
shl
fs
sbb
cwde
and
jmp
cwde
and
jmp
or
cwde
and
jmp
or
cwde
and
pushf
pop
mov
les
jne
int
xchg
fcmovbe
pop
inc
int
and
mov
pop
ror
cmp
rcr
sbb
ror
adc
rol
adc
rcr
adc
shl
outs
fcmovnbe
out
imul
sub
movs
rcl
stos
rcl
test
in
lods
test
mov
imul
fistp
je
rcr
jl
retf
jge
rcl
mov
rcl
(bad)
pop
mov
rcl
mov
rcl
sbb
sbb
xor
xchg
lods
loop
outs
fcmovnu
fs
pop
fs
daa
pop
enter
enter
enter
enter
enter
enter
enter
enter
enter
push
retf
pop
push
xchg
fs
ds
push
push
shl
shl
fsub
xlat
fs
int3
cmps
push
fldenv
xlat
fs
pop
aad
js
aad
push
rcl
dec
mov
shl
shl
or
and
shr
jbe
push
push
inc
fmulp
or
jno
hlt
fisubr
ficom
ins
fidiv
daa
ins
fidiv
daa
ins
fisub
daa
ins
ficom
daa
ins
fidiv
ins
fidiv
ins
fisub
and
fidiv
and
fidiv
and
fimul
mov
fidiv
inc
xchg
aas
jno
xchg
and
popa
inc
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
ficomp
fs
ret
loop
pop
aad
daa
pop
aad
pop
pop
aad
pop
outs
mov
rol
xor
aam
jns
aam
popa
lods
shl
push
(bad)
xlat
push
movs
rol
mov
sar
fwait
mov
(bad)
cmps
mov
cld
lahf
mov
cmps
clc
(bad)
mov
add
xor
lods
ja
mov
fsub
mov
pop
mov
cmps
or
inc
iret
mov
inc
iret
mov
xor
cmps
or
ds
push
mov
mov
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
mov
jge
into
call
push
fwait
into
clc
push
pushf
into
add
jnp
xor
jp
cmc
imul
fs
ret
shl
aam
out
int
fs
fs
aam
fs
call
fs
jmp
fdiv
fs
xor
fs
jo
test
mov
push
sbb
xor
retf
daa
retf
out
leave
fs
jmp
add
jge
fs
xchg
cmps
push
aad
or
enter
enter
enter
enter
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
inc
xchg
and
inc
xchg
and
fisubr
mov
imul
mov
imul
and
jne
and
jne
mul
jl
adc
inc
fdivrp
pop
aas
fdivrp
adc
xchg
xchg
jns
pop
fidiv
push
ficomp
adc
imul
fidivr
dec
fidivr
dec
fimul
dec
faddp
adc
or
iret
jmp
xchg
shr
addr16
fidivr
push
inc
xor
lock
inc
lock
aas
mov
aaa
aaa
inc
adc
jbe
lods
fstp
and
ficomp
and
ficomp
and
ficomp
and
ficomp
and
ficomp
and
ficomp
and
and
fs
int
cmps
jbe
rcr
jbe
ror
retf
adc
pop
gs
sbb
pusha
retf
adc
push
add
cmp
retf
add
cmp
test
push
dec
retf
or
jne
push
jge
retf
jle
push
retf
lea
retf
or
retf
adc
(bad)
retf
int
mov
imul
cmps
ins
iret
retf
(bad)
popa
retf
retf
leave
retf
test
add
retf
cs
or
outs
and
inc
xchg
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
xchg
adc
add
out
iret
fs
iret
fs
iret
fs
aam
sub
and
and
loop
sub
jmp
fs
mul
clc
fs
add
mov
gs
mov
xchg
and
fisubr
fisub
pop
fisubr
push
fidivr
dec
fisubr
jge
fidiv
push
fisub
jne
fisubr
and
imul
dec
lods
cld
fisub
inc
xchg
scas
xor
adc
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
ficomp
fs
dec
(bad)
lahf
imul
aam
add
test
ja
add
mov
cmps
cld
pop
mov
stos
out
dec
movs
movs
jmp
aas
test
pushf
aaa
mov
xchg
das
lods
retf
adc
loope
dec
int
xadd
test
ja
cmp
rol
jo
xchg
out
leave
popf
fisttp
leave
popf
xlat
push
(bad)
fwait
iret
adc
cdq
mov
js
(bad)
aad
and
outs
and
mov
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
cmp
int
jecxz
inc
(bad)
sbb
sbb
mov
sbb
sbb
mov
ret
mov
jmp
or
(bad)
mov
mov
clc
add
mov
add
push
xchg
fs
sub
gs
(bad)
clc
fs
add
fs
add
ret
lea
xchg
fs
ror
adc
lea
(bad)
fs
xchg
fs
popa
pusha
fs
enter
enter
enter
enter
enter
enter
enter
enter
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
cld
fisubr
ins
cmovge
and
in
fidivr
sbb
jbe
mov
inc
fisubr
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
fisubr
jnp
fisub
and
imul
fimul
adc
and
mov
ficom
xor
push
outs
xor
or
out
(bad)
fild
rcl
(bad)
movsx
mov
retf
(bad)
scas
je
inc
cmps
ficomp
and
fstp
and
ficomp
and
ficomp
and
ficomp
and
ficomp
and
ficomp
and
ficomp
and
pushf
pop
mov
mov
movzx
add
stc
cmp
ret
fwait
or
ret
lods
pinsrw
push
ret
ret
mov
mov
ret
mov
retfw
ret
cmp
ret
or
ret
sbb
jne
push
jge
ret
cs
ret
cmp
dec
ret
xor
ret
imul
ret
mov
jnp
ret
iret
inc
jle
iret
inc
jbe
rol
ret
aad
ins
ret
mov
jle
ret
adc
ret
push
xchg
mov
and
adc
or
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
push
(bad)
or
scas
sub
lods
cs
adc
fs
cdq
fs
sub
fs
xor
fs
xchg
fs
cli
nop
fs
lds
fs
cmc
and
sbb
ficom
and
ficom
ficom
sub
cmp
sub
adc
sub
adc
ficom
aaa
fiadd
and
ficom
clc
fidiv
inc
xchg
adc
inc
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
lods
cwde
and
jmp
jns
ror
xchg
out
dec
mov
neg
jns
cmc
xlat
or
or
jecxz
(bad)
and
mov
add
mov
fucom
scas
repz
in
out
jecxz
in
fucom
(bad)
jmp
lahf
xchg
fcomp
ja
ret
xchg
std
and
clc
mov
dec
or
test
ret
xchg
add
pop
jge
rcr
test
outs
and
shr
or
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
mov
jge
mov
and
xor
xor
or
push
cmp
mov
push
mov
fs
loope
call
sub
sub
inc
fs
xchg
int
stos
outs
in
pop
pop
repnz
inc
cmc
fs
mul
icebp
fs
repz
in
fs
in
gs
push
das
fldenv
fbld
loop
push
and
enter
enter
enter
enter
enter
enter
enter
enter
enter
and
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
fisubr
dec
dec
ins
fidivr
dec
ins
fidivr
dec
ins
fisubr
dec
ins
fisub
dec
fimul
inc
fimul
dec
pop
fidivr
push
push
int
push
faddp
push
jae
ins
add
jbe
xor
loope
adc
inc
shl
fiadd
rcr
(bad)
fdivp
(bad)
in
or
loopne
push
xor
ror
or
test
push
test
retf
pop
mov
inc
pop
stos
cwde
and
cwde
and
cwde
and
stos
cwde
and
stos
cwde
and
stos
cwde
and
stos
cwde
and
stos
cwde
and
stos
cwde
and
stos
cwde
and
stos
cwde
and
stos
cwde
and
stos
cwde
and
stos
cwde
and
stos
cwde
and
stos
cwde
and
fs
in
xchg
mov
ja
mov
outs
inc
cmp
popa
mov
mov
lahf
mov
sbb
inc
mov
jmp
mov
fstp
and
cmp
mov
rol
call
mov
int
xchg
mov
neg
mov
jne
sub
mov
xchg
mov
outs
and
rep
and
int3
outs
and
xor
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
xchg
adc
cmp
mov
adc
mov
fs
jmp
fs
mov
and
fld
mov
ficomp
mov
clc
sti
test
fs
stos
fs
mov
jp
inc
pop
js
inc
gs
fidivr
inc
fimul
inc
fimul
dec
ficom
imul
outs
outs
push
fisub
fmulp
sbb
fisub
ret
push
fimul
out
fisubr
(bad)
jno
mov
aad
mov
xchg
add
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
lods
cwde
and
(bad)
arpl
xchg
fdiv
xchg
fsubr
xchg
fsub
jp
pop
jo
jg
in
jns
dec
cmp
inc
ret
aas
xor
aaa
cmp
into
das
cmp
daa
adc
pop
pop
addr16
add
(bad)
jo
pop
or
dec
cli
out
inc
jbe
out
inc
neg
add
xlat
js
repz
jge
out
(bad)
pop
dec
icebp
mov
gs
out
bound
cmps
inc
xor
retf
out
mov
adc
ret
mov
mov
and
pop
outs
and
push
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
cmp
dec
(bad)
jg
fnstenv
movs
fdivr
mov
(bad)
rol
stos
mov
mov
mov
mov
mov
in
mov
jl
mov
imul
lahf
fs
mov
popf
fs
xchg
fs
dec
xchg
fs
(bad)
fs
call
xor
fs
pop
mov
jg
add
fs
jle
or
fs
sti
lods
enter
jae
sub
inc
mov
or
enter
enter
enter
enter
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
or
mov
xchg
inc
fidiv
mov
dec
faddp
and
fidiv
out
ficom
jb
lock
out
icebp
jno
in
jno
add
jo
dec
cli
ficom
fidivr
test
push
xchg
jae
call
fisubr
pushf
inc
ficomp
fwait
dec
ficomp
jp
out
(bad)
push
inc
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
push
call
cmps
pop
pop
in
jmp
pop
loope
into
push
pushf
xchg
adc
inc
stos
cwde
and
lods
cwde
and
lods
cwde
and
lods
cwde
and
lods
cwde
and
lods
cwde
and
lods
cwde
and
lods
cwde
and
lods
cwde
and
lods
cwde
and
lods
cwde
and
lods
cwde
and
lods
cwde
and
lods
cwde
and
jmp
inc
in
idiv
ins
(bad)
out
or
out
and
xor
mov
mov
xchg
mov
mov
xchg
mov
fcomp
mov
lahf
jns
mov
loop
mov
call
ja
icebp
call
pop
mov
repnz
cmc
pop
mov
out
pop
mov
icebp
push
mov
in
mov
jecxz
mov
loop
mov
pushf
push
mov
xchg
mov
add
scas
push
and
popa
xchg
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
and
pop
mov
repnz
in
outs
popf
fs
xchg
xor
adc
dec
mov
cmp
cmps
fs
fs
pusha
cmps
fs
cmps
fs
mov
lahf
push
mov
out
lds
and
mov
jle
fisub
imul
sub
xchg
push
inc
xchg
push
sub
(bad)
lea
dec
mov
push
ins
mov
popa
call
jl
mov
popa
inc
xchg
mov
jno
xchg
and
inc
xchg
and
xchg
and
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
sub
fst
push
mov
pop
loop
sbb
out
adc
(bad)
out
inc
sti
(bad)
les
int
iret
iret
jecxz
into
(bad)
fcom
mov
xor
aad
or
aam
adc
push
inc
aam
sub
aam
sub
xchg
push
aam
daa
push
aad
and
outs
push
into
addr16
into
pop
daa
push
aad
xor
dec
aam
xor
pop
inc
shl
std
inc
shr
adc
daa
or
fstp
jns
fst
inc
cmp
adc
or
in
cmp
mov
outs
and
or
and
pop
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
mov
cs
fisttp
scas
inc
xlat
addr16
sar
push
enter
mov
mov
mov
mov
loope
mov
jecxz
mov
in
das
mov
out
mov
call
sbb
mov
outs
cmp
lods
fbstp
fs
test
fs
jmp
dec
mov
pminsw
fs
int3
cmps
fs
(bad)
mov
inc
fnstenv
gs
fs
stos
and
sub
xor
dec
enter
enter
enter
enter
enter
enter
enter
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
sub
jmp
and
(bad)
mov
outs
fidiv
jne
imul
fidivr
jns
fiadd
push
cmp
imul
xchg
xchg
push
ficomp
mov
scas
mov
ins
fidiv
ins
fimul
arpl
jle
data16
cmp
dec
aam
daa
inc
shl
or
pop
add
push
(bad)
jecxz
fadd
pop
inc
fdivr
pop
ja
mul
shr
leave
aam
jecxz
xchg
and
pushf
cwde
and
fwait
cwde
and
pushf
cwde
and
pushf
cwde
and
pushf
cwde
and
pushf
cwde
and
pushf
cwde
and
pushf
cwde
and
pushf
cwde
and
dec
test
cmp
jns
and
les
call
xchg
addr16
push
leave
pop
push
iret
push
push
iret
dec
inc
and
lods
mov
das
lods
(bad)
in
daa
lods
sti
jmp
sbb
shl
lods
(bad)
icebp
sbb
adc
sti
lods
adc
sti
lods
add
lock
or
icebp
lods
scas
shl
mov
retf
fisubr
aad
lods
stc
in
fsubr
xchg
(bad)
lods
stc
lock
cli
fwait
lods
sahf
not
lods
add
sub
xchg
sahf
lods
push
adc
xchg
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
xchg
push
add
xchg
push
add
jl
mov
pushf
fs
retf
cdq
retf
cdq
retf
mov
jge
fs
fwait
fs
(bad)
mov
push
int
fs
mov
jno
mov
outs
mov
scas
lods
pusha
scas
fs
push
and
lea
lods
cwde
ins
fidiv
ins
fimul
arpl
stos
ja
ficomp
mov
fisubr
jge
faddp
mov
iret
xchg
pop
fisub
pop
fisub
mov
xchg
jl
ficom
add
fidivr
inc
xchg
cmp
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
cld
fild
jno
xchg
and
pusha
iret
ins
imul
fwait
pop
adc
call
dec
add
call
aas
dec
sub
aaa
push
push
into
das
pop
pop
aad
xor
dec
aam
adc
stc
push
rol
mov
dec
shl
int3
dec
(bad)
aad
fsub
pop
inc
fcomp
pusha
inc
xlat
xlat
pop
outs
xlat
iret
dec
jl
mov
xchg
mov
scas
push
(bad)
fcmovnu
popa
enter
lahf
and
xchg
or
in
(bad)
push
adc
test
in
mov
imul
mov
lds
call
aas
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
cmp
inc
bound
sbb
xor
add
imul
cmp
sbb
sub
cmp
sbb
jnp
dec
sub
add
sbb
fs
mov
fs
leave
fs
xchg
jmp
dec
cwde
jge
stos
cdq
jge
pop
xchg
xchg
test
mov
jecxz
cmps
fs
call
iret
cli
dec
(bad)
adc
(bad)
add
inc
add
jo
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
and
inc
xchg
and
inc
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
fst
mov
std
fldcw
push
pop
test
sti
xlat
stos
cwde
imul
out
push
fadd
jbe
(bad)
fimul
xchg
and
fwait
cwde
and
pushf
cwde
and
pushf
cwde
and
pushf
cwde
and
pushf
cwde
and
pushf
cwde
and
pushf
cwde
and
pushf
cwde
and
pushf
cwde
and
pushf
cwde
and
pushf
cwde
and
pushf
cwde
and
pushf
cwde
and
pushf
cwde
and
pushf
cwde
and
pushf
cwde
and
pushf
cwde
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pushf
cwde
and
sub
and
sbb
cmps
and
push
cwde
and
fwait
xchg
and
add
and
je
and
pushf
fwait
and
inc
mov
or
and
or
and
inc
xchg
and
inc
outs
and
inc
and
inc
outs
and
inc
jbe
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
or
and
inc
(bad)
and
or
and
or
adc
xchg
enter
add
xchg
enter
xor
xchg
enter
and
xchg
leave
sahf
inc
xchg
ror
inc
xchg
leave
outs
inc
xchg
ror
xchg
leave
pop
inc
xchg
lock
leave
outs
inc
xchg
loopne
inc
xchg
leave
pop
inc
xchg
nop
or
leave
cs
xchg
or
xchg
leave
push
inc
xchg
mov
inc
xchg
leave
cs
xchg
mov
push
inc
xchg
push
or
enter
inc
or
enter
jo
inc
xchg
enter
and
xchg
and
push
xchg
and
aas
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
xchg
and
push
xchg
and
ss
and
ss
and
xchg
and
ss
and
xchg
and
ss
and
xchg
xchg
and
xchg
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
fwait
and
lods
cwde
and
ins
fwait
and
lods
cwde
and
lods
cwde
and
lods
cwde
and
lods
cwde
and
lods
cwde
and
lods
cwde
and
lods
sbb
or
and
sub
mov
or
or
mov
or
fimul
mov
fimul
fnstenv
or
jae
or
cdq
xor
call
stc
jp
xchg
push
add
das
xchg
mov
inc
pop
mov
inc
jns
cwde
mov
imul
ja
sahf
mov
imul
push
push
jle
pop
shr
push
push
pop
xchg
push
pop
xchg
inc
outs
(bad)
lahf
inc
pop
fist
xor
xor
ficomp
xchg
or
xor
sbb
sub
inc
push
and
inc
cs
and
inc
out
and
inc
outs
and
inc
xchg
enter
enter
enter
enter
enter
dec
or
inc
xchg
or
inc
xchg
push
add
lock
fmul
inc
xchg
call
or
enter
mov
xchg
enter
enter
enter
enter
enter
enter
(bad)
gs
(bad)
bound
cmp
stc
xchg
push
push
jmp
ins
push
adc
in
pop
fsub
(bad)
and
aas
mov
fisttp
and
into
cmp
ret
and
pusha
and
movs
pusha
and
jp
and
xchg
pusha
and
jmp
pusha
and
and
cmps
pusha
and
retf
or
cmp
pop
and
mov
mov
jno
and
(bad)
arpl
shl
and
nop
popa
and
mov
into
jp
and
xchg
xchg
cmp
shr
or
mov
jp
retf
sub
or
fmul
push
dec
retf
push
enter
out
or
jmp
or
cmp
push
pop
loope
push
push
(bad)
or
jae
or
jbe
or
sti
or
dec
icebp
or
sbb
scas
or
aas
or
push
mov
mov
daa
cwde
or
dec
xchg
push
mov
mov
jae
rcr
pop
adc
inc
out
inc
jle
aaa
fwait
mov
mov
inc
or
lahf
inc
adc
jns
push
mov
popa
inc
loop
pop
inc
pop
mov
inc
push
cmp
inc
mov
xchg
inc
scas
in
inc
xchg
les
mov
push
inc
mov
lea
inc
call
xchg
inc
xchg
inc
xchg
aas
call
cdq
xchg
mov
xchg
mov
dec
mov
mov
fmul
test
mov
xchg
cmp
bound
lods
(bad)
nop
xchg
mov
cwde
xchg
loope
cwde
xchg
mov
cwde
xchg
pop
jbe
xchg
xor
in
push
jb
xchg
ds
cwde
xchg
ds
xchg
pop
mov
pusha
xchg
adc
xchg
xchg
inc
cdq
xchg
xchg
xor
lahf
xchg
push
cmp
je
sahf
jno
and
mov
and
and
loopne
and
fild
ret
and
adc
and
mov
arpl
push
nop
pop
and
pusha
and
das
and
jno
and
push
add
and
frstor
and
pusha
and
cmp
and
lods
push
and
mov
arpl
into
lea
repz
and
push
and
dec
add
or
sti
jl
fimul
xchg
xor
mov
or
add
mov
inc
les
retf
or
or
dec
fmul
and
fimul
xchg
sbb
or
or
or
lock
popa
fisubr
and
(bad)
or
jp
or
fimul
bound
or
jmp
repz
arpl
mov
inc
jg
cmp
inc
and
les
imul
mov
inc
xchg
das
cli
inc
ins
daa
test
push
mov
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
xchg
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
leave
and
aas
xchg
and
aas
xchg
xor
pushf
call
sahf
inc
shl
call
fist
(bad)
daa
shl
xor
xor
loopne
xor
mov
shl
and
jle
ins
push
or
stos
or
and
imul
(bad)
popa
mov
mov
mov
(bad)
cmps
add
in
scas
call
test
push
imul
jns
push
or
test
cdq
push
sbb
out
jl
sub
adc
fs
sub
scas
pop
or
xchg
jmp
jo
xchg
fcmovne
push
sbb
jb
adc
lods
or
or
inc
cmp
push
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
inc
outs
and
inc
outs
adc
mov
test
inc
inc
and
inc
dec
sub
inc
cs
or
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
out
and
inc
out
and
inc
cs
or
and
inc
xchg
and
or
and
inc
outs
and
xchg
enter
dec
add
inc
xchg
enter
enter
enter
enter
enter
enter
enter
dec
or
xchg
dec
add
xchg
dec
mov
mov
dec
mov
xchg
enter
enter
enter
xchg
xchg
mov
out
xchg
scas
fistp
xchg
enter
stc
fcom
(bad)
dec
in
add
(bad)
int3
and
rcl
daa
and
mov
pusha
push
sub
sub
fidiv
pusha
push
retf
call
daa
xor
pusha
push
stos
mov
nop
fisub
sub
push
inc
pusha
push
mov
nop
fisub
sub
adc
push
stos
mov
daa
fsubrp
mov
orps
mov
daa
fsubrp
mov
orps
mov
xchg
mov
jnp
cmps
aaa
int
push
sbb
add
or
add
mov
add
test
add
stc
call
mov
mov
pop
sbb
xchg
mov
mov
xchg
arpl
fwait
xor
call
jg
retf
pushf
imul
ja
rcr
sbb
fwait
imul
sbb
movs
nop
sbb
cmp
outs
rcr
xor
sub
or
lods
and
outs
sar
xor
sbb
jne
sbb
rcr
xor
sub
cmp
jge
mov
pop
sub
rol
and
mov
aas
sub
fwait
sbb
and
xor
adc
je
sbb
and
xor
sub
pop
sbb
fcomp
xor
and
in
leave
mov
xchg
in
jecxz
fldenv
push
sbb
leave
call
ja
adc
loopne
jp
xchg
pop
dec
and
fldenv
pop
adc
and
pop
xor
and
and
or
enter
push
add
xchg
enter
fst
xchg
or
enter
frndint
xor
push
popa
inc
push
cs
inc
xchg
mov
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
xor
and
push
and
pop
xor
pop
xor
pop
and
pop
mov
inc
xchg
pop
jno
xchg
ds
inc
xchg
ds
inc
xchg
push
jno
xchg
pop
mov
xchg
pop
mov
inc
xchg
push
icebp
inc
xchg
or
cwde
and
rcr
out
jno
and
jp
and
pop
fwait
and
fwait
cwde
sub
call
mov
call
or
cwde
and
call
or
cwde
and
call
or
cwde
and
call
or
cwde
and
call
or
cdq
and
popf
call
(bad)
jnp
or
and
inc
push
or
sub
inc
jge
add
es
inc
pop
daa
push
inc
pop
daa
pop
inc
pusha
sub
popa
rol
inc
inc
aam
inc
dec
aad
inc
inc
into
push
inc
dec
iret
sti
inc
rcr
xchg
rcr
inc
ficomp
inc
push
fdivr
inc
jns
cmc
inc
dec
(bad)
inc
push
(bad)
repz
pushf
(bad)
and
fldenv
inc
pop
call
inc
xchg
add
inc
fwait
ds
xchg
and
pusha
xchg
and
popa
xchg
hlt
xor
xchg
stc
and
sti
sbb
sahf
std
push
xchg
xchg
hlt
pop
xchg
lahf
pop
pop
xchg
nop
(bad)
push
xchg
add
pop
xchg
add
pop
xchg
xor
push
xchg
xor
dec
xchg
and
dec
xchg
fdivp
push
xchg
mov
dec
xchg
test
xchg
mov
add
or
cli
xchg
mov
call
xchg
into
not
cmp
daa
xchg
sub
and
das
hlt
adc
and
sbb
cmp
and
and
in
jecxz
shr
loopne
mov
and
and
daa
out
and
push
lds
sti
push
shl
dec
ret
dec
int3
and
dec
int
lds
and
and
and
and
and
pop
stc
and
and
repz
jmp
out
and
out
and
call
mov
pop
or
pop
or
or
push
pop
or
sbb
sbb
pop
or
in
or
in
or
pop
movs
or
loop
or
adc
or
adc
and
sbb
or
repz
in
icebp
mov
repz
or
loope
or
mov
or
cmp
or
cmp
or
aaa
or
push
mov
popa
inc
sbb
jb
loopne
pop
inc
jmp
inc
in
push
inc
out
mov
inc
stc
mov
mov
sar
mov
inc
fidivr
rol
mov
inc
dec
mov
inc
push
mov
inc
xor
mov
daa
push
mov
inc
ins
mov
addr16
push
mov
jne
imul
push
inc
xchg
jmp
outs
lea
xor
xchg
aas
cwde
lea
cmp
xchg
ss
lea
push
xchg
xor
xchg
cmp
xchg
dec
int3
mov
inc
jnp
xchg
push
jns
xchg
dec
data16
pop
je
xchg
jge
xchg
test
xchg
outs
mov
xchg
jno
xchg
push
push
xchg
and
movs
popa
and
mov
popa
and
imul
xchg
popaw
and
popa
and
bound
pop
pushf
bound
pop
pushf
arpl
pop
call
mov
push
push
shl
push
fnstcw
int3
js
inc
retf
push
rol
mov
test
in
add
fistp
and
jl
and
jl
and
jae
and
(bad)
pop
and
pop
and
adc
test
or
jmp
dec
sub
out
or
push
hlt
or
and
or
xor
or
xor
or
es
or
ror
jge
or
jno
or
inc
retf
or
retf
ja
or
dec
into
or
aas
fmul
out
dec
fisttp
stc
push
fmul
jmp
inc
fisttp
add
fmul
add
or
cwde
inc
in
inc
cmovbe
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
inc
mov
sbb
dec
scas
inc
outs
and
inc
lods
push
and
push
mov
inc
outs
and
inc
shl
icebp
mov
dec
outs
in
int
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
outs
and
and
enter
loopne
jl
lahf
ret
mov
mov
sbb
sub
inc
or
enter
popa
arpl
or
jo
test
pop
push
adc
ss
inc
mul
arpl
mov
jecxz
test
xchg
out
xor
enter
loop
pushf
push
mov
pop
mov
in
adc
mov
add
stos
push
xchg
enter
mov
jae
push
mov
sbb
ss
loope
and
mov
leave
and
xchg
inc
fistp
xlat
into
shr
xor
xor
push
shl
mov
inc
xchg
inc
mov
ja
fmul
jne
(bad)
in
xchg
je
jbe
dec
mov
lds
icebp
inc
xchg
inc
inc
mov
pop
jecxz
shl
cmp
fmul
xchg
and
mov
(bad)
sub
lahf
push
cld
inc
inc
retf
push
mov
rcr
or
or
jle
pop
fwait
mov
std
xchg
jbe
ja
out
dec
sub
cmp
sub
xor
cwde
and
call
ds
cwde
ja
or
ds
pop
stc
inc
int
pop
test
call
(bad)
cmps
inc
(bad)
in
fbstp
mov
clc
and
call
sub
adc
shl
stos
(bad)
test
lods
rol
outs
and
inc
outs
and
and
clc
mov
cld
pop
lea
mov
and
inc
outs
and
and
stos
nop
dec
std
dec
fs
lods
jmp
js
in
inc
or
and
inc
outs
and
in
ins
bound
in
ficomp
lahf
jecxz
(bad)
retf
mul
or
and
inc
xchg
enter
inc
cs
jnp
jbe
push
inc
and
adc
retf
sub
enter
enter
imul
sbb
shl
adc
inc
pop
sbb
enter
enter
int3
inc
jg
dec
pop
jge
idiv
cmc
hlt
sbb
stos
inc
xchg
enter
enter
mov
jl
dec
mov
jae
cmps
mov
(bad)
fbld
hlt
in
inc
mov
xchg
and
xchg
jne
mov
aas
xchg
addr16
inc
fwait
outs
(bad)
dec
fs
out
in
jno
xchg
and
xchg
inc
and
movs
xor
sbb
js
add
jmp
xchg
and
inc
xchg
inc
xor
xor
jg
and
pop
mov
jmp
xchg
and
inc
repnz
dec
shr
xchg
aas
shr
xchg
or
adc
ret
and
push
and
push
jle
add
mov
addr16
call
jb
pop
jecxz
pop
repz
push
and
push
pop
mov
pushf
cmps
sub
call
jmp
pop
sahf
inc
pop
and
cwde
and
push
jnp
aaa
push
xchg
jne
adc
test
push
lahf
inc
(bad)
push
imul
inc
ins
pop
test
inc
ins
ffree
loope
xchg
cmp
outs
arpl
mov
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
jmp
pop
jb
jmp
outs
and
inc
outs
and
inc
stos
retf
jae
cmps
and
or
and
inc
mov
or
or
and
inc
mov
or
and
inc
mov
or
and
or
or
and
or
dec
and
or
movs
call
or
movs
test
inc
movs
test
inc
movs
test
inc
movs
test
inc
xchg
test
inc
xchg
test
inc
test
or
movs
or
test
inc
xchg
dec
add
xchg
or
test
fs
and
xchg
fmul
inc
xchg
test
inc
xchg
leave
or
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
and
xchg
and
pop
and
xchg
and
ret
icebp
inc
pusha
and
mov
and
inc
pusha
and
mov
and
inc
xchg
xor
jo
xor
xchg
and
xchg
push
jo
xor
out
jo
xchg
pusha
jo
and
sub
popa
jo
xor
xchg
ds
call
xor
xchg
call
xchg
or
xor
mov
cmp
imul
icebp
setbe
jp
paddusw
adc
push
push
pop
fwait
xchg
add
add
and
fwait
imul
in
push
xchg
arpl
pusha
xchg
push
shr
rcl
xchg
sbb
push
xchg
mov
setbe
sbb
loope
xchg
stc
jp
cs
dec
push
xchg
add
xchg
add
xchg
jae
pop
fidivr
xor
xchg
stc
inc
pop
aad
jl
out
pop
mov
(bad)
stos
mov
jl
stos
mov
jnp
out
lahf
mov
stos
xchg
mov
stos
lahf
inc
outs
out
inc
outs
stos
jg
aas
aad
jl
out
jg
test
stos
pop
mov
out
inc
cmp
(bad)
jp
out
mov
mov
stos
mov
inc
jmp
aad
retf
out
fcomi
enter
mov
out
inc
fldcw
xor
cmovo
jmp
int
and
inc
ja
mov
mov
stc
cli
dec
movmskps
imul
pop
cmp
mov
js
jle
inc
xor
jmp
dec
imul
xlat
mov
and
lds
adc
dec
adc
cmp
mov
pop
inc
jle
mov
jp
and
repnz
inc
xchg
mov
mov
mov
js
inc
nop
jae
inc
xchg
pusha
jne
call
sub
sahf
push
pushf
call
xchg
adc
call
sub
ds
call
xchg
loopne
xchg
call
sub
push
or
and
je
xor
je
call
sub
mov
inc
xchg
and
je
call
sub
sahf
push
call
xor
xchg
or
adc
mov
iret
pop
mov
clc
rcl
call
push
movs
and
sbb
mov
xchg
pop
sbb
mov
mov
and
push
push
pop
mov
xor
fwait
mov
xor
push
aaa
jmp
adc
jmp
mov
stc
jp
xor
repnz
test
stc
call
clc
retf
fucomi
add
nop
shl
mov
out
mov
xor
clc
retf
fwait
out
les
fwait
out
int3
lods
cmp
sbb
sbb
xor
jnp
outs
and
shr
mov
xor
sbb
fwait
cmp
sbb
cli
gs
mov
xor
clc
ja
fwait
sbb
inc
sbb
out
cmc
and
inc
out
mov
xor
cld
push
fs
inc
in
mov
adc
push
enter
fst
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
fisttp
hlt
jmp
loop
jmp
loop
jmp
ror
xchg
leave
cli
push
xchg
sbb
ja
bnd
xor
jmp
xor
jmp
and
jmp
cli
push
xchg
cli
push
ins
aaa
std
lods
and
bnd
add
jmp
lock
out
sbb
cli
push
in
xlat
or
and
shl
jmp
inc
repnz
fstp
push
xchg
push
push
cwde
push
mov
sub
(bad)
sub
cmp
and
xchg
inc
push
cwde
push
mov
imul
call
out
inc
push
xchg
adc
push
sbb
sub
cmp
push
call
and
push
xchg
rcl
jmp
call
sub
ror
and
sub
(bad)
fwait
call
xchg
or
and
shl
xchg
mov
jecxz
mov
jecxz
mov
push
xor
jnp
xchg
xchg
loopne
xchg
adc
xchg
adc
and
jecxz
or
xor
call
push
mov
loopne
ret
rcr
xor
fwait
mov
sbb
and
push
mov
push
xor
jp
xor
jnp
xor
jnp
xor
fwait
mov
or
and
call
stc
inc
std
cmps
xchg
je
sahf
outs
outs
int
add
fbstp
jnp
aas
je
stos
and
in
inc
mov
or
daa
lods
ins
xchg
jno
xchg
and
inc
jb
and
inc
outs
and
inc
outs
and
or
and
or
and
or
and
or
and
or
and
or
and
inc
xchg
enter
inc
or
enter
jo
inc
xchg
enter
pusha
or
enter
adc
inc
xchg
enter
add
inc
xchg
enter
xor
inc
xchg
leave
jbe
and
inc
xchg
retf
data16
ror
inc
xchg
retf
push
inc
xchg
rol
retf
les
xchg
retf
mov
jne
add
xchg
retf
movs
xchg
inc
nop
add
xchg
retf
xchg
inc
xchg
add
retf
test
retf
je
jae
mov
and
inc
xchg
and
inc
xchg
and
and
fld
and
or
leave
inc
xchg
and
loope
sbb
and
xchg
and
inc
xchg
and
scas
and
sbb
and
scas
or
xor
and
scas
or
scas
xchg
and
xchg
and
scas
dec
aad
inc
xchg
and
scas
push
shl
adc
mov
xchg
and
cs
and
xchg
and
mov
and
or
and
psraw
and
push
fwait
and
dec
fwait
and
jl
and
pop
cwde
sub
pop
cwde
and
fmul
and
pop
cwde
and
pop
cwde
and
pop
cwde
and
pop
cwde
and
pop
cwde
and
fcom
and
pop
sbb
or
or
or
aas
loope
mov
or
sbb
or
and
or
fwait
or
fwait
ret
inc
outs
and
inc
ficomp
push
inc
lahf
xchg
inc
dec
loopne
inc
ss
jae
fwait
dec
jae
outs
dec
arpl
mov
inc
outs
sbb
inc
outs
add
inc
outs
ins
mov
outs
aam
inc
mov
loop
inc
in
dec
and
stos
and
pop
adc
jae
inc
outs
jno
inc
outs
ins
fadd
fnstenv
inc
outs
shl
cmp
(bad)
imul
xchg
imul
inc
ins
xchg
in
ins
xchg
enter
enter
enter
enter
enter
enter
imul
pop
hlt
imul
cs
xchg
fwait
ret
imul
or
or
xchg
stc
or
xchg
in
or
xchg
ror
xchg
fadd
xchg
sub
xchg
xchg
push
mov
jnp
pusha
and
inc
and
inc
push
and
or
sti
inc
hlt
and
inc
(bad)
and
repnz
and
and
push
call
push
mov
out
inc
pusha
and
inc
push
and
inc
or
mov
inc
(bad)
and
xchg
and
and
mov
pop
and
call
and
lea
and
inc
cmp
and
inc
in
and
inc
frstor
inc
inc
mov
or
jmp
xchg
lods
mov
or
inc
jae
movs
cwde
je
mov
push
or
xchg
adc
imul
cmc
or
call
stos
or
shr
std
inc
add
or
and
repz
and
push
cwde
and
leave
cwde
and
lods
cwde
and
push
cmp
or
rep
or
inc
or
imul
inc
jge
or
ins
or
fsubr
ins
in
aam
ins
mov
cmp
inc
sub
cmp
icebp
xchg
inc
add
pop
inc
inc
adc
dec
or
mov
inc
cmps
sbb
inc
int3
add
inc
inc
push
ja
int
push
inc
aad
cdq
inc
fst
out
inc
lods
xchg
rol
in
inc
mov
stc
or
pop
or
scas
or
adc
inc
(bad)
jno
inc
xchg
fcom
xchg
sub
mov
xchg
mov
cli
xchg
mov
xchg
inc
xchg
jp
inc
xchg
adc
xchg
push
inc
xchg
adc
inc
xchg
cli
pop
inc
xchg
stos
jbe
xchg
xchg
xchg
jae
mov
xchg
fist
xchg
aaa
mov
inc
xchg
xchg
pop
inc
xchg
xor
xchg
inc
xchg
sub
mov
xchg
xchg
pop
jle
xchg
push
jbe
xchg
mov
jecxz
xor
in
and
xchg
and
xchg
xchg
and
out
xchg
and
mov
xchg
and
push
xchg
and
mov
and
cmp
cmp
hlt
and
enter
retf
xchg
into
and
mov
mov
and
and
inc
and
scas
dec
and
pop
and
mov
and
cmp
and
in
and
mov
frstor
and
mov
or
sub
or
sub
or
sub
or
sub
or
fimul
pop
sub
or
or
or
or
or
or
add
or
pop
jmp
sahf
push
lahf
or
repnz
or
out
xchg
or
mov
or
loope
or
push
or
dec
or
jg
mov
jae
mov
or
sbb
outs
data16
inc
inc
add
inc
cwde
cmp
inc
je
add
and
inc
outs
and
inc
outs
and
push
sub
inc
outs
and
inc
outs
and
inc
outs
and
or
(bad)
jno
fwait
aad
outs
and
or
and
or
lea
add
and
or
and
push
cmp
les
inc
outs
and
or
and
arpl
xor
sub
ds
xchg
leave
or
xchg
leave
jno
xchg
rcl
jle
or
jle
arpl
leave
add
xchg
leave
or
xchg
leave
add
ins
stc
stos
pop
jae
adc
push
jne
mov
inc
xchg
xchg
mov
dec
xor
dec
jle
pop
imul
or
xchg
leave
bound
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jae
mul
mov
imul
adc
jne
mov
pop
inc
cld
dec
jle
adc
pop
jo
dec
jle
push
ds
and
ds
and
fwait
jno
pop
mov
mov
and
mov
dec
mov
sub
jle
fdiv
pop
aad
lods
jle
or
jle
jmp
inc
xchg
and
call
mov
mov
in
mov
dec
mov
mov
popf
cmp
cmp
cwde
call
test
jle
push
test
xchg
and
jno
fbld
mov
lea
imul
xor
test
icebp
bound
sar
sub
fcom
nop
cmp
inc
xor
or
and
pop
xor
es
cmp
sbb
mov
mov
push
sub
adc
iret
shl
cmp
bound
aam
pop
cdq
and
pop
xor
cmps
int
retf
pushf
push
xor
lea
imul
xor
test
icebp
bound
retf
outs
in
retf
jp
imul
adc
pop
inc
outs
and
inc
outs
mov
int3
and
inc
aaa
sbb
cmp
dec
gs
adc
and
xchg
sub
ins
cwde
mov
dec
ja
sti
inc
outs
and
inc
outs
mov
push
aas
mov
push
pop
xor
dec
arpl
dec
ins
xor
dec
inc
xchg
lock
jbe
and
xchg
lods
push
and
adc
sub
or
mov
push
aas
xor
pop
dec
(bad)
neg
dec
jg
adc
jg
call
rol
jg
inc
jb
leave
add
xchg
leave
arpl
cmp
frndint
push
xchg
hlt
push
xchg
sub
call
mov
push
push
mov
mov
ins
mov
push
push
mov
popf
cmp
leave
add
xchg
leave
mov
push
mov
sbb
mov
sbb
pushf
xchg
push
jae
jnp
mov
dec
mov
ja
mov
scas
dec
mov
pop
xchg
xchg
and
xchg
and
push
pop
mov
mov
dec
mov
mov
pop
ss
dec
mov
std
push
xchg
xor
ins
aaa
das
dec
mov
add
xchg
and
xchg
xchg
iret
test
xor
cmp
add
ret
fistp
mov
mov
shr
cmp
and
scas
jb
scas
aaa
jno
mov
pop
mov
(bad)
pop
mov
call
fimul
sar
sub
adc
cli
xchg
and
imul
test
mov
push
jns
xor
aaa
add
aaa
and
xor
pop
lea
jle
aam
imul
or
xor
bound
xor
popa
mov
call
xor
jbe
retf
mov
sub
scas
dec
jnp
call
inc
jne
fwait
inc
outs
and
inc
outs
and
inc
outs
mov
cmp
outs
adc
sbb
dec
xor
jb
aam
outs
pop
ret
and
pop
pop
(bad)
fmul
inc
outs
and
inc
outs
and
inc
outs
mov
outs
xchg
mov
and
and
bnd
mov
sti
pop
ins
mov
dec
outs
and
or
and
cmc
cmp
outs
push
mov
xchg
ins
je
or
mov
ins
je
sub
inc
pushf
(bad)
pop
push
xchg
leave
or
xchg
leave
add
xchg
leave
or
xchg
leave
mov
and
sub
(bad)
xchg
push
je
jl
je
mov
inc
pushf
sbb
push
xchg
leave
or
xchg
leave
add
xchg
leave
or
xchg
leave
arpl
(bad)
(bad)
sbb
sub
xchg
imul
push
je
pushf
jo
fist
data16
int
xchg
and
inc
xchg
and
stos
mov
rcl
jno
mov
rcr
xchg
jne
inc
data16
pop
data16
xchg
and
xchg
and
xchg
and
mov
cmp
jno
into
mov
jne
add
jne
add
es
data16
pop
data16
inc
xchg
and
inc
xchg
and
inc
xchg
and
stos
data16
cwde
jno
iret
mov
sub
fnstcw
iret
pcmpeqw
and
call
or
and
imul
or
cs
daa
int3
ins
into
add
data16
dec
pop
gs
psubq
pop
gs
pop
cli
sub
pop
cli
sub
or
and
imul
or
shl
cmp
int3
sub
cmp
leave
pop
pop
call
clc
ins
sub
sbb
iret
cli
pop
sub
cli
pop
ror
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
mov
outs
dec
mov
ins
push
mov
mov
sub
cdq
push
call
lahf
push
popa
nop
jp
outs
and
inc
outs
and
inc
outs
and
inc
outs
mov
xor
push
ins
aad
pop
xor
pop
ins
mov
xchg
push
push
inc
xchg
es
mov
nop
sbb
and
inc
outs
and
inc
outs
and
inc
outs
mov
xor
push
ins
pusha
xchg
sbb
xchg
cli
xchg
outs
jae
jle
jb
ja
imul
pop
ins
(bad)
cdq
push
mov
jbe
xchg
leave
add
xchg
leave
or
xchg
leave
add
xchg
leave
jae
xchg
hlt
xor
xor
pop
mov
imul
mov
pop
ins
rol
xchg
leave
or
xchg
leave
add
xchg
leave
jae
xchg
adc
ins
outs
sbb
outs
jae
sub
cs
je
ja
cmp
and
lods
xchg
and
inc
xchg
and
inc
xchg
and
cmps
xchg
loopne
jne
fimul
add
mov
int
mov
jno
(bad)
mov
into
(bad)
mov
shl
cdq
xor
xchg
and
inc
xchg
and
xchg
xchg
mov
cmp
jg
pop
inc
mov
push
mov
int3
mov
jno
(bad)
mov
into
(bad)
mov
shr
pop
fnstcw
inc
xchg
and
inc
xchg
and
inc
xchg
and
cmps
jae
hlt
mov
cmp
dec
jg
or
cmp
push
xchg
xor
jp
add
dec
or
ror
popa
gs
imul
or
and
data16
lods
outs
daa
cmp
adc
push
xor
pop
xchg
xor
push
xchg
xor
mov
retf
(bad)
imul
or
and
aam
int3
ins
out
xor
call
xor
pop
xchg
xor
push
xchg
xor
jns
xor
jb
xor
dec
sub
or
and
inc
outs
and
inc
outs
and
dec
mov
sbb
dec
sub
xor
das
dec
das
cli
xor
xor
xor
sbb
dec
outs
and
inc
outs
and
inc
outs
and
pop
and
sub
cli
xor
xor
adc
das
dec
sub
xor
std
das
dec
ret
outs
and
inc
outs
and
inc
outs
and
pop
pusha
xchg
inc
push
inc
sub
sbb
xchg
(bad)
adc
xor
cmp
(bad)
fst
cs
jmp
push
or
leave
or
leave
or
shr
xor
(bad)
faddp
das
mov
shr
sub
xor
mov
stos
cmp
or
inc
xchg
leave
adc
xor
mov
jno
(bad)
(bad)
popa
das
mov
pusha
das
mov
push
xor
je
inc
(bad)
fiadd
mov
inc
inc
push
and
aas
xchg
and
mov
push
hlt
pop
test
push
pop
xchg
pop
pop
mov
pop
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ror
idiv
pop
aaa
shr
push
and
ds
and
inc
imul
leave
mov
popf
aad
lods
cwde
es
mov
cdq
mov
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
imul
aas
add
fnstenv
add
and
imul
or
and
sub
cmp
or
mov
(bad)
ins
cdq
and
pusha
fwait
and
ins
xchg
or
or
or
and
xchg
fwait
and
ins
fwait
and
movs
fwait
and
ins
fwait
and
mov
and
ins
cdq
and
les
and
aam
and
ins
cdq
and
inc
mul
or
and
or
and
or
and
or
and
or
and
or
and
or
and
inc
outs
xor
inc
jbe
or
and
inc
inc
and
inc
outs
shl
outs
or
inc
outs
or
inc
outs
or
inc
outs
or
inc
outs
or
inc
xchg
leave
test
xchg
inc
or
leave
push
inc
xchg
leave
push
inc
xchg
leave
push
inc
xchg
leave
push
inc
xchg
leave
test
xchg
xor
inc
xchg
leave
test
xchg
and
inc
xchg
enter
ror
inc
xchg
enter
rol
enter
lock
xchg
enter
loopne
inc
xchg
enter
cwde
add
xchg
leave
jbe
xchg
mov
cmps
inc
xchg
test
inc
xchg
enter
and
mov
and
xor
xchg
and
xor
xchg
and
jne
fiadd
xor
xchg
and
out
push
es
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
mov
icebp
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
cmp
xchg
adc
push
and
imul
and
push
and
push
and
cwde
and
push
and
push
and
push
and
push
and
push
and
push
and
dec
xchg
sub
mov
dec
push
(bad)
xchg
jne
fidivr
add
lods
pop
cwde
and
cwde
and
cwde
and
pop
cwde
and
pop
cwde
and
pop
cwde
and
pop
cwde
and
pop
cwde
and
push
dec
adc
mov
inc
push
dec
dec
gs
dec
dec
pop
push
pop
pop
push
push
mov
data16
add
outs
and
pop
outs
and
xor
and
inc
outs
and
inc
ja
add
outs
mov
push
jns
cmc
push
jns
in
push
dec
inc
xlat
push
cs
lds
dec
cmc
push
pop
dec
in
push
sub
cmp
dec
dec
popa
rcl
sub
les
or
outs
and
cmp
and
inc
mov
dec
mov
rcr
pusha
fs
neg
ret
out
pop
fs
and
arpl
or
arpl
loope
fs
pop
fs
out
fs
fistp
(bad)
jmp
enter
enter
and
retf
xchg
shl
pop
fs
ja
xchg
mov
fs
xchg
fs
shl
fs
addr16
fs
pop
pop
fs
loopne
jp
or
enter
and
sti
leave
(bad)
ficomp
call
es
leave
add
lods
jnp
fimul
jmp
call
fsubrp
fidiv
jb
sbb
and
and
je
in
or
jno
sbb
jno
popa
loopne
fidivr
fidivr
inc
fidivr
inc
ficomp
inc
fisubr
inc
fidiv
mov
cmps
ss
ficomp
fidiv
lock
gs
je
cwde
and
cmp
sub
mov
ja
xor
outs
ret
addr16
pop
lahf
pop
adc
mov
inc
cdq
out
retf
aas
pushf
out
aaa
push
gs
jnp
cwde
and
cwde
xor
mov
ror
mov
rcl
into
fnstsw
out
dec
cs
push
jecxz
mov
loop
lods
rcl
mov
rol
inc
movs
jge
dec
mov
xlat
or
outs
and
sbb
xor
lahf
in
dec
lahf
in
dec
jg
outs
dec
iret
inc
test
dec
or
inc
dec
xchg
dec
pop
in
dec
pop
in
dec
aas
in
dec
and
pop
aad
and
and
ins
(bad)
loopne
inc
dec
dec
mul
adc
mul
cld
dec
out
hlt
dec
rol
mov
fimul
jmp
dec
sbb
dec
xchg
inc
(bad)
push
fs
iret
push
fs
jle
or
inc
enter
enter
enter
add
out
je
pop
fs
mov
push
add
int3
arpl
cmps
fs
cmps
fs
nop
mov
fs
push
fs
push
fs
xchg
mov
sub
jle
or
enter
xchg
lds
jmp
fs
movs
dec
fs
lods
dec
fs
dec
fs
dec
and
pop
fimul
pop
ficomp
cmps
pop
fidiv
rol
ficomp
inc
xchg
cmp
mov
xchg
and
inc
xchg
and
dec
xor
push
int
xchg
sub
mov
call
jge
ins
fmulp
in
pop
fiadd
jge
push
xor
xor
inc
xchg
and
xor
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
aas
xchg
and
stc
fsub
scas
lea
fwait
mov
pop
pop
pop
cwde
and
pop
cwde
and
cwde
and
pop
cwde
and
pop
cwde
and
pop
cwde
and
jp
and
ficomp
rol
pop
cwde
and
pop
cwde
and
pop
cwde
and
pop
cwde
and
pop
cwde
rcr
cwde
aam
pop
cwde
and
pop
cwde
and
ficom
and
sbb
shl
xor
and
call
or
and
inc
out
shr
dec
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
aas
outs
and
outs
and
and
and
sub
or
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
cmp
outs
and
sub
jle
or
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
and
inc
xchg
jnp
inc
xchg
inc
icebp
inc
xchg
inc
icebp
inc
xchg
je
inc
xchg
sbb
inc
xchg
cmp
inc
xchg
sub
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
or
arpl
shl
add
jg
xchg
mov
xchg
mov
inc
xchg
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
inc
xchg
jne
inc
xchg
sbb
inc
xchg
or
inc
xchg
cmp
and
or
aaa
xchg
sub
inc
dec
dec
getsec
dec
dec
psraw
add
addr16
sub
pop
cwde
and
cwde
and
pop
cwde
and
pop
cwde
and
pop
cwde
and
pop
cwde
and
pop
cwde
and
pop
cwde
and
cwde
and
xor
pop
loope
mov
xchg
es
ja
retf
sub
pop
fs
add
sub
pop
cwde
and
inc
(bad)
(bad)
sbb
sub
pop
pop
inc
xchg
dec
aaa
inc
cdq
inc
sbb
inc
imul
cmp
xchg
inc
ds
outs
and
shr
or
and
cmp
or
and
inc
outs
and
inc
outs
and
inc
jg
fsubr
sahf
adc
outs
inc
add
outs
inc
and
jg
pop
sub
fs
(bad)
test
xor
dec
stos
inc
pop
xor
sbb
cs
push
mov
fisub
mov
xor
push
mov
and
rcl
fs
pop
jp
mov
addr16
adc
enter
enter
enter
enter
enter
enter
add
dec
mov
push
jo
mov
movs
pop
fs
lea
adc
dec
bound
and
mov
ins
ficom
and
fsubp
fadd
jmp
fisub
pop
fisub
das
(bad)
hlt
loopne
fdivrp
in
fsubrp
in
faddp
(bad)
dec
faddp
jno
shl
xchg
stos
loope
xchg
push
mov
xchg
daa
mov
xchg
and
inc
xchg
and
cli
fisubr
jmp
imul
popa
fisubr
mov
pop
fimul
div
rcl
sbb
aam
fcom
aas
dec
ret
out
sbb
nop
das
and
int3
daa
and
int3
pop
sub
jmp
pop
sahf
pop
mov
(bad)
jp
pop
not
(bad)
out
pusha
(bad)
int3
out
(bad)
int3
fist
pusha
movs
pop
cwde
and
cwde
and
pop
cwde
and
pop
cwde
and
pop
cwde
and
push
iret
gs
movs
retf
(bad)
test
mov
(bad)
cmp
outs
inc
ret
inc
enter
into
xchg
pop
inc
in
nop
push
inc
jmp
cwde
xor
(bad)
mov
sbb
inc
add
push
sub
cmp
adc
inc
jmp
inc
jns
cmc
inc
jns
in
inc
dec
dec
ret
inc
pop
leave
and
outs
and
mov
outs
and
inc
outs
and
inc
outs
and
inc
mov
ins
push
inc
xor
rol
ins
inc
xchg
out
cmp
fs
cmp
ss
nop
xor
fs
dec
aaa
and
cmp
das
fs
das
fs
add
arpl
scas
daa
fs
daa
mov
add
arpl
aas
xor
xor
ins
dec
enter
enter
enter
enter
enter
add
xchg
mov
stc
arpl
fsub
cs
fimul
outs
fidivr
fsub
sahf
fisubr
shr
(bad)
repz
mov
jae
aaa
or
pop
retf
(bad)
fisttp
fwait
jo
pop
cdq
jo
outs
cdq
jo
outs
cdq
jo
pushf
mov
ficomp
fimul
fidiv
jo
lahf
cwde
jo
scas
cwde
jo
scas
cwde
jo
mov
mov
mov
xchg
outs
mov
xchg
xor
inc
xchg
and
sbb
or
or
or
or
ja
pminub
or
ficomp
adc
push
ficom
(bad)
dec
test
xor
aas
pushf
and
aaa
push
sbb
adc
rcr
adc
rcl
add
ror
retf
pop
jge
into
(bad)
jl
into
div
in
mov
out
push
rcr
rcl
xlat
int
out
iret
add
jg
cwde
and
sub
and
sub
and
inc
mov
mov
icebp
aas
push
out
aas
pop
mov
aas
sub
sbb
mov
push
aas
push
mov
cmp
fidiv
and
aas
gs
pop
aas
repz
adc
sti
lahf
sbb
repz
adc
adc
xlat
lods
add
xlat
lods
icebp
ds
push
mov
sti
lahf
fdivr
repz
aam
sti
lahf
fdivr
(bad)
xchg
jns
push
stos
outs
and
pop
outs
and
inc
xchg
enter
enter
enter
add
xchg
stos
frstor
mov
fs
call
fs
lods
cmp
xor
xor
cmp
aaa
fs
xor
sub
sub
ret
bound
fs
xor
xor
mov
arpl
outs
shl
cdq
xor
xor
adc
jp
enter
and
inc
xchg
and
inc
xchg
and
sbb
sbb
jae
(bad)
stc
jae
mov
fidivr
out
fiadd
(bad)
icebp
imul
sbb
jne
mov
fnstsw
and
pop
fidivr
push
jmp
fidivr
pop
ficomp
out
fimul
out
ficomp
pop
fimul
fisub
sub
and
sub
and
sub
and
sub
gs
mov
push
aad
mov
aad
cli
or
outs
inc
rcr
sub
push
cmps
and
dec
pop
push
iret
inc
inc
pop
sar
mov
ret
aaa
fnstsw
cli
das
shr
mul
shl
stc
pop
ja
in
pop
adc
pop
(bad)
retf
xchg
pop
pop
cmp
call
aad
push
(bad)
aad
push
out
test
inc
sub
out
(bad)
leave
in
outs
and
dec
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
mov
ins
push
cmp
xchg
jne
mov
mov
cmp
mov
cmp
jno
pop
xchg
cmp
xchg
xor
cmp
loopne
cmp
loopne
cmp
mov
add
mov
sahf
xchg
cmp
mov
cmp
cmp
pop
xchg
cmp
pop
mov
push
sub
xchg
(bad)
jbe
lock
cld
enter
enter
enter
enter
enter
enter
enter
enter
enter
add
jg
push
rol
fs
mov
xor
fs
daa
fs
pop
fs
adc
adc
push
fs
(bad)
mul
iret
mul
jbe
and
mov
push
add
or
jmp
retf
add
and
dec
mov
lea
loope
xchg
sub
mov
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
sbb
xchg
mov
xchg
in
ficomp
fidivr
(bad)
ja
mov
aas
ficom
pop
fidiv
and
fmulp
lea
fidivr
dec
fsubp
xchg
xor
fidivr
fidivr
xor
or
loope
(bad)
fistp
out
xchg
cld
mov
xchg
sub
and
sub
and
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
and
sub
and
sub
(bad)
jg
xor
adc
std
call
(bad)
not
retf
loope
loop
(bad)
push
pushf
aas
popf
sub
aaa
jge
mov
jns
call
sub
push
cmp
loope
aaa
or
mov
jecxz
mov
idiv
imul
ins
and
mov
or
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
mov
cmps
push
imul
loop
inc
dec
jno
or
aaa
pop
jge
aaa
and
sub
int3
loopne
aaa
mov
nop
bound
das
gs
aaa
xchg
adc
mul
push
out
arpl
mov
arpl
(bad)
arpl
adc
repz
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
add
or
xchg
shl
mov
arpl
hlt
sub
sbb
out
arpl
shl
jns
arpl
out
arpl
pop
jle
fsubp
add
faddp
in
fmulp
fnstsw
fidivr
aaa
fimul
jmp
fimul
jmp
add
xchg
loope
xchg
imul
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
or
push
pop
mov
pop
fimul
js
movs
test
jecxz
in
jo
data16
fimul
mov
xor
cdq
or
pop
mov
add
mov
(bad)
xchg
inc
das
mov
leave
cmp
out
push
stos
fist
xor
sub
and
sub
and
sub
and
sub
and
sub
and
pop
dec
(bad)
fcmovnbe
jmp
adc
xlat
outs
add
xlat
addr16
in
les
bound
sti
jmp
pop
inc
xor
pop
xor
xor
dec
and
dec
cs
inc
sub
je
xor
fwait
push
xor
mov
xor
cmps
mov
repz
xor
jnp
pop
and
pop
fist
inc
cmp
or
ins
and
test
and
push
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
mov
mov
jb
xor
ja
pop
pop
pop
xor
mov
mov
sub
mov
mov
daa
mov
scas
pop
fs
stos
adc
pop
fs
or
or
pop
sbb
fs
jmp
mov
in
dec
(bad)
lds
in
popa
jmp
or
enter
enter
enter
enter
enter
enter
enter
aas
cmp
adc
aaa
and
cs
fdivp
clc
outs
fimul
xchg
lds
fisubr
jb
pop
stos
outs
ficom
cmps
ja
jge
inc
fidivr
aas
fiadd
fiadd
inc
fisubr
push
fisubr
jle
fidiv
pop
fidiv
xchg
push
stc
sub
jno
aam
mov
xchg
data16
xchg
sub
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
ins
lods
dec
or
(bad)
outs
std
cmc
jmp
cmp
push
xor
int3
dec
pop
xor
retf
aas
ins
sub
shr
inc
and
iret
pop
(bad)
aam
pop
jge
(bad)
packssdw
les
pop
(bad)
idiv
addr16
mul
out
push
(bad)
lahf
fbstp
fs
iret
adc
and
sbb
and
sbb
and
sbb
and
sbb
and
aas
stos
icebp
fist
pop
dec
data16
imul
movs
mov
ficomp
pop
xor
lahf
cmp
(bad)
popf
and
stos
lahf
cmp
pushf
fwait
sbb
lea
xor
outs
pop
xor
imul
loop
cmc
das
jecxz
cli
das
adc
sti
das
or
sbb
das
mov
mov
sbb
ins
and
test
or
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
xchg
enter
enter
cmp
pusha
into
test
loop
out
sbb
pop
imul
ss
shl
fs
aad
fs
fidiv
popa
into
xor
xor
xor
xor
bound
xor
cmp
xor
xor
sub
sub
add
jne
arpl
adc
sub
or
enter
enter
enter
and
inc
xchg
and
inc
xchg
and
dec
mov
fsubp
xlat
or
xor
or
mov
outs
ficomp
xor
js
fidivr
xchg
imul
ret
faddp
cmps
pop
fisubr
ins
fidiv
ins
ficomp
sar
fnsave
jl
or
ficomp
pop
fisub
mov
sbb
add
ret
mov
xchg
pop
mov
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
out
pusha
sub
push
sub
test
leave
addr16
iret
pop
push
iret
push
jne
into
dec
call
aas
scas
retf
lods
(bad)
shr
add
daa
mov
fcom
in
xlat
bswap
sti
(bad)
pop
shl
(bad)
adc
or
out
ret
scas
clc
(bad)
lods
(bad)
fmul
pusha
icebp
xlat
(bad)
fst
stos
mov
mov
and
dec
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
cmp
(bad)
popa
mov
leave
pop
mov
ficom
sub
lods
test
fidiv
sub
xchg
cmc
pushf
pop
sub
outs
cmp
jp
sub
jbe
sub
inc
adc
dec
jmp
or
sub
jnp
cmp
cmp
repnz
sub
jle
dec
(bad)
out
xchg
(bad)
enter
retf
imul
out
mov
or
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
adc
mov
push
sbb
dec
xchg
emms
sub
cmp
push
packuswb
add
adc
pop
fst
ret
add
arpl
dec
scas
(bad)
enter
or
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
je
jns
xlat
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
cs
ds
ds
ds
ds
aas
xchg
ds
aas
xchg
or
(bad)
jnp
and
jl
and
jl
and
jl
and
pop
fwait
and
pop
fwait
and
fwait
fwait
and
pushf
fwait
and
pushf
fwait
and
pushf
fwait
and
sub
and
in
xchg
and
jl
and
sbb
and
pushf
test
or
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
and
sbb
and
sbb
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
push
outs
and
dec
outs
and
dec
outs
and
aaa
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
cmp
or
and
dec
outs
and
push
outs
and
aaa
xchg
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
mov
inc
xchg
or
inc
xchg
outs
mov
inc
xchg
jbe
inc
xchg
imul
xchg
add
xchg
xor
xchg
and
popa
inc
xchg
and
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
sbb
fist
out
mov
aaa
jge
cwde
and
sbb
and
cwde
and
cwde
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
sub
(bad)
in
cmp
cmp
idiv
pop
jmp
ins
and
mov
and
mov
and
jne
and
pop
outs
and
cmp
or
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
aas
outs
and
dec
pop
xor
jae
jecxz
add
push
jge
and
dec
and
stos
xchg
and
imul
fs
(bad)
icebp
add
dec
aam
dec
sub
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
into
mov
outs
and
enter
ret
test
in
arpl
js
arpl
and
dec
dec
enter
enter
enter
enter
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
inc
xchg
and
inc
xchg
and
shl
pushf
add
enter
ficom
je
fidiv
mov
fdivrp
mov
fdivrp
mov
fimul
outs
fisubr
mov
fiadd
ins
lods
enter
repnz
cmp
mov
inc
xchg
cmps
jno
xchg
push
jno
xchg
je
sub
and
dec
mov
jno
jo
mov
daa
and
add
pop
cmc
add
pmaddwd
int3
pop
add
add
not
aaa
clc
out
imul
out
sub
and
and
cwde
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
mov
cmp
cmp
and
and
cmp
pop
dec
inc
and
xor
and
and
and
dec
adc
pop
jnp
and
mov
xor
sbb
or
sub
fadd
icebp
ins
and
mov
cmp
and
shl
imul
lods
and
movs
and
pop
push
and
popa
and
ins
and
and
xchg
xchg
fs
xlat
arpl
push
dec
sub
or
enter
enter
enter
enter
enter
enter
enter
enter
enter
or
add
jmp
fs
cmp
arpl
cmp
arpl
xor
add
add
or
sbb
sbb
sbb
sbb
push
and
(bad)
fidiv
pusha
fidiv
pusha
ficom
lea
adc
fsubrp
ret
adc
(bad)
(bad)
jmp
std
fiadd
mov
jno
sbb
jno
aaa
int
fcompp
or
fisubr
or
faddp
in
fmulp
mov
fidivr
mov
fisubr
mov
dec
fisub
inc
cwde
mov
inc
xchg
cmp
inc
xchg
and
inc
xchg
and
sub
and
sub
and
sub
and
out
pusha
jl
xor
addr16
repz
fmulp
repz
(bad)
enter
enter
repz
add
mov
xlat
daa
in
neg
pop
mov
into
(bad)
or
sar
movs
leave
shl
mov
iret
(bad)
out
xlat
fisttp
out
fcmove
or
(bad)
dec
adc
retf
mov
dec
scas
adc
cmps
adc
lahf
inc
jp
mov
and
xor
iret
sub
xor
sbb
mov
sbb
mov
mov
imul
and
shr
or
and
dec
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
mov
(bad)
popf
sbb
push
sbb
push
sbb
push
sbb
push
sbb
dec
mov
fisttp
sbb
js
sbb
or
adc
fs
sbb
sbb
pcmpgtb
adc
adc
adc
fs
pop
pop
fs
adc
(bad)
arpl
mov
and
cs
fs
jge
arpl
dec
movs
mov
scas
fsub
cmps
fsub
in
fs
mov
fs
ja
add
add
xor
mov
mov
mov
xchg
xor
aas
xchg
and
aas
xchg
and
xchg
and
xchg
and
xchg
and
shr
fdivrp
mov
fimul
aas
fimul
aas
fidivr
aas
ficom
fimul
pusha
ficom
jnp
ficomp
test
mov
xchg
outs
mov
imul
fisubr
imul
pop
imul
pop
je
xchg
cli
out
fimul
xor
retf
mov
dec
scas
inc
dec
cmps
adc
push
xchg
popf
or
xchg
call
ja
mov
inc
addr16
fist
push
gs
dec
gs
inc
xor
jecxz
aaa
xor
and
cwde
and
sub
and
sub
and
sub
and
sub
and
sub
and
bound
xchg
fbstp
fsubr
sbb
imul
test
(bad)
sbb
dec
mov
sbb
lahf
sbb
inc
mov
sbb
xchg
sbb
imul
ins
jp
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
sbb
adc
sbb
sbb
sbb
les
sbb
mov
sbb
sbb
mov
xor
sbb
outs
aad
sub
sbb
outs
aad
xor
aad
xchg
xor
or
add
es
clc
arpl
out
jne
or
enter
enter
enter
enter
enter
enter
enter
xchg
(bad)
shr
jecxz
lock
pop
lock
rcl
out
sbb
pcmpgtb
sbb
sbb
adc
adc
push
inc
adc
and
push
pop
jne
fidiv
imul
mov
in
dec
fisubr
add
sbb
jno
sbb
jno
or
jno
jo
sub
jg
(bad)
mov
push
fiadd
inc
fidiv
test
test
test
retf
mov
(bad)
(bad)
in
inc
fsubrp
shl
sbb
jno
sbb
jno
(bad)
ret
inc
xchg
scas
xor
push
and
and
inc
xchg
and
inc
xchg
and
sub
and
sub
and
sub
and
pop
push
pusha
mov
cwde
xlat
(bad)
(bad)
cld
iret
jg
cld
(bad)
mov
xor
scas
jge
fisub
xchg
clc
fst
je
rol
xchg
lods
shl
stos
aam
(bad)
popf
aam
pop
lods
ror
push
xchg
into
into
dec
jb
call
aas
cs
aaa
inc
xor
das
ds
daa
pop
sbb
pop
arpl
cmovae
pop
lahf
adc
push
dec
loopne
push
dec
loopne
push
dec
lock
mov
je
mov
mov
adc
mov
popf
adc
outs
and
retf
or
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
cmp
leave
(bad)
cmps
mov
xor
adc
or
adc
and
in
pop
fs
push
mov
fs
adc
push
fs
cmp
fs
cmp
fs
dec
pcmpgtb
inc
and
aad
and
lea
sub
sub
sub
sub
sub
add
mov
sub
out
fs
and
lea
test
mov
fwait
sub
sub
sub
sub
push
std
fidiv
inc
xchg
pop
and
push
and
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
std
aad
ds
add
or
cld
(bad)
es
fisubr
adc
ds
add
push
ins
push
(bad)
jae
(bad)
jae
(bad)
jae
fisubr
je
ficomp
je
fimul
jp
fisubr
cmps
pop
fisub
sub
sub
jge
(bad)
jnp
(bad)
rcl
add
fimul
mov
shr
mov
shl
mov
rcr
mov
rcl
mov
ror
xor
loop
retf
jmp
shr
lods
(bad)
shl
mov
rcr
cs
xlat
cmp
ror
cmp
rol
cld
add
mov
cld
add
scas
cld
add
cmps
fstp
scas
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
jmp
dec
jb
stos
inc
inc
stc
clc
mov
lods
xchg
fst
xor
adc
sbb
pop
jl
adc
adc
pop
jp
adc
jg
adc
inc
hlt
adc
jnp
adc
jge
adc
ja
adc
jns
adc
push
ficom
cs
adc
pushf
sub
aas
popa
sahf
adc
popa
mov
pop
popa
scas
adc
popa
cmps
adc
popa
sahf
adc
push
adc
sub
xor
mov
adc
push
adc
fst
xchg
pop
enter
enter
leave
and
and
and
sti
arpl
add
or
enter
enter
enter
enter
enter
enter
enter
push
into
adc
stos
loop
sub
fs
bnd
arpl
or
or
sbb
or
fs
jmp
or
or
adc
adc
je
push
jb
fiadd
lahf
jo
inc
sahf
jb
pop
mov
pop
(bad)
call
je
mov
je
mov
jge
fidivr
call
pop
ficomp
ins
pop
fimul
sbb
fisub
je
xor
fidiv
jle
fisub
jle
fisub
jle
(bad)
lock
adc
mov
mov
inc
xchg
and
xchg
and
xchg
and
sbb
and
sbb
pusha
jl
dec
dec
inc
jno
mov
aaa
mov
mov
daa
icebp
mov
ficom
add
fmul
xchg
cli
fadd
mov
shl
jnp
shr
xchg
mov
out
test
fild
test
int3
mov
stc
ret
lods
out
scas
shl
cmps
xchg
stos
aam
outs
stos
aam
ja
aam
outs
stos
aam
cdq
or
jg
sar
ins
push
mov
push
xchg
jbe
push
call
or
retf
adc
push
jecxz
cmp
push
cmc
mov
retf
sbb
or
and
xor
or
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
mov
mov
stos
or
jbe
lahf
or
(bad)
jge
or
enter
xchg
pop
inc
or
adc
adc
sbb
sbb
push
fs
ret
sbb
add
es
test
daa
fs
in
arpl
mov
arpl
rcl
lods
inc
adc
lock
fist
and
mov
mov
ins
add
fs
lods
repnz
pop
sti
push
fs
test
fs
jmp
inc
xchg
cmp
inc
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
mov
fisub
je
iret
jge
fiadd
jge
fimul
ins
fiadd
pop
fimul
pop
imul
jno
push
imul
(bad)
xor
xor
test
inc
fsubrp
push
inc
fimul
push
sahf
cld
lahf
jmp
xor
xchg
sti
fnstenv
sti
fldcw
sti
fldenv
sti
fstp
sti
fst
sti
(bad)
sti
fld
sti
fnstcw
push
sti
fnstenv
mov
retf
das
or
daa
mov
jne
cwde
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
bound
in
popf
rcl
mov
icebp
imul
sbb
popf
or
inc
jp
push
(bad)
or
adc
in
adc
std
pop
or
popa
data16
mov
or
inc
sub
pop
pop
push
or
sbb
sbb
or
std
xchg
or
pop
xchg
or
pop
repz
dec
dec
daa
dec
test
dec
fimul
aaa
dec
(bad)
or
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fimul
daa
dec
(bad)
or
dec
mov
adc
in
arpl
mov
push
adc
or
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
xchg
jmp
into
push
fs
lds
fs
int
fs
sbb
fs
mov
sbb
push
fs
pcmpgtb
pcmpgtb
push
sbb
sbb
sbb
scas
outs
faddp
stos
jbe
imul
test
fimul
dec
fimul
ds
push
dec
(bad)
pop
dec
fdivp
push
push
fsubp
mov
ficom
(bad)
fucom
push
dec
fmulp
sahf
arpl
sbb
arpl
icebp
push
pop
fidiv
(bad)
fdiv
push
fs
xor
xor
and
and
icebp
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
sbb
and
sbb
pusha
mov
jecxz
push
stos
aam
cwde
stos
aam
scas
movs
rcl
dec
retf
js
retf
ret
leave
ja
cli
shr
mul
sahf
hlt
pop
pop
fldpi
push
popa
mov
lahf
inc
test
aas
sub
out
aaa
xor
stc
daa
iret
popf
repz
lds
out
(bad)
fsubr
pop
fcom
in
jmp
movs
out
jb
mov
inc
mov
(bad)
pushw
cwde
jmp
cwde
jmp
sbb
repz
or
sahf
outs
and
cmp
or
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
cmp
leave
mov
mov
push
retf
adc
push
jecxz
sbb
push
das
adc
push
and
inc
repnz
xchg
in
outs
and
jmp
arpl
adc
add
enter
retf
cld
repnz
fucomip
arpl
aad
arpl
fcomi
arpl
dec
stc
arpl
mul
ds
arpl
xor
arpl
ret
or
(bad)
arpl
mov
ja
leave
arpl
(bad)
arpl
or
enter
enter
enter
enter
enter
enter
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
clc
aad
lock
ficomp
imul
mov
fsubp
mov
jb
fisub
fcompp
outs
faddp
mov
dec
fisub
adc
dec
dec
fisub
jle
fmulp
mov
fdivp
lods
sub
in
inc
push
fimul
pop
fisubr
push
fimul
(bad)
in
psraw
call
not
int
out
fcom
sahf
out
fchs
fbld
fwait
xlat
ins
pop
popf
iret
outs
adc
mov
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
pusha
test
jmp
daa
inc
sbb
or
add
jge
add
out
add
lock
in
add
rol
push
or
add
adc
iret
add
imul
add
stos
add
mov
add
sbb
add
mov
add
push
adc
mov
fidiv
mov
add
scas
mov
add
stos
lahf
add
lods
xchg
add
mov
add
and
rcl
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
push
into
adc
dec
or
gs
arpl
jb
arpl
jmp
ins
out
arpl
and
sbb
pop
fs
push
or
fs
shl
mov
sub
(bad)
fild
(bad)
mov
add
push
ficomp
pop
ficomp
dec
ficomp
pop
fidiv
int3
push
fiadd
int
fidiv
and
imul
fisubr
push
fisubr
(bad)
sub
pop
fsubr
fimul
jmp
xchg
scas
mov
inc
xchg
and
inc
xchg
and
inc
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
jmp
or
xchg
and
test
pusha
jl
fsubr
daa
daa
test
mov
xadd
ret
std
push
loopne
cli
out
shl
lock
aad
iret
xchg
adc
mov
xchg
add
scas
lods
fistp
lahf
retf
cmp
xchg
(bad)
xor
mov
jg
xchg
ja
push
pushf
outs
je
xchg
addr16
cwde
pop
inc
lds
xchg
inc
mov
(bad)
mov
shr
ins
and
xor
or
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
mov
dec
test
fwait
ret
sub
adc
outs
(bad)
sbb
gs
mov
push
dec
(bad)
xchg
xor
sbb
push
adc
push
fs
pop
fs
mov
je
mov
jbe
test
arpl
retf
add
add
pop
fs
mov
arpl
xchg
movs
arpl
stos
mov
arpl
mov
arpl
scas
arpl
xlat
fs
enter
enter
enter
enter
enter
enter
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
(bad)
lods
(bad)
mov
xor
test
rcl
shl
fisubr
sub
fiadd
sub
push
ficom
xor
pop
fimul
and
cmc
retf
sub
fmulp
pop
(bad)
retf
sub
xchg
xor
or
adc
jg
push
xchg
ja
adc
addr16
xchg
pop
jnp
nop
push
nop
add
inc
mov
aaa
into
inc
inc
das
jmp
fsubr
xchg
and
jmp
or
xchg
and
jmp
or
xchg
and
jmp
or
xchg
and
jmp
or
xchg
and
jmp
xchg
sahf
out
lahf
inc
inc
inc
xchg
inc
or
(bad)
sti
retf
sti
ret
sti
into
inc
imul
mov
cmp
jae
cmp
dec
jnp
shl
jg
mov
inc
sti
mov
dec
sti
mov
bound
scas
fs
sti
cmp
mov
push
mov
xchg
cli
or
sub
sbb
stos
cli
(bad)
mov
outs
cli
(bad)
mov
imul
ret
ins
and
retf
or
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
xchg
enter
xchg
adc
stos
arpl
push
fs
mov
mul
dec
mul
sub
adc
mov
data16
fs
cmp
aas
int
fs
push
and
sbb
fidiv
(bad)
adc
fiadd
add
ins
shr
fisubr
(bad)
daa
ficomp
xor
loopne
and
fimul
ss
popa
add
mov
add
int
cmp
and
fidiv
inc
xchg
scas
xor
adc
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
jmp
or
xchg
and
and
in
xchg
jb
(bad)
(bad)
rcr
jg
rcr
ja
mov
out
add
pop
dec
mov
(bad)
dec
and
fadd
rcl
aas
push
aam
aaa
pop
leave
shr
push
retf
retf
movs
in
or
mov
popf
sub
pop
aaa
jbe
dec
sbb
out
add
xlat
ret
iret
inc
aad
imul
dec
gs
inc
xchg
test
xchg
ins
and
(bad)
or
outs
and
push
outs
and
dec
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
cmp
leave
(bad)
mov
sbb
div
(bad)
div
div
inc
sbb
imul
jg
neg
jecxz
neg
push
cwde
not
xchg
or
repnz
in
mov
fsub
arpl
jecxz
arpl
cs
imul
fs
mov
inc
xchg
arpl
int3
arpl
call
stos
outs
xchg
add
arpl
mov
fs
enter
enter
enter
enter
enter
enter
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
or
lods
outs
xchg
push
ficomp
xor
ins
fsubrp
xor
(bad)
xor
ficom
retf
sbb
xor
pop
fisub
push
and
fisubr
xor
cli
daa
jl
clc
sub
pop
sub
add
and
mov
scas
ret
std
out
mov
clc
out
mov
hlt
xlat
fmul
out
iret
aad
jmp
xacquire
push
xor
ins
lahf
lods
xchg
sbb
test
sub
xchg
and
jmp
or
xchg
and
jmp
or
xchg
and
jmp
or
xchg
and
jmp
test
icebp
(bad)
movs
fld
inc
jp
cld
repz
popa
hlt
repz
add
rep
inc
das
jg
repz
pop
fdivp
es
repz
mov
repz
adc
repz
mov
push
or
repz
stos
repz
movs
repz
fdivr
repz
jnp
rep
jge
repz
xor
jge
cmp
xor
test
inc
rep
ins
inc
repz
dec
repz
fs
repz
outs
cmps
lahf
arpl
or
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
push
into
test
mov
enter
xor
in
stos
jmp
and
fbld
fcomp
arpl
repnz
arpl
frstor
jmp
arpl
out
jmp
js
or
jp
add
ja
les
dec
fidivr
cwde
dec
fidivr
dec
fidiv
inc
fisub
jnp
fidivr
dec
fisubr
pop
ficomp
pop
fidiv
and
(bad)
ret
or
test
popa
inc
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
fcom
and
fcom
bound
enter
cmps
sar
or
cli
test
std
(bad)
fild
int3
xlat
out
repz
iret
sbb
int3
(bad)
sub
retf
mov
sub
jecxz
cmps
and
rcr
jae
retf
(bad)
xchg
ror
xchg
int3
(bad)
ja
retf
xor
repnz
cmc
pop
dec
(bad)
out
push
and
jmp
shr
aas
inc
mov
dec
lock
pusha
lock
bound
ficomp
lock
aad
cli
ins
and
cmp
or
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
cmp
cmp
out
sbb
gs
iret
pop
push
out
cmp
out
xor
ins
out
cwde
dec
gs
popa
inc
pop
out
xchg
mov
fsub
cmps
(bad)
mov
repnz
xchg
icebp
arpl
frstor
dec
frstor
inc
fisub
cmp
mul
cmp
arpl
or
mov
mov
mov
arpl
and
arpl
adc
inc
mov
enter
enter
enter
and
xchg
and
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
loopne
sbb
jge
push
and
les
fisub
ficom
dec
fimul
data16
data16
je
fdivrp
jb
fdivp
jo
(bad)
imul
pop
imul
add
fisubr
je
in
imul
(bad)
(bad)
pop
imul
push
(bad)
retf
(bad)
aam
inc
mov
(bad)
shl
xchg
mov
aam
xchg
(bad)
sbb
cli
pop
jae
mov
(bad)
jl
jecxz
xchg
and
ficom
and
ficom
and
ficom
and
ficom
and
ficom
and
ficom
and
sbb
push
movs
(bad)
loop
les
(bad)
ja
fdivr
in
pop
test
aas
push
outs
in
inc
pusha
addr16
pop
imul
data16
clc
push
cmp
in
jmp
in
fnsave
in
jmp
jmp
ins
hlt
jmp
push
jmp
ins
fucomip
stc
push
jmp
push
fucomp
ret
jb
jmp
jo
jmp
outs
mov
jmp
js
jmp
add
mov
jmp
jo
jmp
loopne
repz
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
loop
and
fstp
fisub
cmp
arpl
sub
mov
arpl
fldenv
push
fisub
cmp
out
arpl
out
arpl
lock
push
cmc
arpl
mul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
mul
rcl
pop
fidiv
dec
ins
fidiv
ins
fiadd
dec
ins
fidivr
pop
(bad)
jbe
fisubr
ja
fimul
xchg
push
fidivr
and
fcomp
cmp
leave
fnstsw
cmps
loope
xchg
sbb
inc
xchg
sub
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
fcom
pop
push
and
xchg
sti
xor
adc
pop
or
mov
into
inc
pop
iret
aad
fs
aaa
mov
aam
ret
daa
push
rcl
daa
mov
fld
test
fdiv
and
xlat
out
mov
fst
mov
ror
jns
stos
(bad)
nop
(bad)
aam
(bad)
rcl
mov
mov
jbe
call
mov
call
xor
jle
cmp
js
jg
fsubr
jl
or
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
inc
shl
xor
cli
mov
jmp
xchg
out
mov
mov
out
data16
mov
imul
out
sbb
out
popa
mov
xchg
inc
dec
out
arpl
out
arpl
inc
cmc
arpl
hlt
arpl
hlt
arpl
fucomi
arpl
jmp
and
arpl
sub
arpl
sbb
arpl
dec
jbe
dec
mov
arpl
hlt
arpl
xlat
repz
jmp
loopne
arpl
push
in
arpl
lods
arpl
inc
out
or
enter
enter
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
movs
fadd
cmp
push
fidiv
jne
jo
jne
inc
jge
fiadd
jne
xor
fidivr
jl
fimul
je
movs
and
imul
mov
mov
imul
int
push
fimul
pop
fisub
push
pop
fisub
sbb
pushf
inc
ins
fisub
mov
(bad)
rcr
sbb
xchg
mov
shl
jne
fst
ja
fadd
sub
xchg
outs
inc
and
addr16
xchg
lock
and
fcom
and
fcom
and
fcom
and
mov
xchg
and
scas
and
(bad)
div
call
shl
lds
in
dec
shl
push
mov
fcomp
scas
in
push
mov
in
jae
in
jbe
in
jns
in
imul
mov
add
in
push
jno
cmp
pop
in
cmp
in
ds
in
adc
push
jle
mov
out
sub
push
cmp
(bad)
pusha
das
in
pop
dec
in
mov
in
cmps
jge
push
mov
inc
or
dec
xchg
xchg
(bad)
(bad)
jle
mov
sub
xor
pop
or
inc
fwait
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
adc
jl
adc
fadd
mov
adc
xchg
jnp
add
dec
xchg
jno
dec
mov
push
fs
test
test
jo
lods
mov
arpl
je
pop
ficom
push
fiadd
push
fisub
sbb
ins
ficom
push
arpl
aas
sar
ficom
call
xor
rcl
jmp
(bad)
in
or
mov
add
push
mov
inc
xchg
sub
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
push
and
and
es
rcl
and
adc
xor
xchg
and
imul
movs
push
addr16
xor
adc
sbb
xchg
and
in
xchg
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
outs
and
inc
cmp
or
adc
ins
int
loopne
and
shr
outs
loopne
and
inc
outs
and
or
and
inc
(bad)
and
inc
outs
and
inc
(bad)
and
inc
outs
and
inc
xchg
adc
inc
xchg
enter
add
inc
xchg
enter
xor
inc
xchg
enter
and
inc
xchg
enter
ror
inc
xchg
enter
ror
enter
lock
xchg
enter
loopne
inc
xchg
enter
nop
or
xchg
enter
or
enter
mov
inc
xchg
enter
mov
push
inc
xchg
push
or
xchg
enter
inc
or
xchg
enter
jo
inc
xchg
enter
and
inc
xchg
and
lods
arpl
fld
and
sub
and
inc
xchg
and
sub
and
inc
xchg
and
sub
and
sub
and
sub
and
sub
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
xchg
and
dec
xchg
and
inc
xchg
and
arpl
jmp
jmp
cwde
and
in
xor
aaa
sbb
and
in
xor
daa
mov
ficom
dec
cwde
and
in
jo
pop
sub
and
in
jo
imul
cwde
and
in
nop
and
sub
and
in
nop
and
lods
call
lods
call
pushf
call
xchg
lods
mov
or
xchg
and
fcom
dec
or
xchg
inc
or
xchg
mov
or
cwde
pop
or
push
or
and
pushf
and
lods
inc
and
inc
out
and
leave
inc
push
and
inc
dec
and
inc
push
and
inc
outs
and
outs
and
fsubr
or
and
inc
mov
rol
jns
or
and
inc
outs
and
shl
xor
mov
das
inc
stos
and
sbb
fwait
and
adc
and
inc
stos
and
xlat
inc
xchg
and
xchg
fmul
outs
xchg
sub
xchg
in
or
enter
enter
enter
retf
or
(bad)
or
hlt
or
xchg
pop
loopne
arpl
xor
aaa
xor
xchg
enter
enter
enter
dec
or
shl
or
jp
dec
xchg
(bad)
out
xlat
arpl
out
xchg
sbb
xchg
jbe
push
xchg
jno
outs
xchg
ins
add
xchg
or
xchg
sub
or
xchg
call
or
xchg
and
out
and
inc
icebp
and
cmps
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
outs
sbb
and
(bad)
and
and
out
in
bound
lock
inc
out
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
mov
mov
inc
mov
xchg
inc
cmps
and
ds
mov
xchg
and
inc
xchg
and
ds
and
inc
xchg
and
pop
and
aas
fsub
or
xchg
and
in
xchg
and
in
xchg
and
in
xchg
and
in
xchg
sub
ds
push
or
xchg
push
or
xchg
dec
or
cwde
add
lods
xchg
dec
or
cwde
jle
cmc
xchg
and
in
xchg
and
in
xchg
and
iret
xchg
outs
or
xchg
dec
or
inc
or
push
or
inc
or
xchg
and
fcom
and
pop
fwait
or
test
and
rcl
and
loopne
or
inc
outs
and
inc
pop
xor
inc
outs
and
inc
xchg
fisubr
outs
and
and
and
inc
jb
pusha
inc
outs
and
(bad)
lds
outs
and
inc
push
fnsave
fnstcw
clc
adc
and
inc
jp
mov
outs
and
fldcw
adc
xlat
(bad)
fdiv
sbb
outs
and
inc
dec
and
outs
and
inc
dec
ret
outs
and
inc
push
xor
inc
data16
adc
or
and
adc
and
inc
xchg
ror
xchg
or
int3
or
xchg
enter
fcomp
inc
xchg
leave
or
xor
arpl
or
mov
or
les
jmp
enter
sub
arpl
or
mov
or
cmps
clc
or
int3
or
enter
clc
sti
xlat
arpl
or
pusha
std
xlat
arpl
or
xchg
or
call
or
xchg
call
or
xchg
mov
xlat
arpl
or
cmps
enter
and
aas
das
add
inc
xchg
and
xchg
ror
jmp
or
mov
les
xchg
not
xchg
out
inc
push
xchg
hlt
dec
pop
mov
test
push
adc
or
inc
push
mov
ja
lods
hlt
dec
dec
xchg
mov
add
xor
push
xchg
lods
out
outs
lods
lock
jecxz
push
push
xchg
test
dec
push
scas
mov
pop
sahf
icebp
dec
or
inc
xor
cmp
xor
inc
add
jmp
ds
cmp
jg
cmp
push
icebp
in
xchg
sub
sub
dec
in
inc
cs
mov
out
cs
movs
clc
jne
add
call
aas
or
dec
pushf
push
cmp
nop
(bad)
cmp
jl
sub
mov
xor
jbe
xor
outs
dec
sub
pop
jp
push
ret
pop
jg
inc
shl
rol
shl
push
stos
xchg
and
repnz
xchg
pop
xchg
ret
add
dec
ret
dec
ret
pusha
xchg
dec
fwait
mov
pop
xchg
xchg
(bad)
mov
adc
sub
and
xchg
dec
and
push
and
mov
dec
daa
nop
imul
pop
push
sbb
dec
cmp
dec
jg
cmp
mov
sbb
sbb
fiadd
fisttp
mov
cmp
sbb
mov
sbb
push
mov
sbb
fild
pop
cmp
cmp
fild
cmp
fisttp
sbb
pop
cmp
mov
cmp
fisttp
jg
enter
add
inc
xchg
and
out
xchg
shr
adc
clc
adc
adc
out
sbb
sub
pop
adc
out
not
mov
sub
pop
out
inc
adc
out
adc
mov
adc
and
mov
adc
enter
outs
cli
push
adc
sar
mov
stc
dec
adc
in
rcl
in
sub
hlt
in
cld
push
mov
or
add
test
sbb
js
in
and
inc
mov
adc
inc
and
inc
mov
cld
sub
inc
jge
gs
and
inc
cld
fdivp
inc
fst
clc
inc
cmp
inc
inc
adc
aas
es
mov
das
xchg
inc
fldenv
fdiv
pop
inc
call
xchg
inc
jns
inc
dec
dec
clc
les
clc
mov
mov
mov
and
inc
dec
dec
fldenv
test
das
dec
fcomp
fiadd
cmp
inc
arpl
inc
pop
lock
sti
lock
adc
lock
adc
icebp
fist
repz
adc
push
repz
adc
xor
adc
retf
lock
or
pop
adc
xor
or
push
add
push
add
or
inc
idiv
pop
dec
neg
sbb
fist
(bad)
mul
pop
stc
test
xchg
not
sbb
imul
neg
sbb
(bad)
fdivr
scas
aam
stos
jo
popf
stos
inc
aad
lahf
(bad)
ret
mov
lahf
push
mov
sahf
daa
lods
loope
shl
dec
sahf
sti
loop
sahf
ins
shl
je
pop
sahf
aas
ret
or
jnp
pop
mov
mov
bound
mov
dec
push
mov
mov
jo
mov
mov
popa
iret
mov
(bad)
push
and
xor
mov
jge
mov
and
lahf
sbb
mov
out
stos
out
jecxz
ins
lock
sbb
aad
xchg
sbb
lock
icebp
sbb
test
das
sbb
jmp
std
push
(bad)
in
bound
cmps
in
sbb
jg
icebp
push
cs
pop
push
movs
jmp
push
popa
repz
cmp
repz
adc
iret
adc
stc
std
adc
clc
xor
in
push
adc
retf
adc
aam
push
out
fsub
inc
retf
aam
inc
jno
lea
xor
sub
ss
inc
jns
pusha
dec
mov
push
(bad)
dec
ds
sahf
dec
push
dec
imul
xchg
jmp
dec
(bad)
fucomip
dec
fcmovbe
fnstcw
daa
shr
aas
xor
inc
inc
or
aas
adc
es
push
add
xor
and
test
mov
cs
inc
push
adc
inc
push
cmp
add
repnz
mov
cld
mov
sahf
cld
cmp
mov
cld
adc
jl
adc
inc
jmp
or
push
inc
dec
cmp
push
or
jmp
adc
jmp
or
cld
jnp
aaa
cld
enter
int3
or
cld
test
push
cld
lahf
or
neg
setl
int
xchg
stc
clc
push
in
stc
dec
push
ret
cvtpi2ps
pop
je
sti
ja
(bad)
jae
xchg
sbb
lea
push
inc
movs
cmp
shld
popa
movs
sahf
xor
mov
fs
mov
lock
enter
int3
mov
lock
aam
inc
cmps
rcr
cmps
sti
fisubr
cmps
push
mov
fisub
retf
pop
xor
dec
pop
cmp
sar
jmp
sbb
fiadd
stos
and
sti
sbb
popf
cld
pop
adc
ja
retf
std
push
adc
cld
dec
adc
cld
xchg
pop
xor
mov
pop
icebp
adc
pop
test
repnz
pusha
repz
pop
call
pop
sbb
call
sbb
call
mov
push
out
test
sbb
in
ret
out
xor
mov
dec
sbb
lea
and
rcr
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
ret
fld
aas
dec
std
pop
cmps
cmc
push
cmp
retf
fucom
dec
xor
ror
into
cmp
inc
xor
or
int3
dec
push
ss
dec
mov
es
fstp
aam
cmp
add
(bad)
dec
ins
pop
push
dec
mov
or
adc
fwait
dec
loop
xchg
dec
jmp
xchg
and
jmp
cmp
cmp
fcomi
cwde
adc
repz
push
repnz
mov
dec
adc
icebp
push
adc
fst
cs
rcl
and
jbe
adc
pop
adc
out
adc
dec
adc
out
je
jmp
or
cli
int
das
std
aaa
or
std
call
or
pop
clc
dec
or
hlt
sti
xchg
or
sti
jne
pop
sti
(bad)
or
sti
add
or
xchg
cwde
push
push
mov
(bad)
aas
mul
pop
ds
movs
xchg
ss
mov
sub
imul
cmp
inc
xchg
cwde
cmp
fs
cmps
rol
fdivr
ja
in
xlat
push
stos
push
fsubr
stos
cmp
out
cmp
inc
stos
and
push
stos
mov
mov
lods
mov
mov
repz
sahf
leave
shl
sahf
inc
shr
mov
or
xchg
test
movs
movs
and
cmc
dec
adc
jmp
aaa
sbb
jmp
push
sbb
inc
sbb
ja
(bad)
jmp
dec
jmp
sbb
les
and
jmp
or
retf
sbb
dec
lock
sbb
stc
out
fwait
sbb
lock
sbb
icebp
arpl
mov
xchg
and
repnz
adc
loop
sub
leave
dec
xor
xor
retf
cmp
dec
sbb
sbb
adc
or
adc
cmp
xor
leave
dec
push
sti
ror
pop
dec
mov
fisttp
mov
push
dec
mov
cmp
xchg
cmp
cmp
loop
adc
jmp
dec
(bad)
sbb
dec
into
sti
(bad)
dec
(bad)
sti
(bad)
dec
fdivrp
xlat
dec
es
out
fadd
div
push
(bad)
div
push
xchg
stc
out
(bad)
div
punpckldq
aaa
punpckldq
aaa
(bad)
stc
(bad)
push
cmp
push
mov
stc
mov
xchg
stc
out
(bad)
div
push
(bad)
div
movlhps
pop
pcmpgtd
test
es
mov
dec
stc
imul
stc
xchg
or
in
mov
or
in
mov
or
in
mov
mov
stos
or
in
mov
lds
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
aas
xchg
and
not
aam
push
in
int3
not
pop
mov
fsub
xor
xchg
and
les
dec
mov
and
adc
or
mov
add
in
push
not
dec
not
mov
cmp
and
pop
fwait
dec
or
dec
or
popa
mov
adc
les
test
retf
add
jmp
and
icebp
and
pop
arpl
test
arpl
sbb
stos
dec
inc
(bad)
stos
dec
dec
(bad)
stos
cmp
inc
adc
sub
enter
fwait
and
inc
adc
fs
int
and
pop
fwait
stos
retf
les
(bad)
push
in
push
(bad)
push
in
dec
(bad)
push
in
(bad)
jb
sbb
adc
fld
xchg
adc
mov
retf
leave
lds
cmp
fld
addr16
fs
fxch
or
stos
cmp
je
int3
leave
rcl
pop
cwde
ins
add
rcr
iret
pop
imul
inc
xchg
retf
leave
aad
test
fs
aad
or
retf
dec
adc
and
inc
fisubr
mov
inc
sbb
or
push
push
adc
rcl
adc
cs
inc
shr
and
leave
fld
dec
jo
xchg
push
addr16
push
fs
lods
xor
enter
retf
(bad)
push
in
cmp
dec
outs
movs
or
test
mov
outs
sbb
inc
cmp
xchg
add
xlat
and
push
ja
retf
rol
sub
xlat
and
addr16
inc
push
fs
mov
fisttp
inc
xchg
and
dec
adc
pop
and
mov
(bad)
or
or
xchg
jo
adc
ja
dec
inc
adc
call
xchg
pinsrw
push
in
aam
push
in
int3
mov
pop
int3
jb
cmp
fsub
out
(bad)
adc
or
in
push
mov
dec
mov
(bad)
jb
inc
add
xchg
retf
(bad)
mov
(bad)
inc
jnp
xor
inc
retf
add
js
and
retf
jb
inc
add
xchg
retf
(bad)
mov
(bad)
in
shl
pop
pop
adc
retf
hlt
cwde
stos
push
dec
cwde
ins
mov
sub
jo
xchg
and
stos
call
and
mov
(bad)
push
in
dec
(bad)
push
in
(bad)
jb
adc
or
sub
leave
fsub
mov
push
in
cmp
push
in
push
(bad)
push
in
dec
(bad)
push
in
(bad)
jb
sbb
adc
fisub
or
stos
mov
ret
fldcw
fldcw
mov
pop
fadd
and
stos
lea
or
rcr
xchg
pop
arpl
pop
mov
add
stos
push
mov
xchg
hlt
add
add
pusha
and
leave
rcl
psadbw
or
je
leave
fldcw
xchg
setae
add
leave
fld
push
adc
leave
sub
xor
call
retf
or
fwait
test
dec
outs
dec
pop
mov
pop
in
pop
enter
adc
retf
xchg
push
jnp
cmp
retf
xchg
push
outs
stos
nop
ret
xchg
and
retf
mov
and
(bad)
fwait
and
inc
adc
retf
push
ja
int
pop
pop
sbb
movs
jns
xchg
and
inc
icebp
and
dec
cwde
jo
adc
retf
xchg
push
arpl
or
jle
mov
inc
xchg
sub
shr
or
xchg
xchg
adc
cwde
arpl
retf
xchg
or
cwde
xor
mov
adc
fidiv
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xchg
stos
cmp
aaa
pushf
out
mov
adc
mov
fs
mov
mov
sub
xlat
adc
ins
dec
adc
leave
fsub
xchg
add
leave
aad
inc
adc
retf
adc
fs
fs
leave
fsub
xchg
add
jge
xchg
push
add
ror
adc
test
lods
mov
mov
mov
or
leave
aad
add
enter
pushf
scas
rsm
push
mov
rol
mov
into
jns
dec
xchg
dec
xchg
(bad)
jb
inc
add
or
retf
(bad)
mov
(bad)
inc
jle
xor
inc
retf
add
sub
mov
push
in
aam
push
in
int3
xchg
pop
into
jb
push
into
fsub
into
inc
out
stos
cmc
adc
arpl
int3
(bad)
and
sbb
int3
xchg
pop
into
jb
pushf
dec
sti
add
xchg
and
int
adc
int
sub
int
punpckhwd
rcr
or
test
mov
and
inc
xchg
movs
dec
dec
sbb
int
xchg
push
or
push
retf
rcr
adc
stos
leave
jb
je
retf
(bad)
xchg
pop
addr16
push
sbb
mov
mov
xchg
adc
pop
push
jnp
je
dec
sub
or
pop
inc
push
inc
adc
sub
or
pusha
fs
dec
sub
or
pop
push
xor
adc
sub
add
pop
jae
dec
adc
aad
jae
adc
cwde
test
mov
rcr
fnstsw
test
jae
outs
push
push
mov
pop
in
push
xchg
dec
xchg
(bad)
jb
sbb
ss
xchg
add
cmps
pop
or
test
scas
pcmpgtb
retf
into
sub
pop
mov
xchg
and
inc
sbb
push
push
sbb
jmp
add
mov
stos
inc
mov
into
cmp
dec
push
push
arpl
retf
rcr
xchg
or
pop
and
inc
xchg
retf
(bad)
xchg
dec
push
ins
pusha
retf
leave
fst
push
arpl
push
retf
xor
dec
retf
jns
dec
xchg
cmp
push
in
push
xchg
dec
xchg
mov
dec
mov
stos
inc
dec
jo
jecxz
adc
pop
in
aam
push
in
int3
xchg
cmp
pop
adc
fscale
xchg
or
pop
dec
cwde
jo
retf
leave
lds
or
add
fs
rol
xchg
adc
test
mov
popa
loopne
cmps
and
retf
mov
sahf
or
leave
xchg
or
(bad)
leave
stos
int
(bad)
stos
mov
mov
xchg
out
scas
xchg
and
inc
jo
xchg
packssdw
cld
leave
fld
(bad)
in
into
daa
and
imul
leave
int
cmp
fs
fidiv
or
mov
jo
retf
xchg
or
stos
inc
lahf
cmps
repz
xor
mov
jbe
stos
int
(bad)
add
xor
xchg
jmp
retf
leave
loopne
arpl
mov
stos
int
pop
loopne
retf
ror
and
pcmpeqb
adc
sbb
arpl
fmul
fsub
or
xchg
sbb
and
mov
add
adc
inc
jmp
inc
xchg
stos
push
mov
stos
push
lahf
packsswb
adc
retf
imul
or
xchg
adc
inc
adc
icebp
and
jnp
retf
xor
and
inc
jmp
inc
xchg
stos
fnsave
mov
add
fsub
xchg
(bad)
outs
test
xchg
(bad)
xor
leave
std
or
mov
fs
adc
leave
fsub
retfw
xchg
or
xlat
and
lahf
pshufw
fs
adc
leave
fsub
pop
stos
or
cmps
mov
in
enter
dec
adc
push
jbe
int
pop
cwde
lods
inc
xchg
and
das
mov
in
xchg
push
es
std
inc
and
retf
xchg
add
mov
int
(bad)
leave
cwde
mov
xchg
stos
mov
mov
scas
test
adc
arpl
(bad)
mov
and
adc
adc
mov
mov
add
adc
adc
movs
mov
mov
cld
mov
cld
fadd
sahf
(bad)
stos
(bad)
fsub
mov
pop
mov
and
xchg
jno
mov
fidiv
(bad)
pop
xor
inc
push
loopne
retf
add
je
adc
ss
add
jno
push
jae
dec
inc
outs
shl
mov
cdq
or
and
inc
push
in
int3
jle
in
pop
mov
adc
addps
int3
jle
in
cmp
sbb
adc
icebp
and
jnp
retf
loop
jle
in
dec
jle
in
mov
pop
fs
inc
xchg
and
mov
std
mov
xchg
and
imul
inc
xchg
out
scas
xchg
and
inc
pop
and
and
mov
xchg
stos
inc
cmp
sub
mov
pop
(bad)
loop
stos
dec
inc
mov
push
adc
cdq
or
or
retf
cdq
or
or
mov
or
sub
mov
retf
and
inc
sbb
mov
xchg
dec
or
xchg
sub
fsub
xchg
sub
mov
xchg
stos
int
xchg
arpl
mov
jb
std
dec
adc
mov
xchg
cs
mov
cwde
popa
or
xchg
sbb
fsub
iret
inc
iret
stos
dec
inc
retf
inc
adc
mov
push
in
mov
addr16
mov
fidivr
pop
and
or
stos
or
adc
push
scas
arpl
cmp
arpl
lds
jp
xchg
adc
pop
fimul
ret
pop
sub
mov
packsswb
inc
ror
cmp
xchg
and
test
xchg
stos
inc
mov
fs
fcmove
or
xchg
ins
mov
sbb
xor
call
or
sub
inc
push
fs
mov
addr16
adc
xchg
and
stos
mov
or
std
pop
adc
inc
rcr
xchg
inc
adc
pop
enter
xor
fsub
or
pop
adc
mov
xchg
and
or
mov
lods
arpl
or
outs
push
ret
lods
arpl
cdq
mov
in
adc
adc
sbb
mov
mov
xchg
push
mov
stos
retf
loop
cmps
shl
jle
in
inc
jle
in
cmp
push
in
push
jle
in
dec
jle
in
or
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
inc
xchg
and
add
inc
add
add
inc
add
inc
add
add
inc
add
add
inc
add
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jbe
add
inc
add
jbe
add
inc
add
jbe
add
inc
add
jbe
add
inc
add
jbe
add
inc
add
jbe
add
inc
add
jbe
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
cmp
jne
push
push
call
test
je
xor
jmp
mov
sub
mov
mov
add
mov
pop
ret
int3
push
mov
mov
pop
ret
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
call
test
je
call
cmp
jne
push
call
test
jne
push
call
test
je
push
ret
mov
cmp
jb
jmp
mov
mov
add
mov
add
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
xor
mov
mov
mov
mov
mov
add
mov
mov
test
jne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
call
push
call
mov
mov
mov
and
je
mov
jmp
mov
cmp
jne
mov
call
add
mov
mov
push
call
add
mov
mov
push
call
add
mov
mov
mov
cmp
jne
push
push
call
test
je
int
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
push
mov
push
mov
push
call
test
je
xor
jmp
mov
mov
mov
mov
push
push
mov
push
push
push
push
mov
push
call
mov
cmp
je
cmp
je
mov
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
push
call
add
mov
mov
mov
mov
mov
mov
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
mov
push
mov
add
push
call
add
call
mov
mov
sub
push
mov
push
mov
push
call
add
mov
add
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
add
mov
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
push
mov
mov
mov
push
mov
push
mov
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
cmp
jae
mov
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
mov
mov
mov
jmp
mov
add
mov
mov
cmp
jge
mov
mov
mov
mov
mov
add
movzx
mov
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
mov
push
ret
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
and
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
jmp
mov
add
mov
mov
cmp
jae
mov
sub
mov
mov
mov
movzx
mov
mov
shr
cmp
jne
mov
push
call
add
mov
cmp
jne
push
push
call
test
je
xor
jmp
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
sub
mov
mov
sub
mov
mov
jmp
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
jmp
ret
mov
cmp
je
mov
mov
mov
sub
shr
mov
mov
add
mov
mov
push
mov
push
mov
push
mov
push
mov
push
call
add
mov
mov
add
mov
jmp
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
