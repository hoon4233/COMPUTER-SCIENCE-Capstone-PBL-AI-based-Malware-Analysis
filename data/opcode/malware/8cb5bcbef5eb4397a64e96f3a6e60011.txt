add
add
add
add
xor
add
rol
or
add
add
add
inc
add
add
or
or
add
add
or
add
test
add
rol
add
clc
add
or
add
dec
add
or
add
jo
add
cwde
add
add
add
or
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
or
add
add
add
sbb
add
add
or
add
add
js
add
test
add
or
add
inc
add
test
add
or
add
push
add
push
add
add
add
add
add
add
add
or
add
add
add
pop
add
pusha
add
add
add
add
add
add
or
add
add
add
pop
add
jbe
add
add
add
pop
add
add
add
or
add
add
add
add
jae
gs
bound
js
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
ins
popa
outs
imul
jb
imul
xor
ds
je
jne
je
outs
outs
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
ins
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
ins
and
gs
cmp
outs
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
ins
ds
and
and
jb
jno
gs
gs
jb
jbe
ins
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outs
outs
ds
jae
gs
bound
add
mov
add
test
add
test
add
add
add
add
add
or
add
fiadd
add
test
add
add
and
add
add
add
test
add
test
add
add
or
add
add
add
add
add
dec
test
add
add
sbb
add
dec
test
add
add
test
add
add
add
test
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
je
outs
fs
gs
popa
outs
fs
gs
add
je
jb
arpl
fs
jae
add
jb
jne
ins
inc
ins
ins
outs
arpl
push
imul
jb
add
jb
jne
ins
push
jb
je
arpl
push
inc
push
xor
cs
ins
add
fs
popa
imul
inc
push
dec
xor
cs
ins
add
addr16
ins
outs
jae
dec
gs
push
dec
inc
dec
dec
xor
cs
ins
add
gs
ins
inc
js
arpl
gs
add
xor
xor
fs
ins
add
dec
dec
push
inc
push
dec
cs
dec
dec
add
je
fs
jo
gs
inc
fs
jae
gs
add
add
add
dec
pusha
inc
add
inc
add
add
add
add
or
add
mov
add
or
add
dec
cmp
cmp
data16
jno
cmp
or
pop
mov
int
mov
push
push
jo
outs
addr16
ins
xchg
outs
pop
dec
je
bound
iret
jne
cwde
imul
add
fs
inc
xor
dec
nop
div
(bad)
movs
pop
add
ds
sub
jl
in
push
clc
add
ins
push
jge
(bad)
clc
or
jne
or
sbb
push
js
push
push
push
inc
add
adc
cmp
push
add
or
push
out
xchg
or
arpl
sbb
or
or
add
push
inc
or
fiadd
je
and
or
or
and
aas
inc
push
or
(bad)
jo
mov
mov
das
mov
or
adc
inc
sbb
jl
mov
add
(bad)
jmp
push
cs
gs
into
sub
adc
add
cs
popa
je
cld
sub
cmp
xchg
adc
pop
cmps
icebp
out
movs
daa
loopne
push
aas
mov
push
sub
out
mov
or
hlt
into
or
jb
gs
outs
push
mov
xchg
add
and
js
scas
sub
sub
xlat
fild
add
adc
add
add
sub
inc
add
les
sbb
push
mov
sub
push
addr16
call
nop
sbb
mov
mov
call
mov
xor
pop
push
call
fcom
outs
ret
ins
sub
add
loopne
and
adc
jl
int3
adc
adc
pushf
adc
add
mov
pop
xor
call
in
ret
neg
add
je
call
and
rol
fcom
add
push
call
mov
dec
mov
ror
mov
adc
xor
xor
add
test
pop
jne
call
in
push
rcr
lea
push
inc
dec
clc
adc
cmp
cmps
or
sub
shr
mov
and
adc
call
in
pop
and
push
push
adc
xchg
adc
cmc
xor
pusha
and
(bad)
cmps
add
pusha
cmp
dec
or
push
mov
push
aam
or
adc
adc
fcom
test
inc
add
mov
mov
cli
adc
in
mov
lock
or
inc
ins
and
mov
sbb
push
dec
cld
xchg
pop
and
xchg
ret
and
loopne
and
fst
jmp
mov
cwde
rol
je
adc
ds
sub
adc
outs
push
rcl
push
push
enter
dec
pop
lods
popf
mov
inc
push
push
cli
mov
cmp
sbb
pushf
test
xor
cmp
xor
sbb
ror
fadd
mov
dec
adc
ds
icebp
or
push
data16
xchg
les
ds
adc
ss
add
pop
lea
dec
es
jle
in
push
cmp
test
test
cdq
pusha
mov
push
sub
pop
in
cld
sub
mov
xor
nop
sub
jle
push
xor
xchg
mov
inc
sbb
setns
adc
dec
mov
nop
and
mov
push
inc
aam
xor
je
addr16
retf
adc
(bad)
mov
mov
adc
popa
stos
or
adc
adc
fs
and
add
jns
xor
or
ret
push
fcom
mov
add
sub
push
nop
enter
repnz
les
call
add
and
or
adc
xor
xor
inc
scas
jo
push
add
adc
mov
or
sbb
inc
test
add
push
pop
mov
or
unpckhps
mov
cmp
add
loopne
add
dec
dec
cdq
or
xor
inc
retf
xchg
(bad)
or
and
inc
xor
(bad)
sub
jne
inc
xor
and
push
mov
inc
xchg
mov
xchg
inc
or
mov
push
mov
inc
or
nop
xchg
or
push
inc
mov
mov
pop
adc
push
aas
cwde
xchg
push
add
ins
inc
push
and
hlt
into
mov
rcr
or
cwde
pop
icebp
ret
jns
scas
and
and
repnz
lock
lea
push
push
xchg
repz
add
inc
sti
std
(bad)
into
in
push
sbb
std
sub
ss
js
mov
cdq
jo
or
je
test
or
lea
scas
sbb
xchg
dec
cdq
sub
lock
sub
sbb
lds
push
outs
xlat
mov
jecxz
add
pop
sub
push
aam
add
add
inc
lock
cmp
sub
xor
inc
add
xchg
inc
pop
mov
or
lods
aam
lds
lahf
mov
std
mov
push
stos
mov
fld
(bad)
xchg
push
fisubr
cmp
aam
test
imul
clc
aam
retf
leave
push
sub
or
add
sub
sar
mov
test
je
push
push
dec
(bad)
inc
pop
ins
sbb
push
mov
loopne
mov
cwde
jae
and
xor
call
push
sub
lods
and
cld
js
mov
push
test
ins
dec
cmp
sub
sbb
je
mov
inc
or
outs
in
push
push
xchg
pop
test
and
cli
nop
jmp
sar
mov
push
or
pop
sbb
ror
pusha
cmp
mov
test
sub
push
adc
jo
xchg
push
jb
pop
cmp
push
icebp
nop
jmp
mov
mov
push
mov
enter
mov
dec
sar
or
inc
rep
push
mov
inc
push
data16
add
ret
push
xchg
xchg
jmp
inc
aam
mov
push
sbb
nop
jg
push
dec
add
mov
mov
jb
pop
sbb
xchg
lahf
add
je
and
jns
fsub
test
(bad)
stos
inc
sbb
fadd
hlt
sbb
add
xor
loop
fwait
bound
push
cmp
mov
mov
or
cmp
xchg
scas
xchg
xchg
jg
push
jbe
adc
pop
xchg
add
sub
dec
inc
inc
adc
push
call
adc
xchg
hlt
inc
push
sub
sbb
pop
imul
jne
adc
dec
icebp
push
cmp
xor
add
mov
in
in
mov
mov
test
inc
mov
jmp
inc
dec
mov
cmp
into
jbe
or
test
adc
xor
pop
or
push
or
loop
clc
sbb
mov
push
jecxz
sbb
sub
mov
or
push
daa
add
adc
and
jno
pop
loopne
fistp
inc
cdq
sar
push
xchg
push
push
xlat
push
ins
mov
adc
inc
lods
adc
mov
and
rcl
or
cmp
cmp
push
jne
mov
inc
adc
jnp
sbb
addr16
adc
fild
test
je
test
pop
(bad)
push
dec
jo
jns
or
movs
scas
fcmovbe
test
cmp
or
ja
xchg
sub
mov
inc
or
or
adc
sbb
jbe
ja
stos
aam
cdq
push
pusha
lock
sub
pop
mov
not
xor
lock
mov
sub
push
pop
outs
adc
inc
push
push
out
xlat
dec
and
dec
loopne
ret
inc
loopne
xchg
sbb
clc
mov
or
loope
pop
pop
idiv
sbb
or
lock
sbb
test
push
rcr
cwde
mov
iret
and
test
and
sub
sar
enter
push
fwait
pushf
inc
jecxz
lods
icebp
mov
pop
ret
or
and
or
repnz
hlt
adc
sti
(bad)
fisttp
mov
adc
push
sub
movs
test
call
adc
jno
xchg
and
call
cmp
add
jne
cmp
int3
and
sti
leave
mov
mov
push
inc
mov
push
xchg
test
inc
movs
ins
inc
cli
sub
test
cli
sub
mov
mov
push
mov
and
stc
repz
xchg
inc
cmp
pop
push
mov
push
adc
push
mov
adc
add
(bad)
call
test
js
sub
push
push
ins
in
sub
push
xchg
jo
inc
test
sub
xor
lock
sub
push
adc
or
xor
ss
cmp
push
push
or
adc
inc
and
pushf
add
cmp
jne
(bad)
rol
sbb
cld
inc
rcr
add
int
iret
jnp
pop
fidiv
add
inc
cmp
data16
push
mov
lea
jb
inc
mov
jge
jae
push
xchg
push
xor
sbb
test
sbb
or
inc
mov
mov
mov
cmp
lods
je
sub
dec
retf
push
xchg
inc
cmps
mov
mov
inc
xchg
xchg
mov
nop
or
and
pop
test
sbb
repz
nop
out
inc
mov
xor
mov
fs
in
push
je
ss
mov
test
pop
push
jmp
push
dec
inc
and
xor
mov
push
dec
ja
sub
lea
adc
mov
mov
adc
loope
ret
push
pusha
sar
mov
fstp
and
mov
sub
fldenv
dec
xchg
mov
ss
stos
sar
cmp
inc
loop
not
mov
pop
sbb
shl
dec
movs
stos
pop
mov
and
jno
sbb
xchg
push
jbe
stc
add
pop
pop
pop
pop
ficom
push
es
jle
popf
and
jo
test
daa
rol
dec
(bad)
ins
pop
into
and
xchg
jbe
or
cdq
outs
xchg
jo
add
adc
outs
rcl
mov
push
adc
add
sub
pop
in
es
shl
sub
push
push
jb
movs
in
arpl
adc
js
sahf
push
cdq
shr
leave
adc
hlt
retf
jmp
lock
ficom
and
call
jno
inc
or
or
sub
xor
into
loop
dec
adc
call
ror
ds
test
cmps
inc
js
iret
mov
into
mov
push
mov
daa
pop
sub
jge
and
fcom
inc
mov
sub
jne
(bad)
call
push
retf
fcom
rol
movs
xchg
adc
out
les
adc
cli
mov
xchg
and
movs
test
mov
or
pop
mov
sbb
and
mov
jmp
push
and
not
push
sar
add
sahf
pop
push
sahf
or
mov
movs
nop
sub
clc
mov
add
xchg
cmp
ret
xor
push
pop
xchg
and
in
dec
xor
adc
pop
clc
retf
sbb
jle
inc
leave
inc
push
xchg
je
movs
push
add
(bad)
sub
xchg
rcr
jo
add
push
jnp
fisub
daa
inc
push
daa
push
push
xchg
adc
inc
sbb
clc
sub
xchg
cdq
adc
and
xor
adc
jle
adc
sti
sub
pop
gs
cld
sbb
std
mov
sbb
outs
mov
mov
je
cmps
adc
sub
call
aad
pop
cmp
xor
push
pop
js
mov
inc
mov
mov
or
xor
sub
les
inc
and
cld
jl
mov
add
outs
xor
clc
xchg
pop
cld
or
dec
leave
or
(bad)
int3
(bad)
xlat
xchg
sbb
push
lahf
shl
cmp
bndstx
daa
xor
out
and
ret
dec
clc
popa
test
inc
or
leavew
enter
dec
add
adc
jae
adc
loop
cmps
lods
(bad)
ja
or
cs
sub
add
jmp
es
inc
push
(bad)
fs
hlt
pop
lock
cld
daa
jno
test
mov
dec
iret
aam
jne
sub
xchg
icebp
xor
mov
xchg
into
mov
sbb
mov
jmp
js
xchg
adc
test
push
and
cmp
xchg
jo
mov
enter
or
sar
push
dec
rcl
sub
stc
das
sti
jge
dec
idiv
sub
pop
push
sub
jl
popf
adc
inc
ror
mov
add
enter
mov
je
cmps
add
sub
and
dec
int3
pop
push
popf
add
mov
mov
mul
push
push
xchg
inc
gs
and
hlt
adc
pop
mov
cs
push
add
shl
or
sub
add
dec
(bad)
dec
and
push
or
stos
not
dec
dec
das
enter
push
lock
push
cs
jecxz
xor
popa
mov
push
aaa
mov
xor
push
mov
push
das
push
inc
les
cmp
dec
pop
push
je
rcl
and
jns
in
in
pop
sub
loop
(bad)
adc
and
data16
sub
xor
cli
inc
fdiv
mov
test
movs
xchg
mov
(bad)
jae
mov
mov
sbb
mov
scas
in
mov
loope
fcom
cmp
adc
outs
loop
fwait
pushf
ret
fdiv
or
int
push
repnz
pushf
xor
pop
pushf
test
adc
sar
inc
int3
sub
push
test
pushf
fsubr
push
lods
scas
daa
sub
shl
ins
jl
adc
adc
std
(bad)
jo
in
test
add
retf
or
das
pop
and
(bad)
in
push
adc
fdiv
adc
(bad)
test
mov
mov
push
mov
inc
adc
lds
shl
lea
lock
movs
dec
mov
mov
jecxz
push
loope
inc
lods
sub
sbb
jmp
mov
add
sti
dec
fstp
jmp
bound
push
jnp
test
add
int3
dec
xor
mov
add
or
je
add
loop
lea
xor
mov
dec
sbb
or
add
arpl
jae
cmp
adc
aaa
daa
sub
xchg
(bad)
pop
mov
mov
mul
in
shr
and
mov
fcomp
mov
shr
mov
push
mov
lock
push
sbb
mov
lock
ret
push
data16
aam
and
dec
movs
(bad)
bound
adc
cdq
push
adc
inc
adc
stc
push
sub
and
adc
and
rcr
pushf
sub
push
icebp
xor
int3
adc
jbe
movs
rol
sub
addr16
mov
jne
inc
mov
movs
int3
jne
out
pop
and
outs
push
cmp
rcl
dec
xchg
(bad)
(bad)
mov
pop
enter
mov
ror
fsub
and
push
shl
les
jbe
dec
push
int3
aaa
adc
and
les
jmp
and
enter
or
cmp
popa
aam
adc
dec
mov
push
ret
(bad)
retf
into
and
js
jbe
or
cmp
push
push
(bad)
outs
fs
mov
push
cmp
dec
shl
dec
push
or
jmp
sub
and
rcl
movs
icebp
mov
xchg
and
push
sub
xchg
and
adc
loop
out
inc
jmp
inc
outs
or
pop
loop
(bad)
and
rcr
das
mov
and
adc
push
jg
xor
sbb
movzx
inc
xlat
push
or
mov
push
pop
(bad)
and
aam
or
sbb
call
sub
xchg
push
daa
mov
in
sub
in
sub
test
cmps
xchg
push
mov
lock
dec
clc
int
movs
jne
ins
inc
mov
xor
ds
push
pushf
or
and
jae
ins
cmp
sbb
and
mov
or
dec
in
mov
sti
mov
mov
dec
(bad)
xchg
clc
mov
and
sbb
jo
sub
clc
dec
popf
or
inc
add
jmp
and
xor
pop
int3
popa
pop
pop
or
cdq
cmp
hlt
or
dec
sub
gs
ds
loopne
and
dec
sbb
retf
push
dec
imul
mov
inc
ret
add
jns
mov
mul
lock
sub
mov
call
clc
jmp
nop
jmp
mov
pop
mov
rol
dec
adc
jnp
cmp
cwde
push
mov
jnp
cmp
cld
cmp
xor
mov
test
lods
arpl
adc
or
(bad)
ror
cs
and
or
mov
(bad)
xlat
mov
or
daa
mov
fistp
or
dec
lea
scas
mov
xor
test
cwde
mov
adc
cmp
dec
sub
mov
cmp
lods
(bad)
inc
add
mov
add
icebp
lahf
popa
(bad)
loope
xor
clc
test
add
add
movs
ins
outs
mov
push
inc
or
repnz
xor
or
ins
pop
and
pop
dec
xor
cmps
mov
loopne
mov
lahf
jo
or
xor
inc
xor
and
loop
bswap
rcr
adc
mov
loope
adc
push
cmc
and
mov
pop
cmp
pushf
xor
fwait
sbb
fcom
or
xchg
(bad)
nop
xchg
shl
and
fdivr
push
adc
and
cmp
push
cdq
mov
or
inc
call
or
aad
call
sub
enter
arpl
and
dec
push
fwait
rol
xor
dec
jo
push
rcl
sbb
push
xchg
mov
jl
inc
or
adc
mov
pop
call
je
xchg
mov
rsqrtps
sub
mov
push
push
sbb
lock
ins
sbb
jb
sbb
fcom
or
xchg
lahf
jecxz
lock
jbe
push
mov
pop
jge
(bad)
loop
leave
add
sub
inc
stos
aaa
mov
sbb
mov
clc
out
in
jl
ret
or
mov
pop
lods
repnz
or
je
ins
jg
sbb
mov
mov
mov
or
ror
hlt
jne
xchg
mov
cmp
mov
in
cs
xchg
ficomp
and
repz
mov
cmp
or
dec
cmp
fiadd
mov
dec
mov
push
jne
stos
pop
cmp
push
xchg
mov
or
in
inc
sbb
and
movzx
adc
dec
push
sbb
clc
jne
inc
push
inc
xchg
hlt
fadd
sbb
and
dec
cmps
or
sbb
cmp
sbb
repnz
in
and
ret
sub
in
in
push
mov
adc
jmp
push
cmp
jl
popf
movs
data16
sbb
ret
xchg
push
jl
aam
fsubr
xor
and
and
mov
shl
pusha
adc
cmp
or
add
or
jmp
xor
cmp
mov
push
adc
stos
fmul
push
mov
jbe
inc
nop
cdq
xchg
adc
jb
out
or
adc
sbb
mov
nop
ret
inc
fs
test
leave
(bad)
daa
dec
test
adc
add
sbb
inc
aam
push
in
push
adc
push
adc
and
adc
jp
or
shl
into
jle
fmul
dec
fadd
loope
xchg
mov
clc
dec
call
push
jl
test
push
sub
(bad)
movs
xor
int3
sub
add
shl
lock
xlat
cmp
std
pop
out
shr
or
inc
loopne
sbb
push
add
lods
scas
dec
int3
add
xor
sub
xchg
push
hlt
mov
fmulp
pop
sub
sar
xchg
mov
lods
pop
lods
sub
pusha
xchg
or
nop
and
sbb
push
dec
scas
mov
inc
aas
inc
mov
jmp
fistp
xor
cmp
push
test
and
pushf
nop
cmc
pop
nop
(bad)
vrcpps
into
shl
call
clc
adc
and
add
je
(bad)
pop
in
sbb
lds
cwde
cmp
lahf
dec
das
cmp
dec
adc
jb
adc
inc
and
cmp
add
lods
shr
cmps
adc
xor
sbb
outs
jne
and
ja
cmp
fldcw
cmp
jl
jg
add
sbb
sbb
push
cmps
and
mov
jp
adc
jne
pop
gs
js
and
xrelease
shr
cmp
popf
fisttp
dec
hlt
inc
cmp
retf
test
repz
mov
add
test
and
aad
mov
mov
add
jmp
push
aaa
pop
push
test
mov
dec
idiv
movs
(bad)
cmp
cmovb
xor
and
call
hlt
mov
or
or
icebp
push
mov
lds
ror
mov
in
rcl
ins
cmp
xchg
mov
sbb
add
jle
std
cwde
and
dec
mov
or
pop
adc
sbb
fstp
sub
jp
daa
call
push
hlt
cdq
mov
add
daa
add
inc
out
aaa
sub
xor
stos
or
das
sub
enter
daa
or
adc
adc
and
and
pusha
or
rol
ins
jmp
es
mov
adc
push
inc
jmp
addr16
call
xchg
lea
mov
(bad)
cld
jnp
xor
mov
in
add
jmp
mul
cmc
dec
sub
das
js
loop
neg
jmp
and
call
movs
inc
cmc
inc
jmp
in
add
lods
cli
aas
out
push
test
lods
cmc
xchg
add
push
lods
cmps
test
data16
cmc
jmp
lahf
push
cmp
jb
(bad)
loope
in
jmp
movzx
push
mov
shl
and
je
sub
jg
adc
sub
test
add
push
jns
and
popf
add
inc
outs
and
dec
cwde
pop
rol
push
mov
mov
sub
clc
xchg
jmp
in
inc
std
cmp
shl
sti
sar
lods
in
sahf
pop
outs
mov
and
test
jmp
sar
dec
mov
sub
inc
outs
and
repz
xchg
inc
push
sub
int
cs
cmp
movhps
loopne
jg
push
add
xchg
or
rcr
ins
add
adc
ror
sub
stc
xlat
sub
adc
rol
mov
jne
jae
sub
and
ret
sti
jo
fadd
cwde
cld
sub
enter
add
jg
dec
xchg
sub
add
sahf
mov
cmps
hlt
xchg
dec
pop
es
adc
ja
xchg
ja
xchg
or
jne
pusha
fdivr
fsub
push
xchg
fdivr
mov
movs
mov
cmps
test
sbb
cmc
push
adc
sub
int3
inc
repz
mov
dec
in
inc
repz
repz
pop
pop
shl
cld
push
push
xchg
mov
push
lock
dec
rcl
or
in
inc
pop
pop
xchg
adc
mov
add
dec
sub
mov
push
jo
xchg
call
dec
sub
xchg
add
sub
int3
dec
dec
call
mov
cmp
and
push
pop
in
cmp
jne
nop
stc
cmps
add
es
push
add
xchg
ins
repz
mov
stc
clc
xchg
mov
inc
cmp
inc
and
cld
jae
and
popa
je
push
in
mov
popf
daa
push
push
jg
jg
mov
adc
es
or
pop
and
add
and
mov
adc
cmps
pop
out
loope
mov
dec
sbb
(bad)
shl
pop
mov
adc
cmc
inc
fs
call
jne
or
fadd
mov
fdivr
add
and
inc
inc
mul
cmp
dec
or
and
inc
(bad)
nop
hlt
adc
sbb
pinsrw
inc
out
stos
in
jb
dec
cmp
das
jbe
pop
and
pop
jnp
cmp
xchg
cli
xchg
cmp
imul
inc
mov
cld
(bad)
ror
xor
xchg
mov
rcr
jmp
inc
pop
mov
xchg
jmp
fsubr
mov
push
cmps
sbb
ins
jp
mov
mov
add
push
lods
fwait
push
dec
mov
test
sub
cmp
das
and
fisubr
xchg
add
xchg
fs
push
or
cmp
scas
sub
test
jo
xchg
mov
call
sbb
adc
int3
push
movs
ficomp
jnp
and
dec
mov
and
retf
xchg
jle
stc
push
or
xchg
les
aad
cld
cld
xchg
cld
fcmovu
sub
mov
xor
iret
xchg
or
mov
inc
adc
shl
jne
xor
xchg
adc
ds
mov
push
push
mov
or
mov
enter
xchg
push
pop
fwait
jbe
das
lds
push
pop
add
cmp
jle
dec
xchg
cmp
movs
add
imul
jmp
xchg
xor
retf
adc
lods
sbb
lods
clc
mov
jno
cmp
lea
ds
nop
pop
jb
call
jnp
xchg
clc
or
(bad)
mov
retf
inc
dec
in
es
add
lock
dec
pop
lock
lods
mov
add
dec
pop
outs
xor
xchg
cmps
cmp
pusha
jge
pushf
inc
or
sar
mov
not
(bad)
push
add
mov
jmp
enter
pop
push
push
mov
in
jne
dec
pop
gs
mov
das
fwait
mov
in
sbb
mov
(bad)
les
test
mov
in
out
push
cmp
inc
fstp
mov
je
int
cmp
loope
jl
retf
in
iret
lahf
adc
jae
lods
gs
adc
mov
sub
cmp
mov
mov
loopne
mov
jge
sub
call
loop
dec
sub
call
sub
test
test
xchg
in
and
mov
pushf
mov
dec
iret
add
cmp
lock
push
das
adc
cmp
jl
pop
xchg
leave
xchg
sub
mov
jmp
sub
push
std
xor
jle
sbb
sub
mov
bound
sub
movs
sbb
jle
test
or
mov
cmp
lock
jp
mov
mov
ror
mov
pop
and
inc
mov
push
lods
outs
xchg
mov
jmp
mov
jo
jo
movs
pushf
sub
lock
xchg
cs
(bad)
push
imul
int
(bad)
and
in
push
push
jb
sbb
(bad)
adc
mov
and
sub
cdq
imul
push
cs
repz
and
jmp
push
jle
xchg
iret
ret
fwait
lock
add
and
pop
cmp
sub
mov
xchg
dec
adc
cmp
or
in
or
push
pop
sub
dec
sub
mov
in
sbb
or
push
cmp
push
or
(bad)
(bad)
jmp
jmp
sub
(bad)
fstp
jnp
add
cmps
add
pushf
add
repz
je
into
add
adc
stc
dec
inc
and
push
(bad)
adc
nop
push
pop
shl
inc
push
movzx
add
sbb
jmp
jnp
add
pop
(bad)
adc
or
out
xor
jmp
popf
movs
les
and
dec
push
cwde
aas
sbb
mov
stc
or
push
in
in
sub
mul
push
push
mov
xchg
ret
add
push
xchg
inc
push
sub
test
icebp
sub
lea
popf
scas
xchg
sub
movups
test
sbb
mov
mov
fbstp
sub
sub
mov
push
push
rol
mov
test
adc
mov
test
shl
lods
xchg
or
pop
loopne
mov
sub
out
pop
cmp
icebp
mov
xchg
shl
out
fcomp
sar
sbb
inc
fdiv
push
cmp
inc
leave
add
jmp
into
jg
std
das
jmp
into
xchg
movs
xchg
mov
mov
sbb
mov
pop
aam
test
stos
imul
add
push
stc
test
aam
xchg
sub
fs
ds
rcr
inc
jbe
cmp
das
outs
test
test
xor
push
xchg
jb
imul
test
pop
and
cmp
or
pop
in
repnz
repnz
add
pop
push
and
dec
push
pop
imul
mov
xchg
push
retf
aam
je
push
xor
xor
bound
xor
out
scas
inc
nop
and
outs
cmps
jns
jmp
or
(bad)
ret
repnz
mov
dec
mov
int3
adc
neg
sbb
loop
or
mov
add
sbb
lods
or
push
pushf
inc
shr
xchg
jecxz
popf
sbb
add
dec
sub
popa
sti
clc
mov
stos
imul
mov
daa
jmp
xchg
mov
mov
jne
jmp
inc
lock
not
xlat
int
or
fcomi
jmp
lock
adc
or
ins
inc
or
pop
ins
mov
xchg
push
out
inc
pop
cmp
jp
xor
push
mov
movs
imul
dec
(bad)
test
pop
mov
or
jae
pop
mov
hlt
cli
fs
mov
call
or
adc
jle
pop
(bad)
movs
and
ret
jne
push
out
sub
(bad)
pusha
mov
mov
inc
add
lahf
ret
push
and
add
icebp
jmp
popf
jne
inc
mov
add
sub
sub
aam
adc
xor
fld
add
jge
mov
repz
sbb
(bad)
adc
push
ret
ins
add
pop
mov
jge
xchg
or
repz
daa
pushf
loop
pushf
adc
mov
push
loopne
adc
jg
rcr
mov
cdq
loopne
sbb
pop
or
mov
lods
je
inc
ret
jl
call
dec
in
sbb
inc
mov
adc
call
retf
sub
and
inc
sbb
sub
adc
or
adc
jle
(bad)
popf
xchg
pop
rol
ret
div
dec
sub
pushf
ja
or
ja
and
xor
or
push
outs
xlat
push
push
mov
xchg
jecxz
or
(bad)
jne
xor
inc
test
jns
jo
movs
inc
rol
call
cdq
cmp
push
mov
test
ror
mov
in
pop
or
push
fisttp
xchg
cmp
pop
xor
mul
mov
je
ds
or
call
push
or
jb
and
leave
xor
and
repnz
dec
push
xchg
dec
bound
adc
in
push
frstor
call
dec
rcr
lods
xlat
mov
push
sbb
and
dec
cmp
call
and
cmps
xor
loop
leave
xchg
push
inc
dec
arpl
ins
ret
into
lahf
mov
xchg
cmp
pusha
xchg
pop
cs
dec
or
push
lahf
push
mov
shl
dec
cmp
pop
jbe
sbb
jb
push
mov
rcr
in
inc
or
ds
popa
test
mov
lods
fs
sbb
in
rcl
hlt
or
adc
add
mov
inc
sti
cmp
jb
in
clc
in
and
xor
mov
clc
mov
sub
jle
add
dec
jge
sub
xchg
inc
fisttp
shl
jmp
pop
hlt
jb
xchg
nop
mov
and
add
daa
or
not
jne
sub
xchg
or
pop
sti
dec
test
pop
push
mov
call
out
mov
std
jnp
cmc
push
add
xor
jno
mov
inc
mov
inc
cmps
out
sub
clc
cld
stos
jecxz
call
nop
jmp
mov
pop
movs
mov
sub
and
(bad)
add
dec
or
mov
and
ret
inc
test
test
fisub
jmp
movs
rol
in
ds
popf
or
sub
sbb
push
movs
pop
dec
leave
jp
pop
sub
adc
es
nop
pop
cld
jne
add
push
xchg
mov
aaa
cmp
std
inc
cmp
ins
pop
pop
mov
iret
mov
pop
or
inc
test
dec
and
aam
iret
xor
add
push
dec
cmc
bound
sbb
test
mov
mov
jmp
cmp
int3
fldenv
mov
lahf
dec
daa
rcr
mov
je
xchg
imul
rol
scas
leave
jb
add
jmp
retf
(bad)
shl
inc
stc
bound
cmp
je
xchg
lock
ds
adc
idiv
fcomp
loop
push
adc
ja
in
or
dec
mov
and
in
pop
mov
or
div
pop
push
sub
sbb
icebp
loopne
pop
push
push
pop
xor
lods
dec
mov
cmp
jb
test
sbb
pop
fidiv
mov
xlat
push
cli
aas
and
(bad)
xlat
call
iret
out
pop
mov
add
jb
push
repz
movsx
in
mov
mov
jp
inc
dec
mov
push
and
loope
mov
pop
adc
retf
dec
shl
cmp
ds
and
sbb
addr16
jnp
stc
sbb
shl
adc
xchg
iret
loop
pop
push
fs
pop
sbb
(bad)
aad
shl
jmp
mov
push
lahf
out
and
push
inc
cwde
jo
and
and
lahf
adc
bound
push
cmps
sub
pop
dec
dec
adc
loopne
inc
nop
mov
fs
sbb
mov
mov
and
mov
mov
mov
fadd
push
jbe
xor
pop
add
rcl
dec
and
push
test
scas
cmps
adc
adc
ror
cld
icebp
push
test
sbb
adc
adc
call
inc
push
loop
sbb
mov
movs
adc
push
les
jno
pop
push
cdq
and
adc
inc
les
add
enter
add
pop
push
push
push
push
movhlps
inc
loopne
cmps
in
push
pusha
loope
pop
push
or
daa
jmp
jmp
fcom
sbb
push
movs
xchg
cmps
ins
lods
cs
pop
mov
test
mov
aam
or
stc
jmp
retf
imul
xchg
int
jne
dec
ret
inc
or
jne
or
sub
nop
in
cmp
pusha
movs
clc
sub
cmps
add
(bad)
rol
jl
iret
sbb
mov
sub
mov
or
fidiv
or
cmp
in
mov
ffreep
repnz
mov
fs
pop
(bad)
mov
inc
dec
adc
inc
xor
call
add
mov
lods
outs
sbb
aaa
ja
hlt
adc
sub
or
adc
data16
or
sbb
or
push
scas
mov
idiv
jne
or
inc
or
sbb
pop
and
add
lock
pop
cdq
pop
adc
loopne
outs
inc
add
jne
sbb
cdq
mov
arpl
jle
push
scas
xchg
xchg
pop
xor
dec
mov
mov
pusha
jae
cwde
mov
or
mov
xor
push
xor
pop
push
jmp
and
jb
or
lods
pop
sahf
push
jmp
xor
mov
dec
push
xor
mov
cmps
or
pop
sub
ss
mov
fcomp
cmp
loopne
mov
add
cmp
push
adc
stos
gs
jle
leave
outs
hlt
test
dec
jmp
push
test
sbb
push
test
and
(bad)
sub
mov
xor
fisttp
sbb
inc
or
outs
inc
cmp
jno
inc
mov
js
jl
data16
fiadd
(bad)
sub
in
js
dec
bound
repz
lods
sub
pop
ret
sti
icebp
hlt
fmul
(bad)
push
sub
cmp
pop
add
add
cmps
or
(bad)
or
cld
push
cmp
jl
push
adc
ret
rol
mov
adc
dec
dec
mov
mov
test
add
(bad)
sar
test
xchg
mov
out
neg
xor
je
and
shl
or
inc
jge
sbb
jb
imul
dec
test
js
dec
test
jmp
or
je
enter
adc
sub
xor
scas
push
mov
lea
mov
dec
jbe
xchg
jns
lock
dec
sub
cmp
into
inc
dec
imul
jno
cmp
mov
cmp
jb
div
pop
and
mov
dec
and
add
mov
ja
(bad)
dec
or
dec
rcl
jne
cdq
sbb
cwde
xor
cmp
mov
(bad)
lahf
adc
mov
les
and
aam
sub
mov
or
adc
outs
stc
jl
pop
lods
cmp
cmp
or
imul
add
and
sbb
(bad)
jg
pop
fcmovu
adc
push
or
mov
mov
adc
add
inc
loop
repnz
lock
ja
adc
adc
rol
inc
in
dec
sub
fild
cmp
jns
repz
or
push
push
or
inc
mov
scas
cld
and
push
mov
dec
mov
mov
mov
les
mov
jmp
mov
adc
or
mov
push
mov
lock
sub
fisttp
dec
adc
sbb
mov
int
xor
ja
sub
dec
out
or
add
dec
retf
add
or
and
sub
push
xor
pusha
mov
push
lea
test
push
sbb
out
int3
and
int3
xchg
fucomi
(bad)
xchg
(bad)
pop
repz
pusha
arpl
scas
dec
ins
mov
cmp
add
push
cmp
(bad)
mov
add
call
push
pusha
cmp
add
push
fisubr
and
shr
mov
test
xlat
adc
sub
add
sbb
mov
mov
add
cmp
loope
push
push
stc
add
push
xor
pusha
lahf
je
add
es
cmp
in
adc
pusha
cld
std
cwde
sub
shl
push
js
cmp
je
mov
or
push
movzx
push
xchg
scas
xchg
(bad)
cld
lea
ret
dec
aaa
or
ret
jle
ret
sub
in
adc
sbb
inc
and
sub
in
mov
fbstp
or
push
pop
cwde
jns
nop
fcmovnb
xchg
stos
and
cdq
xchg
sbb
js
js
push
pop
push
or
and
mov
mov
add
inc
add
dec
push
icebp
scas
add
addr16
push
fwait
pop
sbb
cld
pop
cdq
jle
jle
cmp
inc
mov
jne
nop
jno
pop
cmp
ja
mov
lea
adc
sbb
push
mov
test
add
call
dec
into
clc
jae
test
mov
ja
stos
clc
cmc
mov
push
cmp
cwde
cld
(bad)
push
push
sbb
in
jb
xor
(bad)
call
add
jg
cmp
call
or
mov
stos
cli
add
or
jmp
mov
das
loopne
out
mov
shl
and
cld
dec
shr
imul
test
cmp
cmp
add
add
sbb
pop
ja
jb
cmp
dec
adc
sbb
cmp
cld
cli
jnp
adc
jbe
xor
int3
idiv
add
xchg
mov
or
call
jle
clc
gs
jo
or
pop
sbb
mov
cmp
cld
div
sub
loope
(bad)
movs
sbb
or
sbb
les
retf
adc
cmps
mov
push
repnz
cmp
sub
pushf
mov
push
jmp
push
push
call
mov
stc
(bad)
imul
jp
dec
popa
push
(bad)
addr16
push
add
fs
pop
(bad)
jmp
mov
mov
jnp
mov
pop
imul
add
jne
push
ins
vpaddusb
or
ja
push
inc
fstp
adc
loope
cmp
sub
push
xor
xor
jmp
xlat
inc
daa
sar
stc
mov
(bad)
dec
dec
out
push
pop
into
sbb
dec
add
mov
xchg
adc
xlat
add
push
jmp
xor
xor
adc
push
inc
push
or
fld
pop
adc
jecxz
jmp
add
js
pop
pop
outs
pop
add
dec
ds
and
mov
inc
or
fild
or
pop
scas
outs
cmps
jmp
outs
adc
push
fwait
or
in
xor
adc
dec
cmp
xchg
dec
or
clc
push
popa
jmp
push
sbb
mov
loopne
sub
xor
inc
syscall
mov
test
scas
mov
lock
lds
add
push
sub
ins
fwait
out
pop
mov
push
fs
adc
or
push
add
inc
pop
or
or
inc
dec
adc
inc
pushf
pop
scas
ins
push
or
clc
test
js
push
jl
test
mov
(bad)
daa
add
mov
sbb
add
ror
fs
lods
in
cmps
xchg
ret
or
addr16
dec
or
mov
adc
mov
add
sub
and
cmp
mov
xor
loopne
sbb
fcom
leave
push
and
test
push
adc
das
test
std
fistp
push
movs
les
dec
lea
sbb
test
sbb
std
add
in
gs
sbb
pop
lea
push
and
inc
mov
adc
xchg
clc
mov
popf
enter
les
mov
and
xchg
stos
hlt
sub
jo
push
xchg
jns
xchg
cli
es
mov
loopne
and
inc
and
pop
add
push
lea
pop
sub
dec
mov
mov
adc
add
cs
fldcw
ins
pop
pop
mov
xor
hlt
mov
in
loopne
jl
test
jo
xchg
popf
and
cli
int
xor
inc
add
push
xchg
mov
je
pop
mov
lea
mov
adc
mov
and
push
lds
add
push
pop
cmp
pop
sbb
and
add
adc
out
mov
pop
popa
inc
(bad)
sub
or
jnp
call
cs
int
inc
xchg
clc
lock
mov
gs
push
push
push
repnz
pop
loope
sub
cmp
mov
mov
or
jb
test
push
xor
jns
xchg
pop
push
mov
jo
je
dec
lods
scas
push
dec
and
ficomp
inc
pop
push
dec
test
call
shl
adc
je
or
inc
or
jb
daa
cmp
call
lahf
add
or
enter
adc
or
rcr
sub
dec
fmul
add
sti
jle
push
loopne
or
cmp
aad
fs
in
inc
and
xchg
push
xchg
stc
or
sbb
(bad)
mov
sub
pop
movs
shl
iret
add
sbb
sbb
push
not
stc
and
add
mov
and
mov
and
mov
jmp
jle
sub
push
repz
cdq
je
daa
sub
das
inc
mov
mov
mov
pop
and
sbb
shl
mov
cmp
jne
or
cs
push
sub
xchg
pop
lock
pop
mov
jo
sub
jmp
movs
daa
icebp
xchg
or
xor
add
cmc
and
stc
inc
jb
into
and
cmp
pop
ja
dec
aas
sub
sbb
xor
shr
pop
pop
bound
adc
js
in
movs
mov
mov
xchg
mov
ins
lea
sub
push
and
fs
xor
sbb
or
xchg
and
mov
dec
xor
pushf
shl
sub
cs
mov
inc
inc
test
inc
sbb
cmp
lods
iret
popf
mov
test
les
loopne
cmp
aam
mov
pop
add
xchg
sub
movhps
loopne
jb
jle
into
xchg
ret
adc
sub
ds
jmp
inc
mov
imul
sbb
test
jo
push
rcl
pop
lods
inc
pop
cmp
lods
add
pop
xor
test
jg
xor
jecxz
inc
outs
in
cmps
lock
fdivr
clc
test
icebp
add
je
cmp
add
and
shr
or
mov
sub
or
add
pop
add
xchg
or
or
cli
nop
out
sub
pop
popf
inc
mov
xchg
popf
sti
pop
xor
or
xchg
retf
or
shl
ret
hlt
cs
mov
fbld
sub
stc
dec
sbb
mov
sbb
test
loopne
ins
jne
and
mov
std
dec
or
and
pop
or
jne
outs
jg
add
adc
sub
xor
xor
jmp
and
outs
sub
adc
pop
cmp
lock
push
(bad)
int3
(bad)
(bad)
xchg
out
test
test
sbb
inc
bound
pop
js
je
inc
clc
inc
aad
xor
pop
enter
push
xor
jl
ret
xchg
cwde
shl
mov
mov
jl
xor
cld
bsf
xchg
or
lock
pop
push
leave
or
pushw
jns
jmp
xor
rol
and
call
sbb
mov
sbb
test
xor
mov
cld
adc
int3
push
mov
jne
mov
adc
mov
rol
mov
test
pop
or
aas
cwde
pusha
(bad)
push
or
not
pop
fadd
push
sar
inc
push
jl
jmp
inc
imul
and
js
call
adc
movs
adc
xchg
adc
xchg
mov
jns
adc
lock
aam
adc
(bad)
sub
mov
mov
xor
cld
adc
(bad)
pop
(bad)
popf
test
pop
sub
por
xor
and
bound
cmps
sar
sti
dec
in
mov
iret
mov
lea
ret
adc
repz
movs
div
arpl
push
sbb
arpl
pop
pop
movs
sub
jo
adc
test
in
inc
pcmpgtw
(bad)
sti
push
sbb
pop
mov
fmul
out
inc
and
stos
sbb
movups
bound
add
push
(bad)
call
je
xlat
mov
xchg
push
or
mov
jne
test
jmp
or
add
jnp
inc
aam
or
enter
jae
add
int3
push
cld
xor
mov
ds
push
sbb
dec
or
enter
sbb
mov
mov
pop
cmp
cmp
(bad)
or
ror
pop
inc
test
pop
adc
push
jmp
dec
nop
cmp
leave
xor
nop
movs
nop
xchg
adc
cmc
out
mov
and
mov
sub
push
lea
cmp
adc
(bad)
add
retf
add
and
in
jno
push
fstp
movs
mov
rcr
sub
pop
and
les
cs
sub
fistp
mov
push
jmp
xor
pop
fucomi
and
call
xchg
jecxz
or
push
aam
and
scas
fisubr
retf
xor
stos
int3
dec
mov
xchg
sbb
and
adc
jmp
adc
fisub
sbb
or
and
dec
sub
add
xor
mov
pop
je
or
add
shl
dec
pop
arpl
sar
dec
jl
sahf
jae
adc
mov
in
jae
add
mov
jge
iret
adc
sbb
call
and
ret
or
jne
and
dec
cmp
lea
sbb
cmp
and
(bad)
rcr
jbe
inc
add
inc
cmps
mov
stc
cmp
mov
push
dec
jmp
or
inc
jbe
in
mov
les
jne
mov
push
cmp
fist
shr
sbb
jmp
stc
sub
or
or
jl
mov
sar
sub
sub
sub
clc
data16
fimul
and
clc
sub
sub
add
sub
adc
lock
lock
imul
fsubr
mov
sbb
and
dec
mov
and
dec
push
ss
jo
xchg
gs
mov
ds
push
mov
nop
jg
ret
xor
pushf
mov
aam
or
int3
sbb
push
xor
or
das
dec
or
push
mov
outs
or
jb
iret
push
imul
sbb
jne
enter
sub
jle
jb
push
mov
mov
test
jge
and
fld
jle
or
outs
dec
ins
mov
mov
jg
cs
lea
call
and
sub
lock
rcr
retf
jbe
stc
jl
pop
shl
push
xor
sbb
mov
xor
mov
retf
cdq
pop
mov
ret
mov
lds
leave
(bad)
mov
sub
cmp
mov
jl
mov
je
jne
hlt
pop
leave
push
test
jbe
or
cld
mov
and
dec
rcl
or
push
pop
push
xor
xchg
jge
push
mov
push
call
cld
mov
push
test
push
mov
add
pop
js
push
mov
mov
shl
pusha
push
cmp
jl
push
(bad)
pop
inc
shl
stos
pop
jmp
add
aas
push
int
xchg
push
pop
movs
or
add
jp
bound
into
pop
xor
ret
rcl
xchg
or
pop
xor
sbb
push
push
aam
rcr
loope
lock
jb
cmp
sbb
stc
imul
dec
or
test
pop
jmp
add
or
sbb
test
adc
sub
dec
xor
mov
xor
push
dec
xor
xor
pop
sar
push
jno
and
rcl
jge
fnstcw
or
xchg
stc
loop
dec
xor
movs
comiss
mov
dec
push
xchg
jp
js
sbb
push
clc
add
jle
push
(bad)
lods
xchg
add
and
pop
push
xchg
popa
xchg
or
inc
and
das
mov
jmp
mov
or
div
call
add
inc
push
sets
inc
test
push
lea
mov
cmp
test
ins
popf
(bad)
xor
mov
adc
sub
adc
ret
sub
and
xor
data16
or
or
fild
test
ret
inc
es
xor
or
fwait
push
sbb
nop
jecxz
out
ror
or
mov
sbb
dec
loop
sub
and
outs
in
sub
jmp
dec
xchg
adc
ret
test
jne
or
stos
mov
gs
jmp
xor
and
adc
cmps
xor
adc
(bad)
xchg
in
dec
fsubr
mov
bound
data16
test
mov
dec
pop
cwde
cmp
rcl
inc
mov
push
xor
and
jne
xor
add
push
call
jne
xchg
cmp
xchg
add
or
push
adc
add
in
jns
lods
pop
nop
sbb
push
adc
dec
xor
xor
inc
ins
adc
inc
jmp
push
iret
sub
retf
inc
mov
xchg
fdivr
add
test
push
js
retf
cmp
or
push
sbb
and
in
lahf
fadd
mov
ss
pop
test
mov
popf
or
(bad)
lods
mov
cmp
mov
sbb
rol
cmp
mov
push
mov
or
inc
lea
xor
xor
adc
rcl
adc
xchg
mov
adc
xor
in
xor
dec
adc
xor
inc
(bad)
add
xchg
mov
scas
and
inc
pop
pop
xlat
or
sub
xchg
ret
cmp
jle
fst
adc
adc
sbb
jmp
scas
sub
adc
cmp
fadd
(bad)
pop
in
push
and
push
adc
or
call
mov
lea
stc
lods
push
xor
push
fs
mov
mov
lea
and
call
call
sbb
das
loopne
mov
dec
adc
or
xchg
pop
mov
mov
xchg
sbb
icebp
lahf
inc
jae
xor
push
mov
add
lea
retf
je
mov
add
xor
mov
xchg
adc
mov
rcr
retf
xchg
dec
inc
movs
scas
sub
movs
mov
or
popf
fisub
dec
xchg
inc
rcr
inc
push
lock
push
test
or
xchg
call
jmp
add
inc
jg
mov
or
cmp
and
xchg
xor
cmp
hlt
ficom
ret
lods
or
cmp
add
jne
cmp
and
and
push
in
gs
or
ret
sbb
xchg
ss
and
cld
cmp
mov
dec
push
enter
dec
dec
and
in
dec
xchg
in
out
or
cmc
xchg
mov
or
mov
sub
push
jmp
cli
dec
xor
or
jmp
adc
dec
pop
sbb
push
push
sbb
cld
daa
mov
inc
shl
aas
pop
popa
pop
sub
sbb
jo
lock
mov
xor
cli
adc
bnd
cs
hlt
out
gs
or
cmp
jne
sub
in
shl
xor
sbb
or
fs
push
add
dec
xor
scas
add
inc
out
xchg
push
ror
rol
enter
ds
push
adc
pop
stos
and
(bad)
mov
mov
or
dec
and
sbb
jno
push
sbb
sub
test
dec
jge
lds
xchg
sbb
jecxz
lds
push
jb
je
pop
rcl
mov
inc
cmp
cld
or
push
push
adc
(bad)
adc
pop
(bad)
inc
retf
inc
ins
push
es
jmp
or
sub
jmp
dec
or
and
icebp
sub
inc
or
sub
mov
and
add
popa
pop
jmp
add
shl
push
adc
pop
push
adc
dec
test
xor
sub
aam
adc
push
or
lea
sbb
adc
ins
sub
mov
mov
cmp
jp
inc
and
jle
mov
add
push
(bad)
std
(bad)
adc
mov
push
popf
(bad)
movzx
inc
mov
jmp
neg
sbb
adc
xchg
or
pop
dec
data16
adc
cld
xchg
sbb
cmp
or
pop
aad
pop
stos
in
push
pop
sbb
add
(bad)
into
mov
fsubr
adc
out
sub
xor
pop
test
mov
movs
sub
(bad)
xchg
(bad)
(bad)
fisub
and
add
cmp
cmp
dec
mov
inc
adc
(bad)
daa
ror
scas
je
mov
and
rcl
mov
cmp
mov
pop
je
fdiv
or
pop
adc
loop
lds
jne
xor
jp
push
jne
pop
push
sub
ss
inc
shl
add
dec
int3
popa
fsubr
jg
ret
push
cmp
push
or
adc
std
sub
push
shl
shr
sub
mov
sbb
into
test
jp
mov
cmp
ret
nop
out
ins
(bad)
(bad)
mov
or
inc
dec
add
(bad)
xor
push
push
es
inc
sbb
mov
es
and
or
add
and
or
xchg
cdq
dec
add
es
or
xlat
mov
pop
daa
xor
test
xchg
mov
call
or
outs
xacquire
hlt
adc
sbb
cmc
add
adc
mov
je
stc
cmp
add
add
and
fisttp
sub
xlat
push
scas
fmul
jae
out
add
cmp
push
or
inc
inc
and
jmp
push
dec
cmp
jae
lea
inc
add
dec
or
add
jmp
xchg
adc
inc
or
adc
or
movs
push
call
stos
dec
mov
inc
das
xchg
mov
mov
mov
add
push
jne
sbb
test
jmp
es
add
push
inc
xchg
cmp
call
ror
adc
inc
in
add
jl
inc
mov
lock
inc
adc
pop
ror
cmovnp
push
inc
jmp
scas
pop
inc
mov
pop
add
ret
sti
jb
dec
add
or
mov
call
retf
mov
adc
add
nop
adc
fsubr
inc
or
rcl
xor
and
add
or
sub
push
and
sbb
jne
es
sub
pop
adc
cdq
mov
push
cmps
fisub
clc
iret
cli
sub
hlt
push
push
(bad)
sub
xor
jbe
jb
or
pop
push
sbb
pop
pop
dec
push
ss
inc
jmp
jecxz
mov
cmps
or
pop
mov
push
dec
add
xchg
out
or
xor
(bad)
pop
inc
mov
mov
stos
fs
pop
fwait
mov
dec
adc
dec
icebp
push
inc
inc
add
mov
test
dec
mov
add
lea
cmps
cmp
hlt
jmp
inc
lahf
inc
ds
add
fisub
inc
clc
mov
sbb
xor
cmps
jge
and
mov
inc
das
test
dec
rcl
and
xor
sub
cmp
xchg
sub
(bad)
call
inc
push
shr
into
inc
lea
mov
es
inc
adc
sahf
and
or
and
sub
ss
mov
cmp
xchg
dec
aaa
sub
shl
push
ins
popa
mov
push
dec
pop
les
rcl
dec
scas
inc
cld
push
add
js
cmp
daa
push
mov
mov
repz
not
push
dec
lods
dec
mov
sub
mov
adc
push
and
mov
stc
arpl
jge
out
xchg
outs
imul
pusha
dec
mov
imul
jmp
pop
pop
xchg
mov
add
inc
fisttp
out
xor
lahf
addr16
inc
into
inc
adc
xchg
imul
test
cmp
xchg
cmp
jmp
mov
add
xor
shr
lods
pop
mov
enter
inc
pop
adc
or
add
rep
mov
xchg
sub
or
mov
out
rcr
push
mov
(bad)
push
or
adc
test
inc
inc
ret
mov
aad
sub
xchg
mov
xor
outs
jo
push
sbb
pop
lods
sub
dec
jecxz
fidivr
sub
dec
(bad)
jl
pop
call
shr
retf
adc
mov
xchg
das
sbb
adc
jmp
cmp
or
push
xchg
outs
pop
mov
test
cld
sbb
data16
mov
push
xchg
mov
into
inc
inc
xor
add
fucomi
stc
nop
jl
inc
test
push
stos
sar
sub
repnz
mov
in
scas
jo
imul
pop
ins
out
clc
loopne
mov
push
pop
sub
pop
jae
dec
xchg
(bad)
pop
add
imul
pop
push
je
mov
jp
cwde
sbb
out
(bad)
xor
ret
cmps
nop
movs
adc
das
adc
xchg
in
push
fcom
adc
pop
adc
dec
push
cmp
mov
push
pop
test
add
cmp
jne
adc
scas
xchg
jae
push
pushf
nop
mov
cmp
sub
inc
and
shld
add
or
mov
call
jmp
xchg
and
(bad)
xchg
mov
enter
mov
dec
mov
fdiv
mov
adc
dec
les
mov
and
or
cmp
clc
test
dec
push
xor
jne
leave
call
call
sbb
adc
sbb
call
cmp
add
sar
mov
lea
or
mov
test
not
mov
sbb
cmp
cmp
and
pop
mov
xchg
add
fstp
out
mov
pop
xchg
ins
in
pop
sub
or
inc
ins
ficom
and
in
sete
push
test
inc
jne
pop
icebp
fcom
adc
dec
in
xchg
pop
pop
js
icebp
and
cmp
adc
mov
mov
adc
push
jns
xchg
enter
mov
les
mov
and
inc
mov
add
or
pop
add
hlt
int3
dec
cmc
(bad)
pusha
rcr
xlat
dec
rcl
popa
mov
fcomp
lea
je
retf
add
or
inc
cmp
fidivr
inc
xchg
mov
inc
xor
push
fst
out
je
or
sub
and
pop
and
stos
xabort
in
fimul
or
or
adc
cmc
test
jmp
out
dec
xlat
inc
movs
mov
jbe
and
push
jb
cmp
xor
cmp
cmp
inc
inc
cmp
sub
cmp
retf
pop
sti
inc
jb
add
adc
test
call
pop
and
dec
sar
mov
jp
sub
test
push
gs
cmp
adc
mov
arpl
mov
leave
loope
cmp
jb
and
mov
mov
and
mov
(bad)
sbb
inc
outs
mov
inc
movs
and
pop
in
aas
adc
inc
pop
sbb
cwde
es
cmp
adc
loope
sub
or
dec
mov
sub
jae
mov
mov
cmp
(bad)
xor
sbb
adc
xor
aad
les
xor
les
and
scas
(bad)
dec
sub
mov
jne
sbb
cmp
mov
xchg
add
adc
mov
ja
pop
mov
adc
fisub
and
add
mov
sbb
sub
inc
push
cdq
adc
(bad)
and
mov
mov
call
lea
xlat
inc
stc
je
mov
add
test
fisttp
lods
aad
iret
bound
loop
mov
or
jmp
push
push
add
xchg
adc
sar
loop
jmp
call
cld
rol
cmp
cld
xor
add
adc
mov
popa
jb
retf
jmp
jns
movs
fcmovne
and
sub
cmc
xchg
cmp
movups
jmp
aas
mov
test
and
xor
inc
and
cmp
pusha
adc
adc
jns
cmp
xor
jge
cmps
loopne
jmp
movs
int3
cs
inc
lock
cmp
imul
sbb
into
enter
dec
mov
mov
xchg
pop
in
das
enter
test
dec
test
call
ficom
xchg
fidiv
shl
or
aas
cmps
rcr
cmp
jbe
mov
popf
add
sbb
adc
sub
push
out
dec
pop
pop
pop
add
pop
mov
xchg
mov
sub
or
repz
popf
inc
mov
(bad)
mov
add
jge
and
enter
pushf
mov
push
lea
cdq
aas
nop
adc
jo
xchg
inc
and
mov
mov
inc
add
scas
fst
mov
add
movs
pop
int3
sub
push
dec
sub
es
mov
popa
adc
inc
ss
stc
outs
cmp
xor
add
cld
xor
hlt
or
and
dec
fcom
mov
mov
pop
dec
xchg
in
je
lock
dec
xchg
hlt
je
clc
pop
dec
xchg
cld
je
lea
mov
mov
js
cmc
cmp
inc
dec
pop
scas
mov
dec
and
adc
mov
(bad)
xor
push
movs
adc
lea
sar
test
and
or
(bad)
icebp
mov
and
ins
test
adc
test
popf
xor
hlt
or
sbb
add
out
sbb
out
or
movs
pop
mov
jne
cmp
ret
retf
pop
push
dec
mov
out
mov
jb
xchg
sbb
vmread
or
cwde
adc
and
xchg
adc
je
adc
dec
xchg
adc
pop
dec
xchg
or
pop
dec
cmp
lods
and
int3
or
clc
mov
mov
jp
adc
mov
test
mov
js
add
adc
and
adc
push
inc
and
pop
jo
inc
cdq
pop
mov
(bad)
sub
sub
sub
xor
and
mov
and
dec
iret
in
js
sub
outs
sbb
inc
add
shl
in
cmp
and
xchg
jns
repz
cdq
push
push
call
mov
adc
mov
or
outs
adc
lock
adc
mov
lods
shr
sub
mov
mov
add
shr
add
jle
push
in
mov
test
sbb
push
shl
adc
call
push
int3
or
in
mov
lods
jnp
lea
mov
enter
mov
(bad)
pop
(bad)
loop
rol
icebp
shl
sbb
push
fisttp
mov
adc
and
xchg
or
popa
sar
cmp
je
mov
inc
adc
pop
or
jle
push
pushf
(bad)
(bad)
sbb
pop
rcl
movs
pop
and
mov
aam
clc
jl
fcom
xor
cmp
jb
dec
pop
sar
je
test
push
adc
adc
mov
push
rcl
adc
xor
jl
add
fsub
or
push
push
xlat
or
jmp
mov
in
hlt
(bad)
dec
adc
clc
dec
or
push
add
(bad)
out
loopne
sbb
out
sbb
mov
mov
(bad)
cmps
div
mov
and
cmps
inc
pop
mov
mov
sbb
add
adc
xor
call
inc
mul
nop
lds
cmp
lds
sub
pop
push
and
out
lds
add
and
sub
ins
das
arpl
dec
push
cmps
cmp
add
add
cmc
jg
fisttp
rcr
add
fwait
repnz
adc
add
dec
jne
xor
inc
(bad)
sbb
cmp
sub
imul
push
push
dec
ins
mov
ja
mov
push
mov
push
std
add
and
sbb
mov
and
xchg
inc
xchg
or
sub
jl
mov
add
mov
mov
cmp
push
mov
test
in
mov
repz
add
sbb
mov
jmp
push
push
add
dec
xor
mov
mov
and
inc
push
pusha
test
or
cdq
sub
inc
cmp
call
(bad)
mov
or
mov
sti
mov
inc
adc
test
icebp
xchg
jnp
test
repnz
dec
push
sti
jmp
and
lods
adc
popa
xchg
pop
jle
add
cmp
jne
add
nop
addr16
adc
or
add
aaa
les
or
shr
and
add
or
clc
sbb
movs
cmc
cdq
add
or
mov
dec
lahf
ret
cdq
xor
jo
jle
pop
aaa
cmp
or
stc
mov
mov
cmp
wbinvd
mov
jle
nop
adc
xchg
or
test
cmp
adc
lea
inc
(bad)
cs
add
cmp
or
mov
adc
xchg
add
loope
mov
fwait
stc
dec
and
xor
(bad)
or
lods
fild
jmp
and
and
mov
adc
mov
jo
adc
fsub
xor
pop
scas
mov
dec
out
pop
xor
xor
xor
jmp
jecxz
clc
cmp
rcr
inc
dec
mov
add
push
push
inc
xor
mov
mov
sub
fsubr
dec
dec
jecxz
and
mov
xor
and
push
xor
arpl
dec
les
rcl
inc
ret
jge
jmp
pop
jl
(bad)
popf
mov
or
pop
mov
pop
dec
mov
lock
fistp
imul
inc
adc
pop
mov
jg
je
(bad)
lods
fdivr
add
xor
cmp
daa
adc
inc
sub
push
push
das
pop
adc
sbb
stos
xor
push
sti
enter
in
xchg
sti
in
je
movs
jg
mov
push
lahf
or
(bad)
jle
dec
dec
(bad)
mov
sub
bound
test
xchg
sub
arpl
jge
out
sti
call
mov
aam
inc
jl
jmp
push
inc
cwde
test
aaa
sahf
sahf
in
add
push
and
sub
pusha
cmp
or
dec
mov
and
rol
je
(bad)
cld
inc
and
sbb
mov
sub
push
in
adc
cmps
mov
dec
test
or
mov
mov
into
push
xor
js
mov
lock
mov
call
add
sbb
pop
(bad)
push
jmp
into
mov
ret
mov
cmp
dec
pop
pavgb
jg
hlt
lea
pop
add
cmps
rcl
adc
daa
inc
call
mov
and
dec
pop
mov
loop
pushf
int3
push
add
xchg
shr
lock
cmp
pop
aaa
nop
cmp
dec
adc
xchg
add
or
push
sub
(bad)
lea
cmps
jmp
push
jns
test
cmp
stos
repnz
out
cwde
mov
mov
cwde
jno
jb
in
pop
dec
push
out
fcmovnb
jne
or
pop
stos
add
nop
stos
dec
mov
pop
xchg
pop
push
xchg
mov
push
repnz
dec
mov
inc
loopne
jp
add
pop
shufps
sbb
jae
pop
das
dec
inc
xor
sti
add
repz
push
push
scas
dec
dec
out
adc
stos
cli
(bad)
call
mov
cmp
mov
xchg
and
jl
cmp
jge
mov
mov
add
dec
xor
xchg
jae
xor
cmp
out
xor
mov
push
popf
das
and
psubb
push
into
xchg
cmp
shl
test
jmp
push
mov
mov
adc
jle
std
dec
jo
inc
addr16
cs
imul
inc
(bad)
lea
inc
ins
or
xor
cmp
sub
mov
xor
inc
cmp
inc
add
and
sbb
hlt
pop
stos
bswap
inc
and
mov
adc
jl
add
inc
xor
or
mov
jno
nop
cmp
inc
call
dec
push
fs
or
ds
sub
xor
mov
jne
inc
and
icebp
xchg
pop
or
mov
push
and
adc
mov
ins
push
sub
cld
inc
retf
adc
xor
sub
adc
pop
dec
mov
ins
sbb
lock
push
cmp
sub
test
cmp
xor
jne
lds
jp
jbe
and
and
xor
mov
xchg
push
fdivr
xor
ror
test
and
add
inc
test
sub
mov
push
mov
cmps
add
inc
pop
nop
fs
data16
pusha
jecxz
xor
push
jo
xchg
pop
xor
dec
add
inc
mov
or
jbe
or
jmp
aam
leave
or
adc
mov
scas
les
mov
jmp
outs
sbb
mov
and
mov
ins
out
push
mov
sub
push
popf
call
add
mov
sbb
dec
push
mov
and
mov
jp
and
lea
in
dec
sub
and
and
(bad)
lds
(bad)
xor
int
dec
xor
mov
dec
(bad)
cmp
movs
mov
mov
mov
repnz
inc
mov
fist
inc
cmp
inc
fld
dec
bound
cmps
mov
lods
mov
sbb
adc
jg
xchg
mov
pop
push
xor
jb
jnp
or
ins
jns
les
mov
scas
std
adc
xor
xchg
or
out
mov
mov
aaa
dec
shl
ret
ss
mov
aam
or
call
inc
ret
icebp
(bad)
inc
dec
push
(bad)
loope
inc
or
sbb
xor
xchg
cmp
pop
mov
fs
and
push
or
mov
inc
stos
adc
mov
push
cmp
mov
fstp
pop
fwait
es
push
mov
call
or
out
lock
xchg
xchg
adc
lods
dec
outs
mov
mov
fcom
popf
je
mov
sub
(bad)
xor
inc
retf
ror
xor
xlat
xor
and
repnz
pop
pop
in
test
cdq
push
bound
mov
or
popf
mov
jno
imul
push
jecxz
dec
or
push
push
mov
jecxz
in
adc
mov
push
mul
gs
pop
lods
dec
cwde
lods
mov
fcomp
mov
retf
test
stos
xor
mov
sub
sti
sbb
and
test
or
adc
(bad)
or
mov
lock
mov
adc
adc
scas
cmp
or
movs
sbb
(bad)
jg
sub
or
fs
lds
adc
xchg
dec
push
sub
test
xchg
pop
int
data16
jmp
les
loop
leave
sbb
push
dec
(bad)
std
jnp
and
mov
enter
ret
xor
pop
push
mov
in
inc
retf
pop
push
jmp
push
nop
pop
jae
mov
add
xlat
add
mov
cmp
popa
je
jp
js
mov
push
(bad)
out
mov
pop
or
xor
push
std
mov
ss
and
mov
mov
jmp
lods
call
jmp
aaa
jle
iret
in
(bad)
jmp
jecxz
in
lahf
xor
jmp
mov
call
add
jne
and
rol
sub
jne
jle
(bad)
popw
or
add
sbb
sbb
add
adc
cmp
mov
add
ja
or
or
cli
shl
outs
cwde
xor
adc
xor
sahf
or
or
sbb
pop
inc
xchg
adc
sub
dec
or
(bad)
push
mov
stc
rcr
inc
in
ins
and
jl
and
daa
(bad)
fs
add
lea
inc
(bad)
pop
je
xor
inc
mov
jo
pop
mov
outs
arpl
cmp
(bad)
jp
jbe
jmp
mov
cmp
add
inc
cs
mov
xor
outs
inc
stc
lods
int
ins
cmps
fld
dec
mov
idiv
mov
nop
adc
call
cmp
sub
ror
mov
(bad)
repz
imul
pop
cld
pop
retf
push
push
sbb
imul
jb
(bad)
sub
lea
lds
push
je
and
cmp
hlt
dec
adc
mov
add
jecxz
jb
adc
mov
lea
xchg
sub
sar
or
xor
(bad)
push
push
mov
jno
add
fld
loope
dec
lea
sub
push
test
movs
mov
or
sub
push
fdiv
and
std
jne
xchg
call
pushf
mov
cmp
out
int
push
imul
xlat
cmp
dec
mul
and
pop
jno
push
ja
jge
and
push
or
jmp
and
sbb
iret
cld
stos
test
mov
lock
shl
scas
cmp
retf
je
xlat
mov
or
mov
stos
xor
inc
adc
xchg
ins
in
cmc
scas
and
sbb
cs
popa
fs
pusha
adc
or
or
loope
or
(bad)
sti
stos
stos
sub
sub
pop
sub
into
mov
dec
lock
push
jne
lea
test
or
out
jecxz
sbb
popa
push
lea
repnz
or
dec
inc
pop
cmp
inc
ror
mov
push
pop
and
mov
xor
movzx
sbb
ja
sub
inc
and
xchg
push
or
retf
mov
jbe
xor
(bad)
cmp
sub
push
clc
pop
dec
sub
add
mov
les
imul
scas
in
call
lods
jp
and
mov
addr16
repz
dec
push
sbb
and
cmp
and
xchg
ja
stc
and
push
jmp
push
pushf
or
aas
mov
aad
jle
lahf
stos
mov
mov
push
or
xchg
inc
push
lea
repnz
add
cmp
ja
movs
and
xlat
push
shr
or
or
inc
loopne
jg
jmp
(bad)
push
inc
cmp
iret
jb
jmp
or
repnz
clc
mov
jo
jae
daa
jg
(bad)
cmp
ja
xchg
or
sbb
js
test
inc
daa
cmp
pop
call
and
mov
sub
push
push
push
loope
jl
add
mov
pushf
sub
ret
and
out
les
mov
into
adc
mov
cmp
push
adc
cmp
inc
xchg
jne
mov
and
cld
mov
and
movs
sbb
sbb
cs
jg
in
mov
icebp
cld
jp
scas
jo
call
xchg
daa
test
push
mov
in
and
mov
cmp
push
(bad)
jmp
ror
xor
or
jb
sub
fsub
jmp
mov
push
xchg
mov
cmc
popa
jl
sub
mov
push
pushf
mov
mov
lahf
jae
cmp
(bad)
imul
xor
out
cmps
xchg
adc
push
sub
or
pop
sub
test
mov
imul
add
cwde
pushf
jmp
sub
int
ds
jecxz
nop
xor
mov
inc
cmp
jno
jbe
sub
jo
cs
add
jne
xchg
mov
lods
and
sub
imul
mov
push
mov
or
repnz
mov
xchg
pop
mov
hlt
xor
pop
dec
jne
xor
push
mov
push
xor
rol
add
or
jbe
neg
xchg
jb
icebp
mov
js
mov
or
inc
dec
jne
mov
add
pop
lods
cdq
push
or
jmp
stos
inc
jnp
jmp
cmp
sub
push
sub
int
adc
sub
or
or
into
or
les
std
push
movs
cmp
mov
sar
(bad)
sub
mov
add
rep
(bad)
mov
and
adc
sbb
bound
dec
pushf
fdivr
mov
cmp
js
mov
or
adc
call
push
test
cmp
pop
xchg
add
or
and
(bad)
or
in
or
add
dec
inc
or
or
adc
das
inc
jmp
movs
sbb
or
mov
jmp
mov
in
les
enter
jmp
inc
mov
adc
into
ds
not
(bad)
dec
mov
in
and
cmp
push
leave
sub
inc
loopne
imul
and
cwde
scas
push
push
call
mov
lods
(bad)
and
xor
test
xchg
push
test
cmp
xchg
or
and
push
fs
add
shl
bound
adc
jne
sbb
jne
aam
add
dec
aas
popf
or
push
sbb
fwait
dec
sub
xchg
mov
sbb
pop
push
adc
push
and
mov
les
dec
adc
xlat
push
push
add
jl
xchg
sbb
in
jae
mov
sbb
adc
enter
mov
adc
shr
movs
mov
inc
cmp
sbb
cwde
xchg
nop
mov
aam
mov
enter
outs
pop
dec
test
movs
mov
fstp
ds
inc
push
add
les
pop
mov
add
adc
pop
xor
div
sub
dec
cmp
jge
add
sbb
jmp
xchg
jmp
mov
pop
mov
dec
call
adc
sbb
dec
(bad)
out
xchg
or
les
ins
retf
jmp
daa
jmp
into
xor
mov
out
jb
lock
or
call
psllq
cmp
pusha
push
push
and
sbb
jae
pop
pop
sub
sub
sbb
mov
int
dec
cmc
js
mov
and
inc
nop
aam
lods
or
mov
mov
jb
cs
push
addr16
add
adc
out
pop
mov
and
dec
push
daa
lods
inc
adc
mov
cmp
jmp
mov
sbb
std
aaa
pushw
push
mov
call
ret
inc
(bad)
jmp
mov
jmp
stc
adc
hlt
dec
or
or
mov
push
add
mov
sub
or
or
and
sub
ret
push
or
fcomp
aas
cmp
add
(bad)
loope
rcr
xchg
push
xor
retf
inc
xor
div
dec
cmp
jg
xor
shr
inc
cdq
sbb
mov
jmp
add
or
jne
div
shl
jbe
enter
ret
pop
jb
cmp
push
ja
push
wrmsr
pop
jbe
dec
sub
sbb
pop
adc
fs
ficomp
leave
cmps
add
fld
test
mov
mov
add
js
mov
mov
repnz
out
push
mov
pop
retf
pop
pop
push
push
ret
fsub
je
push
adc
mov
xchg
mov
les
lods
push
xor
xchg
mov
mov
mov
push
push
add
jg
out
mov
or
mov
popf
cmps
pop
lea
cli
mov
pop
mov
lock
xchg
and
nop
movs
enter
mov
std
sbb
cmp
shr
js
pop
pop
out
cmp
sbb
loopne
pop
nop
sbb
jae
lock
adc
or
mov
jbe
push
jg
fwait
mov
mov
pop
daa
sar
mov
ret
add
jne
sbb
mov
test
fsub
fsub
les
xchg
out
and
or
mov
sub
daa
fld
cmp
rcl
mov
std
sub
lea
mov
push
pop
nop
repz
rol
shl
sbb
and
mov
enter
lock
jmp
rcr
iret
pop
jecxz
clc
rol
sub
or
add
sub
add
das
sub
int
std
mov
cld
adc
push
xchg
push
pop
neg
mov
mov
movs
call
mov
call
(bad)
shr
adc
push
mov
adc
mov
push
cmp
push
pop
aam
xchg
test
into
or
loopne
cmp
push
inc
adc
pop
adc
adc
and
mov
cmp
ss
cmp
fstp
adc
xor
test
daa
je
and
inc
imul
js
pop
or
mov
adc
cwde
aas
dec
ret
add
out
inc
inc
pop
fimul
xor
dec
fwait
into
test
and
mov
mov
dec
addr16
sbb
dec
and
iret
dec
sub
dec
mov
xchg
fstp
or
not
xchg
pushf
pop
xor
push
xchg
or
sbb
push
xlat
or
jmp
adc
inc
lahf
jmp
cmp
daa
outs
ror
fcmovne
cmp
inc
mov
test
push
inc
imul
and
(bad)
ss
push
inc
fadd
mov
mov
pop
(bad)
movs
cmp
adc
pop
mov
mov
sbb
(bad)
fnstcw
cmp
popf
jns
(bad)
jg
je
dec
retf
js
iret
mov
(bad)
adc
les
int
xor
inc
retf
and
sub
pop
iret
and
std
adc
je
ins
xchg
sar
add
add
pop
xchg
jo
sub
ds
in
fadd
push
cmp
and
(bad)
mov
pop
inc
xchg
sub
or
mov
daa
test
int
dec
fstp
fstp
(bad)
dec
hlt
sar
mov
jo
mov
lods
mov
adc
arpl
cmps
push
push
cmp
sub
xor
jle
mov
mov
ror
out
or
test
mov
jbe
sahf
call
(bad)
xchg
sbb
push
adc
mov
out
fdiv
call
sub
lea
xor
mov
or
fcmovne
ss
adc
daa
push
jbe
js
mov
xor
cmp
xor
cwde
xor
jmp
nop
adc
mov
arpl
js
stos
retf
jbe
leave
pushf
sub
sub
xor
pusha
inc
mov
test
add
pop
(bad)
mov
adc
xor
and
dec
jmp
shr
adc
test
and
adc
push
cmp
dec
add
dec
shl
dec
mov
out
popf
and
icebp
lock
or
or
push
sbb
sbb
push
movs
out
pushf
sbb
repz
push
mov
rcr
(bad)
fdivr
adc
test
adc
inc
repz
and
cmp
je
in
pop
or
pop
inc
(bad)
sti
push
push
mov
cmp
daa
dec
je
inc
pop
in
imul
repnz
sub
sub
sti
and
sub
dec
sbb
add
or
add
outs
push
xchg
inc
ret
jnp
mov
loope
es
and
push
daa
loop
xor
sub
or
add
adc
loope
int3
sbb
pop
mov
int3
lds
pop
or
loop
add
sbb
and
xchg
mov
not
fist
clc
ss
push
and
gs
jnp
cmp
in
les
out
xchg
sub
xchg
or
mov
sbb
add
xchg
pop
sbb
sbb
pop
or
mov
ds
and
or
nop
push
call
(bad)
push
cmc
xchg
or
cmp
push
cmps
push
nop
adc
cmps
jne
jmp
cli
lea
xor
test
cs
inc
dec
stos
jo
jl
aad
je
jmp
fst
sub
cwde
pop
fistp
mov
mov
add
xchg
fisubr
adc
test
or
cmp
pop
data16
arpl
cmps
je
push
and
enter
and
mov
xor
add
jnp
daa
push
mov
add
push
out
and
das
jl
and
and
inc
jmp
in
int3
call
in
sbb
push
adc
out
dec
xchg
dec
out
adc
iret
mov
push
mov
push
sub
adc
mov
sbb
in
leave
mov
inc
shr
loope
sub
add
sbb
push
mov
(bad)
dec
xor
loope
push
mov
dec
(bad)
dec
push
inc
pop
push
loopne
rcl
leave
jnp
xchg
out
inc
mov
outs
loop
les
jmp
cs
cld
fsub
je
test
cmp
test
sbb
jmp
sbb
adc
and
fiadd
mov
setle
push
dec
adc
lods
ficom
inc
adc
inc
add
pop
out
(bad)
mov
rcl
cli
fsubr
lds
xchg
fldl2e
les
mov
mov
mov
adc
pop
loop
push
dec
blcfill
mov
adc
movs
inc
sub
add
mov
leave
pop
shl
or
pop
push
pop
add
jle
pop
shl
mov
or
adc
and
adc
cmp
sar
jmp
add
ss
pop
sbb
mov
arpl
rcr
loopne
mov
sub
inc
jmp
adc
jg
jmp
jb
mov
not
cld
dec
pusha
daa
cmp
jbe
push
lods
xor
sub
cmp
add
and
sub
loope
jmp
test
(bad)
mov
pop
xchg
inc
sub
loope
je
dec
mov
xor
ror
add
xor
outs
xor
pop
pop
mov
cmp
mov
cmp
nop
adc
ins
add
and
ror
jle
add
xor
xor
pusha
dec
add
imul
je
or
cld
jne
call
test
jmp
jge
sbb
hlt
and
fs
sub
mov
and
adc
cmp
std
add
(bad)
jmp
mov
mov
aas
cmp
jne
and
push
dec
mov
or
ss
stos
mov
aaa
jge
xor
add
and
and
shr
mov
push
jle
push
push
push
mov
adc
pop
outs
movs
push
cmp
jb
cmp
or
mov
inc
icebp
clc
and
or
mov
inc
pop
add
pop
push
push
bound
mov
repz
test
mov
inc
(bad)
(bad)
(bad)
xor
or
loopne
outs
fcomp
int
enter
jb
jmp
pushf
mov
inc
cmp
or
popf
inc
mov
mov
cmp
jge
cmp
push
mov
xchg
stc
aad
cmp
je
cmp
inc
daa
andnps
add
dec
sub
daa
mov
sub
push
ja
and
icebp
aad
fsub
mov
xchg
add
mov
cmp
fs
shl
hlt
pusha
lds
(bad)
xor
sbb
test
or
rcl
inc
pop
loop
push
sub
push
cmp
push
mov
sub
dec
jle
stos
or
cdq
pop
es
leave
mov
test
adc
pop
stos
xor
add
sub
out
mov
adc
xor
test
dec
jge
add
sbb
mov
daa
add
cmp
mov
jmp
push
fcomp
clc
mov
mov
push
or
sub
push
mov
push
jne
out
int
and
jmp
dec
fisubr
or
sub
fisubr
lods
pop
movs
mov
push
std
mov
nop
xchg
dec
xor
push
not
inc
adc
fmul
retf
add
xchg
dec
aam
retf
and
cdq
rol
pop
fbld
add
pmaddwd
loope
mov
mov
inc
pop
(bad)
cli
add
or
mov
ret
mov
or
sub
and
test
lods
cmc
pop
test
lods
or
aaa
dec
hlt
jmp
stos
pushf
fisttp
in
lahf
push
shrd
sti
sbb
mov
pusha
push
pop
mov
or
and
pop
(bad)
inc
sbb
cmp
aaa
jmp
fs
dec
and
adc
or
int
sahf
mov
xor
test
or
sub
sar
mov
or
cli
pop
(bad)
push
fmul
(bad)
jne
ret
retf
(bad)
push
adc
and
fidiv
inc
inc
add
push
pcmpeqd
imul
lods
loop
jle
dec
ja
inc
fadd
enter
mov
adc
jb
addr16
push
loop
mov
aaa
add
shl
dec
sbb
adc
pusha
xor
int3
adc
dec
sub
push
inc
add
or
test
out
ficom
cmc
adc
or
jmp
fnstenv
ror
inc
push
cli
mov
jmp
lock
mov
jg
lock
shr
mov
int3
add
cs
hlt
in
xlat
scas
sbb
(bad)
(bad)
loop
shl
out
push
adc
or
xchg
add
ins
ins
jns
cmp
cs
(bad)
cmp
rcl
jmp
push
loopne
push
ficom
test
inc
pop
aaa
cs
clc
xchg
or
(bad)
rcl
scas
call
or
ss
repz
push
leave
shr
mov
ror
add
and
and
mov
dec
std
cmp
dec
push
pushf
adc
shr
lahf
scas
loopne
and
add
or
rcl
mov
sbb
cmp
mov
mov
add
aaa
fucomp
dec
or
pop
mov
fiadd
cmp
sbb
loopne
fsubr
popa
jmp
push
or
ret
mov
(bad)
pop
in
and
and
mov
xchg
rol
and
xor
test
cs
push
inc
dec
and
add
pop
push
push
cs
and
inc
jmp
jo
dec
mov
xor
sub
jmp
fmul
inc
xor
movs
mov
arpl
push
pminub
(bad)
and
movs
fcomp
(bad)
es
test
and
popa
mov
xchg
inc
test
push
or
inc
sub
fcmovb
stos
je
sbb
mov
push
test
add
add
xchg
ss
cwde
int3
std
jne
mov
jl
sub
push
add
sbb
in
je
push
or
jo
and
not
mov
fild
xchg
xchg
jle
inc
cmps
pop
push
cmps
adc
mov
sahf
in
jns
sbb
cmp
pop
jae
pushf
xchg
jne
pop
cmp
push
stos
(bad)
jmp
int3
test
aas
and
pop
and
lods
fstp
mov
out
imul
add
fistp
jmp
cmp
add
or
dec
dec
and
xor
stc
and
mov
icebp
jmp
pop
and
or
test
or
sbb
pop
dec
ins
jbe
or
ins
dec
jle
pop
js
mov
dec
inc
shl
cmp
and
lahf
push
mov
pop
ficomp
push
scas
and
pop
mov
push
into
(bad)
(bad)
xor
add
mov
push
inc
add
xor
lods
mov
int3
pop
or
cmp
retf
cmc
pop
cmp
pop
xchg
dec
popf
push
xchg
adc
mov
jno
and
cs
inc
test
xchg
je
jp
test
je
imul
loopne
push
loop
cld
pop
(bad)
lods
std
adc
popa
stos
in
sub
jne
mov
repnz
xchg
sub
mov
test
add
shl
inc
mov
or
fist
mov
add
mov
and
inc
fist
in
arpl
inc
sub
mov
adc
push
pusha
dec
jb
or
ja
mov
lock
mov
pop
inc
or
push
mov
dec
ds
jle
data16
jne
mov
jmp
enter
add
cwde
adc
mov
xchg
push
inc
mov
xor
push
test
(bad)
sub
in
pop
mov
mov
cmp
push
jne
mov
jmp
mov
jmp
xchg
out
je
sub
icebp
rol
enter
add
cwde
rol
adc
cwde
enter
adc
das
mov
addr16
push
add
and
inc
inc
adc
cmp
mov
fs
sbb
sub
xchg
int
lods
jbe
leave
push
(bad)
lahf
cwde
dec
test
cmp
rol
out
xor
scas
int3
cwde
dec
pop
sbb
xchg
ret
sbb
dec
or
scas
inc
adc
arpl
jno
das
push
das
xchg
xchg
pop
hlt
cmp
jb
jb
or
pop
sti
dec
or
pop
sub
push
das
call
pop
or
push
sbb
ret
ret
aad
add
mov
sub
or
clc
jle
ins
push
xchg
jmp
mov
lods
xchg
jg
add
shr
mul
xchg
add
jp
push
xchg
jl
mov
or
fsubr
mov
jne
lock
adc
in
mov
sub
sub
adc
cld
cmp
cld
push
xor
push
or
call
mov
pop
push
outs
lds
in
push
xchg
sub
in
out
xlat
sbb
dec
sub
push
es
xchg
push
jl
sub
cmp
pop
sub
adc
mov
jp
pushf
mov
sub
lea
adc
lock
mov
mov
out
push
pushf
sub
adc
daa
jne
cmps
mov
or
cmps
sar
or
sub
popf
inc
add
imul
push
pop
pop
pop
in
(bad)
lock
stc
fwait
fs
clc
cmps
and
jae
data16
lahf
sub
jne
xchg
add
jne
scas
(bad)
sub
rcl
push
fincstp
test
adc
push
push
jmp
cmp
cmc
mov
adc
mov
loopne
pop
das
jmp
push
xor
adc
call
sbb
or
ins
aaa
sub
jle
gs
mov
retf
xchg
dec
jae
loope
or
xor
jmp
dec
xchg
pop
jle
fstp
jp
imul
jle
pop
adc
mov
mov
or
int
not
cmp
cmp
add
push
or
or
movs
lahf
inc
in
and
xor
and
push
adc
sub
xchg
push
mov
cmp
sbb
cmc
mov
mov
inc
and
push
xchg
cmps
js
xchg
xchg
or
push
in
and
or
sub
mov
sbb
call
rol
cmp
wrmsr
lea
push
std
cmps
call
test
mov
add
mov
test
jnp
outs
jle
leave
cmp
sub
les
or
sti
xchg
sub
es
or
add
in
pusha
leave
add
je
mov
add
and
out
dec
dec
or
sub
and
loopne
add
in
sbb
jmp
pop
hlt
(bad)
and
je
lea
xor
add
imul
mov
add
pop
aaa
fadd
(bad)
dec
and
mov
jmp
inc
mov
or
jb
mov
cdq
cmp
push
repz
repnz
jmp
out
rcl
das
xchg
arpl
jns
jne
cli
call
div
inc
in
add
inc
push
adc
and
push
mov
jo
mov
push
out
aad
rcl
mov
(bad)
or
mov
je
sbb
nop
add
jp
sbb
clc
cs
pop
mov
inc
cli
pop
dec
pop
dec
or
neg
cld
cmps
adc
mov
push
stc
xlat
inc
fs
and
sub
jmp
not
dec
add
shl
sub
ins
and
cmp
pusha
mov
push
pop
dec
mov
retf
adc
cld
lock
in
lea
cli
push
jbe
inc
into
enter
push
call
das
jp
into
ins
gs
push
or
(bad)
ds
adc
mov
outs
add
add
adc
or
(bad)
mov
lods
xchg
popf
popf
or
je
in
cmp
xchg
in
inc
jo
shl
in
mov
les
stc
jb
and
pop
dec
xchg
or
repnz
push
jmp
adc
sub
fs
adc
jmp
aad
pop
or
les
push
and
push
jg
or
daa
sub
and
outs
bound
outs
push
and
and
aaa
xor
pop
jno
inc
ja
fadd
cmp
adc
push
mov
out
jmp
mov
sti
jae
dec
out
xchg
and
adc
lock
mov
int3
dec
jne
repz
mov
inc
inc
inc
mov
neg
dec
or
mov
ror
and
push
mov
or
and
pop
jmp
mov
jo
std
js
inc
js
push
push
lahf
in
adc
jmp
icebp
in
fs
ficom
fldln2
inc
outs
popa
cmc
mov
jmp
nop
fstp
cwde
adc
sub
dec
fnstcw
push
mov
(bad)
icebp
or
or
inc
adc
fdivr
(bad)
ds
mov
sbb
(bad)
pop
pop
test
adc
mov
scas
mov
mov
dec
push
(bad)
pop
fadd
ret
dec
ja
jle
inc
add
push
and
or
jne
inc
call
sub
(bad)
enter
lock
add
ja
add
or
push
mov
xor
stc
aam
dec
mov
mov
add
dec
xchg
add
jmp
movs
or
push
push
mov
in
or
add
jle
push
and
das
mov
not
or
mov
xor
ret
stc
cld
add
or
shr
sbb
aam
inc
in
mov
fs
(bad)
mul
mov
dec
and
and
add
cmp
jge
mov
stos
push
mov
pop
mov
inc
adc
inc
jmp
jne
mov
in
out
dec
inc
pop
nop
add
push
sahf
push
loopne
jmp
mov
(bad)
repnz
sub
xchg
sbb
xchg
xchg
stos
adc
push
rcl
mov
and
test
and
dec
dec
call
sub
sbb
test
jl
es
lock
pop
les
mov
aaa
mov
push
xchg
jns
sub
aam
push
mov
inc
shl
movs
xor
dec
or
push
adc
dec
call
add
cmp
inc
and
adc
cdq
stc
je
inc
popf
inc
sub
lea
mov
push
rol
daa
push
imul
jecxz
adc
and
dec
cmp
add
hlt
xchg
and
cmp
mov
xchg
sbb
lock
in
sbb
adc
pop
push
mov
jge
cld
cld
pushf
cli
push
(bad)
push
mov
xor
cmp
repnz
mov
hlt
(bad)
sahf
add
sar
retf
aad
sbb
loopne
sti
into
data16
repnz
dec
bound
es
pop
fxch
xchg
daa
push
jmp
push
aad
repnz
push
xor
int3
add
jne
mov
(bad)
into
icebp
mov
pusha
dec
sbb
mov
cs
dec
(bad)
pop
and
rcl
retf
scas
iret
ret
cmp
retf
mov
cmp
sbb
sar
dec
mov
pusha
sub
cmp
add
or
push
adc
bound
jno
pop
sub
lods
jbe
hlt
sub
jno
jns
sbb
test
sahf
popa
fadd
cli
xchg
hlt
jge
sbb
cmp
cmp
outs
out
(bad)
and
nop
les
lods
sti
inc
stc
out
enter
clc
cmp
enter
cmc
sbb
xor
jo
mov
dec
dec
sbb
retf
(bad)
adc
clc
sti
test
clc
ins
(bad)
cld
das
adc
mov
cld
sub
cld
ret
iret
int3
mov
cld
icebp
mov
jnp
adc
mov
mov
imul
dec
jns
xchg
neg
jnp
pop
mov
stc
fsub
jnp
(bad)
and
aad
sar
and
jle
xchg
fcomp
test
dec
xor
inc
movs
cli
pop
ror
cli
(bad)
cmp
or
clc
cmp
jns
sub
cmp
lock
(bad)
jmp
in
cmp
fisubr
repz
inc
and
lock
inc
or
mov
out
retf
push
in
lahf
shr
pop
movs
pop
cmp
cs
int3
arpl
fwait
inc
add
shl
inc
add
sub
sbb
and
or
mov
iret
popa
mov
sub
mov
add
mov
cmp
popf
mov
shl
shl
retf
mov
int
icebp
xchg
cmp
adc
or
jl
sbb
xor
push
jb
sub
and
add
lea
test
adc
mov
mov
pop
mov
mov
inc
xchg
jecxz
je
es
jmp
pop
mov
mov
xor
dec
retf
ja
inc
jl
stc
or
cld
pop
adc
inc
inc
into
mov
int
repz
sti
ds
jg
push
imul
add
sbb
daa
stos
adc
out
sbb
out
adc
lock
and
or
cmp
ficom
std
aam
pop
add
leave
and
in
stc
aam
jns
xchg
pop
lods
mov
sub
pop
mov
sbb
dec
xor
das
or
mov
inc
and
xor
imul
adc
cmp
pop
or
scas
aam
jmp
lea
inc
outs
mov
rol
cmp
jmp
mov
test
sub
rep
sub
inc
mov
std
push
popf
sub
les
out
xchg
cdq
adc
dec
add
xchg
pop
ret
aam
adc
cmps
les
stos
into
in
dec
cmc
mov
mov
inc
adc
cmp
xchg
sub
xchg
dec
cmp
mov
inc
push
fstp
ja
or
mov
div
xchg
loopne
add
jb
daa
test
pop
add
add
or
xor
and
shl
sub
or
mov
jp
ror
jmp
xchg
popf
mov
and
jnp
icebp
mov
out
push
int3
imul
add
jno
into
sub
dec
mov
mov
push
push
cmc
addr16
jg
int3
xchg
pusha
stos
(bad)
or
sub
cmp
lods
les
sub
sar
jb
pusha
xor
(bad)
adc
cmps
retf
loopne
leave
(bad)
(bad)
jle
in
dec
popf
dec
jge
push
nop
pop
sbb
inc
or
jg
push
add
es
xor
sub
sub
adc
and
add
das
xor
test
mov
lods
loopne
jle
cmp
pop
div
shl
lea
inc
aas
or
xor
cmp
les
sub
mov
ja
jl
pop
daa
or
retf
xchg
push
xor
in
hlt
cli
mov
cmps
out
push
lods
pop
jne
sbb
pop
or
mov
xchg
and
pop
(bad)
push
cli
ret
xchg
pop
icebp
in
test
cwde
sub
cmp
inc
push
(bad)
sbb
cmp
jl
jle
cmps
mov
out
push
arpl
push
mov
cmp
push
aas
mov
sub
mov
xlat
and
push
sub
push
xchg
daa
test
test
ret
inc
hlt
push
or
add
jecxz
leave
leave
hlt
mov
or
gs
sub
lahf
push
hlt
mov
test
cli
das
lds
push
fidivr
and
and
mov
js
adc
adc
sbb
cmc
arpl
pop
jg
cmp
cmc
lock
mov
mov
stc
dec
push
jmp
retf
add
cld
push
sahf
adc
nop
mov
jns
or
cmp
add
sbb
inc
push
cli
cwde
pushf
(bad)
imul
adc
mov
or
adc
mov
sub
setno
sahf
adc
or
sub
sub
xor
xor
sbb
inc
cmp
cmp
mov
adc
inc
or
dec
cmp
push
mov
and
enter
jb
cmp
je
inc
js
jl
bound
xchg
test
mov
mov
cwde
les
loop
push
in
leave
pop
sbb
enter
enter
dec
mov
sar
mov
fcomp
loopne
in
mov
aam
lock
hlt
mov
jno
push
jo
add
add
push
or
inc
mov
or
inc
adc
or
adc
loop
sbb
and
and
xor
xor
adc
loop
sbb
inc
mov
pop
mov
dec
les
push
xchg
pop
loop
sbb
pusha
inc
sbb
pop
int
pcmpeqb
push
cmp
jl
aad
inc
pushf
pop
adc
or
mov
adc
mov
pop
cmp
movs
in
imul
jo
or
lea
adc
lods
les
or
cmp
and
mov
icebp
cmp
aam
inc
inc
fmul
les
loopne
ret
(bad)
in
lea
mov
push
cmps
add
xor
or
add
stos
add
jmp
dec
push
jo
shl
sbb
mov
jae
mov
and
dec
jmp
pop
jmp
push
loope
jb
lea
cld
leave
and
pop
mov
xchg
push
add
push
cld
jne
mov
push
std
sbb
call
aaa
and
inc
es
and
dec
adc
js
or
inc
jecxz
jmp
cs
rcl
inc
and
adc
cs
xchg
xor
cld
jmp
push
mov
mov
retf
fld
xor
pop
out
mov
outs
push
sbb
or
ret
jge
inc
jmp
inc
or
icebp
lea
and
(bad)
call
jecxz
loop
adc
sti
jbe
jbe
popa
add
jnp
inc
add
cmp
pop
and
movs
fmul
test
lock
data16
xchg
mov
mov
mov
or
out
idiv
sub
out
imul
jne
push
cld
enter
ja
jae
and
sub
pusha
xor
xchg
or
fmul
push
push
mov
test
enter
add
push
push
push
push
stos
dec
mov
adc
xchg
mov
adc
mov
xor
xchg
retf
je
mov
jmp
xchg
cwde
ret
push
jp
inc
lea
loope
inc
or
jmp
dec
fmul
jno
movs
xor
push
push
xchg
fisubr
pop
inc
sbb
test
xchg
das
xchg
add
test
je
mov
sub
xor
shr
or
movs
das
idiv
les
add
mul
xchg
dec
test
call
das
mov
and
movs
inc
xchg
test
jle
dec
fimul
in
mov
push
aaa
lahf
pop
mov
fs
stc
sbb
add
mov
xchg
pop
xor
icebp
cmp
xor
imul
sub
fadd
inc
and
(bad)
loopne
adc
das
or
adc
daa
xor
cmp
je
push
mov
je
inc
push
fs
(bad)
scas
cdq
and
or
test
jne
or
dec
leave
xlat
loop
int3
out
(bad)
ja
push
xor
push
pop
rcr
in
mov
scas
jg
sbb
dec
push
sti
sub
cmc
les
call
loop
movs
mov
js
push
jmp
or
add
adc
test
or
adc
dec
mov
retf
dec
sub
sbb
js
or
and
mov
or
mov
cld
fild
iret
sar
mov
pushf
push
iret
and
add
or
or
add
jb
loopne
add
mov
pushf
inc
je
ss
jle
js
jg
and
mov
in
push
clc
inc
call
or
lock
daa
pop
add
lods
jno
rol
hlt
jmp
add
jg
jl
out
jae
push
(bad)
ins
cmc
and
sbb
push
and
cdq
mov
xor
push
jne
dec
pop
push
mov
xchg
dec
ins
xlat
in
sub
stc
mov
retf
mov
or
inc
and
rol
mov
push
sar
pop
sti
jmp
adc
add
dec
outs
or
add
push
sub
jbe
out
xchg
lea
mov
clc
loop
sbb
jmp
push
rol
lock
sub
jg
and
dec
dec
and
fadd
arpl
xchg
or
add
mov
pop
mov
sub
data16
nop
mov
push
push
cmps
inc
adc
lods
jnp
and
xchg
leave
sahf
dec
jg
mov
mov
sar
add
aas
int3
push
jmp
dec
cld
mov
adc
and
ret
arpl
push
je
das
mov
hlt
jmp
lea
push
cld
push
push
cmp
cs
movs
or
adc
sbb
je
add
cld
cmp
xchg
mov
hlt
xchg
and
mov
push
add
mov
cmp
xchg
jmp
dec
sub
jne
(bad)
jb
iretw
cwde
cmps
and
xchg
push
(bad)
ins
xchg
pop
sbb
add
movs
sbb
push
scas
dec
adc
push
leave
leave
repz
stos
test
sti
push
lock
shl
cmps
pop
jmp
mov
mov
jbe
cmp
mov
pop
pop
mov
daa
sbb
adc
push
(bad)
cld
jbe
loope
sub
and
xor
pop
adc
iret
lock
mov
xchg
inc
test
movs
test
dec
shr
dec
mov
nop
inc
popf
aam
jb
push
xchg
xchg
xor
test
stc
and
jg
aaa
in
inc
mov
pop
jmp
mov
dec
and
xchg
rcr
rcr
jmp
push
pop
sbb
xchg
adc
jae
push
push
pop
in
inc
add
lock
call
in
mov
pop
jmp
mov
inc
daa
sub
push
xor
std
pushf
mov
adc
nop
inc
out
cmp
sub
or
outs
leave
sbb
jg
inc
rcl
adc
add
repz
mov
(bad)
mov
add
shl
and
cmp
iret
cmp
jmp
and
hlt
dec
mov
push
push
bound
jle
inc
or
xchg
in
dec
sbb
and
pop
sbb
call
call
cmp
jae
mov
adc
or
jle
pop
les
pop
xor
hlt
aam
or
add
mov
cmps
adc
sbb
arpl
cmp
inc
icebp
pop
int3
and
cmp
cld
add
add
dec
adc
adc
and
push
or
add
push
push
ja
test
dec
in
or
out
inc
clc
jmp
mov
bound
sub
mov
inc
fiadd
jo
push
xor
xor
or
je
movs
pop
jge
or
inc
mov
mov
jns
push
es
add
daa
lock
and
(bad)
int3
cmp
cmp
push
jecxz
add
out
jb
ret
daa
(bad)
movs
loopne
pop
jmp
stos
mov
out
repnz
add
neg
mov
pop
pop
dec
pop
jmp
dec
or
test
dec
add
jb
shl
and
xor
mov
inc
pop
add
fiadd
rcr
cmp
jno
pop
cld
xor
lods
push
inc
inc
cmp
sub
inc
iret
xchg
sbb
push
adc
in
popf
rcr
adc
and
nop
sbb
sbb
adc
sub
xor
dec
pop
call
xor
add
(bad)
cmp
fild
mov
mov
add
and
add
cmp
xor
push
add
call
mov
or
xchg
not
or
and
sub
mov
pop
and
dec
jle
mov
pushf
inc
test
inc
push
cld
inc
push
lock
ret
dec
xchg
cdq
mov
jle
or
bound
int3
xor
pop
mov
dec
and
dec
sub
and
inc
into
ror
loop
cmp
push
push
push
and
inc
ss
mov
ins
and
dec
pushf
xchg
mov
out
mov
push
sbb
dec
pop
xchg
je
test
mov
xor
adc
or
inc
cmp
adc
push
adc
dec
ror
daa
push
sbb
push
mov
or
and
and
sub
and
or
sbb
sub
push
or
xor
pop
and
dec
or
add
mov
adc
adc
inc
loopne
bound
sub
push
lahf
or
ror
inc
ror
jo
xchg
dec
les
addr16
adc
or
bound
and
daa
outs
arpl
cmp
int
arpl
adc
enter
sbb
leave
xor
mov
dec
or
mov
dec
or
or
das
adc
jb
js
je
in
mov
lea
add
mov
jne
fidiv
fld
and
mov
or
mov
rcr
lea
xchg
cld
inc
sbb
dec
rol
and
push
les
jo
in
adc
add
int3
adc
or
or
xchg
dec
outs
inc
mov
cdq
into
fs
adc
movs
push
ins
dec
sub
retf
adc
retf
call
call
sbb
fs
sub
dec
sbb
jp
call
pusha
or
fs
dec
je
gs
addr16
and
icebp
outs
stos
jbe
sbb
xor
mov
mov
sbb
mov
sub
mov
inc
fmul
jb
push
movs
ins
and
pop
cli
jbe
push
test
ficomp
sbb
sub
sub
dec
jl
cmp
outs
das
sub
ds
add
push
dec
popa
sub
outs
cmps
movs
xchg
cmp
or
xchg
add
cs
lock
retf
test
xor
jo
arpl
test
mov
dec
sbb
push
inc
push
test
jo
inc
xchg
push
xchg
cwde
xchg
jb
aad
call
mov
pop
adc
movs
cmp
ret
pop
inc
cmp
and
fs
shl
push
and
push
(bad)
stos
add
mov
dec
aaa
sar
inc
dec
cmps
mov
nop
xor
cld
int
popa
jmp
ins
jne
cdq
cmp
mov
sar
push
and
js
es
push
in
sbb
nop
sar
fld
fadd
xor
call
cmp
addr16
dec
xor
retf
in
ror
aaa
aas
xchg
ins
jb
imul
fs
pusha
dec
xor
jo
xchg
pop
rcr
and
mov
inc
dec
mov
cdq
out
mov
mov
es
shr
nop
gs
imul
outs
adc
mov
pop
push
ins
popa
or
dec
jae
lods
retf
les
test
movs
push
outs
or
stos
pusha
pop
nop
rcl
inc
xchg
or
add
xchg
shr
push
or
inc
push
push
and
sub
stc
adc
adc
inc
adc
inc
sub
mov
sbb
adc
sbb
mov
inc
sbb
sbb
shl
add
or
inc
and
and
inc
and
mov
pop
les
or
inc
jns
in
cmp
rcl
sbb
or
fsub
cld
pop
push
mov
add
mov
loopne
xchg
outs
xchg
jns
leave
or
or
push
add
push
cmp
adc
movs
es
out
imul
xor
ds
pushf
lea
inc
sub
and
sub
hlt
xchg
add
out
sbb
and
in
cmp
xchg
inc
xchg
enter
add
jo
or
ror
test
fcomp
dec
or
cs
sub
ins
jae
jb
jecxz
or
je
popa
(bad)
jne
or
comiss
inc
sub
idiv
rcl
inc
sub
xor
dec
loop
jl
dec
dec
inc
dec
inc
push
pop
fadd
mov
imul
jne
push
and
arpl
(bad)
jg
in
les
mov
mov
pop
add
mov
mov
adc
mov
cmp
ins
xchg
pusha
lods
or
xchg
fs
sub
mov
cmps
add
push
sbb
sbb
push
push
dec
or
cmp
push
ror
sub
mov
outs
inc
jbe
dec
dec
mov
call
push
frstor
adc
add
dec
mov
scas
mov
jl
jo
sub
xchg
mov
mov
inc
mov
jne
(bad)
in
mov
mov
movs
movs
sub
xchg
jl
js
push
js
je
push
cmp
xor
scas
push
mov
jae
adc
push
jp
loop
push
ins
push
jne
adc
xor
fdiv
adc
and
and
inc
and
mov
cmps
jae
add
sub
dec
jne
or
add
das
sbb
out
movs
gs
xchg
test
mov
push
jb
lock
push
jbe
cmovg
aam
es
stos
mov
addr16
or
adc
or
jo
imul
inc
inc
gs
retf
jne
sbb
push
outs
or
or
dec
add
inc
add
xor
dec
ret
je
repz
inc
inc
mov
xchg
es
(bad)
push
gs
cli
or
push
push
jne
sub
push
and
sub
or
xor
adc
jo
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
inc
inc
add
inc
inc
dec
dec
dec
add
dec
dec
dec
push
push
push
add
push
push
push
pop
pop
pop
add
pop
pop
pop
pusha
popa
bound
arpl
addr16
ins
ins
add
mov
js
jp
jl
jge
jg
cmp
sub
addr16
fistp
or
push
add
mov
add
add
add
sub
cmp
cmp
pop
shl
jno
jns
icebp
jne
(bad)
out
jmp
js
in
add
inc
sbb
lea
repz
xchg
adc
push
or
outs
add
dec
or
mov
lds
movs
jb
arpl
enter
(bad)
gs
mov
sub
xor
data16
rol
pusha
icebp
inc
gs
jno
push
imul
jmp
ss
xor
push
jae
add
bound
or
outs
imul
sbb
xor
sti
and
inc
leave
xor
test
xor
push
adc
nop
inc
xchg
mov
repz
fstp
fs
and
mov
and
test
adc
and
or
cmp
movs
add
and
push
jbe
push
dec
add
add
std
sub
add
add
stos
add
add
and
add
add
xor
add
adc
inc
inc
add
xchg
add
xchg
xchg
add
call
mov
movs
movs
cmps
cmps
test
stos
stos
add
mov
add
mov
mov
ret
add
(bad)
enter
add
int
iret
rcl
rcl
add
aad
xlat
fcomp
fcmovu
add
fstp
fnstsw
loope
jecxz
in
out
call
in
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
or
std
(bad)
inc
popa
push
xchg
inc
(bad)
xchg
popa
pop
sub
push
dec
adc
jae
cli
xor
imul
dec
or
dec
and
push
inc
outs
ins
jo
cmp
jns
jg
jmp
rol
call
ins
div
fmul
jg
mov
sahf
jns
inc
jg
idiv
jo
pop
cdq
inc
inc
ds
and
jns
mov
test
cmp
push
jns
gs
inc
das
pusha
dec
jae
and
or
fsubr
pop
or
cmp
ins
mov
fsubr
and
add
into
jns
or
lds
adc
cmp
and
stos
bound
or
fs
clc
ins
xchg
and
enter
mov
xchg
sub
out
inc
(bad)
mov
pusha
in
push
sub
xchg
pop
movs
adc
jmp
mov
ja
out
outs
and
mov
push
pop
nop
or
or
nop
push
mov
bound
or
xor
and
inc
mov
ja
sub
jbe
fnsavew
cmp
sbb
and
mov
jl
dec
sbb
jne
hlt
pop
dec
sbb
(bad)
xchg
retf
dec
pusha
push
lods
seto
in
fsubr
aas
not
inc
aaa
stos
dec
inc
jg
inc
xchg
dec
mov
or
and
out
retf
mov
lock
dec
shl
xor
mov
gs
jg
xchg
sub
push
add
jns
test
push
fwait
lods
mov
outs
push
inc
outs
inc
xor
mov
fiadd
pop
push
jmp
adc
or
int3
or
sub
jno
fmul
adc
xor
jle
sub
add
adc
mov
inc
adc
cmp
sub
mov
sbb
out
push
sub
or
dec
cmp
test
and
dec
xchg
add
mov
dec
int3
shr
cmp
jne
loop
addr16
fs
jb
dec
mov
sbb
adc
xor
mov
sub
adc
adc
into
push
test
imul
jo
xchg
movs
xor
mov
inc
lods
or
and
push
and
inc
mov
pop
repz
xor
mov
xor
xor
sub
adc
adc
add
and
aas
add
dec
hlt
xchg
lock
inc
call
fsub
dec
aam
shl
int3
inc
enter
adc
mov
lods
inc
test
mov
dec
mov
ins
push
mov
xor
adc
hlt
ds
enter
xchg
and
push
xor
mov
or
mov
push
and
dec
hlt
cmp
or
adc
call
mov
adc
or
and
pop
je
mov
mov
outs
fs
jp
cs
cs
sub
xor
xor
mov
or
xor
add
adc
cmp
cs
cmp
test
mov
cmp
inc
jbe
push
nop
adc
pop
adc
(bad)
add
mov
imul
or
pop
loopne
lahf
adc
imul
and
inc
push
xchg
dec
mov
or
sub
and
push
dec
push
and
dec
or
rcr
repnz
mov
xchg
clc
xchg
jnp
lods
call
xchg
sbb
ins
aas
and
sub
inc
inc
and
dec
in
cld
sbb
nop
lds
jecxz
add
jp
movs
cmp
je
mov
sbb
push
lahf
stos
cmps
clc
loop
adc
mov
and
mov
call
add
pop
out
pop
test
push
mov
movs
fld
and
rcr
push
push
xchg
and
ds
lods
in
les
fs
xor
push
xchg
(bad)
in
push
push
stos
data16
imul
jns
pop
gs
inc
dec
push
cmp
cwde
sbb
xor
xor
cld
push
inc
es
aam
addr16
ins
dec
repnz
xor
adc
push
or
pop
add
ja
and
dec
xchg
ja
(bad)
jb
adc
or
mov
add
lods
data16
and
out
int3
fstp
rcr
in
or
adc
inc
push
or
inc
cmp
cmp
push
in
arpl
adc
std
pop
or
inc
mov
sbb
inc
test
int3
adc
sbb
add
jae
outs
data16
sti
fnsave
daa
cmp
jb
retf
sbb
or
pop
sbb
aam
je
adc
das
push
sub
jb
fs
imul
call
add
xor
push
pop
mov
add
loope
pusha
sub
cmp
cmps
push
mov
enter
and
dec
enter
adc
inc
inc
add
sub
cmp
add
xchg
push
xchg
and
rcr
mov
push
dec
inc
mov
and
shr
and
shl
les
add
sub
cmp
aam
sbb
adc
mov
test
pop
js
xchg
pop
inc
test
arpl
adc
gs
ds
sub
test
mov
js
adc
and
xchg
pusha
mov
cmp
and
mov
pusha
push
shl
jmp
xchg
loope
nop
inc
ret
setb
int3
pop
adc
xchg
call
outs
mov
sar
iret
mov
rcl
pop
(bad)
loope
movaps
xchg
scas
cmp
push
mov
test
pop
mov
and
jge
jle
adc
rol
loope
shl
cwde
loope
fcomp
test
jle
push
loop
jo
mov
cmp
clc
call
and
loop
jmp
dec
dec
lds
outs
mov
add
cmp
jmp
out
call
enter
stc
clc
mov
aad
int3
and
jns
mov
and
inc
rcr
fsubr
nop
adc
popf
xor
adc
jns
mov
and
sub
loop
add
adc
push
popa
out
push
add
or
inc
jbe
(bad)
sbb
xchg
dec
popa
rep
js
sbb
psrlw
mov
call
dec
push
jns
leave
and
push
int3
outs
dec
inc
jmp
jns
jmp
jbe
xchg
sub
xor
jo
xor
sub
leave
mov
das
sbb
adc
dec
pop
outs
fs
adc
dec
popa
ins
sub
arpl
imul
(bad)
and
out
adc
imul
add
xchg
or
cmp
data16
ins
outs
jbe
inc
or
dec
push
adc
adc
or
retf
add
jo
out
jl
xchg
lds
mov
imul
add
je
inc
jns
sbb
fadd
xchg
loopne
dec
inc
cmp
or
fs
(bad)
cli
add
mov
inc
xchg
in
test
dec
arpl
or
pop
sysret
fdiv
sbb
add
addr16
sbb
mov
dec
or
test
dec
outs
sbb
fadd
inc
cmp
mov
jl
jne
in
addr16
add
add
jo
out
je
adc
popa
mov
fnstsw
mov
ss
std
cmp
mov
adc
push
das
les
sub
inc
jl
out
push
dec
push
add
add
gs
xor
sub
retf
adc
push
leave
dec
or
adc
test
sub
push
out
inc
dec
div
repz
lods
mov
push
dec
dec
sahf
shl
inc
outs
sbb
xchg
mov
(bad)
imul
and
bound
add
pop
lahf
daa
shl
inc
sbb
add
jb
nop
cmp
add
int
ins
xchg
sub
pop
outs
jne
retf
outs
push
cs
rol
xor
jmp
pusha
movs
add
icebp
pop
test
pop
dec
push
js
div
retf
iret
mov
lds
push
cmps
icebp
aaa
fs
hlt
add
xchg
sbb
inc
or
btc
xchg
jbe
aaa
mov
add
les
dec
lds
push
xchg
call
add
push
ins
stos
adc
jo
and
sbb
adc
xor
rol
es
lea
inc
jns
out
push
lods
adc
push
and
inc
adc
scas
stos
retf
and
sbb
mov
and
mov
dec
out
sbb
push
loop
jg
call
push
fisub
sbb
inc
fdiv
repz
loopne
mov
lds
loopne
retf
(bad)
sbb
cmp
enter
add
(bad)
dec
sbb
push
and
dec
sub
imul
push
cmc
outs
es
jl
jae
es
lds
dec
or
pushf
ds
test
mov
pop
push
movs
or
push
cli
shl
scas
jns
sub
ret
xchg
int
clc
adc
mov
inc
cmp
cs
call
jae
xchg
and
push
pop
push
add
into
inc
aaa
add
dec
test
aad
push
or
add
test
sub
cmp
test
(bad)
jg
imul
adc
dec
push
loop
push
jmp
lock
retf
xchg
pusha
and
jo
inc
mov
pusha
mov
mov
cmp
ror
xor
push
inc
imul
xor
dec
xor
push
dec
cwde
fs
dec
push
data16
add
add
add
loope
add
mov
cs
add
popa
fs
out
loop
packsswb
je
cmp
sbb
gs
cwde
jo
imul
out
mov
add
or
sub
or
add
or
dec
or
or
or
or
sbb
push
push
push
cmp
or
cmps
pop
push
adc
adc
add
sbb
mov
adc
inc
xchg
inc
retf
gs
xor
push
cdq
or
pusha
pop
cmps
jl
ins
sbb
ins
inc
and
sbb
jb
lods
push
dec
xor
or
and
or
dec
fs
dec
sub
in
xor
cmp
and
and
adc
rcl
or
add
and
into
adc
inc
xor
add
adc
cld
add
xchg
call
or
(bad)
inc
call
je
jo
gs
imul
(bad)
stc
adc
fsub
xchg
and
popa
bound
gs
push
ins
ins
outs
outs
jo
jno
jae
jne
ja
cmp
inc
add
inc
inc
inc
inc
inc
add
dec
dec
dec
dec
dec
dec
add
push
push
push
push
push
push
sbb
pop
pop
and
adc
aad
mov
add
movs
add
pusha
cmp
cmps
sbb
cmps
fisttp
or
loopne
test
inc
jle
int3
test
sar
fimul
test
inc
(bad)
sub
xchg
mov
mov
push
iret
mov
in
call
nop
nop
sub
or
pop
retf
cmp
pop
cmp
and
jo
fcom
fsubp
stc
adc
jle
popf
or
aam
xor
and
and
adc
mov
cld
xor
lock
dec
fcom
enter
adc
mov
lods
inc
test
mov
dec
test
ins
and
push
mov
and
pop
loop
and
mov
or
das
and
in
dec
in
fsub
aam
int3
mov
and
dec
je
and
dec
inc
mov
adc
and
dec
and
or
and
cs
dec
loopne
int3
and
inc
mov
xor
mov
dec
push
inc
cmp
mov
hlt
sub
add
sar
pop
in
das
lods
adc
outs
and
or
sbb
or
jns
push
ins
add
dec
inc
dec
test
rcr
push
mov
div
pop
leave
lds
dec
cmp
sbb
xor
xor
xchg
sbb
movaps
add
nop
inc
lods
enter
mov
xchg
popa
inc
int3
(bad)
xchg
cld
push
hlt
adc
sub
fs
hlt
dec
inc
fld
xor
retf
cmp
xor
push
sbb
xor
xor
and
daa
xor
dec
fild
add
mov
add
add
and
arpl
push
add
adc
inc
push
fmul
xor
adc
add
outs
mov
add
adc
inc
adc
and
inc
add
mov
inc
pop
mov
and
dec
rcl
or
add
or
sbb
xchg
xor
push
inc
dec
jns
js
nop
out
and
imul
mov
dec
cmp
mov
or
adc
fld
jl
adc
and
nop
xor
inc
xchg
push
aas
and
jo
enter
nop
repnz
rol
stc
lock
ret
loop
pop
xchg
and
xor
dec
and
cmps
and
cmp
test
call
or
cmp
les
cmp
cmp
sti
popa
nop
loope
call
ds
jge
test
push
add
adc
sbb
mov
and
lea
enter
mov
pop
and
push
and
pop
js
mov
mov
or
push
inc
sub
mov
loop
pop
or
adc
or
add
lds
adc
adc
stos
ins
add
ds
ja
jo
mov
lds
jg
sub
clc
movs
adc
aas
fcomi
mov
inc
add
inc
or
mov
out
rol
inc
push
aam
test
scas
add
dec
sub
in
xchg
call
mov
enter
inc
sub
pop
nop
push
mov
push
xor
pusha
mov
push
add
xchg
mov
shl
add
push
and
and
in
movs
adc
inc
sbb
push
and
push
and
push
and
xchg
imul
or
dec
cmp
adc
or
mov
sbb
or
dec
mov
mov
or
adc
pop
cwde
fs
mov
ins
jo
sbb
imul
call
push
gs
retf
sar
fidivr
add
fdiv
mov
add
mov
jb
(bad)
cmp
add
jo
or
jo
and
outs
or
shl
fisub
ror
or
push
rol
inc
adc
enter
retf
jge
in
mov
sbb
inc
retf
inc
mov
ins
in
movs
push
sar
jo
sbb
mov
clc
shl
mov
push
test
xor
(bad)
adc
aam
adc
push
mov
mov
lods
pop
add
pushf
or
add
xor
(bad)
outs
adc
dec
and
add
mov
adc
and
jno
retf
or
stos
and
or
dec
mov
adc
js
sahf
or
sbb
sbb
in
aad
or
clc
or
mov
nop
or
call
loop
cmp
jns
int3
ja
mov
adc
sbb
jmp
pop
add
inc
sub
xor
in
inc
sub
add
xchg
xor
and
xor
xchg
add
or
inc
cwde
arpl
or
or
or
and
popf
dec
mov
inc
lea
lahf
inc
sbb
inc
pusha
out
mov
or
adc
mov
pop
pop
(bad)
mov
inc
mov
clc
and
dec
cli
xchg
sti
and
inc
std
dec
push
arpl
xor
add
sbb
popa
dec
add
add
pop
cmp
pop
loopne
add
inc
stos
mov
mov
ficom
mov
add
pop
push
add
or
lahf
loope
popa
or
or
and
test
clc
pop
stos
cmps
or
pusha
or
(bad)
jg
jg
cmps
add
mov
lods
aaa
push
pop
das
push
mov
lods
add
jmp
push
in
ficom
aaa
pusha
adc
adc
xor
sbb
scas
sbb
cmp
scas
jb
pop
sbb
sbb
and
and
pop
or
adc
jo
mov
adc
mov
pusha
and
mov
or
mov
and
and
jmp
not
and
stos
xor
pop
das
mov
sub
xor
sub
mov
mov
push
daa
mov
sbb
and
sbb
rcr
aas
pusha
cmp
fwait
push
fwait
cmp
add
cmp
jne
inc
mov
push
xor
xor
fild
adc
mov
adc
gs
dec
pop
pop
das
push
cs
jae
mov
jge
repnz
add
in
push
clc
push
cs
inc
dec
inc
pop
sub
adc
imul
push
push
popa
add
cmp
jl
jge
jno
outs
push
add
xor
pushw
add
cmp
jo
add
mov
movs
mov
cwde
sahf
mov
popf
pushf
fwait
call
(bad)
mov
add
xchg
sub
mov
jns
dec
or
jno
inc
jb
js
adc
push
dec
lods
add
jne
jp
mov
xchg
or
int
mov
add
xor
in
sub
or
(bad)
adc
push
pop
push
dec
add
and
mov
aaa
cmps
push
mov
dec
xor
dec
xor
or
jb
sub
xor
pop
inc
pop
pop
push
push
push
pop
jns
mov
and
jno
adc
push
and
xor
dec
mov
cmp
mov
ins
inc
adc
push
push
enter
(bad)
xchg
jp
fadd
mov
aaa
add
xchg
jno
retf
jb
xchg
pop
pop
nop
arpl
mov
inc
and
sahf
xchg
ins
rcr
lock
(bad)
cwde
pop
push
push
cmps
dec
nop
or
movs
adc
jae
loopne
bound
shl
mov
pushf
push
ror
imul
call
cwde
jno
mov
mov
ror
sub
sahf
push
imul
stos
push
adc
mov
es
mov
mov
shl
ins
pop
and
adc
or
add
or
jg
fisub
enter
or
xchg
hlt
and
mov
jo
and
xchg
or
in
mov
bound
out
arpl
loop
adc
or
mov
shl
or
xchg
mov
xor
add
or
fnstcw
adc
adc
sbb
jne
fild
fs
push
or
mov
add
and
test
push
adc
or
and
adc
popa
sbb
xchg
add
sub
cld
inc
mov
out
xor
repnz
xor
sahf
arpl
sub
adc
fwait
push
aam
and
and
lahf
and
lea
sub
cmps
push
aam
scas
jo
test
sahf
sbb
mov
rcl
mov
fmul
mov
or
(bad)
sub
mov
sub
mov
xor
mov
and
mov
mov
mov
into
loopne
xchg
mov
ucomiss
mov
dec
xchg
nop
je
add
mov
bound
femms
push
pop
xchg
or
mov
or
or
inc
adc
push
pusha
adc
push
add
adc
adc
mov
mov
xchg
mov
xor
enter
sub
mul
pop
inc
sbb
adc
mov
push
add
inc
and
and
loop
aaa
inc
cs
inc
je
inc
and
add
das
and
xor
xchg
adc
aaa
xchg
and
jns
adc
sbb
sbb
inc
mov
add
push
inc
adc
int3
xor
dec
cmps
loopne
scas
inc
inc
dec
dec
out
loop
test
cmp
dec
xor
dec
pmuludq
out
push
mov
jns
add
adc
add
mov
cmp
(bad)
add
lods
stos
test
cmps
pop
cmps
cmp
les
shr
push
mov
inc
add
daa
sub
sub
push
sub
int3
add
ss
and
xor
inc
push
push
sbb
push
push
xchg
ins
pop
pop
(bad)
daa
pop
push
rcl
arpl
das
(bad)
lods
cmps
mov
fwait
cwde
xchg
pusha
xchg
nop
add
xchg
xchg
mov
xchg
test
bound
mov
or
jp
jl
js
jg
test
cmp
jb
ja
add
outs
outs
pushf
mov
(bad)
loopne
add
sub
mov
lods
int
xchg
or
jl
push
push
push
cli
cmc
repz
dec
xor
push
jae
aas
add
or
inc
adc
fwait
loopne
cmp
push
fstp
adc
mov
fucom
lahf
cmp
repnz
cmp
push
xchg
inc
add
gs
mov
mov
adc
mov
or
arpl
or
mov
and
or
enter
into
xchg
add
mov
test
loopne
test
scas
xchg
js
in
and
out
(bad)
es
nop
sub
sub
xchg
js
bound
nop
sub
das
sbb
xor
arpl
jo
dec
sbb
(bad)
sub
leave
fnstcw
test
fst
int3
sub
sbb
and
or
(bad)
(bad)
std
arpl
mov
lock
xchg
add
test
and
jle
cmp
cli
stos
and
dec
dec
inc
dec
(bad)
dec
dec
and
into
xor
add
dec
or
adc
cmp
xor
push
or
dec
dec
mov
add
dec
or
adc
add
inc
inc
or
push
pop
adc
cmovg
xor
inc
push
dec
sbb
xlat
adc
sub
inc
loop
push
adc
sbb
dec
add
add
sub
cmp
add
aas
cmp
cmp
daa
sbb
push
sbb
sbb
and
add
sub
xor
das
xor
sub
sub
push
push
add
rcl
mov
loopne
jecxz
xchg
add
mov
add
mov
sbb
add
mov
inc
mov
scas
mov
imul
push
mov
cmps
popf
add
inc
(bad)
sbb
add
dec
icebp
add
mov
(bad)
loope
(bad)
adc
mov
cmp
or
dec
xchg
and
lds
je
clc
sbb
and
add
in
lock
scas
sub
mov
test
movs
rcr
repnz
sbb
add
and
xor
push
add
inc
mov
movs
shl
sbb
push
or
add
loop
sub
shr
and
add
mov
mov
shl
or
sbb
fcomp
cli
dec
scas
sar
and
and
add
mov
mov
shr
rol
sti
sub
jl
shr
ds
sbb
sub
shr
ds
mov
sar
mov
cmps
rcr
dec
icebp
mov
ror
or
mov
shl
push
in
mov
fs
sub
xchg
add
add
mov
pop
xlat
or
loopne
sub
hlt
mov
add
sbb
nop
push
cmp
mov
add
test
adc
sub
sar
loope
std
or
add
shr
add
or
and
loopne
shl
add
or
mov
inc
rcl
or
stos
rol
in
adc
aam
add
retf
(bad)
and
inc
and
pop
pushf
das
push
in
add
scas
jo
cdq
rcl
das
sbb
(bad)
jo
(bad)
cmp
stos
pop
adc
fs
adc
or
sub
or
dec
sbb
adc
mov
sbb
and
movs
bound
mov
inc
jo
mov
movs
inc
stos
pop
dec
mov
ror
push
int3
enter
jo
adc
mov
sbb
pop
or
adc
dec
adc
xor
sbb
or
sub
sub
js
pop
sub
or
mov
xor
in
repnz
(bad)
mov
push
je
in
adc
es
aas
retf
xor
jb
fdiv
int3
fnstenv
jne
adc
icebp
adc
push
adc
sub
clc
mov
jnp
adc
or
js
adc
add
add
push
pop
repnz
sbb
les
add
and
sbb
cli
adc
pop
mov
ins
xor
ficomp
xor
int3
ja
add
retf
mov
jns
das
jo
icebp
push
jo
lahf
nop
ficom
xor
mov
sbb
cmp
ds
inc
xor
pop
or
add
aas
cmp
inc
sbb
add
(bad)
xor
sbb
adc
cdq
sbb
nop
sub
adc
daa
or
mov
xor
mov
retf
jl
mov
lea
jle
test
ror
fnsave
xor
dec
jno
pop
mov
push
call
pop
adc
sbb
add
je
adc
sbb
or
repnz
std
mov
dec
ror
add
push
fdiv
das
sar
xchg
mov
lods
inc
rol
mov
fwait
mov
stos
xor
sbb
push
cmp
add
pop
dec
adc
inc
lea
popf
adc
or
xchg
inc
and
test
popa
lock
add
push
adc
icebp
aad
imul
sub
mov
lock
mov
push
sub
push
clc
xchg
outs
dec
or
and
dec
pop
leave
mov
sbb
xor
bound
adc
xchg
or
neg
add
mov
sub
mov
aas
imul
add
sbb
add
inc
adc
cmps
add
les
cld
adc
xchg
pop
add
or
sub
sub
inc
sub
cld
sbb
sbb
dec
pusha
and
or
adc
mov
fadd
ds
adc
xor
mov
add
push
xor
push
inc
sub
pop
sub
inc
fdivr
cmp
and
cmc
push
clts
or
inc
xor
pop
inc
xchg
adc
jo
stc
(bad)
mov
mov
dec
not
pop
mov
pop
add
nop
jl
xchg
jecxz
xlat
clc
adc
adc
add
add
clc
jo
adc
mov
fs
pop
dec
call
inc
push
adc
add
cmp
aam
cld
mov
xchg
stc
or
add
jg
push
add
std
cmps
fcom
(bad)
imul
stos
dec
test
inc
adc
pop
dec
and
test
dec
sbb
inc
rol
nop
add
and
adc
push
add
sbb
mov
sub
mov
or
mov
xchg
push
(bad)
clc
push
sub
and
dec
or
mov
inc
cdq
or
add
inc
or
mov
inc
add
sahf
sub
popf
inc
inc
cmps
ins
dec
or
mov
cwde
nop
adc
mov
or
mov
or
ins
sbb
adc
iret
call
add
lods
jl
xor
iret
push
add
push
ins
sub
outs
and
add
and
mov
adc
cwde
ds
mov
push
and
addr16
add
js
fisttp
aam
push
pushf
cmp
aas
in
xchg
adc
cwde
xor
sbb
and
xchg
adc
imul
adc
ss
add
(bad)
dec
or
xchg
sbb
mov
retf
cmp
es
fmul
cdq
adc
arpl
jo
mov
je
(bad)
js
enter
push
je
(bad)
aad
or
fsub
test
or
adc
fstp
les
jnp
add
or
or
or
or
aaa
cmp
or
or
or
jnp
or
fnstcw
jns
sbb
jae
add
fisub
je
fmul
loope
jnp
jo
add
in
add
int3
inc
cmp
test
out
jo
(bad)
(bad)
and
(bad)
jmp
mov
inc
sub
mov
dec
add
or
or
imul
add
dec
jb
add
mov
add
in
adc
or
mov
inc
and
xchg
inc
and
push
sub
iret
add
(bad)
dec
test
fld
inc
fnstenv
sub
test
add
pop
cmp
inc
sub
fild
mov
cdq
pop
cmp
std
test
daa
inc
adc
mov
mov
loope
xchg
xor
dec
es
mov
cwde
repnz
mov
push
inc
out
xchg
sbb
or
rcl
ins
loope
dec
and
inc
or
jl
stos
xchg
or
xor
dec
or
or
movs
xor
int3
in
xchg
leave
push
xadd
cmovo
ret
push
arpl
adc
push
adc
repnz
xchg
stos
pop
pop
and
lods
mov
clc
call
(bad)
jns
shl
mov
test
xchg
lahf
or
sbb
xchg
mov
add
test
loop
adc
xchg
pop
out
sbb
loope
and
retf
jg
xor
mov
or
mov
aas
push
fiadd
pop
push
mov
cmp
daa
inc
(bad)
inc
or
jb
gs
sbb
jmp
cmp
inc
aaa
inc
inc
ins
or
inc
int3
adc
dec
scas
or
adc
adc
data16
popf
pop
or
jno
adc
add
icebp
sub
jnp
cmp
xor
and
out
or
push
into
push
add
test
and
out
sub
and
sub
adc
pusha
push
inc
xchg
js
or
enter
sbb
push
fs
repnz
jae
gs
pop
bound
js
scas
outs
cmp
fldcw
xor
outs
out
and
xlat
mov
sbb
and
and
xor
imul
cmp
jl
ret
xor
xor
sar
jb
xor
outs
outs
xchg
dec
xor
cmp
test
pop
imul
aaa
jno
int
fs
cmp
jbe
ins
xor
sbb
pop
inc
outs
js
adc
jbe
ins
and
ja
mov
inc
arpl
and
rcl
cmp
cmp
das
jle
inc
cmp
and
push
sti
and
add
add
or
add
jo
loopne
popa
add
or
shl
inc
loope
jmp
mov
stc
sar
stc
sar
(bad)
adc
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
sbb
xor
sbb
lahf
call
xor
addr16
xchg
arpl
push
ja
jle
mov
xchg
out
out
out
out
out
out
out
loope
xor
leave
cmp
jl
movs
loope
jmp
mov
stc
out
in
stc
idiv
std
clc
sbb
iret
add
cmovo
(bad)
pop
iret
xchg
iret
mov
ret
add
sub
mov
sahf
shr
repz
or
and
push
jecxz
ds
jb
pop
jbe
js
jp
jl
jle
jle
sbb
cmp
popf
daa
sbb
inc
lahf
pop
pop
pop
lahf
jae
xchg
retf
lahf
fcomp
pop
daa
imul
cmps
add
rcl
pusha
loope
jmp
retf
cmp
cs
jbe
js
jp
jl
jle
jle
jle
sbb
cmp
aam
cld
pop
adc
mov
stos
inc
cmp
call
and
sub
xor
cmp
push
adc
xor
mov
xchg
xcrypt-ecb
cmps
dec
mov
in
add
or
rcl
addr16
out
mov
inc
shl
cld
loopne
xor
inc
je
jbe
dec
xchg
adc
lods
aas
mov
xor
mov
ss
cmp
cmp
adc
sub
cmp
mov
(bad)
mov
ret
sbb
cmp
mov
ret
outs
rol
lock
sub
dec
call
mov
xchg
clc
fwait
test
cmp
sbb
cmp
sbb
(bad)
lahf
rcr
cli
xchg
test
fs
mov
les
add
jmp
leave
jns
test
loope
pop
xor
je
jbe
js
jp
jl
sbb
xor
cmc
add
xor
xor
stc
fadd
ss
je
jbe
sbb
aaa
jp
xchg
pop
adc
sub
scas
inc
(bad)
popa
dec
cmp
loop
icebp
cmp
cmp
or
cmp
mov
gs
dec
jno
jle
test
mov
xchg
iret
cdq
iret
ror
fcmovb
adc
sbb
sub
pop
call
mov
push
xor
shr
outs
cmp
retf
push
and
repz
jb
je
jbe
js
jp
cmp
jb
lea
js
dec
push
cmp
push
add
ss
aaa
imul
push
nop
mov
in
fdivp
sbb
mov
rol
sub
in
dec
fs
ret
push
(bad)
cld
nop
sbb
xor
xor
inc
adc
mov
sbb
cmp
out
sub
cmp
mov
shr
lock
loope
in
cld
repz
mov
cwde
stos
inc
popa
inc
sbb
pop
fldenv
cmps
mov
and
xchg
lock
(bad)
jmp
mov
test
xor
add
aaa
popa
mov
(bad)
ret
(bad)
loope
jmp
cmp
in
call
mov
cmp
and
jp
pop
sbb
xchg
lahf
cwde
pop
lahf
lahf
cmps
lahf
lods
lahf
mov
mov
lahf
rcr
in
lahf
neg
or
adc
pop
sub
clc
inc
cld
dec
cld
push
xchg
enter
jge
(bad)
fsub
jo
pusha
outs
cmp
jns
xchg
les
cmp
sbb
aaa
dec
pop
mov
popf
xor
mov
add
adc
dec
cmp
mov
cmp
pop
call
inc
addr16
movs
dec
in
xchg
xchg
jne
test
xchg
repz
rep
repz
ret
repz
repnz
cmp
popf
and
jl
jle
jle
jle
sbb
xor
or
and
mov
hlt
repnz
sub
xor
cmp
pop
cmp
cmp
test
xor
dec
ss
xchg
ins
mov
add
cmp
test
aad
pop
cmp
cmp
in
call
cmp
inc
cmp
push
push
aas
push
dec
js
adc
xor
xchg
xor
cs
sbb
mov
(bad)
xor
xor
dec
rcr
xor
lock
adc
sub
cmp
sbb
hlt
popf
loope
and
inc
daa
fiadd
cmp
shl
cmp
in
aam
in
xrelease
push
jle
jle
jle
jle
jle
jg
jle
jle
nop
or
push
rol
and
sub
jp
jl
jle
jle
jle
jle
jle
jle
sbb
ds
popf
push
sbb
pop
lahf
pusha
pop
fs
push
lahf
mov
cdq
enter
push
cmp
jbe
nop
lahf
and
xor
je
dec
cmp
mov
pushf
xor
in
int3
ss
in
js
xor
in
call
mov
mov
fdiv
ins
in
call
jp
add
or
push
push
pop
lahf
je
movs
lahf
ret
sbb
mov
out
pop
sub
cmp
jle
mov
xchg
add
call
mov
mov
sbb
xchg
push
dec
inc
(bad)
cmp
dec
mov
mov
cmp
xchg
call
xchg
jecxz
repz
mov
jle
jle
jle
pop
icebp
sub
push
cmp
sub
daa
mov
xchg
dec
out
out
out
out
out
out
jmp
and
pop
ret
adc
loopne
ds
in
call
push
dec
int3
mov
(bad)
out
in
iret
repz
stc
cmps
mov
daa
or
enter
(bad)
xor
cmp
ds
in
int3
data16
jns
jg
xchg
cdq
jle
dec
cmps
outs
aas
mov
aas
sar
lock
test
enter
xor
leave
ror
jno
jle
mov
cld
call
cld
jmp
cld
dec
cmp
push
cmp
(bad)
cmp
cmp
adc
xchg
pop
mov
add
leave
in
div
adc
ss
cmp
push
cmp
cmp
loop
cmps
xchg
sbb
inc
mov
in
jmp
xor
cmp
dec
cmp
popa
xchg
lahf
(bad)
stos
out
out
out
out
loope
cmp
jp
(bad)
fscale
loop
push
arpl
rcl
icebp
fsub
jb
je
jbe
dec
mov
sbb
(bad)
fxch
repnz
lds
push
es
sub
cmp
inc
pusha
fwait
stc
scas
gs
pusha
jo
in
cdq
mov
push
test
jp
test
jb
dec
push
add
pop
ss
jmp
ffreep
idiv
and
jbe
bswap
movs
ds
pusha
pushf
ret
imul
push
outs
ret
jb
jbe
jne
pop
sbb
out
loope
xor
jb
cld
fsub
jb
je
jbe
js
sbb
xor
mov
xor
mov
ret
ins
shl
repnz
lock
ss
mov
sbb
aaa
shl
jae
sbb
es
ret
and
aaa
popa
jle
popa
jmp
xchg
aas
popf
aas
mov
aam
(bad)
push
sub
and
cmp
(bad)
fnstenv
xchg
(bad)
icebp
out
and
mov
pop
es
mov
jg
and
je
xchg
xor
xor
cmp
sub
sub
loopne
mov
iret
js
sbb
aaa
sbb
cmps
sahf
shl
cmp
xchg
adc
xor
mov
inc
sbb
push
rcl
cmp
push
adc
iret
popf
add
cmp
and
mov
dec
xchg
aas
jg
test
lea
aam
test
aas
sbb
dec
test
iret
scas
fcom
lock
xor
pop
ja
add
jmp
stc
mov
mov
(bad)
ret
or
repz
repz
repz
or
retf
pop
and
cmp
mov
xor
daa
push
add
mov
les
push
add
cmp
mov
int
bnd
adc
ds
in
jmp
aam
dec
add
mov
push
xor
dec
mov
retf
inc
frstor
adc
dec
or
fcmovne
in
ret
pop
cmp
int3
jo
sub
cld
fld
xor
rcr
data16
jo
arpl
mov
fdivr
adc
xor
jp
jl
rcl
xor
(bad)
cmp
dec
pop
adc
xor
sahf
mov
in
inc
cmp
and
enter
sub
xor
fld
ds
aas
pop
and
adc
je
mov
xchg
aas
pushf
aas
movs
aas
lods
aas
mov
mov
cwde
cmp
push
fidiv
mov
rol
fs
cmc
shl
xchg
inc
pop
loopne
aas
call
aas
hlt
sub
call
sbb
adc
mov
repz
and
sub
sub
mov
cmp
inc
iret
inc
(bad)
movsx
loop
xchg
in
mov
cld
jo
dec
cld
js
jl
in
jle
dec
mov
aas
cwde
aas
pushf
mov
lods
lahf
mov
mov
mov
lahf
les
loopne
in
call
clc
repnz
dec
jbe
leave
or
or
adc
adc
sbb
mov
sub
sub
dec
stc
xor
add
inc
push
in
aaa
lock
imul
jl
mov
cld
mov
cld
in
adc
clc
cld
cld
mov
dec
adc
cwde
ds
es
pushf
xchg
cmp
pusha
daa
and
je
push
and
enter
or
sub
push
adc
inc
mov
sar
ins
adc
and
jo
bound
push
adc
add
inc
scas
mov
shr
into
movs
int3
dec
ror
fmul
mov
shr
lock
hlt
cld
clc
cld
cld
xchg
ret
mov
or
adc
adc
sbb
sbb
and
and
stc
shl
test
inc
xchg
(bad)
dec
dec
fsub
ficom
and
push
and
xchg
loop
dec
in
push
cmps
mov
jmp
sub
mov
enter
aas
aam
fmul
lahf
call
lahf
hlt
lahf
clc
xchg
cld
sar
add
or
clc
sbb
fisub
sub
mov
cwde
stc
test
dec
aas
enter
clc
in
add
or
dec
aas
xor
xor
cmp
cmp
jle
push
dec
(bad)
pusha
push
cwde
cmp
pushf
cmp
and
in
loopne
enter
ror
fmul
fadd
(bad)
in
call
jo
add
add
add
add
add
add
add
sbb
inc
add
add
xchg
add
dec
add
add
add
add
add
add
(bad)
fadd
add
add
pop
lea
add
mov
lea
push
pop
add
lods
dec
jne
mov
mov
mov
mov
push
push
push
push
call
mov
mov
jmp
mov
add
lods
mov
btr
jae
rep
jmp
pusha
push
push
push
call
mov
popa
pusha
mov
sub
mov
lea
xor
push
pop
jmp
mov
and
cmp
je
mov
and
cmp
jne
inc
mov
sub
xor
mov
mov
inc
shr
jne
push
inc
mov
sub
sub
mov
cmp
ja
mov
shl
mov
shl
xor
lea
mov
inc
shr
je
add
mov
shr
setae
dec
mov
pop
inc
cmp
jl
popa
add
lods
test
jne
push
push
push
call
lea
push
push
push
push
call
mov
sub
push
push
push
push
call
pusha
push
push
push
call
popa
push
push
push
call
lea
push
push
push
push
call
mov
jmp
add
push
call
mov
add
jmp
btr
jb
add
inc
inc
push
push
push
call
stos
pop
mov
test
jne
add
lods
test
jne
mov
or
je
mov
jmp
xor
lods
or
je
and
add
add
cmp
jne
mov
lea
add
test
jne
popa
jmp
pop
pop
pop
pop
push
push
cld
mov
xor
movs
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
sub
mov
ret
