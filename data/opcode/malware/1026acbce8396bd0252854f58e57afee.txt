sbb
cli
jnp
(bad)
jns
(bad)
mov
pop
push
sbb
xchg
mov
push
sbb
dec
imul
mov
call
ret
xchg
jns
cli
mov
fxch
mov
loope
cmp
les
std
lahf
cmps
aaa
test
inc
push
add
lods
addr16
sar
add
out
ja
mov
push
adc
and
popf
fwait
jp
sub
add
sbb
and
in
adc
xor
add
xchg
andps
sbb
jo
mov
js
add
sbb
psubsw
stos
cwde
cmp
mov
retf
push
dec
call
sub
stos
and
dec
call
dec
movs
cmp
mov
int3
cmps
mov
sub
in
or
push
ds
fwait
lods
fcom
adc
or
ret
fwait
int3
fisub
or
in
outs
cli
in
push
clc
jne
int3
test
or
(bad)
cmc
inc
jg
xchg
lock
jle
push
add
jae
fbstp
movs
sbb
ror
sub
int3
jno
cld
cmc
inc
in
imul
xor
cmc
push
xor
ins
jnp
test
or
shl
mov
cli
fstp
add
cs
test
rol
in
fsubr
jnp
pop
xchg
xor
push
test
xor
(bad)
iret
(bad)
cli
js
in
mov
cmps
cmp
scas
inc
rol
lea
add
ins
sub
add
xchg
sbb
mov
dec
push
sbb
sbb
fidiv
mov
into
(bad)
xchg
push
ret
add
addr16
adc
ins
lods
outs
(bad)
cmp
fsub
push
call
(bad)
std
xor
push
mov
inc
enter
fdiv
cmp
push
imul
enter
push
mov
std
sub
push
push
shl
jne
mov
push
jmp
inc
mov
loop
shr
mov
jne
xor
xchg
push
leave
ins
or
sti
aam
pop
and
lahf
xchg
int3
and
inc
cmps
pushf
inc
lods
nop
push
sub
inc
and
sub
leave
hlt
pop
xor
and
xor
outs
test
mov
sub
mov
dec
pushf
lods
jge
cmp
ins
gs
add
mov
xchg
fst
mov
push
ins
add
das
popf
loopne
int
or
call
jbe
aaa
movs
push
cmps
stc
addr16
stos
mov
lea
and
ret
inc
sahf
or
push
push
inc
sub
loope
out
jbe
sub
add
das
mov
inc
movs
out
xchg
outs
pop
xchg
push
fs
ss
mov
out
mov
fisttp
call
es
loope
movs
xor
mov
cmc
je
and
popa
rol
jno
call
sub
add
shl
das
push
imul
push
inc
cmp
loopne
jne
sbb
mov
xchg
dec
rcr
dec
js
ret
outs
jb
stos
and
test
jne
fs
pop
rcr
daa
ja
push
sbb
(bad)
not
mov
fld
xchg
cmps
mov
fmul
add
xchg
mov
stos
push
test
mov
sub
or
(bad)
and
adc
(bad)
neg
jo
mov
jp
and
(bad)
inc
xchg
push
add
push
mov
cwde
cmp
scas
addr16
fld
cmp
or
sub
dec
inc
and
cmp
pop
xchg
xchg
pop
fs
push
les
adc
add
add
adc
mov
loopne
xlat
dec
mov
popa
push
arpl
pop
push
cwde
sub
(bad)
cmc
xchg
xlat
jno
inc
ins
call
inc
xchg
or
ret
or
add
fs
mov
adc
and
xor
mov
out
mov
pop
add
adc
loope
(bad)
imul
adc
rcr
fisub
dec
push
dec
in
in
push
movs
dec
mov
and
mov
out
xor
aam
(bad)
iret
icebp
(bad)
and
push
mov
pop
push
push
outs
shl
sub
pop
push
adc
aas
sub
call
mov
xchg
inc
mov
loopne
retf
je
in
add
jno
sub
daa
mov
ret
(bad)
push
xchg
xor
fld
push
dec
sub
lea
xchg
push
mov
data16
dec
adc
sub
in
lock
(bad)
mov
xchg
xchg
popf
ret
cmp
or
inc
fstp
xor
xchg
pop
mov
ret
and
cmps
add
sub
inc
xchg
scas
das
loope
jae
stos
sbb
push
mov
aam
jae
inc
div
jo
push
inc
jns
pop
cmps
rcr
loope
or
stos
icebp
pop
aaa
cmps
mov
mov
cmc
daa
pop
jge
xchg
xchg
xor
cmp
ret
sbb
jns
les
outs
out
add
xchg
les
inc
shr
add
push
xchg
call
dec
cmps
and
sbb
dec
sub
mov
stos
xchg
pop
pushf
lock
test
or
fsubr
imul
mov
mov
adc
adc
xor
or
popa
int3
mov
sub
ss
and
cmps
popf
icebp
and
mov
pushf
icebp
pop
stc
call
mov
xchg
fisttp
pop
stc
pop
jb
outs
mov
shl
cmp
xor
adc
adc
pop
out
add
cmp
jge
lea
or
std
mov
or
loop
mov
pop
mov
cmp
mov
jl
pusha
sbb
repnz
pop
cwde
dec
and
sub
pop
jp
push
cmc
call
retf
or
test
imul
push
mov
leave
std
arpl
pcmpgtd
(bad)
push
out
xor
inc
call
adc
aam
in
mov
add
lahf
and
pop
dec
out
loopne
sbb
xchg
int
scas
test
clc
push
xchg
jno
adc
adc
mov
mov
fdivr
mov
and
sub
data16
cs
dec
pop
sbb
xor
push
or
(bad)
xlat
or
ss
mov
std
pop
mov
xor
daa
ror
xor
bound
rcr
inc
adc
jg
sbb
out
mov
mov
ins
inc
jp
les
add
xor
pushf
adc
adc
cmp
retf
pushf
or
xor
xchg
inc
dec
js
mov
push
sub
sub
outs
mov
stc
fisttp
xchg
cmp
popa
push
clc
rcl
and
js
pop
jo
cmp
movs
sub
add
pop
test
mov
adc
jl
pop
add
daa
fistp
cmp
dec
inc
(bad)
outs
push
cmps
(bad)
lock
jl
test
push
ins
jg
mov
ds
cmp
movs
jne
xlat
add
sbb
sub
nop
sahf
adc
cli
fs
adc
pop
test
jo
sahf
test
push
imul
mov
mov
jo
sub
or
cld
xor
popa
imul
(bad)
in
jge
pop
scas
push
sti
dec
test
jmp
je
xchg
xor
nop
inc
fild
push
inc
push
fild
rcl
(bad)
jle
popf
ins
xor
mov
not
xchg
bound
sbb
adc
cmp
mov
test
hlt
mov
adc
(bad)
repnz
rcr
test
stc
push
pop
push
clc
push
jne
(bad)
adc
cdq
mov
pop
adc
jbe
mov
movs
lods
mov
or
es
sub
cdq
in
xchg
dec
in
adc
sbb
rcl
movs
test
pop
lea
and
daa
(bad)
and
xchg
repz
in
es
pop
jg
test
rol
test
push
xor
xchg
and
enter
popa
int3
fwait
cmp
movs
in
push
xor
shr
ins
inc
adc
pop
jnp
aad
sbb
jns
or
mov
jno
inc
cmp
aaa
jb
je
cli
femms
out
jge
add
popf
pusha
stc
cmp
jmp
jle
cmp
in
aam
mov
(bad)
sub
jo
stos
add
rcl
add
cdq
mov
cmp
dec
clc
arpl
mov
cmp
cmps
(bad)
iret
call
inc
ins
sub
ins
dec
pushf
mul
push
add
jne
mov
(bad)
popa
aas
nop
stc
ret
dec
sub
jecxz
lahf
xor
add
int3
inc
shr
push
aaa
xchg
out
mov
xchg
aad
or
outs
js
push
pop
jg
out
jmp
push
(bad)
xchg
jle
call
test
ficom
and
(bad)
sbb
and
stc
mov
rcr
mov
ret
mov
out
pop
or
push
and
outs
xor
and
xchg
popf
cmc
mov
fucom
repnz
mov
in
mov
cld
inc
es
mov
test
inc
call
bound
adc
repnz
nop
addr16
mov
fisttp
ret
jmp
ins
fs
bound
js
cmc
sub
push
xchg
add
push
cmps
imul
push
mov
lea
(bad)
mov
(bad)
mov
sub
sahf
push
div
mov
sbb
cdq
fcmovbe
sub
inc
scas
mov
inc
xor
push
out
adc
arpl
add
add
dec
ins
inc
rol
loope
sub
test
dec
test
add
inc
pmulhw
dec
dec
mov
pop
repz
dec
or
sbb
(bad)
and
inc
or
rcr
or
push
push
(bad)
dec
pop
xchg
mov
sub
(bad)
ins
inc
aas
(bad)
jle
push
in
jno
xor
or
(bad)
sub
adc
jnp
jbe
cmp
movs
aas
push
int
sub
out
pop
pop
jbe
std
xor
push
lahf
xchg
scas
lods
or
es
ds
and
fld
in
std
pop
mov
or
retf
test
rol
ret
les
sbb
or
xchg
stc
xlat
icebp
ret
pop
sahf
mov
rcr
fild
icebp
cmps
and
cmps
repnz
enter
or
aam
test
mov
xor
dec
pop
pop
mov
mov
jbe
add
leave
inc
mov
mov
jo
sub
iret
adc
cmp
addr16
jo
into
lods
std
dec
out
mov
fimul
cli
repz
jecxz
js
ret
je
movs
rol
in
and
dec
xchg
popa
mov
dec
jp
xchg
lods
lods
cmp
out
sbb
shl
sub
or
fild
mov
fst
xlat
ins
inc
out
rol
dec
stos
or
cmp
jne
inc
addr16
into
push
adc
inc
clc
xor
push
cmc
mov
loopne
jmp
push
mov
jge
outs
bound
sar
out
not
xchg
test
shl
pop
inc
int
bound
mov
aaa
or
adc
and
cs
outs
xchg
popa
xlat
cmps
or
cmp
repz
(bad)
jns
popf
stos
jg
test
push
sahf
in
jecxz
cld
lahf
jg
adc
aaa
out
add
fdivr
fs
les
cmc
cli
movs
jp
add
dec
push
push
xchg
dec
outs
sub
jl
inc
pop
ret
mov
fst
daa
out
cmp
jp
cmp
xor
push
aam
pop
adc
mov
leave
push
cmp
cmp
dec
fisub
mov
icebp
jmp
mov
xchg
mov
call
test
dec
int
out
cwde
outs
jbe
mov
adc
sub
movs
lock
sub
xor
xor
outs
add
xor
jns
ret
retf
cmc
ja
xchg
mov
add
test
arpl
sub
arpl
xor
adc
or
cld
ins
cmp
push
cmp
jecxz
mov
inc
test
(bad)
cli
pop
sub
and
lea
outs
and
cmp
test
icebp
cmp
fidivr
inc
test
push
push
(bad)
loopne
fisttp
test
mov
sbb
test
popa
push
ficomp
push
(bad)
cdq
mov
jb
(bad)
mov
mov
fsub
fst
xchg
inc
and
loop
push
imul
in
cdq
jbe
cmp
(bad)
pop
in
adc
dec
out
xchg
push
in
or
cmc
cld
je
adc
add
and
dec
loop
xor
or
mov
mov
dec
mov
js
xchg
(bad)
cld
xor
mov
lods
mov
jo
cld
shr
inc
clc
sbb
sub
cmps
mov
int3
pop
test
out
cmp
sub
popa
sbb
xchg
and
xor
pop
push
mov
neg
xor
push
jl
sbb
dec
mov
aaa
mov
shl
ret
pop
sub
pop
sar
push
add
jle
mov
inc
ret
fisubr
das
sub
cli
ret
sbb
dec
lods
sub
push
sub
sbb
inc
sbb
sub
rol
push
(bad)
mov
cld
jge
mov
pusha
shl
mov
int3
es
mov
or
and
lock
js
shl
pop
pushf
dec
cmp
aad
xchg
inc
cdq
adc
mov
shl
and
mov
dec
mov
out
repnz
xchg
push
mov
mov
cmp
jge
test
jg
adc
or
fs
dec
call
sti
aad
sahf
into
aam
cmp
xlat
jl
les
es
aaa
jmp
clc
pop
std
pop
mov
outs
mov
or
sub
xchg
rcr
pop
out
and
test
jl
and
lods
inc
inc
mov
fist
add
clc
sub
and
pop
pop
and
les
jmp
sub
lods
in
stos
inc
or
mov
pop
jno
daa
ins
xchg
cmc
fwait
inc
lds
repz
and
add
xchg
mov
sbb
jne
dec
fsub
or
(bad)
mov
jae
shr
cmp
nop
in
fstp
xchg
fild
and
xchg
add
mov
or
and
xchg
clc
xor
(bad)
fmul
lds
inc
clc
cmp
repz
not
lock
aaa
xor
imul
add
(bad)
jl
lods
or
inc
mov
rcl
shl
mov
or
cmp
and
mov
dec
mov
adc
mov
pushf
test
mov
lahf
mov
sbb
mov
cmps
aaa
in
int3
mov
mov
jno
ror
inc
retf
or
movs
aam
lods
test
out
(bad)
xor
push
cld
pop
icebp
std
xor
add
and
movs
in
lds
test
dec
or
or
inc
mov
cld
loopne
ret
rcl
bound
cdq
inc
xchg
(bad)
aam
pop
mov
dec
sbb
mov
mov
cmp
out
mov
xor
dec
in
sub
xlat
shl
clc
fst
mov
repz
adc
fwait
outs
pop
or
repz
ins
mov
and
lea
je
popf
jl
pop
pop
xor
into
cmp
lock
(bad)
inc
sub
arpl
pop
mov
xchg
shr
mov
sub
aam
push
xor
pop
pop
jmp
test
dec
daa
imul
cli
data16
sbb
xchg
cmc
dec
cmp
repz
pop
ret
jecxz
stos
mov
mov
sbb
push
imul
dec
dec
(bad)
adc
and
jmp
mov
cli
mov
bound
jg
sub
sub
setb
jb
add
fxtract
js
adc
pop
cmp
add
fild
jno
les
add
sar
sub
dec
sbb
fsub
data16
inc
jno
aad
xor
add
aam
out
pop
aad
jmp
jo
xchg
lods
sub
inc
retf
or
mov
dec
cld
mov
sub
add
xchg
arpl
in
dec
sbb
cmp
rcr
loop
pusha
adc
ret
adc
rcl
push
sub
push
clc
push
inc
fs
adc
jae
pop
xor
enter
lahf
and
lea
or
aam
push
mov
ds
mov
xor
pop
cli
xchg
(bad)
fidivr
push
sbb
inc
mov
loop
pushf
or
or
cli
sbb
xor
test
popf
cmp
pop
shr
into
out
jo
mov
lea
jb
das
rcl
aad
dec
inc
aam
lods
pushf
adc
mov
jbe
push
fsubr
inc
mov
imul
pop
jge
hlt
dec
jle
sub
xor
out
sbb
fs
pushf
dec
fistp
outs
mov
add
stc
imul
jmp
sub
add
push
pushf
jno
out
sbb
ror
or
cs
out
jmp
das
cmp
aad
pop
out
or
jle
std
jnp
mov
cmp
mov
cld
lds
cmp
(bad)
hlt
push
int
or
inc
stos
shl
sti
or
scas
dec
cmp
adc
or
lock
mov
(bad)
arpl
cmp
or
ret
mov
adc
push
into
add
and
add
ss
bound
enter
(bad)
in
xor
shl
jns
ror
iret
xchg
jmp
xor
adc
test
cmp
icebp
ret
inc
cdq
jp
add
lock
(bad)
pop
cdq
mov
mov
xor
mov
or
ror
popa
movs
(bad)
ss
mul
repnz
shl
aas
mov
movs
mov
xor
sahf
cmps
aaa
and
add
xchg
cmp
xchg
push
ror
cmp
les
pusha
xchg
cmp
fwait
retf
fimul
inc
add
jecxz
xchg
mov
shl
repnz
pop
add
(bad)
cmp
das
aam
dec
jmp
push
rcl
fst
retf
test
iret
inc
(bad)
cmp
(bad)
test
push
jo
popa
push
ficom
sbb
or
es
pop
mov
stos
movs
out
cld
gs
sub
dec
xchg
cmc
pop
adc
pop
xchg
dec
cwde
add
fwait
add
mov
inc
cwde
sub
cwde
xchg
daa
das
ja
sbb
lods
mov
inc
push
mov
dec
in
push
cmp
pop
cs
(bad)
leave
cmp
cmps
ret
out
fnstenv
test
fld
adc
xchg
sbb
push
sbb
push
aas
std
mov
mov
and
mov
cmp
in
dec
(bad)
fimul
jge
pop
loop
js
not
movs
push
push
mov
fisub
adc
mov
xchg
push
sub
mov
cmc
out
mov
call
dec
es
mov
leave
out
adc
and
in
test
mov
dec
das
jae
out
xor
push
jl
pop
out
sub
movs
sbb
pushf
cld
ret
xchg
or
movs
jl
pop
dec
mov
jbe
pop
test
and
test
jmp
pop
pushf
adc
clc
shl
sub
call
and
fisttp
inc
inc
push
sub
jnp
cmp
fwait
mov
das
inc
movs
and
mov
test
mov
scas
pop
mov
xor
sub
cld
pop
js
int3
repz
(bad)
ja
sbb
bound
xchg
jbe
mov
cmp
rol
jl
or
daa
sahf
inc
hlt
sub
push
xor
mov
inc
push
loopne
jge
cmp
mov
xchg
std
out
popf
add
sub
sar
fdivr
and
mov
add
inc
fstp
mov
cmp
mov
or
test
mov
rcr
jp
adc
pop
shl
lods
adc
pop
and
cmps
retf
jb
sub
daa
add
xchg
xchg
push
inc
jg
xchg
adc
lds
(bad)
bnd
gs
pushf
movs
mov
ret
add
mov
cld
sahf
leave
inc
lods
xchg
adc
cmp
sub
cmp
pop
cld
jo
(bad)
push
cwde
cmp
cmps
mov
jecxz
sub
inc
imul
loop
pop
retf
lahf
jns
mov
inc
xchg
dec
mov
dec
clc
mov
adc
mov
jne
in
inc
mov
sub
rol
repz
dec
cmp
pop
sbb
loope
adc
movs
push
pop
pop
fidiv
sbb
dec
loop
mov
adc
in
or
div
movs
xchg
ror
mov
sbb
jl
sbb
add
fs
test
jmp
push
ja
mov
or
inc
sbb
sub
fbstp
jbe
cmp
xchg
fsubr
jl
nop
icebp
arpl
mov
outs
mov
test
in
ins
test
rol
jecxz
shl
call
aad
and
cmp
dec
push
jmp
mov
pop
mov
sbb
jge
neg
pop
sbb
out
mov
js
mov
jmp
cdq
(bad)
push
mov
scas
int3
das
jo
pusha
xor
(bad)
retf
xchg
sub
jmp
pop
mov
addr16
pop
les
mov
jl
mov
leave
add
dec
push
inc
test
rcl
xor
inc
test
xor
jne
or
loop
out
dec
mov
inc
ds
enter
mov
dec
addr16
enter
mov
pop
and
pusha
inc
xor
or
adc
push
imul
ficomp
jno
iret
movs
mov
sahf
sbb
sbb
mov
int
dec
cmp
push
cmp
pop
movs
push
std
push
retf
jmp
sub
pop
mov
mov
pop
in
int
(bad)
fwait
popf
or
bound
inc
and
ret
adc
dec
outs
ret
repz
retf
mov
xor
or
jmp
or
pop
mov
pop
(bad)
sub
in
sbb
cdq
mov
add
daa
mov
into
mov
xor
mov
sahf
mul
dec
mov
push
jno
sub
jmp
cmc
stos
mov
test
stc
mov
ret
xchg
push
and
inc
jmp
clc
push
jo
outs
cwde
add
xor
xor
pop
jp
mov
adc
dec
xchg
stos
or
outs
fs
jbe
fwait
shl
in
add
aas
mov
adc
xor
das
popa
mov
test
(bad)
xchg
rcl
jecxz
ret
sub
dec
idiv
ror
sar
mov
sub
(bad)
shl
sub
sbb
inc
inc
fcmovbe
jmp
nop
xchg
hlt
xor
outs
scas
push
mov
int
xor
les
neg
out
pop
inc
sbb
ins
retf
add
mov
xchg
pop
cmc
xchg
mov
call
out
out
dec
jle
cmp
repnz
jb
mov
sub
mov
adc
retf
dec
jns
addr16
jmp
(bad)
add
mov
scas
pop
mov
xchg
icebp
rol
test
and
jae
inc
and
fdiv
xor
mov
jge
xor
and
ja
cmp
cwde
sbb
jb
jecxz
fwait
add
push
dec
push
mov
(bad)
in
mov
cmp
lahf
add
pop
cmp
lds
adc
xor
pop
gs
xchg
mov
add
pop
sbb
int
out
jnp
stos
or
iret
out
sbb
fsub
jbe
push
xchg
and
pop
push
mov
mov
mov
inc
out
xchg
mov
pop
repnz
mov
shl
sub
push
xchg
jmp
add
pop
xor
adc
dec
lds
loop
imul
mov
fistp
cmps
outs
cli
xchg
add
test
imul
xchg
sbb
mov
cmp
into
mov
jmp
adc
into
mov
test
jbe
xor
cmp
ja
push
imul
ror
aad
xor
out
imul
xor
push
loope
rcr
cwde
rcl
jecxz
ss
cmp
mov
test
pop
jno
outs
ss
dec
scas
mov
or
rcl
enter
pusha
dec
out
in
pop
lock
int3
sub
cmps
mov
ins
cli
int
sbb
gs
push
stc
(bad)
mov
pop
scas
inc
xchg
ror
neg
inc
rcr
dec
ret
int
xor
fistp
stc
sub
sub
or
shr
inc
xlat
movs
dec
push
es
sub
dec
sub
dec
aad
inc
and
cmp
aas
popa
sti
outs
(bad)
test
jecxz
sub
sbb
dec
outs
clc
xchg
or
push
pop
(bad)
nop
std
push
inc
mov
icebp
(bad)
call
ffree
inc
stos
dec
or
jno
or
call
sti
in
loop
sub
into
in
cmp
pop
mov
out
(bad)
in
out
outs
dec
add
sub
mov
in
xchg
das
cli
int
mov
ds
arpl
add
sub
retf
inc
(bad)
call
xor
out
jns
cmp
jmp
int3
shl
in
push
stos
mov
out
push
xor
adc
cli
jle
stos
iret
movs
neg
xchg
sub
cmp
retf
mov
adc
scas
(bad)
js
(bad)
jp
mov
sahf
sbb
iret
and
mov
pop
jecxz
sub
xchg
cmp
scas
jg
out
dec
sti
(bad)
test
xchg
data16
sub
mov
push
aam
mov
lods
or
inc
clc
xchg
jle
cmc
test
xor
cmp
test
xchg
jmp
test
dec
adc
leave
sbb
sub
dec
push
mov
in
xchg
mov
xchg
push
sub
jbe
icebp
pop
adc
mov
pop
in
int3
mov
cmc
or
std
test
dec
inc
int
pop
loop
xor
cld
test
sub
or
mov
movs
pop
cmc
jns
and
add
ss
pop
mov
test
into
dec
in
dec
in
mov
in
out
push
test
fstp
sbb
and
test
daa
push
jns
(bad)
imul
je
in
mov
sub
xor
adc
aas
jl
fld
jmp
mov
(bad)
push
or
jmp
dec
cmps
pop
jecxz
inc
or
loope
bound
sub
jbe
cmp
mov
cli
or
sub
loope
xor
jmp
loop
cld
dec
aas
cmp
xchg
leave
jl
dec
aam
mov
cmp
jb
cmp
fwait
or
(bad)
mov
popa
push
scas
mov
push
test
adc
xor
hlt
xchg
clc
bnd
mov
aas
xchg
mov
iret
xor
shl
lea
or
xchg
popf
fsubr
mov
loope
clc
lea
(bad)
out
cmp
ins
pop
mov
call
imul
mov
dec
arpl
or
jnp
fidivr
and
out
mov
push
pop
sub
cmp
popa
movs
xchg
mov
add
pop
dec
push
and
fidivr
ja
scas
loope
or
aas
int
addr16
(bad)
fistp
jmp
fs
imul
adc
xor
or
mov
push
(bad)
jmp
inc
xchg
sub
test
xchg
(bad)
jae
in
pop
outs
push
(bad)
cmp
push
add
cmp
dec
push
sub
add
pop
mov
jne
fdiv
xlat
shl
and
mov
mov
fwait
and
mov
push
and
icebp
cmp
cld
fcom
jb
or
bound
sbb
outs
and
ja
cwde
jno
inc
test
jl
pop
mov
pop
ins
jno
icebp
cmp
xchg
and
cmps
xor
inc
cwde
mov
mov
inc
shr
mov
sar
js
sti
and
std
je
or
repz
ror
fistp
ret
xchg
mov
cmp
jle
mov
and
xchg
neg
push
(bad)
addr16
adc
inc
and
pop
and
es
loopne
ins
pop
(bad)
cmp
cs
(bad)
scas
cli
pop
and
sahf
pop
aad
pop
mov
movs
rcr
cmp
out
test
in
or
xchg
inc
jne
mov
test
or
rcr
sbb
sbb
pop
sub
cmp
jl
and
nop
jecxz
dec
xor
mov
push
lods
loopne
cmp
cmp
fcmovu
mov
and
or
ins
push
mov
cmp
and
data16
fadd
fs
div
xchg
or
mov
or
xchg
sub
mov
xchg
ins
push
out
xchg
xor
sub
jne
xchg
call
push
jb
jnp
mov
mov
sar
xor
sbb
sub
out
sar
pop
sub
cdq
cmc
mov
fnsave
sub
in
stos
aaa
push
fs
dec
mov
test
push
dec
cmp
mov
out
hlt
mov
ins
mov
test
daa
mov
(bad)
loop
jmp
jb
cmp
mov
pop
stos
imul
clc
mov
mov
mov
dec
ins
and
mov
push
cmp
ins
dec
test
cmps
int
mov
mov
aaa
test
lahf
idiv
push
and
mov
shr
lahf
mov
mov
push
mov
pusha
cmp
repz
stos
xor
and
xchg
lods
sub
mov
dec
outs
stos
jg
mov
mov
mov
inc
mov
repnz
shl
nop
in
adc
pop
test
fidivr
xor
div
popa
(bad)
lds
ret
std
aad
fadd
fwait
cdq
es
xor
mov
mov
scas
mov
fs
sbb
xor
push
dec
ins
xchg
cmps
repz
jae
adc
cmp
test
dec
xchg
scas
fcom
sbb
shl
add
je
jnp
rol
inc
push
fadd
push
inc
ror
push
fucomip
pop
pop
dec
xor
out
xlat
fcmovnbe
lea
and
push
ja
hlt
xor
sbb
cdq
out
and
arpl
into
sbb
jle
pop
dec
cmc
neg
call
cmp
lods
add
jmp
adc
xlat
les
jno
lods
(bad)
cdq
rcr
jle
xchg
xlat
sbb
mov
mov
jp
fwait
sub
jp
xchg
add
inc
scas
dec
outs
mov
shl
mov
fs
das
inc
xor
push
add
pop
fstp
or
and
retf
push
jecxz
lods
adc
shl
fbstp
stos
dec
adc
out
sub
stos
movs
xor
pop
lods
xchg
(bad)
and
xlat
fwait
sar
fimul
stos
icebp
int
outs
ret
jae
mov
and
xor
inc
fisttp
shr
fdivr
xor
sar
mov
jl
iret
in
mov
push
cmp
xchg
retf
gs
adc
nop
aam
ss
dec
pop
xchg
retf
jle
aaa
(bad)
inc
or
cli
mov
pop
jne
sub
inc
mov
test
dec
push
push
mov
and
mov
and
inc
dec
jno
and
lock
inc
mov
adc
push
js
loop
cmp
cmp
in
adc
and
mov
mov
push
xchg
push
test
jmp
out
add
pop
adc
sbb
clc
mov
mov
and
imul
dec
add
mov
hlt
shr
or
and
jo
rol
mov
js
ret
or
daa
jo
mov
jecxz
sub
in
popf
mov
mov
mov
mul
outs
push
push
fild
xchg
lods
in
out
pop
shl
shl
mov
cmp
inc
imul
and
xchg
mov
mov
pop
or
gs
jno
mov
out
std
xor
adc
loop
push
adc
inc
jbe
jmp
jge
sbb
imul
mov
dec
mov
push
cmp
add
clc
leave
dec
pop
and
jnp
xor
mov
or
adc
rcr
mov
pop
inc
jo
stc
dec
(bad)
movs
adc
and
dec
test
or
repz
imul
inc
adc
push
xor
fisttp
mov
inc
jbe
retf
xlat
cmc
xchg
inc
pop
push
cmp
inc
and
or
inc
sub
lea
jmp
fldenv
dec
ins
pop
es
daa
and
test
mov
jecxz
pop
repz
sub
retf
or
push
add
int3
cmp
repz
stos
outs
jmp
in
cmps
push
pop
sar
retf
inc
aas
pop
es
loope
pop
jle
mov
(bad)
rol
cmp
mov
retf
mov
nop
fwait
mov
int
xchg
push
movs
pop
jmp
xchg
jae
dec
mov
jmp
sbb
or
jnp
stc
mov
jo
scas
xor
aam
out
div
pushf
lock
and
lahf
dec
adc
xchg
inc
fbld
mov
and
(bad)
and
dec
ret
add
sub
mov
mov
xor
inc
adc
add
and
hlt
cmp
dec
adc
je
in
mov
les
out
xor
lds
push
(bad)
repnz
mov
or
mov
movs
lahf
in
cdq
addr16
mov
pushf
cmp
and
fs
(bad)
mov
and
call
pop
xchg
call
imul
shl
loopne
xchg
shl
xor
pop
push
sbb
clc
int3
mov
stos
sub
adc
mov
iret
ret
jo
in
jmp
add
jae
imul
or
int
and
fild
mov
xchg
jl
pop
add
out
pop
mov
add
dec
sub
into
sub
sar
and
sub
xchg
cmp
push
inc
pop
add
xchg
sbb
inc
xor
mov
mov
mul
push
sar
sbb
rcr
mov
lods
cdq
push
aaa
dec
fdivr
jo
push
daa
mov
mov
pop
test
or
rcr
push
mov
mov
and
push
outs
rcr
mov
xor
daa
add
pop
mov
jns
xchg
inc
data16
js
or
wrmsr
je
mov
and
inc
dec
push
cmp
(bad)
jne
cmp
adc
cmps
inc
or
jg
(bad)
les
in
adc
pop
repz
fdiv
adc
or
clc
(bad)
pop
out
inc
test
ret
add
mov
shr
lock
jns
and
scas
sbb
inc
aas
movs
and
in
imul
inc
push
mov
pushf
outs
loopne
ss
mov
int
ss
and
daa
cmp
mov
(bad)
mov
aas
(bad)
adc
shl
mov
outs
xor
jno
inc
inc
mov
ss
fs
lea
test
jb
sbb
sbb
mov
test
and
aaa
jne
mov
out
mov
imul
loope
cmps
adc
test
mov
xor
arpl
clc
popa
(bad)
cmp
pop
fidivr
pop
adc
mov
pop
xchg
retf
scas
jo
pop
les
jnp
lods
mov
pop
jmp
(bad)
test
mov
mov
push
inc
inc
mov
dec
inc
daa
and
jecxz
out
int
push
and
adc
sub
aas
js
loopne
mov
sbb
add
scas
popf
les
jecxz
pusha
shl
xlat
(bad)
(bad)
sub
xchg
ficom
jle
ficomp
(bad)
fidiv
jg
int3
cmp
sti
sbb
sub
imul
jo
add
imul
jne
cli
jmp
pop
mov
je
in
mov
push
sbb
sub
fsub
inc
pop
jbe
push
pop
ficom
push
retf
sub
fld
cmp
inc
add
pop
rcr
sar
sbb
jno
movs
mov
mov
push
xor
jo
mov
imul
dec
ret
inc
jmp
std
or
int3
xchg
mov
cmp
add
adc
mov
add
int
call
shr
out
lods
pop
(bad)
scas
(bad)
and
mov
aas
or
pop
lock
jne
imul
mov
cmp
mov
dec
arpl
ret
fisttp
ins
or
jle
and
sub
jl
mov
movs
sbb
jecxz
cmp
and
fwait
push
jae
stc
icebp
rcr
or
(bad)
loopne
stc
ss
sub
xor
out
xlat
xor
ret
cmps
in
push
jp
in
push
es
cmp
xor
shl
jge
les
and
fnsave
mov
xchg
movs
xchg
nop
sbb
call
and
mov
inc
(bad)
inc
mov
sub
sub
in
adc
aad
pop
lods
cwde
out
inc
movs
dec
inc
int3
mov
aam
sbb
sahf
sbb
loopne
aam
pshufw
and
out
xchg
inc
adc
xor
inc
call
mov
inc
or
xor
jp
mov
jmp
in
adc
outs
in
std
and
mov
mov
call
and
loope
sbb
lods
mov
mov
mov
pop
cmp
in
or
adc
jecxz
loope
xchg
cld
push
xchg
cwde
and
sub
lods
jmp
movs
add
jg
xchg
dec
and
repz
dec
inc
enter
mov
add
es
iret
mov
push
inc
shl
and
mov
fsub
imul
cmp
ret
mov
data16
scas
fdivr
shl
inc
out
xchg
int3
xchg
and
test
icebp
scas
or
jmp
mov
jmp
aam
pop
call
mov
in
rcl
cli
sbb
pop
inc
mov
test
sbb
test
fcmovbe
or
(bad)
pop
pop
mov
cli
add
out
stos
mov
lahf
dec
xor
ret
stos
push
cmps
lea
xor
ja
imul
into
shr
pushf
mov
cmp
fs
stos
ror
dec
scas
jnp
or
ret
aam
rcl
pop
sti
push
adc
inc
in
inc
ret
push
sbb
pop
lods
adc
movs
pop
shr
enter
jno
les
mov
xor
inc
mov
fnstcw
js
call
outs
test
int3
mov
addr16
jae
mov
inc
mov
imul
add
stos
pop
adc
into
fild
inc
movs
repnz
mov
in
push
or
sub
fisubr
stos
loop
mov
je
mov
push
test
xchg
sub
leave
adc
inc
or
adc
movs
sti
jb
and
or
mov
lock
xor
cmc
jo
sub
dec
leave
adc
hlt
outs
xchg
movs
shl
xchg
push
jmp
test
cmp
and
loopne
jno
popf
push
adc
xchg
aas
pusha
in
(bad)
lods
mov
xor
pop
popf
sub
std
mov
scas
mov
sbb
leave
stos
mov
dec
sub
scas
ror
stos
pushf
js
sub
jp
movs
sbb
cld
int3
inc
or
adc
aam
aaa
dec
or
push
sbb
in
xlat
mov
or
sahf
xchg
fwait
mov
fstp
sti
sbb
movs
cmp
popa
pop
cmps
sbb
pop
inc
xchg
mov
repnz
mov
ss
push
inc
cmp
jg
ins
pop
retf
or
lahf
(bad)
pop
xlat
push
int
out
cmc
push
sbb
add
mov
ins
jg
(bad)
leave
add
aam
sub
cld
test
cmps
and
iret
push
sub
push
cld
outs
push
add
gs
fwait
popf
or
sub
call
call
or
sub
or
popf
data16
jmp
jmp
inc
or
pop
(bad)
mov
add
inc
retf
loop
fdiv
pop
(bad)
leave
lea
mov
mov
jl
fst
test
cmps
dec
cmps
pop
mov
dec
push
enter
test
cmp
inc
ins
loope
xor
mul
jnp
fild
in
push
(bad)
xor
and
cmp
xchg
iret
jno
add
cwde
and
mov
sti
mov
push
adc
fs
imul
sub
test
xchg
jo
shr
cld
dec
jmp
mov
ss
ss
addr16
retf
adc
cli
fistp
pop
cmp
mov
imul
test
pop
jge
popa
pop
xchg
leave
bound
dec
scas
cli
mov
or
xchg
out
aas
or
dec
mov
sbb
arpl
or
pop
aam
into
div
pop
int
sub
xor
fcomp
adc
dec
add
cli
fmul
jge
test
adc
ins
in
jae
fcmovnb
jp
push
and
ins
shl
mov
ds
aas
mov
in
jo
jne
mov
bound
fiadd
in
jo
mov
xchg
and
imul
pop
xor
(bad)
jnp
mov
pop
push
cmp
jecxz
mov
cmp
inc
unpckhps
sbb
jmp
xlat
cmp
cmps
test
mov
aaa
mov
cmp
je
lock
xchg
fsub
add
es
cli
(bad)
sbb
mov
xor
repnz
jge
aaa
push
dec
xchg
(bad)
adc
dec
or
cmp
jle
ror
aam
mov
or
enter
leave
push
or
test
dec
xor
ds
mov
and
ins
lahf
add
adc
mov
out
out
(bad)
xchg
neg
push
jnp
retf
xchg
cmp
test
icebp
das
and
lea
dec
jbe
add
cli
xchg
or
inc
add
loop
dec
push
sbb
out
daa
add
push
mov
arpl
xchg
popf
movs
or
les
mov
sbb
and
jp
popa
sbb
and
dec
fld
test
add
pop
push
adc
ja
mov
xchg
mov
mov
adc
jecxz
in
mov
popf
sbb
call
push
arpl
xchg
mov
fcmovnu
scas
jle
push
fs
aam
mov
push
inc
iret
add
mov
jge
cmp
xor
sahf
pop
iret
jl
mov
in
test
mov
or
sahf
mov
mov
pop
dec
das
or
jge
je
fimul
sub
xor
das
movups
cdq
(bad)
mov
xchg
arpl
and
jbe
(bad)
out
ret
imul
sub
cs
dec
cmps
loopne
sbb
and
xor
mov
and
out
in
js
sbb
or
and
xchg
add
rep
into
jle
cld
mov
ret
sbb
not
fsub
xchg
inc
sbb
jecxz
pop
sbb
data16
sub
popa
cmp
(bad)
daa
jl
cwde
add
call
mov
xchg
imul
and
jns
lock
scas
sbb
stos
jp
aas
pop
popf
xchg
jmp
adc
stos
gs
jg
int3
js
dec
stc
mov
jbe
fisttp
inc
xchg
dec
cmps
jg
pop
das
push
or
cmps
xor
xchg
sub
jnp
out
pusha
popf
or
inc
out
mov
mov
jge
cmp
add
lods
das
pop
pop
imul
and
cmps
xchg
pusha
xchg
icebp
test
mov
pop
(bad)
popf
jge
jmp
fimul
jne
xchg
int
xor
cmp
cmp
add
xchg
xchg
loopne
jge
inc
add
jl
mov
xor
ss
or
ret
cmps
ret
pop
push
ins
call
(bad)
hlt
and
push
pop
es
jae
sub
lods
jmp
out
and
addr16
mov
mov
sahf
jg
or
xor
sbb
xlat
or
retf
mov
pop
lods
test
popf
dec
cmp
lock
add
cdq
inc
push
dec
(bad)
scas
jle
inc
add
mov
ds
call
mov
jp
sbb
xchg
or
inc
arpl
call
cdq
rol
xor
jge
push
fistp
jb
add
cmps
call
out
xchg
pop
adc
retf
mov
test
(bad)
mov
mov
and
out
push
cwde
adc
scas
push
mov
int3
xchg
cmp
inc
cmc
xor
mov
imul
out
dec
popa
inc
sub
mov
lahf
mov
sub
fldenv
arpl
adc
mov
push
jno
or
es
fs
ins
stos
jb
mov
or
mov
adc
and
pop
lahf
adc
cmps
(bad)
imul
nop
stos
and
xchg
jns
cmps
mov
sbb
lock
xchg
int3
xchg
popf
mov
test
sbb
mov
pop
test
pop
loopne
or
aam
dec
out
push
cmp
push
dec
(bad)
mov
or
jg
cmp
lahf
(bad)
call
stc
mov
lahf
dec
or
pusha
adc
movs
xchg
xor
add
aaa
in
jns
scas
jnp
cmp
fisub
fnsetpm(287
out
loop
mov
pop
mov
aaa
pop
hlt
int3
enter
jb
dec
mov
sub
ins
xor
in
fdivr
sahf
(bad)
(bad)
dec
int
fisub
jmp
push
into
dec
retw
or
popa
fstp
clc
lds
js
int
push
adc
call
lock
dec
pop
inc
addr16
mov
mov
rol
dec
and
sbb
or
push
call
jbe
inc
xchg
jmp
mov
xchg
pop
jmp
not
mov
dec
cmp
ds
xor
es
jl
movs
inc
mov
fstp
adc
pop
vmrun
add
cmp
ficomp
cmp
out
ins
and
and
mov
pop
repnz
cli
or
sub
das
xlat
jnp
je
push
sub
lods
push
sbb
push
xchg
pop
xor
pusha
cdq
mov
in
pop
int
jp
popaw
sar
pop
repz
adc
dec
cmp
pop
mov
mov
loop
(bad)
cld
fld
data16
push
or
stos
dec
call
call
inc
push
shl
xlat
and
jns
aam
dec
adc
sbb
inc
push
fild
mov
jnp
push
inc
xor
pop
into
add
adc
cwde
fwait
leave
retf
pop
cmp
retf
dec
add
mov
xchg
ins
and
mov
das
ins
mov
push
ret
push
push
shl
lods
addr16
cmp
pusha
xor
loopne
pop
sub
xchg
and
scas
aad
sub
push
mov
imul
ret
(bad)
fcom
jp
pop
mov
dec
or
mov
inc
sbb
mov
test
dec
pusha
push
ds
int3
push
add
bound
ja
enter
add
push
repz
aas
xlat
adc
fcmovnu
cmp
sbb
mov
cmp
loopne
aas
sbb
jnp
cs
push
lds
xchg
mov
shl
pop
arpl
and
ret
arpl
pop
sti
cmp
retf
lock
loope
loope
out
sbb
or
sbb
adc
rol
mov
out
pusha
test
jno
pusha
jmp
xor
clc
fdivr
jns
cli
cmp
cmps
and
or
(bad)
pusha
out
dec
mov
mov
cmp
(bad)
pop
pop
xchg
mov
pop
pop
cmps
mov
cld
sbb
(bad)
fwait
mov
pop
popf
shl
lods
dec
mov
adc
or
dec
xchg
jle
mov
mov
mov
jle
dec
movs
mov
mov
int
adc
jmp
cmp
push
mov
imul
fcomp
(bad)
into
pop
clc
cwde
inc
push
cli
mov
(bad)
inc
loop
xor
add
adc
outs
adc
rcr
add
cmp
scas
stos
shr
adc
jo
adc
mov
dec
loope
mov
cmp
xor
pop
lds
mov
rol
xchg
call
jns
scas
or
jecxz
not
call
jmp
push
cmps
sti
dec
and
add
(bad)
cmps
call
and
aas
push
jb
pop
mov
cli
adc
out
call
icebp
fucomi
out
xor
mov
jo
pcmpgtd
movs
xlat
xchg
sbb
call
pop
mov
pop
out
push
jns
xor
cld
mov
mov
jb
push
and
cmp
icebp
out
fptan
mov
(bad)
adc
push
rol
mov
outs
mov
mov
mov
push
mov
idiv
add
and
(bad)
mov
mov
xor
nop
repz
sar
out
add
leave
stc
in
dec
push
int
ins
push
pop
jl
aad
pop
inc
imul
mov
mov
mov
scas
(bad)
clc
or
pop
jne
in
sbb
jne
test
fidivr
push
mov
loopne
inc
(bad)
(bad)
mov
cwde
inc
inc
js
cmp
adc
pop
mov
loop
push
xor
adc
retf
pop
sbb
adc
xchg
lds
jbe
add
inc
xor
lea
std
pusha
rcr
jl
mov
hlt
addr16
mov
jmp
or
mov
out
dec
retf
ret
fmul
popa
jp
cmps
movs
jl
popf
and
add
pop
and
inc
push
mov
mov
test
retf
push
jnp
add
cld
jnp
call
dec
mov
ss
jbe
in
push
jmp
mov
jnp
jmp
pop
fwait
sub
inc
jb
cmc
jge
(bad)
outs
lock
movs
imul
adc
xor
mov
push
push
fwait
call
mov
jbe
pop
call
and
jge
xchg
pop
das
pop
out
js
mov
out
jb
mov
dec
pop
xor
xchg
movs
cld
adc
sbb
jno
stc
ss
mov
ins
push
cmp
sbb
and
ss
pusha
movs
cmp
stos
mov
loopne
jne
sti
or
imul
xchg
je
dec
mov
or
fwait
outs
repnz
jmp
cmp
into
sbb
cld
fisubr
push
imul
push
in
test
outs
or
and
fadd
retf
jle
int3
popa
retf
mov
test
sub
retf
or
neg
ins
movs
sub
jne
nop
mov
jmp
dec
dec
repnz
imul
push
pop
push
cmp
or
cs
mov
ds
out
ret
ins
push
addr16
dec
js
(bad)
shl
inc
retf
mov
mov
rcr
xlat
in
cmp
cmc
neg
cmps
add
xor
lock
retf
(bad)
jmp
out
ror
ja
pushf
shl
sub
ror
nop
cdq
movs
ficom
xchg
cmp
(bad)
enter
shl
pushf
aaa
fbld
dec
scas
inc
sbb
clc
mov
sub
sub
pop
mov
pop
mov
aaa
sub
retf
jg
std
mov
cmp
add
xor
cld
dec
sbb
pop
sub
add
fidiv
mov
gs
hlt
(bad)
jmp
inc
pop
and
dec
sub
pop
lods
jnp
out
test
movs
ss
xchg
dec
loope
ins
call
mov
xchg
and
fld
popf
xchg
add
jecxz
and
mov
loope
adc
pop
sub
(bad)
pop
cli
lds
xor
mov
add
or
fs
cmp
arpl
add
adc
mov
push
pop
or
cmp
mov
jbe
jmp
dec
in
push
stos
inc
cdq
imul
xor
call
mov
add
pop
cmps
test
mov
pop
pop
call
mov
ss
sbb
rol
mov
xchg
mov
xor
stos
int
mov
sbb
jne
jle
fisubr
fdiv
mov
std
sub
lods
cli
inc
enter
or
ret
push
ror
ds
xor
lahf
and
mov
fdiv
adc
push
cli
lods
popa
cmp
mov
cli
cs
mov
rcr
lods
add
push
or
push
test
and
mov
test
dec
popf
xor
das
les
fadd
mov
cmps
jecxz
xor
pop
sbb
test
(bad)
and
add
xchg
xchg
imul
stos
xor
add
or
mov
mov
out
lahf
mov
mov
shl
xor
dec
push
cmps
cmp
jle
cmovg
popf
pop
sbb
or
xchg
mov
mov
(bad)
fs
das
cmovp
xlat
aam
inc
inc
jns
in
xchg
das
aam
sar
cmc
mov
(bad)
std
scas
xchg
mov
adc
mov
inc
adc
cwde
js
add
pushf
inc
call
retf
or
test
xchg
mov
in
paddsb
dec
or
push
mov
xchg
nop
not
inc
mov
xchg
fsubr
repnz
jmp
(bad)
fcmove
or
cwde
jb
daa
xor
xchg
sub
shld
mov
fsubr
and
stos
pop
cmp
or
outs
in
cmc
jle
mov
cwde
adc
add
outs
or
inc
nop
loopne
xor
int
aam
sti
(bad)
pusha
(bad)
lea
sbb
cmp
(bad)
rcl
sub
push
sbb
nop
cmp
mov
jge
shl
nop
fcomp
mov
mov
ret
aam
push
rcr
xor
in
(bad)
pop
jmp
pop
add
pop
sub
and
add
add
popa
stc
mov
jb
std
inc
in
call
mov
sahf
loope
mov
dec
mov
test
movs
mov
(bad)
psrlw
push
fst
jecxz
sti
push
sub
ds
imul
repz
scas
test
(bad)
jg
mov
add
ins
stos
mov
sub
in
adc
dec
pushf
shl
scas
inc
pusha
and
inc
fimul
scas
mov
pop
test
jb
or
out
gs
imul
inc
out
xor
adc
inc
jns
ror
mov
add
cmc
inc
fwait
mov
shr
jl
call
int3
or
daa
jno
addr16
mov
in
(bad)
clc
dec
cli
xchg
lahf
test
aam
stos
pop
mov
jo
enter
sub
xor
cld
imul
pop
pop
pop
shr
mov
mov
retf
jmp
sub
hlt
sbb
rcl
mov
sbb
stc
pusha
sti
jmp
push
mov
sbb
push
arpl
sub
call
and
inc
mov
jbe
js
jle
lahf
xor
test
cdq
xchg
and
mov
jg
push
xlat
retf
cdq
(bad)
mov
mov
fisttp
je
mov
xor
into
int
ror
test
sbb
loopne
sub
sub
int3
adc
sbb
pop
loopne
mov
jns
mov
add
push
lock
push
lahf
retf
mov
loope
push
daa
fwait
js
scas
or
(bad)
fdivr
inc
vorps
test
daa
adc
movs
ins
push
or
stos
out
inc
ins
clc
mov
or
xor
mov
jbe
clc
lock
pop
sahf
lds
pop
scas
nop
push
test
push
in
or
sub
sbb
jg
sub
sub
mov
xchg
mov
rcr
test
push
sub
jbe
scas
jecxz
xchg
mov
and
lock
outs
pop
inc
into
pop
sbb
jmp
fwait
and
pop
ins
ins
and
fs
xor
test
mov
push
jns
sbb
mov
out
sbb
or
ds
pop
add
push
cs
repnz
cmp
dec
iret
xchg
adc
mov
cmp
push
retf
dec
sub
sbb
sbb
pusha
test
push
add
leave
stos
daa
mov
ss
mov
pop
cmps
je
dec
xchg
mov
gs
xchg
sbb
push
leave
jae
sahf
and
mov
je
sub
cdq
cmp
ins
fcom
hlt
or
push
sbb
sbb
mov
(bad)
xchg
(bad)
push
test
les
mov
scas
push
clc
dec
jp
push
loope
inc
fist
adc
push
mov
dec
mov
retf
pop
inc
xchg
xor
inc
adc
lahf
pop
out
lods
lock
aad
ret
scas
mov
test
push
and
daa
mov
fwait
mov
and
fdivr
(bad)
pop
out
xor
ret
shl
or
dec
pop
mov
push
push
in
mov
add
sub
retf
mov
push
xchg
mov
push
cmp
fisubr
adc
cdq
push
jmp
fwait
pop
inc
sub
fadd
pop
xor
leave
jbe
dec
and
dec
cmp
jge
sbb
push
fsub
and
jo
cmc
inc
es
pop
in
rcl
pusha
test
pop
and
scas
add
(bad)
sub
shl
mov
pop
repnz
mov
inc
mov
lods
mov
or
mov
adc
sub
je
or
imul
stos
mov
mov
jno
and
cmp
xchg
dec
dec
xchg
jno
fst
or
sbb
sbb
and
ja
pop
fimul
std
stc
adc
sbb
psubusw
inc
hlt
sbb
hlt
nop
sub
mov
movs
pop
inc
xchg
rcr
add
das
ret
sub
mov
mov
ds
mov
and
xchg
pop
(bad)
or
sub
leave
fimul
(bad)
int
sbb
and
xchg
cld
mov
daa
and
enter
jle
push
or
call
mov
and
fcom
and
sub
(bad)
cmps
retf
scas
ds
mov
jecxz
sbb
mov
sub
test
xchg
nop
fxch
ror
shr
daa
dec
aas
add
or
movs
cs
mov
xor
popf
mov
mov
sahf
(bad)
nop
mov
jno
dec
mov
and
dec
xchg
jle
cmove
outs
xchg
shr
in
std
cdq
jmp
jno
ss
je
jmp
xor
out
es
(bad)
stc
add
lods
inc
sbb
or
mov
sub
out
clc
sub
add
pusha
or
cmc
jmp
mov
mov
xor
sahf
ja
rcl
inc
adc
pop
dec
(bad)
cmp
ffree
adc
scas
sub
sbb
pop
add
dec
xchg
(bad)
es
push
mov
call
imul
push
cmp
aas
mov
ret
xor
jae
jle
aas
test
xchg
out
(bad)
xor
clc
fst
adc
in
mov
out
lods
adc
sbb
es
ins
push
xchg
and
jle
ficom
mov
pop
dec
shl
jns
adc
sahf
pop
sub
fdivr
lods
dec
inc
push
data16
(bad)
and
jae
mov
and
push
ret
out
mov
bnd
mov
cmp
aam
rcl
scas
fistp
call
loope
mov
das
pop
(bad)
and
sbb
cmps
js
sub
cli
mov
cmp
icebp
ret
push
lea
mov
inc
int
dec
mov
pop
inc
adc
sub
(bad)
fsubr
mov
fs
(bad)
fild
rol
cmps
pusha
push
pop
dec
outs
cmp
sub
into
dec
stc
push
lea
jp
xlat
mov
push
in
and
mov
pop
and
lahf
xor
jp
ins
jb
push
dec
cmp
mov
in
fadd
xchg
push
xchg
mov
rcl
sahf
pop
jl
shr
xor
fwait
push
and
inc
push
xor
add
out
clc
pop
int3
push
(bad)
mov
lods
push
das
imul
dec
pop
or
dec
dec
icebp
fsubrp
mov
push
adc
cmps
out
push
cmc
mov
icebp
cmp
cmp
xor
mov
inc
sbb
loopne
push
xor
rol
scas
stos
sub
dec
shl
mov
hlt
mov
in
jb
bound
ds
pop
repnz
out
std
das
pop
inc
xchg
test
sub
and
jp
int3
(bad)
das
loope
jb
pop
push
cmp
leave
add
popa
jp
or
movs
mov
dec
je
sbb
mov
cmp
pop
mov
sub
call
cmps
xchg
mov
jnp
and
mov
xor
sar
repz
sub
test
clc
xchg
xchg
add
sti
push
popa
stos
pop
pop
lods
push
daa
dec
test
pop
mul
mov
das
adc
movs
loop
sbb
push
lods
sub
mov
push
mov
cmps
loope
mov
mov
(bad)
in
add
jbe
mov
add
jge
popf
neg
dec
jmp
or
call
xor
mov
add
into
push
movs
pop
mov
je
cmp
sar
pop
je
jg
jae
ja
add
frstor
push
or
dec
mov
mul
adc
sbb
push
inc
retf
push
lds
push
mov
cmp
in
stc
(bad)
rol
lock
cmp
jge
xchg
test
xor
gs
dec
pop
xor
push
adc
icebp
xor
mov
mov
fstp
loopne
xor
xor
pop
adc
cwde
xchg
popf
(bad)
call
jae
mul
dec
mov
pusha
movs
xchg
adc
jne
inc
int3
mov
fdecstp
enter
inc
mov
adc
fld
pop
xchg
int
scas
xor
mov
or
or
push
stc
ss
leave
mul
das
mov
pop
in
add
es
pop
arpl
jbe
shl
pop
es
loope
or
fst
or
sbb
out
dec
fidivr
mov
mov
cmps
mov
adc
lea
mov
jne
sub
fcomp
fnstenv
adc
sbb
jmp
fs
sahf
int
push
push
in
sbb
add
scas
jns
cmp
sahf
add
xor
movs
dec
mov
fwait
and
jno
leave
mov
cmc
xor
dec
xchg
scas
or
pop
jge
dec
outs
mov
cs
sbb
pop
ss
jle
mov
(bad)
mov
inc
dec
mov
les
or
dec
xchg
push
fs
mov
jecxz
nop
push
jb
je
mov
xor
out
sbb
sub
aad
dec
mov
inc
adc
aam
and
push
jg
ins
jle
pusha
scas
imul
popa
sbb
mov
aad
(bad)
test
dec
or
cmp
scas
repz
sti
ds
jp
pushf
inc
mov
test
cmc
xor
jecxz
mov
and
ins
xor
fadd
aad
push
cmp
and
out
push
sbb
sub
xchg
or
cmps
sahf
cld
ja
xor
inc
out
mov
push
add
push
sbb
mov
jmp
daa
mov
cmp
cmps
icebp
jmp
and
sub
push
jnp
mov
mov
push
aad
add
or
imul
cmp
jnp
push
push
popf
sbb
pop
div
dec
jg
daa
fcomi
mov
std
jmp
mov
xlat
or
xchg
cli
les
sbb
cmp
or
in
popa
xor
xchg
loop
mov
sbb
cmp
ins
cmps
jmp
xchg
mov
cmp
push
call
in
scas
dec
and
mov
retf
mov
and
(bad)
sbb
add
jo
push
ror
ja
pop
ror
stos
mov
xchg
sub
or
pop
jbe
cmps
adc
fimul
test
in
les
out
cmp
test
xchg
cmp
inc
retf
adc
sbb
mov
mov
inc
arpl
jb
in
mov
into
add
cmps
nop
lahf
test
mov
push
ret
inc
pusha
inc
leave
adc
mov
push
dec
dec
rol
shl
or
jge
(bad)
push
push
and
addr16
jne
dec
xor
pop
in
int3
out
adc
or
ret
xchg
outs
adc
xchg
or
clc
movs
mov
jp
div
push
cmp
int
mov
push
push
shr
or
dec
(bad)
mov
sbb
movs
add
mov
je
or
jmp
fwait
mov
mov
sub
push
shr
or
mov
cmp
push
arpl
ret
xchg
pusha
repnz
ins
lds
push
ins
outs
test
add
adc
lock
sbb
cmp
dec
scas
xchg
repnz
aam
dec
jge
cmc
fwait
xchg
push
cmp
sub
push
es
sbb
sbb
cmp
push
mov
nop
test
push
mov
cmp
jmp
in
add
outs
jnp
sub
stos
idiv
cmps
xchg
pop
mov
mov
mov
sbb
pusha
sub
or
popa
popa
dec
repnz
sbb
popf
data16
int
mov
xor
jbe
movs
xchg
cmp
pushf
xor
jmp
push
jne
push
jl
sahf
adc
sbb
pusha
sub
xor
jo
mov
jns
mov
sbb
outs
stos
mov
lea
jo
repnz
add
ror
mov
(bad)
pop
(bad)
scas
mov
adc
cmp
add
stos
xchg
ret
pop
scas
imul
in
add
addr16
ret
ins
xchg
(bad)
call
xor
lock
lods
in
loop
and
lea
(bad)
popf
lock
pop
push
push
xor
and
enter
cmps
and
mov
hlt
aas
test
cwde
inc
add
test
mov
std
je
dec
mov
push
push
or
lods
xor
sbb
idiv
cli
mov
ret
aad
jge
xchg
js
cld
fwait
xchg
sbb
(bad)
sbb
mov
outs
add
(bad)
jno
sub
pop
iret
aam
repnz
sub
into
dec
jp
add
mov
cmp
cmp
push
mov
xchg
dec
loopne
dec
(bad)
and
adc
mov
xor
sbb
jns
fdiv
and
pop
add
pop
lods
cli
(bad)
pop
icebp
rcr
lock
fyl2x
cwde
inc
in
mov
jo
in
or
mov
xchg
in
inc
mov
icebp
in
mov
sub
bound
and
adc
hlt
aaa
push
shl
pop
mov
xor
hlt
or
mov
fmul
loope
or
das
js
js
push
fstp
mov
pop
sahf
and
int
addr16
cmp
jmp
push
mov
pop
xchg
mov
xchg
std
add
(bad)
mov
mov
lea
mov
pop
js
adc
sahf
int3
cmp
jne
cmp
xor
mov
mov
add
repnz
inc
ret
mov
loopne
retf
in
add
shl
out
pop
hlt
jne
mov
shr
xchg
xchg
cmc
fucomip
push
cmp
or
into
nop
movs
inc
jo
in
push
fwait
mov
sbb
jo
cli
mov
jmp
adc
or
fcom
stos
in
push
fwait
pusha
sbb
jmp
sub
adc
xchg
or
inc
jnp
inc
jmp
aad
test
and
mov
mov
add
movs
or
pop
push
adc
sub
jmp
mov
mov
cmp
jns
push
in
and
dec
and
add
push
ja
in
sbb
fstp
pop
add
jmp
fs
cld
ret
mov
pop
sahf
mov
pop
cwde
test
jmp
into
out
(bad)
movs
inc
inc
in
xor
je
push
xor
pop
test
pop
pushf
xchg
cmp
inc
repnz
test
pop
std
add
or
mov
scas
dec
js
sti
daa
mov
cmp
movs
cmp
cld
jo
inc
sbb
loopne
and
mov
and
mov
aas
cmps
(bad)
lock
mov
out
dec
sahf
sbb
adc
ror
add
xchg
addr16
gs
or
icebp
mov
jnp
jge
repz
sub
cmp
jg
sub
aad
dec
xchg
repz
xchg
(bad)
xlat
outs
hlt
dec
nop
stos
adc
xchg
pop
mov
lods
loopne
dec
sub
iret
mov
xchg
sub
fist
rcl
dec
or
xchg
xchg
js
and
mov
daa
mov
mov
xchg
ja
dec
add
inc
loope
pop
sbb
and
(bad)
jg
loopne
call
es
jmp
inc
aaa
mov
loope
rol
aas
imul
xor
pop
jl
jmp
sbb
js
sbb
sub
push
add
mov
ins
(bad)
pop
aaa
mov
add
gs
add
jbe
mov
imul
pop
pusha
sbb
mov
xchg
push
xor
aad
or
retf
jnp
in
dec
test
std
dec
jnp
sub
adc
dec
(bad)
or
jb
ins
movs
inc
mov
pop
mov
and
xlat
sti
dec
push
inc
neg
les
rcl
fld
enter
cmps
mov
mov
jmp
pushf
pop
and
push
mov
retf
shl
adc
and
int
dec
sbb
cmps
mov
mov
fst
or
(bad)
icebp
xchg
sub
sbb
lea
(bad)
(bad)
scas
pop
xchg
retf
stos
mov
fwait
or
neg
retf
or
fs
add
je
inc
ret
and
cld
cdq
icebp
ror
(bad)
add
in
test
jmp
adc
sti
and
in
aaa
js
mov
jp
push
mov
mov
rcl
sbb
les
ret
sub
ret
idiv
inc
popa
adc
cmp
in
imul
pop
lods
not
fstp
push
mov
adc
and
sub
and
jmp
cdq
or
jge
xor
cmp
rcr
jb
xchg
mov
push
stos
add
dec
div
inc
inc
ja
push
rcl
mov
cld
fcom
mov
and
push
mov
fnstcw
mov
retf
mov
mov
stos
sub
fdivr
sahf
jb
sub
adc
push
imul
mov
scas
or
into
mov
ret
rcr
push
or
mov
cmp
jbe
lahf
sbb
adc
mov
jae
cmp
sar
inc
aaa
fs
retf
sbb
rcl
jo
mov
jmp
push
aam
add
cwde
mov
ss
es
or
stos
(bad)
lahf
loop
outs
pop
das
jno
iret
imul
xchg
or
pop
test
mov
rol
xchg
jecxz
xchg
(bad)
enter
cmp
and
push
push
adc
adc
mov
or
in
js
push
ret
arpl
(bad)
movs
add
out
popa
dec
cmp
sbb
ds
or
jecxz
push
ret
ins
sbb
jle
ins
push
inc
shl
into
fwait
sbb
add
sub
lock
aaa
mov
popa
xchg
mov
leave
push
push
mov
cld
dec
out
dec
lods
(bad)
sub
mov
inc
(bad)
fsubr
scas
icebp
sub
pop
jb
(bad)
xchg
in
imul
jae
into
fwait
daa
(bad)
out
enter
cmp
xchg
std
pop
clc
je
mov
cmps
xchg
mov
xor
loopne
test
xlat
jnp
loopne
es
out
sub
adc
ss
cli
in
rcr
cmp
mov
xchg
xchg
mov
clc
ins
push
fs
movs
cmp
call
jp
popf
push
enter
xchg
frstor
pop
imul
inc
repnz
xchg
fisub
inc
xor
leave
mov
cli
repz
push
sub
jg
and
imul
push
fwait
adc
jecxz
or
ret
add
push
rcr
pushf
mov
inc
enter
inc
mov
jne
pop
dec
mov
mov
test
pop
xchg
mov
sbb
fldcw
fadd
gs
std
inc
mov
rcr
xchg
mov
sub
retf
push
adc
outs
ds
push
out
pop
in
aaa
lods
stc
inc
retf
mov
scas
mov
js
mov
xor
clc
push
out
repz
dec
push
inc
mov
mov
push
mov
or
inc
push
mov
jge
ja
(bad)
adc
mov
inc
xor
mov
ja
cmps
and
cmp
sbb
pop
imul
retf
push
mov
xchg
sahf
icebp
aam
dec
repnz
mov
pop
repnz
or
cs
bound
sub
push
cmp
push
push
inc
inc
cmc
rcr
data16
or
(bad)
loopne
mov
adc
rcr
mov
lea
jns
ret
and
addr16
imul
dec
mov
aaa
pushf
loop
jl
mov
push
sbb
imul
cmps
mov
xor
xor
jb
(bad)
or
sahf
je
fbstp
mov
hlt
mov
mov
xor
fs
ins
(bad)
mov
mov
and
dec
mov
or
or
cmp
jmp
xchg
cmc
sbb
push
fadd
popa
ds
xchg
adc
xchg
mov
jnp
arpl
add
into
push
aas
outs
push
dec
cmps
sti
xchg
retf
mov
test
int3
cmp
cmp
sub
pusha
sbb
push
jae
mov
mov
push
mov
jp
mov
lea
call
out
fcomp
sti
push
(bad)
cmp
rol
jecxz
lds
mov
adc
jecxz
pop
sub
xchg
inc
mov
jae
pop
nop
dec
jns
xor
jne
jp
aas
rol
pop
dec
nop
idiv
cmp
sub
push
shl
ins
retf
xchg
adc
xor
(bad)
cli
sub
jo
sbb
adc
add
mov
call
je
mov
fwait
cmps
xchg
push
inc
mov
jmp
lods
mov
mov
imul
imul
fdivr
xor
fcmove
xlat
lods
dec
and
inc
movs
push
repz
jno
repnz
outs
xchg
or
push
or
pop
rcr
sbb
out
(bad)
iret
sbb
imul
aas
add
jmp
in
cmp
inc
add
cli
xor
in
mov
movs
sub
mov
mov
and
cmp
arpl
outs
push
fdivr
push
adc
cmp
int
enter
mov
lods
lods
cli
sbb
lahf
cmp
fcom
test
fcmovne
lock
ror
sbb
bound
xchg
sti
jns
jae
ins
test
pop
mov
mov
mov
test
ds
fwait
or
jnp
das
movs
sbb
movs
lods
test
les
mov
sbb
dec
adc
and
mov
out
xor
nop
sahf
and
int3
retf
cwde
leave
loope
enter
pop
cwde
add
cld
iret
cmp
push
call
xor
sti
or
push
mov
scas
pop
std
and
aas
or
pop
lock
push
cld
fldcw
xor
and
mov
out
jno
sbb
push
cmp
and
shl
retf
sbb
into
sar
push
sbb
adc
or
jns
cmp
mov
repz
mov
sbb
cmp
mov
sbb
jl
loope
daa
ja
rcr
aam
jne
nop
inc
xchg
loopne
sbb
sub
test
pop
enter
sar
push
or
mov
cvtpi2ps
xchg
dec
jne
out
add
leave
call
ds
dec
inc
mov
hlt
cmp
jl
xor
leave
or
les
dec
test
sbb
jmp
and
xor
or
cmps
dec
mov
pusha
push
out
sub
jne
push
jns
retf
jae
or
sub
test
push
sub
or
jg
mov
pop
push
sub
adc
mov
xchg
retf
xchg
xchg
je
cs
mov
(bad)
mov
test
xchg
bound
lea
lock
dec
out
mov
xchg
in
mov
je
enter
pushf
ja
push
aam
mov
jno
or
or
cmp
pop
mov
xlat
lahf
mov
sub
scas
or
sbb
in
scas
test
ins
iret
out
jne
add
adc
add
cmps
jge
retf
aam
(bad)
(bad)
add
dec
mov
inc
daa
out
fs
arpl
sbb
(bad)
fidivr
jae
les
lds
mov
(bad)
cmp
push
mov
das
pop
or
xchg
std
or
int3
pop
leave
jmp
out
add
clc
mov
scas
hlt
retf
xchg
clc
outs
fldcw
or
out
sbb
cmp
cwde
mov
xchg
ror
nop
scas
ja
xlat
mov
sbb
mov
sub
lods
xchg
fisub
push
mov
je
pop
stc
lods
dec
outs
loope
(bad)
stc
jbe
and
outs
icebp
outs
xchg
adc
push
or
adc
add
pop
repnz
dec
and
(bad)
add
int
inc
jae
arpl
jp
xor
add
dec
rcl
loope
in
dec
ja
iret
xchg
mov
or
or
push
outs
jno
add
xchg
fild
jp
push
mov
xchg
sbb
iret
xor
inc
(bad)
stos
mov
xchg
sub
mov
js
mov
mov
lock
ror
jb
cmps
sub
or
rcl
jae
push
out
xchg
xor
sub
jns
mov
test
xchg
lods
jecxz
and
scas
js
inc
adc
xchg
rol
mov
out
repz
or
mov
mov
popf
shl
mov
inc
jae
pop
inc
add
test
cld
fbstp
inc
push
xchg
int3
rcl
xor
aad
enter
ins
aad
mov
fmul
retf
pop
outs
aam
clc
or
not
icebp
out
call
xor
sti
cli
mov
push
xchg
int
xchg
lfs
sbb
inc
xchg
gs
add
das
or
pop
sbb
cmp
mov
outs
inc
mov
dec
jmp
std
mov
dec
ins
or
cmp
fstp
addr16
lea
and
test
add
cdq
push
fstp
movups
mul
jns
dec
jecxz
push
or
gs
pop
ret
arpl
mov
cmp
aad
adc
out
jge
inc
and
sub
pop
jne
inc
add
leave
jmp
sub
jmp
cdq
mov
fstp
lock
inc
adc
and
mov
sbb
mov
(bad)
and
dec
in
inc
fucom
icebp
mov
fdivr
push
mov
pop
jl
mov
pop
addr16
add
aad
dec
adc
adc
xchg
cli
iret
ins
addr16
bound
xor
ins
and
cld
shl
fsub
repnz
sbb
ror
aad
push
add
push
into
idiv
sub
push
mov
push
int
mov
pop
aam
and
fisttp
or
cwde
sub
push
adc
bound
sub
in
xchg
sti
sub
jae
xchg
cmp
inc
mov
or
jno
mov
adc
ret
mov
or
pop
cdq
xor
mov
div
mov
add
dec
dec
pop
cmp
bound
xchg
aas
or
lock
fld
or
or
cmp
stc
or
pop
pop
or
mov
imul
cwde
test
inc
fistp
push
mov
das
fxch
mov
frstor
push
xor
gs
mov
out
jb
push
pop
pop
retf
mov
call
add
or
in
sub
retf
outs
retf
outs
outs
adc
inc
shl
loopne
in
ret
dec
div
cmp
push
neg
icebp
shl
imul
mov
dec
cld
pop
mov
fbld
pop
mov
ss
adc
pushf
push
jp
cli
mov
mov
inc
inc
ret
cmc
mov
ret
es
inc
push
and
ins
sbb
inc
pop
ja
pusha
scas
outs
jno
cmp
lods
xor
sar
push
adc
mov
inc
xor
push
scas
out
inc
or
jne
xchg
cmp
pop
push
aad
push
outs
dec
cmp
fistp
xor
ds
mov
es
into
adc
imul
imul
xor
mov
sub
or
rcl
shr
js
xor
es
clc
out
out
mov
cmp
add
dec
fdiv
dec
(bad)
loope
imul
(bad)
test
mov
adc
js
push
push
call
pop
ins
and
or
cld
mov
das
pop
das
addr16
cmp
enter
cmp
push
xlat
push
and
adc
cs
mov
or
add
jno
and
xor
adc
cmps
mov
sti
dec
push
call
call
jmp
scas
stc
mov
push
and
mov
mov
call
out
(bad)
inc
dec
test
fwait
ds
or
stos
fisub
inc
leave
aam
repnz
push
push
xchg
pop
adc
mov
icebp
data16
or
jns
push
inc
jecxz
out
dec
(bad)
ret
pop
lea
push
add
loope
pushf
mov
std
sahf
jmp
jno
aaa
inc
sar
hlt
pop
cld
xchg
sub
push
jmp
or
stos
(bad)
and
fcomp
add
test
cdq
adc
test
fsubr
ins
popf
js
xor
jp
xor
scas
arpl
and
jge
mov
(bad)
xor
push
sbb
or
pop
shl
call
xor
or
mov
mov
push
pop
aas
and
neg
inc
fsubr
andps
push
or
sbb
test
cmp
pop
and
test
add
clc
mov
jo
sub
ds
in
ja
sbb
xchg
cmps
ficomp
sahf
cmp
mov
mov
mov
sbb
cdq
(bad)
or
dec
test
fiadd
mov
fst
and
out
jp
sub
cmp
dec
popf
mov
aaa
xchg
clc
xchg
jo
xchg
dec
dec
aad
pop
mov
bound
xchg
cmps
out
mov
mov
mov
ror
cwde
push
xchg
jge
push
pushf
fxch
add
cmc
scas
rol
jno
(bad)
sub
lahf
jmp
mov
mov
and
out
cld
pop
pop
fiadd
mov
call
and
shr
sub
mov
les
ins
lds
stos
cdq
ret
sub
inc
sar
inc
inc
sbb
dec
popf
add
push
inc
ins
stos
movs
jne
es
mov
sub
lea
add
cdq
test
nop
inc
pop
mov
jge
xchg
sub
jle
jbe
rcr
test
mov
outs
test
xchg
xchg
adc
movs
adc
fs
add
adc
(bad)
gs
and
or
inc
aaa
jne
ins
test
test
mov
cdq
(bad)
out
mov
popf
imul
add
push
jmp
mov
jae
cli
add
xchg
imul
inc
dec
adc
aad
mov
xlat
call
xchg
mov
mov
and
hlt
mov
out
(bad)
out
call
call
mov
sbb
adc
mov
dec
outs
shl
aad
sbb
scas
pop
inc
jne
xchg
das
push
add
mov
out
pop
jecxz
mov
mov
mov
pushw
out
in
pushf
cmps
cmp
in
mov
inc
sti
jne
jne
or
inc
dec
mov
sub
push
popa
push
xor
cmps
mov
mov
out
push
rcl
push
retf
add
das
sub
ins
inc
out
mov
jmp
inc
push
shl
sbb
xchg
fisubr
ret
retf
pop
call
jb
jo
jo
xchg
cmp
inc
ja
adc
jecxz
push
sbb
(bad)
inc
jnp
push
adc
dec
add
mov
sar
repnz
xchg
dec
push
iret
test
lock
(bad)
cmp
sub
cmp
xor
pop
aad
enter
add
push
add
fbstp
js
lods
and
sub
add
mov
jmp
and
xchg
lahf
fnstcw
(bad)
rep
stc
test
push
pop
jns
jmp
aam
inc
adc
add
arpl
dec
add
mov
mov
push
(bad)
hlt
outs
mov
xor
adc
mov
nop
push
mov
(bad)
adc
ret
xor
dec
sbb
cmp
mov
pop
dec
push
xchg
ret
push
jecxz
repnz
aad
movs
mov
repnz
test
stc
fistp
icebp
outs
xchg
xor
dec
call
fwait
jno
mov
out
dec
fst
loop
dec
ret
sub
dec
add
ins
ficom
mov
mov
ds
pop
out
inc
cmps
inc
pop
sub
xchg
jecxz
clc
(bad)
lods
fisttp
icebp
pop
pop
leave
aas
repnz
xlat
mov
cwde
cli
stc
mov
adc
or
sub
sub
mul
cdq
nop
loopne
aam
xchg
and
mov
jecxz
dec
aam
push
sbb
inc
mov
lds
loopne
popf
jbe
addr16
imul
push
data16
enter
ror
sub
mov
sbb
cmps
add
inc
mov
inc
xchg
mov
aam
cmps
cmp
fsub
push
xchg
(bad)
mov
into
mov
pop
int
dec
adc
pop
gs
hlt
lahf
xchg
mov
xchg
and
adc
pop
push
dec
add
mov
jecxz
sub
dec
mov
stc
mov
xlat
std
mov
addr16
jl
cdq
cmps
addr16
lahf
inc
std
inc
pop
hlt
in
pop
or
ret
mov
jb
xor
dec
mov
xchg
push
popf
xor
mov
adc
outs
add
lods
ins
xchg
inc
mov
js
cmp
jo
nop
jle
pop
push
retf
mov
stos
jge
mov
sbb
mov
mov
(bad)
adc
test
loop
jle
cli
push
rcr
xchg
xchg
and
addr16
pop
push
(bad)
sub
pop
movs
adc
mov
or
ja
mov
mov
outs
loope
scas
stos
test
or
ja
int
xor
pushf
push
aas
rcl
lahf
lock
jecxz
fldcw
dec
sbb
push
mov
sub
aam
pop
dec
and
dec
mov
(bad)
imul
(bad)
outs
inc
sub
or
in
cmps
sub
shr
xchg
jnp
mov
or
leave
ret
sub
jle
jmp
fist
mov
je
push
test
sar
jns
inc
pop
xor
cld
dec
pushf
call
xor
add
mov
push
dec
cli
jae
retf
arpl
cmp
pop
aam
repz
je
pop
add
and
jp
retf
sbb
mul
sbb
fadd
mov
fcom
rcr
es
test
lds
scas
scas
adc
push
mov
push
cmc
mov
dec
xchg
mov
(bad)
aas
retf
dec
mov
dec
in
nop
xchg
push
add
mov
ins
jae
mov
mov
ss
enter
push
popa
inc
dec
mov
cmp
repnz
xchg
(bad)
stc
jg
sub
and
lods
imul
ret
sbb
add
adc
mov
dec
pop
ret
or
jo
dec
jae
inc
jge
push
and
(bad)
push
pop
addr16
dec
add
pushf
outs
aas
popf
sub
in
mov
mov
and
push
and
push
mov
push
adc
icebp
pop
nop
sti
or
add
push
xor
push
push
ror
mov
scas
hlt
int3
sar
push
xchg
xchg
int
add
pop
ss
mov
adc
stos
in
movs
int3
jmp
adc
out
xor
jle
in
movlhps
in
sub
call
xor
sub
gs
xchg
push
mov
jnp
jo
mov
rcl
sbb
adc
mov
add
mov
leave
shl
in
dec
sub
xor
cmps
push
fmul
mov
scas
repz
push
cli
mov
mov
sbb
rol
sub
icebp
ret
rcl
clc
xor
icebp
dec
int3
nop
mov
fdiv
xlat
inc
fiadd
mov
sub
or
xchg
rcr
(bad)
pop
lods
add
pavgb
add
pop
dec
loopne
pop
movs
sub
(bad)
jb
mov
push
stos
mov
daa
add
clc
lds
lahf
sub
clc
repz
and
xor
or
mov
and
mov
xchg
push
or
ss
pusha
xor
xchg
(bad)
enter
jae
cld
lahf
add
test
mov
(bad)
pop
in
popf
pop
and
jns
jg
jmp
push
rcr
ds
pop
jo
add
push
mov
mov
inc
jecxz
inc
(bad)
mov
or
or
add
pushf
out
sbb
aad
sbb
out
ds
stc
in
jge
jne
or
iret
repz
inc
popf
jae
sub
xchg
rol
pop
int
out
xor
pushf
shl
outs
mov
out
mov
inc
inc
push
in
sbb
push
mov
clc
mov
cmp
inc
jmp
cmp
mov
loope
mov
popf
and
pop
fidivr
cmp
add
pop
push
scas
stos
inc
mov
clc
jo
mov
or
sub
add
sbb
sub
cwde
cdq
fld
and
mov
js
ret
mov
daa
inc
icebp
push
mov
shl
push
jp
mov
push
out
(bad)
adc
lahf
jbe
pop
xchg
scas
sbb
addr16
call
jae
adc
pop
add
pop
inc
loop
(bad)
sub
or
ret
es
scas
and
sbb
mov
and
dec
jp
lods
dec
xor
movs
icebp
mov
mov
nop
dec
ret
inc
clc
ja
or
push
frstor
cmc
add
dec
lods
dec
fs
xor
and
loopne
out
lea
mov
repz
hlt
out
rol
gs
retf
adc
cli
jmp
repnz
daa
mov
add
pop
cmc
call
ret
popa
retf
xor
pop
fld
inc
xlat
in
cmp
add
xlat
inc
out
fwait
retf
add
fnsave
scas
add
lahf
leave
push
add
cwde
sub
cmps
daa
and
inc
fimul
jno
push
arpl
dec
es
and
cld
xchg
push
ret
lods
jge
iret
shr
outs
add
dec
movs
cmp
push
std
lds
out
sbb
xchg
loop
mov
cmp
dec
cld
jp
jnp
lods
sub
test
jbe
frstor
addr16
retf
shl
xor
xor
push
add
cwde
or
div
out
jae
jmp
mov
xchg
test
dec
cmps
sti
or
in
inc
icebp
dec
and
clc
mov
xchg
mov
and
jne
leave
adc
dec
mov
and
push
outs
mov
xor
ins
movs
mov
les
gs
push
push
jbe
mov
sbb
jmp
retf
call
mov
int
cmp
aad
clc
jno
out
sub
adc
mov
in
in
cdq
sbb
dec
cmp
lods
data16
imul
gs
sbb
into
sbb
dec
enter
movs
nop
fdivrp
call
int3
add
sahf
js
mov
popf
xor
jecxz
es
fidivr
enter
dec
ret
cmp
xor
sub
cmps
push
push
jg
fwait
jp
or
cmc
adc
jle
out
sub
lds
adc
jns
inc
hlt
mov
(bad)
lods
push
dec
xchg
loopne
cmp
mov
lods
(bad)
ficom
pushf
jne
ror
push
scas
out
and
push
aaa
pop
ds
pushf
lahf
xchg
jg
fcmovb
xchg
lods
pop
sub
ss
or
outs
bound
lods
fldenv
loope
ins
mov
rcr
cmp
fst
xchg
sbb
cs
xor
dec
sti
pop
xchg
mov
xor
pop
dec
loop
ins
push
lahf
call
xlat
div
scas
dec
ror
es
add
jmp
fdivrp
(bad)
push
cmp
mov
loop
mov
into
sbb
das
add
mov
lahf
and
(bad)
out
jmp
loop
jle
push
lock
(bad)
sub
push
pop
pop
sti
mov
inc
les
or
cld
xchg
ja
cmp
mov
pop
dec
fld
or
je
mov
or
jmp
jge
lods
daa
dec
pop
cmp
mov
add
es
cli
jmp
mov
mov
(bad)
push
push
jb
jle
add
mov
adc
sbb
adc
xchg
lods
in
push
call
ins
push
xor
lahf
adc
jecxz
inc
iret
xchg
ins
sbb
pop
dec
adc
jmp
xor
call
jne
or
cmp
test
leave
lods
sbb
jge
jecxz
test
xchg
addr16
pop
push
sub
(bad)
push
movs
xchg
cmps
jmp
inc
mov
repz
push
mov
inc
push
mov
sti
and
rol
inc
(bad)
gs
(bad)
add
ds
mov
xor
xor
jecxz
cmp
or
sub
cmp
(bad)
out
or
repnz
and
add
lods
test
jb
sbb
dec
jmp
add
je
lea
cwde
cmp
pusha
cmp
fcom
lods
cwde
sar
or
push
inc
jo
cdq
mov
loopne
mov
sbb
jmp
(bad)
es
enter
call
loop
inc
fidiv
inc
neg
mov
js
and
pop
dec
lock
mov
jg
lds
xchg
int3
fs
rcl
jae
mov
cdq
sub
xchg
nop
in
jb
mov
lods
xchg
(bad)
or
lock
or
jb
inc
push
mov
cmps
mov
loope
(bad)
in
rol
call
sbb
cmc
fucomi
movs
jbe
jle
cs
xchg
je
jb
rol
jp
jl
inc
movs
lahf
ret
or
jne
jle
scas
sub
aas
aaa
push
sar
lods
shl
lahf
rcl
jo
dec
pop
dec
push
aaa
dec
or
or
mov
dec
je
mov
fst
or
inc
push
xor
(bad)
jmp
sub
sub
and
call
iret
scas
out
addr16
xor
fsub
call
pop
in
jecxz
pop
xor
pop
daa
mov
xchg
es
loopne
fimul
ret
xchg
aas
add
push
add
mov
xchg
dec
pop
cwde
jmp
mov
lea
lea
shl
add
stos
test
fcmovbe
add
addr16
push
retf
jb
or
jb
pop
out
repnz
jo
imul
mov
sbb
neg
jl
pop
mov
and
mov
dec
call
ss
cmps
int
fisub
bound
mov
mov
fstp
adc
mov
cli
outs
outs
movs
bound
ret
sub
in
stos
into
into
and
push
mov
adc
nop
xor
jno
hlt
iret
cmp
inc
mov
ins
cmp
repz
mov
adc
fs
sub
in
xchg
jae
sbb
retf
sub
call
xchg
sbb
fwait
daa
pop
adc
bound
and
je
xor
sub
sbb
sbb
cmp
cmps
das
and
int
cwde
xor
inc
jl
dec
dec
(bad)
mov
(bad)
jmp
imul
dec
pop
je
dec
icebp
imul
or
sub
cli
pop
mov
xchg
pop
pop
movs
mov
icebp
lock
mov
cld
sub
mov
in
mov
and
mov
(bad)
sub
(bad)
lock
push
jmp
dec
xchg
std
or
enter
adc
push
mov
int
(bad)
xchg
pusha
clc
add
scas
adc
add
fldenv
lahf
xchg
les
xchg
or
cmp
inc
fistp
sahf
push
into
ins
sbb
mov
and
jmp
jge
cmp
loop
mov
pop
or
cmp
pop
(bad)
lds
cmp
rcl
mov
(bad)
add
lods
ins
add
push
pop
es
ss
daa
nop
lods
xchg
lock
cmps
fild
imul
fadd
push
xor
fdivr
add
mov
(bad)
outs
fisttp
in
ror
cmp
ror
push
adc
cmp
push
inc
add
jne
mov
xchg
cwde
aam
(bad)
test
cdq
or
aad
mov
push
mov
cmp
imul
sub
pop
sahf
aam
add
adc
and
inc
mov
jb
push
scas
imul
and
mov
xchg
mov
or
xlat
add
xor
or
sub
mov
shl
sbb
mov
xor
mov
cld
cmp
cmp
xor
inc
mov
into
jp
loopne
xchg
icebp
call
int3
inc
aam
mov
jne
add
push
push
pop
jmp
test
fidivr
test
mov
outs
stos
mov
daa
les
sar
test
retf
push
inc
or
retf
mov
jns
jo
mov
mov
push
ja
or
sbb
jb
and
cmps
sbb
mov
or
fs
ins
movs
xchg
adc
inc
outs
or
dec
dec
add
scas
or
fbstp
add
hlt
call
dec
adc
push
xchg
imul
lea
adc
loope
sub
and
out
daa
sub
jbe
mov
shl
gs
lods
stos
cmp
std
out
lahf
push
sub
lods
cwde
pop
xchg
inc
mov
push
(bad)
lods
jp
dec
dec
lahf
sti
sbb
cmp
lods
in
sub
or
and
(bad)
(bad)
(bad)
dec
mov
pusha
and
ja
test
jb
add
(bad)
cmp
cmps
jmp
(bad)
push
stos
daa
jno
mov
sbb
loope
jle
mov
(bad)
stc
jl
fldcw
push
test
xchg
fidivr
pop
mov
jo
xor
aas
repz
out
inc
and
or
add
dec
pop
mov
je
xchg
rcl
sub
xchg
stos
shl
lahf
mov
test
push
loopne
mov
add
call
das
mov
lods
iret
inc
push
and
add
mov
imul
retf
rol
mov
pop
push
dec
sub
scas
cmps
cmp
cwde
mov
and
addr16
mov
mov
or
movnti
aaa
fcom
icebp
cmp
and
xor
mov
cmc
ins
and
cmp
or
xor
mov
sub
int3
sbb
iret
mov
daa
inc
jne
dec
mov
dec
enter
and
pop
lea
movs
test
out
pop
mov
scas
sub
and
inc
fst
cmp
mov
mov
cmp
cmc
data16
shl
pop
jge
jo
pop
jns
adc
mov
xchg
les
sbb
xchg
movs
sub
jns
popa
loop
or
daa
rol
leave
add
push
(bad)
retf
(bad)
imul
jns
aas
fwait
push
push
mul
sar
or
call
call
gs
div
lock
sbb
mov
pop
shl
cmp
pusha
(bad)
mov
ja
push
fnsavew
xchg
mov
inc
ret
enter
mov
imul
mov
sbb
jb
cmp
(bad)
xor
pop
jno
sbb
enter
call
push
shr
mov
push
outs
sbb
test
push
data16
iret
(bad)
or
jo
inc
sbb
fild
mov
jns
imul
lahf
jb
ficom
sbb
pop
clc
sbb
das
jmp
test
jbe
jge
dec
push
push
adc
pop
lds
xchg
push
jns
test
push
punpckhbw
xor
lods
pop
or
dec
arpl
jae
dec
stos
dec
mov
sub
xchg
push
pushf
jbe
cmp
mov
and
inc
fsubr
xchg
les
repz
cli
jbe
jge
inc
inc
fsub
outs
cmp
lahf
arpl
push
adc
dec
mov
fwait
pop
inc
cld
lods
dec
mov
fdiv
leave
in
clc
add
inc
add
or
push
pop
leave
mov
std
(bad)
or
mov
mov
retf
in
xchg
and
pop
xchg
mov
and
mov
(bad)
aad
xchg
pop
(bad)
(bad)
fucomip
test
je
jne
pop
lock
fnstsw
(bad)
sub
pusha
push
sub
mov
es
test
out
xor
or
sahf
popf
out
mov
push
xchg
cmp
(bad)
dec
jle
push
and
sti
jbe
gs
fisub
jg
push
dec
ror
or
out
test
pop
adc
add
scas
or
jge
xlat
sbb
movs
inc
into
push
push
and
js
cdq
dec
(bad)
in
cmp
cwde
daa
and
cmp
ret
adc
inc
and
adc
fst
pop
cmp
(bad)
cli
cmp
jno
cmp
add
sub
pop
pop
repnz
cmp
icebp
je
mov
jae
cmp
and
jnp
cwde
or
(bad)
mov
gs
call
adc
xchg
pop
sahf
in
fnstcw
jmp
push
add
xchg
inc
into
xor
(bad)
jle
je
mov
xchg
adc
and
and
sub
pop
pop
fwait
aaa
xor
stos
aas
popf
fcom
pop
sbb
inc
xchg
mov
or
je
int
in
outs
ss
addr16
test
test
aaa
rol
jmp
mov
push
sbb
mov
and
pop
lahf
mov
inc
adc
movs
add
mov
pop
stos
arpl
es
fstp
mov
lea
jne
adc
(bad)
std
or
inc
into
sub
out
(bad)
into
(bad)
(bad)
fyl2x
rcr
xchg
and
push
push
sub
push
(bad)
fcomp
out
sub
ins
(bad)
jns
sbb
xor
fadd
frstor
lock
or
ds
mov
scas
mov
and
mov
mov
xlat
loop
adc
pop
sbb
xchg
fild
lock
lods
fcom
test
xor
mov
(bad)
jmp
loop
out
push
mov
cmps
inc
dec
test
dec
jnp
add
mov
jae
hlt
outs
cdq
fild
icebp
data16
call
or
in
mov
pusha
and
stc
aam
out
rcl
push
dec
mov
inc
(bad)
(bad)
mov
mov
lock
in
push
xchg
mov
pop
pop
leave
dec
jle
mov
jmp
xchg
inc
idiv
jp
out
cld
stos
xor
cmps
or
push
cmp
xchg
out
xchg
nop
sub
sbb
mov
adc
fiadd
lods
loopne
clc
ret
and
adc
addr16
adc
out
outs
push
mov
push
(bad)
cld
or
push
loope
jle
sar
sub
clc
daa
mov
dec
js
and
pop
ss
(bad)
(bad)
or
sbb
cmp
arpl
test
imul
repnz
or
cwde
ins
mov
add
mov
stc
cmc
pop
cmp
(bad)
and
retf
or
gs
push
stos
xchg
cmc
mov
rcl
push
das
test
lock
daa
ds
jb
mov
std
shl
addr16
xchg
jg
sahf
outs
or
imul
pop
not
mov
mov
push
push
mov
hlt
push
xchg
rol
loopne
push
cmp
pop
push
inc
scas
sbb
(bad)
mov
int3
inc
out
push
(bad)
dec
sbb
dec
cld
sar
xchg
jg
xchg
hlt
jp
scas
int
in
add
pop
outs
pop
pop
or
test
fnsave
push
fld
or
sub
clc
cld
mov
pop
xchg
jge
push
lods
mov
jmp
pop
addr16
sub
add
pop
inc
inc
mov
mov
adc
jge
and
mov
mov
fild
mov
add
mov
ror
sub
popa
jle
stos
repz
sbb
pop
out
nop
aaa
shl
xchg
mov
in
test
cld
jae
nop
lock
hlt
xchg
jbe
mov
push
xlat
(bad)
adc
dec
mov
repnz
cmp
outs
out
enter
jl
dec
pushf
fsub
not
ins
arpl
clc
push
add
leave
dec
call
out
(bad)
dec
jbe
or
sub
and
pop
cmp
adc
dec
jmp
(bad)
int
enter
stos
dec
inc
repnz
jne
ficomp
fsubr
add
fnstsw
daa
mul
dec
shr
sub
and
jmp
mov
(bad)
sub
push
pop
pop
and
pop
xchg
mov
mov
push
fsubr
mov
lock
add
xor
mov
call
push
push
fsubr
inc
js
push
pop
imul
out
out
mov
test
sub
or
mov
fimul
out
mov
mov
sbb
add
xchg
das
je
xor
jge
dec
cmps
jg
movs
sbb
mov
fadd
nop
push
xor
fnstsw
lock
pop
sahf
cmc
or
sti
pop
add
dec
leave
ret
or
inc
stos
dec
popa
sub
sbb
dec
cmp
fdivr
pop
mov
xchg
in
out
xchg
ja
dec
int3
inc
in
xor
inc
loope
xor
aas
dec
test
nop
cmp
test
arpl
jnp
int
nop
int
repnz
les
mov
xor
push
loop
stc
pop
mov
mov
xchg
xchg
pop
add
ret
loope
or
lea
cwde
sbb
ret
clc
movs
ss
jo
les
aas
xor
jno
enter
xchg
mov
xor
sub
mov
jo
xchg
cmp
pop
sub
mov
mov
ss
dec
and
xchg
mov
xor
fist
ins
pop
cdq
pop
call
retf
jge
push
lahf
and
or
imul
mov
jne
clc
(bad)
pop
add
and
cmps
outs
jmp
inc
and
arpl
jge
(bad)
xchg
cwde
sti
icebp
sbb
sbb
xor
iret
arpl
ret
sbb
in
sub
xchg
pop
dec
cmp
jbe
icebp
add
pop
adc
ret
jmp
sub
dec
sub
(bad)
sub
lods
jnp
or
jg
cmp
mul
xchg
test
test
cmp
push
pop
dec
or
shl
mov
in
into
mov
pop
jge
test
ror
xor
and
push
or
or
idiv
gs
mov
(bad)
aaa
or
in
icebp
push
add
jb
jle
fiadd
cmc
into
push
and
dec
sub
sub
xchg
out
js
xor
daa
out
sbb
shl
xlat
lods
in
cs
xor
sbb
punpckhbw
cmp
mov
stos
mov
out
inc
pop
icebp
sar
fwait
jmp
mov
mov
mov
jp
jmp
add
jmp
sar
lods
or
jmp
(bad)
push
mov
daa
jo
test
add
ret
jmp
lds
es
mov
jmp
cmp
inc
xor
inc
jmp
push
push
into
mov
cli
shl
lock
or
or
sub
loop
(bad)
lds
push
enter
in
imul
icebp
push
pop
xchg
push
mov
and
sub
cdq
pop
shl
xchg
cmp
or
adc
inc
aaa
push
inc
psrlq
xchg
mov
mov
and
icebp
xchg
mov
cld
shl
imul
stos
sti
push
shr
inc
xchg
lods
ins
dec
cmp
push
shl
fimul
stos
gs
inc
pusha
add
cmc
and
sub
int3
dec
neg
test
mov
fsubr
adc
aaa
inc
arpl
mov
(bad)
in
jp
call
or
jecxz
loop
arpl
push
cs
xchg
les
sub
cmp
fimul
cmp
sub
cmps
pushf
cs
mov
repz
sahf
mov
outs
ja
dec
dec
movs
jl
mov
ret
cmp
and
cmps
xchg
adc
xchg
jne
test
ins
cmp
xor
loop
adc
jge
jge
cmc
xchg
mov
jecxz
xor
mov
sub
int3
cmp
ins
(bad)
sar
nop
pop
lahf
mov
je
dec
sti
xor
imul
pusha
jge
push
xor
lahf
and
sub
xor
mov
jb
push
arpl
icebp
pop
pop
jne
imul
rol
adc
sub
or
cmp
call
push
add
dec
ss
ss
mov
push
cmp
loope
inc
jne
aaa
pop
jae
test
clc
jp
mov
mov
dec
sbb
mov
fidivr
push
add
jne
push
mov
pop
push
pop
mov
mov
call
call
inc
aaa
adc
sti
add
ds
push
fdivrp
popf
sti
push
cmps
pop
jmp
xchg
and
lods
fistp
pop
cmp
and
scas
addr16
in
mov
ins
lock
fdiv
repnz
inc
in
mov
rol
inc
scas
pop
cmp
or
pop
push
dec
or
jg
dec
imul
aad
int3
cmps
ins
dec
sbb
cwde
cmp
stc
clc
push
(bad)
popf
(bad)
dec
add
mov
scas
shl
inc
sub
inc
outs
push
loope
xchg
pop
and
mov
scas
clc
mov
ret
push
in
sub
aas
fstp
mov
inc
mov
push
xchg
jno
pop
popf
add
adc
mov
add
out
ins
sbb
mov
mov
add
add
mov
adc
test
aaa
jo
std
jnp
xlat
xlat
adc
pop
(bad)
mov
imul
xor
mov
retf
test
test
movs
fwait
ret
arpl
pop
sbb
xchg
mov
int3
bound
jbe
call
jecxz
leave
jns
mov
call
push
mov
ds
test
cmps
mov
jmp
mov
lods
push
shl
push
test
cmp
dec
or
or
in
mov
out
mov
rol
pop
ss
ja
adc
loopne
push
add
or
add
sub
dec
push
or
ror
mov
add
cmp
mov
xchg
and
ss
mov
mov
fs
int3
jecxz
mov
pop
mov
jae
mov
das
pop
jbe
in
(bad)
pop
test
xor
mov
pop
or
mov
test
scas
xchg
xchg
jp
scas
das
push
pop
test
jecxz
div
adc
jl
xor
mul
push
repnz
(bad)
cmps
mov
ror
loop
imul
mov
and
bound
jl
add
push
push
cmps
cmp
cmps
pop
mov
mov
mov
cmp
mov
add
pop
hlt
mov
xor
cmp
lahf
hlt
and
in
push
stos
mov
adc
or
ret
sbb
dec
movs
push
nop
pop
jl
sub
mov
lea
pop
xchg
mov
dec
(bad)
hlt
xor
cmp
jp
xchg
pop
pop
sar
dec
mov
clc
xchg
pop
xchg
pop
ret
popa
jnp
add
dec
jo
xchg
inc
dec
nop
ret
xor
cmc
push
addr16
les
or
sub
add
adc
(bad)
jns
jp
xor
mov
or
daa
stos
fxch
das
mov
pop
sub
push
in
push
mov
addr16
dec
out
mov
ficomp
mov
stos
push
ficom
outs
(bad)
jns
cmp
jno
push
xchg
cmp
outs
test
retf
mov
mov
add
jno
sbb
xchg
mov
and
jmp
or
std
fucom
inc
adc
lods
(bad)
mov
push
shl
ret
dec
xchg
push
fisubr
bound
test
test
jne
aas
pop
cld
mov
pop
imul
fcmovbe
mov
cmp
cmps
ror
rcr
pop
sar
push
gs
jmp
pop
cdq
adc
jp
fwait
or
int
mov
fsub
cld
adc
dec
cmps
mov
ret
xor
push
sbb
push
out
jne
daa
pop
xor
and
cld
jmp
cli
in
fdiv
mov
sub
iret
mov
icebp
popa
mov
inc
mov
scas
pop
loopne
mov
push
movs
lea
movs
in
fimul
rol
daa
inc
push
das
int3
jge
push
inc
jl
mov
ffreep
mov
xor
(bad)
mov
mov
out
stos
adc
movs
mov
add
arpl
xor
out
mov
sbb
adc
mov
jecxz
mov
jns
sub
xor
test
dec
xchg
(bad)
xchg
and
mov
test
jnp
in
mov
gs
lods
in
mov
sbb
pcmpgtb
push
out
cmc
call
fnstsw
sbb
das
repnz
inc
scas
xchg
sbb
fild
jmp
mov
and
leave
add
mov
add
rcl
xchg
jg
retf
test
pop
sbb
sub
stc
xchg
mov
and
(bad)
(bad)
add
mov
fdiv
lods
inc
retf
sub
pusha
jecxz
pop
loopne
retf
cld
cld
cmp
retf
pop
pop
cld
and
loope
inc
in
pop
in
popa
xchg
(bad)
xlat
mov
int3
fwait
std
push
bound
and
cmp
mov
bound
rcr
add
sahf
push
push
std
gs
das
mov
call
out
adc
xchg
pop
popf
gs
shl
pop
stc
mov
xchg
stc
das
adc
adc
or
and
add
mov
cmp
push
sbb
idiv
cmc
jmp
pop
xor
lea
cdq
retf
lea
xor
fdiv
int3
dec
mov
mov
sub
push
sbb
push
and
rcl
pop
shl
mov
and
aaa
imul
lods
xor
sbb
aam
push
mov
xor
clc
add
outs
shr
stos
push
dec
inc
cmc
outs
push
fiadd
push
mov
leave
cmc
les
daa
mov
cmp
jmp
fisttp
jecxz
aaa
mov
xchg
pop
jp
and
std
pop
pop
jbe
adc
arpl
dec
sub
hlt
es
imul
pop
leave
mov
push
pop
addr16
fxch
push
js
fdiv
gs
popa
xor
xor
sub
sub
imul
or
sub
pop
cmp
call
(bad)
jbe
push
adc
mov
ins
mov
mov
push
shl
hlt
push
js
mov
jecxz
(bad)
mov
jno
fcom
daa
imul
outs
sub
fist
fsubr
xor
pop
es
and
in
inc
xchg
mov
mov
call
mov
test
xchg
retf
cmp
rol
pop
sub
outs
push
xor
cmp
cmps
xchg
jmp
fist
lods
(bad)
cld
xor
add
shl
jmp
sbb
mov
jns
movs
pop
lock
push
mov
jns
fnstenv
pop
in
in
jle
and
push
inc
cmps
jae
xchg
add
(bad)
xor
in
or
mov
mov
ret
and
rcr
sbb
fcom
(bad)
stc
pop
cmp
cmp
bound
jmp
test
inc
inc
inc
fwait
movs
scas
ins
(bad)
xchg
mov
xchg
loope
jle
cmp
inc
push
shl
ret
mov
mov
stos
xchg
imul
xor
sar
jge
imul
scas
pop
push
cmps
dec
sbb
jp
push
jmp
push
xchg
or
xchg
scas
xchg
stos
sbb
inc
sub
sub
cmc
movs
std
mov
inc
test
adc
cwde
adc
leave
cmp
sbb
mov
int3
dec
mov
jmp
pop
ret
outs
xor
js
inc
imul
sub
mov
(bad)
mov
inc
push
icebp
imul
xchg
push
jae
outs
pop
test
rol
dec
jb
or
pop
mov
iret
pop
aam
in
mov
fiadd
mov
dec
push
mov
icebp
push
cmp
repz
imul
mov
repz
loop
fwait
xor
test
aad
cmp
jb
xlat
dec
mov
adc
xchg
sti
or
lahf
or
aas
and
or
icebp
stos
lahf
push
xchg
jno
push
pop
ins
sub
add
xor
rcl
xchg
cmp
ds
xor
sti
xchg
or
mov
jl
sub
rcr
fistp
add
push
cmps
clc
push
dec
cmp
add
aam
inc
enter
call
out
arpl
mov
add
clc
xchg
inc
jno
dec
rol
dec
fsubr
pushf
dec
inc
xchg
jnp
(bad)
jb
sub
dec
sbb
jecxz
scas
aam
inc
sbb
add
cwde
push
xchg
rcr
(bad)
jne
retf
hlt
outs
out
jns
das
cld
in
pop
outs
je
(bad)
dec
mov
mov
xor
jge
xor
call
push
lods
push
sahf
xor
mov
(bad)
imul
inc
mov
push
add
cwde
cmp
mov
(bad)
scas
loop
xchg
xor
xlat
in
out
xchg
or
xor
mov
or
mov
sub
cmp
ins
pushf
fchs
sub
out
pop
jecxz
xlat
mov
repnz
push
inc
shl
lea
ret
xchg
(bad)
xchg
push
lock
pop
fcmovu
sub
add
inc
fsub
enter
(bad)
jmp
mov
mov
and
push
(bad)
js
cmp
jne
ds
sbb
xor
cmovo
stos
dec
cli
popa
ss
add
push
or
xchg
or
cdq
or
jl
add
inc
lea
rcr
adc
sbb
xor
cmp
pop
sub
sbb
sub
push
lea
(bad)
jns
xor
push
or
mov
daa
adc
and
cmps
xor
fidivr
mov
xchg
mov
rcr
xor
xor
mov
int
pop
dec
jmp
cmp
push
inc
stos
add
sti
pushf
push
cmp
push
dec
xchg
repz
pop
out
xor
xchg
(bad)
jo
movs
imul
out
mov
push
jo
aad
movs
xchg
sti
test
outs
jb
test
xchg
pop
mov
retf
inc
out
mov
es
imul
mov
cdq
movs
dec
mov
jmp
into
fstp
fadd
rcr
ret
cmps
or
mov
outs
sbb
jp
std
mov
jmp
repnz
jecxz
mov
xchg
add
shl
jecxz
out
in
std
dec
cmp
jl
out
cmp
int
push
add
inc
stos
adc
fimul
sub
scas
ret
retf
and
pop
mov
aaa
jle
pop
dec
inc
bound
push
(bad)
push
xchg
test
mov
fnstcw
mov
cmp
pushf
cmps
cwde
aaa
scas
sub
enter
inc
cli
or
mov
or
inc
div
rol
inc
cmp
xor
data16
sub
jl
mov
popf
pop
ja
fwait
sbb
loop
ins
mov
mov
push
xchg
and
jecxz
lods
mov
add
inc
data16
cmp
retf
cmp
adc
jb
retf
push
mov
push
int3
(bad)
in
inc
xor
mov
lea
cmp
mov
and
push
sub
std
xor
adc
lea
push
enter
test
out
xchg
retf
cmp
push
pop
cli
(bad)
jle
int
stc
inc
popf
cmps
xor
aam
js
or
mov
push
mul
or
push
xor
ins
xchg
add
repnz
inc
mov
xor
or
retf
inc
aam
cmps
lea
stos
push
js
dec
(bad)
aad
xor
jns
mov
test
sub
and
add
(bad)
adc
dec
inc
inc
imul
std
or
shl
lods
xchg
aam
stc
nop
push
les
(bad)
jbe
push
cmp
xor
xchg
adc
push
push
push
addr16
fisub
stos
fldlg2
pop
(bad)
inc
push
mov
pop
call
cmps
and
ror
out
xchg
arpl
mov
push
mov
inc
adc
mov
jne
cmp
jb
mov
sub
dec
jmp
fwait
dec
ins
retf
iret
rcl
pop
das
mov
fwait
cmp
cmp
addr16
mov
xor
fwait
inc
les
in
jae
push
mov
stc
out
inc
xchg
cmps
push
or
sub
jl
jbe
or
mov
addr16
jb
fsubr
jb
neg
xchg
loope
movs
outs
retf
retf
dec
mov
push
pop
push
jnp
loopne
xor
loop
xor
push
push
mov
rcr
test
repnz
out
loop
cmp
int
(bad)
xchg
std
jge
mov
daa
mov
call
inc
hlt
inc
inc
xchg
clc
inc
stos
ret
dec
sub
and
mov
pop
les
inc
add
mov
and
pop
fdivr
xor
lds
mov
mov
popf
sub
push
into
inc
push
sti
mov
test
add
or
inc
(bad)
jb
fwait
cmps
scas
jmp
pushf
mov
cld
mov
cmp
iret
mov
xchg
mov
fisttp
not
mov
xchg
cmp
jmp
enter
pusha
popf
push
lahf
sub
(bad)
sbb
rcr
scas
adc
popf
push
out
pop
sbb
enter
push
sbb
out
stos
sti
or
scas
or
unpckhps
add
and
mov
mov
popa
stos
leave
and
gs
rcr
xchg
call
in
scas
fldenv
and
in
loopne
mov
fisttp
rol
mov
sar
icebp
enter
pop
shr
mov
ret
ffreep
neg
cli
push
sub
les
je
push
jecxz
cwde
pusha
stos
stos
mov
test
push
adc
xchg
jo
fwait
rcl
xchg
or
jmp
jo
mov
sub
inc
cmc
sub
dec
movs
shl
jg
dec
and
fnstcw
outs
push
dec
jmp
add
and
push
ret
movs
pop
shl
mov
pop
inc
out
imul
add
add
inc
push
or
push
cdq
call
sub
pop
push
xchg
adc
test
mov
fwait
mov
aad
mov
jae
inc
xchg
shr
dec
int
js
mov
adc
ins
fs
ins
out
dec
loope
mov
jmp
test
mov
inc
cmps
in
jl
mov
sbb
call
or
sbb
jno
sub
pushf
call
lds
jecxz
inc
or
inc
jl
ja
xchg
retf
mov
and
pop
test
in
(bad)
mov
push
mov
mov
aam
ret
xchg
daa
jp
xor
fsubrp
jl
add
pop
or
push
scas
add
jmp
push
inc
ja
pop
push
repz
cld
sub
aas
enter
fnstsw
xor
and
or
dec
(bad)
std
dec
addr16
jae
rcl
mov
and
mov
and
in
cmp
add
mov
jg
hlt
jo
retf
or
push
xor
inc
xor
push
(bad)
cmp
jmp
add
fadd
adc
das
outs
das
or
out
lds
push
jb
mov
(bad)
or
inc
loop
aaa
sub
rcr
outs
addr16
push
ins
cmp
lods
lds
sbb
adc
mov
hlt
sub
retf
and
fsub
aad
int
cmp
inc
popf
sub
dec
cwde
pop
adc
pop
aas
push
mov
inc
je
xlat
xchg
jmp
mov
mov
leave
outs
jmp
sub
leave
fs
mov
push
aaa
rcr
stos
adc
dec
pop
cmps
ret
mov
cmp
(bad)
loop
cmp
out
out
outs
inc
or
lahf
cmp
add
lahf
lods
adc
out
ins
imul
adc
popa
xchg
out
push
shl
les
add
and
cmps
(bad)
(bad)
clc
mov
mov
jmp
jbe
out
inc
push
dec
aad
mov
icebp
or
pop
aaa
or
push
out
mov
jb
out
pop
imul
mov
jns
and
aaa
retf
(bad)
imul
out
mov
int3
mov
cld
cmp
cmps
inc
inc
mov
inc
cmps
sbb
adc
adc
mov
(bad)
sti
push
outs
xchg
pop
pop
jle
cdq
push
jae
ror
xor
adc
nop
push
and
daa
mov
pop
sub
fisubr
mov
cmp
dec
in
mov
out
into
push
mov
fld
xchg
cmp
std
leave
and
(bad)
xchg
daa
es
rol
xor
popa
cmp
loope
(bad)
xchg
jns
(bad)
mov
aas
dec
add
iret
push
aaa
pop
mov
fstp
cmp
sbb
test
sahf
shl
mov
add
in
jb
ds
enter
push
sbb
xchg
mov
sbb
or
out
xchg
dec
xchg
bound
cwde
pop
movs
sti
jbe
mov
mov
adc
fidivr
mov
fucomip
pop
ins
clc
out
fcmovu
or
add
sub
jge
out
inc
mov
push
add
inc
jp
movs
xchg
mov
mov
ds
lock
jl
outs
es
sub
and
sub
fstp
cmp
add
cmp
ds
gs
adc
push
imul
aas
fmul
mov
jl
movs
dec
in
cmps
stos
mov
rcl
sti
test
pop
mov
jno
jnp
outs
imul
ja
sbb
push
xor
cli
mov
rcr
leave
or
mov
add
ffreep
lea
movs
xchg
adc
push
push
outs
xor
mov
test
ins
sub
inc
(bad)
dec
add
fmul
mov
inc
call
pop
fcmove
inc
imul
mov
imul
cmps
push
and
in
fcom
pop
and
jmp
sbb
call
adc
rcl
hlt
jl
cmps
lea
mov
xchg
call
test
push
arpl
sbb
scas
dec
xchg
arpl
loop
(bad)
mov
std
lock
js
sub
or
inc
(bad)
cmp
data16
aad
js
mov
sti
sub
fsubp
xchg
cli
xor
sahf
inc
mov
fs
sbb
jmp
bound
leave
es
push
inc
ins
pop
fwait
retf
rol
daa
and
pushf
lds
sub
imul
aam
inc
jmp
bndstx
imul
test
arpl
cmp
sbb
in
test
xchg
or
gs
mov
outs
push
mov
or
sub
sub
push
dec
xor
mov
cli
mov
push
outs
(bad)
ret
fwait
movs
push
inc
mov
in
lea
test
js
mov
or
imul
outs
repz
xor
(bad)
add
test
daa
repnz
(bad)
mov
xor
daa
sub
sahf
xlat
rcr
add
mov
or
and
or
sbb
sti
xlat
sar
ret
das
arpl
lds
or
mov
movs
and
ja
scas
sub
fimul
sub
and
mov
stos
push
push
push
cli
ror
add
outs
push
xchg
dec
(bad)
pushf
ret
xlat
sbb
push
icebp
jne
(bad)
push
jp
dec
cmp
pushf
inc
(bad)
movs
lahf
in
loopne
adc
ss
fs
aas
mov
inc
xchg
xor
and
lods
dec
fcmovu
pusha
jg
test
in
ss
and
clc
xlat
int3
popa
lock
push
push
sub
cmp
cmp
xchg
sbb
pop
lea
push
dec
idiv
push
add
in
out
shl
and
push
outs
fucomi
sbb
(bad)
jle
fsub
pop
cmp
loopne
cli
sub
push
and
arpl
ss
ror
add
popf
movs
adc
adc
bound
push
and
imul
mov
dec
fsubr
fcmovbe
mov
xchg
mov
and
test
sub
jns
cdq
int3
xor
sub
mov
test
in
(bad)
call
cmps
adc
loopne
jno
fcmovb
xor
icebp
dec
and
nop
and
shl
loop
mov
scas
mov
cmp
ins
scas
push
mov
jb
cwde
popf
popa
repz
push
mov
pop
xor
push
cmp
(bad)
cmc
out
int
rol
mov
loope
add
and
fcom
fs
or
xchg
pop
xlat
push
add
cli
mov
cmp
add
js
mov
pusha
call
lea
stc
retf
xor
ficom
mov
jne
imul
mov
je
fiadd
imul
loopne
sub
push
sbb
jb
push
jl
pusha
mov
jmp
ins
mov
mov
dec
(bad)
fistp
js
adc
pop
xor
gs
(bad)
push
jnp
add
(bad)
popf
add
shr
push
stos
inc
xchg
test
fisubr
mov
scas
push
cmp
cmp
clc
stc
test
stos
aam
adc
sbb
dec
in
(bad)
xchg
cpuid
fst
inc
or
and
xlat
imul
sbb
and
mov
iret
ret
mov
mov
mov
xchg
jge
jecxz
frstor
js
inc
add
in
jo
pop
jb
loop
cld
mov
mov
push
fbld
jb
aad
xchg
and
in
arpl
dec
cld
retf
adc
sar
dec
mov
out
inc
jle
adc
jle
dec
xor
loop
int
jp
dec
mov
call
mov
mov
test
xor
call
fidiv
pop
repz
xchg
pop
jb
jne
popa
out
mov
mov
dec
lahf
xor
pop
pop
adc
pusha
mov
(bad)
ficomp
popa
or
mov
dec
dec
enter
fwait
gs
add
mov
fild
xchg
inc
ja
out
push
sub
ins
or
test
ss
fs
cmps
test
xlat
bound
in
mov
add
and
mov
xor
adc
sar
in
xor
out
mov
enter
pop
push
out
jecxz
dec
xchg
xchg
pop
push
fist
jmp
rcl
in
inc
xchg
sub
in
lock
inc
pop
mov
aas
or
xor
dec
cli
xlat
(bad)
or
or
push
fwait
cmp
dec
daa
cmps
(bad)
ror
cmp
fcmovnbe
loopne
retf
retf
imul
out
sbb
ds
add
fldenv
ins
sbb
ja
clc
fidivr
dec
and
fdiv
mov
or
jb
add
mov
stc
jecxz
push
lods
aas
and
hlt
call
sub
mov
jbe
push
(bad)
dec
xchg
pop
cmp
jmp
dec
(bad)
icebp
mov
xor
enter
movs
inc
int
aas
and
sbb
add
(bad)
ins
cwde
pop
adc
sbb
int
cmp
push
fnstcw
loopne
not
jmp
pop
fsub
aas
and
inc
dec
outs
jecxz
(bad)
mov
pop
loopne
cmp
rcr
(bad)
(bad)
sbb
add
ror
fdivp
mov
push
and
pop
loope
and
arpl
jl
sti
mul
inc
xchg
mov
and
fsub
push
sub
mov
xor
adc
sub
outs
cmp
jecxz
cld
and
icebp
lea
test
(bad)
inc
lods
enter
(bad)
jne
retf
(bad)
movs
ret
popf
cs
push
dec
pusha
fst
push
push
mov
xchg
(bad)
jns
dec
push
into
cmp
mov
stc
ror
outs
pop
pusha
in
inc
adc
shl
sbb
gs
xchg
push
jg
cmp
mov
mov
js
cdq
xchg
dec
jmp
aaa
(bad)
or
into
jp
and
out
pop
or
ror
es
lock
addr16
push
or
sub
push
stos
mov
pop
(bad)
(bad)
push
in
pop
lock
pop
ja
jmp
movs
loope
les
ret
(bad)
push
push
cmp
aam
adc
sbb
sub
xor
loop
scas
pop
call
cmp
sahf
ins
mov
xor
cmp
inc
cld
mov
xor
into
adc
pop
mov
xchg
mov
(bad)
in
int
pop
scas
loop
inc
mov
aas
fadd
adc
pop
jno
adc
imul
or
fnsave
sub
in
icebp
popf
scas
fucomp
pop
or
in
aam
(bad)
cmp
xor
js
daa
jb
(bad)
cli
jo
sbb
popa
je
sar
xchg
jp
xor
fcom
outs
adc
rcr
stc
pop
pop
mov
and
push
mov
mov
ret
(bad)
lock
int
mov
mov
pop
pop
ss
mov
sbb
push
adc
push
add
shr
into
or
inc
in
inc
xor
and
(bad)
outs
dec
int3
js
dec
dec
push
jg
cmp
inc
imul
pushf
mov
das
mov
scas
and
and
mov
push
ss
xor
ins
mov
sbb
retf
xchg
jbe
xlat
mov
fisubr
add
movs
jno
push
mov
mov
inc
mov
scas
push
inc
fwait
repz
call
ret
ret
cmp
push
jno
hlt
pop
add
and
xchg
mov
shr
hlt
mov
hlt
or
inc
cdq
sbb
xchg
call
dec
xchg
pusha
addr16
or
(bad)
pop
sar
add
mov
loopne
test
dec
int
pusha
ss
vmovq
cmps
enter
jnp
fisttp
xchg
je
data16
inc
lds
ss
iret
mov
sub
or
in
mov
pop
in
xchg
sti
jns
cmp
gs
mov
stc
dec
cmp
and
in
xor
movs
int3
(bad)
pop
out
push
add
jp
pushf
push
mov
popa
ss
movs
push
push
fsub
ret
or
mov
pop
cmc
or
in
pop
sbb
push
push
sbb
es
xor
cmp
adc
leave
call
gs
or
mov
dec
dec
ja
nop
ret
sbb
adc
mov
test
xor
pop
fmul
loope
mov
fsubr
loopne
push
mul
xor
or
and
stos
mov
push
adc
(bad)
in
fisub
sub
add
stos
add
dec
mul
jle
or
aas
sub
mov
mov
push
xor
pop
inc
and
and
in
ds
leave
std
out
jno
adc
mov
sub
sub
imul
xchg
add
sub
lock
nop
(bad)
lods
cmps
imul
xor
mov
push
xor
loope
or
(bad)
pop
xchg
mov
je
(bad)
test
rol
cwde
and
loopne
jmp
ja
arpl
jns
outs
repnz
or
dec
repnz
add
add
pop
inc
fbstp
xlat
jg
dec
sahf
loope
sbb
shl
sub
not
lds
mov
(bad)
arpl
xor
sti
daa
bnd
push
in
int
mov
mov
pop
test
aaa
fcmovbe
(bad)
imul
inc
push
cld
pop
adc
inc
add
rcl
aaa
xchg
mov
add
sahf
(bad)
das
or
(bad)
cmps
or
xchg
or
mov
and
lods
sub
inc
sub
jns
imul
fadd
ss
in
fstp
daa
pop
jl
ret
(bad)
xchg
xchg
retf
mov
jl
jmp
fstp
mov
aad
out
lea
cwde
pop
xor
push
gs
int
sar
rcl
xor
sbb
push
sbb
mov
sar
mov
push
inc
jge
ins
into
inc
lds
or
in
pop
xor
pop
and
gs
bound
cmp
mov
pusha
cmp
sbb
cmp
mov
sub
jecxz
fs
cmps
push
jb
sub
xchg
fld
jns
pop
pop
or
sub
jecxz
(bad)
dec
ret
jmp
push
(bad)
je
scas
xchg
push
add
pop
mov
jo
cld
mov
out
xor
and
sbb
add
stos
xor
jae
push
mov
and
pop
push
inc
push
scas
inc
repnz
test
jmp
not
or
stc
stos
rcr
mov
mov
add
xchg
fld
xor
test
dec
out
aas
ret
xchg
mov
jl
retf
outs
out
adc
cwde
stos
aaa
dec
sub
dec
push
cmps
sbb
outs
pusha
and
cs
and
retf
adc
and
test
test
inc
bound
jns
ins
hlt
mov
movs
imul
out
jbe
dec
and
or
scas
js
ds
jns
(bad)
adc
out
imul
mov
xchg
mov
les
cld
jmp
rcr
xor
(bad)
or
cmps
and
mov
sbb
bound
inc
cs
sub
push
jb
mov
add
loopne
adc
ret
fs
jg
in
scas
sbb
out
aam
mov
scas
popf
(bad)
cli
(bad)
mov
enter
or
push
mov
nop
xchg
aaa
mul
popf
stos
dec
mov
xor
(bad)
repnz
or
loope
xor
mov
fs
enter
mov
inc
add
sub
ds
mov
sbb
jge
xchg
add
sbb
aad
in
ds
fcom
mov
fsub
sub
mov
add
pop
cwde
js
lds
ret
or
das
stc
int
pop
dec
fidivr
inc
aas
(bad)
xchg
pushf
push
(bad)
(bad)
mov
fiadd
je
inc
pmuludq
popf
out
adc
or
(bad)
pop
das
les
lock
add
int
dec
aas
sbb
mov
adc
xchg
xor
xchg
jg
dec
pop
aam
sbb
mov
jno
mov
mov
sbb
retf
sbb
enter
mov
mov
pop
inc
jne
jp
rcl
inc
les
leave
das
stc
movs
push
push
mov
retf
inc
cmp
mov
scas
loope
cmp
pop
pushf
xchg
test
mul
movs
gs
popf
jb
sbb
ins
xchg
adc
pop
fcomp
sahf
sar
(bad)
push
ret
push
dec
or
mov
jno
(bad)
sub
dec
out
movsx
test
jg
add
in
(bad)
xor
lock
lock
dec
retf
xchg
cli
push
scas
push
sbb
jno
or
iret
loop
xchg
push
aas
imul
fisubr
pop
(bad)
das
pop
pop
scas
push
out
icebp
mov
stc
sub
in
xor
in
bound
fistp
pop
xchg
sbb
xor
mov
in
ins
int
rol
aas
movs
in
leave
mov
ret
mov
xchg
mov
jbe
in
or
nop
or
retf
sbb
rcl
inc
cmp
dec
xor
ds
neg
inc
sub
dec
jbe
mov
cli
cmps
js
test
push
aas
mov
cmp
and
sahf
xchg
and
sub
faddp
sbb
dec
int3
daa
(bad)
jmp
out
or
or
leave
adc
and
adc
xor
ins
mov
cmp
jbe
test
imul
inc
fdivr
test
sbb
lea
out
mov
sbb
mov
sbb
inc
cli
mov
push
movs
cs
sub
mov
xor
sub
fiadd
in
xor
enter
push
ja
fbld
data16
add
int3
cli
(bad)
xlat
and
push
mov
jo
lods
rcr
retf
out
push
or
(bad)
jg
pushf
pushf
push
int3
stos
mov
sbb
pop
sbb
xor
call
dec
lds
jae
dec
or
lahf
sub
mov
or
daa
mov
xchg
adc
ss
adc
iret
movs
(bad)
pop
stos
sahf
std
nop
xchg
arpl
mov
or
jle
es
and
cmp
movs
popa
mov
sbb
imul
jmp
cmc
jle
data16
mov
sub
rol
js
inc
mov
stc
inc
daa
in
movs
(bad)
pop
push
jmp
and
xchg
or
or
das
pop
gs
iret
repz
aad
aas
pusha
pop
xor
inc
test
in
(bad)
dec
int
fcomp
adc
xchg
dec
rcr
or
adc
mov
ret
test
movs
sub
icebp
fild
pop
and
pop
sub
inc
sbb
not
fmul
repnz
(bad)
xor
dec
dec
and
imul
xor
jbe
int3
mov
xchg
pop
or
jle
call
mov
je
scas
mov
jbe
and
mul
fisub
and
cmp
xchg
nop
(bad)
push
gs
or
fdivr
hlt
(bad)
out
pop
sub
lds
stc
int3
mul
or
push
sbb
repnz
imul
retf
das
jbe
dec
ret
stos
in
scas
fs
nop
xor
xor
clc
jl
out
push
loope
xor
(bad)
xchg
arpl
inc
dec
sub
pop
xor
jb
cmp
out
bound
push
adc
lea
adc
bswap
jno
add
cmc
or
xlat
xchg
fimul
mov
xlat
sub
inc
shr
push
cld
pop
sbb
fldcw
xor
hlt
mov
lea
(bad)
aaa
or
mov
std
or
fisub
push
(bad)
data16
mov
adc
xchg
pop
js
jae
rcl
inc
mov
je
fidiv
cmp
in
repnz
jmp
inc
idiv
xor
popf
loope
call
arpl
adc
mov
ss
icebp
jl
mov
sub
xchg
adc
test
pusha
pop
ins
mov
sbb
sbb
lea
rcr
addr16
fist
cmp
out
(bad)
sahf
mov
dec
jne
das
sbb
pop
mov
push
ja
jnp
lods
sub
or
adc
cmp
or
or
push
jne
xchg
lahf
add
mov
push
or
mov
(bad)
jge
adc
and
push
mov
fsubrp
jecxz
into
cmps
sbb
sbb
pop
cmp
add
xchg
pusha
mov
in
lods
jl
adc
mov
(bad)
pusha
ret
icebp
adc
fwait
xchg
xor
sahf
out
aad
(bad)
mov
or
jo
test
push
mov
ficom
mov
dec
mov
loop
mov
iret
push
jbe
push
sti
out
jbe
or
xlat
push
cwde
les
clc
pushf
add
ins
cmp
jbe
or
sbb
div
jl
test
icebp
adc
ja
push
fnstcw
lahf
test
jnp
stc
sub
cmp
mov
shl
(bad)
pop
outs
xchg
jle
jle
lds
inc
lods
pop
jno
inc
shl
xchg
shr
dec
xchg
aaa
not
dec
sbb
cmp
sahf
xor
inc
cmp
ds
mov
sbb
aad
fwait
push
enter
mov
enter
movs
cmp
or
cmp
outs
xchg
mov
lds
test
jl
out
and
xchg
mov
outs
sahf
hlt
nop
test
xor
mov
int
or
imul
dec
mov
cdq
jge
lock
lds
adc
dec
pusha
mov
cwde
sti
add
sbb
pop
aas
and
jbe
(bad)
mov
aam
pushf
and
jns
sar
lea
in
movzx
add
pop
push
sbb
mov
inc
adc
or
cmp
das
imul
es
pop
xchg
jp
push
push
dec
add
dec
or
sub
sbb
fsub
addr16
lea
push
or
ficomp
push
inc
pop
stos
popa
inc
and
pop
and
or
mov
movs
dec
icebp
push
mov
cmc
push
adc
outs
je
arpl
xchg
repnz
xchg
push
push
push
test
ja
mov
mov
nop
dec
(bad)
aas
cs
aaa
dec
sahf
add
cmp
lahf
push
aas
(bad)
sub
xchg
mov
int3
outs
jle
jle
shr
mov
ja
and
jbe
outs
div
je
cmp
mov
xlat
cmp
sbb
mov
jmp
call
movs
out
cld
aas
jo
sbb
aam
js
cmps
shl
mov
test
pop
icebp
sub
scas
inc
outs
push
and
popf
pushf
or
js
loopne
xor
adc
push
sti
xor
push
sub
out
mov
out
outs
ret
mov
cwde
dec
clc
push
push
jbe
call
pop
enter
xchg
dec
mov
cmps
cmp
shr
inc
ror
and
(bad)
(bad)
sbb
scas
cmps
popa
inc
mov
sbb
loop
test
das
xchg
mov
(bad)
stos
inc
pop
jmp
inc
das
(bad)
repz
imul
ss
mov
xor
cld
in
add
jb
sbb
enter
or
repnz
sub
jno
aad
das
mov
adc
rcl
add
dec
push
inc
test
xchg
call
mov
xor
call
stos
ficom
jmp
mov
sti
shl
outs
out
ja
(bad)
sbb
pop
adc
push
(bad)
fidivr
jg
outs
and
out
push
inc
(bad)
sbb
inc
scas
sub
ss
outs
mov
xor
jmp
arpl
ds
cmps
inc
sbb
iret
fst
jle
add
std
inc
mov
test
push
call
out
push
xlat
loopne
cmp
fst
xorps
in
imul
push
lahf
ins
push
in
cli
xor
fdivr
mov
loop
mov
jo
out
jbe
je
aam
dec
add
(bad)
loopne
ss
xor
sub
or
outs
fst
add
repnz
lea
or
ins
std
mov
mov
add
(bad)
mov
pop
test
out
pop
test
loopne
outs
and
out
test
mov
xor
(bad)
test
loope
mov
ds
into
mov
out
mov
dec
mov
pop
loop
cmp
xor
sar
jecxz
cmc
out
push
xlat
pop
dec
cmp
cmc
add
inc
call
jmp
ror
shl
mov
dec
jnp
mov
and
mov
mov
stc
push
mov
push
push
xor
push
xor
push
test
pop
and
mov
or
arpl
test
mov
movs
fnstsw
loope
imul
and
lods
mov
dec
outs
sar
dec
sahf
jmp
push
jae
add
jns
fwait
call
sbb
dec
inc
mov
shr
pusha
cs
lods
data16
pop
dec
inc
mov
sbb
pop
push
rcl
pop
outs
arpl
adc
scas
inc
sbb
cli
lds
aad
push
hlt
xor
pop
lods
sub
ss
push
add
pop
in
in
xor
call
or
cmp
lea
jbe
fsubr
int
call
ja
mov
int3
int
jp
dec
push
imul
push
fs
sbb
in
pusha
jge
dec
int
jmp
or
(bad)
rcl
std
dec
out
jecxz
jne
pop
daa
cwde
pushw
mov
dec
xchg
sbb
leave
shr
and
lds
fidivr
jg
test
ins
fst
loopne
or
js
pop
sub
jb
pop
inc
in
ret
pushf
lea
ret
xor
add
loopne
rcr
xchg
mov
sbb
mov
ds
jecxz
fimul
sahf
and
pop
dec
and
lea
jb
push
cmps
dec
inc
dec
jnp
xor
mov
int
int
sbb
or
iret
in
inc
mov
add
das
sbb
push
addr16
popa
dec
inc
test
mov
jnp
dec
and
cs
xchg
test
cmp
and
add
call
loope
repz
mov
test
dec
adc
or
shl
test
fstp
out
ins
std
cmps
imul
inc
int3
(bad)
mov
mov
push
into
mov
test
pop
scas
fstp
cmp
sbb
shl
add
xchg
fadd
pop
sbb
mov
movs
adc
sub
adc
pop
inc
mov
repz
push
xchg
stos
test
lods
inc
xor
pop
sub
and
push
or
sbb
pop
cmp
cmp
mov
sub
not
push
pop
loope
arpl
push
mov
or
mov
xchg
sub
mov
cmp
sbb
dec
(bad)
(bad)
mov
mov
cmp
jns
dec
mov
in
outs
frstor
and
arpl
sub
xchg
(bad)
mov
cmc
cld
lds
cmp
sbb
mov
pusha
call
mov
add
inc
and
clc
movs
retf
fdivp
out
or
jge
mov
or
mov
push
mov
stc
int
fidivr
mov
jle
dec
or
shl
enter
out
xor
iret
mov
pop
and
in
inc
std
xor
sub
in
nop
jmp
dec
repz
sbb
test
jnp
test
adc
test
rol
fisubr
xchg
sar
mov
inc
add
jo
mov
adc
rcl
hlt
call
sbb
inc
es
ret
mov
push
aaa
jb
jne
xchg
dec
cmp
lods
pop
push
push
jb
rcr
push
or
mov
push
or
inc
jns
mov
jbe
sub
das
lahf
and
arpl
adc
dec
jmp
cmps
cmp
xor
sbb
jbe
popa
scas
xlat
lods
jecxz
mov
inc
pop
test
jnp
cdq
test
xor
add
push
cld
cmps
rcl
sub
mov
cmp
rol
push
pop
mov
icebp
xor
dec
sahf
retf
in
xor
cmp
xchg
inc
cmps
pop
ins
sub
fsub
xor
or
push
inc
(bad)
push
sbb
cmc
pop
fsub
mov
jmp
sbb
lock
(bad)
or
push
pop
fcom
lods
es
mov
mov
inc
push
add
push
sti
(bad)
xor
stos
push
pop
sbb
ret
cmps
test
cs
retf
mov
adc
lds
and
jge
xchg
jmp
ja
xchg
dec
xor
sbb
jbe
pop
(bad)
push
xlat
sar
jmp
dec
xor
call
and
enter
lds
xor
fdiv
sbb
pop
lods
stos
les
ja
in
addr16
cmp
mov
cmps
inc
cmps
cmp
jbe
xchg
fs
fstp
cmp
and
cmps
sub
sub
cld
adc
rol
loope
xchg
and
xor
fld
push
in
ins
push
xlat
xchg
(bad)
punpckldq
add
stos
xor
adc
retf
cmp
cmps
jno
dec
sbb
ds
jge
mov
icebp
push
jmp
jle
push
xor
adc
retf
xchg
(bad)
lahf
jl
outs
adc
inc
loope
icebp
jb
cmp
jnp
xchg
lods
xchg
push
movs
xchg
add
ja
inc
dec
jge
and
sub
and
and
cmp
mov
pop
shl
push
mov
or
das
pop
cmp
xchg
cmp
cmp
js
aas
mov
jbe
xchg
mov
mov
test
jmp
leave
lock
sahf
add
mov
jmp
leave
adc
mov
out
inc
adc
dec
lods
sbb
pop
pop
fwait
push
sub
fstp
dec
and
arpl
retf
dec
jg
cli
fwait
xchg
outs
push
mov
push
jne
icebp
push
popa
dec
adc
or
cmp
adc
cmp
pop
(bad)
loop
jmp
jmp
xchg
and
lods
push
push
adc
fnstcw
cwde
adc
mov
into
aam
cmp
sbb
xor
xchg
inc
daa
xchg
lods
inc
push
(bad)
mov
adc
aaa
xor
pop
sbb
test
daa
arpl
inc
fsub
lea
adc
fcomp
mov
(bad)
imul
jns
test
sti
mov
call
inc
push
popa
dec
adc
pop
add
fnstcw
and
and
jle
mov
mov
xor
push
sub
popf
jo
jmp
adc
hlt
cs
fucomp
cli
out
mov
sbb
adc
sub
push
aaa
mul
pop
pop
xchg
lds
loopne
xlat
cmps
bound
pop
call
jmp
mov
test
add
test
sub
add
(bad)
scas
or
inc
xor
add
pop
(bad)
cmp
cmps
adc
popf
mov
data16
adc
stos
aas
sub
cmp
push
and
fs
leave
(bad)
out
call
int3
aaa
jle
xlat
popf
repz
movs
int
data16
mov
adc
cmp
jns
movs
inc
adc
mov
popf
js
sbb
data16
lahf
sbb
mov
das
mov
dec
xchg
add
xchg
dec
cmp
outs
cs
adc
or
inc
out
xchg
jle
pop
int3
dec
xchg
jmp
push
mov
shl
inc
inc
adc
gs
fwait
xor
stos
rol
mov
in
and
xor
in
sbb
mov
xlat
ds
les
inc
ins
enter
out
sub
test
imul
add
inc
es
inc
or
out
sbb
push
mov
and
cli
dec
jns
sub
xlat
es
adc
mov
dec
das
cmps
daa
ins
push
pushf
jb
jge
dec
pop
stos
ret
or
out
addr16
jge
adc
xor
pop
out
xchg
push
gs
push
lock
aas
mov
fs
stc
jno
out
dec
scas
jge
push
adc
push
push
cld
sti
repz
(bad)
mov
ins
adc
out
mov
mov
rcr
add
push
push
mov
mov
push
pop
ins
cmp
cmp
out
mov
aam
(bad)
cwde
out
xchg
mov
mov
inc
jmp
sub
xchg
in
cmp
fwait
retf
mov
addr16
(bad)
into
popf
das
adc
fcom
inc
stos
jl
mov
lock
in
xchg
pop
inc
add
pop
test
pusha
fs
xor
mov
hlt
jl
adc
test
pop
add
push
inc
(bad)
xchg
pusha
push
lock
push
jo
test
mov
or
mov
fiadd
mov
in
cwde
sub
mov
sub
outs
movs
(bad)
cs
mov
retf
jmp
das
test
sbb
adc
pop
rcr
retf
jl
fild
mov
loopne
ins
jg
pop
shl
push
out
lods
cmp
idiv
xor
cs
mov
mov
outs
out
mov
inc
retf
adc
pop
add
in
push
mov
imul
add
mov
(bad)
shl
sub
ins
inc
xor
add
ret
out
sub
dec
fs
fwait
ss
std
push
test
jge
jns
mov
aaa
pop
aaa
pusha
sub
mov
mov
shr
ins
fadd
stos
maxps
jp
pop
fimul
pop
push
iret
fsub
cmp
data16
pusha
sbb
and
xchg
pop
cmps
mov
clc
xchg
ret
loope
inc
push
pushf
inc
fisubr
stos
jb
jo
cmp
sti
inc
pushf
ss
or
inc
and
push
add
jp
sub
mov
ins
add
push
loop
repnz
mov
addr16
imul
mov
mov
loope
bound
test
inc
je
mov
push
dec
sahf
jae
js
js
pop
sbb
jae
xor
aaa
xor
mov
push
(bad)
pop
xchg
bound
dec
inc
xchg
xor
(bad)
js
cmp
mov
movs
leave
lds
cmp
fst
sbb
xor
fadd
cli
adc
mov
repnz
jb
sti
dec
or
in
xor
xchg
add
fucomi
lahf
jmp
imul
mov
stos
or
aam
retf
xchg
mov
repz
mov
add
cmp
(bad)
push
adc
jbe
nop
test
mov
div
and
ins
cmps
(bad)
xor
loopne
out
add
cmp
shr
add
es
push
out
fucom
int3
test
mov
xchg
lock
test
jo
add
dec
pop
stos
dec
xchg
jecxz
sbb
punpckhwd
addr16
sub
int3
mov
push
out
xor
(bad)
jbe
add
dec
mov
(bad)
push
adc
jmp
movs
jns
dec
jae
aaa
push
rcr
fisttp
int
jle
mul
pusha
sahf
sbb
outs
mov
push
push
mov
mov
cmp
sahf
ss
hlt
mov
in
popa
shr
mov
ds
es
ins
inc
test
mov
(bad)
mov
add
nop
jno
mov
in
or
es
sbb
iret
test
or
mov
adc
dec
add
test
lds
scas
outs
cmp
icebp
loop
rcl
jns
sbb
dec
and
pushf
sub
and
cmp
pop
jnp
out
cmp
xor
scas
xchg
repnz
fsub
aam
sub
jmp
cli
pop
gs
ds
xor
jp
mov
mov
sub
iret
mov
inc
mov
or
push
sbb
cmps
dec
shl
xor
test
jae
pop
cmp
mov
fld
sub
mov
les
push
xchg
push
pop
mov
pop
sar
and
cwde
mov
sbb
stos
sub
push
xchg
and
scas
inc
out
push
test
shl
or
jp
pop
(bad)
xor
inc
je
add
jl
outs
mov
ss
lods
outs
lock
xchg
out
ret
xchg
jecxz
ret
and
add
es
in
int3
retf
push
xor
dec
mov
sub
stc
pop
add
fs
jb
dec
mov
cld
adc
sbb
and
test
xor
rol
outs
push
stc
jmp
pop
fs
movs
gs
cdq
mov
int
test
jg
fisttp
or
pop
popf
mov
push
int
add
jbe
sbb
xor
pop
test
iret
ror
fstp
adc
mov
and
cmp
dec
xor
aad
add
je
shl
dec
ds
call
cli
in
sub
cmp
popa
test
cmova
shr
xchg
arpl
ret
in
push
push
call
mov
sub
imul
scas
(bad)
and
and
sahf
adc
push
xor
fcom
imul
js
es
xchg
test
xchg
mov
pop
icebp
xlat
add
mov
mov
ja
pop
hlt
jge
jae
in
mov
(bad)
sbb
mov
stos
retf
lahf
jne
mov
adc
test
popf
mov
rol
les
(bad)
fsubr
mov
sub
pop
add
shl
push
test
ret
gs
ins
cmps
fst
movs
test
push
mov
rol
std
cmp
dec
jl
in
xor
pop
push
lods
gs
pop
pop
scas
add
jmp
cmp
lock
push
cmp
mov
rcl
xchg
add
sbb
or
mov
add
cmp
cwde
sbb
mov
jge
ret
jmp
aaa
push
adc
icebp
mov
jo
add
out
xchg
mov
cs
movs
mov
mov
xchg
test
jecxz
jmp
inc
aad
jmp
retf
sbb
or
jp
pop
push
xlat
neg
mov
push
mov
jecxz
mov
fninit
cld
xor
xchg
jbe
adc
mov
xor
cmp
cmp
ret
je
sub
sub
mov
push
inc
add
dec
inc
mov
retf
ret
inc
mov
sbb
(bad)
int3
aas
in
add
ja
int
jno
imul
xchg
ins
out
dec
stc
je
push
lahf
cmps
xchg
fmul
sub
adc
pop
test
adc
cmp
jae
jmp
(bad)
push
jle
or
push
out
pop
es
retf
xchg
mov
ds
pop
push
in
xchg
cmps
sbb
xor
outs
iret
xchg
sbb
mov
gs
inc
js
and
out
retf
in
das
rcr
out
sbb
inc
inc
in
arpl
pop
mov
inc
and
imul
and
jb
mov
jne
push
mov
aas
mov
mov
je
outs
jp
push
dec
add
pop
dec
std
fisttp
mov
popf
sbb
or
pop
in
(bad)
push
cli
pop
xchg
pop
pop
not
mov
dec
div
mov
sar
pop
pushf
xlat
in
test
mov
aas
(bad)
jge
and
(bad)
mov
repz
shl
(bad)
push
jmp
pop
dec
dec
push
shl
mov
sub
sar
movs
mov
sahf
aaa
mov
push
dec
dec
xchg
xchg
cmp
js
mov
mov
in
sahf
mov
pop
inc
out
(bad)
lds
cmps
xchg
adc
shl
outs
cmp
xchg
mov
dec
mov
sub
inc
push
outs
sbb
push
pop
jmp
movs
out
inc
in
in
push
in
ret
jno
mov
aaa
xchg
cli
mov
sar
imul
cmp
sbb
icebp
mov
in
or
push
add
cmp
mov
pop
xchg
aad
ins
jle
adc
cmc
pop
mov
cmc
popa
iret
mov
scas
enter
mov
(bad)
dec
retf
not
scas
(bad)
das
(bad)
sub
ret
push
and
cmps
cwde
cwde
rcl
imul
jl
out
mov
outs
mov
popf
(bad)
adc
sub
push
mov
pop
push
and
xchg
(bad)
je
xchg
pop
fmul
dec
mul
mov
retf
mov
stos
(bad)
mov
sbb
xchg
xchg
sbb
ss
ins
mov
xor
push
pop
cmp
repz
popa
lea
sbb
les
xor
push
fidivr
imul
xor
outs
push
push
popf
push
fcomp
jle
test
mov
xchg
sub
outs
ffreep
rol
popa
hlt
jecxz
mov
or
push
loope
nop
outs
mov
cld
add
sti
cmps
sbb
jb
(bad)
std
and
out
(bad)
cmp
imul
aad
sbb
(bad)
and
(bad)
(bad)
mov
jb
and
dec
mov
lds
sub
in
add
dec
fsubr
test
jp
leave
dec
les
test
out
push
push
shl
cld
push
in
jmp
mov
ds
mov
in
daa
cmp
pushf
lods
mov
ins
(bad)
and
cmp
and
adc
in
mov
call
mov
rcr
loop
and
fcomp
dec
fs
cmp
xchg
adc
xchg
mov
xchg
ds
lds
popa
(bad)
jmp
xor
fstp
in
push
repz
hlt
cmps
or
mov
xor
test
add
cmp
fadd
push
test
pop
sub
jno
mov
out
ins
and
push
xchg
cli
xchg
std
push
mov
pop
loop
add
mov
mov
in
cmp
dec
retf
push
pusha
scas
mov
pop
out
xchg
xchg
outs
jmp
push
es
nop
aad
adc
xor
xchg
jne
push
sbb
loop
cmp
mov
or
outs
pusha
or
sahf
jo
loopne
pop
sub
dec
cmp
lock
cs
sbb
inc
and
inc
les
hlt
es
ins
jno
lods
ror
xchg
iret
inc
shl
imul
mov
push
into
inc
in
push
lods
mov
mov
(bad)
dec
and
fadd
mov
stc
(bad)
int
inc
js
lods
or
ja
aas
add
jne
sbb
stos
mov
push
out
cdq
push
jno
mov
ins
xchg
push
test
sbb
ss
lods
inc
ret
jl
(bad)
out
lahf
sbb
and
stos
or
les
mov
mov
faddp
shr
and
jg
(bad)
mul
hlt
mov
dec
out
hlt
outs
pop
aaa
xor
add
lock
add
cmp
cmps
xor
pop
mov
jbe
mov
mov
dec
jbe
(bad)
cdq
pop
dec
xchg
lds
jno
dec
pushf
dec
mov
and
arpl
sbb
jg
or
jne
in
call
dec
(bad)
xchg
push
mov
sbb
out
dec
mov
arpl
popa
ret
and
jecxz
inc
adc
into
pop
leave
fisubr
pop
jecxz
mov
jg
call
xlat
add
cmps
aam
mov
inc
test
mov
sub
adc
mov
sub
push
iret
int
push
cs
or
out
repnz
push
out
mov
je
retf
dec
mov
nop
loop
fxch
clc
rol
aad
lds
jle
dec
pop
jge
adc
cmp
sbb
ins
fimul
pop
out
in
jl
stos
aas
pop
or
push
mov
cmps
or
xor
sbb
arpl
in
mov
rcr
mov
mov
xchg
and
sbb
cld
dec
aad
sahf
(bad)
xor
xchg
add
into
xlat
pop
adc
mov
pop
dec
push
clc
adc
sbb
and
cmps
popf
push
test
xchg
xor
xchg
clc
loope
sub
cmp
bound
imul
jmp
push
pop
xor
mov
leave
aas
sbb
add
arpl
pop
inc
mov
fsubr
jp
add
in
push
push
mov
jp
mov
sysret
jne
pop
adc
lods
sub
movs
sti
pop
mov
sahf
loop
jne
mov
jb
icebp
jmp
cmp
in
mov
and
or
int3
je
xchg
mov
repnz
pop
xor
push
mov
add
sub
pop
sbb
sbb
xchg
hlt
jns
sbb
jbe
xor
test
dec
pop
jmp
mov
arpl
push
mov
in
pop
mov
xor
imul
out
arpl
repnz
cmps
mov
add
xchg
jno
dec
push
xchg
mov
shl
jnp
and
in
jl
push
lods
cmp
cmp
sub
out
xchg
rcl
xchg
adc
adc
inc
xlat
or
dec
loopne
retf
fsubrp
cmps
sahf
aad
iret
in
mov
push
fwait
out
(bad)
les
mov
push
cmp
xchg
cdq
xchg
fidivr
hlt
out
dec
daa
js
(bad)
dec
xchg
aas
mul
leave
rcl
loope
mov
or
dec
xchg
sub
mov
ins
imul
mov
dec
lds
loope
ret
mov
inc
pop
test
(bad)
sar
lds
sub
shl
cmps
mov
cmp
js
or
ins
(bad)
lahf
sub
xchg
inc
lods
push
dec
mov
and
enter
xor
imul
stos
adc
imul
cmp
rol
cmp
inc
out
leave
push
and
ficomp
icebp
cmp
mov
xchg
jo
adc
loope
push
mov
shl
out
dec
mov
jno
call
(bad)
retf
in
bound
xchg
scas
cmc
or
or
in
cmp
nop
push
jecxz
nop
add
daa
xchg
(bad)
xor
enter
mov
pusha
mov
inc
pusha
fstp
(bad)
retf
scas
mov
mov
pop
add
dec
jnp
jl
sbb
add
movs
mov
pop
add
mov
sbb
xor
pop
ficomp
add
mov
pop
daa
pop
xlat
stc
adc
loop
jl
mov
add
stc
sub
pop
push
dec
stos
xchg
add
sub
pop
sub
sub
mov
lea
and
pop
popf
xor
adc
mov
enter
fstp
aaa
push
stos
inc
aas
mov
adc
daa
es
test
xor
adc
into
int
jns
fmul
(bad)
fiadd
out
ss
mov
jbe
mov
bound
in
sahf
aam
add
lods
mov
fld
cmp
(bad)
lock
or
out
sahf
inc
ss
int3
lahf
dec
stc
and
outs
and
jg
leave
loop
fcmovb
sar
sbb
jno
jo
(bad)
ret
mov
jns
dec
iret
inc
and
pop
movlps
jmp
ret
popf
or
dec
push
sbb
lods
ins
mov
push
fsubr
ret
jge
pop
pop
jle
jg
adc
push
xchg
mov
data16
popf
jmp
shr
mov
lods
(bad)
push
jnp
jbe
out
mov
sahf
in
out
shl
jp
test
xor
push
test
dec
inc
mov
loop
into
push
sub
lea
aas
cmp
and
or
repnz
mov
push
push
sub
pop
mov
mov
mov
fild
lea
mov
call
movs
xchg
push
leave
jb
mov
in
jge
mov
sbb
and
mov
je
icebp
sbb
fs
loopne
xchg
ins
dec
jns
retf
loopne
mov
dec
shr
fs
jle
ds
push
jnp
es
or
mov
pop
fnstenv
jnp
mov
jne
xchg
jns
dec
fcomp
dec
call
call
shr
pop
xchg
mov
and
fsubr
xor
(bad)
imul
and
mov
test
stc
shl
inc
xchg
add
or
scas
mov
scas
adc
xor
retf
push
ror
jne
fiadd
fdiv
xor
test
or
pop
lea
xor
leave
dec
jmp
mov
mov
add
cmp
pop
retf
icebp
cli
lods
cmps
ins
movs
xchg
mov
dec
cmp
xchg
mov
push
xor
xor
push
mov
sbb
stc
pop
push
ss
dec
jbe
hlt
adc
inc
cmp
ins
(bad)
aas
cwde
cli
fiadd
mov
pop
dec
push
xor
mov
call
adc
push
imul
je
pop
adc
xchg
add
cld
xlat
pop
lahf
mov
dec
es
in
(bad)
stc
push
cld
loope
pushf
movs
pop
cmp
icebp
test
push
aad
imul
add
cmp
shr
in
lods
and
es
push
out
pop
push
das
int
xchg
lea
fmulp
out
pop
cmp
enter
mov
adc
mov
push
mov
loopne
xor
push
inc
mov
sub
adc
or
xchg
add
loop
test
sub
arpl
les
xchg
jbe
push
aad
movs
push
rcl
repz
push
mov
adc
or
jns
cmc
hlt
fistp
or
adc
mov
mov
adc
pop
mov
out
inc
pop
pop
and
sub
and
bound
dec
inc
das
ins
cmp
clc
cmp
mov
mov
add
in
dec
jle
cs
xchg
mov
ins
mov
push
inc
je
xchg
jl
push
mov
inc
inc
outs
pop
add
mov
je
stc
cli
inc
add
push
into
dec
mov
pop
(bad)
ja
xchg
push
jmp
sub
cmp
pop
std
push
aam
movs
outs
ds
push
jns
adc
sub
mov
call
fist
or
call
mov
imul
mov
aaa
mov
std
push
xor
jne
mov
add
pop
ror
aas
rcr
mov
mov
sbb
mov
mov
mov
retf
and
sbb
outs
cdq
lahf
adc
idiv
into
test
in
sbb
ds
push
push
xchg
fsub
icebp
and
fisub
inc
xchg
mov
jge
adc
jo
xor
ret
(bad)
jle
xor
fld
pushf
addr16
retf
das
push
cmps
pop
pop
xor
inc
mov
mov
jae
pop
dec
test
mov
aad
and
add
add
fstp
ret
pop
sub
inc
gs
mov
sub
sub
loop
test
ficom
aad
and
call
and
(bad)
add
or
pushw
jmp
or
stos
jb
xchg
sahf
leave
xor
add
movs
mov
stos
imul
pop
sub
sbb
gs
xchg
inc
and
xchg
not
jbe
push
sub
mov
cmp
jg
mov
nop
mov
adc
jns
call
or
xor
stos
ins
sub
push
pop
cmc
movs
dec
aad
pop
and
inc
pop
iret
jle
sbb
test
shr
jmp
jmp
das
test
test
push
pop
inc
sub
ds
or
(bad)
das
inc
push
pop
cmp
adc
jns
retf
fbld
pusha
xor
mov
pop
sbb
stc
jbe
inc
inc
dec
ds
xchg
es
sub
xor
sub
nop
(bad)
lock
jmp
cmp
shr
pop
imul
scas
add
in
stos
sub
test
mov
int
lods
push
(bad)
fdiv
mov
leave
inc
xchg
add
int
xor
aaa
mov
sub
leave
pop
hlt
mov
mov
push
bnd
dec
cmp
(bad)
call
cmp
mov
mov
push
pushf
das
fcomp
and
loopne
adc
mov
xchg
(bad)
cmp
mov
adc
pop
mov
lods
jge
mov
shl
pop
fmul
cmp
push
xchg
pushf
(bad)
ja
dec
xor
cwde
jmp
sbb
push
sub
lock
xor
xchg
or
xlat
push
ja
popf
lea
call
ret
or
jnp
pop
sbb
pop
(bad)
int
retf
test
daa
scas
or
adc
addr16
add
jbe
mov
ss
jg
inc
sbb
fwait
jge
ret
push
or
daa
jle
sub
pusha
pop
or
xrelease
and
inc
ins
cmp
enter
jmp
aam
addr16
ret
xor
cmp
sub
imul
loop
bound
fldenv
mov
lea
les
mov
repnz
push
ss
cld
add
pop
cmp
ins
mov
out
mov
pop
repnz
adc
xor
cs
fcmovb
xor
(bad)
pop
cmc
add
scas
cmp
gs
pop
sbb
lods
mov
(bad)
stc
pop
aas
cdq
xor
sbb
push
pop
push
and
pop
xchg
test
inc
stc
std
xchg
(bad)
sbb
ret
pop
cli
es
inc
arpl
pushf
outs
mov
retf
sub
cmp
pop
arpl
and
adc
retf
(bad)
jmp
(bad)
shr
cli
xchg
nop
loopne
(bad)
out
pop
sub
sahf
xor
jle
out
add
fild
dec
nop
xchg
push
stos
pushf
push
jle
(bad)
sub
(bad)
lock
pop
cmp
out
jns
popa
call
or
or
addr16
inc
mov
add
int3
je
repnz
ret
cwde
sti
imul
loop
ja
push
sti
retf
adc
loop
sbb
fld
mov
and
xlat
xlat
push
adc
push
cmp
mov
jecxz
or
and
aaa
fsub
sub
adc
ins
xchg
push
jo
sbb
lahf
mov
test
or
es
aas
fisttp
(bad)
call
inc
aas
lods
cmp
mov
sbb
les
and
sbb
mov
aaa
int3
pop
pop
sub
push
es
nop
xor
or
adc
aad
loope
imul
cli
sbb
fidivr
mov
popa
inc
mov
xchg
(bad)
push
sbb
loop
retf
fs
frstor
mov
retf
add
mov
(bad)
lea
ret
scas
cmp
mov
(bad)
jmp
test
sub
fidivr
or
mov
cwde
jge
jmp
and
adc
inc
mov
in
loopne
jns
push
cmp
clc
lds
pop
cld
arpl
fiadd
push
mov
and
cmp
dec
adc
jno
shr
lods
dec
int3
dec
xchg
(bad)
popf
mov
adc
ror
call
loopne
mov
dec
cs
push
js
dec
xor
test
pop
mov
(bad)
fisttp
push
xor
jp
mov
into
jno
(bad)
sub
out
enter
mov
popf
add
push
bound
xor
mov
dec
repnz
add
mul
lea
push
int3
aas
inc
popf
jmp
loope
rsm
push
adc
bound
sub
sbb
jne
int
xor
add
stos
fdivr
ret
push
nop
dec
(bad)
iret
sbb
push
in
and
gs
bound
xchg
clc
or
mov
test
lds
mov
lahf
sub
xor
cmp
xchg
mov
leave
xor
xchg
fbstp
gs
lds
mov
ins
mov
js
jmp
(bad)
cmc
xchg
mov
loop
and
push
(bad)
xchg
push
in
aam
mov
movntps
xchg
imul
inc
push
add
ds
mov
jae
mov
mov
and
test
or
mov
push
ret
xor
and
aaa
cmp
out
inc
cmp
data16
cmp
adc
pop
mov
sbb
lods
cmps
xor
pop
dec
addr16
and
xchg
or
sbb
or
push
aaa
leave
jecxz
jmp
inc
add
adc
in
lahf
cmps
sub
shr
clc
push
fs
loope
jle
arpl
sbb
xlat
push
and
dec
test
adc
cs
cmp
cmps
mov
es
rcl
fcmovnb
enter
xor
mov
and
cwde
xchg
push
jns
aaa
cmp
jecxz
ret
stc
xchg
mov
mov
push
int
loopne
push
ror
fst
push
or
cmp
call
push
or
dec
test
out
adc
dec
outs
mov
or
xor
ss
mov
push
lock
and
sub
jecxz
jmp
cwde
add
lods
xor
(bad)
fisub
fcom
mov
stos
pushf
popa
in
or
ins
js
(bad)
int
sub
fadd
cmps
retf
aas
or
(bad)
arpl
jb
dec
lock
jmp
into
push
daa
and
dec
data16
dec
pop
jle
fwait
gs
fiadd
repz
aaa
arpl
(bad)
out
scas
push
sub
xchg
mov
xor
push
push
mov
xor
push
fwait
call
faddp
daa
or
mov
push
fld
inc
pop
ja
pusha
loopne
(bad)
mov
retf
jle
mov
retf
and
xor
out
aam
fmul
and
adc
sbb
pop
popf
and
push
fist
pop
loope
dec
inc
mov
and
inc
adc
(bad)
jae
in
dec
mov
(bad)
pop
mov
cmp
and
dec
test
(bad)
std
jnp
jbe
int
mov
xor
sub
fsubr
f2xm1
cmp
or
push
xchg
scas
cli
scas
repnz
imul
dec
mov
(bad)
cld
das
mov
xor
ja
xor
adc
or
xchg
xor
hlt
fisttp
xor
and
dec
mov
adc
mov
scas
into
push
mov
dec
movs
sbb
push
mov
in
xchg
loop
outs
mov
dec
jbe
(bad)
fdiv
fild
loop
mov
jp
loope
lock
stos
ins
in
shl
mov
cmp
bound
out
fldenv
and
aaa
dec
idiv
fwait
jg
call
jnp
push
stos
push
jle
adc
std
mov
jp
mov
mov
imul
add
mov
jnp
xchg
jle
xor
mov
inc
mov
test
mov
call
movs
xor
mov
out
adc
scas
les
fwait
bound
push
imul
out
sub
inc
iret
add
lds
jbe
pop
inc
outs
cmp
pop
and
into
lea
cwde
inc
xor
pop
lods
jo
xchg
push
aad
loop
and
into
loope
(bad)
in
add
push
iret
sti
(bad)
out
xchg
push
inc
jecxz
mov
mov
movs
mov
adc
xchg
sbb
stos
call
add
ins
inc
sub
xlat
adc
ja
pop
cmps
neg
sub
mov
lock
in
xor
je
cmp
jle
loop
jne
(bad)
cs
in
pop
inc
mov
xchg
out
mov
ins
adc
stos
push
ja
or
and
enter
pop
cmps
sub
xor
mov
mov
test
pop
ds
vpcmpgtd
add
es
pop
push
loopne
mov
xor
jmp
shr
add
sub
retf
dec
xor
sbb
scas
push
cmp
xchg
mov
lahf
daa
cli
push
pusha
scas
imul
mov
xchg
xor
and
rcl
jmp
fild
fs
test
add
cmc
push
add
push
mov
out
jno
jl
adc
push
pop
dec
addr16
rcr
xchg
add
aad
or
cmp
mov
push
mov
sub
lods
xor
mov
push
stos
cs
ds
mov
push
call
clc
orps
ficomp
cld
jl
push
mov
sar
addr16
cmp
dec
sub
dec
mov
sbb
in
(bad)
xchg
pop
aad
sbb
mov
retf
cmp
xor
sub
cmps
test
or
mov
mov
daa
test
clc
cdq
aam
mov
(bad)
cmps
aas
adc
push
fist
(bad)
pop
in
or
aaa
out
mov
ja
loop
pop
fs
adc
das
cs
arpl
cld
jnp
xor
(bad)
mov
dec
cmp
es
cmp
lahf
dec
pop
outs
das
adc
idiv
push
outs
sahf
or
das
scas
or
aaa
cwde
xchg
xchg
inc
mov
movs
inc
cmp
gs
aas
ret
repnz
pushf
popa
mov
mov
shl
jmp
loopne
icebp
imul
sub
fild
outs
and
lds
js
xchg
test
xchg
fdiv
retf
fimul
pop
ffreep
mov
push
mov
loopne
cmc
jecxz
fbld
out
xlat
arpl
sahf
mov
sbb
cmps
je
cdq
mov
aad
mov
loope
pusha
jecxz
call
ins
sbb
mov
and
jmp
jnp
xchg
inc
lea
lods
mov
cs
xchg
push
fimul
stos
cmp
rcr
mov
aad
sub
cmp
out
xor
mov
push
or
cli
fidivr
popf
inc
stc
loop
xor
push
mov
call
xchg
fsub
sub
pop
fild
adc
mov
lahf
xchg
cmp
or
ficom
(bad)
push
daa
stc
imul
pop
xchg
cmps
and
cdq
outs
shl
inc
out
pop
cmp
pop
mov
and
ret
sub
in
push
add
arpl
pop
mov
sub
sub
cdq
scas
push
outs
test
jo
xchg
call
iret
leave
add
xchg
lock
mov
and
inc
test
xchg
stc
sub
dec
lds
(bad)
cmp
mov
es
out
pusha
mov
cmp
mov
and
cmc
adc
mov
fwait
jne
sub
mov
adc
mov
fs
dec
sbb
jbe
dec
gs
mov
imul
dec
out
inc
fstp
jae
inc
lods
push
adc
and
neg
fsubr
cwde
cdq
adc
lods
(bad)
(bad)
jae
movs
ret
xchg
sbb
imul
fs
shl
in
sbb
cdq
push
mov
lea
cdq
xor
repnz
jge
adc
jcxz
jmp
out
mov
adc
js
and
popf
mov
mov
leave
ss
ret
mov
in
ficom
sub
adc
aad
mov
jns
dec
jge
rol
pop
inc
test
mov
jmp
jecxz
dec
(bad)
sti
cmp
cmp
(bad)
data16
mov
repz
dec
sbb
sub
out
(bad)
fiadd
and
jae
lods
addr16
push
(bad)
mov
cmp
xor
xchg
test
jmp
xchg
fidivr
xor
sub
mov
imul
adc
js
(bad)
push
sbb
xchg
or
outs
std
int3
push
dec
mov
jp
ret
and
jecxz
ins
jb
popf
ins
in
dec
pop
sahf
lods
call
push
mov
lock
das
cmp
dec
cmps
mov
shl
idiv
int
adc
cmp
shl
les
bswap
loopne
lods
test
and
mov
mov
jno
fwait
out
dec
jnp
adc
out
nop
in
retf
xchg
cwde
dec
int3
nop
test
jno
or
dec
outs
xor
cmp
push
pop
jmp
out
mov
jl
jl
clc
mov
mov
jle
push
(bad)
push
sbb
cmp
fistp
clc
push
retf
dec
or
in
xchg
fadd
jle
dec
stos
and
(bad)
imul
cmp
mov
adc
sti
mov
inc
retf
push
adc
push
inc
in
nop
fs
ret
addr16
mov
jae
aam
mov
shl
mov
push
shl
mov
dec
inc
popa
rcl
dec
mov
leave
mov
in
dec
int3
add
mov
xchg
cmp
xchg
mov
pusha
xchg
pop
cmps
sbb
mov
jne
daa
aaa
mov
js
dec
lock
imul
fldl2e
mov
or
add
in
in
mov
and
jle
out
jmp
sbb
pop
inc
stos
(bad)
xchg
or
push
dec
mov
in
scas
lea
lods
data16
and
retf
xor
loope
sub
test
xlat
in
pop
loop
push
jb
sti
aas
repnz
jns
iret
aad
push
jbe
add
(bad)
loope
int3
aas
mov
shl
imul
cmp
ins
add
fs
mov
test
div
bound
or
dec
dec
xchg
inc
test
add
sub
pop
inc
inc
push
inc
mov
jns
adc
dec
lahf
jge
or
or
dec
inc
pandn
outs
not
fwait
and
sub
sbb
sbb
mov
ror
fadd
xchg
loop
cwde
in
js
retf
sub
xchg
and
adc
push
mov
ror
sbb
xchg
add
xlat
ins
push
jecxz
fmul
jmp
not
jae
sub
dec
or
ins
and
rcl
dec
mov
inc
dec
imul
jno
or
pop
int3
and
inc
pop
push
es
cmps
push
jge
pop
dec
test
jmp
inc
fidiv
cdq
sbb
mov
jae
inc
inc
mov
test
push
pop
jmp
mov
xchg
int3
lahf
dec
adc
cmp
sahf
pop
cmp
aam
clc
retf
lds
inc
pushf
fdivp
add
mov
pop
pop
inc
add
out
stc
xor
cmps
inc
(bad)
(bad)
lahf
and
je
mov
cmp
mov
adc
pushf
push
pop
stos
ins
je
fcomp
fist
daa
mov
or
rcl
dec
ret
mov
pop
sbb
mov
sub
dec
lock
mov
mov
add
jne
mov
fnsave
in
fistp
cmp
pop
cld
dec
js
mov
cmps
push
xor
lock
sub
scas
mov
pop
and
dec
pushf
jmp
ja
and
mov
xlat
add
dec
mov
nop
scas
imul
fwait
out
loopne
inc
jmp
and
push
cdq
jg
es
inc
or
mov
ret
call
jns
or
loopne
(bad)
xchg
loope
mov
(bad)
enter
mov
mul
lea
push
(bad)
cmp
add
jmp
mul
cs
out
in
push
stos
test
sub
fcomp
cmp
fs
cmp
jbe
fild
mov
sbb
pusha
xchg
int
pop
and
ret
cld
ja
cmp
xchg
jnp
inc
adc
js
dec
jno
movs
in
dec
xlat
mov
mov
lods
mov
jns
mov
inc
and
ins
and
(bad)
test
ror
pop
jnp
xchg
daa
loopne
fxtract
mov
pop
cmps
xor
cld
scas
push
jle
and
ror
push
xor
xor
and
sbb
cli
retf
lods
cmps
mov
sbb
cmp
in
mov
ss
xor
pop
and
shl
mov
cwde
pop
dec
xor
xchg
mov
out
into
xchg
sar
mov
push
dec
inc
adc
ret
jns
cs
pop
test
test
or
pop
adc
(bad)
pop
pop
adc
das
mov
xchg
movs
xchg
jge
push
xor
cld
or
inc
xor
xchg
shr
fnstsw
add
pop
mov
mov
or
repnz
pop
jno
adc
xor
xchg
stos
xor
in
jg
loop
pop
mov
pop
pop
mov
jge
adc
out
fcomi
ficomp
(bad)
sahf
mov
xor
mov
aad
push
nop
inc
pop
enter
xor
not
cmp
ss
shr
xchg
push
out
int
fs
and
loope
call
xor
dec
jl
sbb
mov
test
retf
les
add
jecxz
adc
mov
cdq
fwait
xor
test
and
call
out
jmp
adc
cmps
or
cmps
mov
bound
push
test
mov
and
icebp
test
sub
in
pop
mov
mov
daa
sbb
cmp
ficom
hlt
mov
push
xchg
sub
pushf
arpl
jo
ret
pop
sahf
inc
push
adc
sub
daa
and
xchg
add
jle
lock
mul
inc
cmp
push
adc
mov
add
and
mov
jnp
ins
mov
add
jb
xor
or
add
cmp
xor
push
imul
sub
jo
push
mov
call
or
lock
ret
adc
popf
add
inc
pop
xchg
or
jmp
push
push
push
jnp
ins
push
cdq
and
add
sbb
ja
sbb
pop
les
inc
mov
bound
fs
push
xor
sahf
add
pop
mov
fsub
sub
cmp
imul
add
sub
xlat
pop
iret
jne
neg
inc
jmp
add
not
add
jp
into
imul
and
dec
(bad)
mov
lods
or
and
test
daa
ins
or
add
dec
je
sub
aam
arpl
pusha
cmp
adc
pop
dec
inc
push
mov
or
std
sub
mov
test
cmps
setne
lods
outs
test
jo
dec
mov
pop
cs
sbb
mov
jo
outs
dec
dec
repz
mov
mov
lods
pop
or
sbb
cmc
int3
sbb
scas
mov
jbe
inc
test
xchg
xor
push
mov
push
jmp
loopne
mov
into
in
cs
and
shr
inc
leave
test
movs
arpl
gs
call
xor
jp
aam
adc
test
or
jo
mov
repnz
mov
push
push
mul
xor
repz
stc
and
aad
(bad)
ja
xor
mov
test
mov
das
ins
sub
cli
inc
and
(bad)
aas
sub
cmp
xor
dec
xchg
in
and
sbb
jmp
fsub
(bad)
jecxz
(bad)
int
mov
fucom
movs
or
cs
push
pop
cmp
sbb
push
mov
mov
mov
push
dec
in
call
fcom
dec
cs
fwait
shl
dec
and
int3
cmp
pop
jns
inc
test
mov
call
and
test
mov
push
and
scas
leave
push
sar
pop
add
or
scas
or
jnp
aas
mov
inc
inc
sti
adc
cmp
xchg
(bad)
je
pop
sub
movs
daa
ss
inc
jmp
cmps
and
stos
addr16
pushf
pushf
inc
adc
or
loopne
(bad)
push
mov
lahf
mov
arpl
cmp
ja
pop
xlat
mov
and
imul
or
push
inc
jp
pop
cld
push
lea
and
leave
mov
dec
arpl
fidiv
cmp
pop
outs
lahf
in
iret
xchg
pop
enter
dec
jecxz
push
data16
fwait
and
aaa
popa
dec
jp
shl
retf
xor
push
into
in
mov
sub
mov
(bad)
lahf
dec
jle
pop
(bad)
add
(bad)
loope
dec
cld
dec
mov
add
dec
rep
xor
sbb
pop
add
mov
push
mov
and
pop
sub
stc
arpl
inc
sbb
aam
and
mov
fisub
(bad)
mov
test
lock
jns
push
ja
aam
xor
jno
cmp
jne
lods
push
pop
push
(bad)
mov
repz
pop
xor
stc
adc
adc
and
push
cmps
outs
and
sub
xor
jbe
arpl
ficom
mov
enter
add
fisubr
out
in
mov
das
jno
jns
lock
adc
mov
push
outs
arpl
cmp
and
push
xor
add
mov
inc
jle
jae
sub
aad
jmp
ds
stc
icebp
jg
cli
and
nop
and
daa
in
inc
or
push
mov
pushf
mov
enter
enter
mov
addr16
popa
aaa
ret
cmp
sbb
shl
test
repnz
inc
mov
and
aam
mov
jl
inc
push
mov
jmp
je
mov
xlat
sbb
sub
in
jle
test
cmp
sub
adc
loopne
xlat
mov
dec
sub
push
adc
nop
pop
and
dec
clc
push
sahf
cmc
jmp
jp
test
mov
js
push
xor
fimul
shr
das
or
adc
push
mov
imul
sub
fucomp
ret
daa
mov
loope
inc
and
hlt
dec
repnz
dec
cmp
mov
mov
adc
enter
nop
cmp
retf
mov
xor
ret
fwait
mov
icebp
lods
loope
push
push
loopne
push
jecxz
stos
(bad)
hlt
loopne
mul
sub
lods
cmp
jecxz
das
ins
clc
push
mov
arpl
sti
retf
xor
inc
js
fdiv
push
sub
stos
add
adc
mov
iret
popf
jae
cdq
mov
or
stc
push
loope
mov
call
and
test
aas
xor
sti
push
leave
xchg
mov
or
cmp
mov
push
xor
(bad)
std
dec
daa
fisttp
popa
mov
jmp
call
xor
cmps
(bad)
push
in
cmp
pop
retf
arpl
adc
mov
or
nop
mov
add
or
repnz
lahf
xor
push
pmullw
cmps
inc
jecxz
dec
popf
jno
pop
cmp
es
icebp
inc
std
push
push
daa
repz
mov
pop
je
push
mov
cmp
and
dec
add
sbb
jnp
pop
cmp
pop
retf
mov
fcomp
sti
mov
fwait
test
stc
mov
rol
fcom
inc
push
dec
shl
in
and
aas
add
icebp
jg
mov
add
ficomp
inc
xchg
and
push
sbb
call
jl
call
sahf
jnp
dec
jbe
mov
push
shl
lock
scas
mov
ds
aam
sbb
pop
jmp
mov
cmp
cld
pop
dec
push
mov
adc
and
outs
xor
or
cmp
push
das
pop
lods
aas
(bad)
adc
test
pop
cli
cmp
loope
adc
add
loopne
call
test
das
test
call
cmc
hlt
enter
adc
add
push
mov
cmp
lods
pop
pop
ret
loope
retf
and
mov
imul
adc
imul
sahf
mov
pop
jg
pop
imul
or
xor
les
sub
(bad)
jno
cs
ins
lock
sbb
dec
sub
shl
pop
leave
jb
add
cld
cld
add
loop
into
rol
sar
shl
das
(bad)
dec
adc
mov
push
inc
push
call
test
pop
stc
retf
in
sbb
add
sub
push
cmp
jno
dec
sbb
adc
shr
jno
rol
jle
push
ret
rcl
retf
sar
aam
mov
and
sub
out
lods
cwde
add
mov
jmp
call
out
gs
aad
xor
ds
xor
xor
cmp
dec
(bad)
pop
push
scas
outs
and
div
rcl
sbb
xchg
sub
lock
ror
dec
sbb
aam
loopne
add
jne
push
adc
int3
jmp
mov
xchg
fiadd
pop
(bad)
shr
push
lds
std
push
les
pop
push
cmps
aad
retf
or
pop
mov
add
cmc
enter
xchg
pop
adc
test
dec
push
loop
add
aam
in
add
push
cmp
js
jmp
imul
sbb
sbb
leave
mov
inc
(bad)
std
pop
mov
sub
dec
test
mov
aad
sbb
lahf
popa
push
pop
iret
mov
mov
push
enter
mov
bound
aad
jl
xor
push
ret
loop
adc
push
pop
jl
clc
rcl
call
rcr
ins
imul
jns
xor
mov
jno
xor
pop
or
mov
xor
mov
pop
daa
popf
add
xlat
and
mov
addr16
ret
add
jl
int
xor
lahf
mov
loopne
ss
push
out
inc
and
or
in
int3
addr16
std
arpl
jp
mov
pop
cmps
test
retf
mov
xor
jb
add
push
pop
inc
push
cmp
stc
add
fs
inc
sbb
cmp
retf
jl
ins
stos
imul
mul
loopne
adc
dec
add
pop
aad
mov
inc
push
aas
stos
not
mov
adc
xchg
shl
push
(bad)
pop
xor
xor
test
(bad)
fisttp
out
cmp
hlt
js
dec
jae
sbb
das
outs
and
fwait
(bad)
jmp
and
sti
add
jno
pop
fist
fs
repnz
mov
in
addr16
int
inc
enter
mov
imul
or
pop
adc
xor
out
push
in
div
xor
call
imul
imul
hlt
sahf
push
mov
jnp
mov
add
mov
aam
popa
cmc
pop
sbb
or
nop
sbb
mov
es
dec
add
aas
push
pushf
mov
ss
das
pop
js
outs
fs
or
mov
ror
jl
or
iret
repnz
or
(bad)
xchg
cmps
and
adc
pushf
mov
mov
stos
inc
addr16
cmps
xor
pop
lods
and
(bad)
mov
aad
test
sbb
mov
add
pusha
xor
(bad)
add
and
xor
cli
bound
fs
mov
push
cmps
push
mov
sub
mov
jns
adc
sbb
scas
movs
hlt
dec
jno
cld
imul
pop
popf
arpl
loopne
xchg
push
pop
fs
xor
ror
mov
jmp
sbb
and
push
test
cld
inc
lock
or
aad
xchg
aam
jne
jl
dec
jmp
out
push
out
out
mov
lods
ret
adc
cwde
jb
adc
cmp
add
lds
xchg
fadd
ret
stc
fsubrp
in
ror
add
inc
ja
or
cli
jg
fldcw
sbb
pop
(bad)
cmp
fistp
mov
in
mov
repz
popf
pop
cs
jo
pop
in
fbstp
sahf
sahf
in
add
lds
iret
adc
push
jno
jnp
movs
pop
xor
cs
or
push
retf
pop
cli
mov
sbb
retf
aas
mov
inc
loop
sub
sbb
jnp
sbb
dec
or
test
xchg
push
pop
ins
mul
push
xchg
loopne
push
retf
inc
call
adc
xchg
cmp
cmps
call
es
cmp
pop
sahf
ins
jmp
jbe
inc
sti
jmp
push
sub
pop
cmp
xchg
dec
popa
retf
push
pop
inc
bnd
add
fs
data16
inc
push
jo
repz
mov
mov
loope
mov
xchg
jmp
out
jmp
cs
pop
into
int3
cmp
pushf
lds
gs
fimul
aam
pop
js
jb
mov
nop
call
ret
stos
mov
or
sbb
xor
add
inc
(bad)
push
scas
or
retf
lea
pop
cmps
mov
push
pop
jmp
call
pop
loope
repnz
push
mov
cmp
mov
shl
icebp
sub
jmp
push
mov
cmp
push
push
lahf
jl
or
mov
fld
pop
pop
fldcw
push
imul
push
add
sbb
sub
test
or
movs
(bad)
leave
add
add
clc
enter
(bad)
mov
jmp
mov
aas
les
fwait
test
dec
mov
xchg
inc
mov
dec
imul
adc
push
push
fidiv
sub
(bad)
addr16
pop
jl
xor
sbb
je
sub
in
nop
sar
push
outs
or
out
push
cmp
int
adc
mov
sahf
fisttp
mov
aam
sbb
jno
fwait
add
out
retf
icebp
inc
mov
fld
and
ret
mov
jecxz
xor
aam
mov
pop
test
idiv
cmp
enter
xlat
pop
pop
mov
inc
lods
lods
enter
adc
inc
push
lods
es
cmp
lods
xchg
push
mov
retf
cli
in
aaa
out
ins
inc
(bad)
pushf
popa
xchg
jmp
(bad)
mov
xchg
dec
cli
aad
or
push
sbb
mov
addr16
sbb
sbb
adc
and
out
mov
movs
or
int
adc
gs
jne
test
adc
sahf
or
push
sub
xchg
pop
sar
in
push
dec
aam
(bad)
push
jl
push
ret
jb
xchg
js
lods
pop
(bad)
fsubr
xchg
mov
mov
popf
cmc
cwde
icebp
pop
mov
arpl
push
push
inc
cmp
popa
cmc
adc
mov
(bad)
test
inc
scas
jmp
aad
les
xchg
adc
pop
sbb
push
call
inc
arpl
fisttp
sub
mov
arpl
push
pop
inc
push
shr
pop
push
out
pop
fild
outs
out
ja
popf
pop
dec
enter
or
or
xor
cmp
lock
test
mov
je
loope
sub
rcr
(bad)
push
bound
add
or
jle
ffreep
das
sbb
fs
adc
clc
mov
dec
nop
xor
push
cmp
or
mov
inc
jo
jb
repz
movs
pop
aad
sub
xchg
gs
cli
push
mov
pop
retf
mov
stos
sbb
nop
xchg
je
mov
data16
ss
push
push
(bad)
adc
jl
mov
inc
fist
inc
dec
add
pop
xchg
jp
mov
outs
jle
(bad)
in
inc
mov
in
or
aaa
mov
nop
push
ss
clc
ror
sub
xor
icebp
push
lahf
mov
stc
fstp
sbb
xchg
push
(bad)
jns
icebp
cmp
or
pop
xchg
push
sbb
lods
fnstcw
dec
in
daa
repnz
mov
(bad)
mov
popf
adc
mov
cmc
mov
add
push
popf
dec
mov
mov
add
push
mov
pusha
cmp
mov
mov
pop
lods
leave
aam
sbb
pop
(bad)
or
mov
loop
mov
xchg
jmp
retf
push
popf
sub
adc
or
ss
xor
pop
pop
popa
cld
sbb
cwde
stos
(bad)
jns
ret
enter
pop
or
in
in
leave
into
cld
arpl
arpl
out
enter
add
mov
dec
ins
pop
js
push
and
sbb
add
inc
pop
dec
dec
jge
mov
popf
stos
lods
mov
cs
outs
pop
ret
and
sahf
mov
call
or
gs
or
repnz
test
rcr
iret
ja
repnz
gs
dec
popa
xor
pusha
mov
adc
pop
icebp
aaa
push
adc
jne
out
out
aas
in
ins
cs
in
pop
mov
and
movs
mov
(bad)
pop
add
imul
out
outs
or
add
pop
iret
dec
jbe
ja
or
test
iret
bound
inc
sbb
xor
dec
xor
inc
test
mov
popf
cmp
jl
std
and
(bad)
cld
movs
or
mov
mov
fsubp
add
xchg
xchg
sbb
jno
xchg
fs
cmps
xchg
sub
xchg
xchg
xor
mov
push
fs
inc
ror
enter
nop
dec
pop
pop
call
push
push
jmp
pop
sub
mov
dec
mov
mov
ficomp
add
dec
xchg
add
sub
sbb
push
into
jl
out
jmp
sub
add
dec
pop
nop
pushf
xchg
std
xlat
addr16
sbb
sub
cmps
mov
rcl
jl
push
aam
or
and
jne
cmp
or
push
jmp
fisub
cmps
dec
sti
sbb
jmp
cs
nop
in
out
clc
(bad)
pusha
pop
iret
shl
xor
and
cli
ins
test
jg
mov
inc
pop
sub
mov
dec
repnz
ja
dec
out
push
outs
xchg
or
outs
out
pop
cdq
loopne
fbstp
mov
jbe
pop
pop
jge
or
aam
arpl
xchg
dec
and
jle
cmc
(bad)
and
rcl
sub
xchg
std
jb
ds
xchg
and
popf
mov
test
into
mov
or
mov
arpl
icebp
jmp
inc
xchg
fisttp
(bad)
(bad)
inc
jae
std
pop
mov
stc
out
mov
scas
(bad)
or
pop
retf
outs
movs
int
or
mov
push
test
outs
stos
sbb
mov
dec
arpl
js
xor
aaa
push
(bad)
mov
lods
sub
xor
sub
scas
mov
xor
xchg
sub
xchg
and
xlat
aad
stos
dec
out
mov
cmps
add
fild
pusha
out
mov
mov
cmps
aaa
xchg
fadd
lea
mov
mov
rcr
int3
dec
jecxz
xchg
stc
adc
push
lds
xor
retfw
xor
mov
fcmovb
fwait
add
fldcw
add
jp
jmp
and
(bad)
xchg
pop
ss
push
(bad)
pop
cmc
mov
in
push
cli
lods
dec
push
or
out
xchg
cs
fcom
xor
movs
cmp
add
mov
pop
daa
bound
mov
inc
cs
mov
mov
mov
xchg
and
jecxz
popf
lds
or
mov
pushf
gs
(bad)
jmp
pop
pop
push
sub
lock
jle
sti
or
out
xchg
mov
ins
pushf
lock
out
xchg
inc
out
push
dec
jp
ret
test
mov
adc
xor
(bad)
mov
sbb
jle
icebp
pop
dec
cmp
pop
aaa
xchg
(bad)
jnp
arpl
xchg
push
mov
jns
sub
push
mov
mov
mov
icebp
ret
sub
sbb
pop
sbb
cld
dec
dec
loopne
ficom
popa
scas
fldenv
cld
cmp
push
pop
push
faddp
dec
cld
push
pusha
push
sub
push
lods
inc
mov
xchg
(bad)
jg
jae
jnp
fst
scas
push
cmc
jl
ret
or
sub
add
cmp
xor
dec
sub
stos
mov
ret
sbb
leave
xchg
mov
pop
test
xor
int3
nop
test
mov
sub
stos
jmp
call
jmp
je
scas
inc
xchg
jge
call
sbb
dec
arpl
popa
out
in
test
cmp
xchg
sahf
xchg
and
jno
add
mov
(bad)
loop
mov
cs
push
sub
push
ret
jno
jl
cli
jne
sbb
pop
gs
dec
jne
push
fidivr
push
js
rcr
sbb
xchg
pop
mov
mov
add
pop
dec
lahf
sbb
mov
arpl
inc
movs
fnstsw
mov
or
jnp
xor
push
cli
jp
rol
test
cmc
test
mov
fstp
push
sub
add
gs
cmc
dec
mov
bound
adc
xchg
pop
push
addr16
fsubrp
pop
imul
sahf
lahf
ins
das
jno
mov
(bad)
repz
push
jl
mov
mov
ins
lds
jmp
div
les
lds
shr
(bad)
fucomip
and
push
jg
test
or
adc
fs
dec
adc
mov
mov
mov
icebp
pop
out
jmp
clc
into
in
repnz
pop
or
cmps
jmp
adc
cmps
(bad)
jg
imul
xor
mov
sbb
fsubr
outs
test
lahf
push
mov
mov
cmp
cmp
ss
out
(bad)
data16
pop
ror
or
and
lahf
mov
push
push
test
mov
cmp
lahf
add
xlat
adc
pushf
xchg
or
adc
sub
push
cmps
add
jnp
cmp
pop
les
ja
nop
adc
daa
xor
pop
push
popf
sbb
jl
lahf
js
mov
xchg
fsubr
add
js
sub
xor
jnp
inc
mov
or
and
jns
cwde
inc
sahf
out
cmps
nop
cmp
mov
jbe
cmps
push
sbb
sub
cmp
push
jb
ss
pushf
sub
inc
jg
test
push
jnp
adc
add
mov
xlat
xchg
sahf
push
inc
or
pop
jl
iret
xor
imul
gs
xchg
add
dec
retf
test
cmp
aaa
les
fwait
mov
das
mov
adc
pusha
enter
pop
stos
cs
xchg
es
cdq
add
mov
push
popa
aam
sub
xlat
add
xchg
add
mov
xchg
jmp
xchg
mov
lods
lahf
pop
mov
jne
retf
imul
fdivrp
add
movs
sub
outs
imul
mov
out
xor
fmul
lahf
pop
aaa
mov
in
out
sbb
add
pop
dec
in
arpl
aam
ja
rcl
in
popf
add
jne
push
fmul
and
add
jle
call
jnp
push
scas
sub
dec
ret
mov
xor
cmp
cmp
cmp
push
retf
loopne
jbe
popf
clc
int
jbe
sbb
pop
jbe
push
push
cmc
scas
stos
dec
and
jbe
cmc
enter
(bad)
cli
jl
stos
(bad)
and
inc
xchg
shl
adc
imul
cli
cmc
test
(bad)
push
cmp
xchg
popf
or
mov
mov
imul
cmp
bound
(bad)
dec
xchg
inc
lahf
cli
test
push
dec
call
push
push
retf
jmp
rcl
dec
js
and
dec
push
xor
pop
(bad)
stc
jne
cld
aaa
xor
in
loop
inc
jg
in
dec
aaa
jle
jecxz
nop
mov
sbb
or
adc
retf
int3
ret
cmp
mov
lods
or
mov
dec
imul
xor
inc
ret
scas
jle
push
iret
inc
(bad)
fdivr
and
cmp
jne
cmp
mov
cmp
aad
das
enter
aam
cmp
std
fcmovb
pop
inc
fist
pop
pop
inc
cmc
add
jp
pop
ins
sar
inc
xchg
sub
out
push
jb
not
mov
data16
pop
sar
mov
pop
push
pop
call
ja
and
fist
cli
mov
push
sub
ins
shl
sub
dec
int3
test
popa
or
les
and
loop
pop
out
movs
imul
jmp
sbb
pop
push
sub
std
dec
adc
jnp
mov
cmc
imul
test
push
cmp
sbb
mov
test
sbb
inc
jnp
push
sub
(bad)
aam
lds
stos
or
iret
mov
pop
add
sar
movs
ins
mov
call
retf
pushf
xchg
dec
cmp
idiv
xor
inc
pop
dec
out
imul
mov
loope
sahf
inc
adc
outs
sbb
scas
jp
inc
and
das
mov
lds
cmp
lods
mov
ja
push
mov
dec
or
(bad)
and
or
or
fld
pop
push
fsub
nop
cmp
xchg
jo
cmc
es
push
arpl
out
xor
xchg
push
jl
ret
inc
xadd
(bad)
cmp
dec
cmp
sbb
scas
jge
enter
call
mov
enter
stos
outs
outs
adc
xor
jmp
aaa
xlat
inc
sbb
(bad)
in
jg
push
pop
add
std
mov
jmp
popf
fnstenv
shl
js
adc
xchg
mov
js
xchg
fistp
mov
mov
lds
mov
adc
fwait
xchg
mov
aaa
lods
loope
les
adc
out
test
add
pusha
movs
dec
les
(bad)
mov
pop
dec
jp
xchg
cdq
sbb
cmp
lods
jo
test
push
call
push
pop
rep
(bad)
push
daa
pop
cmp
(bad)
xlat
aaa
out
mov
cwde
loop
(bad)
jb
add
and
imul
pop
adc
fsubr
fsubr
sub
fild
out
pop
stc
cmps
adc
xchg
sub
or
mov
inc
enter
aas
inc
imul
fdivr
mov
movs
gs
jmp
loop
fistp
dec
jecxz
mov
ins
sti
push
xchg
inc
js
inc
int3
pop
in
mov
ins
push
fiadd
xor
push
addr16
sbb
adc
adc
jmp
add
pop
mov
jae
cdq
xor
mov
daa
dec
daa
xchg
pop
cmp
jmp
adc
fsub
fmul
add
adc
xchg
adc
mov
aas
lahf
adc
cld
sahf
int3
daa
retf
(bad)
fstp
dec
arpl
sub
into
mov
sub
clc
push
repz
xchg
cmp
scas
aam
sbb
xor
xor
lock
stc
cmp
cdq
add
push
xchg
in
sbb
in
gs
mov
fcomp
pusha
psllw
aaa
mov
scas
xchg
std
pushf
test
xchg
int
mov
push
or
iret
call
jle
in
movs
mov
jl
pop
sbb
cli
ret
les
dec
sub
scas
fiadd
xchg
jns
push
in
add
shl
jmp
mov
(bad)
cmp
pop
dec
jmp
mov
push
mov
mov
sbb
imul
mov
adc
push
lahf
mov
push
sbb
sbb
jle
neg
cmp
inc
inc
mov
dec
mov
loop
fnstenv
xchg
js
addr16
pand
add
pop
cmp
xchg
xor
arpl
xchg
jae
jmp
xchg
inc
or
cmp
out
outs
ds
add
cld
stc
jno
test
mov
mov
sbb
and
xor
xchg
fiadd
mov
cmp
pop
popf
(bad)
dec
cmc
ficom
xchg
or
inc
mov
pop
scas
and
test
push
mov
add
mov
lea
push
pop
push
imul
inc
mov
inc
add
xor
sbb
mov
addr16
xor
push
cs
ror
fwait
pusha
cmp
mov
fstp
rol
shl
or
push
add
test
and
cmp
add
cmp
dec
mov
xor
cwde
iret
nop
sbb
cmp
cmp
stc
test
add
jns
jnp
test
lea
add
imul
nop
adc
(bad)
jg
aaa
xor
pop
inc
mov
rcl
(bad)
lock
xchg
aas
cmp
push
daa
hlt
pop
ret
hlt
xor
(bad)
nop
inc
inc
or
xor
and
pop
cmp
xor
push
dec
fstp
mov
mov
addr16
out
rcl
push
fstp
out
jno
sbb
cmps
mov
mov
jb
or
jb
jae
mov
mov
sub
data16
xor
stos
int
in
jg
lahf
xor
mov
test
cmp
test
aaa
test
xchg
cmp
hlt
popa
fwait
aaa
dec
popf
cmp
jmp
and
ja
adc
push
imul
bsf
mov
adc
add
push
mov
adc
pop
call
loop
ins
push
cs
jmp
jle
mov
stos
xchg
add
and
or
jae
repz
lods
xor
ret
mov
mov
mov
jp
iret
sbb
xchg
js
sbb
sar
mov
fild
adc
stc
xor
out
out
adc
cmps
push
aaa
xor
scas
sbb
push
fnstenv
es
test
or
add
ins
adc
mov
jne
pop
cmp
and
fs
loop
aaa
add
pop
ret
inc
pop
inc
sahf
cmps
mov
(bad)
add
mov
mov
inc
push
sbb
pop
lods
pop
xor
mov
mov
ficom
dec
and
lods
cli
imul
cld
(bad)
addr16
mov
in
repz
xchg
movs
sti
push
shl
imul
pop
das
mov
and
jmp
stos
(bad)
jle
out
adc
adc
pushf
inc
pop
and
(bad)
aad
sub
in
ins
pop
ud2
popf
cmp
test
sbb
push
loopne
or
or
cmc
mov
loopne
dec
popf
adc
sub
and
jbe
pop
(bad)
addr16
mov
scas
push
mov
sti
idiv
sbb
jg
pop
loope
pushf
je
(bad)
dec
jo
dec
push
cmp
mov
test
mov
fmulp
xchg
cmp
xchg
mov
lahf
pop
push
lock
sub
(bad)
clc
rol
push
pop
push
dec
add
nop
or
clc
out
das
or
aas
mov
xchg
xchg
inc
xor
pop
jns
and
es
fisubr
mov
sbb
fisubr
sub
out
and
dec
test
(bad)
leave
sub
mov
mov
jae
dec
(bad)
pop
sub
fcmovbe
test
scas
loopne
pop
(bad)
add
jno
aaa
xchg
cmp
das
pop
sub
fadd
aam
dec
stos
sub
dec
lock
adc
in
inc
push
int
adc
jne
(bad)
(bad)
imul
out
adc
jge
int3
mov
sub
xchg
pop
and
adc
push
cmps
dec
int
dec
repnz
inc
push
and
inc
mov
inc
call
retf
sbb
das
pop
aas
jmp
or
dec
adc
lea
pushf
out
shl
jns
pop
cli
add
(bad)
xchg
cmp
aad
loop
dec
cmc
lods
cmc
aad
lods
jb
test
ret
int
popa
loopne
(bad)
stc
mov
mov
inc
cmp
(bad)
cdq
popa
mov
push
fsub
sub
jmp
push
loope
movs
fdivr
shl
mov
scas
outs
or
ret
mov
mov
stos
or
(bad)
xchg
daa
and
clc
cwde
cmp
xchg
mov
add
hlt
mov
icebp
xchg
xchg
aam
mov
lods
mov
nop
add
aas
sbb
adc
add
sub
jl
neg
jmp
cmp
dec
adc
xlat
mov
out
fucomp
mov
in
add
cwde
in
outs
mov
clc
adc
sub
or
cli
out
xor
es
ror
xor
dec
adc
xchg
pop
aad
xor
sub
popf
cmp
xor
lahf
mov
repz
xchg
mov
loopne
int3
fstp
cmp
push
xor
push
pop
xchg
mov
mov
sbb
adc
sub
fldcw
bound
std
addr16
retf
dec
xchg
out
mov
out
dec
stc
pop
aaa
aad
inc
adc
jmp
pop
xlat
or
sbb
jp
ret
push
mov
mov
sub
fisttp
push
stc
mul
sti
push
adc
mov
scas
push
cmp
movs
gs
int
cmp
mov
push
aaa
xchg
loop
int3
ss
jg
jl
loope
add
xlat
xor
je
xchg
sar
ss
push
ret
jno
adc
push
inc
jnp
jg
sub
mov
sbb
sub
das
retf
adc
cmp
je
or
test
hlt
into
inc
in
retf
or
jl
adc
xlat
sub
sbb
fdivrp
push
xchg
into
jbe
rcl
mov
fdiv
repz
rol
addr16
test
loop
xor
mov
push
xor
nop
loop
ins
mov
js
adc
cmps
and
std
ds
mov
mov
jbe
dec
stc
mov
sub
out
arpl
ret
jle
mov
ds
(bad)
and
icebp
or
cmps
xlat
and
sbb
ret
dec
xor
out
cmp
ret
mov
icebp
lock
and
imul
add
sbb
cmp
shr
sub
and
and
mov
adc
sti
lods
inc
stos
pop
jo
jecxz
es
push
fidiv
stc
and
push
push
es
xor
xchg
add
dec
fbld
xor
sub
jno
cmps
scas
dec
dec
or
(bad)
aas
mov
popa
aam
add
pop
gs
jmp
mov
mov
rcl
mov
add
cdq
cmp
jne
in
push
cmp
arpl
repz
test
xchg
push
fdivrp
or
ficom
push
out
int
sub
jno
dec
in
test
pop
popa
xor
lea
pop
add
nop
xor
test
push
pusha
ss
shl
and
cmp
cdq
xchg
into
pushf
sub
loop
ror
iret
ret
add
sbb
mov
lods
pop
int3
outs
sub
cwde
dec
push
ds
cld
xor
(bad)
add
mov
mov
jge
imul
mov
jne
push
stc
lods
xchg
cmc
or
sbb
mov
xchg
out
fist
xor
cld
pop
cmc
push
ins
sub
ds
fsubp
loope
cmp
cmp
inc
mov
retf
push
aaa
or
in
cmp
pop
call
mov
inc
(bad)
sub
push
leave
cmp
push
mov
jns
out
xchg
les
and
or
xor
sti
cmps
xor
test
jmp
mov
imul
ret
mov
xchg
sub
jl
adc
inc
adc
mov
mov
outs
cmps
stos
push
and
pop
daa
push
add
jnp
jmp
aaa
cmp
cdq
(bad)
xchg
aas
dec
cmc
xor
sar
adc
pusha
xchg
int
repz
js
xchg
inc
lock
jecxz
(bad)
xchg
retf
pop
push
jecxz
mov
test
jmp
lock
(bad)
out
cmp
mov
daa
mov
(bad)
je
popa
jle
(bad)
push
cdq
sbb
das
rcr
mov
out
dec
cdq
call
test
fmul
sbb
js
add
sbb
mov
ret
jnp
leave
in
adc
test
fwait
cmp
pop
ins
mov
inc
arpl
add
sbb
or
je
and
loopne
pop
fist
pop
jp
(bad)
gs
push
dec
loop
popa
aam
mov
fsubr
push
ss
add
fnstenv
and
xor
retf
mov
(bad)
outs
push
sub
adc
outs
pop
sbb
cmp
mov
xchg
dec
xor
fild
mov
bound
inc
ret
imul
cmp
adc
mov
lock
jbe
cmp
sahf
shl
ret
mov
xlat
xor
xchg
dec
add
mov
cmp
cmp
xchg
add
test
cli
in
jl
mov
inc
jge
or
ret
mov
inc
scas
adc
and
in
gs
test
fdivr
retf
sub
call
(bad)
and
xor
ss
fcom
rcr
push
or
(bad)
push
jecxz
or
ret
xlat
std
aad
mov
mov
push
mov
sub
data16
push
push
jge
inc
loope
into
push
add
add
sub
xor
xor
jno
stos
and
cmps
xchg
xor
xchg
xchg
cmp
mov
icebp
retf
aaa
lods
sub
cmp
xchg
loopne
push
les
lea
xchg
imul
jge
idiv
push
adc
(bad)
js
(bad)
shl
sbb
cmp
out
popf
jne
inc
sub
push
(bad)
call
jmp
lods
es
iret
adc
pop
out
aas
inc
inc
adc
sbb
inc
cmp
in
out
mov
fistp
jbe
scas
mov
shl
scas
dec
jmp
push
popa
adc
mov
xchg
push
xchg
sub
imul
xchg
cmps
dec
push
mov
mov
inc
fidivr
jbe
xchg
test
mov
mov
and
popa
ins
fsub
inc
(bad)
aad
aas
push
mov
mov
(bad)
loope
cmc
jmp
xor
sbb
cmp
xchg
iret
xchg
clc
cli
xor
loop
fmul
jmp
movs
loope
stos
push
jle
jne
fist
fbstp
in
jl
xor
pop
xor
jno
dec
dec
cmps
pop
mov
mov
inc
jg
cmc
std
pop
inc
call
cmps
sbb
sub
jmp
les
lods
cmc
or
xlat
repz
xchg
pop
mov
sub
pop
dec
div
in
iret
(bad)
or
ret
xchg
(bad)
test
iret
pop
mov
xchg
xchg
je
mov
fwait
xchg
test
push
outs
jl
aas
push
jno
(bad)
mov
popa
clc
xor
mov
lods
and
pop
push
xchg
mov
xor
aad
mov
sbb
stos
pusha
retf
sbb
mov
sub
out
cmp
repz
jb
mov
rcr
mov
ficomp
fs
push
pop
sub
adc
movs
lahf
mov
inc
push
sub
jne
sbb
sub
dec
sbb
cmps
jnp
bound
int3
imul
stc
dec
fbstp
cli
cmps
jmp
cli
ins
add
mov
mov
movs
sbb
daa
dec
xchg
jp
les
scas
jl
cwde
aad
jbe
and
(bad)
retf
sub
sbb
pop
inc
mov
ret
mov
mov
push
(bad)
and
into
add
push
movs
cmps
jg
push
aad
outs
pushw
push
and
dec
mov
cmp
ds
push
jl
mov
cs
out
and
push
pop
xor
in
lahf
mov
or
mov
and
push
push
pop
aas
addr16
jo
ins
jbe
xor
clc
mov
pop
pusha
jns
scas
mov
and
hlt
fcomp
mul
rcr
fwait
mov
mov
pop
xchg
icebp
test
jb
mov
pop
in
cli
jl
cs
out
std
stos
or
pop
sbb
sar
push
mov
inc
movs
or
cmp
adc
lods
jmp
xchg
lods
pop
cmp
jbe
fadd
in
icebp
or
lods
jne
add
popa
lods
stos
add
mov
ficom
sub
sub
cmp
(bad)
fadd
inc
sti
cmps
out
or
icebp
mov
js
xchg
jl
fist
pushf
add
jmp
pop
mov
ins
sbb
int
cdq
pop
nop
retf
xor
in
test
dec
test
xchg
mov
imul
dec
fst
repnz
shr
push
dec
push
pop
aas
push
into
shr
push
xor
and
sbb
fidiv
and
das
dec
aaa
in
and
dec
jo
popa
mov
jb
add
or
add
sub
fwait
push
call
out
push
and
inc
push
outs
add
in
les
jb
pop
adc
sbb
and
aaa
je
pop
lods
mov
fld
je
aam
aas
add
and
sti
ficom
pop
mov
push
dec
mov
les
scas
call
fldenv
ins
outs
inc
mul
sub
mov
outs
std
push
lea
sub
xor
sub
sbb
sti
push
(bad)
aad
mov
fwait
inc
push
push
dec
call
mov
stos
sar
cwde
mov
push
cld
out
sbb
ret
dec
mov
inc
push
ficom
lea
(bad)
std
daa
movs
pcmpgtb
ret
sub
outs
ficom
pop
loop
mov
mov
int
xchg
addr16
enter
cmp
xchg
mov
movs
rcr
arpl
hlt
shl
fsubr
pop
xor
call
icebp
rcr
and
dec
sbb
fst
stos
or
outs
dec
fidiv
leave
cmps
not
loope
(bad)
addr16
aad
aas
in
jmp
jle
mov
adc
adc
(bad)
pop
les
and
loop
dec
outs
mov
jle
add
not
icebp
js
mov
aad
sbb
xchg
int3
dec
shr
stos
retf
jmp
sub
xlat
xor
add
sbb
adc
push
addr16
mov
push
sti
repz
fsub
sub
pop
dec
sub
jge
lahf
and
dec
add
jnp
cmp
pop
mov
push
jb
call
sbb
retf
rcl
push
add
push
movs
push
mov
call
mov
push
in
js
sbb
stc
cli
pop
or
mov
xchg
cmc
push
mov
inc
les
cmp
jl
dec
mov
mov
dec
mov
sbb
loop
lods
push
and
lods
aad
sbb
fld
and
pusha
lods
(bad)
mov
out
and
les
jmp
pusha
mov
inc
jae
popf
rcr
jmp
cs
test
pop
or
mov
and
sub
sbb
mov
xchg
in
pop
cmps
pop
imul
movs
dec
inc
imul
add
daa
mov
jb
(bad)
pop
nop
pop
(bad)
and
jno
mov
sahf
xchg
fiadd
jae
add
repnz
xchg
add
mov
fadd
ins
dec
ss
jne
rcr
inc
adc
fbld
outs
inc
add
mov
sub
jle
div
mov
orps
scas
outs
mov
inc
cmps
rol
adc
addr16
imul
mov
mov
and
cmc
xor
pop
inc
add
(bad)
scas
mov
sbb
clc
rol
mov
push
in
push
pop
dec
test
dec
jge
dec
test
ins
sti
add
test
or
add
xchg
xor
dec
sub
js
dec
push
pop
inc
test
fst
pop
out
retf
repz
inc
push
xor
push
(bad)
jno
sub
ds
cld
mov
outs
xchg
sub
sbb
imul
popf
sub
sub
jb
fwait
cmp
pop
ja
mov
rcr
mov
push
jne
inc
xor
dec
test
das
pop
sbb
jl
arpl
push
mov
mov
lds
aaa
fcomip
xchg
push
add
leave
in
es
dec
xchg
cs
(bad)
jp
or
in
fnstcw
call
repz
jbe
mov
xchg
out
cmp
add
push
repnz
sti
std
jge
retf
pop
ja
cwde
dec
and
pop
jbe
js
dec
sbb
out
nop
xchg
cmp
in
ret
jno
push
cmps
dec
aaa
or
sahf
sbb
(bad)
mov
daa
or
push
and
xchg
adc
push
mov
aam
lahf
jns
stos
lea
adc
imul
retf
fst
xchg
sbb
sbb
inc
adc
xchg
mov
setle
bound
out
pop
xor
sahf
idiv
and
inc
addr16
bound
mov
jmp
(bad)
daa
xor
mov
test
(bad)
ss
cmc
or
pop
in
xor
fdiv
dec
push
arpl
scas
repz
out
lods
and
nop
bound
push
mov
scas
cmp
cmp
cdq
fisttp
xchg
pushf
sub
jne
rol
test
(bad)
jnp
and
into
and
ret
lahf
jmp
les
das
push
js
mov
mov
dec
cmp
push
sub
pop
sbb
mov
xor
xchg
push
iret
cmps
out
adc
xor
loop
fucomi
inc
mov
mov
adc
(bad)
push
mov
je
repnz
aam
test
push
dec
cmp
sub
or
pop
cmp
dec
xchg
inc
push
xor
into
xchg
stos
lahf
dec
xchg
aad
mov
loop
lods
mov
dec
push
scas
fld
push
sub
in
add
sbb
movs
das
repz
leave
lods
adc
sahf
imul
push
std
jae
mov
pop
mov
fisttp
jno
repnz
cmps
lahf
inc
push
fdivrp
inc
sub
adc
push
cld
ficomp
xor
clc
push
lods
xchg
dec
push
(bad)
jae
les
add
(bad)
loopne
push
mov
pop
sub
movs
mov
lods
out
pusha
shl
jmp
jne
adc
ins
add
mov
imul
jle
xchg
or
pop
xchg
cmp
cmp
xor
idiv
in
add
cmps
adc
outs
arpl
inc
dec
xlat
mov
data16
test
cli
in
xchg
aas
loop
push
in
mov
in
pop
or
or
mov
outs
fild
mov
outs
xchg
inc
loope
mov
push
and
or
mov
cmp
mov
xor
loopne
rcr
out
or
sub
cmps
push
cmc
cmp
shr
inc
popa
gs
sbb
jge
inc
cmp
add
pop
mov
fcom
adc
mov
call
push
clc
or
fsub
ret
sub
dec
movs
ss
cmp
inc
outs
xchg
add
push
enter
mov
jge
and
shl
fidivr
jecxz
mov
adc
in
sbb
mov
fdivr
repnz
icebp
cli
add
push
imul
les
sub
sbb
sar
cmp
test
sar
add
cli
inc
idiv
loop
cmps
imul
jae
push
loope
mov
adc
sub
sub
jb
(bad)
cli
mov
sub
cmp
mov
and
mov
ins
(bad)
xor
adc
mov
cld
jnp
xchg
and
xor
shl
inc
inc
or
pusha
test
mov
imul
popa
jecxz
inc
fs
imul
cmps
cmp
lods
mov
jae
cld
adc
scas
add
(bad)
pop
addr16
loopne
retf
or
ret
sbb
or
ja
in
stc
call
pcmpgtb
loopne
lahf
mov
cld
mov
rol
sbb
dec
push
pushf
imul
push
push
popf
or
retf
push
add
sbb
mov
mov
fcomi
add
sbb
pop
inc
in
cmps
cmp
sub
clc
stc
pop
dec
xchg
mov
pop
retf
jo
dec
xchg
fidivr
ror
push
xor
jle
pop
lahf
or
aas
ffree
and
ret
pop
sar
in
out
lods
pop
adc
mov
fiadd
sub
popf
fwait
loop
movs
ret
mov
push
pop
ret
sbb
fwait
jg
in
pop
inc
xlat
sub
or
cmp
lods
jp
push
loop
out
gs
jae
jmp
(bad)
outs
call
ret
add
push
loop
jp
add
jae
inc
mul
push
jno
fsubr
(bad)
mov
cmp
loopne
hlt
stos
in
pop
add
outs
icebp
div
push
fwait
retf
jl
add
retf
aas
jno
sub
mov
xor
sbb
sub
jge
jbe
pop
xchg
test
(bad)
fst
aam
loopne
adc
or
aad
nop
pop
out
adc
popf
jae
cmp
popf
inc
dec
jmp
fwait
retf
xor
or
dec
sub
scas
add
jo
sub
pop
popa
leave
aad
push
dec
and
stos
xor
cmc
sbb
mov
mov
mov
mov
push
test
xchg
or
push
das
std
sub
push
ins
and
dec
popa
push
in
inc
pop
scas
fstp
loopne
dec
fild
jmp
push
repnz
fnop
into
inc
add
fisttp
mov
and
mov
xchg
pushf
and
enter
mov
or
ins
cmp
xchg
add
out
sub
in
sub
jmp
xor
ja
xor
inc
cmps
dec
add
lods
test
push
push
pop
arpl
retf
push
scas
inc
push
pop
fwait
aam
out
jo
nop
mov
(bad)
ss
mov
xor
call
call
sbb
jle
scas
ret
pop
inc
pop
das
stc
jmp
push
sbb
sub
jmp
sub
lahf
in
sahf
inc
pop
xchg
ss
xor
jmp
add
test
test
leave
arpl
inc
retf
inc
pop
fwait
fwait
in
jbe
sub
mov
jp
mov
leave
xchg
cmp
cmp
cmp
pop
xchg
es
xor
js
mov
fadd
mov
pop
jno
cdq
pop
lahf
pop
xchg
std
les
ror
mov
scas
add
out
push
out
test
fdiv
stos
out
lea
jl
sbb
sub
jp
xchg
hlt
cmp
sbb
mov
inc
clc
or
clc
jno
jmp
test
outs
sub
and
mov
add
dec
lods
dec
stos
dec
dec
js
ss
stc
das
out
je
pinsrw
outs
mov
call
xchg
mov
xor
push
xor
mov
mov
mov
sbb
mov
mov
dec
in
daa
mov
push
sub
xchg
mov
retf
pand
ret
inc
mov
add
dec
stos
mov
movs
push
imul
aad
mov
dec
shr
pop
mov
imul
arpl
fst
hlt
add
inc
lods
mov
or
cmp
mov
rcr
pop
or
inc
and
mov
mov
stc
jbe
pop
dec
mov
push
aaa
shl
outs
call
dec
adc
pop
or
fimul
add
out
xor
xchg
pop
lock
das
(bad)
jns
mov
dec
daa
out
cld
cdq
fldcw
cmp
and
fs
dec
jmp
(bad)
jmp
addr16
scas
adc
jns
dec
xor
dec
sub
cmp
call
add
fld
enter
jne
mov
cs
jmp
fs
and
pop
or
loopne
(bad)
push
das
rcr
dec
pop
pop
scas
es
gs
push
outs
js
xchg
repnz
pop
jbe
ficomp
xor
jle
test
sbb
ins
dec
enter
and
mov
jns
mov
and
jp
repnz
cli
jmp
dec
push
sbb
pop
mov
inc
loopne
es
repnz
inc
clc
(bad)
retf
dec
xor
push
mov
jnp
push
sar
sbb
push
push
cs
mov
push
adc
sub
test
and
mov
xchg
fild
repnz
mov
je
sub
jg
pop
adc
xor
out
push
ficom
imul
xchg
mov
loop
cmp
pop
jmp
call
inc
imul
mov
ficom
aad
lods
mov
(bad)
push
push
pop
out
dec
mov
retf
cwde
xor
stc
retf
stos
cwde
iret
je
lods
cmp
inc
jo
jne
jl
sar
xchg
pop
inc
aam
repz
sbb
stos
mov
or
(bad)
mov
scas
cdq
and
lds
ds
iret
cdq
mov
fcmove
pop
test
xlat
xor
cwde
sub
inc
jp
movs
test
cld
pop
icebp
mov
movs
push
xchg
test
pop
cs
dec
mov
repz
fsubrp
stc
adc
or
xor
mov
aas
and
cmp
adc
xchg
jbe
jns
mov
push
popa
cmp
rcpps
dec
push
xchg
jmp
pop
ds
add
popf
outs
sti
(bad)
fsubr
in
mov
(bad)
inc
add
pushf
fadd
aam
imul
stos
jb
push
sub
cmc
sub
mov
enter
xor
adc
mov
mov
sti
fucomp
push
cmp
push
or
outs
movs
js
sub
rcl
sti
add
cdq
sahf
dec
sub
cs
push
or
aam
pop
and
or
or
mov
mov
dec
fadd
inc
(bad)
push
std
mov
jg
pop
bound
loop
dec
mov
xchg
(bad)
fisttp
(bad)
(bad)
repz
shr
fld
and
push
add
push
add
in
repnz
pop
pop
jle
mov
pop
pushf
mov
ficom
mov
inc
mov
sbb
push
(bad)
cmovs
jo
jmp
pop
int
es
stos
lods
sahf
pop
in
push
dec
pusha
xor
mov
loopne
mov
mov
cwde
je
xor
mov
test
mov
sahf
sbb
adc
pop
mov
clc
add
jle
neg
inc
sub
out
gs
iret
ins
in
mov
cld
int
mov
js
mov
dec
jbe
pop
xchg
xchg
mov
sahf
ds
sub
adc
repnz
popf
arpl
dec
fs
ss
inc
popa
shr
stos
and
cld
daa
dec
mov
fdiv
lds
jmp
in
mov
fsub
sti
dec
adc
push
stc
lods
mov
sti
lahf
not
scas
imul
int
sbb
stos
fdiv
hlt
and
pop
inc
push
inc
aas
push
and
sbb
push
mov
nop
and
out
inc
out
ficom
adc
cmp
mov
cmp
ja
fs
(bad)
mov
cmp
daa
push
loopne
lods
out
sar
es
ror
int3
xchg
cmps
retf
imul
repnz
xor
cmp
mov
mov
jmp
dec
jecxz
stc
outs
sahf
mov
aad
call
movs
fstp
jb
inc
or
cmp
mov
dec
loope
movs
push
xchg
or
xor
inc
cmp
mov
add
or
fmul
js
and
jb
icebp
idiv
inc
cmps
outs
adc
xor
sbb
mov
jae
stos
mov
test
rcr
push
cmp
(bad)
mov
and
fisubr
inc
aam
nop
jmp
xchg
sub
and
leave
int3
sub
rcl
push
jno
sbb
nop
add
xchg
call
fsubr
jb
test
dec
cli
push
call
push
pop
jmp
push
jge
popa
scas
loopne
cmp
pop
call
sbb
mov
stc
xchg
cmp
xchg
jecxz
inc
int
or
in
scas
inc
jnp
push
cmp
imul
sbb
dec
cmp
cmp
adc
and
adc
sar
and
jle
mov
shl
fnsave
mov
xchg
fild
sub
add
cmp
adc
cmps
imul
hlt
(bad)
aam
cmovs
mov
data16
sub
arpl
and
loop
pop
inc
fucomip
sbb
xchg
(bad)
out
mov
or
mov
into
jp
rcl
dec
mov
push
inc
mov
add
jge
gs
jns
add
xchg
cwde
adc
push
cmp
int3
loopne
lods
dec
xchg
jbe
imul
nop
mov
pop
sub
pushf
xchg
push
dec
push
loop
mov
lahf
stos
fist
outs
inc
mov
mul
test
sahf
clc
mov
xchg
repnz
sbb
scas
(bad)
mov
and
xor
and
jp
movs
ret
mov
pop
pop
xchg
jecxz
mov
add
cli
push
mov
sub
jmp
dec
or
mov
adc
adc
inc
xchg
sbb
add
ja
xchg
into
std
xchg
push
add
inc
xchg
shr
inc
icebp
dec
repnz
and
pop
aaa
ds
mov
push
inc
sar
hlt
(bad)
out
mov
mov
cmc
test
ins
mov
icebp
mov
call
jnp
in
(bad)
test
dec
call
sbb
sar
adc
aas
add
sahf
jle
jnp
daa
pushf
lods
psubd
cdq
xchg
ja
jae
xchg
dec
sub
jbe
out
nop
jecxz
icebp
mov
sbb
arpl
js
and
jnp
pop
fwait
lods
or
popf
cs
cs
sahf
mov
jbe
cmp
dec
les
push
pop
aam
add
mov
and
pusha
sti
pop
jno
xor
mov
das
add
and
adc
mov
aad
sbb
xchg
adc
int
test
repz
adc
leave
xor
mov
popa
seto
push
ins
xchg
pop
(bad)
sbb
imul
xor
lock
jmp
retf
outs
adc
add
pop
sti
rcl
jmp
fldcw
fdiv
cmp
test
cli
repz
shr
sbb
ins
std
or
cmc
xor
mov
and
sub
gs
(bad)
mov
mov
mov
dec
mov
jecxz
ins
bound
pusha
mov
sbb
lock
adc
cmp
test
push
fdiv
xchg
addr16
in
sbb
xchg
jae
xlat
add
adc
mov
in
xchg
mov
jbe
fnsave
inc
(bad)
mov
mov
or
and
pop
ins
push
xchg
xor
mov
mov
or
inc
outs
dec
popa
fxam
add
fisub
lods
dec
adc
(bad)
(bad)
movs
cwde
movs
add
data16
test
add
xchg
xor
inc
sub
xor
xchg
into
bound
jbe
in
xor
cld
ds
dec
dec
outs
lea
loope
mov
pop
addr16
sbb
shl
inc
std
pop
aad
sub
mov
mov
imul
xchg
cmp
(bad)
xchg
mov
pop
mov
push
jl
jno
push
inc
inc
repz
add
arpl
clc
pop
(bad)
or
call
stos
ret
cmp
fadd
mov
icebp
pop
icebp
addr16
retf
(bad)
in
mov
sbb
push
adc
stos
daa
inc
inc
cmp
out
jnp
xor
(bad)
test
gs
pop
xor
mov
push
add
or
pop
les
lods
sub
cmp
jmp
add
xchg
icebp
fld
(bad)
sub
test
mov
mov
addr16
sbb
movs
test
movs
mov
into
dec
outs
or
dec
(bad)
mov
xchg
clc
ret
div
adc
les
inc
push
inc
push
mov
test
mov
loop
xor
push
call
nop
sub
pop
xchg
pop
outs
int3
mov
add
xchg
cmps
xor
sub
adc
sub
scas
push
inc
adc
xor
into
jmp
aad
not
repnz
repz
pusha
clc
inc
js
pop
pop
add
xor
push
lock
imul
cwde
jbe
adc
imul
inc
pop
scas
push
mov
cmps
push
int
mov
std
cmp
sub
xor
mul
(bad)
dec
retf
or
div
enter
sub
inc
pop
addr16
pop
ret
in
mov
std
and
lods
adc
sub
imul
lea
push
jb
lods
out
xor
daa
dec
js
in
jmp
aaa
out
jp
movs
mov
shl
cmp
fdivr
retf
outs
(bad)
and
out
jnp
out
dec
mov
loope
pop
(bad)
fwait
mov
stc
lock
outs
enter
push
sahf
and
inc
xor
in
lods
mov
sub
sub
inc
imul
sbb
xchg
movs
adc
adc
(bad)
int
jge
jle
xchg
cdq
sub
mov
push
lds
or
and
aad
push
pushf
loope
stos
dec
pop
pop
call
iret
add
cmp
inc
aas
dec
addr16
mov
xor
fwait
cmc
out
daa
or
xor
jne
cld
aas
cmp
enter
inc
cmp
cmp
inc
retf
push
mov
shl
or
(bad)
mov
stc
xchg
jle
nop
stc
das
fist
adc
push
iret
fdivr
movs
add
arpl
out
push
rcl
or
add
ds
stos
dec
daa
jle
and
out
push
lods
push
xchg
in
or
or
dec
cdq
sub
imul
inc
push
call
add
sahf
(bad)
pop
imul
or
sbb
cmp
or
aad
je
or
hlt
clc
push
pop
mov
retf
cmp
fsub
mov
pop
mov
inc
ss
inc
sbb
fisttp
inc
inc
pop
cmps
dec
test
cdq
(bad)
push
int
stos
dec
mov
xor
sub
call
repz
mov
icebp
push
or
jmp
psllw
cwde
cwde
stc
lea
pop
xchg
dec
neg
dec
(bad)
mov
cwde
rcl
imul
push
fmul
sub
add
fmulp
sar
sub
xor
les
int3
enter
mul
cmps
movs
repz
mov
jnp
lds
sub
adc
push
jo
sub
std
add
mov
jg
lahf
sbb
cmp
xchg
lods
xchg
sub
cmps
and
dec
push
jns
popf
fild
pop
cmp
mov
and
inc
sub
xchg
bound
ret
ss
mov
mov
mov
pop
icebp
and
xchg
scas
fild
mov
sub
in
inc
cdq
arpl
mov
jbe
pop
dec
jmp
clc
icebp
ja
dec
xor
push
idiv
out
test
test
scas
movs
or
fistp
test
pop
cmp
jae
imul
mov
pop
test
add
jmp
jle
neg
push
xor
ds
mov
fistp
test
repz
mov
stos
gs
push
repz
movs
pop
mov
out
neg
lock
sbb
in
push
iret
mov
add
fisttp
or
stos
sub
jmp
pop
test
adc
or
outs
cmp
sub
xor
inc
nop
out
inc
jmp
stos
idiv
(bad)
xchg
(bad)
inc
or
in
cmp
paddd
scas
in
lahf
cdq
lahf
nop
gs
cmp
jp
call
jnp
fild
mov
push
mov
imul
(bad)
call
iret
(bad)
sbb
xor
and
fs
adc
nop
stos
pop
jo
jecxz
and
es
daa
add
call
xor
inc
cmc
and
ins
add
jb
sti
fist
jno
dec
or
test
or
lea
mov
xor
enter
xor
mov
xchg
and
lods
mov
xor
lds
sbb
push
lods
jb
iret
adc
dec
push
cdq
add
nop
mov
push
xor
aas
xchg
pop
clc
and
xchg
movs
mov
cmc
add
in
inc
cwde
xchg
xlat
cmc
dec
mov
jecxz
dec
clc
stos
push
lock
and
(bad)
outs
and
rcl
mov
or
mov
ror
mov
mov
xchg
xchg
add
adc
mov
cmp
sub
cld
xor
clc
(bad)
out
or
(bad)
sti
dec
adc
sub
mov
sub
repz
dec
inc
loopne
cs
mov
shl
cmc
mov
push
lds
(bad)
sbb
clc
xor
mov
in
jae
pushf
mov
or
push
movs
mul
cmp
mov
push
mov
rcl
sbb
push
and
mov
repz
sbb
pop
and
fidiv
(bad)
scas
lea
cmp
jge
fmul
xor
or
gs
aad
sub
lock
jp
mov
out
push
push
and
add
pop
jl
cmp
jecxz
and
mov
xchg
test
hlt
cdq
or
std
dec
out
sbb
mov
test
push
fidivr
mov
mov
xor
add
add
ror
add
xlat
sub
jecxz
add
fdivr
push
jo
in
cli
jo
xor
and
jp
ret
imul
mov
stos
test
mov
cmp
retf
cwde
or
or
shl
loop
lods
sbb
jecxz
mov
(bad)
repz
pop
cs
mov
adc
push
mov
xchg
or
sub
(bad)
in
xchg
mov
cmps
into
jle
imul
xchg
lock
std
cdq
rcr
punpckhdq
mov
sbb
mov
test
daa
mov
mov
test
xchg
or
mov
xchg
mov
outs
mov
pop
add
sti
jb
push
push
pop
xlat
or
imul
sbb
outs
(bad)
pop
push
es
push
push
pop
cmp
(bad)
mov
cmps
cmc
call
lods
call
xor
jo
sub
movs
sub
clc
sub
loopne
xchg
lods
ins
add
loope
es
jp
imul
xchg
cmp
mov
jp
sbb
push
clc
sub
out
jb
outs
fisttp
mov
or
out
dec
inc
call
and
push
outs
shl
pop
add
add
pop
leave
(bad)
pop
push
mov
div
sub
xchg
rcr
jnp
sub
adc
jmp
inc
popf
fnstenv
test
imul
mov
add
nop
inc
and
fidivr
jns
ja
ja
cmp
aam
mov
loope
push
pop
inc
shr
add
inc
mov
inc
sub
mov
jge
inc
jp
mov
mov
mov
push
in
loope
cmps
or
popf
add
adc
daa
jmp
je
(bad)
cmp
ds
std
add
inc
(bad)
loopne
mov
mov
xchg
lahf
inc
popf
push
sbb
call
xchg
test
xlat
add
cli
scas
ret
mov
xchg
inc
adc
(bad)
sahf
std
jbe
xchg
test
arpl
outs
inc
stos
hlt
inc
fs
shl
cld
jmp
bound
repnz
adc
adc
(bad)
mov
and
pusha
mov
or
ins
jge
aad
sub
out
xchg
sahf
fwait
js
(bad)
jmp
(bad)
std
or
leave
stos
mov
imul
and
scas
inc
loopne
mov
shl
fidivr
daa
pop
dec
lods
aam
mov
mov
rol
fisttp
or
mov
nop
add
cld
or
cld
sub
ins
push
inc
pop
add
aad
fdiv
push
or
pop
push
mov
stos
and
pop
frstor
popa
mov
aas
push
in
test
lods
cmp
in
sahf
sub
inc
push
js
push
les
xor
in
aaa
call
jmp
(bad)
or
fld
test
jo
mov
mov
shr
cmp
bound
ret
(bad)
sbb
inc
sbb
dec
test
test
in
mov
xor
cmp
pop
xchg
rcl
xchg
and
cmp
pop
add
in
into
mov
add
sbb
test
xchg
jnp
mov
xchg
add
push
jae
pop
lahf
xchg
xor
dec
je
push
adc
iret
outs
add
sub
scas
jl
sub
jg
pop
inc
push
fs
(bad)
or
push
scas
cmp
jo
loope
mov
push
fisubr
mov
in
enter
jmp
enter
into
xchg
inc
out
test
sub
xor
adc
repnz
lds
xchg
ret
jl
icebp
mov
ins
ins
pop
mov
stos
ins
mov
aas
outs
or
adc
and
sbb
pop
outs
lods
add
pop
cmp
mov
adc
outs
stc
jmp
and
or
jo
push
lahf
jge
sbb
(bad)
pop
movs
movs
rcr
sbb
mov
mov
sahf
adc
pop
movs
test
cmp
sub
push
cmp
cmp
sahf
outs
rcr
ja
ds
outs
xchg
retf
or
cmp
lock
mov
mov
xchg
sbb
or
jmp
loop
sti
test
sbb
lahf
repz
mov
xchg
mov
ret
in
or
jg
movd
scas
push
xchg
cwde
dec
out
add
out
add
jb
out
mov
pop
cmps
adc
es
loop
enter
mov
in
clc
and
rol
xchg
rcr
sub
sub
ss
sti
leave
jl
push
and
in
pop
dec
js
call
mov
xchg
jbe
dec
lahf
(bad)
out
mov
lea
jmp
fwait
xchg
aam
div
cmp
mov
lea
sbb
push
ror
pop
add
mov
sbb
cmp
stc
leave
fisttp
imul
(bad)
lods
fild
enter
pop
rol
js
pusha
mov
lahf
test
daa
leave
stc
pop
lahf
jno
push
cmp
push
mov
fxch
ss
pop
imul
jbe
cmp
call
adc
loop
popf
pop
mov
jae
dec
cld
das
xchg
xchg
and
xor
ja
sub
add
out
cs
push
dec
cmp
mov
jge
cwde
add
or
and
or
pop
mov
and
retf
ror
jge
in
xor
add
jnp
int3
adc
out
inc
out
dec
fcmovu
pop
stos
lock
enter
(bad)
ja
arpl
movs
das
sbb
dec
mov
aad
pop
push
add
dec
stc
shr
add
sbb
add
ret
mov
test
pop
xchg
in
mov
sbb
and
lahf
mov
mov
cmps
retf
int
(bad)
stos
push
les
mov
lock
jne
push
pop
push
fld
fwait
push
xor
leave
aam
(bad)
test
sti
push
ins
movs
test
pushf
(bad)
ins
fist
sub
sbb
xchg
dec
(bad)
(bad)
(bad)
stos
(bad)
aad
jb
jge
imul
sbb
out
mov
stc
pop
ds
cld
inc
xor
pop
lods
mov
pushf
mov
retf
mov
mov
cld
fcom
or
lds
inc
mov
xchg
jae
xor
popf
jle
inc
fnstcw
test
adc
add
jmp
call
inc
mov
movs
rep
stos
add
ins
sbb
lahf
aad
out
lahf
inc
scas
imul
dec
repnz
(bad)
dec
cwde
sbb
movs
push
fcomip
and
pusha
push
and
stos
push
in
int
mov
push
loope
push
retf
push
mov
loop
test
loope
pop
retf
adc
add
mov
stos
sub
fldcw
adc
shl
scas
aaa
pop
stos
int
or
xchg
add
jo
mov
jle
jg
in
mov
rcl
jns
dec
bound
sbb
push
or
xor
xchg
(bad)
scas
sbb
pop
gs
sbb
pop
add
sbb
sbb
loope
dec
fwait
add
mov
add
pop
jne
mov
out
mov
inc
jne
or
movs
pop
data16
push
movs
in
sbb
fistp
jns
inc
stos
rcl
call
jge
ds
int3
sti
push
sub
mov
push
outs
push
sbb
in
pop
sub
jmp
cdq
cdq
jae
cmps
clc
test
call
popa
cmp
xor
mov
scas
in
int
das
adc
inc
fild
lods
xor
inc
ficom
jg
xchg
dec
das
pop
and
fisub
not
sbb
shr
mov
(bad)
imul
or
in
pop
mov
add
mov
(bad)
nop/reserved
das
je
adc
xchg
mov
cmp
cmp
scas
dec
adc
or
xor
pop
pop
jmp
out
inc
mov
fld
arpl
pop
cwde
rcr
sub
outs
aam
push
push
ret
push
sub
popa
fadd
int
and
cld
inc
cmps
jmp
mov
pop
xor
bound
and
xchg
mov
pop
xlat
pop
mov
test
pop
push
leave
xchg
jmp
push
imul
in
into
(bad)
dec
mov
das
xor
pop
xlat
inc
and
rcr
pop
mov
iret
sar
inc
shl
xor
add
cmps
mov
inc
sti
cmps
sahf
mov
data16
mov
xchg
pop
int3
adc
xor
shr
push
mov
jae
call
adc
pushf
push
xor
call
xchg
mov
retf
pop
ret
ss
add
ret
test
ficom
xchg
into
shr
inc
dec
out
pop
(bad)
adc
imul
sbb
xor
(bad)
js
pop
test
test
aaa
aaa
loope
sub
cmp
add
mov
adc
idiv
movs
fisttp
fimul
in
mul
stc
popf
loop
jmp
dec
jb
pop
jp
jl
lds
inc
add
loope
mov
call
(bad)
leave
mov
lock
adc
bound
cmp
aas
push
adc
test
out
cld
aas
xchg
or
jns
inc
arpl
sbb
cmp
mov
push
mov
ins
xchg
jmp
bound
push
cmps
mov
dec
(bad)
in
jmp
out
fcmovne
xor
jmp
les
clc
pop
lock
jno
retf
not
pop
sbb
fwait
sbb
pop
mov
push
push
inc
popa
repz
push
ins
ja
adc
sbb
ins
out
int3
mov
(bad)
repnz
nop
sbb
pop
cmps
or
push
jmp
pushf
push
daa
ror
jg
(bad)
cmp
push
addr16
and
iret
stc
inc
pop
dec
repz
push
pop
in
int
sub
addr16
call
es
sub
or
ror
pop
cmp
sub
test
push
mov
jp
pushf
js
cmp
pop
add
jbe
mov
cmp
jb
and
enter
call
sbb
jnp
or
cdq
sbb
jle
test
out
les
loop
aad
xchg
and
mov
pop
cmp
xchg
(bad)
retf
jnp
enter
mov
cmps
mov
xchg
cwde
mov
add
inc
jns
pop
jle
jl
je
dec
mov
mov
lds
sub
jne
stos
aas
mov
scas
ss
idiv
(bad)
mov
je
cmp
inc
lock
rcl
in
mov
inc
inc
nop
sti
fdiv
or
push
xchg
test
aaa
mov
popa
aas
loopne
push
add
mov
out
mov
pusha
jno
sahf
mov
imul
push
ins
ss
leave
jno
xor
jbe
outs
dec
lea
(bad)
sar
cdq
jb
das
push
dec
inc
pop
or
inc
xlat
and
hlt
ins
out
sahf
jge
loopne
out
test
cbw
scas
adc
cmps
mov
sub
cmp
push
xchg
retf
sub
cld
or
pop
mov
arpl
shl
pop
or
loope
sub
jge
add
sbb
sub
lock
xor
shr
mov
repz
jle
sahf
sbb
add
xor
and
mov
jne
mov
ret
push
js
les
adc
sub
fs
adc
add
lahf
push
(bad)
fdivr
adc
lock
adc
push
lock
neg
pop
mov
enter
push
push
xchg
adc
nop
inc
int3
icebp
rol
push
(bad)
or
mov
mov
scas
iret
mov
shl
mov
aad
daa
sub
push
ins
pop
and
mov
xchg
mov
out
adc
fwait
repz
xor
xchg
aaa
add
mov
call
(bad)
and
jg
gs
(bad)
xlat
out
cmp
push
mov
jmp
inc
fbld
xchg
dec
popa
cs
cli
and
pop
fadd
or
and
sbb
retf
push
js
jl
out
pop
or
fwait
js
mov
inc
mov
add
call
pop
adc
pop
mov
mov
inc
mov
pop
lahf
shr
adc
adc
data16
xchg
xchg
aam
or
sub
xchg
loop
arpl
mov
repz
and
dec
inc
mov
sub
push
mov
dec
or
mov
pop
imul
inc
inc
lock
(bad)
push
mov
mov
mov
mov
jb
nop
mov
push
test
iret
mov
aad
jns
scas
fisttp
pop
pcmpeqw
inc
or
cmc
or
aaa
das
sub
sub
movs
outs
aas
mov
add
mov
mov
xchg
cdq
stc
mov
sbb
cwde
mov
or
das
push
iret
sub
and
push
xchg
xlat
out
jmp
inc
dec
rcl
int
pop
(bad)
adc
mov
mov
iret
mov
cmp
push
leave
xor
repz
jns
inc
lods
xchg
jne
and
and
adc
imul
jmp
pop
rol
test
cld
call
inc
(bad)
sahf
jl
cmp
shl
pop
lea
fisub
stos
data16
mov
outs
out
add
mov
test
xchg
xor
push
dec
sbb
fsubr
jmp
es
sub
cmp
cmp
out
int
lods
jge
jae
call
lock
jle
repz
retf
pop
mov
sti
rol
push
scas
xchg
and
nop
add
adc
pop
daa
(bad)
fwait
sbb
scas
push
mov
pusha
in
ins
sbb
pop
outs
shl
mov
out
pop
mov
fsub
push
repz
jno
mov
inc
addr16
jl
std
cmp
mov
fisttp
mov
cmp
mov
dec
cli
or
or
out
sbb
pushw
mov
mov
dec
pusha
mov
mov
adc
in
mov
add
aas
(bad)
cmp
xchg
or
fbstp
daa
mov
push
push
loopne
xchg
arpl
loope
push
xchg
push
mov
in
mov
neg
xor
ins
add
(bad)
test
add
je
dec
hlt
cs
stc
sbb
sbb
ins
or
mov
aam
idiv
test
mov
push
mov
jb
arpl
pop
or
jl
inc
test
pusha
movs
dec
fld
es
push
mov
jge
stc
out
adc
jmp
pop
and
sub
cmp
or
in
js
pop
lahf
pushf
stc
ins
nop
aas
fidiv
jae
lds
push
push
jo
cdq
lods
scas
pop
jl
mov
mov
fwait
out
mov
mov
sti
mov
and
jmp
out
or
ins
pop
push
out
ret
jbe
push
pop
mov
fiadd
test
mov
adc
bswap
push
dec
add
sbb
lods
jmp
(bad)
(bad)
data16
ins
cmp
in
out
lea
xor
pop
mov
nop
call
iret
fpatan
xchg
mov
mov
add
and
fwait
into
push
leave
fistp
push
or
cmps
add
mov
sub
aam
lock
push
sbb
pop
movups
dec
icebp
in
jb
cmp
dec
push
and
outs
add
mov
jge
dec
mov
add
jae
mov
pop
dec
das
stc
dec
mov
repz
cld
int3
(bad)
cs
adc
ja
ins
push
(bad)
cmp
xor
cli
int3
pop
cld
aas
sbb
clc
inc
repz
push
rcl
cld
dec
cmovns
mov
ins
push
push
xor
(bad)
xchg
fdivrp
jecxz
dec
cmp
ret
pop
test
movs
dec
xchg
adc
and
and
fs
repnz
cmp
lock
(bad)
jmp
cmp
cmp
mov
xchg
cmc
jbe
pop
xor
shr
call
sub
leave
jmp
movs
or
es
mov
jns
jmp
adc
inc
xchg
int3
pop
inc
sub
sti
fist
out
mov
xchg
into
xor
fsubr
shl
rol
push
pop
enter
mov
test
ds
add
cwde
loopne
ins
sub
jbe
test
adc
fst
xchg
pusha
xchg
inc
iret
push
cmps
mov
sub
mov
mov
pop
and
das
iret
xor
push
jno
push
daa
icebp
pop
outs
leave
dec
mov
mov
outs
leave
sub
lods
jp
std
add
push
and
jg
mov
pop
sbb
cmp
fld
inc
jbe
in
sub
mov
out
ret
dec
jmp
cmp
scas
pop
fmulp
ins
dec
push
pusha
(bad)
call
pop
cmp
xor
hlt
xor
(bad)
or
dec
ja
inc
sub
aad
or
sahf
xchg
pushf
dec
pop
mov
test
adc
inc
call
xlat
les
movzx
push
leave
inc
in
fadd
test
fs
out
xor
imul
pop
aas
cmps
adc
push
cmps
retf
hlt
rcr
(bad)
rep
push
adc
imul
cmp
ror
call
xor
xlat
pop
jae
cmp
lahf
mov
mov
ret
xchg
inc
out
imul
jnp
mov
fsub
call
scas
mov
test
gs
xchg
ja
jl
lock
retf
nop
lds
sti
fisttp
dec
mov
(bad)
test
xor
or
clc
cs
and
js
pop
xchg
pop
ret
adc
hlt
iret
aaa
adc
xor
retf
jae
scas
mov
hlt
lea
loop
or
call
stos
loope
mov
add
repnz
imul
fistp
push
push
xchg
dec
fild
fistp
adc
add
mov
ret
cdq
push
mov
xor
into
pop
aam
mov
pop
mov
push
call
mov
mov
and
push
pop
shl
dec
inc
mov
les
outs
shl
sbb
shl
push
test
lods
mov
mov
int3
adc
or
jmp
jbe
push
xchg
xchg
mov
loope
pusha
and
or
js
ss
arpl
jg
stos
test
push
fst
ret
or
in
mov
or
mov
or
xchg
mov
loopne
(bad)
imul
adc
adc
push
and
cmp
push
ins
retf
rep
inc
lods
jns
(bad)
mov
push
(bad)
pop
push
sbb
add
dec
jno
and
inc
ffreep
push
in
lea
adc
ror
push
nop
stos
xchg
mov
mov
call
shr
inc
loope
ds
bound
aad
std
stc
daa
mov
out
aad
test
enter
push
leave
or
(bad)
ficomp
cld
(bad)
sbb
out
lea
jecxz
in
aad
bound
xchg
mov
mov
xchg
xchg
cmp
aaa
mov
dec
or
movs
adc
push
xor
mov
pop
add
sub
inc
jnp
ret
aam
sbb
sub
cmp
dec
push
xchg
and
mov
loopne
add
add
out
pop
jp
pop
pop
jle
sbb
out
and
xchg
aas
movs
inc
inc
ins
loopne
dec
pushf
std
(bad)
cmp
cs
ficom
daa
pop
pop
sbb
mov
dec
pop
(bad)
out
inc
push
aam
mov
xchg
xchg
call
jb
cli
into
or
sbb
pop
ins
into
out
(bad)
rol
jge
push
sub
add
clc
int
mov
std
push
dec
cmc
mov
stos
adc
cmc
push
jbe
in
pop
jl
mov
cmp
arpl
out
stos
sahf
pop
add
push
test
pop
jge
xor
ins
pop
arpl
in
out
dec
adc
jno
jp
add
sbb
sbb
cmps
mov
fsubp
mov
add
xor
fwait
pop
push
stos
pushf
cmps
movs
jne
mov
jo
and
test
xchg
xor
xchg
add
pop
mov
add
inc
(bad)
popa
gs
fcom
pop
cmp
sahf
or
jns
fldenv
std
and
cmp
data16
scas
test
adc
rol
cmps
dec
mov
cmp
push
mov
cmp
jnp
rol
or
sbb
clc
xchg
pop
add
jle
sbb
and
movs
imul
xchg
out
cmp
pop
xchg
jbe
mov
xchg
jnp
and
adc
mov
(bad)
fist
push
mov
pop
jno
mov
data16
aaa
mov
(bad)
imul
movs
(bad)
jecxz
dec
sub
not
shl
retf
and
fsub
mov
push
in
adc
cmp
repz
mov
jmp
inc
sbb
outs
mov
and
sub
inc
sub
mov
repz
dec
xor
clc
push
ror
pop
inc
inc
daa
fs
sti
xor
bound
mov
adc
cmp
sub
xchg
sub
mov
and
arpl
jo
sbb
cdq
(bad)
leave
xlat
mov
push
inc
sbb
repnz
les
loop
push
mov
push
xchg
cmp
adc
dec
jp
rcr
test
bound
fs
(bad)
or
pop
mov
cmp
stos
push
mov
retf
ror
mov
sub
xchg
js
and
mov
push
add
sbb
out
ficom
cmp
sahf
inc
fbld
psubd
imul
ret
adc
(bad)
and
cwde
and
pusha
mov
out
icebp
or
retf
or
xlat
inc
dec
imul
retf
sbb
sbb
in
sub
mov
add
pushf
xchg
jge
xlat
inc
lock
fisubr
out
aam
(bad)
fist
aas
mov
in
pop
xchg
xchg
mov
xchg
adc
add
bnd
ficomp
hlt
cmp
clc
and
jno
pop
imul
imul
or
and
or
mov
aas
or
out
retf
jmp
or
inc
test
dec
shl
lods
and
xchg
and
xor
out
icebp
dec
retf
xor
ret
iret
neg
cmp
call
pop
je
(bad)
jl
xchg
out
xchg
fldenv
dec
stc
jmp
out
jne
in
add
inc
jge
call
pop
fnstenv
out
mov
rol
jge
into
lahf
pop
pop
addr16
adc
push
retf
shl
push
out
test
mov
and
ja
push
(bad)
xor
test
test
scas
inc
cdq
push
push
jmp
popa
lahf
ja
lods
add
pop
dec
out
jmp
mov
mov
add
out
push
adc
push
fucomp
jne
jg
pop
add
push
push
or
inc
sbb
adc
mov
(bad)
xor
clc
push
pusha
movs
mov
stos
and
ja
mov
pop
xor
jno
fmul
xchg
cmc
aad
fs
pusha
sub
fistp
and
pop
and
in
outs
loope
mov
lods
adc
jb
imul
pop
xchg
int
push
repz
jmp
adc
jmp
jp
xor
pop
adc
xor
pop
cmp
or
imul
dec
cld
jb
jecxz
(bad)
push
add
fmul
inc
movs
sbb
out
mov
pop
inc
inc
and
push
jecxz
popa
jle
or
jl
icebp
push
and
xchg
or
fst
jmp
fsubr
or
mov
sub
stos
into
test
mov
push
mov
das
int
mov
cmp
pop
sub
jg
add
mov
shr
out
arpl
xor
(bad)
ret
add
sbb
mov
fs
aas
mov
push
jmp
and
dec
mov
mov
pop
xor
out
jae
mov
xchg
cld
int
cdq
lahf
(bad)
ins
jmp
inc
adc
mov
mov
in
cmp
in
jbe
cmp
stos
js
arpl
sbb
in
xchg
adc
enter
lods
outs
adc
iret
sub
push
ja
(bad)
pop
imul
inc
push
push
aaa
js
add
fisubr
mov
dec
jb
mov
fiadd
add
(bad)
outs
sbb
cli
lea
(bad)
cwde
mov
cmp
shl
xchg
mov
xor
and
cmp
cmp
lahf
out
addr16
das
mov
xor
ss
pusha
in
and
outs
mov
jg
jle
imul
pop
pop
in
adc
stc
clc
inc
push
sub
sar
and
aad
(bad)
popf
inc
hlt
imul
pop
inc
popa
aad
arpl
lock
pop
sbb
pop
add
sub
iret
sub
int3
xor
inc
adc
mov
mov
mov
push
inc
xchg
xchg
sbb
std
fdiv
mov
(bad)
xlat
dec
cmp
add
das
jge
pop
outs
mov
loopne
repnz
jno
movs
in
test
pop
in
adc
bound
or
and
cld
repnz
aaa
sar
cld
xor
retf
jno
lahf
jmp
inc
inc
pusha
adc
jb
enter
pop
(bad)
fcmovne
aam
cld
inc
fs
adc
add
xlat
mov
scas
loope
test
pusha
xchg
xchg
shl
in
fs
mov
or
inc
lods
pop
mov
push
in
shl
pop
sti
jmp
jmp
es
push
xchg
cmp
push
add
mov
mov
fdivr
daa
jns
inc
add
nop
je
jbe
push
retf
(bad)
test
dec
add
int
inc
dec
(bad)
imul
push
mov
xchg
aam
jmp
adc
jbe
arpl
push
sub
xor
adc
jns
test
ret
mov
repnz
rcl
push
aaa
rcr
cmp
js
jbe
cmp
xchg
mov
jbe
retf
xor
push
pop
or
mov
push
retf
fabs
and
and
jb
sar
push
daa
add
popf
add
cmp
mov
xlat
repz
mov
sub
push
sbb
mov
xchg
mov
push
out
xor
ficom
test
dec
xlat
jg
xchg
jp
pusha
inc
cmc
(bad)
daa
out
adc
mov
mov
push
imul
adc
mov
leave
jbe
cmp
dec
mov
xchg
push
ja
mov
xchg
cmp
stos
lahf
or
fbld
mov
xor
out
xchg
pop
sub
pop
xchg
iret
mov
hlt
push
test
mov
shl
out
and
movs
inc
scas
dec
add
or
add
push
idiv
fstp
aam
dec
fadd
xchg
(bad)
inc
mov
inc
aad
test
pop
sub
cmp
mov
test
outs
in
fbld
jo
cwde
std
pushf
mov
mov
pop
stos
sbb
fwait
ret
push
cmp
xchg
or
xchg
mov
mov
aaa
push
xor
inc
rcr
add
cmps
adc
(bad)
out
ja
xor
push
stos
fnsave
test
fdivr
mov
int
add
mov
mov
out
arpl
push
jmp
fcmovb
loop
inc
cdq
mov
mov
and
inc
jnp
mov
je
lahf
push
stos
mov
cmps
mov
popa
rol
xor
xor
cmp
aas
sti
cmc
(bad)
sbb
cmps
push
lods
daa
sbb
mov
and
lock
xlat
int3
iret
cmp
cwde
std
inc
jmp
mov
outs
mov
pop
mov
cli
xor
retf
push
ret
and
or
mov
xor
sar
sub
cmp
mov
dec
fldenv
(bad)
div
enter
dec
repz
inc
ins
arpl
xor
pop
pusha
mov
arpl
(bad)
cmps
cmps
outs
pushf
retf
and
leave
dec
sub
call
xchg
sub
js
fadd
jae
cli
jge
out
shr
xchg
cmp
or
cmovp
mov
(bad)
jl
movs
add
inc
pop
mov
rol
pop
sbb
inc
dec
repz
rcr
pop
call
adc
addr16
cmp
and
push
mov
add
dec
and
inc
and
jge
int
jmp
cmps
add
mov
pop
iret
mov
inc
push
jmp
aam
daa
pop
loope
call
cdq
stc
icebp
and
mov
fisub
xchg
cmp
adc
sti
shr
cmps
cmps
sub
xor
fmul
ss
aas
xchg
mov
aam
nop
xor
(bad)
fcmovu
pop
inc
and
std
test
sub
imul
and
inc
fcmovnb
icebp
out
imul
dec
sti
pop
dec
call
and
(bad)
iret
test
movs
(bad)
pushaw
gs
fistp
jns
and
fmul
cmp
mov
imul
and
(bad)
not
rep
adc
xor
shl
sub
xchg
mov
inc
and
inc
nop
sbb
jmp
xor
pop
mov
add
pop
repz
mov
mov
ror
dec
hlt
lods
test
out
mov
outs
mov
xor
loop
loope
lock
fst
fdivr
fwait
pop
sbb
xchg
rol
mov
inc
call
sbb
ja
les
cmps
jno
movs
mov
xor
nop
test
div
lods
gs
sahf
fwait
xor
sub
and
rol
dec
push
pop
sub
cdq
or
and
inc
mov
mov
ror
cmp
bound
aam
or
and
jl
leave
aas
out
mov
xchg
lods
stos
add
jne
sbb
rcl
dec
idiv
loop
xchg
jbe
adc
xor
push
lea
test
aad
push
out
aas
mov
push
and
adc
jo
loope
pop
pop
test
call
out
int3
gs
mov
jmp
(bad)
jne
mov
repz
mul
add
jae
sub
push
cmp
xchg
jp
or
dec
call
pop
in
retf
iret
fnstsw
sub
pop
adc
mov
ds
pop
inc
push
movs
shr
dec
cmp
push
ja
gs
push
dec
mov
xchg
cwde
and
jbe
ins
adc
scas
fcomp
into
adc
inc
daa
mov
add
int3
loop
imul
sub
es
aaa
mov
jae
fwait
std
mov
push
imul
mov
(bad)
or
fs
jbe
and
push
mov
out
and
loopne
ret
inc
test
dec
mov
mov
pusha
cmp
sub
mov
push
and
lods
or
imul
cli
mov
ret
mov
xchg
test
xchg
icebp
mov
bound
pop
jbe
ret
fs
xor
bound
out
xchg
call
inc
adc
int
dec
in
in
inc
jl
push
push
xchg
mov
test
loope
call
pop
push
fldenv
adc
ds
mov
les
es
cmps
push
cwde
and
icebp
sbb
mov
outs
mov
test
(bad)
mov
dec
pop
adc
adc
(bad)
aaa
data16
nop
gs
jmp
add
sbb
pop
or
int3
and
into
(bad)
xor
push
mov
retf
jle
mov
pushf
jecxz
inc
mov
or
and
xchg
dec
(bad)
adc
dec
out
jbe
neg
fsubr
cld
dec
ficom
mov
xor
les
fbld
sar
mov
inc
xchg
fist
mov
sub
addr16
and
int3
andps
pop
popf
sub
mov
cmps
std
pop
adc
loop
cmps
mov
sbb
(bad)
push
dec
retf
sti
loope
nop
fimul
loop
loopne
and
arpl
sbb
jo
and
xor
ja
scas
aam
mov
test
mov
call
loopne
or
stc
call
stc
push
xor
add
(bad)
add
cli
add
mov
(bad)
in
pop
or
mov
dec
fiadd
mov
sub
(bad)
cmp
iret
test
leave
pushf
test
sbb
mov
xchg
sub
mov
or
jg
xor
(bad)
shr
iret
mov
or
js
jmp
ret
stos
nop
xor
(bad)
push
ss
aad
out
mov
in
jg
mov
mov
sbb
(bad)
rcr
movs
lods
test
mov
cmp
fsubp
adc
hlt
mov
jns
adc
sahf
mov
jno
jl
mov
push
xchg
in
in
jne
js
(bad)
retf
or
ret
mov
inc
sar
or
out
xor
sbb
mov
inc
add
cmps
call
lock
lods
push
fcmovb
ds
sbb
push
xchg
jmp
std
hlt
xor
nop
retf
push
leave
icebp
std
stos
out
enter
cmps
ret
xor
add
sub
ds
mov
dec
mov
retf
dec
jmp
loop
push
mov
sub
mul
xchg
xchg
sub
repnz
mov
gs
pop
out
xor
cmps
lea
movs
div
jl
pushf
ret
(bad)
hlt
mov
xchg
out
leave
cwde
mov
mov
push
push
jecxz
sbb
mov
out
adc
mov
jb
sub
jo
inc
aas
iret
retf
sbb
xchg
fldenv
rcr
sub
pop
hlt
push
call
mov
jp
gs
call
xchg
sbb
xchg
outs
push
push
jmp
add
mov
sbb
dec
lea
addr16
or
jmp
push
retf
and
and
aas
stc
mov
fild
clc
or
adc
pop
ja
stc
cdq
mov
inc
mov
add
adc
fst
mov
icebp
or
loope
rol
test
(bad)
cmps
xchg
jns
ja
jmp
jge
pop
mov
or
xor
call
jo
pop
loop
stc
xor
popa
cmp
aas
sub
(bad)
in
cmp
or
xor
retf
retf
dec
inc
and
aad
fbstp
cwde
fsubr
inc
jecxz
xor
loop
jne
faddp
jmp
test
and
repz
scas
int3
not
sub
jne
push
xchg
jae
push
ja
dec
clc
jns
rcl
and
jmp
sbb
das
arpl
addr16
int3
mov
pop
lock
test
in
(bad)
xchg
into
xor
jnp
out
cmp
pop
sub
push
mov
jp
pop
sti
subps
jl
sbb
loope
mov
ja
mov
and
xchg
loope
in
div
xchg
push
mov
fild
xchg
imul
pushf
xchg
loopne
ficomp
(bad)
jns
or
imul
nop
push
and
mov
sar
push
pop
fimul
jl
cmps
xor
inc
jge
sbb
hlt
imul
out
jae
inc
les
and
jmp
xchg
out
(bad)
std
mov
in
inc
movs
push
and
inc
inc
jmp
inc
into
outs
aam
mov
jae
test
cmp
cwde
push
pop
in
inc
mov
dec
cmpxchg
neg
or
int
div
in
fidiv
call
ins
sbb
inc
sub
ins
inc
jo
movs
vpandn
mov
test
mov
popa
adc
mov
scas
lock
mov
jo
mov
adc
repnz
pushf
cli
dec
jns
cmps
cs
jns
and
gs
ins
jmp
push
std
ins
mov
push
cmp
pop
hlt
ins
pop
push
jmp
inc
enter
arpl
xchg
mov
cmp
mov
call
fist
enter
add
test
jb
push
fsub
adc
or
idiv
bound
adc
fnsave
(bad)
xchg
cwde
(bad)
cmp
daa
std
xchg
loope
push
imul
pop
mov
nop
mov
test
cmp
and
adc
pop
hlt
jmp
push
xchg
gs
jmp
xlat
xor
fsubr
addr16
jecxz
sub
cmp
or
fucom
call
jns
test
je
bound
sub
icebp
push
nop
or
cmp
push
lods
jmp
fstp
push
neg
stos
popf
test
scas
push
sbb
mov
loop
ins
in
or
or
jle
pop
and
(bad)
mov
sbb
or
add
jge
(bad)
mov
fdiv
add
das
clc
jb
dec
add
mov
or
sbb
mov
inc
add
and
mov
dec
(bad)
cmp
inc
sahf
jp
jno
adc
sbb
loopne
and
popf
ds
or
push
cmps
add
mov
add
and
xlat
not
xor
mov
stc
test
mov
push
sbb
jnp
call
jno
retf
movs
mov
ret
xchg
mov
cwde
sbb
xchg
mul
pop
mov
repnz
je
cmp
mov
dec
std
adc
sbb
lods
ins
mov
push
and
mov
sub
adc
mov
and
xchg
pop
and
add
sar
mov
repz
shl
push
retf
int3
pop
aad
out
cdq
aaa
cmp
in
cmps
jge
outs
xchg
sbb
out
pop
movs
pop
jecxz
cld
xor
in
add
in
mov
xor
sub
adc
jae
push
stc
push
jle
mov
cmp
dec
jmp
mov
dec
(bad)
sbb
ds
out
je
adc
jmp
inc
test
sub
lea
out
xor
mov
je
pop
mov
cmp
movs
sub
stc
adc
dec
sub
pushf
(bad)
sub
das
or
int3
mov
xchg
push
pop
and
clc
popf
(bad)
mov
xchg
jns
push
sbb
jbe
ins
mov
lahf
ret
imul
mov
or
nop
mov
xchg
ins
lea
push
mov
lods
dec
lds
cmps
cs
icebp
mov
pop
icebp
dec
popa
dec
sbb
mov
int
dec
mov
(bad)
imul
call
mov
xchg
test
add
cmps
pop
(bad)
push
sbb
fs
fisttp
push
aas
outs
cmp
push
pop
jle
popf
gs
and
adc
mov
data16
jmp
ret
mov
xlat
xor
mov
popa
mov
mov
ja
test
xchg
xor
xchg
sbb
dec
xchg
cs
pop
(bad)
mov
cmp
rcr
mov
dec
xor
aad
iret
dec
movs
pop
retf
cs
out
sub
jb
pop
pop
xor
xor
mov
jo
dec
lods
mov
mov
sahf
les
dec
lods
and
ds
add
mov
mov
retf
das
cmp
pop
mov
and
lock
push
mov
push
mov
sub
(bad)
stos
pop
cwde
in
jg
fidivr
lds
(bad)
std
lods
test
ja
kmovw
push
retf
cmps
(bad)
cdq
dec
xchg
mov
pop
out
fsub
pop
mov
(bad)
pop
call
in
add
mov
mov
bound
adc
pop
aaa
out
and
jb
jo
jmp
add
sbb
dec
add
(bad)
sar
ja
clc
retf
and
fcom
jb
iret
add
inc
loopne
mov
inc
shl
adc
xor
jg
mov
inc
data16
int
mov
pop
or
cmc
pop
xchg
adc
xor
ins
cwde
retf
mov
retf
clc
aad
push
movs
test
cwde
add
test
push
and
mov
or
xchg
or
psrlq
in
sbb
out
add
(bad)
loopne
lahf
mov
pop
sub
mov
mov
pop
outs
cmps
xchg
jl
arpl
jmp
scas
sti
mov
adc
xchg
push
inc
out
pop
imul
jo
adc
mov
shr
jne
stos
das
sti
ss
xlat
clc
clc
push
movs
add
mov
test
mov
int
mov
mov
lods
xchg
fistp
or
in
and
mov
sar
vmovdqa
push
jo
out
loop
mov
loop
or
inc
dec
mov
add
shl
mov
push
iret
fisttp
stos
xor
sahf
add
xor
xchg
imul
js
scas
pop
mov
pop
mov
adc
sub
mov
test
mov
xor
pop
aad
add
hlt
push
add
xchg
lds
movs
sub
xchg
mov
aad
sbb
adc
and
aad
and
add
sti
fwait
push
fld
in
and
mov
out
stc
mov
mov
popf
lock
test
retf
repz
rcl
and
mov
jmp
jae
pop
inc
inc
mov
sbb
cmp
call
mov
push
mov
mov
outs
cmp
jmp
xor
sub
xor
add
add
popf
int
and
ss
mov
sbb
in
test
dec
push
hlt
(bad)
jmp
imul
xor
js
and
xor
push
push
add
movs
jo
jge
inc
mov
and
jmp
mov
lods
xchg
cld
dec
push
xor
xor
push
scas
push
out
mov
shl
movs
and
leave
mov
lock
sti
repnz
push
(bad)
pop
pop
daa
cdq
fwait
fs
mov
sub
ret
arpl
pop
fsubr
sub
stc
shl
sbb
call
mov
and
mov
enter
cmp
mov
test
dec
jmp
xchg
mov
sbb
sbb
pop
repz
stc
div
sbb
sar
inc
dec
mov
pop
(bad)
jb
inc
sahf
repz
jnp
aaa
mov
neg
pusha
adc
jo
and
cwde
mov
(bad)
aaa
int
xchg
pusha
or
fisub
mov
xor
inc
mov
das
pop
dec
cmovno
enter
sub
mov
dec
sbb
xchg
and
daa
and
lock
fimul
cmp
inc
sub
adc
pop
pop
xchg
les
retf
xchg
loope
push
add
or
out
mov
push
mov
pusha
lea
gs
test
xchg
arpl
adc
inc
inc
div
mov
in
fs
push
call
inc
ins
out
pop
add
jmp
mov
pop
in
mov
sub
xor
xor
stos
xchg
inc
jbe
dec
add
mov
out
mov
popa
dec
inc
push
jl
add
xchg
inc
push
fsub
clc
das
lock
or
ja
cmp
fstp
in
and
aam
mov
(bad)
rcr
mov
fwait
mov
data16
mov
or
test
lds
in
sub
repz
sub
repz
xor
ins
xor
cli
(bad)
dec
mov
in
push
cmc
push
cdq
scas
sti
fwait
xor
push
add
test
dec
xchg
xchg
ins
movs
(bad)
push
adc
aad
sti
loope
jo
fwait
push
enter
loope
repz
sbb
and
jb
mov
fisttp
sahf
daa
ror
stos
push
lahf
cs
in
cmp
sbb
jge
in
dec
repnz
add
inc
mov
or
adc
les
mov
cs
cs
dec
gs
xchg
(bad)
mov
lahf
mov
aas
sbb
cmp
aas
cmp
or
push
lea
push
jg
rol
xor
mov
stos
movs
data16
in
in
out
and
mov
xchg
mov
icebp
ds
jns
inc
out
dec
in
jnp
pop
sti
or
ins
shl
mov
lahf
dec
xchg
(bad)
in
sbb
lahf
(bad)
ss
loope
adc
add
xchg
sbb
mov
inc
jno
xor
shl
rcr
je
pop
cmc
sbb
pop
mov
jb
scas
and
mov
int
gs
ror
mov
movs
shl
push
jp
clc
(bad)
jmp
stc
jecxz
loopne
cmps
cld
outs
cmp
call
fdiv
mov
aad
pop
and
dec
xchg
cmp
in
mov
fisttp
dec
call
xchg
mul
mov
(bad)
imul
mov
and
ror
shr
mov
cmp
fdivrp
mov
sub
or
add
cmp
sub
in
pop
push
fnsave
leave
shr
lds
pop
push
in
inc
xor
inc
mov
cmp
add
scas
fimul
stos
sbb
mov
xor
inc
xchg
bound
sub
aaa
xchg
lea
std
jecxz
iret
pop
ins
je
test
cmp
in
ins
sub
lock
sub
lods
inc
xchg
push
aas
mov
or
jle
leave
int3
and
test
dec
pop
mov
push
clc
mov
mov
or
inc
mov
cmp
cdq
dec
imul
stc
aad
and
fldcw
jns
in
pop
lahf
retf
mov
push
mov
cmc
xchg
jbe
js
ret
mov
push
or
xor
test
push
in
jg
xchg
dec
scas
rcl
jae
out
shr
push
aaa
xor
ds
push
hlt
in
jae
call
jo
sub
push
fisttp
cmp
and
mov
movs
shl
mov
adc
jae
adc
test
and
cwde
nop
out
xchg
push
add
in
ret
pop
inc
(bad)
cmps
mov
adc
fs
pop
adc
push
in
into
ror
std
add
ja
xchg
cmc
add
jle
and
adc
sbb
dec
cs
xchg
jmp
sti
test
add
scas
out
loope
(bad)
lea
sbb
push
sub
pop
int3
addr16
daa
arpl
mov
in
mov
push
pop
sbb
fistp
sbb
and
xchg
and
mov
xlat
and
and
adc
xchg
idiv
inc
add
push
adc
jge
test
or
add
out
push
sbb
mov
mov
jae
cmp
jl
dec
retf
push
cmp
and
adc
outs
xor
mov
shl
adc
sbb
mov
ret
mov
fwait
lods
cmp
rol
mov
dec
xor
mov
jmp
pop
xor
pop
sar
mul
jo
jae
cdq
pop
pop
adc
nop
arpl
fsubr
repz
mul
int3
push
pop
mov
pushf
lgs
xor
jle
(bad)
sbb
or
leave
imul
mov
popa
push
cmps
dec
pop
call
ud2
cld
pop
test
hlt
xchg
push
movs
pusha
imul
lock
cmp
push
jmp
jmp
xchg
hlt
test
and
sti
pop
xchg
movzx
gs
lods
sbb
shr
sub
fisttp
xchg
test
mov
ror
xor
pop
imul
push
sbb
rcl
cmps
cmp
nop
pushf
push
dec
add
add
or
adc
sub
mov
inc
push
movs
outs
dec
movs
popa
jmp
mov
inc
pop
data16
cmp
push
xchg
mov
in
loopne
sbb
pop
cmp
ror
pop
sbb
xor
aas
int3
pop
loopne
push
sbb
icebp
cdq
pop
rcl
div
es
xchg
cmps
(bad)
jo
jbe
dec
(bad)
or
push
xor
dec
jbe
xchg
cmc
mov
sub
fiadd
rol
(bad)
jge
mov
jle
pop
xchg
enter
rcr
(bad)
sub
cmp
mov
mov
inc
std
xchg
xor
xchg
jecxz
mov
fwait
xchg
xchg
xor
mov
mov
fldcw
xchg
pop
dec
dec
jmp
cmc
pop
bound
call
jp
pop
adc
xchg
pop
adc
cmp
and
jge
mov
mov
pop
add
or
xlat
test
xor
scas
inc
ins
fst
dec
sub
addr16
xchg
jmp
sbb
adc
add
mov
inc
test
pusha
adc
iret
xor
mov
sbb
mov
in
mov
push
fdivr
out
adc
aam
push
and
mov
mov
sbb
add
dec
enter
mov
jns
jno
adc
retf
and
int3
inc
ja
mov
jo
push
xchg
mov
mov
push
lock
imul
fcomp
repz
pop
mov
and
xchg
sub
inc
xor
aam
rcl
sub
cmp
call
daa
lods
das
lahf
xor
cmp
and
out
cdq
cdq
and
adc
test
sbb
adc
psllw
dec
lahf
fldl2e
scas
push
xor
and
and
jne
mov
sub
xor
mov
mov
pushf
rol
movs
loopne
fcmovnb
xchg
and
mov
cmps
(bad)
dec
cmp
mov
mov
xor
cmp
int3
xchg
fistp
lock
add
mov
nop
inc
test
cmp
and
push
rol
ror
ds
stos
pop
inc
dec
sub
dec
and
mov
sahf
push
push
hlt
cmp
inc
sbb
jmp
jg
(bad)
arpl
push
inc
(bad)
cmp
pop
loope
push
jbe
inc
lods
xchg
jmp
xchg
shld
pop
jb
cmp
or
in
cdq
aas
mov
xor
cli
cdq
outs
pop
sahf
jb
jle
dec
in
in
mov
fs
daa
retf
dec
pop
xchg
mov
imul
std
adc
out
add
pop
cdq
xchg
dec
aad
pop
outs
into
ins
(bad)
adc
cmp
ds
pop
into
add
mov
loop
jne
int3
imul
loop
fwait
jno
(bad)
jmp
jbe
mov
fnsave
loop
add
add
cmc
(bad)
or
daa
retf
cmps
(bad)
cs
xor
xor
and
jge
retfw
and
neg
dec
inc
and
xor
jmp
fist
sbb
xor
xor
ins
sahf
lds
pop
jmp
adc
enter
mov
sub
add
mov
(bad)
call
popa
adc
fnsave
outs
mov
xchg
out
jecxz
stos
cs
fsubr
pop
cmc
ins
ins
ucomiss
call
sub
jbe
push
std
pop
cmp
(bad)
dec
ja
sbb
xor
mov
and
jp
clc
adc
and
pop
mov
cmp
sub
and
dec
mov
cmps
ins
test
movs
lods
push
pusha
inc
fist
loopne
fcomip
mov
mov
mov
jae
and
mov
and
cmp
dec
call
jl
mov
ins
es
(bad)
sti
and
daa
pop
mov
cmp
test
pop
je
jle
aas
push
(bad)
jmp
mov
adc
cmp
xor
mov
pop
mov
add
cld
xchg
or
sub
pop
out
push
or
push
call
pop
aam
stos
push
clc
dec
adc
pop
inc
mov
cdq
adc
jmp
and
mov
add
movs
push
sbb
xchg
jno
std
sbb
dec
mov
scas
add
shl
sub
and
mov
popa
and
push
rol
sbb
pmaxub
or
vpsubq
shl
imul
push
mov
adc
inc
addr16
adc
push
stos
aam
out
and
repnz
dec
adc
fwait
js
sbb
scas
retf
add
xchg
in
es
stc
in
sub
cmp
mov
xor
xchg
lock
mov
mov
enter
js
mov
lea
cmps
and
lods
scas
sub
add
shl
js
sahf
add
add
or
stc
ret
and
mov
sub
adc
cli
adc
sbb
scas
fdiv
imul
jl
call
and
push
cmc
in
aam
jne
iret
out
mov
gs
neg
(bad)
(bad)
push
ss
fisttp
les
pop
mov
int3
lods
push
push
dec
ss
out
sub
sti
mov
aad
test
cmp
push
and
outs
push
cwde
xchg
dec
xor
shl
cmp
mov
pop
hlt
pop
push
pop
xor
xor
das
add
ror
pop
mov
ja
sub
outs
xchg
iret
cmps
sahf
jge
or
cmp
xchg
pop
dec
add
aas
data16
shl
jecxz
or
aad
cmp
dec
ds
rol
or
popa
mov
push
or
add
pop
cmp
out
adc
addr16
jl
fwait
inc
adc
xor
int3
inc
add
neg
jg
int
and
push
sbb
xchg
ret
inc
hlt
in
movs
jbe
addr16
add
xlat
push
aaa
sbb
cmps
and
jns
xor
nop
or
das
inc
jp
xor
movs
dec
stos
retf
add
and
jg
mov
mov
ins
ds
pop
cmp
inc
jg
mov
(bad)
xchg
ins
or
in
jl
xor
jmpw
jo
movs
stos
adc
scas
mov
pop
fistp
push
leave
fidivr
hlt
add
in
push
loopne
cmps
push
mov
js
out
or
out
fcmovne
ret
jle
in
arpl
add
dec
stos
loop
ss
mov
pop
std
out
mov
pop
out
fistp
lahf
addr16
push
fstp
pop
jbe
in
out
sahf
jb
inc
into
(bad)
pop
cdq
ret
repz
xchg
retf
xchg
fistp
dec
dec
jns
or
lea
lahf
jae
fwait
mov
or
jmp
ror
aas
sti
push
ja
pop
mov
lea
xor
jns
jge
aas
add
mov
gs
or
popf
pop
pop
int3
xchg
jl
jae
push
in
and
inc
call
test
push
mov
mov
push
and
jne
pop
adc
push
mov
outs
push
adc
fdivr
jp
mov
dec
inc
(bad)
sub
lds
mov
cli
inc
out
cmps
js
sbb
lea
cmp
shl
cli
test
rcr
jne
mov
and
xor
cmp
or
loope
ficom
push
jo
jmp
cld
repz
xor
fwait
push
pop
dec
dec
aad
loope
push
out
mov
dec
dec
lahf
imul
mov
xlat
sahf
mov
stos
fidiv
jecxz
jae
(bad)
mov
xchg
sbb
mov
aad
lea
cmps
dec
mov
sbb
jg
daa
leave
cmc
push
jno
fldl2e
cmp
ja
in
jnp
xchg
jne
and
push
data16
pop
sbb
outs
inc
adc
push
sbb
cld
add
inc
cs
dec
sbb
cmps
and
test
dec
jb
fmul
mov
out
popa
(bad)
cmovnp
fsubr
scas
jmp
in
lea
fucomip
ret
setae
lods
fwait
and
call
sbb
mov
sbb
cmps
cmps
inc
inc
or
ror
int
ins
daa
lahf
push
mov
jl
add
jae
xor
stc
push
ficomp
cdq
inc
call
mov
aam
test
cmp
jle
mov
dec
fbld
mov
push
sbb
test
inc
or
and
xor
dec
add
popf
sub
pop
jo
cdq
mov
fidiv
je
arpl
outs
mov
push
stos
iret
and
cmc
loope
(bad)
leave
das
and
pop
hlt
and
addr16
pop
sub
add
inc
xchg
cs
xor
sti
mov
adc
xor
sub
loop
inc
dec
cli
stos
xchg
jno
inc
cmc
(bad)
sbb
sub
retf
cmps
jnp
pop
xchg
add
dec
jae
fnstcw
in
jne
fadd
xchg
test
mov
sbb
(bad)
mov
xlat
adc
shl
sub
scas
lds
and
mov
xchg
enter
mov
sub
add
pop
jecxz
jb
cmp
ss
ins
in
repnz
xchg
push
scas
mov
jmp
and
retf
ins
lods
ds
loope
xchg
(bad)
(bad)
jl
lods
xlat
push
push
fld
(bad)
lea
push
adc
retf
mov
ss
add
fld
ja
in
push
int3
jecxz
(bad)
dec
inc
push
ins
leave
fild
pushf
stos
scas
ud1
stos
hlt
mov
test
popa
sbb
pushf
xchg
xchg
in
cs
dec
add
cmps
pop
test
retf
leave
arpl
enter
push
jg
push
ret
iret
sub
aas
leave
push
aam
iret
xchg
pop
rcl
add
pop
inc
cmp
pop
mov
adc
movs
lahf
leave
jno
or
jb
stos
pop
sub
push
cmp
gs
push
push
sbb
sbb
xor
das
test
push
mov
fst
adc
movs
cmps
or
out
ds
test
aaa
cmp
inc
xlat
mov
jo
mov
cmp
ret
test
scas
dec
popa
adc
xor
adc
les
ins
push
fldcw
cmp
repz
add
rcr
dec
jp
jbe
push
pop
and
jnp
mov
xchg
pop
push
les
dec
jne
jns
push
xlat
cmc
(bad)
sti
push
jl
je
dec
jae
fistp
mov
mov
sub
leave
clc
mov
scas
mov
test
(bad)
sub
push
cs
in
xlat
sub
movs
sub
mov
sub
push
pop
xchg
dec
push
stos
xchg
cmps
mov
in
cmp
inc
cmp
push
mov
sub
xor
leave
ds
xchg
es
mov
rol
jecxz
shl
jnp
xor
mov
cld
push
jmp
push
pop
stos
sbb
loop
call
pop
mov
fdivr
movs
mov
or
xchg
mov
idiv
lahf
icebp
cmp
inc
ins
pushf
xchg
cmp
(bad)
movs
cmp
jno
cli
mov
mov
sub
mov
push
push
add
aam
mul
xor
ret
or
or
pop
push
sub
add
sub
push
cli
scas
scas
and
lods
idiv
push
std
or
mov
fcomp
sub
rol
js
retf
mov
pop
inc
push
dec
push
clc
ins
test
inc
bound
dec
jbe
add
and
mov
jae
mov
push
xor
mov
fnstsw
call
and
inc
xor
lods
mov
sbb
dec
xlat
push
stos
sahf
or
sub
or
movs
call
xor
adc
xor
xchg
inc
mov
out
sub
iret
mov
push
dec
pop
mov
arpl
test
rcl
sub
mov
(bad)
out
out
in
out
test
call
push
or
mov
aaa
fsubr
shl
cmp
fwait
imul
and
js
jo
xor
test
add
cwde
mov
mov
ss
cdq
inc
dec
les
js
and
loop
fcmovb
jmp
ja
test
fimul
outs
and
out
push
jb
mov
mov
(bad)
push
js
mov
shl
test
pushf
mov
into
inc
in
popa
bound
xor
add
fimul
adc
and
sbb
(bad)
imul
out
cli
ret
lods
int3
movs
and
add
xor
repnz
push
adc
mov
cli
ret
xchg
pop
mov
cmp
xor
pop
icebp
cmp
jg
rcl
sti
inc
in
(bad)
mov
cmp
ja
jae
loopne
add
pop
inc
xchg
enter
cmps
ret
pop
fs
push
xor
add
pop
mov
xor
jmp
(bad)
jns
inc
pop
shl
mov
ins
daa
ss
mov
sub
loope
mov
push
push
dec
mov
sub
das
mov
js
ror
pushf
push
jbe
int
int3
ins
xor
pusha
mov
popa
and
daa
dec
jmp
dec
xchg
dec
daa
nop
ret
mov
xchg
(bad)
mov
sbb
arpl
fwait
push
jle
movs
inc
pop
(bad)
push
fs
sub
push
leave
mov
push
push
dec
ror
fs
add
and
movs
jmp
push
jno
push
ss
mov
loop
out
data16
and
dec
xchg
or
imul
mov
sub
cmp
mov
xlat
pop
xchg
mov
pop
pop
jge
test
test
aad
sbb
outs
jo
xchg
pop
sbb
lock
cli
jo
repz
push
or
ror
leave
int3
adc
idiv
adc
xor
arpl
jne
jl
sbb
lods
xor
xchg
test
cmp
lods
retf
mov
jbe
push
pop
or
adc
gs
dec
push
jb
xor
xor
cli
sub
outs
cmp
push
sub
sahf
ror
cmp
lea
xchg
jbe
out
or
xchg
adc
or
mov
lods
shl
call
rcr
inc
sar
sbb
jmp
fistp
mov
outs
dec
scas
sub
outs
ficom
pop
mul
sub
nop
dec
xchg
mov
jmp
mov
fcmovnb
or
imul
and
(bad)
lock
jb
adc
push
fdivr
pop
push
clc
aaa
or
retf
aas
loop
pop
call
mov
sub
shl
in
mov
mov
fstp
cmp
xchg
loope
cmp
cmp
imul
and
xrelease
nop
mov
sbb
push
mov
movs
movs
rol
(bad)
jne
pop
retf
repz
jmp
adc
or
add
xchg
xchg
cmp
mov
push
and
add
lock
xchg
push
cmp
std
repz
xor
pop
xor
xchg
pop
(bad)
jne
xchg
out
pop
loop
mov
mul
lea
adc
fs
push
mov
or
inc
add
and
retf
(bad)
mov
cmp
gs
and
or
mov
data16
xor
xor
sub
fs
pop
in
ja
and
pop
sub
out
in
out
mov
out
xchg
inc
lods
sbb
push
push
std
ja
push
inc
pushf
inc
push
mov
mov
rol
xchg
mov
daa
or
sub
sub
xor
xchg
cmp
pop
hlt
add
(bad)
out
sbb
call
mov
fwait
sbb
js
add
test
cld
sahf
lods
test
jne
movs
sar
sbb
pop
jl
cmp
mov
int3
test
(bad)
sub
jo
mov
cmp
in
test
pop
cwde
dec
cmps
adc
imul
stc
shr
sbb
push
test
jne
mov
adc
arpl
dec
je
mov
adc
lods
jmp
stc
lea
push
lods
ret
jge
js
ds
or
dec
and
ficomp
add
es
(bad)
push
and
pop
add
repnz
cli
add
dec
aam
mov
sahf
jnp
sub
pop
adc
mov
sbb
les
push
or
in
mov
add
add
jnp
clc
or
je
add
repnz
pusha
loop
mov
xor
cmc
movs
and
ret
test
mov
dec
pop
add
les
pop
cmc
call
xor
inc
fnstcw
test
sar
fdiv
or
clc
xchg
adc
sbb
lods
movs
outs
leave
movs
sub
cld
push
clc
loop
daa
add
in
fs
jbe
cmps
or
movs
mov
stc
(bad)
jg
add
add
pop
stos
div
push
inc
push
aas
cmps
mov
call
test
inc
xchg
fisttp
xchg
jmp
(bad)
xchg
pop
push
lds
lahf
push
inc
jecxz
push
scas
ins
jp
or
call
add
stos
push
loop
jl
inc
mov
inc
hlt
xchg
cmps
adc
sub
fnstsw
and
or
leave
mov
int3
and
std
aad
jae
std
pop
or
pop
mov
fiadd
xor
hlt
out
xchg
xchg
adc
fcomp
lods
sbb
repz
aad
sbb
mov
mov
sub
repnz
jp
test
(bad)
aas
or
shr
jo
mov
clc
addr16
imul
movs
add
mov
cmp
ins
jmp
jge
cmp
sub
jmp
sar
pop
loopne
in
packsswb
mov
cmp
test
jl
lahf
mov
es
mov
iret
pop
mov
fistp
jo
xchg
jmp
and
lahf
add
xor
mov
dec
pusha
shl
dec
sar
sub
xor
dec
and
ror
pop
div
mov
adc
inc
lds
or
enter
add
xchg
adc
or
mov
jns
sti
cmp
call
inc
push
dec
and
xchg
add
xlat
popa
retf
mov
adc
pop
imul
lds
or
jns
nop
add
test
outs
jge
cld
jne
mov
mov
(bad)
dec
mov
lods
sub
sub
dec
lods
dec
(bad)
rcr
fidivr
retf
js
add
test
pushf
fild
mov
inc
sbb
bnd
jne
mov
jmp
and
jb
adc
lock
mov
mov
add
aas
addr16
jnp
jmp
or
xor
or
sbb
or
or
das
pop
cmp
mov
arpl
scas
lds
pop
xor
jle
push
adc
jno
add
cld
sub
xor
mov
jmp
sub
push
mov
push
sub
mov
loopne
and
cmp
or
inc
sub
mov
mov
or
mov
xacquire
jns
inc
mov
addr16
lods
movs
icebp
adc
test
inc
push
mov
push
lods
je
mov
mov
mov
and
test
rcr
push
mov
daa
jae
adc
xchg
cld
ss
shr
fs
test
aas
xchg
(bad)
je
cmp
adc
mov
imul
(bad)
xchg
mov
(bad)
push
cld
loopne
sub
add
mov
jb
out
push
in
push
nop
int
les
push
sar
dec
scas
pushf
jl
lods
(bad)
sbb
xor
cmp
push
add
inc
arpl
aas
(bad)
test
sub
push
push
push
pop
mov
xor
hlt
and
movs
push
(bad)
sub
retf
dec
loope
les
fcmovne
je
int3
and
push
pop
fwait
movs
jg
jmp
sub
pop
xor
jno
int3
xor
mov
ror
push
(bad)
mov
movs
les
xor
inc
(bad)
cmp
in
mov
xlat
dec
sub
pop
xchg
(bad)
sar
mov
pop
add
daa
int
cli
dec
or
mov
xchg
mov
inc
sub
xor
jbe
fs
mov
fdivr
jp
movs
and
mov
call
hlt
das
dec
mov
adc
dec
dec
dec
pop
jbe
clc
stos
bound
out
push
ins
push
jb
mov
cmp
cmp
cmp
inc
out
xchg
mov
in
(bad)
cmp
xchg
inc
in
dec
xchg
push
out
push
leave
xchg
jl
bound
jnp
(bad)
retf
ret
cdq
bound
add
mov
adc
or
jmp
or
outs
loope
ja
xchg
arpl
out
sub
dec
add
(bad)
mov
add
inc
dec
inc
(bad)
push
cmp
mov
into
pop
mov
mov
mov
enter
outs
sbb
or
fs
fimul
xchg
inc
sub
pop
jbe
call
sub
pop
fist
outs
ror
dec
std
xchg
fcmovb
fld
sub
pop
out
cmp
ins
dec
xor
and
repz
push
push
mov
sbb
xchg
cmp
js
ret
pop
adc
ror
lods
stos
loopne
bound
push
xor
mov
mov
mov
xchg
sub
sub
arpl
cmps
dec
pop
push
jae
test
outs
retf
mov
push
jg
(bad)
pop
adc
jl
cs
(bad)
hlt
retf
push
jbe
xchg
loope
sub
aaa
push
(bad)
sbb
pop
popf
pop
adc
push
mov
pop
sub
add
jmp
or
mov
out
add
out
and
lock
in
cld
dec
add
hlt
xchg
xchg
loop
jp
mov
popa
into
stos
cmp
pop
into
aam
loopne
ins
lock
mov
hlt
out
into
call
popf
ins
loope
pushf
out
mov
sbb
outs
xchg
fisubr
sbb
xchg
stos
inc
lock
loop
mov
pop
in
inc
pushf
or
retf
adc
mov
call
sbb
pop
icebp
arpl
aam
adc
sahf
aam
or
push
cli
inc
std
stos
xor
rcl
jmp
(bad)
jno
shl
movs
outs
les
stc
mov
inc
inc
sbb
or
outs
xor
inc
movs
cmp
xor
icebp
int3
push
cmp
push
jo
aam
hlt
hlt
xchg
sub
inc
pop
mov
adc
loopne
call
jae
daa
dec
pop
rcl
xchg
into
movs
scas
mov
jno
addr16
clc
jae
in
xchg
in
rol
imul
mov
popf
hlt
pop
pcmpeqw
push
mov
dec
fs
rol
jne
outs
push
mov
icebp
pusha
jne
ror
cmp
movs
sbb
cli
mov
push
or
rcr
jle
sub
xchg
sub
pop
mov
xchg
fcomp
or
xchg
outs
ror
push
adc
pop
mov
add
test
push
scas
test
ret
call
out
js
stc
xor
retf
mov
push
std
pop
xor
xor
jecxz
sub
or
and
test
dec
not
add
imul
push
jne
push
sub
xchg
cs
mov
out
bound
das
jmp
das
sbb
xchg
les
pop
sub
aas
push
iret
pop
cmp
rcl
addr16
out
pop
int3
neg
xor
ins
push
imul
mov
enter
cmp
aam
aas
cld
jmp
test
daa
mul
sbb
mov
lahf
fwait
dec
add
arpl
loope
call
add
xchg
data16
fisubr
mov
xor
pushf
les
mov
jae
jns
dec
mov
jge
repz
and
push
in
sbb
jne
sub
jne
outs
mov
sub
sbb
xchg
jle
pop
fs
sbb
jmp
sub
dec
test
retf
pop
add
imul
or
sbb
adc
dec
lahf
jle
cdq
dec
dec
mov
mov
add
lods
jmp
add
pop
cmp
mov
jg
add
icebp
xchg
ror
in
xchg
daa
cmp
clc
xchg
scas
ret
stos
xor
in
sbb
push
xchg
ins
pop
out
xor
je
lods
shr
dec
popf
push
mov
es
add
xchg
or
iret
aas
xor
sbb
out
fdivr
dec
pop
pop
bound
rcr
inc
test
pop
sbb
mov
retf
or
mov
stos
xchg
ja
jg
in
call
mov
push
mov
pop
push
scas
push
xchg
movs
or
pusha
ret
jmp
jns
jbe
cld
pushf
inc
cdq
shl
adc
fadd
in
inc
mov
arpl
mov
sbb
fst
out
pop
jbe
(bad)
inc
leave
inc
mov
imul
pop
neg
sbb
nop
jp
pop
mov
add
add
aaa
mov
fst
aam
dec
xchg
in
imul
jnp
sbb
icebp
adc
jne
mov
mov
cmps
ret
enter
xchg
and
push
xor
outs
inc
dec
mov
jne
retf
lods
je
nop
push
call
mov
xor
sub
lea
or
inc
movs
push
hlt
not
mov
call
fisttp
xchg
ss
mov
jno
xor
dec
or
pop
addr16
mov
or
sub
ror
fistp
mov
push
mov
(bad)
push
sbb
stos
mov
test
das
ret
inc
fiadd
ror
aad
push
and
mov
in
push
cmp
ins
aaa
xor
or
mov
mov
adc
cmp
add
cld
sub
push
push
mov
jge
in
arpl
dec
jmp
(bad)
add
fcomp
or
(bad)
(bad)
mov
repnz
mov
jg
mov
pop
cdq
(bad)
mul
ja
out
stos
out
movs
xor
loopne
mov
mov
mov
fucomi
retf
mov
cmp
cmp
add
xor
push
rcr
loope
pop
stos
push
lods
mov
movs
add
or
lahf
or
in
xor
mov
push
ins
push
call
adc
push
push
aas
sbb
jo
clc
or
fs
mov
push
mov
ss
pushf
loop
into
or
inc
js
mov
jmp
lds
popa
outs
data16
ins
imul
mov
push
imul
fild
xor
daa
(bad)
dec
and
out
dec
arpl
jns
push
(bad)
hlt
mov
jmp
clc
stos
xchg
ins
inc
sbb
fbld
js
out
xchg
sahf
mov
push
add
xchg
push
sub
jl
push
push
xor
and
push
dec
xchg
cmps
out
(bad)
pop
popf
pop
mov
push
push
add
mov
les
es
add
adc
inc
lods
jmp
cmp
mul
inc
daa
scas
jbe
push
jns
dec
arpl
scas
test
xchg
sub
inc
cmp
aam
test
fistp
xchg
adc
and
(bad)
jmp
js
repnz
repnz
in
ins
ins
push
ds
jb
mov
dec
adc
pop
outs
call
stos
int3
xor
mov
retf
ret
adc
(bad)
mov
inc
jp
stos
(bad)
repz
dec
shr
jb
imul
es
dec
fadd
inc
jle
scas
pop
jle
mov
adc
clc
(bad)
div
push
fwait
es
sub
cld
pop
pop
mov
mov
jmp
(bad)
or
sub
jmp
inc
cdq
sub
and
adc
and
xor
mov
pop
sub
push
outs
ficomp
push
push
and
sub
fld
xchg
int3
xchg
mov
lock
push
push
mov
mov
xlat
addr16
mov
jecxz
(bad)
cmp
mov
pop
inc
jb
fs
shr
mov
sbb
mov
ret
adc
sbb
inc
aas
rcl
dec
cwde
fidiv
or
sete
inc
out
jb
sub
dec
lahf
jg
push
fucomp
dec
jmp
and
hlt
(bad)
pop
sti
pop
pop
add
gs
push
sbb
sbb
pop
and
and
in
mov
das
ja
sub
xchg
call
int3
test
sbb
outs
das
daa
icebp
dec
loope
cmps
and
ret
pusha
in
mov
out
jnp
adc
push
mov
sahf
xchg
pop
clc
sbb
jmp
xchg
in
and
inc
cdq
cmp
aad
jno
sub
ds
lds
fwait
pusha
add
jecxz
mov
push
and
dec
popf
mov
xchg
sbb
loopne
xor
cld
pop
das
sub
and
inc
popf
sbb
pusha
nop
sbb
jg
adc
sbb
fistp
fwait
inc
scas
mov
mov
or
nop
test
(bad)
cmp
mov
leave
shr
inc
inc
jbe
jle
add
mov
mov
shl
test
or
nop
(bad)
dec
movs
and
adc
pop
sahf
out
pop
mov
leave
jmp
ret
cmps
xchg
mov
xchg
xchg
mov
add
jge
nop
push
sbb
push
xchg
mov
cmp
pop
mov
xlat
popa
xor
sub
(bad)
in
lods
imul
popf
sti
pop
add
push
mov
cmp
or
lods
mov
push
sti
xchg
pop
out
fild
cmc
ja
xor
push
add
xor
mov
(bad)
das
pop
jle
call
loope
push
sti
arpl
cmp
or
adc
in
or
adc
retf
ud1
stos
mov
movs
fmul
out
cli
arpl
(bad)
dec
inc
xchg
cwde
nop
arpl
jmp
leave
or
(bad)
ret
imul
add
js
mov
or
push
push
sti
fcmovbe
mov
mov
push
out
repnz
stos
add
or
ins
gs
adc
cmps
sbb
jb
mov
sub
dec
mov
ror
ins
daa
jle
(bad)
push
loopne
rol
add
adc
call
jne
ret
xor
and
xor
adc
adc
mov
mov
ffreep
push
and
inc
rep
pop
(bad)
cwde
mov
add
sub
inc
jmp
jbe
sub
add
push
xchg
jns
add
adc
pop
and
cmp
push
dec
fcom
(bad)
aad
imul
pop
mov
imul
jmp
or
rol
mov
jge
cmps
popa
and
add
fnstcw
out
sub
scas
test
ins
dec
fcom
test
cmp
int
xor
enter
mov
push
jns
fst
pop
cmp
mov
jle
ret
dec
icebp
dec
inc
mov
xor
sub
fs
pop
xchg
push
and
sub
sahf
add
fs
(bad)
mov
loop
scas
dec
cmp
ss
push
bound
cmp
retf
(bad)
jb
cmc
xor
push
pop
int
div
xor
xor
sahf
fisubr
retf
mov
or
mov
adc
xor
mov
js
pop
arpl
loopne
xchg
mov
dec
pop
int3
xchg
jl
xchg
test
fld
loopne
les
xchg
cld
in
loopne
inc
and
push
ins
faddp
fisttp
add
adc
pop
jns
adc
mov
xor
cmp
mov
scas
inc
shl
xchg
push
push
lahf
pop
xchg
or
fstp
pop
xor
or
ja
mov
inc
call
(bad)
int3
fdiv
test
adc
dec
jmp
mov
stc
repz
fdiv
cmp
push
lock
xchg
retf
and
sti
xchg
dec
stos
loopne
jle
shr
mov
add
or
and
fdivr
xor
pop
rol
push
mov
jb
jae
push
addr16
das
scas
lea
jno
mov
xlat
fsub
adc
cmp
sbb
lds
xchg
jl
dec
shl
inc
movs
pusha
sub
and
inc
sub
mov
sbb
std
push
mov
in
xchg
sub
jp
jle
(bad)
fwait
mov
jne
or
mov
test
push
fwait
ret
out
xchg
mov
xchg
aam
or
push
and
mov
xor
cmp
stos
in
pusha
mov
nop
popa
jne
jns
les
repz
pusha
test
ret
pop
lahf
inc
into
xor
cmp
enter
mov
push
xor
fistp
pop
cmc
lahf
movs
cmp
bound
dec
xor
daa
jno
scas
dec
pop
aad
xchg
jmp
jne
mov
ltr
and
fld
cmp
mov
ins
cmp
pop
dec
xor
nop
mov
outs
push
mov
xchg
cmc
lock
cmp
shl
xor
mov
in
jle
xchg
push
ins
add
mov
dec
jg
mov
cmp
sub
xlat
add
or
jmp
mov
scas
mov
dec
xor
jae
sbb
dec
adc
test
cmc
ins
and
inc
ja
ja
xchg
scas
outs
mov
popf
lea
stos
jmp
lods
jne
xchg
mov
lods
add
push
movs
clc
push
add
add
scas
shl
sub
cmp
out
stos
cmc
or
sub
dec
pop
cwde
arpl
cmp
push
or
sahf
std
jg
sti
sbb
xor
mov
or
das
outs
dec
mov
stos
or
mov
dec
sub
push
mov
scas
iret
jp
mov
mov
js
add
mov
push
sub
in
inc
xor
push
push
cmc
pop
aad
mov
push
cmps
repz
retf
mov
add
pushf
popf
push
les
je
hlt
push
aam
and
ins
jnp
xor
lea
mov
or
mov
inc
test
mov
mov
(bad)
repnz
push
sahf
pop
adc
jle
lock
test
mov
das
adc
icebp
pop
and
mov
(bad)
(bad)
mov
fld
pop
mov
ss
mov
retf
daa
inc
add
adc
imul
pop
in
cmp
xor
push
pusha
pop
(bad)
mov
xor
out
cdq
mov
pushf
sbb
cmp
jnp
jne
mov
jmp
jge
les
mov
and
jmp
inc
push
xchg
clc
jb
int
sub
idiv
inc
ret
lods
retf
jo
xor
das
fistp
fst
cwde
movs
sti
sbb
mov
scas
push
jmp
mov
xchg
test
push
cmp
cmp
inc
adc
daa
hlt
js
xchg
mov
(bad)
int3
int3
pop
aam
jo
data16
xor
add
push
jb
cdq
leave
mov
(bad)
out
lods
mov
or
and
pop
mov
push
mov
(bad)
imul
call
loop
sbb
popf
das
mov
icebp
and
jmp
aad
xchg
inc
std
mov
icebp
sub
rcl
cmc
loopne
into
in
lock
arpl
cmc
push
push
xchg
test
xchg
inc
sub
or
scas
mov
(bad)
sub
xchg
retf
inc
pmullw
das
xchg
sub
sub
jg
loope
(bad)
xor
xor
dec
jnp
mov
push
fnstsw
popa
shr
dec
xor
or
not
div
mov
and
sbb
repz
mov
sub
inc
inc
push
mov
lea
inc
push
cli
or
cwde
jbe
repz
push
add
fistp
add
not
cs
cld
dec
ret
sar
sub
(bad)
bound
push
dec
mov
sub
mov
sub
mov
mov
mov
(bad)
in
xor
fwait
pop
sbb
add
xchg
loopne
mov
aam
jns
mov
mov
out
jno
cmps
mov
sub
test
stos
and
repnz
mov
stc
aas
xor
xor
sub
lods
or
outs
xchg
jb
lods
or
push
add
xchg
sub
nop
ret
ret
mov
iret
icebp
sbb
aam
arpl
(bad)
div
pop
dec
fisub
jbe
mov
xor
push
aam
push
repnz
(bad)
lahf
out
add
add
lea
fadd
jnp
ins
xchg
jmp
push
push
sbb
lds
mov
mov
push
sbb
loopne
push
jnp
rcl
fwait
inc
cmp
mov
push
and
jae
pop
fwait
repz
and
(bad)
sbb
(bad)
loop
xchg
test
dec
mov
test
or
jne
ss
mov
stos
fbld
in
imul
outs
cmp
mov
sbb
stc
addr16
cld
call
mov
adc
adc
cmp
and
mov
sbb
mov
add
and
pop
xor
out
cmp
pop
push
imul
sub
test
fldenv
mov
cmp
fstp
daa
push
jmp
imul
mov
ror
sub
pop
jl
dec
ss
(bad)
jmp
leave
dec
push
nop
and
mov
repz
mov
sub
cmp
out
push
fidivr
push
mov
xchg
in
nop
ficom
xchg
pop
push
ror
dec
out
test
fistp
fisubr
xor
mov
rcl
sbb
stc
sub
mov
clc
fwait
xchg
cmp
mov
cmc
adc
in
or
movs
or
jmp
xchg
jmp
sti
cmp
xchg
fs
int3
jmp
sub
jne
mov
retf
cmps
jbe
ficom
fsub
sbb
fwait
pop
pop
cmp
and
inc
aam
das
ror
jmp
cld
movs
stos
pop
mov
cmps
test
or
popf
iret
idiv
add
sub
arpl
fild
(bad)
mov
stos
scas
mov
inc
add
pop
mov
pop
pop
das
mov
out
pop
dec
push
add
jbe
jne
dec
scas
jmp
out
movs
xchg
mov
xchg
sysexit
or
aad
xchg
cmp
xor
int
and
cli
call
jl
imul
ret
sahf
hlt
sub
cmp
mov
sub
xchg
test
mov
daa
mov
jmp
cmp
outs
add
shl
adc
mov
xor
leave
stc
sbb
or
fnsave
ds
sbb
adc
es
aam
add
mov
xchg
jmp
sbb
int3
ficom
and
push
mov
es
or
mov
pop
jno
cwde
xchg
std
and
dec
das
or
sbb
cli
xchg
pop
les
jmp
push
or
imul
cmp
pop
or
xchg
out
push
hlt
rcl
cmp
(bad)
sbb
push
ficomp
adc
sahf
lahf
fcom
jmp
cmp
call
xchg
push
int3
gs
adc
stos
aaa
mov
ret
mov
loope
cmp
fbld
test
(bad)
sbb
xor
push
nop
(bad)
lds
ss
inc
push
jle
inc
leave
sti
int3
shl
adc
jl
add
int
dec
sub
add
imul
in
mov
call
fistp
stos
push
daa
mov
ja
or
(bad)
adc
imul
clc
inc
or
ss
lahf
pause
(bad)
mov
mov
lahf
xchg
sbb
stc
cdq
mov
cmp
xor
in
or
inc
push
add
or
popf
(bad)
(bad)
in
js
cmp
pop
pushf
sbb
loopne
mov
push
mov
or
jbe
inc
mov
imul
push
xchg
cdq
cmps
xor
mov
ins
xchg
push
repnz
in
xor
inc
sbb
sbb
cmp
cmp
or
loope
inc
ss
inc
test
adc
sub
pop
fiadd
push
ss
bound
xor
push
in
int3
xchg
sbb
lock
pop
pop
fcmovnb
pushf
out
and
fild
je
fsub
nop
sbb
js
into
add
sub
adc
pop
imul
not
popf
add
les
cmp
ret
xchg
ja
std
mov
pop
push
sub
xchg
retf
mov
mov
movs
adc
and
cwde
mov
clc
dec
or
movs
mov
mov
sub
sbb
adc
stc
dec
sub
mov
xchg
frstor
jo
leave
hlt
dec
in
push
int3
and
and
hlt
gs
cwde
adc
and
xor
mov
fstp
push
fs
(bad)
jmp
fnsave
cmp
pop
mov
ss
xchg
test
xchg
arpl
jne
data16
dec
cdq
(bad)
sbb
cmp
loope
jnp
sbb
hlt
mov
push
mov
pop
das
inc
mov
aaa
arpl
inc
adc
dec
popf
das
pop
sub
cwde
mov
cmp
mov
fs
pushf
bnd
sahf
arpl
(bad)
std
je
add
jle
enter
or
fwait
adc
xchg
add
scas
push
call
push
mov
inc
pop
mov
jge
js
cli
outs
ins
stos
push
in
jnp
pushf
dec
pop
pop
xor
ret
retf
push
enter
je
in
or
mov
gs
es
fcmovnbe
nop
fsubr
aam
out
push
mov
dec
ret
call
push
pop
xchg
pushf
inc
cmp
(bad)
adc
sbb
adc
loop
mov
xor
push
aas
nop
mov
xchg
xchg
jmp
and
imul
or
pop
and
pop
mov
dec
lods
sbb
out
sub
and
or
pop
(bad)
cmp
adc
loop
xchg
fwait
out
jae
mov
cli
aam
push
sub
pop
sahf
sbb
xchg
call
mov
dec
gs
cmp
push
mov
push
pop
cli
enter
sub
pushf
pop
ficomp
adc
aas
lods
ret
jns
push
pop
push
imul
fdiv
arpl
dec
mov
bound
lds
mov
popf
mov
out
adc
add
xchg
ds
sub
sar
cmps
loop
xchg
cdq
lods
imul
cdq
push
cmp
jl
imul
fimul
cs
inc
loopne
sbb
jne
xchg
jecxz
xchg
dec
hlt
mov
mov
cmps
out
out
fild
jmp
xchg
fwait
shl
dec
fisttp
retf
inc
iret
xlat
sbb
inc
mov
lods
loop
cmp
mov
sub
ss
pop
dec
mov
mov
sti
pop
inc
scas
popa
dec
add
shl
(bad)
dec
pop
mov
shl
mov
push
xor
xchg
jle
and
jmp
sub
nop
gs
aam
inc
repnz
mov
pusha
enter
pop
loopne
xor
in
cmp
cli
fxch
hlt
cmp
xor
add
xor
inc
movs
ror
(bad)
sub
dec
fcom
sar
pushf
cmps
jle
and
imul
mov
rcl
movs
ret
mov
in
or
pop
iret
push
and
ss
mov
pop
out
enter
push
xchg
or
pushw
adc
pop
div
lock
mov
dec
push
loope
lods
mov
retf
mov
xor
ds
int
dec
popa
and
cwde
cli
mov
push
dec
mov
aad
ss
js
adc
lea
xlat
scas
iret
and
sub
aam
clc
repnz
mov
xchg
test
test
rcr
fwait
pop
pop
cwde
xchg
sub
mov
mov
dec
loopne
and
sar
push
dec
out
jno
mov
loope
fcomp
addr16
add
int3
mov
rol
arpl
(bad)
mov
test
jno
inc
sbb
inc
lock
sahf
(bad)
sbb
or
push
repz
xlat
arpl
es
loope
es
cs
stos
lds
sub
mov
add
xor
jp
imul
aaa
xchg
bt
jbe
outs
call
and
ins
sar
arpl
mov
ins
out
mov
retf
jle
shr
or
fidiv
pushf
iret
dec
jns
movs
mov
adc
test
cs
dec
pop
sub
bound
call
bound
sub
fsubr
test
inc
jecxz
mov
xchg
cmp
cld
jmp
shl
xchg
mov
pop
add
jno
fst
and
mov
xchg
mov
cwde
add
into
or
jne
lods
sbb
push
gs
mov
cmps
fcom
rol
dec
jge
pop
xor
sbb
add
lea
int3
pusha
and
dec
sbb
cld
(bad)
or
aad
cmp
mov
clc
pop
and
inc
ins
xlat
sub
jbe
push
push
movs
movs
ja
jmp
mov
mov
pop
mov
dec
inc
movs
scas
call
retf
or
test
out
or
mov
sar
sahf
xor
mov
mov
mov
add
leave
push
dec
ins
inc
jp
sub
rcr
jp
sbb
data16
mov
out
inc
cmp
mov
addr16
in
(bad)
mov
inc
ret
(bad)
lea
aam
push
retf
and
dec
mov
mov
cmp
ss
push
push
push
xor
outs
ret
mov
mov
bound
enter
aam
sbb
call
imul
mov
popf
lea
idiv
adc
mov
adc
clc
mov
dec
fdivr
fadd
shl
mov
cmp
outs
push
push
stc
rcl
jno
mov
or
adc
push
stos
daa
rol
add
les
sub
mov
daa
xor
test
mov
mov
popf
mov
dec
pop
test
scas
gs
mov
test
xchg
popa
and
mov
mov
lds
aaa
mov
inc
imul
loop
dec
sub
xchg
sub
fwait
movs
loopne
jno
lods
jnp
mov
mov
test
mov
pop
pop
cdq
push
sub
ds
inc
push
cdq
pushf
sahf
or
cmp
movs
imul
out
xchg
cmp
stos
jp
cdq
test
pop
ret
jno
int3
out
ret
mov
clc
mov
out
xchg
loope
add
dec
mov
retf
shl
pop
pushf
es
sbb
jmp
fist
jbe
dec
daa
mov
out
adc
pop
jl
inc
push
lods
(bad)
aad
cmp
pushf
addr16
inc
pop
call
jmp
jmp
shr
fnsave
jle
or
lock
or
popf
jge
push
mov
clc
inc
push
sbb
mov
xlat
and
aaa
push
adc
ror
jno
or
test
sti
xchg
inc
scas
(bad)
popa
fcomi
sar
and
js
pushf
cwde
sub
lahf
sub
push
fld
jb
mov
(bad)
inc
or
sar
sub
dec
or
fiadd
sub
xlat
dec
jmp
xor
or
in
sub
mov
sbb
sahf
les
out
cdq
rol
adc
pop
cmp
not
or
inc
movs
adc
jnp
xor
cmp
pushf
cli
std
sbb
aaa
enter
xlat
fcmovnbe
je
leave
nop
push
mov
pop
pop
push
loopne
fidiv
loop
adc
loopne
clc
adc
pop
mov
pushf
mov
xlat
cld
aas
add
mov
mov
inc
dec
xchg
loope
movs
ss
dec
in
mov
pop
xchg
cmp
mov
lock
pop
fbstp
pushf
test
jo
ins
lods
ss
mov
cmp
jmp
lahf
scas
pop
push
loop
call
cs
push
hlt
in
xchg
jno
dec
mov
xchg
xchg
(bad)
or
loopne
inc
push
sub
mov
movs
mov
and
retf
push
push
ja
sub
push
lods
icebp
ret
push
add
cmps
fcmovbe
add
into
sar
jo
sub
ds
mov
mov
lods
arpl
push
jno
add
jb
mov
xor
cld
rcr
and
jae
mov
enter
fs
movs
cmc
add
hlt
sbb
call
sbb
cmp
jg
dec
in
push
ficom
inc
pushf
(bad)
mov
cmp
popf
fld
pop
mov
sub
shr
(bad)
shl
xor
xchg
inc
rol
xor
cs
call
jmp
cmp
push
in
stc
fisub
cmp
mov
sub
xor
out
out
mov
sbb
jecxz
push
(bad)
and
scas
sbb
xchg
push
repz
dec
pop
nop
push
mov
outs
repz
or
xor
lods
mov
fnsave
push
adc
call
ret
push
inc
pop
mov
(bad)
mov
ins
or
jno
out
scas
gs
add
xor
ja
and
inc
mov
neg
lock
sbb
sbb
cmp
jnp
pop
fisub
or
(bad)
(bad)
out
push
cmp
dec
repnz
rcl
movs
in
mov
inc
movs
int3
or
mov
cmps
lea
pop
or
inc
test
mov
enter
jge
fs
iret
test
or
ror
mov
mov
and
or
cmp
mov
setbe
and
pop
or
jmp
loop
mov
shr
jb
(bad)
into
fldenv
sub
pushf
(bad)
cs
ss
mov
cwde
(bad)
iret
cmc
pop
sbb
pop
or
lock
lods
rcr
repnz
jp
(bad)
or
cmp
jg
scas
mov
adc
jmp
imul
sub
movs
mov
inc
push
imul
push
sbb
test
lods
stos
or
call
outs
arpl
hlt
fadd
call
and
push
mov
xchg
add
inc
and
jnp
retf
add
mov
into
stos
mov
js
cmp
xor
bound
dec
ja
das
push
ins
sbb
popf
movs
mov
rcl
js
mov
xor
in
mov
popf
pop
push
cmp
cld
scas
call
cdq
sub
scas
dec
lahf
inc
cmp
mov
std
iret
nop
xchg
dec
test
rcr
mov
pop
int3
adc
mov
xchg
sbb
inc
out
mov
pushf
repz
std
or
out
stos
lock
loop
pop
mov
and
sbb
mov
pop
fdivp
xor
mov
inc
test
and
out
imul
push
lods
(bad)
push
scas
and
shl
push
adc
call
out
retf
mov
mov
sub
mov
inc
fxtract
xchg
(bad)
and
movs
cld
jecxz
loope
sub
mov
out
(bad)
das
add
out
idiv
inc
sub
cmp
cmp
inc
popf
shl
fld
(bad)
pop
or
mov
inc
pop
or
sub
mov
fnstcw
pop
and
xchg
xchg
loope
sub
lods
in
xchg
(bad)
or
jo
inc
pushf
aaa
mov
sbb
pop
nop
jb
gs
imul
imul
repnz
enter
jnp
sub
mov
dec
xchg
fbld
js
rol
call
fst
xchg
jmp
adc
jg
in
(bad)
ficomp
or
mov
inc
ficom
sbb
enter
add
repz
or
jp
jl
jl
cdq
inc
adc
xchg
out
mov
in
jne
pop
loope
jecxz
cld
adc
xlat
outs
jne
jecxz
iret
mov
fisttp
xchg
xor
xor
dec
add
inc
ss
call
push
scas
jmp
mov
js
loope
and
call
fsub
and
retf
fild
psubusw
int3
push
in
and
dec
or
mov
mov
jb
mov
add
add
test
xor
dec
mov
lds
push
pop
(bad)
(bad)
mov
xor
jae
repz
cmp
mov
cdq
out
mov
xor
fcmovnb
or
jmp
hlt
pushf
lods
in
push
(bad)
push
nop
push
call
(bad)
mov
mov
in
lahf
jo
add
sub
dec
add
lods
inc
in
jle
mov
scas
jno
and
xchg
repnz
push
sar
mov
aas
out
fwait
in
pop
fnsave
test
mov
sbb
lock
mul
inc
jbe
dec
pop
ja
mov
(bad)
cwde
lahf
shl
fild
jae
cdq
not
arpl
inc
js
out
mov
push
in
jmp
mov
pop
test
inc
cmp
push
ja
addr16
jmp
or
mov
xchg
dec
mov
cmp
movs
inc
pop
mov
movs
jno
cld
jmp
es
loope
aam
loop
xor
xchg
push
cmps
jne
and
outs
pop
lahf
test
xchg
wrmsr
mov
loopne
(bad)
imul
xor
ja
fisubr
pop
xchg
ds
dec
js
lods
out
mov
icebp
pop
mov
cli
jns
retf
mov
mov
(bad)
mov
and
push
inc
(bad)
sbb
fnstsw
push
push
daa
gs
sbb
sbb
adc
ins
dec
shl
xor
and
sbb
icebp
push
mov
popf
mov
(bad)
adc
adc
loop
iret
shl
jae
call
inc
pop
mov
arpl
pop
addr16
imul
test
xor
dec
nop
dec
loop
add
xor
test
xchg
mov
and
loope
sub
mov
idiv
add
mov
pop
sub
and
xor
sbb
or
xchg
push
mov
xchg
jne
dec
pop
sub
fldcw
jp
in
fucomip
mov
sub
jle
stc
lods
ins
jae
neg
mov
xchg
mov
push
sub
div
xor
(bad)
daa
inc
bound
cmps
bound
shr
clc
add
sub
stos
pop
cdq
dec
js
arpl
fld
sbb
cmp
stos
mov
hlt
jmp
mov
mov
push
scas
mov
mov
xchg
loope
add
mov
loop
mov
pop
je
cmc
inc
pop
int3
mov
icebp
mov
nop
inc
shl
push
xor
adc
dec
stos
imul
mov
das
daa
iret
or
lods
mov
stos
lahf
lds
js
push
jmp
stos
ss
inc
push
loope
mov
cmc
push
jnp
inc
ret
out
ss
(bad)
xchg
inc
adc
ins
(bad)
mov
sub
sub
pop
and
movs
xchg
dec
sbb
sbb
mov
push
icebp
xchg
mov
sbb
or
shl
pop
mov
jg
xchg
cld
sub
(bad)
xchg
inc
bound
loope
xchg
jecxz
xlat
xor
stos
ins
cs
xchg
retf
push
jne
imul
sub
jns
sar
push
or
fstp
cdq
add
xor
es
mov
sub
xor
das
shl
enter
sahf
adc
es
in
and
and
push
and
xor
and
fldcw
pushf
cdq
sbb
nop
int
sbb
cmp
adc
mov
xor
pop
push
push
xchg
jnp
rol
jmp
sbb
xchg
and
fcmovne
sub
lods
pop
loop
lods
mov
push
js
enter
xor
inc
dec
xor
xchg
rol
sub
xchg
enter
adc
std
stos
push
pop
dec
cwde
sti
pop
jnp
into
aad
ss
out
jo
enter
add
test
push
pop
mov
or
add
lock
call
stc
xabort
push
cmps
mov
cdq
add
sti
in
(bad)
out
inc
fdiv
call
cdq
call
outs
outs
add
movs
lock
in
and
add
aam
jle
(bad)
cmps
jg
sbb
jo
xor
dec
sbb
int
leave
mov
fsin
jp
jbe
adc
xor
mov
bound
xor
imul
mov
cli
mov
sbb
je
mov
hlt
xchg
jno
xor
pop
dec
push
js
push
jbe
loope
stos
adc
frstor
jle
and
pop
idiv
adc
xchg
(bad)
clc
xchg
es
es
iret
xor
mov
mov
xor
sbb
pop
push
pop
sub
ror
add
jl
mov
cdq
dec
or
aas
call
pop
sti
jmp
in
out
pop
and
loop
sbb
lock
pop
adc
dec
inc
imul
jnp
or
je
mov
mov
inc
pop
mov
(bad)
repz
adc
inc
push
sti
jg
xchg
imul
lock
mov
sub
sbb
sti
mov
lods
xlat
mov
xor
add
test
inc
sub
dec
addr16
dec
aad
pop
xchg
pop
push
repz
xchg
call
out
fdivp
in
call
push
inc
dec
mov
les
inc
mov
jne
or
idiv
add
lods
jge
outs
fdiv
xchg
and
cmp
inc
dec
pop
push
fild
in
retf
dec
fmul
xlat
fstp
xchg
add
and
hlt
cmp
aad
mov
xor
loope
xor
cmc
cmp
aam
retf
push
aas
xchg
push
sub
or
xchg
jne
jmp
mov
and
data16
adc
sbb
mov
adc
jo
test
cmps
stos
adc
mov
sub
mul
and
(bad)
fiadd
fcom
ja
(bad)
rcr
pop
sbb
(bad)
std
stos
pop
not
inc
pop
jb
push
inc
in
mov
sub
addr16
jbe
inc
retf
add
sub
push
add
cmp
mov
jmp
test
retf
dec
cmp
xor
adc
les
leave
ss
and
daa
sar
pop
neg
stc
lock
test
pop
mov
in
dec
add
sbb
mov
add
push
xchg
pop
mov
cmps
(bad)
ss
and
inc
xlat
push
cs
pop
shr
lea
cwde
push
pop
push
shr
icebp
scas
mov
push
loope
mov
push
mov
movs
jne
scas
mov
cwde
mov
in
lahf
adc
mov
repz
ss
lock
mov
adc
ins
cs
pop
inc
dec
xchg
xchg
daa
pop
mov
pop
pop
or
jle
jecxz
xchg
test
aas
es
fld
and
jp
dec
cmps
hlt
cld
nop
cli
loope
dec
lock
addr16
sub
inc
pop
imul
push
pop
adc
out
sub
outs
repz
jb
in
scas
xchg
pop
mov
mov
xor
test
push
lods
mov
dec
retf
mov
ja
int3
mov
push
adc
mov
mov
inc
stc
sub
push
and
fisubr
xchg
js
ror
test
mov
xchg
mov
int
popf
outs
loope
lea
jb
call
cdq
mov
fs
jge
jmp
scas
mov
fdiv
cmp
sbb
ja
rol
xor
(bad)
and
call
add
pop
adc
stc
fisttp
mov
shr
push
or
inc
arpl
sub
clc
or
cmp
scas
xchg
gs
adc
(bad)
stos
push
sbb
(bad)
call
xor
mov
jmp
scas
gs
mov
repz
mov
mov
jl
scas
imul
sahf
pop
mov
es
(bad)
mov
(bad)
mov
xlat
shl
or
fstp
jne
ins
sub
push
inc
push
in
int3
pop
xor
mov
or
test
mov
xor
lods
mov
cmp
es
aad
add
jmp
test
pushf
repz
sub
mov
fdivp
fcomp
sahf
jbe
add
gs
pop
out
imul
xchg
lock
movs
mov
ins
push
ds
(bad)
push
jl
ror
pusha
jl
(bad)
mov
and
inc
gs
pop
or
es
fidiv
fwait
sub
loop
cmps
xchg
lahf
or
icebp
pop
lods
add
es
push
xchg
cwde
add
stos
jb
jne
cmp
sti
shl
jns
mov
xlat
dec
pushf
fxtract
jbe
jle
dec
xor
sub
jbe
outs
imul
dec
fisttp
nop
jmp
add
shl
inc
pop
inc
ins
aaa
inc
shl
fidivr
xlat
jae
(bad)
and
neg
pop
sub
push
add
mov
sub
sub
sbb
in
arpl
outs
xor
adc
pop
aad
rcr
mov
cmps
adc
sub
inc
xor
lea
test
add
push
mov
shl
xlat
sahf
pop
lahf
daa
and
jecxz
fmul
movs
inc
clc
adc
loope
cmp
cmp
loopne
mov
adc
mov
add
repz
fldenv
push
sub
icebp
jg
enter
ja
ret
fsub
mov
in
mov
sub
int3
mov
shl
icebp
(bad)
and
pushf
scas
sar
adc
jnp
push
jecxz
or
test
xor
xor
fdivr
sbb
fsubr
int
push
(bad)
fdivr
pop
int
pop
xchg
mov
iret
xbegin
sbb
pusha
mov
or
iret
in
xor
mov
jecxz
jmp
lock
push
xor
dec
arpl
pushf
leave
lds
into
jle
jmp
mov
sub
(bad)
mov
xchg
add
and
cmc
mov
loopne
loopne
mov
cli
mov
push
mov
icebp
lahf
adc
clc
mov
jp
int3
dec
dec
xor
or
pop
icebp
ins
arpl
shr
pop
clc
retf
cmp
ins
clc
call
mov
and
(bad)
and
cmps
xchg
pusha
push
dec
psrad
mov
cmps
fcom
jl
add
adc
jbe
scas
pushf
pushf
fs
popf
mov
lahf
jl
mov
movs
dec
xchg
add
pusha
sbb
mov
mov
rcl
add
jg
movs
or
sti
push
push
xor
les
ret
xchg
(bad)
jo
xor
mov
adc
adc
pusha
add
shl
jl
or
add
add
xlat
cdq
mov
sbb
shl
aam
iret
fldenv
(bad)
ja
mov
mov
aad
in
inc
cld
cs
inc
dec
movs
adc
adc
jg
cmp
mov
dec
cmp
imul
mov
pop
cmovo
fbstp
or
fiadd
lock
hlt
cs
pop
sub
jle
sbb
arpl
xor
inc
and
push
ins
push
and
das
cmp
lahf
ss
enter
stc
(bad)
sub
or
cdq
xor
or
add
ins
jae
pop
jae
leave
out
push
(bad)
out
xchg
jl
sub
lock
jne
push
inc
push
aas
sub
in
push
mov
xor
dec
and
les
aad
pop
dec
fs
sub
out
cmp
mov
mov
div
outs
sbb
inc
arpl
or
popf
inc
ret
sub
outs
sub
pop
std
test
icebp
xchg
cmp
mov
xor
fwait
outs
mov
jo
mov
mov
mov
mov
aam
xor
out
movs
pop
push
pop
mov
jl
popa
jmp
mov
in
addr16
inc
call
jl
test
jecxz
(bad)
or
pop
jmp
mov
pop
lea
push
sti
push
dec
in
mov
inc
out
pop
or
pop
mov
inc
mov
and
test
scas
and
mov
cmps
mov
mov
pusha
fsubr
push
and
sti
hlt
and
(bad)
adc
(bad)
sbb
in
aad
mov
cs
pop
fwait
push
jo
mov
int3
dec
cli
add
cmp
movs
fucomi
stc
mov
push
sbb
pop
frstor
push
or
inc
add
lods
xchg
and
dec
cmp
sub
test
pop
ins
movs
aam
xlat
mov
cmps
mov
ror
mov
sub
and
rcr
pop
jo
shl
inc
mov
rol
in
jnp
mov
pop
push
adc
mov
pusha
cmp
jl
loop
jmp
add
xor
mov
pop
and
sub
loop
add
inc
sub
or
rcr
fidiv
inc
(bad)
dec
adc
pop
repnz
(bad)
repnz
ss
xor
stc
ret
fild
push
jmp
ja
clc
popa
lock
xlat
mov
mov
fcmovu
lods
add
sub
inc
jne
in
lods
jbe
xchg
ds
addr16
out
inc
movs
jne
test
sub
popf
mov
mov
mov
mov
aam
imul
mov
pop
lods
sti
rcl
cli
sahf
pop
pop
mov
jne
push
(bad)
pop
(bad)
jns
mov
and
nop
adc
pop
ret
add
int3
push
sub
pop
test
call
mov
(bad)
mov
jbe
mov
sbb
xor
sbb
push
cmp
cmp
xchg
in
sbb
nop
outs
sahf
clc
and
imul
sbb
and
sub
xor
or
shl
ror
pop
inc
jno
dec
js
arpl
scas
loop
mov
in
sti
in
in
lock
test
je
fsubr
ss
push
clc
add
pop
xchg
outs
loopne
mov
jge
ds
out
push
es
push
sbb
stc
xchg
ds
jo
add
xchg
rcl
jg
hlt
push
retf
outs
and
mov
push
stos
aam
adc
sub
pop
scas
shr
(bad)
std
hlt
leave
daa
or
out
cmp
xor
add
jns
sbb
dec
clc
and
call
outs
inc
jmp
or
or
lods
add
mov
pop
fnstenv
cmp
mov
dec
mov
push
cwde
ins
leave
imul
and
pop
adc
test
add
xor
adc
hlt
jl
push
pop
mov
les
hlt
mov
xchg
mov
inc
jl
cmp
jle
jl
lods
lods
jp
xchg
or
xlat
rcl
pop
cmp
int3
(bad)
in
stc
cli
aad
jne
dec
mov
out
and
(bad)
pushf
(bad)
and
call
add
mov
rol
es
ds
pop
add
sub
cmp
cld
(bad)
mov
adc
in
int
mov
and
mov
mov
mov
rol
pop
aad
stos
jmp
retf
iret
jbe
sub
pop
mov
daa
shr
or
pop
ss
pusha
sbb
cmp
es
(bad)
rcl
loope
aam
scas
cmp
jo
fcomp
mov
push
cmps
xchg
loop
mov
stc
into
jbe
pop
or
fild
sahf
cli
add
add
dec
fld
and
cwde
test
jecxz
dec
es
push
xchg
or
aam
icebp
clc
inc
cld
cmp
fwait
cmp
repnz
fcomp
xchg
adc
adc
sbb
cmp
addr16
push
push
out
adc
or
xchg
adc
stos
and
jns
inc
push
pop
fdivr
ins
test
aam
test
es
sbb
dec
popa
dec
pusha
addr16
or
mov
cmps
outs
lahf
mov
mov
mov
mov
mov
retf
inc
ins
popa
push
aam
fcom
jbe
mov
and
jp
pop
xlat
aam
inc
sbb
sub
mov
add
imul
(bad)
test
jmp
lods
jecxz
mov
add
dec
in
xor
rcl
shl
or
shr
sbb
sahf
cmp
stc
fild
fdivr
pusha
neg
push
sti
mov
pop
mov
clc
sbb
and
lock
ds
pop
or
loop
ds
and
int3
pop
adc
nop
xchg
neg
(bad)
movs
sar
loopne
(bad)
in
mov
loop
sub
or
retf
xor
lea
scas
imul
pop
outs
loopne
inc
xor
clc
js
sti
fdiv
or
mov
rol
jp
add
push
and
shr
mov
fs
mov
inc
inc
add
or
and
mov
into
outs
and
lock
shl
aas
pusha
pusha
pop
add
pop
dec
mov
mov
int
dec
sub
pop
mov
sub
test
daa
fnstenv
loopne
stos
test
xchg
jbe
xchg
leave
imul
adc
mov
nop
fcomp
dec
int
inc
punpcklbw
cmps
fstp
inc
dec
js
inc
rol
push
ror
icebp
xchg
jmp
push
adc
inc
pop
stc
es
into
dec
outs
pop
push
inc
and
push
cs
xchg
push
fdivr
clc
mov
arpl
cs
pop
cmp
pop
out
fisubr
mov
movs
sub
jo
xchg
das
ss
xlat
sub
addr16
test
clc
xchg
add
call
push
mov
mov
fild
push
retf
std
xchg
aad
push
push
adc
dec
and
mov
or
dec
pop
adc
in
sub
(bad)
out
adc
xchg
or
fimul
je
mov
pop
shl
pop
ret
ret
and
dec
cmp
enter
mov
scas
dec
or
(bad)
jg
enter
sar
data16
jecxz
gs
test
or
test
cli
leave
adc
pop
cmp
lds
or
int
cmp
sub
aaa
or
pop
and
sbb
push
and
cmps
movs
or
inc
movs
(bad)
mov
jle
stc
stos
sub
out
out
arpl
mov
in
(bad)
sub
mov
and
neg
in
xchg
mov
js
mov
mov
es
pop
stos
jp
dec
push
(bad)
(bad)
je
sti
or
repnz
and
sti
mov
sbb
movs
lods
jae
push
inc
int
push
sub
mov
ror
cmps
les
mov
ja
ret
jmp
mov
rcr
jbe
or
call
jb
and
in
out
loope
mov
xchg
jmp
pop
lea
scas
out
mov
rcl
or
ja
inc
inc
aas
adc
mov
xor
add
adc
pop
mov
or
loope
mov
push
dec
je
fdiv
jbe
fld
inc
mov
pop
sub
pusha
(bad)
pop
test
popa
pop
pop
out
add
cdq
sahf
mov
fstp
jge
jno
ret
and
int
mov
and
xor
retf
nop
repnz
xor
mov
lock
neg
stc
push
cmp
jae
scas
rol
and
xchg
rcl
pop
pop
push
xor
movs
mov
add
test
in
push
and
cmp
inc
jp
iret
ins
cs
mov
(bad)
(bad)
mov
and
push
pop
inc
mov
jg
cwde
jae
popf
jp
inc
and
fistp
adc
hlt
pop
adc
sar
push
das
f2xm1
test
das
cld
mov
ret
pop
push
std
xor
ss
adc
push
jb
and
(bad)
cwde
sar
gs
sbb
dec
cmps
jp
in
movs
ds
inc
xchg
ret
inc
inc
adc
cmps
pop
push
dec
dec
pop
clc
xor
loopne
jae
add
inc
pop
pushf
mov
and
and
rcl
mov
xor
sub
icebp
jmp
fwait
sbb
xlat
push
fimul
repnz
outs
xchg
mov
mov
test
pop
push
cmp
jne
xor
sub
xor
xor
xchg
xchg
(bad)
test
mov
cmp
outs
repnz
jns
pop
push
mov
mov
xor
mov
fld
fs
les
pop
add
and
outs
jmp
loope
shl
mov
pop
popw
mov
addr16
jp
iret
das
mov
jmp
xchg
dec
and
xacquire
mov
nop
fwait
and
fdivr
scas
jmp
mov
sbb
or
sub
cld
je
jge
rol
push
data16
push
mov
test
fcomp
fcmovnu
inc
outs
inc
xchg
es
sub
dec
xchg
jle
dec
cwde
pop
call
pushf
xchg
fisttp
or
mov
int
sbb
sti
getsec
cld
mov
sbb
mov
inc
and
imul
es
xor
fild
retf
xor
sub
inc
add
pop
aad
push
xor
dec
fnstenv
sub
and
sub
or
sbb
fsub
outs
inc
xor
xlat
pop
xchg
mov
inc
mov
and
lock
jmp
jl
scas
pushf
clc
fsub
jne
ins
in
mov
mov
push
les
jle
lahf
jle
xchg
out
cmp
(bad)
jo
ds
cwde
jge
inc
popa
add
lahf
sti
dec
aad
pop
or
add
jecxz
mov
mov
nop
call
movs
sti
and
pop
mov
add
sar
sbb
dec
es
adc
push
push
(bad)
nop
jecxz
dec
out
retf
loope
stc
stos
mov
rol
loop
push
mov
adc
ret
jle
mov
dec
xchg
xchg
xchg
sub
pop
jp
push
mov
test
inc
jl
sub
xor
cmp
test
jecxz
and
es
dec
cmps
or
addr16
mov
stos
dec
sahf
imul
fiadd
test
jmp
xchg
sbb
jmp
mov
xor
mov
inc
add
ret
adc
jmp
outs
add
xor
sbb
and
fbld
das
(bad)
mul
pop
movs
inc
nop
ja
cmp
mov
dec
adc
fisubr
inc
push
popa
xor
mov
int3
inc
xchg
in
pusha
shr
push
mov
(bad)
shl
push
(bad)
xchg
xchg
int3
pop
aas
fdivr
sub
jmp
mov
mov
outs
stos
dec
add
fnstcw
adc
and
adc
sub
aam
sub
adc
test
pop
ret
xchg
test
pop
loopne
test
push
(bad)
fimul
stos
stc
pop
mov
add
or
and
mov
fs
inc
loopne
loop
xor
fdivr
jbe
add
fmul
(bad)
and
add
mov
in
pushf
mov
fild
adc
loope
push
inc
xor
pop
dec
add
and
and
mov
fisttp
in
movs
inc
pop
mov
mov
inc
jg
and
mov
and
or
or
lds
int
mov
idiv
mov
dec
test
mov
inc
mov
jg
mov
mov
xchg
jecxz
pop
sub
ins
retf
out
bound
shr
aam
xlat
jecxz
neg
test
popa
add
shl
mov
jne
into
fwait
cmp
mov
dec
dec
ds
mov
push
mov
add
mov
lock
mov
mov
ror
repnz
xchg
cmp
inc
leave
loopne
jo
les
jp
loope
jae
jne
int
les
pop
sbb
ret
or
inc
fs
mov
pop
(bad)
cdq
jl
je
shl
pushf
adc
mul
or
cld
pop
je
pop
mov
cs
rcl
lods
test
call
fcomp
int
sbb
fs
jnp
push
(bad)
add
sbb
cwde
pop
sbb
mov
mov
cwde
jns
ins
jmp
(bad)
jmp
mov
lds
inc
test
jmp
sub
push
and
xchg
loop
jmp
jl
jno
sbb
jno
je
lock
test
in
or
dec
dec
dec
aam
sbb
mov
stos
retf
xchg
push
out
std
jbe
inc
cdq
test
pop
adc
jne
ss
add
ds
or
pop
int3
inc
rcr
jle
mov
jo
lahf
fsub
imul
movs
aam
mov
jns
shl
dec
dec
fcomp
mov
test
mov
or
mov
cdq
movntps
repnz
nop
lods
mov
and
pusha
gs
cwde
jge
retf
add
test
cmp
addr16
ja
mov
push
xchg
and
mov
mov
xchg
test
xor
loope
sub
cld
mov
jmp
inc
pop
cmps
rcl
ds
adc
les
mov
mov
or
cmp
or
cmp
sti
push
retf
inc
mov
mov
mov
mov
mov
lds
fisttp
xchg
call
mov
mov
in
popa
mov
in
pop
cwde
bound
add
clc
shl
dec
mov
test
stos
(bad)
adc
lods
std
bound
popf
inc
pop
inc
dec
js
shl
cmp
stos
sub
test
xchg
test
shl
adc
(bad)
in
or
je
sub
mov
pushf
push
nop
push
sbb
pop
mov
scas
dec
jno
dec
popa
pop
pop
pop
pcmpgtd
cmp
out
xchg
jl
retf
mov
mov
mov
test
inc
xor
dec
adc
gs
inc
popa
adc
mov
lahf
iret
pushf
aas
xchg
jb
shr
out
inc
sub
aam
mov
and
fcomp
jno
inc
cmp
cmp
xor
inc
loopne
jg
fcmovu
mov
sbb
pushf
and
push
sub
push
sbb
add
ins
jecxz
in
sub
adc
ret
aam
xchg
fdivr
(bad)
adc
pop
in
push
aas
test
call
cmp
fwait
outs
jne
pop
adc
jle
je
test
dec
int
test
jne
mov
or
xchg
or
(bad)
xchg
in
inc
fisttp
adc
mov
(bad)
jbe
stc
sbb
adc
test
pop
pop
loope
test
jns
cmp
dec
or
dec
dec
add
cld
adc
jp
sbb
mov
jne
cmps
mov
fldcw
mov
mov
bound
or
dec
fdiv
jp
fdiv
or
stos
push
jbe
pop
sub
xchg
or
stos
xor
nop
fcmovnu
aad
hlt
(bad)
xchg
adc
xchg
xchg
add
repz
pop
mov
lahf
mov
dec
cmp
paddusw
outs
pop
pusha
cmps
add
inc
cmp
sub
fwait
(bad)
in
retf
popa
push
mov
sbb
jle
xor
jp
ret
cmp
push
imul
xor
aas
xor
cmp
fcmovnbe
and
je
push
mov
mov
lea
xor
xchg
cmc
(bad)
aad
xor
jp
xchg
lahf
sbb
cmp
adc
mov
into
clc
(bad)
mov
inc
mov
sbb
inc
inc
cs
or
dec
inc
test
aaa
fidivr
push
or
or
dec
jmp
cmp
test
xchg
adc
rol
das
sub
xor
push
in
sub
xchg
fisubr
jne
xor
jbe
ins
mov
mov
adc
dec
jno
cmp
xchg
into
dec
xor
scas
and
scas
jle
mov
and
out
push
and
test
jns
mov
xor
daa
test
(bad)
dec
mov
dec
xchg
mov
aam
jnp
pop
idiv
pop
in
push
xlat
pushf
retf
shr
dec
jl
xlat
lea
push
mov
mov
popa
lds
(bad)
jmp
pop
sbb
inc
sub
or
pop
lds
push
pop
mov
mov
std
(bad)
xor
das
mov
xchg
mov
sub
push
iret
or
inc
add
dec
cmps
and
fwait
and
sub
mov
mov
stc
and
sub
pop
imul
inc
dec
js
(bad)
scas
mov
fwait
ror
repz
mov
mov
pop
scas
leave
js
pop
xchg
rcl
mov
fidivr
and
enter
pop
scas
mov
or
and
inc
popa
cmps
jmp
js
cdq
xor
dec
push
jns
in
adc
shr
push
xchg
xchg
outs
iret
jo
and
adc
xchg
pop
bndstx
inc
imul
xchg
jmp
repnz
test
cmps
sub
mov
rcr
cmc
cmp
(bad)
ret
push
cmp
xchg
cdq
cmp
mov
cmps
repz
sar
mov
leave
pop
inc
loopne
aad
dec
mov
in
mov
cmp
fcomp
pop
xchg
dec
(bad)
pop
sbb
pop
out
mov
mov
sbb
mov
inc
ffreep
(bad)
mov
test
push
loopne
adc
sbb
imul
push
mov
in
sub
or
cmp
jp
stc
sub
push
test
enter
mov
pop
mov
dec
mov
inc
daa
and
jns
xlat
add
pop
fnstsw
or
les
inc
adc
out
mov
retf
ins
jl
std
adc
jae
pusha
xchg
ins
sub
mov
sub
sub
jo
sub
fistp
(bad)
pop
mov
jb
ins
mov
ja
add
es
mov
sbb
mov
push
(bad)
jmp
les
xor
popa
jae
adc
dec
cmps
ins
jp
in
inc
inc
repz
arpl
retf
dec
jns
or
inc
jns
mov
sub
cwde
sbb
enter
cld
(bad)
inc
cmp
dec
sub
mov
mov
loope
dec
hlt
(bad)
inc
cmp
cmp
dec
(bad)
dec
inc
in
(bad)
(bad)
das
mov
mov
(bad)
ins
mov
not
inc
inc
jg
inc
ja
jmp
adc
xor
cld
sbb
xlat
xlat
stc
and
in
pop
xchg
mov
xchg
jp
data16
mov
adc
inc
sbb
sbb
aam
outs
fnstenv
sub
imul
cdq
pop
adc
xchg
and
mov
fwait
fs
jg
call
push
les
int3
dec
or
inc
scas
sbb
mov
cmc
sbb
mov
cmovl
or
jmp
ins
(bad)
mov
gs
mov
or
cmp
and
add
out
mov
xchg
sti
aam
push
jbe
into
jl
loop
sub
xchg
mov
into
and
mov
jmp
popa
test
push
pop
sti
mov
in
xor
adc
repnz
pop
pop
std
cmp
inc
adc
jg
sbb
add
arpl
lea
mov
loopne
mov
ins
in
dec
mov
hlt
inc
ja
xchg
mov
(bad)
fcom
stos
cmp
cmps
add
leave
or
ja
mul
dec
push
or
fcmovnb
cmps
mov
sub
fist
pop
pop
jnp
mov
xchg
cmp
jns
sub
push
gs
movs
sub
add
mov
push
cld
xchg
(bad)
ret
mov
xchg
bound
or
push
or
jecxz
or
clc
adc
push
imul
mov
(bad)
ins
dec
fstp
mov
and
jb
gs
mov
out
and
xchg
push
add
sbb
stos
xchg
popf
fwait
xchg
fcmovnu
mov
sti
leave
sub
xchg
leave
dec
cmps
aam
mov
push
sub
stc
cmp
mov
arpl
jne
icebp
call
ins
lds
rcr
scas
aas
ret
sub
mov
std
sbb
lds
or
jp
mov
and
mov
sbb
call
xchg
(bad)
and
dec
and
test
test
stos
hlt
arpl
dec
add
or
out
lock
jg
(bad)
jmp
or
jae
sbb
not
add
fistp
pusha
mov
or
dec
xor
call
mov
sysret
call
in
cmp
out
xor
fcom
scas
loopne
mov
mov
mov
lea
dec
or
out
les
jmp
in
movs
ret
int
(bad)
arpl
call
and
ror
and
and
mov
scas
movs
cdq
push
jno
add
lds
add
das
jmp
mov
fsub
mov
xchg
pop
or
addr16
push
stos
and
and
push
jns
dec
or
ins
and
or
(bad)
stos
js
jle
or
daa
test
mov
loopne
int
jmp
(bad)
jmp
rol
out
mov
lods
push
inc
xor
cli
cmps
add
pop
jbe
unpcklps
inc
js
add
rcl
imul
movs
xchg
mov
rcl
and
dec
sub
test
mov
mov
shl
adc
(bad)
push
pushf
jp
jp
ficomp
fcom
inc
jae
push
mov
pop
add
pop
dec
add
repz
jl
faddp
inc
cwde
push
cli
rcr
inc
out
pop
push
mov
jmp
dec
push
push
xchg
int
rcl
outs
fdiv
retf
push
adc
sub
clc
sahf
sti
cld
and
or
(bad)
xchg
jb
fld
stos
mov
inc
adc
or
cld
clc
out
clc
in
pop
std
xor
sbb
daa
lahf
js
mov
gs
xor
cmp
dec
xchg
jmp
xor
xchg
pop
mov
(bad)
call
mov
shl
test
arpl
pop
xor
jo
xor
frstor
adc
add
pop
mov
fsubr
push
dec
dec
retf
inc
mov
inc
dec
cmp
movs
push
jg
out
cmp
fs
fcmovbe
pop
(bad)
mov
loopne
and
je
jns
mov
iret
dec
push
clc
jns
js
jp
or
lods
cld
loopne
ret
xchg
jmp
ret
out
lds
sbb
repz
xor
ins
pop
sahf
pop
and
sbb
retf
(bad)
aam
iret
push
mov
mov
inc
jmp
add
sbb
cmps
mov
jbe
pop
push
jle
lea
jne
fsub
cmp
daa
add
stc
and
pop
jmp
(bad)
fmul
daa
stc
imul
(bad)
mov
shl
into
popa
in
adc
mov
into
fsub
push
lock
loopne
jl
ss
cwde
mov
stos
mov
pop
mov
iret
outs
lods
int3
mov
pop
pop
pop
push
xor
shr
cmp
dec
sar
cli
out
(bad)
adc
add
clc
pop
sbb
xor
ins
adc
xor
cmp
or
mov
and
je
jge
ret
retf
mov
popf
movs
sub
mov
hlt
shr
repz
mov
push
and
or
aam
gs
or
adc
pop
jo
pop
rcr
xchg
mov
jae
ins
(bad)
fs
push
inc
icebp
dec
sub
aad
pop
inc
loope
retf
push
retf
push
stc
push
adc
ret
push
outs
fwait
stos
cmps
push
sbb
or
stos
mov
mov
xor
das
mov
cmp
mov
sub
push
jl
pop
loope
dec
enter
movs
or
lea
mov
popa
or
je
aad
fdivr
outs
aad
lods
adc
xchg
out
aam
sbb
push
bound
loop
push
(bad)
and
jnp
mov
push
sahf
mov
mov
add
loopne
mov
ss
inc
fs
leave
lahf
jmp
sub
(bad)
sbb
inc
mov
cs
or
lahf
mov
mov
xor
xchg
bound
(bad)
iret
cmp
aas
repnz
dec
pop
test
and
sbb
(bad)
es
fld
sar
and
adc
push
call
nop
lods
sbb
ins
cmp
ror
nop
retf
mov
sbb
scas
ror
push
sar
sub
push
scas
cmp
cli
xchg
fsubr
fld
add
sbb
stos
ins
cli
xchg
in
mov
adc
aaa
sbb
inc
jecxz
cwde
stos
into
jge
push
lods
bound
call
cmp
push
pop
iret
xor
in
scas
fwait
dec
pop
gs
test
sbb
sub
movs
xchg
dec
mov
ja
int3
fst
fcom
aam
nop
sbb
or
test
or
jg
or
call
popf
adc
jmp
mov
int3
iret
mov
out
sub
aad
call
and
pop
pop
jmp
ss
scas
(bad)
or
mov
sbb
(bad)
mov
jl
nop
test
fsubr
cdq
adc
fadd
dec
sub
lock
(bad)
mov
xchg
sub
stos
jg
dec
sub
pop
and
xchg
or
(bad)
or
cmp
xchg
jle
pop
push
pushf
or
sub
mov
fs
cs
outs
xchg
out
out
pop
je
cs
push
in
xor
xchg
cdq
scas
mov
ficomp
sbb
sar
mov
adc
lods
xchg
cs
fstp
xor
cmps
push
das
mov
xor
(bad)
pusha
bound
nop
adc
and
sub
ret
movs
gs
mov
mov
test
jecxz
xchg
cmp
lods
in
push
ins
loop
cmp
jecxz
sahf
cdq
(bad)
call
out
fs
dec
jge
jl
lea
int3
pop
sbb
adc
xchg
or
sbb
or
cmp
xchg
arpl
loopne
clc
es
aam
loopne
mov
and
sub
out
ficomp
lea
aad
les
sbb
pop
stc
lea
xor
leave
push
test
aad
sub
xlat
add
inc
leave
idiv
sub
jl
push
mov
xchg
or
add
xchg
cs
into
test
mov
inc
repz
fsubr
add
xor
lods
cmps
ficomp
adc
cwde
sahf
fsubp
out
xor
(bad)
in
gs
addr16
mov
and
pusha
cmp
and
add
cmp
sub
push
into
adc
call
aam
jl
jo
icebp
or
mov
add
repz
cmp
pop
and
jnp
nop
sub
add
push
or
inc
sbb
int3
stos
test
imul
adc
out
xchg
dec
bound
pop
pop
adc
mov
jne
cmovle
int
xchg
mov
add
xchg
xchg
je
lds
test
push
clc
cmp
inc
mov
and
pop
nop
push
push
inc
push
pop
cmc
sub
and
daa
pop
xchg
pushf
jp
idiv
add
cs
stos
and
inc
(bad)
pop
mov
mov
or
push
cvtps2pd
pop
pop
sbb
and
or
mov
mov
cmc
xchg
push
pusha
mov
adc
pop
es
in
mov
loopne
adc
sbb
retf
mov
pop
jl
(bad)
dec
inc
(bad)
pushf
inc
mov
out
and
push
adc
push
mov
ret
into
adc
xchg
inc
jb
ins
inc
sbb
fcom
inc
mov
sti
pop
or
fsubr
cli
adc
mov
enter
mov
(bad)
outs
dec
inc
pushf
aad
div
aad
sub
xchg
sub
push
pop
loop
imul
jmp
ss
jno
xchg
mov
mov
mov
mov
push
cmps
call
cli
xchg
jp
outs
js
pop
in
and
stos
out
mov
(bad)
xchg
mov
or
and
scas
addr16
push
and
mov
xor
dec
cmc
or
test
out
popa
repz
pop
out
mov
movs
and
mov
cdq
clc
pop
pop
rcl
pop
push
loopne
retf
repnz
sahf
mov
aas
andps
mov
fldenv
popf
jbe
dec
mov
aaa
push
int3
sub
push
dec
jb
sbb
repnz
lods
pop
cmps
adc
pop
jbe
pushf
inc
into
xchg
pop
(bad)
lea
sahf
mov
lock
popa
xchg
shl
jb
jae
lds
mov
ja
push
adc
push
pop
or
pushf
mov
adc
retf
ret
fist
rcr
je
shl
pop
mov
arpl
jmp
mov
iret
pushf
fidiv
das
xchg
shr
push
pop
add
jnp
dec
sub
aas
cmps
mov
dec
lods
into
test
(bad)
out
mov
pop
jle
push
popa
pushf
shl
fdiv
call
ds
add
repnz
push
or
lods
sub
adc
mov
sub
dec
aas
jb
adc
jbe
cli
push
call
mov
into
cmp
jae
es
dec
icebp
adc
sbb
out
xchg
cmc
xor
jne
mov
cmp
retf
inc
dec
mov
xchg
cmc
and
sahf
aad
or
xor
push
jmp
dec
dec
push
shl
push
mov
(bad)
into
inc
repnz
mov
jmp
adc
call
sbb
aam
lock
fwait
push
mov
aad
icebp
pop
fcmovbe
jne
stos
ja
pop
fcmovb
mov
xor
fidivr
iret
cld
ins
loopne
adc
mov
(bad)
mov
mov
std
xchg
add
aas
mov
call
pop
inc
xchg
stos
ror
jo
xchg
or
js
push
je
into
neg
cwde
sbb
push
in
mov
mov
push
lahf
pop
mov
push
push
dec
cmp
sti
jns
ja
fisttp
jl
fldenv
xchg
mov
push
jns
adc
leavew
push
mov
xchg
cmps
mov
xor
ins
sar
mov
push
and
sub
add
or
ins
inc
sti
fxch
in
xchg
mov
fstp
sbb
sbb
rol
dec
ror
aaa
adc
sbb
jo
adc
pop
fbstp
or
inc
in
lea
pop
and
retf
dec
cmp
and
lds
adc
dec
mov
les
pushf
test
ins
jp
xor
(bad)
mov
es
shl
xchg
inc
jb
cmp
xchg
mov
cdq
add
mov
out
retf
xor
jno
xchg
push
cmc
out
dec
addr16
and
dec
mov
mul
jne
sub
stos
aaa
and
nop
or
ja
xchg
pop
in
jae
loope
mov
and
gs
movs
popf
or
sub
neg
jne
std
or
nop
push
cmp
mov
xchg
ss
mov
int
cld
push
arpl
aad
pop
daa
or
adc
repz
iret
pop
inc
pop
into
rcr
(bad)
pop
rcr
xor
mov
or
mov
xor
repz
mov
std
xor
test
scas
repnz
jg
enter
mov
shl
inc
or
jmp
mov
pop
sub
dec
mov
or
sub
icebp
and
sbb
(bad)
es
add
lea
sub
scas
jns
mov
out
add
inc
fist
nop/reserved
xchg
aaa
out
or
mov
mov
xchg
and
xchg
fcomi
push
aaa
outs
push
xor
lahf
ret
pop
fild
add
push
dec
cli
or
jle
comiss
mov
or
dec
scas
dec
xlat
lods
mov
fnstcw
mov
mov
popf
fwait
jg
mov
xchg
push
or
movs
sub
mov
stos
dec
ja
mov
mov
call
mov
(bad)
es
cmps
je
sbb
test
aaa
add
loopne
xor
(bad)
fnsave
aad
mov
inc
and
repnz
cmp
mov
push
test
adc
and
cld
xchg
xor
mov
pop
loope
enter
cmp
mov
push
dec
or
xchg
inc
jne
je
add
outs
jbe
xor
pushf
jecxz
dec
ror
or
mov
cmps
std
into
fimul
es
cdq
push
mov
xchg
xor
(bad)
and
xchg
push
ja
jmp
dec
pop
mov
out
scas
int3
inc
mov
mov
bound
xchg
adc
xor
cdq
jno
jmp
push
jne
mov
(bad)
clc
jl
jmp
inc
mov
push
cmp
and
ror
xchg
xlat
test
sub
iret
movs
fiadd
stos
das
jb
push
stc
sti
dec
cmp
dec
mov
clc
js
mov
xchg
sbb
mov
les
cmp
xor
ss
add
xchg
in
(bad)
cmps
aaa
xchg
clc
jg
mov
push
inc
lods
enter
and
icebp
xchg
loope
mov
aam
popa
(bad)
(bad)
iret
jne
add
test
ret
ds
(bad)
pop
pop
lea
inc
inc
and
lahf
xor
mov
in
push
dec
xchg
adc
pusha
ss
inc
cmc
dec
add
sub
das
jge
sbb
in
mov
inc
xchg
mov
jge
add
xchg
stos
test
jl
pop
test
sub
mov
pop
and
jo
adc
pop
out
dec
pusha
push
cmp
fs
mov
jecxz
sbb
aam
in
es
(bad)
cld
jmp
not
mov
jp
cmp
mov
sub
call
(bad)
in
test
(bad)
push
and
or
inc
sbb
xchg
in
mov
scas
xor
les
loope
mov
sbb
sub
out
into
push
sub
ficom
cmp
dec
out
dec
jb
or
and
scas
add
loope
pushf
pop
data16
and
mov
outs
ficomp
popa
mov
pop
scas
cmp
cdq
mov
pushf
sub
lahf
dec
dec
imul
inc
aas
retf
fwait
in
out
mov
icebp
cmp
inc
xor
test
fstp
lods
mov
push
push
xor
add
shl
out
jp
mov
ja
in
mov
stc
push
or
into
addr16
call
(bad)
adc
cmp
jmp
enter
cmp
leave
push
(bad)
cmp
and
ret
cmp
daa
xchg
adc
and
pop
dec
dec
ror
adc
jle
dec
sub
pop
xchg
outs
stc
pop
sbb
adc
add
cmps
je
int
dec
or
fwait
ins
add
mov
sbb
lock
xchg
js
xchg
jmp
mov
hlt
xor
xor
js
jno
push
daa
cmp
dec
mov
inc
inc
mov
iret
fldcw
push
or
into
xchg
dec
mov
fisubr
hlt
cmp
push
ins
or
jnp
cmps
jno
mov
or
xchg
mov
jl
sbb
test
call
call
(bad)
mov
in
or
rcl
mov
(bad)
scas
rol
call
popa
push
mov
mov
xor
push
mov
test
aad
stc
out
jl
rcr
jl
(bad)
call
or
push
in
pop
jg
mov
ins
rep
jmp
sbb
pop
jb
lods
iret
push
xchg
mov
jae
jbe
mov
xchg
mov
dec
rcr
repz
dec
and
out
pop
and
jmp
push
loop
inc
jge
or
push
mov
hlt
stos
cwde
inc
fisub
outs
xor
loop
ins
pop
ret
int3
sbb
push
dec
jle
cmp
inc
sub
in
sub
jmp
jle
retf
iret
sub
and
iret
mov
mov
fcom
xor
xchg
pop
mov
pushf
aad
or
mov
adc
sbb
xchg
sbb
or
fcom
outs
pop
add
xor
or
(bad)
enter
rcl
add
aam
add
mov
ret
neg
adc
add
nop
daa
mov
mov
xchg
sbb
cli
lea
movs
pop
idiv
dec
mov
cmp
sti
jp
jno
out
inc
fs
jl
dec
and
or
mov
mov
inc
mov
inc
mov
fs
outs
popa
into
aaa
call
and
enter
jo
sub
inc
mov
cmp
dec
or
loop
inc
mov
mov
fisub
daa
out
and
xor
pop
fdiv
loop
call
inc
movs
push
inc
in
pop
cmps
test
add
inc
adc
loopne
sti
leave
out
xor
bswap
sbb
imul
test
dec
out
cmps
stc
sub
mov
shr
out
movs
mov
jae
and
xor
xor
dec
repnz
mov
mov
out
sahf
cwde
cmps
mov
ds
aam
dec
sub
retf
loop
inc
enter
mov
xor
pushf
xchg
cmp
adc
mov
es
rcl
mov
xor
and
fnstsw
bnd
(bad)
push
push
outs
std
ror
push
jg
into
inc
movs
xor
and
(bad)
outs
outs
inc
mov
inc
xor
popa
out
daa
xlat
jecxz
shl
fisubr
out
push
test
sbb
xchg
jbe
sub
ins
xchg
ss
adc
cmp
es
xchg
movs
adc
sub
jmp
(bad)
call
cmp
mov
push
mov
adc
xchg
mov
test
call
jg
and
xor
enter
and
sbb
cmp
aas
(bad)
xchg
out
mov
jne
add
in
pop
cmp
or
dec
ins
mov
call
in
stc
jne
sbb
inc
inc
mov
rcl
mov
pop
lea
jmp
or
jmp
mov
add
fstp
mov
mov
mov
push
sub
arpl
fs
xchg
and
cmc
mov
enter
jmp
or
xchg
xor
add
cmp
jno
push
js
push
pop
cmp
sub
ja
mov
loopne
xor
fist
sub
ds
sub
clc
in
cs
add
hlt
test
push
push
lahf
and
cmp
adc
jo
ja
and
xchg
pop
popa
mov
sub
inc
cmp
add
nop
or
retf
pop
call
xchg
outs
ret
xor
movs
inc
out
in
pop
loopne
mov
adc
out
mov
jg
stos
ins
add
push
cmp
xchg
push
aad
shl
add
loope
xor
dec
jmp
inc
test
inc
les
dec
mov
daa
mov
mov
cmp
cmp
cmc
add
cmp
addr16
icebp
sub
movs
cs
jb
push
jno
aaa
xchg
xchg
mov
in
sbb
xchg
pop
ja
inc
enter
jmp
enter
in
mov
outs
test
fisttp
xchg
inc
ins
inc
ss
jg
rcl
addr16
sub
cmp
xor
cdq
js
imul
xor
lds
inc
pop
cwde
inc
pop
fbstp
iret
test
mov
nop
sbb
sub
sahf
(bad)
push
jmp
imul
jp
mov
cmps
push
cmp
xchg
jle
(bad)
aaa
mov
cdq
in
mov
clc
push
mov
or
ja
xlat
mov
rcl
test
ret
aas
mov
aas
ins
rol
ror
rol
(bad)
mov
sbb
ss
adc
retf
xchg
loopne
ds
int
test
cld
pusha
addr16
jmp
mov
sbb
jns
xchg
mov
rcl
mov
mov
rcr
cdq
or
lods
lahf
sub
xchg
sbb
aas
sti
add
cwde
add
sbb
ja
sub
mov
add
retf
sbb
into
and
dec
(bad)
in
sub
or
jmp
inc
pop
sbb
cdq
cli
rep
les
adc
fs
(bad)
push
ret
add
mov
jbe
mov
stc
bound
(bad)
and
mov
pop
add
pop
jo
and
xor
aam
int
(bad)
mov
mov
xor
out
fnstsw
test
fnstsw
repz
enter
adc
mov
sbb
syscall
int3
add
sti
hlt
aad
mov
or
add
mov
push
and
xlat
xchg
shl
adc
jecxz
lods
sbb
imul
pop
xlat
loop
clc
pop
dec
cmp
mov
test
mov
sub
adc
push
adc
lea
popa
pop
sbb
xor
sbb
and
mov
mov
mov
pop
pop
sbb
add
inc
int
mov
mov
mov
sub
pop
pop
push
in
lahf
jg
mov
ror
mov
fdiv
ins
lods
push
xchg
xchg
add
fmul
ds
pop
in
jns
cmp
in
pop
cdq
pop
mov
retf
xor
inc
rol
pop
jg
add
mov
rcr
mov
addr16
aam
dec
pop
mov
adc
and
or
shl
popf
rcr
dec
leave
sbb
add
sbb
popf
jns
xchg
push
ficomp
mov
daa
or
test
sti
xor
sub
pop
jecxz
jmp
stc
dec
inc
inc
mov
(bad)
mul
add
stc
fild
mov
into
(bad)
mov
cmp
idiv
sbb
sbb
xchg
in
das
mov
add
jbe
mov
jecxz
cmp
iret
(bad)
lods
das
pop
sbb
mov
mov
clc
lahf
sti
popf
fwait
loop
pop
cmps
call
aam
mov
stos
stos
or
ret
out
dec
inc
jne
and
mov
popf
push
in
nop
lock
test
mov
out
mov
popa
rcr
aad
iret
jnp
clc
(bad)
cmc
push
imul
dec
int
cmps
mov
jl
rcl
(bad)
dec
push
add
cmps
sbb
cmp
cmc
cmp
sub
int3
push
jecxz
aad
leave
aaa
ins
popf
fs
mov
mov
(bad)
push
and
dec
test
mov
sar
scas
fsubr
or
cmc
sub
ficomp
cmps
movs
rcl
xor
push
ins
inc
cmp
or
sbb
je
inc
dec
ja
outs
pop
cmp
or
repz
retf
(bad)
xlat
in
sbb
jns
sub
push
jle
popf
xor
aas
cmp
stos
scas
cmps
inc
(bad)
xor
jge
int3
pushf
pop
leave
or
and
mov
loopne
mov
lea
std
sub
mov
push
fist
and
sub
in
out
ins
mov
out
fwait
cmp
adc
pop
mov
or
or
(bad)
sbb
adc
add
pop
mov
adc
cli
js
js
rol
test
adc
aas
mov
cmps
outs
add
push
scas
dec
adc
(bad)
adc
or
leave
adc
in
in
mov
call
mov
adc
add
cld
in
aas
(bad)
xlat
sbb
sub
add
iret
cmc
into
ret
rol
jmp
retf
inc
dec
popf
jno
sbb
mov
sbb
cld
mov
retf
push
mov
in
imul
xlat
test
jno
aad
fyl2xp1
sub
rcl
mov
popf
pusha
in
cmps
pop
stos
sbb
jecxz
inc
dec
adc
sbb
cmp
jp
enter
js
pop
pop
sub
pop
push
fadd
popa
mov
push
push
lods
add
movs
test
leave
inc
xor
clc
mov
jecxz
rcr
inc
jne
pop
gs
cmps
push
xchg
and
jmp
call
leave
xor
dec
pop
pop
int
mov
mov
(bad)
out
pop
xor
jmp
sub
cmp
pop
ja
test
xchg
ins
(bad)
fidiv
jne
pushf
and
push
adc
test
mov
pop
cmp
push
aam
mov
fisubr
sub
mov
in
sub
mov
loop
cwde
bound
scas
loopne
pop
pop
push
push
add
xor
jnp
out
(bad)
repz
mov
xor
add
outs
imul
lea
pop
shl
ds
adc
aad
adc
or
(bad)
and
les
dec
pop
not
(bad)
loopne
fldcw
and
je
inc
addr16
mov
mov
push
shl
dec
xor
add
in
push
(bad)
cmc
sbb
sbb
xchg
xchg
scas
sti
ficomp
(bad)
add
inc
jmp
jns
push
inc
cmp
mov
xor
xor
dec
mov
jp
outs
retf
shl
mov
inc
mov
inc
repz
sub
adc
pop
adc
mov
pop
(bad)
cdq
mov
ins
ror
xchg
std
loope
retf
add
add
sbb
sub
mov
xchg
add
jmp
jo
rcr
sbb
lds
jb
mov
and
shl
xor
pop
jmp
stos
adc
leave
jo
shl
sbb
pop
popa
iret
adc
cs
pop
pop
shr
int3
adc
(bad)
jnp
sar
or
es
mov
add
(bad)
mov
or
mov
mov
mov
adc
fisubr
mov
not
mov
add
dec
add
and
stc
clc
lock
aad
mov
sti
inc
or
cld
stos
inc
mov
sbb
jae
(bad)
fadd
and
mov
fimul
lahf
push
xor
dec
jo
cmp
sub
jmp
daa
xor
mov
ret
inc
mov
mov
les
pop
mov
fwait
ret
add
lds
std
or
mov
fxch
dec
xchg
xor
pop
or
mov
rcr
mov
xor
(bad)
adc
les
mov
aaa
imul
(bad)
sbb
sar
jp
mov
pop
and
or
scas
mov
in
loope
inc
mov
pop
scas
call
and
mov
loope
pop
jecxz
xor
movs
pop
jbe
jo
jmp
jmp
mov
ja
push
push
pop
jae
sbb
bound
je
stos
imul
xchg
int
and
arpl
jbe
jmp
pop
test
addr16
(bad)
mov
loopne
outs
xor
into
repz
lods
ja
pop
xor
jb
or
stc
lea
mov
sbb
ret
fidiv
loopne
pop
mov
pop
repz
pop
mov
adc
sub
cld
scas
push
pop
scas
icebp
mov
adc
daa
dec
pop
cld
sar
mov
arpl
pop
sbb
(bad)
jl
add
jbe
sar
fcom
adc
jno
inc
test
popa
addr16
jae
and
ins
sbb
and
inc
les
out
pop
xlat
or
add
xor
aaa
gs
sbb
pushf
mov
lahf
mov
sub
xor
(bad)
fnstsw
shr
and
stos
xchg
popa
inc
(bad)
fxam
fs
cmp
in
jecxz
and
and
or
pop
nop
pop
cmp
movs
lods
lds
iret
add
mov
imul
and
in
inc
sub
std
out
scas
jo
sbb
xor
cld
stos
addr16
jno
or
push
add
cmp
push
int
cmc
pushf
ficom
ja
inc
lods
lds
sahf
xchg
fs
mov
popa
push
repz
sti
fdiv
(bad)
add
mov
jmp
std
mov
leave
je
xchg
js
xchg
ja
enter
xlat
mov
cmp
loopne
adc
repnz
cmc
pop
jge
cmp
sbb
popf
popa
ficomp
mov
shl
dec
arpl
outs
mov
mov
xor
jnp
sbb
add
adc
test
in
and
mov
and
push
dec
push
dec
outs
in
mov
and
cmp
push
enter
push
mov
push
ret
and
fsin
cmp
mov
inc
pop
add
fld
jge
lahf
mov
mov
fidiv
jnp
xor
mov
inc
pop
and
mov
pop
jmp
mov
call
dec
and
sbb
fisttp
xchg
lds
out
adc
scas
mov
outs
test
gs
jae
dec
mov
lock
jecxz
mov
adc
and
mov
add
jle
cmp
pushf
dec
mov
es
(bad)
scas
adc
or
jae
(bad)
mov
sub
lods
add
les
test
in
dec
mov
(bad)
sbb
sbb
je
scas
inc
nop
aam
stc
mov
push
push
fldpi
out
pop
retf
scas
mul
ins
lahf
mov
push
inc
mov
xchg
sub
push
addr16
sbb
add
dec
mov
mov
xchg
fadd
inc
out
pop
fdivp
pop
mov
dec
ins
sbb
push
mov
int3
and
(bad)
adc
repz
pop
inc
mov
sub
sub
arpl
cmps
xchg
out
inc
aad
sub
xchg
addr16
ror
sub
sbb
daa
dec
cmp
loop
test
inc
jp
cwde
loope
hlt
push
or
sbb
mov
fadd
xor
jmp
pop
lahf
test
or
push
ds
(bad)
aad
call
cmp
mov
or
sbb
stos
sub
in
adc
xor
jmp
ja
(bad)
fstp
mov
sub
jg
aad
js
push
popa
mov
and
test
nop
cs
lock
fwait
mov
outs
jge
cld
push
mov
sub
jnp
mov
nop
imul
cmp
jae
mov
neg
jo
cs
cmp
addr16
mov
dec
nop
je
mov
and
test
sbb
dec
lds
cwde
call
pop
bound
mov
xchg
mov
std
xchg
iret
jmp
mov
add
xchg
ret
add
xor
ret
pop
ror
scas
cmp
xchg
icebp
mov
aam
movs
cmps
in
cmps
int3
cwde
adc
les
push
mov
leave
pop
dec
xchg
mov
movs
mov
fnstsw
lea
sub
pop
inc
mov
lahf
mov
in
dec
add
sub
ins
mov
pop
ja
test
push
stos
or
mov
cmps
(bad)
lock
mov
mov
popf
call
mov
shl
icebp
mov
pop
scas
or
cmp
sbb
in
cmp
in
leave
outs
outs
dec
test
mov
daa
fidivr
(bad)
sbb
or
mov
bound
sub
cmp
mov
aaa
pushf
les
loopne
fldcw
ret
or
cmp
mov
or
cmp
ins
dec
jnp
mov
push
iret
jmp
cmps
test
pop
lods
jo
stc
pusha
mov
add
pop
sbb
cmp
jns
retf
iret
mov
out
fwait
les
dec
push
ss
popf
and
sub
test
ins
xor
ja
fsub
sbb
xlat
(bad)
bound
cmps
mov
dec
add
pop
cmp
out
cwde
mov
and
out
mov
dec
cmc
aas
fnstenv
sbb
pusha
mov
lahf
fsin
bound
(bad)
addr16
xchg
bsf
mov
retf
loopne
out
(bad)
sar
xor
shr
ret
xor
dec
or
inc
sbb
aaa
inc
mov
cli
xor
cmps
xchg
mov
cdq
jmp
adc
dec
or
sbb
pushf
neg
out
adc
mov
stc
jno
xchg
jae
call
adc
aas
jmp
adc
std
cmp
retf
jnp
clc
lds
(bad)
aad
retf
int3
(bad)
out
(bad)
cmc
aaa
or
add
mov
outs
add
dec
icebp
push
call
cmp
sbb
mov
je
cli
icebp
fwait
stos
aas
jle
inc
sub
in
mov
xchg
xchg
pop
mov
and
call
fsubr
loopne
cmp
sub
mov
sub
push
xchg
fld
in
icebp
lds
outs
rcl
repnz
sbb
dec
jle
rcl
xchg
or
or
mov
int
cmps
adc
retf
cs
clc
dec
repnz
sub
out
aad
ins
sub
jne
xor
(bad)
mov
std
hlt
je
add
sbb
mov
(bad)
cmp
call
mov
sbb
es
sti
jb
xor
outs
pop
inc
ret
enter
fnstcw
push
hlt
xchg
push
repz
push
movs
mov
rcl
loopne
and
out
aas
test
mov
inc
ret
movs
jmp
or
push
repz
xor
xchg
je
cmp
test
xchg
adc
call
jmp
sub
mov
out
lea
inc
jns
sbb
neg
mov
gs
lahf
push
std
in
jecxz
pushf
cmp
std
cli
or
mov
or
inc
sub
fild
pop
daa
test
xor
xchg
sbb
xchg
jecxz
xor
mov
(bad)
xchg
push
cdq
cdq
xchg
add
shr
push
outs
aaa
pop
cmp
or
sbb
jbe
and
push
push
out
jg
loop
dec
mov
mov
mov
jnp
aas
dec
das
aam
pop
aas
and
sbb
or
fld
push
neg
hlt
jle
pushf
stos
lods
ins
out
push
ds
sub
cmp
add
mov
xor
sub
fsubr
push
frstor
lahf
pop
dec
and
pop
int3
test
adc
cmp
outs
xchg
lahf
add
sub
sub
adc
sbb
add
xor
pop
out
add
mov
cmp
rol
jno
fcmovnb
push
std
cs
ins
xor
mov
mov
ret
mov
cwde
and
ror
stos
mov
and
push
popf
fcmovnb
in
mov
push
mov
pop
cmps
dec
and
mov
outs
data16
xchg
pop
bound
jb
call
inc
in
push
pop
scas
imul
inc
stos
mov
xor
inc
in
mov
jmp
outs
mov
imul
call
jbe
repz
imul
sub
xchg
fs
imul
test
pop
fnsave
out
jb
ins
pusha
(bad)
fild
mov
mov
sahf
popf
int3
cmp
dec
push
mov
cwde
clc
push
cmp
pop
adc
jl
jne
mov
cmps
sbb
stc
adc
sbb
lock
dec
outs
aaa
push
add
fwait
stos
or
mov
adc
loop
dec
dec
addr16
bound
jo
jmp
shr
mov
sub
popa
mov
shl
mov
mov
out
pop
daa
xchg
fdiv
push
jecxz
(bad)
(bad)
lahf
xchg
call
push
add
jno
sub
pop
mov
dec
fild
pushf
jns
pop
push
sahf
cmp
outs
jmp
cmp
mov
or
sti
mov
ja
jle
adc
jl
sahf
push
mov
(bad)
or
jmp
ss
xchg
in
(bad)
xchg
fwait
test
jp
sub
inc
sti
outs
repnz
lea
sbb
adc
out
out
adc
mov
pushf
mov
leave
(bad)
and
jmp
cs
push
std
push
(bad)
movs
xchg
adc
or
mov
leave
add
test
ret
outs
pusha
jmp
out
or
loop
pop
mov
pop
or
add
add
xchg
std
fdivr
sub
jnp
lea
sub
push
jge
push
sbb
sub
add
call
jmp
ds
mov
mov
not
mov
sahf
gs
ror
les
(bad)
ja
sub
dec
cmps
adc
push
cmp
cmp
push
cmps
test
sahf
lahf
(bad)
iret
cmp
test
adc
jl
xor
nop
inc
mov
out
int
test
sbb
jge
adc
and
mov
mov
out
mov
stos
aas
pop
dec
inc
mov
push
add
data16
nop
loope
sbb
mov
and
jns
sti
jbe
cmp
ret
fldcw
cmp
and
pop
or
or
dec
mov
and
jnp
push
imul
xchg
mov
test
retf
sbb
sub
push
inc
test
xor
push
movs
sahf
mov
mov
sbb
nop
dec
fcmovnb
test
pcmpgtb
sub
mov
cmp
cmp
cmp
es
imul
cld
scas
shl
cmps
scas
out
jp
test
lahf
dec
lock
movs
test
jl
cld
mov
in
adc
outs
int3
pop
ror
pop
sbb
xchg
stos
enter
sub
xor
push
sbb
push
jne
or
jle
in
cmp
jmp
dec
aaa
sti
out
pop
sub
cmps
ins
sbb
inc
and
xor
xchg
cli
rol
or
mov
sbb
and
cmp
xchg
ss
stos
test
ss
call
push
pop
jmp
jl
or
mov
sbb
mov
lods
fidiv
dec
lar
mov
push
outs
jbe
bswap
adc
sbb
cwde
dec
lods
repz
popf
jp
xchg
jle
pop
push
leave
add
mov
(bad)
icebp
mov
(bad)
sub
mov
add
in
or
xor
in
aam
mov
adc
ret
jmp
pop
jg
jp
and
and
int
jne
lahf
pop
test
cld
xor
pop
scas
cmc
push
gs
push
int
movs
or
lods
push
xchg
mov
mul
cmp
mov
lea
xor
xchg
call
leave
inc
pop
xchg
xchg
adc
mov
push
dec
cdq
stos
ins
imul
shr
and
cwde
and
dec
dec
cmp
dec
dec
xchg
mov
imul
jmp
inc
mov
aaa
mov
jno
and
outs
xchg
cmp
push
add
xchg
pop
mov
pusha
test
jb
mov
rcl
les
(bad)
dec
neg
test
inc
push
out
jmp
out
sbb
out
lahf
pop
jecxz
pop
int3
mov
mov
xor
in
outs
xlat
hlt
mov
pop
es
std
push
xlat
in
inc
jns
movs
dec
ds
je
adc
or
(bad)
arpl
adc
out
fisub
adc
inc
push
fdiv
add
push
adc
popf
dec
mov
add
pop
inc
aad
fwait
ins
out
imul
cdq
je
bound
(bad)
cdq
cdq
ror
and
aam
xlat
popa
adc
add
sub
adc
out
mov
inc
mov
dec
or
add
iret
stc
mov
and
sbb
addr16
popa
sub
dec
push
inc
arpl
xchg
shr
xchg
call
aam
mov
xor
mov
icebp
hlt
sbb
daa
mov
mov
mov
dec
inc
pop
mov
iret
pushf
ss
pop
push
mov
xchg
in
or
jbe
lock
cmp
sub
mov
add
push
mov
push
ds
inc
push
(bad)
jo
out
enter
pop
sub
jae
je
fwait
ror
out
inc
loopne
(bad)
sbb
dec
or
xchg
inc
jp
add
aas
stos
sub
and
aam
xchg
mov
das
sub
js
cmp
in
mov
loop
xchg
in
push
popa
dec
dec
push
adc
cmps
inc
pop
xlat
addr16
sub
adc
out
fsubr
sub
push
and
jno
sbb
rcl
pop
xor
aaa
shl
mov
mov
enter
fsubr
or
xlat
movs
ja
lods
jae
(bad)
(bad)
push
and
enter
xchg
cmp
ret
xor
and
add
and
repz
leave
fs
dec
das
call
or
shr
cmp
rcl
add
cdq
test
sbb
sar
sbb
inc
pushf
inc
mov
loopne
or
outs
mov
pop
sti
cmp
mul
add
xor
cmp
retf
add
pop
add
or
sbb
sahf
cmp
clc
sbb
cmp
xlat
add
out
scas
jno
push
dec
lods
sbb
clc
jmp
mov
fsubrp
cs
mov
neg
mov
(bad)
inc
aam
rol
lds
cmp
dec
jo
adc
jmp
add
sub
iret
and
sub
addr16
sbb
add
into
mov
dec
or
mov
cmp
xor
loop
jmp
cmp
and
js
sbb
mov
xor
jno
fadd
push
lods
inc
pop
jmp
ret
in
ret
inc
inc
jne
jle
xchg
inc
sbb
popf
dec
iret
imul
arpl
fs
movsx
xor
jle
jmp
xor
inc
pop
(bad)
sti
dec
add
pop
mov
xchg
dec
retf
or
mov
sbb
fidivr
jle
xlat
out
cwde
test
pop
sbb
das
enter
or
nop
fld
outs
cmp
add
push
mov
nop
dec
cmps
jno
pop
jnp
movs
fild
sbb
test
mov
xor
adc
sbb
mov
sub
sti
pop
sar
jno
dec
jnp
mov
aam
mov
cmps
mov
retf
sbb
ss
fadd
mov
or
sbb
test
sti
pop
movs
ss
jecxz
pusha
xchg
pop
push
mov
add
push
push
sahf
cmp
cli
cmps
cli
in
xchg
jae
icebp
retf
push
in
cwde
sbb
ins
js
into
xchg
inc
pushf
ret
fcomp
and
in
adc
movs
or
push
xchg
adc
push
daa
call
adc
mov
ret
cmp
mov
arpl
fs
jb
fs
jp
sbb
rcr
jnp
shr
mov
mov
outs
ret
int
pop
int
dec
shl
fistp
cmps
sub
jne
and
mov
(bad)
cmp
xor
popf
pusha
pusha
mov
mov
sbb
push
(bad)
and
ins
daa
jl
mov
adc
ret
pop
mov
fiadd
add
cmp
pushf
shr
loopne
fsubr
inc
leave
mov
cmps
push
mov
jnp
adc
int3
sbb
gs
fidivr
out
cmp
daa
mov
xor
call
movs
jge
arpl
push
bound
ret
add
sahf
pushw
das
mov
scas
pop
jno
inc
mov
leave
or
stos
sub
adc
dec
in
xchg
or
adc
shl
mov
jle
cwde
ds
jb
xor
mov
iret
sub
mov
or
fisttp
mov
push
stos
cmp
add
fwait
in
or
xchg
ret
ja
aaa
mov
or
or
cmc
inc
and
sub
addr16
(bad)
shl
or
adc
push
clc
pop
mov
enter
xchg
mov
mov
push
adc
gs
stos
mov
cmp
add
jecxz
in
and
imul
add
cwde
test
retf
loop
lahf
add
ins
mov
sar
push
sahf
and
repnz
and
aam
mov
arpl
and
mov
pop
cmp
cmp
sbb
pop
ja
mov
loopne
arpl
xchg
or
adc
js
sbb
xchg
cmp
ror
or
rcr
or
outs
jbe
jno
(bad)
daa
aaa
enter
push
jecxz
dec
and
dec
mov
dec
dec
jp
mov
gs
retf
mov
cmp
pop
gs
mov
cmc
inc
mov
xor
or
or
mov
pop
repnz
in
test
daa
popa
and
test
jne
inc
xor
or
fwait
pop
ret
xchg
xchg
and
imul
push
adc
push
jae
xchg
call
lock
shr
xor
inc
lods
dec
hlt
scas
icebp
scas
mov
sar
pop
outs
stos
repz
dec
push
repz
cmp
ds
test
mov
mov
fild
xor
mov
jne
(bad)
(bad)
jo
xchg
je
dec
pop
loop
or
sub
(bad)
xor
stc
sbb
ret
or
sbb
cli
mov
imul
xor
add
pop
outs
ds
adc
add
lea
mov
pop
mov
add
lock
adc
call
sbb
add
xchg
mov
dec
mov
lods
jmp
mov
nop
sbb
int3
call
mov
or
dec
push
bound
fild
or
sbb
movs
xor
xor
add
push
movs
out
pop
test
inc
xchg
fsub
jmp
call
jae
add
push
push
retf
dec
mov
movs
sub
popf
fdiv
adc
jl
cmp
add
or
mov
sub
xchg
iret
imul
adc
(bad)
dec
mov
stos
push
call
mov
cmp
cwde
add
mov
repz
xor
je
fisubr
push
or
add
jecxz
sti
outs
push
mov
repz
mov
leave
mov
loop
or
(bad)
cli
xlat
add
mov
xchg
sub
push
or
dec
add
addr16
popa
aad
call
mov
push
mov
pop
movd
push
sbb
movd
stos
bnd
lea
cmps
jb
ss
lods
jmp
in
cmps
je
in
mov
aaa
sub
lock
repz
mov
add
push
clc
dec
lahf
push
mov
gs
xchg
pushf
in
repnz
shl
cld
sub
add
movs
inc
mov
dec
push
add
loop
mov
lods
pop
xor
test
mov
lods
fild
sub
cmps
mov
xchg
adc
sub
jge
ds
sub
mov
push
int
xchg
inc
mov
push
mov
fs
fidivr
push
adc
lods
mov
push
lds
fwait
cmp
test
inc
sahf
aaa
sahf
xchg
je
das
loopne
test
mov
adc
daa
pop
push
mov
adc
fimul
out
pop
jno
xchg
mov
aam
mov
mov
enter
cmps
jb
cmp
mov
or
js
test
push
mov
(bad)
sahf
iret
mov
mov
cmp
out
xor
cmps
mov
mov
setle
pop
aam
call
xchg
fwait
xor
int3
sub
jmp
stos
xchg
outs
dec
ror
fnstenv
add
sbb
adc
test
mov
ins
xor
repnz
mov
xchg
sub
adc
xlat
and
push
cmps
pop
sbb
pop
and
cmp
xor
fiadd
pushf
pop
outs
add
dec
dec
mov
repnz
xor
fisubr
add
mov
mov
cs
imul
ds
fld
es
cmp
or
add
adc
jae
ins
shl
call
pop
pop
xchg
and
retf
or
ret
pop
int
jae
popa
mov
jo
mov
mov
mov
sbb
mov
in
add
mov
lods
cmp
cmps
mov
in
adc
out
hlt
mov
jb
rcr
iret
aam
and
sub
clc
mov
adc
sahf
in
jnp
leave
dec
lds
lods
mov
sub
repz
cld
jne
int
jecxz
sbb
mov
push
jmp
push
dec
js
mov
xor
pop
stos
aaa
retf
les
int
dec
jp
icebp
xchg
mov
xor
adc
fistp
lahf
pop
pop
pop
cmp
(bad)
shl
inc
or
cmps
sbb
adc
mov
cmp
addr16
sub
cwde
mov
mov
aad
dec
inc
cmp
in
cmp
pushf
cmp
mov
(bad)
icebp
js
pop
ret
movs
daa
pop
mov
adc
fisttp
sub
cmp
inc
repz
sub
sub
(bad)
shl
mov
mov
stos
add
cmc
(bad)
out
xchg
ret
mov
(bad)
jne
add
fild
hlt
mov
mov
cs
xchg
dec
movs
or
js
jl
cmps
clc
icebp
mul
dec
mov
mov
pop
rcl
cmp
shl
push
loope
retf
fldenv
je
popa
fcmove
shl
mov
int3
jl
push
sahf
add
cmps
inc
push
fcom
je
out
cdq
lds
dec
sbb
ret
(bad)
rol
mov
cdq
ret
popf
sbb
jl
retf
add
fs
cwde
(bad)
cdq
(bad)
rcl
inc
loope
scas
cmps
sbb
int3
stos
mov
pushf
popf
push
jl
mov
faddp
mov
cmp
push
xor
js
and
mov
mov
add
push
cmp
loope
cmc
fisttp
rcl
rcr
push
sub
clc
iret
inc
mov
fst
push
cmps
add
addr16
mov
repnz
lds
xchg
imul
in
shr
lods
xlat
fstp
sub
xchg
enter
inc
(bad)
sub
sbb
mov
in
jbe
pushf
push
loop
xchg
(bad)
js
or
test
fistp
int
aam
(bad)
mov
pop
add
mov
in
jbe
fcomp
sbb
jmp
cmp
ins
jo
outs
test
retf
movs
xchg
popa
(bad)
lods
call
mov
cmp
jmp
add
mov
and
dec
jne
jmp
xor
jmp
jo
sub
dec
lock
cld
xchg
test
add
shr
xchg
jo
loope
inc
mov
cmp
jl
lahf
push
dec
xchg
jecxz
sti
lods
or
out
sar
es
mov
iret
push
and
mov
xor
cmp
mov
push
rcl
fwait
dec
shl
shl
imul
xor
les
enter
sub
out
stos
inc
jg
mov
jbe
adc
xor
adc
fiadd
in
pop
xor
int3
retf
int3
or
cmps
paddsw
test
mov
mov
data16
outs
out
jo
les
pop
mov
mov
pushf
cmp
push
and
adc
mov
xor
jmp
xchg
retf
test
jecxz
inc
sbb
and
xor
inc
adc
jbe
cmps
rcl
and
test
loop
out
mov
movs
in
dec
jmp
mov
call
call
pop
pop
js
xor
push
mov
retf
pop
into
xchg
add
mov
or
and
pop
ja
ins
inc
jmp
fs
in
fst
adc
aaa
repnz
in
push
aad
test
jnp
pop
pop
jo
cmp
mov
mov
sub
pop
xor
in
and
movs
fild
mov
vandnps
sbb
add
dec
dec
fistp
adc
push
stc
jl
lea
inc
xchg
dec
sbb
mov
mov
out
inc
out
and
fild
arpl
(bad)
mov
mov
ror
test
imul
jg
stos
or
cld
jo
mov
sahf
aas
add
and
pop
in
lea
mov
xor
fsub
ss
jo
cld
mov
xlat
xor
add
jns
cli
jmp
jb
push
and
cmp
sahf
pop
lods
repz
lahf
xor
or
retf
xchg
sub
les
pop
inc
ins
or
gs
cdq
push
sub
cmp
outs
int3
test
call
adc
mov
outs
frstor
lea
jbe
in
es
(bad)
push
xchg
push
and
imul
ins
(bad)
(bad)
xchg
xor
jnp
popf
outs
push
jb
aaa
push
retf
cmp
or
cmps
adc
mov
div
push
jp
cmps
fdiv
and
push
(bad)
clc
mov
out
ds
push
mov
out
test
push
enter
and
xor
or
mov
lea
lds
popf
sahf
add
lahf
xor
jb
scas
push
test
adc
push
aaa
or
mov
sub
jg
add
inc
sar
xchg
aam
lods
mov
jmp
(bad)
jmp
add
cld
test
in
push
in
adc
fldenv
pop
dec
call
aas
out
add
out
gs
add
(bad)
mov
xchg
lahf
into
mov
or
push
mov
mov
leave
out
mov
xor
ins
mov
data16
les
int3
data16
out
and
shl
push
nop
mov
pop
fcomp
xchg
xchg
pop
call
inc
icebp
cmp
ins
inc
movs
jne
add
cdq
xlat
xchg
js
in
scas
mov
mov
ret
xor
repz
mul
cmps
add
pushf
sbb
hlt
movs
cdq
out
dec
lods
adc
mov
mov
pop
fwait
jmp
cmp
pop
adc
xor
cwde
pop
push
shr
popf
xor
push
xchg
fst
mov
jo
(bad)
pusha
add
sbb
out
cwde
inc
sub
loopne
mov
pusha
int3
dec
jnp
xchg
lea
nop
add
bound
mov
cmp
push
mov
cmp
pop
into
mov
aas
mov
iret
icebp
dec
pusha
jmp
int3
in
das
enter
push
add
pop
lea
je
sbb
jg
xchg
push
xchg
jg
mov
mov
or
xchg
loope
das
dec
push
js
xchg
(bad)
leave
jnp
cmp
int3
lods
jne
cmp
adc
cmp
scas
rcr
xchg
hlt
lds
fimul
lock
call
(bad)
fmul
cmp
stos
push
call
fbstp
ins
push
pop
gs
cmp
sti
ins
fist
rcl
add
cmps
or
sub
jp
push
mov
mov
dec
out
lds
lock
cmp
dec
mov
or
inc
pop
shr
cmps
outs
outs
sbb
mov
or
in
push
inc
dec
mov
mov
movs
mov
cli
adc
mov
jo
out
push
dec
out
ins
fimul
or
add
and
and
add
jo
shl
mov
jp
enter
icebp
push
mov
cmp
scas
pop
popa
cmp
mov
inc
(bad)
cs
test
add
inc
mov
cmp
mov
popa
add
dec
cld
ja
jb
stos
fistp
movs
pop
xor
mov
fadd
jb
cdq
fsub
xor
sub
mov
gs
fdivr
retf
jbe
sbb
inc
lock
ins
sub
add
mov
mov
retf
xchg
test
imul
inc
stos
cmps
inc
data16
add
mov
jle
sti
ins
sub
das
push
sub
mov
xor
repz
xchg
shl
cmp
dec
sti
jmp
call
xchg
xchg
jbe
xchg
sub
add
cs
dec
mov
xchg
mov
sbb
sub
xchg
adc
pusha
pop
cmp
aaa
scas
ret
inc
lea
inc
cmps
test
pop
(bad)
outs
dec
js
loope
mov
inc
mov
mov
mov
addr16
stos
adc
push
pop
adc
out
mov
pop
mov
mov
das
rcl
sbb
mov
xor
pop
mov
fnstenv
call
les
mov
ss
xor
scas
nop
shr
sub
jl
pop
push
jbe
push
jp
sar
ror
cmp
(bad)
loopne
test
aad
jge
or
nop
xlat
mov
lods
dec
out
fstp
pop
jb
mov
mov
pop
out
push
or
in
pop
mov
loop
push
test
jae
cmp
dec
and
mov
xor
out
inc
inc
push
aas
test
ds
push
(bad)
mov
dec
les
push
mov
and
and
mov
jb
das
xchg
ds
or
push
sbb
adc
xchg
(bad)
mov
ret
jmp
outs
jb
sub
les
std
js
mov
pop
or
out
sti
add
outs
loop
jns
jge
cdq
das
cli
out
es
mov
pop
pop
mov
mov
dec
add
mov
jl
aam
lahf
jbe
pop
cmc
into
and
add
mov
(bad)
je
lea
call
and
add
test
mov
(bad)
sub
pop
out
pop
add
pop
dec
jp
mov
add
rol
push
or
push
mov
inc
das
mov
push
dec
lock
or
sti
leave
xchg
add
mov
mov
jecxz
xor
sub
ins
scas
pop
test
nop
retf
mov
adc
loopne
popf
jmp
xchg
repnz
sbb
lea
and
retf
push
cs
fisubr
pop
imul
cmps
mov
cmps
or
cs
(bad)
test
jns
mov
sar
xor
push
stos
push
imul
lahf
mov
push
cdq
sub
jmp
push
icebp
or
fst
cs
fadd
cmp
sbb
inc
out
xor
sbb
or
mov
push
sbb
popa
and
xor
or
lds
ja
stos
jle
adc
sbb
jns
test
(bad)
xlat
and
aaa
imul
imul
cs
xchg
out
stc
cs
xchg
test
cmp
clc
pushf
imul
stos
sub
push
xchg
inc
movs
dec
fdivr
sub
jo
fsub
dec
adc
jmp
mov
push
jns
jo
out
adc
fs
ja
pusha
adc
nop
shr
in
adc
dec
outs
add
test
fwait
mov
leave
xor
std
pop
xchg
jmp
pop
dec
fdiv
ds
fnsave
jne
sub
mov
add
bound
dec
pop
cmp
adc
xor
adc
aam
in
ins
scas
popa
mov
dec
popa
and
lods
sbb
jp
in
xlat
push
ds
inc
ret
and
pop
adc
sbb
pop
fld
lock
popf
xor
xchg
aas
nop
hlt
push
ja
shl
push
jne
sbb
jecxz
(bad)
std
jnp
mov
mov
adc
inc
mov
lods
int
dec
fisttp
cmp
fsubr
ficom
ja
popa
lea
into
sub
jl
ror
dec
cmps
adc
int
cmp
or
push
repnz
push
push
sub
mov
cmp
adc
icebp
xor
jo
push
sti
xor
mov
call
rcr
ins
lods
cwde
xlat
mov
jb
mov
mov
jecxz
inc
int3
loop
jp
push
pop
fild
mov
inc
data16
in
imul
pop
push
jns
test
or
sbb
push
xor
cmp
int
mov
ror
bound
sub
xor
jl
jne
xlat
cld
sub
jae
mov
popa
out
sti
fild
xchg
lods
call
or
in
jno
icebp
dec
iret
and
xchg
xchg
push
pop
in
fdivr
or
and
nop
into
iret
dec
cmp
ficom
xor
and
cmps
cmp
xchg
repz
mov
push
lods
inc
sub
add
mov
or
mov
cdq
in
cmc
mov
xchg
or
cmp
mov
pop
test
mov
stc
inc
xchg
adc
cmp
popf
in
inc
test
inc
test
add
inc
fwait
mov
test
loopne
xor
scas
movs
xchg
push
shl
scas
je
jns
pop
out
and
mov
jp
jmp
cmp
ret
repnz
and
xor
imul
xchg
jae
push
jg
sbb
or
aaa
shl
push
outs
pop
pop
xor
xlat
clc
xor
inc
test
fadd
iret
imul
ss
mov
push
cmp
icebp
xor
inc
xor
jmp
sub
pop
test
mov
pop
cmp
scas
or
mov
fistp
dec
sbb
clc
dec
lods
or
scas
mov
dec
add
push
push
xchg
mov
or
jp
aaa
jmp
int3
mov
daa
adc
outs
iret
sub
stc
in
dec
mov
push
neg
inc
fdivr
xchg
mov
push
or
std
pop
aad
ror
ins
jo
test
outs
arpl
xor
(bad)
fiadd
fild
or
into
and
push
cld
arpl
mov
xchg
dec
shl
push
test
pop
fiadd
and
dec
xchg
mov
and
dec
clc
inc
xor
and
inc
jnp
add
arpl
sahf
xor
xchg
xchg
aad
loope
jne
mov
fs
sbb
int
leave
dec
add
mov
jmp
pop
inc
mov
jle
daa
jae
je
bound
cld
mov
inc
in
ins
ficomp
movs
(bad)
adc
int3
fs
(bad)
mov
jae
push
aas
jb
push
retf
sbb
pop
mov
ja
mov
mov
push
cld
fnstcw
loop
push
jb
dec
or
add
popa
aam
and
ds
sahf
mov
or
add
mov
sub
in
and
div
cmp
and
sbb
cmp
push
push
nop
arpl
(bad)
cmp
push
test
call
enter
push
mov
in
scas
ja
js
or
out
cmp
add
int3
int3
lahf
mov
sub
sbb
daa
xor
cmp
cli
sub
inc
in
dec
push
mov
mov
cs
mov
jp
lahf
xchg
aaa
out
cmp
mov
pop
fmul
mov
(bad)
fst
loop
repnz
mov
and
in
or
inc
lds
fs
push
fs
xor
or
inc
fbld
in
mov
xor
ret
(bad)
jl
iret
fidivr
jl
and
sbb
repz
jno
push
dec
jae
nop
xlat
or
lds
shl
cmc
pop
or
dec
mov
push
pusha
enter
es
clc
cmc
das
jmp
outs
jno
push
mov
pop
sub
xor
xor
ret
adc
or
movs
movs
push
lods
jg
hlt
cmp
aaa
jge
cmps
enter
add
(bad)
adc
sbb
aaa
mov
jmp
stc
rcl
outs
out
enter
cmp
xchg
loope
cld
xchg
sar
adc
sbb
scas
(bad)
test
iret
mov
rcr
sahf
xor
push
xchg
inc
aam
fdiv
jno
outs
xchg
mov
add
scas
repnz
movs
fs
ins
ds
push
jg
(bad)
jmp
nop
mov
das
gs
dec
outs
int3
mov
mov
nop
adc
fild
clc
and
adc
gs
pop
push
or
and
mov
retf
out
push
shr
or
mov
ja
and
xlat
stos
repz
pop
xchg
into
pushf
inc
sbb
in
cmp
mov
lods
test
mov
xchg
dec
int
or
mov
imul
mov
cmp
push
sahf
mov
xor
fsub
jle
jno
sbb
repz
cmps
sub
jno
pop
pop
xchg
js
pop
add
sbb
int
push
in
les
(bad)
and
shr
pop
dec
or
or
jnp
sub
add
inc
mov
sar
mov
cmp
lods
inc
(bad)
scas
ret
ss
sub
jge
sahf
daa
mov
cmp
addr16
(bad)
into
cmp
mov
cmp
cwde
fsubr
inc
lods
dec
xchg
or
clc
add
push
push
sbb
cmp
call
or
sbb
jge
push
jle
inc
sbb
sub
imul
repnz
rcl
push
stos
xchg
mov
popf
das
clc
in
das
xor
xchg
xchg
cld
rcr
sbb
xchg
xchg
jne
sub
movs
jnp
fsub
dec
cwde
mov
mov
leave
imul
pop
js
jno
mov
push
mov
xchg
sub
retf
push
ror
pusha
retf
inc
xor
retf
xor
add
jns
sub
inc
leave
lahf
in
sahf
jae
or
inc
bswap
nop
inc
sar
jl
push
mov
push
cmp
sar
das
sar
repz
sub
cs
lea
pop
inc
mov
outs
movs
mov
mov
es
aas
cmps
in
dec
or
lea
shr
and
cdq
mov
xor
push
ret
jmp
scas
mov
adc
outs
sti
mov
xchg
inc
test
repz
in
fmul
mov
movs
jbe
adc
inc
sub
sbb
push
mov
jae
add
mov
call
call
inc
adc
push
loopne
or
sbb
jno
add
push
(bad)
leave
sub
adc
push
pop
outs
(bad)
test
and
pop
jno
aas
std
xchg
pop
add
shl
int
and
icebp
enter
adc
and
shl
repnz
(bad)
cmp
adc
fwait
sub
enter
lea
(bad)
sbb
inc
pop
cld
cmp
inc
scas
and
inc
pop
or
and
ror
adc
movs
sbb
sti
test
mov
mov
dec
mov
(bad)
aam
sbb
pop
xor
es
popa
clc
jo
mov
stc
in
sbb
fmul
push
mov
ret
ret
pushf
ins
sti
add
stc
(bad)
xchg
ror
xchg
aaa
ret
xor
add
sahf
mov
fadd
add
shl
sbb
enter
and
jmp
js
push
mov
jmp
mov
push
mov
push
jno
adc
loope
mov
lahf
dec
inc
add
aas
xchg
test
push
mov
sahf
sbb
jo
dec
outs
xor
cmp
adc
mov
mov
popf
popa
test
lods
mov
lock
(bad)
xchg
test
lods
add
cs
repnz
stos
push
push
sub
mov
xor
push
mov
in
test
outs
inc
jb
inc
cld
pop
shr
in
jmp
pop
test
sub
pop
dec
push
cs
(bad)
push
data16
inc
shl
retf
test
add
mov
pslld
lods
xchg
outs
fbstp
add
repz
shl
mov
mov
arpl
xor
xor
jp
cli
in
cmp
test
fimul
out
pop
out
fstp
div
jmp
aad
push
dec
cdq
xor
cmc
dec
and
and
sub
cmp
test
pop
sbb
mov
inc
sub
leave
and
push
push
cmp
or
jbe
jb
stos
or
xchg
adc
jnp
leave
test
sbb
(bad)
call
mov
mov
mov
rcl
jmp
jmp
(bad)
cmps
(bad)
into
cmp
lods
xchg
inc
or
cmp
mov
mov
loopne
push
(bad)
int3
xchg
imul
test
movs
or
mov
es
ja
into
inc
mov
dec
clc
sbb
fild
sbb
aaa
and
enter
leave
and
push
adc
cmps
and
jmp
out
inc
jl
pop
out
pop
aam
std
dec
push
(bad)
into
test
pop
shl
div
ss
jns
push
jo
add
dec
add
clc
adc
push
test
mov
bound
pop
repz
pop
stos
sub
sbb
cmp
add
inc
mov
retf
(bad)
stc
jmp
scas
sahf
outs
mov
jmp
xchg
iret
jg
push
popa
ins
push
imul
mov
cmc
inc
jb
sbb
lea
lods
lods
stos
mov
popf
xchg
xor
mov
repnz
sti
cmp
mov
mov
sbb
jle
call
sti
in
jne
cld
sbb
xor
dec
dec
repnz
cwde
retf
xchg
mov
outs
fwait
adc
inc
xchg
or
lock
mov
mov
fmul
push
(bad)
xor
adc
scas
mov
test
jb
inc
cmps
cmp
lods
pop
lds
or
clc
jne
sbb
sbb
mov
inc
mov
pop
lock
sar
xchg
and
repnz
pushf
and
int3
aad
and
es
push
cdq
into
and
sbb
call
mov
or
adc
adc
and
leave
aam
jg
cld
inc
sub
out
in
push
pop
test
sub
mov
xor
inc
js
pushf
sar
lock
bound
aas
inc
jo
hlt
neg
pop
arpl
fnstcw
jp
enter
int
aaa
sar
mov
sub
lahf
rol
(bad)
cli
cwde
icebp
jo
mov
adc
pop
gs
es
cmc
das
pop
or
dec
inc
lahf
in
(bad)
fnstsw
push
cwde
xchg
ret
les
jp
inc
cs
sbb
cmp
rcl
or
push
inc
lods
xchg
inc
in
jg
adc
pop
cmp
(bad)
cmp
fwait
push
push
(bad)
mov
dec
jle
xor
enter
out
pop
(bad)
mov
(bad)
(bad)
fsubp
xor
add
xchg
cwde
push
jnp
mov
fs
out
and
(bad)
rcl
jp
adc
add
sbb
cs
ja
fsubr
and
movs
cmp
jns
xchg
adc
or
cmp
mov
iret
jo
cmp
mov
cmp
sub
mov
loope
fisttp
lods
jl
mov
xchg
outs
cdq
dec
pop
mov
adc
pop
aas
push
test
stos
pop
xchg
ins
cld
add
or
pop
ins
fisttp
cmp
enter
stos
pop
add
out
dec
inc
cld
xlat
cmp
repnz
pop
cld
out
fs
test
or
in
aas
neg
das
into
fwait
xchg
sub
iret
repz
ret
pop
add
adc
ins
repnz
mov
cmc
and
shl
mov
enter
xchg
push
push
jecxz
mul
adc
inc
nop
lods
adc
dec
stos
test
cmps
push
in
jl
pop
into
neg
xor
lds
xchg
pop
int3
ret
lods
push
leave
push
jo
fwait
or
dec
mov
adc
retf
out
out
in
aaa
push
xchg
jb
xchg
pop
ficom
pop
cmps
les
cwde
test
jae
pop
fistp
lds
mov
in
repz
aam
adc
xlat
mov
into
iret
pop
push
push
sti
mov
outs
pop
into
jnp
test
clc
and
mov
dec
bound
jno
int
cmp
scas
dec
sahf
inc
push
adc
jae
xchg
add
xchg
or
sub
pop
cdq
sub
push
pop
movs
out
lds
sub
xchg
mov
add
mov
push
arpl
popa
mov
jp
adc
mov
mov
stc
inc
outs
pop
outs
or
ret
inc
int3
cwde
imul
lock
add
ja
dec
inc
mov
pop
ds
jg
jge
cmp
push
xor
mov
fs
pop
adc
cmp
stc
rdtsc
sbb
mov
add
xor
out
add
sub
jg
xor
or
adc
lock
ficom
push
and
and
xchg
xchg
xor
aam
cs
clc
cwde
mov
test
sti
mov
pusha
mov
call
(bad)
fbld
mov
loope
xchg
lock
pop
imul
cmp
pop
fnsave
xchg
mov
jno
cmp
jne
mov
mov
xchg
nop
aam
ret
add
xor
ins
lock
adc
xor
add
(bad)
sbb
or
into
dec
ss
cdq
xor
call
div
add
adc
mov
je
in
into
lock
adc
retf
outs
push
pop
out
inc
add
and
test
cmp
js
(bad)
push
cmp
imul
inc
jge
lahf
(bad)
mov
int3
jmp
sbb
int
inc
daa
sbb
jmp
in
mov
movs
jb
div
aad
mov
fwait
cmp
stc
pushf
cmps
bound
arpl
inc
(bad)
sbb
sar
leave
inc
mov
pop
retf
adc
ins
inc
dec
dec
adc
cs
xlat
cmps
jno
xor
repz
fwait
dec
frstor
mov
ret
add
aad
stos
and
adc
pop
aam
test
pop
push
and
pop
retf
out
and
xor
mov
cmp
or
sti
mov
inc
icebp
jecxz
adc
xchg
dec
jmp
inc
hlt
push
jmp
cmp
dec
dec
push
outs
pop
popf
sub
cli
sbb
dec
repnz
sub
pop
ret
cmp
xor
ret
sbb
fadd
(bad)
xchg
cmp
pop
repz
mov
sbb
fdiv
mov
hlt
jnp
xor
out
rol
pop
dec
mov
push
mov
stc
mov
mov
int
xchg
push
xchg
loope
ret
xchg
add
mov
push
dec
clc
cld
out
sbb
and
imul
mov
mov
mov
(bad)
adc
pop
or
pop
jno
pop
(bad)
jmp
stc
loope
or
mov
mov
nop
fisubr
add
call
arpl
mov
mov
sahf
sbb
push
sbb
xor
xchg
add
jno
sub
inc
sbb
out
(bad)
fidiv
cmps
mov
and
dec
dec
outs
or
add
adc
dec
sub
stc
xchg
inc
rcl
xor
jmp
and
stos
(bad)
dec
(bad)
and
lds
pop
adc
sub
or
cld
jo
std
push
stos
xor
mov
add
mov
stc
retf
pop
cmp
jno
push
pop
rcl
push
rcr
cmp
pop
cvtdq2ps
daa
test
mov
add
leave
cmp
cwde
mov
cld
push
jae
aad
lahf
inc
xor
mov
shl
nop
pop
retf
or
stc
inc
scas
test
sbb
inc
or
dec
clc
add
lods
xchg
jb
inc
cwde
mov
shl
pop
jbe
movs
xor
nop
(bad)
cmp
push
dec
popa
pop
jo
push
cmps
mov
in
jp
jbe
pop
ja
sub
sar
and
pop
cmp
or
xchg
pop
movs
push
ret
adc
or
fs
push
adc
popf
xor
fs
rol
jmp
shr
or
dec
(bad)
pop
sub
invd
push
pop
xor
pop
imul
mov
not
data16
jae
push
push
(bad)
jmp
xchg
movs
cmp
sub
out
sbb
clc
test
mov
mov
js
cdq
std
es
cdq
pusha
mov
movaps
scas
xchg
push
(bad)
or
cli
inc
ja
dec
mov
jmp
adc
xor
into
int
mov
lea
push
push
je
stos
leave
jns
mov
iret
movs
sbb
push
loope
fs
cdq
ss
xor
inc
sbb
scas
or
push
cmp
mov
adc
push
jns
stos
retf
je
dec
movs
rol
lock
rsm
adc
les
not
adc
dec
push
push
stos
push
jne
jecxz
js
pop
jg
mov
enter
mov
xlat
pusha
das
iret
add
arpl
push
nop
scas
stos
mov
inc
pop
cmc
cmp
test
pop
(bad)
fstp
into
mov
cdq
imul
nop
das
jmp
pushf
cmps
into
cmp
fs
jecxz
inc
cli
pusha
sub
sbb
sar
cmp
pop
push
adc
cmp
pop
sub
and
xor
dec
xlat
push
rol
or
clc
mov
rcr
fidiv
(bad)
call
in
cmc
mov
daa
cmp
bound
mov
mov
pop
xor
xor
and
push
cmps
ret
xchg
retf
lea
or
or
and
push
push
add
cmp
inc
outs
sub
retf
dec
mov
jo
push
xor
sub
hlt
dec
or
div
cmc
mov
dec
ds
ror
xor
jno
xchg
mov
dec
leave
pop
std
add
rcr
push
pusha
pop
fisttp
pop
dec
pop
out
xor
dec
pop
out
int
mov
add
jp
sbb
inc
inc
movs
es
adc
(bad)
sub
xor
sub
jo
test
jo
jle
les
jmp
fs
mov
sub
(bad)
mov
dec
mov
xor
dec
data16
pushf
adc
inc
or
dec
adc
jle
ret
add
js
xor
outs
push
outs
inc
(bad)
dec
aam
cmp
mov
pusha
movs
ins
addr16
in
leave
mov
pushf
mov
imul
mov
mov
sahf
mov
mov
pop
jmp
mov
jb
lds
jns
fs
fwait
mov
jp
shl
cmp
mov
adc
or
xchg
jle
jecxz
cmp
popf
scas
sti
xor
dec
mov
outs
add
cli
adc
push
jno
(bad)
outs
pop
data16
frstor
(bad)
jmp
movs
lods
sbb
jmp
add
scas
xchg
mov
and
add
push
mov
cmc
cli
(bad)
jo
ja
fldl2t
sub
jmp
mov
and
int
aam
push
out
mov
test
push
xchg
push
xchg
clc
mov
es
xlat
push
pop
add
aas
sub
aas
into
add
fld
pop
fisttp
into
(bad)
mov
inc
retf
dec
aas
nop/reserved
jecxz
add
push
(bad)
xchg
xchg
ss
or
imul
addr16
xchg
jmp
and
test
inc
aad
jecxz
mov
adc
sub
int3
and
and
addr16
out
jecxz
ja
(bad)
pop
cwde
in
mov
cmps
loop
cdq
or
sub
test
test
mov
sahf
push
fsub
cmp
mov
pop
shl
or
mov
cli
movs
adc
adc
loop
xor
mov
in
call
stc
clc
in
test
sbb
dec
es
add
cmp
jb
je
jnp
call
imul
out
mov
jmp
cmps
jnp
scas
data16
cmps
jecxz
sub
fbstp
test
sub
sbb
out
retf
sub
jo
shr
jb
scas
movs
add
jmp
fld
cmp
movs
and
lea
(bad)
jnp
out
(bad)
scas
or
shl
pop
movs
test
push
aas
sti
and
adc
cdq
adc
xchg
in
jne
stc
mov
inc
in
retf
adc
jo
sub
push
push
dec
outs
inc
inc
fimul
dec
gs
mov
out
data16
arpl
repz
movs
xor
mov
pop
sbb
retf
xchg
imul
mov
jecxz
xor
xchg
repz
jbe
dec
fisttp
xor
jmp
or
inc
cmp
mov
mov
jno
cmc
push
pusha
xchg
in
pop
mov
pop
cmp
inc
pop
mov
xchg
int
movs
out
mov
jl
hlt
jl
and
or
lods
ret
sbb
mov
mov
out
sub
push
push
das
xlat
fadd
or
pusha
es
mov
sub
arpl
popa
dec
jmp
sbb
mov
adc
push
jecxz
rcl
adc
sbb
jg
sub
xchg
imul
jge
sub
or
pop
icebp
sbb
cmps
mov
xor
fiadd
stc
jmp
popa
call
jmp
pop
repnz
outs
jae
pop
neg
nop
and
add
iret
movs
cmp
xor
dec
xchg
xor
jmp
pop
push
cmp
mov
inc
fistp
scas
les
dec
mov
sahf
sub
or
clc
hlt
bound
ror
jne
push
dec
int3
cmps
sbb
push
and
mov
jle
pusha
popf
sbb
ret
call
xor
dec
jecxz
sar
loopne
aaa
pop
mov
dec
int
ins
retf
push
lods
jb
test
and
dec
pop
push
scas
neg
pop
push
mov
ret
sub
cmps
sti
cmps
xchg
pop
pop
ins
jns
push
adc
mov
push
ss
jae
ficom
movs
mov
sbb
mov
scas
ret
fadd
cvtps2pi
xor
cmps
(bad)
stc
nop
mov
neg
mov
(bad)
xor
mov
lods
imul
addr16
or
(bad)
sub
pop
sub
xor
mov
fsubr
and
mov
(bad)
inc
cmps
cmps
jnp
cmps
stos
push
inc
nop
(bad)
je
scas
in
leave
fild
dec
pusha
popf
stos
jo
dec
inc
pusha
ds
scas
test
push
jmp
hlt
lods
mov
jecxz
sbb
mov
cmp
and
scas
retf
push
cmp
sub
adc
inc
jne
push
jl
in
rcr
or
out
es
sub
jne
enter
paddsb
push
push
aad
add
fdivr
push
mov
add
jmp
imul
fs
add
sub
out
mov
adc
push
es
lea
add
icebp
in
jmp
(bad)
in
sar
test
xor
mov
and
test
jge
cmps
retf
movs
inc
movs
mov
leave
cli
aas
pop
repz
xchg
push
sub
or
add
jbe
cld
leave
pop
rcl
out
cmp
add
push
aam
xor
or
dec
mov
dec
cmp
pop
cmp
inc
jge
jno
out
adc
and
je
or
in
popa
dec
enter
mov
add
call
ret
cmc
mov
dec
dec
mov
mov
mov
xchg
cmp
fimul
out
push
inc
jl
outs
rol
xchg
not
scas
jnp
and
adc
je
or
call
adc
xlat
jp
sub
les
test
mov
jle
sti
sti
mov
and
xlat
cdq
jnp
adc
push
jmp
aam
rol
fisubr
retf
mov
xchg
xor
bound
dec
addr16
(bad)
xchg
iret
fsub
cmp
mov
nop
sub
or
cmc
add
dec
ficomp
xlat
mov
call
sbb
dec
pop
adc
stc
or
(bad)
or
mov
or
push
cmps
mov
and
sbb
ret
mov
rcr
xor
fimul
mov
bnd
pop
xor
jecxz
sti
dec
rcr
xchg
outs
xor
or
bnd
in
imul
inc
mov
jmp
les
mov
add
jge
push
push
imul
dec
out
xor
in
mov
and
or
and
test
mov
pop
fcom
fidivr
add
push
aad
imul
outs
cwde
(bad)
leave
dec
push
xlat
std
mov
dec
pop
and
fdivr
outs
and
push
fimul
sub
mov
test
addr16
sub
pop
enter
fmul
fwait
adc
(bad)
jno
pusha
outs
outs
int
mov
add
cdq
or
int3
adc
jle
jne
(bad)
inc
jb
(bad)
repnz
imul
adc
sbb
xor
lock
or
pop
xchg
mov
clc
(bad)
jne
(bad)
and
jnp
stos
sti
hlt
into
icebp
mov
js
into
adc
jno
pop
mov
sub
and
pop
push
sbb
(bad)
cmp
pop
dec
mov
adc
pop
mov
pusha
scas
out
sti
xor
mov
mov
cwde
nop
add
cdq
mov
imul
sub
(bad)
lock
shl
mov
jmp
movs
jnp
outs
or
push
fstp
push
inc
jae
call
mov
cmp
dec
adc
lock
adc
fcmovnu
cmp
dec
and
ror
pusha
sbb
jns
test
mov
aad
mov
pop
xor
adc
inc
pushf
pop
lods
lods
stos
inc
popf
jb
push
and
test
push
mov
push
dec
mov
mov
movs
push
xor
pop
dec
xchg
xor
push
sbb
push
xlat
loope
std
aaa
shl
or
sbb
arpl
push
push
xchg
and
pop
rcr
jnp
test
mov
dec
mov
aad
lods
xchg
inc
adc
jg
push
add
pusha
iret
outs
mov
lods
add
mov
pop
cmps
push
mov
cmp
mov
pop
pushf
inc
mov
cmp
pop
mov
enter
lahf
xchg
ror
push
sahf
popa
(bad)
and
jnp
push
(bad)
sbb
dec
leave
mov
dec
sbb
and
cmc
call
pop
aam
cmp
mov
mov
xchg
aam
inc
ret
xchg
adc
xor
xchg
push
sbb
adc
daa
aaa
push
test
(bad)
scas
xchg
pop
fwait
call
sub
call
xor
push
xchg
and
inc
and
fld
sub
jbe
xor
jecxz
shr
std
mov
(bad)
lock
jecxz
jo
push
dec
xchg
adc
ret
push
icebp
cmp
fldenv
cmp
mov
cmc
stos
pop
ficomp
hlt
push
loopne
cmp
pop
sbb
loope
scas
mov
stos
test
pop
cld
inc
cmp
mov
push
lods
ret
and
dec
enter
cmp
fwait
lods
addr16
cdq
sbb
mov
jbe
mov
jmp
inc
mov
xor
jg
outs
hlt
xchg
ja
ss
xchg
test
mov
xchg
xchg
fdivr
mov
pushf
adc
xchg
test
iret
nop
adc
in
push
jle
stos
sar
stc
or
repnz
jecxz
div
xor
popa
jnp
push
lods
or
lods
outs
jne
sbb
(bad)
cli
pop
(bad)
ins
jno
pop
je
inc
lock
dec
mov
mov
xor
stc
fwait
ja
or
sub
xchg
mov
push
cmps
pop
cs
mov
add
pop
shl
xor
ja
inc
test
pop
sub
pop
cmps
jmp
imul
lods
sbb
xlat
cmp
xchg
push
gs
mov
pusha
test
adc
push
or
sbb
test
in
std
retf
retf
ror
adc
test
pop
mov
jb
shl
out
out
sbb
jg
aaa
cs
(bad)
or
add
add
pop
jo
jno
adc
push
int3
aam
add
test
pop
retf
lds
sub
aas
test
test
pop
cmp
fisttp
repnz
fwait
cwde
fdiv
fsubr
push
cwde
in
mov
and
push
mul
inc
mov
xchg
jnp
les
cdq
sbb
test
ss
xor
rcl
cmps
pop
(bad)
jbe
es
stos
ins
mov
pop
mov
push
inc
or
cmp
icebp
inc
mov
push
ss
fistp
adc
popf
xor
cmp
mov
pop
xlat
or
popf
pop
stc
fdivr
xor
pop
mov
jl
nop
fiadd
sbb
cmc
int
daa
in
scas
mov
dec
sbb
xchg
repnz
mov
bound
mov
mov
test
call
stc
jmp
into
aam
jle
mov
sub
movs
push
js
aaa
lds
push
push
sbb
aad
stc
and
leave
mov
jo
lods
or
mov
inc
push
leave
cwde
repz
or
or
or
add
and
adc
mov
fst
fldcw
add
popa
scas
sbb
dec
and
jge
pop
clc
stos
xchg
iret
shl
ins
fiadd
lahf
inc
imul
mov
call
pop
pop
out
stc
xchg
cmp
movs
xlat
imul
jle
fsubp
daa
cmp
stos
push
dec
pop
(bad)
and
inc
mov
hlt
and
pop
xor
pop
push
fst
jp
mov
mov
test
lea
movs
cdq
jmp
cld
xor
push
jo
gs
cld
or
loope
les
sub
test
inc
adc
imul
test
push
xchg
mov
mov
lock
sub
mov
test
sbb
xor
jae
mov
fldenv
arpl
mov
jp
dec
pop
(bad)
push
data16
dec
(bad)
pusha
mov
(bad)
jo
shr
data16
jbe
(bad)
cmps
mov
aad
mov
lahf
push
aas
and
rol
ds
aad
mov
xor
inc
rcr
xlat
scas
test
aad
pop
cmp
adc
pop
ret
sub
lock
or
mov
xchg
or
push
(bad)
mov
jns
pop
out
repz
out
xlat
jae
xchg
mov
rcr
stos
popf
out
loope
mov
cmp
adc
xor
cmps
or
mov
repnz
loopne
sbb
dec
scas
sub
(bad)
fdivp
loop
jmp
pop
pop
mov
cmp
xchg
sti
bound
lahf
jl
outs
arpl
out
cld
scas
xchg
shl
leave
out
fimul
js
rol
dec
sti
lods
pushf
dec
mov
stos
test
pop
adc
mov
das
lahf
(bad)
cmp
cmp
push
sti
xchg
adc
scas
into
jmp
sub
out
test
xchg
cmc
aam
fs
and
(bad)
rcl
pop
mov
jge
add
cdq
mov
fisubr
inc
xchg
mov
mov
cmps
ds
mov
int3
test
aad
jae
cli
jo
push
das
pop
push
jo
pop
sbb
or
and
cmp
add
xor
shr
fwait
outs
or
retf
xchg
lahf
and
js
jp
or
std
add
les
pop
cmp
mov
inc
jns
popf
and
(bad)
ficomp
xor
sbb
add
or
aam
dec
stos
adc
push
stos
(bad)
movs
add
(bad)
adc
and
ret
jg
repnz
popa
jmp
ds
add
jmp
test
fxch
les
dec
mov
daa
ret
clc
int3
xor
inc
push
xchg
(bad)
xor
inc
sti
sbb
and
ret
popf
sub
xchg
mov
cmp
cdq
cmp
aam
and
sbb
mov
xor
(bad)
loopne
or
cmp
mov
inc
sbb
aaa
ror
nop
xchg
or
and
test
cmp
stos
xchg
xchg
adc
cmps
mov
pushf
push
ficom
add
push
pop
fiadd
clc
xchg
out
aas
push
jmp
stc
jecxz
iret
mov
or
in
in
mov
lds
adc
stos
stos
in
push
les
out
push
mov
std
push
retf
or
push
sahf
jo
and
imul
add
mov
iret
sub
lock
xor
jmp
scas
adc
xchg
mov
push
push
lea
adc
data16
in
mov
mov
mov
push
pop
jns
fldcw
bound
mov
mov
lock
ins
pop
hlt
or
inc
sub
mov
add
add
stc
out
and
push
sub
fldz
adc
in
or
jmp
(bad)
imul
mov
popw
cmp
out
ja
lods
movs
scas
jne
(bad)
or
dec
test
les
jg
cmp
add
mov
xchg
sti
test
(bad)
cs
fidiv
jmp
xchg
and
jae
cli
pusha
inc
cwde
jp
adc
sub
test
mov
test
(bad)
cmps
jmp
mov
lea
sub
gs
repnz
cmp
inc
ret
and
mov
repnz
ret
(bad)
adc
xchg
xchg
pop
or
aas
ds
scas
pop
and
scas
cmc
(bad)
movs
jbe
outs
jecxz
sbb
dec
sbb
or
adc
adc
sbb
xor
lods
cmp
cs
repnz
(bad)
int
(bad)
xchg
jmp
ror
jno
shl
sub
scas
or
lods
not
shl
popf
add
test
cdq
jno
ins
and
xor
fld
iret
retf
test
xor
stos
adc
mov
add
jne
sbb
int3
test
(bad)
and
dec
movs
icebp
(bad)
movs
mov
sbb
scas
inc
rcl
cmp
outs
and
push
mov
lds
mov
inc
std
jnp
pushf
ja
mov
dec
jmp
push
or
in
sub
pop
cmp
fiadd
push
jae
xchg
jecxz
mov
jno
xor
adc
cmp
daa
test
ins
sbb
or
xchg
xchg
je
retf
into
ja
cdq
mov
frstpm(287
mov
fisttp
popf
push
sbb
ins
mov
out
out
ins
and
xor
and
inc
xor
(bad)
icebp
mov
dec
inc
xor
sbb
ja
mov
scas
jge
stos
test
mov
mov
inc
adc
gs
push
jmp
inc
or
cwde
sub
leave
cmp
jg
jp
xor
movs
jae
mov
mov
inc
mov
loop
lods
inc
mov
xor
mov
(bad)
(bad)
out
retf
xchg
pop
xor
jmp
jmp
inc
lds
scas
lods
dec
jp
leave
jns
and
xchg
adc
dec
or
fwait
xor
scas
add
dec
pop
ins
les
sub
arpl
push
dec
repnz
inc
mov
bound
mov
lods
retf
cmp
mov
dec
cmp
pusha
inc
ins
sbb
dec
mov
xchg
cmc
and
repz
ret
mov
sub
call
repz
arpl
cli
shr
outs
xchg
dec
pop
push
rol
loope
mov
jge
(bad)
cli
inc
xchg
movs
jge
mov
pop
mov
push
dec
lock
inc
fidiv
cmp
mov
cmp
xchg
or
mul
xchg
repz
ret
outs
(bad)
jge
sbb
call
add
ins
sti
(bad)
sub
in
push
jg
and
sbb
sti
scas
ret
pushw
xor
movs
test
jnp
jb
movs
call
xchg
and
jns
(bad)
xlat
push
fld
xchg
inc
sbb
pop
outs
add
(bad)
xor
cld
xchg
pop
scas
jg
into
inc
mov
sub
gs
nop
fsubr
or
add
or
add
popf
shr
stc
aaa
add
call
pop
or
(bad)
jecxz
inc
add
data16
out
jp
xchg
dec
fimul
mov
and
addr16
xchg
jmp
sub
stos
ss
adc
mov
fs
sbb
jae
or
inc
xor
adc
pop
adc
in
xchg
jns
fnstsw
dec
repnz
xchg
jne
dec
enter
push
add
out
hlt
push
and
dec
pop
out
into
retf
add
mov
push
jmp
sbb
test
inc
(bad)
cmp
cli
les
pushf
in
sub
fcom
add
ret
jmp
fisttp
jnp
sub
dec
pusha
shl
cmp
cdq
daa
ficom
sub
stos
(bad)
mov
cmp
addr16
pop
xor
cmp
movs
push
cdq
(bad)
gs
int3
retf
je
(bad)
mov
(bad)
fdivr
icebp
cli
int3
xor
pushf
cmp
sbb
enter
pushf
xor
leave
loopne
adc
lods
dec
jg
adc
mov
push
xor
dec
mov
movs
dec
adc
pop
adc
dec
pop
in
xlat
out
mov
lea
cmp
ja
call
icebp
movs
call
add
repz
xchg
xor
xchg
xor
mov
push
pop
aad
pop
ror
push
inc
fidivr
xor
int3
(bad)
in
xchg
stc
or
jno
fdiv
lds
cmp
dec
lods
pop
cmc
mul
arpl
add
ja
mov
fwait
push
leave
sbb
adc
das
pop
test
cs
mov
mov
xchg
mov
or
mov
mov
push
jg
pop
fisubr
std
cli
add
and
cld
add
out
ret
sub
cmps
mov
(bad)
pop
xchg
cwde
mov
ja
fld
mov
into
jns
xchg
ror
ret
call
xchg
mov
mov
loop
pushf
(bad)
mov
lea
outs
es
dec
mov
(bad)
fisttp
iret
rcr
jnp
jge
std
sbb
or
jle
jno
mov
(bad)
call
xor
not
xlat
mov
pop
pop
push
stos
pop
or
or
int
popf
out
add
push
cmc
jae
adc
frstor
jle
mov
movs
fdiv
sar
sub
retf
lods
cmps
add
shr
in
cmp
push
(bad)
dec
ja
pop
or
daa
push
test
and
nop
outs
pushf
push
bnd
inc
sbb
jb
arpl
(bad)
out
into
lock
sub
mov
sub
dec
out
jbe
int
icebp
(bad)
sbb
scas
xchg
push
jne
and
lock
iret
xchg
cmp
and
movs
mov
retf
popa
fld
lock
jle
dec
mov
into
cmp
add
fisubr
and
pop
fsubr
into
mov
(bad)
push
and
mov
(bad)
xor
inc
call
xlat
repz
mov
sub
xor
pop
xor
movs
or
mov
fwait
and
pop
call
cmp
sbb
jmp
and
pop
add
xlat
cmps
in
push
adc
add
cmp
mov
(bad)
and
pop
adc
sbb
add
mov
push
jge
sbb
mov
push
cmp
mov
sbb
lea
sub
sub
call
inc
mov
pusha
pusha
outs
inc
pop
popf
push
push
mov
sbb
push
push
popa
test
mov
inc
aam
push
enter
arpl
dec
popa
dec
mov
pushf
icebp
in
jne
into
stc
movs
or
and
pop
adc
and
test
sbb
rcr
adc
xchg
mov
es
ins
not
jae
mov
scas
xor
jmp
push
call
retf
mov
mov
fisttp
dec
cmp
cs
sbb
stos
and
mov
pop
xchg
in
jbe
add
push
(bad)
sbb
fs
mov
mov
pop
push
jb
ss
in
ret
jb
out
mov
dec
fmul
inc
adc
lock
pusha
mov
inc
xor
enter
shr
(bad)
fisttp
aad
inc
imul
fwait
jmp
xchg
test
pop
and
gs
pop
movs
mov
jo
out
fidiv
add
loop
xchg
ss
mov
lds
mov
or
mov
mov
inc
or
jge
idiv
imul
stos
test
mov
inc
push
mov
aam
int
jmp
sub
inc
mov
test
je
gs
cs
add
mov
push
jp
xchg
and
add
imul
ins
test
int
mov
(bad)
pop
mov
add
mul
inc
jmp
gs
sub
fisubr
call
pop
rcr
mov
xor
inc
into
out
arpl
outs
pop
(bad)
ficom
retf
ss
(bad)
data16
dec
outs
pop
rcl
(bad)
dec
mov
lea
inc
mov
jae
or
scas
sar
les
mov
loop
inc
pop
xchg
div
pop
jecxz
je
shl
push
sbb
or
pop
cwde
not
push
sbb
bound
sub
fs
out
ret
in
loopne
pop
jae
push
xchg
dec
pop
out
das
fldcw
ror
lock
outs
daa
or
xor
aas
sbb
popa
int3
loop
inc
lods
hlt
aam
pop
fidivr
call
push
outs
mov
xor
popa
add
mov
mov
call
xchg
lea
mov
cmc
sbb
sub
or
in
or
inc
mov
dec
pop
sbb
push
(bad)
fdiv
pop
pop
jge
(bad)
jmp
loope
in
or
jnp
lods
xor
jle
sub
sub
sti
fs
rcl
iret
inc
std
xchg
mov
bound
xlat
cmps
cmp
xorps
fild
pop
lds
in
clc
push
fst
inc
jns
hlt
adc
fldcw
inc
lea
into
push
mov
cwde
stc
lock
sar
pop
cld
adc
pop
data16
cmp
(bad)
cmp
xchg
repz
cmp
pop
rcl
ror
stc
(bad)
pop
mov
add
and
sbb
lods
jecxz
push
sub
mov
pop
sub
ret
sbb
sub
mov
icebp
(bad)
xchg
loope
ss
sub
xlat
movs
adc
add
in
adc
test
mov
and
xchg
nop
ins
(bad)
pop
cmp
mov
jmp
push
or
lea
cmps
xor
mov
cmp
jmp
xchg
shr
mov
(bad)
dec
xchg
out
push
jmp
sub
inc
sub
jle
dec
les
push
nop
sbb
jl
sub
repz
cs
outs
xchg
jbe
cmp
jl
xchg
xchg
mov
push
rcl
or
scas
sti
fwait
imul
repnz
push
pop
ret
pop
or
mov
enter
rcl
add
retf
mov
je
push
in
int
xchg
test
je
sbb
ret
xor
out
mov
push
retf
leave
cmps
in
enter
loop
aas
ins
mov
(bad)
call
or
xchg
cmps
movs
test
rol
jp
cmp
cmp
xchg
and
js
pop
ja
repnz
int
xlat
ror
(bad)
std
push
cmp
rol
lahf
xchg
dec
dec
push
mov
mov
or
pop
mov
out
sub
bound
jmp
aas
push
movs
sbb
loopne
sahf
stos
dec
pop
rcl
fsubr
add
rcl
push
test
and
pop
and
inc
cmp
pushf
out
cmp
cld
scas
lahf
pop
sbb
inc
lock
cmps
cmp
add
stc
cdq
fst
into
(bad)
enter
out
data16
xchg
jg
pop
(bad)
ret
cmp
push
push
pop
mov
jbe
push
mov
imul
push
adc
imul
xor
xor
leave
dec
and
js
leave
dec
pusha
dec
xchg
mov
sti
pop
outs
iret
xchg
or
(bad)
jns
(bad)
sti
shl
push
inc
xchg
test
lahf
jno
push
xor
adc
icebp
xchg
sub
pop
sub
jb
cmc
out
outs
into
aam
call
stc
add
shl
mov
dec
test
mov
loop
gs
xor
pop
popf
cmp
pop
(bad)
sbb
xchg
pop
repz
lods
inc
lds
enter
ins
dec
(bad)
stos
outs
inc
jecxz
not
sub
fild
mov
loope
lahf
(bad)
rol
int
add
stos
out
mov
(bad)
add
jne
(bad)
pop
mov
push
mov
inc
xor
cmp
xchg
xchg
lods
pop
les
xlat
popf
mov
xchg
cmp
in
pop
xchg
pop
mov
mov
xchg
mov
in
adc
pop
iret
push
shl
xchg
jp
cwde
imul
addr16
mov
mov
ds
dec
sahf
sbb
or
and
std
ja
call
js
fidiv
repnz
loopne
int3
fs
push
sbb
and
pop
add
mov
bound
cs
mov
test
iret
dec
repnz
cmp
cmps
pushf
cmp
adc
xor
ja
ror
xchg
test
sbb
xchg
adc
in
gs
nop
sub
or
adc
fisttp
or
sub
mov
js
(bad)
cld
movs
push
xchg
cmp
fisttp
inc
das
mov
pop
icebp
mov
mov
sahf
cmps
pushf
or
jmp
in
or
jno
xor
into
shl
pop
mov
push
pop
mov
and
lods
(bad)
imul
xlat
fmulp
data16
sbb
rcr
push
add
add
and
xor
and
fwait
mov
adc
mov
cmp
ss
call
mov
mov
pushf
cwde
shl
nop
adc
mov
pop
das
ja
xor
pushf
(bad)
pop
dec
inc
out
push
and
outs
or
(bad)
imul
or
or
test
retf
mov
mov
jmp
(bad)
sbb
ins
(bad)
(bad)
dec
sbb
cmp
sbb
stos
push
rcr
mov
mov
sbb
mul
dec
shl
and
cdq
repnz
loopne
aas
pop
jno
jns
jge
push
and
mov
fstp
stos
ret
xchg
cmp
jecxz
fs
fsubr
xlat
sub
pop
lods
(bad)
pop
push
bound
cmp
adc
xor
js
and
addr16
arpl
mov
inc
xor
sbb
movs
std
add
xchg
aam
mov
inc
mov
jge
iret
adc
sbb
scas
mov
mov
cs
fs
xor
ja
jo
or
adc
adc
mov
not
dec
daa
inc
jge
retf
dec
sti
ins
inc
fcom
ret
out
pop
dec
fs
das
adc
mov
push
push
out
mov
call
jmp
cwde
cmp
cmp
cli
dec
xchg
push
add
clc
jbe
mul
sar
(bad)
mov
and
mov
(bad)
mov
inc
test
loope
mov
retf
add
push
jo
iret
mov
add
les
outs
out
jno
or
mov
(bad)
push
jle
mov
or
and
and
out
int
aad
or
mov
jns
outs
and
int
xchg
aad
sahf
mov
ins
js
gs
sbb
mov
mov
ret
adc
out
jge
cmps
addr16
(bad)
loop
cmc
retf
movs
test
data16
and
ficomp
(bad)
jae
and
sub
retf
push
ds
sbb
pop
int3
or
dec
or
pop
mov
ror
push
mov
jle
(bad)
xor
and
sbb
leave
fcomp
and
inc
jb
dec
push
mov
scas
pusha
mov
jmp
or
mov
xchg
ret
jg
cmp
(bad)
and
clc
aaa
jns
out
add
test
inc
aad
lock
fisttp
sar
test
enter
gs
loop
xor
(bad)
push
or
in
lods
stos
add
adc
and
(bad)
cmps
dec
jb
out
call
fcomp
ins
fdiv
adc
cmps
in
bound
pop
inc
inc
push
jl
xchg
push
or
retf
xor
loopne
push
es
push
adc
mov
push
inc
sub
int
stos
ror
stos
xchg
cwde
pusha
xchg
es
cmps
lea
in
adc
mov
imul
ja
fwait
sbb
sub
mov
hlt
mov
inc
mov
sbb
shr
ins
arpl
pop
stc
shl
pop
loope
pushf
shl
push
jno
pushf
dec
stos
cdq
xlat
mov
fistp
out
ret
ret
dec
jge
ficom
in
retf
ss
fisubr
lods
aad
rcr
mov
xchg
sub
push
lods
rcl
ret
xchg
sub
mov
ins
pop
xchg
inc
inc
dec
(bad)
xchg
out
inc
jne
jae
in
icebp
mov
cwde
mov
dec
and
in
push
arpl
jae
call
ret
adc
and
push
out
sub
ret
retf
aam
arpl
cmp
sub
add
xor
push
cmp
(bad)
pop
cs
aad
mov
fsub
adc
retf
mov
adc
fsubp
scas
lahf
das
xor
iret
call
mov
mov
inc
push
popa
scas
pushf
ds
add
into
and
lods
add
es
push
out
add
dec
hlt
sub
pop
or
xchg
sub
and
pop
and
push
adc
and
out
sub
sbb
sub
dec
mov
call
cmp
sahf
mov
cld
(bad)
and
inc
jecxz
inc
pop
pusha
xchg
push
fild
outs
dec
hlt
or
pop
xor
fmul
and
imul
mov
sbb
push
mul
sub
pop
in
fnstcw
mov
sbb
fwait
icebp
sbb
pop
(bad)
jg
cld
or
add
mov
xor
jmp
jp
jno
inc
pop
stc
and
pop
mov
sub
sbb
jmp
mov
fdivr
icebp
imul
in
pop
adc
sbb
pop
pop
cmp
shl
pop
and
inc
sahf
int
mov
jb
jecxz
mov
mov
pop
jo
mov
mov
adc
and
fiadd
retf
jl
sub
xor
aad
aad
jecxz
std
push
and
(bad)
jne
repz
sub
xchg
loopne
ss
adc
and
xlat
add
lea
fdivr
push
bound
fadd
loopne
mov
popa
mulps
cmp
(bad)
pop
ds
inc
jae
sahf
fistp
hlt
mov
and
shr
and
jo
or
jp
ret
fsubp
cmp
mov
shl
jmp
outs
(bad)
out
push
dec
out
mov
fldenv
xchg
xor
mov
imul
or
bound
sbb
idiv
aaa
jl
enter
retf
std
sahf
xchg
dec
xchg
xchg
hlt
push
sbb
adc
retf
add
inc
push
cli
fnstsw
popf
pusha
adc
movs
or
inc
add
pushf
and
push
mov
imul
sar
mov
cmc
mov
xchg
adc
test
inc
xor
pop
jno
jnp
sbb
push
or
adc
pop
push
adc
cmp
aas
mov
mov
jecxz
clc
movs
dec
es
or
aam
xchg
pop
rcr
daa
adc
repnz
loopne
fsubp
(bad)
push
and
add
sahf
das
jg
mov
mov
aam
add
dec
rep
and
xchg
scas
(bad)
cli
and
gs
push
xor
arpl
stos
mov
jb
mov
cmc
lods
sar
lahf
mov
jmp
jb
out
pop
iret
inc
inc
outs
loope
jo
push
out
ret
cmp
into
lods
mov
and
xor
and
push
sar
cwde
mov
rol
or
pushf
fbstp
jecxz
out
fucomip
scas
fdiv
jmp
or
pushf
pop
mov
add
ret
in
adc
or
pushf
mov
mov
je
popa
xlat
js
int3
push
sbb
jbe
mov
dec
movs
pop
adc
repz
shr
push
shl
mov
dec
shl
push
not
mov
das
mov
iret
or
stos
sub
aam
(bad)
inc
pushf
scas
(bad)
rol
xor
xchg
jg
jle
jmp
sub
and
add
in
in
mov
shl
add
in
xchg
or
bound
ins
iret
mov
hlt
(bad)
mov
mov
mov
inc
outs
fiadd
test
stc
adc
and
pop
popw
mov
ds
call
xchg
mov
bound
shl
aaa
xor
xchg
sbb
jmp
into
loopne
mov
aad
into
inc
mov
movs
rcr
pushf
pop
outs
shl
pop
mov
xor
mov
lods
mov
mov
inc
ror
push
call
ficom
adc
push
das
pusha
popf
cmp
fcom
ss
mov
es
xchg
lods
adc
pusha
sub
out
call
test
bound
test
sar
aas
test
push
add
and
jb
sbb
and
loop
repnz
xor
mov
jno
pop
fisub
mov
movs
dec
ss
mov
int3
int
cld
rcl
inc
mov
iretw
adc
add
mov
push
sub
aas
dec
mov
pushf
mov
cmps
push
mov
mov
cmp
and
sub
in
xchg
mov
sbb
adc
je
int3
mov
loopne
arpl
or
pop
or
clc
imul
push
push
jp
cmp
mov
or
or
sar
push
push
dec
and
add
inc
call
xor
mov
popf
adc
pop
add
cmp
cmp
shl
cmp
(bad)
imul
sbb
ficomp
jg
popf
dec
jecxz
or
fdiv
fistp
idiv
and
loop
adc
repz
jl
cmp
pusha
xchg
out
mov
enter
sbb
scas
push
cmp
(bad)
cmp
add
test
adc
push
loopne
jbe
pop
push
imul
xchg
leave
adc
or
es
mov
mov
jns
pop
jge
push
shr
ja
xchg
rcr
sbb
and
loopne
dec
push
push
iret
jmp
repz
sbb
pop
mov
enter
cs
mov
int3
cld
into
(bad)
cmp
repnz
cmp
aad
inc
bound
cmovae
jns
loop
adc
fld
or
jo
jne
adc
pop
pop
in
push
inc
sahf
movs
fimul
iret
ret
test
pop
mov
rol
add
fisttp
sub
mov
pop
movs
and
in
rcr
mov
aam
mov
mov
fnstenv
mov
sahf
push
sub
jnp
repnz
cmp
fwait
cmc
xor
jne
(bad)
dec
(bad)
scas
out
xchg
mov
ds
in
lock
sub
fistp
outs
fidivr
call
daa
fsub
xchg
lods
cld
mov
jbe
lea
push
test
mov
mov
mov
jle
sub
aam
mov
jne
ds
and
hlt
xchg
jge
push
mov
fldenv
inc
imul
push
sbb
jmp
cmc
lock
push
jns
pop
xchg
mov
daa
add
dec
je
dec
push
sbb
push
jp
xchg
js
mov
push
mov
into
mov
test
ret
cli
leave
(bad)
popa
or
enter
retf
xchg
push
cmp
add
imul
leave
or
das
inc
fistp
inc
adc
mov
jl
or
sbb
ja
movs
fs
outs
lock
mov
or
loop
addr16
push
shl
mov
cmp
mov
add
loop
stos
inc
sbb
fcom
pop
jp
int3
or
fld
in
pop
jl
popa
in
retf
cmp
movs
div
adc
in
cmps
pushf
je
imul
mov
lock
push
mov
and
inc
cwde
das
mov
retf
popf
jnp
xchg
fbld
mov
les
test
je
mov
pop
jne
call
push
jl
lds
rol
mov
xchg
add
lahf
iret
or
xor
dec
enter
lahf
imul
lea
jecxz
enter
inc
pusha
in
sub
ret
test
dec
call
mov
mov
ror
shl
or
pop
pop
jns
jp
stc
push
les
adc
xchg
and
or
popf
mov
ds
mov
stos
inc
int
inc
leave
or
and
jl
ss
jb
mov
outs
and
(bad)
xchg
lods
imul
imul
outs
sar
dec
cli
jl
dec
jle
pusha
mov
sub
sti
inc
inc
xor
jnp
inc
jbe
stos
cmps
xor
mov
pushf
rol
mov
ins
adc
test
xor
mov
enter
out
jmp
mov
xchg
movs
js
and
push
cld
std
cdq
arpl
mov
pop
repz
adc
add
push
es
mov
cmp
int
lds
pop
adc
lods
or
das
pushf
(bad)
jmp
push
adc
xor
mov
imul
ror
mov
or
mov
or
and
pop
sub
sub
jbe
shr
cmp
sub
pop
push
mov
cmps
add
cs
sar
data16
pop
fs
daa
cwde
(bad)
cmps
test
cld
pop
leave
jge
cli
sbb
jnp
and
aam
push
push
enter
push
out
jns
into
inc
jb
cmp
or
fsubr
ror
and
fadd
inc
retf
mov
dec
push
add
pushf
mov
push
shl
pop
fs
shr
(bad)
or
cmp
leave
imul
inc
fsubr
sub
push
inc
rcl
xchg
inc
or
sbb
gs
cld
retf
push
dec
push
fisttp
pop
push
jmp
dec
inc
lahf
cwde
jns
push
mov
pushf
(bad)
lods
int3
xlat
adc
jns
bound
les
jo
push
cmp
ss
call
sub
add
inc
repnz
jnp
sti
cmp
jge
xor
hlt
daa
pop
clc
jle
icebp
loope
pusha
push
nop
push
and
jo
cmp
jge
sbb
sar
hlt
les
xor
jmp
rol
fucomp
scas
cmc
mov
and
bound
mov
cmp
retf
fistp
or
mov
lods
rcr
bnd
imul
je
sahf
je
hlt
and
pop
or
out
mov
mov
scas
jmp
xchg
mov
stc
xchg
adc
repnz
xlat
std
in
mov
daa
js
inc
fbld
xchg
es
iret
add
sbb
mov
xchg
lods
sbb
bound
fdiv
std
iret
loope
sbb
inc
fnstenv
jg
fiadd
jecxz
inc
mov
jp
les
stc
lock
mov
lods
adc
mov
inc
mov
aas
sbb
mov
sbb
xor
pop
mov
lods
cmp
inc
sub
xor
dec
je
stc
and
and
pop
or
jb
in
ds
in
jp
sub
sbb
cmps
hlt
mov
and
ror
loopne
jno
push
js
lods
movs
push
test
jmp
adc
(bad)
jo
xchg
mov
retf
pop
mov
xlat
popf
stos
add
pop
fstp
(bad)
jne
out
retf
mov
leave
dec
inc
out
mov
loope
pushf
xchg
sbb
cli
ds
sahf
and
movs
mov
inc
or
sbb
xchg
mov
xchg
push
(bad)
xor
ja
cld
daa
xchg
pusha
or
jb
cmp
dec
mov
mul
movs
inc
xor
fs
shr
test
ds
int3
xchg
pusha
pop
xor
fld
mov
mov
retf
icebp
dec
xchg
push
bound
fs
arpl
repnz
mov
imul
es
sbb
mov
scas
dec
mul
daa
pop
mov
jo
cs
dec
cmps
mov
push
ds
sub
ss
aas
cmc
pusha
out
out
mov
and
xor
jne
test
xor
ja
jl
dec
pop
pop
fsub
pop
add
jne
dec
jne
dec
bound
adc
inc
int3
jno
lock
jg
leave
mov
sbb
adc
mov
popf
xchg
dec
cmc
jmp
sub
adc
imul
inc
(bad)
dec
lahf
out
bound
fild
imul
fstp
push
cmp
out
(bad)
sub
(bad)
pusha
cmps
ret
sbb
ins
sahf
into
dec
in
push
or
or
mov
or
mov
in
mov
dec
imul
sub
inc
out
pushf
mov
mov
adc
push
cld
cmc
ins
push
(bad)
xchg
scas
(bad)
mov
div
cld
lds
je
push
dec
sub
fbstp
daa
js
(bad)
into
lahf
jae
sub
inc
adc
jecxz
out
scas
test
std
retf
and
cld
das
jle
out
sbb
cld
repnz
call
mov
scas
or
les
jecxz
sahf
sbb
or
pop
stos
dec
mov
add
push
mov
mov
fcom
cmp
(bad)
test
in
nop
fs
sbb
adc
mov
mov
call
into
adc
cmp
loopne
movaps
mov
xchg
out
gs
mov
jo
jmp
sub
pop
mov
push
adc
js
xor
jge
test
xchg
pop
pop
iret
int3
jb
and
xlat
pop
sub
mov
mov
mov
mov
test
mov
and
out
add
adc
dec
popa
in
shl
idiv
and
ins
cmp
ins
ins
mov
adc
sub
push
iret
lods
movs
cmp
or
or
scas
loopne
loopne
movs
in
xchg
jle
stc
inc
mov
ds
inc
jmp
movs
sub
cld
jno
lea
repnz
sti
lea
out
stos
xor
bound
add
jp
mov
out
icebp
lods
int
dec
test
jg
retf
pushf
retf
mov
or
push
cmp
into
aam
adc
jb
fst
(bad)
popf
jl
mov
stos
scas
sub
jne
mov
and
popa
sahf
or
movs
adc
jecxz
shr
adc
call
inc
test
in
and
in
popf
arpl
or
ror
leave
adc
pushf
ret
push
mov
lea
push
add
push
mov
pushf
out
imul
xchg
enter
inc
sbb
xor
iret
lar
imul
ss
jmp
cli
mov
or
inc
shl
mov
fs
aam
jno
(bad)
frstor
and
mov
and
cmp
jnp
cmp
fwait
mov
add
aad
push
mov
jl
inc
mov
lods
nop
add
inc
es
xor
bound
xor
ins
xchg
movs
inc
dec
pop
enter
daa
inc
pop
fwait
dec
cmps
lock
cmp
movs
sbb
xchg
psllw
mov
pop
inc
pop
daa
add
test
(bad)
int3
push
sbb
sahf
jb
pop
lock
imul
cmps
fisubr
and
push
das
push
(bad)
dec
or
fs
nop
cmp
pop
xor
sbb
mov
(bad)
or
es
gs
cwde
sti
idiv
lods
inc
cmps
(bad)
ja
adc
aas
add
lods
std
mov
push
sbb
sbb
popf
fdivr
xchg
mov
cli
popa
mov
adc
fnstenv
in
mov
xor
mov
cli
mov
xchg
stos
mov
push
mov
inc
inc
push
push
pop
dec
push
inc
xchg
push
push
or
mov
or
retf
loope
(bad)
pop
push
inc
adc
fsubr
lahf
mov
adc
jnp
repz
and
push
inc
adc
sub
int3
fwait
push
sub
scas
out
adc
mov
int
dec
das
daa
pop
xchg
dec
jns
pop
ja
popa
push
jecxz
adc
push
pop
add
push
jns
int3
sub
adc
adc
movs
jns
mov
(bad)
fsub
in
std
jg
dec
dec
aad
push
mov
inc
rcl
jo
inc
jb
sahf
movs
and
inc
pop
pop
fisttp
ret
add
push
pop
jae
adc
add
jle
inc
jae
jne
jb
sbb
sub
test
cmp
mov
call
mov
fcomp
push
std
pop
pop
xchg
pop
xlat
push
adc
arpl
ins
out
cmc
in
cmp
mov
call
mov
fstp
pusha
(bad)
rcr
dec
les
pop
pop
outs
push
out
pop
test
jno
push
lods
sub
cwde
pop
xchg
rcl
clc
pop
xchg
inc
fsubrp
jp
(bad)
dec
int3
out
sbb
pusha
jns
xor
(bad)
push
ins
arpl
aas
das
cmps
ss
out
ins
xchg
add
sub
bound
sub
mov
int
pop
sub
rcr
adc
cmp
cmp
mov
xchg
cmp
push
fnsave
test
iret
sbb
push
or
pop
cdq
sub
or
rcr
inc
dec
adc
and
sub
add
jmp
mov
or
inc
cmp
mov
fld
mov
or
mov
ja
pop
pop
mov
sbb
out
jp
mov
out
pop
test
jo
pop
add
xchg
mov
inc
pop
jle
xchg
call
idiv
inc
dec
and
(bad)
es
xchg
cdq
cmp
pop
sar
neg
aad
into
in
out
in
mov
push
mov
aam
pop
xor
jl
adc
out
nop
hlt
out
(bad)
push
or
and
xchg
inc
xor
in
mov
test
shr
push
outs
inc
push
jecxz
in
imul
cmps
lods
icebp
stc
test
sub
or
fnsave
loopne
mov
jge
push
push
sbb
pop
add
ins
loopne
fwait
or
popa
icebp
push
inc
sbb
outs
cld
and
retf
adc
outs
movs
ds
pusha
adc
mov
sub
pop
inc
jno
lods
mov
pop
xor
stos
out
ret
xchg
std
(bad)
fnstcw
pop
jle
(bad)
cmp
cmp
pop
sbb
or
sub
out
or
in
imul
popa
add
jg
bound
fcmovb
lock
nop
jno
xor
and
scas
outs
nop
or
imul
and
sub
ins
and
pushf
or
(bad)
shl
fidiv
jmp
dec
pop
mov
jns
pushf
inc
xor
test
and
ins
movs
(bad)
loope
popa
dec
push
sbb
inc
pop
sbb
cmp
mov
pushf
xchg
(bad)
(bad)
cwde
xchg
add
and
pusha
mov
enter
movs
jp
pop
fiadd
mov
ins
mov
fild
movs
dec
sbb
mov
sub
or
imul
mov
cmc
repnz
mov
jg
inc
repz
or
pop
pop
jecxz
test
sbb
loope
ret
mov
or
jnp
(bad)
sbb
push
xor
cmps
mov
sti
xlat
into
mov
pop
mov
das
jp
icebp
sub
mov
cmp
lahf
mov
dec
lea
ret
lahf
and
mov
mov
in
push
add
cwde
mov
test
pop
mov
jns
cmps
mov
cld
das
or
sahf
inc
call
stc
or
sar
fadd
jno
and
stos
ret
test
dec
repnz
adc
nop
sbb
inc
test
xor
pop
sub
cmp
mov
sti
fs
or
inc
push
mul
xchg
sbb
jo
mov
pop
sbb
test
rep
cmps
dec
shl
mov
xor
mov
stc
mov
aad
enter
into
xor
dec
adc
sub
sbb
add
dec
add
cmp
sub
(bad)
xchg
fs
mov
inc
aaa
shl
jno
or
fistp
inc
sbb
lods
ror
(bad)
enter
(bad)
inc
sti
(bad)
pop
stos
jge
xchg
hlt
nop
sar
das
xlat
(bad)
cdq
push
pop
jp
mov
aam
xchg
outs
pop
test
iret
inc
out
test
push
sub
adc
add
pop
dec
(bad)
or
popf
cdq
push
stos
sbb
or
jae
bound
aam
rcl
jb
xor
addr16
pop
dec
fstp
push
bound
jae
mov
push
rcl
sub
push
popa
nop
jbe
pop
les
mov
mov
mov
add
push
icebp
retf
loop
leave
push
push
adc
outs
mov
jns
push
push
jbe
cs
mov
cs
in
fcom
pop
stos
push
push
sub
in
movs
jo
sbb
iret
sub
mov
mov
mov
in
cmp
mov
push
call
pop
aaa
pushf
sbb
mov
mov
sbb
test
jmp
pop
outs
fdiv
scas
out
dec
fsubr
jb
test
xchg
xchg
or
jle
xchg
or
push
pop
ja
cdq
pusha
sahf
jne
ds
rol
and
lock
xchg
fadd
retf
xor
stc
jnp
add
scas
fld
sbb
out
mov
fistp
and
ds
pop
mov
jp
imul
xor
push
mov
mov
add
sbb
xchg
dec
pushf
push
lods
mov
xor
cmp
xor
outs
cs
ret
or
(bad)
inc
xlat
fcomip
in
mov
(bad)
fst
mov
jle
push
add
outs
cmp
or
push
sti
sti
out
icebp
pmulhuw
lods
loopne
(bad)
repnz
inc
stc
shl
ret
or
loopne
or
mov
fdivr
sbb
leave
pusha
into
jecxz
xchg
sub
lods
int3
push
sti
push
shl
and
in
outs
(bad)
(bad)
call
call
ss
cmp
sbb
adc
dec
outs
xor
dec
fwait
sbb
or
pusha
pop
test
add
std
sbb
cmp
test
mov
gs
es
sbb
and
retf
or
xchg
ret
jns
int
adc
stos
out
jb
jb
push
xor
add
xchg
js
fild
fdivr
mov
push
icebp
and
sub
cmp
cdq
fs
mov
out
scas
push
mov
mov
jle
cld
aam
data16
scas
mov
mov
push
add
gs
adc
add
mov
mov
cmp
mov
fidiv
fnstsw
jecxz
popf
hlt
fld
nop
fst
arpl
or
and
and
xchg
xlat
push
les
lods
or
mov
xor
jmp
inc
les
pop
movs
out
fnstsw
adc
cmc
push
imul
les
and
inc
push
push
out
pop
mov
push
fwait
dec
fisttp
das
enter
xor
or
fsubr
adc
and
pop
imul
aad
imul
and
test
enter
outs
sbb
mov
sub
and
mov
les
cmps
sahf
sbb
fild
xlat
jl
or
pop
jmp
push
cwde
pop
call
fld
sbb
fcmovne
cld
fist
and
cmp
repz
stc
ins
std
sub
stos
mov
jecxz
iret
pop
and
mov
jbe
gs
push
or
gs
cmp
and
mov
dec
lods
repnz
jno
stc
cmp
lock
lock
xchg
sub
cwde
in
pop
add
xchg
mov
dec
popa
mov
push
mov
aad
lods
fsubp
jge
pusha
sub
out
outs
push
mov
das
sbb
fisubr
stos
cmps
sar
mov
loopne
xor
mov
fs
pop
out
addr16
cld
pop
sub
fwait
adc
or
loopne
mov
repz
popa
dec
retf
mov
inc
xor
pop
dec
dec
mov
repnz
shl
jns
out
jo
cs
sub
into
pop
mov
fmul
mov
inc
imul
gs
add
in
cmc
sub
push
sbb
adc
lods
lock
int
or
mov
dec
test
jns
aam
add
mov
rol
sbb
(bad)
mov
push
sub
pusha
repnz
scas
mov
movs
jmp
mov
leave
and
mov
inc
in
inc
xlat
cmp
fist
sub
aad
call
call
sbb
mov
cmp
xor
aad
lahf
xchg
inc
mov
sub
adc
push
rol
sub
push
jne
sbb
mov
sbb
mov
xchg
mov
jns
ret
and
hlt
and
mov
ins
adc
and
mov
int
das
dec
std
js
push
popa
(bad)
clc
mov
rol
sbb
fucomp
stc
cmps
imul
lock
mov
enter
sbb
retf
or
or
inc
mov
gs
jle
call
adc
sub
test
fdivr
sub
mov
ins
test
cdq
pop
iret
ins
call
add
into
mov
fwait
imul
int3
sbb
mov
sbb
loopne
hlt
and
sbb
xchg
cmp
add
scas
sti
test
push
and
test
jecxz
mov
ins
mov
cmp
pop
cdq
sbb
stos
sub
mov
dec
scas
bound
repnz
fcmove
xchg
inc
test
enter
sbb
jl
loop
or
jmp
out
lahf
std
jae
fdivr
out
fidivr
test
mov
pop
popf
int
mov
jnp
mov
je
dec
sbb
in
movq
mov
int3
shr
mov
fbstp
in
xchg
jae
sbb
mov
stos
ror
cmps
mov
sub
adc
push
cmp
xchg
pop
shl
add
add
xor
mov
mov
sbb
mov
cld
xchg
sub
neg
pop
ins
add
out
fs
test
and
(bad)
outs
fbld
pop
addr16
int3
inc
jnp
cld
pop
cmps
dec
cmp
and
retf
nop
or
ret
or
jno
out
adc
les
test
fwait
inc
call
add
xor
arpl
cmps
lahf
or
pop
adc
(bad)
arpl
ins
mov
cs
in
push
dec
int
in
or
cmp
idiv
outs
cmp
cmp
test
pop
or
dec
test
sub
adc
call
cmp
cmp
jmp
jmp
jp
xor
push
in
icebp
sbb
ss
in
push
lea
ins
pushf
dec
int3
jl
cld
sar
cmp
push
push
cmp
sbb
out
cwde
jecxz
cwde
or
pushf
mov
mov
cmps
xchg
cli
call
mov
imul
xor
jmp
lds
les
movs
xor
xor
cmp
jge
mov
xchg
pop
outs
sbb
shl
mov
pop
push
dec
stos
adc
ins
das
addr16
inc
movs
mov
mov
mov
bound
dec
xor
in
jle
push
addr16
daa
es
pop
(bad)
movs
jb
inc
les
push
push
aas
lea
dec
aaa
push
xor
jmp
mov
sbb
aaa
mov
add
cmp
lahf
stos
pop
mov
jmp
std
aaa
cmps
sti
icebp
add
or
out
sbb
cmp
and
outs
jbe
ins
dec
sub
adc
sbb
fwait
jge
cs
mov
and
int3
lahf
sub
imul
sbb
les
sbb
out
mov
imul
rcr
inc
push
adc
mov
and
mov
movs
inc
xor
dec
xor
jg
mov
or
pop
jae
sub
mov
lods
and
and
jg
jge
jb
mov
adc
pusha
mov
sbb
movs
repz
aad
pop
fstp
ror
pusha
icebp
dec
fild
(bad)
or
loope
xor
int
mov
push
es
mov
les
dec
ins
dec
fist
pop
lods
loope
pop
test
rol
adc
pop
jae
add
pop
jns
push
xchg
dec
push
inc
push
xor
iret
mov
mov
cli
jmp
call
adc
call
(bad)
dec
rcr
ret
or
scas
dec
fidiv
mov
dec
and
cwde
retf
pop
jmp
ja
xchg
adc
inc
scas
jecxz
ins
leave
jne
and
mov
pop
out
sar
arpl
(bad)
mov
jns
cmp
in
lea
xchg
mov
pop
ret
dec
sub
fs
xor
lahf
sub
xchg
xlat
sub
(bad)
call
xchg
fistp
test
xor
xchg
(bad)
aam
jbe
dec
sbb
pusha
test
or
push
mov
stc
inc
in
mov
sub
jmp
jge
lds
mov
scas
rol
fisub
jp
leave
push
or
pushf
ss
push
sub
sbb
mov
pop
cmps
push
pop
in
mov
sub
mov
cwde
mov
push
jne
adc
test
loope
scas
(bad)
or
sbb
push
popf
or
ds
pop
sub
jg
mov
icebp
fadd
pop
jecxz
outs
push
out
or
lods
inc
xchg
or
shr
push
inc
jb
add
inc
fdivp
imul
out
inc
xchg
out
jp
pop
hlt
jno
cmps
out
bound
lea
dec
or
mov
mov
xor
in
or
data16
dec
sub
jns
sbb
or
and
leave
xchg
adc
in
mov
pop
mov
hlt
dec
inc
lahf
push
bound
int3
daa
push
mov
jg
mov
test
mov
call
stos
imul
jne
cwde
js
or
jnp
add
js
shl
push
xchg
out
dec
stos
ss
mov
repz
jge
adc
inc
sar
push
add
daa
repnz
fsubr
mov
cmps
jp
mov
cmp
cmp
xlat
adc
bsr
in
movs
popa
aas
pop
call
xor
popf
mov
cmp
jns
lods
fidiv
repz
sbb
jp
inc
adc
mov
pop
sbb
int3
ins
fcmovb
xchg
and
imul
push
cli
lock
xchg
daa
and
scas
mov
popf
sbb
inc
mov
pop
xlat
mov
out
fcom
fwait
aas
jmp
ret
jecxz
imul
ins
ins
imul
das
adc
retf
lods
mov
jno
push
and
mov
cmp
xor
lahf
dec
call
sbb
loope
mov
loopne
retf
stos
jmp
retf
push
ret
cmp
call
in
push
xchg
nop
sub
not
xor
push
and
fist
fld
out
loope
jl
fcomp
sbb
xchg
cwde
push
pop
mov
fcom
lea
cmp
jne
mov
xor
mov
mov
pop
test
sbb
adc
retf
jae
stc
je
mov
and
mov
cmp
aad
cmps
rcr
mov
fisttp
jno
movs
test
add
in
mov
add
or
fdivr
ret
sub
mov
dec
shr
push
ds
sbb
pop
push
add
(bad)
and
xchg
ficomp
lods
sbb
xor
(bad)
ror
clc
jno
xor
aam
pop
push
sub
inc
jno
pop
sbb
fsubr
inc
sub
jl
jmp
fsubr
sbb
cs
das
bound
(bad)
fmul
or
cmp
pslld
hlt
ja
ret
les
sbb
bound
mov
test
cs
mov
add
or
out
jns
stos
pop
test
sahf
mov
inc
popa
mov
push
jmp
or
popa
mov
(bad)
out
cld
aaa
ror
pop
add
lea
stos
sub
dec
mov
ret
aad
jmp
scas
mov
sub
adc
xor
sub
cmp
pop
add
cmps
rcl
sub
mov
fs
out
sahf
(bad)
rol
and
arpl
cmps
outs
mov
dec
mov
inc
mov
pop
pop
int3
arpl
jl
xchg
mov
stos
loop
xor
loop
cmc
arpl
pop
in
cmp
test
movs
mov
stc
or
cmp
test
lock
int3
push
fwait
jbe
icebp
stos
or
dec
rcr
(bad)
sahf
aam
les
add
das
fsub
rol
add
sti
out
sahf
sar
std
jno
imul
sub
pop
outs
and
das
ds
and
jnp
rcr
xchg
cmp
rol
mov
inc
jae
ret
mov
lods
add
into
pop
cmps
cmp
mov
cmc
lods
inc
les
pop
sbb
mov
(bad)
ds
inc
ins
lock
test
nop
push
(bad)
push
cs
mov
out
or
sti
mov
rol
push
add
dec
dec
mov
std
mov
xchg
test
outs
popf
out
cmp
rol
aam
push
mov
int3
and
mov
fst
popa
js
iret
xchg
popf
pop
in
je
mov
sub
ret
push
adc
push
gs
hlt
jnp
adc
sbb
cmp
cwde
jle
int
mov
lea
(bad)
scas
iret
(bad)
adc
nop
pop
push
jl
scas
mov
sub
mul
mov
rol
gs
test
pusha
daa
ror
cmp
ds
in
xchg
adc
pushf
cld
sbb
pop
aam
rcr
add
mov
scas
shl
inc
aam
inc
mov
clc
mov
and
xchg
ins
out
(bad)
pop
sbb
pop
in
dec
cmp
jmp
fsubr
pop
or
dec
and
stos
cmp
cmp
mov
adc
inc
stos
sahf
js
mov
jmp
repz
sub
xor
imul
ins
div
sbb
or
test
mov
call
(bad)
pause
out
ret
rcr
popf
in
loopne
outs
cmps
mov
fiadd
sbb
retf
aam
mov
jne
shr
leave
xor
cdq
cmp
ja
int
and
test
adc
fstp
or
popf
mov
mov
push
pop
pop
mov
add
sub
adc
push
or
jle
jb
pop
mov
mov
sbb
xchg
repz
dec
test
retf
push
ins
cmp
ins
sub
xchg
mov
sub
in
pop
shl
mov
and
call
iret
mov
adc
pop
popf
fs
xor
pop
addr16
jns
sub
sub
jg
cdq
addr16
cmps
cwde
leave
lock
mov
mov
ins
jnp
jge
and
rcl
adc
mov
jmp
adc
xlat
inc
inc
dec
mov
ffree
cmps
mov
and
es
pop
add
sbb
or
retf
imul
adc
aad
mov
mov
and
mov
sub
ins
sbb
test
adc
xor
pushf
int
push
movs
pop
aad
ss
and
sbb
xlat
ret
mov
mov
es
sbb
nop
inc
pop
shl
psubb
rcl
scas
std
sub
pop
cmp
xchg
push
pop
adc
sbb
pop
daa
adc
hlt
idiv
jmp
inc
repz
enter
mov
not
mov
addr16
sbb
push
shl
jecxz
xor
or
ror
xor
xchg
dec
lods
pop
stos
mov
mov
xchg
xchg
stos
or
jns
aas
ins
sbb
xchg
dec
xor
sar
sbb
xchg
jmp
and
push
retf
jb
push
iret
das
js
das
fmul
mov
loopne
lods
fidivr
sbb
lea
adc
jg
hlt
sti
sar
mov
jecxz
xchg
inc
hlt
or
cdq
ins
test
lahf
xchg
xchg
and
imul
repz
jecxz
sar
add
xchg
int3
cmp
movs
lock
jg
and
and
int3
jae
pop
(bad)
movs
cmp
in
mov
push
push
push
test
ret
pushf
mov
shl
cld
loopne
in
or
sub
cmp
(bad)
cmp
idiv
pusha
mov
or
or
mov
dec
adc
jb
mov
repz
aad
jb
iret
rcl
or
in
pop
xor
cdq
out
mov
jmp
sub
jle
dec
cmp
scas
call
iret
arpl
mov
ins
leave
sahf
lods
dec
ds
(bad)
sub
ja
data16
mov
inc
ins
popa
xchg
sbb
mov
repz
pop
mov
lahf
movs
cwde
mov
int
cmp
ds
xor
in
and
(bad)
lods
das
xchg
jle
xor
mov
pusha
mov
mov
pop
leave
lods
sub
cmp
push
xchg
ret
in
adc
sbb
dec
add
jo
lea
or
xchg
xchg
mov
faddp
inc
cs
pop
dec
sub
mov
stc
push
js
fwait
pop
cmp
lea
sub
(bad)
xor
je
mov
pusha
xchg
test
sbb
call
mov
dec
cmp
xchg
out
scas
mov
pusha
out
nop
add
mov
jns
mov
inc
xchg
dec
pop
std
adc
nop
imul
mov
outs
out
dec
mov
cld
cdq
out
rcr
ja
mov
scas
inc
leave
js
pop
cmp
cmp
sbb
outs
adc
cmp
pop
icebp
sbb
push
push
sub
adc
push
div
adc
adc
rcl
sbb
ins
mov
jno
sub
aam
mov
xlat
xchg
in
enter
and
outs
sub
in
cmps
mov
bound
iret
mov
push
inc
mov
push
add
xchg
in
fst
adc
push
push
jne
jae
xchg
outs
out
or
mov
jae
fbld
jbe
sbb
adc
jno
mov
jnp
jae
or
mov
out
neg
xchg
out
mov
xchg
out
sbb
or
pop
sbb
iret
xchg
xor
lods
pop
sbb
add
and
jle
jne
pop
cs
lea
cli
push
bound
stc
pop
call
pushf
xchg
test
sub
push
inc
ins
xor
sub
push
sahf
das
xor
adc
jnp
mov
test
mov
inc
das
or
pop
adc
mov
push
jae
out
loope
scas
push
adc
mov
ficomp
test
mov
enter
cli
push
cmp
cmp
loopne
inc
inc
or
pop
lds
cmp
in
(bad)
pushf
jae
inc
push
ins
jl
sub
ja
push
int
fdivrp
lds
ins
xor
push
lds
pop
adc
push
cmp
loopne
dec
cmp
xchg
jnp
pop
pop
into
xor
cmp
call
out
repz
jecxz
adc
shl
inc
xor
add
xchg
and
out
gs
stos
(bad)
test
mov
mov
test
mov
test
dec
aam
lock
xor
sbb
sbb
push
cld
repnz
jle
retf
and
or
xor
jg
fcom
icebp
rol
ror
in
add
sar
cs
add
xchg
pop
repz
ret
adc
idiv
mov
dec
inc
inc
sbb
cli
cmp
push
or
adc
push
retf
pop
adc
into
cmp
retf
loope
js
mov
outs
sar
push
fld
movs
adc
add
mov
xchg
ss
and
cmc
xchg
jp
pop
not
cmps
pop
pop
repnz
or
lds
in
xchg
mov
enter
data16
push
mov
dec
stc
cmps
and
test
inc
pop
dec
push
adc
cmps
mov
jecxz
xor
cmp
jp
pushf
and
(bad)
loop
dec
scas
es
jp
aad
add
push
gs
clc
mov
iret
sbb
sub
jle
inc
add
pop
and
cld
sub
lock
mov
iret
push
or
lods
movs
int
jae
add
adc
mov
jge
adc
shl
int3
out
mov
arpl
lock
sbb
ret
add
xor
and
js
bound
jle
push
jp
mov
movs
lock
nop
mov
or
inc
push
sbb
mov
(bad)
adc
dec
push
push
fidiv
in
mov
in
pop
sbb
loop
stc
movs
cmp
stc
sahf
bound
retf
jbe
mov
jmp
or
mov
sbb
mov
and
xchg
push
mov
jbe
out
and
test
xchg
cld
out
aas
imul
dec
sub
mov
and
adc
xchg
and
jns
pusha
jbe
sbb
inc
je
jle
pop
cmp
and
retf
std
xor
jno
xor
xchg
fnstsw
movs
sub
adc
jno
cdq
add
jge
(bad)
nop
stc
(bad)
fist
mov
cli
push
lahf
aad
xchg
mov
or
(bad)
stc
stos
mov
(bad)
(bad)
mov
movs
jle
lods
inc
mov
outs
adc
sbb
ja
push
scas
js
js
int3
jge
in
push
imul
inc
jb
aam
inc
cmp
pop
mov
push
mov
fsub
out
and
push
dec
mov
lea
mov
cmp
cwde
mov
cmc
mov
in
imul
scas
rol
xchg
jge
cmc
mov
test
mov
sbb
outs
xor
xchg
or
pusha
dec
popa
scas
pop
jbe
xlat
shl
xadd
je
xchg
std
jl
add
pop
int3
mov
xor
xchg
scas
(bad)
into
cs
xchg
xor
ds
push
or
jae
cmp
in
xchg
mov
push
ins
or
stos
dec
out
addr16
and
pop
cli
fistp
pop
imul
test
push
adc
js
leave
pop
mov
retf
je
sbb
xchg
pushf
mov
pushf
(bad)
fisub
shr
mov
inc
sbb
mov
mov
mov
xor
sbb
push
jg
(bad)
fcomp
push
adc
das
push
mov
jnp
mov
push
cmps
stos
add
(bad)
and
or
mov
pop
mov
xchg
aad
movs
mov
popf
jl
sbb
pop
or
sub
add
lahf
add
pop
imul
sbb
repz
inc
push
push
jecxz
adc
jmp
cmps
xchg
jne
(bad)
imul
pop
cmp
cmp
ja
scas
loopne
ror
ret
mov
cmp
jmp
jb
test
gs
sbb
cmp
call
pop
inc
dec
lock
sub
dec
mov
jge
mov
ins
ret
leave
xchg
sub
scas
(bad)
les
and
xor
xchg
xchg
aas
outs
push
push
in
or
push
(bad)
mov
out
dec
imul
mov
pushf
stc
add
into
mov
arpl
movs
fs
mov
xchg
xor
test
movs
push
(bad)
cmp
out
pop
jl
mov
jno
int
inc
jecxz
into
ret
mov
sub
js
adc
retf
addr16
mov
sbb
aaa
test
xor
adc
ret
mov
and
cmp
mul
scas
and
mov
jl
repnz
cmp
xchg
in
daa
lds
inc
test
dec
js
xchg
mov
dec
jne
int3
jnp
or
dec
inc
dec
adc
xor
mov
pop
push
or
push
and
int
int
sub
push
scas
loope
nop
lea
aad
cmp
scas
movs
or
imul
ror
sub
xlat
and
aad
cmp
xchg
pop
cmc
retf
push
clc
test
mov
imul
sub
stos
inc
or
shl
(bad)
adc
cld
mov
(bad)
aam
or
xchg
call
ins
cmp
xor
or
add
test
ss
adc
out
mov
jle
push
aad
fcomp
mov
mov
mov
pop
cs
in
push
xchg
push
xor
sbb
in
add
xchg
or
cmps
lahf
xor
fistp
ficomp
jae
pop
and
sar
rcr
pop
iret
sub
es
mov
mov
jbe
inc
add
xor
xor
mov
push
push
push
cmps
mov
mov
jmp
sbb
jnp
in
mov
lock
sub
adc
test
fistp
int3
out
cmp
aas
mov
cmp
lock
out
add
ja
pop
daa
aad
add
jge
mov
add
leave
push
inc
jge
pop
sbb
adc
jmp
test
fwait
stc
sbb
int3
jmp
mov
stos
imul
dec
push
mov
jb
dec
mov
add
push
xor
or
aaa
xor
data16
jl
jnp
push
jle
mov
ss
loope
fnstsw
or
jnp
sbb
in
shl
retf
stc
push
mov
retf
ds
pop
xchg
popf
leave
xchg
add
fwait
sbb
aaa
pop
aad
das
add
dec
mov
pop
fld
iret
fdivr
in
sub
data16
test
lea
xor
sbb
add
push
lea
imul
ins
imul
imul
test
cmp
fbstp
dec
gs
cwde
cli
cmp
dec
add
ds
enter
lds
lea
xchg
punpckhwd
(bad)
out
sbb
pusha
mov
pop
mov
je
cmp
xor
test
je
adc
gs
ins
xchg
scas
fcmovu
pop
pop
repz
dec
xchg
add
push
adc
dec
mov
xchg
jge
sbb
dec
pop
frstor
jbe
mov
aas
repz
popa
or
popa
inc
(bad)
pushf
into
xchg
call
mov
out
or
xor
cmp
sti
and
inc
inc
add
aad
mov
inc
stc
or
mov
es
pop
jnp
mov
ds
xor
sbb
push
ds
mov
and
mov
push
repz
loope
test
int3
outs
jecxz
xchg
imul
inc
mov
sti
fist
cmps
js
ficom
and
imul
mov
jecxz
jmp
lods
xchg
popa
and
add
mov
fs
test
test
iret
pushf
pop
or
aam
arpl
or
ins
inc
out
pop
push
imul
fimul
(bad)
jmp
iret
pop
inc
mov
dec
mov
or
call
scas
push
xor
retf
jg
leave
mov
leave
in
mov
dec
mov
lea
pop
mov
jo
pop
lds
aas
neg
add
cwde
jmp
xrelease
mov
aas
fsub
loopne
ins
and
arpl
mov
in
push
sub
and
popf
mov
mov
div
outs
adc
xor
jmp
aaa
outs
sbb
lea
push
(bad)
xchg
push
jmp
cmp
lds
ins
xor
inc
test
(bad)
jb
sub
jle
out
sub
movs
in
pop
movs
dec
lods
pop
arpl
cmp
imul
xor
(bad)
jmp
mov
cmps
mov
ins
pop
nop
(bad)
mov
cmp
pop
mov
(bad)
rcl
movs
sub
and
sbb
inc
arpl
sub
test
jns
enter
out
lods
fdivr
call
in
mov
xor
jns
aad
mov
inc
(bad)
ret
or
dec
mov
adc
sti
xor
xchg
outs
pop
jno
sub
push
ins
push
loop
pop
hlt
das
sub
mov
test
pop
push
jle
ss
lahf
mov
adc
aas
movs
jl
ror
dec
outs
push
mov
scas
out
in
call
mov
test
jecxz
push
scas
xor
out
inc
jno
add
jle
repnz
out
inc
push
ja
add
in
icebp
outs
jne
pop
mov
cld
loop
jp
inc
dec
ror
xlat
mov
js
sub
or
loopne
xlat
rol
lea
sahf
dec
cmps
(bad)
xor
loope
(bad)
dec
and
fist
inc
cmp
inc
or
daa
ret
push
inc
retf
add
(bad)
(bad)
rcr
bound
fwait
jp
pop
pop
dec
pop
push
xor
push
push
sbb
aam
test
ret
ja
popf
xchg
mov
mov
jp
shl
add
leave
aas
bound
ins
imul
loopne
push
fs
retf
outs
adc
mov
iret
jo
fidivr
mov
test
push
test
les
and
or
aas
mov
push
push
pop
lahf
cmp
fmul
loop
loop
jnp
push
sbb
push
pop
clc
pop
imul
lahf
push
xchg
xor
xchg
fiadd
cmp
aad
mov
mov
addr16
and
outs
js
std
ficomp
popf
cmps
dec
sbb
enter
push
inc
mov
jb
xchg
retf
sbb
mov
inc
hlt
in
retf
inc
aad
inc
pop
push
pop
sbb
retf
lods
add
mov
xor
mov
mov
jns
push
jg
sahf
cmp
pop
rcl
in
popa
addr16
fcomip
addr16
mov
and
call
loope
(bad)
ja
xchg
call
daa
scas
pushf
dec
ds
push
shl
sahf
sbb
mov
jae
mov
mov
sub
mov
mov
mov
push
inc
cmp
test
loopne
fldcw
gs
ret
shl
xlat
pop
inc
and
lods
lods
mov
ror
jns
dec
push
pop
sub
sub
bound
cld
(bad)
adc
cmc
dec
lahf
js
add
(bad)
repz
xor
icebp
mov
push
push
loopne
fld
mov
lea
neg
rol
dec
sbb
pop
ror
cmps
jne
xchg
sahf
inc
test
aad
mul
and
fstp
aad
mov
fsincos
push
mov
icebp
gs
imul
dec
(bad)
fdiv
and
push
push
cli
clc
pop
cmp
aam
dec
call
xor
xchg
cmp
push
inc
das
(bad)
dec
inc
jl
int3
mov
jo
stos
xor
out
xor
cmp
xchg
sbb
mov
mov
ret
pop
add
add
mov
mov
aam
repnz
out
xchg
dec
push
sub
add
retf
stos
jb
mov
call
xor
ret
mov
rcl
xchg
ins
xor
cmp
cld
pop
(bad)
push
daa
in
in
and
pop
outs
jp
mov
dec
adc
bound
jle
stc
inc
and
adc
in
outs
ret
add
push
push
out
int
push
add
mov
adc
cwde
ja
mov
jecxz
sbb
or
pop
adc
and
lds
imul
jge
mov
cld
and
enter
sbb
loope
or
mov
sbb
fs
out
pop
clc
xor
in
add
mov
add
outs
jle
sbb
mov
mov
mov
pop
aad
cmps
es
mov
jmp
and
sub
lock
jge
or
cwde
jle
inc
(bad)
cld
xchg
xor
mov
fs
cs
ds
and
pusha
sub
and
(bad)
pusha
inc
ja
mov
inc
add
add
sar
loop
mov
sbb
shl
sub
xchg
imul
push
je
add
mov
retf
jmp
xlat
adc
sbb
dec
add
mov
and
loope
push
xchg
stc
inc
push
xchg
sub
cmp
dec
jmp
sub
iret
ins
lods
fisubr
mov
push
sbb
inc
and
pop
rol
adc
(bad)
daa
jecxz
mov
ins
push
ins
pop
push
sbb
ins
hlt
imul
push
into
les
lock
cmp
jmp
shl
in
jnp
into
das
adc
xor
xlat
dec
adc
mov
movs
jnp
cmc
mov
sahf
sub
dec
fwait
fwait
adc
or
test
xlat
sahf
push
push
fidivr
push
loop
pop
cmps
lods
fnsave
pushf
mov
rcr
test
add
ret
mov
sbb
cwde
fsub
jl
cmp
fdivr
mov
js
mov
fisttp
imul
js
xor
fld
test
add
loopne
add
dec
jp
outs
fucom
lahf
sti
cmp
int
sub
xchg
inc
js
stos
je
push
rol
imul
cwde
int
push
mov
push
adc
icebp
cmps
(bad)
dec
sbb
xor
pop
(bad)
rcl
mov
das
sub
sbb
mov
adc
cli
stc
xchg
jg
test
imul
enter
cli
inc
sub
inc
repnz
(bad)
cmp
mov
xor
out
loop
cli
xor
repz
and
sbb
sub
jmp
inc
mov
adc
mov
fcomip
sub
jae
int3
jp
lods
neg
sub
cmps
sbb
or
mov
or
add
sub
mov
call
mov
jbe
lods
imul
sbb
adc
jmp
loop
cmps
fcomp
mov
les
adc
sbb
fstp
popf
jmp
scas
sbb
push
ror
pusha
inc
xchg
cli
ds
adc
scas
jmp
xor
or
daa
lock
sub
mov
dec
push
xlat
adc
shl
repz
aaa
imul
inc
jg
dec
inc
dec
pushf
dec
leave
(bad)
mov
inc
mov
adc
call
bound
addr16
int
rcl
shl
mov
imul
in
dec
and
sub
mov
ja
(bad)
int3
or
lds
shl
loope
dec
popa
fcmovb
dec
cmp
les
data16
mov
pop
jo
ins
sbb
dec
jne
aam
sar
shl
movs
push
mov
mov
jl
fbstp
aad
add
push
mov
pop
adc
cwde
xchg
sbb
xor
mov
jmp
pop
(bad)
xlat
aad
xor
inc
or
cwde
dec
enter
and
sbb
daa
icebp
iret
inc
icebp
add
mov
arpl
push
pop
ins
jg
mov
mov
xchg
shld
mov
cdq
dec
sub
dec
icebp
shr
fist
aaa
out
fdivrp
or
mov
ins
sub
push
rol
cmp
inc
cs
ror
dec
fist
retf
mov
sub
xchg
imul
push
shl
jae
(bad)
sub
in
mov
in
out
fild
pop
ins
push
cmp
cwde
add
(bad)
fcmovbe
add
push
cmp
out
test
sti
loopne
int3
fsubr
jle
pop
sub
and
repnz
loop
sbb
mov
cmp
and
out
out
push
xor
aaa
lock
dec
stos
add
jne
lods
loop
mov
movs
xor
test
mov
stos
mov
retf
pop
inc
sbb
popf
dec
jl
sub
cmp
pop
lock
int3
call
stc
add
cmp
aaa
lahf
adc
inc
dec
and
popf
add
shl
iret
xor
push
cmps
loopne
lahf
sbb
aam
add
test
jmp
jbe
sub
or
xor
cmps
or
out
inc
movs
pop
pusha
gs
bound
adc
and
xlat
add
mov
xchg
(bad)
push
call
or
mov
movs
ss
mov
xchg
call
xor
inc
push
sti
mov
je
pushf
mov
adc
cmps
stos
mov
mov
jg
rol
xor
jg
mov
jne
hlt
fcmovne
push
test
push
hlt
dec
scas
or
ret
in
and
add
clc
bound
cwde
xor
sti
loop
cmc
cwde
(bad)
xlat
xor
cmp
inc
adc
xor
and
jle
mov
sbb
hlt
leave
cmp
(bad)
sub
ins
add
sbb
sbb
inc
inc
sbb
add
cld
les
sub
out
not
aam
add
daa
push
sub
scas
mov
dec
in
popa
sbb
daa
xor
test
adc
xor
pop
or
jo
or
mov
rol
repz
xor
xchg
pop
pop
xor
inc
sbb
sub
add
xchg
pop
and
sar
pop
jns
mov
jmp
lock
inc
fwait
cmp
(bad)
dec
pop
jo
pop
adc
mov
mov
xor
ja
clc
cmp
pop
sub
out
mov
mov
adc
shl
mov
push
pop
popf
sub
xchg
mov
pop
popa
mov
mov
jge
and
mov
fcomp
cmp
scas
mov
and
add
imul
or
jns
cs
ds
jmp
cs
dec
sub
mov
nop
(bad)
jle
mov
clc
out
sub
aad
dec
(bad)
leave
nop
ins
adc
add
inc
loopne
neg
call
add
jl
nop
loop
sub
cs
in
pop
aaa
subps
add
jns
cmc
xlat
rcl
add
aam
or
inc
xor
out
ins
test
xchg
mov
add
mov
jg
push
mov
push
lock
sub
daa
pop
cmp
movs
(bad)
xchg
daa
cdq
dec
js
cmp
out
ja
pop
add
aam
inc
mov
inc
shr
je
ja
fwait
xor
fild
stc
ror
scas
repz
shl
cmc
idiv
push
out
mov
cmps
pop
enter
adc
into
jge
or
ss
scas
shr
cmp
(bad)
pop
mov
mov
out
sbb
dec
ret
pusha
ret
loopne
pusha
imul
inc
loopne
sbb
jbe
xchg
jg
cwde
ds
pop
pop
inc
adc
sbb
pop
imul
sbb
push
mov
cmp
cmp
icebp
fst
mov
sbb
xor
add
jns
dec
mov
test
jne
out
call
push
arpl
daa
imul
sbb
sbb
test
out
das
jnp
dec
xor
dec
mov
and
and
cdq
rcl
sub
or
mov
mov
adc
add
rcl
fist
movs
nop
mov
xor
popa
in
retf
retf
dec
shl
int
int3
push
scas
inc
mov
stos
xchg
push
imul
icebp
mov
xchg
push
or
sahf
pop
aaa
jbe
mov
inc
xor
adc
outs
and
je
test
sbb
sbb
stos
daa
test
add
push
jmp
and
fisubr
cmp
mov
bound
sbb
lock
sub
mov
and
call
xchg
in
dec
ret
addr16
cdq
or
xor
pop
sti
icebp
pop
mov
sub
mov
mov
and
mov
push
scas
sbb
mov
test
mov
jp
mov
xchg
xor
fnsave
aad
das
mov
fld
xlat
push
retf
mov
or
push
sbb
and
in
cmp
into
ss
ror
dec
je
sub
and
ret
shl
push
xchg
xchg
dec
int3
cwde
dec
mov
dec
pop
sti
push
jae
lds
jae
enter
je
mov
xor
movs
cs
cmp
adc
movs
mov
call
dec
mov
in
sbb
out
xor
leave
mov
xor
add
int3
xchg
push
dec
xor
dec
enter
push
jmp
sbb
jmp
pusha
sbb
mov
sub
outs
inc
push
cmp
cmp
rcl
add
popf
movs
push
mov
mov
fcomp
xlat
cmp
aaa
out
push
cdq
jae
push
aad
repnz
aas
jbe
(bad)
jmp
ins
out
mov
call
jbe
cmp
sbb
fdivp
inc
in
int3
jbe
arpl
gs
mov
loop
imul
and
mov
mov
movs
pop
sub
cmp
ds
push
mov
and
mov
xlat
sbb
cmps
or
das
pop
inc
fs
mov
sbb
out
xchg
sbb
outs
sar
popf
shl
sbb
rcr
rcr
sahf
idiv
cmps
push
cwde
cmp
call
adc
es
sbb
inc
mov
push
mov
cmps
jl
stos
arpl
cmp
loopne
sbb
lods
inc
lea
cmp
xchg
jo
lods
scas
and
out
adc
xchg
shl
leave
lods
out
jge
sub
add
jnp
es
in
add
(bad)
mov
add
leave
add
cmps
leave
adc
aas
mov
popf
daa
jp
sahf
jnp
jae
icebp
in
jp
mov
push
pop
test
movs
xchg
icebp
mov
cmp
retf
ins
jmp
xchg
push
sbb
test
or
out
dec
xchg
into
scas
test
add
mov
sub
fadd
nop
fldcw
(bad)
mov
repz
outs
mov
or
inc
imul
gs
dec
bound
nop
scas
dec
fcomp
(bad)
dec
clc
sbb
(bad)
push
push
xchg
lahf
ret
sub
fwait
mov
inc
inc
icebp
fsubr
jp
jle
fwait
jno
cmp
inc
loop
scas
push
jg
not
xor
aam
std
push
iret
stos
lods
jmp
jl
out
rol
sub
mov
pushf
aam
rcl
cdq
mov
add
arpl
scas
fdivr
(bad)
sub
and
xor
jne
pop
inc
cmp
mov
sub
loope
dec
push
sbb
sbb
mov
mov
retf
pop
push
test
(bad)
clc
outs
xor
adc
imul
call
popf
sbb
icebp
bound
adc
xchg
lahf
fnsave
shl
bound
hlt
retf
jmp
mov
sbb
fcmovu
cld
stc
sub
in
iret
add
hlt
or
into
add
ret
sub
ret
xor
arpl
and
jnp
bound
mov
push
cmp
xor
in
arpl
popa
scas
and
call
mov
xor
ja
inc
aad
clc
fs
xor
test
out
mov
mov
outs
int3
push
sub
push
jb
fwait
push
ja
(bad)
cdq
dec
hlt
adc
mov
inc
pmulhw
in
cld
sub
mov
xchg
push
and
jo
pusha
lods
pop
mov
clc
xchg
or
mov
std
push
sbb
push
inc
sar
jb
and
or
inc
push
cmp
sbb
rcr
jmp
or
xor
push
cmp
mov
mov
les
lea
int
sub
imul
pushf
or
push
pop
rol
retf
dec
aaa
int3
addr16
dec
mov
sbb
movs
xchg
mov
or
fist
add
pop
out
int
std
jnp
jp
dec
in
push
ss
ss
icebp
push
je
jb
enter
push
popf
or
add
push
hlt
inc
cld
pop
sahf
add
jae
or
cmp
adc
fnstsw
pop
in
mov
mov
ret
icebp
test
mov
(bad)
fst
and
and
shr
add
cmp
(bad)
push
add
or
push
shl
add
call
inc
xor
cmp
add
outs
mov
repnz
loope
addr16
sar
stc
add
adc
add
and
push
dec
jno
jp
ins
out
sahf
add
xchg
fstp
pop
bswap
fild
xchg
dec
bound
pushf
sub
es
cmp
in
pop
xchg
pop
movs
jg
push
stos
jl
gs
xor
mov
xchg
jnp
je
lods
arpl
sbb
dec
hlt
or
push
jmp
mov
out
adc
push
or
cmp
in
movs
jl
push
out
rcr
xor
add
popa
sbb
and
and
(bad)
iret
loop
sti
adc
rcl
dec
aam
jnp
fidivr
push
outs
nop
jecxz
sbb
shl
ret
stos
dec
mov
xlat
arpl
jb
mov
movs
cmc
sbb
fstp
rcl
push
jne
inc
mov
aas
mov
sub
daa
ror
or
inc
loop
pop
or
fimul
mov
sahf
lahf
and
pop
xor
jle
ins
nop
pop
test
adc
jecxz
enter
fild
or
xchg
adc
shl
dec
(bad)
jg
pushf
mov
xor
or
sub
dec
loopne
jo
imul
fmul
iret
mul
pop
mov
sub
jnp
push
test
into
add
into
mov
cmp
aas
test
add
lds
xchg
adc
and
cmc
ja
sbb
pop
push
enter
xor
div
lods
stc
clc
mov
sbb
push
data16
push
pop
cmp
mov
push
mov
adc
sbb
jae
adc
dec
dec
leave
leave
popf
mov
test
push
scas
iret
lea
and
dec
in
popf
out
fisttp
sbb
shl
in
xchg
jno
mov
mov
test
pop
pop
xor
jo
and
imul
cdq
popa
jecxz
jns
movs
sub
jecxz
je
fdiv
mov
sub
mov
pop
stos
loopne
fisttp
shl
sar
aam
mov
stos
mov
fsub
sbb
mov
cmp
mov
add
adc
xchg
jo
pusha
nop
outs
inc
arpl
nop
stos
cs
inc
jae
mov
jle
fild
jge
lahf
fs
(bad)
pushf
mov
sub
aas
pop
dec
push
adc
(bad)
jge
call
push
movs
dec
popf
sbb
pop
aad
movs
sub
idiv
aas
push
mov
or
jg
pop
pop
xor
mov
cli
or
loope
xchg
sub
sub
outs
mov
aam
mov
fist
push
imul
pop
mov
cmp
out
push
add
retf
aaa
sbb
add
xchg
push
das
or
adc
call
stc
fistp
cmp
(bad)
adc
push
lds
movs
push
sub
imul
jno
inc
jne
mov
sbb
or
js
cmp
push
sub
dec
aaa
fmul
out
inc
add
pop
stos
int
shr
or
retf
movs
mov
loope
sti
sbb
loop
mov
clc
add
mov
cmp
test
scas
add
pushf
dec
ret
movs
int3
xchg
xchg
adc
fnstsw
ja
stos
mov
jb
add
mov
mov
ss
arpl
cmp
fld
inc
popa
pop
sbb
jnp
and
fnsave
in
cwde
xor
inc
dec
fwait
loop
pop
sbb
push
pop
xchg
popa
push
adc
cmp
cmp
in
pop
iret
ja
jae
in
dec
jb
addr16
ins
fwait
repnz
popf
xchg
push
pusha
aas
sbb
cdq
or
ja
ins
inc
mov
fld
imul
aad
loopne
fwait
ja
aas
loopne
movs
mov
add
icebp
mov
stos
pusha
mov
sti
out
clc
fdivrp
mov
pushf
mov
test
(bad)
cmps
int
xor
adc
sar
jnp
pop
jp
and
dec
dec
std
pop
js
xchg
xor
sti
sahf
add
out
push
movs
ins
add
pop
fs
mov
clc
cs
or
fwait
and
xor
icebp
or
push
mov
and
jecxz
xchg
loope
out
test
adc
xchg
jbe
or
jge
dec
fistp
xchg
stos
or
outs
icebp
mov
(bad)
std
jbe
dec
in
sbb
push
adc
aad
shl
and
inc
test
cmp
cmps
jmp
test
sub
and
and
dec
pop
pop
dec
mov
lds
push
lods
imul
sbb
(bad)
pusha
sti
xor
sbb
sub
xchg
jl
or
ja
stos
cmovbe
fidiv
lock
in
shl
inc
cmp
add
mov
fadd
aaa
xchg
ins
xor
jle
pop
in
in
popf
dec
add
xor
jecxz
jg
test
popa
jne
jo
ss
mov
inc
push
cmp
retf
adc
data16
cmp
sbb
shl
sub
mov
cmp
xor
sbb
adc
lea
out
lock
pop
push
or
pop
popf
call
pop
sbb
mov
pop
(bad)
test
gs
push
push
enter
add
iret
xor
push
scas
mov
or
in
clc
jge
inc
dec
or
mov
mul
xchg
xchg
out
ja
iret
(bad)
push
push
adc
add
push
popf
cwde
ror
xchg
adc
and
test
add
mov
sbb
mov
and
in
mov
push
cmps
jl
push
data16
leave
cmp
ins
pop
ret
fstp
mov
mov
icebp
sub
inc
stos
push
fadd
and
shr
clc
jp
jmp
and
fcomi
xchg
enter
call
outs
cli
imul
and
mov
or
loop
fnstenv
stos
jmp
xlat
xor
int3
stc
xchg
inc
mov
add
(bad)
mov
(bad)
adc
jge
pop
lods
pop
jmp
leave
cs
pop
sbb
dec
mov
call
push
fldenv
inc
push
and
ins
ficomp
pop
cld
push
jnp
and
cmp
cmp
xchg
pushf
push
push
xchg
and
pop
jp
nop
push
pop
out
inc
mov
sbb
pop
add
loop
iret
adc
fldcw
popf
inc
sti
lds
in
(bad)
in
inc
inc
and
jo
jmp
mov
loopne
mov
movs
push
cmc
pop
mov
imul
adc
add
vphsubwd
jp
icebp
fsubr
in
in
stos
cmp
mov
fcom
outs
mov
aaa
outs
mov
jp
ret
jne
iret
cmp
add
call
loopne
loope
jle
push
test
add
arpl
jnp
cmps
js
sub
dec
(bad)
pop
push
mov
mov
pusha
dec
xchg
mov
jns
mov
pop
bound
mov
xchg
sahf
fucomp
jne
jp
or
cs
es
popf
pop
sub
lahf
cmps
add
jp
pop
out
mov
cmp
xor
loop
aas
add
adc
pusha
jge
xchg
add
fucomip
ret
call
push
mov
out
or
mov
popf
pop
ret
addr16
or
pop
xchg
aad
fstp
int
ror
outs
test
xor
pmaxub
(bad)
neg
inc
sbb
mov
add
cmp
mov
inc
sbb
lods
cld
in
xchg
retf
xor
sete
push
pop
inc
outs
mov
push
dec
cld
mov
push
or
in
mov
cs
xchg
pop
mov
mov
adc
mov
pop
jae
jge
cli
push
ror
in
and
pop
stos
adc
fs
out
jecxz
xchg
xor
pop
cmp
sub
sub
dec
cs
sub
push
mov
cmps
pusha
jo
pop
inc
jmp
addr16
inc
call
xor
das
jle
add
jo
addr16
into
shr
push
mov
cmc
loop
outs
(bad)
jno
nop
pop
and
repnz
xchg
retf
push
dec
xchg
add
jmp
mov
xchg
mov
cdq
je
mov
mov
int
add
mov
loopne
jge
ror
pop
in
repz
xor
jno
add
imul
cs
(bad)
aaa
xor
sbb
(bad)
rcr
inc
mov
addr16
imul
fwait
iret
add
mov
xchg
imul
int3
sbb
lahf
mov
sub
inc
sahf
and
je
jp
lahf
fnstsw
jo
stos
loope
sub
call
jb
je
mov
jb
and
imul
mov
je
mov
inc
cmp
(bad)
int3
push
cmps
mov
push
dec
jg
in
xchg
and
repnz
add
shl
xchg
mov
sub
jno
inc
sbb
fbld
daa
loopne
aad
xor
jl
(bad)
stc
in
cli
mov
ret
fdivr
or
leave
retf
jl
adc
out
xlat
adc
ficomp
jbe
or
retf
xor
jecxz
xlat
outs
mov
xchg
jns
call
adc
push
stos
xor
cwde
iret
(bad)
push
mov
dec
dec
hlt
rcr
mov
push
or
jbe
and
mov
das
cmc
inc
aaa
mov
cmp
sbb
dec
sub
int3
aad
push
jno
sar
ret
push
scas
jecxz
pusha
mov
lods
cdq
adc
mov
sbb
xchg
mov
scas
adc
stos
sbb
xor
mov
ja
outs
ss
xchg
jae
xchg
int
call
jb
popf
pop
inc
icebp
cmp
iret
popf
out
pop
pop
pop
pop
cwde
jecxz
ins
mov
idiv
ror
repnz
popa
call
xchg
xchg
pop
push
or
(bad)
mov
mov
sub
cli
leave
add
aas
adc
fst
(bad)
sub
(bad)
jp
imul
xchg
and
jnp
mov
movs
add
cmps
ins
and
pushf
xchg
imul
mov
jmp
push
xchg
dec
push
into
jle
mov
cwde
cmp
std
pop
jmp
mov
or
pop
(bad)
repz
mov
xchg
or
jnp
(bad)
out
ror
ja
mov
jno
outs
sbb
cmp
sbb
out
mov
sti
aas
mov
mov
cs
stc
les
mov
jge
push
mov
dec
xor
idiv
call
punpcklbw
loop
les
sahf
lods
ss
xchg
xchg
fidivr
sbb
xchg
xchg
adc
push
dec
and
jne
pop
cwde
ret
and
push
sub
pop
inc
xor
push
les
scas
loopne
xor
aam
jle
mov
and
ror
push
sbb
xor
sbb
pop
pop
lods
mov
cmp
jne
ss
std
pop
add
movs
jmp
bound
dec
popa
enter
mov
ret
jg
or
xchg
sbb
sbb
ins
pop
in
sbb
std
xchg
xchg
xchg
les
sub
push
pop
std
daa
mov
loop
xor
out
xchg
neg
push
jecxz
xchg
call
mov
lds
cmc
and
(bad)
add
fidiv
mov
and
aam
cmps
imul
and
jae
inc
jb
sbb
das
push
xchg
cli
mov
jp
xchg
stos
and
into
xchg
add
push
fwait
scas
mov
xchg
popf
int
push
ficomp
push
mov
icebp
retf
or
sub
popa
jnp
test
jnp
or
fld
dec
mov
dec
push
push
push
into
ret
push
pushf
stos
sbb
mov
xchg
leave
mov
rcl
adc
nop
jl
sub
mov
pusha
jle
and
jns
lock
push
sbb
mov
inc
(bad)
xchg
cli
daa
iret
pop
pop
jo
add
mov
test
movs
les
inc
sbb
cmp
jae
pop
mov
out
and
inc
xchg
mov
sub
ror
call
movs
ins
push
push
in
in
call
cmp
cmps
push
pop
dec
mov
outs
loopne
inc
int
cwde
cmp
sub
(bad)
mov
mov
pop
mov
repz
clc
mov
cdq
fild
cwde
xchg
clc
pop
lods
pop
add
push
lock
outs
lock
jb
mov
mov
xor
dec
pop
stos
out
cmp
(bad)
adc
cmps
in
test
xchg
xor
retf
popa
gs
call
and
add
mov
add
fisttp
in
imul
add
pop
sbb
jecxz
pop
inc
xchg
push
push
scas
jle
test
xor
sar
ret
xchg
sbb
inc
add
mov
ret
inc
jmp
cld
mov
shl
mov
and
(bad)
mov
push
sub
fadd
and
cmp
(bad)
cli
cld
(bad)
inc
sbb
dec
mov
movs
std
sbb
pop
push
cli
mov
in
push
addr16
cmove
in
dec
clc
mov
sti
xchg
leave
inc
out
and
jmp
pop
push
aam
hlt
enter
ja
xchg
mov
cdq
popf
add
add
out
add
stc
repnz
mov
rcl
sar
jl
add
cmp
enter
lock
pusha
std
retf
push
push
cli
outs
dec
mov
push
loopne
retf
loopne
daa
mov
lods
mov
ins
loopne
sbb
xchg
imul
pop
sar
movs
sbb
push
in
call
jns
imul
inc
xchg
and
bsf
aam
int3
mov
(bad)
fdivp
xchg
imul
push
data16
or
inc
ins
cmp
add
rcr
sub
enter
lea
std
xchg
push
icebp
xor
popf
jb
jne
xchg
inc
inc
xor
test
idiv
gs
pop
dec
pop
daa
lock
mov
repz
fsubr
test
std
mov
inc
stc
ja
les
pop
loope
cmps
(bad)
jl
(bad)
sahf
adc
jb
enter
sub
fwait
fwait
inc
cmp
mov
mov
jnp
push
sub
cmc
jmp
pusha
mov
mov
jne
adc
cmp
pop
and
ja
fwait
(bad)
(bad)
jb
adc
test
sub
xchg
mov
pop
in
add
imul
pop
loopne
fwait
push
rcl
dec
add
xchg
gs
mov
dec
mov
sbb
mov
cmps
in
pop
xor
sbb
xchg
pop
fbld
cmp
dec
pop
sub
imul
and
lds
pop
into
(bad)
aam
std
pusha
pop
rcr
in
push
dec
mov
push
mov
loope
ja
cmp
not
pushf
ja
fwait
js
pop
adc
jge
jmp
adc
ret
pop
test
push
xor
sahf
xor
inc
aas
push
bound
mov
push
fcom
dec
jno
or
xor
jle
in
je
std
mov
(bad)
mov
icebp
inc
jb
dec
xchg
push
dec
mov
xor
push
mov
fmul
pop
sub
inc
lea
inc
lods
mov
stc
pushf
fiadd
movs
fwait
aam
out
add
mov
inc
inc
ror
add
inc
or
adc
or
or
fdivr
sbb
jno
dec
rcr
fld
in
pop
sar
jmp
mov
popf
arpl
aas
jmp
cmc
repnz
jecxz
lods
fisubr
mov
xchg
dec
add
adc
sbb
out
(bad)
jmp
pop
push
xchg
cs
jae
jnp
push
xchg
leave
add
daa
jbe
popf
loope
xor
not
stos
pop
and
hlt
or
push
bound
dec
mov
add
cli
jo
sub
outs
popf
or
and
mov
push
or
mov
jbe
test
pop
arpl
xor
aaa
aaa
mov
retf
retf
std
pop
inc
inc
ret
jge
mov
push
pop
xor
add
inc
cmp
mov
dec
inc
push
dec
stc
dec
js
mov
leave
pop
sbb
cwde
sub
dec
ret
sub
inc
pop
les
and
jmp
pop
add
pop
pop
jne
mov
jne
(bad)
(bad)
and
imul
and
and
cmp
sbb
jbe
test
cld
mov
std
fsubr
clc
push
cs
nop
in
in
rol
arpl
ret
adc
mov
jl
add
dec
xchg
lahf
int
sti
leave
js
adc
fnstenv
mov
div
or
test
div
into
sar
jae
mov
stc
int3
adc
movs
cdq
mov
retf
mov
dec
test
jo
mov
add
cmc
scas
mov
and
test
or
xchg
xor
mov
rol
xchg
push
jns
leave
dec
dec
jmp
pop
dec
pop
fnstenv
ret
pushf
sub
repz
mov
add
adc
jo
pop
ds
or
push
push
aaa
hlt
or
xor
outs
push
ret
fprem1
hlt
aad
sbb
fld
ret
rcl
(bad)
loope
dec
scas
or
lods
or
fcmovnu
sbb
mov
cmp
inc
aaa
mov
arpl
dec
(bad)
repnz
add
(bad)
jns
or
fld
and
ss
xchg
cli
sar
xchg
and
loopne
or
mov
cmp
fild
or
out
fcom
jge
and
push
sbb
adc
ffree
push
ins
pop
jg
dec
(bad)
mov
xor
pop
dec
add
and
jmp
mov
mov
enter
adc
inc
std
xor
xchg
and
add
mov
lahf
aas
mov
xchg
popf
dec
and
stc
sbb
lods
and
push
mov
pop
dec
jmp
jp
pop
aad
shr
retf
cli
stc
les
mov
rcl
or
push
mov
mov
sub
loopne
neg
adc
push
je
add
cmp
es
mov
mov
stc
inc
cmc
enter
pop
aam
push
jmp
jbe
shl
adc
repnz
push
gs
xor
nop
test
sahf
loopne
int
lds
cld
pop
loop
dec
stos
shr
push
push
pop
(bad)
cdq
mov
mov
imul
sbb
mov
stc
icebp
adc
pusha
movs
mov
mov
mov
lds
pop
(bad)
mov
push
aad
and
mov
ins
inc
jo
sbb
cld
les
rol
loop
dec
stc
sar
mov
inc
(bad)
mov
(bad)
jne
movs
sbb
jno
fs
jno
jp
jg
sub
push
mov
inc
xchg
jp
dec
adc
aaa
movs
cmp
mov
imul
add
xor
dec
mov
and
(bad)
or
sbb
mov
stos
test
rol
imul
aad
dec
cmps
and
mov
jmp
mov
pop
sbb
pop
(bad)
mov
jns
mov
cmp
call
inc
ss
out
and
push
(bad)
ins
add
sbb
xlat
lahf
xchg
dec
mov
xor
iret
cmps
dec
mov
push
inc
inc
gs
add
mov
add
inc
or
inc
and
pop
sbb
dec
ja
gs
and
xchg
and
mov
lock
fwait
popf
pusha
and
and
cdq
inc
imul
inc
mov
jns
mov
dec
mov
aaa
(bad)
int
inc
sbb
jge
adc
call
ss
xor
outs
loope
dec
push
fadd
movs
(bad)
and
in
sub
stos
push
push
sbb
pusha
inc
fcomp
adc
mov
add
push
icebp
lds
imul
dec
nop
inc
scas
stc
mov
or
mov
mov
sbb
sti
adc
adc
std
sub
xor
jle
xchg
ins
loop
add
ret
out
jne
out
mov
arpl
xchg
pop
repz
int
fwait
out
std
xchg
jne
add
pop
imul
iret
fisub
mov
pop
adc
adc
sub
xchg
mov
das
int3
stos
and
pop
pusha
out
cmovs
(bad)
movs
xor
sub
mov
push
add
scas
push
pop
test
mov
(bad)
je
(bad)
(bad)
lea
fisttp
xchg
jo
sbb
nop
push
ficom
jnp
push
(bad)
jle
xchg
add
xlat
push
rcr
jno
sub
jno
js
bound
or
cli
pushf
xlat
popa
test
in
icebp
jmp
adc
dec
mov
cmp
cmps
sub
out
mov
xchg
retf
jns
pop
lods
popf
mov
aaa
add
int
mov
in
cmp
mov
(bad)
push
out
inc
ficomp
test
enter
shr
lods
lahf
leave
(bad)
jnp
inc
mov
scas
outs
out
out
out
and
xchg
sub
cmp
rol
xor
aaa
test
daa
dec
jbe
popa
clc
adc
pop
dec
shl
or
xchg
jmp
push
imul
daa
jbe
mov
bound
jbe
mov
stos
stos
int
fiadd
outs
pop
adc
xor
inc
mov
dec
les
add
popf
add
push
in
out
retf
adc
je
stc
dec
call
add
mov
test
jle
mov
push
leave
pusha
xchg
push
xchg
popa
jmp
push
imul
aaa
add
aad
ret
mov
pop
scas
pop
(bad)
sub
(bad)
cld
jl
imul
cmp
call
inc
xchg
fdiv
nop
and
mov
clc
mov
pushf
ins
scas
loop
sbb
adc
jmp
jmp
push
pop
xor
je
push
pop
add
sahf
pusha
(bad)
dec
xchg
or
(bad)
(bad)
mov
and
jg
dec
mov
stc
dec
xor
dec
jb
loop
(bad)
(bad)
and
mov
popa
aaa
adc
fnstcw
sbb
pop
push
mov
push
popa
mov
sub
retf
dec
push
mov
mov
or
xchg
dec
cmc
stos
aaa
in
or
adc
fldcw
enter
cdq
adc
or
out
sub
fsub
in
adc
jmp
mov
iret
aas
pop
jle
js
test
je
les
mov
adc
cli
add
out
cs
mov
in
xor
scas
out
ins
sub
xor
in
inc
scas
xor
lods
in
sub
out
les
mov
cmp
xor
jns
lock
loope
fidiv
sub
add
mov
(bad)
fdiv
ja
inc
jp
cmp
sbb
shr
sahf
jmp
ret
movs
cmp
lds
mov
test
test
add
pushf
ja
xchg
xchg
xlat
mov
xlat
loopne
popa
inc
mov
repz
inc
test
ret
mov
push
xchg
in
int
hlt
or
cs
mov
imul
cmp
push
fnop
ds
retf
adc
add
and
sar
loope
xor
iret
scas
cld
aas
xchg
cmp
xchg
les
adc
loop
add
mov
xchg
push
push
ret
or
(bad)
sub
adc
ret
add
jge
xor
pop
push
rcl
push
adc
xor
xchg
das
pop
loope
cs
sbb
fldcw
xchg
mov
pop
and
and
jnp
dec
pop
fs
add
bound
ds
sbb
repz
(bad)
and
inc
adc
out
ins
movs
mov
xor
cmovs
cwde
pushf
stc
retf
ja
lock
hlt
sbb
ror
pop
fnstcw
mov
xchg
stos
test
xchg
xchg
or
(bad)
and
push
fs
mov
mov
push
or
sbb
sbb
retf
mov
fisttp
pop
outs
out
inc
fldcw
mul
fldcw
inc
stos
cmp
mov
push
sub
adc
push
pusha
mov
cmps
shr
jge
push
push
cdq
fabs
shl
pop
pusha
push
out
push
mov
add
imul
xchg
and
sar
fimul
int3
push
lds
jnp
lds
lods
and
(bad)
sub
shr
jp
cwde
xchg
pop
xor
xor
imul
enter
fs
ja
inc
mov
sub
mov
cmp
lods
(bad)
dec
mov
(bad)
mov
cli
mov
ins
xchg
cmp
int
pop
xchg
dec
xchg
push
and
int
call
fcomp
cmp
loopne
pop
mov
xchg
(bad)
and
dec
dec
inc
push
iret
test
cmp
sbb
sub
xchg
mov
or
mov
mov
sub
and
lods
fld
hlt
mov
das
and
pop
mov
adc
nop
lods
enter
ds
js
(bad)
std
push
jno
mov
arpl
in
sbb
xchg
clc
or
enter
cwde
xchg
xor
sahf
fdivr
test
push
or
xchg
mov
(bad)
ror
or
je
push
mov
mov
dec
icebp
cdq
mov
mov
jecxz
xor
dec
je
jmp
(bad)
cld
sub
sbb
enter
jb
add
xor
cmp
js
cmps
aam
(bad)
or
popf
and
stos
sbb
xor
sub
stos
stos
cmp
cmc
or
clc
jp
aad
cld
psubw
(bad)
push
push
shr
adc
fbstp
repz
dec
dec
out
sbb
mov
repz
inc
stos
std
not
mov
xchg
jno
aas
xlat
and
retf
fisttp
push
cld
shr
adc
sub
mov
icebp
daa
loop
lods
or
sbb
cmp
add
cmp
mov
mov
in
popa
push
xor
cmp
xchg
enter
mov
or
or
jmp
mov
adc
push
arpl
push
int3
loop
or
cmp
push
jge
or
or
adc
cmp
fs
loop
stos
lahf
mov
jnp
xchg
pop
mov
call
in
adc
mov
(bad)
ds
and
dec
and
mov
pop
data16
lock
jno
cwde
sub
and
inc
jno
jecxz
loope
sti
push
icebp
dec
pop
das
ret
and
gs
das
ins
inc
dec
push
clc
pop
leave
in
dec
arpl
jge
mov
push
sbb
fsub
cwde
int3
mov
(bad)
mov
pop
dec
mov
mov
pop
retf
shl
xchg
dec
retf
adc
imul
mov
imul
cmp
jle
je
jmp
or
and
sbb
and
fstp
push
xlat
sbb
push
enter
arpl
dec
mov
stos
out
popa
pop
sub
mov
jo
je
int
stos
sar
test
sbb
cwde
cmps
outs
std
ret
loop
nop
mov
inc
mov
neg
(bad)
fcomp
jbe
test
popa
push
mov
and
inc
bound
sti
sub
jmp
jmp
push
jle
mov
ror
mov
fnstenv
stos
dec
jnp
movs
out
(bad)
xchg
sbb
inc
cs
xchg
lods
in
mov
mov
fdiv
(bad)
jecxz
or
xchg
mov
pop
stc
aam
leave
or
adc
test
push
outs
mov
xor
shr
cmps
add
clc
or
imul
(bad)
sbb
bswap
stos
retf
popa
dec
mov
pop
test
outs
outs
lds
mov
add
mov
xchg
aas
pop
ja
les
fdivr
pop
xor
loope
push
das
dec
add
ds
sti
daa
jbe
ins
pop
cli
pop
pop
inc
dec
test
shl
sub
(bad)
mov
popa
push
fcom
idiv
push
cmp
mov
push
scas
cmps
xor
not
push
(bad)
xlat
cmp
lds
(bad)
sbb
je
int
pop
lea
test
popf
loopne
pusha
mov
ins
dec
cmp
adc
inc
jns
mov
mov
cli
sub
mov
bsf
xor
lahf
iret
gs
cmp
sub
jmp
test
movs
repz
inc
mov
sti
fsubr
sbb
jb
push
mov
int3
fcom
jnp
mov
arpl
loope
jbe
popf
and
mov
es
addr16
fiadd
sub
pushf
lods
cmc
add
int
xor
sub
mov
out
pop
cdq
mov
xchg
imul
pop
dec
and
xor
rcr
dec
into
cmps
xchg
mov
push
jne
aas
cli
pop
fst
xchg
out
pop
xor
or
lods
cmp
jg
out
xchg
adc
dec
mov
inc
mov
jle
inc
jg
(bad)
fcmovu
and
jbe
mov
jmp
xor
mov
adc
popf
add
and
aas
push
and
or
out
mov
int
ins
mov
test
ret
xlat
mov
push
xchg
jecxz
add
aas
jmp
mov
jmp
in
adc
leave
pop
cmp
repz
push
fcomp
push
add
pusha
or
mov
dec
neg
pop
sbb
pop
retf
pop
scas
repnz
aad
enter
mov
out
sbb
mov
mov
sbb
sub
push
int3
jp
outs
xchg
jbe
lahf
shr
ror
ret
in
rcl
fisub
cld
int3
ds
ins
jns
jo
icebp
cmp
fmul
or
jno
pop
ja
popf
adc
retf
xlat
mov
popf
mov
mov
stc
sbb
dec
xchg
loopne
(bad)
jle
clc
pop
iret
dec
inc
bound
(bad)
sti
xchg
iret
scas
dec
pop
sti
out
mov
sub
loopne
ins
or
repz
pop
pop
iret
jge
ins
pop
mov
adc
pop
movs
in
fwait
xor
sub
shl
cpuid
in
or
hlt
xor
mov
mov
cmps
mov
sahf
jnp
xchg
outs
sbb
sub
in
test
add
jg
scas
dec
(bad)
not
loop
lods
sub
cmp
mov
call
sub
and
add
cmc
xchg
ficomp
mov
jae
fdiv
mov
pop
and
sbb
fdiv
mov
(bad)
jae
clc
push
sbb
sub
cmp
pop
inc
sbb
jg
nop
adc
ins
mov
div
mov
push
je
test
cmps
fs
inc
pop
fmul
cmc
adc
jmp
bound
ficom
adc
pop
outs
inc
cmp
add
sbb
enter
adc
js
imul
pop
(bad)
js
fmul
int3
push
test
mov
adc
(bad)
and
mov
push
int3
in
inc
iret
and
pop
dec
xchg
jnp
mov
push
xchg
add
inc
dec
sub
push
mov
push
popa
add
int
pop
lahf
xor
shl
mov
jmp
fstp
cwde
push
jmp
ror
and
jge
push
std
(bad)
push
xor
bswap
in
jae
xor
out
lods
(bad)
mov
jp
jl
(bad)
jbe
popf
mov
jns
mov
pop
daa
jge
mov
and
(bad)
imul
hlt
jmp
pusha
pop
adc
unpckhps
sahf
stos
mov
out
xchg
add
mov
push
inc
popf
xor
loopne
cld
mov
dec
int3
jecxz
push
jae
inc
retf
mov
cmc
sub
pop
lds
mov
adc
lods
dec
(bad)
shl
test
fiadd
cmp
ins
mov
movs
dec
cmp
dec
stc
push
test
add
xchg
pop
rcr
outs
pop
daa
push
fisub
mov
mov
add
xchg
dec
and
repnz
fs
jno
rcr
jle
and
fistp
cmp
in
(bad)
nop
xor
sbb
xor
inc
test
jo
dec
aad
jecxz
scas
xchg
xchg
push
sbb
dec
jl
sahf
mov
xchg
lock
je
add
jne
mov
(bad)
cmp
iret
mov
in
add
mov
mov
clc
or
hlt
mov
mov
sub
call
in
pop
inc
push
lea
inc
sub
add
dec
les
fucomi
dec
push
lods
xor
mov
mov
and
mov
mov
rol
pop
rcl
or
xor
add
cmp
enter
xchg
scas
mov
jns
sub
cmp
pusha
stos
out
je
fst
movs
mov
ins
lods
cli
stos
aaa
sbb
adc
and
ror
dec
xchg
not
inc
xchg
jae
jmp
push
in
js
bound
inc
xor
sbb
out
std
mov
or
mov
sar
shl
xor
fist
or
imul
add
in
movs
cli
cmps
cdq
inc
pop
cwde
or
push
mov
outs
lahf
jg
add
data16
adc
sub
(bad)
mov
push
mov
mov
and
xchg
and
arpl
adc
pop
pusha
lods
and
xchg
outs
mov
and
cli
or
scas
rcl
cmp
jmp
cwde
dec
pop
add
jmp
icebp
or
outs
pop
int3
rcl
rcl
and
xor
nop
in
xor
mov
mov
test
mov
add
jmp
addr16
imul
pushf
sahf
adc
mov
inc
adc
lds
adc
sbb
push
cmp
jmp
mov
jo
adc
cdq
les
pop
or
sub
mov
in
mov
xor
cmp
(bad)
xchg
mov
mov
and
mov
dec
and
movs
xor
push
js
jb
rol
pop
sbb
rol
not
ret
cmp
add
(bad)
addr16
in
cmp
pop
and
jmp
push
loope
sub
push
dec
in
jnp
jmp
jge
mov
loopne
in
inc
fwait
xchg
cwde
fisttp
mov
sub
pop
lods
and
dec
cmp
imul
push
adc
jmp
or
lods
dec
xor
ja
pushf
add
fisttp
jnp
mov
ja
jmp
push
adc
adc
and
adc
movs
push
test
sbb
cs
retf
out
sar
into
jb
jae
(bad)
cmc
mov
out
mov
add
cli
rcr
and
jne
fidivr
cmp
cld
les
mov
(bad)
in
pop
jge
jno
into
and
lods
ins
rol
movs
sar
scas
mov
lock
iret
(bad)
inc
test
test
add
mov
int
mov
jnp
repz
pop
scas
sbb
test
(bad)
fdivr
push
data16
add
sbb
mov
jne
jl
sbb
xlat
push
(bad)
push
hlt
rcl
or
loop
mov
lds
xchg
loop
(bad)
leave
ss
push
jmp
ror
pop
retf
(bad)
es
out
mov
cmps
sbb
xchg
sbb
loop
into
push
gs
jl
inc
jmp
sub
xor
sub
out
dec
jne
or
ret
adc
test
pop
dec
retf
and
adc
and
xor
jb
(bad)
out
dec
pop
pop
inc
jae
and
loop
lods
jge
aam
add
pop
sub
pusha
mov
jmp
cdq
fidiv
in
bound
jnp
out
gs
sub
mov
ret
jp
pop
pop
(bad)
mov
mov
in
sbb
mov
scas
scas
push
lahf
xchg
mov
lock
jl
shl
mov
xor
or
mov
stos
xor
sbb
in
jecxz
inc
sub
and
lahf
lea
cmp
pusha
mov
jb
(bad)
sbb
cmp
test
das
ret
xor
mov
xchg
aam
popa
cmc
xchg
loopne
mov
mov
adc
mov
ret
push
(bad)
push
pop
adc
mov
push
pop
inc
je
sub
js
sub
jnp
cmps
adc
lock
xchg
add
sbb
rol
mov
into
enter
out
mov
adc
loopne
scas
pop
adc
iret
dec
pop
sub
cmps
sbb
test
shl
push
aas
push
in
add
out
mov
cmp
icebp
fldenv
push
rcl
stos
shr
hlt
inc
xchg
repnz
mov
and
mov
outs
fmul
sbb
xchg
push
xchg
inc
out
ss
inc
dec
dec
aas
adc
cmc
adc
les
neg
inc
jmp
dec
fldenv
test
loop
dec
add
ret
(bad)
cmps
jp
sub
pop
jmp
ds
inc
fcom
xchg
ins
cmp
mov
jl
fcom
mov
push
cmps
add
and
cmps
cmp
add
or
arpl
les
pop
sbb
push
mov
inc
push
mov
scas
sbb
lods
cmc
rcr
xchg
and
rol
ss
push
and
or
cmps
jno
test
sti
(bad)
cmps
adc
xlat
jl
mov
out
pop
dec
cmps
mov
adc
push
and
(bad)
cld
(bad)
ins
pop
cmps
and
iret
nop
(bad)
shl
iret
inc
xchg
cmps
outs
lock
imul
(bad)
sbb
adc
adc
mov
pop
jmp
sbb
icebp
jnp
ins
das
jns
nop
cmp
sbb
in
dec
push
data16
mov
adc
inc
enter
lods
sub
(bad)
cmp
pop
in
jmp
add
jle
popf
lahf
ins
xchg
jmp
int3
aas
xor
push
std
push
or
test
icebp
sub
cmp
push
xchg
(bad)
(bad)
(bad)
fidiv
(bad)
jo
xchg
ins
dec
inc
rol
mov
xor
int
adc
test
fdivr
jns
adc
outs
xchg
test
push
mov
mov
pop
xchg
mov
ret
xchg
ret
ds
fimul
icebp
jmp
clc
push
in
clc
arpl
jle
movs
enter
mov
fist
fnsave
jmp
mov
adc
jnp
es
fbstp
mov
adc
push
inc
js
add
xor
push
std
push
loopne
rcl
cs
(bad)
fisttp
iret
lahf
call
mov
mov
pop
sbb
sub
sbb
stos
mov
div
js
push
cmp
int
(bad)
scas
bound
mov
ret
call
outs
shl
adc
(bad)
xchg
push
int3
or
or
sahf
pushf
jb
sahf
or
mov
or
pop
bound
fucomi
mov
and
(bad)
movs
mov
fs
jne
lock
cmp
inc
iret
iret
mov
mov
sub
push
pusha
scas
cmp
sub
jle
add
xlat
loope
imul
movs
add
pop
sahf
or
ds
lods
gs
xchg
inc
inc
popa
sahf
jecxz
std
pop
jae
imul
retf
lea
mov
retf
xchg
push
mov
shl
lds
xlat
adc
fmul
aas
cmp
pop
add
imul
sub
(bad)
mov
dec
lahf
fisttp
nop
sbb
in
loope
test
(bad)
and
mov
sbb
mov
add
inc
loop
je
dec
or
xor
not
push
xor
adc
das
jno
sahf
rcl
les
jnp
and
fstp
test
adc
pop
scas
sahf
jbe
add
push
mov
sbb
pop
scas
les
mov
cmp
(bad)
movs
bound
cmps
ss
jmp
add
sti
push
call
rcr
std
repnz
add
sbb
pop
lahf
add
aad
aas
or
sahf
dec
pop
fst
mov
pop
or
ret
pop
adc
xchg
pop
pushf
pop
inc
push
add
out
add
repnz
jp
push
and
out
add
aas
iret
(bad)
jp
sbb
ret
xchg
and
adc
dec
xlat
out
in
in
cmp
mov
pushf
imul
imul
or
(bad)
push
lods
sub
ins
hlt
ins
dec
mov
sti
mov
xor
test
lock
push
inc
sub
or
mov
mov
pushf
stos
cmp
stos
shl
shr
fsubr
pop
movs
jecxz
pop
pop
sbb
jno
mov
pop
inc
pop
rol
mov
sti
std
(bad)
lock
scas
and
inc
mov
adc
idiv
std
cmp
ss
and
jnp
clc
out
inc
je
mov
xchg
push
cmps
jnp
gs
and
dec
dec
movs
int3
addr16
xor
leave
ss
xlat
and
mov
cwde
gs
push
fwait
test
jne
call
in
in
(bad)
jmp
jecxz
stc
jns
sbb
clc
loope
dec
push
shl
stos
out
jne
mov
ds
mov
mov
pop
inc
cmp
inc
sub
dec
cmp
mov
jp
pop
jae
inc
popf
cmp
add
pop
or
dec
cmp
fiadd
fsub
dec
fisubr
push
enter
push
mov
sbb
inc
add
movs
retf
(bad)
xchg
mov
outs
push
push
push
je
mov
add
push
clc
and
jb
loop
mov
(bad)
cmp
sbb
stc
push
bound
jb
je
mov
and
and
outs
dec
mov
and
pcmpeqd
(bad)
(bad)
mov
(bad)
push
fnstcw
shl
imul
jbe
test
(bad)
js
ret
pop
leave
xchg
sti
dec
in
(bad)
adc
add
dec
lahf
jns
xchg
xor
ins
pop
aam
jbe
cmp
or
clc
push
repz
add
fld
mov
mov
pop
jg
mov
xor
xor
xchg
scas
arpl
cs
push
xchg
cmps
dec
lods
mov
adc
jle
jl
pop
and
sbb
push
mov
mov
or
data16
cmp
and
leave
xchg
test
xor
call
pop
arpl
ins
xchg
and
ins
cwde
jae
dec
push
leave
jnp
in
push
icebp
jg
cld
das
ins
sti
jge
mov
and
xchg
dec
int3
dec
sbb
cmp
dec
xchg
mov
sbb
pop
repz
je
loopne
ja
xchg
aas
xor
add
shl
sti
pop
pop
add
xor
jecxz
imul
in
push
js
stc
loope
cmp
dec
or
xchg
ret
sub
inc
ins
arpl
mov
cmp
movs
push
jl
mov
jae
mov
out
mov
mov
dec
mov
mov
mov
mov
pop
shr
mov
and
inc
or
pop
adc
pusha
sbb
enter
push
mov
sbb
movs
leave
retf
push
movs
ins
dec
lods
sbb
cmp
test
jge
push
(bad)
sbb
arpl
fwait
test
adc
or
dec
pop
sub
fwait
mov
mov
or
push
cmps
cs
jb
cmp
and
mov
stos
and
in
hlt
int
arpl
mov
push
xchg
rcr
dec
in
push
adc
(bad)
cs
pop
mov
and
xchg
mov
dec
xchg
and
or
sbb
(bad)
pop
xor
retf
push
inc
push
or
xchg
sub
mov
in
pop
lods
dec
inc
fcmovb
bound
cdq
gs
cmp
js
add
mov
mov
pop
cs
xchg
loope
pop
add
enter
sub
push
mov
dec
sar
mov
call
bound
ja
test
mov
aaa
adc
nop
in
jge
xor
retf
push
fcom
lahf
xchg
das
int
push
sti
and
pop
dec
jmp
push
ror
xor
jb
xlat
dec
adc
bt
es
jmp
xlat
les
test
inc
mov
sbb
jmp
jge
push
pop
mov
pop
movs
data16
shl
sbb
aas
push
jne
rol
cmp
mov
mov
cmps
xor
repz
movs
or
call
mov
popf
addr16
pop
mov
cli
xor
sub
sahf
call
pop
enter
jg
aad
jg
dec
pop
cmp
jmp
sub
idiv
lods
scas
add
jge
add
(bad)
(bad)
arpl
je
add
hlt
jle
mov
and
push
inc
repnz
rcl
cmp
dec
test
xlat
lahf
mov
adc
imul
adc
push
jg
push
in
test
outs
shl
outs
lods
cmp
bnd
stos
stos
sahf
add
and
dec
imul
add
mov
push
sub
stos
push
pop
mov
into
jns
aad
out
repnz
xchg
loope
ss
xchg
ins
xchg
adc
mov
mov
jnp
hlt
mov
(bad)
arpl
add
jns
mov
sub
and
add
aas
dec
enter
xor
loope
jns
ja
push
adc
sbb
sub
mov
inc
xchg
add
out
call
cmp
jno
xchg
jnp
sbb
jp
adc
repz
cmps
push
or
sub
out
jnp
lea
std
sub
jmp
push
xor
inc
inc
cwde
push
mov
sbb
les
cmc
lds
pop
inc
cmp
push
mov
iret
sub
fimul
jne
cdq
mov
xor
cmp
sub
js
sbb
lock
test
bsf
mov
adc
push
(bad)
cmp
popf
pop
pop
dec
in
arpl
fisttp
cld
pop
pop
push
push
push
xchg
ret
xor
enter
iret
mul
xor
xchg
jnp
pop
mov
adc
mov
xchg
icebp
(bad)
dec
test
inc
jbe
cmps
jmp
push
sar
mov
lds
shl
jns
mov
ss
loop
and
addr16
imul
inc
push
cmps
mov
fwait
adc
hlt
lods
mov
fldenv
inc
movs
mov
mov
ror
ja
test
fdiv
imul
test
imul
pop
inc
push
scas
rol
icebp
fld
sbb
popf
daa
adc
dec
push
or
pop
push
inc
mov
mov
call
movs
inc
popa
jl
cmps
sbb
push
dec
popf
setb
xlat
jbe
adc
mov
inc
adc
sub
dec
shl
addr16
inc
(bad)
adc
push
(bad)
dec
mov
pop
pop
movs
pop
rcr
test
repz
bound
in
jge
jae
js
out
push
inc
cdq
sbb
mov
sub
or
ror
rol
mov
jo
and
mov
adc
dec
inc
es
int3
ja
lods
enter
imul
imul
mov
and
mov
xor
daa
add
pop
(bad)
pop
xchg
clc
xchg
cli
pop
and
in
out
in
xor
cld
or
daa
lea
mov
inc
stc
push
inc
cld
retf
inc
pop
sbb
jecxz
out
cdq
jo
in
(bad)
lods
sbb
sahf
fild
stos
mov
mov
outs
inc
shr
mov
aas
loopne
popa
jns
and
es
out
or
and
sbb
lea
jnp
outs
ret
das
mov
inc
push
pop
outs
sub
adc
(bad)
dec
push
push
jp
retf
ins
jg
adc
mov
sbb
mov
push
hlt
dec
lock
and
dec
shl
xchg
jge
sbb
(bad)
sti
mov
xchg
dec
shr
not
push
jmp
and
ss
scas
pushf
xchg
mov
jl
sbb
lahf
out
cmp
rcr
repz
cmps
and
sbb
fld
lock
mov
rcr
ret
ret
push
xchg
sbb
adc
sbb
stos
aam
mov
xchg
dec
(bad)
loopne
xchg
mov
sbb
sbb
push
xor
push
test
xchg
inc
xchg
push
mov
call
cmp
cmp
jge
pop
sbb
in
stos
cmp
sbb
jp
push
sti
hlt
and
sbb
inc
push
dec
or
(bad)
sbb
mov
iret
mov
add
cmps
(bad)
(bad)
fldl2e
fwait
clc
adc
stos
mov
push
and
add
mov
cmc
jno
push
push
(bad)
out
jmp
and
lods
std
in
out
loopne
mov
arpl
rcl
push
pop
xor
imul
push
and
add
push
mov
dec
aad
mov
pop
xchg
cli
fs
js
push
push
and
loop
mov
xchg
arpl
pop
in
imul
xor
test
adc
cli
sub
ins
sbb
sub
je
mov
mov
push
pop
inc
jge
xor
int3
jge
(bad)
sub
push
jo
fwait
sbb
xchg
sar
movs
test
add
(bad)
gs
lea
mov
dec
sahf
leave
stos
imul
test
pop
loope
mov
push
retf
jb
mov
(bad)
je
jmp
test
xchg
mov
retf
jp
sti
sub
test
cmc
mov
int
out
aam
mov
loope
sbb
out
test
lds
mov
pushf
mov
cs
fstp
push
nop
mov
inc
call
dec
jnp
test
mov
sbb
sub
mov
jge
std
loopne
xor
and
(bad)
hlt
add
mov
mov
mov
leave
or
cmc
pop
dec
rol
fsubr
push
fs
xchg
xor
(bad)
(bad)
pop
test
xchg
aam
aaa
repz
movs
xlat
and
cmp
add
jnp
out
pop
xor
xor
jge
inc
add
lock
and
pop
in
ret
mov
push
aas
sub
fdiv
dec
js
sub
jno
test
(bad)
cmp
xchg
lods
lds
pop
sar
xchg
lds
mov
aas
mov
xor
lock
cmp
mov
imul
mov
or
xchg
cs
adc
or
ins
out
mov
aam
(bad)
in
and
scas
pop
and
aad
xchg
mov
xchg
ds
jb
in
aas
fs
hlt
stos
jecxz
sub
xor
xor
paddd
nop
shl
pop
sbb
pusha
ds
pop
pop
mov
into
rcl
fild
clc
out
out
cdq
les
mov
aas
(bad)
aas
and
adc
lods
fwait
test
mov
or
xchg
(bad)
mov
ins
movs
and
mov
push
out
mov
inc
xor
std
cmp
add
adc
sbb
es
or
imul
addr16
sbb
adc
call
jbe
mov
aas
daa
dec
mov
xchg
or
in
xchg
dec
aad
add
jae
and
sbb
cmps
push
inc
test
mov
dec
inc
lods
daa
mov
in
test
sbb
mov
xchg
xor
arpl
mov
adc
into
(bad)
sbb
fbld
pop
xor
mov
jbe
cmp
pop
mov
jp
sub
or
imul
imul
jo
cmps
es
ss
cmp
adc
cmp
inc
ds
shl
and
ja
xor
call
or
fs
(bad)
clc
aaa
daa
pop
cdq
in
pop
xlat
or
mov
lods
(bad)
lods
jnp
or
cmp
xchg
lea
daa
mov
dec
fsubr
fsubr
mov
inc
fbstp
inc
add
ror
inc
xor
and
lock
sti
pop
nop
mov
rol
fistp
sbb
xchg
fidivr
aas
jmp
std
arpl
fs
lock
jge
xor
into
sub
adc
pop
mov
rcr
fild
cmp
sbb
adc
inc
mov
arpl
or
inc
dec
lods
fst
push
xor
fmul
jl
push
dec
lea
ror
jecxz
cmc
xchg
in
xchg
je
mov
push
dec
mov
sahf
pushf
sahf
nop
inc
add
fisub
icebp
adc
mov
fs
out
rol
(bad)
jb
jle
pusha
sub
test
or
stos
mov
dec
mov
shl
inc
adc
ins
push
cs
add
pop
scas
movs
(bad)
mov
dec
jns
test
mov
xor
inc
jp
int3
mov
jns
shr
sub
ja
icebp
rcl
repnz
aas
add
push
fwait
push
scas
out
xchg
ins
lods
mov
stos
pushf
loop
loope
in
js
out
jecxz
es
jb
mov
dec
in
popf
xchg
test
dec
mov
cs
pop
jl
cmps
and
mov
inc
mov
(bad)
mov
fwait
xchg
mov
sub
ds
xor
lahf
cmp
pop
and
addr16
hlt
mov
loop
cmc
mov
mov
test
dec
and
ror
adc
cmp
mov
popf
(bad)
push
inc
pop
(bad)
call
loop
out
jl
ds
sub
adc
add
out
repnz
xchg
pushf
cmp
pop
pop
ror
jle
stos
lock
mov
xor
sbb
dec
mov
push
into
pop
daa
adc
pop
sub
jae
xchg
je
fisttp
neg
sbb
js
pop
xor
or
sbb
xchg
cmp
lock
push
call
sti
call
cmps
fwait
xchg
mov
add
cmp
pop
pop
and
lods
adc
lahf
mov
mov
pop
rol
loope
push
add
popf
mov
or
hlt
jb
popf
jbe
aaa
push
sub
loop
or
pop
and
cwde
sbb
pop
fidiv
inc
shl
add
mov
fdiv
retf
xchg
bnd
popa
lods
scas
shl
call
push
shl
xor
fnstcw
add
and
push
cmp
jge
pushf
lock
xchg
cld
pusha
jecxz
adc
mov
push
cmp
mov
repnz
push
lea
out
addr16
cmps
cdq
mov
sbb
ror
mov
pop
cmp
in
push
sar
hlt
outs
imul
or
mov
fwait
scas
stos
adc
into
push
cwde
ins
fnsave
pop
xor
addr16
cmps
pop
out
loop
call
loop
xchg
xor
xor
inc
faddp
pop
xor
bound
out
ss
dec
and
movs
popa
into
nop
and
add
lock
pop
mov
jl
and
js
ins
pop
mov
sbb
xchg
jb
mov
mov
retf
sub
mov
jg
outs
inc
jae
sahf
jno
mov
js
xchg
fcmovb
or
icebp
out
pushf
xor
gs
add
xor
(bad)
aam
cmps
add
adc
mov
dec
vmovupd
add
out
jmp
inc
fimul
cld
pop
into
repnz
lahf
arpl
stos
push
fimul
inc
movs
movs
push
xchg
cmp
dec
inc
sbb
test
aas
lea
shl
(bad)
sub
mov
iret
mov
fsub
jb
sub
jl
out
jmp
mov
scas
(bad)
ins
fstp
push
cld
sbb
adc
mov
xor
loop
(bad)
adc
nop
jecxz
push
das
ins
mov
dec
or
aad
pop
add
cmp
or
xor
add
push
je
ret
fucomp
pop
mov
cs
mov
bound
and
cmp
mov
std
sar
xor
repz
xchg
mov
xchg
ret
out
mov
lahf
sub
sbb
cmp
xchg
mov
addr16
pop
adc
in
cmp
jge
push
xchg
gs
(bad)
pop
test
push
pop
das
dec
mov
inc
inc
hlt
adc
lea
dec
clc
mul
and
out
popa
xor
and
fcomp
fstp
sbb
cmp
xchg
xor
xor
sahf
mov
test
push
push
push
outs
jb
ret
sti
pusha
in
xor
jns
adc
mov
rcl
dec
or
aad
lods
dec
sub
sub
or
xchg
xchg
sti
lods
push
dec
pop
in
repnz
and
jmp
cld
sbb
movs
sti
mov
in
test
or
pop
shl
inc
mov
ja
inc
inc
mov
jo
push
push
lods
(bad)
clc
pop
jl
mov
loopne
inc
cmps
push
cmps
push
adc
sub
sbb
not
mov
rcl
and
int
xchg
pop
in
mov
pop
xchg
push
(bad)
retf
mov
push
and
mov
add
dec
mov
arpl
xlat
inc
mov
jae
mov
sbb
add
(bad)
clc
or
repz
mov
xor
test
xchg
shl
mov
stc
les
sbb
fisub
outs
loope
xchg
jge
push
cmps
in
mov
ret
sub
or
mov
mov
(bad)
mov
jnp
icebp
aas
int3
(bad)
jmp
repnz
push
cli
cwde
pop
imul
mov
(bad)
outs
cmp
xchg
iret
stc
repz
sub
xor
jnp
and
(bad)
jno
xchg
arpl
(bad)
jl
cmp
inc
dec
pop
fcomp
mov
or
ins
jne
jmp
adc
popa
mov
clc
ret
mov
cmp
pop
push
loope
lods
les
mov
or
and
sbb
fs
mov
stos
dec
frstor
and
pop
adc
mov
call
call
jle
mov
out
mov
inc
stos
jno
das
xrelease
(bad)
pop
loopne
(bad)
jp
adc
xchg
push
inc
shl
stos
jno
rcr
or
cmp
int3
(bad)
out
sub
call
jae
enter
add
and
sar
(bad)
(bad)
jecxz
mov
enter
or
pusha
test
ins
(bad)
test
loopne
dec
adc
xor
push
and
cmp
or
addr16
pop
int3
test
push
iret
sub
and
cmp
daa
pop
(bad)
jl
inc
xor
dec
(bad)
or
aas
stos
sbb
inc
call
(bad)
cmp
loopne
add
xor
add
add
es
mov
stos
cli
adc
mov
loopne
jns
cmps
jnp
movs
ins
mov
push
retf
cmp
sbb
push
xchg
in
push
stos
mov
in
and
push
stos
cmp
ret
je
movs
(bad)
outs
ficomp
cmp
mov
pop
and
cmp
in
push
mov
mov
cmc
dec
scas
les
sbb
jae
into
stc
push
lock
cmp
stos
enter
test
hlt
fld
push
cmp
xchg
cmc
div
sub
lods
dec
push
push
xor
add
inc
push
jl
mov
xlat
jbe
aam
femms
dec
(bad)
sub
imul
adc
mov
cmp
push
xchg
pop
push
mov
sbb
sub
sti
std
(bad)
cmc
xchg
add
dec
nop
jmp
sbb
sbb
mov
xor
mov
xor
mov
outs
adc
dec
or
sar
xor
cwde
(bad)
fldcw
or
xchg
sahf
push
push
inc
sbb
xchg
stc
cmp
jne
xchg
cwde
push
or
add
mov
mov
cmp
into
jae
mov
aam
popf
xor
jne
or
inc
inc
shl
jmp
gs
sub
cmp
js
into
sbb
cmps
sub
clc
sahf
cs
mov
sub
sbb
mov
pop
into
sbb
inc
les
xor
xchg
sbb
push
mov
pop
add
pop
imul
lahf
lds
mov
(bad)
and
xor
pop
cmp
repnz
adc
cmp
inc
in
fadd
cld
adc
div
push
in
push
mov
fdiv
cmc
mov
dec
cld
mov
rcl
je
test
jbe
xchg
pop
or
xchg
and
pusha
and
pop
cmc
or
mov
je
push
rcr
xor
xor
repz
cmp
xor
es
mov
pusha
mov
dec
dec
out
fwait
or
cmp
push
cs
cli
out
nop
test
or
fnstsw
jl
push
inc
mov
and
pop
ja
push
inc
pop
das
imul
out
mov
add
in
gs
in
sub
inc
xor
add
mov
(bad)
cwde
das
mov
scas
sti
in
jbe
xor
jmp
pop
sbb
inc
xchg
mov
cmp
jno
iret
das
pop
repnz
(bad)
cmps
mov
mov
iret
push
lods
dec
cwde
add
iret
lods
mov
adc
inc
pop
jns
mov
xchg
test
xor
ret
mov
call
movs
cmps
(bad)
(bad)
lds
lea
mov
gs
(bad)
ja
out
sahf
(bad)
pop
cmp
jnp
xor
cmc
adc
loopne
ins
or
fcom
int
mov
lods
cmc
add
cwde
xlat
out
aad
clc
lea
movs
loope
or
push
rcl
sub
lods
int3
sbb
push
(bad)
nop
sub
dec
pop
dec
leave
popa
or
push
call
sti
bound
sbb
ficom
push
je
fbld
pop
fnsave
pusha
jne
ins
lods
jo
cmc
cwde
leave
cs
(bad)
sub
cmp
mov
mov
add
jg
(bad)
jmp
mov
fidivr
or
push
test
loope
push
nop
lods
xchg
inc
jnp
xchg
hlt
pop
inc
pop
fnstcw
mov
cmps
sbb
adc
sub
pop
push
ds
aas
and
fcmovnb
xchg
jns
cmp
pop
lahf
add
stos
mov
sbb
xor
imul
movs
retf
mov
sbb
mov
(bad)
jo
xor
mov
fcom
push
jnp
lods
cmp
outs
test
add
xor
(bad)
add
jp
sahf
sti
daa
lahf
out
sar
sbb
push
xchg
mov
mov
into
stos
mov
add
add
xor
stos
aas
aas
not
jmp
cli
ja
pushf
ror
adc
mov
add
mov
sub
popa
ss
pop
mul
dec
fadd
xchg
mov
scas
lock
shl
and
bound
jecxz
cmps
ret
mov
mov
movs
iret
ja
push
mov
dec
aam
in
scas
pop
dec
inc
ins
push
jnp
les
sti
dec
jae
adc
sar
sub
mov
inc
(bad)
xor
sbb
mov
pop
std
pushf
cmp
inc
rcr
ss
scas
je
nop
dec
popa
cmps
ins
rol
inc
jp
mov
in
clc
arpl
and
ds
xchg
inc
out
jbe
mov
push
loop
mov
cwde
or
fcom
cld
(bad)
clc
push
mov
sbb
push
mov
into
iret
cmp
cmc
repz
cmp
mov
mov
xor
mov
add
sbb
(bad)
inc
imul
call
fmul
jp
cli
sbb
ss
add
pop
xchg
fwait
jle
add
loopne
mov
pop
push
int3
mul
test
mov
fst
test
ins
out
aaa
test
shl
clc
out
fwait
jnp
gs
outs
adc
cwde
xor
mov
jg
xchg
not
int3
or
jnp
jb
pop
leave
movs
test
jl
mov
call
cwde
xchg
call
mov
mov
xchg
imul
test
outs
jl
adc
add
pop
inc
add
les
daa
add
repnz
mov
pminub
mov
lods
pop
movs
push
push
pop
into
fmul
sti
scas
or
test
arpl
pop
test
(bad)
cli
ret
adc
pop
adc
pushf
or
mov
fnstsw
clc
fucomip
mov
test
cmp
sub
jmp
and
mov
ins
lock
mov
xchg
sub
in
jge
sub
test
cli
call
xlat
mov
out
mov
pop
sar
push
fadd
mov
mov
mov
icebp
mov
dec
inc
mov
add
(bad)
out
(bad)
(bad)
sbb
in
jp
mov
pop
mov
dec
rol
loop
push
pop
dec
test
pop
push
sub
mov
push
push
scas
sub
mov
arpl
mov
jae
add
jae
pop
aaa
xor
mov
pop
or
das
in
pop
xor
cli
ins
lds
shl
(bad)
push
jecxz
leave
mov
fisttp
jb
in
ja
in
leave
mov
imul
ret
inc
enter
pop
mov
les
cmc
adc
xchg
pop
sub
inc
jae
fldcw
adc
push
xchg
fistp
stos
push
(bad)
sahf
pop
or
popa
jp
and
dec
push
inc
jmp
mov
stos
ds
add
out
out
fmulp
mov
mov
and
dec
(bad)
scas
outs
dec
mov
or
sbb
mov
mov
scas
jmp
scas
(bad)
cmp
pushf
mov
inc
dec
mov
inc
daa
or
or
jbe
sbb
imul
xchg
cmps
in
push
loopne
stos
jle
(bad)
sbb
mov
fidivr
idiv
aam
add
push
loop
(bad)
stos
jl
ins
pop
or
adc
inc
into
retf
cmp
and
mov
mov
inc
adc
pop
or
push
fnstsw
test
retf
aad
test
(bad)
jne
jo
orps
xor
xlat
add
fstp
sub
iret
and
dec
sbb
(bad)
js
mov
mov
jmp
gs
jmp
adc
add
add
pop
paddq
adc
aad
jmp
adc
mov
cmp
jp
xor
inc
jnp
sub
ss
push
les
lock
jmp
cmps
mov
pop
pop
cmp
push
jmp
cmp
push
inc
or
repz
adc
aas
int3
out
imul
daa
aas
inc
outs
add
push
or
mov
jmp
movs
pop
or
sbb
pusha
push
xor
mov
test
jl
mov
shr
test
rcr
retf
pop
push
aam
inc
ret
(bad)
mov
sbb
cld
aam
xor
xor
std
adc
add
adc
adc
in
shl
fadd
(bad)
mov
stos
mov
mov
xchg
sub
pusha
cmp
sub
and
xchg
adc
mov
cmp
dec
aad
(bad)
(bad)
jge
leave
inc
or
fisub
and
mov
add
shl
movs
inc
test
xchg
(bad)
push
(bad)
mov
adc
xor
je
sbb
stos
pop
popa
or
pop
mov
or
loop
dec
jle
adc
mov
jbe
xor
(bad)
push
xchg
loop
cmp
inc
and
xchg
ror
test
add
jnp
jnp
jns
push
jle
sub
pop
cmp
shl
cwde
out
push
das
jmp
inc
cmp
sbb
movs
pop
sbb
jnp
test
inc
xor
push
dec
int3
outs
add
xor
aaa
sub
push
or
adc
pop
xchg
ss
imul
into
test
cwde
pop
stos
push
mov
dec
xchg
mov
je
mov
mov
cld
sub
popa
sub
call
scas
test
(bad)
jl
mov
call
es
xchg
mov
sar
mov
ret
test
push
mov
fcmovb
fwait
addr16
inc
hlt
mov
sbb
adc
ficom
rol
data16
or
jp
stc
cld
mov
hlt
or
mov
mov
mov
cmps
cmp
xor
loop
out
mov
pushf
lds
push
adc
scas
add
adc
scas
(bad)
repnz
jge
push
xchg
outs
adc
shr
mov
in
mov
(bad)
mov
retf
mov
mov
dec
cmps
stos
and
test
xchg
leave
push
mov
fidiv
pop
repnz
cmp
test
hlt
add
inc
and
jne
popa
cmpxchg
mov
cwde
cmps
xchg
(bad)
and
push
push
lods
das
xchg
cmp
mov
cmps
sti
push
push
or
and
push
jle
sbb
jo
sub
pop
dec
dec
hlt
fs
xor
mov
pop
and
btc
inc
or
aad
nop
sahf
cmp
ret
add
pop
push
mov
imul
mov
rcr
pop
jne
pop
(bad)
mov
xchg
mov
xor
jnp
lods
xor
fisub
xchg
shl
mov
pusha
jbe
push
pop
or
jbe
mov
out
imul
test
or
(bad)
sub
nop
sbb
pop
xor
popa
xor
xchg
inc
imul
inc
ins
test
(bad)
icebp
jb
inc
outs
xor
mov
aaa
loop
xor
cmp
and
adc
call
sahf
jno
movs
sbb
out
push
and
mov
inc
mov
in
mov
movs
mov
scas
xor
jns
movs
mov
or
pop
push
out
retf
mov
jmp
pop
mov
sub
hlt
xor
jo
dec
(bad)
hlt
pop
popa
push
aam
jl
enter
jae
lods
and
popa
sub
add
shl
xchg
sub
and
or
inc
inc
push
aam
leave
aad
test
sbb
mov
sub
dec
push
mov
push
push
sub
add
fnstcw
imul
dec
mov
jl
test
lea
inc
mov
or
mov
jmp
pop
shl
dec
push
in
xchg
add
lock
sub
arpl
(bad)
pushf
push
or
or
sbb
xchg
push
int3
(bad)
xchg
je
jg
cmp
pop
push
push
inc
or
scas
push
cs
imul
test
shl
mov
jmp
sub
dec
xor
inc
xor
fs
sbb
sbb
les
jmp
mov
sbb
shl
adc
jge
mov
dec
lahf
(bad)
daa
xor
fldcw
adc
cli
pop
jp
cs
sub
dec
sbb
or
(bad)
shl
mov
add
and
test
adc
cmps
lds
sbb
(bad)
fiadd
cmp
ins
fistp
adc
sub
push
cmc
loop
add
icebp
cmp
push
cmp
add
je
inc
mov
jbe
jle
mov
rol
sbb
inc
sub
outs
push
ror
push
cmp
xor
sub
jno
xchg
rcr
mov
mov
inc
mov
push
inc
leave
sbb
push
stos
mov
(bad)
jmp
pop
add
retf
hlt
hlt
iret
dec
addr16
pop
xchg
and
nop
sbb
std
mov
retf
pop
pop
lock
repz
mov
xchg
les
mov
inc
mov
push
sbb
popa
gs
jbe
call
push
cmc
cwde
cmps
(bad)
add
push
fs
sub
add
cs
cmp
loopne
xor
mov
dec
repz
fstp
jg
(bad)
fprem
inc
pop
push
or
push
pop
jb
xor
call
jmp
adc
add
rcr
imul
int3
jl
addr16
fwait
xor
jge
das
xor
pop
sub
ds
push
rcl
adc
imul
icebp
push
push
loope
inc
xor
push
mov
les
inc
mov
inc
sbb
outs
mov
cdq
stc
cmp
mul
xor
mov
cmp
mov
xor
fcomip
pushf
in
sbb
jmp
cmp
mov
mov
xchg
pop
in
or
test
mov
xchg
adc
ss
cli
xchg
and
pop
fsubr
cld
inc
mov
ss
push
pop
jge
(bad)
dec
imul
cmp
jmp
sub
leave
push
jne
sbb
sub
sub
cmps
mov
out
fdivp
push
es
lds
jmp
cs
inc
dec
iret
xlat
pop
jnp
in
pusha
dec
and
push
xchg
and
test
in
mov
mov
pop
in
loopne
xchg
mov
and
pop
dec
(bad)
sub
fmul
and
mov
cmp
out
fdivr
sbb
push
es
imul
pop
inc
push
mov
mov
pushf
mov
call
xchg
adc
adc
push
mov
icebp
pusha
lods
inc
or
in
xchg
jne
mov
cmp
xchg
cmp
hlt
sub
cs
inc
adc
adc
aad
push
retf
sbb
rcr
jo
outs
pop
jnp
pop
xlat
addr16
lods
mov
or
add
scas
stos
push
scas
adc
arpl
fwait
adc
jle
mov
inc
adc
xor
clc
cmps
pop
(bad)
outs
mov
aas
push
into
or
pop
out
rcl
mov
add
cmp
and
jno
cmp
pop
les
and
test
std
call
pop
dec
jmp
pop
push
ss
jns
lea
ret
xchg
mov
sub
dec
das
mov
out
mov
cs
sub
adc
jmp
stos
(bad)
or
fdiv
sbb
in
inc
or
(bad)
in
mov
inc
call
sbb
mov
dec
setge
mov
imul
adc
add
inc
into
mov
and
or
repnz
std
pushf
retf
inc
mov
sbb
inc
xchg
dec
mov
inc
ds
ins
test
lods
jecxz
sbb
cmp
inc
mov
add
nop
dec
pop
retf
retf
jb
out
mov
int
push
cmp
jo
push
dec
mov
sbb
sub
mov
push
add
push
xor
push
or
jmp
pop
adc
movlps
jge
sbb
sbb
shl
rcl
rol
ret
fst
adc
inc
std
mov
jl
sbb
mov
mov
cmps
(bad)
sbb
(bad)
and
(bad)
dec
call
xchg
jae
push
iret
mov
inc
out
ds
xor
push
dec
pop
test
inc
and
ja
test
mov
jns
sbb
fistp
mul
aam
xor
and
rol
mov
aas
jecxz
bound
test
push
(bad)
mul
mov
jl
enter
inc
adc
sbb
and
addr16
pushf
add
jae
add
fisttp
mul
push
(bad)
sbb
xor
or
mov
movntq
pop
int
cmp
mov
xchg
call
or
or
in
sbb
mov
add
test
sub
add
xchg
popa
sub
mov
leave
push
dec
xchg
xor
loop
(bad)
lods
pop
push
pop
cmps
cmp
cmps
push
ret
and
xor
lods
pop
mov
add
adc
(bad)
mov
shl
cmp
cli
dec
adc
nop
mov
and
cmps
test
push
ror
cmps
jg
mov
pop
mov
clc
imul
push
xchg
jle
das
pop
add
outs
popa
icebp
adc
fisub
cli
cmps
or
xlat
imul
mov
in
pop
xor
jg
mov
pop
fsubp
jp
gs
xchg
into
jae
leave
and
ds
and
pop
jecxz
add
arpl
sbb
ins
rcr
(bad)
(bad)
sub
sti
push
test
and
retf
xchg
imul
bound
push
or
mov
clc
scas
mov
cs
loop
xchg
shl
lock
nop
scas
imul
sbb
inc
sub
mov
push
std
in
arpl
jmp
cs
and
sbb
push
pop
cmps
sar
and
mov
add
push
adc
aas
jle
dec
sbb
out
fwait
loopne
dec
popf
retf
(bad)
jmp
mov
and
jp
adc
fcmovnbe
nop
nop
dec
pusha
les
fimul
aad
mov
inc
and
ja
fisub
stos
cwde
mov
or
addr16
lods
(bad)
loopne
mov
mov
lods
pushf
call
push
std
mov
mov
add
xor
adc
movs
loope
dec
push
xor
test
dec
aaa
inc
inc
ins
xchg
xor
pop
pop
je
popf
xor
mov
push
repnz
inc
aad
add
fadd
adc
adc
sbb
pusha
mov
rcl
cmp
sub
push
(bad)
mov
jno
mov
lds
test
xor
mov
or
leave
cmp
adc
movs
push
pop
mov
(bad)
addr16
mov
cld
fdivr
push
mov
cmp
pop
(bad)
scas
pop
rcl
jne
scas
inc
push
or
sub
add
inc
sub
rcl
sbb
adc
aam
jmp
movs
mov
xchg
ja
sbb
fistp
inc
xor
ja
cli
scas
jmp
sbb
push
adc
add
outs
dec
lods
dec
mov
jo
mov
into
movs
cwde
lar
sbb
(bad)
push
into
arpl
sbb
and
pop
adc
lock
add
and
pop
cmp
sub
sub
inc
pop
popa
dec
pop
in
fcomp
pop
cwde
jmp
cmps
js
(bad)
lods
mov
hlt
nop
test
(bad)
fcmovb
rcr
mov
int
sbb
mov
push
mov
sbb
cmp
inc
ja
rol
test
out
(bad)
adc
outs
xchg
pop
ret
and
(bad)
jl
push
push
enter
or
dec
and
ror
sbb
inc
in
pop
push
mov
sbb
mov
out
and
fcmovu
loop
and
leave
and
cmp
lea
scas
shl
cmp
mov
or
jne
leave
cdq
inc
pop
repz
fwait
xor
mov
call
fisttp
lods
inc
mov
push
fidiv
add
dec
pop
cmp
lahf
inc
jle
xor
arpl
cmp
gs
inc
fistp
retf
shr
cmp
clc
inc
ficomp
retf
cmp
or
push
fs
fadd
popf
and
rol
inc
in
push
test
adc
pop
ret
add
ja
adc
and
(bad)
sar
sub
adc
inc
jo
and
sahf
mov
xchg
add
fwait
sbb
fild
sub
cmp
(bad)
js
or
cmp
add
sub
cmp
(bad)
in
adc
inc
xor
stos
or
ins
les
and
inc
idiv
add
les
jne
sbb
mov
ret
lods
data16
jmp
aam
das
fs
jp
mov
adc
and
repnz
icebp
cwde
bound
pop
jge
add
sub
cmp
shl
sub
in
jae
sbb
sub
add
sub
cld
(bad)
sbb
sub
jnp
dec
ror
inc
xchg
xchg
xor
or
and
popa
jle
fidivr
(bad)
stos
mov
mov
pop
jmp
mov
pop
jge
ror
cmps
aaa
lds
sub
fcom
ret
bound
sub
or
jecxz
mov
inc
adc
push
sub
xor
out
pop
fmul
ins
push
fwait
and
test
inc
add
mov
xchg
sbb
retf
(bad)
scas
sbb
ror
(bad)
push
inc
jge
jno
mov
lahf
pop
ror
icebp
push
fistp
inc
ror
mov
mov
in
repnz
fistp
push
arpl
dec
and
jecxz
mov
icebp
cld
xchg
jl
(bad)
add
aas
jecxz
in
jbe
(bad)
(bad)
push
je
push
push
das
adc
loop
scas
in
lods
push
sar
cmps
(bad)
adc
mov
sub
fs
push
(bad)
les
cmp
mov
xchg
outs
inc
dec
or
pop
pop
jecxz
inc
xchg
(bad)
jbe
ret
mov
adc
jb
idiv
(bad)
sar
pusha
add
iret
mov
mov
lods
mov
and
pop
fisttp
loop
cwde
jmp
cmp
(bad)
pop
(bad)
fsub
mov
mov
jmp
imul
in
adc
rcl
jge
pop
in
test
pushf
xor
add
inc
cmp
(bad)
pop
into
xchg
mov
jg
pop
fwait
cmp
pop
jns
or
test
clc
in
pop
jmp
inc
outs
and
sahf
test
mov
mov
mov
daa
xchg
stos
movs
jecxz
push
scas
sub
dec
out
cdq
or
std
push
sub
sub
es
adc
dec
lods
mov
aas
(bad)
lahf
dec
adc
das
push
shl
mov
scas
cmp
push
adc
push
inc
pop
push
(bad)
fild
test
push
ss
ins
in
out
retf
fild
ret
shl
int
mov
ins
dec
fcomp
cmps
and
fld
push
pmovmskb
fdiv
adc
popa
cwde
arpl
and
pop
(bad)
(bad)
cmp
pop
ins
dec
add
(bad)
mov
mov
jge
pop
cmp
cmp
dec
or
mov
dec
mov
(bad)
fiadd
xchg
mov
lahf
cmp
test
ja
loopne
frstor
clc
mov
xchg
jmp
cmp
push
mov
dec
stc
and
dec
or
xor
xor
cmp
dec
inc
sub
rcl
xchg
out
mov
nop
xor
xor
and
or
push
cmp
add
sti
inc
inc
clc
xchg
jb
cmp
mov
ror
std
mov
xlat
sar
arpl
movs
pop
sbb
cdq
(bad)
ss
ja
cdq
fld
loopne
imul
sub
out
outs
mov
aas
sbb
fild
in
fimul
mov
loope
adc
inc
in
mul
ror
jle
ss
and
(bad)
cmps
pop
sub
add
aaa
jns
mov
bound
push
mov
and
hlt
gs
popa
mov
mov
repz
mov
loopne
mov
icebp
shl
ins
sti
adc
mov
jns
inc
cli
mov
cmps
pop
gs
in
out
test
or
dec
dec
xchg
gs
(bad)
cli
cmovs
popf
dec
outs
mov
out
out
shl
push
push
jbe
xchg
(bad)
(bad)
push
(bad)
pop
stc
out
mul
push
pushf
push
movs
mov
int3
mov
push
xlat
pop
out
or
pop
or
dec
cmovs
out
mov
xchg
std
cmps
ins
aas
mov
dec
add
ss
adc
out
arpl
nop
fistp
inc
and
pop
push
mov
adc
jmp
xor
aas
adc
mov
ja
pusha
cmps
popf
push
mov
js
ret
mov
push
lahf
and
mov
push
mov
sbb
pusha
pushf
sbb
push
pop
js
imul
xor
adc
sbb
enter
(bad)
adc
and
mov
mov
ret
std
imul
xlat
hlt
mov
popa
inc
or
int3
xchg
ds
adc
scas
into
inc
cmp
out
pop
cli
add
adc
sti
cld
neg
jge
dec
and
addr16
jg
sar
ss
pushf
inc
sub
jmp
mov
test
sbb
loopne
add
push
mov
xchg
xor
gs
lea
mov
jmp
sbb
mov
xchg
adc
iret
adc
xlat
in
dec
fidiv
push
nop
gs
xor
out
pop
ins
aad
jg
ins
sub
push
push
mov
mov
push
aad
xor
ss
test
pop
mov
add
bound
(bad)
fsubr
lds
int3
sti
stos
imul
adc
add
retf
mov
dec
cmc
or
mov
xlat
popa
mov
jl
fadd
pop
pop
les
stc
jmp
call
daa
jnp
lahf
xor
mov
sub
cld
pop
cmp
dec
(bad)
pop
cmp
(bad)
ret
lock
test
mov
xchg
push
jp
retfw
mov
enter
fisub
retf
ds
rcr
jp
ffree
ins
inc
jmp
sbb
dec
shl
std
adc
sbb
adc
sub
aaa
jmp
xchg
mov
je
xchg
aas
div
mov
push
push
sub
push
pop
ja
dec
xor
inc
pop
lods
mov
movs
xchg
in
push
out
pop
ffreep
dec
call
sbb
add
arpl
jmp
sbb
hlt
and
pop
in
cmp
(bad)
lahf
adc
xchg
inc
sar
out
sbb
push
fmul
out
or
lock
imul
popf
dec
sub
loopne
hlt
daa
add
push
or
cmp
xor
loop
sbb
hlt
push
xchg
enter
es
callw
(bad)
add
cmp
mov
(bad)
and
pop
mov
cmps
sbb
fsub
sbb
dec
pop
stc
cwde
xor
int3
mov
jmp
sahf
mov
sub
jae
cwde
pop
les
mov
pop
es
outs
gs
sbb
inc
cld
jns
add
(bad)
mov
stos
je
sub
push
xor
add
(bad)
mov
push
pop
cmps
xchg
push
push
outs
aad
mov
or
mov
mov
(bad)
mov
retf
test
jmp
mov
mov
and
jnp
push
jge
and
loopne
mov
and
sub
aas
sbb
inc
gs
inc
fnstsw
std
std
or
push
(bad)
pop
(bad)
cdq
data16
cmp
and
test
dec
jb
mul
ret
inc
mov
add
clc
mov
adc
pop
and
test
lea
nop
mov
xor
jge
mov
and
int3
pusha
cmp
in
fwait
mov
fidiv
dec
add
mov
xchg
cmp
test
mov
xchg
mov
sti
sub
mov
mov
mov
add
lds
add
xchg
pusha
mov
cmp
fcomp
xor
retf
adc
(bad)
sub
movs
or
sbb
push
xor
add
and
mov
loope
scas
jg
cmp
clc
(bad)
xor
mov
push
mov
dec
es
or
cli
sbb
mov
in
stos
out
mov
mov
out
mov
and
imul
cmps
pop
push
mov
push
sub
fild
push
test
cmc
cmc
call
int3
call
jo
mov
pop
dec
sbb
jecxz
add
(bad)
push
sbb
rcr
out
and
ja
inc
xchg
dec
cmps
popa
cmp
sar
repnz
outs
icebp
ins
mov
mov
out
sar
xlat
xchg
cmp
xor
and
mov
fild
or
ret
inc
cmp
test
inc
in
push
movs
stc
int
iret
(bad)
outs
mov
xchg
dec
mov
xor
pop
es
mov
xlat
push
popf
pop
enter
cmc
mov
lds
pushf
retf
cmp
and
xor
xor
and
mov
outs
fldcw
cmp
xchg
mov
pushf
push
jg
ja
das
and
lods
mov
outs
repnz
adc
out
into
stos
outs
push
out
fwait
jmp
mov
xor
pop
popf
in
inc
jno
jge
and
sar
jecxz
sbb
jbe
fdivr
sahf
push
cmc
adc
dec
sub
xor
scas
sahf
jo
cmp
jge
test
sti
sub
std
movs
or
xchg
pushf
mov
dec
or
popf
pop
mov
fcom
xchg
in
pop
sbb
adc
push
in
push
cmp
psrlq
in
mov
cmp
into
lea
call
mov
jae
fwait
sub
in
jne
sbb
dec
add
xor
in
mov
sti
push
mov
ds
and
test
dec
addr16
inc
push
xor
push
mov
and
outs
out
sub
aad
dec
mov
sub
push
push
mov
int3
leave
les
cli
aam
add
sti
bound
mov
outs
mov
jg
stos
mov
xor
push
xchg
adc
dec
add
aad
jle
adc
rcl
push
stos
mov
vsubps
add
mov
test
and
mov
data16
dec
mov
jae
add
ds
lahf
mov
adc
test
jbe
bound
sub
inc
xlat
ret
add
imul
popa
xlat
fiadd
mov
xor
mov
xor
(bad)
in
and
mov
sar
test
clc
in
push
mov
add
xchg
jb
push
iret
(bad)
mov
jns
repz
(bad)
daa
jg
mov
cs
sub
fsub
adc
cmps
dec
pop
mov
call
in
es
bound
in
aaa
gs
push
or
add
xor
or
test
jb
mov
mov
fdivr
imul
outs
add
js
lods
add
or
pop
ins
fadd
ins
gs
in
sbb
hlt
in
or
into
dec
add
push
cli
fld
(bad)
popf
and
jg
add
add
jmp
mov
add
and
imul
inc
mov
pop
call
out
pop
and
inc
icebp
arpl
xchg
adc
jl
jp
xor
mov
aaa
ins
scas
aad
adc
push
rcl
jl
aam
inc
pop
call
jns
fucom
adc
lds
dec
xchg
jle
(bad)
fidivr
shr
add
xor
sti
jmp
xor
xchg
les
mov
mov
addr16
lods
mov
pop
pandn
dec
pop
xchg
iret
loopne
cwde
ins
les
cmps
scas
sti
mov
adc
push
jecxz
in
lods
adc
mov
xchg
mov
cmc
xor
rcr
inc
shl
push
call
and
cmp
mov
push
sub
daa
(bad)
idiv
sar
pop
js
cmp
mov
ins
lods
jecxz
out
cmp
and
ror
jo
jnp
stc
fs
pushf
sbb
jmp
mov
call
scas
shl
fbstp
daa
push
sub
xor
rcr
retf
imul
push
inc
icebp
add
out
mov
lds
xchg
mov
and
jnp
mov
inc
test
mov
sbb
push
test
jg
jp
cmp
jns
jo
cmps
cmp
xlat
out
push
(bad)
in
rcr
xor
out
scas
mov
or
xchg
(bad)
mov
cwde
addr16
popf
mov
jg
or
mov
dec
ret
inc
mov
daa
int3
and
dec
movs
dec
int
cmp
push
repnz
or
jb
popa
retf
inc
(bad)
pop
stc
mov
mov
or
dec
leave
cmp
push
add
mov
icebp
pop
arpl
sbb
les
sbb
jbe
dec
repnz
push
push
cdq
xlat
bound
xchg
mov
ins
mov
into
rcl
fnstcw
test
push
neg
test
(bad)
mov
jno
jg
and
popa
outs
imul
mov
fld
mov
mov
imul
(bad)
test
mov
scas
or
es
retf
shl
test
or
push
dec
xchg
add
inc
push
mov
xchg
mov
test
mov
movs
push
push
mov
mov
dec
loope
mov
or
inc
lds
pop
shl
jmp
jno
dec
pop
mov
sahf
leave
mov
sub
and
sahf
mov
xor
cmp
mov
std
loop
jo
test
jnp
adc
pop
call
push
add
jb
push
mov
cdq
cmps
xor
pop
cmp
jp
das
mov
shl
xor
cmps
pop
inc
pop
test
inc
inc
call
jo
push
mul
jne
fcom
dec
xchg
in
mov
pusha
ja
xor
inc
jnp
arpl
jp
inc
push
pop
icebp
cs
stc
push
mov
push
pop
pop
ror
daa
inc
das
out
and
mov
mov
jge
sahf
lods
ins
sbb
push
test
js
inc
ss
icebp
jno
xor
iret
mov
sbb
or
loop
push
jae
mov
shl
fucom
aaa
mov
cmp
(bad)
push
in
clc
jne
inc
int3
imul
and
pop
jmp
rcr
ja
cmps
lods
mov
or
or
pop
lods
scas
mov
mov
mov
arpl
nop
imul
mov
mov
in
mov
pop
mov
pop
mov
js
stos
movs
je
mov
jg
imul
push
mov
in
retf
scas
inc
or
lds
adc
xor
mov
add
xchg
jno
xor
mov
add
or
(bad)
add
jne
loopne
out
mov
jne
lock
out
icebp
(bad)
cmc
shl
or
xchg
out
stos
sub
out
ja
icebp
and
push
jmp
mov
inc
cmp
dec
adc
daa
nop
add
imul
test
(bad)
jno
sub
shl
push
and
and
xchg
jne
std
mov
fdiv
ins
cmps
pop
pop
pop
jns
mov
mov
sbb
xor
jle
movs
movs
loopne
nop
lahf
xor
xlat
adc
jmp
sbb
pushf
push
push
rcl
xchg
xchg
or
and
ss
ss
push
scas
or
pusha
mov
cdq
sti
aas
xchg
xchg
adc
rcl
pop
mov
cmps
fistp
dec
sub
pushf
nop
(bad)
popf
xor
adc
(bad)
int
aad
add
cmp
push
mov
aaa
inc
out
or
les
(bad)
jle
imul
rcl
ins
cmp
outs
sub
pop
sahf
jp
inc
test
call
stos
int3
(bad)
push
cmp
loopne
arpl
(bad)
xlat
jo
aam
jle
jae
sbb
in
mov
into
xchg
ret
les
dec
fwait
sbb
dec
jmp
xor
jno
add
and
and
daa
ja
aad
neg
lock
repz
inc
mov
sbb
jno
cmp
dec
jmp
xchg
lods
sbb
xor
push
cmp
fmul
sbb
popa
and
jae
pop
movs
icebp
adc
into
sbb
fs
push
call
mov
popf
mov
cld
loopne
retf
retf
sub
jno
gs
in
push
inc
stc
inc
sbb
or
jb
jge
sbb
les
cmc
cmp
dec
dec
test
push
xchg
sub
stos
mov
push
dec
sub
in
in
sbb
outs
ret
add
imul
in
pop
stos
pop
dec
stos
dec
in
pop
push
bound
pop
in
ins
scas
jbe
mov
retf
mov
mov
sub
mov
arpl
sbb
dec
fdivr
test
cmc
sub
(bad)
out
mov
mov
cwde
aad
xchg
lds
mov
stc
adc
rol
test
sbb
inc
jo
loop
ds
mov
adc
sbb
pop
sub
shl
jb
leave
xor
in
xchg
push
mov
adc
mov
dec
out
test
and
rcr
dec
sub
pop
cmp
mov
dec
and
and
cmp
rol
add
cld
jmp
jb
(bad)
jbe
mov
mov
aad
ins
stos
dec
(bad)
stc
outs
or
push
xlat
int
scas
cmp
aaa
js
cmp
lods
scas
jno
push
call
sahf
cli
dec
xor
sbb
icebp
pop
push
stos
(bad)
movs
mov
popa
push
push
fwait
prefetch
ror
in
in
jecxz
push
loope
repz
jo
push
or
retf
push
mov
pop
dec
cli
or
cmc
scas
jno
mov
(bad)
hlt
test
nop
xor
hlt
sbb
mov
fstp
sub
addr16
and
mov
sub
ss
ficom
mov
cmps
mov
xchg
ja
je
inc
dec
test
test
sbb
mov
sub
pop
call
je
ja
retf
cmp
mov
push
mov
sti
push
xchg
dec
les
and
pop
sbb
lahf
push
aam
ret
mov
jo
dec
or
ins
xor
sbb
add
mov
mov
fwait
jns
cld
cdq
xchg
sahf
cmp
xor
stos
or
fisttp
mul
std
scas
pop
mov
cwde
icebp
push
fdivr
hlt
fsub
dec
test
mov
stos
cmp
sub
dec
ds
mov
out
call
or
cld
test
gs
and
lahf
mov
cmp
sub
das
sub
pushf
mov
push
stc
and
lods
jno
add
shr
imul
sbb
mov
fldcw
cli
pop
adc
mov
jns
gs
jo
mov
stc
xchg
mov
cli
pop
inc
dec
sub
ins
mov
mov
retf
and
inc
aam
retf
data16
sbb
iret
into
vmmcall
push
(bad)
in
call
ins
jp
jns
dec
push
out
jl
mov
aad
sub
xchg
adc
fld
out
in
adc
(bad)
cld
ret
(bad)
or
cwde
jmp
repnz
clc
inc
loopne
pop
inc
pop
test
mov
imul
cmp
dec
arpl
(bad)
(bad)
sahf
cmp
pop
pusha
mov
pusha
push
mov
fst
or
lods
mov
cmp
sub
pop
ins
outs
jmp
mov
icebp
or
push
outs
xchg
aam
mov
es
cli
test
xchg
out
ds
aam
and
push
aam
imul
mov
pop
sbb
fs
push
addr16
retf
ror
sbb
mov
and
inc
or
cmps
imul
push
fist
push
int
mov
sbb
ins
mov
jp
das
(bad)
adc
inc
jmp
sbb
cmp
sub
or
jmp
stos
stos
adc
loopne
(bad)
xor
pop
xor
xchg
aaa
and
mov
ins
loopne
and
push
push
or
rcl
repz
adc
jg
or
mov
pop
xor
sbb
in
aam
fiadd
push
out
into
xchg
out
mov
or
(bad)
push
lock
or
fsubp
retf
mov
hlt
(bad)
shr
enter
push
and
call
cli
les
lds
retf
out
movs
sub
mov
test
cmp
mov
clc
sub
aam
loope
mov
cli
or
mov
mov
ror
xor
out
sbb
sub
jmp
adc
xchg
cmp
daa
mov
out
xchg
xchg
in
xor
sahf
movs
neg
dec
adc
test
pop
add
adc
mov
out
(bad)
mov
adc
inc
jp
(bad)
aam
mov
jb
test
sti
mov
inc
and
sub
or
sub
jg
fnstcw
ret
mov
rcr
push
sti
call
push
push
ret
mov
mov
inc
xor
or
or
outs
jbe
dec
mov
or
nop
lahf
inc
stos
xchg
mov
jmp
in
mov
(bad)
fadd
sbb
sbb
jl
cmp
add
in
dec
jne
inc
iret
mov
out
cdq
dec
mov
cmps
jns
stos
and
call
scas
rcl
movs
mov
mov
ins
hlt
(bad)
sub
push
addr16
mov
fnsave
popf
in
idiv
outs
dec
dec
aas
and
mov
fstp
jno
js
mov
adc
enter
adc
mov
ret
idiv
(bad)
xor
xchg
and
push
sub
clc
and
jo
dec
nop
and
cld
dec
fild
push
iret
inc
dec
jne
pop
or
mov
pop
out
sbb
lock
jle
ja
enter
xlat
inc
cmc
add
cdq
dec
and
xchg
push
mov
int
and
sbb
loop
mov
mov
xor
inc
adc
imul
stos
bound
fisttp
xchg
shr
xchg
fnstenv
lahf
jg
sbb
jp
(bad)
xor
out
inc
(bad)
lods
mov
ret
lock
inc
mov
mov
retf
fisubr
daa
or
push
pop
xchg
int
pushf
or
xchg
or
int
retf
pushf
movs
dec
sahf
cld
mov
out
in
xor
jb
mov
add
push
pop
xchg
mov
ins
and
push
fdiv
outs
jle
pop
dec
icebp
add
jmp
int
sar
inc
mov
inc
mov
and
xchg
mov
arpl
movs
sbb
mov
jmp
inc
mov
ja
cld
sbb
add
jnp
arpl
movs
lds
addr16
xchg
retf
gs
imul
sbb
or
iret
mov
push
inc
or
mov
popf
fistp
arpl
add
fsubr
push
inc
imul
add
jge
xchg
cmc
pop
fcom
pushf
fwait
add
pop
(bad)
lds
sbb
mov
dec
jns
xor
outs
dec
retf
jp
cdq
in
xlat
call
jge
bound
add
sub
push
test
stos
pop
mov
push
in
mov
and
and
xor
jae
movs
sub
add
xchg
add
push
ror
(bad)
fild
pop
lds
(bad)
dec
scas
mov
shl
add
sahf
and
inc
call
ss
sub
xchg
clc
mov
dec
daa
dec
sub
cmps
out
pop
sbb
rcr
pop
lea
and
in
sbb
pop
outs
(bad)
scas
pop
sbb
data16
xchg
mov
test
jne
or
mov
(bad)
idiv
and
in
jb
push
sub
and
mov
xlat
div
mov
and
jne
mov
ja
mov
movs
or
or
xlat
loop
cmp
dec
(bad)
sar
or
daa
mov
xchg
test
arpl
xchg
push
aas
cmp
jmp
mov
xchg
das
retf
add
add
cmps
(bad)
retf
push
jecxz
add
mov
pop
pop
sub
mov
xor
mov
fidivr
mov
aam
adc
cli
mov
mov
repnz
sbb
nop
xchg
mov
xlat
jne
into
stos
scas
fcom
mov
test
jnp
push
mov
int3
ret
les
ja
inc
call
adc
ins
je
xlat
retf
push
adc
outs
rol
jp
dec
fistp
stos
xlat
push
jns
lods
xchg
fs
cmp
adc
icebp
sar
fdivp
xor
sub
bound
xor
movs
push
test
aas
mov
inc
stos
adc
lea
xor
cmc
jno
sub
in
daa
mov
add
push
aad
adc
jbe
les
lods
imul
stos
jle
stos
push
call
fsubr
ja
int3
push
jecxz
or
adc
and
call
jne
xlat
jo
jmp
xor
or
pop
mov
ins
cmp
pop
cmp
retf
or
fadd
push
test
dec
cwde
mov
daa
xchg
mov
jo
dec
xor
(bad)
shl
nop
mov
pop
mov
sbb
and
fiadd
cmps
imul
sti
ror
popa
jg
into
int
pop
inc
mov
outs
mov
out
or
xchg
mov
mov
jle
push
repnz
fistp
outs
fld
pop
or
ror
pop
fdivr
or
leave
sub
xor
sbb
xor
(bad)
jne
repz
fisubr
ret
push
js
and
dec
cmp
dec
xchg
push
test
scas
cld
imul
ins
test
shl
dec
xchg
inc
mov
neg
inc
mov
sbb
mov
add
adc
in
pop
mov
movs
cmp
imul
ds
outs
shr
push
test
pop
inc
dec
pop
add
pop
lods
popa
dec
adc
call
sub
xchg
(bad)
push
or
pop
sub
sar
idiv
and
sub
aaa
dec
push
push
pushf
ja
mov
das
mov
neg
shl
or
test
dec
pop
push
push
cmps
sbb
mov
jmp
(bad)
and
retf
and
retf
mov
and
jb
cmp
add
mov
imul
push
mov
adc
sub
ret
bound
and
ins
inc
mov
outs
popa
cs
mov
leave
add
(bad)
into
dec
mov
or
sub
call
shl
inc
js
fucomip
and
ins
fist
sub
or
pusha
or
and
in
fst
in
retf
pushf
mov
pushf
inc
mov
adc
ins
fmul
or
mov
icebp
jno
mov
xchg
xor
mov
jo
mov
cmp
imul
push
xchg
cmp
jg
mov
sub
mov
leave
or
sub
dec
mov
pop
into
ret
pusha
mov
loopne
outs
inc
and
jb
in
enter
jne
div
mov
push
sbb
mov
mov
(bad)
push
or
fs
addr16
cwde
cmps
dec
push
cmps
(bad)
stc
sub
test
(bad)
test
out
pop
mov
adc
nop
fst
pop
pop
jo
dec
push
into
sub
adc
daa
mov
sub
ror
icebp
(bad)
and
mov
scas
retf
loopne
in
mov
xor
lods
movs
dec
(bad)
in
(bad)
cwde
clc
dec
xor
enter
push
add
in
sbb
xchg
aam
pushf
and
or
dec
sbb
dec
shl
cmp
cwde
dec
out
test
and
sar
test
aad
out
mov
dec
dec
xchg
arpl
and
retf
outs
cmp
and
jg
retf
sub
cmc
mov
xor
sti
dec
arpl
mov
adc
fild
ins
les
mov
mov
aaa
cmp
leave
imul
jmp
xlat
jmp
dec
sbb
adc
cmp
adc
(bad)
call
pop
jnp
ds
imul
jne
cwde
sahf
aaa
int3
cli
xchg
jecxz
dec
mov
loopne
jg
adc
push
push
pop
bound
inc
cmc
call
xchg
mov
mov
pushf
xchg
dec
xor
cmps
xchg
shl
and
in
cs
les
inc
jno
inc
adc
sub
xchg
adc
clc
cmc
jp
cmc
cmps
inc
adc
sbb
cli
add
mov
call
xchg
(bad)
sahf
out
adc
cmp
popa
inc
mov
pop
cmp
stc
cwde
rcl
cmc
loope
xor
cld
leave
retf
fstp
fild
mov
scas
mov
sub
stos
pop
or
stc
cld
and
mov
inc
cmp
mov
inc
shl
mov
cdq
ss
mov
dec
ss
loope
cmp
add
neg
lods
imul
hlt
jnp
jge
lahf
pop
jne
aaa
xchg
jb
(bad)
mov
xchg
jecxz
or
pop
adc
pop
fcom
xor
pop
ins
cmp
aam
lea
ins
ret
std
jl
out
aad
mov
cdq
aam
and
hlt
adc
lds
and
and
aas
dec
pop
in
gs
fist
push
lock
pop
(bad)
add
clc
imul
sub
call
xchg
movs
mov
xor
daa
hlt
lds
mov
imul
mov
cs
pop
or
pop
pop
xor
pop
daa
cli
pmulhw
add
call
and
pop
cmp
xchg
mov
mov
jno
retf
or
into
or
shl
mov
dec
sub
repnz
into
mov
sub
ret
inc
cmps
or
and
inc
nop
mov
jmp
jbe
call
mov
or
pop
dec
call
mov
mov
cmp
jecxz
imul
and
xor
inc
mov
push
inc
xor
jl
jl
add
repz
(bad)
mov
sahf
fs
(bad)
ss
push
push
push
xchg
jmp
mov
xor
retf
stos
pop
cld
das
test
in
hlt
xchg
std
sbb
dec
out
mov
data16
xor
inc
int
add
push
outs
mov
sbb
mov
dec
or
cmp
cld
push
test
cmp
sbb
rol
(bad)
(bad)
sub
pop
out
and
outs
push
mov
fwait
inc
nop
(bad)
cmp
ret
jno
aas
lods
mov
loopne
jns
jge
mov
jne
arpl
adc
out
xor
mov
popf
es
enter
or
(bad)
icebp
in
and
mov
cmc
loope
fld
xchg
or
cmps
xchg
imul
out
fisub
shl
xlat
sub
rol
popa
paddq
mov
dec
jmp
dec
repnz
aad
mov
mov
pop
jmp
mov
adc
iret
addr16
jp
pop
cmp
jl
mov
loope
mov
sub
in
xchg
adc
movs
pop
mov
out
xor
lahf
mov
pop
imul
inc
icebp
imul
out
xchg
xchg
movs
jl
(bad)
fnstsw
int3
imul
scas
dec
pusha
cld
jp
int3
out
pop
or
shl
sar
pop
in
and
xor
cmp
jl
loope
jne
adc
push
ficom
cmc
(bad)
je
(bad)
ja
rcl
ds
test
idiv
add
out
lea
(bad)
mov
inc
adc
call
sbb
aaa
int3
inc
loope
fidiv
mov
push
jb
ret
fidivr
push
outs
push
cmc
xor
nop
dec
out
dec
fnstenv
ja
aam
push
sar
cmp
dec
fnstsw
inc
mov
movs
test
dec
jb
cmp
mov
push
test
pop
movs
adc
enter
inc
push
mov
cmp
shl
(bad)
mov
addr16
stc
xchg
inc
jl
adc
add
scas
ror
aaa
clc
pop
sbb
inc
adc
in
sbb
pop
jno
dec
nop
test
jo
mov
rol
sub
mov
and
mov
and
pop
fisub
or
jg
das
(bad)
movs
push
adc
push
leave
out
sbb
std
jmp
std
loope
cmp
xor
icebp
mov
clc
push
lods
push
das
popf
jmp
jnp
cmp
pop
jo
lds
in
push
dec
inc
pop
dec
push
ja
push
inc
jnp
sbb
xor
and
inc
aas
ins
ds
(bad)
sub
ror
push
xchg
imul
sub
arpl
mov
dec
mov
fwait
popf
sub
xor
pop
sub
sub
shr
mov
dec
jno
sahf
retf
pop
mov
xchg
arpl
dec
jmp
test
mov
out
popa
mov
mov
push
fwait
or
leave
fld
xchg
imul
out
push
xor
fild
pop
mov
addr16
dec
jno
add
nop
pop
or
arpl
sbb
mov
add
jae
xchg
mov
retf
test
clc
lods
and
and
loope
push
mov
fadd
pop
cld
jle
push
add
jg
sub
popa
fldcw
add
jl
xor
inc
scas
cli
push
inc
ror
jmp
push
sub
sub
out
mov
cmp
mov
bound
jmp
sbb
int3
mov
fiadd
cmp
jno
je
add
cmps
ja
push
dec
jl
aaa
pop
cwde
push
jmp
int3
(bad)
pop
sbb
mov
push
sub
in
xchg
xchg
xabort
mov
mov
pop
stos
mov
add
sub
add
xlat
jmp
test
mov
add
sub
(bad)
push
clc
xchg
int3
add
jmp
adc
xchg
add
mov
jmp
in
retf
ja
mov
cmps
dec
pop
or
cmp
aas
xchg
xchg
in
pop
mov
jnp
and
dec
dec
int3
mov
add
jbe
aas
mov
pop
mov
inc
(bad)
cli
adc
ja
and
jbe
mov
mov
cmp
loope
push
in
xor
lahf
push
mov
ins
fwait
mov
imul
enter
scas
fs
leave
mov
je
fisub
int
add
nop
fidiv
or
sti
test
(bad)
imul
adc
fisttp
retf
shr
sar
jnp
push
push
cmps
xor
das
int
and
(bad)
iret
add
mov
push
call
fimul
pop
inc
push
pop
adc
mov
shr
and
call
mov
mov
add
lea
ds
imul
and
dec
nop
xor
dec
inc
les
jecxz
mov
and
adc
or
jne
push
and
push
into
test
or
inc
dec
sbb
or
fsubr
mov
push
pop
cli
nop
aas
fdiv
jecxz
cmp
mov
lea
arpl
jp
sub
daa
push
add
dec
inc
add
and
(bad)
stos
cmp
aaa
loop
inc
jno
mov
in
xor
bswap
call
cli
and
int3
mov
push
cmp
rcr
js
jmp
cli
scas
sahf
sbb
dec
and
pop
aaa
push
mov
dec
fwait
arpl
aad
ficom
bound
lahf
test
adc
lahf
mov
out
movs
stos
pushf
cmp
fidiv
inc
pusha
jl
add
dec
data16
call
jb
aam
pop
xlat
inc
dec
xchg
dec
mov
in
(bad)
mov
inc
mov
dec
ins
xor
inc
xor
xor
sbb
cld
push
repnz
daa
(bad)
mov
jmp
aad
loop
pop
mov
inc
cmp
jmp
ror
out
(bad)
mov
cli
dec
inc
push
rcl
icebp
dec
or
or
add
mov
push
std
xchg
je
xor
data16
xor
fsubr
nop
adc
std
cmp
sbb
leave
cmc
test
mov
pop
push
fidivr
and
inc
sbb
test
mov
add
in
push
pop
(bad)
or
xchg
mov
(bad)
mov
or
xlat
movs
xchg
cmp
lea
mov
jo
jns
mov
adc
retf
mov
mov
and
xor
cld
pop
push
or
ret
test
mov
xor
push
popf
ja
push
xor
xchg
inc
cmp
adc
pushf
cmp
xchg
or
ins
(bad)
xlat
dec
test
sti
into
mov
cmps
test
or
and
mov
and
mov
mov
call
repnz
xchg
fwait
push
and
hlt
jno
mov
push
ins
mov
mov
mov
cmp
ins
cmc
xor
arpl
ret
fwait
loopne
xlat
in
mov
dec
(bad)
js
adc
js
dec
div
xchg
and
in
test
xchg
inc
aam
cli
es
jge
pop
jle
sbb
mov
jo
adc
jne
ss
(bad)
xor
xor
xor
push
mov
push
push
jns
mov
inc
stos
and
mov
and
ret
outs
(bad)
fild
cmc
cmc
push
ror
sbb
sbb
add
pop
call
sub
iret
jne
mov
mov
lods
fstp
jge
je
hlt
enter
outs
inc
jecxz
retf
les
cwde
and
imul
aaa
into
add
sbb
mov
sti
jge
or
out
xchg
mov
lahf
shr
sbb
mov
imul
dec
or
retf
arpl
aad
ret
je
xor
mov
cld
stc
out
shl
scas
dec
out
pusha
inc
or
cld
sub
daa
popf
stc
ds
mov
sbb
iret
out
movs
xor
call
(bad)
loop
lods
inc
xchg
icebp
lock
mov
cmp
ins
add
jne
sub
je
and
sbb
rcr
jmp
push
inc
mov
std
dec
leave
jae
aam
pop
xor
scas
mov
pop
push
mov
int
jl
out
(bad)
or
pop
rcl
xor
fprem
mov
fcomp
pusha
xor
mov
adc
test
icebp
icebp
jg
movs
mov
shl
js
inc
pop
sar
xchg
dec
push
aaa
not
dec
sbb
mul
inc
push
lahf
ret
pop
dec
or
mov
cmp
or
gs
cmp
imul
pusha
sub
sub
xchg
pmulhuw
mov
xor
(bad)
xor
stos
or
rcr
enter
add
mov
push
inc
loopne
xor
in
dec
popa
pop
dec
idiv
bound
adc
jnp
out
cmp
loop
movs
fst
hlt
sti
push
mov
or
mov
push
add
adc
xor
xor
ja
lock
jl
cmp
cmps
lds
cmovno
daa
and
push
js
jo
xor
ret
cmc
test
xor
adc
add
cmps
or
imul
dec
shr
jb
jbe
das
cmps
test
test
cmp
sub
ds
fldcw
mov
adc
mov
add
xor
mov
cmps
rcl
pop
add
jl
xor
jb
rcr
fiadd
dec
mov
mov
xor
das
aas
ret
jmp
dec
scas
movaps
adc
push
popf
fwait
loop
fdiv
dec
xchg
mov
and
dec
mov
pop
inc
mov
dec
cmp
movs
sahf
xchg
fistp
call
push
cli
cdq
data16
lahf
ins
xchg
mov
arpl
xor
sbb
xchg
stos
adc
cmp
sub
or
xchg
or
outs
mov
push
popa
scas
(bad)
add
push
xor
aas
jbe
mov
ret
pop
scas
ficomp
xchg
push
sub
xchg
dec
cdq
xchg
imul
aaa
and
dec
and
movs
or
fs
jo
test
test
(bad)
les
sbb
push
retf
and
jnp
aaa
sub
pop
mov
mov
pop
inc
sbb
add
pop
arpl
xor
test
or
jg
sti
push
or
sbb
in
xor
mov
stos
pop
mov
es
pop
arpl
fs
sub
mov
ror
mov
ror
push
xchg
xor
cmp
(bad)
fld
in
test
push
sub
and
cdq
dec
pop
jno
sbb
in
add
scas
mov
pop
inc
(bad)
iret
push
lock
fidiv
arpl
sub
xchg
push
jne
or
leave
sbb
rcl
out
fld
add
sbb
add
mov
in
xor
jecxz
lds
cmp
xor
iret
push
xchg
(bad)
and
aad
inc
(bad)
fdiv
dec
enter
xacquire
push
lods
xchg
test
loopne
je
cmp
add
rcl
jns
bound
jecxz
mov
scas
lock
imul
mov
dec
stos
dec
int3
xchg
push
popf
jle
add
jg
aas
mov
and
jg
mov
in
enter
repz
stos
push
icebp
mov
push
jno
jecxz
cmp
ret
scas
mov
in
punpckhbw
mov
rcl
cmp
cdq
sbb
ret
pop
jecxz
mov
push
mov
inc
stos
adc
rcr
dec
xchg
pop
imul
add
pusha
jp
sbb
lds
cmp
mov
push
xchg
xor
sbb
stos
arpl
fcmovnu
sub
or
jns
ja
pop
imul
out
cmps
pusha
dec
aad
rol
inc
add
inc
mov
jl
jae
jno
adc
pushf
adc
xchg
and
inc
inc
xchg
jle
xor
mov
push
sbb
sub
retf
cmc
stos
mov
mov
or
dec
add
es
mov
or
scas
mul
sbb
cmps
ds
aaa
mov
outs
repnz
stc
mov
test
outs
imul
lahf
push
fild
xchg
xor
or
push
test
outs
in
pop
mov
in
lahf
enter
xchg
ins
push
adc
inc
inc
sbb
iret
cwde
les
push
test
push
mov
add
lock
pop
jp
sar
push
in
xchg
dec
adc
inc
add
inc
fnstenv
jbe
lahf
and
cs
outs
inc
rcl
not
push
fstp
mov
retf
mov
scas
adc
xor
pop
pop
test
jmp
mov
(bad)
add
sub
fild
push
push
dec
rol
inc
xor
loop
lds
mov
add
xor
mov
sbb
fmul
fistp
or
and
inc
lea
inc
pop
(bad)
jns
leave
mov
dec
jg
out
mov
cmp
cmps
adc
(bad)
inc
mov
add
cmps
out
loopne
enter
clc
cmp
jmp
call
jmp
inc
cmp
jmp
nop
fcmovu
xor
push
mov
dec
cmps
std
pop
sbb
in
jl
mov
ds
ins
out
xor
retf
xchg
add
sahf
push
jno
hlt
sti
jo
cmp
or
jno
mov
sub
xchg
lods
sbb
jo
cwde
js
les
mov
rcl
loope
or
adc
stos
xchg
mov
das
xor
mov
daa
sti
pop
sub
push
pop
(bad)
pusha
movs
mov
sbb
out
and
push
ret
jg
adc
add
cmp
or
xchg
dec
test
jbe
pop
pop
sbb
mov
daa
add
out
nop
xchg
mov
push
ins
and
adc
jns
jmp
test
inc
or
sbb
sahf
cld
jmp
rcr
jecxz
cmp
cmp
rcl
cmp
jb
pop
pop
cmp
xchg
fstp
call
je
mov
jmp
xchg
inc
(bad)
jmp
lds
aad
push
pop
ss
inc
adc
pop
xor
loopne
pop
mov
pop
test
rol
dec
(bad)
cmc
sbb
xor
mov
mov
(bad)
mov
stos
clc
mov
(bad)
shl
out
jnp
fidiv
data16
in
int3
enter
lds
or
or
jge
test
or
jg
outs
sub
inc
aaa
jnp
mov
adc
cmp
movs
int3
fstp
mov
pop
repnz
addr16
push
fwait
in
cmp
call
(bad)
push
shr
cmp
jle
test
pop
pop
adc
sbb
mov
adc
outs
dec
xor
call
jg
xchg
and
pusha
lods
add
push
aam
clc
cmps
fucomip
ds
fiadd
fdiv
in
add
xchg
inc
js
sub
ret
sti
fadd
mov
lods
test
pop
jp
loopne
mov
inc
aad
ss
test
stos
loop
cmp
stos
movnti
mov
push
and
lock
xor
stos
scas
sub
call
mov
dec
sbb
popf
movs
sti
in
xchg
or
nop
jne
sub
inc
addr16
nop
cmp
stc
sbb
lods
mov
dec
les
mov
idiv
(bad)
push
xchg
mov
xor
rol
stc
jmp
mov
push
ds
fwait
xor
mov
cli
push
int
sub
xor
mov
pop
mov
pop
push
cli
daa
pusha
lea
vpunpckhdq
sbb
cmps
fld
push
push
mov
jp
xlat
ficom
and
mov
cmps
movs
add
mov
out
icebp
or
in
pop
test
or
jg
fdivr
test
or
jle
adc
add
aam
dec
sub
and
and
jmp
add
rcr
bound
mov
push
and
mul
sbb
pop
into
test
dec
aad
lods
jae
add
inc
cmps
fisubr
mov
jno
add
ins
aas
jg
sbb
popf
push
imul
movs
arpl
add
add
add
xchg
sti
fwait
int
sub
int3
xchg
loopne
popf
jmp
or
stc
int3
mov
outs
inc
or
pushf
cmps
mov
(bad)
mov
and
ja
xor
xchg
or
or
pop
push
xor
xor
dec
push
int
sub
pop
movs
jmp
jp
xchg
jg
adc
lods
cmp
jno
rcl
cld
data16
(bad)
jg
cmps
jno
or
loope
mov
pop
mov
mov
fbld
xor
(bad)
xchg
adc
lods
out
xchg
or
(bad)
cs
xlat
aad
retf
adc
mov
stos
mov
fstp
and
sti
ret
aaa
mov
jp
sahf
pop
pushf
enter
add
push
call
mov
stos
fsubr
sbb
pusha
arpl
push
jle
ja
retf
pop
cli
int
cmp
mov
pusha
scas
xor
mov
xor
sub
cmps
lock
es
and
lods
and
enter
inc
or
bound
lods
setg
add
mov
(bad)
pusha
(bad)
fstp
arpl
pushf
cmps
xchg
adc
mov
xor
movs
mov
adc
or
or
cmp
push
sbb
inc
xor
adc
int
and
ficom
mov
sub
sub
and
iret
jae
push
mov
fiadd
mov
inc
xor
(bad)
mov
rdmsr
imul
stos
jns
add
xchg
mov
ins
or
jmp
mov
(bad)
adc
daa
mov
cmp
test
fwait
xor
push
xlat
mov
cld
daa
pusha
pop
or
ret
dec
das
mov
mov
inc
iret
or
fild
rcr
adc
adc
xchg
adc
sub
retf
push
lock
hlt
inc
jnp
jne
into
pop
clc
xchg
es
mov
push
bound
xchg
std
call
xor
add
das
xor
fidivr
inc
arpl
test
xchg
repz
xchg
and
xchg
inc
xchg
lea
cmp
jno
cli
icebp
cmc
add
in
dec
xchg
add
jne
adc
xchg
jae
in
lods
push
mov
hlt
sbb
xlat
dec
or
retf
cmps
push
xchg
xchg
aam
pushf
and
inc
outs
and
inc
aad
or
add
mov
sub
dec
inc
push
jp
das
sub
push
xchg
push
or
mov
inc
or
push
mov
ins
dec
icebp
and
dec
and
mov
xor
mov
fmul
cld
std
lds
mov
(bad)
jno
push
imul
outs
mov
dec
pop
cmp
xchg
push
xor
adc
je
icebp
cmp
int3
dec
dec
scas
sbb
js
repz
shr
idiv
xchg
imul
out
mov
cmp
add
fcmovbe
sub
cwde
imul
scas
in
mov
fs
cmp
inc
movs
repnz
push
mul
xor
xor
mov
inc
fist
outs
sbb
icebp
xchg
punpckhdq
jg
outs
or
push
jmp
aas
test
xlat
aad
out
or
lahf
js
inc
pop
push
xor
pop
push
loope
jmp
rcl
push
bound
pop
ds
std
sti
das
jnp
out
test
sti
ret
mov
movs
push
sbb
lods
addr16
pop
jno
cs
lahf
test
push
cli
mov
in
xor
mov
retf
jge
cmp
push
and
lds
dec
jno
cmp
call
cmp
jae
(bad)
fmul
jbe
pushf
dec
lods
jle
mov
cs
mov
fwait
ins
add
add
ret
je
fcomi
fcom
or
call
dec
jne
test
daa
(bad)
lea
je
(bad)
xchg
pop
test
mov
ret
test
out
fistp
sbb
and
xor
push
es
fdivr
rcl
jecxz
push
sub
mov
scas
inc
mov
leave
out
push
daa
cld
jl
or
add
and
sub
rcr
sub
add
mov
iret
repnz
retf
aad
mov
(bad)
daa
jns
(bad)
idiv
fsubr
nop
out
jp
cld
or
push
in
push
pop
stos
sbb
fst
pop
adc
pop
push
xor
add
or
sub
pop
icebp
sbb
mov
les
lea
ins
addr16
jns
and
mov
add
pop
jle
sbb
mov
mov
mov
cmp
dec
aad
gs
psrlq
sti
sbb
stos
and
add
lea
and
mov
lods
mov
movs
jmp
adc
push
dec
fnstsw
cwde
mov
push
cmp
ds
loope
dec
jno
adc
mov
dec
int3
pop
jl
mov
pop
(bad)
and
jle
imul
or
lock
mov
imul
(bad)
jae
sub
repz
add
sahf
out
mov
push
cmc
fwait
icebp
mov
push
mov
pop
pusha
xor
aad
jecxz
ins
adc
cmps
sub
dec
(bad)
pop
cdq
xor
sbb
pop
cld
fs
xor
jno
xchg
stos
fnstenv
movs
adc
add
mov
push
sub
stos
pop
int
push
loope
and
mov
or
mov
dec
into
mov
test
jo
popf
mov
std
mov
mov
in
int3
mov
aaa
xchg
or
daa
adc
scas
shr
retf
idiv
xor
and
mov
fild
dec
popa
add
xlat
xor
mov
sbb
dec
dec
(bad)
mov
push
sti
jmp
retf
rcr
(bad)
lock
adc
jecxz
dec
and
cmp
mov
push
movs
(bad)
jb
retf
dec
sahf
or
les
dec
lds
int3
aas
mov
push
adc
scas
loop
mov
cmp
dec
cmps
mov
push
int3
cmc
adc
test
xchg
or
daa
mov
adc
(bad)
jmp
push
mov
mov
jge
cmp
jle
fcom
mov
cs
xchg
xor
sbb
jge
cmps
xor
pop
es
push
xchg
in
adc
sahf
cli
aad
push
test
jmp
int
add
cs
sbb
xor
fsub
aas
mov
sub
and
addr16
bound
fs
int3
imul
mov
(bad)
cmp
scas
push
adc
fsubr
repnz
mov
outs
ss
and
and
icebp
push
jbe
outs
xchg
dec
xchg
icebp
xchg
mov
mov
popf
dec
stc
jns
ss
jo
push
mov
mov
mov
jo
xchg
in
sbb
push
or
xor
lahf
xlat
mov
and
jne
cwde
loop
sti
xchg
and
sbb
inc
mov
push
fcmovne
iret
push
gs
mov
outs
xor
jb
xor
sar
loop
fwait
xchg
mov
call
sub
aas
xchg
jmp
and
aaa
enter
in
mov
sbb
push
inc
xor
and
mov
mov
adc
xor
retf
leave
or
pop
and
xbegin
adc
retf
xchg
scas
das
dec
test
int
stc
dec
jmp
popf
jge
sub
mov
dec
mov
shl
cmps
sbb
adc
scas
jecxz
cmp
cmps
xchg
push
dec
pop
adc
out
push
fistp
adc
jne
adc
xor
xor
push
out
and
stos
pop
and
dec
(bad)
leave
sbb
das
or
clc
sbb
xchg
in
scas
icebp
mov
push
inc
in
mov
mov
mov
xor
push
cmp
cwd
outs
movs
rcr
mov
push
retf
movs
call
ja
sub
nop
neg
fimul
out
sub
dec
mov
retf
jp
aas
xchg
cmp
pop
xchg
das
mov
xchg
call
mov
jns
lods
jb
shl
fucomi
(bad)
mov
inc
iret
mov
mov
bound
mov
outs
mov
and
nop
test
and
jnp
mov
xor
ds
ins
in
and
xor
push
cmps
lock
into
jno
push
loope
pop
pop
rol
push
xchg
inc
mov
xchg
loope
mov
test
or
sub
sbb
xchg
aad
jne
fdivr
pop
ror
mov
add
mov
cs
sbb
jmp
push
lahf
dec
push
pop
ret
arpl
fiadd
sbb
mov
dec
movs
movups
xor
cmp
xchg
xor
jno
xor
stc
mov
std
hlt
icebp
in
icebp
out
xor
cmp
pop
cmp
sub
xchg
repnz
into
call
pop
ja
outs
jne
adc
stc
and
jl
jmp
dec
fbstp
out
loop
push
jo
scas
fxam
sbb
add
cmp
sub
mov
inc
cmc
sbb
dec
cmp
clc
lods
(bad)
mov
rol
and
imul
and
xor
cdq
xchg
add
pop
call
mov
in
cmps
cwde
mov
xchg
xor
push
and
bnd
movs
pop
out
mov
xchg
adc
fcmovnbe
xchg
jmp
sbb
xor
push
sub
adc
cmp
mov
adc
push
and
cmp
fld
ss
xor
cmp
lock
pop
dec
xchg
jnp
lahf
xor
xchg
pop
add
push
jbe
les
sbb
cmps
push
xchg
sbb
bnd
pop
pop
aad
inc
xlat
jb
xor
int
loope
cmp
push
mov
outs
or
lahf
sub
mov
popa
mov
shl
or
ins
popa
fild
mov
lea
xor
xor
mov
mov
ins
mov
ds
int
and
xor
or
jns
jl
push
jg
push
mov
(bad)
sub
rcr
mov
in
sbb
jbe
cs
cmp
popf
dec
fild
jmp
jge
dec
cs
leave
arpl
cmp
pushf
ins
mov
lahf
shl
pop
push
mul
repz
cmp
cmps
mov
ss
and
outs
rol
sbb
adc
push
mov
dec
mov
addr16
xchg
mov
les
push
pop
cld
scas
iret
fcmovne
lods
fdivr
mov
aad
inc
pop
fdivr
xor
fisttp
mov
add
or
mov
cmps
arpl
pop
jnp
mov
and
mov
stc
and
addr16
popf
nop
nop
pop
jb
push
fistp
outs
iret
ja
outs
cmp
addr16
lods
gs
rol
dec
test
in
gs
push
push
lock
jne
ds
(bad)
and
cwde
sar
push
push
or
mov
dec
jl
jp
test
dec
imul
or
aam
mov
loope
jae
xchg
inc
xchg
jmp
pop
adc
pop
imul
jb
in
ror
movs
sbb
mov
fs
test
pop
repz
rol
xor
aaa
push
fwait
cs
in
mov
scas
push
adc
div
les
jo
and
inc
mov
call
fsubr
push
stos
cmp
int
mov
sub
jo
push
add
ja
int3
cwde
or
pop
mov
adc
cwde
adc
mov
or
sti
xchg
es
push
adc
cmp
stos
into
xchg
push
pushf
push
out
push
bound
mov
push
or
arpl
fistp
sbb
sbb
sahf
das
push
push
outs
mov
jle
dec
daa
fmul
gs
dec
lods
xchg
jnp
dec
mov
mov
mov
sub
aad
ds
cs
mov
adc
std
lea
and
(bad)
fs
xchg
sub
jmp
inc
call
mov
out
mov
or
inc
jo
rcl
push
sbb
dec
pushf
(bad)
inc
les
mov
stc
or
cli
cmp
lock
je
inc
push
movs
dec
out
sbb
and
jp
push
mov
fucom
enter
bound
xchg
pop
mov
fsubr
in
jle
(bad)
es
mov
add
push
and
test
ret
mov
ret
pop
and
loopne
enter
(bad)
jb
arpl
test
(bad)
or
jb
add
fs
(bad)
lods
pop
ins
mov
xor
jae
ja
jmp
mov
in
adc
or
mov
lods
mov
cmp
pop
retf
cmp
addr16
aas
pushf
sbb
cmps
xchg
and
pop
adc
and
imul
xor
lea
call
push
jbe
mov
loopne
sbb
xor
shl
push
(bad)
jge
add
xchg
sbb
pop
mov
test
sbb
push
dec
test
in
jmp
sub
cmps
ja
inc
pop
push
or
adc
xor
push
adc
pop
or
xor
push
xor
(bad)
xchg
into
loop
mov
adc
jnp
je
inc
push
cmp
mov
mov
sbb
cmp
or
or
dec
loope
mov
mov
out
in
fstp
or
imul
and
and
out
sub
pop
dec
clc
and
shl
ins
add
mov
(bad)
sbb
push
and
lods
cmp
add
movs
pusha
sbb
cmps
pop
icebp
aaa
add
mov
mov
(bad)
fs
fnstsw
xor
addr16
mov
call
shl
std
inc
dec
push
(bad)
out
(bad)
pop
jle
jno
add
sbb
adc
mov
xchg
lock
scas
aaa
aam
add
jne
lahf
clc
dec
scas
test
popf
inc
cli
or
push
xor
add
lods
repz
pop
hlt
aas
mov
arpl
popf
pop
push
push
inc
lds
in
scas
and
rcr
lahf
cmc
sub
fldcw
test
and
add
push
mov
scas
fiadd
xlat
mov
loopne
retf
xor
xchg
xor
add
push
push
mov
retf
or
inc
iret
enter
adc
mov
pop
sahf
enter
sub
(bad)
sahf
inc
leave
push
test
dec
aaa
or
jae
dec
jmp
sub
cmps
cmp
stc
jb
ja
dec
ins
mov
sub
pusha
stos
push
adc
sbb
add
mov
cmp
cs
pop
xchg
lods
cwde
mov
dec
pextrw
pop
jle
ja
stc
test
jae
push
xchg
xor
xchg
mov
xor
add
adc
cmp
sbb
daa
test
popf
adc
jle
shr
and
mov
ss
ret
and
pop
aas
pop
mov
lds
xchg
test
mov
ret
sbb
push
fsub
mov
rcl
fcom
dec
xor
cmps
add
dec
sub
cmps
div
mov
mov
fcomp
outs
adc
sub
mov
(bad)
mov
int
xor
ss
pop
scas
out
push
add
xor
add
mov
sti
push
cmc
(bad)
sub
icebp
(bad)
cmp
jg
cmp
dec
add
loope
jge
inc
sub
pop
out
neg
mov
shl
and
pop
cmp
jp
ficom
call
das
push
sub
add
ficom
shr
mov
addr16
cmps
test
int3
mov
xchg
cli
jle
sbb
mov
outs
or
inc
ins
adc
inc
out
ins
loopne
xor
les
cmp
mov
xor
mov
add
inc
lods
icebp
xchg
inc
adc
pop
cmp
xchg
fadd
ror
jns
mov
sbb
sbb
fstp
dec
scas
push
adc
cld
dec
mov
nop
(bad)
mov
fild
push
and
push
mov
jb
mov
sbb
fdiv
(bad)
fsubr
sub
retf
clc
leave
rol
fisub
pop
jmp
adc
mov
ror
pop
xor
adc
inc
shl
cmc
cmp
ret
mov
scas
in
shl
mov
or
mov
mov
ret
push
mov
loope
sbb
cmc
dec
sub
dec
fbstp
mov
add
clc
jp
mov
mov
xchg
mov
stos
xor
dec
out
xlat
push
mov
cmp
dec
mov
pop
xchg
ja
ds
ss
mov
fsub
push
and
loopne
dec
popa
pop
sub
xor
jle
stos
jns
dec
sbb
sbb
pop
loopne
(bad)
aaa
fcmovne
int3
pop
mov
mov
jns
push
mov
in
sbb
dec
inc
aas
stos
mov
push
lods
adc
je
mov
mov
jno
stos
jnp
clc
fcom
pushf
sbb
popf
pop
popf
cmp
loope
loope
sbb
call
and
pop
jne
fld
(bad)
jp
stos
dec
jmp
pop
imul
mov
fild
stos
mov
xchg
ficom
push
add
in
adc
and
outs
rol
outs
jnp
xchg
mov
xor
cmp
cmp
cli
(bad)
in
ror
icebp
mov
jp
and
cmps
shr
retf
mov
(bad)
push
pop
jle
(bad)
int3
add
rol
dec
std
add
lods
inc
mov
cmps
out
dec
mov
cmp
or
mov
xor
popa
dec
and
push
mov
or
pop
jno
(bad)
lea
sbb
mov
aad
mov
test
dec
or
out
leave
stos
cld
lea
sub
xor
push
pop
int3
dec
or
adc
adc
add
sbb
pop
bound
xchg
add
xor
mov
icebp
ror
jnp
sub
sbb
jnp
mov
adc
out
sub
jb
jmp
loopne
dec
ret
cmps
pop
jl
cdq
(bad)
mov
or
sub
inc
cmp
icebp
xor
adc
xchg
push
or
inc
or
rol
sbb
xchg
jns
fcomp
push
mov
sbb
inc
adc
ja
lods
ja
pop
icebp
mov
test
add
clc
mov
in
popf
sbb
loopne
loope
sti
adc
addr16
cmps
xchg
fld
mov
sub
cmp
fsubr
(bad)
xlat
xor
std
daa
pop
and
adc
fisttp
es
xor
daa
pop
cmp
jge
sub
xchg
push
add
or
iret
data16
pop
int3
sub
mov
addr16
dec
add
adc
cmp
sti
rol
inc
jbe
ja
pop
push
jmp
adc
cli
test
xor
jo
je
int
cmp
shl
mov
xchg
pusha
(bad)
dec
test
dec
out
sub
mov
xlat
mov
mov
outs
sbb
xchg
in
inc
ins
repnz
cmp
scas
dec
shl
inc
dec
push
nop
pushf
inc
xor
jl
cmps
push
ins
jmp
ss
jp
xsaveopt
pop
mov
test
div
pop
and
push
cmp
push
call
sub
dec
add
add
jl
mov
ror
jae
lds
popa
sti
ds
cmps
imul
xchg
loopne
stc
out
sub
push
push
aam
pop
push
(bad)
or
and
ins
mov
repnz
outs
sub
movs
and
leave
and
fisub
jmp
bsr
and
cld
or
pop
jecxz
enter
adc
dec
and
into
fmul
shr
sub
int3
jmp
or
push
ret
xchg
jne
push
(bad)
cli
sbb
xchg
pop
popf
lea
jg
jnp
cmp
mov
push
jb
mov
rcl
push
jb
xchg
xchg
into
jae
and
inc
add
nop
ror
xchg
arpl
pushf
sbb
aaa
push
xchg
popf
mov
dec
mov
data16
test
push
js
dec
push
and
add
gs
fwait
scas
dec
pop
(bad)
pop
mov
sbb
ret
imul
pmuludq
stos
das
popa
out
inc
add
dec
jbe
test
jmp
shr
pop
pop
sub
hlt
neg
(bad)
sbb
mov
push
test
aad
or
clc
pop
mov
lods
lods
push
stos
add
popa
sahf
dec
xchg
lea
xor
inc
add
push
es
jno
push
dec
lods
mov
inc
aam
xor
jno
jbe
in
lods
inc
jns
adc
jae
ret
add
out
ss
leave
popf
cmp
addr16
das
add
adc
mov
cmps
sub
xor
mov
xor
dec
lock
xor
mov
sahf
dec
mov
test
rcl
jp
repz
mov
jecxz
fisubr
pop
push
mov
mov
pusha
xchg
je
fdiv
in
repnz
or
mov
adc
pop
sub
jne
or
mov
aas
in
inc
aas
dec
sbb
leave
out
cmps
je
iret
or
cmc
jl
jmp
dec
icebp
dec
xor
add
push
enter
ins
add
sbb
data16
inc
or
xchg
loope
jge
aad
adc
sbb
mov
repnz
pop
and
ret
jp
nop
daa
xor
pushf
loop
dec
dec
(bad)
int
fwait
or
shl
push
daa
jmp
sub
or
xchg
xor
aaa
sub
(bad)
cmps
or
lock
cmp
add
pop
cmp
cmp
sub
fld
push
stos
jg
push
into
mov
mov
adc
sti
repnz
into
cmp
or
xor
pop
call
cmps
pextrw
imul
lock
or
xor
push
cmps
mov
out
adc
mov
mov
lea
ins
jl
mov
loop
or
push
inc
mov
(bad)
mov
enter
jle
retf
or
xchg
jo
xchg
gs
adc
call
pop
movs
rol
cmps
mov
xchg
xchg
sahf
xchg
mov
mov
cmp
shr
push
nop
sbb
mov
push
addr16
xor
fwait
adc
mov
and
mov
ret
push
outs
add
inc
loop
sbb
cmp
repz
and
push
sub
dec
sbb
retf
push
repnz
sti
dec
ins
jmp
jle
ret
fs
cmp
shr
dec
push
mov
loopne
jecxz
jl
retf
push
lea
and
xchg
inc
popf
shr
inc
dec
adc
shl
rol
popf
ins
dec
sbb
sub
rcl
retf
or
cli
dec
xchg
push
das
arpl
stos
fdiv
mov
(bad)
imul
sub
cmps
popa
mov
and
popa
out
adc
aam
adc
xor
in
adc
fidiv
and
inc
imul
and
pop
xchg
les
cmps
ds
push
popa
dec
(bad)
jg
scas
adc
call
jle
repz
sbb
dec
pop
sti
pop
in
mov
scas
mov
rcr
icebp
mov
and
sub
dec
sbb
mov
(bad)
sub
in
inc
ins
xchg
xor
or
pop
ds
rcl
pop
(bad)
jge
or
mov
rcl
gs
data16
pop
cli
scas
daa
inc
inc
outs
aaa
jle
fstp
jle
jge
dec
dec
push
bndstx
fstp
test
pop
xchg
mov
push
xor
imul
sub
jg
push
rcl
iret
ins
jo
mov
dec
adc
mov
or
int3
pop
fsubp
es
(bad)
jno
fldl2t
cdq
call
in
xor
imul
cdq
xchg
ins
mov
gs
shr
adc
add
or
lahf
fcmovnu
xor
out
loop
je
push
sub
je
dec
xor
adc
daa
dec
pop
dec
or
addr16
jmp
rcl
xor
in
jno
xlat
clc
(bad)
mov
arpl
cdq
sub
inc
push
pop
adc
sub
dec
inc
ss
xor
cmp
inc
inc
fisub
jb
shr
pop
mov
cld
bnd
push
sbb
inc
imul
push
in
(bad)
mov
jbe
jmp
jp
fwait
jne
pop
fldenv
out
sbb
mov
dec
movd
leave
cmps
jb
in
mov
push
mov
dec
aaa
xchg
jns
out
inc
push
sbb
aas
std
pop
xchg
(bad)
xor
out
lock
cs
(bad)
pop
mov
aaa
repz
jbe
xchg
daa
jecxz
repz
mov
cmp
add
or
cmc
cs
sub
mov
test
xchg
imul
xchg
xor
or
movs
sub
push
mov
call
in
test
out
(bad)
jns
call
sub
and
mov
rcr
sbb
mov
add
cmps
not
and
fsubp
std
les
mov
lods
sti
push
loop
in
ret
aam
(bad)
mov
sub
xchg
or
pop
arpl
repz
jnp
mov
mov
stc
mov
mov
hlt
push
mov
cmp
and
nop
sbb
call
shr
ins
xchg
push
inc
fmul
dec
mov
and
fisttp
dec
out
push
inc
xor
pop
add
inc
jnp
(bad)
xlat
sbb
sbb
(bad)
ins
popa
jne
scas
pusha
cmp
dec
loope
xor
push
bound
test
add
rcr
ficom
js
xchg
pop
mov
loope
and
jo
dec
in
mov
mov
inc
dec
cmp
movs
cmp
mov
ss
pop
xchg
jecxz
clc
or
fild
fcmovnbe
aam
pushw
dec
and
sub
fidivr
mov
or
ins
clc
xor
push
popa
jns
and
cmp
jne
hlt
mov
sub
repz
imul
dec
dec
jmp
scas
(bad)
pop
push
int
(bad)
dec
rcr
sub
call
mov
addr16
push
sbb
lods
mov
sub
and
xor
in
js
test
xor
push
xor
push
neg
retf
or
and
xchg
push
jg
loop
(bad)
rol
mov
popf
popf
fadd
pop
fistp
lahf
mov
fs
outs
ins
test
scas
inc
push
icebp
cmc
jmp
pop
mov
lods
(bad)
dec
fadd
(bad)
aam
lahf
inc
js
push
or
adc
fdivr
in
imul
lods
push
pop
xchg
lock
mov
aad
in
and
pop
imul
jp
and
ss
mov
cmp
cdq
arpl
mov
cmp
add
clc
cli
adc
icebp
ret
leave
mov
lods
adc
div
sub
sub
cmps
sbb
lock
push
add
mov
adc
pop
dec
std
leave
push
xchg
jmp
clc
jno
or
and
sbb
sar
(bad)
cli
and
cmp
and
retf
inc
mov
xor
(bad)
mov
inc
and
push
mov
into
test
push
stos
rcl
or
mov
push
or
cmc
or
icebp
adc
das
in
mov
cmp
movs
outs
ret
loope
adc
cmp
mov
jnp
dec
cmp
cmp
es
lock
mov
xchg
jnp
lea
nop
jmp
push
xchg
jg
mov
push
ja
adc
jmp
push
jo
mov
pushf
inc
fwait
pop
js
icebp
xchg
enter
jecxz
cmps
rcr
movs
dec
(bad)
cdq
clc
stos
in
jns
mov
pop
mov
push
fstp
mov
pop
lods
mov
push
popf
scas
adc
jmp
in
fnstsw
aas
addr16
xor
std
mov
scas
cmc
mov
mov
out
sub
dec
shr
xor
dec
pop
dec
sub
(bad)
fimul
jne
(bad)
pop
inc
inc
adc
and
sbb
repz
jns
jl
push
mov
and
add
popf
out
sar
fdiv
cmp
stos
ret
cdq
xchg
retf
jmp
(bad)
push
xor
fiadd
dec
addr16
fbstp
xor
(bad)
lock
xchg
movs
jns
sbb
dec
and
lea
dec
aas
(bad)
pop
sub
add
hlt
sub
xchg
mov
in
scas
test
dec
mov
adc
sub
imul
jae
dec
jl
jl
jo
js
push
imul
sbb
push
push
arpl
sub
sub
push
push
iret
shl
jmp
jle
mov
cmp
and
xlat
pop
rcr
mov
pop
xchg
(bad)
mov
inc
aam
pop
ds
jge
mov
ret
ja
add
sbb
add
cli
in
ror
test
int3
(bad)
cmps
sub
push
stos
mov
test
retf
sbb
dec
pop
add
push
adc
adc
or
(bad)
sub
push
jp
enter
bnd
jb
mov
shl
imul
in
aad
cmps
popf
jmp
cs
mov
out
fucomp
xor
mov
sub
dec
push
movs
lahf
daa
bound
and
nop
inc
xlat
mov
sbb
sbb
in
outs
imul
add
cdq
cwde
xor
leave
jne
gs
icebp
rol
jb
mov
fstp
sub
imul
jne
mov
aas
lahf
dec
xchg
sub
fcomi
dec
xor
dec
inc
(bad)
mov
cmp
pop
or
jno
popa
xor
pop
adc
and
or
xchg
iret
xchg
push
adc
sub
or
int3
stos
adc
imul
push
cmp
cmp
retf
dec
div
icebp
jmp
(bad)
jle
sbb
out
inc
ret
pop
lods
add
mov
or
push
rep
call
data16
push
test
cli
inc
enter
sub
loope
mov
fcmovne
adc
loope
shl
jmp
(bad)
aas
cs
adc
cmp
fnsave
aam
mov
mov
scas
add
mov
add
rep
sbb
lods
mov
or
jecxz
call
cs
retf
sub
ret
imul
lods
movs
jno
inc
outs
movs
scas
(bad)
mov
pop
dec
sbb
fcom
scas
ins
leavew
mov
cmp
leave
aam
sbb
push
push
in
repz
push
mov
sub
repz
adc
cmp
and
ss
sahf
add
pop
mov
xchg
aad
push
test
int
fld
jo
(bad)
jo
pop
das
cmp
sbb
mov
repnz
dec
lods
aaa
daa
lods
pushf
icebp
rep
sbb
mov
inc
pusha
jbe
into
and
sub
data16
aas
ins
dec
out
xchg
xchg
pop
dec
aas
mov
or
mov
data16
retf
retf
pop
push
fchs
xchg
outs
mov
es
std
jecxz
popf
aam
jo
dec
jne
mov
imul
pop
punpcklbw
ja
out
mov
jmp
cmp
ja
lds
or
fist
imul
gs
jl
cli
test
(bad)
or
push
push
push
shl
in
arpl
jmp
sub
cmp
and
call
jmp
adc
fstp
cli
imul
cdq
stc
je
jne
in
pop
in
adc
sbb
inc
test
and
jge
loop
jae
pop
fsubr
idiv
fbld
jle
cmp
out
pusha
pushf
fidiv
pop
test
hlt
or
mov
popa
sbb
das
(bad)
dec
loopne
xor
mov
out
mov
pop
data16
loop
leave
xor
imul
out
leave
mov
xchg
or
outs
mov
cwde
push
(bad)
(bad)
adc
ror
popf
js
jne
pop
int3
int3
inc
and
imul
push
mov
cmc
fisubr
jl
mov
pop
add
ror
stos
and
mov
cmp
sbb
add
mov
pop
imul
lods
out
or
enter
cmovno
int
clc
or
out
sti
jle
xor
sub
cmp
fwait
push
xchg
cmp
out
sbb
dec
pop
mov
mov
xchg
sbb
js
test
pop
and
mov
xchg
fld
movs
dec
push
adc
jmp
out
(bad)
xchg
fiadd
jae
fstp
xor
add
sbb
fwait
js
into
data16
in
cmp
cmc
mov
jecxz
popf
mov
pop
imul
xor
ret
outs
iret
mov
sbb
jl
adc
iret
retf
stc
into
popf
test
sbb
cmc
and
imul
mov
sbb
aad
dec
leave
ja
pushf
mov
enter
fwait
mov
mov
mov
int3
sar
pop
adc
push
in
stos
mov
sub
mov
cmp
dec
cs
xchg
popf
fisttp
out
shl
cmps
jae
pop
in
jns
outs
pop
sub
jae
mov
pop
mov
das
xlat
push
into
test
add
jb
pop
mov
jecxz
push
jnp
push
jo
sar
repnz
and
mov
jno
xor
xchg
cmc
push
xor
out
sub
les
add
xor
sub
add
in
jo
inc
push
cmp
sub
push
iret
mov
int3
inc
push
in
dec
sbb
add
ret
push
and
mov
scas
in
and
mov
pop
sbb
xchg
retf
xchg
dec
ret
mov
adc
(bad)
jnp
scas
ins
repnz
das
sbb
pop
cmps
fbstp
mov
adc
repz
stos
pushf
mov
(bad)
out
stos
adc
push
in
or
retf
test
mov
and
mov
and
test
add
shr
repz
and
mov
aaa
sbb
mov
pop
dec
hlt
sbb
sti
ja
ffree
push
jle
nop
sbb
mov
cmps
lods
xlat
push
daa
sub
call
jo
call
ret
add
es
fldcw
xchg
hlt
(bad)
ja
mov
mov
sbb
xchg
dec
push
adc
std
pop
sub
js
add
aam
dec
inc
jo
pop
pusha
pop
loope
and
add
call
mov
pop
inc
neg
dec
ja
enter
enter
cs
arpl
xchg
xchg
sbb
(bad)
xchg
not
jp
div
hlt
add
loopne
push
mov
push
jne
push
xchg
nop
scas
mov
push
sub
or
dec
xchg
and
inc
in
or
jl
stc
mov
stos
sub
aad
jg
inc
out
std
call
and
iret
mov
in
rol
out
sub
xor
mov
aaa
jl
imul
push
pop
and
ds
mov
fdiv
xor
xchg
lods
outs
push
jmp
loope
sub
(bad)
(bad)
aad
mov
sub
mov
sbb
xchg
cs
loopne
mov
fisttp
das
jo
push
sbb
movs
in
push
sti
hlt
and
repnz
(bad)
sub
int3
test
sbb
es
outs
inc
jns
gs
push
xchg
int3
js
loopne
jne
shl
dec
jmp
jge
and
repz
pop
lods
aaa
xchg
mov
into
ja
mov
(bad)
mov
in
ins
push
stc
(bad)
in
inc
(bad)
es
imul
mov
inc
lods
cmp
mov
xor
xchg
push
not
cmps
xchg
stc
sbb
xor
or
xchg
fcmovu
or
mov
fdiv
sahf
or
cmps
mov
mov
push
pushf
out
sub
xor
pop
dec
cmc
(bad)
jmp
ret
daa
movs
movs
dec
(bad)
lods
retf
in
adc
inc
stos
sahf
mov
or
scas
test
aad
cmp
fld
sub
mov
adc
and
sbb
push
fsubr
mov
into
xchg
pop
ins
add
xchg
loop
bound
mov
repnz
pop
dec
movs
frstor
ds
push
mov
push
inc
dec
(bad)
jecxz
or
jns
dec
pop
imul
lods
push
xcrypt-ecb
cmps
or
fstp
leave
mov
rol
push
out
mov
lods
ret
pop
inc
call
or
xchg
movs
and
xchg
ins
adc
xor
movs
fbstp
dec
dec
jo
jecxz
cdq
xchg
push
pop
lahf
test
mov
outs
sbb
(bad)
inc
jae
scas
nop
mov
inc
jp
call
xor
inc
jo
lds
std
and
cmc
sub
shr
test
and
dec
jmp
jp
retf
adc
mov
jnp
xchg
shl
cmp
cli
add
sub
ja
aaa
push
xchg
mov
push
add
push
nop
add
cld
rol
into
adc
mov
ror
xchg
xor
stc
mov
inc
in
ins
outs
sbb
xchg
jae
xor
js
aad
xchg
sbb
and
out
out
(bad)
ss
sti
sub
or
not
(bad)
jo
sidtd
(bad)
adc
or
mov
sahf
or
push
daa
stos
cmp
mov
xchg
popf
mov
xchg
arpl
out
add
fcmovnbe
mov
sub
das
popf
jns
mov
or
bound
mov
and
xchg
inc
cmps
and
xor
imul
jns
sbb
ror
xchg
imul
mov
jmp
pop
movs
adc
cld
add
jg
sub
cdq
cmp
jecxz
fcom
in
out
or
ds
xchg
imul
repz
out
push
in
jg
fadd
mov
or
cmps
adc
jae
ja
or
cmp
sub
retf
mov
cmp
or
lods
ret
cmp
push
icebp
lock
dec
add
retf
push
jmp
push
sar
push
add
cmp
iret
or
inc
or
test
daa
sub
and
ret
xchg
mov
(bad)
scas
ret
lahf
pusha
jno
sahf
cdq
call
outs
pop
mov
jbe
repz
mov
cdq
enter
sbb
hlt
sbb
(bad)
lods
dec
xor
fnstcw
push
ret
mov
lahf
sahf
jns
pop
leave
cmp
mov
ret
and
jmp
popf
push
sbb
pop
jo
mov
sbb
inc
add
repnz
xor
inc
adc
loopne
and
out
xchg
scas
arpl
aam
movs
fs
mov
(bad)
test
jne
sbb
and
cmp
mov
outs
mov
push
mov
jb
cmp
fstp
inc
jge
gs
mov
(bad)
cmp
ret
sbb
push
inc
enter
inc
into
test
mov
xchg
cmovns
pop
imul
movs
jl
sbb
js
push
cmp
arpl
ret
push
lahf
and
mov
(bad)
xlat
dec
lock
xor
aaa
out
pop
stc
mov
or
or
inc
jp
das
xor
dec
jbe
ds
xor
push
(bad)
je
jle
jae
je
dec
add
push
ds
bound
pusha
mov
xacquire
inc
xchg
clc
mov
sub
test
(bad)
dec
cmp
loope
mov
add
shl
or
sbb
iret
data16
or
jg
pop
mov
sti
xchg
ss
inc
test
jmp
mov
mov
xchg
pop
xor
and
dec
icebp
ds
adc
hlt
pop
push
rcr
stos
(bad)
and
jno
inc
js
add
mov
sbb
add
dec
popf
(bad)
hlt
js
cmp
push
cli
sub
push
xor
or
push
pushf
pop
add
push
mov
loop
test
xchg
pop
mov
int3
push
into
in
movs
outs
add
inc
add
mov
sub
frstor
and
das
cld
or
inc
call
pop
ror
push
enter
and
or
aam
in
stos
(bad)
call
in
xor
xchg
cmp
xchg
test
scas
jmp
jns
xor
mov
hlt
xchg
loope
pop
and
push
ret
mov
fwait
mov
in
daa
ins
into
jno
(bad)
jl
push
mov
pop
out
sub
inc
sti
xor
fidivr
inc
faddp
dec
es
mov
imul
adc
sbb
mov
loope
mov
jmp
mov
mov
jle
aam
xor
std
aam
fdiv
mov
mov
pop
push
imul
sbb
add
(bad)
rcl
es
mov
mov
cmc
xchg
fxch
les
push
add
dec
xor
test
call
ret
push
stos
call
mov
(bad)
sbb
iret
aam
test
mov
or
mov
pushf
arpl
adc
fmulp
fidiv
call
je
dec
mov
sub
adc
mov
jno
xor
test
hlt
test
jmp
xlat
mov
mov
jnp
dec
push
push
cwde
shl
jnp
xor
imul
or
sub
mov
mov
icebp
dec
mov
pop
and
cmp
ds
test
cmps
cmp
(bad)
cmp
add
cli
mov
daa
loop
mov
and
hlt
push
dec
add
mov
lahf
es
imul
inc
call
ret
mov
push
ret
lods
sbb
jp
jl
inc
js
and
test
inc
sub
pop
cwde
sub
adc
(bad)
arpl
push
ret
into
inc
push
fbstp
out
xor
add
jbe
or
sbb
mov
or
fdivp
add
mov
sbb
push
sahf
xchg
dec
or
into
add
int3
in
lock
cmp
sub
pop
sbb
fidiv
jae
sbb
mov
bound
imul
retf
fnstsw
in
dec
or
pusha
cdq
inc
mov
aaa
and
jb
jge
mov
rcr
xor
adc
outs
fmul
outs
mov
mov
jmp
adc
sub
sti
hlt
mov
shr
adc
push
or
imul
sbb
adc
fwait
dec
mov
xor
sbb
(bad)
pop
pop
xchg
movs
dec
ficom
bound
jmp
dec
inc
retf
push
xor
mov
xlat
jmp
xchg
arpl
jnp
add
cmp
push
bound
push
jb
repz
mov
out
cmp
mov
cld
add
rcl
jb
push
es
add
lods
jae
(bad)
in
scas
into
push
enter
jo
push
ret
push
inc
hlt
lahf
pop
loop
mov
rcr
and
outs
mov
sahf
mov
cmp
fbld
inc
and
hlt
popa
xor
outs
dec
jmp
push
arpl
cld
add
imul
retf
cmp
int3
arpl
jl
jp
adc
cmps
(bad)
je
lds
ja
arpl
jnp
mov
pop
retf
fwait
aam
movs
mov
(bad)
das
jno
add
retf
pop
stos
mov
xchg
pop
sub
idiv
sub
popf
aas
dec
rol
adc
addr16
enter
cs
jge
(bad)
and
dec
xor
sbb
fdivr
or
pop
jns
rcr
pop
dec
cmp
lock
clc
mov
es
adc
hlt
mov
sbb
push
add
popa
mov
in
aaa
dec
add
cvttps2pi
outs
jg
mov
mov
pop
mov
das
icebp
aas
test
outs
sbb
in
xchg
mov
fcomp
mov
lea
sub
sahf
retf
sbb
and
mov
xchg
(bad)
popf
mov
ds
pop
fmulp
(bad)
out
div
fstp
xchg
add
mov
dec
sub
inc
pop
sti
arpl
test
and
retf
ss
ss
xor
adc
add
outs
inc
xchg
mov
adc
aad
or
loope
call
out
aam
cmp
das
popf
je
test
into
cmps
ins
push
jecxz
pop
(bad)
and
int
xchg
push
stc
loopne
leave
sub
cmp
sub
sbb
inc
push
and
jp
push
test
cmc
and
add
add
jmp
test
iret
adc
push
sbb
pusha
cmp
(bad)
push
nop
and
jno
out
sbb
or
jmp
adc
mov
movs
inc
jo
mov
test
xor
xor
add
mov
xchg
jnp
fwait
mov
aam
mov
in
sahf
ins
ret
mov
and
ds
cmp
retf
in
cmps
xchg
mov
add
and
imul
in
ins
sahf
sti
jge
loop
sbb
imul
loop
xchg
add
push
sbb
fiadd
and
cld
push
xor
push
and
push
cld
cwde
add
in
stc
dec
mov
mov
das
mov
loopne
pop
dec
add
push
in
mov
retf
adc
sbb
shr
movs
add
add
push
sbb
cld
mov
or
or
sub
pop
fild
xchg
jnp
repz
fwait
shl
jns
lea
je
mov
mov
mov
push
push
and
xor
popa
dec
dec
pusha
test
mov
(bad)
in
or
outs
shl
and
call
ja
fisub
retf
sahf
loop
adc
xor
sbb
adc
movs
mov
fsubr
shl
call
ja
(bad)
push
pop
xchg
inc
cmp
mov
push
nop
adc
cs
cs
cmpxchg
mov
(bad)
cwde
clc
sahf
imul
pop
push
or
jp
stos
aas
or
or
mov
aaa
pop
sbb
xchg
mov
pop
or
rol
push
mov
xchg
repz
pop
mov
cli
repnz
enter
daa
sti
jmp
adc
cdq
xchg
lds
outs
pop
call
in
push
xchg
lahf
pop
gs
mov
pop
dec
loop
mov
mov
in
scas
mov
lods
mov
test
pop
(bad)
fidiv
mov
stc
ins
out
fcom
test
xchg
xchg
pop
xor
sub
movs
inc
test
in
and
sub
cmps
jno
(bad)
push
popf
adc
inc
das
enter
sub
(bad)
or
sbb
xchg
shl
fsubr
pop
jg
mov
test
mov
out
out
fst
ret
adc
and
mov
push
or
xchg
test
xor
test
(bad)
or
jnp
xchg
mov
gs
popf
popa
sbb
cmp
add
cmps
dec
call
add
and
hlt
cmc
stos
stos
jp
cmp
pop
out
test
imul
sub
push
sub
cmp
daa
es
mov
lods
add
inc
mov
or
sbb
test
ret
xchg
sub
sub
mov
and
mov
or
push
in
fucomi
cs
popf
ret
jns
retf
fisubr
mov
inc
scas
aaa
test
inc
sbb
rcl
and
out
adc
mov
lock
sbb
or
pop
jl
inc
jmp
lahf
in
mov
(bad)
fwait
add
mov
idiv
lods
call
jge
lods
mov
jge
sub
or
sub
daa
out
pop
xor
ror
(bad)
jecxz
in
xor
or
and
icebp
inc
inc
push
lds
push
sub
lds
adc
enter
pusha
aam
fidivr
in
sub
adc
mov
pusha
cmp
aas
push
xchg
ins
imul
icebp
adc
xor
pop
cmc
or
mov
mov
fwait
push
mov
inc
mov
jbe
stc
inc
pop
dec
lahf
loope
icebp
pop
icebp
movd
push
mov
(bad)
loope
adc
ins
popf
add
es
pop
sbb
lahf
push
stc
xchg
xor
in
(bad)
movs
iret
mov
aad
sub
inc
push
mov
cmp
in
sub
ficom
push
push
mov
aas
sbb
fwait
push
cmps
cmp
inc
jne
in
or
inc
not
add
aam
mov
fsub
sub
pop
cmp
ss
js
xor
sub
push
fisub
jle
inc
loop
cmp
xor
cmp
add
test
jb
mov
xchg
cmp
adc
mov
or
loope
and
je
test
dec
jns
stc
sub
pop
push
loope
retf
js
pop
pop
jp
jp
push
bound
xor
out
cmp
cwde
mov
add
pop
dec
jp
push
jmp
sub
or
test
sbb
push
mov
loopne
jl
and
idiv
imul
mov
mov
in
loop
cmp
dec
jecxz
cwde
test
mov
cwde
mov
out
ret
fldcw
jo
pop
mov
and
ja
jmp
xchg
iret
mov
cmp
movs
inc
sar
add
push
loopne
out
outs
out
ror
jmp
xor
es
jg
and
sub
push
or
es
sti
aad
(bad)
inc
dec
pop
cmc
mov
push
idiv
xor
popf
adc
mov
pop
daa
adc
inc
jne
mov
pushf
jge
ins
adc
push
xchg
in
dec
xor
mov
sub
je
jbe
inc
stos
inc
out
add
sub
in
repz
add
push
mov
pusha
adc
rol
pop
lahf
xchg
outs
pop
push
add
sub
mov
jnp
(bad)
(bad)
mov
push
xchg
shl
psrld
out
es
js
data16
push
sub
push
cwde
popf
jae
adc
sbb
sti
mov
mov
inc
daa
push
mov
mov
mov
ja
das
call
dec
dec
outs
cmps
stc
addr16
xchg
rcr
mov
int
adc
in
lods
aad
loopne
mov
and
jmp
jb
xchg
mov
data16
fistp
sbb
or
cli
fstp
mov
sbb
push
lds
add
in
sub
xchg
and
mov
loopne
mov
in
adc
or
and
push
sub
bound
loopne
mov
les
push
fst
pop
ja
xor
icebp
in
sbb
int3
or
mov
mov
xchg
mov
add
ret
pushf
pop
adc
gs
int3
push
xor
leave
mov
gs
jmp
ja
pushf
inc
fdivr
mov
es
ins
sahf
cmp
(bad)
push
mov
ins
arpl
sub
scas
pop
rcl
dec
mov
inc
inc
push
lea
lods
mov
mov
push
mov
inc
ins
out
scas
cmp
hlt
mov
lds
inc
sbb
xlat
jae
dec
pop
xchg
arpl
lods
shr
inc
xchg
mov
mov
adc
icebp
sub
adc
sub
mov
inc
repz
inc
test
cwde
sub
cwde
or
add
jg
sti
push
out
(bad)
stc
in
xor
push
and
(bad)
and
mov
mov
jmp
lahf
add
in
test
fistp
push
xchg
mov
cmp
adc
push
xlat
adc
push
jnp
stos
sbb
bound
xchg
repnz
and
push
test
je
ror
mov
adc
imul
hlt
pop
mov
push
in
es
xchg
ficomp
ins
jae
imul
sub
movs
xor
fisubr
enter
dec
add
fmul
imul
mov
push
sub
ss
lods
adc
je
or
and
push
xchg
imul
in
lds
sbb
pop
imul
aad
or
gs
shl
(bad)
not
mov
add
(bad)
inc
sbb
das
inc
int3
into
jno
xchg
jmp
shl
outs
and
(bad)
dec
sbb
xchg
sub
(bad)
test
pushf
jns
into
or
inc
sbb
stc
shr
shl
test
push
push
mov
(bad)
fisubr
mov
push
std
push
add
add
test
mov
sub
pop
lods
inc
mov
mov
jo
lahf
push
jl
mov
stos
mov
fld
aaa
mov
aas
hlt
mov
mul
add
fld
lods
sub
lods
push
pop
cmp
test
in
outs
arpl
retf
shl
mov
pop
add
(bad)
push
dec
mov
enter
mov
pop
pop
inc
je
fist
cdq
xor
arpl
mov
sti
sbb
dec
fisub
daa
rcr
inc
mov
xor
je
mov
xor
fs
pop
adc
cld
sbb
jae
or
test
mov
fs
retf
mov
dec
dec
mov
cmc
jb
push
fs
sti
push
xchg
pop
dec
sub
pop
push
loope
fbstp
xlat
jmp
adc
(bad)
cmp
fnstcw
loop
out
jo
out
arpl
pop
cmp
sbb
pop
inc
test
stos
sub
rcl
xor
les
mov
mov
bound
xchg
cdq
sub
enter
imul
arpl
cmc
add
inc
les
cmps
push
imul
pop
movs
arpl
ret
out
icebp
xchg
mov
call
mov
dec
jno
add
jmp
loopne
and
mov
in
mov
in
sbb
add
add
out
adc
dec
(bad)
xor
repnz
inc
xlat
cmp
test
cmp
mov
mov
fldcw
ja
or
mov
pop
dec
dec
dec
dec
adc
fwait
xchg
and
test
dec
dec
mov
lock
jle
scas
retf
pop
jb
xchg
in
add
jo
mov
mov
mov
mov
(bad)
pop
mov
imul
aas
in
daa
mov
xor
mov
jbe
pop
inc
out
mov
jbe
inc
cwde
movs
bound
mov
pop
into
movs
movs
pushf
inc
daa
inc
dec
sub
pop
sub
inc
push
movs
jmp
adc
das
mov
jg
dec
(bad)
pushf
fs
cmp
mov
inc
outs
jl
cmp
aas
mov
jae
inc
mov
jb
xor
push
and
xchg
stos
lahf
mov
mov
movs
xchg
or
cmps
fadd
in
and
out
sub
cdq
sbb
movs
into
or
xor
pop
push
cmp
pavgw
push
(bad)
push
bound
jg
jmp
call
cmp
inc
nop
cli
or
es
scas
jecxz
inc
push
fdivr
ds
xchg
in
mov
or
loopne
jns
jbe
add
add
and
and
xor
outs
mov
ror
sub
shl
jne
adc
call
pop
fs
retf
cwde
call
popf
or
adc
gs
jg
adc
ss
mov
and
ss
lds
pop
je
std
cli
mov
or
xlat
xchg
mov
jns
popa
ss
push
and
mov
enter
imul
out
xor
lahf
inc
add
aad
adc
or
jne
mov
adc
pop
imul
dec
imul
stc
fild
push
mov
xor
and
(bad)
repnz
or
jbe
call
push
push
cwde
loop
iret
inc
rol
cmp
fcomp
(bad)
push
shl
mov
sub
out
(bad)
mov
dec
loope
or
mul
xchg
mov
dec
jecxz
mov
icebp
lahf
jmp
cld
pusha
out
imul
test
cmps
jle
adc
pop
cmc
jp
cmp
ffreep
retf
popa
mov
push
rol
(bad)
pop
xchg
mov
jp
out
pop
xchg
int
and
mov
scas
mov
jge
(bad)
adc
repnz
dec
imul
push
inc
repz
pop
outs
outs
nop
inc
push
adc
push
xor
jo
jmp
mov
aam
and
test
gs
out
ss
dec
pop
aam
arpl
mov
(bad)
adc
loope
pop
cmp
cli
mov
sub
jg
and
hlt
bound
and
xchg
mov
jno
cmps
cwde
mov
dec
ins
dec
mov
(bad)
xchg
pop
repz
adc
mov
jl
aam
ficomp
xchg
int
xchg
mov
lods
inc
scas
imul
dec
cmp
mov
pop
es
xlat
in
mov
push
mov
xchg
xchg
popw
push
cmps
mov
sub
outs
xchg
and
out
nop
push
xchg
adc
cmp
sbb
jecxz
cmp
pop
stos
enter
ret
push
ficomp
jb
cmp
jae
pop
js
jb
mov
and
mov
or
xchg
call
jmp
dec
or
push
mov
lock
and
retf
popf
movs
mov
xchg
and
dec
fsubr
into
mov
sar
dec
pop
ins
call
mov
dec
push
xor
push
ins
or
in
mov
inc
lock
pop
sar
xchg
fcom
sbb
mov
dec
or
(bad)
clc
jbe
adc
xchg
mov
ds
or
loopne
dec
call
lock
test
sub
mov
mov
outs
adc
mov
out
cwde
pop
xchg
adc
inc
inc
mov
pop
in
add
sbb
jmp
inc
adc
mov
mov
dec
push
mov
jb
ret
rcr
or
adc
xor
sub
add
lahf
push
int3
fldcw
jecxz
ror
rcr
add
mov
out
adc
cs
push
jmp
in
add
(bad)
daa
inc
push
mov
and
xchg
gs
ins
jg
xor
popa
in
aas
sbb
fwait
mov
(bad)
(bad)
imul
jg
push
dec
popa
dec
push
cmc
in
xchg
out
inc
add
rol
and
and
cs
es
add
adc
and
ret
mov
cmp
out
addr16
mov
jb
or
repnz
ror
fnstenv
out
mov
stos
dec
pusha
cmp
and
xchg
sub
push
outs
leave
inc
sar
bound
cmp
cdq
mul
adc
xor
jbe
retf
stos
and
xchg
aad
cmp
mov
test
or
pop
mov
sbb
mov
test
aad
dec
in
shl
dec
sbb
mov
inc
cmp
std
dec
sbb
call
(bad)
fistp
pop
(bad)
pop
repnz
dec
pop
mov
cmp
xchg
fild
(bad)
cmc
add
ins
inc
jbe
out
(bad)
idiv
sub
loop
inc
pop
jle
nop
bswap
cmps
lods
mov
jle
repnz
shl
and
add
(bad)
jl
popa
xchg
sbb
xor
pushf
js
sti
movs
mov
lods
fbld
pop
outs
xor
lahf
push
xchg
add
jmp
neg
xchg
jne
adc
retf
cmp
dec
push
jb
test
ret
test
push
outs
mov
into
movsx
(bad)
mov
loope
or
push
and
sbb
outs
pop
sbb
aaa
bound
xor
or
div
or
push
adc
push
test
sbb
js
pushf
push
jge
mov
ss
mov
inc
xor
repnz
ret
push
dec
push
jne
stc
adc
and
in
das
jp
je
adc
js
add
and
xchg
inc
ss
in
aaa
xor
sbb
xchg
sbb
shl
(bad)
and
ror
stc
jl
(bad)
mov
in
xor
lahf
clc
push
add
cmp
stos
test
xchg
push
xchg
daa
cli
xor
push
add
leave
aaa
cmp
jmp
fistp
xor
(bad)
or
push
mov
(bad)
int
sub
jo
xor
mov
ss
mov
stc
pop
fidiv
jmp
(bad)
aad
lea
mov
cmc
(bad)
jns
movs
inc
push
jmp
je
pop
mov
pop
and
cs
adc
into
cmp
fadd
(bad)
in
aad
aaa
fld
pushf
push
mov
sbb
mov
jg
fisttp
out
cld
adc
shr
mov
adc
pop
sti
(bad)
mov
cmp
pop
mov
scas
and
and
outs
cmp
fdivr
fisubr
inc
or
into
xor
(bad)
out
pop
fcmovbe
iret
test
and
in
jecxz
sub
mov
sub
xchg
jmp
lahf
sub
mov
jns
pop
mov
fwait
push
and
adc
push
jp
jno
ret
adc
or
outs
hlt
pop
je
or
jnp
xchg
ret
fwait
and
inc
xchg
imul
mov
sub
hlt
pop
pop
inc
mov
mov
jp
mov
out
daa
outs
adc
pushf
movs
cmp
or
mov
jle
cld
in
mov
out
sbb
jl
fimul
add
cmp
fimul
es
lods
in
sbb
jmp
test
fcmovbe
and
add
leave
push
adc
or
mov
mov
test
mov
adc
sti
dec
xor
cmp
xlat
cli
or
mov
sti
sub
imul
aas
sbb
sub
and
lods
mov
pop
cmp
and
fsubr
bound
mov
inc
mov
cmp
inc
jne
sbb
pop
or
adc
xor
(bad)
pop
fst
aas
stos
stc
mov
mov
aam
mov
cmp
into
add
mov
inc
push
xlat
imul
adc
rcl
adc
push
(bad)
mov
daa
xlat
repz
sbb
in
cmp
dec
sub
xchg
gs
cs
out
xchg
push
aas
xchg
ja
lods
jne
in
add
mov
push
mov
les
repnz
pushf
dec
mov
mov
push
add
out
daa
in
hlt
xor
pop
xchg
(bad)
loope
or
cld
outs
dec
xchg
sbb
sti
push
mov
lea
xchg
push
jno
pop
nop
or
mov
jo
pushf
test
stos
dec
ficomp
or
test
sti
mov
jo
mov
or
cmp
or
gs
or
push
clc
in
cmp
ins
or
pushf
or
jl
push
xchg
shl
mov
rol
or
mov
push
lock
mov
fs
sbb
cdq
and
add
cmp
test
sar
jnp
out
pop
jmp
xor
cs
xor
sahf
aaa
pop
arpl
mov
push
int3
adc
fidivr
fstp
xchg
and
pop
(bad)
mov
pop
mov
cmps
dec
pop
adc
add
xchg
ret
fst
enter
(bad)
push
and
sahf
sbb
jbe
xchg
xlat
mov
ds
daa
xor
fs
adc
sub
add
push
rol
mov
mov
out
aam
dec
or
dec
adc
cmp
xchg
mov
ret
das
push
jecxz
cwde
cli
mov
xchg
and
sub
bound
and
xor
movs
sbb
aam
stos
jbe
je
pop
cdq
cmp
ss
xlat
mov
dec
mov
jmp
jmp
iret
leave
pop
int
dec
or
dec
add
(bad)
retf
popa
jg
add
call
mov
dec
jl
sub
xor
push
push
mov
bound
test
and
neg
imul
popa
stos
sbb
fisub
xchg
pop
pop
pop
xchg
lea
pop
xchg
sub
nop
test
mov
dec
sbb
lea
xchg
push
retf
out
fs
mov
mov
pusha
xchg
iret
shl
push
test
sub
ins
movs
faddp
dec
pop
add
(bad)
mov
cld
jbe
sbb
adc
addr16
cmp
jle
fstp
imul
dec
cmp
mov
dec
pushf
out
cmp
movs
arpl
retf
push
(bad)
sbb
cdq
or
xchg
sahf
pop
dec
pop
out
out
sbb
pop
mov
jns
mov
js
gs
and
adc
movs
xchg
sbb
pop
iret
jbe
adc
xchg
mov
pop
popf
(bad)
out
test
xchg
adc
scas
xor
cwde
(bad)
lods
popa
stc
out
iret
lahf
pop
dec
fistp
add
jbe
push
retf
mov
pop
cmp
inc
test
dec
outs
dec
aaa
jb
repz
fisubr
rcl
out
push
push
lea
pop
adc
mov
outs
ret
push
(bad)
inc
jne
popf
pop
pop
dec
add
jno
lea
adc
retf
lds
mov
sbb
loop
add
ds
sbb
jecxz
movs
aaa
or
dec
jb
cmps
aas
fidiv
add
fst
and
pop
jo
aaa
movs
fwait
sbb
cmp
std
xlat
cld
xlat
and
out
dec
inc
out
rcr
mov
add
sti
and
fxtract
lock
fldcw
lsl
adc
pushf
(bad)
mov
cmp
test
mov
xor
scas
sub
and
in
mov
xor
pop
js
imul
loopne
ja
loopne
pop
jns
dec
mov
xor
jne
xor
fidivr
fisubr
mov
mov
xchg
push
popf
jbe
inc
inc
jae
in
dec
js
stos
ror
hlt
mov
jmp
fistp
retf
into
cmp
scas
xchg
cld
xchg
push
outs
add
mov
adc
jmp
and
dec
sub
mov
enter
fiadd
mov
mov
mov
push
outs
pop
adc
mov
pop
xchg
ret
fdiv
mov
jnp
cmps
adc
js
sub
cld
push
js
pop
popa
pop
bound
lahf
lods
cli
aad
add
mov
inc
sub
test
not
shl
fucomp
neg
(bad)
out
mov
inc
lods
setp
mov
xchg
add
push
test
pop
xor
nop
jnp
lods
or
shl
cld
xchg
pop
gs
jne
pop
mov
mov
hlt
ret
cwde
scas
sub
shr
out
and
js
sbb
pop
mov
sahf
push
test
das
inc
ds
xchg
push
movs
add
jmp
call
mov
add
cmp
jle
lods
test
ins
pop
(bad)
jae
fsub
(bad)
retf
xchg
sti
out
push
fisub
xchg
in
mov
xor
push
out
cmps
retf
loop
arpl
test
add
fist
mov
sar
fwait
cli
pop
cmps
jge
pop
addr16
inc
dec
jo
ror
inc
mov
sahf
sbb
stc
setno
xchg
adc
pop
cwde
repz
push
nop
jae
repz
pop
int3
pop
push
scas
xchg
add
scas
shl
push
pop
(bad)
popa
jle
(bad)
xor
(bad)
mov
push
push
sub
retf
xchg
lahf
pop
cdq
rcl
jns
sub
gs
sbb
push
pop
shl
cmps
out
or
lahf
in
pop
ins
dec
out
int3
dec
test
fidiv
xor
idiv
or
leave
add
imul
fidivr
pop
inc
test
leave
mov
into
mov
xchg
jmp
out
inc
fst
mov
es
adc
push
adc
lock
aad
add
jo
sti
dec
xchg
out
icebp
out
xchg
push
push
sbb
mov
inc
xor
ins
out
push
outs
jmp
gs
inc
push
mov
aas
(bad)
out
jns
in
stc
cmps
in
dec
jnp
adc
scas
retf
or
jbe
jle
xor
pop
xor
hlt
push
pop
frstor
or
mov
outs
pusha
mov
(bad)
dec
adc
shl
lahf
shl
mov
jo
int
mov
mov
or
aad
aam
mov
loop
mov
mov
and
lods
(bad)
mov
sar
sbb
mov
out
jae
mov
push
sar
movs
sbb
mov
cmp
(bad)
jl
add
aas
loopne
test
(bad)
fsub
scas
rol
int
dec
sbb
lock
fs
push
add
cmps
and
daa
lods
aad
adc
data16
fstp
push
rol
cwde
fistp
and
call
jns
stos
jo
or
and
popf
sahf
jnp
pop
xchg
ja
xchg
xor
inc
test
ret
jno
xchg
dec
mov
sbb
jge
inc
and
ret
aad
or
mov
mov
ins
sbb
js
rcr
and
(bad)
in
sahf
jnp
sub
into
mov
(bad)
push
movs
js
int3
sar
xchg
ds
sbb
sar
(bad)
ds
mov
scas
ffree
adc
adc
jmp
sub
leave
ja
dec
lahf
dec
pop
daa
and
mov
add
bnd
cmc
call
push
and
pop
daa
(bad)
jmp
es
add
mov
xchg
xor
in
in
test
sub
xchg
out
pop
xchg
out
add
mov
rcl
rcl
fnstsw
fimul
fld
mov
arpl
sti
xchg
mov
imul
loopne
jo
push
outs
cmp
out
in
cs
dec
and
and
mov
(bad)
mov
test
and
push
ss
shl
aad
in
push
loope
push
mov
and
aad
xor
data16
pop
sbb
(bad)
ficomp
mov
dec
(bad)
fadd
sbb
imul
(bad)
cmp
jmp
mov
pushf
sti
sar
and
data16
and
and
das
push
pop
cmps
mov
add
jns
or
add
stc
dec
sahf
cld
add
(bad)
int3
jmp
or
dec
imul
mov
jecxz
fstp
push
lahf
pop
test
pop
stc
pusha
loope
mov
or
xor
daa
inc
mov
pop
pop
out
sbb
inc
pusha
inc
pop
loopne
sub
das
aam
mov
movs
mov
sub
mov
scas
jne
inc
and
daa
leave
lods
sub
jbe
cld
call
in
ret
jl
sub
aaa
jmp
ins
data16
cmp
jecxz
xchg
cmc
inc
lea
js
sbb
stc
adc
test
lods
sub
cmp
jge
mov
pop
ret
(bad)
dec
ror
push
push
and
cmp
popa
cmp
inc
jg
mov
jnp
mov
push
push
sahf
mov
(bad)
pusha
cmp
jns
leave
sub
aaa
test
leave
cwde
fs
mov
shr
dec
sub
jo
imul
test
repnz
dec
push
inc
loop
push
cmc
mov
fnstcw
xchg
imul
(bad)
outs
or
pushf
lock
push
mov
mov
je
hlt
pop
mov
or
mov
mov
dec
je
jecxz
jb
lock
add
or
je
es
jo
and
imul
dec
or
les
in
add
push
xchg
fisttp
xor
mov
jle
mov
shl
pop
xor
mov
movs
(bad)
fstp
stc
call
out
dec
daa
lock
nop
enter
mov
add
adc
dec
sti
popa
ins
cmp
mov
cwde
outs
fnstsw
sub
test
sbb
stos
pop
pop
or
jae
pop
sub
inc
fld
pop
fcomp
xchg
mov
pop
fwait
stos
mov
push
jbe
and
jl
mov
movs
jmp
outs
cmp
mov
add
dec
cmp
push
pop
mov
jnp
pop
or
ss
fdivr
push
xchg
push
pop
nop
in
xchg
lods
mov
outs
mov
lods
xchg
neg
std
test
dec
xor
test
nop
xor
sahf
xor
in
popf
loop
out
hlt
enter
icebp
aad
mov
and
dec
(bad)
jg
jg
mov
add
mov
inc
push
daa
cmps
pop
adc
xchg
xchg
adc
xor
add
sbb
fs
shl
(bad)
(bad)
pop
test
movs
aad
adc
sub
(bad)
fdivr
push
aad
mov
mov
push
sub
movs
jl
fistp
xchg
mov
popf
jno
fdivr
in
ror
or
adc
(bad)
sahf
test
jmp
popa
mov
dec
cwde
sti
add
movs
xchg
jecxz
inc
std
inc
sbb
inc
xchg
jo
xchg
mov
add
sub
jae
xor
or
dec
es
clc
pop
pop
(bad)
popa
ins
outs
ret
popa
pop
mov
dec
fcomp
into
inc
fcomp
gs
inc
sbb
into
es
loopne
stos
sbb
dec
adc
jge
mov
outs
inc
xchg
and
aad
adc
jle
adc
movs
cmp
sti
pushf
jmp
push
mov
mov
stc
iret
dec
pop
push
pop
(bad)
push
jmp
ds
and
inc
push
mov
sbb
and
push
push
jb
icebp
jno
ja
fwait
ror
push
add
cmp
mov
(bad)
jmp
bound
retf
and
cmp
out
clc
sbb
ror
fld
jns
dec
add
loopne
ja
dec
pop
ins
adc
cs
sti
iret
lods
inc
jns
mov
or
rcl
pushf
inc
adc
dec
mov
push
mov
cmp
xor
jl
dec
ret
iret
push
(bad)
loopne
dec
jmp
rcl
call
jecxz
mov
pop
jle
jo
mov
mov
jp
js
into
cdq
xor
sahf
stos
es
mov
dec
push
push
fcom
das
push
fst
push
inc
test
add
repz
out
pop
ja
in
xor
shr
ins
mov
comiss
dec
icebp
sti
mov
cmc
out
or
inc
rcl
mov
call
loope
jmp
stos
mov
push
and
mov
shl
and
jmp
inc
sub
cld
fisubr
cmp
(bad)
ja
div
or
js
cmps
int3
shr
fs
xor
aam
mov
or
mov
retf
add
mov
xor
out
inc
and
cld
repz
ins
lea
inc
cs
leave
gs
inc
daa
xor
inc
imul
mov
mov
mov
sbb
rol
jle
mov
mov
ret
jmp
adc
popf
in
outs
shl
mov
xchg
clc
jecxz
retf
mov
sbb
lea
adc
cmp
dec
or
cmp
shl
xchg
mov
arpl
(bad)
aam
movs
xchg
sbb
(bad)
test
in
jle
dec
sahf
mov
sahf
sub
out
mov
mov
nop
jno
in
mov
lods
dec
test
xor
lds
int
jge
mov
xchg
aas
mov
push
fild
and
pusha
sub
and
or
mov
enter
loopne
push
dec
(bad)
in
popa
popf
pop
dec
inc
ja
jge
sbb
stos
pop
loopne
xor
jns
rdpmc
test
aas
sahf
div
add
mov
jge
int3
mov
jmp
inc
mov
addr16
into
jle
sub
mov
adc
pop
in
push
xchg
mov
sbb
pop
add
(bad)
adc
shr
xchg
or
xchg
push
(bad)
sub
or
cmp
push
xor
mov
(bad)
push
div
sbb
jae
jmp
add
ret
jg
cmp
inc
mov
pusha
(bad)
sbb
add
pop
jle
xchg
cmp
pop
call
int3
cmp
or
retf
ja
je
in
in
xchg
cmps
jbe
lea
in
cdq
sub
sbb
fnstcw
add
mov
movs
imul
jbe
add
lock
mov
sti
dec
sub
in
jmp
jno
mov
jo
xchg
aaa
rcr
das
cmp
xlat
sbb
dec
sbb
(bad)
adc
lds
xchg
inc
stc
sar
imul
push
cmp
jmp
out
pop
jge
retf
jns
in
jbe
fwait
retf
mov
mov
sbb
out
dec
dec
bound
dec
repz
cmp
jmp
pop
cmc
dec
push
adc
call
ins
xor
sbb
rcl
repnz
inc
or
movs
add
mov
jno
pop
dec
gs
sbb
cmp
adc
sub
lods
fidiv
int3
mov
out
add
stc
mov
and
enter
ins
hlt
pop
outs
mov
xchg
cmp
mov
fcmovnb
cs
(bad)
lahf
pop
fdivr
pop
sub
repnz
fdiv
ficomp
sbb
movs
in
fadd
push
stos
mov
movs
rcr
loope
je
dec
jae
pop
cmp
mov
or
sub
stos
pop
ret
mov
lea
pop
xlat
stos
mov
cwde
add
pop
mov
add
rcr
jg
fwait
push
stos
movs
scas
adc
jge
adc
xor
aam
jecxz
lods
mov
dec
pop
repz
sahf
mov
push
gs
and
push
cmp
and
arpl
mov
fimul
xor
cmp
jb
mov
rol
daa
push
repnz
out
push
das
es
lds
jnp
shl
in
push
inc
dec
cli
xor
add
push
mov
sub
cli
sub
loop
jne
push
aam
dec
xlat
mov
pop
sub
pop
cli
test
cwde
sub
ins
jne
sub
shl
sub
sub
ins
lds
sub
sbb
push
pushf
les
inc
sbb
retf
inc
pop
jge
out
into
or
es
outs
repz
imul
ins
mov
or
xchg
test
xchg
arpl
mul
bound
push
ror
subps
popa
jo
in
arpl
aaa
xor
push
test
stos
ficom
in
dec
dec
popf
mov
jl
add
push
xchg
test
movs
adc
pop
adc
call
out
test
mov
cmp
pop
out
pop
out
aam
call
ss
xchg
fnstenv
inc
cmp
not
clc
adc
push
retf
call
leave
jo
add
mov
mov
xor
ss
and
test
adc
mov
aas
iret
(bad)
mul
jp
fild
sbb
enter
mov
pop
leave
pop
jge
inc
jno
scas
cmp
daa
cmp
cwde
adc
ins
test
mov
and
sti
jae
dec
xchg
cmp
mov
loopne
mov
mov
sub
gs
inc
cmp
out
push
xchg
loop
ror
ret
add
cwde
shr
xor
mov
pop
(bad)
fptan
jo
add
or
push
push
cmp
adc
shl
sbb
jge
rcr
mov
inc
fcomp
add
gs
xor
jae
ins
and
jl
into
xchg
and
mov
sub
and
dec
test
rcl
fimul
dec
xor
jo
imul
mov
dec
jg
pop
int3
jnp
and
icebp
or
xchg
push
mov
sub
(bad)
jnp
xor
jmp
ins
sub
add
xor
pusha
pop
xor
push
js
mov
cli
rcr
push
outs
xchg
mov
cdq
shl
repz
xchg
pusha
hlt
jb
add
jb
stos
jae
jge
mov
daa
sti
data16
xchg
mov
sub
xor
pop
mov
jo
or
dec
fidiv
das
mov
rcl
scas
adc
imul
mov
cmp
mov
cdq
hlt
dec
xchg
push
imul
jo
dec
sbb
ret
imul
or
xchg
cmp
sbb
loope
mov
bound
arpl
sub
leave
inc
rcl
ja
and
out
sub
popf
jmp
xchg
ja
push
mov
ins
mov
xor
jo
xor
outs
(bad)
dec
sub
and
sbb
fwait
mov
test
adc
fbstp
adc
cmp
mov
and
loope
mov
dec
mov
and
mov
xchg
mov
call
pop
xlat
mov
cmp
push
and
sub
leave
adc
sub
pop
shr
and
push
inc
cmp
adc
push
jl
pop
mov
or
mov
test
inc
cdq
imul
call
pusha
push
pop
(bad)
es
add
cmp
jg
cmps
arpl
out
iret
and
jg
repnz
xor
push
mov
(bad)
push
mov
jle
iret
call
std
pop
cmp
add
and
sub
sub
sbb
imul
jne
sbb
or
loope
jno
fist
mov
sub
dec
retf
dec
fsubrp
aam
pop
outs
(bad)
cmp
xchg
in
popf
(bad)
call
dec
enter
rcl
ffree
sbb
mov
pop
lea
push
test
outs
aaa
test
jbe
add
cmps
ror
xchg
(bad)
fdivr
push
lods
lea
loope
call
push
in
stc
ss
add
cmp
pop
cmc
pop
imul
clc
scas
jne
nop
push
lahf
push
retf
call
js
pop
sub
sbb
xor
mov
xor
xchg
sti
add
sbb
js
mov
mov
mov
into
xlat
push
add
pop
add
jmp
jo
pop
sti
adc
pop
scas
mov
int3
cs
inc
sub
pop
add
js
sbb
and
mov
test
cmp
mov
lahf
cmp
xchg
jne
xchg
sbb
cmps
sub
out
scas
add
out
push
push
inc
jle
mov
inc
cmp
data16
jbe
in
adc
xor
adc
je
sub
inc
push
push
inc
pop
daa
xchg
adc
xor
pop
(bad)
fwait
ins
push
rcr
xchg
jge
cmp
pop
dec
sbb
jmp
mov
je
adc
adc
ins
adc
push
push
and
cmp
push
loop
jbe
or
je
inc
or
jbe
mov
outs
fcmovb
mov
xchg
or
push
and
lahf
push
push
jle
mov
imul
cdq
mov
js
fistp
fidiv
push
dec
cmps
push
adc
fs
jmp
stos
loopne
nop
mov
cmp
ffreep
rcl
or
mov
iret
cmp
ret
mov
dec
(bad)
lods
ret
sbb
call
call
ss
dec
movs
sahf
into
call
jbe
sbb
mov
cmp
jbe
jnp
and
cmp
repz
mov
(bad)
jnp
sbb
dec
lods
out
dec
shl
aad
in
ret
xlat
fdivr
mov
or
dec
enter
sti
sbb
push
scas
and
gs
sbb
test
jp
mov
push
scas
inc
arpl
and
ror
jmp
int3
sub
loopne
adc
clc
mov
fbstp
std
push
mov
and
xchg
and
ja
pop
pop
mov
les
mov
int
iret
cwde
adc
inc
mov
adc
lock
mov
mov
push
fcomp
sahf
add
loop
sub
repnz
push
xchg
inc
pop
push
shl
push
inc
cli
dec
mov
mov
push
fild
call
push
in
xor
add
pushf
popf
inc
or
arpl
je
mov
call
scas
mov
ds
jo
aas
cmp
ins
and
mov
(bad)
shl
jb
es
call
aad
push
or
loopne
je
mov
ins
and
cmps
inc
mov
inc
daa
sar
cmp
add
clc
popf
push
popf
out
xlat
dec
sub
(bad)
mov
jp
daa
push
loope
pusha
cmp
cs
test
mov
mov
sub
dec
rol
xor
inc
aaa
leave
and
arpl
jge
jns
mov
xor
and
mov
jmp
pop
and
sbb
fild
lahf
mov
jge
add
dec
cmp
jnp
sar
es
fdiv
out
or
ins
sbb
rcl
fisub
scas
inc
cmc
stos
mul
jnp
sar
loopne
cmp
pop
cmp
mov
xor
dec
or
xchg
fwait
sbb
addr16
cmp
inc
rdtsc
push
cld
sbb
call
rol
pop
xor
push
and
sub
push
or
xchg
shr
xchg
shl
jp
hlt
push
add
pop
xchg
imul
lahf
xchg
out
jbe
into
jmp
je
and
aam
aaa
cs
pop
inc
mov
test
pushf
inc
pop
mov
mov
mov
push
pop
fs
lods
adc
clc
mov
push
xchg
xchg
sub
ret
rol
aas
aaa
mov
daa
pusha
mov
fwait
adc
add
aaa
stos
inc
out
je
(bad)
in
test
retf
into
xchg
ja
xchg
in
ret
stc
adc
pop
add
add
pop
test
cmps
sub
aam
or
lds
enter
mov
lahf
xchg
call
inc
xor
sahf
movs
jne
fdiv
xchg
mov
xchg
imul
in
out
shl
pop
pavgb
sbb
inc
in
mov
cmc
je
lea
xchg
je
jae
cs
sbb
(bad)
push
xchg
les
ins
repnz
cmp
jns
jge
jecxz
cmps
jno
ficomp
mov
and
push
mov
or
rol
lea
and
sar
nop
mov
shl
sahf
push
mov
rol
mov
pop
sub
lock
int
shl
adc
add
pop
dec
jl
add
push
rcl
cmp
pop
in
jno
test
mov
mov
and
cmp
stc
call
cwde
lea
push
dec
pop
cld
xor
shl
dec
jle
stos
xchg
mov
pop
inc
mov
scas
hlt
jae
and
sub
jbe
xor
pop
pop
adc
jae
xchg
hlt
add
mov
push
pop
jmp
pop
jae
jmp
mov
lods
fs
cmp
adc
mov
sar
xor
xor
push
stos
outs
les
jecxz
mov
test
sahf
sub
dec
sbb
add
out
dec
or
sahf
popa
sub
add
add
jo
pop
sub
dec
push
or
adc
jns
mov
lods
pop
adc
call
mov
push
gs
cs
xor
es
std
add
out
add
adc
jecxz
pusha
ror
jmp
xchg
das
add
(bad)
cld
push
fsub
test
fbld
movs
fs
enter
mov
repnz
xchg
mov
cs
(bad)
push
inc
fadd
xchg
jg
mov
jb
jo
cmp
cmp
shr
push
cmp
inc
sbb
dec
into
call
imul
dec
or
dec
das
xor
or
aaa
icebp
lock
sub
xchg
(bad)
jmp
adc
or
(bad)
jp
aad
xchg
xchg
out
mov
cmp
adc
ret
jno
(bad)
lods
inc
les
out
jo
pop
or
pop
sub
add
inc
std
jae
(bad)
adc
das
(bad)
or
repz
mov
inc
sbb
jo
popa
retf
faddp
mov
jnp
ror
sbb
data16
dec
sahf
and
into
inc
cmps
or
out
pop
inc
jb
xchg
js
mov
jecxz
xchg
jne
ja
fiadd
pop
and
sub
sub
hlt
repnz
inc
xor
lahf
(bad)
cli
push
mov
nop
pmovmskb
scas
jecxz
lds
ds
and
mov
pop
adc
in
into
sub
xchg
in
push
sbb
or
pusha
std
xor
pop
xlat
mov
jne
xor
mov
sbb
lahf
outs
in
dec
xchg
call
mov
test
jb
leave
mov
add
xchg
xchg
enter
cld
in
mov
adc
test
pop
push
adc
(bad)
sub
das
pop
stc
or
jns
pop
jp
loopne
popa
cmp
out
cmps
jp
daa
mov
mov
call
push
clc
ror
data16
add
test
std
and
stc
mov
adc
adc
cmps
sbb
adc
arpl
mov
ret
std
(bad)
and
adc
inc
mov
pop
das
or
ja
cdq
aam
sbb
out
mov
(bad)
dec
iret
das
mov
xor
sbb
xlat
ffreep
aad
push
jb
pop
adc
mov
jb
dec
inc
cdq
inc
test
mov
into
int
aas
lods
loop
je
add
lods
lds
repz
pop
xlat
cmps
jne
sub
mov
int
movs
ins
pop
mov
movs
shl
retf
add
adc
scas
mov
push
cs
loopne
repz
call
jne
cmp
mov
sbb
sub
sar
mov
mov
arpl
xchg
add
addr16
push
push
mov
daa
pop
retf
jg
lods
les
sbb
cmp
mov
cwde
or
or
(bad)
jge
cs
sub
or
out
hlt
add
add
cmp
mov
adc
adc
out
sub
mov
ja
jmp
fs
add
adc
push
ds
pop
pop
retf
(bad)
fadd
loope
in
ja
jbe
imul
sti
mov
les
add
inc
mov
or
(bad)
fbstp
mov
nop
sub
shl
cmp
std
shl
jp
rcl
add
loope
pop
xchg
daa
or
jp
jo
push
test
push
clc
in
pop
xor
xchg
test
aaa
mov
mov
loope
push
retf
jno
lods
jmp
xlat
mov
lods
cli
mov
mov
(bad)
dec
sbb
retf
xlat
jl
es
sub
mov
adc
loope
jle
sub
mov
pop
movs
fmul
int
out
mov
dec
pushf
call
mov
dec
xchg
pushf
add
in
mov
push
fsubr
test
push
into
pop
inc
movs
popf
or
and
xor
mov
outs
mov
mov
movs
(bad)
in
test
mov
mov
mov
dec
or
nop
push
jne
ss
pushf
pop
sub
dec
sbb
dec
dec
or
inc
mov
push
icebp
dec
aaa
xor
rcl
mov
mov
cs
aad
and
cld
pop
(bad)
les
inc
mov
popf
mov
lds
add
movs
xchg
jmp
add
mov
scas
mov
mov
lock
pop
mov
loopne
nop
dec
mov
stos
sub
jg
cmp
push
test
jb
test
push
xor
mov
loop
add
pop
leave
(bad)
cdq
adc
das
xor
and
inc
jmp
cmps
lods
les
repz
sbb
jbe
mov
imul
repz
std
mov
movs
jae
out
pop
xor
icebp
les
std
popa
jg
pop
xor
fwait
shl
dec
imul
jl
xor
fdivr
loopne
xor
jle
xchg
add
fnstsw
xchg
outs
and
xchg
xchg
sbb
mov
fmul
adc
sti
fsubr
pop
xabort
imul
push
push
test
mov
adc
mov
out
or
ror
imul
add
scas
sub
stc
or
mov
jge
out
mov
push
jmp
retf
in
mov
dec
push
sub
or
lock
rcl
das
aad
jns
add
scas
cmp
inc
daa
mov
and
jg
lods
xchg
movs
sbb
mov
aas
fs
xchg
mov
test
pop
test
fdivr
(bad)
in
(bad)
cmp
stos
add
sbb
add
and
lea
in
in
add
pop
repnz
xor
int3
pushf
(bad)
mov
xchg
call
int3
adc
pop
inc
pop
push
neg
dec
dec
ss
dec
sar
cdq
mov
(bad)
test
add
dec
ret
out
(bad)
dec
push
jle
sub
sbb
test
xchg
(bad)
scas
or
jae
mov
loop
cmc
and
mov
add
add
or
adc
out
mov
ret
jnp
pop
pop
int3
les
neg
enter
dec
mov
shr
xor
xlat
lahf
dec
add
addr16
dec
ins
retf
repnz
inc
fimul
sbb
xchg
ss
push
mov
fs
or
lahf
retf
test
push
mov
test
dec
popa
push
and
cli
cmp
mov
and
mov
scas
jp
inc
mov
mov
and
ror
ins
add
dec
sbb
inc
mov
xchg
in
fidivr
inc
sbb
aam
cmp
lahf
push
pop
mov
xor
and
dec
or
sbb
imul
dec
jp
ss
lods
shl
push
or
cmp
inc
pop
or
jmp
retf
rcr
loopne
out
stc
mov
aam
not
sbb
xor
std
aaa
ins
gs
stos
adc
lds
mov
out
ds
sub
mov
inc
loopne
sub
pop
xlat
and
push
ffreep
in
inc
sti
jns
cmp
ins
push
inc
xchg
xor
cmc
add
das
in
pop
xchg
or
push
out
inc
adc
sub
and
inc
jo
jne
add
jle
cmp
dec
out
repz
lock
jmp
(bad)
mov
(bad)
shr
xchg
inc
and
retf
aaa
mov
jb
int3
sub
mov
ficom
mov
mov
jne
(bad)
iret
mov
adc
mov
and
dec
mov
add
(bad)
pop
dec
add
ins
push
mov
xchg
mov
cmp
xor
imul
mov
ffreep
mov
inc
and
scas
(bad)
adc
sub
or
movs
scas
mov
stc
pop
push
outs
pop
lods
fmul
cmp
mov
jmp
rcl
jecxz
std
and
mov
jmp
jge
(bad)
ficomp
jo
sbb
sar
loopne
xor
sub
cmp
dec
out
int
push
test
xor
or
sub
outs
jl
cmp
in
sahf
mov
mov
aaa
das
and
cli
dec
jmp
jae
dec
mov
or
pop
nop
pop
out
cmps
xlat
loope
iret
adc
data16
cs
jmp
shl
dec
dec
mov
jnp
and
mov
arpl
jo
mov
popa
add
or
fdivr
xor
das
dec
ss
mov
ins
out
aam
dec
pop
mov
and
mov
les
mov
inc
adc
jne
sbb
cmps
mov
rcr
scas
jge
scas
test
js
cmc
(bad)
ins
pop
cli
or
scas
cmc
(bad)
clc
adc
sahf
push
and
ret
jmp
mov
xchg
aad
div
fistp
jne
shl
cmp
aaa
lds
inc
jbe
ds
xor
dec
xchg
pop
mov
clc
push
add
cld
rcl
daa
test
fcomip
cmps
mov
data16
xchg
sub
cli
adc
sub
out
mov
mov
sub
out
xchg
adc
jge
push
leave
call
xchg
jno
dec
mov
mov
or
add
ds
inc
scas
pop
outs
xor
jp
xchg
mov
pop
iret
stc
repnz
ja
mov
loop
enter
and
sbb
retf
int
sbb
mov
jecxz
pop
nop
cli
icebp
push
in
mov
imul
mov
clc
jbe
pop
daa
sbb
mov
iret
push
ins
cdq
arpl
into
inc
mov
loopne
jmp
push
stc
add
xlat
not
jg
mov
movs
test
fwait
sub
cmp
fsubr
mov
pop
ja
mov
pop
push
xchg
dec
test
popa
lock
stos
sbb
xchg
stos
sar
(bad)
and
add
nop
fistp
add
inc
daa
ss
in
fldln2
sbb
mov
mov
add
jmp
push
addr16
iret
imul
inc
and
dec
pop
jo
sahf
scas
and
sbb
jb
sub
add
dec
mov
mov
mov
js
xor
and
jae
pusha
js
pop
add
pop
int
jmp
sub
fsub
adc
rcr
aam
pushf
xchg
addr16
in
imul
fisttp
adc
and
dec
sub
lods
movs
data16
out
arpl
loop
mov
mov
mov
imul
nop
push
jb
jnp
pop
in
ja
dec
sar
es
jns
nop
enter
mov
mov
push
pop
pop
les
mov
mov
inc
jle
adc
out
pushw
(bad)
push
in
pop
adc
out
test
mov
popf
jmp
fmulp
aad
inc
mov
call
add
jl
pop
or
mov
adc
xor
push
fimul
in
mov
pushw
scas
fstp
xchg
cmp
loope
adc
adc
cmp
hlt
in
xchg
push
inc
and
jl
fwait
test
mov
ins
jp
clc
pop
or
lea
add
fild
sbb
or
lea
(bad)
mov
xchg
fidivr
(bad)
leave
xchg
jb
xor
xor
inc
mov
dec
daa
ror
jecxz
xchg
and
xchg
xlat
pop
jo
sbb
xor
in
into
inc
mov
jg
leave
movs
sahf
out
imul
inc
sbb
sub
cmp
jl
add
leave
int3
or
in
test
push
dec
mov
fs
push
fisub
add
rcr
lds
mov
jne
push
fidivr
punpcklbw
sub
movs
mov
xlat
lock
ds
jg
in
jb
mov
cdq
aam
xor
adc
div
inc
std
sbb
mov
sbb
sbb
add
rcr
jne
dec
imul
(bad)
clc
dec
ins
xchg
test
enter
test
push
mov
adc
iret
test
mov
or
jmp
xchg
imul
mov
dec
shl
or
pop
mov
pop
or
xchg
int3
xchg
not
leave
js
scas
or
jecxz
arpl
xchg
or
add
hlt
mov
mov
mov
mov
jo
cwde
push
outs
popf
mov
add
(bad)
nop
addr16
shr
(bad)
mov
jp
leave
idiv
int3
shr
or
xor
addr16
add
add
xchg
and
out
mov
mov
cmp
sub
repnz
cmp
hlt
cwde
lahf
aas
and
lods
rcr
inc
push
mov
fs
mov
xchg
in
in
and
pop
add
inc
loopne
cmps
push
xlat
sub
out
imul
xlat
cli
add
repnz
pop
out
test
or
jmp
cmps
cmp
inc
sub
stc
jp
nop
push
shl
cmp
mov
jns
sbb
jmp
mov
mov
pop
or
call
test
xchg
push
inc
arpl
enter
inc
stos
push
xor
push
jmp
data16
shl
cmp
mov
sub
es
addr16
xchg
cmc
jge
mov
int
aas
mul
xchg
in
popf
inc
das
pop
ds
in
or
inc
add
pop
(bad)
cli
dec
ror
push
sahf
fstp
mov
repz
adc
sub
test
sbb
adc
cmp
jmp
sub
xchg
cmps
mov
int
dec
adc
mov
or
adc
push
lea
lods
cmp
retf
(bad)
es
push
mov
push
push
test
dec
adc
das
js
add
add
shr
sti
or
jmp
push
mov
sub
pop
pop
shr
popf
and
fisub
adc
aam
adc
clc
das
mov
xchg
jno
inc
mov
aaa
jmp
jne
or
xchg
leave
rcr
and
fcomip
adc
mov
es
xchg
stc
test
inc
mov
cs
(bad)
xchg
ins
shr
stos
les
mov
jecxz
dec
fisttp
mov
cmps
mov
jp
fs
and
jp
add
add
fnstenv
adc
inc
dec
cmp
add
mov
loopne
pop
push
and
inc
jecxz
add
fistp
ss
std
cmps
jno
pop
cmps
or
lea
sti
in
scas
and
ins
jecxz
cmps
arpl
aaa
cdq
ret
adc
nop
pop
mov
aas
outs
test
xor
add
add
and
and
scas
push
jns
es
dec
push
mov
or
xor
test
adc
jecxz
call
retf
mov
adc
mov
jle
mov
repz
jno
in
das
pushf
jge
cmp
(bad)
sub
cmp
jmp
or
ins
dec
inc
js
mov
stc
mov
out
in
jne
and
sbb
jp
dec
jns
rol
fwait
icebp
lea
icebp
xor
mov
pop
das
movs
xor
jns
xlat
dec
arpl
sbb
(bad)
dec
or
or
and
fsubr
cmp
and
pop
pop
shl
push
(bad)
fistp
mov
cmp
pop
out
test
pop
xchg
test
lods
or
add
cmp
jb
xchg
sub
popf
test
lods
imul
mov
mov
mov
mov
daa
jle
ret
cs
pop
shl
sub
icebp
jmp
pusha
pop
add
xchg
pop
sbb
xor
arpl
in
mov
pop
stc
xor
and
ja
repnz
outs
outs
xchg
adc
ret
xchg
nop
add
jmp
mov
dec
stc
adc
fsubrp
cld
sub
sbb
pushf
aaa
aaa
mov
push
scas
and
mov
inc
pop
pop
in
pop
sbb
cmps
fcmovnbe
(bad)
push
xchg
dec
adc
push
add
sbb
arpl
jmp
xor
mov
sub
(bad)
mov
jmp
das
stos
loope
push
(bad)
(bad)
fdiv
fldcw
sub
hlt
movs
and
mov
sub
(bad)
mov
mov
call
inc
inc
mov
push
in
adc
popa
in
sar
jbe
idiv
inc
cmp
(bad)
xchg
inc
xor
jl
pop
xchg
mov
and
push
sbb
movs
jle
outs
cmp
mov
add
adc
sbb
rcr
sbb
push
or
pop
bound
mov
cmp
mov
cmp
pop
jbe
xchg
cmp
pop
sub
xchg
in
add
dec
xor
xchg
repz
ret
es
rcl
adc
cmp
push
mov
sub
pop
and
mov
clc
adc
test
mov
jecxz
add
xor
xchg
cmc
mov
out
or
mov
and
sbb
add
out
and
call
hlt
xor
pop
add
lea
aas
mov
xor
xor
pop
jb
aas
pop
pop
out
sub
push
fimul
or
cmc
mov
pop
daa
pop
(bad)
or
xchg
dec
or
push
test
pop
scas
push
dec
jmp
mov
cmp
xchg
neg
cmps
jl
mov
push
std
add
and
fnstenv
pop
imul
or
adc
call
push
cs
out
mov
xchg
dec
daa
xor
xchg
into
fadd
ret
mov
jbe
xlat
pop
(bad)
dec
ret
mov
jmp
call
pushf
dec
inc
test
test
jp
xchg
popf
aad
jge
stos
mov
adc
mov
es
sahf
ss
mul
aam
gs
xchg
pop
mov
fidiv
jle
fdivr
push
push
sub
imul
loopne
test
xor
cli
add
jmp
cmp
xor
lods
jno
push
retf
jecxz
xor
data16
mov
sbb
mov
jb
and
cmps
sbb
(bad)
fnstenv
mov
dec
repnz
add
dec
or
push
gs
int3
jae
stos
sbb
pop
jg
xor
pop
push
mov
ins
pop
mov
addr16
fadd
test
sub
push
mov
pusha
fcom
shr
adc
lods
or
jmp
dec
push
cdq
test
jge
or
jbe
xor
cmp
adc
sub
mov
loop
outs
fdivp
xor
sub
mov
inc
push
shr
lds
fmulp
movs
aam
mov
add
cs
lods
or
mov
gs
xchg
pop
xor
call
or
mov
dec
inc
and
mov
xchg
popf
mov
dec
gs
lods
dec
sub
dec
cmp
test
push
fisub
ret
adc
dec
ret
mov
in
jecxz
ror
iret
jbe
cld
mov
xor
test
outs
pop
mov
je
inc
lahf
ret
mov
push
adc
dec
cwde
inc
in
aad
out
jmp
imul
adc
pop
popf
addr16
stos
jae
inc
jmp
out
add
xor
adc
push
mov
lock
sbb
scas
lock
xlat
add
inc
adc
or
test
mov
push
gs
je
std
enter
xchg
sub
rcl
call
and
xor
or
jg
arpl
bound
push
or
mov
loop
movs
push
jae
push
add
ret
out
fst
pop
les
cmp
nop
rcr
xchg
sub
sahf
ds
mov
xchg
inc
xor
cmps
das
loope
cld
enter
sub
mov
cmp
xchg
je
loope
ds
cmc
cmp
lahf
loop
or
cmps
pop
in
xchg
jle
cmps
hlt
pop
mov
jmp
aad
jp
out
mov
shl
mov
jno
adc
and
(bad)
adc
test
push
and
dec
add
and
aaa
stc
enter
xchg
in
fsubr
rcr
scas
mov
(bad)
outs
mov
adc
mov
mov
pop
nop
ja
mov
mov
inc
shl
pop
mov
or
mov
jg
data16
pop
xor
xor
add
aas
jp
push
test
(bad)
push
in
cmp
fs
add
fmul
fnstsw
das
cmp
cmps
fadd
xchg
inc
ins
mov
or
pop
inc
jp
(bad)
outs
pushf
repnz
je
fdivr
shl
cmp
pop
xchg
out
jmp
call
mul
ror
shr
repnz
ror
lods
and
mov
sti
xor
mov
imul
xor
aaa
call
dec
mov
stos
lds
scas
sub
sahf
xchg
(bad)
sub
(bad)
dec
repnz
(bad)
and
xor
in
mov
mov
sub
mov
inc
arpl
in
int3
fnsave
jo
add
xchg
loop
push
ror
pop
jb
pusha
lods
lods
sbb
shl
icebp
adc
pop
aas
pop
mov
fild
imul
and
add
cmp
sub
inc
xchg
push
or
in
popa
xchg
jecxz
retf
mov
cs
ret
clc
push
cmp
sub
mov
pop
je
fild
adc
adc
imul
or
(bad)
push
daa
sahf
iret
xor
pop
or
(bad)
adc
jge
sbb
pushf
stos
ins
sbb
inc
bound
add
shl
call
je
mov
in
cmc
dec
sub
std
in
mov
sahf
jmp
shr
pop
push
add
and
add
sub
nop
pop
out
or
cmp
add
popf
pushf
cwde
dec
sti
or
and
stos
add
xlat
not
add
sti
xchg
lahf
addr16
jb
pop
xor
fwait
loopne
out
cmp
(bad)
push
je
mov
stos
ja
mov
inc
or
cdq
mov
xchg
mov
pop
test
adc
fwait
sub
in
cmp
test
jns
cmps
leave
sbb
sub
dec
sub
mov
or
or
and
lds
rcr
mov
and
cmp
jno
adc
(bad)
aam
sub
gs
retf
pop
ret
mov
jbe
mov
xchg
out
and
ss
dec
pusha
out
jo
add
sub
popa
in
xor
pop
xchg
in
add
and
or
mov
jge
ss
jmp
test
adc
or
mov
popa
test
xor
xor
sub
mov
in
fiadd
call
push
sub
dec
fistp
jl
test
shl
popf
jnp
or
jle
cmp
mov
jl
push
jg
pop
fcomp
mov
adc
(bad)
adc
push
loopne
repz
repnz
fsubr
scas
je
shr
stc
fsubr
jbe
pop
sbb
mov
xchg
push
test
lea
xor
or
bound
out
and
repz
push
push
imul
gs
cmp
icebp
inc
or
jmp
mov
push
jnp
es
inc
inc
lahf
out
push
cmc
sbb
jns
cmp
pop
jbe
adc
in
mov
lock
mov
fwait
lds
(bad)
lahf
cmp
daa
xchg
in
pop
xchg
jmp
outs
push
xor
sub
(bad)
xchg
into
mov
cdq
push
sub
shl
out
mov
sbb
jbe
pop
dec
fwait
and
push
(bad)
mov
cmc
out
dec
into
or
ins
sub
adc
jl
push
scas
inc
arpl
movs
mov
retf
in
imul
in
add
jmp
inc
inc
jmp
add
jle
jge
je
call
outs
bound
pusha
jae
dec
aas
adc
out
xor
jmp
xor
(bad)
cmp
or
cmp
inc
call
jl
add
retf
dec
int3
or
sbb
dec
movs
test
jp
mov
mov
mov
mov
jg
or
sahf
jecxz
xchg
push
nop
ror
jo
xor
in
fbstp
outs
lds
sahf
and
cmp
add
addr16
fldcw
inc
dec
sub
ret
pop
jecxz
push
push
cmp
repz
in
push
mov
mov
dec
and
inc
cmc
ins
mov
out
lock
cmp
push
psrld
xchg
add
inc
xor
jb
jne
cmp
movs
xchg
(bad)
cmp
adc
shr
(bad)
fnstcw
arpl
rcl
mov
cmp
mov
cdq
push
fwait
pop
inc
xchg
jp
iret
jno
sub
mov
fldenv
sub
lds
sub
mov
add
or
and
xchg
sbb
and
(bad)
in
or
hlt
rol
sub
dec
aad
ret
add
add
adc
pop
and
cs
dec
and
aas
ja
enter
or
mov
mov
pop
inc
xor
mov
scas
(bad)
in
mov
and
fs
rcr
cmps
pop
leave
sub
or
sub
pop
inc
cmp
jg
inc
jne
popf
std
stos
cmp
int
(bad)
arpl
cmc
sbb
(bad)
out
jo
jmp
and
mov
mov
mov
aad
addr16
mov
pop
adc
mov
enter
pop
pushw
lahf
push
sti
push
repnz
mov
ins
adc
sub
pop
inc
mov
push
jle
fsub
pop
adc
rol
xchg
pop
test
xchg
mov
push
sbb
inc
jmp
jo
add
cmp
mov
outs
mov
bound
inc
jmp
sub
cwde
scas
rcl
mov
retf
lahf
shr
xor
mul
(bad)
out
rcl
xor
add
dec
xor
cmps
cmp
push
mov
sub
iret
jmp
and
lock
sti
pop
pop
lahf
dec
jne
dec
ins
push
ror
cwde
in
push
cmp
add
jl
mov
(bad)
mov
loopne
jae
mov
mov
or
popa
sahf
inc
pop
addr16
xchg
sbb
push
out
jg
idiv
jb
fidiv
mov
mov
ds
in
ret
iret
cmps
imul
jg
xchg
sub
cmp
fcomip
lahf
mov
stc
mov
mov
fistp
sbb
bnd
and
(bad)
movs
retf
jg
jmp
or
fisubr
jp
inc
xchg
fidiv
popa
cs
frstor
(bad)
push
or
jmp
(bad)
in
fild
fiadd
jmp
les
mov
std
push
retf
mov
shr
or
xchg
adc
mov
std
call
sbb
pop
jg
sub
rol
xor
xor
les
xlat
mov
ins
daa
je
lds
gs
xchg
jmp
xchg
(bad)
sbb
xchg
dec
retf
mov
sti
cmp
sbb
loopne
lahf
outs
loope
sbb
add
sub
jnp
fincstp
ret
outs
mov
gs
dec
xchg
cmp
and
ds
ds
retf
or
jnp
cmp
popf
inc
jecxz
rol
sub
sub
std
push
adc
or
sub
(bad)
pop
xor
adc
push
jo
jbe
retf
out
into
mov
inc
xor
mov
sub
dec
pop
imul
pop
push
xchg
lods
cmp
pushf
push
xchg
dec
rcr
xor
icebp
ret
stc
(bad)
fstp
fwait
bnd
test
cmp
lods
adc
movs
icebp
push
in
ret
jmp
in
into
aas
imul
call
jo
jno
push
xchg
lock
xchg
xchg
jmp
push
xor
icebp
xor
adc
jp
cmp
call
mov
mov
jecxz
mov
jnp
pop
push
lock
jno
xor
jnp
pop
retf
out
mov
arpl
sub
sub
jnp
rol
inc
jb
dec
cmc
imul
fild
rcl
sub
loop
inc
pop
mov
pop
int
sar
test
loopne
stos
pop
push
or
icebp
or
jns
ror
sar
jl
sbb
movs
fistp
mov
push
movd
jb
sub
inc
xor
push
js
adc
sbb
push
cwde
xor
cmps
and
int3
lea
push
(bad)
jmp
and
test
in
push
pop
jg
iret
js
nop
mov
xor
je
jle
fimul
sub
jecxz
outs
mov
clc
(bad)
loope
mov
cdq
jle
push
adc
ror
mov
(bad)
sub
cld
pop
movs
(bad)
sti
dec
jmp
(bad)
push
dec
mov
call
xchg
sub
jl
mov
push
cmps
movs
mov
add
cmp
jmp
adc
inc
aaa
mov
and
cld
sbb
loop
mov
or
outs
cmps
jbe
das
ins
push
clc
(bad)
mov
inc
cmp
stos
cli
cmps
push
sub
sti
jp
mov
mov
(bad)
mov
add
outs
ror
add
retf
pop
cmp
data16
mov
pop
imul
cmp
push
popa
mov
movs
cwde
or
sub
inc
(bad)
outs
jl
fiadd
retf
adc
lahf
xchg
test
cdq
mov
repnz
gs
out
dec
ins
xor
push
cdq
adc
xchg
(bad)
xchg
add
push
push
push
or
mov
jo
sbb
xchg
cs
push
pop
outs
and
or
mov
add
pop
adc
test
test
test
sub
push
xor
or
shl
and
pop
(bad)
movs
xchg
pushf
inc
pop
retf
cmp
mov
dec
push
loope
inc
push
mov
(bad)
int3
ds
scas
lahf
scas
or
pop
sub
sbb
xchg
sbb
and
xor
add
jl
cmc
sbb
mov
call
jle
das
cmps
lea
fisttp
imul
sbb
int
jle
mov
fidiv
pop
dec
xor
ret
adc
xchg
and
xor
je
in
xchg
mov
movs
mov
or
push
aam
scas
iret
inc
dec
xchg
cli
dec
mov
addr16
xchg
sub
cmp
xor
pop
sbb
mov
(bad)
sub
enter
mov
xlat
iret
and
cdq
mov
xor
or
adc
add
and
mov
cmps
imul
ins
xchg
les
dec
js
fs
dec
sub
xor
inc
sub
push
lea
lea
movs
retf
cmps
and
xor
mov
imul
loopne
jmp
xchg
or
call
daa
or
cld
aas
mov
stc
jbe
push
jle
or
das
inc
fcmovne
ds
xchg
out
sub
and
js
mov
rcr
cld
dec
mov
std
ds
push
leave
cs
jp
push
aad
xchg
sbb
inc
in
jo
and
push
mov
dec
mov
sbb
jmp
(bad)
cli
push
xchg
aad
in
xor
rcr
dec
scas
fidiv
int
inc
and
stos
adc
int
sub
dec
mov
aam
fldcw
repz
int3
sbb
outs
inc
fist
inc
mov
mov
pop
dec
aad
jne
jmp
jae
ins
jbe
aas
loope
dec
je
(bad)
cmc
xor
rol
mov
cmps
pop
outs
pop
lods
add
movs
lea
push
fcom
aas
test
mov
ror
leave
popa
inc
(bad)
push
sar
test
frstor
js
cmp
lds
mov
mov
js
add
sub
nop
(bad)
pop
inc
shl
dec
and
cmp
dec
xchg
cmp
lods
cdq
sub
arpl
cmp
jp
sub
rol
mov
xchg
xchg
jle
dec
sub
scas
das
call
xlat
jle
out
adc
cmps
lahf
inc
rcr
add
inc
adc
mov
push
pop
out
fst
xchg
inc
test
mov
fnstenv
lods
stos
test
dec
adc
fisttp
mov
pop
pop
ret
dec
xor
jo
jge
daa
jmp
dec
js
mov
pushf
cli
push
or
ffreep
scas
adc
mov
cmp
div
out
(bad)
addr16
jmp
adc
cld
dec
mov
call
xchg
retf
jle
and
pslld
aam
stc
mov
and
ds
xchg
aas
sub
movs
mov
or
stc
fs
ds
lea
cmp
xchg
into
mov
(bad)
out
add
xor
fwait
adc
loope
cmp
push
mov
ror
dec
cmps
das
outs
push
mov
jl
xlat
das
lds
addr16
inc
call
sar
xchg
sbb
or
or
mov
das
lods
rcl
inc
seto
popa
out
std
test
iret
pusha
fimul
stos
adc
fisttp
rcr
sub
iret
fstp
jns
sbb
jp
dec
mov
int
add
sub
dec
dec
je
arpl
push
int3
inc
sbb
pop
sbb
cwde
and
adc
cdq
jl
scas
scas
ja
or
cwde
mov
test
sbb
xchg
xor
sub
rcl
ret
stc
xor
dec
cmp
pusha
(bad)
aaa
xlat
popf
or
test
mov
mov
loope
popa
scas
push
inc
push
jl
cmp
pop
dec
pop
cmc
adc
jp
neg
bound
mov
imul
in
push
in
jo
(bad)
aad
lock
lahf
out
mov
or
outs
mov
rol
pushf
movzx
ror
in
pop
xor
dec
sub
pop
shl
sbb
je
arpl
and
push
lock
ds
jge
sub
adc
xor
xchg
sbb
loop
test
(bad)
popa
add
adc
push
add
cmp
imul
pop
nop
mov
xor
cmp
cwde
lahf
ds
ja
fdivr
lods
sbb
(bad)
mov
aad
movs
fs
push
mov
loopne
(bad)
(bad)
and
jae
or
fdiv
add
pop
push
mov
test
adc
sub
mov
test
sub
fwait
inc
mov
lahf
inc
arpl
inc
mov
data16
sbb
or
ss
clc
addr16
dec
xor
xchg
int
inc
mov
add
pop
adc
sub
cmp
ss
mov
in
xor
rcr
adc
mov
shr
shr
popa
cld
int
mov
jl
xchg
stos
mov
xor
xor
retf
int
push
iret
test
imul
pushf
jbe
inc
cmp
out
push
mov
and
jmp
adc
cmps
mov
pop
pop
jnp
in
in
xchg
add
inc
aam
arpl
xor
push
outs
pop
or
js
rcr
in
jecxz
xchg
scas
mov
and
sbb
js
mov
xchg
cmp
ins
and
rol
out
les
ins
add
out
xor
enter
jmp
push
and
call
enter
loope
fdiv
xor
jb
ret
jne
jmp
outs
rcr
push
push
(bad)
sbb
pop
aaa
cmc
xor
or
sbb
ins
in
jmp
mov
xor
add
and
cwde
movs
loopne
push
lock
pop
inc
push
mov
adc
rcr
mov
sub
and
sbb
jle
xor
push
ja
scas
adc
jns
js
mov
jp
dec
icebp
sub
push
aad
push
jo
cmps
sahf
push
hlt
dec
lahf
sar
jbe
lock
leave
daa
ins
or
pushf
mov
add
mov
je
loope
es
xor
mov
idiv
in
ins
push
pop
mov
mov
jns
cs
push
(bad)
es
(bad)
pop
mov
shl
sti
dec
aas
(bad)
sti
inc
or
in
cwde
out
in
in
call
popf
stos
(bad)
jmp
cmp
mov
fisttp
inc
sub
(bad)
push
add
pop
test
mov
hlt
xlat
cwde
mov
inc
popf
std
es
hlt
xor
mov
mov
sbb
push
or
sbb
enter
push
mov
or
mov
js
ret
pmullw
inc
pop
pop
or
or
test
add
xchg
sub
dec
outs
into
mov
add
sbb
jg
xchg
mov
fild
addr16
lds
aaa
cmp
cdq
pop
es
fs
mov
dec
enter
and
lock
iret
dec
mov
mov
cs
inc
fadd
jb
mov
adc
lods
xchg
xchg
js
xchg
dec
adc
pusha
ja
add
imul
ins
mov
sub
into
dec
jle
jnp
mov
sub
neg
aam
mov
xchg
or
jb
xor
lods
in
xor
(bad)
sar
ja
out
rcl
mov
mov
retf
test
adc
popf
imul
inc
push
xor
push
mov
push
add
and
push
not
mov
lea
das
int
sahf
push
int
jnp
sbb
mov
xor
test
cmps
loopne
imul
cmp
xchg
loopne
jmp
mov
xchg
mov
fnstsw
neg
inc
jmp
imul
jg
xchg
ficom
cs
inc
push
in
arpl
in
pusha
mov
add
jmp
rcr
push
nop
sar
inc
repnz
int
jg
add
dec
jl
or
int
loopne
xor
jbe
push
cmp
pop
mov
fwait
pop
jb
or
dec
inc
(bad)
or
push
aad
mov
mov
xlat
mov
mov
adc
movs
inc
sub
stos
out
pcmpgtd
jae
adc
cld
add
xchg
mov
sub
ja
adc
adc
cbw
idiv
shl
sub
(bad)
shr
lds
outs
add
cmp
ds
sub
(bad)
aad
cmc
lds
daa
ror
pop
xor
gs
popa
xchg
es
popa
cdq
movs
jge
fistp
and
lahf
out
cmp
leave
cmc
mov
test
pop
(bad)
xor
adc
in
and
and
loope
cmc
fistp
adc
in
in
jmp
ins
or
add
mov
inc
sub
ds
sbb
dec
test
jle
mov
lock
and
add
cmp
enter
cmp
add
cmp
out
cmp
sub
ja
push
or
into
div
(bad)
pop
push
sbb
add
jl
add
jecxz
sbb
jmp
(bad)
test
push
(bad)
mov
js
add
int3
pop
mov
loopne
out
cmp
imul
out
pushf
lock
sets
cmc
jmp
out
daa
xor
jg
push
xchg
ins
or
fld
mov
push
push
leave
enter
ins
out
push
out
mov
cmps
pop
push
in
test
lahf
clc
cmp
cwde
lock
push
cmp
mov
xor
and
call
mov
mov
dec
int
cmps
retf
sahf
pusha
mov
sub
repz
cwde
pop
cmp
push
push
cld
sahf
(bad)
rol
jbe
data16
cmp
cmp
mov
dec
cmc
ret
out
retf
imul
in
nop
aam
jg
sbb
in
cmp
push
mov
xchg
es
or
mov
xchg
cmp
cld
and
test
lods
int
pop
jo
pop
into
xchg
mov
push
adc
jns
cmc
test
jg
push
xchg
iret
push
into
mov
and
push
mov
pusha
adc
mov
mov
js
jmp
test
and
add
pop
cs
push
mov
popa
adc
(bad)
cmc
and
enter
pop
in
cmp
faddp
xchg
xor
push
daa
jnp
add
inc
bnd
jg
shr
movs
popa
call
ins
pop
xchg
mov
cmp
data16
(bad)
push
sub
movs
stc
jle
outs
lea
inc
dec
mov
fdivr
sbb
es
xor
loop
mov
js
xlat
sub
movs
jmp
call
push
adc
rcr
ret
mov
add
add
xchg
sbb
mov
push
addr16
or
data16
gs
mov
sbb
fldenv
mov
shl
imul
adc
sbb
inc
xor
aam
mov
loopne
mov
leave
lock
adc
retf
xchg
or
add
cmp
add
mov
shl
push
lds
xchg
inc
and
and
ret
or
jl
ss
sti
xchg
jns
inc
cmp
jle
jno
mov
rcl
mov
mov
in
call
mov
mov
fsub
jb
das
cmp
xor
push
xchg
ror
pop
and
xchg
shl
add
mov
mov
lods
in
jo
sahf
sbb
aas
test
pop
fild
sahf
ficomp
push
gs
dec
or
pop
add
cmp
dec
sub
mov
cli
push
jnp
cmps
xchg
mov
ds
shl
jl
pop
test
push
icebp
mov
push
retf
adc
and
cmc
or
imul
cld
lds
(bad)
scas
and
pop
enter
jnp
lea
xchg
push
mov
(bad)
js
and
sbb
dec
mov
add
jne
add
cdq
xchg
in
test
je
dec
movs
repz
inc
outs
xor
xchg
outs
lods
ja
fwait
sub
adc
(bad)
pop
or
movs
sub
mov
fcom
inc
xor
cmc
dec
or
jecxz
xchg
cmps
pushfw
ja
jns
cmp
rol
inc
in
sub
push
push
or
push
dec
es
jo
pop
rcr
adc
movs
add
sub
adc
je
or
cmp
cmc
cmp
cmp
or
mov
loopne
bound
adc
scas
mov
movs
movs
leave
stos
aas
adc
inc
inc
js
ins
lock
and
scas
mov
jmp
cmp
je
xor
push
sub
clc
mov
jb
hlt
ins
fwait
mov
dec
mov
cmp
(bad)
xor
mov
xor
es
pop
pop
jmp
dec
movs
int3
xchg
push
pushf
popf
in
js
or
fwait
and
ret
inc
jno
xchg
and
ret
sub
mov
ss
lds
mov
dec
fcom
jnp
test
fdiv
jp
push
cmp
fiadd
inc
imul
ins
jle
jns
add
push
mov
lods
push
cmp
dec
in
div
jl
cmc
out
fucomip
shl
popa
stos
cld
sub
das
mov
sub
out
(bad)
int3
xchg
jo
jae
cmp
cmps
pop
xchg
push
stos
inc
mov
jl
add
nop
cmp
mov
inc
xchg
push
clc
inc
inc
mov
imul
repnz
sbb
cdq
cmps
aad
sbb
mov
inc
(bad)
sub
loopne
xlat
shl
xchg
and
mov
jne
inc
clc
sub
mov
iret
data16
pop
pop
rcl
pop
pop
sbb
out
sar
push
aas
imul
test
cli
icebp
std
sub
add
int
ror
mov
mov
inc
imul
pop
test
lock
ins
sub
sbb
test
cmp
and
icebp
into
leave
push
push
xchg
add
sub
(bad)
mov
out
pop
adc
push
sub
ja
add
sti
mov
fisttp
mov
fprem1
mov
mov
test
popa
rol
inc
pop
dec
clc
in
add
adc
sbb
sbb
add
outs
cs
or
sti
call
sub
retf
fs
mov
outs
jle
xchg
dec
pop
stos
inc
xor
ja
xchg
xchg
or
sbb
repnz
lock
(bad)
dec
imul
mov
and
movs
xlat
xor
fs
jge
gs
loop
call
pop
jns
ins
ins
cmc
xor
jl
cmp
jmp
bound
and
call
addr16
mov
push
jne
cmp
rol
xchg
rcr
retf
clc
je
out
mov
rol
pop
mov
ficom
mov
cmps
(bad)
mov
sbb
loop
sbb
sub
addr16
hlt
sbb
popa
and
cmp
cmp
add
or
int3
imul
call
lods
inc
ret
add
fild
xor
fist
in
push
repz
(bad)
cmc
ror
xor
stos
test
test
call
aaa
loop
movs
push
add
pop
xlat
xor
mov
cs
pop
cs
fdiv
adc
dec
xchg
push
mov
sub
fiadd
sbb
mov
mov
scas
cmp
mov
bound
pop
adc
mov
sbb
pop
adc
das
mov
xor
sub
and
mov
clc
js
dec
sub
add
ins
shl
popf
retf
inc
jl
jg
cmps
clc
stos
scas
call
jb
outs
ja
or
mov
in
out
inc
or
xchg
cmp
sahf
in
add
or
sahf
xchg
pop
loope
js
loope
jge
jp
fdivr
mov
mov
dec
or
dec
movs
mov
cmps
dec
scas
xchg
ror
int
les
inc
jmp
jno
movs
jmp
push
mov
neg
js
nop
ins
in
cmp
movs
mov
cmps
xor
pop
call
and
jo
dec
xchg
or
mov
ins
mov
dec
inc
(bad)
pop
sbb
sub
mov
push
je
jne
in
rol
in
arpl
mov
dec
bound
xor
mov
in
shr
push
dec
adc
xor
pop
pop
(bad)
idiv
and
aad
adc
adc
and
sbb
mov
cmc
jl
or
inc
pop
les
test
mov
arpl
call
mov
cmovae
pop
inc
add
inc
mov
retf
(bad)
push
pushf
push
rcr
pop
jmp
mov
add
ds
or
pop
loope
mov
jle
fcomp
inc
jne
mov
lods
mov
jo
push
adc
out
and
cmc
jno
cli
push
xchg
imul
or
lods
imul
pop
jge
fnsave
pop
jo
rcr
pop
movs
sar
xchg
loopne
leave
or
ret
xlat
push
test
repz
dec
mov
das
imul
sets
xor
ds
test
cmp
xor
jle
sahf
mov
sub
sbb
dec
push
repz
(bad)
mov
xor
jecxz
or
sub
jae
fwait
into
inc
mov
cld
neg
or
pop
data16
(bad)
sub
and
add
add
adc
push
pushf
and
arpl
inc
mov
jno
push
pusha
les
ds
mov
cmc
std
aam
cmp
jo
dec
mov
sub
std
std
jne
jmp
hlt
xchg
iret
frstor
mov
push
lods
leave
mov
sub
and
inc
mov
sbb
cmp
div
push
push
popf
jmp
push
jle
enter
mov
add
nop
addr16
jns
sub
dec
jl
loopne
mov
ss
ret
sbb
loop
jmp
sbb
das
add
cmp
gs
mov
das
xchg
xor
sub
into
rol
mov
retf
(bad)
ins
imul
lods
aam
jg
push
xchg
stc
loop
ja
test
ror
or
push
scas
mov
add
ins
dec
add
pop
loopne
xchg
out
stos
pop
pop
lods
mov
lock
hlt
and
mov
mov
and
(bad)
das
in
pop
(bad)
jb
call
sbb
xchg
cli
mov
fnstcw
xchg
mov
and
mov
mov
retf
inc
xchg
outs
mov
sar
fwait
push
lahf
mov
jg
(bad)
mov
mov
sub
push
(bad)
mov
das
xchg
pop
out
test
leave
punpckhbw
inc
ds
rcr
or
xchg
ret
mov
or
ss
jp
mov
xchg
mov
outs
jns
pop
mov
adc
hlt
sbb
dec
sub
jp
cdq
and
addr16
add
cdq
jmp
lock
push
mov
loopne
jge
ss
js
push
pop
mov
push
fimul
test
xchg
push
pop
add
int
sahf
lds
adc
xcrypt-cfb
cmps
loope
imul
pop
scas
add
xor
jne
ss
aas
daa
dec
push
mov
and
sub
fs
xchg
xor
out
je
(bad)
sub
cmp
add
add
pop
bound
mov
ja
retf
pop
frstor
out
mov
jne
cmp
cmp
mov
sbb
mov
je
push
adc
pop
rcl
rcr
aaa
jecxz
sbb
cmp
add
mov
pop
dec
inc
call
test
mov
adc
arpl
adc
push
sti
sbb
jne
mov
sub
push
ret
dec
push
jnp
stos
cwde
test
xchg
(bad)
fwait
cmp
das
leave
cli
loopne
xchg
rcl
mov
in
and
cwde
call
std
adc
mov
and
pop
(bad)
aam
int3
add
fist
shl
retf
adc
inc
mov
cmp
cmps
dec
jmp
push
pop
xor
add
ret
mov
xchg
sti
es
add
push
(bad)
push
ret
test
or
mov
scas
outs
xor
dec
stos
es
cmp
mov
inc
repnz
aam
push
(bad)
retf
data16
mov
mov
jmp
ins
pop
(bad)
inc
in
and
adc
xchg
lods
repz
pop
pop
mov
cdq
outs
sub
sahf
(bad)
cs
inc
adc
pop
rol
adc
mov
imul
pop
mov
xor
push
scas
sbb
cmp
in
add
push
cmp
sahf
addr16
pop
imul
dec
jno
ret
hlt
or
jne
inc
fistp
fdiv
mov
fiadd
xchg
xor
add
sahf
adc
fdivr
mov
adc
test
add
mov
daa
int
pop
(bad)
or
fidivr
dec
sahf
fidiv
sbb
mov
loope
ss
dec
mov
repz
mov
push
aaa
(bad)
push
out
sub
pause
push
xchg
imul
cmps
gs
and
xchg
fsub
push
push
and
push
xor
push
or
gs
cmp
pop
xor
add
retf
and
das
scas
sub
mov
push
cmp
sbb
xchg
ret
dec
mov
mov
adc
add
aaa
xlat
and
xchg
pop
out
inc
pop
jmp
mov
js
popa
jne
fs
out
jmp
outs
fwait
(bad)
inc
pop
outs
dec
sbb
inc
xor
retf
aad
(bad)
cmp
jae
jl
(bad)
xor
mov
and
sbb
dec
repnz
ds
cmp
mov
mov
mov
data16
add
in
jbe
aas
xchg
pushf
mov
jl
jae
mov
data16
mov
loope
jmp
fcomp
stos
popa
sbb
cmp
sub
jne
sub
in
lds
bound
repnz
xchg
and
jp
std
or
dec
and
(bad)
sub
out
out
(bad)
out
inc
arpl
(bad)
fsub
push
mov
ret
mov
adc
or
xor
cmp
pop
cs
ficomp
mov
ficom
cmp
scas
dec
push
jmp
jge
push
add
mov
push
mov
mov
scas
enter
inc
movs
test
dec
xchg
add
frstor
xchg
xor
mov
mov
fucomip
ds
or
inc
xor
cld
popa
ja
sbb
pop
out
pop
mov
xor
add
ror
das
int3
add
(bad)
xchg
fbld
popa
into
jb
mov
mov
dec
nop
arpl
fld
mov
dec
mov
ja
jecxz
and
gs
dec
xor
aaa
fild
ja
jp
sub
dec
aam
xchg
xchg
icebp
mov
xchg
mov
fidiv
retf
sar
out
xchg
pop
retf
xchg
mov
enter
cwde
inc
adc
adc
xchg
fwait
push
sbb
push
cmp
(bad)
mov
dec
icebp
cld
dec
xchg
adc
fbstp
mov
jae
ds
js
pop
push
pop
mov
in
es
pop
cmp
mov
rol
(bad)
fcomp
out
inc
sbb
cmps
jge
fisttp
and
cmp
xchg
retf
cmp
enter
mov
add
test
sbb
jbe
vmwrite
jmp
in
xchg
in
shl
pop
cmp
ret
push
repnz
push
mov
retf
mov
add
sub
pusha
mov
cwde
ins
ds
gs
push
xor
cmp
mov
data16
push
pushf
mov
jmp
inc
sbb
pop
mov
push
jnp
cdq
inc
ins
mov
xlat
xor
xlat
mov
sub
int
mov
inc
les
jg
xor
jge
push
das
cdq
lock
dec
xchg
push
xchg
cmps
je
add
mul
adc
pop
or
out
lods
and
xchg
out
nop
inc
and
iret
add
cmp
sti
mov
cmp
and
jg
mov
push
xchg
arpl
sub
scas
daa
ret
jne
adc
sete
fistp
mov
add
cld
xchg
aaa
inc
icebp
jg
daa
cli
xor
out
jae
cmp
aas
ret
xchg
cmp
call
mov
pop
xchg
out
jge
(bad)
call
ja
lock
sub
push
lds
adc
dec
mov
cmp
test
(bad)
in
fnsave
jge
in
in
xchg
add
sub
xchg
call
jp
mov
mov
push
mov
lock
pusha
dec
sub
pop
mov
in
sti
mov
jae
pop
push
xor
int3
inc
and
in
fwait
pop
shr
jmp
jecxz
rol
fs
jae
or
test
fpatan
cmpleps
repz
pop
dec
cmp
push
jle
pop
jb
lods
inc
stos
out
adc
fdivr
and
lahf
xor
push
xchg
xor
mov
and
(bad)
loope
cmps
dec
stos
or
shrd
mov
iret
mov
test
repz
out
test
jns
out
cdq
fucomip
(bad)
mov
and
add
add
dec
scas
nop
xor
imul
mov
rcr
fsubr
shr
jp
int
mov
in
cmp
hlt
jbe
cmp
mov
cli
rol
adc
add
das
retf
jp
fist
movnti
or
clc
jne
push
sub
fnsave
sbb
fucomi
faddp
ret
les
addr16
pop
add
arpl
mov
ins
arpl
pushf
ja
dec
xchg
mov
xchg
inc
in
test
mov
bound
add
jb
dec
repz
dec
xor
xchg
ss
and
loop
cmps
cwde
adc
push
dec
lock
fxch
sub
lods
and
fisubr
shl
xchg
xchg
adc
xlat
out
push
sahf
aam
xor
or
inc
retf
cld
mov
push
loope
mov
clc
mov
jo
add
cs
scas
(bad)
add
ficomp
pushf
das
hlt
adc
jp
cwde
jae
(bad)
xor
and
fcomp
xchg
mov
push
xchg
out
mov
loop
cmp
popf
inc
sbb
(bad)
adc
or
lods
mov
adc
daa
imul
mov
aaa
xchg
jo
pop
sahf
fst
push
pop
cmps
(bad)
push
jmp
cmp
mov
dec
arpl
out
add
lahf
xchg
icebp
(bad)
gs
sbb
fisttp
mov
dec
mov
inc
jo
add
xor
push
test
jae
sub
xlat
sbb
cmps
loopne
inc
retf
xor
lods
jge
push
std
int3
jge
sahf
dec
(bad)
push
pop
and
aam
mov
cs
cmp
pusha
jb
nop
inc
ins
push
lds
repnz
in
sub
loopne
xor
xchg
xchg
push
fisttp
(bad)
fisub
js
mov
inc
sbb
add
loopne
cmp
adc
shl
neg
lods
(bad)
mov
mov
in
in
inc
sub
jp
retf
push
sahf
xor
test
mov
loopne
jg
lods
mov
xor
pushf
test
adc
loop
adc
int3
xor
dec
push
pop
xor
sbb
test
mov
mov
and
dec
xchg
adc
mov
pop
push
add
sbb
arpl
xchg
mov
add
dec
ror
xchg
pop
mov
inc
int3
icebp
mov
xchg
xchg
imul
pop
mov
push
pop
aam
dec
int3
clc
xchg
daa
lds
inc
loopne
leave
cmp
(bad)
adc
jge
lea
adc
jo
push
retf
adc
fwait
mov
or
push
int
retf
jne
dec
call
xchg
jmp
sub
ins
popa
aaa
outs
inc
pop
xor
fstp
call
addr16
imul
shl
or
(bad)
stc
jnp
sub
sbb
sub
xchg
stos
arpl
addr16
dec
aad
push
aam
nop
jmp
push
jb
push
outs
mov
cli
adc
clc
scas
bound
or
mov
leave
scas
and
sub
mov
mov
pop
mov
out
and
mov
pop
and
fs
mov
outs
pop
jle
inc
mov
mov
pop
pop
xor
inc
or
and
sub
jmp
enter
mov
adc
aad
and
daa
mul
aaa
cli
popf
xchg
fistp
clc
sbb
std
mov
fidivr
cwde
in
pop
sar
push
repnz
pop
xor
sbb
cs
clc
outs
ins
imul
loope
scas
iret
xor
loope
xchg
movs
stos
push
pop
dec
adc
jmp
cmp
ins
push
push
adc
lahf
lea
push
jns
pop
mov
in
jp
test
mov
ss
cmp
and
pop
cwde
inc
fmul
mov
dec
mov
jge
mov
imul
ja
mov
sbb
data16
add
imul
into
push
mov
inc
rcr
popf
je
ret
jmp
jmp
mov
dec
xor
or
retf
jl
cmp
push
aad
cmps
sbb
jge
outs
adc
add
aas
mov
cmp
push
iret
shl
push
xchg
ret
icebp
stos
(bad)
fild
cmps
xor
popa
or
test
adc
outs
xchg
cwde
xchg
jne
imul
jne
xlat
dec
adc
lock
fsub
scas
aaa
dec
das
pop
stc
push
push
inc
imul
fs
mov
push
jle
mov
fistp
neg
mov
sub
xchg
sub
les
into
adc
sub
pop
sbb
push
cs
(bad)
cmp
sbb
imul
inc
mov
adc
mov
add
imul
(bad)
stc
sub
sbb
cmp
vmwrite
xchg
mov
out
test
xor
daa
std
rol
pop
mov
inc
sub
push
mov
aad
sbb
(bad)
and
mov
(bad)
sub
shl
cmc
bound
popa
sbb
jno
popa
lods
icebp
or
sbb
add
call
mov
xchg
retf
add
icebp
bound
mov
test
pop
dec
stos
adc
xor
ret
sti
xor
xor
push
out
sbb
push
jne
inc
and
out
or
rcl
(bad)
fcmovne
outs
push
inc
(bad)
leave
pop
not
xor
jns
sbb
sti
nop
fs
lea
adc
pop
push
neg
sti
cmp
out
ret
shr
mov
push
cdq
ficomp
sbb
shr
jo
sbb
(bad)
fnstenv
pop
or
jle
es
sbb
in
dec
pop
out
jecxz
add
mov
aam
cmc
lea
xchg
movs
mov
fsubr
mov
fmul
rol
add
aam
add
out
inc
sbb
(bad)
cmp
std
push
(bad)
out
je
cmp
and
mov
jecxz
and
xchg
push
icebp
push
pop
outs
(bad)
mov
sub
jmp
sub
dec
mov
aad
sbb
adc
and
(bad)
loop
in
add
pop
inc
cld
ret
imul
add
add
repz
add
bswap
sub
jle
ins
into
and
and
mov
push
mov
and
dec
jnp
retf
xor
test
mov
xor
jb
xor
mov
pop
js
xchg
in
or
jmp
fld
xchg
jle
mov
add
es
xchg
aad
add
fdiv
jge
daa
xchg
popa
outs
js
out
popa
in
jecxz
(bad)
mov
mov
inc
adc
xlat
pop
arpl
outs
xlat
jge
mov
cld
add
push
jmp
cmp
sbb
jecxz
daa
stc
pop
cmp
cld
xchg
sbb
lods
and
jmp
sbb
mov
add
pop
hlt
mov
fdivp
(bad)
adc
retf
les
lahf
fdivr
repz
adc
cli
movs
outs
inc
nop
movs
sar
mov
xlat
pop
fimul
ja
pop
push
jmp
in
fld
rcr
inc
dec
xor
lahf
jle
stos
mov
mov
clc
scas
or
cs
movs
push
add
jb
or
into
adc
jbe
mov
out
add
push
sbb
lods
xor
push
test
repz
cli
inc
inc
push
mov
jmp
adc
ror
test
fldcw
out
mov
adc
pop
or
aas
add
pop
shl
int3
or
push
sbb
pop
inc
(bad)
in
mov
cmp
or
inc
std
out
data16
repz
shl
push
aas
mov
jo
jl
sub
or
pusha
retf
std
inc
(bad)
xchg
retf
ins
js
add
int
sub
mov
pop
mov
cmp
ficomp
xchg
ss
mov
les
out
das
or
sbb
jnp
xchg
ficomp
in
push
mov
fbld
mov
hlt
dec
adc
scas
push
xchg
(bad)
adc
add
push
loope
nop
stos
xchg
fstp
iret
lea
dec
les
sub
push
ja
cmc
shl
push
mov
jmp
std
pop
sub
outs
ror
popa
int
fisub
sbb
xor
loopne
dec
aad
jbe
sbb
fs
push
leave
jmp
push
lock
xor
es
adc
xchg
repz
sub
arpl
clc
cdq
imul
dec
test
out
add
add
jbe
mov
jbe
pop
pop
call
xchg
(bad)
pop
dec
jp
cmp
inc
inc
(bad)
std
in
frstor
cmp
push
xlat
sbb
shl
inc
jmp
out
mov
pop
push
xor
mov
mov
adc
xchg
adc
jle
push
mov
into
push
add
xor
sub
push
call
aas
int
les
and
pop
dec
and
arpl
jge
enter
or
pop
fmul
outs
add
nop
jbe
push
xchg
pop
jne
sbb
addr16
je
mov
js
adc
inc
sub
cmp
push
ror
in
test
xor
scas
cld
push
mov
movs
inc
scas
or
inc
add
mov
dec
pop
enter
or
or
add
xor
test
dec
jns
mov
pop
push
call
(bad)
adc
mov
fwait
(bad)
repnz
jl
sub
shl
test
sub
shr
inc
ret
add
sub
imul
add
jl
jl
mov
add
stc
(bad)
ficom
xchg
das
xchg
push
cmp
call
mov
add
inc
jbe
push
dec
pop
sub
cld
(bad)
inc
je
dec
and
sti
add
sbb
or
xchg
inc
sbb
addr16
popf
mov
std
cli
adc
mov
xchg
mov
movs
ret
clc
and
or
sub
int3
cmc
movs
cmps
(bad)
(bad)
sub
retf
mov
inc
hlt
mov
sbb
or
fs
dec
mov
xor
fcomp
adc
or
sbb
and
test
add
outs
sub
xor
dec
push
push
stos
loopne
sub
pop
aas
xor
retf
cdq
cli
lock
dec
(bad)
loopne
jg
retf
iret
jl
int3
xchg
jno
inc
inc
adc
sahf
fidivr
movs
mov
sbb
imul
and
pop
cli
cwde
jns
retf
inc
loop
push
repnz
mov
mov
movaps
imul
(bad)
loop
(bad)
push
adc
loope
test
ins
pop
xchg
test
test
or
mov
jnp
ret
or
inc
and
jae
jp
imul
fsub
xor
mul
ss
out
or
add
jecxz
pusha
scas
dec
repnz
test
mov
repnz
mov
sbb
inc
sub
jp
mov
inc
test
pop
aad
adc
dec
push
in
retf
inc
nop
js
inc
lea
in
adc
mov
daa
adc
mov
rol
ds
push
mov
sbb
in
pop
sbb
lock
call
mov
mov
cmc
mov
test
sub
cmps
push
xor
imul
xor
jle
xor
cmp
pop
xor
ins
lock
daa
cmps
or
ret
inc
es
jne
cmps
jmp
fs
and
sub
mov
ja
hlt
pop
scas
fadd
inc
int3
lock
fmul
test
popa
mov
scas
inc
retf
dec
sub
push
inc
mov
stc
push
jne
cmp
push
int
push
sub
pop
push
ret
cli
fisttp
or
shl
dec
js
mov
mov
ret
cli
icebp
pop
fst
push
sbb
push
adc
stos
dec
jle
or
jmp
(bad)
aam
push
in
inc
int
dec
push
dec
or
(bad)
in
jae
aas
cmp
neg
or
xchg
and
mov
jmp
(bad)
sub
xor
pop
dec
xor
push
cli
jl
leave
(bad)
in
leave
test
sar
std
popf
pop
lahf
nop
jbe
cli
ja
add
retf
jmp
xchg
call
ja
lods
add
movs
mov
pop
arpl
jns
repz
sbb
mov
mov
stos
pop
fucomp
pop
add
pop
leave
jle
rcl
push
cmp
xor
daa
(bad)
jg
rcl
pop
inc
push
jg
mov
ins
pop
mov
push
xchg
js
out
jmp
jmp
lahf
jecxz
test
and
jle
push
loop
cmps
aad
das
pushf
jbe
fnstcw
int3
jae
mov
jns
ds
and
dec
sub
lea
es
cwde
(bad)
movs
inc
jbe
xchg
add
pop
sub
mov
dec
(bad)
(bad)
out
loopne
daa
add
mov
jo
push
push
lock
std
rcl
cmp
sbb
sub
cdq
sub
test
ds
lods
jg
aaa
pcmpeqb
push
movs
jge
mov
or
or
in
test
js
daa
sub
pusha
xchg
or
(bad)
test
mov
add
fstp
cmp
mov
stc
lock
mov
xor
sbb
into
jecxz
xchg
daa
stos
sbb
sbb
outs
pop
imul
sahf
pop
xchg
xchg
cmp
dec
mov
fsub
adc
mov
retf
mov
xor
mov
pop
test
xlat
sub
movs
daa
sbb
test
adc
aas
gs
(bad)
and
arpl
xchg
sub
mov
lods
xchg
(bad)
pop
and
outs
out
lods
loopne
cdq
aad
retf
sbb
add
or
adc
out
cld
imul
es
push
ins
sub
adc
jo
cmps
call
mov
cmp
(bad)
bnd
outs
jl
mov
and
sti
ja
je
sub
mov
pmullw
js
xor
cwde
mov
mov
lock
pop
xor
popa
mov
xor
mov
fisubr
push
out
xor
xor
cmp
sub
push
sahf
stos
mov
sar
(bad)
out
icebp
jge
sbb
xchg
jno
call
int
stc
call
sbb
pop
in
scas
outs
xor
inc
cmp
shl
sbb
lods
add
or
or
jl
fpatan
xchg
xchg
pop
fbstp
fist
mov
and
xchg
mov
add
loopne
sbb
mov
outs
(bad)
fstp
(bad)
cmc
pop
fist
mov
and
(bad)
lods
in
sub
inc
out
shr
jne
(bad)
pop
data16
repnz
push
(bad)
xchg
rcr
jg
scas
outs
leave
or
pop
push
sub
mov
dec
rol
(bad)
sbb
test
inc
in
mov
icebp
xchg
push
mov
pushf
xlat
js
jne
fwait
jge
sub
add
jmp
cdq
fwait
ret
retf
inc
jno
push
adc
imul
les
div
mov
and
cmps
movs
addr16
sub
shl
or
ficom
in
loope
add
push
push
pop
xchg
lea
adc
cli
sub
in
sbb
push
sub
fld
mov
out
ret
cmp
fadd
dec
sub
add
cwde
daa
mov
es
add
push
test
(bad)
out
mov
data16
retf
mov
ja
or
jmp
and
push
sub
(bad)
loope
or
sub
hlt
sbb
jns
sub
jmp
cmp
mov
sub
test
mov
push
(bad)
das
inc
in
dec
in
dec
ins
call
fiadd
or
sub
shl
sahf
ja
inc
push
jbe
repnz
aas
scas
jmp
jae
pop
push
push
jnp
out
in
movs
mov
jbe
sbb
pop
jge
loopne
push
pop
dec
test
adc
ds
fwait
and
jbe
pop
(bad)
and
and
sbb
js
xchg
in
jmp
daa
xlat
add
repz
aad
sar
das
sub
pushf
call
cmp
mov
nop
ret
loop
jns
and
(bad)
test
and
jl
sub
mov
inc
mov
cld
xchg
mov
scas
add
inc
gs
loop
inc
les
sub
sub
ret
or
fwait
aas
xchg
js
sub
mov
mov
imul
xchg
pop
clc
adc
push
fcom
retf
test
shl
jmp
test
(bad)
(bad)
inc
xor
mov
push
test
pop
cmps
mov
cmps
mov
sbb
xchg
out
xchg
xchg
push
mov
int
pop
ss
or
lock
aas
and
sbb
aad
loope
jle
(bad)
sub
pop
arpl
js
bnd
inc
enter
dec
test
cdq
cmp
cdq
fcomp
(bad)
pop
fwait
pop
sti
call
sub
sbb
sbb
mov
(bad)
mov
jne
outs
pop
outs
data16
test
pop
scas
mov
outs
mov
dec
jne
cmp
pop
inc
mov
cmps
(bad)
cmp
shl
mov
mov
xor
in
(bad)
jecxz
sub
ror
lock
fisub
push
push
mov
fstp
adc
lods
retf
dec
ret
add
cmp
xchg
mov
lods
or
inc
dec
fs
push
jns
push
test
retf
and
(bad)
xlat
aad
aas
inc
js
sbb
dec
sti
mov
(bad)
push
xor
test
(bad)
cmp
sahf
dec
push
nop
int3
mov
mov
mov
or
scas
push
mov
or
iret
loop
sbb
scas
out
pop
ins
je
jne
push
lock
js
div
inc
and
xlat
mov
mov
cwde
sahf
out
mov
mov
xor
fistp
mov
pop
or
dec
das
shr
cmp
fidivr
pop
ss
xor
xor
in
push
in
push
std
or
rcl
xor
cdq
mov
cmps
xlat
dec
dec
xor
push
and
popf
sub
sub
repnz
cmps
cmc
or
cmc
mov
cmp
push
mov
jp
in
adc
mov
sahf
push
jle
iret
jo
dec
sbb
ja
enter
push
jl
cmp
in
(bad)
jno
and
lahf
dec
imul
cmp
cwde
cld
cmp
sub
dec
fnstcw
out
xchg
lods
dec
mov
mov
stos
sub
push
mov
cdq
rcl
mov
cld
push
mov
sub
jg
idiv
sub
add
inc
xchg
shl
adc
icebp
sti
jo
call
fs
lea
fwait
push
pop
and
test
addr16
iret
adc
cmp
test
test
aaa
push
adc
mov
int
mov
xchg
das
or
enter
push
inc
(bad)
call
mov
dec
loope
push
in
and
inc
popa
jge
rcl
fisttp
sar
imul
or
cmp
xchg
xor
repz
inc
icebp
gs
or
push
leave
xchg
push
cld
retf
jnp
jl
popa
and
fwait
sbb
scas
push
in
loopne
stos
adc
and
pop
mov
daa
rol
mov
sub
cmps
test
jl
and
mov
mov
add
jmp
xor
xchg
mov
and
cwde
add
cmps
adc
inc
add
enter
cmp
in
xor
ins
or
repnz
mov
push
sub
push
cmp
pop
add
fidivr
dec
test
xchg
jo
mov
xor
and
jmp
outs
fcom
mov
int
jae
sub
mov
and
xchg
adc
pop
mov
sub
xchg
hlt
test
loope
repnz
clc
mov
les
sub
rcr
sub
cmp
loope
imul
adc
pop
cwde
int3
cmc
pop
mov
imul
sbb
xchg
enter
mov
mov
push
or
loop
push
jb
out
out
push
or
add
push
and
popf
jmp
mov
scas
dec
xor
or
mov
sbb
aad
cmp
pop
data16
shl
xchg
xlat
ins
add
pop
arpl
aaa
inc
lds
fimul
clc
push
mov
int
lods
cdq
icebp
push
pop
push
inc
scas
adc
stc
fldenv
aam
cld
sub
movsx
stos
jnp
call
fnstsw
cdq
ds
sub
int
jmp
ficomp
mov
sbb
dec
int3
lods
dec
imul
outs
jno
lods
pushf
scas
fstp
xlat
push
add
dec
loopne
(bad)
fbld
mov
iret
sub
sub
push
dec
(bad)
mov
test
add
sub
dec
ja
cwde
out
sub
xchg
pushf
test
fwait
push
or
add
sbb
mov
dec
xchg
ds
test
dec
and
(bad)
jbe
aas
call
jns
mov
mov
shr
or
cmc
mov
sub
fdivr
mov
ds
cmp
fcmovb
std
adc
cld
mov
mov
rol
and
cli
pop
xor
dec
std
adc
pop
(bad)
jmp
in
cmc
(bad)
fcom
or
ss
mov
sub
dec
nop
push
test
xchg
in
xlat
cmp
adc
adc
out
mov
repnz
sbb
push
inc
add
mov
cmp
dec
and
add
adc
push
adc
push
xor
xchg
pop
lock
mov
adc
je
mov
push
pushf
add
jne
popa
add
pop
or
jno
cmc
je
mov
cmp
jno
cmc
dec
sub
mov
stos
dec
jge
sahf
add
jl
and
xchg
aam
jae
popa
mov
inc
(bad)
push
mov
mov
jp
scas
inc
enter
shl
mov
mov
pop
shr
pusha
pushf
pop
inc
in
das
and
jl
outs
push
pop
cwde
out
cmps
mov
mov
pop
stos
xlat
xor
jmp
movs
and
cmp
mov
sub
jecxz
cmp
inc
ins
cs
adc
push
xchg
sbb
lock
es
int3
ret
push
xchg
je
adc
mov
pushw
inc
outs
pop
outs
sub
cmp
cmc
daa
push
cmc
inc
dec
fld
lahf
icebp
or
lods
iret
add
or
sahf
outs
push
mov
and
cmp
pusha
loopne
rcl
leave
mov
nop
mov
cld
rcr
leave
cdq
movs
fsub
add
mov
or
pop
enter
sub
push
jg
jp
ret
pushf
sbb
mov
cmc
fist
jle
fst
dec
or
mov
inc
sub
imul
pop
stc
xchg
mov
and
jno
fcomi
movs
getsec
xor
ins
scas
test
mov
or
pusha
mov
enter
push
mov
test
in
loopne
shr
cmc
push
dec
push
das
mov
aad
in
stc
inc
inc
push
bound
add
sub
sbb
scas
dec
mov
and
adc
xchg
jle
adc
and
rcr
dec
cmc
cmp
mov
ror
fsubr
bound
hlt
dec
out
pop
ret
mov
sub
sti
xlat
dec
push
shl
mov
push
(bad)
imul
xor
mov
retf
fist
js
mov
in
in
cwde
fnstsw
xor
fprem
inc
jecxz
nop
test
adc
sub
aad
scas
push
ja
and
and
pop
pop
stos
sbb
cdq
lods
cdq
mov
xor
es
push
nop
dec
out
cmc
and
inc
push
inc
xchg
enter
nop
mov
outs
es
fsub
jo
(bad)
loop
xor
jnp
push
call
sti
scas
rcr
xchg
out
rcl
cmps
test
inc
int3
loopne
mov
dec
jno
add
(bad)
sbb
inc
dec
push
out
or
push
in
retf
inc
pop
mov
movs
ss
fld
pop
xchg
pop
pop
and
fld
and
sub
pop
xchg
sub
std
or
mul
dec
or
movs
dec
jo
add
cmp
pop
add
addr16
mov
aaa
jae
sbb
push
dec
mov
dec
fld
mov
out
std
or
push
jecxz
outs
sub
mov
(bad)
dec
mov
xchg
into
scas
cli
(bad)
jae
sbb
xor
inc
out
sbb
and
mov
fst
xor
daa
cmps
mov
or
cld
push
clc
mov
mov
jg
loop
and
xor
popa
cdq
or
push
outs
xlat
shr
shr
sbb
(bad)
icebp
je
cmp
rol
aam
adc
fmul
sbb
or
mov
pop
inc
pop
xor
je
mov
sub
lods
dec
ficomp
stos
pop
xchg
xchg
fistp
sub
fcomp
xor
out
call
out
lods
mov
sub
pop
outs
dec
pop
in
jle
xor
mov
and
(bad)
fstp
jo
push
mov
jo
in
mov
and
es
adc
aad
cmp
(bad)
ret
int3
cmp
popa
pop
ins
test
sub
hlt
adc
fdiv
sbb
inc
cmp
cmp
lahf
outs
and
sub
(bad)
imul
cmc
jmp
push
rcl
mov
ja
mov
cmp
inc
ss
std
es
pop
in
jge
push
loopne
call
call
xchg
test
sbb
imul
scas
jns
ss
imul
test
xchg
adc
add
push
dec
xchg
mov
aad
popf
stos
imul
in
push
jmp
cmp
cmp
stos
push
in
and
pop
adc
push
int
sbb
cmp
jmp
sahf
and
sub
ins
mov
or
mov
mov
mov
bound
adc
mov
daa
retf
adc
xor
xor
push
cmp
call
pop
in
inc
mov
jbe
arpl
push
test
dec
ins
fs
xor
xchg
into
lock
fbld
mul
out
inc
jecxz
cmp
or
les
shl
and
pop
pushf
and
push
xchg
cmp
scas
or
jp
cmp
mov
lods
leave
and
push
retf
jge
cmp
addr16
dec
je
jmp
outs
(bad)
das
inc
jns
add
arpl
and
ret
push
movs
dec
movs
repz
xor
sbb
mov
add
sbb
xchg
adc
aam
bts
jns
add
dec
retf
cwde
push
add
jmp
jge
pop
jne
jecxz
retf
push
xor
out
lock
ror
jno
jp
mov
jecxz
xchg
inc
mov
add
cmp
xchg
adc
std
cwde
pop
xchg
stos
and
enter
mov
mov
cmp
out
out
stos
pop
call
push
adc
popa
imul
sbb
and
sbb
rcr
dec
mov
pop
mov
lods
retf
mov
loopne
lahf
inc
cmp
jecxz
mov
or
ret
cmps
fcom
mov
mov
scas
arpl
mov
push
inc
pushf
push
jmp
pop
sbb
push
cmp
ret
(bad)
pop
mov
dec
pop
sar
cmps
por
ficom
jb
jb
es
xor
ja
cld
adc
mov
bound
pop
cwde
aaa
test
shl
movs
call
out
jne
pop
into
sbb
call
inc
mov
jle
push
fadd
or
mov
imul
mov
dec
dec
pop
pop
outs
push
cmc
sbb
sbb
jno
call
cmp
pusha
inc
out
fcomp
jno
idiv
aas
mov
dec
call
mov
inc
call
sub
stc
inc
adc
in
push
or
gs
inc
sub
test
mov
pop
push
retf
gs
aaa
mov
mov
jl
mov
lahf
pop
jg
xor
add
out
ret
sub
mov
loopne
out
add
(bad)
loope
clc
scas
call
ds
cmp
mov
push
jecxz
push
or
or
mov
sub
push
in
ret
test
xchg
jecxz
movs
shr
pop
xchg
loopne
cmp
pusha
shr
mov
xlat
mov
stos
mov
and
mov
or
adc
stc
cmp
mov
data16
call
jo
das
xor
and
jmp
jg
xchg
or
call
inc
sub
push
jle
mov
ins
shl
mov
xlat
inc
and
mov
mov
mov
mov
sub
popa
mov
or
fs
jmp
mov
scas
cmp
loop
or
jl
in
dec
mov
rcr
jge
and
test
addr16
aas
or
add
ja
xchg
enter
lods
ins
pop
sbb
retf
push
iret
popa
pop
mov
fcomp
and
sbb
loop
xchg
jmp
push
jg
js
adc
pop
shl
movs
stos
xor
jl
xor
xlat
jne
adc
sbb
mov
sahf
cmps
pusha
out
inc
loopne
fidivr
mov
nop
popa
cmps
xchg
jl
cmp
fisttp
pop
mov
mov
or
sub
push
push
int3
inc
xchg
mov
enter
xchg
pushf
mov
popa
cs
cmp
fs
pop
mul
aas
dec
dec
gs
pop
ret
jbe
fisttp
cld
mov
or
or
imul
lea
imul
jno
xor
cs
popa
int3
in
hlt
mov
sbb
retf
or
ror
mov
in
pop
pop
pop
loope
inc
inc
addr16
call
mov
rol
inc
push
mov
shl
lock
mov
test
xor
fidivr
mov
add
or
sub
fdivr
lods
cmp
in
in
scas
cmc
fcomp
(bad)
es
lock
ret
test
ror
xchg
cmp
cs
adc
mov
push
inc
jbe
or
loope
mov
cld
aas
shl
xchg
push
xor
and
and
xchg
fdiv
or
mov
sub
inc
pushf
cmp
in
jbe
loopne
sbb
mov
enter
js
imul
mov
push
pop
xor
imul
call
cmc
aad
pop
aas
test
(bad)
adc
imul
mov
xchg
lea
push
xchg
nop
and
call
ja
xor
adc
into
xlat
(bad)
stos
push
push
mul
scas
xor
movs
ja
jb
add
xor
xor
xrstors
int
test
or
inc
shr
push
mov
loopne
cmp
ror
retf
add
jmp
je
js
das
cdq
xor
repz
cmp
test
les
jg
les
inc
jnp
cmp
fcomp
(bad)
sub
mov
cmp
push
sub
sbb
adc
clc
in
push
(bad)
push
sahf
push
mov
xchg
in
push
cmp
mov
cs
jmp
jg
pop
test
jle
(bad)
outs
cmp
repz
adc
cmps
mov
pop
loope
dec
jmp
in
into
pop
xor
scas
sbb
mov
fnstsw
xchg
out
mov
leave
or
aad
mov
adc
jge
jnp
out
mov
inc
push
jp
aam
cmovg
outs
add
adc
repz
scas
xor
lock
inc
mov
inc
hlt
test
xchg
sar
rol
adc
cmp
mov
sbb
mov
(bad)
sbb
cwde
mov
push
push
cmps
and
retf
fsubp
jl
sbb
movs
mov
adc
or
loopne
aas
cmp
fs
xchg
dec
fwait
dec
pushf
cli
push
jl
sub
adc
push
mov
xor
repnz
jne
dec
js
rcl
packssdw
fwait
pop
shl
loope
xor
mov
cmp
dec
dec
push
mov
mov
adc
jmp
lea
cmp
js
dec
add
lods
and
dec
adc
cli
sub
cmc
adc
gs
in
fwait
lds
cmp
inc
data16
inc
mov
jl
jmp
adc
mov
xor
inc
adc
in
fwait
adc
push
push
sub
aad
repnz
push
das
or
rcl
(bad)
fs
(bad)
mov
ss
dec
sahf
mov
arpl
dec
imul
pop
sar
add
mov
push
test
mov
fidiv
mov
add
shl
jmp
xor
push
iret
pop
in
lahf
mov
pop
and
(bad)
sbb
imul
cdq
retf
adc
or
jne
push
xchg
in
(bad)
fld
cmp
push
pusha
cmps
mov
mov
inc
or
das
push
dec
popa
xchg
mov
js
(bad)
jbe
push
dec
xchg
(bad)
ficomp
sub
call
cs
popa
neg
shr
cmp
jb
pop
adc
enter
mov
stos
jmp
dec
aam
pop
outs
adc
or
enter
add
out
jmp
mov
mov
push
add
or
dec
push
sub
jns
sti
(bad)
mov
mov
and
push
pushf
or
popa
(bad)
sub
push
pop
jle
lods
adc
jge
and
cs
and
sti
cwde
mov
pop
pop
add
fs
jns
adc
xchg
and
cmp
ret
ror
xor
mov
movs
push
xchg
rol
mov
sbb
hlt
test
mov
sbb
jns
stc
inc
fs
or
rol
jbe
fisubr
int
or
mov
mov
ja
imul
sbb
mov
mov
in
xor
call
mov
or
xor
jecxz
out
sub
cld
add
outs
xchg
mov
lock
les
(bad)
xor
pop
xor
int
xor
inc
pop
sub
cmc
hlt
movs
gs
cmp
pop
xchg
pusha
push
retf
(bad)
and
xor
call
push
jmp
call
(bad)
ds
sub
shl
movs
ins
std
push
bound
sub
or
hlt
xor
pop
xchg
pop
push
rcr
sahf
and
pop
sub
push
mov
push
sbb
outs
fldcw
jmp
push
inc
adc
stos
dec
jns
dec
mov
add
pop
inc
stos
cmps
dec
pop
mov
dec
mov
es
or
in
jb
jnp
shr
sub
add
mov
sbb
xchg
xlat
jle
cmps
loope
xor
dec
(bad)
clc
arpl
push
(bad)
sub
mov
lahf
mov
test
popf
stos
nop
test
and
jmp
jo
jae
ficom
mov
sub
jecxz
jb
sbb
dec
adc
push
mov
cmp
cmp
mov
(bad)
ins
xchg
sub
sub
sbb
stc
mov
aas
mov
pop
push
jp
push
dec
fadd
(bad)
and
lock
push
and
and
pop
jle
adc
jne
add
out
stos
mov
sub
sar
in
adc
mov
icebp
jmp
or
out
add
adc
cmp
or
mov
sbb
xchg
and
test
es
inc
cmps
sbb
mov
pop
cmp
add
or
adc
std
mov
daa
mov
pop
(bad)
jo
dec
mov
inc
out
jg
or
ins
inc
sub
out
dec
mov
add
add
lods
cmp
and
jo
and
or
test
ins
enter
pushf
enter
pop
mov
mov
scas
loop
add
or
inc
push
lea
icebp
loope
sub
mov
iret
jbe
xor
test
jns
pop
push
es
or
inc
mov
test
aad
aaa
sbb
out
xchg
cli
jbe
mov
pop
mov
cmps
sbb
mov
cmp
adc
jecxz
or
sub
adc
(bad)
data16
(bad)
int
pop
into
unpckhps
pop
and
fst
mov
jmp
mov
cdq
dec
sub
sub
dec
pop
pushf
loop
scas
mov
or
mov
clc
inc
shl
(bad)
je
jbe
dec
cwde
div
popf
ficomp
add
xchg
popf
sub
jl
mov
mov
sbb
fimul
pop
add
inc
stos
int
sar
shr
mov
jecxz
jbe
(bad)
movs
sub
mov
add
movs
adc
mov
pop
nop
jp
push
les
hlt
in
adc
jb
pop
sti
fdivr
(bad)
xchg
call
xchg
leave
pop
push
add
retf
jo
icebp
repz
gs
sbb
lock
scas
ds
and
or
push
stc
xchg
xchg
xor
aam
aas
into
into
xlat
sahf
push
ffree
int3
and
inc
scas
rcl
mov
sbb
xchg
inc
inc
test
ss
mov
cmps
imul
jmp
dec
out
mov
std
in
pop
sbb
push
retf
mov
fisttp
sti
cld
fnsave
mov
pushf
push
mov
cmp
sbb
outs
dec
(bad)
jle
lods
(bad)
hlt
push
inc
imul
out
sbb
mov
mov
test
cmp
js
jl
ins
lock
clc
aaa
pushw
push
xor
adc
mov
ja
adc
mov
pusha
fidivr
xlat
nop
mov
mov
mov
push
fldln2
imul
or
movs
jg
pop
cs
rcl
sub
das
lahf
scas
ins
or
add
(bad)
sahf
cmps
xor
stc
cwde
stos
sbb
inc
or
xlat
add
(bad)
jbe
inc
ds
or
lods
mov
shl
inc
icebp
and
fidivr
data16
mov
out
not
mov
push
fst
mov
add
sbb
inc
push
out
mov
outs
sub
dec
rcl
scas
shl
push
jnp
int3
fadd
sbb
(bad)
xor
push
enter
jnp
cmp
pop
fnstsw
sbb
jns
loop
push
(bad)
jmp
xchg
fild
imul
movs
out
inc
and
pushf
cdq
not
repz
and
stos
or
adc
imul
adc
jns
movs
add
mov
jne
pop
jmp
js
or
or
ret
mov
lahf
cmp
mov
cmp
jne
ins
ins
push
or
jnp
sub
xchg
and
mov
mov
sbb
mov
pushf
cmp
fsubr
fsub
leave
xor
fnstenv
and
aas
jg
jb
push
not
iret
enter
outs
dec
push
pop
xchg
sysexit
test
dec
pusha
call
xor
(bad)
in
mov
test
movs
sub
loopne
(bad)
(bad)
js
cmp
lock
pop
test
pop
or
push
mov
jecxz
shl
inc
stos
movs
test
push
xor
mov
bound
xchg
or
or
ficomp
fwait
mov
aas
sub
jmp
shl
xchg
push
cli
leave
xchg
iret
push
imul
push
mov
jb
pop
jmp
jmp
daa
dec
mov
les
add
mov
cmps
(bad)
fcom
jecxz
int
pop
xor
pop
ss
sti
xlat
call
add
inc
and
jae
mov
xor
dec
test
inc
fsubp
(bad)
adc
lahf
les
mov
jo
retf
adc
retf
add
mov
aas
cli
mov
or
fcomp
jmp
dec
add
(bad)
fcmove
dec
sub
xchg
pop
push
xor
mov
cmp
or
rcl
cmp
outs
scas
(bad)
lods
lods
pop
add
pop
dec
jnp
or
mov
and
and
jns
outs
les
cmp
mov
mov
aad
arpl
lds
es
cld
mov
hlt
xchg
pop
je
or
add
outs
jmp
leave
mov
(bad)
or
xchg
mov
in
mov
or
fs
sbb
ds
jnp
fsubr
aam
cmp
jmp
or
movs
shl
test
add
cmc
sub
scas
mov
fwait
xor
jbe
arpl
xor
xor
jmp
mov
loopne
xchg
retf
sub
(bad)
es
jns
mov
xchg
mov
div
scas
mov
call
aam
sub
sahf
add
jne
adc
retf
js
inc
out
inc
js
cwde
nop
test
push
mov
xchg
jne
into
out
adc
sbb
inc
inc
jmp
push
push
fidiv
push
dec
pop
dec
jae
stos
lods
fldcw
jmp
jmp
xchg
and
test
push
shl
push
jbe
retf
fbld
sub
jb
or
inc
retf
aad
mov
or
pusha
jmp
adc
data16
mov
mov
neg
pushf
xor
cmp
shr
or
pop
sub
mov
out
and
arpl
pop
mov
adc
jle
jnp
sub
or
gs
xchg
out
push
pop
aaa
mov
mov
nop
imul
pop
inc
push
mov
je
mov
xchg
in
outs
in
es
cs
(bad)
cmp
fldcw
xchg
xchg
dec
leave
mov
mov
push
xlat
push
mov
dec
(bad)
jl
stos
cmp
mov
dec
xchg
and
xchg
movs
mov
adc
inc
push
lahf
push
adc
cmps
sbb
mov
sub
mov
outs
(bad)
mov
mov
adc
sbb
call
jo
inc
jmp
mov
push
adc
jecxz
xchg
xor
and
jge
imul
adc
retf
loop
std
or
fisub
fs
imul
scas
jae
mov
popa
lds
and
test
cmc
inc
dec
xchg
jecxz
sar
pop
sub
sar
pop
dec
daa
mov
movs
mov
xchg
and
dec
es
fbld
sub
movs
inc
mov
or
ret
add
xchg
retf
pop
les
sub
mov
mov
cmp
mov
adc
cmc
cmp
mov
xchg
and
cwde
imul
push
xlat
push
sahf
jae
cdq
sbb
mov
xchg
out
sub
jno
std
inc
ins
(bad)
or
arpl
vmovhps
dec
js
push
add
test
ret
xchg
dec
aam
push
push
pop
sub
outs
cmp
inc
enter
jmp
cs
in
jle
xchg
aam
mov
xor
cmp
rol
addr16
push
iret
xchg
repnz
dec
loop
mov
xchg
icebp
in
enter
sub
cli
adc
daa
imul
leave
sti
or
jmp
mov
daa
mov
push
mov
jp
(bad)
outs
fcom
push
xor
xchg
dec
mov
jne
gs
xor
and
out
rol
xor
icebp
hlt
mov
dec
mov
add
dec
sub
xchg
mov
add
mov
add
xor
mov
cmp
xor
adc
adc
and
xor
aas
add
xchg
xchg
lea
mov
(bad)
jae
bound
out
fwait
push
dec
sar
mov
push
inc
fcmove
mov
int3
call
mov
mov
or
(bad)
sahf
addr16
add
test
(bad)
lock
push
retf
jmp
dec
popa
or
leave
push
dec
pop
cmc
je
jno
dec
adc
ins
lods
loope
jns
dec
repnz
neg
daa
jle
lea
fild
xchg
fsubr
cmp
xchg
int3
cmp
loop
scas
ins
and
dec
jmp
test
pop
sbb
and
loope
inc
repz
or
sub
call
sbb
loop
xchg
shl
ins
inc
popa
mul
fwait
std
arpl
retf
dec
out
mov
out
(bad)
pop
mov
popf
sbb
(bad)
aas
sbb
iret
gs
fidiv
mov
ret
fwait
ror
imul
pop
leave
rcr
mov
aas
sbb
xchg
hlt
sti
lds
cwde
inc
fild
xchg
sahf
imul
sbb
adc
add
cmp
mov
std
mov
inc
or
sbb
pop
pop
inc
xor
inc
mov
les
shr
jae
jecxz
dec
not
inc
aas
and
jns
pop
arpl
push
add
mov
xor
jmp
adc
call
inc
lock
fmul
(bad)
fsubr
popf
je
arpl
sbb
push
push
mov
loope
jmp
nop
mov
nop
lds
jge
cmp
cdq
iret
retf
dec
les
xor
stos
fs
(bad)
push
push
aad
push
mov
cmp
vmwrite
xor
push
mov
inc
add
xor
lods
(bad)
sub
or
push
adc
mov
dec
sbb
jl
pop
std
mov
sub
inc
dec
mov
fidiv
pop
xchg
je
loopne
mov
out
leave
ret
or
or
scas
or
mov
or
shl
mov
adc
clc
pushf
cmp
xlat
mov
fadd
scas
add
bswap
out
inc
outs
or
push
xchg
push
(bad)
fsubr
aas
pop
xchg
vhsubpd
push
mov
fsubr
or
outs
pop
adc
push
xlat
pusha
dec
leave
test
into
pop
adc
push
mov
and
dec
xchg
lods
mov
adc
jno
cmc
ret
test
adc
inc
je
aas
aaa
and
daa
arpl
fs
in
cmps
mov
retf
sbb
bswap
outs
imul
leave
out
dec
cmps
push
(bad)
mov
mov
cmp
adc
jg
rcr
loope
pushw
sbb
jno
dec
retf
test
cmc
inc
push
xchg
and
repz
ficom
jmp
cdq
xchg
and
sub
jmp
stos
std
dec
mov
inc
ret
pop
or
push
xchg
outs
fadd
cs
mov
les
push
push
aad
jns
push
sub
add
jmp
repnz
hlt
jp
loopne
pop
cmps
cwde
mov
fdiv
jecxz
loopne
shr
push
and
push
sbb
pop
std
sub
shr
out
std
ret
pop
mov
jbe
mov
mov
ins
int3
popf
lds
clc
fiadd
in
xchg
int
fldz
ja
dec
and
mov
cmp
sbb
call
lahf
hlt
div
iret
(bad)
sbb
cmp
leave
or
aam
or
dec
jne
cmp
mov
imul
jg
pop
outs
mov
cwde
ss
gs
jbe
faddp
(bad)
sti
and
xor
xor
push
test
loope
stos
out
out
dec
mov
cmp
das
push
xchg
stc
sti
sbb
je
mov
add
mov
fs
mov
into
loopne
sbb
scas
in
cmp
out
punpcklwd
jae
mov
shr
or
int3
shl
iret
xor
cmp
movs
gs
mov
xchg
test
mov
xor
mov
sub
fisub
in
shl
push
in
mov
sar
lods
into
ss
aaa
xchg
aas
pusha
popa
pop
pop
and
stc
fisub
pop
pop
xchg
and
sub
xchg
repz
imul
in
loopne
fidivr
xor
and
out
ror
test
sti
jo
inc
leave
adc
sbb
outs
dec
dec
lahf
cmp
pop
cmp
xchg
and
pop
push
lds
or
dec
mov
xor
sbb
test
bound
push
cmp
jle
push
cmp
mov
push
cdq
mov
div
pop
mov
in
fxch
sar
cmps
cli
dec
cwde
push
adc
sub
outs
cmp
push
adc
inc
mov
leave
sub
movs
cmp
cmp
push
add
push
add
je
ror
jmp
rcr
or
cmp
cmps
or
lods
jp
inc
stos
ror
sbb
xor
mov
or
jae
cmp
and
mul
push
je
mov
cmps
stc
inc
dec
pop
scas
popf
jg
push
mov
ficomp
and
sub
daa
mov
add
in
sbb
movs
data16
push
mov
popa
imul
mov
call
dec
dec
jg
jnp
cmp
xchg
fwait
ror
mov
push
int
mov
cmp
enter
jns
fcomi
das
mov
cwde
inc
jmp
jp
pop
mov
xchg
loope
mov
inc
push
rol
jo
aas
cmp
rol
mov
(bad)
sub
adc
leave
xchg
mov
push
pop
ins
push
and
outs
add
mov
fidivr
or
inc
fiadd
cs
mov
(bad)
loopne
and
mov
rcr
jg
loop
xor
dec
cdq
cli
cwde
popa
push
xchg
retf
out
cmp
sbb
cmps
loopne
loope
pop
jp
xchg
sub
inc
push
ror
pop
xchg
mov
adc
jne
add
dec
and
stos
dec
xchg
(bad)
stc
or
push
push
rcr
and
pop
sahf
bound
out
dec
into
inc
push
clc
dec
jno
jb
pop
inc
out
or
add
iret
add
imul
popa
or
neg
idiv
add
lods
cmc
push
(bad)
sbb
jae
jae
xrelease
dec
add
jbe
fsubrp
mov
add
xor
xor
xchg
add
xchg
scas
imul
mov
add
or
ss
bound
sbb
push
inc
cmp
adc
iret
add
cmps
mov
xchg
sub
movs
sbb
pop
(bad)
aam
in
pop
in
jmp
(bad)
or
inc
adc
ror
adc
mov
xchg
ins
cmp
(bad)
shl
xchg
and
fstp
punpcklwd
mov
(bad)
mov
or
mov
lods
xor
sbb
hlt
mov
mov
jmp
sahf
inc
xor
jbe
hlt
sub
sbb
ds
clc
push
aam
cs
xchg
call
dec
nop
(bad)
loopne
jl
sub
jge
xchg
inc
mul
pop
mov
mov
mov
outs
cmp
xor
add
and
adc
stc
das
fimul
enter
outs
jmp
cmp
fsub
jmp
xchg
or
mov
inc
xchg
xchg
cmp
popa
jmp
arpl
inc
jp
pop
es
push
pop
(bad)
ret
mov
add
inc
push
cwde
dec
lods
sbb
mov
mov
push
sbb
cmc
pusha
les
push
inc
outs
xor
iret
fdiv
(bad)
cmc
mov
mov
cmc
aad
lea
sub
imul
mov
(bad)
sub
pop
call
push
fwait
sbb
stos
repz
(bad)
pop
jnp
dec
popa
call
pop
inc
inc
jno
sbb
cdq
clc
push
es
pop
aaa
out
sub
mov
cwde
aad
movs
bound
leave
or
pushf
leave
stos
inc
enter
out
iret
fimul
pop
mov
pusha
dec
fwait
sbb
(bad)
(bad)
sbb
mov
call
and
call
test
ret
in
out
retf
jnp
repnz
xor
(bad)
popa
stos
inc
xlat
ret
shl
or
jl
push
nop
inc
retf
or
cmp
nop
frndint
std
fs
popf
sti
adc
or
adc
sub
fld
shl
les
adc
lock
stos
dec
(bad)
jmp
push
mov
push
cmp
add
jmp
in
fistp
sub
pop
jl
push
loop
dec
div
sub
retf
add
leave
inc
ja
lock
stos
jl
das
lds
sbb
jge
jmp
adc
sti
or
das
shr
jo
in
push
je
inc
jmp
popf
rol
in
xor
mov
test
icebp
inc
xlat
pop
(bad)
mov
dec
dec
ins
fnsave
mov
cli
mov
movs
ins
sbb
rcr
mov
std
pop
push
or
add
in
jns
je
inc
xchg
ja
mov
sbb
sbb
dec
sub
xlat
ds
dec
out
ret
out
in
shl
cld
dec
scas
and
and
jne
retf
int3
sbb
movs
and
mov
outs
dec
shr
pop
mov
clc
(bad)
push
mov
inc
ins
mov
jmp
push
or
xcrypt-cbc
cmps
push
xchg
stos
mov
popf
inc
sub
mov
cld
jns
adc
dec
jo
or
or
rcr
or
sbb
pop
jmp
dec
push
mov
ret
les
xchg
fstp
(bad)
les
ja
mov
out
or
shl
adc
mov
pop
xor
add
push
cmp
push
(bad)
sahf
xor
push
xchg
out
leave
jb
int
test
imul
sbb
xchg
xchg
loopne
adc
imul
scas
mov
jae
mov
mov
and
pop
mov
daa
daa
loopne
pushf
div
jle
sub
fs
jg
test
inc
xor
sti
fwait
adc
movs
push
(bad)
and
sub
outs
mov
cmps
adc
pusha
lock
inc
xor
sbb
pop
enter
inc
in
cmp
jne
push
iret
movlps
mov
add
and
movs
imul
pusha
ror
arpl
ins
int3
sahf
dec
lods
sub
(bad)
pop
and
jl
cdq
xchg
or
les
jno
iret
cmps
adc
push
pop
push
or
scas
sub
iret
sub
fcom
sub
inc
push
enter
inc
sbb
(bad)
cmps
stc
and
mov
mov
inc
pop
scas
push
mov
dec
push
xor
and
push
xchg
ins
dec
push
sahf
jge
cmp
pop
xchg
ror
push
jecxz
push
push
out
mov
mov
jmp
mov
jp
ins
cwde
adc
mov
cmp
xor
mov
cmp
in
sub
sti
pop
push
in
repz
push
jg
and
mov
adc
daa
ins
shl
pop
push
loope
dec
mov
ret
mov
or
sahf
outs
aam
popa
test
inc
(bad)
cmp
neg
sub
xor
push
data16
sub
xor
sbb
mov
arpl
mov
mov
pop
daa
or
aaa
sub
push
or
fld
call
mov
jae
call
push
fsub
pop
sub
test
cmp
cmp
mov
push
and
add
jle
pop
xchg
push
les
mov
cli
or
xchg
jmp
out
push
push
cs
(bad)
cmps
jo
push
and
js
pop
push
(bad)
push
movs
or
sub
sub
jno
mov
inc
mov
test
xchg
sar
or
nop
sub
mov
ja
cmc
jne
cmp
or
icebp
jns
push
pop
ss
mov
in
inc
ret
or
mov
dec
dec
or
jb
mov
or
cli
mov
jp
mov
xor
cmp
mov
outs
call
outs
in
jnp
jl
popf
push
push
pusha
nop
sbb
jmp
cmp
std
cmp
pop
mov
lea
jge
(bad)
jle
mov
leave
and
iret
data16
aam
mov
sbb
mov
push
pop
ins
cli
mov
cmps
arpl
sti
clc
or
xlat
sbb
mov
loop
jne
fldcw
inc
jg
je
push
xchg
push
push
xchg
mov
mov
mov
imul
fwait
add
pop
xchg
sbb
push
jle
call
fsub
sub
and
pop
dec
dec
out
stc
mov
add
jmp
mov
dec
push
sub
pop
adc
mov
or
(bad)
mov
fst
xor
cmp
mov
sub
dec
sbb
mov
std
xor
jne
mov
hlt
cs
jg
fcmove
shr
popf
xor
sti
shr
sbb
shl
pop
push
enter
and
add
dec
repnz
push
ror
and
nop
xor
popa
xor
movs
cmps
lods
daa
xor
fsub
xor
xchg
movs
jo
gs
mov
in
jno
sub
(bad)
out
sbb
push
mov
sub
and
outs
repnz
ja
xor
dec
fcomp
pop
push
cwde
inc
test
cmp
mov
mov
aad
push
in
das
fsubp
jne
loopne
iret
push
mov
dec
mov
and
xor
mov
das
push
cmp
cmp
jo
dec
xchg
imul
out
mov
mov
xor
jle
popa
xor
or
ds
(bad)
pusha
push
mul
jmp
jae
test
push
pop
das
fld
sar
jno
mov
ins
retf
shl
leave
pop
cmps
dec
in
repz
adc
and
sub
mov
jae
pop
sbb
jne
sub
pop
mov
xchg
dec
or
lods
add
sbb
mov
add
push
les
mov
call
lods
mov
cmp
mov
scas
div
pop
test
push
mov
inc
cmps
jae
pop
rcl
or
and
lock
sub
ror
inc
xchg
sub
retfw
or
xchg
je
jne
or
outs
jmp
jp
scas
and
dec
sbb
aad
inc
xor
mov
lods
test
cmp
and
mov
in
ror
pop
movs
test
iret
mov
dec
dec
mov
repz
sub
cld
test
jl
std
and
push
adc
(bad)
xchg
pop
fdiv
shl
gs
xor
dec
pop
cmp
scas
xor
or
inc
outs
es
(bad)
sbb
outs
movs
lea
adc
out
in
data16
xchg
dec
imul
out
dec
rcl
sub
jle
ret
or
daa
pop
jmp
(bad)
push
out
adc
dec
(bad)
cmp
mov
pop
sub
addr16
cmps
movs
xchg
imul
pop
xchg
(bad)
push
rcl
(bad)
jno
popf
dec
add
or
int3
or
lea
test
mov
inc
minps
pop
in
fst
les
mov
arpl
shl
xchg
adc
rcl
mov
xor
adc
xchg
lods
repz
push
(bad)
cmp
dec
cmp
pop
or
adc
sbb
jmp
push
in
cmps
cmp
pop
sbb
xchg
xchg
enter
and
jle
aad
loope
mov
mul
jmp
dec
jno
jle
sbb
or
sbb
test
test
(bad)
push
jno
xor
jmp
mov
(bad)
outs
addr16
ins
mov
aam
sbb
xor
sub
adc
mov
pop
mov
jbe
movs
sub
add
(bad)
pop
aaa
mov
push
xor
adc
push
xchg
sub
inc
mov
dec
jge
outs
sub
pop
in
pop
bound
inc
lahf
push
or
sub
cmc
sbb
das
ret
jp
push
adc
cmp
push
ds
or
adc
data16
mov
popa
xchg
xchg
jo
and
mul
out
cmc
scas
xchg
scas
inc
jo
retf
(bad)
into
jnp
fidiv
xor
or
fild
in
neg
outs
sti
mov
xchg
je
xor
and
pop
push
js
fucompp
(bad)
lea
(bad)
adc
mov
imul
aam
repnz
push
retf
dec
sbb
jnp
jbe
rol
sbb
mov
and
adc
adc
aad
dec
cmp
lods
sbb
inc
mov
or
pop
add
dec
pop
outs
addr16
test
scas
test
cwde
and
movs
cli
out
iret
mov
mov
outs
lods
aam
popa
pop
sbb
dec
fldcw
inc
nop
mov
mov
jnp
repz
cwde
dec
sub
test
sub
xor
or
adc
jno
bound
adc
sbb
test
iret
cmp
pop
(bad)
mov
or
ja
loop
cmp
clc
lods
sub
js
jo
icebp
mov
or
fistp
jo
lea
scas
add
jnp
and
not
test
push
and
mov
mov
loope
in
daa
jge
ror
sbb
dec
sbb
hlt
cmp
sbb
das
xor
(bad)
mov
mov
push
rol
add
inc
popf
cmc
stos
(bad)
xor
add
adc
jmpw
das
mov
scas
ror
test
xchg
out
dec
cdq
mov
sbb
lods
mov
test
pop
test
int3
inc
jecxz
push
je
mov
ret
adc
and
xchg
shl
push
in
adc
stos
in
mov
mov
adc
ret
aad
ja
push
idiv
in
jg
xchg
fs
ins
add
push
lock
mov
aas
cmps
repz
push
shl
xor
push
pop
pushf
imul
push
inc
xchg
inc
enter
adc
jns
or
add
lods
mov
xchg
sub
adc
mov
mov
das
stc
ds
aam
push
and
lea
not
push
mov
dec
xchg
mov
xchg
out
add
and
dec
pop
pusha
adc
jbe
fidiv
outs
rcl
cdq
mov
es
push
mov
call
cmp
fdiv
das
repz
popa
stos
mov
mov
loope
jmp
or
das
mov
add
lods
push
rcl
es
out
fidivr
mov
(bad)
lahf
xchg
mov
xchg
dec
and
rcr
movs
in
dec
stos
(bad)
adc
jl
adc
hlt
pop
clc
xchg
sbb
push
sub
popa
push
pop
mov
push
pop
mov
loop
test
adc
mov
(bad)
retf
jmp
and
push
cmp
sbb
cmps
dec
rcl
xor
mov
and
gs
call
dec
pop
js
aam
in
xor
dec
lea
hlt
lahf
mov
add
lock
das
pop
adc
inc
and
fcmovu
cmp
fwait
and
scas
inc
test
dec
arpl
and
movs
mov
aaa
cdq
fs
sahf
or
or
rcl
xchg
adc
pop
imul
adc
mov
outs
icebp
xor
mov
inc
es
aaa
and
dec
mov
mov
sbb
push
aam
gs
sti
cmp
clc
mov
lock
pushf
adc
movs
xor
idiv
dec
addr16
jmp
(bad)
xlat
(bad)
retf
mov
mov
imul
push
jp
sbb
cmps
sub
jae
inc
pop
push
jg
mov
(bad)
scas
sbb
mov
popf
push
in
cmp
sar
sbb
iret
push
int3
call
jmp
pop
xchg
mov
or
mov
mov
and
stos
movs
dec
mov
cmp
dec
cmp
jmp
mov
repz
aam
movs
aaa
out
mov
ss
lods
and
mov
adc
rcr
pop
xchg
sbb
ds
lods
jo
pusha
cmp
mov
sbb
in
cmps
(bad)
sub
cmp
(bad)
pop
lods
adc
sub
xchg
sub
push
mov
mov
es
stc
jp
mov
mov
in
sbb
xor
rcr
cld
dec
cmps
mov
punpckhwd
pusha
sbb
sub
fistp
sub
jno
in
pop
inc
sub
xor
xchg
in
mov
sbb
pop
push
cs
jns
sahf
or
xor
(bad)
cld
dec
mov
mov
scas
or
ja
or
mov
je
sbb
jbe
pop
hlt
push
cmp
icebp
imul
xchg
cmp
loop
xchg
fisub
in
mov
(bad)
shl
js
hlt
xlat
cdq
lds
sbb
stc
ss
mov
mov
es
cwde
popa
test
or
or
fs
inc
ds
frstor
dec
mov
lock
cmp
popa
jmp
and
dec
push
leave
sub
mov
push
mov
scas
adc
(bad)
inc
sti
outs
fwait
lods
sti
inc
out
ins
jmp
xor
jno
xchg
dec
sbb
mov
retf
xchg
sar
jns
jecxz
aas
xor
ja
cdq
ror
das
sub
pop
fcom
out
push
sub
jno
push
mov
stc
out
loopne
adc
cmp
mov
xchg
sbb
mov
aam
dec
aas
push
pop
arpl
adc
xchg
mov
mov
movs
(bad)
loopne
or
call
jg
cwde
adc
mov
mov
inc
dec
push
mov
mov
add
repnz
sub
mov
movs
mov
arpl
xchg
mov
mov
mov
and
or
sti
int
aaa
test
shr
add
rcr
and
inc
mov
pushf
and
pushf
iret
mov
mov
call
push
cmp
xchg
xchg
cdq
xor
sbb
shr
jns
out
xor
pop
sub
jecxz
out
cmp
outs
dec
pop
lahf
ror
out
jl
cmp
sbb
mov
mov
test
sbb
addr16
outs
pop
cmp
in
aam
mov
das
adc
cmps
les
js
clc
repz
popa
fwait
inc
push
retf
dec
fwait
jmp
inc
adc
in
xchg
jge
pop
scas
add
adc
stc
xchg
iret
xor
sub
inc
push
push
mov
sar
xchg
loopne
or
mov
int
fidivr
je
push
aaa
push
out
pop
imul
mov
data16
test
fstp
rol
fbstp
xchg
pushf
cmp
retf
stos
nop
fsubr
sub
sub
xor
push
push
or
loopne
test
sbb
pop
mov
xchg
lods
in
pop
jo
enter
xor
adc
adc
jl
cmps
(bad)
dec
cmps
aas
push
shl
adc
cmps
stos
test
clc
mov
les
mov
dec
test
in
push
jg
sub
mov
mov
cmp
nop
cmc
jns
xlat
pop
test
jbe
push
dec
mov
setns
adc
data16
xchg
or
test
pop
cwde
pop
xchg
mov
inc
cmp
mov
cwde
out
or
cmp
jno
dec
pop
div
mov
(bad)
push
out
jecxz
mov
call
stos
cld
loopne
and
xor
sbb
popa
fadd
mov
xor
lock
dec
int3
(bad)
fstp
push
in
int3
les
jmp
mov
mov
fcom
pushf
ins
test
adc
movs
inc
push
dec
lock
push
pop
fldcw
into
xchg
inc
sub
inc
cmps
sub
aaa
lods
push
cwde
push
pop
cmp
mov
sub
mov
mov
iret
aaa
pop
(bad)
push
adc
jbe
(bad)
outs
inc
sub
adc
sub
push
test
and
retf
jge
mov
mov
in
inc
jae
xchg
std
and
gs
cmp
out
xor
inc
add
fsub
les
inc
stos
mov
xor
push
sub
jnp
mov
shl
fdivr
loop
lahf
sbb
xchg
push
cmp
ins
xchg
sbb
mov
mov
gs
mov
(bad)
adc
lock
and
cmp
(bad)
clc
pop
jmp
jmp
and
repz
jne
jg
dec
imul
call
jo
mov
jne
xchg
in
sbb
sar
aam
mov
(bad)
icebp
pop
pusha
outs
push
xor
mov
mov
ds
inc
jecxz
inc
push
sbb
scas
js
cmp
and
repnz
out
xor
imul
ins
outs
pushf
mov
xchg
sti
adc
jl
and
cmp
xor
inc
or
push
adc
aam
dec
call
mov
jnp
cmp
movs
jge
push
sbb
das
adc
ja
xor
cmps
xor
aaa
outs
xor
push
pop
and
pop
out
xchg
lods
mov
mov
pop
retf
mov
daa
sbb
pop
cvtps2pi
adc
psubb
jmp
lods
push
dec
out
ins
inc
cmp
(bad)
imul
cmp
mov
addr16
lock
rcl
ins
out
xchg
retf
dec
pop
mov
ins
pushf
ret
jmp
out
pop
mov
jbe
cmps
and
xchg
repz
pop
or
adc
cwde
cmp
xor
jl
push
adc
retf
mov
in
jbe
fidivr
or
push
inc
inc
pop
cli
xor
xchg
pop
adc
jg
out
(bad)
loopne
shr
in
cmp
sub
mov
je
sti
mov
std
test
adc
cmp
js
pop
or
pop
xor
push
or
lods
call
mov
inc
or
push
sahf
lea
lds
pop
sub
iret
outs
mov
mov
sbb
sbb
popa
scas
add
shl
cld
sbb
xor
mov
(bad)
mov
sub
pop
test
and
mov
sti
in
inc
lock
xor
out
and
sub
add
test
cmp
test
mov
mov
movs
sbb
and
mov
and
imul
xor
movs
out
pop
outs
mov
pop
add
and
aad
gs
cmp
add
push
inc
and
sub
int
inc
dec
shr
fldenv
ins
inc
xor
cmps
out
in
clc
fisttp
shl
xchg
imul
lds
jmp
and
cli
in
add
inc
jmp
sub
or
iret
cli
daa
inc
call
retf
rol
in
xchg
dec
sbb
fiadd
jecxz
xchg
sub
cmps
and
cmp
and
js
stc
xchg
int3
xchg
retf
lock
es
jne
lods
jmp
xor
les
seto
or
push
mov
not
ds
or
loopne
mov
hlt
lock
jo
es
ror
jnp
jbe
test
cli
mov
jmp
inc
hlt
pop
lea
dec
in
sbb
adc
fnstcw
lahf
adc
fcom
xchg
dec
jns
inc
xchg
je
test
xchg
fwait
xchg
cmp
mov
cmc
inc
int3
adc
cld
inc
or
cmp
or
inc
fs
cld
cmps
icebp
mov
dec
mov
scas
loopne
fwait
mov
call
inc
shl
adc
call
jno
xchg
sbb
jnp
iret
mov
movs
inc
jecxz
inc
pop
mov
in
dec
push
pop
aam
and
int3
add
call
leave
and
sahf
aas
mov
cdq
das
inc
or
or
jae
jns
pop
test
arpl
(bad)
es
dec
xor
cli
adc
fld
xor
xor
in
inc
std
xor
fnstenv
or
lock
in
push
repnz
test
mov
das
sbb
ja
adc
lea
pop
es
test
mov
sbb
mov
mov
mov
cmp
mov
movs
loopne
xchg
scas
dec
mov
stos
in
cld
pop
lds
mov
mov
ds
cld
ficom
ficom
mov
jg
dec
sbb
sbb
stc
jp
aas
pop
pop
(bad)
shl
dec
sbb
push
mov
xchg
ds
adc
lea
test
sbb
(bad)
call
ds
fs
(bad)
push
xor
out
or
cs
adc
fcmovnu
or
push
add
sub
jb
data16
add
call
loop
sbb
sbb
jmp
sub
add
pop
sar
daa
dec
stos
fbstp
lods
inc
lea
mov
cmc
fwait
sub
mov
bnd
shl
pop
ret
fistp
mov
aam
out
jp
stc
jl
or
gs
dec
imul
xchg
mov
sub
test
mov
mov
xchg
inc
xchg
pop
fld
mov
das
mov
lods
mov
push
dec
xchg
cmp
jl
ds
push
bound
xchg
mov
rcl
sub
cmp
mov
iret
xchg
cwde
inc
xor
mov
pop
pop
fdiv
daa
clc
loopne
mov
jge
mov
add
int3
pop
movs
add
mov
xchg
test
push
push
push
lahf
repnz
push
jns
aam
jns
cmp
out
lods
jbe
pop
sub
cmp
cwde
dec
jae
mov
add
jnp
js
fiadd
mov
call
sub
das
cmp
mov
je
hlt
stos
pop
jnp
arpl
cli
dec
xchg
sbb
cdq
out
jl
ins
out
jmp
mov
xchg
inc
cmp
xchg
sbb
mov
cmp
neg
pusha
mov
mov
out
ror
and
out
add
add
mov
or
aam
xor
cmc
sbb
enter
(bad)
add
pusha
imul
and
fld
sub
mov
das
push
xor
rol
push
test
pop
stc
sub
add
and
ss
xor
fnsetpm(287
push
int
ss
pop
rol
cli
pop
push
pop
push
cli
cwde
in
push
jle
sub
cmps
mov
cmc
ror
vmovdqa
push
fdivr
push
call
cwde
(bad)
aad
test
mov
push
and
sbb
lods
pusha
scas
les
jo
mov
jmp
jns
in
ficom
lods
mov
xchg
mov
cmps
(bad)
bound
mov
out
neg
fcmovb
pop
rcr
dec
enter
push
popf
inc
jl
xor
mov
fcomp
rcl
or
gs
in
xlat
addr16
out
(bad)
into
ret
dec
inc
jmp
xor
hlt
int3
push
mov
cmp
lahf
pop
je
push
cmps
into
fnstsw
adc
jle
lods
jle
rcr
pop
and
call
mov
scas
(bad)
pop
xlat
ja
xor
mov
std
dec
push
das
scas
mov
pushf
inc
inc
hlt
mov
fist
xchg
sub
ficomp
pop
rep
rcl
pop
leave
adc
icebp
loope
add
mov
jecxz
(bad)
push
shl
imul
jns
jecxz
push
sub
scas
or
inc
pop
sbb
repz
call
pusha
std
mov
call
lods
dec
aad
adc
es
jge
cmps
ins
mov
mov
popf
xchg
or
dec
rol
push
jg
push
or
in
sub
stos
or
push
dec
fldz
xor
or
push
ins
sub
inc
sub
push
cmp
jb
repnz
jo
dec
ret
fld
mov
inc
inc
sub
mov
scas
jl
rol
dec
fstp
sbb
sub
pop
push
push
ss
xchg
and
(bad)
hlt
(bad)
(bad)
or
push
jb
test
pop
movs
stos
inc
dec
add
cmps
(bad)
dec
mov
out
into
outs
fwait
xor
sbb
xor
cmp
mov
pop
sub
out
pop
int3
imul
fst
arpl
fbstp
jmp
mov
inc
mov
nop
gs
sub
scas
(bad)
adc
mov
mov
and
dec
loope
rcl
into
jne
xor
jl
test
rcl
and
jmp
or
xor
dec
fstp
popa
call
(bad)
pop
sti
xchg
inc
inc
mov
std
mov
addr16
stos
pop
pop
pop
push
jae
sub
dec
pop
fst
inc
sub
fnstsw
cmps
cmp
nop
mov
or
inc
(bad)
aas
dec
in
movs
mov
int3
sub
lock
cmps
ret
mov
mov
enter
jmp
repnz
sbb
sub
test
cmp
js
mov
jle
pop
cli
xchg
mov
sti
shr
mov
jge
jo
sub
ret
dec
jno
mov
test
sub
jmp
mov
push
cmc
dec
popf
or
mov
mov
jae
sbb
sub
mov
and
jns
mov
neg
mov
addr16
in
jge
sub
loope
sub
jns
jg
dec
mov
add
dec
or
push
ins
mov
adc
jmp
jl
inc
mov
or
or
inc
int3
imul
movs
cmp
xchg
shl
jb
mov
or
adc
fucom
ficom
mov
fidivr
shld
pop
or
cmc
xchg
sbb
in
je
xchg
fcomip
or
int
mov
dec
sub
push
or
mov
push
mov
aas
hlt
mov
out
cdq
fwait
or
dec
push
gs
sbb
pop
add
lods
pop
(bad)
push
iret
mov
jg
shl
cli
je
cmps
movs
inc
fs
cs
fisubr
mov
adc
pop
loopne
aaa
call
mov
mov
outs
(bad)
test
(bad)
cmp
int
rcl
jle
pop
repz
mov
stos
popa
lahf
sub
push
cmps
mov
sbb
test
loope
les
jb
sub
frstor
ja
push
cmp
(bad)
enter
jne
dec
fild
loopne
ja
test
jnp
jg
sbb
inc
sbb
dec
fcom
outs
pop
pop
inc
mov
cmp
adc
xchg
adc
xchg
mov
cmp
(bad)
adc
rcl
retf
jae
sar
aas
(bad)
mov
mov
push
imul
sahf
dec
pop
and
bound
pop
call
imul
sub
xchg
repz
(bad)
pop
sahf
jp
repz
shl
xchg
stos
nop
fidiv
popf
xor
outs
cmp
sahf
(bad)
mov
mov
push
pop
cmps
aaa
mov
mov
inc
stc
xor
inc
mov
test
sbb
cs
add
cmp
pop
out
push
dec
and
xchg
jne
dec
pop
sbb
dec
xor
jl
mov
push
out
cs
sub
in
mov
push
pop
das
dec
adc
or
adc
shl
jmp
les
shl
cmp
les
pop
push
shl
iret
arpl
out
cmp
dec
sbb
push
xchg
adc
jbe
jne
xchg
repz
xchg
xor
popf
clc
mov
or
and
jmp
jnp
out
in
pop
and
(bad)
loope
dec
fcmovbe
pusha
pop
and
cwde
dec
mov
fnstenv
push
mov
mov
je
mov
jg
mov
stos
add
and
icebp
loop
es
ins
adc
ins
cmc
stos
ja
dec
lahf
test
ss
push
imul
(bad)
jae
into
mov
mov
mov
daa
push
retf
sahf
xchg
cld
or
in
ins
popf
push
xchg
dec
adc
test
and
pop
mov
inc
(bad)
inc
dec
and
push
(bad)
jne
shr
(bad)
inc
in
(bad)
pop
push
cld
stc
cli
push
mov
mov
scas
mov
pop
bnd
adc
sbb
pop
xchg
xchg
(bad)
loop
pop
gs
cld
call
orps
popa
test
add
mov
dec
dec
test
js
ret
mov
pop
dec
xchg
jnp
cmp
xor
or
leave
das
xchg
cmps
jp
and
popf
jmp
enter
fcmovnu
jecxz
inc
je
cmp
xor
dec
sbb
(bad)
sub
push
and
cmp
loopne
pop
xor
add
bswap
inc
ror
das
jnp
and
push
push
jno
fst
and
mov
int3
xchg
mov
adc
mov
xor
outs
cmp
mov
bound
(bad)
jecxz
inc
add
pop
(bad)
pop
les
xor
xchg
add
jns
das
jp
mov
aam
jmp
movs
mov
mov
or
lea
xchg
jnp
dec
cmp
jmp
jmp
or
or
movs
in
mov
test
mov
arpl
xchg
inc
jae
repnz
xor
jp
test
and
inc
dec
call
inc
mov
ins
mov
lds
call
es
fs
shr
xchg
inc
jg
and
das
xchg
jp
(bad)
push
mov
cmps
mov
fcmovnb
std
sbb
retf
int3
aaa
adc
and
xor
fldenv
or
outs
inc
mov
in
mov
aas
inc
lea
and
inc
dec
inc
cld
ficomp
cmps
neg
arpl
arpl
loop
or
int
(bad)
adc
or
jmp
push
in
and
pop
mov
or
mov
mov
pop
mov
sti
mov
mov
adc
stos
jge
mov
push
es
mov
and
je
cmp
add
mov
ss
sbb
mov
jae
xchg
sti
xchg
adc
push
cmp
aad
lock
icebp
sahf
add
add
cmp
add
inc
xchg
jns
mov
je
shr
adc
fild
test
mov
cmp
jle
and
movs
mov
xchg
in
enter
cmps
mov
add
fsub
mov
aam
push
sbb
or
jle
dec
push
jns
lods
daa
sbb
jp
xchg
mov
mov
dec
in
inc
js
pop
loopne
jo
mov
out
pusha
dec
sar
xchg
or
xor
mov
lahf
cdq
ror
sub
out
and
mov
jle
popf
pop
fwait
inc
(bad)
(bad)
(bad)
pop
mov
add
sbb
data16
dec
or
xchg
cmps
pop
movs
push
xchg
popw
pop
mov
loopne
xchg
dec
or
test
xor
push
jg
data16
add
retf
xchg
popa
imul
psubq
pop
pop
pop
add
lods
dec
ret
daa
ror
(bad)
in
push
pop
rol
push
pop
push
lock
cmps
mov
push
pop
or
jae
cwde
popa
pusha
add
or
pop
es
imul
xchg
add
scas
mov
idiv
movs
xor
call
adc
push
scas
lea
loope
(bad)
rcr
(bad)
js
cmp
daa
call
push
loopne
mov
sti
sbb
or
jg
test
xor
loopne
xchg
push
push
cmps
test
xchg
packssdw
inc
add
add
dec
iret
retf
aas
mov
xchg
or
aaa
sub
jne
lods
push
mov
jmp
rcl
mov
cmp
mov
lock
rcr
out
or
sub
je
aas
adc
and
gs
xchg
pop
mov
jecxz
mov
popf
(bad)
into
ins
dec
inc
cmps
sub
mov
cmps
xchg
and
push
dec
fistp
stos
push
mov
pop
cmp
xchg
add
xor
pop
out
mov
mov
rcl
fimul
call
pop
xor
pop
psubw
loope
adc
mov
bound
pushf
js
push
lods
mov
lods
cmp
mov
jl
pop
std
cs
xor
fbld
dec
in
mov
xchg
pop
jae
sbb
arpl
xor
mov
(bad)
push
pop
nop
fisttp
xchg
add
ror
(bad)
popa
add
push
clc
jmp
cwde
retf
movzx
inc
push
or
jb
cdq
fwait
push
cmc
out
xchg
jl
adc
in
jo
mov
mov
sub
scas
pop
lea
push
test
and
push
loope
repnz
lea
(bad)
add
push
movs
sub
dec
fisub
mov
pop
lahf
mov
mov
setle
inc
rcl
inc
sub
pop
mov
and
retf
jecxz
(bad)
pop
and
xchg
mov
jl
aam
stos
out
(bad)
mov
out
sbb
sub
inc
sub
push
inc
cmp
das
and
xchg
add
sub
ins
call
or
fwait
(bad)
ficomp
push
dec
push
dec
xor
xor
add
mov
push
mov
leave
dec
in
imul
stc
lock
ins
and
jl
mov
iret
retf
add
test
hlt
pop
retf
aaa
leave
lods
xchg
mov
xchg
pop
sub
cli
lods
sub
pop
out
icebp
aam
pusha
and
ds
cmp
dec
retf
test
pop
mov
pop
cdq
push
mov
repnz
movs
adc
adc
push
push
sub
pop
jo
mov
adc
test
mov
and
popa
in
int3
xor
or
data16
mov
jecxz
mov
and
inc
or
loope
xchg
mov
bound
or
mov
mov
fcomip
push
ret
retf
push
aam
nop
pop
into
or
inc
fwait
test
adc
cmps
and
pop
sbb
shl
jae
mov
jbe
mov
cmp
test
dec
inc
ret
int3
int
js
dec
call
jno
push
push
inc
push
aad
xor
push
sbb
xchg
push
cmp
cmp
(bad)
jmp
scas
aad
adc
je
lods
clc
dec
inc
stos
lods
cmc
jne
and
ds
int
mov
cdq
imul
mov
jecxz
mov
(bad)
ins
jg
repz
jmp
xor
retf
push
test
lea
xor
or
mov
xchg
(bad)
imul
mov
mov
inc
dec
(bad)
push
(bad)
push
out
push
(bad)
fdiv
mov
or
sbb
cmps
push
xchg
ins
cmps
push
outs
ror
jmp
mov
fisubr
repnz
mov
inc
adc
fsubr
dec
xor
sar
cmp
jnp
outs
stos
pop
(bad)
(bad)
and
test
jge
movs
icebp
or
mov
pop
or
push
retf
inc
inc
sbb
hlt
dec
xchg
dec
(bad)
mov
fld
les
mov
mov
cwde
ja
rol
(bad)
sub
sti
fisubr
and
xchg
xor
adc
fcomip
mov
mov
and
cmps
sbb
push
rcl
push
ja
push
jns
dec
and
loop
iret
lea
es
in
mov
movs
int3
aam
test
popa
mov
sahf
dec
cmp
std
mov
gs
cmp
(bad)
cmc
add
adc
jle
imul
pusha
shr
adc
ds
les
and
sbb
shr
xchg
daa
cmp
cmp
lock
out
out
cmps
int
push
adc
fwait
jg
and
sub
popa
inc
jle
xor
(bad)
js
out
jb
ja
mov
je
ror
cmps
and
and
popf
aaa
fbld
cld
cs
cmp
aas
adc
cwde
imul
cld
mov
pushf
pop
fdivr
mov
loopne
test
data16
ins
test
dec
fild
lahf
inc
push
movs
hlt
movs
and
mov
sub
jno
mov
inc
or
add
jb
jae
stos
push
loope
stos
jle
mov
mov
cs
jge
mov
scas
xchg
hlt
cmc
add
mov
push
xchg
cs
xchg
ret
out
stos
adc
pop
mov
adc
in
and
mov
xchg
sbb
loopne
or
and
lahf
sbb
dec
push
rcr
jmp
adc
pop
inc
push
cmp
xchg
jb
dec
or
or
inc
out
jnp
add
mov
jp
and
(bad)
rcl
(bad)
fmul
sub
push
cmps
int3
xchg
pop
bound
cmp
xchg
enter
or
int
xchg
scas
or
jle
inc
call
lds
cmps
xchg
pop
in
mov
jb
outs
mov
inc
notrack
or
jmp
dec
scas
cmp
scas
jge
push
mov
ret
and
sub
popf
out
cmps
and
xchg
fiadd
imul
int
mov
aaa
mov
fidivr
push
pop
add
cwde
mov
leave
in
movs
test
ss
pop
lahf
adc
jmp
and
pop
mov
jnp
mov
call
mov
sub
ja
pop
repz
rol
leave
ret
out
dec
inc
cmp
es
and
pop
or
or
mov
aas
or
push
xchg
int3
call
pop
fsubr
lods
mov
xchg
jno
jge
test
sbb
mov
call
shl
into
dec
repz
sbb
sub
bound
aaa
sub
loope
addr16
add
cmp
cwde
ja
les
inc
add
sbb
dec
jecxz
mov
mov
pop
pop
mov
push
pop
mov
sbb
js
retf
mov
push
pop
sub
xchg
call
sub
sbb
cli
aaa
add
jnp
out
enter
dec
mov
and
or
xchg
in
mov
(bad)
gs
sbb
fs
or
mov
out
add
mov
or
or
pop
mov
sub
mov
ins
mov
jge
call
jecxz
xor
pop
xchg
jmp
in
sub
jg
mov
mov
outs
mov
jne
lods
out
add
rol
scas
stos
sub
pushf
dec
es
sar
ret
or
leave
or
push
rol
cmp
cmps
push
lahf
pop
in
jl
sti
pop
inc
sbb
popa
xchg
inc
jnp
lods
xor
and
pusha
push
popa
aas
cli
or
mov
out
cmp
outs
stos
mov
movs
add
fwait
test
mov
push
add
mov
js
(bad)
nop
repnz
or
pop
aaa
sub
test
and
dec
popf
(bad)
es
stos
movs
imul
ss
(bad)
jle
or
shl
retf
fdiv
cdq
daa
mov
sub
sbb
loope
not
ror
and
dec
adc
xchg
aas
repnz
out
repz
xchg
add
mov
jmp
ds
repnz
in
sar
rcl
mov
xchg
xor
xchg
push
clc
loop
jno
cmp
jnp
cld
adc
addr16
lods
adc
outs
aam
mov
fdivrp
daa
and
pop
xor
jg
leave
jecxz
xor
imul
mov
hlt
cmp
int
xchg
icebp
jg
pop
mov
test
stc
or
and
push
xor
mov
lods
sbb
mov
push
popa
mov
and
push
push
and
iret
(bad)
mov
loope
mov
jns
mov
or
xor
mov
shl
pop
cs
jg
aas
jge
adc
pop
retf
ret
mov
cli
iret
sub
test
mov
mov
imul
and
stos
repnz
loop
repz
jno
push
push
imul
enter
push
scas
jno
arpl
fidivr
aam
pop
xlat
div
lods
mov
addr16
mov
mov
adc
nop
mov
aaa
popf
mul
xchg
fistp
adc
into
outs
test
cmp
dec
aas
mov
fadd
imul
and
ds
scas
pop
jl
sub
in
mov
icebp
mov
daa
(bad)
enter
outs
popa
packuswb
and
test
cld
pop
movs
aad
call
(bad)
stos
out
(bad)
push
rcr
fwait
ret
jmp
and
jecxz
je
jmp
in
sub
out
mov
mov
adc
scas
mov
pop
mov
push
inc
fwait
jg
xchg
rcr
arpl
shl
mov
adc
dec
es
hlt
cmps
and
scas
loope
movs
push
and
dec
xor
mul
push
dec
(bad)
ja
and
cmp
out
mov
lods
fsubr
jae
imul
ins
(bad)
dec
jnp
lods
cmp
cld
xlat
lahf
mov
lea
out
imul
movs
cmp
aam
in
sbb
add
test
sbb
sub
mov
mov
fstp
aad
jg
ret
xor
dec
scas
retf
and
or
lahf
lahf
dec
in
cld
push
push
nop
js
cmps
push
mov
fidiv
arpl
test
cmps
push
xor
stos
pop
les
pop
inc
ds
pop
sub
xchg
mov
test
lods
or
mov
xor
out
arpl
push
push
pushf
stos
movs
fdiv
mov
xor
add
mov
(bad)
ja
test
xor
mov
stos
dec
popa
mov
test
lahf
test
aam
popf
or
(bad)
into
out
fwait
popf
sti
pusha
mov
and
sar
stos
retf
mov
jmp
xchg
ss
aam
fldpi
lock
sub
add
jle
(bad)
frstor
pop
les
mov
les
dec
mov
xor
lock
(bad)
aad
and
pop
(bad)
dec
and
mov
fwait
jmp
ret
lea
sahf
mov
xchg
mov
adc
cdq
fnsave
lods
xchg
sub
fimul
or
rcl
js
inc
add
xor
ja
mov
sbb
add
push
mov
out
sub
out
or
lds
inc
add
cs
stos
mov
outs
mov
(bad)
jecxz
pop
mov
aad
inc
lock
inc
dec
je
mov
mov
pop
push
ins
cs
ds
push
ret
movs
pop
pop
(bad)
or
and
pushf
shl
aam
sub
stos
not
sub
dec
sbb
fidiv
movs
fisttp
(bad)
or
lahf
or
or
loop
shr
mov
stc
cdq
jmp
dec
push
xor
jl
test
daa
add
mov
leave
dec
sti
repnz
add
pop
and
scas
lds
mov
xchg
lahf
dec
(bad)
xor
mov
cmp
call
fmulp
ds
sub
sbb
mov
call
retf
mov
jns
jno
push
mov
repnz
std
dec
mov
rol
loop
xlat
cmc
fs
bound
mov
cmps
and
repz
or
(bad)
pop
lock
aam
mov
dec
fwait
(bad)
cmovae
dec
sub
dec
retf
cmp
mov
or
loopne
lock
or
and
nop
mov
or
gs
es
dec
out
pop
loop
cmp
mov
mov
out
mov
sbb
ficom
mov
cmp
push
cmp
popa
(bad)
jg
fimul
movs
fmulp
jp
imul
mov
ins
data16
ficom
mov
xchg
jle
cmps
mov
cmp
mov
es
jne
cmc
cwde
push
and
in
inc
add
xor
and
jmp
xor
push
push
sbb
inc
push
add
and
mov
push
and
ins
outs
add
outs
lea
loopne
push
xchg
mov
int3
xlat
mov
in
cmp
add
xchg
(bad)
pop
mov
stos
in
inc
idiv
lock
cmovno
mov
sub
sub
hlt
cli
jg
cmp
mov
and
cmps
lahf
pop
aam
xchg
push
arpl
int3
lods
inc
mov
push
mov
xor
into
jo
rol
scas
or
sub
xor
ror
inc
xor
mov
(bad)
xor
loop
dec
mov
outs
mov
xchg
jge
pop
pop
cmp
cmovb
push
dec
xor
call
or
js
outs
outs
es
js
xchg
xor
jnp
ret
mov
mov
imul
in
or
cmp
js
jp
(bad)
lea
fsub
inc
sbb
xor
mov
shr
jg
lea
leave
add
bound
sar
xchg
clc
jge
gs
fcomp
push
daa
jmp
cdq
add
ror
and
scas
outs
push
and
mov
pop
imul
add
inc
call
js
push
mov
xchg
fwait
xor
cmp
jmp
outs
xchg
ja
popa
icebp
(bad)
js
or
push
mov
ss
xchg
xchg
dec
inc
movs
push
xchg
xchg
jle
gs
enter
jo
dec
push
aad
fwait
mov
aad
mov
(bad)
(bad)
mov
sub
ror
mov
call
(bad)
mov
pusha
out
arpl
adc
in
fcomp
fsubr
sbb
push
dec
or
xchg
sub
bound
jp
adc
mov
dec
jnp
(bad)
xlat
into
arpl
push
jp
movs
xchg
fisubr
jecxz
inc
shl
dec
xchg
ss
jmp
push
into
call
dec
or
int
or
sub
test
mov
xchg
jne
nop
dec
and
adc
mov
fnsave
jno
adc
aaa
or
(bad)
shl
xchg
movs
mov
retf
movs
xchg
pop
inc
pop
(bad)
mov
int
in
call
pushf
jp
fist
es
sar
mov
pusha
push
dec
ss
adc
outs
jns
mov
imul
mov
leave
les
cld
sub
or
push
pop
add
jp
in
adc
inc
cdq
cmp
test
pop
adc
ror
stos
push
xchg
inc
stc
js
jecxz
rol
cmps
xor
pop
jle
jb
ja
ret
cs
mov
stos
and
sub
xor
ficomp
in
jae
mov
mov
xchg
idiv
mov
scas
push
(bad)
jle
faddp
pop
mov
outs
and
mov
mov
pop
mov
xchg
and
adc
(bad)
or
xchg
mov
stos
xchg
adc
xchg
das
(bad)
int3
xchg
cdq
push
pop
jmp
sbb
leave
pop
(bad)
mov
hlt
popf
(bad)
or
mov
scas
pop
es
jp
sub
add
bound
jae
inc
inc
ja
sub
fist
stos
mov
ins
fwait
into
push
inc
cs
daa
pop
cmp
mov
fidiv
jmp
or
jg
enter
and
push
xor
icebp
push
or
lds
je
jge
xor
in
mov
inc
pop
xchg
call
and
dec
movs
jae
cdq
out
jbe
pop
stos
and
and
mov
mov
mov
inc
dec
dec
cld
jns
test
adc
hlt
bound
or
(bad)
jmp
mov
push
cmp
dec
ret
or
aas
xchg
and
xchg
(bad)
dec
scas
pop
jne
retf
xor
out
cwde
or
and
pusha
lahf
sub
cmps
div
xchg
sub
push
jl
sbb
int
jp
dec
cli
xlat
xor
int3
sbb
push
add
pop
lea
or
sub
loop
mov
jmp
(bad)
ficomp
scas
hlt
(bad)
bound
push
sub
enter
jmp
les
xchg
scas
inc
lahf
std
sahf
cld
enter
ins
sbb
(bad)
dec
jns
dec
pop
imul
jmp
inc
pop
sar
gs
xor
sub
sub
imul
xlat
int
inc
popa
pop
pop
loope
retf
lea
sub
sub
adc
test
jnp
adc
fcom
and
ror
sub
and
xchg
outs
mov
imul
add
(bad)
push
cli
rol
add
leave
inc
cli
add
inc
add
xchg
ffreep
test
jae
push
jnp
jae
int3
movs
call
fidiv
ins
mov
or
jbe
(bad)
popf
std
les
xchg
popa
cdq
jno
pop
cwde
fsub
dec
cmovbe
jp
fimul
out
outs
cmp
aad
inc
mov
je
retf
int3
aaa
shl
dec
lock
faddp
(bad)
adc
xor
fmul
outs
lods
jno
or
mul
adc
loopne
cmps
in
or
or
inc
xor
loop
(bad)
xlat
mov
pop
mov
dec
xor
push
pop
and
addr16
xchg
add
xchg
les
inc
sub
test
sbb
mov
div
fwait
imul
mov
push
das
mov
mov
jl
call
test
mov
std
jp
es
psrlw
xor
cmc
adc
dec
jno
xor
cmps
fldcw
(bad)
jge
in
imul
mov
rcl
mov
mov
pop
cmp
dec
outs
adc
mov
push
xor
pop
mov
test
xchg
movs
fcomp
fdiv
add
(bad)
rol
hlt
add
sbb
xlat
hlt
pop
mov
jnp
call
push
(bad)
(bad)
les
jmp
hlt
imul
push
sbb
xor
sbb
shr
ror
ret
call
mov
stc
push
in
fidivr
scas
xor
sub
fst
mov
aam
jmp
mov
loopne
cmp
add
jbe
repnz
sbb
ja
ret
or
(bad)
mov
nop
mov
mov
sub
mov
add
and
retf
jno
xchg
out
es
xchg
dec
add
and
outs
cmc
in
jle
movs
push
bound
cmp
xchg
bound
popa
mov
or
inc
dec
cmp
(bad)
pop
ss
xchg
push
push
sar
mov
nop
or
in
cmps
or
add
sub
dec
push
and
and
movs
inc
rol
(bad)
xor
mov
mov
lds
inc
fdiv
xchg
mov
stos
xor
cmp
sub
mov
dec
mov
mov
and
ds
enter
es
test
mov
cmp
sbb
das
nop
lahf
mov
sub
mov
call
outs
sahf
and
xchg
js
mov
icebp
xchg
mov
call
jmp
test
call
dec
push
pushf
xchg
test
cmp
dec
sub
or
inc
xlat
inc
and
cmc
jmp
frstor
mov
add
aaa
ins
out
push
js
xchg
mov
in
mov
out
mov
mov
jmp
dec
ins
retf
push
add
xor
nop
outs
sub
mov
sub
sbb
mov
in
inc
push
lock
xor
out
xor
in
mov
dec
gs
and
xchg
sbb
enter
fucomi
mov
stc
addr16
cmp
ret
int3
jg
aas
cdq
ins
out
test
lds
rcr
mov
mov
xor
sub
mov
sbb
cmps
scas
inc
pop
push
push
loope
cmp
jbe
add
mov
push
mov
mov
xchg
js
and
add
sub
repz
scas
(bad)
outs
in
add
bnd
ins
add
out
leave
mov
sbb
sbb
cld
xchg
sbb
out
retf
dec
loope
add
push
outs
mov
mov
sub
outs
xchg
aad
or
push
or
cmp
pop
out
ret
dec
and
add
shl
mov
push
adc
in
xchg
xor
pop
cwde
and
and
jmp
jnp
pushf
scas
adc
pop
fwait
shl
adc
(bad)
ret
ret
push
dec
jne
jbe
push
adc
movs
gs
bnd
stos
cwde
shl
sub
adc
push
sbb
cs
and
push
ds
cs
imul
mov
xor
rcl
cmp
fs
mov
jne
sub
dec
stos
in
mov
pop
(bad)
fcomp
push
int3
lods
sub
into
cmp
adc
out
arpl
test
out
add
or
pop
test
(bad)
loop
call
(bad)
adc
loopne
vsqrtss
pop
sub
push
add
push
push
ins
scas
(bad)
push
or
push
aaa
xchg
jno
fs
inc
pop
xchg
(bad)
xchg
mov
inc
outs
xchg
lea
push
lahf
mov
push
push
and
xlat
outs
not
xor
or
push
mov
or
adc
(bad)
repnz
int3
sbb
jne
adc
push
mov
push
out
cmp
in
sbb
push
mov
xchg
in
movs
mov
out
xor
push
ins
jns
xor
sbb
mov
push
dec
icebp
clc
xor
xchg
pop
and
fnstsw
cmps
(bad)
push
jg
icebp
pop
test
inc
movs
out
push
cmp
repz
cmc
ja
push
mov
dec
ficom
div
xchg
xchg
or
shl
test
pop
jae
and
pop
jns
je
cmp
push
and
mov
sub
xor
add
push
sub
fsubr
and
fld
imul
repnz
add
int3
repnz
mov
cmp
dec
sti
popf
popf
enter
shr
retf
dec
dec
fmul
add
jp
test
xchg
not
inc
pop
push
push
out
inc
sbb
aas
int
ror
jmp
xchg
pusha
mov
std
dec
ret
(bad)
push
pop
imul
mov
daa
add
cs
xchg
add
(bad)
icebp
ds
movs
iret
gs
retf
in
lods
mov
push
hlt
mov
xchg
mov
sub
aad
test
(bad)
pop
fst
xchg
das
jmp
lea
aas
mov
jecxz
xchg
push
js
call
mov
je
imul
mov
and
int3
je
inc
int
pop
mov
jnp
pop
les
sbb
sbb
mov
outs
sub
retf
retf
cmp
icebp
xlat
sub
fcomp
cmps
rcl
les
(bad)
outs
xor
stc
movs
jno
mov
adc
xchg
sar
and
jbe
sub
jg
pusha
jb
dec
jo
xor
(bad)
cmp
inc
inc
rol
popa
jo
xchg
add
ds
test
pop
test
xchg
gs
xor
push
test
ror
mov
cwde
outs
add
hlt
inc
aad
cmp
sbb
pop
mov
mov
lea
test
cld
mov
xor
sub
mov
(bad)
xor
clc
rcl
nop
and
stos
rcr
add
pop
pop
xor
in
push
(bad)
jne
mov
ret
adc
sub
mov
and
addr16
pop
fldenv
cmp
movs
popf
adc
fsubr
and
(bad)
mov
cmp
jo
sub
add
scas
mov
(bad)
das
jl
inc
jo
cmp
cmp
inc
xchg
pop
in
sbb
lock
mov
sub
push
inc
sahf
and
mov
neg
dec
movs
add
call
iret
fdiv
mov
cwde
shl
call
push
xchg
(bad)
jbe
push
pushf
fcmovb
jae
repz
mov
add
jnp
pop
and
movs
xor
push
scas
mov
xchg
cmp
inc
lock
mov
dec
pop
add
jno
xlat
mov
sbb
int3
cmp
xchg
outs
inc
shr
mov
xchg
xor
sar
retf
jb
nop
call
and
adc
adc
cdq
dec
fsubp
pop
jb
mov
rcl
addr16
out
xlat
in
pusha
pop
sub
call
loope
push
(bad)
sbb
fidiv
jp
daa
(bad)
(bad)
lahf
sub
cmp
or
mov
lahf
retf
pusha
data16
inc
sub
adc
mov
xchg
test
and
scas
retf
sub
fisttp
mov
cmp
lea
or
xlat
sbb
fidivr
inc
jecxz
ficom
std
and
int3
bound
adc
add
es
jne
rcl
mov
std
in
(bad)
rcr
pop
stos
les
jle
xchg
cli
dec
fld
leave
jae
dec
ins
mov
adc
inc
dec
(bad)
(bad)
jl
in
jno
add
lods
sti
fadd
pop
ins
movs
out
ror
adc
into
and
repz
add
ror
test
rcr
or
dec
ja
lods
rcl
jns
and
sbb
inc
stc
daa
jne
pop
loope
xor
arpl
sahf
mov
sbb
leave
jbe
lock
xchg
xchg
pop
jmp
hlt
repz
push
mov
push
(bad)
cmc
aad
enter
mov
es
ror
mov
fst
jmp
in
stc
adc
pop
xor
and
pop
gs
imul
jne
push
or
or
or
sti
inc
and
add
sahf
ds
lods
frstor
test
mov
fwait
push
mov
cmp
xchg
icebp
out
pop
xor
test
pop
push
addr16
add
outs
push
dec
je
inc
cmp
pop
fisttp
in
pusha
out
shl
es
mov
out
cmp
pop
pop
out
pop
pop
stos
sbb
mov
xchg
ror
data16
(bad)
out
add
std
leave
add
test
imul
xor
cmps
mov
dec
sbb
gs
mov
dec
retf
into
xchg
in
push
data16
mov
add
stos
test
shl
cmp
imul
test
ss
push
cmp
adc
sub
cmp
arpl
ffreep
mov
mov
cmps
int
and
inc
sub
adc
call
mov
test
adc
push
cmp
rcl
cmp
test
xchg
cmp
test
xor
xlat
mov
and
dec
shl
retf
mov
push
mov
div
mov
or
inc
fisub
fs
scas
pusha
fisub
cmp
xchg
faddp
test
ret
loope
les
pop
fldenv
lahf
popa
outs
or
ins
jno
(bad)
pop
lea
adc
xor
mov
add
mov
fidivr
mov
retf
call
icebp
dec
mov
mov
iret
mov
jle
pop
xor
mov
or
add
push
jo
jb
loopne
pop
jo
mov
out
stc
xchg
int
pop
movs
test
repnz
and
aam
push
lods
sub
jb
stos
js
dec
mov
xchg
out
add
mov
inc
imul
nop
push
sub
mov
scas
mov
add
pop
jp
icebp
movs
xchg
test
mov
movs
movs
sub
int3
shl
std
mov
icebp
retf
(bad)
pop
clc
inc
pop
jb
push
mov
or
lds
movs
leave
xchg
dec
push
stc
push
aam
into
jmp
shl
cli
add
xchg
mov
jmp
arpl
lds
fwait
or
sub
pushf
or
sub
push
jmp
stos
lahf
mov
pop
sbb
(bad)
repnz
add
ins
(bad)
loope
fdiv
sti
outs
adc
lahf
sub
mov
test
stc
pop
sbb
jne
aam
mov
or
rol
sub
fst
jecxz
add
stos
cwde
xor
xor
pop
push
pop
outs
sbb
push
cmp
leave
bound
ja
loop
and
(bad)
call
(bad)
icebp
push
dec
pop
cmp
dec
call
cmp
xor
fs
xchg
fadd
adc
not
xor
adc
mov
ret
cdq
jne
fs
sub
iret
repz
jl
xchg
ins
mov
push
js
inc
ds
xor
iret
pop
inc
xlat
in
mov
scas
call
add
jg
jo
mov
lahf
scas
xchg
ret
ss
push
dec
ret
ins
repz
mov
out
data16
or
dec
out
jmp
xor
int3
xchg
jnp
jmp
xor
repnz
push
(bad)
mov
sbb
rcr
jb
repnz
es
xchg
xchg
jge
loope
mov
(bad)
sub
dec
int3
mov
mov
adc
and
jno
xchg
or
imul
lahf
hlt
cmp
mov
or
sbb
xchg
pop
dec
test
test
pusha
int
pop
sti
or
xor
jb
dec
arpl
jecxz
or
mov
je
movs
adc
inc
(bad)
dec
test
pop
mov
xchg
adc
inc
sub
data16
push
xlat
int
stos
jmp
test
push
ret
aas
mov
sub
js
pop
shl
or
sti
mov
ja
push
jmp
mov
jno
xor
dec
dec
mov
mov
push
repnz
stc
xchg
jae
cmp
fwait
mov
(bad)
cmp
js
std
stc
fs
jae
cmps
lea
in
movs
adc
les
mov
pusha
fsub
daa
stos
cmp
xlat
xchg
retf
pop
xor
ja
mov
push
and
inc
xchg
xor
jmp
cwde
jecxz
push
or
push
mov
sub
sub
mov
adc
ret
mul
fwait
out
dec
(bad)
jmp
fs
jno
loope
dec
sub
fist
in
int3
sub
xchg
es
or
and
stc
out
mov
and
test
cmp
mov
cdq
lods
pusha
in
(bad)
in
sti
xchg
jmp
mov
push
xor
mov
pop
ret
mov
fstp
cmp
mov
ins
lods
pop
fisub
clc
dec
xlat
shl
in
sti
push
pop
or
push
into
iret
sub
jmp
test
arpl
push
rol
ret
(bad)
jno
mov
jmp
jg
mov
cdq
sets
add
or
add
add
aaa
iret
push
fsub
dec
and
lea
shl
repz
or
sub
pop
rol
cmp
xor
push
push
shl
xlat
inc
shl
je
(bad)
mov
jmp
jecxz
pop
and
adc
stc
lock
push
xlat
pushf
int
pop
push
and
dec
jecxz
inc
mov
rcr
cmp
in
cmp
jl
sub
xchg
mov
sahf
pop
add
jmp
imul
les
cmc
inc
retf
cmp
mov
xchg
dec
movs
aaa
mov
jge
aas
pop
add
sbb
pop
adc
and
push
xor
mov
popf
fild
lds
jle
cmp
lahf
mov
es
add
pop
outs
fcomp
pop
and
add
push
ins
fadd
sub
dec
or
and
push
cmp
xchg
jp
dec
sub
fst
fnstcw
pop
jnp
xchg
mov
fucomi
ret
and
fidiv
pop
das
cs
fld
cmp
adc
pop
mov
cmp
xchg
loopne
pop
ja
sub
aad
rcr
inc
cmp
arpl
mov
in
and
loope
mov
pusha
out
test
out
loop
jns
stos
out
retf
or
sbb
add
jo
cmp
pop
mov
push
loop
push
push
jb
mov
imul
pushf
mov
add
idiv
mov
cwde
inc
repz
int3
int
stos
adc
into
pop
or
popf
ror
pop
mov
ficomp
int3
xor
fs
mov
jne
into
adc
and
imul
test
mov
push
sbb
inc
outs
jbe
movs
test
mov
cmp
add
mov
xchg
push
into
dec
jnp
adc
les
jmp
int
mov
and
and
jg
fcmovnb
sbb
stc
stos
cmp
mov
inc
and
(bad)
adc
dec
pop
repz
cdq
push
mov
aas
in
xlat
imul
mov
fcmovnb
imul
add
and
jge
pop
sbb
push
out
sub
movs
mov
aas
cmps
xchg
and
mov
call
in
and
push
jb
jne
fcmovu
cli
push
stos
inc
inc
mov
dec
pop
xchg
adc
fdiv
push
cmp
push
jnp
mov
movs
aaa
retf
shr
jle
mov
jbe
aad
cmp
push
xchg
into
and
pop
sub
nop
xor
mov
pop
jae
imul
call
lock
jmp
mov
mov
dec
pop
in
cmp
push
and
pop
in
ss
movs
fucomp
int
mov
aaa
ss
pop
sub
add
mov
dec
jb
add
sbb
and
test
std
out
adc
fstp
aaa
in
mov
ins
push
or
and
push
out
jmp
lock
pop
mov
cmp
int3
add
xchg
mov
adc
cli
js
iret
adc
lock
cmp
mov
shl
push
push
lods
loopne
(bad)
push
ins
cmp
test
xchg
fidiv
pop
dec
ja
inc
sbb
(bad)
push
jecxz
jmp
cld
or
imul
es
add
nop
jae
test
jle
sub
outs
push
into
and
sub
repnz
fadd
xchg
shl
stc
or
lods
sbb
test
mov
sbb
sbb
cmps
adc
pop
add
inc
fld
mov
test
lods
xlat
inc
cli
pop
inc
mov
push
mov
leave
daa
pop
push
mov
ss
pop
fdiv
xor
out
inc
div
nop
das
in
mov
add
fmul
mov
and
adc
or
addr16
dec
test
sub
ins
jns
loopne
jns
ficom
sub
mov
or
push
pushf
jmp
jo
jg
ds
(bad)
jne
imul
inc
push
popa
call
pop
add
sub
cmp
mov
outs
mov
das
mov
jl
enter
push
stc
and
add
jnp
ins
push
push
outs
lods
in
jae
test
dec
mov
mov
lock
outs
mov
cmps
stc
bound
xor
mov
mov
xchg
cmp
arpl
jp
pop
test
mov
cmps
adc
sar
(bad)
xor
imul
push
lock
and
(bad)
add
dec
ret
mov
mov
xchg
inc
inc
cmp
sub
test
and
xor
scas
imul
mov
jno
inc
std
push
in
inc
imul
sbb
sub
pop
cmc
sbb
jmp
jg
sbb
inc
inc
je
sti
jno
and
mov
push
cdq
ret
lahf
jmp
(bad)
sub
aad
dec
int
(bad)
hlt
inc
add
mov
int
jno
ret
shl
or
test
clc
add
aas
bound
sbb
arpl
stc
pop
in
xor
inc
popa
test
ret
sbb
lods
push
neg
mov
xor
daa
in
inc
aas
push
adc
pop
mov
mov
ror
jne
or
mov
mov
xchg
or
or
icebp
mov
xlat
mov
test
mov
jmp
adc
sub
cmc
rcr
xor
and
frstor
(bad)
jno
bound
jmp
imul
call
pop
mov
or
outs
xchg
shl
fdivr
test
stos
fld
mov
ja
ins
sbb
(bad)
jae
outs
icebp
ret
cmp
in
addr16
jae
loope
cmp
xor
pop
(bad)
jmp
and
(bad)
(bad)
push
cwde
mov
scas
mov
retf
mov
dec
xchg
hlt
das
leave
aaa
lea
cld
and
loope
mov
mov
mov
test
mov
mov
(bad)
xor
jle
mov
xchg
inc
test
pop
xchg
(bad)
sbb
mov
repnz
pop
daa
add
and
out
cdq
adc
loop
inc
ins
jle
test
push
outs
xchg
gs
sub
out
lds
fild
adc
mov
pop
pushf
mov
mov
push
mov
(bad)
add
out
iret
sbb
or
pop
sbb
lock
dec
sub
sbb
sbb
imul
adc
xchg
pushf
or
hlt
mov
cmp
les
and
shl
mov
repnz
pop
add
addr16
push
in
ins
adc
jne
aaa
xchg
pop
scas
xchg
inc
pop
push
jmp
xor
jg
rcr
lahf
pop
pop
cwde
jge
ret
mov
pop
cmp
or
popf
scas
ds
jae
pop
xchg
mov
jno
addr16
data16
or
cmc
xor
xchg
fcomp
mov
cmc
xor
aam
fs
add
fstp
nop
leave
push
sbb
clc
cmp
(bad)
das
out
data16
dec
fiadd
jle
aas
call
imul
sbb
pusha
iret
push
sahf
pusha
sahf
push
repz
or
jp
push
pop
fimul
sub
loop
pop
add
repnz
dec
adc
cmp
mov
cmp
mov
inc
xor
pop
cmc
fsub
pop
push
(bad)
xor
mov
lahf
mov
rol
add
cmp
movs
cld
test
push
cmp
loop
xchg
movs
stos
push
mov
movs
lods
push
mov
or
cmp
jg
rol
cli
xchg
imul
adc
push
(bad)
sbb
popf
xlat
pop
jne
retf
in
push
std
pushf
pop
ret
or
xchg
jg
jnp
jnp
lds
es
scas
jecxz
not
sbb
fnsave
cmps
lock
sbb
add
cdq
lock
push
cmp
pop
lock
sub
jae
push
push
jecxz
add
ss
push
jecxz
mov
mov
shl
xchg
jne
jb
xchg
loopne
xchg
or
ja
xor
ds
stos
sub
loopne
mov
arpl
push
mov
mov
push
and
cmps
or
xchg
ficomp
adc
mov
cli
or
gs
xlat
in
pop
add
mov
add
lods
int3
sbb
dec
inc
pusha
int
mov
(bad)
nop
(bad)
arpl
cld
popf
push
dec
mov
ror
sub
fisttp
push
adc
fimul
fiadd
stos
inc
cmp
cmp
xchg
mov
mov
xlat
push
cmp
cmps
pop
mov
or
or
mov
outs
cmp
add
add
ret
pushf
movs
jno
fneni(8087
aam
push
ror
cli
stc
frstor
inc
sub
neg
iret
out
dec
mov
push
push
aam
out
jnp
or
call
outs
push
cli
dec
or
fdiv
iret
mov
loope
dec
or
and
jo
jno
xor
xchg
xchg
inc
popa
adc
movs
jmp
pop
sbb
sbb
in
das
xor
xchg
sti
(bad)
aas
jo
or
and
sub
xor
ror
xchg
mov
mov
add
inc
xchg
mov
and
mov
shl
loop
loop
jl
mov
sub
loope
jbe
cmp
shr
out
aam
scas
pop
mov
dec
ror
dec
push
imul
ss
gs
mov
dec
loopne
test
int3
push
fdiv
pushf
push
lock
out
push
gs
pop
icebp
xor
and
mov
in
inc
js
inc
int3
ret
(bad)
dec
outs
inc
inc
or
call
outs
jmp
ret
adc
lea
fnstcw
or
push
mov
out
mov
xchg
int3
inc
dec
jno
sub
jns
mov
sti
and
fist
aam
inc
xor
mov
retf
cdq
cmp
xchg
call
xor
scas
jo
mov
stos
xchg
ins
push
cdq
(bad)
call
xchg
cmps
xlat
iret
and
shl
sbb
repnz
mov
pop
aam
sbb
fstp
jg
in
jno
ret
push
sub
out
cmps
leave
cli
inc
movs
mov
(bad)
gs
and
sub
push
iret
push
mov
and
jo
xchg
je
dec
iret
xchg
leave
cmp
lahf
push
dec
adc
mov
movs
cmp
ss
dec
inc
(bad)
sbb
ds
gs
bnd
jmp
jecxz
mov
and
scas
pop
push
daa
pop
inc
call
aas
cmp
fimul
clc
xlat
push
sub
push
mov
pop
icebp
push
fld
push
pop
jmp
or
hlt
loop
xchg
dec
sub
and
jle
dec
and
or
jge
(bad)
mov
ss
(bad)
into
and
mov
pop
sbb
mov
test
mov
out
outs
jbe
mov
add
push
mov
xor
aad
adc
cmc
push
fsub
scas
xor
icebp
cmp
mov
fwait
sti
pop
adc
jp
or
dec
push
add
ret
fmulp
int
jno
aaa
(bad)
xchg
mov
sbb
lock
fisub
iret
and
and
mov
mov
mov
cmps
cmp
mov
cs
fdiv
jl
cli
mov
add
adc
push
in
mov
not
mov
mov
add
mov
mov
xor
jmp
jnp
std
out
pop
shl
fidiv
leave
push
in
mov
ss
xchg
fs
and
jno
scas
in
xchg
or
stos
cmp
inc
sub
xor
mov
jb
into
xchg
(bad)
jns
call
xchg
mov
adc
sbb
out
(bad)
repz
mov
jg
test
jne
xchg
mov
test
or
and
jp
push
es
xor
and
jle
jns
dec
or
dec
out
mov
daa
rcr
test
aas
vpsubb
dec
inc
dec
ins
push
mov
or
push
retf
mov
outs
and
js
test
cmp
mov
cmps
push
sub
pop
cmp
jmp
ret
scas
add
adc
sbb
push
aaa
into
js
push
call
xchg
jns
fidiv
sub
movs
sub
mov
or
add
inc
js
cli
adc
(bad)
daa
repz
pop
sbb
mov
imul
pop
cdq
fndisi(8087
dec
fs
mov
daa
jbe
cld
xor
inc
pop
sbb
and
mov
test
icebp
pop
dec
pushf
pushf
rcr
push
jne
icebp
popf
add
xchg
imul
fisub
sub
aam
push
pushf
xor
outs
std
pop
sbb
or
or
pop
xor
mov
loopne
ret
mov
ret
mov
inc
add
int
inc
cmc
das
adc
or
cwde
std
inc
jmp
movs
in
(bad)
repnz
inc
js
ret
mov
xchg
inc
sbb
shr
lock
rcr
jp
mov
mov
ret
ins
fiadd
test
loopne
pusha
lods
arpl
mov
aas
aam
sub
or
movs
sbb
cmps
stos
rcl
hlt
pop
push
inc
pusha
xchg
jns
jmp
mov
sbb
adc
mov
add
(bad)
hlt
or
sub
in
ret
mov
mov
push
pop
dec
pop
mov
data16
adc
ficom
or
cmps
cmp
xchg
popa
std
jmp
pop
ret
(bad)
dec
cs
or
adc
or
sub
outs
sub
ret
retf
adc
test
xchg
mov
sub
call
mov
jbe
inc
add
sub
jns
in
fmul
popf
fisubr
jbe
fidivr
jne
inc
push
or
stos
inc
mul
cmc
movs
test
cmc
dec
(bad)
sub
xchg
add
cmp
call
in
outs
stos
cwde
daa
ds
repz
sub
xor
test
or
push
and
pop
call
and
push
std
ror
movs
sub
push
push
sbb
push
std
fcom
mov
mov
jp
psraw
arpl
xor
ror
adc
sbb
ror
add
jbe
fsub
js
mov
xchg
out
jns
(bad)
fwait
mov
aad
repnz
outs
rol
cmp
or
add
push
mov
jecxz
in
mul
mov
(bad)
mov
xchg
mov
cmp
fs
test
(bad)
scas
pushf
mov
aad
popf
jne
dec
je
push
mov
mov
stos
and
or
movs
mov
jb
xlat
in
lahf
sub
leave
ja
neg
out
test
jbe
or
and
inc
fstp
stos
test
lods
pop
sbb
ins
mov
push
xchg
sub
dec
jne
(bad)
cli
cmps
and
out
(bad)
smsw
sahf
lods
cli
ret
add
rol
out
fadd
mov
fild
mov
xor
push
rcl
nop
stos
jle
and
fisttp
call
int
push
xor
iret
xor
jecxz
jmp
pop
xor
inc
or
fwait
sub
sbb
jne
inc
sub
(bad)
scas
mov
jp
fldenv
inc
test
outs
or
jmp
push
enter
sub
ds
lods
push
sbb
mov
sar
jp
test
in
mov
rcl
mov
hlt
sub
xchg
sub
fistp
fdivr
ret
jl
std
add
sub
ret
cld
mov
enter
inc
stos
pop
pop
mov
dec
sbb
(bad)
stc
repz
sub
xchg
jl
add
test
out
jb
sbb
and
cmp
inc
push
scas
pop
fnsave
xor
repz
jae
xor
ror
inc
call
push
jp
sub
jmp
lods
shrd
jmp
fcom
fld
cdq
lea
mov
add
shr
or
stos
jb
xor
(bad)
in
fcomp
mov
leave
popa
ins
in
out
loop
mov
les
mov
jmp
sub
and
jns
lahf
adc
dec
xchg
bound
icebp
ins
aad
test
cmc
add
bound
leave
cmp
arpl
pop
and
sahf
in
cmp
bound
loopne
push
sbb
adc
pushf
(bad)
std
lahf
les
retf
neg
dec
repz
xor
in
push
adc
retf
mov
cmp
jge
xor
outs
add
ja
cmp
cdq
inc
pusha
mov
adc
ja
imul
cs
xchg
dec
mov
or
cmps
jp
ja
jns
test
(bad)
mov
inc
pop
movs
mov
iret
sub
enter
inc
xchg
inc
int3
outs
shl
sbb
pop
rol
adc
iret
inc
fucomi
or
sar
xchg
loope
fild
fiadd
mov
aam
cmp
xlat
outs
mov
ja
pop
pop
jno
inc
je
jmp
dec
hlt
inc
jge
movs
push
int3
mov
jp
movs
push
dec
pop
mov
xor
xor
cmc
cwde
and
inc
fwait
retf
dec
fwait
mov
sub
sbb
aam
inc
call
jae
fs
(bad)
pusha
sbb
jbe
test
cdq
xor
clc
xchg
sub
stos
(bad)
xlat
jmp
sub
dec
leave
jecxz
shl
std
sbb
inc
jnp
adc
outs
mov
sub
daa
mov
nop
mov
in
sbb
inc
inc
std
retf
push
in
loope
sub
dec
outs
jae
mov
mov
push
dec
call
dec
scas
ds
ret
dec
test
jnp
aad
lock
cdq
je
int
rcl
cdq
fiadd
dec
pop
jns
mov
in
mov
aaa
dec
sbb
neg
cs
jmp
sbb
inc
mov
cmp
loope
in
add
xor
cmp
scas
adc
out
cmps
push
cmp
cmp
add
fstp
push
pop
test
push
jmp
pop
mov
push
sbb
mov
cmp
sti
js
ret
fistp
test
ret
dec
lahf
retf
push
sti
lahf
xchg
xor
mov
loopne
loop
mov
sbb
sub
ror
sub
into
cmp
js
scas
pop
sbb
outs
or
push
cmp
jmp
outs
add
pushf
mov
icebp
iret
xchg
mov
mov
pop
cmp
hlt
sub
fbstp
and
dec
mov
push
fiadd
repnz
data16
ffree
and
addr16
sub
jo
rcr
mov
in
mov
test
cmp
jle
jge
gs
out
test
jb
mov
int
cs
push
call
cwde
mov
in
mov
sti
mov
fwait
int3
es
mov
ret
stos
xchg
sbb
mov
inc
xchg
add
pop
jno
and
repz
mov
fucom
cmp
(bad)
push
and
add
es
cmps
popa
mov
cdq
je
pop
retf
fs
or
popa
lds
xchg
sbb
(bad)
cmc
(bad)
add
pusha
(bad)
ret
mov
inc
loope
dec
loope
out
dec
imul
cmp
sbb
add
pop
in
std
jb
idiv
ficom
adc
mov
push
es
pop
cmps
mov
das
add
pop
sub
(bad)
imul
or
inc
sbb
mov
sbb
xchg
iret
pop
xor
outs
ss
arpl
xchg
or
int
dec
fistp
out
ficomp
add
inc
fwait
cmp
xlat
cli
cmp
and
xchg
cmp
and
jge
push
pop
aas
sbb
pop
mov
push
leave
rol
dec
xor
inc
xchg
cmps
fld
sahf
sar
cmp
rcr
les
out
(bad)
adc
cli
dec
scas
or
push
fist
pusha
jo
test
xchg
inc
mov
bound
fdivr
jecxz
(bad)
out
mov
pop
enter
cli
mov
(bad)
push
stc
aam
std
pop
mov
loope
(bad)
xchg
cmp
jo
pop
cmp
cmp
lods
pop
(bad)
mov
std
jo
arpl
arpl
das
inc
les
sub
call
int
mov
mov
adc
mov
int3
push
pop
or
mov
mov
fwait
jae
stos
imul
xchg
loopne
nop
inc
sbb
push
call
adc
imul
rcr
sub
movs
ins
stos
dec
push
push
pop
outs
aad
push
inc
dec
xor
and
out
jmp
dec
scas
push
mov
jp
xor
lahf
cmps
sbb
jecxz
in
sahf
ins
xor
and
cmc
fdiv
xchg
pop
imul
data16
icebp
pop
push
mov
and
dec
lods
iret
and
adc
mov
fsub
sub
pop
push
xchg
shl
sbb
mov
ins
rcr
adc
data16
daa
call
or
sahf
hlt
inc
in
in
shl
sbb
jp
jmp
leave
inc
cmp
add
sub
and
push
dec
arpl
pop
(bad)
fs
pop
xabort
xchg
neg
mov
adc
jl
add
ret
fwait
jae
inc
into
nop
cs
cmp
fnsave
fnstcw
jae
mov
iret
into
mul
push
loope
in
popf
xor
lea
inc
add
or
adc
xchg
mov
neg
data16
cmp
mov
into
pop
sub
pop
jne
dec
out
idiv
(bad)
or
xchg
cmps
test
int3
mov
sbb
pop
or
(bad)
fistp
outs
push
mov
dec
jecxz
push
in
stc
movs
mov
cmp
or
out
mov
add
inc
inc
add
cmp
mov
xor
mov
mov
xor
ins
outs
or
outs
cs
test
adc
dec
ret
ja
jae
add
outs
fistp
sub
jg
call
cmp
int3
adc
mov
sbb
xor
test
push
inc
cwde
jb
out
pop
out
or
pusha
jbe
lods
scas
out
cmp
dec
test
cs
seto
test
or
push
inc
fucomip
test
sbb
(bad)
stos
and
add
xor
pushf
sub
dec
arpl
cli
sbb
cs
popa
test
xchg
xor
enter
and
sub
inc
and
daa
js
inc
imul
mov
jo
and
jo
mov
inc
mov
or
fst
fsubr
aaa
or
leave
jne
outs
ins
in
repz
jge
cmp
jp
data16
in
pop
dec
ficomp
xor
scas
mov
push
dec
or
in
jnp
jl
cmp
imul
je
pop
(bad)
(bad)
or
(bad)
in
mov
fisub
sbb
push
mov
cwde
mov
inc
sub
scas
or
ds
xchg
push
jae
add
mov
cmp
xor
pop
and
pop
inc
add
xor
in
inc
cmp
sbb
lahf
retf
in
sbb
aas
je
adc
test
xchg
xor
xor
mov
inc
(bad)
mov
push
jns
mov
xor
and
jmp
out
pop
jecxz
sbb
xchg
push
cwde
out
mov
xlat
cld
mov
loopne
lock
dec
xor
xor
push
mov
inc
push
bound
mov
iret
fwait
outs
jno
sar
cmps
xchg
and
pop
adc
ins
das
inc
xchg
jo
into
(bad)
daa
pop
std
rcr
pop
clc
cli
xor
pop
dec
mov
scas
loop
dec
or
nop
push
jle
and
fiadd
mov
inc
mov
xor
or
lock
mov
pop
jmp
xchg
js
jge
lahf
lock
mov
ins
pop
cmpxchg
sub
ins
out
imul
lahf
ffree
aad
jge
sti
aad
xor
adc
gs
rcr
sahf
scas
mov
add
and
daa
mov
and
or
mov
pop
icebp
test
shr
std
mov
out
mov
jns
ja
adc
mov
fild
jmp
push
clc
idiv
add
xchg
xchg
xchg
mov
gs
xor
fs
or
adc
(bad)
jno
and
xor
xor
mov
into
mov
lahf
cmps
and
mov
popa
push
sub
adc
push
sbb
mov
lods
sbb
sub
dec
xchg
fstp
mov
push
add
add
jmp
mov
jmp
nop
xchg
mov
push
ret
add
and
dec
mov
shl
repnz
jmp
ins
cdq
repz
mov
imul
lods
in
sbb
mov
push
mov
jg
movs
ss
(bad)
or
push
sahf
cmp
rcl
fs
fnsave
dec
cld
neg
movs
mov
ins
movs
std
repnz
addr16
xchg
dec
or
pop
jne
jge
cmovns
dec
cmp
push
or
pop
cmp
inc
or
xor
mov
and
hlt
mov
std
and
pop
sbb
in
mov
sub
sub
jmp
pop
(bad)
sub
xchg
sbb
dec
inc
push
and
push
sub
cmps
xchg
jmp
popa
test
jae
out
rcl
dec
out
push
(bad)
fcomi
mov
loopne
test
sub
dec
jle
jmp
inc
and
sbb
push
and
mov
inc
xor
lds
int
pop
lods
nop
sar
jg
test
stos
(bad)
icebp
sub
mov
mov
xor
jnp
add
cmc
fsub
data16
sbb
rcl
cwde
add
arpl
push
xchg
add
dec
nop
stc
cmp
pop
ds
aam
mov
sbb
push
dec
out
and
mov
stos
and
and
jg
xor
sbb
jo
mov
mov
sub
fidiv
push
push
imul
adc
jae
inc
pushf
in
pusha
add
and
mov
cli
out
jp
xchg
ja
jbe
push
jnp
adc
or
mov
push
cmps
pop
addr16
xor
dec
mul
lock
xchg
mov
sti
jo
push
jg
gs
aad
(bad)
shl
popa
or
add
adc
sti
push
imul
lock
pop
lock
dec
pop
push
loop
faddp
ja
scas
fild
adc
movs
push
test
rol
pop
jp
inc
pop
outs
fwait
add
std
sub
popa
pop
test
aam
call
icebp
lea
into
clc
sahf
sbb
fcmovne
mov
xor
adc
adc
mov
jecxz
(bad)
test
out
inc
add
mov
xor
pusha
jle
mov
or
and
or
ret
rol
xchg
push
repz
pop
(bad)
push
idiv
xor
fucom
mov
stos
xchg
addr16
mov
xor
dec
lods
(bad)
js
xchg
or
pop
xor
xlat
push
ss
add
and
daa
call
pusha
push
test
jo
mov
xchg
mov
loopne
push
lds
xchg
pushf
arpl
mov
in
and
arpl
jo
jb
pop
inc
ja
mul
cwde
into
mov
aaa
push
inc
push
xor
xchg
cmc
pop
test
pop
jle
jb
lds
pop
xor
xor
loopne
int
mov
pop
data16
scas
mov
mov
cmps
mov
adc
cld
rcr
cmps
mov
and
retf
ja
inc
retf
addr16
adc
movs
add
xchg
add
add
fld
mov
xchg
add
fcom
rcl
adc
lock
or
ficomp
lahf
aad
xor
jp
pop
ret
inc
mov
sbb
inc
jo
inc
sbb
push
sub
and
jae
addr16
adc
nop
movs
mov
add
xor
into
pop
test
into
sbb
jmp
pop
retf
mov
jmp
jp
xchg
out
in
gs
addr16
out
fwait
lea
popf
mov
add
(bad)
inc
sbb
mov
push
xor
xchg
in
or
pop
dec
cld
leave
inc
jns
xor
jge
push
mov
add
push
or
pop
sbb
push
int3
and
test
sbb
push
mov
test
sbb
sbb
push
cdq
fistp
pop
mov
adc
or
test
shr
das
fisubr
movs
pop
call
mov
ficomp
and
bound
mov
mov
jg
or
(bad)
sti
pop
(bad)
rol
js
scas
ficom
sub
test
pop
imul
mov
mov
sbb
ret
ret
arpl
sub
xor
dec
xor
xor
push
fist
sub
test
sub
fcom
aad
jmp
inc
shl
sti
popf
mov
push
add
(bad)
add
inc
sub
jne
retf
inc
aas
fnstenv
repnz
inc
adc
loope
jmp
xor
sbb
pusha
inc
iret
xchg
cmp
js
shl
iret
mov
xor
cwde
outs
out
in
adc
adc
cmps
mov
or
pop
sbb
dec
pop
add
mov
fdivp
dec
inc
sti
inc
hlt
cmp
addr16
mov
sub
aad
mov
test
lods
jns
pushf
cmp
imul
push
pop
rcl
adc
cmp
call
xchg
jmp
or
ror
cmp
lock
pop
adc
fimul
dec
mov
fsub
cdq
jge
xchg
push
(bad)
sti
adc
dec
inc
in
push
jno
mov
lea
in
(bad)
imul
push
ror
jnp
loopne
mov
dec
and
pusha
sahf
pop
mov
test
xchg
lods
mov
add
sbb
mov
int
cmps
adc
mov
xor
int3
lods
and
adc
sbb
jmp
adc
dec
cmp
xchg
xor
xor
dec
(bad)
adc
sub
xchg
inc
dec
or
leave
movs
test
push
mov
mov
push
sbb
mov
js
call
cs
mov
stos
enter
js
push
daa
and
sub
mov
pusha
xchg
sub
sub
test
lods
xchg
pop
and
in
in
lahf
dec
mov
mov
jbe
lods
aas
test
jmp
cmp
popa
sti
div
jl
les
cmp
pop
sub
popa
inc
add
and
adc
mov
pop
push
dec
add
mov
or
les
push
test
jmp
paddsw
mov
jg
add
mov
and
push
int
test
ds
rcl
mov
nop
hlt
xlat
pushf
call
shr
push
jne
cmc
pop
arpl
jne
jle
ins
cmps
mov
sbb
or
(bad)
scas
and
in
adc
or
jne
mov
push
retf
mov
fs
iret
pushf
pop
or
jecxz
retf
or
das
in
ret
loope
ret
fstp
ins
dec
sti
pop
sbb
stc
out
mov
call
mov
pop
(bad)
xor
pop
loop
iret
inc
imul
jecxz
add
test
aam
sub
adc
pusha
inc
push
movs
sub
repz
mov
dec
fwait
sbb
mov
mov
outs
mov
mov
rep
pop
mov
xchg
cmp
and
adc
add
int
lods
std
mov
pop
mov
test
scas
and
cmc
test
pop
jg
xor
shr
inc
adc
shl
adc
jbe
xchg
loop
std
out
mov
je
cli
in
jae
or
jns
mov
nop
jle
push
xchg
add
ins
ret
addr16
jg
adc
loopne
xlat
xchg
and
ret
mov
add
loop
test
add
iret
mov
jns
sbb
call
add
gs
mov
outs
jp
jp
stos
cmp
cdq
xchg
inc
retf
ja
pop
loope
push
js
add
scas
cmp
test
outs
es
shl
mov
xor
je
pop
or
fcmovne
dec
sub
cmps
les
inc
ja
outs
or
stos
das
jmp
and
jmp
xchg
mov
sahf
fsubr
pop
xchg
xchg
sub
pop
xchg
ffreep
loope
out
call
imul
pop
and
pop
jp
loopne
adc
mov
xchg
mov
lods
or
fisub
mov
xchg
pusha
lahf
rcl
jmp
inc
fmul
sub
xlat
out
outs
add
aas
sub
fs
jle
ss
sbb
mov
stos
ds
pop
xor
sbb
sub
jmp
jno
(bad)
retf
test
es
or
je
scas
mov
sbb
stos
out
ror
xchg
out
jo
in
ror
in
sub
pop
xchg
imul
add
in
adc
xchg
jmp
retf
fsub
or
adc
mov
cwde
sahf
outs
(bad)
mov
dec
push
in
or
sbb
inc
and
fs
add
jp
push
sti
mov
fmul
sbb
mov
push
loop
or
les
mov
leave
stos
js
or
fimul
xchg
sub
lods
aad
nop
or
push
mov
sti
add
cmp
adc
jg
outs
rcl
or
xlat
inc
xchg
jg
push
retf
scas
cmp
rcr
sub
out
or
loopne
cdq
fist
pop
xchg
xchg
inc
cmp
inc
nop
jp
test
movnti
or
jno
push
pop
movs
fimul
movs
jo
psrad
cdq
call
dec
scas
jns
scas
out
das
imul
sbb
jge
add
add
in
add
hlt
add
addr16
mov
scas
scas
popf
add
mov
mov
mov
jmp
shr
push
mov
mov
call
inc
leave
xor
cmp
lahf
aaa
pop
sub
or
cmp
sbb
xchg
ins
mul
movs
lods
sbb
imul
xchg
data16
lods
pop
dec
(bad)
xchg
inc
inc
sub
xchg
movs
jmp
call
push
sbb
cmp
gs
retf
jmp
xchg
jae
jmp
nop
mov
push
out
sbb
mov
aad
aam
adc
and
iret
repz
shl
(bad)
dec
jmp
ja
push
imul
aad
jle
push
push
leave
(bad)
sbb
scas
sbb
cmp
dec
sub
jg
fld
mov
lahf
pop
sbb
aas
rol
xor
cmps
out
cdq
push
repz
ja
sub
mov
dec
inc
mov
jecxz
leave
icebp
int
sbb
adc
xchg
sbb
(bad)
div
jge
or
ror
sti
jmp
movs
inc
call
ret
mov
out
shr
mov
rol
hlt
dec
mov
pop
xor
ins
cs
xor
cs
push
pop
sbb
pop
xchg
dec
hlt
dec
xor
(bad)
shl
dec
fnsave
sbb
mov
clc
aad
xlat
add
inc
add
push
jns
jge
dec
cwde
sbb
sub
mov
cmp
mov
int
add
mov
ror
ins
add
jo
fxam
loop
mov
jnp
jg
rcl
rcr
jmp
ret
cmp
lods
pop
sub
add
aaa
cmc
jb
pop
dec
(bad)
rcl
jge
sub
mov
xchg
pop
add
inc
cli
jl
in
cld
into
ret
sbb
call
ds
cld
mov
cmp
sbb
xchg
clc
mov
add
pop
mov
call
aad
movs
pop
dec
pop
clc
pop
cmp
(bad)
je
cmps
sub
imul
jo
sub
fadd
jns
pusha
pop
ror
dec
mov
pop
ins
jmp
sub
adc
inc
fmul
les
dec
sub
inc
adc
imul
xor
sti
pop
sbb
add
out
fidiv
fcmovnu
clc
xchg
sub
mov
or
pusha
sar
dec
cmps
arpl
cmps
mov
neg
pop
aaa
inc
inc
int
dec
pop
cwde
xchg
adc
xor
movs
dec
pop
outs
cli
popa
sbb
jnp
xor
sbb
mov
fidivr
add
pop
outs
pop
js
add
out
mov
paddw
cli
je
mov
mov
xchg
jb
sbb
rcr
(bad)
sar
xor
movs
fnstenv
sbb
ret
push
ret
(bad)
mov
push
clc
test
jecxz
pop
shl
and
shl
sub
and
xchg
arpl
stos
xor
enter
mov
dec
out
cmps
sub
arpl
hlt
sub
fsubp
sbb
and
mov
(bad)
in
cwde
jne
imul
sbb
repz
push
jnp
mov
sbb
or
loope
out
pusha
outs
add
inc
mov
les
fwait
ret
xor
push
cmp
push
lock
cmp
inc
pop
xchg
test
or
imul
in
adc
adc
je
pop
pop
xor
movs
cmps
aaa
fwait
add
jns
jge
push
sub
test
adc
cmps
mov
jmp
pop
cdq
jne
movs
rcl
adc
neg
xchg
push
loop
mov
push
adc
addr16
fs
push
rol
xlat
movs
add
pop
loopne
sbb
cmp
ret
out
mov
add
imul
pop
rol
scas
and
mov
nop
int3
fnstcw
jl
sbb
cmc
add
dec
iret
fcom
sbb
and
pusha
pop
pop
(bad)
cmp
ror
loope
mov
ins
xor
mov
fidivr
dec
fwait
ss
ins
movs
loopne
in
xchg
jnp
outs
sbb
or
sub
adc
loop
adc
dec
mov
dec
push
adc
xchg
(bad)
fucomp
mov
loopne
cmps
jmp
adc
(bad)
add
mov
mov
or
movs
push
pusha
mov
cwde
jmp
loopne
std
call
(bad)
mov
ds
fisttp
or
and
inc
jo
int
jmp
pop
je
jnp
scas
sub
test
popa
dec
out
lock
sar
mov
scas
xor
xlat
and
(bad)
dec
pop
fdivr
dec
adc
ds
mov
xor
rcl
dec
push
out
jno
sar
mov
popa
adc
pop
fcom
jno
jecxz
mov
dec
stos
movs
cwde
fwait
(bad)
push
out
pop
fsubr
lea
clc
lock
sbb
add
and
pop
int
dec
ins
push
adc
stc
mov
sbb
sub
loop
arpl
xchg
jge
xchg
jae
cmp
mul
push
pop
mov
fidivr
retf
cmp
dec
cmp
fxch
xor
inc
push
cmc
add
add
xchg
mov
mov
cmp
xor
outs
sbb
push
jle
cmp
mov
and
sbb
xor
mov
xchg
push
rol
and
or
imul
in
mov
or
push
sbb
jno
(bad)
mov
jns
jo
inc
xor
sub
cli
loope
xchg
mov
xor
enter
cmp
xchg
ins
test
jmp
ins
or
loope
ins
adc
adc
retf
fcom
dec
inc
xor
repnz
or
inc
pusha
(bad)
cli
outs
xchg
jl
int
int3
cmps
fisub
cmc
les
inc
sti
xchg
sar
xor
call
jg
xchg
jmp
pop
or
shl
adc
jge
dec
xchg
test
ret
ret
jle
outs
shr
rol
lahf
push
cmp
mov
adc
jle
pop
sti
mov
loope
adc
test
gs
(bad)
inc
mov
xor
adc
xchg
(bad)
out
inc
xor
push
dec
or
cmc
xchg
movs
add
fsub
add
or
jne
(bad)
pop
sbb
sub
(bad)
loop
loop
movs
jns
(bad)
fiadd
push
test
sbb
(bad)
call
or
dec
ss
and
repz
mov
pop
in
jae
clc
inc
and
pop
(bad)
call
cmps
mov
dec
xor
iret
cmps
jo
mov
push
in
mov
pop
xor
scas
popf
sbb
int
push
adc
jge
sub
xor
mov
mov
call
pop
push
arpl
cli
iret
xchg
push
std
mov
mov
pop
push
push
sub
and
and
push
sbb
dec
(bad)
out
pop
jecxz
cmp
rol
repnz
mov
sub
xchg
jnp
iret
cmp
push
jns
or
xchg
pop
cmovle
ins
dec
(bad)
shr
xlat
aas
iret
stos
leave
fistp
jp
aad
inc
movs
push
mov
gs
cmp
mov
not
jl
mov
xchg
in
stc
jbe
scas
imul
aad
push
or
push
mov
sti
cmp
xlat
stos
push
ss
dec
outs
dec
and
adc
mov
ret
sbb
stos
xor
xchg
pop
cmps
stos
mov
lods
jnp
ret
dec
dec
int3
nop
rcr
dec
pop
dec
nop
jno
mov
jns
inc
aaa
add
outs
sets
or
xchg
push
add
shl
inc
cmp
in
pop
shl
mov
out
dec
mov
add
jo
stos
dec
mov
fistp
ja
movs
shl
mov
push
mov
jle
out
mov
push
xchg
dec
(bad)
movs
adc
call
mov
mov
adc
fwait
jl
cmp
jbe
push
test
dec
pcmpgtd
fwait
dec
inc
jmp
aad
add
das
and
mov
mov
sar
lock
jmp
pop
(bad)
fst
ins
into
add
fiadd
repz
push
adc
mov
and
push
xchg
mov
aas
cmps
repnz
cmps
push
xchg
jb
adc
loop
cdq
out
lods
mul
mul
pop
mov
jle
call
test
dec
mov
loope
fprem1
or
iret
mov
lds
fidivr
(bad)
mov
pop
(bad)
out
jmp
sbb
push
in
int3
aaa
xor
or
inc
loop
jno
fdiv
jo
ss
adc
test
test
xchg
xor
je
mov
fs
mov
fidiv
lahf
dec
inc
test
adc
sbb
and
ja
fwait
aaa
mov
scas
retf
dec
pop
cli
mov
lock
jnp
fs
fldcw
outs
rol
xor
xor
adc
jmp
push
mov
cmps
dec
mov
mov
inc
stos
jo
cmp
xchg
fstp
push
nop
es
jmp
pop
xchg
scas
jns
repnz
jb
mov
cmp
pusha
(bad)
pusha
adc
push
pop
cmp
fld
aam
enter
push
leave
(bad)
movs
pushf
adc
jmp
push
cld
mov
lds
fs
inc
and
shl
push
sahf
xor
je
jmp
ds
xor
scas
push
fwait
xchg
sbb
sub
mov
fstp
stos
scas
pop
dec
mov
push
or
inc
or
in
rcr
or
cmp
mov
pop
sub
punpcklwd
loopne
out
dec
pop
sub
xchg
xchg
das
sub
and
and
push
pop
arpl
lds
jmp
fiadd
mov
lahf
and
stc
or
retf
aas
add
push
(bad)
out
int
nop
pop
jb
mov
pop
or
jae
xchg
jp
adc
ret
jp
scas
sub
shr
test
ret
jl
jl
jno
jno
push
xchg
addr16
jo
mov
cmp
xor
sub
rcr
pop
rep
shr
es
jmp
loop
pop
pop
lahf
fs
or
cmps
movs
and
in
clc
es
jmp
fiadd
out
pop
sbb
push
or
outs
retf
and
icebp
sub
sub
mov
xor
jg
fild
push
xor
outs
fbstp
lea
aaa
push
mov
clc
jo
int3
arpl
rcl
out
les
(bad)
cld
and
mov
mov
pop
aaa
lods
sar
adc
stos
cld
in
aas
es
mov
sysenter
and
enter
mov
scas
scas
daa
xchg
icebp
test
neg
fimul
xchg
pop
mov
sbb
in
xchg
pop
and
sbb
popa
test
test
mov
pushf
pop
adc
les
sbb
jle
push
dec
jae
dec
call
adc
pusha
xor
(bad)
mov
out
mov
mov
fnstcw
xor
repz
push
push
or
fsub
pop
les
in
adc
cli
lea
js
ret
shl
stc
sub
xchg
push
adc
cli
jle
mov
mov
hlt
and
popa
xchg
push
and
mov
in
push
jg
sub
mov
sbb
mov
mov
xchg
mov
into
push
sbb
push
push
cmp
push
fwait
pop
and
cmp
rcl
xchg
mov
ja
lods
adc
test
lahf
test
lahf
sub
sub
cmp
mov
pop
jb
xchg
cmp
add
sbb
mov
sub
psrlw
je
push
and
jae
mov
shl
fs
mov
cmps
daa
loop
mov
push
fcompp
(bad)
jnp
add
int3
inc
xor
sub
aam
fldenv
ss
mov
ret
les
or
pop
mov
or
sahf
pop
cmp
fidiv
add
out
push
jo
rol
in
adc
jno
call
ret
mov
mov
xor
cmp
lods
jno
xor
addr16
(bad)
test
(bad)
in
(bad)
lds
adc
mov
ja
pop
and
adc
in
popf
inc
jg
mov
jnp
adc
loope
sbb
ins
neg
cmp
gs
push
rcl
sbb
test
jne
retf
shr
gs
mov
pop
test
jb
adc
dec
adc
outs
dec
int
add
sub
pop
leave
int3
mov
mov
mov
jle
xchg
dec
movs
or
clc
fwait
movs
mov
add
pop
cmp
add
in
loope
bound
mov
or
fst
sbb
adc
dec
inc
pop
scas
rep
cmc
movs
leave
lahf
ret
push
loopne
mov
cmps
jmp
or
outs
pop
mov
sbb
push
in
aad
std
mov
iret
cmc
repz
(bad)
jno
inc
ins
dec
shl
jg
sbb
xor
mov
jp
add
jmp
das
sti
mov
push
in
xor
dec
jecxz
push
mov
ja
push
sbb
sbb
adc
jl
mov
adc
push
jmp
je
cmps
add
cmc
jmp
add
arpl
sbb
xchg
fld
les
inc
(bad)
ja
xchg
call
mov
popf
pusha
lock
push
and
ins
cmp
cmps
jb
mov
sete
or
popf
(bad)
xchg
shl
out
shl
ins
aas
mov
dec
enter
dec
cwde
xrelease
ret
nop
outs
sbb
js
or
xchg
dec
pop
addr16
push
outs
mov
lahf
sub
mov
and
add
stos
bound
adc
cwde
dec
je
sbb
push
pushf
sbb
pop
or
dec
sbb
adc
cmp
adc
fnstenv
into
sar
rcl
ds
or
and
mov
sub
xchg
aad
fdivp
paddd
cmc
std
adc
ror
inc
jae
daa
dec
imul
ins
jge
fidiv
mov
into
rcl
jb
sbb
dec
clc
cmp
jo
ins
(bad)
loope
in
inc
adc
repz
dec
cmp
retf
cmps
add
jge
jae
cmc
lods
adc
adc
cmp
adc
popa
mov
push
data16
cmp
arpl
aas
jg
ins
dec
push
sar
xchg
(bad)
js
and
xchg
jle
movs
sbb
stos
out
loop
test
hlt
sub
and
ss
mov
pop
test
and
push
sub
mov
pop
loope
mov
jle
movd
pop
mov
mov
and
lock
mov
in
mov
and
hlt
test
mov
fwait
stc
add
jmp
cmp
sahf
jge
ds
hlt
inc
dec
sbb
jp
retf
xor
pop
ins
cmp
mov
daa
popf
cmp
cmps
in
into
aas
outs
mov
aam
mov
in
daa
and
shl
sbb
gs
loope
adc
and
sbb
loop
add
aam
pop
out
out
imul
cmp
add
pop
fsub
add
mov
les
lea
stos
cli
mov
retf
stos
repz
pop
jb
sbb
(bad)
mov
js
inc
loope
call
mov
test
xchg
sbb
je
stc
mov
dec
cdq
pop
rol
sbb
xchg
jp
inc
xor
xor
xchg
mov
adc
add
rol
mov
jns
aas
xchg
cmp
or
dec
scas
scas
jae
and
lods
je
adc
sub
mov
mov
scas
xchg
sbb
jbe
sub
sub
push
mov
push
retf
jo
push
sbb
xor
loopne
mov
cld
xlat
int
or
addr16
or
push
test
and
pop
sar
mov
xchg
mov
loopne
or
or
jl
les
shl
sbb
jo
mov
fsubr
clc
repnz
loopne
cmp
fist
dec
push
mov
add
mov
in
std
dec
push
fld
push
ss
pop
sub
xchg
push
mov
ins
mov
add
pop
ja
xchg
repnz
inc
pop
jmp
pop
mov
mov
inc
sub
and
xchg
clc
neg
xor
mov
mov
mov
mov
mov
push
inc
dec
and
fdivr
test
add
ficomp
mov
jl
mov
and
xchg
test
push
or
jle
iret
mov
ret
inc
adc
adc
mov
add
icebp
add
xchg
cmps
inc
stos
lods
dec
je
push
inc
push
data16
retf
outs
pop
pop
movs
fiadd
sbb
pop
and
mov
fimul
std
in
fcmovnb
shl
sti
adc
jnp
repz
inc
ds
movs
jp
pop
ins
adc
adc
adc
fbld
and
sub
shl
sbb
cmp
int
push
jbe
xchg
dec
je
retf
mov
aad
lock
and
rcl
outs
gs
add
lea
mov
jo
mov
out
mov
in
call
lea
in
neg
sbb
push
push
data16
jl
sbb
mov
rcl
xchg
inc
mov
rcl
or
xor
mov
in
adc
xchg
mov
ret
(bad)
pop
cdq
dec
shr
jle
xchg
pop
mov
jl
inc
in
jae
xchg
push
and
and
sahf
cmps
or
mov
xchg
(bad)
sub
daa
sub
not
mov
or
dec
adc
mov
mov
jo
push
sub
aad
outs
mov
adc
dec
mov
jge
sti
push
jb
sbb
mov
inc
push
adc
retf
ins
fnstsw
mov
hlt
call
ja
mov
and
or
into
repnz
cmp
jbe
mov
pop
xchg
mov
dec
ins
push
stos
out
adc
xchg
test
fnstenv
mov
adc
popf
aad
addr16
stos
sub
sub
ins
mov
mov
jb
adc
jnp
xor
xchg
in
hlt
aas
pop
pop
in
inc
fwait
pop
sbb
data16
pop
xchg
mov
mov
popf
jp
dec
pop
pop
mov
into
mov
xchg
test
inc
icebp
pop
into
shr
repnz
sbb
xchg
mov
cs
js
jae
ds
out
out
cmps
les
or
ret
fs
mov
push
cmc
mov
fwait
xor
push
ficomp
pop
lds
adc
lods
pop
stc
clc
mov
out
dec
and
and
mov
out
adc
mov
mov
xor
js
in
rcl
push
xlat
mov
jmp
adc
out
adc
rcl
mov
push
addr16
cli
jb
mov
or
inc
out
rcr
inc
imul
fld
jecxz
push
retf
cdq
lock
imul
jae
mov
test
jae
dec
jge
sub
cmp
fstp
aad
cmp
outs
sahf
and
clc
fprem1
leave
mov
add
not
daa
lea
jns
push
sbb
pop
jle
in
dec
jp
mov
pop
pop
out
xchg
sar
repnz
cdq
xor
inc
add
int
popf
xor
mov
call
mov
xor
in
mov
mov
leave
ficomp
mov
(bad)
mov
inc
scas
mov
(bad)
or
mov
dec
push
or
cmp
sbb
mov
cld
loope
pop
movs
sbb
jg
(bad)
push
out
pushf
(bad)
mov
add
int3
push
(bad)
add
sbb
jne
mov
leave
js
jnp
mov
int3
jb
sub
(bad)
mov
inc
dec
sbb
add
aas
push
add
xor
aam
mov
test
div
mov
and
dec
pop
bound
dec
mov
fs
movs
test
or
dec
pushf
lods
push
xor
mov
leave
and
push
scas
jo
dec
cli
leave
add
(bad)
lods
and
aaa
in
sahf
scas
xlat
mov
pop
lods
sub
push
les
cmp
jp
cmp
call
push
mov
mov
ins
push
jns
pop
jbe
(bad)
mul
and
aas
ins
add
mov
dec
(bad)
jnp
or
fadd
sub
js
push
or
call
xlat
das
outs
hlt
inc
cld
aam
xor
int3
ins
mov
jmp
in
stos
or
shr
in
gs
sbb
pop
mov
mov
dec
mov
mov
cmps
mov
push
loopne
jae
ret
sub
mov
es
fldcw
adc
sub
sar
call
rcl
xlat
pop
nop
jp
mov
imul
lds
xor
jno
aad
pusha
pop
test
daa
dec
sbb
mov
mov
dec
retf
dec
jns
and
xchg
and
and
or
xchg
(bad)
mov
fwait
ins
fucom
mov
cli
push
mov
arpl
popf
xchg
xor
inc
mov
cmp
xchg
or
add
add
or
(bad)
icebp
mov
xlat
test
push
out
xchg
and
popa
(bad)
loop
sbb
int
int3
test
imul
loope
pushf
call
test
jno
or
outs
test
sti
mov
pop
pop
loopne
lods
arpl
xor
or
inc
pusha
jge
shrd
xchg
mov
mov
mul
outs
cmps
xlat
retf
(bad)
adc
jmp
(bad)
mov
repz
sub
dec
mov
cs
outs
loopne
cmp
jbe
or
lods
(bad)
pusha
cmc
(bad)
push
pop
sbb
cmp
sub
sub
fidiv
dec
je
xchg
idiv
cmp
loop
ins
xchg
sub
lock
jne
shl
push
inc
mov
jns
(bad)
jmp
or
je
addr16
outs
mov
icebp
lods
push
test
adc
daa
movs
iret
daa
mov
fld
mov
fscale
movs
jbe
xchg
adc
inc
push
shl
int3
sub
std
jbe
add
inc
repnz
cwde
out
xchg
add
ret
sbb
cmp
and
(bad)
mov
iret
cmp
cmp
movs
in
and
push
xor
and
into
xchg
into
pusha
shl
add
sbb
movs
icebp
movs
call
jae
stos
cld
mov
cmp
ret
arpl
mov
and
and
call
ret
cmp
inc
outs
inc
push
cmp
test
or
and
je
add
mov
js
loopne
or
push
pop
mov
or
lock
mov
fist
inc
cmc
in
pop
push
xor
xchg
xor
ins
xor
sbb
mov
jmp
movs
push
(bad)
test
sub
adc
sub
in
repnz
cmp
call
sbb
add
outs
cmps
sti
sub
jg
and
mov
mov
cmp
xchg
or
mov
in
data16
push
repz
xchg
addr16
ds
enter
mov
mov
not
pop
leave
mov
jne
mov
popa
sti
(bad)
popf
mov
cmps
xor
out
movs
mov
push
mov
enterw
mov
ins
(bad)
int3
mov
out
das
mov
push
xor
neg
jecxz
outs
push
fnstenv
mov
mov
pop
inc
push
mov
pop
mov
and
xor
add
and
call
scas
ja
cmp
out
clc
daa
pop
mov
jmp
ja
sbb
push
sub
dec
or
aad
pusha
and
pop
add
fmul
dec
jle
int3
jmp
rol
or
dec
sub
mov
mov
push
fwait
repz
inc
xchg
loop
and
or
mov
fsubr
rol
icebp
dec
mov
int3
in
repnz
sub
jp
pop
rcr
and
stos
xor
cmp
push
jmp
mov
cli
jne
clc
sub
mov
lea
jns
cdq
mov
inc
(bad)
pop
inc
pop
mov
outs
mov
shl
out
inc
xchg
mov
push
fs
popa
or
xchg
or
xor
sbb
push
mov
cmps
mov
pop
(bad)
(bad)
(bad)
fcom
push
outs
add
ss
lds
fnstcw
fsub
pop
(bad)
jecxz
sbb
push
add
movs
pop
inc
in
jns
adc
cwde
cs
add
in
xchg
scas
lds
retf
cmp
into
add
push
cmp
xchg
dec
bound
mov
push
push
dec
je
hlt
dec
inc
push
ror
cmp
clc
rcl
in
cmp
jp
push
inc
push
cmp
dec
cld
adc
mov
shl
jo
rcr
or
push
pop
stc
fs
call
fsubr
dec
je
sub
js
hlt
inc
inc
cmps
pushf
pusha
add
sub
sbb
mov
pushf
int3
enter
pop
ins
outs
mov
shr
add
and
push
and
inc
lods
loopne
pop
lods
repz
jb
dec
mov
jecxz
lds
sub
jmp
pop
add
mov
addr16
jmp
pop
sbb
or
test
hlt
xchg
inc
jmp
pop
test
out
xchg
sbb
pop
ins
shr
ret
inc
adc
stc
mov
inc
aam
sbb
push
mov
repnz
stos
cdq
sbb
(bad)
and
mov
imul
sbb
pop
aaa
cmp
sbb
xor
ficomp
fistp
iret
cmps
adc
cwde
rol
push
pop
inc
jns
xlat
lock
sbb
cmp
cs
inc
aad
ds
push
stos
jae
cld
xchg
mov
push
sbb
scas
xchg
loopne
icebp
xchg
cmps
inc
and
ins
jnp
jmp
pop
adc
mov
cld
sub
mov
or
je
imul
retf
dec
jno
icebp
gs
(bad)
aaa
or
and
movmskps
out
in
adc
mov
and
push
sti
call
int3
repz
mov
je
xlat
jnp
mov
das
cmp
pop
mov
cdq
movs
push
outs
adc
outs
push
movs
sbb
sbb
sub
dec
mov
jmp
add
frstor
mov
arpl
daa
mov
bound
shl
std
adc
popa
cli
repz
inc
inc
cmp
inc
enter
leave
adc
cmps
adc
and
scas
or
cwde
cmps
jb
(bad)
outs
mov
loope
out
sbb
adc
icebp
mov
or
sub
push
call
mov
jb
jns
push
repnz
cwde
xor
and
push
imul
out
cs
clc
dec
add
mov
cli
push
(bad)
enter
sbb
in
sti
call
rcr
clc
sbb
xchg
xchg
loop
popa
or
in
push
or
adc
xchg
jle
push
and
in
push
test
imul
repnz
js
jnp
imul
retf
add
mov
adc
sbb
sub
fldcw
in
mov
retf
mov
adc
movs
xor
ss
or
mov
pop
push
push
arpl
or
mov
jb
dec
arpl
sub
and
rcl
xchg
das
or
mov
push
mov
mov
xchg
xlat
popa
iret
jb
rcl
pop
retf
arpl
in
call
call
push
adc
stc
pop
inc
inc
xor
mov
fbstp
pop
dec
aad
jae
in
fbld
out
in
pop
inc
gs
dec
cmp
sbb
xor
stos
dec
and
jae
and
mov
jl
loopne
shrd
dec
mov
or
aam
mov
call
icebp
jo
fistp
xor
xchg
add
stos
rol
pop
pop
add
in
cmp
rcl
xor
adc
jmp
inc
sbb
into
push
in
sbb
int3
or
mov
aas
jmp
fmul
outs
xchg
mov
dec
inc
or
dec
adc
nop
adc
aam
mov
int
push
shr
push
cmps
jne
fdiv
mov
ror
idiv
retf
mov
xlat
ja
pop
mov
call
fucomip
jo
test
cmp
out
dec
fisttp
imul
xchg
xchg
and
or
daa
movs
inc
es
sub
adc
or
pop
popf
cmp
iret
adc
and
and
pop
and
lods
in
jle
jno
cld
dec
dec
add
push
movs
cs
cmp
mov
push
mov
add
std
push
dec
(bad)
xor
enter
movd
lahf
(bad)
out
in
enter
pop
cmp
sti
and
imul
inc
dec
loopne
pop
pusha
pop
inc
stos
or
pushf
rcl
dec
adc
in
call
mov
push
xchg
frndint
sub
cmp
cmp
mov
add
or
loopne
pushf
push
add
int3
ins
mov
retf
push
add
mov
cmp
cmp
mov
or
(bad)
jno
jg
sbb
xchg
loop
movs
retf
inc
dec
mov
ins
pop
mov
and
inc
push
mov
leave
push
sub
retf
sub
mov
xchg
ss
retf
or
(bad)
loopne
fwait
nop
cmps
imul
dec
mov
mov
leave
mov
(bad)
fild
popf
sub
push
mov
bound
jl
ja
popa
lock
aam
push
xchg
mov
sbb
and
rcr
int
es
add
shr
stos
push
js
ffree
shl
fnstenv
mov
jp
adc
fcom
fs
cmp
xor
repnz
adc
jecxz
pop
and
lods
fxch
fnstcw
or
pop
cwde
movs
adc
fs
fwait
out
ja
sbb
fwait
push
and
sahf
mov
sub
dec
aaa
loopne
mov
cmp
mov
dec
jnp
lods
loopne
mov
jecxz
pop
in
sub
lods
ret
std
cmp
imul
cmp
cli
in
add
stc
jb
jmp
fnstcw
gs
push
mov
sbb
or
dec
mov
in
(bad)
loopne
jb
pop
sub
int3
fist
das
push
push
or
(bad)
in
fistp
jno
sbb
std
rol
sahf
push
pop
mov
dec
fld
xchg
mov
int3
jae
sub
pop
xchg
inc
jg
cmp
mov
push
loope
(bad)
js
pop
in
xor
pop
inc
mov
and
pop
int
leave
jo
xchg
inc
shl
icebp
std
add
xor
or
xchg
lea
retf
sub
repnz
mov
test
and
push
pop
arpl
lods
xchg
pop
pop
dec
xchg
inc
xchg
jl
test
je
in
dec
aas
inc
mov
xor
imul
ins
in
ss
test
(bad)
push
cmp
add
mov
jle
fadd
(bad)
in
mov
sahf
pop
gs
push
sub
mov
sub
aas
pop
retf
xchg
into
add
fisub
xlat
sar
mov
in
fmul
or
in
aad
bound
in
in
adc
inc
cmp
scas
arpl
stos
stos
jo
or
nop
and
mov
repnz
and
xchg
dec
push
push
or
loope
add
and
repz
ins
aas
pusha
(bad)
fbld
nop
lea
stc
aad
push
mov
mov
jge
xor
rcr
shr
or
adc
(bad)
dec
imul
mov
jecxz
lock
cmc
ficom
arpl
clc
xlat
dec
jmp
mov
sbb
jno
xchg
inc
unpckhps
add
push
sub
or
test
out
repnz
dec
movs
(bad)
in
sti
call
(bad)
sub
xchg
push
push
pop
mov
sub
cmp
jmp
test
jnp
mov
out
fwait
int
out
iret
sahf
xor
cld
add
fst
adc
mov
xchg
push
cmc
rcl
cmp
je
mov
push
shl
ins
paddusb
test
xlat
aam
inc
out
inc
out
adc
in
inc
cli
movs
push
nop
xchg
icebp
std
sbb
loop
imul
fist
out
xchg
sbb
leave
movs
jl
push
dec
adc
jmp
dec
rcl
push
jge
test
adc
idiv
inc
cmp
das
adc
jg
dec
lods
xor
jnp
xor
pop
rcl
and
jbe
cmp
mov
jnp
test
and
adc
push
jp
aaa
lahf
imul
sbb
jmp
xlat
loope
sub
mov
sub
stos
jnp
push
arpl
mov
jg
ins
cmp
sbb
je
add
push
jmp
pushf
cmp
rol
pop
stc
xor
data16
push
jl
(bad)
ficomp
pop
in
sub
pop
scas
ja
in
sti
pusha
push
fcmove
sub
retf
mov
xor
adc
mov
jns
pop
mov
xlat
mov
mov
out
call
fcmovb
outs
adc
pop
aad
aas
lock
lahf
xchg
mov
lahf
xchg
adc
sub
sbb
iret
adc
cwde
out
dec
sub
add
pop
in
outs
add
ret
lahf
fwait
jnp
or
sbb
mov
mov
test
fwait
add
aas
mov
pop
fwait
loopne
cmps
test
cli
fisttp
mov
mov
loopne
loopne
mov
les
(bad)
in
jb
arpl
aad
cmp
faddp
retf
sbb
retf
mov
repz
push
xor
lods
cmc
adc
xchg
jg
pop
dec
fild
cs
adc
add
sti
add
xor
xchg
cmp
dec
pop
cmp
ins
loop
inc
dec
in
sbb
loopne
mov
test
jb
mov
fs
sbb
sbb
inc
jp
pusha
fstp
dec
sahf
add
mov
inc
mov
jmp
lea
retf
jmp
mov
(bad)
mov
nop
push
loope
adc
xor
mov
jne
sahf
mov
xchg
js
test
lds
jo
aas
xchg
mov
push
mov
cmp
fwait
jge
add
fisub
call
fisubr
fldenv
and
and
bnd
fdiv
add
adc
cdq
xchg
and
inc
fdiv
pop
scas
jmp
aam
xchg
jle
mov
rcl
lahf
out
mov
into
int3
push
jg
adc
push
and
das
xchg
cmp
xchg
ds
cwde
add
mov
cmp
shr
fs
mov
cmps
dec
cmps
daa
mov
cld
mov
mov
ins
ret
jecxz
push
mov
mov
mov
push
add
mov
jnp
mov
cmp
cmp
lods
inc
mov
test
aam
movs
mov
sbb
loope
fiadd
dec
or
es
mov
mov
jb
push
pop
aas
mov
xor
xchg
adc
in
jae
adc
lds
ror
xchg
aas
xor
dec
jg
int
adc
stc
pop
popa
xchg
popf
pop
imul
add
imul
stc
xchg
outs
or
nop
inc
enter
xchg
push
xchg
les
repnz
mov
sbb
mov
push
pop
ins
iret
jno
sub
cmp
aas
xabort
test
lods
inc
mov
jno
xor
push
lea
sbb
ficomp
imul
xchg
push
shl
push
cld
pop
push
imul
and
push
data16
(bad)
and
mov
push
jp
dec
push
xchg
dec
cmps
sbb
sar
in
mov
jl
pop
jbe
nop
test
dec
mov
and
push
clc
pusha
cmp
aad
fistp
test
je
cmp
lea
daa
push
sbb
xchg
ja
mov
sbb
pop
push
fild
js
mov
jbe
xchg
cmp
popf
stos
push
pop
ins
adc
push
add
adc
sub
jmp
shl
xchg
lahf
std
dec
inc
cmp
inc
or
xor
shl
xor
rcr
shl
and
mov
arpl
add
sahf
cwde
xchg
inc
ss
loope
pop
iret
inc
pop
sub
push
pop
mov
sbb
scas
push
add
pushf
and
mov
inc
jbe
(bad)
xor
sub
lock
movs
jge
jle
add
adc
neg
cmp
xchg
dec
leave
pop
xchg
adc
in
test
xchg
ret
test
cmp
arpl
ret
out
mov
lds
dec
or
test
jmp
xchg
sub
inc
out
xor
sub
mov
pop
cmps
pop
adc
jmp
call
scas
mov
mov
sub
inc
(bad)
sahf
dec
xchg
sub
sub
aam
ret
jecxz
jmp
imul
sbb
popa
or
addr16
stc
retf
stc
jns
mov
lds
mov
jmp
push
lahf
in
push
mov
not
inc
adc
lds
mov
cmp
(bad)
mov
test
cmp
fisttp
jno
jbe
mov
and
out
jns
pcmpgtw
mov
in
inc
ret
cmps
(bad)
pop
jb
test
mov
mov
mov
bound
push
xor
xchg
xor
jb
bound
mov
mov
pushf
mov
arpl
xchg
fwait
sub
or
inc
repnz
or
imul
cmp
(bad)
xchg
aad
dec
sbb
mov
ins
aaa
dec
or
fsubr
push
adc
add
popa
mov
daa
ss
cld
std
ficom
pop
add
add
mov
call
(bad)
lahf
bound
push
les
(bad)
jbe
and
mov
in
mov
pop
pop
and
in
cmc
ffree
pop
push
hlt
sub
aas
dec
dec
dec
dec
mov
xchg
iret
cmps
mov
sub
xchg
sub
test
pop
gs
mov
retf
jmp
outs
sub
lods
out
push
cmp
aad
leave
xor
fsubr
dec
(bad)
mov
pop
pop
dec
fld
and
cmp
jno
jmp
sbb
add
ds
cwde
mov
xlat
xchg
mov
mov
fistp
dec
mov
push
retf
and
(bad)
adc
lahf
repnz
outs
add
(bad)
aad
call
inc
enter
stos
(bad)
mov
ins
int3
or
retf
sbb
fidiv
mov
cmp
cld
push
push
or
idiv
cld
int
sub
frstor
add
mov
sub
xchg
push
and
loope
enter
jb
mov
mov
xor
xchg
or
js
sar
add
adc
cmp
jge
out
sbb
pop
pop
out
add
xchg
sub
in
addr16
ret
mov
ja
mov
mov
inc
dec
sbb
cmps
fsubr
inc
addr16
mov
clc
jle
in
mov
lods
mov
mov
sar
sbb
xor
sub
outs
pop
or
js
js
sbb
sub
inc
xor
imul
out
cli
into
xchg
push
inc
adc
pop
sbb
call
mov
std
retf
xor
jnp
pop
sti
call
cwde
or
xchg
inc
cmp
sbb
cdq
dec
xchg
rol
inc
aas
sub
xor
fsub
imul
adc
or
mov
mov
cs
das
aas
cmps
mov
dec
push
icebp
lock
or
mov
pusha
sub
pop
xchg
cdq
iret
or
xlat
sbb
mov
jecxz
jnp
fmul
out
sub
cmps
ficomp
inc
retf
loope
or
jecxz
mov
inc
pop
popf
sub
jl
(bad)
in
dec
cli
ret
in
jo
or
retf
xor
inc
cmp
cmp
xchg
inc
pop
sub
push
std
pop
js
sahf
movs
shl
sbb
rcr
movs
clc
inc
cwde
jae
push
push
int
and
mov
out
dec
sbb
jp
sar
out
nop
jmp
xor
mov
jle
sbb
or
outs
popa
nop
push
jmp
xchg
pop
cdq
cdq
adc
jb
shr
pop
pop
pusha
adc
mov
sbb
push
xchg
inc
mov
mov
jmp
in
mov
lea
pop
or
retf
test
pop
adc
pop
or
enter
push
xchg
push
js
xor
xchg
ins
pop
xchg
dec
inc
jo
mov
mov
jg
adc
mov
sbb
jns
mov
loopne
mov
aad
sbb
mov
shl
pop
dec
lahf
pop
mov
or
das
test
fs
adc
hlt
xchg
jo
aad
pushf
bound
rol
inc
mov
xchg
ror
lock
xchg
mov
fnstenv
mov
popa
dec
fcom
push
popf
mov
test
fidivr
sub
sub
fwait
call
std
mov
lahf
sub
popa
inc
(bad)
ret
sar
mov
dec
pop
int3
mov
and
add
add
(bad)
and
arpl
push
xchg
xchg
pop
gs
cmp
inc
mov
xchg
js
ins
pop
jl
mov
mov
push
inc
jae
jno
or
xlat
ja
pop
xchg
xor
imul
jecxz
xchg
adc
fnstsw
sub
ins
or
dec
jle
hlt
mov
fsubr
outs
jle
fist
cmp
mov
sbb
add
and
mov
je
push
xchg
cli
xor
xlat
jmp
leave
dec
and
fisttp
jg
int3
inc
xor
xchg
adc
call
cmp
ins
adc
mov
xchg
sbb
out
mov
shr
into
fld
dec
sbb
(bad)
jne
adc
sahf
and
popa
js
jns
scas
jno
shr
xchg
xchg
add
push
pop
imul
ins
rcl
push
jecxz
mov
cmps
cli
mov
dec
or
jae
ss
les
sub
adc
mov
into
out
mov
retf
call
and
aam
mov
add
(bad)
test
fidiv
pop
ret
aas
psrld
or
scas
iret
xchg
fcomp
in
sub
pop
mov
xor
addr16
mov
lea
(bad)
sbb
mov
mov
inc
lahf
inc
sti
push
sub
in
ret
xlat
cmp
sahf
pop
pop
jno
cmp
(bad)
or
jp
or
scas
mov
sub
push
(bad)
sbb
adc
add
int
dec
xchg
cmp
dec
push
ret
stos
add
or
mov
sbb
push
add
jns
ret
or
pushf
dec
inc
out
xchg
stos
xchg
ins
dec
xchg
add
and
fidivr
jne
jae
jmp
(bad)
push
mov
jmp
add
push
fucomp
push
mov
pop
popf
and
mov
enter
gs
pop
xchg
call
jb
int
or
in
jp
popa
sub
enter
out
ss
cmp
xchg
cmp
adc
jmp
adc
push
jo
adc
sbb
push
pop
mov
ror
dec
cli
push
rcr
sub
xchg
(bad)
icebp
(bad)
sahf
pushf
scas
(bad)
shl
mov
(bad)
mov
and
xor
jl
dec
dec
lea
mov
xor
push
jo
nop
xchg
sub
mov
aas
lods
add
xor
pushf
fwait
and
test
fucomi
push
xor
jb
mov
outs
jmp
movs
or
cdq
in
xor
sbb
adc
xchg
inc
jne
cmp
pop
mov
sub
fsub
cmp
dec
retf
inc
xchg
addr16
add
mov
psubsw
iret
sbb
fcom
repz
jmp
pusha
mov
and
mov
scas
imul
and
or
adc
xchg
rcl
(bad)
sub
retf
inc
cmp
test
cli
jne
mov
cmps
jnp
mov
add
shr
mov
xchg
lods
adc
sbb
xchg
movs
or
dec
test
xor
xchg
stos
or
iret
cdq
lgs
xor
sbb
push
(bad)
sub
and
rcl
add
popf
sbb
add
push
lods
xchg
enter
das
cmp
jo
and
sub
mov
fld
sbb
and
sti
inc
hlt
ficomp
retf
fcmovbe
push
lea
ins
test
ins
xchg
daa
stos
mov
mov
fisttp
and
(bad)
jbe
dec
dec
in
mov
mov
xchg
aaa
ror
test
inc
dec
pop
push
data16
pop
aaa
hlt
das
scas
pop
xor
popa
xor
mov
inc
fldcw
dec
push
cmps
stc
and
outs
in
leave
mov
mov
and
dec
in
or
and
ror
sbb
jo
adc
sub
bound
in
adc
in
push
jp
sub
mov
mov
push
jns
arpl
xchg
fs
outs
(bad)
in
mov
pop
inc
inc
jnp
(bad)
mov
popf
jmp
ds
in
iret
inc
mov
repz
sbb
ins
dec
ins
clc
mov
jecxz
daa
mov
arpl
jns
pushf
pop
jg
push
mov
mov
scas
nop
cmp
clc
mov
xchg
mov
in
jle
in
fisttp
jo
sub
repnz
jb
sub
lahf
adc
sub
dec
mov
mov
sub
inc
jp
mov
push
adc
push
mov
push
mov
pushf
or
pusha
push
lea
iret
cmps
(bad)
pop
lahf
fstp
imul
xor
call
test
fiadd
add
icebp
dec
dec
in
in
dec
ins
or
lahf
push
pop
adc
cmova
ins
aaa
xor
mov
fwait
in
ficomp
ss
cli
stc
lea
scas
(bad)
nop
push
inc
in
or
stos
test
test
mov
mov
popa
test
inc
mov
stos
adc
fmul
retf
or
ds
jne
sub
pop
lock
mov
pusha
push
mov
js
fimul
adc
popf
sbb
push
imul
or
mov
jmp
aas
sub
inc
jmp
cmps
mov
outs
jbe
gs
sbb
dec
jb
pop
jp
into
ja
inc
sbb
daa
movd
jo
xor
arpl
enter
dec
cmp
dec
xchg
cdq
lds
sbb
out
jb
or
vminpd
fs
inc
push
sar
add
clc
xchg
and
std
sbb
sbb
push
and
sbb
lds
aas
stc
dec
adc
jne
inc
ins
sbb
mov
push
or
mov
lock
adc
out
mov
dec
sub
xchg
enter
mov
cmp
ret
add
sti
xchg
je
adc
aam
(bad)
and
outs
mov
fcmovb
cmp
add
mov
(bad)
sbb
jp
dec
mov
adc
mov
enter
shl
and
mov
fstp
adc
fldcw
jecxz
aam
aad
add
add
mov
xchg
fisttp
outs
test
xchg
dec
cmp
ins
gs
sahf
shr
xchg
cmp
ds
mov
and
rol
je
jg
neg
xor
imul
sbb
nop
pop
aas
xchg
mov
lea
add
or
dec
mov
dec
inc
pop
addr16
dec
cwde
dec
out
jo
dec
aaa
dec
sbb
jb
mov
xchg
dec
jbe
and
inc
mov
in
or
cmp
test
xchg
pop
ficomp
jns
ds
add
pop
jb
or
aas
cli
push
push
dec
bound
dec
cdq
retf
popa
add
or
dec
inc
mov
xchg
shr
push
stc
mov
sub
clc
mov
ror
iret
jo
mov
push
mov
xchg
adc
pop
jl
neg
mov
cmp
xlat
adc
popf
jo
out
out
stc
cdq
jne
bound
sub
repz
xchg
jmp
xchg
sub
mov
cmc
out
sub
add
xor
and
stc
sbb
in
sub
add
adc
dec
inc
add
neg
arpl
mov
sar
leave
stos
mov
dec
fwait
cwde
push
imul
cli
cmps
add
mov
vmread
scas
cwde
ficomp
mov
aaa
push
mov
mov
inc
(bad)
and
stc
add
inc
fld
push
push
or
pop
fs
retf
je
add
mov
push
dec
add
std
ror
push
push
sbb
and
mov
sbb
mov
fmul
push
jae
jl
shr
es
not
jecxz
sti
xchg
out
test
pushf
ja
rol
in
cmp
cmp
popa
push
not
in
in
and
push
retf
push
mov
pushf
xlat
adc
fnstcw
rcr
pop
retf
or
push
sbb
in
and
int3
addr16
dec
ins
sub
outs
ins
jge
lods
mov
xor
and
ror
inc
and
mov
adc
cmp
ret
test
mov
sahf
adc
dec
sbb
mov
cmp
mov
cmp
stc
int
sar
mov
mov
movntq
out
inc
cli
aad
jb
mov
pop
jne
mov
jl
dec
push
repnz
imul
mov
arpl
in
(bad)
mov
xlat
and
push
mov
and
pop
adc
lock
movs
pusha
movs
push
int
mov
(bad)
xchg
add
addr16
iret
stc
mov
sbb
mov
and
loope
mov
popf
andps
jmp
push
out
into
repnz
xor
fs
xchg
push
push
xchg
lods
adc
mov
out
sbb
dec
mov
mov
sbb
out
mov
ret
movs
dec
jmp
mov
retf
inc
sbb
add
retf
popa
jnp
mov
stc
dec
cmps
xchg
cmp
cdq
jle
sbb
push
out
jp
stos
pop
cmp
mov
fisttp
mov
sub
pop
dec
std
repz
sti
adc
(bad)
fisttp
fnsave
test
lahf
and
js
push
sub
sahf
addr16
pop
lea
push
mov
xlat
mov
cmc
xlat
xchg
xor
adc
mov
pop
and
add
retf
out
dec
or
jmp
lea
nop
sbb
mov
xor
mov
cld
dec
jo
in
jecxz
and
mov
(bad)
aaa
sub
push
js
loop
icebp
cmp
fsub
and
mov
inc
mov
sbb
stos
sbb
inc
cmps
lods
leave
push
idiv
pushf
mov
xor
neg
push
shl
mov
pop
hlt
inc
in
shl
loope
xchg
xchg
pop
sbb
out
call
aas
(bad)
or
cs
push
enterw
and
sub
retf
cmp
ss
shl
leave
pusha
inc
mov
sahf
outs
test
cli
mov
xchg
rcr
sbb
popf
push
call
int
jg
push
stos
inc
inc
xchg
dec
jl
inc
xor
aaa
push
mov
jbe
sahf
mov
jmp
shl
mov
shr
inc
sbb
mov
cmp
lock
cmps
inc
int3
xchg
outs
nop
inc
push
mov
jb
(bad)
add
sub
sub
into
int3
lea
(bad)
les
leave
xor
gs
dec
cmps
push
fs
mov
je
xchg
xchg
and
xor
test
into
add
test
mov
mov
cmp
xchg
mov
popf
mov
aaa
jne
cmp
pop
imul
jg
clc
lods
mov
or
sub
add
rol
or
dec
(bad)
aaa
dec
(bad)
aad
sub
stos
js
pusha
(bad)
jo
sbb
xor
xchg
jb
(bad)
retf
jmp
stos
cld
pop
ds
and
in
div
jge
cmp
add
arpl
add
(bad)
std
ss
shl
bound
mov
stos
jb
mov
popf
or
cmp
push
sbb
dec
repz
rcl
inc
pusha
push
sub
shr
into
fs
dec
inc
inc
aas
xor
sub
lods
std
xchg
ss
push
xchg
push
jno
jg
(bad)
stos
sbb
sub
pop
push
sbb
push
adc
push
inc
adc
xor
mov
std
daa
cli
push
out
jbe
push
dec
into
xor
outs
pusha
shr
retf
push
inc
cs
in
in
gs
sub
divps
sbb
test
sub
pop
ret
maskmovq
test
sub
sti
push
add
jmp
jp
or
add
inc
aas
jl
gs
mov
fidiv
cmp
imul
lock
mov
sub
pop
int3
in
shl
mov
leave
pop
aam
or
sahf
arpl
rol
mov
xchg
inc
jbe
mov
not
nop
inc
xor
clc
jno
mov
adc
add
out
sar
ja
test
out
jnp
xchg
mov
push
inc
adc
inc
imul
std
fmul
xor
pop
xlat
inc
mov
(bad)
int
cdq
mov
in
out
adc
jbe
inc
into
inc
int
sub
mov
sub
and
aaa
mov
pop
retf
scas
jmp
lea
test
aas
sub
jae
test
retf
mov
out
jnp
inc
sbb
inc
or
loope
pop
inc
add
jg
stc
mov
int
dec
(bad)
mov
jns
xor
fadd
in
dec
mov
int
add
scas
clc
sub
xchg
push
out
jp
(bad)
shl
jns
cmps
and
repz
shl
sbb
pop
test
pop
daa
push
cli
or
jbe
jbe
dec
xor
adc
xchg
int3
adc
fst
push
call
sub
icebp
loope
lea
pop
xchg
fldcw
lods
pop
in
add
mov
popa
cmp
cmp
out
rcr
aam
sub
push
cwde
mov
ins
mov
sub
imul
inc
iret
(bad)
neg
and
cmp
mov
mov
out
outs
popf
mov
aaa
test
mov
gs
js
cli
ret
ret
stc
mov
mul
cmp
or
out
rol
fwait
stc
ja
mov
sbb
in
fcmovne
mov
cld
into
frstor
and
and
pop
pop
jae
cmps
(bad)
jg
clc
pop
popf
dec
fisubr
dec
xchg
jl
fisub
outs
xlat
loope
(bad)
ins
cwde
lahf
inc
leave
cmp
sar
lods
(bad)
call
pop
mov
(bad)
sub
in
jle
cmc
xor
mov
or
mov
fcmovne
mov
jp
sti
out
sub
std
inc
jnp
push
mov
pop
sbb
ret
sub
fwait
lock
ins
dec
out
mov
loopne
xchg
repz
pop
mov
fcomp
xchg
test
xchg
popa
inc
ret
out
in
mov
jae
add
in
fsubr
fsub
stc
cdq
cli
dec
mov
push
ror
outs
fdivr
dec
jg
mov
fidivr
cmps
shl
fwait
shl
adc
dec
sub
sbb
sub
loopne
xlat
xor
jp
(bad)
cmc
xchg
int3
push
pusha
enter
add
dec
adc
mov
and
jbe
push
imul
(bad)
retf
data16
jns
xor
imul
(bad)
sbb
rcr
jno
fwait
out
pop
jecxz
mul
(bad)
stos
mov
mov
dec
rcl
pop
retf
cdq
mov
sub
cli
mov
mov
loope
jae
pop
dec
in
and
aad
pop
inc
sub
call
mov
pushf
push
aas
xor
lds
int3
loope
inc
mov
aam
fmul
mov
push
cmp
or
call
into
jne
dec
jmp
add
imul
rcr
push
and
in
sub
push
ror
fwait
or
out
iret
cdq
popf
dec
(bad)
xor
es
aam
and
mov
xchg
push
jo
(bad)
sbb
push
mov
xchg
cli
xor
cs
mov
sub
or
mov
push
inc
adc
push
mov
ja
out
out
jnp
dec
jae
or
cmp
lods
lahf
mov
fidivr
push
mov
sub
dec
or
fimul
arpl
mov
ds
in
inc
ret
inc
out
pop
neg
clc
xchg
or
imul
pop
mov
call
sahf
jno
rol
in
push
or
jmp
popf
add
pop
and
call
pop
xlat
fnsave
loop
sbb
hlt
cmp
jecxz
movs
sub
es
repnz
mov
dec
pop
shr
mov
lds
scas
enter
cdq
jbe
or
jle
mov
jbe
mov
into
loop
mov
cld
test
mov
mov
xchg
shl
rcl
jne
push
mov
mov
mov
inc
push
gs
iret
(bad)
add
sbb
sub
clc
or
xchg
sbb
pop
sub
nop
inc
jl
dec
int3
cmp
cmps
push
jne
lahf
aas
inc
jg
push
imul
lods
and
rcr
test
jno
int3
call
push
push
es
retf
xchg
movs
mov
aaa
pop
inc
sub
std
sub
jne
pop
pop
xchg
ret
icebp
jnp
mov
inc
rol
jno
jno
and
lods
jge
mov
dec
out
jge
jmp
fs
or
cmp
mov
mov
fs
xchg
out
push
leave
(bad)
bswap
loop
fdiv
cmc
call
or
test
mov
push
in
bound
ja
push
adc
or
stos
adc
cmp
jb
pop
push
xchg
and
nop
daa
jo
scas
jo
xchg
leave
daa
mov
mov
mov
jecxz
add
push
mov
mov
pop
mov
dec
sbb
test
mov
inc
inc
and
scas
in
nop
nop
cmp
and
mov
stos
enter
mov
sub
jo
(bad)
and
repnz
pop
out
jne
and
pushf
cmps
mov
jmp
mov
out
pushf
push
scas
inc
mov
pop
xor
inc
xchg
pop
leave
fld1
xchg
in
ror
lahf
inc
lds
sahf
jp
dec
cmp
jb
in
mov
loopne
sar
es
xor
mov
inc
aas
into
mov
sbb
out
stos
dec
xor
mov
gs
add
aad
out
ror
and
push
mov
aas
xchg
push
xchg
loop
imul
xor
push
xchg
popa
in
test
loopne
fs
jnp
aaa
cs
out
aas
test
ss
jb
xchg
neg
mov
mov
jb
stos
pop
sbb
mov
outs
outs
mov
mov
jmp
scas
rol
jo
es
fwait
ss
lahf
sti
rcl
sub
cs
stos
inc
inc
add
add
xor
fwait
das
sbb
ss
push
cmp
fst
daa
inc
fist
or
aad
jae
push
mov
hlt
mov
mov
mov
loope
add
stos
fst
adc
sub
sti
inc
and
aam
mov
mov
dec
mov
retf
xlat
inc
mov
push
test
mov
loop
out
mov
cs
les
sti
mov
fldcw
mov
test
push
dec
sbb
mov
scas
fild
dec
inc
repnz
retf
dec
add
not
jno
sub
rcl
xchg
popa
std
cli
out
push
cmc
leave
pop
sbb
rcr
rcr
adc
arpl
jge
lods
or
and
push
fnstsw
inc
jnp
or
out
ret
mov
lea
inc
push
adc
xchg
jns
cmp
and
das
push
outs
push
mov
dec
sbb
push
call
mov
xchg
scas
fdivrp
push
mov
nop
xchg
and
(bad)
(bad)
arpl
fsub
jl
or
scas
mov
fld
cmp
mov
mov
enter
fbld
push
lods
inc
add
inc
in
mov
(bad)
outs
push
push
cmp
or
shl
jl
lahf
push
mul
out
adc
add
xchg
bound
xor
ins
not
cmp
and
sti
cmps
mov
movs
push
dec
adc
ds
push
push
sub
jne
mov
lods
gs
add
pop
xrelease
daa
sbb
push
es
pop
mov
mov
cmp
imul
mov
popf
popa
dec
xchg
test
std
xchg
push
mov
ret
mov
test
mov
(bad)
inc
icebp
inc
cmp
mov
pop
add
cli
or
mov
or
push
sub
cld
jo
cdq
int
lahf
fcom
shl
dec
cmc
fsubp
sbb
lods
or
in
xor
mov
jae
ins
push
(bad)
mul
daa
mov
mov
inc
in
adc
jmp
push
dec
cmc
mov
mov
(bad)
fstp
lock
jno
inc
sub
push
or
and
xchg
mov
lods
call
sbb
jo
or
push
inc
xchg
and
or
jge
in
test
adc
imul
or
sbb
inc
dec
call
ins
dec
popa
mov
imul
imul
cdq
push
push
mov
mov
data16
sahf
jno
ror
pop
mov
loop
xchg
push
or
mov
out
sub
xor
sar
(bad)
movs
imul
mov
mov
shl
xchg
pop
int3
dec
aam
repnz
retf
pop
into
or
mov
pop
dec
or
fdivr
test
repz
jle
cmp
jl
leave
test
in
pop
jae
jb
sahf
mov
leave
pop
mov
inc
jae
xor
adc
shr
sbb
ds
rol
sbb
jmp
addr16
jg
and
loop
xchg
imul
and
enter
imul
jns
fisubr
cmp
pop
rcr
mov
jne
mov
pop
cmp
int3
pop
jo
jmp
pop
jge
data16
repnz
retf
movs
ja
and
adc
mov
xchg
test
cdq
or
pop
xchg
test
mov
push
cmc
(bad)
test
xor
add
mov
mov
pushf
jl
mov
or
je
pop
dec
iret
cmp
xor
cmp
lahf
out
jne
fiadd
jne
sbb
xrelease
ret
mov
sbb
add
xor
push
xlat
and
cld
dec
ret
inc
in
cmp
js
jmp
sub
cld
lods
mov
js
adc
mul
cld
out
xchg
pop
scas
(bad)
mov
mov
test
push
pop
dec
xor
out
popa
xlat
je
test
mov
and
xor
cdq
(bad)
xchg
and
loopne
jmp
sbb
stos
sbb
in
and
inc
adc
push
imul
inc
sub
xchg
push
idiv
fmul
dec
add
add
jb
in
lds
sar
adc
xchg
sub
rol
push
mov
or
fidivr
mov
push
jo
pop
ret
int3
dec
and
or
movs
mov
jge
mov
jge
movs
call
push
push
sub
lock
push
push
xchg
ins
xchg
or
loop
div
mov
fmul
fild
and
ds
arpl
and
imul
test
in
mov
push
pop
jae
inc
jno
in
(bad)
xchg
out
stos
add
sbb
in
push
mov
xor
or
dec
or
mov
sbb
mov
out
iret
daa
cmp
shl
out
in
xor
pop
sti
push
cmps
or
addr16
mov
in
cmc
push
sbb
cmc
sysenter
sub
dec
adc
rcl
dec
call
mov
jg
sub
daa
xchg
ja
push
xor
adc
ins
or
adc
rol
pop
sahf
aas
xchg
mov
fwait
lods
dec
fisttp
ror
cld
xchg
pop
daa
push
js
sahf
jge
xor
sbb
test
push
and
xchg
jno
jmp
shl
jg
sub
loope
or
xchg
and
rol
cmp
es
fwait
mov
popf
cmp
cbw
dec
add
mov
mov
jne
adc
andnps
xchg
ins
fnstcw
pop
cmps
div
add
jge
jl
out
inc
dec
mov
and
je
outs
mov
fsubr
test
sub
mov
sub
in
(bad)
jne
push
dec
in
xor
call
pusha
or
call
(bad)
lods
dec
rcr
ret
pop
repz
je
call
rcl
mov
aad
xor
mov
jl
stc
and
pop
cmp
inc
imul
mov
jne
cdq
mov
mov
in
aad
test
pop
pop
test
pop
inc
mov
dec
sub
mov
iret
popf
mov
lock
pop
cwde
aaa
adc
inc
cli
mov
inc
loopne
push
in
pop
jge
jne
mov
imul
sar
dec
dec
dec
pop
xlat
sbb
or
sti
fidiv
push
repz
push
(bad)
ret
sbb
push
rol
(bad)
test
daa
fs
test
xor
pop
inc
cmp
test
sbb
xchg
inc
sub
retf
mov
es
push
dec
aas
dec
sub
and
mov
inc
pop
xor
sub
adc
mov
sbb
and
xchg
cwde
rep
test
dec
inc
mov
sub
push
xchg
xor
push
add
pop
in
imul
or
inc
lahf
or
xchg
push
clc
mov
fcmovbe
inc
lods
movs
les
loopne
in
js
ins
fdiv
(bad)
cdq
push
scas
rcl
xor
fst
ins
sub
adc
jg
in
shl
sub
mov
dec
jp
adc
sub
rcr
mov
lds
xchg
mov
enter
fwait
es
mov
xor
test
adc
mov
loope
stos
in
icebp
sbb
push
lahf
mov
push
push
mov
mov
(bad)
fs
addr16
sub
mov
aaa
sbb
push
mov
add
retf
and
xchg
stos
cmp
adc
(bad)
lods
iret
inc
push
fcomp
enter
leave
push
dec
push
xor
cli
dec
jno
mov
push
leave
movups
js
sbb
and
gs
push
in
sub
pop
jg
add
in
lahf
jle
pop
pop
clc
sbb
push
cmp
or
xchg
inc
push
fnsave
cli
pushf
rcr
mov
fild
arpl
aaa
xor
jno
pushf
(bad)
sbb
xor
pop
loopne
inc
mov
push
cld
(bad)
out
pop
out
dec
jo
pop
dec
push
ret
or
shr
dec
mov
fld
xor
jmp
jb
mov
jmp
and
xor
sbb
outs
imul
jge
out
ficom
dec
pop
pop
mov
xchg
cwde
cmps
stos
aam
retf
mov
mov
xor
mov
jmp
sbb
outs
xor
xor
jnp
and
(bad)
sub
dec
mov
leave
je
dec
pop
pushw
lock
mov
jne
cmp
cmp
jns
lds
pop
jge
jb
and
pop
mov
fs
jp
shl
xchg
xchg
fs
loope
ror
bound
sbb
gs
out
push
jmp
(bad)
xlat
xchg
fwait
or
(bad)
leave
adc
mov
in
shl
jnp
xchg
bound
xchg
call
sti
stos
cmps
std
lock
mov
mov
ja
inc
in
cs
repnz
aam
lods
retf
rcl
shl
hlt
fwait
stos
pop
push
mov
inc
mov
pop
and
call
mov
ins
mov
in
push
jl
pop
or
adc
adc
jns
fdivr
pusha
xor
fidiv
dec
test
lock
loopne
inc
and
(bad)
xchg
je
aas
shl
rcr
shl
jmp
or
je
pop
mov
repz
pop
xchg
ja
cmc
mov
(bad)
fbstp
inc
push
js
(bad)
push
(bad)
sub
aad
and
cdq
sbb
iret
mov
scas
mov
pop
sbb
mov
les
inc
mov
inc
cmp
fbstp
not
stos
(bad)
ins
push
adc
adc
dec
ror
out
xor
iret
mov
mov
imul
dec
out
sub
sub
xlat
(bad)
xchg
mov
add
push
out
stos
jne
xor
leave
push
repz
push
xchg
cmp
xchg
test
bound
(bad)
and
scas
test
or
(bad)
fimul
add
xor
jl
xchg
mov
mov
call
jle
sub
shl
dec
and
dec
std
mov
mov
ss
aas
xchg
sub
fwait
sbb
daa
mov
add
xchg
nop
mov
add
mov
dec
xor
stos
xchg
jg
pop
aas
sub
push
xor
push
mov
jmp
out
sub
imul
xor
mul
in
mov
sub
fcom
add
mov
cmps
mov
add
or
fcomp
shl
ret
pushf
pusha
out
addr16
jle
xchg
test
cwde
add
mov
cmp
imul
(bad)
or
shr
dec
ins
push
jmp
mov
xor
ret
fucomip
or
jge
into
addr16
cmp
imul
(bad)
dec
push
mov
push
jmp
pop
aam
fwait
inc
inc
jecxz
sub
jns
inc
mov
mov
outs
sahf
js
fild
and
aad
adc
xchg
push
jmp
aas
ror
or
(bad)
sti
(bad)
stos
inc
clc
xor
jmp
ret
mov
(bad)
fwait
jne
pop
xor
cdq
adc
sbb
mov
lods
sbb
adc
cmp
jae
out
test
adc
push
add
sbb
(bad)
jp
in
or
dec
xchg
outs
jo
and
inc
dec
mov
call
cdq
pop
lods
dec
dec
mov
sbb
sub
pop
mov
mov
std
aaa
imul
fistp
add
cmps
mov
out
push
cmps
cld
(bad)
xor
arpl
popf
shl
or
add
and
push
in
dec
cs
dec
xlat
cli
jb
nop
or
lock
push
mov
push
pusha
or
inc
out
(bad)
push
call
mov
mov
movs
fcom
fnstenv
dec
test
nop
sub
xchg
sbb
(bad)
shr
adc
pop
cmps
gs
xor
mulps
(bad)
repnz
cli
stc
outs
gs
and
push
sub
cmc
xchg
test
xchg
push
xor
dec
mov
dec
int
mov
inc
xchg
outs
sti
xlat
inc
and
aam
sbb
setae
imul
inc
aas
icebp
out
dec
mov
sbb
cmp
inc
test
imul
add
mov
mov
(bad)
ret
das
cli
jo
mov
dec
fs
and
push
ja
pushf
pop
in
cmp
xor
hlt
test
in
dec
ins
push
mov
xchg
jmp
sbb
cmc
aad
inc
push
(bad)
jmp
pop
popf
sahf
xor
cwde
xchg
cdq
xlat
stc
(bad)
dec
xor
rol
fisttp
add
adc
xchg
jbe
add
outs
fsubr
and
xor
cmp
jnp
js
mov
xlat
sbb
inc
jmp
loopne
dec
xor
inc
pushf
(bad)
jmp
int
jno
pop
dec
and
push
mov
add
mov
mov
and
dec
jp
in
sbb
xchg
pop
push
adc
add
xlat
fild
push
ret
cld
test
leave
mov
rol
jl
pop
inc
mov
and
das
hlt
adc
mov
add
mov
out
and
outs
shr
jns
jmp
std
push
(bad)
clc
scas
add
movs
cs
jnp
jp
in
fild
(bad)
ja
cmc
pop
dec
or
psubusw
pusha
adc
xor
sub
in
out
mov
jge
jge
enter
imul
clc
xor
stos
jmp
adc
jle
and
out
dec
fsub
aam
and
jle
jmp
aad
and
clc
add
rep
xor
fdivp
popf
loop
retf
mov
inc
sbb
push
bound
imul
and
or
sar
pop
inc
dec
inc
and
mov
add
pop
and
or
xlat
jle
loop
xchg
adc
cmp
cmovnp
mov
sbb
adc
cwde
push
aam
dec
popa
fnsave
xor
xlat
xchg
mov
sbb
fs
sub
pushf
mov
clc
sti
mov
or
push
adc
and
push
sub
shr
fwait
mov
sub
sub
daa
sub
out
push
inc
hlt
test
xchg
xchg
shl
push
or
lahf
sbb
pop
and
bnd
loope
mov
mov
push
aas
or
dec
push
aaa
mov
les
push
push
fistp
xor
out
ret
ficomp
(bad)
ins
xchg
std
cmp
jnp
or
or
xchg
cmp
inc
(bad)
popa
jae
lahf
in
or
ja
mov
push
loope
jnp
xchg
and
xor
mov
pop
(bad)
xchg
mov
ficom
sub
scas
sub
in
xchg
pop
jmp
cmp
fcmovbe
push
ins
loopne
call
xchg
mov
dec
emms
test
or
outs
aas
movs
int
stos
adc
inc
jmp
neg
enter
lods
and
cmp
jbe
daa
sub
clc
ds
push
dec
push
stc
sbb
or
frstor
ret
mov
call
push
xchg
int
jp
mov
imul
or
inc
jb
clc
xor
stos
mov
retf
lods
mov
mov
sub
(bad)
adc
push
jle
sub
fist
mov
jmp
inc
fwait
mov
jmp
fidiv
or
mov
push
jne
jecxz
cmp
mov
add
les
cmp
mov
mov
jge
test
jne
add
xor
sbb
sbb
cwde
cs
out
mov
xchg
ffreep
mov
loopne
mov
stos
push
inc
out
add
jbe
mov
ds
add
xchg
repz
xchg
lods
rcr
stos
repnz
cmp
mov
sbb
fadd
or
dec
test
std
adc
mov
adc
shl
and
fmul
pandn
movsx
xor
jb
mov
fist
lods
mov
test
gs
not
in
pop
xchg
pop
sbb
mov
and
inc
add
lahf
jmp
inc
mov
sbb
xchg
cli
(bad)
jo
retf
adc
adc
pop
pop
in
inc
fiadd
daa
mov
push
pushf
in
out
ins
cwde
test
adc
mov
test
mov
xor
adc
pop
call
sbb
loope
arpl
and
push
sbb
cmc
rcr
sahf
scas
rol
pop
xchg
dec
mov
push
xor
in
stos
xor
jbe
adc
add
push
xchg
sti
(bad)
cmps
jge
mov
add
mov
or
jmp
in
ror
loope
pusha
scas
dec
sti
fcomi
push
sub
jnp
sbb
ficomp
mov
ins
mov
push
inc
cmp
mov
sbb
mov
xchg
(bad)
imul
xlat
in
adc
jle
pop
and
icebp
aad
shr
mov
fwait
xchg
cmp
repnz
inc
dec
push
out
mov
jecxz
jmp
mov
inc
movs
mov
iret
adc
mov
mov
dec
jg
jmp
mov
retf
addr16
mov
jo
and
cmps
cli
or
adc
mov
stc
fimul
sbb
add
ss
(bad)
cmc
fcomp
shl
cmp
ds
dec
popf
add
ins
pop
add
pop
dec
cli
push
mov
mov
cmp
outs
and
cmp
fist
add
sti
vpslld
in
jnp
and
je
cli
fnstcw
cmp
xor
je
adc
push
sbb
pop
mov
xchg
xor
cmc
jmp
cmp
daa
or
adc
mov
int
adc
test
push
sbb
cli
arpl
aas
movs
and
xor
pushf
sbb
ins
xor
mov
and
adc
inc
mov
not
out
retf
sub
sub
fisttp
lods
add
mov
xor
lea
add
repnz
push
sub
push
add
sub
pusha
add
pop
jo
retf
dec
adc
xor
mov
adc
dec
dec
adc
mov
lea
mov
popf
mov
or
or
enter
push
xor
iret
int
(bad)
shr
outs
outs
add
fistp
xchg
push
add
movs
pop
jecxz
fld
inc
mov
jne
xchg
int
repnz
mov
out
repnz
ds
leave
mov
sbb
shl
cmps
dec
leave
adc
(bad)
enter
jecxz
cmp
add
sbb
mov
jb
mov
bound
adc
(bad)
hlt
movs
rol
mov
and
out
lahf
mul
adc
ss
fistp
retf
addr16
scas
jns
adc
inc
gs
(bad)
les
xor
push
pop
into
mov
add
cmp
mov
cmp
add
aas
scas
cmp
dec
xchg
icebp
pusha
sub
mov
mov
jmp
fisttp
test
(bad)
dec
inc
jnp
aam
xor
inc
clc
scas
ret
into
mov
ret
add
stc
ds
push
mov
fwait
mov
inc
xchg
sub
jge
sbb
add
aam
test
cs
sbb
mul
loop
push
aaa
push
adc
add
mov
mov
fcom
mov
push
int3
aam
dec
not
sub
xor
ins
sub
mov
mov
fstp
add
and
les
fdiv
xchg
ins
cwde
xchg
stos
xchg
ins
push
ret
imul
mov
leave
fisttp
inc
mov
lahf
jbe
pop
(bad)
and
push
or
leave
mov
lahf
in
(bad)
ja
jecxz
stc
jge
mov
ror
inc
es
retf
lea
jns
in
or
jnp
add
add
lahf
lea
enter
xor
mov
test
jmp
mov
or
jno
jecxz
test
push
jg
mov
pop
mov
int3
jl
mov
sub
jae
pop
ins
xchg
hlt
ins
or
imul
cmp
add
mov
sbb
sub
mov
ds
sub
push
inc
inc
shr
pop
pop
pcmpgtw
sahf
mul
cmp
push
loope
(bad)
cmp
xchg
mov
cmps
mov
xchg
stos
adc
sub
fcomp
loope
and
(bad)
test
nop
data16
dec
adc
pop
(bad)
lahf
push
ror
ja
aas
lods
xor
test
and
imul
mov
stc
imul
sub
xchg
fcom
ret
xchg
mov
imul
cmp
mov
sub
cmps
xchg
loopne
outs
fimul
(bad)
fidiv
sub
or
div
mov
push
(bad)
iret
mov
mov
xor
push
or
push
sub
and
pop
inc
rcl
xchg
out
sub
and
cmp
int
cmp
pop
mov
call
loope
into
repz
pop
aas
push
cmc
out
nop
pushf
lahf
and
xchg
push
repnz
fxch
mov
cdq
cs
cmp
fxch
inc
lds
fisubr
mov
jbe
ins
xor
jp
lock
cmp
cmc
or
and
dec
cli
leave
mov
push
mov
iret
mov
out
jno
fucom
jl
xor
movs
das
dec
cmp
jl
xchg
aam
dec
push
jmp
popf
into
jg
push
clc
adc
jb
cli
test
jnp
pop
sahf
sbb
and
rcr
or
xchg
fdiv
pop
sbb
push
push
xor
fcom
inc
xor
movs
test
cmp
cmp
mov
addr16
push
movsx
push
push
xor
pop
jmp
call
add
aaa
mov
jns
add
stos
rol
out
xchg
rcr
mov
jbe
ins
aaa
out
les
adc
push
mov
mov
aad
ja
and
or
xchg
mul
sbb
dec
jae
sub
and
stos
call
cld
rcl
jo
and
pslld
inc
mov
sti
imul
jl
dec
or
adc
mov
cmp
iret
ja
dec
inc
sub
adc
pusha
test
ds
jmp
ins
cmp
inc
or
inc
in
xor
ja
inc
test
dec
les
jle
ret
iret
fnsave
jb
mov
fimul
and
push
cmp
cld
imul
test
das
dec
loopne
jbe
out
lods
xchg
push
xchg
push
sub
sub
call
mov
lods
mov
pushf
sub
loopne
out
add
repnz
jo
push
push
xchg
retf
push
dec
adc
cmp
push
cli
std
pop
pop
mov
gs
xor
cwde
sbb
mov
(bad)
jmp
push
mov
cld
(bad)
lods
leave
das
pop
jne
xchg
lods
(bad)
pop
mov
in
fcomip
daa
and
mov
smsw
ffree
scas
mov
pop
pop
or
rcr
pop
add
xlat
sbb
sbb
mov
add
stos
jmp
or
jno
std
mov
loope
or
sbb
sti
mov
sub
or
or
in
push
mov
jnp
repnz
mov
xor
mov
out
xchg
mov
pop
add
adc
dec
sbb
leave
in
inc
cmp
cld
int3
adc
push
call
sbb
pop
mov
test
rcr
xor
mov
add
inc
ins
push
and
and
pusha
imul
pop
mov
test
push
cdq
clc
neg
int
cwde
imul
push
mov
cmp
xchg
fist
and
out
(bad)
xor
mov
add
xor
pop
(bad)
(bad)
aad
fsub
pop
pop
iret
scas
not
mov
add
push
mov
pop
inc
aam
push
cmc
mov
add
fiadd
add
in
ins
stos
iret
push
push
call
xor
dec
in
fbstp
inc
xor
ror
xor
pop
ss
adc
inc
xchg
xlat
or
and
xor
and
mov
dec
mov
scas
arpl
adc
or
ficomp
or
(bad)
push
aas
xor
ins
jae
sub
cmp
out
or
inc
mov
cmps
mov
les
fdiv
pop
inc
adc
inc
int
loope
mov
stos
cwde
loope
arpl
or
cmc
sbb
loopne
or
push
push
push
test
xchg
jl
add
div
sub
faddp
jle
push
push
and
stos
in
fldcw
call
pop
push
inc
push
fist
aam
jne
outs
sbb
inc
aad
not
(bad)
fild
mov
stc
mov
sbb
jne
cmp
aaa
and
(bad)
imul
dec
add
add
jnp
pop
test
cmp
mov
xchg
ds
pop
jo
mov
rcl
jp
sahf
push
mov
(bad)
xor
push
or
jecxz
cmps
shr
idiv
inc
int3
mov
rol
loope
mov
mov
jb
adc
xor
pushf
xchg
das
ficom
jmp
inc
add
test
stc
dec
or
mov
test
pop
mov
sbb
lods
pop
call
hlt
aaa
jmp
pop
stos
test
arpl
sti
not
sub
xor
add
inc
out
call
xor
loopne
xchg
sbb
arpl
(bad)
mov
pop
ds
xor
sub
xchg
mov
mov
xlat
popa
push
lock
clc
ja
lock
inc
adc
jo
add
mov
fcmovne
mov
sar
pop
leave
mov
out
call
dec
xor
jle
sub
xor
shr
cmovno
xor
push
(bad)
adc
push
bound
xchg
iret
nop
cmp
aam
fwait
xchg
stos
in
jb
xlat
mov
scas
int
loope
push
mov
or
lea
xor
or
pushf
jge
xchg
sbb
push
inc
clc
int3
je
adc
rcr
dec
mul
adc
mov
in
repz
ror
push
movs
adc
sbb
dec
into
and
dec
push
mov
ins
mov
mov
and
cmp
sub
ret
xchg
stos
pop
mov
es
mov
pop
xor
adc
dec
xor
xor
hlt
sub
xor
repnz
movs
xchg
xchg
jnp
sub
pop
jnp
jl
xchg
cmp
loope
aam
inc
pop
in
movs
add
jb
adc
xlat
push
xchg
jg
push
mov
sub
inc
adc
pop
push
pop
stos
stc
dec
hlt
add
lock
in
loop
call
retf
adc
pushf
movs
inc
stc
sbb
mov
mov
je
mov
gs
sub
jecxz
or
and
and
add
adc
je
adc
cs
push
jb
add
ja
not
and
test
je
mov
mov
or
call
and
dec
push
mov
sbb
sar
int
pop
mov
jbe
xchg
xchg
pop
lds
repz
push
or
pop
fisubr
shr
jae
or
sti
stc
mov
dec
leave
cmp
pop
aad
ror
jno
pop
lahf
mov
icebp
test
jae
call
xchg
cmp
das
push
pop
jp
xchg
push
push
mov
test
inc
les
stos
jle
test
fxch
pop
scas
shl
push
dec
movs
cmps
popf
dec
xchg
test
idiv
lahf
js
in
ret
scas
and
xchg
push
mov
push
into
adc
pusha
call
fdiv
ja
sbb
repnz
push
push
inc
and
xchg
outs
lds
fs
and
data16
mov
ds
jns
mov
fwait
sub
mov
hlt
pushf
ins
pop
shr
retf
push
out
adc
push
bsf
mov
cwde
or
or
mov
outs
sub
in
retf
mov
add
retf
mov
xor
data16
push
add
sar
mov
push
test
(bad)
psllq
in
and
mov
push
push
clc
cmps
mov
ss
adc
lock
imul
scas
scas
push
xlat
pusha
jnp
adc
out
cmc
mov
mov
mov
shr
sar
jecxz
and
pop
push
ret
aam
pop
jnp
sub
cmps
mov
adc
mov
cdq
fisub
sub
or
push
cmp
(bad)
sbb
call
fisubr
sub
mov
movhps
sub
cmps
ja
clc
inc
retf
pop
mov
mov
cmp
xchg
sbb
add
gs
jge
cld
seto
push
jl
or
outs
lods
or
test
mov
mov
mov
pushf
push
enter
out
mov
push
jle
jle
xlat
(bad)
sub
adc
test
cmp
out
pop
aaa
and
and
mov
gs
and
mov
push
xor
clc
pop
mov
jbe
xchg
test
inc
inc
lea
vpshaw
sub
daa
cmp
add
mov
push
iret
ins
xor
scas
fnstsw
dec
mov
(bad)
mov
fnsave
sahf
shl
mov
pop
repz
cmps
mov
sub
pop
xchg
xchg
xchg
sahf
int
mov
mov
(bad)
call
jl
mov
fsubr
mov
fisttp
aam
cld
mov
test
or
test
jle
stos
add
dec
jne
cld
pop
arpl
sub
sbb
icebp
cmp
stc
cwde
xchg
pop
mov
jg
mov
out
scas
cmps
int
jp
inc
or
push
and
mov
std
sbb
push
mov
shl
sub
repz
jbe
or
ficom
lock
or
dec
mov
mov
adc
dec
adc
add
xchg
sub
jb
xchg
lea
fbstp
sbb
sub
stos
sub
inc
iret
cli
mov
cmp
dec
shl
xor
sbb
mov
xor
(bad)
mov
mov
cmp
ror
adc
cmp
mov
inc
inc
add
sti
cmp
daa
out
xchg
lea
clc
xchg
fimul
add
(bad)
pop
loop
mov
out
lods
mov
nop
in
push
xor
ins
sahf
mov
and
ins
outs
inc
xlat
xlat
pop
add
sub
sahf
(bad)
outs
mov
xor
hlt
jb
retf
imul
cdq
mov
push
or
outs
daa
ins
cmp
xchg
dec
xchg
lds
mov
test
lock
or
sbb
mov
ror
cmp
(bad)
mov
out
adc
or
sub
jns
or
mov
add
in
xor
(bad)
push
into
ins
cdq
hlt
in
stc
mov
clc
or
enter
pop
dec
movzx
push
push
adc
adc
mov
pop
(bad)
loope
out
iret
cmp
hlt
shr
add
mov
inc
push
pop
int
lahf
loop
pusha
cdq
es
call
jmp
daa
mov
pop
out
mov
movs
sub
or
mov
aas
pusha
out
enter
push
jne
inc
ds
(bad)
sbb
mov
push
add
push
loop
add
int3
mov
in
jp
ins
ficom
or
mov
daa
in
pop
inc
and
rcl
mov
call
mov
scas
inc
cli
(bad)
cmp
lahf
ja
jns
push
inc
or
and
sbb
sti
inc
pop
sahf
loope
fdiv
mov
sub
lahf
sub
xchg
xchg
mov
or
pop
or
sar
xchg
out
cli
aaa
push
clc
fcompp
add
cmps
in
add
sar
lahf
iret
xchg
cli
cmps
movs
cwde
jns
mov
cs
xchg
into
dec
ja
(bad)
imul
scas
retf
and
jno
je
inc
enter
loopne
sub
jbe
jbe
pop
(bad)
add
mov
xor
xor
jl
mov
test
jge
add
pop
(bad)
mov
icebp
je
adc
test
add
sub
pop
sahf
xchg
ret
retf
das
inc
add
dec
inc
xchg
mov
fnstcw
mov
sbb
inc
or
inc
repnz
push
mov
cmp
add
inc
sbb
mov
imul
and
jle
lds
xlat
lea
xchg
xor
test
mov
mov
clc
test
adc
movs
pop
cmps
dec
pushf
mov
mov
outs
imul
mov
pop
sub
mov
test
fnclex
xchg
jns
scas
adc
mov
mov
popa
outs
xchg
ja
dec
movs
das
ins
mov
cmp
or
addr16
ret
inc
pusha
and
scas
cmp
(bad)
not
xor
scas
fdiv
aam
outs
pop
cmp
xchg
push
xchg
gs
pop
mov
gs
add
ins
adc
cmp
cmps
and
jmp
fs
xor
push
rol
in
das
sbb
jo
cmp
pop
scas
cwde
mov
pop
dec
stos
test
into
jg
in
push
push
fisttp
add
lds
add
xor
dec
xchg
(bad)
cli
fdiv
call
out
imul
adc
out
cmp
sub
adc
mov
dec
mov
or
dec
out
sahf
mov
pop
icebp
cmp
xchg
mov
repz
and
lea
adc
(bad)
mov
repnz
inc
mov
cdq
not
push
shr
inc
icebp
aas
sub
call
mov
(bad)
cmp
add
sar
test
inc
ins
repnz
in
mov
fcmovu
inc
retf
and
jb
cmp
sbb
inc
adc
mov
out
leave
fdivr
fcomp
outs
jae
mov
in
test
dec
sbb
add
stos
fxch
retf
add
sar
xchg
or
inc
mov
scas
and
ds
push
das
shr
dec
sub
and
ins
xchg
inc
push
imul
imul
lock
cdq
mov
loop
arpl
sub
stc
push
fcomp
push
ins
dec
add
pop
or
mov
xchg
sub
call
call
std
retf
repnz
push
(bad)
jno
in
lods
sbb
inc
imul
add
ja
sbb
jecxz
iret
stos
xchg
sbb
and
fs
(bad)
push
(bad)
icebp
adc
jo
enter
xchg
sbb
std
inc
stos
xchg
inc
sbb
mov
icebp
add
add
sub
xchg
push
imul
push
cmp
add
dec
shl
inc
hlt
in
popa
aad
cmps
sub
mov
mov
push
ror
xchg
jae
fsub
jbe
in
nop
jno
xchg
scas
nop
adc
pop
and
mov
pushf
in
je
rol
xchg
call
fdivr
inc
pop
cmp
ins
jo
and
iret
cwde
and
sbb
cwde
or
mov
sub
arpl
mov
mov
and
jl
sbb
xor
stos
cmc
ds
mov
adc
repz
stc
pop
(bad)
aas
cmp
retf
mov
js
fstp
xchg
test
sbb
jl
sbb
aaa
adc
and
xchg
or
dec
clc
movs
add
inc
test
retf
or
test
cdq
pop
and
cmp
jno
push
sbb
gs
(bad)
(bad)
mov
test
jbe
ins
or
adc
sub
push
jg
sbb
jg
mov
xchg
leave
fisub
dec
hlt
dec
inc
cwde
jge
cdq
sub
int
and
(bad)
call
push
dec
neg
iret
jb
xchg
push
cmp
aam
xchg
ins
xchg
bound
mov
retf
or
lods
ret
lahf
sub
std
test
lds
dec
dec
or
mov
(bad)
jns
jmp
cmps
in
push
pushf
cmps
hlt
ja
pop
mov
mov
mov
mov
repnz
les
(bad)
push
call
push
das
inc
push
retf
cmp
mov
loop
sahf
jmp
out
pop
mov
xchg
imul
je
ss
(bad)
imul
cs
inc
fwait
repnz
or
cmp
or
adc
into
mov
(bad)
dec
jb
in
pop
jle
or
push
das
stos
push
jmp
push
push
cmc
add
xor
je
xor
mov
leave
inc
outs
dec
add
push
sbb
mov
sbb
cmc
test
jge
xlat
test
lock
cmp
test
popf
(bad)
sbb
mov
gs
dec
test
add
mov
xor
sbb
push
jns
xor
icebp
mov
cmps
int
push
jge
pop
cmps
fbstp
sbb
ds
clc
enter
movsx
jmp
or
retf
jae
les
or
mov
lahf
sub
lock
push
sbb
and
push
push
inc
loop
cmp
push
data16
(bad)
stc
pusha
jns
mov
test
lods
xchg
add
dec
mov
inc
icebp
xchg
push
les
push
and
or
lods
fistp
push
mov
outs
aad
fstp
loope
pop
xchg
add
mov
pop
sub
inc
jbe
dec
int3
sbb
sti
sbb
inc
js
mov
push
dec
loop
xor
jne
lahf
cmp
sbb
sar
ficom
push
xchg
in
mov
sub
ret
jecxz
daa
(bad)
mov
adc
inc
push
stos
sub
pusha
mov
mov
cmps
movs
test
push
ret
mov
sbb
cmp
sahf
or
call
cmp
and
inc
fs
nop
lock
inc
(bad)
xchg
jmp
jecxz
mov
arpl
xor
jmp
inc
mov
push
bound
inc
adc
mul
xchg
je
in
iret
fld
stos
add
sbb
clc
fimul
(bad)
iret
imul
loopne
sub
into
leave
mov
shl
sar
mov
loop
xchg
ret
pop
xchg
mov
push
inc
pop
xchg
imul
cmp
fs
xchg
outs
adc
pop
fsubr
mov
inc
gs
mov
jns
pop
add
sbb
adc
xchg
pushf
xchg
add
sub
push
jae
ficomp
daa
mov
mov
mov
je
mov
inc
sbb
push
div
stos
test
inc
pop
mov
je
ds
(bad)
scas
adc
sub
movs
mov
and
gs
popf
imul
enter
retf
cld
out
pusha
or
sub
mov
sub
loop
mov
sbb
mov
retf
lods
jecxz
js
std
inc
fdiv
lods
jns
mov
test
sub
xor
sub
repz
mov
nop
cmp
clc
in
cli
rol
cmp
fisttp
rcr
pop
cmp
repnz
hlt
pop
cmc
dec
push
and
mov
es
imul
adc
push
leave
mov
pop
push
add
pushf
fsub
or
push
es
shr
dec
ror
mov
push
mov
cmp
lods
(bad)
shr
enter
jl
mul
cmps
rol
call
cmp
dec
inc
and
fistp
or
and
pop
and
gs
adc
mov
xchg
inc
jmp
std
and
inc
gs
xor
cmp
push
cwde
mov
xor
mov
ins
cmps
in
xor
add
clc
test
jns
pusha
pop
pop
jbe
in
sar
xchg
xchg
les
add
adc
lods
adc
shl
push
fs
sub
icebp
jbe
mov
pop
shr
adc
cmp
ins
movs
or
mov
push
hlt
jbe
pop
jbe
call
clts
inc
in
jl
and
dec
(bad)
fistp
inc
mov
dec
sub
shl
sub
adc
push
dec
push
or
inc
js
ins
xchg
js
loope
(bad)
cmp
pop
push
or
cmp
mov
push
aam
push
arpl
mov
(bad)
xor
mov
fcomi
mov
pop
fwait
xchg
lea
in
out
add
int
push
ds
xchg
ror
add
xchg
mov
daa
jl
lods
imul
xchg
retf
push
xor
out
test
jo
push
aas
outs
int
addr16
mov
jno
stos
mov
stos
push
pop
adc
inc
and
mov
dec
adc
ins
outs
cmp
sbb
sbb
aaa
xlat
mov
jnp
dec
sbb
add
int
mov
in
cmp
mov
lods
test
(bad)
adc
in
jno
inc
mov
retf
int3
cmp
push
inc
(bad)
cdq
jp
das
test
fwait
imul
stos
(bad)
mov
rcl
mov
retf
mov
and
ret
dec
mov
or
idiv
xchg
xchg
push
cmp
push
mov
leave
lea
jecxz
add
sbb
cld
imul
or
sbb
push
pusha
sbb
xchg
hlt
loop
mov
adc
mov
cmp
ret
add
sbb
outs
dec
mov
cmp
jne
cmp
jae
mov
popa
std
nop
je
repnz
icebp
jp
pop
sub
sub
xchg
adc
pop
xor
out
and
jbe
push
jecxz
pop
jno
sbb
lahf
in
sbb
das
shl
mov
or
retf
or
(bad)
pusha
inc
and
ss
mov
ins
ins
xor
add
dec
jmp
jg
data16
cmp
stos
mov
jge
(bad)
xor
int3
imul
jno
jnp
pop
mov
(bad)
rol
lock
call
rol
mov
push
pop
add
adc
(bad)
inc
push
dec
jo
jae
sar
and
les
pop
into
out
xlat
add
xchg
adc
lds
mov
sub
push
imul
imul
dec
shr
fisttp
jmp
dec
xorps
dec
adc
(bad)
pop
(bad)
fistp
xor
in
mov
or
lods
pop
rcr
cmps
inc
popf
xchg
and
ins
sqrtps
rcr
cmp
inc
xchg
mov
cmp
in
jns
int
push
jp
sub
not
jmp
mov
mov
outs
jae
jns
mov
add
std
out
fld
les
mov
cmp
iret
adc
lds
mov
pop
xchg
imul
dec
imul
sbb
cmp
push
repnz
jbe
imul
stos
sbb
(bad)
fistp
lds
in
int
or
out
mov
xor
loope
xlat
call
sbb
pushf
mov
mov
(bad)
lods
inc
pop
xchg
mov
mov
mov
fisubr
mov
xor
clc
pop
call
sub
test
push
int
fs
push
into
cs
xchg
mov
push
lods
sbb
xor
pop
mov
mov
fs
test
add
add
pop
xor
inc
in
movs
gs
icebp
add
lock
movs
test
int
dec
aad
popa
mov
sar
xor
jmp
out
mov
sahf
dec
sahf
adc
fwait
nop
ins
sub
stos
push
push
aaa
xor
in
cmp
sti
hlt
and
ret
in
lock
arpl
out
cmp
sbb
mov
(bad)
pop
mov
jo
jno
or
or
lds
jbe
cld
adc
cmp
lock
pop
sbb
retf
push
jnp
je
mov
call
or
and
push
lods
es
test
(bad)
je
clc
cmp
das
in
inc
mov
ret
mov
jnp
pop
fwait
mov
add
jne
cwde
xor
(bad)
out
mov
mov
aam
cmps
and
movs
dec
dec
or
sub
mov
mov
sbb
add
mov
inc
cmps
sahf
test
sbb
pop
xor
adc
and
push
xor
scas
sub
std
push
aam
ds
and
sbb
cmp
test
push
mov
push
mov
icebp
ss
punpckhdq
stc
lea
pop
dec
dec
xchg
enter
in
jno
mov
push
adc
movs
cmps
sub
jb
xchg
cmp
js
fdiv
and
cs
or
or
push
jg
iret
inc
fmul
push
or
xchg
loope
jge
and
ror
or
dec
(bad)
xor
dec
inc
(bad)
daa
dec
adc
cmp
or
or
push
xchg
fidiv
scas
out
inc
jne
adc
xchg
adc
fstp
aam
shl
fnsave
cmp
mov
lahf
jl
ja
scas
xchg
retf
jb
adc
shr
push
pop
dec
and
repz
sbb
jae
iret
or
cmp
(bad)
push
sub
mov
mov
push
(bad)
pop
jbe
fs
jecxz
inc
stos
jge
mov
pop
rol
mov
mov
loopne
enter
dec
test
retf
sbb
mov
adc
mov
push
nop
xlat
xchg
repnz
bound
jne
in
add
call
mulps
jl
fcmovbe
call
dec
addr16
daa
sbb
pop
jne
xchg
mov
xor
mov
xlat
int
xchg
scas
repnz
or
push
xor
xchg
mov
sbb
cwde
push
popf
xchg
add
hlt
sbb
pushf
aad
mov
mov
js
lods
sub
adc
stos
pop
mov
lahf
popa
xchg
xlat
outs
outs
fist
mov
hlt
xchg
xchg
or
retf
fst
ret
ja
jl
adc
inc
adc
jge
clc
or
inc
and
mov
mov
cmp
enter
setns
mov
fidiv
pop
mov
das
mov
push
fsubr
jne
mov
or
dec
push
mov
hlt
int
sub
ret
cmp
ret
pushf
add
add
cwde
xor
push
xchg
xchg
cmc
fcomi
mov
and
mov
mov
jg
mov
nop
repz
loope
inc
mov
adc
test
mov
cmp
and
loop
arpl
movs
aas
cmp
push
pusha
div
(bad)
call
(bad)
dec
test
push
cs
adc
xchg
fbld
iret
jno
dec
or
scas
pop
stos
(bad)
jno
test
sbb
(bad)
pop
jmp
bound
pop
(bad)
jae
cwde
cmp
add
repz
push
daa
xlat
pop
test
loope
xor
adc
pop
xchg
data16
cld
lea
cmp
adc
add
mov
retf
jns
es
aas
addr16
cli
rol
xor
in
mov
repnz
fild
(bad)
sub
cmp
mov
ins
outs
adc
jmp
push
push
adc
mov
les
scas
adc
lahf
mov
cmp
sti
(bad)
hlt
and
int3
adc
jo
push
pop
std
movzx
fwait
pop
push
xor
pop
push
push
sbb
dec
fisttp
xor
sub
mov
fst
jg
fist
div
adc
pop
adc
es
hlt
icebp
xor
inc
mov
push
ret
jmp
stos
or
scas
sbb
or
pop
xchg
rcl
and
cmp
test
imul
outs
inc
retf
pop
inc
iret
shr
push
aam
aam
sub
jp
gs
lds
jl
sbb
sbb
adc
rcr
sub
jb
into
xchg
loope
jno
inc
rcl
jno
hlt
push
jae
imul
call
xchg
push
loope
call
jecxz
gs
and
sub
xor
mov
dec
int3
cld
xor
mov
jns
xchg
ret
fwait
repz
repz
(bad)
(bad)
dec
les
or
xor
dec
ret
and
ds
stc
(bad)
fsub
idiv
das
mov
lock
in
mov
add
(bad)
mov
jbe
sbb
jb
cmc
sbb
xor
jne
fwait
pop
xchg
int3
jp
sbb
pop
cmp
into
push
test
nop
es
jge
sub
mov
jae
sar
pop
dec
push
mov
fist
fs
inc
mov
scas
mov
popf
fsub
dec
loope
fmul
fs
aam
and
scas
sub
test
push
cs
xchg
mov
lods
je
cmp
rcr
cmc
xor
mov
pop
and
mov
xchg
or
jns
lods
cmp
loopne
in
je
or
inc
push
mov
shl
and
adc
ins
xchg
aam
and
and
cmp
or
cdq
loope
lahf
je
dec
sbb
adc
or
pop
inc
xchg
sub
fisubr
push
scas
jl
out
arpl
add
pop
ret
jbe
mov
leave
inc
push
or
ins
js
push
repz
pop
inc
mov
push
jmp
out
jne
rcl
pop
idiv
mov
jecxz
mov
push
(bad)
mov
les
or
push
(bad)
inc
divps
call
fcmovne
aad
das
mov
adc
add
bound
mov
repz
inc
(bad)
(bad)
fnsave
loope
xchg
repz
cs
and
cmps
sahf
inc
fcomp
pop
test
cmps
loop
jnp
xor
(bad)
push
push
mov
jne
or
mov
jecxz
ss
out
cmp
rcr
mov
das
mov
adc
mov
mov
jmp
inc
(bad)
adc
repnz
mov
push
cmp
cmp
sbb
xor
pop
xchg
push
and
sahf
stos
leave
push
fnstenv
adc
and
scas
sbb
pusha
ja
inc
mov
(bad)
outs
int
mov
dec
(bad)
and
fnstenv
adc
dec
and
and
imul
mov
push
push
gs
int3
inc
pop
scas
mov
fimul
dec
push
add
xchg
out
gs
aas
and
jno
cmps
and
cmp
or
aad
dec
in
mov
movs
inc
inc
jbe
or
add
iret
into
(bad)
ins
in
inc
(bad)
call
in
sbb
mov
push
sahf
(bad)
ins
retf
pop
pop
dec
cdq
push
test
mov
and
js
lea
or
xchg
or
push
inc
dec
iret
mov
pop
jmp
cmp
into
(bad)
aam
mov
add
lea
ja
popa
mov
in
cmp
xchg
sbb
fbld
mov
inc
repz
mov
mov
mov
and
stos
das
loopne
dec
or
push
ins
mov
jbe
ret
ins
push
sbb
push
push
inc
sbb
add
xor
fild
add
push
and
repz
lock
movs
push
mov
js
inc
pop
mov
dec
je
(bad)
add
cmp
cmp
mov
lods
jo
mov
call
mov
and
pushf
setae
imul
dec
in
pop
out
push
adc
pusha
inc
pop
lock
fdivr
into
xchg
mov
rcr
popf
or
popf
jmp
xor
sti
mov
in
push
jmp
sbb
fbstp
ss
cmp
mov
dec
xor
fst
hlt
icebp
mov
add
inc
clc
sub
stc
repz
or
into
jecxz
aam
fiadd
add
mov
lea
and
cmp
or
mov
cmp
dec
stc
shl
jp
cmp
enter
shl
xchg
gs
cmp
stos
mov
push
push
ins
inc
cmp
inc
cmps
mov
cmp
dec
test
sub
in
push
jmp
add
push
aad
inc
adc
dec
mov
div
paddusb
sub
inc
pop
xchg
add
mov
add
fsub
pop
scas
and
adc
sbb
inc
clc
mov
push
fisttp
es
jg
in
in
fadd
jb
inc
xchg
mov
inc
cs
cwde
inc
jl
push
jle
mov
push
jnp
dec
push
mov
add
mov
jns
pop
call
popa
adc
shl
mov
and
(bad)
test
mov
fbld
push
int3
adc
jle
test
scas
das
inc
mov
int3
and
pop
aam
fcom
hlt
adc
imul
push
mov
in
lahf
stos
out
push
inc
dec
sbb
and
pop
fidiv
test
mov
sahf
lock
lods
mov
loopne
ins
or
in
(bad)
lock
out
push
inc
ins
dec
push
adc
sub
push
push
xor
ss
addr16
ror
xor
add
mov
sub
cmp
push
ja
mov
pushf
cmp
push
pusha
(bad)
fild
and
out
xor
jge
cmp
out
pop
xor
dec
push
bound
cdq
adc
xor
cmp
push
push
lods
cwde
inc
(bad)
pop
push
jo
iret
pop
pop
ja
adc
loopne
out
jne
jmp
or
cmp
fimul
dec
call
adc
push
shr
(bad)
fs
retf
dec
int3
xchg
sub
push
(bad)
jmp
mov
pop
mov
out
(bad)
mov
je
cmp
in
and
mov
inc
push
fsubr
jns
cmp
scas
cld
fwait
sub
loop
xor
rcl
jl
and
movs
mov
adc
shr
sahf
mov
stos
rol
jmp
inc
sub
xchg
mov
push
ficomp
pop
push
jbe
jns
cmp
ss
push
mov
pusha
call
lock
mov
pop
pop
aaa
mov
inc
xchg
mov
aaa
sahf
jp
add
push
cmps
inc
pop
jp
(bad)
scas
cdq
jo
inc
test
mov
mov
shl
ins
or
test
shl
xor
idiv
repz
leave
sbb
into
stc
xchg
mov
loop
push
xor
outs
sbb
sar
push
xor
fdiv
sub
mov
int
jg
rcl
inc
pop
jns
inc
push
mov
pushf
xchg
(bad)
not
jmp
xchg
sub
cmps
xor
scas
xor
pop
xchg
push
fwait
dec
dec
inc
test
stc
mov
int3
mov
mov
or
jmp
pop
and
mov
push
cmp
adc
sub
call
mov
int3
cmp
aam
fmul
dec
(bad)
cli
lea
fdiv
sahf
push
jmp
adc
rcr
inc
bound
dec
sub
cmp
sahf
inc
sbb
and
in
mov
call
sti
cdq
hlt
mov
in
xlat
cs
ret
lea
stc
mov
mov
jg
jae
mov
push
pop
xor
jo
stos
movs
inc
les
xchg
call
push
call
bnd
aas
(bad)
out
mov
jge
mov
and
ror
mov
fsub
hlt
out
push
jmp
jge
arpl
jbe
dec
imul
data16
cmp
rol
xor
push
dec
sbb
icebp
and
sbb
sub
and
int3
icebp
adc
std
lods
cs
pop
loopne
jmp
mul
mov
add
clc
nop
imul
cld
sub
sbb
sub
cmps
add
adc
push
and
gs
lock
sub
sub
ins
repz
add
in
int
retf
dec
cli
mov
dec
out
mov
mov
jne
jo
ins
or
fsubr
sub
in
nop
or
pop
jmp
xchg
pop
mov
movs
stos
pusha
cmps
jg
iret
test
ret
retf
jmp
fisttp
sbb
cwde
sti
xchg
ins
xor
aas
dec
sub
or
mov
pop
lock
xor
push
ja
xor
xchg
(bad)
jle
jp
jle
repz
(bad)
cmp
push
dec
test
not
in
in
stc
inc
adc
jo
mov
xchg
mov
mov
addr16
cmp
retf
jmp
or
ins
mov
in
jb
xchg
mov
fwait
aam
mov
and
add
xchg
retf
gs
push
push
xchg
fcomi
dec
jmp
lods
icebp
loopne
add
xchg
adc
xchg
(bad)
adc
(bad)
scas
inc
mov
mov
sbb
fcmovb
jl
ror
lods
and
inc
pop
jp
sub
push
lock
ret
mov
push
sbb
xor
inc
ja
push
aas
rol
je
mov
pusha
leave
jns
dec
(bad)
lods
push
lds
movs
in
push
or
lods
cmc
adc
inc
cs
cmp
xor
xchg
(bad)
ins
xchg
pop
repz
mov
repnz
xchg
imul
mov
stos
mov
sbb
pop
std
out
ficom
jnp
bound
cmp
inc
add
xchg
and
icebp
in
mov
sub
bound
stos
lea
xchg
or
fnsave
add
gs
movs
cmp
add
inc
jge
dec
addps
cs
cwde
dec
push
pop
xor
daa
adc
mov
data16
sbb
push
es
pop
ret
inc
mov
push
pop
scas
push
or
sub
push
and
jge
sahf
adc
inc
or
lods
scas
xchg
adc
shl
(bad)
cdq
scas
mov
in
aas
pop
adc
xor
jmp
inc
add
pop
mov
fwait
cld
pop
cmp
pusha
call
in
mov
push
ret
fcom
mov
aam
cmp
inc
dec
sub
lods
fidivr
inc
bound
shl
mov
adc
jno
push
fcmovne
xor
cmps
loope
(bad)
add
mov
pop
dec
loope
int
push
sahf
jb
xchg
lds
jnp
jns
in
or
sub
scas
dec
aaa
out
rcl
xor
cld
scas
mov
hlt
or
sar
in
xchg
gs
mov
ins
cmps
stos
add
lods
in
jecxz
into
push
outs
push
cmp
xlat
and
leave
mov
sub
mov
(bad)
adc
lahf
idiv
loope
xor
popf
cmc
jae
jge
out
cld
pop
les
int
arpl
jns
fs
jle
cwde
in
adc
clc
int3
or
popf
stos
lock
cwde
push
ss
fmul
in
movs
jl
sub
or
aas
cmp
jmp
pop
push
pop
popf
xchg
cmp
push
jns
jo
adc
lahf
sub
dec
fcom
icebp
retf
in
jae
mov
pop
sbb
push
rcr
inc
xor
mov
mov
cmp
or
xlat
loope
adc
fsubr
mov
push
xchg
out
jl
xor
sbb
mov
retf
fwait
into
push
cmp
pop
add
sub
adc
xchg
pop
mov
xlat
sub
jo
sub
mov
add
inc
pop
push
rcr
cvttps2pi
dec
lds
pop
xchg
icebp
xchg
shl
icebp
loop
stos
push
xor
jae
or
mov
dec
push
jne
mov
pop
inc
nop
out
cs
sbb
cmc
(bad)
sub
adc
leave
popa
sub
xor
add
loopne
xor
xor
jge
push
ins
fcomp
(bad)
push
into
xor
dec
call
push
sahf
pusha
rcl
or
movs
lods
adc
cli
sbb
xchg
mov
cmps
inc
in
in
lods
mov
pop
xor
xor
movs
inc
push
add
dec
sub
and
cs
in
and
sub
sub
ss
hlt
cmp
(bad)
arpl
cmps
cmps
pop
cmp
fdiv
imul
dec
add
mov
test
push
fsubr
jae
mov
jae
mov
xchg
aad
push
retf
fmulp
jmp
(bad)
aam
stos
dec
fucom
and
imul
sbb
cmc
jbe
cmp
loop
out
lods
adc
xor
cmp
mov
aam
push
pop
scas
loopne
pop
mov
mov
xchg
inc
pop
push
in
xchg
xchg
fdivr
repz
fcmovb
ret
leavew
aaa
loope
aas
mov
out
or
loopne
ror
movs
shl
mov
jg
sub
fadd
in
enter
mov
in
int
outs
jne
and
gs
enter
add
mov
int3
ret
ja
adc
out
cmp
lods
in
mov
add
in
mov
pop
push
rol
or
pop
mov
cli
xchg
mov
push
repz
jne
fisttp
or
mov
cli
fsub
bound
or
jge
(bad)
in
lods
enter
jge
in
mov
dec
mov
sbb
in
jmp
stos
mov
retf
xchg
adc
mov
bound
add
test
jo
outs
cli
cld
jbe
fsub
ins
xor
imul
je
in
iret
in
and
pop
push
adc
loope
fild
dec
push
jbe
mov
dec
call
and
pop
stc
mov
(bad)
mov
(bad)
loope
enter
sbb
call
in
cmc
sub
div
jb
les
bound
push
pop
cld
out
dec
jne
movs
ds
das
inc
mov
repnz
mov
scas
or
cdq
clc
shl
gs
(bad)
fstp
imul
sub
and
rcl
mov
xchg
mov
mov
lahf
adc
lea
mov
js
jle
and
inc
dec
xchg
fistp
loope
push
xor
xor
lea
scas
pop
mov
sbb
cmp
fcmovnu
dec
repnz
jge
and
lods
mov
pcmpeqb
cmp
mov
icebp
sbb
dec
pcmpgtd
gs
das
inc
cmps
hlt
xchg
add
out
sub
ins
ret
xchg
repnz
pop
pop
add
idiv
add
push
xor
mov
push
test
stos
repnz
jo
xchg
(bad)
sbb
ret
xchg
les
mov
test
cld
bound
push
shl
pop
lock
cdq
imul
cli
xor
xchg
imul
call
(bad)
out
dec
or
mov
(bad)
jl
imul
cmp
sub
sub
add
bnd
mov
lea
jmp
jne
jb
pop
mov
mov
cmp
xor
pop
xor
cmp
push
sbb
mov
js
cmps
(bad)
cmp
dec
inc
pusha
push
xchg
leave
test
loopne
and
leave
mov
sub
les
stc
dec
loop
jo
mov
lahf
inc
jle
xchg
js
mov
mov
sbb
or
xchg
pop
xor
iret
jae
rcl
mov
fiadd
out
test
out
mov
adc
fcmovne
repz
arpl
mov
frstor
pop
add
xlat
call
enter
and
cmp
fsubr
(bad)
js
mov
or
fistp
dec
sub
pop
xchg
in
hlt
ins
sbb
pusha
mov
or
push
imul
dec
(bad)
cmp
arpl
out
dec
pushf
xor
and
xor
aaa
pop
inc
dec
xchg
clc
pop
shl
push
lock
loopne
adc
sub
test
mov
pop
shl
jmp
adc
(bad)
dec
dec
adc
pop
sub
ret
cli
inc
ins
outs
sti
stc
call
jge
rcl
cli
dec
inc
addr16
add
cmp
stos
mov
retf
or
(bad)
jns
add
mov
fcomip
or
jno
cmp
lods
sahf
push
call
xor
shl
retf
stos
and
mov
dec
and
mov
icebp
dec
fs
jmp
aas
sub
rol
in
stos
std
aas
mov
fisub
or
dec
gs
test
movs
inc
sub
sub
inc
push
sub
or
inc
sbb
mov
cmps
mov
bound
fnstcw
cdq
xchg
dec
jle
cmc
and
mov
cmps
test
push
test
xlat
mov
ins
pop
aaa
xchg
mov
shl
pop
push
pop
fsub
push
mov
push
pop
int
shr
cmp
mov
loopne
test
inc
test
scas
retf
cmps
loopne
dec
push
stc
adc
jge
push
fidiv
pop
xchg
fisttp
fild
ja
into
sbb
cmp
repnz
imul
enter
ret
lods
bnd
aas
fisttp
scas
loop
shl
mov
dec
inc
repz
xor
add
jmp
repnz
cmp
cmp
xchg
add
nop
cli
xchg
aad
lods
cli
imul
push
mov
dec
inc
push
jmp
retf
popf
xchg
in
mov
and
push
xor
jmp
aaa
jl
mov
das
mov
ret
mov
or
loop
add
ja
xchg
xchg
push
int3
cmp
inc
add
push
dec
mov
dec
retf
and
stc
outs
retf
test
mov
pop
push
cld
mov
ja
fst
daa
push
mov
xchg
pop
stos
test
repz
or
jge
jno
pop
cmp
loope
cs
mov
mov
sub
push
mov
pop
iret
mov
dec
loopne
mov
xor
xchg
cmp
inc
cwde
les
in
lahf
std
jp
lods
inc
sbb
sbb
cmp
gs
mov
pop
mov
adc
(bad)
int3
clc
sbb
pop
cmps
aaa
add
fldenv
cmp
pop
sub
ja
xchg
sahf
lods
(bad)
push
mov
psubsb
lds
retf
out
scas
xchg
mov
add
dec
scas
pop
(bad)
ds
pop
clc
dec
push
mov
dec
mov
inc
movs
lahf
xor
jmp
hlt
jo
pop
inc
jnp
adc
not
(bad)
or
and
xchg
add
pushf
add
call
dec
(bad)
inc
add
jbe
xchg
test
leave
pop
mov
cmps
jnp
or
ins
mov
(bad)
pop
dec
xchg
loope
(bad)
sbb
in
dec
fldln2
test
lds
jns
mov
aaa
mov
pop
xor
mov
mov
push
and
mov
sbb
xor
aas
add
cli
dec
mov
jmp
jecxz
adc
push
loop
push
outs
jl
hlt
js
adc
jmp
or
or
jbe
in
cli
push
push
mov
pop
in
mov
popf
xor
sub
add
out
sub
dec
cmps
jb
jae
inc
inc
sbb
inc
aas
(bad)
fld
pop
or
adc
dec
addr16
jns
pop
cwde
pop
cmp
jge
adc
imul
mov
jne
sbb
test
xchg
adc
push
sub
pop
dec
mov
lahf
popf
jmp
pusha
cmp
cs
sti
jle
sbb
xchg
leave
mov
push
out
mov
xchg
mov
mov
cmc
pusha
shr
lock
stc
test
mov
pop
es
retf
xchg
pushf
jle
pop
ss
test
aas
xchg
(bad)
and
xor
sti
push
push
sbb
adc
jecxz
icebp
and
lea
add
je
addr16
sub
mov
jmp
outs
(bad)
into
jno
mov
dec
sub
jg
and
jne
sbb
dec
ja
mov
xchg
xchg
fdiv
test
enter
mov
mov
test
mov
inc
sbb
mov
stos
or
cdq
xchg
sub
daa
pop
addr16
test
pop
(bad)
sbb
das
inc
or
xor
outs
idiv
(bad)
out
sub
mov
out
jl
or
xor
(bad)
and
adc
call
loopne
addr16
sub
stc
or
jle
stc
dec
cmp
scas
shr
lea
lds
add
and
shl
mul
ret
inc
and
jb
or
inc
mov
adc
loop
xor
iret
push
mov
mov
repnz
pop
add
nop
popf
pop
mov
dec
push
pop
push
mov
aad
jne
pop
mov
push
je
cli
sub
dec
ror
xor
dec
cmp
sub
pop
adc
push
add
pop
cmp
pop
sbb
dec
pop
and
pop
adc
xchg
jg
gs
dec
not
inc
or
popf
inc
jecxz
mov
mov
out
cmc
call
pop
shl
adc
std
arpl
xchg
call
push
jmp
stc
cmc
sub
iret
and
xor
adc
pop
fld
test
ds
mov
mov
mov
adc
dec
lea
push
bound
(bad)
rcr
push
mov
(bad)
sti
(bad)
imul
data16
test
xchg
push
imul
js
ret
fimul
fst
arpl
clc
and
mov
popa
lods
mov
mov
aad
bound
in
outs
mov
and
cmp
lods
retf
jecxz
mov
mov
loop
pushf
test
mov
dec
xchg
add
add
out
xchg
lods
popf
push
jl
mov
aam
test
pop
ja
jb
dec
xchg
jg
jbe
jg
pop
fstp
cwde
xchg
aas
pop
sub
scas
std
imul
xor
xchg
and
rcr
dec
push
mov
xor
mov
scas
adc
(bad)
iret
sbb
(bad)
mov
test
mov
add
or
hlt
dec
sbb
jbe
lods
xchg
mov
idiv
aas
mov
dec
mov
int3
cmp
and
test
out
ret
cmp
hlt
inc
jns
pusha
add
cld
out
jo
jmp
xchg
push
fisttp
test
dec
push
outs
das
nop
mov
clc
icebp
jb
mov
js
cmp
push
test
(bad)
clc
adc
stc
cs
or
fcomp
stos
pop
cmp
arpl
out
jno
mul
call
popf
out
sub
fnstcw
add
out
adc
cmps
pop
push
jo
iret
(bad)
call
out
(bad)
sbb
call
fwait
into
iret
jbe
inc
xchg
shr
dec
ret
mov
js
mov
ret
mov
add
loop
je
pop
repnz
sbb
pop
aas
mov
adc
js
shr
ret
cdq
or
cwde
mov
and
imul
or
push
sbb
jmp
mov
pop
sbb
out
pop
or
stos
xchg
add
dec
dec
out
mov
fist
leave
retf
push
jnp
xchg
ret
retf
cmp
retf
push
arpl
dec
push
fcom
out
(bad)
loop
inc
dec
imul
retf
imul
mov
jp
ret
push
fiadd
mov
xchg
and
push
and
ror
mov
data16
pop
sbb
std
loope
ds
pop
enter
jmp
cwde
mov
and
loope
jmp
dec
aas
fadd
adc
xchg
mov
push
jns
movs
push
sti
imul
loop
fadd
mov
push
in
daa
daa
das
mov
inc
not
ins
jmp
push
out
pop
(bad)
pop
pusha
jo
mov
xor
mov
sub
pop
jnp
cmp
cdq
mov
mov
cmp
pop
imul
push
jg
inc
push
mov
dec
cmps
push
sbb
int3
or
adc
sbb
inc
dec
jle
jle
xlat
jns
shr
xchg
sbb
inc
fisubr
fistp
or
jp
sbb
mov
xor
loope
jbe
pop
dec
mov
pop
mov
rcr
cmp
js
mov
mov
lods
call
iret
movs
jb
and
inc
pop
xchg
rol
mov
or
lods
daa
es
xchg
addr16
mov
in
inc
data16
fdiv
aaa
(bad)
hlt
call
call
enter
jl
call
cs
mov
shr
xor
mov
or
sti
lahf
mov
sub
adc
pop
inc
push
mov
push
cmp
jmp
cs
pop
jmp
sub
jb
push
push
mov
inc
cmc
fist
lods
jbe
loopne
scas
ret
dec
dec
mov
pop
pop
jne
test
jecxz
xchg
jb
fcomi
(bad)
dec
jecxz
movs
cmp
inc
xor
dec
pop
stos
test
loope
gs
jg
jmp
gs
push
fdiv
inc
ins
mov
mov
jmp
mov
jbe
mov
jl
cmp
sub
das
punpcklbw
icebp
add
aam
inc
push
push
dec
mov
inc
mov
sub
movs
sub
cmp
mov
jbe
test
jnp
or
xor
gs
mov
sbb
int3
stc
pop
imul
jo
popa
push
std
sar
outs
xlat
ss
loope
stos
scas
xchg
jbe
in
fst
arpl
shr
sbb
or
jno
or
jmp
mov
cwde
add
ins
sbb
push
shl
loop
mov
dec
mov
mov
movs
movs
xchg
in
mov
loope
test
scas
fistp
jnp
aaa
mov
ds
test
iret
adc
es
aad
sub
(bad)
push
std
adc
test
cmp
leave
or
sbb
sub
movs
jmp
icebp
(bad)
mov
add
or
jp
sub
inc
cmp
fidiv
popf
add
jge
(bad)
pop
mov
aam
sahf
cli
dec
cmp
push
js
add
aad
sahf
sahf
jg
stos
fld
retf
mov
jmp
fistp
test
sub
push
sbb
pop
(bad)
std
je
or
push
sbb
adc
call
and
adc
fstp
gs
pop
(bad)
out
inc
repnz
pop
push
sub
daa
call
add
xor
mov
dec
and
shl
out
pop
in
xchg
fadd
push
aas
sub
sub
das
aaa
pop
rcl
loope
aaa
xchg
xor
dec
mov
dec
test
aam
(bad)
mov
push
mul
mov
jge
or
daa
pop
loop
mov
pop
rcl
mov
iret
dec
mov
sub
imul
push
fwait
push
and
mov
adc
sub
fisttp
aas
ret
sbb
lods
mov
(bad)
pop
sub
in
pop
imul
inc
xchg
lds
push
lahf
popa
popa
dec
loope
fwait
mov
sbb
or
aas
jmp
sub
xor
mov
cdq
jge
adc
mov
push
loope
pop
out
adc
dec
push
sahf
or
cmp
add
(bad)
pop
add
add
cs
or
aas
loope
inc
pop
scas
sub
or
not
cwde
fs
in
stos
inc
xlat
push
mov
or
outs
and
(bad)
mov
mov
sti
fisttp
fwait
mov
mov
or
adc
dec
mov
out
push
shl
int
out
ficom
retf
shl
mov
mov
cmp
mov
sub
aam
mov
mov
cmp
dec
push
in
test
shl
sub
cs
and
xchg
rol
data16
xchg
dec
xor
scas
fimul
out
out
cmp
push
std
pusha
cli
int3
fisubr
mov
(bad)
in
imul
jns
imul
xor
push
fstp
pop
sbb
test
jp
jle
aad
mul
arpl
div
or
jmp
dec
push
imul
(bad)
stc
mov
fld
push
sbb
xchg
pop
dec
push
push
retf
mov
sbb
enter
aad
mov
shr
imul
add
jp
xchg
mov
dec
or
push
sete
mov
in
jmp
(bad)
sub
xchg
js
fcom
mov
inc
pop
mov
sub
adc
popf
mov
fisttp
adc
pop
xchg
repz
popf
inc
js
and
in
imul
mov
or
inc
sub
in
ins
push
mov
mov
cmps
push
dec
std
add
neg
adc
pop
add
dec
push
mov
lahf
(bad)
fstp
fild
out
inc
pushf
pop
sub
std
or
and
sub
xlat
push
das
dec
adc
sti
ret
inc
iret
ins
scas
cmps
lds
push
shr
pop
ret
(bad)
gs
rcl
gs
rcl
xor
xor
imul
push
fs
clc
add
nop
repz
in
or
loop
jb
pop
mov
pop
xchg
imul
pushf
inc
or
dec
jmp
inc
es
call
xchg
adc
es
xchg
pop
scas
cli
in
pop
lock
mov
(bad)
and
mov
mov
scas
(bad)
mov
adc
ins
add
je
and
test
or
adc
pop
cdq
ins
and
fldcw
cwde
sub
in
fstp
and
fnstcw
aaa
xchg
add
cmp
mov
lds
jbe
add
shl
rol
sti
xlat
mov
or
and
and
mov
ret
fisttp
or
ficom
ja
lds
cmps
push
ins
in
jecxz
mov
cmp
adc
fisttp
mov
daa
dec
sbb
fimul
cwde
lock
imul
loop
push
inc
pushf
push
inc
enter
adc
retf
or
addr16
push
sub
dec
in
loope
jnp
pop
outs
popf
std
out
daa
push
popf
dec
cmps
dec
cmp
ret
pop
adc
pop
and
push
or
gs
cmp
add
inc
mov
adc
dec
shl
mov
xor
jbe
loopne
mov
or
push
jmp
dec
sbb
das
pop
mov
mov
xchg
in
hlt
pusha
sub
pop
stc
lods
pop
xor
adc
dec
fnstcw
lock
pop
jbe
in
js
xor
mov
les
jne
int3
fsubr
(bad)
xchg
in
fdiv
mov
movzx
popf
lds
test
ins
shr
outs
scas
(bad)
in
sbb
xlat
popf
add
shl
cmp
adc
fistp
and
sahf
jmp
arpl
push
push
(bad)
cmp
mov
(bad)
test
cmp
jb
pop
loop
pop
mov
and
rcl
jle
leave
sub
mov
mov
mov
mov
pop
aaa
aas
sub
pop
push
jp
out
(bad)
mov
call
jno
sahf
std
in
sti
int3
jge
inc
outs
pop
cmc
jns
or
das
retf
mov
fimul
mov
outs
push
sahf
std
addr16
cmp
loop
ret
pusha
and
mov
or
imul
das
aam
xchg
pushf
add
stos
and
inc
push
fwait
cmp
mov
and
shl
test
pop
aas
cs
mov
add
les
or
jg
leave
mov
mov
mov
mov
sub
hlt
in
out
pop
add
push
int
std
jne
es
mov
cwde
popa
jl
or
into
mov
add
inc
sub
(bad)
sub
sub
sub
and
inc
mov
fdiv
jecxz
cmp
out
pop
xchg
fwait
xchg
add
adc
or
imul
cmp
out
(bad)
fidivr
pushf
mov
sub
xor
mov
pop
loop
push
out
sub
inc
pop
jbe
cdq
or
cmp
mov
dec
dec
(bad)
jno
pop
aam
retf
fld
mov
test
push
mov
scas
nop
outs
fnstsw
mov
out
ja
pop
push
int3
cmc
mov
mov
dec
pushf
retf
fstp
or
hlt
push
dec
push
xor
shl
mov
mov
xchg
lahf
(bad)
xchg
xor
and
push
sbb
push
add
(bad)
aas
dec
and
jge
pop
push
shl
or
out
ss
addr16
ret
rcl
shl
popf
shr
out
pop
push
push
cs
stos
idiv
repz
cmps
dec
repz
imul
test
xchg
test
outs
pusha
lds
inc
mov
add
lds
sub
inc
sbb
sub
xor
ins
fcomp
addr16
fld
mov
lods
jae
inc
pushw
xlat
push
or
sub
aaa
jbe
add
xchg
or
xchg
in
dec
xchg
sbb
jbe
std
cdq
dec
mul
sbb
lods
bound
mov
outs
xlat
ret
lock
jns
lods
xchg
jle
lahf
sbb
dec
fild
push
aad
or
push
sub
cwde
adc
mov
xor
inc
add
cld
sbb
push
push
(bad)
cmp
cs
sbb
xor
fs
aas
jmp
or
psubw
shr
sub
cmps
add
jp
push
retf
jle
dec
das
push
push
dec
adc
add
dec
in
mov
jmp
or
mov
ret
cli
stc
rcl
pop
out
mov
mov
push
add
aaa
(bad)
inc
aaa
out
jb
ror
test
out
sbb
out
hlt
(bad)
mov
inc
adc
xor
mov
add
hlt
ret
cmp
mov
mov
adc
outs
fmul
fwait
and
jg
or
and
xchg
das
movs
push
pop
xchg
js
fnstenv
mov
mov
push
(bad)
fiadd
das
jae
sar
hlt
scas
or
add
sti
sbb
pop
fst
jmp
push
cli
cmp
pop
inc
add
pop
addr16
lds
inc
movs
and
jmp
pop
ja
mov
imul
iret
ror
leave
inc
sub
fwait
sub
fsubr
jno
imul
mov
pop
fdiv
retf
fdiv
xor
add
ds
adc
fcom
fistp
add
stc
int
and
mov
(bad)
and
pop
neg
cmp
rcr
jl
dec
jge
and
dec
sub
ret
pop
sub
add
cli
push
ins
(bad)
fisubr
mov
jecxz
ins
cmp
popf
pushf
imul
rol
popf
mov
mov
sar
lahf
not
not
dec
fwait
pop
popa
jg
mov
arpl
add
push
push
outs
inc
add
pop
call
ror
sub
in
mov
fs
dec
sub
xor
dec
xchg
inc
jl
mov
ror
jo
or
(bad)
(bad)
xchg
rcr
dec
inc
(bad)
fild
clc
iret
out
sbb
pop
stos
mov
push
gs
dec
int
jbe
sahf
dec
call
cwde
jae
cli
jecxz
cld
stos
push
retf
add
mov
(bad)
mov
fsub
loop
aaa
mov
cmp
mov
adc
jmp
sbb
push
jnp
(bad)
mov
adc
or
mov
cs
movs
cwde
test
mov
(bad)
neg
movs
push
imul
call
push
mov
push
je
fsub
in
or
bound
jle
jmp
push
fs
add
and
jp
mov
cmps
rcr
fcomp
sub
add
jae
xchg
clc
dec
sbb
jo
push
push
xor
adc
mov
adc
or
fldz
movs
push
in
jmp
sbb
idiv
clc
call
stos
movs
or
int
and
adc
or
push
push
in
retf
mov
push
mov
shl
and
cdq
xlat
or
adc
dec
js
adc
ja
test
mov
cwde
sbb
xadd
pushf
in
call
jecxz
fnstsw
shl
mov
jb
inc
jl
loop
aas
xchg
xchg
clts
jno
jns
jle
out
cmp
add
dec
out
xchg
pop
lds
pop
inc
push
xchg
clc
adc
or
pop
jp
ret
inc
add
mov
pop
and
cdq
dec
sub
test
out
aad
into
lock
add
sti
jnp
mov
pop
pop
pop
pop
loope
jns
cwde
cmp
or
or
popf
xchg
nop
jle
adc
pop
or
lock
fdivrp
push
dec
lock
add
jne
cs
pop
jecxz
pop
xlat
aad
cld
pop
aaa
dec
inc
fst
adc
rcl
and
dec
push
enter
int
cmc
inc
push
popf
add
mov
repz
pop
adc
out
lahf
das
or
dec
inc
jg
cld
dec
cmps
std
mov
or
or
xor
imul
inc
sub
adc
dec
(bad)
fisub
inc
push
(bad)
sar
(bad)
fcomp
repnz
rcr
fisttp
adc
jno
and
(bad)
(bad)
inc
ds
cmp
lea
out
dec
mov
out
mov
mov
or
push
mov
mov
push
int3
mov
dec
mov
jmp
mov
xor
bound
(bad)
sbb
jb
adc
psrad
ins
adc
out
xchg
inc
or
(bad)
outs
and
mov
test
push
add
push
xchg
inc
arpl
pusha
push
jb
push
cmc
adc
cwde
lods
or
mov
inc
dec
nop
sbb
xchg
into
call
movs
inc
sbb
jo
jle
jg
inc
fisubr
dec
jno
stos
and
inc
mov
xchg
xor
in
sti
test
mov
adc
xchg
fidivr
inc
sbb
or
in
je
jne
fisubr
add
or
cmps
or
xor
inc
into
push
add
neg
push
mov
cmp
stc
out
nop
call
movs
int
out
jge
xchg
mov
daa
adc
xchg
fiadd
rcr
out
mov
ret
in
lea
jns
adc
cmps
pop
and
xchg
(bad)
stc
imul
adc
jno
jmp
les
dec
adc
dec
in
fs
rcl
outs
lock
jle
jp
mov
add
mov
aaa
fs
jns
faddp
mov
mov
scas
lds
mov
dec
ja
clc
movs
push
or
in
pushf
xchg
js
outs
daa
jmp
inc
jecxz
cmps
add
cmp
inc
mov
ror
xor
mov
dec
test
cli
test
daa
adc
and
cli
imul
or
cmp
addr16
(bad)
outs
lea
mov
mov
push
repz
jmp
mov
inc
dec
and
mov
sub
fsubr
idiv
add
or
mov
inc
xchg
aad
adc
dec
mov
ins
cmps
inc
add
and
or
ins
push
adc
iret
or
lods
std
xchg
call
repz
jge
cli
(bad)
in
push
push
pop
jle
outs
into
xlat
xor
push
stc
scas
or
mov
idiv
clc
test
das
lds
(bad)
cmps
outs
leave
nop
mov
shld
not
xchg
cmps
or
pop
lds
mov
mov
jp
(bad)
pop
sub
cmp
sahf
push
js
repnz
pusha
and
jae
xor
mov
shr
or
fdiv
mov
popf
push
(bad)
or
mov
cmp
daa
push
test
call
sbb
cmp
jg
cld
(bad)
fisttp
cmp
(bad)
or
cli
pop
arpl
or
add
lock
mov
adc
aam
daa
dec
or
iret
fist
movs
bswap
call
jb
rol
jae
imul
mov
jge
xor
and
(bad)
das
and
cdq
inc
jle
pop
dec
adc
mov
retf
cmp
pop
sbb
adc
rcr
mov
or
xchg
sub
repz
aas
jbe
test
loop
test
inc
fidivr
arpl
lock
sub
stos
sub
xchg
(bad)
inc
ja
les
leave
jo
mov
pop
mov
add
mov
rcl
int3
movs
mov
push
std
sub
push
lods
imul
scas
out
inc
sub
jne
dec
int3
pop
addr16
mov
xchg
xor
xchg
int3
loop
dec
aas
out
and
rol
mov
in
fs
test
or
mov
dec
add
sub
pop
ins
cmp
das
dec
enter
popf
sub
outs
int3
cld
pop
inc
movs
pushf
push
jmp
dec
arpl
xchg
es
popa
pop
cmps
cld
push
sbb
outs
xor
sbb
and
cmp
ret
adc
jl
jae
shl
outs
fnstcw
retf
stos
inc
xchg
aaa
pop
push
or
shl
(bad)
call
stc
das
mov
es
cld
xchg
in
cmps
jnp
sti
cwde
int
xchg
arpl
xor
mov
popa
push
popa
fsub
inc
cs
retf
shl
mov
jns
lea
cmps
sahf
hlt
cs
xlat
fist
add
sbb
ja
leave
add
into
leave
mov
icebp
mov
test
gs
or
lods
mov
dec
push
cmp
fwait
push
inc
daa
cmp
mov
and
ret
dec
jp
cmp
or
cwde
jge
mov
push
and
and
adc
xchg
sub
loopne
mov
add
ins
mov
xor
cmc
pop
test
add
cdq
or
push
call
pop
sub
xchg
push
xchg
jmp
cmps
fild
xor
dec
and
pop
jae
(bad)
xor
loop
call
in
jmp
adc
mov
push
mov
sub
sub
sbb
inc
dec
data16
pop
lar
inc
fadd
pop
mov
cmp
lods
(bad)
mov
mov
in
xchg
mov
aaa
xor
jmp
adc
add
dec
sbb
ud0
xor
sub
fstp
shr
aas
xchg
sub
mov
adc
int
cmps
jecxz
dec
into
cdq
mov
or
sbb
test
outs
add
ds
jmp
ins
mov
xor
xchg
retf
scas
out
cmps
sub
jno
test
mov
out
lock
imul
adc
or
cmp
cmp
and
cld
scas
les
stos
adc
mov
aad
lods
xor
sub
xor
out
cld
stc
add
pushf
addr16
cmovle
mov
mov
(bad)
and
cmc
adc
cdq
add
and
movs
or
retf
int3
sbb
jno
outs
sub
xor
out
or
xor
xchg
loope
jmp
out
in
(bad)
jnp
or
pop
pop
or
xchg
sub
retf
aaa
inc
push
xchg
jnp
mov
sub
cmp
adc
cs
scas
mov
adc
dec
stc
into
xchg
mov
sub
dec
push
mov
and
push
cmps
sub
xchg
mov
out
mov
jge
xchg
xor
ins
dec
int
jge
pop
dec
dec
in
ds
add
and
aad
dec
xor
jg
(bad)
jbe
mov
(bad)
xor
lea
stos
loop
cmp
std
dec
push
cmc
sti
(bad)
outs
arpl
cmp
or
enter
fs
jecxz
(bad)
repnz
lock
pop
retf
sub
ja
retf
dec
sbb
fcomp
hlt
rol
std
sbb
jo
ret
rcl
pop
sub
popa
cdq
cdq
dec
xor
test
dec
pushf
js
xor
mov
cmp
xrelease
push
xchg
movs
lds
test
inc
mov
xchg
call
iret
and
push
outs
outs
xchg
xchg
shr
mov
test
xor
jne
sub
in
lds
mov
mov
fmul
adc
fidivr
nop
(bad)
fcom
inc
or
xchg
in
pop
out
arpl
dec
sbb
mov
dec
push
ins
fadd
icebp
in
cmps
pop
in
sbb
imul
(bad)
push
jb
cmp
or
enter
aam
aaa
xor
out
movs
(bad)
jae
mov
fwait
jge
leave
pop
ret
jns
dec
pop
mov
mov
inc
push
and
mov
mov
pop
leave
mov
push
(bad)
jl
fild
jle
add
and
cmp
and
and
push
jecxz
cdq
push
cwde
or
push
sti
pusha
and
push
pop
aam
adc
xchg
mov
pop
cmp
mov
mov
hlt
dec
fldenv
sbb
mov
out
mov
mov
fisttp
cdq
loopne
gs
jns
xor
pushf
sahf
shr
cli
ins
(bad)
ins
movs
test
cwde
xchg
jno
dec
cmp
xchg
retf
popf
sbb
leave
(bad)
jbe
xchg
jecxz
xor
repnz
aas
and
mov
and
sub
retf
push
add
cdq
rcl
(bad)
cmps
fidiv
pop
jecxz
mov
pop
inc
clc
mov
repnz
ja
stc
popa
jbe
les
mov
mov
imul
dec
jae
pop
pop
cli
into
xchg
arpl
(bad)
sti
add
pop
ja
or
shr
jmp
pushf
or
mov
call
loope
inc
mov
movs
outs
dec
mov
mov
adc
add
test
lods
nop
clc
mov
adc
xor
xchg
pop
jmp
xchg
mov
jl
out
aas
(bad)
inc
xchg
test
orps
push
pop
loopne
test
ins
mov
jge
jecxz
push
inc
lds
in
xor
xchg
jmp
popf
(bad)
sbb
pop
cmps
dec
bound
jmp
imul
movs
movs
outs
sub
aaa
inc
fimul
dec
push
pop
push
inc
push
pop
in
xchg
mov
or
pop
sar
mov
adc
stc
push
lock
jne
or
pushf
stos
pushf
mov
push
or
push
mov
rcl
movs
sub
or
icebp
ret
and
lea
pop
sti
dec
lods
jmp
pop
fs
cmp
cmps
dec
ret
xchg
lods
loopne
mov
daa
lock
and
sbb
add
lds
(bad)
cmp
inc
sbb
shr
jmp
xchg
add
out
pusha
jns
test
pop
stc
add
sbb
lock
pushf
(bad)
and
pop
jge
in
imul
inc
sub
jnp
fsubr
xor
pop
xor
mov
in
dec
not
or
jmp
mov
xor
sbb
inc
push
nop
out
xchg
stos
mov
ins
repnz
push
movs
jecxz
test
pusha
gs
xchg
cmp
push
mov
add
jle
repnz
sub
iret
adc
mov
jg
mov
push
int
imul
mov
cmp
xor
and
dec
scas
mov
cmps
jl
xor
mov
repnz
adc
jmp
push
sub
call
xchg
sub
push
mov
mov
sbb
sahf
mov
jp
mov
inc
(bad)
jle
bound
movs
int3
ss
lods
out
pusha
dec
pushf
pop
fiadd
pop
and
lahf
nop
aam
sub
dec
pop
push
cmp
aaa
jbe
out
stc
bound
(bad)
pushf
mov
sar
mov
jmp
push
scas
push
div
in
dec
push
ss
jae
frstor
inc
push
or
add
clc
jnp
std
xor
jnp
sahf
int
inc
push
xlat
mov
arpl
jle
push
mov
aam
shr
xor
mov
test
jg
enter
xchg
mov
aam
sub
pop
shl
in
ret
mov
scas
xchg
retf
mov
test
push
lahf
jl
mov
sbb
in
call
cmp
daa
sahf
xchg
test
mov
ins
jnp
jmp
mov
int3
call
sbb
push
jg
ret
fs
lahf
out
jb
push
push
es
ret
adc
mov
mov
enter
loop
sub
dec
adc
mov
outs
(bad)
jmp
pop
mov
(bad)
fcom
sbb
enter
jne
imul
iret
sar
icebp
mov
push
cmp
add
scas
cwde
pop
lock
cmp
and
retf
sbb
mov
and
movs
ins
inc
aaa
xchg
test
ds
pop
add
adc
(bad)
stos
dec
movs
sub
cmp
(bad)
cld
mov
shl
inc
movs
in
fmul
rcl
push
(bad)
cmp
stos
xchg
add
shl
jns
push
ins
stc
ja
pop
inc
push
dec
arpl
cli
aad
add
mov
ror
inc
adc
icebp
adc
or
sub
lds
dec
push
add
inc
and
mov
cmps
out
cwde
aad
mov
jnp
popf
popa
in
int3
push
pop
hlt
loope
jecxz
fwait
jge
xchg
std
cmc
lods
xchg
mov
xor
adc
inc
adc
dec
sub
ret
sub
aas
fiadd
fbld
stc
out
in
popa
out
test
pop
sub
movs
out
jge
jmp
loop
ret
pop
xor
cmc
mov
imul
jne
push
sti
xrelease
sub
in
jle
mov
cmps
inc
clc
mov
(bad)
jmp
es
adc
mov
(bad)
or
inc
push
dec
ret
cdq
rol
clc
je
in
(bad)
popa
popf
mov
mov
in
lds
int3
das
mov
shl
or
lods
inc
lahf
enter
aam
adc
push
inc
push
ror
sbb
lea
push
mov
mov
nop
into
xchg
inc
and
cdq
sbb
inc
or
mov
popa
sub
pop
dec
jo
call
xor
add
cmp
test
ins
cmp
mov
pop
pop
xor
stos
xor
loop
and
and
dec
sub
and
jmp
out
sbb
test
and
loopne
arpl
(bad)
xchg
movs
pop
push
push
nop
in
cdq
pop
jmp
mov
data16
sbb
jns
cmps
mov
dec
imul
cmp
push
dec
or
(bad)
jmp
mov
fcom
or
mov
inc
mov
and
ins
jle
sbb
or
jbe
neg
jns
jmp
sbb
or
in
cs
adc
lock
add
and
dec
out
or
(bad)
retf
sti
add
cmp
push
test
cmps
nop
and
daa
mov
nop
stos
aaa
ins
cmps
test
outs
rcl
and
adc
out
loope
fbld
adc
mov
ret
mov
pop
push
cwde
lock
or
and
jo
pop
add
adc
je
bnd
sahf
mov
(bad)
sub
jmp
inc
ins
fisub
mov
mov
and
retf
pop
dec
repnz
ja
fstp
data16
fsub
pop
fsub
(bad)
sbb
or
(bad)
call
pop
mov
or
bndldx
jbe
(bad)
cdq
mov
movs
aaa
mov
inc
cld
iret
xchg
(bad)
int3
into
or
jge
push
in
adc
mov
sbb
sub
in
push
xor
je
stos
mov
fstp
imul
setbe
sbb
adc
test
fisubr
pop
dec
and
adc
add
cdq
sbb
cmc
pop
adc
loop
sar
test
mov
pop
xchg
pop
cmp
std
adc
mov
shl
(bad)
cmps
dec
jmp
sbb
sbb
mov
aaa
ins
inc
shl
inc
mov
dec
and
sbb
mov
mov
pop
dec
out
aas
int
imul
push
cmp
mov
inc
fimul
loop
retf
loopne
add
rcr
loope
lods
in
mov
addr16
mov
into
(bad)
in
xor
cwde
mov
sahf
sbb
push
cmp
and
jb
push
sbb
mov
sub
cmp
and
(bad)
std
cwde
out
imul
jecxz
into
xchg
push
cmp
mov
outs
or
test
outs
cmp
lds
lods
xchg
mov
mov
ficom
mov
pop
imul
xor
mov
sub
lods
pushf
(bad)
outs
jo
mov
mov
mov
xchg
sbb
leave
dec
cmps
xchg
out
lahf
out
jecxz
jmp
or
mov
mov
mov
ret
cmp
dec
nop
and
out
pop
cmp
and
cmp
scas
pushf
inc
inc
arpl
fdiv
sbb
xor
jbe
xchg
pushf
adc
push
addr16
xchg
out
lods
lock
jg
out
or
inc
sbb
scas
mov
mov
mov
pop
sahf
test
or
outs
mov
(bad)
jge
outs
jo
inc
ror
ficom
je
or
lea
mov
ins
xor
sbb
in
cld
dec
adc
mov
daa
jae
test
int
test
aam
ret
int
out
(bad)
mov
ret
cmp
dec
(bad)
jnp
test
mov
mov
jecxz
or
adc
outs
(bad)
xor
pop
xchg
inc
hlt
out
popa
pop
ja
fnsave
call
dec
cld
jno
jno
(bad)
rcl
and
lea
js
or
fsubr
and
or
and
outs
push
push
enter
retf
push
sbb
jmp
xor
dec
rcr
mov
mov
xchg
jbe
cdq
push
xchg
js
inc
inc
imul
xchg
cdq
jbe
mov
jmp
imul
xchg
xchg
or
in
jmp
or
inc
and
popf
loop
add
lods
jmp
ds
mov
rol
shr
add
cmps
fbstp
and
iret
call
and
xor
sbb
(bad)
daa
test
(bad)
jmp
mov
push
dec
stc
and
lahf
lds
sahf
ss
icebp
xor
mov
fimul
and
test
test
cmps
in
jbe
das
push
mov
sar
or
dec
or
stc
sub
test
push
xor
out
mov
sub
les
imul
adc
pop
retf
scas
call
pusha
lods
pop
cmp
jmp
mov
pusha
jb
retf
adc
lock
pop
int
call
into
repnz
and
cmp
mov
js
fsubr
xor
mov
mov
scas
jo
in
scas
(bad)
cmp
mov
or
loop
and
mov
clc
ins
scas
shr
pusha
pop
jp
movs
mov
add
dec
pop
bound
mov
mov
call
jp
scas
hlt
xor
mov
in
dec
xchg
movs
or
lods
jae
stc
or
fistp
test
xchg
cmp
pushf
push
repnz
bound
xchg
das
imul
jmp
(bad)
stc
mov
fwait
or
sub
cmp
push
xchg
mov
or
and
adc
jne
outs
mov
call
scas
push
and
call
mov
pop
enter
or
jp
ins
loop
jno
xor
or
loopne
iret
das
or
adc
and
js
arpl
xlat
pop
mov
ss
push
and
or
pop
xlat
push
or
es
cmc
neg
fs
outs
jp
sti
xor
add
sub
mov
and
repnz
fsubr
(bad)
dec
mov
xchg
mov
in
(bad)
fwait
ror
mov
mov
jns
ds
mov
shr
ins
in
inc
sbb
nop
push
jmp
inc
fild
in
in
inc
pop
out
adc
in
jnp
fldcw
pop
sub
adc
sbb
pop
(bad)
xchg
int
pop
cdq
xchg
dec
push
mov
shl
hlt
fmul
daa
aaa
sar
push
cmp
or
mov
sahf
inc
out
dec
cmp
mov
mov
jle
out
sbb
js
test
push
fadd
mov
push
inc
aad
pushf
xchg
rol
aaa
mul
jbe
cmp
jecxz
mov
lock
stos
push
fsubr
dec
cmp
test
push
mov
push
sbb
sti
daa
inc
and
and
xchg
cdq
mov
scas
in
cmps
push
scas
fwait
cmc
bound
stc
jl
retf
and
push
xchg
mov
cmp
jae
fs
and
inc
mov
(bad)
mov
jmp
test
xchg
daa
mov
push
inc
loope
iret
js
xchg
mov
inc
es
adc
data16
inc
es
mov
pop
movs
shl
xchg
cwde
inc
movs
and
and
or
mov
int3
outs
fs
mov
aas
add
mov
into
popf
ins
pop
(bad)
arpl
dec
pop
sar
sbb
scas
es
ds
test
mov
mov
cld
cli
repz
mov
xor
(bad)
and
jno
mov
test
mov
ss
aam
aaa
and
push
loop
in
push
rcl
fs
mov
cld
pop
mov
call
out
(bad)
(bad)
into
mov
mov
jno
ds
jnp
nop
add
jno
lahf
imul
cmps
push
lock
fld
mov
sbb
add
inc
sbb
push
add
retf
test
out
repz
jle
push
pop
sub
inc
add
aam
dec
sbb
movs
xchg
or
pop
lods
js
pop
cmc
out
or
and
dec
cs
loopne
add
sbb
test
and
into
xchg
imul
sbb
mov
aaa
cld
cmp
inc
jmp
or
imul
inc
sbb
sub
popf
jbe
imul
push
repnz
push
cmp
mov
ins
sub
sub
call
jbe
cmp
cmps
cmp
adc
xchg
inc
lods
push
aas
daa
push
arpl
mov
out
mov
pop
fdiv
shr
mov
into
push
ror
(bad)
cmp
repz
xor
int3
push
sbb
jl
mov
xchg
adc
loopne
inc
sbb
dec
imul
or
inc
movs
pop
inc
ds
push
dec
mov
add
lahf
sub
pop
mov
sub
in
imul
pop
popf
aad
aaa
ficomp
neg
cld
inc
jo
aaa
stc
sub
dec
and
jnp
jno
xchg
aad
push
mov
scas
jmp
xlat
mov
hlt
clc
push
cwde
bound
inc
popa
stos
(bad)
lds
test
call
inc
test
lods
push
xchg
aaa
mov
jb
in
mov
sbb
and
and
mov
cmc
lods
push
push
mov
add
push
sti
pop
in
inc
stc
es
jmp
outs
daa
stc
fptan
adc
pusha
jae
xchg
stos
push
lock
(bad)
(bad)
push
fwait
xor
retf
add
rol
fimul
add
adc
ja
ins
sbb
sbb
test
jmpw
cmp
shr
outs
js
xlat
sbb
or
aaa
jmp
fmul
in
cmp
repz
or
icebp
mov
mov
enter
test
movs
xor
xchg
sub
xor
pop
dec
popf
mov
cmps
stos
mov
lods
(bad)
aas
cdq
lahf
push
std
(bad)
pop
xchg
or
adc
ja
call
cs
push
arpl
jbe
pop
mov
dec
jbe
adc
jb
or
loop
into
ret
adc
add
div
pop
movs
jae
xchg
out
cwde
xchg
cmp
pop
sbb
xchg
lods
pop
jg
sub
or
mov
(bad)
repz
pop
mov
xchg
in
fmul
outs
int3
push
ret
sub
add
push
stc
mov
cld
or
stc
push
xchg
mov
stos
dec
(bad)
lods
into
mov
hlt
xchg
cmp
retf
jmp
inc
add
fisubr
pushf
js
ds
js
addr16
mov
sbb
mov
inc
gs
xor
dec
into
add
sub
and
ja
dec
out
cmp
sbb
and
jnp
fiadd
and
cmp
xchg
and
fidiv
arpl
push
call
addr16
cmc
dec
stos
sbb
and
arpl
xchg
or
bound
jns
jno
push
jb
cmp
push
fnstsw
push
call
push
dec
popf
outs
fs
scas
sbb
xchg
nop
pop
xchg
jns
and
pop
jns
int3
add
push
xchg
adc
mov
dec
mov
das
push
xchg
lahf
mov
lahf
pushf
inc
in
je
pushf
jge
mov
out
or
enter
mov
cmp
call
add
inc
sar
and
ficom
pop
cwde
leave
inc
inc
and
cdq
pushf
mov
sub
mov
fcomi
jp
inc
fdiv
(bad)
mov
rcr
mov
rol
dec
mov
xchg
cmp
adc
cli
jne
retf
data16
xor
ret
leave
sbb
push
mov
std
and
cli
ret
adc
cdq
rcr
mov
push
sar
aad
xor
rcr
pop
fwait
ss
push
add
sub
repnz
mov
scas
jle
sub
lds
scas
push
mov
dec
mov
stos
int3
jne
xchg
div
adc
push
mov
fdivr
pop
xchg
aad
adc
std
pop
add
repnz
es
mov
and
cmp
in
add
dec
cs
add
mov
gs
dec
xor
push
fucomp
inc
sbb
lods
mov
sub
mov
xchg
mov
pop
(bad)
xchg
jp
cmps
xor
fisttp
scas
adc
or
cmp
aad
sub
xchg
dec
push
xchg
cmp
popa
imul
push
sbb
das
mov
loope
mov
aaa
jle
cmc
jg
pop
scas
push
mov
cdq
das
sub
jp
(bad)
mov
mov
sub
rcr
inc
imul
add
aas
adc
cld
ret
or
mov
mov
loop
xchg
in
xchg
jae
cmp
fs
xchg
and
inc
sahf
bound
cmp
cmp
jne
jl
enter
mov
xor
or
in
mov
ret
push
mov
or
int
imul
imul
sbb
movs
xchg
xchg
jp
jl
xor
dec
arpl
test
sahf
mov
sub
in
xchg
(bad)
mov
push
jbe
or
pop
in
test
jo
hlt
or
mov
neg
lods
test
cli
ds
jecxz
dec
ror
ret
jge
into
ja
(bad)
loop
out
or
das
mov
rol
(bad)
loope
push
aas
xchg
jns
ficom
inc
mov
dec
cmps
nop
or
xabort
xor
out
test
repnz
mov
mov
out
xor
cmp
or
jnp
sar
fwait
xchg
push
xchg
pop
pop
inc
je
pop
cld
mov
shr
cmp
std
popa
jl
enter
int
repnz
in
inc
movzx
add
sbb
or
jnp
push
jmp
repz
or
les
icebp
mov
push
adc
xchg
mov
and
add
cmps
shr
pop
jmp
pusha
sub
or
inc
and
int3
adc
mov
frstor
push
jmp
cmp
add
lds
bound
out
outs
jo
fcom
and
xor
ja
clc
les
(bad)
jb
js
fwait
lock
jg
pop
sub
fwait
jno
cmp
in
push
pop
sbb
mov
sbb
hlt
mov
and
push
mov
icebp
into
jae
xchg
test
fdiv
ret
fnstcw
or
or
push
sub
add
loopne
mov
lods
cwde
aad
xchg
test
add
test
fidiv
xchg
pop
mov
fwait
inc
hlt
jle
aad
add
ins
mov
inc
inc
xchg
mov
cli
bound
enter
popa
fisttp
mov
push
mov
pop
test
out
cld
leave
cmc
xor
xchg
jp
sub
add
icebp
popa
push
fiadd
icebp
inc
adc
and
and
shl
mov
sbb
nop
jle
mov
out
jmp
clc
sub
mov
pop
adc
lea
pop
pop
dec
adc
inc
pop
push
test
mov
(bad)
adc
lods
fwait
inc
inc
sbb
ds
inc
cmp
push
jns
pop
jb
xchg
aaa
pop
add
dec
sahf
(bad)
aad
mov
sub
mov
cmp
dec
jbe
xor
jle
adc
sub
icebp
clc
cmp
test
jecxz
dec
xor
cmp
outs
ins
push
push
sub
clc
jo
mov
inc
mov
iret
stos
jmp
arpl
into
js
das
out
and
data16
scas
fstp
mov
add
test
jne
xchg
push
pop
lods
int
out
mov
push
gs
in
xor
clc
inc
das
xchg
mov
cld
xchg
daa
daa
ret
cmp
lods
icebp
add
pop
nop
mov
rcl
sbb
loop
imul
les
xchg
bound
cmp
movs
fst
xor
out
bound
mov
pop
adc
mov
add
pop
inc
leave
adc
mov
xchg
movs
outs
das
inc
dec
push
nop
repz
mov
xchg
mov
ret
aas
stc
inc
arpl
and
jb
pusha
shl
cld
js
xor
aaa
call
test
xor
addr16
aam
out
rcr
mov
add
inc
ror
push
fimul
mov
lock
inc
fisub
pop
icebp
add
lock
test
mov
unpcklps
imul
xor
add
repnz
sbb
push
xchg
test
adc
push
outs
sub
or
neg
and
sub
inc
shr
lds
loope
loop
xchg
fisubr
sbb
outs
sbb
and
dec
leave
les
retf
rol
jnp
iret
fmul
pop
cmps
fidiv
mov
js
icebp
or
mov
in
test
xchg
mov
sbb
jmp
(bad)
jle
es
fwait
dec
js
loop
sub
sbb
jge
sti
loopne
xchg
(bad)
fdiv
cmps
or
pop
daa
sub
(bad)
and
xchg
arpl
mov
mov
int3
mov
jo
add
out
add
or
xor
out
jmp
out
add
mov
movs
scas
mov
rcl
or
stc
push
ror
sub
mov
hlt
fisubr
pop
and
mul
aaa
xchg
xor
fs
xchg
out
mov
(bad)
xchg
push
sub
lods
iret
dec
cmp
pop
and
pop
loop
loopne
adc
mov
cs
(bad)
std
lea
jne
xchg
inc
inc
outs
ret
pop
ret
xchg
mov
mov
fdivr
sar
ja
xor
cmc
stos
stc
cmp
jno
mov
repnz
(bad)
sbb
fcmovnbe
stc
mov
into
adc
sahf
icebp
jo
dec
pop
pop
push
ds
arpl
mov
cld
pop
fcomp
fistp
cmp
cmc
and
add
inc
mov
cmp
add
xor
movs
sti
push
mov
ret
dec
pop
les
mov
in
mov
int
jo
mov
xlat
stc
jne
mov
lea
je
enter
call
or
push
cli
inc
push
xchg
sub
mov
dec
jmp
ret
sbb
cdq
jmp
xor
jns
je
or
or
mov
inc
sbb
dec
ud2
(bad)
shl
test
dec
inc
(bad)
mov
sbb
not
mov
xchg
xchg
sub
lea
sub
in
sub
cmp
pop
or
out
jo
in
mov
aam
addr16
mov
push
pop
push
cmp
ret
jns
mov
cwde
jl
daa
xchg
imul
ror
and
jb
enter
in
inc
stc
ja
fist
fist
pop
es
mov
es
addr16
jbe
push
loopne
push
and
jmp
xor
mov
push
or
add
in
clc
scas
fist
or
(bad)
dec
pop
adc
popa
out
lea
or
xchg
cdq
sahf
and
stos
mov
xor
xchg
xor
pusha
pop
pop
jmp
push
inc
xchg
jecxz
imul
mov
mov
call
fs
mov
cli
int3
sub
lock
mov
or
and
adc
rol
dec
or
pushf
dec
sar
icebp
cwde
test
pushf
jg
lea
movs
leave
dec
enter
jb
lods
and
and
jle
pop
(bad)
rcl
xor
jmp
jecxz
and
mov
leave
inc
xor
ja
or
retf
repnz
jp
and
mov
xor
not
loop
mov
push
mov
in
js
pusha
out
adc
fadd
adc
ins
test
repz
outs
stos
cmps
mov
inc
popa
sub
(bad)
and
xchg
mov
(bad)
xor
movs
xor
es
inc
neg
xchg
cs
ins
(bad)
push
loope
mov
add
mov
cmp
dec
gs
add
or
sbb
ret
imul
cmps
aad
xor
dec
pop
dec
(bad)
ret
dec
mov
stc
sar
loop
repnz
psubsw
das
jle
xor
ror
out
jp
gs
shl
sub
jno
cmp
jl
adc
jo
pop
mov
jl
imul
xor
das
(bad)
sbb
push
inc
push
mov
div
movs
jae
jo
jae
dec
retf
xlat
out
ret
fwait
aaa
daa
fs
sbb
inc
ins
xor
pop
into
retf
add
pop
outs
fstp
inc
arpl
jge
addr16
mov
push
xor
jae
dec
nop
inc
movs
aam
jmp
sub
xor
mov
sub
dec
pop
dec
jge
pushf
sub
mov
pop
stc
outs
sbb
hlt
mov
mov
mov
mov
inc
shl
xchg
sbb
scas
sti
pusha
movs
call
mov
sub
push
or
mov
or
in
xchg
cmp
cmc
inc
or
xlat
call
sub
cmp
and
cwde
adc
movs
and
pop
jp
lea
xor
sahf
push
(bad)
ins
push
add
jno
inc
push
xor
ins
dec
adc
out
cld
xchg
sbb
pop
aas
xchg
enter
scas
sbb
lock
jae
rcr
sar
pop
in
in
mov
clc
popf
mov
pop
xchg
(bad)
lods
sbb
mov
inc
out
pop
xchg
shl
push
or
shl
mov
call
pop
mov
jb
mov
data16
sbb
data16
push
cs
ins
mov
bound
in
cmp
aad
imul
bound
dec
cld
dec
clc
pop
aaa
add
popf
mov
pop
cli
(bad)
pusha
mov
and
push
movs
push
ret
push
fs
(bad)
push
je
xor
cs
leave
popf
add
aas
xchg
movs
(bad)
jge
and
dec
cmp
sub
add
rcr
mov
aam
jmp
clc
sbb
jo
cld
dec
ins
xchg
push
movs
mov
inc
mov
repnz
inc
les
outs
sbb
unpckhps
fs
cmp
scas
(bad)
xor
push
add
pop
mov
mov
and
and
mov
xchg
repz
dec
jne
mov
adc
outs
xchg
pop
xchg
fmul
fcomp
push
jae
loopne
sub
aaa
sbb
imul
xchg
cmp
in
jge
push
mov
add
inc
lock
xor
jle
imul
mov
loop
push
cmp
push
or
inc
xor
dec
in
test
ror
xor
jmp
lahf
xchg
or
daa
das
inc
jbe
repnz
mov
sbb
not
mov
test
sub
inc
xor
jae
xor
adc
fwait
pop
pushf
push
jecxz
xchg
jmp
iret
hlt
cmp
and
pop
(bad)
sbb
arpl
push
jl
test
inc
xchg
pusha
push
test
xchg
cwde
jnp
hlt
sub
std
shl
mov
or
push
bnd
les
cmp
sub
ds
cli
pop
(bad)
mov
adc
inc
sub
aaa
(bad)
mov
cmc
lahf
mov
add
jns
mov
ss
clc
jne
movs
cmp
jno
sbb
cmps
out
mov
sbb
sbb
cdq
pop
aam
outs
and
stc
xchg
aad
lods
jb
or
dec
push
popa
jmp
shl
stc
lea
scas
cld
mov
movs
cwde
xchg
arpl
pop
clc
and
inc
sbb
in
sar
ja
dec
lock
pop
dec
stc
mov
test
in
push
push
sar
jae
mov
inc
ins
mov
pop
mov
push
lock
lock
(bad)
rcl
jmp
fcom
cld
shl
out
pop
es
je
xchg
popa
jg
mov
popf
xor
sti
cmc
daa
pushf
(bad)
push
ins
inc
sbb
stc
mov
in
jns
fisttp
imul
pop
call
pop
inc
jp
xor
gs
je
jo
outs
ins
rcr
pop
retf
adc
arpl
aaa
or
pop
mov
dec
ins
loope
pop
jg
mov
cld
aam
call
sub
int3
shr
add
cmovno
push
div
xchg
jno
mov
ins
cmp
lea
xchg
pop
call
dec
inc
add
xor
cmp
dec
sbb
xchg
mov
lea
sti
call
ficomp
jl
fmul
inc
fdiv
xlat
movs
ins
xchg
or
call
rcr
push
outs
xchg
aam
mul
jmp
shr
sti
lods
xchg
mov
popa
jp
not
mov
dec
jae
cld
adc
or
add
cmps
pop
inc
add
push
jmp
xchg
ins
mov
push
adc
dec
aam
inc
dec
imul
and
retf
rol
(bad)
scas
je
xchg
pop
push
in
out
outs
fsubr
inc
sbb
mov
add
add
sbb
fwait
pushf
or
xchg
inc
in
ss
add
xchg
xlat
push
les
in
imul
jge
jo
pop
xchg
stos
cmp
mov
mov
jmp
aaa
pop
rcl
icebp
push
test
stos
jecxz
ja
iret
lahf
scas
sbb
pop
daa
mov
adc
adc
xchg
cwde
mov
mov
vaddpd
xor
fist
xor
dec
daa
adc
mov
and
es
cmp
gs
sahf
push
fistp
push
scas
cs
out
dec
sbb
int
nop
popf
jecxz
sbb
mov
adc
jge
jbe
outs
ficomp
dec
shl
mov
push
inc
retf
jmp
lea
jns
rcl
adc
cmp
hlt
ins
jl
ins
idiv
jecxz
or
push
xchg
ret
or
sysret
xlat
lea
movs
mov
cwde
test
int3
inc
adc
mov
inc
pop
pop
cmp
sub
xchg
ja
imul
xor
dec
mov
add
cdq
sahf
fldenv
movs
gs
jp
inc
mov
mul
lds
inc
cmp
push
pop
shl
enter
mov
ds
add
mov
xor
leave
cli
or
jo
jae
mov
(bad)
ror
and
test
int
(bad)
xchg
fisubr
add
sub
mov
xchg
xor
add
mov
cmp
lea
movs
out
add
mov
out
push
jns
daa
jae
sbb
imul
and
ds
xchg
nop
jae
sub
pop
test
mov
clc
xchg
mov
data16
adc
test
stc
test
and
pop
mov
test
hlt
pop
arpl
jo
jg
and
clc
movs
xchg
cs
fild
ss
adc
das
mov
data16
mov
std
push
cmc
xlat
cmp
loope
leave
in
adc
nop
ret
shl
mov
xor
leave
xor
cli
dec
stos
out
iret
imul
push
push
sar
mov
jb
call
mov
scas
into
es
add
iret
in
xor
push
mov
call
movs
cli
imul
retf
scas
push
sar
std
(bad)
movs
sub
push
push
out
or
push
(bad)
mov
mov
loopne
dec
cmps
xor
lock
jge
cmp
(bad)
aas
(bad)
or
mov
mov
out
sahf
shl
inc
pop
pop
push
hlt
dec
pop
mov
pop
out
mov
xor
or
das
push
sbb
rcl
fcomip
sub
out
pop
rcl
mov
lahf
daa
push
dec
xor
pop
fs
faddp
int
addr16
inc
push
cdq
mov
sbb
leave
push
pop
aam
call
loop
cmp
or
(bad)
pop
xor
cs
imul
sub
pop
test
jmp
dec
jmp
cmp
js
jmp
inc
xchg
jp
nop
push
push
jo
ror
xchg
div
imul
xchg
pop
inc
aaa
pop
shl
movs
dec
xchg
push
cmps
icebp
fmul
int
pop
mov
sbb
imul
jmp
icebp
nop
pop
sbb
retf
aam
pcmpeqd
xor
cmp
rcl
cli
imul
inc
pop
fwait
inc
fwait
stos
and
rcl
jae
mov
mov
imul
jns
xor
or
jl
mov
jae
dec
pop
cmp
push
call
add
daa
xor
pop
push
mov
test
adc
sbb
fmul
cmp
js
retf
daa
outs
and
fsubp
in
mov
(bad)
in
push
mov
std
enter
fst
outs
div
(bad)
hlt
push
movs
pop
clc
jbe
sti
pop
ret
leave
mov
(bad)
jg
push
xor
mov
cdq
xor
jno
pop
rcl
jl
retf
fistp
out
cmps
sub
mov
push
jl
sbb
sub
lock
ret
cmps
xor
adc
mov
and
aad
out
test
scas
fld
xlat
out
xor
test
imul
mov
popf
gs
bound
cld
pop
dec
ret
cdq
sub
test
jmp
mov
es
cmp
ins
jmp
jl
aas
jp
dec
pop
popf
jle
fst
add
cld
pop
mov
cwde
push
inc
inc
call
ds
jnp
jg
sahf
adc
shr
in
pop
push
mov
pop
fild
mov
jns
push
in
hlt
or
repz
mov
mov
call
in
jg
cmp
cmp
add
dec
(bad)
call
or
popa
rcl
xchg
mov
in
xor
fidivr
sub
push
das
pop
mov
jb
mov
repnz
push
aad
adc
pop
fsubr
mov
mov
inc
inc
imul
sbb
cmp
popa
ret
mov
jecxz
iret
cmp
gs
add
sbb
push
data16
add
in
pop
dec
ror
xchg
stos
xor
fdivr
loope
adc
xlat
pop
jb
out
jmp
pop
retf
dec
inc
into
int3
les
mov
mov
std
mov
add
sbb
stos
popa
aaa
cli
cmp
pop
push
pop
iret
fld
jns
add
mov
sbb
xchg
mov
ins
lahf
lahf
outs
adc
sti
jmp
pop
cmp
mov
and
jb
call
cmp
sub
mov
enter
mov
ins
dec
cmps
ror
and
lods
mov
inc
test
jae
das
fnstcw
pop
xor
add
popa
repnz
push
lds
shl
test
call
adc
repnz
xchg
xchg
std
inc
adc
pop
scas
sti
push
jmp
out
shl
lea
stos
scas
outs
ins
jecxz
adc
pop
aam
inc
movs
or
xor
xchg
clc
jno
sbb
or
fisubr
pop
push
sub
jnp
sahf
in
fwait
xor
xchg
pop
mov
add
jb
cli
mov
int
sub
popa
push
fwait
iret
adc
xchg
aas
mov
xlat
xchg
sbb
inc
popf
mov
push
cmps
mov
lock
xor
cdq
mov
shl
or
sbb
enter
les
sub
or
cdq
mov
cmps
push
rcl
ins
in
ror
outs
jbe
and
(bad)
mov
test
mov
mov
dec
addr16
test
sahf
and
(bad)
jmp
fiadd
mov
mov
sub
mov
loopne
fistp
sbb
jbe
(bad)
xor
arpl
sbb
in
std
iret
in
ror
pop
cmp
in
dec
sti
cmp
or
pop
pop
mov
ins
push
in
mov
pushf
icebp
cs
pop
push
jo
dec
and
pop
push
mov
mov
fmul
xchg
(bad)
fmul
mov
add
xor
je
mov
push
xor
adc
call
sub
sbb
adc
aad
inc
and
call
je
xor
dec
or
loope
sub
adc
mov
jbe
sbb
pop
fs
lea
cmps
imul
mov
or
out
js
mul
loopne
loope
mov
paddd
aaa
or
inc
dec
loop
push
and
and
mov
cmp
dec
scas
xor
jmp
adc
je
and
call
(bad)
dec
nop
xor
in
idiv
cmps
and
and
cmp
test
sti
mov
push
cld
xor
loopne
fdiv
adc
(bad)
cmp
push
and
adc
rcr
and
std
jae
int
ja
inc
xchg
mov
sbb
xchg
mov
add
dec
pop
hlt
ret
jbe
loope
psubw
stos
mov
outs
push
pop
fisttp
lea
es
xor
xor
add
or
ja
adc
stos
les
inc
jge
pop
adc
jl
ins
out
xchg
mov
fimul
mov
pop
test
inc
dec
xchg
push
imul
jecxz
add
stos
rol
(bad)
shl
data16
popa
cmp
and
sub
sbb
js
xor
cmp
push
jmp
push
fbstp
pop
js
xor
stc
cmp
inc
add
add
adc
pushf
sbb
mov
nop
sbb
xchg
dec
and
push
lahf
mov
mov
push
dec
daa
sbb
jl
xlat
adc
cmps
push
lods
push
cmp
in
jl
add
out
dec
shr
mov
outs
nop
(bad)
movs
xrelease
jnp
clc
(bad)
mul
mov
in
ds
repz
shr
call
daa
xchg
or
mov
pop
jle
lahf
add
or
(bad)
out
inc
jne
int3
push
mov
adc
clc
pop
cmp
idiv
arpl
stos
dec
addr16
sub
(bad)
xchg
es
or
xchg
imul
push
hlt
inc
scas
mov
jmp
neg
and
ins
lahf
dec
pusha
loope
sar
and
in
jbe
adc
adc
outs
test
les
push
xchg
jecxz
jl
fst
jmp
xor
and
inc
jle
push
es
test
jae
test
aaa
movs
inc
in
xor
and
pop
push
cmps
cmp
cdq
ins
leave
and
in
dec
pusha
call
push
fld
mov
les
mov
stc
xlat
sub
xchg
sar
xor
dec
adc
in
bound
(bad)
into
retf
fcom
jae
pusha
in
cmp
mov
xor
jecxz
or
ins
inc
(bad)
rcr
es
inc
lea
pusha
(bad)
test
rcr
btc
cs
shl
sub
push
add
pop
imul
leave
and
ja
imul
cs
(bad)
mov
add
xlat
aas
mov
test
dec
inc
cs
out
or
dec
fiadd
cmps
lds
push
cmps
loop
(bad)
outs
mov
loopne
js
lock
lahf
pop
aas
xor
cmp
mov
pop
sub
mov
dec
xchg
sbb
add
add
(bad)
cmp
lds
sub
lock
xor
(bad)
push
add
fs
cmp
inc
jmp
bound
ds
xor
mov
xor
lds
push
fdiv
mov
push
and
out
enter
push
sidtd
jmp
mov
xchg
(bad)
aad
jo
int3
push
lds
xchg
std
push
pop
fld
adc
sar
pop
dec
dec
pop
or
pop
pop
das
xlat
cmp
fld
mov
(bad)
sbb
add
shl
ins
pop
fdiv
sub
ins
stos
stos
mov
sbb
xchg
in
cld
pushf
scas
cli
stos
test
cwde
mov
loop
cmp
test
daa
mov
sub
leave
pop
xor
test
js
pushf
fdiv
loope
dec
test
lahf
movs
inc
xchg
or
and
mov
or
leave
mov
in
mov
repnz
popf
cmp
xor
or
in
mov
add
cmp
movs
scas
das
es
cmc
call
or
push
in
scas
std
(bad)
test
cmp
cmp
push
pop
push
bound
in
pushf
shl
xchg
pop
aam
cmp
xor
lock
popa
shl
sub
dec
cdq
sbb
scas
test
jae
hlt
movs
cmps
cmp
or
pop
pop
or
pusha
popa
fdivr
jmp
pushf
adc
cdq
jbe
jle
xor
push
mov
(bad)
jp
js
ret
pop
repz
cld
out
inc
scas
push
ins
dec
pop
addr16
sub
xchg
jb
das
jne
retf
ret
cmp
std
sar
iret
hlt
in
cld
test
cld
xor
bound
sahf
pushf
int3
mov
push
xchg
loope
addr16
lahf
int3
sub
movs
xor
inc
jno
push
in
cdq
jmp
data16
sub
mov
cmc
sbb
call
mov
lods
lods
cs
mov
push
xor
xor
pushf
les
(bad)
out
call
add
xor
push
stos
movs
mov
mov
shl
mov
call
es
push
pop
sahf
jg
mov
aad
jo
aad
into
sub
or
or
stos
cmp
jp
test
and
in
xlat
mov
test
or
cmps
mov
mov
sbb
or
test
pushf
sbb
cmc
lahf
loopne
std
pop
(bad)
ffreep
stos
loop
dec
loopne
dec
pop
ds
mov
fadd
fstp
sbb
sbb
xor
int
das
push
sub
or
adc
mov
jmp
xlat
add
adc
call
mov
push
adc
add
inc
push
or
pusha
les
loope
in
lods
dec
in
xor
call
sbb
imul
cmps
and
push
out
xchg
xor
call
cmc
push
mov
repz
or
gs
mov
pop
jnp
jl
push
mov
lods
jae
push
fldcw
cmc
mov
mov
add
ret
jmp
cmps
pop
cmp
mov
xchg
nop
bnd
xchg
movs
in
sub
mov
cwde
cs
xor
je
(bad)
push
mov
repz
mov
jne
push
movs
push
cmp
in
lods
aas
and
stos
cmp
ror
aam
sbb
adc
loop
pushaw
outs
push
daa
addr16
jmp
mov
sub
push
sbb
dec
loop
(bad)
ficom
lahf
xchg
mov
cmp
and
or
lods
movs
or
fld
outs
pop
out
repnz
fs
hlt
xor
ror
ret
xor
mov
pop
pop
mov
lahf
mov
sub
cdq
sub
sub
sbb
mov
cmc
stos
push
aad
retf
div
inc
sbb
inc
cmp
mov
xchg
mov
sbb
cmp
sbb
or
push
inc
xor
popa
xchg
xor
jg
xor
mov
inc
mov
xor
cdq
addr16
sub
sbb
lock
cmp
cmp
jbe
cmp
loop
jge
xor
mov
push
pop
xchg
lahf
mov
adc
push
add
loop
xor
pop
loopne
cmps
out
or
les
dec
or
jecxz
or
jae
aam
sbb
lea
les
call
js
shl
mov
pop
or
pop
lahf
pushf
jo
movs
xlat
adc
sbb
push
jmp
ss
js
xlat
push
jae
sti
fnstsw
repz
cmp
push
imul
cmp
mov
push
add
cmp
or
(bad)
retf
(bad)
cmp
mov
mov
aas
int
pop
fadd
jmp
mov
add
shl
and
cmp
pop
repz
jo
adc
ja
je
mov
and
adc
sub
loope
movs
mov
nop
out
je
imul
jmp
sub
(bad)
pop
adc
popa
mov
dec
or
neg
pop
cmp
retf
dec
imul
pushf
xor
loop
idiv
adc
and
sub
test
enter
pop
and
daa
rcr
or
out
in
push
add
adc
push
sbb
mov
aas
(bad)
xor
cs
into
mov
in
(bad)
fs
out
jns
and
cmp
mov
test
push
pop
aas
jne
jl
inc
adc
lahf
mov
pop
retf
(bad)
mov
push
ins
icebp
mov
popf
jb
add
rol
out
out
enter
jl
popa
inc
or
stos
sbb
das
or
fist
push
jg
fcom
gs
adc
lods
leave
mov
sub
or
les
add
mov
popa
les
jns
sub
dec
loope
sub
cli
add
jg
ror
pop
push
pop
sub
inc
mov
adc
stc
adc
popa
into
mov
sbb
inc
daa
adc
xchg
loope
fstp
cwde
xor
and
sahf
adc
cmp
xchg
jg
or
rcr
into
movs
mov
jmp
xchg
sub
movs
(bad)
and
mov
sahf
dec
add
mov
and
xchg
(bad)
pop
enter
jns
xchg
hlt
das
fimul
and
fdivp
jg
add
dec
mov
inc
call
xor
xchg
clc
(bad)
jo
js
imul
xor
add
sahf
repnz
jne
pop
mov
adc
or
jmp
cld
cdq
movs
mul
cwde
aas
imul
pop
retf
fadd
adc
or
and
in
sub
xchg
push
fmul
rol
mov
rcr
(bad)
(bad)
mov
xor
jp
imul
fcom
mov
xchg
ss
pop
and
dec
pusha
or
or
pop
call
xchg
xchg
jecxz
inc
retf
xor
call
aaa
inc
mov
das
sub
fld
ficomp
jbe
repz
fsubr
loopne
push
stos
and
push
ins
imul
popf
pop
popf
popa
rol
sbb
mov
or
shl
lea
push
pop
les
cmp
pusha
sub
mov
dec
adc
lods
mov
mov
les
icebp
dec
xor
in
or
call
out
pop
xor
aad
jp
arpl
sbb
addr16
js
mov
mov
mov
dec
loope
or
pusha
mov
jl
fild
aas
popa
add
pop
xchg
shl
jb
ss
inc
inc
test
lahf
cmps
push
retf
xchg
daa
xchg
push
pop
dec
mov
int3
aam
inc
mul
jmp
pushf
sub
scas
mov
je
retw
scas
mov
sub
adc
adc
loop
cli
retf
mov
outs
mov
lahf
add
xchg
sahf
jmp
sub
jp
push
push
add
int3
push
test
cdq
jmp
xchg
pop
or
and
mov
(bad)
out
adc
clc
mov
div
dec
cmp
sub
out
xor
push
mov
xor
sub
jmp
inc
pop
int
mov
ins
popf
popa
or
ja
cmp
neg
cwde
xchg
push
mov
push
aaa
dec
les
cdq
jo
adc
cmp
or
cmps
push
out
adc
cmp
icebp
cmp
push
push
fdivr
pop
mov
add
jecxz
add
retf
add
cmp
clc
in
mov
das
scas
inc
push
pop
loopne
push
xor
push
cdq
ret
or
xlat
push
push
inc
jmp
(bad)
adc
cs
mov
jne
jo
jp
mov
dec
ins
pop
or
sti
and
jge
xchg
pop
sbb
(bad)
lods
(bad)
push
push
jge
xor
cld
dec
xor
pop
mov
and
xchg
fstp
retf
in
mov
arpl
std
(bad)
sub
and
jmp
xchg
fucomip
pop
ret
into
jno
push
daa
imul
int3
shl
jo
adc
adc
pop
inc
mov
out
mov
mov
test
mov
mov
pusha
sub
mov
mov
cmp
inc
js
push
mov
retf
lds
fst
inc
and
repnz
pop
or
xlat
hlt
add
pop
jmp
or
push
sbb
jmp
sbb
xchg
push
mov
push
mov
movs
pop
pop
lahf
jmp
fs
stos
fadd
clc
sub
mov
push
jb
in
mov
sbb
jmp
and
cmp
je
xor
das
mov
mov
fwait
mov
addr16
int
or
js
fsubr
movs
leave
das
leave
ja
lods
cld
movs
daa
cmp
rcl
xor
dec
mov
out
mov
rcr
cdq
mul
xor
cmp
and
xchg
cmp
or
mov
fwait
and
ss
shr
xor
ss
sub
sti
xor
icebp
jnp
loopne
dec
sbb
cmp
das
into
adc
js
mov
cmp
bnd
aaa
fs
sbb
adc
or
sbb
xor
add
cld
ja
idiv
fs
shl
enter
or
bound
loope
fstp
push
pop
fiadd
daa
movs
xor
dec
in
xchg
sbb
out
ror
pop
repz
jnp
mov
jne
add
cli
add
fiadd
mov
movs
sbb
adc
(bad)
ss
enter
or
add
mov
pop
mov
jnp
xor
fwait
std
(bad)
xchg
mov
jo
xlat
aas
movs
xchg
pop
sub
lods
ins
mov
adc
iret
(bad)
pop
xor
rcr
loopne
push
je
push
popa
adc
ss
test
mov
adc
daa
pop
pop
pushf
imul
not
mov
cmp
jmp
lods
adc
fmul
cmp
jbe
sbb
leave
shr
popf
xchg
jo
lock
sub
ret
fcom
mov
in
and
jmp
and
fwait
push
xor
push
mov
add
into
inc
imul
ins
pop
(bad)
cli
add
jle
mov
mov
xor
xor
mov
dec
inc
in
or
mov
test
push
out
call
mov
xchg
xor
ja
in
or
enter
(bad)
mov
jmp
sahf
pushf
mov
and
(bad)
sub
aaa
sbb
pop
(bad)
(bad)
mov
xchg
sbb
call
sub
das
call
push
scas
shr
mov
pushf
(bad)
enter
fidiv
sub
dec
push
push
imul
cmp
inc
lods
or
ja
std
aaa
retf
cld
inc
lock
test
or
mov
xor
cmp
scas
dec
push
fiadd
cmp
frndint
lahf
leave
jecxz
aam
push
inc
inc
jp
iret
les
inc
nop
repnz
movs
and
ror
mov
pop
cmc
mov
dec
stos
or
lods
jg
mov
(bad)
movs
push
mov
or
es
inc
(bad)
lds
sbb
push
out
or
mov
jne
mov
inc
stc
and
aam
ja
neg
cmc
inc
add
jbe
arpl
adc
sub
cdq
cmp
mov
jl
mov
scas
sbb
sub
in
nop
mov
mov
jne
jns
sahf
adc
dec
pop
pop
xor
lea
lock
jmp
sub
fsub
inc
xlat
or
test
xchg
adc
(bad)
jmp
inc
dec
add
mul
shr
sbb
xchg
dec
mov
mov
dec
or
bound
fs
pop
push
popa
jmp
sub
les
(bad)
sbb
mov
lods
(bad)
cmp
ss
(bad)
adc
cli
lds
cmp
dec
retf
icebp
mov
push
add
jae
(bad)
or
mov
ret
jmp
lock
in
jg
pop
add
sub
fwait
dec
mov
addr16
pop
mov
dec
cs
mov
jne
and
in
mov
daa
push
jecxz
data16
imul
add
push
or
(bad)
int
not
(bad)
jno
mov
push
mov
iret
aad
stos
ret
jmp
out
sub
pushf
adc
div
sar
jmp
sbb
ins
or
aam
call
sub
adc
push
das
fwait
cmp
sub
dec
idiv
cmp
loopne
sbb
cmps
shr
xor
fdiv
test
movs
arpl
xlat
mov
pusha
push
cmps
js
push
and
sub
cmp
fs
jno
pop
aad
sbb
popf
div
push
out
mov
lods
xchg
mov
inc
mov
ficomp
(bad)
pop
xor
jbe
outs
jb
repnz
pop
xor
push
call
faddp
dec
mov
xor
movs
xchg
pop
stos
das
int3
sti
test
(bad)
mov
inc
mov
xchg
loopne
ret
push
jmp
adc
push
jbe
scas
sbb
into
inc
inc
mov
ds
mov
xor
aad
mov
cmp
sbb
sub
xor
add
stos
daa
pop
pop
dec
mov
xchg
lods
adc
mov
mov
cmps
bound
add
out
fcmovu
(bad)
pushw
cmp
repnz
inc
cmps
mov
cwde
(bad)
pop
dec
inc
xor
shl
fnstsw
inc
int3
jo
(bad)
push
sbb
lods
jl
cmp
mov
sbb
xchg
push
xor
pop
xlat
jmp
ins
mov
xor
es
jecxz
mov
gs
movs
mov
aaa
mov
jg
test
cmc
jmp
fidivr
mov
daa
fidiv
jb
xchg
aam
fidivr
sub
gs
add
(bad)
sbb
cs
mov
pop
loopne
or
sbb
ret
dec
adc
cs
push
mov
imul
lods
into
rcr
dec
fs
push
sub
cmp
dec
stos
add
fiadd
xchg
ins
pop
nop
stc
sbb
in
popa
xchg
popf
mov
sar
add
ins
fild
(bad)
neg
fisub
or
imul
rcr
push
das
jl
lods
ror
sbb
mov
xor
sub
call
fsubr
mov
push
xchg
sub
fild
jmp
push
xchg
push
(bad)
popa
adc
hlt
add
adc
and
stc
or
fs
xor
push
xor
jp
movd
pop
in
das
ins
xor
test
sub
movs
dec
pusha
cdq
xchg
add
push
out
lds
stc
xor
sub
jb
pop
inc
es
adc
pop
jae
xchg
shr
sti
push
xchg
fstp
popf
dec
cmp
jecxz
inc
lds
mov
jmp
mov
xor
xchg
sub
cmp
mov
dec
(bad)
jp
ja
mov
adc
fwait
out
mov
mov
loopne
mov
or
ficom
in
mov
in
xchg
fdiv
out
cmps
xor
xor
jae
ss
add
jecxz
add
(bad)
and
mov
fucomi
rol
(bad)
cld
aas
dec
cs
lock
sbb
mov
repz
mov
mov
dec
inc
(bad)
out
les
push
add
shl
xor
xor
cmps
rol
shl
mov
cmp
dec
jbe
scas
movs
sub
aad
mov
xor
xor
test
mov
inc
mov
dec
cli
push
dec
out
cmp
inc
outs
stos
jno
adc
fiadd
jp
xchg
adc
mov
or
pop
pop
(bad)
stos
(bad)
(bad)
dec
sahf
in
ds
(bad)
pop
inc
cmps
neg
dec
mov
lods
dec
adc
fstp
rcl
sub
sub
popf
or
xor
xor
test
and
mov
jg
sbb
adc
data16
mov
repnz
mov
inc
lahf
dec
xchg
jp
movs
push
cmc
fisttp
std
(bad)
jns
add
dec
popa
faddp
adc
in
lds
jno
movs
imul
lods
pop
scas
pop
xor
in
int
out
mov
pop
test
popa
xor
pop
mov
idiv
dec
pop
xchg
arpl
cmc
les
fimul
jl
push
add
imul
sub
stos
test
pushaw
std
in
iret
mov
cmp
cmp
dec
arpl
sar
sti
repz
rcr
mov
mov
dec
add
out
inc
or
or
or
lock
ja
inc
xlat
fst
mov
out
xchg
cmp
jle
ds
aas
sub
arpl
fadd
mov
jecxz
int
retf
cmp
ror
push
push
retf
shl
pop
(bad)
imul
xor
cmp
lds
outs
jmp
std
popa
scas
adc
push
call
pop
cvttps2pi
sbb
inc
call
fdivr
jb
pop
mov
lea
in
inc
inc
neg
shl
scas
push
push
shl
mov
daa
mov
fwait
scas
pop
jp
test
lods
int3
enter
mov
fild
mov
pop
lea
clc
rcl
adc
rol
gs
xchg
inc
pop
cld
dec
ss
in
ror
(bad)
mul
push
fisub
loop
adc
mov
jle
and
dec
xchg
or
gs
add
ins
mov
pop
lods
cmp
sub
ja
jp
and
neg
push
add
push
dec
jmp
icebp
scas
sub
ds
jne
call
fwait
jecxz
jge
(bad)
or
mov
inc
jle
neg
adc
push
inc
sub
outs
loopne
pop
fcom
pushw
or
fidiv
mov
movs
mov
retf
icebp
sub
sub
(bad)
fisubr
dec
gs
cdq
les
and
(bad)
xchg
int3
mov
jae
inc
std
mov
icebp
fst
xor
add
jno
popf
out
ret
adc
(bad)
and
push
add
rcl
mov
pop
or
repz
sbb
test
leave
mov
jne
cmp
bound
xchg
cmp
xor
out
call
cmc
push
outs
dec
sbb
pop
stos
xor
in
push
pop
xchg
xor
sbb
sub
test
nop
out
jg
(bad)
out
pop
imul
js
pop
pusha
mov
mov
mov
out
rcl
add
test
pusha
jnp
int3
hlt
or
push
xor
mov
mov
test
fsub
and
out
sub
inc
lods
test
push
push
(bad)
adc
or
bound
jmp
mov
cmp
ja
retf
xchg
inc
test
scas
xchg
cld
mov
mov
jle
pop
add
scas
xchg
test
push
pop
jno
inc
or
adc
ss
ret
ja
inc
or
lods
xchg
shl
cmp
inc
adc
data16
data16
dec
pop
aam
push
mov
enter
hlt
sti
test
hlt
test
mov
inc
div
stc
das
lea
jno
stos
xchg
test
cmp
out
iret
ss
push
inc
das
ins
inc
xlat
mov
sub
and
arpl
adc
sbb
add
mov
movs
xchg
fdivrp
pop
dec
or
jp
inc
or
sbb
xor
std
adc
(bad)
jmp
fimul
clc
cmc
popa
inc
cmp
mul
fisubr
add
sbb
cmp
loopne
jno
add
sub
int
test
mov
or
cs
js
dec
and
dec
pop
dec
mov
mov
adc
call
(bad)
jl
inc
adc
(bad)
movs
inc
pop
pusha
aad
push
mov
cmp
scas
push
bswap
xchg
cmp
sub
call
sbb
push
rcr
sbb
dec
xor
(bad)
out
jle
adc
adc
sbb
or
xchg
and
pop
jmp
inc
cmp
mov
shl
fwait
inc
iret
mov
and
test
popa
xchg
push
lahf
jbe
jne
and
jbe
mov
and
icebp
(bad)
mov
push
dec
pusha
(bad)
pop
or
xlat
cwde
mul
xchg
pop
pop
int3
adc
xchg
ret
(bad)
xchg
test
sub
push
and
and
repnz
dec
rcl
aam
or
test
stos
mov
mul
cmp
jb
xchg
scas
std
test
dec
jg
jge
cmp
push
dec
fistp
pop
fxch
mov
jbe
in
push
es
pop
test
cwde
out
pop
into
in
(bad)
cdq
leave
mov
adc
sub
cwde
mov
movs
push
jne
sbb
jmp
dec
xchg
push
or
es
cmp
sub
gs
sub
mov
jo
xchg
adc
loop
cdq
pop
push
mov
pop
add
sbb
sub
cmp
xor
int
cmp
in
sahf
ficomp
jle
sbb
add
xlat
sub
into
push
and
pop
xor
ret
pop
mov
loope
ret
sahf
pop
pop
stc
pusha
mov
mov
fsubp
clc
pop
fist
dec
mov
jg
pusha
pop
lock
jae
rol
sub
test
mov
sbb
and
cmp
xor
mov
(bad)
pop
fwait
sbb
imul
mov
push
(bad)
xor
(bad)
mov
ss
ss
push
and
outs
int3
mov
jl
adc
loope
vfnmsub132ps
js
push
xchg
aam
sub
repnz
push
retf
jmp
scas
mov
out
or
pushf
fldcw
sbb
aaa
ret
fdivr
push
jle
adc
lods
outs
cmp
neg
jmp
jb
(bad)
dec
push
pop
inc
sbb
xor
scas
mov
dec
pushf
imul
test
js
(bad)
(bad)
aas
mov
or
pop
push
iret
into
das
mov
iret
stos
inc
and
bound
xchg
xchg
mov
xor
rcr
or
popa
mov
fs
adc
fidiv
jbe
das
nop
xor
and
push
pushf
repnz
jecxz
push
arpl
jmp
dec
mov
mov
lods
push
ja
pop
mov
inc
test
mov
leave
pop
movs
add
imul
out
(bad)
icebp
dec
call
cmp
cmps
adc
jge
mov
sbb
inc
sbb
xchg
addr16
popa
push
bound
mov
mov
or
mov
adc
lea
ss
adc
lods
sub
outs
dec
mul
movs
xchg
fst
xor
sub
jp
pop
imul
jb
out
jne
(bad)
jp
xchg
xor
ret
mov
(bad)
test
push
(bad)
sub
(bad)
std
aad
ret
pop
clc
ds
jp
mov
and
mov
jbe
test
add
and
cmp
cmp
jmp
outs
aaa
loop
or
xchg
mov
push
sbb
hlt
fistp
inc
ret
loopne
push
sbb
mov
fiadd
pop
jne
inc
in
dec
mov
int
pushf
lods
and
push
lods
pusha
xchg
ss
jl
or
push
imul
fisttp
push
cs
test
inc
(bad)
or
hlt
xor
dec
hlt
lea
fist
loop
shl
xor
jmp
ja
mov
loope
mov
jne
outs
dec
pop
stos
xchg
cmp
add
mov
int3
test
mov
out
aas
(bad)
adc
xchg
jnp
loope
fidivr
mov
(bad)
pop
lods
jmp
sub
mov
(bad)
jns
or
xchg
movs
ror
(bad)
hlt
or
sub
adc
adc
fistp
test
pop
pop
pop
or
ror
cmp
movs
rcl
inc
enter
pushf
mov
cwde
inc
cmp
(bad)
mov
xchg
ins
aam
fmulp
int3
add
lods
scas
sub
cmp
(bad)
mov
mov
xchg
lahf
sbb
dec
adc
jecxz
jnp
sar
sahf
xchg
jnp
loope
or
clc
stos
dec
and
retf
hlt
neg
or
lods
sub
(bad)
in
rol
repz
xchg
mov
push
mov
mov
push
sub
out
cmp
into
or
xor
dec
hlt
leave
jbe
call
scas
dec
addr16
shr
xchg
dec
fs
mov
(bad)
and
shl
mov
and
pop
(bad)
mov
jecxz
adc
pop
xchg
mov
fwait
inc
es
aad
call
mov
xchg
sub
adc
loopne
cmps
div
scas
(bad)
enter
jmp
push
mov
rol
aam
sub
daa
pop
pop
jbe
stos
fnstenv
cli
ss
fist
lods
jle
mov
shl
fadd
adc
lods
movs
jg
ret
ret
xor
mov
xchg
xchg
leave
std
push
nop
inc
repnz
mov
push
into
repnz
xchg
scas
(bad)
enter
sbb
retf
pop
dec
adc
sub
xor
adc
stc
xlat
ret
push
stos
cmc
adc
enter
into
repz
mov
mov
sub
repz
sbb
fucomi
mov
mov
inc
add
jmp
neg
js
xlat
stos
pop
gs
lods
gs
clc
shl
sahf
sub
dec
sub
out
or
fcomi
or
xchg
mov
loopne
sbb
test
xor
(bad)
xchg
pop
cmp
faddp
sbb
mov
mov
bt
icebp
xchg
iret
inc
xlat
stos
loop
cmps
pusha
xor
addr16
sti
retf
jo
sub
lods
xchg
push
jmp
or
icebp
sbb
in
icebp
adc
sbb
ins
push
push
and
mov
loope
push
arpl
jg
mov
aas
stos
ins
mov
xor
loop
inc
fistp
and
or
out
adc
and
add
repnz
jg
mov
popa
add
mov
fstp
outs
xor
adc
ja
in
repnz
retf
mul
inc
cmps
jle
js
jae
call
aad
stos
push
std
call
jns
repnz
ins
imul
idiv
xchg
pop
outs
inc
and
pop
call
bound
jge
mov
xor
retf
push
imul
sbb
daa
repz
adc
jns
cmp
rcl
lea
lahf
add
jmp
jge
loope
sub
sub
dec
mov
cmp
mov
pop
mov
inc
ja
dec
shl
aad
(bad)
pop
sub
lock
sub
jo
out
and
dec
scas
and
sub
inc
adc
jne
push
call
aaa
aam
(bad)
sbb
mov
in
rcl
mov
inc
dec
test
aaa
or
and
rol
sbb
xchg
pop
mov
push
jge
cli
jmp
sub
inc
in
cs
retf
xchg
xor
dec
push
mov
or
mov
in
mov
icebp
mov
rcr
in
loop
cmp
cli
loop
xor
push
ds
mov
and
movs
call
xchg
pop
push
ins
jne
cmp
inc
mov
lea
pop
cmps
add
frstor
(bad)
push
je
push
sbb
pusha
pop
lea
jbe
pop
repnz
aam
ds
xchg
stc
jae
popf
fmul
(bad)
popf
jno
xchg
stos
inc
mov
cdq
mov
fnsave
dec
fisttp
fs
loope
pop
mov
repnz
inc
mov
aas
add
pusha
mov
sbb
ror
mov
call
adc
ror
cs
movs
mov
jle
clc
mov
test
test
loopne
and
lods
pop
or
rcl
fist
xchg
sbb
push
mov
cli
jo
test
dec
cmp
mov
jmp
repnz
add
test
or
outs
mov
fstp
jmp
pusha
std
ja
inc
int3
je
pop
cmp
sahf
adc
fmul
add
fwait
inc
js
pop
data16
fadd
das
popa
sub
add
pop
enter
and
lea
out
inc
mov
jecxz
mov
test
mov
xor
dec
dec
test
(bad)
mov
ja
mov
pop
lods
jecxz
xchg
sub
jbe
loopne
pop
out
jae
gs
loopne
adc
mov
mov
sub
sbb
scas
xor
mov
out
popa
mov
mov
int3
inc
xchg
cmp
pop
xchg
xchg
sbb
cmp
push
dec
not
shr
in
pop
inc
loop
loopne
cmp
ins
and
daa
js
push
mov
adc
scas
aam
xchg
push
pop
fisubr
pop
inc
test
and
push
dec
sub
imul
sbb
xchg
(bad)
addr16
cli
jbe
mov
cmp
and
cmps
pop
nop
mov
(bad)
cmp
mov
fstp
aaa
loop
cmp
sub
push
xor
aam
enter
jecxz
ja
aam
add
or
adc
sbb
push
repnz
add
jae
cmps
jb
fsub
mov
mov
in
call
retf
jge
(bad)
rol
adc
cmp
xchg
mov
add
xchg
jmp
mov
shl
xor
push
in
fbstp
sub
mov
dec
mov
sub
push
pop
hlt
pop
or
mov
xor
loopne
xlat
je
xchg
or
test
or
int3
and
jnp
sub
xor
fwait
cmp
and
(bad)
jae
shl
dec
lods
inc
aas
ins
cmps
in
aaa
push
mov
pop
fsub
lds
loope
js
mov
sbb
shr
clc
and
scas
dec
pop
mov
loop
adc
xchg
test
sub
shr
pop
in
pop
xchg
(bad)
adc
add
into
add
mov
addr16
push
stos
test
popf
push
pushf
push
leave
pop
mov
out
mov
retf
int3
pusha
jb
fcomp
repnz
outs
pextrw
mov
mov
(bad)
cmp
and
mov
pop
push
xchg
push
cmp
fcmovu
dec
jnp
bound
xor
aaa
int3
(bad)
cmc
jmp
imul
(bad)
out
mov
jnp
sub
retf
iret
add
xchg
mov
fwait
inc
cs
and
dec
sub
nop
retf
popa
loope
lods
jns
mov
mov
(bad)
cmp
add
aam
sbb
lods
and
movs
jle
mov
jne
jns
or
add
adc
dec
fwait
jp
cmp
hlt
in
clc
les
mov
pop
jne
or
pop
dec
xchg
cmc
mov
mov
and
not
cli
dec
enter
adc
push
cmps
mov
pop
enter
xlat
sahf
hlt
outs
out
and
sahf
push
jl
dec
or
jns
fldcw
xor
xor
dec
dec
cmps
fldz
aaa
arpl
dec
js
nop
cs
pop
xchg
xor
lds
xlat
call
or
dec
mov
cmp
xchg
repz
psubd
xchg
test
sbb
(bad)
sub
repz
retf
xor
or
dec
stos
je
cli
sub
dec
jb
jmp
inc
in
int
mov
adc
ins
dec
mov
add
adc
and
cmps
dec
stos
lods
cmp
dec
dec
fcmovnb
mov
arpl
mov
jns
out
sar
dec
fadd
jp
xchg
fmul
inc
stc
neg
mov
push
out
popa
xor
jge
adc
in
in
add
stos
sar
fcom
sbb
mov
inc
dec
push
shl
xchg
jle
jmp
cdq
cmc
xor
mov
cmp
das
adc
stos
retf
jp
add
mov
retf
sti
push
lods
dec
fst
stos
and
jle
and
ins
or
ror
dec
int3
mov
cmp
into
stc
icebp
dec
adc
or
in
sub
repnz
add
mov
popf
push
ja
enter
repz
pop
sbb
sbb
mov
xor
sbb
jbe
movs
fcomi
loop
in
add
sbb
in
push
out
mov
mov
(bad)
cmp
add
mov
mov
mov
or
(bad)
cli
push
mov
mov
sub
sbb
mov
cli
repnz
cmp
ins
push
pop
lahf
fcomp
fisub
adc
xchg
js
out
jmp
and
inc
pop
mov
outs
movs
sahf
fdivr
fwait
call
mov
adc
inc
popa
shl
lahf
mov
or
aam
mov
jp
ss
jecxz
lock
adc
cwde
fldcw
enter
or
cmp
inc
ret
arpl
mov
pop
in
shl
pop
and
fdiv
mov
loopne
(bad)
jg
add
out
fwait
cmp
and
sub
cwde
adc
sub
loope
stc
pop
leave
pop
push
xchg
mov
ss
pop
movs
cmp
aaa
mov
fwait
into
sub
je
movs
idiv
or
(bad)
stos
mov
sbb
push
cmps
or
out
cmc
cli
shl
retf
ret
inc
jno
dec
push
mov
js
xor
push
sti
lahf
test
les
jmp
cmps
ret
mov
mov
xor
adc
sbb
push
jno
ss
jl
mov
inc
push
out
das
cmps
into
and
or
cdq
jmp
push
sub
and
ret
jnp
popa
jle
add
sbb
(bad)
mov
out
inc
and
pop
es
in
dec
loope
test
stos
sub
jmp
add
and
adc
mov
(bad)
loope
xchg
sbb
(bad)
cmp
loop
sub
sbb
add
ret
das
test
sbb
or
repnz
sub
addr16
xchg
push
out
xor
dec
call
dec
loopne
aas
in
cmp
xchg
ds
ja
in
shl
sbb
inc
outs
ins
(bad)
xchg
ins
xor
pop
add
retf
shl
(bad)
call
mov
jb
mul
xor
jmp
mov
sub
(bad)
push
sbb
sub
hlt
adc
inc
jl
cmp
je
mov
mov
je
mov
aam
or
es
mov
inc
jbe
adc
arpl
lods
pop
in
mov
mov
sti
outs
xchg
test
sub
pop
adc
test
popf
fld
mov
sbb
lahf
ficom
out
jle
xor
pushf
into
adc
lods
popf
inc
sub
xchg
loopne
ret
jb
jb
mov
outs
ins
xchg
jmp
inc
sub
int
sar
mov
dec
test
cmp
dec
retf
enter
pop
out
adc
test
fcmovnb
out
(bad)
push
jns
fcmovu
jae
sub
sub
sbb
add
out
popf
jmp
lods
jle
int
pusha
cmp
push
pop
cwde
jb
fdiv
mov
inc
arpl
mov
push
popf
inc
sbb
das
add
pop
out
into
dec
div
cdq
push
mov
fidiv
ds
jge
leave
or
cmp
jmp
movs
int3
xchg
mov
jp
mov
jecxz
ret
push
cmp
fs
lahf
sub
sbb
mov
and
cmp
mov
dec
ja
xor
imul
not
add
dec
or
daa
and
dec
jmp
xor
aad
(bad)
pop
push
dec
jp
mov
dec
dec
adc
xchg
mov
xchg
mov
xchg
clc
add
lea
pop
fcomp
dec
push
iret
push
mov
pusha
jl
leave
mov
cmp
and
dec
mov
fld
or
pop
adc
ret
bound
sub
jb
jle
dec
xchg
les
inc
mov
lds
ret
int
xchg
and
inc
add
into
or
jecxz
add
int
or
push
outs
xchg
std
in
sbb
mov
jecxz
mov
mov
ret
mov
dec
leave
mov
leave
add
gs
fsub
jg
adc
test
lods
mov
popf
sbb
add
movs
scas
xor
pop
in
out
stc
mov
sub
jle
popa
pop
or
inc
pop
hlt
add
lea
xchg
push
je
sub
xor
in
aas
jp
mov
leave
dec
adc
aas
pop
cmp
ins
pop
add
hlt
mov
mov
mov
outs
mov
(bad)
adc
add
sti
mov
cmp
call
mov
test
pop
mov
mov
adc
cmp
push
div
ins
(bad)
fcomp
mov
bound
fmulp
hlt
shl
aaa
mov
rol
lahf
cmp
pop
call
mov
imul
leave
pop
sbb
or
add
mov
and
cmp
sti
mov
daa
outs
jo
out
pop
dec
stos
xchg
outs
adc
inc
jno
cmps
jo
pop
cld
rol
jg
ss
das
ficomp
jle
xlat
repz
fwait
sbb
push
jg
xor
mov
in
and
pop
pop
cmp
add
repnz
mov
popa
fcmovnu
jne
cld
sbb
ret
stos
call
pop
push
add
push
fst
test
inc
mov
lds
adc
retf
and
cmp
xchg
sbb
ret
sbb
mov
imul
push
sti
jg
cdq
mov
jb
push
xchg
dec
or
aaa
pusha
movs
xor
cmc
retf
inc
enter
mov
sub
inc
mov
inc
xor
dec
mov
fld
xchg
test
jmp
pop
mov
ins
dec
mov
adc
fmul
sub
cmp
cmp
mov
clc
adc
pop
mov
imul
jae
jmp
cmps
fld
cmp
xor
mov
mov
sub
and
cmp
into
pop
daa
add
mov
(bad)
sar
jge
fadd
scas
or
mov
idiv
xrelease
(bad)
adc
out
dec
imul
setp
int
xor
mov
aas
and
push
or
jne
mov
ds
call
mov
in
dec
pushf
or
sub
push
xlat
jle
ret
test
and
xor
int
cmp
lods
data16
cs
add
pop
inc
and
cmp
cmp
pop
(bad)
out
jo
xchg
mov
ret
iret
sbb
lock
mov
and
aad
in
sub
xor
das
imul
dec
iret
int
nop
mov
dec
push
push
mov
push
cld
lock
sbb
inc
sahf
jae
lods
xor
cmp
arpl
lds
or
mov
dec
ins
mov
and
adc
cli
cwde
cmp
out
sbb
xor
dec
pop
sar
or
(bad)
and
ss
lods
std
ret
inc
cmp
or
sbb
(bad)
sahf
jne
leave
jmp
adc
test
mov
fmul
iret
cld
fwait
gs
pushf
loopne
adc
jle
jnp
adc
sub
or
ds
repz
iret
mov
and
stos
in
aas
out
sub
movs
data16
jo
jo
xchg
add
xor
mov
mov
pop
sbb
jnp
or
xchg
add
jmp
out
inc
test
push
mov
dec
repnz
xchg
mov
add
std
daa
pop
sub
enter
cli
jp
scas
cmp
in
adc
lahf
or
mov
adc
mov
xchg
shr
xchg
int3
xor
and
jmp
lock
inc
dec
mov
lock
in
aaa
push
push
(bad)
sub
mov
(bad)
and
icebp
mov
add
push
jmp
cmps
mov
jo
pop
test
push
outs
inc
adc
mov
cmp
test
sub
cmps
loope
jecxz
jb
outs
add
cmp
gs
aad
mov
loope
dec
jno
pop
and
jno
clc
dec
loopne
xor
jl
mov
(bad)
das
or
inc
aam
sar
xchg
ret
jae
xchg
icebp
shr
outs
movs
or
in
jbe
out
aad
sbb
mov
and
mov
xor
xor
stc
cmp
call
loop
inc
and
adc
inc
pop
cmp
jmp
xchg
ins
icebp
xchg
dec
jno
into
loop
enter
lods
cdq
or
cmp
js
popf
pop
mov
xchg
or
pop
xchg
sbb
cmp
test
dec
cmp
cli
lock
sbb
inc
dec
and
mov
jbe
js
popf
add
xchg
and
fmul
pusha
cmp
(bad)
ds
mov
mov
sbb
push
pop
iret
dec
ins
jmp
or
or
ss
ror
xchg
push
in
jp
rcr
jecxz
mov
xor
outs
jp
add
cmp
loop
inc
fdiv
inc
push
sbb
sub
pop
mov
adc
push
mov
gs
jnp
outs
xor
aaa
ror
arpl
add
retf
fld
add
outs
leave
xor
movs
test
jnp
scas
xchg
mov
cmps
mov
repz
cli
adc
out
jg
lods
sbb
or
push
and
andnps
cmp
xchg
stos
arpl
in
sbb
jle
jns
mov
xor
inc
and
adc
outs
inc
fbstp
cmp
inc
or
jp
push
adc
(bad)
push
stos
cmps
sub
ret
xchg
(bad)
cwde
mov
xor
mov
in
pop
xchg
adc
pop
xlat
imul
xchg
std
xor
and
cs
movs
lods
push
les
aaa
push
cli
rol
hlt
in
adc
daa
outs
push
fld
xchg
(bad)
cmp
in
retf
stos
sbb
jns
mov
mov
outs
fdiv
popf
cmc
mov
movhps
or
lods
mov
cs
fsub
lea
je
lea
push
(bad)
aad
sub
adc
lods
sbb
repnz
fldenv
xchg
push
pop
test
inc
xchg
rcr
psubusb
sahf
mov
dec
pop
fnsave
out
mov
and
scas
pop
out
mov
test
jno
and
sub
cmp
pop
add
(bad)
and
jo
test
imul
jg
and
pop
test
les
in
inc
aam
cwde
xor
in
retf
mov
cdq
adc
mov
and
in
push
mov
fiadd
jno
push
sbb
ss
mov
push
jp
cli
fsub
(bad)
mov
pop
out
mov
mov
cmp
mov
adc
push
cmps
sbb
js
adc
pop
xor
mov
cmps
push
cmp
and
pop
leave
adc
call
cdq
mov
mov
clc
aam
pop
and
mov
xchg
cmp
mov
das
in
sub
retf
add
add
push
imul
or
mov
or
dec
aad
mov
jae
jmp
imul
not
mov
aam
clc
push
cmp
mov
xor
cmp
mov
bound
bound
daa
rcl
test
pop
add
push
and
mov
cs
mov
jmp
das
cs
or
and
xchg
xchg
dec
loop
rcl
(bad)
push
in
leave
daa
pusha
adc
push
(bad)
add
pop
test
icebp
jnp
pop
imul
xchg
ds
std
rcl
push
pop
loope
iret
adc
dec
cmps
mov
push
pusha
xchg
push
xchg
aaa
ja
jb
jge
fild
sub
adc
cdq
sti
cs
or
scas
pop
xor
pop
movs
fmul
inc
leave
fsub
aaa
jle
adc
xor
cmp
mov
xlat
mov
nop
push
jge
xor
adc
shl
shl
xchg
pop
pop
sbb
cmp
cmps
out
bnd
pusha
retf
sti
pushf
test
(bad)
(bad)
lock
sti
jecxz
jnp
imul
dec
in
mul
jge
lock
xchg
(bad)
out
mov
dec
and
jae
and
xor
cld
jle
cwde
sbb
lds
sub
and
sbb
cmp
pop
inc
in
dec
push
dec
and
dec
xor
fneni(8087
jmp
mov
cwde
mov
push
and
push
sub
movsx
sub
jle
aam
fld
or
fdivr
mov
stc
inc
les
cld
loop
or
stc
xor
aam
into
rol
mov
sbb
pop
bound
stc
dec
dec
adc
or
cmp
je
push
lds
sub
test
or
jae
cmc
out
pusha
dec
mov
xchg
ret
out
shl
test
add
test
dec
jno
lea
mov
dec
lock
leave
and
dec
sar
dec
iret
movs
jge
div
mov
hlt
not
dec
push
pop
ficomp
jecxz
mov
aam
jge
dec
loopne
mov
sbb
inc
or
dec
pop
sub
in
sub
iret
ins
jne
and
js
ins
pop
sbb
push
sbb
loope
hlt
out
sti
(bad)
jne
pop
ret
cld
pop
cwde
mov
inc
mov
loop
outs
mov
or
xchg
mov
mov
shl
dec
dec
jle
or
lods
adc
sbb
xchg
pop
add
sbb
call
jb
inc
test
ror
pop
and
fldenv
or
add
dec
adc
test
pusha
mov
mov
iret
push
movmskps
adc
sub
repz
iret
xlat
in
xchg
cmp
pop
test
ja
sub
aas
test
xor
in
pop
fild
push
ins
xchg
mov
adc
and
lds
loop
mov
jl
repnz
or
jge
xlat
idiv
aad
call
repz
movs
jb
dec
cmc
push
push
pushf
jnp
push
mov
call
add
imul
fadd
jecxz
push
addr16
and
xchg
in
ror
mov
dec
jnp
(bad)
cmp
popf
dec
inc
lock
lods
mov
stos
repnz
or
test
xor
mov
pop
and
in
fidiv
or
push
xchg
sub
jmp
add
ret
mov
xchg
bound
push
add
xbegin
jno
and
sbb
test
js
cs
or
outs
xchg
pop
out
test
or
sar
ret
xor
jae
dec
sahf
je
call
div
adc
add
inc
fnstenv
sub
mov
mov
into
(bad)
in
pop
in
xchg
fidiv
ret
out
cli
mov
and
pop
mov
push
imul
lock
jae
mov
in
(bad)
pusha
cs
scas
or
retf
or
psubsb
scas
jg
and
or
dec
clc
mov
ins
pop
loop
loope
outs
mov
and
adc
jmp
imul
in
inc
or
into
and
daa
add
jg
mov
stos
iret
(bad)
mov
lock
fmul
mov
es
pushf
pushf
jmp
int
and
sti
sbb
lods
popa
scas
(bad)
in
lds
leave
lahf
and
cmp
loope
rcl
stos
sti
cwde
mov
scas
(bad)
xchg
mov
push
test
cdq
shl
mov
lahf
sbb
inc
nop
loopne
call
add
dec
sub
clc
sub
inc
jns
push
jmp
pop
lock
adc
or
dec
jno
jb
scas
push
dec
dec
cmp
xor
sbb
ja
lods
aas
test
bound
push
cmp
mov
rcl
in
push
daa
mov
scas
xlat
fwait
scas
icebp
mov
dec
call
and
stos
xlat
push
ja
popa
sbb
test
xchg
je
loop
icebp
mov
add
pop
loopne
inc
mov
add
lods
clc
add
jmp
jae
mov
add
xor
dec
fisttp
sub
mov
mov
mov
into
(bad)
outs
cld
(bad)
add
loope
mov
out
dec
leave
dec
cmp
push
cmp
out
movs
fild
pop
mov
aaa
nop
add
push
shl
xlat
movs
inc
sbb
sub
mov
xor
mov
pop
jns
out
test
popa
pop
movs
movs
mov
pop
jl
bound
inc
mov
push
test
push
pop
aam
fwait
movs
adc
sub
pop
cli
lea
cmp
addr16
lock
xor
xor
leave
jle
cmp
jg
jbe
imul
dec
call
adc
and
les
mov
sbb
dec
jne
cmp
push
dec
sub
into
sub
xor
shl
dec
and
stos
cdq
jmp
repnz
inc
sub
and
push
mov
cmovno
jno
dec
mov
add
std
mov
dec
pop
sbb
inc
push
or
mov
xchg
sub
mov
sub
sub
jecxz
mov
stos
adc
cmp
out
das
nop
mov
jbe
sbb
xor
in
xchg
sub
pop
jecxz
xchg
imul
mov
movs
xchg
pop
icebp
sbb
mov
daa
in
cdq
pop
xor
shr
arpl
mov
fld
and
ins
lea
xchg
sub
cdq
mov
scas
frstor
jp
pop
ret
cmp
(bad)
jg
inc
push
pushf
ins
les
stos
push
or
pop
adc
or
imul
dec
dec
xor
ror
out
push
cmps
pop
and
xchg
cmc
inc
sub
adc
(bad)
imul
jle
mov
jae
cmps
daa
sub
dec
or
inc
mov
dec
or
rcl
loop
xor
pusha
outs
lahf
or
pop
adc
ret
bound
and
cmp
call
ror
(bad)
push
hlt
out
stos
call
test
dec
mov
loope
lahf
inc
push
(bad)
push
dec
arpl
jae
fsub
fdiv
cmp
bound
js
das
fsub
mov
rcr
cmps
add
dec
mov
div
shr
fiadd
or
out
sub
test
rol
jo
aad
jno
pop
mul
mov
icebp
push
(bad)
jnp
test
lock
xor
push
add
sbb
add
jl
rol
inc
into
shr
and
outs
sbb
and
xchg
dec
fild
jns
sbb
in
retf
and
jle
adc
inc
sbb
xor
aad
(bad)
stos
test
sub
mov
icebp
mov
add
shr
or
mov
or
gs
stos
aad
sbb
fisttp
mov
fcmovbe
lds
loope
ss
cmp
and
mov
lahf
dec
jae
mov
outs
jle
jg
push
lock
mov
lahf
out
inc
adc
mov
hlt
xlat
outs
mov
in
adc
sbb
dec
xchg
dec
(bad)
aas
mov
nop
dec
pop
add
cmovl
sbb
out
movs
not
mov
add
repnz
xchg
dec
push
or
ret
scas
cmc
mov
popf
sub
sub
inc
and
cli
das
repz
pop
lock
xchg
retf
les
push
add
(bad)
outs
add
and
and
jp
sub
nop
imul
pusha
xchg
in
(bad)
in
and
jne
or
popa
xchg
or
jecxz
pop
add
or
nop
in
std
cmp
add
inc
lahf
fcomp
push
cmp
add
add
push
xor
in
xchg
and
mov
dec
test
shr
ds
adc
sub
movs
push
movs
mov
mul
in
cdq
into
pushf
test
test
mov
mov
popa
(bad)
stc
cmp
or
xchg
outs
movs
(bad)
jae
inc
or
push
pop
sbb
ret
mov
out
out
xchg
popa
xor
mov
cli
push
mov
mov
mov
sar
pop
cmp
call
pop
add
into
lods
push
shl
add
cmc
mov
stc
mov
pop
inc
sub
mov
iret
dec
or
loopne
cli
mov
pop
mov
out
movs
rcl
pop
inc
loope
gs
in
lock
jnp
(bad)
(bad)
outs
mov
xchg
sbb
inc
(bad)
int
scas
dec
push
ret
cdq
pop
mov
test
cmc
popf
pop
test
shl
mov
mov
dec
xchg
sar
dec
call
movs
sbb
mov
mov
jb
out
call
push
jnp
fs
mov
pushf
and
pop
xchg
sub
ud0
mov
retf
jecxz
sub
and
loope
ror
mov
data16
xor
out
mov
out
jb
shr
sub
adc
outs
and
push
pop
mov
cmp
inc
ret
rol
std
xor
sbb
dec
xchg
dec
cmp
shl
push
aaa
inc
and
repz
adc
gs
mov
push
or
mov
fwait
and
jae
scas
sbb
les
mov
dec
test
cmc
jbe
fdivr
ss
and
add
pop
and
sbb
ret
cmp
push
cmp
div
jl
dec
sub
mov
add
cmp
mov
pop
mov
push
push
movs
push
rep
es
mov
mov
pop
mov
jmp
seto
ins
popf
push
into
(bad)
in
cs
pop
retf
sbb
mov
add
ins
jbe
xor
retf
push
mov
ss
jg
add
mov
fnstsw
inc
mov
add
ror
adc
jae
cmc
(bad)
pop
pop
ins
or
add
inc
and
(bad)
ins
dec
out
arpl
mov
cmp
mov
outs
call
inc
rcl
cmp
push
out
cmps
lock
sbb
sbb
retf
fnstsw
xor
adc
push
inc
and
outs
adc
inc
gs
popa
xor
mov
sub
jns
retf
pop
add
mov
mov
mov
inc
adc
or
movs
imul
add
fidiv
add
xor
dec
mov
loop
fadd
(bad)
mov
je
sbb
mov
stos
add
dec
rcl
cmp
push
add
fbstp
sbb
inc
sub
aas
jbe
cmp
jmp
pop
jmp
pushf
jae
mov
ror
push
jnp
sti
(bad)
es
or
repnz
add
loop
jmp
daa
and
jp
enter
ja
mov
xchg
sbb
push
rcr
arpl
lock
or
pop
lods
nop
addr16
test
pop
cmps
lahf
ss
ja
out
and
hlt
daa
(bad)
lods
lock
aaa
or
jmp
cmp
or
call
(bad)
dec
in
push
cmps
in
push
mov
retf
movs
shr
arpl
fs
loopne
mov
xor
rcl
and
dec
aaa
cwde
sub
xor
(bad)
(bad)
loope
xor
cmp
cmps
es
and
xchg
inc
fadd
inc
xchg
lods
mov
adc
mov
add
ja
adc
in
inc
mov
pop
jne
enter
enter
stos
stos
sub
icebp
(bad)
cmp
fidivr
and
stos
outs
popf
fnstsw
push
outs
dec
and
push
dec
cmps
das
lods
call
xchg
rcr
jp
xlat
dec
ret
mov
(bad)
in
test
cmp
outs
adc
lock
push
adc
enter
retf
sub
int
sbb
push
ret
into
repz
dec
inc
cld
cmp
push
xor
lods
mov
mov
or
add
and
je
inc
push
fs
shl
sbb
stos
xor
in
mov
jae
xor
cmp
ret
inc
cmp
loopne
retf
jle
ret
and
pop
sbb
bound
pop
ss
mov
rcr
pop
pop
xor
pop
dec
mov
jo
(bad)
cmp
fnsave
(bad)
hlt
not
push
jmp
push
cld
jp
sbb
stos
imul
mov
and
int
and
adc
retf
dec
(bad)
ret
jmp
rol
sub
dec
adc
xor
stos
enter
call
ror
xchg
in
(bad)
bound
in
xchg
xor
(bad)
retf
add
push
in
sub
mov
adc
xchg
out
push
jle
fimul
in
je
popf
and
(bad)
push
mov
mov
in
mov
sbb
inc
imul
sbb
aaa
cmp
sahf
pusha
dec
fst
mov
scas
cmp
cmp
cmp
nop
mov
and
test
adc
loopne
fst
js
fwait
mov
xor
push
stc
mov
sbb
(bad)
sbb
or
ja
fidiv
icebp
and
add
xor
(bad)
or
push
in
xchg
sub
out
(bad)
fwait
cmp
dec
mov
inc
ficomp
sub
push
shl
inc
dec
mov
jp
xchg
mov
cmp
movs
rol
les
and
xchg
adc
adc
mov
leave
arpl
push
xor
call
lea
pop
ins
sti
or
les
rcr
xchg
rcl
jb
pop
and
inc
retf
mov
arpl
enter
(bad)
pop
push
jge
pop
addr16
inc
mov
and
pop
dec
xlat
nop
mov
std
sub
mov
test
xchg
or
dec
and
call
fmul
sti
and
ins
mov
std
fidiv
jl
retf
jnp
or
xchg
enter
inc
cld
leave
or
or
test
push
sar
cmp
out
sub
adc
push
arpl
sbb
pop
mov
sbb
call
sbb
pop
dec
ret
jmp
into
mov
add
and
mov
scas
enter
leave
and
or
mov
(bad)
je
cmp
stc
jno
cmps
push
xchg
pop
stos
cmp
jo
gs
scas
ins
dec
jo
(bad)
push
outs
das
ja
cs
pop
scas
js
inc
jmp
inc
mov
dec
scas
xchg
push
aad
sub
(bad)
aad
push
test
jae
dec
mov
aad
cli
ror
xor
jl
ja
test
xor
stc
pop
xor
xor
push
in
add
jle
mov
push
mov
and
jmp
mov
imul
dec
sahf
into
push
mov
loopne
fs
add
loop
mov
outs
iret
mov
imul
stos
test
jbe
push
popa
aad
sub
mov
push
cmp
les
mov
popf
imul
mov
sbb
test
jge
lea
mov
or
add
lahf
sub
scas
lods
dec
das
xor
xor
push
pop
pusha
jl
rcr
mov
mov
push
jecxz
mov
xchg
ret
call
je
arpl
leave
inc
mov
xor
and
pop
pop
xchg
movs
push
dec
rcr
cmp
pop
cmp
je
pop
add
into
fdiv
aaa
mov
xchg
out
and
sbb
inc
cmp
imul
adc
and
adc
xchg
outs
sub
pop
or
xor
mov
jae
pop
xchg
mov
xor
icebp
lea
mov
xchg
xor
sub
xor
fnstcw
jmp
in
pop
rcl
xor
pop
movs
ins
xchg
xchg
and
jmp
mov
bound
dec
mov
push
ins
inc
fs
add
xchg
test
xor
pop
imul
xchg
movs
and
in
test
or
add
sbb
jl
call
mov
imul
push
jno
ja
leave
mov
push
fiadd
ret
mov
adc
or
xor
mov
mov
pusha
fidivr
leave
add
dec
mov
mov
cmps
cmps
test
push
mov
mov
(bad)
in
fistp
ret
jmp
push
(bad)
movs
sub
jl
mov
sar
inc
xor
ins
mov
fwait
mov
dec
rol
arpl
out
xor
rcr
push
adc
cmp
fisttp
imul
enter
fnsave
pop
iret
mov
cmp
cmps
clc
cli
sbb
xor
xlat
pop
addr16
mov
pop
push
xchg
sub
idiv
fisubr
push
repnz
sub
movs
daa
shl
push
push
movs
mov
add
ins
fild
adc
jo
cmp
lahf
cmp
test
scas
test
sbb
ins
adc
push
mov
sub
and
ins
sub
fs
cdq
add
jns
push
mov
cli
xor
jo
lods
(bad)
js
lea
push
dec
mov
mov
jae
ror
inc
mov
stos
push
mov
or
push
sbb
loopne
push
cli
mov
pop
jae
add
dec
add
or
xchg
aaa
bound
mov
call
loope
or
xchg
inc
dec
jmp
or
jns
cmp
mov
fs
inc
iret
adc
int
push
repz
call
ret
inc
jle
retf
sbb
(bad)
dec
stc
daa
pop
mov
mov
test
cdq
in
or
aaa
in
xchg
and
mov
ins
int
jmp
std
mov
jmp
cmp
pop
adc
push
xchg
inc
mov
nop
fisttp
add
in
inc
and
(bad)
sub
sub
mov
and
jle
jae
fmulp
pop
mov
ret
sub
mov
call
rcl
dec
mov
xchg
add
retf
loop
push
fcom
xor
ins
adc
cli
dec
xchg
push
popf
jecxz
jmp
pop
out
sub
nop
gs
pop
cmp
dec
adc
jb
push
push
pop
add
fwait
popa
xor
pop
jno
add
in
mov
mov
mov
dec
shl
gs
and
retf
fisttp
jnp
shr
cld
inc
sbb
fdiv
jle
jecxz
xchg
jmp
cmp
rcr
dec
and
mov
mov
test
(bad)
iret
popf
scas
daa
adc
neg
clc
outs
scas
mov
and
pop
mov
sub
xchg
add
mov
push
mov
add
repnz
mov
xchg
mov
pop
repnz
out
je
or
in
icebp
movs
es
dec
sbb
push
mov
pop
jg
mov
add
mov
dec
adc
mov
leave
hlt
lahf
scas
jmp
mov
and
enter
xchg
ins
xchg
cld
xor
dec
or
ds
scas
mov
stos
sbb
movs
out
ja
adc
cmps
jle
sbb
aas
add
or
and
xor
mov
iret
lds
outs
shl
call
push
jns
int
add
jnp
call
out
(bad)
inc
or
cmps
pop
xor
icebp
in
aam
xor
xchg
pop
enter
por
adc
mov
push
push
cmp
push
rsqrtps
pop
out
fcmovu
push
sbb
pop
ins
imul
cmp
push
add
not
nop
(bad)
int3
cmp
popa
and
lahf
pop
pop
push
mov
enter
mov
adc
rol
xor
in
sti
hlt
or
in
adc
jp
jecxz
gs
div
inc
mov
test
mov
mov
jne
lock
aam
sbb
inc
retf
in
out
mov
scas
pop
je
mov
add
std
dec
call
repz
movs
push
retf
int
data16
jmp
pop
and
adc
push
sbb
icebp
popa
add
popa
dec
add
jb
out
andnps
xor
pop
sti
ja
les
xchg
adc
scas
pop
or
xchg
add
mov
add
das
or
dec
mov
mov
mov
add
pop
pop
(bad)
aam
es
retf
inc
inc
fs
dec
jle
stos
inc
mov
mov
push
(bad)
jo
adc
jge
jne
jg
nop
jmp
push
xchg
and
sub
mov
and
sbb
inc
mov
in
inc
adc
popa
pop
mov
in
mov
xchg
dec
xor
fadd
daa
mov
int
adc
(bad)
mov
add
mov
cli
imul
sbb
push
adc
ins
sbb
(bad)
jecxz
jecxz
jno
call
loope
sub
rol
jb
xchg
pop
mov
outs
xchg
push
scas
pusha
loop
psrlw
inc
mov
sub
jle
test
sbb
xchg
hlt
leave
ret
lods
xor
out
ins
sub
out
cdq
or
xor
xor
jno
lods
daa
ror
inc
stos
xchg
(bad)
cli
js
aas
test
mov
nop
fadd
test
push
mul
and
pop
pop
push
sbb
xor
or
mov
xchg
addr16
cmps
pusha
push
xor
ror
add
xor
push
mov
dec
pop
fcom
gs
stos
popa
mov
repnz
push
sbb
mov
add
in
cmp
fsub
retf
retf
mov
test
lods
call
lods
or
mov
jo
scas
pop
sbb
pusha
enter
or
push
mov
cmc
stos
sub
jo
sahf
cmp
cmovl
or
or
shl
add
imul
pop
mov
je
mov
jl
jl
fiadd
dec
mov
sub
sub
es
cmp
xor
sub
jnp
xor
jmp
fist
sub
(bad)
bound
xchg
jecxz
mov
clc
fs
nop
mov
test
test
test
cld
pop
loope
pop
(bad)
mov
jl
mov
out
jns
push
ret
nop
js
loope
sti
pusha
mov
xchg
adc
sub
xchg
in
pop
aaa
bound
idiv
xchg
sbb
mov
dec
fnstenv
sbb
push
pop
xchg
test
lahf
cmp
xor
movs
push
loopne
mov
sbb
lods
cs
retf
cmps
enter
inc
mov
ret
nop
adc
in
pop
ret
add
mov
cmp
mov
inc
cmp
ins
lea
cmp
adc
xchg
(bad)
jl
dec
jmp
pop
retf
jae
adc
call
mov
mov
sar
dec
xlat
mov
lahf
adc
add
xchg
jge
lea
pop
push
sar
and
sti
mov
sahf
dec
daa
jge
popa
movs
xchg
sbb
dec
leave
pop
aas
jno
out
nop
cmps
fisubr
movs
mov
mov
push
xchg
jo
mov
sub
out
aam
mov
leave
gs
mov
sbb
fisttp
lods
daa
cld
push
out
xchg
cmp
sbb
xor
push
cmp
or
ret
rcl
int
xor
add
xor
xchg
xchg
jb
sub
loope
adc
cmp
nop
lahf
jbe
loopne
cli
mov
sub
dec
cmp
fisttp
jmp
add
retf
ins
cwde
into
shr
inc
cmovle
shl
popa
inc
pop
inc
addr16
push
lods
sub
xchg
ss
inc
in
mov
retf
dec
cwde
pop
stos
adc
imul
popf
xchg
test
mov
mov
daa
mov
cs
in
push
sub
jecxz
data16
sub
jne
sbb
push
push
int
inc
lock
ins
xlat
sahf
xor
in
cld
out
xchg
stc
aaa
jnp
cli
les
mov
mov
(bad)
nop
iret
je
xor
(bad)
(bad)
cwde
xchg
repnz
and
clc
xchg
shl
xchg
pop
test
test
sub
pop
lea
jecxz
test
or
aad
out
ja
inc
gs
and
xchg
repz
das
sbb
mov
dec
inc
add
jbe
mov
add
jno
mov
(bad)
mov
popa
dec
stos
xor
jmp
push
mov
neg
outs
jge
pop
sbb
test
test
inc
add
push
xor
retf
mov
outs
cmp
movs
cmp
pop
ins
add
nop
jge
in
in
xor
sbb
add
pop
imul
je
xchg
lods
loopne
dec
mov
ins
enter
dec
push
mov
mov
jp
jae
mov
ror
push
fild
jae
into
out
adc
adc
(bad)
inc
mov
dec
mov
jmp
jge
or
mov
stos
daa
adc
add
sub
add
outs
mov
movs
mov
sub
aad
and
imul
hlt
push
xor
mov
xchg
into
xor
mov
iret
(bad)
retf
repz
inc
sahf
sahf
scas
cmp
push
in
mov
mov
sbb
sub
xchg
out
aad
cmp
add
jge
aad
fldcw
aam
rol
push
gs
cli
xor
adc
je
retf
sbb
push
sar
inc
imul
mov
push
es
sub
les
sub
adc
sar
(bad)
dec
test
mov
fcmovnb
sub
sahf
(bad)
sub
xchg
push
outs
push
nop
xor
(bad)
pop
fcomp
mov
push
pop
jmp
sar
aas
pushf
and
push
mov
scas
loope
mov
jmp
fidiv
xchg
ss
call
xchg
sbb
cmp
mov
fwait
xchg
lahf
int
gs
cmp
test
retf
daa
inc
dec
or
mov
rcl
pop
int3
cmps
test
ror
iret
cmc
mov
scas
add
aam
in
out
outs
fist
sub
aad
cld
adc
out
sar
sbb
push
ins
xchg
test
test
aad
sti
cmps
xchg
mov
jp
add
loop
jne
pusha
lea
xor
(bad)
loopne
cdq
push
shl
jecxz
stc
xchg
and
fmul
mov
or
sub
cmp
ficom
addr16
inc
arpl
(bad)
int3
imul
sti
jne
pop
sbb
push
imul
call
mov
push
dec
mov
jb
stc
mov
inc
pop
stos
xchg
shr
xor
pop
lea
mov
jb
mov
xchg
test
mov
adc
inc
pop
stos
retf
and
bound
adc
jnp
pop
mov
fstp
cli
dec
lock
sub
push
xor
sar
popf
mov
popa
lea
adc
arpl
mov
or
cmp
mov
cmp
xchg
sbb
or
add
dec
movs
pop
popf
add
arpl
inc
ret
or
inc
cmc
add
sub
popf
xlat
ja
outs
mov
inc
cmp
xchg
xchg
ins
push
loop
sub
sbb
ret
sbb
call
mov
retf
xchg
arpl
mov
push
je
mov
bnd
jb
fidiv
xlat
pop
dec
loope
pushf
into
lahf
enter
ret
inc
inc
inc
sbb
jae
pop
and
and
imul
iret
mov
lds
cmp
lock
es
mov
out
or
add
and
fs
imul
jno
in
lea
mov
lds
int
test
sub
shl
scas
pop
mov
cmps
test
dec
data16
popa
sub
jg
mov
xchg
mov
shl
pop
aad
fwait
fwait
enter
arpl
es
xchg
mov
jmp
and
xchg
xchg
mov
inc
inc
cmc
jp
add
out
push
dec
pop
lock
out
xlat
xor
iret
mov
pop
push
or
ja
pop
sahf
inc
cdq
jae
sar
imul
test
bound
arpl
fs
rol
mov
sub
pop
push
test
out
cmc
int3
cmc
test
cmp
fs
xchg
jg
stc
sahf
push
mov
sub
enter
add
jne
lods
sbb
ret
mov
sbb
add
jge
sbb
and
or
ret
aas
mov
pop
(bad)
int3
pop
punpckhwd
call
popa
and
push
in
js
push
lds
in
out
inc
xchg
in
jge
int3
outs
and
mov
js
adc
mov
or
jmp
loope
mov
iret
mov
and
cs
js
cld
push
pop
pop
stos
scas
in
neg
icebp
push
jae
push
xchg
mov
mov
pop
cmc
jnp
dec
stos
test
je
mov
adc
stos
sbb
das
adc
jne
adc
or
dec
and
test
sbb
sub
and
gs
add
xor
sub
cdq
(bad)
or
or
sub
push
push
cld
idiv
fs
lea
scas
sahf
call
je
je
or
pop
xor
or
cmp
xchg
mov
icebp
dec
pop
adc
es
cs
out
shl
xor
adc
ins
sbb
and
lahf
xor
addr16
or
mov
cmp
add
ja
xchg
sub
or
pusha
call
or
adc
add
sbb
bswap
cs
xor
mov
mov
mov
xor
sahf
push
mov
mov
lea
pop
mov
inc
mov
push
test
jg
adc
xchg
stc
fidivr
xchg
retf
push
fisubr
in
cwde
dec
push
scas
jns
aam
xchg
xchg
(bad)
cwde
mov
stc
sbb
or
fadd
jl
pushf
repnz
mov
std
sbb
cmp
out
(bad)
gs
add
xor
lahf
xor
outs
das
mov
les
mov
xchg
push
fild
sub
dec
cmp
in
mov
(bad)
cmp
or
mov
test
fidivr
jl
ins
cdq
imul
xor
mov
sbb
std
adc
adc
lods
inc
jno
out
enter
retf
inc
out
add
test
mov
mov
bound
jl
pop
clc
(bad)
cmp
sub
and
in
lock
aam
xlat
aaa
jecxz
pop
nop
mov
test
bswap
aad
(bad)
jno
imul
stos
pusha
jmp
or
inc
inc
jnp
aad
(bad)
mov
loopne
xchg
enter
mov
pop
push
les
dec
push
sub
xchg
pop
stc
ret
ins
jle
inc
jl
push
pop
xchg
push
mov
push
aaa
bound
mov
ret
xchg
enter
push
dec
bound
aam
mov
mov
xadd
popa
jl
and
sub
neg
aas
lock
mov
retf
inc
push
or
cdq
jl
add
aas
aam
lea
icebp
xchg
fdivr
inc
jmp
xor
push
mov
rep
in
sbb
mov
add
es
xchg
retf
and
sbb
out
and
xor
mov
sub
retf
outs
cmp
push
das
push
adc
std
adc
xor
cmp
adc
xchg
test
mov
pop
stc
shl
into
sub
lods
jae
xor
push
out
xlat
div
iret
mov
mov
retf
cmp
out
sbb
add
sbb
dec
pop
inc
jmp
mov
mov
sub
je
out
push
sbb
inc
push
inc
inc
jcxz
fadd
test
sub
cmp
jbe
xchg
shl
push
push
(bad)
aam
and
fsub
fwait
dec
mov
in
push
mov
pop
add
xchg
imul
xlat
aas
xlat
popf
jno
inc
push
xchg
retf
xchg
stos
out
mov
jp
and
and
pop
leave
imul
in
jecxz
jg
xchg
push
dec
mov
jle
or
dec
rcl
nop
enter
nop
cmp
(bad)
lock
loope
mov
(bad)
jle
in
mov
xor
test
je
jo
xchg
jecxz
jb
fwait
push
jno
xor
inc
mov
(bad)
jno
fwait
outs
cmp
mov
rcr
pop
retf
xor
retf
inc
call
or
push
mov
mov
jo
sub
ins
and
ja
push
fild
pop
test
xor
not
cmp
cwde
jne
inc
mov
dec
or
xor
adc
imul
mov
dec
nop
mov
mov
sar
jns
push
adc
xor
mov
add
pop
mov
xchg
rcl
fadd
add
fimul
scas
jmp
outs
pusha
bound
and
rcr
retf
lds
xchg
mov
(bad)
pop
push
jo
enter
jmp
dec
jecxz
add
ins
push
call
fld
jl
sbb
pop
or
cmps
popf
xor
jp
push
in
mov
mov
test
xchg
not
push
sub
pop
stc
push
mov
jl
dec
cs
test
mov
stc
adc
pop
imul
lea
retf
xchg
movs
out
sub
outs
mov
clc
push
inc
ds
xor
mov
loopne
repz
int
mov
lahf
aad
popa
mov
add
loopne
cs
jno
push
scas
loopne
out
fiadd
push
nop
inc
push
sbb
in
repnz
sbb
mov
inc
and
mov
mov
pop
imul
je
xchg
dec
sub
mov
dec
loope
fst
xchg
pop
(bad)
mov
retf
jns
jbe
not
fimul
(bad)
aad
xchg
bound
pusha
std
sahf
rol
or
lahf
clc
adc
sub
out
or
into
dec
cdq
xchg
mov
js
mov
xchg
adc
into
(bad)
clc
sbb
arpl
ret
(bad)
push
test
div
enter
shl
fscale
sbb
(bad)
sub
jmp
sbb
call
loop
cmp
push
(bad)
mul
adc
out
pop
scas
inc
inc
test
arpl
in
ror
sub
push
add
adc
xor
stc
push
inc
dec
arpl
mov
iret
mov
outs
and
test
aaa
test
jmp
xor
jge
xor
jecxz
xor
loop
and
xor
rcl
sub
popf
xchg
cwde
push
jns
test
xor
lock
lds
out
or
cld
lods
pop
fistp
add
fdivr
scas
push
icebp
sub
or
add
jmp
xchg
dec
sub
push
inc
js
movs
je
pushf
push
sbb
bound
les
cmp
mov
xlat
dec
mov
xor
(bad)
mov
(bad)
sbb
ret
adc
push
movs
adc
push
mov
fcom
lock
lahf
cwde
xchg
cmp
jmp
aaa
nop
aam
adc
inc
xchg
ret
mov
add
mov
push
adc
xchg
aaa
xchg
test
repz
cdq
inc
(bad)
sbb
sub
int3
loop
cmp
loope
loopne
(bad)
cmp
add
add
mov
jmp
pop
mov
(bad)
mov
add
fucomi
xchg
mov
pop
test
xchg
xchg
in
add
cdq
jp
imul
js
(bad)
in
retf
fwait
xor
test
pop
outs
(bad)
rcr
push
fisub
xchg
repz
adc
mov
repnz
pop
sub
mov
std
jp
call
pop
or
pop
lea
add
dec
add
jnp
pop
dec
bound
xchg
push
cmp
adc
or
add
sti
lahf
jns
fnstenv
loop
jae
pop
inc
mov
loop
add
popf
jb
cmp
mov
nop
test
hlt
jecxz
push
push
addr16
dec
scas
jmp
fldenv
xchg
pop
loope
jecxz
xchg
fwait
pop
in
and
pop
shl
mov
dec
retf
leave
iret
jecxz
repz
inc
cld
push
pusha
jl
push
lock
test
xchg
and
push
test
div
xor
retf
mov
pop
iret
setns
ret
stos
imul
pop
cmp
sti
and
clc
clc
cmc
aad
xlat
bound
adc
jle
ss
out
sbb
jl
and
in
inc
push
or
(bad)
cmp
add
clc
popa
pop
clc
mov
and
add
push
mov
mov
js
dec
jno
shl
push
out
sub
sti
stos
call
push
les
ds
and
add
ja
lods
cs
mov
sub
mov
cmp
pop
ins
lock
cmc
addps
imul
test
out
ds
das
int
cmp
cmp
enter
lock
sub
adc
jg
mov
in
mov
inc
les
rcl
stc
and
cmps
jno
es
fldenv
push
add
adc
std
push
loopne
js
add
or
pop
addr16
aad
push
fs
sahf
and
out
fisub
outs
rcl
pop
daa
test
lods
mov
inc
adc
call
sbb
cmp
add
jg
adc
fdivr
test
xor
repnz
rol
mov
scas
inc
dec
jbe
dec
(bad)
jp
scas
and
ficom
test
pop
cdq
ja
mov
jmp
nop
std
sub
test
aam
ja
xor
jmp
js
pop
repnz
jnp
(bad)
fist
pop
jecxz
cmp
rol
fstp
jns
push
not
xchg
imul
xchg
jbe
xor
out
test
pop
stos
call
sub
add
retf
(bad)
je
inc
test
xlat
xlat
add
sub
inc
inc
mov
fcmovbe
xchg
in
stos
in
retf
dec
fbld
push
and
fstp
push
mov
adc
xchg
out
inc
les
inc
(bad)
or
ret
retf
fisub
mov
ins
adc
fild
jl
adc
pushf
inc
daa
in
dec
imul
(bad)
out
sahf
repz
adc
nop
pop
sahf
mov
fwait
mov
outs
(bad)
jb
ja
arpl
fmulp
pop
lahf
bound
inc
int
lea
xchg
leave
pop
retf
add
sahf
test
jl
sbb
sbb
ss
inc
pusha
xor
jno
dec
add
gs
test
pop
cmp
pop
repnz
mov
leave
or
sahf
mov
add
pop
ins
std
cmc
mov
push
xchg
pop
lock
and
rol
xchg
pop
fisub
pusha
push
mov
mov
int
add
xchg
push
mov
push
push
loope
sbb
push
pop
sbb
and
call
cmps
sahf
push
push
or
sub
and
push
jb
in
mov
xchg
enter
xor
sbb
add
mov
cmp
stos
loop
fcomp
inc
and
movs
jp
cli
repnz
push
(bad)
push
repnz
ret
ret
loop
push
sub
and
push
data16
dec
pop
and
cmp
test
test
loopne
push
cmp
test
jmp
fstp
out
and
popfw
jne
jg
(bad)
shl
in
aaa
(bad)
inc
mov
aas
ja
push
jbe
pop
cld
adc
dec
jnp
dec
dec
daa
mov
mov
fcomp
mov
xor
or
cmp
imul
mov
pusha
mov
adc
loop
shr
cmp
out
stc
push
sbb
fs
pop
push
movs
push
mov
daa
test
jbe
mov
mov
adc
jne
shl
inc
vmovhpd
sahf
(bad)
(bad)
jnp
or
jo
pop
mov
dec
xchg
inc
sub
jmp
jg
pushf
dec
pusha
sbb
adc
xlat
xor
or
xchg
out
xor
or
mov
mov
or
cld
imul
mov
mov
lock
xchg
shl
jae
sbb
sub
xchg
in
add
sub
jne
call
(bad)
mov
dec
inc
cmp
mov
and
pop
hlt
jb
inc
or
call
(bad)
mul
daa
sub
push
stc
mov
xchg
clc
sub
sbb
dec
mov
stos
popf
push
cmp
xlat
mov
mov
into
jl
xchg
(bad)
mov
mov
xchg
pop
cmp
mov
xchg
ja
ds
sbb
fnstcw
jl
inc
fnstcw
xor
push
movlps
xchg
in
addr16
inc
mov
mov
js
dec
js
mov
dec
xor
cmp
out
ror
and
push
mov
cmp
cmp
loopne
jnp
xchg
jns
das
jmp
mov
bound
xor
push
cdq
push
pop
cmp
jns
push
retf
push
shl
mov
cmp
inc
jmp
and
arpl
inc
out
sbb
aas
mov
fwait
aad
push
daa
push
cs
and
mov
and
out
sbb
lds
rep
dec
test
sbb
lock
push
pop
retf
cmp
pop
retf
mov
rol
jno
mov
mov
(bad)
pop
inc
xor
push
and
adc
and
xchg
rol
add
jbe
xor
cs
add
inc
jg
mov
adc
jb
aad
jmp
pushf
shl
mov
je
sub
and
sar
xchg
dec
mov
daa
test
add
push
jle
or
mov
scas
pop
push
fcmovu
retf
mov
cmp
das
std
retf
adc
or
adc
(bad)
sbb
lods
mov
repnz
and
sar
push
ss
test
mov
sub
add
push
push
jl
movs
sub
adc
jmp
and
pop
push
shl
push
push
leave
xchg
inc
xchg
fistp
adc
add
mov
in
cs
xor
rcl
out
cmps
(bad)
fs
call
imul
add
call
outs
lds
(bad)
ja
add
loopne
aaa
aas
push
cmps
fs
and
xor
ret
(bad)
pop
jge
int
(bad)
push
jns
pop
push
xlat
mov
div
mov
mov
mov
shl
popf
sbb
sbb
loop
push
ds
scas
jmp
ss
cmp
int3
mov
mov
adc
cmp
icebp
daa
xchg
pop
or
cli
imul
lea
jb
jb
pop
das
test
jbe
add
cmp
ds
and
outs
push
in
mov
das
outs
jmp
nop
dec
jmp
lods
push
scas
mov
inc
add
and
xchg
jge
pop
sub
mov
add
push
repnz
cdq
aaa
mov
adc
jne
adc
ss
pushf
push
cmp
push
adc
cmp
xlat
push
add
dec
push
adc
jp
icebp
pop
repnz
jl
sar
sbb
push
pop
adc
mov
pop
push
ja
cmp
fild
stos
not
adc
jb
(bad)
sbb
or
mov
mov
pop
scas
cmp
call
icebp
add
dec
ja
lahf
test
jae
cdq
nop
fist
push
or
add
icebp
stc
test
jae
loop
in
lods
sar
hlt
inc
mov
dec
add
sbb
dec
xchg
pop
loop
fimul
(bad)
add
dec
pop
(bad)
popa
mov
mov
mov
div
cmc
dec
pop
dec
aaa
cmp
cmp
add
nop
(bad)
test
test
inc
jnp
sbb
inc
ds
shr
mov
push
clc
test
jbe
or
dec
les
adc
jmp
imul
adc
aad
test
push
mov
xor
inc
push
xor
dec
pop
sub
push
jp
push
add
xchg
and
cmp
and
clc
pop
pop
jns
add
arpl
dec
(bad)
out
cdq
mov
xchg
jge
ret
and
mov
push
fidiv
lea
movs
ret
pop
lea
lods
jmp
mov
fimul
cmps
mov
(bad)
sar
outs
retf
ficomp
jle
jb
add
fsub
(bad)
mov
jno
mov
xchg
dec
xchg
cmc
jg
mov
dec
add
je
loope
jo
mov
add
xor
enter
movs
retf
and
icebp
xchg
rcl
adc
fs
call
sbb
xchg
jnp
sbb
pop
cmp
xor
aas
jl
add
(bad)
hlt
adc
fs
mov
mov
jg
or
out
ds
in
sbb
push
retf
mov
push
rol
cmp
cmps
pop
cmp
mov
(bad)
loopne
cld
shl
sahf
xor
scas
xchg
inc
cmp
sub
or
add
push
movs
mov
push
test
scas
cmp
imul
ja
ins
out
push
push
cli
mov
ss
jae
jne
in
sub
push
push
mov
sar
stos
dec
repz
and
hlt
addr16
mov
xor
in
inc
(bad)
jp
mov
xor
or
dec
cli
outs
mov
inc
push
adc
test
imul
mov
xor
icebp
cmps
retf
adc
pop
xchg
or
cmp
sbb
fsub
sub
neg
(bad)
jg
xchg
aad
pop
test
inc
xor
test
or
mov
retf
lods
dec
xlat
enter
adc
mov
ins
pop
icebp
jbe
mov
loopne
out
cwde
sbb
(bad)
mov
and
mov
(bad)
or
xchg
les
jp
sub
dec
imul
mov
sub
retf
mov
mov
inc
aam
sub
std
xchg
sub
outs
int3
push
push
inc
jge
push
pushf
sub
lock
fsubr
ss
mov
pop
(bad)
mov
sub
sub
test
pop
inc
mov
fstp
ds
nop
mov
xlat
pop
pusha
scas
ficom
adc
push
addr16
test
fistp
add
inc
lahf
adc
and
pop
sti
inc
cs
inc
bndcu
xor
call
xor
jmp
test
jge
mov
ret
in
add
aas
and
dec
mov
ret
loop
xchg
lea
cld
mov
sbb
dec
loope
scas
dec
pop
dec
pop
icebp
fst
add
lock
ror
push
sbb
inc
stc
mov
int
pop
or
add
jg
mov
not
js
xchg
or
(bad)
out
push
clc
jo
fnstenv
mov
js
retf
sbb
xor
add
int3
or
lock
loop
jp
xchg
nop
outs
arpl
test
movs
(bad)
mov
xchg
retf
enter
sar
mov
jmp
popa
imul
inc
out
inc
outs
repnz
mov
lahf
or
pop
and
mov
fnsave
cmp
shr
mov
enter
(bad)
sub
mov
mov
push
popa
jns
xchg
popf
xchg
mov
hlt
push
out
cli
adc
sbb
or
pushf
test
jae
xor
dec
jae
ins
cld
hlt
fistp
cmc
jne
cli
rcl
push
(bad)
mov
clc
sti
pop
in
call
loop
dec
js
dec
mov
or
sub
mov
cmc
xor
pop
daa
pop
push
(bad)
fmul
frstor
dec
mov
shl
mov
cmp
fst
ret
and
stos
daa
jmp
shr
outs
fstp
sbb
aad
pop
or
xchg
js
add
outs
dec
dec
mov
xlat
xor
arpl
jmp
sbb
mul
idiv
pop
jle
pop
cmps
(bad)
rol
fnstcw
jnp
and
dec
sub
mov
mov
cld
cdq
or
rcr
fsub
popa
std
fistp
arpl
cmp
inc
scas
stc
jp
call
icebp
pop
jg
sub
adc
pop
pop
sbb
add
fisttp
push
adc
gs
xchg
mov
stos
mov
sub
clc
aaa
addr16
outs
fist
cmp
fwait
and
jmp
bound
(bad)
sub
dec
cdq
and
sahf
aam
mov
jmp
popa
shr
cwde
daa
xchg
cdq
adc
push
dec
popa
(bad)
movs
test
add
mov
cwde
jmp
and
mov
fnstenv
popf
cmps
mov
test
xchg
mov
mov
or
fadd
fdiv
dec
std
pop
mov
leave
xor
adc
sub
jmp
cdq
bound
out
push
jae
xor
pop
test
movs
cmp
sbb
xchg
ret
mov
jb
enter
les
cmp
(bad)
daa
lock
into
inc
xchg
mov
mov
cwde
imul
mov
jno
push
sti
aas
cmp
cld
or
ins
frndint
ret
ss
cli
push
int
loop
cmp
pop
push
add
push
fldz
test
iret
mov
cmc
stc
xor
out
mov
mov
imul
add
cs
ja
clc
xlat
mov
jecxz
fwait
dec
xor
jg
arpl
jg
sub
stc
push
daa
fstp
test
sub
or
cmp
adc
sbb
xor
fstp
into
push
ss
int
dec
inc
aad
je
and
loopne
sub
add
sbb
xlat
xor
cmc
rcr
gs
mov
into
popf
leave
dec
add
mov
cmp
in
mov
fadd
call
ss
adc
mov
cmp
push
clc
loopne
push
xchg
cmp
data16
ret
in
dec
in
repnz
add
push
(bad)
std
jo
push
jl
or
(bad)
xor
dec
or
loop
mul
cmp
sub
xchg
push
adc
stc
pop
sbb
adc
xor
mov
cmp
mov
xchg
and
and
sub
and
xchg
pop
jecxz
mov
sub
jl
add
lods
pop
push
cld
xor
je
push
pop
add
jae
xor
mov
mov
pop
sbb
mov
mov
or
add
jecxz
jne
inc
cwde
clc
push
push
push
jge
outs
fld
add
mov
pop
cli
outs
push
inc
mov
mov
jecxz
jg
sbb
ret
push
push
dec
mov
sub
sub
test
dec
int
xchg
sbb
fisub
jae
pop
xchg
mov
fstp
rol
dec
retf
nop
sbb
mov
stos
adc
mov
int3
shl
and
daa
add
out
cmp
mov
mov
mov
and
add
sti
dec
cmps
lods
leave
and
mov
mov
mov
push
test
fnsave
push
scas
fnstenv
stos
mov
scas
xchg
pop
fxch
pop
pop
stc
out
bnd
dec
div
jne
loop
adc
dec
mov
xchg
mov
jo
cmp
add
push
sbb
and
lods
and
pushaw
imul
mov
lea
xor
add
daa
push
pusha
in
lock
fild
into
jl
ds
add
dec
scas
call
rol
test
jecxz
jbe
push
xchg
mov
fsubr
ins
jmp
add
or
sub
adc
xlat
enter
pushf
sbb
movs
mov
inc
(bad)
xchg
mov
add
mov
cdq
pushf
popa
adc
dec
out
(bad)
(bad)
outs
out
xlat
mov
jp
loope
lods
je
lahf
in
loope
mov
stc
out
stc
(bad)
push
xor
pop
movs
lock
es
outs
pop
iret
mov
cmp
xchg
cdq
addr16
std
inc
mov
xor
inc
mov
sbb
int3
int3
icebp
out
test
sahf
inc
js
sbb
jg
es
sbb
and
cs
fbld
or
pop
or
xor
mov
sar
pop
pop
stos
test
adc
aas
scas
js
js
xor
add
shl
pop
loop
retf
cmp
(bad)
mov
cmp
jmp
xchg
cmp
and
xor
adc
adc
fwait
mov
dec
or
adc
enter
jnp
push
(bad)
div
test
push
sahf
fadd
cmp
outs
ret
call
and
xchg
mov
or
outs
push
xchg
adc
add
jno
mov
sub
test
sub
lahf
adc
inc
pop
and
sub
mov
jl
das
sub
pop
jne
push
sbb
stc
arpl
add
mov
jo
iret
inc
test
ffree
inc
cmp
jecxz
push
or
mov
or
inc
sub
retf
out
iret
in
inc
xchg
rcr
loope
inc
push
enter
icebp
stos
mov
sub
div
fcom
jge
leave
cmp
add
int
mov
mov
popf
inc
jne
xchg
cmp
cmp
outs
cli
leave
inc
xor
fiadd
mov
daa
sti
dec
out
xchg
xor
daa
fwait
into
cld
cmp
test
xor
ds
inc
scas
in
es
retf
inc
inc
jno
je
and
add
pushf
(bad)
pushf
mov
(bad)
push
js
fld
mov
aas
imul
pushf
sub
leave
loop
and
or
fdivr
call
imul
clc
xchg
nop
or
(bad)
outs
and
sub
inc
iret
and
scas
mov
xor
add
cli
in
sub
or
fnstenv
call
daa
dec
mov
(bad)
clc
mov
dec
jmp
pop
(bad)
leave
mov
sub
arpl
stos
sub
int
sbb
dec
add
xor
jl
in
xchg
dec
adc
inc
jb
arpl
bswap
cmp
retf
sti
mov
call
mov
pop
out
mov
xchg
mov
mov
loopne
cdq
retf
push
imul
xor
xchg
(bad)
sahf
bound
cmp
xor
xor
sbb
mov
pop
adc
aam
test
repnz
jmp
or
enter
xchg
mov
lock
mov
fist
jno
cmc
jb
xor
fadd
cmp
mov
xchg
or
cld
xchg
and
sub
push
or
mov
dec
sbb
repnz
dec
das
xor
stc
jecxz
stos
push
mov
jo
ror
lds
xor
xor
mov
cmpxchg
ret
cmp
stc
inc
test
inc
cmps
pop
jp
dec
loopne
cmc
push
dec
repz
pusha
mov
(bad)
dec
(bad)
clc
sbb
clc
sbb
movs
and
scas
dec
jl
lods
add
cmp
xchg
loop
sbb
ss
in
sub
xchg
or
bound
jbe
stos
jle
lds
nop
push
repnz
(bad)
jns
sbb
mov
xor
rcr
push
xchg
loope
mov
stc
jae
loop
inc
add
in
pop
mov
das
xchg
shl
es
cmp
mov
(bad)
add
movs
sbb
xor
mov
pop
sti
bound
fwait
push
cmp
pop
dec
and
scas
ficom
lahf
stos
mov
dec
cmps
push
js
xchg
pusha
sub
push
sub
inc
(bad)
lods
arpl
push
into
sbb
push
outs
out
(bad)
cli
pop
and
sti
je
in
loopne
add
stos
or
xor
pushf
mov
lea
and
add
loop
and
or
adc
mov
sbb
popa
jmp
cmp
or
cmp
scas
shl
stos
stc
movs
or
mov
hlt
movs
or
fdivr
add
fisttp
jp
mov
mov
sub
mov
mov
sub
sbb
(bad)
sbb
jl
out
pusha
jge
pop
(bad)
push
lock
pop
scas
ins
mov
dec
ins
loope
out
call
in
call
mov
in
pop
mov
xchg
dec
pop
mov
sbb
adc
push
loopne
mov
mov
scas
mov
stos
imul
(bad)
jno
push
call
add
add
arpl
clc
and
(bad)
call
cmp
in
pop
dec
and
and
jb
into
das
inc
pop
test
cwde
(bad)
cld
jo
aas
jecxz
test
cmp
daa
dec
call
dec
adc
mov
xchg
xor
xor
shr
lea
xchg
retf
and
mov
out
neg
mov
jnp
inc
scas
mov
dec
fs
ja
pop
push
es
adc
movs
xchg
(bad)
(bad)
aaa
jns
loop
xor
lods
lock
and
push
js
loopne
inc
jne
gs
cmp
mov
cmp
sbb
js
or
and
fist
mov
les
lods
or
sti
out
xlat
sub
or
arpl
or
mov
xor
into
movs
pop
stos
shl
enter
push
das
daa
mov
nop
add
mov
add
xor
cmp
out
(bad)
jbe
(bad)
adc
dec
scas
call
hlt
jl
sbb
or
cs
call
jg
mov
mov
mov
or
imul
arpl
(bad)
push
mov
jmp
pop
into
jge
inc
imul
cmp
jae
pop
loopne
mov
stc
xor
jbe
pop
pop
dec
out
loopne
shufps
pop
icebp
mov
pusha
cmps
fs
and
add
sar
push
shr
cmps
adc
mov
sbb
jnp
cmp
mov
push
in
jge
sbb
cmps
xlat
mov
stos
loopne
inc
inc
fnstcw
push
aam
xchg
xchg
mov
std
inc
mov
add
mov
fild
in
adc
inc
mov
popf
in
sbb
std
sti
xchg
pusha
sbb
ins
rcl
stos
scas
call
adc
xor
push
add
adc
test
leave
add
cmp
out
ss
jp
adc
xlat
ss
mov
push
xor
arpl
jmp
daa
popf
adc
mov
ficom
in
push
mov
pop
push
mov
test
cmc
das
outs
mov
pop
mov
push
call
push
push
ficomp
loopne
jecxz
es
hlt
repz
add
mov
jp
loop
rol
ja
into
pop
mov
fadd
dec
mov
(bad)
push
retf
and
xchg
add
xchg
scas
mov
xor
mov
test
mov
dec
adc
jno
and
icebp
mov
lock
push
aad
call
out
push
jne
sbb
mov
xchg
sub
cmps
in
out
ret
dec
push
add
in
dec
dec
xchg
push
in
ds
push
or
and
fild
ja
push
(bad)
jp
ret
sub
pop
pop
xchg
out
push
push
fidivr
faddp
gs
cmp
sub
aam
pusha
inc
cmc
add
pusha
jne
pop
fnstenv
and
sbb
test
std
add
out
adc
pop
out
es
inc
cmps
jg
pop
imul
fisttp
nop
sub
push
dec
test
movs
les
inc
sbb
sbb
xor
ffreep
mov
mov
imul
add
inc
dec
xor
xor
scas
dec
pop
add
arpl
push
(bad)
mov
mov
cmp
or
fucomp
adc
ins
xchg
pusha
loopne
test
push
shl
scas
mov
mov
mov
pop
les
out
movs
push
pop
pop
(bad)
cmp
test
shl
loope
gs
aad
in
fidivr
bound
daa
adc
mov
jle
sbb
fistp
scas
add
push
outs
adc
in
aad
adc
jo
popf
push
icebp
xchg
mov
inc
inc
adc
sar
(bad)
sub
and
and
stos
add
fs
or
and
out
stos
sbb
pop
(bad)
xchg
popa
mov
add
add
adc
rcl
xor
cwde
pop
std
sub
mov
imul
mov
or
push
aam
ror
sbb
xlat
shl
sub
and
adc
enter
scas
pop
push
dec
mov
xchg
inc
inc
xchg
inc
add
xor
jecxz
and
movs
mov
xchg
sbb
je
push
les
jnp
adc
icebp
add
sub
jmp
or
sbb
sbb
mov
les
xor
and
mov
sub
sar
push
push
sub
dec
popa
xlat
and
sbb
lods
jnp
or
fsubr
aam
inc
loope
sahf
xor
sahf
add
jae
mov
pushf
mov
or
xchg
mov
outs
ret
test
jnp
lahf
cmp
xchg
jmp
mov
pop
in
xchg
rcl
xchg
mov
mov
pop
xchg
mov
mov
rol
push
rol
add
and
pop
cli
jae
lds
mov
xchg
mov
add
jg
adc
push
push
(bad)
jecxz
gs
int3
nop
mov
test
push
add
ja
(bad)
(bad)
xor
inc
shl
sbb
cmp
arpl
cmp
imul
push
fidiv
ret
stos
sub
jg
inc
adc
cmp
cmp
sbb
mov
imul
mov
lea
adc
cmps
shl
sbb
jno
(bad)
shl
push
sti
mov
and
or
mov
ret
xchg
sbb
jnp
xor
and
aam
xor
push
inc
ret
sbb
retf
std
daa
(bad)
cmp
sbb
adc
mov
lock
mov
inc
push
inc
xchg
and
mov
xor
xchg
mov
ror
mov
ficomp
fcom
imul
xor
iret
(bad)
fstp
leave
mov
ror
dec
adc
shl
(bad)
test
mov
test
cdq
push
out
ror
sub
and
lahf
test
stc
imul
push
pop
std
test
jp
jae
(bad)
xor
bound
push
sti
sti
pop
or
cmp
push
iret
xchg
or
(bad)
rcl
fild
cmp
pop
add
aas
std
call
bnd
cld
push
push
lods
inc
mov
or
popf
pusha
lahf
push
aaa
sbb
pop
jbe
mov
mov
dec
nop
push
or
or
fdivr
pop
mov
scas
mov
pop
fmul
xchg
in
sub
pop
mov
cmps
mov
xchg
adc
arpl
or
loopne
xchg
test
retf
xchg
and
stc
mov
lods
ret
data16
cmps
sbb
outs
adc
pushf
js
mov
mov
stos
lods
jmp
sbb
lods
mov
(bad)
rcr
fdivr
pop
sti
fwait
repz
popf
outs
movs
int3
cs
je
push
xor
inc
push
out
fnstenv
mov
loop
push
int
out
and
fidiv
pop
jne
dec
dec
shl
out
jg
pop
pop
aas
xchg
or
(bad)
loopne
dec
dec
push
(bad)
loop
stos
in
ror
into
outs
dec
add
cwde
push
push
pop
(bad)
shr
adc
scas
call
lea
mov
les
cmc
push
adc
std
jb
cmp
or
xchg
pop
jg
imul
call
outs
mov
sbb
es
mov
call
sbb
emms
ret
sbb
movs
repnz
fcomp
cld
dec
pop
rol
les
pop
mov
push
das
mov
nop
mov
mov
or
div
adc
pop
adc
push
mov
es
retf
arpl
retf
dec
(bad)
aad
push
stos
xchg
out
jg
inc
mov
xor
sete
xchg
fcomip
test
jnp
les
sub
cdq
outs
aam
xchg
jbe
xor
dec
imul
pop
or
xor
fs
pop
add
jmp
pop
push
lock
shl
mov
sysret
iret
(bad)
rol
or
jl
cmp
(bad)
jge
into
es
push
js
ret
int3
retf
pop
aaa
and
mov
or
xor
push
push
fxch
or
push
fldcw
scas
and
arpl
add
pop
push
pop
push
xor
dec
sbb
jno
repz
clc
inc
lock
(bad)
(bad)
cmp
ins
xor
adc
push
dec
clc
sub
iret
int3
sbb
retf
(bad)
mov
push
xchg
sbb
ja
mov
clc
pushf
or
jne
cmc
lods
adc
test
jle
pop
xlat
repz
pop
sahf
shl
out
dec
in
cwde
push
dec
xchg
inc
int
push
push
pop
js
mov
dec
push
(bad)
or
fs
add
sub
lock
call
mov
bound
in
fs
sub
sub
inc
test
je
xchg
xor
sbb
and
(bad)
mov
scas
xchg
cmc
stc
or
mov
pop
lea
xchg
add
mov
sub
or
js
test
leave
movs
rol
pop
jmp
mov
xchg
test
mov
lock
out
mov
sub
add
nop
ret
dec
mov
pop
sub
pop
test
loop
jmp
daa
pop
pop
int3
shl
hlt
repnz
sbb
neg
sar
cmp
xor
dec
(bad)
or
fwait
js
not
mov
loop
xor
ja
icebp
mov
jle
push
xor
adc
dec
rcr
dec
ret
imul
push
xor
xchg
fild
das
xor
pop
neg
out
dec
(bad)
mov
ret
in
pop
mov
adc
(bad)
int
mov
out
xlat
mov
mov
cmps
xor
popa
lea
and
sub
sub
rcr
dec
push
ret
cdq
jmp
imul
dec
push
jg
push
leave
ret
push
imul
hlt
cs
pop
lock
lods
call
cmp
neg
push
xor
test
loop
jp
outs
fidiv
ds
test
pop
inc
push
sub
lock
in
cmp
hlt
sub
hlt
push
pop
jnp
imul
call
xor
push
or
push
pusha
fs
dec
ja
(bad)
ins
into
mov
pop
ret
out
fst
ins
cmp
pop
jmp
xor
and
jecxz
fld
dec
aas
das
fist
jno
add
ins
add
mov
popa
fcompp
(bad)
dec
nop
pop
lock
leave
and
sahf
hlt
lods
pop
in
ret
inc
sub
popa
xchg
pop
in
pop
inc
enter
ins
imul
dec
mov
fcmovbe
sbb
ds
daa
and
xchg
cmps
adc
inc
cmc
pop
pop
dec
xchg
cmc
int
rcl
in
xchg
sbb
pushf
dec
xchg
stos
loopne
(bad)
shl
or
in
jmp
xor
or
fild
ja
sbb
pushf
and
fcmovnu
ss
iret
ds
hlt
push
dec
or
mov
cld
mov
mov
dec
dec
frndint
push
and
shr
dec
rol
mov
retf
fiadd
int
dec
outs
ss
inc
imul
push
sti
cdq
cmp
mov
add
(bad)
in
fcomp
push
test
setl
push
mov
mov
pushf
mov
popf
mov
clc
into
inc
mov
outs
inc
push
stos
pop
out
xchg
test
adc
inc
add
scas
or
mov
imul
jmp
lea
dec
adc
std
mov
cmp
add
pop
cli
sar
mov
popf
mov
push
or
xor
sbb
mov
dec
pusha
xchg
out
ins
in
lea
jg
inc
outs
ss
int
jbe
jb
rcl
mov
ror
cmp
movs
pushf
cli
dec
inc
jl
pop
sahf
(bad)
loop
in
dec
mov
mov
fwait
sti
inc
outs
or
loope
inc
mov
xor
add
dec
(bad)
mov
lahf
adc
pop
cmp
(bad)
scas
and
shl
inc
mov
fs
out
dec
jp
ds
push
cmp
sti
sbb
into
inc
aam
out
and
cmp
sub
rdmsr
leave
fisttp
out
imul
mov
add
add
adc
or
mov
or
sti
push
nop
inc
fld
xchg
xor
fdivr
imul
jae
cwde
arpl
shl
shl
iret
xor
or
(bad)
movs
pop
pop
test
add
stos
pusha
out
sub
or
mov
xor
test
inc
daa
aam
arpl
pop
and
fwait
(bad)
rol
push
rcr
xlat
out
mov
(bad)
ja
sbb
outs
stos
mov
out
push
mov
jle
mov
xchg
(bad)
into
jo
add
int3
fisub
mov
out
push
jmp
dec
jns
dec
jns
ins
les
fucomip
(bad)
sbb
out
bound
and
in
inc
movs
inc
cld
mov
rol
cmc
push
cdq
int
stos
xchg
cmp
push
xor
scas
rcl
push
jne
js
jae
push
inc
jae
cmps
push
dec
mov
scas
nop
movs
add
pop
popf
lods
lods
xor
or
mov
in
sbb
lods
pop
stos
ds
jbe
out
push
xchg
xchg
xor
inc
jb
stos
out
add
adc
cmc
adc
push
into
cmps
in
fist
cmp
out
cmps
les
sahf
push
sbb
loope
sahf
jbe
call
iret
in
jmp
mov
and
(bad)
sub
neg
test
xor
cmp
xchg
aas
sahf
std
and
lds
push
cdq
out
or
repz
cmp
sub
fcomp
push
jmp
addr16
loope
lahf
push
arpl
leave
std
cli
outs
inc
and
fld
push
call
aam
iret
(bad)
out
(bad)
fsubp
test
mov
outs
mov
and
data16
popa
imul
mov
fwait
sub
cmp
sub
cmp
scas
not
mov
cwde
pop
mov
mov
iret
sbb
xor
add
sar
out
das
pop
mov
adc
lahf
pop
loope
push
outs
dec
(bad)
ret
call
loopne
mov
jmp
or
test
sub
int3
hlt
cmp
arpl
pop
xor
and
or
push
hlt
imul
test
xchg
call
mov
leave
(bad)
cmp
cmp
lock
add
jne
push
push
(bad)
in
jmp
xor
jb
and
(bad)
inc
ins
inc
mov
cmp
repnz
add
cmp
dec
daa
in
unpcklps
in
je
mov
dec
popf
je
ret
movs
mov
xchg
jg
sti
lods
inc
mov
jns
movaps
lock
ficomp
mov
dec
mov
ins
mov
outs
in
in
mov
js
dec
xor
sub
or
popa
push
xor
cmp
div
mov
stos
push
call
jmp
aad
cmp
xor
fstp
fimul
or
push
jb
mov
dec
cmp
mov
jno
(bad)
jns
xchg
shr
sbb
mov
mov
daa
cli
push
xor
and
sbb
inc
xchg
jecxz
add
into
(bad)
xor
cmps
inc
lods
jo
inc
pop
int
cli
xchg
inc
call
mov
xchg
das
cmp
and
retf
imul
cmp
adc
cmps
cmps
jle
dec
pop
ret
or
out
loope
and
repz
arpl
bound
loop
je
sub
dec
add
pop
push
push
nop
std
sahf
shr
(bad)
iret
adc
mov
pop
adc
xor
add
fs
arpl
or
mov
pop
sub
aas
mov
mov
pop
pusha
jp
xchg
shl
pop
cmp
int3
fild
std
push
cmp
popa
inc
push
add
cmp
add
scas
pop
mov
xchg
repnz
lds
outs
aam
repz
inc
mov
retf
and
cmp
pop
push
jp
(bad)
hlt
mov
pop
sub
retf
lahf
ds
cmp
cli
pop
sbb
retf
sbb
or
cmp
push
pop
sti
(bad)
in
fdiv
cmps
push
cmp
dec
mov
movs
jb
into
mov
mov
fcomp
enter
push
in
test
stc
inc
xchg
jne
jmp
or
mov
mov
pop
in
inc
mov
sub
mov
sub
xor
into
aas
je
fwait
add
sbb
adc
ret
pop
lods
push
mov
imul
gs
cmp
test
jmp
xchg
imul
das
mov
push
out
add
loop
jle
cmc
add
xor
ins
sti
xor
inc
adc
cdq
pop
jb
repz
xor
sub
sahf
or
jmp
jle
cmp
gs
xor
cmp
cmp
pop
(bad)
ja
stos
mov
ds
mov
loope
mov
stos
add
push
mov
in
jg
int
cmp
add
jne
cld
sub
jae
mov
and
(bad)
pop
xor
ja
xchg
jecxz
scas
ja
sub
cli
sbb
dec
popa
inc
xchg
cld
outs
mov
popa
or
mov
popa
int
xor
daa
sub
lods
in
lea
inc
inc
fs
fbld
retf
ja
mov
push
mov
push
mov
out
mov
(bad)
mov
pop
mov
pop
dec
lahf
cdq
test
mov
jge
and
jmp
aaa
movs
and
adc
lds
in
out
pop
inc
test
je
cmp
lods
xor
aas
iret
mov
push
ins
ret
lods
cmps
mov
and
cmp
retf
ret
xchg
jmp
or
pop
or
jmp
dec
push
xchg
dec
cs
arpl
mov
jge
xor
sub
mov
and
bound
jns
jp
mov
mov
outs
adc
inc
lock
pop
adc
test
dec
cld
call
dec
push
mov
enter
movs
cmps
bound
or
add
cdq
imul
sbb
sub
mov
cmp
(bad)
cwde
mov
cld
push
push
enter
sbb
jge
stos
popf
cs
mov
hlt
add
jmp
icebp
mov
mov
inc
sbb
xchg
mov
(bad)
mov
and
enter
dec
jge
bound
lock
sub
test
cmp
sbb
lahf
call
pop
sbb
or
cmps
xchg
sahf
mov
xchg
adc
sub
loopne
and
or
ret
jecxz
jns
loope
dec
in
repz
jae
push
push
in
mov
movs
stos
mov
(bad)
in
ret
fcom
sub
jle
mov
retf
into
loop
sbb
pop
jno
clc
xchg
ins
push
mov
(bad)
mov
jae
mov
movs
pop
xchg
not
leave
test
xchg
das
call
cmp
and
mov
push
cmp
xchg
scas
aad
mov
mov
test
shr
lods
aas
pushf
aam
mov
jne
mov
out
ret
(bad)
clc
movs
xchg
xor
hlt
call
adc
pop
dec
sbb
cwde
adc
and
and
jl
push
cli
sbb
dec
loop
ins
inc
push
(bad)
sahf
call
icebp
dec
jmp
mov
inc
in
cmp
je
jp
jb
inc
sahf
gs
jne
push
imul
daa
and
push
mov
pop
jge
add
aam
push
outs
cwde
add
cmp
dec
daa
(bad)
icebp
or
dec
(bad)
rcr
jae
xor
mov
dec
scas
ins
inc
fld
and
in
mov
xor
popf
mov
retf
jmp
push
jp
pop
push
adc
outs
push
lods
xor
retf
movs
adc
mov
xchg
jle
push
fimul
je
loop
popf
scas
in
cmps
cmp
push
sub
mov
or
mov
inc
arpl
(bad)
cmps
jle
xor
and
mov
clc
xchg
stc
and
dec
mov
mov
gs
sub
and
arpl
and
mov
pop
dec
sbb
jmp
in
cmc
or
push
xchg
mov
movs
out
adc
xchg
jecxz
xlat
xor
xchg
jg
mov
fcomip
stos
cmps
in
pusha
inc
cdq
scas
cs
jle
ja
movs
out
mov
shr
pop
test
cmp
loope
jge
jmp
loop
test
(bad)
nop
mov
inc
xor
jmp
popa
xchg
ins
cli
je
out
das
cmp
add
test
pop
mov
icebp
loopne
push
not
dec
or
mov
or
xchg
pop
mov
push
mov
div
retf
imul
int
push
test
outs
push
xlat
hlt
mov
cmp
js
jmp
or
jp
loop
sar
add
lds
repnz
sub
mov
jmp
dec
push
inc
sar
cmp
cwde
sbb
test
pop
mov
xor
popf
les
test
ins
pop
lds
dec
dec
scas
aaa
adc
ins
pop
(bad)
mov
push
push
aam
loope
adc
mov
and
sahf
rol
pusha
icebp
push
scas
mov
xchg
mov
dec
sbb
loopne
xor
and
mov
stos
push
mov
rol
retf
pop
adc
leave
push
fidiv
cmps
in
out
loope
fidiv
cmp
or
pop
dec
into
cmp
sbb
jge
mov
pop
xchg
mov
sub
mov
je
mov
pushf
sbb
nop
ins
add
jb
int3
loop
gs
push
push
cmp
sub
(bad)
jns
adc
cmp
popa
xor
(bad)
shl
movs
repnz
adc
daa
jmp
dec
sub
aam
sub
(bad)
sbb
mov
xor
xchg
jmp
push
push
nop
and
(bad)
js
sar
sub
mov
test
(bad)
mov
popa
shr
cmps
cmp
int3
addr16
in
(bad)
(bad)
sub
pop
fdiv
js
or
popf
xchg
xor
dec
fs
loop
pop
pop
xor
clc
dec
fwait
dec
jmp
shl
call
adc
inc
cli
in
nop
jg
sub
fwait
test
movs
add
mov
and
or
sub
iret
call
sub
push
out
dec
aas
mov
jnp
mov
lahf
sub
xor
aaa
sub
jecxz
ss
push
fwait
xchg
shl
push
jmp
movd
xlat
das
scas
pop
into
fs
dec
adc
stc
in
and
gs
push
out
mov
sbb
retf
dec
push
sbb
or
or
cmp
pop
or
mov
ror
cmp
fscale
in
adc
shr
dec
cmp
aad
addr16
pop
mov
sub
sub
dec
loope
cmp
mov
inc
je
nop
or
(bad)
pushf
clc
mov
imul
mov
loop
ins
mov
stos
imul
fld
mov
inc
(bad)
xchg
pusha
add
push
aaa
movs
out
cli
test
je
cmps
clc
popa
cs
sub
pop
popf
popa
mov
jb
stc
(bad)
test
inc
pop
gs
sub
shr
pop
adc
jp
jnp
xor
dec
scas
es
inc
xchg
aas
push
add
test
push
sub
sub
jo
adc
adc
repnz
mov
sub
dec
mov
mov
fidiv
lods
jne
imul
mov
arpl
cdq
mov
mov
add
mov
icebp
test
sub
in
and
pop
add
mov
popa
xor
in
pop
cmp
dec
ret
test
push
(bad)
fld
jbe
add
lods
or
add
fwait
cld
mov
cld
ins
and
or
push
push
fbld
adc
jmp
inc
cwde
mov
mov
movs
ins
xor
and
(bad)
adc
pusha
jnp
arpl
data16
lods
cld
xchg
lods
aas
cmp
movs
push
and
fs
jno
clc
mov
popa
mov
cmps
aas
sbb
xor
push
int3
add
dec
stos
mov
icebp
icebp
into
ret
push
rcl
bnd
test
or
sahf
xchg
jae
push
je
clc
mul
push
mov
jp
xchg
popa
cmp
inc
xor
mov
in
cmp
fs
outs
jge
retf
mov
mov
adc
cmp
test
sub
push
sub
push
pop
jmp
and
inc
cli
test
(bad)
or
lock
outs
rcr
sbb
xor
sbb
(bad)
daa
das
retf
pop
not
data16
mul
jno
xchg
mov
loopne
xchg
pusha
pop
xchg
int3
imul
cmp
sbb
and
std
cli
dec
push
xchg
sar
cwde
outs
xchg
cld
jg
push
or
sbb
inc
push
stos
out
cmps
stos
lock
push
or
xchg
(bad)
dec
jno
pushf
mov
arpl
fmul
ficom
ins
lds
sbb
nop
push
lock
sar
cmp
pop
mov
fiadd
sbb
jmp
pop
sub
mov
sub
jge
std
cmp
jae
imul
fs
mov
test
mov
sub
loop
movs
adc
(bad)
push
or
jle
and
xor
iret
xchg
jle
nop
add
rcr
mov
stos
push
scas
pop
(bad)
mov
inc
adc
push
mov
xor
adc
mov
dec
iret
sub
add
repz
ds
shl
dec
sahf
sbb
lods
scas
and
adc
sbb
in
add
push
adc
xchg
cmc
cmp
cli
pop
fnstcw
fs
lods
xor
pop
test
jg
dec
xchg
xor
add
cs
jmp
jno
jno
fst
push
fadd
lahf
add
mov
popf
pusha
nop
mov
retf
fmul
arpl
sahf
adc
pop
pop
fadd
mov
cmc
cmp
jno
stos
ret
mov
imul
mov
inc
fwait
xchg
pop
xchg
popa
out
mov
cmp
das
gs
pushaw
neg
imul
pop
cmp
push
out
inc
movs
and
jp
xchg
lock
lahf
add
pop
scas
scas
cmp
in
xor
ror
dec
test
mov
push
popf
fbld
sbb
je
or
sub
nop
test
loope
imul
push
imul
mov
ja
(bad)
adc
xchg
sbb
adc
mov
loope
and
and
pop
add
ins
mov
popa
inc
in
push
jbe
jp
xchg
cmc
xchg
pop
movs
call
lock
mov
inc
lods
fisub
fst
mov
or
sub
xchg
pop
out
push
fwait
and
retf
sub
pop
and
loope
lods
dec
push
jl
clc
jle
(bad)
test
add
sbb
aas
out
push
push
retf
cmp
sti
push
cmp
enter
inc
sbb
fidivr
push
add
nop
loope
mov
sbb
adc
cmp
int3
mov
jecxz
adc
out
mov
jno
pop
pop
pop
mov
pop
ja
and
pop
cmc
arpl
call
add
jbe
xor
sub
dec
push
adc
or
xchg
loopne
adc
fucom
and
cmp
jae
cmp
mov
sub
aas
inc
cmp
add
std
mov
push
adc
jbe
inc
jnp
xor
(bad)
(bad)
pop
fistp
jp
loope
push
pop
xchg
aaa
dec
jl
push
call
(bad)
mov
shr
fbld
ficomp
mov
xor
repz
inc
mov
test
xor
aaa
adc
(bad)
out
push
adc
icebp
mov
(bad)
sbb
push
jmp
fsubr
sub
xchg
push
std
cld
xchg
shr
push
in
in
jmp
imul
push
loope
xor
cmps
mov
retf
in
mov
push
or
fisttp
in
jp
cmc
sbb
add
and
aas
push
jp
cli
(bad)
xor
xor
loop
clc
les
int3
xor
mov
in
leave
cdq
mov
pusha
and
in
jmp
push
loope
repnz
inc
jl
imul
shufps
jne
push
int3
inc
cmps
or
sti
sar
adc
rcl
in
in
nop
loope
mov
jmp
ret
movs
(bad)
jae
inc
add
xor
dec
cdq
sar
(bad)
cmp
je
push
inc
push
jg
cmc
(bad)
in
mov
rcr
nop
shl
mov
out
cmps
mov
or
shl
push
xchg
push
sub
retf
mov
out
sub
sub
movs
ret
and
and
test
adc
inc
push
mov
fs
jge
icebp
sub
popa
gs
add
inc
out
repz
cwde
sbb
(bad)
dec
dec
sahf
mov
push
push
xlat
arpl
in
pop
jnp
dec
xchg
xchg
push
ins
aaa
mov
es
sbb
dec
rol
adc
adc
pop
and
cmp
pusha
call
xor
push
mov
cmps
outs
xor
sub
stc
mov
xlat
push
ds
daa
mov
mov
or
(bad)
mov
addr16
mov
(bad)
cld
cmps
inc
lahf
mov
ss
mov
and
je
lods
fs
inc
or
push
mov
aam
adc
ins
pop
mov
retf
clc
adc
or
xchg
pop
xor
and
out
fcomp
add
pop
push
dec
xor
push
cdq
mov
mov
push
sbb
shr
inc
cs
mov
cmps
ins
or
bound
cmps
mov
jecxz
pop
neg
adc
mov
in
xor
mov
popa
pop
jl
fs
push
mov
hlt
cmp
cmp
and
jg
push
lods
inc
cmp
fistp
fistp
cdq
shl
mov
(bad)
mov
arpl
idiv
push
pop
cmps
sub
leave
hlt
fimul
stc
pop
stos
sub
rcl
push
adc
imul
dec
lock
call
xchg
cmp
mov
in
fimul
push
sbb
sar
cmp
xchg
ret
push
popa
fcmovu
ret
xchg
xor
pusha
cmp
and
fndisi(8087
mov
imul
ret
enter
cld
sub
dec
push
mov
sub
sub
push
mov
sbb
mov
not
nop
dec
leave
fild
mov
sub
mov
pop
cwde
stos
pop
cwde
(bad)
imul
aad
pop
gs
stc
push
or
pop
pop
push
xor
pop
sub
fldcw
stc
cmp
shl
and
in
pop
pop
jmp
xchg
inc
xor
stos
retf
arpl
sub
in
xor
out
jmp
in
lods
ins
xor
sub
das
and
repz
movnti
and
jmp
add
xchg
mov
xor
sbb
outs
push
cmp
jp
mov
jecxz
xchg
scas
enter
cmps
push
adc
sub
add
in
shl
inc
stos
adc
jbe
or
int
and
sar
adc
loopne
pop
and
repz
ins
add
add
pop
test
(bad)
and
or
out
popf
mov
cmc
(bad)
popa
(bad)
and
cmps
cli
cmps
jnp
dec
dec
adc
jae
pop
mov
pop
xor
and
cmp
sub
retf
cmps
fnstenv
retf
in
movs
jnp
cmp
jecxz
repnz
les
out
repz
pop
dec
mov
jp
ffreep
pop
or
dec
leave
pop
fdivr
add
js
xchg
mov
and
sub
fwait
shl
or
neg
in
inc
adc
aam
jmp
test
xchg
aad
add
pop
or
pushf
mov
pop
arpl
sbb
bound
sahf
adc
stos
(bad)
or
jo
aam
leave
jg
push
test
repz
push
inc
and
(bad)
mov
jb
and
inc
out
or
iret
aam
out
bound
cmps
fsub
fstp
jae
out
inc
or
jo
xchg
sbb
cmp
cli
add
sub
adc
sbb
hlt
mov
leave
stos
hlt
nop
loop
xor
daa
jb
bound
mov
lods
std
jg
mov
sub
jl
sub
jno
pop
jmp
sub
jno
fisubr
cs
mov
popa
fimul
mov
pop
jle
outs
mov
loopne
ss
sub
mov
ja
xchg
inc
sub
pop
int3
inc
sbb
sahf
and
js
push
fwait
sub
jbe
inc
sar
jnp
dec
mul
sub
mov
xor
out
adc
stc
adc
pop
xchg
shl
test
out
neg
xor
mov
jmp
push
stc
ret
push
sub
fwait
jmp
inc
mov
outs
iret
cmps
popa
ins
stos
push
jg
sub
daa
or
out
daa
pop
imul
retf
sbb
gs
mov
out
sbb
push
out
and
mov
movs
daa
imul
adc
cld
(bad)
jmp
ror
jns
movs
test
idiv
in
cmp
(bad)
pusha
in
cmc
mov
dec
push
xor
mov
xchg
jg
jno
cwde
sahf
in
and
inc
icebp
les
(bad)
sti
inc
pushf
mov
dec
push
outs
fs
repz
mov
int3
push
cmp
cmp
outs
ficom
test
(bad)
mov
(bad)
mov
adc
ss
stos
setnp
outs
pop
scas
lahf
xor
jge
mov
lods
mov
mov
mov
mov
cmc
lock
gs
in
lea
in
mov
or
sbb
arpl
and
jp
cmp
mov
and
and
push
pop
or
jge
xchg
cld
jge
shr
ins
retf
aad
repnz
cmp
xchg
sub
fdivr
add
adc
fmul
xor
sti
std
jl
lods
jmp
loop
shl
push
xchg
in
dec
or
fisttp
aam
aam
mov
icebp
fst
add
or
xchg
icebp
jbe
bound
in
push
cmp
jo
mov
jg
jo
sub
mov
dec
in
sbb
add
mov
(bad)
pop
and
xchg
sar
mov
sub
pop
pop
xchg
test
call
add
rcr
fcomi
inc
pop
(bad)
movs
arpl
jle
add
jnp
inc
xchg
dec
mov
fsubrp
add
repnz
push
lahf
call
popa
adc
hlt
(bad)
lods
neg
add
dec
repz
and
fucomp
sub
xchg
repnz
jo
in
jmp
add
push
jne
mov
mov
pop
adc
les
lods
popf
mov
ja
xor
jae
into
ss
xor
cmp
cmps
arpl
retf
dec
jne
test
add
sbb
stos
daa
cld
sub
rcr
add
xchg
and
stos
les
dec
pop
adc
leave
js
adc
leavew
push
rol
scas
fist
inc
das
mov
or
lock
inc
and
arpl
clc
add
aas
shr
mov
adc
pop
repnz
mov
jb
mov
mov
cmps
push
gs
jae
sbb
or
fidivr
cdq
cmp
bnd
push
rol
fnstsw
push
pushf
or
sub
push
fisubr
int
stc
ss
dec
iret
ret
sbb
add
push
je
pop
shl
inc
inc
push
cli
push
das
pop
lea
mov
lea
pop
add
std
xchg
inc
dec
xchg
into
scas
and
inc
inc
call
xchg
xor
adc
repz
outs
mov
and
inc
lods
gs
hlt
jge
mov
(bad)
ror
and
js
jl
xor
shl
into
mov
xchg
xchg
or
or
xor
inc
and
mov
add
outs
pop
sbb
sbb
shl
test
xchg
and
dec
loope
cdq
adc
movs
shl
pop
mov
ficomp
ret
lods
nop
add
jno
icebp
mov
sub
fndisi(8087
cmps
jbe
fidiv
icebp
fild
sti
sbb
push
movs
mov
mov
shr
test
inc
xor
jns
adc
repnz
rol
adc
dec
sbb
add
out
sub
lea
cs
jns
dec
fisttp
test
mov
call
push
jg
jno
and
inc
mov
inc
push
jg
aad
scas
or
jp
jno
ret
and
xor
mov
inc
mov
pop
xchg
cmp
sar
or
arpl
xor
aas
pop
sbb
(bad)
shr
mov
push
in
shl
nop
outs
adc
imul
icebp
add
push
mov
xchg
lds
nop
jg
jl
sbb
sub
xor
inc
pop
cmps
mov
ins
jno
mov
mov
out
sbb
mov
loopne
inc
push
inc
sub
aam
sbb
lock
push
scas
sub
sub
jmp
dec
fst
push
pop
xor
call
cmp
ret
sbb
(bad)
mov
pmulhw
xlat
int3
pmulhw
clc
out
sub
xor
mov
enter
in
in
mov
jmp
stos
and
sti
adc
push
out
pop
dec
fcomp
push
stc
inc
ins
pop
push
pusha
push
push
cs
das
sbb
cmp
mov
sbb
jp
icebp
mov
mov
mov
push
jno
inc
and
dec
and
out
stos
mov
mov
ins
sub
and
inc
mul
pop
ret
shr
push
or
mov
xchg
out
idiv
movs
adc
sub
pop
sbb
ss
or
jg
nop
jl
mov
sbb
sub
push
nop
dec
add
xor
ins
inc
mov
cdq
icebp
or
xchg
xor
and
push
inc
push
adc
push
xchg
jmp
mov
repz
cmps
icebp
mov
fs
in
jmp
sub
clc
outs
mov
(bad)
sahf
mov
pop
(bad)
fst
inc
retf
pop
and
xchg
cli
add
aad
jno
pop
aam
and
dec
stos
jbe
fidivr
mov
push
dec
xchg
pop
sbb
mov
jae
stos
imul
sub
jle
mov
sub
stos
fwait
inc
inc
test
pop
mov
xchg
test
push
sbb
cmps
pop
pop
cmp
hlt
das
fsub
fadd
xor
js
mov
imul
jnp
sbb
(bad)
or
add
push
test
dec
outs
pop
jp
jmp
and
repnz
ficomp
fadd
(bad)
imul
jno
ret
push
or
aas
lahf
dec
in
cli
push
movs
add
pop
aaa
jge
mov
(bad)
repnz
push
iret
lock
push
mov
push
(bad)
jbe
pop
in
jbe
adc
jp
sub
inc
imul
(bad)
sbb
or
popa
dec
xchg
(bad)
popa
ja
mov
jno
xchg
pop
ret
cdq
push
(bad)
and
pop
mov
add
jae
out
adc
icebp
sub
retf
dec
(bad)
jbe
fist
(bad)
pop
pop
movs
push
add
add
ds
push
xor
add
fwait
adc
ret
mov
jne
pop
adc
int3
xchg
push
xor
sbb
xchg
jmp
popf
mov
cdq
enter
mov
out
cmp
jne
push
daa
mov
stc
fcomp
cmp
sti
rol
push
pop
stc
std
or
xor
inc
unpckhps
sub
das
int3
icebp
sbb
mov
xor
pushf
cmp
jb
xchg
sub
les
xchg
mov
pusha
cmp
xchg
outs
rol
movs
daa
sbb
dec
jae
test
dec
les
mov
sub
pop
jb
aam
sbb
dec
retf
stos
or
imul
or
inc
cmp
push
jecxz
sub
jns
hlt
test
adc
mov
iret
mov
lea
mov
mov
sub
aad
mov
push
sub
fistp
pop
bound
or
imul
(bad)
mov
push
out
push
push
xchg
or
ins
xchg
push
es
push
mov
mov
and
xor
mov
sti
adc
inc
cli
cmc
fstp
ret
leave
add
add
dec
cmp
mov
add
mov
push
aam
xlat
jno
inc
dec
pop
push
jb
and
nop
les
cs
or
xchg
mov
add
dec
call
cmp
imul
aad
sub
fstp
scas
fst
cmp
bound
jmp
xchg
repnz
in
jecxz
inc
mov
js
loopne
pop
out
dec
add
xor
shl
test
ds
hlt
mov
pop
js
pop
dec
shl
inc
data16
xchg
sub
das
and
cmp
cwde
aam
es
push
xchg
jns
sbb
lock
and
add
jbe
(bad)
jnp
aam
dec
xchg
push
and
mov
mov
scas
push
mov
mul
lahf
fwait
cmc
leave
int3
fcomp
adc
loope
add
mov
fcom
fwait
lds
adc
shl
add
mov
out
jne
leave
ja
stos
fwait
stos
add
sbb
jecxz
(bad)
scas
mov
jle
and
mov
push
loop
retf
mov
ins
pop
jns
mov
cmp
pusha
stos
rcr
cmp
push
push
xchg
xchg
cld
(bad)
and
add
repz
popa
stc
aad
icebp
xor
sti
pushf
gs
loop
mov
jmp
xchg
mov
add
jecxz
sbb
icebp
retf
cmc
xchg
pop
fcmovnu
ins
shl
mov
sub
sbb
mov
cmc
mov
cmps
ret
shr
pop
popa
cdq
ja
jb
and
int
jmp
or
bound
inc
dec
(bad)
call
ret
jno
not
pop
xchg
imul
dec
cld
arpl
(bad)
int
sub
stos
outs
inc
sbb
push
cdq
adc
mov
push
popf
lods
inc
leave
pop
pop
add
(bad)
jb
pop
pop
dec
nop
sbb
es
push
aaa
jle
ds
mov
test
dec
fadd
jmp
dec
mov
ror
xchg
fs
rcr
out
mov
xor
call
xchg
mov
fcomp
adc
add
sti
addr16
sbb
sbb
into
fild
push
repz
ret
push
push
sar
inc
cmc
xchg
(bad)
lods
cmp
lea
inc
pop
(bad)
xchg
bound
shl
data16
sub
stos
(bad)
retf
retf
cmc
mov
fmul
adc
test
int
ror
psrld
stos
cli
scas
outs
sti
loope
call
(bad)
outs
repz
pop
hlt
push
adc
enter
or
scas
inc
(bad)
jg
jnp
in
fsubr
push
and
shl
pop
clc
jecxz
push
das
loopne
sbb
jge
mov
out
fist
add
push
aam
or
jbe
int
cmp
(bad)
and
dec
and
mov
loop
and
push
adc
call
repnz
mov
ficom
repz
sbb
lods
das
call
pusha
div
xchg
out
lahf
clc
(bad)
jo
adc
(bad)
sahf
adc
push
cs
(bad)
loopne
ret
aad
add
sbb
jg
stos
sbb
in
leave
mov
int3
cli
pop
shl
movs
push
jl
mov
enter
cmp
jp
mov
adc
ret
in
daa
aam
(bad)
push
pop
stos
out
fldpi
xor
jne
mov
bound
lods
cmc
fiadd
int3
std
jmp
ret
add
das
xor
(bad)
stc
stos
jnp
sub
aaa
mov
icebp
sub
cmc
and
mov
call
cmp
ss
cwde
push
pop
std
pushf
jo
add
test
inc
pop
test
pop
arpl
push
jno
out
sub
lods
shl
pop
shl
add
mov
pushf
jp
mov
out
jge
cwde
aad
das
lds
mov
adc
mov
xchg
adc
pop
jb
jo
test
cmp
test
cmp
dec
add
mov
pop
add
lahf
gs
stc
call
xchg
add
(bad)
fdiv
cdq
shr
icebp
retf
push
mov
aad
ret
fwait
mov
(bad)
xchg
int
call
push
push
neg
js
in
outs
xlat
fnstsw
xlat
dec
dec
(bad)
in
jae
aam
out
push
pop
iret
jg
pushf
pop
and
fcomp
mov
test
inc
mov
xchg
xchg
mov
ret
xor
xor
mov
mov
enter
inc
std
add
mov
jge
int3
xchg
repnz
xor
push
push
sub
ins
jmp
inc
dec
xchg
inc
ret
popf
sub
stos
mov
sub
aaa
loop
sti
jnp
imul
and
xlat
push
push
fwait
cli
fld
push
adc
pop
test
add
rcr
jno
push
mov
inc
push
cli
les
or
mov
shl
push
pop
rcr
mov
loope
xchg
inc
daa
cmc
lahf
cmc
pop
dec
pushf
xor
inc
sub
lods
push
loope
rol
in
jb
pop
mov
jo
aaa
je
icebp
mov
lods
nop
das
add
mov
mov
cli
lea
daa
xlat
mul
das
push
test
add
aam
xor
mov
mov
sbb
lea
mov
fidivr
shr
aaa
gs
sbb
shl
and
cld
leave
add
sbb
inc
fwait
jecxz
or
std
cmc
sub
mov
inc
adc
cmp
add
jno
xchg
mov
sbb
std
pop
lea
fnstsw
cmps
sbb
lahf
cmp
cs
ins
jns
mov
dec
call
xchg
xchg
pop
pop
lds
cs
sub
outs
inc
movs
outs
or
sub
sub
jmp
xor
sar
dec
mov
jno
jmp
sbb
(bad)
(bad)
adc
push
or
mov
dec
in
sbb
test
pop
loopne
adc
sbb
imul
dec
inc
retf
and
test
push
sbb
rcl
not
xor
mov
pop
and
das
dec
adc
rol
cli
ficom
push
popf
fwait
cs
(bad)
or
aaa
es
cmp
and
out
arpl
pop
jl
xor
xchg
lea
(bad)
shl
pop
dec
in
mov
add
outs
ret
xchg
mov
xchg
xchg
cmp
addr16
xlat
and
lods
inc
jae
shr
push
mov
jl
je
popa
popa
pop
dec
cmps
retf
xchg
cdq
dec
adc
(bad)
aad
mov
aam
movs
xor
loopne
mov
jns
xor
pop
mov
(bad)
(bad)
mov
or
jae
sbb
xor
rol
pop
cmp
mov
aaa
xchg
rcr
push
dec
ret
retf
out
pop
in
mov
pop
xchg
loopne
neg
xchg
jmp
inc
xchg
mov
push
outs
adc
aas
fwait
jmp
stos
push
mov
xor
mov
fnstsw
push
fdivr
mov
push
out
pop
pop
repz
adc
adc
mov
jo
dec
push
scas
cmp
push
arpl
imul
outs
xor
(bad)
or
push
movs
xor
mul
repnz
fsub
pop
xchg
mov
mov
fldcw
mov
jl
adc
stc
jno
neg
push
mov
lea
sbb
es
popa
sbb
lea
sub
jbe
rcr
inc
cmp
rol
sti
imul
xor
retf
sub
sub
lahf
dec
cs
fist
lods
push
push
ins
rcl
mov
nop
mov
lods
dec
or
mov
pop
mov
leave
lahf
push
xor
add
ins
jecxz
loope
mov
cmp
movs
aas
stos
add
je
push
jbe
cmps
push
sbb
cmp
std
mov
pop
sub
ins
int3
movs
pop
adc
push
pop
mov
loopne
hlt
(bad)
call
call
call
mov
cmp
mov
cmp
cmp
cwde
repz
arpl
pop
inc
test
jne
cdq
push
dec
mov
fs
push
adc
and
xchg
jns
xor
pop
xchg
aam
shl
rcr
mov
inc
xchg
jbe
jmp
hlt
popf
xchg
shl
pop
(bad)
xchg
jnp
cs
jle
cmp
retf
movs
ins
mov
adc
ins
push
(bad)
jae
sbb
fwait
stos
or
cmp
ins
ror
push
jge
shr
jmp
cmp
scas
inc
loop
cmp
mov
xchg
pop
pop
or
xor
sub
(bad)
shl
jb
in
(bad)
in
movs
push
std
mov
mov
jle
add
stos
push
jecxz
fadd
jb
in
add
leave
push
cvttps2pi
fdivr
dec
ja
test
lods
cmc
in
fnstsw
pop
mov
cld
pop
cmp
push
pop
lods
mov
jmp
bound
mov
out
fcom
clc
xchg
imul
test
fsubr
adc
add
add
rcl
mov
dec
pop
xchg
or
pop
jge
jnp
xor
call
push
mov
mov
mov
leave
test
pop
push
sbb
fcmovu
push
pop
mov
or
dec
or
add
pop
jno
add
pop
ja
pusha
push
pop
es
add
sub
xor
sbb
mov
test
inc
(bad)
cld
clc
shr
jo
fld
inc
mov
mov
xchg
and
pop
popf
sti
xor
dec
sbb
call
mov
lock
test
push
aaa
xlat
(bad)
cmp
fidiv
push
addr16
test
bound
fisubr
and
inc
test
dec
push
or
imul
fadd
mov
push
pop
xchg
daa
cld
stos
xchg
ja
jmp
shr
inc
push
mov
movs
outs
ret
mul
sbb
add
adc
xchg
mov
in
xor
jmp
mov
xchg
fst
(bad)
les
add
rol
xchg
add
jns
cdq
xor
pop
adc
gs
xchg
dec
push
ins
sub
cli
je
jmp
mov
mov
nop
jp
and
mov
retf
outs
or
xchg
dec
daa
mov
loopne
jle
(bad)
mov
or
ins
jbe
mov
sub
pop
sbb
and
icebp
inc
pop
cmps
das
push
cmp
xchg
pusha
mov
cmp
xor
adc
dec
imul
jnp
ins
cmps
mov
pop
xchg
cmp
cli
sbb
cmp
addr16
fst
push
jl
mov
jns
sti
(bad)
popa
sub
push
or
mov
add
dec
pop
mov
xchg
xchg
jae
test
fist
mov
(bad)
xchg
nop
(bad)
mov
jmp
mov
push
mov
enter
lds
dec
push
dec
mov
out
stos
pop
aas
add
inc
inc
retf
pop
fiadd
je
mov
lahf
into
retf
dec
lods
xchg
cwde
dec
or
mov
test
adc
fsub
xor
mov
dec
dec
stos
repnz
int
leave
cmp
push
ret
cmp
and
inc
sub
mov
loopne
gs
loopne
idiv
and
xchg
mov
imul
add
cmp
int
sub
scas
mov
js
jbe
sbb
(bad)
(bad)
sbb
jmp
fcmovnbe
sub
dec
mov
mov
(bad)
push
shl
push
lahf
lahf
pop
fs
jae
sti
add
pop
call
ror
pushf
inc
xor
xlat
cmp
ds
inc
js
clc
retf
dec
js
enter
shr
jmp
popf
out
xor
ss
addr16
rcr
das
dec
mov
repz
cmp
adc
dec
into
cli
sahf
lds
in
jnp
adc
popf
sub
nop
outs
jmp
mov
and
fwait
mov
mov
test
cwde
fist
dec
jae
push
fsubr
stos
pop
jb
mov
stos
pop
std
in
lods
cdq
and
hlt
or
sub
mov
je
and
arpl
mov
out
sbb
pop
mov
pop
sahf
sbb
mov
mov
adc
sti
(bad)
ja
div
mov
call
pop
(bad)
fnstsw
rol
push
push
in
inc
(bad)
jg
push
popa
add
std
mov
push
pop
sti
adc
dec
cmp
in
enter
cld
and
stos
mov
xrelease
push
pop
in
std
(bad)
test
cld
mov
loope
scas
js
sub
mov
scas
pop
and
push
mov
pop
dec
clc
fiadd
(bad)
xor
or
in
in
icebp
movs
or
nop
test
mov
inc
jo
sub
out
mov
mov
(bad)
shl
pop
sbb
pop
fidivr
(bad)
sub
int
or
add
adc
stc
(bad)
out
mov
xchg
fstp
and
mov
xor
cmp
movaps
pushf
pop
pop
jge
or
sub
and
adc
add
and
jno
lods
adc
cmp
xlat
out
push
leave
inc
mov
test
inc
mov
mov
pop
adc
dec
dec
jae
imul
and
mov
fild
loope
das
or
sub
mov
dec
jl
in
cdq
aad
inc
add
icebp
and
cli
fiadd
(bad)
shr
daa
and
jge
icebp
test
cmp
clc
mov
rol
xor
(bad)
(bad)
aas
cmp
sub
or
(bad)
cmp
lahf
adc
inc
popa
mov
ret
and
dec
lea
retf
fmul
xchg
movs
mov
(bad)
xor
cli
dec
scas
stos
js
outs
mov
and
enter
and
pop
ins
or
dec
movs
inc
jle
fistp
mov
(bad)
pop
jge
pop
lock
or
ret
or
test
loopne
not
dec
retf
data16
jns
ins
mov
add
inc
lods
sbb
into
pop
and
xor
mov
inc
sub
push
cmp
sub
pop
xchg
cdq
cmp
dec
push
mov
ror
jno
out
mov
pop
pop
or
adc
or
mov
xor
sbb
pop
cmp
add
addr16
rol
enter
jg
add
ds
int
cmps
ja
ja
or
arpl
(bad)
into
cmp
or
and
push
retf
je
pushf
pop
adc
repz
es
sbb
lea
push
adc
js
xchg
jp
sub
aad
jecxz
pop
jne
pop
pop
pop
out
adc
repz
ins
(bad)
mov
dec
ret
and
mov
(bad)
retf
ds
scas
mov
call
push
cmp
(bad)
xlat
push
mov
sbb
pushf
push
aas
jg
jmp
mov
arpl
jmp
jb
xlat
xor
push
cmp
pop
push
add
mov
lock
inc
jo
icebp
repnz
hlt
jg
pop
js
test
adc
pop
or
(bad)
outs
jecxz
aad
xor
outs
nop
icebp
mov
push
inc
xchg
aas
stos
pop
adc
daa
xor
mov
sub
sub
fcom
pushf
loope
data16
clc
cmp
xlat
or
xchg
into
sahf
or
out
movs
int
pop
lea
fs
jo
mov
adc
push
or
adc
jmp
cmp
aam
mov
imul
into
mov
iret
mov
push
adc
mov
pop
lock
push
add
push
out
push
or
ss
push
inc
test
call
pop
stos
mov
cmc
jmp
ds
das
js
pushf
push
mov
and
(bad)
stos
dec
add
sbb
dec
test
xchg
dec
mov
jbe
lahf
outs
loop
jb
dec
inc
jle
push
iret
dec
sub
jmp
test
mov
and
fwait
ins
and
add
jp
sbb
xor
rcl
lds
pop
pusha
mov
fnstsw
jl
push
jg
in
mov
cmp
or
ss
repnz
mov
pop
ret
out
inc
ds
(bad)
out
mov
cmp
xchg
mov
mov
add
unpckhps
lahf
mov
pop
jle
das
(bad)
cmps
add
pop
push
mov
sbb
and
sub
push
out
aad
(bad)
fld
add
jg
push
mov
cmp
adc
ds
dec
adc
iret
inc
in
hlt
push
sbb
fcomi
cmp
or
aas
and
nop
stos
iret
dec
loopne
les
(bad)
aad
or
fild
lods
adc
mov
cs
sub
fld
pop
mov
jo
jbe
pop
sti
and
cmc
mov
daa
sbb
inc
cwde
pop
pop
cmp
mov
hlt
sub
shr
pop
mov
xor
pop
ret
je
movs
gs
fprem
and
cmp
popa
pop
out
push
shr
mul
les
pop
mov
scas
clc
fistp
je
xor
in
pushf
cmp
cli
mov
ins
bnd
scas
push
mov
cld
(bad)
cmp
mov
add
ss
sbb
enter
pop
fwait
jp
mov
xchg
cmp
outs
test
jmp
sbb
mov
sti
pop
js
clc
call
cwde
stc
mov
mov
popa
fs
out
les
scas
add
push
shl
cwde
mov
cdq
push
div
mov
pop
movs
inc
movs
mov
push
cmps
add
cmp
cmp
xchg
cmp
xchg
add
dec
mov
cmps
div
mov
ins
cmp
out
std
inc
arpl
lahf
inc
mov
sbb
xor
imul
test
jg
outs
pop
dec
jae
jle
jle
xchg
sahf
cmp
or
stc
pop
leave
cmps
sar
or
mov
in
or
mov
cmc
loope
jno
sbb
test
jmp
cmp
in
mov
or
nop
adc
add
cmps
dec
dec
xor
mov
add
scas
lods
(bad)
aad
mov
leave
dec
pop
fwait
movs
push
cmp
add
inc
mov
sbb
movs
mov
imul
adc
scas
pop
or
cmp
in
push
sub
sub
mov
lea
push
inc
adc
vmptrst
lods
jge
jg
xchg
xchg
sbb
push
inc
nop
stos
arpl
pop
lahf
ja
xchg
xchg
and
mov
addr16
imul
mov
scas
retf
jne
pop
adc
call
sti
inc
and
scas
mov
das
push
jl
cwde
cmp
not
and
or
dec
mov
imul
scas
sub
mov
add
push
ret
sbb
push
loop
sub
shr
lock
inc
test
dec
enter
push
nop
jmp
push
jnp
call
pop
(bad)
in
ret
sbb
cmps
jmp
inc
sbb
aam
loop
mov
fidivr
pop
mov
je
xor
test
in
(bad)
sub
xor
jmp
arpl
test
jae
bound
dec
xchg
stc
shr
in
ins
int
cmps
sub
push
xchg
(bad)
xchg
outs
out
daa
jle
cmp
and
mov
(bad)
sbb
pop
push
fldenv
xchg
popa
in
jmp
mov
lahf
jle
push
mov
xor
mov
jg
sub
rol
mov
retf
(bad)
xchg
jg
mov
pop
rcl
push
shr
cmp
xchg
or
mov
adc
arpl
pop
jo
dec
cdq
int3
add
inc
lds
add
std
jne
xchg
outs
push
ret
pop
jns
pop
test
push
push
dec
pop
es
lods
xchg
test
iret
lods
scas
in
jo
dec
test
clc
pop
pop
mov
xchg
sub
into
xor
ins
iret
gs
xlat
mov
in
pop
pop
mov
xchg
scas
or
das
sti
inc
mov
dec
rol
pushw
ret
mov
daa
jmp
jnp
les
jl
out
pop
shr
cs
dec
mov
sub
and
jns
jecxz
cmp
xchg
add
in
or
mov
dec
sahf
mov
pop
add
cmp
out
push
add
data16
in
fs
ret
pop
aaa
mov
pusha
or
int3
sub
aaa
push
pop
outs
sub
jecxz
xchg
aam
lock
adc
xchg
push
nop
push
jecxz
and
inc
popa
out
push
push
xor
pop
mov
xchg
sbb
int3
add
repnz
sbb
adc
sbb
mov
add
inc
jno
xor
(bad)
xlat
adc
lock
retf
pusha
stos
mov
sub
jae
jge
mov
stos
adc
mov
neg
lahf
pop
mov
inc
in
adc
std
stos
cdq
repnz
push
stos
out
lock
add
daa
xchg
xor
add
out
aas
add
mov
jle
into
loop
fstp
inc
out
out
aas
xchg
push
and
mov
push
les
xabort
xchg
hlt
dec
stc
pop
pushf
lds
cmps
fs
and
add
das
dec
sbb
cmc
sub
out
push
inc
sub
stos
imul
loopne
push
je
mov
pop
mov
aas
xchg
jae
idiv
jmp
inc
fs
aam
ins
dec
outs
inc
pop
dec
je
data16
popf
pop
stos
in
shl
fwait
cli
out
xor
ret
sbb
out
mov
mov
movs
adc
xchg
aam
adc
clc
movs
mov
(bad)
loopne
mov
jp
out
xor
mov
loopne
or
test
popa
mov
(bad)
(bad)
mov
sub
push
shl
fucomip
sub
add
ficomp
dec
add
adc
popa
or
and
mov
ja
inc
push
js
leave
sbb
inc
mov
pop
push
shl
jns
out
adc
jns
inc
xchg
arpl
test
mov
cmp
inc
mov
inc
jo
xor
jbe
push
rcl
iret
nop
inc
jno
pop
aas
or
adc
jb
inc
mov
pop
aaa
mov
fadd
push
inc
dec
inc
movs
jge
gs
nop
jge
jmp
jo
cld
ror
mov
xchg
out
sub
lock
neg
mov
cdq
mov
push
ss
aas
adc
dec
lea
cmc
jne
fld
ja
xor
das
jbe
add
cmp
adc
sahf
mov
inc
cmp
div
adc
js
mov
mov
jbe
xor
test
or
rcr
fisttp
mov
and
ins
fld
xor
ja
aaa
sub
movs
xchg
lods
icebp
xchg
sub
mov
mov
add
in
movs
adc
pop
ss
inc
movs
stc
xchg
inc
mov
cmp
jge
movs
xchg
repz
call
data16
lods
ror
jo
cmp
gs
fidiv
xchg
sbb
in
sub
mov
jb
std
or
fist
jmp
pminsw
cmps
mov
gs
cld
mov
sahf
xchg
ds
in
je
push
jecxz
and
pop
jle
in
stos
sub
adc
ds
jo
xchg
inc
cmp
fs
sti
sbb
add
dec
xchg
pop
sti
and
sub
fs
add
lea
xchg
imul
in
lods
or
cmp
icebp
xor
stos
jp
inc
jnp
in
pusha
or
jmp
imul
dec
or
scas
push
mov
aas
push
in
push
sar
dec
sbb
shl
inc
pop
sahf
and
(bad)
xor
add
(bad)
mov
mov
stc
jne
lods
in
pop
ins
mov
adc
cwde
or
sar
scas
cmc
iret
mov
fcmovnu
mov
adc
ror
or
pop
jecxz
adc
(bad)
ins
sbb
adc
mov
jmp
inc
push
lock
loopne
adc
ins
mov
and
jae
cdq
push
push
imul
pop
je
mov
out
xchg
in
hlt
jno
sbb
cmp
daa
call
neg
xlat
push
jo
test
mov
in
add
call
ror
data16
test
ror
out
push
and
iret
int3
test
repnz
movs
sub
cwde
sub
enter
xor
mov
add
popf
retf
jno
loop
cmp
mov
xchg
cli
add
push
jmp
retf
mov
lock
inc
pop
(bad)
xor
enter
loopne
jmp
jae
or
xchg
pusha
and
out
fst
pop
xchg
lock
das
or
or
xor
or
jns
test
jne
push
sbb
lahf
jp
xchg
lahf
pop
sbb
inc
mov
outs
mul
push
(bad)
hlt
pop
lods
outs
add
xor
sbb
cmp
dec
pop
push
mov
xchg
lea
xchg
push
loopne
les
jge
or
loopne
xchg
movs
sbb
dec
movs
mov
scas
scas
push
cmp
aad
js
jmp
and
push
scas
mov
cmp
stos
gs
iret
aas
or
pop
jmp
mov
or
fdiv
les
cmc
ss
imul
jne
pop
bound
addr16
dec
movs
mov
jae
out
jecxz
add
add
adc
inc
fnstenv
rcr
lods
aad
xchg
and
mov
retf
xlat
push
sbb
rcl
bound
push
add
cmps
aas
test
and
fsubrp
into
popf
xchg
jmp
outs
add
add
sbb
mov
add
sub
cmp
stc
sub
cmp
ja
leave
fcom
sbb
or
dec
ins
fiadd
std
ret
sbb
pop
add
adc
aas
stos
scas
mov
jg
adc
xchg
pop
pop
data16
enter
cs
push
leave
jecxz
call
jecxz
dec
mov
loop
pop
mov
xchg
cmp
ds
frstor
dec
jne
loopne
adc
dec
push
mov
cmp
push
ins
(bad)
int
cmps
imul
xor
(bad)
xor
xor
fstp
fcomp
sahf
mov
fnsave
dec
div
sbb
pop
xchg
enter
pop
pop
add
cli
fsub
mov
in
mov
sub
retf
mov
test
hlt
pop
nop
jp
sahf
lea
fwait
sbb
push
push
jne
xor
cld
call
jl
js
cmp
loop
inc
(bad)
cld
xor
shl
mov
mov
mov
cdq
mov
test
cmp
pop
jle
fcom
call
loopne
sub
retf
push
inc
mov
pop
add
ret
(bad)
dec
fnsave
ins
lds
sub
pop
add
rcl
neg
inc
(bad)
sti
mov
push
test
sub
outs
jg
hlt
ret
ret
std
outs
mov
push
lods
inc
or
mov
clc
in
xchg
pop
jle
mov
aaa
or
je
mov
cld
or
cmp
lds
es
mov
not
push
adc
adc
popf
out
leave
sub
push
mov
and
mov
lods
and
xor
pushf
mov
mov
push
int
sub
and
out
outs
pop
ret
lea
cmps
mov
pop
mov
pop
xchg
jnp
cmp
jp
pop
adc
retf
pop
mov
inc
mov
mov
fisub
sub
xchg
add
push
cwde
lea
adc
nop
bnd
into
push
mov
aas
xor
xchg
xor
pop
js
scas
pop
out
pop
rcl
jecxz
xor
jo
out
mov
mov
jbe
mov
cmc
rcl
retf
imul
sub
mov
xor
sub
add
pop
cmps
lds
mov
add
pusha
fdiv
pop
dec
xor
popf
mov
fs
and
jae
jnp
outs
mov
sub
fimul
fild
retf
push
(bad)
and
xchg
loop
leave
mov
and
sbb
enter
jecxz
loopne
or
xchg
popa
call
sbb
lock
push
popa
das
inc
jo
push
mov
adc
xor
int
mov
sbb
(bad)
lods
sub
add
push
xchg
xchg
in
pop
pop
ret
in
lock
push
sti
ss
push
scas
fwait
call
dec
mov
arpl
or
pushf
fisttp
(bad)
in
mov
mul
movs
or
jp
cmp
xlat
(bad)
jl
mov
popf
out
push
js
sti
dec
outs
xchg
xchg
sbb
out
jecxz
cmp
cld
fwait
and
outs
movs
xchg
int
call
mov
data16
push
aam
push
jmp
and
test
and
or
xchg
sub
or
movs
aad
adc
xchg
add
cmp
sbb
jns
adc
fisub
test
mov
mov
and
fstp
push
or
or
(bad)
rcl
push
xor
jg
sbb
mov
repz
sub
xor
or
out
cwde
out
jbe
fcomp
push
shl
jne
pop
mov
push
or
into
jle
in
hlt
nop
imul
pop
mov
imul
(bad)
lods
adc
mov
lea
fisub
lods
jge
xchg
xor
mov
icebp
push
mov
inc
push
mov
fidiv
mov
sub
add
fsincos
cmp
add
jp
push
aad
xor
int
lods
dec
fdivr
outs
jo
fsub
pop
inc
pop
xchg
cmc
mov
scas
dec
out
repnz
js
in
(bad)
jge
pushf
lahf
cmp
or
out
or
mov
cmc
fiadd
cmps
aaa
or
or
or
ins
and
jbe
adc
cli
pop
push
fnstcw
cmps
xchg
or
fcomip
mov
(bad)
mov
mul
into
cmp
xchg
in
mov
aam
or
stc
pop
xchg
push
xor
cmp
xchg
add
lea
or
ret
enter
push
or
les
sbb
push
xor
retf
rcl
arpl
lock
jo
lock
faddp
push
enter
or
adc
cmp
mov
arpl
cmp
add
add
icebp
mov
sub
xchg
push
and
stos
sbb
and
cs
push
adc
es
xchg
out
pop
cmp
cld
call
jmp
mov
mov
push
or
jb
data16
scas
ret
enter
call
out
(bad)
cdq
in
add
int
and
pop
in
pop
fwait
sbb
test
jmp
les
mov
lods
arpl
test
dec
lods
cli
and
xor
dec
fild
hlt
sub
retf
cwde
push
shr
outs
push
pushf
in
xor
mov
cmc
sub
je
add
xor
lds
ja
adc
mov
dec
xor
push
(bad)
lods
call
cmps
in
inc
xchg
loopne
mov
inc
and
and
sub
lock
bound
imul
xchg
push
or
push
movs
mov
fmul
mov
(bad)
jecxz
push
jmp
inc
mov
test
jge
sbb
jae
or
ins
or
mov
ja
pop
(bad)
mov
jmp
leave
add
inc
push
sub
stos
les
sar
test
mov
mov
pop
mov
dec
ins
mov
mov
or
psrlw
loope
pop
inc
daa
sti
cdq
lea
add
pop
and
and
xor
xor
jl
and
fsub
ja
jae
and
xchg
mov
into
test
stc
mov
dec
mov
mov
mov
call
out
jl
and
mov
or
cmps
xchg
mov
pop
inc
add
sub
ja
mov
iret
pop
or
arpl
or
stos
cwde
lahf
mov
xlat
cs
loopne
jmp
mov
jmp
dec
shr
xor
jecxz
sub
jge
mov
fcmovb
int
push
scas
stc
(bad)
pushf
xchg
inc
bnd
sbb
aas
scas
push
mov
stos
jbe
arpl
adc
add
outs
lahf
jae
test
and
(bad)
fst
inc
xor
repz
daa
mov
push
js
shr
mov
xchg
jo
enter
mov
jmp
nop
jg
xlat
adc
scas
xchg
aas
enter
sar
sub
outs
dec
adc
sub
mov
(bad)
fstp
cmp
fstp
test
sub
(bad)
int3
adc
xor
stc
xor
sub
dec
and
stos
bound
les
ficomp
cwde
fnstsw
sbb
jp
(bad)
jmp
into
loope
lock
xchg
cmp
scas
popf
push
xchg
xor
sbb
fcmovnu
adc
and
and
push
and
loope
leave
clc
add
dec
pushf
adc
mov
lock
xor
in
lds
daa
js
fist
test
mov
sub
adc
enter
iret
mov
(bad)
repnz
jge
sti
sti
push
retf
aad
retf
xchg
and
sub
ds
fsubr
scas
push
add
sahf
inc
mov
push
mov
sar
inc
fnstenv
test
icebp
inc
clc
dec
adc
and
icebp
in
lods
mov
shl
leave
mov
adc
dec
stos
sub
push
ins
push
jns
inc
xchg
cld
arpl
pop
pop
xor
dec
(bad)
ss
push
test
iret
jo
dec
cs
dec
cmp
and
test
out
push
bound
and
sahf
bound
xchg
adc
int
dec
push
(bad)
dec
xchg
ret
mov
push
adc
sub
(bad)
mov
fimul
rcr
(bad)
xchg
adc
pop
mov
cwde
jg
mov
jnp
retf
das
sahf
mov
xchg
out
xor
jmp
fstp
or
mov
mov
adc
ret
clc
or
mov
sub
xchg
and
push
rcl
pusha
pop
ss
inc
dec
push
fistp
hlt
adc
retf
or
jbe
mov
adc
push
les
fdivrp
mov
rcl
dec
xor
inc
scas
shr
sbb
fdivr
sbb
add
sbb
mov
int
cmp
stos
fsub
aad
sub
mov
jmp
stc
pop
enter
outs
sub
pop
mov
in
stos
adc
scas
push
call
mov
movs
into
call
mov
call
push
ror
call
repz
xor
pusha
loope
jecxz
sub
push
jo
lods
mov
cmp
shl
xor
in
retf
rol
adc
loop
mov
neg
mov
add
inc
and
jns
mov
jg
cmp
gs
or
sbb
out
mov
js
push
jp
sub
cli
das
inc
retf
fiadd
mov
and
push
inc
jg
pop
fisub
jle
xchg
sub
push
sbb
sbb
dec
add
in
adc
add
in
in
jp
das
jno
in
into
in
xchg
cli
jmp
popa
ds
push
jne
xchg
stos
xchg
pop
push
mov
loopne
test
pop
xor
push
popf
dec
xor
mov
pop
inc
adc
mov
add
iret
pushf
push
mov
inc
into
icebp
xchg
jmp
fwait
scas
iret
icebp
or
jg
adc
call
fnsave
push
lods
adc
jae
leave
cli
mov
jnp
imul
xlat
pop
and
and
lock
sbb
push
mov
retf
lods
mov
out
sysexit
clc
sub
xor
or
sbb
add
fisttp
daa
inc
mov
(bad)
mov
fdiv
int3
sbb
add
idiv
mov
jo
addr16
jmp
xor
pop
fld1
pop
shl
push
xchg
inc
shr
mov
pop
cmp
mov
mov
mov
outs
mov
inc
dec
loop
outs
aad
cmp
xchg
dec
inc
fisubr
mov
add
cmp
retf
ss
sub
pushf
sub
aad
push
jmp
jne
pushf
cmp
daa
push
int
fidivr
ins
and
(bad)
bound
jecxz
inc
mov
fistp
or
xchg
cld
dec
or
pop
repz
mov
sub
adc
push
sbb
cmp
pop
cmp
pop
pop
jo
sbb
(bad)
jns
add
retf
(bad)
fucomip
enter
retf
sbb
adc
xlat
jne
loope
adc
aaa
adc
cmc
add
inc
fdiv
enter
loop
adc
fnsave
inc
dec
int
das
dec
xor
in
mov
mov
leave
es
pop
popa
add
bound
int
inc
mov
mov
outs
dec
leave
sub
out
int3
nop
stc
addr16
jne
xor
in
enter
jbe
das
mov
fsubr
pusha
push
pop
mov
std
in
add
push
fisttp
hlt
sbb
std
daa
(bad)
mov
and
push
test
(bad)
adc
scas
fcomp
lods
std
push
or
rcr
or
jmp
outs
xchg
xor
sub
je
sub
pop
das
adc
mov
ror
inc
add
stc
inc
idiv
sbb
mov
jg
push
xlat
retf
mov
(bad)
sbb
jo
or
mov
lock
fcom
rcl
addr16
pop
in
add
(bad)
repnz
popa
fcmove
jle
pop
enter
ja
xor
sub
test
sar
sbb
call
sar
lods
ret
fiadd
xchg
lds
scas
test
neg
(bad)
or
pusha
imul
dec
jle
push
lods
dec
repz
and
dec
hlt
mov
pop
add
push
into
jmp
jne
fdiv
ret
mov
mov
mov
dec
add
xchg
jae
cli
push
sbb
mov
jbe
aaa
iret
in
das
fmul
enter
lahf
push
push
fisttp
and
ja
and
jae
sbb
jg
xor
adc
movs
in
jbe
mov
jbe
repnz
cmp
sub
cld
ret
adc
mov
int
sar
jb
outs
cli
xor
out
int3
pusha
pop
cdq
mov
sub
and
cmp
in
fs
cmp
sub
inc
popa
fadd
xchg
sub
rcr
shl
mov
dec
int
jle
inc
and
mov
mov
fdiv
xor
cmp
in
out
jnp
inc
(bad)
cmc
pop
shr
push
mov
out
mov
inc
jno
test
adc
ins
cld
in
dec
and
sahf
push
cwde
movs
in
or
ins
mov
xor
scas
jne
mov
int3
sub
or
loop
sysenter
adc
repnz
mov
dec
ss
sahf
bound
mov
hlt
mov
jmp
loop
rol
fistp
popf
cmp
test
or
mov
out
and
pop
in
int3
inc
add
xlat
pop
jmp
sbb
mov
dec
jmp
sub
jbe
adc
call
push
adc
push
xchg
mov
sbb
gs
inc
imul
neg
adc
(bad)
xchg
sbb
fbstp
mov
and
xchg
xchg
loop
jp
hlt
xlat
or
pop
cmp
or
pop
xor
inc
retf
fstp
push
sub
les
gs
dec
xchg
jbe
cdq
aas
mov
fmul
in
jle
cdq
sti
mov
inc
addr16
jmp
adc
mov
pop
dec
dec
leave
and
test
xor
push
bound
inc
pushf
push
jnp
inc
stos
add
lock
pop
mov
pop
pop
push
cmc
addr16
sbb
inc
(bad)
jns
push
xchg
fbld
rcl
cmp
jg
shr
inc
jmp
sub
jecxz
lock
out
jp
ins
daa
jne
std
push
add
mov
mov
(bad)
out
enter
inc
test
fdiv
xor
cli
add
jbe
and
jo
in
mov
push
sbb
test
add
inc
cwde
test
fsub
repnz
jbe
fdiv
fsub
push
mov
cli
jg
and
dec
sub
data16
call
stos
fs
rcl
sti
sahf
les
mov
mov
xor
popa
ffreep
push
push
lahf
pop
test
jge
sub
pushf
or
les
jmp
add
add
lds
xchg
ins
push
into
jp
je
je
aam
lods
pop
jg
fidiv
mov
icebp
xor
mov
mov
sbb
addr16
mov
cli
push
outs
cmp
dec
bound
movs
push
or
jmp
clc
pop
fadd
stos
mov
mov
pushf
xchg
jmp
xor
cmp
cmp
inc
movs
in
push
mov
fst
sub
dec
(bad)
xchg
xor
jle
push
add
inc
push
or
or
jmp
and
mov
(bad)
pop
jmp
aam
mov
sbb
jnp
in
xor
inc
dec
aad
push
retf
pop
mov
jle
in
in
xor
sub
jae
ss
jge
inc
add
fadd
rcl
cmp
cmc
test
fprem
cmp
add
xor
loope
or
adc
(bad)
std
lea
xor
daa
and
push
jmp
js
sub
je
int
and
fsubrp
daa
pop
aaa
push
out
shl
mov
jb
not
xor
cmps
jmp
cs
adc
bound
popa
loopne
sar
aam
stos
xor
rcl
cmp
pop
stos
fistp
fistp
inc
stos
lock
outs
cdq
pop
add
mov
mov
push
pop
dec
inc
ds
sbb
xchg
(bad)
stc
push
pop
data16
jns
jp
push
inc
inc
std
xchg
dec
sub
and
js
es
mov
sub
rol
cmp
popa
jnp
jle
pop
loope
mov
lea
adc
mov
test
sbb
bound
and
push
into
mov
sbb
fbstp
pushf
into
mov
push
popf
add
add
inc
fisttp
mov
mov
inc
cmp
cmp
pop
aas
mov
out
push
in
bound
lahf
jae
dec
daa
mov
dec
aam
(bad)
mov
(bad)
movs
sub
jo
cmp
test
jl
inc
mov
or
loope
ret
nop
fisub
rcl
sar
sbb
ja
(bad)
or
mov
xchg
jnp
iret
pop
sub
jge
xchg
and
or
in
test
rcr
sahf
adc
fisubr
xor
xchg
inc
push
jg
pop
or
sub
push
sbb
adc
fwait
add
test
repnz
sbb
jl
mov
mov
(bad)
adc
jbe
adc
cmps
test
and
dec
inc
movs
imul
lock
jb
lods
icebp
arpl
or
mov
int
cs
or
add
mov
nop
fsub
rcl
add
out
rol
dec
lds
cmps
sbb
pushf
hlt
jmp
push
retf
inc
mov
pop
lods
fistp
in
retf
push
pop
mov
cmp
pop
push
cmp
test
mov
out
xchg
ins
stos
push
xchg
js
inc
lahf
repz
and
sub
out
inc
hlt
fucomip
std
stos
push
dec
or
fldcw
or
or
dec
xor
jmp
lods
cmps
test
out
lock
xor
shr
pop
pusha
sub
xchg
stos
jae
imul
mov
and
mov
cmp
imul
std
popa
jb
not
or
nop
sar
pop
push
xchg
or
push
pop
xor
loop
sbb
stc
ret
push
pop
pop
cmp
lahf
adc
mov
mov
xlat
rcr
stc
leave
in
sbb
movs
shr
bound
mov
xchg
inc
dec
int3
aaa
jmp
(bad)
inc
or
push
fwait
call
jae
and
xor
cmp
pop
js
jmp
or
push
loop
cmps
je
push
adc
pop
mov
dec
mov
dec
push
data16
ins
dec
push
stos
shl
stc
mov
in
in
sbb
sbb
mov
adc
xchg
rol
test
(bad)
jmp
mov
cmps
hlt
mov
or
popa
ins
lds
call
int3
mov
int3
jno
push
mov
gs
mov
clc
pop
stos
mov
popf
xor
pop
or
test
je
pop
loop
sub
push
nop
stc
sbb
mov
fisubr
adc
jae
dec
jns
daa
rep
(bad)
(bad)
mov
push
test
mov
js
movs
aaa
cld
pop
int
pop
in
je
int3
stos
pusha
bound
dec
data16
add
arpl
sbb
adc
push
jge
call
fdivp
loopne
xchg
pushf
mov
push
mov
push
fdiv
pop
popf
dec
stos
ret
outs
mov
jo
jecxz
sub
dec
out
dec
inc
lods
enter
jge
ret
pop
pusha
cmps
xchg
daa
pop
and
in
inc
sbb
aas
inc
lds
mov
pop
in
fcomp
cdq
mov
nop
mov
jl
adc
add
adc
dec
call
sbb
cmp
lock
aas
cdq
sub
popf
mov
hlt
scas
stos
div
icebp
and
pop
clc
cdq
jp
test
mov
mov
int3
std
shl
aaa
cmp
sub
sbb
mov
mov
jp
cld
or
outs
mov
push
jb
ror
push
cmp
push
das
push
xchg
loopne
jl
out
scas
pop
mov
push
test
pushf
add
mov
cmp
repnz
int
pop
pop
or
and
(bad)
es
adc
jmp
xchg
gs
inc
adc
push
and
arpl
sub
xchg
jb
xor
jp
or
fnstsw
cmc
xor
fmul
sub
inc
or
cs
adc
repnz
popf
or
fs
sub
mov
shl
lea
sub
xchg
popf
lds
mov
mov
jb
push
sub
into
test
dec
sbb
lahf
push
(bad)
ss
das
mov
jge
and
sbb
jge
xchg
in
out
pop
loope
and
cmps
frstor
or
inc
jb
lahf
std
enter
xchg
mov
xor
ins
mov
out
lds
scas
dec
adc
mov
mov
xor
cdq
leave
clc
adc
nop
pop
ret
scas
enter
xchg
ficom
in
movhps
mov
call
mov
or
aaa
mov
int3
sub
in
stos
jle
adc
lea
jge
imul
xor
pop
mov
mov
data16
ret
push
or
push
clc
cmp
dec
jno
lock
retf
cmp
arpl
popf
call
push
ds
xchg
les
ins
es
dec
pop
xor
mov
or
popa
xor
inc
push
push
push
mov
setl
mov
inc
jnp
push
push
fnsave
or
pop
or
and
push
test
into
xor
cwde
dec
xor
test
jecxz
mov
cmc
ds
ud0
mov
(bad)
scas
inc
icebp
mov
out
mov
out
and
fcomp
jne
adc
out
jbe
jo
add
mov
call
mov
iret
cmps
and
div
mov
push
icebp
leave
push
les
das
pusha
xlat
or
sahf
pop
pop
sahf
(bad)
call
ins
lds
jge
fwait
data16
repz
adc
mov
popa
div
cmp
inc
das
cmc
add
xor
xchg
cmc
js
dec
cmc
pop
fcom
and
mov
jmp
inc
xchg
pop
fidiv
jge
test
xor
jge
jmp
lods
sbb
ja
xchg
add
adc
dec
ret
sub
movs
adc
fsubr
aas
inc
xchg
test
xor
xchg
outs
aas
aad
and
pop
jl
in
mov
mov
dec
dec
fdiv
pop
jbe
cmp
cmps
das
sub
dec
movs
sbb
or
inc
mov
mov
inc
mov
xchg
xor
int
out
and
pusha
xor
jecxz
push
adc
mov
dec
add
push
jns
(bad)
mov
(bad)
mov
lods
or
popa
pop
out
repnz
(bad)
or
and
jp
push
jp
sub
cmp
cdq
jecxz
imul
in
jne
push
mov
lods
adc
jns
mov
aad
not
or
jecxz
repz
pop
pop
shr
(bad)
push
sti
sbb
inc
cmp
xor
push
cld
push
xchg
arpl
and
mov
pop
add
pop
outs
ins
mov
dec
loope
cmp
fsubr
aam
pop
data16
mov
lahf
mov
ficomp
push
and
fcomp
jl
mov
jae
mov
pop
mov
jle
inc
pusha
jns
ds
icebp
pop
data16
ret
es
in
das
jne
mov
das
mov
add
xlat
xchg
sub
nop
data16
cmc
clc
cmp
mov
sahf
test
stos
dec
lock
cwde
mov
in
sub
mov
add
adc
sub
push
mov
sbb
imul
sar
test
mov
adc
mov
js
adc
aaa
pushf
je
movs
sbb
push
inc
inc
pop
cs
(bad)
cmp
iret
ds
xor
ret
loope
lfs
fdivr
sbb
adc
jge
jle
dec
shr
add
das
and
push
cmp
call
push
fwait
jo
mov
retf
jp
(bad)
sar
mov
mov
and
xchg
in
cmp
jmp
pop
(bad)
(bad)
std
adc
sub
das
dec
mov
stos
ins
or
adc
xchg
addr16
and
ss
scas
xchg
(bad)
(bad)
and
xor
movs
ret
cli
add
and
dec
push
leave
adc
mov
(bad)
pop
int3
out
cdq
pop
test
ds
mov
icebp
daa
mov
sbb
pop
cmp
add
sar
arpl
jecxz
das
sub
fbld
inc
xor
aaa
pop
sti
mov
and
test
dec
test
or
retf
jno
add
lds
mov
loopne
ss
xor
in
stc
mov
pop
xor
xchg
fisttp
sub
push
adc
sbb
dec
leave
dec
fdivrp
mov
mov
inc
jl
fisubr
cmp
in
sti
and
mul
sub
cmp
mov
pop
repz
and
xchg
pop
sub
mov
mov
mov
out
jl
das
mov
std
mov
add
jge
outs
icebp
or
mov
pop
in
sar
sbb
xchg
cli
aas
loope
lds
sub
add
cmp
stc
sub
test
adc
mov
jbe
cld
gs
nop
inc
jp
push
adc
fchs
movs
fmul
xchg
inc
call
xor
jnp
clc
rcr
dec
push
imul
mov
fistp
loop
std
gs
xor
dec
nop
push
cmps
mov
je
sub
push
shrd
dec
jmp
popa
test
repz
out
jnp
scas
push
in
sub
inc
test
cmp
rol
cmp
es
fs
sbb
ins
out
icebp
jp
xor
shl
lds
js
cmp
jne
jmp
les
nop
dec
add
cwde
dec
cs
jl
pop
sub
mov
rol
jns
xchg
rcl
(bad)
bound
(bad)
lds
mov
ds
push
scas
and
scas
scas
mov
jne
(bad)
aam
and
mov
adc
pop
and
imul
add
adc
int3
ret
stos
jle
or
fisub
xchg
test
sbb
test
cdq
(bad)
aam
add
dec
je
push
cmp
pusha
stos
xor
inc
inc
push
lahf
ret
sti
push
aam
cmp
or
aad
jp
fcom
sub
mov
xchg
mov
fucomi
xchg
push
push
xor
mov
gs
mov
and
jb
ror
stos
inc
(bad)
arpl
lods
nop
in
lock
xchg
inc
xor
cmps
(bad)
jg
lock
and
lods
add
(bad)
cmc
xor
js
arpl
ret
mov
xchg
aaa
jb
das
repz
mov
jg
fld
cmps
fistp
enter
add
pop
mov
outs
(bad)
stos
sub
sub
mov
lds
inc
xor
adc
jl
das
mov
adc
lods
test
mov
fist
push
lahf
in
fs
es
jle
loope
xor
dec
jmp
jp
int
test
cmp
addr16
add
pusha
xchg
cli
js
jnp
les
xchg
cmp
pop
jne
aam
jle
jl
test
push
int3
clc
test
adc
inc
clc
cmps
ins
xor
pop
mov
xchg
mov
adc
cli
lock
pushf
mov
pop
fprem1
jp
test
mov
test
push
sbb
fidiv
inc
call
ret
mov
pop
sbb
sbb
je
inc
leave
aad
ffreep
inc
xchg
jae
push
sub
sub
adc
out
xchg
xor
aas
jb
xchg
clc
clc
daa
inc
mov
leave
adc
or
xchg
xlat
or
mov
mov
xor
inc
xchg
push
mov
out
imul
and
xchg
pop
push
pop
cmps
into
rol
test
out
push
ins
xor
outs
jmp
mov
jg
xchg
cdq
repz
add
mov
adc
popa
(bad)
mov
jns
movs
cdq
mov
xor
lods
rcl
xchg
push
mov
mov
dec
enter
(bad)
(bad)
jecxz
call
mov
adc
adc
(bad)
sahf
test
and
inc
dec
add
out
mov
int
cmp
jmp
imul
add
mov
(bad)
xchg
cmp
jb
cmp
loope
mov
push
xchg
push
xor
aad
mov
lods
xchg
add
or
ds
and
iret
sbb
adc
jl
dec
cmp
jle
les
push
pusha
scas
mov
dec
cmps
sub
out
les
repz
repz
adc
pop
lods
lock
popa
ins
inc
inc
ret
or
inc
push
dec
pop
cmps
jp
pushf
xor
adc
das
rol
mov
cmp
sbb
lods
mov
movs
adc
(bad)
mov
mov
jl
repz
cmps
int
daa
imul
jge
aas
jbe
adc
xchg
cmp
sti
add
mov
dec
imul
ja
imul
mov
int3
cwde
cmp
out
jmp
mov
lods
pop
lock
adc
test
call
pop
push
dec
pop
leave
sub
cmp
loopne
and
jbe
leave
sbb
mov
fadd
xchg
shl
mov
sub
xor
enter
ret
fdivr
add
popf
enter
jbe
mov
cmp
stos
push
movs
jg
cwde
or
xor
mov
(bad)
jp
push
sahf
mov
push
xchg
inc
mov
jo
stc
pushf
pop
mov
mov
stos
jns
inc
and
push
pushf
je
push
inc
pop
add
mov
mov
sbb
aaa
fsub
(bad)
cmp
or
movs
add
and
js
cmps
sbb
leave
imul
ret
inc
or
mov
fldenv
adc
shr
adc
cmp
imul
es
push
ret
pop
jo
mov
out
push
push
mov
add
add
jmp
aam
xchg
outs
cmps
(bad)
or
dec
out
cmps
jmp
mov
mov
test
jg
pop
inc
xor
sbb
sti
jp
inc
pop
and
adc
stc
imul
daa
dec
jae
xor
jmp
pop
xchg
add
fwait
movs
or
popf
pop
fs
inc
jmp
gs
mov
(bad)
cmp
add
aas
mov
test
retf
jmp
adc
movs
add
sbb
xchg
fist
mov
enter
mov
lahf
arpl
jns
stos
inc
clc
call
xlat
mov
es
dec
push
inc
and
cmps
dec
adc
pop
scas
and
add
dec
out
fiadd
cmc
ds
enter
or
push
fs
(bad)
mov
ins
outs
in
retf
lea
push
call
repnz
arpl
pop
add
xlat
popa
stos
(bad)
retf
dec
sbb
inc
xlat
nop
(bad)
test
mov
gs
lds
push
xchg
jecxz
popf
pushf
push
cli
push
cmp
push
mov
or
mov
leave
ficomp
outs
jno
inc
mov
loope
mov
cli
xchg
add
cmp
cmc
fwait
shl
sub
inc
mov
mov
mov
mov
loope
fisubr
mov
jmp
dec
sub
daa
mov
cli
mov
adc
and
test
add
and
cmp
fsubrp
pop
xchg
sub
mov
ret
dec
mov
icebp
adc
std
cld
and
xlat
add
cmp
bound
and
add
daa
stc
push
push
sti
inc
jb
mov
pop
test
(bad)
ins
xchg
call
cmp
dec
jne
loop
arpl
hlt
dec
pop
push
retf
jae
mov
fadd
push
setg
sub
inc
pop
inc
outs
movs
icebp
pop
xchg
add
scas
bound
mov
arpl
fcomip
fcos
xchg
dec
loop
push
inc
(bad)
adc
mov
movs
dec
arpl
mov
sub
pop
pop
pop
dec
dec
(bad)
jnp
push
push
clc
xchg
in
mov
push
or
cmp
jp
xor
dec
xchg
shl
cmp
jbe
dec
gs
dec
push
shl
dec
xchg
jmp
push
or
mov
pop
das
or
xchg
jbe
xor
sbb
add
or
xchg
or
or
xlat
or
idiv
mov
and
jnp
pmaxub
or
pop
leave
stos
fadd
mov
pop
(bad)
call
scas
add
repnz
pop
das
jg
jl
aas
jmp
cli
in
test
cmp
mov
mov
or
fwait
push
mov
fisubr
sbb
call
out
add
mov
jl
int
fwait
in
xor
popf
dec
dec
mov
shl
lods
(bad)
adc
jbe
fisubr
pushf
aad
jb
push
cmp
imul
jecxz
imul
cs
(bad)
js
sub
shl
popf
pusha
xchg
mov
xchg
inc
out
mov
push
and
pop
js
mov
(bad)
std
jne
in
mul
mov
push
mov
outs
and
outs
test
cmp
mov
sbb
or
mov
daa
cmp
stc
push
dec
xor
or
mov
loopne
sbb
xchg
sub
in
jo
pop
cmps
sub
ss
lock
inc
xor
stc
xor
cmp
sbb
je
test
dec
jp
xchg
iret
ja
add
bound
mov
js
fdiv
icebp
jnp
mul
addr16
xor
sub
fnstcw
pop
stos
sub
inc
xor
add
ret
addr16
dec
jne
dec
or
std
lods
jp
xor
push
cmp
fbld
out
adc
dec
inc
lods
(bad)
pop
sub
sub
push
loope
sahf
dec
outs
sbb
push
add
cdq
cmp
xchg
push
scas
outs
lea
jge
push
and
sub
push
dec
jg
pop
jbe
jo
fld
pop
or
scas
arpl
popf
sbb
imul
xor
fadd
mov
movs
mov
sbb
inc
adc
shl
and
sub
ret
cmps
repz
cmp
and
clc
xchg
push
or
sub
test
inc
aam
push
ret
adc
mov
(bad)
pop
lahf
push
vcvtps2dq
sti
inc
sbb
inc
retf
add
imul
pop
mov
mov
cmp
xchg
inc
or
push
push
imul
arpl
in
sub
mov
sbb
mov
lahf
aam
xor
adc
bound
xor
sahf
mov
sar
mov
cld
fdiv
xchg
popa
in
in
mov
sbb
in
or
push
(bad)
scas
nop
mov
jbe
or
imul
xor
mov
add
mov
movs
inc
ret
lea
xchg
adc
outs
je
ret
add
out
xchg
test
xlat
cld
push
popa
nop
int
ins
dec
pop
cwde
scas
or
rcr
enter
ja
fdiv
scas
add
jne
xchg
jl
out
int
std
inc
sub
movs
pop
in
cmp
mov
imul
int3
ins
push
(bad)
jbe
rcl
add
sub
mov
cmp
vcvtdq2ps
mov
mov
call
ficomp
mov
and
or
add
cli
adc
mov
jecxz
mov
fwait
sub
xchg
cmp
jb
scas
sub
mov
jne
movs
inc
je
pop
ss
cld
xor
mov
cmp
stc
mov
cmp
sub
dec
jb
push
scas
lea
(bad)
sbb
or
popa
mov
outs
xor
je
fadd
dec
dec
mov
call
xchg
mov
mov
xor
xchg
xor
cmp
push
data16
sub
rol
or
clc
push
cmp
(bad)
jmp
xor
in
inc
lds
stos
test
pop
and
sar
push
mov
outs
addr16
daa
sub
in
nop
or
and
int3
mov
mov
retf
into
mov
push
cwde
lods
cdq
xchg
adc
lods
dec
cmp
jb
ins
pushf
mov
in
xor
into
rol
shl
add
dec
sbb
scas
cmc
out
loop
not
or
mov
mov
fucom
mov
out
jmp
mov
call
mov
xchg
scas
adc
(bad)
xchg
inc
push
in
popf
pop
xor
cs
rol
push
dec
rcl
xchg
fs
mov
out
sub
stos
add
sub
pop
aas
xlat
fwait
cmp
outs
push
js
fdivr
not
je
ror
ja
push
(bad)
scas
call
xchg
loope
adc
push
jmp
shl
sbb
ins
cs
popf
movs
sti
push
clc
xchg
mov
fsubr
inc
add
jmp
jecxz
and
mov
or
mov
xchg
push
popa
sbb
js
test
(bad)
loope
jmp
push
out
add
adc
fnstsw
ss
inc
mov
and
pop
mov
inc
sbb
push
dec
xor
adc
inc
and
retf
repz
xchg
aam
push
mov
dec
mov
loopne
sysenter
mov
imul
ja
(bad)
push
and
iret
sub
dec
jb
lock
repz
pop
jmp
jmp
sub
mov
pop
aas
cli
mov
neg
sub
cmps
jnp
xor
(bad)
test
ret
cs
mov
sub
xchg
(bad)
fcom
jae
rcr
les
xor
dec
push
dec
and
(bad)
or
push
mov
into
mov
push
add
push
xor
jmp
pop
mov
test
and
stos
test
in
adc
shl
sbb
mov
add
pop
aaa
scas
fwait
xchg
cmc
mov
jp
push
mov
xor
add
jae
in
pop
(bad)
dec
or
cmps
lock
lods
and
psubw
mov
pushf
adc
xchg
cmp
mov
add
mov
sahf
les
shl
inc
shr
rcr
mov
rcl
cmp
mov
js
pop
pop
mov
ja
movs
push
dec
lahf
dec
adc
aas
push
les
mov
div
call
in
sbb
lods
sahf
xor
je
xor
sbb
shl
(bad)
jmp
mov
shl
jl
fbstp
xchg
dec
cdq
sbb
lods
sub
inc
xchg
mul
test
add
mov
lahf
add
js
data16
jne
loopne
out
gs
dec
js
sub
pop
bnd
(bad)
stc
jmp
jbe
lods
cmp
pop
pop
push
add
mov
inc
imul
leave
imul
cvtps2pd
loop
loope
push
jmp
lods
cmp
cwde
inc
mov
(bad)
das
jmp
cmp
into
add
jmp
(bad)
fsub
call
pop
mov
jns
jmp
dec
call
sbb
pop
and
mov
(bad)
fidiv
add
sub
ss
pop
popa
adc
jmp
or
pop
and
into
out
sar
and
jno
add
adc
mov
mul
nop
xor
mov
movs
mov
sub
cdq
or
push
pop
outs
xchg
dec
fwait
xchg
jecxz
or
mov
ds
stc
sar
cmp
sbb
dec
(bad)
pop
mov
xchg
cmps
shr
fisub
cdq
mov
pop
jb
mov
mov
add
in
loopne
repz
iret
mov
scas
test
jno
mov
mov
xchg
and
fcom
add
lods
inc
mov
cdq
pop
mov
repnz
push
mov
std
mov
xor
sub
ins
ret
push
(bad)
push
push
pop
pop
jmp
fmul
stc
bound
imul
out
mov
les
scas
pop
sti
iret
(bad)
jmp
sub
dec
ret
aas
mov
lock
jbe
inc
add
in
jp
cmp
adc
imul
add
out
jp
push
out
xchg
dec
jmp
ja
and
repnz
leave
(bad)
call
sar
sar
or
mov
repz
ja
idiv
stos
sub
sbb
ins
ds
out
test
push
sbb
hlt
mov
test
adc
scas
mov
mov
scas
mov
das
push
mov
pop
pop
mov
mov
xchg
test
cwde
pop
fimul
xchg
jge
mov
mov
dec
push
call
jne
push
cmp
add
call
icebp
(bad)
or
test
push
mov
repz
es
cmp
mov
pushf
push
inc
pop
pop
popa
inc
(bad)
psubd
jp
(bad)
sub
and
jns
add
inc
leave
in
(bad)
loopne
or
mov
add
sub
sbb
push
sub
lea
adc
jo
mov
cmps
out
dec
jnp
test
in
mov
hlt
push
add
xor
push
into
out
pop
xor
sahf
adc
loop
call
lods
bndstx
xchg
ret
xor
or
push
pop
jo
iret
push
sub
movs
cdq
sub
out
aam
push
enter
jp
cmps
sbb
mov
adc
lods
mov
shl
movs
stc
(bad)
push
js
popf
sbb
cli
clc
jge
adc
mov
xor
es
data16
sti
adc
push
pop
ds
dec
lds
fisttp
xor
mov
ror
mov
pop
repz
mov
cli
jmp
adc
cmps
pop
jg
dec
sbb
jb
mov
imul
loope
jne
jns
push
addr16
test
stc
rol
not
mov
shl
into
enter
dec
and
and
jb
lods
adc
jmp
pop
nop
inc
leave
cwde
jl
mov
iret
imul
mov
(bad)
mov
cmp
call
xlat
loope
jmp
xor
cwde
test
jno
nop
sahf
pusha
add
fwait
je
ror
sbb
cmp
les
mov
repz
push
adc
cmp
mov
add
mov
test
adc
cmps
mov
inc
daa
inc
add
fmul
adc
ficomp
pop
shl
icebp
xor
daa
push
leave
push
xor
dec
add
rcl
adc
ficomp
inc
call
test
aas
sahf
(bad)
mov
(bad)
adc
rcr
cmp
xor
mov
mov
add
scas
mov
cld
cmp
imul
sub
in
push
xchg
lahf
out
jb
sub
call
xor
out
shr
mov
in
fs
cmps
test
fist
stc
inc
mov
push
adc
mov
shl
retf
neg
xor
sub
pop
pop
test
mov
repz
out
xlat
pop
bound
iret
clc
pop
ds
shr
adc
xor
xor
dec
scas
adc
icebp
ret
loope
rcr
pop
fcmovne
inc
fsub
jl
mov
les
jmp
test
push
sub
out
mov
mov
pushf
jmp
bound
cmp
push
ds
in
sbb
mov
sti
in
fisttp
ror
dec
push
test
ror
and
cdq
arpl
jle
mov
add
test
push
repnz
pop
sbb
push
sub
jo
ret
add
(bad)
sbb
ds
mov
jnp
cs
jae
dec
rol
push
cmp
push
cld
inc
movs
cmp
xor
adc
repz
(bad)
mov
repnz
xchg
mov
mov
(bad)
in
ror
pop
outs
jne
mov
mov
mov
aaa
aam
xor
mov
fild
loope
and
shl
cs
sbb
xor
aad
psubusb
retf
sbb
jnp
jo
hlt
outs
mov
sbb
enter
(bad)
movs
inc
xchg
or
add
mov
cdq
xchg
data16
push
lods
adc
movs
test
mov
pop
pop
mov
into
mov
mov
aad
jle
push
in
scas
xor
mov
les
repnz
cwde
mov
into
pusha
or
push
jbe
sbb
aad
das
jle
lahf
jmp
lds
mov
scas
dec
adc
fldcw
cwde
dec
fisub
xor
imul
in
inc
dec
ret
and
repnz
sti
pop
xchg
or
leave
retf
movs
lods
test
mov
fucom
cmc
call
mov
and
or
inc
dec
sub
ret
jmp
add
cli
cmps
mov
cmp
in
stos
pop
jbe
popa
adc
lea
mov
mov
call
int3
popa
push
or
bound
popf
xor
jb
mov
pop
pop
mov
jne
push
inc
fild
repz
sar
adc
cmp
pushf
test
retf
pop
sahf
xchg
cmc
xor
(bad)
jns
jnp
lea
mov
test
in
pusha
(bad)
cmp
xlat
loopne
fnstcw
movs
sti
ds
jmp
sbb
push
push
push
dec
jp
adc
inc
push
inc
xchg
add
mov
fdiv
dec
and
mov
cs
std
xor
inc
push
adc
mov
push
ja
shl
xor
push
mov
hlt
icebp
mov
sub
stos
xchg
lea
(bad)
pop
cmp
push
mov
adc
sbb
ret
pop
lods
mov
test
shr
add
aam
icebp
(bad)
cmp
inc
pop
int3
ins
jo
mov
xchg
pop
and
cld
adc
or
mov
jmp
and
jo
xchg
pop
aam
adc
sub
mov
sar
jmp
in
cmp
jns
push
pop
push
xor
out
fwait
and
cmp
popa
in
daa
call
push
imul
push
lock
out
imul
mov
adc
add
arpl
inc
popa
cmc
loope
cmp
pusha
xchg
fwait
inc
dec
daa
in
inc
lea
pop
leave
(bad)
lock
adc
movs
inc
shl
test
cmp
mov
push
cmp
aad
or
xor
pop
ret
or
mov
cli
fs
xor
jl
xchg
popa
movs
push
sahf
add
ja
xchg
inc
push
in
inc
adc
call
mov
push
sub
jmp
hlt
das
daa
adc
movs
cdq
sbb
or
inc
out
test
xchg
mov
(bad)
xchg
adc
lods
out
cwde
mov
push
(bad)
fucompp
daa
ja
push
mov
daa
shl
pop
outs
popa
lea
mov
cli
in
test
ins
xchg
cdq
(bad)
stc
pop
mov
(bad)
(bad)
imul
dec
mov
jp
xchg
or
dec
test
cld
or
outs
das
dec
or
iret
jl
cmp
je
xchg
(bad)
and
pop
movs
inc
pop
lods
das
leave
add
mov
shl
jno
or
and
mov
pop
push
fimul
shl
cmp
xlat
sub
into
(bad)
inc
mov
fs
mov
in
adc
fimul
test
jmp
mov
pop
jno
dec
dec
aaa
and
inc
call
adc
jmp
cld
movs
mov
mov
jge
aaa
rcl
adc
test
(bad)
(bad)
shl
out
(bad)
in
scas
dec
pusha
retf
out
push
or
fld
sub
scas
popw
push
dec
enter
pop
iret
pop
dec
mov
xchg
arpl
mov
pop
imul
stos
cmp
inc
sbb
push
int
ret
mov
div
mov
push
push
jne
lods
xchg
jmp
mov
ins
mov
ins
cmps
pop
mov
xor
mov
xor
arpl
push
mov
adc
stc
stc
push
push
push
dec
in
pop
mov
rcl
pop
jle
jge
dec
push
call
iret
mov
out
lock
pop
push
xor
dec
inc
mov
iret
xchg
clc
int3
in
mov
icebp
gs
into
pop
and
dec
sub
mov
xchg
rcr
outs
rcl
push
(bad)
sub
dec
push
sbb
mov
or
pop
rcr
and
jae
movs
cs
mov
stos
xchg
dec
pop
rol
mov
mov
cdq
cdq
jbe
movs
mov
xor
mov
js
pop
nop
pushf
adc
fs
add
and
xor
or
dec
shl
movs
xchg
and
lock
scas
lock
adc
in
jl
xchg
pusha
push
mov
mov
fimul
and
loope
or
pop
xor
push
cdq
loop
push
cmp
pop
std
ins
or
rcl
scas
and
jae
sub
div
mov
mov
pop
enter
mov
mov
jmp
inc
or
cmp
xchg
push
pop
outs
imul
adc
mov
push
and
dec
das
xor
cmp
push
shl
adc
sti
push
lods
xor
call
loope
scas
out
ret
jns
cs
out
adc
das
test
xchg
or
or
dec
mov
xor
aad
pusha
clc
sub
pop
cmps
xor
(bad)
sbb
sbb
clc
xchg
test
push
ins
push
mul
push
fisttp
inc
sub
mov
iret
dec
push
rol
jecxz
jmp
retf
xchg
cmp
mov
xor
nop
adc
sbb
loope
push
scas
push
dec
dec
(bad)
cmp
mov
cmp
sbb
inc
pop
cmp
arpl
jae
lods
mov
push
inc
jmp
ins
nop
push
fwait
pop
xchg
or
mov
jno
xchg
js
jns
mov
popf
push
or
xor
inc
int
ret
ins
xor
mov
push
in
jmp
stos
pushf
and
ficomp
outs
scas
xor
mov
mov
in
cmps
cmps
pusha
jmp
or
cs
push
adc
outs
les
in
test
mov
xor
dec
push
add
mov
mov
xchg
imul
add
rol
sub
popa
(bad)
retf
test
jp
shr
aad
loopne
in
xchg
cmp
popf
sub
jbe
lods
fstp
std
mov
popa
int
adc
cmps
arpl
popf
cmp
lods
push
out
dec
imul
cmp
call
xor
pop
cmp
(bad)
xor
(bad)
pop
in
in
add
ret
into
movs
cdq
movs
xchg
mov
sbb
sbb
and
pop
cmp
or
mov
add
sbb
retf
adc
pop
jns
imul
adc
sub
gs
pop
push
outs
sbb
mov
mov
loopne
retf
ret
int
and
call
mov
test
int
mov
(bad)
ja
pop
or
fild
adc
neg
mov
retf
cmps
call
ins
dec
arpl
or
das
push
add
add
test
aas
fild
fistp
dec
(bad)
rcr
fs
sbb
cmps
pushf
inc
adc
out
dec
inc
inc
popa
mov
pop
mov
inc
sbb
cmps
scas
mov
jmp
pushf
sub
int
shl
das
lahf
ret
test
xor
and
imul
aas
push
mov
xlat
push
and
jne
adc
cmc
inc
or
sub
(bad)
xlat
cwde
jg
mov
inc
repz
fidivr
sub
ss
sbb
sub
fucomi
sbb
xchg
out
add
add
inc
and
stos
sti
lods
ficom
jecxz
fiadd
or
or
das
xchg
cmps
lods
push
mov
js
adc
push
lds
das
fiadd
sbb
xor
sbb
cli
adc
sar
pop
adc
bswap
adc
imul
xor
adc
outs
je
(bad)
aaa
push
cmp
shl
jo
mov
leave
aam
sbb
mov
fmulp
adc
dec
push
or
loope
sbb
pop
adc
call
loope
xor
mov
push
and
iret
add
xor
jl
jle
daa
adc
lds
popf
popf
or
xor
mov
imul
inc
pusha
mov
adc
ja
pop
jp
in
cmps
mov
les
in
cmp
and
push
pop
add
rol
(bad)
xor
sub
mov
in
(bad)
or
xor
and
pushf
out
imul
nop
xchg
enter
mov
ss
xchg
or
sbb
jbe
mov
retf
in
sub
rol
lds
ins
stc
mov
add
mov
mov
cmp
cmps
outs
mov
push
dec
add
mov
mov
mov
add
pop
push
leave
test
mov
icebp
pop
push
jae
jmp
xor
out
sub
cmc
pop
mov
test
shl
cmp
xor
sbb
jge
pop
aas
add
push
rcl
frstor
add
lods
into
dec
mov
pop
nop
adc
pop
adc
and
int3
lods
in
mov
jo
test
push
dec
jmp
pusha
out
xor
repz
ja
xor
and
and
jg
cmp
lock
sbb
dec
dec
push
lods
cdq
lods
mov
add
mov
loopne
xor
add
or
cld
ds
jnp
pop
iret
sti
das
sub
outs
jle
nop
mov
adc
dec
test
mov
jmp
ror
push
stc
jo
xchg
jecxz
cmp
cmps
jmp
sar
or
xchg
mov
xor
cmc
(bad)
cdq
add
sbb
mov
mov
sbb
dec
fidiv
and
or
mov
in
jmp
cmp
dec
icebp
jecxz
dec
pop
xchg
mov
retf
add
jle
sub
call
push
imul
inc
dec
mov
sbb
into
inc
rol
shl
or
dec
loop
push
ins
push
sbb
pop
int3
push
(bad)
fild
fwait
push
movs
jbe
jns
add
push
xchg
pop
jl
or
pop
inc
retf
mov
movs
rol
cmp
ret
push
mov
push
scas
pop
into
push
fcomp
cmps
movs
sub
cmp
pop
aaa
aam
dec
cmp
push
lock
in
ja
xchg
mov
jl
pop
ret
ret
test
push
inc
sbb
pop
int3
clc
(bad)
jge
in
and
xor
or
out
movs
push
jns
cli
int
xor
lods
sub
adc
push
sbb
adc
test
push
cmp
inc
mov
xchg
popf
call
pop
adc
xor
xchg
or
xor
adc
lods
in
add
fsubr
lds
iret
in
pop
xchg
push
mov
push
cmp
push
xchg
cmp
mov
xchg
hlt
outs
in
addr16
push
arpl
fst
ds
pushf
stos
call
sub
rcl
jmp
or
mov
popf
cmp
cmp
dec
sbb
fdiv
xchg
imul
dec
lods
sub
push
or
mov
cmp
inc
dec
push
push
lock
cmp
aad
dec
hlt
cmp
ds
not
in
adc
mov
inc
pop
aam
xchg
xchg
adc
std
in
jge
int3
es
imul
fldenv
iret
pop
(bad)
les
jp
xor
sbb
lods
mov
xchg
push
bound
(bad)
push
inc
pushf
fcmovne
xchg
gs
and
hlt
cmp
iret
sub
cmp
icebp
sbb
shl
adc
sbb
inc
xchg
mov
pop
sbb
dec
pop
sbb
and
xor
sbb
(bad)
push
rcl
fs
sub
test
bound
xor
aaa
sahf
mov
xchg
push
shl
inc
xchg
lds
das
adc
xchg
mov
mov
loopne
push
xchg
lods
add
into
xchg
lods
xchg
scas
pop
mov
(bad)
sub
xlat
sbb
pop
sub
ret
popf
fcomp
pop
adc
mov
mov
xchg
adc
dec
mov
mov
mov
fld
jne
pusha
ret
adc
mov
popf
(bad)
inc
xchg
not
jns
inc
pop
in
in
(bad)
repnz
adc
stc
loope
dec
call
fidiv
movs
pop
mov
fiadd
or
stos
sub
les
pop
loope
sar
pop
jmp
push
push
mov
inc
jbe
repnz
lahf
adc
in
test
js
pop
stos
ret
retf
mov
shl
push
mov
push
sub
push
fdiv
out
mov
jl
adc
mov
jmp
adc
mov
in
pop
inc
xor
jmp
dec
pop
add
scas
(bad)
sbb
add
add
xor
retf
xchg
cld
xchg
jl
push
xchg
mov
movs
mov
add
aam
popf
xchg
xor
mov
inc
and
mov
jmp
popa
scas
ins
mov
outs
jp
pop
push
loop
xor
out
out
sbb
push
or
je
cmp
push
pop
jg
fsub
repz
lds
fistp
jo
retf
rcr
mov
rol
call
out
pop
xchg
sub
inc
mov
push
jg
fsubr
adc
in
cmc
hlt
test
les
cmp
or
inc
fdivp
pusha
jnp
imul
stc
push
fst
iret
aaa
enter
and
call
(bad)
push
out
int3
adc
ss
lods
(bad)
lds
and
aas
mov
daa
in
and
and
movs
add
push
cdq
fild
out
je
xlat
pop
cdq
dec
sub
icebp
pop
pop
cwde
jns
or
int3
cmc
test
in
xchg
vcvtss2si
push
scas
cmovae
scas
scas
push
sbb
mov
or
dec
out
jo
pop
dec
and
mov
adc
sbb
adc
and
sti
mov
ret
and
push
or
fs
dec
cmp
xlat
js
std
jmp
inc
bound
into
adc
cdq
or
imul
out
ja
push
mov
or
mov
push
sub
jp
pushf
scas
hlt
mov
inc
nop
push
add
mov
nop
push
not
call
sub
lods
jae
(bad)
pop
xor
and
aad
cmc
xor
sar
mov
popa
push
int
mov
pusha
(bad)
shl
pop
adc
repz
shl
xor
cdq
repnz
retf
ss
cmp
jo
pop
mov
xlat
adc
dec
call
add
cmp
sub
in
mov
cmp
jp
addr16
(bad)
jmp
clc
shl
mov
or
jne
and
dec
das
in
pop
inc
add
pop
(bad)
xor
dec
cmps
mov
aaa
loope
and
sub
or
inc
jno
cmc
out
jecxz
(bad)
ja
xchg
xchg
ret
xor
xchg
cmps
jmp
sbb
int3
ss
int3
stc
dec
aam
imul
cwde
and
ins
cmp
shr
jae
and
inc
push
not
stos
adc
popa
mov
push
cdq
fnstsw
aaa
fiadd
xor
aad
cmc
sbb
mov
pop
ins
popa
push
push
inc
fisttp
sbb
out
inc
popa
cmp
jg
nop
push
pop
pushf
sbb
or
pop
xchg
adc
xchg
jne
mov
jnp
mov
lods
pop
mov
or
push
leave
addr16
ret
inc
out
mov
popf
pop
sub
pop
in
or
(bad)
xchg
mov
pop
mov
repnz
ins
inc
repnz
jmp
sbb
mov
nop
jo
fs
jmp
pop
pop
mov
mov
jne
packuswb
leave
adc
push
push
mov
ret
mov
mov
pop
cld
les
push
enter
push
jl
jnp
retf
es
push
mov
pop
cmps
fwait
or
pop
jae
push
retf
lods
inc
(bad)
sbb
mov
shr
mov
sub
es
jnp
idiv
stc
push
sub
jnp
in
mov
sub
in
sub
or
inc
fdivrp
ds
and
call
inc
int
(bad)
ds
mov
xchg
repz
mov
pop
out
outs
add
mov
test
sub
test
sbb
sar
xlat
fiadd
xor
add
push
jl
ror
pop
shl
fwait
jns
lea
push
or
leave
add
dec
imul
xchg
inc
inc
add
mov
inc
mov
sub
fs
pop
ds
fldpi
pushf
ss
dec
push
xchg
sahf
mov
mov
aas
pop
xor
hlt
and
out
in
push
inc
stc
imul
cmc
or
aam
dec
fmul
jae
add
pop
adc
mov
inc
test
jno
push
mov
or
xor
adc
dec
push
arpl
xor
cmp
cmc
inc
leave
dec
test
popa
mov
or
ins
in
loopne
lock
std
outs
cs
je
es
lea
adc
or
ins
xchg
or
ret
data16
mov
fidivr
push
and
stc
adc
loopne
push
mov
fidiv
pusha
ss
std
adc
lock
mov
test
inc
cmc
mov
jmp
inc
xchg
mul
jmp
sub
int
pop
and
xchg
in
aaa
pusha
pop
mov
addr16
adc
dec
push
ds
fsub
pop
add
into
push
and
push
out
into
push
push
ret
mov
out
scas
leave
outs
mov
cmp
mov
cmc
repz
lock
sahf
loopne
mov
jne
add
jle
ror
cmp
sti
xchg
jp
inc
inc
add
inc
std
outs
(bad)
push
xchg
dec
std
sti
lds
cmp
cmp
mov
sub
test
fistp
or
jle
pusha
cld
sub
bound
or
xlat
mov
and
mov
mul
addr16
je
(bad)
int3
or
pop
fimul
adc
push
mov
mov
pop
xor
ds
xor
dec
and
into
aas
imul
or
sbb
add
mov
pop
or
iret
sub
mov
retf
lea
push
fild
mov
shl
cmp
rol
sub
cmps
mov
push
jg
push
mov
movs
popf
pop
pusha
stc
out
xor
mov
xlat
das
aaa
xor
out
mov
out
and
sbb
lods
retf
(bad)
lea
xchg
and
push
lds
dec
jbe
scas
mov
jae
enter
and
iret
adc
mov
mov
mov
mov
xlat
imul
into
cwde
fisttp
fidiv
mov
hlt
das
mov
hlt
cmp
dec
jg
clc
push
js
adc
fnstcw
mov
cmp
sbb
pop
test
shl
cli
adc
lahf
shrd
jno
arpl
and
jmp
and
in
mov
dec
rol
push
push
outs
xchg
push
dec
shr
in
(bad)
stos
pop
cmp
in
dec
jb
out
outs
inc
mov
or
push
sbb
xchg
pop
scas
cs
outs
lock
jl
jne
mov
std
aam
hlt
xor
mov
adc
or
xor
mov
fstp
call
xchg
inc
hlt
ret
inc
aaa
push
pop
jg
push
and
add
pop
scas
xchg
xor
add
cmp
mov
inc
je
in
sub
pushf
sub
out
dec
mov
pop
sub
mov
je
imul
sbb
cmp
push
mov
and
movs
aam
push
in
adc
xchg
pop
aas
adc
sar
out
mov
test
mov
jb
out
leave
mov
ja
maxps
cmp
sbb
sbb
out
add
pop
ins
sbb
call
adc
stos
leave
adc
and
sbb
push
outs
adc
mov
pop
and
jge
pusha
into
ror
push
sub
cwde
adc
and
in
sbb
mov
cmp
mov
(bad)
out
jmp
adc
mov
cwde
movs
xchg
mov
xor
adc
sub
pop
pushf
ror
adc
cld
and
popf
stc
mov
add
jle
xchg
mov
pop
test
add
mov
lods
mov
jno
pop
adc
nop
rcl
sbb
adc
cli
in
pop
sbb
outs
inc
mov
cmps
mov
add
xlat
outs
xchg
bound
sub
imul
cs
add
jns
xor
dec
idiv
xchg
push
(bad)
cmp
or
div
sub
rol
rcr
lods
mov
sahf
dec
shr
inc
dec
sub
add
cli
cmp
add
dec
outs
cmp
sub
shr
sub
clc
mov
div
retf
ror
dec
xchg
xchg
xor
ins
push
data16
sbb
and
adc
fadd
sti
je
or
push
dec
pop
jnp
xchg
sub
dec
and
xor
mov
ins
or
les
enter
xor
aad
mov
je
jle
adc
pop
jg
and
scas
cdq
fs
test
add
aam
fwait
(bad)
arpl
pop
jnp
jne
mov
inc
xchg
cmp
jp
or
bound
iret
sub
push
xor
sub
out
mov
jle
add
int3
fnstsw
not
adc
jbe
cmp
pop
data16
jno
adc
das
jno
into
scas
mov
add
xchg
mov
sub
ror
icebp
add
repz
and
ins
loope
add
clc
inc
and
sti
out
fwait
mov
scas
push
test
push
xchg
mov
imul
(bad)
in
jbe
(bad)
das
jns
mov
dec
scas
pop
clc
xor
addr16
xchg
push
ins
jno
cdq
out
in
xor
stc
jl
pop
mov
pop
les
pusha
int3
icebp
lea
dec
push
push
or
xchg
dec
cmps
ret
stos
adc
and
inc
aaa
push
cmp
pop
ins
out
push
add
call
jle
arpl
push
push
cmps
sbb
and
fnstenv
xor
out
inc
cmc
lahf
retf
movs
cmp
mov
dec
xor
or
mov
xchg
cmps
and
mov
retf
pop
jecxz
jmp
pusha
aas
pop
sbb
jp
loope
fsub
cmp
xchg
in
ja
iret
mov
xchg
cmpxchg
adc
push
(bad)
in
mov
outs
sub
sbb
sbb
pop
std
sar
test
stos
call
inc
cmp
fmulp
sbb
inc
mov
(bad)
lods
cmp
or
(bad)
addr16
push
lock
xor
fadd
and
dec
sbb
push
adc
test
dec
ss
add
div
das
in
adc
push
cmps
jb
pop
cld
and
test
(bad)
cwde
add
jne
cdq
imul
mov
call
xchg
ds
in
shl
int
fisttp
push
push
leave
nop
mov
outs
jo
leave
push
add
(bad)
(bad)
loope
(bad)
loop
div
jbe
retf
mov
and
cmps
adc
jmp
sbb
arpl
int3
mov
js
adc
mov
jmp
pop
or
push
dec
fwait
pop
cwde
dec
add
sub
stos
(bad)
out
inc
xor
cld
push
add
mov
jne
scas
cmps
jecxz
aaa
scas
jno
mov
mov
pop
adc
fwait
arpl
int3
mov
dec
je
pop
mov
shl
jl
cmc
mov
mov
nop
pop
and
cmc
sub
or
sub
aam
xchg
mov
xor
cmc
sbb
loop
sub
fiadd
xchg
dec
jge
mov
into
push
in
stos
pushf
push
call
out
xchg
lds
pop
in
push
pop
aad
sub
xor
shr
or
jbe
daa
(bad)
out
adc
xchg
add
or
add
or
ret
cmp
ds
ss
ins
pop
jno
je
jge
test
and
stos
pop
shl
sub
fdivr
test
add
pop
add
stos
cmovnp
dec
fs
addr16
in
ins
jnp
or
cmc
fisttp
out
add
push
in
jno
fs
cli
arpl
inc
fnstenv
aas
repz
or
mov
fcom
inc
pop
inc
fwait
mov
xor
sti
mov
mov
in
push
mov
lock
gs
ror
jbe
jp
jle
sti
test
jno
pop
add
scas
aaa
xchg
jmp
xchg
jno
fs
sub
rol
jmp
fbstp
(bad)
sahf
mov
fimul
xchg
fnsave
loopne
mov
jnp
pop
or
xor
dec
movs
mov
mov
stc
bound
add
sub
test
stos
adc
sub
push
mov
pusha
xchg
push
dec
(bad)
fnsave
mov
add
jecxz
stos
add
push
xchg
rcl
ins
pop
or
mov
mov
pop
jo
mov
dec
xor
addr16
pop
sbb
iret
loopne
pop
inc
sahf
sbb
jns
sbb
cmp
movs
aaa
push
mov
xchg
inc
xchg
shl
mov
mov
dec
aam
gs
inc
adc
retf
and
mov
lods
mov
cs
adc
or
daa
daa
movhps
adc
jns
or
and
cmp
(bad)
cmps
ret
repnz
inc
xchg
mov
call
mov
inc
add
fcmovne
into
xor
mov
fwait
pop
or
sbb
mov
cs
dec
sar
pop
sub
fwait
scas
les
xor
loope
loopne
loop
les
dec
addr16
cmp
push
movs
cmp
lock
cmp
lds
push
jnp
or
(bad)
fcom
jl
inc
dec
inc
inc
and
fdivr
sbb
mov
out
dec
jbe
cld
test
retf
jmp
(bad)
and
call
dec
jg
pushf
inc
jl
xchg
mov
adc
or
xchg
scas
pop
sbb
stos
and
leave
push
ja
push
ins
add
push
xchg
mov
mov
xlat
adc
cmp
aad
cdq
mov
loop
mov
test
sub
out
dec
jmp
outs
push
xor
cmp
ins
push
sub
out
test
xchg
movs
push
xchg
xchg
fadd
scas
hlt
mov
adc
cmp
sbb
dec
lds
fistp
lock
das
mov
mov
push
xchg
cmp
xchg
mov
xor
xor
push
push
js
dec
add
sti
aad
sub
dec
pop
xor
je
imul
aas
cmp
fnsave
pop
sub
or
imul
sbb
repz
or
pop
push
dec
add
fs
mov
xchg
fcomp
push
mov
sub
mov
cdq
(bad)
push
hlt
dec
mov
ja
out
outs
mov
xchg
mov
jmp
xor
bound
pop
in
scas
lock
cmp
and
fistp
dec
adc
sbb
mov
ror
push
jmp
in
jbe
sub
stc
mov
cmp
into
cmc
jmp
xor
jecxz
std
pop
jmp
add
jge
mov
test
aaa
les
sbb
jp
cmps
xlat
jb
js
dec
sbb
add
sub
ds
rol
pop
mov
arpl
imul
cmp
xchg
sub
das
dec
mov
outs
sub
sbb
xchg
inc
push
mov
and
sbb
(bad)
mov
adc
adc
push
jo
fwait
nop
stc
xor
add
sbb
rcr
pusha
push
loope
out
mov
pop
inc
repz
mov
sbb
inc
bound
shr
leave
add
add
mov
xchg
stos
mov
out
mov
ins
mov
mov
sub
mov
hlt
out
(bad)
int
mov
inc
push
or
loop
ins
in
sbb
out
mov
dec
into
popf
int3
or
pop
xor
in
into
sbb
push
pop
rcl
mov
inc
outs
jno
mov
push
pop
adc
mov
addr16
out
sbb
or
call
clc
jmp
sbb
lock
jae
cs
adc
adc
mov
rcl
cmp
mov
push
loopne
cld
mov
add
sub
sub
jmp
mov
mov
push
add
jnp
(bad)
mov
pusha
(bad)
xor
cmp
ja
pop
xchg
or
mov
les
shl
jmp
sub
sar
jmp
lock
xchg
sub
movs
rcl
or
fst
mov
sub
push
loop
std
fisttp
add
shr
popf
test
inc
call
sbb
inc
or
scas
or
sub
test
(bad)
loopne
arpl
jne
fistp
jo
mov
xchg
sbb
(bad)
iret
jb
in
xchg
sbb
out
frstor
mov
out
mov
aas
mov
call
jecxz
or
cdq
add
out
push
xchg
sbb
adc
sub
outs
and
aam
sti
lahf
jge
xor
adc
jecxz
pop
sub
idiv
adc
push
out
mov
jmp
popf
in
or
push
cmp
cli
cmp
xchg
std
and
pop
ja
cmc
jmp
enter
cli
gs
cld
cmps
push
push
lds
ins
cld
sub
cwde
xlat
inc
mov
in
ret
bound
mov
xchg
xor
xchg
add
inc
xor
iret
dec
add
in
mov
cmp
gs
push
fsub
or
mov
mov
lahf
add
jne
mov
int
ret
mov
mov
xchg
lock
fwait
lds
pop
cmps
cmps
jge
sbb
lea
fild
mov
arpl
adc
aad
ret
fstp
jo
inc
sub
mov
or
xor
jno
fnstcw
inc
mov
mov
mov
adc
add
sub
cmp
in
leave
push
jg
sbb
push
xchg
call
popf
mov
push
pop
cmp
shr
inc
jbe
cmp
inc
repz
and
ret
std
fisub
clc
pop
sbb
fld
call
ins
and
mov
or
dec
sub
rol
scas
sub
xlat
xor
clc
push
mov
fucomp
jnp
xchg
inc
xor
jmp
test
scas
mov
and
push
mov
push
adc
shr
xor
arpl
jo
test
fimul
out
xor
jmp
add
cmp
test
das
adc
sub
ret
add
push
fmul
push
into
dec
stc
ret
lea
inc
sbb
popa
cmp
fucomip
pop
push
inc
mov
mov
or
inc
xchg
cmps
mov
sbb
cs
fucom
not
cmp
shr
rcr
adc
mov
sti
imul
add
mov
loope
jg
cmp
cdq
push
inc
and
aas
dec
cmp
push
aas
ss
push
sub
(bad)
gs
jnp
iret
nop
aas
std
push
arpl
pop
stc
mov
add
loope
push
dec
adc
in
retf
cli
xor
cmp
pusha
xor
ret
es
dec
test
mov
mov
in
rol
ret
daa
mov
sar
sbb
add
mov
sbb
fcmovbe
xchg
inc
gs
out
daa
sbb
pusha
push
xlat
dec
pop
pushf
pushf
test
cli
in
popa
xchg
ret
jmp
cmp
retf
shl
cdq
xor
mov
pop
in
fs
in
fwait
movs
lds
dec
movs
in
in
cdq
push
stos
clc
xchg
xlat
sbb
call
rcr
int
jb
sbb
scas
xchg
in
mov
scas
sub
pusha
fwait
mov
dec
inc
les
lods
popa
fisubr
repz
retf
pop
repnz
mov
xchg
mov
jmp
mov
xor
mov
leave
(bad)
jne
cmp
aaa
push
inc
daa
repnz
jnp
js
out
mov
inc
fwait
jmp
shr
mov
xchg
(bad)
jp
call
or
mov
div
add
pop
outs
imul
test
cmp
aaa
dec
mov
sbb
pop
std
lea
hlt
fidiv
loop
push
add
imul
jle
(bad)
jo
(bad)
cmc
in
lds
adc
mov
enter
mov
jno
mov
push
push
or
mov
inc
mov
sbb
sbb
test
call
pop
imul
imul
data16
add
cli
retf
fwait
xor
aam
(bad)
icebp
mov
fisttp
cmp
push
fisub
cmp
fist
retf
xchg
jp
push
mov
sub
scas
shl
outs
dec
pushf
fs
jns
mov
icebp
push
pop
enter
rol
dec
retf
adc
push
bound
cmc
(bad)
sub
add
pusha
jge
sub
pop
(bad)
aam
movs
nop
jmp
not
xor
sahf
jbe
adc
and
mov
jbe
sti
sbb
in
cmp
jge
push
lea
xor
scas
inc
(bad)
mov
jmp
aad
mov
outs
movs
call
in
lock
gs
jge
popf
call
pop
retf
sbb
ret
ret
jb
pop
xchg
test
adc
adc
fcomp
faddp
fisttp
xlat
adc
imul
add
jno
std
icebp
(bad)
jle
retf
mov
cs
xchg
inc
jp
mov
push
push
mov
scas
or
xchg
push
ret
add
pusha
inc
nop
add
stos
jl
pop
jecxz
xor
mov
fcomp
js
out
call
out
test
rcl
and
mov
test
mov
sub
in
scas
xor
jmp
aam
pusha
mov
dec
bound
sar
mov
std
add
ds
push
pop
das
int
jle
or
fld
test
xchg
mov
shr
fcomip
jo
cmp
fdivr
dec
jecxz
jo
iret
aas
cmp
sti
mov
push
cmc
div
stos
dec
sub
fcomp
dec
adc
mov
and
push
fnstcw
add
cs
int3
dec
mov
xchg
ds
retf
xor
aaa
outs
xor
dec
repnz
shr
data16
pop
xor
lock
lahf
fimul
out
cli
add
push
dec
into
pop
je
inc
inc
mov
lds
retf
mov
addr16
pop
repz
fild
inc
lock
jns
pushf
ror
mov
lahf
pop
fstp
lds
sbb
stc
and
movs
mov
or
xor
push
jl
loop
cwde
popf
imul
and
sub
dec
adc
out
stos
in
jge
pushf
jmp
pop
push
cdq
cmp
pop
xchg
ficom
imul
jnp
cmp
mov
xor
imul
fiadd
or
mov
and
loop
sbb
jae
test
mov
pop
add
push
mov
(bad)
cmp
and
pop
pop
inc
push
mov
shl
pop
aaa
fsub
sub
inc
xchg
rcl
nop
stc
push
sbb
das
dec
mov
into
inc
inc
adc
jbe
cwde
(bad)
jns
xchg
(bad)
aad
pop
dec
xchg
inc
and
es
mov
add
out
sub
push
cmp
das
ficomp
lahf
jmp
call
lea
rol
xchg
inc
inc
mov
jnp
cmc
and
test
push
xor
push
imul
cmp
pushf
int3
div
scas
mov
push
dec
unpcklps
cmpxchg
xlat
or
jg
imul
xor
or
lahf
idiv
mov
dec
aas
popf
adc
xor
mov
mov
leave
xchg
and
mov
mov
push
sub
dec
inc
aam
stos
fcmovu
xchg
mov
popf
je
or
outs
mov
push
dec
cmps
cwde
sbb
call
rcl
dec
push
add
sub
fisubr
ss
call
push
movs
dec
adc
imul
cmp
cs
jo
lock
dec
adc
fdivr
mov
push
adc
ret
jge
into
mov
jp
pop
mov
sub
inc
jg
or
inc
sub
cmps
jle
mov
sub
leave
mov
cs
push
adc
cwde
imul
xor
adc
adc
into
iret
fnstsw
mov
imul
fisttp
and
in
jne
ins
test
gs
pop
jg
int
sbb
loop
ret
jg
xchg
pop
mov
das
out
add
pop
jg
or
in
push
cmp
fcomp
push
sti
in
or
pop
pop
mov
jne
xor
fild
mov
pop
mov
add
sar
fmul
cli
mov
adc
jg
cmp
icebp
addr16
fidiv
leave
aam
dec
shr
sbb
clc
xor
enter
adc
inc
lds
sub
mov
cmps
lea
int3
into
pop
sbb
daa
test
fs
and
inc
arpl
rcl
push
aaa
jge
mov
inc
mov
das
rcl
shl
ins
cmp
add
pop
aas
lahf
dec
in
or
add
jmp
into
sbb
push
out
repnz
ins
sbb
inc
pusha
sbb
popa
inc
add
and
pop
xchg
and
fs
aam
sub
(bad)
cmp
pop
scas
retf
in
pop
out
mov
xor
je
jne
xchg
dec
dec
cmps
pop
push
cdq
lods
push
pop
cs
inc
enter
pop
(bad)
mov
iret
aam
adc
aam
outs
pusha
sbb
(bad)
xchg
dec
loop
out
fbstp
jb
imul
or
push
ret
nop
mov
pop
mov
pop
loop
test
pop
into
mov
in
shr
mov
arpl
mov
daa
inc
inc
imul
inc
sbb
xor
xchg
ret
das
rcr
cmp
das
lds
jnp
jecxz
(bad)
mov
or
inc
leave
jns
jecxz
lock
push
xchg
add
mov
ror
mov
fsub
add
sub
xor
das
xchg
lods
dec
(bad)
sbb
jmp
cmp
xchg
lods
cmps
mov
arpl
cmp
inc
pop
jecxz
jge
xchg
out
sub
cmp
es
mov
ins
sub
in
daa
loopne
xor
or
retf
mov
retf
dec
rcl
hlt
sbb
adc
xor
mov
cmc
xchg
cmp
sbb
add
push
push
cwde
lods
and
push
jbe
not
test
jp
das
jo
inc
cld
loopne
cmps
mov
pop
mov
push
xor
mov
loop
xchg
pusha
xchg
xor
int3
fldcw
mov
div
xlat
sub
xor
sti
push
xor
movs
xor
mov
and
rol
mov
jl
mov
cmp
xchg
xor
in
mov
mov
sub
sahf
mov
dec
cmp
jp
daa
pop
pop
jecxz
xchg
cmp
lea
ins
pusha
sub
and
push
cwde
xchg
les
push
cmp
jo
sub
or
loopne
push
jno
in
(bad)
xchg
cmp
pop
add
scas
pop
daa
jb
xlat
(bad)
add
push
push
push
int3
dec
xchg
cmp
inc
clc
xchg
push
in
push
out
sub
fwait
test
loope
lods
dec
pop
and
in
js
push
mov
jb
retf
inc
sbb
outs
pop
push
xor
adc
mov
in
mov
mov
loopne
out
xchg
call
sti
push
mov
fldln2
(bad)
hlt
shl
addr16
adc
push
mov
sub
mov
std
sub
mov
sbb
in
sub
jp
xchg
and
mov
mov
enter
pop
inc
push
push
xchg
inc
or
fcmovb
imul
jno
sbb
mov
cvtpi2ps
cmp
test
scas
ror
dec
xchg
xchg
sub
xor
shl
adc
loopne
mov
mov
xchg
cmps
or
sub
dec
nop
mov
stc
fldcw
and
mov
je
idiv
sbb
cli
and
sbb
lea
pop
adc
push
imul
pop
add
push
pop
or
add
adc
push
shl
pop
neg
push
mov
ja
in
pop
push
dec
cmova
mov
ss
stos
stos
stos
test
mov
in
addr16
hlt
push
or
outs
jg
cs
lods
jp
std
mov
sar
pop
jg
push
push
dec
int
mov
retf
cs
hlt
int
aam
mov
test
rcl
push
mov
gs
xchg
loop
jmp
mov
or
icebp
xor
rcl
shl
dec
sub
push
cmps
jmp
nop
daa
pop
clc
mov
push
(bad)
sti
xchg
rcl
aad
pop
adc
imul
cs
cmp
pusha
pop
mov
das
addr16
mov
movs
cmp
das
cmc
int
je
iret
mov
cdq
out
inc
push
push
repnz
nop
jmp
aas
enter
fcomp
addr16
nop
xchg
dec
add
js
lahf
xchg
je
or
jmp
push
fst
pop
int
fcom
shr
test
and
cmps
cmp
aam
xchg
adc
repnz
and
fwait
xor
adc
movs
sub
leave
enter
push
aad
(bad)
in
scas
inc
mov
aas
adc
stc
in
xchg
cmp
repnz
pushf
dec
outs
mov
mov
inc
test
cmp
xor
sub
pop
push
mov
ins
test
cli
mov
addr16
jmp
dec
sub
mov
xchg
dec
(bad)
dec
std
mov
push
fadd
xor
push
jl
cwde
lock
je
addr16
lea
inc
sbb
add
out
xchg
mov
popa
aam
push
or
cmp
inc
pop
cdq
leave
push
imul
std
dec
xchg
mov
lea
dec
movs
add
inc
pushf
add
push
out
in
ins
sahf
(bad)
adc
jb
sub
push
loop
pop
das
adc
ror
adc
inc
enter
popf
ror
(bad)
fisubr
je
mov
es
stc
mov
out
add
adc
or
and
ins
adc
int
sbb
stos
xchg
test
sbb
push
jmp
mov
ret
mov
sub
les
popf
jp
ficom
adc
shl
mov
add
adc
add
retf
movs
fisub
xchg
into
ficomp
or
repnz
jne
jmp
in
loopne
or
retf
das
sbb
(bad)
mov
xchg
scas
leave
mov
outs
pop
stos
jne
repz
out
jnp
neg
aaa
adc
(bad)
jecxz
lahf
jg
push
adc
pop
or
pop
dec
div
jecxz
or
(bad)
loope
jae
fstp
push
sahf
out
dec
xchg
jmp
sbb
cld
fnsave
cmp
popa
adc
fincstp
repnz
(bad)
dec
jne
pop
mov
dec
lods
and
ss
dec
inc
cs
pop
je
call
shl
add
cdq
in
or
ror
ins
aaa
xchg
call
adc
sub
inc
push
cmp
xchg
cmp
movs
mov
fsub
xchg
in
aaa
ins
cmp
dec
psrlq
sar
xchg
mov
dec
add
and
stc
enter
sar
add
add
ret
jl
cmps
mov
mov
ret
sub
mov
idiv
adc
fistp
rol
or
sbb
pop
mov
(bad)
push
xlat
sbb
call
movs
jmp
aam
sub
outs
push
cmc
ja
pushf
je
cmp
sti
pop
sbb
out
pop
jne
sub
inc
rcl
retf
pop
bound
mov
std
mov
cmps
sub
ret
or
leave
out
or
push
into
dec
stc
sar
fsub
inc
mov
cmps
sbb
dec
push
cld
mov
mov
(bad)
mov
ja
jnp
xchg
cdq
dec
mov
sbb
dec
or
icebp
gs
pop
inc
xor
mov
sub
adc
lea
in
in
fisttp
push
repnz
adc
cmp
addr16
add
jbe
add
fdiv
push
adc
mov
hlt
test
pop
mov
or
icebp
je
or
popa
je
cmp
aas
jmp
jg
sub
sbb
mov
out
push
cwde
scas
dec
cmp
xchg
or
or
pop
out
test
out
leave
push
xchg
or
jns
lahf
out
pop
cs
dec
arpl
and
cmp
jmp
and
repnz
mov
cmp
pop
or
push
mov
xor
or
xchg
mov
push
cmp
and
loopne
pushf
mov
xchg
pop
fnstcw
or
inc
pusha
push
sub
cld
lea
mov
mov
xlat
xchg
retf
gs
call
retf
gs
adc
rcl
cld
leave
adc
bswap
cmp
pushf
inc
and
nop
and
adc
cmp
cmp
int3
lods
adc
pop
jl
push
cli
and
bound
pushf
imul
repnz
in
nop
lods
xor
jl
push
stc
mov
push
and
sbb
mov
sub
mov
mov
sbb
cli
dec
psubsw
and
je
xchg
in
aaa
mov
cmp
jbe
jmp
cwde
retf
enter
cmp
inc
cld
mov
pop
cmp
ja
mov
pop
sub
cwde
outs
fsub
push
iret
or
(bad)
adc
jle
adc
mov
cmp
mov
inc
cld
pop
into
fistp
adc
mov
(bad)
call
jns
mov
inc
or
add
in
fs
push
mov
push
mov
pop
das
out
jmp
daa
cmc
lds
mov
in
mov
sub
int3
cmc
and
sbb
or
jecxz
popa
scas
fnstenv
mov
(bad)
fistp
aaa
mov
rol
pusha
stc
jbe
or
ds
gs
call
push
mov
jns
dec
mov
inc
nop
aas
cs
pop
out
push
pop
sub
sub
sub
das
jecxz
out
stos
adc
outs
push
push
adc
idiv
ror
mov
movs
popa
adc
enter
sub
aas
jp
mov
ins
mov
mov
fs
sub
xor
mov
mov
jmp
push
and
cs
mov
and
and
inc
dec
sbb
sub
inc
xchg
sbb
clc
mov
inc
adc
imul
mov
popf
push
fst
push
imul
call
test
mov
ror
(bad)
mov
repz
xor
lea
lods
xchg
fmulp
sbb
push
mov
sbb
cwde
bound
push
test
pop
mov
sub
cmp
sub
or
mov
int3
pop
mov
push
jmp
push
and
neg
push
pop
add
dec
ins
jbe
test
icebp
push
lea
mov
sahf
and
jg
mov
xchg
sub
lods
and
fdiv
in
ss
push
scas
std
push
int3
and
fidivr
lock
pop
inc
mov
lods
cmp
sbb
retf
cdq
(bad)
sti
movs
mov
sbb
add
test
mov
sbb
fisttp
addr16
imul
jbe
mov
fucomip
les
adc
or
lods
(bad)
fstp
mov
mov
aad
(bad)
lods
fistp
rcr
cmp
push
mov
push
adc
addr16
das
xchg
push
es
out
jmp
push
aas
jno
xchg
mov
xchg
stos
jbe
xor
clc
xchg
call
in
dec
aas
imul
push
mov
ret
fidiv
xchg
cmps
mov
pop
lahf
dec
jbe
test
sub
(bad)
mov
test
pop
jmp
ret
add
xor
rcl
or
adc
out
repz
ins
cmps
outs
jns
add
add
adc
in
sub
es
retfw
inc
dec
xchg
dec
mov
lahf
inc
add
push
pop
mov
dec
das
pop
div
dec
pop
mov
adc
outs
in
or
xchg
not
test
jns
sub
and
ins
jmp
mov
inc
sub
mov
and
xchg
(bad)
leave
jl
jp
push
fisttp
dec
xchg
mov
or
cmp
lock
ret
sub
stos
cmps
dec
and
fwait
jb
xor
data16
ds
dec
repnz
mov
jnp
cld
push
les
outs
scas
xchg
fdivr
mov
cmp
test
movs
call
loope
sub
jle
pop
clc
xor
cmp
and
inc
in
xchg
and
mov
aad
fistp
push
sub
ins
xchg
and
idiv
shl
xchg
adc
(bad)
lea
mov
dec
add
jmp
leave
fisub
and
inc
es
add
add
jno
les
(bad)
rcr
sti
cdq
mov
out
pop
mov
add
ds
mov
push
int3
jns
lea
repnz
pushf
xchg
pop
or
mov
loope
daa
sar
jbe
bound
mov
mov
xor
icebp
ret
lds
pop
ret
sahf
sub
repnz
cli
pop
cmc
dec
sbb
pop
or
push
xlat
mov
mov
push
fcmovu
aas
xchg
movs
ror
or
cmps
cmp
mov
aad
das
xchg
jmp
sti
jbe
and
das
pushf
aas
dec
mov
adc
(bad)
sbb
pop
adc
pop
stos
sbb
xchg
xchg
mov
dec
lods
xor
xchg
pop
push
mov
mov
or
hlt
and
lock
xor
aas
lds
dec
cmc
inc
repnz
in
sbb
mov
es
inc
std
push
mov
retf
(bad)
out
pop
in
retf
(bad)
mov
sbb
and
imul
sahf
pop
hlt
xchg
cwde
and
fdivrp
sbb
ins
mov
(bad)
movs
sbb
mov
enter
push
xchg
sahf
inc
xchg
mul
jp
test
clc
cmp
xor
jae
sbb
mov
jne
pop
and
pop
and
jecxz
adc
add
ss
enter
xchg
push
adc
mov
movs
idiv
enter
icebp
or
jge
out
js
jmp
sub
sbb
in
sub
jns
icebp
mov
and
out
retf
repnz
mov
push
mov
stos
dec
in
pop
dec
mov
adc
xor
push
sub
inc
arpl
mov
sub
cld
mov
mov
jb
pop
aam
(bad)
in
sahf
inc
and
dec
and
loop
popa
arpl
xor
or
pop
and
sbb
nop
or
int3
and
push
loope
adc
mov
imul
add
inc
xchg
fwait
cmp
dec
mov
loope
jb
push
cmp
cmp
in
xchg
dec
int3
out
jmp
xor
cmp
jmp
push
jp
mov
ins
fldcw
or
mov
cld
mov
das
mov
cld
lods
ret
cwde
or
pop
mov
xchg
leave
or
mov
int
mov
(bad)
dec
sbb
mov
(bad)
pop
xchg
and
and
mov
inc
push
dec
sbb
fs
jb
push
cmp
ins
sub
lods
xor
jmp
jnp
cs
cmp
dec
stc
sbb
pop
jo
outs
cmp
inc
sbb
mov
mov
mov
push
adc
adc
in
icebp
scas
mov
mov
aad
add
into
adc
push
mov
loop
cmp
xor
xchg
test
stc
rol
aam
scas
sbb
daa
ins
add
ret
sub
sar
xchg
mov
les
clc
imul
dec
popf
cmp
adc
stos
cmps
fsubr
jecxz
nop
inc
jbe
pop
addr16
sub
pop
mov
stos
or
sbb
outs
jne
out
in
sar
cdq
sub
push
xlat
and
adc
push
js
pop
pop
out
clc
sbb
or
dec
or
inc
ins
pusha
mov
loope
sahf
sbb
mov
pop
int3
ins
or
(bad)
inc
dec
shr
sar
fs
into
push
mov
add
cmp
popf
or
ret
out
cld
test
dec
jmp
adc
movs
int
fcom
bound
es
adc
pop
or
mov
vucomisd
sar
fnstsw
stos
fld
jge
(bad)
adc
mov
mov
addr16
push
or
xor
stc
sbb
mov
pop
lahf
popa
call
push
ins
xchg
out
jbe
sbb
dec
mov
addr16
mov
ret
pusha
call
jo
mov
and
test
sbb
sub
rol
xchg
dec
repnz
clc
neg
push
sar
inc
add
mov
mov
mov
sub
fsub
cmp
fiadd
imul
cmp
stos
dec
out
jnp
dec
dec
cmp
dec
scas
mov
pop
(bad)
aas
push
scas
mov
stos
sbb
mov
xchg
ja
adc
push
stos
or
mov
pusha
mov
or
sbb
sbb
pop
or
cwde
adc
bound
(bad)
jne
fiadd
pop
or
(bad)
adc
pop
outs
sbb
cmp
jmp
test
mov
xlat
and
in
push
dec
xchg
push
repz
(bad)
popf
imul
or
jmp
test
idiv
sub
gs
stc
mov
lods
and
mov
push
sub
cmps
call
push
cmp
xchg
daa
popf
fs
shl
xchg
pop
ficomp
and
cld
retf
jno
loopne
push
hlt
(bad)
movs
repz
les
sbb
scas
in
mov
jae
mov
outs
(bad)
imul
xchg
xchg
jns
jbe
ss
(bad)
and
loop
push
xchg
loopne
lahf
and
push
inc
pushw
test
add
cmps
push
stos
out
stc
sbb
push
sbb
mov
gs
xor
mov
push
xchg
leavew
mov
jae
inc
inc
xchg
jne
shr
lock
or
jp
das
xchg
xlat
jp
sub
mov
shl
sbb
cmp
ja
sbb
rol
mov
lods
sahf
mov
into
cmp
ret
cmp
fld
push
or
push
hlt
lods
test
sub
aam
jb
jbe
inc
mov
sar
and
adc
pop
ins
bound
int3
ss
aad
xchg
add
cs
sub
int
fimul
mov
or
loop
ins
movs
pop
out
test
sbb
xchg
movs
out
adc
hlt
out
lea
xor
mov
pop
cmc
dec
sahf
push
mov
out
stos
clc
pushf
outs
push
ret
ins
inc
cmp
cmp
mov
scas
(bad)
iret
add
stc
mov
int3
ja
xchg
cmp
xlat
sub
dec
test
push
cmp
jecxz
mov
and
cmc
clc
sti
enter
aas
aas
lahf
gs
bound
adc
mov
dec
xchg
add
mov
or
mov
int3
inc
or
pop
cmps
icebp
nop
pop
dec
xchg
and
dec
sbb
jmp
ins
mov
out
retf
out
out
jb
shr
int
mov
mov
push
addr16
pop
adc
addr16
repnz
jns
mov
pop
shl
test
and
movs
mov
icebp
adc
inc
mov
and
pop
push
inc
test
rcl
neg
mov
adc
inc
outs
iret
add
popa
(bad)
mov
popf
iret
into
xor
push
adc
mov
pop
shr
jo
sub
dec
dec
out
(bad)
(bad)
fimul
and
in
pushf
addr16
ds
dec
and
shr
pop
push
sbb
sbb
test
rcr
dec
loop
cmp
mov
jns
scas
cdq
mov
mov
cmp
push
jle
mov
cmps
xor
jle
and
movs
sub
call
jb
bound
sub
or
in
aam
(bad)
retf
mov
mov
sar
leave
push
add
pop
dec
xchg
nop
(bad)
lea
(bad)
adc
push
xor
loopne
pop
shl
xchg
bndstx
dec
mov
fdivr
xchg
sbb
pop
push
(bad)
jae
aas
xor
lds
xchg
inc
hlt
jns
(bad)
jmp
les
ss
push
enter
add
dec
or
mov
(bad)
shr
aam
mov
scas
sti
dec
inc
shr
adc
fistp
repnz
xchg
or
js
or
les
mov
in
mov
push
test
pop
mov
sub
icebp
xchg
adc
int
sub
xor
push
jle
cmp
jp
push
jno
mov
stos
pop
sub
pushf
or
mov
sub
sub
or
dec
imul
xor
fisubr
sahf
push
inc
sbb
and
pop
mov
xchg
dec
or
test
lds
test
add
mov
jle
loopne
mov
mov
dec
mov
inc
xchg
not
push
sbb
scas
push
cmp
repnz
mov
cwde
pop
mov
fldenv
push
pop
stos
ins
adc
imul
inc
push
jp
push
fmul
jno
pusha
nop
jmp
std
shl
(bad)
sbb
and
and
xchg
ja
loope
mov
enter
xchg
mov
jl
std
mov
push
retf
pop
inc
mov
ins
xor
push
mov
mov
int
scas
mov
daa
mov
push
adc
scas
fcomp
sbb
cmp
dec
add
mov
add
cmc
cmp
shl
xchg
out
cs
xchg
les
or
rcl
aas
pushf
shr
mov
(bad)
mov
dec
mov
fisubr
das
xor
xor
shl
rcl
pop
inc
inc
mov
fs
loope
inc
das
data16
sbb
in
adc
inc
mov
jbe
adc
xor
inc
fwait
ror
out
push
jae
icebp
test
jmp
in
mov
jge
adc
pop
pminub
loop
icebp
push
fidivr
or
mov
sti
inc
cmp
ret
xor
push
dec
jno
add
pop
mov
pop
daa
sbb
sub
sbb
xor
xlat
push
push
xor
sti
ds
call
inc
xor
push
mov
cmp
in
push
(bad)
mov
xor
dec
fisubr
leave
add
mov
ins
js
push
mov
push
je
mov
in
jecxz
push
and
push
xchg
xor
int
xor
sahf
xchg
mov
ror
cwde
sbb
stc
pushw
arpl
imul
mov
shl
pop
mov
jge
cmp
push
and
faddp
dec
stos
aad
(bad)
cmp
repnz
repnz
sbb
inc
jo
mov
push
cdq
inc
enter
cmp
fimul
add
push
aad
and
jbe
enter
push
movs
sbb
push
jge
rcl
xchg
jge
sahf
shl
add
outs
lods
or
pop
cmp
mov
mov
bound
fwait
out
out
lods
push
mov
retf
in
pause
jmp
daa
jnp
pop
pushf
add
je
mov
mov
and
inc
stc
and
inc
push
cmp
sbb
sbb
lea
adc
cli
dec
scas
test
bound
call
fwait
and
or
(bad)
xchg
inc
call
or
(bad)
mov
pop
into
inc
push
ins
mov
shr
loop
ret
das
and
inc
mov
xchg
push
mov
enter
jbe
imul
mov
sub
popa
sbb
cmp
(bad)
mov
jo
xchg
inc
nop
ror
ror
dec
hlt
inc
dec
aam
sar
imul
dec
or
sbb
cmp
es
data16
movs
rcl
ins
cmp
mov
js
jb
jo
rol
fcom
arpl
aad
sbb
mov
bound
sbb
pop
ins
and
fs
pop
outs
pop
out
xor
xchg
pop
jb
mov
ds
sbb
mov
mov
or
jge
je
or
mov
rcr
dec
and
ja
cmp
cmp
fwait
xlat
cld
sbb
into
add
fisub
lods
into
mov
mov
adc
cmps
mov
mov
inc
mov
and
out
dec
xchg
(bad)
les
xchg
out
outs
mov
adc
jbe
test
fisubr
shl
xchg
adc
imul
fisttp
ror
mov
shr
imul
cmps
sub
shl
lds
dec
mov
push
sub
pop
fwait
shl
and
adc
push
inc
sub
jecxz
mov
arpl
imul
call
adc
inc
aam
clc
movs
adc
sub
pop
sbb
scas
and
int
mov
jns
inc
pop
xchg
pop
call
sub
movs
cs
xchg
jmp
(bad)
push
into
dec
ret
mov
fucomp
inc
stc
jnp
ins
push
xor
sbb
sub
shl
inc
data16
pop
fcomp
popa
mov
icebp
push
mov
imul
ficom
and
mov
js
test
call
fcom
mov
out
or
pop
test
adc
mov
fucomp
and
inc
ja
pop
cmp
sbb
mov
fcmovb
jmp
repz
addr16
cli
or
or
fimul
pop
iret
and
stos
call
xor
stos
jno
lock
jecxz
push
repz
aad
inc
cmps
cmp
cmp
dec
add
or
stc
pop
sbb
jl
popa
mov
inc
aaa
iret
imul
std
fs
inc
jp
sti
cmc
aad
push
movs
add
pop
adc
arpl
ja
cmps
call
popf
sbb
xchg
fsubr
stos
loopne
mov
push
shl
sub
cmp
imul
or
lea
push
adc
xor
xor
adc
in
push
cli
pop
mov
in
xor
in
pop
(bad)
adc
xchg
pop
loope
movs
jae
shl
jl
lahf
in
outs
dec
cld
and
ja
cmp
(bad)
dec
(bad)
mov
outs
movs
or
dec
xor
pop
imul
nop
xor
add
sbb
mov
sbb
bound
add
sbb
ins
xor
push
adc
movs
adc
jmp
push
xchg
add
test
in
mov
dec
pop
shl
cmp
adc
(bad)
scas
add
imul
mov
mov
mov
dec
push
test
mov
clc
mov
in
loopne
pop
dec
icebp
and
int3
out
imul
mov
mov
sti
push
pop
das
fsub
and
adc
push
popa
es
fild
mov
addr16
xor
jl
rcl
not
aam
mov
cli
sbb
gs
lds
arpl
sbb
push
movs
jno
push
xor
mov
in
jbe
ja
xchg
dec
aam
leave
push
cdq
and
je
out
jno
push
jbe
xor
mov
gs
and
(bad)
enter
push
stos
sub
pop
out
out
jns
out
adc
out
mov
lea
add
sbb
imul
outs
mov
shl
mov
rcr
(bad)
scas
ins
mov
cmps
dec
mov
psubq
mov
fstp
(bad)
aam
aad
cld
jl
adc
push
aad
mov
cmp
jo
outs
in
arpl
lods
sar
ret
dec
pop
mov
jo
iret
mov
ds
mov
mov
pushw
icebp
pop
xlat
cmc
lahf
cmp
mov
stc
or
stos
sti
push
push
sbb
mov
xor
std
fidiv
out
inc
sbb
loope
aas
aam
and
out
fdivrp
adc
mov
xchg
or
loop
cmps
test
pop
movs
aad
fsubrp
call
mov
pop
or
shr
lahf
test
cmp
test
repnz
jl
out
jne
stos
and
(bad)
rol
(bad)
and
cmc
mov
in
gs
popa
xchg
jae
sub
inc
loop
cmp
push
push
and
cwde
inc
push
pop
or
jae
mov
add
mov
cli
dec
mov
add
and
fild
stc
push
movs
mov
xchg
mov
(bad)
ja
pushf
fimul
pusha
aaa
mov
data16
inc
pop
int
jmp
sub
out
dec
cmc
in
add
test
sahf
xor
dec
mov
in
in
mov
jmp
arpl
test
and
aaa
adc
dec
mov
or
sub
inc
adc
lods
jge
loopne
hlt
iret
test
mov
rcl
push
sub
add
call
loop
push
mov
stos
das
and
es
xor
or
pusha
mov
fldenv
mov
aam
or
out
jae
jns
sub
dec
or
mov
rcr
dec
or
mov
xchg
lods
leave
lahf
jg
cs
lea
inc
in
cli
push
inc
retf
sbb
ja
xor
aam
es
and
adc
mov
in
iret
mov
fcmove
xor
out
daa
dec
sub
push
arpl
loopne
enter
out
stc
or
mov
inc
mov
loope
or
add
dec
push
loope
loope
dec
repz
push
pop
ror
pop
and
or
(bad)
scas
dec
dec
sar
retf
pop
cmp
ret
lds
pop
(bad)
xor
test
cmc
inc
sub
add
popa
add
int
iret
jge
jbe
add
add
and
push
sub
mov
mov
xor
and
js
jmp
adc
adc
les
xlat
in
sbb
xchg
in
jbe
outs
ins
mov
fs
(bad)
test
xor
out
add
data16
es
(bad)
sub
(bad)
push
mov
loope
jb
ss
push
fsub
scas
inc
xor
in
xchg
cmp
add
push
push
mov
push
sti
sti
xor
pop
cdq
imul
ret
test
rol
push
xlat
sbb
rol
pop
mov
pusha
lahf
lahf
push
pop
jmp
pop
(bad)
lea
cmp
mov
in
ja
in
cmp
gs
imul
jbe
adc
fild
loopne
retf
hlt
sub
movs
call
fs
cs
std
jl
mov
lahf
adc
sub
inc
loope
(bad)
fcom
xor
sbb
lahf
cmp
or
jp
push
sub
iret
mov
bound
inc
xor
or
lods
sbb
or
mov
setle
pop
not
pop
(bad)
xor
sub
xchg
dec
jle
sbb
test
call
cmps
std
fmul
mov
inc
mov
retf
nop
das
sahf
push
add
xchg
fldenv
mov
pop
clc
push
and
sub
movs
popf
sub
enter
jb
inc
movs
in
pushf
mov
ja
popa
jp
or
std
jo
mov
jne
daa
pop
xchg
outs
or
xlat
addr16
sbb
add
mov
jbe
or
arpl
or
pop
cli
jge
es
les
out
jnp
mov
pop
xchg
pop
jb
ret
hlt
aas
jne
sbb
pop
sbb
lock
loope
push
xchg
mov
adc
lods
mov
add
mov
repz
out
repnz
jge
push
cld
cmps
outs
mov
mov
mov
sbb
and
dec
aam
fstp
jnp
cmps
aad
shl
cwde
call
test
sbb
pop
push
lds
adc
add
or
add
jbe
rcr
icebp
repnz
add
jge
jecxz
mov
mov
sbb
es
das
dec
jns
movs
jbe
js
mov
pop
add
jne
mov
cmp
stos
data16
or
not
out
stos
inc
xchg
ret
pop
call
fidiv
fiadd
sub
and
or
add
or
sbb
or
call
and
mov
add
and
dec
shl
sub
stos
cmc
in
mul
jmp
(bad)
popf
sub
or
shr
dec
iret
xchg
repz
fdivr
cmc
in
in
(bad)
xor
xchg
lock
xor
xchg
and
aam
mov
into
test
mov
loop
fstp
mov
loope
ins
out
repz
cli
fldenv
or
es
push
mov
repnz
jmp
cmp
add
sub
rol
mov
inc
xor
adc
push
push
test
fwait
jecxz
(bad)
repz
cwde
jnp
arpl
int
in
cmps
cmp
xchg
xchg
and
jnp
imul
pop
ret
jns
outs
rcl
shr
stc
xchg
fwait
(bad)
arpl
mov
jle
add
cmps
mov
fdiv
adc
sbb
xlat
and
addr16
repnz
pop
ror
sbb
in
fdiv
addr16
pop
retf
xchg
fdivr
aam
sbb
sti
add
aam
pop
push
dec
mov
icebp
aad
fiadd
push
sub
aas
clc
pop
loopne
xor
push
aad
mov
or
push
push
das
in
cmp
jne
addr16
dec
(bad)
adc
aam
fldenv
push
xor
jne
out
add
std
inc
xchg
push
push
stos
jno
and
cwde
mov
fild
sbb
dec
ret
(bad)
ins
mov
js
rol
dec
pop
and
rcr
adc
fs
out
fadd
je
inc
pop
xchg
and
fwait
pop
ds
mov
jb
adc
jb
int3
and
and
jmp
dec
pop
movzx
cmps
pop
(bad)
jb
int
xlat
inc
mov
aam
inc
pop
push
js
add
mov
addr16
push
mov
nop
add
or
or
push
dec
cmp
call
adc
mov
push
sub
lds
sbb
pop
loope
cmp
data16
inc
repnz
mov
(bad)
jo
cmp
dec
sub
or
mov
test
ficom
fs
sub
xchg
int3
in
adc
sub
into
int
pop
xlat
mov
lahf
maskmovq
neg
sar
inc
call
adc
mov
es
and
pop
outs
or
retf
cmps
mov
sbb
xchg
pop
adc
jl
adc
rcr
jno
push
dec
aad
inc
lds
and
sub
sar
dec
sbb
fwait
loopne
push
repz
test
jns
dec
adc
out
cmp
jg
scas
push
lea
adc
out
enter
pop
mov
and
js
(bad)
jnp
enter
sub
xchg
sbb
in
movs
and
(bad)
outs
cmp
adc
shl
xchg
xchg
sub
fcmovne
sub
push
nop
add
outs
popf
out
sub
fnsave
or
out
xchg
mov
dec
(bad)
ss
loopne
jmp
push
rcr
jo
das
cwde
push
fwait
out
mov
or
pop
inc
mov
lds
add
call
mov
cmps
fsubr
pop
(bad)
sbb
mov
fcomp
xor
sub
in
neg
cmp
loope
jp
mov
idiv
and
jbe
xchg
rcr
fimul
idiv
ficom
leave
jnp
lahf
outs
mov
imul
sbb
outs
(bad)
mov
inc
out
dec
test
pop
sti
(bad)
xlat
js
inc
sbb
and
mov
and
(bad)
push
js
add
dec
in
dec
into
mov
mov
or
or
dec
rol
pop
push
lahf
pop
and
les
ja
push
fstp
mov
mov
mov
mov
jne
int
push
mov
push
out
outs
(bad)
retf
adc
shl
dec
ret
xchg
cli
pop
fld
lea
mov
and
cdq
call
mov
inc
push
retf
jge
lods
inc
pop
mov
icebp
sbb
mov
add
push
inc
ficom
das
xchg
shl
lods
gs
addr16
jbe
fidivr
addr16
das
je
pushf
in
lods
shl
inc
js
call
add
arpl
les
adc
ins
add
inc
mov
cwde
inc
or
(bad)
cmc
pop
scas
enter
push
stc
mov
loop
int
in
ins
rcr
inc
add
cmp
jbe
mov
add
sbb
push
sti
mov
aam
dec
adc
sub
enter
mov
rcr
in
push
sbb
pusha
fwait
cmp
jmp
mov
pop
and
dec
jp
retf
frstor
push
xchg
int
push
test
xchg
and
inc
lahf
aaa
sbb
mov
or
jmp
jmp
cmp
jne
out
mov
mov
add
or
ins
fcom
lods
test
push
ret
dec
sub
and
repnz
mov
ror
push
out
pop
cmps
fcomp
icebp
push
aam
movs
out
fmul
in
in
xor
inc
xchg
adc
mov
dec
retf
movs
sub
pop
imul
mov
or
mov
sahf
test
mov
cmc
daa
cmp
add
movs
cdq
(bad)
scas
int3
icebp
popa
jg
lea
mov
xor
repnz
xchg
mov
out
or
inc
jl
test
(bad)
jg
ftst
ficom
and
sbb
add
mov
xchg
stos
iret
adc
fsub
shr
fmul
sub
jp
xchg
popa
(bad)
xchg
xor
cmp
pop
mov
aaa
xor
(bad)
int3
clc
outs
in
mov
loope
sub
in
mov
push
outs
inc
(bad)
stc
cwde
adc
lahf
pop
mov
repz
lahf
aad
test
dec
outs
fldln2
or
cmp
inc
movs
(bad)
aaa
add
repnz
mov
fsub
adc
cmps
retf
jne
inc
mov
inc
mov
jge
xor
gs
aam
out
inc
xor
div
mov
shl
pop
mov
fidivr
adc
dec
std
push
or
push
mov
adc
add
sbb
stos
jne
push
adc
fldenv
pop
repz
adc
push
push
push
jns
inc
es
inc
lods
jb
xchg
fist
push
dec
jmp
xor
fldenv
or
mov
push
push
cmc
adc
pushf
inc
test
push
and
fld
rcr
jno
cmp
fdiv
and
mov
stc
adc
enter
das
clc
pop
mov
or
jae
mov
movs
fmul
xchg
or
sahf
mov
jb
repz
push
sub
sub
dec
test
or
vpcmpeqw
lds
jne
add
mov
push
fild
jle
cmp
hlt
add
int
ins
dec
aam
dec
and
and
out
enter
or
adc
pop
xchg
call
cmps
cld
push
fdivr
(bad)
sbb
jecxz
inc
cmp
jg
pusha
pop
inc
scas
aaa
loope
(bad)
sub
or
es
jle
inc
outs
or
enter
adc
stos
jp
leave
mov
popa
add
mov
mov
xchg
mov
(bad)
and
jp
cli
add
retf
mov
sbb
and
dec
cwde
test
jne
pop
jno
adc
jle
sbb
pop
cmp
pop
test
pop
shr
les
cmp
nop
mov
dec
lods
and
(bad)
xor
sbb
pop
push
mov
xlat
mov
inc
pop
sar
(bad)
jge
cmps
test
dec
adc
xor
xor
mov
call
sti
(bad)
out
and
or
das
xchg
jecxz
inc
mov
sar
add
fs
(bad)
fsubr
mov
(bad)
mov
push
xlat
loop
arpl
mov
jbe
out
cwde
and
mul
pop
dec
not
in
outs
adc
retf
xor
mov
scas
ds
and
sub
iret
sub
mov
icebp
mov
(bad)
dec
aam
cmp
ret
adc
jg
rcr
outs
mov
(bad)
in
cmp
pop
test
adc
jp
retf
lahf
cmp
add
aas
adc
mov
es
inc
jge
test
mov
inc
jge
es
sbb
test
std
add
fs
jecxz
jne
je
les
push
inc
pusha
jp
cld
add
mov
pop
inc
sahf
or
popf
repz
sar
sub
nop
xor
mov
jb
mov
xchg
adc
loop
mov
inc
mov
mov
or
cmp
dec
dec
aad
mov
push
cmp
mov
sub
jg
cdq
dec
dec
cdq
pop
mov
aam
mov
lock
popf
retf
mov
ret
clc
(bad)
mov
jb
(bad)
daa
pusha
into
out
xchg
ret
pop
pop
mov
sub
jnp
add
pop
or
cmp
mov
mov
or
jno
mov
xchg
xlat
fisubr
jne
dec
dec
adc
mov
mov
xor
mov
in
in
mov
pop
aas
fnsave
mov
loope
jmp
and
pop
mov
lock
(bad)
data16
into
shl
mov
xchg
pop
mov
jge
(bad)
mov
cwde
(bad)
inc
cld
in
call
clc
push
lods
xor
xchg
mov
push
test
sub
jg
mov
jo
outs
jle
xor
mov
and
push
adc
jno
fcomp
dec
mov
js
or
push
test
cmp
jg
jae
cmc
mov
ficomp
jnp
or
lea
pop
or
mov
xchg
xchg
or
jns
jle
jae
mov
xchg
sti
sbb
in
xchg
mov
sbb
jl
sub
setle
retf
loope
aas
test
repnz
ins
mov
lods
jge
lea
cmp
scas
out
push
repnz
or
stos
les
and
fstp
inc
stos
cmp
or
dec
lods
(bad)
into
sbb
adc
push
inc
les
aad
imul
icebp
or
xor
in
test
sub
sti
sahf
movs
fs
lahf
mov
xor
pop
xor
xchg
mul
add
ret
cmp
mov
xchg
call
xor
es
gs
mov
xchg
adc
movs
sub
mov
fcmovu
mov
cmp
push
sbb
pop
jb
das
or
imul
mov
ins
ret
cmps
sub
clc
(bad)
sbb
ins
jmp
inc
shr
mov
arpl
jb
mov
and
mov
in
pop
lds
les
add
outs
pop
add
loopne
jo
push
mov
cmp
call
mov
pop
mul
ins
push
push
adc
xchg
popf
push
mov
sar
repz
pop
cmp
xor
pop
jp
shl
mov
push
or
popa
daa
rep
jmp
rcr
xchg
pusha
fs
fwait
cmp
sub
dec
loopne
push
das
push
lods
push
in
in
(bad)
jle
sbb
add
dec
fsub
cmp
hlt
xchg
out
jg
or
cdq
pusha
xchg
lods
pop
jbe
mov
push
xor
test
add
loopne
push
(bad)
ror
sahf
aad
clc
imul
pop
xchg
ret
and
aas
call
mov
xor
(bad)
pop
test
lds
je
sbb
mov
jmp
call
das
cmp
or
xor
sub
movs
xor
or
stos
mov
mov
es
xchg
push
pop
jb
adc
popf
xchg
loopne
enter
ins
test
call
das
fidivr
add
sub
adc
xor
jmp
addr16
xor
fisttp
out
cdq
lods
and
je
or
movs
imul
xchg
hlt
retf
pop
ret
inc
and
adc
cmp
dec
pusha
pushf
mov
in
int
jg
pop
scas
jb
mov
imul
sbb
fdiv
inc
test
dec
xor
mov
lods
loop
loop
es
retf
aas
call
stc
(bad)
cmp
ja
mov
xchg
inc
dec
ret
sub
jb
mov
pop
cmps
out
sahf
mov
call
mov
stc
xlat
cmc
cs
adc
xchg
pop
fsub
in
and
ficom
adc
xchg
popf
adc
int3
xchg
jns
iret
fdivr
mov
cli
enter
pop
and
cmp
cmc
fdivp
pop
lods
add
mov
data16
mov
add
loopne
sub
or
mov
jbe
or
sbb
mov
cmp
int
imul
xor
xchg
ss
leave
icebp
mov
xchg
aas
scas
push
xor
out
popa
sbb
push
fstp
sbb
jnp
shl
cmp
adc
popf
enter
das
dec
loopne
jmp
cmp
adc
xor
jmp
jp
inc
xchg
sbb
sub
push
sbb
ds
xchg
and
shl
mov
sti
aam
jmp
cmc
sbb
stos
push
push
sbb
and
rcr
ftst
aas
lock
stc
cli
mov
push
xchg
popa
xchg
fcmovu
aam
xchg
xor
movs
cmp
push
push
sub
xchg
pushf
add
jmp
inc
stos
mov
(bad)
adc
jnp
mul
mov
in
fwait
xor
jge
inc
movs
mov
shl
add
push
or
loope
inc
bound
sub
test
mov
test
jle
dec
xchg
mov
adc
imul
(bad)
or
xchg
sub
sub
mov
ins
scas
cmp
mov
dec
pop
sub
mov
lds
fsubr
lea
mov
lods
xchg
fidivr
or
shl
mov
jg
mov
fnstcw
scas
test
mov
jne
shr
add
dec
ret
mov
inc
sub
fidiv
jne
es
fstp
retf
nop
sbb
sub
adc
mov
movs
stc
data16
stos
ficomp
dec
cmp
rcr
pushf
out
mov
and
fcom
xor
xor
popa
pusha
lods
in
jno
and
loope
adc
das
xlat
adc
push
xor
mov
call
popf
retf
iret
in
out
push
push
cmp
pop
aad
iret
mov
pop
xor
and
xor
out
test
push
push
sub
cmp
fidiv
mov
cmp
lock
mov
hlt
and
jp
mov
sbb
sub
sbb
fild
out
push
xchg
out
pusha
xor
or
imul
inc
int3
(bad)
es
adc
aaa
fadd
imul
xchg
mov
scas
fwait
cdq
jae
aad
jo
push
iret
xchg
sub
xchg
dec
inc
dec
sbb
sti
mov
push
inc
fs
cld
adc
adc
(bad)
push
scas
jp
xchg
int3
sbb
popa
mov
jnp
sahf
mov
(bad)
or
stos
call
xor
retf
je
aad
fdivr
or
mov
dec
xchg
sub
dec
(bad)
fidiv
push
gs
jl
test
or
sbb
jle
xor
(bad)
cli
push
sub
pop
imul
fisttp
sub
mov
xor
mov
hlt
jg
and
rcl
and
xor
and
mov
popa
or
imul
test
mov
pusha
sbb
mov
lds
jp
popf
sbb
jae
jmp
jb
les
and
sti
or
cmps
scas
fadd
dec
cmp
jecxz
push
int
shr
lock
or
dec
cmps
(bad)
retf
ins
leave
jmp
popf
inc
jl
mov
cli
sbb
jae
cmp
cmc
enter
add
lea
inc
xor
inc
mov
popf
jae
aas
xchg
mov
xchg
stc
sub
or
(bad)
mov
loope
inc
mov
mov
push
rcr
ins
add
stos
inc
in
jns
scas
dec
xchg
sbb
sbb
std
outs
push
and
call
pusha
fbld
jecxz
add
add
mov
jle
adc
xor
pop
test
sub
(bad)
sbb
push
fwait
xchg
mov
fcmovnb
mov
gs
mov
imul
mov
retf
inc
jbe
fld
xor
inc
scas
push
fist
adc
jle
cli
inc
pop
loope
mov
mov
lea
sub
xlat
pop
out
fwait
arpl
lods
add
aaa
xor
jno
paddw
xchg
icebp
aam
and
fdivr
stc
jno
je
repz
(bad)
mov
inc
maxps
imul
push
ins
hlt
inc
fnstenv
repnz
dec
and
loope
shl
imul
mov
jle
xchg
cli
test
sub
int3
dec
xchg
adc
leavew
cmp
test
sar
inc
add
outs
mov
and
push
or
hlt
and
dec
push
mov
cmps
inc
push
dec
ds
inc
dec
cmc
cmc
inc
test
adc
mov
aaa
pop
mov
xor
mov
add
xchg
fld
ins
test
aas
in
and
xchg
sbb
adc
push
outs
fstp
adc
test
inc
lods
pop
cdq
mov
push
mov
mov
sbb
lahf
loop
loope
adc
and
icebp
cmp
dec
add
xlat
in
jae
and
scas
aaa
mov
jb
or
pop
or
add
(bad)
push
dec
dec
xchg
lods
adc
push
pop
push
cld
cmovb
mov
rol
and
shr
aaa
(bad)
inc
pop
repnz
push
or
jb
xchg
mov
or
or
xchg
pop
push
jo
sub
sub
jns
cmp
outs
push
dec
leave
ins
sbb
and
push
mov
mov
mov
movs
dec
fidivr
je
mov
ret
xor
inc
fs
cmp
cmp
ins
cdq
and
push
cld
or
jns
scas
test
inc
dec
shr
mul
cmp
push
leave
jmp
jno
ds
scas
push
pop
mov
cdq
add
bound
push
ficom
xor
lea
pop
xchg
ds
imul
cmps
(bad)
sti
dec
add
xchg
test
mov
sbb
sbb
sar
cwde
fsubr
mov
and
mov
mov
into
xchg
movs
xchg
test
push
fs
add
imul
cmp
enter
cmp
push
out
adc
shl
dec
dec
cmp
dec
fcmovu
cmp
int
cmps
out
fadd
fs
inc
ret
mov
mov
cmp
pushf
mov
jle
ficom
test
and
push
ffreep
loope
jecxz
push
sbb
jp
mov
jge
inc
jmp
mov
mov
mov
fstp
rcr
mov
leave
out
je
and
aaa
add
jno
test
pop
pop
xchg
push
ret
movs
sbb
popf
push
pop
arpl
sbb
mov
jbe
push
mov
dec
shl
fcom
xchg
inc
add
(bad)
shr
push
inc
out
pminsw
xchg
pop
sbb
ins
ror
cmp
jp
and
mov
xchg
aam
outs
fdiv
ret
scas
and
popa
dec
in
xchg
repnz
nop
(bad)
cmc
mov
dec
xlat
pop
cld
and
push
dec
cmc
lock
add
test
retf
mov
sub
xchg
or
mov
jo
fild
pop
ret
icebp
and
inc
or
push
mov
retf
sbb
pushf
sbb
fldcw
fs
in
int
adc
in
xor
inc
push
or
rcl
jmp
cli
loopne
cmp
and
xchg
mov
(bad)
out
or
in
mov
dec
jle
xor
mov
and
fidiv
push
jp
test
add
movs
add
fcomp
cmp
jp
aad
fxam
outs
push
retf
sub
loope
not
hlt
mov
repnz
dec
push
imul
or
push
fsubp
aaa
stos
js
and
mov
adc
or
sbb
mov
mov
sahf
xor
(bad)
out
adc
bound
loope
sbb
xor
jbe
inc
jge
inc
test
add
jo
iret
test
ror
mov
cmp
movd
(bad)
jb
icebp
ret
in
pop
mov
sub
scas
jl
cmc
mov
pop
push
pop
push
push
xor
ret
and
into
idiv
mov
mov
cmc
cmps
xchg
push
popa
lods
cdq
cmp
add
lea
sub
pop
ss
popf
retf
dec
push
call
push
enter
dec
dec
sub
ret
pusha
inc
cmps
cli
and
sub
popa
xor
retf
fcmovb
jne
mov
add
and
sbb
sbb
push
mov
adc
mov
pop
xchg
mov
jo
in
cli
arpl
sti
inc
xchg
jne
stos
ss
pop
popa
movs
xlat
xchg
pop
sar
xchg
in
and
inc
pop
(bad)
sbb
push
push
dec
push
in
mov
test
fnstenv
data16
not
sub
call
ja
movs
and
addr16
sub
push
scas
cmp
in
jmp
(bad)
pushf
adc
rcl
inc
jnp
inc
cwde
fdiv
mov
fs
cmp
pop
jecxz
stos
outs
mov
mov
mov
fwait
xor
mov
sbb
pusha
inc
sub
pop
test
loope
pop
xlat
xchg
hlt
stos
shr
addr16
lock
sahf
push
push
movs
push
push
jmp
mov
dec
dec
inc
fmul
fsubr
push
pop
mov
xlat
popa
sbb
sahf
rol
cmps
and
daa
mov
xor
inc
test
adc
lock
dec
(bad)
push
dec
std
inc
jmp
and
aas
add
(bad)
push
loopne
test
cwde
arpl
repnz
mov
lds
mov
ror
aas
push
push
push
or
retf
add
push
jl
xchg
cmps
test
xlat
(bad)
fild
lahf
(bad)
ja
sar
cmp
and
retf
and
jae
jbe
jns
bound
xor
xchg
das
push
(bad)
jl
pop
sub
in
mov
jl
xchg
mov
aas
imul
mov
xchg
sbb
adc
jl
jnp
leave
stc
in
clc
mov
and
add
retf
inc
jg
jbe
iret
inc
pushf
xor
(bad)
push
call
in
fistp
dec
mov
stos
xor
or
and
or
inc
mov
xor
pusha
inc
sub
jbe
fwait
cmps
push
cmp
pop
sub
arpl
or
inc
loop
mov
lods
jne
movs
cmp
nop
ss
test
dec
inc
test
test
dec
dec
outs
sahf
mov
clc
mov
mov
arpl
movs
lds
pop
mov
outs
outs
aas
dec
adc
fcomp
out
add
cmp
dec
hlt
adc
mov
adc
ficom
clc
add
call
pop
xor
test
mov
sub
popf
inc
and
xor
stos
or
add
mov
in
pop
(bad)
or
call
mov
inc
push
ficom
ja
bound
add
adc
push
fcmovnb
xchg
mov
mov
pop
jg
cmp
fs
jmp
push
pop
push
in
cdq
adc
ret
pop
addr16
or
add
sbb
imul
aaa
add
lods
xchg
ins
jne
push
mov
push
and
popf
fidivr
(bad)
sbb
xchg
mov
mov
push
inc
xchg
sbb
pop
(bad)
(bad)
hlt
pusha
repz
jle
push
(bad)
test
fistp
and
cmp
call
adc
les
movs
jo
int3
add
jl
les
sbb
ja
scas
(bad)
aam
in
mov
cmp
addr16
das
or
push
mov
dec
clc
or
push
mov
cdq
add
pop
or
mov
and
dec
push
leave
mov
jo
mov
sub
arpl
xchg
sub
mov
arpl
xchg
movs
cmp
jge
popa
xor
retf
cwde
imul
repz
out
icebp
mov
adc
shr
pusha
xchg
inc
fld1
stos
dec
mov
mov
popf
mov
in
dec
cmps
dec
idiv
cmp
xor
push
inc
div
xchg
dec
pop
icebp
and
(bad)
or
out
sbb
pop
call
or
daa
enter
call
inc
leave
or
(bad)
jp
and
dec
or
out
icebp
and
lods
idiv
in
mov
or
xlat
cdq
sub
mov
inc
and
push
dec
(bad)
ins
loop
loope
mov
rcl
push
sbb
inc
dec
aas
in
popf
ror
xchg
pandn
mov
inc
out
scas
lahf
cmp
sub
jns
scas
mov
mov
jmp
imul
es
ins
sub
pop
mov
push
xor
inc
inc
loopne
leave
loopne
lea
cmp
call
push
sar
int3
(bad)
js
push
push
shl
and
iret
movs
cmp
sub
add
cmps
ret
mov
adc
push
mov
or
jp
pop
inc
dec
or
cld
jge
push
push
xchg
outs
add
mov
adc
or
stos
and
out
or
add
push
cmp
es
inc
xor
and
into
push
sub
xor
push
lahf
out
sti
in
add
cmps
ja
adc
fsubr
fisttp
jp
ins
sbb
push
push
inc
add
sbb
add
inc
adc
mov
cs
push
add
ins
adc
jo
(bad)
out
xor
aad
add
fild
sub
mov
not
dec
sbb
dec
mov
add
bound
jbe
test
push
iret
movs
(bad)
repz
stos
pop
(bad)
or
loope
out
mov
clc
ret
add
imul
mov
mov
iret
jns
pusha
adc
dec
popf
dec
sbb
scas
mov
clc
pusha
pop
bound
sub
pushf
cs
nop
loopne
sbb
mov
cmp
pop
lods
mov
sub
fstp
sbb
dec
icebp
lock
sbb
adc
movs
jmp
mov
movs
movs
xchg
ins
and
fwait
inc
mov
dec
sar
scas
xchg
jmp
in
test
mov
push
sbb
push
jmp
jae
mov
fisttp
push
fiadd
sub
mov
out
js
cld
xor
fcomp
dec
fist
loopne
sbb
cmp
rol
pop
push
ss
movs
and
xchg
jmp
jno
ins
mov
clc
sbb
sbb
int
std
adc
and
(bad)
jmp
cli
push
(bad)
or
pop
arpl
and
or
push
and
int3
jg
xor
in
jle
stc
jmp
sbb
xchg
adc
xchg
or
cwde
xchg
or
pop
mov
mov
push
mov
arpl
jns
xor
or
ret
sub
cs
pop
fninit
adc
jo
pusha
outs
mov
cwde
jnp
ins
dec
xchg
jo
imul
lods
mov
into
ficomp
push
sub
mov
clc
rcr
jnp
sbb
jne
iret
lods
mov
push
test
add
addr16
outs
adc
mov
add
dec
(bad)
ffree
push
and
fwait
in
dec
mov
sti
test
stc
push
inc
in
pop
jmp
sub
adc
cmpps
(bad)
iret
shl
adc
cdq
rcr
mov
ret
outs
aas
mov
call
or
xor
pop
dec
xlat
sar
into
jne
push
sbb
js
enter
ins
sbb
mov
sbb
loope
rcl
jg
addr16
popf
in
mov
test
pop
cmc
add
dec
cmp
jb
test
std
sbb
sbb
mov
sub
out
push
sbb
jnp
sbb
cmp
adc
into
cmp
inc
lods
push
cmps
jo
test
js
and
xchg
test
cmp
inc
and
popf
dec
loope
xlat
and
rol
and
aaa
dec
sbb
mov
xor
jle
repz
fwait
sub
idiv
cli
pop
lock
ss
xchg
out
hlt
rcl
lods
cmp
shl
inc
dec
fisub
and
inc
sub
cmp
xchg
imul
(bad)
sub
jno
inc
push
jae
adc
mov
fs
xor
or
out
ins
clc
out
mov
sub
mov
pop
in
repz
mov
and
jp
stc
inc
jge
xchg
mov
lods
out
adc
imul
ror
sbb
cmp
add
stos
test
ins
adc
cmp
xchg
sub
mov
(bad)
in
mov
and
aas
popa
xchg
and
xchg
xor
ret
test
adc
leave
sbb
jmp
scas
lods
and
push
mov
pop
int
add
(bad)
cmps
ins
pop
sbb
jnp
mov
pusha
(bad)
and
cdq
fisttp
inc
(bad)
das
and
scas
mov
pop
dec
call
pop
ins
cld
jle
mov
adc
js
ficom
adc
mov
test
lods
inc
cmps
mov
test
xchg
call
icebp
sbb
mov
loope
jp
es
in
data16
test
cs
sub
bound
inc
jl
xor
sahf
inc
inc
jo
jmp
push
push
lock
cmp
test
mov
sub
and
sbb
rcl
sbb
mul
imul
or
movs
mov
push
inc
jmp
data16
jmp
cmp
push
or
add
push
call
inc
popa
jle
hlt
mov
xchg
xchg
mov
out
jp
mov
xchg
cmp
(bad)
sbb
in
adc
data16
addr16
cmp
stos
and
sti
xor
adc
sub
rcl
push
mov
mov
jae
mov
iret
les
lods
(bad)
and
adc
push
gs
pop
jge
jno
dec
push
inc
jae
add
in
jmp
das
ss
(bad)
hlt
(bad)
jne
mov
test
lds
pop
sbb
iret
stos
mov
(bad)
dec
xchg
in
pop
cmc
xor
or
adc
clc
sub
not
sbb
bound
fpatan
mov
fisttp
cdq
jmp
sbb
xor
dec
xchg
lea
or
pop
out
outs
push
scas
sub
add
jmp
repnz
not
xor
loop
jbe
adc
pop
(bad)
test
scas
hlt
adc
call
sub
std
mov
cmp
test
sahf
daa
and
mov
xchg
out
ds
pop
mov
xor
jle
iret
mov
in
movlps
push
pop
movs
mov
pusha
jecxz
cmps
or
iret
adc
leave
fwait
adc
pop
push
test
mov
push
or
pop
in
int
je
cmp
sbb
jecxz
and
push
push
and
and
xchg
rcr
out
mov
mov
inc
xor
mov
pop
fidiv
dec
test
(bad)
lods
xchg
sbb
stc
mov
cld
int
test
inc
into
xchg
pop
call
sub
or
xchg
or
jecxz
cs
jo
xchg
sar
call
or
cli
aas
ins
fld
or
popf
add
push
xor
push
(bad)
pop
mov
push
mov
xchg
pushf
cmp
push
jl
mov
xor
imul
mov
or
ret
imul
mov
stc
imul
ds
mov
push
shl
sbb
lods
in
sbb
xor
lahf
pop
push
mov
fiadd
cmc
inc
pop
test
pop
and
popf
js
shl
int
imul
repz
rol
ds
mov
sahf
rol
jo
ret
fcomp
mov
callw
les
or
push
pop
lea
mov
int
fistp
movs
xchg
mov
cmc
stos
mov
fadd
xor
ins
(bad)
mov
sti
or
sbb
or
rcr
cli
arpl
jae
jns
ins
xor
and
pop
jle
mov
jno
lock
jno
add
fisub
stos
push
test
hlt
push
xchg
sub
gs
mov
aam
jo
jmp
inc
es
out
shr
test
(bad)
jmp
mov
ja
mov
jmp
psubsw
xchg
loop
sahf
in
pop
iret
push
test
xlat
add
cmp
(bad)
adc
ins
jnp
or
and
push
(bad)
daa
sub
arpl
cmp
push
cmp
pop
cmp
in
(bad)
shl
sbb
xchg
xor
popa
push
push
push
push
xlat
xchg
mov
add
inc
xor
aam
mov
pop
add
dec
int
inc
mov
scas
adc
mov
dec
xchg
adc
adc
adc
les
fild
out
mov
cdq
retf
mov
iret
std
dec
dec
sub
popa
add
mov
sbb
dec
pusha
mov
xchg
out
pop
sbb
xchg
fld1
cdq
sbb
xchg
inc
mov
mov
lods
add
int
jo
pop
or
pop
dec
arpl
(bad)
cli
test
xor
pusha
add
inc
lahf
xchg
sbb
sbb
scas
xchg
js
dec
sub
std
dec
cmp
xchg
js
sbb
jge
sbb
ror
into
mov
mov
dec
addr16
sbb
shr
sub
sbb
aam
sub
fldcw
or
dec
fisttp
jmp
mov
cs
in
ss
mov
cmp
ror
inc
ins
outs
pushf
dec
daa
popa
jmp
mov
aam
shr
fisubr
xchg
xor
jmp
mov
ins
mov
xchg
or
xor
jnp
out
mov
mov
pushf
xor
jmp
push
add
mov
xchg
add
push
fcomp
xor
dec
out
leave
pop
aam
mov
outs
das
xchg
xchg
xor
push
call
in
push
xchg
stos
(bad)
stc
mov
sbb
sar
jb
mov
and
push
xlat
mov
ror
std
fwait
cmp
(bad)
mov
pop
cmc
call
inc
pusha
cli
ror
jo
add
dec
call
pop
gs
out
mov
sbb
dec
std
xchg
cld
repz
jp
out
jle
xchg
movs
loopne
pop
ins
test
js
add
sbb
out
mov
leave
mov
dec
int
ror
mov
ds
push
xor
lds
and
popa
inc
pop
mov
xchg
fstp
sub
fcmovnbe
sub
retf
inc
push
add
addr16
imul
aam
cmp
push
js
xor
pop
jl
push
push
(bad)
fcomp
shl
ret
add
jp
loope
loop
sub
add
sub
add
std
mov
les
enter
cmp
cmp
sbb
inc
or
add
imul
outs
scas
inc
push
inc
popa
(bad)
das
mov
mov
inc
arpl
rcl
xchg
push
test
ins
xor
mov
jb
shl
sbb
xor
cmp
xor
mov
pop
inc
mov
mov
xor
jl
sbb
sbb
add
xor
movs
add
xchg
mov
in
repnz
mov
jle
inc
(bad)
mov
jo
cwde
enter
(bad)
je
push
and
mov
xchg
dec
dec
into
out
pop
pop
push
push
ss
test
jae
adc
sub
lock
cmp
ss
rcr
dec
pop
add
ins
gs
mov
lahf
ret
cdq
gs
cs
call
lahf
mov
mov
cmps
bswap
pop
mov
enter
cmc
dec
jge
jno
mov
and
xor
pop
xchg
pop
(bad)
and
sub
mov
dec
xchg
ja
push
mov
mov
jle
(bad)
push
call
mov
add
push
cwde
sbb
retf
retf
xchg
inc
dec
cs
stos
cld
shl
fscale
push
sbb
jmp
ret
dec
shl
jb
mov
mov
sub
push
pushf
mov
mov
outs
fsubr
test
xchg
or
pop
mov
aaa
aas
cwde
or
(bad)
dec
mov
arpl
sbb
cld
xor
dec
jle
mov
inc
xchg
fisttp
fsubp
pop
out
cmp
pop
mov
pop
pushf
cli
jo
and
lidtd
(bad)
lahf
sahf
add
adc
jbe
out
cli
(bad)
out
hlt
and
sub
clc
dec
add
mov
and
pushf
mov
sbb
xchg
int
imul
fcomp
mov
xchg
mul
inc
sahf
int3
movs
jp
loop
push
js
xchg
loope
jnp
cmp
aad
gs
mov
jo
imul
in
cmp
dec
lods
out
inc
out
dec
iret
call
cmp
(bad)
leave
ja
adc
inc
je
ret
jl
test
sti
aas
push
push
cdq
mov
xchg
dec
test
or
xchg
lods
jno
push
add
push
pop
mov
lds
mov
mov
shl
into
loope
mov
shl
cmp
mov
call
ficom
push
shl
and
popf
mov
ja
shl
cmp
dec
loop
hlt
mov
scas
jp
and
adc
les
ds
mov
xchg
scas
iret
test
add
mov
repz
pop
leave
stos
mov
ins
xchg
mov
xor
or
mov
dec
jbe
das
fs
in
mov
repnz
dec
jns
rcr
mov
or
sub
jl
adc
mov
or
or
mov
in
outs
xor
or
icebp
add
mov
(bad)
lock
test
add
aam
pop
dec
xchg
inc
mov
js
ins
test
add
cmps
sub
ss
jg
jmp
sbb
mov
fist
push
adc
cdq
arpl
cli
or
les
daa
cli
or
test
mov
mov
push
pop
imul
add
sub
cmp
dec
sbb
push
in
xor
movs
outs
daa
adc
popa
daa
repz
(bad)
lock
xor
int
pop
or
dec
inc
(bad)
mov
aam
sub
xchg
push
je
test
addr16
aam
sbb
iret
push
daa
inc
bound
ficom
leave
add
daa
jne
ins
dec
in
int
cmp
sbb
jns
cs
cmp
into
inc
xchg
sti
xor
sbb
inc
stc
pusha
adc
aas
jno
call
aaa
mov
mov
daa
xchg
loop
pop
mov
rcl
popf
repnz
pop
mov
pusha
lock
stos
dec
cmp
push
sar
cmc
repnz
xor
aaa
out
or
pop
(bad)
int
add
fsubr
test
mov
and
adc
pop
sbb
lahf
lods
out
outs
ficomp
iret
jecxz
test
stos
add
mov
pop
repnz
push
and
jge
shr
out
aaa
jle
mov
addr16
test
in
xchg
dec
pushf
push
mov
cmp
das
sahf
call
jae
mov
sti
or
add
and
(bad)
aad
mov
icebp
inc
(bad)
adc
jl
mov
(bad)
(bad)
pop
jo
push
popa
and
xchg
rcl
cmc
and
push
fimul
or
ins
mov
add
sar
and
pop
pop
xor
iret
(bad)
scas
call
xor
in
std
out
or
mov
inc
sahf
ins
loop
popa
imul
cmps
jmp
sbb
enter
adc
sahf
push
shr
cli
fwait
pop
push
sbb
adc
sbb
pop
jbe
outs
nop
test
cmc
mov
mov
push
adc
or
sub
(bad)
sbb
ret
inc
les
push
fist
outs
ret
sbb
inc
add
data16
mov
out
inc
ss
cmp
mov
lea
jecxz
add
jae
loop
push
js
mov
loope
or
(bad)
push
jne
or
jle
sbb
and
push
(bad)
sub
arpl
mov
xchg
sar
(bad)
adc
aad
retf
cli
sub
loop
fucom
or
mov
js
mov
dec
mov
inc
fadd
push
popa
xor
xor
jmp
nop
(bad)
xor
cmps
push
(bad)
pop
dec
cmp
(bad)
jmp
mov
push
repnz
sbb
mov
pop
jae
inc
and
sbb
pop
cld
jb
pushf
lock
(bad)
xor
sub
pop
adc
sub
mov
pop
jp
imul
sub
jne
rcl
pop
push
ins
loope
and
sbb
sub
mov
mov
lods
bound
cmp
ficom
jge
rol
push
xchg
cmp
mov
aaa
inc
pop
test
xchg
adc
jo
sub
push
jbe
mov
push
mov
xor
mov
iret
xchg
cmp
mov
je
pop
and
sub
or
jle
test
and
cdq
mov
bound
pop
lods
in
jnp
jecxz
pop
mov
ror
push
dec
lods
in
cwde
cmp
inc
inc
jmp
pop
mov
test
sub
ret
mov
or
jle
call
jmp
mov
dec
mov
mov
push
xchg
adc
or
xchg
pop
(bad)
fild
inc
pop
aad
test
fwait
dec
add
int
pop
out
test
xchg
mov
jo
cmc
mov
clc
push
cwde
in
cmp
arpl
jno
cmps
sub
fisub
in
fadd
es
or
std
inc
jl
push
test
lock
add
push
adc
cdq
(bad)
imul
add
ja
add
dec
jbe
bound
ins
loopne
sar
xchg
jae
xchg
and
add
pop
mov
rcl
in
inc
cmps
(bad)
mov
sub
daa
mov
sub
jmp
daa
aas
test
inc
sub
mov
dec
add
xchg
imul
imul
inc
das
or
sub
mov
sbb
adc
(bad)
fcomp
movsx
imul
ffreep
cmp
mov
xor
inc
in
test
add
out
mov
scas
and
lahf
aam
jnp
out
(bad)
loop
mov
retf
mov
mov
sub
mov
cmp
dec
xor
fsub
into
dec
dec
and
mov
in
loop
test
div
jmp
pop
sbb
sbb
add
addr16
sub
push
sbb
loop
add
pop
pop
repnz
cmp
mov
adc
arpl
ins
sar
(bad)
out
sbb
(bad)
xor
(bad)
xchg
popf
sbb
cmp
loopne
dec
pop
loope
int
jmp
movs
push
push
es
add
enter
jb
inc
in
clc
jns
call
jl
jge
pop
sbb
(bad)
xor
mov
push
jmp
sub
loop
pop
rcl
ficomp
dec
ficomp
mov
out
jno
das
xchg
mov
xchg
ficomp
ror
fwait
in
cmp
fwait
mov
dec
cmp
cmps
mov
out
and
mov
jb
mov
adc
outs
dec
je
out
mov
sbb
dec
inc
add
ror
adc
mov
jmp
push
lahf
cs
add
adc
retf
xchg
and
cmps
lock
retf
fld
jae
push
adc
and
adc
lea
mov
sbb
push
jns
dec
pop
add
pop
xchg
mov
aas
daa
fsub
je
and
mov
clc
fadd
(bad)
dec
jbe
jbe
mov
cld
sbb
das
cld
(bad)
int3
loopne
clc
xchg
cs
mov
push
jmp
xchg
mov
jne
inc
cmp
jp
(bad)
or
mov
sbb
jne
xchg
adc
inc
bound
sbb
mov
sub
les
mov
mov
push
retf
out
(bad)
(bad)
push
inc
adc
aaa
lock
xchg
outs
xor
mov
mov
mov
(bad)
push
es
ins
jmp
dec
jge
imul
(bad)
pop
add
icebp
sbb
(bad)
(bad)
push
sbb
pop
dec
es
push
int3
and
clc
pop
push
push
test
adc
cmp
mov
xor
and
es
pop
(bad)
cld
ss
hlt
xchg
sub
test
xchg
cmps
sbb
call
or
jb
jecxz
mov
inc
lahf
cli
(bad)
mov
dec
add
test
dec
loop
push
xor
xor
dec
and
fnstcw
aam
cwde
adc
sbb
std
call
sub
push
pop
jno
mov
push
les
(bad)
push
(bad)
dec
data16
pop
add
test
mov
ds
test
cmp
sbb
mov
int
cdq
pop
sub
and
mov
xchg
ds
mov
inc
cmc
das
adc
ja
mov
test
cmp
fimul
ret
call
dec
sbb
dec
push
pop
movs
retf
pop
xchg
out
cli
imul
dec
dec
mov
inc
adc
retf
(bad)
mov
lods
in
cwde
test
or
xchg
lea
cmp
jns
fiadd
lods
xor
jge
int
mov
mov
pop
xor
sbb
mov
xlat
adc
call
ins
loope
test
test
mov
test
shl
lods
aam
inc
scas
aas
aam
and
or
inc
stos
jae
and
(bad)
ret
les
xchg
jp
inc
mov
mov
jbe
and
cld
test
pop
cmp
or
maskmovq
inc
add
cmp
sbb
sbb
pop
sbb
sti
jno
inc
(bad)
jp
xor
mov
leave
lea
ja
and
jle
sbb
or
out
pop
and
dec
repnz
push
fnstsw
sub
cmp
xchg
jno
mov
(bad)
cmp
and
sub
int
js
pop
xor
pop
or
(bad)
rcr
jmp
imul
fisubr
mov
jg
test
mov
mov
ins
lds
sbb
mov
jmp
shl
aam
movs
push
xchg
clc
adc
call
xor
and
and
leave
adc
xchg
dec
adc
add
or
sbb
jmp
out
push
cmp
jmp
mov
out
dec
mov
shl
sub
(bad)
shl
les
jge
mov
jle
adc
iret
repnz
je
or
cmps
leave
add
stos
test
ret
stos
lds
mov
sbb
xchg
retf
in
aas
mov
mov
dec
pop
jmp
push
shr
xchg
mov
(bad)
fs
iret
jg
in
mov
pop
cld
imul
inc
call
(bad)
hlt
ins
push
in
jne
xor
leave
jp
push
jp
mov
cmp
cmp
pop
repz
repz
outs
out
xor
adc
inc
mov
mov
xchg
inc
push
ins
mov
test
ja
outs
add
push
mov
fabs
xchg
sahf
inc
dec
jmp
shl
rol
inc
fwait
neg
call
idiv
int3
ror
pop
jne
cli
push
mov
xor
xchg
xchg
sar
pop
dec
dec
push
sub
xchg
inc
test
dec
nop
mov
test
ror
and
(bad)
cld
fwait
adc
ins
stos
xchg
nop
inc
out
mov
xor
aam
or
push
xchg
xchg
mov
pop
cmp
retf
fistp
lds
aam
push
or
mov
retf
push
div
dec
sub
xchg
aam
imul
pusha
xor
outs
daa
inc
fcomp
add
aaa
ret
mov
addr16
mov
mov
ss
xor
mov
lods
outs
push
cld
nop
div
out
shl
call
outs
mov
shl
mov
cld
mul
inc
xor
mov
mov
sbb
repnz
pop
xchg
mov
mov
ror
iret
in
sbb
cld
add
lock
sti
pop
bound
jmp
cmc
je
das
ins
in
xor
int
dec
xor
or
mov
sub
test
mov
add
movs
rcl
in
push
out
cmps
fsub
hlt
xor
xchg
pop
cld
out
push
mov
jge
sbb
imul
rcr
xor
xor
or
mov
out
mov
popa
cs
xchg
sbb
cmp
rcr
xor
and
int3
popf
scas
es
nop
outs
push
jb
lahf
pop
and
dec
adc
lods
or
stos
xor
imul
test
out
fadd
cdq
scas
mov
dec
aam
gs
or
push
dec
mov
xor
outs
sti
gs
xchg
push
inc
pushf
(bad)
jecxz
inc
pop
out
inc
jno
sbb
xor
in
sub
enter
ja
inc
and
xchg
or
mov
cmp
movs
rcl
jecxz
sbb
pop
jns
movs
lea
fbld
stc
sbb
mov
repz
fisubr
mov
shl
leave
fcmovnu
add
xor
fwait
(bad)
(bad)
sub
icebp
inc
add
loope
cmp
movs
js
inc
xor
pusha
mov
data16
in
xlat
mul
adc
mov
cmps
sub
retf
lock
loopne
xchg
xchg
sti
das
add
mov
mov
lods
call
jne
sub
inc
or
in
xchg
popa
fnstcw
out
call
dec
jo
push
fsub
sub
sar
(bad)
xchg
sbb
push
add
(bad)
stc
in
dec
shl
xor
sub
and
aaa
add
addr16
jns
mov
aam
clc
popf
jle
mov
mov
into
daa
test
jge
dec
out
mov
mov
mov
lock
lds
test
icebp
mov
(bad)
popf
push
dec
push
sub
aas
adc
scas
xchg
or
sbb
mov
push
out
out
and
push
jbe
xor
pop
mov
pop
add
ja
hlt
adc
repnz
mov
push
inc
sub
pop
icebp
adc
cmp
call
fstp
aas
xchg
mov
fistp
xor
push
outs
dec
jmp
out
stos
out
sti
jns
retf
inc
jp
or
dec
jp
mov
xor
(bad)
pop
ret
test
mov
mov
jl
(bad)
icebp
imul
mov
popa
aad
imul
xchg
es
neg
pop
and
(bad)
test
sbb
add
adc
jl
xchg
cwde
mov
pop
sub
inc
stos
cmp
fwait
repnz
(bad)
push
dec
lea
loop
test
ret
(bad)
cli
fisub
inc
fs
mov
jl
mov
hlt
add
push
dec
loopne
clc
clc
retf
test
add
jg
outs
and
xor
dec
je
xchg
mov
in
push
adc
cmp
fcomp
loope
xchg
(bad)
cli
jbe
sub
pusha
pop
push
gs
(bad)
ins
and
pop
in
ror
enter
xchg
sbb
mov
call
adc
xor
retf
fwait
mov
adc
pop
xchg
mov
push
add
loope
xor
lock
or
lds
pop
clc
out
gs
dec
shr
jno
add
pcmpgtw
shl
sbb
retf
jnp
adc
adc
out
and
imul
xor
cmp
push
dec
es
mov
inc
dec
xchg
lock
cwde
lods
xchg
lock
test
xchg
mov
adc
and
jno
dec
push
sahf
ja
lods
shl
jo
sub
mov
repnz
xlat
dec
add
repnz
mov
mov
icebp
cld
and
aas
pop
xor
or
mov
push
or
imul
popf
jl
xchg
mov
pop
xchg
cmc
sub
loop
push
add
in
inc
dec
imul
pop
mov
(bad)
jb
jmp
stos
xchg
adc
and
into
imul
popf
test
loop
push
out
xor
rol
sub
cli
mov
inc
jb
add
loopne
cli
xchg
cmp
arpl
push
aam
pop
dec
pop
add
cld
push
int
mov
enter
mov
pop
jg
(bad)
pop
aad
mov
inc
mov
mov
neg
lds
test
push
arpl
jnp
loop
popf
pop
sbb
js
jl
mov
push
push
(bad)
pop
xchg
inc
inc
outs
inc
mov
mov
xchg
nop
xchg
jb
les
int
xchg
imul
mov
push
adc
push
mov
push
movs
iret
(bad)
fist
push
mov
adc
jmp
jge
dec
inc
xlat
or
fmul
jb
xchg
js
inc
inc
inc
fldl2t
xor
cmp
push
popf
and
mov
xlat
pop
push
cmps
inc
mov
bound
mov
out
sti
iret
lock
popa
jnp
das
in
sahf
aad
loop
jne
(bad)
xlat
bound
jle
pop
push
(bad)
pusha
fild
mov
inc
shl
xchg
cmp
jne
fxch
pop
jo
out
cmp
jle
out
fistp
shl
xor
adc
shr
mov
jne
ja
push
dec
shl
mov
stos
call
in
xor
jg
fwait
in
(bad)
in
sbb
repz
jbe
jmp
loope
inc
lods
pop
jge
(bad)
adc
pop
mov
int3
mov
mov
rol
pushf
and
cmp
retf
xor
adc
scas
cwde
shl
sub
into
inc
aad
pop
scas
repnz
sub
pop
imul
jo
mov
cld
sbb
pop
add
fcmovne
mov
(bad)
scas
shr
dec
xchg
cld
sub
push
addr16
mov
mul
sub
jle
gs
xchg
push
adc
pop
sub
mov
and
sbb
setb
out
iret
jne
lds
cmp
sbb
mov
arpl
xchg
fld
icebp
into
push
ror
mov
sbb
add
jbe
daa
jecxz
mov
pop
sar
cld
mov
mov
in
inc
fstp
adc
test
inc
ficomp
aad
fstp
mov
call
jmp
ds
mov
adc
imul
dec
mov
in
ja
jmp
cmc
lock
pop
or
in
inc
aas
or
out
jge
retf
sahf
mov
sbb
dec
push
push
inc
pop
or
arpl
cmp
mov
push
es
mov
sbb
pop
adc
movs
adc
mov
ret
hlt
sbb
(bad)
cli
xor
mov
xchg
pop
cmps
ins
jbe
cmp
mov
xchg
or
mov
dec
(bad)
fmul
movs
out
loop
jmp
sub
mov
push
call
lods
les
addr16
iret
in
mov
xor
outs
jns
jle
and
arpl
loope
lods
mov
push
sbb
loopne
push
adc
add
push
lods
dec
mov
inc
jle
and
ret
call
(bad)
enter
ins
aam
bound
mov
push
push
enter
lahf
cs
push
in
sub
sbb
stos
aad
and
out
mov
xchg
sub
sbb
ss
cmp
xor
xchg
push
aam
(bad)
fwait
mov
adc
rol
push
jg
ins
fsubr
rcr
push
out
or
cmp
and
cmp
sahf
push
mov
jge
mov
lahf
push
pop
add
inc
ficom
sbb
movs
jb
inc
out
jb
push
mov
dec
outs
jg
adc
push
repz
rep
fcomip
movs
jno
fcmovnu
popa
(bad)
sub
mov
jmp
fimul
xor
ficomp
mov
test
shr
data16
push
nop
mov
test
cmp
sbb
hlt
retf
adc
fs
leave
rep
in
sub
fcmovnu
mov
pop
movs
fisubr
mov
mov
or
xchg
icebp
std
lds
and
push
ja
sub
cmp
fwait
lds
sbb
enter
call
(bad)
and
jns
pop
push
cwde
mov
mov
jecxz
rcr
or
push
fidiv
pop
or
jle
or
inc
sbb
mov
lods
div
push
cmp
pop
cmp
fucomip
dec
lahf
mov
test
and
outs
imul
cld
in
je
aas
sbb
mov
ss
cmp
cmps
sbb
stos
jg
inc
xor
(bad)
push
ins
mov
and
mov
xchg
cmp
or
pop
mov
js
push
cmp
adc
icebp
fwait
add
push
loop
pop
pcmpgtb
mov
cmps
push
cs
pop
(bad)
sub
ins
pop
mov
jle
jecxz
cmp
loopne
lds
inc
cmp
push
fwait
inc
ret
inc
jle
inc
mov
cmc
retf
aaa
scas
inc
xor
fistp
mov
ss
fmul
xchg
xor
in
xor
pop
lds
mov
fcmovne
in
jg
inc
mov
sar
add
repnz
pop
jle
push
mov
jns
je
sahf
or
(bad)
mov
inc
out
cmp
iret
jne
cld
sub
pusha
inc
or
fs
lods
sbb
or
push
sub
hlt
(bad)
cmc
popf
sbb
inc
pusha
aas
push
retf
(bad)
adc
fldenv
sub
loop
xchg
mov
std
xchg
cmp
push
xchg
push
out
(bad)
clc
nop
adc
sbb
daa
xor
cmp
or
inc
add
push
fstp
xchg
jp
jmp
iret
aaa
lds
test
leave
fdivp
mov
xchg
icebp
xor
sti
outs
stos
dec
cli
mov
es
popa
jl
cmps
in
push
push
cmp
sbb
(bad)
ds
push
(bad)
add
sub
xor
(bad)
fsub
xchg
ja
xchg
jo
movs
jae
std
clc
inc
mov
push
stc
ins
dec
lods
jg
sub
push
adc
outs
and
adc
and
sub
ret
cmp
sub
sahf
push
and
push
rcl
pop
push
scas
imul
cli
inc
movs
not
scas
lods
out
int
inc
mov
(bad)
cli
les
call
pop
int3
jg
js
bound
mov
aaa
and
fldcw
push
fldenv
pop
inc
pop
out
(bad)
fmul
push
cdq
adc
xchg
test
lds
fisttp
scas
mov
mov
in
inc
imul
dec
call
sbb
aaa
iret
inc
imul
movs
xchg
dec
xchg
int
ds
xor
jmp
mov
das
dec
mov
and
out
(bad)
dec
popf
push
test
fidiv
int
imul
loop
adc
inc
mov
push
mov
cmp
bound
sti
and
push
pop
cmps
movs
pusha
ret
cmp
lock
(bad)
mov
leave
pop
out
jnp
cmp
push
addr16
push
test
xor
xor
adc
mov
xor
cmp
lock
mov
test
fs
jmp
js
arpl
or
inc
ins
or
pop
mov
fdivr
cmp
ins
call
jo
sbb
adc
fst
lahf
push
pop
sbb
pop
push
hlt
mov
ins
push
xchg
dec
jae
cmp
push
retf
fcomi
mov
or
add
dec
dec
test
int3
aas
(bad)
popf
icebp
adc
jp
fwait
add
add
push
std
pusha
mov
adc
add
xor
and
(bad)
and
jne
leave
push
test
push
jecxz
rcl
sti
scas
retf
rcl
test
inc
loop
jp
inc
cld
jae
ficomp
add
lods
pop
div
mov
mov
xchg
cdq
cmp
pop
retf
sbb
mov
mov
retf
sub
mov
(bad)
xchg
inc
in
pusha
pop
xor
stos
xchg
add
jp
sub
dec
dec
(bad)
cmp
mov
sbb
ret
inc
mov
test
popa
or
(bad)
xchg
int
sahf
push
and
jns
fwait
push
xchg
sub
xchg
mov
ss
idiv
loop
ins
sbb
inc
out
popf
test
xchg
pop
in
sub
sbb
movs
ds
fstp
ja
xor
int
divps
icebp
(bad)
int3
daa
pop
outs
mov
ins
shl
lods
fwait
sub
retf
jb
out
push
in
jle
sbb
or
and
cld
nop
push
fnstcw
dec
mov
adc
mov
mov
push
lds
test
bound
(bad)
test
push
nop
and
sbb
loope
gs
push
lock
mov
inc
pop
push
js
push
and
xlat
inc
(bad)
fild
xchg
dec
add
mov
popa
in
xor
in
jne
add
and
test
sbb
push
lods
shl
jb
std
jg
jl
outs
leave
call
stos
std
in
sti
js
inc
in
or
rcr
test
scas
jo
in
fsubp
jne
xchg
and
bound
or
mov
js
mov
pop
fist
adc
pop
push
pop
adc
aaa
rol
in
jmp
cld
rcr
icebp
jl
jl
fimul
ins
cdq
lds
hlt
das
mov
jmp
push
pop
aas
in
xlat
dec
shl
clc
dec
pop
mov
and
sub
xchg
not
clc
pushf
xchg
push
mov
or
out
fst
aaa
sbb
ror
movs
bound
dec
pop
mov
imul
sbb
xchg
cmc
int3
pop
cmp
add
cli
sbb
jl
xor
mov
xchg
jmp
xchg
out
sub
xor
jl
das
sub
and
xchg
add
push
pop
xchg
mov
or
adc
repnz
jl
or
sub
aad
js
mov
outs
xor
jmp
pop
jnp
mov
xchg
cmp
repz
fwait
out
imul
fild
mov
ins
pop
mov
and
cmc
add
jo
inc
inc
sahf
mov
fcom
mov
cmps
cmp
js
add
aas
(bad)
stc
sbb
jle
les
dec
push
pop
pushf
int3
mul
mov
into
adc
jmp
mov
inc
add
xchg
xor
sbb
into
mov
sub
push
push
in
loope
sar
fst
fistp
and
test
iret
in
dec
sub
outs
jmp
call
sbb
loopne
mul
xor
arpl
pop
enter
add
xchg
retf
das
sub
dec
pop
dec
(bad)
(bad)
out
stc
add
sbb
xlat
jne
iret
push
repz
push
pop
xchg
popaw
loope
out
daa
push
inc
or
cmc
xchg
loopne
out
xchg
retf
hlt
pop
xchg
pop
cmp
jb
int
dec
ja
cmps
fbstp
test
xchg
xchg
(bad)
loope
frstor
fld
sbb
enter
cmp
scas
mov
sahf
sub
inc
movs
sar
fldcw
sahf
fnstenv
pop
clc
fcos
sbb
jmp
mov
pop
(bad)
mul
iret
scas
or
xchg
(bad)
ins
pop
mov
aaa
daa
test
add
adc
daa
mov
outs
repz
mov
mov
fnstenv
push
xchg
pop
xor
aad
and
jne
out
into
icebp
cs
inc
xchg
rcr
icebp
sbb
sub
lods
loope
dec
out
(bad)
aas
jmp
adc
adc
iret
test
mov
loopne
out
sar
push
jmp
test
mov
xchg
pop
cwde
xchg
arpl
add
push
fwait
lea
push
mov
fs
outs
cli
xchg
call
xor
sbb
mov
ds
mov
dec
mov
jecxz
jl
movs
jne
test
js
and
push
mov
in
xchg
sbb
in
cmp
aaa
mov
js
jb
imul
inc
mov
xchg
mov
xchg
or
mov
push
or
jbe
mov
push
cdq
cli
ret
rdmsr
(bad)
cmp
inc
pop
jno
mov
retf
fsub
mov
ret
pop
sbb
dec
jge
or
adc
outs
test
loopne
je
jmp
das
push
shr
cwde
repz
or
rcl
(bad)
addr16
cmps
mov
dec
int3
jns
jmp
into
inc
sbb
out
cs
out
(bad)
(bad)
mov
jle
pop
aad
js
iret
nop
mov
xchg
cmp
mov
(bad)
rol
sbb
scas
fidivr
jmp
daa
in
nop
jne
stos
xchg
push
inc
sub
sti
lea
pop
imul
div
pop
sbb
xchg
push
sub
mov
add
cmp
daa
cli
sub
div
popf
sub
inc
movs
movs
aam
xor
aaa
xlat
aad
inc
not
inc
shr
mov
cmp
fcomi
jecxz
scas
lods
stc
(bad)
pop
push
idiv
(bad)
repnz
loope
xchg
aaa
cmp
xor
inc
hlt
fnstenv
jne
loopne
cld
xor
ds
push
adc
bound
and
and
jb
jbe
dec
in
shr
pop
pop
sub
or
(bad)
loop
aad
cdq
adc
mov
cwde
mov
fs
mov
pushf
test
icebp
jb
xor
sub
xchg
into
sbb
mov
(bad)
fild
jbe
mov
leave
rol
sub
mov
dec
jecxz
dec
cmps
xlat
retf
sbb
push
push
ret
push
cmp
inc
fldenv
ss
jo
mov
push
mov
push
fimul
aad
cld
mov
call
enter
pop
mov
ficomp
cmp
das
loope
popa
mov
cwde
or
mov
lea
xor
sub
lock
retf
sbb
ret
aaa
inc
fs
fs
pop
inc
mov
and
sahf
popf
or
fs
xchg
inc
mov
ret
push
mov
and
xchg
pop
iret
xlat
mov
xchg
jecxz
fcom
jne
jnp
call
xchg
les
mov
stc
jge
mov
push
(bad)
mov
mov
sbb
lahf
mov
scas
repz
and
mov
pusha
imul
scas
test
xchg
xchg
rcr
sbb
into
sbb
xchg
mov
cmps
pop
sbb
xchg
clc
fnsave
dec
add
out
mov
and
out
imul
jecxz
xchg
sbb
es
mov
jno
out
pop
inc
pop
repz
push
mov
mov
sub
(bad)
sub
inc
inc
les
push
xor
data16
call
jbe
xchg
pop
add
mov
test
cmp
and
outs
jb
shr
jnp
mov
and
imul
xchg
adc
xchg
or
sbb
cdq
inc
push
pminub
scas
inc
inc
int3
and
sbb
mov
push
aaa
inc
dec
or
pop
or
aaa
or
les
push
lea
loope
ror
repnz
pushf
stos
rcr
mov
imul
jns
dec
pop
in
and
xchg
fsubr
bound
aaa
jnp
xor
mov
cmp
adc
jno
ds
mov
adc
stos
imul
push
out
lahf
hlt
retf
ficom
xor
xlat
xor
iret
fist
daa
popa
push
sub
xchg
xchg
pusha
sub
test
adc
sub
cmps
mov
leave
mov
popa
mov
je
and
iret
add
out
dec
push
xor
xchg
sbb
and
ins
sub
sub
jecxz
imul
scas
xor
jo
mov
retf
pop
shr
pop
scas
test
jo
neg
fimul
fcmovne
jle
or
mov
std
mov
loop
cs
cli
adc
out
push
ret
arpl
int3
ror
loop
out
push
inc
mov
jne
inc
push
cs
mov
ins
mov
sti
dec
sbb
push
cdq
push
ds
fwait
push
imul
(bad)
mov
adc
shr
push
mov
mov
add
jmp
dec
inc
jne
loopne
pop
bound
cmp
aad
pop
(bad)
enter
push
xchg
mov
sub
in
sub
mov
sub
xchg
shr
call
ret
dec
mov
pushf
fmul
fmul
dec
xchg
or
cdq
dec
lahf
xchg
xor
mov
ret
out
mov
(bad)
jmp
mov
cmp
mov
lea
jp
das
add
(bad)
(bad)
fld
cmp
pop
shl
int3
mov
repz
ins
xlat
mov
mov
data16
jb
test
or
icebp
xor
rcr
idiv
stos
in
cdq
jp
js
je
xchg
das
jge
add
xchg
push
gs
cmp
neg
loope
dec
dec
cmc
pop
sub
or
jne
lds
mov
pop
call
push
sub
sbb
cmp
jb
mov
xchg
xchg
mov
adc
xchg
sbb
pop
push
mov
cmp
sar
ins
jl
push
xchg
int
xchg
cli
fldcw
lods
mov
sahf
mov
mov
jae
mov
mov
loope
mov
gs
push
aas
push
push
or
mov
out
adc
ret
dec
outs
jg
addr16
push
and
movs
aad
adc
imul
and
dec
shl
ins
jno
rcr
js
outs
repnz
or
add
ret
mov
loope
addr16
or
gs
or
xchg
jl
or
(bad)
(bad)
jp
jo
mov
dec
ret
scas
sbb
mov
jne
cmps
mov
dec
jae
fmul
pop
cmps
mov
sahf
jbe
enter
lea
outs
lods
inc
adc
add
inc
in
mov
and
std
scas
pop
in
dec
cli
in
mov
mov
sahf
mov
mov
nop
out
jns
pop
adc
xchg
pop
push
pop
repz
mov
push
inc
xlat
sbb
mov
out
loopne
dec
ss
clc
imul
mov
retf
mov
cwde
and
enter
fwait
loop
retf
mov
leave
xchg
out
aad
fistp
jno
mov
and
sub
sbb
retf
cmp
mov
jle
cmp
push
std
mov
or
sahf
shl
dec
xor
loopne
les
jp
adc
mov
mov
add
mov
pop
call
cli
pop
dec
ret
(bad)
jecxz
xchg
push
xchg
ins
out
lods
adc
dec
gs
xor
xor
lods
data16
adc
or
jb
cmp
in
fstp
add
es
push
cmc
jo
inc
cmp
fisub
sar
ins
dec
outs
(bad)
sbb
repz
ret
js
dec
mov
mov
ins
adc
pusha
aaa
xchg
stc
sbb
cs
rol
xchg
fbstp
dec
pop
js
dec
fsubr
inc
pop
mov
jne
sub
mov
imul
scas
popa
push
nop
jb
aam
mov
xor
popf
enter
mul
int
ret
movs
cld
mov
cli
sbb
in
xchg
xor
(bad)
xor
aas
sbb
aaa
and
push
cmp
in
stos
ins
repnz
or
adc
sbb
cdq
rol
sbb
or
ret
loope
jecxz
lahf
(bad)
xor
dec
adc
jne
shl
cmp
add
(bad)
pop
out
scas
adc
sub
sbb
add
add
rcr
in
jno
adc
push
lods
lods
ret
or
add
sbb
aad
popf
cmp
sbb
jbe
add
sbb
xchg
xlat
rcr
adc
pop
dec
loop
mov
pop
adc
jl
repz
imul
retf
lahf
mov
enter
mov
hlt
shr
xor
mov
dec
mov
sahf
xchg
lock
pop
jae
fidiv
mov
dec
pusha
or
add
push
or
(bad)
lods
push
test
out
iret
push
xchg
sbb
mov
xor
(bad)
ins
dec
lods
loopne
push
push
sahf
and
outs
pop
jmp
test
add
pop
xor
js
xor
lds
bound
push
or
add
imul
faddp
or
nop
not
mov
jg
fcom
jmp
mov
mov
cs
cmps
ins
nop
adc
ret
es
les
je
cmp
in
xor
test
cmp
cmc
cmp
stos
dec
cmp
sub
scas
ds
mov
(bad)
push
mov
lea
imul
iret
pushf
inc
pop
xchg
xchg
xchg
mov
fmul
push
ins
ret
aad
fcmovnbe
and
addr16
dec
pop
push
daa
push
lahf
jmp
cmp
icebp
imul
test
jle
nop
lods
enter
cmps
jmp
sub
out
sahf
cmp
jecxz
jl
call
mov
mov
mov
push
loopne
aas
aad
out
cmp
dec
mov
test
das
add
adc
xor
mov
rcl
xor
jb
das
test
mov
mov
cmp
shrd
sub
sub
movs
stc
adc
sub
shl
jnp
push
aaa
outs
adc
sbb
mov
dec
cmps
pop
aas
push
pop
lahf
dec
bound
retf
jae
mov
pop
push
das
cmp
in
ins
mov
aad
out
inc
mov
les
or
dec
pop
or
xchg
xlat
xchg
jno
mov
inc
and
dec
xchg
push
mov
(bad)
sbb
shr
sub
lock
jnp
push
jns
sub
test
std
mov
cli
jae
cmps
sbb
adc
mov
daa
dec
add
pop
hlt
xchg
imul
sub
mov
sub
mul
les
jbe
test
mov
ins
aas
ja
imul
addr16
pusha
mov
dec
cmp
sbb
iret
mov
mov
mov
sbb
xor
push
mov
popa
(bad)
comiss
dec
je
or
fdivp
loopne
idiv
lea
and
pop
pop
outs
cmp
and
cmps
mov
(bad)
mov
mov
dec
ror
pop
push
sub
push
mov
jle
jge
inc
test
test
dec
not
retf
xchg
sub
into
pop
stc
fsub
push
fidiv
fsubr
inc
sar
and
sbb
pop
movs
(bad)
lds
mov
das
retf
push
repz
rol
xchg
push
jle
jp
stos
pop
inc
cmp
loop
jecxz
ffree
std
in
mov
clc
aaa
dec
pop
mov
enter
jb
mov
in
retf
clc
jmp
pop
cmp
xor
into
push
sbb
aaa
fwait
(bad)
neg
pop
out
pusha
aaa
ror
aam
add
push
imul
xchg
lahf
mov
add
sahf
retf
inc
int3
pushf
ret
or
xor
push
pusha
dec
cmp
mov
fstp
shl
cdq
fst
sub
dec
nop
subps
adc
xor
sub
shl
cmps
sbb
sbb
out
xchg
sti
jno
sbb
and
sub
fnstcw
out
cmp
movs
mov
(bad)
mov
gs
popf
mov
dec
mov
js
and
xor
in
int
xchg
mov
mov
ret
std
(bad)
loopne
jmp
jo
push
imul
xchg
push
lods
call
shl
fsubr
pop
sub
dec
push
ss
fsubr
ja
popf
push
test
loopne
dec
das
add
nop
xor
fmul
push
stos
in
fwait
ret
mov
or
fidiv
cmps
and
add
mov
pusha
mov
sub
cmps
adc
xchg
movs
outs
and
faddp
in
xchg
xlat
js
mov
pop
mov
jmp
lods
mov
sbb
retf
pop
or
dec
cmp
sub
movs
add
add
pop
loop
push
cdq
out
out
xchg
cmp
mov
inc
retf
add
out
push
mov
aam
out
std
xchg
jns
cwde
cmp
pop
imul
xor
pop
or
retf
in
mov
fbstp
xor
sub
(bad)
sbb
loop
lds
jle
les
pop
mov
loope
jecxz
or
in
or
and
clc
adc
dec
mov
(bad)
popa
dec
jmp
out
mov
call
out
sub
shr
fcomp
xchg
mov
mov
fs
inc
xchg
icebp
out
scas
shl
jnp
mov
mov
or
mov
neg
xor
mov
mov
xor
js
imul
test
sbb
dec
jo
gs
imul
ret
inc
ficom
mov
mov
add
ja
js
push
cmp
fst
std
icebp
hlt
and
ror
pop
les
daa
xor
jecxz
jae
fst
not
pop
icebp
mov
aad
dec
dec
push
xchg
fistp
cmc
fwait
cmp
in
iret
mov
or
in
xor
cmp
xchg
cmp
bound
in
cs
jno
inc
jge
push
aad
pop
pusha
test
scas
les
sub
or
jo
aam
jbe
test
in
mov
lods
out
xchg
ror
add
jbe
xor
adc
fcomip
mov
inc
adc
in
leave
push
fcmovbe
(bad)
out
fidiv
outs
(bad)
repz
icebp
or
inc
xor
dec
mov
popa
sahf
(bad)
call
inc
out
js
addr16
inc
mov
(bad)
jecxz
aas
shr
fs
mov
xor
hlt
jo
repnz
test
inc
stos
cmp
ret
repz
inc
xchg
lea
xor
cmps
xor
mov
mov
jno
and
retf
jl
cmc
and
push
rcl
dec
adc
shr
jo
mov
imul
push
xor
sub
mov
xchg
adc
dec
push
retf
addr16
pusha
sbb
je
mov
push
aaa
dec
fisub
dec
punpcklbw
pop
bound
xchg
sub
test
adc
push
test
scas
repnz
data16
adc
mov
inc
mov
xchg
int
test
mov
cmp
cmp
sub
(bad)
movs
retf
pop
popf
lahf
repz
cwde
pop
inc
into
pop
sub
mov
(bad)
xor
out
mov
or
retf
jne
scas
fs
adc
ins
pop
adc
out
ins
jno
mov
mov
retf
xchg
adc
pop
not
jle
test
dec
mov
sub
stc
addr16
cmp
js
dec
ret
clc
jb
sub
mov
aaa
dec
lds
cld
mov
jno
js
fiadd
jl
and
xchg
int3
ret
xchg
lahf
nop
hlt
cmp
dec
lds
sbb
das
jmp
pop
enter
std
adc
clc
sub
repnz
int
je
fnsave
jecxz
xchg
inc
push
pushw
xor
int3
fst
lods
mov
aam
(bad)
mov
mov
daa
movs
sbb
jbe
cmp
pop
dec
movs
add
jb
and
sbb
popf
inc
test
das
xchg
push
jecxz
int3
dec
in
dec
jbe
adc
int3
adc
nop
push
push
push
ins
fld
add
xor
sbb
xchg
ins
push
mov
sahf
jle
lahf
add
je
les
imul
cmps
fsub
jp
push
icebp
es
cmp
nop
popa
or
inc
imul
or
add
loopne
and
(bad)
rcl
clc
jb
outs
sbb
sar
sub
dec
add
xor
mov
packssdw
lock
push
push
(bad)
cli
fcom
xor
xor
mov
mov
popf
cmp
xchg
les
das
add
mov
mov
dec
adc
sahf
popa
jne
call
sub
cmc
fwait
mov
ins
ret
pop
xor
leave
fcomp
sub
fnstsw
xchg
jbe
push
jge
aaa
or
(bad)
push
ret
cs
les
ins
aaa
cmp
xor
mov
cmp
repz
inc
rcr
push
sub
cmp
push
ja
push
out
dec
sub
iret
retf
xor
jg
jmp
sub
(bad)
xor
cmp
in
sahf
push
mov
ins
jle
sub
in
cs
nop
test
ins
iret
sahf
cmp
retf
push
push
mov
repnz
push
inc
dec
mov
sbb
test
and
iret
call
adc
or
fisttp
adc
or
iret
pop
push
lds
or
sahf
aaa
mov
je
mov
loop
int
imul
retf
stos
icebp
jmp
add
dec
sbb
inc
inc
fwait
std
and
rol
sub
into
mov
xlat
or
(bad)
pop
add
adc
dec
push
vsqrtsd
cmps
test
jb
sti
pushf
jmp
xchg
loopne
cli
sub
lods
dec
stos
cld
leave
sti
out
repnz
sbb
xor
mov
movs
dec
xchg
test
inc
arpl
pop
jecxz
xor
xchg
in
pop
dec
jo
dec
and
xchg
popf
int3
cmp
gs
adc
int
fwait
dec
fist
leave
xlat
loop
jmp
xlat
and
mov
lds
test
fld
movs
or
call
push
stos
int3
mov
fnstcw
ror
sar
leave
leave
int
xor
add
push
push
jmp
in
mov
mov
(bad)
inc
add
mov
push
cmp
loopne
push
dec
or
sub
test
ds
fst
cdq
(bad)
jmp
ds
push
adc
repz
jo
mov
jo
jmp
xchg
mov
jmp
push
hlt
cmp
fst
cmp
nop
cmp
xor
cwde
xor
sub
lods
add
inc
daa
mov
add
pop
inc
arpl
adc
test
cwde
pop
jae
dec
jb
ret
popf
or
je
pop
(bad)
into
jns
mov
test
pop
sar
cmp
pop
pop
mov
inc
mov
fsubp
mov
sbb
cmp
or
pusha
mov
cwde
call
mov
jp
je
add
sub
mov
push
mov
dec
out
push
out
adc
xchg
xchg
cmp
mov
sub
lea
inc
hlt
cmp
data16
jecxz
mov
xchg
and
(bad)
mov
fstp
out
and
or
sbb
or
sub
arpl
ror
inc
fwait
add
jp
mov
mov
adc
std
sbb
mov
aam
push
inc
push
nop
jnp
in
(bad)
(bad)
repnz
xchg
pushf
lea
out
rol
and
inc
rcl
sar
fdivr
es
sqrtps
mov
hlt
mov
adc
popa
jmp
push
sbb
sub
fild
in
popa
daa
dec
pop
sbb
push
pop
add
imul
fiadd
jb
fs
and
aam
sub
and
and
scas
xchg
std
in
pusha
xchg
aas
cmc
mov
adc
stos
out
clc
test
(bad)
push
js
sbb
es
cmp
imul
jbe
stos
into
dec
adc
cmp
xor
iret
mov
out
sbb
xor
cvtdq2ps
jne
add
scas
add
mov
fidiv
pushf
sub
ja
lods
call
mov
push
fst
add
(bad)
fcmove
inc
out
xchg
jb
push
mov
push
ins
jmp
sbb
cmp
(bad)
xlat
lods
adc
xchg
sar
inc
mov
sti
out
test
lahf
sti
or
(bad)
retf
lahf
(bad)
call
fwait
adc
sbb
lock
dec
outs
mov
and
aas
popf
xchg
daa
or
cwde
push
mov
adc
cmp
(bad)
mov
aas
adc
xchg
bound
push
push
push
cld
icebp
(bad)
leave
cld
mov
or
xor
pop
out
push
cli
add
es
xor
and
scas
loopne
dec
mov
pop
cmc
mov
lods
jb
loope
lods
push
push
std
stos
mov
inc
sub
enter
mov
jbe
xchg
pop
push
imul
or
cmps
dec
pop
popa
mov
push
repz
mov
outs
ficom
pop
call
xor
sub
xchg
xor
mov
adc
mov
adc
ficomp
inc
call
stos
out
cmovg
fistp
jne
fdivrp
mov
pop
xor
in
xor
call
stos
pop
test
mov
out
aas
or
test
aas
jne
push
aas
call
jae
cwde
dec
dec
pop
cmp
jge
add
pop
xchg
or
shl
cld
jg
add
mov
cs
pop
shl
jmp
int
aam
add
dec
(bad)
mov
jno
aam
ret
enter
push
jg
fwait
push
push
xor
sub
jp
ds
mov
ror
and
imul
xchg
or
jne
and
stc
je
mov
pop
push
ins
and
movs
(bad)
inc
push
or
pop
fwait
test
in
pop
out
mov
ficom
fcmove
cmps
(bad)
aam
jns
inc
jae
nop
jmp
fidiv
mov
lods
ss
push
aaa
test
stos
pop
or
inc
pusha
mov
xor
fild
push
(bad)
mul
inc
(bad)
stos
ret
inc
cmps
pushf
mov
pop
nop
push
xor
jecxz
inc
stc
mov
(bad)
xchg
call
cmp
mov
rcl
out
lods
adc
push
pop
xor
push
je
jg
mov
ss
js
mov
and
cmp
cld
dec
sbb
sub
jle
scas
jp
xlat
icebp
sbb
sbb
loope
imul
cmp
call
fmul
pop
add
dec
outs
push
xchg
xchg
sbb
addr16
jb
leave
inc
sub
movs
mov
aad
add
mov
mov
and
xchg
and
mov
scas
xor
lods
in
add
movs
ins
pop
mov
and
rcr
dec
clc
and
sbb
out
in
test
les
sub
test
adc
(bad)
jb
pop
data16
or
mov
push
shl
lock
sub
test
jns
pop
scas
ror
cmp
xchg
rcr
and
mov
xchg
jo
push
add
mov
sub
push
xor
loopne
pop
sub
sbb
(bad)
gs
or
cmps
dec
push
pop
jg
xchg
ret
repnz
(bad)
rcr
sbb
in
dec
movd
gs
mov
mov
xor
xchg
adc
(bad)
dec
test
(bad)
sub
ss
stos
and
repnz
fadd
fbstp
stc
(bad)
push
xchg
vmovupd
shr
adc
mov
mov
addr16
test
test
lds
adc
ja
cld
cmp
xchg
imul
or
pop
mov
fstp
dec
xchg
xchg
jmp
pmullw
push
cmps
cmp
mov
jmp
jne
outs
cmp
push
int
hlt
cmp
xor
mov
xor
out
mov
sar
mov
mov
xchg
pop
aaa
mov
jmp
mov
sbb
mov
sar
mov
fisttp
push
sbb
mov
out
std
das
js
stos
imul
mov
jp
pop
ins
xor
lods
pop
inc
mov
cmps
mov
xchg
inc
jmp
addr16
movs
push
test
pop
retf
jne
mov
xchg
cmp
scas
pop
inc
jb
lea
jl
fwait
xlat
inc
sbb
dec
push
sti
arpl
dec
das
ret
adc
adc
outs
in
lock
xchg
out
xchg
mov
mov
nop
in
add
lods
ret
lds
xlat
pop
xchg
xchg
lds
out
mov
cmp
clc
scas
pop
or
jo
nop
jmp
dec
adc
pop
cdq
or
test
cli
mov
dec
ror
dec
mov
cmp
rol
or
fidivr
cwde
sub
fs
shl
bound
je
shr
pop
adc
cmp
repnz
xlat
sbb
(bad)
sbb
shl
push
loope
inc
(bad)
mov
stc
xor
mov
jns
inc
lods
or
add
pusha
in
movs
fwait
push
cli
adc
lds
jp
sbb
adc
adc
xor
push
pop
sub
xor
xor
mov
ins
dec
out
sbb
cmc
mov
dec
jb
push
push
and
(bad)
int
dec
inc
movs
sbb
mov
ret
cmc
in
in
cmc
adc
push
mov
and
sub
xchg
mov
rcl
dec
repnz
dec
js
loope
and
ja
es
xor
je
imul
es
cmps
or
fmul
in
sub
sub
std
xchg
push
dec
add
and
gs
jo
jno
int3
ins
add
lds
or
loopne
pop
nop
sbb
cli
xor
aad
push
mov
push
fmul
pop
iret
xor
repz
ret
loop
cmc
dec
iret
mov
js
out
ds
inc
pop
ja
sbb
inc
call
(bad)
and
mov
xchg
jns
add
movs
adc
scas
(bad)
inc
cwde
lods
popa
sbb
imul
ja
mov
in
cdq
pushf
js
out
ficomp
inc
mov
rol
jecxz
xor
fsubr
ret
das
movs
outs
seta
in
mov
sub
push
jno
mov
int
jae
adc
movs
jmp
outs
mov
ror
or
push
sub
clc
xor
pop
sahf
mov
outs
mov
fist
fucomp
jp
test
sbb
int3
jbe
lods
add
nop
dec
push
pop
push
test
sahf
test
fdivr
leave
sub
out
lock
dec
jae
mov
or
into
stc
mov
jmp
hlt
les
ja
add
cmp
pop
rol
fisttp
jns
pop
push
mov
mov
cmps
sbb
les
out
mov
lea
ret
sbb
std
push
hlt
ficomp
dec
mov
mov
mov
out
das
mov
aas
stos
add
mov
retf
(bad)
icebp
pop
arpl
xchg
sbb
inc
leave
cwde
cmc
cmps
loope
loope
call
xor
retf
push
stc
push
(bad)
cmc
or
mov
out
(bad)
ins
add
inc
stos
pop
pusha
and
gs
popf
jnp
stos
pop
cmp
and
jl
fsubr
fld
pop
test
pop
and
sahf
loop
xchg
cdq
in
retf
xchg
cmps
repnz
push
fwait
mov
push
jne
mov
cmp
lock
out
daa
xor
pop
cdq
mov
cmps
fidivr
out
adc
pop
push
inc
outs
mov
inc
pushf
adc
and
adc
cmc
mov
les
push
arpl
lock
int3
(bad)
cli
or
sub
pop
xor
sub
dec
and
mov
xor
xor
rol
imul
sub
add
int
(bad)
test
mov
push
iret
bound
xchg
icebp
lahf
dec
fsubp
cmp
mov
std
in
imul
mov
frstor
das
sbb
cmp
(bad)
fadd
pushw
push
mov
inc
mov
je
jbe
outs
sub
jnp
dec
rol
dec
(bad)
sub
xor
out
rol
push
loop
jbe
xor
fisub
cdq
arpl
fcomp
add
jo
push
fs
int
xchg
sar
and
cmp
add
xchg
pop
gs
pop
movs
int
mov
push
xchg
not
fisub
push
js
loopne
arpl
aaa
outs
or
jb
cli
push
popf
mov
enter
stos
jmp
cmp
mov
xor
jno
leave
push
xchg
pop
int3
push
call
mov
call
(bad)
or
lock
fnstcw
sahf
fstp
repz
mov
sahf
outs
add
mov
daa
pop
clc
imul
or
loopne
inc
xchg
push
dec
adc
fisttp
cmpxchg
or
adc
pushf
(bad)
lock
outs
ficomp
enter
pop
mov
mov
ss
test
enter
jecxz
pop
add
jns
push
jno
loope
mov
repz
cmp
xchg
hlt
sbb
cmc
ins
mov
aas
add
repnz
(bad)
call
sbb
loop
sti
sub
(bad)
fucomp
lea
retf
(bad)
pop
fldcw
dec
retf
fisub
sbb
lds
adc
add
dec
outs
xor
sbb
lahf
dec
jbe
(bad)
(bad)
pop
jno
sub
push
fdivr
js
and
les
cmp
mov
mov
pop
cmp
js
sub
sub
sub
mov
mov
imul
js
pop
sbb
mov
xchg
xlat
dec
lods
les
or
js
mov
dec
xor
add
mov
aad
and
popa
and
or
sub
ins
lds
pop
cld
and
fs
mov
xor
lock
cmp
and
cmp
in
pop
sbb
jmp
or
cmps
mov
mov
pop
bnd
or
scas
mov
or
push
mov
push
xor
cmp
adc
jno
shl
test
loop
movs
aad
cmp
fs
sar
pop
add
mov
in
repnz
js
pushf
stos
fs
mov
repnz
data16
xchg
jno
ror
fwait
jl
repnz
cwde
retf
pushf
or
and
add
test
outs
adc
sbb
xor
push
xchg
idiv
out
(bad)
in
add
stos
and
enter
mov
jno
les
cmp
fwait
test
das
jg
sub
outs
adc
and
xchg
sub
push
jae
imul
stos
sbb
stc
mov
repnz
sbb
mov
jmp
pop
cmp
(bad)
push
fimul
mov
fs
mov
rol
rcr
data16
shl
or
cs
mov
rcl
xor
test
push
inc
mov
ja
(bad)
sbb
jns
fs
jno
pop
jg
or
pop
mov
cdq
pop
scas
jle
lock
or
xchg
and
shl
jmp
dec
rcr
stos
sub
hlt
pop
sbb
shl
inc
(bad)
and
aam
daa
ins
and
push
ret
mov
mov
in
mov
dec
adc
fcom
es
bound
(bad)
gs
pop
loope
fcomip
or
mov
inc
xchg
jnp
fmul
leave
xor
sahf
pusha
cmc
popf
hlt
addr16
mov
inc
sar
mul
jge
fdivr
je
test
aad
or
setbe
or
pop
xchg
cmps
add
outs
mov
xchg
lock
xchg
fstp
jl
jmp
push
push
hlt
arpl
dec
fs
jns
popa
adc
add
cld
jo
int
ins
cmps
push
sbb
clc
loope
inc
sbb
fsubrp
inc
sbb
push
jno
int
fwait
int
sub
leave
pop
sbb
pop
fwait
jle
pop
retf
mov
jne
icebp
shr
in
call
push
clc
out
cmps
pusha
and
or
sahf
aaa
cmp
in
cmp
ret
adc
sub
leave
mov
jnp
fidiv
push
mov
mov
or
jmp
in
loope
push
lock
dec
pop
mov
push
xchg
pop
mov
popa
sub
bound
sar
xchg
pop
stos
ss
sahf
cmp
ins
jb
pop
xchg
mov
add
into
fwait
lods
test
ds
mov
xor
es
pop
mov
xor
mov
test
add
stos
mov
ret
(bad)
pop
adc
xchg
ret
xor
nop
aaa
mov
mov
mov
mov
or
cwde
dec
mov
dec
(bad)
cmp
icebp
dec
clc
cdq
(bad)
mov
(bad)
adc
test
pop
mov
lock
movs
shr
retf
cld
or
nop
iret
mov
outs
xor
outs
fs
adc
cmp
or
ins
jno
(bad)
test
push
mov
and
dec
jnp
(bad)
ds
mov
mov
dec
jne
pop
fwait
jmp
push
add
sahf
sbb
aas
sub
add
jg
mov
sar
sub
scas
loop
mov
xlat
fwait
jbe
inc
sub
inc
shr
bound
mov
pop
sbb
xor
dec
dec
jbe
retf
stos
adc
adc
and
and
push
les
jne
pop
enter
dec
int3
out
fild
test
cwde
(bad)
aas
hlt
fadd
jnp
std
pop
push
sahf
shr
and
jmp
ja
cmp
aas
push
lods
add
mov
lds
outs
sti
dec
retf
or
mov
add
call
data16
in
ret
outs
scas
(bad)
xor
bnd
jne
mov
(bad)
dec
xlat
jno
jl
jp
fdivr
fbstp
mov
xor
in
div
cmp
cmps
add
fidiv
or
push
inc
outs
psubq
add
cmc
stos
mov
jle
fwait
pop
mov
add
mov
or
pop
pop
sbb
pop
test
mov
adc
int3
ret
fdiv
repnz
dec
idiv
rol
stc
out
dec
lods
dec
scas
xchg
iret
arpl
ss
in
adc
jp
imul
cld
fyl2xp1
jg
mov
mov
cs
cmp
in
or
jae
sbb
rcl
xor
call
pop
cmps
jae
pushf
cmp
lods
(bad)
sbb
dec
mov
push
xchg
jmp
inc
jmp
mov
rcr
jge
xor
aam
and
xor
inc
ficom
jo
adc
sub
sub
call
lea
xor
test
dec
movs
adc
cmp
stos
mov
out
and
scas
rol
jbe
mov
loop
add
out
mov
mov
pop
imul
pushf
jne
je
xchg
pop
js
int
cmc
mov
js
mov
and
sahf
mov
push
lods
jno
push
je
neg
mov
iret
push
lea
mov
push
test
inc
jg
out
shl
stos
jecxz
and
xor
sbb
mov
push
std
jno
ja
out
inc
adc
push
add
mov
les
push
call
xor
lods
in
repnz
cli
hlt
cmp
in
(bad)
push
iret
adc
retf
pop
push
inc
mov
ret
pop
or
push
mov
(bad)
cmp
jo
dec
call
xor
retf
push
jbe
sbb
fwait
mov
call
das
jmp
sahf
xor
out
or
push
or
pop
mov
pop
mov
fimul
ins
aam
adc
daa
cmp
dec
adc
lahf
push
rol
enter
push
dec
dec
push
ret
loop
pusha
jmp
lock
cli
inc
mov
adc
adc
sbb
movs
xor
mov
cmp
sahf
add
jo
movs
and
retf
xchg
push
adc
sbb
mul
sub
hlt
and
outs
(bad)
repnz
or
jmp
pusha
add
jle
idiv
retf
std
push
xor
cdq
out
adc
or
add
sahf
pop
or
mov
pop
imul
xchg
out
dec
mov
(bad)
dec
mov
stc
and
ins
hlt
pop
mov
xchg
sub
pop
(bad)
lea
aad
nop
push
mov
pop
sbb
mov
pop
pop
in
das
ins
lea
mov
jmp
mov
mov
(bad)
jmp
nop
ja
adc
dec
ja
test
adc
mov
scas
xchg
push
arpl
jne
sbb
push
dec
mov
pop
aaa
adc
jge
std
int
scas
and
cs
mov
jbe
mov
cmps
cmp
gs
xor
test
cwde
in
xor
test
test
je
xlat
movs
in
sub
sbb
add
test
mov
push
sub
ds
pop
jbe
sar
xchg
icebp
data16
jo
popf
call
les
pop
adc
cmp
jecxz
and
xor
popa
sbb
cmc
ror
cmp
leave
add
push
ins
lea
into
add
adc
enter
mov
vcvtps2pd
ret
mov
dec
movs
daa
retf
and
or
stos
out
(bad)
(bad)
mov
inc
and
lahf
addr16
jbe
fmul
aam
lahf
xchg
adc
lea
ficomp
and
lock
daa
pop
adc
inc
ja
mov
xor
push
fucomi
outs
mov
jmp
pop
dec
and
or
scas
xor
cmp
jmp
in
fcom
mov
int3
loope
add
outs
sbb
loope
add
or
mov
in
inc
leave
mov
les
dec
mov
cmp
xor
rol
and
enter
pmuludq
les
or
clc
fcom
jl
test
add
stc
fs
adc
add
in
xchg
fdiv
pop
xchg
leave
mov
popf
test
adc
mov
push
cmp
dec
xchg
pop
cmp
xor
stc
adc
add
cdq
fadd
cs
fsubr
adc
jno
ret
into
mov
ds
nop
adc
pusha
inc
in
adc
or
ror
sahf
addr16
mov
xchg
call
dec
cmp
push
jnp
xchg
adc
jmp
dec
xchg
loop
cmp
mov
pop
adc
sbb
and
test
daa
jmp
mov
xchg
(bad)
sbb
jge
retf
test
loop
fnsave
cmp
test
xor
pop
div
rcl
add
int3
and
ret
imul
sahf
packssdw
int
jnp
arpl
add
stc
fcmovb
cs
xchg
sti
xchg
iret
(bad)
push
leave
aaa
fimul
xchg
ja
sub
pushf
inc
sar
out
neg
cmps
stos
jae
jecxz
inc
enter
js
(bad)
add
jno
outs
dec
mov
stos
xor
pop
jae
sub
test
out
leave
mov
dec
push
cmp
cmps
sar
lods
sar
sbb
shl
mov
pop
pop
test
mov
adc
push
stos
and
jbe
fnsave
adc
not
scas
push
mov
pop
scas
fistp
repnz
xor
test
cdq
mov
fwait
rol
sbb
lods
push
push
and
mov
cdq
shl
cmp
dec
ret
jbe
icebp
dec
sub
jmp
sub
outs
push
or
or
pop
ins
inc
retf
xlat
dec
mov
push
enter
add
xchg
(bad)
loop
test
xor
pop
int3
and
fadd
adc
or
inc
repz
rcr
sbb
push
sbb
fwait
jle
pop
lds
dec
adc
inc
jl
dec
jmp
jne
and
xor
cli
xchg
aaa
or
push
call
adc
push
pop
mov
mov
push
xchg
out
inc
adc
dec
sti
aas
call
push
adc
jns
cmp
and
(bad)
retf
push
out
(bad)
dec
sar
push
int3
call
push
sub
adc
aas
or
popf
stos
mov
test
dec
xor
sahf
pop
ds
mov
mov
pop
jbe
aas
xor
test
sbb
mov
sub
mov
or
or
aaa
push
mov
(bad)
enter
mov
push
dec
inc
sub
sbb
jo
push
dec
sar
mov
inc
add
jne
push
jo
jmp
sbb
mov
push
int3
sub
in
pusha
push
cmp
mov
out
sahf
push
out
in
mov
ret
jle
cmp
inc
inc
iret
aas
dec
(bad)
and
sub
xchg
adc
jg
mov
dec
(bad)
xchg
loop
push
add
sub
ret
test
and
scas
outs
leave
dec
loopne
fsub
out
jg
jp
mov
sbb
xor
test
sti
arpl
ins
xchg
mov
pop
adc
xchg
imul
lods
fild
pop
jle
das
push
inc
push
out
inc
or
ror
jae
inc
pop
xchg
xchg
add
iret
popf
sub
cmp
sub
loopne
xchg
or
xor
fbstp
jnp
xchg
loope
clc
add
call
and
xchg
(bad)
out
push
dec
mov
dec
jmp
rcl
jmp
add
leave
mov
repnz
leave
xchg
data16
fnstcw
fdiv
mov
imul
dec
aas
out
fs
aam
adc
mov
or
ror
push
push
and
imul
or
jb
out
inc
nop
out
(bad)
and
sti
(bad)
push
or
xchg
dec
or
mov
pop
(bad)
fcomp
daa
xchg
push
jg
adc
in
rcl
mov
inc
pop
inc
gs
nop
lea
inc
leave
mov
add
test
cli
push
retf
sub
mov
xchg
outs
add
mov
rcr
sub
mov
lods
sbb
rcl
jbe
dec
add
mov
(bad)
jg
fadd
cmp
mov
rcr
sub
and
imul
test
inc
jne
gs
mov
(bad)
fmul
dec
call
repnz
enter
popf
scas
mov
mov
mov
ret
ret
sub
test
dec
xor
cmps
fbld
xor
mov
cmp
test
or
fst
adc
push
je
xchg
inc
mov
sub
stos
fld
das
retf
loope
mov
cmps
aam
and
and
cmc
cs
jbe
add
jbe
cmps
jmp
jbe
out
mov
or
cs
pop
inc
mov
dec
dec
stos
xchg
cli
adc
mov
(bad)
mov
add
jp
fs
xchg
mov
enter
cmp
mov
aaa
xor
xor
xchg
out
iret
cmps
in
or
sti
dec
das
push
retf
nop
cmp
and
sub
shr
sub
mov
sbb
pop
pop
dec
pop
dec
and
ins
adc
push
inc
add
into
xor
cli
std
shl
sti
rol
mov
mov
adc
mov
aam
cs
cld
mov
(bad)
out
jp
retf
js
inc
sbb
cmp
fprem
mov
sbb
push
xor
ja
pop
sbb
repnz
clc
shl
xor
retf
cmp
nop
inc
xchg
mov
test
mov
repz
mov
out
xlat
push
inc
popa
cli
jns
or
scas
lds
mov
sahf
test
sbb
outs
adc
add
neg
inc
repnz
dec
add
and
pushf
scas
int3
ret
test
fcomp
ficom
or
imul
repz
adc
ret
xor
js
dec
xchg
push
outs
js
push
cmp
jmp
scas
xor
jl
ffreep
sub
cmp
dec
(bad)
adc
xchg
sbb
and
pop
popa
and
xchg
je
pop
mov
or
mov
jnp
pop
sahf
mov
push
mov
ins
es
dec
xor
jae
or
xor
xchg
xor
gs
retf
and
test
imul
fiadd
or
pop
(bad)
in
xlat
and
loope
jae
inc
adc
push
or
arpl
sub
xchg
jmp
sub
dec
imul
cdq
mov
sub
cli
call
cmp
mov
jge
sub
jne
inc
jmp
bound
or
xlat
sti
and
adc
inc
inc
sti
mov
cli
hlt
jecxz
stos
or
ins
sbb
aam
pusha
and
push
loope
rol
adc
imul
cmp
test
gs
inc
sbb
pop
cmp
test
lea
push
pop
push
cmc
into
(bad)
pop
cmp
dec
(bad)
xlat
js
pop
add
or
fbstp
ss
xor
push
mov
es
in
push
js
mov
cmps
ficomp
inc
repz
stos
dec
arpl
jp
jp
adc
int3
jae
shr
inc
jnp
sbb
loop
cmc
dec
repz
into
and
test
cmp
mov
push
lods
out
fsubrp
cs
ds
sti
jae
sahf
stos
push
or
call
jl
cwde
jns
pop
inc
mov
and
movs
(bad)
mov
jnp
(bad)
js
movs
jge
call
cmp
dec
mov
out
xor
lock
and
jp
xchg
pusha
in
mov
dec
test
push
jo
dec
iret
jmp
rcl
push
loope
mov
call
sub
mov
add
add
jle
enter
push
mov
jl
outs
cmc
xor
pop
mov
pop
mov
push
inc
fild
adc
icebp
dec
mov
ins
call
repz
je
sar
scas
cld
xchg
dec
add
mov
inc
mov
jne
xchg
aaa
in
jbe
ins
or
add
fimul
std
fucomp
jmp
cs
inc
jb
inc
and
mov
xchg
jno
mov
add
(bad)
in
ss
mov
adc
inc
push
inc
inc
lahf
(bad)
loopne
dec
mov
mov
mov
mov
cmp
jmp
xlat
xchg
xchg
jo
test
jo
fild
js
fstp
out
push
ficomp
adc
loopne
addr16
adc
rol
jo
fild
nop
sbb
add
push
xor
adc
push
frstor
lock
jle
push
xor
sub
stos
clc
test
retf
sbb
out
push
sbb
add
ret
call
aaa
cmp
rcr
or
pop
repz
iret
out
out
and
pop
(bad)
adc
cmps
pop
retf
enter
fdiv
ret
mov
mov
mov
adc
or
loop
retf
fwait
(bad)
mov
pusha
dec
into
sub
mov
xor
cwde
mov
cmp
dec
js
loopne
enter
out
and
inc
add
mov
int
jmp
pusha
inc
out
int3
or
rol
dec
mov
sub
xchg
ja
pop
inc
arpl
je
or
dec
mov
stos
or
(bad)
lock
call
outs
push
adc
pop
dec
bound
push
cli
or
jnp
ss
inc
out
jg
lods
mov
xor
add
or
mov
mov
sbb
mul
out
fwait
jae
aas
cmp
add
mov
mov
pop
adc
(bad)
mov
aaa
push
mov
test
sbb
xchg
adc
cmp
lods
push
pop
in
mov
mov
sbb
movs
test
aad
xchg
and
push
in
sbb
retf
pavgb
pop
jno
jg
mov
js
jne
outs
mov
inc
repz
les
sub
cmc
icebp
lds
xchg
ins
xchg
mov
icebp
or
inc
loopne
stos
mov
xchg
xchg
jnp
sti
inc
into
repnz
pop
mov
call
(bad)
std
jp
mov
mov
push
cld
sbb
jns
(bad)
sub
repz
imul
adc
aam
dec
pop
(bad)
dec
push
cmp
ror
daa
popf
lahf
jp
xor
in
pop
popa
outs
push
mov
inc
retf
ins
jp
mov
ret
ins
or
add
pop
jno
out
out
dec
test
retf
out
out
shl
fadd
mov
imul
dec
movs
(bad)
pop
ds
mov
sbb
or
in
outs
stos
jle
adc
mov
xor
xlat
fadd
(bad)
call
fmul
mov
sbb
xor
clc
sahf
inc
inc
imul
ror
in
push
add
and
jbe
dec
add
add
mov
mov
mov
adc
imul
jle
mov
or
das
fdivr
sbb
jmp
jb
sub
rcr
xchg
jae
test
jae
push
(bad)
pop
in
fimul
mov
icebp
add
add
mov
and
cld
mov
leave
test
xor
ss
(bad)
sti
cwde
enter
mov
test
cmp
and
stc
fldenv
fisubr
test
aad
cmps
out
jmp
ja
mov
repz
cdq
push
sti
loope
adc
xchg
adc
popa
test
not
push
out
scas
iret
mov
jo
mov
xor
out
(bad)
leave
rcl
sub
les
(bad)
jno
repnz
retf
hlt
add
into
es
jnp
jge
dec
push
fmul
test
or
(bad)
cmp
and
and
arpl
je
add
lds
push
push
loop
sbb
xchg
xchg
sub
fs
xchg
jo
mov
aas
pop
mov
enter
sar
inc
add
addr16
mov
xlat
sbb
(bad)
jg
je
fwait
js
xchg
dec
stos
mov
loopne
mov
pop
nop
fbstp
jae
retf
cld
aad
hlt
sub
leave
inc
inc
or
(bad)
pop
fild
imul
dec
xchg
xor
cmps
clc
and
fild
xchg
pop
sbb
add
jns
jo
loopne
outs
cmps
lock
ins
(bad)
push
jle
out
mov
jl
call
push
data16
mov
cmp
sbb
ficom
pusha
out
cli
test
inc
push
cmp
and
int3
jo
out
sti
out
adc
pop
pop
jb
pop
push
inc
and
push
xlat
and
xor
(bad)
scas
xor
ret
inc
in
push
ret
retf
push
je
sub
adc
sub
inc
idiv
jb
sub
or
ja
loope
jns
aad
pop
sub
pop
inc
cdq
fcomip
adc
ja
gs
fadd
dec
stos
popf
loop
sbb
or
aam
in
fiadd
push
popa
add
hlt
xor
cmps
mov
adc
popf
cmp
std
aam
xor
mov
fdiv
mov
lea
or
in
ja
fild
sbb
aaa
out
pmullw
jecxz
shr
arpl
int
jl
lods
sbb
jg
imul
mov
pop
out
aad
xchg
jecxz
sbb
fadd
pop
iret
loope
xchg
repnz
xchg
cmps
in
pop
in
repnz
push
mov
mov
inc
cmp
mov
jl
mov
mov
in
mov
sahf
in
in
cmp
or
sbb
jne
and
dec
(bad)
dec
js
in
mov
push
pop
push
push
cld
and
dec
sub
pop
or
pop
jg
out
out
add
jl
sub
mov
add
xchg
retf
iret
push
mov
and
push
mov
mov
test
push
jmp
cmps
fisttp
(bad)
adc
jns
sub
pop
xchg
frstor
dec
and
sbb
pop
pop
fstp
movs
push
sbb
es
gs
mov
push
xor
adc
jbe
inc
push
outs
xchg
hlt
mov
outs
pop
aad
into
pop
dec
lock
movs
in
adc
xor
test
adc
mov
and
add
cdq
jp
mov
rol
mov
mov
test
cld
icebp
cwde
into
mov
outs
push
popf
pop
mov
sbb
add
js
mov
add
enter
and
sub
sub
push
rol
xor
push
xlat
ss
push
stos
xor
sub
fwait
sti
stos
xor
inc
or
push
cld
cli
pushf
cli
cmps
fsubr
add
push
lahf
mov
in
mov
jecxz
push
inc
jo
jbe
add
and
gs
test
arpl
out
int3
leave
scas
pop
inc
or
mov
test
and
mov
sti
ret
inc
clc
aam
or
dec
cmps
xor
int
jbe
xor
cmp
mov
pop
jbe
or
ficomp
cwde
pop
in
inc
and
mov
sar
jl
mov
mov
push
push
loopne
psrld
jne
xor
imul
xor
jp
cmps
xchg
adc
iret
stc
and
out
sbb
fs
add
adc
cmc
or
cmp
out
cld
xchg
add
lods
stc
adc
cli
bound
cwde
int
mov
call
out
and
inc
out
cdq
stos
call
(bad)
push
cmp
jmp
jg
inc
mov
pop
add
inc
stos
xchg
div
mov
arpl
push
call
leave
adc
pop
or
mov
push
call
or
in
xchg
sbb
push
push
dec
addr16
jl
dec
dec
cmp
inc
ins
daa
lods
enter
push
call
cmp
mov
inc
in
cmp
cli
(bad)
out
mov
aas
test
mov
add
mov
ins
jns
jg
push
das
cmc
and
(bad)
in
adc
inc
dec
mov
data16
inc
xchg
lock
cmc
sub
sbb
push
into
loop
pop
(bad)
int
je
ss
test
cs
(bad)
daa
mov
adc
in
mov
jo
fwait
pop
xor
or
ins
cli
ins
movs
cmps
sbb
sub
or
data16
ficom
push
jmp
pop
in
fsub
ds
mov
loop
in
mov
pop
neg
fcomp
sub
pop
and
test
xchg
mov
addr16
lahf
mov
hlt
dec
inc
sub
or
hlt
(bad)
sar
dec
jmp
repz
xchg
xor
add
scas
test
popf
std
lahf
repnz
mov
mov
pop
mov
or
jns
mov
das
je
dec
jae
jmp
ror
fucomip
(bad)
fdiv
xchg
retf
ds
pop
stos
mov
or
nop
mov
nop
shl
cli
cmps
sbb
jnp
es
mov
rcr
lea
cmp
fimul
adc
js
popf
inc
fmulp
cmp
mov
ret
leave
repnz
mov
jns
mov
sar
pop
mov
je
ret
jmp
sub
sar
aad
mov
push
out
push
dec
jl
fisttp
shl
push
shl
fmul
sbb
(bad)
stos
push
xor
mov
xchg
aas
push
fwait
in
shr
adc
enter
dec
cmp
lock
inc
fbstp
jae
add
les
adc
movs
and
push
into
cwde
gs
sbb
xor
sbb
dec
lds
stc
mov
int3
mov
xchg
jle
adc
shr
imul
xchg
inc
jl
pop
pop
xor
push
pop
push
enter
pop
xchg
test
pusha
pop
test
mov
jns
(bad)
js
(bad)
pop
and
mov
fsub
call
ins
dec
jne
jg
or
hlt
mov
inc
dec
mov
xor
jge
fmul
(bad)
push
imul
inc
xchg
in
lahf
pop
push
and
fimul
cmp
push
dec
jle
mov
sbb
sub
cmp
sub
ja
or
jg
xor
sbb
jo
push
jno
fimul
mov
(bad)
mov
jg
js
pop
mov
push
bound
adc
mov
outs
call
scas
(bad)
or
aad
sub
mov
mov
pushw
push
xlat
push
cmps
cmp
dec
dec
rcr
lds
cld
xchg
pop
push
inc
sbb
mov
xor
shl
fcmove
and
jns
mov
mov
and
outs
xchg
add
repz
jb
inc
std
(bad)
or
neg
sahf
inc
push
push
mov
cdq
cmp
xor
mov
scas
pop
cmp
jl
jecxz
lods
shl
stos
push
imul
dec
push
loope
and
cmc
in
fisubr
icebp
ins
sbb
push
loopne
(bad)
mov
sbb
(bad)
stos
xor
in
jp
xlat
fstp
(bad)
sahf
mov
(bad)
cwde
xchg
push
lods
dec
push
rol
ret
or
ficomp
pop
dec
adc
pushf
scas
sbb
fld
dec
pop
jp
retf
arpl
icebp
push
mov
and
div
add
ss
cs
mov
sub
pop
inc
out
and
xchg
pop
inc
push
cmp
dec
push
test
mov
js
mov
lock
push
jb
pop
cmp
mov
mov
mov
push
dec
jno
in
outs
sbb
inc
push
fisttp
cmp
fdivr
clc
jp
adc
and
cmp
push
fstp
fs
mov
scas
(bad)
fsub
aaa
pop
rol
jg
or
jns
dec
out
pop
xor
ret
jge
push
aaa
xor
out
stos
pop
movs
push
aad
fild
adc
cli
movs
inc
pop
and
push
mov
je
daa
out
lock
scas
xor
sbb
sub
js
mov
movs
lock
jg
or
fsub
lock
rol
jp
call
jg
dec
sub
mov
stos
fs
or
push
aam
cli
dec
(bad)
jg
data16
div
cli
not
loope
add
jo
mov
cmp
cld
adc
jb
arpl
xchg
in
or
fmul
aas
fld
std
loop
jns
xor
add
out
sbb
and
stos
push
sub
xchg
jmp
jae
lock
push
sbb
ss
jo
sbb
shl
pop
repnz
pop
mov
test
push
fucomp
out
adc
repnz
xor
les
test
sub
test
jo
inc
or
mov
ins
mul
(bad)
out
push
test
push
nop
mov
ror
cmp
rcl
jl
mov
sub
jo
out
int3
faddp
mov
xor
ret
pop
inc
sbb
sbb
cmps
pushf
push
xchg
mov
sbb
jp
pop
jp
push
sahf
mov
jmp
xor
sub
jecxz
or
stos
or
xor
mov
fld
btc
int
dec
fcmovb
popf
mov
retf
inc
shl
jle
and
add
adc
dec
adc
sbb
jns
jecxz
inc
pop
mov
inc
nop
test
jge
jl
push
(bad)
pop
dec
add
shl
sub
sti
or
sbb
mov
pop
cmps
push
sub
xor
add
xlat
jmp
ficomp
ds
je
jne
test
bound
nop
push
push
das
lods
repnz
int
fcomp
retf
lahf
clc
push
or
ins
mov
ins
mov
stos
xchg
jno
call
retf
pushf
adc
dec
adc
mov
(bad)
out
int
push
pop
addr16
int
sub
out
mov
popa
cld
idiv
js
push
imul
mov
retf
ds
popa
mov
sub
add
mov
add
inc
mov
cmp
inc
js
cmp
mov
jecxz
xchg
pusha
cld
sbb
dec
cmp
or
aam
xor
mov
lods
sbb
clc
and
jae
cmp
adc
das
mov
sahf
stc
xchg
cld
xchg
test
cwde
(bad)
out
pop
test
aaa
ret
mov
jb
mov
jmp
imul
ror
(bad)
push
xor
lods
dec
rol
push
xchg
iret
lods
scas
pop
pusha
jge
lea
jae
adc
add
xchg
jmp
sahf
pop
shr
cmp
icebp
mov
ror
repz
loope
retf
pop
fnstsw
and
pop
inc
cmps
jbe
inc
cmp
inc
mov
mov
inc
xchg
cmp
(bad)
xor
call
and
sbb
pop
cmp
jne
rcr
cwde
sub
fs
mov
fcomp
pop
imul
and
loopne
push
jmp
lods
stos
and
ins
loopne
mov
test
imul
cmps
mov
sbb
loop
je
loop
into
dec
or
or
mov
jne
inc
inc
jg
cs
mov
jmp
jns
jg
shl
dec
jecxz
push
add
pop
adc
ja
sbb
pop
ror
test
sbb
js
or
mov
push
cmp
jp
sar
xchg
ins
and
mov
pop
push
ins
xor
pop
jl
xchg
lods
sub
pop
pop
stos
cmc
pop
addr16
mov
xchg
test
imul
not
jno
xchg
jns
ins
cmp
sar
sti
std
push
(bad)
hlt
and
inc
je
lahf
jge
push
mov
mov
mul
cdq
int3
(bad)
xlat
adc
mov
out
test
xchg
fs
mov
(bad)
sbb
jno
inc
lods
int
adc
sub
hlt
ret
stos
jns
retf
fstp
std
ins
jno
xchg
(bad)
adc
fs
or
lods
sahf
enter
pop
dec
stc
jno
jno
ds
fistp
ror
jl
inc
fnstsw
jnp
mov
xchg
ja
jecxz
lock
cmps
pop
cmp
jb
neg
jmp
add
dec
popa
adc
cmp
mov
(bad)
adc
sub
and
mov
push
test
and
xchg
lock
les
arpl
mov
(bad)
jbe
(bad)
sti
popf
push
icebp
or
or
stos
pop
in
pop
addr16
bound
jmp
cwde
stos
mov
inc
xor
pop
push
sub
lock
push
push
jae
adc
idiv
push
int
outs
ss
push
pop
push
sbb
je
xchg
fcom
div
xlat
jg
jne
xor
or
sbb
adc
and
add
(bad)
pop
(bad)
mov
ja
scas
pop
cld
dec
cwde
(bad)
fisubr
stos
mov
jns
dec
xchg
aaa
ins
ret
cmp
pop
lds
adc
ficomp
aad
ret
mov
push
xchg
cmc
pusha
push
repnz
mov
jmp
xor
adc
outs
and
mov
jmp
iret
cmp
jmp
lods
xor
jmp
lods
xor
(bad)
enter
jmp
xchg
je
mov
dec
mov
out
mov
ins
and
sub
retf
xchg
push
mov
es
mov
cld
shr
cmp
aas
(bad)
aas
pop
aas
jp
sub
dec
sub
mov
inc
jmp
xchg
idiv
sub
std
jecxz
inc
retf
mov
sub
inc
and
dec
mov
jno
sub
jp
sbb
dec
repz
add
loop
jmp
cmp
popf
or
jo
pop
stos
sahf
cmp
iret
and
xchg
es
mov
das
mov
push
(bad)
ss
mov
xchg
xchg
sbb
popa
in
mov
mov
jmp
xchg
jo
mov
lods
out
xchg
mov
cmp
dec
es
(bad)
sbb
mov
dec
pop
arpl
not
or
mov
mov
gs
or
mov
jbe
jnp
push
mov
lds
arpl
jno
and
pop
sub
jmp
sbb
sahf
push
or
adc
push
push
addr16
push
mov
imul
loopne
(bad)
(bad)
mov
ffree
and
cmp
push
inc
jmp
out
fadd
mov
repz
inc
stc
cli
jmp
scas
lahf
mov
inc
adc
xor
test
mov
xchg
or
adc
out
inc
and
pusha
push
pop
cwde
loop
jnp
dec
inc
adc
(bad)
(bad)
(bad)
or
dec
pop
xor
fdivr
xor
mov
dec
mov
icebp
push
mov
mov
lock
mov
jp
dec
sub
daa
pushf
sar
out
jb
pop
loop
cmps
jge
stos
call
pop
mov
jb
dec
add
cmp
push
dec
and
push
add
movs
inc
sbb
cli
push
pop
xor
xor
mov
cmps
jbe
dec
ds
sub
pop
cmps
cmps
sub
push
test
(bad)
sbb
and
mov
push
fsubrp
cwde
mov
pop
xchg
inc
dec
lds
adc
lds
ja
or
jecxz
inc
cmps
rcl
out
call
test
sbb
cmp
pushf
in
push
mov
test
fmul
fwait
push
mov
jae
stos
push
icebp
mov
mov
stc
sub
fwait
test
sbb
outs
nop
mov
or
push
xor
xor
push
fmul
or
shl
movs
add
std
stos
and
pop
push
pop
mov
or
xor
xchg
sbb
xchg
pop
add
sub
push
xchg
mov
jmp
cmp
cs
gs
mov
(bad)
mov
pop
inc
xchg
mov
stos
cld
out
xor
pop
cld
fst
jns
push
inc
fidivr
xor
mov
mov
xchg
test
mov
push
cmp
push
xor
jb
xchg
xchg
ins
cmp
adc
xchg
stos
js
lock
test
frstor
nop
push
cdq
and
(bad)
dec
popf
ja
sub
retf
enter
jl
fisttp
dec
inc
fdiv
mov
or
xchg
push
pusha
mov
cld
cmps
mov
cmp
sti
shr
jg
je
loopne
aad
jbe
ds
jg
inc
stos
adc
pop
xchg
jno
jae
jne
in
sbb
mov
movs
push
jnp
stos
xchg
push
lds
and
out
mov
ror
popa
das
jnp
dec
imul
arpl
clc
outs
jbe
or
jne
mov
test
sbb
jecxz
push
or
xchg
cdq
imul
sbb
rol
shl
mov
lods
xchg
adc
cmp
pushf
(bad)
in
iret
and
imul
xor
cmp
in
cs
cdq
inc
cli
aaa
inc
lods
js
jecxz
pusha
inc
mov
sbb
mov
jmp
xor
push
je
or
imul
xor
pushf
sub
inc
push
jl
or
and
xor
or
cmp
sbb
loope
rol
rcl
arpl
sub
pop
sbb
leave
retf
jo
mov
test
push
jbe
dec
aas
out
push
mov
(bad)
fs
mov
test
mov
ja
jae
mov
or
mov
mov
out
jne
sbb
clc
in
and
mov
adc
in
pushf
cli
callw
mov
(bad)
push
ret
hlt
adc
dec
lods
aad
test
fwait
leave
ret
call
push
fsubp
cwde
lods
cmps
mov
scas
push
test
jo
sub
leave
out
outs
or
jo
adc
fcomip
xor
and
cwde
test
retf
(bad)
fnsave
jae
xchg
(bad)
into
sub
sbb
out
pop
and
int
in
jl
push
push
ins
fsub
cwde
dec
pop
xchg
mov
jno
bound
retf
push
out
dec
rol
shr
sub
adc
xchg
jecxz
out
or
cmp
fistp
xchg
mov
jge
mov
das
jo
ret
pop
pop
arpl
out
push
fdivr
ss
mov
clc
sbb
sbb
int
sbb
addr16
jg
sub
pushf
lock
outs
pop
in
dec
jle
sahf
js
(bad)
out
push
xchg
or
iret
pop
rol
push
aad
ret
imul
xchg
in
jg
or
std
jnp
lahf
loope
push
sbb
div
xchg
lds
je
push
movs
push
pop
inc
pop
retf
and
sbb
push
sub
mov
gs
call
pop
jae
mov
jmp
add
sbb
ds
cwde
iret
cmp
pop
lahf
mov
mov
inc
aad
cmc
jecxz
scas
adc
int3
call
xchg
(bad)
out
push
jmp
sbb
inc
mov
je
shl
in
lock
scas
lock
cli
pop
dec
aas
ins
sbb
call
ins
test
cmp
or
sbb
data16
add
ss
adc
lods
out
icebp
mov
sub
xchg
sbb
mov
iret
hlt
sahf
adc
dec
mov
dec
or
xor
xchg
stc
push
jg
cmp
stos
cmp
cmps
sbb
cli
adc
pop
loope
mov
dec
inc
stos
fwait
movs
sub
adc
(bad)
stc
pop
adc
cmp
ins
push
scas
mov
shr
out
inc
pop
icebp
mov
pop
and
xor
push
add
jle
xchg
push
loop
mov
ins
lea
test
ja
and
das
aaa
data16
outs
add
jb
adc
cmp
in
and
and
call
or
jle
lods
lods
jp
data16
adc
or
push
lds
ins
xchg
leave
mov
and
sti
ret
loope
lock
out
ins
idiv
mov
test
arpl
dec
mul
cmp
pop
test
ss
fnstcw
rcr
scas
push
inc
std
mov
lahf
lds
fstp
jmp
mov
sbb
cli
xchg
jmp
das
xchg
outs
add
cwde
sub
vpunpckhwd
(bad)
(bad)
push
(bad)
je
pop
add
shl
xchg
lods
or
push
xor
xchg
fmul
and
into
bnd
mov
push
inc
mov
not
js
loopne
jl
push
pop
mov
inc
jmp
in
pop
cmps
xor
xor
adc
pop
pop
mov
adc
push
punpckldq
cmp
lock
push
push
xchg
lea
mov
stc
jmp
stc
outs
mov
out
and
test
adc
jns
pop
mov
sbb
pop
pop
or
jbe
push
cmps
xchg
inc
jecxz
scas
sar
in
and
iret
in
dec
xor
adc
inc
mov
xchg
fwait
out
fsub
sbb
pop
jno
mov
add
or
jbe
xor
(bad)
aad
icebp
daa
sub
inc
add
mov
test
add
xchg
sbb
jecxz
xchg
mov
push
pop
scas
icebp
or
ds
push
pop
cwde
mov
dec
jmp
mov
mov
scas
inc
sub
scas
cdq
bound
loope
xor
pop
pop
mov
ret
icebp
scas
leave
loopne
mov
jmp
or
js
push
test
cmc
dec
mov
or
aas
and
cmp
push
data16
out
outs
pop
movs
mov
call
outs
sbb
movs
or
ins
movs
test
int3
ins
cmp
lea
shl
push
mov
inc
fild
iret
in
or
scas
pop
(bad)
scas
mov
sub
jmp
xor
xchg
mov
mov
imul
fidiv
pop
pop
call
and
addr16
xor
cwde
adc
jmp
cmp
lahf
mov
sbb
movs
pop
mov
inc
sbb
dec
jmp
mov
jg
cmp
push
pop
xchg
xchg
not
out
sub
test
dec
dec
push
lock
or
fist
adc
lock
mov
in
or
je
sub
gs
sbb
lahf
jne
fnstcw
mov
and
cli
rcl
pop
lea
mov
and
es
pop
push
xor
gs
in
into
test
sub
push
xor
cld
or
inc
mov
stos
push
jns
popa
mov
jecxz
sbb
sub
adc
mov
push
fisttp
mov
loopne
push
imul
mov
mov
mul
jl
dec
mov
cdq
adc
sub
pop
pop
cmps
scas
clc
push
inc
pop
jp
cwde
sub
mov
repz
mov
push
sbb
icebp
push
jl
ds
into
or
es
xor
stos
adc
aaa
pop
in
repz
aas
sbb
mov
vorps
jmp
inc
sar
imul
add
dec
xor
dec
cwde
aam
enter
mov
xadd
mov
xor
scas
jp
adc
and
xor
sub
jge
fadd
cmp
mov
out
push
mov
pop
int
and
xor
sub
xchg
ret
cmp
dec
xchg
or
inc
jbe
jge
push
jb
xor
push
aad
gs
out
xchg
push
outs
cmp
ror
add
popa
xchg
cs
icebp
test
adc
ret
fnstsw
movs
lock
aas
out
jb
cmps
dec
sub
push
push
rcr
clc
and
jle
mov
cdq
stos
into
test
cmc
jmp
dec
js
mov
dec
rcl
push
in
or
or
mov
adc
dec
rcl
arpl
xchg
(bad)
mov
push
add
retf
stos
inc
xchg
pop
xchg
(bad)
jp
cdq
xchg
sub
enter
ret
xchg
jo
and
inc
cmps
out
jp
jl
add
mov
xor
iret
pop
mov
sysexit
jmp
mov
cwde
push
mov
cmc
or
jle
sbb
mov
xor
iret
add
popa
test
pop
jl
repnz
mov
mov
push
fiadd
je
mov
push
outs
cmp
fidiv
lea
cwde
data16
hlt
push
out
jnp
or
mov
dec
aam
cmp
inc
int3
jne
sbb
scas
sub
sbb
xor
sbb
pop
mov
xchg
inc
sti
sub
in
jmp
or
call
sar
cwde
pop
cmp
sbb
lahf
sbb
loop
out
mov
or
cmp
jns
lods
stc
bound
rcl
jo
jecxz
(bad)
cmp
jmp
push
sub
(bad)
std
jno
and
xor
scas
xchg
icebp
adc
mov
mov
xchg
fimul
nop
jns
cdq
add
enter
iret
xchg
pusha
add
aaa
nop
nop
add
(bad)
bound
mov
test
in
cli
xchg
shl
lods
out
ret
cmp
mov
(bad)
mov
sar
pop
pop
pop
sbb
pop
lds
jno
lahf
stc
repnz
cdq
les
cmp
jmp
push
xlat
mov
sbb
test
jno
(bad)
cmp
xor
mov
sub
(bad)
jge
std
loop
lods
ss
and
cmp
aas
dec
push
mov
daa
pop
push
mov
jle
lea
das
or
icebp
jno
aaa
mov
push
sahf
std
imul
fld
ret
sti
loop
shl
inc
lahf
imul
adc
cmp
jmp
mov
out
retf
sub
sbb
outs
icebp
cmp
rol
push
cmp
mov
int3
or
adc
mov
dec
(bad)
(bad)
jl
scas
add
jo
repnz
mov
rcr
clc
and
add
nop
add
mov
jge
outs
mov
arpl
mov
add
mul
cld
xor
mov
inc
pop
rsm
mov
xor
(bad)
addr16
fbld
mov
inc
les
iret
xor
inc
and
aas
mov
scas
cmp
mov
dec
sbb
jecxz
lods
add
and
mov
sub
mov
inc
movs
cmp
mov
mov
adc
sar
sbb
and
cmp
aas
jb
sub
add
jne
cmps
or
push
data16
sahf
mov
stos
adc
sgdtd
pop
ja
push
inc
jmp
mov
ja
call
out
pop
push
or
pop
hlt
ret
das
mov
push
std
cwde
fisttp
(bad)
sti
sbb
jo
push
mov
fcmovnb
xchg
pop
mov
cmp
lahf
sbb
psrlq
and
mov
sub
adc
lds
inc
cdq
xor
xchg
sbb
xor
mov
pop
or
jecxz
stos
cs
pop
scas
mov
jmp
out
or
add
push
sahf
or
sub
jmp
sub
push
(bad)
adc
scas
cld
push
jge
fdivr
js
std
bound
add
ins
gs
movs
test
mov
rol
scas
inc
sbb
mov
daa
div
mov
mov
lea
in
xor
mov
fild
pop
adc
pop
sti
add
ret
ret
daa
inc
push
pop
mov
pop
lds
push
nop
pop
push
cwde
inc
sub
pop
dec
pop
sub
xchg
mov
mov
mov
xor
dec
ret
repnz
jne
mov
ins
inc
jmp
mov
fistp
mov
jne
mov
sub
xchg
or
pusha
retf
int
adc
lods
push
dec
mov
add
mov
sub
lahf
cmp
ror
clc
mov
aad
inc
add
adc
loopne
inc
cs
sar
arpl
fadd
mov
stos
sbb
push
dec
ror
rcl
cdq
sbb
xor
or
adc
cld
nop
xchg
xor
sub
dec
cdq
or
mov
pop
push
ficomp
xor
test
fst
inc
mov
jmp
sbb
dec
mov
cmp
pop
lock
sbb
and
xchg
jmp
retf
ins
not
mov
pusha
enter
sub
jge
and
dec
cmp
fadd
dec
in
xor
enter
xor
iret
jns
jo
or
(bad)
and
cmps
out
jmp
fistp
cmp
icebp
sbb
faddp
addps
les
mov
dec
ds
cmps
and
jb
fwait
lods
xchg
imul
mov
clc
pop
sbb
test
out
fcomp
retf
js
inc
mov
xchg
daa
add
(bad)
mov
in
jmp
mov
pop
ret
je
fcmovnb
push
fisttp
(bad)
data16
aas
sbb
aam
aad
lds
cmp
or
loopne
add
rcr
outs
cmp
xchg
push
retf
xchg
jge
mov
cmp
fldcw
pop
dec
push
xchg
pushf
sahf
retf
pop
sub
xlat
mov
mov
or
adc
loop
aad
neg
mov
fs
in
outs
and
cmc
call
shl
jg
test
lods
repz
call
pop
inc
pop
inc
cmp
retf
loope
cmp
push
pop
adc
sub
push
mov
xchg
sbb
cmp
sahf
(bad)
sbb
cwde
pop
push
cwde
mov
jne
(bad)
in
jle
mov
movs
mov
test
int3
xchg
(bad)
aaa
and
ret
stos
hlt
cmps
xchg
push
mov
push
aad
inc
xor
aam
call
pop
ret
and
div
fcomp
shr
jo
vmovq
arpl
imul
sbb
stos
fidiv
cmp
repz
fsub
mov
push
mov
mov
bound
das
jmp
mov
mov
stc
aas
mov
push
outs
xor
pop
test
mov
sbb
cmp
adc
push
inc
lea
xchg
(bad)
daa
cdq
push
int3
jae
xor
lss
int
push
imul
and
inc
aad
add
push
retf
stos
in
stos
outs
mov
and
mov
popf
adc
push
pop
push
loopne
scas
cmp
jbe
dec
(bad)
pusha
cmp
mov
cmp
inc
mov
xchg
push
ins
sub
mov
or
xchg
adc
cmps
dec
adc
in
jge
mov
comiss
pusha
or
cmp
test
bound
pop
sbb
out
jle
mov
jns
xchg
fcomip
adc
movs
add
imul
inc
or
xor
push
ret
mov
inc
mov
cmps
pop
push
adc
jp
icebp
fs
mov
jbe
cmc
test
mov
(bad)
fidivr
or
scas
mov
jae
out
ret
push
jg
sbb
jge
mov
mov
gs
js
daa
outs
and
nop
aam
ins
imul
cld
pop
or
jo
aas
pop
adc
inc
lahf
in
jnp
fimul
mov
mov
mov
jns
test
and
sahf
sub
in
pop
mov
or
jg
jmp
int
or
daa
(bad)
in
mov
push
rol
(bad)
int3
rol
jle
out
inc
or
push
cwde
sub
xchg
or
or
pop
lods
mov
and
xlat
iret
cmp
jp
stos
ror
in
adc
repnz
fdivr
mov
xchg
mov
jp
repnz
sub
clc
hlt
std
retf
(bad)
sbb
mov
fs
aas
jecxz
fild
jbe
sbb
adc
movs
push
data16
adc
and
fwait
inc
cmp
cmps
inc
push
adc
leave
dec
(bad)
mov
pop
inc
sbb
pop
pop
in
add
icebp
pop
shr
and
retf
xchg
mov
rol
lods
inc
mov
dec
cmp
scas
add
sub
mov
stc
and
jae
xchg
leave
pop
(bad)
call
mov
push
jmp
imul
int
lods
jg
test
call
push
mov
movs
es
jmp
into
das
mov
jb
and
icebp
mov
push
and
jne
stc
lods
and
aad
add
adc
repz
sar
leave
clc
imul
sbb
dec
jmp
xchg
push
pop
adc
xor
pop
mov
and
push
inc
js
scas
lds
and
pop
(bad)
mov
jnp
sbb
call
cmps
mov
and
push
lahf
inc
adc
sub
cdq
mov
cmps
ret
ins
cmps
mov
fdivrp
pushf
push
and
cli
stos
in
iret
popa
jecxz
ja
ret
mov
or
push
add
or
dec
je
push
fimul
dec
and
enter
mov
outs
pusha
jg
and
rcl
js
pop
scas
ret
push
pop
or
rcr
fst
sbb
add
pop
cs
into
jns
push
iret
ss
adc
popf
stc
sub
add
rol
rol
int
xor
test
imul
sbb
add
xor
hlt
mov
push
dec
xor
and
push
fimul
and
add
lea
loop
out
add
cmovno
shr
into
jp
aas
mov
jg
cld
and
inc
jmpw
(bad)
lds
jnp
js
sbb
test
test
cmp
mov
(bad)
mov
leave
rcl
sbb
dec
(bad)
daa
pop
imul
mov
retf
mov
mov
xor
(bad)
in
js
ins
xchg
call
push
ficom
pusha
jg
and
xchg
cmp
pop
popf
sub
fst
mov
jmp
lahf
stc
loope
push
sar
call
daa
loop
cmp
mov
dec
mov
out
or
mov
stos
loopne
xor
or
mov
cmp
jns
mov
movs
jmp
jmp
jecxz
movs
mov
push
lea
div
push
sti
adc
push
clc
xor
push
cld
pop
push
push
sbb
dec
jmp
pop
int
outs
cmp
push
leave
sti
fwait
stos
dec
sub
jp
popf
mov
sub
and
dec
xchg
and
sbb
loopne
sti
sub
loope
inc
cmp
not
stos
jmp
dec
push
clc
(bad)
mov
loop
rcr
jo
(bad)
fsub
xchg
out
add
(bad)
out
mov
loope
adc
test
mov
jnp
and
xor
mov
(bad)
push
add
jp
mov
sysenter
out
jno
and
das
int
dec
dec
cli
rcl
cmp
mov
fsub
movs
and
adc
mov
and
jge
sub
mov
and
xor
les
in
rcl
add
sub
jl
add
aas
aaa
sahf
leave
push
push
or
test
fs
pop
xor
neg
pusha
(bad)
aam
mov
jmp
or
dec
stos
cmc
cwde
stc
adc
mov
inc
pop
(bad)
push
xchg
jnp
je
data16
adc
aas
leave
xchg
push
xchg
test
adc
outs
mov
shr
rcl
mov
dec
addr16
mov
mov
adc
inc
fld
xchg
mov
cmp
jg
dec
xor
sub
adc
lock
jle
mov
pusha
div
popf
sahf
xor
ja
sub
dec
xchg
jg
sahf
pop
and
add
jno
bnd
dec
jmp
cmp
lock
js
pop
xor
pusha
shr
jge
call
(bad)
push
aaa
add
je
jbe
ds
mov
mov
jge
mov
push
sbb
arpl
popa
push
stos
pop
and
leave
out
imul
out
inc
mov
mov
jno
cmp
daa
dec
fimul
imul
pop
ret
xchg
gs
jp
dec
jns
out
repnz
cmps
cmp
mov
in
repz
repz
push
fbld
push
std
fmul
xchg
hlt
and
mov
adc
jb
cmp
sub
pop
push
imul
jp
pop
pusha
repz
add
add
mov
retf
sar
fs
cmp
loopne
call
mov
scas
call
stc
dec
push
pop
and
mov
pop
pop
mov
(bad)
cli
cmp
push
jl
scas
pop
pop
and
mov
sbb
test
mov
jmp
les
jmp
xor
aam
mov
mov
sti
repnz
icebp
xor
inc
fmul
pop
hlt
dec
ss
pop
aam
cmps
jge
imul
cmc
inc
inc
mov
jnp
aas
jg
bound
pop
inc
mov
pop
pop
cmp
int3
cwde
pop
movs
mov
xor
inc
mov
jecxz
adc
in
out
sub
rcl
add
pop
push
pop
out
movs
xchg
pop
push
pushf
push
cmps
cmps
movs
mov
in
inc
xor
sbb
pushf
mov
stos
mov
sar
in
frstor
fsubr
push
rol
lods
adc
cmp
fwait
mul
sbb
in
in
fstp
and
ficom
shr
cdq
add
xchg
xchg
mov
mov
or
js
jp
shl
loope
jmp
std
mov
sbb
lods
es
stos
cli
add
jmp
mov
mov
pop
nop
mov
lahf
sub
sbb
add
out
ins
mov
cmp
fidivr
loopne
into
lods
in
popa
bound
das
and
inc
in
test
iret
and
fist
jp
aam
mov
shl
(bad)
mov
or
je
pop
sub
pop
stos
fcmovnbe
sbb
jg
aad
jb
mov
test
cmps
jno
(bad)
arpl
adc
fcmovb
push
push
add
shr
add
push
pop
jns
pop
xchg
xor
in
adc
call
outs
popa
sbb
popf
mov
repz
jb
adc
cmc
lods
(bad)
cmp
cmp
sti
test
out
arpl
dec
fwait
sub
pop
jbe
(bad)
jns
mov
dec
mov
mov
mov
push
jns
or
push
(bad)
cmp
dec
and
and
pop
rol
adc
iret
sbb
push
bound
mov
outs
test
scas
push
cld
fcmovu
(bad)
mov
mov
ret
add
mov
mov
icebp
mov
cmps
iret
xchg
ins
and
add
(bad)
pop
sti
call
inc
mov
jecxz
mov
or
cwde
mov
mov
leave
and
mov
xchg
mov
cs
cmp
push
push
xor
sar
xchg
xchg
xor
nop
xchg
push
cmp
cs
(bad)
shr
sbb
lods
loopne
(bad)
loope
lea
aas
movs
adc
or
mov
loopne
push
push
pop
push
mov
sub
pop
xchg
sub
stc
mov
rcr
sbb
gs
dec
retf
gs
jmp
adc
sar
mov
cmp
fwait
shl
pop
lock
lea
mov
xchg
mov
(bad)
cmp
inc
iret
adc
xor
adc
fdivr
frstor
adc
xchg
add
mov
sub
push
jbe
mov
cmps
jb
inc
test
mov
xchg
dec
iret
dec
jmp
pop
or
aaa
lods
inc
retf
clc
fwait
lock
jmp
outs
add
sub
mov
mov
lds
imul
leave
and
add
lods
lock
inc
mov
add
add
jl
push
stos
mov
fsub
sbb
lock
loopne
in
jnp
cs
dec
xor
or
push
scas
dec
push
call
mov
or
popf
inc
aas
int
cwde
inc
mov
mov
dec
bound
rol
or
adc
jne
pop
retf
push
icebp
sub
xor
xchg
call
push
mov
jno
shl
out
and
and
hlt
lock
pusha
ret
fisubr
sahf
xchg
sbb
(bad)
xchg
cli
iret
mov
out
mov
cmps
lods
push
mov
test
pop
inc
xchg
xchg
pop
std
adc
sub
xchg
pusha
les
rcr
pop
sub
jne
adc
push
or
dec
dec
or
mov
sub
dec
xor
iret
(bad)
cmc
sbb
jno
cmp
icebp
push
mov
dec
xchg
pushf
push
push
xchg
scas
jl
mov
mov
add
leave
cdq
add
retf
(bad)
in
xor
aad
inc
(bad)
out
dec
int
test
stos
fnstcw
jnp
in
mov
push
pop
gs
movs
movlps
mov
dec
cmp
push
cmc
ss
fs
push
lock
xor
es
(bad)
mov
sub
loope
js
mov
cld
retf
or
push
adc
jbe
cmc
cmp
and
imul
sub
dec
jns
pop
mov
dec
jns
or
fadd
cmp
cmc
rcl
inc
into
leave
(bad)
popf
fadd
pop
sbb
or
fidiv
pop
cmp
or
xchg
adc
xor
mov
mov
fwait
mov
int
adc
add
mov
leave
cli
mov
xchg
stos
hlt
dec
neg
mov
lea
outs
sub
dec
mov
push
cmp
adc
(bad)
call
scas
scas
sub
adc
pop
lods
push
(bad)
out
hlt
daa
mov
adc
push
das
loopne
pop
mov
mov
sub
lahf
mov
xchg
xlat
or
popf
test
push
es
inc
ret
fs
mov
jno
data16
btc
jmp
jg
cmp
in
mov
and
imul
xor
shr
inc
inc
fldcw
push
jno
(bad)
shl
pop
or
xor
out
jb
xchg
and
outs
ins
jl
pop
jecxz
mov
ja
ss
or
imul
jbe
push
test
mov
jns
add
(bad)
lods
es
jno
in
or
(bad)
(bad)
lods
dec
or
jle
mov
popf
xchg
imul
daa
fld
jge
mov
cmp
push
ror
or
retf
out
push
dec
push
movs
out
mov
das
xchg
mov
or
lods
fwait
ins
adc
push
xor
bound
inc
test
int3
mov
movs
cmp
cli
sahf
sar
test
fnstcw
gs
jb
pop
div
push
ror
cmps
outs
mov
addr16
dec
pop
cmp
inc
fnop
pop
dec
cmp
clc
scas
push
inc
pushf
mov
lea
stos
sub
jg
jmp
(bad)
ja
aas
xchg
push
nop
loop
iret
and
dec
push
add
popa
movs
or
mov
xor
xchg
mov
arpl
movs
pop
xchg
or
jecxz
in
xor
cwde
call
std
xchg
mov
xor
and
shl
test
jmp
mov
push
dec
arpl
(bad)
cmp
lea
push
inc
push
and
jb
mov
stos
pop
cmp
cmp
push
pop
sbb
push
sub
sbb
adc
jb
outs
pop
push
or
mov
pop
xor
data16
ret
hlt
mov
pop
dec
inc
and
es
xchg
mov
nop
shl
xchg
les
(bad)
mov
ss
sahf
mov
dec
fstp
retf
pop
xchg
dec
fcomp
stc
mov
cmp
rcl
fisubr
cdq
mov
sti
(bad)
pop
add
jp
xchg
jge
jnp
dec
jp
ds
repnz
into
push
pushf
adc
imul
jno
jmp
fstp
mov
cmp
push
jge
jbe
or
dec
or
fstp
xchg
cmp
add
xchg
in
repnz
add
jb
(bad)
dec
in
shl
mov
add
mov
fmul
sti
int
enter
fild
sbb
and
or
test
push
mov
fdivr
push
pop
pop
pop
pusha
xchg
imul
ret
push
pop
(bad)
jmp
sbb
fisubr
add
pop
add
inc
cli
iret
jno
out
mov
iret
add
mul
je
ja
cmp
inc
push
repnz
loopne
add
enter
fstp
daa
stos
call
shl
mov
pop
outs
jns
xchg
xor
cli
or
inc
adc
sub
xor
ins
enter
push
or
push
into
int3
inc
inc
dec
jge
call
jmp
sbb
pusha
dec
out
out
pop
cwde
push
mov
and
lods
fdiv
xor
cmp
leave
out
or
mov
xor
in
mov
xchg
retf
sar
sbb
push
loop
jge
les
or
in
imul
push
cs
cs
cmp
ins
fs
dec
mov
jnp
in
lock
dec
xchg
mov
test
jnp
lea
(bad)
mov
(bad)
mov
push
cmp
inc
in
adc
js
xlat
nop
test
inc
rcr
push
jmp
popa
xor
jb
iret
add
jnp
popa
mov
scas
jo
xchg
icebp
inc
pop
jmp
out
mov
inc
pop
mov
pop
cmp
cmp
or
leave
push
inc
aaa
push
dec
jp
xchg
sub
and
adc
fdiv
push
cli
cli
adc
and
fld
dec
and
aad
(bad)
add
(bad)
div
(bad)
bound
pop
pop
(bad)
imul
adc
push
cs
inc
jmp
xchg
sub
loope
cmc
jmp
and
shr
arpl
lock
xchg
or
clc
sbb
sub
(bad)
add
repnz
jle
jae
(bad)
push
sti
(bad)
jle
cmps
jo
jns
sbb
sub
into
push
pushf
pop
call
scas
sti
push
jnp
out
pop
mov
sti
cmps
fwait
mov
mov
(bad)
shl
imul
dec
adc
adc
xchg
mov
mov
movs
mov
mov
pop
mov
mov
dec
dec
int
int
fst
mov
out
or
jnp
xlat
cmps
add
mov
test
pop
shl
in
pop
fwait
add
cli
arpl
adc
pop
mov
lods
jne
cmp
movs
pushf
xchg
daa
aaa
movs
inc
inc
add
and
mov
or
imul
add
aam
fwait
popf
xor
dec
push
xchg
mov
(bad)
std
adc
pop
stc
jge
mov
sub
test
xchg
stc
pusha
loop
mov
rcr
shl
fs
fidiv
scas
adc
sbb
(bad)
mov
mov
cmp
sbb
popa
out
push
cld
mov
adc
or
loope
rcr
sbb
cmp
loope
iret
hlt
pop
sti
test
xor
adc
(bad)
cld
lods
pop
sbb
fwait
add
aas
jnp
lds
adc
dec
or
inc
xlat
cmp
in
or
movs
sbb
and
aam
sbb
jns
sub
push
(bad)
dec
mov
fidivr
mov
out
movs
scas
in
sub
enter
cmp
or
test
cdq
cs
test
sbb
icebp
inc
shl
xchg
jnp
outs
mov
pop
pop
aas
xchg
(bad)
hlt
rcr
hlt
sub
leave
add
movs
dec
xchg
jae
(bad)
imul
bound
das
ja
xor
pop
add
or
sbb
cmp
push
stos
add
sbb
sbb
lods
nop
sbb
test
inc
outs
movs
cmps
xlat
lock
(bad)
mov
push
xlat
inc
pusha
fcom
ror
sbb
std
xchg
int3
cs
int
add
cmp
shl
adc
fld
jge
xor
cwde
sub
add
xchg
ss
rol
push
jge
in
test
jne
daa
fisub
or
sub
jmp
in
jb
jle
out
ins
xlat
call
mov
sahf
or
cmps
push
hlt
mov
mov
jbe
lds
xor
out
push
clc
jl
fs
mov
jmp
mov
dec
add
into
or
mov
or
add
das
cs
clc
or
pop
int
mov
push
sahf
mov
out
pop
mov
adc
(bad)
sahf
mov
inc
in
and
mov
ficomp
pop
push
(bad)
mov
xchg
mov
mov
pop
xor
jg
hlt
nop
leave
xor
xchg
push
(bad)
aad
das
loopne
pop
push
xchg
ret
mov
aaa
js
fild
mov
sti
pop
aas
shr
jno
cmps
pop
call
rol
push
inc
outs
aas
int3
mov
fs
add
mov
adc
loopne
xchg
mov
jb
fs
mov
pop
dec
aaa
es
pop
jae
stc
scas
add
in
xor
fsubrp
xor
out
and
ret
(bad)
test
fisub
cmp
out
hlt
pushf
(bad)
mov
dec
or
scas
mov
push
not
sub
rol
retf
xor
cs
mov
scas
fild
addr16
(bad)
jg
call
fcom
sub
enter
pop
cmp
out
dec
pusha
push
pop
jbe
lds
test
sbb
jecxz
or
std
push
hlt
add
inc
xor
loope
cmp
mov
and
mov
in
movs
xor
push
add
xchg
jp
test
sub
jg
inc
xchg
popf
push
lds
arpl
repnz
je
xor
mov
sahf
pop
daa
mov
pop
dec
mov
aaa
daa
(bad)
addr16
loop
in
pushf
mov
mov
sbb
call
or
jmp
je
test
or
fcom
mov
pop
in
adc
add
dec
(bad)
jae
hlt
sub
lahf
mov
pop
inc
mov
loopne
adc
and
(bad)
aam
xchg
jg
into
mov
pusha
cmp
aas
push
fisub
(bad)
and
outs
test
div
hlt
jge
outs
loopne
cmps
jno
cld
call
addr16
jecxz
mov
and
inc
sahf
push
dec
xor
jge
lock
test
mov
icebp
in
enter
xchg
adc
xlat
pop
fdiv
push
xor
fisttp
cmp
dec
pop
cmp
out
lods
xchg
cwde
dec
inc
jle
in
jae
xchg
cwde
pop
std
call
mov
add
mov
and
ss
jbe
inc
pop
mov
test
inc
push
inc
add
xor
std
fwait
adc
dec
pop
pop
add
mov
retf
mov
cld
shr
ins
xchg
stos
sub
pop
aas
not
and
pop
xor
call
or
mov
repz
shl
push
xor
fcomp
or
dec
xchg
inc
mov
aas
pop
and
jg
push
adc
stos
retf
and
adc
or
scas
inc
popf
add
call
xor
adc
inc
jg
dec
bound
fild
cmc
aas
pop
push
aas
rol
xor
and
xor
and
xchg
pop
mov
repnz
jle
rcl
fs
pop
or
dec
jmp
sub
(bad)
repnz
mov
adc
mov
pop
cmc
and
ror
mov
fmul
push
mov
push
sub
mov
and
xchg
enter
cdq
dec
popa
pop
sar
adc
or
pop
xchg
inc
add
fcmovne
iret
in
or
inc
in
xchg
jge
push
lea
inc
jmp
mov
je
test
(bad)
js
add
in
stos
add
rcr
pop
iret
in
adc
leave
push
je
out
sub
mov
aas
xchg
scas
pushf
or
sub
add
jmp
inc
jmp
mov
pop
cmp
sub
inc
icebp
jl
fsub
scas
arpl
jl
aaa
adc
mov
fiadd
iret
sub
sti
sbb
mov
inc
scas
push
cmp
pop
gs
sbb
pop
(bad)
test
cmp
mov
mov
sbb
ds
data16
add
and
jge
test
dec
jl
enter
fnstcw
popf
jb
js
mov
mov
mov
in
sbb
cmp
inc
pushf
stos
mov
jbe
push
and
retf
retf
push
add
jge
push
mov
dec
add
or
push
jle
pop
cmps
fmul
inc
or
cmp
inc
push
and
addr16
fistp
pop
xchg
jl
and
or
mul
jo
gs
xlat
arpl
jne
mov
pushf
adc
push
out
push
fyl2x
jp
icebp
jge
scas
imul
cmp
clc
enter
stos
dec
in
(bad)
icebp
xor
adc
mov
ret
bound
(bad)
jge
mov
popf
dec
dec
lea
sub
loopne
push
adc
call
sub
inc
jge
cli
dec
pushf
popa
xlat
(bad)
ins
push
xor
data16
popa
scas
inc
lds
jmp
ror
call
pop
imul
scas
push
(bad)
(bad)
xor
(bad)
std
adc
xor
repz
mov
jle
ss
pop
add
xchg
imul
sbb
cmps
pop
push
je
mov
jmp
call
mov
adc
aad
add
fs
test
jp
dec
mov
addr16
test
lods
mov
in
mov
cmps
or
cmps
dec
(bad)
xchg
sub
cmp
xchg
out
jbe
enter
mov
mov
ins
cmc
pop
xor
adc
(bad)
js
loop
movs
pop
cmp
clc
jbe
lahf
push
xlat
pop
sub
pop
pop
fwait
je
je
cs
jge
rcr
xchg
pop
and
jmp
pusha
dec
push
arpl
cmp
scas
enter
sub
sbb
push
pushf
mov
dec
sbb
adc
add
sbb
paddw
push
mov
call
xchg
mov
xchg
xor
mov
sub
sbb
xchg
cdq
xchg
cmp
mov
rcr
loop
pop
aam
xchg
cmp
push
xor
imul
dec
mov
inc
cwde
cmps
dec
adc
sub
pop
inc
or
push
in
cmps
aaa
movs
sub
or
loop
push
enter
xchg
pop
push
cs
loopne
(bad)
xor
iret
mov
add
add
or
lds
cmp
jmp
adc
sti
xor
xchg
stos
sub
adc
imul
jnp
push
add
and
lods
not
and
lods
add
push
sub
fistp
gs
lods
push
in
sub
pop
scas
iret
test
data16
push
xchg
les
imul
push
lds
jecxz
cmp
and
add
test
xchg
loopne
sar
cmps
mul
ret
jne
cmp
pop
sbb
cmc
inc
or
mov
jp
adc
ja
rcr
popa
mov
(bad)
sti
gs
aam
cmp
loope
push
mov
cld
xor
cmp
loopne
push
dec
xchg
dec
mov
inc
aaa
rcl
mov
adc
ja
call
in
inc
push
dec
or
adc
adc
sub
fstp
pop
push
push
sub
sub
(bad)
in
retf
rol
dec
(bad)
jge
stos
cmc
add
ins
rol
add
movs
fldcw
enter
pushw
mov
clc
sbb
sub
pop
test
adc
mov
arpl
loopne
in
mov
sub
int3
push
ja
push
int
punpcklbw
cmps
xchg
cwde
push
pop
aam
mov
inc
add
xchg
retf
mov
push
push
jp
cmc
leave
mov
mov
push
ret
and
rol
mov
std
aad
dec
sub
mov
jle
aas
pop
daa
add
(bad)
mov
sar
clc
in
or
gs
icebp
add
mov
adc
jo
mov
mov
ret
xchg
into
(bad)
xor
add
xchg
test
fstp
xchg
jo
pusha
ss
mov
push
fdiv
shl
mov
not
retf
cmp
movs
jne
add
sbb
pop
adc
push
fiadd
mov
aad
cmp
pop
xor
push
add
scas
mov
mov
cwde
cmp
jp
cmovnp
jae
cmp
mov
cmp
out
fstp
xor
es
xchg
(bad)
sub
icebp
mov
jmp
push
fs
mov
xchg
sbb
cdq
cmp
mov
adc
int3
jmp
adc
sbb
mul
jo
cmp
cmp
rcl
xchg
(bad)
mov
inc
movs
push
int3
mov
adc
push
sbb
leave
mov
xchg
pop
retf
jp
lds
mov
sti
jl
in
jl
add
std
(bad)
icebp
sub
test
xrelease
lods
cli
les
iret
xchg
add
int3
push
jle
sti
dec
sar
dec
fst
gs
mov
add
adc
mov
xor
jae
jbe
jno
adc
sub
lock
movs
sub
sbb
mov
jp
add
and
jp
inc
or
jmp
xchg
lds
cmp
sbb
pop
xor
dec
adc
out
repz
repz
xchg
inc
and
dec
loop
jge
je
in
enter
addr16
jg
ds
or
in
mov
sbb
outs
in
imul
mov
iret
fcom
xchg
mov
arpl
jp
mov
scas
pushf
ret
sub
xchg
mov
mov
loop
enter
imul
sbb
ror
mov
dec
(bad)
int3
pushf
test
cmp
and
or
stos
test
add
push
xchg
daa
in
ins
cmc
movs
(bad)
inc
sbb
ins
test
retf
leave
add
loope
cwde
in
mov
pop
and
dec
sbb
icebp
push
xor
sbb
jg
mov
rcr
icebp
mov
mov
and
mov
xor
adc
add
and
sub
lds
movs
in
hlt
push
call
scas
das
cmp
mov
mov
loop
add
ret
inc
sbb
loop
nop
into
dec
or
int
dec
cwde
dec
push
mov
aaa
ret
out
aam
cmp
cmc
fmul
shr
(bad)
push
cmps
cli
leave
clc
lds
push
jmp
es
fwait
push
adc
adc
adc
fisub
pop
popf
jmp
out
(bad)
into
outs
xchg
mov
xchg
imul
jl
stc
cmc
push
xlat
in
mov
mov
jo
adc
push
(bad)
mov
mov
mov
cmp
test
cmps
adc
jne
imul
push
loopne
cmps
adc
icebp
outs
cld
mov
mov
jns
mov
fs
ja
dec
sbb
add
push
iret
mov
dec
js
or
sahf
pop
jmp
aaa
cmps
or
mov
outs
out
push
rol
sbb
xor
jmp
pop
rcl
stc
(bad)
mov
das
jb
dec
pop
stos
and
(bad)
shr
mov
enter
retf
arpl
add
popa
or
pop
(bad)
outs
pop
push
retf
cmp
dec
(bad)
ss
in
pop
addr16
xor
xchg
mov
ins
xor
add
dec
and
int
mov
test
xchg
iret
clc
and
xchg
and
inc
jmp
inc
push
test
gs
fdivr
das
scas
mov
aaa
push
(bad)
jg
shl
xchg
push
mov
jl
out
lds
rcr
pop
jae
outs
rol
ret
xchg
pop
or
clc
sub
mov
mov
aam
pushf
movs
fadd
or
cmp
sub
sbb
adc
and
ficomp
addr16
mov
push
add
jecxz
push
in
mov
push
retf
sbb
xor
(bad)
cmp
aas
mov
add
fcmovne
dec
mov
cmps
xor
call
push
jns
lock
test
sbb
xor
add
(bad)
dec
sahf
mov
inc
inc
mov
dec
xchg
push
xchg
sub
push
sub
dec
adc
pushf
sub
pop
test
int
(bad)
or
mov
pop
mov
leave
mov
test
sbb
test
aam
push
mov
pushf
loop
scas
sbb
std
aas
xchg
push
scas
scas
les
mov
iret
addr16
or
lods
ds
xor
movs
adc
ss
ins
jge
call
retf
imul
cmp
adc
pop
or
loope
das
clc
shl
aad
mul
popa
xor
mov
loop
ret
or
(bad)
xor
cmp
mov
mov
cmp
mov
add
fimul
cmps
and
xchg
add
imul
jl
xor
stos
pop
sub
mov
ins
jle
lahf
cmp
ficom
jge
ret
pop
aas
xor
cmps
adc
(bad)
cmp
adc
mov
cmps
inc
cmps
fbstp
aam
pop
mov
sub
loop
loop
cmps
jp
sub
das
paddusw
(bad)
daa
cmc
rcl
ins
sbb
rol
sub
addr16
es
shl
xor
dec
ins
or
sahf
movs
jmp
jg
push
lods
je
shl
loop
out
in
mov
(bad)
icebp
jno
(bad)
sahf
aaa
je
mov
add
mov
cmp
jnp
jecxz
pop
cmps
fnstcw
mul
sar
pop
cmps
cmp
imul
data16
add
scas
mov
and
sti
(bad)
enter
pop
sbb
pop
call
jge
jmp
adc
(bad)
mov
adc
retf
ds
mov
jmp
pop
loopne
cmp
stc
das
adc
pop
lock
test
pop
jns
fidivr
aam
pop
je
push
popa
mov
jns
inc
mov
jns
sti
js
add
xchg
aaa
imul
xchg
ins
mov
lds
mov
dec
je
je
inc
js
mov
or
sbb
cli
sahf
das
xchg
imul
dec
aam
retf
xor
cli
ss
dec
repz
mov
(bad)
cs
cmps
imul
jle
xor
xchg
push
dec
push
push
outs
dec
(bad)
retf
leave
mov
add
cmc
push
cmc
xchg
js
popa
xor
test
mov
sub
inc
mul
cmp
adc
mov
mov
cmp
mov
cmps
jl
jbe
mov
mov
jl
inc
ins
ins
into
xor
(bad)
sti
inc
enter
push
cs
push
jne
push
pop
das
add
mov
jbe
fbld
push
adc
cmc
jne
mov
jle
jl
inc
mov
in
sub
sti
test
inc
pop
xchg
mov
ins
dec
movs
sbb
add
jp
lock
xchg
das
in
daa
inc
nop
scas
fcomp
call
push
push
mov
ror
cmps
cmp
je
cwde
mov
xchg
je
cmp
iret
cmp
test
inc
retf
xchg
or
sub
out
and
mov
mov
pop
punpckhbw
jmp
xor
fs
leave
push
jl
push
add
mov
addr16
xchg
push
int
mov
lea
xlat
inc
sub
daa
add
pop
(bad)
mov
cmc
aaa
lahf
add
xchg
xchg
jmp
sub
fwait
mov
cli
cmps
cmps
push
pop
add
and
dec
sub
and
and
aad
jns
(bad)
je
mov
cmp
dec
loopne
enter
stc
dec
mov
in
mov
inc
mov
clc
mov
push
jne
mov
adc
add
mov
mov
shr
fdivr
mov
xchg
aam
data16
mov
std
push
mov
(bad)
fcmovne
loope
outs
scas
cmp
pop
add
fnsave
dec
out
icebp
mov
rol
inc
inc
es
jmp
pop
xchg
ficomp
pop
xor
ins
cmp
paddusw
aad
mov
or
enter
push
outs
mov
jns
js
test
ss
sub
(bad)
stc
sbb
(bad)
and
in
popf
(bad)
fist
add
nop
sub
scas
(bad)
fcom
add
inc
or
push
xlat
inc
outs
fs
into
xchg
push
push
sub
push
fidiv
jmp
je
xchg
lods
les
pop
xchg
adc
sbb
mov
sbb
adc
stos
stos
out
imul
pop
mov
cmp
cmp
xchg
data16
pop
(bad)
dec
pop
and
xchg
dec
ins
mov
inc
mov
mov
(bad)
cmp
pusha
int3
adc
das
push
push
sub
pop
in
sub
cli
pop
push
pop
xchg
scas
add
shr
sub
xor
add
xor
push
mov
shl
mov
adc
(bad)
nop
xor
leave
inc
jmp
mov
jno
inc
xchg
fdivr
pop
inc
js
add
in
push
dec
sub
hlt
xor
pop
leave
fs
push
mov
call
je
fistp
fadd
ror
pop
lock
and
xor
into
mov
ror
retf
cmp
shl
cmp
dec
out
in
push
pop
dec
leave
movs
push
in
aam
add
(bad)
vprotq
test
ins
stc
popa
loop
in
das
add
fsubr
inc
in
jbe
mov
fs
xlat
icebp
popa
adc
cmp
push
sti
sub
in
xchg
fs
sub
jmp
arpl
jg
sbb
fisub
imul
dec
mov
dec
lock
into
dec
xchg
in
pop
push
cld
push
mov
dec
adc
ds
loopne
outs
xchg
mov
call
jne
pop
add
test
mov
lock
int
push
or
(bad)
(bad)
jecxz
add
dec
data16
rol
inc
inc
hlt
jge
lahf
in
vorpd
lea
iret
sub
jnp
pop
mov
popa
icebp
lahf
call
int
movs
scas
mov
pop
and
adc
jae
daa
jns
jg
hlt
pushf
mov
idiv
add
movs
xchg
jne
and
inc
out
sbb
push
aaa
and
add
aam
cli
test
cmps
add
outs
aam
push
cmp
ror
add
or
cmps
aam
inc
js
mov
scas
cmp
arpl
retf
call
loop
mov
mov
sub
mov
clc
mov
jl
xchg
mov
jge
add
jno
lods
and
call
ss
sbb
pop
add
test
and
scas
scas
(bad)
mov
or
repnz
imul
push
sahf
add
jno
cmp
sbb
icebp
aaa
loopne
popa
or
or
popa
mov
mov
mov
xor
jb
dec
inc
outs
pop
sti
jns
dec
jbe
int3
sub
jae
shl
imul
enter
icebp
jp
jnp
cdq
loopne
sbb
xor
in
movs
dec
mov
stos
fild
ret
rol
mov
mov
cwde
jns
ret
mov
mov
jle
push
sub
clc
add
cmp
hlt
(bad)
sub
std
sbb
idiv
xor
aaa
mul
rcl
adc
outs
mov
or
jne
popa
xor
mov
xchg
pop
ins
call
int3
fidivr
shr
mov
add
mov
pop
aad
aad
ins
or
mov
out
and
and
out
push
xchg
(bad)
lock
int3
daa
stc
ins
lfs
movs
pop
xchg
pop
dec
push
mov
sbb
cmc
sar
call
mov
mov
scas
adc
push
enter
pop
outs
rol
and
push
or
push
loopne
arpl
dec
gs
push
ror
add
aaa
popf
stos
sbb
fs
jb
outs
daa
mov
jae
call
cmp
push
sub
aas
fwait
xchg
push
out
or
jae
jmp
in
outs
pop
xor
jmp
sbb
jecxz
cmp
adc
bound
jle
cdq
mov
xor
cmp
push
loopne
aaa
cmps
add
sbb
stc
pop
push
mov
or
mov
mov
fisttp
test
pop
js
in
loop
outs
ret
int
scas
inc
hlt
and
out
pop
mov
mov
pop
adc
retf
adc
pop
mov
sub
xchg
pop
mov
push
xchg
push
sub
or
mov
fwait
pop
sbb
loopne
outs
adc
rcr
jecxz
hlt
sar
jno
ret
mov
cmp
push
inc
cdq
je
bound
test
xor
mul
imul
ret
push
mov
jle
(bad)
int3
adc
pop
adc
jbe
test
sbb
or
and
daa
inc
dec
inc
pop
test
ret
sub
hlt
ja
jecxz
add
and
pop
push
(bad)
fnstcw
mov
ficom
xchg
lods
cmp
adc
iret
inc
mov
jp
addr16
xchg
mov
push
cmp
(bad)
call
loopne
int
(bad)
popf
lea
pushf
movs
cmp
fxch
jns
push
getsec
imul
movs
call
fmul
dec
scas
jb
xchg
sub
mov
mov
jmp
sbb
xchg
push
loopne
ret
dec
mov
inc
xor
rcr
std
(bad)
imul
out
lea
mov
mov
test
test
push
outs
lds
pushf
inc
sbb
call
iret
das
das
sahf
leave
sub
push
cmp
mov
outs
pop
and
push
lahf
mov
arpl
jl
repz
shl
push
mov
dec
mov
or
or
jmp
sbb
mov
sbb
in
aad
les
(bad)
dec
mov
call
jmp
mov
sub
scas
int3
dec
sub
xchg
xchg
iret
jecxz
push
cmp
es
push
lods
imul
push
mov
(bad)
and
and
(bad)
jb
cmp
push
movs
inc
popa
int
adc
mov
out
shl
cdq
sti
inc
fmul
jae
hlt
mov
jns
or
addr16
aaa
adc
js
mov
pop
fwait
gs
in
loopne
jp
mov
icebp
jmp
repnz
push
pop
push
mov
mov
js
jae
push
sbb
mov
mov
sub
nop
adc
in
jmp
cs
neg
cdq
stos
(bad)
lock
imul
jecxz
ja
ins
and
cld
add
(bad)
(bad)
stc
xlat
call
jmp
imul
outs
xor
lea
push
cmp
jge
(bad)
into
ds
push
inc
xor
xor
out
mov
les
mov
cld
cmc
(bad)
enter
outs
xchg
inc
mov
in
push
or
int
dec
shr
xchg
push
jecxz
adc
or
icebp
cmovb
enter
test
popa
(bad)
frstor
mov
or
enter
pop
movs
sbb
stos
sbb
pop
add
xchg
leave
push
or
jge
aad
mov
not
mov
mov
cmps
mov
stc
add
mov
bound
jno
mul
ficomp
xchg
(bad)
mov
xchg
loop
shl
jg
push
fdivp
icebp
add
in
js
ror
dec
retf
and
scas
aaa
rcr
adc
(bad)
int3
jbe
into
clc
add
xor
data16
jnp
jns
push
scas
les
dec
dec
add
xchg
test
or
data16
scas
xchg
retf
ins
push
inc
xor
(bad)
mov
add
mov
fisubr
jg
and
cmp
ins
stos
test
add
sar
scas
fwait
cli
add
mov
(bad)
cdq
jge
mov
loope
xchg
mov
and
mov
pushf
push
xchg
hlt
inc
fld
xor
cmps
std
outs
cmp
mov
lea
mov
lods
jp
ret
loope
call
out
pop
push
mov
movs
mov
jmp
jnp
or
fs
popa
adc
test
dec
or
mov
stos
loope
and
test
fiadd
movs
lock
xor
add
sti
popf
or
repnz
xchg
adc
pop
pop
gs
xor
and
int3
sub
adc
xor
out
fsubr
cmp
std
mov
jns
les
adc
sbb
pop
xchg
push
and
and
fstp
out
fs
cmp
mov
mov
jp
rcr
mov
out
(bad)
sub
test
nop
ss
mov
lods
add
cmp
xor
lods
arpl
out
test
jns
dec
xor
inc
adc
jge
mov
in
fsub
pop
gs
jns
cld
fs
adc
sub
dec
dec
xchg
cwde
pop
mov
xchg
div
icebp
call
cmp
push
popa
and
sbb
sbb
daa
ret
adc
sub
xchg
pop
aam
test
or
loopne
test
inc
jns
jmp
push
cmp
adc
push
scas
sbb
jne
dec
jo
mov
call
(bad)
loopne
dec
pop
inc
pop
mov
test
div
mov
out
pop
mov
movs
jns
out
xchg
bound
movs
mov
in
movs
gs
cmps
mov
push
out
push
and
dec
lea
inc
lods
adc
aad
or
dec
inc
int3
add
dec
mov
or
cli
ins
rcr
sbb
in
loopne
in
ss
sbb
cmp
dec
stos
sbb
data16
retf
iret
outs
pop
jmp
and
pop
(bad)
mov
jge
sbb
xchg
adc
dec
jecxz
xchg
push
cmps
dec
les
pop
stc
sar
mov
repz
xchg
setp
sub
jl
jle
sub
retf
or
and
xor
jmp
adc
(bad)
cmp
mov
pushf
nop
mov
xlat
jmp
lahf
jmp
mov
jp
not
int3
jns
movs
rcl
xchg
sbb
pop
jnp
ins
aas
or
test
pop
(bad)
mov
push
int3
clc
test
adc
inc
or
mov
cmp
lods
xor
ins
sti
fisubr
xchg
sar
cwde
call
mov
mov
xchg
inc
test
jmp
int3
ins
in
icebp
das
lds
pop
cmp
clc
lds
cmps
mov
(bad)
sbb
push
and
cmp
cmps
retf
mov
jae
sbb
fisub
jecxz
int3
dec
inc
icebp
cmp
rcr
xchg
jmp
or
outs
(bad)
fld
js
lock
call
pop
sbb
add
pop
cmp
stos
fnsave
fist
pop
sbb
adc
sbb
outs
inc
sbb
sar
fstp
inc
mov
arpl
add
adc
loope
sahf
push
ja
sub
mov
push
mov
cwde
aaa
push
pop
pop
aaa
add
cmp
arpl
jecxz
test
fs
rcl
mov
sub
(bad)
mov
jl
push
fcmovb
shl
jnp
xchg
dec
dec
pop
sahf
xor
retf
enter
data16
jmp
icebp
inc
cmps
sbb
cmps
push
add
dec
scas
in
inc
sbb
ins
push
pop
call
ror
lods
mov
add
pop
aad
and
mov
mov
push
call
fldcw
inc
adc
icebp
sti
xor
cmp
lods
stc
mov
in
add
(bad)
lahf
cmps
fs
mov
test
ror
jmp
adc
cmp
pop
sbb
mov
cmp
mov
pop
retf
jle
dec
outs
cs
push
adc
daa
push
push
and
sti
jns
call
and
ins
xor
add
out
xchg
mov
push
arpl
xchg
cmp
std
jno
movs
push
mov
ja
pusha
dec
dec
mov
mov
mov
inc
xor
mov
pop
call
lods
lock
adc
(bad)
cmps
xchg
jmp
push
shl
mov
fimul
mov
push
sbb
test
sub
je
xchg
lahf
(bad)
dec
mov
dec
in
ins
push
(bad)
dec
and
pop
or
push
or
dec
dec
jp
mov
jp
inc
xchg
adc
cdq
and
lahf
lds
xchg
(bad)
xor
test
inc
jge
mov
jmp
or
pop
cmc
mov
popf
daa
sete
or
xor
jmp
mov
lds
mov
adc
xor
cli
xchg
jns
push
push
rcr
(bad)
loope
jge
cmp
sbb
(bad)
pop
sub
loop
pop
cs
adc
cmc
pop
lds
pop
push
cmp
mov
xchg
xchg
xor
sbb
or
jns
ins
mov
fs
rol
int
out
das
repnz
and
pop
xor
(bad)
sbb
nop
fs
fcomp
xlat
arpl
jae
mov
cwde
dec
add
cmps
enter
popa
cs
xlat
bound
xchg
lahf
xchg
xchg
jecxz
aaa
fstp
mov
and
loope
cmp
lahf
mov
clc
jg
push
loop
sbb
pop
ins
ins
pop
push
repz
adc
xor
jle
or
cld
lods
mov
(bad)
mov
mov
invd
popa
dec
aas
mov
mov
cmp
hlt
ins
jge
shl
pop
cmps
or
adc
out
jns
xor
or
xchg
dec
xor
xchg
cs
lea
pop
adc
cmp
xor
mov
mov
push
ins
test
cmp
adc
xchg
mov
cmp
sub
jno
ret
movs
call
cmp
std
out
pop
inc
jle
ins
sub
sbb
jmp
int3
jle
push
in
mov
add
stos
fld
mov
out
dec
push
dec
cmp
mov
push
jmp
lock
stos
fistp
and
lahf
push
jbe
mov
pusha
adc
mov
test
mov
dec
xor
call
arpl
psubusb
mov
pushf
inc
xor
jl
std
sub
dec
repz
mov
call
jb
dec
pop
scas
jp
enter
leave
shr
into
xor
enter
rcr
sbb
ins
cmp
ins
and
xor
ret
data16
mov
mov
or
test
cmp
push
fist
loopne
int
inc
in
pop
push
xor
dec
inc
in
mov
pop
cmp
mov
push
mov
test
stos
mov
(bad)
outs
push
mov
dec
or
gs
in
pop
mov
ss
or
std
fisubr
scas
push
cmps
add
mov
inc
dec
das
std
xchg
mov
jmp
loop
movs
and
loopne
scas
test
adc
sub
jb
dec
sti
dec
xchg
mov
jne
jns
jmp
aas
int
in
pop
pop
ror
jo
stos
imul
pop
push
iret
loope
fidivr
jl
or
(bad)
adc
ja
inc
std
cmc
(bad)
retf
aam
and
pop
jne
cmps
test
push
out
lods
fistp
dec
(bad)
mov
(bad)
jmp
rol
mov
call
dec
mov
push
push
push
sbb
or
xor
aad
inc
test
xchg
dec
leave
push
xchg
int3
sbb
outs
push
fsub
mov
jp
and
lea
mov
sub
ret
jmp
loopne
push
loope
sti
nop
ja
repz
jno
cmc
call
mov
jo
mov
jno
les
popa
vcvttpd2dq
pop
loopne
pop
cs
dec
aad
sbb
add
je
repnz
(bad)
xchg
or
cmc
mov
cwde
dec
in
shl
pop
scas
pop
inc
push
push
xchg
ret
and
cmp
retf
outs
push
scas
mov
pop
inc
jbe
out
cmp
popa
mov
rdpmc
movntq
out
aam
stos
xchg
push
pop
daa
xor
sbb
xlat
xor
sub
add
jge
lods
cli
loopne
movs
cmp
inc
into
cmp
out
push
jecxz
xchg
test
test
aas
gs
iret
mov
pop
mov
in
pop
xchg
cmp
xchg
push
js
arpl
gs
add
mov
sbb
sub
(bad)
add
imul
repnz
dec
fwait
sar
jmp
cmp
dec
aad
push
sbb
arpl
(bad)
mov
pop
and
xchg
inc
cmp
or
clc
repz
or
adc
jecxz
cmp
jp
sub
dec
loop
xor
mov
pop
cmp
sbb
push
mov
inc
loope
retf
pop
cs
inc
in
fst
pop
repnz
xor
dec
xor
mov
pop
adc
xchg
fwait
or
and
sahf
mov
sbb
inc
es
and
mov
mov
(bad)
push
or
(bad)
mov
(bad)
dec
enter
rol
add
sbb
sbb
test
xor
rcr
mov
mov
iret
fidiv
inc
pop
mov
in
push
jecxz
pop
(bad)
push
stc
jb
leave
test
ds
imul
jg
lahf
nop
xchg
or
nop
xchg
and
jmp
icebp
int3
out
mov
fadd
adc
aad
jnp
idiv
sti
cmp
jge
test
ror
dec
data16
and
mov
xchg
mov
fsub
stos
test
movs
push
fsub
mov
ins
(bad)
or
lock
dec
xchg
jg
cmps
lea
mov
cmovl
pop
lea
loopne
addr16
pop
dec
leave
inc
int
pop
xor
push
aad
xchg
popa
mov
and
add
nop
mov
leave
stc
stos
inc
imul
repnz
call
xor
ins
xchg
or
sahf
jno
adc
jg
loopne
add
mov
enter
pop
and
cmp
xchg
jp
test
pop
push
aad
lock
fucomip
adc
dec
out
movs
aaa
aad
in
mov
push
mov
out
fidiv
xchg
stos
das
adc
inc
mov
sub
cmp
xchg
fidiv
les
add
repnz
add
retf
push
lea
in
or
pop
bound
fld
xlat
mov
sub
aas
jnp
mov
sbb
mov
inc
sbb
xlat
cli
mov
push
int3
push
inc
(bad)
loope
mov
(bad)
mov
(bad)
sbb
push
adc
ret
fadd
ret
scas
add
movs
(bad)
std
repz
les
cli
add
(bad)
in
inc
pop
pusha
push
les
mov
(bad)
mov
jns
(bad)
loope
or
and
jl
out
(bad)
sbb
xchg
add
jae
push
lods
jbe
loope
or
in
shl
(bad)
inc
les
cld
aam
xlat
mov
mov
sti
ror
adc
(bad)
movs
sub
scas
inc
clc
sbb
xchg
mov
add
or
and
adc
jae
adc
in
cmp
sub
aas
(bad)
and
mov
stos
inc
cmp
hlt
icebp
les
out
mov
adc
push
inc
dec
xor
push
or
sub
test
adc
iret
sub
sub
sub
stc
in
and
loope
push
dec
fs
into
jmp
push
inc
xor
add
cmp
in
add
fild
jns
fs
mov
and
pop
(bad)
das
push
mov
xchg
test
push
rol
shr
ins
xlat
push
lahf
sub
out
mov
les
jb
cmps
mov
leave
enter
add
mov
sub
xchg
jno
mov
cmps
sbb
inc
lds
mov
je
xchg
lahf
xchg
in
fadd
or
xchg
nop
leave
out
jge
fst
jle
jecxz
adc
mov
mov
(bad)
enter
das
xchg
sub
out
jo
jns
push
jnp
mov
xchg
push
xor
inc
mov
and
shl
sbb
dec
jae
cdq
add
mov
std
mov
add
push
and
mov
ins
inc
leave
add
nop
push
jne
into
and
sti
inc
daa
mov
pop
outs
or
cmp
jbe
fldenv
sbb
push
add
div
xchg
test
cmps
or
lock
sbb
addr16
hlt
jnp
jno
int3
push
xchg
pop
or
jmp
adc
mov
bound
data16
call
fisub
xchg
cwde
dec
test
adc
jne
sbb
mov
ins
ins
dec
mov
call
or
sub
mov
add
xor
test
add
add
ins
fild
add
jle
xchg
jl
dec
push
aam
inc
inc
add
add
cwde
cmp
fadd
out
ja
dec
mov
cmp
loop
mov
shl
pushf
add
xchg
dec
int3
out
test
movs
adc
xchg
pushf
mov
retf
fs
cdq
das
xlat
ret
jns
jae
inc
add
js
xor
mov
js
(bad)
loopne
retf
sub
mov
xchg
mov
mov
fidiv
push
out
out
cs
mov
stos
popa
xor
retf
fnstcw
ret
mov
push
inc
inc
mov
gs
cmp
xor
dec
out
shl
and
inc
loope
push
cmp
inc
cmp
xchg
mov
(bad)
js
pop
rol
mov
push
push
les
jo
pop
imul
in
les
fldenv
mov
dec
adc
dec
sbb
std
loop
xor
push
dec
invd
pop
push
mov
in
retf
(bad)
pusha
adc
ror
iret
jl
ins
ja
cmp
outs
xor
jl
out
dec
dec
cmps
inc
test
adc
fisttp
cmp
in
push
pushw
sbb
fld
sub
mov
xchg
test
mov
dec
push
jecxz
fistp
mov
xor
fcom
or
inc
test
jae
push
pop
adc
dec
cmps
loopne
gs
into
fyl2x
loope
mov
das
xchg
sub
xor
repnz
mov
and
sub
jb
sub
mov
xor
dec
dec
mov
jg
mov
sbb
mov
sub
jne
daa
sub
je
jle
leave
cmps
pop
(bad)
jg
adc
xchg
sti
sbb
jmp
xor
fild
sbb
mov
mov
lea
sbb
ss
pusha
ret
jmp
and
push
xor
aad
sahf
and
add
xlat
retf
mov
int
popf
sub
dec
sub
movs
aaa
push
and
pop
cmp
mov
adc
xor
mov
rol
mov
mov
dec
push
cs
mov
or
ret
es
fcmovu
out
dec
mov
mov
sbb
sub
xor
leave
setnp
mov
dec
popa
cmps
loope
pop
movs
jno
test
dec
test
fmul
mov
(bad)
scas
fucomp
xchg
mov
xor
xor
xor
test
ins
mov
mov
mov
or
fs
call
test
fwait
imul
jae
and
xor
mov
dec
fisttp
lock
dec
dec
outs
(bad)
not
dec
push
or
add
pop
xchg
rcr
les
jmp
out
mov
enter
aad
les
into
(bad)
jg
xor
cmp
inc
sub
xor
daa
and
out
mov
xchg
loop
xor
cmps
push
in
mov
xor
mov
cmp
xchg
or
iret
xchg
ja
mov
jle
pusha
jo
push
repnz
cdq
xchg
cs
push
or
dec
and
jne
arpl
int
xlat
fldenv
xchg
shr
mov
popf
cmp
mov
jl
sbb
xchg
ins
xor
cmp
dec
test
repz
shl
jmp
push
xchg
adc
dec
dec
pop
inc
push
adc
jl
arpl
cmps
mov
mov
call
iret
out
mov
iret
repnz
cmps
mov
dec
(bad)
pop
lods
test
sbb
outs
fld
xor
sub
lods
call
leave
jo
ja
lods
gs
fisub
cs
push
addr16
mov
daa
pop
xchg
sub
ret
les
ds
mov
xor
sbb
js
pop
sbb
and
adc
add
xchg
xchg
jl
nop
pop
or
inc
sub
pushf
shl
movs
rol
push
jmp
mov
movs
shl
imul
mov
in
jecxz
fmul
pop
(bad)
rol
test
movs
add
adc
cmp
inc
jnp
fwait
mov
inc
jmp
mov
cmp
in
sub
repz
jmp
cmc
push
ret
icebp
lahf
adc
je
out
rcl
ss
pop
and
jae
sub
pusha
sar
leave
inc
jp
xchg
inc
jnp
retf
cmp
adc
push
test
mov
mov
xor
jb
push
ins
push
mov
js
ret
jmp
sahf
cld
mov
push
popa
(bad)
jle
cmp
dec
pop
sub
mov
test
sbb
pop
bound
sbb
retf
dec
push
sub
add
lods
mov
maxps
(bad)
ficom
pop
cdq
jb
push
mov
adc
call
les
jmp
test
jbe
imul
imul
dec
cmps
adc
xchg
add
xor
cmc
dec
and
pop
add
xor
je
dec
mov
pop
xor
aas
xor
push
add
cli
cmp
cvtps2pi
movs
inc
movs
pop
pop
mov
cmp
je
adc
scas
aas
cmps
inc
test
mov
sbb
scas
sbb
or
pop
mov
push
push
outs
daa
cwde
adc
mov
lods
xor
test
sub
bound
inc
push
sbb
mov
in
sbb
xor
and
mov
out
push
out
adc
mov
add
jp
sub
iret
inc
push
push
inc
loop
xchg
lods
movs
mov
push
aas
mov
(bad)
(bad)
icebp
mov
addr16
daa
add
loopne
and
cli
aad
push
movs
pop
mov
pop
fadd
movs
xor
inc
add
dec
mov
push
out
inc
sub
fisttp
movs
dec
ret
and
mov
jmp
dec
push
sub
daa
ret
sub
push
add
leave
ret
cwde
mov
xor
pop
pop
add
pop
add
inc
mov
mov
mov
hlt
pop
fwait
push
call
pop
(bad)
lock
ja
rcr
rcr
fdivr
sub
scas
sub
adc
dec
jmp
hlt
add
sub
pop
mov
jns
inc
fsubr
sub
xor
int3
inc
aaa
pop
mov
hlt
mov
sbb
add
sub
(bad)
in
out
and
sbb
cmp
and
dec
mov
je
or
mov
jecxz
mov
jmp
add
in
dec
movs
cdq
aad
leave
pop
inc
stos
dec
cld
sbb
out
in
aam
jge
inc
test
and
mov
mov
repnz
leave
jmp
rcr
mov
test
mov
jecxz
inc
mov
jmp
add
cwde
aam
(bad)
and
cmps
cmps
pop
push
leave
jle
pop
pushf
xor
mov
dec
stos
ret
retf
test
push
mov
mov
jg
push
push
add
jae
lods
xor
(bad)
rol
jnp
jmp
data16
cmp
jmp
cmps
push
mov
out
je
iret
pushf
rcr
adc
sar
mov
repnz
inc
mov
adc
shr
ds
ss
test
sbb
inc
fist
mov
ret
mov
cwde
mov
sub
dec
jmp
(bad)
(bad)
sbb
loopne
xor
sub
je
bound
sbb
stc
and
movs
(bad)
jb
push
cli
jecxz
cmp
inc
lods
pop
gs
mul
out
or
push
mov
scas
fst
fnstsw
xor
sahf
adc
call
add
mov
inc
jo
jle
outs
inc
adc
inc
push
xor
sbb
pop
mov
les
pop
imul
inc
xchg
jb
push
stos
xor
hlt
std
push
test
add
or
add
mov
fist
(bad)
(bad)
mov
stos
inc
jbe
cmps
arpl
jo
jmp
test
or
fldenv
cdq
adc
repz
call
icebp
mov
nop
sub
push
adc
mov
sub
cpuid
sub
cmp
(bad)
hlt
stos
aas
or
stos
cmp
iret
test
stos
mov
or
sbb
ret
cmp
jp
inc
mov
mov
adc
pop
call
js
call
mov
sub
cmp
jmp
in
mov
fldcw
mov
mov
repz
sar
xor
adc
stc
ins
out
ds
je
dec
inc
das
aaa
lea
or
inc
mov
sub
retf
sub
nop
shl
push
cmp
js
out
sub
cmc
sub
mov
mov
jg
lds
adc
std
xchg
push
mov
(bad)
jo
mov
pop
icebp
fmulp
outs
cmp
test
rol
dec
push
ror
xchg
dec
retf
and
cmps
add
loop
scas
adc
push
sub
xchg
inc
aad
stos
pop
cdq
int
je
or
mov
jnp
mov
inc
cmps
xchg
aad
jp
jo
fmul
sub
out
ins
cmp
lea
stos
fcmove
retf
jmp
mov
test
ins
fstp
and
pushf
xor
push
dec
int
cmp
outs
js
xor
ins
stos
lahf
dec
cmps
inc
call
aad
cmps
div
mov
fcomi
cwde
(bad)
sub
jle
es
test
xor
push
jecxz
stos
inc
add
dec
lea
imul
scas
(bad)
lods
dec
xchg
cdq
lock
or
daa
pop
loop
jno
jg
ins
gs
(bad)
lods
or
jno
cdq
inc
stos
mov
std
xlat
sub
push
add
sbb
push
loop
sbb
bound
mov
inc
dec
jg
mov
push
inc
sbb
sti
mov
mov
ficom
sbb
(bad)
dec
and
pop
push
retf
sbb
fcmovb
int
repnz
ins
jb
push
pop
mov
dec
push
ins
out
sbb
dec
dec
inc
ret
inc
sbb
cmc
popa
jg
scas
in
add
not
dec
push
dec
jo
stos
pop
leave
sub
inc
fst
sub
adc
popa
inc
cmc
sub
sbb
push
cmps
outs
shr
iret
sbb
pushf
pop
xchg
stos
adc
cmp
xchg
dec
push
lahf
mov
xor
es
mov
jmp
or
add
and
sar
adc
pop
xchg
jp
xor
sar
sbb
cmp
cmc
mov
push
pop
retfw
jnp
cmp
jg
fbstp
mov
cwde
mov
(bad)
das
mov
dec
pop
scas
leave
xchg
les
mov
push
(bad)
cmp
movs
mov
cli
cmp
adc
int
ret
cmp
pushf
adc
ds
fwait
inc
test
shr
mov
jmp
sbb
(bad)
call
jmp
xchg
cmp
les
mov
pop
retf
and
pop
jle
std
out
mov
(bad)
mov
stos
inc
mov
cmp
or
push
push
jle
rcr
(bad)
cmps
cmp
es
fistp
pusha
adc
cdq
sbb
mov
mov
mov
out
cmp
mov
ins
adc
and
les
mov
xchg
lock
mov
mov
or
daa
xor
retf
sbb
push
ret
jnp
sbb
popa
js
scas
cwde
jo
mov
in
fisub
push
pop
xor
or
push
cdq
icebp
loop
or
jmp
jmp
dec
sub
xchg
inc
sub
jle
mov
clc
sahf
or
mov
sti
sub
push
xchg
add
ret
icebp
or
(bad)
sub
inc
push
call
outs
int
sti
jns
fisttp
jp
add
pop
adc
jp
and
and
cmp
movs
sub
das
inc
pusha
punpcklwd
(bad)
imul
push
sbb
sub
les
xor
jb
aaa
shr
add
loop
inc
inc
mov
shr
jmp
add
add
dec
pop
inc
popf
mov
add
sub
sbb
fwait
pop
sub
jb
jae
mov
mov
into
or
mov
cmp
dec
mov
inc
scas
arpl
std
push
jp
test
mov
outs
push
fdivr
jmp
or
add
(bad)
repnz
mov
aaa
dec
fisub
push
xchg
das
rcl
pop
pop
pop
inc
aad
or
pop
push
(bad)
nop
div
or
sbb
sub
mov
int
xchg
repnz
arpl
outs
push
fs
or
mov
scas
test
adc
rol
shl
dec
xlat
mov
xchg
xchg
fcmovu
sbb
jbe
xor
mov
ss
lods
out
addr16
or
icebp
outs
inc
arpl
cmp
adc
sti
jne
sub
inc
jmp
mov
ror
xor
adc
cmp
xor
ja
push
lds
out
push
and
(bad)
sbb
mov
mov
or
mov
leave
addr16
xchg
push
not
out
clc
fisttp
adc
mov
stc
sub
movs
nop
loop
jle
daa
push
dec
mov
arpl
packssdw
dec
push
ss
shr
sub
out
mov
jmp
mov
sub
dec
xchg
sbb
mov
sub
push
in
inc
push
add
ds
pop
ret
jecxz
cs
sbb
loopne
scas
(bad)
les
add
pop
jno
shr
pop
mov
fild
dec
test
clc
fiadd
or
inc
cdq
in
lods
or
cli
popa
aas
push
jecxz
jns
sbb
or
out
or
es
movs
mov
mov
(bad)
addr16
fwait
das
imul
scas
and
repz
mov
xor
add
mov
retf
add
add
and
sbb
and
xchg
jne
jecxz
dec
ds
jecxz
or
inc
retf
repnz
div
stc
cmp
push
shl
cld
(bad)
in
dec
and
jbe
nop
or
sti
loopne
pop
lods
jmp
mov
cmc
aaa
aam
imul
add
sub
push
aaa
dec
stos
xlat
and
mov
adc
pop
aam
and
(bad)
imul
shl
cli
jmp
add
out
inc
pop
adc
mul
jne
not
pop
dec
inc
shufps
and
mov
mov
mov
cmp
iret
xor
ja
stos
mov
mov
ret
nop
ret
adc
sbb
daa
ret
cs
aaa
mov
push
ja
mov
pop
sbb
push
inc
les
cmps
les
mov
pop
pop
aad
sub
jns
mov
sbb
dec
sub
mov
loope
stos
ja
cli
jns
mov
adc
mov
mov
std
push
(bad)
mov
pop
test
xchg
add
cmp
test
(bad)
outs
fadd
in
dec
push
(bad)
arpl
push
dec
mov
or
jmp
jo
fldenv
das
cmp
fcom
sti
repnz
ret
cmps
dec
repnz
mov
icebp
cmp
fcomp
icebp
xlat
add
mov
mov
cmp
ror
aaa
jb
aam
xchg
jge
jecxz
mov
push
adc
sbb
jns
add
push
test
dec
pushf
jge
test
push
push
pop
(bad)
ins
push
(bad)
sub
test
pop
cmp
jo
fmulp
cmps
sub
clc
icebp
mov
jmp
ds
movs
mov
dec
xchg
ret
xchg
cmps
ins
mov
pushf
jmp
popa
and
mov
sub
push
(bad)
in
loop
aam
sbb
test
or
jg
add
jne
mov
sub
pop
in
mov
nop
fistp
out
inc
dec
(bad)
cmc
in
cmp
test
push
xchg
repz
mov
fst
mov
mov
jmp
jno
mov
mov
mov
movaps
sub
icebp
pop
sbb
popf
dec
adc
ret
sub
leave
jge
or
push
jnp
neg
cld
mov
mov
popf
xor
dec
add
jge
xchg
sub
mov
cmps
cmp
mov
inc
sbb
aad
push
jmp
pop
and
or
jb
ins
dec
mov
lods
movs
test
stos
cmp
addr16
scas
inc
xor
test
test
pop
sahf
push
or
add
in
mov
imul
xchg
inc
loopne
and
(bad)
mov
out
fldcw
jle
mov
imul
adc
lods
clc
mov
popa
repz
(bad)
cdq
into
xchg
xchg
and
sub
pushf
push
jle
sub
gs
cmp
inc
popa
mov
sahf
cwde
pop
jb
ins
or
mov
inc
xor
rol
push
cmp
in
pop
jp
movs
adc
and
out
popa
gs
fidivr
repz
sub
fsubrp
mov
test
stos
fistp
cli
cmp
aas
dec
test
jp
mov
fwait
pop
stos
mov
mov
sbb
ror
retf
fldenv
pop
push
out
push
xor
les
cmp
mov
xchg
aam
pusha
pop
inc
mov
dec
popa
sbb
mov
aaa
cmp
cld
mov
sub
test
sbb
dec
stos
cmp
std
dec
add
jecxz
das
fs
pop
retf
adc
outs
and
cmps
mov
or
dec
mov
jecxz
jns
jns
adc
outs
inc
inc
mov
or
cmp
aad
cmc
mul
(bad)
mov
sub
out
(bad)
mov
retf
stc
pop
dec
sbb
jge
add
rol
retf
dec
push
mov
xor
ficom
aas
jno
sti
nop
popf
outs
xchg
mov
faddp
push
xor
mov
push
out
jbe
inc
cmp
popf
ss
or
test
sahf
push
mov
jno
xchg
cmc
mov
jmp
mov
mov
xor
cmp
lds
sbb
xor
mov
jmp
cmp
cmp
add
dec
or
mov
xor
cmp
mov
lds
popa
mov
rcr
jmp
lea
sbb
jns
push
movs
cmp
ja
cli
ins
jno
pop
ins
mov
sub
sub
mov
call
daa
sbb
cmp
pop
jns
(bad)
mov
and
es
cld
jmp
std
repnz
cmc
int3
cmc
inc
test
sbb
mov
out
pop
arpl
jle
mov
inc
mov
daa
jns
cmp
ins
test
retf
in
test
jne
mov
jl
fnsave
add
jle
inc
and
jb
mov
nop
daa
xchg
lea
pop
push
(bad)
xchg
(bad)
scas
bound
cs
sbb
xchg
pushf
lds
(bad)
gs
xor
cmp
in
loop
out
inc
add
test
mov
add
jmp
add
jmp
ret
das
in
xor
and
inc
pop
inc
out
add
jge
jl
ror
push
lods
shr
cmp
dec
cmp
stos
pop
xchg
pop
sbb
xor
dec
pop
push
out
(bad)
cmc
cmp
xchg
(bad)
adc
leave
jl
adc
pop
shl
ds
push
push
mov
lahf
gs
leave
leave
and
int3
mov
pop
outs
pop
into
sub
or
jge
mov
out
outs
ins
pop
(bad)
push
sbb
test
adc
hlt
pop
mov
out
or
mov
aas
shl
dec
mov
sub
push
cwde
mov
sub
lds
movs
(bad)
jne
imul
inc
lea
pusha
adc
cld
sub
mov
dec
cwde
jae
call
or
sti
mov
push
shl
dec
bound
inc
mov
sub
and
inc
mov
add
addr16
jns
lods
call
push
mov
add
and
jbe
loop
rcr
rcr
movs
loope
xor
mov
call
out
scas
mov
push
pop
jge
sub
inc
sub
sti
sub
sbb
(bad)
jns
repz
push
movs
shl
push
daa
mov
dec
mov
jp
test
mov
mov
cmps
cdq
add
and
bound
sahf
inc
dec
(bad)
inc
pop
(bad)
sub
mov
and
mov
test
push
jmp
xchg
popf
add
je
adc
call
clc
and
jmp
or
push
inc
shl
scas
inc
adc
sub
sbb
sub
(bad)
mov
mov
loope
and
fcomp
adc
jbe
stos
and
ja
test
and
sbb
or
popf
stos
mov
jbe
dec
pop
dec
dec
cmps
mov
sbb
leave
retf
test
and
icebp
inc
test
push
adc
fild
mov
je
inc
cld
mov
mov
enter
ja
mov
mov
scas
lods
jno
mov
into
mov
jmp
xchg
popf
fwait
xchg
cmp
pop
repz
iret
push
inc
add
cmp
adc
mov
jle
sbb
lods
sbb
hlt
push
or
xor
movs
pop
mov
lods
enter
sbb
pop
es
aas
js
mov
jb
cmp
loope
mov
pusha
in
dec
mov
das
or
imul
in
adc
out
dec
cmp
(bad)
lahf
shl
sbb
mov
fidiv
(bad)
or
push
mov
dec
ret
sbb
or
pop
sbb
push
retf
int3
sbb
daa
pop
sar
(bad)
xchg
push
xor
ret
sbb
adc
inc
dec
loope
fld
mov
mov
mov
or
loopne
mov
push
push
imul
lods
enter
mov
xor
pop
int
xlat
icebp
aas
pop
test
cmc
sub
jb
and
retf
loop
pop
sbb
dec
in
ss
inc
push
fwait
dec
test
pushaw
xor
(bad)
push
mov
mov
and
pop
add
icebp
xchg
or
xchg
adc
inc
xor
ror
mov
call
xor
sti
inc
and
xor
int3
ja
mul
cmp
mov
into
ficomp
jno
mov
inc
nop
sub
cli
cmp
loope
(bad)
fcmovnb
cmp
imul
(bad)
ss
call
test
nop
mov
sbb
stos
scas
aaa
dec
fdivr
outs
scas
xor
das
(bad)
sbb
cmp
loopne
pop
and
in
inc
(bad)
repz
xor
stc
inc
outs
sbb
aas
pushf
mov
inc
or
adc
mov
inc
retf
xchg
mov
jno
lahf
mov
movs
jp
in
in
jmp
sbb
fadd
and
inc
out
jmp
scas
popf
push
js
or
fist
or
sub
jbe
jg
sbb
jne
xor
data16
mov
bound
rcr
outs
mov
ds
jmp
mov
std
or
pop
mov
idiv
addr16
mov
or
sub
add
inc
mov
xor
dec
xchg
push
inc
dec
cmp
das
inc
rcl
leave
adc
sbb
push
add
sti
fs
add
dec
jmp
mov
xchg
and
es
cmps
mov
daa
repz
(bad)
out
sub
mov
fnstsw
adc
push
add
jnp
in
mov
(bad)
call
xchg
inc
sahf
and
retf
fwait
call
sub
popf
pop
fistp
(bad)
sub
repz
xor
inc
fwait
or
hlt
aam
mov
popf
adc
pusha
popa
pop
xchg
xchg
cmp
fwait
pop
sub
mov
icebp
lods
or
fidiv
push
xchg
inc
jmp
xor
lea
pop
stc
fidiv
mov
cmps
mov
jmp
pop
and
inc
cs
stos
jb
in
int
ja
jae
cwde
lods
xlat
shl
loop
imul
cwde
test
mov
test
das
sub
rcl
jmp
jne
pop
dec
sbb
jl
popf
sbb
pop
add
push
sbb
jg
fs
fwait
jns
mov
dec
pop
or
add
ret
ror
(bad)
pop
push
loope
sub
jecxz
int
mov
retf
xchg
or
jecxz
adc
inc
gs
ret
push
pop
fcomp
jg
jo
fcom
addr16
sub
inc
iret
stos
mov
xor
pop
adc
dec
lock
out
push
mov
mov
inc
or
sub
xchg
xchg
xchg
mov
outs
int
loope
idiv
mov
leave
push
js
pop
movs
stos
mov
scas
leave
lahf
push
add
and
mov
sbb
xor
aas
adc
mov
adc
jns
sub
xor
je
mov
call
pop
jno
loop
sbb
add
mov
mov
and
pop
jp
mov
mov
pop
xchg
sbb
xchg
cld
out
inc
(bad)
imul
or
ss
(bad)
xchg
xchg
push
(bad)
jbe
fisttp
dec
in
jle
das
push
xchg
cwde
jae
ret
add
imul
(bad)
mov
mov
inc
cmp
rol
test
addr16
push
sub
mov
idiv
sbb
aas
ins
mov
gs
push
retf
(bad)
addr16
lgs
ins
or
das
pop
or
pop
lods
shr
pop
mov
pop
shl
sub
imul
call
out
mov
jbe
fisttp
add
lods
jbe
in
or
inc
push
sbb
retf
and
enter
ret
outs
cmc
test
and
pop
dec
sbb
mov
into
push
scas
mov
jl
and
ficom
stos
inc
leave
mov
stc
xchg
int
(bad)
cld
cmp
dec
fdiv
pop
(bad)
clc
jne
dec
cs
dec
int3
xor
dec
xlat
arpl
cld
push
inc
hlt
int
and
adc
jne
sub
shr
mov
stos
jle
dec
lods
(bad)
sti
loop
inc
cld
fidivr
or
mov
jg
and
adc
cmps
sub
xchg
adc
push
retf
pop
mov
fistp
fs
shl
dec
mov
fisttp
lock
dec
cmps
jg
inc
sbb
jnp
adc
dec
and
out
(bad)
test
pop
test
and
jge
sbb
aam
jp
jnp
jnp
fwait
(bad)
(bad)
jne
(bad)
mov
xor
pushf
bound
mov
dec
jge
stc
cmp
xor
sub
pusha
xchg
movs
out
xor
sbb
add
add
mov
pushf
mov
and
sub
cld
(bad)
(bad)
ret
xor
mov
inc
dec
sub
and
mov
aas
lock
sub
mov
sub
mov
into
(bad)
sahf
pop
cmps
jmp
cld
stc
cld
add
inc
inc
and
ret
mov
outs
lock
jmp
cmp
dec
xor
pop
rol
lahf
add
dec
sbb
jbe
pop
cld
retf
and
jns
popa
push
pop
pop
inc
shl
loop
inc
ret
or
sbb
xor
push
add
sar
inc
or
cmp
inc
(bad)
pop
test
sub
dec
addr16
sbb
pop
sub
push
fs
dec
sbb
outs
mov
sub
push
scas
sar
mov
push
push
adc
push
mov
push
or
pop
test
inc
jae
xor
jb
and
jo
inc
sbb
js
aas
ins
dec
or
sub
add
pusha
fmul
push
clc
xor
scas
std
pop
aas
pushf
les
in
xchg
repnz
cmp
adc
adc
xchg
movs
sub
push
gs
call
ss
mov
sbb
aas
or
lock
sahf
cmps
xor
mov
rol
and
pop
add
jo
and
imul
and
pop
ins
mov
mov
retf
lahf
stc
jne
adc
les
and
iret
pop
fisub
in
or
jne
push
clc
inc
hlt
cld
data16
cdq
pusha
cmps
sub
sahf
jae
hlt
arpl
test
mov
mov
dec
cmp
sbb
arpl
inc
mov
and
or
into
pop
push
and
xchg
add
sub
test
jmp
stos
sub
sub
enter
ins
mov
push
and
mov
mov
inc
jbe
dec
sub
add
mov
xor
test
pushf
ins
neg
bound
stos
mov
dec
xor
lock
lock
mov
enter
jl
pop
dec
xchg
dec
dec
or
jae
js
repz
fisub
jno
cmp
sahf
or
dec
fisttp
sub
sti
fwait
or
jb
mov
push
rcpps
pop
sbb
pop
in
push
fs
push
(bad)
or
mov
retf
mov
sbb
sub
lock
jmp
cwde
mov
mov
and
cmps
add
cwde
call
ins
mov
jle
fisubr
movs
out
adc
xchg
jg
cmps
mov
mov
mov
mov
mov
repnz
out
out
pop
sbb
mov
ret
dec
arpl
push
mov
call
dec
mov
popa
sbb
push
popa
fwait
outs
(bad)
int
mov
mov
cmp
inc
ret
cmc
xchg
test
xlat
cmps
in
sbb
in
fwait
pop
not
je
push
hlt
out
js
mov
ficomp
inc
imul
sbb
jmp
and
adc
das
pop
mov
leave
movs
dec
and
mov
test
into
sbb
das
cs
out
lds
push
daa
xchg
dec
jecxz
ins
sub
test
push
imul
xor
or
rcr
inc
aam
outs
(bad)
xchg
cli
inc
out
sbb
mov
add
dec
jns
(bad)
cmp
pop
stos
pop
push
cmp
aam
stc
lds
add
push
stos
iret
paddusw
call
fmul
jecxz
fs
mov
popa
ins
aad
test
sub
es
lahf
inc
xchg
push
in
xor
mov
adc
out
xchg
fimul
ficom
mov
clc
stc
or
gs
(bad)
push
(bad)
push
in
push
pop
sbb
cmp
mov
push
xor
cmp
rol
xor
icebp
xor
xchg
jmp
xchg
adc
push
jo
mov
or
dec
push
inc
jno
jle
cmp
in
adc
sub
sbb
push
scas
cmp
or
push
lds
cwde
aam
cmps
in
lods
jle
and
xchg
aaa
adc
jmp
outs
mov
cmp
sub
in
cmp
repnz
call
jecxz
adc
cwde
mov
xor
std
inc
cmp
pop
(bad)
push
cmc
loope
xchg
sub
ins
sbb
ficom
inc
in
shl
rcl
or
sub
add
clc
or
jo
test
mov
sub
sbb
or
pop
mov
std
adc
movs
adc
pop
push
dec
lds
xor
sub
push
arpl
fild
or
clc
dec
pop
jmp
cmp
jno
push
xlat
dec
je
xchg
mov
adc
adc
int3
xchg
test
xchg
inc
jno
push
mov
push
iret
retf
retf
sbb
mov
sti
popa
jge
pop
in
(bad)
jl
adc
cmps
fdivr
loopne
test
cdq
sub
and
scas
cmp
xor
stos
push
jp
pop
jns
add
shl
(bad)
fldenv
lea
cmps
or
js
data16
xchg
mov
add
retf
rol
mov
lds
test
addr16
fs
int
stos
xor
pop
stc
movs
das
xor
imul
cmp
frstor
lds
and
pop
hlt
dec
int
push
popa
movs
cli
popa
jo
add
fwait
lea
inc
rol
fsubr
ss
fisubr
sar
les
cmp
mov
or
mov
adc
out
stos
stos
ja
add
je
lock
sub
(bad)
popa
and
add
aad
mov
xor
loope
mov
les
loope
jae
mov
das
enter
and
repz
push
in
in
int
lea
cmp
mov
fs
pop
or
push
sbb
(bad)
cmps
lea
addr16
mov
test
ficom
dec
dec
jmp
lahf
adc
inc
push
pop
pop
icebp
shr
mov
add
out
gs
fs
jmp
dec
popf
lods
dec
or
jne
mov
sub
cmp
ja
js
add
std
test
aaa
ins
out
rcl
add
xchg
and
push
dec
add
jbe
(bad)
add
fisubr
retf
cli
xor
lahf
xor
aam
jg
mov
sbb
rcr
sbb
cmps
mov
mov
add
(bad)
shr
jae
enter
xor
push
dec
dec
fimul
std
repz
ficomp
(bad)
(bad)
cmp
nop
sti
cmps
mov
jmp
inc
xor
mov
push
jl
addr16
mov
pop
and
ror
(bad)
sub
xchg
xchg
mov
lods
mov
pop
pop
push
lods
cmps
push
pop
call
pusha
ins
imul
sub
push
iret
out
jmp
rcr
data16
mov
ror
test
fst
call
push
test
lods
xchg
xlat
push
add
sysret
int
test
sub
xchg
cmps
shl
aad
mov
xchg
pop
jno
or
and
daa
xor
loopne
add
sub
xchg
dec
xor
xchg
sbb
jl
xor
cld
and
daa
das
pusha
jo
cli
xor
sub
jnp
sub
add
mov
push
pop
scas
mov
adc
ds
mov
movs
test
fbld
mov
dec
jecxz
mov
jl
fcmovne
scas
inc
push
or
mov
mov
ror
test
emms
jle
leave
jecxz
xor
and
mov
and
mov
jmp
cmp
in
aad
int
adc
in
repz
(bad)
out
jle
or
or
mov
in
adc
push
add
scas
push
dec
fistp
add
or
xchg
sbb
pop
shl
retf
jno
pop
(bad)
xor
inc
pop
imul
add
xchg
pop
gs
dec
loopne
loopne
fistp
call
pop
jl
push
dec
jmp
jmp
adc
gs
mov
pop
cli
sub
inc
or
dec
sbb
inc
pusha
mov
mov
mov
xor
in
mov
ins
sub
scas
xor
test
xchg
sbb
imul
mov
sbb
popa
mov
enter
ds
outs
out
inc
shl
enter
in
push
sbb
mov
mov
cli
pop
pusha
movs
mov
inc
aam
dec
mov
pop
aad
in
daa
repnz
jns
les
popa
shr
in
cmps
sub
(bad)
sti
adc
xchg
jne
cmps
xchg
fcmovnbe
adc
jo
movs
repnz
pop
in
jg
xlat
(bad)
cmp
loopne
hlt
mov
xchg
mov
movs
mov
or
sub
movs
cmp
dec
or
or
ss
dec
(bad)
xchg
pop
mov
push
ins
dec
dec
mov
pop
fwait
pop
(bad)
(bad)
cmps
ins
cmp
and
pop
sub
cmp
or
mov
sbb
and
mov
jp
sub
in
push
retf
retf
inc
sbb
ins
pop
inc
dec
pop
lea
mov
sub
mov
movs
das
fdiv
(bad)
cmp
loopne
je
mov
xchg
sti
push
scas
retf
out
push
data16
outs
ja
or
sub
mov
inc
fcomp
aaa
and
xor
es
shl
push
inc
sub
into
in
adc
mov
sbb
or
adc
cli
(bad)
(bad)
push
pop
popf
or
push
push
ja
pop
imul
test
mov
cmc
aas
or
rcl
xchg
stos
jl
add
out
cmp
in
xlat
cmp
push
mov
xchg
adc
sub
lea
sahf
lock
sub
lods
out
xchg
dec
adc
push
retf
retf
lds
fstp
(bad)
push
xchg
aad
enter
mov
cmp
add
mov
fwait
stos
xchg
adc
cli
xor
jns
leave
fild
je
shl
sbb
cli
inc
push
leave
push
mov
jmp
jmp
lock
and
jbe
shl
sbb
jnp
pop
xchg
mov
es
sub
je
lea
mov
jnp
push
ret
addr16
xor
or
test
sub
iret
sub
clc
sbb
aam
fs
ret
js
daa
push
ret
(bad)
mov
jmp
fdivrp
inc
mov
adc
iret
rcr
dec
iret
mov
xchg
lea
pop
loope
mov
mov
cli
jbe
or
jecxz
fild
out
mov
sub
pop
push
mov
push
es
and
jmp
adc
xchg
arpl
cs
lods
mov
test
mov
stos
jmp
push
sub
sahf
test
xor
dec
loope
and
mov
(bad)
dec
imul
fdiv
fst
sub
repz
enter
movs
xor
cmp
ret
or
std
ja
push
mov
sahf
mov
loopne
adc
fs
pop
sub
call
shl
inc
clc
std
out
and
stc
(bad)
and
push
sbb
sub
out
lahf
in
push
mov
test
out
stc
sbb
adc
adc
in
rol
mov
pop
call
inc
mov
sbb
bound
jg
clc
(bad)
into
test
les
push
jae
lods
dec
mov
dec
outs
lahf
lock
dec
fist
inc
ret
inc
or
inc
imul
cmp
push
int
leave
pop
mov
lods
mul
icebp
pop
sbb
xchg
adc
imul
cmp
jg
add
pop
sub
jae
add
stc
sub
ds
fisub
ins
in
sub
fadd
and
inc
or
xchg
in
out
repz
pusha
xor
mov
jne
(bad)
int
lods
dec
xor
ret
out
repnz
hlt
add
push
(bad)
sub
pop
outs
inc
mov
xchg
lds
fdiv
or
sbb
fs
shl
gs
stc
cmp
or
fisub
pop
cld
popa
add
ins
mov
inc
fs
das
push
pop
into
(bad)
jp
mov
add
and
icebp
pop
xchg
dec
mov
mov
pop
shl
not
sub
iret
push
movs
or
cmc
dec
fmulp
cmps
(bad)
shl
push
inc
dec
mov
push
or
out
mov
sbb
adc
or
dec
(bad)
pop
retf
out
mov
xchg
adc
push
arpl
mov
popa
push
and
addr16
loop
fistp
mov
inc
loopne
sub
mov
repz
mov
sbb
mul
je
and
push
outs
(bad)
retf
jmp
pop
sbb
mov
jle
jg
add
retf
call
or
sahf
es
fmul
jmp
xchg
js
sub
add
or
pop
push
sub
jecxz
test
mov
xchg
and
xchg
inc
add
sub
test
inc
sbb
xchg
es
stos
retf
(bad)
repnz
movs
cmp
mov
sbb
xor
cmp
ds
lods
scas
pop
in
clc
cs
cmp
lea
out
repnz
jbe
add
bound
aam
xor
jmp
repnz
pop
stos
cmp
mov
(bad)
aaa
inc
cmps
or
and
xor
pop
pop
mov
cmp
push
ret
xchg
adc
sbb
jns
push
jne
push
aaa
jl
mov
xor
int3
dec
xchg
fisub
mov
fld
rol
push
mov
retf
and
arpl
or
imul
and
(bad)
ins
es
mov
pushf
into
nop
push
xchg
out
adc
lea
jne
pop
fcom
sbb
lock
repnz
lahf
je
aas
jb
adc
jmp
xchg
mov
adc
aam
mov
test
fstp
jbe
add
(bad)
xor
push
out
bound
lds
movs
sbb
gs
pop
hlt
pop
out
mov
cmp
out
cmp
pusha
(bad)
mov
clc
stc
jno
xchg
in
aam
sbb
icebp
dec
pop
lods
call
mov
movs
mov
js
fmul
add
out
adc
push
mov
retf
xor
imul
pop
data16
push
out
cmp
repz
sub
fdiv
mov
sub
retf
jl
dec
sub
enter
pop
mov
sbb
arpl
dec
mov
lods
mov
nop
ret
stos
add
(bad)
retf
mov
repnz
jecxz
or
mov
push
push
push
inc
push
jge
int
cmps
cmp
fisub
aas
fcomp
push
mov
ins
cwde
cmp
mov
sub
inc
mov
pop
nop
shr
pop
cmp
pop
lds
pop
loopne
ret
leave
repnz
or
mov
mov
cmc
pop
movs
push
add
fwait
cmp
push
movs
sub
in
mov
pop
inc
mov
retf
daa
leave
test
jle
jmp
out
adc
add
dec
cmp
push
aam
ja
xchg
pop
ds
shr
mov
dec
lods
cs
push
push
cmc
loop
popa
push
pop
xor
ret
xchg
test
push
mov
push
data16
fistp
cmc
mov
pop
cmc
jae
imul
fadd
nop
ret
test
scas
jo
inc
pop
xor
(bad)
icebp
or
lods
stos
loopne
cwde
into
mov
add
mov
jge
and
or
out
(bad)
ret
ficomp
jmp
dec
fsub
mov
sar
pop
sbb
mov
sbb
or
loop
repz
cdq
push
adc
rcl
jns
outs
fidiv
jb
adc
mov
ficom
rcl
popa
xor
sub
imul
imul
stos
rcr
ins
inc
outs
push
cwde
and
retf
cmp
mov
fs
fnstsw
sbb
mov
ficomp
daa
icebp
adc
adc
add
add
lock
sbb
lahf
cli
sbb
adc
sub
sub
jmp
cs
sbb
ja
xchg
jmp
push
cwde
xlat
jp
cmp
imul
leave
push
int3
ja
push
push
jnp
inc
stos
mov
jp
and
mov
fld
sbb
add
or
leave
aam
xchg
shl
jae
gs
mov
dec
retf
int3
inc
js
outs
out
mov
retf
mov
ret
pop
pushf
pop
sub
xchg
stos
inc
repnz
test
imul
lea
les
ins
adc
jnp
inc
xchg
stos
dec
sti
sub
push
mul
sbb
jg
(bad)
fldenv
gs
cmp
call
cmc
outs
stc
in
pop
in
push
jb
leave
pop
xchg
pop
sbb
and
xchg
dec
imul
sub
jge
mov
mov
push
dec
je
mov
or
loopne
mov
call
cwde
in
inc
sub
out
pop
movs
jb
mov
cmp
div
dec
sub
sti
push
pop
(bad)
pop
jno
inc
add
xchg
lock
(bad)
push
(bad)
ds
mov
and
out
jns
js
jbe
xor
shl
cmp
loope
outs
fwait
add
sbb
or
fisttp
sbb
xchg
cmp
repnz
fisub
push
xor
push
dec
xchg
les
pusha
add
xchg
mov
test
pop
sbb
(bad)
push
or
add
rcl
data16
cmc
fld
mov
int3
sub
in
aas
dec
and
dec
xor
mov
lahf
inc
mov
pop
aaa
cmp
sub
xlat
inc
mov
jp
push
test
sbb
(bad)
ds
les
ret
push
sbb
leave
cmp
push
pushf
or
mov
stos
ins
test
daa
(bad)
xlat
lods
push
xchg
cmp
(bad)
xchg
lahf
cmps
mov
rcr
repnz
cld
sbb
mov
push
pushf
add
icebp
jb
dec
out
push
rcr
leave
mov
xor
inc
cmp
sub
and
cmp
push
add
out
adc
ins
jecxz
dec
fidiv
mov
outs
sbb
xor
jbe
xor
mov
into
xlat
mov
(bad)
cmp
call
int3
sahf
out
sub
nop
dec
jns
hlt
xchg
pop
dec
inc
dec
mov
movs
les
xchg
xlat
mov
mov
ret
dec
cmc
and
mov
dec
jb
aad
stos
popa
dec
xchg
jb
pop
xor
rol
loope
repz
loopne
add
jp
out
mov
data16
sbb
sbb
test
call
sbb
push
xchg
das
call
je
rcl
mov
(bad)
pop
dec
mov
lods
xchg
shr
fwait
sbb
mov
dec
pop
push
loop
fidivr
pop
aas
stc
(bad)
xor
icebp
jp
jmp
xchg
mov
out
call
in
dec
pushf
mov
mov
jns
stos
cs
push
sahf
sbb
ins
in
adc
shl
dec
in
jae
dec
in
pusha
push
out
mov
dec
adc
mov
adc
rcr
xor
mov
cli
(bad)
cli
add
pushf
je
cwde
sbb
scas
popf
add
repz
sub
cli
pop
xchg
xchg
pop
add
push
outs
icebp
mov
mov
inc
or
cmps
inc
inc
push
enter
push
inc
aam
pop
add
in
icebp
xchg
lahf
(bad)
sbb
popf
mov
aam
test
test
out
cmp
ret
scas
jl
mov
movs
or
push
jb
xor
loop
out
lds
mov
jns
mov
and
mov
idiv
mov
cli
add
xor
and
jne
rcl
mov
xor
outs
lea
xor
fidiv
push
(bad)
aas
push
sti
(bad)
push
ss
push
std
pop
scas
fwait
or
and
and
dec
dec
mov
js
jecxz
mov
das
test
xchg
in
or
pop
das
fcmovne
cs
movs
fbld
add
jp
(bad)
jns
push
repz
push
push
repnz
sub
sbb
sahf
jne
lea
jp
xchg
test
jnp
sbb
dec
adc
arpl
pop
inc
inc
mov
add
in
xchg
aad
clc
sub
pop
cmp
ins
imul
outs
inc
xchg
push
lahf
add
ret
dec
dec
inc
mov
je
jne
dec
adc
dec
or
jmp
adc
bswap
ror
jns
int
cli
mov
cmp
test
dec
mov
movs
and
jecxz
(bad)
push
push
sbb
dec
lods
out
mov
pop
mov
jge
shr
mov
mov
pop
fld
lods
or
xor
pop
imul
div
ret
ins
out
xchg
mov
inc
fcomp
cmp
pop
stos
mov
push
cli
jmp
ss
mov
mov
or
sub
mov
mov
cli
sbb
les
retf
xchg
dec
or
and
(bad)
stos
jae
add
and
inc
pop
adc
dec
neg
jmp
and
je
rcr
in
mov
and
inc
add
dec
call
bound
jecxz
sti
push
inc
pop
adc
push
fistp
mov
adc
int3
pop
xor
add
cmp
dec
xchg
ins
xor
jns
dec
mov
push
fstp
adc
fisubr
cwde
lods
push
xchg
dec
jmp
jne
(bad)
lock
mov
or
rcr
outs
mov
pop
stc
sub
bound
and
retf
jmp
jae
dec
mov
arpl
out
enter
mov
pusha
sar
inc
ja
and
js
mov
mov
push
test
xchg
pop
push
addr16
adc
or
aam
push
scas
es
push
sbb
ret
loope
xchg
movs
loope
mov
cwde
pshufw
sub
add
lahf
mov
popa
lahf
adc
and
iret
dec
stos
rcr
xchg
add
ins
add
mov
and
mov
and
jno
xchg
cdq
sbb
push
out
dec
(bad)
stc
mov
and
dec
out
out
call
ret
adc
push
sti
retf
ins
and
jmp
sub
les
ror
lds
test
or
sbb
cmp
cwde
or
and
xor
repz
rcr
mov
jle
and
fs
aad
nop
or
mov
add
test
mov
jno
rcr
pop
jno
push
jne
rcl
sub
fs
outs
cmp
sbb
fnstcw
fisttp
rol
dec
pop
xchg
(bad)
rcr
cmp
cmp
inc
sbb
pop
fist
(bad)
in
out
stos
adc
push
test
and
pusha
mov
or
(bad)
mov
fisttp
scas
sahf
sbb
pop
ror
fld
inc
imul
add
mov
(bad)
in
push
daa
ss
cli
adc
inc
lods
in
cmp
push
pop
add
loop
add
xor
mov
mov
mov
repnz
retf
sbb
and
sub
or
or
xchg
mov
inc
imul
adc
pop
push
add
cld
adc
xchg
mov
call
fistp
ret
aam
out
ja
outs
adc
or
sti
in
ds
ja
(bad)
fiadd
sbb
xor
test
pop
cli
push
mov
je
dec
xor
jb
pop
dec
cld
inc
(bad)
fcmovb
mov
and
and
dec
cmp
or
mov
mov
jge
ins
retf
jge
rcl
cmp
or
aad
sbb
dec
xlat
cmp
lea
sbb
je
or
ins
dec
out
add
push
mov
aas
push
sub
fld
sbb
pop
inc
pop
sbb
cmp
push
rol
imul
es
test
sub
pop
push
sbb
sub
sbb
(bad)
xor
fwait
jle
sub
adc
dec
movs
sub
rol
mov
inc
cdq
push
out
and
mov
pop
xchg
mov
je
push
cmp
pop
pushf
jecxz
push
xchg
imul
pop
ror
shl
out
pop
mov
mov
jns
jge
push
xor
mov
cmp
retf
sub
fcom
mov
inc
jmp
fisttp
lock
sbb
pop
xchg
lahf
jecxz
out
ja
add
pop
mov
push
jae
mov
xchg
(bad)
jae
jge
icebp
loopne
mov
add
loope
cmp
xor
mov
mov
cli
loope
aas
retf
mov
cmp
sub
int
repz
jmp
add
or
sbb
bound
hlt
pop
cmp
xor
das
xor
ins
inc
bound
mov
cld
ror
jno
stos
push
or
mov
out
mov
push
mov
and
and
jg
mov
imul
xlat
xchg
loop
mov
sub
ret
pop
out
push
cli
pop
sbb
adc
pusha
mov
mov
pop
inc
ffreep
cmp
mov
iret
and
dec
cs
fbstp
stos
aam
lock
mov
dec
mov
test
test
jbe
xchg
test
out
iret
xor
cmps
cmc
cld
call
fisttp
xor
sbb
adc
mov
xor
out
int3
xor
pop
push
xchg
out
or
push
outs
mov
(bad)
icebp
or
icebp
mov
sbb
dec
jle
test
inc
jmp
mov
clc
sbb
fistp
add
cmps
mov
sub
aam
mov
cdq
(bad)
mov
fldcw
pop
or
(bad)
jne
pop
dec
mov
adc
(bad)
cmp
mov
mov
sub
lea
xchg
fwait
sbb
mov
movs
add
fsubp
mov
sbb
mov
inc
ja
push
pop
lods
nop
loopne
mov
fiadd
jno
lock
dec
mov
mov
int3
sbb
popa
das
xlat
mov
dec
ret
push
xchg
mov
push
fldenv
outs
and
jae
dec
aam
dec
(bad)
cld
pop
shl
jge
push
add
out
pop
inc
fistp
xchg
mov
dec
cvtps2pd
out
cmp
scas
sbb
sar
xchg
xor
mov
test
add
sti
(bad)
dec
cwde
pusha
int
jmp
fs
xor
push
cwde
xor
and
dec
ret
(bad)
cs
inc
jg
inc
in
sub
cmp
in
mov
icebp
mov
and
rcr
test
xor
in
hlt
pop
rcl
or
stos
xor
inc
and
gs
ja
adc
mov
jns
les
mov
jns
cmp
int3
sbb
inc
or
inc
addr16
movs
sti
dec
adc
outs
xor
jg
jae
cmp
sub
sub
aaa
sbb
fs
cdq
int
add
scas
mov
shl
mov
cmc
icebp
push
jnp
dec
int3
xor
jl
cdq
xchg
gs
call
imul
jmp
mov
xor
xor
icebp
ror
mov
aad
pop
ror
sub
or
sbb
adc
imul
push
daa
jmp
sti
xor
dec
jge
loop
xor
ret
push
mov
div
loopne
mov
dec
jp
repz
sub
cmp
outs
sub
xor
(bad)
jo
xchg
inc
sub
cwde
ja
nop
or
(bad)
push
imul
jmp
or
test
jle
xor
dec
icebp
pop
in
in
inc
pop
sbb
inc
mov
mov
into
sub
and
cmp
hlt
push
add
jmp
xchg
jno
aas
popa
jge
mov
and
dec
mov
add
in
in
mov
and
in
ror
out
pop
jl
mov
push
ins
stos
pop
push
cld
sub
loopne
inc
out
pop
nop
push
mov
jae
ins
imul
int
(bad)
ret
push
adc
pop
or
into
or
xlat
xchg
retf
xchg
int
push
dec
outs
inc
mov
js
out
leave
dec
add
mov
adc
mov
sbb
dec
clc
mov
xchg
in
test
mov
dec
mov
inc
sub
sub
cmp
ror
in
xchg
mov
mov
jns
inc
pop
ds
sbb
stos
ret
in
and
sbb
cwde
push
loope
sub
inc
cli
fstp
xchg
push
pop
shl
jp
add
xchg
scas
ss
loop
inc
in
es
mov
retf
inc
dec
das
pop
dec
or
and
ret
int3
xor
and
sub
push
push
fdivr
cld
pop
push
sub
mov
or
in
mov
stos
data16
ret
retf
mov
pop
stos
add
imul
push
cmp
(bad)
mov
mov
pop
cmp
cdq
cmp
inc
int
fisttp
adc
and
sbb
mov
rcl
pop
xchg
leave
and
xor
dec
jnp
dec
cmp
imul
std
cmc
iret
jmp
mov
push
test
pop
mov
shl
mov
jb
int
xor
push
push
mov
gs
mov
loope
mov
jle
jmp
xchg
daa
xchg
cdq
ficom
fs
mov
fldl2e
or
pop
sub
xor
sar
cmp
ins
lods
dec
push
jo
es
and
aam
icebp
pop
push
loopne
sbb
dec
jmp
pop
fs
jnp
adc
xchg
test
lea
or
jbe
retf
and
xor
push
ret
rcl
aas
nop
sbb
repz
adc
inc
xor
aad
push
lea
cmp
int3
inc
cwde
lea
mov
pop
enter
enter
in
daa
push
mov
mov
nop
shr
lods
push
dec
shl
mov
les
out
push
inc
dec
sbb
aaa
out
aam
and
imul
pop
xor
fxch
pop
test
test
add
xchg
adc
fld
loope
pop
mov
add
adc
inc
jmp
cmps
jnp
xchg
mov
pop
inc
xlat
ja
sub
cmp
sub
adc
popa
cmp
loope
jnp
(bad)
sbb
jge
stos
mov
mov
les
pop
lea
retf
mov
movs
out
(bad)
cmp
xor
jl
xchg
sub
or
jae
rcr
not
scas
push
std
push
xchg
push
add
push
cld
cmps
fdivr
xchg
test
iret
inc
xor
retf
into
inc
cmp
mov
cmc
sbb
stos
xor
icebp
add
mov
lods
rol
inc
retf
pusha
add
inc
movs
xchg
inc
scas
es
in
mov
adc
xor
les
or
or
out
pushw
fistp
xlat
ret
and
repnz
sahf
cmp
and
dec
arpl
lods
xor
inc
xchg
pop
push
adc
pop
aaa
lds
or
mov
cld
into
mov
ret
push
xor
xor
jecxz
pop
push
jo
cmp
imul
pop
mov
inc
xor
push
xchg
push
pop
and
retf
in
lods
dec
movs
ret
scas
ficom
sub
push
call
mov
(bad)
in
jge
pop
popa
scas
iret
inc
(bad)
aad
adc
test
ficomp
inc
mov
or
xor
mov
push
push
jb
sahf
out
inc
lds
(bad)
xor
retf
retf
cmp
leave
cmps
stc
pop
push
jb
test
mul
sub
minps
arpl
cmps
jp
shl
rol
les
aas
sbb
push
out
int3
mov
push
dec
out
or
and
jp
(bad)
or
outs
sub
mov
out
jo
jp
mov
xchg
mov
cmp
ins
mov
add
mov
movs
adc
cmp
mov
xor
sub
div
mov
cmp
and
jl
add
inc
jbe
mov
lock
and
iret
sbb
(bad)
jle
and
or
mov
pop
aad
pop
sbb
mov
int
ins
and
or
fisub
into
mov
adc
push
push
and
aas
jns
mov
(bad)
test
adc
inc
mov
ins
sbb
or
cmp
mov
fs
fs
pop
out
inc
inc
rol
sti
mov
mov
mov
dec
pop
clc
add
pop
pavgw
xor
mov
(bad)
jmp
cmp
das
sar
imul
mov
dec
jnp
mov
jle
pop
dec
addr16
stos
loope
mov
dec
in
sbb
mov
sbb
xchg
js
xchg
ret
mov
jb
test
mov
pop
cmp
lds
(bad)
lods
adc
cld
int
xor
pop
mov
mul
jno
enter
aas
mov
retf
dec
cmp
sbb
mov
in
sbb
or
leave
push
jo
out
xchg
out
daa
or
xor
rcr
cmp
fcmovnbe
cmp
or
nop
call
cs
jp
rol
inc
ss
mov
sbb
popa
dec
test
test
push
aad
jb
push
imul
jo
jbe
lock
inc
scas
adc
js
and
(bad)
cs
aas
dec
dec
jle
mov
push
adc
dec
fadd
push
sub
add
fwait
pushf
test
popf
inc
in
pop
js
sub
out
jb
xor
or
mov
sbb
jo
jae
pop
cmp
fmul
mov
mov
xor
mov
out
inc
pusha
cmp
cld
fmul
lds
mov
(bad)
pop
mov
retf
jl
ror
fcmovu
jno
daa
out
push
shl
fwait
dec
movs
push
test
popa
imul
jp
jecxz
fisttp
rcr
xlat
dec
mov
in
jno
(bad)
movs
sti
daa
jns
lock
mov
and
cld
loope
push
mov
fcmovb
add
aam
loope
out
div
lds
pop
(bad)
fistp
dec
add
jno
sub
or
outs
pop
jge
cwde
pop
add
adc
std
stc
cmp
sub
mov
jmp
sar
arpl
push
aas
push
mov
movs
cmps
xor
faddp
aam
bound
sar
cmp
scas
inc
sub
and
adc
mov
push
mov
outs
sub
retf
pushf
lahf
or
movs
jl
or
imul
pop
lods
push
jne
adc
push
jbe
shr
push
dec
daa
dec
mov
pop
pop
or
jns
pop
popf
lock
mov
or
jb
mov
xchg
rcl
inc
inc
sub
movs
cmc
arpl
mov
test
outs
adc
data16
sbb
into
loop
push
sbb
mov
mov
lds
push
xor
push
jb
add
xchg
imul
adc
dec
imul
nop
stos
or
and
push
and
outs
mov
xor
mov
inc
jmp
icebp
ins
out
jecxz
push
stos
mov
or
dec
or
lds
push
mov
and
int3
sbb
sub
pop
ss
or
mov
ins
cmp
inc
pop
cmp
je
sbb
mov
and
rcl
cwde
cld
add
movs
out
push
xchg
and
xor
jae
and
stos
mov
push
fwait
lock
sahf
sar
sub
mov
in
mov
test
pop
cmp
xor
fcomp
lock
mov
adc
lods
int
xchg
dec
mov
rcr
pop
lods
pop
xlat
sti
repz
rcr
jle
push
test
push
sbb
mov
push
fstp
pop
add
cmp
push
pop
pop
jmp
mov
mov
mov
sar
push
retf
add
jb
enter
inc
sbb
pop
scas
stos
push
dec
mov
xchg
(bad)
dec
lods
aaa
or
mov
push
sub
add
out
xchg
ret
sub
mov
pop
fistp
outs
cmp
cs
test
and
out
fwait
aas
xor
fdiv
jecxz
xlat
jmp
cmp
cmp
pop
xor
scas
fidivr
outs
ds
inc
rcr
pop
movs
xchg
sub
retf
test
xchg
inc
push
and
int
xchg
jne
psubq
rol
outs
jecxz
out
mov
ss
inc
ins
mov
lock
fs
xchg
cmc
js
outs
sub
(bad)
xor
push
fnstenv
jne
adc
pop
and
inc
and
cs
bound
jl
add
sbb
or
das
and
xchg
fild
add
adc
aaa
mov
mov
out
add
push
xchg
ficom
push
xor
jno
jo
and
repz
pop
and
retf
fisub
test
(bad)
loope
xor
cmc
mov
(bad)
shr
adc
jge
jmp
and
mov
data16
data16
add
cli
xlat
cmp
xor
arpl
ss
int
popf
(bad)
sub
sar
push
pop
mov
iret
fs
mov
or
inc
or
pop
daa
push
xchg
mov
dec
jle
int
call
cdq
jnp
inc
sahf
loop
bts
mov
xlat
(bad)
jg
xor
add
lds
mov
adc
movlps
sbb
jge
daa
gs
adc
sub
inc
jae
adc
lds
mov
aam
mov
jmp
cmps
mov
dec
pop
mov
lea
(bad)
pop
test
es
sar
nop
imul
jmp
fdiv
call
popa
sar
bound
cs
jmp
shl
fisubr
jl
sar
shl
cmp
jmp
or
adc
ror
push
ret
cmp
push
jb
adc
mov
popa
jbe
in
mov
jo
in
mov
jl
adc
pop
sub
pop
ret
push
jle
test
or
jge
mov
js
pop
inc
inc
test
sbb
lods
out
hlt
sbb
popa
fxch
or
cmp
push
(bad)
push
cmp
cmp
inc
cld
mov
sar
pop
inc
dec
arpl
test
push
daa
(bad)
dec
adc
adc
and
xor
cmps
pop
in
(bad)
jp
lods
(bad)
lock
(bad)
push
pop
push
sub
test
data16
(bad)
into
mov
push
sbb
mov
xchg
cmps
jno
sti
dec
loopne
call
fmulp
popf
ja
fsub
cmp
xchg
push
loope
xchg
mov
push
aad
and
enter
repnz
add
in
or
cwde
retf
adc
mov
dec
ffree
jae
stos
int3
ins
push
mov
xor
or
int
(bad)
in
hlt
mov
mov
sub
sbb
enter
xor
xchg
call
stos
jns
mov
in
cmp
add
and
sbb
mov
mov
sub
stc
push
or
test
jecxz
sub
ret
inc
ror
sbb
movs
int
shl
std
and
cmp
sti
lock
adc
jmp
sbb
push
adc
aam
(bad)
cmps
call
push
out
les
outs
inc
mov
dec
outs
mov
mov
sub
fdiv
mov
out
lea
test
bnd
xchg
jae
push
shl
imul
ret
xor
shl
enter
xchg
out
loop
push
mov
adc
std
jo
pop
dec
iret
fs
push
enter
cmps
int
mov
xor
push
inc
mov
jmp
mov
push
pushf
add
mov
mov
add
mov
mov
mov
shr
fs
push
push
jns
adc
jecxz
movs
ins
lahf
lea
cdq
inc
push
aad
stos
push
xor
lea
mov
idiv
jp
sar
rcr
enter
jnp
sub
jae
push
shl
add
les
sub
(bad)
xlat
(bad)
xor
rol
sub
jmp
jne
repz
(bad)
pop
aaa
mov
ja
aam
fcmovnb
psubd
adc
mov
hlt
jp
nop
es
loop
pop
adc
fstp
and
mov
lock
mov
mov
pop
jge
fsubp
sbb
mov
mov
dec
mov
push
pop
out
push
dec
daa
sbb
push
enter
jle
fcom
pop
mov
nop
mov
mov
mov
lds
or
out
call
daa
into
(bad)
xor
push
jns
cmp
push
pop
dec
xor
pop
sar
xchg
dec
pop
inc
jbe
(bad)
sar
dec
inc
mov
jns
mov
scas
jge
cmp
lahf
xchg
sub
sub
into
ret
xor
sub
and
push
mov
inc
mov
ror
pop
xchg
ins
push
js
jg
ds
rcl
sti
adc
cmp
jle
add
in
mov
mov
xor
jmp
adc
lds
(bad)
or
xchg
cwde
xor
jno
dec
(bad)
pop
repz
(bad)
pop
dec
push
pop
mov
movs
pop
out
jmp
ins
ds
push
std
push
movups
jne
and
(bad)
popa
retf
cmp
mov
dec
xchg
test
cmp
cmps
rol
push
push
mov
ret
mov
ins
(bad)
ins
push
test
imul
adc
and
fst
sub
mov
sub
and
sbb
jmp
das
jnp
aaa
inc
dec
lock
mov
xchg
push
scas
or
jns
xchg
or
adc
mov
mov
lahf
icebp
and
adc
cmp
mov
dec
add
movs
cdq
int
mov
(bad)
ror
loop
push
adc
and
aas
push
int3
lods
sbb
jp
jl
mov
and
push
cmp
xchg
push
mov
adc
mov
(bad)
adc
sbb
pushf
mov
sti
scas
loopne
ficom
in
dec
movs
sub
mov
in
outs
push
xor
clc
cwde
mov
mov
cmps
pop
call
push
cmp
imul
pop
in
std
sub
jecxz
pop
or
ss
pop
mov
sbb
ds
lods
jp
sbb
rol
mov
out
cmc
and
(bad)
sub
pusha
xor
int3
ror
pop
in
mov
add
jne
pop
out
ins
xor
push
mov
int3
jns
jne
shl
or
and
add
mov
aad
xchg
pop
jns
sub
cmp
bound
jbe
inc
jle
ret
imul
xor
cmp
imul
shr
mov
loop
pop
cmp
and
dec
addr16
call
sub
jo
mov
retf
dec
inc
test
jmp
repnz
lods
cmps
mov
push
mov
int
jp
or
sub
inc
xchg
sbb
jecxz
cmps
fistp
mov
pop
in
mov
aas
stos
or
arpl
adc
mov
inc
jge
stos
fisubr
popf
jo
mov
imul
fdivr
adc
xor
in
in
add
cmp
mov
(bad)
shl
iret
push
dec
cdq
xchg
or
add
mov
fistp
call
sub
jecxz
icebp
mov
sbb
ins
repz
sub
aas
inc
loope
lods
dec
dec
aam
mov
lods
js
outs
and
sub
lea
stc
inc
loope
loopne
mov
push
loope
rol
cld
stos
neg
dec
adc
aam
ret
shr
(bad)
lock
jo
or
(bad)
mov
sub
push
arpl
in
fdiv
cld
push
cmp
inc
add
dec
and
mov
mov
scas
jnp
lods
or
xchg
push
in
cmps
in
xchg
mov
mov
and
dec
or
sub
sbb
bound
sub
pop
call
or
and
sub
cwde
jne
jo
aas
(bad)
cmp
add
add
inc
mov
sti
cld
fsubp
jae
cmps
clc
sbb
faddp
call
imul
out
sbb
sti
outs
mov
inc
movs
int
add
stos
mov
mov
and
xor
cmp
(bad)
out
sbb
adc
push
push
icebp
fisub
or
add
mov
xor
xor
xor
or
mov
xor
sub
jb
pop
std
ds
xor
cmp
jbe
bound
or
mov
adc
xchg
ss
sbb
sbb
lods
mov
sbb
dec
push
dec
cdq
aaa
dec
xchg
inc
aas
lock
lea
fnclex
jmp
add
push
jns
shl
test
pop
mov
test
mov
push
retf
iret
dec
mov
dec
xor
jmp
scas
add
jae
call
mov
xor
cdq
mov
jbe
hlt
cmps
mov
or
rcl
and
cmp
les
pop
push
jne
pop
cmp
cmp
out
sbb
call
jno
sahf
mov
data16
test
out
mov
loope
fld
lahf
arpl
inc
es
add
lock
xchg
repnz
mov
cmp
xor
jns
(bad)
(bad)
mov
mov
add
je
rol
lods
loope
push
imul
sub
sti
jae
mov
jg
push
div
push
and
loopne
iret
xchg
add
mov
and
adc
cld
dec
in
(bad)
jmp
loopne
mov
fiadd
push
jbe
xchg
jmp
data16
mov
test
(bad)
fdivr
js
pop
stos
add
repz
add
std
aam
adc
or
fadd
push
call
cmp
push
xor
ss
pop
call
pusha
ja
dec
addr16
xor
mov
push
jmp
cmp
test
cmp
mov
push
mov
push
xor
adc
xchg
xor
cmps
cmc
repz
in
cmp
popf
sbb
cdq
ja
mov
mov
fimul
repnz
or
cmc
sahf
inc
clc
jmp
cmp
cmp
jecxz
in
inc
push
ss
sub
jbe
addr16
dec
mov
jns
icebp
and
(bad)
cmp
test
pushf
imul
loopne
dec
xchg
scas
add
sti
jb
or
cli
scas
(bad)
dec
mov
xchg
jg
jns
jle
(bad)
adc
iret
pop
das
loopne
pop
xchg
repnz
shl
dec
call
jns
iret
rol
fnstenv
ret
sub
mov
fisttp
sub
in
bound
jmp
retf
dec
addr16
cmp
jmp
sbb
daa
mov
push
add
xlat
sub
or
ins
dec
test
push
les
movs
std
xor
jno
retf
and
sub
ss
jae
outs
jmp
mov
pop
dec
lock
inc
add
test
add
mov
outs
enter
jg
clc
push
cmp
xchg
inc
and
jp
xchg
ins
dec
push
push
in
dec
jge
xchg
pop
sar
sub
and
jnp
pop
inc
and
or
movs
push
ins
push
cli
pop
or
add
jle
jmp
ror
inc
push
cmp
scas
stos
and
out
ja
in
mov
mov
pop
jl
ret
mov
cmps
xlat
fst
inc
out
scas
jmp
sub
jmp
adc
xchg
(bad)
cli
mov
sub
lahf
sub
pop
neg
pop
out
mov
fcmovb
in
sub
test
pop
add
aam
push
cmps
test
or
cwde
call
xor
jo
mov
cdq
push
jb
addr16
pop
test
xchg
mov
lahf
mov
retf
loopne
ja
and
cmp
out
js
mov
test
repz
rcl
pop
jp
jb
mov
pop
aad
mov
les
jnp
call
ja
sbb
lods
sub
jecxz
mov
std
add
out
into
mov
ror
out
dec
popa
dec
(bad)
pop
ret
add
cwde
rcl
pushf
xlat
dec
ss
out
je
xchg
sbb
fist
repnz
xchg
and
add
lock
jmp
(bad)
mov
scas
mov
stc
add
mov
push
push
cmp
xor
stc
add
pop
ins
xor
hlt
(bad)
lock
xor
push
sbb
fadd
inc
xor
or
les
(bad)
xchg
pushf
xor
outs
lods
iret
rcr
mov
rcl
outs
mov
mov
jp
xchg
push
jnp
add
(bad)
ror
add
xchg
cmp
xor
pop
cmp
add
dec
pop
sbb
mov
cmc
mov
ret
pop
ror
out
push
movs
jns
loopne
mov
or
loop
aad
jb
xor
jns
dec
and
xchg
pusha
inc
stos
lea
mov
je
fisub
test
rcl
dec
icebp
xchg
mov
stos
xchg
pop
mov
pop
mov
mov
ror
imul
push
aas
test
(bad)
pop
nop
pop
cmp
lock
nop
sbb
mov
rcl
sub
xor
dec
and
adc
inc
sub
mov
cli
loopne
dec
xor
add
add
rcl
outs
and
imul
sub
push
adc
xchg
adc
hlt
stos
mov
fucom
(bad)
inc
(bad)
(bad)
out
push
push
or
ins
test
imul
inc
cmp
pop
and
sub
test
leave
shl
xor
fimul
test
dec
gs
pop
mov
pop
push
jnp
sahf
push
in
add
push
test
or
call
sbb
push
jb
dec
out
mov
fimul
das
mov
push
jno
add
fxtract
shr
jmp
rcl
add
xchg
adc
rcl
xchg
dec
retf
adc
fstp
add
mov
mov
dec
add
cs
mov
loop
test
sub
out
dec
add
rep
cmp
enter
inc
out
adc
jnp
(bad)
jp
enter
dec
cmps
dec
sub
dec
sub
nop
aas
mov
lahf
inc
sub
mov
sub
es
jg
aam
std
push
mov
pop
(bad)
mov
or
pop
mov
nop
fld
popf
arpl
fldenv
jmp
adc
adc
sub
test
neg
mov
lock
adc
mov
cdq
push
jge
scas
inc
or
cmp
inc
shr
mov
mov
push
push
mov
lods
add
cwde
fstp
je
cld
(bad)
push
int
lods
add
sbb
mov
sbb
sbb
adc
js
sbb
je
out
cmc
das
pop
out
nop
mov
sub
in
int3
add
mov
sbb
jnp
jmp
ins
mov
jp
into
retf
push
lea
mov
push
inc
cmp
movs
mov
mov
ficomp
mov
es
iret
mov
mov
std
push
ja
dec
push
sub
rol
test
ret
out
or
jno
dec
cwde
jecxz
das
sbb
sti
stc
and
dec
ror
xlat
fistp
xlat
aam
push
inc
scas
cs
adc
cmps
pop
ja
or
repz
inc
inc
cmp
popf
iret
inc
and
(bad)
(bad)
aam
dec
ror
test
sub
ss
sub
add
(bad)
sbb
xor
or
out
xchg
or
sbb
ret
je
jmp
add
mov
push
stc
daa
adc
inc
mov
int3
lds
add
dec
dec
mov
fwait
gs
ds
dec
loopne
adc
cmp
pop
repnz
pop
mov
cmp
int
call
push
xchg
test
shr
pop
cmps
fidiv
popa
pop
xchg
xlat
or
or
es
ja
push
and
cmp
jmp
pop
popa
mov
leave
nop
sbb
ds
mov
adc
mov
mov
loop
stos
pop
adc
and
outs
adc
retf
mov
jle
jae
push
ds
jg
aad
aam
shl
(bad)
dec
and
inc
cs
jmp
leave
mov
ins
retf
mov
push
pop
test
sub
movs
sub
fst
or
cmp
adc
or
movs
mov
inc
call
adc
push
jns
xchg
mov
aas
pop
jle
popa
jge
ret
xlat
pusha
mov
ucomiss
pop
dec
jecxz
mov
sub
push
ret
adc
adc
jle
push
sub
cmps
or
pop
cmp
xlat
dec
inc
in
mov
dec
shr
xchg
jg
addr16
push
outs
sbb
repz
jne
cs
mov
mov
ds
mov
cmp
repnz
mov
pop
out
cdq
mov
lods
mov
mov
xor
das
jmp
mov
add
sbb
adc
ret
cld
mov
retf
xchg
dec
jae
lods
push
adc
jecxz
scas
mov
(bad)
aas
xor
jl
jae
sbb
xchg
lods
pop
lods
ss
xor
and
and
rol
jmp
xor
mov
or
movzx
inc
jp
imul
jmp
jmp
xor
out
popa
cs
sub
adc
jo
and
dec
push
jbe
adc
icebp
(bad)
cmp
jmp
sbb
fstp
leave
xor
mov
inc
push
in
add
repnz
xchg
jp
mov
pop
cwde
mov
cmp
inc
adc
pop
test
mov
xchg
sbb
std
jl
mov
ret
inc
movs
(bad)
cmp
sar
lea
inc
mov
jb
repz
call
jns
int3
js
xor
jp
inc
cvtdq2ps
pusha
or
adc
daa
sub
cdq
dec
sub
add
pushf
loop
xchg
sbb
jns
movs
loopne
push
mov
adc
mov
pop
stc
cmps
test
cld
lock
mov
out
push
rcl
in
adc
fsub
and
sti
inc
xchg
xchg
loopne
sbb
mov
ins
leave
pop
aaa
adc
hlt
or
mov
add
xor
mov
shl
cdq
in
repz
ss
push
mov
or
ret
test
jae
das
fdiv
cmp
stos
cmp
sti
outs
cs
ins
fmul
or
dec
js
dec
jmp
das
mov
push
xchg
ins
dec
inc
repz
mov
and
pop
sar
jecxz
movs
cmp
sti
jne
test
popa
sub
(bad)
rol
add
pop
(bad)
cmp
inc
ds
leave
clc
jle
add
and
out
stos
das
shl
add
xor
xlat
cwde
mov
push
scas
loop
or
arpl
ins
lods
jle
push
dec
icebp
in
push
or
mov
push
adc
cmp
shl
mov
out
sub
mov
or
mov
xchg
int3
sbb
fild
popf
aas
repz
or
add
inc
jmp
and
leave
mov
add
add
jp
adc
lahf
mov
mov
mov
jecxz
push
push
leave
xchg
mov
xchg
nop
jecxz
mov
movs
jmp
add
fdiv
into
pop
mov
fadd
adc
ror
sub
push
mov
ror
add
adc
sbb
or
shl
and
test
mov
stc
jbe
mov
sbb
mov
mov
(bad)
fsub
jo
fcom
mov
sub
repnz
out
test
cmp
cmp
adc
jg
jle
jne
ficomp
mov
jl
mov
lods
sahf
dec
jl
dec
pop
ss
jge
and
adc
js
rcr
jp
int
fstp
popa
add
jge
rol
in
fistp
jmp
es
and
mov
scas
cmp
inc
cmp
js
sti
jecxz
ja
inc
jbe
add
daa
sbb
movs
in
mov
adc
jg
rcr
scas
xlat
jmp
ja
test
or
out
fs
jb
jg
pop
dec
sbb
dec
add
xchg
mov
xchg
aas
mov
jmp
mov
push
cld
inc
inc
and
xor
test
icebp
loop
mov
mov
jnp
js
jmp
jns
dec
adc
mov
inc
mov
dec
sub
enter
and
mov
test
add
es
test
ds
jno
and
sbb
mov
jle
adc
out
shr
fdivr
movs
sub
push
pop
shr
mov
mov
cmc
push
xchg
pop
cmps
cmp
push
mov
mov
mov
pop
jns
mov
repz
(bad)
std
shr
cmp
ins
push
repnz
ins
nop
call
and
int
(bad)
pop
lea
push
cmp
mov
push
daa
stc
mov
out
xor
shl
outs
retf
pusha
int
jg
xchg
adc
mov
jg
mov
inc
mov
xchg
ds
imul
xchg
out
pop
pop
xor
push
xlat
lds
xchg
jmp
sbb
sub
shr
cwde
rep
add
into
cwde
ret
xor
jecxz
mov
repz
ins
fisttp
fist
mov
pop
jp
mov
scas
xor
out
jmp
push
imul
mov
addr16
test
rol
stos
shl
(bad)
enter
mov
ret
add
cdq
mov
cdq
inc
dec
dec
pop
clc
stos
pop
(bad)
fs
cmc
adc
xor
in
pop
das
clc
push
push
(bad)
sub
mov
arpl
mov
cmp
dec
dec
fwait
mov
int
ret
(bad)
in
or
adc
(bad)
mov
xlat
jmp
out
movs
adc
sbb
mov
popa
cvtps2pi
jmp
cmp
cmp
and
cmp
iret
loop
retf
mov
out
adc
inc
nop
addr16
sub
cmp
mov
adc
cli
stc
in
lods
into
mov
xor
lods
and
shr
dec
nop
rcr
lds
and
mov
push
mov
dec
shr
loope
mov
cwde
aas
jecxz
cmp
jnp
sbb
cdq
adc
mov
pop
bound
lahf
aam
push
mov
daa
adc
retf
sub
shr
mov
push
stos
in
(bad)
shl
and
push
and
inc
jmp
cmp
test
xchg
aad
jnp
jp
mov
mov
sbb
test
scas
inc
push
leave
repz
xchg
jbe
lock
popa
adc
es
add
cdq
mov
pusha
imul
(bad)
(bad)
fdivr
test
mov
sub
daa
ins
test
push
sub
pop
add
test
out
pusha
cmps
aam
jb
mov
pop
jae
clc
mov
sbb
(bad)
call
jns
jge
call
das
xchg
arpl
pop
cli
xor
xor
xchg
into
adc
pop
jae
clc
popf
out
mov
xchg
arpl
js
(bad)
sub
popa
sub
lock
pop
cmps
enter
in
pop
pop
adc
push
pop
cmp
cmp
test
pop
fnstenv
ficomp
adc
imul
iret
shl
pop
dec
ss
mov
mov
repz
mov
out
clc
pop
mov
outs
push
mov
xchg
lock
xlat
pop
pop
out
pushf
leave
pop
outs
dec
sti
cmps
xor
fucomi
mov
enter
popa
fmul
and
sbb
mov
hlt
imul
shl
inc
cmp
and
jae
inc
inc
jo
ins
mov
loopne
vmwrite
stos
cmp
clc
popa
imul
xchg
xchg
and
mov
das
shl
cmp
ja
inc
scas
aaa
scas
je
popa
pop
xchg
push
push
out
mov
loopne
sbb
iret
mov
iret
loopne
mov
jge
fadd
inc
jmp
ret
fdivr
pop
sti
repnz
shr
and
xchg
std
mov
hlt
and
jg
xchg
push
jl
jbe
dec
mov
sub
jbe
rcr
pop
xchg
sub
and
out
movs
jno
or
inc
and
sub
sbb
xchg
jl
mov
inc
or
movs
jb
pusha
lock
push
repz
retf
mov
mov
mul
rol
lea
jg
inc
jle
jns
out
sbb
jmp
sbb
ffreep
sbb
xchg
call
dec
fs
data16
jno
enter
cs
pop
arpl
push
inc
or
test
enter
add
push
cmp
cmp
pop
out
mov
hlt
push
nop
and
sub
imul
mov
imul
outs
add
cwde
ins
xchg
out
test
leave
outs
in
dec
push
ss
push
xor
jl
lods
stos
add
mov
aas
mov
test
stos
js
test
fld
cmp
cmc
cmovs
mov
sub
xchg
dec
scas
mov
repnz
xlat
xchg
retf
out
shr
out
inc
inc
pop
jge
leave
jne
(bad)
(bad)
iret
ret
pusha
or
idiv
out
or
jle
or
(bad)
adc
pop
bound
mov
repnz
xchg
bound
adc
pop
mov
jmp
lock
aad
adc
adc
mov
ja
add
scas
push
in
mov
mov
sti
je
das
mov
push
jg
cmc
or
mov
shl
fidivr
cmp
inc
dec
or
sbb
das
jge
(bad)
xor
mov
push
test
push
jp
jmp
push
das
outs
cmps
daa
push
or
cmps
adc
in
pusha
aaa
out
clc
inc
push
ins
sbb
xor
mov
scas
icebp
js
inc
and
inc
sbb
cwde
es
inc
test
push
sbb
pop
adc
mov
or
movs
repnz
mov
ja
addr16
xor
adc
push
xchg
dec
in
cmps
push
div
out
inc
pop
stos
ins
stos
clc
movs
or
arpl
sbb
idiv
mov
lods
lods
ins
sar
dec
cmps
or
pusha
xor
mov
push
out
mov
jo
fadd
ss
test
adc
test
jp
lods
int3
adc
adc
mov
xchg
pop
and
out
add
fwait
aam
pop
ror
inc
xchg
call
pop
popa
loopne
stos
outs
mov
ret
jnp
mov
and
xchg
xor
movs
sub
inc
or
ins
mov
idiv
pushf
add
ret
mov
add
or
stos
mov
xor
xchg
aad
xchg
jge
and
mov
push
aaa
fisub
xor
pop
push
jmp
idiv
xchg
outs
bound
xor
loopne
mov
aas
arpl
ret
out
inc
in
push
shl
cmp
retf
cmp
jmp
ds
mov
mov
das
jae
sbb
call
mov
sub
or
stos
pushf
into
ds
jg
in
jo
ss
cwde
sub
xor
lds
xor
ficomp
add
jmp
dec
iret
loope
aad
scas
jne
sbb
call
cmp
lods
aam
repnz
(bad)
pushf
xor
pusha
sub
mov
es
xchg
(bad)
push
pusha
mov
retf
and
inc
xor
mov
xchg
sub
out
repnz
push
and
push
jg
daa
pushf
xor
or
cmp
jbe
out
push
inc
out
loop
pop
scas
push
test
inc
gs
adc
and
in
sar
cmp
pop
fs
xchg
sub
outs
jns
lock
sbb
mov
cs
jae
xchg
mov
dec
sub
sub
jge
cmp
rep
xchg
mov
(bad)
icebp
pusha
cmp
pop
lahf
jmp
mov
shr
adc
or
xchg
push
mov
sub
out
push
js
add
repz
sub
sub
loope
aas
jnp
push
in
popa
cmp
and
cmp
das
call
add
mov
retf
stos
cmp
hlt
pop
add
out
pusha
and
xchg
imul
dec
aas
mov
adc
add
add
fwait
push
mov
out
jmp
xchg
(bad)
in
push
icebp
neg
test
inc
push
mov
daa
adc
jb
fidiv
pushf
leave
xchg
sar
inc
imul
aaa
mov
bound
mov
out
sub
add
mov
cmp
jnp
mov
das
pop
sar
in
pop
test
cdq
test
loop
fisttp
int
mov
std
aam
inc
dec
movs
cmp
mov
mov
add
rcl
iret
sbb
push
pop
mov
cld
and
sbb
xchg
test
cmc
jbe
cmp
mov
mov
push
fstp
int
(bad)
sub
lea
sbb
inc
xchg
in
in
sub
stc
and
lods
loope
dec
rcl
lock
aad
dec
mov
or
push
adc
repnz
push
or
or
jl
jmp
fldenv
add
inc
xchg
adc
test
sbb
pop
push
mov
pop
ret
sbb
pop
pop
cli
imul
lock
retf
xchg
cdq
jg
test
stc
inc
mov
loopne
dec
lods
call
mov
add
jecxz
sbb
sbb
pop
mov
test
inc
jns
push
imul
inc
cmp
test
add
and
out
push
fwait
aaa
add
sbb
jns
push
xor
std
mov
pop
(bad)
rcl
popf
(bad)
enter
mov
and
ficom
cmp
xor
fnstcw
repz
jno
pusha
xor
or
inc
dec
sti
sbb
aam
js
jno
cmp
dec
and
popa
movs
iret
out
hlt
iret
mov
and
movs
enter
lahf
out
mov
jb
and
movs
xchg
pop
fstp
jo
arpl
jmp
inc
(bad)
jmp
push
xchg
les
jg
xchg
arpl
cli
push
inc
mov
mov
fbld
fsub
pop
fidivr
loop
or
adc
mov
mov
clc
aam
or
xchg
and
js
pop
into
cmps
push
dec
nop
cmp
ror
clc
fild
test
lds
inc
out
ret
js
cmps
add
in
lock
dec
pop
mov
mov
add
fild
scas
outs
mov
cmp
inc
out
test
call
sbb
rcl
xchg
jns
leave
ror
repnz
imul
push
repz
and
cmp
jecxz
inc
psllq
retf
mov
jl
loope
push
out
clc
iret
pusha
jmp
jnp
js
ja
or
(bad)
ficomp
js
gs
std
inc
popf
aam
ins
out
imul
mov
jecxz
push
mov
pusha
js
dec
or
out
cwde
pop
out
xchg
sbb
ret
push
push
sti
push
mov
ss
mov
cs
pop
dec
ja
mov
or
sub
mov
pop
inc
cmps
jbe
sahf
cs
jle
pop
sbb
sbb
mov
cmp
push
sbb
pushf
mov
(bad)
bound
sub
hlt
dec
xchg
fwait
mov
jns
stos
cwde
adc
sub
dec
sbb
jg
ror
fimul
retf
or
cmc
out
xor
xchg
cmc
cmp
ins
popf
dec
ins
cld
stc
lea
adc
fild
aas
adc
adc
retf
push
(bad)
dec
or
and
hlt
cdq
push
dec
mov
jbe
cmps
aaa
popa
sub
mov
add
pop
dec
push
out
(bad)
jl
push
sub
in
mov
push
mov
push
adc
jnp
mov
inc
fcmovbe
cmp
adc
jmp
mov
(bad)
scas
inc
loop
or
sbb
inc
retf
pop
bound
jle
dec
cmps
dec
jae
and
mov
call
jns
inc
lock
movs
add
mov
push
inc
movs
mov
into
pop
adc
outs
mov
ror
mov
fcomp
xchg
in
ds
cmp
das
icebp
dec
mov
daa
mov
rcr
lds
xchg
cld
push
in
sbb
or
int3
cmps
test
retf
push
push
jecxz
out
ss
cmc
sbb
sti
adc
stos
inc
ins
(bad)
xor
(bad)
scas
pop
jge
or
sbb
mov
push
ret
mov
retf
(bad)
pop
shr
cmp
bound
ss
loop
xchg
mov
fadd
out
hlt
(bad)
aad
push
adc
(bad)
mov
dec
mov
xor
jne
xor
add
lock
xor
xchg
xor
data16
cdq
push
in
cdq
jbe
add
cli
and
sbb
inc
lods
sbb
in
push
add
out
lahf
icebp
or
(bad)
dec
jecxz
ja
push
add
shl
xor
movs
mov
int3
mov
call
or
and
test
jmp
hlt
in
pop
aas
or
gs
cli
in
loopne
mov
or
inc
mov
fimul
push
ret
pop
and
int3
test
sahf
jg
push
stos
xchg
xor
add
add
or
es
or
lds
dec
jge
sub
setno
imul
dec
xchg
add
jp
psubsb
add
xor
test
cmp
les
cdq
paddw
cmp
pop
scas
and
leave
sub
lods
adc
pop
int3
pop
scas
rcl
xchg
jmp
push
push
adc
jb
and
cmc
fidivr
push
mov
jp
js
pushf
sub
or
bound
adc
xchg
rol
pop
pop
gs
cmp
ja
xchg
in
outs
retf
test
mov
mov
cdq
or
outs
lods
mov
loopne
dec
lds
add
fnstcw
cmp
test
sar
test
(bad)
xchg
mov
lds
movs
icebp
nop
sub
das
inc
or
fs
xor
sti
fistp
or
inc
fbld
test
(bad)
fdivp
repz
sbb
inc
aaa
inc
and
mov
frstor
adc
test
mov
push
icebp
lods
xchg
dec
dec
jb
inc
gs
out
pop
repnz
add
sub
sub
add
cmp
retf
push
je
push
jno
sahf
popf
jb
dec
(bad)
fabs
and
lock
jg
mov
xchg
sub
sub
add
mov
(bad)
stc
cmc
mov
mov
repnz
(bad)
mov
or
shr
or
sbb
scas
outs
push
jne
and
inc
ins
in
xchg
inc
xor
scas
test
int3
push
inc
rcl
xchg
mov
pop
(bad)
in
fadd
cmps
push
dec
(bad)
(bad)
cmps
dec
jecxz
sbb
or
mov
pop
add
fistp
ror
data16
mov
jns
pusha
or
in
fistp
cmp
cmp
mov
mov
(bad)
lods
jecxz
sbb
sub
jbe
dec
fild
mov
lahf
or
dec
add
std
scas
int
mov
gs
scas
aas
pushf
or
popf
cmc
mov
xor
stos
movs
dec
mov
mov
xor
leave
add
pop
jp
repz
idiv
push
add
data16
lea
jns
jbe
mul
movs
inc
int
xor
daa
call
push
dec
call
and
sti
iret
sbb
cs
jg
and
(bad)
mov
out
(bad)
xchg
xchg
aam
xor
xor
aas
xlat
xchg
sbb
adc
scas
inc
push
test
xor
lea
test
(bad)
xlat
sbb
adc
sub
cmp
cmps
in
rcl
pop
repz
in
outs
mov
lods
mov
pop
and
test
inc
cld
icebp
mov
xchg
mov
push
call
icebp
dec
sub
movs
test
dec
outs
stos
pop
in
cwde
jl
aad
and
pop
es
cld
mov
(bad)
sub
cmp
jno
pop
inc
clc
push
pop
fdiv
pop
mov
repz
pusha
jg
scas
(bad)
pop
out
mov
cmp
sbb
out
mov
and
add
in
inc
cmps
push
lahf
fmul
cdq
xchg
and
repnz
pop
mov
mov
or
out
pop
mov
pop
leave
push
js
rep
stc
retf
jno
mov
mov
dec
pop
(bad)
add
mov
push
(bad)
pop
xchg
bound
shr
and
mov
fild
fwait
cld
out
aas
fsubr
jge
aad
jg
jle
out
iret
sub
add
out
adc
(bad)
out
mul
mov
cli
dec
imul
fmul
std
inc
into
fsubr
mov
jbe
icebp
dec
mov
jne
sar
test
jns
or
push
in
mov
adc
cmps
test
ds
ja
and
or
int
test
out
icebp
loopne
in
pusha
mov
outs
popf
xlat
cld
pop
mov
jecxz
out
test
sahf
xor
jns
call
mov
nop
call
adc
stos
mov
lahf
in
cmp
stos
mov
out
test
jbe
jae
pushf
xchg
call
movs
dec
retf
or
das
nop
jg
ror
ret
xchg
or
clc
lods
aad
fwait
mov
stos
pop
cmps
xchg
es
iret
mov
cmp
and
jmp
imul
pop
jnp
pop
push
and
sbb
popf
mov
cmps
popa
xor
por
dec
or
movs
enter
stos
mov
rcr
outs
sar
ins
lock
dec
push
jl
call
sbb
jp
mov
mov
mov
mov
into
jmp
pop
xlat
or
cdq
ror
retf
retf
dec
nop
inc
sbb
hlt
bnd
pop
dec
push
clc
mov
adc
mov
push
(bad)
mov
sub
jle
cwde
dec
retf
stos
out
(bad)
fbstp
xchg
adc
sub
push
retf
test
rol
sbb
stos
icebp
mov
int
and
pop
xchg
inc
jbe
fwait
pop
cwde
mov
lock
pmullw
ret
sbb
call
imul
push
aad
xchg
xchg
imul
pop
cmc
and
lahf
mov
es
dec
push
pop
inc
js
add
test
clc
(bad)
std
adc
mov
pop
test
adc
push
cmp
out
jns
in
and
ins
push
or
imul
xor
fistp
jmp
dec
push
std
sbb
sar
sbb
pop
repnz
jb
inc
int3
pop
push
ret
sub
retf
cdq
fs
jne
lock
adc
rcl
push
xchg
lods
loopne
cmps
lock
movs
adc
(bad)
xchg
ins
test
cld
test
push
dec
mov
sub
xchg
retf
ins
push
hlt
call
dec
sti
in
jnp
fldl2e
sbb
sti
inc
jecxz
lea
jecxz
call
mov
or
inc
ficom
xlat
jmp
sbb
shr
jmp
ja
leave
sbb
cs
cmp
das
mov
idiv
jmp
adc
shr
dec
icebp
jmp
push
push
enter
bound
je
cmp
jne
jge
jmp
nop
sub
inc
retf
cmp
push
lods
sub
lods
out
sbb
cld
dec
mov
test
lahf
xchg
into
sub
dec
adc
jo
fwait
sti
cwde
sahf
mov
icebp
int
xor
and
and
cmp
adc
(bad)
push
ss
jne
sub
xchg
xchg
in
pop
sysenter
leave
gs
cmp
dec
push
repz
cmp
in
(bad)
and
fadd
mov
ret
adc
fnstsw
daa
shr
adc
and
push
in
in
shl
adc
xor
mov
add
mul
fstp
pop
retf
push
jecxz
dec
and
pop
mov
into
cld
mov
pusha
adc
cli
push
adc
sub
and
shr
add
adc
movs
int3
mov
cdq
scas
nop
movs
and
mov
push
es
adc
cmp
dec
cmp
inc
jae
imul
into
jp
ins
xor
jmp
mov
push
mov
xchg
sub
cmps
mov
mov
test
cmc
xor
mov
sub
or
mov
jno
xchg
pop
mov
xchg
sub
out
mov
pop
jmp
mov
nop
mov
repz
dec
pop
outs
lahf
mov
gs
outs
xor
jno
sbb
xor
aas
jl
xor
mov
mov
push
lds
mov
lea
inc
lods
in
mov
mov
iret
fwait
lahf
cdq
dec
sub
mov
pop
or
lods
sahf
lods
jmp
aaa
or
xchg
leave
xlat
cld
inc
jmp
ja
sbb
and
jae
call
fisub
loop
leave
ja
sbb
out
jmp
add
cmp
in
sbb
jg
hlt
xchg
jae
es
push
push
sbb
cmp
adc
(bad)
imul
iret
and
mov
jl
(bad)
mul
pop
stos
ins
cmp
dec
or
fwait
mov
mov
les
lea
jmp
cmc
mov
mov
ficomp
adc
iret
int3
jne
lea
xchg
sub
push
push
push
mov
xchg
xchg
sub
cmc
int
mov
xchg
xchg
push
push
push
sahf
cli
jns
es
outs
inc
and
dec
test
xchg
xor
out
xchg
ror
mov
mov
jl
aas
in
mov
adc
movs
xchg
test
pop
bound
inc
mov
mov
mov
stos
cmp
dec
in
cmps
mov
test
in
mov
sbb
xchg
mov
aaa
jmp
dec
adc
addr16
push
loopne
inc
and
ins
mov
jp
or
add
xchg
sub
(bad)
jge
mov
out
je
pop
push
iret
cmps
xor
pop
xchg
in
push
adc
jmp
hlt
mov
inc
out
rol
push
jo
sub
out
jl
stos
jo
cmp
mov
add
adc
mov
push
jae
and
scas
push
mov
ret
fld
pop
(bad)
push
inc
lahf
jbe
hlt
mov
fstp
mov
mov
shl
jns
sub
push
jbe
popa
inc
adc
idiv
dec
mov
test
inc
lods
mov
push
dec
imul
mov
ret
dec
pop
call
sahf
push
mov
or
inc
mov
cmc
ins
xor
fsub
cmps
lock
and
add
jns
(bad)
push
dec
sub
push
daa
(bad)
push
lea
je
arpl
scas
sub
adc
xchg
mov
cld
xor
mov
retw
xor
or
sub
mov
dec
cmp
sub
adc
mov
rcl
lds
pop
jmp
push
add
or
xchg
push
lock
fdivr
out
push
lahf
adc
popa
out
dec
(bad)
sbb
fdivr
lahf
shr
pop
dec
dec
je
cmp
cmp
pop
sub
add
add
div
sahf
dec
mov
push
xchg
xor
mov
stc
sbb
fadd
ret
mov
dec
jmp
fidivr
mov
ret
(bad)
fstp
mov
gs
adc
pop
call
cmps
cmp
rcr
inc
jle
sub
(bad)
rol
in
cld
pop
adc
xor
or
push
std
jmp
out
fs
jg
repz
into
mov
and
xor
push
or
mov
inc
enter
pop
xchg
mov
leave
or
xchg
data16
pop
adc
fidiv
pop
fisubr
xchg
mov
mov
mov
adc
mov
call
or
add
xchg
sbb
push
push
retf
ss
or
mov
movs
pop
jg
outs
sbb
aad
std
dec
ror
push
outs
aas
xchg
popf
jne
xchg
pop
mov
fincstp
jle
aas
in
sbb
dec
pop
imul
inc
je
in
hlt
mov
(bad)
ret
add
pop
outs
inc
fst
xchg
adc
or
push
mov
pop
dec
sub
call
sti
in
cmps
setb
pop
push
push
add
jno
popa
mov
sub
cmps
fmul
push
idiv
in
jmp
aam
hlt
adc
or
iret
pop
addr16
lods
daa
std
cmp
xchg
test
jno
mov
xchg
icebp
mov
and
icebp
cmp
xchg
sub
jne
outs
inc
mov
sub
into
je
(bad)
out
movs
dec
jbe
fcomip
cld
add
add
shr
out
mov
cmp
adc
pop
les
adc
sar
xchg
lea
or
enter
dec
pop
(bad)
xchg
in
pop
adc
dec
push
sar
or
ror
push
add
mov
mov
sub
push
dec
inc
cdq
imul
pop
jbe
fwait
imul
pop
push
jns
or
hlt
stos
jns
mov
(bad)
pusha
add
aad
adc
jb
imul
ja
enter
push
cld
enter
test
jno
push
push
jle
(bad)
movs
(bad)
popa
adc
jne
enter
dec
dec
dec
jge
mov
dec
pop
lods
fstp
adc
popf
cmc
dec
fist
and
lahf
shl
push
out
mov
ror
and
push
out
in
repz
sti
mov
out
fnsave
fwait
ret
aad
fcom
xchg
popf
mov
dec
or
sub
xchg
mov
mov
pop
stos
daa
inc
cmc
push
and
pusha
mov
cmps
dec
mov
cmp
out
stos
stc
popa
cmp
stos
sbb
in
ffreep
lods
popf
arpl
js
inc
cmp
lds
jecxz
outs
and
xor
das
push
data16
fstp
push
adc
xchg
jno
dec
hlt
push
inc
mov
neg
enter
add
mov
mov
push
jle
cmps
add
js
fxtract
ja
push
mov
jl
movs
jl
enter
push
imul
mov
mov
mov
fisub
mov
pop
cwde
pop
cmp
iret
sub
hlt
fld
lock
pop
pushf
fidivr
xor
cmp
jns
sbb
int3
dec
test
les
jnp
jae
addr16
xchg
inc
les
mov
sub
push
sbb
and
inc
inc
xchg
repnz
fwait
or
scas
les
add
xor
xlat
lock
inc
scas
call
mov
stos
pop
dec
in
inc
and
or
and
scas
popf
lods
cmps
aam
mov
mov
fild
je
inc
mov
mov
push
jnp
mov
jns
es
xor
mov
pop
and
fsubr
(bad)
jb
scas
gs
xor
push
and
add
test
gs
setne
inc
arpl
movs
daa
out
sbb
add
cmps
or
dec
es
xor
cmp
call
mov
inc
xchg
and
loopne
dec
and
jnp
mov
mov
dec
es
push
loope
aad
and
add
sar
adc
pusha
mov
iret
jl
lahf
nop
mov
pop
scas
dec
adc
add
je
ins
ins
dec
ret
push
sub
or
mov
jp
cmps
jp
add
push
inc
aas
add
in
adc
cmp
sti
ins
xor
mov
xor
xlat
aam
cmp
add
test
ret
mov
(bad)
cld
jae
sbb
mov
outs
ja
cmc
inc
or
mov
inc
and
cwde
sub
outs
(bad)
das
push
jmp
mov
fnstenv
test
fidivr
push
std
xor
cwde
(bad)
push
xor
enter
sub
sbb
mov
iret
add
sbb
cmp
pop
imul
jmp
ret
jne
call
repnz
iret
test
(bad)
int3
add
aam
jns
test
scas
mov
rol
cmp
sbb
push
and
sub
scas
pushw
dec
sahf
pop
push
clc
aam
cmps
adc
imul
jns
test
dec
push
cmp
es
sub
xchg
in
daa
push
add
stos
lods
retf
scas
imul
pusha
scas
jnp
sub
jle
adc
mov
or
jo
rol
sbb
div
(bad)
dec
ja
fldenv
(bad)
jle
xor
mov
xchg
fwait
aaa
or
fistp
add
(bad)
mov
and
stc
add
cs
and
jecxz
arpl
add
imul
jno
retf
mov
cmp
cmp
dec
cmp
(bad)
int3
fild
jmp
dec
ret
es
mov
rcr
or
sub
ins
adc
and
aad
loop
pushf
mov
ins
push
shl
xchg
scas
pushf
cwde
jo
clc
jnp
fcomp
push
repz
push
sbb
and
add
enter
mov
fnclex
pop
jp
cmps
cmps
retf
scas
mov
inc
ins
popf
and
rcl
and
pop
push
mov
or
into
hlt
not
in
retf
push
sahf
fisttp
or
adc
jl
aam
loopne
jno
inc
and
loopne
sub
movs
inc
adc
mov
aas
and
ret
and
rcr
jl
loopne
jle
cs
and
int
mov
cmp
and
mov
cmp
cmps
mov
loop
fs
and
aaa
cwde
sub
icebp
jnp
mov
sub
or
shl
add
imul
je
mov
out
sbb
(bad)
stos
popa
or
mov
push
lods
add
(bad)
retf
and
shl
add
jb
push
jae
mov
mov
inc
(bad)
test
les
stc
and
dec
(bad)
stos
inc
mov
xchg
cdq
add
and
mov
dec
push
or
inc
xchg
(bad)
(bad)
xor
stos
sub
xchg
adc
shl
in
xchg
loopne
mov
fild
add
mov
lock
sbb
pop
jmp
and
out
in
and
cwde
add
popw
test
adc
push
shl
xchg
push
dec
xchg
les
sbb
sbb
lods
jl
cmps
pop
imul
inc
sti
lahf
xor
mov
call
push
jnp
xor
jmp
bound
or
mov
pop
and
ret
add
adc
inc
clc
jbe
mov
fstp
ret
test
pusha
mov
jg
mov
sub
in
into
into
jno
and
add
jmp
inc
pop
mov
popf
fisttp
sbb
and
pop
mov
and
jge
jge
adc
inc
sti
inc
icebp
mov
jp
nop
and
cld
sbb
lds
fstp
pop
mov
stc
mov
pop
mov
jmp
jne
fmul
cli
push
sub
xor
push
add
pusha
xchg
push
gs
sub
scas
test
arpl
and
(bad)
repnz
cs
shr
fstp
cmp
push
data16
aas
enter
ins
ja
mov
jns
addr16
mov
dec
cs
adc
ds
popf
and
jmp
add
jae
xchg
and
mov
xchg
xchg
adc
jno
inc
cli
idiv
cmp
jmp
loopne
push
pushf
dec
mov
(bad)
adc
inc
popf
lds
push
mov
popa
xchg
lea
xor
cmp
jnp
imul
inc
and
popaw
dec
mov
cli
arpl
out
xchg
mov
ja
mov
and
jecxz
movs
push
sbb
fadd
pop
push
sti
pop
mov
arpl
adc
icebp
fisttp
adc
ret
or
or
push
and
or
(bad)
dec
cmp
bound
or
mov
inc
mov
nop
inc
in
jno
xor
xchg
xor
push
pop
mov
in
in
mov
adc
pusha
pop
jae
rol
push
xchg
cmp
add
inc
int3
jl
pop
cld
cmp
or
and
jno
dec
push
cli
sub
adc
xchg
add
movs
pusha
xor
lods
sub
jb
int3
(bad)
test
out
xchg
out
pop
mov
mov
(bad)
fsubr
mov
push
pop
jb
in
(bad)
xchg
cmp
push
lods
xchg
cmp
lea
scas
jns
lock
scas
fbstp
dec
dec
call
mov
aaa
out
push
cmp
xlat
push
outs
aam
inc
scas
shl
repz
jmp
xchg
into
test
push
xlat
loopne
popf
sti
ffree
retf
xor
out
in
in
retf
ret
mov
hlt
mov
mov
dec
call
(bad)
hlt
cmp
aam
push
cmc
fldenv
xor
dec
cmp
out
cmp
xor
sub
imul
push
inc
scas
(bad)
mov
test
out
mov
in
or
stos
imul
inc
dec
sti
cmps
sbb
stos
ror
mov
or
inc
ins
jp
call
movs
dec
add
push
in
(bad)
jne
adc
shl
cmp
push
test
in
xor
loopne
pop
ret
mov
adc
ins
mov
adc
outs
sar
popa
fisub
inc
jle
ss
enter
mov
sti
jnp
cwde
and
pushf
add
rol
mov
mov
push
scas
push
push
es
or
jnp
cmp
sbb
test
mov
sar
add
mov
push
add
shl
or
jo
punpcklwd
jmp
fidivr
and
cmp
scas
aam
fld
mov
xchg
test
xchg
je
inc
push
push
rcr
int
sbb
sub
pop
shr
das
cli
xchg
dec
xchg
mov
rol
in
pop
gs
pusha
inc
and
fild
pop
and
mov
std
ficom
and
js
dec
mov
in
push
dec
loopne
call
fwait
push
repz
in
adc
mov
fist
call
cmp
and
cwde
add
je
inc
add
imul
movs
pusha
xchg
sub
xor
push
xchg
add
jnp
push
(bad)
add
rcr
clc
inc
mov
iret
xor
hlt
fcomi
or
cmp
js
xchg
loope
add
mov
adc
or
mov
push
push
cmps
cdq
and
dec
retf
lds
jmp
xor
cmp
or
jbe
sti
xchg
sar
data16
jno
sahf
scas
psubusb
and
xchg
arpl
xchg
inc
nop
and
cmp
adc
fwait
scas
cmps
movs
lods
push
sub
ror
xchg
mov
adc
outs
and
jmp
(bad)
icebp
add
sbb
inc
rcl
mov
push
add
loopne
xchg
mov
xor
icebp
hlt
inc
rcl
mov
dec
cs
jmp
dec
test
push
cwde
jb
adc
es
rcr
xlat
mov
xlat
fsub
rcl
mov
jmp
das
xchg
sahf
push
std
pop
retf
mov
cmp
mov
out
outs
icebp
jae
sbb
ja
push
or
fst
mov
xchg
retf
dec
push
mov
pop
int
xchg
xchg
push
cmc
fwait
(bad)
sub
fbstp
push
jmp
pop
fwait
inc
pop
fwait
std
out
or
push
or
jle
adc
(bad)
mov
inc
adc
jl
fst
call
iret
loopne
push
mov
or
pop
rcl
inc
stc
inc
mov
pop
sbb
and
popf
inc
sub
add
hlt
test
aam
cmp
movs
adc
std
(bad)
xchg
dec
lahf
aad
aad
jns
inc
jmp
sbb
adc
dec
ret
pop
jno
xchg
retf
(bad)
pop
or
or
cmps
aas
repnz
sti
gs
fxrstor
cmps
iret
push
or
push
xchg
adc
xchg
mov
(bad)
cmp
or
aas
lock
mov
add
mov
aaa
mov
jbe
movs
(bad)
movs
and
sub
bound
jno
test
cmps
cwde
xchg
pop
out
jno
xchg
xchg
jne
or
push
add
into
cmp
fnsave
xchg
lea
fcom
mov
(bad)
or
(bad)
inc
fstp
mov
jne
lods
jae
mov
jno
mov
in
iret
fmul
icebp
sbb
icebp
xchg
push
cmp
aam
cmp
xchg
pop
scas
mov
retf
add
jp
sti
add
icebp
call
mov
call
inc
es
pushf
cwde
jbe
push
bound
das
cmp
int
push
inc
jmp
in
sub
or
daa
xchg
call
sub
sahf
sbb
add
in
scas
scas
loopne
fwait
pop
ja
movs
pop
scas
imul
inc
fwait
(bad)
mov
dec
fwait
sbb
bnd
jnp
sub
push
and
mov
lea
jp
outs
push
pop
outs
xchg
dec
sub
mov
dec
stos
hlt
jnp
push
outs
fst
call
pop
jg
push
mov
push
and
dec
or
pop
aam
push
mov
scas
and
movs
dec
adc
dec
std
and
ins
adc
and
jecxz
inc
xchg
add
or
pop
stos
dec
bound
dec
xchg
or
leave
inc
cdq
fs
or
sbb
mov
dec
popf
pushw
std
and
int
stc
in
or
int
sahf
(bad)
dec
enter
adc
sub
or
jmp
and
and
mov
jmp
mov
(bad)
das
ins
enter
test
(bad)
mov
std
sbb
retf
inc
fist
mov
xor
fcomp
jbe
mov
sar
rcl
(bad)
jp
daa
nop
in
jo
pop
imul
shr
in
dec
iret
movs
pop
clc
pushf
mov
or
ins
vzeroupper
fnstenv
out
push
cli
fistp
cwde
ins
mov
add
sar
test
popf
lock
mov
mov
pop
mov
scas
add
mov
pusha
fist
sbb
add
mov
fcomp
aaa
movs
inc
mov
pop
add
int
data16
or
push
mov
add
mov
test
sbb
push
pop
mov
xor
shr
xchg
jmp
(bad)
aad
pop
mov
push
cmp
mov
imul
jmp
cwde
leave
dec
call
retf
pop
push
mov
aam
pop
ja
jl
call
sbb
stos
jmp
jge
mov
fcomp
(bad)
stos
arpl
push
fcom
fnstenv
popa
pop
retf
rol
jno
inc
retf
sub
scas
in
mov
outs
jne
push
jge
addr16
inc
into
hlt
push
fld
sub
(bad)
fld
add
and
stos
mov
in
js
(bad)
fld
push
popf
add
pop
out
jne
mov
dec
sar
fist
add
inc
sub
mov
adc
pop
movs
adc
inc
(bad)
ss
mov
push
or
sbb
int
(bad)
sahf
adc
and
cmc
push
inc
pop
or
inc
dec
or
cmc
in
hlt
out
int3
jb
mov
in
sub
int3
in
cmp
ror
sub
inc
in
ss
repnz
cmp
mov
and
lock
xor
inc
push
retf
fimul
or
mov
sbb
fs
adc
xlat
rcr
push
ins
dec
pop
enter
hlt
jns
lds
pop
loopne
lock
enter
faddp
add
mov
add
cld
jno
cmps
mov
push
daa
fs
sub
in
and
dec
(bad)
iret
mov
daa
es
jg
xchg
push
popf
add
fdivr
jne
sub
iret
addr16
dec
adc
add
jnp
repnz
popa
sbb
or
sub
leave
daa
xchg
jge
js
into
pop
push
mov
inc
mov
jmp
lds
push
jo
xchg
out
inc
fmul
jne
arpl
and
ins
shr
mov
(bad)
mov
push
enter
mov
dec
adc
mov
fisttp
aaa
aam
cdq
(bad)
neg
and
sub
mov
enter
cdq
xchg
push
pop
sub
adc
retf
jp
out
or
mov
push
aam
inc
ss
cmp
shl
std
sti
jmp
adc
rcl
or
addr16
sub
sub
sahf
idiv
inc
fld
test
fadd
sub
dec
lods
add
pop
rcr
ret
fisttp
mov
(bad)
retf
pop
loopne
jne
push
cs
add
sub
les
xchg
push
mov
(bad)
or
fmul
adc
in
xor
aam
aaa
mov
sub
mov
(bad)
cmp
scas
push
shl
(bad)
lds
fbld
mov
inc
mov
pop
cmps
sbb
pop
cmp
sub
adc
xchg
fcomp
jbe
dec
inc
inc
add
jp
sub
shl
rol
or
mov
xor
pop
cmp
inc
ror
pop
xchg
pop
inc
dec
inc
imul
into
lods
fdivrp
bswap
cli
ss
mov
jg
and
add
stos
ja
mov
add
xor
push
fwait
imul
int
add
xor
(bad)
cmp
mov
outs
sbb
dec
sub
data16
outs
and
or
call
rol
leave
ja
mov
(bad)
in
test
push
in
retf
cmp
inc
rcr
aas
aaa
sub
fbld
imul
jl
add
fst
pop
cmp
dec
mov
into
xor
fldcw
scas
clc
sub
sbb
pop
sbb
in
push
or
and
and
mov
ficomp
or
jmp
jns
loopne
ret
mov
mov
out
or
adc
(bad)
mov
sbb
sti
sbb
dec
adc
mov
jnp
ror
mov
inc
inc
xchg
idiv
pop
pmovmskb
outs
push
(bad)
sub
jmp
dec
mov
out
sbb
movs
xlat
neg
or
ret
(bad)
in
dec
mov
dec
inc
ins
imul
ss
push
fstp
idiv
daa
lea
mov
sti
xchg
fmul
retf
push
nop
dec
adc
xchg
pop
fwait
adc
je
jecxz
jp
test
aad
cmps
stc
push
push
aaa
sahf
hlt
test
sbb
xchg
ja
cmp
ds
jno
in
(bad)
ins
push
cmps
pushw
cmp
cmps
lahf
push
sub
pop
(bad)
sub
fisub
movs
pop
in
sbb
test
and
mov
adc
test
pop
scas
cmp
lods
inc
jne
outs
lods
mov
inc
cmp
dec
neg
es
xchg
rol
(bad)
not
ret
add
sub
mov
jo
lea
in
push
mov
jbe
xor
ss
mov
mov
test
call
push
push
or
xchg
ret
fbstp
add
pop
jnp
push
jns
sbb
jns
mov
and
mov
sbb
inc
es
call
std
dec
es
mov
mov
dec
xchg
mov
cdq
jg
sub
mov
ret
jmp
adc
shr
cld
shr
outs
mov
aas
dec
adc
xchg
pop
push
fs
repz
movs
mov
stc
or
pop
sub
stos
jns
sub
cmps
call
in
xchg
push
mov
inc
add
xor
icebp
test
leave
loope
scas
mov
sub
hlt
out
adc
ror
sahf
daa
or
cmps
mov
or
mov
adc
mov
fdivr
clc
mov
pop
cmps
adc
imul
mov
ins
sti
sbb
sub
call
fabs
(bad)
bound
fnstcw
xchg
and
cmovns
push
xchg
ror
pop
idiv
dec
(bad)
pusha
cmp
jbe
fs
aam
daa
pushf
mov
rcl
imul
sub
adc
adc
cmps
cmp
adc
les
xchg
retf
jno
ret
dec
jnp
mov
sub
push
xlat
adc
sub
scas
daa
jne
dec
push
cli
dec
mov
and
xchg
popf
retf
push
sbb
call
call
inc
jle
pop
xor
call
cmp
pop
add
(bad)
mov
adc
dec
jg
fmul
sbb
sub
popf
fiadd
das
das
sub
jbe
or
mov
leave
mov
sub
test
stos
add
stos
pop
retf
sbb
pop
mov
ret
xchg
lods
pop
dec
xchg
stc
outs
adc
outs
cmps
inc
lods
jmp
cmps
xchg
div
cmps
mov
jae
aas
mov
ficomp
icebp
ret
jge
pop
aas
jmp
mov
xchg
push
aaa
pop
sub
mov
je
jb
loope
mov
out
in
xchg
aad
js
je
cli
pushf
push
inc
leave
pop
movs
push
fcomp
jl
sbb
fbstp
ret
inc
jmp
dec
mov
xchg
push
(bad)
enter
inc
jne
loop
add
sbb
mov
or
push
fldcw
mov
xor
xchg
nop
pop
dec
push
or
or
scas
pop
ja
mov
adc
fbstp
push
imul
push
dec
or
jecxz
iret
repnz
xchg
retf
push
jne
movs
cmps
xlat
mov
xchg
pop
adc
cmps
mov
add
mov
inc
pusha
pop
out
jle
sbb
(bad)
out
fadd
enter
(bad)
cmc
cli
push
push
mov
stos
clc
je
test
fsub
les
xor
test
sbb
test
mov
movs
mov
js
mov
or
bound
sbb
retf
xchg
jmp
adc
aam
inc
ss
ret
cwde
hlt
xor
outs
pop
dec
and
fs
in
iret
(bad)
(bad)
dec
mov
pop
scas
iret
scas
or
mov
enter
or
sub
sbb
push
sub
bound
fstp
push
sbb
cmp
or
jo
ins
push
scas
mov
fistp
sub
cwde
cmp
inc
lock
jl
mov
cmps
inc
mov
cdq
or
rcr
jecxz
cmps
inc
fwait
add
nop
or
mov
or
(bad)
xchg
inc
call
repnz
mov
add
in
mov
test
test
mov
sub
mov
ins
inc
xor
add
sar
test
loope
push
lds
scas
sbb
xor
fcomp
dec
ret
mov
iret
mov
cmp
push
push
out
std
sti
lds
mov
mov
mov
loop
popa
rol
jbe
mov
dec
das
cmp
cli
stos
out
and
sbb
(bad)
in
mov
test
(bad)
pop
(bad)
push
inc
sub
cmc
imul
cli
lods
aaa
(bad)
mov
push
mul
fs
jg
ins
jbe
xchg
sbb
mov
adc
clc
jle
neg
test
mov
mov
jle
out
leave
add
jmp
pop
js
sub
mov
neg
push
fbstp
xor
xchg
outs
(bad)
mov
inc
out
ror
lods
rcr
jmp
xlat
ins
cmc
pushf
cmps
jmp
cwde
nop
ins
lods
aam
iret
(bad)
sar
movs
cld
cmp
repnz
push
inc
test
in
aaa
adc
sbb
inc
xchg
imul
inc
sbb
mov
es
xchg
fwait
cld
aas
and
dec
push
or
jle
sbb
xchg
test
or
(bad)
sbb
xor
out
xchg
push
push
mov
shr
test
icebp
or
jo
loopne
ins
out
jecxz
mov
cmp
mov
sub
std
(bad)
xlat
jo
test
in
mov
je
jmp
test
mul
pop
sbb
rcr
adc
or
fcomp
xchg
idiv
mov
out
dec
movs
ss
or
je
(bad)
cmovp
pop
mov
fimul
imul
mov
add
sahf
aaa
mov
sub
mov
pop
lea
daa
ds
mov
push
mov
cmc
dec
and
inc
add
(bad)
sar
pop
jge
(bad)
pop
push
mov
pop
xchg
das
mov
clc
xchg
and
mov
mov
push
jmp
mov
mov
je
push
and
pop
fbld
inc
cmps
xchg
add
push
cmp
ret
sbb
or
into
dec
inc
xor
rol
aam
mov
pop
pop
mov
pop
and
ja
scas
jne
push
xor
outs
fsubr
sbb
out
add
cmps
int
adc
movs
and
jp
shr
jl
adc
cmp
jecxz
or
add
lods
test
sbb
ror
shr
xor
jp
sub
push
icebp
hlt
retf
call
or
or
pusha
mov
pop
xchg
gs
sub
hlt
aad
push
add
ror
in
pop
clc
in
mov
xchg
test
inc
icebp
or
xor
push
dec
lahf
out
or
jp
add
retf
retf
lods
mov
imul
push
add
sub
shl
mov
mov
pop
add
add
stos
aaa
and
or
mov
sub
repnz
jbe
sbb
and
xchg
and
dec
cmp
ret
out
in
and
lds
xlat
fs
cdq
in
fsubrp
mov
stos
xor
lds
lds
jmp
aas
std
push
repnz
popf
add
push
push
ret
jb
pop
retf
mov
movs
test
cdq
mov
xor
shr
xchg
mov
cld
cmp
pop
and
adc
pusha
mov
(bad)
pusha
mov
inc
in
repz
mov
inc
data16
inc
add
xor
xor
jmp
jae
mov
pop
(bad)
out
cld
jae
bt
repnz
inc
(bad)
pop
mov
(bad)
int3
mov
dec
fadd
outs
pop
mov
adc
pop
movs
xchg
inc
dec
ficom
call
xchg
mov
neg
dec
ins
pop
jge
inc
das
xchg
enter
cmp
ret
mov
imul
mov
hlt
add
push
sar
cld
loope
cmp
jo
cs
test
repnz
enter
or
call
dec
clc
push
out
outs
sbb
sahf
stc
cmp
mov
xor
jle
jno
lahf
call
inc
mov
cmp
push
(bad)
push
ss
adc
jae
inc
and
sbb
cmc
std
adc
imul
pop
push
mov
inc
sub
cwde
shl
cwde
sub
nop
jge
and
and
pop
loopne
or
js
pop
imul
(bad)
mov
in
mov
xchg
push
jecxz
jnp
sub
pushf
mov
adc
mov
lock
sbb
sbb
dec
maskmovq
stc
dec
sbb
push
or
ins
push
leave
test
and
sub
sbb
div
in
rcl
ret
xor
push
out
lods
popf
pop
sub
popa
pop
or
xchg
push
sbb
inc
sub
shr
cmova
mov
pop
popa
mov
arpl
movs
out
out
xchg
and
ds
and
addr16
ins
je
pop
rcr
or
xchg
sub
sbb
ror
es
mov
les
mov
clc
stos
adc
dec
jg
shr
inc
je
jbe
inc
in
pop
jns
sbb
mov
or
cmp
inc
jb
test
leave
sbb
stos
stc
test
cmp
push
mov
dec
xlat
jp
sbb
sub
push
dec
movs
jge
ss
in
sub
cmps
inc
and
jne
jmp
or
dec
fild
aaa
call
ins
lods
and
xor
push
int3
test
push
ja
cld
(bad)
xor
nop
fmulp
push
arpl
in
pop
mov
sub
push
inc
sub
sahf
inc
and
repnz
xor
mov
fldcw
pop
mov
test
sbb
das
std
cmp
adc
pop
add
int3
(bad)
fimul
mov
pop
in
sti
push
push
test
jge
std
adc
pop
push
imul
sub
dec
and
jnp
add
int
icebp
inc
ins
das
mov
dec
ins
jae
push
adc
cld
mov
sbb
lea
adc
out
push
je
je
dec
sbb
cli
cli
jl
pop
shl
fdiv
(bad)
iret
data16
push
xchg
jns
icebp
cmp
cwde
call
cmps
adc
push
xor
ds
repnz
in
ret
pop
mov
jns
hlt
xchg
fist
call
mov
mov
jge
out
neg
push
mov
cmp
cli
push
mov
sub
push
mov
pushf
(bad)
bound
dec
mov
or
rcr
or
adc
xor
xchg
ds
xor
leave
sub
rcl
dec
add
push
push
mov
sbb
and
xchg
dec
repz
aad
mov
cwde
(bad)
cld
dec
dec
stos
push
sahf
cmp
mov
push
repz
push
jmp
jae
das
fimul
test
push
mov
cmp
fld
aam
mov
mov
and
(bad)
cmp
(bad)
pop
lahf
bound
push
(bad)
jmp
add
arpl
mov
pop
mov
xchg
mov
sub
sbb
mov
fwait
dec
cmp
sar
fidivr
rcl
sub
mov
cmps
ins
mov
(bad)
inc
fcmovne
jg
mov
ret
mov
push
jmp
imul
bnd
cmp
lahf
pop
mov
mov
fild
hlt
stos
popf
(bad)
out
dec
sub
xchg
xchg
ficom
outs
shr
daa
xor
adc
mov
ja
sbb
fwait
sar
add
shl
cmp
and
sub
dec
retf
nop
jno
xchg
sbb
ret
or
cmp
mov
bound
les
dec
dec
fmul
sub
push
pusha
jmp
push
mov
jne
fsub
fwait
add
les
push
inc
and
data16
cdq
fdiv
dec
mov
mov
into
std
pop
jbe
out
mov
rol
(bad)
push
js
cmp
push
lods
test
push
inc
sbb
push
retf
ins
xor
mov
xor
cmc
mov
fstp
pop
pop
fnsave
out
(bad)
push
ja
xchg
jo
outs
jp
xchg
aas
cdq
mov
repnz
js
mov
nop
xor
iret
dec
out
xchg
cmp
dec
daa
jmp
mov
cmp
or
cmp
test
xchg
mov
xor
bnd
and
stos
lods
xor
inc
sar
mov
sbb
mov
xchg
fisub
lahf
push
inc
test
mov
stos
ins
xchg
fwait
push
loop
mov
xor
gs
cld
inc
push
jns
mov
mov
push
mov
pop
pop
(bad)
xchg
dec
mov
inc
inc
scas
push
(bad)
jecxz
jno
sub
sbb
and
pop
push
xor
dec
arpl
cwde
pop
pop
cmps
pop
xchg
popa
jecxz
xchg
ins
icebp
out
test
sbb
movs
and
xchg
(bad)
aas
popf
mov
sbb
or
lods
ror
int3
rcr
or
mov
cmp
pop
fs
js
cld
or
push
pop
and
mov
xchg
ffreep
sub
popf
cwde
xchg
adc
jmp
fwait
je
dec
jno
popa
push
cmp
mov
or
lods
push
retf
mov
xchg
jl
cmc
fsub
pop
ret
or
lods
inc
push
fidiv
mov
pop
cli
cmps
jns
pop
mov
cmp
lea
add
jmp
push
inc
in
mov
imul
imul
jnp
test
fbld
cmp
xor
mov
sub
mov
shl
repz
movs
mov
scas
shr
cmp
and
aaa
mov
xor
dec
mov
faddp
ret
jg
jb
pop
push
dec
xchg
jge
mov
pusha
scas
sub
mov
in
or
iret
jmp
loopne
pusha
push
jno
xor
sbb
sub
outs
pop
push
jmp
push
daa
dec
fnstenv
js
mov
or
sub
(bad)
mov
xor
stos
imul
pop
dec
add
cmp
out
mov
push
pop
xor
xchg
and
push
jns
(bad)
lahf
jns
lock
mov
arpl
dec
mov
shl
jae
imul
mov
push
sbb
jle
jb
aaa
enter
mov
retf
push
lahf
(bad)
ss
ficomp
jbe
adc
pop
mov
je
ret
nop
ins
lea
sbb
adc
es
adc
fbld
in
jae
and
and
and
and
jmp
dec
adc
outs
pop
(bad)
out
retf
bound
rcl
mov
sar
mov
ret
xor
sub
xchg
cmps
cmp
and
dec
sub
repz
xor
jmp
fstp
imul
sub
add
inc
outs
and
sbb
mov
jo
bound
dec
or
gs
aad
outs
push
xlat
push
lds
test
ror
jns
cmc
dec
adc
add
push
arpl
jp
pusha
sub
push
dec
ror
xchg
jne
mov
aas
popf
icebp
or
jnp
or
xchg
jmp
outs
adc
xor
sbb
add
out
or
out
push
push
sbb
pop
lea
jl
lods
jmp
out
and
mov
jle
lds
add
mov
sbb
push
das
fwait
into
or
pop
push
push
adc
mov
not
pop
in
sbb
xor
pop
in
xchg
push
pop
cs
and
xor
fadd
call
retf
lods
pop
xor
imul
mov
xchg
cld
std
mov
cmp
mov
or
cmps
jo
(bad)
adc
ret
inc
inc
mov
xchg
mov
fidiv
or
add
jle
sub
and
cmc
stos
fsin
das
in
icebp
ins
adc
test
xchg
jp
fstp
or
jl
cld
sbb
fs
pop
stos
fistp
rcr
test
(bad)
test
fldcw
loop
frstor
hlt
dec
pop
add
mov
xor
(bad)
or
mov
sbb
add
cmp
jno
mov
(bad)
jl
outs
sbb
inc
cmp
lock
scas
push
ss
ror
cmc
mov
jae
ret
daa
ds
outs
out
and
xchg
addr16
lods
ret
adc
pop
or
xchg
push
call
mov
xchg
xchg
shr
jge
or
mov
fcom
xchg
iret
sub
leave
push
lds
rcr
arpl
adc
imul
aad
mov
adc
movs
mov
and
dec
or
ret
pop
xor
sar
test
xlat
loopne
xor
test
push
ja
outs
adc
inc
daa
ins
aas
pop
jl
cmp
ret
shl
mov
loop
and
inc
pop
or
jle
sbb
mov
aaa
and
pop
ror
mov
stc
das
hlt
loope
jmp
hlt
cdq
mov
lds
cwde
sbb
pop
inc
xchg
mov
sub
mov
cmp
jle
adc
ja
scas
fcom
cmp
or
pop
adc
pop
cmc
lds
xor
stc
pop
fnstsw
out
adc
pop
push
aaa
add
sub
mov
or
loope
fucomi
dec
rol
inc
pop
mov
test
add
and
xchg
xchg
mov
and
in
jl
pop
int3
push
or
jecxz
mov
out
xchg
sbb
and
mov
or
sub
and
adc
dec
jno
arpl
push
fnop
stos
mov
jmp
popf
into
jg
arpl
fnstenv
mov
std
aam
ret
mov
add
fisttp
scas
mov
pop
enter
adc
pop
xor
mov
ror
call
popa
mov
in
sub
test
push
lahf
adc
test
int3
stc
mov
and
xor
adc
repz
mov
mov
push
nop
jle
bound
inc
sub
ror
pop
cdq
inc
sub
adc
mov
sbb
push
lods
(bad)
js
jb
xor
addr16
xchg
out
jo
add
xchg
shr
dec
mov
nop
test
inc
mov
sub
(bad)
inc
cmp
dec
popa
adc
push
bound
repz
pop
mov
xchg
and
test
int
inc
mov
mov
int3
inc
push
jp
inc
mov
imul
sbb
jge
mov
and
mov
repz
mov
enter
cmp
xlat
je
call
fnstenv
or
mov
gs
inc
sbb
add
cmp
add
mov
xor
imul
enter
pushf
mov
pop
out
sub
cmps
or
cs
call
imul
out
sti
ret
out
ins
sbb
daa
xchg
aad
cmps
ss
mov
inc
push
or
xchg
imul
mov
cmp
sbb
ins
adc
mov
cwde
mov
adc
xor
add
push
les
psubw
add
cmp
jbe
jge
mov
inc
daa
arpl
stos
cmp
iret
cmp
test
push
pop
dec
inc
aaa
sbb
std
xchg
mov
push
fsubr
mov
je
cld
mov
test
push
cmc
out
ret
ins
es
xchg
shl
(bad)
adc
loope
lahf
pushf
fs
mov
mov
push
dec
adc
std
cmp
pushf
add
mov
xor
pusha
mov
mov
jmp
push
icebp
out
and
push
bound
sub
test
and
xchg
in
push
jb
(bad)
test
xchg
dec
idiv
test
stos
mov
adc
xchg
xor
jae
aas
xor
adc
aas
shr
es
out
sti
inc
ins
test
retf
inc
imul
mov
jle
gs
(bad)
pop
xlat
scas
es
loop
(bad)
int
mov
ja
push
or
loop
cmp
adc
sub
push
mov
and
cmp
mov
mov
bound
fs
fsubr
pop
out
mov
leave
les
sub
push
mov
sbb
jae
jp
cmp
or
ss
pop
jnp
xor
push
inc
pop
(bad)
and
jg
lds
pop
aad
mov
(bad)
sbb
shr
cwde
fisub
inc
into
xor
mov
add
out
add
fst
in
ins
iret
inc
adc
or
stos
movs
test
adc
ror
sti
(bad)
xor
xor
sbb
ret
mov
mov
sub
push
ins
push
test
push
retf
das
adc
mov
jnp
pop
sbb
xchg
adc
mov
mov
aas
add
daa
sbb
in
mov
stos
dec
push
(bad)
aam
xchg
mov
and
mul
dec
aad
sbb
nop
mov
jl
mov
sbb
cmps
mov
pop
cmp
mov
cmp
xchg
sti
sub
sub
fwait
fwait
pop
int3
jp
(bad)
int
sahf
jbe
lea
dec
mov
and
mov
cmp
sbb
xchg
(bad)
mov
pushf
stc
fwait
and
push
je
push
(bad)
(bad)
mov
fdivr
jmp
push
or
adc
and
mov
(bad)
int
jle
out
mov
(bad)
stos
or
daa
inc
jmp
je
mov
mov
loope
or
nop
jo
pop
lea
cli
xchg
jmp
dec
xchg
xchg
sbb
les
out
pop
cmp
xor
mov
xchg
add
jae
aas
cld
(bad)
ret
mov
dec
mov
mov
aam
cmps
mov
nop
sar
and
cmp
bound
adc
add
pop
pop
icebp
dec
ss
add
mov
lahf
scas
inc
movs
repnz
arpl
repz
sub
in
sbb
xor
std
xchg
out
cli
fsubr
sub
jnp
fucom
mov
mov
data16
call
mov
sub
popf
inc
lods
mov
les
mov
jno
jnp
lds
mov
add
xchg
mov
fstp
das
add
or
push
xchg
cmp
add
ret
cmp
mov
add
aaa
xor
pop
int3
inc
add
adc
les
int3
jge
mov
lods
and
test
mov
cmc
or
inc
mov
out
(bad)
ret
sbb
in
ret
xor
ins
cmc
pop
dec
bound
jecxz
jns
adc
fnstsw
enter
popf
fdivr
fs
xchg
ret
fnsave
and
in
push
int
xchg
gs
cmp
mov
xchg
cmps
add
aas
cmc
adc
out
mov
jmp
mov
lods
pop
inc
xlat
rol
jmp
mov
adc
mov
cmc
cmps
adc
call
pop
jg
cmps
psubq
and
addr16
das
ins
push
fs
push
mov
sub
and
rcl
pusha
call
xchg
jns
add
jbe
fdivr
xchg
lea
les
sti
xor
cmp
sub
inc
adc
ins
leave
sti
mov
sbb
sbb
pop
lahf
and
movs
xor
sbb
add
pushf
pushf
shl
pop
mov
aad
add
push
iret
or
(bad)
rcl
repnz
xor
fs
xchg
xor
pop
pop
loopne
sub
mov
mov
jno
mov
out
or
out
pop
cmp
pop
jmp
cmp
repz
cdq
dec
rcl
push
push
in
pop
mov
adc
les
cmp
push
sbb
js
dec
jo
mov
pop
pop
xchg
nop
push
push
jl
cli
mov
sahf
dec
lock
test
and
sub
jl
lock
adc
push
push
jo
inc
(bad)
(bad)
cmc
stc
fsubr
clc
hlt
xchg
dec
add
call
or
mov
jno
push
push
lods
fiadd
int
or
jecxz
mov
aaa
xchg
out
lds
pop
jmp
outs
xor
push
or
mov
stc
xor
gs
pop
and
pop
mov
iret
fs
push
xchg
cmp
add
jo
repz
add
push
fucom
stos
sbb
sub
jne
xlat
xor
lahf
mov
push
out
popa
jno
adc
fsubr
cmp
dec
je
cmp
stos
sbb
ja
ficom
adc
call
mov
dec
test
jg
adc
push
(bad)
jg
dec
int
pop
jne
adc
mov
clc
xor
aas
lods
(bad)
ret
mov
adc
sub
sub
fisubr
aam
xor
fwait
rol
cmps
mov
test
outs
sub
and
in
shl
cmc
out
lahf
daa
mov
fld
mov
test
jge
mov
mov
mov
lea
aas
pop
scas
push
sub
je
shl
push
leave
xlat
(bad)
fld
rcr
pushf
mov
iret
add
shr
xchg
jne
out
sahf
adc
jge
or
sub
pop
cmp
fisttp
dec
xchg
add
(bad)
jmp
in
xchg
mov
imul
mov
lock
dec
inc
fwait
pushf
inc
mov
mov
in
or
cld
scas
jge
(bad)
dec
pop
xchg
jmp
push
cmps
imul
das
ret
xchg
pop
cld
xor
loope
cmc
jo
mov
cdq
fadd
leave
or
push
inc
mov
jecxz
fnstcw
mov
sbb
mov
outs
into
or
(bad)
call
jo
mov
jno
xchg
fwait
cli
inc
lahf
add
loop
xchg
(bad)
pop
or
cwde
stos
mov
dec
xor
fstp
pop
clc
mov
es
push
pop
rol
cmp
push
fisttp
cmp
data16
adc
dec
aaa
lods
mov
mov
test
cmp
push
mov
loop
cmc
mov
xchg
fdiv
push
in
cmp
adc
xchg
arpl
je
jns
into
mov
mov
aam
mov
dec
gs
mov
dec
es
sar
jge
das
and
xor
scas
loopne
mov
out
aas
(bad)
and
pop
sub
stos
push
imul
cdq
in
sbb
jl
xchg
xchg
jns
call
cdq
cli
cmc
jnp
in
xor
mov
sbb
dec
mov
test
int
sbb
and
or
xchg
fisub
cmp
sub
sub
outs
arpl
fs
push
into
dec
jo
jg
xor
or
aam
push
cdq
in
scas
(bad)
enter
sub
pop
xchg
scas
cli
repnz
outs
scas
push
test
jb
fisttp
and
push
scas
(bad)
mov
data16
jbe
xchg
in
mov
mov
mov
ins
pop
adc
adc
or
xchg
outs
int
jne
lods
(bad)
repz
push
or
int3
xchg
daa
and
cmp
cmp
pusha
lea
fsubr
mov
or
aaa
inc
xlat
xchg
and
in
retf
es
jle
es
repnz
fsub
xor
test
jmp
cmp
bound
add
pop
gs
inc
ret
repnz
jmp
das
loopne
aaa
cmp
ins
retf
add
in
cmp
dec
pop
jge
(bad)
ds
mov
dec
push
lea
push
cmp
lahf
repz
jge
mov
ret
pop
push
inc
pop
div
pop
pop
sub
push
push
inc
nop
cmp
in
das
and
ins
icebp
xor
ins
cli
iret
pop
dec
or
sbb
fbld
sahf
cmps
fsubr
xlat
mov
add
stos
jne
mov
push
sahf
sbb
jno
push
ins
xor
add
cmp
add
xor
fs
pop
sbb
push
rcr
cmps
cmp
leave
js
(bad)
repnz
xchg
xor
(bad)
jo
and
or
popa
dec
xchg
mov
shl
in
aas
add
inc
xchg
ins
xchg
adc
test
call
push
hlt
sti
adc
mov
int3
sub
in
cmps
and
clc
outs
cli
addr16
pop
aas
add
xchg
add
xchg
fld
(bad)
rcl
inc
(bad)
out
stos
mov
sub
in
mov
xchg
add
jp
jle
ins
inc
gs
sbb
jnp
sub
or
push
xor
sub
mov
adc
mov
pop
stc
je
imul
rcr
and
xchg
popa
outs
mov
fcmove
scas
movs
adc
or
adc
or
and
xchg
mov
sahf
adc
pop
rcl
movs
sbb
mov
push
aam
popa
cmp
xchg
or
adc
mov
inc
pop
das
loop
mov
xchg
cmp
sub
sub
in
mov
or
emms
mov
xor
push
mov
push
pop
rcl
jge
pop
pop
sbb
cs
inc
sub
sahf
mov
clc
pop
div
mov
fistp
sti
cld
(bad)
ficom
pop
push
retf
adc
mov
cmp
xor
jb
xor
movs
or
rcr
lods
jle
stos
lods
cmps
ins
stc
xor
push
pushf
stc
sub
adc
and
jae
loope
inc
outs
sbb
stc
pop
xor
push
xor
push
xor
lods
sahf
or
xchg
lea
pop
mov
mov
xchg
xor
sbb
push
ss
push
jg
pop
sbb
(bad)
push
fs
shl
pop
mov
test
mov
mov
add
cs
mov
mov
sbb
dec
mov
sub
stc
cmps
pop
sub
aaa
mov
dec
adc
sub
xor
pop
stos
or
add
hlt
fbstp
xchg
stos
jns
sub
dec
mov
pop
add
int3
jnp
hlt
inc
sti
rcr
loope
xor
out
and
cmp
movd
jle
cwde
sbb
imul
js
jp
aad
loopne
pop
stos
cwde
pushf
ja
retf
xchg
cs
jp
add
fnsave
or
ror
xor
test
push
idiv
dec
dec
(bad)
sub
mov
mov
dec
push
dec
call
test
fldcw
adc
lds
mov
(bad)
inc
dec
jle
jmp
ret
mov
ret
cdq
ret
inc
imul
jp
dec
aaa
adc
out
add
outs
mov
push
test
or
pop
jmp
xlat
(bad)
test
out
int
sub
mov
lods
js
jbe
cmc
mov
sbb
mov
sti
enter
or
push
xchg
in
xor
out
iret
ins
push
mov
sbb
loope
(bad)
fld
xchg
or
mov
pop
jbe
push
aad
adc
push
adc
(bad)
mov
mov
add
and
lods
mul
in
sbb
push
stos
sahf
popa
(bad)
movs
in
jge
mov
test
(bad)
cmp
mov
push
lods
xor
arpl
jmp
mov
mov
dec
aam
cdq
(bad)
lahf
xchg
sahf
in
loop
das
ret
fisttp
fwait
or
daa
lea
add
fsub
imul
aaa
int
cmc
fstp
push
xor
xor
lds
cmp
in
xor
inc
stos
and
shr
out
bnd
jae
mov
aas
pop
cmc
mov
mov
ficom
int
inc
dec
ss
push
cmp
sar
(bad)
inc
ins
inc
push
and
push
int3
cli
das
retf
mov
mov
in
(bad)
call
lahf
cmps
mov
mov
dec
cli
repz
ins
imul
jl
ror
xchg
push
popa
pop
xlat
jmp
inc
pop
add
jno
dec
ds
mov
cmps
mov
xchg
inc
cmc
addr16
loopne
fxch
loop
push
or
or
clc
sbb
push
aas
repnz
xor
(bad)
js
aaa
push
scas
(bad)
(bad)
test
adc
mov
and
out
movs
scas
lods
xchg
pop
sub
mov
cmc
sbb
push
into
fimul
adc
pop
test
sbb
stc
fistp
(bad)
addr16
push
mov
imul
inc
mov
test
xchg
dec
add
mov
xor
inc
push
pop
xor
outs
lahf
jno
shl
lea
push
mov
dec
pop
xchg
nop
loop
sbb
jo
lock
imul
jnp
call
cld
pop
(bad)
das
mov
inc
dec
sahf
ret
mov
loop
lods
loope
mov
hlt
retf
inc
das
rcr
enter
jmp
daa
jmp
sub
hlt
xor
inc
add
inc
inc
clc
loope
js
mov
aas
mov
pop
jb
arpl
jg
or
cmp
sbb
scas
aam
dec
mov
outs
push
aam
jae
loope
hlt
ja
push
enter
ffree
adc
ja
imul
(bad)
xchg
shl
shl
xchg
clc
mov
js
bound
out
enter
cmp
jo
sbb
mov
pop
xor
inc
leave
arpl
cwde
mov
cmp
mov
add
inc
sbb
cmps
cdq
mov
sub
sbb
stos
pop
push
(bad)
jo
mov
pop
retf
mov
mov
sub
icebp
vmovupd
xchg
inc
cmp
cld
dec
pop
arpl
cdq
mov
popa
int3
dec
fcmovnb
lock
cmp
xlat
fild
dec
fwait
push
adc
es
sahf
lea
aam
movs
lods
cmp
push
dec
mov
xor
cmp
pop
or
and
pop
nop
shl
lea
call
test
jbe
outs
ficom
dec
dec
xor
fbstp
ss
and
pop
or
loop
loopne
hlt
lea
xchg
cli
adc
in
addr16
add
jb
mov
(bad)
mov
push
aam
retf
icebp
add
out
xlat
mov
iret
mul
fstp
gs
add
push
dec
sub
ss
sbb
fcomp
sbb
rcl
and
jb
inc
(bad)
ins
jae
cld
retf
mov
pop
xchg
je
jb
pop
xor
std
cdq
arpl
mov
cmp
fidivr
es
push
mov
movs
push
xchg
sbb
pop
fcom
(bad)
stos
jp
lock
pop
mov
out
pop
sub
test
xadd
mov
in
(bad)
cmp
je
jae
loopne
sbb
sar
xor
lods
fisttp
out
pop
dec
cmp
shl
jp
(bad)
jb
jmp
xchg
jne
jb
or
and
neg
out
xlat
adc
enter
sub
imul
loop
vpsubsb
loope
mov
mov
popf
dec
push
sub
pop
neg
cli
sub
ror
cmp
out
xor
mov
pop
mov
jae
inc
jne
xchg
repnz
in
outs
adc
jmp
dec
call
xor
xlat
shr
push
std
out
aad
adc
mov
dec
or
sub
sbb
mov
push
and
aad
or
out
in
pop
lods
sbb
sahf
js
cmc
mov
xchg
stos
loope
out
xor
loopne
pop
(bad)
imul
cwde
mov
jg
fsub
mov
sub
cmc
mov
adc
sbb
ds
das
stos
push
(bad)
stos
lds
push
xor
xchg
fucom
or
dec
pop
and
lods
cmp
jmp
or
data16
out
inc
scas
mov
mov
jmp
cld
ss
jns
mov
outs
xor
push
mov
les
ins
add
cmp
xchg
mov
cld
rol
stos
adc
sti
or
pop
data16
aas
and
jae
inc
test
addr16
mov
and
mov
adc
fist
dec
and
pop
lods
in
mov
push
hlt
or
daa
mov
push
or
and
gs
sbb
xor
stc
inc
cmp
cld
cmp
stos
sbb
xchg
sub
and
movs
cmps
arpl
mov
xchg
pop
stos
sbb
mov
xchg
jo
xchg
push
clc
dec
jno
imul
dec
xchg
sbb
jns
test
mov
mov
and
test
mov
push
or
imul
pop
imul
push
cmps
fwait
test
push
addr16
adc
jb
ret
imul
aaa
cld
std
inc
nop
mov
add
data16
dec
xchg
call
push
int
lock
dec
mov
jnp
jg
enter
fcomp
add
xchg
fwait
xchg
dec
inc
jb
push
fist
shr
jns
test
cmp
xor
push
fist
mov
sub
jecxz
pop
shl
xchg
mov
aaa
inc
pusha
lea
dec
fnstcw
xchg
popa
clc
fstp
dec
mov
aas
push
call
jns
add
jecxz
pop
in
outs
ins
adc
(bad)
call
(bad)
dec
clc
jbe
(bad)
mov
es
retf
lahf
(bad)
sbb
inc
popf
jg
fisttp
popf
ret
inc
pop
cmps
shl
cld
bound
rcr
jecxz
add
sub
mov
xor
cli
sub
jle
(bad)
stos
aad
call
sbb
test
fmulp
sub
ins
test
mov
shl
push
jmp
shr
cmps
xor
xor
and
pop
cmps
xchg
test
xor
pop
push
sbb
mov
scas
js
adc
sbb
out
pslld
std
jmp
xchg
adc
in
add
cmp
jae
mov
push
sbb
retf
aaa
fsubr
ret
jp
pop
sub
pop
jbe
dec
js
sbb
pop
pop
jp
cs
mov
adc
dec
and
sbb
dec
imul
scas
push
pop
dec
(bad)
frstor
mov
fwait
push
pop
adc
je
imul
stos
outs
aam
pop
jl
sahf
mov
jge
jns
mov
in
lods
shr
pop
call
retf
add
dec
int
(bad)
cdq
jnp
pop
lea
push
pop
cmp
inc
mov
xor
and
(bad)
hlt
iret
test
mov
xchg
or
(bad)
push
aam
cs
mov
push
stos
or
jne
arpl
push
into
popf
sbb
in
sbb
test
push
jne
sub
(bad)
pop
mov
inc
std
loope
inc
add
pusha
ds
or
in
fcom
cmp
push
adc
in
std
or
popf
pop
push
shl
sub
xor
jne
mov
add
frstor
aam
lods
loope
sbb
mov
(bad)
sub
jge
pop
and
adc
das
js
ror
mov
sbb
sub
adc
push
scas
test
aaa
loope
sub
(bad)
push
and
pop
adc
dec
sub
loope
jle
fsubr
jno
ret
popf
repz
mov
inc
mov
pop
pop
cld
sub
push
inc
push
test
push
xor
xchg
fwait
push
fisttp
xchg
mov
mov
enter
mov
rcr
mov
fwait
rol
call
mov
lock
out
pop
call
mov
in
dec
popf
mov
add
call
mov
not
(bad)
pop
cld
xor
adc
jae
push
sbb
inc
pop
add
sbb
fisttp
and
jne
fadd
dec
xor
cmp
hlt
jge
add
dec
scas
int3
push
aas
push
and
mov
jmp
outs
sti
scas
hlt
sbb
pop
not
outs
pop
push
pop
jl
ror
xlat
in
jbe
shl
adc
mov
push
or
add
push
(bad)
cmps
(bad)
cld
pop
iret
nop
mov
sbb
pop
push
ret
iret
loopne
aas
or
xor
sbb
push
ins
cmp
stos
fdivr
icebp
xor
mov
or
xchg
jbe
jg
xor
or
out
test
or
mov
popa
xor
in
pop
in
pop
in
mov
xchg
mov
push
jge
add
and
pop
loope
cmp
pop
lods
dec
cmp
scas
sbb
mov
pop
lods
sti
pushf
add
inc
dec
movs
mov
fst
mov
mov
loop
xor
pop
jle
mov
movs
xacquire
mov
or
fwait
inc
push
jmp
in
sahf
add
out
inc
push
jno
mov
repz
inc
fdiv
xor
not
xchg
dec
mov
xor
test
stos
scas
enter
and
cmps
adc
xor
or
shl
mov
icebp
das
cmp
dec
or
sub
xor
imul
cmp
pushf
mov
mov
loope
ds
pop
out
fwait
leave
mov
rcr
fs
and
(bad)
mov
lahf
add
pop
push
into
and
mov
popf
es
fs
xacquire
test
inc
pushaw
scas
xchg
and
repnz
icebp
jecxz
dec
lahf
ror
imul
fwait
sbb
test
pinsrw
std
outs
je
xor
lea
inc
cmp
clc
scas
xor
out
mov
jmp
dec
inc
and
push
adc
ins
cmps
iret
mov
cmp
mov
popa
mov
cmp
add
loopne
cmp
rol
or
inc
fidivr
mov
repnz
jo
and
inc
out
inc
int
fst
mov
mov
jle
mov
xchg
pop
int
out
dec
dec
dec
push
pushf
mov
jbe
inc
inc
jmp
inc
cmps
xor
mov
and
into
jp
pop
push
in
aas
push
das
mov
scas
div
inc
push
add
hlt
jns
and
test
fadd
sbb
arpl
cmc
aad
scas
add
xchg
test
cmps
(bad)
adc
xchg
add
(bad)
jp
mov
jno
pop
mov
mov
outs
enter
and
xor
pushf
or
(bad)
mov
shr
dec
push
mov
mov
stos
or
adc
into
adc
(bad)
cmp
adc
fsubr
or
adc
js
pop
xchg
cmp
pop
mov
jecxz
inc
cmp
add
xchg
cmp
adc
sbb
push
mov
cmp
(bad)
js
(bad)
retf
retf
sbb
cmp
dec
inc
cs
xor
(bad)
mov
movs
adc
xor
cld
sub
(bad)
mov
dec
or
mov
je
ror
mov
inc
dec
mov
test
jbe
sbb
pop
adc
cmp
and
lods
scas
pop
nop
xor
mov
xchg
add
and
int
repz
loopne
and
pop
jo
jnp
int3
and
rcr
inc
sbb
inc
xchg
retf
dec
mov
test
cmp
arpl
inc
or
push
in
test
ins
cdq
or
pop
mov
loop
sub
adc
mov
dec
iret
cdq
pushf
test
mov
xor
leave
movs
arpl
push
jle
aaa
outs
ror
ret
fdiv
test
xor
mov
or
pop
std
pop
data16
les
loopne
mov
pushf
dec
mov
cmp
lods
ret
scas
pop
add
bnd
cmp
cmp
add
test
xor
and
arpl
sbb
rcr
das
pop
xchg
sbb
or
xlat
mov
ja
(bad)
sub
sub
sub
int3
dec
lods
ret
rcl
mov
or
dec
imul
test
imul
push
sub
test
jle
ss
ret
add
xchg
mov
and
std
retf
xchg
and
lock
aad
or
hlt
mov
sub
xchg
dec
orps
mov
ins
push
dec
mov
cmps
clc
fdivr
mov
jns
xchg
sub
xor
jmp
test
mov
rcl
out
cmps
add
daa
or
cs
std
cdq
adc
xchg
ja
out
xchg
movs
(bad)
jns
out
scas
dec
imul
sbb
sub
std
xchg
test
xor
data16
push
or
enter
mov
cmp
sub
adc
sbb
pop
das
xchg
pushf
out
xchg
leave
scas
mov
cwde
fisubr
or
mov
test
out
imul
popf
mov
xor
xchg
int3
fs
xchg
shl
cdq
inc
jae
out
inc
sub
or
aas
aad
loop
sub
pop
or
push
fwait
cmovge
(bad)
and
cmps
mov
dec
jae
xor
or
fnsave
mov
xchg
push
add
repz
les
push
mov
es
out
imul
pusha
sbb
mov
jl
ds
lds
mov
repz
arpl
scas
dec
jp
dec
lahf
aad
add
jmp
jno
test
xor
shl
add
push
dec
jb
div
cmp
fiadd
push
es
mov
arpl
(bad)
push
das
sub
cmp
cmp
movs
or
mov
xlat
into
push
fidivr
sti
fwait
(bad)
lds
inc
jmp
adc
jno
popa
adc
mov
push
adc
jmp
xchg
mov
or
ins
clc
inc
pop
inc
dec
out
mov
into
xor
mov
fs
rcr
(bad)
iret
ret
repnz
adc
inc
and
out
dec
dec
icebp
pop
mov
xchg
shl
and
mov
xchg
mov
in
and
mov
adc
mov
mov
push
add
rol
loope
ins
inc
adc
xlat
jl
stc
xor
fisubr
rep
sub
xchg
cmp
cmp
aaa
mov
xchg
inc
mov
push
add
mov
sar
icebp
mov
and
es
sbb
mov
retf
mov
aaa
aaa
ror
jp
cmps
dec
fisub
mov
(bad)
mov
jg
pop
ret
cmps
mov
push
and
lods
push
lds
test
aas
jae
mov
(bad)
push
inc
and
into
fdivr
paddw
ficomp
add
adc
xchg
fs
jo
jae
xor
sub
ja
dec
xchg
inc
inc
pop
or
adc
ror
pusha
xchg
(bad)
fsub
xor
mov
imul
mov
fidiv
out
dec
or
aas
push
je
ins
push
cdq
push
in
mov
dec
ficomp
mov
xchg
sbb
xchg
into
pop
popf
xchg
popf
aaa
mov
xchg
and
outs
(bad)
data16
push
daa
lds
and
and
jb
mov
mov
arpl
cmc
arpl
popf
xchg
cmps
daa
jmp
add
mov
inc
aad
jle
(bad)
jo
cld
ja
jecxz
sub
outs
dec
fst
xchg
mov
ficom
and
lods
and
std
lock
push
(bad)
rol
pushf
aas
outs
mov
mov
or
test
sbb
inc
push
mov
aas
retf
sar
sub
sub
call
into
pop
mov
jmp
es
push
mov
or
jp
add
into
(bad)
pop
sub
xchg
pop
and
mov
dec
jmp
inc
mov
out
fistp
or
lds
fdivr
adc
adc
out
test
dec
sbb
jmp
enter
adc
int
(bad)
sbb
push
jmp
sub
cmp
add
shr
lahf
adc
shl
sub
push
cmp
ret
push
fadd
es
ins
jle
ins
sti
inc
pop
aam
out
mov
sub
mov
leave
sti
mov
test
cs
mov
push
lock
and
inc
loop
and
sbb
cdq
call
imul
sti
inc
pop
xlat
dec
ins
pop
outs
inc
add
push
cmps
sub
loopne
or
ins
mov
jae
push
mov
in
dec
cs
shr
sub
mov
sbb
stos
cmp
es
adc
xchg
pop
int
sub
data16
iret
jb
icebp
std
push
jb
loopne
repz
xchg
jo
xlat
mov
or
ds
xchg
in
ss
mov
adc
sub
test
iret
jge
push
xor
sub
neg
gs
push
jmp
cmps
inc
push
push
xchg
dec
dec
lea
mov
cmps
mov
and
pop
dec
sub
xchg
mov
jne
mov
and
(bad)
iret
cmp
out
loopne
cmp
mov
mov
lock
sti
fcomp
adc
pop
js
cdq
cmps
movs
xchg
retf
pop
loop
mov
repz
sti
mov
add
mov
cmp
jmp
push
xor
cld
cmp
inc
pop
jmp
inc
dec
cdq
or
lahf
popa
pop
sub
mov
xor
dec
(bad)
jb
push
ds
or
repnz
and
icebp
stos
test
adc
not
push
mul
add
mov
or
repz
hlt
cmp
out
pop
sbb
inc
adc
cli
xor
xchg
mov
sahf
(bad)
fnstsw
out
ins
cmp
fisubr
sub
cmps
add
(bad)
dec
add
mov
aam
fdiv
or
cdq
in
or
mov
push
mov
mov
pop
push
ss
mov
fnstsw
test
in
and
mov
jns
das
inc
cmp
cmp
inc
int3
sub
mov
xchg
test
test
mov
fild
xor
cs
call
(bad)
jg
pop
je
and
aad
icebp
mov
add
out
mov
push
aaa
pop
fcomp
cmc
test
pop
loope
(bad)
jle
and
loope
mov
xor
clc
aas
test
hlt
mov
and
add
mov
pop
adc
dec
iret
stc
or
leave
mov
mov
xor
and
leave
ja
xor
sub
ret
xchg
js
movs
call
in
fstp
cld
xor
outs
jge
aaa
loopne
call
in
push
clc
mov
scas
sub
mov
inc
or
inc
loopne
cmp
cwde
(bad)
popa
rol
ret
mov
aaa
pop
lds
lea
das
adc
cmp
inc
fcmovb
ja
shld
and
pop
fild
cwde
pop
sahf
dec
rcr
imul
sbb
icebp
stc
add
xchg
mov
adc
add
aaa
sbb
ins
cmp
xor
ja
xor
outs
clc
aas
sbb
dec
jmp
ret
jg
and
sti
sti
clc
loop
outs
jmp
(bad)
imul
std
jmp
pop
into
int3
mov
enter
cmp
inc
mov
jecxz
mov
std
div
aam
push
sbb
xor
mov
mov
dec
xchg
pop
ficomp
imul
sub
ins
xchg
cmp
xor
adc
cld
js
pop
(bad)
in
es
les
mov
jns
and
out
popa
popf
push
icebp
test
out
arpl
loope
xor
iret
mov
data16
scas
jmp
mov
sbb
sbb
rol
mov
cmp
jb
out
nop
mov
popa
sahf
enter
pop
mov
mov
std
add
xor
lods
in
pop
mov
jnp
cs
inc
cld
aas
not
jne
sti
bound
enter
dec
dec
mov
and
stc
dec
inc
fwait
das
inc
cs
cmp
fnstenv
mov
out
dec
int3
cwde
ins
xor
or
or
sub
or
cdq
xchg
iret
adc
pop
pop
mov
jbe
int
rcr
jne
dec
into
add
mov
in
stc
cmps
mov
mov
adc
push
aad
mov
imul
and
cmps
dec
add
mov
add
mov
and
pop
pop
pop
test
sub
loop
fmul
pop
xor
(bad)
mov
inc
mov
and
dec
(bad)
mov
jl
inc
int
jb
jg
repz
cli
jns
xchg
dec
mov
jmp
jb
mov
jae
cmp
je
bound
sahf
dec
adc
sbb
push
pop
nop
xchg
adc
fsubp
cdq
push
neg
movs
jmp
stc
dec
mov
stos
loope
jae
mov
test
cmps
push
gs
inc
jp
mov
xor
cmp
dec
test
inc
push
jg
adc
lds
mov
pop
in
leave
cmp
xor
sbb
pusha
mov
sub
cmp
mov
in
leave
mov
rcl
jno
fisub
fsubr
sbb
mov
data16
mov
pop
std
or
dec
xor
imul
add
inc
std
aaa
retf
xor
cwde
pop
arpl
add
and
and
xor
mov
pop
xor
or
fwait
ins
lds
xor
les
adc
mov
lfs
aaa
mov
loop
jmp
imul
lods
loop
test
adc
xlat
jecxz
xchg
push
cmp
jnp
stos
es
repz
or
aas
pop
xbegin
push
aad
mov
adc
icebp
push
(bad)
mov
out
push
cmp
aad
fs
pop
pop
daa
mov
out
ret
xor
and
push
inc
mov
push
les
out
std
mov
movs
sahf
cwde
fdiv
movs
and
sbb
stos
dec
addr16
inc
aad
jecxz
out
sahf
loopne
lds
or
(bad)
shl
fistp
jmp
aam
cmp
lods
mov
in
leave
movs
std
cmps
push
(bad)
in
mov
xchg
jns
cmp
pop
pop
test
jge
shr
outs
movlps
jl
imul
hlt
pop
ja
mov
pop
inc
fld
xchg
add
pop
(bad)
mov
xchg
nop
push
sbb
xchg
dec
and
xchg
xchg
mov
test
push
cmp
and
repnz
das
outs
in
test
jns
cmp
jbe
out
adc
jle
fisttp
mov
mov
out
mov
test
sub
cdq
xchg
fadd
dec
sbb
mov
sub
pop
mov
loop
jge
lods
pop
(bad)
loopne
cmc
xchg
icebp
arpl
xor
fcomp
aad
mov
ss
or
popa
imul
shl
xlat
int3
adc
mov
rcr
xchg
pop
or
loopne
aad
loope
mov
or
push
push
js
loope
dec
and
lock
pop
pop
mov
(bad)
arpl
mov
fcom
xor
jge
push
jle
jo
mov
inc
xor
clc
sti
call
sub
or
pop
cmp
pop
xlat
scas
mov
ins
dec
xor
out
sub
fld
aas
dec
xor
ret
jecxz
aas
add
sub
int
lds
mov
std
add
(bad)
leave
xchg
das
movs
jmp
mov
xor
rcl
jno
sbb
sub
movs
loope
mov
cmp
cmp
hlt
(bad)
retf
jb
scas
repz
mov
aas
out
ds
das
pop
pop
adc
popf
push
imul
nop
scas
jbe
xchg
retf
imul
push
add
xor
inc
js
cmp
ret
push
mov
xchg
mov
fsub
jno
jo
add
mov
ss
(bad)
prefetcht1
in
mov
lahf
jo
movs
push
xchg
shr
fcom
sbb
lea
lock
mov
jp
popa
iret
pop
jbe
lock
shl
stos
push
jp
call
test
cmps
enter
lahf
xor
mov
dec
push
arpl
fisub
xor
dec
dec
(bad)
pop
sbb
arpl
cld
(bad)
xor
stos
jne
ds
mov
shr
sahf
outs
popa
lods
mov
or
lahf
into
or
adc
(bad)
sbb
out
movs
mov
imul
nop
fcom
lahf
icebp
add
push
int
mov
test
adc
(bad)
jge
mov
dec
sti
mov
xchg
mov
outs
cmp
xlat
push
pop
and
push
div
jns
jb
js
je
cmp
push
dec
push
les
jnp
scas
jns
xchg
sahf
xchg
fsub
adc
pop
(bad)
aas
and
adc
push
xor
data16
mov
xlat
dec
out
inc
cmp
sub
fld
retf
jle
push
iret
movs
xchg
int
xlat
adc
or
arpl
outs
pop
enter
or
sbb
mov
cmp
loopne
das
or
lods
or
jg
xlat
and
push
add
test
or
cld
mov
stc
xlat
cmp
pop
dec
ds
cs
popf
cmp
xor
and
mov
lock
imul
jb
enter
mov
jb
movs
addr16
(bad)
repnz
sbb
fadd
out
mov
add
imul
push
aam
fwait
mov
push
(bad)
pop
dec
mov
push
jno
movs
jle
jbe
and
movs
mov
bound
nop
movq
jge
jmp
pop
cmps
xor
inc
mov
push
xor
cmps
dec
push
jo
test
lods
mov
xlat
call
aaa
movs
cwde
inc
and
and
and
xchg
push
or
(bad)
pushf
cmp
mov
stos
pop
dec
les
fnstsw
test
xor
jnp
mov
dec
lds
rcl
push
outs
pop
repnz
dec
push
sbb
scas
inc
daa
cmp
imul
test
shr
pop
cmp
pop
adc
call
stos
push
scas
mov
ret
add
mov
not
loop
sub
cwde
xlat
mov
mov
sub
addr16
cmps
daa
loope
or
xor
jl
(bad)
ret
jge
sub
adc
mov
inc
in
cmps
out
ret
and
test
xchg
sbb
mov
fdivr
jp
outs
mov
out
and
loopne
rcr
stos
jnp
mov
or
and
ins
adc
sub
mov
cs
push
adc
mov
xor
mov
xchg
daa
xchg
inc
adc
sub
ins
mov
pop
push
out
loop
imul
dec
jp
sub
in
sub
xor
push
push
fild
inc
in
inc
xor
ret
(bad)
or
ret
test
jecxz
xchg
pusha
cs
das
mov
pop
mov
xchg
cs
sbb
mov
jle
jg
jbe
mov
push
cmp
inc
inc
sub
adc
mov
dec
(bad)
das
xchg
fld
mov
cli
out
dec
jae
mov
shl
sub
cs
aaa
int3
jle
nop
dec
jecxz
inc
lods
loope
dec
into
xor
sbb
stos
jns
or
mov
(bad)
and
std
mov
xor
mov
pop
popf
popa
or
movs
and
mov
(bad)
jl
pop
in
xchg
mov
cmp
xchg
jb
sub
ss
rcl
stc
test
jmp
mov
popf
in
fisttp
dec
popf
in
xchg
xchg
jae
(bad)
pop
mov
rol
mov
inc
popf
call
sbb
(bad)
(bad)
(bad)
(bad)
das
jmp
lock
pop
mov
add
outs
stos
or
fwait
imul
or
pop
(bad)
pop
pop
(bad)
jne
sbb
leave
ins
(bad)
clc
cmp
stc
pusha
test
jl
ja
pop
daa
jp
ret
and
nop
cmc
mov
mov
mov
mov
sti
add
pop
ss
sbb
add
call
rcl
xchg
imul
dec
pop
xchg
adc
xchg
stos
inc
mov
jnp
mov
jo
dec
push
xchg
int3
pusha
data16
(bad)
loop
xlat
ja
icebp
mov
loope
out
adc
adc
nop
jle
jae
nop
scas
cmp
push
adc
push
ja
push
mov
(bad)
xchg
sub
push
cs
int3
add
dec
jmp
adc
cmp
cmp
dec
and
dec
pop
mov
pop
popa
cmp
std
jge
adc
add
out
bound
rcl
(bad)
popa
lock
push
jae
jno
iret
dec
xor
xchg
jecxz
loope
in
loop
mov
mov
jge
pop
push
sahf
aas
out
sbb
xor
jo
mov
or
ins
scas
xchg
int
jae
pop
inc
scas
std
sahf
cmps
sub
or
out
pop
or
mov
sub
cdq
dec
dec
push
addr16
mov
xchg
ret
jo
push
mov
inc
(bad)
jo
sub
pushf
dec
pop
mov
fmulp
ret
les
test
mov
pop
rcl
cmp
ficomp
imul
pop
sub
mov
adc
add
inc
mov
and
jne
add
mov
xor
scas
into
jae
inc
ins
sub
repnz
movs
int
push
inc
pop
in
cmc
data16
(bad)
sbb
jecxz
ficomp
jbe
xor
cmp
sbb
push
xchg
cs
arpl
cwde
jmp
adc
test
int3
imul
mov
hlt
inc
push
ds
int3
dec
mov
mov
cli
leave
pushf
or
fldenv
fs
sbb
dec
add
inc
cmps
rcr
ds
pop
retf
sar
(bad)
mov
or
inc
cwde
fs
mov
pop
fstp
inc
jg
das
xor
push
sbb
std
outs
cwde
inc
mov
retf
enter
add
mov
mov
or
adc
sbb
sbb
xor
mov
pop
xor
loop
or
sbb
jne
fwait
sbb
mov
(bad)
retf
pop
jmp
lea
mov
jbe
jbe
jns
add
out
daa
es
lahf
int
dec
jle
leave
mov
shl
inc
loopne
pop
je
jge
iret
sbb
aad
fcmovne
jg
hlt
or
inc
sbb
jg
loope
mov
and
fdivr
mov
ror
xor
and
or
cmc
add
add
in
jle
cmp
xchg
xor
push
xchg
mov
mov
fidiv
sub
lea
repz
iret
loop
jmp
cmc
sti
mov
mov
mov
(bad)
daa
aad
addr16
ins
mov
enter
or
xor
shr
mov
inc
in
pop
or
xchg
mov
push
mov
les
rol
adc
sar
test
das
call
or
or
sti
sar
sbb
jnp
jecxz
movs
cmps
push
repnz
and
pop
pop
(bad)
icebp
ficomp
pop
shr
(bad)
adc
sub
jmp
sbb
outs
mov
mov
sbb
ror
das
xchg
mov
push
pop
sub
add
cmp
cwde
scas
cmp
push
pop
mov
inc
push
add
inc
aaa
nop
mov
add
xor
inc
pop
jl
adc
das
dec
inc
xor
icebp
int3
pop
dec
inc
cmp
cmc
sub
jle
scas
sub
std
ds
sbb
std
mov
mov
sbb
push
fs
dec
daa
ss
mov
(bad)
dec
xor
movs
jno
aam
mov
pop
pusha
sbb
bound
push
dec
mov
outs
neg
add
and
(bad)
(bad)
icebp
sbb
inc
mov
cli
inc
xchg
xchg
add
in
loop
sub
in
push
hlt
(bad)
fisttp
or
pop
sub
mov
out
inc
mov
or
out
stc
mov
and
pusha
ja
sbb
es
pop
je
hlt
aaa
pop
sbb
xor
test
aas
(bad)
mov
add
inc
lds
sahf
jg
into
adc
fsubr
fst
sar
cmps
cdq
ret
xchg
scas
jmp
ror
sub
push
sub
push
aas
cmp
jns
cs
adc
jmp
and
in
test
scas
jne
pop
xlat
mov
xchg
xchg
xchg
aad
pop
das
push
sub
xlat
lock
(bad)
sbb
mov
dec
nop
mov
sbb
add
push
ficom
mov
push
mov
push
inc
sub
ret
int
cmp
mov
push
lahf
adc
push
xchg
pop
mov
icebp
ja
cmp
into
sbb
xor
push
add
and
mov
push
js
shl
(bad)
pusha
cwde
mov
cmps
push
loope
xchg
ins
mov
repnz
pop
sbb
inc
push
add
and
sbb
fimul
cdq
push
call
jp
enter
sub
mov
je
or
xchg
push
inc
pop
fidivr
outs
xor
jo
(bad)
cli
xchg
ds
hlt
jle
mov
outs
lock
inc
idiv
xchg
pop
xchg
outs
int3
xor
jno
daa
xor
cmps
cmp
sub
mov
fsubr
mov
mov
test
mov
(bad)
dec
ins
fisubr
and
sbb
xchg
fwait
cwde
loopne
push
pop
pop
xor
jl
and
adc
dec
lahf
pop
mov
mov
fsubrp
ret
jb
jo
mov
mov
cli
aad
jmp
shl
out
xchg
leave
inc
gs
repz
mov
or
or
pop
mov
sti
xor
js
inc
mov
cmps
or
and
and
sub
mov
mov
fsubr
shr
sbb
pop
mov
repz
mov
rcr
es
sbb
pop
(bad)
fyl2x
rol
lds
jl
cwde
mov
cmp
aam
dec
sub
jmp
idiv
test
jno
fld
addr16
fdivr
jecxz
push
add
adc
fdivr
fidiv
adc
test
imul
pop
or
ja
inc
add
adc
adc
rcr
(bad)
dec
mul
out
jne
xor
ror
add
stc
adc
das
bnd
pop
aad
mov
push
pop
xchg
(bad)
cli
jnp
push
dec
and
jnp
and
das
adc
fisttp
mov
cmp
and
mov
jne
sbb
and
repz
adc
in
imul
jmp
out
fstp
xchg
pop
repnz
inc
js
lds
fdiv
daa
xchg
scas
(bad)
xchg
loope
scas
call
mov
mov
cld
dec
cmp
repz
jge
mov
mov
fstp
mov
movs
scas
aaa
movs
inc
arpl
sub
out
mul
mov
shl
shr
jo
sub
pop
or
fsub
clc
dec
mov
mov
iret
pop
cmp
shl
mov
mov
sub
(bad)
and
cs
jnp
out
cmp
mov
adc
sbb
(bad)
mov
repz
mov
add
lock
out
push
jnp
in
cmps
(bad)
cmc
add
dec
in
ficom
ins
in
loopne
in
xor
inc
mov
jge
lds
out
inc
dec
sub
int3
ret
jae
push
loopne
scas
int
sub
rcr
cmc
push
adc
mov
std
call
in
sub
xor
jecxz
adc
push
jecxz
mov
in
and
dec
pop
cmp
xchg
adc
jmp
popf
mov
gs
div
cli
div
inc
cmp
jmp
addr16
test
cmp
jl
mov
cmp
loop
js
aam
nop
add
sbb
push
xchg
push
arpl
and
cmps
mov
sub
add
ss
jecxz
mov
pop
jle
inc
nop
sub
cmps
(bad)
jecxz
test
xor
ror
retf
outs
sbb
(bad)
loop
icebp
jg
aam
sbb
bnd
adc
fisttp
push
mov
and
les
std
mov
loope
mov
fiadd
xchg
dec
or
mov
popf
outs
nop
add
mov
(bad)
dec
cwde
xor
sahf
das
jno
xchg
pusha
jbe
stos
adc
test
and
loope
ins
loop
mov
retf
cli
jb
fs
adc
dec
outs
fs
jne
and
mov
push
jae
and
jmp
inc
dec
jmp
sbb
mov
jp
movs
xchg
mov
sub
jg
sar
push
add
loop
cmps
add
and
cmp
retf
mov
popf
add
sar
fnsave
fsubr
pop
aas
popa
mov
stos
out
mov
adc
pop
mov
loope
aaa
push
(bad)
out
(bad)
sahf
ret
and
stc
add
es
lock
push
pop
mul
jbe
test
sbb
push
sbb
mov
aas
fnstcw
test
jg
inc
sbb
call
sub
cmp
lock
cmp
xor
mov
in
les
fadd
sbb
pop
icebp
push
sub
mov
dec
jno
jnp
jmp
stos
js
mov
sub
xor
inc
add
(bad)
in
repnz
gs
push
jecxz
dec
stos
mov
int3
sub
pop
aaa
aam
jo
cli
aad
or
gs
outs
div
jns
out
movs
mov
push
push
fs
loope
bound
xor
enter
fidiv
pop
das
test
dec
std
inc
fisttp
inc
cli
fcomp
mov
xchg
rcl
cmps
mov
and
dec
xor
mov
imul
call
scas
ins
loope
nop
mov
and
mov
ds
or
inc
xlat
js
loope
or
or
cdq
xlat
das
aas
mov
adc
or
cmc
test
add
jg
hlt
xchg
xchg
add
xor
push
mov
xlat
xor
movs
push
add
mov
push
pop
leave
xchg
lahf
jg
and
rcl
cmc
jg
inc
xchg
push
pop
dec
lahf
sbb
stos
jno
sub
add
adc
pop
xor
pop
sub
mov
cmp
sahf
xor
xor
popa
mov
push
nop
test
addr16
jge
sbb
loop
popa
sbb
les
mov
dec
ins
inc
xchg
sub
pop
sub
or
jg
mov
data16
in
shl
call
jl
fnsave
mov
or
jne
cmp
cld
and
fisub
hlt
dec
ins
and
cmp
xchg
sti
jp
pop
push
jp
push
cmc
hlt
add
cmps
push
fdivr
enter
or
fisub
outs
jns
neg
cmp
out
push
call
inc
and
mov
call
retf
imul
push
retf
(bad)
sub
sbb
push
push
dec
sti
push
dec
cmp
shr
aam
mov
pop
jle
rcl
jecxz
jge
bound
daa
cld
loopne
test
pop
inc
sub
mov
ja
jmp
ss
call
cmp
movs
jmp
mov
cmp
and
nop
(bad)
xchg
dec
sbb
sahf
std
mov
push
ret
addr16
test
loopne
fiadd
jmp
jl
icebp
sub
dec
and
ja
aad
loope
sbb
shl
push
pushf
dec
test
or
enter
iret
jle
add
cwde
pushf
lock
int3
xchg
or
or
loopne
jmp
sti
idiv
mov
repnz
(bad)
xchg
(bad)
cmp
jo
out
dec
mov
cwde
fs
jg
xchg
mov
and
mov
fidiv
jecxz
fmul
xchg
ins
out
jmp
push
mov
inc
movs
jecxz
add
push
popa
cmc
fmul
sbb
test
mov
call
imul
fbstp
sbb
movs
mov
fst
addr16
test
cmp
mov
pop
cdq
cld
int
or
jne
push
adc
fld
jo
into
sti
iret
xlat
mov
stos
cld
fcmovu
mov
push
dec
movs
or
sub
jae
or
cdq
aaa
ins
imul
xor
sbb
dec
and
test
int
sub
or
sub
sbb
icebp
clc
inc
xor
xchg
test
mov
jle
xchg
sub
add
inc
loop
mov
ds
movs
inc
add
xor
inc
jmp
(bad)
mov
cmp
ins
sub
mov
jbe
ins
fsub
push
mov
ret
call
cdq
push
(bad)
mov
cmp
jmp
nop
fistp
dec
loope
xchg
sbb
sub
shl
xchg
add
iret
xchg
rcl
sub
mov
shr
mov
test
pop
in
pop
mov
loope
mov
div
clc
(bad)
dec
dec
sbb
xor
pop
outs
pop
xlat
mov
in
jno
xor
xlat
mov
aaa
loope
adc
ret
push
sbb
jbe
and
lock
lea
cmp
aaa
pop
scas
xor
jb
add
les
sbb
fs
gs
sahf
stos
xor
xchg
shr
jge
(bad)
(bad)
jns
mov
test
les
sbb
add
sbb
dec
outs
sbb
adc
inc
retf
(bad)
jne
aam
xchg
or
jl
(bad)
sbb
jmp
jge
test
mov
popf
imul
push
add
jl
ins
fnstcw
test
mov
jb
call
lods
push
add
cmp
mov
add
inc
ds
arpl
stc
sbb
retf
or
outs
mov
scas
or
and
inc
push
jnp
(bad)
jp
aaa
pusha
add
fistp
popa
mov
pop
fucomi
push
pop
jle
push
push
clc
inc
mov
cmp
addps
sub
push
sbb
sub
int
pop
imul
or
into
xchg
sub
sahf
xor
ficomp
nop
ficom
call
cmp
pop
push
mov
mov
push
outs
popa
leave
mov
int3
dec
popa
xor
push
ret
loopne
fs
xor
mov
stos
mov
mov
inc
mov
xchg
inc
shr
mov
inc
daa
mov
pop
pop
pop
sub
test
or
pushf
clc
push
loopne
or
lods
popa
push
xchg
mov
lods
push
sbb
add
iret
call
pop
loop
inc
fwait
inc
xchg
arpl
pop
sbb
cmp
sub
aas
f2xm1
jb
call
nop
repz
inc
cs
add
and
mov
mov
popf
mov
inc
fadd
daa
inc
adc
xchg
mov
aad
push
pop
xor
sti
sbb
sub
or
(bad)
sbb
stos
in
rcl
stc
fucomi
mov
mov
call
mov
dec
cmps
std
outs
jmp
adc
repnz
xor
mov
movs
cs
adc
stos
das
xor
sub
push
outs
(bad)
lods
hlt
stos
xlat
rcr
xor
cmp
or
div
cdq
dec
sahf
loop
jecxz
pop
mov
(bad)
int
cdq
push
mov
add
sbb
in
mov
adc
(bad)
rcr
pop
jnp
popa
ret
mov
mov
adc
ins
xchg
xchg
and
mov
in
xor
jb
inc
sub
jae
jae
adc
mov
ret
sub
xchg
mov
call
xchg
mov
adc
imul
(bad)
xchg
inc
mov
aam
outs
or
rcr
xor
cdq
fdiv
cmps
(bad)
sti
dec
pop
adc
in
mov
out
movs
fidiv
dec
sbb
sub
(bad)
sahf
imul
xchg
leave
sbb
ret
call
out
add
mov
mov
cmps
outs
in
dec
test
pop
(bad)
rol
jmp
xor
fmul
fs
sub
gs
xchg
xlat
sub
cmp
adc
sbb
inc
std
inc
data16
pop
pusha
mov
or
popa
outs
call
cmp
or
lods
jmp
test
jmp
popa
cmp
cs
cmp
inc
jmp
fmul
lods
jp
dec
(bad)
push
movs
mov
cdq
and
int3
fisttp
aam
mov
ret
cdq
adc
mov
xchg
rcl
pusha
xchg
fisttp
sbb
dec
xchg
mov
mov
sbb
or
jmp
movs
xor
inc
inc
lods
retf
push
or
adc
pmulhuw
in
mov
jl
jle
jne
das
test
movs
cmp
call
push
push
xor
add
sub
(bad)
jp
hlt
repz
je
push
gs
mov
aam
je
mov
inc
jns
push
add
xchg
push
mov
sub
loop
test
sub
scas
mov
xlat
pop
test
jns
mov
adc
mov
popa
test
cmp
inc
loope
std
repz
shr
daa
cmp
add
pop
add
inc
lds
xchg
sub
sub
push
retf
sbb
sub
mov
pop
mov
adc
pop
mov
sub
add
dec
mov
and
or
pop
add
xrelease
mov
outs
stos
adc
in
inc
cs
shl
xchg
pusha
pusha
and
or
dec
pop
cmps
(bad)
cmp
mov
cwde
pushf
cmp
sbb
mov
call
and
push
inc
jmp
jl
push
adc
or
adc
fcomp
cmc
push
lea
cmp
out
and
jae
inc
inc
adc
or
mov
outs
inc
sahf
and
pop
loop
sar
fld
add
jmp
xchg
iret
outs
xor
sbb
ins
movs
push
int3
andnps
xor
sbb
imul
in
int3
jae
in
jecxz
cmc
jp
jae
cwde
fnclex
stos
cmp
ins
sub
sti
cmps
fimul
push
sub
adc
imul
lds
rcr
mov
xor
in
push
mov
inc
gs
sub
pop
xor
mov
and
movs
test
dec
pop
jp
pmullw
adc
test
fstp
xchg
ret
sbb
inc
aam
ficom
ss
bound
mov
jecxz
add
jge
mov
dec
in
dec
jae
stos
cs
and
inc
outs
call
sub
push
mov
mov
loopne
loop
inc
test
nop
add
into
sti
inc
addr16
cmc
push
aaa
push
outs
sub
popa
sub
mov
cli
jecxz
ja
test
shl
loopne
call
mov
sub
popfw
xor
pop
push
jmp
fsub
sub
sbb
repnz
mov
xchg
sbb
jb
(bad)
retf
call
jbe
imul
out
pushf
ja
ins
xchg
mov
(bad)
xchg
xchg
je
imul
das
(bad)
and
mov
dec
lahf
push
cmp
addr16
cmp
lea
mov
mov
ins
das
fmul
inc
xlat
push
aaa
pop
sub
dec
push
(bad)
sub
mov
movs
fwait
sahf
call
ret
inc
push
jecxz
xchg
or
sar
pushf
fiadd
std
push
xor
imul
stos
sbb
inc
test
cld
out
jg
aad
pop
dec
test
push
jo
mov
add
cmc
rol
mov
in
xchg
and
(bad)
ror
dec
inc
out
and
push
fnstsw
jns
mov
sub
cwde
add
fwait
mov
xchg
or
or
dec
sbb
mov
inc
mov
fbld
and
push
pop
sar
test
imul
jp
dec
rep
push
mov
dec
push
lahf
stc
sub
out
jle
mul
mov
test
mov
sbb
pop
loop
mov
seta
xchg
rcr
or
xor
sub
fld
xchg
cmc
mov
adc
dec
pop
sbb
scas
xchg
aad
dec
es
and
mov
std
mov
cmps
jle
mov
inc
mov
js
shr
jo
shr
les
sbb
fdivr
mov
fld
mov
or
cld
fidivr
fnstenv
mov
movs
xchg
jne
dec
xor
dec
stc
imul
mov
inc
lock
mov
jo
sub
repz
pop
ins
lock
jg
jbe
or
stos
add
outs
pop
mov
out
inc
fcmovu
sub
repnz
mov
dec
sbb
or
pusha
sub
xor
int3
fnstsw
xor
and
and
jle
out
popa
mov
aaa
jmp
sbb
and
mov
and
in
in
(bad)
sbb
sub
out
jg
cwde
mov
dec
sbb
or
stos
mov
cmp
mov
mov
push
(bad)
out
or
dec
or
lock
adc
jg
mov
loopne
jmp
cld
test
into
sar
push
test
fnstcw
adc
push
clc
movaps
mov
dec
lds
sahf
mov
das
lahf
cmp
scas
pop
dec
adc
int3
or
(bad)
fdivr
xor
sbb
test
sbb
fidiv
sar
mov
xchg
data16
loope
(bad)
lea
xchg
pop
jecxz
hlt
ins
loop
xor
inc
and
jne
push
adc
jns
ret
fwait
push
push
dec
push
mov
sbb
sub
ficomp
in
cdq
repnz
mov
push
scas
xor
mov
xor
push
dec
mov
mov
inc
ss
imul
cwde
mov
jmp
clc
mov
aam
(bad)
jne
pop
fs
test
sbb
loop
adc
cwde
inc
jp
fimul
mov
push
mov
aaa
in
push
mov
xor
push
mov
frstor
cmp
ror
and
frstor
xor
in
jo
mov
add
xchg
cmps
cs
pushf
into
cmp
hlt
int
cmps
repz
repz
scas
jecxz
sub
stc
inc
dec
jge
jmp
jp
mov
aas
xchg
push
shl
sub
repnz
sub
mov
cmc
xlat
ss
inc
push
jae
aad
inc
sbb
stos
(bad)
int
stc
dec
xadd
in
cld
loop
mov
mov
pop
movs
mov
out
(bad)
aam
test
inc
sbb
sub
lods
idiv
in
pop
mov
mov
push
cld
add
ficom
fstp
pop
int
add
or
imul
pushf
cmp
jl
pop
jmp
add
pusha
xor
cmps
inc
sub
push
cmps
jl
das
rcl
je
repz
add
mov
jmp
cmc
inc
popf
stos
mov
movs
inc
test
loop
sub
pop
xchg
push
loopne
xchg
shl
(bad)
test
stos
rcr
mov
push
je
jge
cmp
test
mov
push
jb
push
mov
aad
xchg
adc
in
push
data16
or
add
xchg
pushfw
push
(bad)
hlt
xchg
mov
shr
cmc
enter
ret
pop
mov
cmp
mov
mov
sub
fsubp
xor
sbb
(bad)
xchg
sub
xlat
mov
adc
popf
fdiv
fcom
mov
xlat
repnz
sub
test
sub
jl
xchg
mov
add
dec
repz
mov
inc
sti
sar
pop
ficomp
outs
sub
pop
pop
add
sbb
adc
out
jecxz
fnstcw
retf
outs
inc
into
ror
add
adc
jge
ds
mov
sbb
adc
aaa
sbb
push
add
(bad)
stc
mov
or
cmp
test
or
dec
mov
sar
addr16
retf
adc
sar
fidiv
lods
sbb
fwait
or
call
mov
imul
loope
pop
ret
loop
push
mov
and
loope
jge
test
or
cwde
(bad)
movs
dec
adc
cli
add
into
sbb
xchg
into
in
push
out
adc
pop
cmp
xchg
(bad)
cwde
stos
add
mov
call
push
add
mov
sti
dec
pop
xchg
inc
clc
pop
inc
or
mov
enter
xor
mov
add
cmps
adc
push
push
lods
scas
pop
into
pop
mov
aas
(bad)
rol
jne
div
adc
fwait
and
pop
xor
int
cmc
adc
(bad)
xchg
mov
loop
dec
cmps
iret
shl
lahf
cmps
mov
or
xchg
dec
sub
adc
(bad)
mov
clc
jmp
loopne
sbb
mov
push
stc
leave
push
inc
je
sbb
(bad)
pop
xor
add
adc
add
mov
out
pushf
xchg
and
jl
and
and
out
and
dec
arpl
outs
push
push
mov
mov
mov
ins
or
push
cmp
pop
xchg
dec
dec
pop
pop
sbb
push
sar
cli
ja
lods
or
mov
or
movs
imul
ss
mov
xchg
xor
bound
mov
in
push
sub
sbb
pop
fwait
jmp
movs
fdivr
aad
inc
adc
inc
(bad)
sub
sbb
xlat
pop
or
data16
lds
retf
daa
test
mov
cmp
cmp
imul
shl
xor
push
add
xchg
cmps
ret
mov
push
xchg
pushf
mov
out
ss
enter
pop
mov
cli
pop
icebp
aaa
imul
in
retf
sbb
les
inc
sti
arpl
dec
stos
xor
lahf
leave
mov
cmc
pop
xor
dec
aaa
imul
xchg
push
leave
xchg
jp
std
xchg
jbe
xchg
ins
pop
clc
add
outs
xchg
pop
mov
movs
add
fbstp
push
cmp
sbb
pop
adc
out
and
in
jbe
or
pop
add
mov
aaa
lea
sbb
xchg
xchg
subps
stos
pop
aam
push
sbb
aam
push
lds
push
inc
sub
dec
cmp
pop
inc
inc
cmp
xchg
stos
inc
mov
adc
mov
and
imul
sbb
fadd
or
fisubr
push
(bad)
cwde
out
sbb
mov
pushf
pop
inc
mov
fisub
sbb
adc
aaa
xchg
xor
push
sbb
mov
icebp
adc
aas
or
push
xor
iret
mov
add
mov
jno
mov
cmp
push
fisubr
push
xchg
dec
pop
popa
cs
mov
mov
shl
dec
push
push
leave
ds
fisub
mov
rcl
dec
ret
inc
pop
daa
sub
sar
bnd
inc
mov
retf
lea
and
dec
in
dec
in
pop
movs
in
inc
jle
cmps
sbb
sbb
lahf
mov
and
jbe
fisttp
sub
mov
add
sbb
daa
mov
loop
mov
mov
js
add
xor
xor
das
ret
sub
mov
std
jnp
fsubp
mov
or
cli
xor
mov
add
ins
(bad)
call
inc
cmp
mov
xchg
pushf
adc
dec
sub
movs
call
or
jle
jae
imul
dec
or
fcomip
cmp
pop
mov
mov
adc
adc
scas
adc
push
stos
sbb
(bad)
loope
test
js
popf
dec
in
jmp
xor
ds
fdivp
pop
je
(bad)
jge
sbb
xchg
in
popf
in
icebp
pop
cwde
cmps
jo
xor
adc
xor
cs
(bad)
icebp
and
fxch
mov
(bad)
jb
mov
sbb
mov
pop
add
xchg
mov
(bad)
add
add
pop
xchg
sahf
(bad)
inc
sbb
rcl
add
call
fs
test
xchg
fs
movs
fisttp
fsubrp
or
xor
and
mov
stos
pusha
xchg
jb
pop
cmp
mov
pop
and
dec
imul
lock
aaa
fisttp
jnp
pop
pop
jle
imul
add
add
xchg
ja
add
mov
das
push
jle
outs
fstp
int
into
nop
inc
pop
dec
ds
xor
imul
and
ja
cmc
pop
pop
rcl
xchg
push
sub
sar
mov
test
inc
sahf
xor
push
jecxz
inc
cmp
mov
adc
mov
cmp
xor
push
dec
cdq
inc
xchg
gs
xor
(bad)
mov
cmp
mov
push
xchg
xchg
fisubr
(bad)
inc
leave
std
ins
dec
cmp
mov
inc
inc
icebp
int3
xor
in
call
mov
xor
add
inc
jae
int3
jge
sti
cmp
push
sbb
loope
sahf
ror
test
or
test
clc
ret
jns
xchg
lods
sbb
leave
lods
mov
sub
and
cmp
sub
jp
(bad)
fcomp
fisubr
jae
in
aad
adc
rcl
retf
mov
fstp
repnz
lods
bnd
fst
sahf
loop
and
bound
jb
jmp
mov
das
outs
cmps
push
jl
out
mov
and
in
xchg
daa
sub
sub
mov
pop
jae
push
(bad)
loope
and
jnp
stc
adc
or
mov
pop
mov
stos
pop
pop
push
pop
mov
lea
popa
inc
pop
mov
iret
jecxz
dec
scas
je
mov
mov
or
fist
jecxz
xchg
sbb
mov
mov
sub
sbb
jbe
leave
in
or
adc
cmp
pop
je
adc
or
mov
cmc
shr
mov
ins
xor
loopne
std
imul
lds
and
sub
call
jns
leave
fcmovne
xchg
mov
xor
int
test
frstorw
outs
push
and
xchg
adc
sub
scas
pop
mov
repnz
xor
fcom
mov
xchg
adc
mov
cs
sub
inc
mov
xor
dec
rcr
sti
out
(bad)
mov
nop
fidiv
xor
xchg
out
(bad)
cmp
push
stos
dec
xlat
jle
dec
mov
push
ret
xchg
pop
sti
jl
jo
stc
mov
push
fidiv
sbb
fcmovnb
lock
push
icebp
add
mov
add
ins
(bad)
jns
cmps
cmp
scas
into
sbb
push
sbb
push
shl
stos
test
jge
es
jecxz
int3
not
stc
sahf
imul
or
pop
mov
daa
loope
pop
push
inc
ficomp
jbe
jl
jno
enter
gs
call
das
fldcw
loopne
sub
adc
mov
and
imul
pop
rcl
das
mov
mov
aas
and
sbb
push
mov
stos
dec
sahf
leave
cmp
jno
mov
add
cli
movs
imul
movs
xchg
repz
mov
(bad)
fsub
psraw
lods
movs
nop
sub
loope
add
add
mov
or
push
pop
sub
mov
mov
cmps
ins
xchg
retf
iret
adc
push
cs
and
mov
sar
push
fcmovb
div
shr
cmp
lds
and
leave
jle
inc
aas
jg
inc
xchg
sub
lahf
repz
mov
das
xor
xchg
xlat
enter
mov
movs
or
xchg
jecxz
es
xor
push
sub
mov
cmp
mov
mov
jns
jmp
sbb
mov
dec
(bad)
xlat
xchg
ret
ja
xor
jne
and
xchg
or
enter
std
div
or
or
and
push
jle
pop
dec
inc
fcomp
popa
push
pop
(bad)
das
les
sbb
push
out
icebp
hlt
mov
ja
mov
xchg
loopne
nop
push
dec
fild
stos
xchg
rcl
jecxz
xchg
add
movs
cmp
push
loope
jns
push
adc
dec
push
mov
aaa
bswap
lea
mov
push
xchg
push
ins
cmp
gs
movs
xchg
cli
add
jae
push
jmp
(bad)
xchg
pop
cld
mov
push
dec
ja
xchg
div
loope
mov
rol
jge
fs
add
out
loope
push
retf
and
mov
dec
inc
mov
shl
cdq
and
xchg
adc
push
imul
push
cwde
adc
sub
jecxz
xor
stos
jno
rcl
(bad)
mov
out
repnz
imul
pop
jp
sub
jno
inc
inc
mov
jecxz
into
loop
fimul
add
stos
or
addr16
dec
ins
mov
mov
xlat
(bad)
mov
lahf
inc
pusha
pop
cwde
push
mov
pop
outs
mov
mov
(bad)
and
sub
adc
push
stc
cld
lods
sub
mov
xor
and
pop
cmps
xor
test
movs
icebp
and
xchg
fst
popf
stc
adc
mov
jmp
repnz
inc
imul
sahf
pop
jg
clc
lods
mov
loopne
dec
je
aas
adc
jno
pop
cmp
call
in
xchg
call
mov
lock
sub
mov
sar
fwait
xchg
pop
cmp
sbb
fdiv
push
push
fdivr
cli
mov
lahf
mov
adc
xchg
(bad)
in
or
jge
test
or
mov
jmp
dec
add
sub
mov
push
in
pushf
in
mov
xchg
xchg
jmp
pusha
dec
or
pop
fimul
scas
cld
test
cld
mov
mov
cmp
push
xchg
(bad)
and
xchg
pop
movs
gs
lods
nop
xchg
arpl
sub
ja
adc
jnp
pushf
mov
repnz
enter
aaa
in
sbb
or
gs
cmps
lods
nop
sbb
mov
daa
movs
xchg
ja
mov
or
push
test
jnp
aam
in
push
mov
or
pop
xchg
nop
mov
xchg
retf
daa
jecxz
cmp
pop
sub
xor
fwait
sbb
pop
sub
clc
sbb
jmp
test
inc
jmp
fistp
adc
inc
lahf
shl
fdivr
pop
pop
in
jmp
mov
push
fist
loope
(bad)
xchg
stos
mov
int
and
jbe
arpl
std
mov
inc
test
push
js
cmps
dec
pop
sbb
push
stos
jo
inc
cwde
scas
imul
pop
xor
jnp
sbb
mov
(bad)
daa
jb
in
rol
(bad)
push
pop
mov
gs
pop
(bad)
xchg
iret
std
jmp
cmp
lahf
(bad)
movs
sub
mov
sahf
aaa
shr
sub
dec
out
mov
pop
xchg
or
mov
push
cwde
adc
retf
xchg
cmp
adc
out
imul
cdq
aad
push
mov
sub
mov
pop
ror
repnz
gs
mov
dec
sbb
push
jnp
cmp
pop
sub
pop
mov
mov
add
lds
and
sub
shr
jle
mov
mov
sbb
xlat
adc
mov
add
aad
movq
int
pop
dec
sbb
jmp
inc
stc
sbb
mov
scas
mov
or
outs
data16
cmps
mov
inc
js
add
inc
cwde
in
loopne
dec
push
aam
mov
or
loopne
dec
xchg
imul
bound
and
in
sar
add
and
pop
pop
pop
imul
retf
jl
add
jecxz
mov
hlt
mov
inc
add
mov
lds
sbb
dec
mov
jl
add
cmp
cmp
shl
inc
and
icebp
mov
cmps
cwde
and
inc
or
cmp
xor
push
pop
jmp
ds
es
pop
jp
fldcw
outs
adc
and
mov
(bad)
shr
stos
cdq
sbb
xchg
mov
inc
in
cmps
outs
inc
les
and
inc
cmp
jb
aaa
inc
mov
adc
mov
(bad)
adc
iret
pop
les
(bad)
mov
push
dec
or
pop
mov
js
in
or
jo
push
push
pop
push
jns
inc
aas
scas
sbb
neg
xchg
call
les
sub
pop
sbb
out
in
jb
movs
shr
add
cs
in
sub
ffree
stos
das
mov
mov
retf
das
dec
jl
mov
sub
or
cli
pop
mov
pop
and
ss
cs
clc
mov
and
out
sbb
jmp
nop
sbb
fdiv
cld
jg
int
sub
push
cmp
out
enter
stos
cwde
out
mov
scas
xor
bound
mov
outs
int
ror
xor
xchg
xchg
cli
aad
les
daa
mov
pop
xor
push
je
push
push
mov
sbb
in
sub
lods
(bad)
xchg
dec
call
pop
mov
xchg
cmp
push
jp
(bad)
mov
dec
stc
push
ins
xchg
push
xchg
lods
adc
loop
test
cmps
xchg
imul
xor
pop
pop
loope
dec
mov
mov
xchg
jmp
xor
(bad)
mov
inc
mov
lods
mov
jb
bound
dec
cmp
in
ret
lahf
pop
mov
leave
xchg
xor
test
mov
pop
mov
and
call
xchg
loope
mov
into
out
adc
pop
pop
data16
aas
fucomip
xlat
sar
in
repnz
dec
push
jp
jle
hlt
pop
or
into
sub
cld
out
icebp
mov
add
cmp
pop
mov
mov
rcr
inc
xchg
inc
xchg
mov
sbb
push
or
scas
leave
pop
push
std
mov
mov
int3
jecxz
retf
mov
int3
lods
or
mov
stc
rcl
pop
pop
ins
add
add
cmps
sahf
pushf
jp
popa
(bad)
(bad)
imul
outs
lods
adc
cmp
mov
(bad)
(bad)
sbb
ror
gs
inc
hlt
cmc
scas
jmp
cmp
dec
(bad)
pusha
dec
test
xchg
jp
push
and
aas
push
ins
adc
sub
adc
adc
and
dec
cdq
inc
out
hlt
add
mov
add
out
dec
mov
mov
adc
pop
out
jg
cmps
loopne
dec
xor
call
sbb
or
mov
sub
add
push
sbb
addr16
data16
dec
push
dec
mov
daa
mov
sahf
leave
in
or
inc
xor
test
stos
lods
xchg
inc
mov
mov
jmp
shr
sar
test
mov
cmp
js
fidivr
ins
jo
adc
sbb
adc
mov
imul
or
scas
popa
aam
adc
retf
repz
pop
mov
mov
push
cmps
out
bound
dec
mov
mov
adc
inc
sub
ds
jno
je
mov
sbb
test
sbb
push
js
and
lea
mov
mov
int3
(bad)
lahf
mov
daa
retf
xor
cmp
cs
mov
jecxz
adc
jne
push
repz
jns
(bad)
sbb
nop
cdq
or
sti
pop
hlt
adc
push
mov
dec
sub
push
mov
nop
inc
bound
aam
sbb
jnp
xor
mov
loop
lea
push
cmp
cmp
pop
mov
pop
pop
aam
gs
mov
and
xor
fldenv
dec
push
(bad)
mov
out
jnp
mov
xlat
inc
out
sub
inc
in
and
sub
int3
mov
out
mov
out
popf
and
imul
pop
inc
jg
sbb
inc
mov
xor
xor
sub
js
fld
test
ss
dec
and
inc
push
or
stc
and
loopne
pusha
lahf
push
push
xor
xor
cwde
add
inc
out
push
es
or
in
sub
ficomp
xor
sbb
out
cmp
outs
aaa
bound
and
daa
aam
scas
mov
in
dec
jl
lods
jns
repnz
adc
xlat
(bad)
cdq
pop
sbb
lock
stos
(bad)
pop
xor
push
(bad)
test
mov
es
dec
sub
lea
imul
adc
sub
jb
xchg
ror
fcom
clc
xor
lds
inc
mov
inc
mov
push
fdiv
inc
jp
inc
shl
ret
jmp
xchg
cli
imul
stc
pop
ins
mov
pusha
inc
fnstsw
fldenv
shl
leave
jo
fdiv
sbb
cld
sub
inc
pop
mov
mov
scas
push
cmp
cwde
cmp
dec
stos
add
aas
rcl
xchg
sti
ret
mov
push
jmp
out
cmp
es
imul
xor
sub
daa
test
sahf
mov
pop
cli
or
cmp
add
mov
xchg
jo
push
ficomp
add
mov
jns
cmp
inc
mov
xor
bound
es
(bad)
mov
and
gs
ins
cwde
aam
add
inc
cmp
imul
push
sahf
into
xchg
scas
sti
movs
bound
loopne
xor
mov
lea
dec
js
lock
in
lahf
mov
inc
push
sub
or
mov
adc
mov
inc
jae
(bad)
loope
(bad)
mov
shl
jge
out
pop
gs
push
xor
js
stc
xlat
test
mov
ins
data16
fnsave
fdivr
push
stos
and
ret
cmc
xchg
add
pushf
add
sub
mov
push
dec
cld
mov
xchg
push
jne
adc
shr
and
push
daa
sbb
cmps
sar
jle
retf
mov
mov
(bad)
and
inc
hlt
adc
test
int
inc
arpl
scas
push
fmul
fld
mov
jo
sbb
cmps
mov
pop
pusha
je
mov
out
movs
stos
and
aas
add
les
mov
punpcklbw
push
or
pop
pop
in
retf
sub
dec
rcl
lock
fld
in
lea
jecxz
popa
in
loop
pop
iret
shr
fiadd
push
dec
sar
mov
xor
and
xchg
sub
pop
xchg
dec
in
ins
icebp
fs
js
xchg
inc
cmps
or
xlat
(bad)
cmp
repnz
sar
movs
test
pop
div
mov
mov
pop
sbb
in
cmp
jmp
xchg
mov
dec
mov
mov
mov
lods
push
xor
adc
neg
montmul
cmps
add
gs
(bad)
pop
scas
mov
inc
int3
hlt
xchg
and
sub
arpl
jg
mov
and
(bad)
push
outs
rcl
lahf
sub
push
jp
sti
jmp
cdq
aad
lds
pop
scas
pop
fptan
clc
lods
jge
icebp
clc
shl
mov
sub
js
sub
std
das
xor
hlt
(bad)
sub
mov
pusha
aad
in
sahf
leave
xchg
pusha
fidivr
dec
xor
inc
shr
gs
popa
nop
js
push
push
enter
retf
fs
dec
call
sub
jne
pop
mov
mov
fdiv
aam
(bad)
cmps
lea
mov
pop
aas
cmp
pop
out
mov
mov
outs
mov
retf
push
cmp
retf
or
mov
and
inc
js
xchg
loopne
pop
stc
ss
adc
sbb
sahf
fnstsw
and
fstp
rcl
les
mov
mov
fs
dec
ret
(bad)
aad
aad
femms
and
mov
adc
int3
jmp
xchg
dec
fdivr
push
leave
fcmovb
fwait
mov
in
sbb
cmp
out
das
fwait
lock
jp
push
pushf
inc
(bad)
in
mov
(bad)
jne
and
xor
mov
popa
jg
arpl
or
(bad)
and
xor
hlt
xlat
adc
cmp
(bad)
jmp
xchg
ror
mov
add
mov
in
pop
mov
out
cmc
and
mov
in
pop
mov
cmps
inc
(bad)
cli
pop
arpl
outs
pop
xchg
out
out
mov
mov
cld
outs
cmp
(bad)
adc
in
clc
add
cmp
sbb
hlt
inc
mov
shl
aam
jnp
sbb
test
les
rcl
or
or
fld
scas
cmc
or
pop
mov
jg
and
movs
in
inc
lea
ret
jns
xor
xchg
cmps
inc
add
ins
movs
test
xor
test
mov
adc
adc
cmp
stos
push
jecxz
push
cmp
or
adc
mov
test
mov
into
and
jmp
fs
sub
sahf
mov
sub
push
xchg
and
sub
aas
cmp
dec
push
ficomp
lock
push
mov
imul
inc
mov
cwde
dec
aam
cmp
outs
es
xor
neg
and
jne
xchg
daa
push
push
mov
shr
out
popa
jle
add
xchg
xor
push
outs
daa
inc
pop
int3
adc
mov
test
pop
jle
xchg
cdq
js
dec
int
rol
mov
fisub
cmps
xor
add
cmp
movs
jecxz
adc
dec
inc
out
sahf
or
xchg
fisttp
cmp
inc
fwait
sbb
push
in
rol
enter
test
xchg
jb
xchg
mov
cmp
add
ss
in
push
je
sub
dec
fiadd
lods
jno
cmps
and
pusha
imul
cmp
int3
mov
sti
mov
push
cdq
cs
mov
and
add
fmul
xchg
pop
aam
add
pop
or
stos
mov
popa
fadd
push
push
popa
pusha
mov
jmp
js
call
cdq
mov
xor
inc
pushf
push
inc
push
js
dec
add
pop
xor
es
adc
int3
pop
and
scas
arpl
cdq
cmps
and
jae
out
sbb
ror
je
mov
jno
mov
gs
call
test
push
dec
clc
jl
je
jg
mov
out
loop
fs
fnstenv
in
mov
mov
and
dec
movs
bound
cwde
mov
std
fmul
lods
and
sub
or
xor
ror
adc
pop
xchg
xchg
add
jnp
add
jecxz
ins
div
mov
popa
lock
or
es
dec
sti
sbb
push
rcr
repnz
adc
sub
xchg
sub
adc
jle
xchg
jl
push
mov
sbb
test
mov
mov
aam
cdq
jns
add
xchg
pop
aaa
mov
outs
test
gs
retf
cld
add
pop
lds
mov
mov
mov
add
cli
jmp
ret
cmp
mov
mov
aas
mov
fstp
add
xchg
mov
pop
(bad)
cmp
push
fnstcw
fiadd
inc
mov
xchg
pop
jmp
jmp
push
dec
ret
and
lods
fnstsw
xchg
fild
cmc
sub
adc
push
mov
jb
adc
jne
lds
adc
jne
gs
mov
sysret
rol
je
leave
or
cmp
popa
mov
add
lds
mov
mov
dec
cdq
mov
sub
mov
out
icebp
fst
jge
dec
movs
mov
or
nop
xchg
fimul
jge
push
mov
pop
(bad)
cmp
jge
(bad)
jmp
cmp
dec
jne
cmp
and
inc
(bad)
mov
fcomp
mov
pop
in
xchg
sbb
pop
xchg
or
cmp
gs
jmp
pop
mov
jl
rcl
sub
add
fistp
cli
pop
cmp
adc
in
sbb
fld
sub
xchg
test
nop
outs
mov
pop
add
popa
mov
(bad)
je
aad
in
and
xchg
xor
inc
es
daa
xor
ror
inc
jle
inc
movs
add
mov
push
sti
and
xchg
cmp
xchg
xor
ror
jnp
xchg
sbb
or
pop
fsubp
aaa
shr
dec
lds
mov
ins
jns
xchg
sbb
hlt
pop
test
sub
clc
jg
mov
mov
jno
sbb
mov
jl
and
daa
cli
sub
mov
or
scas
mov
les
sub
mov
or
xor
leave
(bad)
repnz
mov
pop
sbb
cmp
xor
inc
mov
icebp
push
inc
stos
pop
jb
sbb
out
xchg
mov
loope
fdiv
cmp
mov
dec
add
add
ret
xchg
add
jno
retf
dec
or
fist
rcr
or
xor
cli
sti
stos
sbb
inc
pop
and
fsub
test
pop
adc
test
les
cmp
pop
and
and
cs
das
adc
sbb
mov
jp
inc
leave
add
inc
sbb
xor
retf
cdq
pop
mov
outs
leave
mov
xor
addr16
push
pop
push
mov
add
pushf
imul
xchg
fxch
aam
push
stos
imul
out
out
inc
mov
cmp
in
mov
aaa
jmp
cmp
or
cdq
mov
adc
idiv
xchg
sbb
into
lahf
pusha
mov
adc
retf
cdq
outs
dec
addr16
sar
mov
ret
pusha
loopne
fwait
ss
jp
test
(bad)
jno
inc
or
sub
cmc
xor
fist
mov
or
pop
cwde
(bad)
out
pop
adc
push
movs
inc
imul
mov
cmp
add
call
mov
add
cld
lahf
cmp
mov
in
sbb
test
inc
daa
loop
popa
inc
xor
xor
add
mov
in
scas
loope
push
jl
xor
cmp
cwde
xchg
aas
xchg
adc
std
add
xchg
mov
pop
adc
ret
inc
aad
push
push
xor
fwait
mov
out
dec
test
push
sahf
cmp
fdiv
push
xor
cmps
(bad)
pop
inc
in
int3
aaa
push
sub
push
inc
pop
mov
repz
lds
fmul
cmc
mov
lock
mov
mov
cmp
cmp
jge
dec
add
jge
scas
pushf
xor
shl
lea
out
jo
pop
push
cmp
pop
sub
sub
sub
mov
jb
push
sub
adc
div
test
cmp
int3
sbb
movntps
add
or
inc
shl
int
cs
int3
jnp
lods
xchg
in
push
xor
adc
push
mov
push
cld
cvtpi2ps
mov
inc
loop
cmc
sub
jne
(bad)
xor
cwde
and
mov
cmp
adc
cld
dec
ret
hlt
xchg
sbb
jbe
loope
out
xor
mov
(bad)
pop
and
cmp
pushf
and
arpl
jl
int3
scas
sub
add
sub
fcomp
nop
movs
lock
add
mov
aad
fidiv
jmp
(bad)
inc
xchg
lods
sbb
xor
(bad)
sub
dec
je
mov
dec
cld
jmp
sbb
mov
daa
sbb
cmp
pop
mov
mov
sub
adc
xchg
fstp
push
sbb
pop
mov
add
and
pop
jmp
mov
popa
dec
push
jp
call
ins
aam
cdq
rol
cmp
ret
hlt
jmp
cmp
sub
addr16
popf
(bad)
jbe
scas
push
sar
lock
das
push
jo
mul
and
aam
(bad)
adc
cwde
movs
addr16
xor
sbb
ss
daa
push
xor
mov
jb
cs
unpckhps
dec
arpl
push
xchg
xor
retf
icebp
les
or
jecxz
dec
adc
sub
or
jns
gs
sbb
rcr
sar
sub
cmps
(bad)
add
add
(bad)
push
mov
lock
scas
inc
mov
mov
ror
cmc
aad
adc
inc
lods
nop
test
shl
jp
aas
or
jg
movs
or
outs
dec
pop
push
push
call
test
(bad)
sub
xor
icebp
mov
retf
or
xor
add
dec
push
pop
mov
ss
bound
test
mov
push
xor
adc
(bad)
test
inc
sbb
out
popf
test
mov
sbb
cdq
jo
mov
or
ja
xchg
cmp
daa
test
mov
aaa
mov
mov
je
std
add
add
xor
shl
sbb
add
out
aas
jp
cli
sub
movs
lock
repz
lock
fs
fild
pop
in
inc
dec
inc
(bad)
pop
xlat
mov
mov
jo
mov
call
or
imul
inc
jp
inc
xor
add
cli
cmp
stos
bound
fcom
je
push
cmps
inc
pop
ret
xchg
pusha
pushf
je
cmp
xchg
ret
pop
push
lock
lods
push
in
xor
movs
adc
xchg
adc
mov
or
(bad)
pop
stos
lock
cs
ins
or
fcmovnu
je
mov
and
jmp
jne
in
mov
xchg
cdq
es
push
movs
fsubr
adc
ss
jne
lock
push
add
sbb
sbb
int3
inc
jb
test
movs
sar
jno
mov
pop
ficomp
dec
and
dec
adc
mov
pop
cmc
xchg
in
(bad)
fcomp
mov
pop
leave
shr
dec
pop
mov
inc
(bad)
xchg
je
mov
imul
push
(bad)
cmps
mov
js
or
cs
loopne
mov
xchg
xchg
movs
pusha
jle
cli
push
sbb
push
mov
adc
inc
push
es
cs
and
and
imul
scas
cwde
test
das
ins
icebp
stc
pop
or
push
ret
lods
mov
dec
cli
xchg
mov
cmp
icebp
mov
aaa
lds
cli
or
jecxz
mov
mov
icebp
pop
inc
jp
dec
outs
ds
add
xor
or
cld
inc
jmp
pop
enter
xor
outs
mov
jl
mov
scas
fucomi
das
dec
inc
sbb
dec
mov
mov
push
lds
add
mov
cs
cmps
dec
lock
adc
push
mov
push
sub
xchg
inc
fwait
popa
fld
adc
jbe
scas
cmp
mov
mov
mov
mul
ins
loopne
cdq
xchg
arpl
ret
dec
pop
mov
sbb
xor
mov
mov
(bad)
push
mov
dec
xor
or
popf
xor
push
mov
test
(bad)
bound
cwde
pop
scas
retf
ret
std
cld
mov
cwde
mov
sbb
fiadd
xchg
ficomp
jns
mov
sbb
and
pop
push
daa
pushf
jb
ja
add
xchg
jge
sbb
bound
js
push
retf
or
xchg
enter
jle
dec
add
dec
jmp
loopne
movs
movs
jae
sar
sbb
call
sbb
push
sbb
dec
mov
add
in
and
cmp
bswap
inc
pusha
outs
jg
idiv
dec
es
push
cld
mov
cmp
clc
cdq
shl
or
adc
push
cmps
jmp
add
cwde
and
or
push
(bad)
fistp
and
ss
push
ret
leave
out
ins
je
imul
mov
mov
mov
xlat
jmp
ja
add
add
push
repz
jge
push
adc
ret
pop
mov
inc
and
push
push
push
retf
(bad)
in
dec
push
std
xlat
adc
or
out
mov
mov
jnp
(bad)
mov
addr16
add
repnz
sar
sub
rcl
test
jo
cli
mov
xchg
push
mov
test
nop
ja
pop
pop
aaa
add
shl
inc
outs
stc
jo
add
cmps
fidivr
repz
loopne
aam
jle
mov
icebp
ja
push
jl
sbb
fstp
stos
ds
dec
imul
mov
dec
inc
sub
iret
pop
out
mov
inc
or
fs
in
nop
inc
mov
mov
scas
mov
std
or
pop
inc
sbb
(bad)
or
outs
loop
rcl
adc
add
jns
into
int3
scas
or
lea
repz
ja
dec
push
(bad)
int3
ins
pop
or
cmp
pop
sub
dec
das
pop
fld
scas
dec
scas
sbb
mov
ins
dec
jmp
shr
(bad)
sar
out
ret
stos
popa
fptan
cld
fchs
ja
push
test
xchg
add
dec
cwde
pop
loopne
push
sub
cwde
out
ret
pop
je
pop
imul
jecxz
loop
push
ror
lods
fstp
lods
lock
jmp
test
pop
inc
and
inc
mov
pop
call
(bad)
xchg
arpl
imul
mov
fistp
sbb
(bad)
jne
lock
fcmovu
fwait
xchg
jmp
xchg
and
pop
inc
jb
stos
mov
push
cmps
xchg
das
adc
outs
mov
fist
nop
fld
sahf
xlat
or
stos
je
je
leave
inc
mov
adc
and
jae
test
push
push
mov
push
sahf
xchg
cmp
sti
sub
aas
or
adc
mov
cmps
sub
cmp
inc
iret
push
sub
daa
xlat
sbb
call
cmp
jne
loop
cmp
nop
aad
mov
cmp
nop
xor
outs
mov
repz
in
inc
out
mov
mov
aaa
repz
fwait
lahf
je
stos
inc
popa
outs
mov
out
jno
imul
test
pop
mov
and
jle
call
retf
push
mov
popf
je
mov
ficomp
stc
ret
(bad)
sbb
retf
movs
sub
in
iret
aad
sahf
int
fadd
add
shr
mov
jmp
mov
pop
arpl
enter
adc
mov
dec
pop
fist
dec
ins
push
cmp
hlt
mov
retf
push
mov
repnz
mov
xlat
scas
mov
add
cs
pop
movs
sbb
jmp
or
call
adc
shl
mov
cdq
jne
int
xchg
push
sbb
cmp
and
in
(bad)
inc
dec
nop
push
out
jo
stos
add
pop
adc
ucomiss
xchg
lock
xor
mov
jle
cmp
shl
in
hlt
(bad)
xor
inc
addr16
das
or
rol
inc
cmp
aaa
mov
stos
mov
inc
ret
or
push
(bad)
and
arpl
cmps
pop
daa
mov
js
inc
inc
outs
mov
and
dec
and
dec
or
pushf
or
jno
sub
push
outs
xchg
adc
add
sub
jmp
rcr
adc
xchg
add
sbb
out
sbb
xor
imul
jo
jg
test
fcom
mov
dec
sbb
jmp
lds
sbb
mov
cs
aas
jecxz
mov
jno
mov
mov
pop
mov
push
call
inc
and
ds
cmps
pop
(bad)
pop
ins
cmps
inc
inc
adc
sbb
fmulp
pop
sub
push
movs
cmp
sbb
dec
es
mov
dec
or
jmp
(bad)
(bad)
js
aad
addr16
xor
xor
add
mov
popa
or
aas
push
sbb
xchg
mov
cmp
mov
outs
dec
les
push
xchg
leave
fwait
sahf
push
rcl
in
pop
mov
inc
push
jp
mov
sbb
push
xchg
retf
cmp
adc
push
vpmulhw
jge
xchg
scas
dec
sub
out
and
cmp
mov
addr16
xchg
mov
cmc
bound
fadd
pop
pop
inc
fstp
(bad)
mov
sar
hlt
scas
iret
and
adc
and
test
js
outs
jmp
xor
xchg
and
loope
push
add
pusha
mov
mov
mov
mov
mul
jae
xchg
or
sti
cmps
call
sub
adc
pop
sub
in
push
call
repnz
cmp
sub
pop
je
cli
pop
sbb
stos
pusha
jmp
push
out
cld
(bad)
mov
lods
mov
test
dec
xchg
mov
pop
mov
(bad)
mov
push
xchg
dec
clc
iret
jne
mov
dec
mov
repnz
mov
adc
movs
mov
add
(bad)
or
shl
inc
add
and
mov
je
mov
sahf
fidivr
test
std
and
jb
mov
je
loopne
jl
stc
sbb
stos
fild
pop
popa
dec
mov
mov
add
dec
push
mov
inc
ficomp
xchg
dec
fstp
fsubr
(bad)
mov
add
pop
push
aad
std
clc
cmps
inc
mov
sub
inc
pop
and
jl
dec
sbb
call
ret
jbe
push
push
stos
pop
cdq
cmp
xor
cmp
les
jbe
cmp
fsubp
dec
push
push
jp
cs
and
inc
or
pop
aas
pusha
cmp
mov
leave
xchg
dec
aam
(bad)
cld
dec
pop
adc
sbb
xchg
out
nop
rcr
cld
jo
out
fiadd
sub
mov
out
sbb
or
(bad)
push
jnp
inc
push
cmp
jg
push
cmp
or
mov
aaa
push
sbb
inc
mov
imul
movs
mov
mov
and
jno
jnp
jmp
pop
and
dec
cmps
and
jle
push
sbb
push
clc
jae
add
push
imul
clc
neg
push
pop
mul
push
push
data16
test
movs
or
jg
or
daa
and
sbb
call
sub
lods
push
jmp
clc
test
push
pop
mov
pop
push
movs
jg
enter
jnp
(bad)
mov
retf
in
push
and
sbb
dec
cmp
les
xor
pop
ror
(bad)
adc
or
call
mov
jle
or
push
inc
or
or
daa
loope
cmp
std
or
(bad)
jb
scas
call
sbb
inc
cmps
mov
push
addr16
jge
add
xor
test
jo
(bad)
and
jmp
test
adc
shr
in
add
sub
xchg
push
jmp
pop
sar
mov
adc
test
ins
or
dec
outs
dec
cmc
ret
les
aam
scas
popa
aas
aas
ins
push
pop
adc
mov
add
sar
fisub
retf
test
inc
jp
mov
fidivr
call
lock
cmp
adc
dec
or
or
sbb
mov
shl
push
inc
cld
imul
fimul
add
enter
mov
popa
or
mov
lods
or
jno
out
pushf
out
(bad)
pop
stos
push
inc
jne
in
scas
push
stos
and
jge
aas
int
xchg
add
mov
gs
lea
mov
cld
inc
mov
rcl
mov
sbb
pop
add
mov
test
mov
fxam
adc
imul
out
pop
out
call
(bad)
fdivrp
loop
push
dec
xchg
jae
lahf
pop
or
adc
(bad)
cmp
(bad)
push
mov
push
dec
push
jecxz
and
mov
mov
mov
push
fld
inc
pop
xor
je
xchg
push
mov
shl
pop
pop
inc
push
enter
jmp
imul
xlat
jmp
xchg
test
out
pop
or
retf
pop
inc
out
int3
imul
jle
cmp
inc
gs
sbb
xor
xor
push
call
lods
repnz
sbb
mov
push
inc
clc
jecxz
xor
sbb
ret
std
push
xor
dec
cmp
stos
push
int
ja
imul
mov
in
mov
and
xor
jno
aad
adc
inc
mov
popf
xor
and
sbb
and
adc
das
inc
aaa
rol
sbb
rcl
jg
repnz
je
xchg
repnz
sbb
mov
push
movs
mov
lock
retf
xchg
repnz
ror
mov
pushf
leave
inc
std
mov
call
mov
cmp
xchg
push
xchg
sbb
fadd
add
stc
(bad)
cmc
iret
rcr
mov
or
jecxz
adc
adc
repnz
outs
cld
adc
fisttp
mov
jno
(bad)
cmps
popa
int
je
pop
mov
mov
push
in
mov
gs
cmc
adc
jmp
add
xchg
mov
adc
cmp
leave
mov
jno
xchg
(bad)
xchg
ja
and
push
jge
xchg
cmps
xor
bound
sub
mov
ja
stos
xor
fwait
mov
pop
les
inc
popf
xor
sahf
and
ins
aam
into
shl
in
adc
icebp
fidiv
or
lods
in
mov
out
mov
out
enter
adc
sbb
inc
lock
adc
and
mov
cmp
in
push
fbld
ret
dec
or
adc
sub
push
lods
sub
cmp
and
call
cmc
outs
cdq
retf
scas
sub
push
jae
jecxz
mov
add
mov
test
gs
add
sub
cmp
sbb
in
out
out
and
pop
leave
loope
ins
add
mov
ja
enter
cmps
and
in
aam
(bad)
div
pop
pop
jns
cwde
mov
xor
add
into
outs
and
sbb
mov
(bad)
into
aas
ficomp
fnstsw
add
(bad)
int
mov
sbb
jg
(bad)
sbb
mov
int3
mov
in
jmp
and
call
retf
xor
fiadd
popa
sbb
pop
mov
shr
fs
xchg
sbb
call
(bad)
loope
int
or
(bad)
jno
lods
cli
mov
and
movups
dec
fwait
shl
ret
xchg
push
outs
ds
mov
mov
(bad)
push
mov
or
stos
(bad)
retf
sub
aaa
setb
jmp
xchg
xchg
mov
jmp
push
sbb
dec
popf
push
test
call
imul
pusha
in
mov
sub
(bad)
pop
cmp
inc
(bad)
sub
jl
(bad)
jmp
adc
mov
ficom
call
pop
ficomp
mov
pop
movs
pop
mov
clc
jp
adc
adc
mov
sbb
addr16
ret
stos
cmp
in
pop
cli
dec
(bad)
adc
push
ds
pop
jecxz
xchg
cmc
sbb
mov
dec
jg
idiv
fild
bswap
or
xchg
popa
sub
inc
leave
daa
call
adc
ja
jne
pushf
add
push
xchg
fisubr
pop
mov
aad
and
inc
loopne
and
jae
mov
je
cwde
ds
fild
or
mov
adc
xor
(bad)
call
test
std
aaa
loopne
push
(bad)
movs
(bad)
dec
mov
jns
shl
add
fistp
retf
and
out
xor
pop
adc
pop
mov
loopne
loope
jne
es
jle
ror
adc
dec
push
lock
shr
sub
pop
mov
adc
cld
and
cmp
ret
mov
lods
mov
fldcw
scas
or
fsub
mov
es
fisubr
daa
jae
retf
outs
rcl
sti
jbe
mov
mov
and
fsubp
dec
rcl
aam
out
or
jne
xchg
mov
subps
cs
retf
pop
xor
js
cmps
or
inc
add
inc
mov
test
lds
sbb
or
stc
mov
call
int
or
(bad)
sbb
jb
popa
stos
sub
xchg
or
mov
xor
jge
jne
test
add
cld
call
hlt
sar
dec
in
and
xor
aaa
mov
sub
aaa
inc
or
fdiv
shl
stos
xchg
jbe
cmc
lock
aas
mov
dec
ret
xchg
push
gs
sbb
fcom
rcr
sbb
out
push
cmp
xchg
jmp
jo
add
cmps
out
imul
movs
mov
out
pop
mov
fs
iret
adc
sub
cmp
stc
out
pop
mov
adc
mov
add
cmps
je
out
cmps
sbb
cld
add
lea
lahf
sub
mov
add
mov
fld
adc
outs
push
adc
push
test
pop
mov
jg
jo
aad
ja
xor
mov
pop
jbe
lods
aaa
into
dec
xchg
cwde
adc
adc
ss
sub
mov
mov
push
mul
cmp
rol
pop
sub
push
ror
xchg
int
jb
test
xchg
xchg
adc
shr
cmp
mov
and
cvtps2pi
(bad)
shl
in
scas
ins
lahf
fsub
mov
(bad)
aam
xchg
jbe
fst
fisubr
jbe
mov
in
or
add
pop
jbe
push
outs
inc
add
mov
or
pusha
outs
test
mov
adc
jle
mov
lods
push
mov
lods
loopne
cmp
das
mov
add
mov
test
call
and
mov
aaa
je
pop
lds
push
ins
cmps
adc
arpl
fucom
rcr
bound
popf
dec
sbb
and
cli
jo
ins
rol
movs
sbb
ret
sub
int3
xchg
and
xor
mov
inc
bound
mov
and
cwde
fimul
mov
adc
push
fsub
sbb
sub
int3
scas
mov
cmp
jbe
add
inc
ss
fstp
mov
fld
mov
idiv
sub
mov
retf
scas
jg
mov
sbb
cld
mov
jmp
(bad)
in
aam
adc
cmp
(bad)
scas
ficomp
cmp
stos
stos
jecxz
jo
mov
(bad)
add
call
jnp
cmp
jnp
(bad)
cwde
outs
inc
jne
mov
mov
pop
into
cmp
dec
inc
push
cmp
mov
stc
out
scas
xor
das
mov
xchg
xchg
jmp
addr16
fsub
movs
jg
out
ret
add
(bad)
aad
nop
cdq
xchg
sbb
in
adc
push
sahf
mov
outs
xchg
(bad)
cld
xor
fisubr
test
pop
jmp
cmp
mov
cmp
ret
mov
add
xchg
mov
mov
mov
adc
sub
out
into
fwait
jnp
call
cmp
cmp
push
pop
jp
push
dec
cmp
add
mov
lock
mov
pop
sbb
or
sbb
mov
fwait
dec
mov
sti
loopne
addr16
call
dec
repz
adc
pusha
jp
sar
fwait
iret
add
jle
jne
ss
scas
out
push
adc
bound
fidiv
lock
xor
mov
gs
inc
sbb
jnp
jne
sbb
popf
sar
pop
or
push
push
push
dec
aam
push
dec
add
shl
sub
push
out
fistp
xchg
or
and
cmps
or
xor
stos
cwde
fldenv
and
sub
nop
cmp
mov
cmps
mov
push
or
pop
jmp
sahf
sub
repz
test
sub
iret
gs
xchg
dec
(bad)
leave
(bad)
cdq
(bad)
xchg
stos
push
and
cmp
not
ret
shl
cld
xchg
push
push
out
mov
dec
je
cmps
xchg
sti
test
mov
dec
fisub
jge
test
stos
mov
or
(bad)
mov
cmp
cmc
sbb
jmp
xchg
dec
inc
mov
and
cmp
pop
xor
addr16
add
lods
jb
scas
ins
ins
outs
pop
div
xor
fwait
xor
mov
mov
loope
xor
icebp
sbb
mov
cmps
jae
imul
jge
lahf
sahf
jle
xor
sbb
xchg
jbe
mov
(bad)
fsub
or
(bad)
xor
std
jns
sti
cld
adc
test
in
cli
(bad)
rep
mov
lds
mov
sbb
jo
int3
mov
in
rcr
push
aad
sub
sbb
pop
rol
or
int
mov
retf
jb
popf
mov
aas
sar
scas
adc
pop
xchg
pop
adc
sbb
neg
inc
xor
xchg
xchg
sbb
imul
mov
mov
and
adc
out
test
loopne
mov
pop
out
jmp
xchg
or
ins
pop
sub
xchg
leave
or
clc
mov
mov
(bad)
xchg
xor
sahf
enter
cmps
aaa
sbb
add
adc
cmps
sbb
lock
jmp
imul
scas
mov
xlat
arpl
xor
mov
and
icebp
and
adc
xor
dec
scas
adc
retw
xchg
mov
mov
dec
loop
sbb
sti
mov
inc
xchg
cmp
mov
push
adc
les
cmp
adc
ja
cmps
sbb
pop
mov
aaa
mov
aam
popf
adc
xchg
pusha
adc
push
fbld
or
mov
adc
lods
in
enter
cmc
xchg
(bad)
mov
out
rep
nop
push
dec
mov
pop
pop
call
add
mov
lods
or
and
pop
les
shl
leave
stos
and
test
jl
fwait
and
ret
and
dec
inc
jno
cdq
cmp
adc
mov
ror
jnp
push
cmc
ins
shl
pop
out
adc
sub
mov
fwait
popf
jp
mov
je
sub
pop
pop
add
xor
out
imul
jae
repz
mov
ja
outs
push
and
sbb
xlat
xor
dec
xchg
or
scas
add
add
jns
lods
fwait
jne
xchg
xchg
enter
pextrw
sub
xchg
mov
sub
addr16
pop
push
xor
dec
scas
cmp
loop
xlat
stc
push
fs
lds
fstp
div
je
pop
jb
xor
pop
fld
(bad)
jge
add
cmps
pop
push
cwde
mov
std
xor
cs
push
jecxz
fs
mov
cmp
lea
sahf
fdivr
mov
fiadd
mov
pop
inc
arpl
rcl
rcl
scas
out
pop
sahf
inc
push
dec
shr
imul
and
outs
(bad)
jmp
cmp
std
dec
test
dec
outs
sahf
mov
pop
ss
aam
aam
jno
int3
sbb
adc
in
pop
aas
jne
mov
jnp
mov
and
jne
mov
and
test
pop
sahf
mov
sbb
cs
pop
or
sti
jecxz
cmp
in
and
out
xor
jns
int3
mov
inc
pop
sbb
pusha
mov
dec
ror
(bad)
mov
adc
stos
outs
ret
or
jmp
or
cmp
lock
xor
dec
cmps
and
mov
cmp
pusha
push
inc
cmc
add
sahf
mov
mov
ret
fist
push
mov
fadd
add
cs
into
or
retf
sti
je
test
or
sbb
jmp
nop
scas
jo
or
inc
and
sbb
(bad)
hlt
and
or
cdq
gs
mov
call
pop
adc
dec
ret
fdiv
dec
or
inc
adc
jge
push
loop
mov
or
or
loop
xor
pop
push
inc
and
xor
test
jle
sub
mov
xor
cs
imul
jmp
mov
mov
mov
mov
mov
pop
mov
inc
dec
mov
test
jae
jmp
fxtract
mov
icebp
add
int
mov
addr16
sub
jl
jmp
neg
xchg
pusha
xor
loope
pop
loopne
mov
pop
mov
push
mov
cmc
cmc
and
pop
test
pop
cdq
cmp
jge
loopne
lahf
jae
sbb
push
out
cmps
int3
out
fstp
jmp
imul
and
jp
sub
pop
clc
enter
jmp
adc
sbb
push
loope
pop
add
or
pop
test
imul
sbb
add
sbb
dec
dec
pop
and
mov
add
fcomp
mov
inc
mov
neg
adc
sbb
cmc
dec
es
cmp
test
mov
xchg
loope
xor
mov
retf
imul
lds
sar
lahf
dec
ret
inc
jp
mov
pushf
mov
push
mov
jnp
inc
xor
push
(bad)
(bad)
addr16
xor
outs
fldcw
sbb
push
cmp
jmp
out
ja
adc
popa
sbb
or
imul
rol
sub
hlt
inc
add
test
jae
hlt
fcmovb
mov
dec
xor
sbb
pop
sub
mov
fdiv
xor
ret
rol
mov
push
mov
ins
mov
cmp
shl
jb
adc
or
mov
fistp
les
sti
sub
call
call
hlt
mov
xchg
cmc
cmc
or
mov
mov
cmp
mov
xor
ds
push
pop
sbb
push
pop
hlt
inc
test
pop
sbb
(bad)
imul
push
fnstsw
push
outs
std
dec
adc
aas
adc
cmp
add
lods
and
jmp
pop
sti
sub
fstp
push
and
add
jg
mov
das
pusha
push
paddusb
jmp
jecxz
add
push
mov
dec
aam
gs
mov
stos
test
xchg
or
fistp
push
pop
sahf
jl
ror
pop
imul
sub
push
dec
aas
xor
mov
je
cwde
gs
cmp
sbb
xchg
sbb
xchg
and
cmps
sbb
pushf
nop
push
enter
cmp
icebp
or
aaa
sub
push
and
and
mov
in
jecxz
fimul
bound
sub
mov
and
jne
mov
fstp
and
sub
mov
dec
add
pushf
sbb
mov
stc
repz
pop
aas
mov
or
dec
mov
push
clc
aam
(bad)
hlt
push
lahf
lahf
aad
cmc
cmp
or
cwde
mov
xchg
dec
rol
inc
pushf
sahf
pusha
cmp
stc
int3
push
cld
adc
fwait
data16
or
movs
aas
and
loope
jno
cmp
(bad)
fs
outs
mov
add
in
mov
or
jecxz
movs
icebp
lock
cs
popa
movs
push
cmp
div
gs
movs
dec
pop
lock
push
ins
mov
fcomp
hlt
mov
xor
dec
jge
ret
cmp
pop
jle
sub
xchg
xlat
cmp
cmp
int
data16
aam
xor
movs
int
(bad)
test
add
adc
push
and
ins
jae
mov
add
aam
fsubr
xor
xchg
lds
ja
(bad)
pop
outs
cmps
sbb
mov
or
jmp
mov
xor
call
cmps
fdivr
jmp
pop
(bad)
mov
xor
inc
mov
scas
inc
outs
pop
aaa
push
jns
push
cmps
sbb
dec
cmc
lea
xor
sbb
in
call
pop
cld
pop
push
mov
aad
xor
imul
inc
and
jmp
jecxz
dec
fimul
and
inc
jae
sbb
retf
inc
neg
loopne
sub
sub
enter
mov
retf
mov
in
shl
and
mov
stos
push
pushf
scas
(bad)
movs
jl
adc
repz
jmp
mov
dec
jmp
mov
pushf
inc
into
(bad)
js
jle
cmp
rcl
fcomp
shl
xchg
jmp
xor
xor
and
call
xchg
sbb
pop
adc
mov
push
sahf
das
sbb
ffreep
inc
out
mov
call
dec
sbb
mov
pop
sub
loopne
inc
push
or
mov
movs
sub
movs
cdq
cmp
(bad)
cld
jb
pop
pop
or
retf
xor
mov
int
xchg
and
adc
add
aaa
ror
fild
outs
inc
int3
add
je
pushf
es
push
dec
jge
jo
cmp
xchg
mov
movs
sbb
mov
mov
aaa
into
mov
cmps
daa
nop
xor
loop
push
inc
and
arpl
or
movs
stos
pop
movs
iret
mov
dec
pcmpgtb
sbb
and
cmp
ja
ret
and
aas
pop
pop
ret
mov
xchg
and
sbb
inc
icebp
(bad)
xchg
mov
sub
imul
pop
in
aas
xchg
imul
mov
fwait
cld
sub
push
sbb
pushf
pushf
push
add
jno
mov
sub
fld
cdq
retf
cmp
repnz
xchg
sub
adc
or
shl
or
cmp
daa
(bad)
push
cmps
repnz
aaa
adc
shl
fsub
adc
jmp
mov
pusha
out
mov
and
outs
int
aaa
std
js
push
and
push
pushf
popa
mov
cmp
jp
jmp
outs
out
sub
xchg
lahf
xchg
popa
fidiv
cmp
xchg
fdiv
jl
int3
xlat
push
arpl
jnp
loope
fucomi
and
cs
dec
icebp
inc
mov
jbe
add
cmp
inc
out
jmp
xchg
mov
dec
push
data16
out
jnp
aam
fs
and
xchg
imul
(bad)
mov
mov
lods
mov
jmp
(bad)
sub
xchg
test
lds
movs
sti
shl
push
mov
cmps
xchg
jge
int
fldl2t
mov
xor
xchg
pushf
out
mov
imul
xor
push
cmp
xchg
push
(bad)
jae
fbstp
add
(bad)
pop
mov
jnp
mov
mov
jg
dec
stos
mov
stos
xor
sbb
fidivr
mov
push
add
xor
outs
mov
mov
add
sub
and
push
sub
mov
cld
xchg
(bad)
add
dec
imul
mov
adc
sbb
scas
(bad)
int3
test
mov
adc
mov
jns
and
or
inc
mov
stos
and
ss
jb
lea
dec
outs
into
jl
daa
jb
jbe
std
xor
ficom
ins
ins
sub
mov
xor
sbb
xchg
shl
int
daa
ret
repz
and
sti
cmp
sub
mov
cmp
int3
or
mov
jle
pop
jbe
mov
jmp
popf
stc
pusha
sub
arpl
(bad)
(bad)
leave
int
adc
scas
cmc
inc
in
cmp
mov
in
inc
repz
loopne
iret
inc
sbb
enter
aas
mov
pop
and
mov
jge
mov
(bad)
jmp
jo
push
cmps
cmps
cmp
mov
pop
lea
pop
pop
(bad)
sar
cmp
ins
cmp
cli
outs
xor
lods
ins
leave
add
shl
fidiv
cmp
aam
jp
inc
mov
push
arpl
or
push
enter
out
(bad)
mov
ins
or
je
and
adc
sar
xor
shl
jle
mov
bound
scas
arpl
das
sbb
(bad)
enter
cmps
jo
fsubr
lods
cmp
xchg
push
dec
cwde
les
add
sahf
out
pop
adc
clc
popfw
sub
or
jecxz
in
sub
in
in
fs
adc
add
aam
out
add
push
mov
dec
jge
xor
test
add
sahf
sub
or
xchg
fild
lods
ja
and
test
gs
pusha
sbb
inc
in
inc
mov
cmp
xor
mov
mov
movs
xor
scas
icebp
pop
or
sbb
ins
push
push
sahf
push
popa
push
in
pushf
push
adc
and
out
lods
cmp
iret
push
dec
dec
loopne
sub
fmul
inc
cmp
in
out
pop
sbb
inc
hlt
jnp
mov
cmps
mov
mov
inc
dec
lds
repnz
add
in
add
(bad)
mov
inc
mov
test
aaa
mov
int3
mov
xchg
iret
leave
rcr
pop
xor
loop
jb
outs
rol
pusha
js
sti
out
setns
mov
xor
retf
dec
lea
mov
test
shr
sub
push
push
xchg
xlat
dec
in
push
loopne
(bad)
fs
cld
push
adc
lds
jnp
xchg
push
(bad)
xchg
push
les
mov
adc
adc
cmps
pop
sbb
and
call
pop
mov
add
inc
push
fwait
pop
loopne
mov
pop
in
jge
xlat
xor
inc
cmc
imul
div
mov
xchg
or
add
out
test
(bad)
addr16
aam
mov
clc
or
cmp
or
lods
mov
hlt
jae
mov
neg
pop
mov
add
int3
xor
aam
cmp
sbb
bound
xor
push
xchg
mov
add
push
mov
push
cmp
cld
add
cwde
pop
sub
mov
dec
push
(bad)
or
xor
push
sbb
jbe
mov
cmps
test
pop
cmp
(bad)
in
cmp
loop
(bad)
ja
dec
jmp
enter
xchg
push
icebp
lahf
mov
inc
je
mov
imul
pusha
frstor
xor
jle
ja
sub
pop
(bad)
adc
dec
je
dec
imul
das
add
push
push
sub
jmp
(bad)
cmps
aaa
into
xchg
sbb
mov
icebp
mov
fnstenv
pop
cmp
mul
jmp
cli
jmp
loope
lock
out
xchg
fsubr
cmp
or
push
fcmovbe
jmp
out
in
pop
xchg
xchg
loop
rcr
mov
je
sub
xchg
fcom
mov
add
dec
in
xchg
push
and
cwde
aam
repz
sub
dec
(bad)
dec
xchg
int
repnz
push
sub
mov
mov
jmp
fwait
dec
mov
push
jmp
hlt
in
sub
mov
jne
shl
sub
adc
or
xchg
dec
adc
pop
(bad)
popa
push
js
enter
dec
lods
clc
aas
(bad)
lock
cmp
mov
imul
test
mov
push
pop
movs
jb
mov
adc
movs
imul
cmps
fs
and
mov
(bad)
out
imul
mov
add
in
add
pop
jmp
xor
je
daa
cmp
jge
pop
in
add
jbe
stc
arpl
imul
jg
fisub
push
stos
fadd
fimul
adc
in
add
mov
loope
dec
mov
nop
dec
xlat
inc
std
mov
jecxz
push
imul
pop
xor
gs
inc
lods
adc
add
in
and
bound
das
loope
sbb
out
dec
inc
repnz
push
dec
stc
adc
dec
cmps
cmps
sub
dec
lods
loop
sbb
inc
mul
sub
out
cmp
mov
gs
bound
mov
dec
in
ficom
in
mov
mov
imul
sbb
pop
je
retf
sbb
jmp
pushf
cmps
leave
mov
pop
add
mov
dec
inc
push
mov
mov
in
shl
movs
fidivr
mov
fadd
adc
rcr
sub
adc
test
sub
cmp
(bad)
into
imul
xor
push
sahf
leave
ja
js
into
cmp
jmp
push
retf
sti
mov
cmp
ja
in
shl
std
adc
in
mov
call
pop
icebp
inc
out
jmp
js
cdq
out
add
cmp
sahf
cli
mov
sar
mov
fucomi
dec
pusha
mov
push
out
push
fs
ds
mov
sti
call
or
xchg
pop
cmp
aad
push
add
scas
push
mov
sub
sbb
jp
dec
and
pop
add
in
aas
or
mov
test
dec
popf
popf
push
call
pop
out
addr16
jge
test
sbb
jp
pop
emms
inc
xchg
dec
dec
fisttp
jo
add
mov
pop
or
and
adc
push
in
pop
and
cli
pop
(bad)
loopne
add
repz
outs
xor
int3
pop
out
and
push
and
imul
out
xor
fs
hlt
inc
sbb
mov
out
ret
xor
adc
std
sbb
push
pop
(bad)
jecxz
adc
mov
and
mov
push
imul
out
hlt
div
inc
aaa
xor
je
fidiv
addr16
imul
cmps
sub
ja
mov
ins
xor
cdq
into
mov
jb
jmp
inc
int
ds
pop
sub
xchg
jmp
xor
rcl
scas
and
sbb
adc
retf
outs
xor
push
inc
nop
(bad)
ret
xchg
xchg
sub
ret
cmp
mov
add
sbb
jno
je
pop
ins
mov
add
dec
imul
cdq
jbe
loope
lahf
and
mov
pop
test
jnp
push
adc
push
dec
stos
xor
add
ins
sbb
shl
rcr
cmp
mov
lock
(bad)
pop
mov
dec
call
stos
jle
arpl
push
jmp
xchg
push
js
push
pop
mov
out
enter
cmp
add
and
and
shr
std
sahf
fld
xor
or
fcmovb
sub
sub
addr16
push
and
inc
adc
frstor
push
cmps
pop
int3
js
and
dec
push
gs
icebp
or
and
mov
aam
(bad)
ja
push
jl
cmp
or
jno
add
fcmovnb
retf
jnp
stc
rcl
sti
out
pop
repz
cs
icebp
jnp
retf
das
movs
daa
cmp
push
into
jo
shl
aam
mov
and
pop
push
inc
nop
test
inc
xchg
xchg
jmp
or
or
jecxz
fcom
xchg
inc
pop
mov
lods
cmp
imul
and
xchg
ins
js
and
sahf
lods
add
xor
adc
cmc
out
add
std
or
xchg
or
xchg
not
das
push
shl
shl
xchg
sahf
lahf
leave
sbb
inc
jnp
mov
push
xor
adc
daa
int3
xchg
repz
push
(bad)
and
add
stos
cmp
stos
jmp
idiv
xchg
push
lds
adc
add
out
inc
mov
call
mov
call
mov
dec
(bad)
pushf
inc
outs
xor
push
xchg
std
and
xlat
and
dec
lods
cmps
sbb
jg
push
fild
and
mov
jp
ins
dec
and
retf
ret
xchg
stos
mov
jmp
bound
push
push
pop
mov
mov
fist
add
sub
push
adc
popf
ins
push
dec
leave
test
push
das
mov
jl
popa
lock
pop
xor
push
push
mov
leave
ret
int3
call
cs
lods
jae
or
inc
pop
pusha
arpl
outs
ins
sbb
jbe
movs
stc
push
fwait
iret
lods
and
cs
mov
pop
int3
jnp
adc
std
or
xchg
dec
or
fnstenv
push
(bad)
mov
fld
or
sbb
data16
sub
movs
cmp
cmp
dec
out
shl
mov
std
jne
pop
or
xor
shl
out
ret
sub
adc
mov
(bad)
std
aad
out
mov
add
dec
bound
sub
sahf
cmp
jno
ret
retf
cmp
ret
sahf
imul
out
add
and
pop
loopne
bnd
not
bound
inc
or
push
inc
jge
mov
fpatan
cli
mov
xchg
into
jecxz
push
xor
xor
ins
mov
push
inc
nop
xchg
push
fiadd
sbb
add
mov
sti
js
cwde
adc
ret
dec
push
add
ins
sbb
ins
pop
cld
fnstsw
arpl
push
loop
cmp
lea
xchg
int
int
inc
cmp
ins
and
mov
test
pop
pop
cmps
adc
cs
push
mov
call
push
aas
dec
push
or
test
outs
mov
pop
inc
call
mov
jnp
push
sbb
into
pusha
clc
sti
shr
hlt
outs
or
push
dec
in
dec
mov
add
and
shl
std
cs
pop
lods
add
mov
js
inc
(bad)
xor
cli
rcr
test
mov
jecxz
jns
ds
cmp
sbb
push
lock
cmps
add
jno
jge
sub
clc
dec
mov
jno
jno
scas
cmp
test
xor
cdq
test
pop
mov
and
aad
imul
call
and
(bad)
cmp
icebp
fmul
mov
dec
inc
mov
and
and
cmps
adc
jle
bound
jg
in
test
dec
ins
(bad)
cmp
test
or
jecxz
dec
xor
fcomp
imul
enter
lods
jle
and
push
or
or
or
shl
mov
mov
loopne
xchg
sbb
stos
mov
mov
sbb
sahf
inc
jg
add
mov
and
stos
mov
jo
rcr
dec
mov
mov
ss
inc
mov
dec
movs
push
jmp
push
loope
jo
push
mov
push
xor
lods
xchg
pop
mov
test
pop
mov
pop
push
imul
push
cmp
dec
push
adc
inc
jne
mov
push
out
sbb
cmp
pop
jb
push
lds
inc
push
cli
mov
push
dec
or
jecxz
ss
push
xchg
aaa
les
stos
jecxz
int3
mov
mov
lods
aaa
ss
adc
or
cmp
aas
mov
(bad)
or
jp
adc
mov
fidivr
sub
mov
ja
fxch
(bad)
pop
mov
push
jecxz
sbb
jnp
mov
mov
out
xchg
or
jb
call
bound
mov
ret
adc
xchg
ror
inc
das
sub
jge
mov
lea
in
fsub
inc
test
sub
push
arpl
add
int
pop
mov
xchg
and
cmps
std
out
sti
xor
sub
les
aaa
es
jle
jmp
xchg
mov
sub
call
cmps
jo
movs
repz
(bad)
mov
sbb
dec
test
or
xlat
add
std
(bad)
(bad)
xchg
es
rol
add
sub
pop
mov
xchg
(bad)
clc
cmps
scas
jmp
adc
and
rcl
nop
jmp
sbb
data16
jo
pop
push
inc
dec
pop
sbb
test
or
ret
xor
push
sti
dec
mov
ins
mov
mov
cmps
mov
test
loop
out
shl
aad
fs
inc
xchg
xchg
jp
and
mov
pusha
pop
mov
fwait
pop
push
pop
mov
mov
retf
idiv
jl
adc
add
sbb
daa
pusha
and
es
or
ror
sub
dec
inc
xchg
cmp
push
fidiv
imul
(bad)
sti
sbb
fwait
enter
pusha
jmp
(bad)
aas
lods
into
jb
test
(bad)
xchg
sbb
xor
cmps
out
pop
push
and
xchg
test
cmp
rcl
xchg
and
mov
adc
cmps
sub
jo
jge
or
adc
mov
inc
sub
fnstenv
enter
clc
xchg
dec
into
into
mov
out
cmp
into
fiadd
lahf
sbb
imul
loopne
outs
mov
stos
push
jmp
in
iret
in
(bad)
sub
mov
cmp
dec
out
fisttp
inc
js
rcl
push
popf
mov
xchg
int3
cmp
sbb
mov
push
add
ret
mov
ja
xor
cmps
scas
movs
das
(bad)
nop
ja
mov
adc
mov
xor
sbb
fidiv
sbb
push
xor
lds
sbb
stc
ret
fsub
ficom
cmp
xchg
xchg
dec
sub
ss
in
nop
sub
mov
outs
call
lock
daa
in
outs
rcr
jmp
outs
pop
pop
pop
in
int
mov
pop
inc
inc
ss
fs
dec
mov
inc
dec
ja
xor
pop
out
xlat
jb
aam
pusha
rcl
repz
fcos
push
mov
les
jne
inc
dec
and
sbb
push
gs
mov
xor
or
jp
jle
xchg
fisttp
outs
ds
sub
cmp
sbb
xchg
jg
mov
xor
sbb
and
(bad)
mov
inc
adc
push
rol
scas
adc
mov
call
jns
fist
mov
cmp
and
outs
nop
icebp
scas
loope
idiv
sti
adc
mov
fbstp
cmps
mov
or
fsub
fst
bound
mov
sub
mov
stc
aam
in
jge
fistp
dec
cwde
(bad)
std
fild
jno
stos
pop
sbb
loopne
pop
mov
fucomp
jp
jle
fst
jp
lea
enter
stos
push
or
cmp
loop
outs
sub
add
rcr
out
pusha
cmp
dec
in
in
mov
hlt
jno
adc
call
and
add
jae
and
gs
aas
push
cmp
xchg
cli
xchg
mov
test
and
adc
pop
dec
cld
scas
or
sub
nop
dec
shl
jne
ins
push
gs
cwde
dec
and
cmps
sbb
or
jle
pop
inc
enter
lods
pop
push
nop
(bad)
sbb
imul
sub
push
jmp
inc
sahf
xor
adc
cmps
(bad)
lods
xchg
jns
sbb
jo
jecxz
inc
in
push
shl
xor
nop
cs
sub
sub
nop
xchg
and
iret
mov
(bad)
mov
jb
mov
shr
std
mov
daa
mov
mov
push
mov
xor
xchg
xor
fistp
mov
repz
sub
push
mov
pop
or
test
adc
xor
(bad)
mov
sbb
mov
pushf
in
mov
sbb
outs
xchg
call
xor
sbb
jo
sbb
or
dec
and
jle
jp
xchg
test
inc
sub
mov
add
mov
jmp
inc
fistp
xchg
(bad)
es
mov
mov
jg
mov
ficomp
push
iret
push
(bad)
jmp
out
ret
add
add
adc
add
mov
push
cmp
(bad)
xchg
mov
push
xchg
or
adc
inc
sub
jae
cmp
(bad)
jle
lea
sub
mov
dec
pop
iret
sbb
mov
fist
xchg
xor
sti
out
xlat
jmp
push
sub
and
jmp
jl
ret
mov
pushf
imul
(bad)
push
popf
enter
mov
adc
sub
imul
mov
shl
mov
or
dec
pop
push
add
push
in
sbb
into
in
ja
xchg
cmp
or
or
imul
ret
test
push
mov
fmul
jbe
xchg
mov
in
cwde
mov
(bad)
(bad)
shl
pop
mov
inc
jb
sbb
jl
test
and
push
xor
push
mov
fsubp
je
or
pop
int3
imul
fmul
loopne
jo
mov
das
and
lahf
jl
aaa
pop
addr16
out
xchg
inc
nop
or
push
dec
shr
pop
jmp
adc
mov
mov
ror
add
call
popa
punpckldq
popa
mov
sbb
and
dec
cmps
mov
ins
mov
mov
aad
sbb
inc
arpl
mov
inc
push
scas
mov
mov
push
cwde
stc
cmp
dec
icebp
xor
xor
cwde
push
mov
pusha
dec
mov
mov
pushf
dec
cs
xchg
sbb
add
jne
pop
adc
scas
jae
xor
jmp
shl
dec
add
mov
shl
addr16
xchg
cs
aas
iret
pop
ror
sub
mov
mov
inc
popf
sahf
mov
imul
mov
imul
mov
mov
mov
loop
sbb
or
add
mov
movs
ret
shl
mov
jae
pop
call
movs
xchg
mov
adc
(bad)
push
inc
dec
pop
pop
inc
xchg
aaa
fcomp
loopne
call
loopne
jmp
pop
cmps
xchg
and
jl
xchg
popf
mov
cwde
jle
push
push
shl
cmp
ror
cmc
push
push
rcl
lods
and
push
ja
mov
and
mov
cmp
fst
cwde
or
and
inc
cmp
ficomp
push
call
inc
aaa
sub
fcmovnu
shr
and
and
add
lock
int
in
in
mov
dec
push
pop
imul
xor
pop
mov
loope
cdq
mov
mov
aaa
cwde
outs
dec
mov
out
jno
clc
lock
and
fsubr
test
(bad)
jmp
lock
mov
mov
mov
test
sub
cmp
aas
inc
outs
fild
daa
mov
jle
xor
lods
cmp
loop
sbb
lods
nop
in
aad
stos
leave
sub
fldenv
dec
add
arpl
popa
inc
mov
ins
push
int
or
mov
and
pushf
and
int
push
sbb
xor
ins
retf
fwait
jp
push
mov
das
les
push
cmp
pop
xchg
in
(bad)
push
lea
dec
(bad)
jno
jp
mov
xor
fist
sbb
push
mov
push
ins
lea
dec
push
jle
inc
js
cmp
mov
call
dec
pop
sub
pop
daa
mov
stos
xchg
mov
scas
sbb
(bad)
adc
(bad)
push
jne
mov
jecxz
lods
jp
ja
bound
lea
je
stos
aaa
cmps
cmp
imul
jno
add
stos
xchg
pop
xor
jne
outs
pop
push
fst
cdq
fs
sbb
jle
scas
xchg
imul
lds
cmp
adc
or
push
div
idiv
mov
add
push
jno
repz
xor
or
cwde
sbb
sub
inc
scas
push
fisttp
sub
cli
push
sub
(bad)
mov
stos
adc
test
mov
stos
dec
mov
mov
inc
adc
shl
rcr
punpcklbw
inc
adc
xchg
mov
sub
xchg
sar
fisub
sti
dec
sub
pop
cmp
fsub
sub
mov
shl
sbb
ret
push
xchg
lods
xor
mov
cli
ja
xchg
js
cmps
repz
mov
ins
add
into
cli
mov
inc
pop
clc
pop
add
sub
push
fisubr
mov
movs
call
or
pop
jno
nop
shl
icebp
add
ss
jne
jne
scas
pop
test
push
(bad)
xchg
sbb
out
mov
and
mov
sar
xchg
jmp
mov
or
and
cmps
inc
cmp
xor
loopne
pop
leave
cdq
pushf
cmp
xor
pop
mov
xchg
push
jno
dec
xor
stos
mov
outs
cdq
adc
loop
sbb
pop
pop
push
jp
or
xor
adc
jmp
and
ret
push
test
sar
push
xor
dec
(bad)
fwait
out
cmp
(bad)
xchg
enter
jg
mov
xchg
das
cmps
test
scas
and
retf
test
in
les
fist
add
in
xchg
scas
psadbw
bound
sbb
(bad)
jle
add
pusha
lods
fmul
iret
push
(bad)
outs
sti
mov
push
cmp
jno
icebp
mov
cmps
push
sub
add
mov
push
clc
movs
mov
and
cdq
outs
hlt
pop
sbb
xchg
popf
call
loopne
repz
cmp
inc
mov
icebp
fcmove
fadd
push
icebp
pushf
shr
mov
push
xchg
adc
rol
das
cmp
mov
mov
sbb
push
xchg
cmc
shl
push
mov
add
pop
sub
pushf
mov
jo
mov
out
push
mov
rcl
jmp
aad
imul
adc
es
scas
(bad)
lock
mov
push
out
xor
jmp
mov
adc
jb
ror
dec
into
int
sbb
(bad)
popa
mov
gs
leave
cli
mov
retf
or
ins
add
mov
aad
ins
pop
aad
lahf
xor
rol
adc
jecxz
std
pop
or
cmc
in
repnz
cli
inc
cmp
mov
fpatan
add
sbb
mov
jmp
pop
hlt
adc
push
adc
xor
xchg
fisub
jo
push
sti
loop
push
call
inc
push
call
out
mov
mov
inc
loop
mov
pop
sub
mov
or
cmp
outs
jbe
fld
fldenv
rol
inc
inc
outs
jle
inc
lods
sub
ins
dec
push
add
or
(bad)
jp
mov
or
scas
push
dec
sub
and
adc
(bad)
xor
nop
pop
add
or
(bad)
rcl
add
or
push
shr
push
cli
and
ret
shl
jmp
pop
mov
mov
sbb
and
clc
clc
cmovno
ret
sbb
(bad)
dec
cmp
jns
xchg
pop
adc
ror
fst
dec
daa
stos
mov
mov
mov
out
dec
fisub
inc
inc
or
jnp
iret
or
and
mul
xor
xchg
fsubr
bound
pop
push
inc
xor
shl
pop
xchg
sub
mov
movs
je
pop
mov
out
inc
xchg
icebp
xchg
sar
icebp
sti
xchg
fdiv
pop
iret
mov
lds
rcl
jns
mov
pop
dec
test
jecxz
repz
outs
scas
stos
push
ins
out
pop
and
jae
and
or
cmp
add
add
arpl
sub
sub
in
fwait
pop
dec
dec
xchg
jmp
cmc
mov
imul
mov
fst
ins
mov
sbb
xor
xor
sub
in
scas
push
(bad)
fldcw
push
scas
ret
push
xchg
lods
fisubr
test
sbb
mov
pushf
adc
lods
mov
cmp
scas
pop
ins
sub
movs
lods
jns
loope
sti
pop
call
out
adc
daa
xchg
mov
xchg
fisttp
fild
lds
lds
rcr
pop
mov
xchg
mov
je
test
jecxz
fwait
xor
jbe
mov
fsubrp
jecxz
out
ror
inc
dec
arpl
mov
cmps
fldcw
ret
or
cld
jae
add
mov
mov
dec
jmp
adc
icebp
cmp
std
dec
pusha
lods
mov
or
jl
loop
fmul
xor
mov
jp
lahf
and
mov
pop
int3
into
loop
pop
push
dec
hlt
ja
xor
xchg
mov
lods
je
xchg
dec
cli
pusha
pop
lock
push
(bad)
mov
or
hlt
ret
fcom
or
sbb
jecxz
and
scas
in
add
daa
in
loope
inc
loopne
sub
sbb
or
(bad)
dec
sti
pop
mov
adc
arpl
pushf
loopne
imul
enter
leave
movs
add
or
dec
xchg
add
imul
sbb
leave
cmc
lea
movs
push
das
mov
aaa
pop
mov
mov
sar
inc
or
int
jne
mov
cs
fwait
stc
jbe
jmp
scas
cmc
rcr
retf
icebp
jmp
ror
aaa
std
mov
xchg
cs
mov
xchg
jle
(bad)
cld
add
scas
push
inc
enter
mul
mov
in
sar
or
fcmovnb
xchg
es
sahf
or
cdq
push
pop
ret
mov
cmp
sbb
pop
mov
shl
lds
repz
xchg
addr16
inc
jmp
mov
movs
fmul
ja
out
adc
sub
lods
nop
pop
mov
clc
rcl
mov
cmps
pop
iret
icebp
jbe
(bad)
out
xor
push
xchg
in
retf
jmp
adc
xchg
xchg
out
cmp
jbe
les
das
(bad)
pop
hlt
xor
aad
jl
jecxz
jecxz
pop
test
dec
cdq
ins
pop
mov
stc
or
ficomp
popa
jge
imul
sti
add
rcl
idiv
adc
bound
aam
ss
mov
mov
push
xchg
dec
jmp
and
pop
or
ficomp
or
bound
jne
mov
movs
repnz
jo
xlat
add
and
jge
sar
push
(bad)
push
push
fnstenv
icebp
and
xor
xor
push
(bad)
ss
ficom
xchg
mov
sbb
test
rol
cmp
in
add
lods
and
cwde
icebp
call
out
dec
popa
sbb
ins
xor
jb
pushf
sbb
test
xchg
cwde
pop
stos
push
dec
neg
push
sahf
test
aad
outs
daa
in
inc
out
push
popa
ret
in
fnstenv
ret
xchg
jle
cmc
inc
test
loop
jno
mov
sub
popa
jmp
out
mov
es
ds
int
in
(bad)
cld
aam
push
and
mov
push
or
push
popa
dec
rol
daa
add
(bad)
sahf
mov
xor
add
pusha
jg
ins
dec
stos
mov
adc
inc
inc
pop
xchg
bnd
push
add
inc
idiv
dec
fisttp
dec
frstor
repz
pavgw
(bad)
push
out
out
xor
inc
bound
or
mov
scas
(bad)
das
mov
gs
and
dec
jbe
mov
jmp
retf
outs
inc
fisttp
cmp
pusha
cmp
out
in
cmps
mov
jne
movs
sub
cmp
lahf
scas
int
aad
sub
mov
xor
loop
push
and
(bad)
add
add
fs
sbb
je
jmp
ret
or
ror
in
mov
ds
loop
mov
pusha
cmp
ss
in
jg
mov
test
xor
mov
push
popa
fsub
jno
ins
repnz
sti
cld
lahf
cmp
mov
out
jle
leave
ret
mov
dec
push
outs
and
push
sub
stc
stc
lods
sbb
sub
mov
lea
cs
sbb
lea
sbb
mov
in
test
jno
push
ins
cmp
add
mov
ins
mov
push
fsubr
fs
mov
popf
jl
xchg
pushf
in
jge
add
movs
(bad)
mov
ror
push
idiv
std
or
call
inc
icebp
mov
sub
iret
repz
hlt
fistp
ins
adc
(bad)
add
test
jecxz
push
pusha
fcmovnu
adc
lea
and
jns
dec
inc
cmp
cmp
das
add
or
inc
fadd
push
movs
int3
clc
jle
mov
xchg
inc
(bad)
mov
movs
and
sbb
fstp
test
pop
test
les
ret
cmp
add
out
or
stc
or
out
inc
je
scas
mov
or
pop
repz
jno
and
dec
jle
shr
sub
test
popf
test
xlat
xor
sbb
push
clc
fs
adc
dec
or
jge
xchg
mov
clc
lds
addr16
push
fsubp
dec
mov
sar
xchg
jecxz
pop
cli
xlat
cs
popa
outs
mov
push
dec
int3
jecxz
xlat
retf
sub
out
lahf
lock
je
lds
test
mov
repz
xchg
nop
push
push
fcomp
hlt
pushf
dec
ds
outs
xor
xor
jo
repnz
pop
je
test
stos
mov
stos
stos
and
sbb
adc
push
and
inc
dec
lock
add
pop
inc
not
pop
sbb
(bad)
das
pop
(bad)
lods
inc
pop
pusha
inc
adc
or
stos
sub
xor
add
add
cld
sahf
test
mov
adc
loopne
jmp
push
adc
sbb
xlat
push
rcl
add
xchg
jge
fbld
jcxz
mov
fnstsw
inc
popa
sub
sahf
jmp
xchg
hlt
inc
call
cld
aaa
adc
call
sub
jmp
shl
scas
cs
cwde
sbb
add
cmps
dec
js
fcom
mov
cmp
mov
dec
jp
ds
xchg
neg
sub
pop
test
cwde
jl
(bad)
loopne
jns
add
push
or
pop
fsubr
fwait
mov
push
cmpps
std
pop
and
inc
in
mov
mov
inc
sub
xor
mov
leave
jne
pushf
mov
sbb
jmp
dec
or
push
jp
(bad)
xor
add
sahf
sahf
jp
lds
mov
fimul
sahf
xchg
push
stos
adc
xchg
fidivr
repnz
and
shr
rcl
je
sub
retf
mov
sub
data16
mov
imul
xor
(bad)
shl
inc
inc
sti
aam
inc
xchg
sub
(bad)
cmp
jge
pop
or
test
daa
add
pop
movs
jns
repz
cmc
push
outs
stos
outs
imul
ins
jp
or
mov
xchg
sbb
cmps
imul
push
test
gs
cmps
(bad)
scas
out
jp
push
sbb
mov
mov
pop
sub
enter
xchg
in
out
mov
jns
hlt
cli
jecxz
mov
sub
push
add
in
inc
pop
jg
scas
or
lods
adc
pop
fwait
add
push
fwait
js
push
fwait
ja
ror
xlat
stc
add
and
call
inc
adc
dec
lahf
jmp
outs
jno
or
xor
popf
retf
mov
imul
pop
ficom
mov
mov
mov
jge
mov
clc
xchg
mov
(bad)
ja
xchg
dec
xor
mov
mov
int
je
mov
mov
or
mov
inc
sbb
scas
ins
je
fisttp
cmp
movs
cmp
vfrczsd
dec
(bad)
ror
jnp
adc
sahf
dec
mov
sbb
ficom
sub
xor
retf
addr16
frstor
jmp
enter
sbb
fistp
sub
stc
xor
mov
btr
test
imul
add
ins
mov
div
or
adc
cdq
fisubr
fistp
inc
cs
into
add
call
mov
lods
rcl
or
jg
mov
cmc
cmp
mov
call
xor
les
movs
addr16
jecxz
push
cli
xor
imul
xchg
or
cmps
inc
xchg
cmp
sbb
add
popf
dec
loope
cmps
or
in
dec
fstp
inc
adc
dec
dec
arpl
neg
cs
xchg
div
je
xor
mov
mov
es
or
js
jl
clc
pop
cld
xchg
(bad)
rcl
push
cmps
add
(bad)
mov
or
rcr
and
mov
cmp
popf
mov
leave
xor
xor
cmp
les
sbb
and
push
gs
lods
sbb
cld
aam
and
xchg
rcr
mov
mov
lods
mov
pop
pop
(bad)
out
jnp
pop
cdq
test
(bad)
test
scas
sub
sbb
add
(bad)
aas
mov
hlt
pop
loope
out
out
mov
test
adc
mov
fucomi
pop
pop
pop
in
mov
mov
ins
inc
ja
push
mov
sbb
or
lods
sub
int
pusha
mov
jns
popa
mov
cmp
adc
out
sub
jle
xor
jmp
add
jb
mov
dec
pop
aaa
mov
ja
jo
mov
cmp
sbb
cli
mov
pop
shr
jbe
mov
(bad)
xchg
lods
push
mov
(bad)
into
and
iret
test
adc
xor
sar
test
jmp
adc
xlat
shl
xor
loop
mov
cmp
pop
mov
scas
int3
dec
add
rcr
pop
xchg
and
outs
mov
add
sub
cmp
push
scas
or
xor
push
push
pop
xor
loop
popf
sub
mov
and
xchg
sbb
cmps
test
adc
(bad)
cmc
mov
out
icebp
xor
mov
retf
stos
gs
and
leave
loope
ret
mov
xchg
retf
xchg
outs
add
stos
movs
adc
add
loopne
or
fsubr
cmp
stc
sbb
ins
scas
sbb
cmp
and
sbb
daa
(bad)
stc
push
popa
add
hlt
popa
mov
pop
pushf
mov
cmps
sub
(bad)
xor
ret
push
jmp
push
movs
loop
push
mov
xchg
hlt
hlt
pop
or
jmp
and
push
sbb
push
sbb
xor
hlt
call
dec
adc
pop
sub
fbld
aaa
xor
stc
mov
sbb
pusha
in
sub
cmp
adc
sbb
rcl
aas
jbe
xchg
sbb
xlat
pop
test
stos
mov
aas
push
or
or
daa
jge
jle
xor
psubsw
cli
enter
push
ret
out
sbb
out
jge
jge
ret
ins
or
push
pavgw
push
jmp
call
sub
push
pop
(bad)
leave
out
dec
push
dec
cmps
jo
add
es
cmp
adc
pop
jmp
mov
adc
adc
test
adc
adc
jmp
mov
cmp
sbb
sbb
test
(bad)
into
sbb
sub
push
mov
xchg
fisubr
sub
sub
or
fimul
adc
pop
fcomp
jle
cmp
push
lahf
scas
out
es
mov
sub
cmps
and
push
cmp
xor
ss
(bad)
aaa
ins
sub
pop
xor
dec
ins
sbb
inc
stos
mov
cmp
add
pushw
adc
push
test
xor
push
in
aam
mov
pop
jno
cmp
mov
inc
stos
inc
inc
or
lds
mov
dec
push
cmp
mov
out
(bad)
xor
out
adc
in
and
ja
xchg
bound
sbb
dec
and
or
cmp
cld
movs
jge
fmul
(bad)
adc
fwait
mov
mov
enter
push
sbb
stos
cli
xor
retf
mov
inc
fdivr
mov
or
iret
scas
js
mov
push
ror
sahf
jb
hlt
and
out
jp
bound
and
daa
bound
imul
fcmovnb
xchg
stos
mov
and
(bad)
cwde
test
xchg
sahf
add
jno
outs
fst
stc
sbb
rol
in
out
fdiv
push
enter
ds
iret
pop
cmps
fisttp
jge
loopne
sub
in
aam
or
xor
jne
add
cmp
fisttp
or
js
mov
jnp
xchg
out
mov
cmp
add
mov
and
retf
call
mov
dec
inc
fs
xchg
mov
push
jae
test
cld
(bad)
sub
out
cld
cmp
jbe
mov
push
jns
enter
frstor
adc
mov
cli
sbb
sbb
sbb
and
cmp
ds
jae
div
mov
sub
call
cmps
push
sbb
adc
dec
rcl
(bad)
sub
pop
jbe
jne
and
adc
xor
inc
pop
jns
cmp
push
aaa
mov
mov
or
repz
repnz
push
jbe
adc
ret
and
test
not
repnz
popf
std
fisub
xchg
daa
or
sbb
inc
xchg
inc
cmp
xor
mov
mov
jne
icebp
sub
pusha
test
inc
shl
sbb
cmp
imul
cdq
loop
gs
sbb
aaa
lods
test
call
test
outs
wrmsr
jne
pushf
pop
adc
xor
(bad)
into
out
push
dec
ja
out
mov
out
pop
fwait
outs
xchg
adc
mov
dec
movs
out
(bad)
fcmove
ss
or
xchg
test
(bad)
(bad)
(bad)
adc
mov
push
xor
mov
lds
jne
jmp
fwait
xchg
or
or
shr
(bad)
xlat
(bad)
(bad)
in
mov
repnz
rcl
stos
fstp
pop
jmp
fisttp
and
fimul
xchg
movs
mov
mov
pop
push
inc
mov
icebp
ds
add
repnz
loope
xor
mov
jae
mov
cmc
xor
out
pusha
dec
nop
pushf
movs
cmp
lods
movs
xor
push
in
cwde
dec
xchg
aad
retf
sti
or
cmp
jmp
movs
dec
lods
(bad)
sbb
arpl
and
pop
add
add
mov
mov
in
imul
es
in
push
mov
jl
mov
xor
sbb
ror
pop
stos
(bad)
jo
fisub
jmp
jnp
dec
cmps
dec
fistp
add
mov
cmps
cmp
mov
gs
mov
adc
add
ror
mov
pop
daa
dec
mov
cld
add
jns
fimul
stos
or
(bad)
mov
arpl
xacquire
add
sub
pop
sub
aas
sbb
dec
or
mov
jne
ins
(bad)
add
nop
xchg
xlat
xlat
push
push
mov
inc
into
inc
sbb
iret
fs
mov
cmp
jl
ror
push
or
pop
in
ss
xchg
adc
mov
cmp
lods
pop
popa
inc
loop
sbb
and
call
pop
test
cmp
cmc
aam
dec
mov
rcl
test
xchg
xchg
xor
aad
call
repz
xchg
aaa
xchg
in
ror
pop
retf
jp
mov
xchg
xchg
mov
cld
jnp
aam
pop
sbb
lahf
cmps
lea
pop
add
cld
dec
xlat
pop
out
fs
xor
mov
jnp
ret
and
stos
test
rcr
fsubr
cwde
les
mov
adc
dec
mov
pop
bound
pop
int
mov
xor
dec
and
inc
jmp
cwde
add
sbb
(bad)
push
and
dec
call
loope
cs
cmp
ja
mov
push
push
xor
rcl
push
mov
push
fsubr
push
les
adc
jmp
mov
pop
fcmovnu
cmp
loope
movs
cmps
mov
xchg
cmp
cwde
icebp
inc
cmp
setge
inc
mov
cmp
fiadd
lea
mov
sub
shl
push
ret
ds
movs
call
ins
daa
ds
dec
push
ds
pop
cmc
inc
mov
cmp
stos
add
imul
dec
adc
and
mov
(bad)
xor
lahf
xor
ret
cmp
repnz
pop
in
mov
inc
adc
sub
mov
sbb
ins
repz
inc
leave
dec
add
push
not
ja
push
div
xor
add
xchg
adc
mov
mov
popf
mov
sti
add
sbb
out
and
inc
sub
inc
xchg
xor
mov
lea
sar
pushf
jae
hlt
and
pop
in
lock
and
push
inc
xor
(bad)
sbb
push
aam
cli
(bad)
in
pop
mov
mov
ja
shl
fisub
repz
(bad)
sbb
inc
mov
lahf
retf
xchg
inc
inc
jecxz
jo
nop
stos
or
pop
xchg
out
cld
mov
jns
jo
mov
dec
out
push
and
and
in
inc
out
(bad)
and
rol
inc
mov
mov
xor
jecxz
sbb
xchg
push
cmp
int
xor
jg
xchg
rol
adc
out
sar
pop
test
loope
in
dec
push
push
cmc
fsubr
jno
mov
jo
fchs
and
push
cdq
ja
pop
scas
shl
push
lea
jmp
mov
jae
xchg
mov
data16
and
jo
jl
mov
inc
xchg
push
add
xchg
cmp
inc
outs
cmps
sahf
std
aas
pop
ret
aaa
cmp
jae
cmp
outs
loop
adc
icebp
addr16
pop
sbb
ret
jns
dec
out
and
stc
pushf
mov
jle
ins
jns
inc
add
into
outs
dec
inc
aaa
dec
mov
(bad)
and
movs
jne
sbb
inc
cmp
cmp
inc
or
jle
test
fild
sar
int
shl
gs
jg
push
jnp
push
fmul
test
out
push
sbb
push
mov
scas
and
adc
mov
mov
out
daa
jge
fistp
add
mul
mov
cmp
add
dec
mov
push
add
mov
jbe
clc
sti
loopne
add
add
sbb
out
aaa
pop
xchg
sti
jb
fsub
mov
push
std
add
sub
adc
xor
jmp
or
sub
rcr
or
lds
popa
les
loope
inc
pop
pop
jmp
mov
mov
(bad)
aaa
adc
jg
(bad)
jmp
push
in
and
stos
mov
and
shr
pop
pushf
cmp
push
call
adc
or
mov
xor
mov
out
test
xchg
rcl
enter
and
mov
outs
sbb
stc
dec
pusha
inc
(bad)
outs
std
stc
es
push
mov
test
push
lds
(bad)
fist
jg
je
jmp
das
mov
(bad)
jmp
icebp
push
js
fstp
iret
and
test
inc
and
push
xchg
sbb
out
adc
pop
xchg
jns
mov
jp
jle
ja
imul
cmp
call
rcr
cmp
(bad)
xchg
inc
(bad)
sbb
sbb
xchg
mov
mov
xor
imul
(bad)
call
add
stc
movs
leave
fdivrp
sub
jo
lea
enter
cmc
push
mov
jo
pop
stos
add
pusha
or
cmp
xchg
push
sub
imul
and
lds
call
adc
and
movs
(bad)
cs
imul
add
std
mov
popa
mov
cmp
adc
frstor
dec
and
xacquire
push
out
(bad)
jmp
ret
adc
mov
push
xchg
inc
mov
xchg
xchg
(bad)
lods
mov
and
fcomp
mov
scas
push
and
or
cmc
xchg
in
mov
push
inc
(bad)
lods
out
dec
test
dec
jmp
cmps
and
sbb
enter
sahf
(bad)
or
pop
ds
repz
mov
pushf
sti
adc
mov
push
jo
into
pop
dec
mov
adc
and
cld
bound
sub
cmps
fisttp
daa
xchg
mov
enter
daa
js
jnp
div
and
lock
mov
jge
addr16
adc
das
pop
ret
xor
shl
xor
mov
ss
icebp
sbb
sbb
sub
mov
lods
inc
push
add
div
imul
sbb
or
sub
add
fisub
adc
or
gs
pop
or
push
mov
aad
mov
dec
outs
add
add
push
jne
xor
sub
arpl
push
leave
sbb
pop
dec
mov
jg
xchg
aad
outs
in
mov
lahf
in
jl
push
inc
or
fwait
or
jmp
mov
or
imul
cmp
push
cmp
xor
sub
clc
out
mov
or
leave
movs
fs
fsub
cmp
cmp
nop
ss
mov
and
daa
mov
push
out
les
ficom
pushf
into
outs
jno
cmps
or
xor
mov
push
arpl
scas
dec
cwde
js
daa
dec
je
mov
or
cdq
pushf
sbb
push
and
rdtsc
mov
add
test
retf
push
sub
or
pushf
xchg
or
pop
in
fsub
ret
(bad)
jne
fnclex
jb
cmc
jno
test
imul
jns
or
or
movs
lods
cmp
ss
or
loope
rol
(bad)
std
inc
mov
xchg
xchg
stc
fcom
pop
add
pop
inc
das
push
leave
aas
xor
xchg
and
ds
neg
pop
mov
test
adc
scas
addr16
inc
sub
iret
call
mov
push
push
movs
lds
rcr
loopne
pop
cwde
out
cmps
adc
fldenv
adc
add
fdivr
stos
mov
inc
cmp
sar
dec
mov
aaa
es
sub
mov
add
loope
iret
adc
sbb
fmulp
pop
dec
mov
jmp
ss
jl
cmp
daa
sub
dec
push
std
into
xchg
mov
mov
aad
adc
and
rol
icebp
call
aaa
popf
hlt
movs
sti
add
pop
int
bound
sbb
and
or
das
inc
mov
push
add
cmp
div
(bad)
into
movs
not
fwait
inc
iret
out
xchg
push
xchg
ret
pop
mov
dec
jmp
movs
loopne
lock
xchg
(bad)
dec
imul
add
test
sbb
popf
push
inc
pop
cld
cmps
jge
cmc
stc
adc
cs
jl
dec
cmps
shl
pop
out
mov
jno
add
sub
repz
jg
pop
cmp
sub
pop
inc
dec
daa
jbe
popa
inc
ror
mov
jns
adc
inc
mov
es
(bad)
jae
loope
int3
sub
push
(bad)
pop
aam
jmp
cmp
fiadd
(bad)
fimul
jl
xor
mov
mov
xchg
ja
stos
cmp
leave
cmp
bts
push
xor
outs
(bad)
rcr
adc
(bad)
(bad)
inc
rol
xchg
je
sbb
fld
mov
xor
sub
repz
sahf
outs
movs
clc
push
jae
scas
pop
sbb
jae
aam
cwde
dec
fisubr
sub
pop
repnz
push
test
out
jmp
ret
repnz
clc
or
cmp
push
sub
int
pop
mov
and
adc
xchg
stos
pop
inc
cmp
push
out
retf
test
pop
jnp
mov
push
shl
adc
inc
fcmovb
popa
rol
dec
gs
push
stos
jmp
mov
inc
shl
pop
fsubr
in
fcom
inc
ins
(bad)
rol
(bad)
pop
xchg
stc
dec
lock
scas
fs
popa
push
xchg
inc
mov
outs
inc
mov
bnd
cld
ss
fadd
sti
mov
mov
xchg
pusha
clc
mov
in
cmp
imul
pop
jno
sbb
push
mov
sbb
lea
pop
and
std
and
and
iret
adc
(bad)
jmp
out
jo
mov
ins
xchg
adc
mov
mov
call
sbb
data16
popa
dec
xchg
(bad)
aad
jne
les
je
mov
daa
loopne
jl
sub
fwait
mov
push
mov
inc
pushf
jb
rol
xlat
in
daa
jb
jnp
ja
mov
sbb
xchg
inc
cmp
loop
lsl
sub
jg
clc
cmp
jle
dec
loop
sub
push
test
aaa
inc
jb
pop
loope
mov
cmps
jecxz
xchg
xchg
ss
mov
sbb
loope
fbld
stos
setb
ins
les
mov
retf
jle
cmps
mov
cs
loope
fwait
pop
dec
push
pop
sbb
jmp
movs
and
mov
xor
je
mov
fmul
mov
es
mov
pop
inc
(bad)
push
push
jne
sub
in
push
fdiv
(bad)
lods
loop
das
mov
data16
(bad)
jp
push
(bad)
mov
sub
in
mov
mov
adc
mov
push
mov
call
or
into
(bad)
call
clc
jecxz
outs
mov
fsubr
pop
mov
iret
aam
xor
push
mov
(bad)
scas
fucom
inc
mov
mov
ficom
and
outs
cmps
xor
sahf
sti
or
xchg
(bad)
dec
sub
cmc
jns
sti
cmc
sahf
sbb
into
mov
push
repz
daa
jb
ja
mov
sti
mov
dec
gs
pop
add
add
sbb
shr
or
jge
hlt
das
(bad)
xchg
inc
or
or
jno
aas
out
out
leave
in
xchg
test
and
xchg
pusha
add
pop
cmp
push
pop
mov
xor
stos
fcomi
out
xchg
dec
popf
add
cmp
jbe
jnp
pop
mov
and
inc
pop
cmp
push
shr
mov
xchg
pop
mov
cwde
add
fst
push
dec
es
pop
out
out
call
int3
(bad)
fistp
addr16
or
stc
out
adc
push
scas
pop
xor
mov
sbb
or
test
xor
repz
pop
jge
cwde
daa
gs
or
sub
scas
or
mov
fnstenv
or
sub
fxch
inc
sbb
jg
ja
ins
ja
jecxz
mov
push
pop
stc
sbb
fs
pushf
sub
add
int
or
cdq
pop
push
pop
mov
ins
scas
ror
add
xor
inc
inc
les
mov
push
mov
mov
lahf
and
test
jne
fiadd
xchg
sbb
xor
and
jno
bound
xlat
in
push
dec
inc
test
jae
cli
fild
inc
fiadd
sub
test
enter
call
or
push
jecxz
add
ja
adc
dec
cs
sub
jb
movs
inc
es
(bad)
rol
adc
inc
add
mov
xchg
xor
xor
mov
aad
mov
ror
and
sahf
out
sub
(bad)
push
call
sbb
cmps
leave
daa
jo
or
push
push
js
and
jnp
add
sti
clc
pop
mov
lahf
inc
call
int
adc
xor
dec
sbb
or
sar
sbb
inc
xchg
and
add
cmp
and
cld
scas
lea
(bad)
les
dec
hlt
jbe
push
outs
or
fdiv
jge
cmc
ds
inc
push
movs
(bad)
sub
and
test
shl
add
les
fadd
leave
repz
mov
repnz
call
pop
mov
or
mov
or
enter
dec
sbb
fs
daa
push
in
dec
jecxz
push
jne
push
sub
pop
or
std
xor
xchg
std
xchg
jnp
rcr
ficom
dec
aad
mov
mov
mov
(bad)
cdq
in
lahf
add
or
pop
mov
and
push
sbb
pop
pusha
mov
mov
retf
sbb
mov
adc
pop
outs
rol
pop
(bad)
lea
mul
push
jns
pop
inc
adc
fnsave
dec
xor
jo
fstp
call
mov
in
jecxz
or
je
test
mov
jmp
outs
ret
sub
mov
adc
inc
xchg
enter
jle
sti
mov
loopne
xchg
out
mov
jmp
lds
fucomi
test
inc
sbb
mov
(bad)
mov
inc
popa
in
inc
pop
mov
jae
stc
jmp
mov
stos
mov
pop
or
inc
dec
adc
adc
fst
mov
imul
mov
xor
push
add
jno
fsubr
lahf
cld
es
je
(bad)
out
sub
popa
lods
jnp
push
adc
enter
mov
es
in
cmp
sub
ins
cmp
gs
shl
pop
fidiv
mov
or
inc
cwde
vpunpckhwd
push
cmc
cmp
lods
add
xor
scas
inc
into
or
fidivr
lods
sub
or
into
ret
ror
or
sbb
lods
ins
ret
sbb
and
aad
fcom
mov
sub
and
retf
daa
sub
sbb
xor
xor
mov
mov
rcl
retf
js
iret
pop
xor
lahf
pop
push
cmp
das
jge
xchg
adc
mov
adc
sbb
cmp
or
outs
dec
je
or
xchg
pop
cmp
or
mov
or
inc
fcomp
jp
sub
ss
push
cmp
mov
hlt
js
or
inc
mov
fstp
shl
icebp
(bad)
cmc
cli
in
test
mov
adc
push
fcom
xor
xchg
mov
imul
mov
or
sqrtps
or
or
in
loopne
and
mov
xchg
imul
adc
fiadd
inc
arpl
out
call
xor
and
test
mov
sbb
xchg
out
inc
repnz
lods
xchg
retf
popa
push
in
test
ss
test
mov
jge
int
xchg
repz
dec
or
loopne
cs
arpl
add
inc
stos
adc
pusha
jno
jae
hlt
das
dec
addr16
jb
mov
xor
pushf
jg
movs
push
repz
pop
lea
lock
addr16
vpand
and
sub
inc
(bad)
popf
mov
jbe
mov
and
and
inc
xchg
cdq
aas
sbb
retf
xchg
mov
cld
mov
call
add
or
test
shl
xor
das
mov
mov
or
scas
popa
or
bound
xlat
aam
dec
outs
mov
addr16
pop
sbb
adc
and
cmp
hlt
aaa
push
adc
xor
pop
and
cmp
xchg
dec
outs
inc
mov
fnstenv
sub
adc
jmp
retf
clc
xor
out
(bad)
(bad)
(bad)
retf
(bad)
ins
leave
(bad)
mov
shl
test
enter
data16
sbb
movs
bound
mov
or
sub
xor
xlat
(bad)
fild
mov
xor
dec
faddp
or
ja
test
lds
cmps
sbb
inc
dec
and
fisttp
std
je
push
mov
dec
or
(bad)
push
retf
mul
fcom
adc
sbb
stos
ss
mov
xor
cmc
cld
bswap
mov
add
jno
xor
inc
sbb
cmp
jo
jle
in
(bad)
nop
xchg
rcr
inc
or
adc
pop
jb
out
fiadd
call
mov
push
test
cmps
imul
dec
lock
neg
xchg
mov
shr
or
call
out
es
sbb
fs
jl
shl
jmp
xchg
arpl
adc
scas
out
pop
sbb
pop
lock
mov
pop
pop
daa
sbb
add
(bad)
xor
push
and
push
shr
adc
mov
imul
imul
push
(bad)
shr
adc
loopne
lea
fdiv
test
inc
das
sbb
sub
pop
mov
adc
inc
ds
cmp
add
jnp
and
popf
cs
sbb
or
adc
aad
cmps
xchg
push
jb
(bad)
or
pop
imul
js
mov
out
push
inc
pop
ss
mov
mov
es
or
jmp
sbb
cmp
cmps
sbb
mov
sti
and
pop
jbe
pop
(bad)
mov
pop
jne
pop
mov
popf
fnstenv
mov
cmp
lock
xor
jg
push
repz
and
cli
loop
aad
movs
xor
adc
inc
sbb
neg
or
xchg
mov
ins
sbb
aad
std
inc
stos
arpl
neg
sub
push
icebp
or
push
adc
pop
rol
pop
or
sbb
dec
popa
dec
dec
push
inc
adc
in
shl
out
idiv
mov
dec
nop
inc
aaa
lahf
add
cmps
(bad)
mov
test
movs
rol
jne
fsub
mov
dec
fsubr
les
sub
push
mov
ret
cmp
in
push
mov
shr
out
scas
push
dec
loop
int
in
in
mov
ret
in
sbb
mov
das
inc
mov
or
jae
mov
adc
retf
fstp
fdiv
pop
xor
add
in
or
sub
mov
mov
loope
push
add
js
imul
es
inc
(bad)
or
in
dec
outs
int3
sub
mov
fld
dec
(bad)
adc
sbb
cmp
shr
test
push
dec
cmp
idiv
push
fld
ret
dec
test
jg
in
fcom
jp
retf
sbb
jge
sub
dec
sub
or
or
jmp
push
(bad)
sbb
test
xchg
out
jmp
mov
push
sub
jge
cmps
push
pop
arpl
stos
inc
mov
neg
in
pop
shr
int3
xor
pop
sar
sub
xor
cmc
xchg
aas
add
not
jbe
or
nop
fadd
cld
pop
dec
jmp
dec
test
mov
ror
lea
cmps
dec
sub
repnz
xchg
cwde
sub
outs
cli
inc
push
mov
call
or
jge
mov
out
mov
push
inc
jnp
jp
shr
(bad)
dec
inc
out
xchg
sub
lea
scas
and
fild
mov
in
fist
js
mov
push
push
cmp
inc
pop
fwait
or
enter
dec
mov
iret
fisttp
ja
cmp
dec
sub
pop
sub
fisubr
cld
and
jp
and
sub
lods
mov
push
jne
movs
jo
cmp
in
mov
ja
fiadd
lahf
(bad)
inc
(bad)
jecxz
repnz
aaa
cdq
xor
mov
pusha
pop
or
icebp
dec
pop
fs
or
xchg
out
or
cdq
or
and
dec
mov
xor
shl
test
sub
jge
xchg
outs
jmp
mov
int3
aaa
hlt
or
and
or
repnz
mov
add
in
movs
fld
add
scas
mov
xchg
(bad)
div
out
inc
es
fimul
cmp
nop
sti
(bad)
sub
push
mov
dec
mov
or
or
ror
adc
pusha
mov
dec
ja
in
mov
out
add
retf
add
jae
call
(bad)
mov
fstp
int3
ret
mov
adc
inc
pop
gs
hlt
cdq
out
lahf
popa
paddw
ror
mov
push
cmps
lods
outs
lods
mov
jecxz
int
(bad)
lds
dec
jnp
iret
inc
cmp
push
daa
cs
(bad)
retf
dec
ffreep
cs
add
pop
adc
popf
or
in
out
psubq
dec
sbb
or
pop
dec
scas
lahf
cmp
lods
pop
shr
mov
cmps
sub
mov
add
call
xchg
fidivr
popf
mov
xchg
shr
inc
mov
xchg
xchg
inc
sub
push
pop
dec
sbb
jp
scas
mov
mov
out
fidiv
jbe
fimul
jb
mov
sub
lock
jno
jmp
inc
retf
xor
add
sub
fwait
jl
jae
xlat
mov
dec
sub
cld
mov
mov
mov
jmp
push
inc
sbb
inc
add
dec
stc
cmp
mov
xor
lock
test
xchg
mov
shl
sub
pop
jmp
sbb
aad
or
test
enter
add
js
or
inc
sbb
imul
pop
and
inc
cmp
cli
push
push
fs
fadd
ja
sub
lea
fadd
imul
mov
mov
cmps
sbb
pop
pushf
xchg
out
xchg
xchg
mov
sbb
ret
and
push
xchg
inc
sbb
in
lea
in
xor
stc
adc
or
mov
mov
cwde
push
push
pop
aas
pushf
push
(bad)
ficom
mov
test
retf
pusha
sbb
aam
fdivr
scas
pop
int
out
pop
xor
push
arpl
lods
pushf
jnp
popa
xchg
push
test
lds
mov
mov
fdivr
or
mov
(bad)
(bad)
das
add
and
mov
xchg
cdq
data16
mov
call
or
or
rcl
xchg
(bad)
xlat
jmp
or
sahf
jecxz
add
or
outs
dec
std
mov
add
call
dec
push
add
sbb
add
cmp
repnz
xchg
cmps
jp
pop
push
pop
xchg
stc
ret
push
repnz
jo
gs
jge
add
xchg
dec
sub
push
lods
aas
repnz
dec
stos
movs
mov
xlat
movs
scas
loope
add
push
lock
or
add
out
fnstcw
cdq
add
and
xchg
and
mov
iret
scas
mov
jnp
pop
mov
sub
jne
sbb
add
adc
sub
leave
and
pop
enter
stos
pop
push
rcl
jg
js
loope
inc
cmps
push
and
pop
jmp
in
dec
mov
pop
add
jbe
cmc
xor
jo
adc
pop
mov
mov
ds
or
out
xchg
inc
sbb
stc
fsub
(bad)
loop
mov
ins
(bad)
cld
inc
daa
sbb
adc
cld
hlt
outs
mov
ret
outs
ins
dec
mov
or
dec
dec
retf
mov
pop
cmps
cwde
inc
enter
in
mov
lahf
scas
(bad)
mov
cmp
fwait
push
fcom
mov
ret
add
and
dec
imul
shl
jae
cmp
fimul
ficom
leave
(bad)
and
push
and
imul
test
mov
pop
ror
sub
sbb
fwait
adc
test
mov
jge
(bad)
xor
pushf
call
push
rcr
mov
push
jns
dec
lods
sti
js
out
aaa
sub
pop
cwde
jge
mov
dec
mov
add
push
sub
mov
cmp
movs
mov
pop
dec
mov
and
mov
inc
inc
cmc
mov
ja
and
or
(bad)
arpl
icebp
out
imul
cdq
fwait
aam
nop
rcl
xchg
mov
aam
jg
pop
outs
in
add
test
ds
push
inc
sbb
jne
mov
cmp
test
cmps
sbb
mov
in
popf
ins
xchg
jge
pushf
retf
dec
push
push
loop
pop
fild
(bad)
mov
aaa
and
add
call
in
jge
loop
(bad)
push
push
fsubr
cmps
gs
pushf
aas
movs
adc
xchg
push
push
xor
sbb
adc
and
dec
add
push
mov
out
test
mov
mov
mov
retf
adc
fcom
mov
pop
add
ret
xchg
mov
jmp
and
icebp
mov
xlat
mov
push
sub
int3
movs
jmp
stos
cmp
cmp
fsub
mov
xor
test
add
in
pop
push
retw
popfw
push
jmp
dec
push
xchg
outs
push
pop
mov
mov
mov
out
push
mov
mov
mov
mov
cmps
push
add
fild
js
xchg
xor
and
stc
sbb
movs
(bad)
out
or
cmps
bound
je
or
lea
cmp
je
bound
push
sub
dec
inc
pop
cs
xor
inc
rcl
sub
pop
cmp
dec
es
in
push
jae
xor
(bad)
inc
jbe
fidiv
std
mov
cmp
sar
movs
push
in
fstp
push
je
push
jno
movs
mov
retf
out
xchg
mov
in
sub
mov
sbb
adc
cdq
xor
jae
fmul
cmp
popa
pop
inc
in
aam
(bad)
or
mov
xor
push
and
inc
pop
sbb
xchg
and
jle
das
push
aas
jb
aaa
or
loop
call
pusha
aas
retf
inc
test
mov
jmp
sub
inc
sbb
in
test
sub
mov
jmp
sti
mov
test
xchg
xor
mov
xor
aad
mov
mov
pop
xchg
jo
jae
mov
cld
arpl
push
pop
rcr
mov
movs
xchg
cwde
or
sbb
mov
test
loope
adc
(bad)
fidivr
pop
sbb
xchg
and
(bad)
(bad)
inc
cmp
or
mov
push
data16
or
mov
test
mov
es
test
shl
xchg
repnz
nop
pop
lock
pop
mov
sti
movs
(bad)
loopne
xchg
inc
fdiv
retf
jae
fdivr
pop
dec
call
bound
fcomp
inc
je
aam
pop
xchg
stos
add
adc
iret
jmp
das
add
fidiv
rcl
fisubr
(bad)
dec
mov
jns
sahf
test
dec
rcr
int
add
xor
hlt
or
pop
div
das
rol
inc
neg
shr
rol
jbe
repnz
pop
push
int
loope
fidiv
stos
shl
xchg
add
iret
repz
xor
add
ficom
sbb
mov
mov
adc
push
fucomip
xor
xchg
jl
xor
sbb
iret
pushf
sub
cmp
jb
pusha
out
retf
pop
sbb
ret
stos
xchg
dec
in
retf
jo
cmps
jmp
sti
into
fcmovbe
ss
pop
ins
xchg
scas
and
inc
dec
or
dec
(bad)
iret
mov
mov
and
and
jecxz
jge
sbb
jmp
xchg
mov
mov
cmps
add
sub
cs
(bad)
aas
xor
sub
nop
hlt
mov
fsub
sbb
dec
sub
arpl
sub
dec
cmp
pshufw
mov
pop
(bad)
mov
in
into
adc
mov
fmul
cmc
ret
jge
adc
data16
mov
mov
mov
mov
int3
popf
hlt
addr16
sbb
scas
or
push
fnstsw
cwde
mov
aad
dec
outs
mov
inc
loope
mov
xor
cwde
in
xchg
cwde
icebp
(bad)
xchg
inc
push
leave
mov
call
fmul
fcmovne
(bad)
sub
cmp
sub
mov
loop
movs
test
iret
(bad)
and
mov
je
mov
arpl
jnp
mov
lock
jle
out
mov
adc
stos
leave
(bad)
aam
hlt
scas
in
fimul
mov
fcom
dec
jno
in
lods
cmp
repnz
dec
push
jg
ss
retf
jne
fmulp
add
gs
sar
je
xchg
in
pop
js
xor
adc
pop
mov
jle
mov
pop
sbb
xchg
xlat
and
pop
xor
cmc
inc
stos
mov
jb
stos
mov
cdq
pop
xor
dec
sbb
xor
stos
sbb
mov
sub
add
add
iret
xor
inc
sub
mov
stos
or
out
inc
ror
cmp
sbb
call
mov
sbb
adc
pop
sar
jmp
mov
retf
ins
adc
and
mov
adc
aad
pop
icebp
adc
shr
repnz
adc
stos
cmps
sub
das
fidiv
mov
adc
xchg
dec
cli
inc
jb
jmp
push
jb
or
push
dec
(bad)
xor
sbb
cdq
jp
xchg
lds
mov
bound
mov
sub
idiv
out
adc
jne
push
push
mov
dec
push
mov
pop
lods
mov
adc
push
add
adc
lock
(bad)
and
dec
ins
sbb
pop
pop
and
lahf
push
mov
movs
mov
inc
fild
push
jp
or
mov
xor
xchg
mov
add
and
std
scas
cld
addr16
out
dec
int3
jge
je
or
mov
push
movs
clc
aaa
dec
movs
push
mov
jecxz
cmps
jle
add
scas
xchg
mov
mov
movs
nop
xor
mov
cmp
repnz
test
push
in
push
bound
fiadd
scas
ins
data16
mov
lea
adc
dec
mov
dec
and
pop
cmps
inc
jns
aam
icebp
nop
push
adc
call
xor
enter
(bad)
test
js
jbe
nop/reserved
jno
arpl
adc
inc
cmp
call
adc
out
mov
xor
hlt
cmp
push
xchg
jbe
fsub
sub
aaa
das
mov
add
xchg
shl
ins
pop
(bad)
movs
jle
cmp
jle
and
loopne
popf
mov
loop
xchg
push
xor
push
stc
out
xchg
mul
(bad)
mov
fisub
cmp
scas
dec
dec
ret
aad
in
retf
inc
mov
xchg
popa
inc
ror
add
dec
cmps
and
rol
dec
push
adc
popf
es
lods
or
mov
aam
sti
repz
test
cmp
xchg
cmps
ret
pop
in
cmp
dec
adc
add
mov
pop
icebp
rol
or
jg
cmp
retf
hlt
xchg
sbb
pop
clc
xor
ficom
sub
movs
mov
push
push
out
push
cmp
mov
or
call
fisub
ror
sub
and
cdq
outs
dec
call
add
or
jns
and
push
cli
loopne
push
aam
call
mov
cwde
lahf
in
or
adc
dec
dec
ret
sbb
rcl
inc
adc
sbb
fucomip
xor
sbb
loope
movs
lea
ds
lods
cs
push
jns
(bad)
shr
push
out
jns
or
sub
neg
ret
xor
sti
movs
ds
jb
mov
cli
adc
inc
pop
test
rcl
dec
scas
xchg
mov
and
or
jge
std
call
mov
lods
sub
lahf
rol
test
test
inc
sbb
jo
std
jbe
add
gs
inc
sbb
lds
movs
daa
inc
cdq
add
(bad)
sub
cmp
sti
jb
and
sti
outs
mov
xor
(bad)
test
adc
pop
movs
push
mov
retf
(bad)
fstp
push
dec
add
loope
popf
jns
push
cs
xchg
lds
pushf
stos
jmp
jo
out
call
test
add
fs
shl
add
and
mov
mov
sub
lock
fidiv
cdq
xchg
repnz
pop
and
and
mov
pusha
mov
iret
xchg
xchg
enter
xor
leave
daa
or
pop
or
lahf
fidiv
and
mov
stos
aaa
push
mov
xor
loope
bound
and
nop
xchg
(bad)
push
adc
xchg
add
sub
mov
xchg
xchg
fwait
iret
jmp
mov
test
dec
das
scas
inc
dec
aas
pop
cmps
sbb
in
aaa
dec
xchg
retf
xor
pop
xchg
ret
xchg
cmp
push
xor
sub
jnp
and
or
loopne
test
mov
fnstsw
cmp
int
mov
or
push
pop
stos
add
leave
pop
sahf
cmp
(bad)
pop
pop
repz
stc
push
mov
mov
jp
add
mov
or
stc
jne
pop
or
or
daa
pushf
or
jl
xlat
mov
sti
pop
and
bound
js
(bad)
or
mov
movs
xor
push
adc
xchg
int
inc
add
int3
add
rcl
jne
nop
dec
inc
and
lods
jmp
ror
out
cmp
data16
aam
je
mov
cmps
push
hlt
mov
gs
shl
int
mov
aad
jecxz
push
jp
repz
push
mov
push
mov
mov
jno
loop
and
add
int
out
das
or
jg
pop
mov
nop
mov
pop
adc
(bad)
fs
push
fnop
fsubrp
shl
mov
loopne
pop
frstor
psadbw
loop
push
jge
push
mov
imul
ret
add
xor
into
inc
data16
aas
sub
mov
shl
push
(bad)
xchg
xor
add
hlt
call
sbb
add
test
pop
ret
cwde
imul
push
push
cmp
mov
aas
jg
loop
add
shl
fld
mov
(bad)
jo
(bad)
xor
or
xchg
xchg
ds
pop
push
outs
jne
jne
int3
faddp
clc
add
aam
mov
cmp
sub
cwde
jns
xchg
xlat
movs
outs
jne
mov
call
hlt
into
movq
inc
mul
cmp
lahf
stos
sub
mov
push
dec
ror
xchg
add
mov
cwde
sti
mov
and
rcr
pop
xchg
ret
xchg
mov
(bad)
xchg
and
popf
cs
(bad)
pop
popf
sti
cs
mov
mov
in
je
xchg
jl
xor
mov
ja
loopne
loope
mov
push
repz
pop
lds
mov
and
popa
fwait
add
shr
and
scas
lods
loope
pop
and
pop
and
fs
mov
mov
cdq
xor
movs
ret
mov
pop
mov
jge
hlt
push
shl
test
add
in
test
push
push
sub
outs
imul
xlat
ds
mov
aaa
mov
xchg
pop
fldcw
fbld
inc
pop
mov
inc
test
sbb
xor
mov
rcl
xchg
pop
test
data16
repz
rcl
aas
mov
mov
and
test
sub
or
out
xchg
xchg
push
xor
adc
call
jmp
mov
cmp
and
dec
xor
mov
or
dec
mov
(bad)
ficom
cmp
adc
cmp
jnp
cmp
rcl
hlt
xchg
mov
ret
jne
sbb
sar
sub
fwait
add
ja
mov
push
mov
test
adc
cmp
ret
leave
shr
ret
std
nop
jge
mov
les
std
jo
movs
mov
shl
nop
mov
jl
sub
hlt
inc
iret
mov
jmp
cmc
mov
mov
sub
push
(bad)
lods
fcom
pusha
pop
sar
daa
not
jmp
inc
xor
or
sbb
xchg
fld
repz
xchg
in
rcl
push
pop
lods
sub
jno
(bad)
scas
and
and
repnz
retf
mov
int
or
ret
lahf
in
fs
(bad)
or
popa
icebp
fs
repnz
fimul
loope
sbb
fwait
mov
arpl
test
je
enter
or
add
idiv
adc
xlat
pop
or
ror
inc
fst
cmp
pop
mov
adc
aas
and
outs
rcl
test
out
adc
loope
aad
pop
loopne
and
mov
shr
dec
cmovno
jg
push
push
and
xchg
(bad)
sbb
pushf
jmp
cwde
inc
bound
(bad)
or
ret
cmps
inc
add
jno
popf
hlt
(bad)
jle
jecxz
(bad)
xor
pushf
cmc
sar
mov
dec
or
add
in
loope
jae
jns
adc
and
inc
daa
push
out
inc
or
jo
jae
stos
and
repz
xor
jbe
adc
data16
pop
mov
mov
retf
loope
mov
fldcw
pop
lods
push
daa
call
cs
xchg
dec
and
scas
inc
(bad)
retf
enter
ins
test
arpl
(bad)
and
push
aas
inc
call
mov
in
or
fwait
outs
(bad)
hlt
mov
jnp
cdq
pushf
call
mov
or
cmp
aas
mov
enter
out
in
loope
push
push
xor
jp
fabs
out
mov
mov
cmp
sahf
xor
in
pop
adc
push
inc
mov
ds
xor
sub
jmp
mov
lea
aad
call
inc
retf
push
in
out
inc
add
inc
inc
jb
sub
sahf
mov
or
imul
(bad)
retf
pop
test
repnz
push
out
push
inc
into
mov
fs
jl
not
push
push
(bad)
in
jge
pop
inc
or
movs
add
popa
sub
retf
pop
push
in
fld
loopne
xor
retf
xor
dec
idiv
and
fild
fs
sub
pop
shl
cmps
ror
hlt
test
out
push
mov
ret
cwde
(bad)
cmp
or
mov
arpl
xor
aaa
xor
ins
aad
sahf
xchg
jecxz
push
das
mov
or
inc
xchg
adc
inc
cmp
cmp
cld
sub
js
shl
push
pushf
aad
out
xor
popa
mov
aas
sar
cmps
mov
push
inc
xchg
xchg
cwde
mov
cmp
ins
ror
pop
cmc
mov
out
pop
jmp
or
jmp
std
jge
cmc
xchg
pop
fstp
jne
lds
inc
lock
mov
dec
in
sbb
mov
xchg
mov
pop
push
and
jmp
mov
bound
ret
xchg
sti
jp
lods
call
push
adc
dec
sbb
in
mov
fimul
into
rcr
mov
je
test
mov
mov
adc
rol
mov
test
inc
iret
out
cmps
or
dec
stc
mov
shrd
pop
jo
js
mov
fisttp
hlt
pushf
lahf
or
xor
stc
mov
nop
xchg
(bad)
push
dec
movs
fmul
mov
adc
jae
cld
cmc
mov
fwait
xchg
out
jnp
dec
aad
cmps
int
into
dec
icebp
mov
push
fwait
into
sti
(bad)
adc
(bad)
jmp
cld
cwde
push
pop
inc
ja
mov
sbb
jecxz
add
push
shr
cs
push
mov
jae
leave
es
ror
pop
jmp
aad
cmps
pop
pop
sub
and
mov
sbb
out
or
adc
or
inc
fucom
outs
scas
bound
mov
int
outs
mov
mov
hlt
xchg
mov
in
sub
sub
repz
sbb
xor
popf
dec
sbb
sub
jle
pop
je
call
gs
cdq
mov
jg
push
stos
mov
iret
std
mov
inc
aam
jmp
jnp
pop
mov
or
pusha
repnz
xchg
sbb
push
jb
mov
inc
and
test
push
jae
lea
xor
dec
out
aad
ja
out
and
xor
dec
inc
repnz
add
loope
push
cmp
cmp
add
sbb
mov
pop
adc
shl
iret
and
in
mov
addr16
xor
test
mov
or
mov
ins
imul
cmps
inc
sub
in
cmp
test
lock
mov
push
(bad)
iret
imul
je
pop
xchg
and
int3
mov
test
or
dec
jle
pop
mov
xlat
or
arpl
push
ja
fdivr
pop
bound
and
movs
clc
int3
push
imul
jge
push
rcr
pop
pop
add
or
add
bound
fsubr
lds
in
pop
loope
(bad)
sahf
adc
(bad)
xor
sub
mov
add
clc
jb
imul
pop
jge
xchg
rcr
call
jno
pop
xchg
test
loope
adc
cmp
sar
mov
icebp
ret
xchg
dec
out
push
jno
movs
add
nop
mov
(bad)
inc
(bad)
push
sub
test
push
sbb
jne
hlt
jg
retf
xor
push
sbb
xlat
(bad)
fstp
std
cmps
xbegin
add
pop
fmul
inc
mov
pop
add
(bad)
or
xchg
nop
in
je
mov
pop
popa
outs
mov
test
lds
mov
push
daa
adc
iret
iret
inc
dec
push
mov
push
lea
cmp
clc
pop
cmp
clc
xchg
sub
mov
xor
pop
add
(bad)
lea
lea
outs
inc
cwde
pop
pop
add
or
and
test
add
push
mov
out
pop
aad
push
in
pop
cmps
loop
xlat
jmp
mov
adc
push
or
dec
aam
fadd
lock
push
mov
push
add
xor
movs
cld
clc
test
cmps
setle
add
repnz
and
enter
add
xchg
pop
jl
pop
cmp
outs
mov
fdiv
ins
dec
movs
(bad)
sbb
outs
int
inc
stos
sub
(bad)
jle
cmp
mov
fcmovu
push
adc
fstp
mov
mov
jbe
pop
mov
mov
push
mov
add
cmp
cmc
cmp
lods
mov
sub
sbb
(bad)
hlt
call
repnz
pusha
mov
neg
xor
cmp
hlt
push
xchg
test
aam
push
outs
ds
inc
adc
pop
std
dec
add
cmp
push
loope
and
and
je
lds
mov
clc
xor
mov
hlt
js
jo
outs
movs
repz
pusha
mov
sbb
es
push
mov
jb
in
mov
mov
or
imul
rcr
(bad)
std
cmps
dec
add
out
xchg
mov
aaa
sahf
icebp
sti
pop
stos
sub
int3
bound
std
out
push
jmp
mov
mov
xor
and
sbb
es
pushf
div
jecxz
arpl
ja
sahf
call
ja
outs
movs
shl
push
mov
hlt
movs
and
or
cli
jp
retf
mov
cmp
jg
mov
aam
sti
jg
(bad)
test
enter
or
push
xor
inc
jb
mov
sbb
xor
xchg
dec
iret
xchg
ja
in
cwde
dec
rcl
xor
cli
push
movs
cmp
loope
imul
rcr
inc
shl
xchg
lea
and
jg
push
add
xchg
loopne
daa
addr16
pop
dec
popf
push
dec
cmc
push
xor
push
jecxz
jno
jo
pop
das
mov
aad
dec
cmp
es
ror
fwait
aaa
outs
(bad)
jg
pop
push
lock
inc
ret
cdq
scas
adc
stos
sti
lock
pop
mov
cmps
xlat
imul
hlt
outs
sub
cmps
rcr
mov
and
fidivr
sub
sub
imul
and
jo
(bad)
hlt
mov
dec
and
inc
(bad)
clc
and
fild
bnd
push
mov
and
or
bound
rcr
ret
add
dec
fisubr
push
dec
in
(bad)
scas
jne
and
mov
arpl
mov
fwait
jae
xor
ds
sub
loopne
lahf
das
out
mov
push
stc
lea
std
mov
xor
mov
sub
fisttp
and
pop
fisub
mov
idiv
dec
arpl
(bad)
inc
jae
mov
mov
sub
adc
and
adc
mov
inc
xchg
cmps
retf
test
es
xchg
mov
arpl
add
mov
(bad)
loope
jmp
sub
jmp
das
ret
dec
daa
lahf
scas
adc
jne
cmp
cmp
adc
cmp
aaa
xchg
nop
sti
repnz
imul
cld
outs
ins
mov
test
ins
data16
int3
sbb
sbb
and
sbb
mov
adc
movs
inc
push
adc
lods
jmp
xchg
pop
pop
and
mov
add
sbb
sbb
outs
push
adc
ds
or
sar
outs
push
je
mov
rcr
mov
inc
stc
int
sub
mov
lahf
rol
loopne
sbb
mov
cmc
jo
aas
xchg
lahf
fs
inc
inc
sub
ds
movs
ret
xor
ja
(bad)
call
mov
jl
and
cdq
mov
in
pusha
pushf
xor
repz
loopne
xchg
push
adc
cmp
lock
enter
sahf
loop
ret
xchg
(bad)
stos
sbb
xchg
sub
and
pop
adc
cmp
ins
addr16
into
push
inc
sub
nop
enter
(bad)
xor
lods
jo
mov
outs
jne
push
das
pusha
dec
cmp
cld
ffree
push
cli
out
jmp
dec
ins
pop
cli
jne
xchg
repz
out
call
sbb
sbb
jmp
iret
jbe
add
push
retf
xchg
lea
aad
test
xchg
sti
repnz
push
cld
retf
mov
je
scas
popf
inc
inc
inc
outs
push
and
(bad)
enter
dec
(bad)
jp
sub
lea
adc
mov
push
sbb
cmp
in
or
hlt
xchg
xlat
push
inc
xor
mov
jl
cmc
add
cld
aam
fs
adc
mov
fiadd
neg
sbb
pop
dec
jmp
mov
mov
std
call
dec
mov
adc
fimul
sbb
mov
pop
inc
pop
jge
imul
xchg
enter
jmp
into
mov
add
pusha
add
push
leave
or
loopne
fadd
push
or
dec
sahf
add
cdq
stc
sub
mov
or
sub
loopne
inc
into
(bad)
(bad)
push
movs
cwde
sub
rol
xchg
or
dec
test
es
push
scas
dec
cmp
jb
pushf
mov
rep
movs
adc
push
adc
sbb
add
je
inc
pop
(bad)
sub
out
xor
test
fisttp
gs
fld
test
mov
lock
xchg
stos
pop
xchg
loopne
sub
cmp
das
adc
jbe
or
push
aas
inc
jbe
repz
cmp
jns
fwait
cmc
inc
(bad)
and
cmp
jae
xor
xor
and
out
sub
sub
or
ror
cmc
fimul
pop
cmp
add
movs
mul
out
outs
aam
dec
mov
(bad)
loop
shl
mov
inc
pop
xchg
int
lods
lock
movs
dec
cli
pusha
push
outs
add
or
popa
out
push
xchg
inc
iret
xchg
or
sub
dec
daa
or
out
addr16
adc
out
mov
lahf
push
inc
push
jmp
loop
dec
mov
(bad)
out
pop
je
push
ss
loopne
mov
pop
loopne
inc
in
sub
neg
add
sahf
scas
jnp
retf
ja
dec
fucomi
hlt
pop
xchg
pop
push
pushf
es
mov
movs
aad
jae
popa
aas
jno
repnz
addr16
jo
fcomp
jb
scas
jae
sbb
mov
inc
mov
imul
call
pop
ficomp
mov
leave
in
pusha
or
ja
jnp
mov
dec
out
mov
imul
adc
aad
lds
xor
sar
iret
add
ins
leave
xor
pop
fwait
xor
call
mov
and
jg
jns
dec
scas
(bad)
out
jns
ins
not
mov
das
or
jl
xchg
sbb
or
dec
cmp
cdq
je
jb
inc
xor
sbb
(bad)
sub
sub
mov
mov
mov
mov
jbe
stos
inc
pop
add
sbb
sub
(bad)
out
sub
mov
in
sahf
out
mov
fs
int
dec
inc
and
sub
pushf
jmp
jno
nop
inc
into
stos
adc
call
fwait
jb
fdiv
fisttp
mul
in
popf
rcl
and
int
mov
or
ja
in
out
prefetchw
cmps
mov
adc
xor
add
rcl
mov
out
sbb
fistp
clc
add
sar
adc
push
rol
cmp
sahf
outs
leave
jae
xchg
shl
mov
movs
leave
add
les
mov
jne
xchg
jle
popa
push
hlt
lods
test
jecxz
fidiv
pop
pop
das
cmc
fsub
xchg
outs
hlt
out
cmp
xor
ja
pop
std
(bad)
lods
jmp
adc
fs
cdq
(bad)
fistp
ss
mov
jno
jg
pop
mov
lds
pop
and
cmp
cwde
mov
push
(bad)
pop
adc
lock
mov
cmp
jg
inc
or
xchg
inc
pusha
pop
mov
jne
mov
mov
nop
cmps
js
add
mov
lds
xchg
loop
(bad)
fisttp
cmp
push
push
jns
repz
xlat
mov
aam
cmp
sti
jmp
das
push
or
lock
pop
mov
addr16
popf
dec
cmps
into
sub
jmp
xchg
mov
sub
stc
adc
xlat
rcl
dec
add
rcl
mov
les
leave
mov
cpuid
pop
push
cmps
in
fidivr
inc
jo
add
pop
test
pop
pop
jge
sub
outs
xor
push
cvtps2pd
sti
cwde
inc
pop
sub
ret
(bad)
in
es
cmp
rcr
sbb
sbb
stos
pop
adc
aam
pop
inc
push
gs
aam
fld
sbb
std
call
clc
adc
mov
rcl
and
imul
sbb
lea
mov
jns
int
mov
push
mov
jns
fiadd
dec
add
adc
cmp
jmp
sbb
or
pop
fisttp
movs
dec
adc
popa
ja
cmp
pop
cmp
sub
adc
cmp
iret
sbb
pusha
cmps
fld
pop
dec
test
ins
pop
cmps
nop
js
rcl
and
xor
or
lods
mov
xchg
movs
stc
adc
mov
xchg
mov
xor
sub
jne
mov
pop
movs
mov
sar
shl
test
dec
pop
xchg
rcl
sbb
into
xchg
push
dec
or
cmps
enter
jl
cvtdq2ps
adc
add
retf
pop
push
out
mov
push
retf
mov
in
push
(bad)
test
jno
xchg
stos
add
daa
mov
mov
pop
adc
sbb
sub
icebp
test
iret
pop
push
fidiv
adc
mov
cwde
loopne
fidiv
rcl
add
mov
adc
shr
out
adc
js
cmp
mov
dec
jmp
cdq
pop
das
push
scas
mul
jle
test
movs
das
dec
mov
sbb
(bad)
out
pause
xchg
movs
cmps
jne
test
inc
sar
sbb
push
inc
xor
div
(bad)
mov
rol
adc
sbb
adc
pop
pop
repnz
addr16
loopne
push
jnp
iret
add
jbe
stos
cmps
fwait
sti
hlt
(bad)
retf
add
push
jle
or
sbb
add
jecxz
mov
xlat
je
pop
lds
aad
xchg
jbe
adc
cs
mov
hlt
xchg
or
jno
into
fbstp
add
sub
mov
inc
movs
imul
mov
fmul
das
aad
stos
pop
les
sahf
sub
lods
jns
scas
test
icebp
xchg
mov
mov
sub
add
xor
pushf
sbb
dec
js
dec
int
iret
jo
cmps
adc
and
inc
clc
in
cmp
jae
test
fcom
push
aam
(bad)
mov
sub
rcl
mov
jge
or
dec
outs
xchg
or
in
in
loope
stos
pop
adc
movs
inc
xor
or
fld
inc
jmp
fs
std
cmps
(bad)
adc
out
push
sub
pop
ss
jl
add
fsub
push
jne
mov
push
fs
pop
jg
loope
loope
lods
sar
jmp
push
adc
je
adc
xchg
jl
ins
shr
into
xchg
add
adc
pushf
das
enter
nop
cmp
cwde
inc
mov
stos
adc
rcl
movs
mov
clc
in
(bad)
dec
daa
or
push
push
mov
jb
loopne
pop
mov
inc
push
push
repz
adc
add
sbb
push
stc
add
mov
sub
inc
mov
(bad)
sbb
xor
fcomp
dec
push
imul
push
in
and
ret
(bad)
mov
imul
jge
mov
int3
stos
jge
loop
pop
mov
and
scas
pop
jb
inc
push
xchg
xor
jg
xchg
or
and
add
push
es
iret
sbb
mov
mov
hlt
out
and
xor
sbb
lea
sub
stos
in
add
ins
sti
push
popa
leave
sub
xor
ins
push
jae
pop
nop
mov
js
cli
add
lds
fisubr
mov
cmp
sub
fiadd
push
inc
shr
js
jnp
lahf
je
movs
mov
out
fs
add
adc
push
jns
xlat
(bad)
shr
xchg
mov
add
push
mov
addr16
call
mov
sbb
test
add
xchg
jg
jle
ret
xlat
enter
scas
mov
aas
ds
bound
xchg
or
pop
outs
gs
mov
loop
mov
and
sbb
jl
(bad)
cdq
sub
repz
and
popf
retf
xor
fdivr
nop
mov
stos
stos
pop
pop
pop
je
(bad)
mov
iret
sub
aam
aaa
jmp
loop
dec
lahf
adc
fwait
push
lds
xor
xchg
in
mov
movs
mov
movs
mov
js
cmps
sar
test
in
jl
popf
jae
fbld
repz
cmp
add
mov
mov
lds
test
cld
sbb
cld
dec
icebp
fwait
out
ret
mov
xor
mov
pop
pop
loop
mov
fcomp
cwde
jl
pop
sub
and
rcr
ins
in
inc
cmps
aad
outs
jb
out
cmp
jp
dec
in
mov
mov
jb
add
ret
ds
pushf
mov
or
fwait
mov
or
sbb
or
mov
cld
xor
push
into
lock
pop
sbb
push
int3
popa
mov
xlat
pop
out
lods
ror
xchg
loope
mov
lods
nop
mov
push
push
xor
or
push
inc
mov
or
sbb
les
inc
push
sub
cmp
sbb
push
int3
into
xor
fcomp
test
dec
iret
test
sahf
loope
scas
lds
jb
(bad)
adc
mov
sbb
jmp
lock
mov
mov
cli
aas
je
int
inc
sti
dec
test
xor
jo
xor
out
hlt
cmp
sub
popf
nop
out
aam
(bad)
cli
mov
cdq
es
inc
test
xchg
adc
jecxz
push
enter
add
(bad)
mov
jno
sub
movs
xchg
pop
push
or
inc
cli
pop
rcr
xchg
int
mov
and
lock
leave
pop
and
imul
adc
arpl
int
mov
bound
mov
imul
dec
push
dec
mov
inc
test
sub
ror
pop
ret
popf
cld
icebp
push
test
imul
jnp
jnp
out
cmp
mov
dec
mov
shr
int
jne
mov
enter
inc
leave
pop
push
lods
adc
adc
jne
aaa
pushf
jmp
mov
(bad)
push
std
dec
aad
inc
arpl
inc
xlat
repnz
cmp
pusha
cli
push
outs
xor
sub
mov
jae
jns
pop
sub
jl
sub
test
xchg
inc
call
cmps
sbb
aaa
nop
in
call
or
imul
fstp
popf
in
pop
fwait
mov
xor
dec
(bad)
xchg
adc
mov
call
lock
mov
pop
xchg
cmp
dec
xor
rcl
jbe
push
imul
fnstenv
push
add
inc
dec
arpl
std
(bad)
xchg
lods
sbb
cld
lock
sbb
add
adc
jns
or
repz
daa
mov
adc
sub
jbe
cmp
into
ins
pop
aad
adc
xchg
pop
jle
and
cmp
stos
mov
inc
or
jecxz
dec
dec
push
cmps
dec
(bad)
ja
xchg
sbb
test
push
xchg
pop
shr
aaa
js
in
nop
in
adc
sub
fsubr
dec
push
push
jb
sbb
std
push
mov
(bad)
jl
jmp
iret
add
mov
push
lea
int3
fsub
call
and
js
aad
call
or
cs
xor
mov
(bad)
in
push
jne
std
xchg
lea
loope
fsubr
xchg
lock
pop
arpl
ins
cmp
int
and
ret
xchg
cdq
adc
push
dec
call
scas
xchg
pop
and
jo
dec
sub
adc
mov
xchg
data16
lds
(bad)
ret
pop
mov
add
test
in
cmps
js
and
cmc
pop
loop
stc
fmul
ja
movs
and
addr16
lock
xchg
xor
(bad)
enter
fadd
dec
and
shl
and
sbb
cmp
(bad)
stos
(bad)
stos
adc
enter
int
inc
push
or
dec
add
add
mov
add
dec
or
mov
pop
mov
sahf
fbld
adc
test
shr
sub
xchg
out
push
adc
cmp
adc
rcr
mov
add
sbb
xchg
xchg
repnz
jecxz
(bad)
stc
jmp
pop
cmp
jge
mov
or
mov
sbb
push
in
xlat
(bad)
stos
xchg
fdivr
(bad)
adc
pop
pop
dec
dec
xchg
pop
sub
sbb
in
jg
xor
in
scas
pop
retf
fwait
mov
inc
push
or
cwde
sbb
push
mov
nop
lock
push
or
fdiv
repnz
sub
or
les
repnz
sahf
mov
int
int
fcom
or
cdq
jl
xchg
mov
or
dec
add
mov
rol
jae
shl
jge
mov
mov
aam
cmps
fmul
mov
dec
jge
lahf
mov
out
test
int
ds
xchg
and
lods
inc
cdq
rol
call
(bad)
cmps
out
wbinvd
sub
in
dec
ror
scas
cwde
sub
mov
sub
jecxz
js
mov
mov
inc
imul
dec
imul
sub
mov
neg
and
push
push
push
mov
jno
(bad)
int3
retf
out
outs
pop
adc
lock
gs
or
pop
push
jecxz
fwait
mov
or
and
cmc
jmp
dec
out
mov
leave
sbb
add
dec
into
jmp
xor
mov
mov
iret
retf
or
lds
add
and
xor
mov
mov
test
iret
lock
dec
cmp
fsubr
pop
jno
ins
add
mov
imul
inc
rol
mov
push
iret
ins
or
inc
ror
cdq
xor
sysenter
out
pushf
ins
jl
sbb
and
adc
and
push
mov
rol
pop
test
popf
mov
sar
xor
mov
fucom
test
icebp
js
es
or
jge
jle
dec
loope
push
or
inc
jp
and
cs
mov
jmp
das
mov
xor
jge
in
pop
push
retf
(bad)
shl
loop
ins
aam
js
cmp
iret
pop
inc
in
out
call
movs
add
out
sbb
jmp
mov
std
add
aaa
sbb
or
adc
fucomi
sti
or
lods
mov
add
mov
xchg
mov
xchg
dec
push
leave
cmp
pop
icebp
cli
enter
sbb
jbe
fs
hlt
xchg
or
dec
add
fsubr
les
jmp
in
push
retf
mov
pop
cmp
xor
shl
cmp
jmp
mov
mov
cmp
data16
cmp
cwde
movs
xor
in
push
fldl2e
clc
pop
jns
push
or
out
(bad)
sub
adc
retf
neg
xchg
in
movs
jg
cmp
cmp
xchg
xor
pop
aam
scas
cmp
jns
mov
cmp
loopne
imul
inc
mov
sbb
ds
out
sub
retf
es
fst
push
lea
lods
cs
ret
loop
mov
xor
sar
lods
call
sub
clc
xchg
mov
sub
mov
mov
dec
cmp
add
or
xchg
int3
out
lahf
movs
mov
pop
ins
push
cmc
into
bound
or
mov
mov
(bad)
pusha
xchg
scas
sub
movs
adc
fisub
jmp
call
hlt
jge
lea
punpcklbw
call
lahf
ins
fsub
or
mov
cmp
fwait
jmp
or
(bad)
jne
dec
mov
iret
and
mov
(bad)
adc
imul
push
call
aaa
pop
jg
stos
or
stos
mov
adc
push
arpl
ss
xchg
push
mov
mov
daa
mov
add
jne
call
push
pop
scas
or
outs
sub
add
fwait
aaa
mov
mov
inc
sbb
cs
dec
clc
pushf
fimul
jmp
inc
jne
dec
add
push
mov
dec
retf
inc
mov
push
daa
lds
pushf
arpl
dec
outs
sbb
repnz
fbstp
ror
mov
xchg
dec
mov
lahf
test
clc
push
adc
fsubr
test
in
jb
js
dec
add
rcl
mov
cli
fisub
stos
(bad)
mul
rcl
and
stos
adc
inc
nop
jmp
mov
(bad)
adc
cs
adc
xchg
shl
or
push
xchg
iret
sbb
cmp
sbb
or
push
jns
fldcw
rol
pop
data16
mov
sub
fs
or
imul
sbb
loope
inc
mov
imul
mov
xor
mov
sub
or
pop
clc
push
inc
inc
lds
xchg
out
popa
push
shl
fild
xor
enter
scas
aas
jecxz
add
cdq
rcl
ds
inc
ror
jmp
mov
mov
xor
(bad)
mov
xchg
xor
in
sti
pop
xor
(bad)
sub
cmps
fcomi
lds
dec
jle
jb
lods
cs
mov
outs
ds
iret
btc
iret
movs
mov
aam
xor
pop
cmp
dec
lods
sbb
dec
xchg
xor
adc
or
sub
add
mov
sub
sub
cld
xor
mov
out
shr
nop
fwait
outs
or
push
pop
arpl
test
bound
cmc
retf
ins
(bad)
mov
push
or
or
xor
xchg
xchg
mov
into
mov
ins
iret
and
call
xchg
fld
jmp
enter
ins
push
push
xlat
xor
cdq
push
std
pop
ss
(bad)
(bad)
fcmovu
shl
outs
cwde
pop
dec
cdq
es
xchg
(bad)
cmps
in
shr
mov
cmp
shl
test
xchg
mov
ds
mov
out
or
xor
or
mov
push
xor
dec
add
mov
xor
or
add
test
pop
int
sbb
mov
push
jns
mov
or
out
push
push
add
pop
cmp
adc
test
sbb
imul
push
sbb
inc
inc
or
pop
xlat
xchg
rcr
adc
stos
xchg
repnz
jns
jge
xchg
cmp
ret
lock
fcomp
fdiv
(bad)
xor
cmps
jnp
mov
fmulp
(bad)
jmp
push
(bad)
comiss
or
inc
outs
shl
jno
or
inc
out
retf
sbb
iret
imul
add
call
(bad)
cmp
fmul
xor
pusha
lods
scas
or
mov
test
mov
mov
dec
adc
jo
clc
mov
lods
mov
mov
or
loop
fstp
jo
sub
mov
xchg
or
call
popa
lock
xchg
inc
xrelease
and
cmp
inc
push
and
out
ins
mov
movs
jmp
bound
adc
out
or
lods
jle
hlt
iret
ror
mov
sub
bound
inc
inc
cwde
sub
inc
xchg
add
or
fistp
mov
or
adc
sbb
sub
push
jbe
pop
inc
and
aaa
jns
movs
aam
daa
(bad)
scas
cmp
jnp
ja
xchg
gs
mov
lea
add
jl
mov
retf
cld
xor
repnz
in
xor
fadd
int
pop
mov
pop
dec
mov
adc
mov
cmp
mov
daa
inc
fist
adc
push
xor
inc
leave
push
push
push
sbb
dec
push
retf
call
mov
sbb
jae
aaa
mov
xchg
aam
mov
cmp
shl
bound
fwait
xchg
cmp
sti
lea
mov
add
jb
pop
ins
stos
data16
js
div
push
fs
es
cmps
add
push
xlat
jbe
xor
adc
in
pusha
int3
push
rol
pop
pop
sbb
or
pop
call
cdq
mov
fwait
ja
push
inc
and
cmp
xchg
mov
lea
inc
inc
xchg
or
mov
pusha
mov
sahf
ss
push
cmp
icebp
inc
repnz
inc
lahf
inc
xor
loope
push
and
arpl
xor
es
xor
rol
or
dec
leave
sbb
sub
xor
xbegin
push
sub
mov
pop
push
jg
rcr
xchg
inc
or
mov
xchg
and
movs
aad
and
push
xor
std
aad
hlt
loop
lock
xchg
push
push
mov
adc
jnp
enter
mov
inc
sub
mov
(bad)
retf
jnp
frstor
pop
mul
xchg
jmp
icebp
scas
sub
jmp
xchg
and
dec
je
or
dec
cli
imul
stc
(bad)
mov
add
es
(bad)
clc
or
rol
jmp
(bad)
adc
lock
mov
adc
cld
dec
xor
mov
mov
into
jnp
xor
shl
aam
scas
cwde
jg
mov
inc
lahf
out
sbb
icebp
test
dec
aam
pop
nop
dec
into
pop
push
repnz
jb
mov
mov
push
inc
pop
cmp
pop
mov
aaa
sub
cmp
sub
dec
aas
push
dec
hlt
int
push
aas
sub
sub
in
sahf
sbb
sbb
je
lea
mov
test
push
dec
ds
jmp
jg
adc
mov
test
mov
or
iret
and
push
mov
cmp
fwait
in
fs
and
gs
add
jmp
lds
push
mov
mov
cmp
(bad)
data16
adc
ficom
push
or
push
mov
mov
retf
sahf
dec
add
hlt
or
cli
jp
cmps
jg
adc
retf
inc
mov
in
xor
in
adc
out
mov
scas
mov
xchg
je
pop
or
mov
jne
cwde
shl
ja
lods
mov
sub
add
ins
cmps
add
das
mov
or
aas
push
pop
xlat
addr16
test
xchg
test
out
mov
movs
jne
jno
push
xchg
cmp
inc
or
in
icebp
dec
jecxz
mov
cld
xchg
mov
test
mov
dec
pushf
mov
int
ror
cmp
shl
mov
and
iret
mov
jo
loopne
dec
lds
push
out
pushf
scas
call
cmp
in
pop
cdq
xor
clc
jmp
mov
popf
mov
lea
mov
jnp
(bad)
push
out
cdq
movs
fnstcw
xor
inc
nop
mov
xlat
in
dec
stos
lods
push
sbb
cmps
xor
cmc
and
in
mov
in
mov
js
lods
sbb
push
shl
dec
(bad)
pop
pop
push
add
or
and
rcr
cmc
add
idiv
int
or
fisttp
out
jle
mov
(bad)
sbb
jb
xchg
rcr
mov
add
add
test
jb
adc
popf
lahf
retf
shl
adc
jle
test
push
mov
lods
cmovbe
push
dec
dec
mov
loopne
mov
push
sbb
jae
retf
shl
js
mov
fcom
nop
mov
aas
cmp
push
push
xor
int3
and
mov
jbe
inc
cli
outs
pop
xchg
gs
dec
mov
fwait
movs
sub
lahf
lds
sahf
scas
stos
addr16
xchg
int3
fdivr
push
inc
aaa
cmc
scas
jp
mov
adc
jmp
dec
adc
daa
sbb
imul
jne
les
mov
push
bound
inc
sbb
sti
ret
leave
push
jbe
sbb
jl
mov
fimul
xchg
adc
popa
add
pop
pop
cmp
js
in
dec
mov
enter
pop
retf
dec
bound
arpl
xor
add
adc
gs
lahf
fadd
sub
adc
lods
(bad)
sahf
loop
jo
inc
push
mov
ss
int
and
lds
stos
xor
mov
arpl
icebp
jo
in
mov
xchg
addr16
add
cli
sub
rcl
inc
scas
retf
pop
push
pop
cmp
pop
enter
mov
push
adc
scas
loopne
cmps
push
mov
aas
popa
hlt
cli
push
(bad)
scas
adc
mov
jnp
jmp
lock
sub
jb
out
mov
sbb
mov
cdq
mov
pop
out
imul
cmp
add
mov
into
mov
out
loope
loop
popa
sbb
in
stos
mov
mov
movd
ret
push
sbb
movs
dec
hlt
icebp
bound
or
mov
jp
cmps
mov
cli
push
jp
jo
jne
jno
dec
and
xor
xlat
xchg
daa
push
ss
arpl
(bad)
loope
adc
sar
cmc
mov
in
aas
mov
das
ins
push
or
add
sbb
scas
call
imul
aam
es
popf
xor
repnz
add
enter
sti
imul
inc
cs
fs
aad
aam
xchg
push
inc
pop
mov
push
pushf
ins
pusha
cmp
xchg
jg
std
jne
stos
mov
pop
mov
mov
fsub
mov
ds
gs
lock
add
js
xor
jge
jo
push
aaa
push
add
repnz
cmp
test
jmp
xor
retf
pop
into
jo
push
sub
scas
add
jl
in
mov
lock
mov
sub
jp
add
cmp
ins
or
in
sub
test
bnd
inc
or
mov
stos
xchg
adc
leave
mov
cld
xchg
push
jbe
mov
sbb
hlt
out
jl
stos
dec
pop
stc
dec
adc
adc
jns
enter
cmp
mov
daa
xchg
xor
mov
repz
outs
or
sbb
cwde
sub
or
loopne
into
out
inc
sub
xor
out
in
pop
and
gs
mov
aaa
or
inc
dec
mov
mov
inc
inc
jl
rcl
imul
mov
add
repz
sbb
ret
mov
into
sbb
inc
and
in
and
(bad)
pop
mov
fnstenv
xor
dec
add
push
fcmovnbe
adc
or
xchg
mov
out
push
dec
repz
inc
scas
popf
stos
out
inc
lods
fnstcw
jl
cmp
jnp
sahf
test
ja
lea
aad
mov
pushf
mov
and
mov
mov
adc
add
jae
jae
dec
retf
sbb
je
sub
movs
jb
dec
add
inc
mov
nop
dec
sub
bound
test
test
sbb
sbb
or
xchg
jecxz
jmp
pop
and
je
mov
fidiv
xchg
fidiv
mov
retf
shl
das
push
loope
(bad)
ins
out
mov
sbb
adc
or
mov
jo
sbb
hlt
mov
ret
mov
sub
bound
ss
pop
mov
shl
pop
addr16
imul
fiadd
inc
bound
add
jb
dec
cwde
or
out
std
push
sbb
sbb
daa
popf
out
xchg
shl
xchg
test
out
out
int3
stc
enter
std
aam
or
inc
inc
retf
mov
mov
cmp
lds
ret
mov
sub
push
and
js
aad
pop
in
push
out
cmp
sbb
jns
retf
and
jbe
je
in
daa
pushf
lahf
and
jg
jg
inc
inc
jle
fwait
push
stos
pusha
test
(bad)
xor
xchg
popa
mov
push
cmps
ja
in
jge
inc
pushf
or
add
jns
pop
fadd
imul
sub
pop
fsubr
jecxz
icebp
das
inc
mov
pusha
retf
xchg
inc
sbb
add
inc
cwde
sbb
cmp
sub
into
loop
mov
es
aad
pop
push
xchg
and
rcr
sbb
movs
pusha
stos
mov
or
cmp
movs
ja
add
mov
out
ss
gs
int
not
cwde
dec
clc
repnz
xor
mov
cmps
pop
les
movs
loope
jecxz
fst
fs
mov
sub
jno
push
xor
mov
pop
jne
jg
pushf
test
jle
push
xor
or
pop
dec
dec
shr
inc
mov
mov
xchg
mov
and
mov
push
inc
cld
mov
mov
hlt
push
fdivr
pop
push
inc
in
aaa
push
pop
jp
jl
pop
pop
out
jge
pop
and
cmp
std
or
test
jbe
or
mov
dec
arpl
loopne
fld
(bad)
xlat
pop
push
mov
lods
xchg
cdq
or
jle
mov
xchg
repz
mov
and
mov
arpl
jne
pop
mov
loop
pop
jecxz
mov
lods
and
add
je
adc
pop
mov
mov
mov
xchg
add
ss
inc
aad
ficom
adc
dec
mov
and
jmp
cmps
inc
push
fld
ror
jl
out
movs
adc
into
in
jno
and
les
pusha
jl
mov
shl
cmp
rcr
xchg
mov
pop
mov
cld
outs
inc
test
loop
cld
mov
fist
or
test
int
rcr
xchg
inc
loop
mov
or
add
int3
test
dec
cli
(bad)
rol
lods
mov
fbld
cmp
pop
push
aam
add
mov
aas
scas
xor
xchg
xor
push
xchg
xchg
add
bound
dec
cmp
cmp
pop
ds
int
loopne
jo
mov
sbb
mov
test
sbb
push
mov
stos
pop
pop
mov
inc
aam
rcr
sbb
xchg
pop
inc
inc
cmp
jno
movs
mov
xor
pop
icebp
adc
sub
rcr
lea
jmp
pop
adc
jmp
adc
not
pop
pop
(bad)
mov
push
ds
xchg
mov
jle
xor
pop
(bad)
jbe
out
push
sbb
or
loope
or
sub
shl
jnp
mov
xchg
(bad)
adc
jne
ins
mov
pop
mov
out
cs
outs
sub
xor
lahf
enter
jb
jle
mov
jo
pusha
inc
push
imul
dec
dec
call
mov
dec
lahf
shr
and
push
jle
jecxz
and
into
jns
adc
jnp
in
fs
pop
mul
add
repnz
or
outs
aad
lods
jge
xchg
imul
xchg
sti
mov
lock
lahf
add
imul
loope
call
pop
sub
push
pop
call
retf
call
retf
pop
dec
push
fistp
mov
jmp
retf
stc
adc
xchg
ja
ror
call
inc
lar
xor
stc
add
fcomp
mov
and
xchg
lahf
xchg
sub
ins
lahf
jg
test
(bad)
outs
ret
mov
inc
int3
pop
xor
cmp
retf
nop
dec
or
cmp
adc
sbb
inc
cmp
add
popa
addr16
cmp
call
and
jecxz
push
pushf
aad
or
pop
leave
shl
cmps
jp
jge
add
lahf
push
es
inc
call
std
inc
leave
xchg
inc
dec
ret
push
mov
push
ja
int3
xchg
aad
mov
inc
mov
retf
jecxz
(bad)
xchg
in
xchg
xor
inc
mov
and
shl
jns
inc
aad
out
push
sub
push
stc
aas
lds
or
pop
mov
xor
jge
sbb
push
popf
ins
rcl
sub
outs
or
repz
ins
and
(bad)
clc
ffree
dec
repz
cmc
lods
in
cld
mov
mov
sbb
bound
retf
sub
stos
cmp
jns
add
pop
sbb
stc
scas
xchg
add
cli
mov
loopne
into
push
scas
and
xor
pusha
jmp
nop
add
(bad)
fdivr
pop
dec
and
mov
push
cmp
rcl
cmp
outs
cmps
mov
and
push
pop
lods
in
push
test
xchg
sbb
and
add
movs
out
pushf
mov
cli
mov
ins
sbb
pop
popf
retf
and
stos
or
repnz
jo
pop
fcomp
dec
add
push
lock
pusha
dec
and
lods
mov
fs
pop
inc
cwde
fwait
mov
dec
inc
bswap
inc
xchg
dec
(bad)
cmp
call
inc
sbb
or
into
push
fidivr
bound
lahf
cs
sbb
inc
pop
mov
xchg
loope
mov
cmp
mov
mov
mov
stos
xor
lods
je
aad
call
iret
aas
imul
mov
jb
ss
int
sar
sahf
sbb
and
mov
data16
jns
jl
xor
sbb
sub
fsub
sub
push
add
mov
call
add
test
(bad)
lock
mov
shr
jecxz
pop
push
gs
xchg
mov
mov
clc
jmp
mov
push
inc
jbe
lods
dec
in
shr
das
jl
ret
add
add
mov
mov
jmp
(bad)
mov
dec
cmp
dec
nop
aaa
jp
imul
inc
sar
mov
stos
jp
out
pop
loop
aaa
imul
pop
or
jmp
push
mov
movs
and
jo
rcl
icebp
adc
cmp
push
sbb
adc
loope
gs
or
cmp
repz
inc
fidiv
call
lods
loope
imul
test
imul
ret
in
fild
dec
ins
leave
test
inc
push
xchg
dec
in
dec
out
push
cmp
(bad)
lahf
fldenv
inc
pop
or
jp
or
jl
or
shl
inc
js
jl
push
icebp
sub
adc
jae
loop
xor
jg
xchg
sbb
pop
ret
push
cld
inc
icebp
inc
arpl
cli
movs
rol
cli
pop
sbb
les
int
inc
ds
lods
mov
pop
push
sub
sbb
fnstsw
imul
mov
pop
cmp
mov
inc
adc
pop
les
mov
lock
or
inc
cmps
jmp
dec
push
adc
pop
pop
mov
test
xor
icebp
sub
sub
test
movs
push
fist
int3
out
jg
and
mov
stc
fs
ficom
(bad)
sub
sub
inc
(bad)
dec
mov
inc
mov
dec
sub
cmp
and
loope
jne
pop
adc
imul
cdq
shl
sub
push
mov
bound
(bad)
cmp
jle
cs
jb
or
sbb
mov
cs
inc
(bad)
cdq
sub
mov
fwait
xor
rcr
mov
xor
xor
out
ret
inc
inc
inc
xchg
xchg
(bad)
xchg
ins
pusha
mov
xchg
fistp
dec
shr
pop
rcr
ins
repnz
dec
or
sbb
adc
jns
jl
mov
aaa
sbb
adc
and
mov
jge
shl
mov
les
stc
ss
cmps
loopne
xchg
xchg
ret
jb
int3
pusha
aam
jp
mul
mov
mov
jo
loope
adc
adc
cmp
sub
mov
lods
pop
jl
out
rol
mov
into
mov
hlt
leave
hlt
inc
imul
mov
icebp
pop
test
loop
sbb
mov
adc
shl
imul
push
jns
fiadd
jle
xor
rol
popa
and
ja
(bad)
sbb
push
sub
(bad)
adc
mov
movs
test
mov
and
out
lds
shr
in
fstp
int3
dec
lahf
in
jno
sub
sbb
mov
xor
data16
jmp
lods
push
jl
mulps
jo
dec
dec
xor
cmp
pusha
je
add
dec
mov
mov
mov
sbb
mov
jbe
push
sbb
and
pusha
int
aad
lea
sub
mov
stos
push
jmp
push
sbb
call
shl
push
mov
pop
stos
aam
add
cmp
mov
add
mov
ja
fs
arpl
jae
jmp
cmp
lea
mov
and
push
cld
loope
jmp
stos
push
jecxz
xlat
xchg
sub
adc
data16
sub
push
xor
in
loop
ret
ins
jmp
mov
jge
jp
inc
mov
loope
xlat
inc
mov
push
inc
shl
js
push
bound
inc
sub
mov
and
es
inc
push
aaa
cmp
fbld
dec
pop
jbe
jne
or
pop
jb
xchg
icebp
sbb
cmp
cld
movq
xor
out
mov
fs
sub
daa
loopne
hlt
inc
cmp
arpl
mov
shl
mov
fadd
fcom
clc
fistp
jo
fisub
shr
push
ja
adc
mov
aas
daa
mov
mov
mov
xor
and
rol
cdq
push
ins
aas
dec
inc
and
mov
xchg
sbb
test
ficomp
mov
aad
and
loop
xchg
dec
mov
ja
lss
push
aad
sub
mov
mov
adc
pop
ret
mov
(bad)
out
loopne
mov
xor
inc
sub
mov
pop
stc
xchg
dec
push
mov
push
jg
out
call
xchg
dec
adc
mov
loopne
div
cdq
(bad)
rol
or
mov
inc
push
jmp
lods
jbe
rcr
ins
jle
lock
cmp
pop
fmul
dec
mov
(bad)
ret
push
imul
and
aad
retf
fimul
or
rcl
cld
dec
jmp
je
arpl
mov
inc
or
mov
pop
add
adc
fadd
xchg
imul
in
pop
jg
push
or
push
(bad)
cmp
jmp
sub
in
(bad)
int3
sbb
cmps
mov
out
in
out
jo
int3
daa
rcl
and
or
or
xchg
cmps
je
pop
sbb
sbb
jbe
out
arpl
mov
icebp
(bad)
in
bound
jp
pop
or
gs
push
sub
cmps
jae
gs
push
jns
adc
cli
ret
push
mov
data16
lods
sahf
das
jecxz
pop
bound
add
sub
lahf
aam
std
jg
fdiv
pop
loop
sub
popa
(bad)
shl
out
scas
pop
add
push
ins
mov
retf
lahf
xlat
scas
or
out
sbb
push
push
sbb
dec
in
pushf
dec
add
test
and
mov
cmp
xor
bnd
push
mov
adc
add
inc
push
cs
and
cwde
mov
in
sti
cmc
test
sti
(bad)
dec
adc
jl
cmp
shl
xchg
jecxz
push
(bad)
jmp
das
test
pop
mov
and
les
inc
inc
test
sbb
(bad)
leave
pop
scas
movs
jmp
mov
mov
inc
pop
and
mov
aam
dec
loopne
jb
loop
push
jle
push
sti
cmp
test
inc
mov
xchg
or
xchg
inc
mov
sub
call
pushf
push
out
repz
enter
ins
and
div
and
mov
sar
loope
mov
(bad)
push
dec
test
and
or
pushf
out
cmps
dec
ins
retf
rcr
adc
ins
imul
xor
inc
inc
xchg
mov
out
mov
imul
and
mov
out
neg
dec
addr16
ror
jns
dec
jo
adc
rcr
call
jns
xor
mov
adc
xchg
jnp
int3
inc
jae
clc
sbb
(bad)
nop
add
dec
add
idiv
adc
sbb
lods
inc
mov
xchg
imul
adc
or
and
cmp
pop
fild
stc
sub
adc
fs
pop
add
inc
movs
add
aam
sub
leave
test
inc
frstor
cs
loope
xor
sub
lock
dec
jmp
fwait
mov
pop
pop
jmp
mov
cmp
dec
xchg
mov
push
add
push
loop
ficomp
imul
into
and
popa
repz
pushf
and
popa
cmp
pop
rol
ss
and
mov
out
aam
sbb
push
loopne
mov
loope
xor
jno
rol
pop
rcl
mov
sti
or
cmps
or
mov
push
mov
frstor
cwde
mov
jae
or
push
out
mov
xchg
add
ret
mov
scas
fsub
and
pop
jae
xor
dec
fs
les
out
cli
cmps
in
mov
loop
adc
icebp
fwait
lds
cmp
iret
adc
(bad)
dec
ja
and
mov
icebp
shr
clc
pop
cmp
out
cmps
dec
jmp
cmp
push
addr16
jnp
push
pop
mov
pop
aad
cmp
mov
jnp
adc
das
adc
add
out
or
push
dec
mov
adc
sti
(bad)
gs
aam
inc
gs
arpl
gs
cmp
sub
(bad)
mov
xchg
jmp
retf
mov
mov
sahf
push
ror
pop
adc
push
retf
aam
in
mov
repz
popa
mov
in
xchg
in
das
nop
outs
mov
mov
pop
mov
adc
mov
addr16
call
ss
pusha
lahf
imul
cmc
pop
jnp
outs
loope
jp
gs
sub
ret
sub
ret
jnp
pop
jo
daa
push
shl
xor
fldcw
mov
scas
loopne
es
push
mov
inc
retf
dec
lds
pop
out
dec
dec
call
or
les
mov
pop
into
adc
test
cdq
mov
xchg
sub
sub
fiadd
out
sbb
xchg
movs
mov
push
jno
js
(bad)
lahf
pop
mov
sub
dec
or
(bad)
xchg
ds
fdiv
xor
cdq
fisub
sbb
out
fwait
mov
(bad)
push
jp
test
gs
inc
mov
or
or
inc
movs
sub
xor
test
push
pop
push
or
pusha
aaa
std
push
mov
cmp
jl
gs
and
xchg
jecxz
into
push
sub
pusha
or
push
sub
jecxz
scas
mov
sti
addr16
clc
stos
test
lods
cmp
add
pop
and
xchg
pop
cmp
cld
stos
std
jmp
ss
mov
pushw
gs
ja
mov
mov
inc
mov
cmc
aaa
sbb
cwde
inc
jnp
mov
xchg
cmp
cmp
mov
xchg
outs
pop
fcmove
popf
xchg
ror
popf
test
cs
test
jmp
add
inc
push
dec
inc
scas
imul
fwait
arpl
cmp
(bad)
cmp
push
call
data16
sahf
loop
push
stos
xor
(bad)
xor
mov
cs
jb
pop
jbe
loope
fcmovbe
jp
enter
ds
stc
pop
push
mov
ds
fistp
push
movs
jbe
and
ror
push
fwait
mov
lahf
cmp
sbb
xchg
gs
add
das
dec
push
into
push
clc
xchg
(bad)
mov
cmc
daa
mov
xlat
sbb
inc
int3
or
retf
add
xchg
push
and
mov
gs
mov
cmp
mov
xchg
xchg
push
stc
pop
mov
shl
jle
scas
cmp
aad
aaa
jl
push
test
dec
cmp
jp
shl
sbb
mov
lds
mov
mov
out
adc
push
pop
ss
add
pop
jbe
dec
loopne
adc
adc
scas
icebp
or
lods
and
sub
push
xor
push
addr16
aam
and
xchg
sub
gs
scas
pop
(bad)
ret
jp
pop
xchg
js
cmp
pop
pop
mov
std
(bad)
jae
sub
shl
sar
test
fisubr
adc
in
aaa
imul
xchg
in
in
add
ins
jecxz
(bad)
jnp
jo
xor
dec
push
push
lock
pop
cmp
sub
ss
ja
sahf
out
(bad)
jp
mov
fst
mov
mov
leave
dec
and
xchg
dec
adc
and
xchg
adc
add
mov
xchg
jmp
push
mov
push
cmp
fucomip
stos
push
fsubr
jns
lea
imul
pop
movs
xchg
or
cmp
dec
pop
(bad)
mov
mov
push
fst
cli
cmp
push
outs
call
jmp
adc
push
dec
cmp
push
cmc
xor
out
mov
or
pop
cwde
push
shl
test
mov
push
mov
adc
ins
std
shl
outs
push
test
dec
adc
(bad)
mov
(bad)
or
push
in
mov
ja
cmp
in
mov
push
dec
movs
cmp
aam
(bad)
adc
cld
mov
inc
add
pop
popf
retf
stos
pop
mov
and
(bad)
fstp
arpl
pop
add
jnp
daa
inc
sbb
mov
sti
or
xchg
and
cmp
mov
daa
mov
mov
mov
mov
mov
dec
in
sti
fwait
in
jmp
mov
lods
pushf
xchg
or
scas
pop
sub
fwait
pushf
pop
lock
test
setge
xlat
cmps
jle
call
cmp
stos
repnz
xor
les
sbb
jecxz
mov
test
lea
paddb
mov
lods
aaa
sbb
sbb
ror
in
pop
dec
out
clc
mov
loop
jmp
icebp
call
iret
jg
mov
daa
jb
jne
sbb
xchg
repnz
xchg
fcom
cmp
imul
pop
pop
jo
cmp
jmp
popf
(bad)
sbb
jp
test
(bad)
pop
pminsw
jp
lds
push
retf
cli
mov
in
dec
xor
jle
xchg
stc
sbb
stos
jle
mov
fcmovbe
addr16
inc
xor
inc
dec
rcl
adc
ins
bound
sub
xacquire
popf
dec
es
shl
push
add
ret
dec
dec
cmp
jno
jmp
jne
xchg
xchg
ret
adc
pop
popf
lahf
sub
addr16
push
cmps
mov
adc
mov
jmp
ror
(bad)
test
mov
aas
add
or
fs
out
jne
ja
mov
imul
fld
push
addr16
adc
gs
repz
ins
ja
in
mov
xchg
fs
stos
cmp
leave
ficomp
xor
and
jbe
int
daa
shl
xchg
aaa
pop
jl
and
or
sub
dec
aas
add
shr
mov
mov
ret
div
popa
loopne
xchg
retf
ins
mov
shl
shl
xor
das
retf
xchg
sbb
push
icebp
daa
jmp
mov
cmp
cmp
dec
pop
inc
pushf
sub
es
inc
retf
push
dec
cmps
fnstsw
scas
push
pop
dec
ficom
jmp
fsub
sbb
lods
out
mov
fadd
lea
jecxz
aaa
sti
mov
jecxz
add
xchg
mov
xchg
add
(bad)
jmp
addr16
mov
jge
ret
adc
clc
mov
mov
cmp
shl
jecxz
cmp
(bad)
loop
mov
inc
pop
sub
cmp
xor
fnstenv
clc
jmp
ret
inc
shl
sbb
or
rcr
mov
jecxz
mov
and
mov
pop
and
rol
(bad)
cmp
movs
and
loop
jbe
ss
(bad)
jns
jmp
je
out
jb
inc
test
jo
out
push
sbb
mov
push
in
or
inc
sbb
xchg
jns
jmp
push
jo
push
fidiv
inc
pop
cmp
fimul
inc
(bad)
stos
sub
mov
push
fldenv
pop
jge
movntq
outs
mov
cmp
pop
inc
(bad)
mov
cmp
jbe
mov
mov
cmp
and
repz
mov
jle
inc
sbb
push
cmps
pop
or
pop
xor
sar
lock
or
icebp
pop
mov
mov
jne
xchg
jmp
loopne
dec
int3
fmul
adc
add
loope
sub
cmps
push
ds
pop
mov
jne
aad
mov
popf
call
mov
jae
push
retf
out
add
dec
xlat
stc
inc
test
mov
cmp
dec
pop
aaa
cmps
adc
push
mov
stc
out
add
jae
sbb
and
jb
cmps
mov
inc
outs
and
push
repz
repz
imul
dec
call
xor
retf
movs
and
dec
push
dec
lea
adc
xor
pop
cmp
test
inc
sub
xchg
push
or
lock
outs
test
cmps
push
es
push
cmp
jmp
aam
xlat
mov
fcom
mov
and
mov
and
sbb
add
int3
into
scas
clc
jo
cmp
test
sbb
mov
cwde
push
mov
sub
lds
pop
jl
test
mov
(bad)
fsubr
cmps
pop
pop
rcl
repnz
jle
inc
dec
repnz
pop
sti
and
pop
in
and
loopne
jno
ret
push
pushf
retf
lods
pop
clc
cmp
cwde
cli
push
cli
sub
inc
inc
loopne
pushf
aad
jnp
cwde
mov
jg
pop
fs
and
pushf
mov
add
jne
lods
(bad)
mov
arpl
pop
xchg
xor
inc
mov
mov
lods
(bad)
sbb
jg
sub
inc
inc
sub
xchg
ins
sub
enter
push
xchg
mov
cld
adc
adc
mov
addr16
xchg
pop
dec
sbb
mov
(bad)
mov
cwde
aam
add
cmp
call
sbb
inc
in
adc
sub
mov
ret
or
push
cmp
pop
add
sbb
outs
pop
inc
mov
dec
push
xchg
jb
lock
es
cmp
sub
add
mov
in
sbb
nop
jb
or
int3
in
push
in
call
adc
sub
movs
jns
mov
pop
in
int
and
cmovo
dec
dec
or
inc
sbb
mov
jmp
ja
add
movs
adc
xor
test
or
push
mov
mov
mul
fdivr
mov
das
pop
adc
ret
nop
or
ds
hlt
sahf
retf
pop
ins
cmc
fucomip
fsub
aam
mov
push
in
jl
lahf
pop
js
pop
sar
cmps
das
cmp
push
pop
pop
push
ss
sbb
enter
pop
test
and
gs
jmp
sar
dec
push
(bad)
retf
into
or
movs
push
mov
mov
dec
push
loope
repz
fcomp
xchg
test
cmp
dec
dec
cmp
mov
sbb
sub
add
repz
inc
sbb
sahf
bound
sub
push
jp
add
cmp
xlat
dec
xchg
xchg
test
ins
jmp
pusha
mov
dec
scas
add
mov
cmp
sub
fstp
int3
push
icebp
loop
fs
mov
add
add
or
adc
jmp
push
je
ja
sub
add
adc
push
inc
or
add
enter
inc
xchg
retf
fsubr
fnsave
lods
mov
mov
(bad)
cmp
loop
jo
jno
mov
inc
and
mov
inc
pop
mov
popa
sub
xor
ret
mov
cld
retf
or
popa
clc
cs
jo
fwait
mov
or
int3
mov
pop
add
or
jnp
xor
pop
mov
and
push
and
add
or
imul
xor
xor
or
cmp
pop
dec
xlat
fucomi
dec
nop
setl
lds
xchg
pop
(bad)
je
jno
mov
enter
mov
dec
movs
or
stc
inc
dec
add
nop
mov
test
and
mov
add
lods
popa
jge
pop
cmc
xchg
jnp
or
mov
ja
adc
cmps
add
scas
mov
jo
les
xor
rol
pop
retf
shl
lock
outs
dec
or
jp
pop
add
enter
push
(bad)
movs
cli
push
xchg
jno
into
fwait
sub
out
push
mov
mov
ds
adc
nop
mov
sbb
mov
mov
jle
or
pop
imul
icebp
mov
mov
and
loop
adc
mov
sbb
xor
push
mov
test
cmp
inc
dec
imul
and
sbb
jno
dec
rcr
or
ins
inc
lods
mov
jge
ins
jo
push
xor
cs
adc
pushf
dec
mov
or
int3
clc
or
dec
rcl
push
mov
int3
add
mov
call
imul
fdiv
popa
dec
jae
and
sbb
jno
jmp
dec
add
push
(bad)
mov
mov
mov
push
xchg
push
in
xor
sahf
je
xchg
xor
fwait
xchg
retf
lea
xchg
mov
into
mov
inc
cmps
adc
xchg
je
push
xchg
icebp
ret
push
aad
out
and
lahf
sahf
lahf
add
sbb
mov
sar
loop
dec
jbe
xchg
add
out
leave
push
pop
shr
cdq
test
inc
or
cli
xchg
fstp
or
and
mov
push
ror
imul
mov
cmp
dec
push
icebp
nop
mov
fisttp
movs
dec
popf
lea
vmread
dec
aaa
shl
xchg
lahf
ret
outs
test
mov
test
out
add
push
ds
jge
aad
inc
dec
inc
in
xor
int
pop
(bad)
mov
xchg
pop
mov
mov
mov
je
sahf
cmp
lock
loope
adc
sbb
pop
and
aaa
mov
pop
in
enter
xchg
scas
out
retf
repnz
lock
sub
imul
lods
(bad)
sbb
add
pop
cmp
scas
push
cmps
loop
jl
xor
lods
call
sbb
cld
or
into
mov
(bad)
adc
ret
mov
mov
push
not
je
into
pop
(bad)
mov
mov
test
mov
sbb
(bad)
adc
dec
cs
hlt
es
imul
mov
xchg
pop
xor
cs
hlt
call
inc
dec
lahf
adc
xor
shl
jo
xchg
add
push
mov
aam
xchg
(bad)
cmp
inc
jge
adc
cli
fst
sbb
pop
or
fld
jecxz
mov
in
(bad)
ja
cmc
jb
outs
(bad)
ss
mov
nop
fwait
cli
or
sbb
jl
test
ja
movs
lea
(bad)
lock
dec
sbb
getsec
inc
addr16
loopne
cmp
popf
push
mov
or
add
stos
push
add
(bad)
mov
cmp
xchg
jb
cli
pop
out
push
inc
lds
cmps
out
or
mov
test
xchg
sub
xorps
dec
test
pop
fisttp
mov
or
jl
push
sar
jo
dec
lods
adc
in
lahf
jp
and
mov
dec
ret
arpl
mov
jmp
fcom
fistp
imul
fcomp
loopne
jg
push
in
push
fs
es
jo
pop
loop
mov
test
call
push
sbb
jge
add
xchg
scas
movs
iret
pop
mov
(bad)
sti
pusha
xor
push
adc
mov
hlt
test
js
ins
stos
jg
jmp
pop
and
sbb
mov
pop
sar
xor
mov
jmp
jg
pop
sub
add
in
es
mov
lods
or
fidiv
popa
jl
fs
sub
shl
xor
pushf
daa
jo
in
(bad)
clc
sbb
fisub
retf
sub
repz
(bad)
int3
int
mov
test
and
fist
stc
dec
xlat
push
outs
mov
pop
out
mov
sub
addr16
lahf
fnstsw
dec
retf
in
out
ret
push
not
cmp
rcr
adc
mov
mov
hlt
repnz
enter
jne
retf
inc
mov
push
xor
or
jg
cwde
pop
int
inc
ins
adc
xchg
mov
add
or
jmp
fild
push
mov
in
add
dec
cs
les
cmp
sub
jmp
mov
sub
fimul
mov
mov
in
add
jne
or
ins
cmps
mov
add
sub
into
push
dec
or
cwde
push
cdq
push
cmp
jecxz
jae
sub
adc
pusha
(bad)
sbb
or
gs
fmulp
out
inc
imul
xchg
fcom
cmp
inc
lods
sbb
test
mov
mov
loopne
dec
enter
repnz
ins
dec
(bad)
cmp
push
or
add
stos
fst
imul
inc
pusha
or
addr16
sub
sar
movs
lods
push
dec
dec
test
adc
outs
cmp
sub
sub
inc
sub
add
xchg
mov
adc
test
mov
fucom
cmp
add
movs
mov
xchg
xor
cli
xchg
repz
inc
pop
pushf
dec
mov
jmp
cmp
add
mov
mov
push
jnp
jb
jg
push
in
daa
or
ins
es
ret
lea
cdq
stos
push
int3
adc
jno
jno
je
mov
mov
cmp
in
aad
and
mov
iret
xor
pop
cdq
stos
pushf
ss
fwait
sub
int
(bad)
loopne
cmp
xlat
aas
pop
out
mov
sub
mov
test
xor
test
test
xchg
fnstsw
scas
xor
jge
rcl
jb
jmp
add
mov
jp
adc
pop
dec
cwde
imul
sub
int3
into
stc
ror
mov
into
xlat
sahf
aad
push
imul
and
test
call
loopne
mov
mov
(bad)
fnstsw
gs
ja
and
shl
cmp
push
xchg
scas
mov
rcr
nop
mov
pop
movs
mov
sar
mov
cld
clc
bound
and
je
call
mov
fsubrp
jecxz
retf
mov
cmp
sub
popf
lods
and
cmp
mov
adc
movs
mov
add
icebp
(bad)
xchg
fwait
retf
inc
jno
int
sar
int3
xchg
lock
std
hlt
dec
lahf
fdivr
(bad)
aam
lds
adc
mov
leave
jp
div
sbb
dec
jnp
mov
adc
jp
xor
dec
jo
lock
imul
mov
mov
imul
inc
lock
ins
push
xchg
jle
std
dec
push
jmp
or
shl
lds
sbb
pop
rcr
outs
jns
std
ret
inc
ins
xchg
cmp
test
bound
std
inc
stos
and
test
loope
in
jl
adc
hlt
fldenv
mov
jl
add
pop
pop
lds
jbe
mov
mov
xchg
inc
das
adc
sbb
mov
pop
mov
loop
and
int
or
lods
imul
popf
cli
(bad)
iret
popf
test
inc
mov
scas
adc
std
cmps
fcmovnbe
imul
or
mov
inc
outs
loopne
inc
pop
or
out
xor
or
mov
enter
ja
xor
and
inc
xchg
cmc
mov
xor
popf
xor
das
and
data16
out
ja
shl
mov
cmp
push
clc
jge
lea
xchg
leave
dec
fcmovne
mov
scas
jg
sti
not
cmp
mov
call
xchg
mov
jns
sahf
inc
and
jle
mov
push
rcl
xlat
outs
pop
adc
xchg
rcr
(bad)
fld
les
sbb
jg
sbb
or
xor
in
fisub
out
mov
ins
jns
int3
adc
push
jp
jge
nop
cmp
xchg
retf
cmps
leave
cmps
mov
loope
push
(bad)
in
mov
sbb
scas
adc
nop
leave
pop
(bad)
sahf
mov
das
pusha
loopne
loope
(bad)
fwait
movs
and
push
push
ins
cmp
pop
pop
xchg
mov
xor
repnz
je
pop
or
shl
(bad)
xchg
repnz
xor
cdq
sub
not
fsub
xor
stc
mov
imul
clc
push
pop
add
pop
outs
mov
jo
stc
xor
addr16
push
ret
dec
(bad)
xchg
dec
mov
sub
fisub
add
mov
jl
cmp
imul
or
mov
sbb
cmp
fld
push
and
inc
or
pop
mov
(bad)
sti
dec
cli
jne
sub
adc
(bad)
or
clc
sub
popf
sbb
loope
(bad)
dec
cdq
ret
adc
push
movs
sub
nop
std
xor
jl
mov
dec
hlt
xor
jae
dec
sbb
outs
push
mov
cmps
cmp
stos
inc
into
pop
cmc
ja
loopne
or
loop
test
mov
fdiv
push
cmp
loope
pop
mov
inc
bound
dec
int
ins
xor
lea
ret
xchg
adc
pop
jmp
push
or
mov
pop
lahf
dec
pop
mov
into
loop
push
rcl
xor
jb
jmp
(bad)
or
or
jle
sti
adc
mov
stos
cmps
scas
push
mov
or
test
ret
imul
hlt
mov
hlt
arpl
or
fild
fcomp
pop
sbb
jmp
ret
in
lahf
aaa
mov
outs
dec
arpl
xlat
adc
pop
jno
push
push
jne
in
and
fcomp
push
gs
fcom
cmp
retf
sar
clc
mov
push
xor
in
cmp
mov
xchg
bound
stos
inc
and
sbb
inc
jmp
jno
cwde
jle
jp
lahf
jae
out
push
xor
pop
(bad)
ins
sub
sbb
lahf
push
es
pop
mov
adc
mov
push
mov
pop
add
push
fs
addr16
add
add
imul
mov
ins
leave
jno
(bad)
push
and
xor
jecxz
xchg
popa
rcr
hlt
dec
dec
jo
push
xor
sbb
test
or
or
ins
sub
inc
movs
repz
inc
dec
xor
bound
shl
mov
jb
sbb
sub
dec
jge
sti
pop
xlat
mov
push
and
dec
nop
inc
mov
mul
xor
inc
push
and
neg
mov
dec
or
push
cdq
xor
sahf
xor
adc
es
lock
mov
pop
xor
in
mov
fwait
inc
(bad)
rcr
and
fidiv
inc
jno
xchg
sbb
mov
pop
popa
clc
xlat
dec
mov
in
or
dec
mov
push
lods
mov
dec
cli
push
sahf
inc
pushf
fwait
lock
mov
cmp
das
push
mov
movs
cmps
outs
icebp
nop
aad
call
outs
jecxz
fidiv
not
push
(bad)
add
fisubr
pop
jmp
in
inc
pop
sbb
push
loope
dec
pushf
inc
adc
and
xor
out
add
cmps
jl
xlat
sahf
mov
add
int3
mov
jl
div
sahf
js
mov
dec
cmps
test
adc
cmps
xor
in
xchg
add
sbb
jmp
das
xor
adc
in
icebp
in
or
iret
mov
pop
aas
mov
jne
sub
cmp
call
dec
sahf
arpl
pop
mov
retf
dec
add
test
retf
jl
icebp
jg
cmp
xor
push
xor
ror
sbb
out
or
jge
inc
popf
iret
clc
test
jne
mov
loopne
in
imul
mov
enter
arpl
(bad)
mov
sar
sbb
mov
mov
and
pushf
repnz
xor
lock
in
pop
fwait
add
rcl
ins
addr16
fcomp
mov
sbb
xor
jnp
pop
pushf
jo
xor
and
push
pop
pop
cmps
xchg
iret
mov
arpl
aas
fisttp
stos
jnp
dec
outs
jo
mov
mov
xor
mov
push
mov
cmp
shl
ds
nop
(bad)
pop
int
ss
and
in
test
aaa
pop
mov
xor
test
or
mov
cmp
cmp
rdtsc
pop
ret
(bad)
jbe
int3
test
jb
push
cmc
dec
(bad)
enter
je
xchg
lock
adc
(bad)
retf
xor
dec
push
push
xor
lahf
in
(bad)
cmp
cmp
fimul
nop
jb
(bad)
fcom
hlt
ins
sar
(bad)
sbb
mov
sbb
xchg
push
inc
dec
pop
and
fcmovu
ret
inc
cli
aam
sub
xchg
sbb
movs
xor
imul
pop
cmp
ins
mov
sbb
mov
cld
retf
mov
test
pop
fisub
std
sub
gs
call
adc
adc
inc
dec
div
aas
pusha
jecxz
jecxz
inc
jae
xchg
cld
in
std
xchg
scas
sbb
push
in
sub
rol
dec
mov
mov
cli
lea
sbb
mov
cdq
jmp
mov
or
push
push
out
cld
(bad)
jns
mov
jno
xlat
inc
fild
push
adc
test
int3
pop
sahf
add
ja
loop
or
loopne
pop
add
mov
cmp
and
fdivr
push
retf
sbb
pop
dec
shl
jae
sahf
pushf
lahf
inc
jp
add
inc
lds
push
cwde
in
outs
inc
dec
adc
shl
cmc
cmp
inc
cli
sbb
push
pop
je
and
push
test
dec
pop
rcr
or
popf
sub
je
retf
cmp
loope
outs
cmps
nop
iret
sub
xor
outs
jb
fisttp
fisubr
imul
gs
and
mov
ins
je
mov
mov
int
dec
into
push
es
loope
xor
pop
ror
bound
pop
aaa
int3
std
push
test
sbb
mov
push
xchg
jae
into
mov
mov
jle
adc
pop
fcomp
push
rcr
mov
repz
cmps
jg
jle
sahf
(bad)
push
stos
fadd
retf
aad
adc
jmp
shr
and
dec
mov
fild
retf
pop
fimul
aad
ja
mov
test
ja
mov
inc
retf
xor
in
in
aad
jne
mov
cmp
lods
add
sbb
(bad)
test
mov
not
push
icebp
cs
push
mov
mov
mov
mul
dec
arpl
fimul
or
and
test
gs
mov
xor
jns
enter
inc
aad
mov
retf
sbb
inc
(bad)
aaa
lea
out
add
ins
movs
push
sbb
mov
dec
adc
push
inc
jle
cwde
pop
scas
mov
or
lods
sbb
mov
push
mov
cmps
adc
push
and
(bad)
mov
jp
cmp
aad
mov
jl
or
dec
pop
addr16
dec
sbb
(bad)
icebp
outs
daa
outs
add
jne
add
shl
rol
mov
stos
mov
aas
fwait
mov
lahf
or
test
or
rcr
cmp
push
js
mov
mov
into
lods
inc
retf
adc
test
jge
sbb
out
push
mov
out
ror
push
pusha
or
scas
test
push
ins
inc
inc
pop
inc
jl
out
or
repz
xor
adc
outs
jmp
and
and
inc
jg
and
sub
test
adc
ret
jle
cdq
cmp
xor
bound
xchg
add
sbb
call
test
sar
scas
or
push
adc
add
lahf
mov
pop
or
sub
mov
ja
xor
mov
addr16
inc
sub
jmp
inc
outs
inc
mov
lods
mov
clc
jo
leave
imul
and
mov
dec
mov
xchg
inc
push
pushf
pop
jp
jne
push
push
sub
stos
push
add
outs
ja
xor
dec
rcr
cld
ins
icebp
jl
xchg
stos
jecxz
fs
dec
pop
js
mov
mov
pop
sub
jmp
push
pushf
movs
pop
fbld
stc
in
das
add
dec
ficom
out
push
jecxz
dec
fisub
mov
xchg
push
or
inc
dec
add
mov
aaa
out
pop
lea
pop
ss
xor
fsub
push
cmc
lahf
scas
adc
lock
push
inc
scas
push
mov
fisub
icebp
mov
pop
mov
(bad)
jnp
pusha
fs
or
ror
out
mov
xor
mov
push
sub
pop
jge
jmp
mov
jmp
sbb
mov
inc
push
je
fsub
(bad)
jge
pop
inc
cmp
iret
stc
retf
in
mov
or
pop
leave
inc
in
lock
sbb
and
fcomp
shl
into
test
arpl
mov
icebp
push
sbb
mov
sub
iret
pop
add
or
adc
mov
push
out
dec
push
mov
lods
cdq
and
jae
test
cld
cwde
sbb
sbb
pop
add
ror
jmp
jg
mov
out
test
(bad)
loopne
xchg
jb
aas
test
inc
or
cs
mov
cmc
or
add
xchg
push
pop
pop
inc
sbb
scas
push
inc
aas
lods
pop
fldcw
jp
cwde
ffreep
adc
push
addr16
stos
push
nop
iret
cmp
loop
xor
dec
cmp
ror
mov
push
pop
inc
and
xor
dec
repz
ja
mov
or
pop
xchg
imul
stc
jns
movs
ja
mov
push
mov
into
das
lock
cld
rol
or
cmp
push
mov
xchg
sub
test
std
shl
stos
or
jne
xchg
fbstp
test
(bad)
cli
jge
pop
int
mov
dec
mov
mov
mov
pop
cmp
test
sub
call
sub
or
hlt
jno
jbe
mov
and
loop
jo
mov
cdq
sub
nop
push
cmc
and
cmc
test
jb
cmp
mov
pusha
sbb
mov
pop
pop
and
imul
sbb
imul
xchg
inc
ds
mov
mov
fs
cmps
dec
out
jmp
out
popf
icebp
les
cwde
pusha
mov
push
sbb
jge
pop
jns
cmp
mov
mov
cmp
jl
xchg
lods
push
mov
mov
retf
in
call
movs
jbe
push
or
sub
pushf
call
dec
cli
xchg
and
push
ret
adc
ds
(bad)
retf
xchg
test
push
mov
push
out
daa
stos
stos
push
add
mov
sub
or
jbe
cmp
scas
dec
xor
dec
(bad)
mov
repnz
cmps
pop
mov
inc
mov
or
xchg
mov
mov
imul
std
mov
clc
test
hlt
fimul
in
mov
pop
pop
jae
or
jo
push
(bad)
ret
or
add
sbb
into
and
push
adc
stc
mov
xor
mov
push
xor
cmp
jle
lea
cmp
rcr
aas
scas
jo
repz
shl
sbb
lock
and
ds
dec
repz
dec
sub
sub
xchg
cmp
(bad)
out
(bad)
jl
and
jnp
cdq
or
call
push
or
cdq
ficom
dec
clc
jle
push
sub
mov
or
pop
fidiv
mov
jns
push
shl
nop
clc
nop
ret
fld
and
jbe
test
div
cmp
outs
das
inc
mov
and
jo
push
pop
mov
push
call
pop
push
in
pop
sar
xor
ret
lds
adc
pop
mov
daa
(bad)
repnz
mov
in
dec
dec
shl
aad
mov
nop
pop
ret
push
mov
mov
push
test
and
test
inc
hlt
sub
repz
push
mov
cwde
loope
cmps
mov
ds
pop
into
ins
scas
cmp
inc
addr16
ret
add
pop
rol
aad
test
pop
cld
inc
adc
fucomp
xchg
test
mov
sub
mov
pusha
jle
lea
push
clc
sti
lock
nop
mov
imul
xchg
push
(bad)
outs
jmp
out
sbb
xchg
imul
fnstenv
sbb
pop
into
fld
(bad)
pop
or
js
test
dec
mov
nop
sub
ret
outs
xchg
loopne
and
push
cs
mov
fsubr
popf
sahf
jp
pushf
dec
cmps
inc
ret
rcr
into
inc
xor
and
ds
clc
mov
(bad)
and
je
stc
aaa
push
and
clc
mov
mov
dec
stc
add
mov
pop
xchg
(bad)
finit
shl
pop
mov
ins
and
retf
in
lahf
xchg
mov
push
daa
das
inc
cmc
xchg
in
jb
inc
out
inc
jne
js
data16
(bad)
fdivr
cmp
fisttp
arpl
outs
sub
xor
cld
sti
dec
adc
sub
nop
aam
push
sahf
ins
into
or
xchg
stc
or
xchg
jnp
inc
add
scas
adc
movs
mov
fmul
ss
rcl
cmp
pop
call
inc
es
int
jb
dec
sub
scas
dec
add
sbb
cmp
lock
xchg
outs
mov
mov
xor
pop
inc
and
pop
aad
cwde
xchg
jecxz
outs
and
xor
rcr
push
enter
pop
(bad)
pop
mov
ret
lods
sbb
sbb
imul
fs
jns
mov
dec
(bad)
cmps
jbe
outs
fdivr
mov
dec
pop
js
pushf
ret
lods
shl
push
sbb
ins
ins
(bad)
ja
hlt
ret
jmp
inc
sub
std
repnz
add
js
not
xchg
lahf
inc
add
add
outs
(bad)
xor
adc
or
jge
jns
test
mov
cmp
dec
out
outs
stos
call
cmp
adc
pop
lods
dec
lahf
ins
mov
add
mov
xlat
lods
test
sbb
or
hlt
cld
sub
pop
push
sub
sbb
out
pop
loop
inc
and
scas
cmp
mov
jecxz
mov
xchg
mov
and
gs
cmps
mov
lea
xchg
mov
push
aas
push
out
cmp
loope
sub
sbb
mov
hlt
mov
jbe
pop
loop
push
or
push
or
lds
test
and
movs
scas
stos
jmp
dec
jg
ins
pop
mov
mov
test
idiv
scas
jmp
retf
popa
sti
mov
cmp
ins
add
xchg
ret
retf
je
(bad)
mov
ins
in
cmps
test
mov
out
icebp
sub
lods
cwde
icebp
mov
ror
or
mov
pslld
out
mov
mov
pop
(bad)
shr
cmp
xchg
pop
jge
dec
enter
pop
mov
jnp
and
repz
ja
lds
popf
imul
je
fild
pop
test
push
jle
mov
or
stos
aad
cmp
inc
push
retf
loopne
sub
dec
cmp
es
(bad)
jmp
bound
pop
sbb
pop
into
and
xor
xor
aam
leave
mov
adc
outs
test
jbe
dec
and
test
add
inc
jb
addr16
mov
sti
cmp
or
iret
xor
push
pop
mov
scas
and
inc
fs
sar
mov
loop
enter
inc
xor
std
retf
jno
inc
xchg
pop
popa
jg
(bad)
retf
fnstsw
cs
push
xor
pop
push
xlat
imul
xor
imul
stos
mov
push
popa
jl
cmp
cmp
sar
xor
stc
mov
sbb
popf
or
cpuid
cmp
test
call
sub
js
(bad)
call
cmp
dec
(bad)
xor
pop
mov
rcl
retf
mov
sbb
and
test
je
cmp
mov
(bad)
mov
(bad)
jl
hlt
cmp
js
sub
enter
rcr
sub
or
dec
fst
clc
test
sbb
adc
outs
pop
stos
sbb
cld
or
xchg
scas
adc
out
pushf
sahf
aaa
push
retf
call
mov
imul
push
cmp
xchg
xor
mov
xchg
cwde
sub
push
ds
test
ficom
mov
add
cmp
jb
int3
adc
mov
xlat
into
jo
retf
mov
nop
pusha
mov
sbb
leave
cmp
mov
mov
mov
es
sbb
loopne
(bad)
out
xchg
jge
mov
lds
mov
push
dec
pop
push
dec
cmp
adc
mov
test
(bad)
fsubp
pop
cmp
retf
(bad)
cli
into
loop
nop
int3
mov
enter
mov
mov
out
repnz
fiadd
dec
ret
jmp
pop
mov
test
test
iret
or
es
mov
mov
mov
das
shl
mov
mov
add
sahf
and
inc
pop
repz
fmul
stc
sbb
jb
pushf
xor
pop
dec
jmp
mov
sub
jo
aaa
mov
js
call
iret
push
or
cmps
add
sub
dec
push
mov
pop
pop
imul
push
test
xor
mov
shr
pusha
(bad)
aam
lds
ja
mov
and
adc
xor
and
push
mov
sbb
sti
bound
in
out
rcl
and
leave
push
dec
int3
cmps
in
mov
ror
sub
mov
iret
loop
and
pusha
int3
pop
jecxz
cmp
aaa
sub
ja
mov
sub
mov
out
rol
aad
mov
loopne
lds
iret
jo
sub
in
push
mov
stc
add
xor
and
cmp
mov
xor
into
add
scas
or
bound
and
dec
push
icebp
push
enter
shl
bound
(bad)
cmp
mov
adc
ret
sbb
in
ins
lock
aam
dec
jmp
test
jb
sub
call
add
loop
sbb
cmp
inc
les
add
inc
mov
pop
shr
and
lods
mov
scas
sbb
cld
(bad)
fmul
adc
add
or
into
jecxz
pop
sbb
dec
dec
ret
outs
pop
or
pop
in
xchg
jge
add
cs
mov
(bad)
pop
lock
push
dec
mov
add
push
loope
dec
pop
mov
test
mov
loopne
mov
cdq
push
pop
push
sbb
push
sub
les
mov
jns
and
dec
pop
and
inc
sub
xor
adc
xchg
add
sub
and
stos
mov
rcr
mov
jno
cld
call
call
jp
sub
mov
jge
out
iret
mov
adc
push
mov
or
cwde
popf
lods
aaa
cmp
and
cmc
retf
movs
dec
jecxz
pop
retf
gs
stos
mov
retf
test
mov
inc
(bad)
mov
cld
sar
clc
daa
ret
mov
cmp
out
ret
hlt
daa
int
addr16
or
pop
daa
leave
lods
imul
jae
jp
dec
xchg
test
inc
rcl
push
add
arpl
inc
xchg
dec
dec
ds
push
pop
movs
fcom
iret
mov
ds
jg
int
les
dec
movs
pop
aam
xor
xchg
aad
cmp
test
stos
add
lds
adc
push
fild
and
jl
or
push
sti
push
pop
add
ins
scas
xlat
test
and
es
pop
or
xchg
inc
repnz
mov
and
fadd
retf
xchg
test
pop
jmp
jnp
lahf
(bad)
add
cmps
lahf
mov
aad
pop
icebp
push
enter
jp
addr16
pop
cmp
ins
mov
xor
pop
xor
push
xchg
inc
lods
in
adc
aas
es
mov
sbb
adc
xor
push
repz
stos
push
pop
fdiv
sbb
(bad)
iret
push
sub
shl
xchg
mov
push
addr16
push
fdivr
jne
adc
fwait
sbb
push
ds
mov
and
mov
xchg
clc
pop
scas
sbb
adc
sbb
leave
stos
cdq
add
arpl
mov
dec
inc
pop
xor
and
inc
lea
xchg
iret
mov
lods
addr16
xchg
sbb
jg
fwait
in
int
dec
xchg
jb
pusha
mov
fucom
jne
mov
imul
in
inc
xor
clc
jg
dec
popa
xlat
(bad)
sti
ret
dec
out
mov
sbb
in
mul
clc
sti
mov
shl
lods
add
xor
mov
inc
pop
inc
pop
dec
aam
sar
sbb
mov
sar
ins
jecxz
out
and
mov
std
push
mov
jecxz
dec
popf
outs
or
lock
nop
ja
test
aam
cwde
sar
xchg
inc
add
and
mov
inc
push
cs
icebp
hlt
popf
mov
fst
test
pop
or
xor
push
std
lods
mov
inc
jmp
add
fcomp
lods
push
xor
xor
or
sbb
push
aas
xchg
cmp
sub
pop
jge
dec
ror
fwait
cmp
sbb
test
test
ret
aas
add
clc
sbb
call
(bad)
push
arpl
cwde
push
push
mov
pusha
xchg
lods
out
idiv
xor
and
arpl
push
lds
ret
or
xor
aas
fdiv
and
fistp
stc
mov
dec
jp
sbb
pop
rcl
or
imul
add
call
push
lods
jnp
add
es
(bad)
cdq
xchg
ret
test
into
jg
fwait
retf
and
test
inc
cmp
mov
sub
cmps
daa
inc
push
xchg
rcl
jmp
das
mov
and
sbb
fsub
adc
repnz
pusha
lods
leave
pop
inc
sub
mov
jae
bound
inc
mov
dec
jno
or
fwait
sbb
jae
push
mov
(bad)
stc
xchg
mov
jle
push
addr16
sub
push
sahf
pop
and
dec
sub
cmps
pop
scas
loope
stos
mov
repz
fist
push
ret
int
adc
data16
mov
stos
jmp
cmps
mov
inc
rcl
push
(bad)
xchg
mov
mov
xchg
xchg
lds
outs
adc
movs
or
jnp
or
cs
(bad)
out
mov
pusha
inc
js
jl
jo
sub
mov
icebp
push
and
push
adc
sbb
or
push
push
inc
jge
ret
cmp
xlat
push
je
sub
(bad)
pop
add
movs
ret
add
loopne
mov
and
mov
dec
inc
cld
retf
imul
add
lea
or
jne
xor
int3
movs
sub
push
int3
and
mov
pop
lahf
xor
clc
imul
xchg
popf
dec
xor
jb
pop
retf
mov
outs
fld
cmp
enter
sbb
push
(bad)
leave
jae
xchg
inc
xlat
mov
sbb
mov
sahf
(bad)
sub
inc
retf
push
std
(bad)
fwait
pusha
pop
test
outs
or
popf
or
inc
xchg
or
inc
fdivr
shl
add
jmp
rcr
xor
push
bound
in
mov
mov
dec
(bad)
inc
aas
mov
jno
imul
mov
adc
call
push
adc
lock
or
sti
sbb
push
shr
mov
aam
dec
neg
ret
and
jecxz
push
push
in
out
xor
push
push
add
lea
stc
test
mov
nop
out
call
and
adc
jl
test
scas
movs
aad
test
ficom
or
imul
sbb
mov
std
jo
leave
jmp
sti
cmc
pop
cmps
fsub
cmp
jp
ret
sub
pcmpgtw
mov
sbb
les
xchg
ins
jle
test
(bad)
xor
stc
jmp
cld
int3
mov
sti
dec
sahf
shr
sbb
xor
popf
xor
stc
into
and
or
ds
sbb
xor
xor
or
cmp
pop
out
push
xor
mov
mov
pop
int3
std
seto
es
adc
rol
sbb
or
repnz
mov
mov
enter
push
fst
xor
xchg
out
(bad)
in
popf
add
mov
jae
aad
adc
iret
jge
fstp
stc
dec
fs
cmp
and
leave
data16
jg
cmps
push
mov
hlt
les
repnz
icebp
sub
sub
das
or
xchg
test
sbb
mov
shl
adc
loope
pop
mov
out
cld
cs
scas
dec
push
push
add
inc
xlat
push
leave
mov
sbb
repz
fbstp
jg
fistp
aaa
in
dec
and
xor
xchg
fcom
dec
lock
adc
rol
fsub
movs
jmp
ficomp
cmps
inc
pop
(bad)
jns
ficom
fs
scas
out
cmp
fcom
pop
jae
dec
aad
sahf
dec
mov
push
cmp
mov
xor
mov
add
mov
cmps
push
in
mov
xchg
sbb
push
ret
ja
mov
mov
(bad)
sub
adc
push
(bad)
and
push
in
mov
xchg
pusha
push
xor
ds
bound
pop
retf
lods
sti
shr
ins
mov
rcl
push
outs
call
iret
jne
stos
mov
fidivr
dec
mov
and
xchg
mov
mov
ret
sbb
dec
fwait
mov
icebp
and
jne
cmc
frstor
daa
mov
add
mov
jno
out
xor
inc
mov
pop
stos
arpl
and
add
sbb
fwait
push
jnp
jae
loop
fst
dec
cmp
dec
daa
sub
xchg
and
jb
xchg
xchg
fwait
sub
push
xchg
mov
rcr
push
inc
cdq
mov
icebp
sar
pop
jl
icebp
mov
daa
jb
fmul
stos
and
out
nop
hlt
fs
add
push
xchg
in
dec
adc
mov
sbb
in
jg
or
ror
inc
pop
and
sub
jmp
les
pushf
call
push
and
push
and
cmp
imul
push
daa
(bad)
out
add
jl
ret
and
push
out
xor
bound
adc
xchg
mov
ror
pop
pop
xbegin
mov
pop
aas
sub
popa
inc
mov
mov
mov
repnz
dec
(bad)
or
enter
mov
out
pop
xchg
not
aad
mov
(bad)
adc
clc
xor
mov
and
arpl
mov
mov
ja
push
sahf
xor
cld
shr
scas
lahf
sbb
fwait
mov
xor
daa
and
mov
(bad)
dec
pop
dec
mov
sub
xor
out
and
leave
adc
pop
ss
fmul
push
lock
jbe
test
pop
lods
xor
pop
mov
mov
sbb
pop
jne
xor
jmp
or
dec
push
call
lea
push
and
add
mov
adc
mov
les
(bad)
cmps
cmps
test
sbb
pop
rcr
push
dec
push
pop
std
jbe
sub
xor
or
movs
lock
or
add
mov
add
or
dec
and
mov
mov
adc
inc
scas
mov
test
icebp
pop
dec
pusha
ret
jmp
cmp
sbb
jbe
pop
shl
(bad)
push
pop
(bad)
jmp
dec
xchg
sbb
or
test
pop
inc
mov
adc
repnz
xchg
retf
mov
pop
hlt
ja
cmp
and
jg
pusha
fwait
out
mov
push
cmc
daa
les
popa
sub
push
(bad)
in
aas
sub
mov
outs
inc
pop
push
pop
ds
jmp
mov
xchg
or
in
mov
pop
and
fdivr
or
cmp
jmp
cs
mov
or
inc
jle
ja
dec
sub
mov
mov
or
adc
clc
loop
mov
mov
sbb
addr16
jae
xchg
imul
xor
cmp
ffree
push
mov
sti
dec
fild
cmp
lahf
fcom
fisttp
mov
cld
retf
cld
mov
jp
out
or
cdq
stos
imul
dec
dec
out
pop
imul
je
pop
ficomp
es
mov
sub
movs
movs
cmp
movs
fwait
xlat
xlat
imul
fisubr
jg
in
(bad)
fucom
sub
call
rcl
inc
push
push
scas
and
pop
sbb
enter
in
mov
inc
imul
fidivr
retf
mov
add
stos
push
shl
pop
pusha
mov
xor
adc
xchg
pop
mov
movs
in
in
jo
out
dec
clc
and
or
stos
gs
es
daa
test
sahf
inc
shl
imul
enter
in
leave
cmp
inc
lea
mov
fiadd
jb
mov
mov
in
arpl
fld
ds
cmps
pop
test
push
icebp
sbb
aad
sahf
add
inc
fiadd
loop
push
xchg
jmp
xchg
and
sub
aaa
jae
imul
jecxz
sahf
pushf
push
mov
adc
inc
and
sub
fistp
lea
push
cmc
mov
iret
fiadd
cmp
sub
cwde
sbb
imul
call
fcmovu
jbe
sar
jb
movs
inc
or
fwait
pop
out
in
ins
jle
pop
add
push
xchg
stos
dec
pop
inc
ins
dec
(bad)
cli
mov
call
and
ret
add
pop
push
jg
mov
sub
cmp
jbe
je
xor
aas
xor
ins
mov
pop
dec
cmp
int3
mov
ret
adc
pusha
mov
lods
inc
jecxz
repnz
pop
fisttp
ins
cli
and
fidiv
xor
sbb
or
pop
daa
aaa
mov
mov
lahf
adc
xor
xchg
movs
mov
push
add
cmp
mov
aam
mov
enter
xchg
cmp
inc
push
fist
je
jne
(bad)
int3
outs
dec
mov
std
mov
enter
fdiv
jb
stos
cli
ins
push
loop
add
clc
aam
fmul
dec
fidivr
dec
add
repnz
fbstp
sub
mov
and
icebp
mov
shl
dec
add
mov
pushf
mov
jp
inc
cmp
dec
mov
stos
inc
or
sbb
pop
outs
retf
in
cmp
adc
ss
xchg
(bad)
and
clc
out
iret
sub
(bad)
(bad)
add
mov
push
pop
lods
inc
mov
fwait
sqrtps
or
mov
mov
pop
cdq
ret
xor
jecxz
in
cmc
cwde
adc
movs
push
mov
mov
pop
cmp
stos
(bad)
movs
pop
mov
not
pop
dec
sti
ins
adc
in
pop
inc
cmp
xchg
add
es
ds
mov
leave
hlt
jno
sub
sbb
out
pop
je
add
sub
pop
fsub
mov
mov
test
or
xchg
xor
shl
addr16
push
scas
mov
mov
popf
jbe
test
push
xchg
leavew
and
daa
jmp
in
pop
test
test
ins
inc
cli
movs
loopne
and
and
mov
imul
movs
mov
or
sbb
nop
inc
(bad)
mov
xchg
call
jge
dec
outs
(bad)
movs
pusha
xchg
cmp
mov
lods
icebp
cmps
or
push
ds
cwde
int
mov
sub
outs
cmp
fstp
dec
cld
push
xchg
data16
into
fs
push
cmps
ficom
adc
outs
lds
cmc
inc
mov
push
jp
push
or
clc
inc
or
pop
mov
cmp
mov
(bad)
repz
ja
stc
mov
inc
jb
leave
pop
lds
push
dec
pop
movs
popf
jb
mov
sbb
mov
call
ins
xchg
jns
ret
xor
dec
mov
inc
sub
iret
lods
and
inc
test
or
sub
add
fiadd
loopne
nop
aam
adc
lahf
js
mov
(bad)
xor
scas
xor
jl
addr16
xchg
leave
jmp
adc
and
mov
dec
pop
cdq
enter
pusha
clc
aam
pushf
out
ds
inc
ja
sbb
adc
or
repnz
test
push
push
jmp
xchg
mov
jmp
or
xor
out
push
xchg
shl
push
mov
out
dec
stos
xchg
outs
adc
mov
stc
pop
xor
fistp
mov
repnz
faddp
xchg
stos
test
inc
ja
add
call
jmp
adc
fisubr
push
call
fild
ins
mov
pop
ja
mov
and
mov
ret
and
jne
push
push
push
mov
(bad)
xchg
mov
stos
add
mov
cli
js
pop
pop
dec
ins
pop
(bad)
dec
not
mov
je
shl
cmp
push
mov
test
xor
push
in
push
call
int
xchg
adc
fsin
test
cmp
adc
(bad)
retf
cmp
cmps
in
pop
lahf
out
pop
mov
push
rcr
mov
mov
or
lds
xor
sub
out
fmul
adc
and
sar
jle
add
pop
fneni(8087
dec
mov
imul
pop
ror
outs
inc
or
mov
enter
(bad)
cmp
mov
int
fdivr
ins
ss
add
loope
outs
out
pop
xchg
inc
(bad)
lods
xor
sub
and
out
imul
mov
movsx
mov
and
out
into
imul
sahf
test
xor
sub
xor
nop
shr
xchg
jbe
jbe
int3
mov
scas
mov
dec
dec
(bad)
sbb
les
dec
pop
andnps
mov
inc
xor
push
out
ins
cmc
jle
test
movs
outs
not
cwde
cmps
sub
shl
je
sar
push
in
movs
out
jbe
mov
loope
xchg
popa
cmp
sbb
leave
gs
sbb
(bad)
das
xchg
or
int3
test
and
inc
cwde
repz
jmp
(bad)
retf
push
ja
cmp
test
adc
or
bound
inc
pop
pop
stos
leave
push
and
pop
xor
div
fisttp
jbe
(bad)
addr16
or
fisttp
jb
cmp
test
lods
cmc
push
aaa
inc
sbb
add
stc
fst
push
mov
or
pop
xchg
neg
(bad)
(bad)
cdq
jle
xchg
mov
int
jle
xlat
(bad)
jecxz
repnz
jecxz
xor
mov
mov
mov
out
jmp
mov
mov
push
mov
jmp
sub
jmp
mov
mov
ror
neg
shr
mov
pop
loop
fbld
xor
int3
test
fild
push
add
or
dec
push
sub
mov
dec
mul
dec
lahf
push
push
xor
dec
pop
mov
jg
xchg
push
pop
xchg
xor
mov
mov
outs
retf
push
mov
popa
ins
jmp
xor
cs
cmp
pusha
sub
(bad)
dec
(bad)
mov
aam
lds
out
sbb
xchg
inc
xchg
cli
scas
jns
jmp
test
dec
inc
pop
inc
cli
xchg
sbb
xchg
aas
xor
in
add
daa
pop
xor
dec
jecxz
daa
js
cmp
pop
loope
fsubr
hlt
hlt
(bad)
hlt
mov
gs
jnp
mov
xor
leave
leave
jb
lods
rsm
jns
adc
and
jle
add
mov
adc
mov
loopne
imul
push
inc
retf
rcr
add
xor
ror
fsub
loop
push
fs
xor
in
adc
add
inc
pop
mov
sbb
fcom
leave
pop
or
and
and
sbb
cmp
adc
xchg
lahf
fyl2x
push
leave
pop
cli
mov
in
out
jns
fwait
test
fcom
int3
fiadd
mov
lahf
jmp
pop
pop
iret
fmulp
scas
mov
fist
jg
xchg
jp
je
les
es
jmp
loopne
stos
jmp
outs
adc
jg
into
fs
ret
retf
xchg
arpl
mov
dec
dec
cs
xchg
mov
cmp
push
mov
neg
jl
xor
mov
out
in
mov
addr16
pusha
pop
ds
or
cli
add
addr16
pop
inc
sub
lock
sub
in
sbb
pop
pushf
or
or
aam
dec
pop
rcl
arpl
mov
push
push
popa
cdq
lods
add
push
shr
ss
mov
rcr
pop
pop
sbb
shl
nop
in
int
xchg
sti
je
int3
push
(bad)
in
in
mov
fdiv
xlat
out
mov
out
out
scas
push
sar
cmp
ret
neg
jb
fcom
xchg
pop
(bad)
cmc
clc
and
retf
sbb
pop
aas
push
arpl
popa
test
mov
sub
xlat
popf
out
jnp
call
daa
popf
sbb
adc
movs
jmp
pop
fldcw
add
rol
fldenv
in
cmp
lods
sub
pop
pop
shr
std
rcr
or
sub
jge
cmps
adc
inc
(bad)
cmp
or
and
cmps
pop
cmp
mov
addr16
xor
jae
aaa
retf
cmps
pop
stos
or
cmp
retf
or
mov
lahf
pop
pop
imul
cmp
adc
call
(bad)
cs
inc
add
popa
jecxz
ret
push
bsr
data16
inc
add
jnp
sbb
inc
pop
xchg
or
and
ja
jle
in
test
lock
scas
in
repz
scas
xor
(bad)
cs
xor
pop
std
mov
jno
inc
test
sahf
shl
add
sbb
push
add
stc
mov
xor
aam
call
mov
adc
sbb
push
(bad)
gs
jo
adc
push
jle
inc
dec
lock
cli
daa
cmp
mov
fs
iret
ret
or
aam
pop
pop
xchg
retf
add
mov
adc
imul
jae
xor
mov
mov
mov
sbb
inc
mov
push
mov
ja
mov
arpl
dec
clc
mov
mov
cmp
cld
icebp
cmps
mov
in
xchg
into
mov
push
fmul
enter
aaa
or
out
imul
call
sub
lds
loopne
retf
or
shr
and
add
dec
cwde
or
cdq
sub
lea
retf
aad
fs
cmp
neg
xchg
sbb
fcmovnu
aas
shl
repnz
jb
scas
mov
out
std
cmc
test
enter
inc
inc
and
out
aam
jecxz
push
not
iret
(bad)
hlt
dec
stos
sub
adc
popa
rcl
sub
data16
scas
mov
add
cmp
dec
adc
ja
or
pop
pushf
aaa
test
or
call
aaa
jp
mov
arpl
push
cmp
sbb
fidiv
loopne
in
push
push
jo
or
lods
push
jb
adc
mov
stos
push
xchg
call
int
mov
jmp
adc
xchg
in
stos
outs
add
mov
call
jne
add
mov
jmp
mov
dec
xchg
js
mov
mov
in
add
mov
(bad)
gs
ltr
icebp
jecxz
or
out
enter
jge
cmps
jmp
sub
mov
lds
pusha
add
push
push
fisttp
jg
sbb
and
and
dec
mov
mov
out
sub
jmp
sbb
and
xchg
lock
mov
xor
daa
sbb
cdq
loop
pop
add
push
mov
dec
jns
or
call
cmp
lea
sub
inc
imul
(bad)
cmp
push
and
mov
cwde
mov
lea
adc
(bad)
adc
xchg
mov
sub
xor
mov
jnp
add
xchg
ja
cmp
pop
jle
jge
call
loope
mov
mov
sbb
pop
mov
mov
pop
in
(bad)
movs
in
outs
(bad)
lea
push
xor
pop
pop
call
dec
je
shr
adc
xchg
mov
outs
lods
cmp
jle
or
sbb
xchg
arpl
mov
mov
sbb
or
mov
xchg
pop
out
loop
xor
jnp
fxch
pop
jle
fild
add
mov
cli
dec
imul
cmp
push
int3
int3
mov
sbb
pop
fild
(bad)
out
dec
jmp
mov
mov
mov
lea
into
rol
pop
das
mov
dec
gs
mov
stos
movs
jne
sbb
cmps
movs
cmps
(bad)
cmp
add
cmp
inc
stos
sub
clc
call
mov
push
and
ja
xchg
push
imul
sub
or
fld
cwde
push
dec
test
mov
jae
xor
jmp
sar
jecxz
mov
mov
cmp
test
add
les
cmc
icebp
shl
dec
push
popa
test
iret
loope
mov
mov
pop
arpl
inc
dec
sub
or
or
sub
sar
lahf
retf
or
adc
xchg
lds
pminsw
movs
mov
sar
fs
dec
push
jle
add
lock
dec
xchg
retf
pushf
mov
out
lods
adc
xor
in
xchg
xor
ins
ins
lods
aas
mov
jno
jnp
loopne
mov
outs
inc
ins
call
cmp
test
in
xor
jecxz
dec
std
mov
pop
mov
cs
jmp
and
xchg
inc
dec
xor
(bad)
adc
cmp
nop
adc
and
stos
es
fwait
inc
(bad)
push
test
and
or
mov
jge
shr
and
cmp
push
aam
jb
cs
es
push
retf
mov
jmp
or
lock
sbb
mov
sub
scas
retf
icebp
xchg
stc
jl
retf
inc
mov
inc
pusha
or
loopne
push
fnstenv
pop
cdq
cld
pop
xor
jns
fcom
xor
int
leave
leave
ds
aad
popa
jne
mov
outs
mov
div
cmp
xchg
mov
imul
rol
push
aad
sub
cwde
out
pop
or
and
push
mov
jbe
clc
mov
xchg
and
ficomp
shl
sar
jmp
dec
dec
aaa
(bad)
push
call
add
dec
sbb
inc
push
call
inc
mov
in
mov
mov
int
in
pop
shl
pop
xchg
add
mov
popf
adc
aaa
jnp
int
scas
or
getsec
repz
jl
dec
cdq
aaa
sub
dec
mov
mov
enter
push
push
rcr
scas
scas
sti
jb
inc
mov
mov
inc
ret
ja
ins
les
mov
sub
and
dec
mov
cmp
xor
pop
es
push
nop
sar
mov
hlt
out
mov
jp
ret
sbb
jmp
dec
fstp
aad
test
out
xchg
popf
mov
add
ins
mov
push
or
mov
jle
mov
jg
pop
(bad)
jmp
dec
leave
ror
cdq
mov
and
adc
stc
push
unpckhps
sti
cmp
cmp
cmps
or
enter
push
sbb
jl
scas
adc
jnp
icebp
mov
and
sub
mov
repz
ss
push
xchg
mov
loope
aaa
mov
in
(bad)
fild
call
sbb
or
pop
jmp
cdq
mov
(bad)
rcr
out
push
push
dec
ss
xchg
test
ds
jo
rcl
push
test
test
push
cld
inc
gs
xor
mov
mov
mov
jl
mov
xchg
pop
hlt
adc
cld
loop
mov
jg
mov
fdiv
call
mov
cdq
into
aaa
xor
je
push
mov
ins
cmp
lea
call
xchg
jp
sbb
dec
mov
repnz
lds
test
dec
aas
xchg
push
aas
lds
cli
ret
call
sbb
push
inc
push
add
in
jne
pop
stos
fwait
stc
ss
les
pusha
mov
fstp
cmc
xlat
sti
inc
add
adc
xchg
add
mov
jae
les
pop
or
xor
enter
fstp
add
test
mov
jmp
ins
je
mov
mov
fwait
push
or
ds
int
fidivr
lods
inc
xchg
jae
hlt
xchg
ins
push
jle
popa
repz
add
ror
dec
in
cmp
pop
cld
inc
push
lods
ret
mov
fld
and
sbb
mov
movs
pop
adc
call
cwde
jle
inc
jge
pop
mov
and
iret
cmp
adc
xchg
arpl
fiadd
xor
inc
test
cmp
cmps
cmp
pop
sub
mov
mov
pop
push
dec
adc
push
add
scas
jle
pop
lea
jle
aam
dec
rcl
movs
pop
sbb
pop
les
mov
xor
push
(bad)
sti
or
adc
pushf
push
and
ins
or
inc
leave
ror
add
dec
or
ja
ret
movs
aam
fidivr
scas
mov
stos
push
adc
and
icebp
jbe
pop
dec
daa
cs
cmp
js
scas
mov
cmps
scas
pop
in
hlt
cmp
out
cmp
adc
jo
dec
rcr
loope
jecxz
stos
sbb
loope
ficomp
(bad)
jg
or
dec
shr
dec
sub
mov
lock
sahf
dec
mov
retf
test
int
push
jmp
aaa
dec
enter
pop
pop
das
fimul
sti
push
lds
xchg
add
xchg
cmp
nop
xlat
jne
xor
clc
out
ficomp
call
imul
nop
(bad)
and
(bad)
scas
imul
mul
cmps
dec
mov
xor
inc
ffreep
and
ror
imul
leave
jmp
sbb
fs
lea
inc
push
outs
adc
push
call
cmp
mov
xchg
xor
nop
pop
js
or
inc
adc
xchg
pop
adc
and
(bad)
in
test
cmp
jmp
sar
inc
loope
inc
je
nop
cdq
or
jb
out
mov
lds
mov
mov
(bad)
lea
fnstsw
adc
pop
pop
ins
movs
loope
inc
aad
aaa
jb
add
sbb
push
mov
push
mov
cmp
mov
sti
dec
loope
aaa
pop
inc
and
mov
stos
add
aad
pop
js
xchg
fst
das
dec
add
into
sbb
xchg
mov
lods
xchg
mov
push
sub
mov
rol
cmp
cmp
inc
and
and
dec
cmp
dec
aas
jb
add
fnstcw
mov
movs
mov
fbstp
dec
add
cdq
out
inc
inc
icebp
jecxz
mov
cmc
push
gs
out
nop
jge
xchg
das
xor
xchg
xor
je
mov
(bad)
test
shl
ficom
hlt
ss
mov
outs
sti
loop
push
sub
sbb
nop
inc
data16
les
fdivr
fnstenvw
repz
outs
jo
repnz
clc
cmp
push
pop
movs
jg
test
fcomp
pop
stos
mov
sbb
dec
std
xchg
push
loop
sahf
sbb
in
or
out
jl
not
mov
ds
pusha
mov
cwde
nop
xchg
or
mov
fist
push
outs
sub
dec
mov
pop
mov
push
sbb
mov
daa
fidiv
cdq
cdq
cmps
push
fsubrp
xchg
pop
and
out
push
test
mov
or
xchg
movs
into
test
cdq
sbb
sbb
ja
fs
shr
xadd
or
xchg
inc
and
or
out
test
push
icebp
xchg
in
fild
jl
mov
scas
stos
jae
test
movs
xchg
test
dec
pop
xor
mov
imul
mov
test
in
adc
imul
mov
lock
sbb
ins
gs
jmp
dec
mov
mov
test
push
jb
mov
jge
in
jo
or
sub
into
xor
in
cmps
punpcklbw
(bad)
cld
or
xor
xchg
jnp
outs
data16
test
inc
rol
pop
and
pop
jbe
push
mov
aad
sub
mov
xor
or
xor
sbb
cmps
xchg
scas
xchg
pop
outs
adc
aaa
adc
mov
lds
sbb
fiadd
cmp
call
inc
std
std
loopne
xchg
icebp
jecxz
xor
stos
push
dec
fwait
mov
pop
scas
mov
in
and
stos
sbb
or
jge
jae
jl
jg
ja
popf
push
mov
cdq
into
cmp
dec
int
cmp
sbb
sbb
sbb
ss
loop
sbb
shl
cmps
mov
xchg
loop
pop
(bad)
loop
sbb
dec
rol
dec
lds
jo
push
out
iret
sub
mov
or
xchg
fwait
lods
movs
adc
xor
jle
sub
mov
jbe
aaa
out
jne
ja
call
xchg
jns
pop
xchg
push
shr
jg
cmc
lods
iret
pop
push
jmp
js
cmp
cmps
(bad)
and
add
mov
imul
jns
or
mov
mov
and
jecxz
sub
cs
dec
mov
and
pop
repnz
scas
add
mov
or
xlat
mov
inc
mov
pushf
call
mov
jmp
cmps
mov
dec
add
jo
cld
(bad)
aad
rcl
inc
out
sbb
int
push
out
mov
mov
mov
imul
xor
push
mov
ret
dec
xor
in
(bad)
push
jecxz
scas
imul
lods
push
cmp
mov
popa
lahf
aas
inc
xchg
add
push
jae
popf
adc
(bad)
sub
push
out
loope
jmp
enter
mov
sbb
and
or
mov
inc
ja
push
rcr
inc
loop
jmp
push
fdivr
cmps
ds
in
lods
pop
push
inc
loop
stos
or
dec
and
pop
jo
inc
xor
inc
adc
mov
fld
and
inc
jae
jbe
aam
sbb
enter
pop
xor
push
add
adc
mov
mov
push
adc
pop
lods
enter
std
fild
sar
sbb
movs
mov
sahf
enter
sbb
inc
ds
cli
sub
push
cmovae
or
mov
cs
aaa
jmp
sti
jo
pop
cmp
mov
xor
and
inc
mov
pushf
jl
outs
hlt
sub
mov
daa
jge
add
xchg
adc
mov
pop
push
sbb
and
xor
jb
jle
les
pop
sbb
mov
sub
outs
jmp
dec
popf
jno
loopne
xor
inc
popf
mov
push
sbb
cli
pop
nop
out
adc
(bad)
arpl
xchg
test
out
dec
pop
fdiv
xor
and
fidivr
stc
fimul
cmp
sbb
neg
pop
xor
pop
pop
scas
mov
in
or
and
mov
fsubr
pop
add
(bad)
fucomp
sub
test
cmc
sub
push
mov
pop
mov
das
test
dec
je
icebp
and
jp
or
pop
push
add
das
cmc
adc
ret
in
ins
test
push
jg
hlt
repnz
xchg
fnstsw
out
enter
fnsave
sub
js
aaa
movs
add
jne
xchg
fcomp
retf
pop
push
and
(bad)
outs
jne
mov
sbb
stos
fiadd
in
cmps
sahf
mov
mov
jmp
xor
js
pop
jo
outs
outs
fsubr
cmp
test
or
mov
loope
mov
gs
das
cmps
repz
jbe
mov
mov
mov
aam
call
mov
ficomp
aaa
gs
sub
pop
ins
clc
push
mov
pop
sbb
in
xchg
xchg
push
into
mov
out
lods
dec
stos
or
cmps
xchg
daa
inc
xchg
and
mov
in
mov
mov
rcr
cmp
cmp
imul
fprem
sar
lahf
sbb
jnp
in
aad
out
xor
inc
sbb
stos
cli
movs
test
jecxz
cmp
dec
pop
gs
retf
cmp
jge
popf
xor
adc
punpcklbw
aad
xor
or
dec
pop
clc
adc
icebp
ds
aaa
add
ins
jl
or
repnz
sar
jns
daa
pop
movs
popa
inc
ss
retf
in
cmp
inc
mov
inc
mov
add
mov
add
adc
scas
stos
push
test
adc
in
fst
push
test
js
dec
inc
xchg
lds
(bad)
aad
push
jmp
mov
(bad)
push
test
pop
cdq
sub
cmp
jl
mov
popa
movs
jne
cmps
aam
sbb
(bad)
stc
icebp
jmp
push
inc
sub
sub
and
loop
cwde
cmp
sub
fstp
adc
cmps
sub
shl
adc
and
ja
mov
test
push
mov
jmp
pop
dec
and
push
mov
xor
repnz
mov
and
push
outs
retf
ret
ret
pop
pop
dec
adc
fwait
fwait
hlt
and
push
jnp
add
outs
(bad)
pusha
popf
jb
shr
mov
iret
pop
fisttp
push
ret
and
cmp
(bad)
dec
(bad)
pop
movs
push
xor
pop
jecxz
outs
cmp
lea
das
or
push
(bad)
leave
cld
test
call
inc
add
cmp
ja
icebp
outs
leave
ret
mov
jge
lahf
out
cld
mov
out
jno
out
movs
mov
cmp
inc
in
fcmove
pop
push
inc
add
not
or
fidiv
or
xor
mov
call
es
shr
and
movs
sub
retf
test
fbld
dec
call
les
dec
sbb
and
jae
ss
xchg
jne
test
or
and
push
mov
push
repz
mov
pop
mov
les
jmp
ret
test
imul
mov
pop
pop
shr
and
pop
loope
lock
or
psrld
mov
retf
leave
mov
and
nop
dec
sti
xchg
test
dec
dec
adc
and
push
aas
leave
or
fwait
test
sti
xchg
imul
xor
repnz
ja
inc
or
inc
loop
sub
cmp
jl
jecxz
push
cmp
inc
jge
cmovnp
hlt
add
jl
mov
push
rcl
push
and
dec
sub
out
fsubrp
retf
rol
repnz
add
lea
jmp
push
push
add
and
mov
xor
pop
cmc
aad
sbb
idiv
out
and
lods
rcr
dec
mov
cmc
push
addr16
sbb
jmp
jg
test
aaa
mov
test
lea
jecxz
call
mov
hlt
jae
enter
cdq
xor
inc
mov
stos
mov
shr
xchg
xchg
inc
pop
test
inc
repnz
cmp
lods
xchg
mov
xor
inc
aam
pop
repnz
xchg
sub
inc
sub
xchg
out
cwde
outs
(bad)
dec
xchg
lods
aam
fcmovnb
jno
mov
das
xchg
push
sbb
xchg
add
push
stos
retf
shl
jecxz
adc
aam
and
or
scas
rol
pusha
xor
into
test
std
pop
jmp
xchg
dec
mov
xor
xchg
jecxz
retf
xlat
sbb
les
jmp
popa
push
imul
stos
(bad)
mov
sar
adc
push
sub
pop
push
in
scas
dec
aam
scas
shl
mov
add
icebp
pop
std
mov
ret
or
loop
cli
in
(bad)
jmp
add
test
sub
sbb
mov
movs
push
sub
das
and
mov
or
mov
aad
stos
or
inc
sti
(bad)
sahf
jo
enter
dec
jge
(bad)
adc
lahf
scas
mov
out
pop
adc
lods
cld
jmp
in
jge
(bad)
pop
jge
call
pop
std
xor
xchg
jmp
imul
and
inc
out
adc
cmp
xchg
cs
sub
movs
inc
sbb
xchg
lock
pop
add
adc
mov
dec
cmp
jge
bnd
or
movs
call
jle
and
fs
pusha
leave
lds
adc
aaa
adc
test
jge
sub
dec
lods
sahf
clc
jg
mov
pop
imul
add
idiv
ror
and
(bad)
cmp
xor
mov
daa
xor
js
popa
mov
sub
call
or
fwait
sbb
(bad)
rcr
xor
push
pusha
pop
shl
lar
inc
call
add
loop
sub
in
fwait
inc
pop
(bad)
inc
aad
bound
cmps
aam
mov
mov
shr
ins
jmp
adc
mov
add
(bad)
cmc
out
fist
clc
sbb
test
jmp
ret
jge
or
stos
pop
shr
shr
fst
lock
sbb
xchg
repnz
mov
cwde
sub
push
xor
in
inc
dec
mov
ficom
xchg
sar
push
sub
push
mov
xchg
test
(bad)
xor
popa
xlat
in
sbb
or
and
aas
jmp
mov
cmp
rcr
push
sub
mov
xchg
jb
jmp
adc
out
les
fsubp
(bad)
sahf
inc
xor
mov
test
in
push
xchg
mov
mov
pop
pop
leave
dec
mov
outs
enter
push
lea
or
inc
cli
inc
sub
add
mov
pop
stos
test
mov
arpl
mov
dec
call
adc
cmp
dec
retf
icebp
mov
adc
jmp
jl
jnp
cld
std
rcl
test
inc
pusha
push
imul
pop
outs
int3
imul
adc
adc
jno
add
imul
loop
std
and
cmp
call
pop
pushf
xchg
add
mov
push
cmp
push
mov
cli
pusha
mov
ret
xchg
inc
xchg
js
ins
test
je
add
(bad)
sbb
xchg
lods
popf
pop
adc
push
add
push
icebp
push
scas
and
pushf
and
or
(bad)
and
pop
mov
js
leave
test
mov
outs
adc
leave
lock
rcpps
pop
mov
popf
cmp
pop
and
cmps
mov
lea
fisubr
add
nop
pop
push
push
lahf
lahf
push
xor
fiadd
pop
cmp
je
jmp
push
adc
retf
jae
pop
xchg
imul
mov
jb
lea
imul
xor
out
jbe
xor
cmc
enter
fstp
ret
jge
in
movs
pop
les
fs
call
mov
lock
inc
fcmovu
daa
mov
lea
test
mov
sbb
mov
cmps
scas
data16
into
arpl
xor
les
(bad)
pop
mov
mov
mov
push
mul
mov
pop
push
jbe
dec
dec
xchg
clc
mov
sbb
inc
setl
cmp
mov
mov
and
dec
jae
(bad)
(bad)
popa
and
test
push
je
lods
dec
mov
xchg
(bad)
xor
mov
int3
(bad)
xlat
add
(bad)
xor
aaa
ficom
push
lahf
jbe
sti
gs
add
cmp
hlt
lea
mov
(bad)
push
mov
dec
fwait
int
cs
adc
xchg
mov
test
inc
push
adc
daa
imul
sbb
dec
sbb
mov
and
aaa
inc
mov
inc
std
js
jns
inc
call
lahf
out
sub
pop
popa
repnz
add
call
iret
inc
adc
aas
call
xor
pop
xor
cdq
test
data16
mov
lahf
push
dec
ss
loopne
inc
nop
adc
outs
mov
shl
xor
mov
pop
xchg
shr
pop
inc
xor
fmul
sahf
mov
push
sbb
pop
in
xor
push
xor
je
sub
inc
out
push
popa
jl
push
lea
loope
fbld
jb
xchg
mov
jp
not
xchg
cld
popa
inc
xchg
ds
xor
or
pop
ret
ror
pop
and
sub
sbb
dec
jle
lds
leave
mov
inc
jbe
call
ja
dec
in
int
shr
inc
int3
ins
mov
mov
into
inc
test
mov
out
lods
rol
or
sbb
xchg
xchg
inc
pop
and
fdivr
dec
mov
test
js
xchg
sbb
jg
pop
xchg
xor
retf
push
repnz
push
adc
cmp
ss
cmp
mov
jp
mov
xor
mov
push
out
or
mov
js
push
mul
mov
xchg
inc
xchg
in
mov
push
pusha
nop
ins
fprem
jb
fs
sti
add
sti
jecxz
xor
jg
ret
sub
xchg
mov
jp
into
in
repz
inc
sub
addr16
jl
shr
mov
pop
in
ret
fcomp
pop
dec
sbb
mov
jmp
dec
enter
popf
dec
(bad)
aaa
add
xchg
lock
adc
add
outs
inc
imul
into
(bad)
cdq
jno
shr
in
pshufw
stos
inc
lea
xchg
push
daa
mov
out
jle
dec
pop
ins
inc
movs
mov
mov
mov
daa
mov
out
add
test
lock
xchg
xor
mov
movs
jmp
es
mov
je
mov
and
sti
and
call
push
sub
int
sub
mov
imul
mov
sub
out
popf
iret
cmp
sub
push
inc
jns
dec
add
aad
stos
push
nop
inc
scas
sti
jmp
out
xchg
test
fld
xlat
mov
cs
mov
cmp
js
add
lods
out
bswap
mov
test
pop
mov
in
pushf
sti
push
(bad)
or
retf
mov
xchg
repz
cdq
dec
xor
mov
fldenv
pop
xchg
mov
mov
or
xchg
push
das
lods
icebp
and
xchg
push
fucomip
add
aad
xor
pop
ja
dec
xor
lods
nop
push
mov
cmp
cli
and
call
dec
shl
(bad)
mov
pop
movlps
inc
ins
sti
push
js
mov
jecxz
loop
lods
xor
mov
int
mov
xor
cld
pop
daa
popa
sub
adc
xchg
push
inc
inc
xor
popa
adc
cmp
adc
jmp
gs
sti
cmp
sub
test
sub
sub
inc
cli
ins
push
dec
pminsw
mov
add
addr16
call
cmp
mov
xor
or
outs
add
pushf
sub
sti
in
out
add
dec
jl
jecxz
ss
loope
dec
add
jmp
aas
sub
xchg
mov
push
loopne
mov
lahf
jnp
push
repz
sub
mov
mov
jp
mov
lods
repz
bound
sub
xor
cli
lods
pushf
cmps
add
jb
sub
test
sbb
jle
rol
xchg
ins
jp
sti
add
and
jecxz
adc
mov
outs
dec
ja
pop
jbe
pop
push
mov
aam
inc
inc
push
pop
div
movs
jno
and
inc
loop
mov
mov
jo
out
addr16
popf
addr16
repz
test
cwde
jb
out
fdivr
add
jmp
out
sub
mov
sub
leave
mov
mov
out
add
and
mov
cs
fwait
hlt
jmp
or
inc
fbstp
mov
push
jmp
xor
test
loop
pop
mov
or
xor
aaa
push
aas
call
ds
add
ja
lea
xchg
sub
rcr
dec
lods
cmp
sbb
mov
stc
xor
mov
sti
inc
jne
sahf
ins
fwait
mov
or
pop
(bad)
les
(bad)
mov
push
inc
(bad)
jb
mov
rcl
nop
leave
xchg
(bad)
jmp
hlt
xchg
push
fst
sbb
sub
aaa
daa
dec
lods
add
jp
pushf
outs
and
mov
dec
or
jno
inc
daa
dec
jb
dec
jp
push
aaa
xor
and
popa
fmul
out
dec
xchg
pusha
xchg
mov
lds
(bad)
fild
int
add
sub
lods
jmp
jns
shr
pop
inc
push
mov
xor
pop
jne
sbb
fdivr
mov
add
adc
and
mov
cdq
xor
scas
xchg
cmp
imul
pop
pop
xor
or
mov
(bad)
stos
test
add
sub
mov
jno
mov
inc
loopne
jne
fwait
dec
ret
mov
scas
or
pusha
xchg
xchg
inc
hlt
out
shl
pop
push
xor
pop
pop
adc
sub
js
or
cmps
dec
ins
cmps
mov
push
daa
cmp
loop
rcl
pop
in
arpl
(bad)
lods
out
xchg
loopne
pop
loopne
addr16
movs
dec
cli
adc
call
data16
or
ins
inc
call
mov
add
inc
inc
leave
add
ret
mov
xlat
addr16
ror
mov
in
xlat
or
dec
imul
xchg
xchg
test
shl
push
in
sti
inc
int
add
out
xor
mov
cdq
loop
(bad)
clc
and
(bad)
mov
cdq
mov
jbe
jmp
ss
cmc
sbb
aad
loopne
inc
push
add
pop
enter
data16
xchg
sub
mov
into
sbb
push
and
push
jle
imul
loopne
jmp
fisub
icebp
mov
add
ins
test
(bad)
(bad)
in
dec
rcr
imul
xchg
push
or
repz
add
mov
xor
popf
iret
clc
mov
test
movs
bound
lds
cmps
push
stos
and
sub
and
sub
inc
cdq
retf
push
inc
imul
mov
or
pushf
(bad)
leave
(bad)
imul
in
xor
push
sti
push
fcomp
ds
push
adc
jmp
in
pushf
retf
fist
jb
mov
das
push
stos
cld
dec
and
xchg
sbb
xchg
xor
pop
(bad)
push
pop
fmul
push
leave
inc
or
pop
hlt
rcr
in
test
dec
add
mov
push
fwait
jno
push
pop
xchg
push
adc
xchg
adc
mov
jbe
adc
lock
cwde
xlat
cmp
or
add
and
jae
lea
iret
mov
pop
les
adc
push
mov
cmp
dec
xchg
es
jl
sbb
cmps
mov
or
mov
scas
push
cli
inc
xchg
cli
movs
and
xchg
outs
xlat
jg
adc
and
in
inc
adc
ss
mov
mov
or
push
push
xor
fidivr
pushf
scas
(bad)
out
sti
jno
push
fistp
into
(bad)
fild
xchg
or
add
aaa
jge
mov
dec
xchg
push
push
xchg
mov
adc
aam
xor
cld
push
or
shr
cdq
das
enter
push
icebp
xor
scas
ret
jmp
inc
and
lods
add
mov
mov
test
pop
and
xor
das
mov
mov
retf
add
mov
inc
add
pop
ins
lahf
cmps
pop
loopne
jbe
sbb
xchg
jne
pop
cdq
(bad)
ja
mov
inc
test
cmp
jo
sub
add
popf
outs
retf
sahf
pop
xchg
sbb
adc
xchg
cmp
fistp
and
xor
js
xchg
ins
mov
and
fnstsw
jae
mov
add
or
pop
ret
mov
mov
outs
hlt
popa
mov
sub
xor
cmc
or
xchg
push
scas
leave
popa
adc
dec
jae
jecxz
adc
xor
lock
fwait
add
push
adc
cmps
pop
and
dec
jns
jmp
adc
xchg
mov
call
mov
enter
xchg
les
sbb
add
(bad)
call
xchg
outs
push
push
enter
mov
es
shr
outs
cmps
pop
cld
stc
sub
jmp
pop
out
mov
push
pop
mov
popa
retf
mov
cli
cmp
jg
ins
out
xor
dec
inc
cmp
or
pop
out
cmps
push
xchg
sti
jg
hlt
popf
movntps
sub
sub
pop
sub
pop
inc
loope
in
jbe
cdq
ret
out
loopne
inc
dec
sub
shl
mov
mov
inc
sbb
(bad)
and
daa
std
dec
mov
sub
aad
mov
add
ror
adc
jmp
sbb
push
mov
sahf
cmps
jmp
jecxz
fld
push
clc
stos
mov
je
sbb
mov
pop
(bad)
mov
or
cmps
retf
out
cmp
mov
sub
push
aam
hlt
rcl
rcl
lods
cmps
fild
cmp
add
xor
das
cmp
(bad)
outs
ja
mov
jmp
sub
sub
add
push
cli
bound
mov
call
add
in
sub
pop
push
test
sbb
jo
push
cmp
mov
fadd
jge
dec
rol
sbb
xor
jne
inc
jmp
xchg
fwait
mov
mov
(bad)
sar
test
shl
pop
cmp
add
sbb
cmp
xchg
mov
loop
outs
loop
or
cmp
xor
mov
mov
xchg
les
mov
out
xchg
dec
lds
push
stos
dec
pop
pop
pop
cmp
dec
pop
in
sahf
sbb
xor
gs
dec
jno
cli
test
xchg
scas
adc
xchg
stos
mov
push
cwde
mov
out
sub
icebp
mov
xchg
mov
lahf
stos
push
adc
xchg
pusha
(bad)
leave
or
out
inc
stos
cdq
neg
jb
ins
dec
test
rcr
scas
cmp
xchg
lea
idiv
jp
shl
js
js
test
xor
jae
jmp
ret
push
sbb
and
jne
jle
test
push
xchg
xor
(bad)
shl
inc
pop
mov
in
push
sub
xor
rcl
add
pop
inc
ins
push
aad
add
call
cld
add
inc
or
pop
dec
pop
or
lea
cmc
xchg
push
or
leave
shr
or
push
ins
into
jecxz
xor
jmp
jecxz
xor
push
jg
dec
sbb
fld
adc
addr16
or
test
pop
mov
lods
fisubr
pop
push
cld
in
cmps
add
call
aas
outs
adc
es
and
shl
popf
std
jle
xor
push
push
or
(bad)
adc
mov
adc
jo
mov
mov
sub
pusha
les
add
and
out
push
scas
or
stc
xor
or
push
daa
dec
shl
rcr
fadd
mov
add
ss
dec
add
scas
sub
div
xchg
add
je
bound
shl
fistp
popa
sbb
mov
adc
jno
addr16
jmp
adc
dec
add
cwde
pop
(bad)
std
fsubr
dec
ror
popa
out
add
scas
mov
into
lock
mov
jp
jp
cmp
dec
cmp
(bad)
dec
pop
inc
ds
jno
and
fisub
pop
fstp
leave
out
and
repz
fisttp
retf
cwde
sub
adc
fwait
mov
mov
bound
call
loope
dec
mov
loope
scas
xchg
ret
cmp
sbb
adc
cmp
xlat
jno
adc
mov
mov
jle
movs
rep
dec
adc
nop
arpl
sar
in
ret
stc
sub
test
int3
push
mov
rdrand
or
add
add
stos
das
inc
cmp
inc
fiadd
jno
sbb
sbb
add
ja
xor
int3
sub
ins
mov
mov
sub
sahf
(bad)
jnp
cmc
call
pushf
push
out
xchg
in
pop
ror
imul
push
push
retf
push
cmp
in
xchg
pop
jo
ss
push
scas
das
les
jecxz
or
sbb
repz
cmp
outs
dec
out
pop
(bad)
ins
int3
mov
add
sub
repz
aad
pop
mov
sar
aad
retf
and
ins
es
mov
pusha
pop
or
neg
lods
stos
cmc
fstp
xor
fcmovnu
shl
sbb
xchg
lahf
ins
cwde
retf
aad
aaa
pop
adc
into
cmp
push
or
sbb
rol
movs
movs
out
pop
aam
or
mov
loop
jp
mov
rcl
cld
sbb
and
mov
sub
call
jle
xchg
cld
test
aam
mov
and
call
loop
fadd
call
(bad)
test
cmp
test
mov
movs
mov
ja
je
neg
popa
loop
aas
mov
sub
push
lock
neg
ret
loope
call
add
dec
jmp
cmp
jae
fmul
push
out
loopne
icebp
cli
inc
jne
fistp
and
fstp
sub
arpl
push
xor
icebp
lea
mov
push
sbb
outs
sub
and
adc
cmp
and
jne
popf
movs
clc
mov
push
push
sti
pop
inc
int3
fcomp
and
das
mov
mov
mov
inc
out
imul
out
push
mov
pop
cmp
outs
mov
or
sbb
call
sti
imul
(bad)
push
inc
mov
mov
or
movs
pop
push
and
mov
(bad)
(bad)
pusha
(bad)
in
stc
sub
mov
jge
retf
xor
out
outs
imul
sbb
cmp
lock
in
rcr
bnd
fsubr
push
adc
xor
inc
aad
cmp
cmc
imul
les
mov
sub
sub
mov
adc
scas
add
sbb
div
(bad)
mov
imul
into
mov
push
dec
mov
inc
xlat
add
movs
jmp
sahf
rol
data16
scas
retf
sub
call
movs
jg
lods
cmp
jge
cmp
lahf
cmp
inc
imul
sub
cmc
mov
(bad)
popf
jecxz
cmp
sti
sub
add
xchg
or
(bad)
mov
test
jl
pushf
mov
not
mov
pop
xchg
sub
outs
test
mov
(bad)
mov
mov
das
out
or
ds
imul
cmps
jb
retf
repnz
popa
stos
mov
pop
or
pop
cdq
(bad)
xchg
ja
xor
aad
mov
jecxz
inc
gs
daa
aaa
retf
pop
das
fs
ins
ret
loop
pop
push
push
fs
stos
(bad)
nop
sub
sahf
cld
mov
pop
or
out
cmp
hlt
ja
cs
and
test
int
and
cld
jge
in
cs
pop
ret
pop
jecxz
jecxz
push
fmul
lods
outs
inc
pop
xchg
(bad)
lds
sub
adc
mov
emms
loopne
pop
xor
out
fmul
add
out
pop
push
leave
push
and
and
int
not
test
sahf
adc
cmp
aas
mov
daa
pop
(bad)
not
cmps
jecxz
push
(bad)
cli
leave
jmp
dec
push
pushw
mov
(bad)
pusha
lea
daa
fisubr
fisubr
mov
push
ret
mov
stos
adc
pusha
inc
call
or
push
(bad)
gs
fbld
pmulhw
lods
mov
pop
mov
mov
mov
sbb
int3
gs
pop
fldenv
push
push
in
out
push
ins
xor
mov
scas
xchg
and
cmp
sub
mov
test
fisttp
retf
xchg
mov
out
and
loope
mov
mov
xchg
xchg
sbb
nop
pop
jp
sub
aas
(bad)
push
sbb
and
xchg
mov
call
xchg
ja
dec
outs
fidivr
sti
sbb
cmp
enter
xchg
repnz
shl
sub
clc
xchg
fist
imul
js
and
(bad)
sbb
inc
rol
xor
(bad)
dec
push
test
fiadd
retf
xor
xchg
imul
mov
add
push
xor
xor
lds
push
adc
sbb
mov
and
mov
or
push
ror
push
mov
mov
int3
fsubr
adc
ret
and
stos
and
bound
mov
dec
lods
xor
iret
and
hlt
mov
pop
adc
mov
scas
push
mov
add
sbb
add
cmp
or
fld
mov
stos
dec
cmp
push
dec
mov
adc
std
dec
shr
scas
dec
cmps
push
push
pop
std
push
cmp
adc
mov
test
push
and
cmp
xor
stc
or
jl
jmp
(bad)
loopne
sub
cmp
lds
shl
pop
and
sub
jle
inc
pop
xchg
cmps
push
or
clc
xor
shr
and
sub
add
adc
movs
sub
in
icebp
pop
adc
mov
mov
xor
sub
inc
add
hlt
mov
bound
lock
mov
mov
mov
aad
mov
xchg
not
push
js
pushf
(bad)
xchg
cdq
xchg
inc
xor
in
sub
jp
loopne
inc
out
mov
dec
jge
cmc
mov
enter
sub
(bad)
mov
mov
repnz
imul
lahf
in
mov
push
add
jo
xchg
sar
(bad)
push
pop
fwait
mov
add
mov
inc
push
sbb
dec
adc
leave
adc
test
std
es
sti
push
je
jb
out
pop
test
movs
jb
jp
jnp
inc
(bad)
in
fs
pop
les
addr16
sbb
nop
or
lods
cmp
and
pushf
je
push
cmp
sub
enter
leave
inc
jle
adc
inc
in
lods
rcr
(bad)
cmp
jbe
and
sbb
sub
(bad)
arpl
lods
add
(bad)
(bad)
loopne
loope
out
in
(bad)
push
push
pinsrw
pop
jl
enter
ret
iret
jne
push
jmp
push
cmp
xor
add
fdivr
fisub
mov
int3
cwde
mul
cmp
retf
xchg
xchg
pop
jg
out
(bad)
call
scas
mov
push
inc
hlt
(bad)
xchg
push
(bad)
pop
ss
mov
fstp
mov
mov
add
pop
xor
dec
jge
fld
jl
jg
xor
jmp
test
test
lds
dec
pusha
call
rcr
gs
stc
mov
mov
mov
add
jnp
je
mov
fdiv
lods
nop
mov
add
dec
xor
(bad)
adc
rcl
mov
out
and
into
push
add
mov
push
cdq
rcr
xchg
scas
dec
sbb
fsubr
pop
stos
jmp
out
enter
mov
sub
xchg
xchg
cmp
aad
in
mov
or
inc
cmp
dec
inc
sbb
adc
jne
ret
or
clc
sbb
ret
mov
jmp
inc
mov
adc
(bad)
je
in
add
repz
sbb
mov
data16
test
adc
adc
pop
icebp
icebp
sub
jge
and
pop
push
repz
pop
js
mov
pushf
and
call
xor
add
in
cwde
pop
xchg
mov
cli
fwait
retf
movzx
mov
jo
add
cli
mov
jmp
int
out
jb
inc
mov
xor
jbe
mul
es
mov
(bad)
cmp
inc
or
sbb
cdq
dec
push
movs
mov
mov
add
(bad)
cmps
pop
and
or
pop
bound
pop
rcr
and
ss
jle
stc
shl
loope
sub
arpl
xor
iret
and
adc
pop
test
or
mov
sbb
lea
jb
and
imul
mov
or
inc
out
test
(bad)
push
jns
stc
test
jp
ror
leave
mov
lods
and
jb
or
inc
(bad)
jge
loope
(bad)
jmp
xor
mov
cmp
xchg
mov
dec
mov
jp
scas
cmp
inc
loop
mov
iret
sti
cld
xchg
xchg
imul
hlt
out
xchg
sbb
test
test
adc
jbe
rol
add
jp
ja
mov
xlat
and
mov
jmp
inc
cdq
into
cld
cwde
gs
lea
inc
(bad)
push
aaa
pop
outs
jne
js
mov
mov
add
aaa
fs
xchg
das
cli
out
out
push
outs
mov
sbb
ss
cmp
pop
xor
call
(bad)
lds
jg
arpl
push
cwde
jle
pop
dec
pop
jb
lahf
pop
hlt
div
fldenv
or
jl
repnz
xchg
sbb
fld
ret
loopne
in
call
xchg
mov
(bad)
clc
mov
shr
mov
push
pop
test
pop
xlat
xor
inc
bswap
xor
add
bound
(bad)
(bad)
out
mov
push
mov
inc
or
adc
jbe
lahf
mov
cmp
xchg
sbb
fsub
sub
sub
movs
into
mov
cmp
push
jmp
push
pop
adc
data16
mov
push
sub
loop
aas
nop
mov
repz
xchg
lahf
lods
inc
sbb
adc
int
pop
jl
inc
inc
std
sbb
jns
mov
push
or
imul
das
daa
xchg
std
sbb
(bad)
pushf
scas
mov
scas
xchg
movs
mov
call
cmp
lds
cwde
adc
pop
imul
pop
call
jmp
mov
sbb
cwde
std
xor
and
inc
push
call
mov
div
jo
scas
push
sbb
aad
sbb
aam
out
lahf
adc
or
gs
ins
in
pop
enter
mov
jae
cmc
bound
(bad)
stos
sub
mov
mov
popa
fistp
inc
push
sub
jmp
hlt
shr
(bad)
xchg
sbb
ss
mov
push
data16
rol
fbld
loop
pop
pop
cmp
mov
ror
ret
jle
ins
aam
xchg
pop
sbb
fidivr
pushf
es
pop
pop
scas
mov
fs
cmc
loop
pop
pushf
and
and
test
test
mov
cs
test
push
pop
jae
mov
inc
inc
pop
retf
xor
leave
or
hlt
in
pop
and
jb
dec
js
xlat
and
or
fld
adc
add
push
js
mov
hlt
dec
inc
or
and
and
rcl
in
jo
pop
jle
mov
pop
jmp
(bad)
emms
xchg
aaa
pop
dec
push
cmp
xor
dec
jl
scas
push
popa
outs
and
js
cmc
xlat
stos
xchg
or
mov
outs
pop
push
hlt
add
loope
xchg
and
scas
aad
mov
or
xchg
cmps
punpckhdq
arpl
mov
arpl
or
mov
fidiv
fadd
push
and
xchg
call
jbe
nop/reserved
pop
fwait
sub
sbb
xchg
fld
jo
jb
xchg
push
cs
aad
fisub
(bad)
fnsave
sub
mov
(bad)
mov
mov
mov
pop
add
imul
clc
adc
adc
jmp
pop
mov
js
(bad)
sub
jl
(bad)
addr16
stos
pushf
outs
ss
xchg
push
popf
inc
jns
dec
cld
sub
jb
add
hlt
(bad)
xchg
push
outs
retf
push
add
test
push
push
sbb
stos
repnz
add
jecxz
je
test
aad
aaa
jg
jns
(bad)
jnp
je
cmp
pop
and
mov
rol
mov
push
jne
push
mov
cli
in
out
push
dec
into
push
pushf
pop
jo
xchg
(bad)
loope
or
call
dec
add
aam
stc
test
sub
xchg
popf
jp
sub
mov
sahf
push
push
lahf
sub
arpl
pop
and
inc
lahf
pop
stos
mov
xchg
cmps
je
and
inc
sub
cwde
pop
push
inc
jo
lods
xchg
ficomp
push
dec
cli
in
add
mov
imul
dec
jg
jp
pop
pop
ins
rcpps
into
pop
imul
std
stc
add
add
dec
sub
test
push
sub
mov
test
xor
call
shl
push
dec
add
loope
mov
cmp
jmp
bound
xlat
arpl
sbb
push
pusha
add
xor
mov
scas
setge
scas
cld
inc
xor
sbb
rcr
mov
daa
fidiv
pop
arpl
jmp
lea
loope
mov
sbb
xchg
inc
push
jns
jg
sbb
dec
dec
scas
stos
repnz
stos
shr
stc
mov
mov
jno
jmp
jb
aaa
push
and
jne
sbb
pop
inc
inc
jmp
gs
push
mov
out
xchg
ins
hlt
mov
push
cmp
mov
push
xchg
sbb
xor
scas
shr
and
add
sbb
sahf
mov
loope
sub
mov
sub
std
mov
sub
shl
ins
pop
xor
mov
mov
jecxz
dec
adc
inc
mov
je
sti
sti
into
or
shl
or
jmp
rol
cmps
pop
call
xor
not
pop
push
stc
movs
mov
mov
cmp
xchg
mov
fidiv
(bad)
mov
or
retf
mov
test
sbb
mov
pop
xor
(bad)
nop
adc
jne
jns
push
sub
movs
mov
push
push
jle
sub
xchg
and
loope
xor
lea
add
jns
jecxz
repz
xchg
dec
pop
jge
imul
ja
or
cwde
inc
mov
pop
icebp
stc
inc
pop
dec
retf
jg
push
jns
mov
and
push
jecxz
cdq
cli
sar
mov
repz
leave
pop
js
jg
add
pop
ficom
pop
stc
movs
enter
aam
pushf
xchg
jmp
or
ds
mov
enter
aam
push
cmp
repz
ds
in
xlat
jl
inc
stos
in
adc
lods
scas
retf
xor
hlt
mov
cmc
dec
stos
out
arpl
vpsubusb
dec
pop
dec
push
movs
adc
(bad)
xor
test
jnp
popa
loopne
jnp
mov
aad
mov
stos
sbb
out
jae
or
adc
dec
add
int
(bad)
rcl
inc
xchg
(bad)
or
in
jle
mov
sub
or
sbb
mov
int3
aam
push
xchg
mov
xchg
out
dec
imul
das
pop
push
jo
stc
mov
inc
fadd
sub
push
push
icebp
jbe
mov
xchg
hlt
cmc
sbb
data16
in
adc
leave
push
jp
in
mov
pop
loope
mov
xor
mov
sub
cmps
pop
xor
cs
hlt
int
dec
ret
adc
out
aam
xor
pop
outs
les
test
daa
dec
cli
add
js
mov
sbb
fsub
or
shl
iret
fcmovnu
in
movs
iret
adc
lds
mov
aaa
daa
adc
sahf
mov
les
in
retf
addr16
mov
sbb
fidivr
push
and
add
rcr
pop
pop
in
fdivr
(bad)
movs
push
int
pop
push
hlt
test
pop
xchg
nop
dec
cdq
std
pop
(bad)
sbb
cdq
push
or
and
jmp
or
dec
fdivrp
jmp
jbe
shl
fbld
shr
sbb
(bad)
cmp
add
fild
dec
loop
jecxz
stos
xchg
cwde
mov
push
mov
fdivr
sub
mov
int
dec
loopne
or
int3
mov
pop
(bad)
iret
fwait
sahf
sub
xchg
les
imul
mov
jbe
push
sar
das
mov
imul
fnstcw
fstp
les
hlt
push
jbe
push
xchg
add
cmp
dec
jb
int
or
cwde
popf
das
xlat
movs
or
test
pop
popa
(bad)
pop
sub
jmp
or
jnp
sbb
add
jle
jns
into
sub
pop
stc
mov
mov
stos
inc
mov
or
or
mov
(bad)
cmps
sub
inc
stos
fcomp
mov
cld
xor
imul
hlt
sbb
fdiv
mov
pop
sahf
mov
fisttp
cdq
pop
sahf
aas
repz
enter
ins
cld
mov
scas
jnp
pop
jl
mov
mov
in
push
push
movs
cli
shl
xor
pop
sub
arpl
shl
cmp
add
gs
jle
cmp
mov
mov
fcomp
out
mov
push
(bad)
mov
fdiv
add
ins
sub
mov
das
mov
jbe
xchg
hlt
scas
imul
fisub
(bad)
adc
dec
mov
push
gs
ror
movs
dec
cli
les
jmp
mov
mov
sbb
jno
add
test
dec
movs
(bad)
mov
fs
mov
push
push
cmp
mov
or
imul
aam
and
mov
xchg
cdq
pusha
jmp
lea
jmp
jae
sub
shl
repz
pop
mov
add
sbb
or
push
cmps
dec
sar
retf
jb
lahf
jp
test
or
call
ds
pop
shl
jg
push
loop
mov
jno
in
outs
adc
sub
sbb
sub
fstp
cdq
call
frstor
sub
loope
rcl
les
cmps
dec
rol
movs
push
loopne
add
jp
cmp
mov
ins
sub
mov
sub
push
out
or
pop
xchg
sbb
sub
mov
and
cmp
test
xor
pop
push
pop
inc
aad
fbstp
add
mov
xor
cmps
ss
loopne
stos
mov
adc
push
xor
dec
out
xchg
sbb
shl
dec
aas
and
movs
sub
leave
sub
dec
jmp
lds
push
mov
es
loopne
jo
leave
push
aas
mov
aaa
mov
rcr
dec
adc
push
dec
push
dec
stos
sbb
ja
cmps
mov
mov
mov
push
loop
jo
and
dec
cmc
or
out
ins
jne
mov
pop
dec
mov
cmps
shl
pop
push
fcmovnbe
adc
add
enter
icebp
pop
les
push
fimul
sar
(bad)
push
imul
das
aaa
push
sub
scas
test
sub
mov
fisub
call
sahf
pop
dec
sub
jo
dec
rcl
jl
shr
rol
push
mov
dec
push
mov
fstp
pusha
scas
into
ds
add
pop
inc
cdq
bound
inc
jl
dec
clc
fiadd
add
ret
clc
(bad)
mov
jmp
sub
jne
int
adc
mov
int
jmp
pusha
fidiv
aam
or
inc
sub
jp
xchg
jl
scas
rol
dec
inc
and
mov
dec
test
sub
arpl
mov
lods
out
clc
dec
xchg
fldenv
and
pushf
pop
scas
aas
cli
jmp
es
aaa
std
enter
adc
adc
mov
xchg
xchg
test
test
push
int3
sbb
jbe
or
mov
bound
mov
mov
mov
xchg
and
mov
ja
loop
into
in
jo
lods
loop
add
jg
mov
arpl
add
pusha
mov
mov
mov
mov
pop
lds
cmp
inc
mov
out
pop
ret
fild
mov
jb
push
test
cmp
dec
dec
(bad)
stc
pop
xchg
or
sahf
ds
jge
rcr
call
xor
jnp
push
xchg
push
das
xchg
aas
ja
jb
push
and
dec
xchg
cmp
adc
mov
push
scas
and
mov
add
cmp
add
jge
xchg
mov
adc
cmps
arpl
add
js
push
sbb
xchg
movs
sbb
stos
jo
jmp
inc
out
sub
xor
add
test
jl
and
and
dec
jo
in
add
push
fcmovnbe
jmp
sub
push
cmp
int3
xor
pop
push
inc
clc
pusha
push
pop
mov
stos
bound
ret
in
rol
retf
pop
clc
jnp
and
inc
arpl
mov
in
sub
retf
inc
cmp
(bad)
pusha
mov
cmp
inc
mov
xchg
not
mov
dec
(bad)
mov
rol
pop
bound
out
add
ret
or
ins
xchg
cmp
dec
call
shr
add
(bad)
mov
mov
cmps
iret
scas
xor
push
retf
xchg
fcomp
push
inc
dec
test
scas
inc
jns
pop
pushf
fimul
(bad)
retf
mov
sahf
and
dec
sar
add
xor
jno
add
js
pop
jns
stos
es
mov
aaa
inc
xchg
cmp
xor
inc
je
cld
retf
pusha
ffree
fdivr
add
sti
xor
sub
mov
add
into
sbb
fwait
out
pop
push
arpl
or
cmps
nop
push
mov
mov
popf
dec
mov
test
mov
push
xor
cwde
push
pop
mov
inc
lea
pop
xchg
daa
sti
sbb
stos
sahf
sbb
(bad)
mov
add
cmps
cmps
mov
test
or
fistp
int3
cmps
cmc
cmc
push
ins
les
(bad)
xlat
out
sub
pop
pop
jno
pop
shl
xchg
xor
pop
pop
cmp
jmp
out
jb
and
sbb
dec
imul
adc
lock
sub
rol
inc
gs
sbb
fwait
ds
jo
cs
std
and
mov
into
sub
in
xchg
paddsw
fbstp
push
jecxz
cmps
dec
das
jmp
add
cmp
and
adc
js
mov
sbb
xchg
out
adc
cmp
movs
fbld
cwde
jae
push
jno
stos
pop
push
add
mov
out
mov
xor
cmp
xlat
xor
push
popa
(bad)
xor
clc
loop
inc
sub
push
pop
push
mov
xor
mov
jno
jns
sbb
push
aas
xlat
mov
adc
jmp
sub
mov
add
test
dec
push
mov
mov
pop
sahf
add
add
pusha
call
in
or
push
sti
scas
rol
pop
pop
movs
inc
add
pop
mov
cmp
not
mul
call
adc
cmp
jno
ins
add
mov
repz
shr
adc
jne
je
fdiv
push
retf
mov
mov
xor
add
pop
(bad)
ret
ss
call
dec
or
xor
mov
scas
adc
hlt
adc
mov
cmp
test
(bad)
fiadd
shr
and
dec
mov
icebp
aaa
repnz
stos
dec
fcom
scas
fadd
adc
mov
movs
into
loope
loope
dec
imul
retf
dec
xchg
nop
std
lahf
call
leave
or
jp
popf
inc
and
sti
mov
aam
clc
mov
cmp
es
pop
js
adc
sbb
adc
loopne
push
sub
or
mov
je
shl
fs
mov
mov
es
push
arpl
pop
sbb
scas
bound
mov
mov
aaa
pop
pop
pusha
cmp
sub
xor
jg
movs
fist
int
sbb
popa
test
ds
cmp
jno
outs
ja
mov
xchg
fldenv
adc
jns
pop
add
call
leave
sub
push
cmps
(bad)
mov
and
pop
cmps
loopne
adc
jle
fs
sub
in
int3
mov
mov
lods
xchg
add
mov
outs
adc
inc
push
jp
cmps
add
pop
adc
add
fwait
cmp
xlat
and
mov
or
inc
add
addr16
cli
es
xor
int
aam
adc
and
xchg
sbb
push
icebp
jnp
shr
int3
rol
jmp
stos
push
jb
lods
test
outs
inc
pusha
jb
ins
stc
aaa
gs
xor
xchg
sub
pop
dec
and
test
loop
pop
add
sti
jge
cdq
sbb
push
sbb
mov
int3
fcomp
cwde
int3
or
mov
push
jb
das
ss
mov
pop
adc
loop
dec
adc
fisubr
addr16
fmul
pop
xor
mov
aad
jae
dec
xchg
and
cmp
mov
dec
mov
into
push
stos
lahf
popa
fdiv
jecxz
daa
retf
add
mov
push
inc
xchg
adc
shl
jp
cmp
adc
cmp
cs
xchg
and
xor
mov
iret
(bad)
aam
dec
fild
jp
inc
add
ss
cmp
push
(bad)
jge
xchg
repz
pusha
mov
(bad)
les
(bad)
in
scas
xchg
mov
mov
pop
xchg
ret
dec
outs
xchg
sbb
inc
clc
fcmovbe
inc
mov
ret
sbb
frstor
and
dec
xor
movs
mov
mov
jnp
sbb
cli
pop
shr
leave
rcr
les
nop
test
leave
mov
lods
xchg
rcl
iret
sbb
test
push
dec
mov
jbe
aam
loop
jno
(bad)
xor
push
mov
jmp
mov
hlt
pop
or
add
enter
(bad)
xor
xchg
jmp
retf
and
add
dec
or
push
ss
and
inc
fstp
repz
or
fisttp
mov
jb
(bad)
mov
(bad)
xlat
xor
add
inc
mov
dec
(bad)
inc
xor
nop
bound
xor
dec
xor
xchg
mov
cmps
ret
inc
jecxz
scas
cmp
jne
imul
adc
xor
jmp
pop
push
and
dec
xor
iret
xlat
and
or
inc
xor
loope
xchg
jb
push
inc
mov
add
push
jp
inc
sub
cmp
outs
jge
sub
sbb
and
jne
mov
mov
imul
pop
jp
out
pop
ja
jo
and
dec
jecxz
and
mov
das
pusha
push
push
mov
loopne
push
add
mov
mov
dec
test
fsubr
sbb
das
xchg
sbb
xchg
cmp
and
and
jno
outs
cmp
bound
loope
ss
and
(bad)
gs
sub
sar
rcr
arpl
retf
data16
or
jno
jle
pop
test
lods
xor
out
add
popf
popf
push
or
retf
add
pop
dec
jmp
or
xor
pop
pop
cli
pop
std
inc
gs
dec
mov
fwait
shr
out
mov
xchg
ja
and
mov
data16
jle
jbe
call
loope
jns
jae
inc
jb
xor
cmc
movs
sub
loope
sar
fbld
jmp
add
cs
jl
xchg
mov
jle
mov
jne
idiv
pusha
mov
cmp
fisub
or
fstp
xor
imul
icebp
inc
movs
pop
pop
neg
cmc
addr16
mov
not
push
out
dec
xchg
mov
and
cs
fisub
push
lods
jecxz
aad
leave
shr
sar
popaw
in
push
pop
std
ss
pop
out
frstor
add
loopne
mov
call
daa
and
mov
in
test
ja
push
mov
jae
inc
push
imul
mov
mov
jns
rcl
lock
cdq
inc
mov
and
sub
jo
stos
(bad)
xchg
pop
in
cmp
adc
ret
push
(bad)
retf
sbb
inc
xor
push
sbb
mov
mov
inc
push
dec
jne
xchg
enter
arpl
inc
cmp
xor
add
les
pop
sahf
retf
repnz
sbb
movs
jno
inc
mov
gs
je
scas
cmp
ret
cmp
sti
pop
idiv
dec
out
jae
sbb
push
adc
jno
loopne
(bad)
pop
xor
xor
or
ret
ds
ds
mov
push
adc
mov
aad
mov
xchg
sbb
or
in
xor
ror
inc
or
mov
inc
jns
ds
cmps
test
into
jns
xchg
jle
push
out
xchg
push
in
test
xchg
cwde
dec
test
mov
imul
pop
adc
out
fucom
mov
idiv
push
or
mov
(bad)
pop
jo
dec
dec
leave
adc
mov
ror
sbb
cmp
sub
jmp
mov
pop
xchg
imul
call
cs
inc
mov
int
push
adc
push
sbb
aad
mov
inc
bound
jmp
dec
loop
idiv
int
shr
scas
xchg
leave
xchg
repnz
aam
jle
dec
adc
ret
mov
out
ins
mov
ds
and
(bad)
imul
mov
mov
mov
lods
ja
in
push
adc
mov
int3
sbb
or
test
jge
in
arpl
inc
ja
(bad)
push
push
cwde
cmp
cmps
hlt
jae
fldenv
mov
mov
sbb
mov
and
ficomp
xor
xchg
jp
sar
push
fstp
xor
mov
and
cmp
or
inc
jmp
xchg
mov
ret
sub
sub
iret
sub
iret
xor
imul
inc
shl
sbb
cmps
xlat
cdq
sahf
jle
mov
push
and
in
dec
inc
pop
out
bound
push
call
mov
mov
xor
aaa
adc
cmp
aam
push
push
or
popa
push
mov
call
(bad)
mov
jmp
call
in
lods
mov
mov
jb
shr
in
sub
cmp
pop
xchg
xor
mov
test
shr
push
pop
hlt
jl
cli
loopne
sub
xchg
cdq
add
sub
cld
or
shl
mov
pop
and
iret
jp
psrlq
(bad)
hlt
mov
jecxz
sahf
pop
out
call
sbb
cmps
out
leave
jge
sub
outs
jp
aam
sbb
aam
ret
test
and
shl
pop
test
das
pop
push
je
fimul
dec
pop
push
jg
xor
pop
mov
iret
add
and
inc
pop
inc
push
push
dec
ins
inc
popf
mov
jecxz
repz
jge
mov
cmps
pop
pop
inc
pusha
fnsave
call
into
cmp
fadd
aam
pop
cld
int
dec
repz
inc
pop
je
(bad)
xor
mov
jmp
mov
jno
das
int
fmulp
and
int3
sbb
sub
inc
movs
mov
sub
and
add
stos
imul
popa
mov
cmps
imul
sub
and
jge
test
mov
inc
js
shr
pusha
adc
jns
shl
mov
mov
xchg
ror
pusha
dec
ror
in
ins
xor
lods
inc
mov
inc
add
mov
push
add
jne
push
mov
pushf
adc
mov
shl
outs
repz
scas
dec
jno
mov
in
push
cmps
adc
xor
sti
shr
out
and
or
sub
stos
mov
movs
adc
and
sbb
push
inc
mov
mov
sti
and
or
movs
fild
xor
jg
popf
or
dec
(bad)
or
popf
dec
out
or
adc
or
and
dec
and
sti
adc
xchg
mov
das
sar
dec
xor
sbb
leave
fcom
mov
scas
sbb
test
out
mov
popa
mov
cmps
mov
xchg
and
xchg
and
pop
mov
repz
add
(bad)
mov
imul
cmp
inc
dec
movs
xor
fnstenv
(bad)
cmp
sub
(bad)
(bad)
xor
retf
pop
(bad)
(bad)
pop
jmp
cmp
mov
mov
in
jne
jmp
fs
daa
mov
sbb
ja
(bad)
sbb
loope
int
retf
popa
mov
ror
push
(bad)
jmp
ja
lods
push
mov
mov
sub
push
cld
es
and
sbb
movs
inc
lahf
mov
clc
xor
nop
adc
bound
xchg
ins
inc
xlat
and
jl
adc
xor
jbe
(bad)
and
sbb
sbb
stc
test
sub
popa
mov
push
in
(bad)
dec
cdq
aaa
sub
jge
sbb
and
(bad)
mov
pushf
sub
or
call
cmp
pop
xor
ja
mov
neg
or
pop
test
jb
sbb
jmp
xchg
and
mov
lods
and
or
pop
lods
dec
(bad)
addr16
dec
jno
xchg
imul
call
test
hlt
arpl
cmc
repnz
jmp
mov
loopne
lods
and
bound
and
out
call
inc
pop
cmps
aam
(bad)
jnp
(bad)
jb
push
cmp
lahf
leave
mov
cmps
(bad)
adc
call
bswap
cmp
fidiv
sub
call
inc
hlt
test
cdq
or
add
pop
retf
aaa
(bad)
(bad)
call
jge
aad
push
stos
adc
int
scas
pop
test
xchg
arpl
push
dec
pop
outs
dec
imul
aam
(bad)
jmp
sbb
gs
xchg
iret
fidiv
cld
jmp
rcl
cmps
or
and
fs
cmps
icebp
stos
retf
mov
movs
imul
mov
xchg
dec
pop
aas
sub
mov
(bad)
cmc
leave
jno
ins
xor
movs
sub
rcr
(bad)
and
jnp
mov
movs
(bad)
shr
ins
mov
aas
jnp
out
icebp
test
jbe
or
pop
imul
das
push
xor
inc
pop
add
out
int
pop
div
adc
jbe
jae
mov
xchg
xchg
dec
aaa
retf
cmp
mov
xchg
cmp
(bad)
dec
sub
sbb
pop
in
in
mov
lds
pusha
xchg
dec
or
push
adc
mov
dec
add
shr
nop
loope
mov
jbe
mov
popf
sub
arpl
dec
xor
sbb
fwait
mov
dec
aaa
(bad)
fidiv
mov
adc
xor
jge
cmp
nop
jae
popa
xchg
cwde
xor
loop
pusha
mov
cmp
fisub
(bad)
push
popf
and
arpl
pop
xchg
cmc
mov
and
jno
mov
xlat
nop
cdq
movs
mov
pop
jbe
fist
jge
push
jno
push
xchg
and
repnz
pop
dec
dec
pop
push
and
pop
fld
pop
push
cmp
cmp
mov
call
or
xchg
sbb
mov
movs
mov
in
rcr
mov
sahf
xchg
sti
xor
mov
dec
js
retf
mov
mov
jne
repnz
cmps
pop
lods
push
inc
mov
pop
in
push
fistp
add
add
(bad)
push
sbb
jnp
retf
ins
lds
movs
push
xchg
push
mov
pop
jmp
sbb
mov
fdivrp
dec
ss
test
cli
pop
in
in
imul
jo
cmp
pop
aad
jecxz
or
gs
stc
das
dec
cld
push
and
dec
outs
push
sti
or
ins
or
jo
aad
push
les
jle
call
push
fwait
mov
shl
cmp
test
mov
dec
jmp
mul
inc
inc
pop
sti
movs
pop
movs
or
mov
das
sub
rol
mov
int3
repz
ret
add
pop
aad
fst
pop
lea
pop
jg
repz
pusha
scas
add
xchg
mov
sub
add
int
(bad)
in
int
in
retf
mov
hlt
pop
popa
loopne
jp
ss
stos
es
inc
mov
in
outs
repnz
ds
fcmovnbe
pop
pop
adc
push
push
and
in
ja
fst
xchg
outs
mov
add
inc
jecxz
or
cmc
in
pop
mov
addr16
inc
jmp
mov
jp
fdivr
ds
gs
add
lds
add
jp
(bad)
aad
(bad)
push
mov
idiv
hlt
ret
jg
fmul
cmc
pop
inc
mov
dec
stos
rcl
and
xchg
test
lock
inc
pop
popa
(bad)
popf
frstor
adc
inc
cmc
mov
loopne
lods
cmp
lods
loop
inc
push
add
int
push
push
inc
scas
or
in
repz
imul
retf
add
mov
cmps
mov
xor
push
and
jo
pushf
push
sbb
clc
mov
js
shl
jmp
sub
inc
or
rol
inc
mov
retf
mov
or
add
cmp
add
fcomp
out
arpl
imul
sbb
mov
call
ins
aaa
lahf
sbb
inc
jmp
fs
ret
cmps
(bad)
scas
push
xchg
leave
ficomp
adc
adc
mov
sub
imul
(bad)
imul
jmp
data16
std
mov
push
inc
(bad)
ds
stos
stos
test
sub
ins
pop
(bad)
sub
sbb
aaa
mov
jmp
shr
icebp
adc
sbb
xchg
(bad)
push
test
cmp
cdq
lock
add
and
jnp
movs
mov
mov
add
fdiv
sti
xchg
ins
movs
mov
das
xchg
stos
pop
popa
push
loop
add
xchg
xchg
div
mov
fcmovne
xchg
mov
outs
mov
dec
jb
and
repz
icebp
push
and
sbb
add
add
stos
stos
push
jnp
pop
in
test
enter
shr
jne
clc
jne
xchg
xor
arpl
iret
push
mov
xchg
nop
loop
pop
iret
cs
pop
popf
pushf
retf
dec
lock
mov
inc
cmps
mov
fsubr
clc
adc
hlt
pop
xor
mov
or
jle
sub
cmp
lds
jecxz
mov
out
adc
jl
sub
call
popa
xchg
sbb
add
stc
neg
pop
xor
dec
adc
shl
leave
push
mov
test
push
(bad)
sub
fdivr
push
pop
out
fdivr
adc
(bad)
sbb
xchg
jae
mov
or
repz
ret
out
push
push
add
imul
adc
loop
mov
ficom
jl
xchg
in
(bad)
aam
hlt
cs
cli
xchg
mov
(bad)
xor
and
ficom
or
mov
sub
aad
pop
push
ret
inc
mov
sub
loopne
repz
out
sbb
and
inc
mov
outs
xchg
mov
pushf
das
push
jp
inc
jp
and
push
push
push
push
outs
mov
jb
sahf
xchg
stc
pusha
clc
cdq
xor
lahf
cmc
add
and
nop
inc
push
pop
jns
repz
xchg
add
ret
out
out
repnz
fld
popa
mov
dec
and
loopne
xchg
jecxz
mov
xchg
call
mov
sub
loop
xchg
or
std
push
push
or
aaa
stc
adc
scas
int
pop
mov
in
leave
pop
push
xor
iret
popf
aas
jge
mov
int3
out
add
fmulp
jo
lods
mov
jno
arpl
imul
int3
fbstp
in
mov
adc
mov
push
xchg
sbb
ja
out
(bad)
mov
mov
es
dec
or
add
push
sbb
pop
jge
test
push
mov
xlat
(bad)
ins
inc
in
xchg
fld
shl
loope
jb
daa
mov
mov
push
pop
and
push
das
mov
push
dec
sub
sbb
jne
push
rcr
imul
mov
adc
retf
and
imul
adc
ins
int
movs
ror
xor
mov
cmp
sbb
fwait
jnp
dec
mov
inc
push
dec
sub
imul
sti
fimul
xor
and
retf
xchg
aad
mov
dec
jno
push
jns
inc
stos
pop
push
mov
jmp
imul
mov
or
pop
out
mov
jge
daa
jb
out
and
ds
jne
(bad)
pop
shr
stos
push
add
data16
dec
in
add
sbb
shr
pop
fstp
sar
mov
xlat
xor
ret
je
sub
xchg
jmp
mov
arpl
push
cmps
and
jb
xchg
mov
retf
push
mov
ins
stc
cmp
jno
les
adc
pop
sub
add
out
jl
iret
cmp
adc
cmp
loopne
inc
lods
adc
std
cmps
dec
je
adc
and
inc
in
pop
push
xlat
jge
mov
mov
popa
dec
push
out
das
(bad)
aaa
mov
inc
cwde
mov
cli
stc
mov
jo
jl
adc
dec
frstor
aaa
xor
stos
jbe
sub
inc
(bad)
jmp
fsub
int3
push
dec
clc
retf
test
xor
jb
es
sti
or
xchg
xor
xchg
enter
ffree
push
adc
int3
mov
test
dec
aas
pop
retf
(bad)
push
ret
sub
inc
push
sbb
out
inc
ja
pop
dec
jbe
cmp
les
(bad)
es
aaa
mov
sub
cmp
mov
aam
sti
fld
rcl
cdq
fs
jo
xor
lods
lods
loopne
mov
test
push
(bad)
mov
shl
or
pop
popf
cmp
dec
hlt
std
(bad)
jnp
dec
imul
les
pop
dec
sbb
(bad)
push
cld
or
pop
mov
pop
js
(bad)
dec
sti
ins
rcr
mov
fisubr
retf
inc
aam
dec
xchg
movs
dec
or
aad
and
push
xor
fidivr
lods
mov
inc
iret
cmps
pop
mov
xchg
mov
fdiv
dec
pop
xor
dec
pop
daa
jle
mov
xchg
mov
inc
push
test
inc
sbb
setno
stos
inc
pop
add
sub
lds
in
aas
js
mov
popa
sub
fisubr
fdiv
das
ret
test
mov
inc
jns
jge
lods
test
or
xor
lahf
push
push
test
movs
inc
inc
cwde
mov
mov
(bad)
retf
xor
or
or
out
jmp
mov
loop
dec
jnp
clc
lahf
xchg
int3
scas
sti
sar
push
push
mov
mov
xchg
js
into
jg
cwde
pop
and
lods
pop
xor
sbb
inc
rcl
mov
in
adc
aam
shl
xchg
fxam
mov
dec
dec
rcl
popf
(bad)
daa
addr16
jmp
xchg
cmps
add
nop
add
ret
sar
push
or
out
movs
popf
aas
xchg
cmps
loope
ror
and
sbb
sub
xor
sbb
dec
adc
stc
push
xchg
jae
mov
mov
fidivr
cmp
jmp
pop
pop
push
pop
jns
setno
cmp
and
lods
(bad)
rol
cmps
sbb
pop
mov
outs
test
test
(bad)
in
pop
cmps
test
push
push
mov
inc
int3
pop
scas
pop
xchg
(bad)
jecxz
jno
cwde
xchg
movs
enter
rcr
xor
inc
(bad)
repz
movs
hlt
dec
ficom
loop
xchg
jmp
mov
stc
ins
jne
les
rcl
sub
out
sti
ret
rcl
fstp
shl
or
push
inc
pop
loope
or
mov
cld
or
xor
inc
jae
cmp
xchg
sbb
dec
inc
push
dec
shl
pusha
jns
stos
push
movs
out
sti
test
inc
cmp
std
loope
xor
nop
or
jae
arpl
dec
popa
rcr
push
aad
je
jg
inc
idiv
xor
ret
sbb
call
jle
cld
ret
inc
fidivr
cmp
adc
mov
pop
xor
jb
call
dec
sub
or
jl
push
xchg
sub
xor
mov
loop
and
retf
arpl
fs
movs
dec
jbe
cmp
ret
adc
in
inc
nop
outs
sbb
push
jnp
repz
push
imul
clc
jb
or
adc
ds
cmp
sub
push
(bad)
int
pop
call
imul
add
imul
stc
jo
mov
and
sbb
js
xlat
xor
int3
inc
jno
pop
jne
data16
aaa
cmps
fild
aaa
xor
dec
xor
mov
push
out
inc
stos
test
mov
div
cmp
(bad)
xchg
scas
call
cmp
ror
pop
xchg
nop
dec
jmp
sub
sbb
shr
or
ror
cmp
inc
cmps
mov
arpl
add
pop
jnp
frstor
ja
dec
fs
in
mov
ret
(bad)
pop
xchg
inc
inc
imul
test
js
or
push
sar
outs
mov
pop
mov
into
adc
pop
xor
mov
nop
xor
inc
jns
push
xchg
sub
xor
jmp
push
and
(bad)
xor
sub
repz
ins
out
add
inc
aaa
test
(bad)
leave
cld
fimul
sbb
push
pushf
ins
pop
pop
jmp
push
push
inc
mov
or
dec
mov
repnz
cwde
in
daa
aaa
push
(bad)
fmul
out
xor
xor
hlt
mov
and
popf
movsx
aas
sub
cs
jns
or
jecxz
mov
sbb
and
adc
add
mov
(bad)
test
data16
(bad)
(bad)
cmp
aam
clc
das
xchg
and
fwait
cmps
arpl
push
addr16
scas
push
mov
cmc
xor
adc
dec
leave
ror
gs
icebp
xchg
inc
and
dec
aad
scas
stos
adc
in
mov
ins
sbb
lock
push
test
jg
xchg
cmp
iret
aaa
jo
(bad)
inc
fcomp
gs
and
inc
adc
loopne
aad
push
(bad)
stos
jg
sub
xor
daa
sbb
cli
out
cmp
movs
pop
pushf
sbb
lods
gs
movs
arpl
or
jns
pop
cld
sub
add
mov
sub
hlt
dec
xchg
rcr
or
imul
sub
push
imul
scas
mov
mov
jns
sub
jb
sahf
or
in
int3
mov
xchg
iret
sbb
mov
sbb
sbb
loope
mov
xchg
out
ins
ins
inc
adc
into
cld
pop
or
fmul
mov
mov
inc
in
add
imul
pmuludq
data16
jne
jecxz
ss
mov
mov
jmp
sbb
push
cmc
mov
stos
imul
in
scas
je
inc
repnz
inc
or
and
pop
imul
out
pop
xchg
mov
mov
or
outs
cmp
es
neg
mov
jns
movs
mov
loope
xchg
nop
dec
cli
xchg
movs
test
mov
ret
jb
fsub
pushf
mov
cmp
stos
jb
jnp
xchg
stos
xlat
loopne
xor
and
mov
xor
lahf
inc
adc
cmps
jae
int
sbb
mov
movs
sbb
xchg
sbb
jge
(bad)
inc
sub
inc
jae
mov
mov
jp
jmp
add
or
xchg
fldcw
dec
or
add
retf
or
bound
xchg
push
adc
xor
xchg
mov
icebp
je
test
out
sub
mov
jo
aas
sti
(bad)
and
nop
fisttp
or
sub
rcr
(bad)
es
test
test
pop
pop
pop
test
pop
in
outs
fimul
shl
(bad)
fwait
mov
adc
das
mov
inc
jnp
mov
je
jb
ja
ret
inc
loop
cmp
movs
mov
cmc
iret
int
add
int
push
push
ret
movs
dec
xchg
sub
jmp
gs
iret
xchg
mov
sbb
ins
sub
mov
hlt
popa
push
mov
cwde
cmp
sbb
mov
sub
sub
out
xor
lods
and
pop
outs
ja
outs
add
or
pop
lahf
push
mov
aas
stos
addr16
aas
out
jne
inc
aas
xor
mov
fadd
(bad)
aam
mov
repnz
pushf
xchg
pop
jns
jbe
fild
cmp
jne
aad
in
jns
(bad)
mov
mov
jmp
pop
retf
xor
sub
addr16
dec
sar
sub
dec
cmp
shl
sub
push
mov
cmp
cmp
push
(bad)
mov
cli
pop
cmp
test
fisttp
adc
sbb
test
or
add
sbb
push
(bad)
mov
lods
inc
ja
clc
pop
arpl
push
imul
sahf
pop
je
hlt
add
das
arpl
xor
jge
add
cli
dec
add
pop
mov
xchg
mov
pop
(bad)
xchg
inc
scas
push
mov
mov
xchg
scas
shr
icebp
xor
push
jb
mov
(bad)
cmc
or
lea
or
loope
sub
jne
jecxz
iret
pop
push
mov
dec
sub
ds
inc
(bad)
ss
jp
mov
movs
iret
aas
or
mov
sub
call
pop
cdq
xchg
cwde
push
cmc
fistp
sub
sub
dec
jno
movs
and
loope
in
mov
mov
sahf
into
cmp
sar
loopne
in
xchg
outs
xor
mov
add
fbstp
arpl
popf
fimul
and
bound
fwait
movzx
inc
sbb
inc
hlt
inc
add
add
std
nop
out
mov
pop
push
adc
xchg
adc
adc
jo
pop
enter
jmp
mov
retf
(bad)
xchg
push
cli
pop
lds
adc
std
rcr
imul
add
mov
or
mov
popf
dec
sti
push
xchg
lods
dec
loopne
fidivr
mov
sbb
pop
dec
mov
aam
push
push
jecxz
test
mov
test
lods
pusha
dec
xlat
xchg
cmp
push
sbb
dec
mov
push
out
lea
mov
and
pop
push
jmp
cmp
mov
sbb
in
jl
xor
push
fwait
ja
mov
xchg
dec
mov
ins
ror
mov
fisubr
sub
pop
dec
mov
xor
jg
or
mov
retf
dec
jmp
inc
lds
jp
movs
out
and
(bad)
retf
popa
sar
daa
loopne
and
adc
arpl
xchg
mul
cwde
stos
add
in
in
mov
adc
cmp
dec
push
inc
xlat
retf
xor
or
inc
test
cmp
inc
out
jge
std
movs
in
sub
lock
xor
pop
stos
pusha
jle
cwde
fbld
adc
fistp
sti
sub
pop
xchg
sub
jo
dec
mov
cmp
ret
sahf
les
xor
test
xor
xor
ins
das
add
mov
mov
fist
dec
repnz
movs
sbb
lea
push
leave
iret
cmp
ins
mov
push
loop
push
popf
sbb
mov
daa
or
lods
mov
mov
icebp
mov
and
sbb
cmp
retf
and
outs
cdq
xor
leave
(bad)
(bad)
xor
mov
nop
rol
xor
rcr
das
or
dec
das
and
cmp
in
movs
or
push
in
popfw
(bad)
in
sub
sub
icebp
pusha
(bad)
adc
adc
pop
mov
inc
mov
movs
or
push
jmp
sbb
mov
xchg
scas
movs
repz
(bad)
leave
pop
stos
xor
ja
push
xchg
in
adc
ins
ss
add
js
retf
dec
inc
pop
or
test
mov
push
inc
imul
loopne
int3
cdq
push
ja
ja
(bad)
pop
cli
jno
ficomp
cmp
pop
pusha
pop
jnp
pcmpgtw
jl
mov
(bad)
in
lock
outs
xchg
xor
cmp
jae
pop
fnsave
lock
movs
cs
lds
retf
pop
xchg
icebp
mov
rcr
sbb
jecxz
mov
mov
daa
cmp
mov
loop
addr16
or
add
sbb
sub
leave
nop
mov
popf
pushf
in
and
outs
std
lea
fldcw
les
(bad)
shr
and
data16
mov
xor
loope
sbb
jb
jbe
lods
sub
sbb
xchg
jne
xor
mov
test
push
push
sti
dec
loope
fcmovu
daa
mov
cmc
nop
fldenv
repnz
pop
pushf
push
retf
inc
xchg
or
add
rcl
xlat
inc
mov
push
cmc
ret
ret
mov
push
jmp
xor
cmps
push
jbe
jg
or
inc
ins
fs
cdq
push
mov
std
jmp
fst
mov
fdivr
dec
and
mov
movs
cs
(bad)
js
aaa
or
pop
push
and
movntps
mov
mov
jg
mov
ss
enter
mov
add
aas
aam
cmp
or
cmp
sbb
pop
or
lea
xor
call
icebp
push
and
xchg
adc
loop
mov
and
push
dec
inc
jne
dec
dec
xor
mov
mov
jnp
sub
jb
pop
mov
jp
jmp
mov
adc
jmp
mov
es
lahf
jnp
and
adc
xor
push
pop
test
(bad)
mov
mov
mov
int3
and
jnp
sbb
sub
mov
cmp
inc
aaa
dec
mov
cli
xchg
sar
sub
mov
pop
hlt
pop
ftst
sahf
scas
ins
fcmovu
je
ret
cmp
add
(bad)
out
mov
or
dec
add
call
add
ins
ins
dec
mov
push
je
add
out
lock
(bad)
lods
stc
gs
jno
pop
push
cmps
lods
or
xor
mov
popf
daa
sbb
mov
addr16
test
mov
inc
daa
fdivr
adc
repnz
mov
sti
mov
sbb
imul
add
les
adc
pop
mov
setns
sub
dec
pushf
test
call
mov
xchg
leave
add
rcl
aas
jo
in
imul
sbb
rcl
and
jbe
aad
fidivr
aas
xor
push
cld
or
xor
mov
mov
mov
pop
repz
rol
mov
retf
sub
xor
jecxz
xchg
jmp
sbb
ret
retf
leave
cmp
addr16
sub
adc
sbb
fstp
test
movs
or
add
push
cmp
sub
outs
pop
ins
std
movs
not
push
xor
out
xchg
rcr
adc
and
div
xchg
mov
(bad)
arpl
mov
cld
cdq
mov
mov
jp
clc
xchg
loopne
mov
mov
hlt
mov
in
sahf
leave
mov
dec
div
repz
cmp
pop
popa
mov
pop
xlat
imul
add
psubb
jp
xchg
or
(bad)
aad
hlt
inc
adc
test
mov
enter
int3
into
push
loop
add
push
addr16
call
stc
sbb
xor
mov
(bad)
ret
ins
jnp
jmp
nop
and
test
retf
ret
inc
cs
clc
jg
and
push
ret
xor
dec
jge
mov
mov
or
pop
push
add
jmp
xchg
sub
xchg
stos
stos
inc
push
aaa
sub
push
adc
mov
mov
jmp
and
lods
inc
or
fadd
pop
or
mov
xor
dec
pop
jl
or
fwait
mov
lods
shr
icebp
jbe
mov
xchg
inc
sbb
push
shl
(bad)
cmp
jne
push
mov
push
dec
adc
or
xchg
daa
clc
je
mov
mov
jbe
add
retf
rol
scas
addr16
mov
das
out
clc
in
jp
call
stc
push
pop
mov
(bad)
sbb
retf
mov
jne
sub
mov
pop
pop
or
inc
mov
push
adc
jmp
std
dec
and
pushf
imul
aam
cli
mov
xchg
mov
mov
or
jle
ss
adc
mov
lods
sbb
add
mov
jns
int3
push
inc
aam
pop
adc
ret
clc
mov
pop
cmp
xchg
retf
push
leave
aaa
mov
cmps
fisub
and
xchg
out
or
dec
icebp
mov
in
in
pop
fwait
rcl
dec
jmp
imul
fnstenv
jno
xor
mov
test
js
or
(bad)
jg
pusha
add
pop
cdq
addr16
stos
loopne
mov
fnsave
aas
dec
adc
and
push
xor
cmp
pop
sahf
or
jmp
sti
ss
jecxz
cmc
jne
add
and
xlat
call
cld
imul
pop
sahf
xor
loop
jmp
cmp
or
rol
and
div
loope
xchg
mov
pop
aad
fsubr
fld
es
lods
je
das
ds
inc
mov
mov
call
leave
mov
jmp
adc
je
sti
in
into
fldenv
mov
jp
push
inc
push
in
mov
and
push
lock
mov
xlat
lock
pop
sahf
cmc
dec
mov
inc
inc
mov
retf
scas
cmc
and
inc
sahf
jg
xchg
dec
fwait
sbb
ret
stos
push
sub
mov
sbb
movs
xchg
int3
and
stos
daa
sub
xchg
xchg
inc
adc
fild
in
inc
xor
jp
jns
and
aam
fsubr
into
dec
xchg
or
or
and
push
scas
stos
and
or
xchg
jp
xchg
sti
pop
(bad)
(bad)
stc
fwait
icebp
ret
mov
movs
cld
pop
lea
mov
push
mov
js
aas
in
in
or
ja
scas
stos
dec
stos
loopne
xchg
mov
dec
jecxz
rol
jae
call
ret
push
add
push
test
or
inc
jmp
xor
mov
cmps
and
repz
push
cmps
cmp
test
mov
outs
adc
mov
imul
adc
cmp
pop
pop
add
fsubr
and
loopne
jmp
or
inc
fcmovbe
mov
dec
(bad)
adc
add
inc
or
enter
jl
jg
or
in
inc
jbe
arpl
loopne
out
cmps
sub
ds
ret
stos
dec
lds
jnp
rol
call
aaa
jno
xchg
xchg
dec
sbb
test
push
fild
jg
mov
std
and
mov
rol
dec
adc
push
add
xchg
popa
inc
jo
jle
jmp
outs
into
ins
sub
aaa
push
sti
and
cmp
add
les
sbb
ret
and
xchg
mov
inc
std
adc
shr
mov
(bad)
cmp
jne
or
sbb
jg
out
arpl
aad
add
outs
lods
in
or
cdq
outs
mov
lods
xor
xor
cmps
retf
lds
add
je
inc
out
mov
push
mov
test
or
fisubr
(bad)
cmp
jg
or
int
test
movs
(bad)
inc
jmp
jle
test
icebp
cli
hlt
out
leave
cmps
mov
in
out
les
and
gs
jae
test
fdiv
fnsave
enter
xchg
add
lods
dec
es
in
stos
jg
ins
fiadd
in
test
sub
fxam
mov
imul
and
test
je
bound
inc
inc
sub
pop
xor
pop
addr16
push
stos
das
push
stos
test
pop
iret
push
ds
(bad)
add
mov
xor
or
and
(bad)
cdq
out
xor
and
(bad)
mov
ret
sbb
inc
or
aam
fucomp
mov
fs
mov
push
std
popa
stos
addr16
std
push
call
push
test
and
scas
fwait
adc
fmul
jno
mov
push
int3
push
js
inc
adc
add
test
adc
loopne
dec
bswap
adc
test
push
scas
mov
mov
jmp
or
pop
jmp
sub
dec
push
pop
adc
mov
xor
sub
add
int
mov
test
pop
mov
sub
add
shr
in
or
sbb
icebp
movs
test
inc
lahf
out
das
add
add
pusha
icebp
add
ja
mov
inc
or
push
in
sbb
retf
push
mov
mov
mov
cli
adc
inc
mov
out
in
pop
je
mov
movs
pushf
hlt
pop
out
movs
add
nop
loope
(bad)
movs
or
add
cmps
xadd
cdq
mov
in
imul
cmps
div
mov
rol
or
pop
push
jns
cmp
enter
mov
pop
and
fisttp
jl
cmp
test
and
pop
pop
xor
ret
scas
dec
sar
loopne
iret
pop
adc
adc
add
xlat
call
pop
hlt
xchg
jge
push
mov
loopne
add
mov
sub
out
shr
clc
jge
cmps
adc
rep
or
cs
jns
imul
addr16
into
loopne
add
and
pop
jno
or
mov
push
mov
xchg
movs
or
popf
push
lock
lea
xchg
mul
sub
mov
mov
in
cmp
lock
push
fwait
ror
jbe
stc
xor
sub
stos
adc
xor
jge
sbb
jmp
(bad)
in
int3
cmc
fwait
neg
jmp
cmp
bound
sti
or
(bad)
pop
mov
retf
retf
cdq
ret
pop
inc
adc
pusha
add
mov
mov
pop
xchg
stos
push
fbstp
ins
push
movs
mov
cmp
pop
xor
push
lea
dec
inc
mov
mov
fs
loopne
pop
test
pop
jg
pop
stos
mov
loop
jb
xchg
inc
repz
inc
pushf
pop
repz
jp
cwde
rol
ins
aam
imul
or
in
mov
inc
pop
push
idiv
jbe
mov
dec
aam
sbb
xchg
mov
aaa
push
stos
int3
sbb
mov
fimul
ds
xchg
adc
mov
repz
or
and
out
popa
mov
fistp
push
jg
mov
sbb
fldcw
or
xchg
jle
dec
aam
cmp
dec
(bad)
cli
dec
popf
mov
fcomp
divps
test
arpl
pop
and
xchg
push
dec
sub
push
rol
push
in
dec
jmp
in
mov
pop
imul
adc
sbb
xchg
cmps
nop
sub
push
push
lahf
test
sub
leave
out
mov
popa
mov
lods
xor
fidiv
ficomp
sub
and
inc
dec
jnp
bound
aam
inc
jns
mov
cwde
pushf
pop
jmp
stos
clc
push
faddp
sbb
mov
jmp
pop
sbb
jbe
lds
jle
aam
mov
push
leave
call
mov
inc
lods
outs
mov
pop
pop
iret
push
(bad)
jl
jl
or
push
push
and
out
and
aas
pop
fidivr
in
cmp
sub
sub
sbb
push
cmc
aaa
les
cmp
mov
ja
loopne
add
sbb
cwde
stos
xlat
mov
and
cmp
loop
adc
mov
pushf
cs
dec
imul
into
scas
retf
mov
sub
sbb
loopne
sub
xchg
pop
xchg
mov
loope
jns
jmp
fdiv
test
pop
enter
xor
lods
xchg
call
jg
cmps
cmps
test
leave
add
mov
js
out
pop
(bad)
bnd
or
sbb
sahf
sbb
leave
shl
outs
call
xchg
pop
stos
dec
test
dec
enter
push
and
push
mov
mov
cmp
ror
inc
jecxz
xor
jne
mov
sub
ins
fstp
idiv
jno
stos
out
sub
in
nop
jle
(bad)
jmp
sub
dec
xchg
pop
mov
loop
mov
or
fidivr
scas
iret
icebp
and
call
int
inc
jne
push
pop
stos
mov
mov
push
fdivr
into
jnp
outs
sbb
test
mov
pop
inc
std
movs
jge
jno
inc
and
imul
test
sub
es
dec
push
xchg
enter
repnz
rcr
mov
les
jmp
mov
xor
in
sub
push
mov
cdq
sbb
test
jecxz
retf
(bad)
shl
sub
add
mov
pop
in
add
rcl
mov
std
push
in
ss
mov
push
and
sub
mov
push
adc
sbb
jb
jge
hlt
mov
inc
fcmovbe
in
mov
add
mov
mov
ret
mov
sbb
cmp
mov
xchg
fisubr
xchg
fimul
xchg
or
leave
imul
into
dec
pop
lods
dec
lds
inc
pop
push
jecxz
push
test
mov
inc
ret
pushf
out
aam
pop
daa
imul
inc
adc
xchg
daa
sbb
fisttp
ror
pusha
cmps
fsubr
leave
repz
dec
ja
ins
call
sub
fwait
iret
dec
rcr
push
(bad)
xor
xchg
mov
push
test
mov
loopne
test
rol
and
in
das
jp
sar
repnz
cs
es
mov
pop
pop
fwait
pop
mov
out
add
xchg
das
push
and
mov
movs
jecxz
mov
mov
(bad)
lods
out
mov
dec
add
dec
enter
xchg
je
push
lock
xchg
movs
pop
frstor
call
add
mov
out
xor
push
retf
xchg
mov
(bad)
stos
int3
or
inc
push
adc
add
adc
loope
or
mov
fs
inc
add
add
add
jg
imul
out
(bad)
ins
enter
ret
mov
cmps
scas
inc
mov
or
lods
(bad)
lahf
mov
cld
and
mov
repnz
or
in
ror
(bad)
mov
fwait
add
add
push
dec
out
or
mov
test
outs
cs
repnz
jmp
popa
mov
pop
(bad)
lods
add
mov
mov
add
and
ja
cmp
add
(bad)
dec
pop
pop
cmp
(bad)
dec
pusha
jmp
lods
gs
mov
ror
xchg
adc
xor
enter
stos
dec
mov
xchg
sub
(bad)
es
cmp
fwait
push
dec
lds
xor
stc
and
mov
aaa
jg
mov
aad
loopne
and
dec
dec
sbb
push
jmp
inc
in
enter
jbe
dec
out
cmps
push
push
mov
daa
cmp
scas
rol
es
lods
jo
sbb
ret
sar
aam
clc
sub
dec
out
lea
shl
test
push
nop
pop
aas
icebp
movs
add
and
int
or
adc
retf
adc
je
in
dec
jno
sbb
mov
out
outs
test
cwde
pop
iret
test
push
add
cli
cmp
imul
popf
add
sbb
adc
dec
push
idiv
das
push
push
scas
or
int
cmc
fwait
ja
or
add
cmc
dec
lea
add
xor
sbb
aas
mov
push
and
sub
xchg
aam
rcr
xchg
mov
dec
shr
cdq
dec
shl
sbb
(bad)
and
dec
dec
pop
push
repz
jnp
push
push
fstp
push
push
aad
xchg
xor
das
mov
jne
test
sub
or
jecxz
loope
aaa
inc
add
sub
ins
xor
xor
arpl
adc
aad
test
aaa
pop
xor
mov
add
xchg
push
outs
pop
cmps
dec
dec
sbb
ss
fdiv
push
xor
inc
add
stos
lods
xor
or
dec
fcom
fldln2
xor
call
mov
jbe
(bad)
add
xchg
dec
in
popa
test
repz
cs
retf
jo
int
add
stos
addr16
cmc
add
gs
outs
xor
test
jmp
mov
inc
xor
fisubr
and
outs
inc
xor
scas
(bad)
frstor
ret
push
aaa
xchg
sub
fnstenv
jo
pop
es
(bad)
xor
stos
in
cmp
fsub
and
push
inc
cmp
jns
dec
sbb
sahf
test
inc
jp
xor
icebp
adc
or
or
arpl
in
mov
cmp
aam
adc
jecxz
mov
jle
test
adc
fsub
sbb
sbb
inc
xor
hlt
adc
imul
add
dec
and
cmp
sub
shl
dec
adc
jb
test
outs
mov
sub
sub
xor
sbb
rol
test
adc
jb
inc
js
nop
scas
popa
jb
push
pusha
lods
test
mov
cs
push
ins
neg
dec
in
scas
fs
mov
mov
(bad)
push
sahf
mov
je
mov
neg
cld
cmp
push
dec
dec
add
cmp
ins
fadd
xchg
push
(bad)
push
comiss
nop
mov
test
jmp
in
stos
lods
and
jp
imul
cmp
mov
mov
xchg
push
push
sbb
shl
pop
fs
cmp
daa
sub
or
jecxz
add
rol
test
iret
out
pop
and
xor
cs
pusha
ja
xor
pushf
xchg
cmp
mov
paddq
int
pop
mov
into
mov
or
pop
in
xlat
dec
add
or
mov
pop
jp
shl
(bad)
fst
add
and
mov
jo
mov
clc
and
cli
scas
in
enter
mov
retf
inc
mov
adc
es
(bad)
in
dec
pop
(bad)
in
push
jne
jle
ins
outs
xchg
add
(bad)
fbld
cmp
mov
pop
mov
mov
mov
pop
loop
adc
xchg
add
call
jo
adc
paddsw
iret
xchg
out
jb
xchg
adc
test
ss
or
add
sbb
test
aad
test
adc
mov
cmp
lds
out
out
test
push
ins
mov
repz
sub
imul
inc
mov
pop
leave
into
pop
cmp
mov
call
stc
sub
into
xor
xchg
or
movs
mov
mov
sbb
adc
push
and
movs
fstp
push
and
cs
and
or
mov
sbb
sbb
ret
repz
mul
push
xor
dec
sar
sub
jg
clc
fstp
inc
repz
sbb
xor
repnz
add
jne
fst
jbe
das
xchg
add
inc
aaa
mov
push
pop
pop
das
pop
jl
dec
daa
push
mov
dec
ja
repnz
(bad)
cmp
and
shl
cmp
xor
shl
and
gs
inc
mov
fidivr
push
sbb
test
dec
pop
aam
ins
int3
dec
dec
mov
push
pusha
popf
fistp
xor
and
nop
sbb
mov
das
sub
loope
lahf
or
pop
xlat
jnp
mov
leave
ss
call
lds
test
mov
jp
in
test
sub
push
inc
xchg
xchg
sub
cmp
loopne
mov
sub
mov
or
cli
jge
xor
dec
add
inc
test
add
mov
sbb
mov
push
push
inc
mov
lock
inc
xchg
fcmovne
pop
pushf
adc
pop
les
xor
ucomiss
popf
mov
in
xor
mov
loope
icebp
in
stos
stc
add
int3
inc
cwde
sbb
lods
ds
jmp
arpl
outs
xor
pop
jl
iret
mov
dec
pushf
(bad)
mov
aas
xchg
inc
mov
mov
pop
rcl
outs
es
pop
mov
test
add
push
xchg
sbb
rcl
int3
push
scas
js
ja
push
pop
fld
jmp
out
pop
sub
fild
or
push
shr
push
les
sar
hlt
jnp
xchg
xchg
leave
pop
out
or
cwde
pushf
stos
pop
cdq
xor
arpl
pushf
push
push
inc
jmp
push
or
push
cmps
pop
in
push
jl
xchg
dec
(bad)
pop
frstor
repz
adc
mov
test
jmp
hlt
fisubr
(bad)
outs
dec
mov
gs
inc
stos
push
imul
xor
nop
jg
jmp
push
jl
aam
mov
ret
fld
outs
fidivr
cs
cmpxchg
mov
int3
add
mov
aas
mov
nop
adc
fwait
fwait
mov
in
cli
lahf
(bad)
retf
mov
dec
and
mov
das
inc
das
mov
retf
outs
rcl
int3
pop
retf
jnp
inc
sahf
jmp
inc
sub
jno
sub
ins
adc
pop
lea
inc
movs
mov
aad
rcr
pushf
pop
fdivr
sbb
inc
aam
or
(bad)
(bad)
jns
adc
lock
or
push
mov
adc
outs
scas
enter
cmp
rcr
dec
mov
rol
push
sbb
pavgb
leave
jmp
imul
les
cdq
or
fdivr
cmp
into
shl
inc
and
lahf
sub
shl
or
xlat
push
test
or
xor
mov
out
mov
push
lods
ins
(bad)
fsubr
sub
jb
cli
retf
fnstsw
(bad)
fisub
mov
mov
xchg
pop
jmp
push
mov
(bad)
scas
nop
leave
stc
dec
scas
dec
and
int3
clc
pop
jnp
mov
or
call
or
mov
mov
jae
ret
or
ins
or
or
cmps
mov
call
push
jnp
mov
xor
loop
jmp
xchg
rcl
scas
and
push
lahf
fadd
jecxz
mov
and
ins
pop
inc
cmc
xlat
loope
add
repz
out
mov
dec
xor
mov
fadd
sub
fsub
les
stos
mov
fs
mov
pop
fwait
sub
inc
jge
dec
jp
mov
lahf
imul
sub
and
mov
inc
sub
mov
pop
in
push
mov
test
mov
push
cs
fwait
int
xchg
mov
add
jecxz
push
aaa
jmp
pop
fnsave
jecxz
push
(bad)
xor
mov
inc
xlat
pusha
fadd
or
mov
and
adc
cmp
lahf
push
sbb
pop
shr
shl
dec
rol
push
push
xchg
(bad)
pop
mov
mov
lds
fwait
jns
aam
iret
lock
cwde
pop
test
sub
mov
jne
fxsave
sub
out
mov
sbb
sbb
sub
movs
push
mov
aad
movs
xchg
push
add
xchg
jecxz
icebp
into
mov
test
sbb
pusha
es
es
rcr
mov
xor
cmp
cwde
fstp
scas
dec
lods
icebp
ret
out
dec
lods
mov
mov
or
retf
(bad)
stos
xor
cmp
stos
add
sbb
repz
pop
jmp
in
add
pop
jo
sar
retf
dec
in
mov
rcl
icebp
inc
pop
inc
inc
sub
fs
adc
jg
data16
xor
fstp
adc
mov
stos
push
scas
xchg
mov
cmps
mov
inc
into
adc
sar
sbb
add
mov
aad
jns
out
sub
xor
ins
imul
and
adc
daa
xor
je
cld
fs
or
jmp
xchg
or
rol
mov
fdiv
hlt
repz
mov
push
es
mov
pop
enter
out
adc
inc
push
xor
cmc
jae
add
add
cmps
test
sahf
pop
aaa
movs
cs
div
cmp
sub
cmps
sub
sub
and
dec
test
fs
fisttp
icebp
pop
loop
inc
retf
lahf
test
test
jmp
inc
adc
call
mov
push
push
add
fld
push
inc
std
rcr
fild
sar
or
ja
jo
xlat
jg
fcomp
ffree
jno
mov
dec
popa
icebp
adc
repz
mov
punpckhwd
pusha
int3
push
imul
leave
or
sbb
clc
sub
mov
gs
push
ins
inc
stc
sbb
xchg
pop
neg
leave
hlt
xchg
aas
jae
(bad)
in
dec
xchg
add
popf
pop
hlt
cmp
xor
jo
ja
pushf
cmp
cmp
push
cmc
rcr
test
jne
cs
mov
cmp
mov
out
stos
cmc
sub
daa
movs
mov
jecxz
jne
sub
add
mov
stos
dec
int3
sub
scas
cdq
cmp
lods
and
mov
push
jo
xchg
scas
out
clc
sbb
sub
addr16
pop
pop
jne
lahf
mov
aad
es
add
mov
and
xchg
mov
pop
pop
jno
jg
xchg
add
fdivr
push
daa
jmp
adc
in
jno
xchg
int3
inc
cmp
push
sub
test
push
pop
bound
mov
push
add
dec
lahf
jmp
xchg
dec
add
jp
rcr
and
ror
cwde
jae
cld
jmp
sub
outs
mov
ds
jae
and
adc
cwde
push
test
jp
retf
add
lea
mov
mov
adc
ficom
dec
cmp
lea
mov
ror
bndldx
lahf
pop
ins
add
cmps
pop
in
jmp
ror
push
jmp
inc
adc
push
xor
jp
pop
mov
xlat
jmp
ret
pop
das
retf
pop
into
(bad)
add
ins
ss
or
xor
cmp
push
mov
loopne
adc
js
rep
fucomip
mov
fild
push
inc
pop
ins
pop
fst
bound
sub
push
rcr
and
fidivr
and
push
push
adc
shr
add
jl
xlat
daa
clc
int3
pop
mov
scas
bound
das
cmp
add
shl
into
lods
cs
sti
nop
mov
(bad)
sbb
push
inc
ds
cmp
sbb
jbe
and
data16
xchg
lock
pop
jge
daa
pop
pop
sti
jl
bound
cmp
cwde
push
push
rcl
mov
mov
cmp
repz
push
lahf
dec
and
aaa
sbb
pop
xchg
sbb
ss
ins
aam
ins
pop
push
popf
sub
mov
das
add
jg
stos
mov
(bad)
dec
mov
adc
push
jns
rcl
repz
ficom
inc
scas
push
dec
dec
in
mov
jo
sub
jbe
fidiv
and
push
test
imul
ss
xor
out
mov
mov
int3
or
or
fdiv
in
fcom
call
outs
cmp
inc
and
and
xchg
mov
inc
and
outs
jnp
lds
hlt
aaa
inc
push
enter
call
stos
sub
mov
aam
rcr
pop
pop
push
lahf
pop
pop
repz
dec
loope
adc
iret
mov
mov
fisttp
fisttp
mov
dec
(bad)
fidiv
dec
test
mov
jo
jae
int
push
sub
jg
lahf
(bad)
inc
mov
pop
xchg
jmp
loopne
cdq
mov
push
fsubr
test
lea
std
jne
push
ret
xchg
in
mov
fidivr
movs
or
stc
lods
mov
(bad)
enter
inc
pop
aad
xchg
lods
clc
aam
push
fcmovnu
xchg
or
call
jnp
pop
imul
(bad)
in
pop
cmps
adc
fistp
cmp
pop
xchg
push
jle
sbb
lods
push
aaa
scas
add
inc
test
mov
fcom
cmps
cmp
push
mov
lods
call
cs
dec
xchg
dec
inc
xchg
pushf
out
fstp
dec
fsqrt
pop
retf
xlat
test
jecxz
or
(bad)
cmc
shl
outs
sbb
imul
pop
or
in
adc
jmp
ds
xchg
xchg
dec
cmp
sti
in
fld
out
nop
cmp
pushf
shr
std
popa
jo
arpl
bound
aam
jmp
mov
pop
or
push
jp
xchg
inc
jl
xchg
or
xchg
push
xchg
or
xor
repnz
outs
mov
out
leave
add
leave
dec
push
cld
sub
test
pop
data16
das
pusha
sti
jge
sbb
lds
jl
pop
xchg
daa
in
aad
jge
sub
sub
je
enter
mov
leave
xor
add
push
pop
inc
xchg
mov
push
aad
scas
pusha
jecxz
jle
pop
scas
fld
into
test
push
lods
dec
xor
add
mov
dec
xchg
in
push
leave
sub
fsincos
xor
aam
jnp
out
enter
push
sbb
jbe
loopne
std
jno
repnz
popf
pop
js
ds
add
lock
stc
and
nop
les
or
dec
repz
js
pop
stc
jmp
pop
fwait
shl
adc
mov
(bad)
fcomp
repnz
cld
iret
shl
lock
cwde
clc
mov
retf
cli
clc
add
cmp
repnz
pusha
push
mov
(bad)
mov
or
adc
ds
out
and
jmp
fs
xchg
pop
imul
sbb
add
add
test
inc
add
push
mov
fwait
xor
jae
data16
pop
or
in
mov
bound
or
mov
mov
pusha
fcmove
out
mov
cs
jno
inc
xchg
push
push
int3
mov
push
(bad)
jne
icebp
xchg
call
sti
fwait
sub
outs
pop
mov
out
push
adc
movs
sub
aad
int3
xchg
inc
cld
aad
xchg
and
adc
sub
retf
mov
and
xor
test
push
mov
out
shr
inc
cmp
stc
ds
push
in
push
repnz
ficomp
jne
lods
(bad)
sub
movnti
jge
fnsave
popf
xchg
sbb
mov
mov
es
sub
push
push
and
(bad)
push
dec
jbe
adc
jp
mov
jbe
pop
outs
cmp
push
scas
push
jne
(bad)
int3
push
add
dec
push
daa
mov
sti
mov
jmp
or
cmp
lods
lock
dec
xor
mov
inc
fdiv
(bad)
push
mov
add
jle
int
loope
je
push
xchg
das
dec
jge
pusha
shl
sahf
jno
jb
int
(bad)
(bad)
icebp
xchg
hlt
arpl
push
or
jmp
cmp
enter
rcl
mov
jmp
xor
enter
call
mov
mov
add
cmp
dec
sbb
mov
into
sbb
push
call
inc
aas
nop
push
in
jle
mov
hlt
aaa
aad
ret
pushf
push
(bad)
jp
mov
test
outs
mov
leave
js
jg
les
and
mov
push
push
mov
mov
shl
inc
jg
jo
sti
sub
ja
mov
repz
ror
cmp
dec
mov
dec
mov
retf
push
mov
pop
mov
stos
dec
test
ror
inc
sub
xchg
int
cmp
mov
jo
shl
aam
jns
push
imul
cmps
pop
in
sti
and
fcmovnbe
mov
or
in
add
dec
pop
(bad)
or
or
lock
xchg
xchg
daa
fdivr
pop
loop
mov
(bad)
shr
cs
fnstenv
sub
retf
jl
sti
scas
leave
lods
pop
scas
pop
mov
xor
in
xchg
and
inc
and
sub
jg
fs
mov
mul
jnp
inc
lahf
mov
sar
fisttp
adc
jmp
push
mov
bound
out
xor
fild
out
mov
sub
fisttp
idiv
and
push
sbb
ss
mov
and
xchg
mov
sbb
ss
jo
adc
outs
push
inc
mov
pop
fcomp
cmp
fdivr
out
cs
push
fcomp
frstor
push
popa
xchg
ins
fcom
and
call
jmp
(bad)
fadd
jg
aam
call
test
repnz
call
daa
dec
test
fcomp
sbb
push
loop
shr
and
hlt
xor
aas
xor
hlt
push
cld
mov
loop
fucomp
call
cs
rcl
icebp
adc
xor
shr
test
(bad)
push
mov
mov
imul
jo
mov
movs
call
ror
nop
lods
loop
lock
mov
sti
daa
sti
sub
sbb
inc
scas
cmc
cwde
and
xor
jb
fwait
sbb
sub
sbb
cmp
pop
jbe
sub
pop
gs
adc
inc
jecxz
xchg
or
jae
(bad)
neg
cwde
xor
or
dec
in
sbb
test
popa
iret
sbb
rcr
ret
leave
mov
gs
hlt
xchg
dec
add
call
and
shl
lea
jmp
push
test
pop
outs
jns
clc
jns
aaa
dec
jns
add
arpl
dec
pop
fist
shl
sub
jg
ja
(bad)
fimul
cmps
loop
(bad)
in
jg
es
je
mov
mov
cmp
or
and
lods
and
sub
sub
cmp
mov
lahf
je
retf
push
inc
xchg
xlat
push
mov
inc
cli
lea
or
and
sbb
popa
int
sbb
pop
ret
pushf
pop
pop
int3
and
and
xchg
pop
mov
loope
lock
cmp
jp
xor
push
cmps
dec
into
or
cmp
adc
cmps
(bad)
mov
inc
mulps
fistp
xchg
aad
movs
in
xchg
mov
mov
push
xchg
into
jg
rcl
stc
mov
and
ror
jb
inc
jle
out
sti
ss
out
xlat
gs
int3
ret
inc
sar
mov
test
mov
pop
mov
aad
test
in
or
sub
jbe
pop
bswap
addr16
or
test
xor
push
(bad)
or
outs
cmp
xchg
add
mov
dec
gs
fbld
mov
dec
xor
js
mov
je
(bad)
mov
mov
mov
iret
xchg
cmp
xor
or
jge
pop
call
in
xchg
shl
sub
test
xchg
sbb
xchg
movs
jns
dec
jp
mov
and
add
jle
cmp
sbb
out
xchg
les
cld
mov
int3
cmps
push
fincstp
pop
in
cmp
sti
dec
pop
mov
loope
sahf
je
scas
cmps
clc
jbe
mov
in
dec
cmp
adc
jmp
cwde
sbb
lock
jmp
pop
adc
dec
sbb
mov
mov
rcr
and
pop
and
std
in
jae
or
cmp
loop
fwait
ins
cmps
les
gs
or
mov
xchg
sahf
movs
mov
jp
cmps
imul
jecxz
mov
fisub
lds
aad
cwde
cmp
push
jne
sub
mov
test
mov
movs
xchg
mul
leave
ja
fstp
movs
imul
dec
and
(bad)
xor
pop
push
xor
jle
mov
xor
es
cmp
loopne
mov
in
cmp
sub
mov
jle
stos
jo
jmp
jge
jl
cwde
xor
loop
jb
rcr
retf
cmps
mov
cdq
inc
xchg
xor
jg
or
jp
in
sub
(bad)
sub
cmp
daa
mov
dec
movs
out
iret
push
cmp
xor
lods
mov
nop
jns
add
inc
out
sahf
xor
fs
pushf
mov
push
movs
cmp
mov
mov
fist
sbb
fs
xchg
and
add
push
popa
mov
pop
or
jl
in
adc
jp
les
pushf
ficom
pop
jnp
push
outs
mov
xor
icebp
dec
lea
fmul
clc
lods
mov
cld
cdq
xlat
clts
hlt
inc
jb
pop
in
fimul
sub
and
nop
ds
lods
jmp
mov
pusha
fldcw
jg
dec
sbb
mov
fld
jmp
and
aas
push
push
pop
sub
or
add
mov
mov
push
in
or
out
(bad)
dec
jo
movs
cmp
es
fs
cld
xchg
xchg
lods
inc
push
(bad)
cli
jge
cli
clc
add
jmp
jmp
xor
iret
mov
std
sbb
outs
ficom
(bad)
cmp
aaa
inc
inc
out
cmp
adc
dec
push
jne
cmps
push
pop
xor
mov
inc
and
lahf
cmp
(bad)
fldcw
or
push
fsubr
retf
into
sbb
sbb
std
fcomp
std
pop
inc
dec
xor
mov
int
inc
jns
retf
mov
mov
nop
add
xor
outs
loopne
push
inc
ret
imul
and
xor
adc
push
dec
mov
ret
xlat
push
pop
adc
dec
xor
in
add
pop
sub
popa
mov
inc
test
mov
and
xor
loopne
and
sub
sbb
loopne
push
fldcw
loop
jge
and
dec
daa
jnp
cmps
xchg
out
(bad)
cwde
sub
sub
ins
outs
pop
mov
ss
xchg
dec
xor
mov
shl
in
sbb
xor
sub
ins
xchg
cwde
mov
mov
fisttp
imul
xor
or
mov
icebp
repnz
push
test
push
xchg
pop
loop
xchg
mov
(bad)
mov
pop
imul
xchg
mov
or
sub
cwde
cmps
sbb
aas
retf
push
bnd
mov
int
xchg
xchg
pusha
and
cmp
int3
adc
mov
xor
sub
jmp
loop
inc
ins
je
add
rcl
dec
and
mov
rol
pop
leave
mov
ret
add
mov
add
sahf
xchg
mov
bound
ret
mov
sbb
sbb
push
xchg
xor
leave
stos
and
fwait
pop
pusha
mov
inc
push
add
(bad)
ss
ds
mov
sbb
or
aad
arpl
dec
jmp
jbe
push
xor
mov
pop
mov
xchg
rol
sbb
pop
ret
xor
clc
push
and
sub
lods
aam
nop
dec
je
packssdw
mov
and
cmps
ror
mov
xchg
sub
push
jp
inc
pop
jp
xchg
jge
mov
pop
(bad)
icebp
imul
nop
cwde
es
cmp
cmp
jno
leave
mov
jle
aad
dec
dec
inc
(bad)
mov
test
pop
lock
cmp
aaa
das
data16
mov
aad
scas
sub
xchg
push
inc
daa
push
rcl
dec
sar
dec
inc
aas
loope
sar
test
adc
out
add
cmp
sub
mov
(bad)
adc
out
movs
adc
mov
xor
clc
mov
stc
sub
pop
test
je
call
mov
inc
into
jae
mov
mov
jp
mov
(bad)
jae
hlt
add
and
ret
and
mov
stos
jbe
es
dec
stc
pushf
jne
push
retf
pop
int
addr16
arpl
test
ret
fwait
jne
test
adc
jne
mov
or
enter
hlt
ds
pop
mov
sbb
xchg
mov
jmp
adc
push
xlat
pop
or
cmp
cmp
pop
sbb
in
mov
mov
jge
mov
(bad)
fnstsw
fcmovnbe
retf
adc
cmps
mov
rcr
jne
loopne
xor
dec
pushf
jle
xor
scas
outs
and
mov
add
icebp
mov
add
push
ds
or
push
push
pop
fwait
out
fbld
dec
or
clc
add
jl
pushf
test
fdiv
sti
shl
call
mov
pop
or
lods
clc
pop
sub
popa
(bad)
(bad)
mov
fs
fidiv
loopne
into
ror
cli
movs
cmp
xor
jmp
cld
jb
stc
xor
bound
push
fistp
or
ins
push
inc
lods
lahf
in
xchg
mov
(bad)
icebp
(bad)
fldenv
sbb
aaa
push
inc
test
jp
xchg
pop
(bad)
fiadd
xor
(bad)
pop
xchg
cmp
dec
lldt
sbb
mov
outs
push
mov
cmp
js
adc
mov
pop
jns
dec
in
fs
or
test
cmc
stos
push
push
(bad)
js
push
push
sbb
shr
pushf
mov
mov
xor
mov
popa
test
out
fisubr
mov
clc
fwait
add
sub
cld
ficomp
fcom
xchg
pop
sti
and
mov
xlat
mov
and
jl
sti
adc
cmp
mov
pusha
xchg
pavgb
pop
push
fsubr
pop
or
dec
xchg
outs
jno
jmp
leave
add
jp
fsub
adc
pop
ins
jo
push
mov
jns
shr
int
fnstenv
das
mov
jb
arpl
xchg
cmp
arpl
jmp
jle
es
inc
jmp
aam
adc
jmp
out
mov
or
retf
int3
jae
mov
sub
adc
push
pop
addr16
pop
sub
push
jle
push
imul
cmp
mov
ins
or
push
or
jl
xchg
leave
adc
(bad)
shl
outs
retf
nop
(bad)
mov
sbb
pop
sbb
adc
adc
xchg
cmp
in
jne
repz
aaa
repnz
pop
js
adc
dec
inc
sahf
outs
adc
ret
jmp
xor
retf
jnp
xchg
call
movs
aad
xor
leave
sti
inc
repz
jae
rol
push
xlat
ja
leave
pop
cwde
scas
inc
ins
imul
inc
xor
jp
cmps
punpckhbw
add
repnz
aad
das
hlt
adc
lock
test
outs
test
popa
enter
fidivr
retf
sbb
neg
jno
inc
lea
dec
xchg
push
call
mov
outs
dec
rcr
imul
call
push
dec
inc
sub
inc
ret
mov
bndstx
and
dec
push
inc
call
push
mov
xchg
aaa
and
adc
mov
mov
test
pop
adc
and
mov
or
mov
cmp
movs
mov
call
ja
icebp
arpl
xor
test
adc
xor
push
mov
pop
arpl
add
dec
xchg
sbb
xchg
xor
es
ror
cwde
mov
stos
mov
fbld
dec
add
loopne
push
das
xor
mov
popf
mov
scas
mov
sar
sbb
imul
xchg
fidivr
pop
cmc
movs
mov
cmp
dec
jbe
pop
mov
pop
shl
cwde
jmp
leave
arpl
sti
pop
mov
sub
sti
(bad)
mov
xchg
xchg
and
sbb
dec
mov
(bad)
pop
mov
fwait
jp
dec
xchg
or
lods
push
and
jmp
pop
jb
dec
pop
pop
add
ins
lock
xchg
cmp
add
les
addr16
sbb
push
mov
mov
xlat
out
mov
iret
adc
sbb
adc
xchg
adc
sub
aad
sub
adc
push
sbb
int3
pop
imul
hlt
ins
sbb
xchg
xchg
adc
mov
add
test
pop
loop
mul
ins
pop
out
and
or
jmp
in
sbb
or
aas
xchg
clc
enter
xchg
or
push
dec
test
cmp
jo
loope
aaa
jp
dec
inc
test
sahf
and
clc
out
push
xchg
outs
or
sub
cli
loopne
push
mov
mov
loope
call
jnp
cwde
sbb
mov
mov
stos
mov
clc
aad
(bad)
mov
sbb
xor
into
and
mov
xlat
push
sti
jl
mov
(bad)
mov
mov
xchg
mov
pop
cmp
mov
test
sub
xchg
loop
fisub
out
sub
ins
jns
enter
sub
inc
sahf
xor
jecxz
fldcw
jo
repnz
jp
outs
jns
cmc
call
retf
dec
xchg
mov
sbb
cmp
adc
loop
sub
daa
dec
fisttp
pop
push
mov
inc
iret
mov
stos
xor
dec
pop
mov
call
pop
push
or
adc
mov
jae
adc
cmc
adc
pop
dec
push
repnz
pop
xchg
pop
cld
mov
mov
stc
mov
cmps
or
inc
mov
cmc
and
test
push
fsub
mov
or
jb
mov
jl
or
and
out
sahf
movs
jmp
cdq
pop
ss
sti
out
sahf
mov
adc
daa
inc
(bad)
xchg
(bad)
xchg
les
pop
jmp
inc
jl
xor
dec
rep
adc
inc
adc
push
dec
ja
movs
jno
lds
inc
fcomp
mov
or
outs
ins
add
mov
or
imul
inc
bound
outs
fs
push
mov
sbb
test
test
mov
mov
lds
cmp
cs
call
sahf
push
mov
ins
test
das
mov
dec
jb
call
dec
sahf
(bad)
les
dec
xor
in
pop
in
dec
pop
fistp
retf
lds
dec
out
int3
int
(bad)
and
push
popa
xchg
shr
xchg
or
sahf
fnstsw
inc
inc
add
out
push
mov
call
out
rcr
and
inc
outs
inc
ror
sub
dec
loopne
daa
arpl
(bad)
sub
or
loope
push
jg
out
sbb
retf
retf
sub
add
sub
fisubr
(bad)
cmp
push
int
xchg
movs
xchg
sti
push
sti
mov
adc
and
in
jae
cwde
ds
mov
sbb
inc
fld
(bad)
xor
and
popa
cdq
ins
dec
enter
ficomp
pop
sbb
sbb
div
leave
mov
adc
ins
xchg
jecxz
push
mov
ins
scas
xor
ds
jmp
and
sbb
jl
(bad)
adc
push
pop
in
(bad)
cs
xchg
rol
loope
mov
cmp
bound
adc
movs
lods
push
in
pop
stos
xchg
pop
add
jge
mov
lods
jge
imul
imul
popa
lock
in
inc
pushf
loop
jg
in
fimul
add
push
sub
xor
jecxz
jns
sbb
lahf
iret
int3
test
sub
or
and
inc
mov
mov
std
adc
mov
das
cld
sub
loope
push
dec
aas
jb
adc
jnp
inc
dec
push
das
mov
inc
xor
aad
inc
lock
sbb
stos
adc
jbe
push
sbb
adc
mov
scas
call
enter
mov
mov
xor
push
jl
fwait
gs
outs
xchg
imul
or
xor
retf
xor
inc
arpl
inc
cmp
adc
or
fcomip
aaa
jae
and
in
loop
xchg
pusha
rcl
lahf
jno
sbb
lods
jno
and
sub
loop
in
pop
mov
das
sbb
imul
xchg
push
cld
int3
push
sahf
test
(bad)
xchg
loopne
push
mov
cmps
cmp
sahf
fbstp
add
imul
mov
outs
shl
pop
not
in
xchg
add
nop
push
cmp
cmp
xchg
dec
imul
adc
and
lods
pop
in
fsubr
add
ja
mov
in
xor
aam
xchg
inc
outs
adc
lea
xchg
loopne
or
imul
dec
ds
loopne
sbb
xor
fisubr
lock
pop
mov
cmp
(bad)
mov
(bad)
cmp
ret
adc
dec
adc
xor
aam
lock
repz
inc
mov
imul
xchg
adc
inc
das
dec
add
ret
repnz
jo
mov
mov
xor
sbb
pop
add
xor
jno
ret
pop
xor
daa
xchg
cmps
test
cli
sbb
mov
hlt
les
rol
lea
mov
popa
out
inc
movs
mov
call
cs
imul
jno
pop
imul
cmp
inc
popa
add
(bad)
fimul
push
push
scas
call
xor
fisub
push
das
xlat
loopne
cwde
mov
dec
enter
test
mov
xor
adc
sbb
add
push
in
xor
aaa
mov
mov
pop
inc
jmp
dec
nop
inc
jae
sub
cld
xor
call
cli
mov
mov
lods
or
jp
cdq
dec
outs
jp
sti
(bad)
cmp
cmp
imul
imul
push
into
dec
xchg
sbb
fcomip
adc
imul
adc
ret
movhps
test
sub
xor
imul
call
loopne
push
and
js
xor
div
add
jl
sub
je
adc
scas
ror
or
test
cmps
test
push
xchg
scas
jno
push
ins
push
jae
adc
xor
fsubr
xlat
mov
mov
xchg
lahf
sub
dec
out
cmp
ins
xor
das
in
adc
mov
pop
lds
sub
dec
xchg
jno
push
popf
ja
push
inc
cwde
ret
dec
addr16
rcl
push
inc
dec
mov
fsubr
push
inc
and
ror
jne
push
push
scas
test
mov
mov
pop
push
add
cli
xchg
cmp
cmps
cmp
sbb
pop
adc
xchg
pusha
fnstsw
pusha
aaa
pop
shl
inc
ins
push
mov
ror
mov
mov
popa
ror
cmps
sbb
mov
aam
sahf
daa
(bad)
out
retf
push
adc
pop
push
aaa
pop
scas
or
jge
aam
mov
or
fcomip
sbb
adc
popa
jmp
addr16
or
fwait
pop
xor
(bad)
push
ss
inc
lods
jge
adc
ja
icebp
loope
sub
shl
and
rcr
aas
or
sub
cmp
daa
jp
push
sti
jo
xor
xchg
adc
mov
daa
pop
dec
(bad)
adc
jb
push
jecxz
inc
test
sar
fcmovne
push
or
xchg
stc
fld
cmps
jns
mov
jle
xor
add
sub
in
leave
xor
cmp
mov
shl
xchg
adc
sub
pop
mov
xchg
movs
jmp
jne
dec
call
mov
scas
push
jl
and
lods
inc
mov
imul
test
adc
or
(bad)
in
adc
mov
je
inc
xchg
sub
and
ds
cmp
jecxz
xlat
adc
data16
jle
loop
out
jno
ds
fsub
dec
push
inc
loop
neg
fwait
jmp
mov
lods
sub
out
inc
jge
fdiv
and
jecxz
adc
out
jbe
icebp
mov
icebp
fmul
cld
dec
push
jge
push
pop
dec
shl
movs
xor
and
outs
jb
stos
inc
fsub
loopne
clc
clc
or
inc
xchg
aam
or
cmps
adc
test
popf
dec
jb
int3
cmp
cmp
jl
mov
sub
mov
or
jmp
mov
or
inc
push
xchg
mov
cwde
sub
es
in
in
jno
add
aaa
clc
push
mov
push
cmp
add
sbb
mov
pop
dec
sti
fisttp
mov
js
push
and
scas
ins
pop
aam
das
jle
out
add
fs
pop
jmp
lds
jnp
jg
inc
jo
stc
or
pop
jecxz
aas
add
xor
push
xchg
xor
retf
pop
rcr
pop
fld
push
je
cmps
xlat
scas
or
mov
xchg
pop
inc
cmp
jae
das
(bad)
in
sub
cmps
push
sub
(bad)
shl
leave
xor
sbb
dec
pop
xor
outs
add
or
cmc
fnsave
mov
iret
jb
jge
adc
(bad)
xor
dec
test
cmps
and
retf
sbb
pushf
adc
hlt
cmc
aam
outs
mov
popa
or
mov
and
test
push
daa
and
sbb
and
loopne
jle
es
cmp
not
leave
jmp
mov
dec
cmp
jle
daa
fldcw
xor
inc
movs
mov
pop
loope
loopne
stc
push
adc
push
xor
stos
push
inc
repz
je
js
js
adc
pop
and
call
and
nop
movs
fisubr
push
mov
push
xchg
or
inc
ja
cwde
sbb
jb
fs
push
cwde
cmp
jnp
pop
jbe
pop
sti
ret
in
es
jbe
push
xor
stc
mov
sbb
js
push
jno
vphaddbw
sub
pop
jecxz
dec
fiadd
repz
xchg
add
jle
sub
cmps
dec
dec
out
fbld
cmp
or
jo
xchg
rcr
push
fcomp
push
adc
sub
or
cmp
jmp
mov
shr
shl
adc
out
pop
xlat
mov
or
out
fdiv
not
jbe
jae
fs
sub
sub
mov
jge
adc
push
lahf
add
movs
jl
sub
jb
dec
popf
mov
lea
(bad)
sub
xchg
cmp
cmp
test
xchg
movs
mov
xchg
retf
mov
(bad)
leave
or
and
add
pop
neg
outs
mov
(bad)
or
sub
enter
(bad)
mov
xor
retf
mov
mov
daa
fild
push
mov
jb
test
les
not
sub
ja
rcr
sub
sub
add
dec
imul
mov
(bad)
pop
inc
pop
and
xchg
jmp
aaa
nop
mul
push
rcr
cmp
jb
das
sub
add
jnp
out
pop
push
xchg
test
es
cmp
int
push
dec
mov
in
cli
leave
xchg
iret
ins
push
pop
pop
xor
test
pusha
aaa
push
and
fwait
ja
ins
or
lea
mov
cmc
xor
icebp
mov
out
mov
cld
push
jno
icebp
jns
dec
mov
cmp
pushf
sbb
nop
mov
bound
push
shr
push
imul
in
fnsave
sbb
sbb
fs
call
jnp
push
cmp
pop
xor
sub
dec
xchg
mov
add
aaa
mov
repnz
fist
mov
call
hlt
sub
mov
pop
sbb
jnp
cs
ret
mov
mov
sbb
push
pop
shl
pop
mov
pushf
xchg
and
pop
inc
icebp
add
fcomp
enter
loope
mov
adc
inc
loope
sub
dec
jmp
in
cmp
cmps
mov
popa
sbb
mov
sub
xor
pop
data16
sti
fcomp
mov
stc
test
or
ins
das
int3
out
(bad)
dec
out
sub
(bad)
imul
cld
dec
or
push
imul
sub
fucomi
cmp
pop
inc
es
push
push
mov
pop
aaa
sub
mov
add
mov
and
aad
enter
jmp
dec
pop
aas
stos
fstp
iret
das
xor
daa
gs
inc
jbe
pop
inc
cmps
mov
shr
cld
mov
mov
add
int3
out
xchg
ror
xchg
into
xor
test
ss
pop
ins
stos
or
mov
push
push
xchg
mov
add
mul
inc
pop
es
std
cmp
ror
(bad)
cmp
cmps
mov
neg
push
lds
mov
push
push
test
jmp
push
pop
add
inc
xor
sar
(bad)
hlt
push
xchg
shr
push
pop
mov
jmp
jne
xchg
sbb
(bad)
cli
or
into
fmul
sub
mov
jo
pop
xor
(bad)
mov
popa
(bad)
jp
pushf
pop
ins
sub
or
dec
or
out
pop
xchg
fcomip
push
dec
and
in
sub
test
rep
and
sbb
sti
pop
push
mov
aam
test
in
mov
lods
data16
push
scas
icebp
outs
je
fld
adc
mov
or
xchg
jle
mov
xor
shl
ret
scas
mov
jge
int3
outs
mov
stos
mov
push
mov
dec
dec
xchg
stos
ret
mov
std
push
sbb
push
add
cmp
lea
mov
mov
mov
jp
xchg
jg
and
fs
mov
rol
outs
mov
loop
aam
jb
(bad)
jmp
cld
test
pop
xor
fs
push
push
mov
mov
xchg
xlat
and
stos
jae
aam
ja
mov
loope
mov
ja
aam
int
xchg
es
pop
dec
sbb
shl
or
add
int
add
mov
shl
bound
(bad)
jae
ins
jnp
xchg
(bad)
sub
adc
lods
lods
aas
cmp
sub
je
pop
mov
push
pop
test
cmp
rcr
stc
in
sbb
les
cmp
jmp
imul
rol
or
adc
xchg
cmp
fistp
mov
in
retf
mov
popf
mov
push
test
shl
stos
ret
out
sbb
push
mov
pop
or
out
fld
or
int3
and
push
lods
push
and
mov
mov
pop
out
enter
dec
mov
imul
js
xor
mov
les
push
push
retf
push
mov
test
mov
mov
dec
add
fxch
dec
sar
nop
fild
fcmove
mov
hlt
add
and
xchg
pop
fdiv
jecxz
dec
xchg
into
ja
mov
or
(bad)
ficom
jo
rcr
aas
mov
or
in
in
fsubr
sub
jle
retf
pop
sub
add
fst
cmps
rcr
mov
inc
popf
push
or
into
adc
pop
std
enter
mov
lea
sti
test
ror
cwde
cmp
inc
into
mov
rcl
in
xor
mov
mov
push
sbb
popf
(bad)
push
dec
das
or
shl
ins
sti
scas
cmp
mov
pop
xor
mov
das
jmp
inc
cmp
pop
dec
scas
lea
or
aam
adc
jmp
aad
mov
in
and
out
ss
cld
stos
lock
or
push
cmp
xchg
cmp
pop
mov
or
mov
push
int
fdivr
repnz
out
mov
dec
jnp
int
call
fwait
add
pop
or
nop
xlat
sbb
jne
rol
cmp
and
out
add
cmps
das
fucompp
out
xor
nop
cs
shl
lock
add
fld
adc
aaa
push
addr16
cwde
stos
push
pop
sub
inc
xchg
push
dec
cdq
gs
fdiv
dec
add
inc
pop
dec
adc
xor
loop
xchg
icebp
or
call
aam
push
mov
rol
xchg
xor
(bad)
popf
in
pop
jmp
(bad)
sub
test
into
cmp
sub
mov
hlt
mov
jmp
leave
adc
jne
inc
lods
sar
push
or
sub
jae
mov
aas
xchg
mov
jp
push
lods
ret
dec
jne
sub
pop
mov
test
(bad)
push
xor
push
mov
fucomp
push
inc
(bad)
ror
xchg
in
or
in
xchg
mov
push
popf
sbb
mov
ret
push
sbb
mov
cs
xor
jnp
jnp
inc
and
or
test
push
add
in
outs
push
cmp
ins
nop
and
add
and
(bad)
mov
add
or
je
stos
xchg
add
lds
inc
cmp
loopne
ror
inc
jp
or
fidivr
test
inc
push
jae
and
pop
jle
into
push
int3
jg
add
push
addr16
add
out
jmp
fnstcw
sub
add
ja
jg
jecxz
mov
push
int
or
test
add
stc
fsubr
sti
inc
repz
sub
ret
mov
repnz
sub
pop
adc
pop
sub
popf
int
(bad)
rcl
je
fidivr
(bad)
imul
daa
loopne
out
sti
jo
fisub
jb
cmps
(bad)
lock
xchg
fnstenv
cmps
add
mov
pop
repnz
imul
clc
(bad)
jp
(bad)
clc
ret
sbb
mov
(bad)
xchg
shr
test
xchg
pushf
cmp
in
mov
pop
and
push
sub
out
test
fadd
add
es
pop
cmp
mov
push
adc
enter
aad
outs
and
addr16
mov
(bad)
and
sub
movs
or
ds
mov
xchg
xor
sti
pop
nop
dec
out
sub
mov
ds
push
lods
bound
out
in
adc
enter
aas
cmp
adc
push
fdivr
rcr
dec
push
jg
stos
cdq
pop
imul
adc
(bad)
lds
aas
sbb
push
jns
ja
add
cmp
aad
fcomp
std
dec
neg
sbb
aad
das
scas
cwde
fcom
sbb
repnz
inc
mov
out
out
call
ins
scas
daa
nop
inc
hlt
fist
mov
jnp
test
sub
jmp
mov
pop
in
sbb
push
cmp
mov
test
or
addr16
fild
test
jo
into
ret
cld
movs
ret
or
popa
pop
(bad)
ret
lock
aaa
adc
or
mov
(bad)
sub
shl
lods
enter
clc
cli
(bad)
test
pop
out
and
lds
sbb
add
mov
sub
push
mov
push
es
pop
sub
xchg
lods
in
xlat
sbb
jo
pop
xor
xchg
(bad)
movs
test
sub
daa
repnz
in
inc
mov
outs
jbe
nop
pushf
cmp
rcr
cmc
outs
lahf
cwde
hlt
jo
and
sahf
movs
xchg
push
mov
out
sahf
test
or
cmps
rcr
jecxz
or
into
je
mov
push
sub
lsl
fldcw
push
or
(bad)
mov
sub
call
dec
or
or
ss
xor
pop
pop
push
add
jo
jle
push
add
sbb
dec
movs
test
rol
cmp
loopne
das
inc
xchg
gs
lods
inc
or
scas
adc
adc
cmp
fidiv
or
dec
xchg
push
movs
push
gs
xor
into
mov
inc
sbb
mov
sub
mov
imul
jecxz
test
fsubp
jmp
xor
jecxz
retf
add
sbb
(bad)
cli
popf
imul
xor
pop
push
jg
test
ins
jnp
cmp
scas
sti
cli
jnp
(bad)
repz
mov
test
fst
mov
popf
in
sub
lods
fisubr
fwait
div
fld
add
mov
jg
je
mov
pop
inc
add
adc
rcr
int3
int3
jle
and
inc
jle
jnp
div
stos
fidivr
xor
xchg
test
nop
ret
mov
jmp
fcomp
cmp
xchg
into
jl
push
repz
jg
dec
lock
xchg
test
or
jp
xchg
cld
push
xlat
xlat
mov
push
stos
ss
jno
xchg
mov
adc
jae
push
stos
lahf
inc
mov
int
fidiv
mov
dec
pusha
dec
arpl
call
mov
add
sub
inc
daa
imul
pop
xor
out
xlat
pop
jbe
fsubr
loopne
push
repnz
jns
cld
push
cmps
out
cld
push
out
iret
add
cmc
xor
dec
inc
and
xchg
test
out
sbb
cmp
adc
inc
mov
pusha
les
lea
sbb
outs
int
clc
test
pop
repz
cmp
fwait
or
xchg
mov
mov
int
int3
sbb
cmp
cmp
stc
fstp
inc
dec
pop
ja
call
frstpm(287
test
les
mov
mov
lahf
jns
fld
fwait
cmp
mov
lods
cs
stos
lods
or
pop
popa
sub
add
fidiv
mov
dec
je
mov
fst
jge
(bad)
cmp
enter
jle
icebp
leave
mov
jbe
fs
nop
xchg
sbb
xchg
ror
push
loopne
jo
mov
lea
repnz
test
jle
xlat
ret
and
mov
cmp
cmc
adc
inc
mov
mov
mov
aad
jmp
iret
stc
jmp
daa
popw
(bad)
jo
iret
(bad)
mov
loopne
push
xor
test
cmps
mov
rcl
jb
pop
fistp
loopne
sub
mov
stos
mov
push
xor
mov
call
jp
fsubr
pushf
jge
or
sub
jp
pop
fistp
fnstsw
sub
mov
fidiv
aam
xchg
xor
jae
mov
xor
inc
stos
mov
sbb
popf
mov
sbb
int3
mov
xor
cwde
sbb
loop
dec
out
jbe
or
push
sbb
sub
xor
adc
clc
dec
(bad)
push
out
sbb
jmp
sbb
popa
aaa
repz
or
xor
mov
outs
xor
jp
rcl
sbb
jl
cmps
int
fs
sbb
xor
in
dec
add
push
jmp
push
je
hlt
and
hlt
xchg
cmp
mov
xor
add
(bad)
xor
push
mov
sbb
pop
push
dec
cmps
pop
jmp
inc
fwait
mul
inc
xchg
dec
jmp
add
scas
sub
sahf
bound
mov
fdivr
push
push
repnz
cmp
ret
jo
(bad)
dec
scas
test
in
mov
mov
or
push
push
inc
or
inc
push
push
sahf
mov
mov
test
mov
sub
pop
jmp
or
sub
xchg
or
or
aaa
outs
(bad)
sbb
pop
inc
push
or
add
sbb
pop
mov
mov
inc
adc
fdivr
pop
sbb
and
mov
add
daa
add
rol
mov
add
setne
jnp
popa
sahf
aad
loopne
ins
iret
test
push
xor
mov
daa
lahf
jp
ffreep
push
aaa
adc
in
cdq
pop
int3
or
xchg
ins
inc
add
sbb
dec
addr16
pop
and
sub
shr
neg
pop
shr
cmps
xor
out
ja
pop
ins
jle
sbb
sbb
int
call
bts
jb
dec
icebp
es
scas
test
mov
jo
jno
jp
mov
repnz
loop
xor
adc
imul
das
lods
nop
mov
in
mov
leave
xor
sub
adc
mov
pop
sbb
push
sub
sbb
push
push
addr16
jl
cld
iret
lfs
loopne
mov
xchg
cmp
mov
xchg
cmp
mov
test
bound
sbb
int
jne
mov
push
int3
xor
rcr
add
sbb
or
cmp
pop
mov
sub
test
aad
aaa
clc
xor
in
fimul
ss
or
push
mul
and
lods
pop
not
inc
xchg
dec
daa
leave
xor
pop
in
cli
out
add
sub
pop
add
dec
adc
cmps
js
cmp
jo
mov
clc
dec
and
pushf
pusha
in
jmp
and
das
mov
leave
add
lahf
sbb
sub
cmp
rol
dec
push
outs
jo
outs
push
and
sub
mov
xchg
adc
sahf
mov
imul
mov
jle
or
mov
mov
ins
cwde
jg
add
xor
ds
popa
stos
stos
pop
mov
xchg
cmps
dec
xor
sub
pop
imul
out
adc
mov
cmp
daa
aaa
pop
cmp
out
enter
pop
outs
outs
mov
fwait
enter
dec
mov
dec
retf
cmp
jo
mov
sbb
and
syscall
or
pop
stos
mov
mov
lods
adc
(bad)
outs
stos
jno
stos
cmps
mov
outs
jnp
cld
pusha
call
test
popa
mov
(bad)
cmp
dec
mov
dec
or
imul
fmul
dec
(bad)
cld
pop
fs
dec
js
add
test
rcl
daa
je
fdiv
cmp
movs
idiv
dec
jno
stos
sbb
loop
xchg
push
push
sbb
push
cmc
pop
popa
stc
add
mov
int3
pop
pop
inc
pop
rcl
rcl
pop
dec
out
xchg
mov
pop
push
mov
sbb
jnp
imul
std
and
add
push
xchg
sahf
jmp
pop
call
fs
sub
(bad)
sti
jmp
xlat
inc
jg
ucomiss
sub
xchg
das
sub
mov
out
es
les
loopne
cmp
aad
pop
ror
mov
cmps
call
xchg
iret
mov
into
inc
leave
inc
xor
pusha
iret
jge
cs
push
popa
loopne
lods
dec
mov
jne
lock
xchg
outs
fst
xchg
inc
mov
jne
je
mov
dec
mov
dec
xchg
mov
xor
inc
fsub
test
cmps
xchg
xor
inc
imul
sbb
push
dec
jle
popa
inc
imul
xchg
jmp
call
sbb
sub
in
or
dec
inc
ret
xchg
je
arpl
fisubr
jmp
mov
jmp
sar
aad
and
sbb
add
xor
push
pop
mov
fnstsw
outs
inc
and
or
pop
fmul
dec
hlt
out
and
pop
ss
pop
sti
stc
outs
push
pop
push
adc
push
mov
cmp
pusha
add
aaa
jbe
lods
pusha
sahf
xchg
jl
push
xor
fwait
mov
or
add
sar
cmp
and
hlt
(bad)
jo
jmp
cmps
xor
jp
mov
xchg
mov
push
ins
clc
lods
xor
xchg
mov
push
sahf
add
sub
jecxz
ja
pop
xchg
mov
jb
test
inc
retf
and
xlat
lods
xlat
mov
dec
push
or
dec
and
(bad)
(bad)
mov
gs
cmc
xor
lods
xchg
daa
mov
fdiv
loopne
xchg
or
mov
mov
sti
mov
enter
gs
pushf
fld
sbb
jecxz
push
add
les
std
lahf
sub
fcom
mov
scas
sbb
lock
xor
mov
mov
and
push
imul
inc
pop
fidivr
sub
jnp
in
push
push
fisubr
call
(bad)
and
sar
jne
cmp
jae
fidiv
sbb
pop
data16
in
pop
lahf
xor
in
ins
pusha
jae
jo
daa
add
push
mov
sbb
rcl
add
mov
dec
adc
sub
sbb
test
jne
or
ja
dec
mov
mov
outs
add
enter
inc
rcr
jmp
dec
fwait
mov
xor
push
and
mov
and
pop
aas
mov
aaa
xchg
in
jecxz
pop
cli
pop
icebp
lods
push
arpl
dec
ds
xchg
jnp
sub
dec
daa
sub
jecxz
cmp
adc
mov
cmp
mov
in
scas
sub
push
ret
or
and
add
lahf
repz
lods
push
push
mov
das
xor
adc
imul
jl
pusha
mov
or
movs
or
or
into
adc
outs
cmps
cmp
loope
hlt
sub
adc
xor
cmc
push
add
and
push
sub
or
std
stc
out
adc
into
clc
pop
and
xor
jo
enter
inc
and
and
sti
mov
mov
jnp
adc
std
adc
stc
mov
or
and
stos
loopne
(bad)
enter
jae
jnp
stos
adc
mov
test
mov
mov
push
inc
and
cmp
push
add
xchg
adc
bound
cdq
adc
add
mov
xor
nop
out
cmp
mov
repz
mov
ins
test
push
es
and
jl
ret
pushf
lea
jp
call
mov
sub
repz
hlt
pop
xor
sahf
push
retf
les
pop
pop
mov
or
sbb
aas
rcl
sub
and
mov
fist
push
sbb
ins
call
scas
ins
shl
mov
shl
out
pop
mul
xor
popf
jg
sbb
mov
arpl
imul
jg
push
addr16
jae
nop
mul
test
cmps
dec
push
mov
repnz
into
adc
lods
jmp
push
sub
(bad)
stos
popf
cmc
stc
icebp
test
add
jp
push
or
xor
imul
xor
jne
sub
jne
adc
fcomp
jl
mov
jp
or
push
pop
sbb
vpsubsb
mov
fs
dec
bound
into
jecxz
push
gs
mov
mov
movs
cmp
and
sbb
stc
jo
enterw
ficomp
int3
push
aas
popf
cmp
(bad)
mov
ja
in
fidivr
pusha
xor
mov
retf
cmp
inc
out
xchg
out
pop
xchg
rcl
or
adc
(bad)
pop
add
inc
inc
mov
push
jne
mov
xchg
int3
inc
sub
ret
in
outs
mov
int
sbb
fst
cdq
dec
mov
or
mov
sbb
jg
pop
xchg
test
hlt
mov
and
mov
test
mov
je
cmps
pop
adc
mov
mov
into
rol
cmps
or
sub
fnsetpm(287
popa
mov
add
and
push
popa
mov
dec
lds
sbb
sti
and
aaa
(bad)
scas
push
xchg
push
sbb
mov
push
or
mov
sbb
daa
mov
dec
xor
inc
adc
ret
ret
je
push
jae
xchg
loope
iret
xor
(bad)
out
pop
js
mov
mov
call
pop
sbb
jne
cmc
into
mov
mov
cmps
sub
inc
test
pop
mov
test
cmp
jne
test
inc
cmp
scas
shr
je
imul
imul
push
push
pop
jne
cmps
mov
cs
inc
lods
pop
cdq
ror
outs
cld
push
and
lahf
fs
or
rcl
pop
mov
test
call
mul
inc
cdq
neg
stc
popf
xlat
xchg
cwde
fistp
scas
addr16
aam
xchg
out
sahf
xor
adc
enter
lds
ret
jp
or
mov
push
int
enter
out
jl
dec
adc
iret
lods
push
addr16
xchg
loope
stc
jg
or
lods
mov
popf
ret
repz
or
mov
repnz
mov
jnp
pushf
push
enter
or
mov
fwait
add
int
mov
(bad)
stc
fst
inc
cld
xchg
push
mov
ret
lds
jbe
(bad)
dec
adc
mov
into
push
stos
jp
bound
out
push
xor
dec
sbb
xor
repz
sub
ret
adc
call
push
adc
xor
xor
mov
sub
xchg
dec
mov
test
jo
cmp
sub
(bad)
movs
bound
aad
iret
dec
cwde
mov
shl
inc
push
jbe
pop
sub
dec
mov
cld
stc
fwait
shl
xchg
cmps
adc
push
jp
sub
mov
mov
inc
icebp
es
imul
mov
sbb
test
push
jbe
mov
or
fild
add
add
fmul
mov
mov
jl
adc
sub
xor
jl
cmp
push
mul
mov
push
ret
int3
cli
lods
push
scas
popf
rdpmc
inc
ret
hlt
inc
ficomp
pop
xor
push
enter
imul
dec
push
sbb
out
push
sahf
(bad)
push
inc
hlt
inc
dec
dec
call
push
cld
test
mov
inc
test
jae
sete
cld
dec
cmps
aaa
inc
mov
pop
lahf
xchg
lods
les
mov
jno
icebp
push
fst
add
aam
push
mov
push
jb
imul
mov
cmp
scas
jae
cmp
or
cmp
arpl
add
xchg
add
xchg
dec
test
mov
mov
cmp
out
mov
cmp
mov
fcmovnb
scas
ds
add
and
push
cmp
mov
pop
jle
stc
lea
push
mov
adc
cmp
jl
jg
jle
push
push
loopne
jg
test
pop
pop
adc
cmp
sbb
(bad)
test
push
sub
call
sti
xor
test
jp
cmp
adc
add
popa
aam
xor
pop
inc
arpl
call
into
sub
mov
add
mov
sbb
pop
cdq
dec
(bad)
jl
cmp
or
js
ds
ror
sbb
test
sti
push
lods
(bad)
ins
bound
and
xchg
out
cmps
push
cmc
movs
mov
jg
sbb
sar
add
sar
inc
jmp
pusha
leave
mov
out
ficom
lahf
jle
fcom
sub
xchg
push
xchg
test
pop
cmp
loopne
fldenv
pushf
idiv
mov
xor
in
sbb
test
dec
loope
jle
jbe
pop
jmp
mov
jmp
jp
xor
dec
mov
or
movs
jo
rol
jmp
push
mov
and
(bad)
cmc
mov
xchg
jns
add
push
ror
mov
test
mov
or
push
lea
in
repz
mov
push
xchg
pop
pop
sbb
mov
shl
adc
inc
mov
mov
mov
mov
pusha
cmp
fcmovb
(bad)
mov
xchg
mov
ds
out
loope
sar
ffreep
iret
ds
xor
sti
adc
push
rcl
js
sbb
sub
cmp
xchg
fwait
ja
sub
inc
ins
movs
std
jle
js
fldenv
ins
gs
jbe
mov
xor
mov
adc
fnsave
pop
pop
aam
mov
data16
sar
cmc
dec
(bad)
xchg
out
mul
in
jl
int
(bad)
not
mov
sbb
std
dec
mov
mov
mov
and
mov
test
fisub
pop
sub
pop
or
jge
icebp
mov
shr
pushf
xchg
arpl
sbb
inc
dec
and
xchg
sub
push
fs
imul
push
test
mov
loopne
cmps
sub
test
mov
sbb
dec
in
xor
push
rcl
jne
jae
popa
cdq
cmp
imul
dec
cmps
int
loop
xor
gs
aam
jns
aam
push
aad
fcmovnbe
mov
call
cli
mov
sub
shr
mul
lea
xchg
sub
cmp
test
jo
jae
ins
cmp
aaa
ins
xor
or
add
dec
adc
fadd
and
xchg
sar
retf
mov
xchg
jno
inc
jecxz
lods
js
sbb
out
mov
outs
lea
and
retf
inc
fwait
enter
lods
mov
cmp
loope
push
repz
add
mul
xor
push
jno
in
lds
xchg
cmp
aad
into
and
in
add
stc
sbb
stos
loope
xlat
sbb
sub
sti
mov
(bad)
nop
or
cmp
aam
lock
mov
int
mov
dec
repnz
inc
bnd
push
sub
pop
into
mov
dec
lods
test
or
in
enter
dec
sub
mov
dec
inc
iret
loopne
push
test
(bad)
mov
jge
xchg
das
or
dec
or
fcomp
inc
mov
icebp
push
push
in
pop
dec
cmp
pushf
pop
xor
jmp
jnp
sahf
push
rcr
fsub
into
fmul
std
xchg
xchg
adc
jmp
push
mov
clc
pusha
add
(bad)
sbb
inc
stos
or
stc
push
pushf
mov
xchg
add
popa
mov
pop
inc
mov
inc
jb
icebp
xor
sub
cmps
mov
inc
dec
loop
and
cmps
and
je
xchg
loop
fdivr
xchg
sub
call
popa
mov
mov
fwait
sbb
push
xor
sbb
movs
pop
fmul
shl
pop
push
rol
retw
or
and
ins
in
adc
push
push
jb
adc
mov
das
push
mov
inc
imul
push
add
and
jbe
mov
adc
or
sub
cmp
sbb
jnp
sti
jecxz
jo
xchg
popf
aad
dec
adc
mov
sbb
adc
mov
dec
sbb
dec
or
aaa
push
cli
push
pop
(bad)
xor
mov
push
mov
sbb
dec
jecxz
sbb
out
(bad)
in
shl
add
jns
jns
aam
iret
ins
jecxz
and
cwde
int
dec
dec
int
jne
in
popa
mov
rcr
add
sahf
pop
es
jbe
lea
out
adc
das
movs
cmps
movs
loopne
sbb
xor
add
ror
stos
fld
add
mov
xlat
fiadd
std
cmp
mov
push
jl
jl
call
lahf
inc
retf
mov
enter
jbe
cmp
aad
pushf
add
xchg
xchg
sbb
mov
or
or
or
add
es
call
fcomp
int3
pushf
xor
or
bswap
inc
movs
out
nop
cli
bound
mov
out
imul
in
pusha
ss
shufps
js
test
cmovae
xchg
jl
push
aas
nop
fsubrp
jmp
es
popf
hlt
jmp
adc
lods
dec
inc
mov
outs
rcr
sbb
sbb
pop
xchg
das
(bad)
fdiv
ds
mov
sub
test
lock
jmp
outs
std
or
sub
fisttp
and
or
cmps
or
enter
cmp
repnz
lahf
fnsave
ins
mov
ins
imul
test
ds
repnz
sub
or
inc
dec
repnz
push
ret
mov
into
adc
mov
movs
jg
enter
rcr
jo
jg
pop
ins
adc
inc
mov
imul
int
out
add
inc
daa
mov
jg
jecxz
popa
sub
cmps
jmp
mov
scas
or
(bad)
cmc
dec
mov
xchg
loopne
cmp
jmp
leave
xor
jmp
movs
ja
add
sbb
pop
mov
mov
(bad)
repz
test
xchg
movs
ins
stos
(bad)
iret
imul
lds
dec
sbb
xchg
test
loop
or
nop
(bad)
call
jb
loop
aad
mov
mov
adc
cwde
aaa
nop
scas
inc
xchg
mov
sahf
push
das
bnd
push
js
pop
lods
dec
or
dec
xor
xor
push
adc
or
pop
xor
jno
xchg
xor
xor
sub
in
push
scas
fs
loop
iret
ret
jne
mov
sbb
loopne
mov
out
es
and
push
adc
sub
mov
(bad)
and
das
xchg
xor
inc
xchg
and
or
jp
pop
ds
pusha
rcr
pop
or
mov
pop
mov
dec
push
pushf
cmp
sahf
(bad)
or
push
push
xlat
cmp
movs
mov
xchg
jp
cld
jnp
xchg
ret
(bad)
shr
ja
in
das
fidiv
je
fsub
xchg
loope
and
adc
stos
pop
test
inc
dec
popa
and
mov
sbb
mov
cld
fcmovnb
aaa
xchg
cwde
pusha
ficomp
sub
sub
test
popf
inc
xchg
or
or
sub
neg
arpl
cli
mov
popa
ret
call
mov
jo
stos
jns
ror
and
fimul
mov
int3
mov
movs
ret
popa
jp
push
lods
jbe
mov
in
sbb
jp
cmp
out
pushf
scas
and
dec
sahf
sub
jns
psubd
cwde
aad
(bad)
jge
adc
mov
push
cmp
outs
adc
inc
std
cmc
ins
jnp
fdivr
in
call
pop
lock
jl
mov
adc
sbb
sar
cmps
add
arpl
cmp
in
out
jle
shl
je
mov
pop
mov
cmp
jbe
outs
call
test
add
push
int
or
sti
cmp
and
sbb
jmp
adc
sub
xchg
xchg
jmp
into
pop
push
or
jne
push
icebp
movs
(bad)
jne
mov
sub
push
cmp
push
jl
test
mov
mov
adc
test
not
lock
mov
fild
pushf
lock
dec
add
push
sar
xchg
xor
out
call
mov
pop
mov
data16
loopne
jg
and
shl
mov
cmp
push
sbb
cld
sub
xchg
ds
dec
int3
iret
or
jge
jne
ja
jmp
pop
out
lods
push
into
mov
in
or
lds
sbb
lock
aas
sub
push
adc
adc
pop
push
xor
in
ins
add
cmc
popa
or
pop
pop
sti
sub
iret
xor
mov
sub
sbb
mov
loop
jo
push
add
jge
les
in
push
seta
adc
cmps
and
or
xchg
inc
jb
inc
ror
movs
bound
push
inc
test
dec
pop
inc
out
adc
fidiv
fistp
cmp
xchg
inc
and
call
adc
sbb
sub
pusha
imul
jne
pushf
mov
iret
inc
jno
repz
mov
call
cmp
sbb
repnz
pushf
fsubr
cmps
inc
push
jmp
push
xchg
addr16
push
ds
cld
dec
aas
mov
inc
mov
or
sbb
inc
xchg
cdq
mov
and
mov
adc
cdq
cmps
icebp
cld
mov
fist
repz
or
xchg
and
scas
stc
mov
dec
pop
fist
sub
cmp
push
xor
out
adc
mov
repz
or
and
mov
and
and
loop
(bad)
nop
sbb
cmp
mov
push
mov
mov
pop
push
or
jae
sub
les
call
in
cwde
push
mov
(bad)
sbb
cmp
push
pushf
mov
or
dec
add
stos
push
loope
sub
jo
es
mov
and
dec
arpl
shr
mov
adc
push
popa
scas
sbb
jl
stos
xchg
fidivr
pop
and
mov
mov
push
push
jmp
pop
test
adc
fadd
cmps
add
outs
mov
adc
imul
dec
jb
out
cmps
cli
xor
retf
imul
and
mov
dec
inc
xlat
dec
dec
pop
outs
mov
in
outs
pop
add
and
jb
pop
jno
cmps
push
lods
sbb
push
push
sbb
jo
pop
lods
mov
inc
mov
push
clc
mov
push
imul
xchg
mov
jbe
jmp
int
adc
in
adc
inc
gs
cs
fs
adc
(bad)
sub
pop
clc
xchg
je
lds
call
(bad)
mov
ret
push
adc
out
push
or
out
gs
std
aad
sar
fcomp
add
sbb
test
xlat
test
dec
cmp
cmp
clc
stos
mov
sar
sub
out
or
xor
mov
add
fldcw
jb
sbb
or
mov
push
xchg
jo
loope
xor
jle
stc
jmp
cmps
mov
xchg
icebp
jg
enter
ins
dec
call
push
xor
push
add
jp
mov
lahf
mov
xlat
jns
push
outs
mov
push
stos
sbb
mov
add
fbstp
mov
ss
arpl
jp
mul
xchg
push
pop
push
data16
ret
(bad)
add
inc
mov
jnp
in
leave
out
add
test
adc
adc
mov
push
dec
ds
int
pop
mov
fdivr
int
inc
push
jecxz
pop
inc
pop
add
int3
mov
shl
adc
xchg
sub
call
fisubr
or
pushf
iret
inc
jae
gs
sbb
int
jns
fwait
mov
loop
(bad)
adc
mov
and
lods
cmp
mov
push
or
add
dec
sub
int3
icebp
mov
call
sbb
inc
jo
cli
in
xchg
or
sub
xor
jae
inc
adc
mov
arpl
xchg
cmc
adc
sbb
lods
sub
pop
sub
cmp
push
fsubr
repz
add
sbb
call
daa
out
add
cmp
mov
imul
lods
imul
xlat
jb
push
mov
push
inc
mov
sbb
xor
adc
xchg
test
in
aam
je
bnd
movs
sub
mov
outs
add
jnp
pop
xor
int3
push
sbb
or
out
pop
xchg
push
dec
arpl
into
pop
fld
lods
test
outs
call
and
and
xchg
pop
aaa
add
cmp
adc
add
pop
iret
outs
pop
sbb
and
fiadd
fistp
ficom
cmp
fidiv
xor
push
xchg
outs
enter
push
aas
and
out
leave
das
jecxz
cmps
fwait
hlt
jo
push
test
rcr
out
pop
dec
jno
mov
mov
jle
retf
repz
pop
lods
jno
retf
in
dec
mov
call
pop
call
inc
ja
push
or
ficom
arpl
mov
loop
rcr
add
jno
jg
test
or
shl
clc
xchg
add
retf
idiv
push
fldcw
and
ins
mov
test
inc
lock
int3
mov
loop
test
jae
inc
addr16
pop
imul
jle
shr
mov
neg
sub
gs
cmp
adc
ror
sbb
mov
fimul
inc
push
xchg
inc
fwait
cmps
push
mov
jae
int3
xlat
add
test
cmp
lds
lods
dec
cmp
stos
push
push
xor
xor
mov
rol
ds
jge
pop
pop
into
sti
sub
xchg
cmp
hlt
aas
jno
pop
lock
dec
cmp
xor
cmp
pop
bound
ret
cmc
pop
jno
jns
int
cli
clc
(bad)
mov
jecxz
mov
ja
dec
push
mov
outs
add
push
rcl
repnz
rol
push
cmp
(bad)
adc
inc
push
cdq
scas
mov
repnz
mov
in
and
jmp
and
inc
cdq
jnp
cli
sub
mov
dec
add
push
xor
inc
xlat
mov
dec
pop
adc
push
fiadd
xchg
imul
pop
movs
fcom
stos
lds
mov
cmp
mov
jecxz
(bad)
int
out
dec
xor
inc
loop
mov
std
pop
xchg
xor
loope
push
ins
push
cmp
pop
popf
push
stos
mov
sti
adc
enter
sahf
cmp
xchg
data16
sbb
sahf
popa
dec
mov
jb
adc
icebp
addr16
scas
and
(bad)
xlat
and
fist
loope
add
shr
int
add
loop
retf
mov
retf
inc
jle
fcom
rcr
or
(bad)
pop
cmp
dec
out
adc
ret
mov
fcmovnbe
test
sbb
sub
cmp
pop
mov
(bad)
and
or
in
fadd
or
xchg
daa
xchg
xchg
sar
mov
jl
ins
push
adc
ja
or
and
dec
mov
stos
sar
inc
(bad)
call
lods
pusha
mov
push
inc
xlat
ret
adc
popa
adc
les
adc
jo
(bad)
pop
sub
cld
dec
test
xchg
movs
sub
or
sti
outs
xchg
jns
jl
mov
and
scas
pop
xor
ficom
xchg
test
loopne
adc
push
cmp
xor
and
sub
dec
pop
int3
and
pop
cmp
out
xchg
xor
xor
scas
jns
in
imul
stos
mov
popa
repz
and
cmp
mov
jno
or
jnp
xchg
call
inc
cmp
std
sbb
dec
and
test
sbb
imul
xchg
aam
push
mov
xchg
sub
mov
adc
and
out
rdtsc
ins
cdq
lds
and
test
lock
cld
adc
in
data16
push
mov
cmp
or
pop
(bad)
outs
lahf
jge
add
dec
clc
sbb
arpl
not
ret
push
aas
jle
popf
jbe
mov
push
daa
in
adc
pop
add
test
inc
xor
push
cmp
pusha
add
lods
add
cld
mov
call
or
stos
xor
movs
inc
fcmovnbe
in
and
pop
arpl
sbb
xor
data16
mov
jmp
push
cli
dec
fisttp
fwait
movs
cmp
xchg
mov
lea
out
pushf
test
push
test
mov
icebp
cdq
jge
out
shr
push
jb
out
mov
add
ficom
popa
addr16
jno
shr
add
test
pushf
dec
lods
jne
inc
cmp
into
test
jge
fnsave
out
ds
stos
jmp
mov
mov
and
scas
sub
cmps
in
stc
push
(bad)
sbb
retf
ins
shr
pop
lahf
and
pop
arpl
cmp
xchg
std
mov
and
icebp
sub
mov
fisubr
and
mov
outs
and
div
ret
add
daa
clc
test
and
jecxz
mov
mov
mov
xor
cmp
loopne
jmp
cmp
sbb
test
mov
mov
xchg
mov
data16
jmp
pop
jno
out
mov
xchg
jle
push
call
outs
push
call
mov
outs
loopne
push
sar
push
dec
out
mov
and
inc
or
push
test
xor
gs
daa
push
pop
mov
cmps
sahf
adc
in
popf
and
cmp
ret
(bad)
in
inc
cmp
fidivr
movs
add
fwait
mov
cmp
jp
xchg
xchg
stc
jg
jne
ficomp
data16
mov
test
out
push
xor
lods
pop
add
sub
jb
(bad)
jl
inc
add
cmps
mov
repnz
rcr
dec
cmps
mov
leave
push
adc
sub
retf
mov
jp
push
mov
loopne
jno
push
daa
call
pop
pop
(bad)
dec
mov
ret
(bad)
xchg
adc
into
xor
cs
fidiv
sub
dec
pop
mov
adc
mov
fdiv
movs
cmp
add
jge
ss
mov
add
xor
js
imul
or
sub
test
cld
(bad)
test
push
mov
js
or
mov
jae
mov
cmc
aad
sub
mov
mov
cmp
xor
retf
inc
mov
jmp
nop
outs
and
(bad)
mov
pop
es
sbb
pop
xchg
jbe
gs
mov
jnp
pusha
aaa
jp
mov
pushf
mov
dec
ins
sub
es
popa
mov
mov
push
sbb
jmp
adc
xor
sub
sbb
clc
js
shr
retf
or
cli
repz
pop
cld
mov
adc
lahf
or
cmp
scas
shl
movs
test
pusha
xor
sahf
jecxz
adc
mov
ja
mov
pop
and
call
out
js
mov
inc
mov
call
dec
lea
xchg
sbb
push
push
pop
push
dec
sub
xchg
jbe
outs
sbb
into
sbb
shr
mov
sub
and
popa
adc
push
and
and
mov
push
gs
fidivr
sbb
adc
xchg
rcr
dec
dec
fcmovu
nop
add
sub
inc
out
icebp
cmp
cdq
and
sbb
mov
call
fst
lods
pop
push
das
xchg
imul
cmp
mov
iret
les
std
aad
daa
sbb
psrld
(bad)
push
(bad)
mov
xchg
in
enter
pop
imul
cmp
retf
movs
and
adc
xchg
lahf
loop
loopne
inc
jl
cmp
add
mov
mov
inc
sub
cli
jle
test
add
aaa
dec
idiv
push
cli
mov
cmp
xor
sbb
sahf
(bad)
mov
call
sub
lods
ret
sbb
js
push
sbb
es
mov
lea
cmp
cld
mov
ja
popf
ins
and
mov
adc
add
push
jns
aad
inc
cmp
sar
movs
dec
sub
retf
call
xor
dec
lea
js
mov
jp
sahf
icebp
mov
jmp
jns
mov
push
outs
(bad)
mov
pop
rcl
call
sub
(bad)
jecxz
iret
repz
cmp
test
mov
dec
jbe
inc
push
add
add
push
lods
push
sbb
in
retf
mov
sub
xchg
add
cwde
stos
into
mov
jp
or
add
inc
push
fsub
(bad)
ja
std
out
idiv
xor
sub
inc
cld
addr16
xlat
repnz
scas
jnp
fcmove
xchg
test
jge
sbb
pop
push
or
mov
pop
(bad)
fsubr
emms
jae
cdq
stc
inc
cmp
push
fidivr
jae
std
sti
pop
pop
push
leave
pop
xor
out
sbb
test
xor
push
fs
add
dec
pmulhw
fnsave
dec
xchg
les
rcl
cmc
dec
push
in
(bad)
push
sub
mov
xchg
jne
dec
fsubr
xchg
pop
add
jge
ds
mov
xchg
fwait
and
jp
xor
pop
add
das
mov
and
sbb
sbb
not
mov
add
stos
fs
int3
inc
das
add
jmp
clc
xor
fld
push
loope
outs
clc
aam
ss
retf
add
scas
dec
sub
ss
cdq
adc
shl
mov
inc
lds
xchg
jecxz
scas
dec
dec
sub
jo
test
adc
mov
sub
aad
add
jge
pop
sti
add
out
or
jno
outs
mov
int3
jnp
shl
dec
pop
xchg
mov
push
popf
cmp
mov
add
(bad)
adc
xor
fdiv
js
out
jno
inc
daa
int3
pop
jmp
xor
xor
push
inc
jmp
sar
retf
inc
xchg
mov
jge
jg
(bad)
imul
xlat
call
loopne
repz
outs
pop
mov
and
cld
(bad)
scas
xchg
int
je
mov
xchg
stc
xchg
mov
dec
stos
mov
std
vpmadcswd
dec
(bad)
lock
push
add
je
mov
imul
add
cwde
pop
or
inc
mov
lock
and
popa
push
jne
jnp
dec
daa
lods
daa
scas
inc
popf
cmc
mov
mov
add
icebp
add
(bad)
dec
jge
out
mov
loope
inc
sub
nop
movs
fs
mov
and
iret
xchg
cmps
nop
loopne
(bad)
fidivr
or
aam
call
out
test
mov
into
or
adc
test
adc
sbb
mov
les
or
jbe
cwde
inc
scas
lods
retf
movs
daa
xor
jmp
jp
push
bound
pushf
push
das
aam
ds
(bad)
pop
loop
cmp
(bad)
mov
(bad)
(bad)
sbb
in
xchg
pop
ret
push
fadd
repz
xor
or
ins
inc
mov
jno
cwde
das
es
bound
lds
push
imul
mov
add
mov
dec
outs
push
adc
mov
mov
jne
outs
cmc
das
fsubr
ins
inc
sbb
and
or
mov
ficom
dec
pop
fwait
pop
in
(bad)
data16
or
ret
sbb
cmp
jno
out
mov
aaa
xchg
xchg
ror
int3
popa
loopne
inc
mov
pop
ins
or
addr16
call
jae
and
pop
inc
xchg
mov
and
outs
lahf
retf
push
adc
inc
dec
in
imul
shr
outs
ds
lds
ds
inc
test
inc
inc
xor
jmp
pop
loope
ins
jecxz
pop
jle
aad
cmps
les
dec
retf
aad
lea
and
sbb
rcl
xchg
mov
push
ins
dec
dec
mov
xor
mov
mov
push
ja
mov
fidivr
mov
icebp
loope
xchg
fst
dec
js
js
ins
xchg
xor
xchg
cmp
sbb
jnp
repz
bound
daa
sub
sub
cli
sub
mov
div
cli
cmp
shr
leave
push
addr16
sub
push
jle
push
lock
dec
adc
rcr
xchg
mov
fisubr
push
and
popf
mov
jl
popf
jnp
hlt
lahf
sub
pop
aas
mov
shr
jg
(bad)
xlat
fs
(bad)
fadd
sti
mov
push
(bad)
pop
outs
retf
pop
leave
push
jecxz
aam
fucomp
pop
rcr
sub
mov
xor
mov
cmp
mov
(bad)
fmulp
sbb
loope
pop
push
(bad)
mov
mov
jae
inc
mov
popa
jbe
sub
fldenv
adc
or
xor
mov
sar
test
outs
pop
(bad)
mov
pop
lods
jne
jae
push
sub
out
fist
jne
fmul
inc
and
jnp
js
retf
lods
nop
push
imul
add
daa
outs
(bad)
cmp
push
adc
push
adc
mov
and
push
mov
pusha
mov
loopne
jnp
in
(bad)
(bad)
cli
dec
idiv
ss
cmps
push
lahf
(bad)
mov
enter
clc
test
jp
cld
dec
xor
sub
neg
in
(bad)
fldcw
inc
or
xchg
bound
xor
std
int
jne
cs
test
loope
dec
push
and
jge
je
or
sbb
in
jl
cwde
push
dec
test
mov
jnp
or
jno
mov
mov
sti
and
call
or
jle
retf
pusha
sbb
mov
fxam
and
push
call
jno
enter
aam
retf
aas
jae
les
cmp
scas
popf
fstp
ss
jns
pusha
push
bound
sub
ins
xchg
fdivrp
retf
xor
outs
in
mov
addr16
into
and
sbb
ret
std
xchg
std
rcr
rcr
push
test
dec
jl
sub
pop
popf
(bad)
shr
push
jne
(bad)
and
or
retf
dec
sbb
cli
xchg
das
lea
out
mov
dec
cdq
test
xor
xor
in
mov
mov
(bad)
mov
fcom
xchg
scas
and
push
cmp
mov
cmp
pop
out
sbb
or
sbb
mov
je
fdivr
aaa
or
mov
mov
cmc
sub
imul
loop
mov
pop
mov
mov
mov
rcl
mov
push
fwait
dec
inc
sti
ds
sub
aam
cmp
xor
test
pusha
mov
inc
mov
addr16
stos
dec
and
sbb
jmp
and
jmp
inc
sbb
std
shl
mov
push
or
mov
mov
addr16
cwde
(bad)
dec
adc
mov
rol
or
sbb
xor
sub
sub
push
ret
sbb
scas
lea
mov
lods
popa
add
pop
cmp
push
ret
mov
ins
movs
cmps
lods
loopne
movs
std
aam
xchg
push
cmps
mov
fistp
into
sbb
and
mov
cmps
imul
data16
fld
sub
retf
xchg
nop
leave
lock
or
sti
out
mov
dec
imul
push
adc
clc
shl
retf
xor
arpl
aam
mov
mov
and
mov
jne
(bad)
das
xor
test
push
out
dec
stos
lahf
cli
pop
fst
ret
js
shl
lods
in
mov
loope
adc
int3
scas
les
test
xlat
clc
xchg
xlat
adc
aaa
ss
mov
cmp
xchg
test
pushf
push
sub
shl
test
jb
cmc
test
push
outs
xchg
mov
(bad)
cmp
mov
dec
and
jne
(bad)
jecxz
retf
mov
sti
arpl
icebp
inc
push
fcom
dec
pop
fild
mov
dec
cmp
jg
inc
xor
int
mov
jmp
stos
push
sub
or
mov
(bad)
sbb
jmp
cld
cli
mov
cmp
adc
pop
daa
xor
and
test
lock
add
(bad)
fld
xor
xchg
out
sub
out
das
cmps
les
sar
dec
repz
outs
pop
or
push
popf
js
ror
sbb
in
test
jge
adc
inc
jmp
push
jae
shl
add
mov
sbb
add
in
dec
add
enter
ins
lods
div
ror
sub
xchg
in
or
mov
pop
adc
adc
movs
(bad)
ja
inc
mov
cwde
test
movs
pop
ds
ja
bound
xlat
dec
and
leave
mov
(bad)
mov
dec
push
pop
sub
xchg
or
fidivr
clc
inc
mov
sbb
jno
add
ror
in
pop
cli
cwde
pop
rcl
sti
mov
xor
cmps
sub
sub
dec
cmp
retf
mov
and
(bad)
das
movs
data16
sub
loop
jg
mov
retf
mov
(bad)
test
pop
cli
(bad)
cmps
push
mov
rcr
aad
test
(bad)
out
inc
mov
shl
mov
xor
popf
push
cmc
dec
retf
push
inc
inc
jae
(bad)
std
daa
inc
pop
dec
sub
call
inc
hlt
int
mov
pop
je
push
cmp
test
ret
fcomp
sbb
mov
adc
mov
dec
aam
mov
iret
in
call
jle
xchg
adc
cmps
cmp
mov
dec
push
push
pop
test
pushf
jl
adc
xor
in
or
sbb
xchg
jae
dec
ret
mov
cdq
mov
ret
pop
and
xor
out
sub
push
pop
dec
jns
sahf
lea
jnp
dec
imul
sar
call
lods
movs
jbe
fld
stos
pop
push
or
mov
hlt
jbe
fist
xchg
mov
(bad)
gs
pop
out
stc
test
or
push
xor
mov
retf
pop
sub
into
cmp
aaa
shl
in
dec
call
dec
loope
(bad)
stos
pusha
add
jb
push
mov
jns
inc
xor
mov
ret
retf
in
add
jmp
outs
in
inc
cwde
fist
jle
xchg
mov
arpl
in
inc
(bad)
jmp
push
dec
xlat
push
movs
imul
sbb
mov
pop
fdiv
xlat
mov
loope
adc
pop
mov
sub
sub
stc
or
clc
(bad)
adc
sub
jge
pop
adc
mov
(bad)
lods
repz
xor
es
mov
mov
mov
pop
cmp
les
jecxz
inc
sbb
dec
mov
dec
adc
popa
movs
mov
int3
push
jnp
test
dec
pop
xchg
lods
std
dec
mov
retf
or
cmp
xchg
xchg
mov
imul
mov
push
mov
retf
push
repz
ss
cmps
sbb
addr16
xchg
push
adc
lahf
push
cmp
sbb
pop
sbb
inc
sub
neg
mov
cmc
loope
mov
retf
mov
jg
sub
test
hlt
in
int3
retf
xor
sub
xor
sbb
dec
aam
loopne
push
fidivr
jmp
sub
ins
retf
inc
jo
dec
cmp
(bad)
cwde
adc
in
ud2
add
arpl
jmp
arpl
cmp
xchg
idiv
das
cmc
xlat
test
mov
sbb
ror
cmp
jge
sub
push
sbb
jge
pop
jle
add
ds
dec
pop
jb
push
mov
or
arpl
lods
cmp
dec
int
bound
cld
fwait
mov
outs
test
or
xchg
std
adc
loop
in
jae
hlt
mov
mov
pop
test
loope
bound
shr
cmp
shl
sub
ja
ret
int
jge
sbb
stos
jae
mov
and
push
fstp
jecxz
pop
(bad)
xlat
bound
mul
(bad)
(bad)
inc
into
cmps
addr16
add
hlt
sahf
mov
inc
xchg
imul
mov
in
xchg
cli
mov
sbb
fs
out
inc
(bad)
push
xlat
cdq
(bad)
and
mov
retf
jae
jle
cdq
push
ja
dec
aad
cmps
fimul
fsub
add
(bad)
cmp
cmp
test
adc
push
mov
cmps
addr16
test
xchg
fistp
mov
popf
imul
dec
sbb
clc
je
mov
repnz
js
in
inc
(bad)
push
sbb
cmc
cld
xor
adc
sub
jle
mov
fcom
ins
ret
mov
adc
je
jecxz
(bad)
into
shr
out
cmp
popf
pop
cmp
stos
cmp
pusha
jmp
clc
outs
cmps
add
jne
(bad)
push
call
pop
test
lahf
lds
test
mov
out
sbb
push
cdq
dec
xchg
ins
push
jp
and
push
js
enter
or
and
xchg
push
cmp
xchg
push
sub
jb
in
or
mov
sbb
int
outs
(bad)
push
mov
leave
push
int3
xchg
pop
and
inc
push
pop
cmp
ret
add
pusha
xchg
xor
pop
je
int3
pop
mov
push
mov
jb
xchg
jns
ja
mov
std
daa
aas
pop
daa
fs
mov
mov
mov
test
pushf
outs
add
adc
dec
movs
push
in
jbe
mov
xor
cmps
xchg
xchg
ja
nop
imul
test
inc
mov
cld
int3
enter
inc
and
int
call
add
cdq
(bad)
cld
or
push
and
retf
cmp
nop
fidiv
and
ret
jne
adc
xor
or
ja
stc
ss
icebp
fnsave
movs
sbb
outs
xchg
pop
lods
add
call
mov
mov
mov
loope
jne
jp
push
sbb
mov
js
test
movs
sub
dec
inc
sub
mov
mov
fst
push
pusha
jbe
xchg
(bad)
cmp
cmp
sub
mov
rol
lock
call
leave
cmp
leave
sti
xchg
mov
les
retf
idiv
call
add
add
xchg
inc
mov
push
leave
je
xchg
dec
mov
jne
stos
push
pop
fild
mov
add
add
push
enter
jbe
mov
outs
add
daa
loop
fst
fldenv
push
(bad)
cmp
call
push
pop
test
imul
push
sbb
xchg
imul
pop
sub
cmp
jp
mov
mov
stc
pushf
inc
lock
ret
retf
hlt
mov
xor
enter
xchg
push
mov
sbb
jns
rol
or
push
xchg
sbb
mov
aaa
call
cmc
sbb
mov
repnz
(bad)
or
and
dec
push
sbb
push
and
lods
scas
repnz
sub
mov
loop
popa
arpl
loope
mov
in
push
sti
mov
test
vpaddsb
mov
fisttp
scas
or
mov
add
sbb
test
jp
fild
pop
xor
cmps
fucomip
inc
xor
rcr
cmp
lods
mov
sub
or
adc
jb
push
inc
out
fidiv
lea
inc
cmp
sbb
es
and
cmps
jns
lock
jge
sub
mov
lahf
dec
jno
imul
sub
jnp
lods
mov
lock
cli
test
mov
and
(bad)
aas
test
push
dec
xor
xor
mov
dec
cmp
icebp
push
adc
xor
je
jl
mov
lods
scas
sub
inc
push
repnz
sub
mov
pop
cmp
mov
xchg
xchg
cmp
inc
cmp
aas
in
(bad)
adc
daa
mov
mov
mov
xchg
icebp
cmp
popa
pop
lods
sub
sti
and
fwait
mov
mov
ret
push
and
out
stos
dec
sub
out
adc
loopne
and
or
enter
and
jge
mov
or
das
xor
inc
inc
jae
add
fucomip
nop
cmp
clc
dec
push
jp
aad
dec
ret
jns
mov
aam
xor
xchg
sbb
aad
mov
pop
inc
push
dec
mov
add
xor
mov
fadd
adc
repnz
enter
cwde
jmp
repz
jo
dec
(bad)
push
lods
jnp
ins
jno
movs
stos
add
mov
and
xor
cmp
add
dec
push
call
hlt
jae
xchg
adc
popa
cmp
mov
mov
inc
xchg
pop
push
mov
call
push
add
pop
xchg
out
pop
mov
cmps
push
call
cmp
jbe
mov
sub
fld
pop
call
jge
dec
push
das
pop
add
in
out
ja
cli
mov
loop
(bad)
xor
jmp
push
cmp
and
(bad)
cmp
jae
shr
and
stc
mov
gs
in
cmovp
test
jp
push
cmp
mov
jne
pushf
shl
sub
sbb
icebp
mul
rcr
adc
mov
pop
adc
or
cwde
leave
es
bound
push
pop
fnsave
push
or
jl
adc
es
inc
mov
imul
push
inc
out
xchg
jo
pop
push
stc
loopne
test
pushf
jo
div
daa
fnstsw
mov
cld
les
in
imul
popf
jecxz
xchg
xchg
sbb
mov
adc
pop
out
xchg
es
fadd
add
rcr
test
or
push
enter
fucom
mov
push
cdq
fsub
add
popa
and
pop
dec
mov
sbb
sub
xor
mov
inc
int3
sbb
cdq
sahf
jbe
shr
mov
in
xchg
jge
aad
enter
xchg
sub
daa
sub
xor
jbe
mov
add
sbb
add
xor
out
and
out
fmul
stc
cmc
cmp
sbb
push
mov
sar
push
mov
adc
xor
xchg
inc
and
fcmovne
(bad)
ins
push
mov
cmp
sbb
xchg
(bad)
(bad)
fmul
cmp
ja
and
add
xchg
jg
aas
out
cmp
xor
xchg
cmc
enter
push
ret
mov
bound
sbb
inc
and
mov
dec
nop
inc
shl
ins
pop
arpl
cmps
test
xlat
sub
and
mov
fidivr
in
adc
dec
lahf
or
push
rcl
fsubr
sbb
jno
dec
out
(bad)
sbb
and
or
dec
movs
xchg
movs
lea
fdivp
mov
sbb
mov
jnp
xor
jne
adc
in
and
push
jp
xchg
lods
or
dec
idiv
addr16
jns
pop
push
imul
adc
test
pusha
xchg
(bad)
sub
mov
pop
jmp
cmps
inc
adc
cld
add
retf
stos
sbb
bound
pop
mov
lahf
mov
xchg
shl
push
mov
imul
xor
ins
jp
sbb
int3
sub
jle
sub
cmps
or
(bad)
xchg
jns
repnz
push
jmp
pop
jecxz
dec
pop
fldl2t
popa
mov
mov
enter
jo
sahf
std
ss
sahf
adc
jns
hlt
retf
mov
sbb
aas
push
or
out
jp
mov
das
jno
cmp
xchg
imul
or
fwait
push
in
out
call
icebp
rcr
adc
and
or
push
(bad)
mov
push
xchg
mov
clc
xchg
in
mov
enter
cmp
mov
into
jns
pushfw
repz
inc
lds
mov
push
cdq
mov
pushf
jg
mov
inc
mov
das
ja
ret
ret
mov
sub
mov
popf
add
jbe
sub
scas
les
or
test
adc
je
sahf
adc
sbb
mov
dec
mov
push
loope
pop
fwait
cdq
pop
mov
inc
add
adc
icebp
int
adc
les
cmp
dec
stos
cmp
inc
and
mov
jmp
mov
jmp
sahf
mov
arpl
cmps
xor
bound
fcomp
out
mov
jbe
(bad)
sbb
inc
push
inc
dec
push
test
dec
xchg
adc
ja
call
push
push
bound
ds
push
sti
outs
jmp
xor
test
sbb
sub
add
pop
(bad)
jae
clc
jge
in
ret
je
push
addr16
inc
inc
outs
jmp
mov
cmp
push
arpl
mov
sbb
test
ins
mov
adc
or
sub
call
fnsave
icebp
jle
out
mov
mov
cwde
invd
add
sbb
jmp
add
nop
or
jge
mov
inc
xlat
mov
adc
jo
and
imul
push
sbb
dec
jge
stos
and
xor
jl
jns
in
dec
aad
inc
lods
mov
in
into
and
jo
inc
mov
sub
sbb
mov
cmps
daa
movs
stos
addr16
push
pop
shl
push
xor
cld
cmc
xchg
mov
das
mov
sub
ja
sar
pushf
and
scas
clc
shl
sub
add
enter
movs
pop
rcr
cdq
les
movs
test
out
bound
pop
mov
xor
xor
cmc
in
mov
ins
ffree
enter
inc
cwde
aaa
xlat
cmps
jb
push
xchg
(bad)
pop
sbb
repz
ja
pop
pop
pop
sbb
jmp
pop
cmp
movs
cmps
xchg
add
shl
stos
xchg
popa
pusha
jmp
iret
mov
lods
int
icebp
mov
xchg
fistp
jmp
test
or
push
push
loopne
test
mov
fwait
dec
xchg
call
mov
mov
xchg
jl
cmp
ss
ror
test
jo
stc
adc
inc
xlat
add
fstp
pusha
out
push
mov
loop
dec
sbb
ins
cmp
mov
and
nop
imul
mov
icebp
mov
call
and
sbb
stos
stos
fadd
mov
sub
mov
xchg
sahf
cdq
stos
cdq
xchg
fbld
into
pop
call
lock
jno
aas
stos
(bad)
rcr
inc
popa
mov
or
test
jnp
mov
or
mov
in
mov
clc
imul
aaa
ins
ins
outs
jmp
xor
stc
addr16
lods
enter
sbb
aas
xchg
push
retf
sbb
inc
inc
jno
or
cwde
out
cmp
pushf
shr
lods
test
sub
push
jg
adc
xlat
add
xchg
push
repz
push
adc
and
jne
mov
les
loopne
je
dec
rcr
inc
outs
fild
ds
jne
(bad)
and
out
or
test
movs
and
into
or
loop
and
or
jo
dec
in
and
mov
pushf
mov
push
stos
cs
mov
outs
ja
xchg
mov
popf
dec
retf
sar
ins
cmc
imul
jl
in
sbb
lods
scas
in
or
mov
cld
lock
cmc
mov
repnz
lods
sti
mov
rol
mov
xchg
push
test
pop
shl
and
jno
ret
lds
sbb
stos
or
pop
push
out
imul
inc
push
push
aaa
int
(bad)
xchg
stos
sbb
ins
ins
pop
jmp
adc
(bad)
out
in
iret
loope
dec
jbe
cmp
sbb
xor
cdq
xlat
stos
scas
cmp
rol
loope
xchg
mov
cmp
test
add
popa
dec
inc
xchg
sbb
outs
mov
idiv
outs
outs
ins
shr
sub
mov
lods
push
cmp
outs
and
inc
ret
jae
cmp
dec
stos
out
je
lock
outs
xlat
pusha
dec
int3
add
rcl
sbb
loop
test
adc
pusha
in
mov
xchg
loope
add
and
scas
and
fnstenv
adc
inc
or
push
std
add
imul
adc
punpckldq
icebp
mov
(bad)
sub
ret
call
and
outs
mov
adc
and
adc
pushf
xchg
je
and
cmp
outs
cwde
lea
sbb
ret
dec
lods
cmps
sub
and
inc
push
inc
adc
adc
jl
inc
add
mov
sahf
fwait
sbb
jp
and
sub
add
inc
mov
pmaxub
inc
pop
pop
in
push
dec
pushf
mov
fidivr
pop
clc
push
and
leave
loop
adc
push
mov
(bad)
imul
sbb
mov
mov
sahf
hlt
(bad)
sbb
(bad)
dec
xchg
cdq
ret
mov
mov
(bad)
xor
cmp
jmp
adc
dec
add
(bad)
aaa
nop
and
sub
jge
xor
and
scas
es
popf
sub
popa
push
ins
and
pop
jmp
ret
inc
mov
mov
add
in
mov
xchg
ja
push
xor
ficom
jl
jge
lods
dec
xlat
jmp
and
and
jg
out
or
daa
call
dec
jae
and
xor
pushf
stos
dec
add
jo
fimul
xchg
fwait
and
mov
cmp
mov
dec
fsub
mov
ja
scas
sub
pop
xchg
xchg
xchg
push
push
fisttp
add
ins
sub
hlt
sahf
pop
or
xchg
mov
jo
jle
int3
imul
addr16
pop
in
stc
in
pop
cmp
push
hlt
cmp
mov
shr
pop
push
push
inc
push
das
sub
add
and
mov
retf
loope
push
xor
sbb
cmp
sbb
xor
push
jae
jns
or
dec
push
jnp
inc
or
adc
mov
push
jb
xor
aaa
pop
addr16
and
dec
aas
push
jle
mov
mov
cmp
and
push
nop
cdq
shl
pop
std
dec
repz
adc
adc
sub
and
aaa
sti
nop
outs
test
stos
pop
sbb
sbb
shl
pop
mov
sub
xor
imul
sbb
(bad)
adc
iret
(bad)
jl
add
loopne
mov
sbb
pop
push
scas
jmp
jb
xchg
ret
stos
mov
lahf
ds
push
fdivr
sbb
fld
jp
lds
(bad)
sbb
in
or
ds
and
and
fistp
inc
jno
dec
push
adc
lahf
mov
test
rcr
hlt
mov
or
cmp
jp
dec
inc
sub
jle
xchg
add
rcr
rcl
mov
fdivr
add
inc
loopne
fidiv
pushf
ror
jmp
pusha
mov
or
addr16
into
mov
pop
repnz
out
xor
fcomp
or
leave
push
cmp
fwait
adc
test
inc
pop
outs
or
fs
ja
push
pop
add
pusha
hlt
hlt
push
mov
jo
outs
jne
add
ins
loop
rcl
mov
dec
ja
sar
loop
hlt
sub
ficomp
and
push
mov
cmp
pop
aad
cmp
call
gs
push
ret
cmp
mov
outs
dec
loopne
dec
fstp
sub
js
dec
ret
jbe
nop
mov
(bad)
stc
fsincos
cmp
inc
jecxz
push
dec
out
test
enter
call
int3
push
test
dec
rol
cli
jae
push
ds
mov
cwde
inc
pushf
adc
fld
dec
fdiv
dec
jmp
(bad)
in
add
int
jmp
nop
push
(bad)
adc
sbb
sti
xor
(bad)
ds
int
gs
lods
movs
jae
add
add
loop
les
mov
xor
mov
xlat
mov
sub
mov
xchg
sahf
aad
inc
rcr
cmp
xchg
adc
call
cs
add
jmp
sub
repnz
sbb
cmps
push
cmps
fsubr
cmc
daa
inc
sbb
imul
ret
js
fcmovbe
xor
and
std
dec
sub
jge
xchg
push
xchg
sti
xor
xchg
jns
out
aam
adc
ss
adc
shl
es
and
and
xchg
imul
pop
or
dec
aas
push
cs
popa
jb
jae
jecxz
or
push
das
mov
mov
(bad)
jo
xor
loopne
inc
jns
cwde
and
fs
mov
call
jl
call
jae
adc
out
shr
xor
xchg
adc
mov
inc
cmps
(bad)
jmp
jb
and
out
movs
mov
dec
in
sbb
leave
lock
dec
fadd
mov
inc
jp
cmp
jle
in
adc
dec
out
loopne
adc
jmp
jl
(bad)
and
mov
mov
cmp
xchg
into
rcl
jge
push
std
jo
(bad)
lea
call
repz
cmp
cwde
sub
inc
cmp
sti
popa
call
xor
mov
test
or
xchg
jns
(bad)
test
cs
push
je
dec
and
sahf
(bad)
test
outs
dec
cwde
cdq
push
aas
sbb
pop
in
dec
xor
mov
cli
mov
adc
lds
nop
cmova
xchg
stos
jecxz
lea
repz
loopne
xor
ins
mov
or
or
mov
scas
add
ret
mov
scas
mov
xchg
imul
into
fs
hlt
jbe
jg
addr16
push
jb
in
jnp
jmp
dec
cmc
inc
cwde
scas
xchg
in
(bad)
mov
lock
fcomp
or
cmp
mov
pop
sbb
in
das
add
push
sbb
cmc
dec
fisub
(bad)
(bad)
and
nop
ror
inc
dec
test
push
sub
jg
adc
cmp
call
das
cmp
fwait
push
jmp
jno
gs
sbb
dec
adc
test
pop
test
cmps
popa
imul
out
jne
rcl
mov
jp
inc
fild
cmp
adc
pop
jae
mov
sub
push
(bad)
sbb
cmp
das
pop
mov
pop
call
sbb
ror
lods
ss
cmp
sub
and
xchg
mov
test
sahf
adc
and
dec
shr
sbb
test
push
sar
or
or
(bad)
adc
in
sbb
and
(bad)
xchg
and
cmp
popf
stc
das
inc
ror
(bad)
jo
fld
pop
arpl
rcr
push
inc
(bad)
retf
iret
push
(bad)
jmp
push
nop
jg
xor
call
pop
mov
push
(bad)
repz
dec
jmp
push
mov
push
xor
jmp
repz
xor
mov
(bad)
aaa
or
sahf
shl
inc
cmp
(bad)
icebp
test
or
stos
dec
ret
lock
test
test
add
xchg
push
test
out
mov
sbb
inc
nop
or
ins
hlt
scas
(bad)
in
sbb
ret
sub
leave
in
fisub
pop
retf
or
sbb
mov
int3
iret
retf
sti
jg
out
add
dec
mov
ss
cmp
and
clc
(bad)
cs
aaa
popa
push
leave
mov
bound
xor
cmp
cli
mov
inc
mov
bound
ins
out
loopne
inc
adc
mov
jmp
imul
pop
lock
mov
rcr
inc
out
cmc
cmp
xor
cwde
jmp
sbb
loope
add
arpl
mov
les
and
lahf
ins
adc
fst
(bad)
sub
xchg
pop
jnp
fiadd
mov
pop
cli
jp
out
in
popf
jbe
stos
or
and
jge
movs
pop
sahf
jp
shr
push
cmps
pop
pop
push
inc
enter
xor
fs
stos
cli
rcl
jecxz
ret
mov
cmc
xor
xchg
jno
push
push
pop
xchg
push
call
stc
pop
push
dec
ja
loop
dec
stos
mov
sbb
ds
cmp
mov
std
xchg
stos
mov
retf
mov
cmp
sub
mov
mov
bnd
or
jp
int3
in
pop
jecxz
retf
outs
sbb
call
sub
dec
(bad)
cld
or
cmp
add
jb
sbb
inc
mov
(bad)
movs
pushf
pop
into
daa
jns
mov
hlt
shl
repz
dec
loopne
cmp
xchg
popa
std
scas
stos
push
jl
cwde
mov
pop
mov
sub
mov
inc
adc
sbb
inc
jl
mov
add
dec
mov
in
add
pop
add
addr16
add
adc
sbb
mov
xchg
sub
jo
and
(bad)
call
aam
mov
adc
fxch
out
clc
mov
xchg
fwait
push
and
movs
mov
adc
or
push
dec
and
or
cld
movs
out
or
addr16
in
add
xchg
cmc
mov
push
ins
inc
arpl
test
or
mov
mov
enter
mov
dec
jmp
aam
pusha
sub
outs
(bad)
aaa
and
xchg
sub
ret
jo
sahf
add
and
aad
outs
sti
sub
jb
mov
mov
into
ja
ja
hlt
pop
mov
ficom
dec
jnp
jecxz
je
and
lds
mov
inc
xor
jns
cpuid
lds
fwait
aas
retf
lea
cmp
dec
stos
les
or
dec
pop
ret
and
sbb
psubd
cli
fs
and
daa
clc
or
je
sub
mov
adc
inc
in
mov
ins
cmp
mov
xor
sbb
mov
fst
lahf
and
adc
pusha
adc
jl
jno
pop
sub
adc
cmp
add
std
jbe
xor
sbb
jno
jae
mov
nop
ins
outs
ins
jl
xchg
scas
loope
leave
das
mov
es
jno
ja
mov
test
jno
imul
shl
in
cmps
mov
push
shl
cmp
xor
or
adc
into
bound
push
xchg
jae
dec
aaa
or
test
dec
adc
in
mov
push
ror
data16
mov
jno
xchg
pop
dec
test
out
xchg
shr
test
cmp
push
inc
mov
mov
iret
cmp
lea
and
push
xchg
cmps
or
(bad)
into
ins
retf
push
ins
(bad)
lods
scas
hlt
aad
xor
and
sbb
pop
fild
inc
xchg
in
aad
ins
jns
sbb
adc
push
stc
jecxz
iret
jmp
inc
adc
jns
out
jnp
cs
or
dec
mov
scas
test
and
or
jno
mov
push
xchg
daa
add
pop
and
pusha
mov
cwde
and
hlt
push
adc
retf
sub
push
xor
int3
cmp
sub
sbb
xchg
push
jmp
aam
call
jne
mov
cmp
pop
nop
add
add
lahf
lods
xchg
loopne
(bad)
rcl
jge
push
jecxz
loopne
fcomip
jmp
pop
retf
shl
fiadd
aam
pusha
lds
mov
mov
inc
das
arpl
or
pusha
fcomp
das
mov
enter
push
jb
leave
daa
inc
std
arpl
push
or
pop
dec
add
mov
pop
imul
dec
lock
mov
aas
ins
inc
push
lods
in
xor
bswap
cdq
dec
(bad)
and
cs
movs
imul
ds
xlat
aas
popf
xchg
lods
jns
mov
aam
sub
mov
sbb
add
xchg
jg
retf
jb
mov
cmp
xchg
ror
int
mov
clc
shl
sub
cmp
(bad)
repnz
sti
rcl
mov
dec
lods
sub
push
pop
mov
(bad)
repz
call
xchg
mov
ror
add
leave
in
xchg
ins
push
xchg
add
jb
and
loopne
mov
or
mov
adc
xor
cwde
dec
jecxz
cs
and
imul
bound
adc
mov
jbe
lods
or
(bad)
(bad)
fistp
lock
dec
jb
and
xchg
stos
in
gs
sub
xor
sbb
sbb
xchg
add
cmp
jmp
or
jae
push
retf
movs
test
lods
sbb
xor
fisub
inc
mov
pop
scas
cdq
mov
repz
test
mov
lea
xlat
rcr
ror
cmp
add
xchg
push
ja
std
or
mov
jo
pop
adc
mov
gs
add
enter
cli
jg
je
fldenv
adc
jns
xchg
or
stos
movs
enter
mov
cwde
test
outs
dec
enter
gs
cmp
add
and
leave
ffreep
imul
jmp
jnp
and
xchg
pop
sbb
dec
inc
pop
arpl
jbe
fs
jmp
icebp
adc
xor
out
dec
and
or
arpl
call
and
adc
xchg
or
rol
lods
jmp
rcr
ja
mov
imul
scas
jno
jle
std
or
pop
mul
mov
mov
add
mov
add
or
clc
pop
aaa
lods
xor
cmp
lahf
(bad)
ins
aaa
push
ficomp
js
xor
sti
add
push
jg
ret
pop
inc
mov
gs
cli
or
jo
ror
xchg
(bad)
jnp
inc
inc
enter
xchg
sahf
ror
retf
cmp
cld
fninit
add
popa
mov
mov
push
xor
inc
jmp
push
adc
arpl
stos
adc
lods
mov
inc
inc
and
mov
dec
push
jge
push
in
and
xor
aad
lea
xor
inc
ss
xchg
cmp
cmp
js
scas
stos
sub
inc
pop
ins
call
adc
mov
loopne
fimul
fldcw
lahf
je
jno
fisttp
push
out
jne
push
mov
(bad)
pop
or
fist
sub
daa
jbe
or
rcr
(bad)
pop
cld
shl
sbb
cmova
out
dec
stc
dec
xchg
gs
mov
sub
jns
sub
addr16
cmps
aam
fdiv
jo
add
test
pop
xchg
mov
pop
je
leave
cwde
test
cld
mov
push
inc
ja
movs
int
(bad)
stos
mov
push
fs
movs
add
and
movs
pop
dec
mov
ds
enter
jae
stos
aam
imul
jns
adc
sbb
out
ins
(bad)
sahf
xchg
mov
inc
xchg
pushf
push
sub
es
idiv
pop
and
xor
out
cmp
lea
xor
mov
cmp
push
stc
pushf
jecxz
jmp
and
push
add
inc
add
lahf
jmp
sar
add
or
mov
jbe
imul
sub
add
adc
sub
add
repz
xchg
mov
push
fcomi
jp
sar
test
push
jmp
add
loopne
sub
mov
clc
popf
push
adc
in
or
mov
xchg
push
adc
std
das
mov
inc
pop
loop
aaa
dec
cwde
push
mov
(bad)
gs
mov
(bad)
jbe
pop
push
fistp
ja
(bad)
(bad)
mov
fcmovnu
push
push
cmp
iret
jnp
lock
movs
sub
push
push
loop
test
movs
pop
cmps
call
sub
and
mov
(bad)
cmc
cmc
mov
js
leave
sar
cdq
push
mov
pop
leave
stc
dec
dec
add
jp
mov
sub
mov
data16
push
leave
aaa
jmp
stos
les
retf
or
test
fnstsw
bound
push
pop
les
push
in
add
mov
pop
or
stos
and
mov
je
fisubr
mov
xchg
cmp
sub
add
add
cwde
js
enter
cmp
mov
mov
popf
push
jge
scas
movs
(bad)
xor
jge
movs
scas
push
dec
repz
cwde
and
dec
sub
imul
retf
jne
sub
mov
into
ds
and
push
cmp
cmp
pop
and
dec
xor
mov
lahf
add
test
push
int
jne
jge
push
inc
pop
bnd
xchg
test
xchg
mov
pop
pop
push
fwait
add
adc
ret
gs
ret
add
hlt
pop
popa
lods
mov
sub
dec
loope
xor
sbb
cmp
lea
daa
adc
push
xor
call
aas
ret
mov
in
ins
popf
push
adc
lock
out
inc
and
and
imul
leave
mov
mov
leave
and
jg
cmp
push
dec
inc
(bad)
test
out
imul
mov
cmp
data16
mov
sbb
xchg
in
and
inc
ss
nop
enter
xchg
rol
jmp
add
xchg
jmp
les
cmp
dec
aaa
add
jle
in
icebp
pushf
add
test
or
add
sub
sub
jbe
xor
sti
inc
(bad)
test
fcom
inc
push
pop
dec
dec
rol
pop
and
das
inc
mov
in
iret
xor
xor
out
pop
jle
ja
xor
and
sub
fwait
cld
test
or
pop
fist
pop
xor
fcomip
in
mov
xor
fiadd
gs
push
in
jbe
pop
aad
repz
xor
fnstcw
lahf
pavgw
mov
inc
xchg
stc
xor
scas
test
and
mov
cwde
jmp
xor
xor
inc
pop
or
pop
outs
jne
scas
ja
ins
pop
jo
inc
push
sbb
mov
repz
outs
int3
ja
mov
loope
stos
pusha
and
sub
sub
(bad)
faddp
test
sub
and
push
les
push
pop
sbb
push
arpl
mov
dec
and
mov
push
cmp
lds
bound
jns
pop
fs
call
xchg
adc
enter
cmps
sub
cmc
cld
stos
ds
mov
push
out
stc
or
inc
add
ja
push
sub
pop
add
clc
in
js
addr16
add
mov
jg
mov
outs
cmps
push
iret
jecxz
xchg
sbb
pop
sub
jne
jmp
push
ds
sub
jmp
out
fisub
pop
(bad)
cs
pushf
out
das
mov
ss
fcomp
mov
add
out
loope
mov
add
push
fdiv
sbb
xchg
push
(bad)
jmp
push
jno
mov
jo
fild
out
xor
cld
mov
and
sub
repz
or
data16
mov
inc
push
dec
hlt
and
leave
movs
push
fidivr
out
pop
sti
rcl
add
nop
(bad)
data16
xchg
dec
jp
bnd
xchg
stos
fwait
inc
dec
loop
int3
lahf
mov
mov
jle
jo
scas
lea
repnz
inc
jbe
mov
and
out
sbb
or
xchg
out
loopne
int
add
and
pop
cmc
mov
dec
add
aad
sub
lods
lods
xchg
pop
xor
push
gs
jo
xchg
cmp
(bad)
jne
push
jecxz
loope
push
int3
cmp
fcmove
jmp
mov
jnp
jecxz
bound
xchg
or
scas
pop
jle
test
pop
adc
mov
leave
jge
jge
and
aas
icebp
pop
lods
or
push
push
repz
popa
es
xor
inc
xor
aam
sub
push
jbe
pusha
in
add
or
jl
adc
pop
mov
pop
mov
(bad)
jle
ficomp
jge
push
out
inc
pop
mov
inc
dec
bound
jmp
jae
mov
movs
jl
or
adc
imul
(bad)
fisttp
dec
scas
movs
add
inc
ds
add
xor
add
mov
(bad)
dec
add
in
imul
cmp
jmp
sbb
in
and
cmps
xor
add
sub
and
sub
or
loopne
push
fist
add
and
cwde
inc
and
neg
mov
leave
test
cmp
xchg
adc
addr16
or
lods
ins
fst
jo
mov
sahf
mov
push
and
inc
test
pop
sbb
push
mov
or
in
mov
movs
pop
xchg
mov
jecxz
dec
push
jle
lods
cmp
iret
retf
mov
cmp
fimul
xor
jg
mov
ret
inc
arpl
cmp
(bad)
xor
jae
and
inc
mov
mov
sti
jnp
shl
and
aaa
(bad)
mov
or
stos
xchg
mov
aaa
sbb
jbe
push
lock
retf
call
xor
mov
mov
cwde
iret
push
xor
dec
or
inc
lahf
call
or
lahf
or
in
jae
mov
dec
(bad)
xchg
or
call
mov
call
popa
shr
mov
sahf
int
mov
mov
sub
mov
mov
xchg
sub
jmp
cmc
jbe
push
cmps
and
mov
(bad)
adc
push
push
sbb
xor
pop
dec
stos
fisubr
out
pop
test
pop
in
pop
xor
dec
inc
(bad)
jl
scas
test
push
shr
cmps
frstor
popf
imul
mov
dec
loope
ja
pop
cmp
jl
sub
sub
fsubr
inc
dec
int3
ret
push
ds
pop
and
sub
(bad)
cli
mov
in
xor
pop
test
mov
mov
jae
jp
neg
aam
pop
pop
cmp
push
lock
mov
dec
xchg
xchg
add
inc
icebp
out
hlt
add
in
pop
and
js
rol
mov
(bad)
cli
popa
call
leave
cmp
pop
dec
in
jae
push
sub
bnd
jne
or
inc
fdiv
mov
cmps
xchg
cmps
repnz
clc
out
cmc
pop
mov
mov
add
fnstcw
lods
mov
lods
jmp
in
ret
push
mov
xchg
ins
cli
sti
inc
test
ja
xor
stos
pop
jno
addr16
mov
mov
adc
retf
outs
std
sub
dec
popw
mov
dec
jg
and
retf
jne
pusha
in
and
in
adc
mov
ds
std
into
push
(bad)
push
mov
pushf
adc
retf
mov
mov
xchg
ret
shl
pop
scas
add
adc
xor
push
push
jae
cmp
jmp
andnps
ror
fisttp
outs
mov
loop
jmp
in
pop
enter
(bad)
movs
fcom
dec
ins
out
or
in
cmps
adc
mov
in
mov
cmps
xchg
call
xchg
enter
iret
(bad)
hlt
std
jle
sub
pop
outs
cmovp
mov
jg
fidiv
mov
cmp
(bad)
sbb
popf
pusha
mov
imul
rcl
jns
loopne
pop
push
test
xor
mov
push
je
mov
jbe
imul
lahf
cmps
ja
cmp
pushf
aaa
push
add
repz
sbb
popa
inc
jno
popf
nop
test
loop
cs
addr16
outs
and
and
adc
mov
add
shl
cmp
bound
inc
pop
add
cmp
pushf
add
or
mov
add
push
std
iret
sub
mov
ins
cmp
fld
push
add
fdivr
dec
rol
lods
xor
mov
rol
jae
ins
pop
pop
cld
xchg
js
sbb
adc
cmp
enterw
std
jmp
sbb
mov
jno
jmp
jo
aaa
xchg
or
pop
loop
dec
loop
mov
jg
push
mul
cli
xor
iret
lahf
dec
or
xor
cmps
add
sbb
sub
fucomi
test
sbb
mov
test
inc
dec
jno
test
iret
jg
ret
adc
mov
jbe
mov
ds
test
jmp
adc
xor
mov
dec
push
clc
jmp
mov
fist
add
pop
inc
mov
and
mov
mov
pop
pop
pop
(bad)
mov
adc
fs
mov
mov
nop
jg
(bad)
push
jno
cdq
popf
pop
mov
inc
(bad)
mov
scas
outs
pop
mov
gs
pop
xchg
rcr
ds
test
sbb
adc
push
jbe
shr
out
pusha
dec
cld
popa
cmp
ret
mov
jne
rol
(bad)
into
cmps
mov
cmp
cmp
loopne
retf
ficom
mov
push
cmp
iret
bound
dec
stos
in
out
sbb
idiv
ret
lods
test
ret
int
add
push
bound
jae
aam
(bad)
(bad)
mov
leave
xor
inc
mov
popa
pushf
sbb
jno
cmp
in
mov
cmp
cmp
push
jmp
outs
sub
or
cmp
icebp
or
pop
les
and
cmp
das
mov
shr
pop
shr
jmp
adc
mov
mov
pop
mov
xor
fst
xor
ins
jae
or
(bad)
icebp
adc
sbb
add
mov
mov
fdiv
inc
fisub
sub
icebp
sub
jp
sbb
xor
sub
dec
inc
adc
shl
sbb
mov
scas
pop
cmps
and
sahf
int3
sub
dec
(bad)
gs
call
js
cmp
dec
popf
leave
pop
sbb
and
test
pop
fadd
push
mov
mov
idiv
hlt
cmps
inc
inc
out
sti
nop
stc
xchg
loope
pop
cmp
mov
icebp
sahf
cli
stc
xchg
cmp
je
xor
sbb
repnz
bound
cmp
xchg
push
sbb
lea
cld
into
movs
xor
pop
add
jbe
mov
lahf
sbb
out
repnz
imul
cld
sub
jo
std
(bad)
aam
(bad)
scas
shl
mov
les
push
div
test
cvtdq2ps
or
adc
hlt
mov
mov
int3
sahf
out
cmps
push
mov
xor
or
or
sub
ja
cmp
int
push
test
mov
mov
es
push
inc
jne
mov
jle
test
je
adc
call
dec
or
fwait
rol
mov
xor
outs
push
test
loop
xor
popf
(bad)
push
daa
sub
pusha
pop
add
fwait
mov
dec
mov
outs
inc
gs
inc
adc
adc
dec
xchg
adc
jg
xor
into
xor
pop
jae
sub
and
and
cmps
int3
mov
shl
pop
add
mov
pop
dec
lahf
sbb
mov
and
loop
sbb
nop
push
imul
ror
addr16
jno
mov
test
dec
mov
and
test
mov
fiadd
imul
xor
or
fiadd
and
jge
mov
enter
test
mov
repnz
call
jl
(bad)
fld1
retf
jbe
(bad)
mov
or
aaa
loope
ja
rcl
mov
in
fs
jmp
sbb
cmp
clc
xor
mov
xlat
in
sar
mov
push
das
fs
mov
dec
movs
call
ins
push
rcl
mov
sub
gs
rcl
push
pop
in
scas
mul
xchg
fs
jnp
dec
bound
inc
cmp
mov
push
cli
(bad)
jge
fwait
mov
psubb
mov
inc
lea
sahf
pop
repz
inc
dec
jo
pop
(bad)
cli
addr16
ror
dec
es
test
out
aas
icebp
jl
dec
mov
add
mov
adc
mov
in
fwait
stc
xlat
not
mov
cld
push
pop
loope
xchg
jnp
push
cmp
pop
clc
jp
out
outs
pop
imul
jle
dec
push
sub
std
add
jg
(bad)
mov
inc
adc
adc
fwait
cmp
adc
pop
in
fidiv
jnp
add
or
adc
mov
popf
icebp
add
and
xor
xor
pop
retf
(bad)
jmp
fnstsw
adc
mov
fs
cmp
mov
cmp
fcmovne
xor
inc
add
or
adc
mov
inc
pusha
fs
inc
in
jns
dec
call
adc
enter
cmp
push
dec
outs
add
movs
scas
push
into
adc
stos
pop
loope
out
nop
and
xchg
jb
and
pop
dec
out
test
xchg
fld
add
jo
adc
dec
dec
mov
sahf
dec
(bad)
pop
or
sbb
cmp
pop
loopne
(bad)
fstp
xchg
or
pop
js
mov
cli
xor
pop
fisub
push
aam
outs
les
jmp
scas
std
sahf
dec
push
iret
mov
cwde
jl
scas
outs
jmp
push
mov
or
int
dec
add
mov
dec
mov
sbb
ret
add
cs
add
cmp
mov
mov
xchg
cdq
aaa
jbe
movs
pop
pop
mov
adc
das
stc
outs
test
out
movs
mov
mov
popa
xor
mov
adc
sbb
add
mov
es
loope
pop
mov
mov
rcr
dec
lahf
js
mov
cmp
pusha
pop
int3
xor
or
push
push
shr
jmp
sti
into
sub
mov
sbb
jo
cmp
outs
inc
lds
stc
int
cs
aas
push
test
ficomp
gs
inc
jle
add
nop
inc
xor
xor
shl
push
inc
push
repz
les
iret
adc
and
sbb
xor
push
push
xchg
push
mov
in
xchg
push
pusha
add
sbb
ret
das
xor
dec
ss
shl
xchg
xor
lds
xchg
push
call
lock
ss
idiv
and
xchg
out
stc
push
mov
mov
out
fsubr
jo
repz
mov
sbb
mov
adc
cmp
vpmacsswd
mov
fadd
ins
push
js
popa
dec
pop
popf
dec
and
mov
aad
imul
add
cmp
inc
imul
xchg
mov
mov
retf
pop
(bad)
int
pop
out
cmp
sbb
fld
retf
mov
inc
cmp
scas
add
scas
sub
mov
xlat
mov
icebp
push
sub
xor
in
loop
mul
push
jle
call
fsub
enter
inc
or
stc
push
out
lods
scas
je
cmp
cs
dec
mov
cwde
cmc
add
jns
ds
adc
fs
adc
and
pop
jne
bound
js
sbb
mov
dec
adc
ror
std
leave
mov
sbb
pop
sub
mov
cmc
and
jb
fisub
jmp
pop
push
pop
fcomi
cdq
scas
scas
jmp
xor
call
out
(bad)
xchg
jecxz
loop
sub
push
jl
and
or
cmp
loope
jo
xchg
mov
dec
mov
xchg
int
repz
jne
cmp
out
call
stc
and
sub
inc
or
retf
out
ret
inc
push
(bad)
loopne
repnz
cli
adc
outs
les
mov
mov
inc
push
hlt
es
stos
es
lods
repnz
or
mov
inc
push
aas
fbld
push
dec
jl
xchg
iret
jge
cmc
movs
fld
das
test
jecxz
clc
xchg
inc
push
pusha
dec
movs
inc
cmc
ins
jno
inc
mov
cli
adc
sub
push
mov
ror
sbb
mov
(bad)
in
sub
fstp
aaa
ret
test
test
sbb
sub
or
sti
push
mov
pop
pop
lds
xchg
retf
hlt
dec
xor
sti
push
rcr
and
jb
test
fwait
inc
push
fwait
out
fsubr
inc
push
cmps
cmps
pop
jno
mov
mov
xor
adc
xchg
and
jmp
mov
lahf
outs
inc
repz
jecxz
pop
bnd
adc
test
jl
ret
adc
call
cmp
scas
arpl
in
loopne
sar
jle
dec
dec
cmp
nop
cmp
int
xor
dec
mov
(bad)
daa
jmp
loopne
jle
pop
lods
inc
ja
jns
iret
xchg
(bad)
cld
mov
repz
aam
xchg
cmp
cmp
mov
mov
xchg
and
repz
ins
retf
push
cwde
add
cmp
retf
ja
fcom
cs
cmp
or
mov
retf
push
cmp
pop
repnz
in
sub
rcl
pop
fstp
and
mov
sbb
xor
xor
push
rcl
fstp
les
lods
call
daa
pop
and
ins
and
(bad)
push
inc
add
das
push
cmp
mov
cmp
addr16
mov
movs
xor
mov
or
sbb
adc
rcr
jecxz
inc
jmp
je
sbb
cmp
popf
push
aad
pop
mov
add
aad
add
cmp
add
mov
mov
std
imul
fs
mov
ss
or
imul
and
and
leave
dec
rcl
aas
shr
mov
(bad)
loopne
jp
(bad)
les
pop
out
pop
sub
mov
repnz
daa
int
mov
xor
mov
cmp
xor
pop
aas
stos
mov
jae
pop
loope
and
sub
pushf
push
mov
imul
jecxz
arpl
pop
xchg
mov
out
mov
int
inc
test
(bad)
movs
mov
mov
sub
adc
fwait
push
das
mov
outs
(bad)
int3
add
sub
and
inc
mov
mov
inc
xchg
jmp
inc
mov
and
add
das
mov
mov
xchg
pop
imul
cmp
sub
clc
and
jb
xchg
dec
enter
jp
pop
je
(bad)
mov
cmps
cdq
gs
aaa
and
xchg
pop
(bad)
xor
jmp
mov
ins
fcmovnbe
pusha
push
cmp
pop
add
jno
cmc
mov
fs
pop
cmp
mov
dec
not
mov
loop
dec
sbb
ins
(bad)
pop
popf
xchg
ins
fnstsw
and
(bad)
mov
push
push
loope
inc
psllw
ret
inc
shl
in
cdq
(bad)
hlt
ins
outs
pop
ins
(bad)
aam
push
outs
inc
nop
or
sub
push
sub
lock
add
push
retf
cmps
cmp
cmp
xchg
mov
sub
ja
dec
stos
ins
outs
jp
scas
scas
mov
test
add
jno
in
in
mov
push
mov
or
xchg
jecxz
(bad)
gs
cwde
sub
lock
scas
pop
jmp
jecxz
push
sbb
xchg
push
jae
fmul
dec
fcmovb
(bad)
fsubp
pop
fsubr
popa
xchg
jle
(bad)
sub
shl
neg
jecxz
mov
mov
imul
pop
sahf
lds
test
scas
out
gs
xchg
clc
in
stc
add
aam
sar
cmc
adc
sbb
jo
stos
mov
retf
xor
adc
mov
out
and
dec
cmp
push
aas
repz
add
bound
mov
jno
cmps
rcr
std
add
outs
jl
adc
lahf
dec
jp
int3
sbb
pushf
(bad)
pop
cld
xchg
call
mov
js
ins
mov
mov
mov
add
inc
pop
rcl
outs
(bad)
in
shl
inc
(bad)
lods
inc
or
mov
fwait
mov
aaa
sbb
ja
lods
push
push
test
icebp
mov
jne
mov
cmps
dec
aad
lea
inc
inc
push
mov
or
pop
fistp
outs
dec
jae
stc
cs
inc
fcom
mov
push
push
psllq
dec
mov
lahf
sbb
add
popa
shr
mov
(bad)
int3
into
into
jb
cs
out
pop
in
movs
add
adc
and
add
jb
jg
push
ficom
push
pusha
fisttp
mov
addr16
daa
imul
xor
inc
mov
cmps
and
mov
xor
xor
out
cmp
mov
adc
xchg
xor
add
out
mov
call
mov
rcl
in
clc
int3
scas
pop
mov
ds
mov
clc
xor
data16
cmp
lock
cmps
std
cwde
in
pop
pushf
adc
mov
aas
mov
fcmovb
sub
rcr
and
and
mov
test
fwait
loope
dec
push
fild
or
lahf
push
out
and
sar
pop
jmp
push
dec
clc
pop
int
dec
aaa
xchg
ds
fwait
cmp
popf
mov
cmp
outs
call
popf
in
retf
test
hlt
gs
sub
ds
push
pop
and
xchg
loop
pop
fidivr
test
(bad)
fwait
add
pop
xchg
addr16
mov
sbb
xchg
sahf
mov
xor
out
outs
add
inc
movs
cld
jmp
aam
fwait
pop
loop
pop
xor
pop
shr
jmp
rcl
ins
in
fistp
cwde
clc
xor
retf
add
test
(bad)
xor
cmp
jae
mov
stos
fstp
out
leave
mov
outs
fidiv
xchg
mov
sub
ins
test
ja
sub
jecxz
(bad)
test
imul
or
call
cmps
mov
adc
mov
cmp
rcl
pop
out
call
mov
fisub
xchg
push
in
push
ss
rep
adc
mov
push
scas
dec
stos
add
adc
mov
cmp
jge
cmps
push
mov
in
xor
mov
cdq
mov
xchg
jle
call
and
sub
push
(bad)
aaa
adc
sub
mov
mov
icebp
add
test
push
nop
adc
jg
sbb
mov
daa
push
or
dec
pusha
out
or
out
fidiv
ins
or
sbb
sub
dec
mov
jge
jmp
sub
ja
mov
push
mov
test
ja
fist
into
pop
fcomp
xor
sub
out
xchg
inc
pop
cli
int
jp
mov
adc
or
div
pop
mov
stos
jae
(bad)
jno
jb
mov
enter
mov
ins
repnz
movs
jg
(bad)
stos
or
and
aas
sbb
adc
stc
std
std
popa
xchg
pop
pop
cmps
das
jle
lea
lods
sbb
adc
das
mov
ret
dec
sar
adc
sub
sbb
clc
fnsave
(bad)
jecxz
mov
inc
and
or
push
(bad)
push
daa
shr
lods
inc
pusha
sahf
push
icebp
pop
inc
mov
sub
lock
and
hlt
and
and
sahf
pop
pop
adc
adc
std
adc
dec
je
cli
cld
push
and
setl
jae
mov
loope
or
push
ins
cli
out
pop
push
xchg
daa
sti
or
inc
sti
int3
bound
cmp
sar
retf
ficom
push
pop
(bad)
sar
frstor
retf
ror
xor
or
aaa
jmp
std
push
iret
lea
pusha
dec
popf
mov
xchg
push
stc
mul
mov
pushf
xor
lock
or
push
add
fiadd
sub
mov
xchg
add
jmp
aas
mov
or
dec
daa
loope
imul
pand
mov
shr
out
adc
mov
dec
(bad)
js
les
inc
std
imul
outs
fwait
inc
aam
(bad)
mov
adc
or
xchg
xchg
out
out
xchg
push
jne
aad
ja
jg
xchg
push
and
cld
(bad)
sub
mov
inc
cmp
scas
jae
aas
nop
sbb
fcomp
xchg
mov
adc
xchg
loop
outs
mov
lea
lock
ret
test
pop
fld
adc
cmp
retf
pusha
jmp
mov
xchg
sub
jne
ret
fs
aad
adc
dec
in
push
sub
stc
cmp
and
neg
pop
adc
repz
lods
loope
sbb
push
inc
pop
pop
jae
jg
addr16
fs
cmps
shr
pop
fadd
pusha
jae
fnclex
push
dec
cs
cmp
(bad)
loope
adc
retf
icebp
lods
push
iret
leave
les
sub
movs
movlps
cs
push
rcl
mov
(bad)
pop
or
pop
pop
mov
xchg
aaa
sti
mov
pop
out
lods
add
add
pop
sub
jne
into
mov
sub
loopne
mov
jns
push
ds
add
mov
mov
xsave
mov
aaa
inc
jge
pop
out
mov
push
pop
js
ret
ret
popa
mov
shl
daa
xor
cwde
xor
jo
fstp
popa
mov
fisttp
add
xor
mov
repnz
loop
bound
dec
arpl
jmp
test
dec
or
jmp
lods
test
cmp
int
push
sub
or
mov
add
push
shr
jg
push
out
rep
inc
mov
sub
mov
hlt
aad
mov
ins
icebp
icebp
xor
push
imul
mov
ins
xchg
sub
fadd
jp
shl
rol
mov
jl
adc
cld
scas
rcl
xchg
call
aaa
jne
xor
xchg
sbb
in
xchg
mov
daa
lods
push
pushf
or
inc
mov
mov
repz
push
inc
std
lea
push
call
push
xchg
icebp
jmp
lods
stc
sbb
jg
sar
pop
dec
stos
push
jge
fnstenv
xor
mov
and
add
call
in
sbb
lahf
loope
inc
popf
jae
(bad)
pop
mov
jg
cwde
popf
inc
fs
xor
adc
jge
cmc
pop
xchg
movs
adc
inc
ins
push
jp
adc
xchg
dec
jecxz
pusha
out
mov
in
ja
mov
push
es
inc
push
cs
je
jle
lea
xor
mov
xchg
sbb
inc
xchg
jbe
or
or
cld
xor
lods
jo
mov
push
test
cmc
out
add
mov
add
adc
inc
outs
mov
fwait
sahf
dec
in
frstor
ins
imul
inc
xchg
popf
adc
repnz
mov
(bad)
xor
(bad)
sahf
out
pop
les
cmp
pop
pushf
hlt
call
dec
cmp
push
test
test
lds
jecxz
mov
push
cld
gs
jmp
mov
outs
xchg
pusha
xor
pop
jle
xor
pop
fcomp
push
adc
jmp
xchg
movs
mov
shl
ficomp
stos
aaa
add
adc
out
out
leave
loop
cmp
and
(bad)
mov
pop
cmp
fs
out
inc
xchg
popf
out
and
sub
clc
sbb
mov
cli
pop
retf
mov
test
cwde
lahf
(bad)
out
xchg
out
(bad)
test
jl
ror
popa
sbb
dec
test
(bad)
or
xchg
push
(bad)
out
sub
std
or
lahf
rol
pop
xlat
pop
jb
sar
stos
fwait
push
(bad)
arpl
outs
jb
fbld
mov
push
bound
idiv
inc
cmc
(bad)
mov
jo
push
gs
push
cmc
aaa
mov
mov
inc
(bad)
hlt
in
add
add
sbb
iret
gs
ins
add
sbb
adc
lea
and
xchg
mov
or
jg
(bad)
sar
imul
sub
jp
pop
push
out
retf
cs
fstp
jnp
in
out
sahf
xor
movs
ds
mov
pop
or
shl
push
jmp
(bad)
cmp
mov
dec
cmp
lods
mov
lock
mov
pop
sahf
bound
dec
push
pop
(bad)
ffree
gs
dec
ret
ins
jmp
push
push
call
shl
mov
(bad)
xor
add
cmp
jae
out
fst
or
push
inc
cmp
(bad)
sahf
aam
adc
cdq
push
(bad)
push
(bad)
and
push
dec
add
and
cmps
inc
xchg
xchg
fwait
adc
fidivr
movs
push
cs
pushf
jp
inc
jle
repnz
pop
adc
mov
sbb
sti
push
lds
test
dec
xor
shl
mov
sub
or
and
outs
imul
jns
mov
adc
int
inc
mov
or
push
scas
dec
(bad)
fnstcw
sbb
in
push
sahf
sub
add
pop
mov
pop
push
push
movupd
cmps
fstp
cmp
into
out
test
xchg
ins
xchg
(bad)
add
ins
loopne
inc
cmp
mov
push
and
or
cmps
and
movs
push
sbb
ins
cmps
gs
add
and
cmp
jle
mov
xchg
cmp
sar
push
stos
or
test
jns
xor
push
retfw
dec
test
mov
retf
sub
ret
jo
push
jle
imul
jg
fisttp
fst
push
xor
mov
test
test
mov
add
retf
loopne
sbb
mov
les
aam
aas
and
jns
mul
les
sahf
ins
in
adc
stos
stc
xor
xchg
inc
enter
test
cmp
aad
cmp
lea
pusha
repz
jo
add
cmp
or
jg
lds
sar
cmp
or
xchg
bound
sub
or
and
xor
stos
shl
jb
jg
dec
inc
sub
out
and
repz
adc
xchg
xor
(bad)
retf
push
outs
ror
inc
mov
and
es
lea
ss
out
in
jns
pop
movs
fcomp
mov
add
imul
fdivp
dec
retf
inc
fimul
rcr
cmc
add
stos
movs
cmp
not
in
cmps
aad
add
adc
test
fbld
and
mov
xchg
in
mov
fbstp
(bad)
jle
retf
jno
jae
mov
push
cmp
pop
jg
xchg
sbb
jbe
jo
mov
jnp
pop
ins
mov
mov
int3
jl
mov
pop
je
cs
repnz
add
jecxz
jl
pop
sub
mov
sub
or
cmc
xor
(bad)
inc
pop
push
mov
loopne
push
push
push
push
adc
hlt
cmp
push
lods
idiv
or
leave
scas
ret
(bad)
es
dec
jmp
test
out
sub
leave
js
adc
repnz
out
out
xor
lds
dec
cmp
aas
mov
pop
jbe
shl
dec
std
sahf
jecxz
(bad)
push
xchg
ror
call
idiv
mov
cmc
les
push
movs
ins
sbb
cwde
pop
call
mov
scas
into
shl
adc
pop
cmp
cmps
imul
inc
push
jae
stc
mul
test
xor
push
or
xor
movs
fsub
xor
aas
pushf
or
mov
test
movs
fild
fs
in
push
int3
int
fstp
sbb
aaa
call
imul
cmc
jns
leave
push
cld
fist
pop
mov
xor
retf
push
cdq
cmc
dec
cwde
sti
mov
push
gs
into
hlt
jae
dec
xor
jp
xor
and
repnz
fistp
xlat
sahf
sbb
(bad)
sahf
into
out
test
push
inc
inc
retf
iret
cmp
pop
push
iret
sbb
and
cmp
adc
mov
daa
jle
xchg
cwde
test
jno
pop
or
(bad)
js
xchg
test
test
mov
fstp
es
sti
or
push
test
inc
mov
jmp
sub
push
jo
pop
div
cmp
jno
fwait
ja
dec
sbb
ror
fnstenv
sub
jg
pop
push
(bad)
lea
pop
mov
adc
mov
call
or
xor
push
xchg
ret
int3
xchg
add
stc
iret
adc
inc
call
in
js
lahf
aaa
sbb
bound
push
push
(bad)
push
arpl
mov
jns
inc
retf
ss
dec
mov
(bad)
cmp
(bad)
or
leave
and
jecxz
popf
or
dec
add
xor
fdiv
xchg
push
mov
cdq
pop
cdq
icebp
rcl
mov
sti
loope
sub
mov
xchg
jle
cmps
loope
cmps
ins
repz
mov
fdivr
push
xchg
jecxz
dec
push
pop
test
xor
jmp
mov
jnp
or
add
stos
idiv
inc
popa
mov
inc
add
dec
in
vphaddwd
jmp
stc
jns
mov
mov
sub
dec
aam
add
neg
in
imul
das
cmp
and
pop
push
sar
mov
(bad)
clc
(bad)
in
mov
lea
(bad)
sub
cld
shl
(bad)
nop
or
mov
int
push
mov
fdiv
fs
mov
test
or
mov
lds
xor
popf
stos
mov
je
mov
sbb
(bad)
popa
mov
call
lods
cmps
cmovne
pop
cmps
jmp
jmp
fwait
pusha
frstpm(287
(bad)
outs
movs
adc
mov
and
sub
fidiv
outs
bound
inc
sub
mov
int3
pusha
sar
xor
pop
jae
add
jle
and
push
add
pop
mov
inc
push
jle
shl
dec
out
fs
pop
sub
fwait
mov
mov
cdq
aam
inc
xchg
cdq
icebp
call
in
pop
(bad)
sub
lea
mov
daa
adc
jp
retf
(bad)
aam
ficomp
shufps
jmp
dec
inc
xchg
das
ror
or
ror
push
jns
cmp
pop
in
(bad)
cmp
dec
mov
lods
or
push
or
and
enter
sub
in
add
mov
cmc
jno
adc
ja
addr16
call
std
dec
xchg
adc
loopne
inc
fs
pop
push
push
jo
and
push
leave
xchg
or
call
mul
mov
cmc
shl
or
aam
and
cmp
(bad)
xchg
mov
sub
fwait
neg
(bad)
jmp
mov
test
pop
cmp
outs
arpl
jmp
push
sti
cs
dec
idiv
rcl
mov
rcr
push
jo
sub
and
stos
mov
aas
outs
xor
frstor
jp
mov
push
mov
movs
sti
in
ja
mov
call
fsubr
sbb
sbb
mov
lods
and
mov
scas
sbb
jp
mov
cmp
xor
iret
push
out
jnp
adc
popf
mov
add
retf
mov
std
stos
mov
pop
pop
xlat
loop
rol
push
mov
mov
jl
pop
or
xor
inc
paddusb
cmps
pop
sub
in
sub
xor
clc
pop
push
mov
mov
xchg
sti
test
dec
es
test
outs
fs
in
sar
sbb
or
retf
sub
jle
int3
sbb
stos
or
test
add
mov
mov
sub
pushw
je
outs
xlat
cmps
clc
aad
jecxz
je
inc
mov
or
int3
scas
push
mov
push
mul
in
xor
in
pop
mov
and
rcl
pcmpgtw
jno
loopne
pop
jle
imul
ja
pop
out
ficomp
out
lock
dec
pop
mov
sar
fst
add
div
mov
jnp
push
test
jnp
fiadd
das
lods
aad
es
push
dec
sub
mov
popa
pmovmskb
sbb
mov
gs
fadd
sub
js
out
ret
mov
repnz
mov
stc
sbb
scas
in
mov
movs
stos
aas
fst
xchg
push
pop
xchg
out
in
lock
outs
dec
aaa
jo
gs
neg
call
cmps
xchg
fcmovb
test
push
dec
rol
fwait
xchg
and
push
sahf
sbb
repz
push
push
out
mov
ret
retf
inc
and
push
aad
pop
dec
jg
dec
fstp
arpl
xor
pop
ds
xchg
xor
out
xor
std
cdq
or
add
cld
mov
add
nop
cmp
cmp
test
pop
pop
jle
fwait
mov
cmp
out
push
pusha
mov
stos
leave
nop
sub
push
aas
add
push
call
cs
push
mov
test
push
stc
jmp
arpl
retf
sub
jae
mov
sbb
pop
adc
outs
add
xor
or
jge
mov
adc
cdq
jle
jecxz
fs
repnz
aas
ins
cmp
fild
push
cmp
cmp
adc
mov
mov
jno
popf
mov
popf
push
push
mov
test
push
out
jnp
movs
sbb
xor
cmp
aas
mov
jne
ror
std
xor
ins
lock
ins
jo
rcr
add
mov
mov
ret
mov
fs
mov
gs
cld
add
pop
leave
ds
jl
xchg
adc
xchg
or
int3
clc
out
into
fld
mov
jae
and
xchg
or
(bad)
and
pushf
pop
cmp
push
adc
sub
sub
repnz
clc
dec
add
inc
sbb
pop
adc
das
jmp
inc
mov
inc
in
or
(bad)
cs
lahf
leave
push
das
xchg
pop
stos
outs
push
fidivr
int3
adc
cwde
retf
xchg
repz
out
push
cmp
lods
xor
mov
mov
and
pusha
mov
mov
inc
add
xor
(bad)
push
sbb
stos
push
movs
in
cmp
jnp
loopne
mov
xor
jne
or
ins
ror
fsubr
pushf
fsubr
cmp
out
(bad)
dec
and
push
sbb
(bad)
mov
xchg
dec
xor
inc
pop
dec
std
arpl
cmp
mov
jbe
shl
and
inc
dec
dec
add
sub
xchg
jl
sub
(bad)
jg
push
jns
bound
push
add
test
lea
push
mov
mov
and
push
out
mov
or
mov
dec
xchg
imul
ja
jns
bound
pop
add
test
ins
loop
scas
scas
in
ss
daa
mov
mov
stos
or
test
dec
loopne
test
adc
pop
addr16
les
ror
cmp
sbb
lock
adc
push
adc
mov
mov
jp
je
cmp
sbb
pushf
fwait
cmp
push
retf
out
add
sbb
mov
imul
xchg
push
push
lods
dec
js
dec
scas
inc
in
xor
mov
push
inc
jge
sub
imul
adc
aas
or
adc
xor
dec
nop
cmp
mul
pop
cmp
jge
push
jmp
jns
ins
hlt
push
xor
cli
out
leave
jmp
dec
mov
ficomp
xchg
in
mov
xchg
fadd
sbb
pop
out
movs
iret
stos
mov
cmp
call
icebp
mov
fmul
lock
dec
mov
cmp
jo
mov
sbb
add
inc
cmp
mov
jne
and
je
aam
add
push
xchg
retf
mov
ror
inc
sbb
rcr
mov
fisttp
xchg
mov
loopne
xchg
cwde
inc
pop
xchg
inc
mov
fst
sti
sbb
sub
ror
hlt
enter
call
cmp
jmp
ins
cld
dec
sub
loope
mov
cs
pop
adc
xor
stos
loope
xor
ins
in
pop
jl
test
dec
ins
rol
js
or
sbb
adc
lock
lods
xor
dec
rol
lock
(bad)
pop
std
add
aad
dec
push
add
mov
push
dec
std
jbe
add
mov
mov
push
xchg
xchg
pop
mov
loope
add
mov
sbb
mov
bound
inc
jecxz
xor
test
dec
push
sub
pop
push
or
aad
pop
jbe
(bad)
jnp
into
int3
dec
dec
adc
adc
inc
jno
inc
mov
jmp
stos
mov
lods
in
je
aaa
je
shr
xor
movs
push
ret
arpl
xchg
adc
xchg
inc
cmp
addr16
mov
int3
pop
cmp
frstor
pop
mov
fsubr
xlat
or
aas
sub
jae
jl
add
mov
cli
cli
inc
fsub
(bad)
in
dec
pushf
mov
js
and
adc
push
mov
popa
aas
mov
arpl
clc
inc
clc
mov
add
pusha
je
xlat
std
xchg
repz
or
fsubr
adc
and
pop
sbb
xchg
sti
psubusw
xor
xchg
mov
int
fs
add
inc
push
jno
ins
and
and
push
popa
enter
lds
outs
ret
cmc
out
xchg
mov
stos
inc
sub
ds
in
xchg
int
lock
xor
test
dec
ds
loope
push
int
retf
repnz
push
loope
es
xor
fs
fadd
cmp
mov
dec
fadd
cmp
aaa
jmp
int
repnz
mov
push
pop
mov
into
push
(bad)
outs
or
mov
mov
aam
dec
jle
push
dec
pushf
cdq
fisttp
or
shl
cmp
gs
shl
pop
jmp
gs
ins
xchg
mov
jp
popf
adc
sub
hlt
jmp
add
mov
inc
imul
mov
std
add
in
sbb
mov
data16
aas
jp
aam
adc
retf
cmp
xor
mov
adc
mov
sub
sub
out
aad
add
fnstenv
loop
mov
and
mov
inc
hlt
sub
imul
pop
xchg
cs
lock
ins
out
pop
push
pop
mov
shl
out
out
inc
ror
sar
push
or
xchg
inc
mov
jno
jl
and
push
std
mov
mov
ss
mov
dec
aad
push
mov
pop
dec
and
mov
push
mov
idiv
push
adc
jg
mov
dec
ss
sar
mov
inc
mov
out
stos
sahf
out
inc
lods
mov
in
(bad)
lods
xchg
(bad)
ret
add
push
ss
enter
enter
(bad)
stc
sbb
push
leave
je
je
mov
push
xchg
xor
push
mov
test
dec
mov
in
out
mov
jb
pop
adc
add
repz
mov
push
scas
push
push
data16
pop
mov
lods
in
pop
add
aam
mov
add
das
or
daa
data16
ins
in
retf
icebp
pop
mov
mov
arpl
dec
(bad)
repz
cmp
inc
icebp
iret
daa
not
outs
popf
jns
in
into
or
ret
mov
add
fdiv
sbb
(bad)
cmp
mov
cmp
rcl
jge
add
in
or
iret
clc
xchg
cwde
pop
popf
xchg
cmp
pop
fldenv
test
rcr
jae
cmp
pop
inc
cmp
or
in
jmp
clc
iret
jmp
stos
mov
inc
inc
push
push
out
test
push
in
pop
xchg
mov
bound
(bad)
pop
mov
lahf
lahf
movs
or
pushf
xor
cmp
push
pusha
add
cmc
jns
jae
jbe
xchg
or
fs
inc
mov
int3
sub
out
adc
push
retf
jns
dec
inc
clc
sbb
cmp
fwait
test
adc
xchg
jns
inc
add
xchg
jecxz
aam
pop
xchg
push
test
frstor
mov
push
push
jns
cmp
jbe
or
xchg
pop
push
xor
push
cmp
cli
adc
xor
push
fnstenv
xor
mov
dec
data16
push
mov
and
fidiv
fdivr
mov
pop
inc
cli
push
and
push
daa
enter
add
xor
sub
stc
cmp
daa
nop
in
and
test
inc
mov
mov
mov
jne
stos
hlt
adc
and
push
cdq
mov
movs
mov
shl
mov
inc
mov
out
sub
sub
(bad)
div
mov
les
iret
out
nop
jb
dec
pop
dec
sub
xchg
dec
icebp
arpl
jb
jb
das
mov
pop
inc
pop
or
push
or
cld
jecxz
mov
or
retf
div
jbe
push
jno
out
rcl
inc
mov
dec
gs
lods
pop
push
in
fwait
add
pop
ins
sahf
dec
lods
mov
or
aam
mov
retf
adc
scas
fwait
jg
sub
or
(bad)
pop
in
sub
aaa
adc
(bad)
sahf
xlat
xor
mov
(bad)
mov
clc
pop
outs
sbb
jecxz
xor
cmps
and
test
pop
add
ror
(bad)
mov
(bad)
pop
add
xor
std
cmp
mov
aas
repnz
add
paddb
push
mov
daa
pop
jb
mov
fisttp
jecxz
lods
or
in
btc
popa
or
fucomp
(bad)
ja
push
int
cdq
sti
out
jo
adc
imul
and
sub
adc
mov
mov
ss
sub
xchg
ss
push
imul
jge
fcmovnu
pop
mov
maskmovq
imul
adc
out
rcr
mov
mov
adc
das
cmp
inc
es
mov
cli
inc
sbb
call
pop
push
adc
jae
cmc
ror
xchg
adc
pushf
push
mov
cmc
stc
cli
popa
pop
dec
jo
(bad)
mov
out
sar
ret
(bad)
sub
fdiv
jnp
jecxz
or
pop
xor
arpl
bound
jmp
adc
neg
pop
mov
or
cmps
ror
call
retf
fbld
aam
mov
mov
xchg
daa
jmp
pop
or
push
(bad)
and
cmp
pop
adc
xchg
xor
loop
sbb
es
frstor
cwde
pop
and
xor
data16
mov
cld
jecxz
pop
pop
push
vmwrite
mov
imul
or
pop
mov
pop
sub
mov
mov
push
stc
cmp
or
lods
push
push
pop
pushf
test
test
cmps
aaa
arpl
pandn
outs
cld
mov
dec
sub
pop
aas
sub
mov
lods
xor
add
cmc
div
adc
outs
mov
imul
out
sbb
jns
shl
shr
(bad)
dec
jo
int3
idiv
xchg
mov
xor
jnp
mov
dec
jb
adc
jecxz
arpl
pop
(bad)
out
retf
xchg
and
ret
sahf
xchg
popf
mov
sbb
sar
arpl
dec
jbe
xchg
adc
push
jge
div
inc
sti
pop
push
mov
pusha
xor
sbb
adc
pop
lods
mov
mov
sub
ret
sbb
mov
cmp
jmp
dec
mov
jae
jo
mov
pusha
sub
in
mov
or
jl
mov
dec
add
mov
mov
sub
jp
lds
dec
adc
mov
movs
fsubr
std
pop
add
inc
popa
mov
loop
cdq
jmp
adc
popa
add
inc
cmp
ror
sbb
mov
ja
mov
mov
div
adc
call
cmp
loop
or
jle
nop
dec
xchg
inc
and
jb
repnz
adc
sub
dec
and
jno
ret
in
(bad)
pop
jns
cwde
inc
push
out
or
out
ss
pop
mov
inc
cmp
retf
push
inc
jp
mov
mov
loopne
jl
stc
xchg
sbb
cmp
addr16
push
and
or
je
mov
mov
fs
pop
popa
(bad)
mov
cmp
cmp
or
mov
addps
shl
hlt
inc
dec
push
jae
das
jge
adc
neg
cwde
cmps
cdq
cmp
dec
push
jmp
pusha
lock
xor
shl
inc
or
out
or
jge
inc
push
mov
xor
jmp
addr16
retf
gs
mov
and
loope
imul
cwde
aad
aaa
sub
stos
cld
cs
jmp
rcl
outs
cmp
movaps
frndint
cmc
not
push
cmp
in
outs
xchg
loopne
inc
gs
push
imul
inc
mov
jnp
ss
pop
les
ins
pop
dec
jmp
add
out
xor
sub
repnz
test
inc
(bad)
or
dec
mov
aam
push
cmc
adc
mov
ret
dec
jg
pop
outs
movs
sti
jecxz
adc
pop
scas
inc
and
repz
jmp
movs
adc
push
in
mov
mov
xchg
iret
inc
mov
xor
and
pop
rcr
icebp
xchg
mov
in
ins
enter
and
std
popf
retf
pop
mov
out
dec
cld
inc
imul
inc
in
push
sub
and
jnp
push
out
xchg
add
lea
mov
aaa
leave
push
(bad)
int
mov
sar
fs
call
pop
xchg
out
push
and
jmp
test
addr16
dec
jge
sahf
repz
lock
pop
push
sub
pop
jnp
test
jne
imul
test
shr
in
shr
mov
loope
out
sub
mov
cmp
or
aad
xor
cli
ins
jmp
les
lea
scas
jns
mov
imul
add
xchg
lods
mov
cmp
ret
arpl
dec
mov
xchg
pop
push
add
or
add
outs
dec
sub
fisubr
or
adc
lods
xor
push
dec
push
jp
xchg
lea
jmp
hlt
retf
daa
pop
imul
sub
cmp
mov
jnp
aam
ret
sub
or
stc
fadd
(bad)
jns
lea
jmp
xor
js
mov
ror
call
and
lds
cmp
aas
test
in
cmps
sub
mov
pop
jnp
sub
sbb
jmp
fdiv
mov
jecxz
dec
fbstp
inc
icebp
cmp
mov
(bad)
fwait
cmp
mov
adc
sti
retfw
(bad)
(bad)
aaa
xchg
int
pop
or
push
or
mov
mov
adc
sbb
adc
push
mov
cmp
xor
jl
jmp
xlat
add
das
push
inc
fsubr
inc
jae
push
cmp
mov
mov
pop
jb
out
jp
xor
pop
sahf
cmp
test
ins
pop
(bad)
sub
fnsetpm(287
sub
xchg
jno
and
ret
add
sub
out
in
iret
(bad)
sub
push
inc
xchg
inc
inc
sub
or
fs
iret
loope
cmp
mov
cmp
ret
scas
ins
test
fsubr
mov
pop
or
mov
stc
xchg
mov
(bad)
in
jnp
xchg
jmp
sub
cli
stos
test
mov
sbb
xor
mul
inc
pop
pop
int
mov
mov
sbb
scas
int3
sti
mov
cdq
lock
inc
sub
or
scas
les
mul
mov
mov
pop
repz
push
loopne
add
and
push
rol
rcr
shr
call
arpl
adc
cmps
cmp
out
movs
mov
mov
jge
rcr
cmps
sub
push
fsubr
call
sahf
or
cmp
push
daa
jmp
jne
fild
sbb
and
popa
push
mov
and
mov
jg
inc
mov
jp
jmp
inc
stos
mov
sti
loopne
jbe
cli
out
out
push
mov
hlt
sbb
lahf
das
jecxz
loope
ss
and
pusha
and
mov
mov
adc
out
iret
add
push
es
sub
pmulhuw
lahf
daa
jnp
inc
jne
xchg
inc
jo
mov
jbe
outs
loope
out
pop
mov
das
inc
imul
repnz
loopne
inc
mov
adc
add
nop
sti
cdq
push
int
dec
cmp
aas
sbb
mov
push
lea
inc
cmp
xchg
test
test
mov
ret
ret
outs
inc
xchg
sbb
jne
inc
pop
mov
loop
les
xor
mov
or
ret
outs
or
call
idiv
std
retf
call
fs
mov
xor
in
cs
dec
push
cmc
push
mov
das
and
lock
xlat
cmp
or
cmp
mov
sbb
adc
mov
movs
xchg
xor
call
pop
(bad)
lock
xor
das
ja
push
je
into
cwde
inc
in
mov
mov
push
imul
cmp
(bad)
pop
pop
je
inc
xor
sbb
aad
sbb
(bad)
stc
add
cdq
mov
xchg
das
stos
stc
retf
pop
mov
test
jb
inc
xor
or
or
push
nop
and
cmp
(bad)
push
inc
inc
pop
push
and
std
sub
sar
inc
mov
mov
mov
les
xor
xor
and
mov
pushf
jge
cmp
bound
jle
cs
cmp
lahf
aad
out
daa
call
sti
cmps
add
jle
dec
shl
stc
and
ins
stc
jge
adc
cmp
loop
ss
or
mov
fsubr
xor
lock
mov
adc
int3
pop
cmp
add
mov
(bad)
mov
test
(bad)
sbb
gs
nop
dec
fwait
ds
(bad)
fcmovnu
rcl
inc
fst
jmp
fisubr
and
push
mov
pop
ret
shr
push
test
or
add
mov
inc
dec
jnp
cmp
xchg
stos
inc
or
or
xor
push
imul
ret
or
jecxz
call
into
jge
mov
dec
lds
cmp
jb
mov
push
in
mov
xor
jns
cmp
cld
or
test
cmp
test
ds
sbb
mov
xor
repnz
ret
arpl
(bad)
ret
lahf
stos
mov
mov
out
sub
pop
cmps
xor
adc
mov
sub
xchg
(bad)
mov
xchg
stos
popa
test
gs
imul
gs
aad
icebp
lods
push
idiv
cmps
dec
gs
sbb
mov
popa
cdq
push
(bad)
or
out
fnstsw
in
mov
add
(bad)
outs
mov
sar
test
dec
cmp
xlat
mov
rol
sbb
(bad)
hlt
call
sub
mov
mov
das
mov
ret
sahf
fsubr
cwde
fadd
jmp
out
shl
jae
addr16
maskmovq
mul
push
push
cs
pop
int
add
(bad)
jb
not
cmps
scas
fdivp
xor
js
push
std
mov
mov
lea
(bad)
cmp
std
add
movs
xchg
pop
int3
dec
leave
mov
and
and
shr
shl
popf
cmp
xor
adc
add
sub
mov
aas
movs
repz
and
inc
(bad)
dec
outs
enter
(bad)
(bad)
jo
dec
sub
push
dec
xor
sar
jge
mov
xchg
icebp
xor
xor
pop
in
dec
(bad)
gs
add
sub
int
or
jnp
xchg
rcr
mov
out
adc
mov
aaa
xorps
int3
mov
ret
pop
fcomp
addr16
mov
icebp
and
push
mov
icebp
xor
inc
push
mov
test
sbb
push
clc
repz
in
les
mov
xchg
loope
xchg
sub
imul
pushf
sahf
xchg
scas
push
jne
inc
fistp
jle
dec
xor
cmps
stos
cmp
pop
rcl
jmp
aaa
(bad)
rol
mov
add
ss
cmp
fistp
sbb
xor
jo
sbb
loopne
movs
mov
pushf
out
push
pop
repz
(bad)
(bad)
cmp
and
int3
xor
(bad)
(bad)
lea
pop
add
xchg
stc
sub
out
xchg
sub
outs
pop
sub
into
cdq
imul
call
xor
and
xchg
sub
adc
jae
ret
shl
jae
repz
or
xchg
fcomp
xchg
adc
nop
jg
scas
cmp
or
retf
inc
fimul
inc
push
xor
mov
loop
mov
jecxz
push
scas
xchg
inc
mov
mov
and
jge
les
dec
out
lock
repnz
mov
aam
sbb
xchg
nop
(bad)
shr
xchg
ins
imul
add
or
lea
cmps
cmp
movs
fimul
jo
jno
pop
imul
pop
mov
jmp
mov
cwde
lods
fcmovu
push
lds
in
hlt
or
inc
sbb
fadd
cmp
(bad)
sub
mul
in
dec
loop
dec
retf
pusha
sbb
jg
mov
stos
mov
fidiv
push
int3
fneni(8087
shr
pop
popa
pop
lea
mov
sub
sub
imul
js
xchg
in
(bad)
push
add
call
into
out
je
repz
cli
sub
popa
sbb
pop
inc
out
sub
retf
mov
ret
sub
(bad)
mov
lods
or
sub
cmp
stos
daa
jae
jns
cmp
mov
loopne
call
loope
push
adc
(bad)
cld
sahf
out
nop
jecxz
imul
push
dec
hlt
icebp
xchg
rcr
shl
repnz
mov
aaa
and
mov
loopne
adc
jg
adc
mov
scas
mov
mov
lds
inc
mov
or
cmp
push
add
mov
adc
outs
ins
gs
loope
inc
pop
cdq
inc
mov
and
out
inc
fs
pop
pop
pop
retf
dec
sub
xor
jmp
(bad)
sti
and
adc
clc
int3
dec
fidivr
daa
aaa
test
aad
inc
dec
adc
rol
push
inc
sub
shr
lods
add
add
outs
cmp
and
mov
mov
push
movs
ficom
cmp
adc
outs
cli
mov
loop
aaa
pop
push
and
add
adc
dec
(bad)
outs
fsubr
dec
idiv
inc
loopne
mov
aam
mov
sbb
hlt
cmp
push
sub
add
pop
cmps
jns
div
arpl
add
(bad)
test
outs
xor
push
adc
repz
in
sub
add
imul
jae
scas
jmp
out
into
inc
fwait
and
xor
push
(bad)
stos
inc
nop
jne
inc
mov
stc
jle
mov
mov
dec
mov
adc
jae
dec
lds
adc
sbb
lods
cmp
pop
inc
cmp
sbb
pop
scas
out
mov
mov
hlt
imul
or
pop
dec
jae
enter
and
fucomip
mov
push
das
fwait
mov
push
scas
test
das
ror
(bad)
mov
in
mov
xor
and
dec
mov
loope
jecxz
je
push
jne
push
not
movs
inc
inc
add
push
(bad)
cmp
ss
fs
and
and
push
pop
(bad)
sbb
in
sub
jae
adc
dec
hlt
les
(bad)
aad
sbb
jp
(bad)
and
sub
out
rol
stos
jns
sub
retf
test
adc
pushf
aaa
dec
fsin
mov
mov
cmps
cdq
ret
std
std
xchg
out
loopne
pop
in
sar
out
push
mov
cmps
and
hlt
repz
push
pop
stc
or
mov
js
stos
xor
es
jmp
lds
mov
ins
or
cld
test
fisttp
test
pop
inc
fcmovnbe
inc
sub
add
sbb
loop
pusha
or
ins
push
or
fwait
dec
fcmovbe
xchg
fmul
sub
clc
movs
jae
and
ficomp
xchg
cmps
xchg
adc
inc
cli
out
mov
popa
jecxz
push
jo
adc
pop
ret
aam
jg
mov
jne
xchg
sub
or
hlt
fidivr
in
popf
add
xor
movs
mov
mov
adc
pop
bound
shl
popa
mov
and
rcr
fistp
sahf
mov
mov
inc
shl
xchg
jns
xor
in
ins
in
jmp
pop
lea
dec
(bad)
jns
xor
ja
xor
(bad)
out
call
gs
dec
mov
xchg
cld
aaa
push
mov
call
or
dec
ficom
cmp
dec
push
dec
popf
and
mov
and
inc
cmp
adc
sub
(bad)
jo
mov
and
rcr
sbb
sub
mov
ror
gs
jmp
(bad)
mov
int
jo
nop
mov
pop
not
aas
mov
bnd
push
ja
adc
xor
(bad)
sbb
xor
adc
daa
cmp
mov
xchg
stc
push
xor
gs
adc
xor
call
xchg
icebp
adc
push
xor
nop
jg
mov
push
push
sub
bound
inc
pop
push
or
scas
fidivr
in
sbb
mov
mul
mov
ds
popf
xor
push
jp
or
fwait
push
pop
or
adc
cld
jmp
xchg
shr
add
test
bound
fwait
adc
and
dec
ret
cli
jno
loope
retf
ror
adc
mov
adc
movs
mov
adc
clc
loop
push
xchg
xchg
aas
sbb
idiv
into
push
mov
mov
fst
inc
jg
aas
imul
xor
xchg
in
shl
(bad)
mov
(bad)
inc
das
retf
xchg
mov
mul
in
adc
mov
push
sbb
dec
pop
mov
push
xor
jp
or
or
dec
(bad)
xor
adc
arpl
retf
popa
jle
das
clc
pop
inc
mov
push
mov
pminub
retf
imul
test
mov
add
rol
psubusw
cmp
pop
call
arpl
mov
fwait
movs
xchg
jmp
adc
scas
inc
iret
and
popf
mov
mov
mov
int
mov
(bad)
out
pop
movsx
fdiv
sub
jns
out
or
into
fs
aas
ds
xchg
mov
div
inc
push
cmc
xchg
leave
push
and
cld
popa
mov
les
pop
ss
mov
rcl
xchg
and
pop
jne
cmp
stos
mov
xchg
xchg
retf
mov
in
cmp
lds
pop
xchg
ins
inc
call
fcom
retf
in
out
and
sbb
or
stc
ins
bound
nop
mov
mov
loop
adc
cs
inc
imul
jmp
movs
jne
xchg
xor
fild
arpl
add
in
ja
cmps
imul
imul
stc
lods
add
xchg
jb
test
dec
mov
sar
inc
pop
stos
ret
ds
jle
aad
pop
or
inc
shl
loop
mov
push
cmp
stos
jge
push
push
into
repnz
pop
adc
fdiv
mov
loop
mov
test
or
dec
sub
frstor
xor
into
push
cmp
jno
xchg
(bad)
push
fs
adc
mov
out
js
inc
mov
pop
imul
adc
repz
jmp
cmp
jmp
ror
sbb
sti
dec
mov
inc
fisubr
cs
jo
push
push
loope
cld
sbb
mov
jb
sub
jg
ja
and
or
xor
or
data16
xor
pop
jmp
add
pusha
xor
jo
pop
push
inc
lock
mov
fdivr
pop
fwait
sbb
ins
cdq
mov
and
outs
xor
cmp
adc
sbb
scas
dec
stc
je
mov
ds
ja
std
aas
rol
mov
xchg
clc
retf
push
pusha
dec
fdivr
and
and
and
and
movs
pop
test
test
leave
cli
shr
xchg
lods
push
dec
stos
pop
mov
mov
jl
mov
push
cmp
cmp
add
cmp
retf
add
xlat
sbb
push
mov
cmp
popa
mov
imul
imul
sub
pop
dec
and
aas
mov
mov
aad
and
or
stos
test
push
mov
enter
movs
pop
pop
test
inc
pop
cmp
and
arpl
aad
mov
xchg
test
jae
cld
xchg
jns
stc
ja
and
xchg
enter
dec
cdq
lods
dec
js
and
in
adc
lods
and
adc
jbe
add
sub
jecxz
cmp
dec
stos
mov
add
retf
icebp
into
jae
jg
jns
inc
leave
sahf
out
dec
in
inc
in
movs
and
lea
adc
fdiv
imul
movs
pushf
pop
or
imul
scas
lods
pop
mov
sub
psrlw
scas
aas
je
(bad)
sub
xor
scas
dec
cwde
dec
push
rcl
aad
xchg
cmc
push
rcl
in
clc
or
sub
xchg
sti
pop
add
or
xchg
xor
or
jl
xor
loop
cmp
mov
jb
fcom
cld
xchg
je
ret
cmc
into
mov
je
pop
sbb
sahf
rcr
rcl
sbb
les
mov
outs
test
int
(bad)
fnsave
jecxz
inc
jno
(bad)
mov
xor
mov
(bad)
ds
fcom
jle
mov
aam
pop
stos
xor
mov
sbb
addr16
or
mov
repnz
sbb
sar
ret
mov
inc
movs
sub
mov
or
fprem
xchg
in
retf
mov
jno
adc
mov
cmp
(bad)
aam
mov
shl
sbb
adc
sub
(bad)
ss
std
stos
mov
inc
jg
cmp
xor
cld
adc
sub
cmp
jmp
cmp
in
jno
or
xchg
mov
in
push
cmps
mov
mov
repz
jae
xchg
fidivr
push
mov
push
lods
repnz
xchg
mov
mov
inc
hlt
not
sbb
sub
es
jl
sar
movs
pop
pop
fwait
out
es
xchg
cs
inc
es
lock
push
xor
dec
inc
addr16
mov
stc
ret
out
pop
cmps
dec
int3
mov
loope
mov
in
retf
mov
ret
fidiv
movs
je
mul
jl
inc
push
rcr
repz
ss
nop
jo
xchg
pop
dec
sub
jle
mov
je
hlt
push
pop
xchg
cmp
bound
pusha
loopne
fsub
mov
test
fcomip
jnp
or
xchg
cmp
ret
fsubp
sbb
jne
js
jmp
mov
das
lock
push
mov
xchg
dec
xor
inc
adc
daa
jno
retf
add
cmp
ss
(bad)
sbb
jmp
push
int
pusha
iret
es
xlat
jb
pusha
inc
mov
and
mov
xlat
or
pop
mov
adc
es
arpl
or
mov
shr
cmp
test
or
sbb
jp
cwde
inc
xchg
xchg
pop
(bad)
(bad)
frstor
enter
cli
mov
loop
lods
add
dec
mov
popa
and
hlt
pop
lock
imul
fstp
ja
repz
fmul
pop
pop
(bad)
cmp
in
fcomp
pop
ss
(bad)
sub
or
jmp
jo
xlat
mov
std
mov
adc
(bad)
loop
cld
into
pushf
sbb
dec
lds
dec
dec
adc
stos
xchg
(bad)
fstp
mov
dec
mov
adc
out
mov
and
retf
enter
jmp
push
or
mov
mov
or
add
xor
jge
jl
mov
and
xor
movs
mov
jp
or
add
add
xchg
pop
pusha
ds
inc
xchg
es
pop
mov
pop
pop
mov
jge
or
push
repnz
cld
fcomi
mov
out
cmp
mov
call
push
retf
jbe
fidiv
sbb
imul
stc
sbb
or
rcl
fisub
fadd
push
in
fisttp
or
aas
mov
sub
fisttp
ja
cmp
shl
mov
loopne
jecxz
add
sar
fld
jecxz
mov
iret
mov
stos
cmp
das
add
inc
adc
(bad)
push
mov
or
jo
jno
test
push
jge
push
imul
fist
add
push
(bad)
dec
mov
sub
push
xlat
into
scas
pusha
xchg
jle
stos
ss
(bad)
fld
stc
jae
retf
sub
packuswb
push
ret
fwait
add
daa
les
jns
fisttp
cmp
sbb
mov
aas
outs
jo
cwde
xor
dec
dec
fimul
ret
test
cmp
in
cli
mov
jp
push
arpl
mov
xor
pop
push
pop
pop
sti
(bad)
sub
mov
jg
test
std
adc
dec
mov
jnp
out
mov
out
cmp
and
push
dec
dec
jb
jne
jmp
xor
jb
lods
xchg
push
mov
and
ret
xor
jle
add
mov
mov
add
dec
data16
scas
test
ret
mov
ja
jl
push
mov
xor
adc
mov
xchg
ss
xchg
in
mov
sub
xchg
pop
and
test
in
outs
loopne
push
sti
aaa
mov
inc
(bad)
dec
clc
pop
add
cmp
add
imul
scas
mov
ja
out
je
jmp
retf
inc
and
call
sbb
cmps
ja
xchg
xor
mov
mov
mov
mov
push
mov
ficomp
std
fdiv
test
adc
mov
and
sbb
mov
nop
lods
add
mov
movzx
in
or
ja
cmp
stos
cmp
int3
jno
inc
imul
mov
icebp
jge
jnp
inc
ret
pop
and
pop
ins
jo
(bad)
bound
pop
mov
pop
pop
xor
outs
or
sbb
pop
dec
popa
or
mov
movs
shr
stos
bound
arpl
jp
inc
addr16
not
xchg
cmp
lds
in
pop
fnstenv
dec
test
gs
ja
add
(bad)
dec
pushf
jp
sub
xor
dec
jnp
adc
repz
inc
xor
mov
mov
mov
jmp
cmp
ret
mov
repnz
retf
cwde
xchg
cwde
sbb
fbstp
dec
ds
(bad)
call
xchg
cmc
popa
rcr
lods
sub
push
push
dec
push
cmp
mov
jne
sahf
lea
push
jne
scas
cli
loopne
cmp
sbb
fist
mov
aam
(bad)
cmc
imul
sbb
cmps
fs
pop
daa
add
aam
mul
ja
mov
hlt
jmp
jp
add
cmp
lock
fisttp
mov
mov
dec
sub
pop
add
and
pop
dec
xchg
popf
(bad)
add
dec
pop
fdiv
in
pushf
in
or
xchg
lods
out
pusha
or
xor
movs
test
inc
or
jp
fwait
push
popa
repz
ror
xor
jno
push
call
gs
push
xchg
sbb
xchg
inc
fcmovu
outs
add
mov
mov
clc
pop
loope
dec
pop
inc
pop
push
mov
jg
dec
(bad)
jle
xor
(bad)
jle
inc
ins
pop
xor
dec
leave
cmp
mov
xor
call
repnz
(bad)
cwde
xor
nop
sahf
movs
scas
jl
xchg
ins
dec
push
or
shl
in
retf
or
ja
dec
xchg
in
loop
mov
xchg
test
int
int
js
lds
jae
mov
popf
leave
cli
sbb
xchg
cmc
sub
clc
mov
sbb
pushf
je
ret
dec
cdq
shl
mov
sub
sbb
test
sbb
adc
mov
xchg
adc
or
xor
mov
pop
push
cmp
inc
out
stc
and
stos
add
xchg
stos
push
xchg
xchg
inc
jmp
jns
inc
cmp
xor
lahf
dec
int3
aaa
jb
scas
fninit
lds
xchg
call
pop
pop
arpl
imul
push
mov
jmp
and
pop
(bad)
(bad)
jp
lods
frstor
mov
fsub
aam
add
or
xor
lahf
or
aaa
loopne
sub
das
mov
mov
arpl
jae
repz
inc
push
jp
add
(bad)
call
mov
fnsave
(bad)
dec
cli
cwde
imul
jle
in
or
mov
push
iret
xchg
mov
fst
repz
sub
push
test
push
or
mov
or
mov
addr16
ret
movs
cld
mov
lods
ss
rol
jl
lods
(bad)
lahf
stos
xor
mov
push
addr16
dec
mov
push
add
pop
loope
scas
push
sahf
cmp
movs
mov
xchg
pop
push
rol
cmc
shr
dec
test
les
xor
and
outs
ror
in
retf
cli
xor
or
adc
dec
lahf
movs
imul
repz
ret
jecxz
(bad)
stc
lahf
mov
adc
dec
sbb
popa
push
xchg
cmp
arpl
aas
test
loopne
mov
mul
and
out
test
fisubr
stc
or
(bad)
sar
jge
in
dec
sbb
cmp
add
imul
mov
jmp
pop
mov
inc
mov
int3
gs
jns
cs
stc
dec
mov
jle
xor
cs
push
pop
ret
jbe
mov
es
xchg
lods
sar
rcl
add
jl
jnp
xchg
out
jge
(bad)
sahf
out
fscale
mov
xchg
sbb
in
adc
inc
in
xchg
and
mov
xor
stc
call
adc
cld
adc
(bad)
mov
inc
cmp
(bad)
repnz
jg
scas
or
or
dec
push
xor
mov
aad
stos
pushf
xor
ins
daa
push
and
aas
pushf
jge
cmps
ret
mov
adc
jb
fs
mov
gs
call
je
pop
pop
pusha
rol
lahf
fld
or
xchg
icebp
pop
call
sub
shr
js
push
cmp
fisubr
bound
push
xor
jno
out
push
pop
(bad)
mov
in
cdq
sbb
in
sub
mov
xchg
mov
orps
adc
adc
shl
adc
popa
sub
or
xor
push
pop
push
mov
out
outs
cmp
jg
out
mov
or
in
and
sbb
sti
lods
sub
push
aaa
or
inc
retf
ret
mov
sub
cmp
sub
sar
mov
adc
push
sbb
sar
pushf
sbb
into
xchg
in
xor
push
jo
arpl
inc
xlat
push
cmc
shl
out
inc
inc
cmp
(bad)
mov
(bad)
inc
xchg
stc
pushw
mov
scas
in
iret
and
sub
arpl
icebp
mov
sub
fwait
loopne
fild
jle
mov
mov
pop
int
jecxz
ror
repz
xchg
mov
jecxz
out
and
dec
pop
xor
dec
mov
push
and
mov
pop
push
xor
xor
fimul
and
cwde
js
pushf
int
in
xchg
dec
jmp
std
mov
fimul
mov
mov
shl
or
aad
fild
and
lods
arpl
xchg
out
lahf
fs
adc
ss
je
sub
or
jno
or
sub
mov
sub
jecxz
jnp
clc
test
xor
sbb
rcl
push
jmp
outs
xor
aaa
mov
push
cwde
jbe
add
adc
or
ss
cmpxchg
lahf
ja
dec
mov
jne
das
or
inc
repnz
(bad)
mov
inc
leave
adc
loop
les
out
add
push
push
repz
mov
in
or
bound
pushf
and
(bad)
xor
and
lods
rcr
jo
dec
mov
jg
add
cmps
xor
bound
sbb
call
cli
ret
retf
jb
icebp
dec
xchg
rcl
ins
sti
mov
dec
ficom
ja
mov
cmp
jge
ret
push
jo
not
lods
xor
cwde
and
inc
jbe
mov
dec
jl
test
imul
dec
in
pop
xchg
jo
and
dec
je
xor
jge
(bad)
out
mov
and
aad
dec
push
add
xchg
sub
push
int
mov
xchg
push
ja
popf
xor
retf
or
xor
pop
add
retf
sub
hlt
push
test
push
int
cmp
cld
cmps
enter
dec
push
aaa
cmc
push
dec
push
push
popa
jns
adc
and
adc
jo
test
lods
test
and
jbe
add
retf
cmps
sar
test
je
ins
jg
fucomi
cmp
in
js
dec
mov
jb
cmps
push
add
retf
(bad)
mov
fcom
xor
jns
add
ins
cs
clc
xor
pop
mov
(bad)
movs
dec
mov
cmp
dec
sbb
pop
inc
call
arpl
push
out
or
push
sub
fidiv
xor
out
push
cdq
lods
push
mov
and
adc
mov
adc
push
sbb
push
clc
stos
cmp
jns
mov
push
xor
je
xor
inc
fadd
aaa
pushf
cdq
loop
xor
loopne
inc
push
mov
dec
(bad)
pushf
gs
ja
adc
sahf
adc
shl
lock
loop
jg
sar
ret
and
movs
enter
loop
mov
xor
and
mov
loope
cmp
std
mov
push
aas
mov
test
out
int
dec
jmp
std
jns
inc
or
push
out
and
pop
add
jbe
push
sar
repnz
or
adc
imul
cmp
aad
cmps
sub
ficomp
aas
inc
push
fistp
aaa
cmp
and
xchg
dec
imul
dec
xchg
jnp
stos
or
cmp
sub
in
inc
movs
dec
not
and
xchg
sbb
ret
mov
jle
ret
retf
xchg
sub
sahf
dec
out
pop
mov
sti
sub
adc
fiadd
ud1
loopne
sbb
sbb
test
xor
leave
movs
mov
ss
jno
add
nop
push
push
mov
lods
je
shl
sbb
cmp
push
jg
test
dec
inc
sbb
popa
cmp
daa
arpl
fsubr
loope
add
push
xlat
in
nop
test
xchg
ror
cwde
adc
gs
fmul
xchg
add
fmul
pop
pushf
jg
ds
jmp
inc
inc
and
scas
lds
inc
fbstp
popf
ficom
pop
sub
clc
jbe
leave
movs
pop
leave
pop
shl
push
ds
mov
out
icebp
ja
repz
add
(bad)
pusha
inc
inc
xchg
aam
inc
loope
cmp
pop
mov
out
aad
test
scas
inc
inc
ror
jmp
loope
adc
fwait
dec
push
push
mov
inc
mov
aaa
jmp
pop
daa
mov
imul
sbb
inc
ja
mov
imul
loopne
bound
icebp
jne
mov
xor
js
jne
arpl
sahf
stos
mov
push
or
fstp
cmps
push
lods
pusha
call
pmaxsw
xchg
mov
test
test
dec
lds
fidivr
or
add
sti
jb
bswap
sti
fs
dec
aam
adc
pop
fdiv
xlat
stos
mov
adc
shr
dec
ja
shl
aas
aam
and
push
pop
xor
fsubr
lahf
jae
jae
ja
xlat
in
imul
bound
scas
ds
out
jl
sbb
jl
(bad)
data16
add
sub
cwde
nop
sbb
or
stos
jp
mov
scas
(bad)
adc
xor
add
addr16
ficomp
adc
mov
adc
enter
xchg
cwde
sub
sbb
adc
mov
mov
sahf
ins
or
pop
push
daa
push
dec
(bad)
repz
push
int3
call
push
test
lahf
push
(bad)
pushf
call
lods
aad
mov
xchg
pop
mov
and
sub
mov
hlt
div
mov
mov
fnstsw
ret
and
xchg
mov
in
add
add
scas
mov
test
lahf
xchg
dec
jmp
xor
sbb
aad
mul
add
or
and
xlat
adc
inc
xor
mov
pop
and
(bad)
mov
jo
(bad)
int3
jge
int
dec
or
or
or
shl
push
jle
pop
sub
xchg
loopne
cmps
fwait
cs
mov
cmp
test
cld
push
les
xlat
test
js
inc
lods
ins
push
cdq
sub
xchg
cld
push
jne
dec
mov
popa
adc
cmp
xchg
mov
sbb
aam
js
cmp
imul
push
popa
xor
add
push
test
xchg
ss
int3
xor
fistp
push
add
test
(bad)
hlt
in
sbb
scas
mov
add
mov
idiv
sub
iret
outs
and
(bad)
call
add
ret
pop
mov
mov
sti
mov
enter
mov
pusha
inc
mov
retf
push
jno
aam
mov
sbb
shr
neg
pop
ret
cmp
mov
cmp
push
jmp
push
sti
test
iret
mov
mov
fxch
jg
in
enter
mov
jns
jl
mov
mov
(bad)
popa
cmc
jae
or
mov
adc
sar
xor
int3
mov
push
fld
pop
or
or
fidiv
test
inc
and
mov
sbb
sbb
int3
cmp
cs
mov
jbe
dec
adc
js
push
retf
xchg
jae
test
jnp
adc
ret
ins
int3
mov
test
cli
cmp
dec
iret
jns
fldenv
xor
or
iret
pusha
mov
sub
fdivp
add
mov
push
and
or
or
mov
out
popf
mov
inc
fld
popa
push
jo
call
lahf
push
lock
pop
push
jb
xlat
call
push
adc
arpl
push
mov
loop
and
test
adc
xchg
inc
test
push
aas
mov
mov
and
imul
retf
mov
mov
fs
retf
add
lods
cmp
sahf
in
rcr
dec
mov
cwde
icebp
push
mov
xor
mov
sbb
push
cld
mov
into
sbb
hlt
mov
push
lahf
ret
mov
sub
lahf
inc
push
jg
push
gs
pop
and
mov
in
add
mov
cmp
retf
in
imul
inc
inc
xor
mov
inc
mov
jnp
vmovaps
jl
mov
enter
dec
pop
int
dec
sbb
mov
arpl
pusha
mov
sub
cmps
push
cmp
stos
lods
ret
outs
fisttp
sub
pop
xchg
lods
push
ins
out
xlat
xchg
imul
mov
cli
mov
ja
jl
push
inc
test
jne
push
ret
pop
pop
xchg
sbb
ror
nop
pop
cld
xchg
in
mov
cmp
ficom
xor
ror
adc
xchg
jmp
adc
popa
jnp
or
fs
in
jnp
adc
dec
aaa
mov
jns
stos
lds
push
xchg
pop
(bad)
push
cmp
cmp
jmp
push
fistp
push
shr
pop
xor
stos
jge
and
ret
xor
push
out
lea
jae
jle
je
mov
pushf
xchg
mov
jecxz
imul
int3
ss
mov
cmp
push
test
repnz
and
sar
movs
cmp
pop
sub
mov
test
push
rcr
xor
push
jno
call
sbb
sub
push
into
add
or
in
adc
and
lods
pusha
sub
sbb
call
in
push
xor
xor
outs
sub
inc
lar
je
push
in
loop
icebp
fldlg2
inc
mov
aad
jg
inc
mov
addr16
or
push
push
jl
sub
gs
(bad)
jmp
in
cmp
bound
cmp
in
add
sbb
xlat
sbb
xor
mov
int
mov
xchg
push
or
sbb
in
pusha
and
js
scas
mov
ins
add
addr16
loopne
mov
ret
daa
cld
sahf
les
icebp
dec
pop
add
inc
pop
dec
test
inc
popa
jne
mov
je
xchg
cmp
inc
and
jl
inc
sub
ror
cs
test
dec
xor
lahf
lahf
mov
jb
lods
sub
cmp
jmp
(bad)
cwde
sub
adc
pop
(bad)
fimul
out
mov
(bad)
das
movs
mul
inc
enter
jbe
sbb
into
es
(bad)
jg
mov
cmp
pusha
xor
cmp
lods
in
xchg
push
add
mov
jge
jne
or
xchg
jns
mov
adc
and
xor
jbe
adc
call
test
jno
int3
cmps
add
mov
fwait
rcr
sub
mov
cs
stos
aaa
enter
push
sub
sbb
adc
bound
call
mov
and
jmp
mov
jle
or
repz
clc
mov
ins
add
dec
(bad)
pushf
push
jns
repnz
xchg
outs
fwait
dec
fs
xlat
sub
mov
inc
loope
push
fistp
xor
sub
xor
inc
cmps
scas
sub
loop
dec
push
loop
(bad)
sbb
lods
push
outs
data16
cs
arpl
jno
jne
jmp
inc
in
jb
inc
jmp
cmps
in
sbb
sub
xchg
in
nop
mov
imul
dec
test
mov
add
and
sbb
xchg
(bad)
cmp
dec
or
in
sub
mov
int3
xor
dec
mov
ja
dec
push
retf
inc
sub
dec
jae
shl
scas
xchg
sbb
and
in
mov
and
jp
mov
clc
and
mov
lods
or
add
into
repnz
pop
cmp
mov
enter
cmovle
addr16
sbb
fidivr
jmp
loop
jg
or
sahf
in
rcr
out
gs
cli
mov
in
and
xlat
pusha
enter
cli
jbe
sbb
movs
xor
push
int3
sahf
js
aas
popf
cmps
in
fisubr
mov
lea
xchg
scas
lea
xor
(bad)
dec
jp
test
js
add
je
mov
and
mov
mov
mov
ins
or
cli
pop
ror
pushf
aam
jmp
popf
pop
not
call
jno
leave
pop
cs
iret
adc
retf
cmps
fcomip
push
mov
movs
shr
cmp
sahf
imul
aad
inc
out
fild
stos
test
nop
pop
and
push
mov
and
clc
add
mov
rcr
pop
jg
iret
nop
mov
dec
outs
(bad)
pop
and
xchg
sub
sub
hlt
in
dec
push
pushf
fld
std
or
dec
dec
pop
rcr
inc
enter
out
xchg
bound
push
push
cmp
inc
rol
out
fild
icebp
dec
mov
pop
ss
adc
imul
sbb
or
jne
retf
sub
mov
mov
adc
push
push
loop
fsub
fdivrp
loope
cmps
xlat
fsub
dec
mov
cmc
neg
(bad)
cli
xchg
mov
mov
pop
mov
popf
test
loop
in
imul
dec
mov
sub
in
cmps
mov
(bad)
aam
outs
shr
js
pop
arpl
push
fs
retf
mov
imul
movs
sar
not
ja
lahf
push
jp
scas
pop
pop
sbb
or
jl
ins
dec
mov
xlat
jl
call
cmps
cwde
adc
pop
cdq
in
jg
push
enter
xor
push
xor
cmp
xchg
bound
mov
lock
jbe
cli
mov
dec
aad
ja
push
repz
(bad)
daa
adc
add
shl
fidiv
cwde
fwait
adc
mov
clc
cmp
cmp
mov
jne
xchg
lahf
scas
xor
pop
mov
and
mov
retf
test
bound
inc
jg
adc
je
mov
adc
out
and
sub
pop
lock
in
xor
xor
fucompp
mov
push
sub
mov
add
pop
push
hlt
fstp
xchg
add
pop
fisubr
sub
leave
imul
in
jmp
lock
sbb
or
ins
jne
mov
xchg
push
mov
xchg
movs
es
or
pop
jno
inc
pextrw
cmp
or
repz
sti
push
int
mov
jbe
test
or
mov
add
cmc
pop
out
push
ror
fwait
jbe
rcr
mov
cmp
mov
jb
inc
test
outs
scas
movs
cmp
call
mov
pushf
rol
outs
sub
lods
adc
sub
jmp
pop
sbb
in
mov
pushf
dec
cdq
fwait
xor
hlt
jno
add
repz
retf
cmp
xor
ret
cld
lahf
push
or
adc
ins
push
inc
add
and
inc
pop
cs
mov
mov
xchg
mov
cmp
pop
loopne
cs
movs
xor
xchg
cmps
sar
inc
out
cmp
and
pop
loopne
xchg
sbb
mov
icebp
inc
mov
xor
fmul
xor
jg
repnz
imul
and
pop
pusha
imul
clc
mov
or
mov
cdq
cmc
mov
nop
in
pop
jbe
jg
popa
in
push
outs
push
mov
sbb
imul
jae
sbb
jb
sbb
fcom
cwde
push
fcomp
test
pop
mov
in
retf
sub
jecxz
sti
push
sub
ret
(bad)
mov
in
mov
and
in
rcl
sti
cmp
retf
pop
inc
in
mov
sbb
cmp
nop
add
mov
xor
ret
movs
push
mov
sti
sar
lock
jne
xor
in
xchg
xor
or
jae
push
cli
fstp
rol
and
js
dec
repz
mov
dec
dec
mov
xchg
push
(bad)
jne
and
and
xor
sbb
mov
std
mov
and
lods
repz
push
loopne
imul
mov
rcl
lock
aaa
push
cld
loope
neg
shr
jl
cmp
ret
xchg
in
sbb
stc
pop
xchg
aam
imul
jnp
icebp
cwde
sti
lods
push
push
imul
xchg
lock
mov
sub
pop
loopne
push
stos
int
mov
cmp
fdiv
hlt
fbstp
fsub
inc
xchg
inc
jg
jmp
jp
sub
jp
fdiv
ins
inc
adc
push
mov
je
ins
in
out
add
jle
outs
hlt
ret
shr
mov
push
nop
jp
(bad)
dec
ins
test
lods
cmp
ficomp
cmc
xchg
or
ret
outs
aad
in
ret
mov
xor
adc
sub
in
sub
cld
stos
cmps
sbb
movs
gs
sbb
lods
aas
xor
out
or
push
aaa
nop
fsub
fisub
sub
in
scas
dec
fwait
shl
adc
sbb
or
xor
push
xchg
xchg
pop
jp
sub
stc
add
mov
je
not
ja
sub
into
xchg
ja
or
sbb
sub
icebp
bound
cmps
sub
test
dec
(bad)
loopne
push
dec
lods
adc
cmp
add
hlt
xor
mov
or
and
jp
mov
push
and
push
xchg
ja
inc
add
pop
mov
fwait
ins
lods
inc
pushf
(bad)
hlt
outs
iret
out
aas
jp
or
pop
shl
leave
out
jmp
add
sub
daa
mov
idiv
dec
cs
mov
scas
inc
lea
mov
and
sbb
retf
stos
push
js
mov
push
pop
xchg
in
out
(bad)
adc
or
aam
add
and
pop
loopne
outs
jb
cdq
inc
std
or
aaa
mov
lods
lea
movs
es
rol
push
jbe
into
push
pop
inc
jp
add
mov
xchg
jo
jl
jo
mov
jecxz
ss
(bad)
cmp
mov
popf
icebp
or
mov
mov
mov
or
inc
push
aam
outs
xor
in
jmp
adc
push
test
call
out
add
jne
jo
and
sbb
xor
xchg
mov
ficom
retf
inc
add
xchg
xchg
mov
pop
hlt
fsubr
test
outs
push
add
test
mov
push
pushf
dec
les
pop
mov
dec
inc
push
sbb
mov
push
pop
sub
shr
call
xchg
push
jae
ins
ds
cmp
cli
pushf
dec
out
movs
push
ins
test
fstp
aam
inc
and
mov
mov
inc
loope
push
xchg
loopne
lds
push
xor
adc
sub
mov
push
mov
idiv
jno
dec
inc
test
or
cmps
dec
scas
dec
shl
mov
jle
cmc
cld
push
pop
cmp
loopne
sbb
jle
push
(bad)
int3
jl
sub
test
inc
test
and
fimul
fistp
cmp
mov
push
cmp
div
or
dec
cld
(bad)
cld
or
xor
cmc
sahf
addr16
es
adc
jecxz
or
cs
push
out
pop
pop
fs
cmp
lds
fwait
mov
dec
mov
cmp
push
es
lods
sub
push
sbb
cld
ds
movs
addr16
push
mov
ss
adc
ins
inc
sub
adc
xor
out
in
call
push
and
dec
std
gs
xchg
stos
inc
in
sub
cmp
in
pop
mov
pinsrw
push
jp
sbb
cmps
xor
mov
enter
cmp
push
mov
mov
retf
or
mov
(bad)
sti
mov
xor
movs
gs
bnd
clc
xor
sti
add
pop
mov
cmp
mov
inc
cdq
jns
mov
push
(bad)
sub
mov
mov
sub
ret
movs
jbe
xor
hlt
lea
fwait
test
stc
stos
adc
gs
pop
pop
dec
inc
inc
ja
push
adc
lods
inc
sti
cs
dec
fisttp
leave
mov
pop
(bad)
aam
stos
mov
nop
pop
xchg
aaa
xor
hlt
jb
sub
dec
movs
jge
jecxz
push
pop
jnp
pop
test
xchg
nop
stc
mov
cli
hlt
dec
jne
test
das
mov
rol
je
ins
retf
jmp
pop
xchg
mov
cli
xor
cmp
pop
xor
ret
jno
repnz
pop
imul
dec
mov
arpl
or
pop
push
inc
or
fcom
mov
adc
ret
imul
mov
push
retf
push
(bad)
scas
jb
xchg
mov
hlt
jbe
jmp
outs
push
pop
add
mov
sbb
pushf
pop
sub
nop
fdiv
out
inc
pushf
shl
xchg
sbb
jp
mov
sbb
test
outs
sahf
nop
cmp
scas
jmp
inc
jl
pop
jnp
xchg
push
fsubr
aaa
leave
push
and
push
push
push
cdq
jno
mov
stc
addr16
or
mov
aad
push
push
xchg
pop
lea
scas
adc
pop
sub
bound
movs
add
or
mov
fimul
aaa
cmp
lods
sar
xchg
mov
sbb
push
mov
sub
push
inc
in
cmps
add
jge
or
jmp
retf
push
pop
in
pop
pop
pop
addr16
ins
mov
adc
xor
in
mov
xor
mov
scas
cmp
push
mov
add
je
iret
int3
inc
sahf
jno
ror
iret
sbb
scas
call
sub
cmps
lds
sbb
ds
or
fwait
inc
mov
daa
ror
stc
iret
je
rcl
cmp
adc
fs
in
stos
cmp
int
(bad)
lods
mov
dec
mov
scas
lds
cld
jecxz
mov
sbb
in
stc
(bad)
ror
inc
pop
or
psadbw
push
fcom
jecxz
imul
sbb
push
(bad)
xor
dec
clc
inc
cld
mov
mov
inc
lahf
xor
lods
jne
aaa
call
ror
mov
push
gs
mov
sahf
test
push
and
int
ret
mov
dec
fidiv
scas
int3
xor
mov
in
fwait
dec
std
cmps
cmp
push
test
fwait
pop
sbb
mov
add
xchg
mov
jle
push
or
ins
call
cli
int3
test
mov
lock
js
cmp
pop
out
out
ret
cmp
or
add
jge
xor
bextr
ins
inc
shl
cmp
daa
cmp
clc
adc
add
lds
rcl
nop
hlt
or
and
cld
cmp
sub
adc
or
adc
jp
ror
arpl
or
mov
dec
loope
out
jge
scas
js
or
cmp
ja
stos
loope
jmp
daa
mov
mov
xchg
shl
xchg
sub
jmp
sbb
ror
fs
jbe
adc
stc
push
inc
loope
mov
cmps
mov
dec
sbb
punpckhdq
add
gs
mov
dec
add
data16
loop
push
xchg
jg
xchg
add
dec
dec
jno
push
iret
lods
mov
sahf
jmp
outs
sub
and
xchg
cmc
pop
dec
inc
add
cmps
(bad)
shr
pop
aas
fucom
outs
xchg
jbe
add
clc
cdq
(bad)
jg
mov
mov
mov
sbb
in
jg
or
pop
mov
(bad)
mov
mov
ins
and
mov
jecxz
mov
neg
test
mov
(bad)
popf
or
and
std
cli
mov
enter
jae
cld
inc
sub
or
lahf
sub
out
sbb
ss
data16
cmp
inc
lock
in
pop
cmp
add
aam
int
xor
dec
lock
push
iret
and
jmp
and
xlat
call
mov
xchg
std
mov
sub
out
mov
shl
movs
imul
outs
leave
pop
xor
repnz
sbb
sub
inc
pop
sub
les
or
xor
inc
std
mov
ret
(bad)
bound
push
pop
lds
mov
adc
shl
out
sub
imul
pop
cmc
sub
mov
jl
and
cmp
icebp
cmp
(bad)
adc
mov
and
adc
pop
mov
adc
xchg
cli
adc
push
jmp
or
movs
movs
push
lea
test
push
pop
fxch
or
pop
shr
shl
ret
ins
xchg
out
xor
movs
inc
movs
or
sbb
or
xlat
fidivr
out
repz
ret
in
adc
dec
push
xlat
or
lea
or
ins
mov
adc
(bad)
adc
cli
shl
or
add
xor
mov
jp
and
scas
inc
xchg
or
add
rol
and
test
mov
scas
icebp
rcl
popf
adc
bound
jecxz
push
push
cmp
add
jl
aas
and
retf
mov
stos
dec
test
iret
scas
mov
mov
popf
pusha
dec
lods
xor
loop
ret
in
jnp
pop
and
pop
daa
dec
lahf
xchg
or
cld
js
in
jae
pop
mov
adc
das
add
dec
mov
arpl
sbb
fsubr
movs
les
cld
imul
repnz
sub
lea
punpcklwd
cwde
ret
jno
inc
out
int
cmp
dec
je
add
mov
cs
sub
js
adc
das
sar
and
xchg
or
dec
fsub
into
(bad)
icebp
sub
fucomi
pop
sbb
push
mov
sub
inc
mov
mov
jae
push
jmp
and
(bad)
jge
xor
sub
push
sbb
pop
loop
mov
adc
jmp
cmp
add
jmp
ret
and
test
pusha
dec
dec
xchg
jb
jb
jae
pop
push
lds
dec
xchg
xchg
mov
pusha
pusha
inc
mov
sbb
lahf
aad
push
ret
mov
cmp
aaa
cmps
imul
xchg
mov
les
hlt
mov
push
fs
sahf
mov
lds
mov
dec
out
jae
lods
(bad)
mov
mov
mov
cmp
out
adc
sub
(bad)
repnz
imul
mov
stos
mov
daa
aam
cld
lods
neg
sbb
jb
out
rcr
sub
xchg
outs
or
mov
mov
xor
cmp
jne
sbb
fldln2
adc
xchg
lds
sub
daa
push
lahf
mov
aas
push
inc
pinsrw
loopne
xchg
cmc
rcl
xlat
dec
into
xor
cli
mov
sbb
jb
fimul
frstor
shl
call
shr
add
aas
lds
jno
mov
sbb
sar
jae
inc
add
mov
test
push
jne
inc
fistp
mov
fmul
add
pusha
outs
loope
adc
push
and
cli
bound
outs
in
cdq
or
mov
leave
cdq
push
arpl
or
push
(bad)
or
in
scas
sbb
enter
inc
loop
sbb
mov
add
es
pop
push
ss
into
cmp
repnz
not
ret
loopne
ins
sahf
clc
movs
mov
add
push
sub
loope
imul
mov
xor
lahf
out
jg
mov
adc
int
mov
and
push
jae
adc
cmps
jnp
inc
add
stos
jne
pop
pop
and
lahf
scas
add
aad
(bad)
(bad)
rcr
rcr
push
out
sbb
gs
or
sti
add
pop
lock
cli
push
xchg
push
xchg
mov
call
js
mov
jmp
add
or
movs
shr
imul
adc
mov
clc
retf
out
or
stos
das
(bad)
sub
stos
inc
pop
jbe
popw
call
daa
xchg
sbb
mov
mov
adc
repnz
shl
das
and
movs
das
sbb
pop
pop
outs
pusha
xchg
and
and
or
dec
and
into
jne
mov
hlt
jge
sub
icebp
mov
xchg
shr
(bad)
or
scas
inc
stos
fiadd
fisub
xor
popf
outs
retf
pop
xor
mov
fiadd
mov
(bad)
xor
out
dec
icebp
mov
xchg
retf
cmp
and
sub
add
cwde
imul
sbb
pop
daa
mov
push
mov
sbb
mov
add
arpl
into
cld
rol
xor
outs
(bad)
scas
pop
push
pop
xor
lock
inc
inc
les
scas
sahf
cmp
stc
movs
add
dec
pop
pusha
adc
jg
mov
push
pop
inc
pop
jno
or
mov
adc
xchg
add
test
addr16
call
ins
sub
xchg
fstp
call
pop
into
push
mov
lock
leave
(bad)
not
pop
pop
pop
scas
mov
out
pop
cmp
ja
push
jg
movs
inc
inc
fxch
mov
aam
jecxz
inc
into
mov
dec
jl
cmp
cmp
jmp
aas
jmp
in
mov
stc
pop
mov
movs
jmp
test
loope
rol
xchg
dec
mov
adc
pusha
popf
and
inc
dec
add
and
pop
mov
fdiv
push
movs
jnp
pop
xchg
dec
xchg
sbb
ret
lods
jnp
imul
test
aaa
inc
int
fst
lahf
and
jo
not
loop
push
pmuludq
xchg
mov
pop
dec
cmp
xchg
push
out
out
push
mov
stos
cmp
add
and
fst
retf
retf
xchg
pop
shl
xchg
loope
(bad)
jmp
bound
push
inc
push
lock
lods
(bad)
sbb
add
es
out
or
mov
push
aaa
(bad)
scas
mov
cmp
ficomp
dec
cld
pop
ja
xchg
into
(bad)
stos
add
xchg
sbb
dec
test
ja
xor
adc
cmp
mov
jmp
movs
loope
adc
outs
fwait
xchg
test
add
stos
(bad)
cmp
sbb
sbb
movs
popf
popa
adc
sbb
nop
fs
mov
push
xor
ja
retf
(bad)
pushf
mov
mov
out
cdq
mov
icebp
xchg
inc
lods
es
mov
outs
mov
inc
xor
jbe
or
neg
inc
dec
imul
push
test
sahf
les
mov
xchg
rol
push
mov
shl
ja
cli
retf
sbb
pop
repnz
loop
xlat
pop
js
lock
xor
mov
lods
aam
jp
and
pop
pushf
adc
stc
dec
mov
pop
and
(bad)
fisubr
jne
movs
sbb
mov
movs
stos
adc
cmc
pop
sbb
dec
pop
in
jle
pop
xor
sbb
pop
push
fisttp
adc
and
sbb
imul
lods
lods
mul
pop
mov
mov
push
cld
dec
cld
jmp
lea
fmul
adc
pop
push
aam
or
jle
jl
or
inc
in
mov
jno
int3
imul
mov
in
sar
cli
sahf
or
in
test
js
ror
inc
cdq
and
mov
rcr
popf
mov
ja
adc
xchg
movs
retf
fldcw
mov
movs
(bad)
stc
inc
adc
mov
in
sti
pop
cmp
or
ret
inc
loop
sub
dec
adc
popf
std
mov
aad
xchg
sti
cld
jno
jg
loopne
enter
xlat
mov
mov
sub
nop
or
cmp
data16
adc
ins
sub
sub
and
mov
mov
sbb
inc
outs
loope
xchg
pusha
lds
aad
pop
dec
fiadd
(bad)
xor
sbb
mov
xorps
daa
ins
sub
mov
and
stos
mov
rcr
pop
add
xor
inc
leave
pop
pop
sub
pop
mov
sbb
mov
sbb
fidiv
inc
fs
sbb
mov
xlat
lock
inc
pop
mov
mov
imul
repz
mov
cmp
popf
jl
cmp
add
je
lods
out
lahf
jp
in
jl
test
call
pop
retf
fwait
cmp
adc
in
push
mov
loopne
ins
ror
std
mov
sbb
inc
pop
xor
test
jo
movs
mov
and
push
sbb
mov
jbe
push
aaa
mov
stos
pop
(bad)
ins
sub
fnstcw
js
repnz
lea
test
pusha
jnp
push
(bad)
sar
and
fnsave
add
xlat
and
add
adc
ss
inc
push
shl
push
sbb
(bad)
sar
and
jns
test
sub
jmp
aad
cmp
adc
fdiv
or
pop
dec
clc
pop
ds
push
(bad)
rcl
xchg
icebp
bound
sbb
dec
xor
dec
jae
loope
popf
push
cs
pop
scas
xlat
xchg
lock
mov
(bad)
cs
xor
push
inc
pop
aad
sub
imul
sbb
mov
inc
and
clc
jbe
fwait
enter
sahf
stos
repnz
ds
push
cs
sub
hlt
les
add
iret
mov
mov
jmp
fsubp
cli
mov
mov
pushf
rcl
stos
imul
shl
mov
mov
xor
sti
or
arpl
xor
push
outs
push
sti
xor
mov
cmps
iret
mov
in
pop
and
cmp
js
outs
sbb
rol
and
xchg
push
xchg
mov
data16
mov
cmp
sahf
jmp
inc
xchg
inc
mov
aas
xchg
mov
aam
add
sbb
lock
xor
data16
(bad)
(bad)
cs
les
out
inc
push
push
jle
mov
xchg
les
mov
pop
inc
stos
popf
mov
lock
or
fxch
std
les
sar
mov
lea
cmp
push
leave
ss
das
retf
or
dec
sbb
(bad)
stos
pop
sbb
sbb
clc
pop
data16
int3
xor
fwait
pop
gs
sbb
stos
add
(bad)
loop
aad
fnsave
fild
xlat
mov
div
retf
adc
aas
push
xchg
outs
cmp
mov
adc
out
shl
inc
ds
xchg
jge
call
xchg
fild
int3
push
into
jmp
and
add
fistp
stos
loopne
xor
fdiv
ins
jno
cli
jecxz
imul
mov
arpl
movs
pop
lea
aad
xchg
loope
jp
inc
xchg
xlat
repnz
push
sbb
inc
and
push
mov
pop
(bad)
or
mov
cmp
loope
mov
adc
lock
xchg
mov
sahf
pop
outs
fs
push
mov
es
fs
sbb
mov
inc
lds
mov
mov
or
sub
dec
int3
adc
popa
ret
in
ret
lea
loope
outs
mov
xor
sbb
outs
mov
daa
add
in
xor
adc
fwait
cld
jp
and
test
push
packssdw
xor
sbb
ss
push
fs
sub
dec
adc
adc
sbb
and
out
enter
fadd
mov
shl
inc
xchg
jecxz
push
rcr
pop
in
sar
rcr
in
inc
push
xchg
retf
add
add
imul
stos
mov
in
pusha
sbb
scas
jns
xor
xor
mov
aas
sbb
mov
lods
lods
movhps
es
jp
mov
sahf
popf
mov
push
mov
push
rcr
sbb
test
aam
cmp
add
ins
frstor
push
inc
repnz
or
pop
cmp
or
pop
add
push
mov
inc
sahf
xchg
ret
inc
pop
add
inc
and
jmp
add
dec
shl
jp
add
pop
lods
imul
mov
loopne
and
mov
(bad)
sub
jne
adc
ret
adc
sahf
mov
jb
cmp
inc
sub
popa
das
sub
movs
cdq
cmp
sbb
xchg
pop
cs
push
inc
test
cmp
cld
adc
out
sbb
xchg
call
pop
movs
jge
in
inc
es
pop
mov
int3
mov
and
pop
dec
pop
jnp
aad
sbb
sar
sbb
lods
cmps
and
bswap
pop
inc
(bad)
retf
call
hlt
sub
sbb
push
(bad)
or
fmul
adc
imul
push
out
xchg
xor
cs
mov
shl
cli
int
cmps
cmps
xor
fdiv
inc
pop
inc
test
lds
out
add
test
xchg
xchg
inc
inc
add
movs
retf
fadd
xor
js
jle
xchg
jae
int3
fbld
out
jne
repnz
jbe
pop
inc
mov
test
sbb
sbb
cmp
sbb
cmps
pop
jmp
jge
or
int
jne
faddp
fsubr
lods
sub
xchg
add
mov
push
xchg
leave
adc
mov
pop
dec
test
or
push
add
adc
vmptrst
enter
mov
aas
lahf
dec
rcl
fsub
xchg
jge
cmp
(bad)
retf
push
cmps
mov
cmc
push
sub
cmps
jle
jecxz
outs
or
rol
or
sbb
ins
gs
sbb
les
jge
nop
(bad)
out
push
add
add
loop
aam
sub
fstp
outs
cmp
cmp
cmp
out
fild
jnp
icebp
mov
aam
aas
test
inc
repz
fwait
lods
inc
cdq
dec
mov
dec
inc
lahf
in
inc
xor
fwait
cmc
adc
ja
xchg
ret
dec
ror
xor
xlat
jno
data16
mov
in
xchg
cld
mov
jns
pushf
lahf
dec
cdq
in
sar
fstp
sub
fwait
pop
add
pop
adc
inc
cmp
mov
bound
std
pusha
mov
ffreep
movs
cmc
jb
bound
push
xchg
ja
retf
jg
cmp
push
push
jno
dec
xchg
inc
sbb
xchg
std
lahf
std
dec
push
add
inc
xchg
xor
inc
dec
neg
imul
sbb
hlt
js
cmp
pop
aad
fld
jmp
cmp
mov
test
fs
fstp
inc
fild
adc
mov
inc
sub
aad
not
outs
push
mov
into
jmp
and
mov
mov
(bad)
jbe
out
jecxz
jle
pop
push
pop
in
aas
mov
mov
sbb
dec
ror
rcl
push
iret
stc
fbstp
xchg
adc
cdq
xor
sbb
pop
push
lods
adc
mov
add
das
mov
stc
(bad)
xlat
int3
(bad)
push
dec
sbb
jmp
test
jno
pop
fimul
cmps
or
fild
cmp
jae
lea
xchg
adc
push
sub
push
jp
(bad)
call
sbb
adc
lock
pop
repz
lahf
ror
cli
sti
sub
test
mov
cld
pop
(bad)
or
pop
int
mov
rol
cmp
outs
les
jecxz
push
mov
inc
or
dec
imul
les
outs
mov
(bad)
adc
loopne
pop
les
mov
(bad)
mov
cwde
mov
bound
jns
xor
cmc
cmp
aaa
stc
(bad)
jmp
lea
retf
test
rcr
dec
push
push
test
sub
in
mov
jnp
adc
aas
dec
push
jg
xchg
rol
mov
gs
pop
cli
or
push
sub
jb
mov
add
jp
loopne
mov
cli
and
push
sbb
test
mov
xchg
inc
pop
aad
vxorps
adc
adc
(bad)
xor
jns
js
fisub
cmp
inc
sbb
mov
addr16
dec
cs
cmp
sbb
add
xchg
fstp
(bad)
pop
mov
cmp
xlat
cmp
retf
lock
jg
push
adc
adc
sbb
push
hlt
fldenv
jns
xor
sbb
pop
and
add
int
or
fdiv
or
das
push
sahf
xchg
enter
stos
pop
and
xchg
mov
or
imul
add
inc
out
jp
xchg
cmps
mov
test
pushf
inc
or
inc
int
sbb
mov
rcr
cmp
jo
push
loop
pushf
pop
scas
jge
imul
mov
or
ret
test
lods
or
movs
lea
jmp
nop
leave
jns
adc
and
and
(bad)
jnp
pop
and
inc
out
pop
add
lds
inc
enter
or
fbstp
add
shl
pop
cmp
xchg
xchg
or
cdq
mov
add
mov
es
adc
mov
mov
ss
lea
and
outs
or
and
stos
pushf
das
adc
xchg
mov
dec
test
fcmovb
mov
(bad)
pop
fs
xor
ss
mov
xchg
(bad)
movs
pusha
test
xchg
aaa
adc
fnstsw
add
int3
push
pop
mov
mov
and
(bad)
jmp
inc
add
cmp
loopne
cmc
lock
xlat
pop
push
popa
loop
jns
inc
aad
push
xor
ror
stc
xchg
jns
in
call
fcmovb
pop
sbb
mov
or
call
xchg
fst
xchg
clc
sub
jne
loop
add
jmp
pushf
push
sbb
nop
je
sub
outs
sahf
mov
mov
xchg
shr
or
and
popa
sbb
aaa
sti
xor
in
add
cwde
out
dec
cmp
pop
lahf
rcl
or
inc
mov
dec
call
adc
jae
push
fidivr
dec
leave
in
add
add
cdq
pop
pop
pop
add
popa
push
or
push
arpl
mov
adc
(bad)
cmc
ror
push
cmps
hlt
ret
or
addr16
cmp
cli
stos
mov
inc
mov
pop
aam
cmps
cmp
and
inc
mov
xchg
and
shl
cwde
and
xor
sub
ins
fs
fisubr
dec
pop
cld
adc
lea
gs
push
aam
xchg
dec
mov
mov
aas
rol
call
mov
js
mov
mov
push
sbb
out
jns
ret
pop
push
jne
data16
ja
out
cmc
aam
stos
pop
jno
pop
jns
stc
sub
cmps
hlt
sbb
rol
aaa
enter
mov
xchg
push
mov
fcomp
and
xlat
jl
das
stos
mov
xor
jae
scas
or
sbb
loop
out
jns
cmc
outs
lahf
lahf
pop
cmps
(bad)
push
mov
pop
xor
imul
retf
sub
jg
inc
in
adc
xchg
mov
cdq
fadd
and
mov
mov
outs
(bad)
bound
idiv
mov
or
lods
enter
jge
cld
mov
cmps
dec
js
add
mov
mov
sbb
movs
outs
and
jne
or
jae
and
(bad)
fs
outs
dec
stos
hlt
pusha
push
mov
loope
fnsave
ja
rcl
push
or
sub
and
adc
mov
inc
jno
call
push
cmps
push
mov
adc
inc
inc
enterw
sub
into
mov
into
cmp
cmp
add
(bad)
ficomp
fdiv
outs
xor
and
lea
adc
enter
push
rcr
pop
xchg
xchg
dec
xlat
xor
inc
xchg
mov
sbb
mov
inc
ret
xor
mov
outs
and
frstor
mov
xlat
data16
cmp
ret
cmp
and
jne
outs
mov
xchg
xchg
xor
jnp
stos
fwait
ins
ror
retf
xchg
push
adc
and
jl
mov
test
bound
inc
icebp
adc
or
jmp
jns
mov
(bad)
pop
nop
cmp
sar
mov
sbb
inc
mov
aas
cmp
jo
add
cmp
add
adc
aas
repz
and
and
imul
sar
push
es
cs
inc
xchg
adc
leave
bound
cwde
ss
mov
stos
mov
mov
mov
leave
imul
push
repz
pop
mov
xchg
adc
inc
int3
arpl
lods
fmul
sub
sahf
dec
jl
mov
adc
retf
(bad)
jle
(bad)
sbb
cmp
add
adc
mov
outs
mov
sub
inc
(bad)
jnp
sbb
inc
popf
push
in
test
(bad)
das
fisub
dec
adc
jne
mov
push
test
data16
jns
xchg
aas
and
jo
xchg
in
test
(bad)
pop
adc
xchg
xor
push
sbb
push
cmps
jle
mov
in
inc
mov
adc
mov
or
dec
inc
test
pop
xchg
inc
cmps
sbb
sub
test
mov
dec
lods
adc
mov
and
sbb
icebp
(bad)
dec
sub
pusha
sub
dec
fs
adc
xchg
jmp
cmp
push
pop
add
xchg
xchg
push
xor
lods
inc
(bad)
mov
dec
or
cmp
in
ins
cli
or
call
mov
cwde
scas
pop
stos
es
stos
sbb
sub
nop
aad
cmp
xchg
test
mov
xchg
stos
int3
adc
xchg
push
and
push
sbb
sti
add
jnp
sbb
in
fidivr
fidivr
sbb
movs
pop
mov
pop
dec
cmps
mov
pusha
(bad)
mov
bound
xchg
jge
inc
cwde
push
pcmpeqb
push
pop
das
push
jmp
mov
lock
mov
sbb
movs
or
stos
in
sahf
push
push
and
mov
(bad)
mov
jmp
jp
add
or
or
ins
mov
add
sub
aas
push
cld
in
and
jle
dec
mov
test
test
jae
or
push
aas
xor
jecxz
sbb
cmp
ins
xchg
mov
movs
xchg
sub
adc
ja
out
in
hlt
out
jmp
movs
and
inc
jmp
stc
mov
or
dec
fcom
jnp
leave
dec
xchg
stos
mov
adc
mov
stc
ficom
pop
cs
mov
push
push
aam
and
ret
xchg
imul
(bad)
sti
inc
arpl
xchg
mov
pop
bound
pop
mov
jg
sub
xchg
or
mul
ror
rcr
mov
mov
or
call
cmp
add
sbb
pop
push
(bad)
or
or
xor
jmp
popf
jnp
xor
hlt
dec
test
mov
pusha
sbb
inc
push
cmps
(bad)
xor
xor
pushf
iret
daa
sbb
inc
xchg
dec
mov
xchg
mov
ror
adc
pop
and
jg
mov
dec
adc
icebp
lods
jecxz
cs
pop
imul
jp
popa
test
mov
sbb
push
dec
cmp
sahf
inc
movs
std
shl
push
dec
xor
jp
pushf
xor
dec
cwde
dec
repz
mov
rcl
(bad)
aam
(bad)
in
daa
pop
ficomp
aam
(bad)
pop
add
add
dec
and
push
test
mov
retf
ret
xchg
sub
aaa
cmp
cmc
add
cmp
outs
jns
cmp
in
pop
mov
push
fcomp
rcr
or
cs
push
inc
loope
shr
mov
out
jbe
test
add
push
adc
push
mov
dec
add
mov
dec
cmp
mov
push
sub
jne
fmul
fcmovbe
pop
ret
inc
or
ret
stos
mov
and
inc
dec
lds
aaa
gs
and
outs
outs
adc
push
mov
jp
aad
test
xor
aaa
cmp
or
jmp
jl
int
xchg
retf
mov
push
test
loop
add
dec
in
mov
and
add
out
fcomp
add
jne
mov
adc
lea
fiadd
aaa
mov
inc
scas
out
ficomp
nop
sbb
push
test
lods
push
sbb
in
ss
inc
cld
adc
test
das
das
mov
sbb
jmp
movs
sub
and
cmps
jle
mov
mov
or
pop
dec
sub
pop
in
out
cld
inc
loopne
jbe
addr16
(bad)
sub
fsub
addr16
xor
sbb
jge
push
sbb
retf
jb
scas
stos
push
mov
mov
das
and
mov
outs
jecxz
fdivr
and
imul
pushf
inc
mov
mov
jae
mov
es
push
retf
ror
pop
push
fcom
call
and
mov
jmp
inc
mov
popa
adc
and
jno
mov
outs
ror
cmp
loop
fiadd
test
test
mov
or
mov
add
in
ds
jp
xchg
mov
mov
sub
test
or
fistp
xchg
jb
mov
dec
(bad)
int
mov
mov
fcomp
pop
dec
rol
jp
xchg
and
mov
mov
pop
jg
lds
outs
dec
mov
mov
ret
add
inc
ret
jg
pop
out
push
mov
pop
xchg
mov
or
sub
lods
xchg
add
sbb
ror
pop
cwde
jo
(bad)
sub
add
adc
into
fmul
pop
sbb
repnz
pop
enter
or
aam
arpl
push
popa
mov
mov
sub
mov
dec
xor
cmps
mov
sbb
sti
ret
loop
add
jl
mov
iret
adc
scas
add
push
pushf
pop
(bad)
js
mov
mov
inc
jg
pusha
mov
or
std
jno
or
jmp
and
cmp
inc
xor
jmp
je
std
jp
in
out
or
jmp
test
(bad)
push
push
xchg
and
call
or
shr
test
inc
or
call
pop
dec
out
inc
jae
push
xor
sbb
jge
or
mov
cmps
sbb
movq
int
add
fst
mov
xor
in
js
(bad)
js
push
cmps
sahf
hlt
cli
sub
sub
xchg
scas
dec
mov
jns
push
push
push
dec
dec
test
int
es
cmp
dec
push
mov
add
into
data16
mov
mov
sbb
add
xchg
pop
and
dec
inc
xor
adc
sub
pop
loope
add
sub
cmp
mov
daa
cmps
xchg
adc
sahf
push
cmps
mov
fsubr
sub
mov
dec
cmp
and
push
stc
mov
dec
pop
shl
es
(bad)
into
jns
mov
and
ins
loopne
mov
mov
repnz
in
std
push
pop
pop
pop
mov
mov
pop
sar
mov
lods
mov
lods
ins
popa
iret
dec
sahf
fsub
(bad)
pop
ja
scas
inc
dec
lods
es
pop
xchg
jg
xchg
arpl
(bad)
jnp
movs
mov
sub
ret
scas
shr
test
pop
push
(bad)
je
push
mov
mov
leave
inc
bnd
adc
and
jp
mov
(bad)
dec
dec
pop
scas
jbe
je
(bad)
iret
adc
sub
scas
inc
in
cmps
inc
popa
pop
out
sbb
outs
imul
stc
jp
ja
fs
fisub
fxch
ss
dec
fcomp
push
aaa
dec
jno
ins
jecxz
lds
aam
and
daa
xlat
cmp
frstor
dec
add
aam
xor
add
test
adc
jo
pop
test
idiv
mov
(bad)
es
add
sub
add
(bad)
fistp
pop
in
mov
sbb
fcomp
sub
retf
push
scas
pushf
enter
(bad)
jp
dec
movs
jb
cmp
mov
jp
fild
xlat
dec
sub
mov
fcom
jp
lds
ja
pusha
cmc
repz
or
fisttp
add
cmp
sbb
inc
pop
ja
or
rol
sbb
push
or
ins
xor
xchg
pop
or
xchg
pushf
dec
inc
mov
mov
enter
hlt
jecxz
js
dec
sbb
push
cmp
pop
jmp
retf
in
gs
fdivp
sbb
mov
and
mov
enter
fmul
scas
adc
out
test
stos
sub
lds
data16
and
mov
inc
les
sub
int
sub
mov
add
pcmpgtb
mov
inc
repz
jl
out
fnstsw
mov
push
pop
movsx
xor
test
data16
loopne
gs
adc
in
inc
cmp
sub
fmul
fs
cmps
in
cmp
fild
inc
jmp
mov
enter
cmps
jae
cmps
xchg
mov
(bad)
sub
cmps
pop
in
loop
outs
es
(bad)
ds
add
test
leave
cmp
int3
loope
dec
and
fcomp
xchg
mov
fidiv
das
jmp
xchg
icebp
xor
enter
data16
fstp
mov
std
dec
adc
inc
mov
cmp
xchg
(bad)
pop
xor
aad
test
cmps
mov
xchg
ret
pop
out
retf
mov
sub
xchg
cwde
imul
mov
and
xor
(bad)
out
inc
inc
push
outs
sahf
inc
imul
addr16
pop
int
mov
mov
cwde
add
add
jae
push
mov
cmp
cdq
retf
pop
fwait
sub
ins
sbb
and
repz
and
add
pop
inc
mov
retf
adc
aad
lods
jmp
inc
mov
inc
test
lods
arpl
cmp
in
mov
mov
jbe
(bad)
xor
test
mov
jecxz
loop
pop
mov
dec
pop
mov
mov
push
movs
adc
add
cwde
or
lock
cli
loop
fs
mov
dec
movs
xchg
jle
(bad)
push
jl
jmp
cmp
mov
jns
inc
int3
ret
inc
cld
cdq
aam
mul
push
lahf
mov
mov
cmp
icebp
push
or
into
jge
inc
pop
pop
in
sbb
sahf
adc
mov
int
clc
ins
dec
bound
shl
ja
outs
daa
out
mov
adc
aaa
out
jecxz
adc
fcmovu
sub
mov
(bad)
popa
inc
xor
imul
jmp
es
jmp
pop
fild
dec
mov
fs
push
and
push
and
aas
push
cdq
sbb
(bad)
(bad)
test
jns
adc
xchg
ror
xchg
imul
lahf
loopne
fs
pop
mov
sub
idiv
aad
cmps
dec
sbb
aad
fisubr
dec
leave
mov
pop
rcl
cmp
sub
sahf
or
div
mov
xor
add
mov
pop
mov
mov
imul
ret
push
ss
stos
(bad)
enter
add
(bad)
arpl
ins
fs
movs
jo
xchg
dec
fdiv
mov
push
inc
hlt
repz
dec
jmp
pop
mov
fidivr
push
pop
jno
pop
xchg
inc
jge
jmp
movs
pop
sub
(bad)
adc
pusha
add
test
cmp
mov
(bad)
xchg
int
pop
mov
mov
outs
pop
pop
and
or
sub
sub
jo
int
pop
jae
scas
sbb
out
sub
call
and
mov
sub
movs
xor
jmp
in
aad
ret
mov
mov
add
cdq
in
enter
mov
sbb
xchg
int
lods
int3
sbb
push
jae
adc
shr
add
mov
mov
pop
cmp
call
pop
mov
lock
inc
mov
repz
adc
inc
enter
popa
add
inc
ins
or
ja
cs
inc
xor
cmp
pop
out
push
shl
push
ins
ds
or
inc
stos
ja
xchg
ins
adc
cmp
add
jo
sbb
mov
mov
pop
mov
or
test
adc
sub
mov
call
push
pop
(bad)
pop
xchg
or
pop
rol
nop
dec
scas
test
test
enter
inc
cmp
ror
jg
int
out
cld
pop
cs
mov
mov
ins
icebp
out
cwde
and
icebp
pop
add
pop
mov
loop
enter
rcl
and
push
fstp
inc
fbstp
iret
fwait
mov
and
sub
mov
pop
pusha
dec
mov
xchg
lods
cdq
mov
cmp
add
(bad)
xor
mov
or
sbb
loope
cli
dec
or
xchg
in
mov
xchg
js
aam
fs
push
iret
enter
adc
xchg
mov
sub
or
into
stos
sbb
dec
xchg
cmp
popa
lods
scas
dec
iret
add
loopne
inc
mov
call
test
ret
inc
stos
dec
ja
jnp
mov
ret
repz
arpl
adc
pop
sbb
mov
adc
ins
xchg
ins
(bad)
hlt
sti
sti
aam
push
mov
jl
or
pop
pop
lods
loope
or
push
pushf
cmp
mov
push
rol
cmp
mov
jbe
sub
idiv
fld
fucom
aad
stc
sahf
test
loope
lock
or
adc
iret
scas
cdq
out
jg
sub
iret
mov
rol
repnz
mov
xchg
dec
ins
cmp
fistp
dec
xor
aad
(bad)
fld
sub
push
nop
in
cmp
test
nop
push
ja
pop
mov
repz
mov
inc
jno
repz
pop
not
lahf
or
stos
(bad)
or
fwait
(bad)
pop
jp
fstp
xchg
xchg
inc
icebp
pop
dec
fild
fadd
in
pop
sahf
mov
ins
push
sbb
data16
mov
xor
mov
dec
sub
jg
cmp
xchg
out
add
sti
movs
pop
pop
(bad)
outs
and
pop
cli
pusha
fmul
sbb
lahf
pop
mov
inc
lods
adc
dec
jmp
out
cmp
scas
pop
sub
jl
cmp
and
sub
and
enter
sbb
fwait
sar
xchg
push
je
dec
jns
cmp
adc
cld
jge
and
mov
jecxz
les
into
(bad)
call
sub
push
out
mov
movs
and
loop
scas
mov
leave
jmp
sti
stos
push
inc
add
repnz
mov
mov
shl
jecxz
push
jnp
and
and
sbb
shl
mov
or
adc
mov
and
jb
inc
ficomp
(bad)
mov
pop
popf
or
adc
mov
sub
lahf
add
xor
aaa
aad
mov
mov
xchg
xor
and
push
addr16
imul
sub
sub
sub
fwait
mov
in
movups
mov
dec
jecxz
out
stos
inc
dec
cmp
and
pop
outs
dec
adc
in
(bad)
dec
pop
mov
or
pop
jnp
mov
xor
jae
jno
into
mov
inc
stc
sub
shl
and
mov
pop
adc
jbe
dec
test
stc
call
fldenv
aas
mov
out
pop
push
dec
adc
jno
mov
js
ins
dec
pop
dec
mov
(bad)
aas
ret
jo
jns
push
mov
mov
into
xchg
ss
dec
fsubr
mov
repz
retf
js
fisttp
shl
shl
aas
push
icebp
out
add
jl
jg
xchg
inc
loop
fcom
fwait
fs
(bad)
js
aas
sbb
in
test
ret
scas
pop
xchg
xchg
cmp
mov
push
inc
push
scas
jb
inc
call
jecxz
dec
mov
xchg
jne
fisubr
mov
pop
loope
xchg
push
mov
in
out
xchg
shr
fs
pop
aam
mov
movs
push
dec
les
xchg
sub
enter
into
(bad)
and
sub
cld
(bad)
cmps
sub
push
jae
inc
add
fiadd
repnz
mov
jbe
mov
int3
call
push
xchg
imul
jecxz
ret
cmp
in
push
loope
push
cmp
and
ja
movs
pop
iret
stos
inc
xor
shl
mov
jae
and
outs
sub
sub
inc
rcl
enter
aad
cmp
pop
mov
xor
adc
cdq
mov
arpl
(bad)
cli
cmps
jmp
outs
xor
push
(bad)
in
jg
and
pop
mov
(bad)
stos
in
adc
mov
add
std
mov
sub
repz
rcr
sub
xchg
pop
fisub
xor
mov
aaa
and
sub
call
add
cmp
shl
hlt
fldl2t
cld
jp
dec
movs
pop
jno
sbb
mov
adc
add
add
push
inc
push
xor
lea
int
mov
xchg
into
popf
fimul
call
jp
out
pop
or
out
test
adc
mov
pop
push
mov
mov
loope
nop
sbb
push
scas
pop
jle
ret
iret
sbb
inc
pusha
sub
xor
aad
mov
stos
pop
(bad)
push
sahf
xor
adc
pop
std
jle
bound
mov
inc
in
inc
mov
and
adc
mov
sbb
cmps
ret
jle
sbb
add
fmul
push
std
xor
lods
rol
shl
sub
xor
sub
add
stc
mov
jnp
loope
popf
jb
neg
std
ret
or
pop
mov
stc
movs
retf
xchg
ror
(bad)
mov
mov
int3
adc
mov
lea
ret
cli
jns
out
xor
in
pop
ds
inc
(bad)
cld
adc
dec
repz
mov
dec
mov
fnstenv
sbb
sub
int3
cmp
sub
fxch
mov
jl
cmp
jnp
xchg
xchg
inc
call
mov
mov
jne
dec
pop
test
imul
pop
cmp
sti
mov
adc
inc
xchg
jbe
pop
and
(bad)
arpl
jnp
xor
fsubp
dec
(bad)
cwde
mov
inc
sub
mov
repnz
push
iret
shl
aam
and
ins
push
fs
jp
dec
or
mov
sub
(bad)
fiadd
clc
and
sbb
dec
adc
mov
dec
arpl
mov
and
mov
jle
gs
outs
jp
and
push
or
mov
jmp
shr
inc
stos
hlt
xchg
pop
jle
jno
mov
das
rcr
clc
jl
mov
movs
and
leave
sbb
movs
repz
in
and
adc
mov
loopne
movs
nop
lods
sub
mov
push
xchg
cmp
jns
retf
mov
cs
daa
push
sar
repnz
int3
mov
scas
cs
or
imul
pusha
das
cmp
addr16
sti
arpl
ret
mov
movs
sub
mov
xchg
jecxz
push
scas
sbb
sub
mov
pop
pop
and
scas
sbb
mov
mov
movs
or
movs
jge
jnp
aam
mov
mov
fidiv
daa
cld
enter
add
sti
out
jb
lahf
mov
(bad)
jns
mov
in
push
ss
ret
ror
xchg
mov
cmp
movs
es
lods
nop
inc
arpl
imul
aaa
enter
adc
lea
js
cld
or
cmp
xor
xor
call
add
iret
fucomp
jo
cli
cmps
clc
mov
cmp
aas
mov
call
hlt
mov
nop
js
jmp
movs
(bad)
xor
and
or
push
inc
dec
push
out
mov
pop
clc
fidivr
push
cs
lock
mov
js
test
scas
push
imul
sub
dec
sbb
dec
call
fwait
pop
jecxz
mov
push
add
ds
jns
and
push
pop
and
or
ds
ja
mov
cwde
sub
or
ficom
ror
xor
and
mov
sub
adc
and
and
das
arpl
popf
cwde
(bad)
scas
outs
cmp
xchg
add
jp
nop
stos
sbb
lds
aas
xor
movs
mov
push
xchg
push
sti
(bad)
fsubrp
mov
pop
sub
adc
in
dec
aaa
cmc
mov
call
popf
fld
cmp
aad
loop
add
dec
and
ret
sub
mov
sub
mov
dec
ss
inc
mov
lahf
test
mov
(bad)
cmp
into
arpl
and
jmp
mov
or
cmp
fistp
outs
pop
clc
iret
dec
sub
fmul
in
cmp
lods
xchg
ds
mov
arpl
or
jmp
call
fcmovnbe
clc
sbb
push
hlt
xor
popa
lods
adc
push
div
and
xor
jb
mov
mov
dec
sbb
in
push
push
push
jge
loop
cmp
out
cmps
pop
out
mov
cmp
lods
dec
push
dec
sbb
popf
push
sbb
mov
jbe
in
pop
inc
push
sub
xor
jnp
mov
out
mov
clc
cmp
push
pop
into
adc
gs
ins
lock
jno
xor
and
dec
call
inc
(bad)
mov
adc
push
push
es
and
pop
or
or
mov
mov
adc
loop
or
aas
dec
movs
xor
inc
inc
rcl
mov
inc
retf
test
mov
adc
mov
jl
shr
add
in
adc
outs
sbb
cmp
outs
dec
ret
test
dec
in
jo
xchg
(bad)
mov
ret
dec
aam
xchg
push
(bad)
retf
cmp
mov
lods
add
lea
ret
fadd
out
sub
mov
inc
push
aad
(bad)
adc
cs
aas
pop
retf
or
xor
hlt
cmp
ret
fidiv
and
jg
pop
pop
jns
fadd
adc
xchg
push
rol
mov
pop
cmp
mov
jp
jns
xor
dec
sub
mov
aad
cld
mov
adc
cmp
das
sub
inc
pop
fadd
xor
sbb
out
sub
jge
stos
xchg
ins
xor
or
aam
neg
add
inc
pop
popa
inc
mov
iret
jnp
repnz
inc
cmp
popa
lahf
lock
ss
test
sub
mov
jb
jecxz
jno
xchg
test
std
arpl
ret
inc
pop
cwde
mov
bound
add
mov
cmp
ds
jmp
mov
cmp
mov
fstp
ins
and
into
xchg
adc
fwait
das
and
sub
addr16
xor
arpl
sub
fiadd
mov
daa
sbb
sub
cmp
outs
faddp
ret
in
cmp
pop
cmc
call
xor
enter
inc
mov
dec
or
jo
add
mov
push
dec
js
mov
lds
mov
loopne
mov
adc
mov
xor
daa
icebp
jecxz
mov
inc
push
xor
imul
repz
dec
xchg
push
out
pop
inc
pop
hlt
push
and
push
(bad)
in
lods
dec
push
dec
xchg
ret
cld
mov
cmp
mov
sahf
or
dec
cmp
adc
lods
jle
xor
jmp
pop
call
and
xchg
jl
loop
loopne
sbb
cmc
clc
pop
loop
mov
int3
xor
jle
cld
add
iret
scas
pop
dec
out
or
xor
xchg
jl
je
mov
nop
movs
inc
xor
ds
sbb
dec
fidiv
test
jmp
test
outs
out
adc
sti
fstp
dec
xchg
dec
ja
(bad)
dec
dec
arpl
mov
xor
cmp
call
xor
push
mov
and
shl
mov
fcom
pop
test
sub
mov
cmp
mov
pop
(bad)
fmul
mov
mov
mov
jo
mov
inc
ret
jge
xor
adc
pop
pop
pop
cmp
addr16
lea
clc
test
arpl
cmp
sar
push
out
cld
dec
lock
jns
adc
adc
rcr
and
inc
fstp
jo
cmp
xchg
dec
aam
and
xchg
inc
stc
push
cmp
mov
fimul
in
loop
and
jmp
sbb
mov
push
fisubr
and
les
popa
lock
mov
sbb
sub
call
inc
push
cmps
xchg
sub
cmp
movs
dec
clc
ins
aaa
aaa
jecxz
jmp
lock
push
sbb
mov
sbb
iret
add
fcmovbe
pushf
and
jno
pop
mov
jmp
test
and
cmp
xor
je
sub
push
movs
rcr
jle
push
lock
cs
test
lds
out
mov
rcr
xchg
test
push
cmps
xor
lds
std
push
pop
mov
cmp
pop
cld
bound
jecxz
inc
int3
xchg
xchg
jmp
inc
out
push
pop
inc
retf
or
push
mov
or
adc
das
adc
call
inc
mov
(bad)
jmp
dec
scas
add
cmp
xchg
jnp
push
push
mov
mov
je
retf
and
test
mov
int
xchg
cmps
in
fnsave
jmp
neg
xchg
dec
mov
pop
push
and
sbb
mov
jb
aam
pusha
xchg
aaa
jmp
sahf
inc
cmps
xchg
neg
daa
jo
cs
sub
out
leave
push
xor
sbb
rcr
leave
leave
ja
cmp
ins
jle
sub
hlt
daa
add
loope
mov
dec
repz
push
fcomp
iretw
or
test
outs
mov
jno
xchg
and
sbb
mov
shr
inc
pop
xchg
pop
repz
pusha
cmp
pop
in
outs
mov
mov
jne
inc
adc
adc
fistp
sub
mov
cmp
mov
inc
les
and
ins
push
push
bound
add
cmc
sub
dec
sub
jmp
mov
sub
xchg
ret
in
mov
rol
sahf
xchg
scas
push
pop
sub
stos
std
and
cld
jno
and
and
sbb
std
daa
out
outs
addr16
and
pop
test
div
imul
pop
push
addr16
out
popa
movs
sbb
mov
shl
jmp
rcr
lods
(bad)
ins
jb
mov
rcr
sub
mov
pusha
imul
mov
jns
ins
popa
cmp
jns
addr16
jnp
inc
mov
xor
(bad)
hlt
popf
(bad)
cmps
and
rcl
add
dec
lds
movs
and
mov
cmp
cmp
aas
test
leave
scas
add
push
push
xchg
arpl
mov
icebp
add
popf
or
push
fidiv
dec
movs
mov
nop
shl
adc
daa
jne
inc
inc
add
jns
sbb
(bad)
xchg
in
dec
jmp
lds
lds
sub
or
xchg
pop
jno
movs
dec
inc
mov
leave
pop
sbb
jno
add
movs
repz
add
repz
in
add
mov
in
shl
aas
add
jb
adc
cmc
xlat
and
mul
jo
pop
push
popf
mov
sbb
das
dec
and
mov
sbb
adc
sbb
jge
cmp
mov
xlat
and
loop
stos
js
ror
cmp
aam
stos
adc
sbb
sbb
retf
inc
lds
dec
ins
cwde
test
dec
push
cmp
fimul
jecxz
push
xchg
inc
mov
sub
out
inc
stc
pop
aaa
jecxz
lds
aas
push
scas
jmp
jbe
outs
add
mov
inc
stc
mov
mov
mov
loopne
fld
call
sahf
add
pop
cmps
dec
and
sbb
aam
pop
hlt
cdq
cmc
mov
dec
inc
jo
pop
stos
and
xchg
aas
cmp
in
js
ret
dec
mov
rcr
pop
jg
test
and
and
imul
scas
or
mov
push
in
in
sub
outs
int3
jmp
repnz
mov
rol
mov
inc
je
sti
(bad)
imul
test
or
out
cmc
sub
add
mov
rep
sbb
dec
(bad)
das
jnp
xor
test
jmp
cdq
jno
cmp
out
dec
fistp
pop
rcr
cwde
sbb
retf
dec
mov
das
imul
and
inc
mov
leave
xlat
dec
adc
xor
ins
and
xchg
sti
mov
push
lahf
inc
rcr
sub
jp
pusha
adc
and
adc
dec
jl
in
xor
(bad)
xchg
fisttp
mov
mov
cli
inc
mov
and
fst
xor
or
sub
rol
mov
push
ret
jp
jnp
sub
mov
mov
sub
dec
push
cmp
pushf
push
movs
(bad)
adc
int3
xor
pop
xor
jecxz
mov
scas
mulps
inc
test
les
xchg
jae
std
out
fldcw
loopne
jecxz
test
mov
dec
push
jo
push
popf
inc
pop
ins
mov
pushf
adc
mov
and
cmc
test
rol
in
xor
dec
sbb
in
dec
add
fistp
in
mov
jo
ror
lods
fcomp
fst
mov
add
push
leave
jno
pop
inc
inc
inc
daa
std
inc
mov
ror
div
push
and
add
push
mov
ja
adc
mov
dec
out
or
jl
pop
mov
fadd
mov
mov
mov
fs
push
mov
push
mov
clc
pop
es
push
xchg
enter
out
pop
cmc
out
mov
lds
scas
add
cs
dec
inc
lea
dec
dec
popa
dec
inc
in
fwait
mov
(bad)
push
ror
dec
jle
xor
pop
adc
jns
add
pop
jno
movs
add
fsubr
movs
mov
sbb
fwait
(bad)
xor
dec
fld
getsec
inc
and
je
sub
icebp
jb
shl
cmp
adc
sbb
outs
in
sub
cmp
push
pop
sti
daa
inc
sbb
adc
(bad)
mul
adc
pop
inc
scas
shl
add
fist
push
inc
or
fdiv
test
sub
ja
jne
push
sub
fld
xchg
adc
loop
inc
inc
retf
cmp
(bad)
or
(bad)
adc
mov
pop
aad
or
addr16
lahf
lahf
pop
loope
mov
pop
dec
in
and
inc
pop
out
jl
in
in
ins
push
arpl
pusha
sar
inc
push
jmp
sbb
pop
sbb
lds
adc
adc
add
call
or
outs
cld
add
(bad)
ja
pop
jmp
loope
xchg
mov
cmp
inc
mov
call
bound
pop
mov
inc
inc
repnz
imul
inc
(bad)
mov
xchg
daa
dec
fidivr
pop
add
add
int3
imul
adc
jb
add
out
inc
je
lea
sbb
fadd
cmp
dec
and
test
cmc
mov
les
fistp
jmp
mov
cmp
and
pop
jg
sahf
sub
fcmovu
push
mov
push
inc
shl
ret
and
stos
cmp
mov
sbb
out
jmp
inc
fbstp
movs
push
cmps
xchg
xchg
cmps
xchg
jg
jae
dec
in
mov
push
cmp
jns
mov
pop
cwde
lock
xchg
sub
ret
clc
adc
mov
ins
loopne
stc
test
jb
dec
push
and
(bad)
add
push
sbb
stos
arpl
pop
jns
dec
sub
retf
adc
sub
dec
or
fcomp
aas
nop
xor
xor
xchg
dec
lea
mov
jmp
mov
data16
xlat
in
dec
iret
xchg
push
bound
and
call
repnz
int3
lods
scas
push
int3
xchg
es
cdq
ror
ret
jmp
ss
icebp
leave
fstp
lds
jae
bound
xchg
inc
out
imul
shl
xor
sbb
adc
add
sub
xlat
mov
fistp
retf
push
pop
leave
pop
mov
in
xchg
push
mov
xchg
push
pushf
mov
data16
add
jo
out
imul
les
xor
bound
fld
fmulp
sbb
inc
loopne
push
xchg
or
inc
pop
sub
outs
arpl
xchg
lea
call
stos
cdq
push
mov
inc
pop
test
dec
push
lock
mov
add
mov
mov
clc
pop
fld
retf
scas
dec
cmps
lods
shl
loopne
into
pusha
pusha
adc
jmp
adc
or
in
xchg
and
outs
scas
out
sbb
mov
call
nop
outs
push
sbb
not
push
or
mov
push
xlat
pop
mov
jne
loop
sub
int
mov
pop
ss
jmp
frstor
das
jns
sub
(bad)
aas
xchg
mov
jmp
dec
rol
mov
mov
mov
test
pop
pop
add
in
test
and
adc
jp
push
xor
int3
in
or
shl
jnp
movs
fcom
icebp
adc
aas
xchg
ins
xor
xor
mov
lds
in
or
push
in
ins
lods
cmps
rcl
mov
fsubr
cli
out
inc
mov
and
lds
push
mov
cdq
(bad)
sbb
mov
imul
sbb
and
js
push
outs
mov
aas
mov
mov
lahf
icebp
sbb
loopne
or
sbb
clc
call
mov
adc
or
jb
sub
push
push
outs
ror
les
call
call
inc
mov
inc
nop
popa
add
popa
cmp
and
pop
retf
je
and
repz
push
xor
int3
cld
push
xchg
out
adc
or
cmps
xchg
(bad)
fsub
and
fwait
cmp
js
jle
les
shl
repz
pop
or
mov
aaa
and
aas
call
xchg
cmp
sub
hlt
adc
iret
xchg
cmp
in
lods
(bad)
mov
jmp
mov
dec
aam
movs
cli
cmp
sahf
outs
sti
scas
xor
shl
inc
xor
jle
je
jo
pop
cdq
mov
ds
mov
lds
sar
lock
mov
aad
daa
lahf
movs
scas
mov
push
dec
mov
mov
sbb
mov
add
sub
push
rcl
jno
cmp
sahf
cmp
fdivr
iret
test
or
fisttp
mov
push
mov
lods
shl
xchg
das
push
xchg
pusha
jp
jp
in
jecxz
xlat
xor
cli
mov
or
push
stos
lds
shr
mov
xchg
or
stos
or
jns
mov
aad
push
mov
inc
sub
push
add
xchg
jno
pop
clc
mov
loope
pop
push
sar
(bad)
(bad)
mov
psadbw
mov
pop
add
xchg
and
jno
out
pushf
dec
jge
add
nop
mov
pushf
mov
icebp
or
popa
gs
movs
daa
gs
mov
pop
xor
push
sub
jle
cmps
pop
loope
(bad)
call
es
mov
cmp
icebp
mov
xor
lods
add
imul
push
mov
sbb
jge
fcom
fnstenv
addr16
in
cwde
les
cmps
mov
push
push
aam
call
mov
jo
ret
sub
out
popa
xchg
in
ret
jmp
mov
retf
inc
and
mov
pop
mov
dec
imul
jecxz
pop
arpl
pop
mov
pop
cmps
rcr
sbb
cld
xchg
push
xor
push
push
sub
push
add
lods
in
mov
add
pop
push
nop
push
inc
in
hlt
(bad)
fistp
popa
sti
cmp
shr
jge
or
lds
xchg
push
mov
jg
stc
test
mov
inc
mov
aam
cwde
push
jnp
and
pop
mov
dec
mov
jecxz
enter
call
inc
sub
dec
sub
push
cli
ret
cdq
cmp
dec
inc
add
sti
sub
(bad)
jnp
xchg
retf
and
or
ret
fucomp
aas
and
cdq
div
xchg
jb
lods
pop
cs
dec
jl
dec
cmp
pusha
jae
test
call
mov
arpl
scas
in
push
ror
(bad)
sbb
aaa
jo
loopne
scas
mov
test
(bad)
mov
and
cmp
add
xor
fsub
int
xor
xchg
cmp
adc
mov
pop
aam
sbb
pop
or
mov
cmp
or
retf
out
outs
xlat
pop
fcomp
adc
hlt
pop
mov
sahf
sub
dec
mov
push
loop
cdq
popw
sub
sbb
xchg
jle
mov
movs
cmp
xchg
jp
mov
lock
call
lds
vmread
jg
xor
mov
add
retf
mov
movs
adc
stos
in
dec
add
inc
add
xchg
add
mov
sub
outs
cli
jae
out
xchg
add
cmc
inc
xchg
push
jae
adc
mov
inc
test
aad
retf
enter
in
adc
sbb
jp
add
sbb
cmp
cwde
clc
sub
cmp
ja
sub
xor
mov
bound
cmp
icebp
inc
daa
repnz
iret
repz
or
add
add
rcr
dec
pop
or
xchg
and
rcr
jmp
not
bound
call
inc
mov
push
inc
mov
xchg
les
xor
stos
push
push
or
outs
mov
inc
sub
cmps
out
push
dec
sahf
xlat
push
mov
adc
in
outs
(bad)
lock
aaa
inc
sbb
fistp
pop
jl
push
cld
dec
sub
hlt
stos
fbstp
lahf
ins
push
and
(bad)
mov
inc
lods
mov
adc
ret
xchg
stos
adc
js
test
pusha
sub
dec
nop
adc
cmp
aaa
lock
cli
(bad)
push
imul
and
sub
outs
stc
(bad)
scas
cmp
div
mov
sar
xchg
pop
ins
test
sub
mov
inc
cmp
pop
scas
mov
into
push
inc
jge
loopne
ins
icebp
fbstp
jb
(bad)
sbb
idiv
jmp
aad
(bad)
ret
scas
and
xchg
imul
jp
pop
stc
xchg
std
cmp
dec
push
leave
mov
nop
add
mov
mov
or
mov
inc
daa
shl
sbb
imul
cmp
retf
hlt
xor
imul
data16
out
mov
test
std
mov
push
sahf
pop
adc
popf
add
pushf
dec
and
pop
cld
jmp
inc
fs
(bad)
inc
out
mov
sbb
fs
dec
adc
or
xchg
pop
pop
mov
fadd
xor
fisub
inc
xor
inc
and
ret
cmc
fstp
in
jg
xchg
dec
movs
mov
addr16
adc
and
or
hlt
mov
fadd
data16
retf
xor
cli
mov
sti
push
data16
xchg
fisubr
loopne
data16
cli
icebp
and
pusha
cmp
adc
sbb
mov
outs
test
push
sti
sub
and
int3
jge
xlat
imul
mov
xchg
sbb
xchg
cs
mov
jl
lahf
mov
jmp
or
popf
and
xchg
out
xchg
(bad)
sbb
sahf
jmp
les
fs
fisub
inc
call
inc
sub
xchg
inc
adc
add
xor
sub
jb
xlat
sub
mov
inc
mov
sub
mov
sbb
xor
cli
and
jg
bound
pushf
enter
inc
hlt
out
(bad)
cmps
loope
mov
shr
dec
mov
lea
jnp
cli
(bad)
dec
fistp
out
xchg
mov
dec
sub
mov
imul
ds
call
(bad)
cli
and
je
imul
inc
sar
push
in
popa
mov
mov
aas
in
ret
fild
or
cmp
and
mov
mov
sub
xchg
xor
movs
push
push
xor
inc
ss
lock
jmp
xchg
mov
out
xchg
lods
retf
and
cmp
add
ret
add
ins
jp
inc
jg
xor
sahf
xor
in
int
jp
and
outs
aad
(bad)
mov
mov
out
xlat
(bad)
mov
xchg
int3
mov
push
mov
inc
out
outs
movs
popa
xchg
clc
mov
push
mov
imul
or
das
repz
je
scas
push
sub
pushf
dec
inc
outs
out
inc
pop
sbb
out
cmps
aam
inc
add
dec
movs
sub
out
iret
aad
pop
push
jno
sbb
lds
push
jae
rcr
repnz
shl
nop
inc
jge
lea
(bad)
fmul
pop
add
mov
inc
mov
mov
push
pop
sbb
jmp
xchg
xlat
xchg
xchg
sbb
outs
pop
pop
push
fadd
je
pop
pusha
lock
(bad)
dec
aas
mov
(bad)
aas
mov
je
adc
movs
das
add
mov
xchg
cmp
cmp
lock
mov
jmp
sbb
push
gs
push
fwait
scas
push
rcl
mov
mov
sbb
sbb
(bad)
add
jo
aam
mov
push
clc
je
push
xor
movs
cmps
dec
pop
in
push
mov
pop
adc
jl
inc
fucomi
jmp
ror
sub
repnz
push
lods
ret
ret
lock
push
shl
mov
pop
inc
sbb
into
out
pop
jecxz
mov
xor
cmp
sbb
jbe
fsub
and
jo
loop
xor
xchg
out
pop
jnp
mov
add
jecxz
push
enter
mov
mov
push
(bad)
mov
mov
sbb
movs
xor
js
adc
cmc
mov
sbb
jno
push
mov
push
outs
pop
mov
sahf
sub
jbe
dec
popf
cld
fwait
out
lock
call
jnp
mov
xor
pop
clc
lds
jmp
addr16
sbb
das
iret
pop
sbb
lahf
sub
in
not
sbb
stos
mov
sbb
out
es
mov
mov
jne
aas
(bad)
pop
lahf
inc
fnstsw
les
sub
test
aam
sbb
jno
test
not
and
jmp
mov
pop
data16
ret
out
sub
mov
push
add
pop
dec
add
jb
mov
dec
jae
sbb
push
push
lods
(bad)
arpl
adc
out
std
pop
mov
jmp
(bad)
js
(bad)
inc
js
repnz
shl
ja
lods
ins
sbb
shl
jmp
arpl
sbb
retf
out
or
push
mov
das
stos
adc
pop
rcr
sbb
xchg
pop
dec
push
sahf
ss
cmps
in
movs
mov
and
outs
sbb
out
jmp
test
movs
mov
pop
cmp
dec
pusha
cmp
ss
fisttp
add
movs
sbb
stos
loopne
aad
mov
das
retf
out
mov
ret
mov
add
in
xor
or
adc
push
inc
pop
pop
lds
out
adc
sbb
cmp
ja
(bad)
cmp
mov
cmp
add
mov
mov
jecxz
cmp
xchg
sub
mov
(bad)
(bad)
xlat
pop
sbb
imul
cmc
mov
idiv
movzx
jge
mov
rol
xchg
sub
in
lea
jle
push
mov
pusha
sub
and
call
add
fadd
rcr
inc
xchg
dec
adc
or
imul
clc
mov
dec
cmps
cmps
mov
sub
pand
lahf
sub
outs
inc
sub
mov
xlat
pop
scas
add
into
jp
jg
sbb
(bad)
mov
jecxz
loopne
gs
cmp
movs
add
test
or
jb
(bad)
test
mov
jbe
in
(bad)
sahf
rol
push
sar
sbb
fst
mov
lods
and
add
je
cs
(bad)
sub
pop
adc
icebp
std
fcmovu
or
lods
retf
out
mov
enter
(bad)
je
fsub
and
lock
inc
hlt
jo
pop
les
xor
push
mov
icebp
jb
or
mov
fdivr
jb
pop
mov
nop
into
cld
call
in
jp
lods
jg
mov
pmaxsw
sub
fwait
fwait
loop
lahf
in
fimul
in
ret
es
xchg
add
aaa
inc
(bad)
scas
imul
enter
dec
test
sahf
add
movs
mov
add
jb
hlt
inc
xchg
std
call
add
call
bound
jecxz
lock
sahf
mov
scas
mov
xor
lods
in
daa
inc
(bad)
repnz
pushf
rcr
xchg
xchg
(bad)
sahf
in
jb
adc
sti
mov
rcr
push
dec
fbld
xor
ja
sub
or
xor
js
sbb
jns
lahf
xchg
mov
cmp
cs
mov
sbb
dec
and
stos
fsubr
mov
sbb
push
leave
cs
mov
mov
xor
inc
sbb
fidiv
scas
je
dec
sahf
sub
jne
fisttp
or
sbb
sti
sub
repnz
adc
int3
ja
aad
adc
popa
test
cmc
test
jns
in
jle
dec
mov
in
in
dec
add
mov
pop
push
sar
fwait
xor
dec
rcr
cmp
loop
xchg
mul
fwait
jmp
sbb
out
mov
inc
cmp
xor
loope
pusha
mov
dec
loope
pop
into
out
inc
ds
push
(bad)
mov
cmc
ret
stos
mov
icebp
cmp
and
sub
and
pop
rcl
xchg
jbe
aaa
jns
cmp
fs
(bad)
in
and
imul
jg
inc
or
add
repnz
imul
push
in
jno
mov
dec
add
ror
add
cmp
xor
pop
pop
int
push
xchg
popa
mov
add
leave
jmp
push
aam
inc
or
stos
js
or
loope
fisub
out
(bad)
je
sub
add
test
jns
sbb
lock
daa
push
rcr
cmps
(bad)
xor
pop
cmps
stos
mov
mov
and
push
retf
mov
lahf
inc
test
jnp
lea
out
imul
imul
xchg
out
lods
cmps
cmp
bound
xchg
jmp
sub
dec
cli
push
pop
adc
sbb
jg
lods
adc
xchg
cmp
shl
push
popa
lods
cdq
fmulp
(bad)
jnp
xor
mov
sub
xchg
sbb
scas
and
cdq
cmp
push
inc
loope
sub
push
lds
cmc
mov
test
or
mov
sbb
mov
dec
mov
(bad)
pcmpeqw
push
xorps
movs
loope
push
and
rcl
jne
push
xor
xchg
xchg
add
xlat
sub
test
lods
mov
sbb
leave
mov
jbe
cmp
scas
dec
js
mov
xor
cmp
fst
pop
mov
(bad)
outs
adc
movs
call
lahf
cmp
jmp
rcl
es
stos
or
dec
sub
and
pop
rol
inc
pop
ins
jmp
jmp
and
int
xchg
mov
fcomp
mov
or
push
mov
scas
or
cmps
mov
mov
mov
pop
mov
sub
je
lea
sbb
repz
ss
retf
fisttp
fadd
cdq
or
adc
icebp
inc
mov
leave
rol
shl
xchg
inc
loope
out
mov
xor
push
or
sbb
xor
retf
cmc
cmp
int3
test
hlt
cmp
add
fist
dec
mov
lods
sub
cmp
xchg
dec
outs
imul
mov
mov
pushf
scas
stos
leave
lock
push
test
aaa
mov
and
dec
mov
add
jae
les
sbb
or
sahf
cli
xlat
pop
aaa
inc
dec
push
jl
test
sub
cmp
or
cmp
xchg
enter
jp
sub
sub
(bad)
or
xchg
lea
in
mov
fs
jmp
rcr
mov
shr
add
cdq
cdq
lods
push
rcl
adc
dec
mov
jecxz
sbb
mov
repnz
cdq
mov
iret
or
test
je
(bad)
fld
fistp
and
xchg
inc
sub
fst
popa
sub
ror
and
fild
sbb
jo
mov
dec
push
xor
xor
movs
jmp
mov
idiv
pop
mov
mov
sub
test
gs
push
retf
fimul
sbb
movs
and
push
div
sar
cmp
add
das
jnp
in
add
popf
add
dec
(bad)
cmp
fidiv
es
mov
xor
sbb
add
mov
jmp
push
aad
jl
movs
jno
pop
mov
fldenv
mov
or
retf
and
fist
mov
lahf
adc
out
adc
dec
stos
adc
xchg
adc
cdq
add
pop
popf
adc
pop
mul
mov
inc
push
movs
mov
push
jmp
or
rol
jmp
fidiv
stc
bound
in
mov
es
dec
ret
ret
inc
adc
(bad)
dec
loop
outs
bound
ins
addr16
jecxz
mov
push
out
leave
fidivr
cmp
adc
test
mov
out
cmp
and
jl
push
xlat
bound
dec
movs
inc
mov
jbe
cmps
ds
nop
dec
retf
stos
leave
popa
mov
jg
and
add
mov
sub
jecxz
jge
push
inc
cs
push
push
mov
(bad)
out
loop
dec
pop
aas
movs
xor
push
adc
jmp
adc
cmp
xor
mov
sbb
sbb
mov
rcl
or
fimul
ret
pop
nop
rcl
xchg
pop
aad
fistp
push
data16
xchg
popf
add
mov
out
jno
or
push
xchg
fdivr
mov
mov
pop
ja
aaa
push
les
xlat
dec
dec
xor
xor
lock
cmc
or
jmp
fisttp
cmps
mov
enter
mov
imul
sub
dec
fstp
les
push
jmp
cdq
add
ficom
ret
jmp
xor
ret
mov
pop
gs
jmp
mov
xchg
gs
fld
and
jmp
add
sub
mov
jmp
jmp
in
add
pop
shr
std
retf
and
int
dec
jmp
push
mov
mov
xor
rcr
pop
leave
fcom
adc
adc
jae
fdiv
xchg
lahf
mov
(bad)
jl
(bad)
mov
adc
jno
mov
in
cs
pop
and
adc
test
dec
adc
cmps
aam
mov
pop
into
cwde
into
mov
scas
pop
rcr
leave
scas
gs
arpl
mov
icebp
shl
mov
jmp
into
outs
mov
mov
(bad)
jle
lods
(bad)
jp
cmp
dec
and
mov
sbb
or
mov
sub
test
movs
jbe
xchg
popf
jg
xor
mov
stos
push
aad
cmp
adc
int
push
adc
test
and
inc
pop
sub
adc
cmps
mov
pop
nop
mov
push
ror
mov
in
xlat
pop
and
ret
mov
hlt
jb
loopne
ds
lods
sahf
jno
int3
xor
ds
mov
test
std
mov
pop
xchg
movs
ins
iret
test
loopne
(bad)
clc
xor
lds
lods
clc
(bad)
jno
mov
dec
js
mov
push
test
dec
jo
add
xlat
dec
cmp
adc
faddp
inc
imul
cmp
mov
inc
imul
or
pop
int3
inc
pop
jg
dec
mov
sub
or
retf
cmp
or
mov
cmp
pushf
imul
sbb
jmp
mov
movs
push
push
cwde
sti
mov
ins
cmp
xor
lds
add
mov
sbb
setp
jns
pop
pop
movs
aad
sub
leave
inc
pop
inc
(bad)
into
mov
push
add
mov
int3
push
push
pop
aad
push
outs
push
push
(bad)
pop
loopne
icebp
lods
jge
mov
js
or
jge
xchg
dec
cld
cmp
push
mov
dec
(bad)
cmp
and
adc
test
mov
stos
cwde
mov
outs
test
sbb
ja
jb
stos
test
push
leave
ds
add
mov
in
jbe
jg
xor
hlt
sub
popa
sbb
adc
nop
jo
cmps
or
pop
push
pop
dec
rol
add
dec
bound
scas
movs
inc
divps
loop
loopne
or
sahf
fcmovbe
jo
sub
and
sbb
sbb
push
adc
xchg
gs
mov
pop
ins
out
pop
int
sub
inc
sbb
aam
pop
mov
bound
xlat
push
cmp
mov
int
cmp
push
push
(bad)
pop
jne
outs
cmp
outs
mov
fwait
inc
gs
cmp
xchg
in
jmp
ficomp
(bad)
js
mov
sti
mov
or
mov
or
fisttp
and
sbb
outs
iret
and
and
cmp
or
imul
ins
pop
xor
repz
in
xor
cld
(bad)
es
int
(bad)
leave
or
add
mov
scas
mov
loope
push
popf
or
inc
call
mov
ds
jae
jle
jns
sbb
int
dec
pushf
ins
adc
mov
push
outs
sub
push
test
int
inc
and
rdmsr
add
ins
aas
sar
mov
outs
mov
loope
xor
push
movs
pushf
sahf
xor
iret
xchg
jge
or
add
mov
dec
fnsave
xchg
xchg
aaa
sbb
mov
mov
xchg
mov
mov
test
jmp
cmp
pop
add
mov
adc
movnti
pusha
jo
mov
xor
dec
cmp
cmp
cmp
sbb
sub
mov
cmp
sar
ret
cmps
dec
movnti
lods
push
push
mov
mov
pop
mov
mov
movs
dec
cmp
xchg
sti
rol
cld
cdq
mov
pushf
ror
mov
(bad)
fnstcw
ins
xchg
repz
das
mov
inc
aad
bound
sti
inc
test
repz
cld
xchg
and
hlt
mov
js
jge
cmp
fs
(bad)
adc
test
jns
jg
mov
mov
mov
pusha
(bad)
mov
clc
mov
nop
popa
pop
jmp
ins
addr16
mov
mov
push
call
or
inc
and
adc
pushf
sbb
lods
cdq
fneni(8087
bt
shl
stos
jne
inc
gs
call
pop
adc
loop
sub
add
jmp
push
cmp
dec
pop
shl
jno
adc
sar
or
and
dec
pop
or
ror
dec
lods
xchg
mov
es
cmp
hlt
stos
mov
pusha
or
aaa
push
inc
mov
scas
push
jecxz
push
sbb
cmps
pop
loope
and
add
fdiv
pop
pop
push
mov
repz
fnstcw
popf
sub
or
or
lea
movs
jbe
mov
push
enter
ins
pop
sbb
sub
outs
scas
xchg
test
sbb
and
adc
(bad)
mov
cmp
xchg
push
imul
movs
fcomp
push
jecxz
mov
call
sti
xor
pop
cmp
retf
mov
dec
cmp
ror
(bad)
and
mov
stos
jmp
nop
mov
test
in
int3
call
test
repz
dec
dec
mov
mov
aas
dec
mov
sbb
jle
(bad)
jmp
mov
sub
mov
int3
and
sub
pop
fmul
jmp
neg
pop
fwait
sub
pop
add
push
pushf
rol
daa
and
nop
cmp
out
or
add
jg
push
cmp
push
add
enter
lods
dec
sub
aad
add
jne
xor
inc
mov
repnz
xchg
jmp
mov
push
mov
adc
mov
pop
pop
push
fdiv
mov
cmps
mov
pop
shr
push
pop
neg
mov
stos
fucomp
jecxz
add
imul
jg
push
lahf
scas
cmp
test
mov
dec
push
shl
loopne
sub
and
ss
lock
xor
jmp
sub
in
xchg
loope
retf
xchg
nop
out
mov
das
pop
clc
lods
add
push
sub
pop
pushf
mov
xchg
lods
std
aad
pusha
adc
fwait
or
adc
fcomp
mov
ficomp
jbe
pop
xchg
ins
addr16
pop
xor
jge
std
mov
scas
mov
xchg
lods
xchg
loope
test
push
mov
mov
je
repnz
repz
cmps
pop
div
cdq
dec
mov
or
fisub
inc
add
fimul
cmp
adc
push
add
data16
mov
rcl
sub
xor
mov
in
mov
jmp
and
loopne
inc
stc
dec
not
retf
movs
lods
pop
sub
in
in
add
aad
mov
out
stos
mov
nop
notrack
imul
fidiv
sub
cdq
cmp
xchg
mov
dec
rcr
xlat
out
out
mov
sub
lods
xlat
inc
pushf
jmp
jmp
or
jb
or
ret
int3
and
mov
lods
fstp
sub
mov
lods
ds
cmp
pushf
mov
sbb
ror
rcl
pushf
push
jne
idiv
mov
ins
ds
imul
cld
bound
out
aas
dec
adc
fiadd
push
daa
fdivr
test
push
cmp
dec
lock
popf
fidiv
fnsave
pop
aas
cmc
inc
(bad)
inc
gs
and
sub
push
scas
or
push
pushf
push
popa
dec
rcr
arpl
popf
or
(bad)
int3
mov
mov
das
xor
add
data16
push
sti
push
jo
fsubr
push
mov
into
adc
mov
xchg
dec
push
cdq
ds
sub
hlt
arpl
fnstcw
aaa
push
adc
out
mov
je
ins
sbb
retf
jno
lds
addr16
(bad)
retf
fimul
shl
inc
loopne
push
add
das
mov
xchg
lods
outs
(bad)
xor
loope
es
mov
movs
addr16
xor
mov
repnz
adc
jbe
outs
and
and
push
push
rcl
in
ja
xor
sub
lods
mov
(bad)
shl
addr16
add
test
push
shl
das
adc
in
cmp
enter
out
(bad)
inc
sbb
call
lahf
mov
inc
push
scas
pop
daa
js
mov
pop
xchg
ja
cs
push
shl
cdq
test
push
push
cmps
popa
push
pop
dec
jae
out
lods
movs
imul
adc
aas
mov
adc
xor
je
bound
add
and
jp
mov
pop
dec
mul
out
mov
inc
dec
xor
imul
icebp
jmp
xor
adc
mov
jmp
or
fiadd
push
dec
or
jbe
leave
sub
repnz
pusha
lahf
(bad)
lea
ret
ss
(bad)
sub
cld
bound
mov
dec
sbb
cmp
sbb
or
dec
xchg
cmps
push
push
jp
(bad)
aas
mov
sub
adc
iret
retf
pop
xchg
pushf
push
stc
inc
pop
cdq
sub
loop
aaa
pop
adc
js
sbb
add
mov
retf
and
sbb
pop
retf
mov
xor
add
dec
aam
or
pop
and
jbe
mov
xchg
xor
cmp
fstp
pause
into
sub
popf
or
add
aam
xlat
lods
push
into
sub
mov
add
imul
pusha
ins
in
ror
pop
dec
call
inc
loopne
fmulp
mov
push
or
fsub
mov
adc
dec
add
sti
stos
call
jnp
pop
and
push
popf
xchg
and
mov
retf
jecxz
(bad)
jmp
imul
(bad)
sti
dec
xor
pop
mov
push
mov
sti
(bad)
(bad)
dec
pop
stos
nop
cmps
dec
cmp
popa
stos
lds
(bad)
mov
int3
cmp
rcr
pusha
icebp
scas
bound
push
popa
clc
dec
daa
and
xchg
mov
shl
fwait
ins
scas
mov
push
inc
mov
gs
fcom
mov
daa
(bad)
ins
inc
in
add
sbb
stos
jns
mov
ret
(bad)
movs
sbb
retf
lock
fdiv
jg
mov
out
sub
lock
and
mov
mov
inc
test
hlt
jbe
ds
ror
jo
mov
mov
inc
xor
sti
sub
aam
iret
xchg
outs
lock
cmp
xchg
les
sub
and
mov
out
xchg
dec
js
add
xchg
scas
lock
aad
cmp
(bad)
call
or
cmc
mov
cmp
fs
inc
mov
push
jae
mov
fisubr
loopne
push
cs
mov
jge
mov
aaa
shr
push
test
aaa
or
repnz
inc
imul
shl
sub
cmp
aaa
repz
sub
or
mov
nop
dec
jecxz
xchg
pop
ins
(bad)
and
cmps
sbb
sbb
imul
loope
jmp
pop
pop
fdiv
sbb
bound
cld
or
push
mov
jg
rol
xchg
std
and
(bad)
mov
pop
div
std
push
mov
sti
leave
in
jno
sti
popa
cmc
push
rcr
push
push
and
inc
fmul
fimul
repz
mov
in
arpl
es
popa
and
pop
push
sbb
adc
out
retf
in
es
call
push
or
shl
xor
neg
push
mov
pop
sub
clc
fwait
lea
or
enter
shl
rcr
jmp
rcl
or
push
das
pmullw
jbe
jns
lods
es
dec
adc
cli
xor
out
xchg
or
lock
scas
cmp
add
and
or
cli
mov
cmc
sub
sub
das
mov
sub
sbb
(bad)
pop
test
rol
sub
into
out
aad
push
push
sub
imul
in
inc
sbb
outs
int
ins
pop
jbe
mov
fnstcw
push
inc
inc
xchg
scas
mov
cmc
cwde
icebp
fisttp
test
push
mov
jl
dec
mov
cld
out
popa
xor
pop
pusha
dec
arpl
or
jbe
add
xchg
push
lock
ds
test
mov
(bad)
addr16
mov
mov
mov
cmp
shr
loop
leave
or
cmp
adc
stc
sbb
xchg
mov
dec
inc
xor
push
jle
stos
xor
setns
leave
mov
cmp
add
xchg
xchg
jne
push
mov
xchg
inc
fwait
dec
ds
in
ror
pop
aas
mov
push
scas
ds
push
hlt
inc
mov
mov
les
and
fidiv
sbb
pop
cli
out
cdq
mov
sahf
out
push
nop
adc
fwait
stos
fwait
xchg
loope
mov
ret
in
push
mov
adc
jns
aaa
sbb
pop
pop
and
xchg
pop
add
mov
push
fisubr
cmp
jle
inc
mov
cs
push
lock
mov
dec
mov
data16
cmp
std
cmp
pop
fsubr
xor
imul
pushf
and
jne
sub
add
xchg
stos
add
inc
shl
lahf
test
sub
sub
into
nop
jbe
fadd
and
xor
adc
and
push
push
(bad)
sub
jne
jo
sbb
mov
push
pusha
push
mov
adc
mov
shl
sbb
and
inc
(bad)
push
fadd
je
fs
cs
ja
mov
adc
jmp
cmp
mov
mov
push
pop
enter
lock
pop
mov
std
in
int3
js
pop
(bad)
and
mov
aad
and
imul
inc
and
fs
repnz
test
mov
cmp
aas
outs
sti
xor
test
(bad)
rcr
aam
fs
jecxz
fild
jl
adc
loope
in
or
retf
mov
cmp
sbb
jbe
or
inc
xor
js
in
aam
sbb
sbb
enter
loopne
pop
mov
imul
shl
cmp
mov
pop
mov
(bad)
xlat
sbb
out
mov
fsub
sbb
clc
xor
lock
hlt
adc
lock
dec
xor
imul
mov
es
mov
xchg
fstp
fwait
mov
cdq
daa
(bad)
fs
arpl
push
mov
hlt
fst
fs
adc
in
fsubr
ror
sbb
jae
cmp
mov
sbb
hlt
test
scas
xchg
mov
and
xchg
clc
in
(bad)
jmp
inc
shl
sti
das
mov
sbb
add
test
mov
add
(bad)
push
in
jl
icebp
sbb
push
test
inc
adc
imul
xor
cli
cmp
mov
lahf
or
(bad)
jge
fstp
lods
mov
inc
jl
retf
ret
adc
ret
stc
jmp
pusha
int3
les
inc
stos
inc
xor
rol
add
jae
jl
sbb
push
stos
movs
fisubr
sub
inc
adc
or
jbe
les
clc
xor
loop
sub
pop
pop
cmp
dec
scas
add
or
xor
shr
mov
out
mov
adc
cmp
ins
fwait
cs
cmps
sub
icebp
shl
add
adc
and
push
mov
popa
jg
out
imul
(bad)
ret
std
sub
jo
call
ss
jge
jecxz
cs
xor
hlt
push
scas
(bad)
cmp
jmp
cld
test
xchg
xor
icebp
sub
push
xchg
sbb
in
(bad)
or
xor
mov
pop
inc
call
xchg
loope
shr
call
in
inc
nop
hlt
cwde
push
fnstcw
outs
mov
xor
rol
out
pop
iret
jle
adc
push
xor
xor
out
pop
adc
jne
fidivr
jne
or
xchg
lock
cdq
lock
sbb
add
add
inc
ss
clc
mov
mov
pop
sbb
jmp
push
cmp
stos
movs
bound
ins
sbb
inc
xchg
sahf
lds
cmps
fisub
sbb
dec
gs
popf
loope
jno
push
outs
ficomp
out
js
out
stos
xchg
or
ret
repz
sub
adc
adc
sub
sti
xor
xchg
out
push
sahf
mov
fwait
sbb
dec
dec
adc
sub
jb
je
movs
loopne
xor
jno
les
push
mov
nop
dec
xchg
(bad)
jecxz
or
push
fwait
sub
lock
retf
sub
mov
scas
adc
in
les
into
and
inc
pop
ja
cmp
out
fisttp
push
in
push
mov
inc
div
out
add
or
push
xor
push
lea
mov
push
jb
cmp
test
dec
int3
lahf
adc
jne
jmp
or
mov
pop
xor
test
xchg
mov
ins
jno
int3
int3
cmc
ja
dec
and
jbe
popf
inc
stos
xor
jns
and
aad
adc
enter
ins
leave
movs
xchg
rol
sub
cmc
mov
jmp
mov
mov
xchg
push
xchg
xor
ins
loop
add
sub
sbb
xchg
arpl
sub
lea
jg
inc
fild
mov
sbb
imul
sub
pop
mov
rcl
xchg
xchg
adc
cmp
cld
adc
jmp
dec
into
lock
fild
xor
mov
push
fxch
ror
nop
fistp
daa
or
arpl
jb
inc
(bad)
jno
fwait
inc
pop
dec
jecxz
or
shl
loope
dec
outs
jne
push
adc
and
push
rcr
adc
lea
xchg
gs
sbb
mov
dec
lahf
push
ret
sub
jbe
popa
add
and
jle
hlt
push
cmp
pushf
std
daa
push
add
rcl
loope
es
jmp
adc
lods
sbb
sub
out
mov
lahf
and
adc
mov
lahf
adc
popf
gs
inc
cmp
pop
cmp
mov
mov
test
dec
(bad)
cmp
rol
out
jmp
out
push
cdq
jmp
adc
stos
push
jns
loop
push
xlat
sbb
xchg
adc
or
or
inc
jbe
test
pop
xor
nop
nop
das
xor
jnp
shl
mov
cdq
mov
hlt
xchg
popa
addr16
aas
jl
fbstp
fidiv
popa
iret
xchg
jae
sti
sbb
lahf
dec
jle
mov
js
add
(bad)
into
jp
out
por
outs
dec
mov
jle
xchg
clc
scas
or
mov
adc
inc
sbb
cli
dec
xchg
sbb
xor
and
sub
cdq
mov
cmp
std
jo
aaa
pop
sub
or
(bad)
loope
adc
inc
dec
fcomp
in
dec
sub
lods
or
pop
mov
or
pop
xchg
sbb
jecxz
js
fisubr
sbb
mov
or
mov
pop
xchg
ss
dec
jg
rcr
pop
sbb
mov
inc
cmp
fdiv
pop
das
dec
xchg
fdiv
mov
add
add
push
pop
jns
nop
sub
push
ins
es
jb
sub
xchg
add
mov
je
cli
or
xchg
push
mov
add
or
push
clc
dec
sub
mov
xor
push
xor
sbb
fwait
jmp
inc
sub
pop
sub
add
mov
cmp
rol
out
inc
push
mov
cli
ret
fisubr
xor
scas
enter
mov
data16
dec
inc
dec
cli
lods
pop
das
cmp
div
lods
dec
daa
xor
fisttp
dec
int
stos
fidivr
aaa
pop
mov
mov
test
call
mov
pop
lods
sti
push
push
icebp
jb
cld
push
sbb
hlt
outs
sub
mov
test
repz
movs
xchg
jmp
movs
xchg
add
dec
out
inc
mov
inc
lods
inc
push
cmp
fisub
das
mov
ret
jno
imul
adc
scas
adc
and
push
xor
in
fcomp
pop
imul
retf
push
cmps
int3
dec
and
addr16
aaa
jge
call
push
pop
jmp
and
push
xchg
push
cmc
lods
push
push
or
sahf
ss
js
pusha
pop
sub
lds
sbb
sub
push
aas
es
pop
push
gs
icebp
fmul
and
cmp
adc
fmul
rcr
rol
jno
inc
pop
jo
mov
and
test
jns
pushf
mov
add
mov
jp
mov
mov
enter
lods
lea
std
repnz
jo
stos
rcr
xchg
(bad)
iret
and
std
xchg
cmp
cld
imul
xor
pop
jnp
and
in
hlt
sub
scas
stos
jae
sbb
ficom
push
out
dec
pop
test
cmc
push
sub
aam
mov
push
mov
lods
or
js
cmp
test
sbb
pop
loope
shr
sbb
mov
mov
xor
or
dec
jg
and
and
and
in
pop
inc
jne
bound
das
inc
in
add
or
mov
lds
mov
mov
in
fwait
lods
push
aaa
mov
push
repz
adc
fdiv
rcr
cmp
mov
stos
cdq
push
pop
ds
not
test
push
popf
sbb
nop
or
es
mov
xor
mov
adc
sbb
ins
pop
aad
std
xchg
jnp
enter
mov
add
cmp
push
mov
frstor
adc
jo
stos
stc
cmc
aad
sbb
data16
stc
fcmovnbe
mov
lahf
das
fnstcw
sbb
js
jbe
je
pushf
in
rcr
sbb
jge
sub
sahf
iret
popa
out
scas
sub
mov
aam
sub
shl
push
pop
mov
stos
pop
pop
js
popa
push
into
das
sbb
test
(bad)
xchg
ret
xlat
xor
push
clc
jecxz
ds
sbb
inc
retf
mov
ds
mov
add
xchg
sub
adc
into
daa
mov
int3
(bad)
cdq
pop
aad
int3
popf
mov
jp
mov
inc
pop
jne
mov
loopne
scas
cmp
or
(bad)
lods
lods
xchg
sbb
cmps
and
fs
dec
or
daa
mov
leave
sbb
lods
or
nop
cmp
das
pop
push
addr16
(bad)
std
mov
das
sbb
lods
out
sbb
movs
inc
jle
or
inc
xchg
popf
jnp
out
mov
test
int
cmp
nop
add
push
mov
push
cwde
gs
fsub
sbb
pop
pop
push
jne
imul
sub
xor
nop
and
xchg
xchg
mov
pushf
mov
xor
in
push
loopne
xchg
add
xor
int
xor
popf
or
sti
jno
out
inc
(bad)
cmps
cmp
cdq
cdq
push
sbb
or
pop
(bad)
xor
or
call
lock
scas
xor
stc
or
jne
cmp
pop
and
pop
jno
ds
fmul
xor
mov
aad
mov
sbb
adc
sub
add
js
adc
add
shl
loopne
out
sar
pop
push
xchg
sub
jb
inc
add
(bad)
dec
(bad)
int
pop
mov
call
or
pop
xchg
xchg
adc
in
and
jne
pop
mov
inc
test
pop
sub
ret
sub
enter
and
leave
retf
add
rcl
mov
cmc
pop
mov
aaa
mov
clc
cmc
push
daa
cmp
jl
(bad)
mov
call
push
enter
xchg
dec
daa
loope
adc
mov
enter
mov
out
mov
ret
and
xor
int3
dec
(bad)
mov
retf
and
dec
pushf
xor
cmc
sbb
or
jmp
push
xor
inc
mov
enter
mov
mov
data16
(bad)
movs
aad
outs
sete
xor
je
jb
test
xchg
fisubr
xor
pop
shr
jp
test
aaa
push
imul
retf
in
dec
xchg
cli
rcl
scas
push
lods
arpl
iret
shr
fwait
dec
jp
jl
mov
pop
dec
mov
retf
pop
dec
jbe
sbb
stos
pop
pop
or
mov
das
repz
lods
(bad)
adc
fadd
xchg
cmc
bound
jg
sbb
cmp
aam
out
adc
hlt
sbb
pop
push
shl
daa
xchg
dec
ss
push
sbb
dec
outs
cld
jge
imul
into
mov
inc
push
sbb
in
bound
xchg
out
mov
xor
push
in
mov
pop
sub
call
fisub
test
pop
pop
sbb
push
inc
jle
iret
xchg
sahf
fild
pop
adc
pop
inc
out
mov
xchg
inc
test
mov
adc
repnz
sub
data16
and
jae
push
mov
lea
repnz
mov
(bad)
sub
or
dec
mov
cmp
jecxz
fistp
and
(bad)
gs
pop
add
shl
popf
int3
(bad)
iret
pusha
pop
dec
push
push
pop
loopne
jecxz
inc
imul
add
mov
(bad)
jecxz
in
jnp
adc
pop
and
cmp
cdq
dec
jecxz
or
inc
fimul
and
rol
xchg
cmps
sub
sub
(bad)
and
cmp
adc
and
das
or
sbb
hlt
sbb
in
push
dec
in
xchg
inc
add
fdiv
ins
ins
dec
push
adc
cmps
sbb
jmp
mov
setnp
pop
(bad)
sbb
push
pop
ds
push
dec
pop
movs
mov
inc
(bad)
and
xchg
and
cmc
std
mov
adc
add
add
aaa
cmp
mov
jns
mov
or
cdq
sbb
dec
retf
hlt
cmp
inc
mov
push
or
jg
lea
jns
into
cli
rcl
and
enter
dec
test
xchg
and
fadd
push
adc
jne
outs
call
sub
jmp
pop
aad
int3
test
sti
std
jmp
test
push
xchg
and
and
imul
inc
inc
test
fcmovb
mov
dec
mov
xor
sub
mov
fwait
mov
in
das
jmp
sti
adc
lds
fld
inc
mov
and
cdq
or
aaa
mov
inc
push
ss
in
inc
dec
stc
dec
pop
rcr
aaa
aad
arpl
cmp
clc
pop
fidiv
loopne
fiadd
loope
loopne
sbb
enter
cwde
mov
add
shr
cmps
mov
mov
dec
into
mov
mov
adc
shr
mov
stos
repz
movs
jl
std
jmp
pusha
ficom
lea
js
inc
mov
mov
adc
jecxz
data16
cmps
cmps
push
outs
std
push
push
and
mov
in
sub
sub
or
je
aas
fbstp
inc
mov
lods
lods
dec
test
or
push
and
mov
int3
mov
lock
fist
imul
pop
test
mov
retf
and
cmp
fwait
pop
js
bnd
stc
cmp
jae
(bad)
add
repz
and
xchg
sub
push
fst
xchg
mov
mov
add
mov
sub
jmp
dec
inc
mov
xchg
dec
mov
sahf
and
fwait
jmp
ss
adc
mov
popf
add
sub
add
(bad)
fiadd
gs
test
adc
dec
and
repnz
lods
inc
or
push
(bad)
pop
mov
mov
jmp
sbb
push
imul
mov
mov
fild
or
stc
int
repz
mov
div
mov
aas
and
mov
aas
dec
mov
jbe
xchg
push
fs
sbb
sbb
mov
daa
xchg
loope
dec
sbb
sub
add
mov
stos
std
adc
cli
xchg
bound
(bad)
push
out
push
mov
hlt
popf
and
cmp
jecxz
cwde
test
sub
inc
fdivr
cdq
pop
(bad)
leave
iret
test
and
mov
int
jmp
mov
jmp
cmps
mov
mov
mov
inc
mov
fdivr
popf
mov
xor
call
repz
popf
jnp
in
inc
mov
das
dec
and
mov
sbb
push
jmp
ja
sbb
inc
sbb
mov
stos
mov
pop
pop
cmps
cmp
inc
dec
data16
test
in
(bad)
inc
sar
mov
adc
adc
mov
inc
sub
mov
addr16
and
inc
push
pop
mov
push
imul
outs
fcom
cmp
xlat
xor
cs
mov
jmp
and
pushf
jle
cmp
mov
icebp
bound
aas
inc
enter
mov
nop
int
je
pop
daa
out
mov
test
pop
xor
add
lock
add
cmps
mov
lds
inc
xchg
cmp
movs
(bad)
fwait
loope
jecxz
add
push
lea
cmp
cmp
dec
lea
ins
cmp
adc
retf
nop
fidiv
mov
cdq
aam
dec
jo
(bad)
cwde
xchg
pop
pop
dec
mov
xlat
popf
and
ret
clc
jnp
ins
rol
xor
jo
push
mov
cwde
daa
pop
mov
stos
and
mov
mov
fcmovnb
dec
mov
and
out
idiv
xchg
in
mov
das
les
call
sti
(bad)
in
(bad)
mov
int
ss
pushf
jmp
xchg
loope
pop
xor
mov
js
xor
push
jmp
ins
cs
xchg
push
and
or
pop
fistp
call
ret
sub
jmp
ss
pusha
shr
ins
sub
add
out
test
in
(bad)
cs
dec
inc
and
mov
jo
and
jae
jmp
(bad)
lds
fst
std
jae
push
shl
jb
enter
lock
adc
stos
mov
imul
sub
jae
sub
mov
mov
test
mov
mov
push
hlt
rcr
cmps
cwde
mov
iret
fidiv
pop
add
sbb
xchg
cmp
stos
adc
xlat
aaa
push
pop
in
ficomp
popa
fcos
mov
xor
cli
or
add
push
lods
dec
bound
cli
cmps
ss
add
jbe
pop
mov
sbb
xor
mov
xor
out
cmps
scas
jbe
mov
das
(bad)
out
inc
mov
sub
out
cmovg
sub
or
pop
sub
mov
sbb
loope
push
sbb
inc
mov
in
push
xchg
clc
jne
push
or
test
mov
xor
pop
adc
sbb
lods
mov
add
jl
inc
mov
addr16
jp
repz
fnstenv
jge
sbb
xor
jae
ret
jp
mov
mov
jo
fs
push
inc
mov
call
jle
mov
or
xchg
jae
fcmovnb
neg
lahf
aam
lea
neg
jecxz
mov
lahf
(bad)
pushf
repz
jbe
mov
dec
jbe
cld
inc
adc
in
sahf
ficom
popf
adc
(bad)
jecxz
mov
in
shl
mov
call
dec
xor
ss
dec
mov
repz
scas
xchg
pop
xor
popf
das
inc
xor
mov
mov
movs
cmps
inc
setae
shl
fmulp
arpl
les
ds
sbb
jmp
mov
imul
nop
xchg
sbb
jno
call
dec
push
iret
or
push
push
lods
imul
adc
fild
or
aaa
inc
call
xor
fsubr
test
aaa
pop
mov
fidiv
mov
pusha
mov
or
es
mov
movs
xlat
mov
push
retf
adc
pop
fisttp
repz
dec
inc
das
shl
push
cmp
lea
aam
adc
cmp
scas
int3
sti
jb
mov
movs
jle
call
xchg
cdq
ins
and
lock
jnp
xchg
mov
sub
jmp
fild
stos
enter
shr
dec
bound
sub
shl
mov
or
mov
loope
jp
add
in
adc
mov
or
jmp
les
ficomp
repnz
jne
pop
popf
mov
outs
or
fwait
inc
scas
jle
push
sbb
pop
cmp
in
shl
xchg
adc
or
xchg
lock
xchg
add
xor
or
dec
std
jp
sub
or
add
xchg
sbb
and
mov
or
inc
jg
sub
addr16
dec
jle
dec
inc
test
adc
pop
xor
nop
fcomp
aam
push
out
pushf
jmp
fs
sub
mov
mov
xlat
jb
and
xor
repz
lds
mov
psubb
out
es
push
fisttp
and
inc
cli
mov
imul
cmp
jae
mov
movs
in
cmc
lods
je
pop
mov
and
leave
xchg
stc
jnp
push
outs
dec
test
pop
cmps
fsubr
cmp
xchg
rcr
pop
jns
out
jmp
sbb
adc
cmps
int
xor
inc
lods
push
add
hlt
jns
das
(bad)
cmps
jmp
lock
and
jns
fstp
adc
jmp
out
add
mov
rcr
sbb
rcr
mov
retf
scas
jge
mov
xchg
in
xchg
ds
and
or
aam
hlt
out
cmps
jmp
push
and
add
mov
cmps
jg
je
jecxz
sbb
lss
hlt
cli
sbb
nop
cmp
sbb
shl
(bad)
pop
add
adc
cmps
mov
and
dec
es
cmp
les
clc
outs
aam
test
push
cmp
fwait
out
imul
lock
shl
dec
in
push
(bad)
movs
outs
pop
mov
mov
test
and
stos
xor
pop
inc
cmp
pop
jb
icebp
fwait
or
out
test
div
rcl
mov
add
inc
shl
add
mov
xchg
loop
and
inc
xchg
push
fcom
call
idiv
dec
test
pop
cmp
and
pop
add
xor
xchg
and
xchg
psllq
push
and
lods
shl
push
leave
retf
out
ins
fcomp
and
ret
lods
outs
sub
jae
push
mov
push
add
(bad)
adc
pushf
cmp
nop
(bad)
stc
add
repz
movs
xlat
jle
es
mov
leave
popf
repz
and
push
jle
mov
sub
in
lahf
test
sar
and
(bad)
sbb
mov
das
dec
pop
repnz
add
fsub
sbb
inc
mov
hlt
sar
add
sub
jge
mov
(bad)
cmp
sbb
cld
xchg
pop
leave
jg
add
add
das
add
retf
push
int3
xchg
inc
cmp
(bad)
out
xchg
push
bound
adc
es
out
jl
cmp
les
(bad)
jmp
dec
mov
loop
outs
add
popa
fstp
sub
cld
dec
dec
xor
les
jno
lods
dec
xchg
jecxz
dec
adc
sub
(bad)
dec
dec
jmp
in
repnz
jmp
shr
pop
test
test
call
inc
ret
movs
jae
(bad)
cmp
mov
(bad)
adc
les
cwde
stc
outs
rep
sbb
cmc
mov
popa
adc
dec
add
ret
fsubr
pushf
sub
sub
jl
pop
jle
cli
into
ss
mov
ins
lahf
rol
inc
(bad)
mov
mov
popf
mov
inc
cmp
adc
outs
or
inc
inc
das
sar
out
jl
or
and
sub
cmps
outs
add
into
in
push
or
(bad)
pop
jnp
and
cpuid
sbb
mov
and
pop
pop
push
mov
cmc
jge
inc
sbb
dec
dec
push
mov
xlat
xor
call
stos
dec
pushf
out
adc
stc
jno
neg
loop
dec
adc
mov
jecxz
stos
mov
or
ret
or
fld
ror
jae
movs
rcl
ret
mov
or
jne
dec
and
mov
std
sub
push
repnz
adc
or
lea
sub
sti
pop
xchg
out
sub
ret
stos
mov
jns
pop
mov
push
push
pop
pop
adc
ds
fcom
xchg
inc
in
xchg
bound
push
pop
xchg
and
mov
addr16
sbb
aaa
cmp
lock
retf
(bad)
cmp
ja
outs
jno
xchg
inc
xchg
or
cmp
(bad)
cld
and
inc
xchg
add
mov
fisttp
outs
loop
dec
enter
mov
adc
lahf
addr16
out
hlt
adc
jl
cmp
mul
adc
outs
jno
jle
lock
cmp
stos
test
add
push
out
mov
cwde
cmp
or
lahf
es
push
fst
imul
add
mov
dec
stos
sub
(bad)
add
lods
lods
fsubr
(bad)
cdq
lahf
jmp
(bad)
push
push
fcomip
jae
push
mov
dec
aad
and
mov
push
cmps
popa
in
div
and
pop
(bad)
fst
sbb
and
repz
popa
lds
push
and
adc
out
mov
ins
imul
sub
fiadd
popw
sub
sub
jbe
or
ss
jecxz
push
sbb
fisub
ins
push
push
cmp
daa
adc
iret
mov
imul
mov
xor
fimul
retf
movs
jmp
hlt
cmp
and
xor
xchg
sti
test
pop
push
lea
xchg
dec
cmp
sbb
jp
jmp
mov
push
adc
retf
or
sbb
ret
ror
sbb
mov
push
es
je
inc
stos
and
jecxz
pop
pop
or
cmps
add
add
stos
dec
or
cwde
aad
fwait
mov
shr
outs
in
dec
dec
sub
inc
outs
jp
lahf
inc
pop
add
movs
das
pushf
aas
imul
sbb
mov
ror
jne
mov
int3
cmp
pop
fdivr
or
mov
test
push
repz
jmp
test
inc
mov
jo
or
jns
jbe
xchg
dec
in
push
xor
inc
movs
(bad)
sbb
out
cli
mov
mov
dec
xor
jle
retf
push
stos
call
mov
sub
es
gs
jnp
lods
inc
or
pop
enter
fisubr
stc
sbb
js
xchg
ds
jecxz
fstp
imul
clc
test
je
ins
sbb
xchg
fist
pop
mov
pop
ror
popa
adc
push
(bad)
push
mov
(bad)
outs
test
push
xor
cdq
imul
inc
hlt
stos
dec
and
inc
shl
add
xchg
hlt
(bad)
mov
pop
stos
push
nop
sub
mov
mov
jne
movs
(bad)
rcl
stc
cmp
xchg
(bad)
mov
mov
push
fisttp
push
aad
dec
mov
je
movs
sbb
les
adc
sub
xchg
adc
fstp
out
stos
(bad)
scas
pop
pop
icebp
jne
mov
sub
or
ins
push
jno
daa
inc
arpl
push
jb
mov
sbb
mov
dec
mov
mov
dec
jmp
mov
pusha
in
mov
aam
movs
sub
push
(bad)
add
adc
cwde
mov
sub
xchg
fist
mov
mov
inc
cmc
and
dec
in
pop
xchg
in
movs
test
sbb
cmp
test
sub
mov
in
out
cmp
jnp
sar
jle
pop
xor
cdq
adc
push
mov
enter
repz
push
sbb
fsub
ins
adc
(bad)
push
popf
in
mov
add
add
sub
test
mov
loopne
lahf
inc
and
loop
inc
aas
das
adc
popf
std
sub
adc
adc
and
in
dec
aas
and
mov
sar
or
ja
jge
and
xor
or
pop
sbb
sti
xchg
js
jmp
gs
jne
inc
mov
inc
inc
cld
add
sbb
fst
ins
push
or
(bad)
pusha
sub
xchg
jmp
rol
pushf
xor
jnp
mov
cmp
mov
pop
push
sar
mov
mov
inc
imul
cs
(bad)
xor
jp
xchg
inc
fsubp
test
push
inc
cmp
push
pushf
xor
mov
or
out
mov
push
les
loopne
adc
imul
mov
cmp
mov
sub
jmp
(bad)
stos
xor
pop
pop
sub
shl
out
cdq
xchg
es
cmps
scas
sbb
dec
addr16
adc
retf
jmp
imul
jno
mov
hlt
dec
loope
xchg
add
xchg
dec
jno
jmp
ret
and
jb
hlt
out
push
rcr
jle
mov
nop
or
add
les
fbld
xor
and
jp
push
fnstenv
inc
jno
das
lds
push
int3
mov
xchg
ret
mov
(bad)
jmp
sub
fwait
sbb
xchg
cdq
cwde
mov
daa
imul
push
into
lahf
mov
sar
jmp
sti
push
mov
cmc
adc
cli
adc
mov
test
imul
es
es
push
mov
adc
xlat
les
sahf
lods
das
cmp
enter
xor
adc
test
xor
xlat
sub
pop
fidiv
xor
in
loope
and
jle
push
in
mov
mov
sti
dec
aas
daa
push
popa
mov
pop
(bad)
ins
sub
push
scas
dec
cli
adc
dec
lea
aaa
push
idiv
and
std
fldcw
test
and
sub
aaa
inc
push
xchg
retf
lock
pop
das
sub
repz
das
jae
push
xchg
js
xchg
mov
shl
dec
cwde
movs
mov
inc
aad
imul
push
pop
pop
aam
and
and
adc
out
iret
push
xchg
sub
or
or
mov
mov
leave
inc
aad
scas
dec
(bad)
jns
jmp
xchg
in
idiv
nop
ror
gs
cs
(bad)
out
(bad)
sbb
jae
les
repnz
test
add
retf
lods
pop
add
fisubr
fnstsw
inc
jmp
mov
stos
cmp
fld
stos
fadd
mov
add
pop
fcmovnu
sahf
outs
or
mov
aas
cmc
aaa
lea
and
jp
sbb
pop
in
mov
sti
ss
pop
int3
bound
cmc
push
stc
push
(bad)
mov
add
and
dec
in
shl
mov
cld
test
cmp
sbb
xchg
pop
js
call
jne
mov
sbb
int3
fucomi
fistp
repz
push
test
dec
adc
jno
gs
mul
mov
pop
add
out
stos
sub
dec
adc
jecxz
in
int
dec
dec
in
enter
mov
xchg
push
cmp
xor
daa
dec
sub
add
gs
aaa
daa
ds
popa
sbb
ins
in
rol
xchg
fisubr
(bad)
adc
inc
jg
scas
stos
push
add
cdq
cmp
jmp
das
nop
popf
dec
cmc
call
mov
cmc
push
sub
pusha
and
inc
call
xor
iret
jle
std
out
mov
mov
repnz
add
ja
popa
shl
adc
in
test
xlat
out
hlt
lea
mov
mov
test
push
cli
adc
dec
jbe
sub
stos
push
sbb
mov
les
aam
dec
cmp
shr
add
add
imul
mov
inc
repz
xor
shl
or
aad
adc
sub
jns
adc
mov
iret
xchg
sbb
mov
dec
shr
lahf
pop
mov
and
fnstcw
jnp
push
add
push
test
jb
hlt
mov
xor
dec
stos
push
mov
push
mov
cmp
sbb
push
or
pusha
test
test
xor
mov
rcr
xor
stos
nop
sbb
adc
mov
cmp
cmps
jbe
mov
test
mov
add
cmp
enter
loop
sub
aad
mov
mov
imul
mov
in
jge
cmp
fcmovu
sub
das
mov
cmp
add
jns
mov
xchg
push
icebp
and
dec
stos
sti
ins
enter
dec
or
push
xor
dec
cmp
fild
sbb
cwde
mul
movs
sbb
dec
jecxz
pop
in
lahf
dec
mov
jae
xchg
mov
adc
inc
add
jle
adc
out
dec
ins
inc
stos
add
cmp
push
out
xlat
into
jno
push
add
scas
sti
xor
aam
popa
gs
leave
mov
fmul
mov
pop
out
or
rcl
imul
pop
or
pusha
push
jmp
pop
xor
gs
adc
mov
into
pop
jb
fldl2e
sahf
dec
sbb
inc
daa
xor
lea
call
inc
retf
push
xchg
and
repz
push
fild
popf
mov
outs
pop
fbld
test
ficom
movs
adc
inc
shl
jl
mov
bound
ja
or
xor
mov
sbb
popf
retf
add
and
(bad)
xchg
mov
loop
mov
out
lock
or
push
mov
lods
push
retf
mov
or
add
sar
inc
jbe
in
test
jl
jmp
aad
jns
jae
in
mov
(bad)
and
cbw
repz
push
ja
push
pop
icebp
sbb
mov
jge
mov
shr
inc
loopne
stos
dec
sub
sub
(bad)
dec
sub
push
neg
pop
xor
push
fwait
(bad)
xchg
outs
loope
daa
bnd
inc
stc
dec
jge
adc
xchg
push
adc
loop
pop
(bad)
mov
sti
inc
cmc
adc
cmp
push
dec
cs
dec
das
push
in
js
pop
sbb
push
cdq
std
jnp
xchg
push
inc
cmp
xchg
(bad)
and
xchg
lea
daa
test
and
add
test
inc
sub
or
xchg
push
dec
leave
(bad)
ins
test
pop
inc
inc
xor
daa
push
mov
push
or
cmp
xor
cmp
sub
sub
push
adc
sbb
outs
mov
mov
sti
loop
push
add
adc
cli
out
mov
push
dec
adc
mov
fst
jno
jmp
adc
or
pop
loopne
sbb
(bad)
and
cmc
mov
aad
test
cmp
sbb
(bad)
shr
or
bound
mov
mov
sub
movs
sbb
sbb
adc
jne
rcr
or
in
xchg
(bad)
and
or
cmp
jnp
dec
enter
inc
stc
sahf
les
mov
popf
lahf
fild
push
cmc
rcr
arpl
cmp
std
jne
jle
loopne
fldcw
clc
sbb
mov
mov
test
rcr
push
cmc
test
cmp
mov
ret
xchg
call
mov
daa
(bad)
sbb
movs
push
jnp
aaa
fdivrp
loopne
push
sub
arpl
dec
add
ffree
cmp
adc
clc
out
pop
int
pusha
cmc
ret
add
lods
push
je
pop
cmp
sub
aaa
mov
adc
fld
push
dec
mov
retf
jns
mov
int
les
je
xor
mov
sbb
ficom
cmps
loop
arpl
cwde
sbb
jns
jmp
sub
mov
nop
jg
jg
lds
and
dec
sti
cmp
inc
or
ja
pushf
sub
inc
push
push
jge
xor
lods
scas
mov
pop
push
retf
bound
sbb
mov
adc
(bad)
jle
jnp
xchg
jl
mov
mov
jb
lahf
jl
jl
in
(bad)
cli
mov
mov
fs
dec
rcr
das
mov
call
dec
retf
push
jmp
daa
and
(bad)
data16
mov
shl
pop
mov
xor
and
pop
test
shl
push
ret
fst
mov
das
mov
mov
fiadd
dec
mov
stos
shl
mov
mov
fsub
enter
or
jg
pop
mov
into
inc
mov
retf
mov
or
push
add
ret
repnz
outs
fmul
loop
lock
aad
pop
lahf
add
mov
push
mov
dec
adc
add
xchg
ret
push
sbb
lods
enter
jae
cmp
dec
cwde
pop
push
scas
mov
sub
sub
fld
test
or
outs
pop
in
adc
fsubr
fistp
sub
lods
mov
ficom
aam
mov
dec
xor
movs
fdivr
push
cmp
sbb
pop
pop
scas
sub
mov
mov
or
xor
fdivr
inc
push
sub
sbb
push
dec
ffree
icebp
jg
dec
out
dec
(bad)
pop
es
adc
in
out
sbb
jp
out
cmp
call
xor
arpl
jg
cs
push
fstp
mov
mov
pop
adc
sti
or
ds
mov
xchg
mov
(bad)
push
loope
ret
jp
movq
jecxz
out
mov
sub
test
add
inc
mov
cmp
sub
dec
aas
popf
inc
or
arpl
and
cmp
jge
and
fmul
(bad)
pop
gs
mov
(bad)
mov
mov
mov
test
fisttp
push
ficomp
pop
sbb
mov
add
add
cmp
and
xlat
push
hlt
pop
sub
xchg
inc
sti
cdq
jbe
mov
mov
sti
jp
push
cdq
in
cdq
mov
sbb
test
xchg
push
ja
cmovge
or
pop
sub
pop
retf
pop
(bad)
dec
xchg
jne
dec
mov
cmps
ins
mov
popa
inc
aaa
mov
push
jmp
sub
data16
div
mov
or
or
cmc
and
pop
fidiv
cmp
cmp
fdiv
mov
call
lods
shl
imul
sub
sub
ds
and
lea
test
inc
push
(bad)
icebp
nop
xchg
jnp
dec
sub
(bad)
dec
pop
and
cmp
mov
xchg
push
data16
push
xchg
arpl
dec
repnz
movs
ins
adc
adc
into
inc
mov
mov
mov
xchg
loope
jno
retf
addr16
or
inc
lds
popa
fbld
stos
mov
add
sbb
pop
cli
enter
jae
mov
arpl
rcl
dec
fscale
loope
les
mov
add
inc
ins
jle
lock
popa
test
fisttp
clc
int3
jge
mov
jmp
je
fxch
movs
pop
pop
clc
jp
enter
mov
aas
inc
call
jmp
jg
pop
xchg
adc
ja
cmp
inc
mov
mov
mov
adc
je
arpl
(bad)
clc
stos
jns
push
shl
jns
dec
aad
stos
shr
es
fld
inc
in
jle
jmp
or
ins
(bad)
cmps
scas
jp
xor
or
xchg
ds
or
push
sar
inc
jecxz
cmp
popf
push
ds
(bad)
frstor
bound
mov
imul
or
or
out
scas
jp
mov
or
(bad)
mov
lods
hlt
inc
push
cli
iret
in
(bad)
sub
rcr
mov
xchg
lock
scas
dec
icebp
les
shr
xchg
repnz
test
mov
arpl
out
jo
(bad)
addr16
int
scas
daa
mov
push
fist
stos
inc
push
adc
jo
add
inc
cmps
outs
pop
dec
xchg
pop
dec
xchg
pop
dec
jmp
lods
hlt
mov
loop
movs
retf
jmp
test
icebp
stos
pop
scas
add
pop
ja
jno
xchg
int3
or
push
jae
jo
jnp
mov
sub
retf
sbb
pop
xor
nop
shl
jg
cmp
mov
js
jo
(bad)
adc
je
sbb
cmps
stos
xor
ins
das
fistp
out
jb
rol
popf
inc
test
add
iret
jns
sub
dec
js
retf
gs
shr
cvtps2pi
pcmpgtd
clc
adc
mov
test
sahf
mov
std
test
outs
xor
mov
jg
dec
adc
sbb
and
ins
test
xchg
mov
push
push
repz
cmp
gs
push
push
hlt
bnd
clc
dec
dec
inc
xlat
ja
test
je
ins
jb
and
and
sub
and
mov
lods
mov
and
cs
pop
(bad)
daa
pop
shr
xchg
leave
outs
xlat
ins
(bad)
stos
ins
iret
or
rcl
pop
push
sbb
mov
push
add
jnp
xor
popf
nop
sbb
sbb
mov
dec
fld
adc
js
mov
mov
push
mov
and
mov
mov
mov
inc
repz
mov
movs
mov
inc
daa
cdq
push
punpckhbw
cs
sub
jnp
(bad)
mov
addr16
mov
sahf
mov
mov
dec
not
jo
dec
or
dec
add
xlat
rcl
call
pop
push
aam
cmp
xor
push
jbe
xchg
xchg
and
fstp
mov
pop
lea
int
mov
mov
cmp
dec
push
jne
dec
push
inc
cmps
jo
test
pop
cmp
pop
cmps
sub
sbb
ins
adc
jns
push
add
aam
ret
mov
repnz
and
pop
cmp
cdq
movs
xor
xchg
call
out
push
loop
stos
push
(bad)
jmp
pop
mov
lods
es
fxam
repnz
mov
push
in
(bad)
scas
mov
push
fmulp
inc
in
jno
cs
push
data16
in
or
lock
mov
out
hlt
mov
lods
data16
(bad)
rcr
lods
mov
in
std
pop
and
mov
and
sub
sub
pop
les
fwait
call
xor
push
xor
mov
jb
pop
loop
out
xchg
mov
enter
cmp
xchg
arpl
ins
push
outs
cmc
mov
push
inc
xchg
pop
push
push
mov
jp
and
fsubr
popa
xchg
mov
xor
in
sar
push
mov
push
xor
ficom
fdiv
in
push
push
xchg
add
and
fcomp
sub
and
xor
jg
cwde
neg
xchg
bound
xchg
adc
inc
repz
inc
mov
lods
mov
sbb
sbb
daa
inc
inc
adc
add
in
mov
out
js
sar
bnd
lods
rol
adc
xor
adc
hlt
mov
call
xlat
mov
rcr
mov
es
cmp
push
fldcw
and
aaa
or
jmp
xor
push
push
jmp
or
jne
leave
icebp
fidiv
push
jns
push
aam
cmp
jmp
inc
fld
xor
stos
cmp
sbb
(bad)
ficomp
xor
xor
fld
in
and
push
sbb
fild
div
jae
(bad)
iret
and
data16
or
and
mov
jl
ds
ins
int3
xor
fldl2t
sbb
ror
push
cmp
sbb
sbb
add
sbb
push
adc
xchg
adc
pop
loop
pop
push
mov
pop
popa
int3
mov
mov
fs
and
mov
jnp
and
jne
pop
push
js
retf
dec
sti
jmp
or
jb
inc
or
iret
shl
iret
aas
pop
sub
inc
in
jbe
inc
imul
ins
push
fdivr
test
xlat
das
pop
(bad)
aam
push
add
(bad)
mov
call
fdivp
test
es
stos
fwait
add
push
jg
sbb
mov
int
cmp
add
addr16
test
dec
xor
xchg
push
icebp
fsubr
jmp
(bad)
add
or
test
dec
ret
inc
pushf
push
dec
call
xor
pop
jbe
fbld
sbb
imul
loop
int
xchg
xchg
mov
jns
mov
loope
jae
dec
cmp
pop
leave
pop
sub
loopne
pop
out
dec
test
mov
aas
scas
into
add
cs
jecxz
inc
fs
out
movs
in
jne
icebp
outs
jb
outs
pop
jge
and
mov
out
call
jmp
mov
cli
cdq
lahf
ss
fldcw
in
bound
push
aad
xlat
mov
icebp
test
push
mov
fs
pop
dec
out
pop
push
pop
xchg
inc
and
fld
cmps
mov
(bad)
cmp
data16
data16
scas
cmp
mov
jle
stc
in
and
xchg
(bad)
cdq
adc
test
sbb
cwde
dec
cmp
fucomi
sub
jne
xor
cmp
mov
je
stc
fwait
dec
mov
mov
repnz
aas
sub
sbb
xchg
fisttp
fmul
xchg
adc
jno
cmp
loope
lods
add
loope
inc
sub
scas
cmp
adc
fmul
in
or
fild
sar
pop
pusha
cmc
mov
push
add
addr16
jo
pop
fcom
add
(bad)
push
ret
lahf
cmp
ds
lock
jb
aas
adc
pop
jmp
mov
mov
pop
clc
mov
cmp
cld
lahf
in
inc
(bad)
sub
(bad)
out
das
fwait
imul
or
push
pop
adc
fcomip
in
stos
adc
push
push
out
pop
scas
mov
and
cld
jbe
xchg
fisttp
das
mov
iret
test
pop
jne
inc
push
cmc
nop
push
movs
xor
test
or
push
pop
cmps
shl
les
mov
rcl
jl
adc
mov
add
mov
es
call
mov
icebp
out
sub
pushf
inc
cmps
jb
jne
sbb
idiv
sub
das
jne
xlat
aaa
pop
mov
cld
push
jp
arpl
cmp
fnstcw
push
cmps
and
or
cmp
je
std
loop
scas
jbe
test
repnz
(bad)
dec
lods
movs
jle
arpl
push
cmp
cdq
adc
pop
cmp
ret
xlat
adc
aad
mov
mov
mul
(bad)
jg
mov
inc
xchg
cmp
add
xchg
pusha
data16
pop
fcomp
pop
inc
inc
inc
in
xchg
push
sbb
movs
jo
sar
ret
mov
push
sub
sti
sbb
out
sub
rcr
dec
rcl
lods
add
cmc
mov
fimul
aad
inc
out
clc
out
sbb
or
sub
inc
(bad)
or
sub
jecxz
scas
cwde
sar
cmp
dec
fwait
cli
daa
jne
mov
cwde
call
cmc
add
pop
sbb
scas
pop
fcom
repz
div
(bad)
test
ins
mov
loop
add
mov
ja
jp
jo
rcl
js
sahf
ret
adc
mov
das
dec
loope
jp
xchg
or
shl
xchg
lds
out
inc
and
sbb
cmp
(bad)
aam
stc
fs
mov
retf
or
jns
or
cmps
fldcw
out
(bad)
xchg
in
sub
or
icebp
jnp
pop
pop
in
jns
lds
jl
jno
sub
out
jb
dec
into
loop
xchg
sahf
rcl
inc
jo
inc
mov
and
pop
sub
dec
or
sbb
pusha
sub
mov
dec
push
inc
(bad)
aas
mov
out
xor
jae
pop
pop
ret
cmp
and
sub
out
jno
(bad)
aad
in
sub
and
loope
test
push
movs
dec
shl
das
out
cmp
adc
mov
push
sbb
push
mov
cdq
ret
call
in
mov
retf
pop
out
movs
das
mov
xchg
out
sbb
je
sbb
fs
add
pop
fwait
rep
push
iret
leave
xchg
dec
jb
mov
push
xor
aas
adc
(bad)
jne
mov
sbb
aam
sub
or
pop
data16
add
mov
pop
ins
repnz
imul
not
aaa
jge
mov
test
ins
mov
stos
jno
and
mov
(bad)
mov
shl
out
sub
jecxz
fwait
push
fist
xor
pop
idiv
jge
add
jg
adc
nop
xchg
mov
fwait
outs
mov
sbb
jp
push
loop
scas
dec
or
inc
pop
nop
cmp
stos
cmp
sbb
shl
cs
add
xor
cmp
pop
call
inc
cwde
into
mov
fisttp
inc
repnz
or
ror
sub
xchg
jge
jecxz
dec
fdiv
loopne
and
pop
sub
stos
push
cmp
xchg
inc
(bad)
xchg
fadd
and
std
adc
xchg
sub
sahf
sub
test
and
test
and
sbb
repz
and
inc
loop
pusha
pop
mov
mov
inc
xchg
fyl2xp1
sbb
xchg
pop
fcomp
jle
outs
sbb
int
inc
cmp
shr
cmp
jge
fdiv
ret
test
ror
out
loop
pop
push
cmp
adc
mov
popf
outs
ror
je
aas
pop
or
mov
fs
xchg
mov
and
es
jge
add
lods
cs
das
into
pushf
dec
es
mov
repnz
call
mov
pop
mov
jecxz
out
jb
push
jecxz
adc
mov
cld
ret
rcl
push
or
dec
inc
xchg
xchg
jle
stc
sub
in
adc
dec
outs
push
icebp
and
inc
sbb
and
in
mov
adc
inc
mov
rol
pop
stc
add
aam
stos
addr16
cmp
mov
mov
mov
mov
and
cli
mov
inc
cmp
sub
movs
int
push
add
pop
mov
cdq
pusha
xor
pop
cmp
and
mov
pop
push
clc
add
int
dec
cmps
mov
cmp
dec
add
aad
add
das
or
push
mov
sub
pop
ja
cli
jmp
jge
xor
sbb
sahf
popa
or
aad
inc
add
test
xor
mov
stc
loope
jne
scas
mov
pop
xchg
test
sub
daa
sub
les
aad
push
sbb
in
bound
push
add
jge
mov
mov
jmp
sub
outs
jno
adc
xchg
sbb
fiadd
pop
sub
dec
mov
push
aaa
aas
es
mov
rcl
xor
je
popa
xchg
mov
(bad)
out
jmp
arpl
in
addr16
adc
imul
xor
nop
add
adc
stos
and
lds
sbb
sbb
jmp
mov
fsubr
scas
jnp
pushf
mov
outs
jmp
pop
jp
retf
je
pusha
or
std
iret
mov
in
inc
shl
mov
mov
aaa
(bad)
or
shl
adc
sub
push
mov
ret
cmc
mov
jg
retf
push
add
out
mov
shl
scas
mov
lods
jae
mov
push
cld
jno
pop
adc
adc
xor
or
shl
dec
call
adc
and
rcl
addr16
dec
clc
cld
and
mov
repz
xchg
and
aaa
and
xchg
cmc
sti
sbb
jns
adc
pop
mov
gs
xchg
aam
sub
push
imul
or
loop
sar
cli
mov
popw
xlat
push
fwait
jge
xor
outs
mov
jno
jecxz
jno
into
pusha
xchg
mov
push
push
lea
aad
push
sbb
jg
push
cmp
imul
xor
mov
lods
jmp
les
iret
rol
pop
je
sbb
sub
movs
mov
mov
aas
ret
and
fdivr
gs
out
jnp
cmps
dec
test
(bad)
out
push
pop
jb
(bad)
mov
jl
psrlq
fst
mov
jae
lahf
cmp
sar
fisttp
jg
xchg
int
sbb
std
out
dec
xlat
imul
mov
jnp
stos
add
imul
sahf
add
sbb
mov
jo
and
sbb
push
pop
jns
test
imul
jo
pop
aam
sbb
shl
mov
(bad)
jg
or
xor
add
xor
jle
loopne
pop
xor
sub
xchg
clc
inc
and
(bad)
aaa
mov
mov
xchg
or
inc
add
adc
sub
test
(bad)
xchg
jne
dec
shr
sbb
xor
addr16
lea
nop
int3
dec
dec
(bad)
test
(bad)
mov
ja
add
add
jg
add
jae
pushf
cmp
ins
lahf
pop
or
sub
add
sti
xor
add
push
xchg
or
popa
jo
mov
test
add
fiadd
mov
ds
pop
fisttp
and
add
inc
pop
(bad)
jl
leave
lods
cmp
and
jae
outs
jb
clc
mov
shl
and
mov
fsub
dec
out
pop
cmp
jnp
cmp
xor
(bad)
out
mov
pop
xor
scas
es
mov
rol
xor
in
or
or
sub
arpl
mov
mul
mov
pop
add
jmp
or
pop
imul
pop
jo
push
xchg
jge
xor
inc
data16
pop
dec
bound
cld
popa
push
ret
adc
js
xchg
inc
int
data16
ins
cmps
sub
jle
lds
mov
jo
in
push
lods
rcl
or
mov
imul
pop
push
mov
test
into
add
jmp
ret
jae
inc
gs
or
stos
dec
fbstp
mov
pop
gs
gs
or
inc
adc
rol
inc
fnstsw
daa
mov
mov
sbb
movs
push
mov
pushf
ins
sbb
mov
pop
popf
push
iret
idiv
add
jle
cmp
inc
neg
jnp
dec
mov
ds
cwde
sete
add
outs
repnz
je
dec
mov
fsubp
out
stc
aam
mov
mov
cwde
push
pop
xor
push
xor
ror
add
ja
movs
aam
div
jne
cmp
repz
mov
clc
in
push
(bad)
ret
jmp
pop
xchg
ret
(bad)
inc
cmps
push
jg
pop
and
and
xchg
je
enter
into
mov
inc
jo
mov
out
dec
ins
xor
ins
add
pop
popa
dec
dec
xchg
and
imul
mov
inc
jmp
ret
jmp
pushf
imul
push
addr16
stos
jmp
dec
je
add
jle
mov
dec
cmp
or
adc
and
dec
sub
pop
and
loope
jle
out
fdivr
call
xor
popf
stos
mov
into
mov
pop
mov
fmul
and
out
xor
ret
sub
loope
pushf
xlat
inc
inc
lahf
inc
pop
jns
xchg
push
es
mov
call
in
mov
adc
dec
add
xchg
les
pusha
in
add
cmps
lahf
dec
sub
xor
xchg
stos
shl
in
xor
add
and
aaa
stc
test
repz
mov
jbe
ret
xchg
mov
sbb
out
mov
jg
(bad)
movs
and
sahf
dec
(bad)
push
push
or
adc
addr16
mov
icebp
jbe
cmp
idiv
mov
popf
push
add
jne
sbb
sub
sti
inc
pushf
mov
jge
add
push
mov
xrelease
sbb
imul
loopne
pop
mov
jb
aas
jns
mov
retf
xchg
out
pusha
pop
sahf
xchg
enter
jge
cmp
imul
jbe
jne
fwait
cmp
arpl
jne
cmp
stos
fild
ror
jmp
scas
inc
pop
xchg
xchg
out
and
xchg
dec
out
ret
outs
lds
or
cmc
cwde
jg
jne
jge
(bad)
leave
lea
xchg
dec
ret
xor
and
inc
dec
out
pop
xchg
ret
mov
popa
xor
out
ins
test
xor
inc
push
sahf
std
jmp
pop
xchg
xchg
inc
ret
ret
ja
pop
dec
pop
xchg
or
fldcw
pushf
ret
bnd
cmps
ret
xchg
in
jno
or
inc
in
lock
int
scas
lds
not
pop
les
iret
cmp
dec
cdq
pop
jb
sub
js
lds
repnz
test
pop
and
and
mov
sbb
je
push
movs
xchg
cld
push
add
mov
pop
push
push
xor
xchg
sti
enter
ds
loop
int
call
dec
add
pop
in
and
sbb
cmp
lds
cs
enter
lods
mov
stos
js
ret
xor
aas
popa
lods
jo
shl
mov
popa
jmp
add
out
bnd
adc
je
sbb
je
lods
fbstp
aam
sbb
cmc
dec
loopne
sahf
rol
push
shl
fild
push
push
call
mov
rcr
cmp
xchg
cdq
mov
add
cmp
shl
int3
xchg
popf
mov
mov
sbb
adc
and
or
leave
int3
enter
cli
in
xchg
add
lahf
mov
dec
mov
or
mov
xchg
imul
dec
xor
shr
add
(bad)
out
pop
jle
inc
mov
or
lods
mov
(bad)
adc
lock
ss
dec
fdivr
(bad)
mov
or
sub
fisubr
cs
dec
jle
xchg
jnp
sub
mov
sub
pop
dec
pop
repnz
in
test
cmc
cli
lea
mov
iret
fidiv
out
out
sbb
cwde
dec
lods
or
ret
push
imul
xchg
cmp
cs
cmp
cdq
outs
in
clc
inc
fwait
xor
xchg
movs
fxch
test
fild
or
and
ja
imul
out
push
cmp
fisttp
add
in
and
sbb
mov
gs
out
lahf
sub
in
pushf
xor
(bad)
(bad)
jecxz
sbb
out
xchg
nop
sub
imul
xadd
std
nop
scas
mov
popf
fcomp
mov
jge
pop
cmps
bound
push
jne
nop
ja
xchg
inc
int
jecxz
sbb
add
fsubr
adc
bound
inc
call
addr16
mov
xchg
lods
lods
pushf
aaa
into
dec
push
add
je
mov
xor
es
rcl
pop
jbe
jp
pop
and
pop
or
adc
xor
pushf
mov
mov
lock
mov
(bad)
neg
push
stos
mov
push
mov
or
push
and
mov
xor
fwait
dec
(bad)
sbb
inc
jo
imul
pop
lock
mov
out
xchg
and
dec
sub
pusha
jbe
xor
ins
sub
mov
arpl
add
xchg
das
jno
inc
ins
imul
pop
push
lahf
test
into
jne
std
xor
test
ror
ja
jle
jnp
xchg
xor
cmp
ja
std
pop
aaa
sub
loopne
std
adc
(bad)
out
pop
jae
into
cdq
mov
sbb
xor
mov
out
lea
dec
sbb
data16
scas
pop
lahf
adc
pop
aam
sti
xchg
jmp
and
test
(bad)
mov
vmovaps
popf
sbb
clc
retf
push
out
jb
xor
imul
cmp
mov
push
jb
sti
push
sub
push
(bad)
mov
mov
lods
fs
sbb
push
frstor
dec
and
xchg
mov
out
jp
cmp
les
sub
dec
push
xor
outs
dec
add
jmp
push
cmp
aas
test
dec
push
lea
mov
mov
xchg
xchg
outs
xor
inc
je
mov
xchg
outs
daa
xor
jmp
mov
xchg
int3
outs
adc
sar
out
mov
fcom
test
out
and
add
in
mov
fmul
sub
xor
mov
ss
xchg
ret
cmp
pop
add
ins
shl
sbb
dec
inc
cli
call
fwait
movs
in
gs
cmp
fmulp
mov
cs
pop
pop
enter
popa
popf
sbb
mov
rcr
xchg
in
les
dec
jg
inc
aad
imul
dec
add
pop
pop
dec
aad
xchg
or
adc
push
pop
push
mov
xchg
movs
ja
stos
cmp
mov
(bad)
sub
inc
and
rcl
retf
fistp
pop
lods
xchg
scas
cmps
mov
sub
mov
bound
in
xor
call
cld
nop
sbb
mov
and
ins
mov
pop
jns
cld
and
mov
push
jmp
cmp
pop
jl
mov
sbb
in
pop
add
dec
push
xlat
push
xchg
ds
push
or
aad
cmp
std
out
pop
dec
(bad)
sub
stos
and
adc
pop
les
push
into
jmp
push
in
movs
out
fsub
lods
mov
daa
push
adc
test
aaa
dec
push
adc
push
jae
xchg
dec
sar
test
std
and
dec
outs
push
ds
mov
aas
jl
jmp
or
dec
jb
and
cmp
xchg
test
sbb
lods
pop
dec
jae
mov
mov
js
dec
jmp
push
fsubr
sahf
mov
adc
or
or
cmps
outs
into
jne
jp
pop
fimul
dec
add
jge
cli
xor
ret
fcom
ins
cs
bound
shr
mov
mov
repnz
cmc
cli
mov
clc
fist
sbb
xchg
dec
mov
leave
pop
push
mov
pop
cmp
ins
retf
lods
add
test
or
xchg
sti
lahf
and
xor
jnp
push
(bad)
cli
or
push
push
(bad)
mov
sti
xchg
dec
in
stc
xor
retf
or
mul
mov
sub
xor
sub
es
jmp
mov
test
xchg
xchg
js
sbb
push
mov
cmp
repnz
xchg
jb
cmps
xchg
shl
jmp
stos
xchg
arpl
mov
xchg
xchg
scas
movs
pop
jp
imul
add
cwde
add
sub
dec
out
cdq
scas
(bad)
mov
mul
fst
(bad)
pop
mov
cli
pop
retf
fistp
mov
jmp
add
fistp
and
packsswb
lods
movs
fcom
cmp
and
push
inc
mov
fnstcw
stos
nop
cld
push
imul
xor
mov
pop
sbb
cmp
jae
inc
out
popa
int3
pop
and
aam
shl
test
mov
aaa
lods
dec
or
test
jmp
iret
(bad)
jl
aam
inc
xor
mov
sbb
das
jne
jo
xlat
adc
sbb
mov
retf
push
sbb
setg
test
mov
cmp
lahf
cmp
adc
sti
mov
ret
pop
sbb
cmp
xchg
jae
data16
fcmovnbe
jne
xor
lock
jmp
mov
jg
push
xchg
fidiv
dec
ret
cwde
pop
inc
hlt
int3
movs
jecxz
pusha
dec
enter
push
adc
repnz
iret
dec
cmps
repz
dec
enter
or
enter
outs
pop
outs
popf
and
popf
imul
and
dec
mov
sub
jmp
mov
div
or
ret
sub
stc
jns
push
cs
and
jno
out
jmp
out
cdq
jne
sar
cld
lea
cli
mov
adc
call
jge
cmp
push
sub
xchg
sub
mov
push
xchg
cmp
add
sti
inc
inc
sbb
cmp
jg
gs
sbb
(bad)
sub
pop
sub
inc
scas
pusha
sub
add
ins
cld
test
mov
fidiv
in
ja
cwde
inc
retf
push
sub
in
cmp
js
add
push
cli
xor
mov
mov
and
mov
int
je
int
mov
(bad)
outs
fsubp
push
fmul
pop
aaa
add
dec
jle
(bad)
xor
scas
sub
(bad)
cmp
dec
test
repnz
jmp
mov
or
jp
inc
push
xchg
shl
test
and
test
xchg
scas
bound
into
or
inc
movs
popa
inc
mov
rcl
cld
pop
xor
sub
mov
call
dec
mov
adc
xchg
fmul
(bad)
aad
mov
cmp
cld
dec
mov
ss
out
xor
jecxz
cmps
aam
test
mov
push
test
and
scas
inc
popf
mov
sbb
les
int
pop
pop
icebp
mov
sbb
xor
fnsave
out
pusha
outs
inc
jle
icebp
ret
pop
jge
mov
dec
call
mov
shr
in
pop
shl
lock
clc
call
fld
adc
cld
cmps
inc
movs
pop
sti
cmp
jno
add
sbb
das
stos
xor
ss
into
mov
imul
mov
jg
nop
mov
xchg
dec
pushf
mov
xor
push
mov
daa
jae
test
pusha
jmp
inc
lds
jmp
jg
pop
xchg
push
mov
xor
add
imul
arpl
sbb
adc
adc
mov
in
jmp
push
arpl
and
loopne
bound
jb
mov
scas
and
jb
dec
cmc
je
outs
jno
adc
push
mov
cld
mov
clc
pop
pop
gs
test
mov
shl
inc
int
addr16
(bad)
pop
ret
jne
dec
out
addr16
pop
dec
repnz
popa
xchg
cmp
xchg
adc
xor
dec
mov
arpl
xor
pop
xor
mov
cmp
shl
push
movs
stos
stc
arpl
sub
test
inc
and
cmc
out
dec
inc
lods
jae
adc
stos
pusha
mov
outs
push
jecxz
cdq
ffree
sbb
jmp
ficom
loop
sbb
xchg
sbb
pop
sar
aaa
sahf
and
pop
add
fs
imul
mov
xchg
mov
test
idiv
mov
jae
mov
lods
xor
ret
pop
call
cdq
push
out
imul
cli
cmp
xor
ror
in
pop
adc
push
call
sbb
icebp
sbb
xchg
xchg
jo
xor
mov
shr
dec
mov
addr16
push
cli
inc
mov
das
cmp
adc
call
mov
adc
jnp
(bad)
fldl2e
cdq
push
aam
cmp
and
mov
sahf
repz
mov
stos
pop
test
outs
mov
imul
jns
fsubr
rol
and
push
jle
sbb
and
cli
lods
or
mov
pop
jmp
inc
jns
xor
sbb
cli
std
ficomp
into
mov
cmp
xchg
repnz
jmp
in
popa
arpl
call
pop
in
lahf
push
lea
pop
or
rcl
sbb
loopne
jnp
fpatan
and
cmp
test
mov
mov
pop
mov
mov
(bad)
lods
js
xchg
xchg
mov
xor
mov
mov
adc
xor
xor
fnsave
mov
sub
gs
xlat
pop
fwait
mov
and
xor
xchg
xlat
imul
pop
and
jl
mov
test
fnstenv
sbb
pop
push
nop
in
rcr
into
aaa
mov
mov
mov
imul
mov
lea
adc
or
or
fs
push
popf
das
cmp
cmc
sqrtps
outs
out
and
inc
jmp
movs
test
and
mov
inc
mov
stos
repnz
gs
xor
inc
xor
push
cli
(bad)
dec
movs
jg
mov
and
mov
xchg
fcom
cmp
mov
push
cli
stos
pop
js
scas
jns
mov
shl
adc
je
rcr
je
mov
mov
mov
jle
sub
xchg
xlat
add
stc
imul
sub
jp
or
add
in
dec
xor
pop
(bad)
in
xor
add
loop
mov
sbb
push
inc
jno
sub
mov
push
arpl
in
rol
xchg
ds
mov
sub
or
cmp
push
les
ror
popf
mov
in
adc
push
push
lahf
sbb
ret
fisubr
push
pushf
enter
(bad)
je
mov
mov
mov
dec
push
pop
fiadd
(bad)
out
add
lea
fbstp
fisubr
mov
es
or
mov
pop
inc
hlt
ret
ret
and
pop
mov
push
shl
bound
xchg
scas
pop
test
jae
outs
sub
test
(bad)
lods
or
pop
push
add
(bad)
dec
out
(bad)
das
loope
or
call
mov
mov
int3
movntq
and
xchg
xchg
mov
iret
(bad)
jbe
jge
push
mov
cmp
or
xchg
dec
lea
or
xor
ret
cmp
push
and
ret
jne
or
frstor
rol
test
in
pop
gs
or
retf
sbb
xchg
jne
fdivr
nop
fistp
aaa
fwait
iret
mov
cmps
xor
inc
xor
or
outs
push
pop
sar
les
movs
push
cli
ja
mov
and
pusha
cmp
mov
jecxz
jne
sub
pop
movs
call
jle
out
sub
jecxz
leave
sahf
popa
dec
xchg
push
cmp
sbb
lds
rcl
cwde
jo
xor
sbb
(bad)
pop
jmp
cdq
xchg
dec
pop
sub
int3
push
cmps
mov
out
add
dec
mul
call
and
cmovno
pop
clc
dec
mov
and
iret
fcomp
test
stos
test
jl
sti
retf
xlat
mov
push
jecxz
xchg
lock
(bad)
in
shl
fcmovne
jns
pop
mov
bound
loop
movs
dec
pop
and
sbb
adc
enter
shl
dec
and
ror
sti
stc
js
call
stos
push
daa
nop
or
scas
sbb
lods
dec
pusha
je
and
cdq
pop
pop
or
push
cmp
loope
fwait
and
pop
mov
sub
loope
adc
aas
out
fisub
xlat
pop
cmp
adc
pop
popa
sub
pop
sub
out
push
lock
xchg
fist
adc
gs
add
loop
loopne
scas
or
mov
lock
pop
dec
add
jae
cld
scas
push
dec
xor
and
imul
out
mov
cld
ins
xor
cmp
in
shr
jg
aas
js
in
dec
add
retf
xchg
repnz
mov
xor
mov
adc
ja
movs
pop
(bad)
or
(bad)
shr
pop
loope
out
sahf
mov
jo
xchg
test
das
and
repz
jmp
ret
je
retf
xchg
xor
or
adc
icebp
push
data16
pop
adc
jp
add
out
pop
push
cmp
retf
inc
cmp
dec
pop
jns
addr16
xchg
add
aaa
xchg
lds
or
mul
jne
in
in
rol
push
inc
push
or
xor
xor
jl
fdivr
push
fwait
popa
dec
mov
push
repnz
mov
mov
aaa
(bad)
or
enter
shr
cmp
or
jae
push
(bad)
je
aaa
add
test
mov
out
jae
ja
aaa
mov
(bad)
movs
push
jle
clc
and
es
inc
and
jns
jbe
push
add
sub
shl
dec
daa
sub
push
or
xor
pop
mov
jnp
jp
sub
arpl
out
mov
sbb
sbb
in
dec
add
inc
in
cdq
mov
xchg
add
inc
lock
add
(bad)
in
jmp
cli
mov
mov
ds
and
(bad)
iret
and
je
push
(bad)
fs
pusha
les
inc
gs
xsha1
cmps
(bad)
jmp
into
sub
mov
mov
int3
jne
or
dec
psubusb
ret
or
icebp
daa
je
xchg
in
mov
jp
adc
mov
sti
lahf
imul
cmps
sahf
push
sub
pop
inc
fwait
movlps
lea
imul
scas
retf
lea
cmp
in
dec
ins
sti
les
sbb
ror
mov
adc
outs
mov
ja
(bad)
sbb
jne
mov
rol
mov
fisubr
retf
push
push
and
push
int
in
adc
adc
fidiv
pop
les
or
mov
out
dec
mov
fs
jle
imul
jecxz
xor
jbe
fdivr
inc
dec
xor
ds
jbe
mov
sbb
sar
or
pop
cmp
dec
aam
or
push
rol
mov
push
imul
(bad)
sub
dec
push
repz
dec
and
hlt
jmp
xor
or
jbe
cdq
and
rcr
mov
xchg
jbe
mov
sub
outs
sbb
es
adc
adc
sub
sar
gs
lahf
xchg
jecxz
jno
adc
push
fcomp
sahf
cld
mov
mov
mov
das
add
stos
inc
stos
fcom
and
xchg
(bad)
loope
leave
scas
xor
(bad)
out
stos
sbb
mov
xlat
pop
mov
mov
push
in
pop
int
cmc
imul
and
rcr
loopne
pop
push
call
jnp
jns
xchg
push
mov
cdq
mov
sbb
stos
mov
inc
scas
pop
(bad)
mov
stc
retf
mov
inc
sub
jbe
push
int3
js
retf
mov
ss
adc
inc
ss
inc
sub
out
fcmovnb
pop
or
je
push
adc
out
push
or
xchg
dec
xor
(bad)
cmp
mov
cmp
imul
ins
hlt
aam
push
fst
jle
xchg
rcr
cmps
gs
jmp
int3
cmp
adc
aaa
scas
mov
adc
lock
inc
cli
inc
add
fild
int3
and
xor
or
fwait
cmp
xchg
sbb
and
mov
mov
pop
ret
dec
or
(bad)
loopne
xlat
push
inc
lea
scas
(bad)
and
lods
das
popf
sbb
sar
mov
add
cmp
ror
icebp
pop
jmp
mov
ret
push
neg
and
leave
sbb
sbb
mov
fs
sub
and
xchg
ficom
jmp
push
test
jp
jge
dec
out
push
and
xbegin
ret
push
mov
(bad)
cmp
and
or
push
mov
mov
popf
add
bound
mov
jge
xor
add
aam
mov
pop
loope
inc
adc
push
outs
cmps
mov
rcr
push
pushf
xor
or
shr
sbb
mov
and
or
sbb
addr16
dec
dec
repz
sub
(bad)
inc
cdq
pop
mov
mul
push
je
xchg
xor
jns
cmps
jge
(bad)
test
jo
sbb
mov
xor
cdq
jo
(bad)
shl
mov
in
test
mul
in
sub
ja
loopne
sub
push
inc
sbb
mov
out
or
cmp
repz
push
jge
test
(bad)
dec
shl
push
lods
sar
ja
pop
cmp
pop
jg
jno
mov
mov
dec
cs
aaa
dec
dec
es
push
xchg
mov
call
xor
sub
mov
call
iret
shl
bound
inc
adc
adc
jl
outs
lahf
push
push
int3
pop
adc
sub
cmp
or
inc
dec
sbb
jbe
jo
idiv
lds
hlt
jo
push
adc
loop
mov
xchg
popf
cld
cmps
scas
jnp
mov
or
jnp
fild
into
ret
xchg
cmc
pop
cmp
das
sar
mov
sbb
enter
push
jae
lods
movs
mov
push
fild
outs
les
in
mov
and
sub
sbb
in
fcmovnu
xchg
push
mov
mov
and
(bad)
sbb
mov
jg
mov
jb
xchg
jmp
es
pop
in
mov
pop
call
enter
sbb
ins
arpl
pop
add
mov
and
and
aad
ror
dec
mov
dec
jb
push
stos
dec
gs
(bad)
pop
sub
sub
neg
cmp
pop
add
jae
push
xchg
or
add
cmp
mov
movs
add
inc
gs
mov
mov
shl
imul
mov
cmp
inc
or
mov
(bad)
jb
sbb
xlat
and
loop
hlt
ins
cs
cmp
loopne
scas
ret
ror
in
sub
movs
nop
in
sbb
cmp
add
mov
ret
adc
inc
in
xor
int
xchg
mov
push
push
push
nop
sbb
add
retf
(bad)
aad
in
jne
xchg
and
sbb
stos
mov
inc
mov
adc
xchg
jmp
dec
dec
aad
mov
sbb
mov
jmp
adc
dec
sub
sti
inc
and
cmp
fld
pushf
fidiv
sahf
mov
(bad)
adc
cwde
mov
jb
mov
pop
aad
adc
adc
inc
rol
sub
imul
fcom
pushf
jbe
add
sahf
push
pop
repnz
sbb
enter
mov
das
or
pop
and
les
cmps
pop
xchg
dec
jl
repnz
mov
mov
ja
adc
cmps
sbb
jecxz
sub
cmc
lea
add
popa
pop
cwde
aam
cmps
mov
daa
mov
dec
add
inc
(bad)
daa
cmp
loopne
outs
sub
rol
fnstsw
jg
dec
jg
jmp
test
xor
call
cmps
mov
ins
push
sti
pop
mov
imul
sbb
or
push
in
mov
push
mov
test
mov
jns
in
jb
mov
inc
mov
ffree
shl
or
jb
add
pop
(bad)
push
loope
shr
pusha
in
call
mov
xchg
ds
push
mov
retf
je
mov
mov
or
xchg
mov
cmp
sbb
in
and
ja
mov
mov
loope
jmp
adc
mov
test
int3
pop
push
cmps
mov
imul
mov
js
mov
in
xchg
inc
test
and
push
push
cmp
ja
push
xor
mov
add
add
pop
nop
cli
out
pop
hlt
jo
enter
jl
scas
cmp
stos
retf
(bad)
mov
mov
push
out
movzx
retf
adc
lods
in
xchg
mov
sbb
jno
push
push
in
scas
xor
cmc
mov
nop
push
cmp
ds
dec
daa
mov
sbb
iret
dec
ret
cmp
xor
and
aaa
add
jl
stos
aam
inc
push
inc
sub
add
lods
inc
in
sbb
std
outs
jbe
outs
xor
cmp
dec
into
jae
add
lahf
leave
arpl
jae
sbb
dec
pop
pop
cmps
inc
imul
(bad)
push
mov
jge
sbb
in
jne
mov
mov
gs
test
lahf
data16
xchg
push
inc
mov
daa
leave
test
push
scas
ins
pushf
stos
jmp
cld
push
popf
or
push
mov
ins
inc
push
in
in
mov
push
pop
(bad)
nop
adc
add
aam
xchg
push
jge
pop
mov
outs
pop
add
lahf
sti
in
je
xor
inc
jp
push
addr16
cmp
mov
mov
add
dec
in
jmp
dec
ja
jmp
pop
(bad)
outs
outs
out
jg
jge
sbb
add
pusha
pusha
sbb
int3
cld
fwait
mov
(bad)
push
sbb
inc
jle
sahf
mov
ins
pop
gs
retf
rol
add
sbb
cmc
xchg
into
push
aad
cli
scas
fmul
or
jg
or
test
fstp
xor
aad
fucomip
mov
jno
push
pop
addr16
xlat
jno
test
cld
ja
mov
dec
cmp
and
(bad)
rcl
push
outs
xchg
cmp
inc
enter
aaa
and
xchg
mov
mov
sahf
mov
pop
test
call
(bad)
mov
ins
das
xlat
les
fbld
xchg
pop
add
jns
push
mov
stc
in
xor
push
shl
jp
retf
test
dec
push
dec
mov
mov
mov
jno
in
fild
(bad)
fstsw
dec
ss
add
call
out
jo
xor
mov
ja
push
pop
imul
xor
xchg
add
sub
push
retf
dec
add
aaa
out
xor
sti
mov
scas
test
imul
jno
bound
mov
les
pop
xor
fsub
lds
cwde
sar
in
stos
sbb
ss
mov
mov
clc
dec
adc
xor
stc
xor
js
out
bound
inc
mov
inc
in
data16
pop
dec
(bad)
push
add
add
lods
mov
xchg
push
and
cwde
xor
sbb
int
xchg
sub
sub
pop
and
mov
ret
hlt
ret
rol
frstor
sub
stos
push
stos
push
(bad)
sbb
xchg
adc
mov
fcom
retf
rol
mov
cmp
sbb
nop
mov
and
inc
adc
iret
int3
dec
add
mov
repnz
mov
adc
jp
mov
bound
aaa
adc
gs
lods
rcl
inc
jl
pop
addr16
sbb
pop
xchg
cmps
inc
mov
add
jne
retf
jb
retf
imul
shl
outs
sahf
popa
jns
sbb
(bad)
fst
jae
cmp
jecxz
pop
pop
sti
lds
cmp
cmps
call
add
ja
inc
retf
xor
xlat
sub
sub
xchg
out
fnstcw
movs
ficomp
fwait
xchg
fwait
mov
std
add
pop
xchg
aas
fwait
js
aam
shr
xchg
pop
dec
arpl
sub
inc
push
or
mov
(bad)
(bad)
push
mov
stc
(bad)
jb
dec
rcr
das
dec
movs
xchg
(bad)
(bad)
out
jle
xor
jne
fmul
jg
mov
fcom
mov
mov
scas
outs
pop
adc
jno
(bad)
not
dec
arpl
jecxz
pop
jmp
(bad)
dec
out
xchg
rcl
adc
push
push
ja
les
cs
(bad)
jbe
cmp
(bad)
cmc
inc
loopne
test
pop
or
push
jecxz
adc
push
pop
mov
and
jo
mov
xchg
fnstsw
sub
stos
sbb
dec
xchg
shr
retf
xchg
push
dec
rcl
stc
pop
push
sbb
sbb
jb
pop
out
aaa
lods
aas
mov
pushf
stos
jg
repz
cmp
inc
ins
add
jmp
add
mov
and
in
inc
fs
inc
loopne
movs
test
js
push
xor
popa
cmp
mov
jno
mov
adc
mov
in
or
dec
ror
lods
dec
add
pop
popf
imul
jle
shl
pop
ss
ins
jp
jae
adc
and
icebp
movs
lods
jae
pop
lahf
icebp
test
imul
das
cmp
pop
or
push
js
sub
aas
jo
xchg
xchg
ds
add
jmp
add
cmp
push
xor
or
add
popf
adc
sub
xor
les
xlat
mov
push
sub
in
cmp
call
nop
ds
inc
and
xchg
mov
shr
fnstenv
rcl
mov
xchg
(bad)
js
and
cdq
je
adc
loop
out
mov
sar
jle
je
je
mov
adc
pop
data16
in
jl
sub
cli
loopne
hlt
push
sub
cld
dec
stos
div
push
test
icebp
out
je
icebp
dec
add
xor
scas
add
pop
stos
cmp
loope
and
sbb
fcmovnbe
arpl
test
mov
push
and
fistp
dec
and
in
bound
jb
inc
fild
sbb
nop
sbb
sahf
stos
or
(bad)
rcl
lock
jno
xchg
cmc
das
cmp
fs
inc
sub
inc
or
dec
ret
stos
or
inc
adc
push
not
fcomi
out
mov
jnp
iret
sbb
cmpxchg
mov
inc
das
sahf
daa
aam
or
add
adc
pop
adc
lods
rol
rcr
cmp
jne
test
lock
mov
xchg
push
fwait
cmps
ror
into
and
in
xchg
mov
clc
or
push
shl
xor
jae
mov
mov
push
inc
mov
push
sub
cmc
add
sub
or
outs
xor
mov
scas
bound
push
int3
push
dec
and
hlt
jmp
xor
sub
xchg
pop
xor
loopne
rcl
scas
test
dec
pop
jo
inc
and
nop
test
in
xchg
les
lods
aad
(bad)
pop
rol
pop
aad
cmp
lds
enter
dec
mov
repnz
push
push
in
pusha
mov
pop
mov
and
stos
mov
dec
enter
mov
aad
jge
std
jg
fistp
pop
push
jbe
ins
(bad)
jno
lods
jle
test
jbe
mov
and
xchg
push
jne
adc
adc
scas
int3
jns
repnz
mov
or
adc
xor
sbb
add
cmp
lock
mov
sar
ds
in
mov
inc
xchg
mov
imul
jmp
and
jns
and
pop
mov
arpl
loop
mov
mov
loope
push
mov
mov
adc
nop
jnp
std
inc
icebp
mov
rcl
outs
ret
repz
mov
ret
mov
cmp
sahf
movs
and
test
push
enter
out
and
mov
mov
fild
sub
mov
test
repnz
add
nop
sbb
xchg
sbb
bswap
sub
shr
les
ja
ss
lock
fcomip
cmp
and
add
std
xchg
cwde
push
mov
mov
scas
jmp
ds
push
and
shl
out
dec
rol
test
das
jp
inc
xor
dec
xor
fisubr
mov
das
push
loope
(bad)
pop
cmps
inc
aad
push
xlat
xchg
hlt
push
xchg
cmp
in
je
dec
xor
jmp
jae
aas
in
jg
ss
test
sbb
pop
in
dec
int3
jge
lods
shr
daa
jnp
inc
jmp
retf
shr
inc
cmc
je
jp
push
sub
sub
outs
mov
pusha
test
mov
jecxz
mov
mov
jne
sbb
lods
mov
push
inc
xlat
cmp
dec
popf
push
mov
cdq
fist
mov
imul
jmp
idiv
xor
gs
jmp
push
in
jns
stos
lock
push
loop
es
push
mov
(bad)
cmps
sub
ja
and
and
cmp
in
lock
dec
not
cmc
add
push
sub
xlat
mov
cmp
fsubp
sbb
xor
pop
and
push
pop
jno
add
fsubp
fld
test
lds
test
rcl
dec
mov
ds
or
scas
(bad)
sub
push
xor
mov
(bad)
shl
push
inc
mov
cli
jl
out
std
dec
test
or
mul
sbb
inc
pop
push
cmps
cmps
jb
out
movs
mov
adc
mov
fisub
dec
xchg
fisttp
lods
out
ja
adc
or
sub
(bad)
imul
mov
pop
sub
clc
in
xor
jle
je
je
leave
rol
es
sub
out
pop
rol
fisttp
adc
push
xor
test
movs
lds
out
js
call
pop
pop
outs
test
sub
jb
push
into
adc
jo
xlat
fsubr
xchg
test
in
mov
addr16
(bad)
in
arpl
fwait
dec
xor
xchg
sahf
les
test
int
add
adc
pop
sbb
shr
scas
mov
(bad)
cli
mov
xchg
cmp
add
xor
cwde
dec
hlt
or
adc
xchg
clc
and
pusha
fwait
jae
add
pop
jae
inc
scas
push
jle
push
mov
push
into
or
pop
xchg
les
cld
add
data16
mov
lods
psrad
jbe
mov
es
mov
xor
(bad)
mov
adc
lahf
ins
xchg
sti
mov
std
inc
aas
and
movs
cwde
outs
jge
daa
icebp
cmp
pop
pop
push
push
pop
fbld
aad
cmp
xchg
add
cmc
fisttp
xchg
adc
ins
das
sti
add
fs
ins
add
fcmovnbe
inc
stc
cmc
loopne
jae
sahf
sti
in
aas
in
mov
adc
test
jne
adc
jo
icebp
jno
fsub
adc
jbe
jne
out
xor
xor
cmp
mov
add
add
dec
add
dec
jmp
imul
xor
test
(bad)
popa
mov
lds
dec
arpl
mov
pushf
cmp
scas
nop
sti
in
div
movs
and
das
mov
call
dec
or
xor
push
push
push
fs
fimul
mov
bound
xlat
mov
fidiv
mov
into
adc
ret
xor
adc
mov
mov
mov
cld
push
lock
sbb
inc
ins
(bad)
iret
add
movs
aas
std
xchg
sbb
push
cmc
mov
xor
(bad)
sub
in
dec
jmp
icebp
sahf
push
cdq
ss
pusha
sbb
retf
sahf
inc
data16
pop
push
sub
mov
data16
xlat
cmp
cmps
push
sub
call
push
mov
loope
cli
loope
fmul
xchg
push
lds
loope
mov
cmp
mov
xor
dec
out
push
clc
sahf
xor
ret
jno
sahf
stos
xchg
push
cs
call
mov
movs
push
cwde
repnz
fiadd
mov
add
mov
fbstp
jge
and
(bad)
jg
inc
jb
xchg
inc
jg
or
leave
or
push
(bad)
cwde
sub
(bad)
outs
push
enter
pop
test
cwde
adc
out
movs
xchg
retf
enter
mov
xor
push
fist
lea
sub
lds
rol
cld
and
and
xchg
adc
in
addr16
sbb
xchg
pushf
mul
add
sbb
pop
aaa
mov
sbb
sub
jge
in
adc
addr16
sbb
cld
fwait
jmp
(bad)
mov
inc
pop
ja
pop
push
cld
sub
pop
sbb
ror
mov
pop
adc
sub
jno
jl
(bad)
jl
cmp
pushw
scas
mov
int3
jecxz
jg
addr16
(bad)
sahf
mov
cmp
sbb
ffree
jae
inc
test
pop
int
(bad)
push
mov
jnp
pop
aaa
call
and
xchg
add
adc
adc
dec
dec
js
adc
mov
in
jae
sub
push
(bad)
mov
(bad)
int3
jo
sbb
loope
les
adc
add
push
mov
popa
xchg
jp
gs
aad
and
and
movs
icebp
push
and
mov
push
cmps
cmps
cli
mov
adc
pop
retf
aam
push
push
je
test
inc
in
add
shl
mov
ja
xchg
mov
sbb
sbb
loopne
inc
cmp
adc
inc
inc
ja
mov
xchg
push
sub
ds
pop
inc
stc
int3
loopne
xchg
mov
sbb
loopne
push
push
push
sahf
xchg
or
xchg
cmp
ja
pop
jle
stos
pop
pop
mov
ror
out
sub
movs
mov
and
dec
clc
icebp
mov
jbe
pop
jge
sbb
in
or
dec
fadd
xor
rcl
sbb
stos
add
icebp
xor
in
mov
fcomp
xchg
jmp
dec
adc
cmp
gs
stc
jecxz
es
pop
sbb
es
mov
dec
mov
into
loopne
cmp
pop
xor
cmc
sahf
pop
dec
leave
mov
(bad)
lods
sbb
lahf
inc
imul
cmp
mov
xchg
xor
sub
mov
or
out
fiadd
aam
xor
add
or
fs
xchg
out
pushf
shl
js
mov
lahf
pop
cmp
push
mov
pop
(bad)
jnp
sbb
mov
jb
or
add
(bad)
xchg
or
adc
inc
(bad)
out
push
inc
sub
(bad)
xor
add
dec
push
sbb
dec
fisttp
dec
cli
leave
cld
inc
test
sbb
fdiv
xlat
push
inc
cmp
(bad)
int3
or
inc
(bad)
fs
outs
xor
inc
cmp
inc
mov
or
ds
or
jno
std
mov
repnz
movs
sti
dec
adc
cli
mov
push
push
xchg
idiv
push
stos
jne
sahf
jne
push
cmp
jmp
inc
iret
jge
jecxz
loopne
addr16
dec
pop
sub
mov
inc
sbb
out
dec
mov
jmp
push
cmps
js
pop
inc
int3
jo
and
sub
imul
jnp
test
stos
loope
aas
push
push
and
add
sbb
sub
mov
mov
mov
rcr
fisttp
inc
ja
pop
shl
daa
in
(bad)
jb
das
stc
in
inc
imul
(bad)
outs
pop
mov
lods
dec
js
sbb
xlat
outs
mov
pop
fwait
aas
jmp
xor
leave
cmp
pop
cli
stos
out
push
jae
pop
xchg
aam
(bad)
in
aas
hlt
xchg
movs
pop
cwde
inc
push
sub
or
test
adc
mov
pop
pop
jle
lods
int
fistp
sub
jl
xor
jno
mov
ss
stc
call
inc
aad
cwde
lea
xor
dec
inc
fbstp
mov
dec
(bad)
in
mov
xor
ror
jno
inc
xor
cmps
imul
fist
push
test
xchg
dec
adc
or
xor
movs
ja
or
lods
sub
test
jne
push
and
enter
adc
bnd
retf
push
mov
mov
das
clc
cs
push
cmp
xchg
add
push
repnz
mov
cmp
xor
lahf
and
fimul
aas
jae
std
cmp
inc
dec
movsx
pop
sub
enter
int
inc
dec
push
(bad)
mov
pop
push
mov
and
cld
or
ret
jp
jbe
jge
frstor
imul
push
push
push
jns
mov
adc
xchg
mov
sahf
cli
idiv
mov
mov
mov
ins
movs
pop
jge
mov
xor
push
xor
cmp
dec
dec
fmul
inc
(bad)
and
xchg
call
jne
jp
and
in
cmc
sub
cmp
push
inc
mov
inc
push
jmp
sbb
pop
sub
inc
cdq
add
aas
xor
ss
test
sub
aaa
icebp
push
xchg
stos
mov
fs
sbb
out
test
or
push
xor
jle
add
ds
shl
pop
sti
in
leave
sbb
push
or
xchg
das
add
xchg
xor
out
js
call
xor
fwait
xlat
mov
adc
cmp
fstp
in
fcom
mov
ud1
daa
ss
loopne
(bad)
loope
clc
xor
arpl
jmp
out
jb
out
push
push
mov
and
stc
imul
(bad)
mov
push
inc
mov
test
in
push
fistp
aas
into
jno
or
cmps
inc
imul
ins
hlt
inc
dec
test
cmps
mov
or
xor
push
sbb
sbb
pop
mov
cmps
movs
mov
in
fstp
add
adc
int3
inc
jp
out
rcl
mov
fiadd
push
clc
aam
ja
mov
sub
sti
mov
sbb
dec
inc
stc
or
rcl
out
scas
jbe
jecxz
inc
movs
mov
shl
mov
push
cmps
outs
test
(bad)
adc
jge
gs
cmps
ret
jae
and
enter
push
unpckhps
bound
jg
xor
jp
push
push
cdq
std
mov
pushf
out
out
das
mov
icebp
std
push
mov
cmp
ret
sub
mov
xor
in
lods
cmps
ss
out
cmps
ds
sti
jns
xchg
lea
mov
repz
jg
or
jne
fisttp
repnz
cmp
cmp
cli
jg
js
jnp
pop
jmp
sbb
fwait
mov
and
gs
fild
inc
xchg
test
aas
sub
sbb
sbb
cmp
adc
inc
retf
mov
stc
cld
or
loope
sub
arpl
sub
mov
out
jp
adc
mov
rcr
sub
and
stos
test
jp
call
stos
movs
shr
adc
xchg
test
xlat
sbb
add
cmps
mov
hlt
xchg
and
sbb
push
clc
js
aas
fyl2xp1
ins
dec
push
pop
add
stc
leave
cmps
fsubr
ja
cmp
adc
cmps
mov
gs
aaa
test
mov
shr
sub
push
mov
or
cli
mov
mov
dec
stos
and
xor
sbb
mov
dec
cdq
mov
sahf
inc
sahf
fimul
das
add
adc
sub
xchg
loopne
dec
lea
jmp
movs
dec
sub
and
sub
adc
movs
loope
pop
mov
lock
push
data16
mov
push
fadd
out
cli
xlat
nop
lods
jnp
dec
mov
dec
inc
in
das
data16
cmp
cmp
xchg
clc
pop
mov
dec
imul
add
loop
ret
jg
xchg
xor
xor
mov
mov
inc
and
sahf
jb
cdq
xchg
cmps
les
sbb
aas
jle
lds
sub
cmp
cmp
push
mov
or
sbb
xor
jmp
ror
mov
rcr
xor
mov
jg
lods
retf
call
cmps
or
xchg
and
xchg
mov
(bad)
add
repz
scas
std
js
loopne
sub
mov
mov
ins
iret
mov
jnp
jbe
xor
mov
out
inc
jp
jle
mov
popf
xchg
adc
test
xor
movs
repnz
movs
loop
adc
xchg
pop
jne
inc
xlat
(bad)
mov
into
test
movs
push
ds
add
and
ret
test
std
mov
ret
push
adc
adc
cmc
or
inc
xlat
or
jp
mov
mov
cmc
imul
fs
sub
das
lea
xor
sub
shr
add
call
push
jno
loop
aam
aad
clc
cmc
push
test
mov
shl
(bad)
data16
bound
dec
pop
sbb
jle
push
jns
retf
mov
lods
sbb
(bad)
adc
pop
cmp
ss
add
cwde
add
sbb
xor
add
ror
adc
inc
add
iret
mov
cwde
cmp
jmp
push
cmc
out
and
mov
xor
mov
xchg
ret
fimul
cmps
inc
ficomp
inc
jg
mov
xor
mov
test
jne
mov
mov
mov
xchg
jg
mov
test
inc
cmp
add
cmps
sbb
mov
mov
ret
dec
cmps
in
push
jecxz
popa
mov
jge
add
jmp
add
leave
fstp
mov
out
lods
add
push
scas
(bad)
jnp
out
inc
mov
mov
sub
fist
dec
add
ret
rcl
call
cmp
das
cmc
xchg
rcr
enter
shl
xchg
fisttp
dec
add
neg
xor
popf
sbb
mov
dec
xchg
push
les
cs
jno
inc
mov
jge
add
jbe
fwait
mov
fstp
imul
pop
xchg
repnz
sti
neg
lahf
enter
fmul
sahf
cdq
je
push
sub
add
push
arpl
jecxz
sub
mov
retf
sti
adc
adc
lods
push
mov
push
fsub
xchg
mov
fcmovu
cmp
jl
pop
js
lods
das
imul
xchg
mov
(bad)
stos
dec
cmps
jbe
cld
add
outs
fwait
mov
adc
call
sbb
adc
mov
mov
fstp
xor
fidivr
sbb
inc
loope
xchg
xor
sbb
adc
xor
jne
cmps
es
xchg
jle
push
jl
and
fnstsw
dec
dec
aaa
dec
or
cmp
ret
(bad)
fsub
aad
mov
lods
aad
mov
xchg
mov
psubsw
imul
adc
bound
xchg
shl
call
sbb
and
imul
sbb
push
stos
mov
dec
scas
mov
repz
mov
pop
fadd
dec
cmp
repnz
cwde
mov
loopne
dec
das
mov
(bad)
inc
std
test
cmp
loopne
inc
vmulpd
push
popa
cmps
int
aaa
cmp
xchg
(bad)
outs
mov
adc
call
jmp
mov
dec
cmp
dec
into
(bad)
(bad)
ja
inc
and
mov
adc
dec
stc
dec
and
(bad)
mov
std
or
stos
into
ins
xor
(bad)
sti
fwait
cdq
push
les
adc
sub
dec
pop
mov
add
in
adc
fnstcw
ins
sbb
lock
add
sub
mul
xchg
push
fwait
in
inc
in
scas
push
inc
cmps
push
and
mov
push
idiv
or
and
adc
in
jle
mov
shl
push
pop
cmc
retf
vpunpcklbw
(bad)
cli
push
mov
sbb
sti
int
pop
inc
push
push
pusha
add
cmp
jnp
leave
sub
or
add
mov
(bad)
pusha
enter
jmp
cmp
jg
cmps
test
and
and
bound
mov
(bad)
cdq
xchg
sub
mov
in
or
cmc
imul
ja
repz
ja
inc
imul
cdq
cmps
fisttp
xchg
add
mov
leave
xchg
icebp
mov
cdq
xor
out
lea
adc
mov
xchg
push
imul
in
jbe
inc
mov
loope
call
ins
mov
cmp
std
rcr
retf
mov
fdivr
in
pop
cmps
sub
dec
das
shr
xor
pusha
mov
fcom
xor
iret
das
add
stos
mov
xchg
(bad)
mov
mov
out
mov
mov
and
inc
pop
mov
pushf
jmp
mov
rcr
add
inc
sub
out
(bad)
push
cld
fisubr
retf
sbb
je
mov
adc
xchg
jge
jg
push
sbb
mov
dec
adc
sbb
adc
mov
dec
out
xor
mov
lock
retf
mov
mov
or
sub
sub
jne
stos
mov
lock
or
pusha
cmc
push
and
adc
jbe
jmp
fstp
xchg
in
pusha
pop
fs
sub
jmp
lds
cdq
jno
mov
fld
jmp
and
push
mov
es
and
cdq
add
cmps
pop
mov
ret
retf
dec
jmp
pop
bound
pop
push
outs
(bad)
mov
pop
or
js
mov
icebp
mov
and
pop
cwde
popf
ret
pop
mov
shl
stos
mov
dec
mov
add
sbb
call
test
ins
inc
mov
pop
push
(bad)
iret
jbe
mov
and
xchg
pop
and
ret
popa
arpl
xor
inc
adc
or
into
fs
cmps
jns
or
push
sbb
ja
mov
lds
or
push
push
movs
aaa
test
dec
cmp
add
pushf
mov
sbb
push
mov
cmp
rol
lea
sbb
mov
sub
xor
mov
popf
mov
cmp
and
retf
test
xchg
ss
or
and
sbb
inc
out
push
mov
test
cwde
icebp
and
les
and
sub
repnz
mov
mov
lods
dec
test
ins
clc
aad
sub
faddp
jle
cs
lea
fadd
inc
push
stc
sub
scas
int3
test
mov
push
repnz
dec
jp
jbe
adc
(bad)
mov
popa
clc
fcomp
mov
push
mov
into
and
das
xor
sahf
mov
pop
pushf
adc
mov
(bad)
mov
jo
and
cmp
adc
pop
or
ss
mov
xor
mov
lods
pusha
int3
cmp
(bad)
cmps
fldcw
lock
sub
cmp
les
arpl
push
push
pop
jmp
aad
scas
fistp
push
dec
test
and
jl
pop
test
xchg
adc
fidiv
adc
std
das
mov
cmps
leave
sbb
or
in
mov
ja
push
pop
sahf
fidiv
nop
add
mov
(bad)
or
xlat
and
pop
inc
jp
jmp
pop
mov
and
mov
aas
xor
sti
mov
pop
mov
inc
int3
aaa
mov
sub
sbb
sub
dec
addr16
dec
and
mov
push
arpl
popf
js
inc
mov
push
les
outs
jo
sysexit
jae
inc
sbb
jmp
std
std
out
jo
outs
or
inc
mov
push
xchg
aaa
cmps
push
push
jne
adc
push
jno
xor
dec
cmp
cmp
bound
mov
dec
adc
inc
push
mov
adc
jb
dec
sbb
fwait
pop
mov
or
or
sbb
aas
ja
add
mov
cmp
sbb
movs
push
aad
in
pop
test
lods
mov
pop
push
mov
pusha
std
popa
sbb
jo
or
jmp
les
mov
xchg
mov
mov
sbb
lods
mov
jg
stos
cmp
ret
test
cdq
sub
imul
cld
stos
jge
and
mov
cmp
packsswb
xchg
retf
into
inc
test
add
xchg
lods
xchg
xor
jle
or
dec
outs
push
aas
pop
mov
sbb
or
in
int
data16
test
xchg
movs
sub
jns
daa
and
cs
add
adc
lahf
gs
popa
lahf
loopne
pop
lds
popa
mov
mov
inc
leave
lahf
std
xchg
xchg
cwde
pop
data16
in
and
aam
movs
into
xor
hlt
aaa
push
call
or
sbb
jle
pop
xchg
sar
ja
lahf
fistp
enter
mov
icebp
fistp
ret
xchg
in
mov
mov
mov
fucomip
fninit
push
out
loopne
sub
pop
pop
push
jnp
cdq
and
dec
inc
push
and
sub
xchg
test
cmp
and
aaa
jbe
and
repz
mov
out
add
xlat
adc
sub
inc
mov
mov
jmp
lds
test
adc
xchg
test
fimul
pop
xor
cli
iret
imul
xchg
repz
adc
(bad)
xchg
pop
in
cld
aaa
lock
cmp
jno
cli
mov
jmp
not
sub
add
popa
aas
ss
xchg
push
mov
stos
mov
div
pushf
cmp
pop
mov
repnz
fdivr
or
push
enter
mov
jnp
data16
xor
stos
shr
loope
movs
pop
jnp
sbb
aad
sbb
mov
aad
fs
das
ins
call
push
adc
cmp
and
stos
xor
pop
push
jno
gs
sbb
dec
sub
mov
xor
cmp
inc
js
jo
in
bound
outs
stc
lock
cmp
aas
dec
adc
movs
std
retf
push
(bad)
jae
cmps
enter
mov
adc
xchg
cmp
push
rol
lods
dec
add
mov
dec
scas
das
cvtps2pd
add
leave
das
(bad)
neg
cmp
lods
push
outs
(bad)
jno
pop
loope
ds
into
cmp
pop
jmp
jns
cmp
mov
mov
mov
out
mov
out
push
into
ret
in
jmp
sbb
jl
push
fsub
add
mov
sub
mov
push
fnstsw
les
dec
xchg
jno
mov
xchg
or
je
xor
add
cmp
mov
sub
mov
sti
inc
xor
gs
xchg
sar
mov
jmp
mov
push
cdq
mov
push
push
rol
add
mov
jg
mov
mov
repz
sub
cmp
jge
test
push
mov
daa
sbb
mov
das
sub
sbb
pop
sbb
mov
push
popa
das
xchg
fsubr
(bad)
into
sbb
xor
mov
dec
xchg
push
ds
inc
ins
jecxz
(bad)
out
add
cmp
out
cwde
cmp
shl
cld
jne
mov
sbb
jae
jnp
(bad)
mov
push
inc
sub
and
test
iret
loop
mov
in
gs
xlat
cmp
dec
or
fidiv
mov
push
push
lahf
xchg
dec
fdivr
adc
sbb
fwait
sti
ins
xchg
mov
push
cmp
sbb
ins
repnz
gs
sub
mov
sbb
mov
jge
arpl
sub
mov
test
ds
sahf
or
sub
push
xor
mov
push
push
arpl
inc
pop
test
xchg
pop
push
nop
mov
cmp
sub
jg
scas
push
cwde
cmps
dec
xchg
inc
or
sbb
cs
mov
push
test
dec
cdq
cs
pop
sbb
jmp
popa
mov
dec
sub
mov
es
mov
leave
mov
sub
inc
xchg
in
push
cs
inc
dec
sub
pop
push
popa
lods
pop
mov
xor
dec
push
xchg
imul
jns
bound
addr16
inc
mov
fs
js
xchg
icebp
leave
ins
push
int3
pop
adc
(bad)
shl
aaa
nop
cvtdq2ps
lock
ficomp
push
jmp
pop
test
daa
cmp
es
cmp
pop
sub
jmp
(bad)
nop
xchg
adc
add
in
out
inc
sub
dec
pop
test
cmp
adc
xor
push
pop
sub
adc
sub
cmps
leave
mov
and
test
addr16
jecxz
(bad)
(bad)
ds
stos
dec
iret
inc
xlat
icebp
jle
lds
sbb
pushf
cmc
pushf
dec
mov
lods
mov
pop
call
cmps
les
xor
fst
int3
push
xor
inc
xchg
add
mov
gs
(bad)
sahf
retf
lods
sar
mov
icebp
pop
jp
sub
cmc
adc
pop
repnz
adc
into
(bad)
or
dec
dec
mov
mov
xor
clc
pop
add
clc
mov
aam
cdq
fsub
mov
idiv
pop
xchg
outs
adc
repnz
cmp
mov
or
jecxz
xchg
(bad)
inc
push
or
add
sahf
dec
dec
inc
xchg
dec
inc
mov
movs
jno
sub
sbb
(bad)
xchg
adc
aaa
inc
or
xor
leave
xchg
jb
xor
jle
test
adc
jl
lods
repnz
into
push
adc
xor
lods
mov
(bad)
(bad)
xchg
mov
jmp
adc
pop
add
clts
sub
or
arpl
and
or
in
imul
rol
in
stos
(bad)
enter
(bad)
(bad)
aad
sub
pop
mov
pushf
cmps
dec
pusha
not
ja
gs
or
aas
adc
(bad)
sar
xchg
push
mov
inc
pop
test
loopne
mov
or
mov
xchg
mov
push
mov
es
mov
and
mov
out
nop
jg
mov
clc
into
sbb
mov
push
mov
shr
pop
push
std
push
clc
pop
lods
hlt
xlat
inc
push
add
ficom
out
mov
aam
cmps
bound
stos
push
enter
(bad)
adc
fbstp
push
cmp
push
jl
jmp
cmps
ja
jno
or
fild
fist
in
dec
mov
add
enter
js
in
outs
int3
add
pop
cmps
hlt
jge
mov
aas
mov
es
mov
sub
mov
and
pusha
sbb
sbb
mov
mov
aam
outs
shr
(bad)
nop
call
or
ins
loopne
xor
sbb
adc
adc
aad
dec
sets
jle
sub
or
lock
jns
icebp
cmp
mov
cmps
ds
fistp
movs
into
sbb
add
sti
mov
cmps
mov
jae
mov
add
sbb
sar
jge
sub
mov
in
xchg
mov
mov
push
int
movs
xor
jp
fist
fwait
loope
(bad)
jns
(bad)
sti
repz
fldcw
lahf
aad
ds
jge
pop
lods
push
sahf
pop
xchg
inc
(bad)
(bad)
sub
test
lods
stos
xor
fist
xor
shr
push
bound
jno
xchg
and
cwde
frstor
jp
cmps
mov
mov
inc
jmp
in
inc
stc
ds
ret
cmp
push
scas
enter
push
push
ja
xchg
jo
inc
or
mov
dec
dec
test
mov
push
push
jg
movs
ins
sbb
or
cmp
jle
jbe
sbb
or
mov
jno
xor
js
clc
xor
jb
out
bound
and
mov
pop
test
div
pop
(bad)
or
lods
jmp
push
push
mov
mov
scas
aam
(bad)
hlt
mov
sbb
repnz
(bad)
pop
fcmovb
imul
shl
jmp
nop
dec
int
jmp
and
cmp
sub
sub
pop
in
push
mov
iret
push
arpl
mov
fdivr
jp
mov
inc
addr16
dec
out
fcomp
in
sub
es
outs
clc
ret
push
repz
pushf
sbb
jb
xor
add
sbb
repnz
add
ds
fstp
adc
out
and
call
jb
or
mov
in
pop
mov
(bad)
ret
mov
dec
in
xlat
and
cmps
mov
fstp
adc
(bad)
faddp
adc
jp
fwait
xchg
ds
jmp
add
jl
xchg
xor
add
int3
mov
pop
push
cs
lahf
iret
arpl
inc
sbb
pushf
cdq
es
rcr
iret
scas
js
cmp
call
mov
push
loope
mov
sub
xchg
mov
inc
loopne
cmp
movs
(bad)
mov
jo
add
mov
retf
rcl
in
lods
pop
sbb
mov
cli
push
inc
mov
out
and
mov
add
push
xchg
scas
or
and
cdq
out
cmps
pop
adc
adc
imul
cdq
or
sar
(bad)
(bad)
ins
ds
push
mov
fist
jmp
pop
enter
mov
es
sub
rol
cmps
and
mov
push
scas
mov
out
dec
(bad)
lds
pop
test
fs
das
movs
(bad)
sub
xor
std
rcr
lahf
mov
jmp
mov
mov
idiv
mov
mov
mov
in
jnp
retf
fdiv
mov
ret
mov
dec
std
jl
test
ins
mov
inc
dec
scas
imul
out
ds
out
mov
out
cld
(bad)
push
xchg
cmp
mov
es
cli
jno
xor
jne
push
ret
mov
pop
rcl
xor
jo
sahf
repz
in
mov
mov
jge
mov
sbb
aam
popf
pop
or
test
mov
movs
pop
pop
movs
adc
repz
retf
dec
daa
cmp
mov
add
cld
imul
in
sub
jmp
mov
fwait
loopne
mov
je
jp
sahf
adc
and
imul
add
fwait
addr16
sahf
out
inc
xchg
lods
or
xor
dec
js
stos
cmp
js
cdq
inc
jo
push
sub
pop
and
cmp
lds
pop
dec
movs
retf
(bad)
dec
mov
fstp
xchg
pop
or
repnz
in
dec
jp
cdq
in
test
mov
mov
test
mov
mov
rcl
or
mov
popa
sub
xchg
in
inc
aaa
mov
jecxz
loope
mov
dec
mov
push
xchg
stos
dec
scas
pusha
add
add
mov
mov
out
sbb
test
mov
(bad)
mov
inc
popa
xor
hlt
sbb
cmp
xchg
add
nop
aaa
fisub
xor
sub
mov
inc
sbb
rcl
pop
push
pop
aaa
cmp
mov
jno
or
inc
mov
xchg
and
pop
loopne
sbb
or
setb
cmp
cli
cdq
int
aam
pop
sahf
ja
scas
inc
int3
data16
popf
fistp
xchg
xor
mov
or
pop
sbb
(bad)
outs
cmps
aaa
mov
dec
cmc
mov
rcl
clc
js
pop
jns
dec
or
mov
pop
push
mov
jge
inc
imul
mov
sub
or
or
repnz
xor
mov
jo
mov
sbb
mov
xchg
cmp
sbb
inc
outs
or
(bad)
movs
push
inc
push
test
xor
dec
mov
sub
pop
rcr
test
(bad)
cmp
mov
sub
xor
xor
mov
sbb
movs
jecxz
js
push
jmp
and
(bad)
adc
stc
fisubr
mov
iret
dec
repnz
adc
jb
push
xor
jne
popf
adc
les
mov
jmp
adc
cmc
hlt
and
std
(bad)
add
fwait
into
sbb
lock
xchg
cld
xchg
repnz
ins
inc
mov
sti
xchg
push
xchg
push
cmp
out
addr16
push
cmp
mov
push
mov
jl
jecxz
leave
jp
xchg
cmps
mov
push
jg
jne
jmp
dec
cmp
call
stos
ret
cwde
test
loope
and
ins
xor
add
shr
xchg
and
pop
pop
jge
cmps
add
ins
not
dec
fist
std
push
stos
and
aad
jmp
adc
inc
loopne
push
mov
adc
sbb
ffree
and
cld
ret
retf
imul
sahf
nop
in
jmp
inc
in
aad
cmp
inc
add
aam
cmp
xor
in
mov
pop
popa
mov
sbb
lods
push
inc
mov
pop
shl
stc
inc
lods
inc
mov
repnz
inc
jmp
inc
fild
xchg
aas
retf
pop
inc
iret
jmp
add
cmp
rcr
sub
in
cli
or
enter
cmp
(bad)
sbb
leave
jecxz
int
cld
mov
into
dec
or
or
je
loop
in
jge
ds
nop
jb
fstp
movs
into
pop
pand
mov
mov
xchg
fcom
popf
outs
int3
add
dec
sbb
pop
out
enter
arpl
test
or
repz
and
mov
lods
in
mov
xor
adc
(bad)
cs
fisttp
mov
out
bound
and
sar
mov
cwde
sbb
fcomp
scas
loope
cmp
test
test
not
fldcw
push
xor
pop
xchg
test
inc
jg
dec
lock
movs
push
in
(bad)
rcr
iret
retf
popa
lods
sahf
mov
pop
bound
out
or
ja
(bad)
loopne
mov
test
dec
ficom
adc
test
sub
inc
out
leave
or
(bad)
lods
stc
lods
call
imul
mov
push
aad
xchg
jbe
xor
add
es
add
pusha
dec
clc
add
adc
int3
out
in
out
or
push
lea
lods
(bad)
fist
dec
shl
jnp
xchg
add
or
test
lods
pop
not
and
retf
inc
loopne
pop
lock
mov
icebp
loop
lea
dec
std
ja
loope
(bad)
fsubr
mov
fsubr
inc
jge
into
sub
cmps
mov
aas
cmps
push
push
and
imul
das
shl
and
(bad)
fsub
pop
pop
adc
mov
repz
push
sti
les
(bad)
int3
movhps
je
xor
lea
pop
push
in
aaa
add
mov
mov
mov
jl
das
ins
js
adc
imul
bound
jmp
sub
outs
sub
add
cmc
fmul
popa
inc
retf
dec
movs
ins
inc
stos
xchg
ins
sub
out
rcl
mov
sub
or
hlt
push
push
and
inc
in
hlt
mov
inc
push
mov
jmp
push
dec
mov
mov
jp
pop
test
sbb
lds
sub
gs
mov
or
jmp
pusha
fstp
jmp
pop
in
sub
and
dec
dec
push
mov
out
shl
or
out
popa
shl
(bad)
retf
push
mov
fadd
test
sbb
jae
jmp
xchg
call
xlat
out
mov
ficomp
sub
imul
lods
clc
in
inc
outs
dec
ja
fdiv
ds
xchg
out
arpl
push
(bad)
data16
(bad)
(bad)
mov
fld
dec
jp
pushf
es
mov
nop
xor
add
in
leave
je
pop
mov
mov
ret
ja
ds
push
repnz
inc
or
fild
push
push
scas
retf
addr16
(bad)
aas
out
outs
cs
or
shl
jmp
xchg
and
jne
es
dec
repnz
rcr
mov
dec
(bad)
cmp
dec
adc
inc
inc
mov
std
cmp
xor
pop
adc
cmc
jp
pop
mov
fimul
push
lock
cdq
mov
xor
test
rol
int3
push
xor
popa
in
pop
pop
adc
push
fild
test
shl
test
fcmovb
mov
lea
push
xchg
jecxz
addr16
inc
jns
ds
imul
enter
sub
mov
jne
test
sti
inc
jl
dec
mov
sub
cld
hlt
pop
fild
add
xor
or
adc
mov
mov
push
je
outs
mov
push
scas
ret
(bad)
popf
lea
pop
add
rol
and
or
cmp
cmps
xchg
pop
cmp
call
sahf
push
sub
mov
dec
cmp
push
imul
repz
inc
sub
and
xchg
enter
jbe
adc
push
mov
pop
mov
lahf
add
cmp
add
cli
fild
jle
jne
mov
ins
jae
xchg
and
pushf
sahf
ja
(bad)
imul
mov
in
popf
out
dec
xor
not
es
icebp
mov
add
adc
jnp
data16
mov
push
cmp
and
xor
(bad)
jle
scas
xchg
push
inc
dec
push
dec
mov
je
out
push
stos
xor
test
(bad)
movs
fild
xchg
into
and
std
inc
push
call
dec
mov
push
jns
pop
and
mov
aad
lds
ret
sub
dec
xchg
test
loope
xor
cmps
or
adc
hlt
sbb
adc
push
jae
xor
adc
gs
or
stos
bound
lss
mov
mov
clc
add
pop
mov
sbb
or
push
aaa
stos
and
aad
mov
add
retf
(bad)
(bad)
pop
test
test
js
(bad)
cmp
mov
mov
and
inc
push
mov
cmp
mov
jl
or
cld
jge
xchg
sbb
call
jmp
push
xor
jg
ins
ja
stc
sbb
inc
add
sbb
call
addr16
and
call
xchg
xchg
jo
and
sbb
and
xlat
sub
push
add
(bad)
xchg
call
cld
inc
add
push
and
movs
bound
mov
pop
int3
dec
push
aad
xchg
pusha
fisubr
adc
ficom
jnp
jnp
mov
adc
sub
retf
sub
inc
rcr
rcl
push
xchg
sub
mov
or
aaa
and
cs
jo
xor
push
adc
sar
ret
pop
test
adc
rcl
rol
pop
push
enter
mul
pusha
mov
ss
pop
push
mov
jbe
and
rol
and
fistp
mov
mov
test
xchg
jmp
push
cmp
push
sbb
es
pop
rcl
out
aaa
addr16
repnz
imul
push
adc
pop
add
jns
inc
pushf
adc
fisubr
push
push
sub
and
test
ror
mov
sahf
sub
rol
retf
jp
in
je
stos
mov
repz
sub
int3
xchg
outs
outs
add
or
sahf
xor
ins
xchg
or
mov
pop
mov
sub
and
out
iret
add
and
ss
mov
pop
test
ficomp
pop
outs
lods
pop
mov
(bad)
jmp
retf
retf
data16
dec
divps
(bad)
or
clc
sub
(bad)
pop
add
push
sar
icebp
imul
pop
mov
dec
xchg
pop
jle
push
scas
repnz
xor
mov
pusha
mov
jge
cmp
xchg
jl
lds
cwde
iret
daa
call
fbstp
test
fmul
add
outs
adc
xchg
jmp
xchg
in
cmp
jo
loopne
ret
or
add
or
ret
adc
pusha
cmp
pop
pop
hlt
pop
jg
mov
sbb
cdq
inc
xchg
inc
ins
sub
es
(bad)
dec
mov
out
mov
imul
lock
push
push
or
or
stc
test
sbb
pop
pop
stos
sub
inc
xchg
sbb
into
repnz
push
daa
(bad)
dec
mov
push
gs
jb
test
jae
dec
enter
scas
jb
mov
sbb
ins
repnz
and
mov
ficomp
mov
loop
dec
dec
cmp
add
pushf
xchg
outs
js
shr
in
into
fild
mov
mov
inc
sbb
scas
push
cmps
das
adc
push
dec
or
pusha
inc
shr
cdq
dec
mov
ins
sub
mov
js
push
nop
out
mov
bound
cmp
adc
adc
or
(bad)
shl
sar
lahf
or
rcl
mov
xchg
mov
repz
mov
jp
jbe
sbb
and
lea
in
or
mov
fist
jb
sbb
pop
push
iret
and
mov
push
and
out
mov
lods
inc
ret
mov
(bad)
bound
out
aam
xchg
in
aad
add
push
jmp
(bad)
fdivr
jbe
jmp
jno
add
adc
mov
mov
mov
int
lds
jbe
mov
movs
jnp
pop
test
add
les
aad
inc
imul
ins
int3
rcr
mov
bound
pop
(bad)
imul
movs
sbb
imul
call
mov
mov
push
jg
mov
and
imul
or
fiadd
into
inc
repz
adc
shr
mov
and
jae
jge
sub
jp
mov
inc
xor
ficom
loope
ja
push
(bad)
mov
mov
xor
ins
sbb
pop
mov
push
mov
mov
lds
dec
add
mov
mov
imul
in
loop
mov
push
nop
inc
pop
popf
adc
mov
dec
clc
or
push
bswap
sbb
repz
add
sti
nop
(bad)
fadd
inc
fcomip
add
(bad)
push
mov
daa
mov
aam
push
ins
dec
fmul
cwde
add
inc
fidivr
xchg
inc
add
adc
cli
cmp
mov
xor
aad
pop
jmp
out
mov
dec
loope
pop
push
and
lock
(bad)
pop
icebp
lock
jbe
ss
jmp
and
hlt
or
add
in
sahf
(bad)
ins
mov
sub
xor
pop
jno
aaa
xchg
cmps
dec
icebp
inc
cld
and
movs
enter
es
sbb
test
pop
mov
or
rcr
(bad)
mov
cmc
sub
shl
mov
(bad)
sbb
add
sub
and
or
ds
cld
loop
sub
leave
shl
pop
push
or
xchg
fwait
mov
sbb
fcmovbe
ja
xor
test
and
out
ins
(bad)
daa
jns
inc
xor
dec
pop
mov
addr16
xchg
pop
cdq
les
movs
pop
fst
imul
setno
retf
push
cli
cs
sub
fnstenv
xchg
inc
mov
jnp
mov
std
xor
adc
xor
inc
scas
(bad)
fcmove
in
or
jbe
shl
adc
fsubr
pop
aam
pusha
xchg
pushf
leave
inc
test
rol
sub
ins
icebp
xlat
call
cmp
sahf
out
int
mov
cwde
and
fwait
add
stos
stc
iret
add
(bad)
into
pop
lock
arpl
gs
adc
(bad)
(bad)
shl
aad
frstor
sbb
data16
in
push
cwde
adc
(bad)
sub
mov
mov
(bad)
mov
sub
jp
inc
rcr
in
mov
bound
inc
lods
cmp
out
add
jnp
ret
push
mov
dec
add
lea
push
inc
cmp
(bad)
dec
add
mov
add
mov
or
and
sub
retf
dec
out
(bad)
sub
loop
jo
arpl
pop
or
pop
les
(bad)
out
push
xor
jmp
jae
dec
jne
enter
shr
out
push
dec
lahf
aam
sbb
dec
test
mov
retf
cmc
xchg
in
adc
mov
aad
mov
cmc
jmp
dec
push
and
mov
jno
out
scas
sub
inc
inc
ja
cld
mov
ret
sbb
mov
sbb
mov
pop
add
cdq
lldt
loope
loope
ret
dec
sub
xor
mov
or
push
js
add
mov
stc
clc
cmc
les
xor
in
in
fmul
ss
or
push
dec
push
jns
push
cmp
mov
and
jmp
and
and
movs
lds
inc
mov
ins
test
aam
push
call
xor
jnp
ss
or
push
xlat
sub
fistp
push
jecxz
aad
or
pop
mov
loop
jmp
sub
pop
arpl
and
out
mov
sub
jb
inc
stc
addr16
sbb
or
dec
test
cmc
seto
mov
daa
sub
sbb
stos
ss
xor
inc
nop
enter
test
gs
jno
sbb
push
sbb
inc
mov
lock
sahf
in
sti
xchg
sbb
xchg
mov
dec
pop
push
test
int
sub
cmp
call
cmps
xchg
dec
jno
ja
pop
ret
jne
in
push
adc
jge
aaa
add
pop
xchg
leave
push
scas
jle
icebp
and
mov
icebp
jno
mov
fstp
add
cdq
sti
jb
fwait
mov
out
ins
and
out
and
sar
jmp
xchg
pushf
rcr
or
add
cmps
ja
ds
(bad)
jmp
jbe
or
icebp
lods
cli
bound
sbb
daa
jp
jg
pop
lahf
cmp
je
dec
lods
in
jbe
mov
sbb
aaa
mov
adc
neg
ret
and
add
(bad)
fstp
pop
js
pop
retf
mov
and
aad
adc
lods
int3
dec
in
aas
and
xor
mov
out
mov
xchg
or
cmp
push
jmp
add
ret
dec
and
ja
cmp
popa
dec
test
xor
jle
jecxz
ds
mov
push
xchg
mov
rol
repnz
leave
inc
jmp
push
pushf
mov
and
dec
out
pop
push
mov
mov
sbb
test
arpl
loope
sbb
pop
mov
adc
cmps
call
add
pop
xor
or
ret
cmp
aad
das
mov
(bad)
push
imul
shl
xchg
jns
hlt
cmps
out
dec
jmp
inc
inc
mov
aam
adc
jne
mov
xor
jbe
pop
inc
faddp
and
push
jnp
loope
fwait
mov
jge
cmps
loope
mov
leave
mov
ret
and
jmp
xor
sub
enter
jno
in
sub
sbb
lods
ror
into
scas
fsubr
mov
das
jne
xor
or
rol
jae
movs
pop
stc
js
loope
iret
aaa
ins
int3
add
dec
pop
das
pop
mov
jne
(bad)
dec
mov
nop
jg
imul
push
sub
(bad)
imul
cmp
call
inc
xchg
cwde
in
inc
clc
adc
xor
mov
fcom
test
inc
pop
xchg
xchg
fsubr
push
fimul
sub
mov
mov
das
push
ror
pop
pop
push
aaa
test
pusha
inc
jge
pop
mov
ss
ret
enter
out
adc
adc
outs
aad
fsub
xor
aad
je
dec
lahf
jbe
sbb
shr
std
pop
cwde
cwde
xor
int3
adc
pop
xchg
cmps
inc
mov
adc
test
sub
xchg
mov
movs
add
dec
call
xlat
nop
stos
in
and
or
adc
call
dec
mov
aas
popa
push
shr
xor
call
add
mov
sbb
pop
fsub
cwde
jge
bound
shl
cwde
push
fwait
push
in
mul
mov
addr16
or
sahf
(bad)
ffree
push
enter
call
pop
inc
fadd
push
or
sbb
jo
std
icebp
movs
call
pop
js
fwait
scas
scas
scas
je
push
pop
adc
jecxz
cld
and
sub
icebp
test
mov
nop
push
mov
jmp
add
(bad)
jge
add
jb
adc
mov
and
scas
sbb
test
dec
(bad)
in
iret
ds
jb
mov
test
jle
cwde
enter
sub
push
mov
dec
inc
and
inc
mov
vpsubusb
xchg
mov
inc
(bad)
cli
jnp
stc
(bad)
(bad)
pop
test
sub
jp
lods
and
repnz
fild
adc
das
xor
push
adc
lods
mov
fisub
in
test
in
and
shl
fwait
mov
jno
fist
pop
lods
mov
test
ss
scas
call
(bad)
cmp
xchg
and
xor
pop
xor
cmp
push
dec
xor
or
pop
jmp
emms
lock
lock
fisub
out
ds
out
lds
mov
or
test
pop
out
cmp
jae
jmp
(bad)
push
dec
fbstp
repz
ja
call
cmps
ja
std
jnp
mov
mov
mov
mov
sbb
mov
push
sbb
cmp
pop
cmp
xor
dec
stos
mov
nop
xor
jnp
pop
movs
shl
push
int
or
cmps
mov
sbb
shl
pop
mov
and
add
hlt
dec
repz
cdq
sbb
inc
jl
mov
cmc
bound
fsubr
cs
ds
pop
nop
sub
(bad)
or
sub
aam
sub
sbb
pop
clc
ins
push
imul
mov
push
repz
pop
fsubrp
fidiv
loope
call
xchg
mov
(bad)
ins
xchg
or
sahf
xchg
retf
loope
je
inc
les
mov
bound
add
adc
or
ret
cwde
or
xchg
sbb
sub
scas
ror
pop
leave
aad
js
pop
shr
jns
je
in
jbe
cmp
push
mov
movs
pop
hlt
repz
mov
sbb
jae
adc
cli
sbb
push
fcomp
(bad)
pop
inc
int3
outs
mov
sbb
fcmove
outs
xor
test
fcmovbe
and
enter
out
jo
int
pop
push
lock
xchg
mov
dec
repz
add
mov
arpl
ins
jle
pop
fnstcw
mov
cmc
aad
push
add
mov
push
lds
mov
(bad)
mov
cmp
in
inc
shr
cmps
inc
test
fst
cmps
in
adc
aaa
and
dec
imul
and
xchg
fsubp
shl
pcmpgtd
in
dec
loope
ins
stos
ins
jl
adc
popf
cli
jo
adc
pusha
jge
xor
cdq
xor
and
or
push
jmp
popf
fld
or
scas
scas
cmp
cdq
loopne
data16
and
add
xchg
pop
sbb
dec
scas
out
push
push
loope
mov
and
cmp
fcom
int3
sub
pushf
jae
mov
add
aaa
shl
add
lods
cld
dec
fs
lea
aam
rcl
sar
es
adc
inc
fstp
popa
cwde
sbb
dec
dec
ret
xor
ins
mov
add
push
fistp
(bad)
ins
xchg
pop
or
push
(bad)
xor
in
inc
fnstcw
(bad)
repz
mov
cmp
dec
repnz
pop
(bad)
iret
mov
inc
repz
(bad)
pop
rol
fnstenv
or
scas
shr
(bad)
mov
test
sub
psubd
lds
int
(bad)
mov
xchg
ret
ret
sbb
cli
les
dec
sub
ss
nop
mov
retf
lods
in
(bad)
in
and
pusha
iret
das
out
inc
push
(bad)
mov
ret
inc
mov
js
jnp
mov
mov
jmp
cmp
pop
daa
inc
push
or
inc
in
scas
dec
add
mov
test
retf
ja
leave
cmp
cmps
inc
push
cmc
daa
inc
or
in
clc
mov
mov
enter
out
dec
mov
addr16
cmps
fisubr
jne
retf
jo
adc
xor
mov
ja
push
xlat
xlat
mov
in
cmp
aad
inc
mov
jp
mov
sbb
test
fs
jge
xchg
dec
rol
aas
mov
mov
mov
xchg
mov
ror
push
mov
add
pop
mov
or
xor
mov
sti
mov
movs
push
int3
enter
bound
ret
push
and
mov
or
add
loopne
leave
cmc
ins
xchg
xor
mov
movs
popa
mov
cli
ror
cmps
int
imul
push
xor
push
jno
fst
sub
and
outs
and
ss
mov
call
inc
mov
(bad)
stc
push
jl
cmps
repz
(bad)
nop
inc
js
test
xchg
cwde
sub
add
cvttps2pi
and
imul
inc
jp
enter
clc
(bad)
js
outs
mov
sub
cmp
aaa
inc
dec
dec
jl
pop
add
lahf
push
movs
je
(bad)
pop
and
mov
add
in
add
sar
bound
call
mov
ficom
cld
ret
into
rol
(bad)
loopne
fs
or
scas
add
cmp
xchg
jl
fwait
dec
or
mov
rol
stos
and
scas
and
mov
sti
push
sar
pop
mov
idiv
ins
pop
pushf
push
pcmpeqb
sbb
or
sbb
shl
movs
movs
mov
jp
aas
xlat
movs
jns
sti
adc
jge
inc
shr
retf
rol
and
das
in
fld
cld
or
add
mov
repz
enter
rol
adc
rcr
outs
stc
xchg
movs
cmps
push
sbb
adc
inc
push
jo
push
movaps
jae
mov
pop
adc
or
dec
dec
mov
fwait
cmp
(bad)
cmc
xchg
push
out
mov
pop
fisubr
and
and
mov
fstp
push
les
fcmovnu
add
sti
popf
or
xor
jecxz
inc
imul
cmp
nop
fwait
cmc
jo
pusha
mov
lods
repz
in
ds
add
inc
leave
xor
sub
lahf
lds
js
mov
pop
shl
retf
test
(bad)
cld
push
test
call
xor
push
ret
pop
clc
inc
in
out
rol
sbb
pop
mov
mov
and
fcmovne
loopne
loope
push
push
mov
pop
test
popf
addr16
adc
dec
xchg
data16
dec
xchg
in
mov
imul
sub
inc
movs
pop
xchg
add
mov
jp
sub
scas
push
mov
push
shr
jmp
add
pop
nop
xor
cmp
mov
outs
mov
cwde
and
xchg
add
scas
or
sbb
jnp
fld
cmc
stos
mov
adc
xchg
rcl
inc
push
dec
xor
fdivr
repnz
(bad)
dec
ror
lea
fidivr
mov
inc
sub
sub
out
mov
pop
push
jmp
retf
jl
jle
sub
pop
movs
dec
lahf
push
arpl
test
daa
push
xlat
es
jle
pop
push
shr
dec
xor
mov
push
mov
iret
xchg
push
xchg
lock
sbb
dec
cmps
mov
loopne
popf
and
inc
test
jmp
cwde
dec
cmp
in
mov
std
loope
sub
mov
mov
sub
lahf
lock
stos
repnz
push
shl
mov
push
xor
(bad)
pop
lods
loop
sub
sahf
bound
nop
les
fsub
retf
jbe
(bad)
into
sbb
ror
inc
add
pop
jne
mov
stos
out
push
jo
out
movs
add
jg
in
and
shl
mov
xchg
ins
test
into
mov
inc
fs
xor
xor
and
mov
enter
pop
(bad)
and
clc
sahf
mov
mov
shl
stos
shl
xor
xchg
xchg
(bad)
dec
scas
mov
dec
add
lds
jbe
nop
inc
jne
fmul
leave
ror
mov
mov
and
call
nop
sub
fiadd
(bad)
jmp
rol
xor
and
fs
adc
push
inc
in
aad
add
sahf
jl
psadbw
fldl2t
test
icebp
xchg
popf
(bad)
mov
in
cs
mov
add
jmp
cmc
les
int
aas
xchg
pop
cmp
xor
neg
in
js
popf
imul
out
loopne
fstp
std
dec
and
and
aas
lds
add
adc
das
push
leave
call
add
imul
and
xor
jg
xchg
ror
call
sbb
das
inc
mov
bound
adc
mov
mov
mov
mov
scas
push
inc
sub
in
mov
repz
not
xchg
in
jle
xor
sub
test
jg
inc
fwait
mov
mov
mov
inc
aas
enterw
test
icebp
jb
ins
shl
mov
xor
mov
sar
retf
or
mov
cld
sti
shl
test
or
out
sub
adc
inc
jmp
fld
retf
mov
je
push
add
mov
jae
pop
mov
stc
cdq
stc
(bad)
jg
cmps
cs
sbb
mov
xchg
sub
out
or
sahf
cmp
sub
iret
cdq
in
and
add
mov
pop
test
je
cdq
cmps
test
jl
dec
popf
jns
mov
mov
icebp
test
cwde
mov
pop
inc
cmps
cmp
stc
inc
push
pop
push
rcr
aam
mov
mov
and
dec
fst
(bad)
push
in
xchg
sbb
fnstcw
(bad)
mov
ror
gs
dec
dec
test
adc
jmp
xchg
adc
mov
push
jmp
hlt
call
int
arpl
inc
(bad)
leave
aam
push
ss
dec
ds
or
retf
push
mov
loop
xchg
xchg
mov
or
sbb
pop
push
mov
add
ret
sbb
in
inc
jle
or
inc
aas
adc
add
enter
arpl
rcl
fadd
scas
xlat
cmp
icebp
xchg
rcl
call
retfw
aaa
dec
sub
add
xor
cs
iret
mov
aam
lock
add
inc
rcr
and
pushf
cs
inc
mov
and
movs
popa
clc
xchg
call
adc
mov
push
or
jmp
outs
sbb
and
cli
pop
pop
push
jnp
sub
cmps
int3
addr16
div
mov
add
pop
ficom
dec
sub
inc
cs
xor
xchg
ins
popa
mov
push
(bad)
inc
push
fwait
pop
fwait
push
popa
jg
enter
dec
div
aaa
rcr
dec
or
pusha
cmp
rol
inc
retf
(bad)
xchg
adc
scas
mov
cmp
cld
sub
cmps
mov
pop
jne
inc
push
ins
mov
cmps
in
mov
mov
dec
pop
in
in
mov
mov
xchg
jg
test
mov
outs
dec
std
loopne
cmc
pushf
inc
test
nop
scas
ret
in
jmp
lods
xor
sub
test
retf
add
test
call
gs
mov
loope
cmp
or
repz
push
mov
jl
movs
sbb
in
cwde
or
xor
inc
sbb
sbb
mov
adc
cmp
into
or
cmp
xchg
cmp
or
fwait
das
mov
les
adc
fcom
jg
ins
movs
ja
fwait
aam
fld
jmp
fcmovnb
sar
test
mov
jbe
xor
jp
adc
adc
iret
arpl
(bad)
fisttp
iret
sar
jo
mov
into
lods
aaa
retf
sbb
js
retf
push
jno
push
adc
cli
std
xchg
sub
(bad)
pop
or
in
into
adc
dec
neg
ss
and
ror
inc
ss
xchg
dec
push
adc
dec
loope
inc
(bad)
mov
dec
mov
sbb
rol
inc
out
add
or
bnd
mov
inc
movs
add
test
jl
scas
out
inc
mov
push
in
aad
das
push
xchg
jns
das
sub
xchg
int
sub
push
sub
lods
jmp
add
retf
sbb
xchg
xor
mov
stos
and
mov
mov
jnp
cld
push
bound
ins
adc
les
push
jp
nop
mov
mov
jns
stos
sub
ret
mov
stos
ja
fcomi
popa
outs
fiadd
push
(bad)
retf
aam
gs
pop
cmp
arpl
mov
cdq
cmp
(bad)
mov
cmc
mov
dec
xchg
adc
jg
stos
clc
pop
inc
adc
test
int
ss
dec
ret
push
or
(bad)
call
popf
mov
and
ret
pop
sbb
mov
jae
jo
fiadd
pop
cmps
sbb
repnz
mov
test
add
jp
add
or
les
cmp
arpl
aas
dec
int3
bound
ret
clc
mov
adc
mov
xchg
push
jmp
mov
addr16
dec
xchg
xchg
pop
mov
mov
in
push
push
adc
jle
repnz
stc
nop
test
dec
loopne
leave
mov
xchg
push
jle
sbb
cwde
xchg
pushf
xor
mov
lods
shr
stc
adc
sbb
lods
ret
(bad)
stos
fwait
jmp
jge
jae
sbb
(bad)
(bad)
adc
fidiv
ret
ror
xchg
je
jbe
mov
fld
ja
pop
xchg
imul
mov
cmp
cmp
cli
in
mov
hlt
dec
xchg
jbe
inc
mov
in
scas
pop
ror
lock
lods
or
and
and
ret
pop
mov
ja
mov
push
mov
loop
sbb
xlat
cmp
outs
(bad)
(bad)
loop
fimul
sub
jo
jmp
mov
ja
repnz
hlt
mov
xchg
sub
xchg
(bad)
fcom
cwde
jno
dec
or
xor
pop
add
xor
fnsave
jl
test
mov
dec
test
jmp
in
xchg
call
rcl
and
les
jle
push
clc
(bad)
mov
ja
popf
imul
inc
inc
xchg
mov
aam
inc
or
mov
rcr
jne
in
call
jmp
(bad)
bnd
std
imul
sar
adc
cmp
mov
mov
xlat
pop
nop
jo
add
mov
sbb
jge
adc
mov
inc
sub
loopne
out
jmp
push
push
dec
enter
div
loopne
test
mov
cld
lds
pop
cmc
sub
outs
std
std
and
cmps
mov
aad
retf
sbb
sub
inc
sub
push
stc
loope
sti
clc
pop
pop
pusha
leave
sub
cmps
lock
mov
add
cmp
pop
jbe
outs
scas
or
mul
push
jle
pusha
or
mov
sbb
mov
xchg
push
ror
add
out
loop
lea
mov
inc
cmp
push
dec
push
fist
repnz
add
fcmovnu
xor
push
and
adc
xor
ins
shl
sbb
rcl
sub
xlat
jns
out
xor
retf
addr16
pushf
popf
(bad)
xor
adc
lods
iret
and
xchg
xor
loope
or
cmc
sahf
mul
popf
jns
shrd
cmps
pop
adc
add
dec
clc
xchg
inc
sub
in
mov
or
mov
pop
inc
cmp
rcr
cld
add
mov
pop
addr16
mov
jp
cmp
sti
jb
mov
mov
outs
aam
(bad)
pop
pop
mov
(bad)
xor
adc
and
add
lods
xchg
outs
push
mov
mov
cli
and
popf
xor
icebp
shl
mov
sub
fwait
loop
or
cdq
popa
sub
arpl
je
mov
xchg
lea
push
push
lock
jae
sbb
(bad)
jl
cld
push
ficomp
gs
test
push
cmp
pusha
lahf
adc
ror
pop
cmc
scas
test
mov
dec
adc
push
push
in
test
das
arpl
mov
and
imul
in
inc
ins
shl
aam
test
sbb
iret
xchg
xchg
add
cmp
fnsave
or
sar
popa
(bad)
pop
std
arpl
test
js
mov
mov
loopne
fndisi(8087
mov
and
test
and
ja
dec
mov
imul
test
(bad)
fdivr
fldenv
xor
dec
repnz
test
pop
push
mov
loop
and
pop
(bad)
sti
mov
test
sti
outs
cli
cmc
pop
push
cli
scas
add
xor
(bad)
jecxz
mov
stc
mov
xchg
je
ins
ins
(bad)
xlat
add
xchg
jecxz
leave
or
test
mov
mov
sbb
in
or
sbb
arpl
push
(bad)
mov
popf
and
sbb
fs
das
pushf
xchg
add
iret
fwait
not
cmp
cmp
outs
stc
lods
cmp
xacquire
les
adc
add
fild
scas
pop
mov
xchg
push
fwait
movs
and
lds
cmc
jb
popa
ficomp
(bad)
xor
loop
in
clc
daa
xchg
movs
or
adc
dec
jmp
push
das
xor
gs
inc
inc
test
(bad)
scas
pop
push
and
ret
fist
in
mov
sub
inc
mov
xor
sbb
mov
jnp
cmp
jo
sbb
rol
inc
push
mov
outs
repz
jg
sbb
inc
clc
arpl
(bad)
scas
mov
add
jg
loop
cmp
shl
je
jmp
leave
cwde
jno
cmps
or
test
or
repnz
fnstenv
or
inc
xchg
int3
sbb
data16
(bad)
dec
sub
cmc
jmp
xchg
and
pop
ja
or
pushf
int3
inc
lods
jle
push
dec
les
sbb
dec
(bad)
xlat
into
fnsave
jbe
mov
cmp
test
outs
(bad)
callw
aaa
ffree
mov
lea
xor
outs
jne
fistp
dec
int
aaa
mov
fst
imul
(bad)
adc
sbb
dec
mov
sub
out
or
das
gs
pop
fld
sub
mov
push
push
adc
fadd
in
dec
or
jl
mov
inc
imul
sbb
lahf
cs
mov
or
adc
add
hlt
xor
inc
mov
in
jb
pop
jbe
push
mov
iret
mov
int
lea
inc
mov
retf
jmp
dec
cmp
adc
rol
mov
(bad)
ins
cmp
cmp
movs
outs
sbb
sub
loop
xchg
cmc
and
cmp
cwde
(bad)
aas
(bad)
mov
inc
add
ficom
out
out
and
iret
xor
lods
enter
(bad)
cli
jno
inc
push
push
cmc
jno
call
(bad)
or
pop
mov
inc
ds
cld
pop
push
movs
out
adc
push
push
stos
inc
bswap
jae
pop
data16
adc
hlt
xor
das
cmp
xlat
pavgb
jo
jge
push
xchg
imul
(bad)
daa
jmp
pop
mov
rol
inc
xchg
sbb
jbe
into
sbb
sub
lea
add
dec
addr16
jns
scas
fldcw
push
imul
mov
gs
scas
xor
aaa
cmp
(bad)
sbb
sub
push
sub
jnp
aaa
adc
dec
sbb
add
or
stos
xchg
sbb
jmp
lea
imul
sub
dec
es
(bad)
xor
(bad)
test
(bad)
cld
loop
or
shl
dec
shl
jmp
xor
daa
imul
inc
das
sbb
jno
xchg
cmovae
ja
(bad)
mov
inc
fcom
(bad)
jo
dec
and
pop
sbb
stos
sbb
(bad)
retf
add
mov
or
lock
test
cwde
pop
shl
pop
dec
bound
ffreep
cdq
inc
xchg
nop
loope
fild
inc
icebp
scas
lock
sbb
jnp
fst
rol
or
xchg
cmc
iret
retf
adc
sbb
sbb
or
xchg
addr16
jns
dec
dec
mov
stc
cmps
mov
push
jmp
ficom
and
dec
enter
out
cmp
dec
push
(bad)
mov
das
mov
icebp
les
int
pop
sbb
sbb
das
lods
repz
xor
push
adc
fcom
mov
pop
pop
call
or
out
fwait
adc
imul
adc
mov
mov
test
add
mov
test
add
retf
dec
shr
nop
fcomp
fild
xchg
das
xlat
leave
repz
push
xchg
sbb
add
in
adc
pop
inc
jmp
mov
je
cmp
adc
and
imul
mov
push
push
jae
test
dec
mov
xchg
fisub
pop
sbb
inc
push
hlt
xchg
in
or
or
fstp
and
sbb
xor
or
(bad)
mov
sti
retf
adc
out
mul
jae
aas
ss
dec
addr16
ds
std
jge
xchg
sets
mov
inc
push
or
xor
dec
fadd
dec
aaa
mov
cmp
add
fstp
sub
sub
sbb
shl
in
popf
inc
in
int3
popf
in
ret
cmp
cmps
pop
cmp
inc
imul
in
stos
jmp
loope
sub
add
fs
mov
and
xlat
push
or
or
xchg
ss
pop
add
push
push
mov
cld
inc
jo
mov
fs
frstor
pop
xor
ror
mov
not
jae
arpl
pop
popf
imul
hlt
push
icebp
sub
and
shr
pop
xchg
pop
push
dec
mov
sub
fwait
push
js
push
xchg
jnp
adc
lahf
inc
mov
ror
sti
cmp
mov
xchg
fsub
sbb
cld
dec
imul
push
ss
push
cmc
dec
outs
cmc
or
inc
mov
int3
xchg
xor
arpl
xor
(bad)
pushw
or
aaa
cli
adc
fs
xor
add
cmp
je
in
enter
and
(bad)
lea
push
jge
or
stos
pop
jnp
shr
adc
ret
push
call
fistp
push
dec
adc
js
add
add
inc
adc
ins
push
xchg
fsub
or
xchg
jmp
inc
dec
jnp
retf
xor
push
(bad)
jp
fild
jo
inc
fistp
(bad)
jns
xchg
xchg
xor
jns
xchg
xchg
mov
sub
ja
stc
in
dec
ret
(bad)
aaa
push
fucomi
adc
jle
xor
sbb
int
mov
inc
mov
dec
adc
cdq
push
jecxz
mov
into
hlt
jle
cmp
data16
iret
jno
inc
sahf
pop
stos
mov
cmp
ror
pop
aas
or
cwde
cmp
push
pop
cs
or
mov
jno
mov
pop
mov
inc
std
mov
sbb
pop
adc
(bad)
call
cmp
pushf
addr16
xor
int
cmp
pushw
ret
and
inc
aad
js
rcl
mov
(bad)
in
sbb
pop
iret
pop
xchg
fs
loop
das
int3
xchg
(bad)
pop
clc
mov
lds
xor
popa
xchg
pop
fisttp
sbb
mov
mov
fwait
and
lock
(bad)
in
(bad)
ja
and
jnp
or
stc
outs
or
adc
pop
adc
sub
ins
inc
iret
inc
and
jnp
xchg
and
or
stos
push
cmp
pushf
add
xor
or
add
jnp
cmp
das
jg
lahf
mov
aam
ret
sahf
scas
sub
jle
add
dec
push
pop
popa
test
call
cmp
jle
mov
bound
add
push
in
int3
fcomp
xchg
cmp
add
out
mov
lds
jb
add
sbb
mov
ja
nop
mov
movs
test
cmps
ror
mov
sbb
and
iret
xchg
xabort
cmps
dec
add
sti
xchg
dec
iret
pop
out
arpl
cmp
lods
inc
pop
xchg
add
cmp
push
jle
cmp
inc
add
xor
sahf
inc
in
add
dec
sbb
cmps
mov
sub
stos
xor
call
cmc
pop
int
jmp
jno
cmps
or
push
dec
sub
pop
xor
sti
dec
loope
cs
inc
cmp
lock
out
stos
sub
lods
jno
push
pop
jb
sbb
add
(bad)
sbb
xchg
scas
jne
xor
sahf
into
cmp
xlat
mov
jbe
in
or
out
push
int3
imul
mov
sbb
test
mov
iret
ins
xor
hlt
cmps
js
cld
js
and
dec
xchg
xor
add
repz
lods
addr16
sub
xchg
adc
lods
sahf
mov
movs
inc
fimul
addr16
out
stos
(bad)
fcmovnb
sti
pop
lds
test
rcl
scas
push
enter
movs
mov
test
aas
inc
retf
pop
(bad)
pop
into
push
test
sbb
enter
out
(bad)
pusha
cs
pop
(bad)
or
stos
jge
dec
call
push
sub
pushf
es
std
sbb
(bad)
adc
test
and
mov
fmul
adc
mov
mov
mov
(bad)
ss
popf
cmp
sbb
sahf
pop
sub
push
in
cwde
fs
lods
jnp
mov
sbb
cld
pushf
test
stos
sub
push
cmp
push
int3
mov
push
cwde
push
dec
mov
jg
dec
dec
(bad)
lods
sahf
cld
mov
and
push
sbb
ror
jo
ror
imul
call
ficom
xor
sbb
xchg
cmp
sbb
adc
adc
push
inc
push
pusha
xlat
lahf
lds
push
xchg
adc
rcr
pop
test
dec
mov
jmp
push
cs
mov
test
ror
xchg
jl
or
inc
xchg
ds
fsub
dec
dec
mov
movq
push
add
in
cmp
gs
ss
jne
scas
ret
pop
push
pushf
push
and
jge
mov
stos
fsubp
sub
push
shl
push
in
cvtdq2ps
cs
lea
xchg
fbld
ja
in
test
xlat
adc
fldenv
jge
dec
fstp
mov
push
(bad)
push
xchg
jns
aad
push
cmp
lds
mov
push
xchg
or
adc
fsub
mov
cmps
hlt
inc
sbb
pop
cmps
sub
mov
lock
daa
add
push
push
jmp
dec
cli
jmp
fcomp
xor
cmp
cld
mov
mov
mov
popa
mov
add
js
daa
lods
sub
xor
xchg
cmps
push
mov
scas
jl
mov
inc
and
push
push
jecxz
mov
neg
and
mov
push
lock
push
adc
adc
pop
ret
add
scas
or
xor
jb
dec
repz
or
int3
addr16
mov
xchg
pop
and
mov
jne
jle
out
out
rcr
pop
fistp
jns
es
push
add
mov
push
imul
sbb
mov
das
xchg
int
enter
mov
jne
mov
cwde
dec
cmp
sub
shl
sbb
sbb
sub
mov
mov
sbb
jnp
invlpg
mov
mov
lods
aas
adc
mov
jno
stos
adc
sahf
ins
add
add
test
and
mov
out
cmp
loop
inc
in
hlt
popa
and
and
sub
loope
add
fstp
cmc
dec
adc
lock
repz
mov
repz
aaa
jmp
mov
cmp
jmp
pop
movs
nop
jne
out
mov
in
jbe
mov
adc
cmp
mov
cld
(bad)
cli
dec
lds
ror
cmp
inc
jle
mov
inc
sub
and
es
sub
add
in
test
mov
push
popa
mov
aam
lahf
adc
js
pop
adc
fstp
push
aam
mov
jle
cli
push
test
sbb
out
(bad)
xor
ret
scas
push
mov
test
mov
call
mov
push
push
push
ins
bound
mov
push
int
sub
xor
imul
jg
jecxz
cmp
dec
xor
cmp
daa
out
mov
add
popa
pop
mov
cmp
xchg
sbb
ins
mov
push
loop
add
arpl
lods
xchg
push
cmp
push
stc
loope
add
cmp
pop
clc
sub
add
xor
cmp
mov
dec
stos
pop
or
ins
push
pop
cmps
jge
test
sub
sub
push
pop
xor
ret
inc
pusha
icebp
and
clc
jmp
pushf
xchg
dec
out
and
sbb
fild
xor
shl
cmp
repz
mov
pop
sub
dec
push
repz
xchg
sub
and
lea
test
jbe
push
dec
fs
mov
add
jo
xchg
imul
pop
clc
add
pop
or
aas
scas
xchg
repz
dec
shl
mov
xchg
das
xchg
add
jnp
lea
push
or
mov
fisttp
sub
sbb
jne
dec
dec
fst
xchg
inc
shl
in
push
jbe
(bad)
sbb
das
mov
dec
icebp
and
xor
shl
es
mov
adc
in
in
jge
sub
mov
test
fisubr
pop
xchg
jp
or
mov
icebp
clc
mov
clc
mov
pop
jb
or
inc
hlt
jne
inc
mov
mov
retf
in
pop
int
addr16
and
fs
pop
mov
test
stos
sub
fdivr
test
sub
rcr
icebp
mov
xchg
leave
mov
test
jge
bound
dec
xchg
mov
scas
jmp
fidivr
add
push
shl
loope
inc
scas
fs
ja
daa
sub
jnp
dec
es
(bad)
(bad)
xor
pop
movs
or
mov
push
xor
jns
lods
(bad)
fisub
sub
es
jmp
push
jb
lods
inc
fs
test
add
sub
dec
xchg
push
fimul
adc
xchg
bound
push
test
add
jno
pop
ins
mov
aas
push
mov
jo
sti
call
cwde
arpl
and
adc
mov
pop
nop
scas
xor
pushf
jo
aas
lea
pop
or
ror
test
dec
push
clc
push
aad
nop
icebp
dec
leave
addr16
retf
loope
sahf
xchg
dec
pop
inc
pushf
and
jns
lock
pop
in
inc
mov
sbb
fmul
push
js
test
push
inc
push
in
push
mov
imul
ret
ins
pushf
sub
add
in
call
lock
and
call
push
cmp
jp
test
js
int3
jmp
mov
or
lods
adc
fld
les
and
nop
jo
jg
ret
push
sbb
sub
mov
pop
pop
loope
mov
add
inc
xor
sbb
dec
lods
ficom
xor
pop
test
inc
mov
aad
adc
push
call
push
call
dec
pop
and
sar
push
xchg
(bad)
loop
shl
ror
iret
and
(bad)
cwde
dec
sti
aam
jnp
push
cmps
retf
xchg
adc
(bad)
push
mov
loope
push
mov
clc
cmp
pop
xchg
outs
and
data16
pop
out
ins
pop
in
fucomi
out
les
sbb
imul
jle
(bad)
loop
js
dec
mov
or
in
jecxz
cs
xchg
hlt
scas
xchg
inc
and
cmp
dec
ret
xor
js
in
das
stos
repnz
jp
xchg
clc
ret
ficomp
mov
fimul
add
or
mov
inc
add
add
(bad)
xor
cmc
fwait
cmp
les
push
mov
fcomip
es
sti
stos
lahf
cmps
(bad)
and
cmp
jp
in
(bad)
mov
inc
pop
cld
loope
fnstcw
or
fs
pop
(bad)
repz
push
in
stos
pop
adc
inc
aas
dec
push
jle
mov
pop
jbe
sub
cdq
mov
or
cmp
inc
sub
aas
add
fcom
ret
(bad)
mov
int3
(bad)
adc
ror
and
inc
pop
test
dec
push
mov
stos
xchg
jecxz
pop
jne
jae
lock
xor
push
jle
jne
pusha
int
enter
sbb
cld
out
(bad)
cli
xchg
(bad)
and
jle
sbb
call
or
mov
sub
mov
mov
dec
sub
push
pushf
xchg
cmp
cmp
cmps
test
js
(bad)
in
xlat
or
cdq
shr
int
or
mov
cmp
fcomp
and
xor
outs
retf
retf
push
cmp
sbb
mov
stos
add
jae
das
xchg
dec
jmp
add
loope
push
push
pop
jmp
mov
outs
jbe
pop
outs
out
cmps
jge
push
clc
inc
adc
movs
lock
(bad)
xor
je
adc
sub
int3
mov
retf
or
sub
cmp
fdiv
xchg
jbe
and
sub
pop
dec
in
or
in
mov
xor
dec
test
je
imul
inc
xchg
shr
lods
inc
out
sbb
mov
cmps
xchg
add
imul
dec
in
pop
sbb
inc
sbb
jo
nop
daa
and
pop
dec
adc
sub
in
push
pop
or
xchg
fimul
fcomip
jmp
in
lods
stos
lahf
or
stos
(bad)
loop
pop
daa
add
(bad)
jp
inc
and
jecxz
lods
xor
mov
xchg
pop
fwait
mov
xchg
hlt
(bad)
fwait
pop
mov
(bad)
retf
retf
pop
or
dec
fldenv
xor
scas
dec
outs
jmp
addr16
mov
shl
pop
xor
mov
andps
ins
imul
ret
or
jb
adc
nop
aad
mov
cli
jo
dec
dec
adc
cmps
loopne
add
cmp
out
aad
repz
std
inc
adc
aad
(bad)
clc
call
imul
ret
mov
jmp
and
push
std
xor
imul
xlat
jge
aam
fsubr
mov
xchg
aaa
cmp
das
pop
aad
fdiv
leave
cmp
ds
and
inc
scas
cld
mov
addr16
ficomp
mov
jl
xchg
xor
out
jecxz
jge
iret
xor
adc
jb
fdivr
or
mov
ror
ins
fwait
arpl
fdivr
loopne
bound
pop
sbb
out
pop
and
mov
dec
clc
sub
xor
xor
pushf
mov
xchg
mov
mov
mov
and
dec
sub
aas
test
jno
test
inc
sub
mov
inc
sbb
pop
mov
mov
js
fdivr
outs
inc
jne
scas
jp
jno
cmp
jns
pop
call
jmp
test
inc
xor
sub
imul
shl
jp
into
fnstenv
mov
sub
xchg
rol
stos
xchg
push
and
fadd
sbb
pop
rcl
cmp
pop
imul
scas
push
cmps
inc
adc
mov
push
jb
push
cdq
inc
push
stc
repnz
addr16
cdq
sbb
add
adc
addr16
xchg
mov
enter
mov
imul
mov
inc
inc
jle
test
jno
jp
pop
test
inc
sar
in
push
jne
imul
jae
pop
pop
stos
aam
and
adc
cld
test
fsubr
xor
xlat
stc
movs
jne
sub
outs
jo
cmp
and
mov
pop
lock
mov
cwde
jmp
pop
jbe
das
xchg
mov
repnz
out
inc
add
pop
adc
and
jge
bound
fsubrp
push
mov
or
pusha
lock
ret
pusha
xor
ins
mov
adc
int
xchg
pop
xor
push
test
mov
mov
cmp
aam
loopne
popf
cmc
leave
add
adc
stos
ds
je
test
in
lds
movs
mov
not
popa
in
inc
mov
lea
cmps
(bad)
sbb
push
call
or
jne
sub
out
sub
xchg
add
pusha
jae
lods
mov
push
movs
adc
movs
inc
adc
or
jle
nop
xor
adc
add
sub
mov
pusha
mov
pusha
mov
das
mov
stos
and
in
fisubr
or
out
pop
shl
adc
pop
cmp
out
test
imul
jg
test
in
int3
and
pusha
aam
xchg
pop
dec
adc
(bad)
sti
sub
add
push
stos
or
xor
xchg
shl
push
mov
loopne
jno
xchg
and
jno
sar
jge
scas
stos
movs
push
push
call
cli
and
out
lods
xchg
inc
jmp
into
(bad)
movs
(bad)
aaa
dec
pop
int3
adc
push
mov
push
or
inc
sbb
xor
in
clc
xor
fwait
mov
test
push
mov
int3
push
dec
lds
loop
push
call
enter
mov
jg
popa
dec
mov
sbb
xchg
(bad)
xchg
sub
aaa
sbb
imul
inc
push
and
mov
mov
(bad)
icebp
(bad)
mov
jmp
fistp
in
daa
add
out
sbb
jecxz
and
mov
xor
ret
fstp
dec
ss
jne
iret
sahf
sub
popa
sub
cwde
pop
arpl
pushf
ja
fsub
cmp
iret
fwait
xchg
icebp
inc
sbb
lds
push
mov
aaa
pop
popf
retf
jo
sbb
and
cmp
or
mov
aas
repnz
add
pop
adc
loopne
mov
add
js
sbb
adc
sub
cmp
xor
mov
sbb
push
dec
cmp
loop
idiv
mov
fwait
inc
xor
test
dec
pop
enter
lds
cmp
cmp
addr16
jle
out
cld
out
mov
inc
test
aaa
or
mov
popf
add
leave
nop
xchg
add
sti
enter
stos
cmp
ds
ds
lea
cmp
cmc
mov
pmovmskb
xlat
sub
jnp
dec
push
shl
add
push
(bad)
push
push
imul
aaa
mov
aam
addr16
or
pop
ret
sar
cmp
sub
leave
lods
jle
fist
sar
fs
mov
dec
jle
dec
fcmovnu
add
inc
imul
cld
data16
cs
adc
adc
fwait
or
mov
push
mov
pop
enter
xlat
popa
ins
clc
fs
div
fbld
popa
mov
mov
push
sbb
scas
in
int3
pusha
dec
and
jno
mov
push
(bad)
xchg
ja
jle
mov
dec
neg
sti
arpl
mov
out
test
mov
(bad)
iret
inc
mov
dec
dec
outs
(bad)
lea
push
mov
push
xor
(bad)
pop
mov
xor
push
repnz
(bad)
idiv
test
lock
push
fs
and
xor
sub
push
push
cld
not
adc
sbb
dec
pop
in
scas
sbb
test
and
sub
ret
mov
(bad)
sbb
movs
mov
shl
rol
mov
cmp
inc
sub
sub
popf
enter
rcl
imul
sub
ds
pop
push
pop
loopne
mov
sti
in
iret
aam
fisub
jns
and
retf
out
lds
ja
cmp
and
dec
mov
dec
shl
sbb
dec
dec
pop
sahf
dec
pusha
inc
add
fbstp
repz
(bad)
imul
push
pand
dec
shr
popf
jmp
xchg
imul
mov
bound
arpl
push
mov
xchg
cmp
rol
dec
(bad)
sbb
inc
lods
std
xchg
mov
jl
sbb
sbb
out
xchg
pop
ins
jg
fxch
not
fild
ud0
test
mov
popa
cmp
out
ins
in
in
(bad)
into
xor
movs
add
sbb
sbb
push
pop
fst
pop
fsubp
adc
adc
inc
imul
mov
rcr
icebp
iret
ror
sbb
jge
cwde
fst
movs
cmp
cmps
xor
add
push
xor
push
inc
pop
mov
cmp
push
sbb
and
jae
mov
call
neg
and
mov
js
(bad)
nop
repz
rol
das
inc
mov
retf
xchg
inc
retf
fs
int3
xchg
adc
or
sti
push
(bad)
pop
inc
cmc
xchg
retf
pop
sbb
jbe
lods
push
fs
dec
mov
adc
int3
or
repnz
fidivr
inc
push
fwait
cli
mov
push
cmp
enter
dec
sub
pmaddwd
add
push
mov
shl
int3
mov
push
loopne
lea
cdq
outs
push
pop
std
repz
and
adc
sahf
icebp
sbb
retf
pop
sahf
mov
inc
lahf
pop
lock
pop
or
push
into
arpl
fidivr
inc
sub
shld
mov
xor
cmc
cli
test
data16
inc
jae
outs
push
movs
sub
imul
add
mov
and
std
jmp
push
stc
ins
push
hlt
inc
mov
mov
std
bound
ins
test
movs
xor
jl
sbb
xor
xor
push
mov
ret
adc
cld
aaa
adc
lds
mov
into
dec
push
out
mov
mov
adc
outs
jae
inc
and
into
add
lock
lea
pop
adc
addr16
xor
icebp
data16
and
mov
neg
enter
push
in
adc
ret
sub
mov
mov
popa
sub
(bad)
dec
inc
cwde
outs
jmp
sub
jp
call
cmp
adc
add
data16
das
adc
and
mov
or
es
out
mov
inc
ret
popa
imul
pusha
aad
sub
ins
jmp
xor
xchg
daa
sbb
jnp
sahf
test
jecxz
das
pop
mov
mov
mov
in
fadd
xchg
movs
out
popf
mov
(bad)
cmc
loopne
pop
add
xchg
xchg
and
adc
ds
retf
mov
mov
(bad)
outs
(bad)
sbb
fwait
scas
int3
or
dec
mov
out
adc
jp
mov
cs
push
jo
xchg
(bad)
push
ss
pop
add
xchg
cmps
inc
push
ins
dec
add
or
fisttp
fcomp
arpl
push
jne
mov
enter
dec
sbb
pusha
or
fiadd
pop
fs
jno
mov
in
call
in
lock
cmps
mov
push
jp
jecxz
ret
pop
inc
das
inc
aam
popa
jae
rcr
lahf
test
(bad)
inc
sub
pop
ja
cli
adc
outs
imul
daa
add
test
outs
mov
jne
sub
mov
cld
int
not
cmp
rcr
in
outs
imul
jo
das
stc
sbb
inc
xchg
enter
dec
xor
nop
daa
pop
pushf
or
inc
pop
fs
jo
xor
lods
pop
fld
int
mov
dec
cwde
(bad)
push
retf
pop
add
(bad)
add
and
mov
aad
dec
mov
test
mov
shl
mov
mov
jne
dec
pop
fld
aaa
and
ins
pushf
inc
push
mov
sbb
test
mov
xchg
jno
mov
in
pop
mov
repz
pop
mov
enter
popf
jp
mov
adc
ss
xor
push
pop
inc
mov
outs
fnsave
les
push
nop
cmp
push
ss
stos
xor
aam
pop
cmp
(bad)
mov
and
cmp
fwait
jae
mov
adc
cmp
bound
xor
hlt
xor
push
inc
inc
std
mov
inc
pop
push
mov
or
(bad)
lds
cs
pusha
and
(bad)
or
out
test
retf
std
mov
adc
or
xchg
hlt
daa
imul
pop
fmulp
xchg
inc
push
adc
mov
das
cmc
add
clc
pop
jnp
pop
fldenv
ret
lea
sbb
mov
dec
stos
pop
pop
sub
pop
sub
out
aaa
mov
loope
and
shl
dec
push
outs
mov
fdivrp
dec
lods
pop
cmps
mov
adc
adc
pop
(bad)
pop
xchg
aad
adc
fnstsw
nop
out
inc
pop
repnz
xor
cmp
arpl
movs
xor
out
aaa
test
cmp
mov
idiv
push
lods
daa
mov
jbe
cs
xchg
int3
mov
xchg
loope
jmp
js
jecxz
ins
in
pop
inc
mov
push
and
movs
xor
push
mov
sub
lods
test
into
inc
xor
mov
fcomp
mov
lods
lods
cmp
cmps
sbb
int3
hlt
push
add
loop
pop
mov
(bad)
leave
call
push
pop
adc
sub
add
xchg
cld
mov
cmp
or
clc
shl
xchg
sub
xor
mov
push
jecxz
fwait
std
push
stos
ja
add
sahf
cmp
test
sub
sbb
jg
stos
push
mov
fsubr
cs
aaa
push
add
sahf
sub
inc
shl
fadd
xchg
ret
dec
icebp
in
or
dec
(bad)
add
mov
xchg
mov
mov
mov
outs
inc
and
stos
mov
or
push
les
pop
mov
xor
or
enter
add
sub
sti
cld
cli
imul
fstp
lahf
jno
inc
xor
inc
xor
mov
adc
stc
(bad)
xchg
mov
ins
and
imul
fisubr
inc
inc
mov
out
shl
and
xlat
xor
sbb
pop
mov
pop
push
cmp
inc
pop
ins
popa
fmul
std
push
js
(bad)
into
add
js
jp
dec
shl
xchg
pop
js
retf
js
sti
push
(bad)
cmp
dec
mov
cmp
pop
dec
jae
mov
push
(bad)
(bad)
in
loope
test
add
fidivr
ins
bswap
pop
retf
fsub
mov
mov
sbb
nop
cmp
sbb
adc
bound
mov
sbb
lock
push
jg
xor
pop
les
hlt
imul
inc
add
ins
cmp
pop
push
mov
mov
inc
shr
and
in
and
stos
or
pop
sub
mov
xchg
int
int3
sbb
mov
sub
sbb
jnp
or
jmp
jbe
pop
ins
cmps
mov
sar
retf
jle
or
inc
xor
jl
pop
add
jmp
stos
scas
nop
fbstp
mov
fmulp
and
stos
out
xchg
fsubrp
retf
rcr
adc
call
adc
jg
repz
lds
stc
gs
ds
aad
mov
lds
mov
ins
sub
mov
mov
sub
js
cmp
xor
lods
fidiv
sahf
adc
fwait
in
sbb
dec
dec
push
stos
fld
fnsetpm(287
pop
pop
add
add
js
loope
sub
call
arpl
dec
ret
push
sbb
jge
(bad)
dec
push
rol
ror
push
out
shl
(bad)
jbe
pushf
hlt
test
pop
sbb
ins
mov
jo
in
imul
int
push
or
pop
push
or
add
lods
mov
(bad)
cmp
ror
rol
cmp
daa
inc
mov
retf
or
mov
push
mov
dec
aas
pop
xor
movs
mov
ret
dec
pop
xchg
or
clc
popf
xchg
pop
cwde
dec
div
in
xor
int3
je
push
bound
xchg
dec
mov
add
(bad)
shl
in
ret
push
dec
es
jnp
push
mov
jnp
enter
adc
jl
jmp
xor
mov
leave
jae
cmp
add
mov
adc
pop
outs
add
push
ins
sub
mov
gs
push
push
hlt
sbb
cmp
stos
lods
inc
adc
int3
jnp
sub
test
cdq
(bad)
call
jle
cli
xor
and
or
mov
jmp
or
movs
mov
push
inc
sahf
ins
add
mov
dec
shl
test
pop
std
mov
aad
or
adc
cmp
inc
mov
push
fnsave
and
or
mov
ja
out
pop
fisttp
cs
mov
add
pop
xchg
repz
push
and
lods
lea
aaa
or
adc
adc
test
cs
xchg
and
sub
test
(bad)
(bad)
mov
push
movs
leave
fisub
js
test
or
jmp
xchg
xchg
cli
sbb
dec
jae
inc
mov
mov
dec
stos
daa
cmp
jp
das
xor
mov
(bad)
movs
jp
adc
cmp
arpl
jmp
mov
mov
inc
icebp
xor
mov
push
add
call
jnp
inc
ror
outs
ret
test
repnz
jns
in
lods
cdq
fild
fwait
icebp
idiv
or
mov
cmps
jecxz
cmp
test
xchg
mov
das
gs
push
mov
or
mov
inc
or
and
dec
icebp
mov
fsubr
and
add
mov
hlt
aad
clc
push
mov
cmc
bound
mov
inc
xchg
sbb
test
aaa
mov
fisttp
pop
es
call
addr16
fimul
or
or
outs
test
or
jg
cwde
adc
cmp
repz
fisttp
jp
rol
stos
mov
(bad)
mov
mov
mov
daa
inc
out
mov
xor
lods
daa
ror
mov
ins
retf
cmp
mov
mov
fnstenv
sbb
adc
xchg
mov
ror
mov
xchg
test
shl
rol
pushf
sbb
or
cmp
mov
adc
add
xlat
add
popf
fneni(8087
pop
jo
cmps
imul
iret
inc
xchg
dec
pop
sbb
mov
and
pop
sub
pop
(bad)
xor
mov
daa
add
push
xor
xor
sbb
add
icebp
ror
mov
sub
lea
retf
inc
jae
sbb
cmp
je
addr16
ins
mov
inc
rcr
ret
and
retf
into
sub
and
out
clc
jo
adc
loopne
inc
lds
push
adc
ret
mov
or
xchg
pop
aas
aaa
cs
sub
xor
cmp
inc
push
stc
push
test
and
and
cmc
shl
jno
cs
adc
adc
cmps
stc
out
outs
std
ror
and
pop
outs
into
mov
mov
neg
loop
mov
bound
mov
(bad)
mov
(bad)
jne
dec
(bad)
or
dec
pop
stc
cmp
push
imul
and
stos
(bad)
fld
inc
dec
inc
(bad)
stos
(bad)
jmp
or
sub
mov
sub
mov
adc
aas
in
adc
leave
push
icebp
cwde
js
dec
xor
ins
inc
call
scas
push
cmp
xor
shr
retf
xor
movs
retf
mov
cmp
push
(bad)
sbb
xchg
jne
adc
fwait
jo
retf
retf
push
add
lods
scas
movs
ret
ins
mov
push
cli
out
cli
xor
add
cmp
out
mov
inc
add
icebp
(bad)
or
xchg
push
pop
xchg
std
dec
arpl
lock
sub
pop
retf
inc
push
mov
mov
loop
dec
cli
cmps
or
cmp
and
jmp
ret
ror
push
cmp
loope
popf
add
xor
mov
div
mov
dec
sub
sub
fnstcw
and
xchg
ret
lahf
(bad)
std
cdq
mov
ja
test
jmp
lock
daa
cs
mov
sub
pushf
or
or
outs
out
add
pop
or
add
mov
pop
cmps
add
push
cmp
enter
ret
xlat
dec
jg
not
pop
adc
dec
cmp
sub
xlat
mov
xor
repz
(bad)
ja
push
inc
or
nop
sub
and
pop
jecxz
mov
pop
pop
out
or
adc
fs
shr
inc
leave
xchg
xor
rol
je
idiv
sub
clc
cmc
mov
xor
cmp
ret
out
leave
data16
sbb
enter
xchg
push
pusha
xor
pop
ret
cmps
ror
and
jmp
mov
les
dec
test
xchg
dec
and
mov
das
shl
in
or
dec
and
cmps
and
loopne
xchg
cs
fs
xchg
(bad)
and
dec
lock
fdivrp
mov
fs
dec
test
in
mov
stc
rcr
xor
ins
xor
in
inc
mov
les
mov
cmp
lock
push
int
lods
and
sbb
sbb
push
out
fs
xor
fwait
cmp
mov
jns
xchg
inc
rcl
or
imul
repnz
icebp
cwde
or
fsubp
cmps
inc
cmp
rol
push
das
jg
fsub
pop
gs
fist
jmp
pop
push
mov
or
add
xchg
aaa
pushf
push
jnp
fimul
inc
cmp
sti
push
xchg
mov
jbe
sbb
out
test
(bad)
out
jae
sbb
xor
and
loop
loopne
sub
jmp
add
sti
inc
nop
add
jo
fsub
adc
(bad)
dec
popa
sti
bound
(bad)
aaa
xchg
daa
mov
mov
outs
sbb
jns
mov
clc
mov
mov
push
cmp
addr16
fs
mov
or
test
pusha
inc
scas
and
scas
pop
and
inc
mov
stc
push
call
mov
enter
arpl
cmps
add
aaa
pusha
xchg
mov
jp
pop
nop
lods
sub
mov
setae
cmp
jno
stos
jp
mov
jle
adc
adc
ins
test
idiv
sahf
jmp
gs
push
fldcw
sbb
test
into
and
push
loop
push
mov
cmc
mov
imul
mov
inc
mov
add
adc
dec
jle
(bad)
dec
ja
xchg
mov
add
cmp
test
js
icebp
jg
call
rcl
maxps
add
cmp
mov
shl
mov
daa
retf
scas
sqrtps
dec
cld
jl
aas
fdivr
repz
inc
hlt
jl
(bad)
pop
inc
mov
dec
adc
and
ja
imul
xchg
cmps
gs
xchg
xchg
shl
push
inc
loop
inc
cmp
add
repz
daa
dec
dec
add
inc
fwait
in
or
lods
in
mov
dec
dec
push
(bad)
push
imul
and
adc
lahf
and
ror
(bad)
pop
xchg
fcom
and
push
lahf
imul
test
test
jmp
mov
movntq
jmp
test
or
or
pop
rol
mov
fild
pushf
xchg
xchg
mov
jo
jbe
(bad)
sub
mov
pop
jnp
xchg
ficomp
jle
xor
cli
jmp
cmp
in
and
cmps
scas
retf
inc
lock
mov
mov
xchg
shl
pop
cmp
xlat
xchg
(bad)
pop
lea
or
mov
push
and
jp
jo
xchg
push
retf
lahf
(bad)
jne
sub
sbb
fnstenv
in
dec
xchg
sbb
ret
movs
mov
push
adc
add
jmp
jne
test
push
(bad)
imul
jnp
dec
jnp
in
ror
jo
test
loope
mov
frstor
aad
(bad)
and
jns
in
jecxz
stos
vcvtps2pd
sub
(bad)
cmps
aad
out
ds
pop
jno
xchg
fucomip
cmp
dec
pop
push
invd
xor
pop
jg
add
mov
movs
imul
loopne
cmp
or
fidivr
adc
fs
lea
stos
lock
mov
jae
aad
pop
rcr
es
mov
inc
aaa
outs
cmp
and
fwait
pop
mov
inc
mov
push
ins
call
pop
out
sbb
fnsave
dec
pusha
sbb
add
daa
pop
in
or
(bad)
sbb
jmp
fcom
fdiv
outs
jmp
jne
and
xchg
jb
hlt
les
jae
jmp
inc
lds
pushf
popa
call
fidiv
mov
xor
cmps
stos
shr
sub
mov
int
cmp
sbb
out
or
in
test
inc
pushf
scas
pop
mov
mov
fs
jl
xchg
adc
leave
or
and
test
dec
sbb
aaa
fwait
out
mov
inc
mov
jns
or
out
mov
fld
jmp
adc
jb
add
cwde
cmp
push
inc
jg
dec
sub
xchg
retf
cld
inc
cmp
fs
cwde
xchg
cmps
mov
cmp
test
mov
add
not
xchg
add
sub
jo
sub
rol
in
out
add
pushf
in
mov
mov
fimul
dec
sbb
enter
(bad)
jns
inc
inc
mov
sbb
in
pop
xchg
adc
cmc
pop
aam
aad
add
in
jg
mov
cmp
xor
int
(bad)
mov
cld
fld
ja
mov
push
jns
stos
lahf
loop
or
loope
xchg
push
push
aaa
push
jno
or
mov
adc
cmp
movs
mov
cmp
pop
pusha
sub
lock
fcmovb
(bad)
xchg
dec
sub
mov
jmp
popa
adc
xor
adc
dec
hlt
call
scas
popf
add
aam
add
mul
dec
xchg
les
mov
sbb
ins
(bad)
jne
pop
enter
cwde
out
jecxz
push
fcomip
push
inc
and
and
jecxz
cmp
cmps
popf
cmp
dec
or
out
add
xor
retf
pop
lock
push
aaa
jns
push
aaa
jle
and
cmp
into
or
push
lock
xor
mov
(bad)
mov
inc
add
bound
daa
cmp
dec
aam
stc
ins
cs
mov
pushf
in
dec
mov
jo
cmp
leave
hlt
xchg
xor
dec
test
jbe
fdivp
xor
dec
jnp
repnz
adc
xchg
cmp
jge
sub
not
add
jmp
popf
fnsave
or
jbe
jmp
push
sub
fadd
fcmovb
push
lahf
sub
pop
sbb
mov
mov
or
adc
in
daa
xor
mov
jmp
cwde
push
adc
push
addr16
ins
adc
cwde
jnp
jo
mov
sti
sti
mov
mov
std
and
and
or
enter
or
dec
fs
mov
loopne
or
xchg
ret
pop
and
pop
jbe
cwde
and
lock
jmp
pop
test
ret
mov
outs
mov
mov
icebp
and
aad
addr16
jp
xor
aaa
sub
mov
sbb
stos
add
mov
repnz
xor
sub
mul
je
push
or
jne
in
cmc
dec
dec
fs
outs
inc
cli
mov
mov
cdq
rcl
mov
ret
mov
mov
sub
popa
mov
mov
pusha
sub
ds
mov
adc
cmp
loopne
imul
or
nop
sahf
mov
adc
push
pop
or
cmp
mov
lods
jmp
adc
and
inc
(bad)
cs
sbb
jge
scas
dec
fld
xchg
inc
lea
lahf
inc
movs
lock
jae
or
add
xchg
mov
(bad)
xchg
xor
mov
rcr
push
pop
stos
push
scas
test
repz
loopne
xchg
jae
test
push
test
rcl
dec
aaa
in
sahf
shl
mov
mov
xchg
dec
fs
pop
int3
popf
loopne
bound
call
mov
imul
sub
sbb
cmp
out
aam
stos
jp
test
enter
sub
jecxz
and
pop
lahf
and
fcmovbe
sar
lahf
xchg
and
xor
sbb
jp
cmp
idiv
mov
mov
push
(bad)
mov
jp
loope
and
ret
xchg
dec
mov
test
mov
xchg
fst
les
inc
(bad)
mov
jmp
jbe
cwde
jbe
stc
fimul
arpl
mov
jp
jmp
xchg
dec
ret
or
and
aad
xlat
enter
or
jne
push
xchg
push
int3
xchg
fst
xchg
sub
push
and
sbb
imul
sbb
push
push
movs
mov
nop
aad
sbb
shl
pop
xchg
jns
cli
dec
std
push
xor
fistp
jae
les
or
mov
fwait
push
fs
push
push
cmp
mov
mov
mov
fwait
push
cmp
in
add
test
cld
adc
and
js
mov
inc
mov
(bad)
out
mov
jecxz
fs
sti
xor
ror
test
stos
icebp
daa
cmp
mov
and
sbb
mov
ja
push
(bad)
xchg
fisubr
ret
(bad)
jmp
jnp
bound
mov
xor
inc
adc
cmp
ret
setp
call
jl
xchg
int3
and
and
sub
(bad)
cmps
out
jno
into
rol
jae
leave
repnz
xor
cs
pushf
sbb
shl
jo
(bad)
(bad)
inc
ins
xchg
xchg
jno
sub
or
jg
js
jg
cmps
push
shl
jo
xor
les
mov
mov
add
rcl
pop
into
cwde
scas
xchg
cmps
add
cld
ja
inc
enter
push
(bad)
mov
mov
in
mov
cld
and
hlt
jp
inc
jl
jmp
in
push
subps
xor
sub
jnp
dec
mov
sub
jns
lods
pusha
inc
mov
dec
pop
call
pop
cld
stc
dec
popa
clc
dec
sub
mov
gs
inc
(bad)
in
cmp
push
je
arpl
into
bound
dec
and
out
jb
lahf
sbb
je
das
jmp
fwait
lea
pop
mov
or
or
cmp
les
jns
out
xchg
jmp
rol
adc
inc
clc
jns
inc
fnstsw
xchg
loop
push
outs
setno
sub
in
inc
ret
adc
adc
jp
push
mov
push
shl
in
xor
shl
mov
call
mov
enter
xchg
out
inc
xchg
xchg
xor
sub
push
outs
(bad)
mov
test
add
lahf
jmp
into
push
out
cdq
in
inc
and
gs
pusha
xor
ds
dec
sub
repnz
es
sbb
dec
ret
int3
xor
xchg
cmp
pop
mov
push
nop
mov
cmp
inc
(bad)
sbb
mov
jnp
mov
mov
push
std
push
or
ret
call
repz
nop
daa
pop
(bad)
cld
rol
or
push
xchg
adc
mov
sbb
(bad)
retf
mov
mov
pop
loop
jno
push
pusha
iret
sbb
adc
(bad)
(bad)
jns
(bad)
or
mov
fld
mov
push
push
jl
mov
mul
inc
and
add
pop
add
adc
retf
fisttp
xor
mov
ins
ficomp
test
mov
inc
xchg
loopne
pop
aad
imul
cmp
ret
ror
and
cmps
mov
test
add
jno
stos
(bad)
into
retf
jo
inc
and
jmp
mov
xchg
mov
out
dec
(bad)
sub
mov
sub
mov
js
lahf
inc
cli
adc
jno
in
and
sbb
add
jmp
mov
push
clc
(bad)
mov
call
clc
aad
mov
out
imul
nop
cmp
addr16
sub
std
retf
rol
call
test
mov
cmc
sub
push
inc
mov
xchg
sahf
hlt
dec
jp
mov
shl
shr
inc
pop
cmp
mov
and
inc
add
movs
ins
add
fbstp
or
add
(bad)
and
pusha
lods
gs
sbb
mov
or
adc
fstp
sub
sub
or
inc
(bad)
retf
jne
jecxz
mov
repz
or
js
inc
jns
std
xchg
adc
out
pop
push
mov
jmp
xor
mov
or
ret
jnp
push
cwde
add
cmps
jo
jns
sbb
popf
out
jecxz
dec
popf
jecxz
sbb
xor
and
push
les
pop
fld
hlt
dec
sbb
mov
out
sbb
nop
push
js
sub
mov
xchg
outs
jne
fiadd
shr
cmc
mov
rcr
add
add
xchg
or
add
jbe
dec
jg
cmc
iret
jo
nop
jno
rcl
repnz
and
cmp
adc
sbb
push
mov
push
les
int3
cmp
lods
cs
pop
adc
stos
push
cli
mov
in
mov
cdq
mov
xor
ficomp
bound
pop
adc
inc
pop
jae
test
gs
sub
into
call
cmps
jle
xchg
je
ret
add
shl
in
mov
xchg
and
pop
sbb
push
scas
arpl
aaa
push
mov
push
mov
sub
repz
adc
push
jns
ror
xchg
rol
add
mov
in
(bad)
xlat
fnstcw
cmp
jne
mov
mov
mov
push
fcom
add
mov
das
xor
outs
sbb
jge
jae
call
test
xchg
add
push
lea
sbb
inc
push
cmp
inc
sub
gs
mov
mov
dec
cmc
dec
cwde
lock
iret
mov
mov
mov
clc
and
push
cmp
sbb
dec
mov
pop
loop
call
mov
and
cs
mov
pop
outs
iret
das
ja
out
shl
test
shr
dec
pop
jno
cmp
mov
mov
adc
call
or
dec
sub
sub
lods
push
push
pop
add
sub
pop
in
ja
jns
push
dec
repz
in
and
ds
cwde
dec
xchg
jb
and
pop
or
int
mov
and
mov
jne
ret
mov
jbe
fsubp
push
outs
pop
inc
div
jnp
repz
cmp
sbb
xchg
xor
push
lock
push
adc
cmp
push
icebp
xor
popf
cmp
sbb
(bad)
mov
jl
adc
mov
popa
stos
push
or
call
lds
and
int
sbb
xor
xchg
jle
loope
sub
sub
int
in
or
scas
leave
push
leave
lahf
stc
inc
mov
fwait
xor
popf
ret
nop
movs
sub
adc
xor
lock
es
inc
mov
lea
or
retf
sub
sbb
xor
jmp
xlat
xchg
jg
int3
pop
cmp
(bad)
and
aas
push
mov
inc
mov
cs
ss
iret
cmp
cmp
aam
rcl
jo
lods
sbb
shl
cld
clc
jg
(bad)
lock
movs
cmps
out
pusha
sub
cmp
sbb
rcl
push
mov
adc
mov
mov
(bad)
ret
nop
mov
xor
cs
or
dec
inc
cmp
dec
jae
push
stos
inc
aad
ins
add
movs
out
call
pop
lahf
inc
mov
rcl
rcr
inc
pushf
push
add
shr
(bad)
outs
pop
pop
(bad)
adc
inc
inc
nop
cli
and
dec
adc
idiv
dec
cwde
fiadd
retf
xor
mov
popa
mov
or
add
mov
fidiv
xor
in
pusha
mov
sti
or
xor
or
test
and
and
push
jns
mov
jo
sbb
push
add
push
(bad)
inc
test
xchg
sub
jbe
pop
ror
lock
out
shl
xchg
pop
cmp
daa
imul
push
pop
mov
or
or
mov
xchg
jle
into
out
mov
sbb
sub
addr16
cmp
and
and
cmp
inc
cs
icebp
hlt
add
mov
jmp
dec
fisubr
jmp
test
in
loope
stos
mov
in
inc
push
lea
sub
ror
ds
in
(bad)
sbb
xchg
inc
fstp
xor
sbb
push
add
pop
mov
repz
fstp
jnp
inc
jae
or
and
xchg
in
cs
fdiv
push
lock
xor
pop
inc
pop
not
ja
sar
enter
(bad)
push
test
fidivr
jno
or
add
(bad)
enter
mov
test
scas
lods
sub
test
das
dec
fmul
xchg
mov
push
mov
or
outs
adc
xchg
repz
test
sub
inc
pushf
and
test
adc
or
xor
add
push
sbb
mov
and
clc
push
add
xor
inc
and
mov
in
xor
jp
enter
jns
(bad)
sub
push
inc
cmp
push
std
pushf
dec
dec
cmp
(bad)
xor
stos
mov
push
adc
aas
dec
das
pusha
mov
push
cmp
and
(bad)
imul
dec
xor
call
push
mov
fdecstp
not
pop
call
cmp
add
cmp
mov
retf
pop
mov
pushf
popf
std
pushf
inc
dec
or
add
jne
fstp
dec
(bad)
xor
test
inc
pop
clc
std
inc
mov
sbb
div
ins
out
cmp
stos
push
cwde
addr16
lahf
dec
(bad)
cmps
pop
adc
adc
cli
xchg
(bad)
nop
sub
xchg
ss
dec
and
pop
bound
push
aam
cld
mov
rcl
push
jns
mov
and
pop
add
xchg
xor
mov
loopne
ja
xchg
add
test
ret
jmp
mov
mov
mov
adc
jmp
cmps
fisubr
pop
(bad)
imul
fwait
sub
cmp
add
rcl
iret
fs
lahf
xchg
popf
repz
enter
rcr
in
and
std
or
push
stc
xchg
cmp
add
xor
outs
sti
push
aas
mul
loop
xchg
imul
pop
jle
mov
jno
mov
adc
mov
dec
mov
jns
and
lods
sbb
fdivp
xor
inc
add
int
(bad)
jge
int3
lahf
inc
cld
and
mov
xor
mov
sub
push
out
mov
cli
sahf
ret
mov
(bad)
push
mov
xchg
sub
jns
pop
and
(bad)
shl
jg
es
pop
add
adc
outs
(bad)
mov
push
add
dec
sbb
mov
cmp
out
outs
in
jae
ins
mov
ret
jmp
add
ror
push
(bad)
jbe
mov
or
neg
(bad)
or
mov
push
out
sbb
js
mov
mov
and
sub
sti
(bad)
lock
cmp
pop
mov
pop
mov
fsubr
push
jb
nop
xor
jmp
cld
mov
sub
push
xor
inc
aas
xchg
dec
(bad)
sbb
les
jne
inc
pusha
sub
clc
scas
scas
cmp
and
xchg
mov
movs
pop
lods
call
aas
sahf
enter
dec
in
push
mov
dec
les
mov
lods
sub
jle
in
xchg
push
cli
adc
(bad)
fs
xchg
xchg
push
retf
aam
or
jns
push
adc
jle
jne
cmp
int3
fdivr
call
mov
out
loope
mov
(bad)
sar
and
sub
pop
ins
scas
jecxz
movs
mov
ins
data16
test
and
push
aad
ja
pop
sub
cmps
mov
dec
pop
push
ret
ja
aas
test
xor
lock
push
into
data16
xor
mov
dec
je
clc
xchg
jle
xor
pop
sbb
mul
retf
xor
movs
in
shl
sub
pop
pop
inc
push
lods
inc
add
cmps
data16
mov
std
adc
int3
dec
mov
(bad)
and
pop
mov
mov
cmp
mov
push
adc
ins
mov
out
mov
stos
xlat
pop
jo
into
sti
add
sbb
cmp
xchg
add
sbb
(bad)
into
(bad)
or
and
mov
rcr
lods
test
or
cs
inc
out
fwait
or
mov
cmp
imul
and
sbb
jo
xor
add
xchg
js
loopne
jo
cs
push
adc
(bad)
cmp
bound
dec
in
sahf
mov
out
push
dec
mov
mov
loop
dec
ss
arpl
cli
jle
sub
push
dec
mov
cwde
div
jge
test
pop
dec
out
jmp
sbb
lods
fistp
in
inc
or
fisub
mov
pop
push
sbb
out
jnp
cmc
shl
and
push
mov
out
cli
out
sub
adc
jmp
sub
xchg
fnstsw
(bad)
stos
fadd
mov
loope
add
leave
jae
xor
or
fs
sar
mov
mov
popf
xor
call
adc
jmp
cwde
dec
test
shr
icebp
jg
fidiv
push
pop
mov
mov
or
push
fnstsw
aam
xchg
jmp
push
mov
sbb
aad
jb
popf
mov
pop
lahf
hlt
xor
or
or
shr
and
sub
push
xchg
test
sub
jbe
repnz
outs
test
mov
jecxz
add
fstp
xor
xor
fnstsw
mov
cwde
dec
shl
and
fcom
adc
dec
cmp
ins
loop
lds
adc
cmps
(bad)
cmp
loop
xor
mov
dec
movs
bound
std
pop
pop
inc
std
jmp
inc
addr16
adc
shl
fsub
pop
mov
mov
retf
jmp
push
ficom
mov
or
xchg
inc
jne
ins
sbb
stos
mov
sbb
or
stc
out
out
mov
jns
xchg
int
xchg
fnstenv
adc
(bad)
rcr
jnp
jnp
or
shl
mov
dec
pop
cmp
push
push
sbb
xchg
or
pop
fmul
mov
push
aam
dec
les
adc
cwde
or
loope
ds
add
les
or
test
jl
mov
add
or
xor
jp
xchg
mov
mov
jle
das
cmp
add
jmp
dec
push
dec
xor
and
push
jmp
push
or
or
push
push
test
sub
movs
cs
and
xchg
lds
lock
arpl
mov
add
pop
push
push
lea
add
inc
mov
jle
inc
mov
xchg
scas
imul
inc
repnz
loopne
fs
lds
jb
std
repz
das
push
popa
jne
popa
ja
push
cwde
int3
ins
push
jo
xchg
or
repz
mov
call
jne
ja
or
mov
test
sar
sub
out
out
mov
sar
out
ror
movs
xor
pop
mov
mov
retf
fcomp
pop
jbe
jg
sar
mov
sbb
lods
mov
addr16
lods
loope
lock
stos
ds
mov
test
loop
nop
mov
imul
enter
jecxz
adc
call
and
adc
adc
cs
fcomi
fdiv
inc
cmp
push
pop
ds
js
jno
fnstcw
ds
mov
push
pop
icebp
nop
jnp
xor
lock
out
mov
call
mov
or
mov
mov
jl
call
retf
adc
ss
shr
(bad)
push
adc
jmp
adc
push
shl
add
repnz
adc
fadd
mul
lahf
cdq
xor
mul
xchg
pop
dec
and
dec
scas
cmp
inc
fidivr
inc
or
in
fdiv
adc
cs
sahf
push
ins
inc
sbb
in
add
adc
popf
enter
xchg
xor
popa
outs
pop
push
add
rcr
out
popf
cmc
xchg
push
jno
addr16
les
push
stos
mov
retf
mov
pop
lar
jnp
les
inc
and
mov
fidiv
add
pop
sub
inc
loop
and
inc
mov
push
mov
(bad)
jl
mov
pop
push
mov
xlat
pop
push
ja
dec
xor
push
fisttp
sbb
iret
ret
dec
fnstsw
push
mov
cmp
rcl
add
int3
lock
je
sti
popf
ret
aam
out
mov
out
stos
inc
mov
dec
push
movs
push
inc
(bad)
les
inc
fimul
(bad)
xchg
retf
xor
cmc
and
lds
and
xor
sub
xchg
mov
(bad)
(bad)
dec
scas
push
pop
sub
jo
and
hlt
ins
fwait
jbe
sub
push
sub
adc
into
ins
push
mov
movs
outs
into
stc
adc
loop
jp
ds
cli
dec
stos
mov
mov
clc
in
test
cdq
imul
pop
pop
loope
or
dec
cmp
mov
(bad)
into
xchg
outs
lods
fnstcw
mov
push
movs
fdiv
fiadd
jge
adc
mov
idiv
sbb
mov
mov
push
dec
push
jne
gs
adc
rcl
stos
inc
jno
frstor
add
sbb
lods
out
sub
into
dec
cld
sub
popf
cmp
inc
sub
sub
js
(bad)
pop
out
xchg
push
mov
fbld
mov
and
sbb
xor
push
xor
mov
xchg
retf
inc
(bad)
jl
scas
call
mov
inc
xor
arpl
cmp
sub
test
mov
cmc
push
sbb
and
push
cmc
inc
lahf
add
ja
mov
fidivr
pop
ins
mov
fsub
adc
inc
xchg
sub
(bad)
(bad)
xor
and
cmp
mov
adc
push
in
fwait
lods
test
push
pop
add
xor
add
repnz
sub
das
out
ja
jg
adc
ret
dec
fimul
add
fidiv
repnz
fist
mov
es
add
add
add
cmp
inc
cmp
loope
je
cs
rcl
push
add
in
fcom
cmp
cmp
dec
cmps
in
ins
sub
adc
es
mov
or
xchg
dec
sahf
push
es
test
and
cmps
enter
in
xor
sti
sbb
shl
and
sub
into
clc
pmaxsw
adc
js
fimul
inc
sub
fiadd
call
sbb
pop
pop
inc
sti
or
je
sub
movs
xor
ds
(bad)
mov
and
push
jl
mov
inc
sbb
mov
out
xchg
push
push
js
repz
out
push
aas
xor
lock
pop
pop
loope
pop
into
ins
xor
mov
retw
inc
pop
or
es
retf
sub
xchg
call
mov
xor
(bad)
cs
xchg
jp
aad
or
cld
(bad)
push
sub
enter
scas
cli
xchg
div
and
ss
pushf
adc
mov
add
aaa
sub
adc
jnp
js
aad
and
jo
inc
in
and
mov
and
(bad)
das
out
dec
(bad)
cmp
inc
outs
xchg
sub
inc
retf
push
imul
leave
adc
bound
sub
xor
mov
lds
dec
jns
jmp
fst
mov
jmp
cs
(bad)
push
or
add
test
hlt
sub
sahf
call
add
push
xchg
adc
aaa
and
(bad)
je
lea
xchg
leave
push
xchg
push
push
xor
ficomp
div
div
sbb
sub
jno
jmp
or
test
div
mov
imul
movs
add
fs
cmp
xor
cmps
mov
stos
std
out
enter
sub
jge
xor
sub
mov
sbb
lahf
jns
out
lods
jo
add
adc
mov
jg
jl
out
inc
mov
mov
pop
test
cmp
sub
jp
xchg
les
and
or
arpl
es
or
sbb
imul
scas
fild
sub
dec
inc
fs
dec
out
add
js
sub
in
call
inc
idiv
pop
lods
test
mov
push
jg
pop
repz
ins
mov
cli
push
fucomp
mov
out
ss
xchg
mov
jg
or
pop
(bad)
gs
push
mov
mov
pop
mov
and
mov
xchg
mov
stos
stos
mul
jbe
mov
mov
test
jnp
lods
jp
cdq
push
out
dec
ret
aam
and
or
mov
jle
dec
lds
idiv
mov
or
mov
jno
lods
shl
fnsave
jmp
or
jae
jmp
loopne
dec
popf
mov
and
aad
pop
or
xchg
jg
fwait
scas
ins
mov
jecxz
out
test
and
imul
cmp
mov
dec
(bad)
aas
repz
push
cmp
stos
sub
inc
dec
push
loope
rcr
outs
iret
ss
movs
inc
xor
dec
push
stc
jmp
int3
sbb
xor
pop
das
xor
je
sbb
je
stc
cmp
retf
repnz
jp
retf
and
adc
scas
pusha
add
retf
inc
aam
pop
ins
jg
sub
test
aam
xor
mov
in
xor
movs
dec
adc
loope
xchg
jle
js
xor
cmp
xchg
iret
push
lock
jbe
and
push
push
arpl
and
mov
pop
add
test
lods
lods
cmp
mov
ret
fstp
or
pop
pop
clc
mov
jge
gs
or
sbb
lods
imul
rcl
call
sahf
movs
push
test
icebp
sub
repz
mov
push
push
sbb
xchg
ins
pop
mov
adc
fcom
(bad)
shr
inc
add
nop
test
jl
xor
pop
out
inc
push
mov
mov
xor
popf
aas
iret
std
ret
retf
jae
sub
les
push
pop
in
dec
mov
test
cmp
dec
inc
dec
stc
jp
xor
or
sar
in
inc
addr16
fisttp
(bad)
fsubr
push
dec
add
pop
push
mov
xor
xor
jmp
popf
sub
daa
arpl
ins
and
jle
mov
shr
sub
pop
enter
cmove
xor
cmc
push
dec
scas
cmp
test
ins
popa
aad
jns
xchg
dec
in
fmul
out
push
setb
enter
cmp
fbld
dec
test
movs
je
pop
div
icebp
mov
mov
daa
popa
cmp
imul
xchg
mov
fild
xor
sbb
retf
ss
lea
sub
or
jl
ret
stos
sub
arpl
cmp
xor
out
push
jae
sar
fiadd
cld
into
xor
and
mov
mov
sbb
xchg
stc
mov
sub
(bad)
push
inc
daa
xchg
aad
rcr
inc
test
dec
jge
daa
cld
ja
mov
jb
imul
push
or
sub
mov
inc
(bad)
xchg
mov
call
clc
xlat
mov
sti
in
sbb
pop
and
fidivr
mov
fs
ins
cmp
pop
jg
mov
int3
lods
sbb
test
lods
mov
call
cmp
daa
adc
sbb
mov
mov
mov
sub
sub
clc
aaa
je
mov
jae
jecxz
add
lock
movs
cmc
es
loop
mov
dec
lock
(bad)
lea
cmp
lock
xchg
inc
push
dec
cmp
addr16
or
cmps
cmc
mov
mov
repz
ds
das
adc
xchg
push
adc
pop
aaa
dec
ror
sub
scas
cmp
neg
or
mov
mov
or
scas
arpl
pop
jg
lea
mov
imul
retf
aas
push
movs
in
scas
sub
pop
or
mov
std
jecxz
mov
xchg
mov
or
mov
and
int3
mov
(bad)
push
les
push
out
ror
and
nop
stos
iret
in
(bad)
push
cmp
jl
push
dec
pop
in
pop
jl
push
cmp
jmp
adc
movs
mov
fistp
mov
mov
inc
lea
loop
mov
dec
call
push
mov
ins
imul
sub
jo
shl
mov
mov
pusha
mov
xor
xor
test
pop
pushf
xchg
out
sar
mov
adc
pop
stos
and
mov
paddusb
rol
xor
push
and
push
mov
jb
not
jae
arpl
and
imul
push
movs
and
inc
jb
rcl
pop
int
dec
aad
retf
sub
out
ins
inc
(bad)
inc
push
aas
or
fs
jle
inc
cmps
jne
idiv
cs
adc
cmp
jg
adc
sub
xor
sub
test
fcom
int3
ins
sub
outs
lahf
mov
push
lods
test
mov
pop
or
fcom
sbb
scas
imul
int
int3
call
pop
add
das
pop
dec
sub
mov
pop
xchg
mov
fidivr
mov
dec
inc
call
or
adc
aad
sub
mov
jno
imul
mov
jnp
test
mov
std
fidivr
es
in
test
dec
jl
dec
fbld
sbb
ret
inc
push
jno
ret
mov
xchg
xchg
jl
add
dec
aas
popa
mov
mov
fs
(bad)
retf
(bad)
ins
ret
icebp
test
jl
xchg
push
leave
dec
push
(bad)
adc
out
(bad)
sti
sub
scas
and
js
ret
outs
fdivr
push
push
pop
retf
xchg
push
mov
pop
inc
xor
dec
xor
std
pop
neg
or
in
scas
sbb
daa
out
add
inc
and
out
pop
dec
and
add
and
sub
sub
mov
inc
mov
jg
sbb
jp
pop
inc
cmp
inc
add
sbb
inc
pop
mov
lahf
scas
(bad)
std
pop
push
fbstp
mov
sub
or
mov
jle
push
or
(bad)
loope
mov
xor
mov
das
xchg
and
or
fdivr
test
jns
pushf
bound
sub
push
cs
mov
and
test
sbb
sub
or
imul
inc
mov
ins
mov
mov
push
cmp
jg
sbb
cmc
push
test
push
jg
mov
mov
test
lods
jl
pop
das
lods
clc
cmps
aam
add
add
imul
pop
loop
adc
ficom
jbe
mov
jmp
in
jl
jbe
dec
dec
sbb
scas
add
jnp
ins
ficomp
and
add
outs
xchg
(bad)
shr
xor
dec
aas
push
lds
pop
adc
jmp
mov
push
loopne
mov
xor
lahf
scas
mov
mov
ds
xchg
lea
out
jmp
push
mov
push
test
(bad)
imul
xlat
in
aad
rol
and
sbb
mov
pop
jb
pop
or
or
in
mov
sub
add
fwait
or
cld
bound
daa
mov
mov
int3
das
pop
jo
fstp
hlt
icebp
das
push
call
pop
pop
aam
std
inc
int
icebp
sahf
cmp
or
addr16
mov
lock
mov
mov
popf
adc
mov
stos
stc
xchg
xor
(bad)
cmc
lahf
sahf
mov
xchg
lods
adc
xor
mov
mov
pop
lods
and
ret
call
jmp
and
dec
jae
pop
in
setbe
pop
call
cmp
push
pusha
in
(bad)
scas
inc
cld
pop
test
in
mov
retf
(bad)
jmp
xchg
js
adc
or
mov
addr16
adc
sbb
fdivr
cld
jmp
outs
and
mov
stos
out
or
adc
movs
ret
jecxz
rcr
and
mov
jo
fcomp
add
addr16
fwait
stos
and
push
ins
js
jnp
test
or
mov
aam
mov
xchg
mov
lds
repnz
add
xor
nop
sbb
fs
fstp
pop
adc
xchg
mov
mov
hlt
jp
push
es
mov
mov
and
mov
arpl
add
jno
dec
loop
adc
loop
sub
add
pop
mov
lods
aas
dec
ss
inc
call
inc
or
into
je
adc
xchg
sbb
xchg
fs
pop
mov
ficom
int
sbb
pop
xor
and
mov
sbb
mov
in
inc
xor
pop
cli
and
les
sub
iret
repz
add
mov
mov
pop
loope
sbb
fdivr
ret
fisubr
ret
pop
in
lods
in
xchg
nop
push
data16
ins
xchg
mov
leave
dec
mov
pop
or
sahf
pop
out
adc
sub
jns
mov
inc
ja
mov
xchg
xor
push
mov
test
dec
stos
mov
inc
xchg
movs
ins
xchg
cs
fcomp
sub
ja
mov
pop
jge
out
pop
fcmovnbe
out
outs
aad
ret
test
or
dec
xor
xor
fisub
retf
cmps
rol
cmps
std
dec
jnp
add
xlat
jne
scas
dec
bound
or
nop
out
xchg
repnz
sbb
cmp
cmps
shld
call
add
xchg
pop
cmc
xchg
test
lahf
ss
retf
mov
sbb
nop
sub
and
xchg
push
mov
add
xor
in
cmc
lahf
imul
ficom
(bad)
repnz
and
push
aas
in
cmp
push
rol
scas
cmp
dec
inc
push
cmp
push
add
mov
mov
cld
push
and
lods
cmp
push
adc
rcr
je
dec
mov
push
sub
or
cli
fwait
xor
push
sub
stos
mov
bound
jmp
cs
popa
sub
jmp
enter
jbe
or
dec
mov
sub
add
fld
iret
jo
leave
ret
xchg
ficomp
popa
mov
jnp
test
shl
scas
or
retf
mov
dec
xchg
fnstsw
fst
shr
repnz
jle
aaa
es
les
xchg
aaa
sub
xchg
pop
imul
repnz
pop
test
pop
jae
dec
sbb
cs
repz
xchg
aam
in
in
pop
jge
mov
test
inc
outs
hlt
iret
mov
repz
push
cmc
xor
mov
out
pop
push
and
repnz
or
or
lods
ins
sub
adc
cmp
xchg
and
adc
sub
ret
adc
mov
leave
mov
dec
ror
mov
cs
fdecstp
ficomp
sub
test
dec
cmp
cmp
aas
sub
punpcklwd
int3
add
mov
rcr
sti
cdq
cmps
sub
ret
int3
inc
shl
scas
in
test
inc
jne
rcl
(bad)
jp
(bad)
out
ins
pop
push
dec
in
retf
shl
sbb
mov
je
push
ret
xlat
call
pop
sbb
fimul
mov
adc
retf
jbe
mov
hlt
push
mov
mov
std
daa
dec
gs
xchg
pop
cld
(bad)
jns
dec
ss
bound
mov
cmp
mov
or
sbb
stos
xor
ret
mov
mov
dec
dec
jnp
stc
(bad)
cs
repnz
push
dec
test
test
das
movd
and
push
jnp
jne
aaa
outs
mov
dec
dec
jp
rdmsr
ret
fs
inc
pusha
iret
sti
xlat
inc
push
pop
and
adc
and
rcr
jmp
(bad)
fcomi
repnz
xchg
inc
inc
push
cmp
push
mov
push
aam
sub
cwde
xchg
jg
xlat
sar
cmp
das
into
out
mov
outs
dec
mov
pop
mov
mov
xchg
ins
or
sub
out
add
int3
mov
and
iret
pop
mov
mov
and
xor
stos
adc
lahf
je
mov
sub
fld
push
and
sti
push
inc
fist
pop
neg
and
jg
add
fcomp
cld
outs
es
fild
stos
scas
aaa
sub
daa
add
jno
jg
or
cs
rcl
je
loopne
mov
(bad)
in
in
mov
sub
repnz
sbb
mov
ins
inc
jl
jmp
add
into
xor
sub
jge
jb
and
imul
in
inc
sbb
sbb
mov
inc
xchg
call
imul
sbb
mov
push
clc
bound
adc
and
pushf
cmc
adc
(bad)
gs
push
jp
pop
dec
xor
(bad)
clc
mov
not
outs
jbe
mov
imul
inc
mov
sahf
sbb
mov
int
rcl
retf
movs
add
outs
(bad)
movs
movs
xor
(bad)
sti
or
push
dec
cmp
inc
imul
mov
and
ror
inc
jb
mov
xor
inc
sub
mov
loop
fnstsw
add
dec
jbe
mov
call
push
out
out
mov
push
and
test
int3
mov
test
add
out
jmp
cmps
mov
nop
xchg
adc
xchg
mov
or
add
and
out
mov
out
sbb
nop
call
sub
call
or
mov
adc
xchg
test
push
repz
push
adc
pop
add
jecxz
sahf
sub
pop
gs
push
iret
dec
jmp
shr
jno
pop
mov
or
cmps
sub
aam
jns
sub
pop
leave
push
cli
sub
bnd
sbb
push
sub
xchg
stos
hlt
xor
clc
fsub
fisubr
mov
in
iret
add
or
cmps
pop
pushf
cdq
inc
cmp
test
idiv
or
xor
jae
mov
or
inc
mov
add
jl
js
mov
hlt
fldlg2
xor
jge
retf
ins
sub
out
ins
mov
jbe
jns
add
or
aaa
dec
(bad)
xchg
mov
lds
lods
sti
pushf
jp
dec
jecxz
leave
ins
adc
cmps
add
in
sub
loopne
jns
out
fwait
leave
dec
adc
retf
dec
test
pop
fisub
stos
push
push
jb
dec
iret
aam
and
aas
jecxz
push
mov
aaa
cmp
mov
sahf
aas
(bad)
sar
dec
cwde
cmp
xchg
ret
inc
inc
jne
ss
pushf
cmc
sbb
pop
dec
or
out
adc
gs
or
sbb
jne
in
fldcw
cdq
mov
lods
out
into
sahf
es
dec
or
jbe
jmp
aad
jno
dec
sub
cmp
sub
add
jne
add
and
div
out
lods
scas
dec
add
ja
mov
jle
shl
inc
mov
sti
cmp
pusha
jae
jle
aam
out
out
dec
jo
test
and
clc
pusha
jae
repz
lock
jnp
outs
cmps
(bad)
repz
push
repnz
ja
arpl
mov
mov
add
cs
in
sar
(bad)
retf
xor
jb
repnz
rcr
push
or
pushf
test
retf
adc
stos
cmp
mov
pop
dec
jle
ret
inc
out
adc
pandn
adc
into
jns
ret
cwde
dec
push
adc
test
add
ins
inc
popa
pop
add
pop
scas
ins
aad
jne
pop
mov
and
lods
jmp
cmpxchg
or
loopne
mov
adc
lds
jnp
into
mov
jbe
cwde
xchg
mov
std
lahf
pop
iret
pop
je
cmps
out
pop
push
retf
xor
xor
pop
or
mov
shr
cmps
mov
cmp
cmps
adc
inc
xchg
mov
cmp
pusha
repz
lods
rcl
jnp
and
xor
cwde
xor
cmove
dec
xor
nop
mov
hlt
xor
pop
in
sub
les
int3
pop
cmp
mov
add
sahf
cmp
mov
mov
jle
and
add
xchg
out
cmp
gs
jbe
inc
lods
int
rol
mov
and
xchg
sub
add
ds
leave
enter
arpl
inc
sbb
push
pop
les
ins
dec
and
loopne
and
stos
adc
es
mov
xchg
xor
inc
jmp
icebp
jb
add
je
mov
or
jge
adc
cmp
sar
xor
and
xchg
es
repz
xchg
mov
pop
cli
and
push
jns
cmc
jns
adc
lock
push
leave
pop
mov
jnp
cmp
ja
mov
and
sbb
or
pop
pop
movs
mov
je
jbe
mov
fs
cmp
xchg
adc
jle
pop
arpl
or
cmp
inc
aaa
sub
and
call
sbb
adc
js
mov
std
jle
outs
stos
(bad)
repz
test
or
sbb
ror
lods
imul
add
icebp
lock
inc
dec
sar
or
adc
mov
mov
pushf
sbb
dec
mov
jmp
das
sbb
popf
push
in
scas
aad
nop
add
ficomp
scas
lahf
jp
or
test
jecxz
add
xlat
lea
mov
sbb
call
ror
daa
sub
in
jge
enter
cdq
and
push
dec
imul
sub
pop
(bad)
in
xchg
pop
jnp
jmp
and
adc
xchg
retf
sahf
fisubr
xor
cmp
loope
pop
cmp
ret
hlt
push
nop
xchg
mov
pop
pop
and
xcrypt-cfb
cmps
mov
div
loope
movs
jo
sub
popa
movs
jae
sbb
dec
pop
fiadd
js
cwde
lahf
push
push
add
xlat
sbb
fmul
pusha
inc
xchg
into
push
and
add
push
mov
mov
icebp
enter
cli
pop
cmp
int
or
das
fisubr
call
les
lods
adc
int3
jo
stos
xchg
jb
sub
mov
fwait
sub
mov
std
cwde
mov
lods
jmp
mov
mov
bound
mov
sbb
shl
adc
mov
adc
pushf
pop
repz
call
xchg
fs
jecxz
popf
push
js
loope
es
pop
imul
sbb
push
or
push
mov
into
out
push
jmp
jge
stos
test
and
push
mov
popf
cmp
pop
ins
mov
add
xor
arpl
scas
test
sar
mov
dec
scas
vpaddb
sbb
in
sub
sub
js
and
sbb
xor
mov
or
shr
xchg
add
repnz
fdiv
cmp
pop
xor
js
xor
cmp
inc
xchg
cwde
xor
mov
rcl
aaa
push
mov
ss
jecxz
push
jno
add
pop
repnz
imul
add
and
bound
not
mov
lock
mov
and
and
push
pop
mov
repz
lea
iret
pop
in
jb
cmp
test
push
lds
and
sub
not
lods
pop
div
and
call
stos
clc
popf
and
out
imul
add
repnz
call
cmpps
push
xchg
fdiv
fwait
mov
dec
pop
push
movs
shr
mov
cmps
pop
pop
xchg
mov
add
cmp
adc
push
pop
sub
sbb
out
xchg
or
movs
out
or
aam
sub
inc
cmp
icebp
loope
cmc
test
cmc
test
xchg
pop
xor
dec
jbe
jnp
imul
push
sub
sahf
mov
hlt
add
mov
outs
inc
push
sbb
mov
js
add
lock
imul
mov
(bad)
hlt
nop
mov
movs
adc
push
stc
push
popf
fmul
sub
mov
pop
jp
stos
jno
inc
dec
cmc
dec
call
and
dec
pushf
adc
dec
push
xchg
in
jmp
sub
push
repz
fiadd
xchg
xchg
xchg
sar
jg
into
in
jp
cmp
xchg
jmp
inc
shl
lea
pop
fwait
sbb
std
mov
sbb
les
mov
imul
lds
mov
or
cmps
pop
push
jp
push
test
dec
(bad)
add
pop
ds
cmp
adc
jns
cmps
cli
xor
pop
sub
pop
push
jp
cdq
cmp
scas
dec
movs
lahf
addr16
mov
clc
(bad)
xchg
or
pop
lea
add
pusha
mov
inc
mov
ins
adc
int
jmp
xchg
xor
mov
pop
cmc
test
inc
mov
retf
xchg
mov
fist
push
data16
cld
fucomi
fs
adc
data16
sub
stos
sub
xchg
mov
jae
cmps
xchg
sub
(bad)
out
lock
out
cmc
ja
les
jp
ja
lods
xor
cs
sbb
cmp
push
outs
test
jmp
daa
jne
sbb
loopne
out
pop
jmp
add
or
hlt
shr
fistp
imul
adc
jle
retf
dec
test
cmps
pop
jecxz
adc
fcmove
rcl
mov
mov
(bad)
cmps
addr16
jns
pusha
push
lds
mov
jmp
in
adc
xor
cmp
fisttp
out
inc
je
jecxz
aaa
cmp
dec
(bad)
xchg
cmp
or
jge
in
dec
fdiv
call
jnp
mov
fst
xchg
push
loop
inc
cmps
add
and
sbb
scas
mov
inc
adc
cwde
outs
mov
ds
and
dec
add
mov
ss
push
stos
mov
or
out
xadd
test
xchg
mov
dec
aam
xor
and
scas
lea
mov
adc
pop
aad
push
into
add
pushf
sub
cmc
dec
out
add
cmps
nop
inc
push
or
inc
call
mov
sbb
adc
mov
fnsave
mov
andnps
(bad)
xlat
and
rol
add
lods
pop
aas
mov
sbb
loopne
mov
(bad)
ins
fsub
push
sbb
xchg
fwait
mov
mov
pop
gs
mov
xor
jnp
xor
rcl
sbb
push
mov
mov
pushf
(bad)
cmp
inc
sbb
sbb
call
inc
inc
or
enter
movs
adc
ds
outs
xchg
add
call
sbb
xchg
push
cmp
movs
jle
fdivrp
frstpm(287
pop
daa
jne
stos
(bad)
stos
(bad)
mov
mov
or
pop
in
lods
cld
pop
cmp
pop
push
ss
in
jmp
les
pop
adc
hlt
mov
or
out
xor
sbb
cmp
add
mov
lods
mov
test
jb
aad
(bad)
leave
or
xchg
mov
rcr
adc
xchg
inc
jb
clc
jo
inc
dec
adc
sahf
outs
ret
mul
fwait
mov
or
dec
rol
inc
ss
xchg
inc
pusha
adc
sbb
jg
mov
or
fmul
in
ret
cdq
fldpi
dec
scas
cmp
jl
add
mov
xor
push
call
mov
stos
shl
xor
std
adc
pop
cmp
lods
push
xor
xor
xchg
mov
in
cmp
sub
mov
mov
pop
popf
push
mov
add
js
dec
repz
sbb
in
sbb
inc
jg
inc
cmp
sahf
pop
call
ror
lods
lea
out
dec
mov
jae
(bad)
aad
add
out
icebp
cmp
or
cli
aas
in
sti
xchg
xchg
dec
or
mov
inc
cmp
fisubr
cmp
lods
ret
(bad)
fnstcw
inc
push
mov
mov
sub
push
mov
add
mov
shl
jp
fdivr
mov
(bad)
lds
add
pop
hlt
in
sub
dec
xor
and
arpl
retf
mov
bound
mov
bound
mov
call
mov
push
xchg
push
ins
mov
bound
sbb
jg
dec
test
jle
mov
daa
lds
hlt
cmp
nop
jb
sahf
mov
cwde
inc
adc
in
(bad)
xlat
mov
mov
maxps
lock
mov
call
and
pop
mov
jl
movs
xor
mov
cld
mov
pop
dec
dec
pop
cmps
push
loop
outs
mov
dec
mov
and
xor
je
add
mov
rcr
jbe
xchg
int3
jmp
das
lea
and
pop
pop
imul
and
or
mov
xor
ret
stc
mov
movs
clc
mov
mov
inc
or
clc
cmps
cs
sbb
addr16
out
dec
inc
jnp
and
(bad)
repz
aaa
hlt
sub
dec
data16
mov
dec
ret
pop
push
xchg
scas
stos
les
xor
cmps
pop
mov
adc
ficomp
loopne
ins
pop
mov
mov
dec
mov
xor
scas
and
pop
pop
mov
push
shr
dec
sub
out
mov
popa
jecxz
movs
shl
push
mov
loope
dec
jae
pop
imul
or
std
ja
cld
pop
cmp
inc
mov
sbb
xor
mov
mov
mov
pop
les
movs
dec
dec
mov
jb
test
(bad)
scas
ins
rcr
in
mov
pop
aaa
jns
add
ret
test
stc
pop
sub
jge
lods
sahf
push
lds
test
push
fs
mov
pop
xor
sub
ret
xchg
ss
push
loopne
retf
dec
xor
fsubr
mov
or
ja
and
add
dec
sbb
mov
aad
shl
or
xor
rcpps
jl
rol
fisubr
sbb
xchg
scas
fwait
in
and
inc
jae
mov
ror
push
inc
mov
pushf
add
adc
mov
sbb
(bad)
jno
(bad)
sbb
dec
add
dec
jmp
or
xchg
jge
stos
jb
and
ret
sbb
sub
fwait
xchg
aad
in
test
lods
loope
mov
sub
xchg
jmp
popa
pusha
jecxz
aad
mov
jp
adc
sub
xchg
test
in
cmps
inc
xchg
daa
or
lahf
pop
movs
sar
ror
jmp
sbb
xchg
loopne
shl
clc
out
je
leave
jl
cs
cmp
mov
cmp
mov
in
iret
sti
jge
mov
push
cld
pop
imul
ins
(bad)
push
addr16
sub
mov
dec
jae
pusha
xor
ins
out
pop
inc
mov
xchg
scas
fsubrp
into
cdq
cli
sub
popa
out
sbb
dec
mov
dec
leave
sub
jecxz
in
jns
jae
mov
fisub
xor
sbb
(bad)
in
xchg
mov
xchg
cmps
jmp
sub
add
jecxz
inc
xchg
mov
gs
fst
scas
ja
inc
mov
mov
xchg
push
sub
(bad)
in
inc
mov
inc
nop
stos
int3
ins
sbb
mov
arpl
xor
lahf
out
sti
xor
(bad)
sbb
push
pushf
and
cmps
(bad)
loop
(bad)
lock
add
mov
sub
push
fnstsw
push
dec
push
nop
pop
repnz
aad
(bad)
aas
outs
popa
enter
push
repnz
add
mov
sub
xchg
cwde
mov
dec
jmp
mov
xor
ds
div
adc
pop
popa
fdivr
push
addr16
(bad)
out
outs
test
lds
out
in
cmp
push
dec
repnz
add
vlddqu
and
in
std
or
jbe
hlt
mov
bound
jns
adc
push
mov
aaa
pusha
cmp
sub
test
pop
(bad)
icebp
adc
mov
in
repz
cwde
xchg
adc
mov
ret
sahf
mov
jl
aas
(bad)
iret
sbb
test
js
mov
cmc
sub
loope
jle
stos
data16
sub
stc
push
loop
outs
jl
add
push
or
aam
or
push
cdq
push
mov
add
push
jmp
xchg
adc
and
sar
add
sbb
pop
sar
sub
cmp
hlt
(bad)
retf
cmp
xchg
dec
sub
sub
mov
add
ret
int3
dec
test
repnz
or
and
fdivrp
call
dec
arpl
aaa
das
outs
pop
fisttp
fnstsw
test
out
call
add
jne
pop
jecxz
shl
or
push
sub
fwait
cmps
cwde
jge
mov
movs
cld
jno
loop
das
out
outs
and
inc
in
pop
icebp
xor
sbb
adc
rcl
test
int
or
pop
jl
jmp
jecxz
(bad)
dec
adc
ror
push
and
mov
pop
stos
sub
outs
call
xor
inc
adc
shl
je
lods
jge
fwait
ins
fisub
and
shr
pop
stos
movs
inc
in
add
repnz
dec
into
(bad)
push
pop
je
dec
jl
xchg
cli
ss
test
call
loopne
fsub
mov
sbb
imul
adc
imul
add
xor
sbb
outs
lahf
fsub
sub
mov
cli
lahf
jl
test
out
stos
add
dec
jae
clc
push
(bad)
jbe
enter
and
xchg
cmp
test
addr16
mov
retf
bnd
mov
(bad)
test
imul
mov
inc
es
fistp
jno
cmp
and
cmp
push
pop
jle
ins
mov
jb
xor
jnp
aad
cmp
lea
lods
retf
psubb
test
aad
test
cmps
jne
xlat
mov
sbb
(bad)
aam
jnp
mov
cmc
gs
call
push
or
adc
xchg
and
inc
mov
or
or
add
pop
int3
mov
int3
cli
jae
mov
pusha
or
outs
test
jo
stc
and
push
mov
mov
ja
mov
inc
mov
sub
and
xchg
ds
ds
or
popa
cmps
lock
sbb
mov
mov
jecxz
add
aad
mov
cmp
cmps
inc
(bad)
push
inc
lods
fcomp
aaa
(bad)
test
std
sti
repz
lock
xchg
in
mov
outs
push
cmp
or
cmp
sbb
ret
pushf
xchg
jns
xor
mov
mov
dec
loopne
fs
cmp
pop
imul
xor
sti
fxch
sub
test
(bad)
jecxz
in
mov
dec
jo
inc
sub
jns
mov
je
cmps
jg
fwait
int3
lock
iret
inc
jmp
and
fld
mov
inc
mov
and
sub
cmc
jl
push
outs
jo
rcr
(bad)
mov
dec
push
adc
fld1
pop
push
mov
stos
call
in
movs
sar
xor
push
mov
fcmove
inc
pushf
cdq
add
sub
inc
dec
mov
mov
cmp
inc
jne
dec
pop
out
cdq
mov
push
adc
and
aad
cld
scas
jbe
(bad)
cmp
imul
xchg
cli
xchg
add
push
inc
icebp
cmp
cmp
hlt
jmp
stc
sbb
arpl
enter
push
mov
cmps
cmps
xchg
jno
mov
jmp
(bad)
mov
or
mov
ss
sbb
sub
leave
or
inc
jle
es
out
add
sbb
xchg
in
repz
addr16
cs
sub
fnstcw
push
jge
xor
mov
call
mov
sbb
inc
fild
outs
mov
or
sbb
hlt
jle
popf
dec
mov
sbb
adc
jns
cmp
mov
jge
xchg
mov
loop
xchg
ss
jae
scas
dec
scas
ret
mov
ror
bswap
cld
xor
pop
popa
sbb
sub
jl
add
mov
inc
mov
add
inc
cli
cli
fwait
add
iret
popf
shl
mov
out
and
add
adc
push
repnz
jl
jbe
and
stos
ret
ror
out
ss
popa
cmp
adc
sbb
cwde
aam
cli
inc
pop
cld
add
out
mov
int
adc
xor
sti
xlat
or
loope
jmp
test
(bad)
jnp
arpl
xchg
test
pop
ficom
cmp
test
rol
adc
nop
lods
adc
mov
jmp
fnstsw
cmp
pop
(bad)
mov
mov
cdq
push
in
sub
mov
mul
inc
jl
fndisi(8087
push
mov
movs
xchg
ret
add
add
mov
rcr
call
call
sbb
push
cmp
cmps
outs
and
leave
out
pop
lods
or
fs
ror
into
push
cld
aad
stc
ins
hlt
fiadd
push
jbe
jecxz
cmp
das
jl
xchg
mov
sub
outs
divps
(bad)
dec
push
retf
icebp
imul
and
sahf
jecxz
jge
stc
push
fwait
xor
and
add
call
out
pop
xlat
out
cmp
ror
jmp
(bad)
std
(bad)
je
jnp
jne
cmc
mov
data16
mov
iret
enter
mov
jnp
cmp
xchg
inc
or
jecxz
cmps
and
sub
nop
outs
mov
jmp
rol
rol
or
mov
cmp
adc
test
jne
pop
imul
fdiv
pop
mov
loopne
dec
cmps
mov
mov
sbb
je
pop
in
pop
lods
cmp
mov
or
and
ja
sbb
popf
sbb
es
outs
inc
clc
mov
jbe
xor
adc
dec
adc
sbb
aad
(bad)
pop
scas
lods
je
push
je
lds
in
or
imul
(bad)
iret
int3
sbb
adc
mov
movs
sbb
pop
add
mov
sar
or
sub
push
mov
aam
in
pop
mov
sahf
sbb
sbb
daa
in
jp
imul
push
lock
mov
imul
stc
stos
and
mov
mov
popa
jbe
add
jmp
les
inc
mov
ret
sbb
xchg
int3
pop
fsubr
inc
sub
mov
cmp
adc
mov
fcomip
xor
cmp
xchg
lock
out
jno
and
and
stos
leave
out
dec
jp
cs
or
sahf
jbe
lock
ds
adc
fst
inc
gs
mov
inc
lahf
xchg
popf
adc
mov
ins
ror
leave
rol
sub
lahf
ss
or
daa
cmp
sub
arpl
xchg
adc
add
mov
push
in
mov
cld
sub
call
push
xchg
inc
xchg
popa
mov
aad
stos
(bad)
xchg
ret
enter
xor
adc
push
outs
inc
push
mov
das
pop
ja
imul
rcl
adc
and
push
or
call
dec
cdq
and
and
jmp
lods
mov
cmp
xchg
ret
sar
sub
popf
pop
jbe
jno
inc
and
mov
enter
cmps
pop
rcr
mov
mov
cli
in
xchg
cld
add
je
fist
cmps
fs
dec
jnp
sahf
ins
fs
cmps
daa
pusha
psubq
jns
dec
sbb
cli
and
test
adc
fiadd
sub
xchg
test
push
ror
jmp
and
mov
xchg
and
pop
mov
add
and
jle
push
mov
pmullw
jne
leave
inc
(bad)
cmc
mov
inc
inc
out
jae
fsubr
cmp
lds
jmp
mov
movs
out
ret
test
adc
pop
push
das
outs
ins
xchg
loop
cld
sahf
inc
mov
aad
adc
adc
loop
test
cmp
int
std
aam
sahf
cmp
cmc
ja
push
outs
les
cmp
jmp
sbb
sub
jmp
les
sbb
(bad)
dec
and
cdq
cmp
xlat
sbb
jg
xchg
and
(bad)
out
sub
add
jge
cmp
lahf
push
push
imul
inc
mov
movs
and
mov
xchg
cmps
popf
cmp
outs
cdq
sub
adc
adc
das
cmp
mov
imul
mov
pop
xchg
lods
add
nop
and
add
sbb
sbb
stos
jnp
add
movs
xlat
jmp
mov
mov
jns
lea
push
ficomp
ins
inc
jecxz
or
mov
call
add
mov
mov
and
addr16
lds
sahf
xchg
les
mov
in
mov
jno
xchg
mov
jl
ror
pop
f2xm1
stc
push
sar
push
test
into
add
ins
or
fs
lock
jmp
cmps
imul
inc
mov
jecxz
jl
cmp
out
sub
sub
add
inc
fwait
int
popf
xchg
ja
add
push
mov
mov
fldcw
mov
lock
imul
test
pop
mov
mov
sbb
push
popa
push
stos
or
fst
psubb
mov
fcmovu
mov
outs
add
dec
fisubr
lds
pop
inc
mov
jmp
sbb
sbb
lds
test
test
(bad)
cmps
and
mov
sbb
test
sbb
sti
pusha
mov
test
or
xchg
dec
sbb
outs
mov
imul
adc
pop
and
xor
xchg
adc
lock
dec
dec
or
adc
shl
pusha
scas
aaa
addr16
lock
fnstsw
sub
xchg
dec
mov
stos
dec
sbb
(bad)
aam
mov
(bad)
mov
cmps
or
(bad)
xchg
cmc
aad
out
(bad)
mov
dec
int
jl
mov
cmp
dec
push
clc
mov
jb
pop
rcl
sub
mov
repz
cli
test
int3
mov
data16
scas
pop
add
pop
and
loope
cmp
mov
loope
inc
mov
jmp
das
in
dec
cmp
lock
sbb
fbld
adc
adc
pop
popf
push
fs
jne
push
cmps
dec
mov
add
cwde
push
cmp
enter
mov
(bad)
shr
pop
call
cmc
fisub
jne
rdtsc
jp
xchg
mov
sbb
in
pop
cs
test
mov
addr16
jl
add
movs
mov
repnz
xor
iret
popf
ds
push
dec
lahf
je
(bad)
xlat
inc
push
dec
adc
sub
inc
stos
sub
(bad)
in
aaa
xchg
jbe
adc
dec
inc
int
pop
je
sbb
mov
gs
xor
xchg
(bad)
cmp
mov
xchg
popf
jle
aad
cmps
jno
adc
and
sar
retf
mov
popa
sahf
and
inc
dec
push
push
test
push
or
inc
sub
inc
mov
pop
out
shr
add
aad
and
add
dec
xchg
std
mov
retf
nop
imul
mov
mov
jle
cmps
in
mov
outs
repnz
iret
mov
scas
retf
lods
cwde
das
loop
in
sub
(bad)
ja
push
push
stc
out
dec
push
mov
mov
out
adc
or
jns
(bad)
xor
test
lea
(bad)
(bad)
enter
dec
mov
arpl
fs
xchg
or
lods
js
(bad)
jns
jne
xor
push
jo
daa
imul
xor
add
cmp
scas
out
(bad)
mov
xchg
pop
and
mov
fiadd
aaa
and
sbb
lahf
call
adc
inc
cld
shr
dec
mov
movs
imul
pop
mov
inc
fwait
xor
cld
push
push
hlt
cmp
ds
ins
dec
mov
and
cmps
imul
inc
add
and
outs
ja
cli
adc
in
retf
int3
movs
aas
or
movs
in
mov
loopne
mov
(bad)
ins
xchg
or
push
or
sbb
dec
xchg
imul
jo
ja
inc
mov
push
xchg
shr
push
(bad)
test
adc
rcr
mov
retf
mov
cmp
push
cdq
hlt
loopne
jno
jns
and
mov
je
dec
mov
(bad)
stos
pop
aas
sub
push
sbb
dec
sbb
mov
jo
and
or
in
xchg
in
aam
popa
bnd
addr16
fst
neg
retf
mov
(bad)
je
fsub
loope
stc
shl
(bad)
push
scas
inc
loop
jmp
stos
stos
mov
out
mov
adc
inc
fsubr
retf
or
pusha
push
int
jnp
adc
(bad)
mov
push
ins
(bad)
loope
cmp
popa
xchg
repnz
sub
jns
adc
mov
push
jmp
mov
xor
push
dec
call
pop
(bad)
rcl
mov
loop
rcr
enter
sbb
(bad)
icebp
jmp
mov
jo
sbb
icebp
push
push
add
dec
jbe
xor
adc
aas
movs
jo
jo
pop
repnz
out
add
mov
aam
push
fsub
mov
ins
cs
and
dec
mov
mov
ds
lock
in
icebp
adc
mov
push
gs
and
and
mov
ins
(bad)
sahf
sub
sub
sub
mov
ja
repz
xchg
xchg
out
cmp
sub
es
pop
fs
sbb
push
jmp
rcr
int
and
icebp
xchg
ins
pop
cmp
fisttp
or
jmp
fistp
mov
pop
mov
inc
xchg
sbb
imul
aad
mov
and
sbb
fstp
call
mov
add
imul
outs
inc
mov
ss
test
aad
push
xchg
inc
inc
xchg
test
adc
lahf
mov
ja
mov
mov
jle
mov
add
push
mov
mov
int3
ret
shr
test
call
xlat
cdq
xchg
in
lds
pop
mov
sar
lods
xchg
jle
lds
leave
stos
bound
into
cmp
mov
add
imul
pusha
xchg
push
adc
sbb
popa
push
mov
cld
repz
add
imul
lds
fidivr
bound
hlt
pushf
inc
xchg
mov
call
inc
and
cmp
lahf
test
clc
rol
jmp
repnz
call
mov
sbb
in
push
cmc
mov
outs
pusha
fwait
repz
xor
xchg
xor
push
outs
imul
and
jmp
aaa
mov
mov
mov
mov
sti
cmps
mov
push
fild
pop
movs
add
aas
or
aam
fiadd
loope
std
adc
(bad)
sbb
js
ins
and
mov
in
sbb
mov
push
xor
mov
fs
cmp
and
repnz
cmp
sub
lock
xor
jle
popf
pop
or
test
push
mov
cs
outs
imul
repz
lahf
sbb
add
inc
jp
fwait
add
dec
fcmovnu
inc
xchg
jmp
sub
cmps
into
sahf
sub
imul
xor
int3
test
sub
dec
mov
icebp
sbb
shl
jl
stos
lds
aaa
pop
add
shl
xor
stc
dec
inc
mov
dec
pop
movs
mov
cmp
fidivr
xor
stc
cld
push
out
int3
lahf
ds
test
ins
adc
push
int3
sbb
call
add
pop
xchg
in
imul
cmc
dec
push
inc
cld
pop
cmp
mov
mov
bound
test
out
arpl
fist
lea
sub
aam
pop
pop
pop
in
jg
aaa
sub
icebp
inc
mov
sbb
call
cmps
or
sbb
aas
(bad)
fsubr
mov
int
jb
cmp
mov
lods
dec
pop
mov
push
xor
jae
cld
lods
and
jno
inc
bound
ror
nop
mov
lock
into
ja
push
hlt
mov
jg
mov
mov
scas
push
inc
dec
mov
add
and
cmp
mov
push
jp
es
pop
adc
mov
xor
ret
data16
sbb
ret
mov
sbb
cld
cs
add
xor
jne
push
pop
sbb
dec
adc
cmps
sbb
sbb
cmp
sahf
arpl
sub
cmp
add
fld
pop
shr
push
test
and
je
inc
(bad)
sbb
aas
nop
call
jg
jp
pop
jb
aad
call
test
inc
pop
pop
xor
pusha
add
stos
adc
clc
pop
mov
repz
sub
dec
mov
ins
sti
loopne
and
psubb
jecxz
cld
push
inc
jg
jmp
push
push
pop
jne
add
dec
inc
mov
inc
push
jne
out
imul
imul
pop
mov
imul
inc
idiv
pushf
add
mov
add
adc
sbb
(bad)
std
ins
xor
into
or
push
movs
fsubr
add
in
addr16
loop
outs
mov
or
mov
jbe
mov
cmc
(bad)
push
mov
test
out
rol
sbb
dec
ss
cli
cwde
loopne
cld
cdq
sub
push
jle
xor
call
es
xchg
dec
add
pusha
(bad)
sti
adc
pop
sub
lea
jmp
out
sti
in
mov
int3
inc
dec
fs
fisttp
or
pop
jo
mov
jns
in
(bad)
or
dec
xchg
inc
stos
push
(bad)
xor
jecxz
jle
push
mov
retf
xor
cmp
mov
pushf
and
dec
or
in
lods
mov
push
lods
cld
inc
inc
lahf
shr
loopne
movs
lds
cmp
dec
hlt
mov
add
cmp
in
jmp
adc
xchg
jne
lahf
retf
and
cmps
enter
mov
test
lds
lahf
bound
data16
push
xor
inc
mov
stos
mov
push
ja
pop
mov
nop
enter
fs
mov
xchg
std
lahf
sbb
pop
into
in
pop
dec
in
or
hlt
hlt
test
(bad)
ds
shl
stc
add
ins
and
enter
in
mov
icebp
and
mov
jbe
inc
call
sbb
mov
jb
sbb
das
aas
jle
inc
stc
leave
mul
cmc
out
or
neg
or
add
neg
sbb
mov
sbb
test
retf
(bad)
push
jbe
add
out
sar
adc
inc
stos
jno
mov
jb
test
outs
or
dec
pop
std
std
sbb
test
iret
mov
leave
xchg
outs
mov
mov
push
mov
lods
cs
ja
sub
xor
movs
sti
(bad)
mov
pop
imul
push
jo
fsub
mov
mov
aad
cs
(bad)
lods
push
into
mov
push
shl
fwait
push
add
icebp
rcl
ret
xor
loope
jne
sub
jecxz
loopne
ins
test
ins
sbb
cmp
sbb
sbb
xor
stos
jne
rcl
mov
addr16
xchg
ss
mov
xor
aaa
shl
dec
clc
sbb
mov
fmul
adc
call
cwde
sub
mov
xchg
scas
cmp
mov
cmps
int
cdq
dec
ja
loop
cld
cs
leave
jbe
neg
and
lock
mov
ja
test
pop
push
xchg
jb
enter
mov
out
iret
dec
mov
dec
in
jno
push
sub
retf
fcmovnbe
mov
mov
(bad)
sbb
aaa
mov
sahf
(bad)
rol
les
sar
in
stc
ds
mov
mov
jo
and
fs
aaa
adc
adc
or
mov
mov
sbb
stc
loope
mov
ret
push
xchg
shl
sub
stos
push
dec
or
(bad)
mov
rol
dec
jae
sub
arpl
mov
call
sbb
loope
fnsave
aad
aam
cmp
fcom
pop
test
sbb
(bad)
mov
ret
iret
or
push
mov
jae
jbe
ds
xor
aad
jg
aas
mov
(bad)
xchg
push
sahf
xchg
imul
mov
(bad)
stc
push
xchg
fimul
aaa
popf
leave
inc
out
out
xchg
mov
jnp
xor
sar
jmp
sbb
sti
repz
jno
(bad)
(bad)
ds
push
dec
(bad)
jg
and
push
push
mov
std
or
shl
cmps
sbb
mov
repz
pop
fstp
or
xchg
mov
pop
scas
jecxz
adc
imul
call
(bad)
inc
ret
movs
dec
ins
pop
jp
pop
adc
cli
pop
repnz
push
dec
lock
test
shl
fadd
outs
push
mov
ins
mov
jmp
xchg
mov
pop
and
cdq
hlt
add
mov
nop
jp
mov
inc
push
sub
retf
xor
lods
nop
shl
stc
mov
sbb
push
mov
mov
fcom
xchg
xor
pop
popa
pushf
mov
call
inc
and
clc
push
psubd
xor
movs
rol
scas
loopne
test
xor
cmps
sbb
mov
adc
je
jnp
xchg
into
rcl
jns
in
ds
sbb
dec
(bad)
bound
push
daa
shl
jae
dec
cmp
out
mov
out
dec
std
in
shr
(bad)
pushf
outs
mov
movs
xchg
or
out
jb
and
int3
(bad)
fbstp
sub
ret
pop
shr
xchg
cwde
(bad)
iret
push
pop
sbb
clc
rol
jmp
gs
loope
jb
dec
push
pop
jle
nop
test
psrad
mov
jg
repnz
scas
in
(bad)
sub
xor
bound
cmp
add
push
test
cvtdq2ps
daa
add
dec
(bad)
mov
adc
pop
or
sbb
mov
repnz
inc
adc
cmp
xor
icebp
ds
jno
in
ins
mov
jge
mov
stc
popa
add
inc
ret
addr16
test
arpl
cwde
call
leave
mov
popa
mov
xchg
xor
adc
push
xchg
in
cvtpi2ps
into
fisttp
cmp
push
xchg
jge
shl
mov
ror
pushw
mov
mov
xlat
in
fnstcw
jecxz
outs
in
cmp
in
sbb
mov
jmp
jg
je
add
fcmovnbe
push
cdq
mov
daa
int3
stos
sbb
jge
addr16
add
(bad)
xor
ins
and
sti
fidiv
xchg
sahf
jnp
and
setae
lds
in
ins
imul
cmp
int3
repnz
inc
pushf
(bad)
xor
(bad)
mov
xor
sti
dec
dec
cs
add
in
dec
js
adc
out
fldcw
(bad)
pushf
outs
sbb
arpl
jns
int
imul
pop
(bad)
aad
fidiv
sbb
or
test
add
imul
mov
jmp
fsubrp
clc
js
fidivr
inc
out
loopne
inc
popa
ins
inc
movs
jge
mov
xchg
(bad)
mov
and
cmp
cmp
aad
xor
or
movs
ds
jmp
rol
in
push
sbb
add
adc
and
sbb
arpl
outs
jns
jnp
std
mov
popa
fisttp
outs
inc
ss
mov
inc
leave
push
pop
in
or
ret
mov
jb
fsub
or
les
sbb
xchg
mov
push
cmc
loop
shl
test
es
push
dec
ret
jbe
in
lods
pop
in
jb
imul
dec
iret
call
or
xchg
mov
hlt
(bad)
mov
daa
jns
push
push
sti
mov
mov
pop
cs
and
sbb
mov
cmp
test
sbb
mov
ret
cmps
sar
sbb
add
inc
add
sar
sti
pop
add
fldcw
outs
mov
mov
sbb
les
loop
xor
sti
test
xor
mov
fs
out
pop
xchg
ins
mov
sub
push
fninit
push
adc
pop
ret
mov
sub
mov
loopne
fidiv
inc
xor
ret
out
push
cmps
sub
xchg
push
rep
push
int3
sti
mov
cmps
ficom
and
(bad)
push
icebp
retf
jmp
and
or
and
mov
test
loopne
inc
inc
mov
mov
pusha
aad
lock
icebp
das
dec
inc
lock
mov
sub
xlat
xchg
call
mov
call
mov
fwait
shr
aam
dec
loope
mov
(bad)
or
and
add
pushf
adc
mov
xlat
shl
and
outs
inc
push
mov
jns
inc
inc
pop
je
daa
sbb
push
xor
retf
pusha
out
ins
nop
sqrtps
jle
fcom
pop
mov
fnstsw
sbb
out
ret
fs
retf
or
sbb
adc
xchg
enter
loopne
xchg
in
(bad)
imul
movs
xor
pop
sbb
add
ficomp
sub
imul
js
enter
ret
aaa
xlat
jnp
sbb
pop
and
jns
daa
adc
jecxz
pop
out
into
sbb
gs
(bad)
imul
cmp
dec
and
gs
mov
bound
mov
(bad)
bound
mov
dec
dec
(bad)
pop
ss
int3
std
sar
popf
adc
call
and
mov
cmp
mov
scas
rcr
xor
out
xchg
or
popf
ss
ja
cld
xor
daa
in
xor
adc
xor
mov
sub
pop
sub
aam
fsubr
test
cmps
jmp
xor
cmp
mov
je
ss
je
int3
push
shr
sub
inc
shr
not
dec
mov
push
mov
sbb
add
pushf
jbe
iret
movs
imul
aaa
outs
mov
call
jo
adc
xchg
nop
xor
in
mov
mov
(bad)
in
push
mov
sub
icebp
in
es
adc
mov
adc
xchg
ins
lahf
cmp
lods
out
add
mul
cmp
mov
int
jnp
inc
popa
push
aaa
xor
jno
jge
test
(bad)
jl
sbb
sbb
outs
sub
mov
or
mov
add
mov
out
sub
pop
out
xchg
inc
xchg
test
dec
pop
ins
mov
js
cmps
(bad)
rcr
push
outs
xor
jo
int
jno
retf
test
mov
add
push
add
push
and
push
out
mov
out
sbb
xchg
sbb
pop
hlt
data16
add
in
adc
jmp
jmp
push
stos
aas
sbb
mov
and
xchg
lods
pushf
push
and
aas
into
(bad)
in
adc
mov
scas
push
adc
mov
jo
test
add
test
xchg
jle
inc
inc
pop
(bad)
mov
ins
xchg
iret
jg
aam
cmp
xchg
lea
mov
dec
test
xchg
push
jmp
xor
mov
jb
addr16
ret
and
sub
push
adc
lock
and
mov
xchg
xchg
out
sti
test
sar
fadd
shl
sbb
out
std
mov
stos
jp
or
jb
rcl
inc
dec
adc
dec
shr
add
sbb
stc
(bad)
shl
pop
sbb
pop
inc
or
xor
sub
dec
into
fwait
mov
xor
cwde
js
pop
out
(bad)
inc
and
mov
in
movs
xchg
call
outs
mov
jmp
stos
cmp
mov
out
ins
sub
inc
and
or
jb
or
dec
(bad)
and
cmps
popf
inc
xchg
(bad)
movs
nop
ja
mov
aaa
sub
push
push
cmp
adc
mov
int3
cmc
fstp
test
repz
(bad)
std
sbb
in
mov
and
pop
push
push
cmp
fld
leave
hlt
(bad)
jnp
das
xchg
push
cmp
mov
call
xadd
adc
into
adc
xchg
add
pusha
jmp
fcom
sub
jae
fdivr
(bad)
jae
ficom
sbb
mov
jns
mov
mov
cs
mov
pop
fcom
pop
inc
int
cmp
adc
sub
jecxz
adc
sbb
sbb
loope
cmps
rcl
jg
xchg
outs
or
fsubr
hlt
sub
xor
cwde
in
dec
pop
adc
sub
data16
icebp
sub
int3
add
aaa
ss
inc
or
mov
stos
(bad)
cmp
scas
mov
loop
loope
nop
add
call
imul
lods
mov
push
repz
mov
aad
adc
mov
jge
lea
pushf
and
test
cmps
popa
fist
enter
add
jae
aaa
movs
ret
gs
adc
retf
mov
in
in
sbb
push
pop
cli
dec
int
(bad)
mov
mov
push
leave
es
and
jmp
mov
ss
pop
pop
adc
sbb
pop
jb
and
mov
aaa
push
out
xchg
sub
sbb
fistp
jmp
icebp
mov
dec
call
sub
mov
dec
xchg
mov
repz
xor
adc
inc
dec
stc
pop
xchg
test
nop
retf
cmp
cmp
lods
mov
rcl
sbb
dec
inc
and
or
inc
sbb
mov
cld
cli
ins
and
dec
ds
and
dec
jbe
out
inc
cmp
out
mov
adc
test
xor
ficom
mov
icebp
ds
mov
movs
pop
push
out
outs
pop
pop
xor
or
dec
add
xchg
sub
jecxz
shl
mov
and
jp
mov
repz
push
xchg
mov
fidiv
not
xchg
adc
cwde
xor
mov
cli
sbb
test
in
aas
aaa
jg
cld
inc
retf
js
mov
inc
xchg
cs
inc
fild
xchg
in
pusha
cmp
pop
adc
cli
test
(bad)
mul
push
cld
jo
sub
retf
push
fld
mov
dec
lods
(bad)
fnsave
loop
std
mov
or
and
xlat
aas
mov
xchg
test
imul
push
or
dec
pop
outs
pop
add
sub
push
sub
imul
outs
add
nop
in
push
rol
mov
fcom
mov
sub
mov
mov
add
leave
in
mov
in
mov
jmp
add
sub
lahf
push
xchg
cld
push
xor
and
cmps
gs
ss
xchg
cwde
int
adc
add
or
jecxz
or
(bad)
(bad)
xor
sbb
sub
mov
bound
push
addr16
test
fwait
pop
and
scas
adc
aad
mov
jo
cmp
lock
(bad)
xlat
inc
mov
je
jae
inc
jecxz
mov
and
jnp
mov
rcl
mov
bound
es
cmp
mov
xor
fnstenv
out
adc
jbe
test
scas
fwait
pop
jl
xchg
cwde
leave
dec
push
and
ins
add
mov
sub
inc
test
and
jl
sti
leave
push
lahf
add
icebp
add
test
out
mov
sar
xchg
jo
(bad)
jnp
adc
(bad)
rcl
mov
lods
push
jle
add
pop
icebp
push
les
leave
mov
arpl
jle
pop
pop
pop
add
out
cmps
outs
inc
(bad)
jae
jbe
sub
jmp
sbb
(bad)
cmp
or
mov
lahf
rcr
xchg
pop
xchg
dec
mov
sbb
lock
call
jmp
pop
loope
aad
add
ret
lods
adc
push
clc
fwait
pop
jae
mov
or
xor
adc
jmp
rcr
adc
mov
(bad)
and
ret
xor
mov
sbb
adc
jb
adc
jg
add
sbb
retf
mov
mov
ds
push
pop
push
push
std
movs
(bad)
repnz
adc
mov
mov
jo
and
jp
daa
cwde
mov
or
test
out
jge
jne
leave
pop
and
xor
xor
daa
or
cmp
jge
push
pop
ja
mov
mov
mov
sub
mov
xchg
call
pop
push
repnz
cmc
sti
icebp
sahf
inc
mov
pop
xchg
sbb
push
mov
or
outs
fcomi
bound
pop
es
(bad)
xor
xlat
lahf
jmp
popf
xchg
jle
out
adc
not
retf
sbb
mov
leave
mov
out
lea
push
ja
push
clc
xchg
out
ins
ins
mov
dec
out
jno
movs
ins
mov
sahf
cmp
popf
scas
jle
mov
xor
push
pusha
xchg
int
add
sub
cmp
scas
add
mov
or
fist
int
dec
mov
aaa
outs
dec
and
mov
test
enter
test
cmp
cmps
stc
pop
mov
mov
sar
jno
test
cmps
and
call
sar
addr16
jnp
pop
dec
or
or
mov
outs
xchg
test
clc
inc
retf
xchg
dec
xor
xchg
out
mov
sbb
or
repnz
out
and
scas
push
stos
push
jg
rcl
push
clc
cmp
call
and
cmps
adc
jne
xchg
cdq
fldenv
shl
int3
adc
pop
retf
pop
loope
mov
mov
outs
rcl
scas
loop
sbb
jmp
or
xor
popf
jbe
pop
inc
pusha
inc
scas
dec
movs
dec
lea
mov
adc
dec
dec
and
and
adc
jne
mul
add
xor
in
mov
sbb
mov
mov
pop
in
aam
or
in
rcl
stos
jb
inc
stc
dec
push
jmp
cld
scas
or
push
popa
dec
bound
inc
shl
cmp
(bad)
ror
sub
inc
loop
and
dec
fxch
add
mov
test
push
loopne
pop
js
push
enter
sub
dec
mov
(bad)
cli
adc
add
dec
push
(bad)
cmp
pop
(bad)
clc
mov
std
push
lock
aas
inc
mov
or
xchg
mov
je
mov
xchg
mov
pop
xor
inc
jns
(bad)
xor
xchg
test
fnsave
inc
in
in
imul
stos
pop
mov
je
push
enter
arpl
fiadd
pop
popa
cmps
sbb
das
push
addr16
repnz
sbb
loop
pusha
inc
pop
and
js
sar
and
mov
xor
jmp
rcl
xchg
test
dec
sub
mov
sbb
jnp
xlat
jg
in
xchg
xchg
stos
iret
nop
dec
push
lock
pushf
adc
cmp
xor
ret
adc
and
push
aad
arpl
repnz
push
sti
test
enter
push
cmp
lds
ds
sub
fs
and
cmp
daa
call
fidivr
popa
popf
mov
outs
stc
call
ins
scas
aaa
sub
mov
ror
cmc
loope
in
sub
dec
and
mov
(bad)
adc
and
neg
hlt
arpl
out
cmp
pusha
push
jbe
aas
out
adc
xchg
mov
dec
sbb
test
ror
push
xor
adc
fadd
(bad)
sbb
push
int
xchg
dec
popa
adc
cmp
pop
pop
push
jne
aad
push
out
jae
inc
jne
pop
push
inc
(bad)
out
mov
mov
bound
enter
test
cmp
ror
mov
jmp
gs
stc
pop
shl
retf
and
fisttp
dec
xor
push
sar
out
pop
repz
mov
xchg
loopne
or
call
inc
jge
in
sub
cmps
cmps
mov
aas
cld
mov
sqrtps
scas
in
sbb
lds
or
in
xchg
sbb
or
mov
adc
lods
xchg
test
pop
in
push
sar
and
push
nop
test
pusha
and
mov
(bad)
dec
sub
fst
add
inc
inc
adc
call
cmp
sbb
ins
sub
iret
arpl
int3
cdq
idiv
mov
and
xchg
in
test
xchg
mov
ja
inc
mov
jl
gs
add
dec
test
jmp
jb
enter
ret
into
add
or
jge
inc
mov
xchg
push
imul
mov
sar
daa
xlat
(bad)
(bad)
push
movs
dec
xchg
jnp
rol
push
js
cmp
push
popf
cmp
jmp
sti
call
sub
push
imul
mov
jno
jg
inc
gs
mov
push
lahf
ja
out
fnsave
rcr
jmp
mov
pop
repnz
and
xchg
sbb
push
cli
sbb
sub
xlat
jns
xlat
lock
es
bound
or
lea
sbb
ja
sbb
add
loopne
add
mov
sub
mov
inc
sahf
stc
ret
sub
test
(bad)
push
xor
(bad)
jecxz
out
adc
(bad)
inc
mov
xchg
test
loope
pop
jecxz
or
push
movs
mov
push
imul
push
cmp
fld
in
push
stos
fistp
xor
pop
mov
aad
ins
or
aad
mov
jp
xchg
xor
xchg
(bad)
mov
jp
xchg
sbb
cdq
mov
mov
shl
add
dec
popa
adc
test
jecxz
mul
and
adc
adc
mov
sets
and
or
xchg
repnz
and
test
mov
lea
cwde
xchg
xlat
xor
xchg
dec
rol
fmul
ror
add
cdq
mov
ror
out
scas
mov
mov
mov
lock
push
jl
xchg
out
and
das
push
ficom
out
or
add
stos
adc
and
adc
enter
cmp
mov
xor
icebp
mov
call
popf
inc
icebp
xor
mov
sbb
inc
add
push
ret
adc
pop
sbb
jno
xor
(bad)
cmp
mov
aaa
ror
clc
add
jl
stos
pop
sti
ins
fisub
mov
cmp
scas
adc
mov
push
movs
mov
jmp
jl
adc
sub
(bad)
jno
rcr
fs
cmc
test
sub
stos
fbld
dec
sahf
into
mov
jp
mov
push
aam
cmps
add
popa
jg
in
aam
arpl
push
mov
push
xchg
add
xor
mov
test
xchg
imul
adc
cli
pop
mov
or
inc
stos
mov
pop
js
(bad)
and
push
jmp
nop
jne
jl
mov
push
sbb
xchg
and
pop
inc
neg
mov
mov
jmp
cli
push
enter
pop
inc
bound
ret
mov
sbb
jmp
cmp
sub
ret
sti
mov
and
loopne
sbb
adc
shl
dec
scas
shl
out
push
mov
addr16
aad
dec
jbe
in
and
jecxz
push
xor
push
stos
push
loop
(bad)
jge
lahf
cmp
leave
push
cmp
int
arpl
and
cmps
outs
int3
(bad)
xchg
push
shl
fcmovne
stos
pop
or
aas
or
das
xchg
aaa
and
push
into
push
push
cmc
shl
leave
dec
xor
ja
jb
inc
jle
mov
lods
xchg
mov
inc
jae
imul
mov
jp
pop
dec
cmp
enter
popa
sti
cmps
or
ins
xchg
test
pushf
jp
fwait
dec
push
popa
popf
push
stc
call
test
cmp
jnp
dec
or
pusha
cmp
ror
loop
sub
xchg
push
addr16
int3
and
and
or
pop
fdiv
inc
inc
repnz
(bad)
dec
jno
jo
adc
xlat
xchg
in
out
outs
loope
das
into
sti
or
push
in
inc
pop
jns
loope
sub
out
dec
pop
hlt
cs
imul
out
cmp
ins
pop
xchg
jns
vpmaddwd
outs
dec
in
push
lock
and
push
sbb
xchg
add
jnp
cmp
(bad)
sub
stc
popf
popa
nop
xor
lods
aad
add
cmp
scas
or
push
jp
in
in
das
loop
pop
call
xchg
lock
push
dec
sbb
sbb
int3
pop
add
(bad)
stc
pushf
jne
mov
mov
test
(bad)
mov
iret
fld
(bad)
sbb
les
bound
jno
xor
mov
out
jl
loop
adc
jb
pop
bound
cli
inc
bound
jbe
jle
add
int
test
outs
pop
jle
loope
jne
add
pop
sub
pop
xor
rcl
cdq
mov
retf
cmps
and
and
cli
(bad)
out
push
rcr
push
sar
test
outs
loopne
inc
sub
aam
pop
popf
jb
and
sbb
push
xchg
mov
fxam
mov
cmp
xor
push
sbb
mov
sbb
nop
call
pop
hlt
and
inc
sub
inc
push
cmp
cs
inc
call
ss
dec
xchg
sub
add
movs
push
push
imul
or
dec
enter
sbb
hlt
adc
adc
jno
pop
mov
mov
imul
sti
movs
dec
shl
movs
sbb
xor
cmps
inc
(bad)
mov
push
mov
jae
push
ins
adc
lds
cli
imul
(bad)
jnp
dec
shl
add
mov
jno
sbb
sub
pusha
add
je
stos
rcl
push
dec
adc
retf
xchg
dec
lea
inc
jae
cmp
and
jb
and
push
pop
in
ss
aaa
pop
ins
cmp
arpl
xchg
dec
mov
lods
sbb
icebp
push
mov
adc
adc
cmp
shl
mov
clc
(bad)
in
or
cmp
jp
inc
pushf
cmps
cmp
fdiv
jnp
sahf
mov
xor
stos
lahf
dec
outs
sahf
aad
or
adc
pushf
mov
adc
test
aas
out
dec
jnp
loopne
adc
xor
and
push
in
inc
ret
dec
cmp
ja
xor
nop
push
aas
fsub
rcr
(bad)
push
daa
sbb
leave
icebp
inc
mov
arpl
aam
es
mov
std
movs
mov
and
jmp
xor
aad
mov
lahf
cwde
jbe
xchg
jle
add
xchg
xchg
das
div
xor
lock
out
js
xchg
sti
sahf
mov
cmc
lds
sub
pop
sub
cmps
into
rcr
enter
dec
movs
leave
push
aad
xchg
inc
iret
xor
nop
pop
mov
adc
popa
call
rcr
cmp
shl
adc
xor
fld
or
xchg
cmp
add
push
fsub
pusha
adc
aas
xor
sbb
mov
lods
les
or
lods
jecxz
push
int3
test
outs
ss
cmps
out
and
adc
movs
je
mov
in
cmp
clc
sti
push
inc
por
mov
mov
aas
icebp
iret
jle
retf
lds
or
inc
clc
mov
sbb
pop
mov
sub
mov
cmp
inc
sbb
bound
mov
int
fldenv
push
je
test
fcom
push
or
lea
add
imul
sbb
or
enter
stc
mov
mov
sbb
pop
mov
aam
cmp
pop
cwd
aad
xor
cmps
sub
in
push
cwde
jno
jmp
push
cmps
(bad)
jecxz
popf
popa
xor
dec
pop
sub
gs
dec
jne
sahf
mov
enter
mov
jno
in
jo
jae
sahf
adc
pop
or
pop
test
jbe
push
in
int3
lods
sbb
xlat
repnz
push
(bad)
sub
dec
push
popa
adc
(bad)
cwde
inc
inc
jge
daa
mov
pop
dec
jl
dec
sub
add
and
inc
dec
test
and
lods
inc
cmp
jbe
sbb
mov
or
xor
add
sub
jmp
in
(bad)
mov
fisubr
mov
pop
enter
inc
sub
cwde
nop
xchg
jns
xor
(bad)
sub
mul
pusha
pop
and
add
push
add
pop
lock
outs
sbb
pop
adc
in
mov
arpl
jo
inc
icebp
mov
adc
(bad)
lods
mov
add
(bad)
push
popa
fisub
mov
mov
cmp
sub
sbb
fst
xchg
and
mov
or
xor
cs
xor
inc
lods
xor
xor
jno
add
xchg
jne
jp
fdiv
loopne
xor
test
bound
dec
pop
cdq
mov
pop
inc
fsub
or
mov
aam
ins
pushf
push
cmps
or
dec
jno
pushf
xchg
sub
int
mov
pop
add
(bad)
mov
or
inc
lods
clc
lods
mov
or
int
adc
call
jg
dec
in
repnz
fsubr
repz
in
test
pop
sti
js
push
sbb
jb
and
sbb
arpl
in
cmps
(bad)
sbb
pop
push
(bad)
lock
mov
cmp
xchg
sub
aaa
adc
xchg
xchg
cmp
std
mov
(bad)
push
(bad)
into
jo
push
xor
in
iret
std
loope
mov
cs
retf
pop
inc
fild
in
pusha
push
adc
inc
adc
mov
(bad)
xchg
xchg
stos
xor
lods
in
xor
xor
cdq
mov
mov
int3
into
mov
push
adc
push
lea
xor
imul
sub
loopne
je
sub
pop
out
aam
mov
imul
push
mov
push
loop
and
dec
rep
sub
mov
in
cmp
int
fiadd
push
retf
mov
add
mov
jecxz
pop
jge
or
sbb
jmp
lods
jo
push
jle
push
aam
ret
mov
test
nop
and
mov
cli
aam
(bad)
lods
and
in
lea
sbb
out
frstor
xor
stos
sub
stos
imul
shr
and
cmps
iret
mov
les
pop
inc
push
call
and
xchg
dec
pusha
adc
into
inc
mov
(bad)
icebp
push
in
mov
fcmovu
repnz
mov
push
movs
lds
sbb
arpl
lea
and
mov
stc
pop
jg
fwait
mov
xor
inc
push
xor
sbb
add
aad
adc
mov
fistp
(bad)
and
dec
push
or
jno
and
inc
stos
das
mov
cdq
(bad)
popf
lods
mov
sar
mov
mov
push
fwait
stc
movs
xlat
pop
(bad)
push
mov
push
test
adc
dec
push
pop
pop
stos
inc
or
sahf
adc
loope
push
(bad)
sbb
xchg
inc
inc
mul
rcl
jecxz
pop
cmp
add
dec
aam
in
push
int
stc
or
dec
pushf
les
loop
xor
mov
adc
or
lea
inc
xor
add
pop
loop
rcl
mov
stos
std
mov
iret
mov
(bad)
jb
pop
and
daa
push
mov
or
cdq
call
adc
xchg
push
pop
in
or
aad
fwait
test
je
inc
add
inc
jnp
mov
xor
jo
push
movs
dec
ret
repz
cdq
xchg
jp
and
fisub
sbb
retf
cmp
mov
adc
cmp
(bad)
fisub
push
call
das
mov
test
cdq
cld
xor
xor
ret
iret
push
mov
loop
rcr
cwde
sub
leave
push
jmp
sbb
leave
loop
arpl
mov
jmp
xchg
and
cmp
fcmovu
cmp
addr16
pushf
mov
fld
xor
mov
cwde
aam
mov
xchg
xchg
jae
dec
mov
pusha
xchg
mov
jmp
(bad)
xor
stos
shl
cmp
lods
in
adc
sti
test
out
imul
or
mov
jne
mov
inc
mov
sub
cmp
pop
push
ret
sub
mov
cli
stc
jp
jge
mov
cmc
inc
fnsave
and
sbb
mov
xchg
jo
(bad)
(bad)
enter
fstp
les
loope
xor
mov
xchg
mov
push
jmp
mov
xor
add
xchg
(bad)
loop
push
aam
aaa
js
fwait
or
inc
int3
fldcw
jne
and
shl
popa
jge
pop
imul
into
and
rol
dec
jecxz
retf
or
xchg
test
call
add
test
lods
and
or
(bad)
mov
add
sbb
jle
clc
xor
sbb
sbb
leave
adc
pop
fstp
in
aaa
fidivr
mov
dec
mov
push
dec
leave
inc
rol
and
data16
pop
push
out
cld
adc
out
pop
jge
loopne
or
call
sub
cmp
shl
lds
je
mov
pop
outs
cmp
test
sub
cmp
scas
or
pusha
mov
xor
fcom
adc
fidivr
and
ds
fild
cmp
add
jl
jns
loop
add
retf
cmp
popf
pop
(bad)
add
sub
push
adc
dec
test
or
sahf
lock
xor
xchg
lea
mov
shl
stos
rcl
xchg
shr
ret
sbb
mov
or
cdq
cmp
sub
adc
jecxz
xor
jne
adc
adc
lods
mov
bound
movs
cmp
sbb
sub
push
cmp
mov
lods
cs
pusha
inc
movs
mov
stos
ret
mul
mov
shl
in
sbb
add
jno
mov
inc
mov
pusha
xchg
adc
sub
shl
pop
jne
mov
dec
je
fst
mov
pop
add
dec
adc
pop
jp
add
call
jnp
mul
mov
mov
mov
loopne
jge
popa
or
cli
mov
push
shl
imul
je
arpl
outs
or
mov
ss
adc
jb
int
sysret
push
icebp
ja
in
mov
adc
lods
loop
in
sub
fmul
cdq
and
cmp
dec
retf
xchg
(bad)
push
out
jo
xor
loop
xlat
jg
lahf
inc
cmp
int
jp
mov
lahf
loope
movs
sbb
ret
inc
cmp
nop
aam
adc
cmp
mov
(bad)
out
retf
js
test
xchg
call
ficomp
ret
cdq
sbb
rol
sub
dec
jge
push
aad
jl
push
fiadd
jmp
jmp
test
dec
xlat
jmp
xor
lahf
sar
in
xchg
mov
or
mov
das
pop
cmp
fidiv
or
ret
xlat
pop
add
push
into
push
ins
scas
hlt
icebp
jnp
outs
dec
add
pop
imul
imul
mov
or
cs
adc
inc
(bad)
sbb
mov
push
std
mov
xchg
jmp
es
das
jge
add
into
out
inc
cmc
test
mov
xchg
pop
(bad)
sbb
adc
(bad)
jmp
mov
adc
inc
leave
out
ins
sub
sbb
add
push
rcl
les
mov
pop
mov
sbb
aaa
or
xchg
mov
cmc
sbb
pop
subps
xor
sbb
jecxz
(bad)
das
or
aaa
iret
lahf
scas
in
es
jae
pop
repnz
push
lods
jge
dec
mov
rcl
ins
clc
pushf
xchg
(bad)
aad
fild
sbb
push
enter
jp
push
sti
cmp
xchg
aam
push
ja
in
sbb
inc
mov
arpl
pop
into
sbb
frstor
add
push
and
dec
xchg
fdiv
dec
dec
jl
leave
int
push
fsubrp
jmp
(bad)
fdivr
cmp
mov
mov
mov
sbb
cmps
xchg
push
mov
push
push
xchg
inc
(bad)
jo
xchg
inc
clc
adc
lods
push
xchg
dec
add
push
pop
popa
or
mov
sbb
pushf
(bad)
dec
push
jne
jp
retf
stc
(bad)
(bad)
outs
adc
add
cmp
cmps
push
jge
push
pop
mov
stc
test
cmp
or
nop
fdivr
bswap
nop
aaa
xor
call
(bad)
cmc
push
add
fdiv
sbb
iret
inc
push
xlat
xor
cs
jmp
dec
push
jp
ror
push
gs
test
dec
mov
enter
ins
xchg
mov
loop
jle
cmp
jnp
call
out
retf
mov
outs
mov
(bad)
pop
in
push
jmp
stc
dec
imul
xchg
mov
sub
imul
popf
cld
test
out
pop
and
sbb
repnz
lods
sar
cld
les
mov
inc
je
jmp
dec
mov
mov
jg
inc
jmp
nop
pop
dec
cmc
idiv
cwde
or
cmp
in
push
into
movs
call
mov
xchg
inc
jo
fnstsw
loopne
aas
fcomp
xor
hlt
fmul
push
shl
or
xchg
cmps
and
push
inc
retf
(bad)
mov
or
mov
add
mov
mov
jp
(bad)
mov
xchg
fmulp
outs
push
loop
xlat
pop
sti
mov
(bad)
dec
xchg
mov
adc
xchg
jp
push
rol
std
mov
daa
and
push
lods
push
out
or
xchg
mov
and
loopne
dec
ret
xor
add
sub
das
(bad)
sub
jecxz
mov
repz
jb
std
les
repz
pop
adc
pop
in
jmp
(bad)
ins
add
jg
mov
mov
jmp
cmp
movs
jmp
inc
fucomip
lods
or
in
mov
push
movs
inc
bound
(bad)
mov
imul
fnsave
inc
sbb
cli
clc
aam
push
ss
push
ficomp
mov
jno
xchg
xchg
mov
mov
xchg
js
push
dec
push
xchg
cmp
mov
add
frstor
push
neg
mov
ds
sar
mov
ret
vpmulhw
ja
ins
pushf
bound
inc
sbb
scas
add
push
add
and
(bad)
(bad)
fcomp
mov
or
sbb
pop
mov
jne
adc
xor
in
rcl
and
fwait
inc
push
or
push
es
iret
retf
ret
mov
mov
mov
and
out
outs
ret
dec
inc
mov
retf
inc
and
push
inc
xchg
xchg
out
outs
ins
fsub
sbb
leave
pop
int
fsubr
cmp
mov
jmp
jo
test
cdq
out
jmp
xchg
in
xchg
and
mov
lahf
les
pop
mov
adc
xchg
mov
lea
and
rcr
and
out
and
xor
mov
mov
lock
lea
sbb
jmp
mov
out
shl
(bad)
jns
xor
(bad)
mov
loopne
sub
jo
xor
ins
sub
je
and
int3
and
sahf
push
call
push
int
outs
adc
add
push
mov
add
loopne
dec
push
pop
adc
xor
and
or
rcl
lds
mov
cmp
lods
int
loop
ins
xchg
mov
xchg
or
repz
dec
int3
add
adc
add
mov
and
outs
pop
push
inc
add
mov
stos
cmp
cmp
pop
call
and
sbb
inc
loope
dec
gs
sti
loope
loop
cmp
add
cmps
mov
inc
ret
inc
outs
jnp
mov
addr16
jmp
outs
sub
ja
mov
out
inc
xor
repnz
cdq
mov
lds
hlt
arpl
fld
out
jg
int3
mov
test
ja
fld
cmp
ret
sbb
call
ins
jge
and
push
and
xor
pop
into
lea
sbb
iret
jnp
cli
movs
push
cmp
shr
and
rol
fld
pop
rcl
mov
int
jmp
pop
sbb
lods
pop
push
sbb
fidiv
in
out
xor
xlat
mov
sub
xchg
sbb
popf
fild
lods
mov
mov
repz
xchg
pop
leave
cmp
sub
ret
cwde
push
xlat
jmp
and
sbb
xor
test
sub
xlat
sti
clc
lods
shl
(bad)
stos
push
clc
test
mov
push
rol
mov
outs
scas
mov
loope
sub
jg
aam
mov
jmp
(bad)
dec
stc
pop
jge
inc
or
movs
mov
sub
jge
out
jp
and
cmc
test
push
and
xor
mov
mov
out
jnp
cmp
mov
jne
pushf
jecxz
mov
(bad)
sub
xchg
xchg
imul
(bad)
(bad)
jle
js
lock
push
aaa
test
test
jle
sub
fldenv
das
pop
and
inc
(bad)
pop
int
jno
push
or
xchg
xchg
adc
inc
mov
push
adc
and
mov
sbb
cmp
mov
jp
out
cmps
ret
mov
add
retf
sahf
xor
jne
test
sbb
mul
jmp
and
std
mov
jp
test
les
movs
inc
pop
cdq
sbb
retf
or
mov
jecxz
stos
pop
enter
das
pop
cmp
adc
fisttp
jge
aas
xchg
pop
pushw
into
pop
sar
pop
stos
push
aas
inc
mov
lock
add
jae
push
xchg
xor
mov
jp
popf
(bad)
mov
ja
fadd
or
jo
hlt
sti
add
dec
inc
je
ds
lock
addr16
adc
mov
gs
pop
add
retf
cmc
dec
loop
test
stos
loope
sub
mov
or
out
in
pop
jle
fdivr
push
into
sub
(bad)
sti
mov
mov
dec
repnz
inc
pop
mov
xchg
mov
pop
cmps
fnstenv
(bad)
pop
ds
pop
out
adc
pop
cmc
je
mov
sub
mov
or
inc
aaa
jnp
imul
mov
adc
setg
mov
cmp
dec
or
stos
adc
stos
dec
inc
jle
pop
fisub
clc
mov
push
dec
std
sbb
xchg
mov
or
jno
xor
sub
cmp
div
popf
addr16
ins
aad
enter
sub
mov
dec
jl
mov
aas
gs
int
sar
mov
dec
ficom
and
push
mov
es
adc
jnp
and
fldenv
xor
jg
stos
imul
ins
cmc
sub
jmp
sub
lahf
(bad)
cmp
cdq
int3
inc
sub
repz
pushf
ret
lods
and
lock
add
dec
loopne
xor
dec
mov
iret
mov
xor
sbb
and
dec
inc
jp
out
loop
movs
jbe
mov
sbb
sbb
dec
cmp
aam
mov
jno
rcl
xchg
addr16
xchg
and
jg
sti
inc
xchg
lahf
adc
push
push
xor
call
mov
or
mov
bound
in
mov
lods
and
dec
cdq
xor
cs
cmp
xchg
jecxz
pop
cmp
sbb
xor
jne
popf
imul
lods
ror
iret
popa
out
or
cmp
inc
add
xor
sbb
rcr
call
stos
sbb
int
scas
dec
jae
mov
adc
sub
jmp
pop
hlt
mov
movs
dec
dec
imul
cmp
sbb
repz
imul
inc
xchg
mov
add
and
add
push
jmp
push
mov
adc
movs
inc
jno
or
xlat
and
sub
mov
scas
dec
mov
add
lahf
stos
xor
pop
sar
sub
leave
repz
movs
fsubr
mov
xchg
pop
pop
jnp
adc
mov
scas
js
xchg
jmp
dec
mov
adc
add
push
popa
xchg
cmp
test
movs
aad
arpl
jb
mov
outs
inc
cmp
lock
sbb
mov
sbb
hlt
or
add
add
retf
sbb
inc
ret
stos
jmp
int3
das
out
mov
sbb
sbb
jge
jmp
adc
inc
xor
call
push
sbb
add
popf
sbb
or
(bad)
gs
jecxz
sub
adc
pop
sub
call
pushf
popa
out
sbb
sub
jmp
jmp
push
inc
dec
adc
in
push
or
imul
add
mov
in
mov
inc
dec
aas
jecxz
sub
mov
push
inc
test
(bad)
or
rol
arpl
xor
mov
(bad)
jge
push
and
pop
or
xlat
stos
jne
data16
rcr
mov
js
lahf
es
imul
stc
cmp
or
xchg
in
push
mov
test
and
ficom
cwde
pop
or
mov
fild
mov
in
int3
in
jmp
retf
dec
inc
cmps
xor
jp
iret
fwait
addr16
inc
imul
lods
push
pop
mov
gs
or
test
js
iret
xchg
jg
and
cmp
ficom
imul
mov
pop
xchg
mov
pop
add
cmp
in
hlt
jae
pop
scas
push
mov
fmul
fdiv
push
ss
fninit
sub
mov
fisttp
or
(bad)
mov
fsub
push
mov
mov
pop
mov
mov
and
dec
xchg
(bad)
sub
mov
push
jmp
fstp
test
xchg
test
dec
aas
(bad)
xchg
cmp
mov
sbb
(bad)
into
ins
mov
cmp
(bad)
imul
sub
inc
dec
not
sub
mov
fadd
xchg
test
xlat
mov
cwde
push
lock
aad
lahf
dec
push
or
jbe
hlt
mov
sub
es
xchg
lahf
sub
mov
daa
mov
fdivr
lock
pop
push
adc
movs
push
xchg
shl
inc
pop
push
out
repz
inc
es
mov
movs
dec
xor
call
fwait
jb
add
mov
sbb
in
loop
(bad)
xor
sbb
pop
push
adc
in
movs
jge
cdq
add
fwait
cmp
mov
fucomi
movs
test
je
mov
daa
fnsave
ss
aad
jmp
xor
and
ret
mov
sbb
dec
push
cwde
jecxz
sbb
pop
lods
xchg
sub
cli
out
inc
retf
fcomi
push
jmp
push
jae
fcomip
sbb
lahf
repnz
pushf
retf
cmp
or
shl
fld
mov
lds
xchg
test
cmp
stc
cdq
mov
pop
fnstenv
icebp
add
or
push
daa
aas
rol
out
fstp
nop
je
je
push
sub
jge
popf
mov
xor
mov
or
add
push
ror
test
and
hlt
push
or
sbb
xor
mov
inc
lds
dec
and
loop
outs
sub
sbb
add
ds
in
aas
mov
push
mov
mov
jb
mov
push
pop
sbb
dec
nop
adc
jns
les
xor
cmp
test
sub
jg
dec
lods
or
xor
pop
(bad)
xor
sahf
push
aam
out
sub
call
xor
mov
mov
enter
pop
dec
movs
dec
xor
push
mov
test
xor
js
fsubr
dec
lea
aas
js
inc
xchg
or
lods
arpl
xor
punpcklbw
enter
lea
call
sub
outs
(bad)
xor
ss
pop
cdq
popf
repnz
test
push
stc
xchg
mov
dec
mov
inc
cs
in
mov
pop
imul
adc
out
fild
push
jno
mov
fs
mov
xchg
jg
mov
repnz
leave
in
enter
dec
mov
les
mov
inc
and
retf
scas
xchg
pop
stos
xor
xchg
mov
shl
mov
mov
inc
enter
lahf
dec
dec
mov
mov
cs
jmp
fcom
mov
test
leave
push
mov
sub
test
arpl
pop
inc
(bad)
icebp
ds
or
loope
cli
xchg
dec
cwde
xchg
push
cs
mov
xchg
and
add
sbb
inc
std
xor
out
push
ja
cmp
sar
cmp
rol
call
outs
or
lods
nop
enter
fisub
xor
retf
pop
cmp
retf
inc
mov
sbb
loop
mov
mov
sbb
xor
pusha
popf
mov
sbb
mov
icebp
addr16
mov
sub
dec
fdiv
sub
pop
lods
cwde
xchg
fdiv
jo
xor
aad
int
pop
call
shr
dec
and
mov
jno
mov
push
mov
int3
inc
cmp
arpl
cld
dec
int3
dec
call
jecxz
push
cmps
mov
cmp
addr16
cs
adc
or
xor
pop
aaa
rcl
xor
add
cmp
mov
imul
jge
push
out
iret
mov
jmp
xchg
mov
xchg
cmps
cld
jg
pop
retf
xchg
xchg
mov
loope
xor
test
jmp
push
outs
sbb
icebp
xchg
lea
cwde
sbb
jbe
aas
sub
mov
arpl
adc
xor
cmps
push
push
jns
cmp
cs
lods
sub
cwde
test
outs
vrsqrtps
fistp
imul
push
test
call
stos
and
and
fdivr
popa
mov
mov
out
call
dec
xchg
cmp
dec
xor
add
push
jp
mov
sbb
jae
outs
push
leave
imul
xchg
add
sti
jbe
(bad)
loope
jg
pop
lods
mov
mov
sbb
mov
cmps
fsubr
fucomi
shr
enter
outs
pop
adc
(bad)
ror
xor
hlt
cdq
xor
inc
push
dec
punpcklbw
cmp
mov
or
sbb
lahf
jo
les
and
push
add
xchg
sub
mov
mov
les
dec
mov
mov
in
sub
out
xchg
sahf
dec
mov
xor
xchg
dec
shl
mov
mov
loopne
arpl
(bad)
fst
xor
movs
adc
dec
lock
adc
mov
push
pop
lock
fwait
aaa
jae
out
or
pop
cmps
push
nop
or
in
in
fwait
cmp
xor
dec
test
iret
add
ss
jbe
inc
xchg
neg
fwait
or
mov
inc
jp
jge
imul
or
mov
sbb
pop
fist
out
int3
add
push
jle
xor
sbb
adc
mov
mov
xchg
aaa
add
jnp
mov
dec
pop
push
ins
addr16
lock
in
mov
test
push
shl
adc
inc
adc
outs
mov
jbe
mov
sub
sub
mov
jg
mov
lea
clc
sbb
lock
cwde
loope
leave
aas
ins
aas
xor
call
push
xchg
mov
test
repz
xor
test
out
push
jne
retf
push
addr16
fs
push
lds
cmovno
add
call
lea
mov
inc
or
pop
xchg
jle
pop
movs
add
cmps
mov
pop
inc
mov
fdivr
adc
mov
stc
ins
inc
into
mov
mov
jbe
loop
pop
cmp
xchg
pop
(bad)
(bad)
add
add
ds
pop
mov
adc
mov
inc
(bad)
loopne
loop
dec
mov
imul
mov
sar
jg
seto
and
popf
mov
sub
clc
add
test
sbb
xor
enter
mov
pop
push
sti
push
lods
jecxz
lods
sbb
inc
xchg
and
iretw
adc
nop
in
into
mov
pop
mov
inc
std
jbe
test
push
mov
call
mov
jns
(bad)
dec
mov
sahf
mov
fiadd
mov
sub
iret
cmp
outs
xchg
mov
test
xchg
popa
jmp
xor
mov
out
mov
repnz
call
cmc
cwde
jnp
out
cmp
aas
cmp
dec
inc
mov
cwde
xchg
repz
shr
dec
dec
mov
adc
mul
jecxz
and
or
imul
leave
mov
fldenv
jne
out
push
xchg
inc
shl
mov
xor
fnstenv
(bad)
sub
pop
into
mov
shl
inc
push
mov
neg
xchg
stc
inc
leave
aad
cmp
mov
sub
addr16
pop
outs
xor
dec
into
mov
cmc
stc
adc
jmp
cwde
(bad)
push
jecxz
int3
movs
int3
inc
enter
lahf
js
push
test
ins
cmp
sahf
push
pusha
fwait
xor
fs
xchg
inc
repz
xor
sub
iret
xchg
fwait
lds
inc
mov
sub
arpl
movs
mov
jno
test
das
aaa
jae
sub
(bad)
lods
retf
mov
xchg
iret
jmp
mov
div
sbb
push
popa
lods
lock
lahf
pop
cdq
stc
xchg
cmps
jle
jl
mov
push
push
(bad)
into
lea
scas
pop
fcom
xchg
jl
jg
dec
les
test
push
and
mov
jmp
sub
fmul
mov
loop
cmps
cwde
cmps
jns
inc
or
cs
ja
adc
xor
pop
mov
outs
xchg
(bad)
jbe
jecxz
and
es
fnstenv
in
pop
sub
push
ins
xchg
push
icebp
es
fs
in
push
push
mov
es
push
fldcw
nop
aad
push
sbb
out
mov
mov
mov
xchg
mov
rol
mov
xor
push
jmp
xor
aas
jge
stos
cmc
ret
addr16
cwde
sub
or
out
jae
push
(bad)
dec
sahf
test
jae
rep
jle
or
loop
inc
sbb
call
ret
pop
xchg
div
inc
fnstsw
je
inc
xor
adc
push
out
jnp
mov
retf
loope
sub
es
neg
pop
pop
cld
mov
enter
inc
push
push
sub
xchg
ins
fsubr
imul
mov
lods
xchg
jb
xchg
mov
mov
ins
lea
jge
pop
lods
in
retf
dec
into
push
sub
jmp
cmp
cmps
lahf
push
icebp
rcr
jno
jmp
or
neg
xor
pop
cmp
rcl
ret
cmc
(bad)
arpl
pop
xchg
icebp
mov
pop
xor
sub
in
sub
ss
cli
out
push
test
leave
popa
mov
add
test
nop
mov
pushf
fimul
cs
mov
mov
lods
out
push
adc
pop
cmc
repz
mov
xchg
pop
cs
xchg
iret
jae
or
call
mov
mov
jle
ror
sahf
test
push
add
jbe
shr
adc
fdivr
xchg
inc
retf
imul
jbe
out
in
push
sti
(bad)
jge
xor
jmp
ins
add
push
or
clc
mov
imul
mov
mov
cmp
jo
cli
ins
rol
mov
je
xchg
mov
xchg
jnp
fst
repz
dec
pusha
mov
les
add
push
out
fadd
popf
gs
xchg
ja
sbb
cmp
adc
pop
nop
fcmovbe
les
loop
push
push
xchg
mov
lods
movs
imul
adc
xchg
cmp
and
mov
ret
mov
sub
popf
enter
movs
mov
repz
es
xchg
xchg
and
jne
sbb
stos
adc
js
push
jle
adc
enter
push
cmp
in
and
add
adc
add
cwde
test
inc
add
pop
sbb
cmc
hlt
sbb
sbb
mov
adc
jmp
(bad)
out
and
and
xchg
cmp
mov
imul
jbe
repz
psubusw
lods
push
lock
mov
rcr
adc
add
movs
sub
test
imul
ret
data16
xor
pop
enter
dec
(bad)
scas
mov
sub
dec
shr
ins
(bad)
and
imul
inc
loopne
mov
inc
out
in
push
sbb
pop
or
sub
mov
push
sbb
cdq
enter
xor
xchg
div
add
or
pop
jg
and
mov
lds
(bad)
jmp
(bad)
imul
mov
inc
cld
call
aam
icebp
jno
inc
or
mov
xlat
xor
loopne
stc
imul
xchg
rcl
sbb
push
mov
mov
stos
fmul
pop
pop
inc
(bad)
sti
das
add
outs
icebp
adc
mov
test
cmp
loopne
sub
mov
xor
hlt
imul
mov
loope
inc
int
mov
iret
cmp
loopne
mov
pop
mov
push
inc
lahf
push
nop
push
sbb
inc
xor
cmp
daa
cmp
xchg
daa
movs
mov
mov
jne
mov
jg
call
loopne
pop
add
fiadd
jcxz
leave
inc
rol
adc
rcl
sub
mov
jnp
ds
and
cwde
shl
pop
stos
mov
cmp
leave
rcr
add
bound
outs
or
stos
jnp
xchg
and
add
pusha
mov
loop
les
rol
adc
in
pushf
mov
pop
pushf
data16
int
add
mov
ins
test
pop
enter
xor
loopne
mov
xchg
sub
push
jmp
adc
pop
pop
sbb
shl
mov
sbb
jno
pushf
mov
or
dec
mov
in
sbb
in
fcmovne
mov
sbb
cmc
and
push
(bad)
jno
cmp
sbb
xor
loope
scas
test
outs
aad
sub
push
lock
outs
pop
sbb
inc
(bad)
retf
jno
pop
lods
xlat
hlt
adc
test
ja
int
out
lds
popa
ins
jmp
cmc
rol
mov
mov
push
cs
lock
ficomp
xor
iret
or
xor
pop
es
pop
das
fisub
cmp
cmps
mov
js
xchg
leave
pop
xlat
add
inc
xchg
movs
idiv
push
inc
jmp
(bad)
add
iret
cmp
mov
out
cli
sbb
pop
enter
xchg
pop
das
pusha
sbb
mov
mov
inc
shr
rol
push
xor
push
div
sbb
push
sub
jge
push
sbb
sub
(bad)
jg
add
inc
cmc
clc
sbb
add
pushf
push
sub
jmp
mov
add
into
dec
inc
add
inc
sbb
jle
push
jmp
sbb
test
cwde
inc
ror
dec
inc
bound
mov
mov
inc
jne
dec
xchg
pop
push
jbe
push
push
les
sub
jmp
jmp
dec
and
pop
xchg
js
aas
movs
stos
mov
inc
es
dec
ins
fisub
test
mov
xor
stc
nop
data16
sub
popf
pop
pop
sahf
pop
ds
and
pmullw
in
pop
sub
and
pushf
push
and
and
and
ror
neg
sahf
xchg
pop
jno
das
mov
stos
or
das
jl
test
jns
lods
scas
stos
push
mov
(bad)
xchg
retf
ins
loop
ins
aas
add
not
sbb
push
test
mov
bound
aam
fwait
rcr
movs
(bad)
push
(bad)
jbe
mov
add
call
out
pop
in
jo
mov
push
sbb
aam
mov
mov
cmps
jo
in
inc
fadd
sub
scas
jecxz
jp
fdivrp
inc
in
xchg
add
leave
xor
mov
sub
inc
dec
mov
outs
div
xor
xor
pop
xchg
int3
xor
fs
icebp
jl
loop
mov
jnp
sub
in
jl
jno
mov
loop
movs
mov
out
mov
out
xor
movs
int3
mov
inc
add
inc
push
jbe
(bad)
mov
addr16
mov
and
sub
push
repnz
sub
iret
cmp
(bad)
fnstsw
loop
call
inc
inc
das
js
popa
enter
and
int3
push
mov
imul
cs
add
inc
xchg
inc
and
(bad)
(bad)
(bad)
push
xchg
pop
rol
pop
mov
push
ret
xchg
jns
aas
movs
mov
popf
cld
in
push
push
xor
lock
jb
cld
jns
inc
pop
adc
clc
test
jp
adc
daa
outs
inc
adc
ja
pop
mov
bound
mov
pop
inc
loopne
adc
scas
enter
lock
xchg
jae
cmps
jl
add
dec
leave
loop
inc
mov
iret
sub
pop
in
jmp
dec
xchg
test
arpl
cmc
ins
mov
rcr
(bad)
fidivr
mov
sub
dec
or
aas
adc
inc
scas
nop
dec
dec
pop
mov
adc
inc
mov
dec
aam
ret
inc
push
imul
xchg
call
fistp
jmp
rcl
retf
mov
mov
and
dec
stc
push
dec
test
mov
inc
mov
shr
repz
mov
mov
add
aas
test
ja
repz
push
dec
inc
add
cmp
ret
ds
push
mov
adc
imul
mov
pop
sbb
imul
pop
mov
mov
dec
(bad)
jl
retf
xchg
clc
mov
fstp
pop
cmp
rol
cmps
outs
mov
iret
jae
jnp
js
mov
ins
ret
mov
out
sahf
enter
and
sub
jne
mov
jns
loopne
shr
mov
(bad)
fbstp
cmc
jns
mov
xchg
mov
or
imul
retf
les
jl
out
and
fld
xchg
movs
jnp
popa
ja
cld
js
or
addr16
sahf
fcom
push
pop
aas
mov
scas
jb
dec
cwde
inc
ja
pop
mov
sbb
fst
dec
mov
das
and
xor
add
add
xor
mov
mov
jge
pushaw
stos
(bad)
pop
jne
push
sub
aad
sbb
pop
neg
mov
pop
das
test
rol
lea
xor
sbb
fst
push
test
xor
jno
inc
inc
mul
cwde
(bad)
mov
imul
and
lock
daa
add
call
jmp
loop
in
loope
dec
out
wrmsr
out
aad
mov
aaa
out
cmc
pusha
mov
lods
sub
jne
jb
jmp
cli
mov
ret
sti
enter
push
inc
repnz
ja
ja
jl
xchg
(bad)
xchg
into
add
call
test
push
(bad)
popa
and
sti
dec
push
sub
(bad)
ficom
jbe
shl
stc
jo
add
test
and
dec
inc
or
arpl
mov
adc
dec
fistp
add
sub
jg
into
pusha
pop
sahf
aad
fcom
ins
push
(bad)
daa
dec
hlt
mov
rcr
call
das
pop
ins
repz
test
lds
sbb
not
aad
out
xchg
cmp
mov
dec
aad
inc
jmp
scas
pop
cdq
add
and
xchg
push
movs
idiv
mov
xor
pop
and
retf
jbe
inc
push
pop
push
arpl
loopne
and
fisubr
loope
pop
cli
inc
push
pop
pop
test
and
lods
xor
and
fadd
add
(bad)
sti
pop
adc
std
and
data16
div
dec
mov
adc
scas
(bad)
mov
addr16
int3
add
cmps
cmp
add
sub
mov
movs
jne
xor
add
jne
pop
stc
lds
push
rol
inc
xchg
adc
jno
leave
dec
(bad)
mov
rcl
adc
adc
sti
mov
inc
xchg
in
add
add
xchg
push
(bad)
cmp
ret
and
test
js
xchg
jl
dec
and
jno
sbb
or
jge
jne
and
(bad)
ss
xchg
imul
xchg
std
nop
ror
stc
pop
jbe
mov
sti
dec
add
mov
ret
fadd
aam
mov
cld
jge
jnp
adc
xchg
fwait
hlt
add
lea
ficom
nop
fiadd
in
push
jmp
(bad)
mov
lea
sub
mov
imul
dec
xchg
and
fistp
xor
ds
shr
cld
(bad)
mov
adc
dec
or
sbb
lods
pop
(bad)
fld
xor
push
mul
(bad)
cli
mov
shl
(bad)
(bad)
jns
pop
xchg
inc
imul
add
(bad)
cmp
mov
(bad)
std
pop
(bad)
lahf
cwde
fwait
mov
pop
test
scas
inc
arpl
jmp
xor
fdivr
jne
dec
ja
cld
popa
fdiv
shr
mov
lds
das
ja
inc
sahf
aam
popa
cld
fsubp
sbb
data16
mov
mov
adc
sbb
in
dec
fist
loope
adc
out
loopne
sahf
push
push
xchg
or
xchg
mov
into
lea
aaa
jp
mov
retf
rcr
mov
cdq
mov
sahf
(bad)
mov
lahf
stc
shl
neg
ss
cmc
sub
pop
push
scas
pop
sub
mov
mov
add
cmp
inc
dec
out
ret
sub
scas
nop
and
shl
in
in
loop
cmp
push
in
das
jle
fldcw
jno
jno
daa
xor
outs
or
in
inc
mov
nop
mov
repz
cdq
adc
ret
lea
cwde
mov
lahf
stc
aas
cld
mov
or
arpl
add
push
xlat
adc
retf
scas
inc
adc
jno
cmc
push
lds
enter
(bad)
(bad)
sub
lds
and
push
retf
loope
xchg
cmps
mov
adc
lods
ds
mov
mov
xchg
sub
pop
(bad)
dec
xor
retf
add
ss
pop
adc
idiv
neg
mov
fild
arpl
mov
mov
imul
aad
std
push
neg
mul
shr
jbe
int
(bad)
mov
mov
and
mov
ret
mov
inc
cli
inc
mov
int3
sbb
jb
pop
loopne
mov
cld
xlat
or
gs
cmp
aam
sub
mov
neg
dec
popf
imul
mov
repz
fsubr
push
push
cmp
daa
push
rcl
out
push
arpl
sub
(bad)
sbb
dec
or
test
and
or
inc
jl
or
test
jge
sub
dec
ret
or
movs
dec
jmp
and
(bad)
jmp
add
push
push
inc
imul
push
hlt
xchg
adc
pop
imul
jmp
lahf
add
sbb
dec
xchg
add
pop
sbb
cli
enter
cmps
xchg
es
xor
js
cmps
cmp
fisub
pop
dec
or
cli
mov
or
gs
lds
inc
sbb
cld
jecxz
mov
xor
dec
add
lea
in
out
push
add
sub
xchg
aam
add
out
or
lods
hlt
fimul
std
jne
pop
xor
mov
pop
loop
scas
push
push
mov
jnp
movs
aas
cwde
adc
call
mov
imul
inc
mov
scas
out
push
inc
(bad)
loop
jo
aas
push
cmp
jg
popf
mov
inc
pop
sbb
ret
mov
btr
inc
icebp
sbb
sbb
div
cmp
cmp
mov
sub
adc
cli
lea
inc
cmps
or
pop
dec
push
test
out
sub
retf
mov
je
out
into
ins
and
iret
ja
mov
cmp
loop
or
cmp
pop
mov
mov
xor
imul
adc
add
cmp
fdivr
push
div
ja
mov
test
outs
nop
out
bound
pop
inc
and
cdq
in
xchg
dec
inc
mov
add
lods
out
shr
add
idiv
retf
std
movs
aam
or
xchg
fistp
cmp
jne
add
arpl
mov
stc
pop
cmp
add
xchg
loop
call
stos
mov
cmp
jecxz
mov
dec
call
inc
mov
mov
repz
push
movs
and
scas
lods
cmp
ds
mov
lahf
or
or
gs
sbb
nop
loop
dec
and
dec
and
mov
sub
loopne
cmp
cmp
sub
ins
xor
mov
dec
dec
or
rcr
popa
outs
adc
sbb
icebp
xchg
popf
xor
or
addr16
loope
sub
loope
cmc
sbb
lods
dec
cs
jmp
cmp
pop
shr
sub
xchg
call
loopne
xor
adc
pop
add
sbb
xchg
in
inc
jmp
fsubrp
int
test
loope
mov
mov
(bad)
repz
mov
ds
enter
movs
push
sub
scas
clc
and
add
mov
push
(bad)
sbb
fs
pusha
mov
int
pop
stos
mov
dec
adc
aaa
loopne
xchg
into
inc
cmp
rol
ret
out
sub
and
aas
cld
movs
inc
in
imul
pop
in
js
int3
sbb
out
cli
or
mov
push
dec
and
mov
or
clc
dec
js
inc
ror
mov
pusha
sub
loop
xchg
into
(bad)
xor
jmp
cmc
dec
sbb
push
mov
rcr
test
sub
mov
xchg
adc
mov
xchg
stos
mov
lods
imul
gs
add
mov
and
gs
mov
xchg
retf
aas
sti
ins
out
push
jae
push
in
jbe
xlat
mov
adc
push
mov
test
push
mov
cmps
(bad)
mov
push
adc
sbb
test
addr16
pop
or
add
xor
mov
out
pop
xchg
das
or
fmul
daa
inc
std
mov
and
xchg
push
test
sbb
inc
sbb
jle
xor
sti
scas
fild
pusha
sti
lahf
and
or
cmp
push
(bad)
frstor
call
inc
fwait
push
clc
and
hlt
jb
aam
cdq
lods
ret
jecxz
push
adc
jmp
lahf
std
outs
mov
inc
inc
test
mov
sqrtps
adc
mov
jg
xor
cmp
scas
inc
es
adc
test
xor
mov
sub
cmps
ficom
outs
jbe
mov
jecxz
out
add
sbb
jno
sbb
setns
sub
or
xchg
xchg
mov
imul
cmp
fist
mov
mov
dec
rcr
int3
pop
sahf
retf
push
nop
xor
jg
xchg
stc
add
cli
mov
push
fs
es
clc
mov
and
fild
shl
mov
je
retf
movs
jns
mov
fistp
fldcw
xor
pushf
lods
pop
fsubr
sti
adc
mov
ds
jnp
jmp
push
add
push
rcl
sub
pop
scas
cmp
nop
iret
jno
push
xchg
fcmovu
mov
sar
pushf
fisttp
scas
jo
loope
sbb
sub
xor
shr
jmp
sbb
(bad)
xchg
les
dec
outs
and
sahf
mov
movs
loopne
xchg
test
popa
xchg
retf
mov
mov
add
nop
xor
scas
call
pop
sub
and
cmps
jmp
out
ror
daa
xchg
lock
or
push
xchg
bound
or
mov
xchg
fst
pop
loopne
out
xchg
cwde
movs
dec
push
mov
xor
jmp
das
jge
rcr
sbb
iret
jge
inc
inc
(bad)
mov
add
jmp
inc
ja
rol
sbb
mov
in
(bad)
repnz
lock
or
xchg
repnz
je
mov
adc
cmp
sub
fld
movs
dec
xchg
push
push
rcl
dec
inc
and
aad
dec
xchg
jge
cwde
xchg
ret
fimul
fist
push
adc
stc
adc
loope
push
and
lods
pop
ficom
lods
add
pop
aam
mov
ja
clc
push
push
es
hlt
cmp
add
rcl
sbb
into
gs
ins
jae
loopne
mov
arpl
and
sbb
sbb
sub
mov
daa
ret
pusha
mov
mov
int3
xor
cli
scas
lds
fistp
daa
ror
or
inc
sub
(bad)
outs
push
and
adc
bound
dec
dec
adc
adc
cdq
cld
or
call
jp
sti
popf
scas
cmc
mov
or
mov
xor
and
data16
mov
sti
inc
rol
sbb
or
mov
cld
in
mov
add
ret
les
das
pop
test
test
in
in
push
jmp
sahf
loope
push
inc
dec
mov
or
sahf
jbe
cmp
jle
lea
sbb
rcr
idiv
retf
pop
pop
fstp
pop
add
mov
(bad)
adc
ret
aaa
scas
mov
movs
mov
popa
jne
inc
ficomp
sbb
mov
cli
push
push
jne
popf
sub
outs
mov
aas
sub
loope
imul
or
fdivrp
cld
js
cmp
mov
rcl
cld
jle
cmp
stc
pop
mov
xor
int3
xchg
fld
mov
stc
inc
movs
in
jnp
push
and
sbb
scas
adc
adc
jmp
rcr
imul
sub
loopne
adc
mov
push
push
inc
mul
test
pop
fwait
mov
pop
xchg
cmp
dec
xchg
cdq
fist
test
loop
mov
mov
jg
push
(bad)
push
and
jo
mov
adc
xor
push
popa
pop
sahf
mov
jnp
stos
jbe
mov
or
jmp
xor
fist
aad
clc
sbb
mov
push
or
ret
rcr
add
inc
out
fwait
xor
jbe
mov
xlat
fisttp
push
lods
cmp
mov
mov
test
aad
cmp
and
pop
mov
dec
popa
add
aad
mov
cmps
lods
daa
xchg
repnz
or
adc
retf
pop
retf
add
pop
std
(bad)
jl
mov
lds
xor
in
add
arpl
add
in
xor
push
jmp
loope
mov
popa
mov
inc
iret
push
ret
inc
dec
sbb
loopne
push
jle
adc
js
sub
inc
fld
test
loopne
dec
and
mov
mov
loop
mov
xor
pop
ins
xor
xchg
inc
dec
ja
dec
sahf
es
movs
mov
or
jno
int
mov
jb
lods
adc
addr16
(bad)
jmp
rcl
cdq
mov
loop
shr
and
mov
inc
xor
ficomp
sub
adc
add
adc
sub
mov
mov
imul
in
out
pusha
stc
test
int
sbb
mov
out
and
in
stos
mov
movs
sar
stos
adc
arpl
dec
mov
pusha
out
aas
push
sbb
ret
xchg
rcr
dec
xor
inc
out
retf
hlt
inc
mov
rol
cmp
jb
sub
scas
dec
cmp
mov
ss
ss
sahf
or
inc
lods
push
jb
in
adc
fisttp
das
mov
mov
retf
out
leave
mov
iret
xchg
add
pop
mov
mov
sbb
jb
or
pushf
repz
pop
inc
cwde
into
jmp
dec
fwait
xor
daa
loop
xor
lahf
push
sub
dec
mov
test
sub
stos
call
mov
lahf
pop
icebp
in
or
fldcw
and
jns
add
lock
pop
fwait
mov
adc
xchg
sbb
inc
and
jge
pop
arpl
ret
popf
or
jmp
push
aas
scas
das
lods
mov
fst
cmp
fsubr
push
dec
test
shl
sahf
pop
push
dec
pushf
(bad)
imul
inc
cmp
jmp
push
and
sti
js
add
cwde
aad
mov
or
ins
mov
sbb
mov
sub
enter
xchg
call
clc
out
ss
xor
scas
imul
and
mov
mov
mov
gs
aas
xchg
lods
fucom
pop
repz
out
out
sub
xchg
test
repnz
bound
(bad)
test
inc
add
mov
jnp
xchg
sub
mov
frstor
mov
dec
dec
lock
scas
repnz
je
clc
xlat
cwde
mov
sti
mov
test
jnp
lock
(bad)
test
loope
xor
pop
ja
and
push
jnp
stc
mov
daa
or
sub
dec
cmps
and
mov
in
dec
xchg
jbe
aas
(bad)
push
inc
stos
test
dec
and
popf
aam
add
add
nop
sub
adc
mov
imul
inc
push
neg
out
dec
enter
mov
pop
dec
push
stos
repnz
in
loopne
cli
mov
jb
sbb
(bad)
xor
arpl
cdq
inc
add
mov
fdiv
xchg
mov
out
rcl
jmp
add
mov
push
mov
jb
inc
in
sahf
xor
mov
adc
popf
xor
adc
mov
xor
cmps
push
cmp
aad
dec
pusha
dec
mov
mov
cmps
icebp
jg
dec
add
enter
pop
cld
jb
sar
cdq
pop
jae
cmp
pop
and
rol
popf
mov
mov
nop
das
sbb
pop
xchg
mov
inc
sub
xor
mov
retf
lds
jno
test
pop
mov
lea
push
adc
jp
mov
stos
sbb
movs
xchg
ficomp
push
xchg
daa
dec
pop
or
dec
(bad)
jmp
push
add
adc
rcl
scas
mov
div
popf
pop
stos
push
xchg
inc
mov
bound
cmp
cmovae
cmc
push
push
pusha
add
lods
xchg
(bad)
adc
jle
jl
fiadd
mov
pop
test
scas
rol
cmp
xchg
cmp
dec
jo
add
inc
nop
fwait
cmp
cwde
lods
push
cwde
jmp
(bad)
sar
mov
mov
push
pop
test
add
jnp
mov
sbb
or
shl
jecxz
(bad)
lds
sbb
jge
adc
mov
(bad)
stos
ins
test
es
popa
ret
dec
scas
mov
adc
xchg
adc
fnstsw
cmp
bound
jle
mov
aaa
adc
call
jmp
and
aam
imul
data16
jp
sub
(bad)
loope
imul
pop
sub
(bad)
lock
dec
loope
mov
mov
and
fisubr
or
loope
inc
pop
xor
clc
jo
push
mov
(bad)
es
mov
mov
rol
pop
pop
xchg
mov
loope
rcl
cmp
add
test
jge
add
jns
and
sub
xchg
aas
test
xlat
repnz
cmp
call
cli
int3
rcl
in
cmp
out
test
iret
and
mov
sub
lea
rcr
mov
mov
or
mov
push
pop
lahf
cmc
push
pop
mov
shl
in
aad
sub
mov
jp
cdq
ret
clc
and
retf
or
addr16
retf
inc
pushaw
aaa
and
jbe
and
inc
movs
out
inc
test
push
pop
adc
xlat
retf
jo
ror
ror
lahf
pop
sub
xor
push
jmp
aam
xchg
lods
mov
cmp
add
sbb
aad
sbb
mov
jns
mov
mov
pop
and
dec
pop
cli
inc
mov
daa
frstor
adc
(bad)
js
xor
(bad)
icebp
pop
jns
push
bound
lock
jb
mov
mov
xlat
(bad)
sbb
mov
mov
xchg
mov
adc
sub
neg
push
mov
mov
call
loope
xor
ret
ins
jle
push
adc
fisttp
mov
stos
lds
pop
dec
fdivr
dec
test
xchg
jae
sub
xchg
in
in
xchg
cmp
call
mov
pop
lea
and
cmp
mov
jb
fisub
mov
pop
and
in
cmp
mov
push
mov
inc
adc
(bad)
sbb
test
push
es
das
retf
test
xor
popf
daa
push
cdq
repnz
and
cmp
sbb
mov
movs
and
xor
mov
ins
lock
(bad)
jp
push
(bad)
jge
lahf
pop
outs
lods
lea
sub
cmp
cmp
adc
add
cmp
mov
add
or
lods
pop
int
cmp
push
sub
test
cmp
jp
mov
sbb
shr
out
dec
(bad)
mov
sti
out
mov
rcr
add
jl
add
push
pusha
aam
fsub
and
(bad)
mov
sbb
inc
mov
jne
and
std
inc
add
cmps
je
mov
mov
bound
aad
push
and
(bad)
je
mov
test
cld
gs
enter
out
aad
push
jp
or
push
dec
(bad)
ficomp
inc
inc
pop
aad
imul
push
jmp
out
add
jmp
clc
je
stc
out
popa
fisubr
push
jae
adc
add
pop
pop
sbb
and
adc
xchg
arpl
setnp
loop
mov
daa
lea
sub
test
loope
jmp
ret
pop
(bad)
dec
pushf
hlt
push
jno
xchg
sbb
mov
or
mov
mov
stos
ins
push
jge
in
adc
cmps
stc
imul
mov
retf
aad
stc
mov
aad
push
outs
pop
ret
nop
cs
ret
push
fdivr
je
fnstsw
enter
inc
add
jl
addr16
lock
xor
and
mov
dec
ret
gs
enter
sbb
mov
(bad)
test
arpl
iret
or
sbb
movs
add
add
pop
mov
sub
and
fsub
inc
dec
vcvtps2dq
or
fdiv
mov
jb
pop
loopne
int
push
scas
ds
clc
call
dec
jb
inc
out
cmp
psrad
dec
dec
out
rol
cmp
xor
cs
jmp
shl
call
rcr
xrelease
jge
push
sti
mov
nop
inc
mov
cmps
pop
popf
push
mov
nop
out
cmp
dec
or
mov
std
(bad)
sbb
and
div
aam
mov
(bad)
xor
jge
test
mov
mov
inc
dec
(bad)
cmc
cdq
jl
je
push
adc
out
add
dec
sub
push
stc
ins
imul
adc
(bad)
stos
addr16
jl
sbb
out
xchg
dec
or
adc
xchg
mov
mov
add
or
pushf
(bad)
and
pop
push
jb
jb
int
mov
adc
push
mov
fidiv
ins
pushf
lea
mov
adc
add
out
add
pop
push
fs
out
fsincos
pop
add
sar
cs
fstp
sub
adc
push
or
stos
inc
mov
gs
mov
fcomp
stc
clc
mov
sub
mov
stos
jo
mov
(bad)
imul
or
xchg
jmp
(bad)
stc
jle
sub
mov
dec
jmp
outs
arpl
imul
repnz
mov
outs
sahf
test
fidiv
mov
mov
push
mov
pop
into
inc
in
(bad)
fsubr
ins
int
mov
ror
aam
add
imul
xor
sbb
test
mov
cld
pop
dec
adc
jp
mov
mov
push
or
inc
icebp
sub
xor
imul
mov
daa
jg
sub
neg
cmp
sub
shl
xor
or
pusha
dec
rol
adc
je
or
jmp
mov
mov
mov
shl
lea
ffreep
cwde
sub
sahf
mov
mov
aaa
push
push
mov
shr
test
jno
ins
mov
mov
shl
out
fucomip
(bad)
cmp
xor
mov
stos
std
stos
jno
sbb
push
adc
jl
pop
cmp
stc
test
syscall
sbb
dec
mov
or
js
pop
mov
xor
push
cmc
mov
shl
mov
xor
dec
pop
pusha
gs
cmp
repnz
jecxz
stc
add
pop
cmps
lahf
in
cld
retf
call
cmp
retf
enter
sbb
jae
inc
ja
mov
add
sub
mov
dec
push
bound
mov
nop
inc
mov
mov
inc
push
sub
and
push
inc
mov
pop
bound
sub
pop
enter
jb
xor
mov
xor
xor
retf
mov
stc
(bad)
in
das
out
fcomp
xor
sti
sbb
retf
sti
or
pop
jl
adc
lea
mov
lods
in
sbb
aas
cmps
loop
lea
out
sets
push
push
out
xor
fidivr
xchg
jmp
ret
xor
xchg
imul
pop
push
popf
cli
jg
shr
dec
into
jo
ret
mov
mov
xchg
cs
adc
jle
push
out
jae
arpl
arpl
xchg
mov
in
rcr
rol
stos
jg
mov
pusha
sub
cmp
sbb
cli
xchg
mov
out
loope
mov
cmc
loopne
pop
xor
xchg
clc
pop
mov
stos
mov
loopne
sar
fwait
mov
xchg
inc
xchg
repnz
push
and
add
pop
mov
pop
es
sub
and
je
add
cmp
stos
gs
add
out
jb
cmp
rcl
fs
sub
jae
call
test
fucom
jbe
ins
and
xchg
jle
stos
into
xchg
icebp
repnz
fwait
sahf
leave
and
xchg
mov
pop
dec
fwait
push
lods
fdivr
xchg
jnp
mov
das
mov
rol
jmp
jge
mov
xor
retf
sbb
enter
mov
je
sub
inc
stos
mov
push
mov
mov
push
aaa
(bad)
neg
ror
jmp
loopne
mov
(bad)
and
test
inc
inc
out
mov
push
xor
pusha
or
add
mov
jg
xchg
or
and
retf
int
stc
dec
inc
int3
mov
mov
cmps
test
sahf
fsub
cwde
call
arpl
xor
mov
jbe
fnsave
push
test
jnp
mov
jle
call
test
adc
sub
mov
adc
jnp
inc
arpl
cwde
cmp
sub
inc
pop
imul
mov
jmp
test
cwde
and
push
xchg
repz
inc
enter
dec
ins
push
ret
popa
fmul
mov
fnstsw
hlt
ins
push
test
push
sub
shr
daa
test
leave
xchg
or
mov
js
sar
leave
pop
fidivr
mov
fmulp
gs
push
loope
or
xrelease
arpl
(bad)
in
inc
fstp
addr16
test
sbb
cmc
adc
push
mov
push
mov
scas
xchg
cmps
adc
lods
in
call
jns
fsubr
scas
xchg
xchg
or
(bad)
pop
fisub
xchg
push
bound
push
clc
mov
test
add
pop
fstp
cmc
icebp
int3
mov
fnstsw
ret
xchg
xchg
loopne
push
shl
push
sti
sahf
adc
not
pop
sub
sti
test
lea
in
fwait
cmp
out
lods
push
inc
xor
arpl
push
movs
scas
sub
fsub
mov
push
jnp
pop
inc
xchg
aas
inc
add
mov
ins
sub
fsubr
leave
mov
popf
in
pop
std
adc
inc
and
cmp
ins
mov
mov
xchg
sar
jmp
adc
retf
sti
(bad)
sub
mov
adc
mov
xchg
push
mov
std
test
push
jo
push
(bad)
out
add
hlt
xor
push
popa
pusha
or
pop
and
ds
scas
sub
out
call
div
push
push
loopne
cmps
out
pop
pop
mov
stos
xchg
sar
xchg
add
cmp
adc
xchg
jl
ds
idiv
mov
movs
aam
mov
push
dec
lock
and
lahf
in
sub
fld
or
push
das
push
test
cmp
aas
jecxz
loop
sbb
add
and
sub
pop
mov
mov
cwde
jo
sbb
repz
movs
jge
jmp
add
movs
and
cmp
inc
xor
movs
clc
lods
cmc
or
jnp
xor
inc
js
add
jmp
dec
xchg
mov
loop
scas
mov
push
xlat
ss
mov
mov
dec
popf
stc
mov
xor
mov
xor
jae
sti
cdq
xor
jb
xor
sti
jmp
cmp
(bad)
mov
inc
loop
std
add
out
adc
fsubr
jle
ja
inc
push
test
push
xor
pop
sbb
inc
add
sub
ror
shr
fisttp
ficom
mov
icebp
mov
imul
push
mov
movs
imul
jae
int3
fisttp
cmp
(bad)
in
push
mov
in
inc
rol
xchg
adc
pop
push
sub
retf
jb
jno
rcl
dec
pop
inc
loop
sbb
pusha
mov
jmp
(bad)
dec
pop
in
scas
pop
sub
nop
pop
inc
sub
jl
je
movs
xchg
xor
cmp
xchg
aam
or
cmps
fstp
rol
iret
cmc
outs
pop
cli
xchg
sbb
push
ret
push
pop
stc
int3
aaa
pop
int
out
jnp
inc
xchg
add
cdq
dec
and
jae
push
mov
mov
mov
or
xchg
dec
js
fsub
cwde
(bad)
stos
sar
jg
xchg
in
call
ins
lahf
add
sbb
ss
cmp
cmps
repz
xor
push
mov
scas
and
lods
aam
inc
fsub
xor
sub
mov
push
xor
pop
mov
minps
lahf
call
sbb
inc
js
inc
bsr
xchg
fist
inc
fnstcw
dec
scas
jp
aaa
retf
test
(bad)
lea
fsubr
add
out
in
cmps
lods
or
add
not
mov
jmp
jmp
mov
js
in
dec
nop
lds
clc
call
daa
aad
xor
aad
sub
mov
mov
push
xor
imul
jb
dec
adc
dec
jl
dec
or
icebp
ins
repz
fwait
icebp
mov
and
enter
mov
cmp
dec
jns
xchg
ret
push
into
mov
jmp
out
int
cld
jo
call
xor
pop
(bad)
jecxz
jle
shr
not
or
jp
xchg
add
stos
sub
adc
sub
add
cdq
fisub
cmp
fisubr
js
fxch
mov
inc
cs
mov
(bad)
pop
mov
cmc
push
inc
test
inc
push
xor
loope
mov
or
inc
xchg
stc
cmp
jmp
std
bound
test
lds
sbb
or
sbb
in
in
cvtdq2ps
jl
mov
jl
bnd
mov
jge
add
pop
or
xchg
out
dec
mov
xchg
sub
push
fsub
lods
add
jp
imul
or
mov
inc
sbb
mov
pop
ins
xchg
aad
in
movs
add
and
pop
hlt
jae
push
or
iret
clc
push
(bad)
jns
fs
or
xchg
popa
dec
xchg
fwait
cmp
outs
or
(bad)
es
sub
and
mov
sahf
or
loopne
enter
dec
cwde
std
in
(bad)
icebp
sub
cld
dec
aaa
test
pop
pop
cmp
push
sbb
loopne
inc
loop
fistp
lock
retf
pop
xor
bound
rcr
jo
es
(bad)
pushf
add
out
js
cmp
pop
push
retfw
adc
push
(bad)
and
loope
cmc
rcl
xor
mov
adc
in
adc
inc
lock
push
jbe
mov
or
loope
lds
jbe
gs
inc
mov
xor
(bad)
imul
jle
ret
jno
js
and
daa
fs
je
mov
lock
cs
or
cmc
fcmovnb
fldenv
xor
in
pop
push
(bad)
rcr
mov
cmp
(bad)
aad
or
cmc
sub
adc
mov
and
clc
aaa
push
leave
in
xor
lahf
jae
in
aas
les
sbb
(bad)
lods
and
pusha
(bad)
loopne
sub
xchg
or
retf
dec
xchg
push
jnp
xchg
fadd
push
mov
scas
cdq
daa
sbb
push
popa
repnz
in
xor
ins
aam
inc
les
and
addr16
test
adc
shl
push
pop
repnz
mov
cwde
in
ret
inc
mov
dec
ror
ret
cmp
jp
in
jne
enter
mov
mov
and
(bad)
lea
add
ss
mov
cli
cmp
repz
mov
(bad)
js
push
mov
inc
repnz
sbb
or
sbb
aas
or
pop
stc
stos
push
mov
inc
lahf
or
fidiv
rol
push
fsubr
in
pushf
xor
addr16
jle
dec
or
ret
aam
sbb
aam
push
arpl
jp
stc
cli
and
jmp
cdq
cwde
inc
inc
fldenv
aam
movs
mov
lea
dec
adc
aad
or
push
jns
adc
mov
cmp
dec
dec
cmp
mov
and
jno
int
pusha
test
jns
add
mov
cmp
pop
(bad)
jge
inc
and
xor
pop
hlt
xchg
inc
add
mov
paddq
inc
clc
bound
fdivp
add
inc
ret
or
xor
mov
adc
jb
mov
pop
cld
pop
enter
hlt
pop
test
jp
mov
popf
lahf
loop
xchg
mov
pop
repz
rcr
pop
movs
outs
xchg
jne
arpl
std
push
add
add
xor
ret
mov
scas
and
mov
aad
cld
adc
lahf
repnz
fwait
jbe
gs
out
mov
dec
loope
inc
mov
les
jmp
mov
sete
dec
imul
jo
imul
test
adc
(bad)
sub
sub
or
dec
cmp
add
fwait
mov
pop
out
inc
iret
fidivr
jmp
mov
aam
push
and
test
cli
add
loopne
ja
loope
fwait
loope
xlat
pop
out
xor
cmp
pop
dec
into
jp
jb
or
into
loope
lahf
xchg
xchg
jo
sbb
fsubr
movs
fwait
fwait
ins
add
mov
mov
mov
add
push
xchg
or
inc
retf
cli
cmp
mov
ss
loop
mov
jns
(bad)
jle
cwde
push
loopne
mov
fiadd
cmp
outs
add
cli
movs
mov
sub
add
push
and
xor
sub
dec
cmp
push
cmps
test
mov
sbb
call
fldenv
pushf
shr
retf
cmp
push
or
jmp
sti
cmp
push
or
lds
lods
mov
push
mov
sbb
push
scas
fwait
aas
inc
hlt
outs
jecxz
add
sbb
ja
mov
cmp
jmp
stos
inc
dec
js
sbb
xchg
fisttp
dec
jg
xchg
xlat
retf
shr
fistp
jge
lods
add
jno
call
jmp
imul
inc
into
fmul
cli
pop
sub
sbb
mov
enter
std
adc
xor
popf
jb
mov
scas
lock
(bad)
sahf
push
jl
xchg
inc
jecxz
retf
pusha
cdq
xchg
stos
or
je
dec
bound
and
frstor
daa
sbb
inc
in
xor
mov
daa
movs
sbb
and
push
loop
and
push
outs
loope
es
mov
(bad)
cmps
das
sub
popf
cmps
xchg
push
ja
mov
adc
or
sub
nop
inc
ds
test
pushf
test
daa
push
ins
and
hlt
out
repnz
mov
and
cld
hlt
iret
mov
dec
and
cmp
xchg
inc
cmp
inc
ds
jbe
jmp
aam
xor
add
xor
movs
adc
pop
xlat
(bad)
mov
pop
cwde
fstp
mov
pop
int3
mov
xor
fbstp
xchg
loopne
cmp
sti
pop
or
icebp
cwde
shl
imul
cld
shl
pop
jp
xchg
dec
out
fs
mov
push
push
and
into
dec
dec
mov
or
cmp
aaa
ja
inc
mov
mov
arpl
shr
cmp
aad
enter
dec
mov
mov
xchg
mov
mov
mov
sub
push
sar
xchg
or
dec
xchg
rcr
push
cmp
or
bound
push
repnz
jecxz
aam
adc
int
dec
push
xor
xchg
sbb
(bad)
xchg
cmp
add
fld
jb
neg
(bad)
aam
inc
popa
mov
fnstenv
pop
adc
mov
adc
in
push
icebp
sub
pop
lods
test
iret
jbe
jp
xchg
mov
loope
out
fcmovbe
mov
popf
push
add
pop
sub
(bad)
mov
mov
xchg
cmp
lea
fcmovne
pushf
daa
cdq
mov
push
sbb
xor
fistp
push
mov
dec
and
fisttp
add
add
popa
jge
je
xchg
inc
adc
pop
in
retf
sbb
pushf
push
or
fbstp
ins
loop
out
aam
aaa
mov
cmp
nop
add
out
test
test
dec
adc
or
pop
pop
push
inc
adc
jno
les
and
out
rcr
or
and
cmp
(bad)
repnz
mov
jnp
or
rcl
cmp
dec
lock
bound
adc
inc
xchg
retf
repz
push
sbb
ret
xor
mov
nop
xchg
xchg
imul
xchg
sbb
cld
cli
fidiv
pop
arpl
jb
xor
js
cmp
inc
adc
cli
mov
and
xor
popf
adc
mov
(bad)
mov
xchg
push
xchg
es
pop
imul
mov
cmps
pop
pop
ss
lahf
pop
sub
jmp
fwait
arpl
out
ins
lea
mov
cmp
cmp
stc
sub
imul
jbe
push
jbe
and
clc
cmps
adc
mov
mov
fdivr
js
enter
shl
(bad)
call
std
fstp
outs
adc
cmp
and
pop
cmp
mov
mov
cmp
ja
sar
xchg
pop
adc
or
sub
test
jle
push
scas
addr16
push
(bad)
cli
pop
(bad)
inc
cmps
es
retf
xor
retf
push
test
and
push
(bad)
cmp
xchg
movs
xchg
je
addr16
push
and
sub
mov
or
ins
ret
or
and
out
int3
imul
push
int
ret
push
out
pop
pop
fs
rcr
test
push
clc
xchg
jmp
call
pop
push
pusha
or
push
xor
xchg
and
shl
mov
js
hlt
std
mov
pop
or
dec
mov
nop
retf
or
cli
test
movs
inc
mov
jb
adc
mov
dec
out
and
stc
or
test
push
into
popf
scas
je
cmp
cwde
fwait
mov
pop
cwde
sub
les
outs
fisttp
and
cmp
inc
addr16
mov
pop
and
retf
add
mov
dec
in
push
addr16
jmp
ins
icebp
pop
jp
xor
call
in
mov
xor
xchg
mov
xor
push
inc
mov
clc
mov
jbe
scas
cmps
mov
adc
dec
or
ficomp
icebp
cmp
scas
mov
(bad)
pop
shl
and
rcr
mov
jbe
mov
mov
test
outs
ffree
shr
xchg
hlt
sbb
shr
mov
pop
mov
into
push
xchg
cs
xor
add
addr16
jns
aaa
dec
push
add
pop
xchg
push
and
xchg
sbb
clc
outs
loopne
xchg
cmps
push
jmp
inc
sub
fimul
mov
imul
lds
mov
(bad)
adc
pop
fisttp
sub
or
mov
xchg
mov
mov
cmp
test
mov
mov
(bad)
loopne
call
or
ja
call
pop
iret
push
mov
push
push
push
enter
jge
sub
mov
icebp
shrd
imul
call
mov
stos
xor
test
and
cld
xchg
xchg
out
mov
pop
xor
mov
mov
inc
cs
add
ret
cmc
data16
cmp
jmp
imul
imul
jecxz
add
rcr
and
add
scas
sar
pop
add
mov
idiv
or
mov
inc
scas
jl
inc
jmp
mov
jnp
ds
out
out
out
scas
packsswb
cdq
bndldx
scas
jmp
or
or
push
adc
lods
lods
pop
push
adc
sbb
(bad)
lods
bnd
add
cmps
mov
inc
add
mov
ret
push
js
enter
add
or
jecxz
fstp
in
int3
and
in
push
xor
push
imul
mov
pmulhuw
mov
clc
cmp
out
lock
cmps
mov
xor
cld
mov
sbb
and
es
xor
out
inc
push
setbe
repz
cmp
mov
cmp
sti
xor
jne
sbb
lds
add
cmps
adc
xor
cdq
adc
sbb
or
xor
mov
nop
in
addr16
loop
lods
dec
add
xchg
test
enter
adc
xchg
enter
ja
leave
xor
add
rol
sbb
sbb
sbb
popa
sbb
or
daa
mov
movs
jno
movs
test
jns
es
mov
mov
cld
in
push
mov
fcomp
mov
stos
int3
sub
sub
add
daa
outs
fist
retf
mov
(bad)
clc
fucom
dec
cmc
shl
cmp
sbb
fistp
outs
xor
or
xlat
or
sar
mov
or
jnp
and
(bad)
lods
dec
adc
out
jmp
sbb
xor
push
aaa
outs
xor
dec
aam
and
lea
jl
sub
call
jp
icebp
lock
jns
adc
sbb
pop
or
sbb
push
nop
inc
inc
or
sub
adc
stos
mov
sbb
test
ror
or
pop
dec
or
adc
pop
push
or
jne
xor
pop
push
mov
iret
cld
pusha
int3
pop
jp
ss
push
lds
loope
inc
xchg
mov
(bad)
dec
mov
mov
sahf
mov
sub
fistp
mov
lock
les
nop
shl
aam
imul
(bad)
rol
push
call
clc
fwait
sbb
clc
cmp
sub
sahf
dec
scas
cmps
sahf
je
xchg
clc
xor
fdivp
aam
pop
or
stos
popf
mov
adc
(bad)
sub
mov
sub
xor
scas
jb
add
inc
push
xchg
cdq
les
je
xor
mov
clc
adc
mov
dec
dec
or
adc
adc
scas
jne
dec
mov
fcmovnbe
frstor
mov
notrack
shr
jecxz
in
retf
imul
lods
test
sbb
jnp
and
mov
add
loope
fdiv
stc
imul
mov
mov
sub
ror
fdecstp
lahf
je
imul
add
(bad)
push
and
mov
and
and
das
in
out
xor
sbb
pop
mov
js
sbb
push
sti
jge
push
(bad)
jae
int
mov
out
shl
adc
arpl
xchg
std
xchg
mov
add
mov
push
lds
mov
mov
(bad)
mov
cwde
ror
je
outs
cmps
dec
mov
fistp
lods
push
aad
xchg
sub
jo
std
ds
imul
les
retf
mov
inc
ds
sbb
pop
enter
test
push
out
daa
pop
std
add
xor
or
inc
jl
outs
imul
cmp
imul
rep
cdq
adc
cmp
out
clc
jp
mov
add
test
sbb
adc
sti
jecxz
xchg
lahf
push
jl
(bad)
lods
pushf
mov
mov
in
jmp
(bad)
es
mov
scas
mov
mov
or
adc
pusha
je
xor
mov
pop
repz
jle
add
fadd
popa
mov
pushf
and
sub
push
cmp
xchg
sub
fstp
xchg
jmp
push
fnstenv
xlat
xchg
push
dec
fstp
addr16
mov
adc
mov
in
jbe
xchg
in
loop
enter
xchg
sti
data16
scas
inc
arpl
xchg
adc
jb
arpl
xlat
cdq
ficomp
mov
jbe
mov
call
mov
lods
dec
inc
enter
add
pop
jmp
popa
mov
test
jae
es
xor
push
jnp
jb
inc
outs
and
enter
int3
cmp
pop
xchg
out
push
ret
in
popf
mov
mov
retf
addr16
std
inc
xchg
add
aaa
mov
ror
sahf
(bad)
sub
mov
xor
cwde
cmp
fst
xchg
pushf
stc
fldcw
pop
inc
xlat
mov
mov
xor
xor
jnp
fisttp
movs
les
mov
aas
mov
push
test
and
xor
(bad)
push
xchg
in
mov
mov
fld
lock
xchg
xchg
pop
fmulp
icebp
xor
jg
sbb
loopne
rol
inc
dec
call
xor
cmps
pop
adc
fidiv
push
(bad)
sub
sub
mov
repnz
scas
jnp
loope
cmp
mov
cmp
sbb
dec
jb
push
bound
out
cmp
retf
popa
inc
jmp
retf
push
xchg
popf
pushf
dec
jle
xchg
xchg
lods
ss
mov
shr
rcl
stos
xlat
cmp
jmp
adc
jo
mov
sbb
and
cmc
test
pop
imul
dec
mov
pop
dec
inc
sbb
ja
jns
aas
std
mov
mov
popf
call
int
inc
mov
outs
pop
jo
addr16
ss
adc
movs
and
and
sbb
shl
sbb
outs
adc
call
nop
(bad)
popa
int3
push
push
xchg
mov
push
repz
push
mov
test
imul
and
ins
push
sbb
xor
imul
repz
add
mov
jge
loope
xlat
dec
or
sti
or
lea
aaa
aas
mov
movs
inc
rol
xchg
cmp
sbb
lea
cmps
mov
pop
inc
pop
mov
cmp
aad
inc
call
jp
sbb
add
mov
fs
es
std
imul
lods
(bad)
cwde
loopne
ror
mov
cmp
retf
add
dec
inc
adc
lods
push
shl
sbb
mov
loop
mov
das
aas
inc
adc
sahf
bound
(bad)
sub
xchg
ins
pushf
loope
dec
test
or
mov
mov
add
sahf
mov
repnz
sub
repnz
pushf
rdmsr
ja
ror
(bad)
shl
cs
inc
mov
(bad)
push
inc
das
xchg
cmp
ror
xor
pop
inc
dec
inc
mov
pushf
mov
je
sahf
sub
mov
and
aad
in
mov
sbb
push
push
dec
sbb
repz
jg
adc
inc
fbstp
int
xor
(bad)
outs
lahf
xor
pop
out
sti
hlt
push
aaa
sub
and
cwde
fwait
leave
stos
repnz
imul
pusha
in
adc
xor
xor
dec
jge
ficomp
xlat
into
and
and
shl
ror
and
scas
and
fistp
outs
ret
mov
daa
and
cmp
cmp
call
adc
inc
(bad)
pop
jecxz
adc
repnz
sub
inc
cmps
xor
das
shr
inc
or
cmps
add
pop
or
mov
jo
jp
add
jno
xor
outs
mov
or
mov
mov
mul
pop
sbb
mov
xlat
shl
jnp
or
imul
pop
pop
mov
ret
cld
daa
cmps
add
adc
push
stos
sti
out
mov
mov
in
je
outs
fmul
test
adc
xor
test
or
aas
dec
jnp
je
push
enter
stos
jl
leave
scas
test
imul
ins
push
rol
sbb
fstp
sub
dec
mov
push
pop
xchg
stc
cmp
call
adc
shl
mov
adc
test
push
xchg
imul
cmps
test
mov
int3
cmp
shr
sbb
jl
xor
mov
and
push
pop
xor
(bad)
adc
fisttp
in
push
xchg
xchg
adc
pop
imul
mov
mov
inc
or
bound
popf
cmp
je
mul
sub
dec
addr16
rcl
ficomp
aad
jmp
mov
icebp
mov
mov
xlat
cmc
mov
inc
mov
mov
test
test
and
sbb
mov
push
add
jg
jmp
pop
mov
or
arpl
call
imul
cmp
dec
jecxz
xor
xchg
cmp
popa
mov
push
fwait
int3
fadd
pop
xor
imul
push
push
imul
popf
push
inc
loop
pop
push
scas
imul
(bad)
jg
cli
mov
out
jnp
aaa
push
dec
movs
cs
cli
adc
std
mov
inc
stc
arpl
sub
div
xor
loope
mov
leave
xor
popf
lods
pop
dec
xchg
movs
pop
call
mov
add
and
push
mov
into
mov
cmps
xor
push
aas
adc
mov
pop
shr
outs
sub
inc
or
repnz
xlat
mov
int3
push
cmp
cdq
inc
fdiv
mov
pusha
sbb
dec
lods
ins
out
cld
pusha
ins
xor
(bad)
push
adc
add
jg
aad
inc
ror
or
mov
push
xchg
stos
mov
add
fs
lock
(bad)
jmp
adc
dec
mov
aam
fnsave
pop
xchg
pop
lods
int
dec
xchg
add
pop
(bad)
clc
daa
pop
sbb
sub
cdq
mov
push
xchg
popa
outs
test
ret
sar
loopne
inc
loope
rcr
cs
adc
aam
or
dec
or
cmps
loopne
xchg
enter
or
jne
movs
cdq
test
mov
add
cmp
into
inc
dec
pop
sbb
jae
je
movs
dec
inc
lods
jecxz
jb
jb
je
rol
shr
lock
call
and
mov
inc
call
data16
icebp
jl
add
addr16
sbb
dec
xchg
and
or
call
mov
xchg
cmps
jmp
xor
mov
inc
js
iret
xchg
cmp
hlt
sbb
fld
popa
aad
push
jno
jge
push
dec
(bad)
bnd
cmp
inc
add
fnstenv
ds
jo
std
call
sub
adc
push
dec
mov
out
pop
lds
sbb
fistp
mov
out
sub
mov
xchg
sub
adc
pop
out
inc
pop
mov
pushf
pop
das
jns
repnz
movs
xor
fwait
(bad)
jle
mov
and
(bad)
out
pop
fst
addr16
jno
aaa
mov
fwait
jle
inc
outs
mov
and
and
jl
or
lea
retf
pop
mov
inc
arpl
adc
mov
loop
je
mov
loop
xor
imul
or
jae
jg
repz
iret
test
mov
mov
lock
sbb
jecxz
fadd
mov
mov
push
push
das
call
mov
das
mov
cs
mov
call
stos
sbb
cmp
jl
mov
and
sbb
sub
add
xchg
sbb
jnp
fdiv
jp
js
sub
add
in
add
xchg
movs
scas
xor
inc
mov
(bad)
mov
jmp
mov
leave
dec
cmp
sahf
clc
xchg
xchg
(bad)
jno
adc
fidiv
inc
ins
inc
inc
mov
int3
mov
nop
aas
push
pop
sbb
jae
leave
or
push
xor
adc
jmp
sub
mov
sub
ins
cwde
es
xchg
adc
mov
xchg
shr
pop
repz
mov
(bad)
pop
jbe
repz
jno
bound
pop
daa
fs
lea
scas
imul
aad
mov
xor
popa
lods
or
jae
cdq
fiadd
popa
gs
test
(bad)
ror
fld
sbb
in
mov
ins
or
mov
retf
or
mov
jmp
push
mov
adc
rol
or
mov
mov
xchg
push
(bad)
jmp
mov
pop
mov
cmp
test
and
lahf
push
sub
xchg
cld
mov
push
adc
rep
cwde
les
lahf
pop
(bad)
mov
push
scas
outs
dec
push
adc
or
or
jae
sbb
adc
(bad)
jnp
sbb
jle
pop
and
push
jbe
out
inc
repz
mov
ret
mov
mov
push
lods
and
add
jmp
mov
ins
jl
xchg
int
cdq
xchg
push
mov
pop
popa
xor
push
out
js
and
cmp
ffreep
add
mov
or
pop
push
mov
repnz
jb
js
jae
fimul
add
and
xor
je
sub
xchg
and
cmp
jmp
cmp
retf
add
push
scas
add
inc
sbb
out
push
ins
adc
or
or
fst
cdq
lock
jno
mov
repnz
adc
mov
daa
repnz
add
popf
mov
pop
jae
mov
sbb
push
loopne
imul
stos
std
fcomip
pop
adc
in
sub
and
arpl
push
or
xor
dec
icebp
fidiv
out
clc
cmps
pop
mov
add
sbb
cmp
out
and
jg
jnp
out
fiadd
and
in
xlat
pop
or
jnp
clc
mov
repz
lock
ficomp
mov
lods
sbb
push
popf
cld
sub
mov
sub
jge
pop
lods
std
sbb
jmp
inc
sub
fbstp
popa
cwde
idiv
push
jp
mov
clc
jecxz
in
(bad)
gs
add
in
pop
pushf
adc
or
or
stos
out
jmp
mov
xor
jecxz
fs
int3
shr
sbb
fmul
jmp
pop
leave
scas
sub
add
or
neg
fisubr
jge
out
sbb
ffreep
mov
jecxz
sub
int
pop
iret
pop
cdq
ret
retf
pop
xor
mov
cli
pop
push
cs
pop
mov
sbb
std
sub
dec
add
std
dec
mov
add
stos
add
outs
icebp
cmp
adc
adc
mov
cmp
jp
pop
mul
xor
dec
call
es
mov
imul
mov
inc
cmp
dec
cs
pop
pusha
fcomp
xchg
test
add
outs
mov
sub
jae
inc
cmp
xchg
stos
js
call
add
call
imul
push
out
push
repnz
sbb
and
xor
mov
jg
adc
xor
fistp
or
pop
sti
pop
(bad)
sbb
jmp
push
cmp
outs
popa
jmp
mov
je
movs
inc
int3
into
push
push
ror
add
enter
mov
lahf
imul
sbb
in
test
xchg
push
int3
pop
movs
adc
outs
sbb
sub
xchg
fidivr
cs
out
es
or
clc
aas
ret
xor
push
jle
js
cld
cmp
popa
data16
sub
mov
mov
enter
call
xchg
push
loopne
cmps
cmps
add
push
sub
and
cmp
out
shr
jl
nop
es
cmps
rol
sbb
cmp
data16
sub
add
or
xor
stos
rcr
leave
sub
test
cdq
sbb
cmps
sub
jl
mov
pop
dec
adc
lods
shr
sti
popf
jge
in
leave
pop
add
mov
jnp
out
dec
cld
sbb
jb
rcr
popa
mov
jno
mov
fisttp
loope
push
mov
shr
sbb
aam
out
addr16
mov
popa
push
jmp
scas
test
adc
into
pushf
out
fcomp
sbb
enter
jp
or
movs
sub
ss
movups
push
aad
cmc
push
mov
shr
or
div
cmp
das
jp
je
ins
pop
sub
cmp
(bad)
mov
and
add
(bad)
and
jg
jns
nop
add
and
(bad)
mov
cmp
fldenv
pop
mov
dec
mov
cli
xor
aad
sub
pushf
scas
sahf
cdq
js
or
or
es
pusha
cmovp
jno
pop
fild
es
mov
add
test
mov
jmp
dec
adc
fidiv
ret
push
jmp
xor
pop
dec
outs
aas
clc
pop
retf
mov
sbb
ret
loopne
sahf
push
imul
xor
addr16
mov
pop
loop
(bad)
das
jb
ret
push
(bad)
pop
imul
adc
or
dec
or
and
jne
and
pop
jge
int
rol
lahf
cs
pushf
shr
call
outs
out
pop
ss
outs
cmp
leave
fldcw
pop
mov
pop
sar
xlat
cmc
scas
mov
rcr
fmul
out
push
mov
shr
(bad)
out
(bad)
shr
mov
cmps
aas
mov
scas
mov
cld
fld
stos
xor
jge
mov
or
push
daa
pusha
push
add
cmp
mov
shr
out
fnsave
hlt
(bad)
mov
sub
xor
dec
dec
ins
cmc
add
pop
mov
push
jb
jo
ja
pop
jecxz
stc
xchg
cwde
mov
jb
js
mov
cmp
out
aam
mov
jle
mov
leave
icebp
xor
and
jle
leave
jae
hlt
xchg
jmp
xchg
push
scas
(bad)
adc
js
(bad)
ins
inc
scas
jl
adc
cmps
scas
sub
and
iret
loop
xchg
ret
outs
cmp
xchg
nop
cmp
into
jge
inc
pop
pusha
add
cmp
push
into
loopne
rcl
cmp
xlat
mov
push
push
imul
or
lods
fidivr
xchg
push
mov
xor
jnp
btr
out
test
into
xor
sbb
popa
int
clc
dec
and
pop
stos
cmp
fstp
in
aaa
(bad)
in
dec
std
ins
addr16
pop
xchg
out
cmc
sub
fld
pop
dec
mov
mov
retf
mov
mov
mov
fstp
in
std
mov
xchg
shl
test
dec
out
add
inc
je
ins
jl
dec
call
dec
test
das
inc
sbb
add
jmp
inc
push
fsub
popa
push
movs
pop
into
clc
in
xchg
pop
out
and
outs
inc
cmc
popf
adc
mov
jg
cmp
adc
pop
cwde
outs
js
and
packssdw
jno
adc
lds
adc
retf
call
fs
and
shl
sbb
jmp
mov
mov
sub
xor
(bad)
test
xchg
mov
adc
mov
mov
mov
aam
(bad)
imul
xchg
arpl
xchg
cmps
call
sar
pop
in
daa
mov
(bad)
call
mov
xor
call
(bad)
imul
enter
push
(bad)
retf
inc
add
pushf
retf
ins
jg
mov
fild
pop
imul
bound
shl
setnp
dec
arpl
stos
scas
lock
inc
es
xchg
jne
movs
pop
out
and
adc
jecxz
fbstp
rol
mov
ins
mov
ror
xchg
xchg
inc
sub
int3
mov
mov
ja
out
js
inc
mov
inc
ins
dec
sbb
sti
jl
dec
loope
loop
push
push
outs
enter
je
and
mov
cmp
xlat
mov
in
stos
aas
mov
jp
(bad)
shl
inc
(bad)
addr16
rcl
aaa
bound
ins
ins
sbb
fcmovnbe
loop
out
xchg
add
add
out
add
rcl
push
or
repnz
(bad)
lahf
mov
push
repz
mov
int3
mov
cmp
push
push
jmp
or
loope
(bad)
pop
lock
(bad)
sbb
dec
test
sbb
loope
movs
bound
jp
xchg
xchg
inc
mov
shl
movs
fsubr
mov
les
push
xchg
mov
add
mov
push
cmps
lods
adc
jmp
push
iret
cmc
sub
imul
mov
or
xchg
xor
and
inc
repnz
loope
out
xchg
inc
lahf
cmp
and
lahf
jmp
push
movs
stos
hlt
test
dec
jns
pop
rol
fldenv
mov
push
inc
rcl
mov
mov
call
lahf
adc
inc
ss
stos
or
in
adc
call
test
pop
cld
adc
mov
cmps
push
dec
mov
pusha
hlt
sbb
jae
rol
test
test
hlt
push
and
pop
mov
jo
test
jns
jle
jns
jp
daa
jns
stos
ret
dec
sub
sub
xchg
retf
shl
test
or
addr16
sti
jae
add
(bad)
xchg
cmp
daa
outs
add
pop
xor
in
dec
gs
cmp
fisttp
pop
popa
sub
and
ins
push
pop
jge
pusha
leave
mov
cmc
clc
ja
push
mov
sub
call
into
stos
and
imul
outs
into
push
pusha
jecxz
or
je
leave
jo
ret
data16
out
xor
retf
shl
jae
sub
mov
shl
mov
push
mov
jmp
xor
rol
mov
ins
pop
sbb
jmp
push
in
out
jb
dec
lahf
mov
fsubp
in
xor
and
call
fs
call
cmps
aas
adc
jmp
xchg
pop
xor
jle
adc
imul
not
jl
add
call
shl
jl
scas
cmp
cmp
mov
mov
lds
sbb
xchg
push
push
sub
loop
(bad)
sub
in
jp
xchg
das
shl
enter
cwde
(bad)
ficomp
dec
cmp
sub
movs
fcmovnbe
test
sub
ret
sbb
jmp
adc
iret
stos
(bad)
hlt
(bad)
dec
push
jecxz
or
jle
adc
test
sbb
fs
je
fwait
mov
or
sub
pop
stc
sbb
pop
push
dec
mov
xchg
mov
push
(bad)
loopne
cli
hlt
mov
xchg
pop
fidivr
sahf
movs
jns
pop
jae
add
movs
test
push
push
xor
dec
(bad)
lock
sub
fwait
js
or
scas
push
shr
sub
adc
sar
and
ins
dec
iret
push
xlat
aaa
rol
ins
cmp
std
add
jg
push
push
aaa
mov
jmp
(bad)
sbb
cmp
(bad)
dec
sbb
fcomp
jbe
fucom
sbb
repnz
dec
mov
and
imul
scas
mov
test
or
mov
adc
js
sar
and
cmp
fld
inc
jbe
mov
mov
pop
es
aam
(bad)
sub
jnp
dec
jno
cld
les
addr16
ds
cli
xor
arpl
and
(bad)
bswap
div
dec
xchg
xor
mov
jmp
dec
movs
dec
leave
sub
fnstenv
push
(bad)
push
mov
mov
sub
outs
aaa
aas
neg
push
sahf
jecxz
dec
aad
or
(bad)
test
jle
pop
add
inc
rol
retf
inc
mov
loope
mov
ret
push
jae
inc
mov
lahf
jl
or
sar
clc
xor
test
and
mov
popf
enter
ja
mov
mov
bound
add
mov
daa
cld
mul
addr16
mov
sub
push
mov
jne
or
test
jmp
rol
ja
push
loop
xor
repnz
loope
rcr
int
call
or
pop
mov
dec
mov
jne
jne
(bad)
cmp
pop
inc
inc
test
jg
sub
les
fisubr
pusha
sbb
fnstcw
xor
dec
loop
mov
ss
jo
in
fst
jo
adc
aas
mov
(bad)
loopne
sub
scas
push
sub
ds
or
sbb
cmp
outs
test
add
and
outs
sti
ret
mov
or
xlat
ds
aam
xchg
dec
out
(bad)
xadd
sti
je
arpl
fild
inc
pop
(bad)
sub
cmps
stos
test
inc
sbb
stos
sbb
and
(bad)
mov
lock
retf
movs
jb
sbb
mov
jmp
cdq
dec
jecxz
inc
loope
xor
call
sub
and
jb
sub
test
or
xlat
retf
cmp
rol
ins
sbb
mov
cwde
sbb
mov
push
pop
xor
sub
or
aam
call
xor
dec
and
push
sub
iret
add
enter
sub
cmp
and
rcr
dec
out
pop
push
aas
mov
rcl
mov
jle
cmp
movs
pop
fsubr
pushf
shl
cmp
iret
cwde
cli
popf
imul
cmp
push
retf
sbb
out
dec
pop
inc
pop
test
inc
nop
dec
enter
mov
mov
call
inc
ja
jmp
jmp
cmp
add
pop
adc
pop
test
pop
xor
push
sar
pusha
in
lods
cmp
mov
inc
mov
fcomp
popa
adc
daa
sahf
pop
inc
push
sub
jge
push
add
mov
push
cmp
into
mov
jg
sbb
xor
(bad)
pop
cmp
jge
imul
sbb
scas
cld
je
ins
shl
cmps
mov
and
ins
rol
mov
cmp
dec
adc
add
jb
xchg
rol
and
fbld
push
or
add
push
cmp
lds
sbb
cmp
jb
or
popf
fldcw
mov
push
cmps
cli
inc
sti
(bad)
pop
sbb
and
sbb
cmp
and
in
mov
mov
repz
cmc
mov
ror
les
mov
ds
adc
or
add
imul
dec
sub
sub
ss
fwait
or
push
push
lods
mov
stc
movs
push
fistp
pop
or
aad
mov
dec
push
or
cwde
fbld
or
push
push
popa
jnp
fwait
cwde
pop
cmp
jmp
cmp
lock
out
push
inc
mov
xor
xchg
enter
rcr
loop
inc
jge
sahf
sbb
pop
lds
mov
add
add
inc
leave
ret
push
sbb
repz
adc
mul
outs
xchg
(bad)
imul
std
test
fisttp
xor
(bad)
je
sub
pop
scas
ret
inc
adc
mov
inc
stos
push
push
push
es
and
jae
shl
push
push
cdq
hlt
ret
mov
xchg
adc
jns
pop
sub
fbstp
(bad)
xor
add
jnp
mov
sbb
sahf
jo
aam
pop
retf
dec
call
push
mov
shl
out
fwait
ror
retf
mov
push
dec
fdivr
jbe
push
ja
adc
sub
push
mov
dec
cs
inc
jmp
outs
jg
(bad)
jae
data16
and
imul
and
adc
pop
div
dec
mov
test
sub
ds
jns
popf
ror
sbb
push
or
sbb
div
imul
retf
push
in
mov
cmp
mov
scas
cmp
in
in
cld
loope
arpl
push
mov
gs
sub
out
dec
lock
scas
dec
(bad)
lock
addr16
mov
test
jge
xchg
jae
mov
scas
outs
inc
dec
or
cmp
mov
add
rol
inc
repz
mov
repnz
push
mov
and
push
push
movs
fwait
dec
test
popa
mov
sahf
test
lods
out
adc
ret
shr
in
or
cmps
popf
or
das
xor
sub
inc
jecxz
and
repz
mov
shr
inc
adc
cld
lea
inc
outs
imul
mov
inc
fiadd
adc
fwait
add
call
repnz
add
movs
push
sub
jecxz
xchg
iret
mul
mov
xchg
(bad)
(bad)
adc
shl
in
cmp
sbb
xor
mov
fstp
cmps
xor
(bad)
out
xchg
jge
mov
outs
cmp
rol
xor
push
mov
dec
adc
fdivr
mov
push
fist
jmp
test
call
sbb
cmp
retf
xor
push
retf
lds
retf
dec
sti
cmps
frndint
(bad)
sbb
lds
icebp
push
js
mov
test
add
push
push
mov
cmp
mov
pop
pop
sbb
arpl
xchg
neg
test
lods
cwde
test
inc
sub
loop
cmp
sti
cmp
in
ds
jo
push
ficomp
stos
test
aas
enter
mov
mov
mov
jmp
pop
stc
jg
outs
stos
mov
mov
xor
xchg
pusha
push
sahf
cwde
mov
aam
dec
mov
cmp
rcl
or
dec
dec
jnp
fld
mov
sbb
fisttp
(bad)
out
add
cmp
cwde
or
mov
or
ffreep
cmp
retf
xor
fwait
mov
sahf
in
xor
sbb
mov
push
mov
and
cwde
stos
cmc
jae
and
fstp
sbb
outs
adc
push
mov
mov
int
xchg
movs
jmp
mov
addr16
sbb
adc
in
and
gs
or
cmp
pop
mov
mov
pop
popa
xlat
jge
ficomp
xchg
pop
or
mov
lods
pminub
call
sub
jg
mov
cmp
dec
repnz
mov
ud0
mov
push
ret
sub
lea
jb
test
(bad)
into
mov
fwait
ins
movs
fdiv
push
cmp
xchg
push
or
mov
retf
test
aad
sbb
subps
inc
stos
mov
and
in
std
shr
(bad)
adc
mov
clc
movs
pop
mov
out
inc
rcl
sbb
sbb
cmp
popf
(bad)
pushf
jbe
scas
dec
dec
pop
sbb
ret
repnz
add
inc
and
ins
mov
xor
shl
xchg
cmc
hlt
dec
scas
xor
mov
add
add
pusha
dec
aaa
out
push
push
sbb
xchg
jmp
jmp
jg
ins
mov
scas
mov
iret
sub
xor
mov
cwde
clc
mov
sar
sbb
in
pop
or
and
imul
push
sub
push
js
jae
sbb
mov
xchg
and
imul
fistp
jae
fst
cdq
sub
rep
scas
mov
or
lock
xchg
les
rol
mov
popa
cmp
repnz
es
sub
jns
fisub
push
add
cmp
mov
clc
jle
cmp
sub
inc
inc
popf
in
scas
mov
push
jp
mov
fild
retf
loopne
add
in
in
jno
mov
push
adc
sar
clc
icebp
mov
pop
pop
sbb
adc
add
iret
jl
jg
and
stos
lods
sub
xchg
(bad)
xlat
dec
retf
adc
test
and
push
imul
(bad)
or
and
jg
fs
in
rol
je
loope
push
jno
mov
ret
repnz
arpl
add
sub
mov
ror
leave
mov
leave
jb
jo
mov
lods
ds
inc
out
sub
pop
and
bound
add
sti
(bad)
xor
pop
cwde
mov
xor
into
inc
int3
jp
xor
or
xchg
pushf
sbb
and
jno
adc
mov
inc
imul
int3
inc
add
scas
pop
fwait
mov
repnz
xor
push
or
dec
or
popa
or
pop
adc
or
js
xor
cmp
cmp
adc
ins
faddp
stos
dec
add
push
ret
dec
ficom
in
ins
jno
jno
fdivr
push
xchg
in
sbb
cmp
mov
sbb
cmp
mov
dec
outs
repz
mov
mov
arpl
sbb
push
mov
adc
ins
lods
sbb
pusha
adc
mov
mov
push
cmps
stos
in
leave
nop
or
cmps
aas
fsub
xchg
repz
jno
cmp
bound
ret
dec
setne
cmp
inc
lods
inc
arpl
pop
nop
scas
xchg
in
jge
movs
shr
jnp
addr16
adc
enter
scas
popf
pop
arpl
fimul
sub
cmps
enter
in
cmp
ja
pushf
jp
sub
leave
push
inc
cmp
mov
mov
mov
cmp
push
and
jp
push
add
popa
and
test
xlat
jmp
xchg
sbb
mov
or
scas
mov
mov
(bad)
jg
pop
sbb
dec
(bad)
mov
cmp
jmp
int3
xlat
sahf
repz
fs
mov
rcr
ss
int3
adc
xchg
sbb
mov
mov
xor
mov
jle
arpl
pop
repz
ret
mov
enter
mov
(bad)
iret
sbb
cmps
push
scas
pop
pop
jmp
mov
push
cmc
gs
mov
pop
fwait
cmp
call
mov
cmp
arpl
and
cld
pop
cmps
dec
movs
loopne
xor
sti
pop
sub
sub
push
test
and
xor
clc
sbb
scas
add
std
fisubr
add
sub
mov
pop
aaa
push
in
dec
ror
bound
adc
into
inc
icebp
cmp
push
inc
push
jne
push
enter
jnp
jmp
push
aam
mov
neg
push
jo
sahf
mov
loope
js
ja
pop
and
mov
cmp
xor
movs
jnp
ret
in
pop
sub
lahf
enter
push
sbb
loopne
rol
mov
xchg
jns
mov
push
fldcw
mov
push
cmps
aas
fistp
rol
das
fstp
cdq
in
xchg
ja
add
adc
sbb
inc
adc
jmp
addr16
push
in
and
pop
add
push
retf
cmp
mov
ds
and
ds
mov
fld
mov
scas
ret
jle
call
leave
xor
out
ds
call
es
jp
add
xchg
gs
cmp
(bad)
pop
sub
or
int
lods
cmp
dec
jmp
sub
mov
mov
push
jno
inc
or
call
inc
sbb
cdq
loop
test
pop
dec
push
cdq
adc
in
addr16
inc
xchg
xchg
and
jns
sub
in
add
sbb
push
xor
pop
ret
mov
movs
stos
mov
sbb
(bad)
loopne
jnp
push
inc
inc
push
pusha
stc
in
inc
cs
mov
and
adc
fmul
add
mov
sbb
mov
dec
fbld
aas
es
clc
scas
retf
ret
xchg
xor
add
stos
loopne
shr
pop
adc
aam
popf
dec
mov
orps
repnz
jns
sbb
xchg
dec
push
mov
and
sbb
sub
mov
sbb
sti
and
or
mov
lods
pop
repnz
push
scas
lds
push
ficom
pop
adc
mov
pop
adc
push
and
xlat
mov
jle
gs
and
fadd
ins
cmp
rcr
popf
adc
fwait
std
bound
jae
cdq
push
out
xchg
in
scas
cli
cmp
addr16
dec
jae
int3
clc
and
push
(bad)
mov
fwait
adc
(bad)
mov
inc
sub
cmp
es
mov
ret
cmp
sti
clc
cli
sub
scas
push
pusha
loopne
dec
shl
xchg
fisub
add
lds
data16
retf
iret
push
mov
(bad)
inc
mov
inc
jne
(bad)
xor
pop
adc
xor
shl
adc
repnz
xchg
xor
adc
ins
mov
mov
int3
ins
pop
cmps
dec
jns
call
mov
jp
pop
fwait
mov
dec
xchg
loope
xor
jg
gs
imul
dec
xchg
fistp
int3
xchg
mov
mov
adc
add
push
mov
lods
into
arpl
inc
stc
inc
repnz
repz
dec
pop
xchg
push
jae
mov
sub
push
ret
fld
lds
pop
mov
sub
gs
outs
aas
sub
push
in
lods
rol
mov
push
mov
jno
div
mov
rcr
mov
sub
repnz
out
mov
repnz
sar
repnz
add
ret
push
push
movs
mov
jno
cmp
jbe
ret
aad
ret
es
sub
xchg
fld
cmps
aam
and
xor
and
cdq
shl
lahf
les
imul
cmp
daa
call
loope
data16
pop
fld
jbe
pop
ficomp
cmp
dec
test
xor
fadd
ror
rcl
sbb
gs
cmp
cmp
fs
cdq
inc
fisttp
jbe
or
rol
pop
ror
enter
xor
retf
inc
imul
mov
jne
(bad)
push
xchg
xchg
sbb
pusha
lock
sbb
in
cmp
jl
psubsw
outs
adc
mov
call
jecxz
(bad)
mov
stos
test
inc
in
or
inc
mov
jno
stos
or
repnz
stc
inc
paddq
xchg
add
sub
fwait
push
lahf
or
imul
mov
call
push
or
inc
cmps
ins
sub
fcomp
push
sbb
or
iret
push
push
(bad)
mov
cs
ret
inc
ins
into
inc
jno
mov
mov
cmp
bnd
aaa
sbb
test
mov
in
push
and
mov
inc
add
sub
stos
scas
mov
sahf
add
ja
int
not
fstp
pop
mov
(bad)
addr16
cmps
dec
pop
fst
xor
sub
dec
arpl
imul
and
sahf
xchg
xchg
push
xchg
mov
scas
enter
push
ret
(bad)
(bad)
neg
cld
or
xchg
outs
fs
xchg
jmp
dec
pop
mov
mov
div
hlt
mov
aas
push
cmp
setg
push
imul
in
xchg
cmp
mov
je
pop
or
pushf
jmp
dec
call
xchg
jns
cmc
stc
push
repz
fidivr
(bad)
push
popf
jae
shr
cmp
push
pop
loopne
cs
in
add
sbb
push
shl
jae
fwait
mov
dec
sahf
leave
xor
ret
push
das
xchg
jne
lock
pop
data16
xchg
outs
retf
not
add
gs
(bad)
int3
loope
sbb
xor
js
ffreep
jl
dec
mov
test
jmp
dec
data16
inc
aad
jl
jno
movs
fcmovnbe
sub
adc
mov
fidiv
cmp
mov
aam
in
mov
cmp
fcomp
out
cmc
inc
mov
xor
push
shl
cmp
pop
shr
aas
dec
mov
dec
push
ins
je
movs
mov
aaa
in
ins
cld
dec
or
fimul
sahf
mov
add
pop
lods
outs
jmp
lods
and
test
adc
fdiv
sbb
pop
adc
push
mov
xor
inc
or
movs
add
sahf
pop
test
cli
out
mov
ds
loop
fcmovne
scas
mov
leave
push
nop
das
cmp
pop
xchg
xchg
in
cli
(bad)
in
popa
bound
add
push
call
outs
xchg
jbe
sbb
mov
jae
test
retf
in
sub
daa
and
xchg
add
loopne
mov
push
and
mov
and
in
test
mov
cwde
sub
call
sti
or
add
jne
or
sub
mov
sbb
adc
and
jmp
and
enter
adc
fcom
movs
inc
rcl
push
cmps
mov
pop
cmps
aas
jns
not
and
adc
out
jno
mov
aas
sbb
test
pop
add
pusha
fidiv
pop
sub
mov
imul
cmp
je
rol
enter
into
jno
adc
jmp
or
stos
je
add
xchg
inc
ds
(bad)
dec
xchg
lea
je
pusha
iret
sub
repz
out
xchg
jge
out
or
outs
int3
sub
pop
push
mov
lds
sub
inc
pop
rcr
sub
mov
mov
nop
xchg
lea
iret
stos
adc
mov
pop
icebp
xor
mov
mov
shr
adc
call
fdivr
jp
lods
retf
mov
and
in
inc
(bad)
in
in
retf
mov
stc
inc
jo
fidiv
(bad)
mov
push
inc
mov
add
iret
(bad)
shr
and
cs
ins
scas
and
test
xchg
jae
addr16
xchg
ds
sbb
push
cmp
movs
pop
mov
dec
adc
jnp
das
cmp
cmovo
push
jb
hlt
mov
mov
arpl
pop
mov
inc
sbb
shl
push
jmp
sti
sub
mov
jnp
inc
push
xor
pop
sub
in
jecxz
mov
push
rcr
mov
push
std
push
sub
cmp
std
pop
push
mov
cli
xchg
aas
js
xchg
mov
push
jl
dec
test
adc
mov
push
mov
(bad)
shl
retf
xchg
pop
lods
popa
jmp
sub
push
(bad)
sti
jg
int
sbb
xor
mov
rcl
std
movs
or
mov
sbb
pop
fnstenv
idiv
dec
hlt
push
jmp
loopne
test
mov
mov
test
pop
dec
(bad)
cli
or
cmc
fsubr
inc
mov
inc
or
mov
adc
jmp
sub
mov
and
xchg
pop
scas
scas
jnp
rcl
xor
enter
add
mov
sub
sbb
jmp
push
inc
pop
sbb
adc
ja
push
dec
dec
xchg
js
pusha
pushf
int3
sub
sbb
lods
repnz
mov
mov
pop
push
out
xor
jge
push
rol
je
xchg
push
mov
mov
mov
dec
cmps
xchg
mov
hlt
jbe
loop
dec
sar
aaa
clc
mov
fs
and
lods
clc
in
add
das
shl
je
fwait
mov
cld
jns
xor
aad
sub
mov
xor
fs
sbb
jle
hlt
sbb
rol
xchg
sbb
or
std
dec
sbb
nop
jge
inc
jae
call
adc
pop
retf
scas
js
mov
mov
sub
mov
dec
aaa
scas
push
hlt
stc
out
imul
jp
pop
mov
and
sbb
push
or
and
jecxz
pusha
inc
add
xchg
sbb
mov
sbb
or
pop
adc
or
movs
fisub
test
cmp
lods
mov
mov
call
sbb
jns
clc
mov
push
das
mov
(bad)
bnd
ror
pop
fdivr
mov
xor
xchg
jbe
lods
mov
sub
test
repnz
sbb
fld
sbb
pushf
mov
dec
iret
cmp
mov
xor
xchg
push
jge
pop
arpl
retf
sar
pop
xchg
xor
loop
pusha
pop
imul
jg
push
jbe
movs
xchg
in
mov
stc
xchg
and
adc
icebp
lahf
mov
(bad)
fsubp
xor
enter
mov
aaa
lods
pop
bound
mov
aad
adc
adc
pop
nop
je
inc
sub
mov
inc
and
or
jl
sbb
sbb
jp
or
daa
and
mov
imul
xor
stos
inc
test
repz
xchg
aas
xor
into
adc
mov
out
stc
inc
add
in
and
mov
imul
add
mov
add
inc
call
test
je
jnp
fild
bound
lds
and
xlat
push
add
fwait
leave
push
pop
push
ss
jno
retf
or
imul
outs
push
mov
sub
and
mov
pop
dec
aaa
xchg
push
ja
aas
inc
(bad)
fld
or
push
scas
in
jg
cmp
in
enter
cwde
push
adc
add
adc
adc
and
loop
and
xchg
push
imul
xor
movs
loopne
div
and
xchg
xor
push
lea
push
xor
dec
mov
jmp
adc
sbb
retf
xor
pop
mov
push
ja
dec
movs
xchg
lea
imul
sbb
ret
aaa
fiadd
fstp
mov
pop
mov
out
pop
jno
icebp
aam
rcl
stos
mov
std
mov
addr16
(bad)
in
dec
aaa
in
jecxz
sub
lods
shr
in
pop
lds
dec
mov
xor
push
mov
loopne
sub
test
jnp
das
stos
mov
add
pop
idiv
push
adc
mov
dec
nop
int
adc
xlat
adc
test
add
mov
mov
xor
inc
mov
outs
es
add
mov
mov
and
mov
mov
ret
jne
pushf
xor
lea
jl
jb
sub
jae
adc
dec
int
push
fisubr
leave
dec
fidiv
mov
adc
fbstp
ror
adc
clc
sti
lea
aad
leave
ret
mov
adc
outs
mov
loop
or
clc
inc
xchg
mov
retf
xor
push
adc
cs
add
and
mov
jnp
adc
jne
or
(bad)
sub
jmp
push
in
mov
fstp
jae
(bad)
and
cwde
outs
movs
bound
cmp
inc
sbb
mov
mov
add
stos
pop
das
jle
retf
mov
imul
inc
push
lods
repz
mov
pop
pop
ror
jmp
in
fcom
ins
bound
inc
mov
aas
mov
mov
sbb
cld
mov
push
icebp
js
mov
leave
adc
nop
stos
sub
xchg
daa
xchg
sbb
or
les
outs
push
daa
(bad)
cs
mov
dec
add
jne
add
jne
cld
inc
fcomp
mov
or
xchg
rcr
push
xchg
pop
jbe
mov
add
ja
movs
sbb
jg
cmp
rol
daa
jmp
jle
in
push
cmps
mov
pop
dec
lock
xchg
sbb
push
pop
jne
es
and
sub
loop
ins
(bad)
xor
retf
fs
push
leave
xor
mov
(bad)
scas
pop
shl
sub
mov
mov
fldcw
mov
mov
mov
pop
ds
stc
test
and
scas
or
clc
xchg
int3
inc
mov
test
sub
retf
fwait
outs
xlat
icebp
out
pusha
mov
out
cmpxchg
(bad)
xchg
addr16
xor
test
inc
mov
cmp
in
add
pop
xor
jl
xor
sub
xor
lahf
fstp
sub
mov
or
and
jp
mov
dec
mov
rcr
outs
leave
jo
mov
fnstenv
ins
jmp
xchg
xor
mov
sub
sbb
and
movs
xor
mov
xchg
clc
(bad)
and
in
lods
add
jb
ror
dec
push
add
jo
out
int
dec
and
arpl
add
cmp
es
imul
xchg
or
sub
lods
das
aaa
sbb
mov
ja
ja
and
pop
push
fimul
int3
iret
in
pop
cdq
adc
enter
stos
pop
ds
mov
icebp
cmc
push
push
push
pop
sub
imul
cli
sahf
push
lea
sub
(bad)
cmp
cmps
xor
retf
nop
sbb
in
push
imul
xchg
aaa
aas
js
adc
push
out
mov
mov
dec
pop
in
cli
repnz
retf
and
mov
mov
dec
jmp
rol
movs
imul
ds
inc
retf
and
fs
sub
test
xor
push
jle
or
jg
cs
mov
or
test
jne
jl
mov
xchg
jge
cdq
xchg
ret
and
mov
repz
cld
or
or
pop
jo
add
xchg
aaa
aas
pop
cmp
ret
ins
xchg
mov
jne
rcl
xchg
add
js
sbb
push
enter
mov
in
outs
mov
int
into
and
sbb
movs
out
inc
and
xchg
or
jg
pop
xor
jle
and
mov
pop
push
in
add
pop
mov
sahf
mov
sbb
(bad)
jmp
scas
aas
sub
jle
jle
mov
inc
push
or
mov
dec
repnz
inc
xor
adc
jnp
adc
add
jecxz
dec
cmp
pop
xor
adc
adc
ja
xchg
icebp
cs
jle
mov
xchg
mov
dec
gs
and
ins
je
dec
inc
and
jae
xor
call
lods
call
pop
cwde
mov
cmps
push
cs
lds
add
std
xor
retf
adc
push
and
or
push
dec
adc
push
xchg
repz
int
shl
sub
fisttp
bound
pop
pop
mov
mov
xor
fimul
push
cmp
pop
int3
adc
lea
sbb
stos
ss
or
enter
push
lods
mov
ror
push
jae
mov
mov
test
cwde
mov
pop
aam
push
pop
sahf
fnstcw
ja
or
scas
js
in
sbb
test
test
into
daa
movs
(bad)
int
or
mov
pop
sbb
mov
mov
jno
jmp
ds
mov
and
push
dec
ins
xchg
cmp
mov
loope
mov
sbb
fdivr
sbb
add
js
or
mov
dec
outs
pop
(bad)
ja
push
pop
mov
mov
pushf
mov
test
shr
mov
sbb
push
sti
es
cmp
arpl
sbb
aam
(bad)
fucomip
daa
retf
mov
pop
pop
add
in
or
sbb
sbb
mov
aam
outs
dec
sbb
and
xchg
jno
mov
inc
out
xchg
movs
mov
dec
cmps
cli
hlt
jno
jno
cli
int3
mov
pusha
lods
test
gs
mov
(bad)
adc
test
rcr
cs
test
(bad)
pop
jnp
out
sbb
outs
dec
mov
std
mov
ins
sub
add
lock
clc
dec
mov
inc
jmp
cmc
leave
pop
push
bound
mov
cmp
loopne
es
adc
adc
jo
adc
mov
sub
nop
adc
sbb
and
push
in
or
ins
sar
mov
ror
dec
mov
sub
int
ret
sbb
rcr
mov
(bad)
mov
jbe
cmp
pop
ins
int3
hlt
mov
arpl
push
jl
cmps
dec
stos
sbb
fld
ja
cmp
cmp
packssdw
clc
xor
iret
inc
clc
fldenv
xor
int3
mov
dec
jo
hlt
push
in
mov
add
movs
pop
and
sbb
imul
inc
add
or
pop
adc
fcomp
gs
movs
lods
cmp
adc
mov
mov
add
push
xor
retf
dec
adc
cwde
aam
addr16
cmc
sbb
mov
out
sbb
xor
dec
push
push
push
aam
mov
push
dec
jmp
arpl
xchg
xchg
and
sub
jne
or
pop
(bad)
xor
dec
xchg
push
retf
imul
jecxz
push
sbb
mov
pop
jmp
pop
adc
sbb
mov
movs
or
outs
data16
pop
xchg
mov
sbb
not
call
or
dec
dec
jmp
sbb
mov
test
pop
repz
cmp
mov
ss
arpl
sbb
mov
push
pusha
rcl
in
ret
pop
mov
xchg
pop
dec
sbb
push
icebp
pop
push
xchg
sub
inc
jb
js
and
and
and
loop
jl
repnz
imul
cmp
stos
lods
inc
loop
sahf
adc
into
and
jae
mov
inc
sbb
jg
cs
mov
std
stos
pop
out
ficomp
ja
push
or
out
pop
popaw
mov
mov
xchg
inc
xchg
mov
aam
scas
adc
mov
out
ins
push
in
push
fistp
or
mov
mov
adc
fdivp
aad
test
mov
mov
or
jmp
cmc
mov
jl
cld
and
repz
sbb
ss
jmp
mov
xchg
jne
mov
ror
jbe
in
mov
mov
int
mov
dec
xchg
aam
cmps
mov
cmp
test
jo
xor
mov
cli
rol
xor
dec
outs
pop
loop
pop
movs
push
ret
xchg
xchg
jmp
inc
mov
mov
or
or
xchg
adc
mov
repnz
add
push
cmp
mov
cmp
sbb
int
inc
dec
out
fld
cld
scas
push
inc
xor
inc
adc
pusha
retf
lods
rol
push
pop
add
cmp
aas
xchg
add
shl
mov
neg
jg
rol
ins
aam
enter
mov
scas
jge
or
lock
mov
sub
iret
pop
and
(bad)
in
out
adc
rcl
add
adc
jmp
sub
in
and
xchg
fldenv
jp
mov
cmp
ret
sub
hlt
cmp
retf
mov
xchg
popa
inc
pop
xchg
ficom
and
sbb
cmp
outs
xchg
sub
xor
cmp
fstp
inc
scas
fsubr
bound
mov
mov
enter
int3
lds
sbb
pop
retf
dec
sub
jae
lods
hlt
icebp
mov
pop
mov
dec
push
mov
mov
into
jp
mov
or
and
test
scas
lea
push
test
push
stos
adc
cdq
lock
cdq
xchg
cmps
jnp
mov
push
sbb
mov
aam
adc
xchg
cmp
dec
push
push
ds
stos
mov
xchg
inc
sbb
pop
rcr
sbb
int
mov
pop
dec
mul
and
and
cmp
loopne
loop
(bad)
xlat
imul
out
js
jle
xor
pop
push
lods
adc
pop
cli
xchg
out
(bad)
test
mov
div
jp
aam
popa
pop
inc
dec
into
popa
cwde
(bad)
sti
and
out
push
sub
int
push
sub
xchg
xchg
inc
outs
aad
adc
sub
(bad)
retf
add
fs
lods
jns
rcr
mov
and
and
scas
pop
pop
jno
es
and
retf
mov
cmp
not
adc
(bad)
dec
loop
out
jg
leave
nop
pop
sbb
xchg
stos
into
mov
(bad)
aam
mov
scas
cdq
into
push
(bad)
(bad)
push
mov
mov
call
loopne
(bad)
fnstenv
mov
(bad)
mov
push
mov
bnd
inc
fxch
fsub
adc
inc
mov
es
dec
(bad)
push
ret
or
into
pop
or
(bad)
dec
sub
test
pop
sub
cmp
imul
push
xchg
iret
jnp
vsubpd
pop
mov
and
aad
mov
mov
aaa
push
iret
jns
cld
push
lock
shl
rcr
dec
mov
stos
or
ja
lea
jmp
fst
jbe
mov
add
cmp
push
xchg
int
xor
test
pop
push
retf
xlat
cmp
lea
dec
shl
jp
inc
addr16
test
ud1
add
xchg
sub
mov
pop
fdivr
push
arpl
ret
xor
movs
push
mov
lahf
fdivr
out
imul
push
cmps
xchg
fstp
ret
mov
jmp
loope
jecxz
sub
push
stos
jmp
movs
mov
xor
jmp
push
int
aaa
and
daa
xchg
cmp
maskmovq
test
cmps
scas
fdivp
in
jae
xor
add
sub
sub
push
push
dec
adc
mov
ret
pushf
hlt
jmp
cli
fnstenv
lock
sub
jae
push
add
daa
xchg
scas
sbb
inc
aas
(bad)
xor
je
lods
test
push
jg
in
jl
popa
pop
and
jl
jmp
ret
cmc
xchg
push
sub
or
or
cmc
imul
jb
pop
lods
add
mov
cmps
jge
mov
mov
jl
call
(bad)
aam
aaa
add
movs
mov
sbb
dec
(bad)
mov
stos
enter
push
push
jbe
shl
pop
lahf
je
sub
jmp
in
jno
mov
mov
stc
retf
inc
lds
sbb
popf
(bad)
mov
neg
adc
push
nop
bound
adc
pop
xchg
jne
adc
hlt
shl
push
jp
aaa
xabort
add
jae
pop
test
pop
pop
inc
in
sbb
repz
ror
mov
jmp
mov
mov
add
inc
mov
std
into
push
fadd
push
mov
dec
sub
push
push
cmp
bound
ins
and
adc
dec
outs
sub
and
shl
(bad)
cmp
cmp
xchg
mov
jle
in
or
mov
mov
xor
(bad)
cmc
mov
adc
cdq
push
hlt
inc
push
setbe
mov
mov
out
push
repz
lock
retf
fisttp
fldcw
jmp
dec
cmp
imul
cmp
and
mov
add
cs
or
data16
jb
popa
lahf
pusha
jmp
push
mov
mov
fs
push
es
push
sbb
and
dec
add
aad
or
(bad)
dec
stc
icebp
js
in
(bad)
adc
push
shrd
add
stc
nop
add
dec
fwait
sub
pop
or
cmp
(bad)
in
cmp
mov
jle
push
loop
cmps
enter
sub
rcr
test
adc
lds
shl
nop
icebp
arpl
and
shl
rcr
pop
pop
test
dec
int3
and
jnp
cmp
mov
retf
punpckldq
sbb
push
sbb
add
iret
jne
in
fcomp
xchg
outs
xchg
jle
sar
sub
dec
xor
call
push
ret
jge
pop
jmp
jl
repnz
dec
in
or
jge
in
jo
fsubp
add
retf
out
and
mov
ss
and
xchg
or
or
or
ss
adc
(bad)
xchg
xlat
inc
mov
sub
out
cdq
sbb
hlt
fs
cld
aad
pop
fild
xchg
jle
mov
aaa
ins
outs
jecxz
mov
div
push
mov
out
(bad)
gs
rcl
(bad)
and
daa
jge
in
push
stos
dec
dec
xor
sub
and
mov
scas
mov
(bad)
cmp
fld
call
dec
test
push
cwde
sbb
adc
xor
xor
pop
and
call
rol
or
sub
out
pop
ret
std
xchg
retf
mov
dec
mov
push
sub
(bad)
(bad)
or
pop
jg
cdq
dec
mov
out
xchg
dec
mov
mov
jp
js
or
mov
cmp
pop
adc
adc
pop
push
mov
inc
sub
das
push
push
rcl
cmp
sahf
inc
push
outs
sbb
add
imul
in
mov
cld
jno
stc
adc
(bad)
adc
pushf
sahf
push
mov
or
push
hlt
jns
stos
inc
(bad)
pop
sub
dec
and
retf
int3
lahf
push
nop
sahf
fnsave
ficomp
push
mov
mov
stc
(bad)
push
xchg
jmp
cmp
add
xlat
lds
test
nop
es
popf
mov
sar
dec
popa
lahf
xlat
xchg
pop
mov
mov
add
adc
fcomp
movs
sub
movs
add
in
in
adc
outs
lea
cmp
xchg
movs
icebp
data16
scas
sub
das
sub
daa
or
sbb
sbb
and
in
mov
mov
xchg
inc
and
sbb
mov
inc
dec
(bad)
push
push
push
(bad)
fdiv
popa
mov
les
(bad)
push
mov
stos
fcom
jp
les
push
sbb
ds
dec
fwait
inc
pop
push
push
sbb
in
or
sub
xchg
pop
sbb
adc
int3
jno
addr16
(bad)
call
fwait
push
mul
pop
sub
bound
ret
mov
and
mov
std
adc
cli
sub
jl
cmp
pop
dec
cmps
addr16
in
and
(bad)
(bad)
je
push
adc
or
mov
mov
leave
rcl
pop
retf
retf
cli
ret
out
mov
cmp
cmp
mov
int3
xchg
outs
scas
(bad)
ret
adc
outs
leave
and
jns
jbe
aad
adc
rcl
fidiv
sbb
and
sti
xor
bound
dec
cld
sbb
iret
jg
adc
push
jmp
xor
lahf
inc
xor
mov
push
popa
mov
dec
mov
add
xchg
pop
(bad)
jg
fistp
dec
loope
push
dec
fwait
add
jne
dec
(bad)
sub
cs
(bad)
(bad)
repnz
dec
and
sbb
cmps
outs
rcr
and
add
(bad)
cmps
imul
and
mov
jl
mov
sbb
xchg
ins
cmp
pop
xor
mov
cmovl
cli
outs
jns
cmp
push
in
mov
fiadd
jge
sbb
mov
mov
push
xor
scas
sub
ins
xor
inc
xchg
aaa
pop
dec
stos
stos
(bad)
cli
fst
or
lea
in
jnp
adc
adc
out
jbe
stc
sub
add
stos
(bad)
mov
push
inc
push
mov
mov
scas
xor
pop
cmps
out
lods
mov
dec
push
test
jecxz
jp
xlat
and
inc
out
xchg
test
mov
push
test
hlt
scas
inc
stos
(bad)
pop
sub
sbb
imul
js
mov
mov
test
xor
ins
xor
push
cmp
test
cmp
loop
(bad)
sub
push
enter
ds
dec
mov
leave
rcl
jecxz
call
outs
sub
jae
aad
jp
out
xchg
mov
in
dec
fiadd
pop
jo
cs
dec
or
push
pop
xor
popf
mov
lahf
arpl
xchg
dec
mov
shr
dec
and
dec
fucomip
addr16
sub
hlt
cmp
test
dec
mov
mov
mov
sub
cdq
push
test
push
xchg
inc
lock
add
scas
out
std
inc
stos
cmp
cmp
cld
inc
adc
outs
mov
test
lock
jmp
outs
pop
and
cmps
fist
(bad)
jle
inc
and
xchg
pop
js
test
mov
cmp
fidiv
sbb
adc
stos
xchg
pop
hlt
addr16
mov
pop
sub
cmps
jne
into
and
mov
pop
aas
mov
adc
xor
dec
jno
sub
daa
dec
cmp
(bad)
xchg
jns
and
dec
xor
lods
call
sbb
addr16
xlat
mov
rol
xor
mov
cmps
cmp
mov
iret
aad
mov
mov
cmps
add
mov
icebp
cmp
sar
jno
xchg
ins
or
sbb
pop
pop
pop
add
imul
mov
scas
and
lock
sub
or
adc
push
pop
imul
push
jl
jns
and
pop
inc
and
cmp
rol
adc
sbb
in
shl
ret
xchg
scas
(bad)
cmp
fs
xlat
mov
test
pop
mov
pop
cdq
loop
lahf
les
ret
in
cmp
adc
cmp
xor
sub
xor
(bad)
push
xchg
mov
cdq
out
dec
dec
xor
ja
xlat
imul
ds
push
pop
or
retf
loop
jbe
stos
aaa
punpcklbw
adc
cli
cmp
aaa
inc
sub
fiadd
xchg
rol
cdq
cld
mov
push
inc
clc
fbstp
retf
and
xchg
loop
fwait
clc
ret
sbb
add
push
jnp
add
mov
xchg
mov
adc
mov
jne
sti
mov
cmc
(bad)
lods
(bad)
cmp
leave
dec
mov
scas
retf
in
ins
or
pop
(bad)
push
sub
out
daa
inc
ror
loope
movs
in
dec
clc
mov
mov
daa
inc
and
loope
xchg
inc
fist
leave
sub
adc
pop
pop
neg
push
stc
lea
adc
or
enter
out
add
mov
cmp
(bad)
xchg
push
cli
lahf
in
add
sub
sbb
jmp
int3
fidiv
test
jbe
and
dec
xchg
data16
pop
cs
(bad)
inc
mov
inc
or
xor
gs
or
sbb
out
and
sbb
xor
sbb
pop
cmp
sbb
cwde
mov
xchg
push
jle
pop
(bad)
pop
sahf
push
icebp
or
dec
add
and
add
mov
js
fdivr
jle
pushf
(bad)
xchg
mov
pushf
fisub
jns
ja
stos
push
ins
add
add
ret
mov
mov
push
cmps
xchg
stos
add
inc
stos
lea
push
jmp
in
cmp
sbb
push
pop
(bad)
rcr
lea
lea
mov
xor
pushf
or
test
fs
push
inc
aaa
movs
(bad)
scas
js
enter
pop
icebp
test
leave
mov
jno
jo
mov
rcr
mov
fxch
mov
mov
test
sbb
sub
(bad)
stos
test
fdiv
aam
repnz
movs
push
ja
mov
mov
dec
retf
add
pop
out
inc
add
cli
pop
les
shl
xor
add
or
cmps
leave
hlt
iret
cmps
sahf
adc
enter
inc
ja
adc
xchg
jle
or
and
inc
shl
push
xchg
ins
fnstenv
es
dec
cmp
ss
mov
xchg
dec
jb
add
test
test
call
xchg
pop
inc
imul
mov
xor
js
sub
pop
(bad)
jle
mov
cmp
aaa
sahf
call
fs
cdq
cmp
out
push
sbb
add
mov
bound
out
xor
scas
ret
fidivr
inc
sbb
push
mov
and
std
cmc
lods
ds
mov
mov
out
xchg
pop
(bad)
sbb
push
jle
(bad)
xlat
xchg
xchg
cmp
jmp
and
js
fimul
outs
or
push
pop
dec
aas
pushf
int
ret
mov
cmp
pop
add
dec
neg
mov
xchg
out
pushf
aam
mov
xor
out
and
adc
retf
call
or
xor
imul
dec
jecxz
aad
and
jmp
mov
mov
icebp
shr
lods
lds
iret
mov
jno
movs
daa
xor
mov
ds
dec
fist
mov
inc
sbb
add
xchg
inc
movs
ins
jne
pop
jnp
scas
jge
mov
daa
inc
fist
xor
xchg
lods
mov
call
inc
in
ins
sti
call
sub
pushf
sub
sbb
(bad)
call
sbb
fistp
ins
test
xchg
and
call
test
xor
ins
(bad)
mov
xchg
je
push
lods
cmp
sbb
shl
and
cmps
addr16
repz
mov
in
outs
leave
dec
and
hlt
xlat
mov
aas
ror
movs
xchg
adc
xchg
lea
or
mov
adc
xchg
call
xchg
xor
sbb
fcomp
push
fs
cwde
cs
popa
lods
(bad)
(bad)
jae
popa
pop
add
xor
or
push
call
dec
adc
inc
jne
xchg
jl
(bad)
adc
jp
push
(bad)
xchg
pop
stos
ins
sbb
vmwrite
dec
stos
pop
jno
test
data16
xor
pop
adc
(bad)
and
pop
xchg
cwde
sub
lods
sub
mov
cmp
mov
jmp
pop
jle
push
sbb
scas
pushf
sar
fsub
cwde
jbe
xchg
(bad)
imul
xchg
clc
adc
les
lock
adc
mov
popa
add
rcl
(bad)
call
loopne
idiv
or
push
loope
inc
fwait
jmp
mov
add
adc
mov
xor
imul
inc
mov
out
push
lds
jl
mov
ss
lods
dec
scas
lock
sahf
ficomp
out
pop
and
and
pop
jecxz
cmps
push
bswap
test
fidivr
(bad)
xor
mov
and
scas
pop
sbb
shr
sub
and
jae
inc
dec
inc
xor
js
jns
mov
sahf
push
cmps
(bad)
push
outs
fstp
and
shl
pop
sbb
lea
test
xor
dec
add
sahf
xchg
call
dec
add
mov
push
sub
adc
loope
movs
pop
mov
pop
xchg
push
fnstcw
icebp
movs
xor
and
mov
mov
fwait
inc
bound
sbb
popf
mov
ficom
jp
pop
push
cs
fs
xlat
push
xor
mov
stc
push
shl
leave
dec
jle
fdivp
adc
retf
pop
mov
outs
or
dec
jno
mov
add
imul
enter
icebp
loop
jb
jb
pop
movs
(bad)
je
test
imul
fdivr
mov
fcomp
data16
shl
mov
mov
mov
sti
repz
mov
lock
cmps
jne
jmp
cwde
pop
scas
add
rcr
jmp
inc
sti
sub
stos
stc
sbb
mov
mov
cmp
adc
(bad)
fwait
jp
dec
sahf
sub
pop
jl
pop
xor
mov
cmc
cmps
pop
fdivrp
stos
jp
vpor
(bad)
and
out
fsubr
cmps
push
mul
cmps
sti
sbb
cmps
sbb
div
cmp
shl
lock
jo
cld
jle
mov
int3
mov
dec
add
call
add
neg
fnsave
(bad)
or
sub
dec
arpl
mov
in
inc
cmps
mov
sti
scas
lock
movs
jmp
inc
fcomp
xchg
movs
jbe
inc
jecxz
loopne
or
pop
les
adc
xlat
lea
mov
test
fdiv
or
mov
push
mov
jnp
adc
call
pusha
ins
push
sti
pop
lods
push
out
sbb
jns
jbe
sahf
fwait
fwait
pop
mov
mov
mul
lahf
daa
and
xchg
shl
and
outs
jecxz
cld
(bad)
jne
cli
fwait
add
pop
jae
fisub
jae
xchg
mov
dec
cmp
jns
(bad)
gs
popf
ss
mov
shl
cld
pop
(bad)
fldcw
pop
mov
fdivr
retf
cmp
push
sbb
int
xor
cli
sbb
add
es
mov
test
jnp
push
dec
cld
adc
sbb
xchg
neg
fwait
mov
ficom
jae
fisubr
pop
inc
(bad)
scas
pop
sahf
scas
jo
icebp
sbb
mov
repz
imul
mov
int3
push
imul
pop
inc
and
mov
sar
dec
mov
lods
mov
loopne
sahf
ds
cmp
cmp
jne
adc
cwde
dec
int3
retf
clc
jmp
xchg
mov
dec
mov
or
inc
inc
mov
pmulhuw
imul
mov
cwde
mov
es
xchg
sub
jb
scas
cmp
pusha
cmp
and
sub
pop
jo
sbb
dec
dec
xchg
xor
inc
fstp
adc
cli
adc
inc
enter
mov
aad
in
lock
and
mov
fnsave
mov
out
out
ret
retf
ins
sub
iret
dec
or
stos
mov
iret
into
sub
retf
adc
(bad)
aaa
pop
dec
mov
sub
or
dec
add
or
xchg
inc
sub
(bad)
mov
je
cmp
xor
pop
and
loop
nop
jecxz
and
mov
js
aam
or
pop
into
enter
fild
xchg
xor
fdiv
jae
xchg
nop
sub
cmps
cmp
jp
xchg
mov
mov
cwde
in
and
call
mov
mov
push
out
cmp
movs
ja
iret
scas
mov
xchg
jb
aad
xor
pop
mov
mov
sahf
and
js
les
mov
push
xchg
leave
lahf
jmp
dec
pop
push
adc
mov
(bad)
(bad)
clc
stos
sub
(bad)
fwait
cwde
in
pop
mov
in
cmp
rcr
push
dec
fiadd
sbb
mov
jl
jno
mov
mov
or
jbe
xchg
mov
jne
fisttp
or
adc
push
shr
mov
jno
scas
out
dec
inc
fnsave
daa
stos
xchg
leave
mov
push
and
(bad)
imul
mov
hlt
mov
jmp
stc
push
popa
dec
lods
ins
inc
test
cmp
mov
sbb
cmp
adc
xor
popf
scas
movs
lds
or
cli
xlat
mov
sbb
fimul
fld
ss
sub
inc
stos
jle
and
mov
fistp
mov
jg
mov
xchg
xor
fsubr
dec
jp
test
in
or
xchg
dec
xor
push
mov
gs
popf
int
es
add
scas
call
cmps
dec
test
xrelease
into
repnz
loopne
dec
push
stos
shl
xor
fs
fiadd
(bad)
xor
in
sti
ins
cmp
mov
inc
jle
sbb
mov
int3
outs
add
mov
cmp
mov
popa
mov
ds
aam
mov
cld
inc
mov
cmp
pop
push
in
stc
jno
ud1
aaa
lds
push
clc
add
mov
push
fisubr
push
shr
rcr
int
lock
inc
inc
call
icebp
pop
mov
into
(bad)
inc
add
ret
xchg
nop
push
mov
adc
or
inc
ins
leave
jne
es
imul
push
lods
mov
push
mov
cmc
sub
(bad)
xlat
dec
outs
aas
retf
jge
outs
call
adc
int3
in
test
test
test
cli
stc
jo
loopne
dec
mov
mov
mov
mov
fs
js
test
stos
in
test
jmp
daa
sub
add
jns
mov
inc
or
mov
mov
das
jp
test
sbb
sbb
mov
call
cwde
lods
in
mov
mov
add
dec
enter
test
add
pop
jle
mov
stc
fmul
call
pop
adc
test
ins
shr
inc
dec
cli
cmps
push
push
aaa
stc
mov
mov
jmp
mov
sub
xor
test
out
mov
or
in
sbb
sub
ins
mov
push
leave
mov
inc
in
inc
daa
mov
in
dec
outs
pop
fwait
popf
call
adc
mov
push
xor
shl
gs
adc
pusha
fwait
dec
push
cmp
imul
jle
xor
shl
xor
imul
cdq
dec
leave
loop
or
lods
ds
scas
jle
div
cmps
pusha
imul
in
xor
sub
retf
cmps
pop
ss
pusha
hlt
mov
inc
jo
pushf
lock
push
fsub
push
mov
xor
add
push
push
mov
jno
daa
test
mov
push
xor
js
das
mov
pop
leave
int3
mov
daa
lods
retf
xchg
pop
pusha
pop
cmc
js
imul
call
movs
sbb
sbb
sti
xchg
adc
bound
cmp
adc
data16
cmps
fcom
call
xchg
out
xor
xchg
xchg
retf
scas
xchg
inc
jp
jno
mov
arpl
mov
xor
mov
dec
pusha
pop
sbb
sub
mov
push
(bad)
sar
icebp
pop
(bad)
mov
fdivr
pusha
ret
mov
test
or
pop
pop
add
into
pop
sub
out
mov
dec
sar
xor
bound
ins
outs
into
inc
test
mov
jnp
in
sub
jbe
sahf
adc
pop
(bad)
push
cs
xchg
dec
sub
or
aad
(bad)
mov
jl
mov
cmps
xchg
pop
jp
fldenv
xchg
jnp
jg
scas
repnz
aad
xor
fnstcw
pop
add
mov
jmp
cmp
inc
pop
mov
and
sub
inc
mov
arpl
aam
mov
jmp
mov
push
cmovae
sub
adc
cmc
(bad)
loopne
cmp
imul
(bad)
pop
hlt
dec
mov
push
inc
jnp
sub
pop
push
fs
inc
stc
jo
es
(bad)
mov
out
push
push
cmp
cmp
pop
mov
xor
push
mov
push
pop
xchg
stc
popa
rcr
repz
push
(bad)
ret
mov
push
out
and
jb
je
stc
rcr
sub
ss
mov
push
test
dec
test
add
jecxz
test
lock
dec
sbb
cmp
and
push
bound
out
inc
(bad)
hlt
clc
xchg
push
fwait
add
and
fadd
jmp
cs
stos
jmp
(bad)
imul
inc
xor
cmps
push
js
jle
mov
xchg
and
xabort
(bad)
lea
and
mov
enter
mov
pop
xchg
je
xor
or
jg
and
loope
pop
push
data16
les
push
jns
icebp
pop
sub
xor
xor
sub
adc
retf
or
add
or
and
fcom
pop
jae
pop
lds
sub
pop
in
inc
pop
inc
lods
mov
mov
in
retf
pop
mov
adc
mov
js
cdq
xor
cmps
fldcw
movs
ret
push
mov
pop
xchg
cdq
cmps
nop
arpl
pusha
stos
lods
push
std
add
mov
pop
mov
loopne
lock
lock
jne
cs
and
fimul
sub
inc
mul
and
cmp
xchg
add
and
ffree
cmp
cmc
jmp
or
xor
and
popa
lock
imul
xchg
daa
add
mov
mov
and
loopne
mov
inc
jmp
into
in
sub
js
mov
stos
repnz
repnz
stos
inc
aas
mov
mov
stc
fsubr
sbb
cli
popf
idiv
ja
fucom
lods
inc
inc
dec
pop
gs
adc
add
mov
add
push
daa
pop
nop
or
xchg
inc
leave
nop
cmp
aad
pop
cld
(bad)
xchg
and
xor
call
test
mov
in
lods
add
pop
mov
mov
(bad)
lds
sub
pop
inc
inc
xchg
xor
inc
or
pop
lods
int
in
paddd
jp
pop
mov
imul
inc
pop
and
pop
das
sti
lock
pop
ss
lds
pop
in
push
jo
jo
outs
jmp
add
into
jle
cs
jecxz
rol
ret
out
inc
pop
adc
mov
xor
jl
mov
cmp
shl
retf
push
(bad)
imul
fwait
dec
stc
xchg
push
inc
push
cmp
movs
retf
clc
xchg
cmp
ret
loop
iret
sub
das
cmp
mov
adc
sbb
mov
ret
retf
nop
sbb
add
jns
div
repz
cmps
mov
rdtscp
or
mov
mov
ins
sbb
xor
mov
in
mov
mov
in
in
xor
pushf
shl
imul
mov
xor
xchg
cmp
mov
loop
mov
popa
push
lock
aad
out
mov
pop
enter
mov
not
rcr
test
adc
pushf
call
imul
jb
dec
mov
dec
inc
shl
fwait
ret
jae
mov
push
fucompp
movs
xor
movs
dec
leave
lahf
xor
loope
mov
retf
sub
push
(bad)
or
inc
das
mov
ret
jne
movs
cmp
repz
mov
or
xchg
test
sbb
loopne
stc
fcomi
mov
out
pushf
cdq
xlat
or
cmp
bound
sub
stos
push
push
add
jle
mov
mov
push
stos
pusha
sub
fs
mov
cmp
add
sbb
das
push
or
test
cmp
push
pop
inc
sub
pop
sub
arpl
add
ins
adc
push
cmp
jno
mov
loop
pop
xor
jmp
shl
out
mov
retf
jns
xchg
data16
sbb
arpl
ins
pop
adc
loop
jmp
rcr
jl
adc
popf
mov
add
pop
inc
ja
mov
add
dec
mov
cmps
pop
ds
cld
mov
mov
ror
jo
or
sub
xor
aas
mov
pop
ror
add
xor
pop
pop
or
push
push
sbb
fdivp
loopne
daa
sub
jns
pop
sub
call
xchg
pop
js
dec
lea
dec
add
adc
jecxz
xchg
push
call
ins
sar
jmp
push
and
or
sbb
mov
adc
push
add
sub
sbb
sbb
push
dec
test
or
into
inc
popf
mov
cmps
clc
ins
ror
xor
or
cmp
aam
sti
addr16
inc
or
xor
pop
mov
mov
cmps
and
lock
lods
xlat
in
push
lea
add
imul
cwde
push
add
addr16
jmp
sub
test
inc
(bad)
push
test
jle
arpl
loope
popaw
std
mov
inc
fstp
in
mov
pushw
adc
aad
addr16
or
adc
dec
scas
in
cmp
mov
mov
jmp
dec
call
push
(bad)
icebp
pop
fdiv
out
sub
pop
xchg
sbb
and
scas
sahf
ror
jge
inc
mov
sub
call
aaa
hlt
add
dec
xor
sbb
cmp
sbb
jle
fwait
or
cld
push
jnp
shl
xor
adc
mov
retf
dec
fdivp
cdq
je
and
jmp
mov
xor
inc
jo
mov
pop
add
or
dec
pop
(bad)
loope
sar
adc
je
sub
stos
pop
sub
xor
pop
sar
add
jge
outs
fidivr
jae
fmul
sar
mov
pop
adc
hlt
dec
mov
cmc
or
mov
test
addr16
jo
(bad)
pop
mov
add
(bad)
jmp
clc
test
inc
xor
stos
mov
jnp
mov
lods
retf
push
ret
xchg
inc
data16
mov
inc
pusha
push
fld
add
mov
mov
fsubr
mov
stos
sub
out
imul
outs
imul
aas
rcr
sahf
scas
and
lea
xor
popa
in
mov
cmp
(bad)
xchg
adc
sbb
lahf
retf
and
jne
shl
ds
mov
inc
outs
adc
mov
ret
retf
aad
mov
out
aam
call
pop
jp
mov
dec
movs
adc
in
and
andps
xchg
pop
das
movs
loop
das
mov
push
mov
pop
or
es
pop
sub
cmc
int
int3
stc
mov
push
and
dec
loope
mov
xacquire
cli
push
in
jae
xchg
add
rcr
xor
cdq
not
inc
jl
xchg
je
add
mov
jp
adc
aad
(bad)
sub
or
xchg
jg
push
inc
xlat
in
loopne
lea
in
sahf
sbb
xor
ss
cld
lds
fisub
sub
sub
imul
xchg
dec
add
mov
xlat
mov
frstor
mov
and
mov
fbstp
jp
(bad)
pop
imul
mov
lods
mov
mov
inc
cli
cmp
stos
push
(bad)
dec
add
dec
pusha
cld
adc
add
pop
jne
xchg
(bad)
loop
sahf
mov
call
fwait
(bad)
push
out
sub
les
jl
jae
push
ds
push
mov
loopne
in
push
mov
aaa
jg
call
cld
jge
jp
push
stos
mov
cmp
push
ds
mov
into
cmp
sub
(bad)
aad
hlt
push
cmp
ror
movs
push
add
sbb
pop
adc
gs
sbb
cmps
xor
pop
mov
sbb
in
xor
push
cs
xor
lahf
mov
or
or
nop
or
and
lock
pop
(bad)
fs
in
mov
and
aaa
(bad)
in
mov
sar
mov
hlt
sub
lods
inc
ins
xchg
fnstenv
pusha
inc
(bad)
xlat
adc
dec
jne
ins
out
(bad)
adc
jmp
adc
jae
call
add
bnd
mov
add
inc
fs
pop
shr
mov
mov
jns
and
dec
pop
test
push
pop
(bad)
cmps
add
sbb
push
dec
mov
add
pop
cdq
xlat
ja
je
leave
test
push
xor
out
data16
lahf
sahf
in
(bad)
test
jecxz
dec
fdivr
scas
push
add
and
push
pusha
scas
mov
push
inc
lock
push
pop
jnp
cmp
int
jb
cld
bound
pop
dec
int
push
mov
jecxz
aas
cmp
idiv
ja
jg
test
gs
mov
in
jb
xchg
sbb
cli
cmp
(bad)
sar
cmps
or
mov
sti
jo
jmp
(bad)
int3
jmp
push
aad
in
pop
in
cs
inc
push
pushf
je
sahf
push
std
inc
test
cmps
dec
out
das
push
movs
jns
cmp
cmps
stc
mov
mov
in
jns
push
movs
je
imul
mov
mov
adc
and
adc
repz
mov
jmp
popf
jecxz
clc
mov
adc
mov
adc
push
jle
(bad)
xor
movd
pop
sub
xor
int
dec
out
sahf
jg
scas
cmc
mov
es
or
imul
sbb
jno
ja
pop
loopne
(bad)
rcl
aam
popa
int3
daa
in
push
movs
xchg
cwde
jmp
fiadd
imul
pop
js
lods
sar
int
lods
or
std
cmp
and
cli
cmp
daa
jno
out
fwait
icebp
movs
adc
pop
jae
pop
into
pop
cmc
lds
mov
ds
lock
test
daa
stc
out
shl
ins
inc
ins
imul
add
sub
cld
loope
pop
push
inc
repz
push
push
pop
dec
imul
ins
inc
sbb
test
pop
fcom
cmc
aaa
shr
mov
pop
pushf
repz
in
add
addr16
jmp
ror
je
add
shl
mov
inc
sahf
inc
push
shl
cmc
sub
or
jo
aas
mov
sbb
sbb
mov
mov
adc
sbb
ins
mov
xchg
mov
inc
xlat
xchg
mov
or
add
dec
jns
push
ds
nop
dec
sub
jmp
popf
pop
jmp
iret
jnp
lock
in
(bad)
imul
stos
push
cmp
dec
cmp
push
cmps
mov
iret
pop
cmp
mov
(bad)
loope
enter
adc
add
inc
je
(bad)
jmp
mov
mov
lock
test
cli
cmc
shl
jo
mov
fsubr
mov
fst
pop
xchg
mov
pop
and
sbb
or
xchg
inc
lods
mov
in
sub
fisubr
xchg
aas
jnp
lods
inc
arpl
xchg
leave
retf
out
xchg
aaa
cmp
xchg
sahf
pop
push
lods
adc
jb
mov
shl
and
test
leave
mov
ret
arpl
add
mov
mov
cmps
mov
out
imul
mov
popa
cmp
cwde
aaa
cmp
loopne
xchg
sbb
ins
push
pushf
mov
mov
jl
outs
push
les
mov
sbb
sbb
xchg
jmp
xchg
iret
xor
xchg
imul
jb
(bad)
rep
sbb
outs
mov
add
mov
lock
mov
(bad)
mov
inc
scas
push
data16
shl
mov
aad
fsub
fbld
cmps
pop
inc
out
cmps
cmp
xor
mov
pop
ret
sbb
mov
adc
xchg
sbb
out
js
cwde
inc
jg
jb
pop
imul
mov
sbb
push
out
pusha
inc
mov
bound
adc
dec
arpl
retf
retf
and
out
rol
and
bound
sbb
inc
(bad)
sahf
jae
cli
and
dec
shl
xchg
jmp
pop
outs
sbb
clc
arpl
fsub
shl
enter
pushf
push
mov
test
test
imul
popa
fst
push
add
add
call
cmp
mov
outs
mov
push
retf
enter
mov
inc
push
pusha
inc
adc
mov
shl
shl
fwait
cmps
scas
push
ds
inc
icebp
cmp
and
mov
fmul
or
fisubr
stos
js
mov
lock
push
ins
xchg
mov
movs
cmp
xor
mov
push
cmp
int3
(bad)
enter
adc
out
ret
push
mov
cmp
adc
loop
(bad)
or
jl
test
sbb
aaa
adc
inc
sbb
rcr
mov
inc
outs
mov
sti
loop
add
xlat
xor
dec
cdq
xor
xor
outs
pop
lods
dec
call
popa
cmps
xchg
adc
outs
clc
mov
data16
out
int
ss
aas
fist
mov
mov
adc
popf
sti
sub
adc
ret
popf
jo
sbb
adc
or
xchg
mov
fstp
push
push
enter
ret
push
add
push
jge
jno
cwde
(bad)
ret
push
mov
dec
aaa
iret
stos
scas
icebp
repnz
or
(bad)
pop
rcr
mov
popa
repnz
adc
stos
xchg
cmp
dec
cli
repnz
mov
mov
cmp
push
push
push
sbb
and
popa
shl
inc
cmp
xor
jb
inc
adc
clc
adc
cmp
jmp
xor
jmp
(bad)
jmp
test
shl
outs
aaa
pop
bound
or
jbe
push
push
mov
dec
push
test
adc
gs
je
jecxz
cmp
lods
mov
cmc
pusha
and
cmp
les
ins
cmp
jne
fwait
cli
stc
sbb
sbb
mov
ficom
(bad)
xchg
sahf
pop
jo
mov
mov
sub
int3
shl
int
popf
fisub
aaa
ds
shl
xchg
mov
in
cdq
push
fiadd
je
dec
xchg
nop
(bad)
aaa
rol
(bad)
adc
lods
dec
sub
dec
jp
pop
inc
arpl
test
loopne
stos
icebp
sub
loop
(bad)
lahf
jae
jle
cld
rcr
fwait
push
xchg
iret
cmp
sub
dec
into
jb
(bad)
cmp
dec
into
loopne
push
mov
std
mov
test
in
xchg
(bad)
pusha
stos
pop
adc
in
cdq
sub
dec
fmul
sahf
or
cmc
pop
sbb
add
mov
in
cmp
sbb
dec
mov
(bad)
adc
test
xchg
test
lods
shl
or
pop
mov
out
lea
fisub
add
xor
pop
mov
scas
into
sbb
in
cmp
or
cmp
cmp
xchg
xchg
xchg
ds
jb
out
jg
nop
loop
mov
stos
loopne
pop
pusha
push
sti
outs
pusha
test
jl
push
xor
xor
dec
movs
loope
enter
sbb
scas
jmp
pop
xor
pop
retf
aad
dec
pop
sbb
loop
femms
mov
xchg
mov
push
daa
jmp
lods
sbb
pop
cmp
mov
add
nop
adc
inc
or
mov
imul
fadd
push
mov
test
mov
sub
loop
(bad)
pop
xchg
les
test
rcr
jl
fsub
je
mov
loop
jae
cmps
adc
cmp
out
cmp
call
inc
idiv
push
rcl
pop
pusha
sub
aam
adc
or
fisub
xlat
jb
(bad)
mov
jb
sbb
icebp
or
call
push
mov
jg
std
pop
mov
jmp
sub
pop
xchg
sub
jge
mov
popa
inc
sub
cdq
mov
ret
add
dec
repnz
xchg
push
repnz
mov
xchg
imul
nop
out
lods
ins
or
lock
jbe
nop
cdq
jo
add
push
clc
cwde
iret
arpl
ins
shl
cmp
bound
rcl
dec
or
cs
pop
into
cmc
cmp
xchg
scas
in
add
push
movs
dec
bound
(bad)
retf
push
pop
in
fldenv
std
ror
adc
dec
jbe
test
push
sbb
and
out
clc
dec
iret
push
mov
idiv
aad
lar
adc
inc
jecxz
sub
sub
outs
adc
and
leave
retf
inc
inc
lock
test
cmp
sub
imul
out
in
aad
in
xchg
shl
ds
cmps
cmps
scas
movs
fsubrp
cwde
pushf
not
mov
std
imul
xchg
push
sahf
icebp
repnz
mov
scas
ins
out
test
or
inc
mov
cmp
sbb
sub
adc
cmp
xchg
cmp
ror
call
les
add
jmp
mov
out
rol
push
sti
cmp
js
jecxz
adc
in
out
or
movs
cs
sti
cmps
loop
jl
jnp
cmp
cdq
dec
or
mov
pop
mov
(bad)
pop
repnz
push
aam
or
js
cmp
inc
cmp
fidiv
mov
jno
xor
sbb
stos
mov
add
pop
ror
dec
lods
sar
and
cmp
je
add
lahf
lahf
scas
cmp
mov
add
aam
push
cmp
add
jmp
add
jbe
cld
mov
cwde
(bad)
mov
cmp
sbb
jmp
ret
icebp
popf
leave
push
dec
lea
cmps
(bad)
push
outs
sbb
ins
mov
stos
adc
mov
sbb
mov
cmp
push
fwait
repz
push
jp
mov
(bad)
dec
test
push
jge
add
mov
out
je
addr16
pop
mov
dec
mov
dec
retf
push
pop
mov
push
scas
sbb
fimul
push
push
cmp
mov
pop
(bad)
adc
(bad)
push
outs
add
push
fcomp
cmps
cwde
(bad)
test
pop
pop
into
dec
jne
inc
cs
ins
dec
mov
loopne
retf
cmps
xor
inc
in
sbb
inc
inc
push
outs
hlt
and
ja
jle
fiadd
arpl
iret
mov
cdq
jl
and
sbb
out
mov
scas
fwait
int3
loop
jmp
imul
lods
dec
push
xlat
mov
inc
adc
bound
fs
fwait
jb
pop
rol
xor
mov
jo
les
gs
outs
dec
stos
int
push
push
sub
jno
ror
dec
jns
dec
jle
or
js
cs
out
cld
sbb
inc
inc
jne
jne
sub
lea
push
jae
out
cdq
sbb
or
rcl
adc
loop
outs
ret
test
hlt
ja
and
cld
mov
pop
inc
mov
mov
jp
and
lods
push
xor
lahf
scas
jle
sbb
loope
mov
arpl
(bad)
retf
push
in
stc
in
test
ret
xchg
in
add
fdiv
imul
shl
push
pop
fs
jmp
jbe
cmp
and
retf
frstor
ins
stos
aaa
sbb
sbb
fcomp
xor
scas
mov
dec
scas
int
call
xchg
push
add
gs
in
mov
lds
sub
ss
and
xor
cmp
push
xor
mov
xchg
cmp
dec
add
xchg
pop
xchg
enter
xor
xchg
leave
add
popf
push
pop
sub
push
dec
adc
jne
xchg
daa
test
xchg
cwde
das
test
jb
das
xor
cdq
adc
lea
loop
in
lahf
mov
mov
xchg
mov
fs
(bad)
mov
jl
(bad)
and
dec
sbb
(bad)
sbb
pop
fwait
arpl
mov
push
mov
loopne
ja
cmp
push
pop
lea
cs
jb
int3
jge
fisubr
loop
mov
dec
adc
sub
out
sub
std
mov
call
mov
xor
xchg
movs
jne
loope
inc
call
popf
stc
jns
das
scas
fwait
ret
mov
push
fs
test
and
cmps
xor
and
jmp
stos
fcmovb
cmp
jb
push
cdq
adc
loope
addr16
movs
jmp
mov
xchg
pop
mov
push
adc
mov
adc
hlt
out
cs
mov
int
rcr
retf
sub
sub
out
fbstp
leave
cwde
mov
std
cdq
and
fwait
xchg
sbb
push
and
fs
mov
cld
mov
adc
adc
sub
push
and
sbb
or
lods
mov
mov
xlat
mov
je
out
push
shl
cli
pusha
jnp
int
pop
jg
sbb
xchg
popa
(bad)
cmc
xor
fistp
in
push
outs
xlat
jae
shl
mov
mov
inc
pop
adc
mov
sub
retf
mov
sbb
and
adc
fldcw
jp
imul
mov
pop
fmul
ins
jge
out
mov
add
xchg
mov
jb
ins
jne
jmp
rol
sbb
ficomp
out
inc
out
jg
mov
adc
dec
mov
mov
jle
sub
mov
xchg
cld
test
dec
cmp
aam
pop
sbb
orps
dec
arpl
ins
mov
pop
repz
lahf
fucomp
push
outs
xchg
not
ss
mov
sbb
test
and
cld
pop
movs
out
inc
mov
push
(bad)
neg
sbb
in
mov
(bad)
fwait
jne
out
push
pop
scas
mov
jl
cmp
mov
mov
sbb
cmp
add
repz
xchg
icebp
push
mov
aad
inc
inc
and
(bad)
cmp
rol
cwde
cdq
arpl
int
fistp
xchg
xchg
sbb
mov
frstor
mov
cmp
and
hlt
das
cdq
fistp
leave
std
lds
cmc
jge
lock
pop
jb
xchg
xor
mov
in
cli
(bad)
sbb
inc
jbe
pop
loope
shr
aas
repnz
pusha
je
push
push
pop
int3
sub
mul
add
shufps
inc
daa
mov
dec
ja
xchg
inc
in
repnz
xchg
mov
xchg
jne
sub
push
and
jecxz
dec
adc
xchg
sub
sub
push
shl
mov
(bad)
mov
cmp
inc
mov
nop
fwait
rol
mov
add
shl
mov
push
sub
retf
push
int3
test
add
mov
mov
adc
ror
xor
mov
fwait
mov
xor
xchg
rcl
pop
jp
jno
in
inc
test
lods
dec
rcr
js
nop
jg
clc
xchg
xor
out
(bad)
ss
retf
inc
and
xchg
adc
rol
call
aam
mov
jmp
js
jne
jge
shl
or
add
retf
mov
sbb
mov
push
stos
fst
mov
mov
push
into
cld
cmc
xchg
or
movs
stc
pop
popa
or
sub
scas
cmp
mov
pop
or
mov
inc
lahf
jns
or
pop
push
cmp
clc
jmp
and
cmp
add
fbstp
lods
xor
mov
and
jg
icebp
cmp
cmp
(bad)
inc
sbb
call
sbb
add
or
xlat
mov
pop
jg
scas
push
and
call
fcmovbe
out
cmp
or
sub
movs
mov
pop
add
loop
and
loopne
push
sub
sub
mov
xor
jno
push
or
push
ja
leave
mov
jb
jle
jecxz
jo
xlat
stos
inc
sub
mov
xchg
add
mov
imul
lock
out
fwait
aam
and
mov
scas
xchg
mov
inc
sahf
(bad)
fnstcw
gs
push
push
movs
out
cmps
sbb
sub
and
mov
push
adc
push
dec
adc
fimul
bound
ins
fidivr
xchg
push
dec
adc
pop
pop
es
sub
adc
test
adc
lock
stos
push
ret
in
dec
scas
dec
add
dec
cmps
fcmovbe
mov
xchg
es
aas
cmc
les
das
dec
popf
cmp
jg
and
imul
push
pop
repz
mov
inc
sbb
pop
into
outs
cmps
mov
jae
rol
int
sub
add
hlt
push
or
jne
lods
sub
icebp
or
dec
cmps
movs
mov
mov
loopne
(bad)
neg
fld
mov
pop
in
ss
ja
sbb
mov
cmp
adc
adc
test
data16
(bad)
mov
dec
aad
inc
pop
ret
mul
xchg
add
out
xchg
pop
dec
jns
dec
mov
xor
xlat
(bad)
and
out
push
gs
(bad)
jo
sub
jge
and
lea
(bad)
xadd
jb
pusha
in
sbb
mov
test
push
adc
push
popf
mov
sbb
add
hlt
mov
xor
lea
push
in
call
mov
adc
xor
mov
cdq
comiss
fmul
xor
jne
dec
rol
mov
cmp
in
retf
xlat
and
mov
cmc
lahf
call
int3
mov
mov
je
ins
(bad)
stc
das
mov
ret
jo
jne
sub
xchg
sbb
fbstp
call
outs
adc
pop
dec
push
mov
sub
(bad)
and
adc
mov
push
test
push
retf
sub
dec
aad
cmp
adc
jb
hlt
xchg
cmp
cmp
xchg
pushf
sbb
imul
mov
push
cwde
and
aaa
push
and
pop
or
test
add
enter
fsubp
xchg
mov
xchg
push
lock
pop
jmp
dec
icebp
or
jle
je
repz
inc
xchg
dec
enter
sbb
mov
jne
xor
outs
imul
(bad)
dec
cmps
mov
sti
add
xor
xchg
add
and
push
sub
mov
xchg
popa
stos
pushf
iret
retf
clc
in
cwde
fldenv
push
jno
cli
inc
mov
jle
mov
or
mov
js
call
scas
arpl
nop
and
lahf
jp
jbe
sub
pop
adc
jge
inc
xchg
pop
mov
shr
mov
or
push
or
xchg
adc
xchg
add
(bad)
cmc
and
push
out
mov
outs
xlat
mov
pop
cmp
xor
push
mov
pop
mov
add
into
test
iret
xlat
lods
jne
inc
(bad)
repnz
cmp
pushf
jle
xor
and
jge
loop
shl
in
cmp
retf
fs
xchg
aam
scas
fsub
jg
test
fdivr
inc
lahf
jecxz
inc
(bad)
mov
jnp
rol
(bad)
sbb
(bad)
mov
inc
(bad)
cmps
clc
fsubr
pushf
push
and
addr16
sbb
int
movs
mov
int
aas
pop
push
xchg
(bad)
pop
sbb
pusha
adc
jge
int
push
push
mov
js
out
sbb
jnp
mov
mov
not
xor
xor
shl
add
or
ins
push
mov
scas
sbb
je
jmp
(bad)
cs
int3
sbb
cmp
sbb
adc
or
jnp
repnz
sahf
nop
loop
jl
sbb
push
in
lock
mov
mov
jmp
fisubr
or
call
mov
outs
cmc
(bad)
out
mov
repz
in
pop
call
adc
dec
lds
mov
mov
sub
xlat
scas
clc
pop
pop
pop
add
pop
pusha
cmp
inc
pop
fs
pop
sar
(bad)
add
and
add
loope
mov
push
sbb
(bad)
adc
ror
mov
lahf
push
sbb
fisttp
adc
icebp
test
ret
add
jp
ja
adc
mov
stc
and
fsub
sbb
(bad)
xchg
pop
leave
test
jmp
rol
dec
out
gs
add
xor
mov
mov
push
mov
mov
sub
jo
(bad)
cmp
dec
sar
push
pop
mov
xor
jmp
(bad)
or
ret
in
mov
out
cmp
jle
cmp
push
mov
nop
stos
cld
xor
cmp
in
sbb
dec
lods
inc
cmp
lods
cdq
pushf
xchg
pushf
pushf
sahf
lock
lods
mov
mov
or
xchg
jnp
aas
out
retf
popf
mov
rol
or
jnp
rol
mov
jne
mov
into
outs
sub
aas
(bad)
xor
fistp
dec
cmps
fisub
test
arpl
je
or
out
adc
sti
outs
jbe
ds
inc
xchg
mov
mov
ins
inc
out
out
(bad)
jmp
mov
sbb
sbb
xchg
add
jmp
inc
stos
inc
push
jle
cdq
cmp
push
sub
cld
call
mov
xchg
aaa
pushf
add
sbb
jae
mov
jbe
nop
addr16
cmc
sbb
movs
pop
or
imul
lahf
sti
stos
dec
cdq
pop
(bad)
dec
jge
jmp
adc
cdq
popf
mov
mov
push
rcr
shl
movs
cmps
shl
out
stc
lea
adc
or
jb
stos
(bad)
mov
dec
jl
add
or
shr
into
nop
xor
mov
mov
clc
or
rol
mov
leave
enter
jmp
(bad)
imul
push
sbb
jne
aas
loopne
js
fld
xor
mov
sbb
dec
(bad)
mov
dec
popa
icebp
jp
in
mov
add
pusha
xor
push
adc
out
rcr
pop
outs
adc
mov
lods
test
sbb
inc
loopne
xchg
call
inc
push
inc
shr
ret
cld
test
cmp
dec
pop
arpl
and
dec
in
iret
jecxz
test
mov
mov
inc
ins
and
jl
cmp
aaa
stos
push
sbb
sub
mov
pusha
ins
xchg
ins
xchg
jno
or
adc
sub
xor
rcl
sub
(bad)
dec
mov
lds
or
(bad)
push
pop
out
sub
fdiv
mov
xlat
or
mov
xor
inc
cmp
sahf
movs
inc
adc
in
jmp
or
pop
jns
adc
int
retf
xchg
ja
aas
pop
mov
popf
loopne
mov
xchg
popa
inc
(bad)
fisttp
and
sbb
into
push
sub
ins
sbb
lds
imul
cmps
std
sbb
push
cmp
loopne
repnz
mov
movs
cld
out
mov
and
add
pop
xchg
in
mov
not
repz
jbe
and
sub
bound
shl
xor
int
int
dec
adc
dec
xchg
xchg
pop
fdivr
xor
dec
test
dec
call
ds
(bad)
test
in
jns
test
xchg
or
cld
jb
inc
test
and
popf
iret
arpl
cwde
fmul
sbb
shl
loope
addr16
push
leave
mov
scas
adc
fnstsw
jns
jbe
pop
cmp
and
jbe
fwait
movs
mov
fdiv
jle
cmp
mov
rcr
fistp
lock
ja
mov
jmp
jle
ror
jo
jmp
daa
pop
cmp
out
sbb
outs
mov
pop
es
lods
add
call
and
and
and
jne
mov
dec
bound
pop
in
fadd
sbb
pop
adc
or
push
mov
xchg
stc
jecxz
hlt
or
push
mov
push
lock
and
dec
in
fwait
mov
mov
into
dec
sub
repz
sbb
popf
pop
(bad)
and
push
mov
sahf
cld
outs
inc
shl
pop
and
xchg
data16
push
adc
adc
inc
and
mov
shr
popf
rcl
ficom
test
mov
jl
cmp
pop
rol
pop
dec
fadd
nop
and
loop
fdiv
xor
aaa
hlt
pushf
jle
out
repz
scas
mov
cmp
mov
sub
cmps
(bad)
ret
dec
out
std
xlat
les
cdq
add
or
sub
push
and
mov
ds
mov
test
pop
out
jmp
jb
mov
scas
inc
xchg
cmp
mov
xor
fisttp
push
and
adc
retf
pop
lock
xor
jmp
and
test
or
mov
cmp
mov
pop
adc
jg
xor
xchg
iret
or
repz
ins
dec
(bad)
popa
push
adc
jmp
enter
popa
into
daa
add
(bad)
out
sub
push
push
retf
mov
push
dec
leave
addr16
mov
sbb
cmp
scas
int3
xor
add
jmp
mov
inc
or
ret
adc
test
pop
sub
adc
inc
push
loopne
scas
push
adc
arpl
daa
mov
xchg
rol
xor
fimul
add
shl
add
mov
add
xchg
xor
into
adc
dec
sbb
movs
xchg
xchg
out
movs
push
jns
pmuludq
stc
sbb
popf
jmp
inc
es
jbe
jecxz
ja
jmp
push
dec
mov
mov
in
lods
imul
in
or
add
add
pop
and
xchg
mov
out
sub
outs
jmp
(bad)
test
mov
xchg
iret
jmp
sbb
adc
shl
push
cwde
xchg
mov
and
and
(bad)
aam
imul
rcl
jbe
and
ins
mov
or
pop
mov
jae
mov
gs
jo
inc
dec
adc
mov
and
xor
dec
sbb
enter
jnp
jo
jp
cmp
fwait
dec
mov
dec
lahf
push
mov
dec
mov
sar
stc
scas
sbb
aaa
in
stc
adc
fwait
sbb
adc
inc
adc
lahf
sub
fadd
mov
dec
dec
leave
inc
mov
ret
fsub
jmp
fs
xchg
inc
jnp
xchg
fcomp
adc
add
mov
shl
sbb
cmp
inc
fucomp
push
push
mov
(bad)
mov
mov
or
aam
or
cld
jmp
mov
jae
test
pop
fs
jnp
rcr
mov
xlat
(bad)
jo
fcom
lock
jns
inc
mov
rcr
hlt
jge
sbb
pop
outs
(bad)
shl
jmp
ficomp
push
jecxz
xor
push
fs
jp
cmps
push
xor
lea
pop
pop
mov
add
jg
rcl
jle
shl
xor
push
mov
add
mov
jnp
cmp
clc
sbb
inc
(bad)
retf
xchg
lds
and
gs
push
out
push
fldenv
sar
dec
ins
sti
jno
in
aaa
dec
and
std
mov
jle
call
sar
int3
or
movs
xchg
mov
int3
mov
in
sub
addr16
jge
unpcklps
scas
push
(bad)
bound
xchg
mov
fwait
and
loope
mov
loope
xor
jg
xor
push
push
stos
xchg
cmp
jbe
inc
xor
call
xchg
test
test
cmps
icebp
mov
jmp
test
ins
lahf
arpl
mov
add
cs
mul
inc
not
mov
push
out
push
(bad)
or
push
cmp
lar
fs
add
xchg
pushf
aad
jne
push
xor
aam
in
shl
test
shl
sbb
mov
test
and
lea
cmp
outs
mov
int
movs
mov
daa
(bad)
and
xor
xor
adc
jle
inc
mul
lods
mov
xor
movs
and
dec
jo
push
cmp
jecxz
fcom
arpl
adc
add
mov
xchg
push
sub
(bad)
fidiv
lahf
push
fs
add
fcomip
mov
push
out
sahf
inc
popf
xchg
sub
movs
jo
adc
dec
jmp
pop
jns
and
pop
xchg
jb
clc
dec
adc
adc
inc
std
imul
push
jne
push
movd
loope
hlt
cmp
mov
cmp
fsubp
das
ss
add
addr16
aad
push
push
xor
int
xor
push
and
jnp
loope
movs
les
jl
ja
or
gs
stos
mov
popa
sub
adc
and
sub
popf
sbb
sub
xlat
push
mov
pusha
jmp
popf
push
ss
and
pop
std
xchg
xor
imul
mov
aas
or
neg
(bad)
sti
or
cmp
xchg
pop
(bad)
(bad)
fadd
adc
sbb
out
sbb
inc
rol
bound
retf
les
mov
xchg
mov
pop
in
add
cmp
push
mov
pop
rol
and
fwait
or
shl
mov
xor
retf
or
inc
dec
mov
push
outs
add
push
mov
or
or
cdq
mov
rol
xor
xchg
or
adc
fwait
mov
std
mov
and
cwde
out
mov
mov
mov
outs
out
mov
fild
out
xlat
aaa
popa
sbb
sbb
and
dec
adc
mov
call
das
je
ins
popf
xchg
xchg
push
ja
jge
in
push
ror
sub
sub
mov
(bad)
xchg
shr
(bad)
jb
clc
inc
ins
jae
sbb
in
cmp
imul
imul
sub
mov
cld
dec
retf
xchg
fwait
or
jbe
mov
cwde
sar
lock
xlat
hlt
jne
out
pop
pop
in
bound
clc
jmp
scas
xor
cwde
inc
shl
and
or
ret
in
mov
enter
std
test
xchg
mov
clc
jmp
jb
lds
iret
add
imul
nop
push
sub
stc
outs
mov
fwait
scas
xchg
mov
mov
or
aad
adc
or
iret
scas
imul
js
jo
and
retf
sub
in
push
imul
lods
xor
shl
jg
les
push
cdq
sti
push
cli
adc
dec
leave
push
mov
mov
ja
in
mov
push
ret
fs
dec
cmp
neg
add
mov
and
cmp
pop
idiv
fbld
dec
fidivr
std
test
xchg
(bad)
in
sbb
pop
add
jp
stc
jl
pop
dec
popf
inc
mov
cmps
fmulp
(bad)
fiadd
pop
(bad)
dec
jmp
mov
push
inc
retf
lds
nop
dec
xor
fxch
in
mov
clc
add
or
jge
popf
fsubrp
test
loop
push
pop
sbb
mov
mov
or
mov
and
clc
lea
call
lahf
(bad)
test
lock
and
add
test
cmps
sub
push
pop
ret
(bad)
xchg
inc
stc
ds
cdq
and
call
jecxz
aam
mov
lods
mov
icebp
inc
or
sbb
stos
xacquire
retf
or
das
mov
inc
ret
jmp
cmp
jno
retf
mov
(bad)
inc
stc
add
(bad)
and
sbb
inc
je
(bad)
ss
or
xchg
mov
mov
sbb
inc
in
clc
add
cmp
call
stos
and
(bad)
jo
push
mov
(bad)
clc
sbb
mov
sti
fsub
scas
jge
inc
sti
sahf
xor
imul
(bad)
retf
retf
cs
sub
push
cs
pop
dec
daa
popf
push
sub
xor
inc
jmp
jae
fcom
push
jae
pop
mov
sub
sbb
push
jno
and
outs
cli
adc
mov
and
sbb
cmp
jae
adc
test
or
stc
jge
and
jbe
stos
sub
movs
dec
not
jb
cmp
mov
inc
mov
daa
(bad)
in
in
push
fbld
addr16
sar
jbe
push
js
pop
sbb
cwde
test
(bad)
lods
jmp
addr16
mov
fwait
lock
mov
out
repnz
sub
loopne
mov
lods
pop
fsubr
mov
sub
pop
test
and
pop
sbb
xchg
cmps
jne
push
cwde
fwait
xor
xlat
outs
xlat
outs
es
xor
push
mov
fidiv
sub
retf
retf
cmp
loope
mov
ret
(bad)
imul
jbe
leave
pushf
jmp
jmp
xor
call
push
xchg
pop
sub
adc
pop
add
xchg
in
sbb
ret
xor
mov
ret
scas
xchg
jnp
lea
int
fld
mov
cmp
jmp
pop
fisttp
scas
out
jns
mov
pushf
add
aam
sti
fucom
xor
outs
mov
mov
imul
scas
or
dec
clc
popa
rcr
in
outs
stc
test
pop
add
mov
and
mov
cmps
sbb
and
add
scas
jle
jle
stos
add
retf
adc
call
out
sar
or
and
aad
xchg
xchg
call
push
add
inc
ret
push
push
jae
jle
sub
pop
pop
xor
test
add
inc
push
leave
and
adc
arpl
fcomip
inc
add
cdq
add
shr
in
cdq
cld
mov
inc
mov
ja
aas
inc
dec
xchg
mov
inc
jae
fs
jnp
inc
nop
jno
sub
pop
enter
sub
ins
pop
(bad)
out
ror
cld
imul
mov
repz
cmps
int3
mov
mov
mov
ins
mov
xchg
dec
adc
or
mov
pop
popf
ja
cld
cmp
mov
(bad)
mov
xor
sbb
sar
mov
jb
cmp
inc
outs
jecxz
cs
cmps
dec
cmp
mov
imul
test
mov
push
mov
xchg
or
adc
jg
adc
data16
fsubr
xchg
mov
or
mov
xchg
xchg
mov
xor
push
cmps
mov
stc
or
or
les
bound
dec
mov
xor
clc
fild
test
hlt
rol
or
gs
pop
sub
aad
jecxz
and
pop
inc
add
fwait
xor
mov
ret
packuswb
(bad)
movs
fidiv
inc
into
push
movs
pop
or
sub
jmp
cmp
jbe
mov
repz
cmc
sti
jl
dec
xchg
mov
xor
push
jb
mov
xchg
sbb
xchg
pusha
ja
cli
sti
push
div
adc
mov
adc
lods
push
push
or
scas
int3
mov
pop
aas
pop
sub
sub
adc
cmp
mov
shr
sbb
leave
inc
or
adc
pop
loopne
jbe
int
jmp
xchg
ss
and
sbb
sub
out
js
in
pop
push
out
push
popa
hlt
mov
out
int3
adc
mov
xor
das
adc
jns
pop
or
mov
add
loop
fsub
jo
(bad)
jbe
mov
mov
push
cdq
fsubr
outs
push
push
loope
stos
inc
jp
imul
aam
(bad)
push
ja
loopne
dec
sub
repnz
loop
out
mov
sub
push
jno
in
add
cmp
push
jmp
jb
pop
cmp
add
xchg
add
jno
xlat
xor
fcmovbe
and
in
or
push
dec
inc
repz
(bad)
jmp
jl
inc
jb
mov
out
jecxz
cs
mov
mov
sub
mov
stos
xchg
mov
aas
cdq
cwde
or
xor
ret
enter
pop
mov
aam
in
and
outs
pop
or
jl
ins
pop
lods
mov
mov
retf
and
out
inc
cld
xchg
pushf
movs
test
aad
lahf
pop
ror
dec
sub
(bad)
ins
or
fld
pop
add
pop
dec
(bad)
jb
dec
adc
std
xor
in
jmp
lahf
mov
mov
pop
repnz
movs
clc
out
mov
dec
pop
xchg
pushf
scas
nop
retf
fcom
mov
pop
xor
and
add
xor
xchg
call
outs
imul
fs
nop
sahf
or
dec
or
and
out
std
dec
push
scas
xchg
test
fucom
xchg
out
ja
cmp
call
xor
push
imul
in
cmps
lods
ins
cmc
dec
xchg
pop
mov
stos
fwait
ins
in
cmp
pop
jl
int3
push
xchg
push
ins
and
in
test
sbb
lods
add
push
push
adc
xor
fbld
push
test
cwde
mov
or
icebp
sti
ret
push
aas
cmp
(bad)
pop
lods
out
outs
div
ret
sbb
scas
mov
clc
addr16
(bad)
(bad)
and
sbb
xor
push
sbb
mov
fld
and
inc
add
or
in
fidivr
or
jle
stc
xor
call
dec
fmul
pusha
scas
mov
jo
ins
pop
ret
xchg
sar
sbb
rcr
and
cmps
aam
adc
xchg
call
mov
push
ret
mov
aad
stc
test
js
dec
inc
retf
(bad)
lds
cmp
test
into
sbb
pop
js
pop
mov
movs
dec
loope
mov
or
and
mov
sbb
ret
mov
push
call
jmp
ret
int3
pushf
nop
push
cs
in
fwait
sub
push
mov
stos
and
xchg
push
shl
lahf
mov
mov
xchg
test
sbb
ror
push
shr
inc
stos
push
paddsw
(bad)
add
jmp
or
xor
stos
jns
dec
jle
jecxz
lea
xor
aad
sub
mov
lods
imul
les
leave
data16
push
scas
xchg
pop
lods
cmps
test
xor
nop
jne
iret
js
inc
mov
fisub
push
int3
push
or
push
jnp
pop
lock
mov
mov
or
xchg
ror
xlat
pushf
push
push
or
stos
js
(bad)
ins
xchg
jg
lods
add
lods
xor
adc
pop
in
xchg
outs
ds
mov
cli
jns
mov
jge
loop
into
push
repnz
shl
cli
in
clc
push
cmp
in
popa
cdq
dec
sbb
adc
dec
mov
dec
les
sbb
and
xor
mov
or
inc
imul
push
xchg
jge
xchg
push
mov
das
cmp
inc
out
sbb
sbb
xor
inc
dec
mov
push
or
dec
sub
push
into
mov
pop
shl
jns
bound
sub
pushf
pop
mov
mov
pusha
out
int3
adc
lock
jb
dec
jg
pushf
cdq
mov
dec
lods
push
cmc
jne
mov
test
fstp
xchg
sbb
sbb
enter
nop
(bad)
fimul
push
mov
jg
lock
mov
sub
xchg
sbb
adc
mov
mov
jp
daa
sub
loope
adc
sbb
jmp
stc
clc
imul
pushf
sar
add
cmps
inc
leave
aam
mov
pop
cs
hlt
outs
test
sub
add
je
adc
xor
inc
nop
hlt
sub
addr16
jmp
imul
mov
inc
nop
add
dec
(bad)
call
mov
mov
nop
(bad)
or
js
lea
jae
je
cmps
inc
cdq
fwait
xchg
and
sub
dec
mov
in
mov
mov
sub
push
stos
in
pop
cmp
jns
ficom
push
adc
mov
pop
int3
push
fisttp
(bad)
jl
sub
or
inc
call
pusha
shl
xchg
push
push
fmul
xor
add
xor
popa
outs
(bad)
jmp
push
cmps
cmp
pop
mov
jp
jnp
gs
cmps
hlt
inc
xchg
or
pop
xor
push
or
mov
jbe
daa
or
stos
inc
mov
xchg
cmps
add
xchg
pop
push
xor
push
pop
popa
ficom
loope
stc
scas
jbe
ret
adc
stos
add
out
sahf
xchg
inc
mov
popa
iret
jo
jo
icebp
inc
fdivr
sub
hlt
mov
pop
sbb
test
ret
movs
ror
inc
add
imul
sahf
pop
call
pop
add
sbb
xor
rol
(bad)
not
(bad)
sub
clc
push
and
xchg
repnz
cmp
sub
(bad)
inc
retf
xor
jge
hlt
adc
ret
lods
imul
cmp
out
imul
adc
pop
cmp
nop
cli
(bad)
jl
mul
in
mov
jg
and
pop
and
or
add
xor
xlat
inc
jns
xchg
int
addr16
mov
scas
aaa
mov
sbb
fild
xchg
jl
push
sbb
sbb
cmps
sub
push
or
inc
enter
das
sbb
fistp
lock
lea
retf
call
jg
(bad)
sahf
xor
fwait
nop
dec
jae
retf
pop
lock
inc
dec
fnstenv
scas
nop
xchg
cmp
jnp
push
jnp
cwde
fdivp
shr
outs
cmp
jb
aad
movs
data16
and
scas
popa
mov
cs
shr
(bad)
or
inc
push
sub
lock
and
lds
retf
sub
ins
jae
and
push
mov
pop
cmps
inc
xor
sbb
dec
sbb
xchg
test
xor
cs
mov
(bad)
out
jnp
jmp
inc
ficom
mov
xchg
adc
add
fisub
(bad)
push
adc
cli
addr16
loop
rcr
jg
stc
test
or
shl
xor
call
dec
pop
lock
ja
mov
not
lahf
mov
cmp
pop
sti
pop
std
sub
loope
xchg
loopne
mov
and
push
fldz
aaa
jp
sbb
pop
cmovnp
gs
pop
xchg
(bad)
je
adc
add
xor
or
enter
xchg
push
(bad)
fadd
cmp
cmps
loopne
popf
push
ja
push
dec
popf
sbb
stc
addr16
mov
cmp
push
nop
cli
ss
jae
mov
inc
pushf
and
mov
inc
lahf
mov
outs
add
stc
add
out
cmp
or
iret
mov
ret
adc
das
mov
shr
dec
jge
sbb
call
push
or
test
fxch
cmp
mov
sbb
js
inc
or
and
dec
mov
test
ror
movs
add
sar
mov
idiv
fistp
arpl
aad
pop
or
jmp
dec
cld
call
mov
sbb
pushf
leave
dec
mov
xor
mov
add
xchg
sub
sar
cmp
jbe
or
or
lahf
outs
jmp
rcr
mov
jp
jae
dec
shl
push
mov
inc
push
(bad)
xchg
ror
aas
es
in
pop
xor
fstp
dec
test
(bad)
(bad)
in
push
cmp
mov
retf
imul
sub
mov
cmp
std
sbb
dec
cld
ja
fstp
ins
pop
icebp
je
(bad)
mov
pop
sub
gs
pop
retf
rol
cdq
xor
and
dec
push
pop
das
test
fs
les
xchg
pusha
sti
test
dec
cli
lds
jp
test
xchg
ins
lods
out
fcom
aam
add
pop
sub
in
shl
jmp
fidivr
and
psraw
imul
mov
cli
pop
or
cmp
cmc
fsub
inc
retf
(bad)
jns
sub
mov
pop
jge
shl
xchg
ret
xchg
and
loope
dec
outs
data16
mov
dec
jle
cmp
fwait
cmp
rcl
mov
sbb
xchg
xchg
adc
bnd
jnp
(bad)
pop
mov
jo
iret
push
mov
xchg
sahf
in
icebp
dec
sbb
and
push
or
fidiv
into
or
fbld
aam
inc
fsubr
ins
repz
pop
mov
inc
pop
sahf
(bad)
leave
cmp
mov
push
dec
dec
inc
arpl
mov
dec
out
jnp
ja
(bad)
mov
icebp
cmp
adc
popf
pop
int3
mov
push
loopne
mov
jmp
ds
and
adc
push
inc
mov
pop
out
stos
push
and
sub
sub
cmp
les
dec
mov
jo
stos
fldenv
out
jecxz
and
pop
mov
or
lds
das
pop
rcr
mov
or
out
int3
mov
lods
cmp
outs
cld
dec
cmp
dec
mov
jmp
pop
imul
fild
xchg
push
aas
mov
clc
dec
mov
jb
add
or
data16
xor
cmp
sbb
mov
div
lahf
pop
jmp
(bad)
aaa
out
sbb
mov
aaa
dec
lahf
ins
mov
push
ja
add
or
jge
lds
xor
ja
mov
outs
cmp
mov
(bad)
mov
sti
or
fdiv
mov
pop
jmp
out
es
inc
out
jecxz
fidivr
push
imul
daa
and
xchg
cli
xchg
adc
(bad)
je
ret
dec
cli
inc
pop
pop
dec
jne
iret
add
daa
xchg
jg
popf
push
mov
in
mov
add
xchg
cli
jmp
push
push
je
cmc
ds
inc
cmps
inc
push
and
loope
jle
pop
lods
push
cli
ja
sub
cmc
dec
mul
pop
mov
inc
imul
cmp
ror
cld
xchg
pop
shl
nop
into
xchg
(bad)
sub
dec
sbb
fbld
pop
or
mov
mov
jmp
js
or
scas
adc
mov
and
mov
pusha
fdiv
xchg
dec
xor
rol
leave
mov
sbb
movs
sub
into
jns
and
or
xchg
mov
fisub
xchg
ins
je
adc
fsub
xor
sub
push
arpl
bound
add
pop
xchg
popf
push
cmp
sub
scas
and
sbb
fst
cmp
in
inc
jne
aas
rcl
jl
xchg
xchg
movs
sti
xchg
cmps
mov
push
add
push
mov
cmp
cmc
xchg
outs
xchg
dec
inc
dec
xchg
or
ins
and
add
inc
jg
sub
pop
out
arpl
scas
dec
inc
jg
push
mov
shl
outs
push
fst
(bad)
mov
or
xlat
jp
inc
push
(bad)
into
push
xor
jle
sbb
hlt
mov
sbb
inc
mov
adc
and
jg
jne
fnstsw
and
jg
cli
out
xor
pop
int3
icebp
mov
daa
arpl
out
out
sbb
jne
movs
cmps
pop
cmc
adc
ficom
pop
lahf
dec
push
or
mov
xchg
call
(bad)
jp
and
rcr
sub
gs
aas
pop
mov
sbb
ds
inc
push
in
retf
retf
test
and
fild
in
add
push
imul
mov
adc
out
dec
leave
lahf
mov
mov
adc
mov
stc
adc
and
retf
sti
add
pusha
or
shr
jmp
cld
bound
jecxz
sub
mov
push
pop
in
xor
sbb
jno
xchg
ins
hlt
cwde
ret
xchg
sub
push
xchg
fsub
ins
movs
popf
in
xor
ins
push
and
test
and
xor
or
dec
sub
cmps
pop
pop
jg
xor
pushf
call
push
dec
push
pop
inc
pop
push
in
mov
rcr
stos
dec
pop
dec
jmp
adc
cmp
sub
rcl
(bad)
pop
jmp
ds
cmps
inc
in
xchg
mov
out
call
aaa
inc
call
stos
add
(bad)
sar
mov
pop
dec
ins
inc
mov
call
push
mov
