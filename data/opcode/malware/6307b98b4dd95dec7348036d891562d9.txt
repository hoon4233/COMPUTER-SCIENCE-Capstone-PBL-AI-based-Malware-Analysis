push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
add
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
cmp
je
mov
add
mov
jmp
mov
add
pop
ret
data16
push
mov
sub
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
movzx
cmp
jl
movzx
cmp
jg
movzx
add
sub
mov
mov
mov
jmp
mov
add
mov
jmp
mov
add
pop
ret
nop
push
mov
sub
mov
mov
lea
mov
mov
mov
call
sub
mov
mov
cmp
jle
mov
add
mov
mov
mov
mov
movsx
imul
mov
shr
add
add
mov
mov
add
mov
jmp
mov
add
add
pop
ret
data16
push
mov
sub
mov
mov
mov
cmp
je
lea
mov
mov
mov
mov
call
add
mov
mov
mov
mov
add
pop
ret
nop
push
mov
call
pop
ret
nop
push
mov
push
call
mov
mov
mov
add
pop
ret
nop
push
mov
push
mov
mov
mov
movzx
add
pop
ret
data16
push
mov
push
mov
mov
mov
mov
add
pop
ret
data16
push
mov
push
sub
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
call
add
add
mov
mov
cmp
je
lea
mov
call
lea
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
call
lea
mov
mov
shl
mov
mov
mov
mov
call
mov
cmp
jne
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
add
pop
pop
ret
nop
push
mov
sub
mov
lea
mov
mov
call
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
pop
ret
nop
push
mov
sub
mov
lea
mov
mov
mov
call
shl
mov
cmp
je
cmp
je
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
pop
ret
data16
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
add
add
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
cmp
jae
mov
mov
mov
add
mov
mov
mov
mov
mov
call
cmp
jne
mov
movzx
mov
jmp
mov
add
mov
mov
add
mov
jmp
cmp
jne
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
add
pop
ret
data16
push
mov
sub
mov
mov
mov
mov
mov
mov
call
add
pop
ret
nop
push
mov
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
call
sub
mov
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
call
sub
mov
lea
mov
call
mov
call
lea
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
jae
mov
mov
movsx
mov
mov
mov
xor
div
movsx
mov
sub
mov
mov
mov
mov
add
mov
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
call
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
call
sub
cmp
je
mov
jmp
lea
mov
call
lea
mov
mov
call
cmp
je
xor
mov
mov
call
mov
mov
mov
mov
add
pop
pop
pop
ret
nop
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
add
pop
ret
data16
push
mov
sub
mov
mov
mov
cmp
jne
mov
mov
call
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
cmp
je
jmp
add
pop
ret
data16
push
mov
sub
mov
lea
mov
mov
call
mov
mov
add
mov
mov
cmp
mov
jle
mov
jmp
mov
cmp
je
mov
jmp
lea
mov
call
mov
mov
mov
mov
add
pop
ret
data16
push
mov
sub
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
div
imul
mov
sub
mov
jmp
mov
mov
add
pop
ret
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
call
sub
lea
mov
mov
call
mov
mov
call
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
cmp
jae
lea
imul
mov
add
movzx
mov
imul
add
mov
mov
mov
mov
cmp
jae
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
call
mov
add
movzx
mov
sub
mov
mov
mov
mov
mov
add
mov
jmp
mov
add
mov
mov
add
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
call
cmp
jne
xor
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
pop
pop
pop
ret
nop
push
mov
sub
mov
mov
mov
mov
mov
movzx
cmp
je
jmp
mov
mov
add
mov
mov
mov
mov
mov
add
pop
ret
xchg
push
mov
push
push
sub
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
movzx
sub
mov
movzx
add
mov
mov
mov
movzx
sub
mov
movzx
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
call
sub
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
call
sub
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
movzx
add
mov
mov
mov
mov
add
pop
pop
pop
ret
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
xor
add
mov
mov
add
mov
movzx
add
mov
mov
mov
mov
movzx
cmp
jge
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
call
mov
mov
add
mov
mov
add
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
add
pop
pop
ret
data16
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
add
mov
mov
cmp
seta
and
movzx
cmp
setg
and
movzx
and
cmp
je
mov
mov
mov
mov
add
mov
mov
mov
sub
shr
mov
mov
mov
add
mov
cmp
je
mov
movzx
shr
mov
mov
movzx
and
mov
mov
sub
mov
jne
jmp
mov
add
add
mov
mov
mov
add
mov
jmp
jmp
jmp
mov
add
mov
jmp
mov
mov
mov
sub
mov
mov
mov
add
mov
jmp
mov
movzx
and
add
pop
ret
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
add
add
add
mov
cmp
jne
mov
jmp
mov
cmp
jbe
mov
mov
add
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
call
sub
mov
cmp
jne
jmp
mov
cmp
je
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
cmp
je
mov
mov
mov
and
cmp
je
mov
mov
mov
and
mov
mov
mov
mov
call
sub
mov
jmp
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
jmp
mov
add
mov
mov
add
mov
jmp
lea
mov
call
cmp
jne
call
mov
cmp
jne
jmp
jmp
mov
add
mov
jmp
lea
mov
call
cmp
jne
call
mov
jmp
lea
mov
call
cmp
jne
call
mov
mov
mov
mov
add
pop
pop
ret
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
cmp
jae
xor
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
cmp
mov
cmovne
cmp
setne
and
mov
mov
and
cmp
mov
cmovne
cmp
setne
and
mov
mov
and
cmp
cmovne
cmp
setne
and
mov
mov
test
je
mov
test
je
mov
test
je
test
jne
test
jne
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
call
sub
mov
mov
add
mov
mov
add
mov
jmp
mov
mov
sub
mov
mov
mov
lea
mov
mov
mov
mov
call
sub
mov
mov
mov
add
mov
mov
mov
mov
mov
call
mov
add
pop
pop
pop
pop
ret
nop
push
mov
sub
mov
mov
mov
mov
add
mov
add
pop
ret
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
lea
mov
lea
mov
call
sub
lea
mov
mov
call
mov
mov
lea
mov
mov
call
sub
mov
mov
sub
mov
sub
mov
add
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
movzx
cmp
jne
mov
mov
add
add
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
add
mov
jmp
lea
mov
call
add
pop
pop
pop
pop
ret
nop
push
mov
sub
mov
lea
mov
mov
mov
mov
call
add
mov
call
mov
add
pop
ret
data16
push
mov
sub
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
call
add
pop
ret
nop
push
mov
sub
mov
mov
mov
mov
call
sub
mov
mov
cmp
jge
mov
and
mov
sub
mov
mov
je
jmp
mov
sub
mov
jne
jmp
lea
lea
mov
mov
mov
mov
mov
call
mov
or
mov
mov
jmp
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
or
mov
jmp
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
add
mov
jmp
mov
mov
mov
call
sub
mov
cmp
jne
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
call
mov
mov
movzx
cmp
jge
movss
movss
movzx
cvtsi2ss
mulss
divss
movzx
movss
mov
add
mov
jmp
mov
add
pop
ret
nop
push
mov
call
pop
ret
nop
push
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
ret
data16
push
mov
mov
call
call
call
mov
call
mov
call
mov
call
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
call
call
mov
call
mov
call
call
mov
call
mov
call
mov
call
call
mov
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
pop
ret
aaa
lds
fistp
dec
mov
gs
pop
ins
imul
mov
inc
test
loope
fbstp
dec
in
push
mov
push
je
or
cs
inc
xchg
push
cmp
xchg
push
leave
xacquire
inc
push
fcom
ins
jg
or
jne
jmp
pushf
mov
dec
add
push
ja
jg
sbb
mov
mov
repnz
(bad)
sub
dec
lds
outs
mov
ret
xchg
dec
mov
shl
inc
and
adc
stc
stos
mov
cld
cmp
pop
sbb
jns
int3
push
xor
test
jg
imul
(bad)
cs
jno
adc
test
idiv
add
mov
fs
sahf
sub
add
jmp
inc
fdiv
repz
pop
in
push
push
(bad)
call
push
xlat
arpl
fld
jae
vmwrite
test
scas
movs
xor
test
movs
or
sub
inc
sub
dec
imul
or
mov
iret
out
xchg
into
sub
xchg
fbstp
xchg
adc
mov
xchg
mov
push
mov
pop
or
ret
push
call
cmp
dec
and
loopne
jns
into
inc
add
dec
add
add
jo
pop
sub
mov
aad
arpl
push
aad
cmp
leave
mov
xchg
push
inc
sub
lods
push
adc
jne
jnp
xchg
jmp
shr
jecxz
cld
cmps
inc
cmp
sub
dec
pop
js
ret
cdq
sbb
outs
mov
inc
xor
stc
push
repz
push
inc
enter
dec
xor
mov
ins
pop
or
pop
retf
cmps
push
sbb
cmc
lods
ja
sti
dec
add
lea
jne
dec
push
sbb
aad
(bad)
int
adc
xor
in
jmp
cs
xchg
mov
imul
add
lds
sub
sbb
cli
arpl
add
into
adc
dec
sbb
les
addr16
xchg
jmp
and
mov
loope
sbb
mov
fnsave
enter
mov
cmp
push
xor
jg
sbb
xchg
or
sub
inc
dec
push
push
xchg
popa
gs
sub
(bad)
aad
pushf
clc
ss
xlat
stos
jl
push
outs
test
mov
add
xchg
or
adc
mov
xchg
retf
cmp
in
mov
outs
push
dec
lods
add
mov
push
adc
loopne
call
dec
push
add
jecxz
hlt
popa
xchg
fucomp
js
lea
test
push
xchg
shl
mov
fcomi
mov
sbb
add
sbb
cmp
scas
(bad)
xchg
loopne
(bad)
dec
xchg
or
xchg
xchg
(bad)
addr16
out
sbb
lahf
test
xor
xor
add
cdq
jb
add
sbb
mov
fdiv
sub
add
fld
cmp
adc
mov
ins
test
jp
call
clc
repnz
pushf
mov
push
nop
dec
fwait
jp
cmps
mov
ins
lds
jb
test
out
jb
push
sub
bound
xchg
cmp
sub
sbb
sbb
ret
call
push
inc
arpl
mov
mov
push
sub
retf
les
imul
mov
pop
(bad)
xlat
shl
mov
pusha
sub
mov
add
call
add
add
mov
in
pop
and
pop
xchg
mov
mov
test
mov
jno
ret
push
xor
or
and
add
push
dec
lahf
lds
sti
cmovns
fwait
pop
mov
mov
add
arpl
sahf
mov
pop
faddp
iret
cmc
sbb
jno
sar
lahf
xor
ja
cdq
test
scas
jb
outs
loop
aad
sahf
mov
(bad)
jb
mov
add
add
add
mov
ret
xchg
xlat
sub
bound
push
xor
test
std
imul
(bad)
enter
call
pop
xchg
pop
adc
pop
cs
and
mov
rcr
sub
inc
sbb
pop
push
sbb
icebp
dec
fimul
push
or
push
shl
gs
lea
retf
ficom
cmp
or
sar
xchg
push
xchg
hlt
call
(bad)
jg
xor
stos
fs
pop
xlat
(bad)
pop
loop
cmp
cmp
cli
push
sahf
lock
sahf
sub
jp
lds
cmp
jl
js
adc
inc
pop
jbe
mov
add
add
add
dec
test
gs
push
or
scas
push
or
loop
rcl
mov
push
sub
lods
inc
jb
shl
mov
jbe
mov
push
mov
adc
fcomip
jge
adc
add
ja
mov
test
mul
jb
xor
cwde
(bad)
and
stos
xchg
test
mov
mov
fwait
mov
aas
clc
pusha
adc
int
aas
cdq
jecxz
stos
inc
pop
xchg
(bad)
out
stc
call
aaa
in
ja
ret
cmovge
push
and
leave
aaa
(bad)
jne
mov
scas
cmps
sub
fstp
test
push
jb
jp
jmp
add
test
cmp
lods
fnstsw
mov
lock
sub
jecxz
push
inc
mov
in
test
fist
scas
(bad)
fnstcw
add
sub
outs
adc
jge
sbb
xchg
inc
dec
adc
in
int3
push
xchg
xchg
cmp
rol
cld
data16
in
pop
push
dec
stos
(bad)
mov
mov
aas
xchg
daa
std
or
call
adc
xor
loope
cld
push
push
mov
adc
inc
mov
out
fimul
sub
fcomip
mov
add
add
pop
js
bound
fild
jmp
fld
jge
inc
rcr
cld
rol
in
pusha
fild
call
xchg
pop
in
dec
idiv
dec
dec
mov
xchg
push
test
imul
(bad)
jnp
sti
mov
ret
out
xor
cmp
xchg
cwde
and
popa
add
add
add
outs
mov
mov
sbb
dec
xchg
cmps
pop
scas
sbb
push
sub
cmp
jmp
in
call
dec
jl
ins
jmp
out
inc
jb
in
movs
sbb
xor
popa
sub
and
jns
out
sbb
or
jp
jbe
xchg
xchg
dec
loop
(bad)
les
cmp
sub
ins
mov
out
lahf
cmp
pop
inc
adc
adc
mov
loopne
fmul
test
rep
add
pop
push
stc
push
cld
stos
xlat
ins
(bad)
add
add
or
inc
or
das
ss
cwde
in
cwde
lea
jge
jno
mov
pop
inc
out
xchg
sub
enter
ja
add
push
shl
nop
outs
add
(bad)
push
(bad)
cwde
xor
jp
push
clc
loopne
cmp
in
sahf
push
cmps
out
jnp
out
movs
push
add
mov
test
mov
(bad)
or
fldenv
push
push
call
fsubr
cmp
cmp
cli
dec
loop
inc
lahf
scas
or
sbb
aaa
fs
jmp
mov
retf
popa
out
inc
xchg
ret
mov
xor
push
cwde
scas
sub
sar
bound
inc
pop
pop
mov
add
jmp
int3
leave
loope
xchg
and
adc
movs
ror
jmp
call
call
pop
ins
and
jb
xor
xchg
fstp
lods
adc
into
push
pop
test
jnp
xchg
test
jo
mov
dec
je
fs
dec
sub
stc
add
add
in
stc
pop
add
push
dec
call
mov
add
gs
in
sbb
pop
inc
push
push
(bad)
call
out
arpl
pushf
or
sub
in
test
dec
in
lock
bound
neg
scas
and
adc
popf
je
xchg
cmps
cs
outs
icebp
push
mov
and
or
enter
lods
sub
push
mov
dec
push
pop
sbb
inc
xor
sbb
int
out
sbb
nop
jo
in
xor
mov
call
adc
mov
(bad)
cdq
xchg
shl
sub
cli
cmps
push
ja
lock
fmul
cwde
inc
sbb
or
in
out
mov
gs
lods
or
aam
cmps
aam
jo
retf
push
sub
outs
pop
add
cmp
mov
je
jnp
lock
or
sar
sahf
in
jge
lods
or
(bad)
call
popa
ins
mov
xor
pop
xor
sbb
mov
pushf
adc
mov
add
mov
jo
lods
add
xor
ret
jl
mov
mov
outs
mov
mov
jp
retf
or
arpl
xor
pop
and
push
out
in
sahf
inc
dec
push
fst
inc
mov
sub
imul
arpl
loopne
cmp
add
add
(bad)
aaa
and
and
into
es
test
jns
cmp
bound
cmp
je
push
jge
lahf
jg
jg
repnz
gs
js
rol
adc
and
mov
push
shl
jmp
push
mov
pop
or
fstp
fwait
jmp
or
dec
push
stos
jle
lea
ret
jmp
je
stos
push
mov
fldenv
jo
repnz
add
sbb
enter
or
mov
push
fstp
mov
bound
int
scas
rcl
js
or
adc
push
mov
jne
mov
into
enter
movs
mov
jg
jns
shl
sbb
repz
xchg
fsubr
mov
sti
xchg
inc
ror
sbb
adc
sbb
cmp
outs
stos
mov
clc
inc
sub
pop
enter
jle
push
ins
into
call
adc
or
aaa
pop
test
push
jo
retf
iret
popa
push
xchg
add
arpl
loop
push
inc
fstp
aad
sbb
in
push
stos
jge
xchg
rcl
xor
test
daa
and
mov
push
mov
sbb
cmp
sbb
outs
in
sti
scas
das
imul
pushf
pop
inc
fistp
add
outs
int3
jno
fdiv
aad
push
mov
cmp
push
xor
and
lds
xor
push
xor
cmp
(bad)
test
push
xor
dec
adc
pop
popa
cmp
ins
push
inc
movs
imul
call
add
add
mov
mov
outs
aaa
in
int
pop
ins
dec
pop
or
pop
adc
mov
cmps
lds
jbe
retf
imul
out
or
imul
mov
ds
aas
jb
outs
dec
push
mov
jg
ins
mov
push
mov
inc
sub
jmp
mov
cmp
pop
xchg
pop
(bad)
(bad)
fdiv
hlt
xchg
pop
jmp
add
fbld
jmp
add
ja
lea
fisttp
xchg
leave
dec
inc
xchg
xlat
or
xor
inc
cmps
into
mov
cmp
mov
mov
inc
std
dec
popa
adc
mov
add
je
icebp
adc
ret
or
jbe
jae
xchg
jp
call
cli
inc
cwde
inc
cmp
push
jl
sbb
test
sahf
cdq
lock
add
add
mov
popa
push
mov
mov
xor
jl
leave
imul
ret
repz
sub
ret
popa
ds
nop
jecxz
sahf
jmp
addr16
scas
cdq
mov
mov
aam
loop
(bad)
xchg
and
xor
dec
shl
mov
add
add
add
add
sbb
add
jmp
enter
pop
adc
xchg
retf
xchg
mov
jbe
sbb
cmp
cmps
or
xchg
xor
sub
or
popa
aad
dec
jecxz
imul
xchg
lods
adc
mov
and
icebp
arpl
stos
ret
ret
push
or
test
loop
mov
pop
jo
sub
aad
ror
in
pop
call
(bad)
mov
and
sub
pusha
pop
call
jb
cmc
cli
movs
cmc
std
xchg
and
sbb
fdiv
fmul
pop
and
imul
sbb
in
idiv
imul
test
add
adc
js
test
mov
cmp
sbb
mov
outs
imul
or
loop
lahf
mov
and
retf
mov
cmps
out
int
push
addr16
mov
imul
or
jae
ret
mov
out
lods
icebp
ds
mov
stos
imul
inc
ins
pusha
sbb
jp
xchg
cld
inc
idiv
add
add
mov
call
stc
sbb
pop
pop
adc
or
pop
mov
sbb
push
mov
aam
aas
pusha
bound
adc
scas
sub
dec
fucom
sbb
shl
ret
in
xchg
add
mov
stc
jne
adc
stc
mov
and
dec
jns
jg
outs
loopne
dec
mov
shl
xchg
inc
dec
imul
jbe
leave
shl
lods
test
hlt
sub
loop
jg
and
push
mov
movs
push
ret
mov
add
add
mov
jo
movs
fstp
mov
or
jo
pop
pop
mov
xchg
mov
inc
push
dec
xor
push
cdq
sub
sub
dec
sbb
mov
push
out
jmp
pushf
sub
or
(bad)
ss
jb
test
cmp
(bad)
out
dec
pop
cmp
mov
add
mov
imul
in
add
js
pop
ret
stos
mov
int
ja
(bad)
xchg
(bad)
fsubr
jmp
retf
repnz
push
test
(bad)
ret
inc
aas
in
cmp
inc
sbb
push
dec
ins
inc
add
call
dec
dec
lods
mov
out
push
call
mov
data16
pop
enter
fxch
xchg
loopne
cs
xchg
mov
adc
outs
test
ja
(bad)
int
xor
and
adc
inc
dec
push
pop
lea
(bad)
jmp
cmp
in
xchg
or
call
mov
rcr
jmp
cmp
movs
cmp
xor
(bad)
jae
daa
fistp
cmp
jecxz
inc
(bad)
jp
push
pop
bound
and
retf
inc
or
cmps
mov
jno
stos
xor
fild
or
pop
inc
popf
jo
add
add
mov
jnp
sbb
es
aaa
xchg
jnp
mov
mov
out
push
pop
jl
jae
popa
addr16
ds
cmps
jne
je
xchg
xchg
add
fdiv
sub
dec
les
push
dec
mov
stos
nop
dec
test
daa
pavgw
cmc
adc
iret
addr16
mov
cs
inc
adc
mov
(bad)
lods
in
ds
(bad)
fcompp
adc
jo
movs
test
in
inc
lock
div
adc
jmp
adc
out
xchg
sbb
mov
jo
jae
xchg
add
mov
pop
and
ins
push
test
fcmovnbe
xchg
xchg
dec
pop
leave
adc
xchg
jecxz
dec
mov
cmp
jno
test
retf
icebp
pop
mov
xchg
nop
pop
iret
jmp
pusha
xchg
mov
pop
xchg
push
push
ins
sar
inc
mov
outs
mov
int3
into
cmc
pop
push
add
mov
mov
mov
data16
jo
xor
adc
shl
mov
xor
sub
add
xlat
imul
add
add
dec
fcmovnb
fdivr
jmp
jns
(bad)
or
or
pushf
cli
movs
jno
dec
dec
ret
jmp
(bad)
clc
and
xchg
pop
mov
xor
push
mov
scas
mov
push
cmp
icebp
aam
repz
lock
loopne
xchg
sbb
cld
cdq
shl
add
ja
cmps
xor
jg
push
sub
add
add
dec
inc
cmp
scas
nop
cmp
int
dec
jmp
repz
jmp
inc
jb
inc
cld
daa
cmp
jbe
loop
jno
dec
gs
les
fucomp
push
stc
push
xchg
lea
inc
and
xor
push
icebp
push
out
call
psubd
(bad)
cmp
and
int
cdq
call
cli
outs
inc
dec
cli
push
cld
mov
add
inc
fcom
push
xchg
inc
movs
scas
mov
jp
jmp
xchg
les
fsubp
fsubr
add
add
dec
mov
fnstsw
xchg
movs
inc
xchg
jle
push
lods
inc
pop
fidiv
add
cmps
or
out
popf
cmc
jmp
fiadd
and
fnstcw
das
fidiv
xor
inc
mov
imul
(bad)
int3
push
scas
push
dec
movs
adc
iret
sub
or
loopne
xchg
and
inc
imul
push
sbb
inc
sub
xchg
test
daa
fstp
xchg
pusha
lods
jne
adc
mov
pop
cmp
lea
jmp
push
mov
bswap
xlat
mov
jnp
aas
and
push
add
add
inc
scas
retf
xchg
sahf
retf
dec
xchg
movs
lods
or
and
or
in
jno
dec
jns
lods
cmc
test
cli
mov
in
imul
popf
fs
pop
inc
push
cmp
test
movs
push
and
test
cli
(bad)
inc
shl
push
test
mov
nop
sub
fwait
ins
and
pop
aad
jns
pop
je
test
and
jge
push
xchg
add
and
xor
add
das
arpl
loopne
(bad)
sbb
inc
test
push
pop
(bad)
out
test
iret
inc
jbe
lahf
add
arpl
and
retf
fldl2t
jmp
in
data16
arpl
xor
fdivr
dec
push
xor
dec
push
ret
fwait
ret
mov
sti
cmps
mov
jmp
jecxz
loope
jmp
das
xor
and
add
add
add
and
movs
inc
jno
in
lahf
sbb
(bad)
fsubr
addps
sub
ds
les
addr16
sahf
ret
fstp
sbb
enter
mov
hlt
cmps
in
cmp
lea
jno
aad
xlat
das
xchg
xor
dec
lahf
mov
sub
cld
clc
je
mov
ins
sbb
cmp
loope
test
daa
movs
xchg
gs
cmps
in
sub
or
test
jle
mov
mov
jne
sub
jae
ret
cmp
cmp
nop
outs
gs
adc
shr
pop
lods
jb
dec
in
mov
dec
add
fimul
shr
xor
jge
not
mov
inc
aas
push
jns
xor
lock
cmp
add
add
jp
lods
lods
imul
enter
jge
pop
cdq
or
inc
pop
jb
(bad)
mov
in
cmp
xchg
jnp
mov
cld
add
fisttp
pop
pushf
or
pop
out
adc
stos
js
mov
adc
mov
int
sbb
into
addr16
dec
jge
js
out
rol
hlt
cmps
leave
adc
pop
mov
add
jmp
xor
pop
repnz
sub
imul
pusha
mov
push
cli
repz
(bad)
cli
xlat
lds
push
sub
fldlg2
mov
and
cmp
fist
sub
adc
int
sbb
lods
jle
adc
ret
mov
pop
and
out
out
mov
ret
(bad)
mov
jge
cmc
repz
aas
xor
into
sub
xchg
js
mov
or
mov
in
dec
cdq
cwde
cld
pop
outs
dec
push
movs
or
movs
sbb
push
jbe
(bad)
jmp
sbb
(bad)
add
add
add
mov
popa
int
or
mov
or
jmpw
fpatan
push
jne
mov
loop
je
mov
ins
addr16
fmul
push
out
sbb
jge
lods
enter
xchg
stos
push
add
jno
mov
push
repnz
out
xor
jp
inc
xchg
test
pop
jmp
mov
add
lods
xchg
fmul
fist
imul
rol
xchg
push
push
nop
mov
pusha
inc
push
sub
(bad)
je
ins
push
xor
mov
cli
mul
int
movs
inc
dec
sahf
shr
cmps
stos
sar
inc
mov
jbe
xchg
call
push
rol
add
add
xchg
ss
push
test
inc
test
jle
mov
xor
sahf
outs
inc
jae
je
iret
je
and
lods
jb
inc
sbb
test
push
gs
icebp
xchg
std
inc
out
test
inc
xchg
addr16
gs
ins
mov
ds
jb
inc
adc
mov
xor
mov
push
pop
arpl
lock
xchg
pop
pop
int
push
pusha
(bad)
iret
jmp
add
jae
adc
pop
cli
sub
xchg
xchg
movs
int3
cmc
popf
xchg
lds
adc
into
mov
dec
fisubr
mov
add
mov
lods
cs
add
scas
or
mov
pop
mov
(bad)
lds
es
sbb
retf
std
int
cmc
or
xchg
(bad)
(bad)
jmp
add
add
and
loopne
sbb
jne
fwait
push
push
xlat
dec
loopne
in
jp
gs
dec
adc
sar
ins
test
fisubr
icebp
ror
sbb
jmp
movs
(bad)
into
in
mov
call
bnd
(bad)
xchg
add
xchg
mov
data16
bound
scas
jmp
pop
xor
add
push
inc
mov
fisubr
mov
jge
mov
das
mov
sbb
adc
xchg
ret
pushf
adc
jl
loope
pop
jno
aas
inc
test
es
in
mov
cs
aad
cmp
or
dec
jl
cwde
bound
and
fdiv
xchg
push
or
(bad)
xlat
jae
lds
push
in
movs
inc
ja
add
add
add
push
inc
dec
add
fbld
cmp
loope
enter
xor
mov
adc
add
(bad)
shl
dec
xor
sub
sub
mov
cmp
out
arpl
adc
(bad)
pop
sbb
xlat
shr
lock
call
jbe
(bad)
add
xchg
mov
mov
mov
and
mov
test
(bad)
mov
lds
inc
sub
idiv
gs
in
in
pop
fmul
scas
mov
mov
popa
outs
sub
fwait
lods
scas
int3
jo
jbe
lea
(bad)
shl
loope
dec
das
cli
cmc
mov
pop
cmps
in
mov
retf
icebp
dec
(bad)
xlat
pop
sbb
xchg
mov
je
jno
push
loopne
xchg
and
mov
push
dec
mov
mov
inc
sub
mov
add
lea
and
(bad)
movs
add
mov
push
push
push
dec
pop
aad
inc
ror
rcr
jmp
add
jle
mov
jae
test
sub
xchg
cwde
shl
add
add
add
aas
push
push
mov
jb
stos
mov
inc
pop
jmp
mov
mov
rcl
jg
adc
sahf
in
adc
fidiv
std
retf
sub
fwait
mov
mov
std
ins
mov
les
mov
(bad)
in
lds
add
ja
lds
push
inc
call
fldcw
inc
mov
mov
xor
std
hlt
pop
mov
mov
adc
cmp
pop
fs
inc
in
inc
mov
add
push
jmp
and
jnp
scas
and
or
jmp
xchg
push
add
movs
sahf
mov
repz
inc
ins
std
cwde
jmp
retf
jp
cld
add
mov
add
cmps
(bad)
fidiv
mov
add
add
mov
test
fst
bound
hlt
pop
inc
lahf
and
fwait
sbb
adc
dec
enter
outs
cwde
add
cmp
sub
add
jg
push
sbb
cmp
mov
stc
push
les
jo
cmps
xchg
pushf
mov
cmp
fs
jp
jnp
jns
aas
mov
cmps
sub
out
adc
add
repz
xchg
add
ins
cwde
pop
mov
jecxz
add
xchg
mov
push
shr
popa
scas
mov
xchg
add
push
int
aas
xor
or
icebp
inc
sbb
xchg
and
cwde
in
mov
push
jle
int3
scas
inc
mov
das
push
(bad)
xor
dec
inc
push
dec
cmp
leave
adc
cmps
sti
(bad)
pushf
push
call
ja
adc
cmp
cli
lea
dec
cmp
or
xor
add
add
add
add
add
lods
mov
inc
imul
ret
xchg
jle
cmp
sbb
nop
into
xchg
and
mov
push
mov
jne
mov
outs
and
movs
pop
inc
int
jl
push
arpl
fldenv
ficom
and
stos
clc
shr
push
aas
xchg
sbb
out
(bad)
mov
sub
push
loopne
cdq
test
ins
cmp
xchg
pop
lods
fwait
retf
and
fbstp
pop
or
push
lods
int3
inc
lods
int3
int
int3
mov
fwait
xchg
xor
adc
mov
arpl
dec
addr16
mov
mov
jge
push
repnz
retf
fdiv
inc
adc
loope
and
sub
enter
lods
pop
xor
cmp
mov
or
add
(bad)
jnp
push
adc
sbb
icebp
fild
aas
loopne
loop
imul
inc
in
retf
add
repz
pop
mov
sub
lock
scas
or
test
mov
sub
xor
loope
scas
popf
repnz
popa
xchg
(bad)
jnp
cmp
imul
fisub
out
les
pop
cli
push
ret
ins
test
jno
pop
add
repnz
xchg
xor
xor
pop
sbb
adc
xchg
push
mov
(bad)
or
lods
outs
cli
cmp
push
(bad)
movs
cmps
out
push
dec
pusha
mov
(bad)
mov
mov
imul
inc
and
push
and
push
fisttp
rcr
repnz
jg
xchg
test
mov
push
es
ss
xchg
out
xchg
jne
pop
cmp
pusha
xchg
push
loope
scas
cwde
jg
in
jns
call
dec
push
pop
adc
dec
(bad)
scas
lock
addr16
and
jae
push
iret
push
sub
sbb
popf
les
mov
neg
or
jmp
sbb
daa
imul
push
mov
add
rol
fld
sub
and
addr16
popa
movs
fisub
cmp
dec
adc
cli
cmp
mov
and
mov
mov
push
xchg
fs
jmp
imul
fisttp
dec
adc
dec
inc
sbb
popa
into
fsub
xlat
cwde
mov
xchg
bt
mov
add
lea
or
imul
outs
add
jmp
ins
push
xor
mov
or
lods
or
loope
add
add
add
add
sub
outs
mov
aas
mov
push
push
jp
push
push
data16
mov
lahf
or
dec
lahf
adc
in
inc
xor
sub
retf
mov
mov
adc
adc
shl
push
mov
xlat
xor
mov
rcr
test
add
add
hlt
fcomp
inc
stos
imul
into
mov
mov
mov
adc
mov
pop
push
les
gs
and
adc
fs
aam
jb
les
jp
xchg
outs
pop
std
call
aas
adc
add
pop
and
mov
mov
or
(bad)
shl
jp
outs
xchg
fidiv
mov
or
out
add
add
add
sti
cmps
xlat
cdq
sub
dec
cmp
inc
in
(bad)
jmp
sbb
mov
imul
adc
dec
cmp
mov
ja
(bad)
iret
sbb
out
or
ins
stc
sahf
cmp
jmp
out
jno
ss
sbb
enter
mov
mov
and
jl
inc
nop
cmp
xor
ret
xchg
xor
cmp
inc
fst
dec
movs
clc
xchg
xchg
or
pushf
pop
lahf
push
jns
fbld
jbe
fadd
icebp
fisubr
add
add
add
add
mov
shl
cmp
(bad)
(bad)
sbb
rcl
sub
lea
xchg
fnsave
retf
mov
neg
aas
cmp
push
mov
or
or
(bad)
jno
xor
or
push
mov
xor
push
pop
or
ins
outs
jle
dec
sbb
jle
sub
jo
stc
xor
cwde
pop
sbb
and
mov
repz
loope
retf
daa
(bad)
icebp
add
inc
pop
xor
push
jbe
mov
rcl
pop
out
mov
sbb
scas
xchg
aas
aad
rol
adc
hlt
ins
inc
ins
sahf
aad
add
add
adc
in
imul
mov
out
cmp
cmps
outs
mov
sbb
pop
mov
std
fiadd
sar
test
xchg
push
out
movs
shr
(bad)
call
es
add
dec
inc
mov
add
and
retf
ds
lods
cwde
sti
gs
adc
outs
ins
sbb
outs
cli
out
jbe
iret
sbb
out
les
lods
and
mov
cmp
retf
fidiv
push
lods
lock
lock
in
aas
sbb
sbb
and
sub
mov
mov
lods
mov
and
and
pop
pop
dec
in
out
sti
or
dec
cdq
lahf
repz
cmova
xor
jne
sub
push
mov
adc
js
cdq
add
push
dec
jecxz
and
mov
or
cmp
cmp
add
sbb
js
inc
int3
and
ins
pop
dec
dec
(bad)
and
or
or
xchg
xor
movs
and
aad
inc
xchg
dec
push
loopne
and
sub
outs
loop
loope
scas
add
add
mov
call
test
add
xlat
(bad)
sub
pop
in
push
pop
cdq
jnp
xchg
les
test
dec
cmp
mov
add
imul
pushf
pop
mov
iret
xor
dec
repz
pushf
mov
retf
and
clc
cdq
mov
out
lahf
add
jo
and
sub
ficomp
push
mov
lea
into
mov
xchg
xchg
jecxz
rol
retf
enter
and
cmp
push
sbb
mov
cmc
push
ins
lods
cmp
sbb
add
jnp
mov
int3
add
add
add
ret
jge
mov
and
aam
mov
push
(bad)
imul
cmp
sbb
xor
icebp
xchg
cmps
dec
cmps
jmp
arpl
in
int
xchg
popf
pop
test
out
sub
and
adc
sub
adc
mov
stos
jmp
cdq
mov
lods
cmp
hlt
icebp
pop
scas
add
mov
mov
and
loopne
loop
in
pushf
imul
cmps
je
push
inc
mov
imul
stos
or
cdq
ret
pusha
loope
sbb
bound
repnz
fild
sbb
out
push
mov
inc
jns
mov
dec
bnd
dec
pop
idiv
rcr
neg
in
or
cmps
ret
mov
and
fcmovb
outs
fstp
(bad)
jnp
sub
adc
adc
mov
lock
nop
jl
mov
add
add
(bad)
fsub
xchg
pop
inc
add
retf
nop
loop
repnz
jbe
push
gs
and
es
movs
xchg
or
xchg
ins
(bad)
stc
pushf
xor
jb
jl
push
js
mov
rcr
xchg
add
pushf
aaa
jp
fucom
pop
xor
xor
xor
and
and
test
xchg
cwde
add
aas
cmps
jo
test
(bad)
out
(bad)
icebp
aam
xchg
sbb
sub
ficomp
pop
sbb
and
in
sbb
add
add
mov
stc
stos
or
repnz
add
add
jle
inc
sub
and
sti
loopne
aaa
sbb
push
outs
cld
ds
movs
mov
xlat
sahf
jbe
dec
lods
cmp
dec
scas
add
cwde
mov
adc
and
loop
shr
sub
les
cdq
mov
shl
jbe
shl
dec
or
jno
out
retf
pop
pop
lahf
(bad)
jnp
adc
test
dec
out
jecxz
or
add
add
add
shl
stos
ja
pop
out
mov
lock
test
out
scas
mov
cmc
pop
cmp
sub
in
repnz
sub
in
(bad)
nop
inc
sti
sub
in
pop
mov
sbb
mov
push
xor
pop
mov
outs
out
mov
xchg
test
xlat
and
movzx
lds
mov
mov
add
add
and
xchg
out
push
in
mov
push
jg
ins
(bad)
ret
addr16
cmp
sbb
rol
xor
or
fs
mov
pop
cmp
mov
jo
fld
push
mov
adc
lea
pusha
ret
(bad)
sbb
xchg
add
jmp
outs
leave
cdq
add
lock
xchg
or
mov
mov
in
hlt
in
sbb
push
push
shl
mov
arpl
mov
ins
outs
ds
addr16
loop
cld
xor
fdivr
ins
or
and
sub
shl
sub
mov
in
ss
push
out
and
imul
dec
add
fist
add
arpl
dec
or
xchg
in
add
dec
jg
shr
loopne
pop
test
movs
ss
jb
(bad)
(bad)
sbb
mov
mov
cmp
sbb
adc
fcmovnu
cld
sti
jecxz
mov
je
loope
rol
xchg
adc
xor
test
ss
mov
jecxz
jp
outs
sub
xlat
neg
jmp
adc
pop
cmp
sub
sti
imul
add
add
out
int
pop
mov
(bad)
std
(bad)
mov
cmp
mov
pop
dec
sbb
add
mov
and
movs
lods
nop
jae
dec
nop
lods
adc
mov
out
add
es
aam
aas
push
push
xchg
sub
ficom
cwde
add
test
icebp
adc
xchg
mov
mov
xor
lods
push
sub
push
test
das
arpl
add
stc
in
pop
es
loopne
jne
icebp
pop
aas
mov
add
outs
and
(bad)
shl
retf
out
daa
dec
jne
sub
rcr
cmp
add
jno
jg
xchg
push
test
cwde
mov
mov
rol
push
inc
test
cmp
rcl
mov
cmp
dec
cmp
cmps
adc
push
pop
mov
inc
shl
jl
mov
adc
ins
or
cdq
outs
mov
and
das
icebp
mov
mov
lock
push
mov
movs
jge
(bad)
shl
int
add
ins
push
iret
(bad)
bnd
push
and
idiv
xchg
push
inc
std
(bad)
movs
out
mov
jnp
aad
jae
push
push
icebp
fisttp
add
fs
jp
call
cdq
in
(bad)
loope
add
inc
jecxz
xchg
sbb
xchg
sti
adc
dec
sbb
fldenv
jmp
dec
and
ja
test
pusha
jnp
test
cdq
push
gs
or
sub
mov
jb
and
call
mov
std
rcl
fild
or
add
sub
mov
mov
xchg
fwait
popa
xchg
mov
call
lahf
xchg
stos
stc
aaa
test
test
lods
pop
mov
jno
and
cmp
mov
ins
in
and
sub
fdiv
push
inc
dec
jae
jg
lock
jmp
sbb
or
jo
ret
stos
jle
or
popa
jns
aam
sub
push
lods
(bad)
adc
jae
test
jg
sbb
fisttp
or
outs
aaa
in
dec
rcr
inc
aaa
and
add
jge
mov
pop
add
add
add
add
cdq
pop
into
dec
mov
pop
xchg
hlt
korb
add
arpl
(bad)
inc
aad
push
arpl
xlat
js
ins
fisub
fsubr
or
or
xor
sbb
bnd
push
add
iret
cmp
fnsave
arpl
lea
cmp
in
cmp
sahf
int3
add
mov
ret
shr
adc
lods
pop
lods
cmp
cmc
jbe
out
push
dec
lods
bound
movs
inc
icebp
pusha
out
adc
pop
cwde
test
xor
mov
or
pop
mov
imul
shl
retf
xchg
popa
daa
adc
test
mov
movs
cmp
mov
dec
aad
inc
mov
pop
out
pushf
pop
add
ins
popa
sbb
add
xor
popa
popa
mov
pusha
out
add
aam
xor
stos
jbe
gs
addr16
(bad)
popf
int
add
in
inc
or
enter
adc
dec
call
mov
push
add
jl
dec
and
jp
fucomi
out
dec
out
movs
sbb
lods
lods
out
aam
cmp
mov
scas
mov
stos
fild
and
les
dec
ret
fld
in
test
push
movs
mov
loopne
mov
jno
add
add
add
fnstcw
cmc
dec
xchg
jbe
(bad)
test
cld
jl
jp
call
mov
jmp
fcmovne
ds
lods
aas
imul
loope
push
adc
jmp
pop
rcl
mov
sub
mov
mov
mov
jl
push
cmp
mov
mov
add
jbe
sub
loope
xchg
mov
shl
loop
ret
cmc
or
ins
in
jle
ja
cli
dec
add
popa
add
xchg
jl
sub
mov
call
cs
mov
xor
enter
enter
sub
jg
inc
pop
fstp
add
movs
push
push
push
cs
sub
fild
jbe
push
jge
fucomi
cmp
dec
in
(bad)
cli
and
jnp
lahf
push
add
add
add
add
cmp
inc
mov
xor
push
daa
mov
jle
cmps
ins
sahf
mov
popf
jge
imul
loop
in
cdq
std
imul
out
dec
adc
push
movs
adc
inc
mov
aas
arpl
push
cmp
mov
ds
int3
cmp
cmp
sub
and
pop
push
pop
movs
xchg
popf
repnz
jae
aad
inc
lods
mov
mov
inc
jbe
sub
std
jmp
cdq
into
add
sahf
xchg
mov
mov
cmp
mov
lea
out
shl
sub
mov
ins
and
aas
cmp
mov
jp
and
les
popf
mov
leave
and
out
pop
xor
mov
ins
std
mov
test
sti
jns
dec
and
sbb
ss
and
jecxz
ret
push
rcr
cmp
jae
mov
mov
sub
lods
cmc
xchg
inc
clc
cmp
add
inc
pusha
xlat
loopne
push
mov
xor
mov
repz
inc
sub
cmp
shr
enter
scas
dec
cmp
into
mov
(bad)
mov
fdivr
push
adc
fcomp
pop
cmps
add
add
cld
pop
jg
popf
enter
scas
retf
iret
jb
inc
leave
call
test
jno
sbb
jnp
dec
and
test
xlat
idiv
(bad)
mov
loopne
ret
icebp
sbb
pop
(bad)
leave
jle
add
mov
dec
xor
into
sub
dec
sub
adc
stc
sub
leave
jecxz
mov
ret
or
data16
xchg
ins
retf
cmp
imul
push
pop
je
add
add
add
fbld
out
enter
adc
aad
inc
pop
adc
add
jns
mov
test
movs
ja
push
cmps
(bad)
jecxz
cmc
sbb
sbb
dec
arpl
jns
lahf
inc
or
push
push
jbe
sbb
cdq
cmp
jnp
pop
sub
scas
pop
retf
movs
and
inc
cmp
jg
inc
repnz
and
aas
cdq
inc
lods
inc
mov
sti
es
iret
fst
hlt
jne
or
sub
idiv
lds
test
ror
jl
or
mov
aam
xor
sub
xchg
xor
inc
out
gs
shl
sub
mov
xor
jo
clc
inc
cdq
pop
mov
sti
out
sbb
mov
xchg
das
loop
adc
cmps
xor
add
sub
idiv
inc
mov
adc
pop
aad
lods
jns
sbb
sbb
mov
xchg
and
(bad)
stos
lds
icebp
jbe
inc
mov
enter
(bad)
jnp
sub
clc
pushf
add
lea
(bad)
and
dec
repnz
push
int
mov
mov
daa
xor
dec
jne
and
mov
daa
(bad)
mov
int
arpl
push
iret
fstp
lea
add
mov
std
pop
(bad)
push
lds
loopne
mov
dec
mov
dec
lahf
mov
test
jle
inc
mov
add
bound
sub
or
test
lahf
or
mov
add
add
shl
stos
imul
stos
push
pop
les
aas
lods
lahf
fxch
stc
(bad)
cmps
int3
je
sub
add
scas
jbe
mov
adc
ss
stc
jb
mov
jmp
and
xor
sbb
jae
adc
or
retf
inc
sbb
imul
(bad)
jmp
push
and
xchg
adc
test
push
pop
fdiv
dec
pop
add
pop
call
cs
xor
inc
(bad)
xchg
call
stc
cmp
mov
add
int3
jb
adc
rol
add
and
imul
(bad)
fmul
jl
sbb
mov
popa
mov
mov
in
push
xchg
retf
jmp
add
retf
cld
jne
fwait
add
pop
jecxz
ffree
rcl
mov
xor
mov
fstp
mov
dec
test
inc
call
sub
or
leave
add
aaa
and
fsubr
int
push
adc
cmps
and
sbb
fstp
dec
dec
sahf
xchg
shl
or
retf
dec
jb
cld
popf
call
mov
and
dec
sbb
mov
in
sub
adc
arpl
gs
mov
or
in
push
mov
jns
sahf
sbb
sbb
adc
rol
push
test
sub
push
repnz
pop
dec
ins
push
cmp
outs
jp
test
push
clc
daa
shl
fs
sbb
shl
lock
xchg
mov
aam
mov
pop
cmp
aad
xchg
in
jns
shl
test
mov
mov
call
push
lods
cmp
mov
stos
inc
and
inc
and
out
dec
xchg
add
sub
add
add
inc
imul
mov
fwait
call
mov
dec
xor
adc
or
pop
jmp
push
out
mov
inc
xchg
(bad)
or
xor
in
out
jle
mov
pop
arpl
test
test
and
sub
popa
pop
sub
add
xchg
arpl
inc
push
pop
cmp
imul
sbb
lahf
xor
sub
xchg
mov
movs
ins
lea
push
adc
jo
push
cmc
mov
or
movs
inc
call
fwait
scas
mov
sbb
icebp
mov
or
mov
add
add
add
add
jl
push
mov
jecxz
xchg
loop
xlat
fistp
dec
inc
(bad)
xor
fstp
add
xchg
xor
cmps
adc
loopne
or
inc
xlat
mov
fbld
xchg
lock
fiadd
xor
(bad)
mov
fnstcw
test
dec
or
fs
xchg
and
fmul
shr
jg
(bad)
jmp
arpl
test
inc
(bad)
out
in
jae
in
xor
(bad)
call
add
add
mov
test
cdq
fldenv
adc
xchg
and
rol
xlat
pop
push
fmul
cmc
in
(bad)
xlat
and
dec
out
mov
nop
push
cmp
and
(bad)
or
repz
inc
pop
(bad)
out
or
movs
lds
mov
je
and
js
gs
add
fsubr
dec
jo
aad
stc
dec
aad
jg
xchg
iret
out
push
sbb
icebp
test
es
ret
arpl
repz
add
add
push
and
jnp
arpl
push
adc
push
(bad)
fisttp
add
sub
aaa
repz
xchg
ret
mov
sub
shl
inc
pop
push
in
sbb
popa
pushf
cmp
push
adc
ss
pusha
inc
jmp
xor
mov
xor
mov
xchg
ins
aad
cdq
and
sbb
frstor
add
add
add
dec
aas
clc
jns
pop
retf
retf
push
popa
dec
inc
mov
ds
push
rcl
dec
das
inc
lods
dec
or
pop
mov
test
rcr
pop
shl
iret
ja
adc
or
cmp
cs
lods
xor
ret
loopne
fs
pop
inc
and
mov
data16
jge
sbb
jnp
jp
scas
dec
pop
mov
push
icebp
movs
jne
imul
fidivr
retf
jo
jl
inc
shl
pop
adc
jmp
(bad)
loopne
std
add
cmp
xchg
adc
and
jp
ficom
fwait
sahf
mov
sub
fs
add
add
cmps
xchg
sub
ins
pop
sub
out
les
and
mov
jg
ja
arpl
js
cmp
(bad)
xor
xor
lea
xor
or
mov
(bad)
push
jmp
dec
fistp
jae
aas
mov
lds
movs
mov
mov
or
stc
jle
push
daa
in
sub
mov
int
and
mov
push
cbw
stos
sub
jno
loop
aaa
jb
out
mov
inc
mov
into
aam
add
mov
pop
jb
jns
cmp
imul
jp
push
stos
xlat
test
mov
pop
add
mov
aas
and
add
sub
sub
out
out
add
mov
call
mov
jne
aas
xchg
scas
vcmppd
xor
add
add
add
xchg
hlt
dec
add
mov
dec
aam
std
jl
lock
call
lahf
pop
push
jp
je
xchg
cmp
mov
int
pop
mov
ss
adc
sbb
pushf
mov
(bad)
shrd
xchg
pushf
fs
or
pop
mov
or
pop
add
push
repz
loope
outs
sbb
jb
cmp
add
add
cmovge
or
push
addr16
loopne
jbe
out
add
loopne
sbb
sbb
inc
stos
inc
fdiv
fist
push
pop
dec
pop
scas
sbb
jno
repz
inc
dec
dec
popf
ins
js
scas
xchg
das
gs
mov
jmp
jmp
cmp
arpl
out
jno
repnz
setp
(bad)
sbb
movs
ret
push
mov
sbb
js
jge
mov
cmc
add
mov
call
pop
dec
mov
cmp
sub
aam
stc
pop
push
xor
xor
pop
pop
adc
or
inc
(bad)
inc
(bad)
push
cli
jge
pop
pop
cli
push
stc
xchg
dec
jne
repnz
xchg
push
cmp
jnp
cmp
aam
psrad
add
(bad)
icebp
test
in
mov
std
push
fsub
xchg
add
add
add
jnp
icebp
shl
fmul
dec
and
sahf
mov
xor
mov
fnsave
test
js
add
dec
cmp
jb
repz
xor
cdq
lock
in
pop
add
jl
mov
jge
out
adc
cs
sub
cmp
pop
repnz
jmp
shl
fistp
sbb
xor
(bad)
sub
sub
jns
nop
imul
iret
sub
xchg
test
leave
mov
jmp
fdivr
aam
fild
jae
xor
call
pop
loopne
or
add
shl
movs
push
xlat
inc
out
js
jnp
mov
movs
add
add
lahf
sbb
xchg
and
scas
mov
popf
mov
inc
imul
sahf
mov
mov
mov
cmp
jno
inc
gs
dec
and
jne
fmul
fs
push
adc
xlat
(bad)
rcl
mov
test
mov
push
dec
inc
fist
test
outs
lea
inc
sbb
or
cmp
mov
mov
xor
jl
stc
sbb
dec
aam
pop
jecxz
xchg
mov
cmp
or
push
in
jbe
add
add
mov
(bad)
repnz
int3
xchg
sub
pop
test
mov
int3
jns
add
inc
repz
mov
scas
enter
xor
or
xchg
lea
imul
mov
or
inc
adc
push
push
push
dec
icebp
(bad)
cmp
xor
dec
or
xchg
pop
call
jb
loop
lods
dec
add
aam
(bad)
bound
call
enter
pop
cmp
call
jns
mov
push
outs
lock
mov
jp
(bad)
popa
(bad)
push
push
mov
cli
test
fist
popa
out
push
and
loope
cmps
or
push
cli
aad
xchg
mov
dec
or
sub
cmps
push
fwait
xor
mov
pop
jg
add
adc
push
lahf
stc
push
fs
or
stc
shr
ss
sub
dec
mov
add
aaa
push
cmp
sbb
cmp
adc
mov
push
sub
fcom
mov
xchg
mov
ret
scas
cmps
jl
jb
jb
add
jb
mov
sub
sbb
shl
hlt
bound
arpl
das
jp
ret
in
(bad)
pop
mov
mov
not
les
movs
loopne
xchg
jp
push
idiv
pop
jns
adc
pop
mov
add
xchg
ret
repz
dec
add
xchg
push
int
inc
pushf
ins
mov
dec
sub
pop
rol
in
xor
sbb
cmp
daa
xchg
add
neg
into
pop
mov
into
cs
sub
lock
add
add
aam
pop
xor
cmp
cwde
pop
rol
test
xchg
mov
sti
cmp
sahf
jo
mov
adc
mov
dec
cmp
sub
jmp
adc
adc
or
or
push
std
xchg
in
inc
test
enter
push
lock
mov
lock
test
stc
scas
jae
fsubr
(bad)
fisub
outs
inc
stos
out
add
daa
inc
dec
jp
stos
int
add
lock
and
adc
jb
or
inc
ds
inc
nop
hlt
sub
inc
jnp
mov
adc
idiv
movs
adc
rcl
inc
push
ins
adc
dec
inc
add
sbb
push
add
add
add
add
add
jb
loop
xchg
push
or
stos
popf
cld
lock
mov
dec
adc
mov
push
lock
adc
cmp
(bad)
pop
(bad)
jbe
pop
mov
jp
mov
sbb
add
(bad)
call
push
clc
mov
out
js
aad
call
jns
or
cmp
adc
push
cmp
mov
and
mov
xchg
imul
int
(bad)
cli
sbb
cld
mov
pop
cmp
imul
sbb
mov
add
enter
pop
sahf
dec
adc
mov
or
pusha
nop
imul
inc
stos
mov
mov
mov
and
cld
push
clc
cmps
dec
call
ficom
mov
and
cld
shr
sbb
sbb
ffreep
in
es
fndisi(8087
jg
cmc
lods
out
sub
xchg
gs
sbb
mul
push
out
sub
add
mov
mov
xchg
cmp
xchg
bound
sub
jne
(bad)
push
outs
xor
push
xor
imul
int3
daa
inc
mov
xor
pop
pop
repnz
push
sub
test
sbb
pop
push
sub
stos
sub
mov
jbe
cmp
jae
les
ja
mov
and
test
mov
sbb
loope
pusha
test
icebp
xchg
sub
or
stos
jg
sbb
shl
retf
pop
sahf
out
add
invd
pop
out
fnstenv
jne
aas
cmp
out
pop
in
leave
jg
sub
cmp
mov
ret
sbb
mov
push
retf
test
test
pop
cmc
sbb
movs
adc
add
aad
popa
and
inc
retf
repz
adc
adc
sbb
mov
mov
cwde
repz
mov
add
sub
mov
dec
mov
in
je
loope
dec
and
in
test
sbb
aaa
push
sbb
push
jmp
outs
sti
or
push
scas
movs
cmp
ins
outs
popa
outs
push
outs
xchg
fdivp
jmp
(bad)
in
movs
ds
push
inc
cmps
push
jae
pop
cmp
xchg
push
test
mov
pop
(bad)
mov
jae
loope
jmp
sar
xor
and
mov
clc
loope
pop
cmps
or
xchg
inc
out
mov
xchg
mov
and
cmp
fbstp
and
adc
aam
inc
ret
xchg
add
arpl
mov
int3
fdiv
inc
push
mov
add
xchg
mov
mov
call
adc
(bad)
popa
or
pop
hlt
adc
sub
cmps
or
and
aad
sar
retf
nop
test
in
div
jb
enter
stos
adc
cld
data16
sar
jge
adc
mov
add
jae
iret
push
cmp
mov
jne
push
jne
push
sub
jl
in
inc
aaa
aaa
pop
nop
push
es
repz
pop
add
mov
call
jb
adc
fld
out
cdq
push
sub
repnz
iret
xabort
or
inc
popa
pop
jg
jg
ins
inc
cs
pop
pop
out
push
sub
push
mov
mov
fcmove
sar
sub
loope
popa
mov
push
add
pop
and
cs
xchg
lods
es
data16
pusha
lahf
add
jecxz
and
hlt
push
sub
cmp
aas
mov
jne
and
fiadd
add
add
iret
dec
pop
loop
pop
out
jg
dec
pop
mov
sahf
aas
in
ins
into
pop
test
stos
inc
outs
out
sbb
or
ss
add
lock
or
dec
lods
jecxz
data16
mov
hlt
add
xor
(bad)
mov
sub
mov
xlat
mov
stc
and
mov
fisub
adc
add
push
push
push
sub
aaa
daa
in
mov
nop
(bad)
jmp
into
xchg
push
not
daa
data16
arpl
data16
int3
dec
inc
sbb
icebp
or
aas
mov
jle
or
pop
pop
mov
mov
xor
loope
mov
adc
arpl
mov
cmp
popa
sub
std
loopne
sub
sub
in
je
fadd
mov
cmp
lods
cld
add
cmp
ret
cmp
pushf
imul
push
ret
leave
sub
cld
outs
inc
dec
jne
call
ja
sar
dec
pop
ins
xor
shr
sbb
and
gs
(bad)
push
dec
lock
movs
daa
or
xlat
in
test
mov
jmp
ret
cli
ror
fstp
cs
and
iret
sbb
and
inc
jmp
xor
lea
test
mov
fbstp
test
inc
inc
xor
ins
bound
in
ins
and
cmp
cmps
pop
sub
dec
in
xchg
jnp
cli
pop
and
retf
adc
mov
add
cmp
ins
test
jae
lea
aad
adc
jecxz
pop
jmp
ds
int3
mov
mov
inc
xchg
loop
call
movs
test
ins
outs
mov
aaa
mov
adc
test
jb
jge
das
fs
sub
dec
jmp
mov
inc
sbb
fcmovne
add
(bad)
stos
mov
nop
es
nop
lods
xchg
push
sbb
cmp
mov
jmp
je
mov
lock
aad
ds
das
pop
(bad)
aad
arpl
dec
xor
xchg
add
in
xchg
and
or
ficomp
adc
sub
stos
sbb
xchg
mov
push
loope
push
add
(bad)
xchg
js
cmp
shr
daa
ss
mov
retf
push
loope
fwait
cmp
scas
rol
gs
push
mov
xchg
pop
sub
loopne
(bad)
jmp
sbb
(bad)
sub
sti
pop
push
jbe
imul
test
add
fmul
xor
jle
or
push
xchg
das
push
add
add
pop
push
push
xor
adc
pop
ins
and
push
xor
sub
jns
test
xor
fistp
dec
xchg
repz
in
into
pop
ret
mov
or
push
or
aad
lods
fisubr
sbb
dec
mov
aad
fidiv
es
push
pop
jno
add
inc
mov
pop
arpl
mov
sub
mov
fnstsw
push
test
mov
shl
aas
mov
pop
xor
aas
pop
inc
jo
pop
pop
push
sub
ins
and
outs
push
test
fcom
sbb
xor
lock
ret
shl
cmp
clc
sahf
dec
aas
or
add
xchg
mov
int3
in
jmp
push
or
popa
popf
xlat
jo
xor
jnp
jge
jge
mov
js
fist
sub
or
fidivr
fadd
out
hlt
fwait
add
push
aam
pop
pop
ds
add
inc
icebp
or
jmp
iret
sub
in
addr16
rcl
cdq
leave
adc
xchg
mov
mov
cmp
pop
push
mov
mov
xor
jmp
out
push
push
pusha
jle
dec
push
push
adc
fcom
scas
xor
xor
and
sub
shl
xor
in
mov
xchg
inc
mov
inc
jg
repnz
mov
xor
dec
(bad)
rcr
push
jmp
jb
aas
aad
sti
stc
outs
jl
in
xlat
retf
or
mov
cmp
dec
fild
xor
aam
push
adc
mul
add
cld
(bad)
call
std
add
lods
sub
sub
ret
scas
dec
mov
push
pop
(bad)
rcr
cmp
(bad)
cli
xlat
jg
dec
push
scas
jmp
adc
jb
out
cdq
out
fidiv
mov
sub
jmp
xchg
sub
out
sub
sbb
fisttp
ret
xlat
into
or
call
mov
outs
dec
movs
rcl
fwait
and
sbb
xor
add
add
add
push
pop
cmp
jecxz
pop
or
add
and
jp
xchg
mov
test
std
or
jg
sbb
daa
cmp
fld
push
aad
sub
stos
mov
enter
mov
js
test
rcl
push
retf
in
or
mov
test
jb
cmps
mov
mov
lods
into
push
jnp
and
add
and
jecxz
out
rcl
mov
(bad)
add
add
add
add
repnz
bound
ret
imul
xchg
cwde
aam
jg
push
sbb
xchg
lahf
dec
push
iret
leave
repz
mov
adc
fstp
ror
or
fmul
inc
ja
sti
cld
or
sbb
js
jp
push
out
(bad)
ficom
movs
(bad)
push
mov
jle
inc
cmp
les
inc
jae
mov
jmp
shl
jno
std
(bad)
or
arpl
cmp
sar
mov
iret
dec
test
inc
pop
inc
sub
(bad)
call
pop
mov
jmp
mov
jne
jns
imul
fs
mov
xchg
xchg
std
ins
adc
mov
scas
xchg
sub
or
cdq
mov
dec
sub
xor
add
sub
int
sar
jmp
pop
call
jecxz
dec
aas
sahf
int3
sub
pop
or
cs
ss
repz
sub
sub
out
sar
add
daa
sub
push
out
les
dec
int
lods
(bad)
aam
jns
test
nop
dec
mov
lods
mov
ins
jl
and
inc
mov
mov
mov
add
add
add
add
pop
inc
pop
cmp
mov
mov
aaa
xchg
mov
adc
pop
int
test
push
mov
pop
mov
jl
dec
dec
shl
das
dec
push
pusha
xchg
(bad)
push
push
stos
dec
inc
sahf
sub
push
jnp
inc
mov
repnz
xor
cld
xchg
or
push
(bad)
loope
cmp
push
sub
imul
sbb
popf
call
mov
jb
je
out
push
stos
imul
scas
cs
scas
pushf
xchg
pushf
sub
dec
add
add
xlat
(bad)
cwde
imul
and
inc
jp
in
adc
fcom
pop
icebp
pop
(bad)
xor
retf
push
adc
adc
push
xchg
(bad)
fsubr
dec
outs
push
add
test
lea
mov
inc
sub
dec
or
add
jge
popa
shl
xchg
stos
mov
lahf
ror
mov
aas
mov
sbb
or
std
aaa
je
push
jno
daa
sub
ret
push
je
cld
cmp
rcr
adc
lods
xchg
pusha
mov
mov
icebp
ins
out
push
cmp
add
adc
test
xchg
or
pop
pop
nop
jg
enter
retf
and
xor
sub
pop
mov
or
data16
xor
jle
dec
push
bound
push
stos
and
imul
add
jnp
inc
and
and
in
ror
push
add
cmp
sbb
push
or
sbb
retf
xor
in
jae
cdq
and
or
ja
sbb
lds
ja
leave
sbb
push
int
xchg
mov
in
scas
out
xor
add
add
xchg
cmp
push
sahf
xor
ss
xchg
ds
std
fidivr
loopne
add
and
sbb
push
or
loop
nop
enter
ins
popa
or
cmps
mov
xlat
retf
sub
and
cdq
sbb
loop
repz
cmp
xlat
fld
sub
in
rol
sub
fld
cmc
std
push
jbe
daa
or
mov
shl
mov
mov
cmp
cmp
or
mov
jns
push
outs
push
cmc
jp
pop
out
and
inc
dec
add
sub
jns
push
aad
inc
pop
out
addr16
mov
dec
int
and
mov
ins
mov
cmp
test
ret
outs
sti
fwait
popf
stos
icebp
loope
fidiv
imul
loope
hlt
sahf
cmc
or
(bad)
out
mov
int
ret
in
push
jge
(bad)
fcomi
ret
rcl
pop
mov
mul
call
sbb
pop
test
push
cmp
lds
adc
cmc
fwait
and
dec
jo
push
jbe
sub
cmp
sti
sar
test
fcmove
loope
and
(bad)
jmp
xor
js
nop
jns
jecxz
bnd
movs
add
mov
fisttp
ins
or
add
add
add
add
or
cmp
adc
xabort
imul
test
or
loope
jl
(bad)
lea
cmp
pop
imul
addr16
or
lea
sti
push
not
add
iret
and
ret
mov
adc
add
fst
out
xchg
ficomp
mov
(bad)
mov
adc
jb
sub
jg
add
pop
mov
jp
popf
pop
mov
mov
cmp
ret
ins
xlat
pusha
imul
mov
mov
mov
pop
jl
push
arpl
loopne
jmp
and
in
sti
and
cmps
imul
fwait
sbb
add
jno
push
mov
xor
push
fild
(bad)
fstp
inc
adc
cld
cmc
shl
inc
cli
in
ret
and
lahf
xor
call
in
cmp
jecxz
cmps
ss
sbb
je
movs
nop
sub
push
shl
xor
in
jb
xchg
jmp
mov
xchg
fmul
rcr
nop
rcr
stos
pop
pop
add
nop
or
xlat
mov
in
push
pop
cdq
test
ins
mov
mov
mov
gs
sti
cmp
add
mov
movs
sub
les
ins
sbb
inc
aad
ret
xor
test
jnp
call
cdq
inc
xor
sub
add
jb
and
fdiv
out
movaps
add
inc
rcr
adc
dec
mov
nop
aam
add
xor
inc
push
mov
pop
icebp
aas
xchg
mov
jmp
push
std
inc
shl
lahf
cmc
shr
arpl
xor
inc
mov
cmp
shl
xchg
shr
popf
xchg
mov
add
add
add
xor
push
mov
jl
jecxz
lods
cmc
aas
shl
or
pop
rol
sbb
push
jns
test
push
or
cmp
jne
pop
pop
mov
in
add
mov
sub
(bad)
push
aas
xor
jns
sub
ss
sub
outs
or
cwde
rcl
push
adc
gs
and
push
inc
dec
cmp
xchg
push
leave
(bad)
outs
clc
outs
neg
dec
stos
sbb
ror
add
daa
retf
xor
dec
iret
adc
movs
in
dec
pop
mov
lods
in
lods
popf
ficom
dec
test
in
inc
bound
pop
popa
and
lahf
scas
aaa
jnp
jl
jne
outs
movs
mov
dec
movs
dec
es
test
popf
cdq
cli
das
dec
pop
push
rol
mov
sahf
popf
lahf
push
mov
fdiv
ret
jnp
pushf
inc
aam
lods
cmp
pop
inc
ins
inc
idiv
mov
or
(bad)
(bad)
sub
fimul
pop
inc
scas
push
or
mov
in
add
adc
enter
jl
cmc
mov
push
xchg
pop
jae
push
add
stos
leave
or
mov
pusha
mov
sti
add
mov
test
ins
out
into
fsub
ss
nop
jle
mov
sbb
xlat
mov
data16
pop
aam
sbb
stos
data16
pop
xchg
push
jmp
cmps
repz
mov
or
ret
mov
(bad)
xor
pop
inc
fidiv
sub
test
add
les
adc
arpl
mov
jb
ret
jmp
cmp
inc
mov
pop
cmp
xor
in
add
mov
ffreep
imul
sbb
jg
push
int3
loopne
xor
mov
call
(bad)
push
jle
dec
push
pop
jae
retf
jns
mov
dec
sbb
sub
add
or
and
adc
xchg
popa
test
xchg
mov
inc
push
bound
pop
(bad)
test
pop
add
inc
shr
push
pop
mov
inc
cmc
sbb
push
dec
cmp
push
cmps
retf
aam
cmp
data16
sbb
ds
ins
inc
add
retf
cwde
inc
test
mov
nop
test
mov
data16
push
lds
fld
mov
dec
pusha
call
stos
test
and
fild
or
cmp
call
xor
out
es
inc
xor
cmp
js
lock
(bad)
sbb
dec
mov
dec
hlt
(bad)
jmp
xor
js
repnz
add
sbb
cmp
aam
jecxz
mov
mov
sahf
push
pop
(bad)
cdq
retf
mov
hlt
stc
daa
jo
push
sbb
dec
mov
dec
add
add
sbb
fs
sbb
xchg
inc
mov
add
pushf
in
mov
mov
bound
xlat
dec
mov
cmp
fisubr
inc
jo
lods
cmps
cmps
and
push
lods
movs
pushf
into
xchg
icebp
xor
lahf
xchg
or
pop
or
scas
adc
add
add
mov
dec
push
push
(bad)
sub
push
pop
or
imul
mov
cmp
call
nop
xor
jo
dec
lahf
push
dec
pusha
adc
sub
pop
call
jl
(bad)
(bad)
out
sub
in
stos
mov
in
out
pushw
inc
xchg
vsqrtss
push
(bad)
sbb
fsubrp
shr
dec
or
push
sahf
cmp
jle
(bad)
ja
xor
call
mov
call
pop
pushf
jmp
add
add
mov
xchg
adc
jp
jle
repnz
(bad)
jbe
ins
xchg
adc
fbld
jns
(bad)
mov
mov
sti
mov
(bad)
or
mov
inc
pusha
imul
dec
or
lahf
scas
das
rcl
push
mov
(bad)
stc
push
and
add
pop
xchg
adc
(bad)
neg
jns
inc
jl
sub
sub
call
jns
pop
inc
icebp
sub
add
adc
jnp
adc
mov
fbld
lods
sbb
xor
mov
sar
pop
mov
pop
xor
add
jecxz
inc
adc
dec
ins
push
repz
and
dec
bound
mov
adc
xchg
inc
adc
fs
ss
fst
aas
sub
ret
jb
fadd
stos
push
(bad)
push
inc
adc
mov
sahf
cmps
daa
fwait
inc
sub
pop
ret
inc
fwait
sbb
cmps
repnz
loopne
add
stc
iret
lods
push
scas
and
pop
repnz
rcl
retf
lea
cmc
xlat
xchg
mov
sub
jge
pop
push
xchg
sub
push
pcmpeqb
sar
and
fadd
add
js
lahf
and
jb
inc
pop
adc
enter
push
cs
loope
clc
hlt
mov
(bad)
xchg
xchg
popa
mov
rol
hlt
jg
and
pop
mov
ret
mov
inc
repnz
jmp
jno
in
push
add
aad
ins
fs
push
js
xchg
sbb
cld
into
push
jae
mov
add
push
ret
data16
dec
es
sub
xor
inc
sti
cmp
sahf
mov
jle
cdq
mov
sub
clc
retf
add
jmp
dec
or
cmps
mov
in
push
aad
mov
rol
mov
sahf
minps
div
push
mov
mov
xor
mov
fldenv
push
jb
mov
or
sbb
cmp
(bad)
call
inc
fadd
std
and
ss
hlt
mov
mov
sbb
push
loopne
sbb
jp
inc
call
aad
retf
push
leave
add
aad
fwait
mov
push
sub
gs
arpl
pop
pop
dec
cwde
ins
push
sbb
inc
shld
jo
fnstcw
push
and
pop
fiadd
adc
or
add
fild
aam
xchg
dec
out
mov
repz
xchg
out
add
test
stc
hlt
push
sahf
and
popa
mov
and
jecxz
xchg
adc
push
sahf
into
out
mov
xlat
(bad)
int
sub
jg
js
fst
jne
mov
cld
adc
cmp
fcom
fwait
mov
cmps
inc
ret
je
pop
sbb
or
push
ss
push
jbe
pop
jmp
shr
dec
dec
cmp
stc
gs
inc
mov
xchg
adc
mov
ror
and
adc
int3
ret
ret
mov
dec
loope
mov
es
adc
retf
stc
jmp
mov
dec
mov
push
xchg
call
daa
fsub
pop
jge
mov
fstp
adc
(bad)
call
rol
push
cmps
mov
xchg
cmp
sub
mov
test
prefetcht0
mov
(bad)
jmp
inc
jo
push
mov
pop
test
or
sub
jno
add
ror
pop
(bad)
imul
retf
fs
mov
xor
pop
fstp
sbb
jge
movs
shl
aas
pusha
aam
mov
sti
sbb
loopne
xchg
jb
mov
movs
dec
mov
sub
fs
jle
std
daa
ja
xchg
dec
lock
les
push
enter
mov
and
(bad)
lahf
ins
cmp
cmp
adc
jnp
sbb
inc
mov
(bad)
shl
shl
shr
mov
xchg
pop
sub
in
inc
into
cmp
inc
sub
add
inc
inc
mov
xchg
add
push
cmp
mov
xor
adc
xor
jg
imul
sub
cld
enter
jnp
and
movs
bound
cmp
dec
(bad)
loop
jo
add
(bad)
pop
push
pop
or
jle
pop
mul
jge
mov
adc
test
ins
gs
jge
out
pop
fld
jmp
movups
dec
mov
nop
sbb
mov
add
mov
push
mov
imul
pusha
pop
push
jbe
sbb
cld
(bad)
hlt
gs
pushf
mov
(bad)
pop
xor
xor
adc
xchg
mov
aaa
aam
mov
xor
aad
xchg
jbe
push
in
shl
ja
test
inc
dec
jmp
(bad)
int3
xchg
fadd
dec
inc
inc
add
pop
aas
mov
sbb
out
adc
xchg
std
pop
idiv
popa
imul
push
xor
sub
push
push
dec
pushf
int3
(bad)
aaa
pop
and
inc
push
clc
xchg
popf
stos
mov
outs
dec
fs
in
add
add
or
das
mov
shl
and
leave
nop
add
jmp
sub
jmp
mov
mov
lds
cli
and
lods
nop
cmp
dec
dec
dec
stc
sub
xchg
neg
pop
loop
xchg
pop
xchg
and
push
jmp
cld
test
out
stos
add
imul
fdivr
push
cld
out
fucom
push
fs
std
xor
outs
or
fcmovnbe
inc
fdiv
pop
xor
pusha
stos
pop
pop
xor
imul
push
xor
xor
fisubr
xchg
dec
dec
fxam
es
push
mov
xchg
pushf
add
pop
jecxz
addr16
pop
out
mov
jmp
add
cmp
xchg
mov
add
adc
movs
jecxz
add
inc
jnp
add
adc
enter
ds
push
inc
aam
loopne
dec
mov
jle
adc
sbb
push
sti
loope
pop
aas
jae
pop
rcl
pop
je
mov
inc
pushf
shr
repnz
pop
push
inc
lock
cmp
jmp
mov
adc
(bad)
or
mov
inc
pop
cmc
pushf
sub
rcl
mov
cmps
fdiv
out
ret
addr16
daa
adc
pop
jge
lea
adc
mov
cs
test
je
push
add
sbb
xchg
addr16
sbb
pop
push
pop
xor
arpl
mov
mov
sbb
lahf
xchg
lahf
or
in
mov
inc
nop
scas
or
movs
mov
imul
sub
adc
adc
cld
mov
mov
xchg
add
xchg
push
inc
(bad)
cmc
push
fwait
inc
and
fiadd
(bad)
adc
mov
cmp
mov
rcr
rol
rcl
inc
add
push
inc
ins
jns
jmp
jg
cmc
xchg
add
jp
shr
and
pop
enter
lds
loop
aam
add
aaa
push
sub
sahf
or
push
cld
push
out
out
ret
in
es
mov
pusha
mov
in
mov
and
aad
mov
and
pop
inc
xchg
xchg
xor
scas
(bad)
call
cmp
inc
ret
mov
mov
add
sbb
xor
pop
ds
fdiv
cmp
and
mov
inc
inc
sti
pop
cdq
lea
pop
gs
test
test
sbb
sbb
push
mov
lahf
ins
call
cmp
fild
add
aad
mov
outs
retf
xor
not
in
ins
push
xchg
stc
(bad)
cmp
pop
fcomp
xchg
mov
aas
push
dec
xchg
cmc
not
pop
xor
pop
mov
outs
lock
cli
push
xchg
enter
test
(bad)
fldenv
(bad)
mov
mov
(bad)
inc
ret
xor
rcl
pop
int
jmp
mov
sbb
inc
(bad)
adc
dec
sbb
movs
sbb
popf
sbb
mov
leave
pop
mov
xor
pop
mov
rcl
mov
add
add
xor
bound
scas
retf
lods
and
in
inc
sbb
shl
mov
or
jmp
stos
shl
mov
or
xor
cmp
ins
or
in
arpl
or
test
out
repz
or
js
xchg
and
pop
or
mov
xchg
(bad)
test
es
stos
fcomi
and
adc
xlat
mov
call
pushf
jl
lahf
fcomp
into
push
enter
and
sti
pop
adc
inc
loop
(bad)
push
lods
pushf
cmp
dec
rol
out
test
jmp
push
sub
cmc
std
out
add
add
add
add
je
dec
pop
or
mov
xchg
in
inc
ja
mov
and
xor
test
adc
or
mov
sar
pop
std
dec
cs
xor
repz
sub
imul
jo
add
pop
dec
ror
mov
push
int
xor
xor
rcr
addr16
out
dec
adc
jbe
cdq
scas
jle
aaa
pop
sar
imul
cmp
hlt
cmps
icebp
fstp
mov
xor
jno
xor
push
xchg
stc
bound
push
jmp
jp
xchg
mov
add
(bad)
and
jl
mov
mov
adc
(bad)
enter
les
sbb
int3
mov
push
jae
xchg
jg
pop
mov
mov
ja
dec
outs
add
xchg
pop
pop
adc
sub
stos
enter
mov
mov
push
mov
outs
fldl2t
xlat
adc
lods
and
lahf
cli
out
push
shl
and
mov
add
fstp
fwait
into
add
or
dec
mov
or
dec
mov
cs
sbb
push
xor
or
or
popf
stos
xor
and
pop
(bad)
mov
jmp
sbb
sbb
dec
fiadd
jo
adc
sbb
lods
cmc
sub
xor
inc
mov
sub
jno
stc
mov
arpl
into
sbb
and
add
xchg
data16
loope
xchg
xor
push
push
es
cmp
or
retf
lods
neg
subps
cmps
jne
(bad)
(bad)
std
ret
jmp
arpl
ins
icebp
mov
ja
dec
inc
loope
jmp
pop
sbb
repnz
xor
inc
jge
sub
cli
mov
sub
dec
mov
dec
mov
cld
push
xor
sub
in
das
inc
(bad)
repnz
xchg
(bad)
nop
out
out
jmp
ret
sub
add
add
mov
(bad)
stos
pop
and
in
ja
mov
mov
repz
xchg
rcr
jmp
jo
lods
int
mov
nop
jne
cld
inc
iret
or
mov
je
xor
xchg
aaa
cmp
and
jnp
mov
push
retf
nop
ja
(bad)
out
dec
sub
sar
rcr
loopne
dec
xor
test
fst
fnstcw
loope
mov
js
xor
popf
shl
add
add
adc
gs
sbb
push
sub
jmp
and
arpl
pushf
sbb
cmps
clc
jle
dec
xor
mov
leave
mov
imul
imul
fisubr
dec
mov
sub
cmp
mov
(bad)
retf
add
add
add
xor
add
cmp
sti
sbb
es
xchg
jae
cmps
xchg
dec
mov
idiv
enter
push
mov
sti
mov
scas
add
xlat
out
push
loop
push
sub
ins
or
das
les
sub
lods
aam
call
into
mov
sbb
add
and
rcl
(bad)
cwde
mov
into
shl
mov
aaa
int3
dec
addr16
dec
mov
daa
sti
mov
mov
and
mov
data16
inc
or
or
inc
stos
mov
mov
push
stos
stos
out
sahf
jg
pop
sub
xor
pop
cmps
inc
adc
xor
cdq
adc
dec
dec
repz
sub
mov
es
xchg
loope
adc
push
jb
ret
xor
cmp
and
and
cmp
pop
cmps
jmp
aaa
int3
out
fmul
mov
lods
xor
lock
aad
sbb
mov
dec
inc
in
ins
push
stos
les
dec
mov
mov
lods
and
cmp
repz
inc
inc
push
mov
adc
jnp
push
lods
pop
icebp
cmp
cmp
push
and
dec
ss
xor
test
repz
jg
push
mov
mov
fwait
inc
jmp
aaa
cmp
or
push
lods
mov
jbe
stos
cld
rcl
pop
jecxz
outs
jl
in
jo
arpl
imul
mov
mov
mov
pop
or
ins
test
mov
shl
ins
lahf
std
inc
(bad)
cmc
xor
xchg
dec
and
test
js
in
jns
dec
sbb
pushf
mov
dec
mov
add
add
jl
les
sbb
or
push
(bad)
xchg
xor
adc
sbb
std
fmul
imul
jmp
jecxz
sub
xchg
fisttp
add
fcom
sbb
jl
dec
push
dec
out
movs
loop
gs
dec
inc
cmp
out
xor
pop
xchg
fstp
std
push
sbb
xchg
xchg
xlat
shl
neg
add
sahf
ds
xchg
xor
xor
fdiv
mov
mov
jge
mov
pop
mov
cmps
mov
clc
inc
push
jge
enter
pop
cmp
adc
and
cmp
(bad)
les
iret
js
sbb
push
adc
sahf
jns
add
test
mov
xchg
(bad)
cmp
add
in
pusha
js
sbb
fisttp
mov
sbb
cmp
div
mov
out
xchg
xchg
sub
adc
xor
jne
mov
mov
jno
add
mov
loop
lds
mov
mov
mov
ror
mov
add
pop
retf
add
push
cmp
xor
repnz
and
dec
cld
je
dec
cwde
pop
adc
fmul
xchg
into
add
ficomp
jecxz
pop
mov
dec
mov
mov
es
xor
mov
je
jg
addr16
hlt
addr16
data16
fdiv
or
rol
pop
xor
inc
retf
add
xor
int
mov
and
mov
dec
stos
out
adc
nop
sub
leave
jo
adc
icebp
retf
pop
inc
sub
cld
sar
xchg
cmp
in
mov
adc
pop
adc
lds
push
pusha
mov
adc
sahf
outs
inc
outs
xchg
inc
or
sti
push
sub
push
iret
sti
jp
xor
xchg
int3
out
and
push
and
outs
aam
push
dec
int3
lods
jmp
cld
(bad)
les
enter
cmps
adc
bound
in
jo
ret
inc
jmp
jne
pop
mov
adc
dec
iret
popf
inc
or
pop
push
adc
adc
cmps
movs
or
jg
in
shr
push
adc
sub
jg
lahf
cdq
movs
imul
mov
in
and
pop
mov
cmc
scas
mov
das
push
push
and
stos
push
sti
rcr
add
imul
push
(bad)
sbb
sbb
mov
test
ins
cmp
sub
or
jbe
(bad)
loop
mov
(bad)
gs
sahf
pop
xor
retf
push
xadd
aam
push
jmp
jmp
xor
cmp
inc
call
sub
mov
dec
test
mov
xor
and
(bad)
pushf
mov
cld
dec
div
shr
stc
fcomp
add
jo
inc
or
outs
push
adc
adc
xchg
xchg
and
jg
sbb
pop
dec
mov
fsubr
jae
xchg
xchg
jo
mov
and
mov
sub
push
ins
test
popf
mov
cdq
rol
loopne
sti
inc
jge
jb
inc
in
das
aam
and
aas
push
adc
xchg
pop
ror
and
repz
mov
cmps
sbb
dec
imul
and
xor
ss
ret
imul
sub
movs
(bad)
or
mov
and
(bad)
jecxz
into
cmp
cmp
lea
cmp
sahf
mov
gs
dec
cs
stos
add
add
add
lods
daa
inc
mov
cmps
mov
stos
add
leave
clc
in
xor
fdiv
repnz
pusha
or
movs
mov
mov
push
fisttp
outs
idiv
mov
xchg
pop
mov
mov
lds
add
push
cmp
push
movs
pop
push
cmp
nop
nop
jl
mov
into
shl
loope
mov
add
(bad)
(bad)
clc
repz
call
fadd
outs
mov
ds
stos
sub
jae
xchg
outs
repz
test
dec
mov
jo
test
mov
js
mov
or
cld
jae
shl
pop
ret
cmc
jl
stos
rcr
je
or
jle
mov
repz
cli
and
(bad)
jecxz
fbld
and
or
xchg
sti
sub
fistp
cmps
scas
test
mov
sar
sahf
leave
jecxz
push
es
xor
or
fisub
nop
add
in
fist
add
movs
fild
mov
pop
xor
sahf
in
add
rol
mov
xor
das
hlt
push
mov
stos
into
and
fcom
cdq
lods
enter
mov
out
imul
ror
dec
cmps
xchg
js
mov
xchg
repnz
jne
inc
push
xor
or
fsubr
xchg
mov
push
pop
dec
ins
xchg
fwait
mov
add
add
add
popa
pop
jns
pop
mov
and
inc
dec
sub
dec
inc
fs
jmp
fmul
imul
ret
xor
xchg
out
pop
popf
sti
in
cdq
xor
jmp
loop
fst
xor
adc
test
cs
rol
jecxz
mov
gs
sub
add
cmps
movs
xor
inc
(bad)
push
out
fwait
pusha
add
push
cmp
enter
or
std
inc
jecxz
repz
push
or
iret
sbb
in
aas
repz
sti
jmp
mov
ret
mov
or
adc
adc
ds
pop
loope
ror
xlat
inc
rcr
push
and
stos
cmp
loop
mov
push
repnz
(bad)
(bad)
int
add
in
pop
loopne
test
cmp
inc
ins
cmp
and
bnd
lock
sbb
sub
jae
dec
mov
bswap
cmp
out
mov
xchg
test
mov
jmp
cwde
pop
push
push
and
std
mov
mov
mov
jl
call
add
pop
add
aam
in
mov
cmp
pop
test
xchg
jbe
sahf
cmp
enter
sub
popf
sbb
mov
in
aas
xchg
or
lods
cmp
data16
jno
jb
lds
push
mov
int3
sbb
inc
out
call
in
mov
and
aam
pop
ret
rcl
xchg
mov
cmp
pop
push
call
retf
xor
cmp
xchg
repnz
inc
cmps
sti
ss
dec
fdiv
ret
test
push
out
test
(bad)
jmp
push
imul
cmp
cli
mov
xchg
push
sub
mov
inc
jno
dec
imul
(bad)
cmc
sbb
out
test
pushf
cmc
mov
lods
(bad)
outs
sar
loop
adc
add
push
loopne
sbb
push
ds
shl
outs
and
sbb
cmp
arpl
sti
xlat
and
add
dec
pop
xchg
ror
cli
fdiv
mov
cmp
cs
jbe
add
dec
cmp
aas
pop
adc
dec
jbe
add
xor
push
push
cmp
es
dec
jo
pop
je
push
adc
scas
cmp
ret
mov
push
jns
xchg
(bad)
jo
mov
shl
lock
sti
ret
xchg
mov
mov
repz
mov
inc
cdq
ficomp
inc
ret
stc
jmp
add
rol
ret
movs
fstp
push
mov
xchg
or
leave
cmp
pop
or
ds
push
movs
mov
sub
add
into
pop
mov
pop
pop
fist
hlt
ins
shr
sti
or
shl
adc
pop
fwait
neg
sbb
add
jno
xchg
xchg
or
cmp
mov
mov
(bad)
ds
jmp
ins
inc
add
jecxz
xor
mov
out
xchg
and
movs
(bad)
mov
fistp
or
aaa
fstp
jae
mov
or
out
in
pop
nop
dec
test
popf
repz
mov
fs
js
int3
push
pop
cwde
xchg
(bad)
or
scas
inc
xchg
dec
sbb
inc
cmps
stos
sar
add
add
add
call
leave
(bad)
sbb
lahf
mov
inc
mov
call
shl
jne
mov
aaa
cdq
inc
inc
stos
sar
out
push
aaa
mov
sub
jb
xor
lods
mov
inc
mov
nop
jecxz
in
jl
cmp
iret
push
dec
sbb
in
dec
leave
dec
or
add
add
hlt
inc
or
and
fild
ds
or
lds
or
sub
cld
push
dec
cmp
cmps
mov
xchg
(bad)
cmp
push
and
cmp
loope
xchg
mov
sbb
je
cdq
cmp
test
iret
ret
mov
shr
movs
mov
mov
mov
fmul
bound
cmp
dec
jl
adc
push
sub
xchg
enter
xchg
mov
in
pop
pushf
inc
dec
pop
inc
out
ror
mov
mov
loopne
into
outs
jle
outs
(bad)
out
aam
mov
out
fimul
das
shr
sti
push
sub
jecxz
sbb
push
sub
sbb
dec
ins
mov
push
add
jl
(bad)
std
jecxz
sbb
pop
cmp
sbb
push
das
rcr
dec
shl
aas
adc
push
push
push
(bad)
mov
in
mov
cmp
jg
inc
shr
pop
inc
jl
mov
clc
shl
xchg
cdq
stc
dec
out
lea
ret
adc
mov
mov
cmps
in
clc
or
sbb
dec
mov
push
mov
push
(bad)
bound
push
mov
iret
mov
xor
jb
inc
ss
fadd
adc
dec
push
cmp
mov
in
sub
mov
retf
loope
sbb
cmp
leave
sub
inc
mov
add
movs
or
aam
mov
jb
inc
push
mov
inc
ficomp
xchg
rol
jbe
fld
pop
or
ret
ins
lock
les
sub
sub
sub
jp
jp
and
dec
inc
mov
push
(bad)
pop
and
fwait
xor
or
cld
test
call
add
add
add
mov
sbb
fidiv
cdq
retw
add
icebp
cmp
psubb
dec
ret
lock
(bad)
into
(bad)
mov
retf
mov
out
jmp
enter
mov
pushf
sti
jbe
mov
pushf
arpl
lea
stos
mov
jno
inc
nop
popa
ror
retf
mov
add
xor
cmp
lds
push
sub
aad
push
dec
imul
stos
xchg
cdq
xchg
ret
push
sbb
aam
push
in
add
add
jbe
jmp
xor
xchg
mov
dec
cmp
in
fdivr
xchg
sbb
jg
dec
or
mov
cmp
pop
push
int3
(bad)
jns
clc
dec
fsub
push
pop
cmps
mov
ss
aam
lods
xchg
aaa
mov
add
and
or
loop
sahf
mov
aad
pushf
rol
into
sub
pop
aaa
daa
cmp
int
iret
dec
jnp
inc
or
mov
xor
cmp
add
loopne
pop
sbb
add
mov
loop
mov
sti
call
push
sub
test
or
mov
mov
pop
push
cwde
repz
and
retf
xchg
adc
loop
into
dec
call
jbe
sub
fisttp
xchg
sbb
int3
fldl2e
shr
and
inc
test
out
mov
xchg
jg
push
pop
jnp
push
push
test
ja
imul
mov
lea
jl
test
(bad)
push
ins
sbb
ds
add
int
jle
sbb
iret
and
test
les
iret
inc
jnp
(bad)
hlt
mov
adc
pop
dec
cmc
jno
(bad)
and
mov
outs
sahf
rcl
bound
test
inc
pop
pop
push
fistp
jge
jae
fwait
into
ret
and
cwde
dec
dec
mov
push
push
ret
pop
jnp
inc
adc
stc
push
push
cmp
mov
arpl
in
bound
add
xchg
jmp
xor
aam
push
icebp
push
adc
dec
test
pushf
sub
mul
scas
dec
arpl
imul
mov
xchg
retf
fdivr
loopne
mov
dec
cld
xchg
std
mov
cmps
xchg
aas
mov
bound
dec
das
mov
mov
add
and
dec
lds
cs
jge
nop
movs
(bad)
shl
data16
jns
inc
xchg
mov
xchg
sbb
mov
ins
xchg
add
push
sub
dec
int3
loopne
inc
in
int
and
addr16
jl
jns
aad
sbb
xchg
dec
mov
fucomp
jge
int3
add
sbb
add
jae
xor
cmps
fdiv
mov
mov
les
bound
and
push
dec
lds
std
jge
sub
imul
test
mov
mov
daa
push
ja
xlat
pop
jnp
sub
in
aas
scas
push
dec
iret
out
out
das
push
enter
sub
call
in
mov
mov
inc
or
jge
loopne
aam
xor
cmp
inc
push
pusha
cmp
and
jnp
mov
cmp
jp
sar
inc
icebp
call
in
cld
bound
aas
pop
xchg
leave
mov
jge
out
test
and
cmp
adc
repnz
add
jge
mov
outs
(bad)
mov
ja
pop
sbb
mov
jnp
mov
dec
sbb
daa
or
pop
into
mov
inc
ret
in
cmp
stos
xchg
mov
and
inc
ror
and
xor
lock
pop
cmp
lock
(bad)
sbb
jnp
cmps
xor
cmps
push
inc
dec
cmp
xchg
inc
push
data16
add
in
bound
loopne
imul
sbb
idiv
and
push
mov
cmp
push
daa
loop
sub
pop
jnp
push
push
pop
(bad)
adc
dec
xlat
shl
inc
in
cwde
(bad)
call
loopne
or
adc
mov
jge
and
shl
and
js
push
or
js
xchg
sub
inc
ds
add
or
cmc
(bad)
or
daa
sbb
daa
in
jb
push
cli
inc
in
cli
daa
dec
add
add
add
cdq
rcr
(bad)
cmp
loopne
fisubr
in
cmp
inc
ret
div
and
xlat
mov
dec
ret
mov
inc
sbb
fwait
loopne
(bad)
aam
cmp
mov
pop
dec
outs
mov
and
jp
cmp
fist
retf
and
add
cmp
xlat
cmp
arpl
je
sub
inc
stos
outs
mov
sub
jno
add
add
popa
bound
push
mov
adc
aaa
sbb
jns
mov
loopne
xchg
and
jne
inc
pop
jns
scas
fmul
push
shl
int
mov
push
ins
shl
dec
inc
imul
clc
clc
into
xchg
xchg
popa
shl
shl
movs
(bad)
in
sub
scas
stc
stos
dec
pusha
stc
pop
mul
pushf
or
inc
mov
push
and
sbb
cmp
cmps
inc
mov
add
inc
fstp
sub
add
das
push
(bad)
ss
dec
sub
test
je
xor
daa
mov
xor
dec
jecxz
jle
cs
mov
icebp
and
jge
faddp
sbb
and
js
mov
cmp
jbe
sub
xchg
xchg
(bad)
pop
dec
in
xlat
sbb
sbb
cmp
mov
(bad)
shl
nop
dec
dec
ins
adc
sub
cmp
mov
jmp
cmp
int
mov
call
jnp
push
scas
xchg
push
or
in
jmp
inc
icebp
clc
add
sub
stc
add
call
shl
ja
jo
ds
ss
in
scas
pusha
mov
aaa
mov
mov
test
loop
and
dec
mov
jnp
pop
outs
stos
jl
jl
dec
sub
push
fist
test
inc
(bad)
pop
addr16
bound
push
pop
jne
mov
dec
adc
mov
(bad)
jge
xor
adc
ret
dec
movs
fcmovb
mov
mov
(bad)
mov
test
inc
jbe
dec
lods
inc
mov
fwait
inc
pop
push
jl
cdq
xchg
out
jbe
and
enter
shr
sbb
push
dec
sbb
aad
test
xor
and
loopne
aad
push
bound
arpl
js
xor
(bad)
push
xchg
imul
loopne
pop
pop
xor
adc
cli
and
jmp
es
aad
sbb
push
jnp
mov
and
mov
shl
inc
jge
popa
int
xchg
sbb
bound
cmp
mov
stos
dec
add
add
mov
arpl
inc
xor
sbb
xor
cmp
xchg
jmp
and
rol
ins
mov
xor
jmp
shr
fnstenv
sbb
fcomp
je
mov
les
dec
inc
arpl
dec
inc
retf
and
cli
jp
xchg
in
lods
int3
cmp
inc
push
or
sbb
jns
jae
jnp
push
sahf
lods
mov
mov
bound
push
adc
dec
scas
xor
sahf
xchg
mov
cmc
jne
jl
and
add
scas
das
ins
xchg
jge
xchg
jp
push
fild
dec
and
push
jge
xchg
inc
mov
cmp
mov
(bad)
xchg
fnstenv
ja
jle
pop
and
popa
inc
xchg
test
call
icebp
js
dec
mov
outs
inc
jg
xchg
xor
sub
nop
and
xchg
and
mov
cmp
sub
cs
cmp
inc
jno
dec
jp
xor
inc
cdq
das
mov
jno
add
mov
jnp
dec
mov
jb
xor
or
pop
mov
jnp
or
fwait
jne
push
cmp
pop
fsub
jecxz
mov
ret
mov
cmp
pop
fistp
out
fwait
sti
mov
jae
dec
jl
xor
mov
inc
pushf
pop
mov
je
test
test
jge
dec
mov
je
test
pushf
das
jge
sub
dec
jle
test
outs
popf
jnp
cmp
or
jnp
push
sahf
popa
mov
jg
xchg
inc
sahf
inc
mov
add
arpl
mov
mov
xchg
mov
add
dec
fs
push
bound
jp
xchg
imul
push
xchg
stos
stos
inc
xchg
mov
xchg
push
jp
jb
and
jns
xchg
sub
pop
stos
xor
and
mov
xchg
data16
inc
cmp
push
(bad)
mov
scas
mov
stos
add
or
pusha
jne
dec
scas
dec
ins
lods
jl
xchg
call
fnstcw
ins
xor
je
jl
push
cmp
pop
push
jae
mov
cdq
mov
ins
fdivr
bound
push
scas
scas
fdiv
dec
mov
ins
sub
xchg
push
lea
scas
and
sbb
scas
xchg
ja
jle
pop
ret
xlat
xchg
div
ja
jle
pop
add
add
mov
cmp
arpl
xchg
std
mov
outs
jge
jns
or
mov
inc
cwde
pop
mov
jno
add
loop
mov
jno
adc
jb
cmp
mov
jnp
adc
fwait
mov
jl
or
mov
inc
fwait
xor
pop
bound
jle
dec
mov
aad
and
pop
mov
jg
xchg
and
inc
adc
mov
jmp
mov
mov
mov
pop
dec
sbb
add
mov
shl
cmc
adc
xor
add
sbb
jnp
jae
dec
mov
dec
mov
bound
push
pop
stos
jo
xchg
pop
lods
bound
ficomp
jp
and
or
lods
fistp
stos
or
jp
push
sub
dec
xchg
gs
dec
imul
xchg
sar
bound
push
mov
shl
scas
shr
adc
lods
xor
xor
cmp
mov
js
test
jne
pop
xchg
nop
push
int
in
dec
scas
mov
xchg
sub
lods
push
jbe
jge
mov
xor
mov
ins
das
dec
jbe
jge
pop
push
scas
imul
pop
mov
mov
outs
daa
jle
xchg
push
jge
jns
lock
jg
and
dec
jg
xchg
ss
cmp
fistp
jnp
loop
push
mov
jo
dec
jns
sub
inc
cdq
fidiv
mov
mov
xor
mov
jl
mov
bound
test
ret
pushf
in
cld
je
pop
jge
test
adc
dec
xchg
stos
mov
add
add
sbb
jnp
sbb
js
dec
and
mov
mov
mov
jmp
pop
add
sbb
(bad)
out
and
jnp
jae
jp
and
mov
lods
lods
ds
lock
je
lods
add
dec
je
jnp
push
xor
sub
push
int3
lods
out
adc
fisubr
sbb
jno
movs
jge
sub
sbb
stos
jg
mov
pop
scas
pop
inc
xchg
gs
outs
sar
bound
pop
sub
add
mov
jo
mov
or
lea
mov
dec
sahf
addr16
imul
xchg
enter
mov
mov
push
dec
adc
cmp
inc
adc
push
push
stos
je
scas
dec
lods
xchg
push
jp
xchg
xchg
jle
push
push
jnp
xchg
jne
or
scas
ins
ja
jle
pop
pop
jnp
movs
xchg
leave
mov
outs
inc
dec
js
pop
xchg
call
movs
adc
call
jnp
xor
cwde
xor
in
arpl
jnp
fcomp
and
sbb
add
xchg
bound
fnstcw
dec
mov
cmp
mov
inc
and
push
xchg
lahf
cmp
sub
push
and
push
cmp
test
stos
cmp
jp
and
(bad)
push
xchg
cmp
and
and
imul
imul
jnp
push
lods
lods
retf
dec
scas
in
imul
xchg
aaa
jge
pop
lods
xchg
jne
jge
and
push
jge
xchg
aas
mov
cmp
or
jnp
stc
xchg
add
pop
js
ficom
js
mov
dec
jb
lahf
and
stos
or
mov
jns
or
cwde
std
mov
jo
dec
jns
and
mov
sbb
mov
jno
cli
xchg
pusha
dec
mov
jb
xor
jge
dec
mov
jl
and
mov
jp
sar
test
mov
xchg
dec
jle
test
pop
loop
add
popf
(bad)
out
jne
test
bound
dec
jg
dec
in
cmp
mov
jg
xchg
jbe
xchg
xchg
mov
cmp
mov
js
mov
mov
mov
cmp
dec
inc
inc
mov
jae
call
nop
jnp
push
or
scas
and
or
fwait
xchg
cmps
jge
popf
scas
(bad)
jge
and
mov
mov
jle
push
jae
jp
data16
pop
push
mov
js
pop
in
xor
mov
mov
add
jo
dec
jp
sub
add
add
add
pop
retf
mov
push
cdq
push
mov
push
enter
mov
dec
fnstenv
or
mov
jl
add
test
inc
pushf
lock
je
test
jp
mov
sahf
xchg
and
sar
add
js
and
bound
inc
mov
add
add
cmp
mov
fcmovnb
mov
cmp
cli
xchg
sub
jmp
out
add
repz
mov
xor
jnp
push
xchg
scas
inc
ins
cmps
dec
jne
jl
push
jp
xchg
les
mov
dec
xor
(bad)
call
jnp
jae
jp
push
scas
stos
push
xchg
(bad)
lods
mov
fs
in
call
add
dec
pop
jnp
ss
xor
sbb
jl
fistp
jl
hlt
inc
(bad)
jecxz
aam
xchg
cmp
gs
mov
hlt
dec
mov
xchg
xchg
mov
ins
fstp
add
mov
mov
into
jbe
jge
push
inc
and
mov
jp
cld
ins
pop
jge
push
jge
push
inc
scas
pop
ja
xor
imul
dec
jnp
inc
jno
mov
jnp
inc
jno
mov
mov
bound
xor
mov
bound
xor
jp
inc
jno
mov
jnp
inc
jno
mov
jnp
push
bound
xor
mov
gs
jg
ss
sub
sub
dec
inc
bound
xchg
or
add
add
add
ret
add
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
