pop
fild
mov
sub
imul
loopne
dec
ds
dec
es
xlat
xor
cmp
mov
add
pop
ss
outs
push
xchg
sub
imul
mov
imul
loopne
arpl
push
imul
add
arpl
loopne
arpl
push
enter
pop
test
seto
imul
mov
adc
push
mov
ds
pop
imul
sub
nop
inc
arpl
sub
pop
xor
inc
out
fcom
fisub
cmp
xchg
xor
loopne
addr16
out
sub
imul
pop
cwde
jbe
sbb
imul
mov
outs
mov
jnp
sub
enter
imul
mov
arpl
imul
cmp
pop
sbb
dec
loop
jnp
sub
loopne
in
enter
imul
stos
pop
outs
mov
stos
pop
outs
pusha
cmp
(bad)
and
outs
mov
imul
into
xchg
push
or
sub
push
ss
in
addr16
scas
inc
inc
addr16
mov
inc
loopne
leave
call
(bad)
gs
leave
xchg
pushf
stos
ds
sbb
addr16
mov
out
sbb
xchg
loopne
pop
stos
hlt
push
arpl
je
pop
xchg
dec
xchg
scas
adc
imul
pop
fs
cmp
imul
add
test
jnp
sub
add
xchg
pop
outs
mov
pop
data16
sbb
aaa
imul
fisttp
leave
pop
xor
scas
je
test
arpl
pop
es
pop
outs
ficom
fld
push
outs
ss
xor
repz
call
pop
outs
inc
ins
cmps
outs
imul
fmulp
xor
leave
mov
aaa
imul
fnstsw
outs
arpl
cli
add
je
ja
sub
aas
push
loop
outs
imul
fidivr
cmp
jp
data16
dec
push
jmp
adc
fld
imul
inc
fild
je
ja
imul
pop
xchg
adc
aaa
scas
je
loopne
adc
aas
scas
je
xchg
dec
and
outs
ss
xchg
and
cmp
dec
dec
imul
cmc
bsf
imul
ss
mov
sbb
popa
aam
adc
jge
adc
jne
pop
push
ja
imul
ficomp
fsub
into
inc
out
icebp
call
cs
fstp
jne
mov
xchg
dec
pop
ds
push
outs
mov
xchg
dec
cmp
mov
call
cmp
xchg
ss
jmp
fnsave
jmp
xchg
lods
xchg
leave
cmp
inc
aaa
imul
repnz
pop
sbb
pop
fild
fisttp
cwde
cmps
or
outs
mov
push
push
sbb
pop
test
outs
ror
mov
mov
pushf
and
dec
rol
or
add
cs
icebp
pop
out
icebp
out
xchg
data16
xchg
add
pop
or
outs
pop
imul
imul
cmp
outs
ss
data16
pop
test
sbb
xchg
push
pop
imul
es
push
fmulp
arpl
loop
nop
inc
xchg
neg
dec
imul
rcr
pop
test
sbb
rcr
arpl
cs
out
pop
fild
imul
mov
out
pop
out
icebp
out
xchg
add
outs
xor
jne
leave
push
adc
dec
imul
lock
jmp
test
push
or
leave
push
seto
test
xchg
push
fisubr
outs
ss
jmp
test
ins
sahf
test
cmp
outs
imul
dec
cmp
push
icebp
cs
push
ret
cmp
jae
daa
daa
ss
dec
scas
pop
outs
mov
jmp
mov
jecxz
fld
cs
cs
hlt
inc
fucom
arpl
pop
outs
pop
xchg
hlt
sub
loopne
addr16
sbb
aad
push
btc
jne
out
in
(bad)
xchg
pop
out
or
sbb
push
fcomp
es
pop
fwait
mov
lahf
push
mov
rcl
adc
imul
into
loop
lahf
mov
call
aaa
imul
lods
ins
ret
leave
cs
jae
xchg
scas
mov
loopne
mov
push
outs
inc
xchg
es
fs
adc
xchg
loopne
leave
xchg
pop
outs
frstor
sub
loop
pop
hlt
loop
xchg
imul
pop
outs
or
imul
push
lea
xor
(bad)
outs
out
loop
nop
xor
fld
out
loop
in
arpl
das
mov
push
outs
inc
xchg
es
aaa
imul
xor
rol
in
arpl
push
imul
jno
bound
adc
mov
lods
fwait
push
imul
ss
outs
ss
loopne
xor
mov
xor
lods
arpl
cli
ds
fsubr
retf
popa
and
test
jecxz
rol
outs
mov
es
addr16
cwde
fsubr
add
loop
ss
jecxz
pop
jo
rcl
loopne
xchg
mov
ds
jae
fldcw
imul
mov
dec
cmp
cmp
xor
lods
pop
xchg
lahf
add
jp
cs
jbe
pop
pop
rol
outs
mov
es
addr16
cwde
fsubr
add
loop
ss
jecxz
pop
jo
rcl
xchg
sbb
repnz
in
arpl
imul
sahf
sbb
cmp
xor
test
out
cmp
loopne
jg
or
dec
push
sahf
sub
cdq
inc
outs
ss
sbb
repnz
out
add
jae
adc
xor
xchg
pop
cdq
xchg
and
mov
sbb
pop
fild
fnstsw
push
jmp
xchg
xchg
lods
aaa
test
fbstp
push
loop
data16
mov
push
sub
ss
mov
scas
pop
outs
leave
push
adc
mov
pop
outs
pusha
sub
xchg
xchg
sub
loopne
arpl
ja
lds
pop
cmp
or
nop
leave
cmp
fidiv
nop
leave
call
cmps
or
imul
shl
pop
xchg
mov
mov
dec
cmp
inc
arpl
loop
inc
into
loop
nop
inc
arpl
sub
pop
out
add
add
imul
pop
add
retf
sbb
shr
ss
add
xor
xchg
mov
dec
in
arpl
out
push
out
call
pop
outs
inc
pusha
mov
aas
mov
loopne
imul
sbb
cs
dec
addr16
lods
xchg
imul
cmp
xchg
sbb
outs
imul
add
cmp
sbb
aam
cs
outs
mov
pop
out
inc
out
icebp
call
pop
xchg
sbb
outs
mov
push
in
sub
imul
imul
aas
mov
repz
pop
cmp
push
pusha
add
pushf
je
jne
pop
imul
inc
imul
cmc
pop
fbld
sub
push
sub
(bad)
call
xlat
pushf
je
xchg
imul
jg
outs
imul
cmc
jmp
mul
pusha
stos
stos
xchg
sub
(bad)
fistp
xor
das
frstor
pop
xchg
xchg
test
sbb
xchg
inc
pop
div
xor
test
out
shr
outs
aaa
imul
inc
imul
pusha
cmp
inc
pop
in
xor
out
jmp
leave
imul
xor
cmp
repnz
outs
xchg
pop
fld
cmp
lds
imul
imul
mov
sbb
imul
sub
sbb
imul
xchg
dec
addr16
sbb
imul
out
pushf
cld
out
mov
xchg
leave
loop
out
lds
push
outs
ss
nop
imul
xchg
push
(bad)
push
add
pop
sub
out
(bad)
nop
enter
outs
nop
loopne
mov
adc
xchg
pop
outs
inc
addr16
dec
stos
fcomp
cmp
imul
mov
cs
in
outs
dec
in
xchg
dec
jae
cs
dec
lahf
pop
pusha
mov
push
outs
ss
call
xchg
pop
out
or
fld
ss
xor
out
pop
(bad)
out
xchg
sbb
repnz
in
lahf
es
scas
pop
outs
inc
ins
pushf
dec
mov
pop
outs
ss
je
xchg
sub
loop
pop
out
loop
out
fnstsw
outs
add
xchg
sbb
outs
outs
sar
ss
mov
xchg
xchg
lods
push
lods
pop
(bad)
xor
xchg
sub
loop
xchg
out
lahf
data16
(bad)
mov
(bad)
rcl
sbb
imul
mov
outs
dec
in
xchg
dec
dec
mov
jb
outs
ss
fistp
push
add
xchg
sub
in
fwait
dec
in
xchg
or
imul
mov
pushf
cld
out
mov
fsubr
dec
xchg
pop
sbb
out
mov
xchg
loopne
xchg
imul
leave
cld
mov
imul
dec
imul
neg
or
ss
loopne
ss
arpl
out
ret
nop
enter
mov
xchg
imul
pop
adc
stos
fcomp
data16
nop
pusha
arpl
sub
loop
cwde
aad
call
loopne
fwait
ucomiss
pusha
mov
loopne
leave
call
pop
outs
imul
pop
cmp
cmp
outs
jbe
es
push
out
pop
jmp
xchg
mov
outs
ss
clc
out
xchg
xchg
test
cs
out
or
pusha
mov
pop
outs
ss
les
and
outs
mov
imul
shl
pop
fwait
mov
fwait
ss
call
xchg
sub
loope
ins
aaa
push
sub
ds
sub
xor
jp
ss
addr16
add
jno
imul
repnz
test
outs
mov
xchg
stos
imul
jecxz
mov
cs
icebp
call
dec
into
(bad)
fistp
xchg
add
sub
into
pop
out
icebp
call
les
imul
in
pop
sbb
push
sbb
addr16
adc
push
push
push
sbb
push
xchg
pop
out
icebp
add
outs
ss
and
fs
xchg
pop
in
dec
xchg
pop
sbb
push
pop
pop
mov
ss
ss
imul
into
pushf
clc
out
xchg
outs
pop
outs
jne
pop
imul
imul
lds
fidiv
outs
ss
fwait
pop
imul
pop
sbb
outs
mov
call
and
push
out
hlt
add
loop
fwait
dec
cmp
inc
lahf
not
jmp
sub
loopne
xchg
cs
aas
pop
imul
inc
lahf
idiv
inc
imul
inc
lahf
neg
push
loop
xlat
stos
imul
cmp
lea
fdiv
pop
out
inc
(bad)
out
lods
call
addr16
sub
imul
mov
xchg
dec
xchg
loopne
outs
(bad)
fbld
cmp
outs
sar
mov
xchg
xchg
lods
mov
inc
sub
imul
dec
imul
inc
sbb
cli
xchg
loope
data16
stos
leave
xchg
loopne
fisub
(bad)
push
sbb
imul
stc
jmp
out
pushf
cld
out
fneni(8087
xchg
leave
loop
loop
mov
xchg
leave
cmp
aas
mov
loop
xchg
aas
stos
push
mov
and
imul
add
jmp
daa
nop
and
outs
imul
mov
pop
outs
ss
mov
loopne
leave
cmp
aas
mov
loop
xchg
aas
stos
adc
inc
arpl
outs
pop
cmp
scas
leave
xchg
loopne
rcl
pop
out
sub
ror
xchg
loope
mov
test
jmp
scas
sub
das
imul
mov
loopne
leave
cmp
aas
mov
loop
xchg
aas
stos
adc
adc
outs
push
call
loopne
cmp
jmp
imul
ss
gs
aaa
add
jmp
movs
cdq
leave
xchg
pushf
stos
cmp
fmul
mov
xchg
sahf
test
fcomp
push
leave
xchg
pop
outs
cmp
xchg
imul
mov
loopne
leave
sub
mov
loopne
leave
cmp
xchg
pop
xchg
sbb
outs
mov
adc
out
mov
enter
xor
scas
cs
ror
ds
mov
xchg
xchg
lods
mov
outs
stos
je
pop
pusha
mov
sbb
pop
ss
pop
outs
pop
cmp
cdq
leave
xchg
pushf
stos
cmp
nop
imul
push
xchg
les
pop
loop
xchg
loopne
leave
cmp
jbe
xchg
loopne
repnz
pop
sbb
call
imul
out
push
out
add
pop
ficomp
scas
cs
leave
xchg
pushf
stos
cmp
nop
imul
push
mov
sub
loop
xchg
loopne
leave
cmp
mov
repnz
pop
sbb
call
imul
aaa
add
popf
je
ja
xchg
pop
xchg
scas
adc
xchg
pop
outs
inc
dec
jne
pop
(bad)
in
sub
leave
xchg
loopne
fsubp
jmp
xchg
loopne
ss
adc
xchg
leave
push
outs
add
pop
clc
cdq
pop
outs
pop
cmp
call
loopne
imul
push
mov
sub
loop
xchg
loopne
leave
cmp
and
xchg
loopne
repnz
pop
sbb
call
imul
lds
jp
add
pop
mov
scas
cs
cmp
nop
imul
out
mov
enter
imul
(bad)
add
ja
not
repnz
pop
sbb
call
imul
aaa
add
xchg
pop
xchg
lahf
loopne
mov
adc
xchg
pop
outs
inc
das
jne
pop
(bad)
in
sub
leave
xchg
loopne
(bad)
jmp
leave
call
loopne
ss
add
je
xchg
ror
xchg
loope
popa
add
cmp
nop
imul
out
mov
enter
imul
aad
call
call
loopne
pop
push
jmp
sub
pop
data16
fimul
jmp
leave
call
loopne
ss
cmp
je
ja
xchg
pop
xchg
loopne
mov
adc
xchg
pop
outs
inc
popa
fsubr
call
outs
mov
retf
imul
push
or
imul
sub
leave
xchg
inc
test
lods
sbb
repnz
outs
xchg
aas
scas
sub
je
sahf
test
ins
pop
outs
lock
loop
enter
pop
outs
pop
outs
mov
test
mov
mov
lods
mov
xchg
dec
in
mov
xchg
leave
cmp
jae
push
scas
cmp
loopne
imul
data16
mov
xchg
loopne
mov
loop
xchg
mov
cmp
imul
cmp
shr
imul
loop
inc
out
loop
in
xchg
mov
pushf
ror
fs
shl
imul
sbb
outs
ror
nop
mov
retf
loopne
leave
jl
test
ret
loopne
leave
push
outs
ss
dec
xchg
loopne
mov
xchg
dec
in
mov
xchg
leave
cmp
out
pop
(bad)
out
out
mov
pop
shr
sub
leave
xchg
loopne
mov
imul
ss
xchg
aas
stos
adc
jae
pop
outs
mov
xchg
dec
in
mov
xchg
push
leave
cld
iret
outs
imul
aad
call
call
call
and
leave
cmp
data16
nop
popa
push
xchg
sub
(bad)
fbld
mov
fdivr
pusha
imul
adc
call
out
ret
nop
enter
push
xchg
dec
push
mov
push
out
call
call
dec
adc
out
mov
xchg
loopne
mov
xchg
dec
in
xchg
dec
dec
mov
fs
sbb
outs
ss
loopne
leave
fsubp
nop
enter
xchg
pop
loop
xchg
loopne
leave
cmp
movs
pop
imul
repnz
retf
loope
adc
imul
out
jno
ss
inc
out
loop
nop
add
xchg
leave
xchg
loopne
pop
push
in
sub
leave
xchg
loopne
fidiv
fstp
mov
mov
test
test
sti
loopne
leave
imul
xchg
leave
loop
test
retf
loopne
leave
cmp
nop
mov
(bad)
rcl
sbb
imul
mov
xchg
pushf
and
clc
(bad)
xor
outs
(bad)
rcr
xchg
loope
popa
loopne
nop
popa
inc
xchg
sub
loop
outs
out
loop
in
dec
xchg
pop
pusha
mov
sbb
(bad)
leave
xchg
loopne
mov
test
jmp
mov
je
xchg
jmp
daa
nop
and
outs
imul
mov
sbb
jle
imul
mov
loopne
leave
cmp
data16
nop
popa
pop
xchg
sub
(bad)
fbld
xchg
push
outs
ss
loopne
fbstp
pop
xchg
loop
inc
out
loop
outs
out
loop
or
out
addr16
enter
mov
xchg
xchg
jmp
xchg
nop
enter
adc
xchg
leave
call
cmps
imul
pop
pushf
xchg
out
pop
leave
xchg
loopne
fidivr
mov
cwde
mov
xchg
leave
cmp
push
leave
cmp
out
xchg
xchg
mov
mov
lods
mov
jecxz
cmp
jp
imul
out
jecxz
xchg
loopne
pop
repz
sub
leave
xchg
loopne
mov
imul
ss
xchg
mov
cwde
jns
imul
cmp
or
imul
fs
data16
imul
mov
loopne
leave
cmp
leave
fsubrp
nop
enter
mov
loopne
nop
popa
dec
xchg
sub
loop
outs
out
loop
in
dec
xchg
pop
pusha
mov
pop
outs
ss
loope
ds
sbb
xchg
leave
imul
imul
outs
mov
xchg
dec
nop
sbb
xchg
leave
and
leave
xchg
pushf
stos
ds
sub
xchg
xchg
mov
mov
lods
mov
jbe
retf
xchg
pop
pusha
mov
pop
outs
lods
call
imul
out
pop
(bad)
out
add
nop
add
xchg
leave
out
xchg
leave
xchg
loopne
pop
ss
sub
leave
xchg
loopne
(bad)
jae
ss
loop
enter
leave
sub
xchg
mov
xchg
loopne
push
xchg
loop
mov
xchg
dec
in
xchg
loopne
leave
out
push
xchg
loope
xor
imul
loop
add
leave
xchg
loopne
pop
xor
sub
leave
xchg
loopne
fidivr
jae
ss
cs
test
sar
pop
pop
in
jecxz
xchg
leave
cmp
mov
loopne
leave
loopne
retf
leave
xchg
loopne
mov
loopne
leave
fs
jge
xchg
loopne
mov
loopne
leave
cmp
out
pushf
cld
out
out
xchg
leave
loop
in
retf
loopne
leave
cmp
mov
loopne
leave
loopne
mov
xchg
loopne
mov
loopne
leave
fs
mov
xchg
loopne
mov
push
lock
loop
enter
cmc
push
outs
ss
xchg
xchg
loopne
mov
call
loopne
inc
addr16
jmp
das
nop
pusha
arpl
outs
mov
retf
nop
enter
cmp
call
pop
loopne
ds
mov
xchg
loopne
mov
loopne
mov
xchg
loopne
mov
loop
inc
out
loop
in
mov
xchg
leave
cmp
mov
inc
cmps
cmc
ds
mov
out
sub
pop
lods
jnp
outs
push
retf
imul
dec
pop
outs
imul
push
imul
bound
shl
loope
enter
icebp
cs
imul
dec
(bad)
xchg
xchg
aaa
xchg
xchg
sbb
add
ss
pop
imul
repnz
imul
xchg
loopne
or
fld
frstor
xchg
adc
loop
outs
enter
frstor
loopne
leave
sub
jae
push
outs
imul
lods
pop
mov
pop
jb
mov
pushf
clc
out
mov
adc
loop
mov
neg
outs
lods
pop
xchg
leave
xchg
loopne
imul
pop
outs
ss
(bad)
lods
xor
cmp
loop
pop
into
loop
pop
mov
pop
outs
pop
imul
(bad)
cmp
add
add
imul
imul
imul
dec
in
arpl
out
pushf
(bad)
out
xchg
xchg
scas
leave
outs
stos
je
xchg
mov
dec
sbb
jbe
pop
out
pushf
(bad)
out
xchg
xchg
scas
pop
stos
mov
int3
push
les
xchg
arpl
outs
(bad)
loop
test
xchg
outs
lods
sbb
lahf
sub
imul
pop
out
sub
mov
ss
outs
aas
stos
adc
movs
imul
outs
ss
out
imul
adc
mov
les
jbe
push
ss
dec
scas
pop
outs
pop
stos
lahf
push
push
mov
jbe
pop
lahf
aaa
outs
daa
shl
cmp
pop
out
cmp
cs
imul
imul
xor
mov
ss
bound
push
push
cdq
sub
test
xchg
sbb
sub
xlat
rcr
sub
loop
xchg
imul
shl
arpl
pop
nop
xor
fld
cdq
sub
jg
ins
cs
fistp
sbb
ss
push
mov
jmp
ja
sub
jg
sub
iret
jbe
test
loopne
xor
cs
imul
test
pop
out
fisttp
adc
sub
imul
loopne
leave
popf
sbb
sub
addr16
ins
cs
fist
not
inc
imul
cmp
cs
int
fistp
fbstp
sbb
sub
outs
inc
ins
cs
fistp
not
imul
cs
push
(bad)
pop
outs
xor
pop
outs
mov
stos
test
xchg
loopne
xor
cs
xor
pop
out
cmp
cs
(bad)
ja
sbb
adc
xchg
loopne
xor
fld
cdq
sub
out
fcomip
arpl
jmp
ja
sub
das
fbld
outs
ss
ja
push
push
les
mov
das
outs
ss
(bad)
out
(bad)
xchg
scas
mov
pop
shl
xchg
imul
xchg
xchg
ins
aaa
outs
daa
shl
mov
jb
pop
outs
aaa
outs
pop
iret
jbe
imul
fcmovb
pop
outs
aaa
outs
daa
shl
(bad)
imul
xor
fld
cdq
sub
ins
(bad)
pop
outs
ss
xor
cs
pop
pop
test
bound
les
push
loop
outs
(bad)
loop
out
sub
scas
sub
data16
aas
stos
arpl
mov
adc
xor
outs
or
pop
outs
ss
pop
push
stc
imul
dec
push
loopne
mov
fldcw
cdq
sub
das
fst
push
scas
pop
outs
fstp
sbb
mov
xor
xor
cs
pop
(bad)
loop
out
cmp
cs
jl
stos
test
imul
sti
jae
outs
ror
nop
xor
fld
cdq
sub
das
cmp
aad
imul
inc
ficomp
mov
stos
adc
xor
scas
sub
imul
inc
ficomp
mov
sbb
jae
adc
jae
and
mov
pop
outs
ss
pushf
jbe
sbb
ss
sub
push
mov
pop
outs
inc
pusha
mov
outs
xor
das
ss
pop
ins
inc
jle
adc
imul
push
in
imul
pop
outs
xor
push
out
dec
cdq
sbb
sbb
adc
sub
out
mov
push
outs
ss
(bad)
out
xchg
in
leave
sti
ret
adc
xor
jmp
cs
out
dec
cdq
sbb
cmp
bound
arpl
xchg
dec
adc
jbe
pop
test
loop
sub
imul
lahf
sub
nop
xor
das
ss
jbe
es
retf
pop
outs
inc
mov
cmps
ror
in
adc
das
ss
mov
addr16
out
jle
fdiv
push
retf
pop
outs
xchg
push
mov
ss
sbb
sub
sbb
repnz
out
inc
(bad)
int3
xor
pop
outs
pop
stos
pop
test
loop
outs
(bad)
loop
xor
fdivr
popa
aam
push
sub
xchg
xchg
pop
xchg
xchg
test
outs
stos
je
ja
cld
sub
xchg
or
outs
mov
sub
cmp
cmps
jle
ss
imul
pop
inc
aad
ss
pop
int3
les
pop
sub
sub
push
imul
ret
outs
pop
and
sub
push
imul
push
les
mov
lods
ja
cld
sub
cmp
jmp
outs
ss
imul
ds
mov
cmp
cmps
push
movhlps
out
inc
(bad)
out
xchg
sbb
repnz
pop
mov
cs
leave
jle
fbstp
sub
jae
outs
ss
push
xchg
loop
ret
xchg
sub
lods
pop
fwait
jbe
pop
outs
mov
out
mov
test
or
imul
dec
scas
pop
outs
mov
iret
outs
mov
cld
out
repz
lods
mov
retf
outs
icebp
cs
outs
imul
out
pop
outs
ror
test
mov
outs
imul
mov
adc
sub
xor
pop
outs
mov
out
push
ss
sub
ss
(bad)
pop
out
loop
loop
xlat
xchg
sbb
rcr
outs
ss
mov
imul
ss
mov
or
pop
ds
outs
ror
loop
test
add
add
xor
outs
ss
iret
xchg
push
mov
push
lea
pop
nop
xor
fld
inc
retf
jne
pop
imul
ins
loopne
rol
xchg
mov
mov
lods
leave
push
sti
xchg
or
outs
leave
outs
stos
je
xchg
sub
cmp
sbb
xchg
or
jae
hlt
mov
mov
xor
xor
test
out
call
jecxz
jg
and
jae
xchg
sub
loop
pop
push
sti
out
mov
sub
loopne
arpl
jnp
and
call
int
arpl
sbb
jae
dec
loop
or
xchg
jne
mov
xchg
loopne
ds
or
sub
in
lahf
hlt
popa
mov
jp
mov
xchg
(bad)
lods
arpl
cli
cmp
loop
outs
into
loop
nop
xor
fld
pop
xchg
loopne
les
mov
(bad)
outs
imul
ds
mov
cmp
sbb
loopne
arpl
outs
stos
je
cs
cmp
sbb
xchg
pop
outs
ss
sub
das
sub
xchg
pop
outs
ss
aaa
pusha
sub
ins
or
pusha
sub
ins
or
pusha
sub
imul
pop
outs
ss
gs
pop
in
jnp
sub
jecxz
push
lock
cmp
pop
nop
cmp
sbb
cmps
pop
outs
cmp
or
test
pop
outs
mov
jg
push
hlt
fs
call
or
test
pushf
test
push
fstp
pop
loop
in
fisubr
fnstenv
ins
and
push
add
pusha
mov
sub
aas
fdivp
inc
outs
ss
jnp
jg
mov
add
into
call
psrad
sbb
call
sbb
into
call
jmp
jae
xchg
sub
sbb
arpl
pop
outs
cmp
sub
add
jg
push
xor
imul
loopne
fistp
leave
xchg
sbb
repnz
out
or
sbb
out
mov
sbb
and
out
or
sbb
out
fisubr
push
xor
pop
mov
fs
sbb
mov
fs
jmp
imul
push
daa
push
sbb
imul
pop
outs
ss
push
xor
jp
into
and
xor
jmp
imul
imul
sbb
sub
sbb
outs
sbb
imul
inc
ins
and
sbb
xlat
nop
mov
js
outs
int3
call
push
mov
sbb
jae
xchg
sub
out
ins
xor
in
fisubr
cmp
loop
push
imul
mov
and
cmp
imul
call
sbb
push
xchg
xchg
mov
sbb
or
sbb
outs
adc
xor
push
inc
and
xor
outs
imul
xchg
ss
jg
aas
or
aaa
xchg
pushf
test
loop
jp
imul
jno
loopne
xor
pusha
mov
loop
leave
xor
xor
test
out
call
dec
nop
xor
fld
fnsave
nop
(bad)
or
data16
loopne
xor
jmp
and
xchg
sub
inc
imul
es
imul
lock
loopne
dec
scas
pop
outs
cmp
dec
jg
mov
into
jbe
cs
xchg
push
mov
add
xchg
inc
nop
xor
fld
sub
outs
imul
sbb
ss
aas
in
push
xchg
pop
test
loop
ins
jae
xchg
jnp
jecxz
imul
retf
pop
outs
ucomiss
sbb
xor
sub
pop
jo
loopne
out
xchg
xchg
popf
aaa
mov
mov
aaa
mov
pop
jno
loopne
fwait
mov
retf
pop
outs
mov
sbb
mov
mov
push
mov
jae
fldcw
adc
into
loop
nop
xor
fld
pop
xchg
xchg
cmp
outs
push
mov
jae
fldcw
loop
push
aaa
imul
gs
fimul
push
pop
outs
ficomp
jecxz
leave
call
inc
cmps
cmc
ds
mov
adc
imul
(bad)
xchg
leave
xchg
fldl2e
aad
loopne
ss
imul
imul
jmp
out
in
or
pop
in
xor
fld
aad
loopne
ss
push
pusha
sub
or
lahf
push
xor
shr
mov
cld
mov
xchg
pop
sbb
test
nop
mov
sbb
cli
sub
ins
inc
imul
pushf
fst
nop
leave
add
pusha
mov
sub
fiadd
mov
call
dec
ja
adc
mov
add
jno
adc
pop
test
sub
ret
fiadd
outs
ss
retf
call
jle
into
jbe
lahf
jmp
test
nop
pop
stos
add
or
movs
je
pop
pusha
mov
loopne
leave
lods
call
fisttp
scas
aam
pushf
push
and
das
imul
lods
outs
pop
outs
cmp
mov
imul
jmp
adc
sub
jmp
out
mov
imul
iret
xchg
loopne
mov
rcl
sub
in
mov
int3
scas
fnstsw
mov
loop
push
imul
out
jmp
leave
xchg
cs
fisttp
outs
imul
ficomp
fldlg2
shr
xor
stos
ror
test
nop
jno
fsubr
imul
stos
lahf
lock
leave
sbb
rcl
imul
xor
fld
fst
outs
ss
nop
ss
fiadd
mov
xchg
mul
xchg
loopne
repnz
sub
(bad)
fistp
push
call
loopne
mov
xchg
hlt
sub
test
sub
mov
sbb
out
leave
xchg
push
jno
loopne
xor
sbb
xor
loop
push
jnp
outs
mov
xchg
hlt
and
imul
inc
fucom
sbb
or
mov
lock
leave
imul
ss
jecxz
xchg
loopne
leave
xchg
pop
outs
pmaxsw
or
adc
imul
je
loopne
out
mov
nop
ficom
inc
outs
sbb
imul
mov
stos
std
ins
mov
sub
out
lahf
lock
leave
call
loopne
mov
xchg
fimul
fild
mov
push
xchg
mov
jle
mov
xchg
xchg
cli
ret
nop
test
sbb
movs
mov
sbb
nop
leave
jmp
xor
sbb
repnz
out
mov
push
pop
or
sub
imul
mov
push
pop
outs
ss
repz
adc
leave
xchg
xchg
jmp
xchg
sub
out
inc
nop
leave
loopne
iret
call
inc
nop
leave
push
rcl
xchg
loopne
mov
rcl
xchg
loopne
sub
call
faddp
mov
xchg
test
mov
rcl
xchg
loopne
jne
call
ffreep
nop
leave
push
mov
xchg
loopne
mov
push
pop
imul
push
add
in
ffreep
nop
leave
stos
cmc
arpl
xlat
jmp
addr16
pop
cmp
outs
leave
(bad)
mov
leave
xchg
hlt
hlt
leave
outs
stos
je
adc
mov
stos
std
ins
mov
xchg
xor
loop
loopne
mov
sub
pusha
cmp
or
fimul
push
retf
mov
xchg
ja
imul
fsubrp
inc
outs
ss
fucomip
xchg
loopne
mul
aaa
imul
dec
arpl
pusha
mov
push
outs
ss
fst
xchg
imul
cmp
bound
fs
push
aaa
imul
sub
out
jmp
leave
xchg
xchg
jnp
push
outs
ss
sbb
mov
xchg
fldl2e
xchg
mov
nop
ss
loopne
mov
xchg
xchg
lahf
jle
daa
outs
inc
inc
xchg
lahf
mov
sbb
jno
fwait
pushf
xchg
jg
lahf
mov
sbb
push
imul
fwait
pushf
xchg
jmp
outs
inc
bound
sti
xchg
sbb
repnz
pusha
cmp
mov
xchg
fimul
xchg
mov
nop
mov
mov
pusha
sub
imul
and
sbb
imul
mov
loopne
jb
sbb
mov
rcl
adc
mov
lock
leave
push
inc
(bad)
loope
out
sub
rcl
mov
nop
inc
sbb
aaa
fs
nop
test
fldcw
jmp
push
aaa
imul
ss
aaa
out
or
outs
imul
sub
and
imul
ss
or
or
outs
imul
cmp
and
imul
ss
sbb
frstor
rcl
jmp
addr16
pop
add
out
in
or
dec
nop
xor
mov
inc
xchg
loopne
mov
adc
mov
imul
xchg
pop
in
lahf
lock
leave
stos
std
ins
mov
stos
(bad)
ins
xor
jle
mov
xchg
xchg
imul
call
lahf
lock
leave
imul
ss
nop
xor
fld
leave
xchg
lahf
jmp
test
nop
pop
stos
add
or
movs
je
pop
pusha
mov
in
leave
xor
xor
test
out
call
dec
in
arpl
sub
push
add
xchg
xchg
jns
outs
lock
mov
adc
sub
ss
mov
push
out
xchg
xchg
adc
out
out
sub
(bad)
cmp
outs
(bad)
adc
out
idiv
sub
(bad)
xor
outs
(bad)
sub
loop
inc
hlt
loop
xchg
mov
js
cmp
lahf
sub
push
add
sub
outs
lods
pop
xchg
or
xor
push
pop
jp
push
sbb
jae
sbb
jmp
xchg
daa
sbb
out
jae
(bad)
dec
ss
iret
imul
imul
xor
push
pop
jp
fs
xchg
pop
inc
imul
jne
and
pop
fs
outs
imul
nop
push
in
xchg
xchg
lods
pop
test
test
in
aam
pushf
xchg
xor
adc
data16
pop
adc
jmp
xchg
aaa
fs
outs
neg
adc
(bad)
ins
pushf
xchg
xor
sbb
jae
sbb
jae
xchg
lods
pop
test
test
outs
imul
imul
xor
pop
xchg
xor
jb
sub
sbb
shr
inc
popa
jmp
imul
out
mov
out
cmp
pop
nop
leave
xchg
fldcw
into
imul
mov
xchg
and
imul
push
adc
ins
ins
mov
cmps
xchg
sub
pushf
jp
mov
xchg
adc
xor
imul
cs
cmp
pop
xchg
imul
dec
cmp
push
lea
(bad)
cwde
aad
pop
xchg
mov
imul
pop
imul
bound
out
call
and
push
out
icebp
adc
or
sbb
lods
pop
pop
aaa
imul
jns
loopne
dec
xchg
cwde
aad
pop
xchg
mov
mov
cmps
imul
pop
xchg
cmp
outs
pusha
cmp
mov
into
pushf
clc
out
xchg
rcl
or
outs
ss
arpl
push
mov
xchg
dec
xchg
xor
outs
mov
xchg
dec
xchg
imul
mov
(bad)
into
inc
out
icebp
pop
jmp
out
xor
cmps
cmc
ds
mov
jmp
jb
sahf
cmp
pop
outs
pop
imul
push
pop
add
imul
ds
mov
cmp
sbb
and
out
inc
out
icebp
add
pop
mov
pop
outs
pop
push
ja
imul
bound
out
call
pushf
adc
imul
cs
push
imul
pop
stos
hlt
or
imul
cmp
outs
mov
imul
shl
pop
fwait
mov
stos
(bad)
pop
sub
mov
jae
xchg
xchg
aaa
xchg
xchg
test
imul
cs
jae
hlt
imul
cmp
sbb
cmp
pop
cmp
lahf
dec
outs
ss
xchg
frstor
xchg
ror
push
loop
ds
lock
mov
sbb
imul
jmp
outs
add
add
imul
leave
push
pop
xchg
lods
xchg
xchg
pop
xchg
xchg
test
xchg
loopne
xor
test
sbb
cmp
jecxz
outs
ss
jae
xchg
scas
mov
loopne
mov
push
outs
inc
xchg
xchg
lods
pop
imul
inc
addr16
xchg
cmp
outs
pop
imul
pop
jae
sub
imul
fidiv
dec
outs
ss
aaa
imul
imul
dec
cmp
loop
pop
into
loop
xlat
push
add
outs
ror
add
imul
pop
imul
not
outs
ss
in
enter
pop
stos
hlt
pop
pop
imul
fistp
pop
outs
mov
lods
jne
mov
push
seto
dec
xchg
cmp
outs
pusha
add
imul
pop
stos
pop
xor
fdivr
mov
cmp
sbb
lods
pop
xchg
ds
jecxz
inc
imul
in
loopne
xchg
mov
ds
leave
sbb
sub
cmc
sub
adc
pop
jmp
leave
push
adc
ja
pop
outs
ficomp
dec
outs
add
arpl
in
bnd
mov
js
fnstenv
jne
pop
add
dec
outs
ss
inc
arpl
xchg
sub
loop
pop
hlt
loop
xchg
pop
xchg
hlt
fs
and
outs
fldcw
inc
pop
push
dec
arpl
aaa
popf
je
div
imul
repnz
ins
mov
dec
aas
gs
xchg
sbb
lods
pop
xchg
inc
or
pop
outs
ss
jp
mov
xchg
ja
les
pop
xchg
aas
pop
outs
outs
pop
loopne
and
cmp
les
pop
xchg
aas
pop
outs
mov
pop
sub
pushf
ins
xchg
imul
adc
dec
outs
xor
ins
mov
pushf
add
dec
cmp
shr
ss
mov
or
pop
in
push
xchg
in
push
sbb
push
(bad)
pop
loop
cdq
xchg
pop
test
push
mov
outs
ss
jg
push
sbb
icebp
cs
ja
loopne
addr16
pop
ins
mov
jmp
sub
pusha
sub
sahf
mov
add
xchg
imul
cs
test
add
push
adc
imul
adc
sub
inc
mov
test
fnstenv
adc
jb
out
in
div
sub
jmp
xchg
xor
sbb
pop
sbb
ror
out
pop
xchg
push
out
dec
xchg
pop
sbb
sar
and
imul
mov
loopne
arpl
fcomp
in
arpl
fsub
iret
push
test
outs
ss
aam
mov
aaa
cs
in
adc
and
pop
mov
jae
adc
jbe
xchg
cmp
fs
xor
pusha
cmp
push
sub
rcl
mov
loopne
arpl
fcomp
mov
cmp
inc
out
pop
mov
loop
pop
out
loop
xor
(bad)
lods
push
sti
(bad)
jmp
sub
dec
sti
cmps
sbb
mov
(bad)
jmp
sti
(bad)
inc
arpl
jmp
sti
(bad)
jmp
sti
(bad)
push
(bad)
jmp
sti
(bad)
inc
(bad)
jmp
sub
dec
sti
cmps
ja
daa
jae
mov
(bad)
jmp
sti
(bad)
inc
arpl
scas
xor
(bad)
dec
mov
jmp
sti
(bad)
call
(bad)
jmp
push
nop
cmc
or
or
imul
xor
push
push
pop
outs
cmps
inc
sqrtps
(bad)
in
sti
(bad)
jmp
sti
(bad)
in
arpl
jmp
outs
(bad)
jmp
sti
(bad)
adc
sti
(bad)
jmp
sti
(bad)
in
push
imul
cmps
sti
(bad)
push
cmps
sti
(bad)
jmp
xchg
loopne
sub
xor
in
outs
imul
pop
xchg
lds
pop
ja
daa
jae
push
sti
(bad)
jmp
sub
call
jmp
sti
(bad)
push
sti
imul
aaa
mov
ss
xchg
mov
sti
(bad)
call
stos
(bad)
jmp
sti
(bad)
jmp
(bad)
jmp
sti
(bad)
inc
pushf
(bad)
jmp
sti
(bad)
jmp
(bad)
jmp
in
inc
pop
(bad)
jmp
sti
(bad)
call
cdq
(bad)
jmp
sub
push
sti
imul
xchg
in
sub
cmps
sti
(bad)
call
stos
(bad)
jmp
sti
(bad)
jmp
(bad)
jmp
sti
(bad)
inc
pushf
(bad)
jmp
sti
(bad)
jmp
(bad)
jmp
daa
jae
pop
pop
(bad)
jmp
sti
(bad)
call
cdq
(bad)
jmp
sti
(bad)
call
and
retf
xchg
fsubr
jg
cmp
pop
arpl
pop
arpl
loop
outs
out
loop
pop
shl
inc
out
loop
or
cs
ss
imul
mov
cmp
push
rcl
leave
jmp
nop
ss
sbb
sbb
sub
imul
imul
cmp
out
inc
into
test
xchg
scas
mov
xchg
xchg
lods
mov
arpl
sbb
daa
loopne
addr16
fwait
pop
pusha
cmp
jnp
movs
mov
fs
outs
imul
cs
outs
(bad)
sub
fldenv
fs
out
jmp
add
sub
cmp
cmc
imul
sub
aas
mov
cmp
cmp
push
aas
ficomp
dec
outs
ss
inc
out
loop
add
data16
addr16
fwait
dec
xchg
pop
outs
mov
cmp
out
pushf
cld
out
xchg
or
cs
sub
adc
cmp
cmps
cmc
ds
mov
cmp
clc
arpl
pmaxsw
mov
outs
adc
imul
mov
mov
out
pop
mov
fucom
arpl
test
je
pop
sbb
pop
fild
mov
lods
xchg
sub
cmp
sbb
and
pushf
stos
ds
data16
xor
pop
pusha
adc
scas
shr
jnp
fcmovnbe
sub
call
out
or
push
lock
shr
pop
or
shr
or
idiv
jns
pop
add
out
push
pop
ins
jae
dec
xchg
scas
pop
into
cli
cmps
pop
outs
mov
jmp
out
push
retf
mov
mov
jecxz
xchg
cmps
shr
sti
sub
push
jae
ins
mov
mov
sub
fnstsw
xor
mov
sub
(bad)
push
out
call
(bad)
mov
jmp
sbb
imul
imul
test
std
jg
mov
pop
outs
mov
pop
outs
ss
jns
pop
out
mov
jns
imul
dec
mov
fmul
loop
pusha
cmp
shr
mov
sbb
repnz
pop
outs
and
retf
je
xchg
sub
add
jae
xchg
test
ret
mov
es
shl
out
pop
outs
ucomiss
sbb
je
xchg
sub
or
out
push
jmp
mov
out
imul
sbb
jae
ins
mov
mov
push
(bad)
cmps
pop
outs
cmp
dec
and
xchg
jnp
(bad)
shr
sti
sub
out
push
sahf
cdq
pop
sbb
outs
mov
cmps
pop
outs
cmp
dec
and
xchg
jnp
adc
ss
(bad)
sti
sub
out
push
lahf
adc
push
imul
pop
xchg
(bad)
ins
xor
div
retf
in
repnz
pop
imul
imul
imul
jbe
push
fimul
pop
mov
imul
idiv
leave
push
(bad)
cmp
push
sti
xchg
pop
outs
leave
push
sti
xchg
and
outs
add
ror
pop
imul
inc
xor
fdivr
mov
imul
rcr
cmc
push
outs
ss
stc
out
xchg
nop
leave
loop
out
xor
fld
ss
nop
(bad)
sub
out
fsubr
xor
add
or
ds
xchg
sbb
mov
call
xchg
cli
leave
xchg
loopne
mov
lods
fldcw
leave
push
inc
fiadd
push
outs
ss
and
out
pushf
cmc
scas
int3
ins
ficom
out
xchg
lods
mov
jle
mov
xchg
lahf
sub
push
sub
push
pop
sbb
lods
call
inc
push
outs
ss
cdq
hlt
push
popa
lock
sbb
mov
loopne
leave
pop
xchg
lahf
pop
fwait
xchg
test
leave
xchg
dec
pop
cmps
ficomp
pop
sahf
out
sub
retf
xchg
loopne
fisub
outs
add
add
add
pop
imul
mov
xchg
dec
xchg
out
jmp
leave
xchg
loopne
rcl
xchg
daa
pop
outs
mov
push
inc
imul
out
out
xchg
leave
xchg
dec
pop
aaa
jno
outs
pop
xchg
shr
retf
xchg
loopne
aaa
and
outs
leave
fsubrp
xchg
leave
xchg
div
jle
pop
nop
xor
fld
(bad)
sub
loop
xchg
loope
leave
cmp
stc
jp
pop
out
lock
outs
ss
xchg
retf
xchg
loopne
pop
mov
sub
enter
pop
imul
mov
push
outs
ss
dec
scas
pop
outs
pop
test
sub
je
xchg
jmp
pop
outs
ss
inc
imul
lds
pop
outs
ror
nop
mov
call
add
imul
repnz
inc
xor
fdivr
mov
cmp
mov
inc
enter
nop
cmp
imul
dec
scas
pop
outs
mov
cs
icebp
call
pop
xchg
data16
xchg
add
pop
or
outs
pop
imul
imul
cmp
outs
ss
bound
imul
mov
loop
in
(bad)
xchg
pop
out
or
sbb
loop
xchg
leave
push
out
pop
push
outs
leave
push
seto
not
inc
xchg
mul
sar
jmp
mov
out
fnstcw
outs
ss
push
fidiv
push
aas
leave
push
or
cmp
outs
ss
fdivr
mov
sbb
pop
imul
outs
xchg
sub
cmp
sbb
xchg
push
leave
push
pop
xchg
imul
mov
pop
test
jmp
imul
jg
aam
and
and
cwde
shl
pop
fwait
mov
js
outs
mov
cs
pop
imul
imul
add
leave
push
pop
xchg
and
outs
aas
stos
imul
hlt
push
leave
push
pop
nop
inc
jg
sbb
add
nop
inc
jnp
sbb
cmp
imul
inc
addr16
retf
es
fnstsw
retf
es
shl
pop
lahf
mov
xor
lods
arpl
cli
in
fidivr
cmp
jae
out
jae
dec
or
or
into
push
out
rcr
push
mov
lods
sbb
cs
pop
jb
ins
add
nop
inc
addr16
cmp
outs
cs
fstp
sub
cmp
add
nop
inc
jnp
sbb
or
addr16
retf
es
fnstsw
xchg
aaa
xchg
xchg
test
push
jecxz
imul
outs
cmp
pop
ja
xor
cli
in
fisub
cmp
loop
pop
into
loop
in
or
sub
(bad)
pop
outs
ss
cmp
pop
out
xchg
cmps
mov
pop
cwde
shl
pop
fwait
mov
sub
push
jae
push
pop
stos
pop
test
add
pop
icebp
imul
pop
imul
imul
sub
xchg
and
outs
xchg
imul
ss
outs
iret
loop
data16
sbb
or
into
inc
out
icebp
xchg
sub
sub
xchg
sub
outs
mov
mov
dec
(bad)
mov
repz
cs
mul
pop
addr16
imul
ins
imul
cmc
ds
mov
cmp
sbb
loopne
arpl
cs
sbb
add
jae
sbb
imul
or
pop
mov
loop
outs
out
cmp
sbb
and
imul
loopne
jg
outs
sbb
stc
push
imul
into
call
pop
outs
ss
push
or
lods
aas
mov
inc
mov
and
dec
xchg
xchg
jle
and
push
push
in
jnp
outs
rcr
imul
retf
xchg
mov
sub
and
and
imul
hlt
pop
fucom
arpl
xchg
lahf
aaa
mov
nop
inc
jnp
jns
imul
jae
xchg
lods
aaa
test
(bad)
outs
into
or
test
sub
loop
fwait
ror
out
fwait
xchg
sub
xor
xor
test
out
call
dec
in
arpl
sub
stos
xor
lahf
mov
sub
(bad)
pop
mov
cmps
pop
outs
ss
xchg
mov
lods
pop
cmp
xchg
jb
pop
out
lahf
sahf
add
add
outs
ss
jmp
imul
imul
sbb
outs
out
pop
pop
push
inc
xchg
ins
mov
pop
xchg
ss
cmp
bound
mov
imul
rcl
cmp
imul
jns
(bad)
ror
(bad)
mov
cmp
adc
cmp
xor
ficomp
fstp
xchg
pop
xchg
cmp
pop
xchg
or
loopne
lahf
mov
mov
or
loop
mov
jae
inc
xor
fdivr
mov
imul
outs
gs
pushf
dec
mov
iret
adc
ret
nop
ss
loopne
mov
lods
xchg
jmp
push
fimul
(bad)
test
mov
ins
cs
fistp
adc
ss
loopne
inc
js
xchg
das
pop
outs
pop
stos
div
cmp
pop
out
out
xchg
push
faddp
pop
outs
ss
mov
xchg
loopne
das
imul
ror
nop
enter
loop
loop
mov
xchg
je
out
xchg
loop
add
mov
mov
imul
dec
add
imul
mov
inc
or
imul
add
outs
ss
jne
pop
in
arpl
nop
mov
sub
xchg
mov
dec
nop
retf
xchg
push
xchg
fs
leave
xchg
pushf
stos
ds
arpl
pop
xchg
sub
pop
pop
js
pop
outs
leave
fsubp
nop
enter
jo
pop
in
repnz
stc
jo
pop
(bad)
cmp
pop
outs
scas
pushf
out
int3
outs
bound
in
sub
leave
xchg
loopne
sub
xchg
pop
outs
(bad)
popa
pop
outs
ss
adc
imul
rcl
xchg
leave
cmp
push
(bad)
sub
cmp
aaa
pop
outs
ss
lock
ss
jo
pop
(bad)
cmp
pop
outs
scas
pushf
out
int3
outs
bound
in
sub
leave
xchg
loopne
arpl
pop
pop
add
jecxz
enter
jo
pop
in
repnz
xchg
jae
pop
(bad)
cmp
pop
outs
scas
pushf
out
int3
outs
bound
in
sub
leave
xchg
loopne
sub
pop
out
lock
ss
imul
rcl
xchg
cs
outs
(bad)
ss
xchg
leave
xchg
loopne
pop
push
out
sub
jae
pop
in
bnd
sbb
add
jmp
ds
je
dec
xchg
scas
or
lock
outs
and
cmps
gs
rcl
pop
cs
pop
outs
leave
fsubp
nop
enter
jae
pop
in
repnz
(bad)
sub
nop
adc
sub
imul
imul
rcl
pop
cs
pop
outs
leave
fsubp
nop
enter
jae
pop
in
repnz
outs
pop
push
stos
xchg
leave
xchg
loopne
jg
pop
outs
mov
pop
xchg
cs
outs
(bad)
popa
pop
outs
ss
adc
imul
rcl
xchg
leave
cmp
push
(bad)
sub
cmp
fwait
pop
outs
ss
cs
mov
imul
fisubr
outs
scas
pushf
out
pop
xchg
out
sub
leave
xchg
loopne
fisub
call
push
pmulhuw
cmp
(bad)
sub
aas
faddp
pop
outs
ss
pop
outs
rcl
cwde
iret
call
not
push
imul
scas
pushf
out
mov
xchg
dec
pop
or
push
stos
es
addr16
pop
outs
(bad)
popa
pop
outs
ss
adc
imul
retf
nop
ficomp
pop
outs
ss
pop
outs
rcl
cwde
iret
call
ja
(bad)
sub
nop
adc
sub
imul
imul
rcl
pop
cs
pop
outs
leave
fsubp
nop
enter
jb
pop
in
repnz
outs
pop
cld
out
sub
mov
xchg
dec
pop
lods
fwait
pop
outs
add
imul
imul
rcl
pop
std
fwait
pop
outs
leave
fsubp
nop
enter
jne
pop
in
repnz
jmp
mul
jne
pop
(bad)
cmp
pop
outs
scas
pushf
out
int3
outs
bound
in
sub
leave
xchg
loopne
fwait
sub
outs
mov
pop
xchg
pop
outs
(bad)
popa
pop
outs
ss
adc
imul
rcl
xchg
leave
cmp
push
(bad)
sub
cmp
aas
pop
outs
ss
aas
outs
cmp
cwde
outs
imul
add
imul
ss
ss
inc
(bad)
loop
in
xchg
scas
loopne
leave
imul
mov
xchg
sbb
repnz
loop
or
xchg
ins
adc
or
outs
ss
stc
out
stos
loopne
leave
loop
in
mov
mov
pusha
adc
into
rol
cwde
iret
call
out
sub
pop
outs
mov
stos
js
std
scas
fsubr
cli
mov
test
cmp
shl
imul
popa
add
je
xchg
shl
imul
popa
xor
and
out
mov
pop
outs
ss
push
leave
xchg
loopne
sbb
ja
out
pop
outs
leave
xchg
dec
in
xchg
loopne
leave
cmp
(bad)
sub
aas
ficomp
pop
outs
ss
outs
ss
stc
out
stos
loopne
leave
loop
xchg
pop
outs
(bad)
popa
pop
outs
ss
adc
imul
retf
nop
fimul
pop
outs
ss
pop
outs
rcl
cwde
iret
call
ja
(bad)
sub
nop
adc
sub
ds
imul
rcl
pop
cs
pop
outs
leave
fsubp
nop
enter
je
pop
in
repnz
nop
mov
pop
outs
leave
out
jmp
enter
into
xchg
loope
pmaxsw
nop
retf
xchg
adc
mov
out
pause
retf
xchg
xchg
lahf
aaa
fwait
xchg
test
ss
jae
out
out
enter
aaa
imul
mov
nop
leave
imul
jle
pop
outs
mov
rcr
imul
imul
into
xchg
loope
cmp
dec
outs
imul
out
pause
retf
xchg
loopne
and
inc
lahf
je
xchg
jmp
je
imul
xchg
loopne
(bad)
xchg
pop
out
or
sbb
loop
or
xchg
xchg
lahf
ror
nop
mov
xchg
xchg
test
leave
xchg
dec
pusha
sub
xchg
jmp
lahf
loopne
leave
cmp
add
mov
loopne
leave
cmp
sbb
xchg
loopne
repnz
xchg
jmp
jmp
enter
cs
stos
lahf
leave
xchg
loopne
mov
loopne
leave
cmp
(bad)
sub
aas
fiadd
(bad)
fwait
cs
mov
imul
cmp
pop
outs
scas
pushf
out
int3
outs
bound
out
sub
leave
xchg
loopne
shr
pop
outs
mov
pop
xchg
popa
pop
outs
ss
adc
imul
retf
nop
fisubr
(bad)
pop
pop
outs
rcl
cwde
iret
call
ja
lds
pop
nop
adc
das
imul
loop
nop
sbb
push
ss
ret
nop
mov
xchg
dec
nop
adc
movs
rcl
into
xchg
loope
aas
stos
adc
mov
loopne
pop
push
out
sub
leave
xchg
loopne
jnp
pop
outs
mov
pop
xchg
sub
outs
(bad)
popa
pop
outs
ss
adc
imul
retf
nop
fiadd
outs
ss
push
lahf
mov
imul
cmp
pop
outs
scas
pushf
out
int3
outs
bound
out
sub
leave
xchg
loopne
retf
push
pop
outs
mov
pop
xchg
popa
pop
outs
ss
adc
imul
retf
nop
fidiv
(bad)
pop
out
sub
leave
xchg
loopne
repz
pop
outs
mov
pop
xlat
pop
fs
outs
ror
nop
mov
imul
cmp
pop
outs
scas
pushf
out
int3
outs
bound
and
sar
imul
retf
nop
popa
add
sahf
je
dec
xchg
pop
outs
mov
ja
(bad)
popa
pop
outs
ss
adc
imul
retf
nop
fidiv
and
call
and
rcl
cwde
iret
call
ja
(bad)
sub
nop
adc
push
imul
loop
stos
leave
xchg
loopne
lock
imul
rcl
pop
cs
pop
outs
leave
fsubp
nop
enter
or
in
repnz
lods
or
(bad)
cmp
pop
outs
scas
pushf
out
int3
outs
bound
and
sar
imul
retf
nop
popa
add
sahf
je
dec
xchg
scas
sysret
pop
fwait
pop
outs
leave
fsubp
nop
enter
or
in
repnz
test
rcl
cwde
iret
call
ja
lds
pop
nop
adc
push
imul
imul
retf
nop
fsubrp
and
call
and
rcl
cwde
iret
call
ja
lds
pop
nop
adc
push
imul
imul
retf
nop
fisub
and
call
outs
ss
stc
out
stos
loopne
leave
loop
xchg
push
pop
outs
(bad)
popa
pop
outs
ss
adc
imul
retf
nop
fidivr
outs
ss
rcl
xchg
loopne
leave
cmp
(bad)
sub
aas
fidivr
fstp
fbld
outs
rcl
cwde
iret
call
ja
lds
pop
nop
adc
push
imul
loop
pop
ss
pop
outs
leave
fsubp
nop
enter
or
in
repnz
sbb
imul
cmp
pop
outs
scas
pushf
out
int3
outs
bound
in
sub
leave
xchg
loopne
mov
scas
pop
xchg
pop
outs
pop
call
test
dec
pop
outs
popa
loopne
xchg
leave
xchg
loopne
pop
xor
ss
sub
imul
bnd
lahf
aaa
fwait
xchg
test
rcl
cwde
iret
call
ja
lds
pop
nop
adc
push
imul
imul
retf
nop
fiadd
outs
ss
and
rcl
cwde
iret
call
ja
lds
pop
nop
adc
push
imul
imul
mov
outs
(bad)
popa
pop
outs
ss
adc
imul
rcl
xchg
leave
cmp
push
(bad)
sub
cmp
ret
and
call
lock
leave
xchg
loopne
(bad)
push
pop
outs
mov
pop
add
xor
pop
add
ss
sbb
sub
imul
mov
lods
loopne
retf
nop
(bad)
outs
add
loop
lahf
loopne
leave
cmp
nop
adc
xchg
xchg
loopne
cmps
push
pop
outs
leave
fdivp
nop
retf
xchg
test
xchg
loopne
leave
or
imul
shl
call
cmp
ror
imul
mov
loopne
leave
adc
(bad)
pushf
stc
out
shl
xchg
leave
loop
xor
(bad)
lods
arpl
cli
out
fisub
outs
ss
mov
(bad)
pop
out
pushf
clc
out
xchg
loope
leave
loop
test
or
loop
pusha
sub
aas
pop
loopne
sub
enter
fisub
pop
pop
mov
pop
outs
mov
xchg
dec
pop
aaa
imul
fisubr
(bad)
cs
mov
sbb
xor
fldcw
pop
pop
aaa
imul
fimul
nop
leave
add
xor
pop
fld
pop
outs
mov
mov
into
loop
xor
test
out
jmp
pusha
cmp
and
jne
and
xchg
jmp
pushf
retf
loopne
ss
addr16
push
pusha
mov
loop
dec
xchg
loopne
jae
xchg
arpl
push
outs
ss
jecxz
xchg
loopne
icebp
cmc
pop
outs
ss
(bad)
out
call
inc
push
imul
sub
nop
mov
lods
dec
xchg
pop
outs
mov
xchg
loopne
xchg
xchg
loopne
ficomp
outs
ss
addr16
xchg
xchg
cmp
xchg
cmp
pop
out
repz
leave
cmp
pop
out
pop
loop
leave
xchg
stos
iret
retf
xchg
loopne
xor
outs
mov
xchg
loopne
scas
xchg
loopne
ficomp
dec
addr16
xchg
xchg
cmp
xchg
loop
xchg
loopne
mov
aas
sbb
out
xchg
loopne
xor
mov
nop
mov
sub
xchg
pop
pop
outs
mov
xchg
xchg
xchg
pop
xchg
xchg
test
jnp
outs
mov
xchg
dec
xchg
push
pop
outs
fimul
sub
cmp
and
xor
outs
mov
xchg
dec
pop
cdq
test
pop
fcomip
sub
ss
add
xchg
loopne
repnz
push
scas
inc
js
xchg
stos
not
fldenv
in
leave
xchg
xchg
xchg
pop
xchg
xchg
test
outs
push
outs
ss
xchg
enter
mov
xchg
dec
xchg
pop
outs
leave
fimul
fisub
ficom
fidivr
fiadd
ficom
out
fcmovne
xchg
loopne
fimul
fisttp
out
adc
js
xchg
pop
pop
outs
mov
lods
cs
fild
outs
add
jmp
mov
xchg
pop
xchg
xchg
test
out
stos
xchg
leave
xchg
dec
loop
xchg
loope
leave
cmp
in
imul
add
xchg
leave
xchg
xchg
xchg
pop
xchg
xchg
test
das
jne
mov
xchg
dec
xchg
push
pop
outs
mov
add
into
pop
out
icebp
lods
call
imul
mov
loope
leave
push
outs
ss
loopne
imul
pop
xchg
loopne
mov
xchg
loopne
ss
add
icebp
out
not
mov
lods
xchg
jmp
push
or
inc
loop
iret
loop
leave
cmp
nop
add
add
add
add
enter
pop
imul
add
data16
imul
add
nop
leave
add
and
outs
leave
fimul
jge
sub
pop
dec
test
mov
xchg
dec
xchg
scas
pop
mov
loop
leave
imul
mov
ja
imul
add
je
mul
imul
cmc
(bad)
fistp
sub
imul
add
out
mov
loop
leave
push
jmp
ins
cmps
aas
mov
xor
imul
sub
imul
mov
(bad)
xchg
leave
xchg
pop
sbb
pop
lahf
ss
add
pop
xor
outs
mov
xchg
dec
cmp
repz
add
pop
pop
test
mov
xchg
dec
xchg
loopne
mov
adc
xchg
pop
outs
inc
dec
pushf
retf
loopne
add
xchg
mul
nop
leave
imul
frstor
retf
loopne
ss
mov
loop
leave
cmp
push
add
out
pushf
clc
out
psrad
fidivr
sub
add
nop
or
nop
leave
cmp
aaa
xchg
xchg
test
fidivr
in
add
mul
nop
leave
xor
xor
test
cli
in
fidiv
cmp
inc
jnp
ret
cmp
loop
lahf
mov
imul
shl
pop
cmp
mov
imul
leave
push
adc
mov
xchg
xchg
xchg
ror
inc
jnp
in
imul
hlt
or
not
add
out
or
lock
push
imul
sub
jecxz
out
test
shr
cmp
aaa
aas
pop
imul
add
jmp
imul
bound
mov
xor
sbb
jae
dec
out
sub
cmps
pop
pop
outs
mov
adc
mov
sbb
fidivr
outs
ss
outs
into
loop
nop
inc
addr16
jae
xchg
sub
outs
pop
aas
ficom
push
cmp
pop
xchg
mov
fmul
mov
add
imul
loope
jb
sbb
ds
out
test
shl
jg
cmp
lods
pop
imul
jae
dec
add
arpl
pop
add
out
pop
outs
mov
xchg
xchg
test
xchg
dec
xchg
pop
outs
mov
sbb
imul
pop
pop
outs
mov
lods
xchg
sub
xor
xor
test
out
rcl
ss
pop
imul
pusha
cmp
xor
aam
cmp
pop
imul
shl
call
push
out
lods
call
imul
mov
call
test
xor
out
(bad)
fbld
stc
pop
outs
ss
inc
into
loop
cmp
(bad)
(bad)
or
repnz
scas
inc
jb
(bad)
mov
nop
leave
push
adc
mov
lods
cs
jbe
jg
mov
call
ss
mov
call
test
sub
neg
xor
(bad)
(bad)
popa
add
in
repnz
scas
inc
jb
(bad)
mov
nop
leave
push
adc
mov
lods
cs
jbe
adc
jmp
push
loop
xlat
push
dec
pop
outs
fimul
das
outs
cmp
mov
push
xchg
ss
mov
imul
shl
call
cmp
aaa
imul
pop
pop
pop
outs
mov
lods
xchg
mov
mov
push
outs
inc
xchg
xchg
test
arpl
xchg
shl
nop
mov
pop
pop
arpl
sbb
imul
loop
lahf
jmp
fwait
rcl
call
leave
xchg
dec
xchg
scas
pop
xchg
popa
pop
outs
ss
adc
add
pushf
je
xchg
jmp
movs
pop
imul
imul
mov
xchg
xchg
test
rcl
cwde
iret
call
idiv
add
(bad)
push
imul
scas
pushf
out
mov
xchg
dec
pop
outs
test
mov
xchg
dec
xchg
pop
outs
mov
ja
(bad)
popa
pop
outs
ss
adc
add
pushf
je
xchg
jmp
push
pop
imul
imul
sub
imul
loop
xchg
pop
pop
outs
(bad)
popa
pop
outs
ss
adc
add
pushf
je
xchg
jmp
adc
imul
imul
rcl
xchg
or
outs
ss
outs
(bad)
xchg
loopne
pop
xor
sub
(bad)
xchg
loopne
faddp
sub
ss
sysret
and
pop
outs
mov
xchg
dec
pop
pop
call
leave
xchg
dec
xchg
scas
or
lock
outs
cmp
cmps
gs
rcl
pop
cs
pop
outs
mov
xchg
dec
xchg
scas
pop
pop
cmp
pop
outs
mov
xchg
dec
xchg
pop
outs
mov
pop
out
lock
outs
cmp
imul
rcl
pop
cs
pop
outs
mov
xchg
dec
xchg
pop
outs
mov
pop
pop
xor
out
pop
(bad)
xchg
pop
pop
outs
mov
pop
xchg
pop
pop
outs
(bad)
popa
pop
outs
ss
adc
or
imul
rcl
nop
leave
cmp
aaa
fsubr
pop
loop
imul
leave
cmp
mov
bnd
inc
(bad)
sub
loop
imul
leave
cmp
mov
imul
repnz
cwde
shl
call
adc
imul
rcl
pop
cs
pop
outs
mov
xchg
dec
xchg
scas
pop
pop
jge
pop
outs
mov
xchg
dec
xchg
scas
pop
xchg
pop
outs
(bad)
popa
pop
outs
ss
adc
add
pushf
je
xchg
jmp
jo
imul
imul
add
pushf
stos
ds
inc
(bad)
loop
xchg
pop
pop
outs
(bad)
popa
pop
outs
ss
adc
add
pushf
je
xchg
jmp
xor
imul
out
pop
(bad)
pop
sbb
pop
(bad)
xchg
pop
pop
outs
mov
ja
(bad)
popa
pop
outs
ss
adc
add
pushf
je
xchg
jmp
hlt
pop
imul
imul
or
imul
loop
xchg
popa
pop
outs
ss
adc
add
pushf
je
xchg
jmp
mov
imul
imul
rcl
dec
imul
imul
leave
cmp
jns
sub
loop
imul
leave
cmp
cmp
imul
bnd
pop
pop
imul
cmp
pop
outs
scas
pushf
out
int3
outs
bound
jae
sub
(bad)
xchg
loopne
fidivr
outs
ss
call
mov
xchg
xchg
test
ss
outs
(bad)
xchg
loopne
ficomp
outs
ss
das
outs
rcl
cwde
iret
call
ja
lds
pop
loop
imul
leave
cmp
popa
pop
imul
repnz
movs
push
imul
cmp
pop
outs
scas
pushf
out
int3
outs
bound
shr
outs
sar
imul
ss
nop
popa
add
je
xchg
shl
mov
nop
popa
xor
es
xor
ss
nop
and
add
add
add
pop
imul
and
imul
mov
pushf
cmp
ss
nop
and
mov
xchg
dec
aas
mov
xchg
dec
nop
adc
inc
ss
retf
nop
ficomp
outs
ss
push
imul
mov
xchg
xchg
test
xor
out
outs
(bad)
loop
xor
(bad)
lods
arpl
cli
out
(bad)
sbb
cmp
mov
lea
aaa
inc
ss
mov
xchg
xchg
test
into
adc
push
out
pop
jmp
xchg
pop
outs
mov
imul
nop
leave
jmp
into
pushf
clc
out
jmp
nop
leave
loop
xchg
inc
pop
outs
adc
ss
lds
out
add
xchg
jge
imul
mov
loop
leave
add
add
retf
xchg
loopne
fidiv
xor
add
outs
imul
add
fcmovnu
sub
pop
xor
pop
out
fisubr
dec
aas
stos
adc
(bad)
pop
outs
push
outs
ss
xchg
enter
mov
xchg
dec
xchg
inc
pop
outs
mov
lods
loopne
xchg
xchg
loopne
gs
fcmovne
xchg
loopne
ficomp
(bad)
stos
adc
dec
imul
sub
enter
fisubr
xor
out
fcmovne
xchg
loopne
mov
xchg
dec
xchg
inc
pop
outs
fidiv
call
push
out
add
ss
xlat
enter
(bad)
xor
call
push
xchg
mov
xchg
loopne
jb
pop
outs
icebp
out
sti
xchg
leave
xchg
push
outs
imul
pop
add
icebp
out
not
mov
inc
sub
imul
sbb
leave
xchg
inc
loop
iret
loop
leave
cmp
nop
add
add
add
add
enter
pop
imul
sbb
fs
loope
imul
add
nop
leave
add
sahf
cwde
in
or
mov
jge
sub
pop
dec
test
mov
xchg
dec
xchg
pop
outs
mov
pop
mov
in
leave
imul
mov
mov
imul
add
je
imul
lock
fistp
sub
imul
sbb
adc
nop
leave
push
jmp
ins
cmps
aas
popf
adc
and
outs
pop
imul
ss
imul
pop
outs
push
outs
ss
dec
xchg
loopne
pusha
cmp
jne
pop
add
sub
retf
aas
fisub
nop
leave
call
loopne
ss
mov
mov
in
leave
cmp
pushf
loopne
mov
pop
data16
imul
ss
stos
sti
retf
xchg
loopne
mov
in
leave
cmp
test
imul
fnstcw
ss
repz
xchg
loopne
leave
fimul
mov
lock
cmp
nop
leave
add
imul
sub
xchg
add
je
dec
xchg
scas
or
push
ss
cmp
push
repz
xchg
loopne
fst
out
push
cmp
fimul
movs
loopne
loopne
repnz
jo
out
adc
cmp
cmp
nop
leave
xor
cmp
fsub
add
cmp
div
outs
lods
call
imul
icebp
rcr
ss
fcmovne
xchg
loopne
fidiv
xor
outs
into
loop
add
retf
xchg
loopne
sti
inc
pop
outs
leave
fidivr
rcr
pop
in
mul
nop
leave
sbb
into
push
out
xor
xor
test
cli
in
fisub
cmp
inc
mov
pushf
sbb
lock
inc
imul
fimul
pop
xchg
leave
push
adc
mov
imul
gs
imul
lock
pusha
xor
add
leave
push
adc
bound
cmp
ss
adc
xchg
dec
add
push
sub
add
xchg
inc
pop
outs
mov
imul
shl
pop
fwait
mov
sbb
imul
jecxz
pop
outs
pusha
and
imul
mov
xor
lods
arpl
cli
xlat
ss
outs
fimul
outs
ss
adc
mov
xchg
sbb
leave
push
pop
xchg
lods
push
cdq
inc
outs
cs
frstor
xchg
xchg
pop
xchg
xchg
test
xchg
adc
out
outs
(bad)
xchg
loopne
pusha
sub
jne
leave
push
adc
mov
out
nop
leave
cmp
sbb
and
xor
out
test
out
into
loop
add
pop
imul
lock
mov
cmp
sub
jecxz
out
pushf
clc
out
xchg
xchg
test
lods
pop
xchg
aaa
imul
mov
lods
adc
jae
dec
pop
xor
icebp
aas
fidivr
xor
ss
and
pop
outs
leave
pop
lahf
fidiv
fstp
imul
sub
dec
pop
leave
xchg
mov
inc
xor
ss
icebp
aas
pop
imul
imul
add
cs
js
outs
push
xchg
pop
xchg
cmp
pop
xchg
mov
adc
mov
loop
ds
lahf
sbb
popa
mov
lods
jne
pop
imul
pop
push
outs
pop
imul
sti
push
outs
add
add
es
imul
imul
add
nop
add
scas
sub
imul
add
nop
add
adc
imul
pop
push
add
xchg
pop
xchg
inc
pop
outs
pop
push
add
cdq
sub
xchg
inc
pop
outs
pop
push
add
xchg
sub
xchg
inc
pop
outs
mov
lods
jne
pusha
add
nop
add
cs
imul
add
nop
add
cs
add
nop
add
lods
sub
imul
add
nop
add
scas
sub
imul
pop
push
add
lahf
sub
xchg
pop
outs
pop
push
add
fwait
sub
xchg
pop
outs
mov
cs
icebp
add
cmp
pop
mov
aas
aaa
outs
add
cmp
pop
scas
fcomp
fisubr
aaa
outs
shl
mov
xor
cmps
cmc
ds
mov
mov
out
pop
out
icebp
add
nop
add
fmul
imul
loop
outs
pop
xchg
loopne
faddp
pop
outs
(bad)
cmp
add
nop
add
scas
sub
imul
loop
outs
pop
xchg
loopne
mov
pop
outs
fdivrp
cmp
loop
cwde
shl
pop
xchg
mov
pop
xor
ja
neg
adc
pop
outs
pop
mov
jecxz
add
cs
imul
pop
add
jbe
mul
adc
int3
ss
pop
outs
pop
mov
jecxz
add
das
sbb
jne
leave
pop
aaa
shl
inc
adc
int3
dec
ficomp
pop
mov
jecxz
add
cs
imul
pop
xchg
loopne
push
les
fisubr
outs
ss
imul
sub
add
cdq
sub
xchg
dec
pop
outs
pop
xchg
loopne
mov
pop
outs
fidiv
add
ja
ja
mov
xchg
sub
xchg
pop
xchg
dec
pop
outs
mov
lods
inc
cmps
cmc
ds
mov
aam
pop
fild
xchg
test
sahf
repnz
ficomp
nop
leave
loop
pop
fiadd
jne
leave
xchg
pushf
stos
es
imul
pop
imul
dec
pop
outs
mov
mov
sub
cmp
out
dec
pop
outs
pop
imul
add
pop
outs
pop
imul
xchg
xor
ret
sub
inc
pop
lahf
add
add
mov
ja
(bad)
sub
pop
fild
sbb
dec
imul
xchg
sub
sub
add
mov
fwait
pushf
xchg
jne
pop
jg
outs
ss
pop
cli
xchg
pop
mov
sub
inc
dec
pop
outs
xchg
outs
mov
ss
cwde
shl
pop
cmp
sub
ja
jne
leave
pop
pop
fbstp
ja
aaa
imul
jae
xor
(bad)
call
dec
add
mov
ja
(bad)
sub
pop
aam
pop
outs
pop
imul
adc
int3
push
fistp
pop
imul
imul
outs
jne
pop
imul
imul
imul
add
add
inc
dec
pop
outs
mov
add
nop
add
cs
imul
pop
sub
ja
jne
leave
pop
pop
fbstp
jne
pop
pop
sbb
add
cmp
fld
pop
pop
aam
pop
outs
pop
imul
adc
int3
dec
ficomp
mov
in
imul
pop
sub
ja
jne
leave
pop
pop
fbstp
jne
pop
dec
sbb
add
cmp
fld
pop
pop
aam
pop
outs
pop
imul
adc
int3
xchg
fcomp
pop
imul
add
pop
outs
pop
imul
jb
pop
outs
pop
jnp
mov
xchg
imul
pop
inc
ja
imul
xchg
pop
mov
sub
jnp
pop
outs
xchg
addr16
add
nop
add
cs
nop
add
scas
cs
pop
dec
push
outs
pop
aad
outs
add
pop
imul
pop
std
repz
je
jne
fidivr
outs
ss
imul
pop
sub
ja
jne
leave
pop
jg
je
jne
pop
emms
lds
imul
and
sbb
mov
ja
(bad)
sub
pop
mov
imul
adc
int3
faddp
pop
outs
mov
aaa
or
imul
sub
add
imul
dec
pop
outs
pop
push
repz
jne
pop
outs
leave
pop
test
adc
add
cdq
sub
add
xchg
pop
pop
sbb
outs
pop
pop
ja
imul
dec
add
mov
ja
(bad)
sub
pop
mov
imul
adc
int3
mov
pop
outs
pop
imul
add
pop
outs
pop
imul
push
fistp
pop
inc
push
outs
add
pop
pushf
imul
pop
lds
outs
add
mov
ja
(bad)
sub
pop
mov
imul
adc
int3
sbb
pop
outs
mov
outs
ss
clc
out
adc
leave
add
nop
add
cs
nop
add
scas
cs
add
imul
imul
imul
pop
sbb
sub
je
jne
ficomp
(bad)
fdiv
sub
loopne
add
pop
outs
pop
imul
jb
pop
outs
pop
jnp
out
imul
leave
imul
pop
jg
outs
add
outs
cmp
fisubr
pop
pop
aam
pop
outs
pop
imul
adc
ficomp
pop
imul
add
pop
outs
pop
imul
jb
pop
outs
pop
jnp
or
push
outs
ss
outs
imul
imul
xchg
pop
mov
sub
inc
dec
pop
outs
xchg
pop
mov
add
nop
add
cs
nop
add
scas
cs
pop
retf
imul
pop
pop
push
outs
add
imul
pop
jo
sub
je
jne
ficom
outs
ss
imul
pop
imul
add
pop
outs
pop
imul
jb
pop
outs
pop
jnp
cmp
push
outs
add
outs
imul
xchg
pop
mov
sub
retf
dec
pop
outs
xchg
jmp
add
cs
nop
add
scas
sub
sbb
outs
pop
cli
pop
outs
add
pop
imul
add
xor
xor
pop
xchg
dec
pop
outs
xchg
out
scas
sub
add
cs
nop
add
scas
sub
mov
pop
outs
pop
test
outs
add
pop
imul
add
xor
xor
pop
xchg
ja
das
ss
inc
into
loop
add
cdq
sub
add
xchg
pop
add
jmp
outs
ss
pop
jmp
sub
ss
adc
pop
int3
push
les
pop
imul
add
pop
outs
pop
imul
push
fistp
pop
jae
or
pop
outs
add
pop
imul
add
xor
xor
pop
xchg
dec
pop
outs
xchg
dec
mov
add
nop
add
cs
nop
add
scas
cs
pop
lods
imul
pop
ret
add
pop
imul
add
outs
fidivr
xchg
je
not
xchg
loopne
jecxz
pop
outs
ror
push
xchg
loopne
imul
dec
cmp
jmp
ret
xchg
leave
push
pop
xchg
popf
loopne
mov
sub
cmp
sub
leave
call
mov
ss
inc
into
loop
add
cdq
sub
xchg
pop
outs
mov
cs
out
lahf
cmp
push
imul
ss
sub
sub
add
retf
fwait
data16
xchg
sbb
imul
imul
add
sahf
je
ja
fld
pop
pop
imul
outs
ss
imul
pop
sub
ja
jne
add
in
xchg
xor
(bad)
call
or
mov
ja
(bad)
pop
pop
aam
pop
outs
pop
imul
push
imul
xor
pop
outs
mov
lods
jne
leave
pop
sub
ja
jne
leave
pop
pop
fbstp
ja
aaa
imul
jae
xor
(bad)
call
dec
add
mov
ja
(bad)
sub
pop
aam
pop
outs
pop
imul
push
imul
push
fistp
pop
imul
imul
outs
jne
pop
imul
imul
imul
add
add
fisttp
outs
mov
add
nop
add
cs
jne
leave
pop
sub
ja
jne
leave
pop
jg
je
jne
pop
pcmpeqw
jg
ins
ss
pop
jmp
sub
ja
pop
outs
xchg
xor
into
loop
pop
mov
pop
outs
pop
imul
imul
add
in
imul
sub
add
ss
faddp
pop
outs
fimul
and
test
pop
pop
inc
jge
outs
pop
push
and
imul
add
fdiv
imul
pop
imul
and
sub
xchg
pop
imul
add
pop
outs
pop
imul
push
fistp
pop
inc
push
outs
add
pop
xor
mov
sub
je
jne
fmulp
add
enter
imul
shl
pop
xchg
pop
sub
ja
jne
leave
pop
jg
je
ja
aaa
imul
or
or
cwde
imul
pop
push
ret
sahf
je
ja
fisubr
pop
add
imul
sahf
loopne
pop
imul
add
pop
outs
pop
imul
jb
pop
outs
pop
jnp
out
imul
pop
add
outs
imul
imul
xchg
pop
mov
sub
pop
je
outs
xchg
pop
scas
sub
dec
imul
ss
sub
sub
add
xchg
pop
add
mov
pop
outs
pop
test
outs
add
outs
cmp
fisubr
pop
pop
aam
pop
outs
pop
imul
sub
int3
push
ret
pop
imul
add
pop
outs
pop
imul
jb
pop
outs
pop
jnp
xchg
imul
xchg
imul
pop
emms
outs
imul
xchg
pop
mov
sub
lahf
jne
outs
xchg
fwait
mov
ss
ss
sub
sub
add
xchg
pop
add
(bad)
imul
pop
retf
pop
outs
add
outs
cmp
fisubr
pop
pop
aam
pop
outs
pop
imul
sub
int3
mov
imul
add
pop
outs
pop
imul
jb
pop
outs
pop
jnp
mov
imul
shr
outs
pop
jne
outs
imul
sbb
mov
sub
pop
jne
outs
xchg
pop
scas
sub
add
cs
nop
add
scas
cs
pop
retf
imul
pop
xchg
pop
outs
add
pop
imul
pop
xor
sub
je
jne
ficom
mov
outs
leave
pop
sub
ja
jne
leave
pop
jg
je
jne
pop
jmp
xor
mov
ja
test
pop
pop
aas
xchg
pop
imul
imul
pop
out
icebp
add
nop
add
cs
nop
add
scas
sub
push
add
and
pop
outs
mov
ja
(bad)
sub
pop
aas
xchg
pop
imul
imul
xchg
sub
sub
add
xchg
pop
add
imul
lahf
aas
pop
mov
sub
je
ja
xor
pop
xchg
pop
outs
xchg
dec
mov
add
nop
add
cs
nop
add
scas
cs
pop
lods
imul
pop
sub
outs
add
pop
imul
add
outs
fidivr
outs
ss
imul
lds
out
cmp
jmp
repz
cmp
pop
inc
mov
mov
outs
pop
jmp
outs
add
imul
leave
push
pop
xchg
jno
outs
mov
fs
sti
imul
ss
pop
out
jmp
fisubr
outs
ss
pop
fwait
xor
outs
mov
mov
sub
cmp
sub
cmp
sbb
add
stos
je
ja
imul
mov
pop
push
imul
sbb
add
je
ja
(bad)
pop
nop
inc
addr16
and
cs
xchg
aas
stos
imul
imul
sysret
or
pop
outs
mov
repnz
xchg
pushf
stos
cs
pop
into
loop
xor
(bad)
lods
arpl
cli
out
fisubr
outs
cmp
push
xor
ds
dec
outs
ss
stc
out
xchg
loope
leave
loop
out
lock
add
jmp
mov
push
sub
(bad)
cmp
outs
scas
pushf
out
in
inc
nop
mov
loopne
inc
jp
out
imul
pop
loop
imul
leave
cmp
adc
dec
xchg
sbb
scas
je
xchg
jmp
jl
imul
mov
loopne
inc
jp
aad
sub
loop
imul
leave
cmp
sub
imul
dec
xchg
sbb
daa
add
lods
je
xchg
jmp
xor
imul
pop
push
(bad)
leave
xchg
loopne
fidiv
outs
ss
dec
xchg
sbb
daa
add
je
xchg
jmp
in
imul
pop
mov
sub
leave
xchg
loopne
fimul
bound
int
pop
outs
mov
xchg
dec
xchg
jl
outs
mov
loopne
inc
jp
(bad)
sub
loop
imul
leave
cmp
fldenv
imul
fsubr
outs
ss
nop
cmp
push
pop
les
pop
nop
leave
xchg
dec
xchg
push
loopne
inc
jp
jg
sub
loop
imul
leave
cmp
in
and
out
dec
xchg
adc
daa
add
scas
je
xchg
jmp
je
imul
mov
loopne
inc
jp
daa
imul
pop
loop
imul
leave
cmp
and
imul
dec
xchg
adc
daa
add
je
xchg
jmp
sub
imul
imul
sub
pop
sbb
out
pop
nop
leave
xchg
dec
pop
lds
fisubr
nop
leave
add
imul
sub
pop
jbe
pop
outs
fidiv
loop
leave
add
dec
aas
imul
sub
inc
xchg
lahf
pop
fwait
xchg
test
leave
xor
pop
cmp
cmp
mov
xlat
cmp
pop
outs
ror
(bad)
adc
pop
cmp
mov
dec
imul
cmp
(bad)
fcom
scas
inc
gs
or
dec
pop
outs
imul
sahf
sbb
pop
outs
gs
add
mov
xchg
xchg
test
mov
sub
loop
xchg
nop
leave
cmp
xor
imul
iret
jno
outs
(bad)
fs
outs
ss
xchg
leave
xchg
lahf
rol
xchg
loopne
aaa
push
push
pop
adc
repnz
leave
xchg
dec
xchg
jge
outs
mov
lods
lahf
rol
xchg
loopne
xor
push
pop
ja
pop
outs
mov
xchg
dec
xchg
jge
outs
mov
in
xchg
leave
xchg
sbb
daa
add
je
xchg
jmp
call
rol
xchg
loopne
xor
push
pop
dec
test
outs
mov
xchg
dec
xchg
jle
outs
mov
stc
out
mov
nop
leave
loop
out
mov
push
pop
(bad)
fsubr
rcl
ss
pushf
into
xchg
loopne
inc
jp
shl
pop
loop
xchg
nop
leave
cmp
cmc
and
out
mov
push
pop
mov
call
jmp
outs
ss
inc
(bad)
loop
out
mov
push
pop
sbb
sub
rcl
ss
pushf
into
xchg
loopne
inc
jp
std
hlt
sub
loop
xchg
nop
leave
cmp
sub
imul
mov
push
pop
fcmovu
sub
rcl
ss
outs
(bad)
loop
out
mov
push
pop
sbb
ss
add
loopne
fisub
outs
ss
pushf
into
xchg
loopne
inc
jp
push
mov
call
popf
and
out
mov
push
pop
dec
fld
rcl
ss
pushf
into
xchg
loopne
inc
jp
mov
mov
call
shl
imul
inc
fistp
mov
xchg
dec
xchg
test
imul
sub
pop
cmp
pop
outs
fmulp
pause
leave
call
neg
lds
or
mov
push
fisttp
ss
shl
outs
ss
(bad)
pop
out
out
pop
les
je
test
ficom
adc
repz
outs
ss
xchg
retf
outs
cmp
lods
ins
imul
or
call
xchg
jecxz
leave
push
adc
push
push
outs
lock
loopne
leave
xchg
pop
out
pop
out
out
out
xchg
into
xchg
loopne
pop
push
hlt
sub
retf
aas
fisubr
(bad)
(bad)
out
leave
xchg
pop
sbb
and
imul
mov
xchg
sbb
mov
sub
ror
xchg
loopne
cmp
and
imul
push
sub
cmps
ficomp
pop
pop
hlt
sub
enter
fidivr
pop
outs
ss
cmps
ficomp
pop
dec
hlt
sub
into
xchg
loopne
ficom
outs
ss
ja
xor
loop
xchg
out
leave
cmp
or
fcom
inc
outs
ss
xchg
into
xchg
loopne
pop
jae
sub
enter
fisubr
outs
add
je
xchg
jmp
or
imul
xchg
loopne
fidiv
or
out
xchg
retf
in
imul
loop
xchg
out
leave
cmp
(bad)
pop
loop
xchg
out
leave
cmp
lods
and
in
bnd
outs
mov
xchg
dec
xchg
jg
outs
mov
out
ret
cwde
leave
xchg
xchg
test
fsubr
pop
loop
xchg
jecxz
leave
cmp
mov
repnz
scas
cmp
dec
outs
imul
mov
sbb
fidiv
outs
xor
nop
mov
sbb
imul
imul
adc
fidiv
sbb
pop
loop
xchg
out
leave
cmp
sub
imul
bnd
gs
sub
loop
xchg
loope
leave
cmp
adc
mov
loope
leave
cmp
adc
mov
call
in
mov
nop
leave
jmp
push
xchg
loopne
sbb
pmulhuw
lods
fwait
push
xchg
loopne
adc
mov
call
loopne
inc
mov
xchg
test
leave
xchg
xchg
jmp
rol
xchg
loopne
adc
imul
xchg
loopne
fidivr
outs
ss
mov
xchg
loopne
mov
not
mov
arpl
cmp
das
fiadd
outs
ss
fwait
into
xchg
loopne
mov
out
leave
cmp
fcmovb
xchg
loopne
fisub
out
inc
(bad)
loop
loop
xchg
out
leave
cmp
lods
and
xchg
loope
leave
cmp
rol
xchg
loopne
mov
add
into
xchg
loopne
add
nop
sbb
sbb
jne
pop
imul
and
dec
or
xchg
retf
aas
gs
stos
or
loopne
xchg
cmps
loopne
mov
adc
cmc
(bad)
fbld
dec
loop
leave
xchg
stos
or
loopne
lahf
jns
outs
mov
lods
ja
inc
jo
xchg
sbb
leave
xchg
inc
xor
(bad)
ds
mov
sbb
imul
ret
sub
lods
mov
cmp
imul
sub
add
sub
or
pop
out
iret
icebp
nop
leave
(bad)
fistp
and
idiv
daa
imul
aaa
adc
imul
jbe
outs
ss
addr16
pop
mov
lods
sbb
fwait
sub
sti
imul
out
push
out
add
ja
test
leave
imul
pop
sti
scas
sub
ss
daa
imul
fiadd
or
loop
outs
out
loop
pop
xor
outs
mov
xchg
dec
nop
inc
arpl
jne
imul
aaa
add
jmp
ins
test
push
loopne
imul
sbb
outs
mov
stos
je
pop
mov
ss
sbb
repnz
xlat
je
pop
outs
ror
nop
mov
imul
in
jge
addr16
cwde
fsubr
add
loop
ss
loop
out
int3
repnz
leave
lods
call
pop
neg
and
pusha
adc
or
movs
mov
mov
xchg
sbb
mov
call
xchg
sti
or
repnz
leave
jmp
fcomp
xchg
loopne
mov
xchg
and
stos
fldl2e
cdq
xchg
nop
xor
imul
cmp
loopne
lock
mov
leave
xchg
sub
outs
ss
enter
aas
pop
sti
scas
sub
je
xchg
jmp
push
jnp
imul
out
mov
loop
(bad)
nop
leave
cmp
std
imul
mov
pause
leave
cmp
shl
loopne
mov
repnz
leave
cmp
pop
lock
loopne
bnd
lods
sub
outs
pop
imul
sbb
imul
pop
push
sbb
out
inc
(bad)
out
add
test
inc
sbb
ss
imul
mov
imul
push
into
sahf
test
pop
outs
pop
shl
sub
je
ja
fsubr
pop
pop
inc
fistp
faddp
or
ss
inc
fcom
sub
ss
xchg
shr
mov
xchg
xchg
lods
pop
fcomi
sub
je
ja
fsubr
pop
pop
push
retf
pop
outs
ficomp
or
ss
(bad)
fist
sub
ss
xchg
jmp
nop
sbb
ss
test
outs
cwde
sub
xchg
js
outs
mov
pop
loop
aad
nop
leave
out
movs
fisubr
pop
(bad)
aas
imul
(bad)
and
imul
aad
call
add
add
add
pop
imul
pop
imul
imul
add
pop
add
ss
test
jae
loopne
imul
add
imul
mov
loopne
mov
push
outs
inc
xchg
jne
mov
out
fcmovu
xchg
loopne
leave
push
stos
xchg
fs
outs
pop
imul
pop
jae
sub
fimul
in
sbb
imul
jae
loopne
imul
add
imul
mov
loopne
mov
push
outs
inc
xchg
jne
mov
out
fcmovu
xchg
loopne
leave
push
stos
xchg
imul
pop
jae
sub
fsubp
adc
xchg
push
fimul
outs
rol
ss
mov
xchg
xchg
jmp
xchg
push
xchg
mov
les
mov
fstp
scas
mov
test
outs
dec
imul
ss
imul
imul
cmps
adc
loop
mov
imul
out
inc
(bad)
out
add
xchg
cs
test
xlat
sbb
ss
repnz
ss
jae
pop
outs
imul
cmp
add
cdq
sub
add
add
add
ss
pop
xor
ss
xor
fidiv
outs
ss
imul
sub
add
arpl
outs
pop
imul
xchg
jmp
imul
inc
inc
ja
fsubr
pop
xchg
popw
outs
pop
jmp
not
imul
mov
repnz
leave
loop
pop
out
loop
xchg
addr16
outs
pop
push
nop
mov
lods
call
imul
(bad)
outs
ss
xlat
fist
or
scas
pop
outs
pop
push
cmc
sub
je
ja
imul
mov
pop
data16
sbb
adc
fld
nop
xchg
loopne
out
push
out
out
(bad)
fcom
outs
pop
sbb
das
add
add
imul
addr16
outs
mov
xchg
dec
add
mov
pop
outs
pop
imul
adc
cmp
jmp
ss
outs
imul
pop
pop
shl
sbb
imul
cs
mov
enter
sahf
lods
or
pop
outs
mov
mov
pop
add
jae
dec
xchg
pop
outs
aas
stos
push
imul
sahf
or
pop
outs
gs
in
addr16
add
xchg
sub
call
xchg
imul
xchg
sbb
outs
ss
imul
aaa
imul
mov
sbb
outs
imul
jp
outs
ss
fdivr
imul
push
push
outs
cmp
xchg
outs
ss
imul
or
fld
in
imul
pop
sahf
repnz
repnz
xchg
mov
nop
mov
xchg
sahf
test
nop
xchg
sub
aad
loopne
bnd
jmp
push
xchg
mov
xchg
loopne
xchg
stos
xchg
xchg
loopne
sbb
outs
aas
stos
adc
mov
out
xlat
xchg
leave
xchg
dec
nop
add
scas
cs
imul
inc
push
xchg
jmp
(bad)
xchg
leave
xchg
pushf
xchg
loopne
mov
mov
push
iret
sbb
loopne
mov
xchg
loopne
mov
loop
leave
call
retf
xchg
leave
xchg
xor
cli
xchg
loopne
btc
pop
push
jmp
ret
xchg
leave
xchg
dec
in
mov
nop
leave
inc
call
imul
pop
pop
fbstp
imul
into
pushf
clc
out
scas
loop
leave
loop
in
or
fld
cmc
ins
pop
outs
xchg
add
sub
je
sahf
cmp
ja
je
pop
out
or
fld
and
or
fld
leave
pop
jae
je
test
xchg
ss
mov
imul
into
pop
out
icebp
retf
ja
sub
fs
add
imul
xor
xlat
je
pop
outs
ror
mov
sub
push
jae
adc
or
leave
push
pop
xchg
popw
outs
fistp
outs
ss
cwde
shl
call
loopne
jnp
out
out
leave
xchg
and
cmps
fcomp
inc
das
and
inc
ficomp
inc
push
and
push
ret
inc
pop
and
mov
outs
inc
inc
and
mov
dec
and
dec
ficomp
inc
ja
push
fcomp
inc
jg
push
les
inc
addr16
and
pop
outs
cmp
into
imul
push
ja
mov
xchg
and
dec
ficomp
inc
jnp
push
fcomp
inc
arpl
add
pop
outs
inc
data16
es
nop
inc
jnp
lods
cmp
pop
leave
xchg
loopne
leave
push
ja
mov
cmp
imul
call
loopne
mov
lods
xchg
jmp
test
imul
fbstp
fsub
imul
leave
imul
mov
xchg
dec
nop
add
loopne
imul
ss
aas
add
popa
sbb
cmp
xor
ss
xor
out
fnstcw
jle
ss
outs
leave
xchg
loopne
mov
loop
leave
lods
call
push
imul
icebp
pop
outs
ss
outs
imul
xchg
sub
xchg
pop
xchg
out
nop
leave
xchg
pushf
cmps
leave
sub
xchg
mov
sbb
mov
pop
outs
mov
xchg
dec
xchg
sti
loopne
mov
adc
xchg
pop
outs
inc
dec
jne
pop
imul
sub
add
ss
mov
pop
outs
fsubp
adc
push
imul
shl
call
out
outs
leave
xchg
loopne
mov
xchg
dec
pop
pop
sbb
leave
xchg
dec
xchg
scas
sysret
leave
imul
mov
xchg
dec
nop
add
das
ss
imul
ss
aas
add
and
pop
outs
pop
imul
cmp
pop
nop
add
das
or
ss
xor
loop
push
nop
leave
call
and
push
out
into
jnp
dec
pop
imul
xor
add
xchg
popa
pop
outs
leave
pop
add
jbe
test
lock
pop
nop
leave
xchg
pop
test
fs
nop
mov
xchg
loopne
push
pop
sbb
adc
pop
pop
fld
neg
add
das
cmp
imul
mov
loopne
leave
push
jmp
ins
(bad)
mov
lods
xchg
jmp
call
pop
cmc
sub
retf
xchg
loopne
faddp
adc
ss
pop
outs
ss
outs
leave
xchg
loopne
leave
pop
lahf
fidiv
jge
imul
mov
nop
leave
imul
imul
mov
pop
xchg
pop
outs
leave
pop
lahf
fidiv
inc
aas
imul
cmp
outs
mov
out
sti
xchg
leave
xchg
xchg
test
out
push
nop
leave
xchg
dec
loop
sahf
loop
leave
cmp
fsubr
pop
loop
sahf
loop
leave
cmp
push
cmp
jnp
nop
imul
mov
loopne
leave
cmp
pop
sbb
pop
outs
fmulp
pop
outs
ss
outs
leave
xchg
loopne
inc
dec
jne
pop
imul
sub
add
ss
sbb
pop
outs
(bad)
pop
outs
add
pop
xchg
xchg
test
out
push
nop
leave
xchg
dec
loop
sahf
loop
leave
cmp
fild
pop
loop
sahf
loop
leave
cmp
mov
bnd
nop
imul
mov
loopne
leave
cmp
pop
push
les
ficom
outs
ss
outs
leave
xchg
loopne
inc
dec
jne
pop
imul
sub
add
ss
push
les
fidivr
pop
outs
sub
imul
mov
loopne
mov
push
outs
inc
xchg
pushf
xchg
xor
add
pop
push
sbb
imul
imul
add
cs
ss
xor
xchg
loope
leave
imul
cmp
call
outs
push
nop
leave
xchg
and
outs
and
dec
jne
pop
imul
sub
add
ss
push
les
fimul
(bad)
imul
aaa
loope
nop
enter
xor
inc
out
icebp
out
outs
leave
xchg
loopne
mov
xchg
dec
pop
pop
sbb
leave
xchg
dec
xchg
bound
outs
mov
sysret
leave
imul
mov
xchg
dec
nop
add
cs
imul
ss
aas
add
and
not
xor
nop
add
cs
imul
xor
pop
test
leave
imul
cmp
call
outs
push
nop
leave
xchg
and
outs
and
dec
jne
pop
imul
sub
add
ss
push
les
fiadd
outs
adc
enter
aaa
out
outs
leave
xchg
loopne
(bad)
xchg
pop
out
or
sbb
fs
nop
pop
ins
(bad)
mov
push
inc
imul
data16
call
cmc
sub
retf
xchg
loopne
fidiv
outs
ss
jne
pop
outs
jne
pop
imul
imul
les
(bad)
sbb
loop
fwait
enter
into
pushf
clc
out
mov
nop
leave
loopne
(bad)
retf
xchg
loopne
icebp
add
nop
sbb
push
imul
ss
pop
loop
pop
mov
ss
and
push
out
cmc
add
loop
fwait
loop
leave
cmp
ret
leave
fsubrp
xchg
leave
xchg
test
retf
xchg
loopne
pop
imul
sbb
push
imul
mov
loopne
mov
push
outs
inc
xchg
jne
mov
xchg
dec
aas
mov
xchg
dec
nop
sbb
push
imul
out
out
xchg
leave
xchg
dec
add
je
loopne
ret
nop
fsubp
sbb
jmp
sbb
imul
loopne
jb
pop
outs
fisub
pop
add
add
pop
imul
pop
dec
mov
imul
xchg
jmp
mov
ins
pop
imul
fsubrp
xchg
leave
xchg
mul
cmp
lods
sub
jbe
and
push
out
cmc
add
loop
fwait
loop
leave
cmp
fstp
leave
fsubrp
xchg
leave
xchg
mul
imul
ss
lahf
retf
xchg
loopne
pop
push
lahf
fisubr
pop
nop
sbb
imul
xchg
xchg
aaa
xchg
xchg
test
fsubrp
xchg
leave
xchg
imul
xor
sbb
sub
ss
xor
sbb
inc
scas
pop
outs
pop
push
cmc
sub
je
ja
imul
mov
pop
add
cdq
sub
xchg
outs
pop
outs
mov
out
ret
xchg
leave
xchg
xchg
test
jp
sbb
xchg
push
leave
push
adc
xor
xor
(bad)
lods
imul
call
dec
in
arpl
out
pushf
clc
out
xchg
xchg
test
adc
push
outs
cmp
lds
imul
mov
pcmpgtd
out
aad
imul
ficomp
inc
pusha
loopne
faddp
pop
outs
faddp
sbb
loop
inc
into
loop
push
add
adc
add
scas
sub
imul
ficomp
inc
pusha
loopne
sbb
pop
outs
ficom
sbb
push
sub
sub
sbb
sub
xchg
pop
outs
mov
lods
and
sub
pop
outs
inc
pusha
loopne
push
les
fidivr
sbb
push
sub
sub
sbb
sub
xchg
outs
pop
outs
mov
xor
pushf
clc
out
lahf
xchg
test
pop
aas
shl
jnp
push
imul
xchg
sub
and
outs
or
imul
push
imul
xchg
sub
xchg
pop
xchg
push
xchg
xchg
pop
xchg
xchg
test
mov
pop
faddp
pop
outs
inc
ins
xchg
jb
into
pop
outs
mov
lods
and
mov
pop
outs
inc
ins
xchg
jb
les
or
imul
jbe
shl
xchg
aaa
xchg
xchg
test
pop
add
jbe
push
mov
imul
les
inc
ins
xchg
jb
ficomp
or
imul
jbe
(bad)
jbe
and
mov
pop
outs
inc
ins
xchg
jb
les
aas
mov
jge
push
or
cmp
pop
outs
(bad)
xchg
pop
xchg
xchg
test
xor
pop
outs
ss
cmp
sub
jmp
xchg
cmp
sub
jmp
xchg
cmp
sub
jmp
xchg
cmp
sub
jmp
xchg
cmp
sub
jmp
xchg
cmp
sub
jmp
xchg
cmp
sub
jmp
xchg
cmp
sub
jmp
ds
mov
not
imul
icebp
jmp
dec
inc
dec
jne
mov
cmp
outs
ss
jecxz
neg
ss
sub
outs
jno
and
xchg
hlt
jae
mov
push
xchg
aas
sbb
sbb
cmp
sbb
pop
sbb
into
dec
imul
pop
add
xor
leave
xchg
inc
cmps
cmc
xor
outs
sbb
outs
ss
sbb
imul
ss
inc
repnz
sbb
mov
outs
ss
dec
ds
(bad)
leave
xchg
loopne
mov
in
rol
xchg
es
loopne
dec
ds
xchg
adc
outs
in
retf
mov
dec
sbb
ss
cmp
xor
imul
ss
cmp
xor
imul
ss
cmp
xor
imul
ss
cmp
xor
imul
ss
cmp
xor
imul
ss
cmp
xor
imul
ss
cmp
xor
imul
ss
cmp
xor
imul
ss
cmp
xor
imul
ss
cmp
xor
imul
ss
cmp
xor
imul
ss
cmp
xor
imul
ss
cmp
xor
imul
ss
cmp
xor
imul
ss
cmp
xor
imul
ss
cmp
xor
imul
ss
cmp
xor
imul
ss
cmp
xor
imul
ss
cmp
xor
imul
ss
cmp
xor
imul
ss
cmp
xor
imul
ss
cmp
xor
imul
ss
cmp
xor
imul
ss
cmp
xor
imul
ss
cmp
xor
imul
ss
cmp
xor
imul
ss
cmp
xor
imul
ss
cmp
xor
imul
ss
cmp
xor
imul
ss
cmp
xor
imul
ss
cmp
xor
imul
ss
cmp
xor
imul
ss
cmp
cmps
imul
ss
cmp
cmps
imul
ss
cmp
cmps
imul
ss
cmp
cmps
imul
ss
cmp
cmps
imul
ss
cmp
cmps
imul
ss
cmp
cmps
imul
ss
cmp
cmps
imul
ss
cmp
cmps
imul
ss
cmp
cmps
imul
ss
cmp
cmps
imul
ss
cmp
cmps
imul
ss
cmp
cmps
imul
ss
cmp
cmps
imul
ss
cmp
sub
jmp
xchg
cmp
sub
jmp
xchg
cmp
sub
jmp
xchg
cmp
sub
jmp
xchg
cmp
sub
jmp
xchg
cmp
sub
jmp
xchg
cmp
sub
jmp
xchg
cmp
sub
jmp
xchg
cmp
sub
jmp
xchg
cmp
sub
jmp
xchg
cmp
sub
jmp
xchg
cmp
sub
jmp
xchg
cmp
sub
jmp
xchg
cmp
sub
jmp
xchg
cmp
sub
jmp
xchg
cmp
sub
jmp
xchg
cmp
xor
pop
jmp
xchg
cmp
xor
pop
jmp
xchg
cmp
xor
pop
jmp
xchg
cmp
xor
pop
jmp
xchg
cmp
xor
pop
jmp
xchg
cmp
xor
pop
jmp
xchg
cmp
xor
pop
jmp
xchg
cmp
xor
pop
jmp
xchg
cmp
xor
pop
jmp
xchg
cmp
xor
pop
jmp
xchg
cmp
xor
pop
jmp
xchg
cmp
xor
pop
jmp
xchg
cmp
xor
pop
jmp
xchg
cmp
xor
pop
jmp
xchg
cmp
xor
pop
jmp
xchg
cmp
xor
pop
jmp
xchg
cmp
xor
pop
jmp
xchg
cmp
xor
pop
jmp
xchg
cmp
xor
pop
jmp
xchg
cmp
xor
pop
jmp
xchg
cmp
xor
pop
jmp
xchg
cmp
xor
pop
jmp
xchg
cmp
xor
pop
jmp
xchg
cmp
xor
pop
jmp
xchg
cmp
xor
pop
jmp
xchg
cmp
xor
pop
jmp
xchg
cmp
cmps
imul
ss
cmp
cmps
imul
ss
cmp
cmps
imul
ss
cmp
cmps
imul
ss
cmp
cmps
imul
ss
cmp
cmps
imul
ss
cmp
cmps
imul
ss
cmp
cmps
imul
ss
cmp
cmps
imul
ss
cmp
cmps
imul
ss
cmp
cmps
imul
ss
cmp
cmps
imul
ss
cmp
cmps
imul
ss
cmp
cmps
imul
ss
cmp
cmps
imul
ss
cmp
cmps
imul
ss
