sbb
add
cld
or
lock
and
jns
adc
loopne
call
lea
adc
inc
cmp
jnp
or
pop
lahf
test
lea
cmp
(bad)
clc
popa
out
sbb
mov
or
loopne
sbb
repz
mov
add
iret
out
call
hlt
mov
mov
xchg
sub
xchg
add
sub
cli
dec
ret
push
jecxz
mov
(bad)
out
loop
dec
mov
test
rol
push
mov
not
dec
mov
fwait
(bad)
fsubr
aaa
daa
adc
ja
sub
mov
(bad)
pop
or
mov
clc
cld
mov
cmp
sub
loop
mov
or
dec
mov
sub
fstp
mov
cmp
xchg
adc
and
push
inc
pop
frstor
aas
jmp
jecxz
cwde
cmp
jecxz
outs
(bad)
(bad)
(bad)
fst
outs
sub
outs
ret
sub
cmp
and
sbb
test
mov
jp
xchg
loopne
out
ret
test
sbb
stc
push
into
popa
fcom
pop
add
xor
fld
out
jle
call
add
push
pop
stc
ror
push
ficomp
xor
in
add
and
or
pop
add
jg
and
adc
mov
mov
add
hlt
in
movs
xor
push
ss
rol
int
cld
dec
pop
shl
fsub
sub
mov
push
inc
ret
ret
fisub
js
adc
adc
call
xchg
add
aad
xchg
mov
adc
xchg
mov
imul
xchg
push
pop
shl
mov
xchg
push
mov
(bad)
jnp
xchg
call
das
pop
test
mov
sahf
cmps
(bad)
mov
out
cdq
int
push
jns
mov
daa
addr16
jo
mov
dec
ret
and
mov
push
sub
ffreep
ja
stos
sub
das
(bad)
pop
out
cmp
jno
xchg
cmp
cmp
nop
rol
ins
inc
or
popf
call
neg
cmps
jge
out
cmp
(bad)
mov
pop
pop
jle
jnp
repnz
daa
jmp
sub
in
pop
dec
mov
push
ret
jg
jg
push
cmps
test
addr16
sahf
mov
and
int
lods
pop
adc
xor
jle
xor
inc
rol
out
jne
std
nop
cs
aam
mov
dec
inc
test
stos
aaa
cdq
pop
shl
xchg
fcom
push
adc
scas
ret
movs
jl
neg
push
xor
inc
nop
or
add
jl
or
lods
daa
xchg
xchg
inc
mov
(bad)
mov
pop
test
neg
adc
ror
sbb
or
das
shl
pushf
cmp
adc
repz
mov
movs
xlat
rcl
(bad)
push
mov
pop
outs
es
cdq
clc
or
pushf
and
sbb
std
push
aad
mov
pop
mov
call
std
inc
sub
outs
pushf
push
out
or
or
jo
inc
and
push
pop
stos
retf
pop
movs
(bad)
sbb
pop
fcmovne
jl
stc
repz
int3
jmp
or
rcr
das
sub
or
xchg
and
cmps
data16
dec
fadd
div
add
enter
or
aas
inc
scas
push
cmp
sbb
aad
cmp
repnz
loope
mov
push
adc
enter
enter
fst
xor
add
xor
xor
add
cmp
mov
sub
lahf
loopne
(bad)
push
jmp
mov
jo
jg
mov
add
in
xor
xchg
jmp
scas
cmc
sub
sub
pusha
jo
aas
stos
pop
ja
outs
out
sbb
mov
ror
xchg
loop
idiv
call
inc
data16
in
dec
enter
pop
div
xor
fidivr
iret
xchg
xor
adc
bound
sub
mov
dec
dec
rol
cld
(bad)
ret
mov
xchg
cmp
inc
ds
in
retf
test
(bad)
stc
sar
add
daa
test
std
popa
es
jle
daa
mov
or
sbb
push
or
inc
jl
xor
inc
and
sub
dec
cwde
lods
pop
aas
sar
ficomp
inc
pop
js
add
adc
aas
mov
xchg
leave
and
jo
dec
cmp
jbe
cld
pop
push
movd
push
loope
or
ja
aas
(bad)
cmp
cmp
inc
mov
scas
movaps
lock
push
xor
sahf
retf
mov
stos
imul
outs
pop
mov
sub
xor
ret
sub
pop
jmp
es
push
(bad)
loopne
mov
shr
in
iret
in
sbb
aam
inc
bound
aad
dec
jb
aaa
jmp
push
mov
sub
ret
mov
or
jmp
fcom
pop
ins
call
es
adc
jle
sbb
cmps
frstpm(287
jl
inc
(bad)
mov
push
(bad)
mov
dec
sbb
push
clc
add
inc
mov
jnp
out
pop
cli
jmp
or
and
pusha
sub
(bad)
xlat
and
inc
pop
nop
mov
mov
(bad)
(bad)
cmc
bound
mov
movs
mov
int
mov
sbb
pop
sar
adc
mov
push
mov
jg
lods
int3
mov
xchg
enter
inc
in
test
push
xor
adc
jg
ins
mov
xchg
daa
dec
xor
lahf
fld
and
sub
(bad)
cld
mov
(bad)
mov
cmp
jns
or
mov
int3
daa
fstp
(bad)
shr
in
mov
or
xchg
xor
enter
in
fmul
jge
xchg
es
in
xchg
cmp
rol
rcl
pop
xor
imul
sbb
sbb
dec
je
in
and
jae
test
cmp
xor
mov
je
jge
fstp
sahf
stc
and
pop
xlat
adc
cdq
(bad)
mov
push
ffree
data16
sbb
fs
mov
imul
hlt
inc
pop
cdq
repz
push
ds
mov
xchg
xchg
add
stc
repnz
(bad)
jo
in
push
mov
nop
fsubr
(bad)
loope
(bad)
mov
dec
hlt
fucomip
je
and
jmp
mov
loope
sbb
jb
adc
rcl
ss
cmp
push
inc
jmp
inc
jmp
xchg
cmp
sub
inc
pop
dec
and
and
das
retf
ss
sub
clc
fimul
dec
mov
mov
and
es
jbe
jle
adc
mov
sub
lea
xor
push
loop
cmp
iret
es
stos
jnp
fild
out
push
sub
dec
mov
jnp
cs
sub
loop
jo
push
iret
out
pop
(bad)
sahf
pop
and
pushf
dec
out
xor
bound
cmps
mov
es
add
shl
clc
jl
inc
adc
mov
clc
mov
scas
adc
sub
push
adc
(bad)
pop
scas
add
sar
into
lods
hlt
inc
pusha
jmp
out
or
jl
adc
shl
sar
or
icebp
sar
int
ins
nop
(bad)
cmp
jecxz
mov
and
pop
es
push
or
adc
(bad)
jmp
das
das
mov
xlat
sbb
push
mov
pop
add
outs
mov
in
cli
push
xchg
add
les
fdiv
xlat
fmul
lds
and
ins
mov
leave
mov
out
mov
outs
mov
enter
sub
outs
cld
inc
out
iret
adc
adc
sbb
arpl
inc
fdiv
inc
jecxz
jge
(bad)
dec
les
sub
das
retf
xchg
adc
xchg
bound
push
inc
inc
mov
sar
pop
cmp
adc
imul
div
je
mov
cmc
pop
push
data16
clc
mov
jno
inc
mov
mov
rcl
and
out
sbb
jne
loopne
dec
jae
add
adc
(bad)
clc
stc
jnp
lds
xlat
jl
jnp
mov
ds
xchg
push
dec
inc
loopne
je
into
cmp
push
movs
adc
ds
or
movs
push
sub
or
mov
cmps
rep
inc
stos
inc
push
lea
imul
repz
sbb
dec
in
jbe
loope
mov
inc
out
fs
shr
mov
push
sub
cmp
mov
push
and
cmps
lds
(bad)
(bad)
sub
xlat
push
jg
fistp
in
popf
inc
call
xchg
stos
je
push
dec
outs
push
mov
and
mov
fisttp
mov
mov
sbb
or
jo
cmp
pop
jno
ret
dec
or
jl
out
add
xlat
inc
pop
pop
mov
lods
ins
xchg
or
iret
mov
xchg
movs
rcr
daa
and
stos
jo
out
popa
inc
data16
push
fcomip
mov
pushf
or
push
xchg
push
sub
push
mov
add
jmp
call
push
stc
mov
sub
jmp
xor
js
jg
add
xchg
or
adc
xchg
or
dec
and
jnp
or
popf
jb
jge
add
repnz
xor
loop
mov
je
rcr
cmp
cdq
dec
inc
or
dec
dec
hlt
(bad)
xchg
not
push
ffree
daa
push
mov
pop
dec
imul
nop
mov
mov
inc
add
sbb
sbb
call
loope
cwde
mov
xchg
pop
fdiv
mov
pop
pop
pmulhw
pop
add
add
scas
xor
stos
bnd
sub
and
or
add
dec
iret
push
cli
dec
inc
mov
add
ret
pusha
push
mov
sub
xchg
push
sub
(bad)
fisubr
rol
ret
pusha
add
sub
add
cs
xchg
int
jae
cmp
stos
push
push
mov
daa
je
stos
int3
adc
lahf
test
adc
dec
in
lea
mov
mov
pop
xchg
outs
dec
add
ins
pop
sti
fdiv
scas
inc
sbb
cmp
sbb
xor
ds
call
cmp
push
pop
call
out
shl
ds
inc
jmp
sbb
test
jl
add
inc
xchg
pop
in
xchg
test
pop
cmp
adc
mov
or
sub
and
inc
call
test
dec
or
nop
scas
xchg
mov
sub
sbb
ret
in
mov
outs
xchg
je
push
sbb
test
and
jmp
sub
push
mov
ret
mov
push
pop
pop
icebp
test
in
cmc
(bad)
jge
add
mov
sbb
adc
test
mov
ins
(bad)
sbb
mov
push
mov
pop
sbb
push
icebp
mov
sbb
sub
aas
mov
xor
loopne
push
dec
pop
push
jno
and
xor
or
sti
retf
aad
adc
out
and
ins
adc
pop
jle
pop
fs
mov
jp
repz
xor
mov
mov
sub
push
pop
loope
movs
cmc
mov
enter
jbe
sub
out
in
cs
jbe
aam
mov
cs
xchg
dec
inc
cmps
aam
push
mov
ret
xor
in
lahf
and
hlt
cmp
sbb
dec
shr
inc
repnz
movs
ins
lods
cmps
ins
movs
jmp
ficom
out
ds
mov
add
cmp
int3
cmp
xchg
mov
fistp
fdivr
scas
mov
cmp
sbb
jae
bnd
mov
out
push
js
repnz
test
jmp
jnp
adc
imul
jb
mov
sub
add
loop
aad
inc
mov
push
int
jns
jae
popa
in
out
inc
into
jmp
mov
jle
test
lods
iret
inc
add
outs
xchg
sbb
pop
pusha
lock
fnsave
jns
mov
ja
jnp
ret
ficomp
jnp
dec
pop
xor
cmp
jl
scas
push
push
push
fwait
push
xchg
mov
scas
loopne
arpl
fs
sub
sbb
sbb
imul
clc
and
adc
mov
sbb
stc
mov
or
ins
pop
pusha
xchg
jmp
pop
clc
add
aas
mov
lods
retf
jne
mov
or
rol
push
inc
inc
mov
pop
ret
xchg
or
scas
xchg
leave
and
es
adc
imul
in
mov
aas
sar
sub
loop
hlt
inc
sti
aas
xlat
mov
getsec
add
cmp
adc
dec
mov
imul
sti
dec
stos
popf
sub
fdivr
das
fist
and
(bad)
iret
repz
mov
aam
cmps
sub
inc
jns
int
stc
cmps
test
xor
mov
xor
xor
sbb
enter
add
dec
cmp
retf
jne
sar
jmp
int3
int3
mov
out
or
jae
inc
inc
cmp
lods
fwait
pop
ins
data16
sbb
arpl
dec
retf
push
sar
arpl
xor
adc
repz
dec
test
cmc
fwait
xchg
dec
adc
add
sar
pop
sbb
test
ret
and
sub
cmc
test
and
push
mov
imul
xor
cmp
cmp
(bad)
int
ds
shr
pop
bound
fsubrp
ror
cmp
xchg
dec
retf
cmp
rol
and
push
mov
es
pop
push
xor
mov
pop
and
xchg
call
pushw
in
mov
jge
push
nop
push
sbb
stos
sbb
mov
sub
test
dec
(bad)
push
bound
fs
cmp
mov
iret
push
ds
xchg
test
test
sahf
xor
sbb
sub
cmps
lahf
pop
sub
movs
xor
test
xor
dec
fstp
xor
sub
dec
push
scas
ror
out
fist
xchg
es
xchg
gs
or
add
mov
daa
test
sbb
jl
sti
daa
and
add
xor
fadd
stos
jl
mov
xor
fdiv
and
leave
sti
jecxz
add
xchg
test
mov
jns
xchg
scas
cmp
xchg
cmp
sahf
dec
popf
imul
aam
sbb
mov
inc
jg
xor
in
pushf
jmp
sub
repnz
enter
cmc
add
ret
sub
cmp
inc
adc
sub
stos
dec
repnz
pop
sbb
mov
push
je
lahf
ds
mov
mov
jae
push
jb
sbb
pushf
inc
pop
and
push
leave
xchg
test
fst
sub
mov
loopne
adc
jno
or
adc
xor
movs
mov
inc
push
cmp
icebp
xchg
mov
or
stos
retf
test
push
mov
(bad)
or
push
or
repz
call
cld
push
xor
das
push
rcr
mov
mov
scas
sbb
nop
cmp
(bad)
dec
leave
int3
inc
dec
sub
ret
ins
sbb
retf
iret
std
sbb
adc
jnp
loope
scas
mov
in
cmps
es
pop
mov
fnsave
xchg
mov
jnp
sub
into
push
pop
push
cs
or
inc
out
adc
or
sbb
jne
andps
or
neg
mov
jne
sti
xchg
in
sahf
sub
dec
cmp
pop
dec
ret
pop
loop
and
fstp
add
jbe
aad
mov
sbb
pop
mov
fcom
xchg
sbb
sbb
mov
movs
call
mov
gs
imul
into
pop
bt
dec
mov
mov
inc
mov
mov
out
sar
adc
adc
sti
and
push
lods
adc
pusha
pop
(bad)
retf
in
mov
xchg
loop
adc
pop
mov
stos
dec
enter
jae
pop
inc
ss
dec
jae
adc
jns
push
jb
pusha
outs
adc
xor
jbe
mov
shr
sbb
ds
or
cmps
sbb
or
bound
jns
and
pop
mov
adc
mov
scas
bswap
sbb
dec
loop
and
xor
in
(bad)
imul
cli
add
jl
mov
ret
mov
jnp
jb
xor
push
in
jp
xchg
sbb
dec
or
shr
adc
dec
adc
jmp
jb
cwde
fwait
jge
test
adc
je
les
cmp
xor
cmp
lock
or
int3
sbb
movs
(bad)
push
mov
jbe
mov
(bad)
xchg
or
test
mov
bsr
nop
adc
loop
jecxz
leave
cmp
jp
push
repz
in
inc
(bad)
mov
pop
sbb
xchg
das
sbb
adc
sahf
mov
shl
add
in
adc
popf
sti
jno
xchg
xor
dec
jg
lods
(bad)
push
push
loope
js
nop
loope
aas
push
in
inc
rcr
add
aam
mul
jmp
and
test
inc
cli
push
inc
xchg
jo
cdq
mov
ret
inc
pop
cmps
mov
pop
movs
jne
test
sub
ret
pop
adc
and
inc
imul
out
stc
test
sahf
inc
ins
shr
mov
xchg
sbb
(bad)
xor
aad
push
fwait
aam
cmp
jecxz
inc
jmp
xchg
pop
(bad)
push
xor
mov
xchg
fst
div
cmp
ret
push
or
stc
pop
xor
adc
cmp
maskmovq
dec
and
cmp
jmp
push
arpl
lods
mov
rcr
popa
jb
push
adc
push
mov
loop
xor
xor
inc
push
jae
je
aam
popa
cmps
repz
sbb
outs
jp
xchg
(bad)
int3
lods
outs
(bad)
into
xchg
or
push
jmp
mov
push
cs
inc
push
jecxz
enter
leave
jno
xor
test
lods
inc
lahf
(bad)
ins
cmp
push
leave
int
lods
dec
jbe
sub
cdq
and
lock
fadd
daa
mov
sub
fcom
sar
mov
mov
repz
sti
mov
mov
add
in
fisttp
into
in
stos
add
mov
add
aam
call
loop
jecxz
xor
dec
pop
test
cmp
mov
imul
mov
mov
or
bound
mov
popf
mov
mov
movs
dec
je
cli
mov
push
es
lods
sbb
inc
or
xor
int
fild
sbb
push
add
dec
aas
dec
int3
mov
jae
xchg
sbb
jle
xchg
mov
cmp
inc
xchg
mov
mov
and
push
inc
jo
adc
aaa
add
sbb
jp
pop
aaa
popa
pop
inc
and
(bad)
(bad)
cmp
loope
(bad)
int
cs
adc
(bad)
(bad)
xchg
adc
(bad)
mov
adc
add
xor
loope
pop
mov
movs
ss
pop
and
jns
mul
sub
sti
inc
aam
mov
test
jge
iret
pop
pop
stc
js
mov
ror
mov
pop
cmp
out
sbb
or
clc
xchg
je
fstp
inc
fs
pop
pop
jnp
dec
pop
repz
stos
lods
cli
imul
shl
retf
push
sbb
loopne
mov
repnz
lock
xor
and
iret
cmps
scas
out
sub
cmc
addr16
mov
jne
js
add
pop
xchg
xchg
pop
sub
push
ret
rol
sub
js
mov
add
inc
push
outs
ins
es
push
arpl
and
lds
mov
dec
stc
in
sti
es
adc
stos
outs
aas
cmp
mov
scas
adc
or
into
xchg
pop
cmp
fdiv
cdq
ss
adc
jns
fisub
jnp
ds
in
lds
leave
repnz
fnstcw
adc
inc
int
lods
xchg
test
cwde
sti
pop
pop
dec
mov
(bad)
out
xor
dec
imul
pop
xor
test
mov
add
add
cmp
jle
mov
leave
ror
int
iret
pop
fcmovu
in
push
jp
add
mov
jl
dec
dec
int3
sbb
mov
in
cmp
fadd
stc
add
mov
dec
sub
mov
popa
push
cmp
popa
and
aaa
cmp
es
shl
scas
bound
jb
mov
dec
aaa
outs
loop
cmps
xchg
ret
enter
jo
inc
add
mov
push
pop
mov
and
sbb
ret
add
mov
pop
fwait
xor
add
xchg
mov
es
xor
pop
pop
fild
loop
in
scas
dec
ss
inc
pop
loopne
loop
les
ret
lea
mov
inc
mov
dec
or
movs
mov
scas
outs
in
push
aam
cmp
stc
xchg
nop
pop
ins
adc
cmc
aaa
fs
pop
jp
add
adc
xor
inc
mov
and
out
jle
stc
out
lahf
aam
push
imul
pop
stc
and
imul
sub
rol
call
pushf
mov
int3
adc
movs
mov
inc
les
add
test
cmp
ret
lahf
retf
mov
(bad)
jmp
inc
arpl
popw
stos
inc
bound
dec
inc
cmc
mov
fisub
mov
sbb
mov
pusha
stc
or
push
push
cli
retf
lahf
cmp
aam
pop
dec
cmps
mov
inc
cmc
andps
add
jo
push
mov
add
or
and
pop
and
ret
push
or
pop
push
outs
sbb
ficomp
cdq
push
add
pop
pop
sbb
nop
and
push
mov
push
int
ins
cmps
ss
or
pop
sub
inc
es
sbb
cmps
rcl
dec
cdq
sub
push
lock
xchg
retf
mov
div
pop
xchg
lea
xchg
cli
int
cdq
mov
stc
(bad)
out
ret
outs
out
mov
popf
xor
cmp
mov
test
jmp
add
fstp
repnz
out
mov
cmp
sbb
in
mov
movs
push
mov
mov
xchg
or
jmp
and
lahf
popf
sub
adc
fsubr
jno
(bad)
arpl
or
jbe
dec
pushf
repz
in
dec
pop
nop
push
fst
adc
in
jmp
inc
jnp
ins
cmps
loopne
xchg
(bad)
imul
ror
repnz
jbe
scas
jg
popf
and
(bad)
mov
jo
ret
add
cli
dec
jl
ja
gs
sub
lods
sbb
lods
outs
movs
and
xchg
pop
xchg
movs
pop
aas
(bad)
push
pop
sbb
pop
loope
pusha
imul
adc
adc
out
push
lods
jno
retf
sub
jle
icebp
sbb
add
cmp
retf
pop
jae
xchg
xchg
fist
pop
mov
jo
jbe
test
movs
cli
pop
push
sbb
daa
pusha
push
repz
mov
inc
adc
test
je
test
and
jle
inc
lods
pop
and
(bad)
call
mov
jno
sbb
in
es
jnp
mov
add
es
daa
mov
jbe
cmp
push
add
in
mov
or
daa
sbb
push
aas
or
sbb
jno
outs
sub
pop
mov
ins
jns
jl
imul
(bad)
data16
in
arpl
outs
rol
lock
pop
jmp
aad
sub
xchg
inc
sbb
mov
jl
(bad)
in
push
sub
arpl
push
mov
mov
call
jnp
stos
lods
dec
pop
dec
lahf
xor
in
mov
test
or
gs
fild
mov
and
xchg
cld
or
add
mov
cwde
add
cld
xor
stc
call
sti
and
(bad)
fwait
enter
imul
adc
push
jns
cmp
sub
ror
sbb
div
dec
xchg
xchg
jmp
mov
pop
xchg
and
mov
xchg
shr
jmp
add
les
hlt
and
test
ja
loop
inc
(bad)
jp
fdiv
daa
xchg
mov
mov
call
cmp
popa
(bad)
shl
jg
outs
jnp
aad
leave
or
add
mov
push
lods
push
xor
shl
lods
sub
mov
push
mov
cmp
jg
xor
or
imul
pop
push
sub
push
in
adc
xor
scas
xchg
enter
inc
sub
mov
cwde
fs
je
xor
adc
pop
js
dec
adc
jp
jne
fidiv
imul
gs
adc
sbb
rcl
mov
fsubr
or
jle
call
add
add
loop
cmp
cs
mov
cmp
fist
push
or
ins
imul
enter
loop
cmp
pop
xchg
ja
add
add
mov
nop
and
push
in
pop
xchg
add
pop
mov
mov
in
sti
aam
push
adc
sub
cwde
and
jmp
mov
cmp
xlat
and
test
adc
sub
or
and
test
push
fsubr
cld
xor
inc
mov
xor
jecxz
mov
shr
out
add
cmp
cmps
test
cld
pop
xor
cld
xchg
and
shr
mov
ret
jne
arpl
and
and
loop
jmp
inc
fisubr
and
fcmovnu
lods
push
cdq
inc
cs
or
push
push
das
or
scas
mov
nop
jb
clc
int3
mov
jecxz
mov
pusha
push
add
aad
mov
retf
std
push
int3
aas
xor
fs
dec
lds
pop
fld
xor
jle
ret
std
mov
repnz
lock
(bad)
and
ins
pop
inc
lds
cmp
cmp
mov
push
in
mov
popf
mov
jo
test
clc
mov
movs
sar
push
and
das
in
sbb
push
clc
leave
push
adc
in
sub
cmp
icebp
and
jae
mov
inc
idiv
dec
stos
out
add
jp
cmc
push
fild
loopne
jno
jmp
mov
jb
(bad)
dec
xor
(bad)
push
add
pushf
mov
into
sti
je
add
call
fsubr
js
jecxz
stos
push
jbe
xlat
shl
xchg
cmp
mov
fmul
and
sub
and
add
mov
(bad)
pop
mov
mov
lods
in
test
jnp
mov
push
fild
mov
loop
int3
cmp
sub
cdq
push
fwait
repnz
add
lds
add
pop
jecxz
pmaxsw
cmps
fcmovnu
les
push
fwait
sbb
icebp
in
and
jae
scas
or
inc
add
mov
pop
add
push
cli
adc
cmp
enter
std
addr16
xchg
jne
scas
imul
das
mov
cmp
lahf
mov
lods
popa
cmp
mov
sbb
cwde
(bad)
out
push
or
fwait
shr
mov
push
add
pop
movs
fsubp
mov
mov
les
icebp
hlt
ficomp
sbb
sub
push
fmul
and
lods
cmp
mov
imul
fidiv
and
add
cmp
add
push
int3
mov
cmp
out
mov
pop
test
outs
xchg
pop
cmc
mov
adc
push
setbe
push
ret
push
fwait
sbb
pop
mov
not
pop
imul
imul
arpl
xor
ins
sub
cmc
push
hlt
adc
(bad)
xor
rcr
ret
mov
jne
cmp
dec
pushf
loope
daa
jo
fistp
pop
fisttp
ins
jge
inc
adc
cmp
imul
mov
and
dec
mov
inc
push
xchg
inc
movs
jne
sbb
jmp
dec
ds
xor
push
out
xchg
in
mov
push
hlt
push
aas
mov
cli
and
inc
push
pop
shl
ds
jae
add
mov
sbb
addr16
xchg
mov
xchg
sub
sub
std
mov
adc
mov
sbb
xchg
cs
pop
mov
js
xor
or
cmp
mov
(bad)
aad
pop
add
and
arpl
pop
test
test
cmp
ficomp
adc
or
outs
mul
pusha
in
dec
mov
dec
sub
cdq
leave
in
mov
or
iret
fiadd
stc
bound
cmp
cmp
inc
outs
adc
(bad)
and
jle
retf
push
xlat
push
setle
cmp
xor
push
jecxz
jmp
add
mov
xor
push
mov
(bad)
sar
mov
arpl
pop
pushf
(bad)
xchg
arpl
jne
add
cdq
xor
xchg
jo
imul
xchg
out
pop
pop
mov
lea
dec
push
call
rol
hlt
shl
call
inc
mov
push
jge
jecxz
idiv
push
nop
push
leave
pushf
jbe
push
add
jno
mov
cmp
jge
jmp
sub
or
jb
retf
adc
fs
jecxz
repnz
enter
inc
cmps
es
cmp
and
inc
out
fcomp
fsub
push
and
dec
cmps
sahf
fisubr
mov
jno
sbb
xchg
mov
into
movs
adc
fidiv
imul
inc
in
ret
sub
cs
pop
push
xchg
pop
and
pusha
inc
xor
imul
cmps
std
xchg
js
adc
mov
add
imul
mov
push
das
push
idiv
push
fwait
(bad)
movs
sbb
lods
or
cmp
push
nop
sbb
push
sub
stos
ds
mov
pop
fnstcw
les
sub
(bad)
jae
enter
push
mov
ret
test
dec
adc
xchg
mov
les
mov
(bad)
jecxz
mov
popa
mov
mov
push
mov
pop
nop
loop
fwait
je
cmc
add
retf
ds
push
es
cmp
sub
mov
mov
mov
inc
out
int3
inc
aad
and
xor
(bad)
cmps
ror
mov
fcomp
add
dec
push
mov
repnz
ins
xor
or
test
mov
das
daa
ror
test
dec
ret
xor
icebp
mov
lea
inc
dec
sahf
(bad)
cmps
mov
push
cld
scas
push
arpl
inc
pop
or
out
fisubr
xchg
fimul
call
sub
loope
dec
ja
cmps
push
shl
in
inc
adc
jno
and
in
mov
mov
inc
push
cmps
test
mov
gs
dec
stc
cmp
push
pop
iret
ret
hlt
outs
gs
jg
cwde
mov
scas
sbb
ins
imul
aad
mov
lea
sbb
sbb
mov
mov
cld
pushf
gs
mov
and
rol
add
and
dec
aad
jbe
scas
scas
popa
xchg
movs
sub
mov
pop
aam
adc
xchg
mov
or
ror
call
cmc
das
sub
inc
mov
movs
pop
mov
xor
lods
xchg
cmc
jg
jne
mov
ds
xor
push
jmp
mov
add
fdivr
xchg
cmp
es
std
push
pushf
pushf
xor
(bad)
stc
jb
push
cmp
jg
int
in
rol
sub
jae
pop
lods
cmp
add
stc
push
lock
nop
in
add
mov
lds
jle
jb
popf
test
mov
clc
and
jmp
or
(bad)
lods
rcr
in
sbb
pop
aam
cmp
and
out
outs
inc
cmp
scas
in
mov
xor
lods
and
hlt
mov
mov
and
pop
mov
or
iret
and
cwde
sbb
std
out
(bad)
clc
cmp
inc
xchg
push
or
sbb
movs
fucomip
addr16
push
mov
pop
sbb
pop
mov
push
fcmovu
dec
inc
mov
fsub
inc
fdivr
cmp
jns
sub
dec
jb
adc
xor
call
pop
mov
cwde
sbb
in
daa
jle
loopne
(bad)
call
mov
xor
mov
dec
movs
shl
add
or
(bad)
scas
(bad)
jmp
popf
movs
mov
or
cwde
add
mov
xchg
mov
xchg
popf
leave
dec
popf
shr
ret
movs
and
test
add
cdq
push
sbb
outs
sbb
inc
mov
mov
add
pusha
je
sar
inc
xor
neg
(bad)
fst
js
ss
xor
adc
xchg
inc
fsub
mov
sbb
cmp
push
pop
cs
lahf
cwde
cmp
sbb
mov
imul
xchg
(bad)
into
aaa
xchg
xchg
sti
cmp
scas
neg
sahf
pop
xchg
pop
push
xchg
test
fmulp
pop
outs
popa
cmp
push
cmp
push
in
not
arpl
leave
retf
pop
pop
mov
jmp
push
bound
adc
add
xchg
loope
add
movs
popf
mov
mov
xchg
cmp
bound
repnz
sbb
pop
add
inc
retf
pop
movs
mov
jge
dec
retf
gs
loope
(bad)
sbb
sbb
jo
pop
xor
movups
loop
fwait
mov
cmps
js
dec
test
sub
mov
sub
xchg
repz
aas
or
mov
retf
and
and
and
loopne
imul
ror
cmc
cdq
stc
test
jl
add
fisub
xchg
mov
push
in
and
add
adc
jle
shl
adc
and
fistp
stos
idiv
inc
fmulp
push
loopne
stos
das
int
dec
pop
enter
mov
fcom
cmps
xor
cmp
jmp
jl
icebp
leave
enter
add
scas
sahf
(bad)
das
jmp
sti
pop
pop
adc
cmps
xchg
in
inc
inc
xlat
cld
dec
repz
xor
jle
jp
sbb
push
jg
add
aaa
inc
inc
jge
xchg
cmp
and
fldcw
or
jno
pop
test
jns
push
xchg
arpl
sti
xchg
dec
sbb
cmp
inc
xlat
clc
jns
fwait
pop
push
sbb
cmp
pop
mov
jno
cli
push
dec
or
int3
pop
inc
out
inc
cmp
arpl
add
xchg
mov
repz
push
cmp
pop
mov
jno
mov
fisub
dec
sbb
dec
add
lock
cs
rol
retf
mov
enter
xor
push
fmul
mov
sbb
pop
dec
test
fisttp
inc
mov
stos
lahf
dec
dec
lock
cwde
shl
adc
mov
das
xchg
and
add
lds
or
aas
out
dec
call
(bad)
inc
xchg
jg
scas
jns
xchg
sub
jmp
or
outs
or
sub
es
test
xor
or
(bad)
addr16
test
push
mov
stos
sbb
shl
inc
dec
les
dec
sbb
and
dec
and
lods
ins
icebp
arpl
mov
or
popf
sahf
icebp
mov
xlat
xor
ss
jno
cmp
cmp
jmp
js
rcr
mov
adc
and
push
mov
leave
leave
repz
push
(bad)
mov
sbb
mov
or
xor
mov
add
ss
cmp
jmp
rcl
or
out
dec
pop
outs
inc
mov
inc
inc
loopne
xor
pop
cmp
sub
pop
pop
sub
fwait
mov
sub
push
test
sbb
mov
mov
xchg
mov
mov
das
cs
jb
mov
adc
mov
lods
ja
jmp
jmp
aas
adc
sbb
and
mov
or
ss
iret
inc
retf
(bad)
enter
add
es
leave
xlat
mov
pop
rol
push
loopne
bound
mov
add
jae
leave
js
add
lock
push
push
xchg
xchg
add
stos
mov
(bad)
cdq
bsf
imul
cmps
movs
sub
arpl
add
lock
cmc
pop
in
and
xchg
cmp
and
jne
jp
idiv
repz
push
add
xchg
mov
mov
fimul
test
or
and
imul
mov
cmp
mov
push
pop
lea
shr
add
ins
or
dec
fistp
and
jnp
sar
call
sbb
inc
adc
je
xor
mov
dec
sbb
xor
ds
or
adc
cmp
mov
je
or
lahf
repnz
sub
imul
out
mov
or
jge
in
fiadd
and
inc
call
inc
mov
xchg
data16
push
xchg
inc
jl
add
stc
dec
js
(bad)
push
inc
sub
or
sub
psubw
lods
xchg
repnz
fsub
imul
and
leave
xchg
push
in
push
(bad)
mov
je
jbe
xchg
push
cld
pop
sbb
mov
push
dec
fimul
in
push
jne
mov
outs
sahf
push
test
loopne
cmp
dec
jnp
xor
lods
sti
sbb
mov
loop
mov
mov
outs
xor
jge
leave
push
outs
xchg
or
jno
dec
inc
out
bound
mov
xor
and
pushf
xchg
cwde
inc
jg
ds
not
dec
les
xor
movs
in
or
inc
or
add
jp
aad
(bad)
ret
fldenv
push
outs
nop
scas
int
sti
fiadd
ins
pop
push
fcomp
(bad)
jp
sub
into
int3
xor
inc
sub
test
push
enter
inc
outs
cmps
add
lock
jne
(bad)
into
mov
pop
or
(bad)
aas
mov
sbb
sub
jl
pop
(bad)
fs
popf
ficom
in
lods
mov
in
adc
aam
mov
jmp
popa
(bad)
in
rcl
mov
nop
out
sbb
rcl
inc
push
iret
xor
inc
and
pop
xor
push
jle
mov
adc
sti
hlt
(bad)
push
pop
ret
push
add
dec
stc
stc
or
cmp
sbb
pop
mov
push
mov
retf
adc
sbb
fwait
jns
sti
cmp
xlat
or
inc
ficom
aaa
test
fs
sub
mov
sub
jge
sahf
mov
push
add
fcmovbe
sbb
out
add
lods
add
xchg
bound
cmps
pop
xchg
(bad)
xchg
adc
push
mov
idiv
push
push
xor
inc
in
leave
and
mov
inc
int3
push
push
jnp
push
imul
stos
dec
sar
mov
sbb
jnp
jbe
mov
xchg
pop
sbb
mov
out
add
scas
es
xchg
aas
aas
dec
dec
adc
jl
neg
and
(bad)
ins
pop
in
push
add
sbb
mov
test
or
out
adc
nop
xor
adc
cdq
aaa
cmp
inc
ins
aam
cmp
push
in
(bad)
mov
sub
jle
sbb
mov
imul
sbb
inc
mov
sub
dec
imul
and
out
in
xor
call
jge
das
adc
inc
cld
aad
pop
icebp
out
repz
js
fcomp
jmp
(bad)
xor
add
xchg
js
ret
sti
jmp
xchg
imul
xor
hlt
cmc
cmp
mov
arpl
xchg
cld
sti
xlat
test
push
imul
cdq
and
pop
shl
push
nop
retf
mov
lock
call
pop
test
xchg
dec
jne
jp
movs
or
or
pop
fild
and
sbb
xchg
cmp
jmp
dec
push
retf
arpl
(bad)
mov
pushf
push
push
in
out
hlt
jno
fcomp
xchg
gs
pusha
aad
sbb
das
cld
ret
fimul
push
ret
pop
(bad)
out
out
bound
push
leave
popa
xchg
and
push
mov
mov
push
xor
xchg
mov
mov
inc
dec
into
cmp
dec
jae
inc
iret
shl
push
imul
fs
mov
ret
rol
pusha
out
add
mov
mov
pop
retf
aam
add
cmp
xlat
adc
scas
addr16
inc
push
xor
mov
cmc
jmp
dec
das
imul
pop
mov
mov
out
clc
repnz
add
xchg
jne
icebp
xchg
jae
add
sbb
push
shl
fcmovu
jb
add
test
fs
push
add
pop
jnp
push
in
cmp
into
jo
pop
push
cld
scas
clc
inc
lds
sbb
pop
add
es
fmul
push
push
cmp
cmc
mov
mov
sahf
shld
sti
mov
sbb
mov
call
cmp
and
shl
into
dec
xchg
sub
push
imul
jae
mov
adc
and
cmps
in
shr
fimul
leave
test
pop
outs
push
and
imul
(bad)
shl
popf
or
cmc
ja
mov
outs
jl
cs
repnz
shl
xchg
fwait
jmp
not
(bad)
cmc
xchg
cli
loop
call
mov
mov
ret
imul
sub
aaa
cmps
and
or
in
jl
xchg
dec
call
(bad)
fsub
or
or
adc
retf
cld
adc
xchg
inc
mov
and
xchg
imul
jp
stc
and
jp
add
push
lea
(bad)
ret
add
sub
push
(bad)
fistp
scas
movs
js
scas
fld
pushf
xor
sbb
jnp
out
sbb
inc
cmp
call
xor
mov
jns
inc
mov
mov
mul
call
mov
jb
pop
or
jp
addr16
ja
lock
cmp
push
push
fisubr
jmp
mov
out
rcl
test
sahf
mov
repz
or
into
add
fs
dec
in
mov
aas
sub
or
nop
xor
pop
jmp
xor
loopne
popa
test
pop
xchg
and
jo
jbe
mov
inc
xor
sbb
and
(bad)
movs
retf
daa
psubb
maxsd
xor
push
jnp
sub
not
ret
jp
mov
rcr
loop
cmp
fsubr
arpl
arpl
adc
cmps
jbe
jmp
jle
fistp
cli
aam
xor
gs
or
test
jnp
fisubr
cmps
dec
push
shr
outs
bound
dec
js
cld
xor
jo
add
inc
in
sub
xchg
fsubr
jp
cmp
adc
mov
sbb
dec
or
mov
nop
out
(bad)
shl
add
cs
into
dec
in
jge
fldcw
ins
adc
mov
push
mov
hlt
and
ja
enter
in
pop
movd
jecxz
lods
jl
sub
adc
mov
pop
sbb
pop
xor
push
repnz
push
mov
nop
jbe
ficomp
push
jmp
fist
out
mov
xchg
add
jbe
sbb
mov
mov
and
and
inc
call
jmp
lods
pop
inc
xor
inc
(bad)
iret
and
xor
xchg
adc
loop
jno
hlt
aad
pop
mov
scas
iret
stos
hlt
call
inc
push
iret
out
shl
jge
xchg
call
or
pop
imul
test
pop
xchg
cwde
push
xchg
aad
cs
xchg
mov
(bad)
fld
mov
addr16
lock
out
pop
or
push
ds
adc
adc
cmp
xor
imul
xchg
in
lods
jl
mov
dec
jg
mov
popa
test
inc
int
je
stos
add
sub
xchg
and
and
add
xchg
push
cmc
adc
imul
call
dec
jae
cld
or
jbe
or
dec
jnp
in
push
cli
xchg
outs
(bad)
outs
adc
test
mov
in
jns
cs
aam
sar
sub
call
jb
ret
ja
(bad)
mov
cwde
inc
push
js
fs
(bad)
mov
aas
int3
cmp
sub
std
jnp
and
and
mov
shl
(bad)
cli
push
or
popa
in
loopne
fcmovu
lock
pop
inc
adc
cmps
sub
or
into
cld
test
jmp
nop
sar
add
fidiv
aam
jo
push
jecxz
or
stc
stos
mov
hlt
jb
enter
sub
out
and
jl
xchg
mov
xchg
sbb
stos
push
jno
fmul
iret
ds
ja
jge
aas
retf
jg
add
loop
int3
test
cmps
ins
mov
int
pop
jno
cwde
pop
xchg
jecxz
jo
fs
pop
mov
mov
in
jb
inc
repz
cwde
sub
scas
fsubp
xor
cmps
xor
push
push
ds
test
not
stos
mov
inc
outs
fldcw
ins
xchg
cmps
mov
sahf
add
sub
push
lahf
cmp
xor
mov
mov
icebp
push
cmp
cli
in
add
outs
xchg
cmp
idiv
aas
xchg
and
aad
pop
mov
or
cmp
push
lock
call
mov
sub
xor
or
bound
(bad)
jbe
and
jecxz
dec
pop
fwait
mov
jle
or
lods
popf
fs
xor
(bad)
leave
jg
jb
(bad)
xor
mov
ret
test
stos
popa
adc
popf
scas
xchg
adc
xlat
and
inc
jae
out
lahf
ficom
in
movs
sar
enter
aad
(bad)
test
jae
xor
int
in
push
or
fstp
mov
mov
sub
fistp
gs
sar
nop
stos
sbb
fld
pop
aad
dec
imul
xchg
test
xchg
cwde
sar
xchg
jmp
in
retf
lods
cli
(bad)
and
lods
fisubr
test
mov
jecxz
int3
push
mov
or
sbb
ins
fcom
lds
jmp
push
adc
in
jg
mov
add
xchg
retf
es
lock
mov
jae
or
xor
pusha
hlt
dec
int3
mov
push
mov
push
sbb
(bad)
xor
and
cmps
push
je
imul
jno
imul
inc
mov
shl
in
shl
int
or
dec
enter
mov
cmp
(bad)
and
pop
cmp
fiadd
mov
pusha
leave
xchg
loop
pushf
push
daa
mov
stos
dec
ja
push
ss
pop
repz
and
call
cmps
sbb
push
pop
add
cmp
mov
dec
and
sti
sbb
push
jl
fisttp
sub
mov
aam
jo
stos
push
jb
push
dec
dec
pop
jb
clc
lahf
jp
cmc
frstor
retf
inc
jge
out
xor
sub
in
pshufw
scas
and
cmp
mov
push
push
in
and
pushf
cmp
stos
gs
retf
and
mov
mov
lods
aas
jnp
dec
cmp
xchg
iret
cmp
(bad)
adc
adc
and
int
fld
mov
mov
xor
push
sub
and
fdiv
add
push
movs
adc
mov
push
mov
push
xor
dec
xchg
fcomip
leave
(bad)
(bad)
push
sbb
mov
adc
push
cmp
push
fst
or
mov
ret
addr16
push
sbb
cmp
push
jns
or
fistp
out
cmp
(bad)
mov
jmp
dec
stos
nop
ffreep
cdq
(bad)
je
mov
repnz
and
ds
or
int3
addr16
mov
hlt
inc
and
inc
ja
gs
mov
dec
test
fidiv
cwde
stos
or
mov
stos
xchg
mov
fpatan
in
cs
cli
jmp
push
sbb
in
jnp
repz
sahf
daa
ret
(bad)
push
or
cmp
movs
std
xor
sub
or
cmps
mov
jo
or
(bad)
pop
jp
fsubrp
sbb
and
push
jmp
daa
or
push
add
(bad)
jl
fistp
mov
lock
ja
sub
fs
adc
xchg
iret
aam
mov
jb
dec
pop
push
jae
add
dec
mov
add
(bad)
stc
inc
cmps
sbb
jb
adc
iret
aas
sti
jmp
mov
(bad)
ds
xchg
cmps
dec
gs
aaa
and
repz
xchg
cmp
adc
push
mov
icebp
aad
cli
pushf
mov
sub
gs
cwde
addr16
test
sub
dec
mov
enter
and
mov
aaa
std
movs
inc
xlat
xchg
gs
and
dec
jle
es
inc
(bad)
xor
add
popa
dec
movs
push
inc
jmp
sti
jb
adc
mov
push
test
and
stos
shr
xchg
mov
jae
(bad)
adc
push
lds
(bad)
(bad)
fldenv
(bad)
dec
hlt
pushf
retf
push
adc
mov
leave
in
into
fimul
dec
into
sub
lds
jp
es
sbb
xor
(bad)
inc
lock
hlt
jbe
movs
fisubr
jne
fcmovne
mov
push
mov
rcr
out
outs
xchg
pushf
and
movs
in
cwde
iret
and
sbb
(bad)
xor
xchg
into
movs
in
int
fld
and
jg
pop
sbb
add
loop
adc
push
call
mov
add
mov
aam
(bad)
pop
or
lods
mov
jge
(bad)
retf
lds
out
(bad)
mov
xor
arpl
loope
jmp
addr16
xor
mov
pop
jge
out
adc
push
in
(bad)
push
pop
ds
outs
inc
push
cli
mov
shl
push
int3
imul
fst
fcomp
sub
inc
adc
xchg
int3
push
pop
leave
(bad)
xor
pop
popf
movs
(bad)
shl
stos
and
pop
shl
pop
mov
fs
and
cs
lds
xor
xchg
ja
dec
cmp
(bad)
add
or
fmul
add
fbstp
call
pop
sbb
loopne
leave
mov
pusha
cmp
ror
and
ins
stos
retf
mov
stos
mov
sub
scas
cdq
push
popa
hlt
lock
repnz
mov
(bad)
mov
push
or
iret
outs
ja
mov
aad
int3
sbb
call
into
jmp
call
add
or
and
and
sub
mov
pop
cmp
test
js
push
lods
inc
(bad)
stos
sbb
and
push
xor
push
sub
mov
es
call
cmps
pop
jo
fnstenv
pop
aaa
in
xchg
push
add
fcomp
ins
imul
gs
mov
inc
xor
adc
loope
in
(bad)
mov
pop
addr16
retf
push
fstp
inc
iret
and
test
jb
or
cmps
cmp
test
sti
dec
and
in
daa
jae
xchg
lahf
mov
mov
adc
jo
and
iret
adc
add
jb
jb
sub
mov
gs
daa
sbb
and
rcr
mov
neg
jbe
and
and
sub
jp
and
ss
iret
mov
movs
add
mov
xchg
fidivr
sbb
jno
loop
popa
retf
inc
jmp
je
(bad)
in
mov
jmp
mov
jmp
or
lock
pop
add
xchg
cmc
adc
shr
dec
or
daa
xchg
and
dec
div
xchg
dec
out
xchg
shl
pop
cwde
xor
cmc
jg
mov
sub
xor
sub
jmp
mov
out
cmps
sti
sub
les
pop
imul
add
iret
add
push
ret
sbb
(bad)
sub
rcl
addr16
sub
cmps
jae
push
inc
daa
jg
dec
repnz
loopne
loopne
fwait
cli
adc
ror
mov
outs
mov
mov
jb
ficom
pop
mov
sbb
std
mov
inc
mov
cmp
bound
dec
push
stos
scas
pop
nop
xor
dec
in
push
(bad)
jo
mov
sbb
cmps
aas
fist
jno
imul
sbb
arpl
(bad)
jo
pusha
adc
aam
pop
xchg
in
push
rcr
(bad)
in
mov
mov
jl
jecxz
dec
jge
sbb
fwait
push
sbb
nop
mov
dec
ds
sbb
nop
sbb
xor
rcl
add
mov
inc
nop
pushf
fwait
cld
pop
cwde
push
xor
(bad)
cmc
lahf
add
pushf
jae
inc
ret
imul
dec
xchg
ret
movs
add
mov
inc
sub
mov
inc
mov
repz
push
(bad)
lock
xor
adc
hlt
arpl
push
pop
push
pop
clc
test
ins
popf
or
mov
popa
add
leave
jmp
add
dec
out
movs
leave
cmps
out
mov
iret
cmp
cmps
(bad)
imul
sahf
out
cdq
jmp
rol
xor
sub
cli
mov
leave
rol
cs
push
retf
mov
test
cmps
idiv
and
mov
lods
fst
push
xchg
mov
mov
adc
ins
jmp
mov
(bad)
jp
dec
pusha
daa
bound
xor
test
pop
push
ins
dec
pop
call
mov
cmp
or
out
rcl
xchg
ret
push
fisttp
add
add
je
sbb
xchg
(bad)
cld
(bad)
mov
add
pop
jns
xchg
sbb
(bad)
std
inc
sub
xchg
das
test
cmp
fistp
(bad)
mov
sbb
push
inc
test
xchg
mov
sbb
mov
std
cmps
int
nop
mov
out
or
add
hlt
scas
dec
jecxz
(bad)
cmp
mov
shl
fucomp
std
inc
(bad)
adc
shr
sub
add
mov
je
in
adc
fild
xchg
adc
and
loop
sar
movs
lahf
cs
mov
xchg
(bad)
jns
mov
or
aaa
push
js
xchg
sbb
dec
retf
lea
arpl
ds
leave
and
test
test
adc
lods
call
rcr
retf
cmp
sub
mov
cmp
jmp
rcl
mov
mov
mov
mov
loopne
pop
adc
(bad)
lock
popf
pop
daa
xchg
push
mov
adc
push
aas
jmp
jno
ret
or
jg
daa
test
push
in
xchg
imul
xor
data16
clc
pop
ins
fidivr
mov
and
push
bound
std
cmps
push
enter
jno
scas
inc
jb
loopne
sub
mov
adc
je
mov
fst
cmp
cmps
fdivp
scas
fwait
or
jge
mov
retf
jno
mov
fst
xor
pop
push
and
pusha
mov
and
dec
jle
pop
adc
retf
shl
inc
mov
sub
icebp
mov
repnz
lahf
retf
rcr
in
dec
mov
pop
in
xor
fnstcw
scas
in
xor
jbe
or
add
push
and
sahf
scas
adc
inc
inc
mov
mov
jecxz
dec
add
mov
sub
shl
leave
sbb
sbb
bnd
and
mov
je
push
movs
(bad)
mov
sbb
inc
adc
scas
xor
xor
popf
retf
fld
imul
sti
cmc
ja
cmps
hlt
cmps
push
jbe
les
push
in
mov
inc
fidivr
jp
fistp
cs
and
fsubr
pop
lock
cs
icebp
ss
sub
inc
add
(bad)
fisttp
mov
aas
(bad)
data16
imul
and
or
mov
test
dec
aaa
pop
adc
sub
test
xor
sbb
push
daa
add
ja
(bad)
push
retf
mov
lahf
push
daa
sti
cmp
or
cmp
mov
mul
jno
jbe
mov
clc
mov
sub
dec
or
jne
popa
jo
cmp
push
jge
sysret
out
loop
and
or
inc
sub
mov
out
aad
cwde
movs
mov
in
addr16
or
mov
fisubr
fnstsw
fistp
pop
ret
stos
(bad)
out
fcom
retf
dec
imul
dec
inc
loop
sbb
pop
dec
xchg
adc
or
rol
imul
dec
adc
and
fadd
cmp
or
mov
imul
sub
or
das
out
sbb
in
dec
scas
mov
xlat
add
mov
and
mov
daa
iret
out
bound
xor
fcmovnu
inc
mov
mov
inc
call
cs
cmp
mov
loopne
in
mov
adc
or
push
nop
sbb
cld
mov
pop
scas
jns
jb
push
outs
call
inc
cmp
mov
xchg
jmp
adc
xchg
out
arpl
mov
and
xor
clc
add
mov
sub
arpl
repz
push
stos
mov
loope
mov
inc
adc
xchg
xchg
cmps
cmp
xor
dec
repz
inc
mov
(bad)
pop
push
popa
std
in
sbb
jnp
dec
js
xchg
iret
sub
dec
mov
(bad)
(bad)
and
jg
mov
xchg
out
sub
data16
retf
(bad)
xchg
push
add
and
jg
mov
inc
pop
push
adc
sbb
inc
inc
mov
push
xor
add
popf
dec
ret
lock
mov
fcom
xor
stc
sbb
xor
test
jecxz
dec
mov
push
xchg
add
jbe
mov
mov
es
mov
(bad)
rcr
or
jbe
lods
xchg
les
mov
idiv
xchg
jle
or
nop
pop
cwde
jle
xor
sbb
ins
jge
into
mov
cmp
(bad)
cmp
lock
mov
dec
jb
cmp
mov
ss
cdq
popa
addr16
out
xlat
add
sub
push
cmps
jae
pop
adc
pop
push
mov
ror
popf
out
repz
xor
mov
push
adc
or
and
ret
and
aam
(bad)
test
push
retf
sub
loopne
scas
pop
ror
add
pop
jnp
mov
add
sub
cmc
mov
add
add
dec
mov
stos
inc
cmp
inc
pop
dec
push
mov
dec
add
pop
or
pop
call
std
in
popa
out
cmp
mov
leave
test
jecxz
sub
jmp
repnz
loop
push
in
jae
dec
ffreep
(bad)
dec
pop
dec
push
jae
inc
or
dec
dec
inc
mov
ret
in
pop
sbb
dec
push
xlat
dec
cdq
pop
and
daa
inc
div
out
jae
inc
or
xchg
add
sbb
xchg
mov
inc
dec
xor
xchg
fmul
jno
cmp
rcl
add
cld
jg
sub
push
test
cmp
stc
jb
dec
sar
cmp
jns
out
inc
sbb
xchg
clc
and
adc
fmul
pop
das
(bad)
imul
std
scas
cmp
aaa
lock
out
fiadd
or
push
inc
push
aas
fwait
mov
jae
xchg
fild
rcl
mov
xor
sbb
xlat
and
lods
outs
mov
jge
ror
inc
xor
pop
jbe
xlat
mov
je
inc
je
add
xor
pop
dec
rcl
das
imul
jb
and
(bad)
mov
jae
or
fadd
add
xchg
out
dec
inc
cmc
ficomp
das
shl
xchg
jecxz
and
push
leave
xchg
push
and
divps
xchg
or
dec
into
push
xor
aad
imul
out
jmp
ret
into
dec
mov
ja
mov
mov
pop
pop
repnz
push
call
fdiv
shr
adc
cwde
ret
jge
inc
data16
hlt
adc
pop
and
fstp
shl
xor
clc
sub
in
mov
and
and
mov
mov
retf
mov
dec
dec
inc
mov
dec
fst
lods
scas
mov
inc
shl
iret
ffreep
das
xchg
cmp
push
in
inc
pop
inc
cmps
mov
pop
bound
cli
jno
lahf
inc
dec
aaa
lods
rol
shr
jae
int
lock
jmp
ret
ror
aaa
hlt
push
daa
outs
ds
movs
xchg
inc
jno
add
rcl
mov
pop
lods
sub
mov
inc
jecxz
jp
xchg
mov
mov
out
add
out
xchg
dec
imul
ficom
add
jl
in
(bad)
add
jmp
retf
pop
test
pop
jno
add
ss
jmp
add
adc
cmp
jbe
out
push
add
jg
mov
hlt
lahf
rcr
mov
pop
(bad)
mov
in
mov
fsub
push
add
sar
ins
je
sbb
pop
out
call
out
mov
fwait
rcl
cli
movs
jns
and
push
cmc
mov
mov
out
lea
mov
stos
dec
shl
fwait
sub
pushf
mov
stos
pop
mov
jmp
xchg
jne
or
cdq
lahf
push
xchg
ficomp
enter
adc
int3
lods
lea
(bad)
pop
sub
(bad)
daa
jg
jnp
and
jmp
data16
loopne
xor
jge
fisttp
push
add
dec
and
mov
fwait
(bad)
mov
xchg
inc
jae
pop
jbe
sbb
fstp
loopne
and
or
dec
bound
test
jne
mov
jge
lock
test
mov
dec
add
cli
lock
xchg
lahf
sbb
aam
fisub
jns
cmp
mov
(bad)
cmp
std
aam
and
and
dec
mov
push
mov
outs
xor
jne
sub
out
idiv
mov
hlt
pushf
push
cmp
jmp
rcr
imul
iret
adc
xor
push
in
pop
clc
mov
out
ss
pop
dec
xor
js
push
jb
cld
adc
inc
fcmovnb
pop
ret
popf
dec
loopne
in
adc
jnp
shr
daa
add
cmp
popf
add
adc
adc
mov
mov
sub
xlat
and
hlt
pop
dec
test
retf
jmp
jae
xchg
call
inc
ror
call
pop
stos
int
sub
scas
jl
xchg
jge
lahf
inc
ds
data16
mov
test
or
lods
pushf
js
xchg
pop
stos
cmc
pop
add
cdq
shl
shl
stos
mov
pop
adc
xchg
fist
jo
jb
nop
or
sahf
loop
cli
mov
cs
xchg
push
mov
int3
out
dec
jg
jg
enter
or
dec
pop
mov
cs
cdq
aaa
sub
and
and
jg
inc
cld
add
jmp
cmp
ucomiss
add
jp
add
imul
sbb
push
fnstsw
adc
(bad)
jmp
cmps
jle
add
cmp
jno
ficomp
mov
jne
and
aaa
inc
stos
lds
push
into
cmp
xchg
cmps
mov
xchg
rcl
mov
test
sar
pushf
idiv
push
add
mov
jo
jae
pop
test
or
rol
dec
ret
rol
pop
pushf
retf
mov
xchg
les
push
jp
push
pop
inc
sbb
rcl
dec
jecxz
pop
mov
cmp
jno
adc
scas
test
jo
(bad)
xchg
imul
ret
loopne
add
and
mov
push
cmp
hlt
test
mov
xchg
pop
pop
push
push
addr16
xchg
outs
push
push
or
in
arpl
mov
lods
mov
es
cmp
sbb
mov
into
pushf
inc
mov
out
ret
repz
(bad)
hlt
xor
inc
and
shl
inc
out
ss
out
xchg
jmp
mov
das
out
ds
cmp
loopne
shl
int3
inc
nop
shr
inc
clc
or
sbb
cmp
(bad)
jmp
mov
or
stos
xor
retf
dec
adc
xchg
jl
mov
and
adc
pop
push
ins
test
push
add
loopne
repz
ror
nop
in
(bad)
add
mov
mov
call
add
add
das
fild
icebp
jmp
mov
mov
repnz
jmp
loopne
adc
in
jg
inc
nop/reserved
cmps
pop
xor
push
add
aam
das
and
mov
jmp
xchg
ss
sub
pop
into
pop
pop
adc
scas
adc
add
cdq
mov
add
and
xchg
mov
add
push
mov
jb
mov
sub
push
retf
pop
pop
dec
pop
dec
mov
aaa
lods
sub
add
xchg
sbb
and
add
retf
mov
adc
inc
out
ret
jle
push
mov
dec
mov
xchg
rcr
inc
call
enter
xacquire
ins
(bad)
sbb
into
pop
inc
imul
ss
daa
add
das
inc
or
sub
inc
mov
add
sbb
inc
jnp
lock
push
sub
pop
out
imul
es
ret
xchg
test
ss
and
xor
and
jmp
test
jno
fdivr
dec
add
inc
test
call
jmp
mov
cmp
cld
mov
fisttp
retf
or
gs
or
lods
inc
fsubr
sbb
inc
jno
sub
imul
loopne
jle
mov
jo
inc
clc
pop
sar
sbb
scas
dec
int
scas
add
out
outs
add
xor
movs
cli
adc
jg
(bad)
in
jl
adc
xor
out
jmp
and
sbb
pop
mov
and
sbb
jmp
and
pop
ret
in
dec
add
sahf
push
cld
cmc
sbb
mov
cmp
ss
cmp
fwait
icebp
inc
xor
loope
adc
mov
fnstsw
xor
xchg
push
pop
outs
fistp
mov
or
fdivr
jns
int
pop
adc
outs
pop
mov
(bad)
test
sbb
out
cmp
mov
push
scas
xor
xor
mov
add
push
(bad)
push
mov
rol
adc
inc
stos
sbb
sbb
popa
sahf
(bad)
push
or
adc
sbb
inc
scas
adc
sub
shl
adc
jp
jne
jg
mov
add
push
and
cmp
imul
xchg
inc
fwait
call
mov
icebp
repnz
sub
and
or
inc
cmp
out
adc
inc
and
jle
test
pop
aaa
mov
nop
jae
aad
ins
mov
or
xlat
mov
add
fiadd
xchg
sbb
dec
and
push
pop
clc
or
les
jg
mov
popa
cmps
dec
jl
mov
jne
icebp
nop
pop
push
jmp
cwde
fdivr
lahf
dec
adc
xchg
adc
mov
push
jnp
and
add
imul
rcl
adc
jl
xor
mov
xor
add
js
sub
inc
add
outs
out
jno
pop
jns
xor
sbb
adc
test
mov
pop
out
lock
and
loop
push
dec
lods
aad
cmp
xchg
jnp
or
fdiv
jns
leave
(bad)
test
iret
pop
xchg
mov
gs
icebp
add
dec
push
ds
aaa
and
outs
inc
jb
pop
fucomip
jecxz
and
lahf
adc
pop
repnz
mov
outs
inc
and
cmp
cmp
imul
fcmovu
inc
imul
or
int
rol
add
rol
mov
push
ret
out
(bad)
mov
pusha
jno
sub
cmps
push
mov
push
sub
fbstp
(bad)
fs
imul
aad
ja
enter
int
out
fdiv
or
jge
loop
ja
mov
stc
dec
add
adc
sahf
rcl
xchg
xchg
ds
mov
data16
fs
xchg
fadd
and
push
cld
xchg
jl
xor
adc
(bad)
test
or
add
xchg
iret
dec
test
dec
sub
xor
mov
test
hlt
test
add
stos
cmp
mov
xchg
call
fiadd
inc
inc
iret
mov
push
xor
pop
pushf
and
mov
cmc
push
xlat
cmp
jno
sbb
fcmove
xor
mov
scas
xlat
inc
ins
bound
adc
adc
mov
hlt
or
cmc
retf
hlt
lahf
or
in
xlat
cmps
imul
push
hlt
sbb
(bad)
jo
arpl
ins
or
push
pop
out
mov
imul
mov
pop
imul
(bad)
in
cmp
fldlg2
sar
sub
stos
fdiv
xor
cmp
or
ins
mov
scas
and
mov
mov
mov
imul
call
dec
mov
ret
inc
jl
inc
cmp
pop
fnsave
ret
xchg
movs
sbb
push
imul
jne
int
rsqrtps
pop
add
stos
mov
cld
outs
dec
mov
es
adc
mov
push
arpl
mov
das
cli
dec
cmps
rcr
xor
shr
sub
adc
mov
sbb
iret
cld
mov
ret
(bad)
jmp
adc
mov
call
and
test
xor
cmp
test
jmp
jo
add
lahf
test
out
mov
adc
or
add
in
inc
mov
fwait
xchg
std
shr
aaa
stos
call
mov
xchg
or
retf
add
mov
xor
outs
mov
cwde
dec
cs
or
rcl
pop
jb
xor
jle
rcr
stos
aas
xlat
bound
jp
js
or
inc
jno
push
mov
jae
loopne
dec
pop
inc
cmp
mov
mov
pop
pop
jl
cmp
je
mov
jmp
adc
mov
inc
mov
test
inc
repnz
xchg
out
jne
mov
xchg
xchg
out
(bad)
jmp
ja
mov
mov
stc
lea
test
lods
add
lea
inc
(bad)
sub
outs
out
retf
mov
pop
pop
lock
mov
test
scas
add
enter
push
jmp
cmp
sti
sbb
mov
ins
test
cwde
xor
aad
adc
jle
sub
pop
fs
lds
(bad)
mov
mov
arpl
shr
mov
sbb
(bad)
in
retfw
scas
and
test
movs
jne
out
int
repz
pop
or
pop
arpl
mov
pushf
ins
shr
mov
sbb
leave
pop
push
ret
jns
lock
jo
or
sti
scas
jbe
jne
push
xchg
adc
pop
aas
mov
mov
(bad)
xor
add
xchg
mov
movs
add
mov
ss
sub
jg
lock
sbb
(bad)
and
out
xor
xchg
xor
or
add
jge
jo
out
bound
cmps
dec
push
adc
mov
mov
dec
test
cmp
rcl
daa
movs
jecxz
(bad)
pop
pop
jo
xor
(bad)
xchg
sbb
pop
jnp
cmp
dec
jae
stos
jmpw
or
popf
scas
mov
sub
add
jmp
hlt
int3
sar
sub
dec
mov
mov
fdiv
loopne
or
sar
not
sbb
push
mov
(bad)
fsubr
sbb
loope
add
mov
stos
aam
xor
clc
pop
dec
and
ror
imul
and
adc
xor
dec
mov
sub
cmp
(bad)
pop
dec
lock
hlt
jmp
xor
push
outs
(bad)
pop
push
repz
xchg
sub
or
iret
xor
iret
fwait
(bad)
outs
jo
scas
ss
jmp
rcl
and
ins
jmp
das
aas
sti
inc
ror
xor
fstp
ficom
cdq
cmp
lea
jae
ret
xor
mov
aam
adc
jmp
xor
dec
rcl
movs
gs
ror
nop
imul
or
lahf
sahf
dec
leave
arpl
ret
(bad)
imul
call
movs
mov
pop
neg
push
int3
jg
jmp
add
push
xchg
sar
mov
retf
clc
stos
jne
inc
in
xchg
sub
xor
gs
inc
sub
jmp
rcl
mov
das
aam
xor
inc
cld
or
js
stos
jecxz
adc
pop
sbb
and
js
fcom
sar
jns
arpl
fsubr
xchg
cmps
movs
fistp
psllw
dec
clc
lds
pop
dec
sbb
retf
pop
sar
inc
out
mov
fwait
call
or
xchg
jmp
xchg
add
push
dec
movs
div
dec
sbb
fild
dec
adc
fnsave
dec
jno
push
sub
pop
jge
loopne
cmp
test
jns
loope
jp
jecxz
fwait
movs
pop
aas
jle
push
or
mov
aam
sub
movs
mov
mov
call
dec
sahf
jp
in
fist
push
mov
push
jl
(bad)
ss
push
mov
(bad)
sub
jge
lods
dec
out
add
push
cmps
into
ret
inc
je
stos
cmp
xchg
sbb
or
fsub
fisttp
add
xchg
sub
dec
inc
adc
and
jmp
cmp
cmp
sub
enter
and
sub
sub
push
add
mov
test
repz
mov
mov
add
iret
stc
xchg
dec
add
push
jns
(bad)
outs
sbb
or
push
test
push
mov
iret
jl
outs
mov
daa
aad
xor
push
dec
xor
xor
ret
xor
add
aad
push
sahf
cs
mov
ins
ss
cdq
nop
and
mov
in
xchg
sti
sahf
dec
push
or
jmp
pushf
(bad)
dec
arpl
out
mov
in
nop
cmp
push
lods
adc
add
bound
mov
shl
adc
jnp
xchg
sbb
sbb
push
or
jo
mov
jbe
mov
lea
rcl
or
js
in
movs
cmps
xlat
lahf
jns
rol
and
add
and
cdq
dec
fisub
retf
xor
js
in
shr
test
jbe
cwde
mov
fwait
mov
ja
pushf
in
fnstcw
lds
std
adc
push
nop
add
xchg
xor
cmp
dec
cmp
imul
cdq
arpl
cmps
cmp
ror
clc
dec
jae
push
call
push
and
jecxz
pop
(bad)
clc
hlt
xor
dec
lahf
cmps
inc
mov
pop
add
jb
sbb
std
xor
cmp
(bad)
popf
sbb
mov
mov
imul
test
xor
ret
enter
(bad)
adc
mov
jmp
pop
les
scas
and
std
imul
push
sbb
xchg
mov
aaa
mov
fld
xchg
add
mov
imul
es
pop
lea
ins
lds
(bad)
hlt
mov
xor
mov
fistp
(bad)
pop
mov
push
jb
sub
mov
addr16
dec
(bad)
sti
dec
pop
add
test
test
stos
pop
or
iret
or
push
fisttp
mov
shl
repz
shr
sbb
pop
adc
cmovp
or
push
out
fcomp
shr
jne
je
mov
and
repnz
mov
xor
dec
cmp
lods
add
mov
or
mov
repnz
rcl
loope
(bad)
ror
push
xor
stc
(bad)
(bad)
or
repnz
(bad)
lods
sub
xor
cld
ins
nop
xchg
dec
jmp
mov
pop
push
push
xadd
xchg
push
mov
cli
loopne
fadd
inc
mov
pop
test
adc
ja
fwait
popa
psrlw
ja
fcom
nop
fadd
push
jbe
dec
fistp
mov
in
mov
pop
mov
out
inc
add
pusha
outs
aad
dec
out
loopne
jmp
inc
sub
lods
and
in
call
in
mov
pusha
hlt
popa
popf
ret
lods
pop
inc
clc
out
jmp
imul
or
mov
es
push
(bad)
pop
stos
xor
mov
test
cs
call
(bad)
test
scas
mov
ins
mov
push
rol
test
cmp
pop
dec
fisubr
inc
hlt
neg
cdq
jbe
jmp
pop
and
ror
clc
sbb
in
push
ficomp
jnp
mov
xor
lahf
push
jae
xchg
push
shl
or
xor
(bad)
imul
xchg
ins
int3
dec
add
sbb
popa
inc
push
xor
lahf
retf
add
adc
add
push
add
xlat
add
and
dec
dec
and
stc
cwde
inc
dec
aad
(bad)
movs
into
shr
loop
ins
and
jle
push
mov
push
stc
test
push
xchg
neg
daa
imul
lahf
and
push
inc
push
mov
add
ret
stc
nop
dec
pop
dec
or
jae
push
cs
push
ins
outs
(bad)
sar
test
push
and
bound
cmp
mov
sub
fwait
pushf
ja
push
xor
adc
mov
xchg
(bad)
adc
ud0
loopne
ss
fcmovne
scas
cwde
fisubr
ds
mov
ss
mov
mov
jns
sub
add
ror
bound
xor
pop
retf
mov
shl
xchg
push
adc
pop
shl
(bad)
sbb
or
add
jno
dec
ficomp
or
jecxz
add
imul
das
jnp
push
sub
movs
sub
jge
aas
pop
pop
sub
mov
add
lock
ret
inc
retf
iret
imul
xor
int
in
movs
(bad)
mov
outs
arpl
cs
jmp
dec
pop
call
cmps
ds
je
push
cmc
outs
jmp
je
mov
xor
or
sub
stc
dec
xchg
aad
push
call
dec
jb
jae
clc
jp
sub
push
mov
dec
cmps
xor
sbb
mov
les
fstp
cmp
arpl
xor
mov
aaa
xchg
xchg
sub
dec
xchg
cmp
std
inc
xor
test
dec
std
pop
push
jge
(bad)
lods
ret
es
shl
add
aaa
mov
enter
push
or
jmp
push
rep
lods
int3
inc
jno
mov
jne
cwde
mov
xchg
lods
daa
in
ret
and
imul
cmp
arpl
jae
imul
push
aad
lock
push
jae
and
or
xor
mov
adc
jl
mov
fwait
xchg
stos
push
jl
out
cwde
fsqrt
jb
xchg
outs
xor
xor
adc
inc
push
in
mov
lods
jmp
ins
xchg
xchg
cli
repz
dec
add
std
cmp
jns
jbe
dec
rcl
fwait
xor
pusha
ret
jb
lahf
fs
popa
ds
sbb
add
mov
lods
or
rcl
cli
sub
jge
or
or
xchg
xor
jmp
arpl
sahf
mov
inc
xlat
repnz
shr
cmps
xchg
mov
xchg
neg
mov
jne
push
xchg
or
pusha
nop
scas
xchg
fwait
cmp
jnp
mov
xor
test
stos
adc
scas
or
jo
not
(bad)
test
rcr
jp
test
fnsave
movs
add
cwde
fldcw
loop
cmp
cmp
push
jp
mov
fsub
mov
lock
sbb
jne
sub
inc
aaa
cli
retf
or
jle
xchg
mov
pop
int
pslld
mov
add
xor
fimul
(bad)
ins
dec
or
xlat
cwde
xchg
sub
(bad)
mov
sbb
cmp
dec
repnz
stc
cdq
or
gs
adc
int3
inc
(bad)
nop
cmps
fdiv
lea
into
xor
call
retf
stc
push
push
pop
add
pop
pop
mov
fs
leave
shr
xchg
fcmovb
xor
adc
push
mov
(bad)
scas
lahf
cwde
sbb
xchg
sbb
retf
out
push
xchg
(bad)
lods
(bad)
aaa
push
ror
fs
or
xchg
inc
repnz
in
dec
in
push
inc
mov
jnp
or
repnz
fdiv
outs
cmp
jg
xlat
cmps
sub
fldcw
js
ret
adc
sub
in
push
popa
pop
and
cmps
push
and
pop
pushf
retf
push
jecxz
xchg
movs
lea
xchg
icebp
fdiv
mov
fisubr
rcl
xchg
sub
cmp
das
jecxz
outs
push
loope
stos
lock
inc
test
jno
mov
xor
cmp
mov
jle
mov
ins
cwde
inc
clc
je
jo
push
ins
push
lds
jb
outs
popf
cmp
jge
cmp
in
fmul
sbb
pop
push
mov
sbb
jmp
fld
fwait
pop
mov
push
stos
xor
cs
mov
mov
std
test
pop
or
jne
ret
and
mov
in
(bad)
xor
xchg
mov
(bad)
pusha
sbb
push
pop
aas
mov
mov
add
mov
popf
addr16
and
jg
mov
enter
inc
stos
repz
lods
mov
mov
push
xchg
mov
es
adc
pusha
or
dec
xchg
mov
retf
cmps
or
push
cmp
fist
scas
add
not
je
out
xchg
mov
clc
or
mov
pop
jnp
mov
outs
cmp
mov
fs
je
mov
push
mov
mov
mov
xor
sti
push
lea
cdq
cmp
adc
ins
retf
cld
jle
xlat
es
dec
cli
push
mov
popf
mov
pop
pop
jl
mov
jne
xor
mov
adc
xor
cmp
aam
add
inc
es
sub
adc
stc
pop
ds
xchg
popf
sub
jmp
mov
xchg
and
call
and
mov
and
sahf
in
rsm
retf
dec
fstp
pop
mov
mov
xor
xor
ret
loope
imul
bound
(bad)
retf
(bad)
sahf
push
imul
mov
xchg
sbb
mov
pop
mov
dec
cmp
mov
pop
xchg
call
sub
aad
jnp
pop
pop
pop
jno
stc
mov
mov
cmp
adc
aam
xor
mov
lahf
into
loopne
jne
stos
fstp
sbb
ror
les
out
mov
or
pushf
(bad)
sti
in
ds
mov
cmp
movs
or
gs
pop
adc
retf
(bad)
gs
pop
outs
push
xchg
xchg
arpl
int
pushf
shl
ret
pushf
(bad)
and
xchg
les
psrad
fcomi
ins
stos
push
or
(bad)
sbb
lahf
or
fisubr
(bad)
nop
jo
push
or
(bad)
adc
repnz
leave
arpl
push
fmul
cwde
inc
jns
not
imul
scas
(bad)
jmp
int
fistp
adc
mov
sub
push
into
adc
stc
ja
inc
and
push
lds
es
adc
xchg
js
cmc
fs
jp
cmp
xchg
or
xchg
jp
sti
xchg
pop
clc
mov
cmp
fsub
fprem
jle
popa
add
and
or
sbb
call
fiadd
stos
sti
or
cld
bound
jle
and
(bad)
cmp
out
test
lods
in
shl
aaa
add
mov
xchg
add
push
or
sbb
ins
daa
imul
div
adc
cmp
shl
pop
jge
sti
adc
icebp
loop
jle
or
jge
add
xor
clc
movs
inc
sub
and
mov
ret
inc
mov
les
jge
mov
fwait
mov
sbb
inc
sub
push
mov
jg
fst
imul
cld
pop
dec
adc
ins
sti
adc
adc
outs
push
out
xor
dec
dec
xchg
inc
test
bound
jne
(bad)
sbb
pusha
and
out
mov
(bad)
outs
ror
jmp
cmp
daa
out
rcl
push
mov
cli
inc
stos
mov
ss
jmp
cmps
stc
cmp
out
xchg
xchg
fs
inc
test
pop
cmp
pop
or
pop
cmp
xchg
mov
pop
push
mov
adc
in
inc
jno
into
or
outs
dec
mov
jmp
dec
dec
repz
loop
jmp
pop
mov
lock
retf
fsubr
pushf
es
cmp
mov
push
and
sbb
hlt
cmps
lea
shr
jmp
sbb
pushf
jmp
mov
je
scas
jmp
mov
xchg
stos
pusha
jp
les
push
test
inc
inc
js
or
aaa
or
push
fisttp
bswap
ret
and
rcr
jg
sub
jno
mov
ja
jno
mov
xor
cmp
pop
sbb
lods
nop
jp
cmp
sub
add
cmp
in
sbb
nop
stos
pushf
jns
xchg
and
aaa
xchg
ret
mov
mov
sub
push
xlat
xor
jmp
and
jecxz
mov
dec
jne
and
retf
mov
mov
js
sar
shl
cli
inc
jl
mov
cmp
or
aam
out
xor
outs
cld
ss
outs
xor
pop
popa
ds
or
out
push
aas
add
aad
scas
sbb
movs
rcr
jne
in
or
inc
jle
pop
addr16
add
lds
dec
push
inc
daa
push
jp
arpl
scas
mov
jg
xor
jmp
add
add
lods
sbb
jp
push
adc
jnp
out
mov
adc
lock
pop
mov
pop
int3
add
cmp
mov
jge
bound
pop
push
dec
inc
add
pop
je
sub
in
pop
scas
and
call
pusha
ret
jne
cmps
add
mov
xchg
cmp
(bad)
sbb
(bad)
cwde
fcmovu
pop
pop
dec
mov
mov
daa
(bad)
into
add
out
shl
jnp
ins
adc
or
icebp
push
stos
or
fadd
pop
add
jecxz
pushf
movs
pop
je
(bad)
mov
mov
sub
mov
mov
mov
call
(bad)
dec
pop
call
hlt
stc
inc
mov
adc
jg
pop
ins
sbb
fstp
mov
pop
hlt
(bad)
adc
inc
adc
imul
xchg
jle
mov
or
pusha
push
addr16
rol
dec
jp
sbb
gs
push
out
lods
mov
xchg
xchg
loopne
and
push
mov
(bad)
mov
mov
and
mov
dec
jecxz
in
sub
mov
out
mov
mov
sub
sahf
sar
rol
nop
cdq
sub
mov
pop
pop
push
and
cs
out
cli
jmp
mov
mov
mov
or
movs
pop
adc
bound
pop
adc
adc
(bad)
outs
xlat
lea
bts
daa
pusha
or
sub
push
jns
repz
std
mov
inc
leave
and
imul
ins
inc
arpl
mov
test
gs
mul
addr16
inc
sbb
xor
mov
adc
pop
cwde
dec
push
out
mov
leave
pop
pop
sbb
aam
jnp
daa
pop
scas
(bad)
jae
fsub
loopne
adc
gs
lock
mov
inc
(bad)
xchg
mov
adc
dec
and
xchg
sbb
ins
fwait
adc
xor
adc
cmp
sub
pop
add
xchg
ins
into
dec
cmps
jns
pop
push
sub
mov
sub
pop
jno
xor
pop
stos
dec
data16
lods
mov
dec
xlat
sbb
dec
adc
addr16
popf
add
and
push
test
mov
mov
push
push
add
das
je
push
xchg
xchg
xchg
dec
mov
and
inc
retf
mov
sti
test
pop
sbb
rol
and
or
xor
mov
xchg
adc
add
push
and
test
jp
test
icebp
cmp
and
dec
pop
push
push
fcmovbe
pushf
mov
test
inc
fs
xor
add
xchg
stc
push
xor
push
pop
pop
rol
les
jmp
(bad)
inc
and
adc
loopne
jae
(bad)
or
outs
mov
cmps
js
out
aas
lea
cwde
arpl
and
adc
mov
jecxz
cwde
int
add
fldenv
xchg
xor
fsubr
jmp
aam
sub
imul
add
or
std
jmp
aaa
jo
hlt
jg
ret
jbe
cdq
xchg
or
push
sub
outs
sbb
adc
fimul
rcr
into
xlat
sbb
enter
das
in
adc
xchg
push
cld
push
test
jg
lods
push
fst
jmp
das
jmp
mov
and
xor
sbb
cli
std
adc
cmps
sbb
mov
pop
fidiv
xchg
add
out
mov
jmp
or
std
repnz
imul
rol
dec
or
aam
ret
loop
pop
ss
pop
lahf
mov
mov
sub
arpl
lock
data16
icebp
xchg
aam
push
xchg
xchg
(bad)
jp
mov
inc
ds
leave
ja
je
jle
pop
sar
adc
jge
fwait
test
or
ret
fld1
inc
mov
(bad)
dec
dec
cdq
dec
mov
xlat
mov
lods
add
popa
shl
mov
(bad)
nop
inc
and
dec
scas
cmp
sbb
call
sbb
sub
in
cli
cmps
fidivr
adc
cmp
sar
into
push
add
in
inc
or
inc
cdq
sbb
xor
pop
mov
aad
push
push
mov
and
dec
lods
and
cdq
mov
xchg
inc
shr
or
sahf
bound
mov
out
fucomi
xlat
lock
sbb
push
jmp
(bad)
pop
fisttp
gs
lahf
scas
int
mov
enter
or
jl
fs
sbb
mov
popa
xchg
loope
mov
adc
fs
lahf
inc
mov
xchg
cmp
sub
xchg
in
aas
fwait
mov
xchg
pop
rol
adc
jl
push
adc
xchg
sub
mov
pop
fwait
(bad)
cmps
dec
mov
cmp
ins
fwait
pop
retf
ret
inc
fldenv
push
mov
call
(bad)
mov
int3
ror
les
imul
mov
(bad)
pop
mov
enter
adc
fistp
into
inc
mov
repnz
mov
inc
test
pop
sub
pop
loope
and
and
xchg
cwde
loopne
mov
cmp
and
jbe
mov
mov
mov
sbb
in
in
(bad)
ficom
xor
arpl
pop
or
inc
imul
jle
push
or
sbb
mov
repz
retf
inc
cli
mov
mov
retf
bound
out
dec
call
stos
cmp
call
out
mov
mov
mov
mov
dec
push
mov
adc
sahf
shl
test
(bad)
cmps
mov
lods
mov
popf
sar
call
cmps
jns
icebp
out
lea
jge
jge
push
pop
cs
(bad)
scas
push
imul
sbb
and
stc
cmps
inc
loop
scas
loopne
jnp
scas
sbb
cdq
or
sbb
aaa
mov
lods
int3
mov
sti
sar
adc
pop
and
daa
dec
push
mov
pop
dec
sbb
call
push
stc
pop
pop
add
iret
pop
(bad)
mov
dec
retf
cmp
ret
ret
dec
xchg
xor
cmps
inc
xchg
pop
arpl
call
add
rcr
je
and
dec
jmp
pusha
repz
xchg
sbb
in
retf
call
popa
xor
retf
pop
sti
nop
fldcw
fs
mov
dec
daa
jnp
push
adc
loopne
jns
jb
or
and
shl
xlat
ja
xor
loope
push
cmp
pop
dec
inc
fimul
int
mov
jecxz
xor
mov
mov
mov
mov
xor
pop
dec
mov
pop
mov
mov
adc
jmp
dec
push
ror
out
xor
mov
sub
sbb
pop
cld
in
shl
jmp
sbb
mov
cmps
scas
mov
call
push
push
cmp
popf
popa
sub
(bad)
fadd
test
xchg
imul
sub
xcrypt-ecb
cmps
into
fidiv
add
mov
fidiv
inc
push
jg
cmp
shl
mov
or
cmp
mov
lods
pop
(bad)
cmp
cmps
ret
addr16
pop
ja
adc
pop
mov
dec
mov
in
mov
rcr
rep
sub
inc
movs
out
pop
cli
sahf
sub
sbb
sbb
jnp
mov
push
in
call
pusha
mov
call
mov
push
std
test
ja
vandpd
ficomp
dec
mov
loope
cmp
jno
je
adc
sbb
push
dec
pop
pop
inc
push
mov
sbb
xchg
idiv
fmul
xchg
cli
push
add
or
sub
inc
push
vxorpd
popa
cmp
imul
xor
mov
jle
ja
sbb
sub
rcr
mov
ret
fisttp
test
cmp
in
sar
jnp
cmp
adc
adc
pop
and
scas
ret
mov
mov
push
mov
cmp
(bad)
or
ss
loopne
adc
dec
daa
xchg
pop
mov
cmp
add
add
bound
sub
cmp
aam
and
fldenv
push
adc
sub
jge
lock
in
and
sub
mov
mov
or
in
dec
in
addr16
fs
lock
stos
iret
test
adc
sub
jg
mov
push
daa
jbe
mov
jmp
shl
push
stc
add
jmp
inc
out
and
sti
aad
dec
jp
mov
fnstenv
aad
nop
and
mov
mov
movs
dec
add
ret
or
cmp
ja
mov
repnz
movs
and
out
test
fdivr
ret
cmps
add
lods
retf
xchg
mov
or
fwait
(bad)
ss
call
adc
pop
xchg
dec
mov
call
iret
outs
mov
rcl
pop
xchg
repnz
mov
rcl
pop
stos
arpl
rcl
add
lock
popf
mov
pop
dec
cmps
loopne
in
adc
jmp
mov
dec
push
loope
sbb
cmp
inc
das
cmp
push
popf
sub
lock
pop
mov
jo
cmp
inc
sub
dec
enter
pop
pop
rcr
lods
sbb
sub
stc
cmp
sbb
popw
popf
jae
ja
sbb
sbb
dec
shl
cmp
dec
dec
push
mov
push
mov
lods
jns
arpl
push
stos
and
sbb
cmp
cld
daa
cmp
inc
popa
in
push
cmp
mov
xor
push
dec
adc
retf
pop
or
jg
push
add
fadd
enter
stos
and
bound
imul
ret
fcmovbe
rcr
imul
jecxz
jecxz
cdq
sbb
nop
push
dec
lods
lahf
pop
dec
outs
std
fcomi
mov
sar
jno
sub
aad
jne
xchg
in
sbb
push
push
push
mov
call
mov
sub
dec
loope
pop
mov
dec
pusha
shl
jge
scas
(bad)
and
push
in
call
shl
cwde
push
(bad)
lea
frstor
xchg
cmp
inc
pusha
fwait
mul
xchg
rcl
outs
aas
jno
fiadd
mov
(bad)
sbb
ins
cmps
repnz
data16
das
adc
fs
les
inc
pop
std
dec
mov
ins
(bad)
xor
mov
daa
pushf
ins
push
repz
ret
sub
ds
call
push
scas
dec
sahf
push
mov
pop
stos
adc
jns
pusha
jmp
cpuid
mov
ret
add
mov
cmp
in
(bad)
dec
mov
mov
call
fst
fmul
pop
mov
repnz
inc
dec
out
mov
ror
clc
add
and
add
not
std
aad
and
pop
mov
push
(bad)
push
mov
and
dec
jmp
pop
fidivr
cmps
in
sti
inc
outs
adc
jp
adc
adc
ret
xor
add
retf
ret
mov
sbb
add
loope
sbb
aam
mov
ja
cmp
test
outs
lea
or
jl
rcr
cli
xchg
push
outs
pop
call
(bad)
(bad)
sti
cmp
or
ds
iret
(bad)
lock
xor
fcomp
sub
cmp
mov
add
inc
daa
pop
outs
out
gs
sbb
jg
xlat
dec
call
loopne
adc
sbb
data16
retf
loope
in
mov
int3
mov
sub
and
push
in
pop
clc
adc
mov
mov
not
xor
aam
push
pop
outs
mov
adc
div
pop
lods
sti
repz
sbb
daa
xchg
inc
add
cmp
cmps
fcomp
out
popa
dec
push
sbb
ror
mov
sbb
repnz
ret
adc
sub
js
sub
jg
and
jp
mov
test
(bad)
push
mov
xchg
mov
mov
in
inc
out
mov
jg
leave
aaa
push
pop
sbb
xor
ss
cmc
sahf
es
mov
loope
jns
adc
(bad)
fsub
lods
mov
pop
sbb
or
xor
push
fadd
fs
std
push
dec
push
dec
cmp
movs
cmps
jle
sbb
or
ret
jle
pop
outs
push
adc
aas
test
lods
aad
pop
mov
cmps
icebp
inc
pop
adc
ins
fs
mov
mov
leave
sbb
iret
xlat
fimul
aad
push
pop
push
xchg
mov
ret
adc
adc
mov
(bad)
out
iret
div
cmp
scas
test
bound
mov
bnd
and
out
pop
mov
xchg
sub
sub
pop
mov
xchg
cmp
sub
ds
and
sub
(bad)
mov
cmp
adc
call
ja
dec
jecxz
sub
cmp
sub
sub
or
shl
leave
add
cmp
sbb
jecxz
pop
xchg
mov
xchg
test
jmp
mov
test
mov
fcomp
pop
retf
jns
sbb
add
push
out
jnp
or
dec
sub
outs
test
mov
fs
and
dec
push
cmp
push
or
lods
pop
add
xlat
test
stos
or
push
xor
lds
mov
aad
jb
mov
test
sub
rcl
daa
or
(bad)
pop
mov
ficom
enter
inc
cmp
lea
dec
push
add
xchg
mov
je
dec
mov
movs
and
mov
sahf
cmp
mov
jae
(bad)
cmp
sbb
inc
push
fistp
sahf
cld
lods
aad
in
sbb
(bad)
sub
test
mov
pushf
test
js
push
mov
sub
sbb
movs
imul
xor
sbb
lods
jp
call
xchg
mov
and
mov
(bad)
popf
ret
ja
dec
xor
retf
shl
(bad)
int
pop
push
pop
mov
mov
gs
inc
push
xor
xchg
and
mov
xchg
lock
jle
sbb
jmp
pop
pop
sub
nop
movs
mov
dec
or
std
shl
adc
sbb
sbb
mov
aad
fbstp
mov
cli
xor
popa
lods
stc
js
lods
(bad)
or
jl
test
push
xor
pop
arpl
ret
jecxz
test
mov
pop
cmp
push
popa
aam
movs
leave
fs
cmp
xchg
in
aas
mul
cdq
mov
mov
push
push
out
jns
fxch
fwait
pop
mov
inc
(bad)
test
adc
out
xchg
loop
xor
fwait
(bad)
adc
out
cmp
hlt
jbe
loope
shr
rol
test
repnz
bound
push
push
mov
push
add
lea
mov
xor
stos
pop
aad
nop
pop
ficomp
sbb
mov
fisttp
push
movs
leave
retf
icebp
pop
add
std
push
int3
mov
or
add
ror
pop
xor
pop
sbb
(bad)
das
pop
cmps
scas
fild
jbe
xor
cmc
sar
sub
sub
pop
movs
fistp
pop
pop
jl
rcr
add
cmc
sbb
sbb
or
pop
xchg
cmp
sbb
jmp
psubw
loop
(bad)
mov
dec
cmp
mov
pop
sbb
sbb
xlat
test
cmp
mov
mov
jae
sbb
inc
out
les
jmp
inc
in
ffree
into
xchg
aad
jbe
adc
cmp
je
in
cmp
add
mov
into
cmc
(bad)
addr16
xor
mov
std
mov
mov
cmp
xchg
and
addr16
jb
outs
cmps
add
mov
popa
inc
inc
mov
aas
jge
push
add
stos
das
cmps
shr
outs
sbb
cdq
jl
fcom
mov
xchg
mov
ret
mov
xchg
adc
inc
and
push
lock
in
sar
sub
mov
xlat
xor
loop
xchg
aas
mov
mov
and
ret
(bad)
retf
lds
ret
mov
inc
out
adc
and
ins
or
das
mov
in
xchg
sti
ds
ret
ins
pop
adc
mov
inc
jl
mov
ja
mov
xchg
test
push
pop
mov
pop
jnp
lock
mov
push
in
fiadd
scas
(bad)
mov
push
adc
loopne
or
nop
in
mov
inc
push
lahf
shl
ficom
xchg
mov
shr
dec
sub
pop
scas
je
loope
mov
mov
push
push
sar
fsub
out
adc
xor
mov
sahf
push
push
pop
add
xchg
test
pop
imul
adc
xchg
gs
(bad)
jnp
mov
add
dec
xchg
jmp
imul
outs
sub
repz
adc
test
ret
ds
cdq
push
mov
shr
loop
in
sbb
movs
cmps
punpcklbw
sar
pushf
sbb
pop
cmp
cmp
dec
jp
dec
shl
add
call
cmps
fld
jno
scas
fdiv
mov
sbb
sub
sub
test
mov
iret
retf
in
sti
imul
mov
popa
mov
mov
das
sub
dec
ins
xor
xchg
jge
gs
and
xchg
stos
arpl
stc
outs
add
adc
cmp
cmps
dec
stos
in
adc
mov
adc
arpl
ins
inc
xchg
stc
push
mov
rcr
cs
cmc
mov
push
xchg
rcl
rcr
daa
sub
push
cs
call
out
cmovs
add
mov
imul
push
mov
sub
sub
sbb
sub
aad
icebp
js
(bad)
mov
xlat
imul
ins
or
cmp
aas
adc
arpl
mov
out
les
hlt
loopne
xor
inc
movs
fidivr
and
idiv
cmp
jno
inc
fs
sbb
nop
out
es
call
xchg
push
pop
ins
sbb
push
pop
inc
pop
inc
dec
jmp
jge
into
(bad)
inc
adc
sbb
xchg
xchg
scas
add
inc
out
jno
in
adc
mov
mov
jne
call
in
xchg
cmps
imul
icebp
xor
and
jp
hlt
mov
jp
cmp
jge
fldcw
sti
jo
xchg
adc
call
int
in
fisttp
sub
and
dec
addr16
push
xor
stos
mov
jo
push
rcr
push
nop
or
dec
in
jmp
sahf
mov
fistp
iret
shl
retf
pusha
fs
and
push
push
cmp
out
pop
repz
enter
add
xlat
adc
adc
jmp
xor
in
imul
stos
cmp
sub
cdq
inc
and
shl
popa
add
xor
pop
rcr
shl
sbb
jmp
cld
xor
out
dec
ins
ret
rcr
std
test
jo
xchg
sbb
ja
aam
out
mov
sbb
retf
(bad)
(bad)
ret
out
xchg
inc
mov
cli
dec
mov
dec
das
imul
cmps
push
mov
shr
aaa
jbe
scas
lds
pop
das
add
aaa
cmp
mov
pop
jmp
xlat
pop
in
enter
cmp
stos
cmps
ins
mov
dec
pushf
jb
pop
test
jge
jb
mov
ins
inc
int
test
fisttp
dec
movlps
imul
inc
lods
and
fwait
pop
lods
xchg
shl
or
(bad)
push
popf
test
dec
jle
enter
mov
mov
inc
mov
les
or
out
cmp
cmp
(bad)
test
imul
push
sbb
mov
mov
sbb
stos
pusha
jmp
hlt
aas
xchg
adc
xor
push
fist
inc
cmp
repz
sub
mov
mov
mov
cmc
inc
mov
out
retf
pop
xchg
jmp
or
loopne
mov
call
or
rcl
mul
icebp
sahf
dec
jge
adc
(bad)
ds
sahf
int
gs
push
dec
popf
sbb
xchg
xor
xchg
push
shl
pop
cmp
mov
jl
je
test
hlt
leave
jbe
das
mov
xlat
sbb
pop
in
int3
xchg
add
cmp
lock
test
popf
lahf
dec
push
dec
cmp
mov
mov
data16
and
int3
add
and
test
outs
push
ficomp
sub
push
inc
or
sub
fs
cmp
ret
retf
jns
fdiv
dec
or
popa
lahf
pop
sub
sti
mov
daa
xor
xchg
cmp
mov
rcl
sub
out
out
cmp
int3
mov
rcr
push
shl
sub
into
ds
dec
inc
xchg
sub
jl
into
cld
mov
jnp
inc
and
addr16
cdq
out
sbb
(bad)
jg
or
sub
lea
mov
add
xor
adc
hlt
push
aad
or
push
adc
aas
mov
adc
and
jbe
sbb
jecxz
mov
loopne
outs
xor
fiadd
test
cmp
cmp
scas
(bad)
cmp
cmp
adc
xchg
in
adc
ror
js
xchg
aas
div
pop
sub
push
pop
repz
add
movs
daa
sbb
mov
(bad)
gs
mov
aam
adc
pop
enter
jne
call
dec
aam
mov
inc
in
xor
pop
xchg
lahf
and
dec
pop
test
dec
int3
rcr
dec
sti
test
das
add
or
jecxz
mov
popf
push
sahf
dec
retf
add
inc
(bad)
xchg
pop
or
scas
and
je
xor
jmp
stos
imul
std
or
lea
loopne
push
cwde
and
fstp
push
and
fsubr
push
outs
xor
arpl
pop
ins
push
(bad)
push
cmp
sbb
out
ins
jno
gs
dec
pop
fadd
mov
jne
sub
out
sbb
xor
and
sub
(bad)
inc
hlt
sub
and
mov
mov
mov
and
jb
cmp
xchg
loope
mov
dec
push
popa
xchg
(bad)
aas
xchg
in
movs
arpl
jae
ret
outs
adc
xchg
xor
add
sbb
fst
cwde
or
dec
stos
and
mov
test
(bad)
ret
js
adc
out
push
ror
fldenv
test
pop
mov
out
out
mov
pop
or
push
and
pop
xor
dec
cmp
mov
iret
add
gs
outs
arpl
jno
movs
sub
sbb
add
call
fcmovnb
add
jmp
fs
in
cmps
pop
xchg
pop
xor
pop
mov
adc
retf
popa
lahf
mov
test
or
push
jne
add
fisubr
popa
(bad)
pop
ss
push
fnstcw
inc
fs
pushf
push
int3
imul
icebp
cld
imul
mov
lods
iret
and
test
xchg
sub
dec
push
sbb
(bad)
fs
fwait
sub
repz
test
ins
dec
jbe
mov
mov
in
dec
jle
jl
mov
movs
push
pop
(bad)
shl
fadd
jno
mov
out
sub
fisubr
je
sbb
shr
nop
xor
mov
cmp
shl
jo
pop
cli
or
div
jmp
sub
mov
das
movs
test
push
mov
imul
dec
mov
jge
aam
xlat
push
ss
xchg
imul
xor
rcr
in
pop
retf
push
sti
or
mov
or
sub
add
leave
mov
imul
das
pop
sbb
sbb
dec
inc
mov
icebp
pop
stos
scas
add
fadd
aam
push
mov
lods
push
mov
je
movs
mov
dec
mov
cmc
call
leave
in
ja
xchg
movs
inc
or
push
and
dec
inc
dec
dec
dec
adc
je
int3
lds
not
shr
mov
fucomi
xchg
outs
arpl
mov
shl
test
add
pop
shl
xchg
lds
hlt
add
sub
sar
pop
(bad)
mov
mov
fld
add
sub
cs
xor
mov
in
xor
xchg
out
test
into
jmp
xor
(bad)
add
nop
add
mov
out
sub
fcmovnu
push
mov
push
lds
adc
(bad)
fwait
pop
popa
cmp
fdiv
or
adc
push
dec
mov
sbb
inc
dec
mov
je
sub
test
lods
cmps
jne
dec
adc
cmps
test
push
or
pop
outs
fnstcw
sbb
lahf
aaa
lock
bound
lahf
jmp
pop
ja
stc
jg
aad
push
xchg
pop
mov
cmps
das
mov
fucomi
push
adc
neg
mov
neg
imul
inc
rcl
mov
xchg
jp
and
jnp
cmp
dec
(bad)
in
ins
adc
dec
fs
pushf
cmp
sahf
lods
or
stos
fs
test
or
je
shl
call
sub
adc
lock
dec
mov
and
repnz
(bad)
imul
fimul
aas
inc
outs
push
loop
ins
call
adc
aas
push
test
nop
mov
jl
in
mov
cmp
sbb
dec
sub
cmp
xchg
test
ins
xor
in
or
pop
test
adc
outs
lods
(bad)
inc
cmp
shl
inc
xor
push
cld
push
movs
and
aas
or
pop
xor
add
pop
pop
xor
lahf
add
retf
dec
mov
mov
cmp
movs
xchg
jno
sbb
sbb
jmp
and
sbb
jnp
pusha
test
pop
es
cmp
ret
mov
out
loopne
xchg
fidiv
dec
int3
retf
and
stos
and
pop
add
push
jmp
imul
and
mov
jmp
dec
dec
outs
mov
cmp
jl
fisttp
sub
inc
jnp
pushf
fdivrp
(bad)
(bad)
mov
cmps
mov
enter
cmps
mov
mov
fiadd
rcr
js
mov
outs
jns
pop
jne
lods
(bad)
sbb
mov
repz
sar
test
xchg
inc
ja
fs
retf
lods
stos
xor
hlt
push
call
cmovg
test
test
push
and
call
lea
push
in
sti
in
int
fwait
int3
(bad)
not
aam
repz
push
ja
or
mov
loope
sbb
(bad)
mov
sub
or
sub
cmp
or
xchg
aaa
popa
lock
add
cld
cli
dec
cmps
outs
pop
mov
int
repnz
xor
pop
cmps
sbb
cmc
pmuludq
out
ins
adc
(bad)
or
sub
movs
(bad)
shr
les
scas
mov
mov
or
pop
and
cdq
enter
unpcklps
jns
cs
cmp
jmp
sub
cwde
mov
adc
retf
stos
add
shl
lea
into
into
mov
arpl
das
lods
addr16
add
inc
rol
mov
sub
inc
sbb
cld
mov
xlat
jmp
mov
imul
push
sub
inc
lods
pop
mov
cmp
out
inc
xchg
mov
out
push
fistp
cld
mov
out
(bad)
jmp
out
mov
int
inc
push
test
jge
push
popf
popf
xchg
cmps
pop
add
cmps
daa
aas
jg
repnz
lods
and
mul
mov
push
ret
(bad)
cld
sub
sbb
dec
out
cmp
jp
stos
addr16
aaa
adc
cmp
jp
into
add
aam
push
test
push
outs
pop
inc
adc
test
cwde
(bad)
push
pop
xchg
lods
int3
mov
fsubrp
fcmovbe
cmp
jnp
adc
fmul
sub
aaa
sar
push
loopne
neg
enter
scas
cmps
fidiv
mov
mov
sub
ins
jne
xchg
jae
mov
fwait
lods
sub
xchg
popa
pusha
xchg
(bad)
neg
jle
and
mov
popa
aaa
and
xadd
add
scas
retf
mov
movs
push
pop
in
xchg
jmp
imul
stc
mov
movs
test
and
push
pop
inc
jns
sub
ret
inc
xchg
enter
jg
mov
and
sbb
pop
push
push
push
mov
test
adc
test
mov
pop
inc
les
inc
outs
cs
dec
and
lmsw
cmc
sbb
lea
popf
test
xchg
push
xchg
fwait
xchg
xor
mov
jae
inc
pop
xchg
movs
mov
push
adc
ret
cmps
pop
add
mul
push
rcl
out
sbb
into
inc
push
mov
dec
sbb
das
aad
ror
mov
cwde
jo
test
push
lock
add
retf
or
sub
jl
push
shr
add
int
xor
leave
fld
fcomp
arpl
in
adc
jne
les
out
sub
scas
loope
js
xor
out
mov
icebp
mov
jbe
push
pop
out
test
jmp
cdq
push
xchg
addr16
cld
ror
mov
test
sbb
sub
test
jno
and
sub
cmp
push
push
mov
mov
adc
add
push
repnz
xor
fs
test
push
xor
aaa
cwde
aad
xchg
daa
mov
and
dec
adc
fcmove
mov
loop
(bad)
sbb
test
jmp
mov
mov
jmp
pushf
cld
cmp
fdivp
(bad)
cwde
scas
mov
mov
xchg
jne
jl
cmp
in
retf
pop
movs
sbb
push
or
(bad)
(bad)
mov
scas
lahf
inc
sbb
pop
out
fst
jecxz
idiv
cli
add
test
es
xlat
fldcw
xchg
loop
fs
mov
push
int
ins
loope
or
test
stc
sqrtps
add
sahf
cmp
jp
sub
push
dec
fcomp
ja
into
cmp
adc
dec
mov
push
mov
xchg
jecxz
dec
test
xor
sar
(bad)
into
cld
popf
pop
pop
push
lods
and
mov
sar
sub
lea
cli
pusha
ss
mov
pop
ins
leave
lods
mov
neg
cmc
repnz
jmp
sub
outs
hlt
scas
jmp
test
mov
mov
xor
dec
inc
fs
and
cwde
and
shl
cmp
jbe
cmp
(bad)
cmc
xlat
aaa
std
nop
rcl
fst
iret
stos
push
push
pop
inc
add
ins
and
jbe
cli
daa
daa
push
xchg
sub
cli
mov
pusha
fdivr
(bad)
lods
jbe
pusha
inc
mov
inc
pushf
and
fld
into
add
mov
jecxz
add
dec
or
test
or
lods
in
mov
add
into
mov
xchg
sub
mov
hlt
inc
and
mov
xlat
fistp
aaa
xchg
cli
pop
fisttp
shl
mov
jae
and
cmp
dec
test
stc
mov
mov
shl
dec
inc
push
mov
(bad)
aaa
sbb
cmps
les
jno
mov
or
mov
push
xlat
sub
fwait
adc
fs
xor
stos
jl
enter
mov
rol
gs
mov
add
int3
cwde
push
popa
cs
xlat
push
or
xchg
jle
cmp
mov
and
sub
out
adc
mov
into
dec
push
enter
adc
shl
and
cmps
and
sti
(bad)
xchg
jmp
cmc
sti
int3
ror
cld
cmps
jno
(bad)
out
jnp
sbb
push
movs
in
cmp
mov
pop
jecxz
push
pop
jno
inc
in
inc
inc
jmp
mov
in
sbb
or
cmp
cmp
pop
or
and
rcl
jmp
and
shr
outs
sbb
xchg
in
stos
jmp
les
cs
out
arpl
and
ja
into
(bad)
mov
mov
fist
leave
adc
(bad)
loopne
mov
fild
inc
and
jp
test
fist
in
xchg
popf
push
jmp
aaa
add
pop
pop
sahf
aas
aas
mov
xor
mov
pop
or
stos
out
icebp
cmp
xor
pop
inc
ficomp
mov
loope
sar
(bad)
fidivr
dec
fldcw
sbb
mov
or
sbb
lock
inc
push
inc
jecxz
mov
scas
add
mov
lds
shr
shr
icebp
dec
push
adc
ror
mov
das
addr16
les
lock
push
jns
mov
add
jge
scas
add
ins
jbe
push
mov
cmp
(bad)
(bad)
shl
cs
lds
xchg
fild
cmp
cmc
fstp
sub
cs
sub
dec
sub
int3
add
push
push
(bad)
dec
dec
lods
js
dec
jo
(bad)
dec
in
push
ds
retf
lahf
cmovae
xchg
sbb
push
sbb
in
cmc
retf
mov
and
xor
mov
xchg
inc
fnstenv
jle
sub
dec
das
lods
jmp
xchg
shl
retf
fisttp
scas
arpl
imul
pusha
push
in
movs
jge
cmp
mov
test
into
out
cmp
inc
sti
jmp
lods
leave
fsub
int3
pop
xchg
movs
hlt
inc
lds
stos
xchg
dec
and
shl
jecxz
and
dec
and
dec
push
pop
adc
mov
dec
popa
cmp
cmp
ins
xchg
popf
addr16
hlt
out
fild
xlat
sub
cmp
pushf
jge
jbe
mov
mov
out
xor
and
sub
(bad)
jns
adc
and
je
into
rol
mov
xlat
add
mov
push
adc
jbe
lahf
mov
mov
outs
xor
(bad)
and
arpl
mov
sar
cmp
ficom
and
and
mov
(bad)
fstp
iret
sub
or
xchg
pop
stos
inc
not
pop
in
push
lock
jns
inc
sbb
inc
inc
rol
movs
fdivr
out
push
shr
lock
sub
sub
push
in
jo
inc
jmp
xor
sbb
mov
sar
loope
(bad)
mov
out
vpminub
cdq
stc
push
pusha
inc
push
push
fistp
mov
mov
lahf
push
arpl
cli
sbb
cmp
pop
test
push
and
xchg
mov
cmp
or
movs
pop
or
das
pop
movs
(bad)
loope
(bad)
(bad)
call
adc
test
sub
sbb
xchg
fbld
sbb
stos
pop
das
adc
jp
mov
fwait
push
fwait
dec
loop
sub
mov
aad
(bad)
mov
mov
loope
and
out
mov
adc
retf
cmp
pop
icebp
mov
add
and
jo
xchg
sub
aaa
es
gs
popa
iret
fadd
dec
mov
in
xor
(bad)
mov
xchg
or
cmp
adc
mov
leave
repnz
fisttp
mov
retf
push
sbb
jns
xor
mov
jg
test
pop
rcl
push
xlat
or
push
push
stos
add
int
call
out
call
outs
push
call
sbb
add
int
fcomip
pop
push
sub
call
pushf
call
jl
push
xor
sub
mov
push
adc
inc
jbe
dec
ins
inc
and
or
(bad)
dec
adc
ja
dec
jge
adc
inc
addr16
cmp
pop
xchg
fwait
in
adc
loopne
aaa
xor
mov
in
xor
push
test
pop
xchg
adc
pushf
arpl
push
cli
hlt
lds
fwait
push
stos
sub
adc
jbe
ret
inc
fucompp
cmp
inc
and
jnp
fist
ror
xchg
fwait
lods
mov
aam
cmps
pop
xor
fwait
jecxz
shl
arpl
dec
dec
sbb
dec
retf
ret
out
movs
lods
xchg
push
fcmovnbe
mov
xchg
dec
repz
fnsave
mov
repnz
test
mov
inc
and
push
pop
clc
or
jnp
jmp
inc
push
mov
cmps
loope
mov
pop
jle
shr
pop
ficom
jmp
xchg
ins
add
les
sahf
xor
and
or
nop
add
sub
cmp
sub
js
sbb
cmps
sbb
cmp
cs
inc
shl
aam
jmp
retf
test
push
enter
add
or
inc
(bad)
cld
jecxz
(bad)
jl
shl
xor
xchg
cs
inc
xchg
push
mov
xor
push
inc
sbb
cmp
add
int3
jae
jnp
enter
fs
ds
shl
dec
add
popa
int
and
scas
inc
xchg
std
xchg
xor
cld
out
fst
mov
mov
mov
pop
es
jmp
int
cmp
jbe
add
dec
xchg
push
addr16
sub
aas
and
xor
mov
pop
ficomp
in
dec
inc
adc
lds
jno
add
adc
sbb
push
mov
and
(bad)
xor
mov
shr
js
cmp
pop
out
in
jmp
jno
jne
jb
and
mov
idiv
mov
icebp
or
lea
mov
dec
inc
pop
mov
cmp
sbb
adc
sub
mov
iret
cmp
test
xchg
dec
and
mov
push
aaa
add
xor
adc
pop
div
push
dec
test
xchg
or
arpl
jne
mov
dec
xchg
fst
daa
sbb
aam
sbb
sahf
mov
out
push
xchg
cld
(bad)
js
popf
iret
(bad)
xchg
push
mov
and
push
cwde
fldcw
(bad)
ss
cmp
inc
pop
pop
cdq
call
arpl
sub
js
cmp
or
jge
sbb
pop
stc
inc
dec
loopne
or
xor
sub
jne
lea
xchg
leave
push
(bad)
and
mov
loopne
aaa
inc
mov
ror
jns
pop
repz
pop
int
scas
xchg
mov
repnz
mov
xchg
cmp
mov
idiv
mov
add
jp
dec
mov
and
mov
out
xchg
nop
test
and
sbb
dec
jmp
mov
jb
mov
or
popa
push
sub
iret
hlt
mov
jmp
pop
fidiv
pop
dec
ja
iret
sub
call
imul
mov
xchg
je
stos
data16
jmp
mov
xchg
loopne
adc
fwait
pusha
clc
xlat
cmp
fimul
in
outs
mov
(bad)
xlat
ficomp
fdivr
mov
iret
retf
pop
shl
pusha
call
jmp
cmp
dec
jge
pop
xchg
mov
mov
bound
es
jno
fs
scas
pusha
sbb
or
lods
push
scas
imul
inc
fwait
outs
scas
pushf
sbb
cmp
lods
xchg
jmp
out
xor
pop
retf
mov
xchg
icebp
loop
cmc
(bad)
shl
add
cmp
(bad)
fiadd
adc
lea
and
adc
fwait
enter
ja
lgs
pushf
mov
sahf
inc
pop
sbb
dec
shr
lea
sbb
mov
icebp
mov
cmp
icebp
inc
xchg
mov
add
or
adc
mov
shl
pushf
xlat
mov
fnstenv
sub
and
push
gs
test
add
and
mov
ins
out
stos
dec
shl
lods
jnp
and
dec
sub
xchg
loopne
data16
adc
clc
dec
pushf
ret
push
sbb
xor
rcr
cmp
call
out
stos
sub
mov
pop
sub
cmove
pop
(bad)
push
mov
xchg
xor
scas
sub
sbb
ds
cmc
lahf
or
adc
push
in
inc
or
rcl
lods
ss
in
inc
xor
fisubr
jae
cmps
test
push
addr16
test
pop
xor
out
clc
call
and
(bad)
mov
adc
inc
lahf
pop
pop
push
jmp
adc
shr
imul
cmp
(bad)
inc
ins
cmp
or
mov
jns
dec
les
cmps
inc
add
or
outs
or
push
ficomp
and
jp
je
push
sub
movaps
xchg
imul
pushf
sub
mov
mov
popf
mov
daa
pop
jne
cmp
and
and
lock
jl
rol
lahf
cdq
adc
sub
out
inc
iret
mov
dec
out
sub
popf
push
or
add
jg
lds
pop
loopne
add
or
addr16
cmp
dec
lds
dec
sub
imul
std
mov
fimul
int3
xchg
not
jnp
shl
and
jmp
adc
cmp
stc
frstor
and
mov
std
rep
dec
dec
loopne
aaa
push
mov
sub
xchg
jbe
jnp
jle
ja
int3
pop
data16
call
and
stos
les
scas
inc
push
jg
fdiv
imul
aam
(bad)
adc
repnz
cmp
fdiv
(bad)
dec
pop
mov
add
jecxz
jmp
pop
sbb
nop
push
cmps
sbb
sub
mov
xchg
mov
jmp
bound
push
icebp
cli
test
out
fcomp
or
jg
retf
xchg
lods
mov
dec
lahf
retf
int3
cmp
add
stos
bound
dec
dec
lock
sub
mov
test
cmc
call
aas
xor
mov
bound
xchg
or
test
ja
scas
ret
xchg
or
stos
add
or
dec
mov
inc
and
mov
push
mov
jns
mov
rcl
(bad)
shl
pop
gs
jae
mov
shl
sbb
sbb
jo
pop
icebp
std
icebp
push
jl
adc
push
xchg
sub
or
imul
in
adc
mov
movs
push
xor
pop
fs
in
out
jns
adc
lahf
retf
cmp
jge
test
retf
jne
and
icebp
outs
sbb
call
xlat
imul
push
inc
outs
cld
sbb
mov
movs
lahf
dec
and
xchg
add
outs
xor
push
and
(bad)
xchg
jecxz
dec
fwait
xchg
dec
out
js
mov
mov
iret
jecxz
cs
pusha
dec
ret
outs
mov
lds
cmps
mov
enter
cwde
dec
xlat
cmp
push
aas
cmp
rol
jns
sbb
jecxz
rol
cmp
outs
mov
and
jno
xlat
test
adc
leave
sbb
cld
xchg
jge
in
or
xchg
mov
push
rol
jp
arpl
fst
ss
inc
repz
and
xor
inc
push
dec
daa
nop
lahf
in
not
push
add
sub
ds
or
cmp
inc
sbb
sub
into
jl
xchg
lods
sub
lock
cmps
mov
movs
or
add
pop
add
mov
jg
and
sbb
cmp
push
data16
xor
stos
or
push
jge
adc
mov
imul
xor
adc
jb
push
xor
pop
popa
retf
push
je
cdq
es
jg
aam
mov
push
jb
aaa
addr16
add
scas
inc
sbb
sbb
and
imul
in
push
lods
or
pop
lods
lea
ror
je
dec
xor
push
jae
inc
test
dec
xchg
pushf
cmc
push
int
or
test
retf
xchg
mov
pop
lahf
xchg
leave
push
call
mov
xchg
pusha
mov
clc
jae
xchg
idiv
scas
dec
sub
or
jno
push
daa
xor
push
test
or
pop
pop
int
shl
jecxz
xor
sub
pop
fs
mov
test
push
icebp
dec
stc
int3
ret
loope
mov
and
cmc
stos
fld
fcmove
shl
lds
bswap
or
dec
movs
iret
scas
aaa
and
clc
test
int3
pop
dec
mov
xchg
push
cli
xor
add
int3
call
sti
loop
cs
mov
sub
mov
adc
retf
dec
or
aas
mov
lahf
xchg
ret
in
sbb
inc
jle
popf
mov
cmps
icebp
mov
in
push
adc
adc
xchg
cld
inc
mov
pop
push
sub
ror
bound
cmc
dec
fimul
mov
sub
call
dec
push
sar
mov
and
inc
jecxz
scas
lea
lods
jmp
or
or
push
enter
loop
or
push
push
retf
mov
sbb
push
jbe
and
out
jl
movs
femms
loope
pop
fild
dec
sbb
mov
jmp
std
xlat
sub
and
mov
(bad)
jmp
xlat
shl
or
mov
stc
fist
(bad)
outs
lds
cmc
sti
ss
jge
fwait
lods
xchg
sbb
lahf
pop
stc
fs
mov
sar
fcom
mov
rol
mov
iret
pop
inc
inc
mov
pop
adc
ja
mov
lds
dec
out
retf
icebp
shl
int
jmp
jg
mov
mov
and
outs
push
add
sbb
je
sub
out
sub
mov
jl
ss
into
pop
js
xchg
jg
iret
in
cmp
jp
adc
out
mov
addr16
and
cmps
mov
inc
mov
push
adc
gs
and
in
mov
mov
jp
or
pop
daa
call
repz
jo
push
or
in
mul
outs
pop
mov
sub
into
outs
jmp
pop
pop
sub
fild
or
icebp
mov
jnp
test
push
mov
aam
push
dec
jns
mov
or
popa
sbb
nop
push
cs
in
or
cmp
test
cmc
iret
adc
xchg
mov
fs
pop
aad
dec
(bad)
mov
bts
sub
dec
movs
fdivr
les
mov
stos
and
int
adc
dec
ffreep
push
xchg
mov
retf
mov
jp
sub
shr
enter
xor
jo
xlat
pop
or
pushf
pushf
adc
adc
sub
addr16
mov
mov
adc
sahf
add
stc
ja
leave
fisubr
add
or
inc
lods
xor
mov
cmc
loop
rcr
mov
or
xlat
in
cmps
cmps
call
push
in
(bad)
mov
mov
cmps
adc
test
and
fiadd
cdq
dec
jo
mov
fdivr
call
adc
ins
test
jmp
inc
sahf
push
cmps
sbb
movs
push
scas
xor
xor
dec
idiv
dec
in
clc
pop
jno
in
fdiv
and
cmp
adc
daa
mov
test
jge
jmp
adc
or
arpl
push
hlt
gs
or
pop
icebp
cmps
nop
or
xchg
mov
inc
das
xchg
jmp
push
mov
shr
xchg
test
fcmovu
in
push
xchg
jmp
outs
adc
dec
dec
pop
jmp
cmp
sbb
pop
(bad)
jbe
add
pop
ja
xchg
xchg
fadd
nop
inc
cmps
fst
push
rcr
cmc
push
aad
repz
aam
mov
pop
dec
popf
or
rol
cmp
out
popa
retf
lea
out
xchg
sbb
sub
jge
pop
out
or
repnz
loope
dec
movs
(bad)
sar
hlt
jl
sbb
or
idiv
inc
(bad)
cli
iret
arpl
mov
sbb
inc
push
sub
and
jmp
inc
inc
ja
xlat
jp
cmp
sub
imul
push
pop
iret
xchg
fimul
sub
sub
cmps
loopne
ret
in
sub
push
and
mov
add
push
sub
xchg
mov
xchg
shr
mov
push
sbb
rol
cmc
cmp
sbb
push
jne
mov
mov
cmp
fbld
popf
sub
mov
sub
aad
arpl
mov
je
xor
cmc
bound
add
add
loopne
lea
push
xchg
jg
adc
push
add
cmp
ja
(bad)
xchg
leave
or
xchg
dec
cwde
pop
aad
call
retf
jns
dec
nop
shr
adc
loope
adc
xchg
push
cmp
cmp
xchg
nop
fild
pop
push
cmp
test
fld
adc
jmp
add
sahf
rep
imul
mov
je
pop
mov
push
or
fs
jg
mov
or
dec
sub
mov
mov
sbb
add
mov
push
cmp
les
pusha
fmul
in
push
sub
and
push
aam
adc
xor
pop
sbb
lahf
outs
pop
xor
ud2
jl
in
push
inc
mov
fnsave
jb
mov
ja
xchg
retf
cmps
and
cmps
in
or
mov
cmp
push
push
in
pop
ret
mov
mov
or
repnz
cmp
ficomp
sub
ss
mov
push
dec
stos
jl
ja
out
mov
lahf
jg
loop
push
std
(bad)
in
push
push
pushf
movs
test
adc
sbb
mov
jbe
gs
xchg
leave
xchg
mov
ret
scas
inc
and
les
cmp
popf
pop
sbb
pop
test
sbb
xchg
and
xor
and
pop
mov
jp
cmp
push
mov
xchg
mov
jns
addr16
leave
inc
jb
or
and
(bad)
retf
movs
inc
leave
push
jbe
dec
ds
ret
jmp
loope
mov
mov
pushf
data16
int3
add
mov
shr
les
nop
pop
fxch
enter
cs
add
cli
mov
ret
leave
imul
dec
outs
ds
mov
push
lea
xchg
addr16
icebp
mov
mov
pop
and
pop
mov
xchg
data16
icebp
mov
aaa
aas
lea
repnz
and
and
mov
xor
popf
xchg
dec
shl
test
and
and
(bad)
xchg
mov
sbb
in
mov
mov
int3
add
cmp
inc
cmps
mov
jp
sar
mov
aas
jmp
pop
jmp
scas
and
mov
lock
fst
xchg
inc
pop
cdq
(bad)
fld
pop
or
out
or
call
sub
fstp
mov
push
callw
ins
cmc
icebp
les
(bad)
sbb
cmp
pop
mov
les
std
mov
jmp
xor
imul
mov
cmc
sar
outs
daa
fbstp
or
pop
sub
fucomi
and
jmp
shl
movs
xchg
inc
fwait
adc
pop
add
pop
jbe
out
mov
pop
shr
pushf
sub
loopne
dec
nop
clc
retf
sar
push
jne
xchg
fld
out
out
inc
mov
mov
ins
sub
test
adc
xchg
outs
jo
sbb
push
sub
inc
add
sbb
lock
push
xchg
outs
sub
ret
mov
addr16
pop
movs
push
popa
cdq
jl
out
stos
mov
push
add
pushf
in
pop
xchg
and
pop
sbb
inc
scas
cmps
xchg
leave
div
icebp
icebp
mov
ret
std
popf
add
pop
in
das
lock
or
cwde
push
adc
jns
sub
mov
pop
dec
out
fs
mov
inc
adc
push
mov
out
push
xor
pop
ja
jno
inc
call
pop
push
adc
pusha
cmp
ja
test
das
(bad)
ins
pop
fsub
ins
add
imul
ins
je
sbb
or
push
jmp
xor
push
add
jnp
cwde
mov
ins
in
mov
ficomp
push
sbb
jmp
mov
and
cmp
inc
and
or
jbe
rcl
cdq
xor
mov
les
inc
mov
or
mov
and
test
inc
scas
adc
aas
or
push
jnp
aaa
sbb
in
dec
dec
mov
cmp
iret
and
mov
in
jp
inc
ss
aad
sbb
std
(bad)
sbb
popf
push
stos
mov
and
mov
call
cmc
das
jmp
fimul
or
push
repz
test
push
xchg
mov
adc
aam
cwde
ss
sbb
cmp
dec
lea
out
lea
mov
xor
push
in
pop
dec
daa
inc
lea
mov
scas
in
(bad)
mov
(bad)
pop
(bad)
mul
inc
push
xchg
or
aaa
cmc
popf
not
dec
add
into
lahf
jle
mov
loopne
rcl
(bad)
out
cld
push
adc
mov
aam
unpckhps
push
movs
(bad)
cmp
jmp
(bad)
shr
shl
add
div
test
sub
sbb
ret
mov
or
mov
push
mov
loopne
int
add
mov
daa
xchg
leave
out
mov
inc
test
adc
ja
bound
adc
dec
mov
mov
mov
jle
lods
xor
lods
pop
pop
int
xor
dec
pusha
mov
ret
into
inc
jbe
clc
add
push
xor
imul
inc
and
mov
ins
rcr
fdivr
sbb
cli
mov
lock
add
shr
xchg
outs
jp
pop
mov
jge
retf
push
push
mov
mov
(bad)
xlat
xor
aad
and
das
pop
stos
mov
movs
in
mov
int3
push
std
call
aaa
push
aas
add
scas
pop
mov
movs
mov
shr
add
inc
fcom
loopne
scas
or
rol
aad
inc
dec
adc
int
lea
xchg
es
sbb
cdq
sbb
aam
ja
icebp
and
add
xchg
(bad)
bound
xor
fwait
test
idiv
out
xlat
or
cld
leave
adc
add
cmc
ret
lods
out
repnz
repnz
(bad)
dec
aad
xor
mov
cmp
(bad)
inc
jmp
movs
mov
push
push
sub
test
js
adc
lea
adc
(bad)
int
movs
or
mov
or
pop
arpl
lods
imul
mov
add
call
xor
mov
rol
lea
repnz
jnp
std
add
cld
or
sar
sahf
dec
jmp
xor
mov
sub
mov
and
mov
cmp
or
pop
fsubr
nop
lahf
xchg
adc
sub
int
ret
cmps
sar
dec
lock
cmps
and
mov
push
push
sbb
pusha
retf
sub
imul
mov
pop
xor
sti
sbb
ror
jmp
jp
lods
sub
mov
in
rol
nop
cmp
inc
ins
ss
imul
adc
mov
call
sub
jae
pop
jmp
stc
pop
mov
pushf
rcr
loope
and
fbld
sub
cmp
jbe
mov
add
jp
test
pop
into
inc
es
lock
pop
in
stos
push
push
leave
nop
sub
sahf
mov
dec
pusha
pop
icebp
ins
mov
sbb
cli
dec
mov
test
out
sbb
std
and
(bad)
inc
and
mov
inc
stos
aaa
mov
xchg
sbb
mov
sahf
lahf
sbb
add
mov
clc
mov
adc
movs
rep
dec
mov
mov
fld
and
popf
rol
and
mov
ror
xchg
xor
test
aas
cmc
cdq
push
or
ins
out
and
add
bound
ins
icebp
sub
in
sbb
adc
jbe
or
loop
mov
cvttsd2si
dec
inc
mov
enter
fisubr
and
imul
sub
mov
sti
fistp
or
cmp
shl
(bad)
pop
pop
inc
ror
dec
loop
lea
add
jno
pop
xor
(bad)
daa
das
popf
cmc
cmp
inc
repz
addr16
popf
ins
sbb
int
mov
sbb
fidiv
ds
mov
ret
call
cli
lea
out
mov
test
aas
ret
jb
(bad)
(bad)
sbb
jb
adc
test
call
fmulp
not
enter
adc
fdiv
shr
fist
cmp
movs
iret
das
pop
sbb
js
mov
and
movs
sahf
cli
in
fwait
pop
test
cmp
xor
xor
cwde
inc
imul
nop
popa
cmc
mov
xchg
push
cs
vprotw
div
div
sti
xlat
cmps
mov
cmp
jno
test
(bad)
inc
pop
das
mov
and
add
adc
mov
mov
shl
xchg
out
mov
sbb
int
mul
rcr
ficom
push
lock
adc
add
mov
imul
js
xor
scas
or
aas
inc
inc
xor
adc
adc
cmc
xchg
adc
test
out
xor
push
pop
mov
xor
mov
in
xlat
fst
leave
inc
adc
jl
mov
lods
and
sub
adc
div
dec
arpl
pop
(bad)
retf
and
push
mov
loopne
ja
fistp
fxch
(bad)
test
ss
mov
sbb
sub
ins
dec
enter
inc
cmp
pop
cmp
(bad)
pop
mov
stos
sub
movs
pusha
cmp
pop
fidivr
push
xor
aas
sahf
or
push
shl
enter
xchg
sar
inc
adc
push
and
aam
sub
cdq
or
fs
fnstsw
inc
(bad)
jne
push
lock
cwde
ja
call
fadd
xchg
mov
mov
ds
dec
cmp
fs
outs
push
std
adc
sbb
ins
add
rol
dec
pop
mov
int
iret
adc
pop
or
jge
inc
dec
and
sar
pop
jl
fwait
push
sbb
xor
or
ficomp
(bad)
lods
xor
std
stc
inc
sahf
pop
cmp
jle
jno
push
into
call
jb
ss
xchg
xchg
in
sbb
push
xlat
jmp
cs
push
pop
not
mov
cwde
mov
push
arpl
or
cmp
jp
fist
fcmovnb
or
gs
out
addr16
mov
mov
dec
fdivr
cmp
sub
inc
in
ins
pop
cs
xchg
cld
pusha
pushfw
fcom
xchg
hlt
push
cmp
(bad)
lock
sub
out
mov
mov
xor
or
iret
in
mov
enter
fwait
jmp
adc
psllw
sub
out
sar
fwait
lods
clc
sbb
mov
dec
or
pop
pop
lods
bound
inc
sbb
mov
sar
inc
sub
stos
mov
jno
push
mov
sub
mov
xor
xor
pop
add
sub
fstp
mov
dec
cli
sub
int3
and
loop
mov
enter
(bad)
cs
push
fs
cwde
dec
data16
pop
mov
and
je
mov
mov
loopne
retf
cli
in
sar
fld
sti
hlt
daa
into
enter
repnz
xchg
mov
cmps
dec
dec
adc
loopne
fsubr
or
aaa
jne
and
repz
enter
inc
adc
retf
(bad)
or
jmp
adc
in
outs
lds
pop
mov
js
popa
mov
push
dec
inc
out
fs
(bad)
aam
xchg
pop
jmp
push
mov
popa
mov
dec
mov
pop
sub
sysret
div
mov
mov
mov
icebp
pop
mov
mov
cmp
sti
js
enter
scas
inc
jp
mov
test
push
cmp
repz
mov
pop
push
mov
mov
rcr
dec
std
stos
xlat
dec
push
lea
add
cmp
das
jnp
sub
or
stos
sub
outs
mov
or
test
mov
push
push
mov
cmp
aas
push
xchg
aad
movs
arpl
lock
adc
sar
mov
fcomp
ins
mov
sti
pop
in
inc
xor
call
mov
mov
lods
cmp
movs
xchg
pop
add
adc
fsub
pop
jp
dec
mov
pop
or
add
cmp
add
jmp
push
push
(bad)
xchg
xor
and
sub
xor
(bad)
push
cs
repnz
mov
call
xchg
xor
sbb
push
sti
cdq
and
sbb
retf
outs
add
sub
mov
out
sub
imul
mov
lahf
pusha
jne
popa
arpl
popf
pop
mov
jle
xor
mov
out
xor
sbb
loope
(bad)
jecxz
int
sub
and
and
push
fmul
ret
add
shl
or
and
daa
shl
pop
push
leave
mov
sub
add
nop
fcomi
cdq
daa
pop
aaa
inc
test
int
xchg
mov
adc
mov
sbb
repz
hlt
inc
inc
test
jmp
(bad)
cli
adc
xor
movs
stc
loop
cmp
pop
xlat
jb
and
in
or
add
in
sub
gs
dec
dec
(bad)
add
sbb
sub
jne
outs
fcomp
pushf
pop
movs
mov
mov
xchg
int3
jmp
sbb
in
xchg
jmp
aad
outs
(bad)
ins
jae
inc
sub
lods
sub
xor
mov
jmp
jp
add
fistp
xor
mov
and
xor
jbe
xor
arpl
push
cmps
mov
daa
pop
lods
ror
aad
xor
cmp
inc
sar
xchg
lock
retf
dec
lea
repnz
retf
sti
pop
nop
xchg
adc
aam
shr
sar
and
jne
cld
and
inc
mov
inc
pop
adc
scas
enter
dec
or
loop
ja
shl
inc
lahf
xlat
xchg
(bad)
pop
in
or
mov
mov
test
out
push
pop
test
sar
movs
cmc
push
add
mov
mov
addr16
dec
out
xlat
add
repnz
jno
mov
cmp
inc
add
jmp
idiv
into
inc
cmp
jg
pushf
jp
cld
xchg
jp
mov
sub
sar
pop
sbb
rcl
xchg
in
mov
out
rol
fstp
push
push
mov
movs
cld
sub
imul
arpl
push
mov
fdiv
in
je
test
jg
jmp
pop
sbb
inc
push
dec
stc
call
nop
push
adc
pop
pop
adc
jnp
and
or
lock
rcl
mov
xor
adc
aas
add
push
inc
push
pushf
push
push
mov
idiv
pop
cmovnp
pusha
imul
xchg
sbb
inc
test
xchg
push
daa
je
loop
arpl
mov
xchg
icebp
hlt
mov
cmps
mov
adc
pop
sub
xchg
cmp
lock
inc
jecxz
jmp
dec
inc
cwde
call
cmps
mov
dec
sbb
xlat
imul
outs
pop
jg
xlat
movs
in
jnp
sub
nop
jo
adc
arpl
dec
sub
imul
addr16
mov
popf
popa
ja
sub
test
cld
aaa
cmp
push
jecxz
mov
pop
cmp
push
push
cmp
aaa
push
imul
add
popa
dec
mov
out
das
sub
push
mov
mov
or
ror
push
fld
dec
or
pop
add
into
and
cmp
mov
jmp
daa
shrd
scas
repz
push
cmc
cmp
shr
xchg
mov
sub
mov
cdq
dec
repnz
lods
mov
mov
or
shl
push
push
or
mov
or
je
add
arpl
mov
loope
rcl
ja
add
sbb
out
add
jmp
(bad)
xlat
clc
sbb
ja
mov
faddp
pop
mov
mov
sub
int
data16
jno
xchg
fld
sbb
adc
imul
push
xchg
xor
cdq
inc
(bad)
out
bound
xor
inc
outs
dec
adc
loopne
xchg
ret
push
jno
shl
call
int3
add
sub
(bad)
sub
es
cmps
mov
cmps
push
mov
(bad)
mov
jb
stc
fist
sti
(bad)
sub
pop
lds
and
cmc
repz
jmp
rcl
div
mov
cmp
(bad)
ins
mov
mov
cmp
popa
mov
lods
push
xchg
cdq
adc
movs
mov
sbb
ins
cmps
jb
sbb
sbb
ja
ins
rcl
sub
inc
and
or
rcl
xor
shl
int
push
test
fimul
addr16
(bad)
mov
icebp
(bad)
sbb
sbb
pop
and
fadd
jmp
or
xchg
cmp
mov
imul
arpl
push
dec
cmp
push
dec
stc
mov
cwde
xchg
or
call
xchg
mov
and
repnz
shr
test
enter
jmp
call
inc
pop
repnz
push
dec
xchg
bound
daa
out
pop
icebp
cld
into
cmp
pop
pop
outs
das
jge
(bad)
enter
push
fistp
mov
pop
sbb
jmp
jge
in
sub
sbb
xor
mov
push
pop
or
jne
jge
lods
loope
scas
mov
mov
push
stc
fdivr
sbb
push
mov
scas
cmp
lahf
ret
mov
push
ficomp
xlat
mov
scas
add
in
cmp
pop
push
adc
dec
pop
sahf
pop
ins
xchg
js
stos
xchg
repnz
iret
mov
lods
add
xchg
bound
in
dec
or
dec
test
xchg
mov
pop
mov
xchg
jo
mov
add
imul
cli
mov
xchg
add
sub
mov
out
push
out
push
ins
sub
out
leave
inc
add
dec
out
pushf
fninit
(bad)
jmp
cmp
push
xor
xchg
add
sub
dec
pop
nop
xchg
add
loopne
adc
enter
ins
xchg
lahf
cwde
xor
das
mov
or
fs
cwde
or
push
pop
popf
push
mov
dec
push
push
scas
jl
sbb
lds
les
sbb
and
pop
inc
push
cmp
imul
inc
das
xchg
sub
retf
sar
fcmovb
stos
dec
jnp
scas
jle
jbe
mov
movs
mov
stos
sbb
movs
stos
push
adc
pushf
daa
jae
mov
xor
sub
add
jle
int
movd
mov
in
dec
(bad)
xor
ss
arpl
movs
mov
cmp
adc
les
cwde
lods
lds
add
lds
mov
dec
daa
xchg
aad
sbb
xor
lds
fsub
les
lods
sti
stc
sbb
xor
js
jbe
and
getsec
sub
(bad)
aam
jo
in
jbe
xor
sbb
(bad)
cmps
js
sub
rcr
sub
jl
inc
scas
daa
lods
cmps
inc
stos
lock
shl
add
ret
sahf
add
fcomip
aam
pop
jge
xor
mov
in
dec
fwait
call
mov
aam
sbb
inc
test
cmp
inc
push
fldcw
mov
mov
arpl
daa
sar
in
mov
sbb
(bad)
mov
rcl
add
in
jb
test
jge
lea
ins
inc
in
or
addr16
sub
inc
enter
ss
pop
lods
mov
inc
push
rcr
adc
out
cmps
(bad)
fwait
dec
or
dec
out
aaa
std
imul
add
mov
sub
sbb
pop
mov
cmc
jo
into
xchg
out
lods
jne
add
out
or
movs
pop
xchg
jle
mov
adc
cmp
addr16
out
je
xchg
(bad)
xor
xor
enter
popa
adc
xor
pop
mov
adc
jmp
in
sub
add
outs
loope
inc
cwde
inc
add
ret
cld
add
ret
imul
add
sub
test
std
pushf
push
cli
xor
mov
or
add
jne
jmp
jge
or
(bad)
push
push
fstp
(bad)
and
inc
cli
jp
cmp
ins
fdivp
mov
jne
test
inc
or
sti
jbe
sbb
push
dec
outs
cmp
mov
lods
sbb
add
pop
cmc
push
push
hlt
fdivr
clc
mov
pop
mov
push
cmps
(bad)
cdq
mov
xor
mov
imul
xchg
enter
push
add
adc
pop
out
mov
fcomip
pushf
push
pop
jge
dec
fucomp
xchg
jae
mov
aad
fdivr
or
arpl
fimul
push
(bad)
pop
cmp
dec
gs
push
inc
cmps
js
test
imul
aas
adc
pop
sbb
in
and
adc
inc
mov
jne
ins
stc
cmp
inc
in
pop
push
inc
mov
ret
inc
mov
je
aas
pop
mov
sbb
mov
cmp
(bad)
call
dec
xor
fstp
cmp
not
fstp
xlat
mov
and
dec
icebp
aaa
(bad)
stos
inc
mov
leave
adc
lds
rcr
cmc
mov
(bad)
mov
les
jne
add
int3
mov
(bad)
push
add
call
or
pop
jne
sub
push
dec
xor
popa
sub
fstp
js
imul
inc
xor
xor
ds
test
jo
(bad)
lea
mov
sub
lea
adc
mov
cs
sub
cmps
and
push
xchg
ins
add
imul
popf
test
dec
jmp
fnstcw
adc
aam
enter
xlat
push
xchg
fxtract
jl
inc
adc
jp
imul
shr
sbb
jo
sub
cdq
bound
dec
xor
popa
rcr
mov
pop
out
mov
or
xchg
adc
and
jbe
sbb
xchg
mov
ret
xor
add
or
or
sbb
aam
out
ss
imul
es
cmp
fmulp
xchg
mov
or
daa
call
add
call
repnz
push
call
jp
je
mov
iret
dec
mov
inc
and
leave
lahf
lahf
ins
xor
xor
popf
pop
(bad)
push
call
adc
shr
cmp
ror
or
cmps
and
xchg
(bad)
push
adc
sbb
fstp
outs
push
push
sti
sbb
mov
mov
shl
xchg
mov
ja
push
pop
xor
inc
mov
mov
fs
adc
cmp
cmp
imul
sar
push
nop
ins
pushf
push
clc
add
daa
repnz
jns
xchg
jo
loope
jae
jbe
sbb
(bad)
(bad)
cld
(bad)
sub
pop
int3
cmc
out
in
outs
jno
and
pop
jp
xor
in
adc
mov
in
xchg
test
hlt
xor
cmp
push
leave
mov
out
and
scas
adc
inc
jg
pop
push
mov
or
dec
loop
into
cdq
xor
mov
mov
lahf
or
div
ret
xchg
inc
jmp
popf
jp
shl
and
(bad)
movs
add
mov
js
or
and
cli
lods
or
fcom
mov
(bad)
arpl
clc
jmp
inc
push
icebp
mov
push
in
ins
mov
adc
mov
and
add
js
(bad)
xchg
rcl
iret
jl
rol
cmps
fwait
out
in
dec
stos
jbe
mov
loopne
mov
push
mov
(bad)
ror
sub
test
(bad)
aas
int
mov
lahf
jmp
jne
lds
loop
jo
loopne
cmp
inc
test
adc
stos
enter
dec
xor
dec
or
out
lods
jge
pushf
push
ret
popa
xchg
pop
adc
dec
pop
dec
leave
xlat
push
add
dec
mov
stos
jecxz
inc
fnop
ds
cdq
and
retf
sbb
xchg
lock
retf
mov
pop
dec
add
push
sub
or
test
fs
xchg
cs
mov
mov
add
jne
enter
mov
push
repz
daa
jo
push
dec
inc
mov
(bad)
and
jp
inc
xor
pushf
out
fdiv
imul
lahf
sub
mov
adc
idiv
loop
xor
add
sub
stos
jbe
js
pop
ins
mov
mov
popa
fisttp
sub
cmp
inc
es
push
rol
xchg
sbb
call
inc
daa
loopne
sbb
jne
mov
xor
xchg
in
(bad)
push
inc
mov
ds
mov
lock
cwde
inc
scas
lods
es
xlat
push
jns
push
clc
and
loopne
out
push
iret
xchg
cmc
out
mov
ins
xlat
ret
mov
inc
sti
or
push
add
fnstenv
shr
out
jno
sar
cwde
rcr
add
pop
repz
arpl
enter
daa
cdq
dec
mov
or
sub
push
dec
push
dec
fild
or
or
iret
repnz
ss
xor
mov
enter
sbb
cmc
xchg
jb
or
jmp
mov
or
cmp
fisubr
jmp
addr16
dec
int
mov
pop
fs
stc
retf
jp
add
into
add
pop
(bad)
or
inc
addr16
pop
int
push
mov
inc
mov
xor
xor
sar
adc
test
jl
cmp
xchg
jp
jo
scas
pop
jle
sub
test
gs
mov
ja
rcr
repz
and
fwait
and
bswap
es
dec
sub
push
in
ja
or
push
fisttp
pop
imul
push
mov
cmp
js
jns
sub
mov
dec
dec
retf
pushf
fiadd
adc
pop
inc
fldenv
mov
sub
in
leave
push
mov
mov
mov
inc
ret
retf
(bad)
fadd
mov
push
scas
sub
mov
scas
xchg
pop
and
xchg
dec
and
and
sub
loop
adc
ror
jae
sub
jne
xor
adc
fcomp
daa
fcomp
sti
mov
call
push
fs
inc
retf
and
js
cmp
jbe
iret
cmp
sar
test
push
pusha
push
xchg
das
push
xor
ja
push
cmp
push
mov
mov
jmp
ja
lods
call
fwait
in
lods
icebp
cmp
scas
pop
push
leave
jnp
dec
cmp
fcmove
sbb
mov
hlt
add
leave
jbe
push
dec
mov
jecxz
mov
push
or
mov
sbb
xchg
mov
mov
aaa
pop
sub
inc
jmp
test
jnp
dec
mov
cmc
pop
pushf
adc
outs
sar
int
jp
addr16
add
cmp
or
ins
ja
fild
es
ja
lods
repnz
pop
cmp
int3
out
imul
jns
arpl
fmul
das
fdivr
inc
cwde
inc
lods
lods
add
fs
(bad)
jecxz
cwde
fldcw
cdq
ret
adc
das
addr16
sub
push
xor
repnz
push
imul
test
or
inc
mov
mov
mov
les
inc
xchg
outs
ret
arpl
inc
xor
jbe
sub
mov
in
and
hlt
(bad)
xchg
mov
in
addr16
mov
cmp
icebp
test
inc
mov
cmc
mov
xor
pop
imul
pop
pop
lods
ins
nop
(bad)
call
aad
mov
mov
inc
mov
imul
mov
inc
sti
or
arpl
push
sub
mov
jne
mov
xchg
pop
fcom
retf
jg
cmp
idiv
mov
cmp
xlat
int3
cmc
xchg
mov
mov
sar
nop
das
xchg
ins
push
cli
mov
xor
push
into
jnp
mov
adc
pop
dec
mov
push
and
jecxz
mov
push
mov
xlat
push
cmp
xchg
push
scas
pop
mov
aas
icebp
xchg
sbb
jae
jae
xchg
mov
fisubr
jl
cld
sbb
test
sti
lahf
repnz
mov
adc
gs
xchg
jmp
int3
adc
addr16
ds
call
gs
mov
aas
adc
and
in
push
in
dec
sub
fbstp
mov
and
neg
xchg
icebp
mov
icebp
aaa
enter
fistp
cli
pop
mov
add
ss
rol
ror
repnz
pop
jne
ds
jmp
mov
lds
out
hlt
xchg
mov
jno
inc
loop
mov
out
fst
mov
mov
lds
lds
movs
ds
mov
cli
cmp
cli
nop
mov
int
lods
scas
imul
fdiv
mov
mov
hlt
call
sub
popf
sub
lock
inc
data16
inc
je
rcr
mov
retf
push
imul
sub
mov
ja
cmp
loope
xchg
add
sub
inc
ret
in
sbb
cmps
or
test
dec
mov
xchg
fild
lds
test
pushf
fdivr
daa
sub
jg
jae
push
pop
adc
pop
xchg
aad
test
ja
fcmovnb
xor
dec
xchg
in
xor
mov
add
aaa
jno
movs
es
push
dec
cld
adc
call
scas
add
inc
sub
jge
xchg
stc
jb
arpl
xor
(bad)
daa
lea
or
inc
sub
inc
jle
test
push
icebp
hlt
cmp
aad
leave
push
daa
push
les
(bad)
imul
fs
push
pop
mov
cmps
and
xchg
cmp
mov
fadd
mov
test
nop
dec
outs
sbb
cmp
sub
dec
lea
or
in
mov
push
shl
mov
test
xor
mov
inc
or
sti
jno
xor
repz
call
sbb
xchg
push
inc
hlt
jle
jl
adc
in
clc
bnd
fidiv
cmp
inc
(bad)
pop
dec
in
jno
leave
cli
sti
mov
mov
push
sar
das
push
inc
mov
adc
in
push
dec
test
xor
fcom
lods
stos
cmp
test
pushf
imul
retf
xchg
rcl
pop
inc
mov
outs
inc
movs
jo
add
scas
and
xor
int
repnz
xor
shl
push
or
aad
je
mov
fisubr
ss
and
out
jmp
and
test
in
mov
xor
test
sub
(bad)
pushf
arpl
stos
cmp
mov
fcom
jg
or
in
add
adc
loop
mov
scas
sti
rcr
loope
cmp
or
jmp
xchg
lods
push
loop
jae
ins
dec
or
push
lods
jg
loope
rcl
lea
ins
arpl
fadd
das
adc
and
lds
mov
adc
pop
leave
in
pop
pop
add
dec
add
hlt
pop
cld
or
sbb
or
sbb
std
xchg
cmp
icebp
pop
ja
jp
outs
out
push
clc
pop
mov
adc
and
or
push
in
fs
dec
cmps
shl
sahf
std
cmp
fisubr
test
jne
and
ja
imul
mov
mov
outs
fcom
jb
mov
fwait
cmp
adc
xchg
or
jecxz
test
movs
ret
mov
test
xor
rcr
mov
add
sbb
inc
sar
add
push
xchg
xchg
cld
mov
push
stc
jns
xchg
fnstsw
add
xor
(bad)
ror
(bad)
and
scas
pop
cdq
ret
mov
in
lods
push
mov
test
pusha
jl
repnz
mov
fwait
inc
test
dec
jp
push
(bad)
daa
lock
or
pop
outs
xchg
int3
daa
popf
cmps
mov
ret
nop
jg
cmc
or
jge
pop
sbb
imul
fldcw
mov
adc
pop
mov
xchg
inc
sbb
retf
adc
enter
sbb
loopne
push
in
test
fld
mov
lods
or
clc
sbb
mov
dec
neg
popf
out
or
leave
(bad)
test
xlat
jle
inc
enter
cmc
out
(bad)
adc
jg
adc
jae
scas
es
pop
and
adc
fsubr
test
repnz
pop
popa
popf
fnsetpm(287
(bad)
fst
das
or
add
stos
lock
mov
repz
fwait
xchg
xor
ds
stc
retf
cs
sbb
inc
jmp
and
hlt
nop
enter
adc
mov
pop
pop
scas
add
jbe
and
fsubr
rol
push
cmpxchg
or
lahf
or
sub
das
sar
stc
adc
je
add
xor
sub
mov
ds
pop
and
fld
(bad)
xor
cmp
push
test
sub
xchg
push
adc
(bad)
jg
movs
add
and
jmp
jbe
xchg
sub
js
xor
fild
add
xchg
gs
sbb
mov
sub
push
loopne
sub
pop
pop
jae
icebp
sub
jbe
push
inc
cmp
mov
dec
mov
push
push
fwait
jecxz
mov
jg
scas
cli
test
pop
in
cmps
lds
mov
imul
ins
js
out
mov
inc
cmp
xor
shl
inc
lods
loop
pop
cmps
pushf
xor
out
xchg
sub
nop
wrmsr
ins
cld
sub
add
mov
out
cwde
pop
xor
enter
jp
push
lea
stc
cli
mov
out
fucomip
jge
mul
bound
stos
add
test
mov
retf
rol
jle
mov
cs
cmp
sub
or
xchg
inc
cli
sti
outs
(bad)
dec
ss
pop
daa
jp
sub
paddb
cmp
in
add
adc
stos
shr
jnp
cdq
adc
iret
fs
pop
retf
ret
sub
aam
ds
mov
mov
test
pusha
neg
sbb
jo
call
xor
cmp
test
xor
fwait
xchg
cmp
adc
mov
push
ret
push
ds
outs
or
in
into
push
pop
push
push
fwait
rol
mov
scas
pop
add
sub
outs
pusha
cwde
scas
int3
pop
scas
mov
in
test
or
in
sub
in
cmp
(bad)
mov
rcr
sbb
mov
jmp
mov
imul
lods
xor
xor
cmp
add
mov
popf
fnstsw
ss
lods
pusha
sub
push
mov
cmp
packuswb
js
sahf
lea
sbb
pop
xor
cli
mov
stos
mov
pop
lods
xor
adc
dec
sar
xor
cmp
and
mov
sub
in
inc
mov
retf
les
xchg
pop
ins
ret
xchg
cdq
cmp
sbb
ss
mov
call
outs
cmps
ins
sub
mov
das
stos
push
adc
cld
add
daa
xchg
retf
mov
pop
xchg
scas
xor
cs
ja
(bad)
lock
add
bound
cmc
retf
jg
push
inc
sahf
mov
cmp
cld
sub
popf
cs
outs
sub
push
cdq
adc
pop
mov
inc
daa
cmp
fcomp
inc
jno
aas
and
mov
ror
cmp
cs
jecxz
stc
in
jmp
push
pop
dec
stos
jl
mov
inc
mov
xor
cmps
sahf
lahf
jg
in
fiadd
sbb
sbb
push
lods
inc
pop
icebp
bound
icebp
mov
cmp
out
in
mov
ret
cmp
mov
mov
jle
pop
das
dec
stos
mov
pop
jb
iret
(bad)
iret
jae
cwde
xchg
or
dec
ins
or
or
mov
fsubr
or
rol
sbb
outs
into
pop
(bad)
inc
lods
outs
cmp
push
mov
pop
inc
loope
fadd
jle
jne
arpl
dec
loopne
mov
fadd
test
mov
inc
push
addr16
cmp
mov
loope
(bad)
imul
sub
pusha
call
imul
jl
add
in
xor
icebp
adc
mov
frstor
(bad)
push
push
xchg
xchg
ss
xor
add
mov
pop
jmp
push
push
xchg
add
inc
pop
adc
(bad)
jmp
add
(bad)
pop
pop
inc
fild
xchg
call
jo
mov
mov
scas
or
dec
mov
and
jl
xor
lea
push
(bad)
fdiv
ret
test
test
push
mov
and
shl
imul
mov
leave
lea
mov
xor
mov
sub
stos
addr16
push
push
in
xor
and
aad
in
cwde
jge
mov
popf
xchg
mov
pop
mov
in
(bad)
ins
sub
mov
pop
or
cmp
fstp
cmp
aaa
test
sti
pop
mov
les
or
mov
movs
jbe
adc
inc
push
pop
sbb
sub
aaa
jmp
mov
stos
cmc
sub
ror
cmp
into
lea
popa
(bad)
int
ins
cmp
mov
call
ins
push
or
jae
mov
loope
push
mov
outs
push
mov
jne
jmp
jno
test
test
cwde
jg
mov
mov
cmp
jb
ret
cs
jg
out
pop
adc
mov
das
jl
inc
mov
jbe
xchg
(bad)
stc
xchg
ret
adc
fisub
adc
or
cmp
loope
cld
pop
aaa
sub
and
push
scas
mov
mov
es
aad
aad
mov
cdq
les
push
arpl
movs
clc
mov
add
stc
mov
rcr
fs
icebp
push
adc
shl
das
iret
(bad)
mov
call
js
push
or
mov
addr16
in
test
into
inc
cmp
push
push
pop
xchg
adc
pop
bound
adc
out
inc
scas
and
xchg
sbb
pop
mov
sbb
icebp
(bad)
adc
fucomip
jg
int
xor
jg
pop
inc
xchg
in
dec
sar
inc
lods
shl
cmps
xchg
xchg
fnsave
jne
imul
mov
in
sbb
jge
jo
jle
movs
bound
mov
leave
push
push
inc
pop
or
mov
pmulhw
pop
add
jge
retf
and
xlat
stos
js
loope
push
sub
cli
cmps
sub
mov
add
std
xchg
iret
clc
fldenv
pop
iret
and
push
fucomp
dec
cmp
(bad)
ins
push
dec
test
out
or
repnz
ret
adc
imul
mov
add
dec
and
lahf
xor
fs
push
xchg
mov
int3
adc
test
stos
cmp
les
sbb
dec
fisttp
stos
stos
loopne
fmul
imul
js
inc
nop
cmps
test
xchg
mov
pusha
dec
loop
inc
jns
push
pop
gs
add
mov
sbb
ret
gs
pop
xchg
mov
or
and
adc
out
push
mov
xchg
shr
mov
lods
push
(bad)
js
ror
neg
adc
sub
retf
idiv
xor
adc
pop
std
enter
sub
add
jb
add
add
in
xchg
bound
sbb
retf
cs
inc
adc
fnstcw
sti
jo
ror
push
lea
sub
icebp
push
inc
cs
push
ret
and
pop
and
jle
pop
pop
mov
popa
lds
mov
sahf
test
dec
pop
add
xor
in
cs
adc
aad
mov
(bad)
leave
mov
data16
sbb
xlat
inc
hlt
sar
iret
push
rcr
mov
and
fcmovbe
xchg
add
fdiv
inc
fwait
repnz
or
aad
mov
adc
enter
rcr
xor
mov
jle
movs
xchg
aaa
iret
out
enter
and
rcl
cmp
div
bound
or
scas
mov
cmp
cli
jecxz
sub
adc
cmp
repz
dec
jb
cdq
xchg
stos
pushf
inc
xchg
mov
inc
mov
in
fs
mov
jge
jb
je
pop
ins
pop
aaa
push
adc
sbb
xor
(bad)
pop
xor
or
add
fs
push
and
loop
call
mov
dec
or
lahf
inc
xchg
loopne
mov
cmp
cli
mov
pushf
push
jae
pop
push
mov
sbb
push
(bad)
repnz
scas
cli
loopne
adc
sar
push
jbe
call
add
or
inc
ret
mov
pop
inc
push
pop
xchg
adc
ror
mov
mov
push
mov
loope
imul
aas
ja
addr16
hlt
lds
mov
ds
ins
inc
cdq
sar
mov
repnz
inc
loop
xchg
fucomp
stos
pop
push
mov
clc
xchg
test
push
aam
xor
push
push
test
ins
lods
mov
mov
outs
sub
push
and
sub
cmp
mov
mov
sbb
inc
std
and
popf
push
rcr
jle
mov
add
scas
and
inc
mov
mov
or
retf
hlt
outs
cmps
ret
push
mov
das
(bad)
xchg
xchg
dec
dec
and
stos
dec
pop
fst
cmc
fnsave
ret
idiv
and
dec
jl
and
pop
ffree
(bad)
rcl
mov
mov
jecxz
cdq
cmp
nop
cmp
hlt
shr
dec
mov
js
sub
xchg
jp
aad
sbb
add
dec
adc
xchg
test
fs
inc
jle
fimul
sbb
push
and
fild
les
jo
or
sbb
gs
(bad)
or
repnz
mov
jnp
mov
cdq
loope
loope
ret
call
(bad)
es
in
sub
lds
sub
sbb
les
sub
pop
xor
push
gs
or
mov
in
(bad)
mov
dec
cmps
daa
dec
ret
push
xrelease
add
popa
loope
lds
sbb
mov
jecxz
data16
icebp
(bad)
rol
(bad)
jae
ja
ficomp
pop
push
lods
jecxz
push
jnp
cmps
je
shl
(bad)
xlat
(bad)
inc
ins
cli
loopne
dec
imul
pop
mov
jne
jne
pusha
mov
pop
sahf
in
std
ja
mov
cmc
cmp
in
in
call
daa
xchg
mov
in
push
hlt
xchg
retf
xor
push
aas
jae
outs
pop
cli
jl
(bad)
frstor
loopne
mov
call
ret
push
sbb
mov
shl
and
les
imul
je
in
icebp
sub
cmps
aad
xor
clc
push
and
and
idiv
ret
jb
imul
test
push
ss
push
ret
scas
mov
dec
push
jne
adc
test
add
dec
mov
imul
stos
jno
test
movs
daa
pop
mov
mov
pop
fild
mov
mov
xchg
jnp
mov
in
cmps
fst
shl
call
outs
cwde
nop
fadd
xor
ds
fsub
lods
cmp
imul
xchg
jl
(bad)
pop
jne
jg
sub
fs
mov
repnz
jecxz
ficom
cmp
inc
clc
inc
aas
inc
fstp
jle
in
ja
call
dec
stos
add
jle
rcl
xor
mov
push
out
mov
movs
pop
out
pushf
xchg
inc
adc
or
dec
ds
pop
inc
mov
inc
or
jbe
popa
jmp
popf
vshufps
pcmpeqd
add
mov
fist
in
imul
xor
mov
pop
loopne
fadd
addr16
lahf
in
jb
jl
jae
mov
imul
stos
mov
cdq
hlt
pop
xchg
dec
jb
ins
xor
jae
test
cmp
into
pop
lea
and
mov
es
pop
cmps
je
dec
arpl
sub
cmp
sub
adc
cmps
or
jge
retf
enter
mov
repnz
xor
movs
test
hlt
das
dec
outs
loope
push
inc
aas
dec
or
sbb
enter
pop
ins
test
push
mov
ja
xchg
sub
fstp
pop
inc
bound
pop
mov
inc
ins
jle
adc
or
mov
xchg
in
imul
mov
mov
mov
adc
jmp
in
stos
sar
fistp
out
lods
jno
push
or
out
or
icebp
push
js
or
mov
retf
lea
(bad)
jb
cmp
adc
popa
cmp
stos
xor
dec
push
xor
movs
js
inc
push
retf
pop
fmul
lahf
loope
pop
js
(bad)
loopne
shr
aas
outs
inc
mov
add
sbb
iret
ss
adc
mov
add
jge
daa
mov
lods
fs
out
mov
lds
adc
loopne
dec
out
xor
loope
mov
push
mov
and
sahf
loop
mov
jg
ja
lock
cdq
ss
jge
fwait
push
data16
adc
(bad)
jmp
leave
mov
(bad)
movs
aad
pop
mov
jge
and
lock
pop
inc
jg
pop
jne
ins
ins
xchg
push
add
mov
xor
xor
or
mov
test
pop
pop
jecxz
lods
fiadd
in
leave
gs
test
dec
push
inc
repnz
pushf
pop
mov
push
scas
lods
pop
int
je
add
cmp
jne
dec
pop
ins
setle
jne
and
inc
arpl
adc
push
mov
mov
js
jge
mov
mov
adc
mov
mov
sbb
push
cmp
sti
fisubr
or
jl
pop
xchg
inc
push
mov
xor
adc
clc
mov
adc
shl
jo
add
and
xor
sbb
inc
js
pusha
jbe
mov
inc
lods
xchg
push
xor
mov
aas
cld
push
daa
inc
les
ins
pop
cmp
xchg
sub
in
jo
cmp
mov
popf
int
fcom
(bad)
push
aad
inc
xchg
aaa
int
fwait
or
mov
push
inc
xor
aam
pop
fld
sbb
rol
inc
jae
ror
cmp
xor
cmpxchg
mov
push
mov
pop
jmp
clc
gs
cmp
mov
mov
mov
in
aas
push
sbb
cli
mov
je
sub
add
adc
jecxz
ss
inc
mov
(bad)
sbb
mov
sbb
(bad)
cld
outs
adc
cmp
ds
pop
and
in
add
imul
rol
loope
out
push
popa
sti
cmp
xchg
push
arpl
sub
sub
pop
dec
cs
mov
or
and
and
cs
jg
dec
retf
aam
mov
scas
mov
mov
mov
mov
push
jne
shr
in
push
xchg
aam
enter
cld
mov
cli
add
(bad)
dec
inc
and
adc
mov
pop
add
push
adc
xchg
sub
mov
enter
adc
jno
add
pop
add
daa
push
xchg
mov
imul
xchg
inc
jnp
mov
and
jo
dec
xchg
cmp
adc
in
jmp
retf
xchg
shr
(bad)
hlt
(bad)
mov
out
mov
(bad)
hlt
test
xchg
and
push
jecxz
out
js
dec
dec
movs
ficomp
mov
(bad)
xchg
stc
or
and
and
pop
in
loopne
jl
imul
iret
xor
jmp
aas
dec
les
fwait
xor
sbb
fucomi
ins
or
pushf
loopne
test
aas
add
cmp
mov
cwde
(bad)
fdiv
pop
not
jae
in
pop
mov
stos
xor
cmp
mov
aad
out
cmps
push
sbb
stos
sub
and
pop
and
movs
(bad)
jge
popa
push
cmps
dec
and
pop
hlt
aam
inc
inc
gs
mov
pop
imul
int
pop
fld
ins
outs
push
or
movs
push
lods
inc
ins
loopne
jae
mov
and
inc
mov
and
leave
push
xchg
sub
push
test
ds
sub
pop
inc
mov
sahf
icebp
jo
mov
shr
push
and
mov
xchg
test
inc
jns
inc
dec
or
xor
mov
arpl
sub
mov
icebp
push
push
or
popa
pop
inc
xor
jmp
mov
pop
rcr
stos
(bad)
cmc
xchg
jbe
(bad)
cmps
test
xchg
mov
cmp
mov
test
jl
dec
jbe
and
pop
adc
mov
mov
je
retf
in
les
imul
je
sti
outs
mov
(bad)
adc
cwde
scas
cli
inc
jg
sub
inc
mov
push
pusha
dec
mov
mov
loope
sub
lods
push
sbb
lock
shr
mov
test
and
inc
jb
pop
cmp
ss
xchg
dec
xor
push
gs
xchg
shr
sub
jno
adc
fimul
jbe
call
shl
mov
cmps
mov
das
jle
stos
cmp
inc
mov
cli
jl
and
inc
fs
test
push
fimul
or
push
sbb
or
iret
movs
sub
retf
sub
pop
sar
aad
xor
xchg
add
adc
ret
test
push
test
adc
test
jb
test
pop
xchg
add
and
mov
ds
int3
push
jo
sub
jbe
mov
icebp
in
out
sub
cwde
call
mov
in
jge
push
ret
mov
daa
shr
pop
daa
mov
mov
xchg
cmps
mov
and
adc
push
movs
into
dec
pop
cmp
xchg
push
std
mov
pop
out
xchg
sbb
fdivr
inc
lahf
pop
pusha
pop
xchg
lods
(bad)
push
sub
rol
(bad)
sbb
sub
div
mov
mov
lock
mov
jl
mov
pop
dec
push
jp
fstp
pusha
lahf
dec
and
add
cli
(bad)
inc
sbb
out
stc
push
mov
outs
sub
ret
mov
js
dec
inc
cmp
and
cmps
sub
sbb
xchg
fadd
movs
out
dec
or
adc
sbb
xor
pop
(bad)
mov
sbb
jbe
xlat
out
jmp
push
call
rcl
shl
pop
test
cmc
inc
xchg
mov
inc
xchg
xor
test
inc
(bad)
sbb
or
pop
sub
inc
push
inc
sar
popf
push
fs
data16
jge
and
adc
dec
in
scas
ins
mov
adc
sub
adc
movs
xchg
not
pop
cmp
fcmovbe
inc
mov
retf
mov
or
sbb
std
es
leave
fwait
sub
ds
cs
stos
in
push
ror
movs
adc
sti
stos
(bad)
add
cwde
mov
mov
out
out
pop
pop
sbb
movs
pop
pop
mov
push
push
jmp
dec
dec
sub
rol
hlt
push
adc
ror
popw
mov
or
aaa
cld
sub
psubd
std
mov
push
sub
sahf
xor
push
push
mov
xor
lock
pop
fiadd
jl
movs
add
push
shl
sbb
ret
pop
cmp
ins
fistp
pop
cmp
mov
shl
and
sbb
fisttp
cmp
mov
pop
adc
test
cwde
sti
ins
jne
idiv
mov
std
aaa
popa
outs
jo
xchg
outs
cld
scas
jnp
push
push
fldcw
neg
shl
or
fcom
jg
out
call
pop
mov
xchg
call
mov
lods
mov
mov
jae
mov
std
repnz
rcl
pop
xor
pushf
fldcw
push
and
cmps
mov
inc
(bad)
jecxz
aad
xor
into
adc
push
outs
(bad)
movs
jnp
xor
inc
or
push
popa
or
push
or
rcl
pushf
int
aad
pop
and
mov
sub
push
(bad)
js
push
call
(bad)
jge
pop
pop
mov
cmp
call
or
fcmovnbe
sub
imul
jg
outs
sahf
mov
sbb
cli
jb
sub
shl
adc
xchg
test
or
sub
js
push
sbb
jno
mov
cmps
mov
push
push
dec
call
xchg
or
ret
addr16
fisub
les
(bad)
jb
(bad)
and
arpl
jb
adc
cmc
imul
or
pop
push
pop
inc
imul
(bad)
xlat
out
fisttp
leave
sar
lea
jbe
pop
loope
hlt
sub
int
sbb
add
jb
and
push
jb
fs
out
push
cmp
nop
xchg
or
add
dec
mov
dec
mov
ficomp
and
dec
mov
adc
xor
int
jl
aad
mov
mov
sbb
xchg
mov
adc
adc
or
cmp
mov
sub
push
or
outs
or
or
jae
pop
sti
mov
adc
inc
xor
and
cli
int
mov
inc
cmp
je
jecxz
(bad)
(bad)
je
into
fcom
shr
ja
popf
mov
jne
ficom
rol
lods
sub
push
and
sbb
jp
xor
adc
out
push
ret
iret
fimul
aaa
in
pop
pusha
bound
xchg
movs
aas
jo
lahf
sub
in
jo
aaa
adc
jle
xor
xchg
lahf
xchg
ins
mov
jno
daa
cdq
push
jecxz
sbb
add
mov
ins
dec
xor
cwde
lea
sbb
ret
aam
sub
push
test
and
int
movs
div
call
mov
jmp
fsubrp
push
es
adc
mov
push
and
pop
dec
jmp
jmp
loopne
call
xor
add
arpl
rol
dec
sbb
xor
mov
imul
loopne
in
fistp
call
cmp
mov
(bad)
ins
cmps
push
dec
cmps
sahf
out
adc
rcl
jns
and
js
pop
jno
test
das
or
repnz
xchg
fnsave
dec
dec
jbe
xchg
add
cmp
shr
push
outs
icebp
sub
inc
cmp
mov
ja
jbe
cmp
inc
ret
cmp
or
lods
mov
push
cmp
mov
mov
jle
jmp
sbb
jmp
enter
fimul
mov
mov
cld
mov
mov
mov
pop
out
dec
sbb
adc
and
mov
sub
test
test
cwde
jne
fiadd
and
stc
push
xchg
test
xchg
dec
ret
inc
lock
dec
adc
pop
cmp
(bad)
mov
xor
xchg
stc
les
cmp
xchg
jle
xor
loop
daa
mov
popf
xchg
lods
mov
inc
push
add
and
test
aam
fisub
imul
dec
outs
mov
add
cmp
rol
mov
xor
sbb
scas
sub
loopne
lea
aas
shl
cmc
adc
push
adc
sub
sahf
movs
fisubr
dec
inc
mov
in
lds
and
pop
xchg
enter
push
sub
call
mov
jp
cmp
or
pop
jmp
call
jmp
in
aad
cmp
js
jne
cmp
lods
enter
stos
mov
imul
out
mov
mov
jge
(bad)
(bad)
sar
icebp
sub
bound
mov
jg
mov
sbb
sub
and
sti
jle
test
jne
pop
xor
mov
shl
retf
call
out
fcom
jmp
mov
movlps
cmc
stos
fbstp
mov
push
mov
cs
xchg
fmul
loopne
outs
inc
mov
cmp
dec
fwait
jno
mov
add
jae
neg
in
add
push
xor
sti
or
cmp
push
xor
jl
and
push
push
push
call
icebp
cmps
dec
ror
(bad)
mov
and
and
test
cmp
inc
cmc
repnz
sub
mov
retf
mov
clc
or
shl
fild
int
repnz
jnp
in
repnz
cmc
aam
jmp
sbb
sub
lock
jne
cli
add
or
push
stos
outs
div
bnd
in
int3
jo
mov
add
or
int
adc
std
repz
repnz
(bad)
fistp
aam
aad
dec
sbb
adc
push
add
mov
xchg
sbb
add
(bad)
outs
cmp
xor
fs
retf
ds
add
cwde
xlat
in
sbb
adc
in
jno
idiv
cs
mov
call
mov
test
int3
dec
jbe
and
sub
(bad)
aas
imul
push
adc
mov
je
mov
jge
ins
xor
or
aam
cmp
pop
mov
inc
in
add
adc
cmp
pop
inc
addr16
aad
stos
jp
sub
add
es
jnp
xchg
sbb
mov
fwait
cmp
cmps
cmp
fldcw
into
(bad)
pop
hlt
(bad)
ins
jnp
mov
pop
push
xchg
dec
ss
hlt
add
push
adc
cmps
loopne
push
pop
mov
(bad)
arpl
dec
retf
(bad)
clc
sbb
dec
mov
popa
test
adc
(bad)
mov
stc
sbb
ds
je
mov
sub
sahf
leave
movs
pop
xchg
das
or
mov
push
(bad)
push
xchg
sbb
jb
dec
xchg
iret
enter
jb
adc
push
in
mul
add
adc
dec
cdq
repnz
mov
cld
dec
jo
es
jno
push
jo
dec
lea
cmp
push
stos
mov
nop
sub
ds
test
adc
mov
sti
mov
ins
cmovg
jb
adc
push
js
cs
jle
xchg
dec
and
fimul
add
cmps
les
cli
xchg
jmp
mov
mov
push
pop
mov
dec
popa
sub
push
lgs
sbb
fcomp
lahf
pop
xor
aad
scas
lods
push
iret
icebp
imul
mov
cli
jle
xchg
pop
dec
fidivr
aam
test
push
and
jns
(bad)
div
call
jg
sub
loope
outs
sub
sbb
cmp
push
mov
rcr
sbb
and
xchg
cmps
ins
push
clc
adc
aad
lea
call
hlt
xchg
loopne
jne
sub
adc
aam
jnp
mov
mov
jmp
mov
je
dec
movs
sbb
sub
cmp
scas
xchg
outs
into
pop
add
sub
mov
and
pusha
(bad)
mov
sub
loop
mov
lods
mov
xchg
aaa
fisttp
xchg
jne
(bad)
sbb
xchg
loop
sub
outs
in
rcr
and
cmps
cmp
or
mov
mov
fcomp
imul
push
xchg
scas
rcl
stc
inc
inc
cwde
lahf
pop
mov
sub
sub
xchg
bound
aas
pop
loope
in
gs
mov
mov
xlat
adc
sub
sar
xlat
xchg
mov
cmps
push
clc
lea
pop
push
sahf
fisub
ficomp
dec
mov
push
mov
or
inc
push
(bad)
scas
ins
into
clc
outs
inc
add
sbb
cmps
push
pushf
xchg
xor
jnp
cmp
jne
mov
adc
fs
adc
mov
ins
das
js
xchg
jge
mov
popf
pop
sbb
pushw
out
cmp
loop
or
xor
sbb
sbb
cmps
aam
push
jmp
fsub
mov
pop
inc
div
cmp
ins
jmp
adc
outs
ins
mov
loopne
mov
mov
sbb
or
cdq
jne
(bad)
pop
mov
and
fld
shl
pop
(bad)
repnz
icebp
sar
inc
(bad)
jb
mov
test
lahf
out
mov
inc
xchg
add
push
cdq
pop
cmp
or
arpl
pusha
shr
ret
sbb
jno
ficom
cmp
enter
xor
xchg
jb
in
adc
mov
mov
out
gs
aad
ror
or
xor
jno
dec
rcl
in
adc
cmp
pop
jb
call
xchg
cmps
in
xchg
adc
enter
cmp
adc
div
into
push
mov
cld
dec
out
mov
add
ja
test
xchg
push
addr16
(bad)
call
mov
mov
movs
sbb
jl
sbb
mov
xor
add
dec
test
jnp
add
ja
int3
mov
jecxz
lods
sbb
fisttp
clc
push
stc
imul
xor
jo
idiv
pop
cmp
sub
cmp
add
jae
aas
js
adc
jo
and
pop
test
repz
adc
push
cmp
xchg
ror
stos
hlt
sub
aas
dec
adc
cmp
(bad)
xor
add
sub
sub
pop
lds
cmp
int
or
aad
inc
fcomp
leave
cmp
mov
mov
or
jns
(bad)
xchg
les
or
in
add
test
xor
fild
aam
hlt
mov
dec
not
add
movs
fcmovnu
clc
mov
hlt
test
jecxz
push
sub
mov
xchg
inc
cmp
pop
icebp
ds
cmp
mov
out
clc
mov
xlat
lods
arpl
sbb
and
xchg
xor
add
retf
ins
jmp
add
lods
nop
lods
sbb
cdq
or
lds
cmps
xor
push
mov
push
and
mov
test
and
cmps
repnz
adc
sub
imul
mov
pop
and
sbb
mov
sbb
aaa
add
test
lods
ins
mov
dec
stos
mov
sbb
xor
scas
int3
ds
or
jns
fistp
inc
jge
fcomp
push
enter
ret
rcl
sbb
mov
int
sbb
rol
inc
push
add
jbe
xchg
arpl
add
fdiv
loope
push
in
lods
sub
sub
xor
dec
xor
je
stos
out
mov
leave
mov
sbb
data16
xchg
inc
popf
or
mov
cmp
or
jp
push
scas
add
mov
repz
(bad)
inc
xchg
adc
stos
out
ins
dec
push
mov
cmp
jg
inc
es
and
sbb
test
in
gs
data16
fbstp
sbb
sbb
fisub
std
push
xor
mov
sub
ja
not
add
xchg
and
jb
fcomp
push
cmc
push
mov
adc
aaa
out
pop
je
mov
cmp
test
pop
mov
and
int3
(bad)
(bad)
ins
mov
cmps
cmps
lahf
movs
rol
dec
mov
mov
pop
and
mov
jp
xchg
call
cs
jge
imul
mov
jg
push
cmp
stc
nop
xor
ret
pusha
xor
(bad)
mov
jbe
lds
adc
push
dec
cs
or
mov
jmp
lea
sub
sub
push
push
dec
mov
inc
mov
jmp
dec
sbb
add
stos
ss
pop
fcmovu
imul
mov
dec
es
push
jne
fcomp
sbb
idiv
push
pop
ja
inc
mov
fadd
mov
(bad)
(bad)
mov
push
test
jg
inc
pop
push
mov
adc
(bad)
add
mov
cs
jl
ss
fimul
xlat
aaa
outs
in
mov
(bad)
call
(bad)
and
not
xchg
mov
push
data16
mov
push
lods
rcr
cmp
mov
inc
sbb
sub
mov
ss
clc
push
mov
adc
xor
xchg
sbb
hlt
inc
outs
leave
pop
daa
add
shl
enter
arpl
inc
jo
sub
push
and
add
gs
xor
dec
sbb
pusha
xor
pop
jne
push
(bad)
in
cli
pusha
faddp
push
jns
jl
les
xchg
fwait
mov
xor
cmp
and
mov
int3
mov
jl
xor
enter
and
js
xor
lods
pop
add
mov
ficom
icebp
das
pop
in
pop
dec
add
enter
scas
add
arpl
ds
das
aas
fbld
cdq
xor
in
jmp
pop
inc
push
pop
and
repnz
inc
jecxz
mov
sbb
retf
push
sbb
fidiv
or
xor
cdq
gs
jo
mov
dec
push
pop
jnp
pusha
mov
cmps
mov
cli
test
in
inc
nop
xlat
jmp
and
dec
jmp
sbb
mov
push
cmp
(bad)
adc
mov
cli
enter
or
jb
cmp
sti
je
outs
in
mov
jl
dec
pop
gs
mov
dec
add
loope
push
xchg
mov
add
nop
cmps
adc
cdq
xchg
in
inc
jbe
sub
mov
retf
dec
repnz
rcl
adc
outs
adc
repnz
sbb
hlt
sub
retf
jae
push
xchg
xor
stc
sub
popa
mov
add
mov
ja
lods
jg
mov
jne
hlt
retf
push
dec
sub
pusha
mov
jecxz
xor
je
xor
mov
sub
stc
clc
int3
ret
fisub
inc
ss
cmp
loopne
or
in
mov
push
pop
leave
mov
dec
jnp
in
xchg
ret
sbb
mov
push
fidiv
icebp
sbb
push
add
xor
ret
sub
and
stos
jno
ror
dec
jmp
jmp
adc
loope
sub
cmps
shl
pop
stc
bound
movs
mov
mov
cmp
fst
and
retf
(bad)
sbb
aas
adc
mov
push
(bad)
pushf
cmp
shl
fnsave
in
pop
mul
inc
out
mov
clc
jp
cmps
aaa
add
add
dec
loopne
pop
aaa
dec
adc
and
jb
xchg
or
test
ins
mov
push
or
cmp
mov
adc
ins
push
neg
inc
jge
repnz
hlt
pop
and
push
jge
out
daa
push
mov
imul
fistp
fs
pushw
inc
or
rcl
in
loopne
mov
inc
xor
ja
xchg
dec
cdq
add
mov
les
daa
loop
mov
ficom
loop
cmp
sbb
lods
neg
add
push
ds
and
and
xor
fwait
sti
jb
pop
sbb
push
cdq
retf
add
adc
aad
enter
clts
test
add
jp
jb
enter
dec
push
and
repnz
pop
xchg
inc
cli
out
lods
imul
fwait
dec
test
sbb
leave
add
adc
mov
retf
and
dec
xor
mov
or
out
aad
lock
add
enter
call
rol
imul
sub
aaa
int3
sbb
aam
add
outs
dec
daa
inc
jbe
xchg
mov
mov
jb
mov
xlat
mov
adc
nop
daa
ja
mov
sbb
dec
mov
sbb
lahf
(bad)
retf
jo
xor
xor
or
ja
sbb
jb
test
cwde
cmp
jmp
out
push
xchg
cwde
icebp
call
mov
mov
outs
scas
gs
jmp
std
repz
iret
out
ins
xchg
retf
jmp
into
jmp
sub
ret
add
inc
or
sub
push
jnp
xor
jecxz
sub
push
cmp
ins
imul
ret
inc
std
pop
int
das
pop
(bad)
cli
popa
cmp
sahf
je
dec
in
test
dec
ror
sub
xor
and
mov
mov
sbb
(bad)
and
lahf
mov
jbe
cmp
and
retf
mov
repz
ret
into
mov
aas
inc
stos
hlt
add
in
fcom
fadd
sbb
inc
cmp
pop
out
nop
sar
cmp
cmp
sbb
(bad)
test
bound
daa
(bad)
fdiv
mov
repz
mov
dec
jns
daa
repnz
sbb
dec
mov
sub
in
cmp
xor
lea
pushf
adc
push
fstp
mov
inc
mov
cli
cwde
pop
jl
mov
rcl
push
mov
pop
or
inc
movs
jnp
mov
pop
xor
or
jns
add
(bad)
adc
fist
outs
std
lds
aaa
int3
dec
aaa
(bad)
fld
adc
ret
xor
push
out
ret
movs
es
lods
cmp
out
dec
adc
daa
push
xchg
jg
sub
mov
pop
mov
mov
jg
je
sbb
xchg
(bad)
pop
setbe
jne
dec
add
into
jl
jnp
inc
sub
add
icebp
and
cmc
push
mov
cmp
pushf
or
adc
scas
jo
das
cli
adc
cmp
out
cmp
iret
inc
call
sub
add
rcr
pop
int3
fild
or
rol
ins
sti
push
cs
xchg
dec
push
cmp
mov
xor
xchg
or
in
int3
rol
outs
and
cwde
adc
dec
(bad)
arpl
jmp
data16
in
sbb
mov
dec
or
(bad)
movs
mov
mov
into
inc
js
int3
jle
push
in
mov
test
push
pop
jnp
sahf
cli
and
mov
push
mov
xchg
xchg
into
lods
(bad)
enter
imul
pop
xchg
push
push
jl
es
int3
imul
push
push
push
jae
jno
xor
cmp
fs
cmp
mov
shl
xlat
mov
test
fistp
jmp
pop
cmp
retf
fcom
sub
test
push
out
(bad)
jmp
es
mov
stos
inc
xchg
push
pop
add
int
aam
bound
add
in
inc
push
jmp
dec
retf
jno
sahf
shr
leave
loop
jle
aam
inc
jecxz
inc
hlt
adc
dec
in
pop
jns
mov
out
and
rol
in
add
fistp
daa
cmp
out
rol
cmp
aas
xchg
mov
lock
shl
dec
jns
ror
icebp
xchg
dec
cmp
mov
xor
cmp
fs
aam
nop
aad
aaa
pop
add
push
js
or
push
push
inc
adc
dec
and
mov
(bad)
cdq
addr16
stos
push
pusha
jb
stos
jl
mov
test
sbb
dec
fbld
and
addr16
mov
repnz
pop
pop
fucomip
jnp
jae
sbb
lea
mov
ret
push
cdq
or
inc
sbb
sub
inc
into
popf
mov
adc
pop
mov
daa
xchg
loopne
sub
lds
mov
icebp
loope
mov
mov
ins
neg
repz
inc
and
ins
sub
(bad)
ins
xchg
and
ror
fmul
push
fistp
sub
fnstcw
push
jecxz
lods
sub
mov
jl
cmp
add
or
pop
loope
sub
nop
in
sbb
int3
rcl
jecxz
mov
sub
and
cmp
xor
jmp
out
(bad)
cld
xchg
cmp
lods
popa
push
sbb
in
jbe
jl
arpl
xor
lods
pop
cmp
xor
jne
mov
(bad)
jbe
inc
lods
loope
mov
movs
xlat
ret
pusha
mov
popf
mov
pop
pop
nop
in
enter
xor
shr
shl
std
int3
in
xchg
cld
(bad)
ins
mov
mov
fmul
mov
xor
leave
scas
in
mov
push
cmp
cmc
test
add
inc
push
mov
jge
mov
dec
data16
and
pop
jmp
outs
out
add
movs
in
loopne
xchg
xor
mov
sub
xchg
jae
jge
push
or
stc
jne
push
(bad)
leave
xchg
mov
sub
xor
bound
(bad)
jl
pushf
repnz
push
cld
jae
mov
jp
jmp
test
imul
ja
addr16
sub
sbb
dec
lods
ja
inc
xchg
imul
xor
shl
or
movs
sti
sub
sahf
call
sbb
aad
hlt
retf
inc
test
mov
cdq
adc
repz
adc
jp
pop
movs
popf
lock
les
scas
test
out
div
(bad)
aas
jno
dec
push
(bad)
ja
jp
cmp
mov
xor
adc
lods
retf
add
sbb
mov
add
push
dec
sbb
iret
in
shr
or
adc
cmps
cli
fidiv
jnp
and
mov
loopne
cwde
jne
cmp
dec
jnp
jbe
fiadd
lods
xor
or
jmp
outs
mov
and
sub
sub
pause
and
dec
js
les
lds
add
scas
mov
movs
jo
mov
mov
movs
xchg
pop
push
mov
adc
add
ss
jl
fs
js
sub
int
sar
js
movs
and
jo
bound
pop
dec
jno
out
pop
push
sbb
or
cmp
add
es
sbb
mov
(bad)
mov
(bad)
loopne
cwde
jle
cld
jle
add
lock
fst
dec
inc
pop
out
push
sbb
xchg
mov
adc
or
fcom
xor
lods
aam
cmp
pop
ins
add
(bad)
in
ins
mov
call
push
jnp
push
or
test
pop
adc
pop
int
fild
mov
pushf
mov
push
(bad)
sbb
cli
mov
and
stos
jne
lock
xor
fstp
sahf
(bad)
rol
add
std
pop
mov
sub
int
sub
pop
in
pandn
add
add
test
movs
push
mov
cs
adc
or
cmp
addr16
int3
das
int3
or
test
mov
pushf
pushf
not
out
ins
mov
jbe
sti
sbb
and
adc
es
into
jne
lods
adc
(bad)
xor
loopne
add
fstp
pop
mov
push
jmp
aaa
shr
cmps
lea
xor
jo
lahf
jp
mov
mov
adc
push
and
cmp
mov
out
mov
xchg
sahf
out
outs
sbb
mov
aam
push
and
addr16
xor
outs
int3
out
sbb
mov
sub
mov
dec
outs
add
not
mov
(bad)
and
out
jg
inc
addr16
mov
add
repnz
mov
es
lods
jns
jb
sbb
jo
rol
rol
adc
pop
sar
mov
xchg
mov
add
xchg
jns
data16
mov
inc
ins
jp
inc
aam
fcmovne
dec
sbb
xchg
dec
jl
sti
jl
stos
repz
jo
popa
xor
mov
push
mov
and
pop
scas
nop
xchg
sbb
cmp
and
cmp
data16
adc
sbb
add
pop
jmp
xchg
xor
mov
pop
hlt
sar
cli
cld
jge
cli
ret
and
je
popf
inc
movs
iret
cmps
sar
sbb
or
call
add
pop
dec
and
daa
jne
adc
xor
and
repz
adc
in
inc
xor
out
loop
mov
arpl
sbb
aaa
cld
icebp
add
sub
push
outs
pop
fldenv
pop
dec
dec
int
fistp
in
mov
sbb
mov
mov
and
add
mov
jmp
cmps
jnp
pushf
sbb
and
xor
dec
ja
enter
sar
in
addr16
pop
nop
scas
pop
in
xchg
xor
sbb
repz
jne
aad
xchg
hlt
adc
push
push
ja
adc
push
mov
pop
xchg
fwait
xor
cmp
or
push
cdq
mov
pop
xchg
sbb
clc
xlat
cld
mov
jmp
jb
cli
je
(bad)
lock
xor
mov
and
jp
sub
mov
mov
cmps
in
out
cmc
push
or
pop
jne
inc
shl
nop
retf
fsubr
push
fsubr
mov
in
sar
into
xchg
xlat
lods
push
into
mov
ja
inc
jno
jl
sub
push
inc
out
int3
fld
sbb
fnstsw
inc
jno
inc
mov
jge
pop
mov
add
cli
test
pop
add
inc
mov
ins
xor
aad
push
jbe
push
push
dec
int3
icebp
mov
fwait
ins
(bad)
mov
loope
jb
mov
mov
aaa
and
sub
ret
inc
inc
aam
mov
dec
inc
imul
or
out
mov
aaa
mov
mov
xor
add
stc
repnz
(bad)
int
mov
loope
(bad)
sbb
pop
mov
int
dec
lds
or
lahf
test
mov
cs
xchg
mov
fucom
adc
stos
jge
pop
out
xchg
push
stos
cmp
aaa
gs
pop
inc
add
mov
out
pop
jne
in
(bad)
iret
(bad)
es
push
jbe
mov
jne
out
pop
push
mov
add
cmp
test
mov
outs
sub
push
jge
or
ficomp
lods
cmps
jg
pop
mov
sbb
mov
mov
cs
push
inc
mov
call
pmullw
cmp
mov
mov
cmps
dec
cmp
neg
cmp
xchg
aad
movs
inc
retf
xchg
cmps
jge
dec
pop
repz
pushf
cmps
aas
movs
retf
xor
xchg
retf
lds
lahf
xchg
shl
cmp
dec
mov
sbb
cmc
push
cmps
das
das
dec
clc
inc
retf
add
js
sub
xlat
rcl
mov
mov
js
push
sub
sbb
mov
fnstcw
adc
mov
icebp
cmp
jns
dec
lock
or
jp
sbb
retf
fwait
adc
jb
mov
cmp
xchg
xchg
sbb
out
push
jnp
jl
add
dec
retf
js
and
xor
cmc
xchg
mov
pop
lods
lock
pop
add
mov
cmp
jp
cmps
call
mov
lods
es
mov
ja
xor
mov
add
loop
imul
retf
mov
xlat
ja
or
lods
pop
(bad)
ret
cmps
enter
sti
push
sub
sahf
or
pop
mov
clc
call
add
and
push
repnz
pop
ja
mov
rcr
outs
sub
or
mov
shr
dec
test
lea
aaa
je
adc
mov
sub
push
stos
outs
sub
inc
repz
movs
xadd
mov
inc
scas
jge
jmp
sbb
pop
hlt
mov
je
cld
mov
dec
push
xchg
lods
add
push
outs
or
push
mov
jnp
call
fwait
mov
std
or
test
pop
cmp
lahf
not
pop
and
push
push
in
sbb
ss
pcmpgtb
stos
xchg
jecxz
mov
jo
dec
gs
xchg
and
sti
ins
fdiv
sub
add
sub
and
add
hlt
cmps
push
cmp
dec
mov
mov
jp
push
pop
out
std
and
pop
jnp
mov
cmps
dec
adc
rol
or
cmp
sbb
mov
ins
and
sbb
cdq
fcomp
fadd
dec
shr
aad
test
fbld
je
xchg
lock
shl
rcr
pop
ja
mov
adc
push
add
lahf
jmp
xchg
dec
or
or
mov
rol
shl
ret
pop
or
fcomp
pop
add
test
sahf
ss
ret
dec
add
dec
lds
and
jae
loopne
xor
movs
retf
out
push
call
stos
sbb
mul
ds
call
cmp
push
or
dec
je
mov
outs
jnp
pop
rcr
inc
push
sub
mov
rcl
ins
cmp
lea
push
add
pop
popf
sti
mov
or
pop
pusha
adc
cmp
ss
dec
in
xor
fld
pop
mov
test
pop
mov
sbb
gs
lds
cmc
or
xchg
aam
mov
jl
ds
inc
add
in
inc
mov
leave
(bad)
xchg
jmp
cli
ret
xor
inc
sub
pop
in
or
xlat
sbb
cld
mov
out
dec
mov
pushf
shr
and
mov
mov
aad
data16
dec
shl
mov
cmp
loopne
bound
mov
test
out
aam
cmp
call
dec
ror
xor
xor
cmps
pushf
(bad)
pop
ins
fdivr
or
ds
cs
test
imul
nop
xchg
test
ja
adc
ja
cmp
mov
xchg
daa
cli
mov
movs
mov
scas
clc
mov
fwait
outs
sbb
repnz
push
(bad)
pop
sbb
mov
sbb
mov
push
cmps
data16
repnz
sbb
imul
sbb
bound
and
xchg
mov
inc
and
mov
and
dec
(bad)
dec
mov
ins
ins
rcr
inc
push
repnz
sub
ficom
dec
and
jmp
sub
and
dec
xor
push
jb
jmp
shr
pop
loop
xlat
mov
out
adc
adc
mov
sbb
xchg
adc
loop
adc
mov
push
vmaxpd
xor
push
daa
jnp
stos
sar
inc
mov
je
push
inc
es
and
pushf
pusha
jns
inc
(bad)
call
(bad)
cld
cmp
inc
and
je
jb
add
mov
repnz
cmp
(bad)
fisttp
inc
stos
repnz
mov
das
popa
cli
add
cmc
dec
jbe
es
and
dec
in
cli
jb
dec
cmp
jnp
add
push
(bad)
(bad)
cli
gs
clc
stos
jge
xchg
fcmovnu
or
inc
jecxz
xchg
mov
gs
data16
xchg
std
outs
mov
dec
or
adc
not
imul
push
sbb
in
inc
out
mov
(bad)
repnz
aad
imul
jle
leave
xor
push
pop
pop
cld
popa
ja
clc
and
pop
retf
mov
pop
sbb
dec
push
mov
inc
hlt
pop
data16
xchg
cld
out
popa
aad
retf
xchg
cmp
retf
push
jne
push
push
pop
in
dec
push
loopne
loope
jmp
dec
xchg
inc
cmp
lods
into
retf
push
sub
pop
cmp
xchg
xor
pop
retf
pushf
hlt
push
push
int3
jb
pop
retf
jo
xor
loopne
dec
and
adc
pop
stc
jg
test
cmc
mov
dec
push
fadd
iret
icebp
loope
adc
jmp
jo
pop
cmp
in
or
movs
sub
jp
adc
xor
(bad)
in
mov
fadd
pop
in
call
mov
je
jg
cmc
lock
cld
and
and
and
sar
push
int3
adc
mov
inc
mov
push
ret
lahf
cmp
xchg
mov
jno
aad
mov
jmp
dec
push
push
add
add
movs
das
or
mov
hlt
xor
and
jb
xchg
mov
cmc
fcmovnu
cdq
mov
test
dec
and
(bad)
sbb
or
aad
into
outs
repz
pop
adc
jno
pop
inc
mov
sub
clc
cmc
ret
stos
xor
mov
lods
test
xor
pop
dec
fld
lods
out
dec
jb
arpl
xchg
add
and
fcom
ins
arpl
fwait
mov
hlt
push
push
inc
rcr
dec
fmul
lds
ja
cmovne
addr16
mov
movs
aas
and
xor
test
js
ins
push
pop
fistp
ds
dec
lds
jmp
fnsave
lock
push
mov
inc
sub
sub
push
cwde
repnz
push
fadd
sbb
mov
cld
mov
push
mov
inc
ja
cmp
stc
xchg
mov
jmp
push
js
sbb
ds
ins
pop
ror
pop
mov
aad
out
dec
das
cmps
test
mov
jnp
or
jge
inc
mov
and
pop
in
dec
sub
and
scas
inc
lods
cwde
es
jnp
test
pop
arpl
loopne
jne
mov
cmp
mov
jno
add
dec
mov
(bad)
jmp
loope
stos
jg
icebp
int3
lahf
repz
xchg
aas
push
imul
loop
add
(bad)
arpl
mov
mov
enter
mov
xchg
sub
xor
(bad)
mov
fcmovu
pop
daa
xchg
cld
xchg
in
cmps
loope
xlat
enter
sub
(bad)
lahf
and
sub
out
sbb
push
cdq
mov
lock
cs
iret
bound
shl
rol
mov
sbb
pop
mov
lds
fwait
test
and
sub
ds
adc
test
rcl
lock
sub
cmps
sbb
outs
xor
out
mov
mov
sub
popf
fs
shl
bound
lea
inc
test
pop
xchg
ror
ret
and
cmp
inc
call
rcr
ret
pop
xchg
call
jo
dec
lods
inc
add
in
sub
adc
sub
(bad)
adc
int
sbb
cmp
xchg
fwait
jno
mov
xor
out
xor
cmp
inc
adc
outs
or
or
(bad)
retf
test
pusha
mov
sbb
dec
adc
mov
fnstenv
pop
jae
pop
adc
cmps
outs
xchg
bound
les
popf
push
dec
add
mov
inc
mov
xchg
in
std
das
aam
jbe
xor
hlt
mov
(bad)
xchg
pop
jg
mov
sbb
dec
mov
shl
ins
jo
cwde
mov
jp
mov
push
xor
stos
adc
mov
lea
pop
and
inc
mov
imul
in
mov
imul
imul
or
daa
sbb
jo
xor
mov
xlat
hlt
add
xchg
xchg
xor
cmps
sbb
scas
ins
mov
lahf
lahf
test
sbb
mov
lock
jmp
or
cwde
mov
jp
sbb
pop
int
jg
imul
sub
les
ffree
rcr
rol
ret
aad
sti
pusha
fld
arpl
mov
pop
in
stos
sbb
push
imul
mov
daa
dec
cmovne
shl
retf
jecxz
lahf
dec
push
mov
and
hlt
ins
add
gs
repz
sbb
inc
or
push
sbb
shr
dec
in
inc
jno
sbb
dec
std
or
into
loopne
fistp
outs
and
mov
xor
cmp
xor
fsub
loope
clc
movs
into
jge
cmp
sbb
jae
adc
dec
int
gs
out
cmp
out
icebp
xor
mov
mov
data16
jnp
and
loope
xchg
inc
test
jp
in
test
cmps
jns
push
ret
and
not
das
mov
mov
ds
push
stc
not
dec
or
imul
pop
push
leave
fisub
mov
mov
xchg
inc
fisttp
pop
outs
pop
jae
push
mov
sbb
xor
ror
dec
push
mov
adc
leave
popa
fist
mov
pop
dec
cmps
lds
and
and
jmp
xor
stc
adc
lock
imul
lods
aaa
dec
(bad)
stc
mov
loopne
jg
out
jg
xchg
out
mov
out
ror
xor
xor
int3
test
dec
div
add
aam
and
mov
cmp
push
pop
adc
xchg
aam
xor
aaa
pop
leave
ror
fldenv
push
cmp
fwait
dec
fmul
idiv
sub
retf
cmc
jmp
adc
test
adc
in
js
push
outs
leave
or
pop
fiadd
pop
dec
mov
imul
hlt
xlat
or
or
or
jae
mov
rcr
xchg
in
fdivr
mov
enter
loop
(bad)
mov
or
mov
outs
call
stc
pop
mov
mov
cmc
ins
sbb
dec
scas
dec
jg
xlat
adc
dec
cmp
xchg
pusha
cmp
icebp
lods
jae
sbb
stos
jle
jmp
sbb
mov
xor
rcl
fstp
push
mov
rcl
ret
pop
sbb
pop
repnz
fdiv
shl
sbb
adc
mov
xor
movs
mov
sbb
sub
xor
test
pop
aad
sbb
jmp
push
popa
ds
(bad)
aad
and
push
jl
jbe
dec
adc
mov
jmp
cmp
imul
and
push
(bad)
imul
mov
js
scas
pop
lahf
pushf
mov
in
cdq
pop
jmp
sbb
and
xor
repnz
call
imul
(bad)
loop
xor
sub
inc
arpl
loope
xchg
sbb
fldenv
rcr
div
push
jl
mov
(bad)
enter
jecxz
fwait
adc
xlat
mov
or
in
out
sub
pop
mov
neg
lods
fmul
outs
xchg
or
icebp
je
mov
and
ins
or
jbe
adc
je
sub
sub
and
sbb
arpl
and
or
int
pop
popf
test
inc
adc
in
fsubrp
ds
ss
mov
ins
xor
mov
outs
leave
mov
mov
jns
cmp
call
xor
mov
iret
or
jmp
push
bnd
(bad)
dec
mov
add
pop
sub
push
popf
jecxz
cmp
fwait
adc
add
push
add
ret
jmp
mov
mov
cwde
or
or
ret
pop
xor
imul
dec
das
repz
sbb
add
stos
imul
push
push
inc
cmp
pop
xor
or
xchg
or
pop
idiv
mov
repz
mov
xor
mov
push
hlt
mov
xchg
sbb
not
pop
repnz
fisubr
sbb
push
test
mov
je
dec
test
cmp
movs
imul
mov
xor
mov
mov
stos
cld
mov
hlt
cmp
push
mov
shl
add
dec
cmp
pop
inc
dec
aam
ror
jo
dec
xor
jns
ins
je
ja
jnp
dec
out
cmp
retf
(bad)
retf
push
mov
into
mov
sti
push
jae
(bad)
cld
fild
call
sub
not
dec
jnp
xchg
outs
pop
scas
mov
test
retf
js
jnp
pop
or
mov
adc
ret
in
imul
jge
dec
cli
jno
mov
pusha
jae
cmp
aas
bound
div
(bad)
out
clc
cs
js
cs
ret
mov
mov
sbb
outs
pop
mov
jo
dec
pop
hlt
pushf
cmps
and
pop
sbb
jns
mov
dec
out
xor
rcl
pusha
popa
or
cs
imul
push
mov
pushf
outs
leave
arpl
cwde
jo
cmps
outs
fisttp
popf
imul
retf
sbb
int3
jae
xchg
es
push
jge
push
mov
jl
sahf
mov
nop
jne
adc
(bad)
sub
mov
xchg
dec
push
(bad)
fcmove
jae
dec
or
xor
outs
jno
adc
movs
dec
sub
das
(bad)
jmp
mov
ret
leave
cli
or
adc
bound
inc
push
rol
ret
call
xchg
adc
les
movs
or
aas
out
movs
loop
or
cmp
dec
ja
in
fbstp
push
xchg
jbe
mov
mov
sub
popf
scas
sub
dec
mov
jle
pop
adc
jne
inc
int
pop
cwde
xchg
inc
jp
ror
mov
sbb
sbb
dec
xor
pop
gs
loopne
out
jge
int
enter
sub
mov
cdq
mov
sub
cmp
push
xchg
enter
mov
or
addr16
adc
data16
shr
push
lea
push
dec
mov
pop
mov
add
mov
sti
nop
pop
out
test
mov
push
xchg
xchg
stos
mov
jmp
jb
ds
(bad)
and
mov
data16
adc
scas
and
iret
cmp
pop
adc
inc
push
loopne
das
jnp
popf
lock
jnp
clc
call
arpl
push
lods
jmp
dec
inc
cmp
(bad)
cmp
cdq
dec
dec
lock
cmc
mov
sar
and
js
sbb
mov
inc
stos
fnstcw
adc
jge
mov
getsec
mov
call
inc
ins
(bad)
cli
in
or
jge
push
mov
into
(bad)
mov
xlat
jb
fidiv
popf
(bad)
jp
rcr
and
xchg
bound
mov
mov
add
std
scas
mov
mov
add
xor
mov
xchg
(bad)
jb
arpl
test
ror
jge
ins
push
retf
or
xchg
mov
aaa
sub
in
add
cs
fnstenv
adc
lods
outs
pusha
push
cmp
rcl
push
xor
and
aad
inc
xor
push
xchg
mov
fcmovnb
(bad)
popf
pop
dec
dec
push
js
push
jo
lahf
out
or
jge
inc
imul
cmps
sub
imul
push
in
add
sub
(bad)
retf
push
stos
leave
aas
sub
xchg
fisttp
nop
pop
mul
stos
add
daa
push
adc
mov
fcom
mov
push
dec
leave
xor
data16
clc
nop
int
mov
push
movs
lea
jno
push
(bad)
jns
in
ret
pop
sbb
test
cmps
stos
aad
je
jle
fwait
idiv
retf
push
jmp
pop
add
sbb
push
(bad)
xchg
push
popf
es
or
enter
loop
(bad)
xchg
adc
pop
xor
pop
add
(bad)
mov
popa
jo
sbb
mov
jl
pop
sub
lahf
das
push
xchg
mul
sbb
pop
push
div
and
aad
and
xchg
sbb
and
cs
jne
mov
xchg
dec
cmp
(bad)
and
push
loop
inc
sub
push
dec
mov
hlt
jne
cli
cmps
(bad)
mov
frstor
mov
push
pop
push
std
in
lds
repz
cmp
mov
adc
push
jae
vmovsd
inc
call
dec
out
push
lods
xchg
cli
(bad)
(bad)
out
mov
mov
push
lahf
inc
sti
popf
imul
imul
inc
pop
inc
mov
mov
xchg
xor
leave
popa
cld
cmp
xchg
out
jl
movs
inc
inc
nop
addr16
(bad)
data16
add
sub
xchg
mov
scas
add
call
test
(bad)
cli
fcomi
sub
sti
lahf
sbb
or
das
cmp
inc
mov
ret
mov
mov
dec
fs
dec
test
(bad)
mul
fbstp
cwde
push
and
mov
test
inc
mov
clc
int3
imul
pop
daa
or
in
out
dec
(bad)
retf
and
push
xchg
ds
add
pusha
jmp
mov
dec
sbb
mov
xor
mov
mov
mov
sub
in
test
adc
stos
add
push
arpl
(bad)
(bad)
jns
push
jecxz
test
loop
mov
pop
stc
leave
cmp
scas
or
or
icebp
int3
sub
lods
pop
mov
or
and
xor
add
and
lock
add
add
sbb
sti
popf
inc
js
push
sbb
xor
xor
mov
mov
arpl
not
mov
mov
push
add
add
fistp
or
lea
pop
shl
xchg
shl
into
and
mov
shl
fdivr
fs
adc
scas
pop
add
jecxz
stc
or
mov
stos
xor
mov
xor
mov
mov
hlt
dec
dec
mov
(bad)
mov
pop
add
jb
in
or
iret
(bad)
ins
mov
push
jae
(bad)
ins
and
cmc
inc
test
or
adc
mov
sti
and
fbld
ret
push
mov
(bad)
(bad)
mov
inc
pop
adc
push
dec
jb
out
lods
call
cmp
push
call
mov
or
pop
lds
ins
outs
adc
imul
jne
not
sbb
les
ss
imul
add
aas
cmp
mov
pop
jge
ja
mov
cmps
(bad)
ins
sti
(bad)
xchg
mov
add
cmp
sub
movs
mov
jge
dec
aaa
sbb
int
aam
fcom
lds
clc
mov
arpl
inc
sub
sbb
int3
jae
repnz
hlt
out
pop
loop
xor
clc
rol
jecxz
xchg
lods
(bad)
mov
(bad)
sbb
mov
lods
mov
(bad)
(bad)
inc
pushf
data16
out
daa
jmp
mov
cmp
pop
pop
push
dec
outs
ins
ds
or
into
dec
jns
stos
shl
cmp
into
inc
add
ins
stos
(bad)
gs
mov
mov
pop
pop
sub
cwde
mov
loop
test
inc
xor
addr16
not
mov
repz
mov
test
fsubr
loopne
sti
mov
mov
nop
(bad)
sbb
jb
push
pop
outs
cmp
lods
dec
test
cmp
rcl
or
dec
int3
or
gs
and
aad
jmp
scas
ror
push
xlat
adc
pop
mov
inc
fwait
inc
jns
xchg
sbb
mov
cmc
or
pusha
icebp
push
es
and
call
mov
mov
xor
push
mov
ret
aas
dec
call
js
inc
loope
scas
nop
jae
loop
(bad)
push
cmp
sbb
inc
je
cmp
fs
pop
dec
dec
xchg
daa
xchg
or
aad
mov
pop
push
push
cmc
and
neg
sbb
stc
repz
cmps
or
mov
ins
ds
pop
or
mov
mov
mov
push
(bad)
not
jae
cmp
sbb
push
shl
xchg
int3
mov
pushf
xchg
sub
add
inc
add
repz
add
push
lock
mov
mov
inc
mov
lods
cs
ret
push
mov
sbb
lods
outs
sbb
mov
in
mov
iret
lea
push
mov
xor
mov
lods
dec
cmps
sbb
test
cmps
jns
repnz
pop
mov
sub
int3
outs
or
ins
in
fisttp
dec
div
rcr
pusha
jp
add
mov
aam
sbb
popa
fs
movs
pop
into
mov
cmp
les
data16
xchg
pop
fsub
sti
addr16
and
mov
test
aad
cmps
call
xor
adc
shr
in
ret
push
adc
cdq
mov
sar
lods
adc
out
ja
lods
sub
mov
inc
mov
addr16
sbb
aad
retf
xor
add
inc
repz
(bad)
mov
(bad)
push
mov
je
mov
mov
xor
pop
adc
push
or
jl
and
jne
(bad)
scas
dec
xchg
xchg
outs
or
xchg
clc
cmps
add
jno
and
sbb
ins
addr16
jbe
jl
gs
mov
adc
mov
push
ins
mov
xchg
mov
jmp
jge
out
int3
push
in
add
or
iret
mov
or
pop
jae
mov
xchg
jne
push
arpl
xchg
xor
xchg
(bad)
imul
xchg
pop
or
cmps
ret
dec
xor
mov
int
iret
les
pop
sub
fisttp
adc
repz
pop
mov
bound
mov
shl
pop
add
xchg
jecxz
jo
adc
adc
sub
test
dec
pop
in
and
sbb
sbb
mov
xchg
push
jmp
popa
loope
mov
pop
loope
retf
mov
sub
xor
movs
rcr
push
mov
repz
jbe
aad
ins
jg
cs
addr16
fbstp
outs
nop
inc
add
inc
icebp
mov
fmul
dec
mov
jmp
mov
pop
lods
cmps
mov
je
xchg
in
xchg
lods
fwait
cmp
shr
jle
jae
idiv
jge
mov
pop
or
lods
call
sub
xor
mov
cmp
xchg
mov
test
pusha
int
jmp
or
into
jmp
xchg
jae
sub
out
fsub
jns
mov
add
cdq
ja
call
shl
jno
xchg
gs
clc
jae
shl
jmp
iret
and
fmul
inc
adc
sti
push
add
jmp
and
lock
pusha
shl
pop
popf
jmp
dec
int3
aas
test
mov
outs
sbb
mov
dec
cli
mov
add
(bad)
rcl
cwde
dec
hlt
adc
cmp
inc
dec
adc
scas
mov
xor
sub
sti
mov
inc
test
inc
hlt
ror
mov
cmp
lods
or
cs
xchg
add
icebp
test
nop
sar
je
loop
rcr
cmc
shl
sbb
jl
mov
rcl
mov
aam
add
dec
movs
add
out
cs
(bad)
fdivr
ds
pop
add
scas
sub
mov
popf
adc
out
stos
xor
popa
call
add
add
popa
mov
pop
fucomp
lea
ins
fsub
adc
jge
add
sti
xchg
in
and
xor
jb
and
fxch
or
push
fstp
sbb
fistp
call
(bad)
movs
pop
in
dec
xor
sbb
call
rcl
lods
and
pop
(bad)
pop
cmp
and
fbstp
cld
pop
fst
add
sub
pop
cmps
and
push
gs
and
sbb
scas
div
or
clc
xchg
dec
sub
sbb
xor
stc
sbb
es
loope
and
into
pavgb
fcomp
inc
or
add
rol
mov
icebp
inc
out
scas
mov
inc
and
add
(bad)
call
xor
imul
xchg
cmp
xor
outs
add
sbb
cdq
out
and
fsubr
test
add
daa
add
cmp
fstp
dec
inc
fldenv
iret
imul
pop
rcl
sbb
pop
dec
bound
jae
push
retf
mov
xchg
cmc
fnstsw
iret
mov
jecxz
push
or
adc
jecxz
pop
mov
pop
push
loop
fistp
sub
xchg
jns
daa
jecxz
inc
into
inc
scas
cmp
pusha
(bad)
movs
and
outs
push
mov
test
cmps
lds
mov
push
xchg
dec
mov
sub
movs
adc
mov
popa
push
push
and
lahf
and
(bad)
(bad)
or
stos
sbb
in
fsub
stos
xchg
sti
call
sub
das
(bad)
cs
movs
ret
jle
shr
push
cmp
xor
sub
sub
jnp
dec
push
lock
xor
into
cwde
(bad)
cli
or
aad
cmp
repnz
mov
inc
rcl
jge
dec
mov
xor
mov
inc
xor
movs
bndstx
in
cli
pop
push
mov
push
(bad)
enter
push
xchg
inc
jmp
imul
sti
loope
add
push
push
adc
adc
adc
setge
repnz
mov
or
(bad)
int3
jo
dec
inc
fmul
cmp
sar
pop
jo
pop
dec
std
sub
ficomp
or
sub
lods
mov
cmps
cdq
jo
cmp
arpl
mov
xrelease
xchg
scas
lahf
stc
fst
gs
cmp
cmc
sar
inc
stos
stos
and
mov
mov
push
inc
and
lahf
(bad)
cmps
pop
in
daa
int3
xor
sbb
inc
sbb
add
hlt
or
pusha
test
cmp
sub
cmp
mov
mov
jnp
mov
pop
pop
pop
ret
xchg
xchg
ins
sub
mov
mov
xchg
ja
movs
imul
xlat
(bad)
jae
sar
cmc
dec
daa
add
pop
jo
jne
mov
xor
jmp
int3
sub
or
mov
dec
push
jmp
adc
xchg
out
mov
add
fs
fsub
call
jmp
mov
call
lahf
xchg
inc
xchg
retf
shr
push
ficom
mov
mov
xchg
mov
fbstp
ss
adc
pushf
gs
mov
sbb
cmc
pop
lods
fnstenv
cwde
dec
cmps
outs
into
xchg
dec
and
iret
pop
cmp
push
jge
idiv
inc
js
outs
addr16
hlt
inc
jp
or
lods
mov
lahf
jl
jp
(bad)
fcmovbe
arpl
jmp
lods
inc
jl
imul
jmp
enter
cs
shl
call
add
add
fs
jnp
push
or
add
or
sub
jns
mov
mov
out
adc
jg
sbb
pop
daa
fadd
imul
push
add
into
fcmovb
inc
int3
aaa
adc
popf
dec
ret
dec
div
jnp
pop
inc
sub
pop
aam
shr
jae
xor
dec
push
adc
xadd
out
mov
ret
ja
xchg
adc
or
pusha
or
xchg
mov
jp
fisub
xor
or
inc
test
pop
sti
in
inc
outs
adc
mov
lds
jns
or
shl
fcomp
cmp
jg
scas
stos
push
push
push
sub
mov
pushf
cmp
jb
inc
inc
xchg
test
nop
cdq
sbb
jmp
sbb
or
scas
jnp
shl
cmp
inc
and
cli
dec
pop
cmp
adc
cmc
mov
stc
jno
ret
fwait
mov
cli
push
pop
mov
bound
jns
aaa
inc
pop
add
jp
test
jecxz
push
rcr
sub
jns
int3
dec
cmp
xor
cmp
sub
rcl
leave
xlat
push
pop
es
sbb
sbb
je
xor
add
mov
repz
jp
xlat
push
xor
cmp
push
es
aam
mov
in
retf
shr
xor
and
push
xor
and
dec
xlat
xchg
fsubr
xchg
mov
scas
jnp
enter
inc
test
popa
dec
int
hlt
mov
mov
loop
pop
je
sahf
and
rcr
inc
test
popa
addr16
xchg
not
adc
adc
mov
push
mov
dec
das
outs
test
push
sbb
repnz
sahf
mov
pop
or
mov
(bad)
mov
sub
aaa
push
cmp
stos
xchg
dec
pop
mov
inc
mov
push
out
imul
xchg
out
out
test
mov
jecxz
inc
push
mov
lock
mov
mov
aaa
pop
push
fwait
cmps
cmps
jbe
push
imul
cmps
sbb
sti
retf
mov
jmp
inc
jbe
ror
fld
adc
inc
popf
retf
jmp
cld
pushf
ror
dec
cdq
sar
mov
xchg
test
out
(bad)
sub
scas
pop
dec
or
jge
push
fs
shl
fwait
sub
fidiv
adc
add
jmp
inc
dec
mov
inc
sbb
jmp
(bad)
lds
xchg
ficomp
loop
push
mov
mov
sbb
lds
je
ja
mov
ror
xor
jg
scas
cdq
mov
mov
out
stc
pop
stc
push
bound
(bad)
mov
xchg
and
(bad)
js
jmp
jbe
imul
mov
loop
cmp
push
addr16
push
mov
dec
repnz
adc
out
lock
cmp
push
mov
cs
dec
data16
fiadd
push
cdq
adc
das
dec
xor
push
mov
or
shl
push
and
jae
sar
jns
(bad)
fcom
mov
sub
mov
stc
mov
dec
in
js
cmps
dec
ja
(bad)
mov
lds
lahf
add
xchg
jae
inc
icebp
mov
pop
adc
add
fucomp
push
cmp
xor
mov
mov
sub
test
scas
loope
test
lock
cmp
or
aad
xor
dec
jno
xor
push
je
nop
lahf
nop
mov
inc
mul
shl
scas
jmp
arpl
add
stc
mov
popf
and
xor
cmp
xchg
push
retf
sbb
frstor
inc
or
cmp
add
hlt
(bad)
and
(bad)
mov
imul
in
aad
hlt
push
push
jbe
(bad)
in
push
inc
aam
cdq
mov
emms
(bad)
shr
loope
mov
xchg
cmp
dec
rcl
add
daa
movs
mov
mov
test
sub
sahf
pop
fld
cmp
push
jge
or
push
mov
dec
fwait
imul
jmp
push
push
sbb
rcl
push
in
mov
pop
(bad)
fisttp
and
inc
stc
cmp
(bad)
and
out
imul
sbb
aas
stos
loopne
xlat
shl
gs
pop
jae
and
leave
push
std
push
fs
fwait
movs
dec
test
in
xchg
popf
inc
lods
mov
xchg
aaa
mov
sub
cdq
cwde
dec
jmp
mov
cld
aas
sub
xor
sub
retf
dec
fwait
sbb
cmp
test
fsubr
push
or
repnz
or
sub
or
mov
add
clc
mov
or
retf
sbb
jae
dec
mov
push
aaa
and
pop
rcr
xchg
adc
cmp
mov
dec
pop
cmp
rcr
pusha
and
add
scas
fdiv
in
mov
or
fdiv
ret
adc
scas
out
sub
dec
imul
sbb
mov
cwde
push
add
movs
mov
inc
daa
aad
fsub
lods
pop
cmps
mov
aaa
test
ret
jno
mov
or
mov
xchg
push
mov
sbb
cmp
sbb
ror
adc
inc
xchg
add
jne
mov
or
mov
xchg
lods
xchg
jmp
and
add
aaa
push
inc
jne
mov
les
and
fcomp
lods
mov
pop
cmp
and
cmp
xchg
inc
pop
push
dec
shl
push
mov
push
(bad)
daa
scas
sbb
dec
jg
and
jle
xor
in
idiv
inc
add
retf
bound
sahf
mov
pop
daa
mov
fs
mov
sub
mov
xor
adc
push
adc
mov
retf
sub
shl
popa
mov
push
js
out
xor
mov
out
and
jg
sub
xor
test
mov
push
int
popa
pop
ror
and
adc
fucomi
xchg
ffreep
dec
fs
dec
dec
movs
mov
loope
mov
mov
sahf
or
sub
push
out
pop
ret
ja
es
add
test
mov
and
xchg
dec
mov
and
aaa
ins
adc
xchg
mov
lahf
pushf
pop
movs
shr
mov
jl
dec
int3
jg
mov
sub
not
push
popf
jecxz
loop
outs
xchg
dec
mov
imul
pop
adc
jecxz
loope
add
inc
(bad)
pop
mov
das
jbe
dec
sti
mov
stos
jl
inc
js
cmp
xor
in
lock
lods
xor
inc
mov
loope
jae
pop
mov
(bad)
dec
jnp
fldcw
ja
pop
sbb
mov
push
sub
mov
push
cmp
add
fisttp
cmp
mov
xchg
ret
(bad)
lods
fstp
cmp
in
dec
jg
cmc
outs
pop
addr16
jbe
cld
retf
sub
mov
es
add
fstp
mov
das
fsubr
mov
add
icebp
pop
xor
je
adc
sub
ins
loopne
inc
icebp
icebp
mov
jnp
shl
and
mov
push
aad
mov
stos
mov
sbb
jmp
mov
xchg
inc
xchg
mov
inc
ror
inc
imul
leave
xchg
add
mov
jb
mov
push
out
sbb
xchg
add
sbb
aas
jge
mov
sbb
clc
jp
leave
test
and
mov
sub
xchg
jmp
icebp
popf
aad
cmp
jg
pop
fisubr
mov
sbb
inc
xchg
xchg
movs
dec
mov
sub
or
shl
cmp
test
jle
bound
pop
sbb
shl
mov
rcl
jo
sbb
nop
es
xor
retf
fs
sbb
add
inc
fidiv
in
fs
lock
xor
stos
test
iret
cmp
clc
into
pop
jecxz
mov
and
xchg
cmp
cmp
lahf
loopne
xchg
jo
sub
mov
jmp
out
rcr
add
jae
xchg
out
xchg
mov
jb
in
lods
and
cmp
push
retf
jp
popa
cmp
dec
and
and
std
push
ret
jg
mov
pop
and
cdq
out
addr16
rcr
in
das
pop
cli
lods
adc
test
jae
(bad)
scas
xchg
movs
sub
int
ins
aaa
cmp
repnz
push
sbb
dec
push
jp
push
mov
rcr
pop
test
aas
dec
test
je
jle
icebp
je
sub
pop
dec
lods
sbb
ret
push
retf
pop
mov
push
std
cmp
ss
sar
lods
cdq
fadd
push
je
(bad)
cmp
sub
ret
int
cmp
(bad)
imul
fld
fsub
mov
ret
aad
inc
or
jnp
not
test
outs
or
enter
fld
add
js
sahf
add
xchg
and
push
pop
jnp
add
gs
push
inc
les
mov
popa
adc
push
movups
xchg
je
add
out
in
push
imul
(bad)
aam
mov
xor
and
mov
loopne
or
push
push
pop
imul
shr
fdiv
dec
movs
fist
inc
dec
inc
or
loop
adc
and
pop
inc
cs
adc
lods
pop
push
dec
or
xchg
fbld
mov
dec
retf
je
test
jno
popa
jmp
ret
popa
ret
inc
cmps
pop
out
dec
ds
pop
fidiv
ret
inc
mov
cli
retf
adc
inc
push
mov
push
add
mov
push
mov
retf
dec
jge
xchg
stc
inc
outs
mov
jae
inc
sahf
inc
add
xchg
pop
in
aam
mov
add
imul
cmp
movs
mov
and
ins
adc
int
jl
xchg
jle
push
mov
and
push
add
popa
mov
xor
push
pop
(bad)
dec
into
scas
cmp
popa
sub
sbb
xor
loop
mov
push
xchg
in
das
daa
adc
lods
adc
sub
repz
mov
les
nop
out
and
out
adc
mov
mov
loopne
pop
out
adc
xor
in
cld
inc
xor
add
sbb
pop
mov
or
dec
int
xchg
outs
dec
(bad)
mov
adc
repz
dec
and
bound
pop
fxam
xor
movs
repz
or
push
xchg
and
(bad)
enter
jbe
push
mov
or
lods
cmp
inc
dec
push
pop
sbb
shr
ins
adc
push
pop
fdiv
mov
mov
mov
xchg
mov
mov
not
out
daa
dec
stos
sbb
push
and
rcl
sub
nop
sub
mov
pop
data16
mov
push
ss
xchg
xor
jle
and
jmp
mov
ins
aaa
jmp
inc
jne
int3
fimul
dec
arpl
aad
mov
movs
and
jmp
mov
mov
pop
xchg
and
ins
cli
movs
in
pop
stos
mov
(bad)
ret
mov
sar
pop
xor
(bad)
ficom
sbb
adc
xchg
mov
pop
aas
retf
shl
stos
cld
push
add
ss
push
cs
jmp
jge
pop
push
jp
adc
pop
(bad)
pop
xor
mov
xchg
mov
(bad)
std
mov
dec
adc
dec
jb
and
jecxz
push
sub
les
lock
std
mov
inc
xor
add
mov
dec
aaa
jno
jo
mov
jns
sahf
into
addr16
scas
or
jne
test
inc
iret
daa
mov
pop
fisttp
inc
sub
adc
loope
enter
inc
mov
cmovb
gs
inc
cmp
xchg
add
xchg
ror
add
inc
cmp
sub
or
pop
jne
aaa
dec
sub
and
call
loopne
push
test
std
ins
mov
cmp
aas
das
icebp
repnz
imul
(bad)
retf
and
nop
jg
inc
pop
jo
loopne
sub
dec
fstp
arpl
cli
inc
sahf
push
add
lds
test
dec
movs
popf
push
(bad)
mov
out
cmp
in
dec
int3
jbe
mov
aaa
ins
lods
js
sub
test
mov
stos
adc
stos
mov
call
test
add
xor
xor
popf
jb
outs
push
sbb
scas
cmp
cdq
int3
mov
cmps
loope
and
cmp
movs
(bad)
cdq
movs
push
movs
lods
pop
cmp
int
sti
les
aad
stc
lods
loope
stc
jmp
push
ret
add
sbb
fst
iret
jae
push
test
mov
dec
xchg
xor
fwait
mov
fmul
xor
lahf
scas
mov
inc
jle
in
movs
test
inc
inc
call
outs
xor
or
xor
and
movs
mov
jmp
std
aad
and
(bad)
ins
call
jnp
add
int3
and
or
lahf
adc
sub
imul
sbb
or
or
push
jg
imul
or
scas
mov
jne
movs
push
add
mov
int3
inc
aad
dec
enter
mov
imul
mov
loopne
test
repnz
cmps
cmp
xchg
sub
das
ss
movs
sub
xor
cmp
sub
jb
ss
mov
xor
or
dec
mov
dec
jno
and
dec
jmp
repnz
fdivp
(bad)
jno
xor
sub
jmp
xchg
lock
icebp
inc
sahf
pop
sub
cmp
les
enter
bound
mov
jnp
xor
(bad)
retf
iret
xchg
repz
dec
fnstsw
and
adc
das
add
rcr
push
add
pop
mov
cmp
sbb
cwde
inc
test
dec
jmp
add
loop
sbb
push
lock
adc
imul
mov
or
inc
sub
xor
pop
pop
dec
dec
lods
dec
or
pop
das
sub
dec
mov
bound
mov
fcomp
hlt
test
or
mov
shl
add
mov
sahf
or
inc
and
push
aam
mov
xor
push
inc
inc
jge
pop
cmp
sar
jle
push
and
and
loop
or
into
adc
jbe
in
pop
jne
mov
sbb
(bad)
inc
popf
(bad)
pop
int3
shr
sti
(bad)
ds
adc
cmp
pop
pusha
test
sbb
fwait
pop
adc
fcomp
xchg
rol
or
movs
mov
and
or
xor
adc
cwde
ds
in
jb
cmp
mov
call
test
mov
adc
or
in
and
leave
wbinvd
push
push
in
sbb
lods
out
jae
jae
push
adc
retf
xchg
stc
xlat
scas
dec
cmp
sbb
pusha
clc
jnp
push
cld
xlat
jmp
js
mov
sub
inc
or
jle
hlt
lods
or
adc
shl
xor
cmp
lea
aas
jne
xor
jl
addr16
sbb
push
mov
sub
daa
mov
aaa
movs
mov
mov
inc
xor
loope
sti
lods
bound
das
jns
push
xor
imul
pop
in
mov
dec
xor
out
into
push
mov
enter
cdq
inc
rcr
stos
or
and
inc
adc
push
jp
mov
or
mov
mov
mov
mul
out
iret
fadd
mov
fs
lock
mov
adc
xchg
mov
ins
ret
sbb
lds
retf
jno
nop
les
add
je
fwait
add
aad
and
aaa
cs
dec
div
out
jns
mov
cmp
in
in
(bad)
adc
mov
out
repnz
jno
adc
xor
add
cli
ret
jl
outs
mov
ret
stc
xor
fidivr
out
push
lods
mov
in
cwde
mov
retf
cdq
jge
sbb
(bad)
out
xchg
xor
dec
jno
sahf
es
gs
cwde
stos
je
call
lods
movs
mov
xchg
cwde
adc
repz
shr
dec
adc
je
mov
fdiv
cmp
xchg
cdq
aam
cmps
jmp
fst
xor
ja
and
shr
xor
pop
out
jb
mov
cmp
sbb
adc
aaa
sbb
push
sub
pop
mov
sbb
jns
add
mov
inc
dec
dec
and
loop
imul
push
adc
add
aas
sbb
pop
add
cld
scas
push
cld
daa
inc
cmps
in
fdiv
push
idiv
adc
faddp
(bad)
push
sbb
inc
jl
add
xchg
jnp
add
sbb
pusha
mov
fiadd
and
sub
sahf
in
loope
push
jo
fistp
in
adc
ins
pop
pop
dec
cmp
(bad)
iret
sbb
add
cmp
dec
(bad)
js
in
outs
jmp
cld
icebp
mov
call
mov
mov
dec
or
cmp
xor
xor
push
fmul
pop
mov
popf
loope
in
mov
not
jmp
sbb
mov
rcr
or
sub
sub
gs
mov
xchg
jo
fild
(bad)
lea
mov
stc
bound
jecxz
sbb
add
dec
xchg
scas
movs
daa
add
in
sbb
xor
sbb
es
das
xchg
lods
stc
and
push
ds
stos
inc
sub
inc
mov
cwde
test
je
push
ret
xchg
adc
ss
hlt
test
(bad)
scas
inc
add
int
push
lahf
out
push
mov
cwde
js
js
dec
shr
mov
dec
sti
imul
or
mov
leave
scas
ds
test
or
jge
dec
movs
and
sbb
mov
push
test
sbb
mov
push
jp
dec
enter
and
std
in
data16
cmc
lahf
(bad)
adc
cmp
sbb
or
cmp
outs
iret
push
(bad)
div
pop
add
out
hlt
int3
loopne
or
and
cmc
int3
pushf
cdq
out
dec
jecxz
or
push
cmps
sub
cmp
xchg
data16
out
push
sub
xchg
mov
test
ja
push
jmp
cmp
push
jo
imul
gs
enter
pop
and
mov
inc
ret
xchg
ret
mov
adc
add
aaa
or
cwde
gs
(bad)
test
dec
lock
in
lods
and
push
mov
nop
dec
xor
iret
push
jl
cmp
popw
(bad)
mov
or
or
pop
ds
sbb
or
(bad)
in
xor
xor
cld
jne
inc
mov
pop
movs
jns
out
push
xchg
mov
inc
and
add
sbb
sbb
lock
mov
xchg
stos
movs
stos
(bad)
lahf
adc
push
aaa
aaa
pop
inc
fucom
call
ins
iret
(bad)
or
rcr
outs
sub
dec
add
mov
js
xlat
fmul
fisttp
sti
pop
dec
mov
pushf
mov
push
ja
clc
call
(bad)
mov
cs
js
ins
mov
sbb
push
inc
push
pusha
aaa
sub
cmp
mov
adc
mov
loopne
inc
cmc
xchg
inc
pop
pop
fisub
inc
sbb
sub
sahf
cwde
cwde
stos
sbb
cld
fs
stos
cwde
sub
adc
(bad)
xor
out
xor
push
imul
jge
sti
retf
rcr
sti
jns
xchg
popa
scas
mov
lock
mov
or
rol
or
xchg
mov
cmc
xchg
das
sbb
retf
and
add
loop
jae
sbb
add
pop
aas
cmps
xchg
sar
jl
add
gs
or
sbb
jge
sar
cmps
push
es
xlat
retf
xor
sbb
xor
xor
add
cmp
nop
cdq
jl
jmp
push
xor
imul
loope
outs
push
jno
mov
stc
adc
push
call
cs
mov
mov
mov
mov
not
push
push
push
xor
jmp
pop
popa
or
pushf
jno
dec
out
pop
push
inc
test
mov
xchg
mov
das
scas
jecxz
loop
aas
das
loop
jno
cmp
jl
add
test
mov
lods
xchg
push
adc
cwde
dec
jl
push
cmp
mov
mov
shl
repnz
xchg
jo
jmp
cmp
mov
mov
jmp
div
add
pusha
das
jle
jg
xchg
arpl
push
or
dec
clc
idiv
xlat
cmp
jmp
jmp
jge
mov
cdq
cld
(bad)
push
pop
ret
and
retf
sub
mov
jb
and
data16
ror
rcl
(bad)
pop
rcl
popa
enter
jb
and
aaa
mov
out
loope
mov
sub
rcr
sti
sbb
mov
or
or
arpl
rcl
lea
push
xchg
test
pop
aam
sahf
rcl
sbb
pop
jbe
daa
xor
and
pop
jno
jae
sub
(bad)
stos
mov
xchg
inc
cmp
add
rol
push
inc
jmp
icebp
push
sbb
jb
push
add
out
outs
stos
ficom
xchg
mov
sub
fidiv
mov
jg
mov
dec
mov
aad
rcl
pop
dec
xlat
cmc
push
mov
jbe
xor
mov
(bad)
xor
cli
nop
mov
xchg
out
push
xchg
adc
xor
out
out
movs
jo
mov
jno
push
(bad)
imul
lea
dec
fst
sbb
mov
cmc
pusha
mov
ins
inc
in
dec
jnp
sub
xor
in
ins
dec
mov
ins
ins
in
mov
fcmovnu
jmp
dec
jnp
add
cdq
mov
test
movs
adc
add
dec
push
pop
into
mov
popf
xchg
xor
cmc
sbb
popf
push
(bad)
(bad)
aaa
idiv
sahf
repnz
iret
cmp
stos
xor
ficom
shr
add
inc
and
out
arpl
cmp
ins
data16
ds
push
mov
pop
push
dec
pop
pop
enter
sub
in
lods
mov
push
rcr
or
mov
loopne
push
int
xor
pop
dec
add
cwde
push
cmc
outs
loop
mov
cmps
int
mov
hlt
arpl
ins
jnp
or
test
mov
mov
lea
(bad)
js
mov
lea
inc
inc
jnp
jmp
xchg
mov
inc
movs
aaa
sbb
(bad)
ret
fld
jb
pop
or
data16
jge
jg
cwde
push
imul
add
mul
add
(bad)
push
pop
mov
lods
and
repz
mov
mov
call
mov
or
xor
lahf
push
add
sub
fsubr
xor
lods
sub
and
jnp
arpl
cmp
scas
or
(bad)
movs
out
test
and
pusha
mov
mov
jg
mov
in
pop
out
test
pop
push
push
les
mov
lea
cmp
adc
out
xchg
daa
lea
jne
movlpd
scas
cmp
sub
(bad)
mov
fistp
iret
(bad)
das
into
loop
popf
inc
nop
loopne
cmp
add
cmp
xchg
sbb
pop
cdq
lahf
aaa
ins
popa
xchg
push
push
ins
call
or
xchg
sub
lds
loope
and
sub
jo
jp
ret
xor
mov
cdq
retf
xchg
push
dec
adc
rcl
icebp
push
mov
jmp
les
shr
lock
jo
pusha
repnz
dec
movs
cmp
xlat
pop
xchg
mov
sbb
test
and
mov
or
jae
mul
sub
dec
fmul
pop
in
mov
inc
jb
cld
push
fld
sub
mov
jnp
add
iret
push
pop
sar
jge
add
das
ss
adc
sbb
nop
inc
mov
pop
call
and
stc
into
pop
fnstsw
inc
and
cdq
mov
(bad)
lods
xchg
loope
inc
std
xor
addr16
xor
aad
sub
sahf
stos
mov
mov
sub
shl
add
fdiv
imul
and
or
push
hlt
mov
fist
push
sahf
pop
inc
fcmovne
pop
cld
xchg
mov
lds
fisub
mov
shl
add
jb
sahf
xor
jo
out
shl
(bad)
mov
inc
sahf
movs
xor
adc
and
push
retfw
inc
sbb
and
jnp
std
sbb
jge
inc
push
es
push
(bad)
push
and
cmc
pop
xchg
repnz
push
push
call
jno
fmul
adc
pop
mov
adc
pop
mul
std
fwait
aaa
shl
jge
mov
shl
adc
aaa
push
push
sub
mov
call
retf
icebp
mov
lea
and
(bad)
cmc
loopne
sbb
jmp
lods
scas
pop
xchg
jge
stc
jl
sub
add
fld
push
fwait
mov
dec
mov
xchg
jp
aad
int
sbb
popa
mov
mov
fcom
retf
sbb
scas
jae
(bad)
mov
mov
pop
(bad)
jns
pop
int
(bad)
int
cmps
pop
sub
cmps
enter
and
movs
call
mov
add
push
mov
arpl
out
add
mov
loope
sbb
jmp
leave
int
fcom
imul
jmp
loope
mov
stc
mov
test
mov
pop
mov
mov
add
inc
out
mov
mov
rcr
pushf
dec
cmp
imul
lds
lods
cmp
iret
outs
push
movs
mov
imul
div
(bad)
into
adc
cmp
(bad)
or
test
addr16
(bad)
fistp
sub
mov
inc
cmp
hlt
adc
xor
arpl
or
ds
gs
pop
aas
mov
aam
mov
loope
dec
out
or
scas
xlat
arpl
leave
stos
inc
shl
out
fs
dec
imul
retf
fcomp
xchg
xchg
or
pop
mov
xor
lods
dec
fnsave
push
inc
test
hlt
push
(bad)
push
(bad)
bound
fisttp
mov
pop
not
inc
popa
div
dec
or
push
fimul
dec
inc
mov
cmp
dec
pop
push
call
test
daa
in
cmp
sbb
call
loopne
ins
xchg
sub
adc
sbb
loopne
rcr
mov
add
mov
sub
lods
mov
nop
dec
ds
(bad)
xor
or
mov
movs
mul
ss
cmps
push
into
push
adc
lahf
shl
cld
cdq
push
arpl
in
sub
jae
and
call
and
call
(bad)
xchg
ja
adc
xor
mov
scas
jl
cs
pop
push
push
data16
lock
jae
add
mov
sbb
pop
cmp
rcr
dec
pop
jo
lods
pop
(bad)
push
xchg
adc
mov
mov
rcl
mov
dec
xchg
pop
inc
pushf
sub
add
out
shl
pop
lock
cmps
(bad)
pop
popf
mov
jge
fld
and
mov
sbb
std
xchg
ins
icebp
and
(bad)
outs
je
mov
not
push
xor
cs
leave
mov
push
cs
pop
cs
sbb
call
xor
fnsave
jmp
or
cld
rcl
addr16
jns
and
mov
xchg
or
pop
paddd
push
mov
movs
xor
test
jnp
jl
popa
(bad)
rcr
sub
aam
dec
iret
jb
and
push
push
sbb
add
xor
in
sub
outs
sar
xchg
push
or
push
aam
add
pop
fucomi
push
mov
movs
adc
cwde
jns
cmps
mov
sub
arpl
or
dec
sub
jo
repnz
dec
sbb
mov
stos
add
push
or
xchg
jecxz
or
into
dec
sbb
clc
out
dec
cmp
mov
mov
and
mov
rcl
mov
fwait
and
out
pop
scas
je
arpl
aaa
icebp
int
cdq
mov
pusha
sub
mov
fs
(bad)
sub
aad
dec
ins
pop
xor
lods
loopne
jb
inc
dec
out
mov
daa
push
push
xor
mov
neg
xchg
rcl
xor
sub
mov
adc
scas
fist
sub
cmp
cmc
sti
adc
xchg
imul
mov
add
sbb
ins
aaa
mov
cmp
xlat
inc
and
or
xlat
test
mov
sub
imul
xor
(bad)
in
mov
ins
mov
sub
or
and
or
mov
cmp
dec
iret
add
inc
add
sub
pop
bound
push
xchg
jmp
mov
jl
out
inc
xor
mov
(bad)
mov
scas
(bad)
out
push
push
pop
lods
mov
xchg
jmp
in
pop
pop
imul
fld
sub
(bad)
stc
push
(bad)
mov
fwait
dec
push
push
cdq
addr16
mov
push
retf
jne
xor
rcl
pop
adc
push
jecxz
xchg
call
rcl
jmp
pop
push
fisttp
cli
xchg
test
leave
por
xor
jb
pop
addr16
sbb
shr
aad
in
mov
dec
leave
call
pop
dec
dec
dec
adc
lock
test
movzx
xchg
icebp
lahf
add
fimul
ins
in
add
(bad)
cmps
pop
cmp
sahf
scas
stc
xchg
and
mov
mov
fwait
mov
and
test
pop
add
ins
mov
xor
mov
sahf
ret
inc
push
mov
(bad)
adc
xchg
sbb
cmp
sbb
gs
mov
dec
dec
sub
and
fsub
adc
(bad)
in
fsubr
mov
hlt
rcl
pop
loop
mov
sub
jbe
dec
mov
nop
and
clc
push
mov
mov
push
and
cmp
icebp
movs
(bad)
adc
xor
cmp
sbb
jmp
imul
push
loope
mov
mov
test
jmp
or
repz
repz
and
ret
lahf
mov
ret
add
jne
pushf
aam
jbe
jl
mov
pop
not
sub
sar
pop
cwde
shl
stos
ret
and
(bad)
xchg
pop
mov
or
sti
sub
mov
mov
mov
jp
call
test
sbb
mov
inc
lods
jecxz
das
sub
xor
popa
jbe
mov
ss
xchg
xchg
repnz
retf
xlat
add
jne
mov
dec
adc
mov
mov
push
xchg
adc
lahf
cmp
jp
xlat
(bad)
jo
int
out
jmp
cs
mov
leave
retf
mov
mov
iret
xchg
fcmovbe
xchg
ins
sub
jnp
adc
sbb
mov
pop
cmp
push
das
ins
xor
push
rol
push
xor
sbb
ins
cmp
dec
sub
fs
inc
pop
xchg
mov
repz
es
add
add
xor
sar
fwait
sti
js
xor
jg
sub
adc
ins
sub
les
fstp
jmp
push
xor
push
cmp
popa
out
mov
es
mov
test
xor
(bad)
int
adc
ja
push
pop
jb
add
or
neg
test
or
cmp
aad
test
add
not
in
inc
pop
add
fldl2t
int
shr
push
iret
das
push
je
sub
mov
cmp
sbb
popa
adc
jg
xor
mov
clc
in
nop
mov
nop
dec
cmp
cmp
push
fiadd
sbb
fbstp
bound
cmc
cmps
dec
add
sub
add
rol
lea
adc
jmp
rcr
rol
inc
test
bound
scas
add
jbe
adc
je
add
cld
sub
jl
pusha
div
jl
scas
fs
jne
sbb
fwait
int3
add
mov
lahf
aaa
mov
mov
(bad)
leave
or
adc
sbb
jg
jae
retf
cmps
repz
sbb
adc
inc
cmp
xchg
sbb
jmp
add
xchg
cld
test
push
je
cmp
mov
(bad)
xor
pop
add
or
adc
cmps
mov
loopne
fcom
cli
mov
jo
rcl
sub
push
int3
push
cld
in
sbb
scas
dec
js
imul
push
into
into
xor
outs
push
jnp
mov
fisubr
and
call
sbb
(bad)
sbb
jno
xchg
dec
loop
adc
mov
jp
mov
pop
inc
out
push
adc
adc
adc
mov
inc
mov
push
sub
retf
mov
jecxz
jnp
sub
add
jne
shl
add
das
sti
xchg
xor
sbb
push
dec
sub
mov
rcl
xor
lods
xchg
xchg
and
inc
inc
inc
inc
enter
push
shl
aad
jle
aas
sbb
stc
xchg
push
rcl
jecxz
mov
pop
pop
inc
mov
shl
clc
inc
jecxz
outs
pop
pop
inc
add
lea
test
xchg
sub
movs
inc
mov
or
pop
js
or
inc
cli
adc
aam
and
cmp
fs
xchg
xchg
mov
sbb
clc
push
ss
mov
jnp
test
xchg
cmps
popf
pusha
shr
pop
mov
in
test
movs
nop
popa
test
das
fnstenv
mov
add
es
inc
mov
fsub
out
pop
in
(bad)
stc
loopne
inc
pop
cmp
pushf
or
es
es
sbb
ss
ret
loop
movs
loopne
xor
(bad)
(bad)
lock
add
inc
xchg
cmp
mov
push
stc
adc
imul
imul
dec
dec
lods
xor
mov
std
mov
icebp
aad
jns
retf
jmp
clc
mov
sbb
or
stc
cwde
mov
sub
ins
xor
into
daa
mov
xchg
dec
mov
cmp
loope
fwait
les
repz
cmps
mov
mov
fwait
mov
rcr
pop
jae
mov
pusha
add
dec
mov
test
mov
sub
sub
inc
adc
lods
aas
push
inc
stos
mov
push
mov
pop
jle
adc
or
jne
mov
lock
test
or
cmp
inc
push
pop
ss
fisttp
(bad)
jmp
dec
in
mov
imul
jp
sub
in
in
inc
sub
out
test
movs
mov
or
jns
ins
cdq
mov
pusha
nop
jg
xchg
sub
pop
repz
dec
mov
leave
aam
cdq
inc
and
rcr
inc
js
pushf
jmp
push
std
stos
push
mov
xor
mov
pop
inc
or
xchg
pextrw
(bad)
enter
int
aam
cli
jbe
dec
div
pop
inc
cli
idiv
ins
inc
retf
sbb
mov
loopne
popa
aas
sbb
and
or
daa
xor
mov
cld
pop
ja
aaa
repnz
adc
lahf
jp
adc
xchg
pop
fwait
xchg
mov
cmp
(bad)
outs
repz
fld
inc
xor
push
sub
push
clc
pusha
xchg
ret
data16
cdq
cmps
mov
add
daa
stos
jb
xor
aas
adc
inc
dec
mov
mov
mov
sub
xchg
mov
jmp
ror
arpl
in
pop
push
sub
stc
fsubr
mov
fsubr
or
sub
icebp
sub
xchg
fst
std
adc
cmps
xor
inc
mov
ins
push
popa
shl
(bad)
dec
xor
sub
and
scas
(bad)
xor
xlat
aaa
add
hlt
movs
jnp
jnp
out
cmp
mov
xor
(bad)
pop
and
(bad)
mov
xor
pop
lea
jmp
int3
daa
inc
scas
cli
imul
or
ror
pop
sub
lock
mov
push
adc
ffree
je
mov
and
xor
pop
dec
pop
test
mul
mov
pop
sar
in
imul
(bad)
xor
xchg
and
jg
mov
pop
push
imul
jb
mov
imul
sbb
(bad)
pop
xor
and
inc
inc
cld
dec
mov
add
jns
(bad)
std
daa
ins
ds
dec
xor
xchg
cmp
jge
(bad)
enter
lock
rcl
push
sbb
fst
repnz
cmp
lahf
inc
mov
jae
jb
sbb
dec
test
jp
mov
push
pop
(bad)
xchg
call
and
retf
aam
cld
nop
in
mov
push
pop
rcr
mov
mov
loop
mov
scas
push
cmps
lods
dec
ins
xchg
add
mov
xor
and
mov
or
jle
loope
inc
outs
jnp
lods
mov
lock
sub
inc
jo
push
movhps
pop
fmul
fs
test
sub
cmc
xor
or
(bad)
jns
dec
and
je
int3
jle
or
sbb
mov
fcom
mov
in
sbb
xor
push
xchg
movs
push
mov
nop
cmps
pop
je
cmc
sub
je
call
or
mov
mov
fld
loope
and
cmp
repz
ins
jg
fdiv
js
jno
inc
inc
jns
xor
xchg
sahf
sub
gs
rcl
mov
je
(bad)
bound
pop
push
mov
xchg
outs
xchg
test
pop
je
sar
call
cdq
out
jno
mov
aad
sbb
imul
push
jmp
jae
mov
outs
cmps
shl
cmps
enter
sub
cmp
xor
fld
add
pushf
jae
pop
stos
inc
(bad)
adc
and
xchg
jle
sub
popf
mov
inc
and
mov
mov
jb
pop
cdq
es
xchg
fbld
stc
dec
repnz
sub
cmps
imul
pushf
dec
jae
mov
ja
xchg
(bad)
aad
in
mov
nop
sahf
jbe
inc
data16
jo
push
jns
inc
push
fdivr
add
iret
jecxz
sub
mov
sub
dec
jge
and
movs
test
mov
sbb
rol
or
fist
loopne
das
cmps
cmp
jo
add
or
hlt
(bad)
lods
cwde
stos
push
and
mov
xchg
or
pop
mov
sub
scas
xor
add
(bad)
sub
(bad)
mov
xor
pop
in
push
and
mov
mov
fmul
not
and
hlt
push
push
fucomip
pop
inc
jb
jge
aaa
add
outs
ret
adc
(bad)
fisttp
pop
std
cld
aaa
xor
loop
pop
xor
add
push
inc
adc
loope
nop
mov
fist
jp
push
jg
dec
jmp
or
xchg
ins
mov
inc
mov
into
add
hlt
loopne
jmp
or
sbb
ret
add
xor
jae
retf
int
jmp
jb
(bad)
aam
repz
push
lock
or
mov
add
(bad)
popf
mov
std
fisubr
mov
mov
shr
sti
daa
stos
sub
xor
div
arpl
cmp
enter
cmp
jmp
je
inc
leave
pop
add
mov
outs
push
cli
ins
dec
gs
fidivr
inc
mov
shr
movs
movs
cmp
leave
add
jecxz
call
cld
and
mov
jae
xchg
scas
push
adc
sbb
jg
push
jb
pop
addr16
xchg
sbb
test
pop
xchg
hlt
iret
sahf
fisubr
pop
inc
dec
call
pop
mov
xchg
into
mov
inc
stos
and
sbb
lods
mov
scas
jle
inc
pushf
mov
mov
rcl
les
dec
push
ds
jne
shl
inc
imul
inc
cmp
(bad)
fild
xor
mov
adc
out
add
or
lea
popa
push
mov
push
dec
pop
leave
frstor
leave
jo
lods
pop
mov
pop
les
sbb
cmps
sub
lock
in
js
or
push
imul
jp
outs
ja
scas
ins
dec
xchg
and
xlat
in
push
int
retf
(bad)
rol
or
and
imul
xchg
fmulp
(bad)
fsubr
(bad)
iret
mov
sub
addr16
adc
cmp
mov
push
das
fbstp
loope
push
jg
out
arpl
sbb
inc
addr16
jge
scas
xchg
sbb
mov
mov
ins
or
xor
enter
dec
aaa
push
jp
inc
mov
fbstp
pop
sbb
int3
popf
fidivr
pop
fnsave
das
in
jmp
in
dec
in
push
test
call
jecxz
dec
bound
mov
inc
pop
fisttp
into
inc
xor
sbb
dec
and
shl
push
mov
xor
scas
les
ret
fild
mov
cmc
pop
stos
sbb
sbb
add
call
add
je
js
stos
sbb
cmp
sub
leave
stos
xor
mov
mov
fnstsw
(bad)
out
pop
xlat
nop
mov
push
shr
add
adc
mov
adc
out
jmp
push
lods
gs
mov
stos
and
std
(bad)
mov
popa
sbb
inc
es
sub
fidiv
jge
ficomp
dec
hlt
fucomip
add
addr16
sar
movs
movs
jge
or
(bad)
punpckhdq
mov
les
pusha
pushf
xchg
mov
pushf
xlat
dec
pop
xor
cmc
cli
cs
into
mov
mul
(bad)
fs
(bad)
cmp
xor
ins
out
cmp
movs
mov
ja
add
inc
es
push
or
mov
and
test
imul
xchg
(bad)
pop
sbb
push
mov
hlt
sub
pop
push
add
add
cmp
pushf
xchg
inc
cld
xchg
push
popf
adc
jbe
mov
and
xor
sub
ja
pushf
inc
and
mov
dec
(bad)
xchg
(bad)
retf
les
push
aaa
jp
es
mov
mov
hlt
inc
mov
ret
stos
jae
or
stos
pop
lds
lods
add
cmp
inc
push
pslld
pop
rcr
add
xchg
stos
and
nop
sub
mov
(bad)
sub
enter
xchg
mov
mov
in
retf
mov
and
lea
dec
ins
pop
adc
pop
shld
mov
push
fdivr
xor
js
int3
push
mov
jecxz
xor
sub
outs
and
es
in
lds
push
mov
stc
push
cmp
pop
iret
in
(bad)
mov
das
xchg
dec
jae
rcl
xchg
leave
jmp
lods
sbb
mov
es
add
pop
push
push
repnz
in
jg
jb
sbb
stc
ja
xor
stos
pop
add
(bad)
test
adc
jns
cmc
aaa
push
fld
call
pushf
xchg
lds
fs
ins
mov
sbb
js
inc
test
mov
mov
or
inc
cmps
or
sub
test
shr
mov
mov
data16
mov
xchg
dec
sub
dec
call
inc
mov
js
(bad)
out
cmps
xchg
popf
mov
jne
sbb
pop
sbb
and
inc
scas
jns
(bad)
cwde
push
fwait
dec
push
imul
ja
and
jb
test
sbb
sbb
or
ror
dec
outs
stos
nop
mov
or
sahf
movs
cs
push
pop
mov
arpl
fisubr
push
add
cmp
mov
or
or
shl
push
fstp
sub
inc
inc
inc
in
add
dec
add
and
mov
ss
nop
cwde
fcmovnb
pop
mov
ja
pushf
aaa
mov
inc
sub
inc
mov
cmp
xor
inc
(bad)
cmps
and
ja
icebp
inc
jo
(bad)
cmps
mov
push
dec
jp
jg
(bad)
sbb
js
xchg
cld
inc
rcl
lock
push
iret
inc
out
push
mov
xchg
pop
push
pop
loope
fnstsw
and
adc
ins
mov
lds
dec
cwde
push
test
fucomp
add
aaa
fsubp
inc
in
lds
movs
in
int
aas
jecxz
into
mov
cmp
xchg
test
retf
ins
xchg
xchg
jno
fidivr
push
cwde
adc
outs
mov
add
clc
int3
mov
loopne
lock
mov
mov
ret
sbb
mov
or
shl
push
inc
sar
ret
cmp
xor
add
lahf
clc
push
jae
(bad)
pop
cmc
adc
xchg
rcr
ficomp
int3
mov
dec
jo
or
mov
test
in
or
jno
mov
dec
loop
and
fdiv
adc
inc
aam
in
aad
std
dec
jne
mov
add
mul
call
lock
scas
ja
jo
fild
(bad)
sub
data16
(bad)
xor
fisubr
mov
movs
test
inc
leave
mov
cwde
stos
retf
iret
xchg
inc
cmps
(bad)
mov
xor
lea
movs
shr
mov
xor
ds
ins
scas
push
in
dec
mov
sbb
push
xchg
and
xor
mov
jge
fstp
lahf
sahf
(bad)
int
aas
shl
cwde
xor
loope
imul
cdq
pop
cmp
rol
pusha
adc
les
cmc
mov
dec
sbb
adc
lahf
nop
push
call
lock
icebp
jecxz
out
jge
cmps
add
or
sub
imul
xchg
emms
pop
aas
fs
fistp
xchg
data16
loop
aad
inc
and
sahf
pusha
and
pop
cmp
cdq
push
nop
es
jge
mov
xchg
push
stc
outs
sbb
ja
push
pop
and
jecxz
dec
loopne
out
or
ficom
sub
sbb
jmp
pusha
div
sbb
dec
test
mov
mov
nop
fidiv
adc
call
cmp
in
cwde
ss
mov
test
pop
sub
mov
jb
jecxz
mov
data16
in
cmp
xor
and
and
and
inc
daa
xchg
xor
inc
call
mov
lods
cmp
xor
sub
out
add
lds
dec
call
hlt
add
sbb
jl
ret
cmp
ins
je
inc
dec
iret
scas
mov
adc
and
ds
test
inc
sub
sbb
(bad)
push
cdq
out
aad
movs
mov
cmps
sub
gs
and
(bad)
and
sub
inc
lods
stos
mov
div
sbb
(bad)
xchg
daa
xor
cmp
(bad)
popa
adc
aam
pop
sub
pop
xchg
add
and
sub
or
push
inc
sbb
mov
leave
adc
mov
in
loop
into
repnz
out
sub
inc
mov
das
(bad)
inc
pushf
enter
ja
and
or
cld
popa
sbb
push
jg
cmp
inc
mov
shr
pop
retf
pop
mov
sti
test
pop
mov
test
loopne
(bad)
shr
rol
test
movs
std
ja
bound
ret
aas
pusha
fcmovnu
scas
mov
mov
div
(bad)
xor
pushf
xchg
je
fistp
ror
xchg
and
pop
or
and
aad
inc
jnp
sub
mov
test
jp
enter
shr
push
jmp
push
jb
sbb
nop
add
in
add
add
data16
in
lahf
jbe
int
call
scas
jmp
loope
dec
adc
mov
fisttp
or
scas
jl
cdq
das
push
sub
pop
jmp
fcom
jmp
add
outs
fcmovu
ret
add
pop
sbb
movs
push
int
xor
jge
les
dec
rcr
hlt
and
sub
loope
in
pop
dec
jns
repz
daa
pop
jmp
bound
pop
out
ror
add
cmp
popa
inc
daa
fidivr
out
push
hlt
push
pop
adc
pop
retf
call
or
push
scas
pop
dec
push
data16
inc
inc
stos
and
dec
pop
iret
call
jne
aas
mov
sahf
pop
add
jmp
into
dec
shl
pop
mov
mov
or
push
jns
pop
or
xor
push
adc
loop
test
shr
test
stc
btc
xor
hlt
(bad)
mov
jo
(bad)
xlat
shl
ss
enter
nop
repnz
xchg
inc
or
ds
pop
jno
les
(bad)
loope
mov
jae
imul
pop
out
jno
jmp
(bad)
push
cmp
xor
push
cmp
icebp
sub
dec
pop
mov
mov
or
nop
xchg
cmp
dec
arpl
jle
sbb
out
clc
scas
lds
cmps
fst
mov
cld
push
hlt
adc
cld
sbb
call
add
adc
jmp
cmp
jno
fldcw
outs
test
and
pop
in
dec
sub
pop
dec
sti
pop
jl
push
sub
inc
and
imul
test
adc
jl
xchg
push
mov
icebp
out
dec
jns
lods
adc
aad
cmp
rcl
fiadd
repnz
adc
sbb
cmps
mov
stos
xor
add
inc
sbb
clc
loope
jne
ror
js
xor
fs
cmp
outs
lods
in
inc
cmp
aad
mov
int
(bad)
mov
shr
adc
inc
and
push
push
fimul
stos
jmp
clc
nop
jno
dec
mov
scas
mov
add
(bad)
loop
test
pop
ror
fst
inc
fdivr
movs
pop
retf
adc
jmp
int
scas
add
sub
adc
movs
imul
adc
mov
or
in
cmp
out
mov
adc
into
fcmove
bound
inc
inc
ss
std
jae
ror
add
xchg
add
idiv
jp
pop
xor
push
aad
fsub
aaa
mov
stos
retf
pusha
xor
sahf
lea
dec
and
in
push
movs
arpl
mov
cmp
imul
mov
xor
test
pop
jo
xor
std
aad
cmp
xchg
pop
sub
sahf
and
jmp
and
(bad)
pop
stc
popf
pushf
icebp
clc
cmps
leave
lds
daa
dec
pop
fcom
xor
call
std
mov
scas
mov
call
scas
inc
inc
cmc
adc
jg
sub
push
into
pop
dec
out
mov
mov
inc
sub
xor
sbb
sbb
test
sub
data16
mov
imul
inc
adc
inc
adc
mov
dec
adc
mov
aaa
cmp
mov
popf
js
mov
sar
pop
outs
cmps
outs
fwait
cmp
out
pushf
cmp
lahf
xchg
arpl
fidiv
clc
sar
les
cmp
add
xlat
cli
inc
outs
jbe
mov
jae
cmp
mov
and
xchg
mov
dec
mov
aas
cmp
push
ret
and
sub
or
mov
push
xchg
iret
ret
cmp
call
dec
sub
jmp
outs
sub
loopne
es
xchg
xor
stos
std
pop
(bad)
mov
mov
enter
xchg
push
inc
push
add
dec
(bad)
fcmovu
imul
jg
push
mov
jp
xchg
jp
cmps
inc
retf
leave
into
push
rcl
pop
inc
and
(bad)
(bad)
sar
pushf
fsub
in
jo
sbb
mov
mov
jbe
rol
shr
mov
sbb
imul
scas
mov
jbe
fistp
sub
fwait
adc
pusha
int3
cmp
sbb
stos
rol
push
(bad)
lea
jne
mov
outs
hlt
retf
test
loope
inc
add
jno
dec
retf
imul
shl
cdq
lahf
repz
inc
sbb
sub
sbb
aas
mov
aad
adc
sbb
(bad)
and
xor
inc
lock
jb
in
push
ds
(bad)
test
imul
xchg
out
(bad)
mov
clc
(bad)
in
lock
repz
in
xlat
ret
mov
push
fs
cs
jnp
push
movs
enter
adc
(bad)
xchg
or
sbb
call
pushf
add
inc
jp
xchg
fisttp
lods
adc
fdiv
mov
rcr
leave
push
inc
xchg
lea
push
jle
aaa
inc
(bad)
loopne
movsx
cmc
stos
dec
xlat
lahf
pop
iret
or
mov
jbe
add
and
out
mov
sbb
inc
mov
pop
ror
mov
rcl
or
mov
mov
xchg
cdq
push
pop
cmp
loope
pop
mov
outs
popa
dec
adc
pop
jmp
(bad)
das
cmps
push
loope
push
(bad)
leave
ins
mul
xor
rol
das
or
xchg
cmp
mov
jmp
add
and
out
mov
cmp
adc
pop
out
cmp
inc
idiv
jnp
mov
mov
icebp
mov
jnp
and
scas
je
mov
cdq
mov
push
cwde
ss
xchg
dec
pop
arpl
mov
retf
mov
jp
daa
cmp
lock
mov
hlt
imul
popa
in
push
fs
(bad)
pop
cmp
repnz
lock
pop
xchg
(bad)
mov
mov
xor
out
dec
daa
dec
push
mov
int3
mov
(bad)
lods
adc
and
test
adc
paddusw
xchg
mov
jnp
aam
mov
aad
int
dec
sub
sub
push
jle
shl
pop
pop
inc
pop
mov
movs
mov
inc
dec
cwde
neg
not
cwde
and
sbb
mov
and
sti
addr16
xchg
shl
fdivr
clc
out
mov
jno
adc
dec
ds
inc
mov
out
ja
xor
mov
inc
mov
push
scas
mov
sbb
into
sar
in
jge
test
pusha
fst
(bad)
mov
cmp
call
test
(bad)
bound
mov
mov
sbb
push
in
jno
push
sub
push
ret
sbb
test
or
inc
sahf
test
daa
call
or
push
inc
sub
fwait
sbb
test
sub
in
jg
(bad)
cmp
cld
jmp
inc
(bad)
add
sti
test
imul
pop
pop
or
fstp
sbb
mov
inc
imul
scas
pop
mov
add
mov
mov
dec
sbb
push
ds
mov
inc
rol
retf
xchg
xchg
imul
jecxz
push
pop
push
cmp
jg
inc
lock
je
sbb
cmp
(bad)
and
ins
fwait
jle
shr
xor
lds
push
cwde
andps
xor
in
test
dec
inc
jmp
xor
in
mov
jo
mov
stos
arpl
shr
pop
shr
lods
daa
test
inc
sub
(bad)
push
iret
fldenv
jmp
inc
stc
mov
in
or
fcomp
and
cdq
and
fdivr
dec
add
pop
movs
push
fistp
rcl
(bad)
push
out
fwait
sub
stos
cmps
xor
pop
ss
stc
xchg
cmp
jmp
mov
push
adc
mov
in
loop
sbb
adc
cdq
jecxz
or
cwde
inc
enter
imul
mov
jmp
test
push
xchg
into
aam
inc
scas
in
or
push
mov
adc
lea
(bad)
add
xchg
jb
mov
add
stos
stos
inc
std
push
outs
pusha
nop
into
call
mov
dec
rcr
push
fild
xor
or
mov
mov
xor
cmps
jl
jmp
pop
pushf
and
cmps
rcr
xchg
sahf
nop
mov
lahf
mov
mov
or
fsubr
int3
sbb
call
dec
loop
mov
push
jnp
sti
(bad)
aas
repnz
iret
jecxz
sbb
(bad)
cdq
ret
popf
fcom
jmp
arpl
aam
mov
mov
div
jl
or
jmp
sub
inc
mov
movs
scas
mov
in
push
mov
stos
fst
or
sbb
out
lods
les
je
cdq
fs
mov
fadd
mov
enter
inc
addr16
inc
fwait
dec
jp
and
cmp
cmps
add
cmps
cld
int3
sbb
adc
(bad)
adc
daa
push
pop
(bad)
in
nop
inc
mov
imul
lea
out
(bad)
cmp
mov
(bad)
inc
pop
aad
dec
xor
popa
adc
aas
test
icebp
retf
mov
or
repnz
fld
adc
retf
mov
sub
(bad)
add
(bad)
std
or
arpl
mov
xchg
stos
pop
sub
xor
mul
jne
mov
or
xchg
enter
pop
mov
adc
ins
add
mov
and
ja
js
pop
pop
in
xchg
pop
dec
outs
pop
outs
je
shl
call
das
popf
jle
cwde
scas
scas
movs
mov
mov
(bad)
lock
(bad)
sub
xor
pop
push
pop
xor
repnz
pop
xchg
mov
out
in
adc
dec
sti
cli
mov
jl
jg
out
(bad)
shl
xchg
or
or
mov
(bad)
shl
dec
jbe
and
sahf
repz
enter
icebp
add
cwde
jge
push
mov
push
nop
cmps
adc
in
mov
fld
mov
sti
sbb
xor
add
adc
jo
ins
inc
cmps
xlat
jmp
push
sub
pop
xchg
add
sbb
jmp
popa
hlt
xor
sbb
mov
mov
cmp
dec
adc
inc
retf
cmp
lea
jg
dec
bound
shr
sti
push
or
cmp
repz
push
mov
push
mov
(bad)
cmp
mov
xor
jb
and
or
or
cwde
dec
ret
inc
test
or
ss
sub
jp
pop
loope
aam
fldcw
mov
out
jno
test
ror
cmp
cmp
test
jns
sub
jg
xor
or
inc
cmp
mov
dec
into
test
std
jge
out
and
loop
pop
cwde
xor
or
xchg
push
pop
xor
ins
(bad)
pop
dec
lea
jne
pop
(bad)
dec
mov
xlat
mov
repz
sub
jb
inc
fs
and
lahf
je
push
js
mov
loope
mov
aad
push
int3
jb
cld
mov
sub
clc
push
jmp
xor
pop
mov
push
xchg
push
sub
enter
mov
add
sub
int
test
or
push
out
popf
or
arpl
xlat
test
sar
test
out
xor
pop
ror
or
mov
stos
aas
inc
xor
cld
dec
cmp
imul
xor
mov
pop
mov
add
shr
pop
xchg
sub
push
mov
(bad)
push
mov
xchg
rol
cmp
fisttp
inc
mov
arpl
xchg
and
cmp
cld
in
add
jbe
addr16
pop
in
mov
push
pop
test
mov
dec
or
add
pop
fstp
sti
mov
jecxz
xchg
sbb
jne
mov
iret
sub
sbb
or
out
mov
call
retf
and
loop
or
arpl
xlat
adc
adc
adc
test
nop
int3
jnp
pop
cdq
movs
and
aas
pop
out
pop
ss
clc
in
pushf
push
jo
xor
stos
jg
adc
push
pop
scas
jae
call
aaa
fsub
and
mov
inc
mov
mov
adc
and
int
cmc
cmp
sbb
icebp
jb
pop
push
clc
bound
mov
ss
mov
or
je
pop
pop
add
dec
sahf
test
test
into
(bad)
mov
jmp
(bad)
aaa
shl
loopne
sbb
vrcpss
scas
adc
xchg
enter
xchg
dec
int
push
stos
imul
mov
nop
cmp
sub
ins
nop
sbb
mov
sbb
pop
mov
scas
mov
xchg
or
xlat
jb
test
test
rcl
mov
mov
aas
rcr
mov
ret
stc
inc
stc
fiadd
ins
xchg
pop
dec
enter
push
mov
(bad)
cmp
mov
stos
std
xchg
push
fistp
in
test
add
popa
xchg
aas
(bad)
cmc
test
inc
mov
pop
mov
mov
call
jl
es
mov
imul
xor
aad
push
cmc
sub
sbb
sbb
inc
xchg
push
xchg
xchg
pop
dec
gs
or
jg
rol
adc
loop
pop
mov
(bad)
hlt
shl
xor
xchg
movs
fwait
mov
int3
xor
(bad)
lock
nop
hlt
mov
sub
mov
adc
sar
sub
or
clc
in
fs
jb
xchg
inc
cmp
jle
dec
push
das
mov
xor
pop
int
popa
adc
ins
in
xchg
inc
mov
inc
je
scas
sub
inc
movs
stc
test
adc
dec
scas
add
mov
test
sub
adc
retf
dec
adc
dec
inc
mov
out
mov
loope
test
nop
test
data16
in
mov
scas
es
arpl
inc
scas
jne
pop
add
add
test
mov
push
bound
imul
xor
imul
lea
std
xor
sbb
lock
retf
(bad)
in
inc
sbb
retf
adc
sbb
mov
xchg
in
cs
xchg
and
loope
das
lods
fstp
fwait
xor
call
sub
leave
fwait
jge
shl
(bad)
daa
cmps
pushf
mov
shr
lahf
shr
dec
pop
adc
pushf
aaa
mov
cmc
xchg
add
adc
inc
iret
pop
dec
mov
lea
call
xor
mov
sub
xchg
les
push
enter
sahf
popf
sbb
add
mov
mov
es
imul
sub
jge
call
cmps
loop
push
clc
pop
add
sbb
cld
push
dec
cmps
std
xchg
xchg
fcmovbe
(bad)
sbb
xor
inc
sar
icebp
into
pop
je
cmc
add
pop
jno
daa
fsub
and
xchg
in
test
into
sbb
cmc
xor
add
lods
lods
mov
(bad)
in
pop
sub
(bad)
jl
shr
jae
imul
test
sbb
xchg
nop
cmps
push
mov
dec
jbe
ja
mov
inc
adc
add
mov
(bad)
shl
and
mov
stc
rol
add
jmp
jno
sub
ds
push
sbb
dec
inc
add
mov
mov
loope
mov
imul
test
out
imul
out
mov
jbe
push
mov
jge
pop
mov
sub
and
and
pop
inc
shr
popf
jno
test
jmp
arpl
lahf
pop
in
pop
imul
or
dec
icebp
in
or
mov
adc
mov
sub
enter
add
inc
cmc
(bad)
stc
cmps
rcr
and
xor
inc
mov
jmp
pop
ins
mov
xor
arpl
mov
and
std
sti
push
dec
push
mov
mov
add
mov
aad
(bad)
push
int3
imul
fwait
mov
mov
pusha
test
ror
sub
dec
test
ss
shl
inc
outs
push
out
cmp
sub
cmp
xlat
sub
dec
fstp
adc
lods
dec
fld
adc
xor
(bad)
jmp
mov
push
push
jge
loopne
fistp
xlat
and
es
call
bound
je
xor
ret
mov
arpl
inc
push
cmp
shl
in
dec
ds
pusha
cmp
das
cwde
shl
loopne
scas
daa
les
inc
pop
arpl
repnz
jbe
xchg
add
dec
push
jne
mov
inc
inc
stos
nop
es
in
mov
and
pop
mov
or
inc
adc
test
push
push
xchg
lea
das
pop
add
sub
or
(bad)
dec
adc
movs
pushf
addr16
mov
pop
mov
xchg
je
mov
call
ins
pop
and
jmp
fcomi
jbe
xor
test
add
mov
addr16
cmpps
mov
es
fcom
jb
outs
fld
daa
shl
popf
fcmovnb
call
int
xlat
pop
or
dec
retf
dec
aaa
int
in
addr16
sbb
mov
lea
bound
out
push
icebp
pop
mov
mov
sahf
repnz
fldenv
test
adc
sbb
mov
movs
jge
fwait
mov
mov
or
dec
test
fstp
push
mov
pop
xor
sub
repz
sar
jg
imul
nop
test
out
and
xchg
test
cmp
dec
jae
and
cmp
sbb
jge
xchg
adc
jb
sub
ret
pop
jae
push
mov
pop
jg
cdq
mov
lock
dec
or
push
arpl
popf
adc
mov
pop
and
jmp
shl
mov
and
cli
mov
cwde
scas
add
into
mov
sbb
bound
ds
das
stc
push
retf
sbb
fisubr
and
das
retf
inc
and
jg
clc
and
cmp
xchg
popf
jno
mov
lahf
dec
mov
xor
push
and
cld
fwait
cmp
call
and
mov
fisub
and
adc
mov
jae
mov
es
in
and
call
rol
cmp
inc
popf
imul
(bad)
fild
sbb
add
je
pushf
movs
or
or
sbb
fiadd
and
push
sub
xor
fstp
xchg
pop
aam
add
xor
xchg
sbb
(bad)
pop
out
mov
jmp
jl
call
jae
mov
mov
add
adc
aam
fcom
int3
cmp
mov
jp
pop
cmps
ret
stc
pop
jb
pop
add
(bad)
push
cmp
call
inc
xchg
test
dec
inc
lods
jae
push
pop
lock
jp
retf
mov
out
ficomp
dec
aas
out
or
dec
xor
add
bound
mov
sub
dec
push
xor
stc
jp
in
or
mov
xlat
pop
lock
lock
enter
mov
xchg
sub
pushf
mov
inc
stc
pop
shl
arpl
push
mov
es
fstp
movs
imul
sahf
cmp
cmc
scas
sar
jb
adc
arpl
ret
mov
xchg
out
imul
xor
scas
les
and
mov
lods
mov
mov
clc
jno
sbb
jns
shl
aad
add
xchg
push
xor
or
daa
outs
add
hlt
fsub
cmp
mov
lods
and
popf
call
mov
mov
(bad)
dec
cwde
fdivr
jge
mov
add
pop
push
xchg
inc
mov
xchg
in
addr16
or
mov
lods
sbb
retf
and
and
fdivp
outs
jmp
pop
shl
js
int
fiadd
push
jmp
ins
(bad)
push
push
inc
push
inc
dec
cs
mov
dec
sub
push
int3
cmp
pop
inc
cwde
pop
dec
mov
sbb
cmp
adc
mov
inc
popf
lea
mov
lds
pop
lds
inc
pop
jne
cdq
aas
inc
and
or
enter
mov
jmp
xor
lock
retf
(bad)
out
inc
xor
mov
and
dec
outs
mov
shl
daa
aam
movs
add
jmp
sbb
int3
xor
jns
or
pop
out
repz
dec
adc
xor
ror
push
in
mov
ror
xchg
pop
imul
shr
je
ror
inc
aaa
dec
xchg
push
sar
ja
cmp
sbb
int
sbb
pop
xchg
and
xchg
push
ja
push
pop
jmp
cmp
add
inc
rol
or
ins
push
ret
push
mov
jp
inc
ja
mov
push
mov
sbb
push
add
jb
mov
dec
or
sub
and
pop
sub
addr16
lods
jmp
lods
cwde
xor
xchg
xchg
xlat
repnz
enter
mov
mov
inc
and
mov
xor
in
sub
imul
sbb
mov
mov
xchg
and
cmp
std
xchg
cmp
and
sbb
jae
and
aam
aam
fdivr
addr16
sbb
jp
mov
sbb
je
mov
ss
add
cmps
ficomp
movs
mov
mov
scas
cli
adc
inc
xor
jbe
call
push
inc
add
test
lock
es
icebp
int3
aad
dec
push
pop
dec
sbb
xor
mov
std
sbb
out
and
addr16
stc
lods
sahf
pop
xor
jns
inc
and
jp
out
dec
pop
cmp
ret
ds
lods
mov
movs
jmp
fnstsw
and
test
inc
retf
lods
pop
and
push
adc
fdiv
or
hlt
sbb
jnp
adc
mov
enter
fnstsw
cli
mov
cmp
in
cld
fs
cmp
adc
push
repnz
ss
jae
jg
push
imul
adc
push
cmps
xchg
push
mov
int
or
sbb
(bad)
stos
sbb
fwait
xchg
sub
call
jmp
jbe
inc
movs
cs
jae
ins
mov
jnp
push
mov
xchg
in
mov
and
(bad)
(bad)
aam
shr
ins
int3
out
xchg
xchg
dec
ds
in
push
lds
adc
jb
cmps
mov
jne
push
dec
pop
pop
cmc
inc
pop
push
sbb
add
ret
into
push
sub
push
jmp
cdq
fdivr
xchg
arpl
mov
fdivr
xchg
imul
mov
ffreep
fnstsw
pop
adc
(bad)
cmp
xor
outs
clc
xor
or
jle
and
push
pop
push
add
dec
loope
pop
retf
fwait
(bad)
repnz
xchg
sahf
add
inc
cmc
or
adc
fdivr
pop
into
loope
cmp
push
sahf
lods
sbb
cmp
mov
jl
mov
std
xchg
hlt
sbb
dec
dec
adc
push
mov
mov
xor
mov
in
push
imul
pop
inc
ds
jb
jge
(bad)
jo
and
push
sub
cmps
pop
cmp
xchg
jg
rol
xchg
std
cdq
adc
retf
sub
in
mov
nop
fidivr
mov
lods
sbb
xor
adc
cmps
loopne
(bad)
fdivr
aas
jg
or
popf
jno
mov
sar
xchg
in
and
fimul
xchg
mul
mov
xchg
sbb
dec
push
mov
outs
rcr
xchg
pushf
xchg
cld
mov
(bad)
fdiv
push
add
pop
push
or
sbb
int3
xor
push
lea
sub
jne
push
add
pop
jg
jne
or
push
les
push
aam
fnstsw
xlat
xchg
mov
sub
fstp
mov
lea
inc
add
fdiv
cmp
mov
mov
jmp
jg
mov
ja
xor
mov
mov
ret
(bad)
popa
mov
xor
popa
xchg
mov
ret
rcl
mov
mov
inc
add
retf
pop
hlt
pop
lods
cwde
mov
or
add
sbb
(bad)
ins
ret
test
push
cld
adc
es
push
fcmovu
pop
jmp
mov
cmp
int
push
out
sub
movs
inc
movs
inc
scas
xchg
call
cld
movs
jbe
sub
repnz
adc
sub
out
push
ss
push
add
in
test
pop
shr
cmp
push
scas
xlat
dec
loopne
push
mov
fs
cmp
sub
call
pop
inc
pop
or
lahf
pop
jae
jge
mov
mov
pop
enter
cli
sub
je
mov
xor
inc
rcr
push
add
ss
and
data16
pop
adc
cs
jbe
xlat
inc
cld
sub
fstp
cwde
or
fwait
sub
mov
mov
xor
pushf
push
add
test
jle
cs
xor
and
sbb
sub
je
pop
retf
sub
mov
cmps
ret
aaa
in
jbe
cld
unpckhps
and
inc
out
scas
mov
dec
aaa
jns
hlt
aam
mov
clc
cmp
fistp
mov
ret
inc
cmc
test
nop
pop
push
xor
shr
cmc
ins
xor
dec
dec
ins
clc
jge
or
xchg
(bad)
pop
stos
pop
pusha
mov
outs
call
push
add
and
arpl
call
cwde
xor
sub
sub
mov
ret
daa
mov
pusha
aaa
enter
and
(bad)
sub
dec
pusha
iret
in
enter
push
push
inc
or
mov
out
jne
push
push
and
movs
out
jmp
lods
outs
push
fimul
push
add
les
or
sbb
jmp
mov
cmps
stc
cmps
std
ins
add
xchg
or
aad
push
scas
and
mov
mov
mov
rol
fisttp
xchg
pop
mov
pop
xor
mov
adc
cmp
addr16
adc
xor
add
fs
lea
sbb
in
(bad)
mov
cmp
mov
mov
in
in
pusha
shl
or
jnp
push
pop
dec
mov
int3
je
mov
inc
mov
jmp
pop
xchg
jg
sbb
add
pop
pop
sbb
ret
rcr
(bad)
inc
mov
retf
out
cmps
jmp
stos
mov
out
mov
jbe
(bad)
out
add
pop
retf
out
js
test
pop
imul
mov
push
(bad)
(bad)
hlt
in
cmp
mov
out
outs
pop
mov
sbb
xchg
add
pop
(bad)
push
ds
or
dec
dec
mov
adc
dec
pop
add
push
ins
dec
pop
outs
jmp
xchg
fstp
pop
mov
sub
add
(bad)
or
push
adc
cmps
clc
sub
push
repz
pusha
sbb
cmp
adc
wbinvd
inc
jae
xlat
out
or
scas
les
xchg
cmp
ror
(bad)
or
pop
xchg
dec
fstp
inc
add
jo
(bad)
aam
jns
(bad)
inc
xor
(bad)
loop
pushf
or
aaa
psrld
dec
inc
jbe
inc
shr
pusha
mov
lock
ja
loope
jae
or
mov
xchg
and
mov
mov
out
sub
call
mov
dec
mov
mul
fld
lods
xchg
ins
mov
sti
jmp
pop
adc
push
js
jecxz
add
push
xor
scas
xchg
mov
jnp
stos
out
pop
mov
hlt
lahf
jmp
mov
imul
fcom
sub
gs
dec
call
(bad)
mov
fistp
test
scas
adc
pop
test
xchg
clc
aas
cwde
das
retf
dec
rol
call
pop
inc
popa
frstor
dec
adc
mov
clc
xor
ins
add
push
xchg
inc
inc
pop
repz
jmp
xor
sar
imul
scas
jg
nop
int3
clc
arpl
mov
popf
ds
gs
push
sbb
jbe
adc
xchg
dec
leave
in
push
ja
xor
dec
xor
jne
fisttp
rcl
stc
mov
adc
mov
les
jmp
movs
pop
mov
cs
nop
add
pusha
mov
les
cmp
cmps
xchg
sub
mov
loopne
(bad)
cdq
int
or
jl
stc
fcomi
call
cdq
cmp
ret
xor
sub
hlt
cmp
mov
in
xchg
neg
xlat
test
xchg
or
(bad)
lock
dec
add
popa
jae
jbe
movs
mov
sbb
cmp
adc
xchg
push
mov
in
aad
xchg
and
ret
gs
xchg
jnp
push
mov
jmp
adc
jecxz
adc
repz
xchg
or
loope
aas
inc
xchg
test
scas
push
cmp
or
mov
in
pop
test
fs
jmp
mov
xchg
add
cdq
sbb
pop
jae
cmps
test
inc
sbb
inc
and
(bad)
inc
cmp
and
dec
lahf
jl
jle
cld
outs
jno
and
gs
mov
xor
into
mov
inc
jb
std
inc
mov
dec
mov
ret
push
into
push
retf
pop
push
loop
jne
jge
femms
mov
cmp
xor
jmp
mov
adc
mov
add
push
xor
sbb
xlat
out
pop
xchg
std
mov
cmps
jmp
cmp
sub
(bad)
sub
xchg
js
adc
mov
sub
ss
sbb
and
xor
in
sub
pop
pop
add
push
aam
dec
(bad)
retf
mov
hlt
pop
jae
in
and
arpl
xchg
add
inc
inc
stos
add
sahf
cmp
dec
mov
mov
pop
loop
in
scas
mov
(bad)
mov
in
inc
in
ss
xchg
cmps
shl
adc
push
mov
test
jmp
sar
sar
ret
(bad)
hlt
retf
adc
arpl
aas
jg
sub
(bad)
ds
sbb
(bad)
int
data16
add
or
mov
es
fld
cmp
xchg
mov
cdq
jmp
dec
inc
and
add
sbb
lods
sbb
jmp
mov
mov
sbb
dec
ficom
inc
mov
(bad)
push
adc
ja
in
dec
dec
fisttp
and
jbe
xchg
dec
(bad)
pusha
xor
mov
mov
dec
inc
mov
add
adc
pushf
sbb
ins
jle
push
jg
push
pop
in
push
aad
fiadd
imul
mov
test
push
repnz
ret
mov
sub
jbe
test
js
jmp
adc
adc
adc
push
mov
and
cmps
jae
jo
mov
jmp
jns
lahf
shr
out
mov
fidivr
sbb
and
mov
mov
push
inc
cld
or
inc
shl
jmp
fcom
jle
int
xor
jmp
in
jl
adc
or
call
out
pop
jecxz
cmp
add
mov
xchg
in
push
jo
inc
lds
scas
mov
call
push
inc
shl
cmp
pop
jmp
in
push
ins
aas
ja
cmp
add
mov
shr
int3
mov
adc
out
dec
test
aaa
push
es
je
jbe
push
jne
pop
jns
add
cmp
sar
(bad)
inc
xchg
fild
push
cmps
stos
icebp
stos
loope
jp
xor
add
fst
xchg
outs
(bad)
aam
sar
cmp
dec
rol
test
lahf
cmps
jg
xchg
adc
nop
sub
(bad)
call
mov
arpl
pop
nop
mov
jae
out
hlt
pop
into
ins
jae
sbb
push
cmps
sub
mov
and
js
cwde
adc
push
and
in
outs
jno
nop
push
xchg
inc
xor
fcom
xchg
(bad)
mov
bnd
inc
call
(bad)
js
leave
ins
push
jbe
ja
movs
xchg
and
call
mov
dec
and
adc
sbb
sbb
mov
ret
or
inc
cli
psraw
inc
ror
or
push
mov
mov
das
xchg
mov
jmp
gs
inc
ss
test
cmp
add
or
(bad)
jbe
dec
mov
std
push
adc
dec
sar
nop
or
mov
cld
cmp
sub
push
sub
out
pop
in
add
gs
lds
inc
stos
test
into
push
in
push
aas
mov
(bad)
sub
adc
cmp
fisttp
dec
push
into
imul
jge
cwde
dec
mov
test
mov
lock
lahf
xor
mov
mov
mov
mov
or
fcmovbe
cmc
jnp
into
out
sbb
push
push
inc
das
cmps
xor
dec
and
dec
(bad)
iret
arpl
popf
icebp
aas
or
ins
pop
jmp
inc
das
ror
sahf
mov
sbb
imul
adc
sub
dec
sbb
leave
das
call
out
out
sub
enter
call
mov
add
ins
adc
ins
je
stc
aad
div
(bad)
out
jnp
out
adc
mov
out
jbe
xlat
push
and
dec
sub
addr16
inc
mov
das
push
xchg
xor
mov
xadd
ror
pop
pop
sub
add
or
in
rol
repnz
int3
push
mov
fs
data16
add
scas
or
cmp
call
rol
fwait
stos
movs
xor
and
push
pop
adc
jae
gs
call
mov
xor
ins
mov
cli
sub
test
idiv
jge
sbb
adc
or
adc
mov
xor
jne
fwait
xchg
xor
rol
or
push
add
lea
clc
imul
mov
xchg
fcomp
cmp
mov
pop
test
leave
into
repz
push
add
xor
sub
aam
jo
cld
ret
hlt
pop
cs
cmp
enter
xchg
xchg
push
fst
pop
(bad)
adc
and
rcr
neg
sub
dec
pusha
fdivr
xchg
xchg
pop
enter
adc
mov
fimul
mov
xchg
cdq
jg
dec
sub
sub
jae
das
mov
out
call
leave
imul
(bad)
sti
daa
sub
pop
mov
jmp
xchg
mov
add
push
lds
inc
mov
(bad)
imul
xor
cmp
cmps
int
xchg
xchg
dec
cmp
adc
ja
jno
aad
sbb
sub
adc
mov
mov
push
sbb
stc
sbb
mov
xchg
push
push
fistp
(bad)
sbb
cmc
sar
inc
test
and
jl
ss
and
addr16
cmp
adc
mov
stos
outs
les
cmp
inc
adc
aam
sbb
outs
test
cs
aam
in
jmp
and
push
popf
push
jle
or
not
repnz
dec
mov
and
pop
icebp
sub
adc
mov
add
mov
cmps
hlt
sbb
mov
cs
inc
and
scas
inc
in
imul
enter
cmps
fsub
and
imul
int3
loop
loopne
mov
mov
cmps
aam
push
in
and
movs
in
not
pop
xor
lock
push
sub
sbb
inc
retf
adc
cmps
aam
jmp
jbe
loopne
aam
adc
pop
and
out
jecxz
push
out
xchg
cmp
in
loop
push
repz
mov
out
stos
loope
jecxz
xchg
scas
jae
adc
imul
push
(bad)
pop
loopne
push
and
in
dec
loopne
inc
push
push
add
dec
inc
ficom
in
add
mov
ds
xor
adc
les
and
mov
ret
out
pop
xor
xor
idiv
dec
xor
adc
jle
mov
mov
pop
cs
push
ret
lea
and
ja
pop
mov
test
xlat
fbstp
fs
mov
pop
pop
sar
mov
inc
(bad)
js
imul
sub
jp
mov
jl
dec
int
fs
fisttp
mov
mov
cmps
scas
mov
fcom
loope
repnz
or
rol
push
xchg
ret
setae
(bad)
push
pop
mov
mov
shr
sbb
xchg
arpl
jbe
outs
jp
les
test
fcmovbe
sbb
push
outs
mov
rep
retf
fnstcw
mov
dec
jnp
sub
call
call
sub
outs
outs
std
xchg
add
lds
xor
pop
in
and
inc
sub
mov
call
lds
js
mov
lea
lock
hlt
neg
xor
cmp
(bad)
ss
and
(bad)
lods
mov
shl
dec
(bad)
or
pop
mov
cmp
les
js
mov
push
or
pop
and
leave
lods
cdq
test
inc
jno
jg
in
sbb
retf
in
and
add
inc
adc
push
xchg
data16
and
jae
test
mov
pop
call
(bad)
ins
dec
push
pop
push
jb
pop
and
dec
adc
cdq
xor
ss
fs
push
fs
dec
dec
xor
jb
and
add
dec
lods
or
test
mov
mov
inc
xchg
out
push
pop
fcmovnu
int3
sti
cdq
push
push
aas
mov
lahf
dec
dec
jp
or
cmp
out
dec
cmps
das
pop
pop
cs
and
sbb
dec
int3
push
pop
mov
xor
xlat
adc
and
add
inc
aas
(bad)
out
push
jno
jecxz
ds
out
dec
imul
xor
sub
ret
push
daa
lods
jbe
stc
std
test
pop
in
inc
jnp
add
xchg
xchg
stc
xchg
scas
or
outs
dec
or
add
xchg
popa
push
mov
mov
sub
fistp
or
mov
and
jp
lea
adc
outs
dec
xchg
movs
or
mov
push
sti
scas
call
xchg
inc
xor
je
push
daa
xor
shr
adc
ret
icebp
mov
call
jle
bndldx
imul
jb
adc
adc
inc
cmp
pop
jecxz
and
mov
or
push
mov
add
xchg
mov
xor
and
mov
out
mov
clc
mov
(bad)
rcl
push
push
jecxz
test
(bad)
int
adc
sbb
push
movs
mov
or
xchg
adc
loopne
xchg
mov
and
push
je
xchg
int
int
mov
sub
(bad)
mov
push
jle
scas
mov
lods
cmp
into
aad
hlt
cld
jge
ss
push
mov
stos
cmps
mov
push
push
adc
or
jbe
xor
push
or
xor
ins
jne
and
and
shr
jnp
test
inc
add
fadd
inc
das
out
not
movs
in
test
mov
inc
lock
and
cli
jge
jnp
retf
cmp
sar
xchg
cli
ins
clc
xchg
push
cmp
push
lds
and
stos
dec
xchg
fs
pop
dec
pop
icebp
test
mov
dec
xlat
jb
pop
inc
iret
or
aas
xor
in
pop
cmps
stc
push
xchg
ror
jmp
push
rep
dec
nop
es
jmp
jo
fisttp
push
rcl
dec
lea
clc
push
mov
add
xchg
cld
sbb
or
dec
xchg
imul
xlat
into
addr16
xchg
sbb
rcl
or
aam
mov
sub
sub
(bad)
call
inc
xchg
mov
sub
pop
jo
inc
mov
lahf
imul
mov
mov
sar
or
push
jb
cmps
or
rcl
mov
mov
shr
jns
jbe
and
sahf
cmc
xor
out
fild
mov
repz
loope
inc
stos
jbe
stos
loope
(bad)
stc
sahf
into
xchg
mov
call
or
jmp
xchg
(bad)
xor
mov
ins
aas
jmp
sbb
ja
dec
adc
pop
fidiv
xchg
aas
aas
cmp
cmp
push
lods
enter
push
and
sti
push
ins
fnstcw
push
xor
push
jnp
nop
sub
jl
push
sbb
mov
mov
dec
xchg
jns
sar
jno
and
jg
pop
mov
mov
outs
shl
xor
fs
int3
imul
test
into
sub
call
imul
and
and
jl
xchg
cmp
and
add
dec
push
cmp
push
mov
sub
add
or
sub
rcr
lahf
mov
mov
daa
and
ret
arpl
iret
jne
nop
es
dec
aas
rol
bound
mov
xor
cld
movs
adc
sbb
jne
jns
loopne
xchg
or
and
movs
jecxz
movs
sub
gs
scas
jg
aas
xchg
mov
call
sbb
imul
ret
outs
ins
std
or
mov
mov
ja
test
repnz
leave
push
and
sti
mov
push
push
das
mov
dec
sbb
in
(bad)
dec
das
or
xor
sub
fcmovu
stos
push
test
in
push
inc
rol
in
scas
push
daa
bound
cdq
rcr
pop
dec
retf
push
movs
push
retf
mov
xchg
cmp
stos
mov
mov
add
enter
xor
lods
pcmpeqw
loop
and
cdq
gs
cdq
les
inc
sbb
in
and
mov
arpl
jae
repnz
inc
sub
xor
sbb
xchg
loop
call
mov
int3
sub
(bad)
adc
std
pop
cld
mov
fist
not
and
xor
dec
xchg
xor
sub
push
jl
test
int3
(bad)
cli
les
ror
xchg
aaa
js
push
jne
xchg
pop
fidiv
add
mov
jnp
idiv
push
(bad)
pop
push
push
les
fnstsw
mov
cmp
clc
mov
out
cmc
iret
lock
jno
cwde
push
(bad)
pop
ins
sar
jns
add
out
cdq
cmp
push
adc
icebp
ja
cmp
shr
fsubr
mov
std
cmps
lahf
ja
pop
sti
mov
in
popa
loop
fisubr
mov
lods
mov
leave
xor
cli
inc
(bad)
xor
jecxz
adc
pop
inc
push
and
xchg
lea
mov
mov
jge
aas
add
ret
cmp
cwde
outs
ins
fucomi
ins
dec
leave
xchg
and
dec
xchg
out
jg
inc
jmp
dec
shl
aam
in
(bad)
adc
std
mov
js
dec
out
jmp
cmp
pop
sbb
sub
adc
pop
sbb
inc
(bad)
sbb
cmc
jbe
sbb
pop
sub
add
stos
dec
pop
mov
lea
repz
xor
stos
out
test
loop
push
inc
ja
ret
xor
lahf
call
retf
scas
sub
imul
in
shl
retf
mov
ror
sub
das
adc
clc
inc
jno
mov
data16
ficomp
mov
push
push
(bad)
scas
dec
sbb
ins
retf
jmp
mov
lods
mov
xchg
xchg
xchg
icebp
xor
ror
bound
dec
out
push
jnp
outs
pop
std
shr
sar
jmp
sti
cmp
push
rcl
fcmovnu
dec
inc
fsub
inc
dec
es
add
outs
mov
mov
add
aad
lahf
int
out
push
dec
cmp
mov
lds
or
pop
hlt
scas
add
loopne
pop
push
dec
out
sbb
imul
popa
mov
and
fld
jb
sub
lahf
xchg
movs
fild
jecxz
mov
sti
je
ds
sub
push
pop
sbb
inc
fiadd
outs
imul
dec
xchg
adc
gs
push
aaa
inc
cmp
ins
outs
pop
aam
adc
jecxz
jae
inc
cmp
or
out
xor
adc
cwde
out
clc
xlat
fwait
rcr
push
sub
leave
mov
xor
cs
repnz
adc
aam
clc
cmp
xchg
cdq
cmp
mov
add
adc
add
pushf
loope
mov
cmps
outs
sub
jne
cmp
repz
in
cmp
ficom
pop
mov
add
bnd
cmc
dec
jmp
inc
(bad)
mov
daa
cmp
pop
inc
dec
hlt
inc
mov
or
mov
jmp
lock
cmp
or
push
and
sahf
addr16
test
pop
pusha
mov
int
scas
pusha
pcmpgtb
xchg
mov
cld
aam
je
fcmovne
mov
sub
pop
mov
data16
imul
pop
mul
add
int
iret
add
mov
repz
add
sub
sub
pcmpeqw
dec
mov
idiv
lods
mov
leave
mov
mov
and
mov
iret
inc
add
or
test
sbb
xchg
bound
dec
fistp
sub
(bad)
mov
cmp
scas
imul
mov
imul
mov
icebp
mov
arpl
fdivr
cmp
movs
aaa
test
or
(bad)
mov
sub
xchg
or
xor
test
ss
jbe
inc
sub
and
dec
add
mov
jnp
mov
cld
int
xchg
lds
icebp
adc
mov
push
jle
movs
dec
xchg
sub
ds
arpl
xor
jns
and
xor
sub
cmps
stc
stos
dec
or
sub
push
pop
pop
aaa
jb
sbb
xor
rcl
aam
mov
dec
stc
add
fistp
add
pop
shl
std
or
test
dec
add
(bad)
and
sahf
into
and
inc
jne
icebp
and
mov
cdq
jmp
add
lahf
inc
lock
mov
dec
sub
iret
shr
and
sahf
xchg
and
shl
(bad)
and
fsub
lds
push
aam
jge
sub
pushf
sahf
xchg
shr
call
mov
out
xchg
rcl
mov
pop
mov
push
mov
dec
sahf
cmps
aaa
addr16
test
mov
popf
or
(bad)
int3
jmp
mov
or
das
mov
arpl
mov
imul
popf
pop
cmp
jle
mov
xor
out
in
daa
inc
mov
(bad)
push
jb
fimul
rcl
inc
push
pop
or
dec
jp
loopne
adc
lock
mov
jge
(bad)
fnstsw
or
imul
(bad)
loopne
neg
add
xchg
popf
shl
pop
retf
and
cmova
(bad)
and
out
xchg
push
in
sub
sbb
retf
sbb
ret
ins
push
icebp
in
xchg
add
xor
lahf
call
push
(bad)
(bad)
scas
ins
pop
ror
inc
test
sub
out
(bad)
test
repz
popf
adc
jg
xchg
sbb
imul
and
sbb
out
movs
stc
iret
scas
xchg
imul
test
int3
repnz
fist
pop
pop
pop
jmp
jl
ss
mov
adc
pop
push
xor
mov
dec
das
scas
sti
clc
fs
cld
imul
sti
dec
rcr
icebp
lea
shl
lds
cmp
test
cmp
imul
or
dec
or
sbb
xor
pop
jmp
int3
(bad)
ror
iret
popf
jecxz
push
xor
pop
sub
outs
jne
mov
call
pusha
or
mov
ret
imul
sbb
fs
push
mov
test
repnz
cmp
and
xor
cld
mov
imul
or
add
inc
rcr
int
shl
sbb
xlat
cvtps2pi
mov
adc
mov
sahf
mov
(bad)
arpl
mov
data16
mov
icebp
scas
scas
dec
js
(bad)
(bad)
std
mov
jo
xlat
jo
call
out
out
icebp
xchg
push
scas
dec
in
and
int3
test
test
repz
inc
push
sub
jmp
xor
aad
jo
out
test
sar
aam
out
(bad)
(bad)
xchg
ret
jb
mov
out
jnp
out
lea
adc
icebp
adc
sub
pop
outs
lock
(bad)
jmp
aas
in
jns
dec
sbb
add
sti
stos
or
cmp
and
test
sbb
dec
push
dec
push
out
fwait
dec
sti
(bad)
das
arpl
in
fdiv
out
sub
lods
js
jmp
cmps
push
adc
int
(bad)
jno
push
pop
scas
outs
pushf
xor
pop
js
stos
aam
(bad)
ins
adc
pushf
(bad)
ins
push
jge
ins
mov
and
pop
cmp
aad
cdq
mov
jns
jg
adc
sbb
mov
sub
imul
mov
inc
ins
nop
cwde
push
jo
es
mov
dec
or
jne
pop
push
rcl
sbb
aam
retf
popf
loope
fistp
mov
or
dec
(bad)
and
pusha
fpatan
xor
cmp
ret
call
sub
arpl
imul
cmp
dec
(bad)
mov
inc
lods
es
jb
shl
xor
sbb
repz
(bad)
mov
xor
add
dec
out
out
das
mov
pop
sub
imul
jno
repnz
iret
in
push
mov
add
addr16
(bad)
icebp
(bad)
jnp
lods
outs
cmp
(bad)
lahf
lods
daa
je
jmp
(bad)
or
xchg
test
push
xor
movs
es
push
push
imul
cmc
add
mov
adc
in
(bad)
dec
add
xchg
cdq
xchg
dec
cmp
lea
inc
mov
or
push
and
adc
sbb
es
call
retf
xchg
test
mov
push
xor
sub
pop
mov
popa
ja
cmp
sar
out
(bad)
daa
mov
in
test
sub
push
fiadd
test
aam
or
xchg
imul
xchg
mov
hlt
mov
dec
aas
mov
aaa
std
out
je
outs
push
xchg
pop
out
dec
xchg
sub
mov
rsm
cli
stos
and
cwde
push
cmp
popf
ret
call
int
mov
push
movs
and
test
adc
mov
sti
cmp
cmps
push
jle
icebp
ret
rcl
and
scas
pop
(bad)
fimul
dec
and
pop
cmp
iret
xlat
punpckhbw
inc
xchg
retf
nop
pop
mov
pop
ret
clc
dec
push
jp
fbld
ss
inc
sub
scas
or
outs
xor
fadd
addr16
call
ret
push
sub
loope
and
cmps
xlat
test
fcmovb
xor
sub
jb
mov
jg
xchg
fisub
mov
sbb
cmps
pop
loopne
(bad)
aam
inc
mov
leave
xor
outs
aam
mov
sahf
xor
inc
and
ret
nop
leave
ds
popf
cmp
xchg
mov
stos
lea
jne
mov
ds
out
mov
and
sahf
pop
mov
mov
inc
adc
sbb
call
push
and
aam
push
call
in
jne
sbb
jnp
aas
mov
xor
inc
mov
ja
jne
test
data16
push
adc
test
adc
push
lea
sub
jge
enter
or
and
test
movs
cs
div
push
jmp
mov
and
mul
adc
push
out
mov
pop
jecxz
sahf
cwde
repz
fst
inc
clc
sub
mov
pop
push
rep
dec
mov
stos
add
or
dec
or
jle
push
pop
mov
ins
and
sahf
arpl
test
rol
cs
push
xor
sub
stos
adc
and
and
mov
add
nop
stos
test
aam
ja
icebp
popf
mov
pop
xor
jg
dec
mov
pushf
rcl
lods
mov
nop
ja
rcr
mov
dec
jo
sbb
sbb
xor
add
dec
cmp
out
add
dec
xrstor
movs
mov
adc
mov
(bad)
push
pop
addr16
test
stos
push
add
mov
jle
scas
jne
mov
mov
fisttp
lock
sbb
call
dec
adc
jnp
lods
xchg
mov
cs
mov
jno
mov
mov
mov
or
mov
retf
mov
lahf
loopne
mov
cdq
jg
add
repz
rcr
ss
dec
shl
xchg
leave
sbb
in
jecxz
jbe
or
sti
pop
pop
test
mov
sbb
fcom
adc
clc
mov
jg
cmp
sbb
mov
popf
mov
pop
inc
(bad)
fstp
and
leave
rcr
add
push
and
movs
xchg
lods
jge
mov
sub
sbb
xlat
daa
and
(bad)
(bad)
in
jecxz
out
lods
fidiv
gs
add
xchg
enter
nop
int
jne
adc
in
xchg
push
out
out
out
jl
mov
repz
sbb
inc
jns
das
jl
cs
clc
dec
jnp
mov
in
cmps
int3
in
fdivr
das
ds
scas
mov
inc
aaa
lea
shl
mov
and
fs
cmp
mov
and
add
cmc
std
mov
adc
repnz
mov
xchg
in
sub
lds
sahf
add
mov
scas
xchg
jmp
sub
xchg
add
jnp
xor
dec
push
aas
add
push
cld
dec
call
(bad)
scas
dec
mov
shl
mov
cs
ret
shl
push
sbb
(bad)
cmp
lds
sub
xchg
mov
popa
popa
in
movs
xchg
add
sbb
mov
rcr
imul
xor
scas
jno
retf
push
push
(bad)
jns
sbb
dec
cmp
push
sbb
sub
(bad)
std
jle
dec
std
faddp
fadd
rol
out
(bad)
int3
int
jecxz
shl
sbb
push
in
int3
js
ds
les
mov
xor
mov
mov
ins
push
xchg
lods
sbb
jo
xor
neg
inc
(bad)
(bad)
rcr
xor
mov
push
inc
sbb
push
je
jmp
jb
mov
dec
scas
loop
shl
icebp
lahf
add
push
dec
into
dec
iret
inc
cmovle
shl
add
or
sbb
movs
mov
call
or
inc
pop
dec
jg
outs
stc
ss
in
dec
mov
inc
ja
sub
pop
jns
push
repz
rcl
std
cmps
mov
iret
test
pop
jo
fcmovnu
imul
mov
mov
fadd
and
and
aas
ss
arpl
ins
inc
test
or
cs
jp
mov
pop
jo
push
pop
cmps
xchg
pop
jmp
loop
cdq
lock
in
outs
ss
sti
fadd
cwde
mov
mov
push
(bad)
xchg
jne
or
add
mov
nop
jb
loopne
cmp
mov
pop
add
dec
popa
adc
ds
inc
cwde
out
mov
sbb
xchg
repnz
fdivr
inc
push
leave
mov
xchg
xor
or
xchg
retf
xor
jno
jmp
cmps
mov
call
pop
push
push
adc
mov
xor
xchg
jmp
jb
adc
dec
rcr
or
fwait
cli
repnz
ret
pop
(bad)
js
cmp
arpl
data16
add
into
retf
push
inc
or
ins
cmp
cmp
and
xor
pop
push
jae
sub
mov
bound
xchg
and
jb
je
xlat
stos
fcom
arpl
ins
fisubr
out
mov
or
mov
repnz
loope
mov
xor
inc
movs
or
call
add
xchg
cs
(bad)
(bad)
and
in
or
adc
adc
sbb
mov
inc
hlt
cli
movs
cmp
retf
jne
dec
jae
test
in
mov
pop
jg
cli
enter
cwde
cmps
ficomp
out
sbb
jp
test
pop
movs
pushf
dec
out
pop
dec
cmp
cmps
and
test
ds
mov
aad
(bad)
fsubr
mov
icebp
mov
push
xchg
cld
out
mov
fbstp
(bad)
xchg
sub
lahf
mov
leave
and
loopne
cmp
jmp
push
mov
inc
jbe
sub
sbb
inc
aad
xchg
jmp
xlat
arpl
aam
in
mov
lds
fadd
je
dec
mov
ins
in
lahf
mov
adc
mov
jne
xor
adc
jl
xlat
push
ja
int
jo
push
jae
or
test
or
push
or
or
push
jnp
mov
cmp
scas
add
sbb
xchg
lock
pusha
xor
(bad)
sahf
ja
js
cmp
in
jne
adc
pop
mov
sub
leave
dec
mov
mov
and
add
mov
inc
inc
add
push
sbb
xchg
aaa
in
mov
cmp
das
aaa
pop
mov
pop
jae
mov
in
xchg
mov
lods
repnz
out
cmp
div
xchg
mov
lods
inc
xor
xor
add
adc
test
xchg
xchg
jns
jl
xor
hlt
push
jp
outs
mov
cwde
xor
pop
or
add
(bad)
or
mov
call
jmp
inc
or
(bad)
jp
push
lods
mov
sbb
adc
cwde
fdivr
jle
pop
cmc
push
popf
(bad)
dec
pop
stos
sbb
mov
push
push
jae
inc
pop
mov
dec
and
jns
ins
and
fucomip
fwait
and
add
pop
mov
lods
scas
mov
scas
aaa
add
pop
pop
adc
xor
fcomp
mov
jg
pusha
cmp
sbb
fdiv
sbb
sahf
cwde
xor
pop
jle
pop
and
pop
jp
imul
aas
in
sbb
and
dec
int
push
sar
and
cli
sub
bound
mov
sub
mov
sub
push
(bad)
push
call
or
mov
sub
adc
xor
jmp
pop
dec
outs
adc
mov
xlat
shl
aas
dec
aaa
sar
xchg
fnstsw
addr16
clc
push
out
test
sub
rcl
jns
dec
push
pop
inc
mov
call
sub
mov
daa
xchg
out
cmps
cmp
cwde
stos
(bad)
or
jg
bnd
pop
fs
xor
ja
and
inc
pop
pushf
cwde
xchg
sar
jmp
dec
bound
or
xchg
inc
cmp
call
pop
dec
mov
stos
retf
mov
stos
add
pop
add
fidiv
cmp
mov
jns
inc
fwait
xor
pop
lahf
xor
out
jbe
outs
int3
leave
loop
sbb
(bad)
xor
lods
mov
xchg
stos
sub
arpl
jecxz
sbb
push
xchg
fcomp
inc
add
sub
cli
push
add
or
test
or
fnstcw
pcmpgtw
ror
nop
mov
shl
in
call
imul
call
xchg
arpl
mov
jl
imul
sub
inc
xlat
cmp
xacquire
push
cs
push
shl
dec
push
cmp
jmp
adc
adc
cmp
or
call
mov
dec
add
sub
dec
fild
pushf
cmc
add
daa
(bad)
lods
mov
idiv
adc
addr16
mov
sti
jne
jbe
push
stos
jnp
hlt
test
test
inc
std
xor
les
fsubr
ficom
dec
jb
jle
push
lock
fisubr
aas
xor
and
in
push
popa
inc
aas
jb
std
adc
scas
lea
push
sbb
outs
or
fisub
daa
push
ja
shr
ins
or
js
cmp
or
push
test
icebp
popa
cmc
jl
lods
repnz
stos
cmp
xchg
addr16
pop
sbb
mov
push
adc
xchg
jne
mov
sar
fmul
(bad)
or
arpl
nop
dec
mov
test
adc
rcl
or
add
add
mov
out
std
in
add
inc
mov
into
mov
call
jle
addr16
js
pop
xchg
(bad)
imul
test
pushf
sar
push
ret
cmc
xchg
xchg
add
or
add
std
mov
lods
leave
inc
js
cmp
out
or
in
sub
popf
push
dec
sub
int
ficom
push
retf
push
jae
pusha
pushf
imul
pop
sbb
aas
and
arpl
cmp
mov
in
fisub
dec
mov
(bad)
sub
or
inc
xchg
jae
stc
and
sbb
push
dec
push
cmp
sub
adc
in
test
sub
leave
cmp
loope
es
hlt
jae
out
aam
in
jl
dec
pop
retf
loopne
repnz
jmp
lock
cmc
sub
inc
shl
js
add
pop
xor
pop
js
(bad)
mov
xchg
bound
inc
sbb
retf
call
sar
in
sar
rcl
cmc
stos
(bad)
and
jnp
inc
xor
xchg
mov
dec
sahf
add
mov
ja
ret
je
imul
cwde
rol
xchg
adc
push
out
pop
popf
icebp
xchg
jmp
call
(bad)
and
mov
lock
pop
sub
or
jle
sti
div
mov
test
movs
xchg
add
dec
ret
sub
(bad)
fbstp
out
jle
stos
xor
nop
xchg
push
pusha
cvtps2pi
in
ret
mov
ins
sub
(bad)
cdq
test
xlat
nop
sub
sbb
inc
ss
push
xor
pop
adc
cmp
or
mov
scas
inc
lahf
jno
add
ror
test
mov
or
xor
(bad)
movs
dec
out
jns
mov
sub
mov
aad
(bad)
pusha
das
add
jge
push
dec
js
mov
mov
pop
popf
jge
sub
pop
sbb
rol
cdq
sbb
sbb
mov
xor
enter
ret
aad
push
mov
mov
inc
inc
stos
mov
sbb
dec
lea
adc
scas
dec
or
push
cdq
ins
popf
jmp
inc
sub
inc
popa
sbb
push
repnz
fs
into
dec
jnp
les
mov
xchg
into
push
cmp
pusha
(bad)
in
ins
retf
and
mov
dec
sub
sub
and
stc
loopne
jg
mov
test
xchg
xor
(bad)
jnp
dec
and
jae
push
push
sbb
and
xor
fidiv
pop
lds
inc
sbb
scas
movs
inc
imul
(bad)
adc
sbb
stos
pop
cld
push
inc
jbe
scas
xchg
sub
iret
and
pop
movs
sub
inc
ja
addr16
cmp
xchg
sub
sbb
push
retf
xor
iret
push
ret
and
das
test
push
sub
mov
and
mov
movs
cmc
adc
sti
clc
fadd
stc
les
icebp
xchg
daa
mul
lods
cli
sahf
mov
adc
push
ss
sub
adc
fwait
retf
ja
sar
cli
jbe
dec
adc
out
fld
xchg
test
xor
std
mov
jo
pmulhuw
rol
(bad)
jo
sbb
jns
stos
xor
scas
out
lds
and
pushf
fdiv
mov
sar
cmp
and
out
out
jp
inc
add
mov
outs
adc
test
call
pop
inc
ins
mov
pusha
cdq
lds
jmp
daa
and
dec
or
bound
in
adc
mov
cmps
or
mov
jne
mov
mov
pop
push
rcr
mov
lock
xor
and
mov
cdq
jle
and
(bad)
jb
test
leave
adc
out
xchg
sbb
fsub
inc
sub
mov
mov
mov
into
icebp
sbb
(bad)
outs
jb
mov
cmp
mov
ret
pop
in
das
or
sbb
iret
loop
or
inc
jg
(bad)
jmp
or
repz
js
les
ds
xchg
jmp
mov
je
dec
or
cwde
mov
mov
inc
fldcw
cmp
idiv
imul
ffreep
cwde
imul
cli
enter
popa
sysexit
push
add
and
arpl
movs
lock
neg
cmc
leave
and
jecxz
in
add
adc
sub
jno
(bad)
into
je
mov
mov
jecxz
ror
and
jno
add
movs
mov
rcl
ins
movs
ret
or
jbe
push
push
add
mov
and
movs
int3
outs
push
fmul
mov
(bad)
jmp
mov
xor
pop
cmp
call
aad
cs
jp
aaa
xchg
popa
pop
mov
xchg
mov
test
mov
retf
pop
js
ins
mov
ret
adc
(bad)
jb
inc
test
clc
aam
out
data16
jge
xor
push
bound
push
outs
jne
test
out
cmp
imul
dec
dec
push
or
push
xchg
xchg
adc
sub
aaa
xor
imul
loope
sbb
jmp
call
out
cli
cmp
arpl
push
push
sub
dec
(bad)
inc
sbb
dec
add
push
add
jb
push
push
idiv
and
bound
fisubr
add
(bad)
lahf
ret
mov
push
add
in
mov
and
mov
scas
inc
xchg
push
into
adc
jge
or
dec
inc
les
pusha
adc
int3
or
adc
cs
cs
jmp
arpl
xor
mov
push
out
into
sub
mov
sub
sbb
sbb
push
in
stos
jo
(bad)
into
in
int
cwde
and
cmps
outs
movs
retf
mov
popf
mov
movs
xor
movs
xchg
addr16
jle
(bad)
mov
adc
xchg
rcr
scas
adc
mov
add
ret
pop
mov
pushf
sar
repnz
das
push
adc
inc
stc
jg
or
push
fsubrp
enter
fldcw
int
mov
in
cwde
lahf
(bad)
cmps
and
mov
sbb
loopne
xchg
movs
inc
cmp
fnstsw
imul
test
dec
xchg
das
es
add
jne
test
mov
mov
mov
or
pop
rcl
add
mov
pop
cmp
xchg
dec
or
sub
aas
and
jns
cmp
fistp
mov
add
int3
shl
push
push
fidiv
pop
xchg
sub
gs
sub
dec
jbe
dec
push
jno
ins
adc
aad
in
ins
adc
fsubr
xchg
push
or
in
cli
retf
test
push
mov
in
xor
cmps
pushf
pop
pop
movs
push
scas
repnz
sub
push
inc
test
and
pop
xchg
popf
icebp
cli
jp
push
mov
je
(bad)
inc
inc
push
stos
not
(bad)
cmps
imul
popa
push
fldenv
fwait
add
lods
lock
push
pop
scas
lods
hlt
pop
push
xchg
retf
clc
cmps
mov
adc
mov
mov
movs
xor
jnp
pop
mov
mov
ror
or
test
push
(bad)
xchg
pop
scas
in
(bad)
es
sub
test
push
add
adc
or
call
fcom
psubq
jecxz
pop
inc
xor
retf
xchg
les
mov
clc
scas
loop
jbe
xor
mov
data16
sbb
xchg
xchg
iret
and
jb
movs
rol
fild
es
push
sub
xor
inc
aad
push
aam
add
add
mov
jae
(bad)
retf
mov
enter
adc
ja
outs
leave
sub
push
ss
(bad)
pop
call
jno
aam
in
lods
in
test
adc
add
cwde
dec
movs
xchg
icebp
ins
push
mov
je
test
imul
bound
adc
scas
push
loope
add
cdq
jno
(bad)
mov
inc
sbb
mov
add
add
repz
cwde
out
imul
mov
rol
lds
iret
adc
(bad)
pushf
fsubr
sahf
fwait
xchg
jno
pop
or
jnp
test
mov
dec
ins
mov
xor
loopne
sahf
dec
push
mov
cwde
or
xchg
and
call
mov
test
mov
rcr
inc
mov
(bad)
sbb
push
jl
shr
xchg
mov
dec
loop
and
mov
inc
nop
mov
fcmovnbe
cmp
xchg
mov
sahf
sbb
pushf
pop
xchg
fwait
js
sub
retf
(bad)
fs
cld
mov
sbb
and
(bad)
loope
xor
jae
add
std
test
mov
pop
inc
xchg
cmc
and
inc
cld
aam
xchg
sub
jmp
mov
outs
fwait
scas
xchg
add
arpl
icebp
mov
cli
mov
dec
ins
loopne
xor
movs
xchg
ret
pusha
inc
fld
call
ror
shl
push
test
inc
mov
pop
ja
dec
mov
xchg
ror
pushf
adc
push
js
je
mov
shl
icebp
stos
enter
inc
std
dec
push
popf
out
mov
mov
push
cmc
jmp
cdq
jno
xor
rcl
xchg
and
push
cli
pushf
mov
mov
adc
push
fwait
add
jmp
movs
or
ficomp
daa
push
and
pop
out
nop
cwde
mov
imul
jecxz
rol
pusha
inc
or
mov
stos
test
sbb
bound
or
rcl
lds
xchg
in
int3
dec
retf
jmp
(bad)
sbb
or
test
sub
in
lods
mov
push
dec
push
cmp
inc
xchg
jbe
push
sbb
push
mov
xchg
adc
or
outs
adc
xchg
ja
pop
pop
and
push
mov
in
nop
fstp
cmps
mov
outs
adc
cmp
fld
sbb
sub
in
ficomp
into
mov
and
mov
mov
fdivr
pushf
sub
mov
sbb
int
mov
retf
push
push
inc
and
and
cmps
sar
inc
shl
je
jae
push
in
add
push
push
test
fimul
add
jp
push
mov
das
popa
xor
mov
xchg
mov
xor
fimul
fsub
(bad)
pop
mov
mov
test
or
neg
mov
jg
cmp
shr
add
rcl
or
adc
call
stos
mov
stc
jno
dec
mov
ret
mov
add
mov
ret
jge
add
xor
lds
pop
pop
adc
cmp
add
(bad)
cld
arpl
cmp
inc
sub
mov
daa
icebp
add
fisub
dec
cmp
(bad)
fisubr
(bad)
mov
mov
or
scas
cwd
add
lods
stc
fidivr
add
test
fbstp
iret
xchg
test
pop
inc
cdq
imul
cmc
jae
or
(bad)
ja
jns
adc
inc
out
imul
cmps
sbb
retf
and
inc
add
xor
idiv
cli
pop
jmp
push
rcr
inc
aaa
ins
cdq
xlat
into
push
mov
(bad)
pop
sub
in
scas
stos
xchg
xor
sbb
xor
enter
adc
xor
cmc
mov
push
icebp
fnsave
add
popf
mov
mov
nop
leave
cmps
xchg
adc
or
stos
cmp
jle
out
cmc
push
dec
mov
loop
les
ins
pop
sbb
cmp
dec
push
movs
enter
js
movs
pop
rol
in
sub
pop
xor
xor
jnp
clc
cmp
aaa
lock
mov
sar
xor
xchg
aas
movmskps
shr
out
xchg
and
mov
jmp
jns
test
addr16
pop
rol
loop
sbb
xor
jbe
lahf
sar
sahf
repnz
pushf
sub
cmp
sbb
repnz
dec
mov
xchg
inc
or
or
adc
pop
and
das
mov
ret
popf
or
out
sub
fist
xor
jmp
push
fidiv
add
jb
jno
(bad)
fsub
adc
ja
mov
cmp
mov
rol
popf
jmp
shl
addr16
sbb
call
xchg
dec
jp
test
sbb
je
jp
int3
xlat
mov
sti
out
xor
mov
and
aam
and
rdpmc
and
jg
push
xor
dec
push
(bad)
add
jp
jne
cmc
push
cs
pop
sahf
ds
jmp
fs
mov
jmp
inc
iret
retf
mov
push
xor
sub
dec
push
ja
or
cmp
mov
pop
or
push
cmp
push
push
mov
mov
and
pop
movs
sub
cmp
(bad)
fistp
call
loope
xchg
sti
jb
adc
loopne
scas
aad
call
inc
mov
fnstenv
call
lods
fimul
pop
lods
pop
push
xchg
test
xlat
call
mov
mov
sub
addr16
pop
push
mov
mov
test
je
push
sahf
push
data16
push
and
dec
or
test
cli
push
dec
jle
stos
std
dec
(bad)
pop
aas
cmp
dec
adc
adc
jmp
ja
pop
js
sub
or
popf
cmc
mov
fild
xor
adc
(bad)
mov
sbb
ins
repnz
add
hlt
jmp
shr
dec
sub
mov
sub
gs
retf
leave
push
les
sbb
push
out
setb
pop
loop
cmp
adc
mov
jmp
mov
mov
sub
cmps
lods
adc
mov
and
xor
mov
loope
mov
adc
jl
int3
es
icebp
add
xchg
hlt
es
adc
mov
xchg
pop
inc
in
(bad)
(bad)
and
mov
icebp
xlat
sub
jae
(bad)
lock
cmp
daa
jno
in
stc
sti
rol
rcl
lods
cmps
jb
lods
and
addr16
test
cmp
push
fadd
mov
jae
xchg
stos
lea
and
test
fstp
ins
cmps
into
sar
dec
(bad)
mov
mov
mov
popa
xchg
ficomp
ret
sti
push
(bad)
jl
xchg
mov
jg
shr
mov
test
jo
addr16
xlat
dec
je
les
xchg
arpl
push
in
mov
pop
and
pop
sub
or
and
mov
inc
inc
fxch
mov
adc
jo
dec
add
sbb
pop
mov
hlt
cmp
xor
push
pop
add
imul
out
mov
sbb
outs
sub
clc
jmp
pop
sbb
jecxz
sti
xchg
jg
test
jns
dec
xor
ins
jg
mov
sub
adc
jmp
or
inc
sub
pop
jnp
ja
popf
sahf
jns
shl
(bad)
cmc
fs
xchg
jge
dec
rol
adc
mov
push
push
dec
sbb
pop
or
stos
iret
push
xor
mov
cmps
inc
outs
sbb
mov
mov
jo
inc
movs
idiv
jp
jb
mov
leave
mov
inc
cwde
shr
jo
push
add
inc
jmp
fisttp
and
neg
bound
sub
xor
mov
(bad)
lock
js
out
addr16
push
pop
adc
jmp
rcr
jns
fnstenv
data16
mov
lods
mov
mov
and
(bad)
jbe
and
ss
sahf
mov
push
lods
test
and
fadd
dec
xchg
or
sbb
fwait
mov
stos
mov
loopne
pop
sbb
scas
(bad)
sub
rcr
push
mov
shl
outs
leave
cmc
lods
inc
into
ja
inc
cwde
fsubr
ds
rol
pop
jmp
inc
add
mov
and
dec
movs
push
or
ret
sbb
pushf
push
jl
adc
jbe
inc
js
sbb
pop
pop
inc
addr16
repnz
mov
push
aam
sub
pop
or
push
fwait
stos
cmp
out
daa
add
inc
mov
cmp
repz
arpl
outs
movs
shr
inc
jmp
or
mov
movs
inc
mov
sbb
mov
ret
jbe
inc
cmp
jb
adc
xchg
shr
int
inc
pop
xor
xor
inc
(bad)
and
outs
fptan
sar
(bad)
cmp
mov
dec
and
push
icebp
lods
popf
jo
or
cmp
mov
lea
pop
mov
js
adc
in
(bad)
sbb
out
in
lods
xchg
jmp
jmp
sahf
add
mov
addr16
inc
jmp
aaa
in
dec
gs
push
jmp
shr
push
stc
and
and
push
test
movs
in
mov
ret
pop
push
loope
lock
stc
xor
vcvttsd2si
nop
fisubr
mov
or
call
mov
scas
bound
stc
outs
call
pusha
test
jle
xchg
lock
jl
add
and
fisttp
mov
xchg
jp
cmp
movs
and
adc
ret
pop
dec
gs
or
dec
retf
aad
add
shl
xchg
adc
fld
mov
jl
in
and
cmp
lds
push
ds
in
mov
inc
loopne
sub
idiv
inc
or
xor
xchg
jp
dec
cdq
ror
xchg
les
in
xor
fwait
movs
out
lods
lods
mov
mov
inc
xchg
inc
pop
inc
sub
cmp
je
fldcw
cmps
sahf
inc
pop
or
pushf
mov
rcr
aas
leave
xchg
add
sbb
ror
add
ficom
pushf
xchg
enter
sar
cmps
lock
out
inc
dec
adc
bound
(bad)
out
js
enter
cdq
(bad)
movs
push
and
sub
int
or
je
xchg
out
mov
jg
stc
push
push
es
pop
inc
out
cmp
clc
js
mov
pop
jnp
inc
pushf
pusha
imul
ret
cmp
sub
mul
xchg
pop
pop
cmp
mov
dec
mov
dec
outs
xor
fsubp
jne
sub
push
loope
mov
into
inc
addr16
aad
lahf
cmps
lahf
fiadd
rcl
adc
dec
xchg
lods
rcl
adc
jp
in
cmc
dec
das
movs
dec
cmp
cs
mov
loop
nop
(bad)
movs
(bad)
sub
cmp
jecxz
inc
add
outs
aas
int
mov
push
cs
xchg
imul
sub
and
jg
mov
inc
mov
pop
pushf
mov
jp
fbld
mov
mov
fadd
and
in
push
les
aas
push
popf
jae
lods
jb
lea
xor
aas
push
jnp
xor
push
mov
aam
inc
dec
sub
and
inc
pop
adc
mov
push
fadd
add
push
or
dec
xor
xor
enter
push
and
test
push
xlat
mov
mov
idiv
sti
mov
shl
test
out
push
ret
pop
add
dec
sub
sbb
sbb
das
imul
mov
pop
and
mov
push
xchg
adc
cmp
cwde
xchg
rcr
aas
adc
pop
loop
mov
test
idiv
adc
sub
das
(bad)
movs
cmp
paddd
pop
jo
call
fisub
jo
test
out
push
sub
outs
cmp
cmp
cmp
cld
stos
daa
cmps
pop
push
pop
sbb
sub
cmp
bound
cdq
jno
inc
mov
lea
jb
pop
cs
mov
mov
sub
in
and
push
add
cmp
test
pop
int3
add
xchg
xor
adc
test
pop
jmp
loope
and
mov
out
mov
jne
adc
xor
aaa
std
stos
xor
fld
in
neg
or
addr16
(bad)
jb
sub
icebp
mov
push
ins
call
jmp
mov
dec
jge
sahf
sub
and
push
mov
adc
add
sub
stc
inc
sub
cmp
push
test
xchg
mov
mov
sub
(bad)
pop
cmp
enter
mov
sbb
out
vandps
shr
push
(bad)
dec
div
dec
push
test
aad
pop
stc
daa
xchg
in
mov
fs
add
push
outs
jo
in
cli
imul
sub
add
fstp
mov
out
inc
popf
cmp
pop
sub
xor
fs
dec
rcl
xlat
outs
jae
mov
jp
push
into
retf
rol
and
mov
pop
cmp
or
dec
cld
lea
call
xor
sub
jmp
fadd
js
pop
jl
outs
div
pop
imul
mov
ins
lock
jnp
xchg
jl
jge
add
and
xor
mov
clc
and
or
add
mov
xlat
add
in
sbb
ret
cmp
cmps
pop
stos
xor
jno
cli
xchg
(bad)
jb
and
xchg
push
dec
pop
pop
ror
mov
jne
test
inc
or
sub
pop
sbb
sub
(bad)
call
rol
in
xor
aaa
jne
lds
clc
in
shl
sahf
inc
js
mov
lods
lahf
int
xor
pop
pop
aam
in
dec
popa
lds
xor
inc
pop
ja
cmp
dec
sbb
mov
frstor
cmp
pop
push
int
pop
aam
mov
(bad)
xor
add
in
lds
mov
fist
or
push
jno
jp
popf
outs
popa
dec
xor
dec
fwait
sub
jmp
jno
nop
xor
rol
push
mov
xchg
pop
mov
mov
inc
pop
mul
xor
in
repz
pop
sbb
jnp
ret
in
pop
mov
cmps
dec
ja
dec
gs
cmps
pushf
outs
scas
push
sbb
cli
sbb
sub
xchg
imul
jae
rol
cmps
mov
push
add
cmps
repz
add
add
fcomi
pushf
jmp
mov
ds
sbb
out
(bad)
xor
sbb
xor
jl
and
mov
mov
cld
and
pusha
sbb
xchg
mov
and
rcl
call
addr16
jmp
das
adc
jmp
sub
jno
mov
js
std
lea
push
xor
sub
out
mov
pop
mov
mov
stc
push
cwde
adc
cmp
fadd
sub
mov
xlat
inc
mov
nop
mov
cmp
imul
sbb
int3
imul
pop
rcr
test
mov
icebp
jle
dec
(bad)
and
js
xor
dec
jnp
stc
sti
mov
nop
call
push
pop
jge
loope
cmp
mov
mov
mov
stos
mov
sbb
lahf
(bad)
dec
xchg
push
xor
loope
(bad)
cmc
jmp
add
rol
cdq
push
pop
xlat
xor
scas
adc
outs
xor
jbe
sbb
add
dec
dec
icebp
lea
(bad)
sub
bound
gs
repnz
or
mov
sbb
retf
pop
pushf
jo
cmps
xor
sbb
inc
in
mov
arpl
xor
popa
(bad)
xchg
stc
mov
ror
das
xor
les
sahf
cs
lds
push
lahf
repnz
fwait
leave
push
adc
cdq
iret
mov
sub
dec
shr
aaa
cmp
imul
pop
or
(bad)
iret
jbe
cmps
add
jp
jo
push
jl
out
(bad)
ins
jmp
pop
stos
xchg
ins
loopne
cld
je
mov
add
sub
stos
(bad)
jmp
mov
pop
add
aam
out
dec
push
fwait
add
or
mov
jle
adc
(bad)
cmp
mov
mov
cs
xchg
inc
pusha
repnz
and
cmc
outs
push
stos
jmp
jecxz
adc
dec
mov
(bad)
xor
push
xor
aam
out
out
adc
sub
popa
(bad)
mov
cmc
pop
ins
scas
xor
push
adc
xchg
pop
cmp
ret
lods
push
cmp
out
stos
mov
nop
pusha
ins
out
fcomp
add
mov
and
rcr
test
cmc
aaa
cmps
cdq
inc
(bad)
mov
mov
push
rcl
and
cmp
or
(bad)
jae
mov
inc
ins
dec
xchg
(bad)
pop
into
lahf
imul
imul
fsubr
mov
das
mov
iret
inc
and
jbe
adc
idiv
jae
xlat
pop
enter
jae
ds
cmps
push
add
push
sbb
pop
shl
pop
or
xchg
push
jge
cvtpi2ps
(bad)
xchg
outs
popf
arpl
inc
sub
movs
cmp
cs
jne
add
retf
in
xlat
retf
mov
and
dec
mov
mov
stos
pop
cmp
fisttp
mov
fnstcw
mov
jo
ss
xchg
in
ja
and
mov
sub
test
rcl
adc
in
fstsw
cld
xlat
xor
outs
test
push
sub
dec
xchg
fisttp
or
jmp
inc
(bad)
jno
xchg
repz
push
data16
in
pop
jl
jno
cwde
data16
cmp
add
xchg
adc
add
add
fdiv
push
push
test
push
arpl
stc
jl
and
ror
fdiv
scas
xchg
popa
push
idiv
iret
and
rcl
scas
sbb
xor
xor
frstor
sbb
iret
adc
jnp
mov
test
jecxz
aas
scas
push
scas
fidivr
jle
fcmovnb
cli
sub
and
popf
sbb
ins
data16
popf
in
rol
ret
scas
scas
movs
fs
stc
jp
xor
add
cmp
xchg
mov
push
ror
int3
add
dec
retf
dec
xchg
call
xchg
sbb
cmp
dec
clc
sub
jno
aad
ja
fsubr
cmp
mov
mov
int
or
data16
and
add
ror
shl
inc
mov
imul
dec
adc
pop
jp
pop
sub
and
loope
sbb
cdq
ja
mov
sar
sub
fsub
sub
imul
lahf
mov
sbb
ror
or
xchg
add
lea
adc
pop
fmul
cmp
test
rcr
call
or
cmp
imul
and
or
mov
push
pop
bound
clc
mov
andps
ror
xor
call
cmp
pusha
mov
and
cdq
push
cmc
mov
jnp
jg
mov
scas
loop
add
call
movs
sbb
adc
stos
mov
mov
mov
adc
into
rcl
repz
lahf
jp
add
sbb
jae
xor
or
mov
jp
outs
movs
in
adc
aad
dec
hlt
daa
gs
int
add
daa
xchg
loop
sahf
rcl
in
jns
xor
xchg
cmps
ret
add
(bad)
(bad)
xor
call
repnz
add
dec
aas
pop
test
int3
inc
mov
enter
dec
adc
jmp
pop
call
sub
jbe
pop
mov
mov
mov
retf
inc
stos
push
mov
cmc
loope
cwde
popa
cmp
into
jmp
push
clc
cmp
ja
dec
stos
inc
test
and
shr
xchg
or
stos
fidivr
fnsave
inc
xchg
into
mov
pop
imul
add
out
dec
arpl
lods
outs
repz
cmps
bound
fsub
mov
shl
inc
mov
adc
lock
ret
mov
aas
retf
or
fbld
push
xor
cmp
pop
in
cmc
pop
and
pushf
mov
hlt
push
mov
sbb
cli
icebp
into
int3
push
aas
scas
nop
dec
xchg
inc
jae
push
jp
sub
xchg
mov
lea
cmps
sub
daa
jno
or
out
push
sbb
ss
loopne
push
inc
adc
jecxz
mov
add
pusha
jno
fldcw
(bad)
push
add
shr
sub
ss
cs
dec
aaa
push
and
clc
outs
inc
sahf
or
mov
pop
push
xor
mov
jle
ficomp
fs
(bad)
popf
sbb
retf
cmova
mov
jne
mov
fs
out
jns
std
aaa
les
add
mov
and
adc
out
jno
or
in
inc
clc
fld
mov
push
and
repz
pop
inc
stos
lods
iret
cli
push
and
call
ss
js
pop
mov
std
jbe
xor
dec
neg
ret
pop
push
jno
dec
in
pop
hlt
mov
dec
int
push
add
outs
loop
mov
add
mov
adc
clc
out
imul
movsx
xchg
jecxz
sub
dec
xor
jbe
xchg
add
outs
std
repz
push
inc
mov
iret
icebp
cmp
jmp
cdq
cld
adc
aad
pop
fsubr
mov
cmp
lods
test
inc
and
stos
stos
xor
rcl
sub
sub
push
adc
inc
fild
stos
cmps
stos
sub
adc
scas
inc
shl
xor
pop
jmp
stc
ficomp
mov
xchg
adc
std
dec
xlat
mov
(bad)
pop
cmp
fld
daa
ins
dec
or
cmp
jle
sbb
inc
xor
push
lods
add
xor
(bad)
jmp
pop
push
cmp
imul
push
shl
push
push
jg
nop
mov
cwde
sub
push
in
jmp
dec
popf
mov
xchg
mov
int3
pop
push
dec
mov
nop
hlt
pop
push
push
mov
loopne
imul
pop
arpl
popa
daa
jmp
xchg
ins
cwde
int
das
lock
adc
xor
enter
pop
ins
rol
xor
push
add
xor
mov
movs
shl
fadd
xor
inc
push
cmp
setns
xchg
adc
cmps
push
ja
call
mov
mov
stos
repnz
pushf
loopne
stc
ins
inc
fidivr
or
addr16
sub
push
lods
lods
fnstsw
pusha
aad
test
and
and
pop
(bad)
or
(bad)
lods
and
xchg
adc
mov
push
adc
(bad)
jg
sub
sbb
int3
data16
sub
mov
mov
jo
mov
(bad)
loopne
sub
push
rcl
add
dec
out
pop
and
cmps
outs
adc
retf
xchg
neg
xor
cmps
sbb
fsub
outs
hlt
dec
cmp
inc
mov
loop
inc
bound
cmp
add
scas
mov
ja
scas
lods
imul
out
dec
cmps
xor
xor
jb
cmp
outs
fisub
mov
shr
cmp
dec
xchg
adc
in
inc
mov
mov
sub
ins
dec
shr
test
mov
pop
not
fldenv
sbb
das
and
mov
mov
fild
fs
call
xchg
mov
and
mov
push
add
jo
sar
adc
dec
ds
inc
push
scas
inc
(bad)
cwde
inc
int3
ror
xor
mov
or
mov
inc
adc
dec
xor
mov
and
mov
xchg
sti
dec
jo
inc
mov
fnstsw
xchg
sbb
sub
mov
out
mov
(bad)
retf
sub
call
cmp
fisttp
daa
in
push
vcvtsi2sd
cld
into
test
shl
pushf
cs
pop
fwait
jge
push
inc
call
leave
pushf
outs
aam
add
or
push
sbb
(bad)
adc
and
adc
sbb
leave
out
mov
xor
push
adc
dec
cmp
fld
mov
cmc
inc
sub
aad
mov
loope
int3
jmp
push
xchg
(bad)
mov
ror
mov
sub
jb
mov
jae
gs
lods
push
jp
es
nop
push
movs
ins
jmp
int3
in
movs
xchg
lock
idiv
into
jg
jmp
int3
inc
push
sti
(bad)
jmp
pop
stos
dec
cli
mov
inc
addr16
out
data16
out
push
push
icebp
test
fidivr
push
(bad)
mov
jl
cli
mov
jns
adc
je
push
test
iret
mov
ins
lock
inc
jno
fsubr
push
mov
movs
ret
out
pop
inc
(bad)
(bad)
std
adc
and
inc
ror
repz
pop
mov
lock
ds
shr
nop
xor
adc
daa
repz
das
or
outs
(bad)
push
mov
jg
pop
and
test
jmp
jmp
jmp
jo
imul
cmp
fidiv
ror
daa
xchg
or
xchg
jns
std
cmp
sub
dec
inc
jmp
int3
mov
mov
add
les
iret
es
inc
nop
fs
xlat
mov
xor
adc
addr16
hlt
lods
aaa
aaa
popa
scas
in
or
sub
sub
adc
loope
mov
adc
ins
fchs
push
jmp
and
outs
mov
loop
mov
loopne
pop
popa
inc
push
jle
add
inc
repz
xchg
push
mov
jo
mov
fs
lock
or
aas
adc
mov
scas
pop
sahf
jg
rcl
jno
mov
cmps
xchg
mov
pop
or
retf
mov
xchg
imul
cmp
sbb
cmp
lods
sub
and
test
and
push
stos
mov
cmpxchg
out
call
sub
sahf
and
mov
call
aaa
pop
aam
lea
pop
lahf
cmp
loopne
stc
cmp
popf
and
call
inc
xchg
cs
hlt
jmp
aaa
enter
bound
cmps
or
pop
mov
repnz
sub
stos
test
cli
addr16
scas
xchg
dec
pop
push
sub
pop
scas
and
xchg
jg
lods
int
imul
lahf
ja
push
lods
imul
xchg
hlt
repz
dec
mov
movs
sub
and
or
dec
ret
mov
adc
pop
loope
push
mov
mov
mov
pop
cld
mov
fst
stos
jmp
sbb
xor
loop
jecxz
inc
and
dec
pop
dec
ds
cmps
add
fild
jmp
push
and
mov
int3
pop
aas
or
out
out
shr
cmp
inc
mov
mov
int
mov
inc
push
cdq
ret
jno
std
fs
jge
jb
sbb
std
inc
enter
fild
popa
ja
pop
dec
(bad)
sti
aaa
sahf
jb
repnz
or
mov
sti
sahf
or
outs
push
cmp
cdq
cmp
sub
inc
call
mov
sbb
add
push
jnp
popa
pop
inc
mov
das
and
je
call
adc
sub
mov
sub
push
dec
fstp
and
add
jne
jmp
dec
dec
aas
das
inc
jno
push
xchg
sbb
mov
cld
call
mov
jl
sbb
push
clc
ss
xor
lock
(bad)
pusha
pop
add
enter
jmp
rcl
pop
push
or
push
push
call
out
jl
jg
add
loopne
and
js
inc
mov
or
aas
sbb
cmp
xchg
cmp
out
pop
fcomp
(bad)
retf
add
hlt
xchg
sub
xchg
outs
not
or
pop
std
mov
xchg
mov
xchg
jb
clc
mov
(bad)
xchg
and
add
add
and
add
adc
adc
and
xor
sbb
or
push
(bad)
not
mov
ins
pusha
sub
xchg
fst
lea
xchg
dec
sbb
fstp
xor
inc
loop
aaa
js
out
je
out
inc
mov
or
inc
dec
jg
inc
xchg
or
inc
jbe
iret
je
punpcklbw
cmp
jbe
push
ret
stc
jns
fcomp
cwde
xchg
adc
sub
lods
fsubr
adc
lods
mov
iret
lods
xor
ret
pop
push
sqrtps
outs
sbb
out
movs
mov
dec
adc
sub
jne
cli
cmp
push
pushf
jmp
xor
cmps
add
push
xor
xor
pmulhuw
repz
jno
add
xchg
sub
mov
adc
mov
xchg
(bad)
lahf
xchg
mov
pop
jmp
(bad)
xor
mov
dec
mov
ins
popa
push
aas
lea
pop
mov
dec
xchg
in
test
add
mov
aam
and
mov
dec
into
cld
push
jecxz
je
mov
pop
xchg
fcmove
or
cwde
adc
sub
popf
ficomp
mov
sbb
and
cdq
mov
dec
dec
mov
(bad)
outs
jbe
jne
xor
push
jge
push
inc
sbb
add
ins
jne
inc
dec
pop
stos
dec
lock
aas
gs
popa
out
aad
jae
in
(bad)
retf
xor
out
mov
push
loopne
mov
cmps
nop
pop
adc
mov
test
add
rcr
dec
push
cmp
mov
mov
lahf
adc
jge
push
mov
dec
mov
mov
sub
mov
ja
repnz
mov
mov
rcl
(bad)
push
ror
mov
idiv
mov
push
adc
add
cs
loope
sub
pop
mov
adc
sbb
(bad)
imul
push
xchg
repnz
pusha
xchg
xlat
cmps
jge
pop
dec
outs
sub
mov
lods
scas
test
or
inc
mov
aam
sbb
xor
and
push
cli
push
push
mov
(bad)
and
outs
int
fld
jge
xor
add
jl
fwait
ss
getsec
lea
push
cmp
movs
stc
mov
sbb
mov
rcr
stos
adc
add
pop
dec
int
call
mov
(bad)
in
loopne
in
neg
ret
dec
inc
mov
add
mov
xchg
shr
push
or
es
rol
cmp
cdq
pushf
cmp
sub
cmp
(bad)
lods
push
sub
mov
jne
cmp
sbb
cmp
inc
neg
jecxz
rol
adc
fbld
lods
mov
mov
xchg
mov
test
rol
or
in
push
inc
adc
and
dec
jae
sbb
jge
cmp
push
outs
xchg
mov
leave
fisub
dec
fistp
in
or
jno
stc
out
outs
rcl
in
push
pop
pop
dec
popf
jl
jmp
std
in
xchg
mov
or
ror
mul
add
and
imul
js
inc
in
ins
stos
hlt
(bad)
jmp
rcr
int3
cmp
add
pop
push
mov
push
out
add
mov
xchg
inc
neg
and
ins
scas
cwde
sub
hlt
inc
sbb
lods
sbb
jb
jmp
mov
mov
and
fwait
mov
ss
add
jge
cwde
jp
scas
xchg
inc
jle
jmp
inc
adc
jg
jmp
adc
outs
icebp
cdq
cmps
push
sar
(bad)
mov
retf
outs
inc
sbb
dec
pop
jl
xor
pop
ins
pop
inc
xor
test
pop
enter
aam
add
(bad)
imul
jno
arpl
push
inc
repz
mov
dec
cdq
jb
jle
(bad)
xor
pusha
xchg
arpl
pop
icebp
test
mov
push
adc
add
xor
sub
dec
xor
pop
and
pop
mov
out
fwait
push
mov
cmp
mov
push
(bad)
fiadd
adc
movs
add
div
add
bound
arpl
sti
add
jmp
movs
retf
popf
retf
inc
fldcw
outs
push
lds
pusha
mov
cmp
bound
ret
in
scas
adc
jg
in
jno
movs
scas
cdq
xlat
cld
cdq
fldcw
push
loop
sbb
sub
mov
sub
dec
div
inc
add
dec
rcr
adc
mov
mov
addr16
sti
jl
cmps
sbb
mov
or
push
mov
mov
mov
fld
mov
pusha
jmp
movs
inc
scas
push
enter
gs
shl
inc
xlat
sahf
pop
add
sbb
cmp
(bad)
les
push
or
cld
mov
cmp
push
sub
jno
clc
call
daa
into
outs
stc
mov
sub
iret
movs
pop
pop
push
mov
fwait
sbb
mov
lock
jno
push
not
pop
lods
(bad)
int
outs
retf
das
mov
rcl
dec
inc
daa
retf
dec
addr16
mov
repnz
push
push
cld
stos
test
sub
mov
push
sub
xchg
xchg
rcl
or
call
mov
xchg
push
vandpd
jns
ficomp
xchg
in
jl
in
lock
jnp
xchg
sar
shl
ret
cli
xor
(bad)
bound
arpl
cmps
add
cmp
(bad)
hlt
xor
pusha
sbb
in
xor
sbb
xchg
adc
loopne
cdq
or
inc
loop
ficomp
lock
mov
aas
inc
imul
std
rol
and
adc
xchg
and
rcr
cmc
ins
xor
push
jb
popf
(bad)
out
mov
push
cmp
cwde
xchg
js
(bad)
mov
inc
stos
mov
je
mov
inc
out
out
es
enter
inc
(bad)
lods
idiv
ret
jp
and
or
mov
(bad)
not
push
call
xor
sub
ror
cmp
sbb
sar
imul
lock
jg
ret
pusha
std
push
or
int3
jnp
pop
fistp
jp
fist
pop
movs
test
aam
xor
loopne
stos
or
or
inc
or
sub
nop
lahf
and
les
mov
gs
(bad)
mov
iret
in
fwait
repz
mov
push
repz
lahf
mov
xor
sbb
lods
inc
mov
mov
or
stos
repz
mov
fist
lods
cmp
mov
popa
rcr
adc
inc
fimul
cmc
or
adc
and
clc
inc
rcr
mov
frstor
mov
retf
jo
jl
jge
jmp
or
inc
into
rol
lods
jb
stos
jge
retf
cmp
iret
aaa
popf
retf
nop
xchg
lods
mov
ja
repnz
mov
retf
cmp
xor
into
xchg
lock
push
sub
retf
xor
retf
fldcw
aam
mov
mov
ret
call
add
push
pop
loope
mov
shr
cmp
push
and
and
loopne
mov
daa
jl
mov
in
sar
cmp
test
sbb
ficom
mov
add
test
jge
pushf
fdivr
or
sbb
sub
loop
cmp
mov
iret
mov
aam
fxtract
dec
mov
shl
pop
lods
jno
ins
cmp
retf
cmp
mov
inc
mov
cmp
(bad)
cmp
mov
mov
mov
inc
sbb
or
add
push
lds
and
sahf
xor
movs
sbb
retf
and
cdq
mov
cmp
enter
bound
cli
push
pop
inc
jae
jg
aas
ret
mov
push
mov
jne
sbb
pop
inc
enter
pop
shr
push
xchg
ins
or
lds
xor
mov
xchg
jmp
mov
push
adc
mov
enter
mov
stos
retf
add
dec
daa
and
cmp
dec
cmps
xchg
inc
lea
int3
neg
xchg
iret
lods
cmp
xor
bound
fdivp
shl
mov
jmp
std
sbb
adc
cmp
(bad)
cmp
cmc
push
dec
and
retf
and
aas
call
push
(bad)
jl
dec
retf
out
jbe
stos
scas
fwait
mov
push
nop
inc
leave
and
mov
in
mov
xor
dec
add
(bad)
scas
neg
arpl
pop
aas
push
and
out
inc
cmp
movs
cmp
or
scas
mov
sub
les
mov
mov
or
outs
pushf
in
dec
xchg
sub
push
scas
adc
je
and
cmp
pop
sub
popf
sub
mov
jnp
rol
ret
jmp
movs
xor
fdiv
aas
int3
mov
lds
jg
mov
into
sub
je
rcr
push
clc
jecxz
out
inc
mov
mov
adc
test
pop
movs
adc
imul
adc
jns
stc
adc
loop
cmp
retf
mov
sub
dec
iret
addr16
add
dec
mov
lods
stos
cmp
loop
test
arpl
mov
and
cmp
adc
test
aas
pop
das
and
mov
mov
fisttp
cwde
icebp
or
mov
mov
stos
mov
dec
aaa
jp
mov
inc
mov
ins
mov
sti
icebp
jne
xor
(bad)
data16
mov
or
push
pop
mov
fstp
(bad)
mov
pop
mov
mov
xchg
popf
push
in
stos
out
lds
mov
push
sbb
outs
sbb
push
out
push
frstor
mov
in
imul
stos
sbb
sbb
xchg
push
enter
aam
lods
js
fnstenv
loopne
inc
push
outs
push
cmps
adc
aam
call
pop
pop
bound
pop
pop
or
push
out
test
inc
sub
add
jge
mul
adc
jcxz
push
scas
or
pop
xchg
mov
pusha
mov
ficomp
xchg
xor
cwde
dec
hlt
dec
sub
addr16
iret
adc
add
js
jge
mov
xor
clc
adc
add
dec
jns
sbb
fwait
mov
jo
(bad)
call
mov
fsub
mov
adc
xor
repz
test
std
int3
movs
jl
stos
and
xor
dec
pop
cs
and
stos
jmp
push
aam
ret
push
inc
loopne
sub
adc
xlat
mov
push
sub
jbe
push
inc
and
mov
pop
xor
pop
mov
fbld
cdq
mov
lock
mov
es
cli
xchg
sub
add
leave
or
add
jecxz
fistp
pop
add
cmps
or
inc
ds
ret
lods
(bad)
mov
pop
add
inc
inc
cmp
jne
sbb
lea
cmp
mov
(bad)
jbe
pop
cmp
mov
ror
cmp
jno
mov
sbb
outs
(bad)
sbb
sub
push
je
mov
shl
mov
inc
rol
les
mov
xchg
popf
rol
loop
and
xchg
jecxz
and
jmp
mov
adc
shl
mov
imul
cli
adc
add
dec
scas
les
lds
jns
ret
jnp
ja
inc
fild
test
lea
mov
imul
int
mov
add
dec
scas
cmp
lods
cmp
jecxz
inc
fdivp
add
ins
fild
pop
push
and
mov
mov
in
mov
jo
aaa
mov
das
dec
sbb
test
ins
cmp
lea
fmulp
and
sar
dec
fdivr
nop
(bad)
outs
stos
mov
repnz
mov
adc
mov
xor
jne
inc
xchg
cmp
inc
inc
adc
ja
push
push
aas
ins
dec
jbe
and
add
ror
shr
je
mov
arpl
clc
dec
mov
ins
or
gs
mov
xchg
or
data16
adc
push
sar
call
cdq
pop
data16
test
(bad)
adc
mov
inc
push
add
sbb
stc
mov
arpl
jle
in
mov
hlt
(bad)
and
pop
mov
pop
and
shl
xchg
daa
jne
cmp
xor
out
inc
pop
cmp
cs
sbb
gs
test
(bad)
(bad)
push
mov
das
data16
sbb
pop
test
add
out
or
mov
into
jg
cdq
mov
jne
mov
push
paddd
push
mov
xchg
push
inc
popf
mov
sbb
cmp
js
iret
inc
cld
push
push
ins
std
test
call
mov
test
xor
push
dec
push
or
or
in
mov
dec
out
xor
inc
mov
sbb
icebp
sbb
lods
out
adc
lock
test
inc
(bad)
adc
xor
stc
stos
xlat
ret
loop
mov
scas
mov
xchg
jbe
push
push
dec
pop
jge
jecxz
cmps
jmp
pop
mov
popf
mov
xchg
out
jb
pop
cmp
aam
out
add
jp
test
cmc
fdivr
xchg
mov
mov
in
cdq
mov
mov
push
push
adc
cmc
fnstcw
add
xadd
cmp
imul
mov
push
fisubr
mov
mov
dec
xlat
and
sar
sbb
neg
test
mov
cmps
and
xlat
add
xor
push
dec
fcmovnu
std
sbb
int3
jecxz
inc
push
sub
(bad)
adc
jge
sub
lds
outs
and
and
cmp
jmp
mov
fcomi
or
test
ins
mov
ss
mov
addr16
ss
ja
cdq
fadd
mov
and
cli
push
(bad)
int3
dec
pop
(bad)
ds
pop
xchg
stos
xchg
adc
in
loope
push
stc
cmc
scas
push
jae
(bad)
fiadd
scas
out
lahf
sahf
inc
jnp
mov
xchg
mov
xchg
and
imul
cmps
cmp
inc
lds
dec
push
dec
out
repnz
add
test
sbb
mov
lock
ds
add
mov
(bad)
aam
test
cs
loope
ret
rcr
sbb
mov
jmp
(bad)
cmp
iret
push
ds
pop
push
out
std
scas
xor
push
mov
shl
jmp
mov
adc
rcl
daa
in
test
push
pushf
out
cmp
mov
test
js
rol
repz
mov
jmp
pop
jge
mov
gs
addr16
es
add
push
xchg
sbb
call
shr
pop
sub
outs
cdq
pop
test
fdiv
cmps
hlt
adc
xor
daa
pop
(bad)
jb
in
add
xor
dec
addr16
jge
xlat
shl
imul
xchg
and
add
xor
dec
mov
xor
sti
add
pop
out
mov
inc
(bad)
repnz
(bad)
int
push
mov
mov
xor
hlt
sbb
fbld
cmp
loopne
add
or
enter
and
cli
dec
jno
dec
sti
push
mov
mov
dec
repz
cmp
jmp
arpl
out
ss
aaa
push
mov
movs
cmps
push
int
scas
xchg
ret
js
arpl
stos
mov
ret
outs
dec
pop
inc
dec
and
pushf
dec
dec
mov
add
or
fbstp
mov
pop
call
aam
pushf
xor
data16
xlat
aam
repnz
mov
mov
jle
adc
cs
icebp
mov
cmps
(bad)
jge
sbb
mov
mov
jns
in
xor
sti
dec
sub
inc
mov
jmpw
add
cmp
das
mov
inc
sub
mov
pop
std
(bad)
mov
call
les
inc
push
es
daa
out
and
std
pop
xor
sahf
fsub
jo
dec
fist
and
and
cld
test
fist
cmps
ret
jl
addr16
mov
jmp
repz
xchg
jne
test
mov
or
fcom
arpl
mov
hlt
scas
adc
mov
sub
add
rcl
push
adc
push
jnp
aam
cmp
in
push
bound
retf
sub
jo
dec
adc
xchg
push
sar
xchg
pop
sti
imul
(bad)
pop
mov
xor
xor
out
jae
xchg
je
push
nop
pushf
xchg
fdiv
dec
icebp
fs
lods
imul
retf
and
in
inc
pusha
cld
pop
and
jno
pusha
jo
frstor
jno
popa
jmp
xchg
pop
fstp
add
add
cmp
(bad)
enter
jnp
div
sub
push
mov
int
and
or
and
fdivr
loope
adc
adc
pop
mov
xchg
pop
xor
call
hlt
inc
(bad)
dec
sahf
sub
aaa
cmc
(bad)
cs
pop
shr
cmp
adc
push
daa
cmps
pop
inc
gs
jb
push
stos
fldl2t
ja
adc
push
push
sub
js
jle
scas
inc
sub
pop
pop
cdq
mov
scas
daa
cmp
mov
xchg
pop
inc
and
xchg
test
jp
outs
or
push
sbb
pop
mov
adc
or
jnp
shl
in
jne
lahf
popa
pop
dec
pop
lea
retf
mov
fadd
inc
mov
jle
retf
fs
in
fild
(bad)
out
shl
retf
icebp
fs
outs
imul
and
rcl
inc
shl
or
sbb
clc
int
aam
aad
sar
outs
xchg
jge
jg
scas
lahf
ja
xchg
loope
icebp
into
adc
mov
pop
mul
pop
xchg
and
pop
aas
gs
cmp
int
mov
(bad)
cwde
cmps
push
iret
jae
cli
jmp
mov
add
out
mov
inc
bound
add
lds
inc
or
dec
nop
jae
inc
jno
and
and
cmp
rcl
push
sbb
mov
pop
sub
lahf
xchg
mov
(bad)
idiv
cs
rcl
cmp
aam
aas
add
inc
les
dec
(bad)
ja
sbb
pop
aas
xor
push
icebp
stos
std
bound
ror
inc
mov
xor
loop
cmp
cmp
int3
mov
jns
adc
and
addr16
or
out
add
lods
cmc
into
(bad)
popf
jo
clc
out
add
mov
scas
and
dec
enter
inc
push
aam
jmp
aaa
lods
xchg
jb
jb
dec
cmp
(bad)
cli
retf
movs
mov
push
outs
rol
nop
pop
push
mov
sbb
lds
scas
lea
pusha
inc
add
call
pop
push
mov
dec
rcr
jmp
retf
sub
rol
shl
inc
ret
sbb
cmps
into
int3
enter
cmp
outs
push
ds
mov
stos
out
int
in
jl
push
cmc
mov
mov
cmp
bound
enter
fisubr
or
shr
inc
fbstp
and
test
repz
pop
or
xchg
xchg
out
stos
fcmovnu
and
in
popf
sar
loop
lods
inc
imul
ja
mov
por
stos
dec
mov
push
push
data16
aaa
cmp
(bad)
jl
mov
fsub
ds
(bad)
jae
hlt
cmps
jmp
mov
or
arpl
inc
push
fldenv
dec
hlt
iret
loopne
inc
retf
add
out
xor
add
(bad)
aam
test
in
and
add
stos
fcmovb
add
out
(bad)
not
in
lock
mov
mov
xchg
test
pop
test
cmp
push
mov
mov
ins
dec
or
cmps
dec
mov
jne
jb
adc
daa
mov
dec
xor
(bad)
outs
dec
std
fs
ins
aad
outs
push
push
in
jmp
dec
push
jnp
push
xchg
and
add
aaa
repz
xchg
(bad)
cs
cdq
das
mov
pop
xlat
shl
cdq
stos
jae
ins
fisttp
(bad)
hlt
nop
retf
jecxz
test
add
shr
and
outs
jmp
push
sub
les
jnp
add
mov
and
dec
addr16
ins
shl
sub
cmp
add
movs
into
pop
add
dec
ret
imul
fldenv
jle
mov
enter
cmps
and
mov
rcl
add
std
jo
inc
jl
push
add
xor
sbb
jp
js
fnsave
and
aam
sub
xchg
sbb
jg
nop
cld
(bad)
retf
lods
or
mov
push
or
stos
and
mov
adc
fld1
test
test
iret
sti
loopne
(bad)
adc
je
les
repnz
xchg
sub
in
dec
mov
lea
pusha
add
loop
pop
sahf
push
push
cmc
gs
out
aaa
adc
nop
adc
sti
stos
xchg
push
ret
or
dec
retf
sub
test
adc
cwde
and
sub
or
xchg
xor
pop
sub
add
jae
xchg
push
mov
pop
jns
cmp
in
xchg
test
cs
push
or
repnz
jmp
inc
jbe
or
out
jno
fdivr
pop
cmp
retf
jmp
ins
in
pushf
cmp
(bad)
shl
ret
stos
(bad)
pop
push
bnd
jmp
jp
retf
imul
lods
std
mov
lock
mov
std
sub
dec
les
sub
pop
or
pop
(bad)
retf
push
fild
add
inc
icebp
call
imul
push
mov
arpl
hlt
and
xor
cmps
jne
fdivr
sar
daa
jo
adc
xor
adc
inc
test
jle
pushf
push
mov
mov
nop
adc
and
rol
loope
dec
mov
ret
in
adc
test
ss
mov
cmps
gs
test
iret
lock
pop
in
add
push
rcr
push
add
push
xchg
inc
jns
cmp
or
pusha
loop
mov
and
add
mov
sbb
imul
movs
adc
inc
inc
mov
retf
lds
fadd
xchg
inc
nop
pop
ja
call
and
pop
fsubr
das
ret
inc
call
in
popa
imul
xchg
fistp
ror
sbb
daa
mov
mov
(bad)
mov
bound
aad
xchg
xor
pop
adc
cmp
add
push
add
jne
div
sub
mov
ja
inc
pop
and
repnz
adc
jmp
mov
cs
push
jmp
pop
and
ins
lds
arpl
cld
enter
cmps
pop
int
fsubr
dec
jmp
loopne
adc
sbb
and
pop
das
dec
mov
iret
mov
cmp
mov
idiv
movs
inc
and
xlat
xchg
fistp
dec
mov
pop
xchg
lock
push
dec
mov
(bad)
jns
enter
push
scas
(bad)
cmp
push
ret
inc
cmp
leave
es
jns
pop
sub
in
jge
mov
(bad)
mov
jb
dec
cmp
push
call
movs
rcl
ror
adc
scas
xchg
movs
and
mov
pusha
sub
xor
test
sbb
fdiv
pop
push
aas
jns
mov
or
cdq
add
pusha
mov
dec
ins
stos
xchg
icebp
shr
(bad)
pop
inc
jge
gs
dec
inc
sbb
add
mov
leave
adc
mov
fldln2
mov
popf
movs
adc
sti
and
add
pop
fld
cmp
mov
jae
dec
cld
xor
aam
add
imul
xchg
mov
xlat
and
test
push
mov
cmps
retf
loop
adc
sbb
push
lods
aad
pop
mov
outs
int3
mov
cmp
outs
push
push
cmp
int3
pop
adc
loopne
cdq
das
dec
fist
outs
adc
into
mov
mov
xchg
mov
add
dec
jg
pop
push
test
jae
int3
repz
dec
int
fdivp
push
xchg
adc
(bad)
aad
sbb
sub
stos
sti
fdiv
out
aam
les
test
fisubr
jmp
jg
cmp
sahf
xchg
ja
adc
rcr
(bad)
(bad)
repz
outs
adc
mov
add
adc
rcr
sbb
in
mov
add
scas
popa
ds
mov
sbb
sbb
out
pop
xor
dec
sbb
pop
sbb
out
mov
or
mov
out
movs
icebp
sub
(bad)
or
mov
jns
loop
(bad)
cld
dec
shl
xchg
std
mov
jmp
(bad)
out
ins
imul
(bad)
jnp
adc
mov
clc
mov
js
fsub
call
les
xchg
aas
retf
jnp
es
lahf
icebp
jbe
adc
test
cdq
xor
aad
pop
push
xchg
xchg
fwait
jle
mov
cs
xor
out
mov
xchg
jl
jnp
gs
sti
loop
and
push
clc
mov
jmp
cli
movs
mov
xor
adc
push
and
jmp
inc
fist
(bad)
les
nop
data16
mov
cvtps2pd
xchg
aas
clc
shl
or
xor
xor
adc
adc
mov
addr16
sbb
(bad)
cmp
fcomi
cmps
or
jns
inc
push
inc
dec
ror
cmps
mov
test
xor
inc
xor
cwde
push
outs
jae
stos
clc
mov
mov
sbb
or
stos
fs
mov
push
push
repz
inc
popa
(bad)
sub
cmp
mov
test
push
adc
shr
nop
mov
shl
fld
dec
fsubr
lahf
(bad)
into
xor
test
scas
aad
xchg
repz
ror
sub
lahf
int
ins
rcl
inc
adc
mov
xlat
pop
push
nop
fwait
cmc
das
xchg
mov
ffreep
or
cmp
scas
or
arpl
add
int3
enter
sub
in
adc
pop
test
add
outs
mov
ss
fidiv
or
movq
push
and
add
inc
push
fist
mov
push
sahf
popf
or
push
or
into
(bad)
ds
test
push
dec
or
cmp
xchg
cdq
fisub
mov
jmp
sbb
add
cmps
jb
movs
adc
push
inc
adc
stos
adc
icebp
rol
(bad)
sbb
sar
jo
cwde
xlat
sub
out
(bad)
mov
fwait
pop
inc
fmulp
fistp
mov
loope
mov
jg
das
lds
dec
jno
xlat
xchg
cmps
aaa
hlt
imul
test
ja
adc
enter
daa
sub
jmp
push
xchg
fld
out
dec
push
icebp
mov
stos
or
sar
and
scas
xchg
les
movs
push
push
push
ss
inc
and
test
dec
jo
mov
(bad)
mov
mov
pop
pop
lds
mov
inc
push
les
movs
lock
push
jp
add
out
inc
push
out
cmps
les
es
sub
xor
xchg
cmc
mov
sbb
aas
shr
jge
in
adc
gs
jecxz
or
or
cmp
jbe
cmp
dec
test
lea
jae
hlt
aam
xor
movs
out
sahf
lods
xchg
es
imul
jae
xor
out
int
dec
pop
adc
idiv
loope
xor
add
ror
sub
xor
or
jp
stos
and
mov
mov
loop
out
sti
mov
xor
mov
ret
out
sub
push
movs
cmp
jle
repz
fld
(bad)
cmp
pop
rcr
jp
hlt
jp
sbb
adc
push
cmp
ret
xchg
mov
je
adc
or
pusha
scas
dec
popa
js
sub
jge
stc
mov
movs
bound
sub
bswap
adc
clc
shl
cmp
push
mov
ret
jg
scas
pop
cmp
pop
int3
out
cmp
dec
loope
dec
mov
pop
hlt
pop
mov
fsubr
lea
cwde
data16
add
out
jns
fidivr
push
mov
adc
add
sub
shl
into
out
jg
dec
mov
mov
cmp
cdq
adc
retf
xor
mov
test
xor
bound
out
loop
int3
add
test
jmp
shl
popf
in
mov
inc
retf
cmp
xchg
or
fstp
pop
ret
push
push
push
cmc
push
or
push
jno
imul
loope
cs
mov
fist
std
xchg
loopne
repz
mov
cmps
push
and
sbb
add
(bad)
sub
dec
sub
aas
loopne
sbb
push
xor
inc
inc
jg
push
xchg
push
xor
fmul
push
jle
xor
imul
xchg
sbb
cmp
mov
push
fldcw
push
pop
cmc
(bad)
push
xchg
out
(bad)
or
(bad)
cs
in
mov
cld
std
adc
loopne
call
das
rcr
mov
pop
test
paddd
outs
jae
xor
call
repz
cmc
jge
pop
stos
inc
mov
and
jbe
(bad)
sar
add
popa
xlat
pop
inc
repnz
call
imul
add
les
push
fist
jo
jmp
mov
ror
movs
stos
test
out
or
cmp
sbb
jle
sbb
inc
inc
or
xchg
retf
out
pop
jge
dec
stos
sbb
iret
je
jns
aam
or
xchg
add
and
dec
or
push
daa
inc
imul
loop
sub
or
lds
push
push
cmp
int3
hlt
ret
pusha
pop
pop
pop
fadd
into
cmp
jo
add
hlt
outs
xor
ret
mov
push
jmp
clc
out
jne
mov
sub
mov
aaa
push
imul
mov
(bad)
loope
mov
add
pushf
repnz
push
pop
adc
int
data16
jbe
lods
sbb
mov
mov
sub
mov
push
pop
push
int
cmp
xor
mov
stos
fwait
mov
pop
int
jecxz
ret
stc
out
push
movs
punpckhbw
xlat
sub
sbb
pop
ins
adc
aaa
or
gs
and
mov
gs
sbb
aas
inc
xlat
mov
cmp
or
clc
adc
add
or
sbb
in
inc
mov
mov
dec
idiv
or
loop
mov
push
mov
jae
sti
xor
outs
stc
pop
mov
in
sub
cmps
jae
dec
shr
icebp
and
pop
mov
mov
movs
or
xor
icebp
enter
sub
adc
int
sbb
inc
ret
pop
or
(bad)
fisubr
xchg
xor
xchg
cmc
pushf
cmps
mov
or
mov
popa
jae
adc
outs
push
or
pop
jne
scas
push
cmp
sbb
arpl
cmps
push
cdq
cdq
loopne
mov
out
ficomp
and
cmp
jne
pop
ins
loope
test
repz
xchg
(bad)
out
adc
iret
xor
pop
scas
pop
shl
scas
test
loope
sbb
sub
inc
out
(bad)
loopne
mov
repnz
ja
adc
cs
bound
xchg
jo
fisubr
xchg
mov
outs
inc
out
icebp
jbe
mov
mov
jb
adc
xchg
jno
data16
jmp
mul
es
fbstp
push
mov
sbb
loop
push
pop
repz
mov
jmp
push
mov
jne
jo
or
aas
pop
test
pop
mov
lea
out
ja
scas
mov
or
xor
jmp
pop
std
(bad)
mov
fucomi
xchg
ins
outs
out
ins
add
popa
or
fs
pushf
cmp
cmc
jo
or
dec
vandnps
ret
adc
inc
shr
xlat
std
sbb
dec
in
loope
sub
ins
sub
jge
pop
out
into
and
inc
cmp
and
fisubr
ins
lock
jge
cmc
leave
(bad)
hlt
ret
inc
inc
sub
inc
repz
adc
stos
jp
jl
ret
jb
xor
rcr
xor
jbe
lea
aaa
jge
jae
out
adc
xor
clc
dec
test
or
and
int3
pop
xor
xchg
in
or
xchg
stos
xor
add
jle
sub
mov
push
inc
loope
mov
inc
mov
mov
test
aam
clc
add
pop
sbb
stos
push
loop
mov
into
cmp
fisttp
lahf
test
pop
dec
cmps
(bad)
out
retf
jb
dec
dec
and
mov
mov
push
cmp
pop
jmp
jo
ret
xchg
bound
iret
mov
and
mov
mov
xor
dec
cmp
xchg
push
in
imul
movs
cmp
xchg
rcl
mov
or
scas
cmps
das
sbb
mov
pop
or
xor
dec
enter
push
(bad)
mov
scas
scas
mov
push
dec
test
ins
add
call
std
out
xchg
imul
lahf
(bad)
pushf
mov
jno
cmp
xor
pop
loope
test
xchg
sbb
inc
inc
(bad)
hlt
stc
ret
or
js
mov
xchg
push
mov
loope
ins
push
cmps
(bad)
or
xchg
sahf
mov
and
shl
push
in
mov
dec
cli
mov
xor
(bad)
fisttp
push
pop
fimul
imul
pop
mov
xor
sbb
pop
pop
imul
ret
scas
cmp
mov
cmp
imul
rol
jecxz
push
mov
mov
rcl
in
ss
sub
clc
neg
sahf
jle
xor
mov
outs
fdiv
aaa
add
mov
lahf
jb
(bad)
les
mov
test
push
adc
test
es
mov
dec
mov
xchg
add
or
dec
jb
inc
inc
dec
pop
sbb
das
push
daa
movs
movs
scas
stos
sar
xchg
jnp
rcl
out
push
ret
jo
rol
cmp
std
jno
aad
mov
xchg
mov
bound
call
or
push
test
mov
test
xchg
mov
sub
sbb
jns
push
ficomp
(bad)
sbb
test
je
xchg
in
pop
enter
inc
ins
mov
mov
mov
or
jl
cmp
or
call
jbe
mov
sti
mov
das
push
fstp
scas
push
push
stc
(bad)
mov
mov
(bad)
stos
push
in
cmps
ja
inc
clc
mov
bndldx
scas
test
out
movs
sub
pop
jbe
shr
sbb
inc
jae
fwait
dec
cli
scas
iret
fs
lock
stc
mov
or
mov
call
fisubr
mov
std
lds
gs
fdivp
add
in
jo
je
pop
inc
inc
pop
xchg
mov
inc
add
lahf
jno
dec
clc
mov
jmp
call
cmp
sub
or
push
pop
push
in
add
repz
call
mov
fist
mov
or
cmp
popa
mov
int
repz
adc
call
mov
fidiv
push
imul
push
mov
movs
mov
mov
fisubr
mov
xlat
xor
bound
int3
dec
es
popa
cmc
dec
cmc
cmp
mov
jb
enter
push
add
cmps
imul
pop
sub
mov
adc
dec
pop
stc
loope
dec
or
xlat
dec
xlat
inc
cmp
xor
jg
xchg
mov
jnp
inc
inc
int3
jecxz
popa
sar
cwde
in
mov
sbb
ja
push
shl
fdivrp
add
fimul
pop
xchg
xor
leave
push
imul
xor
jnp
pop
push
adc
push
(bad)
jmp
dec
retf
mov
dec
sti
jae
test
jno
dec
aas
pop
cmp
rcr
jbe
inc
xchg
into
leave
call
sbb
add
xchg
addr16
(bad)
fldcw
rcl
pop
sub
or
mov
out
retf
pop
inc
fisttp
mov
inc
cmc
call
outs
or
aad
cmps
add
pop
dec
pop
push
adc
shl
sahf
xlat
add
jnp
xchg
out
jno
aad
xor
push
push
sahf
es
sar
dec
xchg
adc
call
lahf
xor
mov
add
jno
jae
dec
xor
jns
(bad)
pusha
mov
lods
sub
mov
and
adc
(bad)
shl
cld
movs
pop
popa
and
rcr
ins
ins
call
js
sub
call
mov
fidiv
xor
ds
inc
push
outs
mov
fnstcw
data16
sbb
xor
sub
xchg
mov
inc
ins
inc
cmps
out
imul
loope
pop
pop
bnd
mov
out
push
stc
pop
fstp
push
loop
ficom
xor
push
or
repnz
test
stc
in
or
dec
clc
xchg
xor
ret
push
cli
out
leave
jb
lods
mov
mov
jmp
and
xchg
mov
cdq
dec
imul
movs
jge
mov
mov
daa
sahf
test
js
push
pop
mov
imul
lods
adc
cli
pop
mov
xchg
adc
mov
cli
hlt
aad
lods
daa
lock
push
ret
and
test
push
ret
dec
daa
retf
sub
xchg
sahf
aam
inc
cwde
clc
and
mov
test
shl
add
dec
dec
cdq
movs
(bad)
sbb
fdiv
es
dec
xchg
sahf
xor
fimul
rol
leave
scas
hlt
icebp
addr16
test
mov
stos
xor
mov
cdq
ffree
ins
ss
fnstcw
out
gs
ins
retf
mov
push
pop
hlt
popf
inc
push
data16
(bad)
sar
xor
call
sbb
ret
mov
push
ins
cdq
push
cmp
(bad)
not
adc
cmp
dec
popf
sub
pop
adc
icebp
mov
mov
cmps
into
xchg
js
jp
pop
push
jmp
imul
mov
fild
das
dec
(bad)
aas
inc
sar
retf
pop
fistp
sub
pop
xchg
mov
inc
sbb
mov
adc
es
jmp
and
mov
test
das
and
jno
jg
outs
icebp
jmp
add
mov
or
rcr
jns
jnp
jmp
mov
mov
test
(bad)
sti
mov
ja
and
and
popf
or
xor
or
aad
fs
mov
inc
push
sbb
adc
cli
lds
inc
test
in
push
mov
test
rcl
lds
push
cmc
into
mov
inc
dec
pop
mov
pop
stos
fwait
inc
pop
pushf
popf
test
nop
mov
out
xchg
cmps
inc
mov
mov
mov
into
out
pop
neg
movs
das
xor
sbb
pop
(bad)
push
and
xor
rcl
sub
ffree
pop
repz
mov
sti
cld
jo
cld
movs
inc
mov
ficom
sub
cld
xchg
pushf
scas
or
cwde
ret
dec
ror
int3
pusha
and
cmps
inc
pop
into
neg
leave
rcr
mov
jb
mov
bnd
and
int
test
pop
jb
in
jmp
cmp
mov
pop
cmp
and
pop
xor
sbb
inc
in
sub
fiadd
ins
mov
push
mov
out
dec
inc
mov
sub
xchg
push
push
ins
mov
sbb
ret
jns
retf
test
inc
enter
jo
push
add
fwait
dec
(bad)
movs
mov
fsub
xchg
or
pop
cli
mov
and
(bad)
sub
nop
xor
daa
push
(bad)
sub
mov
repnz
pop
fisttp
adc
xchg
jo
rol
or
or
mov
cmps
dec
fnstsw
sbb
xor
(bad)
add
xchg
pop
xor
in
fld
ja
scas
int
cwde
rcr
pop
and
pop
mov
jge
(bad)
(bad)
jb
sub
mov
sbb
out
mov
ret
cmp
jg
stos
loopne
pop
dec
cmps
sub
popa
dec
test
retf
iret
ficom
xchg
mov
mov
movs
xchg
push
push
lods
ins
popf
sbb
jo
or
lds
imul
dec
pop
mov
and
(bad)
push
(bad)
jecxz
cmc
or
fs
jb
and
xchg
jmp
stos
mov
mov
pop
pop
push
addr16
sbb
mov
stos
fbld
mov
sahf
imul
mov
mov
xor
mov
sub
adc
popa
sub
xchg
cmp
aam
popf
scas
pop
mov
je
xchg
mov
out
test
inc
lock
out
jae
jmp
ins
inc
arpl
inc
jb
sbb
fild
loopne
lods
dec
sub
mov
in
jmp
data16
push
mov
lea
inc
aas
push
xchg
and
dec
retf
sbb
jmp
fisttp
dec
cwde
and
pop
pop
sub
push
(bad)
call
and
cmp
xor
popa
out
cwde
mov
sbb
rcr
sbb
push
push
fstp
fprem1
test
mov
pop
add
arpl
gs
mov
mov
mov
cmp
in
adc
xchg
int
dec
sbb
les
ret
push
retf
iret
mov
jle
sti
aam
xor
pop
jp
pushf
adc
add
inc
dec
dec
xchg
inc
and
sub
test
fist
pop
out
js
xchg
cwde
popa
test
test
mov
outs
push
in
push
test
pop
arpl
loope
inc
inc
and
mov
cmp
loopne
dec
dec
aaa
mov
dec
push
push
add
sbb
mov
shl
scas
jecxz
dec
das
bound
xor
pop
jne
xor
jl
pop
stos
repnz
mov
cmps
mov
(bad)
mov
(bad)
xor
fnstenv
mov
xlat
mov
pop
loopne
enter
out
pop
movs
pxor
mov
and
cs
inc
sub
and
mov
repz
pop
dec
lock
cli
std
adc
(bad)
mov
sbb
adc
or
add
aas
adc
in
inc
and
xchg
cmp
test
add
pop
nop
stos
enter
or
icebp
fisub
xor
nop
ins
in
pop
loope
fistp
push
test
adc
cmp
xor
push
mov
xor
movs
push
je
and
mov
sbb
imul
pop
add
pusha
cmp
fucomp
loopne
cmp
and
jns
enter
out
inc
nop
adc
stos
out
addr16
out
loope
xchg
xchg
adc
jbe
loopne
jns
pop
jne
xor
out
add
test
cdq
push
jecxz
(bad)
push
mov
xchg
retf
mov
sbb
test
mov
mov
mov
bound
call
push
xchg
adc
jl
xlat
xor
aas
xor
cs
scas
cmps
mov
test
(bad)
jecxz
popw
loope
cmps
mov
sub
xchg
outs
les
sub
mov
mov
push
loopne
sub
and
xchg
fcmovnb
scas
cmc
xchg
mov
push
ds
push
(bad)
jmp
cs
shl
out
jmp
cmp
out
cmp
arpl
imul
pop
dec
sub
dec
jmp
das
adc
imul
aad
sbb
loope
xchg
(bad)
jp
mov
iret
dec
mov
aam
xchg
in
mov
dec
psllq
lods
jb
add
cwde
fstp
shl
pop
cmp
es
in
xchg
push
(bad)
mov
push
jb
mov
stos
arpl
popf
jmp
xchg
add
lock
(bad)
sbb
and
mov
mov
pop
dec
jo
scas
ficomp
and
dec
loopne
in
popa
stos
hlt
int
pop
mov
push
inc
inc
push
dec
gs
push
xchg
cmp
pop
retf
mov
mov
loop
add
or
sbb
pushf
mov
adc
mov
int3
lds
paddusw
inc
jl
sub
xor
push
outs
adc
fcomp
scas
ss
mov
outs
mov
xchg
out
pushf
and
les
test
push
and
ret
aad
jmp
xor
inc
jmp
es
sbb
out
push
adc
cmp
push
push
jno
or
add
mov
xchg
inc
add
mov
out
push
ins
push
repnz
dec
or
jg
int3
stc
stc
fs
mov
sub
xor
stc
fucom
fsub
inc
pusha
mov
xchg
add
sub
cmps
cmps
mov
test
mov
out
in
jne
in
rep
xor
mov
push
inc
sti
(bad)
adc
ror
rol
pop
push
lods
mov
(bad)
pusha
mov
hlt
aam
sbb
xchg
shl
lahf
aas
in
mov
test
dec
(bad)
test
pop
push
push
fnstcw
js
jae
cli
adc
xor
imul
adc
add
(bad)
into
mov
lock
stos
enter
mov
mov
cs
mov
cld
mov
cld
xchg
jnp
inc
xchg
not
sahf
add
and
dec
(bad)
popa
push
leave
dec
xor
dec
(bad)
paddusb
cmps
jo
pop
xlat
mov
stos
add
ss
pop
std
pop
push
or
sbb
jl
push
mov
adc
pushf
push
repz
cmp
(bad)
fcomi
retf
jl
xor
lahf
cmps
int
inc
dec
sahf
sar
pop
test
in
pop
loope
dec
arpl
rcl
and
pushf
cmp
sbb
mov
xor
js
or
push
clc
and
fsub
hlt
add
clc
xor
pop
jns
mov
stc
test
or
in
adc
cmp
mov
jae
mov
sbb
std
mov
sbb
jbe
dec
(bad)
add
ins
mov
mov
outs
(bad)
mov
inc
mov
mov
add
lods
jmp
cmp
cld
dec
xchg
and
jnp
rcl
mov
dec
or
ret
add
dec
sti
cld
push
jo
add
cwde
rol
fidiv
fcmovne
neg
mov
pusha
clc
nop
cdq
outs
leave
es
inc
movs
mov
enter
jge
push
fist
sub
jmp
push
gs
imul
shl
push
call
or
jp
ins
cmp
repnz
retf
dec
adc
out
jmp
lea
add
fstp
pop
fsubr
jg
xor
xor
fild
ins
sar
sub
jl
jg
mov
xor
jne
cmp
pop
lods
repz
(bad)
adc
mov
and
xchg
gs
inc
(bad)
movs
push
dec
das
retf
xlat
sub
ss
mov
xchg
adc
xchg
push
jmp
or
dec
call
pop
aad
(bad)
out
mov
or
pushf
pop
push
aad
mov
add
mov
cs
mov
and
mov
add
call
(bad)
cld
xor
or
or
jecxz
xchg
loopne
out
iret
pop
jle
xchg
dec
enter
xchg
aaa
mov
mov
pop
sub
aaa
mov
pop
jae
xchg
mov
(bad)
mov
fst
loope
loope
ret
test
dec
shl
ins
mov
popa
and
aad
add
ds
cmps
cmps
jg
scas
mov
dec
add
sub
imul
xor
or
jmp
mov
or
xor
add
cmps
dec
loope
sahf
gs
retf
loop
lds
movs
scas
std
lods
cwde
pop
ror
std
inc
loopne
arpl
and
mov
fmul
scas
das
xchg
xchg
mov
cdq
bound
or
mov
arpl
mov
int
add
xchg
cmps
pop
call
pop
int3
inc
jge
mov
ss
cmp
adc
das
adc
aam
mov
push
adc
pop
test
sub
cmp
loop
ret
pop
jl
jno
add
frstor
adc
(bad)
(bad)
fild
sbb
mov
or
data16
inc
xchg
dec
loopne
push
push
jae
idiv
test
jp
or
mov
in
(bad)
mov
jp
mov
out
or
sar
or
sbb
add
push
xchg
pop
sub
mov
shl
loope
xor
rcr
jno
into
arpl
(bad)
and
aad
(bad)
shl
out
inc
ins
pop
cld
fdivr
sub
in
clc
into
in
pop
ja
scas
enter
ficom
jmp
sbb
clc
cmp
mov
test
pop
mov
add
push
iret
loopne
ins
out
add
mov
mov
sti
fsubrp
mov
imul
call
es
in
cmp
dec
dec
imul
cs
or
ror
push
in
mov
retf
dec
mov
test
in
push
add
adc
push
adc
jg
ss
std
jecxz
push
xor
pop
cmp
mov
or
sahf
(bad)
(bad)
outs
push
aaa
lds
cs
imul
push
add
inc
dec
jecxz
call
xor
daa
push
push
nop
or
ror
clc
cld
into
and
or
retf
push
adc
jno
popf
nop
dec
mov
aas
test
(bad)
out
dec
imul
iret
es
cwde
or
push
pushf
int3
mov
or
fwait
mov
rol
dec
mov
mov
mov
xor
push
aad
push
adc
pop
scas
(bad)
push
aad
leave
clc
(bad)
int
dec
test
dec
mov
fidivr
(bad)
retf
push
scas
ins
int
fs
jle
rcr
jmp
inc
gs
add
sub
ficom
or
or
dec
imul
fsub
(bad)
push
pop
out
loop
retf
fwait
cmp
push
pop
add
out
and
xchg
and
mov
push
push
pop
nop
push
fcmovnbe
jno
or
adc
out
sahf
hlt
sbb
mov
movs
outs
movs
retf
sar
mov
and
shl
and
cwde
ja
sub
(bad)
scas
cmps
test
xor
(bad)
xchg
push
lea
scas
sahf
mov
out
(bad)
sub
leave
fistp
sub
push
dec
ins
push
mov
inc
daa
push
or
jmp
mov
cld
repnz
cs
mov
mov
mov
stos
inc
pop
push
cwde
mov
sbb
mov
lds
mov
push
inc
sbb
xor
jnp
add
xchg
jae
mov
iret
add
jne
cmps
ficomp
mov
stos
je
test
mov
jns
fstp
repnz
retf
jo
jae
retf
inc
call
es
push
push
aam
in
cmps
jmp
push
into
lods
test
ins
in
leave
iret
addr16
jo
test
ror
adc
cmp
(bad)
in
ret
cmp
enter
pop
(bad)
pop
pop
push
xchg
aas
inc
sbb
and
push
and
dec
xor
fild
mov
or
aad
sbb
test
lahf
cmp
pop
mov
cdq
jb
pushf
mov
popf
loopne
cmp
mov
bnd
cmp
std
sahf
or
mov
mov
js
in
jg
jnp
fwait
push
iret
mov
daa
pop
cwde
push
sub
jno
mov
sbb
jmp
cli
(bad)
(bad)
jg
int
add
fsubp
aad
sub
enter
dec
sub
mov
push
and
aam
ror
aaa
ja
popf
dec
scas
jle
imul
repnz
cmp
mov
add
jl
fsub
out
jbe
not
mov
sub
inc
push
repz
inc
in
push
lds
fxch
sub
mov
add
and
sub
fdivrp
dec
xchg
xlat
loopne
data16
inc
mov
(bad)
into
sbb
pop
scas
aad
test
push
repz
and
adc
in
inc
push
xchg
(bad)
sbb
scas
imul
xchg
pop
mov
(bad)
dec
fld
retf
ror
fst
and
and
mov
mov
push
fmul
cmps
mov
or
outs
sub
push
jne
xor
push
jmp
arpl
dec
push
xchg
(bad)
int3
and
mov
stc
dec
adc
pusha
pushf
sar
jo
adc
popa
adc
cld
sbb
jmp
or
push
icebp
mov
jae
cmps
jbe
sub
inc
sbb
push
inc
push
sbb
popa
pop
imul
push
push
(bad)
icebp
cmc
add
(bad)
(bad)
jge
xor
div
fidiv
mov
fst
fimul
jecxz
sub
push
adc
ins
mov
imul
sub
lods
or
xchg
mov
fucomi
jle
imul
ins
jmp
inc
shl
scas
sbb
aaa
in
adc
popa
sub
fxch
sbb
fcmove
mov
mov
out
mov
lahf
mov
xchg
and
scas
mov
aaa
mov
lock
mov
sbb
xchg
fstp
or
das
jo
mov
mov
sbb
mov
dec
jns
dec
jnp
sub
sub
(bad)
movs
xor
lods
sub
iret
mov
aam
stc
ja
and
js
ficomp
or
mov
xor
add
rol
les
in
xor
mov
pop
jg
retf
add
std
retf
(bad)
ds
and
inc
add
stos
out
sti
pop
or
jg
loope
xor
(bad)
mov
ja
idiv
jge
push
mov
pop
adc
test
mov
imul
cmp
cmps
scas
dec
cmp
sbb
inc
retf
fdivr
mov
cdq
jmp
fadd
xchg
in
xor
(bad)
jg
mov
imul
xchg
addr16
jo
push
int
add
stos
jl
jne
stos
add
arpl
dec
dec
dec
movs
arpl
mov
cmp
xor
xchg
(bad)
imul
mov
stc
mov
cmp
addr16
jle
shl
retf
pop
xlat
lock
sub
pop
pop
nop
std
in
call
or
push
mov
mov
ret
scas
mov
int3
inc
xchg
add
call
push
jge
nop
imul
cmp
rcr
adc
jl
sub
pop
fcom
shl
pop
or
cld
scas
cld
adc
or
sub
sbb
xchg
adc
jge
xchg
dec
je
fwait
jle
cs
pop
out
icebp
int
int
(bad)
or
ficomp
sbb
add
fstp
sbb
cmp
mov
jae
retf
push
add
sbb
clc
lock
lock
mov
push
cmp
mov
add
pop
js
cmps
or
add
cwde
push
outs
add
inc
xchg
imul
sbb
mov
or
mov
mov
(bad)
fwait
xor
sbb
mov
lods
dec
scas
mov
xchg
inc
and
addr16
int
xchg
inc
jnp
inc
push
sbb
mov
adc
nop
mov
imul
leave
stos
sbb
sbb
mov
xor
jge
popf
jmp
retf
sub
je
pop
pop
push
nop
adc
call
dec
push
push
das
movs
movs
jg
stc
cmp
inc
pextrw
mov
mov
or
call
xor
cs
inc
sbb
cld
popa
(bad)
iret
sub
or
adc
xor
or
scas
(bad)
mov
mov
js
arpl
jmp
inc
inc
iret
pop
jno
lock
pop
mov
mov
sbb
cli
push
pop
add
out
and
int3
jecxz
(bad)
pop
push
imul
lea
push
and
int3
sti
pop
push
mov
outs
rep
loope
cmps
xchg
fcomp
pusha
out
ds
not
out
jo
xor
fild
jge
repz
movs
xchg
jecxz
cmps
mov
idiv
ins
es
scas
daa
jnp
xchg
jnp
fild
dec
std
cwde
sbb
inc
sbb
icebp
mov
jbe
loope
loop
call
lock
mov
cwde
mov
fwait
xchg
jge
in
sub
lods
(bad)
jmp
and
arpl
fwait
iret
(bad)
rcr
sbb
mov
inc
popa
mov
jo
jecxz
dec
or
(bad)
mov
and
ds
mov
not
(bad)
aam
push
push
rol
shl
outs
retf
or
jnp
fucom
cmps
out
test
cwde
adc
repnz
mov
cdq
fsub
push
stos
xor
ins
pop
mov
jb
and
mov
sbb
lahf
lds
test
call
add
mov
bound
mov
ret
jmp
lea
pushf
add
sub
xchg
popa
push
add
ss
jg
and
dec
fisub
(bad)
xlat
xchg
mov
dec
mov
(bad)
pop
mov
sbb
xchg
fdiv
mov
les
shr
loope
push
cwde
sar
push
xchg
xlat
pop
mov
mov
xor
leave
aaa
or
add
adc
dec
push
push
mov
inc
mov
popa
je
xchg
call
xchg
mov
xchg
das
mov
pop
mov
push
in
fadd
push
jbe
add
into
mov
add
mov
xchg
pop
pop
jbe
or
dec
sub
leave
shl
cdq
fs
add
jle
and
cmp
inc
in
(bad)
xchg
push
jmp
add
loopne
and
cmps
fdiv
fisttp
or
push
popf
add
repnz
cmc
mov
push
xchg
and
pop
dec
adc
(bad)
inc
xchg
sub
inc
add
aaa
jl
mov
or
adc
mov
aaa
push
les
push
mov
mov
jbe
cmps
push
sub
(bad)
fld
jae
sub
cmp
xchg
mov
scas
add
aaa
inc
mov
sub
xchg
or
xchg
inc
bound
xchg
imul
iret
and
stos
jnp
add
ret
xchg
push
mov
outs
xchg
push
sub
dec
in
ins
dec
stc
test
(bad)
jb
not
add
inc
ds
cmp
mov
inc
pushf
xchg
or
stos
cmps
xor
mov
jno
mov
push
shr
fist
push
mov
inc
in
(bad)
les
add
idiv
dec
std
das
shl
popw
xor
xchg
push
xor
pop
aam
mov
mov
sbb
mov
pop
out
jno
mov
inc
or
fild
adc
sar
sub
loopne
mov
outs
cdq
pop
dec
ins
pop
shl
jg
sbb
idiv
add
loop
sbb
std
outs
ss
test
lds
ret
(bad)
bound
and
out
cmpps
out
mov
(bad)
xchg
out
inc
inc
clc
scas
std
add
xchg
add
push
sub
mov
movs
stos
add
(bad)
aad
cmp
mov
int
clc
mov
xlat
jl
mov
hlt
sub
es
out
iret
ins
inc
inc
into
into
sbb
dec
ret
fwait
sbb
pushf
mov
retf
pop
add
call
scas
imul
inc
test
or
add
outs
xchg
cld
jle
xor
pop
mov
sub
or
les
out
and
cmps
or
arpl
movs
mov
mov
repz
fst
push
xchg
dec
push
lds
mov
xchg
in
and
out
push
stos
inc
add
jg
inc
icebp
xor
inc
mov
mov
push
retf
mov
cwde
cmp
int
mov
inc
push
mov
jg
(bad)
out
daa
dec
iret
push
cmp
pusha
sbb
jle
inc
aad
inc
xor
jbe
cld
push
mov
loope
test
xchg
mov
jge
jne
cmps
mov
fistp
dec
sub
clc
and
push
inc
sub
mov
cmps
lea
imul
jne
mov
cmc
fs
lods
shl
adc
mov
mov
sbb
jnp
hlt
rol
out
mov
ins
retf
int3
add
mov
cmp
push
repnz
push
pop
fimul
or
jmp
outs
pop
cmps
push
test
cmp
cmp
mov
adc
call
adc
mul
add
vmwrite
test
shl
xchg
sbb
test
mov
xchg
lds
sbb
xchg
cmp
movs
sahf
hlt
or
jge
pop
out
mov
lock
cmp
mov
sub
sbb
or
mov
jnp
dec
and
ds
dec
push
sub
dec
add
push
push
cli
cli
out
dec
pop
add
(bad)
bound
scas
or
pop
and
retf
cmps
stos
mov
(bad)
jns
adc
pusha
sbb
je
lods
mov
in
aam
int
pop
lock
dec
sub
jbe
fadd
idiv
adc
addr16
clc
ss
adc
sub
test
pop
jae
mov
(bad)
outs
adc
repz
out
(bad)
stos
cmc
dec
xchg
idiv
xlat
outs
(bad)
fdiv
repnz
and
pop
jge
xchg
sar
outs
mov
in
pop
stos
mov
jb
and
mov
sub
sub
push
add
call
out
ja
xor
push
cmp
fldenv
cmp
mov
sub
jno
out
mov
push
and
pusha
mov
mov
aad
jns
sbb
mov
push
imul
dec
inc
xchg
mov
push
fst
add
in
fs
jle
pop
fdivr
jecxz
adc
lea
inc
gs
sub
or
add
out
xchg
cld
inc
cmp
and
push
ror
scas
scas
daa
fidivr
add
int
(bad)
push
and
cmps
or
jnp
xchg
add
sbb
or
inc
(bad)
jno
inc
push
sbb
ss
(bad)
xchg
xchg
and
mov
pop
int3
pop
push
neg
add
jg
jae
adc
or
inc
and
movs
pop
add
push
jne
retf
dec
sti
inc
xchg
nop
xchg
sub
(bad)
dec
sahf
cmovl
add
aas
icebp
adc
jge
movaps
bnd
push
lods
pop
xchg
stos
xor
sbb
retf
pop
inc
add
mov
and
lahf
in
xlat
xor
mov
(bad)
(bad)
push
xchg
add
and
or
cmps
add
cmp
das
aas
es
adc
and
mov
inc
ja
sbb
xchg
scas
sti
les
adc
pextrw
loop
pop
jbe
push
or
sti
jmp
adc
xor
sbb
mov
rol
jns
push
xchg
and
out
out
sbb
jl
loop
(bad)
jmp
(bad)
fistp
mov
jmp
xor
je
addr16
push
fisub
and
cld
in
pop
es
popf
jmp
xacquire
movs
add
push
je
mov
clc
in
push
ins
out
repnz
sbb
into
and
mov
mov
jmp
mov
mov
out
mov
fcomi
cmps
and
jae
not
dec
fs
mov
push
sub
enter
imul
jno
test
inc
or
stos
in
dec
or
or
sbb
mov
inc
ror
jg
mov
and
mov
popa
and
pop
ror
aad
pop
stos
fbstp
and
stc
(bad)
outs
jecxz
mov
aas
push
(bad)
movs
push
sub
mov
gs
and
sub
adc
fistp
xchg
test
dec
pop
xor
mov
mov
cmc
sbb
fild
ins
arpl
jmp
mov
mov
scas
div
sub
iret
in
int
cld
xchg
cld
inc
jae
cs
popa
sbb
cdq
dec
scas
stos
push
outs
test
xchg
cdq
dec
in
pushf
lods
repz
add
dec
pop
cmp
xchg
enter
fwait
mov
jnp
xchg
pop
jp
mov
or
sub
cwde
repz
push
scas
ret
mov
shr
(bad)
xchg
lods
add
scas
call
push
repnz
jmp
sub
repz
pop
pop
cmp
adc
sbb
mov
xor
add
out
mov
stc
xor
jno
adc
xchg
push
ss
xchg
or
ds
sub
test
or
dec
or
ja
js
cmc
push
cmp
add
xor
sub
sbb
mov
repz
in
xor
jo
xchg
mov
(bad)
mov
lock
push
mov
inc
mov
push
or
loop
and
and
aaa
push
fwait
mov
ret
(bad)
push
(bad)
adc
imul
jmp
pandn
shl
mov
fnsave
aas
add
push
fdiv
mov
push
ror
repz
sbb
movs
add
cwde
push
lea
add
xchg
cs
push
nop
inc
rol
test
dec
test
jp
loop
sar
popa
sub
sar
dec
aas
sub
pop
adc
stos
mov
in
mov
pusha
sbb
shl
jg
cmovno
pop
mov
rcr
push
out
add
cmp
fisttp
jmp
test
lods
scas
push
dec
or
adc
inc
sub
jmp
je
xor
push
mov
mov
inc
add
mov
inc
ds
mov
nop
lea
leave
jae
fmul
mov
out
and
out
out
sbb
mov
xchg
and
fdivr
jo
out
xor
pop
cld
lods
cvttps2pi
data16
fdiv
or
dec
shr
ror
in
aas
sbb
inc
sahf
and
and
add
mov
sub
and
jo
or
dec
and
retf
dec
inc
shl
repnz
mov
out
cld
mov
les
pop
jnp
sub
dec
cmp
outs
cdq
adc
loope
ror
xchg
into
shl
dec
dec
retf
push
rcr
test
cmp
sbb
or
fs
loop
jg
push
inc
sub
jns
cwde
stc
xchg
(bad)
loopne
lea
jae
(bad)
in
in
mov
or
add
mov
outs
push
lock
xchg
outs
mov
(bad)
js
dec
jl
and
add
leave
cmps
and
dec
pop
pop
jnp
dec
neg
outs
inc
fist
mov
mov
aas
inc
jmp
aaa
sub
jbe
out
or
xchg
bound
pop
push
adc
adc
cmp
jno
pop
jle
mov
adc
mov
int3
rcl
movs
pop
push
movs
inc
add
xchg
inc
jbe
mov
adc
sub
mov
push
push
leave
dec
aad
push
pusha
cmp
data16
cld
sub
pop
pusha
js
pop
sub
cs
outs
sbb
movs
jns
add
and
jecxz
sar
int3
pop
test
popa
push
cmps
sbb
repz
jl
dec
je
adc
les
test
cmp
btc
push
das
add
adc
xor
cmp
dec
scas
pop
popf
xchg
iret
shl
hlt
hlt
sub
dec
stos
add
test
sahf
repnz
jnp
adc
pusha
cwde
sbb
ins
inc
leave
int3
xchg
jmp
push
pop
fs
jecxz
mov
std
jns
fwait
add
stc
ins
test
xchg
clc
shl
in
jb
add
sub
pop
lock
pop
pop
mov
and
cmc
mov
inc
xchg
out
cmp
fdivr
xchg
js
push
aaa
jmp
mov
ins
dec
outs
cmc
inc
movs
mov
jmp
xchg
jno
mov
shl
cmc
stos
aad
ss
scas
inc
ja
test
mov
mov
add
dec
daa
daa
popa
pop
dec
push
adc
fsubr
pop
xchg
sbb
mov
inc
and
push
fwait
cmp
data16
loop
inc
fnstsw
mov
fistp
pop
je
xor
adc
lock
into
adc
inc
inc
std
outs
sahf
fs
in
data16
jno
pop
pop
in
bound
inc
stos
sub
sahf
std
lahf
in
inc
mov
jg
sub
push
sahf
dec
jae
sub
jno
push
arpl
and
xor
popa
pop
fwait
push
ret
ins
sti
cwde
xor
jno
dec
xor
dec
cld
stos
test
ins
sub
fwait
ins
inc
shr
movs
imul
stc
jnp
mov
mov
pop
cmp
shl
mov
(bad)
pop
add
xchg
pop
add
ins
popf
fisttp
xchg
leave
mov
xor
popf
mov
loop
jbe
xchg
sub
sub
pop
scas
test
(bad)
inc
hlt
jmp
imul
xchg
daa
or
shl
and
daa
mov
sub
push
out
push
sbb
es
fs
rcl
xchg
addps
mov
test
int3
scas
dec
cmc
pop
adc
jecxz
loop
into
scas
outs
stc
cmp
mov
mov
arpl
xor
outs
or
jmp
mov
cmps
lods
call
pop
test
lds
jbe
mov
shl
xor
and
sti
jg
popf
push
popf
rcr
mov
in
fwait
in
adc
dec
sbb
mov
cmp
sub
inc
loope
fild
fiadd
repz
cmc
cld
enter
pop
add
(bad)
push
mov
int
(bad)
pop
xchg
aas
(bad)
pop
enter
sub
lock
pusha
xor
push
xchg
jecxz
clc
hlt
sub
jecxz
push
leave
jae
fdivr
je
outs
mov
adc
add
xor
pop
xchg
sub
add
dec
imul
xchg
sti
rcl
fidivr
arpl
xor
sahf
cmp
push
pop
jmp
mov
dec
sqrtps
fistp
cmp
cmp
and
push
mov
cmp
imul
pusha
xchg
icebp
add
pop
ins
gs
jnp
in
hlt
test
adc
add
imul
inc
inc
int3
fisttp
pushf
daa
sbb
icebp
test
in
sar
xchg
cld
imul
rol
arpl
gs
xchg
(bad)
aam
ja
add
retf
test
mov
and
mov
push
movs
ret
imul
das
int
retf
lds
add
sub
outs
sbb
fisttp
mov
jmp
cwde
push
(bad)
and
aam
mov
mov
mov
inc
adc
xor
xchg
xlat
fxch
sub
sbb
mov
test
inc
xchg
test
not
mov
mov
loopne
fucomi
mov
push
and
aaa
retf
int3
sbb
rcl
mov
(bad)
xchg
lods
les
dec
mov
push
adc
call
jns
jmp
add
push
mov
(bad)
push
dec
dec
jns
sti
sub
jmp
inc
sar
fsub
push
ins
aaa
outs
dec
nop
push
call
es
(bad)
cmps
lahf
sub
push
cdq
std
xlat
dec
(bad)
popf
and
arpl
xor
cwde
sub
mov
bound
cmp
and
in
sbb
int
sub
mov
push
sbb
cmp
call
pop
std
inc
fdivr
(bad)
add
fadd
add
mov
xchg
mov
push
pusha
jp
test
sub
fucomp
pop
adc
mov
aad
and
outs
push
jecxz
iret
xchg
xor
adc
clc
test
ds
loopne
cmp
cmp
inc
dec
scas
(bad)
inc
cmp
cmp
cmp
jnp
outs
shl
lahf
mov
movs
sub
dec
push
xchg
mov
add
jmp
mov
xor
daa
inc
adc
jo
xor
push
movs
rcr
sti
xchg
and
pop
call
dec
pop
jle
imul
pop
ins
dec
(bad)
adc
test
jge
sbb
pop
int3
mov
adc
jp
inc
repz
cmp
mov
mov
dec
leave
xor
cmp
lods
(bad)
ja
or
and
clc
xor
pop
sub
fdiv
arpl
movs
test
or
addr16
mov
int3
addr16
pop
add
mov
jne
sub
xor
repz
out
mov
bound
xlat
jno
adc
xor
pop
inc
mov
add
(bad)
sbb
cdq
popf
cdq
movs
clc
inc
cs
out
jno
je
jbe
push
sub
dec
(bad)
jecxz
push
sti
adc
xchg
adc
jns
fsubr
jmp
or
pusha
retf
mov
xor
cmp
adc
or
mov
daa
sbb
pop
xchg
mov
sub
popf
push
pop
mov
and
inc
push
mov
scas
sbb
push
dec
outs
into
aaa
and
jmp
popf
es
daa
fild
pop
xor
jae
out
dec
dec
test
mov
xor
cdq
xor
jo
mov
lods
and
cmp
and
aam
dec
sbb
xchg
fs
sbb
adc
mov
in
ds
inc
pop
ficom
and
jno
inc
es
test
mov
xchg
add
push
cmp
mov
pop
sub
aad
movs
cwde
lods
fld
aaa
bound
sbb
jle
jb
push
sti
xor
mov
out
jg
fstp
inc
inc
fwait
add
inc
pop
or
adc
mov
push
cs
xchg
xchg
in
aaa
(bad)
mov
fcmovb
sbb
adc
fild
pop
jbe
sub
sbb
lahf
mov
mov
js
pop
lahf
cmp
in
add
push
pushf
cwde
sbb
push
(bad)
cwde
in
and
aaa
(bad)
mov
sbb
inc
xchg
mov
push
(bad)
psllq
movs
mov
or
push
mov
push
lea
jbe
xor
into
mov
sahf
xor
pushf
xor
(bad)
cs
pop
ret
jmp
push
push
dec
je
fdivr
imul
and
int3
mov
xchg
sub
cmova
mov
mov
mov
inc
sahf
cmp
mov
ret
mov
add
push
(bad)
fsubr
sbb
jbe
fld
or
cmp
test
xchg
and
movs
xchg
adc
add
aaa
mov
leave
xchg
xor
dec
clc
fsub
ror
xor
ret
xchg
sahf
inc
ret
inc
push
jl
js
arpl
in
cwde
xor
shl
mov
in
adc
and
mov
adc
iret
jg
out
push
pop
or
add
shr
add
div
int
cmp
imul
ins
repz
out
pop
sub
and
mov
mov
shl
adc
inc
cwde
sar
push
mov
bound
les
jb
icebp
jb
jbe
mov
dec
dec
cmps
push
popa
and
into
jno
jmp
push
push
and
shr
push
in
xor
mov
div
test
jmp
mov
sub
push
sbb
call
dec
(bad)
dec
(bad)
adc
stos
fild
xlat
inc
stos
js
mov
lods
dec
into
or
inc
sub
pop
loop
adc
inc
xchg
push
movs
and
push
repz
push
shl
fild
mov
ret
outs
xchg
(bad)
xor
mov
xchg
pop
cdq
and
add
jecxz
cwde
shl
hlt
movs
sub
nop
sbb
inc
mov
sti
out
clc
adc
mov
shl
or
xor
fdivr
fsubp
ret
xchg
adc
pop
xchg
mov
arpl
(bad)
adc
imul
mov
out
cmp
push
xchg
sahf
mov
rcr
into
rol
ss
cmp
push
mov
cmp
mov
xchg
pop
jne
ins
add
inc
cmc
movs
jb
push
movs
test
mov
lahf
pushf
arpl
xor
lock
lock
or
imul
jbe
out
sbb
test
ret
sub
mov
int3
xor
jnp
imul
movs
cmp
les
mov
mov
test
pop
fwait
lds
cmp
xchg
aaa
sub
cld
xor
scas
adc
push
retf
mov
scas
dec
in
icebp
je
(bad)
pop
xchg
lds
xlat
pusha
lahf
lods
push
movs
cld
fisub
xchg
sbb
mov
or
(bad)
sub
fist
addr16
stc
scas
xchg
or
xor
xchg
jle
sub
add
div
and
dec
jno
fwait
pop
cli
loope
and
loope
mov
mov
popf
movs
fst
xchg
jnp
test
cld
stos
or
aaa
jge
dec
sbb
movs
fdivr
iret
lahf
and
ret
mov
arpl
adc
bsr
dec
adc
enter
sub
pop
or
push
js
popa
push
xor
and
fs
cmp
cmp
pop
fwait
aas
pop
jb
fucom
mov
daa
mov
xor
pop
mov
pushf
rcr
popf
loope
les
iret
addr16
add
imul
aam
xor
dec
repnz
sti
scas
push
push
xor
xor
adc
pop
neg
out
lods
punpckldq
sbb
js
fwait
lock
clc
imul
enter
mov
adc
test
sub
jno
sub
xor
and
inc
outs
sub
xchg
in
in
mov
cli
and
mov
adc
fsubr
ja
sub
or
ficom
les
cli
repz
jne
pop
ja
ja
cdq
mov
rcr
test
int3
push
inc
sbb
daa
mov
call
dec
cdq
dec
sub
pop
scas
mov
cmp
inc
cmp
movs
push
mov
mov
sahf
sub
inc
imul
inc
gs
ret
push
pop
cmps
adc
and
ds
ins
(bad)
(bad)
xchg
and
adc
jl
(bad)
add
mov
fist
mov
stos
push
fs
jle
popa
test
xor
dec
data16
(bad)
cmp
popa
(bad)
cmp
daa
arpl
sbb
test
jmp
outs
pop
dec
adc
jmp
mov
pop
dec
pop
pop
mov
pushf
adc
mov
cmc
jle
les
jae
sub
sahf
shl
mov
mov
shl
pop
mov
pop
sbb
nop
jl
add
aaa
in
pop
jg
cmps
push
pop
out
mov
clc
aaa
push
or
jmp
fwait
cwde
sbb
cmp
jle
push
ret
dec
adc
mov
mov
ja
xchg
mov
stos
adc
push
jp
mov
xor
mov
loopne
fisttp
xchg
jg
sti
and
jb
cmc
(bad)
or
ja
pop
or
ins
in
xchg
and
xor
mul
je
jle
adc
out
cmp
ins
jbe
daa
dec
aad
or
push
and
test
dec
fstp
cmp
inc
mov
jp
fwait
dec
div
cld
xchg
sbb
sub
xchg
xor
arpl
out
inc
push
stc
jle
cmp
inc
mov
ret
inc
repnz
orps
dec
cmp
aam
or
mov
inc
pop
mov
pusha
or
push
inc
cli
mov
dec
mov
xchg
jmp
mov
and
aaa
(bad)
imul
lahf
leave
adc
call
pusha
ins
repnz
int3
mov
mov
call
leave
sbb
xchg
dec
mov
mov
ss
inc
lock
push
adc
mov
cmp
lods
dec
sbb
mov
xor
fs
jo
dec
in
int
xchg
es
sar
adc
mov
add
inc
sub
arpl
sbb
inc
cwde
push
pop
fcomp
pop
pop
sbb
xlat
loop
or
loop
out
mov
sbb
mov
gs
pusha
jns
pop
outs
jl
ror
imul
idiv
push
divps
sub
test
pop
sub
arpl
pop
in
and
xchg
mov
(bad)
pushf
xor
int3
jne
out
out
xchg
sbb
jmp
bound
fcomp
sub
imul
in
pop
push
pushf
enter
les
add
popf
mov
xor
or
in
pusha
push
pop
test
imul
push
je
jno
sub
leave
js
or
xchg
lods
xor
or
in
test
in
inc
cmp
and
adc
pop
shl
and
push
inc
out
and
push
retf
mov
cmp
cmp
jecxz
in
jmp
int
and
mov
pushw
jae
pushf
loope
cmp
mov
inc
or
loop
aaa
push
mov
fist
out
retf
inc
cmps
xor
inc
sar
mov
or
mov
movs
xchg
dec
inc
fsubr
mov
stos
mov
cmps
outs
pop
mov
sbb
outs
and
sub
push
cld
hlt
dec
fidiv
adc
sub
fmul
mov
jmp
repnz
(bad)
test
lock
lock
lods
js
mov
icebp
add
hlt
loopne
or
xchg
inc
mov
dec
xor
loope
mov
and
dec
pop
push
and
xchg
jb
pop
test
std
sbb
fs
cs
mov
dec
mov
xor
or
int
(bad)
jge
repnz
xlat
jmp
out
dec
sub
push
gs
inc
or
cwde
or
xor
adc
in
jmp
jb
dec
mov
js
push
fwait
mov
cmp
or
jae
in
mov
jne
fdivr
jb
mov
inc
outs
adc
test
inc
sbb
mov
ja
push
sub
(bad)
out
test
push
pop
mov
int3
cmp
xor
mov
test
in
fs
hlt
xchg
sub
ror
adc
outs
aam
sub
gs
rcr
sub
sahf
loopne
push
inc
sbb
stos
inc
adc
std
pop
icebp
mov
xchg
loope
aas
inc
jmp
and
inc
and
lods
add
call
repz
pushf
mov
stos
(bad)
int3
das
fs
fistp
cmp
syscall
xchg
retf
mov
imul
mov
xor
fwait
xchg
arpl
push
pop
sbb
sbb
inc
and
xor
adc
imul
sub
or
mov
jge
stc
dec
dec
stos
adc
cwde
pop
lods
or
sbb
popa
or
jns
(bad)
cmp
dec
mov
sbb
xlat
fcomp
push
imul
adc
ret
dec
aaa
stos
shl
loope
fisub
dec
fwait
jbe
iret
in
push
in
pop
add
mov
dec
xor
fld
movs
aad
sub
xchg
iret
cmp
cs
jbe
lods
xor
inc
sbb
jo
dec
aad
xor
cs
jge
bound
arpl
cwde
pop
ror
push
or
sbb
pop
int3
fist
sub
lods
cmp
jecxz
cs
and
in
rcr
mov
inc
mov
mov
jne
in
scas
lods
loope
pop
pop
outs
in
xchg
xor
jge
xor
jbe
and
adc
je
xor
or
mov
and
add
add
aaa
je
jne
int3
adc
scas
adc
mov
movs
push
inc
sub
dec
push
(bad)
mov
or
adc
ins
sub
mov
pop
mov
or
sbb
mov
mov
fcomp
pop
lock
xchg
imul
mov
clc
aad
dec
aaa
inc
inc
sub
imul
lock
jmp
xor
adc
jp
test
dec
dec
pop
dec
ror
and
adc
mov
test
cs
mov
ror
and
fsubr
pop
out
mov
jl
jecxz
jle
push
fwait
or
mov
jg
push
test
push
stc
mov
mov
dec
xor
mov
cmp
jl
std
out
ds
les
sub
inc
fucomp
lods
movs
push
popf
jge
(bad)
out
adc
popa
test
mov
mov
ja
add
mov
mov
sti
inc
lahf
sbb
xchg
xor
repnz
test
xchg
sbb
fsub
xchg
loop
pop
scas
not
jmp
fbld
movs
repz
push
jbe
mov
xor
or
inc
je
inc
rcr
xor
mov
sbb
mov
sahf
dec
push
pop
in
pop
rol
fiadd
aam
mov
rol
and
xchg
sub
jmp
int3
aam
and
test
aas
sahf
sbb
fs
cmc
movs
dec
add
enter
call
in
into
xlat
xchg
mov
shl
sub
outs
pop
pop
xchg
inc
je
nop
(bad)
repz
bound
loope
xchg
add
ret
jbe
mov
leave
xor
pop
sbb
hlt
sti
jge
call
push
cwde
out
out
sbb
sti
sbb
fnsave
jne
in
rcr
mov
mov
mov
and
fwait
gs
js
cwde
imul
mov
sbb
aas
scas
mov
or
ds
dec
jne
inc
and
dec
jle
push
ds
into
jno
cmp
(bad)
dec
mov
push
push
mov
push
mov
jmp
sub
sbb
call
lock
dec
or
sub
in
in
xchg
inc
push
jg
cmp
push
jb
inc
(bad)
mov
xor
addr16
lahf
cmp
mov
mov
or
mov
xor
ror
adc
or
out
or
popa
inc
cmp
xlat
pop
jl
lods
sbb
cmp
push
mov
out
pop
test
fsub
jno
pop
cwde
add
mov
sub
rol
in
in
dec
ins
loope
sbb
xor
jns
and
fmul
push
jl
mov
and
push
or
mov
in
and
addr16
leave
jo
jle
loop
in
ficomp
add
add
push
add
cdq
pop
xlat
mov
mov
(bad)
fild
adc
cmps
repz
mov
movs
retf
mov
xor
add
dec
dec
lods
loopne
inc
xchg
retf
jmp
cmp
add
or
and
sub
jns
xchg
inc
imul
dec
add
out
aam
cmps
in
(bad)
ficomp
enter
cmp
mov
(bad)
push
imul
stos
mov
add
dec
in
out
pop
in
ret
adc
dec
jge
gs
pop
lahf
(bad)
pop
sbb
dec
and
inc
(bad)
retf
add
mov
jns
shl
loopne
push
xor
in
fsub
out
inc
test
sbb
inc
jne
jle
iret
push
into
(bad)
pop
push
sub
in
test
mov
push
mov
je
add
daa
inc
sbb
fsub
add
stos
mov
lods
mov
sbb
xchg
outs
lods
jecxz
mov
adc
leave
int3
mov
dec
arpl
fwait
lds
mov
fwait
jle
push
hlt
mov
adc
into
pop
fsubr
test
sub
shl
movs
jae
cmc
mov
stos
pop
pop
xor
or
pop
icebp
jb
fstp
dec
rcl
rol
xchg
xchg
push
xor
sti
in
adc
add
scas
cmp
jnp
imul
(bad)
fstp
sub
sahf
outs
mov
cli
mov
xchg
imul
loop
jg
shl
repz
mov
or
loope
jns
adc
mov
push
and
push
cmp
iret
cmps
sti
imul
sub
push
adc
adc
sub
mov
(bad)
lds
lods
aaa
ins
push
xor
fimul
outs
sub
push
fimul
adc
and
inc
cmp
pop
sub
mov
mov
ret
adc
rcr
xor
cmps
lea
jmp
sub
std
fldcw
pop
cmc
and
and
aad
loop
jecxz
jno
out
inc
mov
dec
add
(bad)
dec
pop
sub
mov
pop
ret
xor
pop
push
leave
inc
xor
leave
std
mov
imul
pop
cmp
(bad)
mov
push
xchg
inc
mov
in
aaa
pusha
and
sub
jecxz
ja
pop
mov
rcr
xchg
fsubr
jnp
scas
dec
in
fcomp
push
shl
cmp
mov
pop
inc
pop
psrad
or
cli
pop
pop
cmps
xchg
mov
mov
push
sub
test
leave
fwait
repnz
lock
es
movs
mov
aaa
in
xchg
mov
sets
pop
xor
xor
jns
sub
push
xchg
das
cld
and
ds
inc
jg
jnp
neg
out
inc
mov
sub
cmp
push
out
inc
mov
movd
mov
sar
out
dec
jl
fcomi
mov
arpl
ret
jns
inc
jns
pop
cmp
push
xor
inc
or
and
xchg
bound
repz
mov
sub
push
out
je
loope
rol
aad
jns
call
push
mov
mov
loop
push
gs
xchg
adc
leave
cmp
pop
jne
lock
jg
sbb
pop
adc
push
xchg
jne
or
xchg
push
(bad)
hlt
push
repz
ins
fstp
in
mov
and
stos
pop
cmp
aas
sbb
sbb
std
ror
(bad)
mov
gs
inc
retf
push
popa
mov
movs
call
sti
and
dec
cmp
ret
test
mov
mov
out
ja
mov
xor
into
inc
movs
push
nop
(bad)
cli
ds
mov
dec
push
aam
(bad)
adc
sbb
xchg
sub
aad
and
adc
sbb
sbb
out
xor
aad
stos
stos
aad
xor
aaa
or
pop
aam
ret
xor
add
retf
sahf
mov
loop
dec
es
cmp
xchg
out
mov
fs
xor
mov
pop
cmps
ins
add
(bad)
sbb
inc
icebp
fist
pop
mov
pop
pop
sub
leave
mov
ret
sqrtps
rcr
cli
test
and
and
inc
or
hlt
sti
add
jns
push
test
pop
fld
icebp
xor
repz
push
call
popf
scas
das
push
pop
sub
pop
mov
dec
mov
retf
dec
mov
popa
push
xor
xor
clc
sbb
fnstcw
sbb
sub
in
cs
mov
jecxz
repnz
push
push
mov
rol
dec
sub
repnz
call
ret
cmps
int3
(bad)
push
shl
cmp
push
cwde
in
mov
jle
test
punpckldq
xchg
adc
sub
test
imul
cmp
fst
inc
push
nop
sub
push
jno
xor
xlat
mov
ds
repz
ret
pop
push
data16
int3
dec
inc
js
push
or
bound
jg
loope
push
into
sub
sub
xchg
adc
dec
int3
mov
jmp
out
cmp
fstp
mov
push
cs
adc
or
jae
aas
mov
clc
test
or
inc
sbb
jmp
ficom
cmps
ret
arpl
loopne
rcr
je
cmp
mov
es
mov
or
add
sbb
jmp
adc
mov
outs
aad
xchg
jne
hlt
outs
xchg
ss
std
jecxz
dec
push
xor
jnp
jno
or
gs
xor
xor
shl
adc
mov
mov
inc
cmp
jge
retf
mov
xor
push
ins
push
push
loopne
(bad)
xor
or
mov
neg
lds
pop
mov
push
popf
or
sub
outs
xor
lods
cmc
mov
inc
lods
push
sahf
push
adc
pop
arpl
mov
xchg
test
fidivr
mov
clc
movs
mov
dec
hlt
test
pushf
jbe
fcmovnbe
iret
lods
sti
xlat
xor
cmp
loope
cli
popf
cmp
xor
inc
add
mov
or
mov
gs
cwde
repnz
cmps
into
cmp
in
fld
adc
xchg
ret
movups
js
fidivr
movs
clc
adc
(bad)
int3
pop
sub
fwait
inc
or
jnp
jecxz
and
movs
sub
es
mov
dec
dec
frndint
(bad)
rcr
sub
paddd
jmp
xchg
rcr
fcos
mov
test
push
imul
cli
pop
and
add
(bad)
jbe
in
outs
outs
retf
aad
(bad)
jp
es
and
mov
xlat
jecxz
dec
and
fsubr
es
adc
out
stc
inc
sub
call
in
fs
jg
sbb
cmp
dec
xchg
sar
xchg
imul
mov
mov
jbe
jns
xchg
cmp
push
xchg
popf
movs
stos
je
jmp
jnp
(bad)
dec
jmp
hlt
imul
push
in
int
cmps
push
cs
icebp
xchg
shl
mov
(bad)
mov
xchg
ret
repnz
dec
call
mov
pusha
in
mov
mov
lock
pop
sub
je
iret
data16
pop
fcomp
xor
(bad)
call
pop
mov
dec
cmp
ret
(bad)
pop
(bad)
mov
fld
cwde
cdq
sbb
enter
test
pavgb
aaa
(bad)
retf
int
je
and
les
or
adc
ret
push
pop
push
mov
call
in
mov
out
or
jecxz
scas
push
mov
movs
xchg
push
rcr
outs
fiadd
call
sbb
add
dec
xlat
js
push
dec
movs
clc
cdq
mov
(bad)
mov
pop
and
ror
push
dec
mov
jl
mov
inc
mov
sbb
clc
adc
dec
fs
cmc
dec
inc
sub
stos
cmps
aas
sbb
sbb
ds
adc
pop
mov
test
cmps
inc
jge
sub
popa
(bad)
lock
mov
mov
(bad)
jp
sbb
out
mov
mov
retf
mov
call
es
rcl
dec
fstp
lahf
out
fucomip
retf
adc
push
arpl
and
out
mov
cli
pop
repnz
(bad)
or
or
jle
enter
jnp
enter
retf
pushf
sbb
ins
dec
jb
adc
and
xor
test
retf
xor
and
push
adc
cmp
in
mov
out
dec
mov
stos
sub
jae
movs
sbb
xor
push
and
nop
jl
std
xor
bt
mov
mov
outs
popf
mov
adc
jns
ficomp
inc
int
or
inc
test
test
mov
mov
mov
in
stos
mov
retf
mov
xor
sahf
mov
jmp
xchg
cmp
arpl
mov
add
addr16
popf
pushf
out
das
xchg
xor
and
and
sbb
mov
enter
mov
mov
push
fst
jae
icebp
mov
adc
mov
xor
dec
or
and
mov
jp
jp
into
imul
into
dec
jae
adc
sub
bswap
loopne
pop
mov
cmp
jae
xchg
test
gs
pop
jle
jo
scas
mov
outs
rcr
xchg
rcl
pop
pop
push
push
cmp
xchg
daa
(bad)
popa
mov
or
push
xor
mov
out
(bad)
mov
pop
hlt
mov
mov
cmp
or
sahf
fisttp
fdivrp
xchg
rcr
popa
stc
sahf
mov
lds
mov
xor
pop
outs
fwait
adc
addr16
fwait
aad
inc
sahf
mov
inc
sub
in
fnstenv
je
rcr
lods
ss
mov
ins
pop
push
retf
pop
ins
jl
arpl
arpl
pop
inc
or
fcmovnb
jmp
stos
pop
loopne
cs
int
(bad)
clc
bound
push
mov
sub
fsub
pusha
ins
(bad)
stos
inc
in
or
sti
sbb
add
sub
xor
or
ss
inc
repnz
lods
shl
(bad)
mov
adc
aaa
mov
push
push
cli
(bad)
mov
sub
dec
call
mov
mov
xchg
mov
loopne
push
adc
cli
xchg
repnz
or
jo
ret
clc
rcl
sub
dec
push
mov
dec
inc
adc
jmp
in
sub
xchg
in
shl
jb
jp
in
adc
cld
in
xor
rcl
popf
scas
sbb
cmps
call
mov
push
push
lods
retf
sub
dec
push
sbb
dec
inc
lahf
push
pop
jns
mov
rol
or
sbb
es
arpl
pushf
jbe
ins
adc
in
sbb
stos
imul
push
pop
int
fld
xor
and
js
gs
pusha
or
aam
jnp
dec
jge
les
cmp
sti
outs
je
add
jbe
adc
push
and
outs
call
lock
int
fdiv
xor
cmp
pop
int3
and
je
call
les
and
inc
pop
sub
addr16
push
je
shr
lds
and
not
sbb
arpl
std
mov
ret
das
cmp
dec
retf
mov
jg
xchg
sysret
ror
cmp
pop
inc
outs
jmp
fwait
mov
mov
cmp
mov
inc
pop
rcr
add
lds
out
mov
sti
push
adc
adc
int3
xchg
sti
jg
cli
cld
shr
adc
in
push
sbb
or
in
push
inc
add
sub
mov
ror
stc
jle
inc
cmps
mov
imul
mov
adc
aaa
imul
cld
loopne
rcr
pop
aad
dec
adc
fsub
pop
push
mov
push
gs
mov
test
pushf
les
add
add
xor
aaa
and
stos
fdiv
fs
push
out
ins
mov
loop
sar
in
xor
lods
mov
mov
sahf
(bad)
cwde
push
add
xlat
xchg
movs
sub
ds
cdq
out
add
sbb
ror
call
ret
rcl
fs
int3
icebp
ds
lahf
clc
je
lods
inc
pop
es
clc
add
js
cmc
inc
push
movs
mov
aas
xchg
jb
or
pop
mov
xchg
inc
mov
push
sbb
mov
pop
call
nop
adc
test
adc
and
fstp
bnd
dec
push
add
mov
and
jl
out
das
add
mov
jb
mov
fsub
or
stc
cmps
div
push
test
cmp
ins
ds
push
jne
mov
shr
std
jbe
mov
cmp
pop
or
hlt
pop
bound
mov
(bad)
adc
mov
jbe
jmp
mov
in
push
les
add
add
cwde
movs
dec
dec
mov
sbb
movs
and
clc
iret
outs
inc
repz
cmc
scas
mov
xor
pop
push
scas
mov
or
outs
(bad)
popf
gs
stos
gs
stos
pop
inc
dec
aad
dec
sbb
xor
into
jge
dec
jmp
(bad)
aaa
addr16
xchg
pop
inc
sbb
or
les
adc
mov
pop
popf
jge
push
jno
call
mov
aaa
loopne
xor
clc
sbb
gs
pushf
mov
sub
adc
int3
stos
and
fldenv
push
pop
adc
and
xlat
addr16
cs
fwait
(bad)
push
outs
xchg
mov
mov
cmp
xchg
inc
js
push
(bad)
cmp
pop
shr
test
pop
jl
cmp
lods
xor
stc
push
jge
pop
call
test
ficom
mov
sbb
jns
leave
jnp
adc
cmps
xor
mov
push
xchg
shr
cmps
add
(bad)
(bad)
mov
sbb
ja
xor
xor
aas
pop
leave
sbb
hlt
(bad)
jp
test
jo
ret
push
pop
add
in
jmp
mov
popf
es
bound
fimul
stc
mov
jne
and
xchg
out
or
mov
jmp
inc
jne
xchg
int3
sub
addr16
popa
ins
fst
mov
mul
loopne
cmp
mov
rcl
xchg
mov
ret
add
cwde
neg
jp
cmp
inc
nop
test
imul
retf
jmp
adc
mov
rol
retf
fsub
xchg
(bad)
(bad)
cmp
push
push
push
jg
ins
pop
xchg
shl
cmps
addr16
pop
mov
inc
cmp
je
je
nop
jge
adc
and
mov
(bad)
cmp
into
dec
movs
lock
jo
inc
loopne
loop
mov
sub
fimul
cli
jl
push
pop
push
ss
popa
cwde
(bad)
push
mov
xchg
movs
ret
jmp
lock
sub
jmp
push
xchg
(bad)
int3
sub
mov
lods
dec
int3
out
inc
stos
iret
mov
mov
or
stos
dec
mov
sahf
idiv
idiv
and
enter
xchg
inc
cmp
jno
lds
or
lods
dec
add
scas
out
push
cli
retf
dec
jne
push
add
push
pop
sub
jmp
mov
cmps
jmp
jmp
adc
shl
outs
movs
inc
les
inc
adc
repnz
in
mov
jecxz
pop
scas
pop
xchg
lds
and
mov
stc
scas
sbb
cmc
mov
lock
push
js
pop
stc
cmp
(bad)
xchg
xor
xor
sbb
sub
into
jmp
xchg
dec
xor
jg
pop
pop
lods
aam
ss
inc
adc
or
ror
aas
adc
sub
rcr
inc
jb
mov
gs
retf
mov
mov
add
paddusw
inc
xchg
lds
adc
movs
jl
scas
inc
cmp
xchg
fistp
(bad)
mov
pusha
fdiv
xchg
dec
scas
loopne
adc
fimul
stos
push
imul
add
pop
xchg
les
stos
xor
ss
xchg
or
mov
dec
fnsave
cmp
jg
shl
hlt
mov
xchg
gs
movq
inc
adc
jbe
pop
ja
jl
push
mov
icebp
jmp
aam
ja
sub
or
xor
aad
jmp
jp
xor
push
les
aam
jg
dec
je
cmp
mov
(bad)
xchg
push
push
add
cdq
inc
add
(bad)
pop
repz
add
cmp
aaa
test
int
adc
or
clc
(bad)
in
mov
xchg
push
sub
mov
test
daa
stc
dec
sub
fs
lds
rcr
xlat
not
cmp
pop
xor
mov
xchg
mov
movs
pop
or
cmp
mov
mov
mov
inc
mov
retf
jbe
std
call
neg
inc
mov
js
and
sti
mov
dec
hlt
push
je
pop
cdq
test
and
adc
popf
scas
mov
pushf
xor
adc
popf
js
push
test
sub
lods
in
(bad)
adc
adc
pop
inc
not
cdq
enter
xor
sbb
or
sub
in
jp
fcom
cdq
inc
xor
pop
pop
mov
mov
(bad)
(bad)
repz
adc
std
adc
inc
inc
adc
cmc
ss
mov
sub
sbb
aam
cwde
pop
xor
lods
fsubr
out
cmc
(bad)
out
icebp
stc
dec
jl
mov
gs
test
cmps
test
push
add
pop
pusha
int3
or
lods
mov
xor
paddw
fwait
in
enter
xchg
dec
push
aad
mov
add
push
ins
loope
test
add
out
dec
scas
cdq
jb
dec
xlat
add
mov
adc
lahf
jno
fcom
popf
mov
(bad)
jmp
mov
inc
rcr
jl
bound
popa
sti
rol
mov
add
andnps
xor
mov
fwait
jmp
sti
xchg
mov
repnz
scas
stos
push
std
pop
cmp
aas
in
xchg
sahf
push
add
(bad)
mov
mov
xor
cmps
push
scas
in
and
or
mov
cmp
leave
mov
ds
mov
jne
stos
jo
or
std
test
add
or
or
shr
out
jns
fisubr
sub
jo
pop
icebp
int
xor
xor
ins
sahf
dec
test
je
imul
jmp
fsubr
test
dec
loop
cmps
adc
cs
fdiv
out
jmp
jg
sub
movs
jge
sbb
add
aad
add
cmp
add
sub
std
pop
sbb
es
or
mov
adc
pop
loopne
imul
loope
add
jg
gs
jae
dec
mov
fst
dec
add
cmp
and
xor
mov
enter
int
mov
mov
xchg
movs
mov
shl
mov
adc
cli
stc
loope
int3
xchg
mov
push
das
pop
pop
cdq
cmp
mov
lea
cs
jg
loopne
lds
cmp
cmps
ret
scas
or
mov
xchg
mov
push
imul
(bad)
push
pushf
dec
sbb
inc
or
rcl
(bad)
adc
iret
call
mov
enter
sar
mov
stc
or
or
mov
add
push
push
and
jge
xor
dec
call
adc
adc
icebp
and
retf
lods
adc
cmp
inc
pop
inc
movs
gs
or
lods
ret
cwde
xor
sub
sbb
cmps
pop
or
je
aas
adc
fsub
jns
cdq
jbe
(bad)
(bad)
rcr
lahf
out
bound
imul
cld
sbb
mov
xchg
jnp
mov
jg
sub
cli
mov
jp
dec
pop
pop
jnp
add
xor
lods
jnp
dec
pop
js
jmp
mov
push
mov
repz
cmp
mov
cmps
icebp
es
ret
push
loope
int
xor
cmps
fsubr
push
lahf
mov
cli
mov
mov
or
retf
fsubr
pop
fs
or
sahf
adc
inc
iret
out
mov
xchg
dec
push
fcmovb
or
mov
jmp
jmp
in
jmp
sub
inc
pop
rol
mov
aas
xor
inc
ror
mov
pop
fist
loopne
dec
inc
aaa
jmp
and
(bad)
fmul
fmul
or
outs
aad
shr
jle
(bad)
dec
xlat
cmp
shl
rcl
xchg
mov
xchg
and
and
fs
sbb
es
lahf
fldenv
sub
cmps
dec
sub
call
fisttp
inc
rdseed
enter
es
test
sahf
and
iret
sbb
movs
dec
xor
xchg
cmps
inc
sbb
sbb
xchg
push
in
ja
jge
inc
cmp
push
lods
mov
stc
in
and
adc
lahf
outs
inc
sahf
aaa
mov
dec
mov
jnp
xchg
and
paddw
rcl
jle
ins
addr16
les
popa
(bad)
ins
xchg
mov
int3
ja
sbb
(bad)
fsubp
mov
ds
mov
jns
ret
xor
adc
hlt
or
pop
in
and
lock
sbb
enter
imul
(bad)
loop
arpl
pushf
adc
inc
mov
mov
mov
lahf
pop
or
jecxz
cmp
outs
iret
jno
sbb
dec
test
push
sbb
push
test
cmp
adc
xor
lahf
lods
sub
je
cmovs
xlat
jbe
dec
cmp
sbb
repz
cdq
xchg
(bad)
movs
adc
movs
jmp
xchg
adc
or
das
retf
pop
test
xchg
dec
ds
pop
shr
xlat
aaa
fistp
add
mov
sub
or
daa
pusha
ins
test
adc
test
pop
add
cmp
fistp
sbb
imul
outs
mov
mov
sbb
jle
adc
fist
ret
inc
pushf
xchg
or
shl
nop
sub
push
dec
stos
xor
sub
das
pop
fcomp
jo
sti
adc
and
jecxz
cmp
xchg
push
jle
or
in
jmp
xor
pop
nop
inc
fistp
lods
add
gs
mov
fnstenv
jp
into
mov
mov
sbb
shl
push
lods
mov
test
xchg
sbb
addr16
adc
and
psubw
push
cmp
ror
xchg
scas
test
in
fwait
into
gs
das
jge
aas
repnz
push
std
bound
fucom
and
ret
cdq
mov
and
sub
jo
pop
mov
mov
jns
sbb
or
popf
sub
mov
loop
xor
mov
and
mov
mov
pop
mov
inc
inc
sub
dec
scas
mov
cwde
fwait
adc
out
mov
and
(bad)
jecxz
pop
xlat
jb
out
rcr
xchg
test
sar
outs
xor
in
(bad)
fs
repz
(bad)
mov
aas
cdq
(bad)
daa
mov
sbb
sub
inc
mov
mov
lods
mov
mov
xchg
ja
aaa
mov
xor
leave
mov
adc
pminub
adc
shl
adc
xchg
(bad)
inc
dec
call
out
push
fsub
shr
inc
retf
or
fs
ret
mov
mov
xchg
and
lahf
dec
jle
jg
jl
mov
add
enter
push
jo
and
mov
or
jae
in
jns
and
lods
leave
jle
jle
jg
jmp
sahf
inc
inc
sub
adc
js
(bad)
cmp
push
lods
lds
or
(bad)
pop
addr16
loope
icebp
jne
inc
sub
push
pop
sahf
xor
shl
xor
repnz
inc
sub
jns
je
sub
fnstenv
and
pop
jge
movs
nop
push
dec
mov
pop
fld
pop
lods
add
shl
cmp
pop
xor
sub
shl
call
ja
mov
inc
jmp
sub
sti
gs
pop
leave
mov
add
mov
and
ins
sub
dec
mov
sbb
inc
fistp
lods
xor
and
xchg
stos
rcr
int3
cmc
rol
inc
mov
stc
ins
xchg
push
(bad)
mov
jmp
fbld
sbb
test
mov
and
loopne
ss
cmps
rcl
(bad)
xlat
push
rol
cmp
mov
enter
popa
mov
sbb
sti
pop
shl
pop
(bad)
popa
adc
or
movs
sar
xor
ins
call
imul
je
adc
cmp
retf
push
mov
out
mov
jle
out
mov
out
in
push
int
xchg
bound
cmp
and
jno
xchg
add
xor
inc
cmps
mov
pop
cmp
(bad)
cli
jno
dec
xor
dec
mov
sbb
mov
fsub
cmp
data16
push
push
shr
ds
adc
sub
pop
call
ret
stos
mov
js
sub
cwde
icebp
shr
dec
loopne
pop
and
arpl
mov
retf
push
ins
popf
fist
test
mov
mov
arpl
loope
dec
push
ins
leave
ror
(bad)
dec
enter
std
mov
adc
cmp
ror
add
mov
ins
(bad)
mov
pop
das
sbb
sub
movs
mov
fsubr
stos
or
sbb
retf
mov
sar
ret
cdq
into
or
pop
dec
aas
jbe
xchg
mov
int
nop
iret
into
pop
pop
mov
mov
ret
pop
(bad)
shl
in
xchg
mov
jle
dec
mov
fwait
sub
les
xor
hlt
iret
in
mov
fs
cdq
mov
xchg
ret
xchg
fs
dec
dec
push
add
jecxz
into
out
dec
and
and
sbb
test
test
and
scas
inc
ror
(bad)
xchg
fcomp
jne
mov
and
push
xor
cwde
(bad)
cmc
in
cdq
and
jge
rcr
aas
pop
les
jno
call
and
push
add
mov
rcr
lea
lods
loopne
(bad)
mov
mov
push
jg
dec
jecxz
repnz
pushf
psubw
stos
or
out
out
scas
or
inc
sub
and
and
test
or
mov
mov
leave
test
pop
idiv
test
loopne
adc
pop
repz
test
fs
(bad)
ds
dec
mov
fcmove
jmp
or
rcr
xchg
cld
shr
(bad)
cmp
loopne
or
jle
or
sbb
add
sbb
movs
outs
movs
rcr
mov
inc
cmp
fmul
jle
or
and
inc
repnz
mov
add
mov
(bad)
mov
cmp
jle
xchg
aam
inc
std
push
out
stos
ins
inc
fcmove
pop
and
push
xchg
retf
or
cmc
int
jmp
shl
add
clc
push
mov
leave
mov
jge
lods
fs
cdq
je
scas
inc
jns
movs
in
jecxz
daa
out
inc
sbb
jne
adc
in
data16
ficomp
scas
mov
ins
xchg
and
push
jmp
mov
sbb
ds
xchg
sub
jle
pop
mov
fs
mov
adc
add
das
movs
cmp
inc
test
jge
xchg
out
cmp
push
int3
push
movs
lods
lods
add
je
or
repz
int
in
xor
add
adc
jne
xor
(bad)
pusha
mov
and
xchg
xchg
aas
xchg
mov
nop
lahf
jp
dec
sub
and
stos
popf
fiadd
sbb
lods
xor
test
adc
cmp
cmps
pop
sti
xchg
repz
or
fisub
retf
inc
sbb
fsub
ins
inc
cdq
xchg
lock
(bad)
jge
cmp
push
mov
xchg
push
jg
jae
in
or
scas
fcom
xor
mov
(bad)
sub
mov
jl
pop
enter
call
lahf
bound
imul
push
not
jp
xchg
jecxz
xchg
and
lods
(bad)
or
mov
test
jmp
imul
mov
or
pop
shl
pop
mov
lahf
imul
mov
xchg
adc
icebp
fs
xchg
adc
jbe
stos
(bad)
jb
fist
sbb
pop
cmps
add
daa
pushf
add
mov
pop
inc
xor
jl
and
out
jmp
and
xor
mov
and
cli
mov
aad
lds
pop
pusha
fadd
popa
cmc
sbb
std
stos
adc
hlt
sub
stc
aad
jne
mov
(bad)
jns
mov
mov
and
pop
pop
js
pop
into
push
outs
jp
out
jno
in
mov
mov
push
add
cld
test
pop
add
ins
ret
xor
dec
sub
or
outs
pop
inc
iret
(bad)
lods
aam
sbb
adc
pusha
dec
add
cmp
lds
mov
xchg
push
cli
and
sahf
cld
inc
(bad)
inc
inc
jge
sub
arpl
jae
sbb
imul
jo
mov
add
arpl
mov
hlt
push
cmp
test
arpl
sbb
(bad)
mov
xor
shl
pop
hlt
aam
nop
lods
call
add
fdiv
xchg
jne
mov
popf
push
mov
popa
push
lea
mov
(bad)
lods
ret
stos
call
sbb
les
int
mov
cli
jmp
jno
mov
loope
sbb
dec
inc
scas
adc
scas
mov
mov
js
test
cwde
aas
int
lock
out
push
push
jo
pop
imul
inc
sbb
fidiv
sbb
cdq
sub
imul
popf
sub
pop
sti
rcl
pop
and
sbb
pop
sti
mov
std
stos
sbb
adc
js
shl
jo
xlat
mov
or
sahf
rcl
retf
jle
loope
mov
mov
adc
ss
xchg
or
aad
mov
or
lea
ins
(bad)
jo
jle
ins
adc
aaa
mov
jmp
(bad)
mov
add
pop
add
push
add
and
cmp
in
int3
pop
push
add
mov
pop
jns
xor
retf
pop
add
mov
imul
popf
sbb
loopne
stos
push
xchg
int3
ins
retf
mov
stos
mov
and
inc
cli
mov
aad
adc
fidivr
dec
clc
xor
out
sti
inc
xor
cmps
sbb
dec
ins
mov
imul
(bad)
scas
(bad)
jbe
mov
ret
inc
dec
xchg
mov
imul
jnp
jb
push
push
mov
fwait
xchg
jecxz
lds
xlat
pop
fwait
and
or
scas
dec
into
jb
fcomp
imul
jmp
cmp
nop
inc
dec
xlat
mov
push
push
inc
ret
inc
jecxz
ficomp
inc
movs
int
jno
push
retf
iret
ins
cli
frstor
lds
data16
pushw
adc
mov
es
lods
pop
not
jnp
sti
jae
or
add
repz
icebp
cmp
iret
gs
lock
pop
pmaddwd
dec
je
fnstsw
retf
leave
mov
dec
fisubr
push
int3
movs
add
je
mov
lea
sub
and
mov
push
and
mov
dec
mov
xor
mov
out
pushw
jg
mov
jecxz
cmp
inc
rcr
adc
dec
fistp
cmc
aas
rol
es
movs
sbb
pop
push
cmc
adc
push
sbb
les
outs
cmp
imul
mov
inc
lock
scas
and
xor
push
dec
and
inc
adc
arpl
pop
cmps
cmp
mov
leave
xchg
call
lahf
add
stos
xchg
xor
push
pushf
sbb
inc
sbb
mov
mov
sub
rcr
pusha
mov
test
pop
pop
movs
les
inc
sub
add
jmp
push
jmp
test
push
cmp
cmp
stc
add
cmp
pusha
les
sbb
sti
cmp
or
jecxz
mov
and
inc
cmp
and
into
aas
aas
jb
sahf
rol
cmp
popf
jnp
test
rep
add
les
and
stc
sbb
aam
ja
stos
jb
jo
stos
push
pop
enter
imul
cmp
rcr
(bad)
js
dec
retf
or
pop
add
nop
(bad)
dec
cdq
shr
clc
jo
and
dec
cli
(bad)
neg
ins
mov
sub
stos
add
jge
test
retf
push
xor
movs
jmp
or
sbb
jne
mov
loop
and
push
ss
pop
mov
xchg
mov
inc
pop
sbb
in
cmp
cmps
mov
or
push
mov
or
dec
mov
lds
icebp
pushf
shr
out
das
test
or
push
repnz
cmp
and
sbb
cmp
xchg
aad
cmps
jmp
mov
cmp
inc
mov
fbld
push
fadd
loopne
adc
pop
repz
in
scas
shr
nop
dec
adc
sub
(bad)
cmp
clc
xchg
test
mov
dec
mov
xchg
hlt
mov
push
ret
push
cwde
sbb
adc
cmp
enter
fdiv
movs
(bad)
inc
sbb
ficom
int
hlt
mov
cmp
push
mov
into
stos
sbb
outs
mov
int
ret
dec
sar
or
jo
jbe
cmp
jg
test
ja
dec
jg
dec
push
sub
aaa
js
int3
dec
push
pop
popf
sub
lods
shl
mov
pop
dec
popa
xchg
push
test
enter
sub
int
mov
cdq
mov
mov
aas
mov
pop
xchg
dec
sub
pop
adc
inc
ss
mov
enter
xor
dec
in
xor
pop
push
bswap
js
add
iret
inc
jb
fist
add
int3
ret
js
aas
push
inc
fist
aas
outs
inc
jo
pop
repnz
lods
sbb
(bad)
out
repnz
ror
rcl
ds
js
and
retf
aas
movs
test
pop
pop
xchg
inc
adc
in
cmp
adc
mov
jl
repz
enter
mov
xchg
imul
push
mov
ret
or
mov
jno
sbb
scas
shl
add
jns
leave
mov
push
mov
cmps
dec
xor
pop
pop
cmps
sbb
out
jg
call
sahf
mov
je
and
mov
mov
add
add
mov
sahf
add
mov
movs
pop
pop
mov
(bad)
xor
xor
shl
and
xchg
pop
add
sub
in
rol
cmp
or
call
mov
aad
cli
ret
and
sbb
sbb
mov
and
cli
jmp
pop
fadd
vpsadbw
xchg
movs
mov
pop
jne
dec
pushf
add
mov
pop
scas
pop
mov
add
and
jmp
add
jo
adc
cli
dec
push
repz
add
mov
loopne
jge
add
xor
cmc
push
imul
and
(bad)
loope
xchg
push
push
adc
pop
(bad)
(bad)
sbb
test
jbe
pop
adc
(bad)
cmp
pushf
imul
inc
addr16
mov
std
xchg
and
or
jno
inc
pop
dec
clc
push
jno
popf
lods
mov
pop
lea
jb
jb
aas
dec
xor
dec
mov
cwde
aad
leave
shl
pop
jno
in
ss
ds
cmp
cmp
shl
add
sar
mov
cmps
repz
out
arpl
mov
adc
ds
add
(bad)
jnp
jecxz
sbb
add
aaa
fidiv
dec
jmp
sbb
mov
pop
push
sar
cmp
sbb
outs
pop
inc
mov
sub
dec
xchg
cmp
inc
mov
sahf
add
es
(bad)
call
inc
popa
pop
daa
shl
clc
mov
pop
out
mov
fcomp
push
pop
outs
jge
call
xchg
xchg
outs
jecxz
jl
sti
xlat
in
push
dec
inc
sbb
dec
cmp
iret
out
cs
out
outs
cmp
jnp
adc
add
ins
test
cmp
(bad)
mov
xchg
mov
out
ins
pop
out
test
stos
pusha
in
les
(bad)
jno
ins
add
inc
ss
sbb
mov
dec
xor
cmps
or
mov
lods
cmp
mov
xlat
pop
ret
dec
xchg
cmp
mov
(bad)
mov
sahf
lds
movs
push
adc
and
jae
icebp
cmp
js
xchg
sbb
int3
and
jle
mov
or
push
sbb
sub
mov
in
mov
jns
ror
push
jle
sub
xor
iret
aas
mov
xor
movs
not
sbb
push
(bad)
hlt
xchg
adc
pop
sahf
cld
scas
sub
jp
js
jmp
push
mov
fadd
sbb
fsubr
arpl
push
lock
or
xor
js
shl
fisubr
and
repz
pop
inc
in
sbb
push
mov
int3
adc
aad
jge
add
int
sahf
(bad)
jns
jno
or
or
in
dec
add
in
ss
dec
call
sbb
and
mov
jge
adc
loopne
ds
xchg
sub
pusha
mov
ret
xor
cmc
mov
jge
mov
les
push
lods
and
push
aad
retf
dec
jp
fnstsw
push
call
imul
pop
shl
jl
lahf
mov
out
push
fidiv
stos
lods
(bad)
out
arpl
ins
mov
repz
test
in
mov
aaa
sub
mov
add
push
and
pop
jmp
jbe
div
jbe
aam
xchg
std
in
add
jmp
cld
pop
add
mov
add
mov
jnp
jae
dec
adc
icebp
sub
push
sub
addr16
imul
sub
(bad)
sub
dec
shr
pop
or
cmps
out
imul
pop
shr
test
(bad)
pop
cdq
jge
or
rcr
sub
mov
xchg
cmp
ins
lock
jne
rcl
out
aad
and
loope
leave
test
imul
sbb
inc
(bad)
pushf
inc
leave
jp
pop
lahf
mov
mov
xchg
and
ds
pushf
xchg
enter
mul
adc
je
mov
je
lahf
and
mov
sbb
aad
add
sahf
es
rol
add
jecxz
and
sahf
lods
in
mov
mov
adc
jle
push
jl
mov
xchg
repnz
sub
fwait
sub
jle
arpl
jns
sbb
test
push
inc
dec
adc
lds
loop
pop
add
jae
push
mov
cmps
dec
jno
(bad)
out
cmp
test
out
inc
js
inc
enter
dec
sub
mul
mov
inc
ret
and
and
sbb
(bad)
cs
pop
nop
mov
push
fimul
inc
jb
mov
sub
ja
or
mov
int3
push
dec
inc
(bad)
das
mov
(bad)
dec
mov
mov
in
push
fisttp
mov
mov
adc
js
sti
mov
mov
inc
mov
js
jns
or
ret
arpl
lock
jmp
cdq
pop
mov
in
lods
ds
gs
pusha
dec
jecxz
jl
push
mov
mov
(bad)
frstor
into
neg
pop
xchg
jne
cmps
imul
in
sbb
dec
(bad)
cmp
xchg
bound
add
sbb
mov
jno
and
inc
je
sub
ss
or
mov
push
xchg
jge
lods
jmp
push
lahf
pusha
push
jbe
mul
leave
jno
mov
jl
inc
lea
mov
iret
pop
pop
xchg
icebp
sbb
fsub
test
(bad)
jmp
jns
icebp
shr
adc
ins
dec
mov
xor
imul
jbe
mov
stc
into
mov
loope
dec
sub
ins
aas
sub
or
mov
stos
loopne
pop
dec
div
mov
mov
lahf
stos
cmp
cmp
inc
cmp
lods
lock
mov
pop
es
cli
mov
fadd
fdiv
aas
pop
data16
test
sub
shr
test
dec
xchg
sub
stos
mov
pop
outs
icebp
dec
(bad)
add
ds
in
and
popf
jg
dec
loopne
inc
arpl
push
jmp
sbb
retf
mov
inc
push
pop
cld
movs
cdq
adc
dec
sbb
aas
push
mov
jne
mov
or
cld
iret
hlt
cwde
mov
pop
in
jb
pop
cmps
test
xor
cmps
jns
je
mov
jge
pop
xchg
jo
ror
and
int
imul
pushf
add
(bad)
pop
clc
pop
sbb
adc
mov
inc
aas
cdq
push
dec
mov
imul
mov
repz
ja
pop
stc
sti
loopne
outs
fadd
jecxz
sti
and
add
mov
and
inc
out
repnz
js
bound
or
les
fldenv
xchg
pop
fld
jns
ret
call
das
cmp
cmp
out
and
sbb
cmp
jbe
push
sub
lods
cmp
lar
xor
daa
repnz
stc
jo
xor
dec
sahf
mov
mov
mov
push
and
add
dec
xor
add
test
sub
cmp
dec
mov
cwde
daa
sub
test
and
cmps
mov
mov
jecxz
imul
daa
mov
mov
xchg
push
mov
and
addr16
fiadd
mov
arpl
(bad)
dec
and
sbb
test
mov
out
(bad)
jmp
iret
and
add
pop
adc
out
gs
mov
fwait
pop
mov
pop
pop
cdq
push
cmp
fisttp
outs
and
xchg
jnp
cmp
call
es
ja
icebp
and
ds
pusha
and
mov
add
nop
cmp
retf
pushf
rol
out
sbb
mov
push
xor
out
mov
mov
jp
ins
push
cli
xchg
les
outs
rcl
in
mov
and
and
mov
jg
retf
pushf
lods
pop
cmp
pop
std
push
push
mov
or
mov
xchg
mul
(bad)
lods
das
icebp
xchg
dec
push
mov
out
sbb
fsubr
pop
jecxz
les
sub
jne
cmp
stos
hlt
cld
push
fwait
lock
imul
xor
fcmove
xchg
inc
outs
imul
cli
xlat
push
or
dec
shl
stos
dec
push
sti
ins
ins
push
in
xchg
xor
pop
(bad)
repnz
sbb
mov
mov
(bad)
(bad)
adc
out
nop
jo
aas
repnz
cmc
mov
pop
into
jle
xor
mov
xor
cmp
xor
adc
jo
mov
sbb
push
mov
cwde
sbb
pop
lea
jp
fmul
stos
bound
adc
dec
jbe
xor
push
sub
or
jg
dec
sub
cmp
out
fild
fs
rcr
push
jae
pop
repnz
jg
pop
or
dec
sbb
dec
mov
ins
(bad)
mov
mov
xchg
iret
pop
rcl
xchg
pop
add
adc
mov
push
and
div
mov
call
adc
dec
bswap
jae
les
push
xor
fst
mov
clc
leave
pop
adc
stos
mov
ins
pusha
fwait
shl
mov
cmp
ror
nop
xchg
add
aaa
mov
xor
sti
or
sbb
push
ins
mov
xor
inc
sub
jnp
pop
imul
sbb
repz
push
push
and
call
xchg
jmp
enter
fstp
les
das
inc
xchg
in
mov
fcmovnbe
cmps
push
jle
pop
dec
mov
clc
(bad)
and
dec
push
fisubr
xchg
inc
push
sbb
dec
or
inc
add
or
and
enter
es
rcl
xor
inc
dec
cli
fnstenv
loopne
xchg
dec
shl
adc
sub
mov
dec
cmp
fmul
or
pop
out
adc
cmp
mov
test
or
aaa
inc
xchg
cmp
cmps
shr
repnz
clc
maxps
lea
dec
add
jne
stos
add
inc
dec
(bad)
iret
cmps
(bad)
jmp
mov
cmp
push
sbb
mov
pop
test
cli
les
push
imul
(bad)
imul
outs
push
mov
sahf
int3
(bad)
jbe
gs
pop
outs
fadd
push
mov
out
pop
imul
cld
loop
rcr
rcr
xor
jb
fs
lods
xchg
mov
xor
pop
das
jg
es
ds
mov
out
or
push
(bad)
in
xor
inc
push
jne
add
out
inc
sub
push
js
and
jmp
jae
or
repz
fdivrp
pop
xchg
leave
in
in
popf
or
and
in
mov
loop
icebp
mov
retf
add
imul
mov
jb
mov
pop
sti
out
add
and
fsubp
inc
mov
or
inc
jno
cld
test
jae
mov
aad
fs
adc
mov
out
addr16
and
out
mov
cli
(bad)
retf
cli
mov
ret
in
sbb
inc
and
cmp
call
retf
dec
test
retf
bound
js
add
push
mov
pop
js
dec
not
sub
push
ja
inc
dec
aam
jmp
cs
retf
dec
xchg
scas
ds
xchg
cmp
mov
jge
clc
cmp
imul
jmp
or
pop
fild
jl
push
add
fsub
sbb
leave
adc
sti
std
fisttp
add
cmps
mov
mov
mov
popf
dec
out
and
mov
arpl
dec
push
inc
call
mov
pop
repz
rcr
mov
aad
push
data16
sahf
jge
rol
sbb
dec
and
push
jl
pushf
xchg
inc
clc
dec
std
dec
sbb
(bad)
xchg
(bad)
ss
xor
push
jle
xor
js
xchg
push
lahf
jns
push
pop
inc
sar
lock
in
pop
pop
sbb
adc
iret
xlat
xor
inc
mov
scas
pop
out
sbb
adc
pop
lods
pop
dec
scas
xchg
popa
sub
pop
jle
or
mov
cli
mov
add
scas
jae
add
push
shl
rcl
xor
xchg
ror
fmul
rcr
cdq
jns
cwde
sbb
dec
ins
push
fild
dec
xchg
loopne
data16
shl
(bad)
xchg
clc
lods
cs
ja
js
cdq
add
mov
pop
dec
and
sbb
enter
shl
fcomp
jae
pop
cmp
cmp
mov
mov
sbb
adc
mov
loop
mov
shl
test
xchg
arpl
std
gs
pop
and
aas
repnz
sub
loop
jo
clc
mov
cs
mov
adc
cmp
cmp
pop
xlat
fwait
cmp
bound
aam
pop
repnz
xchg
arpl
rol
push
push
push
mov
add
adc
push
or
adc
lock
push
ret
xchg
jmp
ret
icebp
aaa
push
mov
dec
mov
sbb
mov
mov
adc
inc
sti
inc
retf
inc
scas
mov
add
inc
or
inc
dec
imul
mov
jmp
movs
sbb
xor
add
mov
je
mov
jbe
and
lods
xor
imul
dec
es
mov
dec
mov
jae
ror
lahf
das
not
scas
push
sti
jb
pop
(bad)
jle
xchg
add
in
jl
cdq
pop
ins
mov
(bad)
jg
push
(bad)
aam
sar
dec
push
pusha
sbb
mov
popa
imul
mov
jb
scas
sub
and
(bad)
jle
lods
push
inc
sub
cmps
mov
cmp
mov
jmp
icebp
cmps
xor
cdq
loopne
jbe
mov
cs
jl
sbb
mov
xchg
cwde
dec
sahf
xor
sbb
and
outs
fwait
test
mov
sbb
push
in
adc
sti
iret
or
stos
je
dec
jbe
hlt
imul
jne
out
cmps
xor
lahf
(bad)
push
jmp
inc
(bad)
adc
mov
or
repz
mov
in
and
adc
(bad)
push
pusha
fld
loope
(bad)
xchg
(bad)
call
xchg
sar
(bad)
and
out
or
lds
xchg
out
xchg
add
sti
cdq
push
mov
lds
adc
mov
fsubr
jbe
cmp
(bad)
cmp
adc
or
stos
inc
fcomp
mov
inc
or
fild
mov
(bad)
or
fisubr
out
fst
popf
(bad)
xor
movs
and
out
outs
xchg
xor
pushf
or
scas
mov
pop
or
push
jle
xchg
pop
scas
scas
pop
xchg
stc
in
loope
mov
das
lods
pushf
pop
(bad)
jg
cmp
mov
std
push
nop
sub
and
mov
stos
in
clc
adc
push
sahf
xor
jp
sbb
icebp
sub
push
sbb
cli
xor
in
aas
daa
adc
mov
(bad)
fsubr
jnp
push
fmul
inc
and
mov
jmp
mov
mov
clc
pop
adc
inc
fs
jg
dec
jmp
or
adc
mov
(bad)
and
das
sbb
jmp
lahf
data16
out
sub
pop
mov
add
into
xchg
ins
add
std
mov
call
pop
lahf
cmps
ficomp
aaa
dec
lock
aad
test
cli
or
dec
in
cld
adc
and
repnz
shr
push
inc
(bad)
les
push
cmp
sub
jb
mov
mov
cmp
mov
pop
les
jmp
push
xor
cld
test
xchg
cwde
retf
aam
loope
div
aaa
push
and
pop
mov
icebp
dec
lods
dec
mov
adc
mov
fs
in
and
out
stc
ret
out
sbb
(bad)
lds
sub
in
sub
mov
fwait
push
push
cmp
cmp
aaa
xchg
add
add
sbb
xor
cld
mov
repz
lahf
xchg
jae
cs
(bad)
mov
jecxz
jno
jecxz
cmp
cmp
cmps
sub
pop
mov
lods
loope
shr
mov
sub
mov
jbe
cmp
push
xchg
or
fist
sbb
int
std
push
or
sbb
jmp
add
jbe
adc
test
jne
push
xchg
pop
dec
rcr
call
fnstsw
or
jns
mov
and
and
mov
(bad)
xlat
popa
int
int3
lods
or
sbb
push
pop
mov
pop
daa
out
outs
(bad)
scas
es
push
push
lods
or
mov
and
xchg
mov
ins
adc
retf
sar
xchg
mov
push
fwait
repnz
es
adc
fmul
cmp
aaa
dec
adc
cli
add
xchg
dec
ficomp
cmp
inc
add
xchg
sti
shr
mov
cdq
nop
fwait
neg
out
fiadd
(bad)
cmp
fisub
sub
cli
mov
(bad)
imul
sub
nop
mov
in
icebp
or
cmc
sub
repnz
(bad)
push
(bad)
mov
and
fsubr
inc
push
mov
repnz
scas
mov
sub
push
(bad)
arpl
fs
int
sbb
dec
jecxz
stos
sbb
xchg
fcmovu
not
dec
aam
popf
sbb
xchg
in
add
jo
dec
push
outs
mov
movs
jae
sub
(bad)
dec
mul
out
mov
cmp
xor
add
inc
pop
mov
push
mov
mov
call
mov
test
pushf
pop
pop
daa
and
cmp
cs
cli
nop
ret
cmp
pop
ins
imul
mov
repnz
dec
pop
hlt
call
xchg
add
add
xchg
cmps
mov
push
div
sbb
(bad)
je
(bad)
in
aad
icebp
(bad)
xchg
es
(bad)
pushf
scas
loope
mov
mov
xchg
adc
jmp
call
push
mov
xchg
mov
jnp
mov
inc
sbb
loop
outs
adc
and
je
dec
mov
sbb
out
fld
or
inc
fcmovbe
fwait
enter
fsubr
lahf
sub
fs
pop
loope
int3
adc
cmps
sbb
out
mov
xchg
clc
mov
and
xchg
sbb
jecxz
xchg
xchg
ret
mov
out
ja
or
je
icebp
bsr
sub
push
mov
aam
cmps
pushf
xchg
ins
jb
cmc
jnp
jmp
pop
xchg
rcr
rol
adc
inc
call
sti
ret
push
fiadd
xchg
cmp
mov
xor
(bad)
cld
jne
cmc
push
hlt
addr16
outs
pop
out
call
ins
adc
push
fistp
add
shr
test
into
dec
xchg
cwde
mov
pop
xor
pop
xor
push
pop
scas
xchg
xor
pop
mov
icebp
inc
dec
sbb
gs
loopne
mov
pop
and
call
ds
ja
bound
xor
cmp
xor
shr
push
pop
adc
aam
push
xor
in
retf
xchg
inc
test
sub
inc
dec
cmps
jnp
sbb
sub
sub
adc
data16
sar
add
sub
movs
mov
xor
sahf
mov
xchg
mov
xor
ds
xchg
nop
jge
loop
ins
cmps
pop
inc
movs
cmp
or
add
stc
cmp
and
sbb
fwait
mov
push
cli
loopne
adc
cmp
mov
and
mov
lahf
das
mov
inc
pushf
sbb
cmp
jl
push
inc
call
ins
jo
es
nop
loopne
int
stos
lods
shr
daa
jge
sahf
fst
shr
fistp
lods
(bad)
sbb
mov
out
fcom
test
fisubr
(bad)
lock
push
push
or
mov
pop
adc
dec
scas
and
lods
stc
or
adc
inc
aad
pop
sahf
call
push
and
inc
js
fidivr
pop
xchg
imul
inc
push
push
or
outs
mov
mov
sub
scas
outs
xor
stc
hlt
cmp
in
jb
jno
mov
jb
cli
pop
and
adc
test
bound
pop
sub
loope
jne
adc
test
pop
(bad)
xor
loopne
xchg
cmp
ja
push
xlat
inc
mov
xchg
pop
mov
leave
sbb
sub
imul
pop
repnz
xchg
or
or
in
in
push
aaa
adc
push
jbe
daa
imul
shl
mov
mov
sahf
sbb
clc
stos
mov
sub
sbb
jae
icebp
dec
pop
aaa
xor
scas
xor
jo
inc
leave
pop
mov
push
xchg
cmp
in
sbb
sbb
push
add
or
dec
jecxz
jne
fadd
stc
sub
jns
adc
and
jecxz
lds
cdq
in
repz
jle
call
out
test
and
ins
add
pop
sbb
sub
popa
dec
adc
pop
add
dec
cs
lods
enter
(bad)
dec
sbb
bound
or
mov
sub
mov
mov
lahf
push
dec
mov
loopne
push
push
outs
xlat
pop
shl
fsub
fadd
out
add
push
lock
lds
mov
movs
outs
inc
mov
pop
test
fstp
hlt
mov
mov
test
and
jno
addr16
xor
mov
cmp
stos
imul
fsubr
cmp
imul
call
aaa
add
sub
cmp
sub
adc
or
lods
cmps
cwde
dec
add
pop
imul
sbb
scas
mov
xchg
mov
adc
out
push
jmp
jl
mov
mov
rcr
push
jge
ret
ss
jle
arpl
add
jecxz
jno
movs
ret
pop
add
inc
lods
pop
jno
cld
iret
push
das
mov
add
repz
add
add
call
into
lods
pushf
inc
mov
ss
or
hlt
mov
mov
stos
xor
add
push
jae
adc
mov
cwde
adc
ja
mov
popa
in
push
fs
stc
or
test
or
scas
nop
pop
retf
loope
fild
sub
sbb
pop
cmc
dec
scas
sub
out
lahf
pop
xor
repz
xor
cld
das
jmp
push
push
stos
imul
or
mov
jmp
mov
jmp
sbb
jne
jmp
pushf
mov
sub
jb
aaa
inc
sbb
(bad)
rcr
lea
cmp
mov
or
fwait
clc
call
mov
add
outs
imul
shr
ss
ret
adc
or
push
cwde
int
div
xor
xor
pop
jmp
movs
scas
repz
cmp
and
test
jns
sahf
out
hlt
cmc
shl
movs
retf
mov
cmp
xchg
loopne
rol
mov
jno
pop
push
lahf
pop
pop
(bad)
iret
mov
pop
mov
jmp
out
add
retf
push
jnp
loopne
dec
xchg
movs
and
cmp
scas
xchg
cs
test
dec
dec
ja
shl
fsub
iret
outs
or
or
jns
ret
scas
jne
xor
and
rol
sbb
pop
adc
pop
leave
mov
cmps
rcl
shl
cli
test
adc
clc
movs
push
push
call
push
in
xor
ret
ret
push
cmp
out
push
add
cwde
into
xchg
dec
fdiv
or
push
inc
add
and
std
mov
push
xor
xchg
mov
fld
fsubr
xor
add
fiadd
sbb
addr16
or
sub
dec
in
mov
sub
sti
hlt
or
dec
xchg
xor
sahf
pop
pop
call
sar
fsub
mov
es
xchg
and
retf
cmps
add
xor
xchg
fstp
sub
daa
das
push
arpl
mov
mov
mov
addr16
mov
mov
pop
fsubr
sti
je
jo
test
add
xchg
xor
jnp
fsub
fwait
mov
mov
sbb
and
stos
daa
inc
loopne
dec
mov
das
sub
jns
popf
mov
mov
xchg
fisub
stc
test
mov
push
sbb
retf
(bad)
pop
mov
xchg
dec
imul
inc
(bad)
dec
jl
dec
sbb
mov
jge
shr
js
sub
and
repz
xor
ret
pushf
icebp
mov
push
sbb
repz
jb
pop
add
ret
or
out
cmps
sbb
in
mul
pop
cmp
mov
adc
add
es
xlat
mov
xchg
jno
sbb
cmp
aam
cmp
xor
xchg
in
mov
dec
retf
out
add
xor
cmps
rcl
fs
dec
in
fs
cs
push
aaa
dec
mov
test
mov
mov
cmp
jo
inc
inc
push
fdivr
out
cmp
pop
pop
cmp
and
out
cdq
(bad)
ja
jae
imul
lahf
lods
pop
xor
mov
or
xchg
rcl
and
shl
div
push
in
xor
cmp
or
jmp
cmp
cmps
clc
jbe
loope
sti
cmps
(bad)
das
dec
movs
lods
adc
dec
sub
pop
sahf
cmps
(bad)
rcl
inc
mov
cmp
mov
ins
data16
and
cmps
and
jecxz
xor
adc
in
ins
sbb
cmp
cmp
retf
pop
jge
cld
arpl
bound
jl
daa
mov
mov
(bad)
cmps
int3
inc
xchg
sub
mov
lea
mov
dec
xchg
add
loop
xor
fsubr
pop
push
mov
inc
cmp
sar
adc
dec
mov
jle
lea
sahf
lods
sbb
dec
xchg
ds
sub
(bad)
push
sahf
push
add
test
jne
dec
cmps
mov
arpl
pop
xor
dec
in
sub
jp
(bad)
test
mov
mov
movs
pop
std
clc
mov
fwait
and
hlt
imul
adc
outs
cmp
hlt
bound
out
bswap
inc
ins
js
test
mov
dec
fimul
pop
mov
sbb
cli
jb
daa
nop
fisttp
lods
out
(bad)
call
das
movs
cld
mov
ja
dec
dec
enter
mov
mov
push
rcl
cmc
popa
sbb
pop
adc
inc
out
sti
sub
mov
cmps
mov
bound
add
xchg
inc
data16
ss
jmp
lahf
mov
cli
popa
in
(bad)
ins
fwait
fwait
lods
aaa
out
cmps
gs
cmp
jne
push
or
les
cli
or
fidivr
pushf
je
cmp
mov
cmp
mov
sub
repnz
and
xchg
jle
dec
inc
cmc
adc
jl
and
mul
sbb
call
sbb
inc
aam
mov
repz
ret
sbb
mov
nop
je
test
mov
mov
mov
scas
cwde
ret
or
or
and
loop
mov
cmp
push
adc
jl
imul
sub
bound
jmp
imul
outs
jmp
inc
push
rol
xcrypt-ctr
cmps
pushf
sub
js
ins
inc
loope
cld
sbb
mov
adc
into
add
test
adc
bound
movs
sub
leave
pop
sbb
sbb
and
inc
pop
in
loop
and
fisub
add
and
(bad)
pusha
push
push
jmp
popf
adc
shl
push
enter
sahf
inc
mov
pop
into
mov
xchg
mov
mov
cmp
das
xor
imul
mov
sbb
mov
push
mul
enter
fsubr
sub
test
sbb
es
data16
sbb
loopne
mov
scas
mov
imul
movs
push
jg
cmp
sbb
jl
cmp
sbb
or
iret
es
cli
push
xchg
sub
sbb
inc
pop
pop
fucom
pop
das
sbb
or
test
pop
xchg
jmp
mov
inc
int3
test
icebp
adc
cli
add
push
(bad)
mov
xchg
sbb
add
inc
jg
mov
mov
ss
cli
push
icebp
(bad)
xlat
in
sub
push
push
sbb
add
test
pop
fmulp
iret
cli
jbe
out
pop
inc
xchg
xor
inc
jo
adc
repz
sub
(bad)
repnz
jns
mov
imul
mov
jle
das
test
shl
and
fild
pop
push
mov
jae
and
add
xchg
pop
hlt
out
cmc
or
push
shl
aam
fidiv
pop
mov
xor
dec
scas
test
inc
inc
mov
mov
mov
loope
add
mov
jmp
push
add
iret
int3
mov
outs
or
mov
cmc
add
jbe
xchg
les
cmp
pop
push
pop
fistp
mov
mov
fwait
xchg
xchg
lahf
push
jl
ret
adc
pop
mov
rcr
scas
mov
cmp
jbe
mov
js
ja
imul
and
daa
clc
jnp
xchg
sti
call
call
inc
cmp
fnstsw
fiadd
sub
ret
push
mov
jne
pop
(bad)
fdiv
inc
jno
pop
sbb
fst
pop
in
fmulp
adc
nop
mov
adc
cmp
push
fist
gs
rol
lods
jnp
cld
add
pop
sub
int3
adc
ret
cmp
rcr
idiv
add
sub
cld
xchg
sub
jne
scas
leave
cmps
ins
(bad)
or
xchg
loopne
stos
jp
mov
jns
fsub
dec
inc
inc
movs
adc
push
imul
mov
xchg
xor
(bad)
xlat
mov
dec
rol
les
ss
push
push
(bad)
stos
out
rcl
mov
rcr
pop
or
loop
push
pop
int3
mov
sub
leave
pop
mov
ror
and
add
int3
or
aad
sbb
mov
ror
xor
mov
xor
test
nop
call
pop
hlt
mov
xor
mov
adc
add
addr16
pop
movs
fdiv
aas
sbb
adc
add
(bad)
aad
addr16
lods
(bad)
stc
lahf
dec
shl
repnz
mov
cmp
mov
cmps
pop
mov
jmp
push
pushf
in
js
add
mov
cmp
add
out
add
pushfw
inc
xchg
aas
mov
sub
sbb
fild
icebp
fwait
pop
addr16
lea
xchg
jecxz
push
sbb
pop
js
mov
push
mov
fcomp
pushf
stos
pop
(bad)
or
sub
xor
and
test
add
out
and
mov
enter
xor
cmp
jno
jg
xor
add
js
xor
mov
adc
cmp
(bad)
sbb
rcl
lock
out
jno
sar
ret
jb
xchg
(bad)
jmp
movs
cmp
test
lahf
mov
cld
add
xchg
dec
and
inc
push
js
(bad)
mov
add
into
in
adc
sbb
dec
cmp
inc
std
add
jp
popf
sbb
mov
ins
jb
jmp
loope
pop
jno
repz
pop
xchg
out
(bad)
into
hlt
loop
mov
inc
stos
mov
and
mov
gs
mov
mov
push
inc
xor
or
push
mov
std
sbb
lds
jl
push
icebp
(bad)
mov
lds
dec
cli
aas
fnstenv
push
out
xchg
jne
lods
jl
and
push
push
cmp
xchg
rcr
fidiv
cmc
cld
out
sub
mov
jnp
cli
pop
loop
pop
stc
jne
test
dec
mov
pop
jl
cmp
std
mov
jg
retf
mov
add
sbb
jo
dec
adc
jl
cmp
or
mov
fmul
sub
ins
push
xchg
or
inc
pop
lds
mov
mov
pop
jle
inc
push
and
(bad)
xor
out
ret
outs
aad
pop
inc
les
cmp
adc
jo
sbb
sbb
mov
xor
inc
mov
cli
in
aas
icebp
push
cmp
push
imul
lods
stos
xchg
int
rcr
xchg
rcr
ret
int
push
loop
xchg
push
popa
mov
into
fisttp
call
mov
lods
dec
nop
arpl
sub
test
jecxz
inc
into
sub
mov
out
pop
and
mov
pop
sub
in
push
mov
jg
sub
fs
not
push
aaa
xchg
(bad)
push
mov
js
retf
pop
test
dec
out
cdq
jne
and
jmp
lods
mov
cmp
out
and
mov
inc
daa
and
out
retf
cmp
mov
test
dec
xor
imul
out
cmc
scas
add
jo
add
imul
ret
js
and
cld
jg
jl
repz
arpl
adc
and
cmp
pop
test
xor
ins
dec
cmc
pop
or
lods
and
adc
pop
push
call
out
mov
and
push
ret
add
jl
dec
xchg
bound
fsub
pop
jae
ret
inc
dec
jns
add
test
mov
sub
(bad)
and
ret
xchg
stos
and
sub
adc
outs
sahf
out
fs
push
sbb
and
data16
and
pop
je
out
stc
(bad)
mov
iret
xor
add
adc
int
cmc
fs
lea
inc
cmps
out
rcl
(bad)
movs
or
fisub
pop
retf
stos
jns
sbb
jg
mov
push
adc
sbb
mov
push
mov
jle
fst
ss
cwde
dec
movs
mov
inc
in
stos
or
movs
xchg
pop
retf
js
mov
or
in
mov
cmp
pop
int
in
fmul
icebp
dec
cwde
sub
or
push
mov
cmp
or
cmps
mov
sub
xlat
cmps
inc
ins
fwait
mov
pop
mov
mov
push
test
cmp
fldcw
xchg
push
loope
inc
adc
enter
add
mov
int3
arpl
sub
and
cli
sub
les
sub
dec
push
in
ret
mov
sbb
ja
aas
dec
or
pop
call
inc
xchg
jbe
repnz
sar
loopne
cmc
jp
out
adc
dec
popf
dec
pushf
out
inc
out
inc
dec
ret
xchg
xor
fs
(bad)
in
imul
test
sbb
das
xchg
sub
jne
fwait
sub
call
(bad)
or
push
mov
adc
push
or
lock
cmp
push
cld
out
jecxz
gs
loopne
push
push
sub
xor
loope
sbb
loopne
rcr
or
mov
test
lock
jg
imul
rcl
and
arpl
(bad)
push
push
cmp
stos
ins
mov
aaa
cld
cmp
sbb
out
div
imul
hlt
cmp
(bad)
sbb
jecxz
das
test
sub
das
(bad)
cmp
pop
push
lahf
push
cmps
adc
(bad)
sbb
mov
adc
jnp
call
scas
(bad)
stc
stc
xchg
pop
cmp
jg
dec
dec
push
xor
fcomp
sub
cs
mov
mov
ja
pop
inc
push
fucomp
sub
sbb
mov
sub
pushf
cmc
ins
push
retf
cmp
fistp
movs
mov
(bad)
adc
sub
cs
rol
outs
shr
pop
sub
push
ret
xor
mov
sbb
mov
lock
and
shl
add
xor
jmp
lds
cmps
in
dec
aad
pushf
div
dec
jnp
adc
jmp
push
jecxz
jnp
jnp
retf
iret
pop
and
cmp
inc
stos
mov
daa
dec
loope
push
fmul
sub
movs
push
mov
add
mov
popf
inc
imul
mov
enter
mov
not
mov
mov
repnz
jg
(bad)
cld
mov
xor
sbb
add
fistp
je
(bad)
adc
add
gs
stos
push
push
iret
adc
imul
iret
push
ficom
imul
mov
dec
arpl
nop
inc
mov
sbb
lock
pop
mov
sub
icebp
pop
retf
and
in
rol
push
jecxz
dec
outs
test
movs
inc
inc
dec
and
lds
test
popa
or
jbe
sti
arpl
push
inc
sub
in
int
ins
out
xchg
xor
or
jge
es
sub
mov
add
and
push
pop
inc
pop
or
xchg
repnz
adc
bound
cmc
(bad)
out
add
pop
xchg
and
pushf
loopne
call
scas
jno
aad
xchg
pop
loop
int3
mov
addr16
push
enter
shr
rcr
or
push
or
jmp
aad
ins
mov
imul
loope
adc
fldenv
popf
mov
shr
test
leave
es
in
dec
sbb
test
push
loope
das
sbb
aam
mov
xchg
xchg
inc
in
sbb
and
add
mov
inc
cmp
dec
mov
std
je
jno
cwde
cmp
adc
xchg
lods
mov
je
mov
arpl
imul
int
inc
pop
data16
push
and
shl
das
xlat
scas
in
dec
ret
rcr
dec
push
mov
sahf
neg
addr16
sub
fucom
fnstsw
retf
fld
xor
fcomp
sub
mov
aad
xor
aaa
movs
aas
or
push
mov
cmps
clc
test
dec
cmp
aaa
mov
gs
or
pop
jg
leave
call
mov
shr
(bad)
fnsave
or
sbb
mov
loope
(bad)
mov
and
push
hlt
xor
cwde
xchg
cmps
jne
push
mov
jecxz
bound
in
or
xor
adc
loope
dec
out
rcr
jp
lods
xchg
(bad)
ror
aad
sbb
pop
dec
aad
sub
js
sahf
add
ins
xchg
int3
not
add
adc
ficomp
mov
add
jl
and
(bad)
enter
add
cli
sub
sahf
xchg
bound
xchg
out
daa
and
jno
add
xchg
push
data16
pusha
mov
sbb
mov
fs
leave
loop
(bad)
mov
ret
call
jae
xchg
mov
pop
jmp
sub
enter
mov
sub
scas
ss
fs
scas
xor
sub
and
scas
cmp
and
dec
cmps
test
fucomip
or
push
and
out
push
movs
jne
mov
test
pop
inc
mov
cmp
push
bound
xchg
cmp
aam
jp
adc
ror
imul
enter
sahf
inc
dec
or
mov
arpl
adc
retf
fdiv
stos
or
sub
js
cmp
mov
xchg
arpl
or
jmp
fwait
ds
and
inc
bound
cwde
in
imul
out
lods
dec
nop
in
adc
into
(bad)
ja
cmp
movs
jmp
loope
popf
sub
push
jb
jl
add
hlt
push
xor
inc
int
inc
repnz
push
inc
or
pop
push
push
push
int
xor
jns
cmp
mov
and
jl
sbb
mov
shr
sbb
data16
sahf
jno
mov
adc
mov
imul
nop
jno
jge
fbld
sti
fdivr
mov
jbe
mov
sbb
push
inc
stc
fs
aaa
cli
cmp
cmp
ss
cld
jle
push
mov
clc
dec
mov
sub
test
jb
dec
out
fs
jnp
iret
dec
cmp
xchg
add
repz
data16
jge
or
call
std
(bad)
pushf
pop
loopne
inc
(bad)
sub
jb
jg
fdiv
cmp
popf
inc
lahf
xor
ficom
ret
jnp
dec
xor
(bad)
cmc
outs
jb
pop
int
push
push
sahf
(bad)
scas
in
mov
fistp
mov
mul
in
mov
xor
add
xchg
mov
xchg
and
push
adc
xchg
ds
sbb
fwait
lods
mul
mov
outs
lods
(bad)
xor
sbb
add
mov
(bad)
jmp
(bad)
mov
gs
xor
sbb
bound
and
fld
scas
call
ss
aam
bound
(bad)
mov
cmp
shl
push
es
arpl
fiadd
popf
pop
loop
mov
retf
xor
xor
xchg
xchg
(bad)
mov
add
les
in
jns
shl
jl
push
pop
mov
repz
mov
or
dec
push
icebp
pushf
ror
pop
or
push
cs
jae
pusha
imul
(bad)
cmc
fsubr
adc
out
ins
cmp
dec
test
sti
arpl
adc
arpl
call
into
xchg
cmp
mov
inc
ror
call
sub
push
xchg
inc
push
sbb
mov
nop
mov
mov
in
xor
adc
mov
call
mov
and
pop
pop
add
inc
cdq
or
into
cli
in
and
pop
pop
sub
push
sbb
jmp
xchg
xlat
add
pop
ror
sub
inc
jo
push
mov
clc
mov
push
mov
jb
popf
inc
cmp
aad
push
xchg
xchg
dec
movs
jp
aam
push
leave
fld
add
push
in
mov
loope
and
cwde
adc
or
leave
or
push
cmp
push
and
push
test
push
cmp
mov
js
cs
jbe
imul
and
sub
adc
inc
test
add
inc
stos
and
sub
lea
call
push
mov
mov
cs
cmp
in
push
mov
cmps
push
add
das
and
mov
in
retf
shl
mov
jmp
ret
sub
js
mov
adc
cmps
xchg
out
push
or
pop
mov
pop
mov
xor
(bad)
jae
and
mov
mov
loop
mov
push
daa
and
fwait
daa
fild
adc
(bad)
data16
dec
scas
mov
into
into
jnp
cmp
jae
xor
adc
mov
pop
push
in
shl
es
jp
mov
loopne
hlt
add
adc
dec
mov
mov
dec
jnp
std
xchg
xor
movs
repz
xlat
adc
fmul
cmp
pop
cmc
or
in
in
push
fsub
test
add
repnz
sbb
jmp
sub
push
pop
cli
fwait
or
idiv
jecxz
mov
and
mov
(bad)
cmp
xchg
or
aad
cmps
retf
push
shr
xor
daa
cld
mov
sub
cmp
shr
cdq
jnp
data16
aad
aam
mov
in
jns
xlat
cmps
test
fld
ret
pop
xchg
stos
loop
inc
test
ja
addr16
mov
and
xor
rol
pop
add
jmp
mov
mov
cmp
jle
xchg
out
nop
inc
das
jle
inc
inc
cmp
pop
push
sbb
cmp
jle
gs
dec
sub
ins
sti
dec
xchg
cli
pop
addr16
pop
adc
pop
and
(bad)
jmp
(bad)
dec
mov
sbb
dec
mov
outs
xchg
aad
cmps
enter
mov
dec
xchg
xchg
enter
rcl
mov
dec
xchg
xchg
movs
cli
lds
inc
jg
cmp
mov
int
push
rol
adc
adc
cmps
mov
out
dec
leave
add
cmp
jmp
xchg
mov
mov
cmp
and
in
mov
and
sub
inc
xchg
mov
or
dec
pop
out
pop
mov
xchg
mov
iret
lods
mov
cmps
ficomp
mov
pop
adc
cs
mov
mov
cmp
ds
pop
inc
jae
mov
popf
rcr
rcl
push
popf
sahf
jb
mov
inc
shr
mov
mov
ins
(bad)
(bad)
mov
mov
mov
aaa
jae
cmp
dec
add
outs
jnp
mov
in
inc
(bad)
push
dec
(bad)
(bad)
push
test
stc
add
aam
xlat
and
mov
push
(bad)
sbb
dec
dec
mov
inc
call
cmp
addr16
ja
in
sti
mov
cmp
mov
mov
icebp
enter
xor
icebp
adc
test
fild
dec
out
test
stos
or
iret
gs
cmp
mov
or
and
push
cmp
sub
lar
xor
xchg
lea
mov
enter
stc
leave
mov
fbstp
test
xor
jl
adc
cdq
xor
outs
test
cmp
dec
sti
pop
and
(bad)
in
and
shr
imul
enter
dec
mov
test
jp
addr16
ret
hlt
cmp
or
jl
cli
and
jecxz
es
mov
enter
push
shl
xchg
sbb
into
push
mov
(bad)
jns
loopne
cld
out
je
nop
cdq
xchg
mov
xchg
ret
xor
shl
ror
ins
(bad)
or
(bad)
out
loop
mov
adc
xor
cmp
call
hlt
xchg
mov
aad
inc
das
int
mov
cmps
dec
nop
sub
outs
into
push
in
sbb
dec
or
and
arpl
loop
neg
jno
add
movs
add
add
mov
leave
jge
fsub
jne
sbb
mov
sub
neg
push
push
push
int3
pop
fmulp
imul
retf
mov
mov
test
enter
cwde
or
leave
in
aas
mov
fwait
pop
dec
jno
push
into
push
mov
ror
dec
je
xchg
in
inc
sbb
sub
and
jmp
pop
add
add
xchg
mov
dec
repz
xlat
int3
mov
(bad)
cmp
bound
js
aas
je
lods
movs
and
jge
jmp
mov
mov
pop
mov
jmp
lahf
scas
out
std
cmps
inc
adc
aas
popa
loop
push
pop
movs
ja
retf
xchg
sub
sub
add
or
(bad)
dec
pop
mov
dec
arpl
fnsave
cmp
outs
arpl
mov
add
int3
add
js
in
xor
ja
mov
int3
je
dec
test
pop
mov
push
(bad)
jecxz
jnp
fdecstp
inc
add
aas
jg
in
sbb
stc
loopne
sub
dec
(bad)
xor
adc
arpl
test
cmp
xchg
(bad)
ss
jne
mov
aad
push
jg
sbb
adc
push
outs
dec
cmp
div
or
scas
sbb
pop
add
cs
push
movs
aaa
or
push
dec
inc
mov
scas
mov
imul
dec
inc
clc
imul
mov
test
jno
push
pop
inc
push
dec
add
aad
mov
in
pop
push
(bad)
out
jp
jne
xchg
hlt
imul
inc
cmc
rcl
jge
xchg
xchg
push
cdq
xor
jmp
dec
or
xchg
inc
mov
ret
add
fs
xchg
pop
mov
jp
xlat
add
out
clc
(bad)
sahf
jmp
shl
jl
pop
rcl
pop
mov
dec
ins
push
adc
fadd
arpl
cs
jne
mov
popf
sahf
inc
(bad)
or
test
jo
out
mov
jae
mov
fcom
cmp
or
cmp
call
scas
xor
pop
cmp
stos
adc
ins
adc
arpl
mov
pop
enter
xlat
sbb
loope
mov
mov
sub
push
shl
pop
add
or
call
sbb
cs
push
sub
cmp
cmc
test
test
xor
inc
out
aad
inc
jae
js
pop
pop
jge
popf
xchg
arpl
mov
sbb
jmp
push
jl
cmp
dec
retf
ret
jo
nop
pop
dec
jmp
retf
loope
mov
pop
dec
push
je
cmp
retf
ss
or
adc
cmp
dec
mov
add
jae
(bad)
ja
jg
fisttp
xor
retf
leave
cld
sub
xchg
arpl
adc
cmc
jmp
jp
bound
push
sub
xchg
scas
loop
xchg
loope
fs
sbb
test
and
loopne
pop
mov
adc
bound
mov
(bad)
(bad)
popf
or
sub
or
pop
dec
dec
std
gs
std
hlt
push
das
dec
jmp
ret
test
cmp
cmp
mov
test
push
shr
mov
jge
push
cli
ror
or
fisub
stos
mov
cmps
jge
pop
ja
push
pop
movs
pop
jae
cs
inc
fnstenv
jb
inc
leave
je
or
dec
cs
pop
ja
xchg
out
or
pop
mov
push
push
xor
daa
add
cs
adc
cmp
and
aad
or
popa
hlt
inc
int3
int3
stos
test
je
cmps
cmps
rcl
test
jae
or
jnp
inc
call
xor
fs
in
jno
inc
xor
fs
mov
xor
test
(bad)
loopne
in
jns
push
aas
and
imul
loopne
adc
dec
aaa
xchg
out
mov
inc
std
push
jl
pop
push
lds
xor
call
ss
neg
sub
mov
ins
mov
mov
sbb
loop
mov
add
cld
mov
nop
outs
leave
mov
loopne
loope
outs
mov
mov
rcl
scas
sub
stos
fs
push
sub
clc
test
sbb
mov
jmp
js
xchg
stos
jle
ins
xor
neg
mov
das
mov
mov
jp
adc
(bad)
jmp
push
and
jecxz
les
call
fcom
ins
js
pop
call
iret
sahf
or
add
and
mov
sbb
sbb
sahf
xor
xor
(bad)
jo
jg
outs
push
adc
pop
xlat
stos
jnp
rcl
add
test
xchg
inc
sbb
push
adc
add
cmc
inc
add
adc
addr16
xchg
push
dec
imul
push
fdivr
gs
xchg
fcom
pop
xchg
es
fnstenv
push
push
fcom
xlat
inc
cmp
sbb
(bad)
fisttp
ss
mov
mov
(bad)
ds
int3
cdq
ja
out
cmp
inc
sti
mov
ret
lds
fild
ins
add
sbb
or
leave
adc
fldenv
xlat
(bad)
pop
xchg
scas
call
pop
push
and
sti
ins
mov
push
(bad)
xlat
add
push
xchg
xchg
pop
push
lahf
out
or
in
push
or
cmp
stos
sbb
repz
arpl
call
pop
pop
call
cmp
mov
mov
fwait
ds
cmp
call
sbb
pop
inc
pop
inc
adc
fisub
lods
ret
cli
add
sbb
xchg
fdiv
call
add
out
jl
stos
aad
jne
retf
xor
arpl
jmp
cmps
mov
ret
cdq
shr
xor
inc
outs
jne
idiv
sar
fucom
outs
dec
out
(bad)
not
rcr
jmp
xchg
cmp
xchg
test
jmp
aam
jmp
ret
pop
mov
mov
xchg
mov
movd
xlat
adc
ja
dec
sub
fist
jmp
test
inc
dec
mov
sbb
pushf
push
cmp
adc
sbb
cmp
and
fiadd
data16
sbb
setle
mov
scas
jp
push
pop
cmps
mov
mov
inc
dec
mov
in
pop
sub
xor
sub
add
cmp
sub
jmp
mov
dec
in
not
push
imul
or
ret
mov
fmulp
add
(bad)
mov
mov
std
loopne
xor
int3
mov
into
gs
xchg
add
iret
cmp
es
jns
pop
aas
dec
dec
ds
sti
retf
cld
pop
test
sbb
ret
ret
arpl
sub
xchg
shl
add
push
pop
jae
or
mov
push
pop
inc
(bad)
cmp
mov
mov
retf
add
fcmovne
xor
xchg
xor
mov
in
inc
popa
sub
cmp
cwde
add
cmps
jecxz
out
cdq
inc
xlat
movs
lods
icebp
mov
xchg
pop
clc
fild
cmp
icebp
cmps
das
outs
dec
icebp
lds
inc
js
nop
sbb
jnp
inc
int
mov
add
out
sub
xchg
push
jne
pop
stc
mov
add
mov
out
loop
dec
movs
outs
test
inc
ja
loopne
cdq
mov
sar
das
dec
in
xor
or
bound
addr16
icebp
pop
jmp
outs
pop
inc
mov
sbb
out
and
adc
mov
inc
cmp
mov
mov
(bad)
add
ins
fld
call
icebp
retw
lods
push
(bad)
out
movs
aam
push
inc
jns
cmp
add
or
xor
pop
in
icebp
daa
add
adc
sub
int
add
pop
jl
adc
adc
adc
out
(bad)
xchg
add
add
xchg
ss
or
scas
lahf
sub
stos
fsub
mov
nop
jns
inc
pop
lahf
test
jbe
test
jbe
add
retf
in
scas
test
inc
sub
push
xchg
inc
xor
sahf
adc
pop
pushf
(bad)
cld
mov
test
loope
mov
push
add
ficom
mov
in
dec
add
mov
push
cmp
into
mov
inc
(bad)
int3
dec
pop
mov
mov
mov
xchg
popa
jno
dec
aaa
scas
push
cmp
movs
adc
cmps
ficom
call
stos
mov
mov
cmp
les
push
lahf
repnz
(bad)
and
inc
sbb
push
inc
push
(bad)
icebp
in
retf
sub
adc
leave
lods
call
call
inc
outs
int
jge
sub
dec
push
loop
add
imul
add
sahf
jnp
dec
pusha
daa
inc
call
pop
test
int3
cmp
and
ret
cmp
or
cmps
fisub
(bad)
push
xor
xor
std
stc
xchg
into
pop
pushf
js
jle
pop
and
inc
and
inc
test
cs
mov
popa
mov
test
addr16
ss
inc
add
mov
imul
movs
push
xchg
mov
jns
mov
nop
pop
push
mov
mov
in
dec
mov
sbb
mov
inc
xor
and
jmp
(bad)
leave
fs
or
xchg
cmc
retf
mov
call
hlt
sbb
push
iret
sub
jecxz
sbb
sbb
jmp
shr
dec
rcr
pop
mov
icebp
adc
in
jno
cli
inc
mov
sub
dec
repz
and
sbb
hlt
ret
loop
pop
xor
mov
enter
das
cwde
cmps
add
cmp
and
or
neg
bnd
push
xchg
jne
fwait
call
out
and
push
lds
inc
out
push
pop
stos
jg
sbb
fs
xor
test
stos
dec
out
fcomp
sahf
(bad)
xor
into
or
sbb
mov
repnz
std
sar
aam
cmps
(bad)
push
adc
cwde
mov
push
jg
dec
(bad)
icebp
iret
(bad)
loopne
retf
out
mov
dec
xor
test
push
jp
shl
je
ins
stos
inc
sar
(bad)
mov
sahf
mov
in
xor
inc
or
cli
cmp
(bad)
arpl
pop
xor
fs
repz
ret
and
pushf
or
(bad)
outs
pushf
sbb
xor
mov
fst
icebp
stc
sbb
das
push
push
(bad)
xor
xchg
dec
ins
stos
mov
loopne
mov
xlat
dec
(bad)
mov
sbb
inc
lods
pop
push
mov
(bad)
aaa
sbb
sub
xor
(bad)
mov
iret
and
mov
sbb
sub
inc
add
mov
out
xor
shl
sbb
clc
dec
pop
xor
inc
push
xchg
push
test
push
add
jp
(bad)
out
xchg
mov
sub
lds
dec
mov
jo
fwait
dec
rcr
pop
ds
pop
shr
xchg
mov
mov
sbb
add
inc
push
inc
bound
push
mov
pop
xchg
pop
inc
shl
arpl
in
mov
or
jmp
mov
inc
test
mul
lea
test
test
lds
inc
xchg
inc
loop
mov
stos
mov
and
call
or
sbb
test
in
fwait
xor
neg
(bad)
ja
sub
adc
imul
adc
jb
jge
pop
mov
test
or
ficom
cld
dec
xor
cmp
add
div
fstp
sbb
inc
cmovg
and
jmp
xchg
(bad)
adc
xchg
cmp
jno
dec
and
cmp
jo
ror
xor
add
sbb
in
in
jmp
int3
out
ss
push
int
sti
es
fwait
icebp
dec
stos
imul
mov
enter
fidivr
arpl
repnz
inc
pop
jb
adc
xchg
inc
cli
imul
ss
xchg
out
test
popf
sub
cmps
add
mov
dec
into
clc
lock
pop
clc
add
mov
retf
jecxz
lods
retf
ret
cmp
cli
jo
mov
test
adc
fsubr
in
xchg
cwde
shl
out
mov
jecxz
jne
pop
mov
mov
out
dec
xor
pop
mov
loop
mov
ins
and
data16
sahf
loope
ins
nop
(bad)
pop
stos
xchg
retf
inc
inc
aaa
or
ins
enter
ror
or
fisttp
cwde
inc
retf
(bad)
and
push
imul
aad
xchg
adc
jno
sbb
jge
inc
or
push
mov
pop
sbb
cmp
mov
out
popa
dec
xchg
out
mov
shld
jne
in
mov
fild
pushw
ss
test
and
xchg
(bad)
(bad)
push
xchg
js
pop
jp
sub
adc
fwait
(bad)
in
xor
lods
cmp
cmp
sahf
cmp
sbb
mov
pop
jb
mov
mov
(bad)
xor
adc
mov
sbb
jb
or
dec
mov
cwde
sub
mov
jb
xor
leave
popa
push
ret
shl
shl
jge
loope
bound
call
dec
mov
inc
daa
sbb
test
ds
mov
lods
lods
out
popf
push
sub
pop
repz
sbb
mov
stos
int
push
pop
jb
dec
xchg
enter
(bad)
call
sub
pop
call
movs
mov
imul
icebp
iret
into
outs
push
push
inc
dec
or
mov
mov
jl
retf
fs
xchg
pushf
lods
jge
lock
(bad)
and
stos
mov
aam
add
lea
cwde
cmps
std
iret
jg
xor
in
fst
dec
xor
je
jno
jl
mov
inc
push
pushf
lds
add
mov
sar
repnz
mov
in
clc
mov
xchg
jl
mov
scas
and
add
je
cmp
and
mov
cmps
jp
stos
outs
aad
jno
add
xor
xchg
adc
div
xchg
arpl
xchg
dec
dec
jbe
push
sbb
arpl
mov
add
jle
(bad)
xor
sub
cmp
cmp
mov
mov
sbb
lock
addr16
cmp
stos
mov
mov
rcl
mov
mov
push
jns
jmp
psubsw
adc
sub
sbb
cmps
call
out
mov
movs
adc
push
imul
in
or
pop
cmps
push
mov
mov
cmp
shr
or
ret
mov
add
es
cmp
call
dec
adc
lods
movs
push
ja
mov
fimul
fdivr
iret
mov
sbb
test
loopne
test
outs
fs
push
popf
jle
adc
jns
popf
js
out
adc
push
xor
pushf
xor
sub
pop
adc
out
std
xor
fimul
clc
and
mov
jecxz
fbstp
stc
add
int
call
mov
xchg
add
push
in
push
dec
pop
(bad)
mov
push
fs
imul
aaa
sub
mov
mov
adc
(bad)
jns
jmp
sub
loopne
outs
jns
dec
cli
cmp
or
fdiv
cli
sbb
fisttp
sub
or
mov
and
add
pop
pop
int
push
inc
aam
dec
inc
mov
(bad)
(bad)
mov
data16
xchg
add
ja
stos
in
push
add
jg
mov
ins
dec
out
int
push
mov
and
pop
repnz
and
xchg
loope
push
xor
movs
cmp
pop
ss
mov
xor
and
(bad)
outs
mov
ret
add
sub
fimul
out
add
adc
jne
int3
das
aaa
scas
push
or
(bad)
cmc
sbb
not
ins
retf
lea
adc
inc
xchg
sub
das
(bad)
scas
psrad
icebp
ins
retf
and
add
inc
in
ja
jb
mov
out
xor
pop
jecxz
into
ret
and
or
call
jg
sub
jb
mov
jbe
mov
(bad)
add
iret
sbb
iret
mov
dec
outs
push
pusha
sbb
mov
scas
aam
aam
fs
arpl
loopne
in
xor
loope
and
popa
(bad)
inc
xchg
or
(bad)
nop
ss
or
call
sub
ss
ins
add
fisub
retf
inc
xor
adc
stc
enter
add
ins
sub
xchg
rcl
loopne
iret
dec
out
pop
lods
pop
shl
xchg
push
sub
pusha
mov
pop
clc
out
mov
fadd
xchg
icebp
fnstsw
push
or
xor
lds
xor
sti
mov
push
in
sbb
fwait
xor
sub
push
mov
ret
pop
or
jmp
mov
out
mov
les
movs
cmp
mov
jns
mov
push
cs
(bad)
div
fcmovne
dec
aad
cmp
aad
or
mov
call
mov
aas
je
xor
pop
mov
mov
and
dec
push
je
call
mov
jno
sbb
sub
xor
mov
rcr
test
pop
das
(bad)
or
jg
mov
mov
pop
sti
lahf
pop
call
imul
mov
leave
jp
sti
inc
xchg
mov
data16
push
push
add
inc
pop
or
int
push
mov
pop
out
pusha
inc
sub
arpl
sbb
sub
js
loop
cmp
mov
(bad)
aad
pop
out
xor
sbb
jp
inc
ficomp
jns
mov
pushf
and
test
adc
scas
mov
(bad)
call
dec
or
(bad)
xchg
lahf
out
lahf
or
lahf
mov
ins
mov
test
jmp
lods
dec
loop
inc
xchg
ret
add
mov
outs
pop
push
xchg
mov
mov
nop
out
pop
je
shl
scas
imul
out
les
test
cmp
hlt
mov
jns
dec
arpl
mov
idiv
xchg
xchg
lock
pusha
or
es
mov
pop
inc
mov
or
add
mov
xchg
je
jmp
scas
fwait
stos
mov
(bad)
add
rcl
shr
scas
xchg
in
add
cmp
fisubr
test
(bad)
daa
jp
cmp
or
ins
sbb
nop
or
cld
hlt
adc
xor
xor
shl
sub
mov
cdq
imul
push
pop
clc
ror
xlat
or
std
pusha
dec
idiv
dec
sub
movs
ror
psubq
call
fnstsw
mov
inc
aam
daa
arpl
xor
cs
jmp
popf
mov
gs
sub
mov
cmps
jbe
sub
sub
loope
pusha
inc
lahf
test
(bad)
dec
(bad)
xor
popa
pavgw
(bad)
fcom
es
loop
vdivps
bound
loop
push
repz
stos
adc
push
into
add
das
int3
sbb
inc
jle
pop
sub
jle
inc
sahf
sub
leave
and
fnstsw
pusha
push
and
bound
mov
dec
nop
mov
in
(bad)
mov
add
inc
test
mov
inc
pop
jae
xor
scas
rcl
call
lock
sub
jge
fld
sbb
sub
mov
mov
jl
lock
jmp
pop
movs
push
mov
mov
pop
mov
jnp
in
adc
pop
pop
call
cmps
inc
jle
mov
cmp
das
mov
aad
lds
push
sub
movd
in
adc
aam
dec
std
jecxz
xchg
sahf
mov
icebp
ins
cmp
cmc
in
inc
and
repnz
sub
dec
xchg
mov
outs
std
mov
sub
mov
imul
cli
cmc
dec
xor
(bad)
mov
ret
mov
push
(bad)
cmp
or
xor
mov
jne
cs
imul
dec
(bad)
jae
lds
push
xchg
xchg
fsub
mov
push
mov
jb
push
rol
mov
mov
pop
and
jle
xchg
xor
jecxz
mov
fnstcw
jmp
sbb
mov
out
inc
pop
in
outs
jmp
cs
sbb
cs
daa
ss
xor
mov
xor
lods
and
dec
lahf
mov
add
push
pop
xor
imul
fild
cs
jo
nop
int3
call
das
xchg
sub
loop
sub
mov
mov
xchg
lock
adc
std
sbb
push
push
add
rcr
iret
das
ins
icebp
inc
mov
pop
loopne
mov
lods
test
xor
dec
fistp
mov
aam
or
cli
das
inc
pop
arpl
pop
inc
jno
and
push
push
pop
cmc
xlat
mov
enter
test
inc
cmp
xor
addr16
repnz
rcr
fisubr
call
push
mov
ficom
mov
pop
sub
aad
cmp
add
ds
add
mov
dec
or
or
imul
cmp
jae
xor
call
int3
and
add
jnp
sub
mov
and
xor
loopne
jp
loopne
loop
cmp
xor
fild
pop
sbb
iret
jb
cmp
inc
retf
(bad)
mov
jg
leave
xchg
sub
in
and
jle
out
add
jl
add
or
sti
fbstp
repz
dec
mov
xor
inc
push
sub
ss
sub
adc
sub
pop
mov
and
daa
push
inc
jecxz
add
add
xchg
retf
fninit
mov
push
js
jnp
dec
int
or
push
sbb
and
pop
jbe
pop
ss
sbb
jne
add
or
test
int
sahf
dec
in
repnz
ja
sub
push
sbb
inc
push
(bad)
xchg
sbb
test
xchg
mov
shl
aaa
or
int3
loop
pop
dec
fmul
xor
and
pop
(bad)
enter
dec
cmps
in
or
push
xchg
mov
dec
mov
fsubp
enter
call
ins
inc
sub
hlt
hlt
xchg
dec
jno
popa
or
fcom
rcr
test
push
lods
fld
stc
stos
or
mov
retf
aam
repz
in
std
cmp
out
sahf
sub
fld
pop
das
push
pusha
aad
(bad)
out
fild
sub
neg
jp
jns
fsubr
bound
add
shl
lock
cmps
or
jg
or
movs
clc
retf
cmp
cmps
out
pop
mov
movs
cmps
rcr
mov
fst
xor
ss
stos
leave
test
dec
xchg
cmp
pop
cwde
add
sbb
fdivr
lods
add
xchg
and
outs
lahf
push
aam
fisttp
push
sub
and
les
adc
mov
loope
lahf
out
cmps
(bad)
sbb
adc
cmc
jne
cmp
push
jmp
pop
ds
xchg
dec
add
cmps
(bad)
outs
(bad)
ds
iret
mov
jge
or
das
das
pop
scas
dec
mov
and
sbb
ret
icebp
cmp
call
mov
into
dec
les
or
add
nop
push
repnz
mov
rol
shl
hlt
pusha
ficomp
push
add
std
rol
stc
push
sub
aam
scas
jbe
idiv
lahf
test
ja
dec
(bad)
popf
pusha
push
ret
faddp
sub
movs
ds
adc
cmp
jge
int
jae
mov
xlat
popf
jle
out
adc
rcr
or
(bad)
jecxz
mov
fbld
ds
dec
data16
pop
cs
sbb
movs
stos
ja
jo
add
xor
or
fcomp
inc
(bad)
iret
jge
jg
(bad)
sbb
hlt
xchg
in
adc
xchg
or
jecxz
push
outs
jp
cmp
dec
mov
aad
lea
jp
pop
mov
rcr
hlt
mov
(bad)
leave
pop
fcomp
test
call
int
movs
xchg
icebp
scas
(bad)
in
mov
in
aad
jne
and
js
push
leave
add
adc
cmps
mov
pop
or
xchg
out
mov
loopne
add
aaa
movs
dec
dec
dec
push
scas
(bad)
xor
adc
dec
mov
cmps
dec
push
imul
xchg
daa
cmp
inc
out
daa
ret
sub
add
inc
sbb
cmp
dec
mov
imul
cdq
jns
(bad)
loopne
(bad)
retf
int3
inc
jmp
je
push
add
xor
add
lea
arpl
lahf
jns
xlat
cld
rcr
sbb
or
out
data16
dec
cs
dec
push
mov
xchg
scas
sub
cmp
loopne
(bad)
lods
ja
push
gs
push
fdiv
rol
mov
fimul
fidivr
xchg
pushf
mov
sub
xchg
retf
out
adc
jnp
jecxz
cmps
bound
data16
jle
push
gs
pop
or
test
mov
inc
cmp
ins
push
(bad)
adc
cmp
inc
cmp
in
push
pop
mov
int3
pop
xor
pushf
adc
xor
enter
int3
mov
fsubr
xor
(bad)
push
dec
imul
movs
dec
cmp
(bad)
out
imul
jns
outs
mov
iret
into
cmps
pop
ret
adc
inc
or
cmp
and
fucom
aam
das
cs
cld
ins
cld
cmps
les
daa
adc
cli
int
js
mov
pop
pop
pop
aad
pop
and
push
adc
pop
enter
pushf
daa
adc
push
jae
lds
lds
mov
add
(bad)
gs
push
aad
cmp
popf
adc
jae
lahf
retf
add
lock
jns
imul
mov
or
out
mov
sbb
call
and
in
sbb
in
jg
xor
and
add
retf
leave
mov
test
sbb
push
lods
rcl
ret
mov
add
push
sub
dec
or
cmp
or
es
idiv
jecxz
sbb
and
xchg
icebp
ret
call
sub
jno
scas
xor
xchg
mov
inc
stc
or
inc
cmp
cwde
(bad)
cmps
movs
add
fisttp
mov
dec
push
mov
and
es
test
mov
push
dec
or
pop
int3
dec
inc
mov
rcr
sbb
jmp
push
dec
adc
or
call
lds
mov
mov
clc
cmp
mov
ds
cmps
retf
or
dec
mov
dec
inc
push
add
push
pop
scas
pop
mov
stc
xchg
add
clc
cmps
sti
mov
push
mov
cmp
cmp
xchg
rcl
lock
out
gs
sar
sti
(bad)
sub
sbb
mov
aam
sub
fstp
and
jne
or
in
mul
cmp
lahf
cmp
ja
cmp
sbb
pop
jmp
call
inc
or
fdiv
adc
dec
enter
imul
leave
jmp
mov
mov
or
test
iret
int
jo
scas
loop
mov
sub
out
dec
imul
xor
adc
inc
jne
stc
lods
xchg
and
lods
sbb
sub
adc
in
push
test
cmps
scas
mov
sub
mov
imul
adc
xchg
out
and
or
inc
fwait
shr
xor
push
cmp
inc
out
sub
sbb
push
inc
xchg
cmp
fdiv
pop
sub
cmc
add
jns
xchg
jp
push
popa
cs
pop
clc
mov
cmp
dec
dec
or
jl
cmp
adc
test
jbe
loopne
inc
stc
or
push
lock
aas
shr
retf
(bad)
cli
pop
dec
neg
lods
cs
push
popf
or
das
out
es
xchg
cmp
test
shl
dec
fwait
add
scas
xchg
or
xor
test
xchg
jge
mov
cdq
mov
push
jo
jmp
mov
aad
div
lea
enter
and
out
xor
mov
jns
aad
pop
mov
or
fcomi
sbb
(bad)
loope
into
fcmovu
adc
mov
adc
loop
push
push
mov
retf
sub
clc
movs
movs
mov
jp
mov
outs
call
add
xchg
int3
mov
push
shl
mov
movs
lock
jmp
add
loopne
jae
div
push
dec
push
out
cmp
les
jl
push
imul
inc
pushf
mov
addr16
mov
jecxz
xor
mov
inc
mov
xor
cdq
imul
push
daa
imul
pop
xchg
sub
xor
inc
dec
movs
pop
stos
sahf
push
dec
enter
int
xchg
aaa
(bad)
jmp
fisub
in
daa
inc
or
imul
mov
mov
fld
or
jg
mov
jb
xchg
push
push
or
sub
imul
cmp
jp
jmp
popa
nop
cdq
enter
stos
or
dec
inc
loope
push
adc
shr
gs
mov
jbe
fmul
pop
add
jno
xchg
sbb
jmp
xor
pop
sbb
imul
(bad)
stos
xor
cmp
pushf
aaa
(bad)
mov
scas
mov
mov
mov
inc
popf
mov
mov
jbe
(bad)
out
adc
sbb
adc
mov
push
mov
(bad)
dec
fisttp
hlt
je
ja
inc
in
cmp
lods
imul
dec
and
dec
push
xchg
inc
inc
sub
push
(bad)
or
cs
(bad)
out
adc
xor
repnz
or
xchg
(bad)
dec
add
mov
pop
pop
sub
out
cmc
les
add
jns
cli
xchg
sbb
lods
jecxz
xchg
mov
fadd
scas
pop
ins
in
movs
(bad)
cld
fimul
dec
mov
add
sar
jbe
jmp
adc
int
xor
inc
pop
mov
or
(bad)
sub
pusha
js
jecxz
mov
sub
data16
lds
and
fadd
push
enter
ret
icebp
addr16
test
push
jo
cmc
push
sbb
int
lea
mov
arpl
and
in
xchg
fisubr
daa
daa
pop
mov
xor
xor
test
mov
mov
add
inc
dec
inc
and
xchg
repz
xchg
push
(bad)
pop
test
rcr
pmuludq
mov
sub
xchg
jl
adc
ins
xchg
add
xchg
addr16
bound
jnp
loop
out
jl
sti
xor
push
push
out
in
test
mov
ins
fdiv
cmp
mov
outs
aas
fbstp
(bad)
or
adc
xor
cmp
adc
repz
frstor
call
jnp
cdq
jb
cs
jae
neg
or
loopne
mov
adc
jmp
ret
mov
in
imul
scas
add
jle
push
lahf
pusha
mov
xor
outs
(bad)
sub
jb
xor
fild
pop
sub
in
call
div
(bad)
dec
or
push
cdq
pop
ss
push
pop
mov
xchg
lds
push
or
xchg
mov
(bad)
jmp
dec
in
lea
repz
add
inc
and
test
cmp
mov
arpl
xor
repnz
cmp
fwait
jmp
arpl
fxch
cmps
rcl
push
xlat
test
and
int
xor
pop
ror
idiv
js
sbb
add
pop
dec
jmp
cmp
mov
sbb
pop
lods
stos
xor
mov
(bad)
sbb
movs
mov
xlat
out
and
sub
xor
ds
int3
jno
mov
inc
or
pop
or
dec
xor
loop
popa
lds
int
sbb
xchg
pushf
mov
mov
(bad)
jge
and
jle
fistp
int3
add
movs
ja
cmps
iret
and
(bad)
push
into
lods
leave
out
enter
adc
jb
mov
clc
xchg
jl
push
fidiv
out
aad
mov
xchg
test
mov
clc
mov
sbb
add
test
xor
mov
int
(bad)
dec
out
mov
and
call
inc
xor
les
mov
and
ret
add
add
retf
mov
or
inc
(bad)
pop
add
repnz
int3
(bad)
mul
data16
mov
sbb
out
jl
add
inc
jb
ins
dec
jg
or
mov
add
jbe
fidiv
into
test
dec
hlt
fsubr
mov
dec
xor
jecxz
mov
retf
ja
aaa
or
push
scas
ds
movs
mov
add
xor
or
in
pushf
stos
adc
pushf
cmp
rcr
js
call
dec
mov
aam
pop
mov
mov
std
mov
imul
jmp
loope
dec
adc
sbb
mov
pop
leave
shl
(bad)
(bad)
ins
fnsave
fisttp
out
dec
cdq
adc
mov
and
lods
inc
pop
rcl
gs
sar
retf
xor
mov
sub
scas
fcomi
pmullw
adc
test
pop
shl
cmps
shl
sub
push
mov
lahf
sbb
sub
mov
lods
cli
jae
sub
push
stc
xchg
xor
mov
js
pop
das
cs
push
mov
adc
lea
cmp
repz
fnstcw
mov
pop
xchg
sub
adc
mov
popa
jmp
(bad)
ds
cdq
mov
mov
fimul
cmp
daa
fnstsw
mov
test
sub
out
jmp
jp
dec
std
stos
or
and
xchg
(bad)
addr16
or
cmps
adc
xchg
int
(bad)
int
sbb
xchg
push
in
cmps
add
nop
mov
xchg
push
add
mov
popf
sti
xor
inc
bound
adc
fidivr
jo
aam
add
outs
inc
ror
fdiv
movs
adc
mov
shld
pop
inc
cs
mov
rcl
push
pop
arpl
iret
jl
push
cmc
lods
xchg
pop
lds
clc
jecxz
rcr
in
test
sub
add
sahf
cwde
retf
idiv
pop
lahf
xchg
(bad)
lods
pop
jl
inc
test
retf
push
adc
adc
jle
scas
xchg
xor
aas
movs
dec
ja
scas
ds
add
mov
adc
and
or
sbb
je
dec
js
lahf
push
cmp
scas
push
retf
dec
loop
addr16
sub
stos
inc
cs
dec
cmp
sahf
and
pop
push
push
lds
out
sbb
xchg
lock
or
ror
xchg
in
cmp
lods
pop
pushf
imul
push
xchg
push
stos
pop
jl
xchg
inc
pop
pop
jp
fs
fs
push
cld
inc
lahf
imul
add
mov
fstp
cmp
sbb
je
xchg
push
shl
push
or
mov
jecxz
imul
dec
pop
inc
pop
stc
jl
mov
mov
stc
xor
rcl
push
div
scas
mov
dec
lods
das
push
daa
iret
sti
mov
imul
xchg
(bad)
sub
cmp
mov
xchg
inc
ja
xlat
sub
sub
jae
fisubr
stos
call
mov
sbb
lods
inc
mov
add
je
mov
pop
into
adc
jbe
mov
push
jge
adc
jmp
fnsave
xor
retf
dec
ret
inc
cmp
or
jb
scas
hlt
inc
dec
fldcw
or
sbb
(bad)
jle
icebp
and
mov
or
out
fcom
add
gs
fsub
pop
sbb
test
mov
leave
movs
sub
xchg
pop
or
std
(bad)
imul
cld
stc
sti
neg
aad
mov
pop
shl
jmp
(bad)
rcl
cdq
inc
push
cmp
adc
pop
xor
or
mov
xlat
scas
ja
sbb
and
aad
inc
jmp
(bad)
xor
aad
push
mov
dec
sbb
push
and
mov
popf
lahf
hlt
out
push
mov
jno
ror
test
or
les
push
test
pop
push
mov
or
pop
add
mov
or
and
lahf
arpl
or
xor
outs
inc
je
in
pop
mov
xor
cdq
je
adc
mov
mov
rcr
push
dec
sub
pop
ins
pushf
or
dec
fwait
arpl
xchg
dec
push
sti
xor
mov
jns
(bad)
mul
jo
dec
rol
xor
pop
push
pop
cmps
dec
mov
pop
push
jns
or
cli
lods
and
imul
add
or
dec
xchg
cmp
push
inc
xchg
push
mov
add
icebp
pusha
push
xchg
add
inc
jle
xchg
fld
shr
jno
(bad)
jbe
(bad)
js
add
icebp
(bad)
xor
push
pop
test
(bad)
jb
adc
cmps
mov
mul
out
dec
jg
lahf
dec
fimul
sbb
push
add
(bad)
fstp
xchg
xchg
jno
and
fwait
adc
mov
pop
xor
add
mov
js
dec
cld
inc
lea
xchg
pop
(bad)
cmp
fs
push
shl
sbb
lods
adc
mov
in
das
xchg
xchg
cmp
push
jp
mov
pop
jp
mov
popa
dec
sbb
inc
ret
jmp
add
outs
inc
jae
movs
in
and
jnp
inc
in
sti
call
in
pop
xchg
shl
aas
pop
cld
sbb
mov
mov
and
push
lds
fadd
mov
pop
rcl
leave
jge
pop
pop
aaa
or
adc
(bad)
xor
imul
xchg
(bad)
je
jns
add
mov
test
bound
jg
sbb
dec
xchg
jbe
push
mov
outs
mov
and
ret
movs
add
sbb
js
loopne
cwde
addr16
push
fwait
iret
pushfw
pop
push
jecxz
into
cmp
jle
mov
jnp
sar
test
mov
or
ins
adc
fst
and
sbb
int3
sbb
mov
xchg
loope
std
cmp
and
xor
icebp
aam
adc
mov
test
out
data16
or
mov
push
add
jg
in
out
lock
adc
call
inc
je
fsub
sub
mov
test
adc
ss
push
adc
mov
bound
dec
or
pusha
retf
push
jbe
push
shl
scas
movs
scas
fistp
repz
cmp
loope
and
(bad)
stos
cmp
mov
xchg
or
or
push
sti
std
fs
dec
xchg
jns
and
bound
jge
sub
loope
dec
les
mov
jbe
imul
jmp
fisub
jns
mov
sub
push
dec
stc
movs
mov
cmp
mov
ins
pushf
dec
jge
ror
mov
nop
and
iret
ja
lods
cmp
test
mov
(bad)
push
and
lods
add
lock
adc
je
mov
jo
add
popa
scas
(bad)
cld
lds
and
dec
mov
lahf
test
cwde
cmp
addr16
sbb
test
retf
dec
call
fidivr
xor
push
jne
inc
sbb
mov
fucom
bound
imul
adc
add
mov
std
mov
mov
mov
jno
out
inc
mov
(bad)
int
ins
or
jge
xchg
adc
sbb
lock
outs
hlt
das
popa
mov
mov
xor
ret
sbb
repnz
in
je
(bad)
cdq
dec
popf
ins
add
cmp
push
arpl
sub
pop
xor
shl
popa
fisubr
push
or
mov
push
mov
mov
hlt
fcomp
scas
out
sahf
dec
dec
pop
scas
test
int3
sbb
add
mov
mov
iret
ds
(bad)
(bad)
clc
mov
jae
sbb
lods
retf
ja
addr16
sub
(bad)
or
cmp
das
dec
mov
inc
aaa
sub
and
pop
sbb
das
imul
fisttp
sub
jl
daa
pop
jmp
cmp
or
xchg
call
pop
mov
cmps
jmp
(bad)
inc
popa
movs
inc
mov
int
(bad)
push
adc
inc
js
(bad)
in
sti
and
out
imul
mov
jp
cli
jae
and
xlat
movs
sti
jle
push
xor
dec
add
call
mov
scas
jbe
fisttp
jbe
pop
out
sub
sub
aaa
jbe
je
out
or
adc
clc
pop
add
sar
hlt
loop
add
mov
scas
jge
push
int
call
sub
mov
mov
push
out
sti
xor
mov
pop
add
jns
mov
xor
mov
mov
dec
or
xchg
test
mov
push
xchg
xor
add
sub
fucomi
(bad)
shl
sbb
stos
movs
add
or
jmp
call
les
(bad)
sti
(bad)
outs
or
adc
cmp
mov
mov
mov
dec
pusha
jle
jmp
fs
mov
popa
int
ins
das
push
out
dec
push
shl
mov
add
or
popa
sbb
jmp
mov
and
xchg
es
inc
xchg
dec
sub
(bad)
sbb
je
out
mov
xor
sub
or
and
lea
(bad)
and
add
mov
imul
xchg
mov
popa
adc
dec
js
mov
ds
ins
xchg
retf
add
xchg
sbb
dec
cmp
add
(bad)
cmp
cmps
push
sub
adc
movs
clc
push
mul
pcmpgtb
mov
addr16
add
mov
sti
mov
push
call
mov
sub
movs
dec
int3
pushf
enter
in
jbe
cli
hlt
jno
jns
mov
sub
cli
mov
push
sbb
(bad)
ins
sub
or
jmp
js
mov
nop
leave
xor
rcr
das
(bad)
call
inc
int
aad
adc
test
pop
mov
jne
in
imul
jo
sub
or
xchg
les
and
xchg
into
rcl
or
push
pop
mov
repnz
dec
dec
repz
jns
shr
fcomip
xchg
iret
and
push
loopne
aad
cmp
imul
rcr
or
or
fld
jge
lods
aam
test
sahf
aad
jne
cmp
movs
out
add
popf
(bad)
fst
mov
cmp
rdtsc
popa
xchg
movs
retf
mov
mov
and
jp
jmp
xor
jo
mov
xchg
sar
out
shl
cmp
in
leave
inc
ss
cmps
dec
push
xchg
test
dec
and
shl
push
clc
popa
das
fisubr
lock
fwait
paddb
dec
jmp
and
dec
inc
movs
arpl
mov
out
xchg
ins
adc
add
mov
sbb
add
jnp
leave
push
fidiv
inc
jno
push
inc
scas
sbb
xlat
in
sub
mov
(bad)
test
pop
loopne
sahf
lahf
pop
xchg
fdivr
lods
test
mov
and
sub
pushf
push
sbb
adc
and
aad
push
cdq
loop
and
das
repz
mov
loopne
pushf
(bad)
push
mov
imul
iret
fdivrp
repnz
inc
popf
mov
out
and
lods
arpl
inc
pop
pusha
or
mov
add
mov
push
imul
fsub
sub
and
xchg
retf
push
sbb
or
xor
pop
js
jle
loope
cmp
lods
cmp
rol
jp
sbb
xchg
sbb
push
adc
aaa
mov
mov
jnp
mov
inc
push
add
aaa
or
in
cwde
sub
jbe
dec
push
ja
fild
aas
adc
test
add
push
js
dec
push
test
pop
lahf
sbb
jmp
and
mov
shl
pop
shl
jbe
jmp
hlt
and
adc
and
stos
mov
stos
cmps
pshufw
xchg
(bad)
push
jp
dec
cwde
test
cwde
sbb
jae
(bad)
xlat
sbb
test
inc
adc
imul
adc
cwde
(bad)
pop
push
aad
cmc
lods
mov
cmps
sar
jnp
add
retf
clc
int
or
mov
hlt
add
inc
adc
enter
push
mov
out
mov
addr16
push
sar
fidivr
(bad)
cmp
jae
push
mov
ja
ja
out
push
and
(bad)
sbb
cmp
and
jne
outs
out
jmp
psubb
sub
std
jae
fs
stos
lds
inc
xchg
addr16
mov
popf
add
mov
rol
xchg
call
adc
mov
mov
jmp
es
lahf
sbb
int
and
mov
and
xchg
inc
sub
fisttp
jp
daa
dec
ins
or
push
bound
arpl
imul
loopne
inc
pop
mov
nop
xchg
stos
out
push
dec
xor
mov
out
inc
nop
sub
stos
push
mov
dec
hlt
inc
fwait
jb
and
cwde
jo
xchg
mov
cli
ret
out
out
dec
(bad)
add
fild
enter
push
jg
outs
jns
xor
push
aaa
test
outs
adc
jne
jo
fst
int3
jo
add
mov
call
in
mov
mov
loope
lock
mov
cmp
outs
(bad)
fimul
and
mov
repnz
sti
shl
mov
dec
and
xlat
jnp
pop
ret
mov
mov
stc
add
jg
cld
ds
push
dec
int3
or
cmps
call
add
mov
(bad)
mov
(bad)
jns
icebp
ffree
mov
jae
aad
int
sub
test
jecxz
hlt
int3
adc
dec
cmp
pop
int3
lea
mov
rcl
repnz
or
sub
and
mov
push
push
mov
cwde
jge
lds
cmp
dec
cmp
adc
sbb
push
test
sbb
repnz
std
fld
add
sbb
fsubr
mov
cld
into
add
sbb
shr
(bad)
xlat
pop
loope
arpl
aaa
(bad)
mov
(bad)
jnp
repz
pop
mov
jecxz
dec
cmp
jo
xchg
das
adc
sub
or
xchg
jecxz
dec
and
cmp
out
sar
jecxz
daa
sbb
adc
fsub
mov
inc
icebp
(bad)
call
xchg
adc
iret
sbb
sub
dec
dec
mov
xor
push
(bad)
jge
movs
arpl
aam
cwde
fstp
mov
int3
rcl
fxch
fstp
movs
call
jno
sbb
mov
repz
jl
mov
gs
sbb
fimul
push
sub
cmp
push
das
push
xchg
adc
ror
mov
xchg
gs
fmul
pop
push
ins
daa
enter
cwde
push
cli
sub
shl
sbb
jne
stos
pushf
add
sbb
(bad)
cmp
and
or
xchg
mov
or
mov
mov
push
add
(bad)
xchg
lea
push
mov
(bad)
push
mov
retf
in
sbb
dec
fisttp
jg
inc
retf
cld
js
cs
xrelease
cld
jae
dec
hlt
or
mov
daa
push
xor
fist
sbb
and
xchg
test
add
pop
mov
out
loopne
mov
inc
aam
(bad)
cmp
dec
adc
pusha
(bad)
popa
clc
mov
cmps
xor
cmp
cs
adc
jbe
std
loope
dec
ret
and
cmps
les
outs
pop
dec
ret
cmp
push
push
jno
popf
jno
cmp
push
adc
clc
in
add
(bad)
jmp
fwait
cwde
pop
inc
fmul
mov
mov
daa
pop
out
loop
test
cmp
xchg
out
jns
and
mov
aaa
sub
test
andps
sbb
push
mov
mov
mov
cli
aas
in
ins
adc
arpl
ret
(bad)
rol
push
rcr
adc
jbe
rcl
mov
jae
cmp
adc
scas
int
(bad)
cmp
cdq
xchg
sbb
push
repz
or
dec
mov
pop
inc
push
out
pop
repnz
pop
inc
pop
sub
sar
cmp
call
out
mov
sbb
add
or
pop
xchg
stos
jl
xchg
mov
or
(bad)
pusha
jmp
sbb
sub
cli
jmp
add
ds
xchg
sbb
cmp
popf
shl
add
mov
fadd
leave
nop
push
cmp
mov
loopne
ret
daa
rep
dec
xor
call
mov
fs
retf
aam
push
sbb
ja
sbb
rcl
int
movs
pop
frstor
mov
pop
push
into
xor
(bad)
ja
das
pushf
jnp
es
rol
sub
popa
in
or
push
mov
cmc
sub
gs
mov
adc
or
mov
mov
test
inc
jns
das
mov
leave
pop
add
ret
cmps
addr16
(bad)
rcl
retf
fisubr
inc
shr
ds
pop
jecxz
push
mov
adc
stos
add
in
cmp
scas
fwait
jae
push
test
cmc
cmp
jp
cwde
jl
jmp
jp
inc
xor
sbb
out
imul
into
aam
inc
inc
shl
ss
xor
cmp
js
stos
ds
data16
jl
shl
stos
test
les
int
xor
(bad)
jmp
mov
ss
in
mov
loop
aas
hlt
popa
sub
sbb
clc
rol
add
in
mov
dec
add
aam
dec
xor
dec
sbb
in
dec
pop
jnp
xor
rcr
or
retf
mov
int3
(bad)
and
lods
inc
les
popa
xchg
loop
and
jecxz
inc
sub
inc
pop
xchg
neg
into
dec
mov
call
fdivr
and
push
daa
leave
inc
test
pusha
xchg
pop
mov
inc
shl
xor
sub
lea
fistp
cmp
mov
and
addr16
gs
int
out
mov
movsx
mov
pop
xor
int3
lods
add
and
mov
add
popa
outs
add
adc
mov
mov
aaa
jle
mov
push
inc
push
dec
mov
jmp
cld
pop
push
aam
popa
stos
inc
mov
jmp
xor
push
inc
rol
fld
mov
aaa
inc
stos
sub
or
jo
hlt
test
call
test
mov
ss
pop
mov
fsub
or
dec
rcl
ja
inc
(bad)
je
and
pop
mov
call
arpl
inc
inc
ss
mov
add
ja
adc
cdq
ins
in
stos
daa
push
cmp
mov
iret
aaa
popa
adc
mov
push
sub
nop
add
adc
jae
ret
movs
mov
ja
jmp
xchg
in
sub
jmp
mov
mov
sbb
xchg
out
xor
pop
or
fcom
std
inc
cmp
es
ror
sub
and
sub
sbb
xor
lds
cs
push
test
(bad)
aam
mov
pop
push
aas
(bad)
pop
jmp
sub
inc
jae
adc
and
add
ins
adc
call
add
pop
lea
idiv
fwait
add
and
xchg
fbld
add
ds
mov
test
aaa
stos
jne
fstp
fst
pushf
popf
mov
outs
xchg
dec
push
cs
dec
movs
shl
pop
mul
mov
add
xor
cmp
add
push
ja
es
sub
test
adc
stc
shl
pop
dec
(bad)
adc
dec
mov
ror
ret
rcr
sbb
mov
cmp
pop
push
inc
stos
clc
xor
loop
inc
mov
cmp
xchg
fisttp
cmp
mov
jecxz
(bad)
mov
test
adc
arpl
mov
or
(bad)
outs
mov
mov
cli
dec
(bad)
adc
pop
mov
in
leave
mov
data16
lods
ret
cmps
jmp
test
push
out
mov
mov
les
xchg
(bad)
push
pop
pusha
data16
inc
pop
imul
aaa
call
out
add
fcompp
pop
pop
pusha
dec
dec
pop
push
scas
jne
mov
enter
and
sub
mov
lds
imul
add
xor
rcr
dec
cmps
ret
push
std
inc
rcl
rol
add
xchg
out
mov
jnp
and
repz
adc
sti
loopne
push
mov
dec
add
cwde
sbb
std
outs
fdivr
jno
and
push
xchg
nop
mov
mov
pop
inc
pop
test
sub
xchg
aam
and
test
test
add
aas
add
iret
sbb
neg
inc
push
xchg
push
mov
int
sbb
movs
jmp
dec
jbe
popa
retf
pop
push
daa
adc
movs
mov
ss
sbb
dec
inc
adc
inc
inc
or
lods
mov
lock
push
loopne
retf
and
das
jle
in
push
cld
pop
mov
imul
nop
fst
jmp
add
das
push
fisttp
retf
lea
scas
daa
js
mov
inc
ret
sub
loope
sbb
mov
retf
jno
rol
daa
mov
test
or
xor
dec
icebp
cmp
or
or
cmp
fbld
sub
ja
mov
xor
or
and
fild
push
enter
shr
pop
dec
xor
mov
sar
lods
cdq
outs
fcomp
push
iret
fldcw
mov
cmp
mov
arpl
pop
push
shr
inc
imul
aaa
inc
inc
in
xchg
pop
call
sti
inc
jmp
leave
jg
enter
int3
enter
pop
imul
das
xlat
out
mov
xchg
or
outs
add
mov
xchg
add
jmp
jne
mov
inc
xchg
jle
(bad)
int
add
shl
(bad)
pusha
gs
dec
loopne
bound
push
ins
add
jns
mov
inc
push
leave
sar
fldenv
test
mov
je
pop
jo
mov
mov
xchg
dec
and
push
ss
mov
rol
inc
pop
lock
pop
add
shr
pop
xor
mov
xor
bound
retf
push
pop
xor
es
rcl
mov
mov
jecxz
loope
inc
sub
and
mov
sar
jae
push
sbb
mov
(bad)
cmp
mov
xlat
sbb
cs
cmp
stos
mov
add
inc
mov
ins
adc
je
inc
cs
mov
mov
icebp
adc
cmp
jbe
inc
mov
mov
pop
int3
add
dec
xor
jmp
jbe
addr16
stos
pop
or
lods
rcl
or
imul
xor
xchg
bound
pusha
repz
push
repz
test
push
test
daa
adc
retf
add
and
xchg
sti
test
enter
inc
xlat
or
test
fwait
hlt
ficom
(bad)
add
or
sub
adc
jne
mov
idiv
repnz
mov
mov
loop
jb
xchg
mov
movs
and
add
nop
lahf
call
movs
rcl
push
push
mov
jmp
and
mov
std
push
xchg
mov
inc
(bad)
call
adc
mov
sub
inc
sahf
jae
push
mov
jle
or
cmp
add
jo
shr
lods
pushf
push
cli
cwde
cdq
(bad)
mov
pop
imul
in
add
and
mov
jp
pop
pop
sub
fistp
inc
sbb
lds
repnz
adc
out
sahf
sub
int
bound
ret
xor
push
inc
aam
cs
xchg
cmc
sahf
nop
adc
scas
xor
fist
xchg
cmp
out
(bad)
mov
cmp
push
or
cmp
hlt
test
popa
outs
in
jmp
mov
pop
cmp
push
mul
sbb
adc
pop
adc
les
out
dec
mov
rcl
dec
push
cwde
sub
cmp
bound
xchg
sbb
cli
shl
fild
sbb
cmp
pop
fwait
inc
mov
and
cwde
pop
iret
loopne
inc
rol
in
inc
or
imul
or
sti
inc
scas
mov
inc
sub
fs
clc
jo
jbe
mul
jp
inc
push
adc
cmp
js
iret
cmp
leave
test
(bad)
sub
dec
mov
sti
mov
add
fidiv
inc
test
repnz
dec
pop
rol
jecxz
inc
sbb
imul
and
mov
push
retf
mov
sbb
push
clc
aam
ins
xchg
stos
fwait
pop
lds
out
fld
xchg
out
mov
jle
mov
and
sub
mov
enter
(bad)
movs
fst
xchg
test
cld
ja
js
dec
scas
sbb
push
mov
jbe
add
leave
add
and
dec
sub
sub
test
jb
jg
push
test
sub
cs
movs
jmp
add
(bad)
mov
jl
jnp
shr
inc
and
mov
out
add
out
retf
dec
pusha
dec
imul
neg
push
add
ds
clc
repnz
ja
add
sahf
aam
and
ins
pop
(bad)
push
(bad)
imul
(bad)
push
or
dec
pop
out
mov
int3
not
sbb
jl
iret
mov
int3
lods
xor
pop
cmp
dec
mov
into
sbb
rcr
and
das
pop
sar
dec
cmc
push
in
and
pushf
cld
mov
mov
jns
mov
inc
jl
aaa
div
adc
jmp
jmp
adc
dec
enter
dec
setae
jge
add
pushf
icebp
or
mov
lods
test
or
fild
retf
mov
push
popa
mov
xchg
add
mov
mov
in
mov
xor
fwait
push
push
sub
inc
cmp
mov
(bad)
fs
stos
daa
or
lds
test
push
not
inc
xchg
aad
retf
out
into
sub
lods
hlt
adc
jl
mov
or
mov
sub
and
adc
ficomp
cmp
sbb
dec
inc
stos
int3
out
dec
xor
adc
adc
test
ficom
mov
jecxz
pop
push
mov
(bad)
jnp
sbb
xor
inc
sub
xchg
sub
out
xchg
jnp
inc
mov
add
arpl
cli
mov
sub
add
outs
push
push
fs
or
es
outs
adc
dec
sbb
xor
inc
xchg
call
add
add
mov
ret
mov
popf
xor
(bad)
jle
sahf
cmp
imul
stos
and
pop
add
pop
pop
call
add
fisttp
std
repnz
shl
cmp
iret
es
loopne
cli
sahf
adc
xchg
sbb
movs
xor
cmp
add
mov
pop
sar
jnp
dec
sbb
gs
outs
call
pop
adc
push
jmp
retf
fwait
mov
bound
pushf
and
rcl
mov
scas
cli
jecxz
ffree
fnstsw
xchg
stos
adc
jg
mov
add
jno
jbe
dec
aad
fdivr
adc
push
adc
mov
icebp
add
aad
mov
add
call
mov
enter
and
dec
jmp
adc
test
int
es
mov
hlt
out
in
clc
call
cmps
cmp
xor
mov
in
dec
pusha
push
mov
retf
inc
inc
dec
aad
or
aam
dec
cs
xchg
das
cwde
loope
adc
fs
rcr
lods
push
mov
sub
dec
lock
sbb
dec
call
test
push
mov
arpl
imul
add
shl
movs
out
pop
inc
dec
loope
push
xor
add
lods
push
daa
daa
adc
mov
sub
es
test
push
rcl
pop
xchg
imul
mov
jmp
mov
mov
dec
or
test
popa
jnp
xchg
and
inc
mov
jecxz
cmps
cmp
loopne
je
mov
cmps
idiv
xor
jp
add
sub
aam
jmp
sti
stos
pop
loope
pop
push
mov
cs
inc
stc
push
fld
ror
pop
test
or
adc
lods
pop
sub
xchg
jbe
xchg
and
fdivr
dec
push
pop
push
dec
sahf
lods
xchg
popa
cmp
fild
inc
fild
cdq
mov
mov
cmp
std
jnp
(bad)
pop
iret
jbe
clc
repz
sbb
mov
das
xor
fisttp
test
jg
pop
cmp
scas
lods
js
fisub
dec
icebp
sbb
dec
aad
sbb
int3
sub
cli
mov
xor
adc
pop
stos
mov
paddq
outs
or
lods
pusha
cli
inc
or
mov
cmc
or
sar
or
addr16
adc
dec
ds
cli
aad
not
loope
inc
xor
and
rcr
fild
shl
mov
retf
inc
mov
jl
xchg
fiadd
xchg
pop
dec
gs
popa
in
leave
cdq
lea
xor
mov
lods
data16
aaa
inc
aam
jg
xlat
jo
push
ret
shl
test
fld
cli
jnp
enter
repz
(bad)
cmps
out
xchg
push
jmp
jae
jb
and
add
jl
xor
aaa
pop
xchg
push
or
or
mov
fdiv
or
jne
add
mov
sbb
dec
stc
pop
jecxz
or
imul
cli
xchg
xchg
out
mov
dec
adc
cmp
inc
std
jle
adc
(bad)
fs
pop
(bad)
jle
jp
jecxz
jmp
idiv
icebp
sqrtps
cli
sbb
enter
mov
popf
cld
jg
cld
(bad)
push
imul
movs
and
push
jno
jno
mov
(bad)
xor
sub
fcomp
mov
push
xchg
ss
xchg
and
fld
sahf
pop
sub
add
fnstcw
add
xchg
scas
in
pop
xchg
adc
xor
jb
or
or
mov
sbb
loope
jne
cmp
sub
or
dec
imul
sar
jp
sub
call
ret
or
push
fst
(bad)
lods
or
and
retf
(bad)
das
pop
push
pusha
pop
adc
xor
inc
push
inc
cmp
es
xchg
fbstp
fidivr
movs
xchg
(bad)
xlat
out
or
sub
lods
inc
(bad)
inc
dec
bound
ret
aas
sub
out
xchg
mov
shl
cmp
push
aam
mov
xor
daa
dec
fcom
push
xchg
mov
scas
(bad)
mov
dec
jmp
outs
push
aam
out
sub
mov
mov
xchg
pop
pop
pushf
call
add
cmp
pop
adc
mov
xlat
ja
add
movs
and
mov
pop
shr
movs
cmc
(bad)
cmc
retf
leave
xchg
inc
test
ret
cmc
fwait
icebp
rcr
bts
mov
or
imul
sub
pop
jbe
inc
outs
mov
xor
mov
dec
sbb
push
call
xor
mov
mov
div
pop
pop
lods
add
sub
sbb
and
dec
add
sub
mov
fcomp
mov
push
inc
mov
call
jle
push
jmp
stos
clc
sbb
scas
jg
rcr
adc
cmps
xor
mov
add
inc
sti
sti
scas
pop
and
sar
jl
fisubr
jle
add
cwde
add
push
xchg
sbb
pusha
adc
stos
iret
fdivr
icebp
xchg
mov
or
push
ins
xchg
or
cmp
sub
aaa
dec
pop
(bad)
sti
add
repnz
cwde
pop
pusha
nop
mov
outs
adc
fstp
mov
jle
enter
adc
jae
xchg
add
retf
cdq
popf
cmp
(bad)
cmp
imul
mov
mov
pop
cs
push
push
stc
lahf
mov
sahf
into
mov
jb
ja
pop
and
inc
fisttp
(bad)
hlt
ds
out
xchg
aaa
repz
add
and
rol
cmps
(bad)
xchg
jl
repz
shl
sub
ins
repnz
cli
out
ficom
mov
mov
push
pop
sbb
push
push
pop
fcomp
pop
push
adc
mov
xchg
das
push
test
inc
(bad)
cld
sub
sbb
sbb
adc
(bad)
scas
hlt
jns
sbb
jg
into
loopne
push
push
dec
push
shl
daa
mov
xor
mov
cmp
das
xchg
push
dec
(bad)
jecxz
and
mov
pop
xchg
std
dec
popf
out
push
hlt
sbb
adc
cmp
cmp
nop
xor
cmp
mov
dec
xchg
xchg
(bad)
mov
push
push
std
cmp
(bad)
mov
repz
dec
adc
jne
and
pop
dec
push
jb
and
dec
sahf
inc
mov
cmp
pop
ror
sub
adc
push
clc
xchg
jp
repz
or
(bad)
sub
scas
mov
inc
int3
jg
retf
pushf
mov
frstor
push
adc
dec
adc
ret
dec
fild
sbb
push
test
mov
xchg
ret
add
mov
test
jl
call
push
cmps
ins
fnsave
push
inc
xchg
or
ficomp
(bad)
das
inc
ret
push
mov
mov
inc
mov
inc
dec
jmp
adc
mov
push
js
mov
stos
xlat
pop
aaa
jbe
push
cli
jne
cmc
xchg
mov
sub
dec
mov
pop
add
aad
mov
sub
inc
loopne
jle
adc
sub
(bad)
retf
xor
(bad)
lea
fs
cmp
and
dec
mov
push
mov
xchg
mov
mov
sub
sbb
xchg
shl
push
vmread
xchg
jge
xchg
aad
mov
sbb
call
sub
(bad)
mov
dec
jnp
aad
cli
repz
adc
xor
xor
jns
aaa
xor
cmp
add
xchg
pop
stos
push
fidiv
xor
(bad)
mov
leave
(bad)
inc
lds
mov
jge
adc
out
int
mov
mov
inc
jb
test
push
fadd
fiadd
mov
pop
push
adc
or
test
sbb
jne
(bad)
loopne
jl
dec
push
mov
ins
and
bnd
mov
enterw
(bad)
inc
xchg
mov
pop
cld
pusha
pop
daa
cmp
dec
dec
jmp
dec
adc
fstp
sbb
sub
pushf
xchg
out
dec
inc
in
pop
fild
mov
add
sbb
fprem1
xchg
shl
fistp
enter
pop
dec
jecxz
add
fist
jae
sub
test
in
mov
cmp
inc
mov
cmps
add
xchg
and
jno
stos
mov
jbe
jo
pop
retf
jle
out
nop
lahf
enter
dec
inc
leave
lea
cmps
lods
sub
rep
pop
push
and
jmp
pop
and
jmp
inc
push
retf
test
push
dec
in
mov
xlat
leave
sti
xchg
loop
dec
and
jge
and
sbb
and
repnz
(bad)
cmp
stc
push
div
push
into
push
or
cmp
pop
sbb
mov
mov
sub
push
lds
cmp
(bad)
outs
pop
mov
or
xchg
jne
and
pop
mov
lods
sub
dec
cmp
sahf
pop
xor
ret
out
outs
mov
xlat
mov
call
pop
cmovns
push
aad
js
idiv
pop
dec
mov
cld
or
gs
cmp
stc
jmp
or
(bad)
mov
stos
jmp
mov
and
jl
mov
dec
mov
sbb
retf
adc
adc
sub
jae
jg
xlat
inc
xor
push
or
dec
push
xchg
out
jmp
lods
sahf
popf
xchg
int
in
mov
lods
out
repnz
ret
(bad)
enter
cld
ss
xchg
xchg
dec
push
nop
mov
mov
push
sub
and
cmp
xchg
(bad)
or
jne
sbb
mov
sbb
aad
stos
dec
inc
pop
(bad)
arpl
jmp
fdivr
or
mov
add
fcmovnu
and
pop
(bad)
mov
inc
imul
inc
sbb
and
inc
lods
add
lahf
shr
fcomip
sub
popf
leave
jo
cmp
nop
in
mov
adc
fimul
mov
in
jmp
neg
cmp
in
scas
das
call
daa
adc
(bad)
cmp
jmp
cwde
fwait
dec
or
or
sbb
and
or
nop
xchg
mov
fdivr
cwde
push
fstp
mov
and
(bad)
das
test
pop
jno
dec
xchg
aaa
and
fdiv
fist
mov
mov
xchg
add
fmul
xchg
sahf
jg
ins
not
mov
or
in
add
push
or
mov
cmp
scas
mov
shl
fstp
dec
or
mov
xchg
inc
das
fld
sbb
inc
and
pop
sub
or
inc
inc
stos
js
and
cdq
bound
out
cmp
ret
in
mov
push
pop
sub
cmp
mov
retf
push
js
pushf
pop
mov
enter
and
loope
adc
das
push
jmp
push
icebp
xchg
jns
pop
add
icebp
call
cmp
and
neg
cmc
jl
inc
push
(bad)
jl
push
mov
imul
fiadd
adc
push
mov
rcr
test
adc
or
inc
outs
mov
je
aad
(bad)
jecxz
dec
je
or
inc
mov
lods
call
push
xchg
je
bound
xchg
xchg
jmp
push
sub
dec
inc
loope
leave
je
pop
sub
test
jne
push
xchg
aas
(bad)
jmp
jo
mov
stc
pop
fcom
aaa
push
xchg
out
mov
pushf
jmp
lods
(bad)
mov
mov
out
inc
sub
test
jo
mov
enter
and
or
mov
mov
loopne
push
lods
add
adc
xor
loope
add
jge
add
push
or
popf
into
jl
push
inc
into
adc
push
shl
iret
jne
cli
pop
rcl
pushf
mov
sbb
mov
jecxz
mov
jnp
rcl
and
jns
or
into
push
imul
popa
push
mov
daa
jbe
outs
es
adc
jle
jne
stc
out
sub
jne
adc
out
imul
mov
fadd
and
push
loope
adc
mov
or
shl
out
int
xor
pop
aam
inc
test
call
ins
cmps
out
or
push
mov
push
pop
jp
in
jbe
pshufw
fldpi
mov
sbb
mov
push
shl
dec
scas
jl
mov
push
cwde
xchg
cmp
jl
jge
hlt
shl
sbb
in
(bad)
mov
or
jb
mov
shr
add
dec
sub
sub
sub
jg
addr16
cwde
mov
cmc
mov
das
sbb
(bad)
dec
stos
inc
inc
lock
inc
pop
ss
adc
push
and
dec
mov
push
(bad)
mov
fstp
pop
mov
shl
adc
sub
jae
rcr
(bad)
popf
ins
(bad)
test
leave
repz
cs
fld
sar
push
into
inc
add
sbb
pop
mov
cmp
lods
jge
or
xchg
lods
or
or
push
pop
mov
adc
lds
sub
dec
ins
imul
dec
and
xchg
cld
sar
cmp
gs
rol
iret
jbe
call
shl
sbb
test
inc
xchg
sub
sbb
icebp
adc
je
les
std
dec
sub
cmp
jbe
xor
fstp
das
sub
clc
jo
sub
test
fisubr
or
leave
pop
(bad)
mov
and
nop
xchg
imul
xchg
gs
fxch
sar
mov
inc
outs
mov
aam
in
sbb
dec
leave
fimul
sub
or
stos
adc
lods
cmp
push
jge
pop
mov
in
pop
mov
icebp
inc
inc
mov
sbb
sub
or
sub
icebp
cli
xchg
mov
bound
or
sbb
inc
and
jmp
shl
hlt
lods
std
inc
pop
jmp
jp
(bad)
push
inc
cmp
xchg
loopne
repnz
retf
sbb
jo
repnz
adc
daa
ud0
enter
js
add
mov
sbb
mov
sbb
cmp
sbb
push
push
lods
xchg
out
pop
fsub
or
inc
xchg
xchg
mov
add
xchg
fcom
(bad)
hlt
ret
push
jp
xor
sbb
movs
outs
xchg
jmp
add
pop
xor
(bad)
xlat
in
and
dec
icebp
in
fiadd
pop
xchg
test
aad
inc
pop
test
call
dec
cmc
inc
add
aad
sti
xchg
lea
xchg
lods
dec
jnp
push
adc
and
scas
dec
add
data16
mov
cmp
pusha
pop
pop
push
jge
pop
and
call
dec
inc
adc
icebp
out
mov
mov
test
xchg
xchg
mov
(bad)
call
sub
in
pusha
jnp
imul
push
and
inc
(bad)
push
mov
lds
pop
jp
jmp
cmp
fld
(bad)
fbstp
push
inc
daa
cmp
or
jmp
mov
mov
sub
jg
mov
xlat
push
xor
push
je
shr
(bad)
sub
pop
lea
pusha
xor
dec
movs
pop
jmp
outs
jp
add
or
sti
loopne
mov
shl
mov
lds
out
imul
aam
xor
pop
mov
or
in
and
mov
pop
jle
mov
xor
ds
xor
and
xchg
sar
push
and
sbb
(bad)
movs
enter
jg
lods
scas
jl
mov
pusha
cmc
inc
pop
push
adc
cdq
daa
pop
xchg
cmp
call
outs
xchg
dec
popf
sbb
rol
movs
xchg
push
jl
xchg
xchg
jecxz
sbb
scas
push
and
iret
pop
call
sar
cmp
and
daa
imul
int
mov
mov
inc
popf
dec
mov
(bad)
call
shl
loope
xchg
fcmovnu
sub
and
adc
lods
je
fist
test
jge
lods
adc
stos
pop
push
stos
(bad)
repz
xchg
inc
inc
fwait
xor
js
jp
sti
mov
jne
dec
cmp
jg
fld
nop
fnstsw
cmp
jg
out
cmp
sub
pop
mov
push
in
(bad)
repz
aaa
sbb
mov
or
mov
jge
loope
inc
or
mov
xchg
adc
cwde
outs
pop
(bad)
mov
xchg
or
bound
out
addr16
cdq
inc
scas
xchg
push
xchg
jle
push
add
retf
jg
sub
mov
cmc
cmp
inc
sahf
pop
sti
icebp
or
das
movs
jmp
bnd
jmp
mov
or
inc
push
sub
mov
jne
xchg
dec
jmp
scas
cmps
dec
push
gs
es
push
cmp
or
xchg
pop
movs
lahf
repnz
idiv
push
fisttp
inc
mov
adc
das
leave
jns
mov
add
xor
adc
movs
or
fcomp
into
push
jp
inc
mov
push
pushf
fstp
jp
jecxz
in
call
(bad)
jbe
dec
xchg
movs
retf
mov
push
or
sahf
or
xchg
xlat
pop
or
or
jp
or
dec
push
aas
mov
(bad)
std
mov
sub
inc
jnp
imul
(bad)
sbb
shl
clc
xor
mov
mov
push
fwait
mov
cmp
je
js
pop
adc
jmp
sub
push
pop
in
and
jmp
cmp
gs
hlt
jnp
xlat
push
pop
push
add
das
hlt
loope
adc
sub
xor
movs
jno
enter
cmps
or
xlat
mov
pop
ret
mov
push
mov
push
cld
aad
pop
cmps
(bad)
adc
mov
clc
jge
aam
xchg
fucomi
cmp
jle
popa
into
and
mov
sub
jns
mov
add
xor
cmp
cmp
cmp
cli
hlt
mov
xchg
loopne
jb
mov
push
inc
leave
int
mov
aaa
mov
sub
test
test
jmp
in
jno
(bad)
rcl
shr
xchg
mov
scas
jmp
xchg
popa
mov
stc
and
adc
and
scas
fs
out
call
hlt
add
lds
nop
fstp
xchg
xlat
enter
lds
and
mov
ror
in
or
xchg
cmp
fldenv
sub
std
xchg
jecxz
pcmpgtb
push
retf
dec
xchg
sar
xor
sbb
rep
cld
sub
inc
cwde
sub
jnp
pop
push
or
xor
and
add
mov
jo
xchg
cmp
mov
in
enter
cmps
retf
mul
add
loop
loop
add
jmp
in
cmp
xchg
hlt
push
dec
xchg
push
scas
push
jo
(bad)
sub
addr16
mov
fwait
cmp
jg
aad
fwait
pop
lahf
and
xor
loop
mov
and
add
les
call
xor
or
push
jl
dec
mov
sub
jmp
sbb
pop
cld
call
sub
xchg
in
mov
add
mov
push
xchg
dec
mov
scas
popa
jno
fsub
stos
mov
aad
int
idiv
and
mov
hlt
cmp
pushf
inc
pop
mov
cmps
pop
and
pop
jns
xchg
jbe
dec
mov
xlat
test
in
cmps
dec
xchg
outs
or
add
loope
int3
sbb
cmp
add
aad
fwait
std
add
cmp
and
jmp
sub
push
and
gs
mov
test
xchg
rcr
cmp
and
dec
mov
retf
push
imul
xchg
cmp
cmp
add
adc
shr
dec
out
sub
mov
mov
in
xor
scas
lahf
adc
or
in
xlat
int3
retf
leave
and
ss
xor
cdq
dec
xchg
arpl
icebp
cmp
push
jb
sbb
test
pusha
pop
(bad)
loopne
outs
cmp
adc
jle
inc
out
fsub
cmp
jmp
jmp
rcl
and
sub
je
and
and
jmp
cmp
jmp
sbb
sbb
cmp
sub
adc
cmp
dec
sub
stos
arpl
adc
pop
sub
xor
and
cmp
inc
push
std
sbb
cmp
fdivr
pop
test
xchg
jno
imul
adc
cmp
xchg
push
(bad)
lods
hlt
jne
add
push
(bad)
retf
inc
out
pop
inc
mov
popa
and
arpl
mov
or
and
jge
das
loope
dec
arpl
push
outs
dec
lds
mov
in
mov
retf
cmp
outs
sti
inc
xchg
in
outs
nop
push
(bad)
(bad)
jle
(bad)
frstor
jmp
or
dec
loopne
div
into
icebp
retf
push
xchg
add
cmc
cmp
mov
mov
add
xchg
mov
mov
ror
imul
push
aam
xor
fnstsw
dec
or
in
jno
in
cli
push
sub
adc
or
inc
mov
pop
mov
nop
imul
mov
push
dec
jmp
std
mov
mov
cmp
or
or
(bad)
into
iret
adc
retf
inc
push
cmp
mov
aaa
std
(bad)
sbb
call
jmp
xchg
hlt
cld
add
pop
ins
test
retf
lea
ins
out
(bad)
xlat
add
hlt
xchg
pusha
add
or
jno
loop
das
mov
push
retf
jge
addr16
push
push
cmc
jne
mov
pop
or
cmp
cmps
jmp
mov
bnd
in
mov
push
dec
xchg
into
cmp
(bad)
jnp
push
or
dec
repnz
mov
mov
xchg
gs
inc
leave
daa
test
ins
leave
dec
sbb
pop
sub
mov
mov
mov
mov
jmp
cdq
jmp
(bad)
xchg
adc
cmps
fs
pop
cmps
jp
xchg
popa
jb
in
enter
jg
pop
sub
push
xchg
xor
out
loope
xchg
xor
movs
mov
aas
lods
je
call
test
xchg
or
(bad)
xchg
jge
inc
lock
movs
mov
aam
mov
mov
jmp
stos
shl
mov
adc
fwait
mov
mov
adc
pop
or
push
push
outs
cmp
fnstsw
cli
enter
add
sub
mov
stos
cmp
or
cmps
cmp
push
rol
in
jmp
out
cli
or
ja
mov
ja
sbb
(bad)
lods
adc
popa
aad
cmps
adc
add
das
and
sahf
fxch
imul
frstor
int3
jb
lds
cmp
adc
imul
maskmovq
imul
cmp
hlt
call
idiv
adc
test
and
sbb
xchg
push
ficom
mov
fdiv
mov
jecxz
push
loope
retf
sbb
or
(bad)
jg
je
and
cmp
dec
sub
cmps
(bad)
or
ret
or
sub
ss
pop
adc
mov
cs
mov
addr16
dec
push
dec
mov
(bad)
jecxz
sub
or
cmps
in
sbb
mov
xchg
movs
fnsave
pop
call
inc
push
push
mov
cmp
aas
mov
das
bound
mov
popa
adc
(bad)
fmulp
shl
dec
mov
rcl
popa
stc
cmp
mul
div
rol
inc
push
ret
test
jnp
xchg
mov
pop
repz
repnz
jl
dec
push
sub
mov
popf
cs
mov
sub
pop
scas
imul
je
cmovle
icebp
inc
lods
div
or
dec
sar
mov
push
mov
into
mov
push
int
add
int3
out
pop
pop
pop
xor
jb
mov
por
jnp
outs
ja
je
and
xor
and
inc
push
mov
in
ror
push
dec
sub
ret
push
mov
popa
retf
add
push
neg
int
cmp
push
xchg
xor
aad
movs
cs
pop
xchg
in
mov
(bad)
mov
inc
(bad)
gs
repnz
jmp
push
adc
xor
jg
pop
inc
jg
stc
bound
je
sar
xchg
clc
inc
dec
std
xchg
sbb
mov
ret
or
jnp
and
jge
(bad)
or
adc
and
jb
cmp
cs
or
inc
ds
push
sar
repz
adc
lods
out
dec
xchg
aad
call
leave
push
cmovns
movs
fld
or
xchg
mov
pop
ret
test
loopne
popa
shl
out
mov
ds
bound
dec
iret
cmps
test
adc
mov
inc
aas
call
loop
xchg
inc
in
jbe
mov
fucomp
pop
jb
es
scas
jnp
cwde
xchg
(bad)
mov
ss
ror
add
movs
mov
inc
mov
mov
xchg
dec
dec
jbe
cmc
adc
jge
loop
xor
jl
pusha
or
outs
mov
das
lea
scas
test
add
ins
(bad)
(bad)
sti
es
ror
xchg
icebp
repz
xlat
fcmovbe
mov
movs
and
mov
enter
imul
dec
stos
mov
push
div
shl
outs
loopne
mov
repnz
mov
fdiv
stos
pusha
iret
(bad)
adc
mov
push
retf
out
xor
ja
dec
lahf
cmps
(bad)
xlat
mov
dec
mov
not
data16
fstp
enter
and
cmp
out
add
dec
data16
or
cmp
mov
add
dec
test
test
push
push
ja
and
loopne
cmp
push
mul
ret
popa
dec
inc
mov
rcr
iret
xor
mov
sub
(bad)
xor
adc
out
in
iret
inc
fcomi
pop
repz
push
mov
in
loope
mov
movs
cmp
(bad)
cdq
push
fwait
enter
ins
push
mov
jle
cmp
nop
stos
in
mov
cmps
push
jae
mov
outs
inc
push
jmp
add
popf
adc
aaa
retf
sub
mov
out
loope
dec
ds
(bad)
xor
cli
ret
sub
or
jb
pop
mov
out
pop
adc
mov
push
jns
fild
push
movs
repnz
stc
dec
ds
out
mov
xchg
test
mov
push
outs
hlt
leave
sbb
xlat
fild
pusha
mov
push
cmp
pop
mov
dec
mov
mov
sbb
mov
cmp
pop
mov
out
or
repnz
cmps
inc
sbb
(bad)
push
jg
inc
mov
cmp
sbb
sbb
mov
pop
lea
sbb
cmp
cmp
ror
pop
movs
push
in
mov
mov
add
jmp
adc
mov
xchg
mov
cmc
add
add
ror
or
int
pop
movs
xchg
fadd
and
xchg
enter
inc
std
dec
mov
inc
loope
sub
mov
sets
ret
daa
adc
mov
sub
je
lods
push
arpl
mov
mov
mov
or
mov
mov
outs
jle
xchg
pop
jb
or
sbb
adc
add
inc
cs
cwde
pop
add
jg
aas
shl
mov
sub
and
and
sti
mul
stos
cwde
fcom
sti
js
(bad)
mov
xor
dec
into
stc
in
nop
xchg
inc
mov
xchg
dec
xchg
push
sub
cwde
arpl
repz
cmp
(bad)
xchg
imul
aam
inc
jb
ds
pop
jmp
cmp
mov
movs
out
push
test
and
fmul
cs
mov
cmp
xchg
ret
pop
mov
and
and
mov
dec
popa
test
mov
jmp
stos
xor
xor
ja
pop
data16
sub
pop
in
dec
jbe
enter
push
jnp
adc
push
mov
xor
cmp
arpl
into
xchg
jnp
or
jmp
jne
(bad)
out
scas
ret
pop
add
pop
ss
push
aad
adc
div
les
popa
cld
loop
add
enter
sub
adc
fbstp
cmp
or
call
call
pop
adc
inc
movs
dec
pop
inc
mov
out
cmp
stos
loopne
ror
mov
push
in
jb
dec
mov
data16
or
iret
sub
lds
ret
repnz
add
mov
adc
iret
fidiv
add
fld
dec
ins
es
inc
(bad)
les
popa
(bad)
mov
bound
scas
mov
das
jno
xor
mov
test
int3
mov
(bad)
stc
into
cld
adc
in
dec
add
xchg
lea
cli
and
or
mov
mov
xchg
jp
dec
or
fstp
sbb
fdivr
jb
mov
jo
loopne
xchg
pop
dec
mov
xchg
mov
jns
dec
push
inc
shr
mov
push
pop
rol
call
cmp
outs
inc
fidiv
neg
push
pop
xor
stos
sub
push
int
iret
shr
sti
xlat
pop
shr
cmps
xor
rcr
fild
lods
and
xchg
xlat
imul
xchg
aas
in
add
inc
sbb
mov
dec
scas
mov
shl
sti
sbb
dec
clc
push
push
imul
add
out
fstp
xor
push
ds
or
dec
test
mov
cld
adc
and
mov
or
jmp
in
jg
lea
div
jno
mov
cmp
sbb
mov
pop
adc
in
call
sbb
pusha
stos
pop
loope
add
out
adc
fstp
jl
inc
jmp
fist
cmp
pop
enter
(bad)
pop
push
test
pop
fadd
imul
pop
imul
dec
pextrw
or
(bad)
loopne
jle
cmp
ret
shl
xor
push
hlt
div
popa
xchg
add
ficom
popa
xor
ja
imul
cwde
in
inc
(bad)
stc
into
rol
movs
add
scas
rcr
retf
add
nop
or
xchg
mov
mov
ins
inc
movzx
gs
push
cmps
add
pop
scas
cmc
sbb
sahf
ins
imul
dec
fnstsw
mov
sub
mov
cwde
cmp
repnz
(bad)
push
sub
jmp
push
clc
(bad)
sbb
mov
pop
sar
adc
ss
(bad)
scas
mov
mov
dec
cmp
outs
adc
sub
fcmove
mov
and
les
sbb
add
add
int3
cmp
mov
xor
test
xchg
adc
mov
int3
adc
mov
jnp
push
sbb
gs
sbb
or
loop
int3
cdq
jmp
test
cmp
xor
cmps
(bad)
popf
pop
dec
cwde
push
xchg
mov
ret
xor
iret
pop
fcomp
jmp
mov
cmps
das
mov
nop
(bad)
push
xor
not
and
out
xor
mov
shl
leave
iret
mov
cmp
neg
push
adc
add
rol
in
jne
fst
cmp
adc
jp
and
arpl
fsubr
scas
lods
cdq
xchg
or
cdq
mov
in
sub
push
sahf
fs
mov
jbe
(bad)
xchg
rcl
rcl
retf
jno
pop
enter
push
stos
nop
lahf
je
push
aad
mov
pop
in
(bad)
xchg
mov
mov
push
scas
inc
mov
inc
mulps
sbb
pop
inc
push
jbe
int3
clc
pop
xor
push
cmp
mov
adc
push
loope
pop
les
stos
mov
into
push
or
call
enter
rol
mov
or
test
in
in
sub
dec
mov
repz
inc
dec
mov
bnd
jb
adc
push
push
and
lods
adc
cmps
mov
cmps
add
push
jno
in
xchg
ret
ror
into
popf
push
mov
cmps
jo
jl
push
nop/reserved
sbb
mov
mov
(bad)
xor
xor
movs
mov
jg
jae
fs
cmp
ret
jmp
(bad)
jmp
mov
mov
add
xchg
and
or
and
not
pop
xor
std
and
icebp
int
and
pop
not
sbb
push
sub
mov
repz
div
xchg
sbb
lods
jmp
mov
cli
push
fist
mov
and
push
add
pusha
pushf
inc
cs
icebp
cmp
fs
data16
and
push
push
pop
test
push
or
ds
add
out
rcr
stos
cmp
lock
sbb
xor
adc
inc
adc
cwde
nop
push
adc
stc
pop
push
adc
jno
mov
daa
jge
test
cmps
dec
ror
add
push
stos
pop
(bad)
je
fcmovnb
dec
mov
or
daa
aaa
push
sbb
daa
cdq
mov
inc
sub
mov
ffreep
mul
or
ins
cmc
xor
mov
shl
xor
cmp
and
pop
out
cmps
test
cld
mov
icebp
cmp
scas
dec
sti
gs
loope
mov
mov
mov
in
sahf
xor
ja
mov
stos
aaa
jecxz
scas
or
sbb
adc
sar
mov
call
mov
pop
inc
call
stos
add
inc
sub
add
repnz
cmp
add
sbb
ja
out
icebp
pop
lods
adc
inc
dec
cwde
mov
dec
sti
pop
arpl
fcmovu
sbb
xchg
mov
into
mov
dec
not
push
nop
inc
popa
mov
jmp
sbb
pop
aad
push
and
inc
xchg
mov
push
fdivr
test
gs
(bad)
nop
adc
in
mov
fstp
jb
in
xor
dec
push
xchg
dec
aad
mov
adc
lock
adc
ror
sub
xchg
and
push
in
clc
sub
mov
or
call
fimul
scas
inc
and
out
mov
mov
adc
(bad)
enter
cdq
cmp
inc
test
stc
(bad)
jecxz
xchg
retf
cmc
sbb
inc
out
jae
jl
xor
scas
jle
sti
sbb
cli
cdq
std
pop
aam
call
pop
cli
mov
adc
sbb
loope
aad
jle
stc
popa
push
push
in
mov
sbb
cs
jle
cmp
gs
lds
(bad)
(bad)
adc
shl
lods
int
mov
push
int3
dec
pop
jne
scas
stos
xor
sub
(bad)
retf
in
push
inc
xor
adc
sub
xchg
rol
mov
int3
pop
shl
or
lods
dec
imul
cdq
cmp
lods
and
xchg
inc
mov
cdq
rol
sub
fldcw
mov
imul
fadd
loopne
pop
mov
jae
sbb
in
jecxz
add
shr
popf
rol
sbb
mov
loopne
rcr
adc
jns
push
cmp
cld
loop
push
pop
imul
sbb
mov
xor
jmp
jg
das
push
shr
in
imul
es
icebp
xchg
addr16
sub
jbe
xchg
fistp
mov
adc
pop
mov
test
xor
sub
inc
xor
test
ficom
retf
mov
lea
cmp
fwait
push
mov
adc
ins
xor
add
and
adc
mov
call
mov
pop
push
xchg
lahf
inc
pop
das
xlat
repz
jbe
inc
xor
es
jle
mov
retf
int3
push
or
cmp
push
push
mov
pop
cld
js
or
fldcw
mov
loop
cdq
jmp
aas
cdq
ss
and
(bad)
xchg
mov
sub
or
test
adc
add
in
std
pop
or
push
or
pop
stos
dec
or
es
cmp
mov
push
and
mov
cmps
cli
jecxz
test
push
int3
jno
pusha
fist
lds
sbb
mov
cmp
push
inc
pop
(bad)
aad
imul
hlt
adc
imul
shl
mov
pop
jns
sub
sbb
add
jbe
and
xor
imul
test
push
dec
dec
inc
lock
loop
or
sub
(bad)
ja
push
and
jne
sbb
mov
and
push
mov
add
or
xchg
mov
dec
cs
cdq
imul
cmp
dec
sahf
xchg
ror
cmc
bound
jne
enter
movs
mov
push
push
xchg
push
push
mov
sub
adc
stc
dec
mov
push
mov
mov
xor
push
sub
lahf
or
pop
sub
mov
jmp
popf
out
lods
and
sbb
xchg
cli
ss
je
or
imul
xor
retf
ret
in
adc
jmp
xchg
stos
mov
repnz
jbe
xchg
lds
arpl
sub
pop
shl
test
(bad)
fs
mov
xor
hlt
stos
(bad)
hlt
pop
jo
neg
gs
mov
mov
call
scas
call
mov
xchg
shl
pop
add
add
repz
mov
cwde
xchg
or
dec
lahf
mov
aad
movs
sti
or
jnp
jb
or
push
dec
dec
retf
retf
loopne
sbb
fidiv
add
stos
xor
inc
xchg
add
stc
imul
add
mov
adc
jmp
sbb
sub
dec
xor
sbb
rol
ret
mov
add
mov
es
jg
cwde
jmp
dec
div
dec
inc
jne
out
and
xor
jmp
mov
inc
mov
xchg
and
std
or
xchg
aam
mov
dec
(bad)
lea
push
aas
xchg
mov
jno
jne
out
or
aad
scas
inc
xlat
pop
mov
add
scas
fwait
in
pop
int3
jb
xchg
dec
sar
and
jp
inc
push
dec
mov
stos
in
dec
stc
xlat
mov
fcomp
mov
sbb
adc
and
in
ja
stos
dec
aam
repz
in
in
bound
pop
cmp
popf
out
cli
jnp
xor
aaa
mov
popa
repz
adc
add
cmc
stc
push
out
repz
popf
aas
sub
out
jnp
(bad)
neg
mov
jl
or
bound
aad
fbld
ins
jmp
pop
repz
shr
push
out
pop
into
sbb
and
jno
mov
jns
sbb
loop
in
dec
stos
mov
sahf
sbb
fdivr
(bad)
adc
fsub
das
push
push
xlat
scas
or
sbb
fs
je
shl
pop
popf
inc
sub
mov
je
cdq
cwde
xor
mov
mov
(bad)
push
xor
enter
push
idiv
fwait
dec
cld
repz
ret
and
xchg
push
pop
xchg
out
js
sub
push
mov
pcmpeqd
retf
jmp
int3
dec
test
and
adc
pop
nop
mov
aas
arpl
call
in
push
xor
jle
sbb
or
jg
ret
and
retf
push
je
mov
call
shl
mov
pop
adc
pusha
ret
pop
imul
adc
sub
and
loope
jae
out
test
inc
dec
out
xchg
int
cmp
adc
in
pushf
and
nop
and
xchg
pop
add
jne
push
lock
pusha
xor
mov
pop
mov
jmp
pop
idiv
mov
(bad)
fadd
sub
mov
inc
ror
lods
push
push
mov
dec
cmp
test
arpl
sbb
xchg
inc
cli
xchg
loope
xor
push
ds
sub
lods
xchg
lods
mov
pop
lahf
push
lds
adc
fwait
dec
xor
push
(bad)
push
jns
mov
fwait
sti
xchg
loope
xor
fs
cli
cmp
fs
cmp
loopne
jle
sub
xchg
jo
ret
pop
(bad)
xchg
cmps
jmp
and
push
pop
jecxz
aas
in
ins
iret
inc
mov
or
mov
mov
pushf
bound
addr16
mov
push
mov
sbb
std
mov
std
and
pop
fs
xor
mov
mov
sbb
call
or
mov
mov
ds
int
adc
jecxz
movs
mov
push
mov
inc
and
jmp
mov
xor
mov
sbb
push
sub
mov
push
sti
push
cmp
or
sbb
and
sbb
gs
add
dec
in
xlat
sbb
pop
loop
jecxz
sub
mov
arpl
and
push
fs
scas
fdivr
(bad)
das
into
mov
cmp
ret
or
cmp
inc
pop
sahf
inc
jle
jno
sbb
lods
pop
and
test
iret
sbb
fld
test
xor
mov
cwde
das
cwde
ret
sbb
jbe
lahf
or
xchg
vmovd
sti
mov
shl
cmps
and
or
fs
push
mov
outs
jp
mov
push
jo
cld
and
jnp
loope
out
pusha
jp
cwde
aam
push
sub
cmp
fild
mov
sar
jo
gs
xor
inc
loop
shl
adc
fld
(bad)
int3
into
sahf
xchg
xor
(bad)
aaa
or
jp
les
cdq
mov
stc
add
mov
outs
fucomp
mov
mov
enter
cmps
sub
outs
xchg
fwait
iret
(bad)
jno
cli
cmp
out
scas
scas
(bad)
call
push
and
pop
dec
fdiv
lahf
movs
mov
daa
mov
not
mov
inc
mov
sbb
push
inc
out
test
pop
xchg
popf
pop
aas
jge
adc
ja
sahf
inc
(bad)
cli
add
movs
cmc
in
add
mov
xlat
fcom
jno
jl
pop
inc
in
mov
fcomip
xor
add
sbb
(bad)
jae
push
out
inc
xchg
mov
scas
fsubr
dec
adc
jns
out
js
stc
jae
jno
jmp
or
icebp
std
pop
cmc
adc
mov
and
leave
dec
sbb
mov
xchg
mov
retf
push
and
dec
iret
sub
adc
cmp
jns
test
fcmovnu
mov
cmps
adc
nop
push
out
jl
cmps
pop
cli
jle
int3
add
fsub
jge
pop
stc
nop
add
ss
cmp
or
into
test
iret
and
repnz
ja
hlt
sub
je
xchg
cmp
push
add
adc
jne
dec
loopne
or
xchg
dec
mov
add
pushf
shl
inc
add
xlat
fwait
popf
imul
imul
mov
test
dec
push
xchg
xor
jmp
hlt
stos
pop
les
cmps
sbb
sar
cmp
mov
(bad)
ja
or
(bad)
fld
sbb
in
mov
sar
cmp
outs
in
clc
dec
jge
cmp
sti
out
fisub
xor
jns
push
inc
mov
int3
xchg
movs
mov
mov
call
std
test
popa
inc
push
pop
cmps
stos
daa
mov
adc
push
add
(bad)
fstp
push
mov
adc
imul
push
xor
jge
mov
outs
retf
mov
int
add
imul
add
addr16
cmp
inc
pop
sbb
cmp
call
jge
xor
push
mov
dec
sbb
mov
mov
pop
mov
add
push
mov
enter
sub
mov
imul
dec
sbb
push
sub
imul
pop
out
push
and
sbb
mov
mov
lods
adc
call
and
mov
int
xor
ss
and
js
push
fimul
pop
mov
sti
or
mov
arpl
add
push
mov
imul
add
enter
das
or
std
popf
cmp
sbb
or
jmp
mov
cs
cdq
sub
jbe
mov
jno
adc
movs
sbb
movntps
dec
lods
fmulp
addr16
jbe
frstor
test
fld
push
lds
push
rcl
inc
jmp
js
xchg
dec
enter
push
or
adc
sub
xlat
and
cmp
outs
out
xchg
pusha
popf
loop
clc
leave
xlat
mov
in
mov
les
push
or
in
inc
jb
fs
stc
dec
ins
push
popa
adc
lea
fild
mov
pop
cmp
mov
out
xchg
lahf
xchg
sub
data16
in
enter
das
out
push
test
out
add
std
cmp
das
into
dec
stos
ins
fldcw
ret
cmps
lods
dec
jns
sub
ret
inc
dec
fnsave
mov
mov
inc
adc
sbb
jns
ins
dec
mov
lahf
int
ds
clc
add
inc
shr
sar
pop
or
hlt
push
sbb
jnp
inc
ret
jmp
pop
fdiv
push
add
aas
ins
cmp
out
movs
jmp
jns
pushf
bnd
ja
(bad)
lock
int3
xchg
movs
das
xor
dec
xchg
add
call
ds
std
jns
bound
leave
dec
aam
rcr
das
push
sbb
(bad)
push
add
push
mov
das
mov
mov
fist
iret
cmp
(bad)
enter
mov
cmp
jg
push
ret
bound
jae
mul
mov
mov
ja
inc
cmp
std
retf
jne
repnz
iret
mov
outs
aam
xor
xchg
or
call
xchg
neg
mov
std
inc
mov
dec
push
in
add
add
and
sbb
jmp
sbb
les
pop
mov
sbb
add
mov
cmps
jb
popa
gs
stos
sub
daa
popf
rcr
and
ficomp
xchg
test
hlt
xchg
pop
js
not
pop
and
adc
rcl
retf
push
pushf
add
push
sub
out
mov
out
mov
mov
pushaw
jle
imul
jne
jp
test
sbb
cmp
das
inc
inc
xor
jne
mov
movs
dec
push
inc
stos
cli
outs
daa
mov
and
sbb
ins
add
adc
dec
les
(bad)
cmc
dec
mov
test
push
je
mov
xor
mov
rol
rcr
ins
add
cmp
cmp
lahf
xor
or
cmps
push
loope
fidiv
sub
adc
mov
xchg
clc
inc
pminsw
push
pop
and
cmp
mov
jne
push
push
xchg
retf
ret
lds
cmps
dec
aad
outs
add
loopne
movs
out
push
jl
add
cli
inc
xchg
jae
inc
repnz
jo
mov
aad
fisubr
pop
in
and
xchg
lea
sbb
arpl
hlt
enter
jb
sbb
pop
cmp
sub
stos
fcmovbe
cmp
jecxz
ja
jmp
push
push
neg
sahf
(bad)
call
xor
ficomp
movs
das
loope
mov
enter
jno
cmp
out
or
xor
imul
xchg
or
xor
nop
lea
(bad)
in
xchg
lock
fstp
fwait
mov
and
adc
test
cmp
pop
pusha
repz
push
mov
lds
fdivr
push
dec
inc
adc
in
call
js
push
adc
jmp
outs
imul
sbb
lock
out
xchg
cmc
scas
jae
fist
mov
xor
icebp
retf
movhps
inc
nop
mov
add
push
sub
add
jne
(bad)
(bad)
(bad)
cmp
inc
test
jmp
jbe
adc
inc
push
sub
sti
cmp
jmp
ret
out
jae
cmc
imul
xlat
xchg
mov
lahf
push
push
pop
inc
mov
xlat
mov
jp
je
fcomp
mov
mov
mov
dec
pop
pop
lock
cmps
mov
arpl
int3
jno
xor
jecxz
int
sahf
imul
inc
fisubr
pop
out
imul
and
outs
dec
dec
into
mov
jmp
or
ins
scas
jge
xchg
xor
pop
repz
sub
xchg
xchg
or
dec
enter
call
lds
dec
adc
xchg
and
sbb
push
mov
in
ror
add
inc
mov
(bad)
xchg
call
sbb
jg
jmp
sbb
jp
jmp
inc
sbb
xor
aas
dec
mov
xchg
dec
std
inc
push
retf
int3
sub
rcr
mov
or
mov
sti
jmp
dec
xchg
in
jbe
fmul
sbb
outs
or
mov
addr16
cmp
movs
add
rcl
stc
hlt
aas
js
aam
loopne
push
mov
cmp
mov
loope
jnp
out
mov
dec
test
ja
out
fmul
inc
inc
push
or
xor
lods
lock
leave
xor
sub
pop
adc
mov
jecxz
cmps
ss
mov
test
push
sbb
mov
mov
add
jge
(bad)
in
sbb
push
aad
retf
push
pop
pop
lea
add
jns
scas
imul
push
sbb
int
and
aas
repz
mov
movs
movs
cmp
int
cmps
hlt
and
jp
call
inc
dec
(bad)
pop
jno
xchg
clc
pop
cmps
push
fs
fimul
add
sbb
add
pop
jns
mov
jo
repnz
call
jo
nop
mov
mov
mov
cmp
fsub
imul
pop
or
ret
and
sub
push
xchg
xchg
mov
lahf
loopne
pop
(bad)
ss
pushf
and
and
or
xor
fucom
xchg
mov
push
mov
outs
bound
(bad)
scas
in
sub
xchg
mov
pop
mov
lahf
push
jecxz
dec
jbe
xchg
mov
(bad)
pop
stc
adc
mov
mov
xchg
(bad)
sub
inc
push
clc
ret
jmp
call
or
mov
lods
(bad)
es
daa
into
(bad)
mov
popf
mov
out
inc
test
out
jne
fcom
and
movs
sub
mov
(bad)
sub
adc
sub
adc
xchg
je
xor
or
stos
cmp
dec
sub
fld
hlt
stc
dec
xchg
mov
lds
push
mov
push
shl
scas
mov
enter
test
pop
in
dec
nop
mov
xchg
mov
stc
mov
fstp
setge
pop
dec
ins
dec
mov
call
add
mov
fld
push
leave
xchg
xchg
xor
cmp
dec
adc
lahf
add
ins
shl
sub
ficomp
cmc
outs
inc
loop
ja
mov
dec
sub
jno
sub
outs
shr
add
ss
add
dec
sahf
shr
mov
repz
loopne
fdivr
mov
sbb
xchg
lods
call
mov
neg
sub
pop
pop
xchg
jo
and
xchg
mov
and
adc
mov
sub
and
push
jecxz
adc
mov
jne
adc
movs
cmc
ja
fistp
pop
pop
sub
jns
bound
xchg
pop
push
mov
les
pusha
mov
sar
xor
pop
shl
(bad)
and
push
dec
mov
ins
stos
fcom
adc
or
jl
call
xor
mov
adc
jecxz
cmps
jecxz
(bad)
push
and
test
shr
out
mov
inc
stos
lods
jge
clc
pop
test
inc
add
push
sub
dec
cmp
adc
pop
test
je
and
or
out
dec
adc
cmp
mov
fistp
mov
xor
xlat
push
imul
add
cmp
inc
test
mov
jecxz
push
mov
test
loopne
sbb
mov
sahf
mov
shr
pop
retf
xchg
fsub
adc
stos
sahf
mov
int
push
sbb
cmp
clc
dec
ret
or
mov
dec
imul
inc
lods
xchg
inc
sub
test
xor
sti
popa
test
scas
inc
bnd
inc
mov
cmp
push
cmp
hlt
add
mov
aad
ret
fiadd
sar
in
fistp
mov
imul
jg
out
sub
jp
and
sbb
xchg
or
inc
xor
enter
sub
mov
ds
nop
pusha
rol
scas
out
stos
mov
mov
jne
sbb
adc
in
xchg
sub
push
stos
push
jnp
ret
lods
sahf
repnz
cmp
inc
or
push
and
cli
jmp
inc
sub
ret
jp
shl
dec
push
and
cwde
pop
aas
out
adc
cmp
out
mov
test
fwait
ja
mov
cmp
ss
clc
push
test
xchg
mov
test
push
cmp
test
dec
jb
movs
add
inc
pop
mov
inc
dec
clc
jmp
popf
fistp
sub
out
and
or
jp
xor
out
pop
pop
jle
jl
inc
or
rcr
fwait
cs
xor
rcl
sbb
push
ja
les
push
pop
sahf
mov
sub
div
iret
aad
int3
sub
mov
jl
outs
add
jge
repz
jo
jle
and
push
push
dec
stc
sub
lds
pop
push
fwait
sar
adc
das
repnz
jno
or
lock
mov
xor
or
push
mov
mov
movs
xchg
or
jmp
xlat
data16
or
mov
xor
dec
lock
add
push
outs
push
rcl
and
mov
cli
mov
scas
into
fiadd
lock
mov
aam
or
pop
xchg
jmp
(bad)
out
loopne
sbb
inc
je
fcom
in
movs
stc
or
inc
pusha
fidiv
or
xorps
xchg
adc
xor
mov
mov
mov
popf
sub
cmp
(bad)
ret
or
mov
shl
mov
outs
add
lods
hlt
clc
dec
(bad)
and
retf
push
enter
mov
cdq
call
add
inc
jae
jnp
imul
add
cdq
jmp
sub
dec
jp
jge
cmovle
mov
and
lods
fcom
push
push
repnz
shl
sbb
loope
jmp
mov
into
mov
jmp
loop
repnz
add
shl
scas
pushf
xchg
mov
jmp
ret
push
js
cmp
or
dec
mov
pop
into
retf
push
mov
or
fadd
lods
mov
xchg
addr16
mov
mov
jno
push
mov
mov
dec
loopne
push
vmovlpd
std
hlt
cmp
loopne
stc
add
or
sar
jo
dec
fadd
outs
jne
into
cmp
repnz
mov
xlat
dec
int3
jns
js
loope
lods
(bad)
cli
jo
test
test
push
int3
fldcw
sub
cmp
movs
test
push
mov
jl
loop
pop
xchg
xor
sub
adc
xor
mov
mov
test
cmp
bound
arpl
sar
punpcklwd
in
(bad)
fdiv
push
ins
xchg
rol
call
cmp
stc
ins
pop
(bad)
xor
js
xor
ret
(bad)
jne
movs
out
xor
jle
rcl
jns
jae
(bad)
out
cld
cmps
xchg
mov
inc
fistp
aam
out
icebp
jae
cmp
mov
rcr
jl
cli
add
icebp
xchg
call
push
push
push
jnp
aam
and
std
popf
and
stos
dec
imul
cmp
mov
aam
jecxz
icebp
jae
data16
xchg
add
data16
mov
adc
mov
xlat
xchg
mov
aas
push
sub
dec
scas
xchg
pop
mov
mov
xchg
jecxz
std
ds
xchg
out
sbb
aaa
adc
jmp
inc
xchg
push
xchg
daa
jno
fidiv
xor
sub
jle
cdq
sbb
mov
xchg
mov
popa
scas
bound
xchg
push
ss
retf
xchg
in
(bad)
cmp
push
inc
sbb
push
mov
dec
or
aas
mov
cmp
push
pop
lahf
std
jecxz
jmp
test
in
bnd
push
clc
push
push
xor
stos
imul
jl
pop
add
xchg
cmp
inc
aam
jl
test
out
or
stos
and
sub
outs
push
pop
mov
daa
lods
std
(bad)
out
int3
test
(bad)
(bad)
popf
test
ss
adc
in
xchg
daa
test
cmp
nop
xchg
dec
fld
cld
movs
adc
add
inc
jnp
push
lods
aaa
and
fucomp
ret
ss
push
pop
xchg
add
jno
out
(bad)
aaa
inc
jmp
or
imul
mov
scas
bound
jmp
cmp
mov
icebp
mov
popa
cmp
xchg
jp
xchg
and
imul
push
dec
shl
xchg
mov
int
int
cdq
div
push
jle
ins
xchg
xchg
mov
imul
ins
(bad)
ficom
jnp
pop
pop
mov
std
clc
stos
cmp
cmp
cs
daa
shl
lahf
push
out
adc
sar
retf
mov
(bad)
imul
cs
stos
shl
popa
shl
or
adc
gs
(bad)
ja
mov
movs
xlat
out
(bad)
dec
push
pushf
cmp
aas
and
scas
pop
enter
(bad)
fsubr
sti
xchg
xchg
sahf
outs
xor
xlat
pop
adc
mov
sbb
or
pcmpeqb
sbb
or
xor
cmp
daa
push
jnp
and
and
icebp
jae
outs
mov
stos
sub
sub
inc
dec
lods
and
mov
mov
sbb
mov
lea
cmp
and
mov
add
fidivr
pop
fimul
jne
push
(bad)
stos
icebp
xor
mov
nop
inc
pop
sbb
mov
(bad)
stos
xor
xlat
cs
sbb
test
fdivr
push
sub
xchg
pop
xor
fisub
leave
jl
scas
aad
push
dec
loop
leave
adc
mov
pop
ins
xor
xchg
inc
inc
pop
inc
jae
sti
mov
or
rol
mov
sbb
pop
pop
cmp
fsub
addr16
ret
dec
arpl
ins
cmc
jo
add
pop
and
outs
(bad)
fsubrp
jnp
sbb
lock
or
mov
and
test
int
cwde
aas
mov
adc
hlt
cmps
fwait
add
xor
xchg
out
ins
inc
dec
aas
or
arpl
in
mov
iret
pop
test
xchg
dec
imul
sahf
mov
ss
jne
dec
dec
outs
gs
int3
adc
fild
inc
pop
repz
stos
sub
leave
fbld
out
shr
push
jp
ret
inc
fist
mov
es
sbb
sar
sahf
adc
jl
sub
lods
cmp
nop
fiadd
sbb
(bad)
fidiv
or
stos
aas
cmps
not
daa
sar
cmps
cli
iret
ret
mov
out
cld
arpl
mov
(bad)
inc
and
rcl
inc
sub
(bad)
mov
pop
inc
and
imul
cdq
fisubr
pop
push
mov
and
rol
popa
push
gs
pop
in
sub
dec
mov
mov
repnz
xor
pop
add
ins
add
out
or
sub
and
sub
fadd
(bad)
lahf
sbb
inc
ins
inc
(bad)
push
jbe
rcl
sbb
sbb
call
cli
cmp
nop
and
dec
push
in
int3
imul
ret
es
lods
and
or
xor
std
sbb
jge
xchg
jg
mov
dec
imul
lock
nop
dec
cmp
xchg
cmp
cmp
call
popa
mov
adc
mov
das
lods
cmp
clc
jbe
mov
jmp
pop
shl
cmp
je
pusha
cli
sahf
adc
and
fdiv
fs
clc
jl
fwait
leave
dec
mov
xchg
jnp
push
fild
or
jecxz
arpl
je
add
ss
cmp
shl
repnz
pop
outs
or
pslld
sub
xrelease
cld
sbb
jmp
mov
lds
out
push
aam
xor
sub
mov
loopne
xchg
add
fwait
jmp
dec
jbe
xchg
add
mov
or
sahf
ficomp
lahf
loope
pusha
sbb
cmc
jmp
das
enter
xchg
cwde
mov
pop
push
jg
scas
in
retf
loope
inc
push
sbb
push
jbe
mov
cmp
int3
push
inc
movs
mov
push
cld
iret
rcr
push
cli
adc
in
or
lods
and
addr16
call
xchg
cmp
jle
cmps
push
jae
sub
loop
and
movs
je
inc
jnp
add
shl
cld
test
cmp
fwait
call
sbb
adc
test
dec
cmp
stc
adc
iret
mov
cmps
daa
imul
cmp
out
adc
mov
mov
or
lock
xchg
jae
stos
mov
popf
data16
rol
jnp
pop
and
xchg
das
loop
jmp
(bad)
retf
rcl
rol
pop
add
mov
rcl
xchg
inc
xchg
jae
dec
cdq
ds
add
je
das
mov
sti
ror
mov
mov
xchg
inc
and
mov
leave
cmp
adc
pop
(bad)
or
push
(bad)
std
push
xor
cli
imul
cmp
cmp
cmp
clc
dec
or
loope
sbb
(bad)
out
sub
or
push
aam
push
xchg
add
popf
ds
repnz
inc
mov
ds
mov
mov
and
test
xchg
(bad)
dec
xor
addr16
sub
repnz
rcr
outs
mov
aas
pop
cmp
aam
sub
hlt
mov
pop
scas
sub
dec
pop
jge
popa
cmp
outs
sar
push
ret
mov
mov
mov
cmp
fwait
jmp
cwde
stc
pop
outs
js
addr16
outs
test
add
aaa
mov
leave
jge
inc
movs
popa
push
cmp
jecxz
pop
and
jmp
es
imul
sub
aaa
fs
push
jmp
aaa
push
or
xchg
cmp
nop
cmp
mov
pushf
push
xor
mov
push
loopne
jbe
xchg
leave
stos
jmp
scas
mov
pop
pop
xchg
mov
dec
inc
in
jge
stos
(bad)
loope
sbb
mov
inc
loopne
add
or
sbb
xor
sti
adc
imul
ins
in
les
xor
popf
jmp
dec
popf
push
fs
pop
inc
inc
xor
jne
cs
lahf
das
dec
rol
cmp
push
jge
cmps
jno
fdivr
imul
pushf
pushf
jge
repz
dec
leave
pop
and
test
jbe
popf
mov
sbb
jnp
inc
sbb
stos
inc
and
out
mov
xchg
pushf
sbb
add
out
sbb
vpcmpgtw
fnstcw
dec
lods
movs
mov
add
or
out
jno
imul
jmp
in
outs
dec
in
jb
pop
ss
test
in
adc
jge
add
cmps
loope
jecxz
dec
xchg
movs
pop
fstp
fwait
xor
mov
ins
ds
push
cld
sub
popf
mov
add
sbb
or
aas
jecxz
mov
push
loope
test
vpslld
mov
scas
out
xchg
adc
pop
push
dec
icebp
cmc
es
dec
dec
mov
push
add
sbb
sbb
mov
or
inc
dec
adc
cmp
pop
aam
jns
pop
retf
outs
sbb
mov
(bad)
cmp
mov
or
mov
push
and
sbb
stos
xchg
dec
mov
(bad)
cs
add
dec
mov
js
fstp
aaa
pop
bound
loop
cmp
jbe
lds
jle
jl
(bad)
retf
adc
mov
outs
inc
dec
push
(bad)
cdq
out
jle
les
xor
mov
mov
lock
std
ss
stos
mov
jmp
cdq
fstp
sbb
cmps
aaa
stos
xchg
mov
and
pop
mov
mov
adc
add
jo
jnp
xor
mov
jmp
pop
cmc
cmp
add
fwait
bound
and
xlat
pop
push
push
mov
cmp
xchg
push
das
fadd
jbe
lods
rcr
jle
outs
fidivr
je
adc
daa
mov
les
adc
arpl
cmps
bswap
or
pop
mov
mov
jmp
pushf
retf
scas
push
in
cli
fild
mov
lea
jl
sar
sbb
cmp
les
inc
and
mov
push
test
jmp
not
fild
push
lock
fst
xchg
xchg
and
inc
mov
test
int
mov
clc
lods
mov
dec
sub
mov
fidiv
movs
inc
je
jl
inc
sbb
call
pop
jge
lea
lods
cmp
jne
aaa
imul
push
inc
add
popa
or
aam
adc
jp
je
(bad)
mov
fs
push
repz
inc
dec
addr16
pop
fsubr
cli
retf
mov
pop
xor
sbb
aaa
fdivr
adc
pop
in
leave
or
fdiv
or
outs
cmps
push
inc
fcom
inc
cmp
retf
sbb
sti
ins
sar
stos
int
dec
das
pushf
aad
out
icebp
sti
cmc
pushf
sahf
adc
loope
test
cmp
fcmovnu
and
sbb
dec
sbb
dec
inc
movs
pop
leave
adc
inc
fsub
mov
mov
(bad)
adc
cmp
mov
dec
xlat
adc
inc
adc
(bad)
or
dec
mov
and
push
push
inc
mov
jl
dec
cli
sbb
mov
xchg
mov
retf
dec
jp
adc
cmp
stos
dec
ficom
cdq
jl
pop
rol
hlt
(bad)
inc
jbe
mov
daa
dec
push
dec
cwde
mov
jg
or
add
stos
es
jnp
mov
bound
hlt
dec
scas
xor
cmp
lea
mov
cwde
aas
cld
sub
inc
mov
rcr
cmp
push
xlat
adc
or
mov
xchg
int3
push
ds
sti
jb
mov
jp
xchg
mov
nop
(bad)
mov
fisttp
in
int3
xchg
out
fnstcw
scas
out
sub
lds
ins
and
aaa
xchg
push
inc
das
sbb
dec
into
leave
pop
jae
cli
retf
lods
and
(bad)
in
movnti
lods
mov
dec
mov
daa
push
push
jne
adc
ins
ss
xchg
mov
jge
xor
out
popf
adc
scas
add
cmps
rcl
out
int3
cmp
movs
pop
xor
cli
xchg
sbb
inc
nop
cmp
jno
xor
inc
mov
(bad)
jne
jo
push
adc
arpl
les
mov
jle
adc
cli
sbb
into
xchg
rcl
mul
and
xor
mov
(bad)
call
ror
add
outs
int
ror
sub
sub
dec
retf
inc
ror
int3
pop
test
mov
rcr
test
test
call
mov
stos
paddsb
dec
add
pop
mov
into
add
in
mov
cld
test
sub
adc
fld
cmp
cmc
mov
cmp
sbb
test
gs
dec
mov
jnp
mov
fadd
pop
mov
add
cmp
stos
pop
sti
repnz
cmps
jp
fwait
iret
iret
mov
popa
rcl
cmp
dec
add
jne
bnd
test
mov
dec
mov
std
or
xor
loop
test
sti
xor
push
je
and
dec
xchg
shl
es
call
mov
retf
mov
addr16
enter
sbb
in
in
mov
call
mov
sub
push
mov
jno
jo
dec
fld
add
xor
loope
or
mov
fld
ret
(bad)
adc
cmp
(bad)
mov
xor
cmc
pop
mov
inc
ja
repz
movs
and
jb
(bad)
cmp
pop
lods
mov
ss
sar
in
jmp
fdiv
(bad)
out
xchg
imul
mov
in
inc
mov
iret
or
imul
in
jl
adc
xor
les
or
mov
cmp
in
xchg
cmps
or
sbb
add
repz
loop
hlt
cmp
xlat
xchg
in
dec
add
xor
popf
xlat
cmp
add
sbb
cli
in
mov
sub
sub
ja
outs
xchg
dec
mov
mov
sub
int3
mov
sbb
and
pop
test
aas
inc
sub
lahf
mov
push
sbb
cmp
fisttp
inc
jae
pop
dec
jmp
or
or
pop
inc
out
mov
in
fist
mov
pop
leave
mov
out
out
rcr
test
out
cmps
adc
test
popa
cmp
and
test
pop
sub
cld
sbb
jno
and
enter
xchg
push
inc
push
and
jle
inc
mov
fbstp
pop
cmp
mov
test
push
scas
push
sub
outs
pop
addr16
mov
loop
pop
pop
xchg
cli
adc
jmp
(bad)
clc
arpl
fsubp
push
icebp
jno
mov
fscale
inc
xchg
dec
and
and
jp
leave
mov
aaa
mov
fistp
jle
cmc
mov
dec
jle
pop
cdq
adc
pop
jmp
into
movs
cmp
cmps
popa
mov
mov
xor
es
or
sub
cmps
in
mov
jnp
add
sbb
test
mov
sub
cmp
repnz
fnstcw
add
bound
hlt
mov
test
pop
inc
sub
xlat
shr
mov
ret
movs
outs
pop
inc
test
sti
out
pop
add
call
(bad)
ret
fwait
dec
mov
(bad)
mov
add
out
mov
call
pop
and
enter
push
call
std
xchg
or
fbstp
xchg
aad
jge
push
inc
sbb
movs
mov
fs
inc
dec
cmp
nop
mov
jle
pop
jg
inc
mov
mov
and
out
addr16
add
mov
fisub
jmp
push
xchg
or
das
les
sar
into
adc
ficomp
mov
pop
inc
cmp
adc
fld
mov
retf
fwait
pop
out
sub
(bad)
paddw
rcr
aaa
ds
dec
push
push
imul
sahf
xchg
js
xchg
rcl
mov
repnz
add
lock
push
mov
mov
add
mov
jmp
outs
push
(bad)
(bad)
cmc
dec
outs
outs
sahf
in
das
sbb
repz
and
mov
pop
daa
fs
jge
and
(bad)
cmp
outs
or
adc
push
movs
xor
mov
(bad)
sbb
mov
adc
add
add
(bad)
in
aad
push
mov
rol
(bad)
aaa
fwait
sub
mov
push
stc
in
lea
add
icebp
mov
shr
cdq
adc
cmp
adc
push
dec
and
(bad)
scas
aam
push
ins
cmc
pop
jl
retf
pop
call
sbb
mov
xchg
pop
cmp
jl
mov
and
imul
mov
cmp
jnp
fwait
movs
add
xor
stos
mov
inc
and
xor
jbe
das
test
push
fs
lock
and
inc
(bad)
pop
out
shl
ret
xchg
(bad)
aam
daa
out
sahf
iret
fwait
dec
mov
cmp
lods
sti
aaa
pop
daa
sbb
lea
out
dec
inc
mov
pop
and
scas
cmc
xor
mul
mov
scas
sub
ins
dec
xchg
inc
cmp
push
in
add
iret
lods
iret
push
cs
add
nop
sbb
mov
mov
clc
mov
jle
aaa
pushf
leave
xor
aad
loopne
(bad)
inc
add
mov
or
dec
jl
pop
pop
repz
into
adc
(bad)
adc
jle
and
cmp
xor
jo
(bad)
je
pop
push
push
stos
sahf
sbb
jae
jge
add
cs
retf
mov
sbb
jge
cmp
jno
stos
adc
test
add
ss
inc
int
dec
sub
or
fcom
cmp
retf
call
aam
in
jecxz
pop
cmp
xor
or
jmp
(bad)
in
dec
js
cmp
add
cmp
mov
pop
xor
mov
adc
fmulp
ja
call
xor
in
sub
ss
jge
sbb
xchg
adc
mov
sbb
std
jnp
inc
add
pop
mov
or
xchg
ins
repz
ds
or
cmp
pop
in
and
mov
aad
in
ret
sub
sbb
pop
and
inc
out
loope
pusha
iret
call
sbb
test
fcmove
stos
sbb
mov
(bad)
xlat
mov
rcr
dec
inc
in
clc
xor
dec
(bad)
retf
(bad)
iret
push
jae
lahf
push
(bad)
push
out
iret
out
adc
les
xchg
inc
mov
in
jns
imul
cmp
je
adc
mov
or
or
jae
and
cmp
mov
(bad)
and
mov
scas
adc
js
mov
out
and
mov
sbb
sbb
push
retf
xlat
mov
push
arpl
cli
daa
inc
dec
add
sub
jp
or
inc
in
fmul
pop
xor
aaa
pop
mov
test
lods
xchg
push
fwait
cmp
lea
stc
into
call
(bad)
mov
out
or
jo
loop
call
xor
add
test
call
iret
retf
push
xchg
fwait
std
or
in
(bad)
bound
adc
pushf
sub
fild
push
das
jmp
ret
cmp
jnp
cmps
dec
sti
xor
stos
sbb
jl
lods
mov
fwait
push
call
dec
jecxz
ret
sti
sub
mov
add
mov
sub
into
xchg
dec
inc
cmp
retf
test
imul
cwde
inc
xchg
add
fs
in
test
cli
fldcw
dec
shl
mov
dec
(bad)
hlt
or
jp
fisttp
loope
cmp
pop
repnz
and
xor
mov
inc
jae
cmp
cmp
dec
aam
cmc
and
ja
stos
in
arpl
mov
or
or
and
test
retf
jle
lods
jp
sahf
jle
sub
(bad)
mov
jge
nop
addr16
cmc
add
aaa
mov
xor
sbb
jl
sbb
push
mov
popa
xchg
sub
xlat
shr
xor
aad
(bad)
sub
jmp
cwde
xchg
mov
outs
popf
pushf
push
jmp
lods
mov
repz
or
enter
(bad)
jae
cmp
cmps
fcom
sbb
add
adc
ja
lock
mov
sbb
repnz
not
nop
add
je
enter
popa
sub
cli
sahf
xchg
xchg
jmp
leave
aam
jnp
pop
adc
jg
sbb
xchg
test
sbb
adc
inc
cli
sbb
(bad)
fistp
jecxz
add
jge
mov
ds
ret
or
imul
pop
jg
push
fisub
das
dec
test
pop
mov
mov
inc
fild
aas
pop
mov
xchg
inc
mov
into
and
dec
into
xchg
std
pop
cmp
or
ins
sub
jb
call
rol
icebp
lea
inc
mov
not
xor
adc
or
test
xlat
test
nop
mov
cmps
into
pop
in
jnp
vpsubusw
mov
mov
mov
cmp
cmp
jbe
pop
and
dec
sbb
repz
inc
inc
dec
sbb
and
aam
ja
arpl
add
sub
es
fimul
inc
sbb
cs
scas
add
test
jb
cmps
loopne
mov
xlat
push
push
rcl
push
xchg
popa
addr16
jl
icebp
push
retf
mov
adc
and
push
(bad)
pop
call
jl
fdivrp
sar
shl
nop
out
in
xor
fcmovb
xchg
pop
les
xor
out
sub
cli
or
add
rcl
(bad)
lods
shl
int3
pop
sub
fbstp
mov
cmps
call
mov
int3
cmp
into
xchg
push
add
inc
ror
cli
int
aas
xchg
add
ret
adc
jmp
mov
std
pop
xchg
xchg
pop
xchg
pop
add
dec
rol
fcomp
or
and
fnstcw
sbb
stc
pop
inc
push
xor
fsubr
push
rcl
and
cmps
clc
dec
imul
xor
mov
es
push
adc
sar
push
sub
scas
inc
adc
pop
push
jecxz
push
jns
add
enter
push
sub
stc
push
popa
and
xchg
mov
imul
push
inc
mov
inc
imul
adc
mov
(bad)
pushf
lahf
pop
aaa
adc
or
cld
icebp
stos
jns
mov
fiadd
sbb
movs
out
mov
mov
adc
imul
in
sub
fsub
mov
inc
dec
test
xor
int
jg
enter
sbb
xlat
xchg
inc
pusha
(bad)
fisub
sti
pop
iret
in
push
or
jecxz
sbb
shl
out
jg
daa
or
xlat
scas
xchg
add
sahf
jae
not
cmp
(bad)
jg
lock
push
mov
or
ins
cmps
das
and
cwde
inc
fadd
out
push
(bad)
mov
div
nop
std
sub
cmp
stos
pop
cmp
mov
in
outs
call
stos
shl
mov
jl
jge
xor
imul
das
scas
push
test
int
sti
popa
xchg
mov
mov
fldcw
cmps
jmp
cmps
adc
jg
mov
cmp
stc
jnp
jnp
dec
add
or
dec
pushf
and
sbb
call
aaa
sbb
push
fisttp
mov
mov
inc
jo
cs
rcr
mov
lods
cmps
(bad)
aad
ins
xor
pop
xor
loope
add
mov
mov
and
xor
inc
jb
out
sub
push
mov
mov
arpl
jb
inc
mov
adc
(bad)
repnz
adc
scas
stos
scas
add
lods
scas
ins
inc
maskmovq
test
xchg
or
dec
sub
jb
stos
dec
das
in
enter
mov
(bad)
cs
loop
mov
pusha
pusha
jb
fnstenv
sti
psrlw
sbb
jbe
ret
cli
fidivr
ror
(bad)
sbb
sbb
shl
test
fld
ret
pop
sub
push
or
aaa
inc
xor
pop
mul
cmp
mov
fst
pop
lods
aad
int3
xchg
call
lods
sbb
mov
stos
test
push
or
and
cmp
retf
imul
mov
pop
outs
mov
mov
nop
outs
dec
mov
mov
lods
push
ret
and
shl
xchg
inc
mov
inc
ins
sbb
test
or
repz
or
mov
adc
sbb
fs
cmps
shl
push
imul
mov
dec
lock
dec
push
retf
inc
jmp
pop
test
jmp
sbb
jle
ins
nop
jb
cdq
jecxz
mov
jp
pop
mov
jmp
jae
and
fwait
shl
push
lahf
inc
retf
aam
and
fcomip
jnp
lock
jo
fwait
cmps
(bad)
sbb
jg
(bad)
mov
pop
movs
or
mov
fwait
(bad)
jmp
inc
dec
and
in
xor
(bad)
jp
or
test
out
test
leave
mov
sbb
mov
sti
push
xchg
call
and
xor
fisttp
mov
xchg
mov
add
xchg
push
mov
stos
aam
retf
int
and
cwde
dec
xchg
cmps
shl
pop
inc
jecxz
mov
test
rol
test
ins
xchg
iret
pop
fcmovnbe
movs
cs
test
inc
popa
fcmovu
enter
daa
call
add
mov
inc
lods
and
je
xchg
jl
add
pop
fisttp
push
mov
or
cmp
sar
and
inc
stos
(bad)
jge
les
int
movs
xchg
and
(bad)
xor
sahf
cdq
mov
cmps
push
push
in
push
adc
lods
jne
sbb
xchg
mov
test
push
imul
in
aad
(bad)
out
test
lds
scas
clc
adc
fsubr
fwait
xor
fs
mov
pop
in
pop
(bad)
jg
es
or
je
dec
pusha
push
xlat
lock
or
pop
mov
inc
fsub
lea
fwait
mov
sub
xchg
adc
cwde
jmp
int3
(bad)
in
cmp
inc
jmp
clc
inc
xor
xor
scas
orps
adc
arpl
aad
out
sub
jbe
xor
fsubr
fdiv
(bad)
jmp
mov
and
inc
pop
cmp
xor
mov
pop
cli
mov
ja
(bad)
ret
(bad)
sub
and
call
ficom
icebp
or
mov
fisttp
cld
xchg
scas
mov
aaa
pop
sub
inc
aaa
bound
xchg
aad
mov
ret
les
or
jmp
imul
in
ret
rol
aas
pop
ret
jmp
sub
add
loope
es
movs
daa
xor
lds
and
aas
jno
(bad)
xchg
add
repz
repz
fcomp
xchg
or
jl
sti
dec
adc
sbb
pop
loope
int3
pop
dec
aaa
xor
mov
push
dec
repz
dec
test
js
jae
push
sti
push
jo
push
add
mov
pop
dec
push
test
push
fimul
vunpckhps
inc
popf
mov
mov
push
fwait
arpl
aas
adc
cs
shl
or
gs
jbe
icebp
gs
pop
int3
inc
or
mov
fld
sti
mov
xor
cmps
stos
nop
sahf
push
push
and
cli
mov
test
jmp
daa
jmp
(bad)
mov
rol
mov
jns
leave
rcr
in
and
fucomi
test
mov
push
das
jae
push
dec
and
jp
repnz
cmps
popf
test
mov
add
stos
push
push
or
adc
sbb
imul
out
lods
xcrypt-ofb
cmps
das
data16
int
adc
jp
(bad)
pop
xor
add
aaa
mov
jecxz
dec
sti
ins
adc
repz
ror
fdivr
xor
repz
adc
retf
jl
cmp
outs
out
mov
fsub
int3
mov
jmp
jg
or
adc
mov
and
nop
dec
adc
loope
sti
jne
rol
mov
mov
fwait
icebp
aaa
jnp
bound
or
xchg
fstp
push
push
shl
lods
push
or
cld
retf
lods
xchg
out
fwait
sbb
ret
cmp
mov
xlat
mov
out
das
ja
outs
jecxz
inc
xor
dec
in
xchg
(bad)
mov
fwait
cmp
test
das
inc
sbb
sub
cmp
pop
lea
adc
mov
out
mov
ins
stc
inc
inc
mov
xor
or
pop
out
mov
mov
or
iret
dec
adc
or
and
cmp
sahf
test
jecxz
xor
out
iret
sbb
cmp
aaa
adc
test
cmp
mov
int3
sub
test
cmc
iret
in
jo
xor
rol
in
sbb
xor
jg
not
push
sub
out
repz
add
in
scas
mov
(bad)
and
scas
xlat
xor
jg
adc
push
adc
jmp
lahf
pop
dec
or
mov
xor
or
ja
jb
jb
or
dec
push
mov
mov
dec
fcom
push
or
in
loop
cdq
enter
imul
lock
iret
jnp
or
in
js
arpl
jnp
dec
add
sbb
push
mov
push
aad
push
int
xlat
jb
and
adc
inc
lods
mov
jl
add
out
mov
out
stos
das
ja
sti
xor
div
mov
in
nop
pop
test
ja
pop
mov
test
push
inc
sbb
cmps
fwait
and
mov
ror
cmp
iret
call
inc
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
jmp
mov
add
cmp
jb
cmp
ja
cmp
je
sub
cmp
ja
cmp
jne
mov
shr
rol
xchg
sub
add
mov
add
sub
mov
add
loop
sub
jg
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
nop
nop
inc
add
inc
add
