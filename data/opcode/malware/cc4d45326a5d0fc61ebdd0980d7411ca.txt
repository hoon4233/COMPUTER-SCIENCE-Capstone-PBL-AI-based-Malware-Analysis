(bad)
and
mov
cmp
lea
and
adc
jle
and
arpl
and
pop
ret
xchg
sbb
adc
ins
adc
lahf
mov
xchg
daa
push
sub
add
xor
arpl
jp
jb
cmp
cld
add
and
dec
xchg
push
je
add
jnp
je
jge
push
arpl
pop
icebp
dec
imul
gs
and
int3
xor
outs
or
outs
sbb
dec
rcl
test
add
push
sbb
dec
data16
jo
mov
popa
dec
pop
dec
pop
leave
sbb
adc
pop
mov
arpl
xor
je
mov
ja
cmps
lods
sbb
dec
xchg
ja
push
adc
test
fisttp
ins
ins
lods
das
cmp
scas
leave
js
pop
push
mov
xor
jp
jg
movs
jl
ins
ficomp
jl
aam
xchg
mov
nop
mov
jb
outs
cmps
je
sub
jmp
nop
bound
stos
sbb
push
jbe
inc
xchg
jno
sub
(bad)
shl
stos
pop
jle
ficomp
and
jns
inc
rol
jmp
push
ins
push
jl
js
jmp
(bad)
scas
test
cmp
ror
test
mov
cwde
in
adc
ficom
lods
inc
in
dec
jb
cdq
or
dec
jb
mov
(bad)
mov
retf
jg
fsubr
mov
pop
xor
and
mov
mov
push
bnd
jb
test
xchg
jl
repnz
pop
jb
push
iret
and
xchg
test
ror
pop
jno
movaps
out
idiv
dec
adc
loope
mov
je
mov
mov
std
dec
rcl
add
mov
cmp
sti
lea
ins
jb
pop
jmp
xchg
js
xchg
adc
fild
test
inc
mov
je
outs
outs
je
add
pop
xchg
push
mov
sbb
lea
lahf
nop
ins
xchg
and
jge
xchg
adc
mov
inc
pop
sar
(bad)
jo
pop
mov
test
jmp
and
cmp
mov
sbb
mov
mov
push
jp
cmps
sub
or
jne
in
add
and
lea
data16
dec
xchg
xchg
popa
jne
lahf
loop
imul
xor
sub
frstor
lahf
ds
xchg
les
in
data16
cwde
test
bnd
ss
push
jae
jo
xchg
call
ret
push
pop
push
push
movs
jp
int
jns
mov
push
rol
and
dec
mov
dec
outs
sbb
out
mov
mov
loope
push
xchg
imul
xchg
hlt
addr16
push
add
(bad)
outs
outs
sbb
dec
cwde
test
sbb
mov
mov
arpl
dec
imul
enter
mov
push
fs
adc
push
xchg
jo
sbb
js
dec
stos
jae
xchg
dec
and
add
repnz
dec
jg
scas
fisub
jo
out
dec
fcom
rol
xlat
inc
push
pusha
shl
(bad)
movs
(bad)
xchg
mov
nop
out
adc
push
outs
mov
cld
jb
popf
sbb
addr16
mov
mov
sbb
imul
add
xchg
aad
loope
mov
in
push
lods
clc
rcl
sbb
jmp
dec
mov
jp
dec
push
outs
xchg
mov
bound
lock
mov
(bad)
outs
xor
pop
dec
and
out
ret
pop
fist
mov
aas
sub
ret
ds
adc
cmp
sbb
xchg
xchg
xor
fiadd
retf
mov
jne
jne
adc
popf
pop
dec
gs
jbe
mov
jb
(bad)
imul
xchg
mov
jne
jns
xor
mov
movs
nop
test
xchg
lea
ins
xor
outs
mov
push
inc
std
mov
imul
outs
imul
movs
or
test
xor
mov
adc
inc
push
xchg
push
dec
sar
push
xchg
cmp
ficom
fs
repnz
inc
sub
adc
push
and
inc
ins
pop
cld
add
and
punpckldq
jns
mov
mov
sahf
fstp
dec
imul
lods
dec
outs
ret
mov
in
popa
daa
stos
imul
mov
xor
nop
bound
jle
addr16
mov
inc
mov
pusha
test
inc
jo
popf
adc
xlat
ins
(bad)
cwde
xor
mov
lock
data16
mov
dec
dec
mov
ret
jle
fwait
retf
xchg
sahf
xlat
enter
adc
call
inc
js
inc
push
inc
push
icebp
jbe
sbb
jo
xchg
int
or
dec
lods
push
adc
push
test
dec
movs
outs
push
xlat
dec
clc
mov
je
bound
cmps
cwde
ins
push
or
sub
loopne
mov
std
cmp
pushf
mov
dec
sbb
into
adc
movs
dec
adc
jne
ins
neg
fsub
cmp
jmp
sbb
stos
mov
lea
mov
push
mov
iret
sahf
repz
das
dec
lahf
ja
mov
ins
jne
jns
stos
cmp
mov
ins
in
int
popa
outs
inc
sahf
add
adc
mov
bound
mov
jno
mov
fwait
pop
or
ins
push
mov
adc
add
push
pop
shl
push
xchg
adc
cwde
push
sub
cmp
test
xchg
jno
pop
ins
jp
mov
push
cmps
fldcw
fisttp
sbb
rcl
es
jecxz
xchg
pop
cmps
mov
add
xchg
mov
mov
mov
jnp
daa
imul
mov
or
sbb
push
std
pushf
cmp
xchg
jo
jns
add
pop
daa
pop
jbe
or
push
fistp
push
test
adc
cwde
outs
shl
int
cwde
mov
imul
pop
jno
imul
pop
pop
imul
jp
push
cmps
xchg
push
push
push
cmp
cmps
repnz
movs
dec
cmps
push
or
cs
data16
popf
xor
out
adc
test
addr16
mov
mov
dec
jb
fisub
int3
loope
aas
jl
pop
push
pop
shr
push
lds
and
xchg
sbb
push
xor
cmc
mov
push
call
and
and
push
je
cmp
cmp
sbb
xor
adc
mov
pop
test
dec
adc
jae
push
into
push
ins
nop
imul
mov
mov
sub
or
in
stos
sbb
shl
lea
sub
mov
int
repnz
pop
sbb
and
sbb
js
jne
pop
dec
aaa
mov
pop
ins
adc
movs
sahf
(bad)
nop
ins
push
ret
mov
dec
cmp
outs
or
rol
push
lahf
dec
dec
movs
arpl
sub
ret
adc
jae
ficom
arpl
push
inc
les
jns
sbb
mov
rol
mov
xor
add
(bad)
test
xor
sbb
ss
sub
xor
jg
jns
sbb
adc
cmp
mov
ins
jb
das
ror
jmp
call
mov
sbb
mov
aam
inc
sub
arpl
ret
mov
sbb
(bad)
ficomp
dec
xor
or
out
adc
sub
ja
ins
lahf
add
push
mov
outs
or
retf
ret
jb
mov
aad
jp
fwait
enter
jno
push
cmc
mov
das
stos
sbb
push
push
pop
mov
retf
(bad)
ja
out
(bad)
cmc
mov
add
aam
imul
scas
aas
jl
jmp
sub
rcl
ins
adc
xchg
pushf
adc
xchg
push
or
psrlq
cs
out
adc
pop
jae
push
aas
adc
jb
lods
je
pop
push
pop
addr16
(bad)
jmp
fld
push
ja
push
xchg
add
push
cwde
imul
jae
sbb
cmp
or
ret
aad
mov
jne
inc
ins
test
int3
call
loope
ins
out
cmp
jge
pop
cmp
cwde
mov
fdivr
mov
sub
sbb
outs
fs
imul
mov
mov
add
push
xchg
sub
mov
sub
fdivr
(bad)
loop
mov
xchg
fistp
mov
fnstenv
pusha
iret
mov
pushf
jnp
jne
in
mov
jecxz
pop
ja
inc
mov
outs
push
call
ret
push
in
jl
cmp
movs
push
push
sub
jl
sub
inc
shr
xchg
push
xchg
push
lahf
xchg
out
ins
jmp
jne
mov
adc
leave
and
pop
cmps
mov
add
mov
sbb
xor
fsubr
or
loope
mov
fadd
addr16
into
mov
xlat
xchg
iret
stos
je
inc
cmp
stos
xor
outs
mov
pop
(bad)
popa
xchg
jmp
push
js
push
mov
retf
pop
jne
daa
jb
ja
cmp
ins
mov
lods
gs
mov
jns
fnstenv
sbb
and
inc
jecxz
push
fild
test
lods
pop
push
sbb
imul
inc
mov
movsx
dec
shr
push
jge
outs
dec
cli
adc
push
push
xchg
pop
pop
call
loopne
jns
or
bound
cmps
push
pop
aas
mov
jo
jns
push
into
es
popa
sub
mov
mov
dec
gs
pop
push
lahf
test
inc
test
jns
ins
in
cmps
jmp
push
push
xor
aas
jge
pushf
push
test
sbb
(bad)
dec
movs
retf
mov
dec
mov
jg
cmps
adc
pop
jecxz
nop
stos
or
imul
fs
mov
inc
mov
jmp
mov
jg
lahf
nop
test
sar
adc
nop
cwde
clc
sub
sbb
sub
jge
inc
adc
ja
inc
xor
dec
add
cs
mov
das
cdq
pop
dec
lods
in
mov
arpl
cmps
push
(bad)
pop
mov
ins
adc
bound
mov
and
vphaddwd
les
cmp
in
push
mov
out
enter
xchg
inc
in
and
leave
addr16
xlat
push
push
jbe
les
ja
addr16
push
data16
jmp
pop
hlt
sbb
mov
in
fnstcw
adc
add
loop
jae
in
out
retf
inc
cmp
jge
call
push
into
fild
iret
and
cmp
pop
push
lea
test
jns
mov
jecxz
pop
jmp
and
jne
cmps
inc
xchg
and
mov
mov
pop
inc
sub
test
aad
mov
lods
lahf
xchg
push
out
dec
clc
or
sahf
arpl
shr
sub
iret
in
push
xchg
or
cmp
movs
dec
jg
xchg
xchg
mov
pop
fcom
push
push
and
scas
add
mov
pop
mov
fist
jnp
imul
dec
pop
fwait
arpl
mov
ret
dec
aad
movs
mov
(bad)
in
repz
imul
dec
test
inc
cwde
xchg
adc
jle
aas
ins
xchg
sub
out
ds
or
shl
mov
jb
mov
sbb
mov
sahf
popf
pop
mov
cmps
and
cmp
mov
jmp
or
pop
adc
jg
jnp
gs
int
ins
fstp
xchg
call
imul
adc
sbb
mov
call
out
cmp
and
ret
iret
fnstsw
hlt
jbe
or
mov
push
in
add
mov
test
fimul
loope
or
inc
sub
mov
pop
jnp
loopne
je
mov
xor
repnz
sbb
add
fwait
out
mov
push
mov
aas
pop
jae
pop
pop
push
push
jl
xlat
nop
call
push
push
mov
out
jp
mov
pop
imul
pop
push
adc
jb
int3
ins
pop
mov
pop
mov
ins
xchg
jmp
xor
(bad)
mov
sub
in
cmp
pop
outs
inc
jmp
sbb
retf
cmc
xchg
adc
jecxz
jp
lock
cmp
jae
jmp
pop
nop
ins
arpl
iret
ficomp
pushf
nop
iret
ins
int
cmps
jno
xchg
das
fisub
inc
jne
or
sub
mov
mov
movs
xchg
lods
xor
cmps
mov
std
cli
sti
add
cdq
add
jns
arpl
jns
ja
nop
popa
gs
test
adc
inc
dec
jb
mov
and
push
inc
push
ja
mov
pop
push
dec
xchg
mov
xchg
dec
mov
sbb
mov
jl
out
ja
je
das
cmp
xor
rcl
pop
adc
repz
dec
xchg
add
xchg
(bad)
jbe
xor
jne
shl
rcl
lods
cmps
jg
cli
xchg
xchg
mov
imul
mov
std
jle
je
mov
nop
and
ds
or
jge
bound
xchg
jge
push
jle
push
mov
punpckhbw
add
xor
xchg
bound
jbe
jmp
das
scas
jnp
shl
and
push
and
xchg
(bad)
xchg
rcr
jns
rcr
aas
call
rcl
and
sbb
jb
xor
sub
lods
dec
adc
cld
fist
aas
push
int
jns
scas
and
stos
movs
jecxz
xor
imul
arpl
xchg
test
jb
pop
and
popa
ins
mov
jae
push
(bad)
mov
lea
xchg
movs
popf
adc
bound
jp
sbb
popa
inc
xor
daa
xor
jg
addr16
add
jb
push
or
adc
mov
lds
push
pop
mov
xor
jecxz
dec
pop
mov
cmp
xchg
sub
mov
jbe
outs
xchg
dec
pop
sti
in
mov
cwde
sbb
push
inc
les
sbb
jbe
punpcklwd
leave
xchg
push
xchg
movs
xlat
jne
mov
add
fld
cmp
ss
add
imul
mov
in
mov
mov
sub
add
es
xchg
and
cmp
xor
mov
rcr
cld
not
inc
shl
mov
push
jae
xor
jae
and
or
in
in
xchg
xchg
mov
dec
and
repnz
mov
fadd
mov
jp
sub
lds
xchg
dec
dec
aas
mul
mov
add
pop
mov
jp
sbb
pop
jb
jne
add
nop
jg
sub
rol
test
(bad)
mov
mov
dec
or
aaa
ins
loopne
(bad)
into
sub
cli
stos
in
or
jno
ja
icebp
nop
mov
jbe
inc
lds
cwde
xor
pop
ja
dec
sbb
jae
pop
iret
push
and
adc
and
pop
ja
jno
mov
push
sbb
neg
sbb
mov
inc
scas
inc
mov
add
std
push
mov
dec
shl
clc
(bad)
pop
lahf
sbb
pop
sub
and
je
xchg
shl
adc
dec
(bad)
sub
xchg
fnstcw
aam
bnd
cmp
jg
je
hlt
leave
ins
dec
xchg
mov
dec
cmc
xchg
cwde
test
aas
scas
jge
adc
add
jg
dec
into
mov
movs
push
cmps
inc
test
sahf
jbe
cmp
iret
mov
mov
clc
push
stos
sar
mov
or
outs
push
int3
loop
add
int
ins
cmps
mov
xor
popa
xchg
cld
aaa
mov
dec
imul
inc
jp
cdq
hlt
xchg
aam
daa
imul
stos
adc
sub
and
dec
aam
xchg
mov
imul
push
sub
movs
inc
and
movs
dec
pop
inc
arpl
jb
les
push
xchg
sbb
mov
push
daa
jnp
in
mov
jbe
loop
or
jmp
or
mov
bound
dec
mov
hlt
cwde
ins
popa
adc
icebp
lods
addr16
jp
jle
movs
out
jg
cmps
mov
xchg
shl
(bad)
movs
and
pusha
mov
push
je
sbb
out
sbb
jnp
jp
mov
jno
jnp
(bad)
sahf
or
push
or
retf
ror
cmp
lea
jge
and
or
jl
xchg
xchg
out
jg
out
int3
sub
rcr
inc
loope
int
xchg
or
pusha
pop
jns
add
pop
mov
call
xchg
repz
in
mov
scas
lea
fwait
cmp
jae
test
mov
aad
hlt
call
loope
push
sub
xchg
sub
mov
inc
pop
div
jnp
fwait
inc
fsubr
lock
mov
mov
dec
and
jg
cmc
outs
mov
pop
add
fsubr
xchg
test
movs
push
repnz
ficom
js
out
mov
push
mov
jecxz
cmp
jne
les
movs
jae
sub
inc
ins
sub
in
mov
cwde
int
jp
push
imul
outs
pop
inc
stc
das
cmps
fild
aaa
dec
cmovg
jge
mov
mov
lea
mov
imul
sahf
sbb
push
pushf
jg
sahf
sub
popa
mov
inc
dec
retf
xchg
xor
mov
test
test
test
mov
cli
cld
jns
test
fwait
aam
dec
xchg
and
cdq
and
cmps
rol
sub
dec
and
cmp
or
in
bound
in
test
xor
push
jmp
popa
sahf
push
sub
sub
dec
in
adc
jae
xor
adc
jno
adc
dec
loope
xchg
(bad)
xchg
rcl
mov
adc
cmp
lea
shl
sbb
lods
cs
mov
cwde
outs
xchg
out
push
mov
ins
rcr
lahf
jge
xor
stos
dec
mov
pop
push
loope
dec
in
xor
mov
sub
cdq
push
xor
cmps
(bad)
nop
cmp
scas
(bad)
(bad)
xchg
cmp
jno
stos
push
ja
int3
add
nop
xchg
push
into
std
mov
sub
push
inc
push
clc
stos
and
jmp
xchg
rol
xlat
mov
lahf
arpl
inc
dec
push
add
jbe
pop
or
(bad)
test
in
and
cmps
xchg
sti
add
xchg
retf
mov
xor
mov
jbe
add
fcomp
mov
mov
xchg
int
xchg
test
sbb
mov
sub
fs
sub
scas
loope
sbb
mov
or
test
sub
jne
scas
cmp
arpl
push
pop
mov
xchg
std
jne
ins
and
xchg
push
aad
clc
sbb
mov
mov
fild
inc
repnz
iret
sbb
fist
sub
mov
sub
arpl
cmp
shl
add
jmp
imul
mov
loopne
mov
and
xchg
push
jb
push
int3
inc
add
cmp
push
mov
jns
pop
inc
fs
(bad)
adc
imul
lock
mov
dec
out
pop
push
mov
cmc
dec
mov
sbb
aam
popa
fist
sahf
test
and
dec
adc
jns
test
adc
loopne
ds
add
and
push
xor
push
out
loope
lahf
outs
iret
mov
mov
fidiv
ins
adc
jno
jg
xor
cmps
dec
jae
lea
popa
push
dec
jg
jnp
fist
shl
inc
(bad)
and
daa
int3
sbb
adc
sbb
xchg
pop
or
pop
loope
scas
mov
rcl
ja
jecxz
jl
test
mov
popf
stos
mov
fsub
sbb
xchg
push
and
(bad)
pusha
xchg
fiadd
mov
xchg
ss
fcom
outs
dec
addr16
add
inc
ins
push
in
fsubr
mov
shl
in
lea
pop
and
and
adc
mov
push
mov
xor
lahf
mov
push
sbb
stos
jp
lea
xchg
adc
loopne
inc
(bad)
xchg
push
and
xor
push
jl
popa
push
imul
arpl
sbb
div
mov
fld
iret
sbb
pop
adc
hlt
ins
dec
bound
cwde
sub
jae
adc
jmp
sub
and
inc
jno
rol
call
and
mov
test
cmp
pop
sub
jp
and
in
daa
mov
ins
dec
inc
push
mov
xlat
rcl
mov
nop
scas
push
out
lods
arpl
xchg
fnsave
ins
sti
add
int3
mov
les
adc
retf
movs
jl
int3
xor
fldcw
pop
(bad)
iret
mov
cld
js
xchg
mov
sub
fwait
pop
xchg
shl
jp
pop
push
mov
sbb
push
or
jecxz
adc
loope
das
jp
imul
sub
push
jmp
jl
test
mov
test
mov
jae
mov
test
shl
mov
pop
arpl
lock
sub
jne
call
jl
push
out
mov
push
add
imul
and
add
inc
push
jns
icebp
stos
lahf
pop
lahf
outs
(bad)
push
mov
outs
adc
gs
xor
icebp
adc
or
hlt
and
pop
scas
test
jmp
pusha
push
test
sub
mov
or
int
rcl
cmp
in
jb
mov
dec
into
and
push
es
imul
adc
imul
jmp
in
jp
cmp
iret
adc
dec
dec
dec
pop
push
movs
sub
push
sub
scas
add
and
pop
ins
inc
stos
push
addr16
add
sahf
adc
ins
and
jle
pusha
cdq
gs
jp
ror
not
mov
mov
push
ret
push
jns
outs
jno
(bad)
or
mov
xlat
call
outs
fsub
jle
sub
test
test
jg
mov
mov
push
jp
mov
push
and
push
je
jge
pop
int
fwait
xchg
xchg
fnstcw
jmp
bound
(bad)
dec
or
pinsrw
(bad)
fbstp
(bad)
pop
loope
test
cmp
jnp
mov
mov
test
sub
ins
into
lds
xlat
icebp
arpl
movd
sub
imul
pop
jp
test
sub
and
test
das
fimul
push
adc
dec
addr16
das
mov
bound
ror
jae
push
adc
push
in
pusha
push
sbb
push
mov
jle
lea
and
sub
lods
cmps
inc
push
pop
dec
call
push
push
arpl
xchg
jg
inc
xchg
mov
daa
push
adc
ins
pop
xchg
jmp
or
jno
mov
jae
ins
and
bound
jge
test
or
popf
xchg
mov
arpl
(bad)
jge
sub
push
dec
cmps
rcr
xor
jge
mov
jecxz
stos
sbb
ja
popa
es
jmp
push
pop
(bad)
jge
in
and
push
or
mov
push
mov
(bad)
repz
stc
mov
iret
sub
sbb
inc
call
xchg
sbb
imul
test
mov
pop
pushf
push
adc
lea
xchg
imul
jg
std
jno
aad
repnz
bound
arpl
jle
jg
mov
imul
ss
push
push
inc
adc
(bad)
mov
fcomp
add
out
inc
sub
fild
(bad)
add
ret
sbb
cwde
pop
pop
cmps
and
ins
xchg
xchg
push
push
and
test
sti
and
add
xchg
mov
fimul
mov
popa
add
popf
and
mov
rol
mov
mov
xchg
inc
sbb
outs
sbb
inc
nop
int3
movs
push
fild
imul
push
ds
enter
jne
(bad)
dec
addr16
js
add
test
dec
data16
mov
and
xchg
out
jne
out
jge
out
test
jecxz
test
and
jle
test
jns
imul
dec
pop
repz
xchg
rol
pop
push
ins
lods
pop
dec
mov
inc
cmps
mov
cmp
cmps
mov
and
(bad)
fisttp
inc
jge
jmp
sbb
push
mov
pop
(bad)
in
cmps
sub
push
es
imul
movs
jb
mov
xchg
adc
jae
adc
and
push
mov
xor
pushf
and
cmc
outs
xchg
arpl
and
add
sub
ret
cdq
jge
mov
sub
es
mov
and
or
ret
xchg
mov
adc
outs
int3
lea
mov
xchg
mov
cdq
mov
dec
lds
pop
std
imul
imul
lds
rcr
inc
test
push
push
or
push
daa
icebp
and
xchg
lds
jp
frstor
(bad)
adc
xlat
add
int
(bad)
mov
pop
leave
mov
inc
cld
out
bnd
mov
xor
sar
mov
xlat
stos
fdiv
out
cdq
fcomi
loop
mov
cdq
shl
push
out
or
xchg
leave
in
in
xchg
out
rcl
cwde
xchg
cwde
icebp
inc
and
ja
fs
inc
clc
or
fnstenv
pmaxub
mov
jle
and
test
add
and
icebp
sub
popa
cmp
cmp
cli
call
xlat
inc
sti
call
out
bound
data16
cmp
jnp
int
aam
mov
icebp
outs
cld
and
and
es
inc
lock
in
sti
push
test
pop
sub
push
mov
daa
pop
out
xor
jo
stos
mov
xchg
push
dec
pop
test
aad
dec
inc
(bad)
dec
and
jae
mov
lods
xchg
jnp
sbb
out
inc
adc
lea
scas
imul
leave
dec
pop
imul
and
stos
movs
pop
loopne
arpl
xor
(bad)
lods
jno
add
imul
fild
test
outs
jge
sbb
nop
cdq
and
push
and
es
and
adc
sbb
mov
(bad)
xor
jae
cmp
push
push
arpl
jp
addr16
cmp
pop
xchg
adc
retf
movs
dec
jle
repnz
popf
retf
imul
add
xor
adc
jmp
jge
(bad)
test
inc
push
dec
outs
or
outs
sbb
shl
jnp
jle
mov
pop
imul
(bad)
call
or
in
ins
mov
dec
jae
push
data16
aam
xchg
mov
lods
push
fwait
cld
push
into
sbb
aad
or
lahf
cmp
jle
sub
test
inc
xor
cs
cmp
daa
ds
cld
push
xor
adc
rcl
push
adc
xor
jmp
cmp
lahf
inc
xchg
sbb
push
mov
adc
stos
inc
(bad)
xchg
ins
ds
lods
scas
imul
cdq
cmps
mov
dec
les
push
xlat
ins
ins
sub
add
test
inc
fld
cmp
adc
hlt
out
push
inc
retf
in
test
psubq
add
ins
cmp
fisub
mov
push
lods
sub
(bad)
test
adc
in
test
fimul
das
adc
inc
(bad)
out
xor
jmp
fsubrp
addr16
mov
jp
push
push
inc
test
push
xor
imul
daa
xor
jmp
gs
rcpps
push
jno
into
test
adc
push
mov
lea
dec
push
and
sub
and
dec
adc
shl
rcl
arpl
sbb
pop
xchg
adc
push
out
std
(bad)
adc
and
test
add
xchg
adc
xchg
ins
(bad)
dec
cdq
arpl
lds
xor
mov
add
fisttp
jbe
push
push
ins
cwde
call
mov
mov
test
push
lods
push
out
pop
pop
loop
fsub
out
cmp
test
icebp
adc
sub
popf
sub
outs
mov
sahf
jmp
jp
imul
dec
leave
add
adc
jmp
jle
add
data16
addr16
outs
dec
aaa
adc
(bad)
jo
adc
fwait
push
int3
cmp
cmp
sahf
int
in
fcmovnb
mov
mov
adc
inc
xchg
fldcw
imul
cmps
and
push
jno
cmc
cmps
jp
cld
push
push
add
push
mov
xlat
and
inc
call
gs
jmp
pop
adc
outs
or
wrmsr
push
pop
add
imul
int
ss
xchg
push
lods
outs
xchg
push
cmp
ret
fwait
pop
bnd
push
adc
xchg
cmp
jns
in
test
xchg
xchg
xor
push
gs
outs
and
mov
arpl
push
inc
cdq
fbld
push
mov
xchg
cdq
int3
and
sub
cmps
push
cmps
jle
add
outs
outs
xchg
stos
jp
push
pop
test
js
or
rol
pop
pop
sbb
sbb
cmp
fs
xchg
(bad)
or
nop
aad
adc
loopne
les
xchg
push
jl
fbstp
or
push
dec
push
pop
mov
addr16
imul
dec
push
aam
push
add
push
arpl
sbb
stc
pushf
pop
outs
cmps
inc
jl
clc
pop
jb
push
or
adc
jmp
inc
dec
push
or
pusha
fisubr
cmc
cmps
jne
jno
daa
mov
mov
ja
and
gs
popf
shl
dec
or
and
clc
rcl
push
(bad)
mov
jmp
xor
ret
pop
jmp
cmc
push
outs
inc
in
cwde
inc
pop
adc
dec
test
or
and
shr
adc
jg
imul
imul
lods
rcl
mov
inc
test
popf
sub
jp
add
push
inc
push
inc
nop
push
sahf
adc
jb
popaw
in
out
lock
pop
in
sub
in
nop
push
mov
call
out
int
xlat
out
out
repz
or
push
in
cmp
pop
xlat
push
push
int
stos
push
pop
jae
dec
or
push
mov
xchg
leave
outs
mov
in
(bad)
arpl
mov
je
xchg
fiadd
mov
adc
bound
and
fucomp
data16
and
sbb
fild
push
call
xchg
or
test
and
fisubr
(bad)
pop
iret
xchg
xor
dec
and
mov
jge
inc
int3
leave
or
mov
in
lahf
inc
inc
aad
(bad)
or
test
mov
outs
adc
mov
adc
push
dec
repnz
outs
push
xor
ins
push
jmp
inc
adc
mov
ins
shl
fidivr
xor
inc
mov
pop
stc
mov
or
jle
test
sub
push
shr
dec
iret
pop
pop
push
fnstenv
fisttp
push
mov
and
pusha
mov
out
les
add
adc
dec
ror
sub
xchg
dec
dec
test
and
scas
enter
or
and
pop
mov
iret
lock
dec
pop
js
jns
ins
mov
pusha
mov
sbb
int3
sub
dec
mov
mov
pop
pop
xchg
sbb
dec
dec
stos
push
mov
lods
iret
pusha
and
add
pop
loopne
ins
mov
dec
ds
add
jne
aam
repnz
and
test
mov
mul
mov
jb
in
push
addr16
pop
cmp
test
loop
les
cmc
xor
mov
int
shr
out
repz
(bad)
rol
test
mov
lds
das
pop
(bad)
cmp
je
sub
jb
gs
dec
cmps
inc
outs
call
mov
leave
push
add
stos
jg
mov
stos
cmp
outs
mov
dec
mov
out
xchg
ja
ja
push
and
and
lahf
mov
xor
test
les
mov
leave
sub
scas
jae
mov
test
ins
retf
ja
ror
xchg
cmp
pop
mov
push
les
out
push
xor
jo
push
sub
movs
xor
fild
xchg
shr
data16
jmp
test
pop
and
adc
mov
lahf
inc
push
les
rcr
lock
fisub
pop
and
xchg
xor
ins
movs
(bad)
or
sbb
aad
out
mov
jg
jle
jnp
stos
aad
scas
imul
jl
push
pop
mov
(bad)
in
jle
mov
add
test
or
jo
mov
cs
xlat
ja
xor
int3
mov
das
xchg
stc
cmp
dec
mov
ja
ins
xor
xor
aam
fs
int3
addr16
xchg
inc
dec
cs
push
mov
and
mov
mov
jno
lods
(bad)
not
sub
push
inc
lods
or
stc
dec
lahf
loopne
jnp
mov
pushf
retf
dec
pop
(bad)
cmps
outs
and
out
xchg
mov
out
les
je
jns
jne
push
jno
ds
jnp
mov
jbe
and
jno
nop
mov
jl
rcr
xor
pop
movs
add
mov
outs
push
dec
dec
ins
enter
xchg
or
sub
clc
popa
stos
push
xchg
adc
js
xor
push
jbe
imul
iret
call
imul
xor
cld
sub
outs
pusha
shl
loop
fisub
jp
pop
scas
xchg
into
rcr
adc
nop
jbe
mov
pop
pop
mov
test
cmps
mov
leave
cmp
push
xor
in
sub
int3
out
scas
sub
jmp
je
call
rcl
je
nop
xchg
jb
sub
pop
xchg
test
add
jge
ja
dec
jae
ja
rcr
adc
sub
scas
aam
ins
mov
int3
and
mov
sar
xchg
dec
push
fist
(bad)
js
(bad)
sub
xchg
lds
outs
or
cmps
imul
sti
jge
outs
jb
ds
xor
arpl
iret
push
xor
idiv
pop
fdivrp
sub
test
cmp
pop
loopne
mov
icebp
ret
pop
mov
sub
out
gs
push
leave
mov
cmp
lods
adc
out
cmp
popf
outs
dec
cld
mov
mov
mov
sbb
pop
adc
jae
mov
addr16
pop
push
retf
imul
pop
mov
mov
mov
mov
add
repnz
mov
cmp
adc
sar
pop
enter
mov
nop
scas
aas
ins
loope
xor
adc
jno
sar
lahf
and
xchg
shl
out
fidiv
hlt
(bad)
jno
mov
(bad)
xchg
test
inc
xchg
nop
jnp
ins
arpl
lods
loope
stos
push
jnp
sbb
xor
pop
pop
add
sbb
cli
cwde
mov
retf
jno
cmp
call
mov
jl
mov
mul
retf
ss
je
mov
mov
ret
jecxz
lods
not
mov
cmp
in
in
sbb
inc
pop
jae
jg
xor
xlat
jno
mov
pop
mov
mov
push
loopne
icebp
sar
xchg
data16
push
mov
pop
sbb
push
mov
cmp
mov
hlt
pop
ret
dec
push
jno
mov
sbb
stos
repnz
xchg
mov
aaa
lea
lock
gs
dec
mov
dec
dec
adc
sub
daa
iret
and
xor
xchg
mov
call
(bad)
sbb
idiv
add
lahf
jmp
mov
cmp
outs
test
cdq
dec
xchg
xchg
pushf
sub
adc
sub
in
fs
cmps
jge
mov
sbb
stos
in
shl
xchg
scas
lds
aas
or
adc
push
in
inc
jno
mov
repnz
mov
push
push
sbb
inc
jnp
sbb
jno
hlt
movs
mul
push
lea
sub
mov
mov
mov
repz
sbb
enter
out
nop
xor
lea
inc
or
and
cmc
add
lods
jns
outs
xchg
js
dec
movs
test
fisttp
cmp
movs
in
mov
das
(bad)
fsubr
cmp
sahf
mov
ja
xor
mov
mov
and
jl
and
dec
test
outs
mov
or
ds
dec
sub
nop
inc
inc
cmp
shl
lods
(bad)
call
mov
fs
ror
dec
scas
lds
push
je
(bad)
dec
mov
sbb
mov
jp
js
out
arpl
pop
fcmovb
lods
and
scas
(bad)
test
push
outs
hlt
cmp
inc
cmp
adc
push
rol
mov
push
clc
into
call
push
pop
arpl
sar
mov
mov
cmc
pop
(bad)
jae
mov
cmp
pop
ja
nop
outs
js
mov
mov
in
in
xchg
sahf
cmp
mov
xor
je
test
shl
ins
or
cmp
xor
call
fs
mul
call
aad
movs
mov
and
movs
push
js
jmp
jne
(bad)
out
pop
jbe
fs
push
jecxz
sar
mov
cmp
dec
or
shl
inc
(bad)
js
das
xchg
imul
mov
mov
lods
xchg
xor
xchg
dec
ss
jge
or
lea
adc
dec
ret
or
dec
lds
ret
dec
les
mov
mov
lods
inc
jne
mov
jnp
shl
outs
mov
dec
les
mov
push
sbb
mov
packuswb
add
lods
test
daa
lods
sub
fdiv
fwait
or
scas
stos
mov
cmp
sbb
mov
or
pop
cmps
cmp
sbb
mov
jnp
stos
cmp
imul
ins
in
mov
cmp
xchg
or
mov
arpl
adc
inc
pop
loope
and
das
leave
inc
jo
mov
rcl
or
ror
(bad)
frstor
retf
out
jb
sub
out
and
dec
bound
cmp
xchg
push
cwde
gs
pop
cmps
test
jb
sbb
js
jp
inc
ds
mov
adc
jl
cmp
push
mov
or
shld
adc
xchg
and
mov
jge
add
and
jp
cmps
cmps
adc
test
fwait
retf
outs
imul
xchg
pop
sub
div
out
pop
fnstenv
mov
jne
jno
mov
pop
aad
outs
mov
xor
mov
mov
inc
outs
sahf
fbld
mov
outs
sub
jge
jno
and
pusha
int
dec
xchg
xchg
(bad)
in
mov
add
or
rcr
pop
enter
push
mov
stos
dec
loop
cmps
lods
test
in
adc
push
mov
int3
adc
sbb
mov
shr
pop
cmps
jns
jle
(bad)
shr
and
retf
mov
sar
xchg
pop
xlat
push
inc
loope
stos
loope
xor
loope
jne
lock
pop
in
stos
lds
mov
mov
push
mov
pop
jge
cmp
outs
test
xor
pusha
out
movs
cli
push
scas
mov
cwde
ins
ficom
popa
mov
(bad)
stos
push
fsubr
and
movs
xchg
cs
jne
scas
inc
mov
inc
jbe
mov
ja
inc
bound
mov
push
add
cmp
jo
je
dec
je
test
mov
dec
mov
xchg
jnp
push
pop
sub
pop
xchg
push
ret
dec
fwait
mov
lahf
xor
outs
sbb
lds
or
sub
addr16
sub
adc
js
imul
and
mov
sbb
mov
jno
je
mov
add
sub
xor
dec
push
mov
mov
sbb
pushf
push
mov
shr
xchg
pop
mov
pop
loop
jnp
sbb
push
mov
sti
test
push
mov
jmp
jo
fimul
repnz
ins
movs
sub
jl
mov
js
mov
add
les
push
and
mov
jge
std
js
jmp
xor
jo
and
or
xor
mov
push
psrlw
addr16
push
pushf
ja
mov
(bad)
aas
xor
ror
pushf
rcl
xchg
data16
push
outs
cwde
repz
xor
mov
arpl
aad
push
push
and
mov
adc
pop
inc
jp
jnp
test
adc
not
leave
mov
lahf
jecxz
dec
jl
fwait
jno
imul
pop
and
outs
push
inc
jbe
shl
push
adc
test
or
shr
inc
jmp
push
popa
push
stos
lahf
jnp
mov
jge
adc
and
iret
rcl
xor
dec
fs
iret
ins
add
gs
popf
pop
sub
iretw
push
or
mov
sub
and
adc
xor
dec
bound
jne
jb
or
adc
pop
pop
shl
push
popf
pop
pop
fwait
imul
inc
pushf
stos
xor
mov
pop
mov
inc
mov
loope
cmp
in
mov
das
mov
push
imul
xchg
out
nop
push
outs
or
xor
jg
je
repz
(bad)
and
sbb
in
xor
pop
bound
out
mov
sbb
cld
sar
jns
jle
into
push
mov
popa
mov
cmps
mov
mov
fcmovbe
leave
arpl
js
jmp
call
and
test
push
mov
repz
(bad)
cmp
adc
stos
scas
lods
jle
cli
push
dec
call
mov
rcr
out
test
jns
pop
sub
mov
jb
or
inc
jo
xchg
cli
sbb
mov
and
push
stos
xchg
pop
jge
dec
mov
mov
xchg
jae
cs
jp
sub
(bad)
popf
les
pop
mov
jecxz
dec
inc
(bad)
and
lds
jle
mov
pop
adc
xchg
xlat
rol
inc
xchg
xchg
mov
push
out
push
sub
das
jecxz
xor
stos
add
or
ja
jns
lods
mov
loop
jnp
movs
aas
mov
and
shr
shl
xchg
fwait
das
pop
mov
or
(bad)
imul
(bad)
sub
mov
adc
ret
adc
dec
add
mov
cdq
or
in
mov
outs
cdq
xor
sbb
jge
push
jecxz
cdq
icebp
sub
imul
outs
gs
pop
(bad)
dec
and
pop
mov
push
repz
xor
pop
shl
sbb
sub
fisub
cdq
and
or
xor
adc
hlt
push
inc
scas
adc
test
push
xchg
fwait
mov
sub
xchg
ja
fwait
je
mov
mov
out
js
gs
cld
scas
mov
fdiv
xchg
(bad)
int3
jae
xchg
jno
mov
(bad)
push
jge
int
test
xor
jl
cmp
sahf
jp
enter
lea
pop
cwde
sbb
repnz
fwait
(bad)
ret
das
sub
mov
sti
jge
pop
mov
cdq
pop
jno
adc
in
push
and
mov
pop
std
jnp
push
sbb
jno
sub
jbe
add
stos
mov
xchg
je
inc
stos
adc
mov
or
cmp
movs
mov
mov
dec
jl
sub
es
push
xchg
popa
inc
(bad)
lods
mov
mov
xor
jo
pandn
xor
pop
adc
or
adc
xchg
test
das
jg
adc
inc
fcmovnbe
sbb
test
mov
xor
fist
(bad)
or
adc
popa
js
mov
add
imul
and
(bad)
xor
sub
push
and
out
cwde
into
mov
push
mov
mov
sbb
test
mov
ret
pushf
mov
imul
lods
stos
xchg
push
mov
sti
and
leave
cmps
aas
int
xchg
mov
mov
cli
and
pushw
int
in
clc
pop
lds
in
sbb
jmp
push
inc
es
pop
and
mov
sub
scas
add
mov
cs
or
sub
inc
and
xchg
fstp
int3
mov
sbb
data16
(bad)
lods
push
aad
outs
out
sub
push
jge
push
add
sbb
shl
pop
sbb
cmps
ficom
xor
push
rep
cmp
or
xchg
xchg
das
js
hlt
sbb
ret
adc
adc
adc
inc
ds
cmc
jle
sbb
and
mov
imul
int
popf
jno
pusha
lds
cmp
pop
sbb
add
xchg
or
mov
test
rcl
xor
js
std
loope
sbb
outs
xor
and
scas
or
xchg
pushf
push
sub
retf
jmp
test
aad
sbb
add
mov
fld
sub
in
in
aas
sbb
fmul
xchg
sbb
jbe
pop
fidivr
mov
int
add
cmps
push
scas
ret
(bad)
mov
cmps
in
and
inc
stos
mov
dec
jno
outs
imul
xchg
(bad)
pop
outs
repnz
iret
(bad)
movs
sub
sar
(bad)
fldcw
test
xor
or
fbstp
jns
(bad)
ins
jmp
jle
or
in
sub
enter
arpl
mov
(bad)
int
mov
add
xchg
push
gs
in
sub
ins
xchg
jno
in
out
in
pop
(bad)
jb
xor
scas
cmp
adc
mov
push
and
mov
inc
les
fadd
outs
movs
jp
popa
scas
push
xchg
mov
mov
jp
xchg
sub
sbb
mov
(bad)
sub
xor
push
jge
gs
push
xor
or
mov
imul
stos
js
jo
lods
mov
xchg
les
int3
inc
xor
jge
iret
popa
mov
sub
bound
shl
mov
and
jmp
retf
xor
mov
push
add
mov
dec
mov
jnp
data16
mov
mov
inc
clc
scas
pop
out
cdq
fidiv
push
shl
lock
fxch
je
cwde
xchg
mov
mov
jge
fiadd
xchg
jne
or
ror
ins
add
sub
cs
popa
lock
outs
movs
sub
xchg
mov
out
test
in
xchg
add
call
xchg
lods
sbb
lds
jge
inc
fwait
jge
cmp
adc
mov
test
jo
sub
pop
mov
pop
sub
jno
sbb
cmps
inc
mov
jle
ins
cmc
and
cdq
daa
inc
mov
jb
mov
test
aad
add
fwait
and
out
clc
jno
and
xchg
js
add
lea
das
jo
pop
repnz
pop
pop
fist
push
xchg
mov
xchg
jg
inc
cmp
loop
or
dec
aas
call
gs
mov
js
cwde
(bad)
pop
mov
mov
and
scas
push
jecxz
add
push
scas
pop
cmp
pop
aas
xlat
mov
mov
js
mov
push
mov
daa
lahf
jg
retf
push
mov
pop
repnz
jns
fwait
sbb
xchg
imul
arpl
sub
gs
(bad)
mov
gs
pop
shl
mov
mov
cmp
fnstsw
scas
xlat
mov
pop
int
call
xor
cmp
add
push
xor
push
bound
sbb
out
fiadd
addr16
jb
imul
push
scas
imul
outs
test
sbb
out
outs
outs
jmp
mov
dec
jb
xchg
mov
cwde
xchg
(bad)
cmp
outs
out
jnp
jl
mov
test
push
stos
(bad)
pop
ins
dec
pusha
stos
addr16
shr
imul
xchg
gs
pop
popf
and
outs
lods
mov
mov
fmul
inc
sbb
sbb
xchg
mov
inc
push
dec
jns
js
daa
inc
lods
sub
adc
and
push
dec
dec
mov
or
dec
adc
div
fbld
fadd
sahf
addr16
adc
dec
ds
test
adc
dec
pop
pop
mov
inc
and
sbb
mov
in
movs
imul
outs
jl
lock
mov
call
jo
dec
and
jl
lea
not
xchg
mov
imul
xchg
mov
mov
cli
or
sub
ds
(bad)
cmp
jae
xchg
shl
xor
pop
mov
xchg
mov
call
cmps
outs
pop
and
shl
adc
inc
stos
and
jg
and
pusha
dec
mov
xor
push
out
mov
inc
(bad)
mov
mov
jge
or
out
cdq
pop
cs
xchg
mov
cs
jbe
sbb
lods
sahf
xchg
sahf
leave
lds
push
jp
fbstp
arpl
dec
call
push
sub
jmp
ins
mov
fadd
or
stos
jle
mov
shl
mov
and
adc
cmp
mov
push
ja
xor
jecxz
pinsrw
cwde
(bad)
(bad)
xlat
fist
adc
popa
imul
pop
scas
aad
dec
push
jl
dec
sub
fcomp
fwait
jo
xchg
and
rol
lods
mov
punpcklwd
dec
addr16
out
sar
cmp
jo
(bad)
sbb
shl
movs
into
push
cmp
sahf
gs
inc
jae
inc
cmp
ss
inc
inc
cmp
call
xchg
movs
in
inc
(bad)
xlat
push
aas
cmp
loopne
push
mov
mov
add
mov
jle
cmp
fidivr
aad
mov
sahf
jl
adc
pop
arpl
cmp
mov
cmps
sub
dec
xchg
fisttp
pop
mov
and
lahf
fdivr
cmp
es
and
push
jnp
jecxz
stos
sbb
sbb
test
out
sbb
retf
fiadd
push
stos
enter
pop
push
enter
sbb
xor
sub
add
cmp
jge
addr16
imul
fild
jnp
test
and
frstor
mov
adc
imul
iret
cmp
inc
jae
pusha
dec
fdivr
pop
push
pop
jmp
repz
sbb
gs
xchg
pop
jno
cmp
outs
addr16
call
sbb
test
cli
fnstenv
jge
jmp
push
lods
(bad)
fimul
inc
(bad)
jmp
outs
dec
sbb
sub
xchg
xchg
cld
pause
pop
sbb
adc
int3
aad
leave
adc
lar
xchg
imul
xor
sub
or
lahf
arpl
ds
stc
pop
mov
out
xchg
dec
cmc
addr16
arpl
mov
leave
mov
jp
cmc
lds
out
pop
jl
stos
inc
int
(bad)
retf
dec
jb
test
sub
out
or
sbb
push
sbb
cmp
push
xchg
clc
es
fidiv
sbb
ds
das
and
jge
into
movs
aad
pop
jns
push
or
das
js
dec
leave
pop
rol
stos
pop
inc
sub
fwait
data16
(bad)
inc
imul
sbb
sbb
jl
cmp
push
loop
dec
or
sbb
or
pop
xchg
lea
dec
sbb
ja
mov
jne
mov
pop
sbb
fisubr
and
movs
pop
jge
fild
test
cmp
xchg
dec
push
aad
fist
cdq
popa
pusha
mov
test
xchg
adc
pop
jp
jns
out
cli
cmp
or
mov
imul
sub
push
ins
nop
adc
cwde
loopne
jb
push
std
call
jo
imul
sub
dec
dec
xor
repnz
sbb
dec
das
adc
and
movs
pop
push
icebp
and
aaa
cmp
dec
pop
or
mov
loop
jge
fild
jmp
fisub
xchg
cpuid
mov
loopne
stos
pusha
pop
data16
enter
adc
mov
fisubr
jbe
daa
jmp
jb
push
out
bound
sbb
xor
xchg
pop
addr16
test
sbb
test
jmp
jbe
imul
pusha
inc
imul
inc
das
ror
ins
rcl
je
ja
jo
into
push
int
jno
xchg
jmp
imul
add
addr16
mov
cdq
in
enter
xchg
fld
cdq
cmc
sub
cmp
jbe
scas
sub
add
cmps
sbb
inc
add
mov
or
stc
iret
cmp
mov
jno
mov
loopne
out
cmps
(bad)
je
cli
ret
cmp
xchg
icebp
pop
das
inc
arpl
add
jle
mov
fcmovnu
shl
ret
sbb
ss
push
popf
js
pop
(bad)
dec
inc
and
adc
or
jg
jbe
pop
out
bound
push
cmp
fld
sub
(bad)
xlat
(bad)
test
lods
jo
mov
sbb
sbb
jnp
add
cwde
ds
gs
and
int3
xor
fs
pop
jp
mov
stos
jge
frstor
fstp
xchg
stc
fwait
pop
in
push
inc
cld
mov
xchg
push
addr16
jb
or
fidivr
outs
add
jle
lock
mov
add
mov
mov
repnz
or
fwait
and
pop
mov
sub
call
add
test
cmp
inc
push
mov
pop
daa
retf
jno
out
xchg
sti
xchg
es
inc
sbb
(bad)
das
inc
pop
retf
paddd
ins
sbb
call
push
add
aas
scas
add
test
push
xchg
lods
addr16
sub
push
rol
lods
gs
and
fdivr
and
pop
dec
inc
inc
cli
int
dec
clc
outs
jl
jb
cmp
rcl
jno
pop
into
lock
gs
pop
test
jmp
(bad)
aaa
in
or
cld
aad
and
pushf
mov
data16
cdq
cmc
fsubr
retf
gs
push
dec
mov
or
sub
or
adc
arpl
jge
mov
jo
dec
adc
sub
cmp
outs
or
pop
or
outs
jno
cdq
add
addr16
(bad)
(bad)
pop
out
cmp
jmp
jmp
aad
call
cli
or
loope
cmps
popf
rol
stos
add
scas
add
or
or
adc
adc
pop
rcl
push
cmp
and
and
or
or
sub
fldcw
sbb
xor
and
popa
pop
and
inc
out
inc
inc
dec
repnz
xor
dec
xchg
cli
dec
cmp
push
cmp
add
pop
sbb
pop
dec
imul
imul
dec
call
movs
movs
test
pusha
sar
(bad)
and
rol
or
jmp
cmps
test
scas
pop
adc
cmp
paddw
inc
pop
(bad)
clc
jge
repnz
push
mov
adc
dec
loopne
jle
adc
fiadd
mov
xor
dec
sub
(bad)
push
mov
sbb
rep
push
popf
adc
leave
aam
and
adc
push
mov
mov
inc
pusha
in
pop
sbb
dec
pop
popa
push
arpl
inc
scas
mov
mov
mov
call
call
aam
in
sub
imul
pop
mov
mov
dec
fs
jnp
xchg
and
mov
nop
aad
movs
call
in
mov
pop
arpl
das
aaa
add
nop
lahf
call
xchg
call
into
mov
inc
adc
or
movs
mov
ins
sub
jg
ins
bound
adc
push
or
dec
ins
adc
adc
cmp
mov
sub
inc
or
mov
mov
xchg
xchg
fsub
popw
cmc
pop
popa
add
mov
loope
mov
(bad)
pop
jl
test
(bad)
jge
inc
or
jne
or
iret
scas
in
push
mov
test
(bad)
push
shr
mov
jno
xchg
sub
pop
jnp
sbb
xchg
je
ror
jno
aaa
xlat
stos
mov
or
iret
popa
push
mov
xor
and
xchg
xor
push
stc
sbb
dec
mov
sbb
mov
sub
inc
gs
lods
cli
and
test
popf
inc
test
add
inc
mov
fsubr
mov
lods
pop
adc
out
inc
inc
jae
(bad)
cmp
loopne
pop
out
rol
cmp
loop
in
(bad)
(bad)
dec
fst
call
or
adc
xacquire
loopne
(bad)
jns
adc
int3
stos
movs
cli
jb
or
adc
sbb
adc
push
sbb
das
xchg
mov
lods
ret
dec
retf
push
ds
or
repz
jmp
mov
popa
adc
pop
int
jae
ret
fmul
jo
in
lea
outs
jl
test
popa
cwde
mov
mov
into
pop
pop
or
test
aam
inc
popa
daa
imul
or
addr16
sub
push
js
ds
sbb
rcl
mov
test
dec
(bad)
in
mov
sbb
cmps
push
shl
xchg
invd
mov
jecxz
push
mov
xchg
sahf
xchg
arpl
mov
nop
jp
jmp
cwde
adc
aaa
fcomp
inc
test
jp
adc
jmp
mov
scas
mov
inc
push
mov
or
call
in
xchg
jne
or
push
aaa
and
cmp
sbb
sahf
fdecstp
or
rcr
ror
popa
pop
dec
mov
imul
aaa
push
mov
push
pop
fcom
pop
jae
pop
int3
dec
mov
call
xchg
push
and
fstp
sar
cmps
pusha
ins
adc
mov
test
into
cld
pop
popf
adc
push
xchg
inc
xor
cmp
data16
xchg
mov
inc
jg
inc
or
or
rcr
stc
pop
cmp
or
les
ret
jo
jmp
add
lds
aam
pop
mov
adc
add
lea
enter
retf
adc
jecxz
icebp
lds
jne
in
daa
inc
sub
dec
in
push
(bad)
inc
or
add
xchg
or
aas
sbb
pop
mov
push
popa
add
or
mov
sbb
gs
sub
mov
add
wbinvd
sub
jg
lea
fmul
pop
cwde
ins
test
shr
inc
push
out
push
fidiv
out
imul
lds
cmp
mov
test
into
dec
dec
outs
es
push
and
loopne
pop
pop
int3
xor
loope
xchg
dec
pop
in
cmp
push
les
ja
test
cmp
cmp
push
sbb
enter
dec
ficom
sub
mov
fwait
add
jl
jp
push
pop
pop
mov
mov
lds
jp
test
pop
(bad)
adc
icebp
stc
add
xlat
mov
loope
cs
test
adc
popa
xchg
in
test
xor
sub
and
xchg
mov
bound
cld
jl
push
mov
adc
xor
dec
jno
popa
sbb
(bad)
call
cmp
jnp
mov
lahf
xchg
push
out
pop
inc
or
ror
pop
stos
mov
call
xchg
mov
xlat
push
xchg
outs
cs
sbb
int
sahf
jmp
loope
jl
icebp
int
add
in
outs
call
imul
inc
popa
retf
dec
pop
sbb
loope
popa
ja
xchg
(bad)
pop
inc
fldcw
je
popa
mov
push
dec
or
pop
mov
pushf
mov
ins
test
dec
ins
ret
jg
out
shl
push
jmp
jns
popa
mov
test
enter
or
aad
in
mov
dec
cli
push
push
xlat
sub
sbb
or
xchg
jno
pop
xor
pop
jne
xchg
scas
stos
mov
cmps
repnz
xor
ja
adc
and
inc
mov
movs
stos
or
xchg
int
popa
pop
or
or
mov
lea
pop
cmp
mov
or
dec
push
cmps
cs
jno
stos
mov
xchg
fisttp
std
push
les
popf
jl
jno
or
pop
jecxz
mov
add
ss
push
mov
jl
sahf
push
stos
sbb
aas
dec
mov
sub
shl
sbb
push
psubusb
jne
jmp
jl
rol
imul
adc
cmc
dec
iret
lahf
int3
jg
arpl
in
mov
loop
pop
inc
sbb
sub
or
cmp
iret
test
dec
loopne
in
jne
test
xchg
cmp
retf
outs
pushf
add
or
aad
data16
dec
inc
lock
iret
mov
mov
push
ja
dec
add
in
lods
outs
mov
jecxz
or
dec
sub
xchg
mov
ficomp
sbb
loop
bound
mov
jae
adc
cwde
inc
cmp
test
dec
int3
xchg
repz
pop
inc
cdq
fnstsw
inc
sbb
adc
inc
inc
outs
mov
mov
dec
jle
sbb
and
loope
rcl
fs
and
and
(bad)
aam
sar
(bad)
push
gs
std
or
pop
icebp
push
(bad)
mov
std
add
sub
int3
(bad)
ror
cmc
or
ins
in
mov
jns
js
or
xchg
call
mov
aam
jge
sti
pop
and
rol
xor
popf
nop
fs
mov
jmp
cmp
test
mov
and
jmp
mov
popa
ret
add
mov
lea
aas
js
dec
retf
mov
jnp
nop
rcl
add
bound
cmp
jl
jbe
jle
inc
cld
sbb
popa
xchg
cmp
ret
inc
loopne
xchg
sub
jno
icebp
or
xor
ret
aaa
xchg
repz
addr16
or
mov
ins
nop
in
test
gs
jmp
pop
xor
inc
cmp
mov
or
jmp
push
xchg
sub
or
popa
sti
cvtdq2ps
and
rcl
gs
jmp
xchg
jb
imul
inc
(bad)
adc
imul
sbb
arpl
test
mov
ss
daa
or
inc
lods
lods
stos
inc
movs
int
adc
in
fwait
xlat
ja
repnz
mov
mov
or
std
sbb
push
clc
ret
inc
leave
mov
inc
or
cmc
mov
in
push
stos
popa
rcr
scas
es
or
mov
inc
pop
adc
sbb
pop
jnp
dec
repnz
cmc
push
pusha
jmp
retf
test
cmp
pop
(bad)
mov
mov
cwde
ins
push
xor
fwait
test
xor
call
not
dec
and
mov
scas
mov
pop
ins
cmp
xor
mov
dec
add
dec
or
fdivr
push
(bad)
(bad)
xor
fs
pop
cmp
mov
cld
add
mov
inc
push
inc
ss
push
loope
jns
push
jge
xor
xor
push
(bad)
xchg
xor
pop
pop
fldenv
jmp
inc
adc
add
popa
push
inc
mov
xchg
inc
in
pop
push
mov
mov
inc
sub
mov
xchg
inc
mov
mov
sbb
adc
inc
lock
(bad)
pop
bound
jns
mov
mov
lock
test
pop
dec
ror
jle
rcr
cdq
adc
mov
jmp
nop
adc
in
jecxz
mov
jno
push
popa
ins
scas
lods
aam
fnstcw
test
nop
mov
jl
adc
int
fcom
mov
push
or
push
popa
sbb
test
sbb
mov
push
sub
jge
shr
pop
mov
leave
xor
imul
mov
mov
push
into
ins
inc
push
pop
jne
add
inc
lods
mov
ret
js
pop
out
out
(bad)
test
fldenv
rcl
cld
jmp
xchg
mov
inc
cwde
pusha
retf
pop
pop
(bad)
jle
sbb
movs
lds
add
mov
stos
inc
push
sar
in
mov
push
stos
loopne
mov
dec
pop
push
mov
cli
adc
push
movs
arpl
icebp
inc
xchg
mov
pop
fisub
movs
xor
dec
push
mov
xor
mov
test
sub
xor
jbe
cmp
popf
popa
and
outs
pusha
or
lds
pop
lock
add
or
jecxz
adc
dec
std
jmp
mov
push
pop
fucomi
leave
(bad)
(bad)
ret
je
leave
mov
mov
pop
mov
jmp
les
nop
in
fcom
jne
jmp
mov
mov
shl
xlat
movs
lods
in
stc
sub
ins
std
or
dec
mov
dec
push
mov
retf
shr
sbb
arpl
into
mov
jno
adc
(bad)
mov
rcl
sub
push
inc
retf
fld
mov
mov
xor
jmp
mov
(bad)
sbb
into
xchg
mov
retf
retf
inc
push
shl
push
cld
dec
popa
jge
scas
lock
test
fsubr
dec
adc
push
scas
iret
xchg
inc
and
imul
inc
mov
cdq
popa
dec
lea
rcr
popa
mov
fisttp
or
jb
add
retf
into
mov
sub
inc
jnp
(bad)
and
call
retf
and
ret
adc
mov
je
fisttp
pop
add
pushf
xor
test
and
fcomp
sar
fcomp
jns
adc
xchg
pop
in
push
dec
popa
fwait
adc
(bad)
mov
cmps
dec
lock
out
xchg
cmp
test
mov
retf
jb
fmul
dec
push
gs
inc
cmps
dec
add
outs
call
les
cli
inc
xlat
xor
or
push
pop
add
ins
frstor
pop
scas
enter
dec
dec
sbb
ja
fsub
retfw
in
fstp
cmp
adc
jns
pop
xor
mov
outs
addr16
fdivrp
jp
xchg
add
icebp
push
mul
or
jmp
sbb
push
xlat
std
mov
std
fist
ror
mov
pop
test
pop
clc
pop
imul
ins
shl
push
pop
sub
sbb
les
cmp
jmp
sbb
jmp
or
cmp
or
mov
fsubrp
jae
xchg
jnp
movs
jmp
pop
pop
sbb
mov
mov
dec
cmps
xchg
xor
jne
mov
or
mov
lea
add
call
(bad)
mov
mov
push
inc
test
mov
out
push
call
and
imul
punpcklwd
mov
ss
xor
pusha
loopne
mov
jne
pop
fs
fst
adc
pop
pop
add
push
mov
dec
ret
cwde
not
ret
cmps
sahf
or
cwde
xor
add
loope
or
sub
lock
std
retf
std
out
jmp
cmp
xchg
lods
pusha
idiv
pop
and
pop
scas
mov
(bad)
mul
add
jns
xchg
pop
xchg
shl
jne
sbb
popa
movs
mov
xchg
inc
mov
cmp
cmovbe
les
mov
push
mov
cwde
mov
xchg
daa
or
(bad)
pop
popa
int
dec
ja
dec
cmp
xor
stc
inc
cmc
inc
call
cmp
sahf
(bad)
or
mov
(bad)
std
icebp
push
add
js
aam
bound
pop
or
cmps
addr16
pop
pop
cmps
es
loopne
or
icebp
aam
mov
jne
xlat
das
mov
adc
popa
mov
inc
in
fisttp
add
ins
popa
out
cmp
add
inc
inc
outs
or
ja
adc
cmps
xchg
jb
add
popa
jns
jae
push
icebp
mov
fsub
mov
fcomip
adc
cmc
and
mov
mov
adc
lds
in
test
pop
(bad)
jg
push
inc
popa
pop
ror
adc
leave
or
pop
aaa
adc
add
fld
out
ret
inc
push
xlat
outs
repz
mov
adc
in
or
out
cwde
fwait
sahf
loope
sbb
call
fsubr
jecxz
push
pop
jecxz
pop
popa
xor
dec
in
dec
or
lea
xor
into
mov
adc
fisttp
aam
dec
push
je
add
sbb
push
dec
push
or
mov
data16
mov
pop
cdq
fcomp
or
test
pop
mov
mov
pop
xchg
or
inc
sbb
iret
mov
shl
dec
adc
sub
inc
cmp
stos
outs
cwde
pusha
in
mov
clc
mov
inc
retf
icebp
pop
xor
imul
xchg
sbb
mov
popa
in
popf
add
lods
xlat
inc
popa
enter
mov
call
xchg
jbe
ret
jmp
dec
loopne
pop
(bad)
or
clc
cwde
jno
test
(bad)
hlt
mov
(bad)
sahf
jle
arpl
retf
jg
mov
jge
ret
aas
push
push
fcomp
icebp
fstp
dec
int3
jns
and
cmp
(bad)
int
gs
popa
cmp
cdq
and
dec
popa
push
xchg
jno
popf
ret
rcl
mov
xchg
(bad)
in
mov
arpl
jns
test
sbb
js
cmp
jno
inc
inc
(bad)
(bad)
loope
mov
lods
popa
inc
ffree
in
add
xchg
popa
daa
jp
stc
add
cmp
pop
dec
imul
movs
jae
pop
mov
out
xchg
pop
jnp
add
sahf
dec
or
test
pop
loope
movq
jae
push
push
inc
add
push
and
or
cdq
pop
or
mov
(bad)
enter
mov
cmc
sub
push
movs
popa
imul
push
bound
in
or
int
pop
sub
stc
imul
ret
rcl
movs
mov
adc
cld
jmp
lahf
mov
mov
push
mov
imul
mov
in
and
pop
pop
fdiv
les
xchg
mov
mov
shr
rol
pop
cs
mov
push
in
ins
mul
pop
sbb
jle
gs
in
test
hlt
lahf
pop
in
test
clc
jp
cmps
xor
call
mov
or
repz
or
sbb
mov
jae
or
pop
pop
pushf
and
dec
lock
adc
outs
loope
fisttp
sbb
push
or
and
adc
scas
push
xchg
ins
push
mov
fwait
loop
punpcklwd
retf
and
retf
jle
inc
neg
gs
rcr
mov
scas
(bad)
popa
or
or
imul
ret
jg
or
push
mov
in
test
js
inc
sbb
(bad)
popf
out
or
retf
sbb
loop
jae
mul
icebp
inc
out
mov
push
cmp
sbb
lods
add
jg
sahf
cmc
dec
das
out
or
leave
mov
shl
inc
iret
jecxz
xor
pop
mov
jnp
mov
xor
push
sti
add
aam
push
adc
movs
es
ss
xor
outs
adc
mov
call
mov
cmp
mov
imul
(bad)
jle
les
int
fs
xor
or
cdq
or
sub
and
movs
cmps
xchg
pop
xchg
jmp
ds
pop
pop
jl
retf
xor
fldenv
popa
arpl
sub
cmp
jno
shr
in
dec
retf
and
xchg
adc
adc
cld
out
inc
fs
jg
in
mov
call
dec
push
aam
retf
cmps
bound
inc
frstor
inc
sahf
jmp
mov
cwde
outs
js
adc
sub
ins
jns
arpl
adc
enter
cwde
add
movs
pusha
shr
bound
push
inc
ins
test
add
xchg
adc
adc
dec
jge
cld
add
and
inc
pop
cmp
call
jecxz
stos
imul
mov
dec
dec
push
xor
aad
pop
sbb
jg
pop
imul
in
mov
in
lods
xor
out
push
cli
mov
or
dec
das
repz
and
or
aaa
inc
push
je
lods
pop
popa
or
dec
leave
mov
dec
inc
mov
std
enter
ret
xchg
inc
dec
das
and
sub
daa
leave
pop
xor
push
jmp
inc
dec
adc
popa
mov
out
ins
test
bound
out
outs
out
or
cli
(bad)
sahf
cmps
push
repnz
sub
test
mov
sub
rol
fwait
xor
lods
sub
fisttp
mov
inc
movs
push
xchg
outs
mov
pusha
cld
sar
out
fmul
or
lds
std
inc
inc
fwait
pop
pop
dec
or
ret
in
mov
push
(bad)
sbb
sbb
jmp
std
sbb
sub
inc
pop
lods
mov
pop
nop
push
jno
leave
das
mov
loope
sub
adc
fstp
cmc
aam
aas
mov
daa
fxch
cmps
enter
push
and
shr
or
xor
push
pop
mov
arpl
dec
imul
retf
fdivr
pop
ret
mov
adc
inc
lock
arpl
sbb
pusha
aaa
ficom
xchg
add
push
lahf
ret
sub
jae
cpuid
inc
iret
fs
push
popf
jp
(bad)
out
stc
mov
mov
dec
mov
mov
fs
shl
push
adc
pop
fimul
and
stc
or
popa
and
xchg
add
fnstcw
inc
sbb
out
push
push
popa
inc
xchg
sbb
sti
inc
add
pop
pop
mov
popa
or
cmc
inc
add
push
push
mov
push
jmp
and
pop
xor
mov
inc
inc
fdiv
sbb
jg
std
xor
hlt
pusha
xor
popa
ins
not
push
xlat
imul
dec
fs
inc
test
cmps
in
mov
inc
cwde
mov
fcom
jo
call
pop
add
stc
scas
sbb
push
sahf
stos
xchg
lds
jg
mov
inc
pop
or
push
cmp
xor
je
das
(bad)
xchg
dec
ins
cld
jle
inc
shl
and
pushf
shl
xor
iret
jo
and
adc
ret
dec
fs
adc
aad
pop
in
cmp
out
stc
inc
mov
dec
pop
xchg
sub
(bad)
adc
jge
mov
outs
dec
out
mov
ret
out
pop
pop
imul
xor
cmp
mul
(bad)
sub
mov
cmps
lea
xor
cdq
mov
nop
mov
test
jmp
shl
movs
pusha
popa
mov
pop
pop
mov
or
mov
mov
xchg
call
daa
inc
js
sbb
loopne
clc
sbb
cmovs
push
call
leave
jmp
add
push
imul
push
add
int3
push
repz
stos
jmp
mov
jno
dec
jecxz
inc
in
aas
mov
cmc
das
stos
loope
inc
scas
popf
mov
push
adc
push
lods
in
xor
arpl
cs
cmp
popf
stc
inc
or
adc
ds
fbld
cs
jo
jge
movs
pop
push
dec
pop
add
sti
cli
mov
inc
pop
(bad)
or
(bad)
inc
out
sub
adc
dec
pushf
sahf
xor
dec
lods
xchg
mov
daa
pop
inc
stos
ret
xchg
xor
int3
popa
pop
out
arpl
ror
repnz
fstp
add
xor
jp
addr16
stos
push
repnz
lea
rcl
mov
enter
ret
jge
push
fnstsw
sub
jno
pop
pop
sub
and
inc
or
imul
adc
(bad)
lock
inc
dec
data16
faddp
push
inc
adc
pop
xchg
outs
loopne
test
push
or
lods
and
sub
push
in
pop
pop
leave
fstp
inc
mov
push
push
jge
mov
mov
sub
mov
push
int3
cwde
lods
add
push
popa
add
xchg
test
and
mov
or
fbld
nop
sub
push
xor
test
(bad)
fs
stos
cmc
in
ja
jbe
mov
sub
lahf
and
ficomp
dec
dec
push
inc
mov
cmp
xchg
jp
jo
sti
rcr
push
cdq
push
jno
push
call
push
and
das
pop
dec
cmps
int
imul
dec
ss
jbe
out
xor
adc
push
or
lods
pop
push
leave
mov
sbb
push
popa
xchg
mov
mov
push
push
rep
xchg
nop
call
jge
inc
xor
int3
jnp
outs
mov
cmp
xchg
stos
inc
clc
shr
dec
jo
shl
xor
and
or
fisubr
add
lock
cli
fs
lods
add
fidiv
pop
jecxz
sub
mov
inc
pop
retf
dec
pushf
cmps
cmp
pop
pop
or
pop
xor
bnd
imul
mov
daa
xchg
or
(bad)
mov
das
or
mov
mov
mov
dec
int3
jg
jmp
aam
mov
inc
mov
in
mov
fistp
ins
lods
sbb
jecxz
push
inc
or
inc
mov
rcr
call
retf
xor
loope
movs
popa
xor
icebp
pop
cmp
jns
adc
in
add
dec
or
int
mov
retf
jp
push
loop
aad
jae
jo
lock
push
dec
jecxz
xor
bound
sbb
sbb
jmp
mov
(bad)
js
sub
das
pop
or
inc
imul
mov
inc
cld
stos
in
adc
sahf
adc
ficomp
xchg
test
scas
pushf
jmp
xor
jle
xchg
int
mov
xchg
ds
xlat
jge
shl
xchg
mov
and
das
add
or
or
pop
addr16
test
xor
xor
dec
mov
jl
popa
add
(bad)
adc
add
xor
xchg
test
in
mov
xchg
not
xchg
pop
inc
imul
call
clc
ret
cmp
xlat
push
cdq
push
cli
lea
loop
push
xlat
sub
fs
fldcw
xchg
(bad)
pop
jmp
aam
int3
sar
dec
leave
jp
sub
cld
dec
push
jbe
in
push
dec
shl
mul
add
mov
jle
dec
pop
cmp
cmp
pop
adc
jmp
cmps
das
shl
jo
popa
or
mov
pop
dec
xchg
fisttp
rol
(bad)
pusha
pop
fmul
cld
cwde
push
xchg
adc
mov
icebp
fs
inc
popa
setle
scas
pop
fistp
or
dec
fcmovne
fisttp
pusha
pop
pop
ss
dec
sbb
or
fs
shl
popa
loopne
arpl
xchg
jne
std
inc
out
pushf
mov
mov
cmp
rcr
fstp
inc
jno
pop
pop
rcr
mov
inc
push
xchg
stos
ror
inc
popa
mov
xchg
shl
clc
mov
push
call
pop
jmp
cs
xchg
inc
xchg
outs
xchg
repz
test
push
and
mov
ds
xlat
enter
test
movs
arpl
jmp
fiadd
push
xchg
inc
cmp
adc
loopne
or
daa
popf
sbb
fld
and
jno
push
jmp
retf
(bad)
ficomp
imul
jns
fwait
or
and
test
xchg
and
adc
and
mov
push
pop
in
fwait
ins
data16
mov
in
jns
neg
ror
pop
mov
(bad)
icebp
push
inc
xor
cdq
cld
add
popa
dec
fs
xor
gs
or
(bad)
xchg
xor
sbb
(bad)
xor
sub
inc
xchg
ud0
push
test
fwait
imul
hlt
pop
daa
and
call
jmp
loop
jmp
aad
xchg
fcom
push
in
add
lock
mov
int3
stos
or
call
scas
hlt
scas
(bad)
rcr
xchg
out
jae
dec
out
fnsave
adc
adc
xlat
cmp
mov
nop
xchg
test
ret
push
repz
js
aam
out
cmps
add
loop
hlt
(bad)
push
movs
pop
ror
pop
dec
loope
or
and
jmp
sar
fwait
dec
jb
xchg
ja
lds
test
sub
clc
sahf
mov
sub
div
test
or
test
dec
addr16
jne
jl
fst
xchg
pusha
dec
out
xchg
sub
push
mov
cs
xchg
neg
repz
lock
stc
test
jmp
push
or
out
mov
imul
lea
(bad)
das
fdivr
dec
sbb
xor
cs
inc
sbb
es
adc
push
push
shl
cmp
xchg
mov
pop
push
xor
repnz
cmp
dec
pop
popa
fistp
mov
push
xor
mov
cmp
or
jb
in
sub
dec
in
add
cwde
mov
mov
and
mov
cmp
popa
dec
aas
stc
jnp
mov
inc
add
and
cmp
call
repz
dec
pop
cld
(bad)
inc
loop
popa
dec
cmp
inc
or
sbb
repnz
mul
cli
(bad)
pop
pushf
aas
lods
cmps
or
pusha
fimul
inc
inc
sbb
(bad)
test
sahf
fs
fnstsw
(bad)
cmp
add
in
cmp
mov
pop
mov
mov
cmps
cdq
push
shr
pusha
push
lea
or
movs
jo
(bad)
std
aad
popa
repnz
jo
outs
ret
jno
lea
push
arpl
mov
clc
add
push
inc
in
jge
xchg
sbb
add
ja
leave
sar
stc
inc
dec
popa
mov
ds
in
pop
fdiv
cmp
jecxz
add
inc
jo
sbb
pop
retf
pop
or
lods
cmp
inc
out
xor
je
jle
lea
mov
sbb
jp
pop
retf
jecxz
pop
jno
push
jo
pop
sar
sub
ins
dec
sbb
pop
or
and
push
pop
into
push
lods
mov
inc
fidivr
(bad)
jmp
fimul
test
out
jnp
or
dec
push
sub
xor
cdq
ret
lds
pop
addr16
scas
jmp
jmp
fs
mov
stos
repz
or
call
dec
xor
imul
scas
jmp
inc
mov
and
pop
fld
xlat
clc
xor
xchg
sub
loope
push
cli
or
movs
adc
push
iret
aas
leave
or
pop
dec
rol
pop
dec
xor
mov
(bad)
les
in
mov
pop
test
adc
add
mov
(bad)
idiv
mov
jl
pop
or
or
push
inc
fwait
ins
and
nop
inc
out
aad
sub
mov
rcr
pop
adc
or
(bad)
cmps
scas
sbb
popa
xor
cmp
add
movs
or
pusha
test
or
sub
cmp
xlat
je
adc
pop
fld
in
(bad)
xor
into
jp
icebp
mov
mov
call
mov
sbb
inc
cmp
ror
inc
or
and
xchg
pusha
stos
mov
fisttp
adc
add
repz
push
pusha
and
xor
out
xchg
(bad)
addr16
pop
inc
and
lods
aam
stc
cmp
mov
fimul
aas
push
and
cmp
and
enter
mov
leave
jae
xchg
popf
fs
int
jae
movs
cmps
add
mov
pop
call
nop
cld
cdq
sti
(bad)
pop
aam
jge
(bad)
xchg
or
dec
repz
jmp
adc
addr16
movs
pop
mov
pop
mov
movs
xchg
leave
sbb
lock
mov
mov
xlat
jno
jg
push
adc
hlt
dec
lea
popa
test
pop
adc
lods
inc
sub
(bad)
jne
lds
xor
fwait
dec
pusha
mov
and
fisubr
test
pop
fwait
add
(bad)
in
add
mov
data16
and
ficomp
popa
mov
or
xor
mov
xchg
data16
ja
dec
cmp
xlat
sbb
fsub
push
dec
jnp
mov
cmp
loopne
(bad)
popa
jno
cmp
fwait
jp
inc
movs
jg
sar
lds
sbb
mov
mov
pop
mov
sbb
mov
push
pop
sbb
inc
and
stc
dec
cmps
cmc
jbe
push
rcr
jmp
sbb
nop
rcr
in
or
ins
aaa
add
movs
movs
sbb
test
cdq
retf
jge
xchg
dec
popa
ss
mov
dec
mov
xchg
not
cld
cmc
and
lods
sbb
mov
outs
inc
test
daa
mov
gs
mul
jmp
sub
or
jnp
mov
nop
xor
pop
dec
or
sub
inc
pop
pop
push
lock
mov
jg
shl
or
sbb
shl
push
aas
das
outs
inc
inc
repz
test
sbb
lods
sbb
pop
and
adc
jno
jnp
mov
pop
push
or
or
imul
(bad)
aas
aaa
popa
push
popa
jp
jl
xchg
push
jmp
shr
push
into
jo
jg
sbb
pop
dec
push
sub
mov
inc
int
nop
adc
xchg
xchg
push
lods
cmp
inc
jg
inc
xchg
cmp
outs
lahf
mov
outs
pop
pop
or
out
xchg
or
pop
pop
mov
cmp
or
int
and
pop
adc
jecxz
fs
rol
adc
pop
dec
sub
xor
sahf
push
out
lea
sti
push
adc
popa
ds
imul
inc
rol
mov
ds
jo
xchg
addr16
pop
push
outs
or
mov
push
loop
ds
hlt
cdq
fdivp
inc
loop
mov
mov
xor
jb
or
jno
es
pop
xor
xor
sahf
in
stos
sub
add
pop
movs
push
icebp
pop
pop
sbb
mov
jp
pusha
mov
pushf
daa
inc
mov
add
imul
pop
fld
cmps
push
mov
and
mov
mov
inc
xchg
fs
cmps
pop
jb
mov
adc
inc
sahf
mov
(bad)
pushf
pop
ret
cld
sub
jmp
ss
xor
les
and
inc
sub
lds
sbb
cdq
popa
mul
lods
cmp
scas
xor
shr
inc
adc
iret
sub
pop
outs
add
scas
dec
out
outs
push
pop
fwait
mov
loopne
sub
add
mov
jle
fimul
adc
mov
jmp
inc
mov
adc
cmc
inc
retf
xor
sar
mul
push
rcl
imul
(bad)
mov
out
or
lods
fninit
int
rol
mov
mov
dec
lods
popa
ficomp
dec
icebp
xor
pop
fwait
push
(bad)
popa
dec
lahf
add
xchg
dec
cwde
fmul
mov
xchg
ret
push
inc
sub
sub
jle
jmp
sbb
pop
(bad)
pusha
in
out
push
stos
jecxz
je
addr16
movs
fucomip
into
popa
cmp
mov
mov
aam
xchg
repnz
(bad)
in
fist
adc
(bad)
fucom
and
test
sti
fadd
mov
adc
gs
mov
inc
xchg
(bad)
mov
inc
dec
dec
(bad)
data16
mov
jae
or
pop
stos
lahf
or
jg
loop
fisub
inc
sub
or
sbb
(bad)
pop
jle
int
push
mov
test
std
js
pop
add
push
in
dec
stc
add
int
int3
or
arpl
pop
sub
cld
adc
jbe
xchg
or
lahf
lea
and
(bad)
jmp
jmp
fdivrp
(bad)
xchg
stc
mov
bound
dec
out
xor
(bad)
lahf
in
fstp
enter
hlt
sbb
or
xchg
daa
push
or
pop
cli
xchg
and
jle
cmovge
inc
cmp
add
das
(bad)
cmps
jp
mov
mov
dec
arpl
lahf
into
jae
das
xor
imul
out
fwait
xlat
add
jecxz
shl
sti
mov
shl
push
out
pop
pop
fisubr
and
dec
inc
add
pop
or
(bad)
push
pop
cld
pop
fisub
push
xlat
pusha
les
icebp
(bad)
add
loopne
loope
dec
js
ins
xchg
sbb
push
pop
sub
gs
adc
scas
cli
mov
fadd
sbb
pusha
mov
mov
pop
or
jnp
jb
aam
push
lods
and
rol
pop
and
in
cwde
inc
xchg
dec
pop
fistp
xchg
jnp
add
rcl
loope
mov
retf
mov
sub
dec
cs
cwde
push
sub
mov
(bad)
mov
into
cmp
call
or
inc
xor
popa
paddb
cmp
jecxz
adc
rol
ja
pop
je
stc
dec
adc
pop
xor
lods
stc
push
outs
mul
lahf
fcom
inc
je
popa
push
fwait
sbb
fisub
popa
add
ins
mov
xchg
call
sub
cmp
pop
sbb
ret
cmp
inc
push
ret
jno
xchg
pop
movs
jl
js
mov
lock
lahf
mov
bound
xchg
add
push
sub
sbb
fimul
int
mov
retf
or
pop
popa
push
in
sahf
vshufps
mov
sub
push
mov
xchg
mov
or
pop
pop
int3
js
gs
cmps
inc
push
fs
mov
in
xor
mov
or
cwde
ret
stos
or
mov
test
fnstsw
or
dec
nop
mov
loop
adc
enter
lds
pop
and
stos
popa
inc
mov
lahf
or
imul
(bad)
(bad)
clc
test
push
xor
mov
in
inc
dec
fadd
sbb
add
gs
jge
pop
mov
xchg
das
and
fcmovne
mov
outs
test
dec
mov
sbb
sbb
and
(bad)
mov
lea
aas
sub
arpl
inc
cmps
sbb
rcl
movs
pusha
(bad)
in
xor
retf
mov
mov
jge
add
xchg
cmp
in
xchg
push
stos
stos
xchg
data16
add
arpl
fwait
ret
sub
cli
popa
xchg
aaa
jp
fild
inc
fiadd
pop
ror
retf
push
imul
jno
loope
gs
fst
pop
jnp
stc
pop
loopne
adc
(bad)
popf
mov
lea
cmp
push
sub
mov
cld
test
in
adc
jae
mov
xor
mov
dec
loope
cli
push
cwde
jp
push
cdq
xor
retf
dec
leave
mov
pop
test
jmp
dec
fstp
xchg
mov
in
sub
inc
push
push
inc
xchg
popa
add
xchg
test
cmp
aam
xchg
call
popf
mov
jmp
pop
pop
sub
xchg
dec
add
movs
repnz
pop
fcmovbe
gs
lods
lock
in
in
or
xchg
sub
sub
jmp
pop
popa
aas
pop
test
pop
rcl
cli
icebp
test
xchg
(bad)
sbb
into
retf
test
jnp
ret
cmc
aam
icebp
out
mov
sbb
pop
sar
sbb
stos
aaa
rcl
js
pop
rol
cmc
addr16
mov
retf
mov
loope
or
lds
(bad)
popa
leave
mov
mov
test
lods
xchg
ds
and
fdiv
mov
fwait
lods
sub
sub
mov
bound
dec
mov
pop
ins
pop
(bad)
das
lahf
xlat
enter
fiadd
fdivr
popa
jnp
dec
dec
lea
xchg
repz
cmp
push
dec
jg
jecxz
aad
xor
pop
xor
adc
dec
mov
loopne
int
jns
loope
aad
popa
push
dec
xchg
data16
sar
or
xlat
aam
xchg
out
xchg
hlt
xchg
iret
sbb
cli
test
out
popf
push
dec
cld
jmp
mov
mov
sbb
push
mov
icebp
bound
int3
enter
cwde
test
scas
jb
icebp
jg
jg
or
inc
std
out
mov
fisubr
mov
mov
adc
mov
jmp
and
imul
sub
call
ror
in
stos
adc
cmp
mov
adc
bnd
das
add
nop
xchg
lods
sub
adc
pusha
jmp
push
inc
nop
enter
pop
push
xor
adc
ss
cdq
imul
(bad)
mov
mov
fwait
pop
push
cs
or
sahf
clc
xor
stc
aas
pop
retf
int
jae
mov
push
test
xor
inc
sub
fcmovne
aas
dec
and
xchg
out
rcl
cmps
js
jmp
push
sbb
dec
add
fisub
adc
into
js
addr16
pushf
jbe
push
mov
iret
rol
out
jmp
inc
mov
jle
fisttp
imul
outs
fadd
pop
and
push
enter
enter
xchg
cdq
xor
xchg
adc
mov
(bad)
ja
leave
sti
in
lods
cmp
cmp
push
pop
loop
add
mov
or
fcomp
es
mov
mov
or
dec
outs
lods
adc
and
mov
cmp
lahf
xor
push
nop
pop
and
ja
arpl
loopne
cli
mov
or
add
xchg
jge
adc
scas
pop
nop
imul
out
ror
mov
xor
cld
mov
add
aas
push
or
inc
xchg
stc
jo
ja
cdq
fiadd
dec
or
inc
xor
sub
push
xor
or
(bad)
xlat
fsubr
dec
stc
sbb
outs
jge
sub
inc
jle
sbb
pop
mov
or
in
outs
loopne
xchg
jo
adc
push
test
cmp
shr
xchg
xlat
sub
rcl
popa
enter
sub
or
outs
imul
dec
cmc
in
retf
dec
popa
popa
leave
jno
add
scas
pop
shr
outs
inc
jb
gs
jae
xor
dec
lds
add
push
jmp
jmp
or
hlt
xor
sub
add
jl
pop
dec
rep
pop
mov
movs
sbb
push
mov
imul
or
movs
pushf
jne
stc
in
mov
das
dec
and
cmps
stc
gs
cld
cld
movs
jmp
aad
pop
loope
call
mov
jno
pop
or
xchg
sbb
mov
call
inc
adc
or
ret
test
outs
cli
fcomip
pop
sbb
popa
arpl
mov
fwait
pop
(bad)
lods
inc
loope
sbb
cli
add
daa
adc
mul
xor
push
cmp
jbe
mov
dec
inc
fiadd
push
loopne
data16
rcr
ss
cmp
dec
js
pop
xor
pop
shr
push
push
cli
push
cs
xor
call
jmp
xor
out
or
inc
mov
(bad)
xchg
ins
inc
mov
movs
pop
imul
xchg
popa
in
cmp
mov
sub
fisttp
test
scas
fsubr
push
mov
out
dec
lods
fnsave
mov
jg
inc
ficom
sub
stos
into
jo
pop
mov
ret
push
mov
xchg
inc
xor
rcl
repnz
xor
retf
sbb
or
and
jp
cmp
cld
dec
aam
pop
mov
or
fsub
xlat
inc
mov
inc
arpl
into
dec
sbb
add
je
sub
xor
fcmovnb
lock
cmp
les
lods
das
out
pop
mov
clc
cmp
dec
adc
and
mov
scas
pop
dec
rol
jns
pusha
cs
test
pop
and
pop
inc
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
